
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//normal.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_normal_free_menu-0x498>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x0
      10:	mov	x19, x2
      14:	b	28 <grub_normal_free_menu-0x470>
      18:	ldrb	w1, [x0]
      1c:	cmp	w1, #0x23
      20:	b.ne	50 <grub_normal_free_menu-0x448>  // b.any
      24:	bl	0 <grub_free>
      28:	mov	x0, x19
      2c:	bl	fb68 <grub_file_getline>
      30:	str	x0, [x20]
      34:	cbnz	x0, 18 <grub_normal_free_menu-0x480>
      38:	adrp	x0, 0 <grub_normal_free_menu-0x498>
      3c:	ldp	x19, x20, [sp, #16]
      40:	ldr	x0, [x0]
      44:	ldp	x29, x30, [sp], #32
      48:	ldr	w0, [x0]
      4c:	ret
      50:	mov	w0, #0x0                   	// #0
      54:	ldp	x19, x20, [sp, #16]
      58:	ldp	x29, x30, [sp], #32
      5c:	ret
	...
      68:	stp	x29, x30, [sp, #-32]!
      6c:	mov	x29, sp
      70:	ldrb	w0, [x1]
      74:	str	x19, [sp, #16]
      78:	mov	x19, x1
      7c:	cmp	w0, #0x31
      80:	cset	w0, eq  // eq = none
      84:	bl	baa0 <grub_set_more>
      88:	mov	x0, x19
      8c:	ldr	x19, [sp, #16]
      90:	ldp	x29, x30, [sp], #32
      94:	b	0 <grub_strdup>
      98:	stp	x29, x30, [sp, #-16]!
      9c:	mov	x29, sp
      a0:	bl	ce30 <grub_cls>
      a4:	mov	w0, #0x0                   	// #0
      a8:	ldp	x29, x30, [sp], #16
      ac:	ret
      b0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
      b4:	ldr	x2, [x0]
      b8:	ldp	w0, w1, [x2]
      bc:	cmp	w1, w0
      c0:	b.le	d4 <grub_normal_free_menu-0x3c4>
      c4:	add	w1, w0, #0x1
      c8:	mov	w0, #0x0                   	// #0
      cc:	str	w1, [x2]
      d0:	ret
      d4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
      d8:	mov	w0, #0x12                  	// #18
      dc:	ldr	x1, [x1]
      e0:	b	0 <grub_error>
      e4:	nop
	...
      f8:	stp	x29, x30, [sp, #-96]!
      fc:	mov	x29, sp
     100:	stp	x19, x20, [sp, #16]
     104:	mov	x19, x0
     108:	stp	x23, x24, [sp, #48]
     10c:	bl	cf68 <grub_env_get_menu>
     110:	cbz	x0, 2cc <grub_normal_free_menu-0x1cc>
     114:	mov	x24, x0
     118:	mov	w1, #0x33                  	// #51
     11c:	mov	x0, x19
     120:	stp	x21, x22, [sp, #32]
     124:	bl	0 <grub_file_open>
     128:	mov	x21, x0
     12c:	cbz	x0, 2f8 <grub_normal_free_menu-0x1a0>
     130:	mov	x1, #0x0                   	// #0
     134:	bl	0 <grub_bufio_open>
     138:	mov	x20, x0
     13c:	cbz	x0, 328 <grub_normal_free_menu-0x170>
     140:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     144:	stp	x25, x26, [sp, #64]
     148:	ldr	x26, [x0]
     14c:	str	x27, [sp, #80]
     150:	mov	x0, x26
     154:	bl	0 <grub_env_get>
     158:	mov	x21, x0
     15c:	cbz	x0, 168 <grub_normal_free_menu-0x330>
     160:	bl	0 <grub_strdup>
     164:	mov	x21, x0
     168:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     16c:	ldr	x27, [x0]
     170:	mov	x0, x27
     174:	bl	0 <grub_env_get>
     178:	mov	x25, x0
     17c:	cbz	x0, 188 <grub_normal_free_menu-0x310>
     180:	bl	0 <grub_strdup>
     184:	mov	x25, x0
     188:	ldrb	w0, [x19]
     18c:	cmp	w0, #0x28
     190:	b.eq	294 <grub_normal_free_menu-0x204>  // b.none
     194:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     198:	ldr	x0, [x0]
     19c:	bl	0 <grub_env_get>
     1a0:	mov	x1, x0
     1a4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
     1a8:	mov	x2, x19
     1ac:	ldr	x0, [x3]
     1b0:	bl	0 <grub_xasprintf>
     1b4:	mov	x19, x0
     1b8:	cbz	x0, 1f0 <grub_normal_free_menu-0x2a8>
     1bc:	mov	x1, x0
     1c0:	mov	x0, x26
     1c4:	bl	0 <grub_env_set>
     1c8:	mov	x0, x19
     1cc:	mov	w1, #0x2f                  	// #47
     1d0:	bl	0 <grub_strrchr>
     1d4:	cbz	x0, 1dc <grub_normal_free_menu-0x2bc>
     1d8:	strb	wzr, [x0]
     1dc:	mov	x1, x19
     1e0:	mov	x0, x27
     1e4:	bl	0 <grub_env_set>
     1e8:	mov	x0, x19
     1ec:	bl	0 <grub_free>
     1f0:	mov	x0, x26
     1f4:	bl	0 <grub_env_export>
     1f8:	mov	x0, x27
     1fc:	bl	0 <grub_env_export>
     200:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     204:	adrp	x23, 0 <grub_normal_free_menu-0x498>
     208:	ldr	x22, [x0]
     20c:	nop
     210:	bl	0 <grub_print_error>
     214:	str	wzr, [x22]
     218:	b	22c <grub_normal_free_menu-0x26c>
     21c:	ldrb	w1, [x0]
     220:	cmp	w1, #0x23
     224:	b.ne	2b4 <grub_normal_free_menu-0x1e4>  // b.any
     228:	bl	0 <grub_free>
     22c:	mov	x0, x20
     230:	bl	fb68 <grub_file_getline>
     234:	mov	x19, x0
     238:	cbnz	x0, 21c <grub_normal_free_menu-0x27c>
     23c:	cbz	x21, 31c <grub_normal_free_menu-0x17c>
     240:	mov	x0, x26
     244:	mov	x1, x21
     248:	bl	0 <grub_env_set>
     24c:	mov	x0, x27
     250:	cbz	x25, 314 <grub_normal_free_menu-0x184>
     254:	mov	x1, x25
     258:	bl	0 <grub_env_set>
     25c:	mov	x0, x21
     260:	bl	0 <grub_free>
     264:	mov	x0, x25
     268:	bl	0 <grub_free>
     26c:	mov	x0, x20
     270:	bl	0 <grub_file_close>
     274:	ldp	x21, x22, [sp, #32]
     278:	ldp	x25, x26, [sp, #64]
     27c:	ldr	x27, [sp, #80]
     280:	mov	x0, x24
     284:	ldp	x19, x20, [sp, #16]
     288:	ldp	x23, x24, [sp, #48]
     28c:	ldp	x29, x30, [sp], #96
     290:	ret
     294:	mov	x1, x19
     298:	mov	x0, x26
     29c:	bl	0 <grub_env_set>
     2a0:	mov	x0, x19
     2a4:	bl	0 <grub_strdup>
     2a8:	mov	x19, x0
     2ac:	cbnz	x0, 1c8 <grub_normal_free_menu-0x2d0>
     2b0:	b	1f0 <grub_normal_free_menu-0x2a8>
     2b4:	ldr	x1, [x23]
     2b8:	mov	x2, x20
     2bc:	bl	fc80 <grub_normal_parse_line>
     2c0:	mov	x0, x19
     2c4:	bl	0 <grub_free>
     2c8:	b	210 <grub_normal_free_menu-0x288>
     2cc:	mov	x0, #0x10                  	// #16
     2d0:	bl	0 <grub_zalloc>
     2d4:	mov	x24, x0
     2d8:	cbz	x0, 2fc <grub_normal_free_menu-0x19c>
     2dc:	stp	x21, x22, [sp, #32]
     2e0:	bl	cf88 <grub_env_set_menu>
     2e4:	mov	x0, x19
     2e8:	mov	w1, #0x33                  	// #51
     2ec:	bl	0 <grub_file_open>
     2f0:	mov	x21, x0
     2f4:	cbnz	x0, 130 <grub_normal_free_menu-0x368>
     2f8:	ldp	x21, x22, [sp, #32]
     2fc:	mov	x24, #0x0                   	// #0
     300:	mov	x0, x24
     304:	ldp	x19, x20, [sp, #16]
     308:	ldp	x23, x24, [sp, #48]
     30c:	ldp	x29, x30, [sp], #96
     310:	ret
     314:	bl	0 <grub_env_unset>
     318:	b	25c <grub_normal_free_menu-0x23c>
     31c:	mov	x0, x26
     320:	bl	0 <grub_env_unset>
     324:	b	24c <grub_normal_free_menu-0x24c>
     328:	mov	x0, x21
     32c:	mov	x24, #0x0                   	// #0
     330:	bl	0 <grub_file_close>
     334:	ldp	x21, x22, [sp, #32]
     338:	b	280 <grub_normal_free_menu-0x218>
     33c:	nop
	...
     370:	stp	x29, x30, [sp, #-32]!
     374:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     378:	mov	x29, sp
     37c:	stp	x19, x20, [sp, #16]
     380:	mov	x19, x0
     384:	ldr	x0, [x2]
     388:	ldr	x2, [x0]
     38c:	cbz	w1, 3e4 <grub_normal_free_menu-0xb4>
     390:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     394:	ldr	x0, [x0]
     398:	blr	x2
     39c:	cbnz	x0, 3b8 <grub_normal_free_menu-0xe0>
     3a0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     3a4:	ldp	x19, x20, [sp, #16]
     3a8:	ldr	x0, [x0]
     3ac:	ldp	x29, x30, [sp], #32
     3b0:	ldr	w0, [x0]
     3b4:	ret
     3b8:	bl	1890 <grub_cmdline_get>
     3bc:	str	x0, [x19]
     3c0:	cbnz	x0, 408 <grub_normal_free_menu-0x90>
     3c4:	bl	0 <grub_free>
     3c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     3cc:	ldr	x0, [x0]
     3d0:	ldr	w0, [x0]
     3d4:	str	xzr, [x19]
     3d8:	ldp	x19, x20, [sp, #16]
     3dc:	ldp	x29, x30, [sp], #32
     3e0:	ret
     3e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     3e8:	ldr	x0, [x0]
     3ec:	blr	x2
     3f0:	mov	x20, x0
     3f4:	cbz	x0, 3a0 <grub_normal_free_menu-0xf8>
     3f8:	mov	x0, x20
     3fc:	bl	1890 <grub_cmdline_get>
     400:	str	x0, [x19]
     404:	cbz	x0, 3f8 <grub_normal_free_menu-0xa0>
     408:	mov	w0, #0x0                   	// #0
     40c:	ldp	x19, x20, [sp, #16]
     410:	ldp	x29, x30, [sp], #32
     414:	ret
	...
     438:	stp	x29, x30, [sp, #-32]!
     43c:	mov	x0, x1
     440:	mov	x29, sp
     444:	str	x19, [sp, #16]
     448:	mov	x19, x1
     44c:	bl	2820 <read_command_list>
     450:	mov	x0, x19
     454:	bl	32b0 <read_fs_list>
     458:	mov	x0, x19
     45c:	bl	a3d0 <read_crypto_list>
     460:	mov	x0, x19
     464:	bl	bce8 <read_terminal_list>
     468:	mov	x0, x19
     46c:	bl	0 <grub_gettext_reread_prefix>
     470:	cbz	x19, 484 <grub_normal_free_menu-0x14>
     474:	mov	x0, x19
     478:	ldr	x19, [sp, #16]
     47c:	ldp	x29, x30, [sp], #32
     480:	b	0 <grub_strdup>
     484:	mov	x0, #0x0                   	// #0
     488:	ldr	x19, [sp, #16]
     48c:	ldp	x29, x30, [sp], #32
     490:	ret
     494:	nop

0000000000000498 <grub_normal_free_menu>:
     498:	stp	x29, x30, [sp, #-48]!
     49c:	mov	x29, sp
     4a0:	stp	x21, x22, [sp, #32]
     4a4:	mov	x22, x0
     4a8:	ldr	x21, [x0, #8]
     4ac:	cbz	x21, 554 <grub_normal_free_menu+0xbc>
     4b0:	stp	x19, x20, [sp, #16]
     4b4:	b	4ec <grub_normal_free_menu+0x54>
     4b8:	ldr	x1, [x20, #56]
     4bc:	cbnz	x1, 520 <grub_normal_free_menu+0x88>
     4c0:	ldr	x0, [x20, #8]
     4c4:	bl	0 <grub_free>
     4c8:	ldr	x0, [x20, #24]
     4cc:	bl	0 <grub_free>
     4d0:	ldr	x0, [x20]
     4d4:	bl	0 <grub_free>
     4d8:	ldr	x0, [x20, #40]
     4dc:	bl	0 <grub_free>
     4e0:	mov	x0, x20
     4e4:	bl	0 <grub_free>
     4e8:	cbz	x21, 550 <grub_normal_free_menu+0xb8>
     4ec:	ldr	x19, [x21, #32]
     4f0:	mov	x20, x21
     4f4:	ldr	x21, [x21, #72]
     4f8:	cbz	x19, 4b8 <grub_normal_free_menu+0x20>
     4fc:	nop
     500:	ldr	x0, [x19]
     504:	bl	0 <grub_free>
     508:	ldr	x19, [x19, #8]
     50c:	cbnz	x19, 500 <grub_normal_free_menu+0x68>
     510:	ldr	x0, [x20, #32]
     514:	bl	0 <grub_free>
     518:	ldr	x1, [x20, #56]
     51c:	cbz	x1, 4c0 <grub_normal_free_menu+0x28>
     520:	ldr	x0, [x1]
     524:	cbz	x0, 544 <grub_normal_free_menu+0xac>
     528:	mov	x19, #0x8                   	// #8
     52c:	nop
     530:	bl	0 <grub_free>
     534:	ldr	x1, [x20, #56]
     538:	ldr	x0, [x1, x19]
     53c:	add	x19, x19, #0x8
     540:	cbnz	x0, 530 <grub_normal_free_menu+0x98>
     544:	mov	x0, x1
     548:	bl	0 <grub_free>
     54c:	b	4c0 <grub_normal_free_menu+0x28>
     550:	ldp	x19, x20, [sp, #16]
     554:	mov	x0, x22
     558:	bl	0 <grub_free>
     55c:	ldp	x21, x22, [sp, #32]
     560:	ldp	x29, x30, [sp], #48
     564:	b	cf48 <grub_env_unset_menu>

0000000000000568 <grub_normal_init_page>:
     568:	stp	x29, x30, [sp, #-64]!
     56c:	mov	x29, sp
     570:	stp	x21, x22, [sp, #32]
     574:	mov	w21, w1
     578:	ldr	x1, [x0, #80]
     57c:	stp	x19, x20, [sp, #16]
     580:	mov	x19, x0
     584:	cbz	x1, 66c <grub_normal_init_page+0x104>
     588:	blr	x1
     58c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     590:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     594:	ldr	x1, [x1]
     598:	ldr	x0, [x0]
     59c:	ldr	x1, [x1]
     5a0:	blr	x1
     5a4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     5a8:	ldr	x1, [x1]
     5ac:	bl	0 <grub_xasprintf>
     5b0:	mov	x20, x0
     5b4:	cbz	x0, 65c <grub_normal_init_page+0xf4>
     5b8:	add	x2, sp, #0x38
     5bc:	add	x1, sp, #0x30
     5c0:	bl	da40 <grub_utf8_to_ucs4_alloc>
     5c4:	mov	x22, x0
     5c8:	mov	x0, x20
     5cc:	bl	0 <grub_free>
     5d0:	tbnz	x22, #63, 65c <grub_normal_init_page+0xf4>
     5d4:	ldp	x0, x1, [sp, #48]
     5d8:	mov	x2, x19
     5dc:	bl	93b0 <grub_getstringwidth>
     5e0:	mov	x20, x0
     5e4:	ldr	x1, [x19, #56]
     5e8:	mov	x0, x19
     5ec:	blr	x1
     5f0:	ands	w2, w0, #0xffff
     5f4:	mov	w0, #0x50                  	// #80
     5f8:	csel	w2, w2, w0, ne  // ne = any
     5fc:	sub	w2, w2, w20
     600:	mov	w1, #0x0                   	// #0
     604:	cmn	w2, #0x2
     608:	mov	x0, x19
     60c:	add	w2, w2, w2, lsr #31
     610:	ldr	x3, [x19, #72]
     614:	ubfx	x2, x2, #1, #16
     618:	csel	w2, w2, wzr, gt
     61c:	bfxil	w1, w2, #0, #16
     620:	bfi	w1, w21, #16, #16
     624:	blr	x3
     628:	ldp	x0, x1, [sp, #48]
     62c:	mov	x4, x19
     630:	mov	w3, #0x0                   	// #0
     634:	mov	w2, #0x0                   	// #0
     638:	bl	c430 <grub_print_ucs4>
     63c:	mov	x1, x19
     640:	mov	w0, #0xa                   	// #10
     644:	bl	bf40 <grub_putcode>
     648:	mov	w0, #0xa                   	// #10
     64c:	mov	x1, x19
     650:	bl	bf40 <grub_putcode>
     654:	ldr	x0, [sp, #48]
     658:	bl	0 <grub_free>
     65c:	ldp	x19, x20, [sp, #16]
     660:	ldp	x21, x22, [sp, #32]
     664:	ldp	x29, x30, [sp], #64
     668:	ret
     66c:	mov	x1, x0
     670:	mov	w0, #0xa                   	// #10
     674:	bl	bf40 <grub_putcode>
     678:	ldr	x1, [x19, #104]
     67c:	cbz	x1, 58c <grub_normal_init_page+0x24>
     680:	mov	x0, x19
     684:	b	588 <grub_normal_init_page+0x20>
	...
     6a0:	stp	x29, x30, [sp, #-80]!
     6a4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     6a8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     6ac:	mov	x29, sp
     6b0:	stp	x21, x22, [sp, #32]
     6b4:	mov	w22, w0
     6b8:	ldr	x21, [x2]
     6bc:	stp	x19, x20, [sp, #16]
     6c0:	ldr	x0, [x1]
     6c4:	stp	x23, x24, [sp, #48]
     6c8:	ldr	x1, [x21]
     6cc:	blr	x1
     6d0:	mov	x19, x0
     6d4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     6d8:	ldr	x1, [x21]
     6dc:	ldr	x0, [x2]
     6e0:	blr	x1
     6e4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     6e8:	cmp	w22, #0x0
     6ec:	ldr	x1, [x1]
     6f0:	csel	x1, x19, x1, ne  // ne = any
     6f4:	bl	0 <grub_xasprintf>
     6f8:	cbz	x0, 7a0 <grub_normal_init_page+0x238>
     6fc:	mov	x20, x0
     700:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     704:	ldr	x0, [x0]
     708:	ldr	x19, [x0]
     70c:	cbz	x19, 798 <grub_normal_init_page+0x230>
     710:	mov	x0, x19
     714:	mov	w1, #0x1                   	// #1
     718:	bl	568 <grub_normal_init_page>
     71c:	ldr	x2, [x19, #96]
     720:	mov	x0, x19
     724:	mov	w1, #0x1                   	// #1
     728:	cbz	x2, 730 <grub_normal_init_page+0x1c8>
     72c:	blr	x2
     730:	ldr	x1, [x19, #56]
     734:	mov	x0, x19
     738:	blr	x1
     73c:	mov	w4, w0
     740:	sub	w4, w4, #0x1
     744:	mov	x3, x19
     748:	and	w4, w4, #0xffff
     74c:	mov	x0, x20
     750:	cmp	w4, #0x1c
     754:	mov	w2, #0x6                   	// #6
     758:	mov	w1, #0x3                   	// #3
     75c:	b.hi	768 <grub_normal_init_page+0x200>  // b.pmore
     760:	mov	w2, #0x0                   	// #0
     764:	mov	w1, #0x0                   	// #0
     768:	bl	94e0 <grub_print_message_indented>
     76c:	mov	x1, x19
     770:	mov	w0, #0xa                   	// #10
     774:	bl	bf40 <grub_putcode>
     778:	mov	x1, x19
     77c:	mov	w0, #0xa                   	// #10
     780:	bl	bf40 <grub_putcode>
     784:	mov	x1, x19
     788:	mov	w0, #0xa                   	// #10
     78c:	bl	bf40 <grub_putcode>
     790:	ldr	x19, [x19]
     794:	cbnz	x19, 710 <grub_normal_init_page+0x1a8>
     798:	mov	x0, x20
     79c:	bl	0 <grub_free>
     7a0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     7a4:	ldr	x23, [x0]
     7a8:	ldr	w0, [x23]
     7ac:	cbnz	w0, 81c <grub_normal_init_page+0x2b4>
     7b0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     7b4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     7b8:	stp	x25, x26, [sp, #64]
     7bc:	adrp	x26, 0 <grub_normal_free_menu-0x498>
     7c0:	ldr	x25, [x1]
     7c4:	ldr	x24, [x0]
     7c8:	bl	0 <grub_print_error>
     7cc:	ldr	x1, [x21]
     7d0:	str	wzr, [x25]
     7d4:	mov	x0, x24
     7d8:	blr	x1
     7dc:	mov	x20, x0
     7e0:	cbz	x0, 818 <grub_normal_init_page+0x2b0>
     7e4:	cbnz	w22, 830 <grub_normal_init_page+0x2c8>
     7e8:	mov	x0, x20
     7ec:	bl	1890 <grub_cmdline_get>
     7f0:	mov	x19, x0
     7f4:	cbz	x0, 7e8 <grub_normal_init_page+0x280>
     7f8:	ldr	x1, [x26]
     7fc:	mov	x2, #0x0                   	// #0
     800:	mov	x0, x19
     804:	bl	fc80 <grub_normal_parse_line>
     808:	mov	x0, x19
     80c:	bl	0 <grub_free>
     810:	ldr	w0, [x23]
     814:	cbz	w0, 7c8 <grub_normal_init_page+0x260>
     818:	ldp	x25, x26, [sp, #64]
     81c:	ldp	x19, x20, [sp, #16]
     820:	ldp	x21, x22, [sp, #32]
     824:	ldp	x23, x24, [sp, #48]
     828:	ldp	x29, x30, [sp], #80
     82c:	ret
     830:	bl	1890 <grub_cmdline_get>
     834:	mov	x19, x0
     838:	cbnz	x0, 7f8 <grub_normal_init_page+0x290>
     83c:	ldp	x19, x20, [sp, #16]
     840:	ldp	x21, x22, [sp, #32]
     844:	ldp	x23, x24, [sp, #48]
     848:	ldp	x25, x26, [sp, #64]
     84c:	ldp	x29, x30, [sp], #80
     850:	b	0 <grub_free>
     854:	nop
	...

00000000000008a0 <grub_normal_execute>:
     8a0:	stp	x29, x30, [sp, #-64]!
     8a4:	mov	x29, sp
     8a8:	stp	x19, x20, [sp, #16]
     8ac:	mov	x19, x0
     8b0:	mov	w20, w1
     8b4:	stp	x21, x22, [sp, #32]
     8b8:	mov	w22, w2
     8bc:	cbz	w1, 8f8 <grub_normal_execute+0x58>
     8c0:	cbz	x19, 8e8 <grub_normal_execute+0x48>
     8c4:	mov	x0, x19
     8c8:	bl	f8 <grub_normal_free_menu-0x3a0>
     8cc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     8d0:	cmp	x0, #0x0
     8d4:	mov	x19, x0
     8d8:	ccmp	w22, #0x0, #0x0, ne  // ne = any
     8dc:	ldr	x1, [x1]
     8e0:	str	wzr, [x1]
     8e4:	b.eq	950 <grub_normal_execute+0xb0>  // b.none
     8e8:	ldp	x19, x20, [sp, #16]
     8ec:	ldp	x21, x22, [sp, #32]
     8f0:	ldp	x29, x30, [sp], #64
     8f4:	ret
     8f8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     8fc:	str	x23, [sp, #48]
     900:	ldr	x23, [x0]
     904:	mov	x0, x23
     908:	bl	0 <grub_env_get>
     90c:	mov	x21, x0
     910:	bl	2820 <read_command_list>
     914:	mov	x0, x21
     918:	bl	32b0 <read_fs_list>
     91c:	mov	x0, x21
     920:	bl	a3d0 <read_crypto_list>
     924:	mov	x0, x21
     928:	bl	bce8 <read_terminal_list>
     92c:	mov	x0, x21
     930:	bl	0 <grub_gettext_reread_prefix>
     934:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     938:	mov	x0, x23
     93c:	mov	x1, #0x0                   	// #0
     940:	ldr	x2, [x2]
     944:	bl	0 <grub_register_variable_hook>
     948:	ldr	x23, [sp, #48]
     94c:	b	8c0 <grub_normal_execute+0x20>
     950:	ldr	w1, [x0]
     954:	cbz	w1, 8e8 <grub_normal_execute+0x48>
     958:	mov	w1, w20
     95c:	mov	w2, #0x0                   	// #0
     960:	bl	4cb8 <grub_show_menu>
     964:	cbz	w20, 8e8 <grub_normal_execute+0x48>
     968:	mov	x0, x19
     96c:	ldp	x19, x20, [sp, #16]
     970:	ldp	x21, x22, [sp, #32]
     974:	ldp	x29, x30, [sp], #64
     978:	b	498 <grub_normal_free_menu>
     97c:	nop
	...

0000000000000998 <grub_enter_normal_mode>:
     998:	stp	x29, x30, [sp, #-48]!
     99c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     9a0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     9a4:	mov	x29, sp
     9a8:	stp	x19, x20, [sp, #16]
     9ac:	ldr	x20, [x2]
     9b0:	stp	x21, x22, [sp, #32]
     9b4:	mov	x21, x0
     9b8:	ldr	x22, [x1]
     9bc:	ldr	w1, [x20, #4]
     9c0:	mov	x0, x22
     9c4:	add	w1, w1, #0x1
     9c8:	str	w1, [x20, #4]
     9cc:	bl	0 <grub_env_get>
     9d0:	mov	x19, x0
     9d4:	bl	2820 <read_command_list>
     9d8:	mov	x0, x19
     9dc:	bl	32b0 <read_fs_list>
     9e0:	mov	x0, x19
     9e4:	bl	a3d0 <read_crypto_list>
     9e8:	mov	x0, x19
     9ec:	bl	bce8 <read_terminal_list>
     9f0:	mov	x0, x19
     9f4:	bl	0 <grub_gettext_reread_prefix>
     9f8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     9fc:	mov	x0, x22
     a00:	mov	x1, #0x0                   	// #0
     a04:	ldr	x2, [x2]
     a08:	bl	0 <grub_register_variable_hook>
     a0c:	cbz	x21, a30 <grub_enter_normal_mode+0x98>
     a10:	mov	x0, x21
     a14:	bl	f8 <grub_normal_free_menu-0x3a0>
     a18:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     a1c:	ldr	x2, [x2]
     a20:	str	wzr, [x2]
     a24:	cbz	x0, a30 <grub_enter_normal_mode+0x98>
     a28:	ldr	w1, [x0]
     a2c:	cbnz	w1, a68 <grub_enter_normal_mode+0xd0>
     a30:	mov	x0, #0x0                   	// #0
     a34:	bl	2d90 <grub_auth_check_authentication>
     a38:	cbnz	w0, a30 <grub_enter_normal_mode+0x98>
     a3c:	bl	6a0 <grub_normal_init_page+0x138>
     a40:	ldp	w1, w0, [x20]
     a44:	sub	w0, w0, #0x1
     a48:	str	w0, [x20, #4]
     a4c:	cbz	w1, a58 <grub_enter_normal_mode+0xc0>
     a50:	sub	w1, w1, #0x1
     a54:	str	w1, [x20]
     a58:	ldp	x19, x20, [sp, #16]
     a5c:	ldp	x21, x22, [sp, #32]
     a60:	ldp	x29, x30, [sp], #48
     a64:	ret
     a68:	mov	w2, #0x0                   	// #0
     a6c:	mov	w1, #0x0                   	// #0
     a70:	bl	4cb8 <grub_show_menu>
     a74:	mov	x0, #0x0                   	// #0
     a78:	bl	2d90 <grub_auth_check_authentication>
     a7c:	cbnz	w0, a30 <grub_enter_normal_mode+0x98>
     a80:	b	a3c <grub_enter_normal_mode+0xa4>
     a84:	nop
	...
     aa8:	stp	x29, x30, [sp, #-32]!
     aac:	mov	x29, sp
     ab0:	cbnz	w1, afc <grub_enter_normal_mode+0x164>
     ab4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     ab8:	ldr	x0, [x0]
     abc:	bl	0 <grub_env_get>
     ac0:	mov	x1, x0
     ac4:	cbz	x0, b00 <grub_enter_normal_mode+0x168>
     ac8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     acc:	str	x19, [sp, #16]
     ad0:	ldr	x0, [x0]
     ad4:	bl	0 <grub_xasprintf>
     ad8:	mov	x19, x0
     adc:	cbz	x0, b10 <grub_enter_normal_mode+0x178>
     ae0:	bl	998 <grub_enter_normal_mode>
     ae4:	mov	x0, x19
     ae8:	bl	0 <grub_free>
     aec:	mov	w0, #0x0                   	// #0
     af0:	ldr	x19, [sp, #16]
     af4:	ldp	x29, x30, [sp], #32
     af8:	ret
     afc:	ldr	x0, [x2]
     b00:	bl	998 <grub_enter_normal_mode>
     b04:	mov	w0, #0x0                   	// #0
     b08:	ldp	x29, x30, [sp], #32
     b0c:	ret
     b10:	mov	w0, #0x0                   	// #0
     b14:	ldr	x19, [sp, #16]
     b18:	ldp	x29, x30, [sp], #32
     b1c:	ret
	...

0000000000000b30 <grub_cmdline_run>:
     b30:	stp	x29, x30, [sp, #-32]!
     b34:	cmp	w1, #0x0
     b38:	mov	x29, sp
     b3c:	stp	x19, x20, [sp, #16]
     b40:	mov	w20, w0
     b44:	cset	w19, ne  // ne = any
     b48:	mov	x0, #0x0                   	// #0
     b4c:	bl	2d90 <grub_auth_check_authentication>
     b50:	cmp	w0, #0x0
     b54:	ccmp	w19, #0x0, #0x4, ne  // ne = any
     b58:	b.ne	b48 <grub_cmdline_run+0x18>  // b.any
     b5c:	cbnz	w0, b70 <grub_cmdline_run+0x40>
     b60:	mov	w0, w20
     b64:	ldp	x19, x20, [sp, #16]
     b68:	ldp	x29, x30, [sp], #32
     b6c:	b	6a0 <grub_normal_init_page+0x138>
     b70:	bl	0 <grub_print_error>
     b74:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     b78:	ldp	x19, x20, [sp, #16]
     b7c:	ldr	x0, [x0]
     b80:	str	wzr, [x0]
     b84:	ldp	x29, x30, [sp], #32
     b88:	ret
     b8c:	nop
	...

0000000000000b98 <grub_mod_init>:
     b98:	stp	x29, x30, [sp, #-48]!
     b9c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     ba0:	mov	x29, sp
     ba4:	stp	x19, x20, [sp, #16]
     ba8:	mov	x19, x0
     bac:	ldr	x0, [x1]
     bb0:	stp	x21, x22, [sp, #32]
     bb4:	bl	0 <grub_dl_load>
     bb8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     bbc:	ldr	x0, [x0]
     bc0:	str	wzr, [x0]
     bc4:	bl	3140 <grub_normal_auth_init>
     bc8:	bl	d2b0 <grub_context_init>
     bcc:	bl	fcf0 <grub_script_init>
     bd0:	bl	14920 <grub_menu_init>
     bd4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     bd8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     bdc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     be0:	ldr	x0, [x0]
     be4:	ldr	x20, [x2]
     be8:	ldr	x2, [x1]
     bec:	ldr	x1, [x0]
     bf0:	str	x2, [x0]
     bf4:	str	x1, [x20, #8]
     bf8:	cbz	x19, c04 <grub_mod_init+0x6c>
     bfc:	mov	x0, x19
     c00:	bl	0 <grub_dl_ref>
     c04:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     c08:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     c0c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     c10:	mov	w4, #0x0                   	// #0
     c14:	ldr	x3, [x2]
     c18:	mov	x2, #0x0                   	// #0
     c1c:	ldr	x1, [x1]
     c20:	ldr	x0, [x0]
     c24:	bl	0 <grub_register_command_prio>
     c28:	mov	x1, x0
     c2c:	mov	w0, #0x32                  	// #50
     c30:	str	x1, [x20, #16]
     c34:	bl	1710 <grub_set_history>
     c38:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     c3c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     c40:	mov	x1, #0x0                   	// #0
     c44:	ldr	x19, [x2]
     c48:	ldr	x2, [x0]
     c4c:	mov	x0, x19
     c50:	bl	0 <grub_register_variable_hook>
     c54:	mov	x0, x19
     c58:	bl	0 <grub_env_export>
     c5c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     c60:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     c64:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     c68:	mov	w4, #0x0                   	// #0
     c6c:	ldr	x3, [x2]
     c70:	mov	x2, #0x0                   	// #0
     c74:	ldr	x1, [x1]
     c78:	ldr	x0, [x0]
     c7c:	bl	0 <grub_register_command_prio>
     c80:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     c84:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     c88:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     c8c:	mov	w4, #0x0                   	// #0
     c90:	ldr	x3, [x2]
     c94:	mov	x2, #0x0                   	// #0
     c98:	ldr	x1, [x1]
     c9c:	ldr	x0, [x0]
     ca0:	bl	0 <grub_register_command_prio>
     ca4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     ca8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     cac:	mov	x1, #0x0                   	// #0
     cb0:	ldr	x2, [x2]
     cb4:	ldr	x20, [x0]
     cb8:	mov	x0, x20
     cbc:	bl	0 <grub_register_variable_hook>
     cc0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     cc4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     cc8:	mov	x1, #0x0                   	// #0
     ccc:	ldr	x19, [x2]
     cd0:	ldr	x2, [x0]
     cd4:	mov	x0, x19
     cd8:	bl	0 <grub_register_variable_hook>
     cdc:	mov	x0, x20
     ce0:	bl	0 <grub_env_export>
     ce4:	mov	x0, x19
     ce8:	bl	0 <grub_env_export>
     cec:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     cf0:	mov	x0, x20
     cf4:	ldr	x1, [x1]
     cf8:	bl	0 <grub_env_set>
     cfc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     d00:	mov	x0, x19
     d04:	ldr	x1, [x1]
     d08:	bl	0 <grub_env_set>
     d0c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     d10:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     d14:	ldr	x19, [x1]
     d18:	ldr	x22, [x0]
     d1c:	add	x21, x19, #0x50
     d20:	ldr	x20, [x19], #8
     d24:	mov	x1, x22
     d28:	mov	x0, x20
     d2c:	bl	0 <grub_env_set>
     d30:	mov	x0, x20
     d34:	bl	0 <grub_env_export>
     d38:	cmp	x19, x21
     d3c:	b.ne	d20 <grub_mod_init+0x188>  // b.any
     d40:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     d44:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     d48:	ldr	x19, [x1]
     d4c:	ldr	x1, [x0]
     d50:	mov	x0, x19
     d54:	bl	0 <grub_env_set>
     d58:	mov	x0, x19
     d5c:	bl	0 <grub_env_export>
     d60:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     d64:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     d68:	ldr	x19, [x1]
     d6c:	ldr	x1, [x0]
     d70:	mov	x0, x19
     d74:	bl	0 <grub_env_set>
     d78:	mov	x0, x19
     d7c:	ldp	x19, x20, [sp, #16]
     d80:	ldp	x21, x22, [sp, #32]
     d84:	ldp	x29, x30, [sp], #48
     d88:	b	0 <grub_env_export>
     d8c:	nop
	...

0000000000000e70 <grub_mod_fini>:
     e70:	stp	x29, x30, [sp, #-32]!
     e74:	mov	x29, sp
     e78:	str	x19, [sp, #16]
     e7c:	bl	d320 <grub_context_fini>
     e80:	bl	fe78 <grub_script_fini>
     e84:	bl	149f8 <grub_menu_fini>
     e88:	bl	31b0 <grub_normal_auth_fini>
     e8c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
     e90:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     e94:	mov	w0, #0x0                   	// #0
     e98:	ldr	x19, [x2]
     e9c:	ldr	x1, [x1]
     ea0:	ldr	x2, [x19, #8]
     ea4:	str	x2, [x1]
     ea8:	bl	1710 <grub_set_history>
     eac:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     eb0:	mov	x2, #0x0                   	// #0
     eb4:	mov	x1, #0x0                   	// #0
     eb8:	ldr	x0, [x0]
     ebc:	bl	0 <grub_register_variable_hook>
     ec0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     ec4:	ldr	x0, [x19, #16]
     ec8:	ldr	x1, [x1]
     ecc:	ldr	x19, [sp, #16]
     ed0:	str	xzr, [x1]
     ed4:	ldp	x29, x30, [sp], #32
     ed8:	b	0 <grub_unregister_command>
     edc:	nop
	...
     f00:	stp	x29, x30, [sp, #-64]!
     f04:	mov	x29, sp
     f08:	stp	x19, x20, [sp, #16]
     f0c:	mov	x20, x0
     f10:	mov	w19, w1
     f14:	cbnz	w2, f9c <grub_mod_fini+0x12c>
     f18:	adrp	x1, 0 <grub_normal_free_menu-0x498>
     f1c:	stp	x21, x22, [sp, #32]
     f20:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     f24:	ldr	x21, [x1]
     f28:	mov	w2, #0xa                   	// #10
     f2c:	ldr	x22, [x0]
     f30:	strh	w2, [sp, #56]
     f34:	ldr	x1, [x21]
     f38:	mov	x0, x22
     f3c:	blr	x1
     f40:	ldr	x1, [x21]
     f44:	add	x0, sp, #0x38
     f48:	blr	x1
     f4c:	cmp	w19, #0x2
     f50:	b.eq	1014 <grub_mod_fini+0x1a4>  // b.none
     f54:	b.ls	fc0 <grub_mod_fini+0x150>  // b.plast
     f58:	cmp	w19, #0x3
     f5c:	b.eq	1004 <grub_mod_fini+0x194>  // b.none
     f60:	cmp	w19, #0x4
     f64:	b.ne	1024 <grub_mod_fini+0x1b4>  // b.any
     f68:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     f6c:	ldr	x0, [x0]
     f70:	bl	0 <grub_puts_>
     f74:	nop
     f78:	ldr	x1, [x21]
     f7c:	mov	w0, #0xa                   	// #10
     f80:	strh	w0, [sp, #56]
     f84:	mov	x0, x22
     f88:	blr	x1
     f8c:	ldr	x1, [x21]
     f90:	add	x0, sp, #0x38
     f94:	blr	x1
     f98:	ldp	x21, x22, [sp, #32]
     f9c:	cmp	w19, #0x2
     fa0:	b.eq	fd4 <grub_mod_fini+0x164>  // b.none
     fa4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     fa8:	mov	x1, x20
     fac:	ldr	x0, [x0]
     fb0:	bl	0 <grub_printf>
     fb4:	ldp	x19, x20, [sp, #16]
     fb8:	ldp	x29, x30, [sp], #64
     fbc:	ret
     fc0:	cbz	w19, ff4 <grub_mod_fini+0x184>
     fc4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     fc8:	ldr	x0, [x0]
     fcc:	bl	0 <grub_puts_>
     fd0:	b	f78 <grub_mod_fini+0x108>
     fd4:	mov	x0, x20
     fd8:	bl	9e10 <grub_normal_print_device_info>
     fdc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     fe0:	ldp	x19, x20, [sp, #16]
     fe4:	ldr	x0, [x0]
     fe8:	str	wzr, [x0]
     fec:	ldp	x29, x30, [sp], #64
     ff0:	ret
     ff4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
     ff8:	ldr	x0, [x0]
     ffc:	bl	0 <grub_puts_>
    1000:	b	f78 <grub_mod_fini+0x108>
    1004:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1008:	ldr	x0, [x0]
    100c:	bl	0 <grub_puts_>
    1010:	b	f78 <grub_mod_fini+0x108>
    1014:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1018:	ldr	x0, [x0]
    101c:	bl	0 <grub_puts_>
    1020:	b	f78 <grub_mod_fini+0x108>
    1024:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1028:	ldr	x0, [x0]
    102c:	bl	0 <grub_puts_>
    1030:	b	f78 <grub_mod_fini+0x108>
    1034:	nop
	...
    1088:	stp	x29, x30, [sp, #-64]!
    108c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    1090:	mov	x29, sp
    1094:	stp	x19, x20, [sp, #16]
    1098:	ldr	x20, [x2]
    109c:	stp	x21, x22, [sp, #32]
    10a0:	mov	x22, x0
    10a4:	mov	x21, x1
    10a8:	ldp	w0, w1, [x20]
    10ac:	str	x23, [sp, #48]
    10b0:	cmp	w0, w1
    10b4:	b.lt	1158 <grub_mod_fini+0x2e8>  // b.tstop
    10b8:	ldr	w0, [x20, #8]
    10bc:	subs	w0, w0, #0x1
    10c0:	b.mi	1164 <grub_mod_fini+0x2f4>  // b.first
    10c4:	ldr	x1, [x20, #16]
    10c8:	str	w0, [x20, #8]
    10cc:	ldr	x0, [x1, w0, sxtw #3]
    10d0:	bl	0 <grub_free>
    10d4:	ldr	w2, [x20, #24]
    10d8:	sub	w2, w2, #0x1
    10dc:	str	w2, [x20, #24]
    10e0:	tbz	w2, #31, 10f0 <grub_mod_fini+0x280>
    10e4:	ldr	w0, [x20, #4]
    10e8:	add	w2, w2, w0
    10ec:	str	w2, [x20, #24]
    10f0:	ldr	x1, [x20, #16]
    10f4:	sxtw	x19, w2
    10f8:	add	x21, x21, #0x1
    10fc:	mov	x0, #0x0                   	// #0
    1100:	str	xzr, [x1, x19, lsl #3]
    1104:	lsl	x21, x21, #2
    1108:	bl	0 <grub_free>
    110c:	ldr	x23, [x20, #16]
    1110:	mov	x0, x21
    1114:	bl	0 <grub_malloc>
    1118:	ldr	x1, [x20, #16]
    111c:	str	x0, [x23, x19, lsl #3]
    1120:	ldr	x0, [x1, x19, lsl #3]
    1124:	cbz	x0, 116c <grub_mod_fini+0x2fc>
    1128:	sub	x21, x21, #0x4
    112c:	mov	x1, x22
    1130:	mov	x2, x21
    1134:	bl	0 <grub_memmove>
    1138:	ldr	x0, [x20, #16]
    113c:	ldr	x23, [sp, #48]
    1140:	ldr	x0, [x0, x19, lsl #3]
    1144:	ldp	x19, x20, [sp, #16]
    1148:	str	wzr, [x0, x21]
    114c:	ldp	x21, x22, [sp, #32]
    1150:	ldp	x29, x30, [sp], #64
    1154:	ret
    1158:	add	w0, w0, #0x1
    115c:	str	w0, [x20]
    1160:	b	10d4 <grub_mod_fini+0x264>
    1164:	add	w0, w0, w1
    1168:	b	10c4 <grub_mod_fini+0x254>
    116c:	bl	0 <grub_print_error>
    1170:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1174:	ldp	x19, x20, [sp, #16]
    1178:	ldr	x0, [x0]
    117c:	ldp	x21, x22, [sp, #32]
    1180:	str	wzr, [x0]
    1184:	ldr	x23, [sp, #48]
    1188:	ldp	x29, x30, [sp], #64
    118c:	ret
	...
    11a0:	stp	x29, x30, [sp, #-128]!
    11a4:	mov	x29, sp
    11a8:	stp	x21, x22, [sp, #32]
    11ac:	mov	x22, x3
    11b0:	ldr	x3, [x4]
    11b4:	stp	x23, x24, [sp, #48]
    11b8:	mov	w24, w5
    11bc:	mov	x23, x4
    11c0:	add	x4, x24, x22
    11c4:	cmp	x4, x3
    11c8:	b.ls	11dc <grub_mod_fini+0x36c>  // b.plast
    11cc:	ldp	x21, x22, [sp, #32]
    11d0:	ldp	x23, x24, [sp, #48]
    11d4:	ldp	x29, x30, [sp], #128
    11d8:	ret
    11dc:	stp	x19, x20, [sp, #16]
    11e0:	mov	x19, x0
    11e4:	add	x0, x2, x4, lsl #2
    11e8:	stp	x25, x26, [sp, #64]
    11ec:	mov	x25, x2
    11f0:	sub	x26, x3, x24
    11f4:	stp	x27, x28, [sp, #80]
    11f8:	add	x28, x2, x22, lsl #2
    11fc:	str	x0, [sp, #120]
    1200:	cbz	w1, 1454 <grub_mod_fini+0x5e4>
    1204:	sub	w1, w1, #0x1
    1208:	add	x20, x19, #0x20
    120c:	mov	w0, #0x20                  	// #32
    1210:	mov	x21, x19
    1214:	mov	x27, x19
    1218:	umaddl	x20, w1, w0, x20
    121c:	nop
    1220:	ldr	w2, [x27, #16]
    1224:	ldp	w3, w1, [x27, #4]
    1228:	add	x2, x2, x26
    122c:	ldr	x0, [x27, #24]
    1230:	udiv	x4, x2, x1
    1234:	ldr	x5, [x0, #72]
    1238:	msub	x1, x4, x1, x2
    123c:	add	w3, w3, w4
    1240:	strh	w1, [x27]
    1244:	strh	w3, [x27, #2]
    1248:	ldr	w1, [x27], #32
    124c:	blr	x5
    1250:	cmp	x20, x27
    1254:	b.ne	1220 <grub_mod_fini+0x3b0>  // b.any
    1258:	ldr	x0, [x23]
    125c:	mov	x26, x19
    1260:	sub	x27, x0, x24
    1264:	add	x0, x25, x0, lsl #2
    1268:	add	x1, x25, x27, lsl #2
    126c:	stp	x1, x0, [sp, #104]
    1270:	cmp	x1, x0
    1274:	b.cs	1304 <grub_mod_fini+0x494>  // b.hs, b.nlast
    1278:	ldr	x27, [sp, #104]
    127c:	b	12a8 <grub_mod_fini+0x438>
    1280:	ldr	w0, [x26, #4]
    1284:	sub	w0, w0, #0x1
    1288:	str	w0, [x26, #4]
    128c:	ldr	x1, [x26, #24]
    1290:	mov	w0, #0xa                   	// #10
    1294:	bl	bf40 <grub_putcode>
    1298:	ldr	x0, [sp, #112]
    129c:	add	x27, x27, #0x4
    12a0:	cmp	x27, x0
    12a4:	b.cs	12f8 <grub_mod_fini+0x488>  // b.hs, b.nlast
    12a8:	ldr	x1, [x26, #24]
    12ac:	mov	w0, #0x20                  	// #32
    12b0:	bl	bf40 <grub_putcode>
    12b4:	ldrh	w0, [x26]
    12b8:	ldr	w1, [x26, #8]
    12bc:	add	w0, w0, #0x1
    12c0:	and	w0, w0, #0xffff
    12c4:	strh	w0, [x26]
    12c8:	sub	w1, w1, #0x1
    12cc:	cmp	w0, w1
    12d0:	b.cc	1298 <grub_mod_fini+0x428>  // b.lo, b.ul, b.last
    12d4:	ldr	w0, [x26, #12]
    12d8:	ldrh	w1, [x26, #2]
    12dc:	strh	wzr, [x26]
    12e0:	sub	w0, w0, #0x1
    12e4:	add	w4, w1, #0x1
    12e8:	cmp	w1, w0
    12ec:	b.cs	1280 <grub_mod_fini+0x410>  // b.hs, b.nlast
    12f0:	strh	w4, [x26, #2]
    12f4:	b	128c <grub_mod_fini+0x41c>
    12f8:	add	x26, x26, #0x20
    12fc:	cmp	x20, x26
    1300:	b.ne	1278 <grub_mod_fini+0x408>  // b.any
    1304:	mov	x26, x19
    1308:	ldr	w2, [x26, #16]
    130c:	ldp	w3, w1, [x26, #4]
    1310:	add	x2, x2, x22
    1314:	ldr	x0, [x26, #24]
    1318:	udiv	x4, x2, x1
    131c:	ldr	x5, [x0, #72]
    1320:	msub	x1, x4, x1, x2
    1324:	add	w3, w3, w4
    1328:	strh	w1, [x26]
    132c:	strh	w3, [x26, #2]
    1330:	ldr	w1, [x26], #32
    1334:	blr	x5
    1338:	cmp	x20, x26
    133c:	b.ne	1308 <grub_mod_fini+0x498>  // b.any
    1340:	ldr	x2, [x23]
    1344:	mov	x0, x28
    1348:	ldr	x1, [sp, #120]
    134c:	add	x2, x2, #0x1
    1350:	sub	x2, x2, x22
    1354:	lsl	x2, x2, #2
    1358:	bl	0 <grub_memmove>
    135c:	ldr	x5, [x23]
    1360:	sub	x24, x5, x24
    1364:	str	x24, [x23]
    1368:	add	x25, x25, x24, lsl #2
    136c:	cmp	x25, x28
    1370:	b.ls	1400 <grub_mod_fini+0x590>  // b.plast
    1374:	nop
    1378:	mov	x23, x28
    137c:	b	13a4 <grub_mod_fini+0x534>
    1380:	ldr	w0, [x19, #4]
    1384:	sub	w0, w0, #0x1
    1388:	str	w0, [x19, #4]
    138c:	ldr	x1, [x19, #24]
    1390:	mov	w0, #0xa                   	// #10
    1394:	bl	bf40 <grub_putcode>
    1398:	add	x23, x23, #0x4
    139c:	cmp	x23, x25
    13a0:	b.cs	13f4 <grub_mod_fini+0x584>  // b.hs, b.nlast
    13a4:	ldr	w0, [x23]
    13a8:	ldr	x1, [x19, #24]
    13ac:	bl	bf40 <grub_putcode>
    13b0:	ldrh	w0, [x19]
    13b4:	ldr	w1, [x19, #8]
    13b8:	add	w0, w0, #0x1
    13bc:	and	w0, w0, #0xffff
    13c0:	strh	w0, [x19]
    13c4:	sub	w1, w1, #0x1
    13c8:	cmp	w0, w1
    13cc:	b.cc	1398 <grub_mod_fini+0x528>  // b.lo, b.ul, b.last
    13d0:	ldr	w0, [x19, #12]
    13d4:	ldrh	w1, [x19, #2]
    13d8:	strh	wzr, [x19]
    13dc:	sub	w0, w0, #0x1
    13e0:	add	w2, w1, #0x1
    13e4:	cmp	w1, w0
    13e8:	b.cs	1380 <grub_mod_fini+0x510>  // b.hs, b.nlast
    13ec:	strh	w2, [x19, #2]
    13f0:	b	138c <grub_mod_fini+0x51c>
    13f4:	add	x19, x19, #0x20
    13f8:	cmp	x20, x19
    13fc:	b.ne	1378 <grub_mod_fini+0x508>  // b.any
    1400:	ldr	w2, [x21, #16]
    1404:	ldp	w3, w1, [x21, #4]
    1408:	add	x2, x2, x22
    140c:	ldr	x0, [x21, #24]
    1410:	udiv	x4, x2, x1
    1414:	ldr	x5, [x0, #72]
    1418:	msub	x1, x4, x1, x2
    141c:	add	w3, w3, w4
    1420:	strh	w1, [x21]
    1424:	strh	w3, [x21, #2]
    1428:	ldr	w1, [x21], #32
    142c:	blr	x5
    1430:	cmp	x20, x21
    1434:	b.ne	1400 <grub_mod_fini+0x590>  // b.any
    1438:	ldp	x19, x20, [sp, #16]
    143c:	ldp	x21, x22, [sp, #32]
    1440:	ldp	x23, x24, [sp, #48]
    1444:	ldp	x25, x26, [sp, #64]
    1448:	ldp	x27, x28, [sp, #80]
    144c:	ldp	x29, x30, [sp], #128
    1450:	ret
    1454:	add	x2, x3, #0x1
    1458:	mov	x1, x0
    145c:	sub	x2, x2, x22
    1460:	mov	x0, x28
    1464:	lsl	x2, x2, #2
    1468:	bl	0 <grub_memmove>
    146c:	ldr	x0, [x23]
    1470:	sub	x24, x0, x24
    1474:	str	x24, [x23]
    1478:	b	1438 <grub_mod_fini+0x5c8>
    147c:	nop
    1480:	stp	x29, x30, [sp, #-96]!
    1484:	mov	x29, sp
    1488:	stp	x21, x22, [sp, #32]
    148c:	mov	x22, x6
    1490:	ldr	w6, [x6]
    1494:	stp	x19, x20, [sp, #16]
    1498:	mov	w21, w1
    149c:	mov	x19, x0
    14a0:	stp	x23, x24, [sp, #48]
    14a4:	mov	x23, x2
    14a8:	stp	x25, x26, [sp, #64]
    14ac:	mov	x26, x3
    14b0:	mov	x25, x5
    14b4:	str	x27, [sp, #80]
    14b8:	mov	x27, x4
    14bc:	cbz	w6, 16d0 <grub_mod_fini+0x860>
    14c0:	mov	x0, x22
    14c4:	nop
    14c8:	ldr	w2, [x0, #4]!
    14cc:	cbnz	w2, 14c8 <grub_mod_fini+0x658>
    14d0:	sub	x20, x0, x22
    14d4:	asr	x24, x20, #2
    14d8:	ldr	x2, [x26]
    14dc:	ldr	x3, [x27]
    14e0:	add	x4, x2, x24
    14e4:	ldr	x0, [x25]
    14e8:	cmp	x4, x3
    14ec:	b.cs	169c <grub_mod_fini+0x82c>  // b.hs, b.nlast
    14f0:	ldr	x1, [x23]
    14f4:	add	x3, x1, x24
    14f8:	sub	x2, x2, x1
    14fc:	add	x2, x2, #0x1
    1500:	add	x1, x0, x1, lsl #2
    1504:	add	x0, x0, x3, lsl #2
    1508:	lsl	x2, x2, #2
    150c:	bl	0 <grub_memmove>
    1510:	ldr	x3, [x23]
    1514:	mov	x2, x20
    1518:	ldr	x0, [x25]
    151c:	mov	x1, x22
    1520:	add	x0, x0, x3, lsl #2
    1524:	bl	0 <grub_memmove>
    1528:	ldr	x0, [x26]
    152c:	add	x0, x0, x24
    1530:	str	x0, [x26]
    1534:	ldr	x27, [x23]
    1538:	cbz	w21, 16fc <grub_mod_fini+0x88c>
    153c:	sub	w21, w21, #0x1
    1540:	add	x0, x19, #0x20
    1544:	mov	w1, #0x20                  	// #32
    1548:	mov	x20, x19
    154c:	mov	x22, x19
    1550:	umaddl	x21, w21, w1, x0
    1554:	nop
    1558:	ldr	w2, [x22, #16]
    155c:	ldp	w3, w1, [x22, #4]
    1560:	add	x2, x2, x27
    1564:	ldr	x0, [x22, #24]
    1568:	udiv	x4, x2, x1
    156c:	ldr	x5, [x0, #72]
    1570:	msub	x1, x4, x1, x2
    1574:	add	w3, w3, w4
    1578:	strh	w1, [x22]
    157c:	strh	w3, [x22, #2]
    1580:	ldr	w1, [x22], #32
    1584:	blr	x5
    1588:	cmp	x21, x22
    158c:	b.ne	1558 <grub_mod_fini+0x6e8>  // b.any
    1590:	ldr	x25, [x25]
    1594:	ldr	x0, [x23]
    1598:	ldr	x22, [x26]
    159c:	add	x22, x25, x22, lsl #2
    15a0:	add	x25, x25, x0, lsl #2
    15a4:	cmp	x22, x25
    15a8:	b.ls	163c <grub_mod_fini+0x7cc>  // b.plast
    15ac:	nop
    15b0:	mov	x26, x25
    15b4:	b	15dc <grub_mod_fini+0x76c>
    15b8:	ldr	w0, [x19, #4]
    15bc:	sub	w0, w0, #0x1
    15c0:	str	w0, [x19, #4]
    15c4:	ldr	x1, [x19, #24]
    15c8:	mov	w0, #0xa                   	// #10
    15cc:	bl	bf40 <grub_putcode>
    15d0:	add	x26, x26, #0x4
    15d4:	cmp	x26, x22
    15d8:	b.cs	162c <grub_mod_fini+0x7bc>  // b.hs, b.nlast
    15dc:	ldr	w0, [x26]
    15e0:	ldr	x1, [x19, #24]
    15e4:	bl	bf40 <grub_putcode>
    15e8:	ldrh	w0, [x19]
    15ec:	ldr	w1, [x19, #8]
    15f0:	add	w0, w0, #0x1
    15f4:	and	w0, w0, #0xffff
    15f8:	strh	w0, [x19]
    15fc:	sub	w1, w1, #0x1
    1600:	cmp	w0, w1
    1604:	b.cc	15d0 <grub_mod_fini+0x760>  // b.lo, b.ul, b.last
    1608:	ldr	w0, [x19, #12]
    160c:	ldrh	w1, [x19, #2]
    1610:	strh	wzr, [x19]
    1614:	sub	w0, w0, #0x1
    1618:	add	w2, w1, #0x1
    161c:	cmp	w1, w0
    1620:	b.cs	15b8 <grub_mod_fini+0x748>  // b.hs, b.nlast
    1624:	strh	w2, [x19, #2]
    1628:	b	15c4 <grub_mod_fini+0x754>
    162c:	add	x19, x19, #0x20
    1630:	cmp	x21, x19
    1634:	b.ne	15b0 <grub_mod_fini+0x740>  // b.any
    1638:	ldr	x0, [x23]
    163c:	add	x24, x24, x0
    1640:	str	x24, [x23]
    1644:	nop
    1648:	ldr	w2, [x20, #16]
    164c:	ldp	w3, w1, [x20, #4]
    1650:	add	x2, x2, x24
    1654:	ldr	x0, [x20, #24]
    1658:	udiv	x4, x2, x1
    165c:	ldr	x5, [x0, #72]
    1660:	msub	x1, x4, x1, x2
    1664:	add	w3, w3, w4
    1668:	strh	w1, [x20]
    166c:	strh	w3, [x20, #2]
    1670:	ldr	w1, [x20], #32
    1674:	blr	x5
    1678:	cmp	x21, x20
    167c:	b.ne	1648 <grub_mod_fini+0x7d8>  // b.any
    1680:	ldp	x19, x20, [sp, #16]
    1684:	ldp	x21, x22, [sp, #32]
    1688:	ldp	x23, x24, [sp, #48]
    168c:	ldp	x25, x26, [sp, #64]
    1690:	ldr	x27, [sp, #80]
    1694:	ldp	x29, x30, [sp], #96
    1698:	ret
    169c:	lsl	x1, x3, #1
    16a0:	str	x1, [x27]
    16a4:	lsl	x1, x3, #3
    16a8:	bl	0 <grub_realloc>
    16ac:	cbz	x0, 16dc <grub_mod_fini+0x86c>
    16b0:	ldr	x1, [x27]
    16b4:	str	x0, [x25]
    16b8:	ldr	x2, [x26]
    16bc:	add	x0, x2, x24
    16c0:	cmp	x0, x1
    16c4:	b.cs	1680 <grub_mod_fini+0x810>  // b.hs, b.nlast
    16c8:	ldr	x0, [x25]
    16cc:	b	14f0 <grub_mod_fini+0x680>
    16d0:	mov	x24, #0x0                   	// #0
    16d4:	mov	x20, #0x0                   	// #0
    16d8:	b	14d8 <grub_mod_fini+0x668>
    16dc:	bl	0 <grub_print_error>
    16e0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    16e4:	ldr	x1, [x27]
    16e8:	ldr	x0, [x0]
    16ec:	lsr	x1, x1, #1
    16f0:	str	wzr, [x0]
    16f4:	str	x1, [x27]
    16f8:	b	16b8 <grub_mod_fini+0x848>
    16fc:	add	x24, x27, x24
    1700:	str	x24, [x23]
    1704:	b	1680 <grub_mod_fini+0x810>
	...

0000000000001710 <grub_set_history>:
    1710:	stp	x29, x30, [sp, #-64]!
    1714:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    1718:	mov	x29, sp
    171c:	stp	x19, x20, [sp, #16]
    1720:	ldr	x19, [x1]
    1724:	stp	x21, x22, [sp, #32]
    1728:	mov	w21, w0
    172c:	sbfiz	x0, x0, #3, #32
    1730:	ldr	x22, [x19, #16]
    1734:	bl	0 <grub_malloc>
    1738:	str	x0, [x19, #16]
    173c:	cbz	x22, 17e0 <grub_set_history+0xd0>
    1740:	stp	x23, x24, [sp, #48]
    1744:	ldr	w23, [x19]
    1748:	ldr	w2, [x19, #8]
    174c:	cmp	w23, w21
    1750:	b.le	17c8 <grub_set_history+0xb8>
    1754:	sub	w23, w23, w21
    1758:	str	w21, [x19]
    175c:	sxtw	x2, w2
    1760:	mov	x20, #0x1                   	// #1
    1764:	sxtw	x24, w23
    1768:	subs	x2, x2, x20
    176c:	add	x24, x24, x20
    1770:	b.mi	179c <grub_set_history+0x8c>  // b.first
    1774:	nop
    1778:	ldr	x0, [x22, x2, lsl #3]
    177c:	add	x20, x20, #0x1
    1780:	bl	0 <grub_free>
    1784:	cmp	x20, x24
    1788:	b.cs	17b8 <grub_set_history+0xa8>  // b.hs, b.nlast
    178c:	ldr	w2, [x19, #8]
    1790:	sxtw	x2, w2
    1794:	subs	x2, x2, x20
    1798:	b.pl	1778 <grub_set_history+0x68>  // b.nfrst
    179c:	ldrsw	x0, [x19, #4]
    17a0:	add	x20, x20, #0x1
    17a4:	add	x2, x0, x2
    17a8:	ldr	x0, [x22, x2, lsl #3]
    17ac:	bl	0 <grub_free>
    17b0:	cmp	x24, x20
    17b4:	b.hi	178c <grub_set_history+0x7c>  // b.pmore
    17b8:	ldr	w2, [x19, #8]
    17bc:	sub	w2, w2, w23
    17c0:	str	w2, [x19, #8]
    17c4:	tbnz	w2, #31, 1824 <grub_set_history+0x114>
    17c8:	ldr	w3, [x19, #24]
    17cc:	cmp	w3, w2
    17d0:	b.lt	1808 <grub_set_history+0xf8>  // b.tstop
    17d4:	ldr	w0, [x19]
    17d8:	cbnz	w0, 1840 <grub_set_history+0x130>
    17dc:	ldp	x23, x24, [sp, #48]
    17e0:	mov	x0, x22
    17e4:	bl	0 <grub_free>
    17e8:	str	wzr, [x19, #24]
    17ec:	ldr	w1, [x19]
    17f0:	mov	w0, #0x0                   	// #0
    17f4:	stp	w21, w1, [x19, #4]
    17f8:	ldp	x19, x20, [sp, #16]
    17fc:	ldp	x21, x22, [sp, #32]
    1800:	ldp	x29, x30, [sp], #64
    1804:	ret
    1808:	ldr	x0, [x19, #16]
    180c:	sub	w2, w2, w3
    1810:	add	x1, x22, w3, sxtw #3
    1814:	sbfiz	x2, x2, #3, #32
    1818:	bl	0 <grub_memmove>
    181c:	ldp	x23, x24, [sp, #48]
    1820:	b	17e0 <grub_set_history+0xd0>
    1824:	ldr	w0, [x19, #4]
    1828:	ldr	w3, [x19, #24]
    182c:	add	w2, w2, w0
    1830:	str	w2, [x19, #8]
    1834:	cmp	w3, w2
    1838:	b.ge	17d4 <grub_set_history+0xc4>  // b.tcont
    183c:	b	1808 <grub_set_history+0xf8>
    1840:	ldr	w2, [x19, #4]
    1844:	add	x1, x22, w3, sxtw #3
    1848:	ldr	x0, [x19, #16]
    184c:	sub	w2, w2, w3
    1850:	sbfiz	x2, x2, #3, #32
    1854:	bl	0 <grub_memmove>
    1858:	ldrsw	x2, [x19, #24]
    185c:	mov	x1, x22
    1860:	ldrsw	x0, [x19, #4]
    1864:	ldr	x3, [x19, #16]
    1868:	sub	x0, x0, x2
    186c:	ldrsw	x2, [x19, #8]
    1870:	add	x0, x3, x0, lsl #3
    1874:	lsl	x2, x2, #3
    1878:	bl	0 <grub_memmove>
    187c:	ldp	x23, x24, [sp, #48]
    1880:	b	17e0 <grub_set_history+0xd0>
    1884:	nop
	...

0000000000001890 <grub_cmdline_get>:
    1890:	stp	x29, x30, [sp, #-176]!
    1894:	mov	x1, #0x100                 	// #256
    1898:	mov	x29, sp
    189c:	stp	x23, x24, [sp, #48]
    18a0:	mov	x24, x0
    18a4:	mov	x0, #0x400                 	// #1024
    18a8:	stp	x27, x28, [sp, #80]
    18ac:	str	x1, [sp, #160]
    18b0:	bl	0 <grub_malloc>
    18b4:	str	x0, [sp, #152]
    18b8:	mov	x28, x0
    18bc:	cbz	x0, 1bf0 <grub_cmdline_get+0x360>
    18c0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    18c4:	stp	x19, x20, [sp, #16]
    18c8:	ldr	x20, [x0]
    18cc:	stp	x21, x22, [sp, #32]
    18d0:	stp	x25, x26, [sp, #64]
    18d4:	ldr	x19, [x20]
    18d8:	stp	xzr, xzr, [sp, #136]
    18dc:	str	wzr, [x28]
    18e0:	cbz	x19, 1904 <grub_cmdline_get+0x74>
    18e4:	nop
    18e8:	ldr	x1, [x19, #64]
    18ec:	mov	x0, x19
    18f0:	blr	x1
    18f4:	tst	w0, #0xffff
    18f8:	b.ne	1fcc <grub_cmdline_get+0x73c>  // b.any
    18fc:	ldr	x19, [x19]
    1900:	cbnz	x19, 18e8 <grub_cmdline_get+0x58>
    1904:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    1908:	mov	x0, x24
    190c:	mov	w19, #0x0                   	// #0
    1910:	ldr	x26, [x1]
    1914:	ldr	x1, [x26]
    1918:	blr	x1
    191c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1920:	ldr	x1, [x26]
    1924:	ldr	x0, [x0]
    1928:	str	x0, [sp, #112]
    192c:	blr	x1
    1930:	bl	ba68 <grub_normal_reset_more>
    1934:	mov	x0, x24
    1938:	bl	0 <grub_strlen>
    193c:	ldr	x1, [x20]
    1940:	mov	x22, x0
    1944:	add	x23, x0, #0x3
    1948:	mov	x0, #0x0                   	// #0
    194c:	cbz	x1, 1960 <grub_cmdline_get+0xd0>
    1950:	ldr	x1, [x1]
    1954:	add	w19, w19, #0x1
    1958:	cbnz	x1, 1950 <grub_cmdline_get+0xc0>
    195c:	ubfiz	x0, x19, #5, #32
    1960:	bl	0 <grub_malloc>
    1964:	mov	x21, x0
    1968:	cbz	x0, 1fec <grub_cmdline_get+0x75c>
    196c:	lsl	x0, x23, #2
    1970:	bl	0 <grub_malloc>
    1974:	mov	x28, x0
    1978:	cbz	x0, 1bd4 <grub_cmdline_get+0x344>
    197c:	add	x1, x22, #0x2
    1980:	mov	x2, x24
    1984:	mov	x4, #0x0                   	// #0
    1988:	mov	x3, #0xffffffffffffffff    	// #-1
    198c:	bl	d8d8 <grub_utf8_to_ucs4>
    1990:	add	x25, x28, x0, lsl #2
    1994:	ldr	x27, [x20]
    1998:	mov	w1, #0x20                  	// #32
    199c:	str	w1, [x28, x0, lsl #2]
    19a0:	add	x25, x25, #0x4
    19a4:	mov	x20, x21
    19a8:	mov	w22, #0x50                  	// #80
    19ac:	mov	w23, #0x18                  	// #24
    19b0:	cbz	x27, 1a40 <grub_cmdline_get+0x1b0>
    19b4:	nop
    19b8:	str	x27, [x20, #24]
    19bc:	mov	x2, x27
    19c0:	mov	x1, x25
    19c4:	mov	x0, x28
    19c8:	bl	93b0 <grub_getstringwidth>
    19cc:	mov	x1, x0
    19d0:	ldr	x2, [x20, #24]
    19d4:	str	w1, [x20, #16]
    19d8:	strh	w0, [x20]
    19dc:	mov	x0, x2
    19e0:	ldr	x1, [x2, #64]
    19e4:	blr	x1
    19e8:	lsr	w1, w0, #16
    19ec:	ldr	x2, [x20, #24]
    19f0:	str	w1, [x20, #4]
    19f4:	lsr	w3, w0, #16
    19f8:	strh	w3, [x20, #2]
    19fc:	mov	x0, x2
    1a00:	ldr	x1, [x2, #56]
    1a04:	blr	x1
    1a08:	ands	w3, w0, #0xffff
    1a0c:	ldr	x1, [x20, #24]
    1a10:	csel	w3, w3, w22, ne  // ne = any
    1a14:	mov	x0, x1
    1a18:	ldr	x1, [x1, #56]
    1a1c:	str	w3, [x20, #8]
    1a20:	blr	x1
    1a24:	cmp	wzr, w0, lsr #16
    1a28:	lsr	w0, w0, #16
    1a2c:	ldr	x27, [x27]
    1a30:	b.eq	1f9c <grub_cmdline_get+0x70c>  // b.none
    1a34:	str	w0, [x20, #12]
    1a38:	add	x20, x20, #0x20
    1a3c:	cbnz	x27, 19b8 <grub_cmdline_get+0x128>
    1a40:	mov	x0, x28
    1a44:	bl	0 <grub_free>
    1a48:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1a4c:	ldr	x22, [x0]
    1a50:	ldr	w0, [x22]
    1a54:	cbz	w0, 1fc0 <grub_cmdline_get+0x730>
    1a58:	bl	0 <grub_refresh>
    1a5c:	sub	w20, w19, #0x1
    1a60:	add	x0, x21, #0x20
    1a64:	mov	w1, #0x20                  	// #32
    1a68:	mov	w23, #0x61                  	// #97
    1a6c:	str	wzr, [sp, #100]
    1a70:	movk	w23, #0x200, lsl #16
    1a74:	umaddl	x20, w20, w1, x0
    1a78:	bl	0 <grub_getkey>
    1a7c:	cmp	w0, #0xd
    1a80:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    1a84:	b.eq	1b1c <grub_cmdline_get+0x28c>  // b.none
    1a88:	cmp	w0, w23
    1a8c:	b.eq	1ac4 <grub_cmdline_get+0x234>  // b.none
    1a90:	b.gt	1e4c <grub_cmdline_get+0x5bc>
    1a94:	mov	w1, #0x48                  	// #72
    1a98:	movk	w1, #0x80, lsl #16
    1a9c:	cmp	w0, w1
    1aa0:	b.eq	1f00 <grub_cmdline_get+0x670>  // b.none
    1aa4:	b.gt	1c94 <grub_cmdline_get+0x404>
    1aa8:	cmp	w0, #0x1b
    1aac:	b.eq	1fe4 <grub_cmdline_get+0x754>  // b.none
    1ab0:	b.le	1c04 <grub_cmdline_get+0x374>
    1ab4:	mov	w1, #0x47                  	// #71
    1ab8:	movk	w1, #0x80, lsl #16
    1abc:	cmp	w0, w1
    1ac0:	b.ne	255c <grub_cmdline_get+0xccc>  // b.any
    1ac4:	str	xzr, [sp, #136]
    1ac8:	cbz	w19, 1b08 <grub_cmdline_get+0x278>
    1acc:	mov	x25, x21
    1ad0:	ldp	w2, w1, [x25, #4]
    1ad4:	ldr	w4, [x25, #16]
    1ad8:	ldr	x0, [x25, #24]
    1adc:	udiv	x3, x4, x1
    1ae0:	ldr	x5, [x0, #72]
    1ae4:	msub	x1, x3, x1, x4
    1ae8:	add	w2, w2, w3
    1aec:	strh	w1, [x25]
    1af0:	strh	w2, [x25, #2]
    1af4:	ldr	w1, [x25], #32
    1af8:	blr	x5
    1afc:	cmp	x20, x25
    1b00:	b.ne	1ad0 <grub_cmdline_get+0x240>  // b.any
    1b04:	nop
    1b08:	bl	0 <grub_refresh>
    1b0c:	bl	0 <grub_getkey>
    1b10:	cmp	w0, #0xd
    1b14:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    1b18:	b.ne	1a88 <grub_cmdline_get+0x1f8>  // b.any
    1b1c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1b20:	ldr	x1, [x26]
    1b24:	ldr	x0, [x0]
    1b28:	blr	x1
    1b2c:	bl	0 <grub_refresh>
    1b30:	ldr	x23, [sp, #152]
    1b34:	mov	x0, x23
    1b38:	ldr	w1, [x23]
    1b3c:	cbz	w1, 25f4 <grub_cmdline_get+0xd64>
    1b40:	ldr	w2, [x0, #4]!
    1b44:	cbnz	w2, 1b40 <grub_cmdline_get+0x2b0>
    1b48:	ldr	x2, [sp, #144]
    1b4c:	cmp	x23, x0
    1b50:	add	x1, x2, #0x1
    1b54:	b.eq	1bcc <grub_cmdline_get+0x33c>  // b.none
    1b58:	ldr	w0, [x22, #4]
    1b5c:	lsl	x19, x1, #2
    1b60:	ldr	w1, [x22, #24]
    1b64:	ldr	x2, [x22, #16]
    1b68:	udiv	w20, w1, w0
    1b6c:	msub	w20, w20, w0, w1
    1b70:	sxtw	x20, w20
    1b74:	ldr	x0, [x2, x20, lsl #3]
    1b78:	str	wzr, [sp, #168]
    1b7c:	bl	0 <grub_free>
    1b80:	ldr	x24, [x22, #16]
    1b84:	mov	x0, x19
    1b88:	bl	0 <grub_malloc>
    1b8c:	ldr	x1, [x22, #16]
    1b90:	str	x0, [x24, x20, lsl #3]
    1b94:	ldr	x0, [x1, x20, lsl #3]
    1b98:	cbz	x0, 25e0 <grub_cmdline_get+0xd50>
    1b9c:	sub	x19, x19, #0x4
    1ba0:	mov	x1, x23
    1ba4:	mov	x2, x19
    1ba8:	bl	0 <grub_memmove>
    1bac:	ldr	x0, [x22, #16]
    1bb0:	ldr	x0, [x0, x20, lsl #3]
    1bb4:	str	wzr, [x0, x19]
    1bb8:	add	x0, sp, #0xa8
    1bbc:	mov	x1, #0x0                   	// #0
    1bc0:	bl	1088 <grub_mod_fini+0x218>
    1bc4:	ldp	x1, x0, [sp, #144]
    1bc8:	add	x1, x1, #0x1
    1bcc:	bl	d708 <grub_ucs4_to_utf8_alloc>
    1bd0:	mov	x28, x0
    1bd4:	ldr	x0, [sp, #152]
    1bd8:	bl	0 <grub_free>
    1bdc:	mov	x0, x21
    1be0:	bl	0 <grub_free>
    1be4:	ldp	x19, x20, [sp, #16]
    1be8:	ldp	x21, x22, [sp, #32]
    1bec:	ldp	x25, x26, [sp, #64]
    1bf0:	mov	x0, x28
    1bf4:	ldp	x23, x24, [sp, #48]
    1bf8:	ldp	x27, x28, [sp, #80]
    1bfc:	ldp	x29, x30, [sp], #176
    1c00:	ret
    1c04:	cmp	w0, #0x8
    1c08:	b.ne	1d48 <grub_cmdline_get+0x4b8>  // b.any
    1c0c:	ldr	x28, [sp, #136]
    1c10:	cbz	x28, 1b08 <grub_cmdline_get+0x278>
    1c14:	sub	x28, x28, #0x1
    1c18:	str	x28, [sp, #136]
    1c1c:	cbz	w19, 1c64 <grub_cmdline_get+0x3d4>
    1c20:	mov	x25, x21
    1c24:	nop
    1c28:	ldr	w2, [x25, #16]
    1c2c:	ldp	w4, w1, [x25, #4]
    1c30:	add	x2, x2, x28
    1c34:	ldr	x0, [x25, #24]
    1c38:	udiv	x3, x2, x1
    1c3c:	ldr	x5, [x0, #72]
    1c40:	msub	x1, x3, x1, x2
    1c44:	add	w4, w4, w3
    1c48:	strh	w1, [x25]
    1c4c:	strh	w4, [x25, #2]
    1c50:	ldr	w1, [x25], #32
    1c54:	blr	x5
    1c58:	cmp	x20, x25
    1c5c:	b.ne	1c28 <grub_cmdline_get+0x398>  // b.any
    1c60:	ldr	x28, [sp, #136]
    1c64:	ldr	x0, [sp, #144]
    1c68:	cmp	x0, x28
    1c6c:	b.ls	1b08 <grub_cmdline_get+0x278>  // b.plast
    1c70:	ldr	x2, [sp, #152]
    1c74:	mov	x3, x28
    1c78:	add	x4, sp, #0x90
    1c7c:	mov	w1, w19
    1c80:	mov	x0, x21
    1c84:	mov	w5, #0x1                   	// #1
    1c88:	bl	11a0 <grub_mod_fini+0x330>
    1c8c:	bl	0 <grub_refresh>
    1c90:	b	1b0c <grub_cmdline_get+0x27c>
    1c94:	mov	w1, #0x4f                  	// #79
    1c98:	movk	w1, #0x80, lsl #16
    1c9c:	cmp	w0, w1
    1ca0:	b.eq	2018 <grub_cmdline_get+0x788>  // b.none
    1ca4:	b.le	1ccc <grub_cmdline_get+0x43c>
    1ca8:	mov	w1, #0x50                  	// #80
    1cac:	movk	w1, #0x80, lsl #16
    1cb0:	cmp	w0, w1
    1cb4:	b.eq	21e0 <grub_cmdline_get+0x950>  // b.none
    1cb8:	add	w1, w1, #0x3
    1cbc:	cmp	w0, w1
    1cc0:	b.eq	1c60 <grub_cmdline_get+0x3d0>  // b.none
    1cc4:	bl	0 <grub_refresh>
    1cc8:	b	1b0c <grub_cmdline_get+0x27c>
    1ccc:	mov	w1, #0x4b                  	// #75
    1cd0:	movk	w1, #0x80, lsl #16
    1cd4:	cmp	w0, w1
    1cd8:	b.eq	2188 <grub_cmdline_get+0x8f8>  // b.none
    1cdc:	add	w1, w1, #0x2
    1ce0:	cmp	w0, w1
    1ce4:	b.ne	1b08 <grub_cmdline_get+0x278>  // b.any
    1ce8:	ldp	x25, x0, [sp, #136]
    1cec:	cmp	x25, x0
    1cf0:	b.cs	1b08 <grub_cmdline_get+0x278>  // b.hs, b.nlast
    1cf4:	add	x25, x25, #0x1
    1cf8:	str	x25, [sp, #136]
    1cfc:	cbz	w19, 1b08 <grub_cmdline_get+0x278>
    1d00:	mov	x28, x21
    1d04:	nop
    1d08:	ldr	w2, [x28, #16]
    1d0c:	ldp	w3, w1, [x28, #4]
    1d10:	add	x2, x2, x25
    1d14:	ldr	x0, [x28, #24]
    1d18:	udiv	x4, x2, x1
    1d1c:	ldr	x5, [x0, #72]
    1d20:	msub	x1, x4, x1, x2
    1d24:	add	w3, w3, w4
    1d28:	strh	w1, [x28]
    1d2c:	strh	w3, [x28, #2]
    1d30:	ldr	w1, [x28], #32
    1d34:	blr	x5
    1d38:	cmp	x20, x28
    1d3c:	b.ne	1d08 <grub_cmdline_get+0x478>  // b.any
    1d40:	bl	0 <grub_refresh>
    1d44:	b	1b0c <grub_cmdline_get+0x27c>
    1d48:	cmp	w0, #0x9
    1d4c:	b.ne	1b08 <grub_cmdline_get+0x278>  // b.any
    1d50:	ldr	x1, [sp, #136]
    1d54:	ldr	x0, [sp, #152]
    1d58:	ldr	w28, [x0, x1, lsl #2]
    1d5c:	str	wzr, [x0, x1, lsl #2]
    1d60:	bl	d708 <grub_ucs4_to_utf8_alloc>
    1d64:	mov	x25, x0
    1d68:	ldr	x2, [sp, #136]
    1d6c:	ldr	x1, [sp, #152]
    1d70:	str	w28, [x1, x2, lsl #2]
    1d74:	cbz	x0, 22bc <grub_cmdline_get+0xa2c>
    1d78:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    1d7c:	add	x1, sp, #0xa8
    1d80:	ldr	x2, [x2]
    1d84:	bl	3cc0 <grub_normal_do_completion>
    1d88:	mov	x28, x0
    1d8c:	mov	x0, x25
    1d90:	str	x28, [sp, #104]
    1d94:	bl	0 <grub_free>
    1d98:	bl	ba68 <grub_normal_reset_more>
    1d9c:	ldr	w0, [sp, #168]
    1da0:	cbnz	w0, 22d4 <grub_cmdline_get+0xa44>
    1da4:	ldr	x0, [sp, #104]
    1da8:	cbz	x0, 2448 <grub_cmdline_get+0xbb8>
    1dac:	ldr	x0, [sp, #104]
    1db0:	bl	0 <grub_strlen>
    1db4:	mov	x28, x0
    1db8:	add	x0, x0, #0x1
    1dbc:	lsl	x0, x0, #2
    1dc0:	bl	0 <grub_malloc>
    1dc4:	mov	x25, x0
    1dc8:	cbz	x0, 22b4 <grub_cmdline_get+0xa24>
    1dcc:	ldr	x2, [sp, #104]
    1dd0:	mov	x3, x28
    1dd4:	mov	x1, x28
    1dd8:	mov	x4, #0x0                   	// #0
    1ddc:	bl	d8d8 <grub_utf8_to_ucs4>
    1de0:	cmp	x0, #0x0
    1de4:	b.le	2438 <grub_cmdline_get+0xba8>
    1de8:	lsl	x1, x0, #2
    1dec:	sub	x1, x1, #0x4
    1df0:	ldr	w2, [x25, x1]
    1df4:	cmp	w2, #0x20
    1df8:	b.ne	2414 <grub_cmdline_get+0xb84>  // b.any
    1dfc:	ldr	x2, [sp, #136]
    1e00:	ldr	x3, [sp, #152]
    1e04:	ldr	w3, [x3, x2, lsl #2]
    1e08:	cmp	w3, #0x20
    1e0c:	b.ne	2414 <grub_cmdline_get+0xb84>  // b.any
    1e10:	str	wzr, [x25, x1]
    1e14:	cmp	x0, #0x1
    1e18:	b.eq	1e40 <grub_cmdline_get+0x5b0>  // b.none
    1e1c:	add	x2, sp, #0x88
    1e20:	mov	x6, x25
    1e24:	add	x5, sp, #0x98
    1e28:	add	x4, sp, #0xa0
    1e2c:	add	x3, sp, #0x90
    1e30:	mov	w1, w19
    1e34:	mov	x0, x21
    1e38:	bl	1480 <grub_mod_fini+0x610>
    1e3c:	ldr	x2, [sp, #136]
    1e40:	add	x2, x2, #0x1
    1e44:	str	x2, [sp, #136]
    1e48:	b	2438 <grub_cmdline_get+0xba8>
    1e4c:	mov	w1, #0x6b                  	// #107
    1e50:	movk	w1, #0x200, lsl #16
    1e54:	cmp	w0, w1
    1e58:	b.eq	2120 <grub_cmdline_get+0x890>  // b.none
    1e5c:	b.le	1eb0 <grub_cmdline_get+0x620>
    1e60:	mov	w1, #0x75                  	// #117
    1e64:	movk	w1, #0x200, lsl #16
    1e68:	cmp	w0, w1
    1e6c:	b.eq	2068 <grub_cmdline_get+0x7d8>  // b.none
    1e70:	b.le	1ee4 <grub_cmdline_get+0x654>
    1e74:	mov	w1, #0x79                  	// #121
    1e78:	movk	w1, #0x200, lsl #16
    1e7c:	cmp	w0, w1
    1e80:	b.ne	1b08 <grub_cmdline_get+0x278>  // b.any
    1e84:	ldr	x6, [x22, #32]
    1e88:	cbz	x6, 1b08 <grub_cmdline_get+0x278>
    1e8c:	add	x5, sp, #0x98
    1e90:	add	x4, sp, #0xa0
    1e94:	add	x3, sp, #0x90
    1e98:	add	x2, sp, #0x88
    1e9c:	mov	w1, w19
    1ea0:	mov	x0, x21
    1ea4:	bl	1480 <grub_mod_fini+0x610>
    1ea8:	bl	0 <grub_refresh>
    1eac:	b	1b0c <grub_cmdline_get+0x27c>
    1eb0:	mov	w1, #0x65                  	// #101
    1eb4:	movk	w1, #0x200, lsl #16
    1eb8:	cmp	w0, w1
    1ebc:	b.eq	2018 <grub_cmdline_get+0x788>  // b.none
    1ec0:	b.le	1f78 <grub_cmdline_get+0x6e8>
    1ec4:	mov	w1, #0x66                  	// #102
    1ec8:	movk	w1, #0x200, lsl #16
    1ecc:	cmp	w0, w1
    1ed0:	b.eq	1ce8 <grub_cmdline_get+0x458>  // b.none
    1ed4:	add	w1, w1, #0x3
    1ed8:	cmp	w0, w1
    1edc:	b.eq	1d50 <grub_cmdline_get+0x4c0>  // b.none
    1ee0:	b	1b08 <grub_cmdline_get+0x278>
    1ee4:	mov	w1, #0x6e                  	// #110
    1ee8:	movk	w1, #0x200, lsl #16
    1eec:	cmp	w0, w1
    1ef0:	b.eq	21e0 <grub_cmdline_get+0x950>  // b.none
    1ef4:	add	w1, w1, #0x2
    1ef8:	cmp	w0, w1
    1efc:	b.ne	1b08 <grub_cmdline_get+0x278>  // b.any
    1f00:	ldr	w0, [x22]
    1f04:	mov	x3, #0x0                   	// #0
    1f08:	ldr	w1, [sp, #100]
    1f0c:	str	xzr, [sp, #136]
    1f10:	sub	w0, w0, #0x1
    1f14:	cmp	w0, w1
    1f18:	ldp	x25, x2, [sp, #144]
    1f1c:	b.gt	2224 <grub_cmdline_get+0x994>
    1f20:	mov	w5, w25
    1f24:	add	x4, sp, #0x90
    1f28:	mov	x0, x21
    1f2c:	mov	w1, w19
    1f30:	bl	11a0 <grub_mod_fini+0x330>
    1f34:	ldr	w6, [x22, #24]
    1f38:	add	x5, sp, #0x98
    1f3c:	ldr	w0, [sp, #100]
    1f40:	add	x4, sp, #0xa0
    1f44:	ldr	w8, [x22, #4]
    1f48:	add	w6, w0, w6
    1f4c:	udiv	w7, w6, w8
    1f50:	add	x3, sp, #0x90
    1f54:	ldr	x9, [x22, #16]
    1f58:	add	x2, sp, #0x88
    1f5c:	mov	w1, w19
    1f60:	mov	x0, x21
    1f64:	msub	w6, w7, w8, w6
    1f68:	ldr	x6, [x9, x6, lsl #3]
    1f6c:	bl	1480 <grub_mod_fini+0x610>
    1f70:	bl	0 <grub_refresh>
    1f74:	b	1b0c <grub_cmdline_get+0x27c>
    1f78:	mov	w1, #0x62                  	// #98
    1f7c:	movk	w1, #0x200, lsl #16
    1f80:	cmp	w0, w1
    1f84:	b.eq	2188 <grub_cmdline_get+0x8f8>  // b.none
    1f88:	add	w1, w1, #0x2
    1f8c:	cmp	w0, w1
    1f90:	b.eq	1c60 <grub_cmdline_get+0x3d0>  // b.none
    1f94:	bl	0 <grub_refresh>
    1f98:	b	1b0c <grub_cmdline_get+0x27c>
    1f9c:	str	w23, [x20, #12]
    1fa0:	add	x20, x20, #0x20
    1fa4:	cbnz	x27, 19b8 <grub_cmdline_get+0x128>
    1fa8:	mov	x0, x28
    1fac:	bl	0 <grub_free>
    1fb0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    1fb4:	ldr	x22, [x0]
    1fb8:	ldr	w0, [x22]
    1fbc:	cbnz	w0, 1a58 <grub_cmdline_get+0x1c8>
    1fc0:	ldp	x1, x0, [sp, #144]
    1fc4:	bl	1088 <grub_mod_fini+0x218>
    1fc8:	b	1a58 <grub_cmdline_get+0x1c8>
    1fcc:	mov	x1, x19
    1fd0:	mov	w0, #0xa                   	// #10
    1fd4:	bl	bf40 <grub_putcode>
    1fd8:	ldr	x19, [x19]
    1fdc:	cbnz	x19, 18e8 <grub_cmdline_get+0x58>
    1fe0:	b	1904 <grub_cmdline_get+0x74>
    1fe4:	mov	x0, x21
    1fe8:	bl	0 <grub_free>
    1fec:	ldr	x0, [sp, #152]
    1ff0:	mov	x28, #0x0                   	// #0
    1ff4:	bl	0 <grub_free>
    1ff8:	mov	x0, x28
    1ffc:	ldp	x19, x20, [sp, #16]
    2000:	ldp	x21, x22, [sp, #32]
    2004:	ldp	x23, x24, [sp, #48]
    2008:	ldp	x25, x26, [sp, #64]
    200c:	ldp	x27, x28, [sp, #80]
    2010:	ldp	x29, x30, [sp], #176
    2014:	ret
    2018:	ldr	x25, [sp, #144]
    201c:	str	x25, [sp, #136]
    2020:	cbz	w19, 1b08 <grub_cmdline_get+0x278>
    2024:	mov	x28, x21
    2028:	ldr	w2, [x28, #16]
    202c:	ldp	w3, w1, [x28, #4]
    2030:	add	x2, x2, x25
    2034:	ldr	x0, [x28, #24]
    2038:	udiv	x4, x2, x1
    203c:	ldr	x5, [x0, #72]
    2040:	msub	x1, x4, x1, x2
    2044:	add	w3, w3, w4
    2048:	strh	w1, [x28]
    204c:	strh	w3, [x28, #2]
    2050:	ldr	w1, [x28], #32
    2054:	blr	x5
    2058:	cmp	x20, x28
    205c:	b.ne	2028 <grub_cmdline_get+0x798>  // b.any
    2060:	bl	0 <grub_refresh>
    2064:	b	1b0c <grub_cmdline_get+0x27c>
    2068:	ldr	x25, [sp, #136]
    206c:	cbz	x25, 1b08 <grub_cmdline_get+0x278>
    2070:	ldr	x0, [x22, #32]
    2074:	add	x28, x25, #0x1
    2078:	lsl	x28, x28, #2
    207c:	bl	0 <grub_free>
    2080:	mov	x0, x28
    2084:	bl	0 <grub_malloc>
    2088:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    208c:	str	x0, [x22, #32]
    2090:	ldr	x1, [x1]
    2094:	ldr	w2, [x1]
    2098:	cbnz	w2, 25c4 <grub_cmdline_get+0xd34>
    209c:	cbz	x0, 20b8 <grub_cmdline_get+0x828>
    20a0:	ldr	x1, [sp, #152]
    20a4:	sub	x28, x28, #0x4
    20a8:	mov	x2, x28
    20ac:	bl	0 <grub_memmove>
    20b0:	ldr	x0, [x22, #32]
    20b4:	str	wzr, [x0, x28]
    20b8:	str	xzr, [sp, #136]
    20bc:	cbz	w19, 2628 <grub_cmdline_get+0xd98>
    20c0:	mov	x28, x21
    20c4:	nop
    20c8:	ldp	w2, w1, [x28, #4]
    20cc:	ldr	w4, [x28, #16]
    20d0:	ldr	x0, [x28, #24]
    20d4:	udiv	x3, x4, x1
    20d8:	ldr	x5, [x0, #72]
    20dc:	msub	x1, x3, x1, x4
    20e0:	add	w2, w2, w3
    20e4:	strh	w1, [x28]
    20e8:	strh	w2, [x28, #2]
    20ec:	ldr	w1, [x28], #32
    20f0:	blr	x5
    20f4:	cmp	x20, x28
    20f8:	b.ne	20c8 <grub_cmdline_get+0x838>  // b.any
    20fc:	ldr	x3, [sp, #136]
    2100:	mov	w5, w25
    2104:	ldr	x2, [sp, #152]
    2108:	add	x4, sp, #0x90
    210c:	mov	w1, w19
    2110:	mov	x0, x21
    2114:	bl	11a0 <grub_mod_fini+0x330>
    2118:	bl	0 <grub_refresh>
    211c:	b	1b0c <grub_cmdline_get+0x27c>
    2120:	ldp	x1, x0, [sp, #136]
    2124:	cmp	x1, x0
    2128:	b.cs	1b08 <grub_cmdline_get+0x278>  // b.hs, b.nlast
    212c:	ldr	x0, [x22, #32]
    2130:	bl	0 <grub_free>
    2134:	ldp	x1, x0, [sp, #136]
    2138:	add	x0, x0, #0x1
    213c:	sub	x0, x0, x1
    2140:	lsl	x0, x0, #2
    2144:	bl	0 <grub_malloc>
    2148:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    214c:	str	x0, [x22, #32]
    2150:	ldr	x25, [x1]
    2154:	ldr	w1, [x25]
    2158:	cbz	w1, 2594 <grub_cmdline_get+0xd04>
    215c:	bl	0 <grub_print_error>
    2160:	str	wzr, [x25]
    2164:	ldp	x3, x5, [sp, #136]
    2168:	sub	w5, w5, w3
    216c:	ldr	x2, [sp, #152]
    2170:	add	x4, sp, #0x90
    2174:	mov	w1, w19
    2178:	mov	x0, x21
    217c:	bl	11a0 <grub_mod_fini+0x330>
    2180:	bl	0 <grub_refresh>
    2184:	b	1b0c <grub_cmdline_get+0x27c>
    2188:	ldr	x25, [sp, #136]
    218c:	cbz	x25, 1b08 <grub_cmdline_get+0x278>
    2190:	sub	x25, x25, #0x1
    2194:	str	x25, [sp, #136]
    2198:	cbz	w19, 1b08 <grub_cmdline_get+0x278>
    219c:	mov	x28, x21
    21a0:	ldr	w2, [x28, #16]
    21a4:	ldp	w3, w1, [x28, #4]
    21a8:	add	x2, x2, x25
    21ac:	ldr	x0, [x28, #24]
    21b0:	udiv	x4, x2, x1
    21b4:	ldr	x5, [x0, #72]
    21b8:	msub	x1, x4, x1, x2
    21bc:	add	w3, w3, w4
    21c0:	strh	w1, [x28]
    21c4:	strh	w3, [x28, #2]
    21c8:	ldr	w1, [x28], #32
    21cc:	blr	x5
    21d0:	cmp	x20, x28
    21d4:	b.ne	21a0 <grub_cmdline_get+0x910>  // b.any
    21d8:	bl	0 <grub_refresh>
    21dc:	b	1b0c <grub_cmdline_get+0x27c>
    21e0:	ldr	w4, [sp, #100]
    21e4:	mov	w28, #0x0                   	// #0
    21e8:	str	xzr, [sp, #136]
    21ec:	mov	x3, #0x0                   	// #0
    21f0:	ldp	x25, x2, [sp, #144]
    21f4:	cbnz	w4, 24cc <grub_cmdline_get+0xc3c>
    21f8:	mov	w5, w25
    21fc:	add	x4, sp, #0x90
    2200:	mov	w1, w19
    2204:	mov	x0, x21
    2208:	bl	11a0 <grub_mod_fini+0x330>
    220c:	ldr	w6, [x22, #24]
    2210:	add	x5, sp, #0x98
    2214:	ldr	w8, [x22, #4]
    2218:	add	x4, sp, #0xa0
    221c:	add	w6, w28, w6
    2220:	b	1f4c <grub_cmdline_get+0x6bc>
    2224:	ldr	w0, [x22, #24]
    2228:	add	x25, x25, #0x1
    222c:	str	x2, [sp, #120]
    2230:	ldr	w2, [sp, #100]
    2234:	lsl	x25, x25, #2
    2238:	ldr	w1, [x22, #4]
    223c:	add	w0, w2, w0
    2240:	ldr	x3, [x22, #16]
    2244:	udiv	w28, w0, w1
    2248:	msub	w28, w28, w1, w0
    224c:	sxtw	x28, w28
    2250:	ldr	x0, [x3, x28, lsl #3]
    2254:	bl	0 <grub_free>
    2258:	ldr	x3, [x22, #16]
    225c:	mov	x0, x25
    2260:	str	x3, [sp, #104]
    2264:	bl	0 <grub_malloc>
    2268:	ldr	x3, [sp, #104]
    226c:	ldr	x1, [x22, #16]
    2270:	str	x0, [x3, x28, lsl #3]
    2274:	ldr	x2, [sp, #120]
    2278:	ldr	x0, [x1, x28, lsl #3]
    227c:	cbz	x0, 2614 <grub_cmdline_get+0xd84>
    2280:	sub	x25, x25, #0x4
    2284:	mov	x1, x2
    2288:	mov	x2, x25
    228c:	bl	0 <grub_memmove>
    2290:	ldr	x0, [x22, #16]
    2294:	ldr	x0, [x0, x28, lsl #3]
    2298:	str	wzr, [x0, x25]
    229c:	ldr	w0, [sp, #100]
    22a0:	ldp	x3, x25, [sp, #136]
    22a4:	add	w0, w0, #0x1
    22a8:	str	w0, [sp, #100]
    22ac:	ldr	x2, [sp, #152]
    22b0:	b	1f20 <grub_cmdline_get+0x690>
    22b4:	ldr	x0, [sp, #104]
    22b8:	bl	0 <grub_free>
    22bc:	bl	0 <grub_print_error>
    22c0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    22c4:	ldr	x0, [x0]
    22c8:	str	wzr, [x0]
    22cc:	bl	0 <grub_refresh>
    22d0:	b	1b0c <grub_cmdline_get+0x27c>
    22d4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    22d8:	ldr	x1, [x26]
    22dc:	ldr	x0, [x0]
    22e0:	blr	x1
    22e4:	ldr	x1, [x26]
    22e8:	mov	x0, x24
    22ec:	blr	x1
    22f0:	ldr	x1, [x26]
    22f4:	ldr	x0, [sp, #112]
    22f8:	blr	x1
    22fc:	cbz	w19, 2630 <grub_cmdline_get+0xda0>
    2300:	mov	x28, x21
    2304:	mov	w25, #0x50                  	// #80
    2308:	mov	w27, #0x18                  	// #24
    230c:	nop
    2310:	ldr	x0, [x28, #24]
    2314:	ldr	w2, [x28, #16]
    2318:	strh	w2, [x28]
    231c:	ldr	x2, [x0, #64]
    2320:	blr	x2
    2324:	lsr	w2, w0, #16
    2328:	ldr	x3, [x28, #24]
    232c:	str	w2, [x28, #4]
    2330:	lsr	w4, w0, #16
    2334:	strh	w4, [x28, #2]
    2338:	mov	x0, x3
    233c:	ldr	x2, [x3, #56]
    2340:	blr	x2
    2344:	ands	w2, w0, #0xffff
    2348:	ldr	x3, [x28, #24]
    234c:	csel	w2, w2, w25, ne  // ne = any
    2350:	str	w2, [x28, #8]
    2354:	mov	x0, x3
    2358:	ldr	x2, [x3, #56]
    235c:	blr	x2
    2360:	cmp	wzr, w0, lsr #16
    2364:	lsr	w0, w0, #16
    2368:	b.eq	24b8 <grub_cmdline_get+0xc28>  // b.none
    236c:	str	w0, [x28, #12]
    2370:	add	x28, x28, #0x20
    2374:	cmp	x20, x28
    2378:	b.ne	2310 <grub_cmdline_get+0xa80>  // b.any
    237c:	ldp	x25, x0, [sp, #144]
    2380:	str	x0, [sp, #120]
    2384:	mov	x28, x21
    2388:	add	x25, x0, x25, lsl #2
    238c:	cmp	x0, x25
    2390:	b.cs	24a8 <grub_cmdline_get+0xc18>  // b.hs, b.nlast
    2394:	nop
    2398:	ldr	x27, [sp, #120]
    239c:	b	23c4 <grub_cmdline_get+0xb34>
    23a0:	ldr	w0, [x28, #4]
    23a4:	sub	w0, w0, #0x1
    23a8:	str	w0, [x28, #4]
    23ac:	ldr	x1, [x28, #24]
    23b0:	mov	w0, #0xa                   	// #10
    23b4:	bl	bf40 <grub_putcode>
    23b8:	add	x27, x27, #0x4
    23bc:	cmp	x27, x25
    23c0:	b.cs	249c <grub_cmdline_get+0xc0c>  // b.hs, b.nlast
    23c4:	ldr	w0, [x27]
    23c8:	ldr	x1, [x28, #24]
    23cc:	bl	bf40 <grub_putcode>
    23d0:	ldrh	w0, [x28]
    23d4:	ldr	w1, [x28, #8]
    23d8:	add	w0, w0, #0x1
    23dc:	and	w0, w0, #0xffff
    23e0:	strh	w0, [x28]
    23e4:	sub	w1, w1, #0x1
    23e8:	cmp	w0, w1
    23ec:	b.cc	23b8 <grub_cmdline_get+0xb28>  // b.lo, b.ul, b.last
    23f0:	ldr	w0, [x28, #12]
    23f4:	ldrh	w1, [x28, #2]
    23f8:	strh	wzr, [x28]
    23fc:	sub	w0, w0, #0x1
    2400:	add	w4, w1, #0x1
    2404:	cmp	w1, w0
    2408:	b.cs	23a0 <grub_cmdline_get+0xb10>  // b.hs, b.nlast
    240c:	strh	w4, [x28, #2]
    2410:	b	23ac <grub_cmdline_get+0xb1c>
    2414:	str	wzr, [x25, x0, lsl #2]
    2418:	mov	x6, x25
    241c:	add	x5, sp, #0x98
    2420:	add	x4, sp, #0xa0
    2424:	add	x3, sp, #0x90
    2428:	add	x2, sp, #0x88
    242c:	mov	w1, w19
    2430:	mov	x0, x21
    2434:	bl	1480 <grub_mod_fini+0x610>
    2438:	ldr	x0, [sp, #104]
    243c:	bl	0 <grub_free>
    2440:	mov	x0, x25
    2444:	bl	0 <grub_free>
    2448:	ldr	x27, [sp, #136]
    244c:	cbz	w19, 1b08 <grub_cmdline_get+0x278>
    2450:	mov	x28, x21
    2454:	mov	w25, #0x0                   	// #0
    2458:	ldr	w2, [x28, #16]
    245c:	add	w25, w25, #0x1
    2460:	ldp	w3, w1, [x28, #4]
    2464:	add	x2, x2, x27
    2468:	ldr	x0, [x28, #24]
    246c:	udiv	x5, x2, x1
    2470:	ldr	x6, [x0, #72]
    2474:	msub	x1, x5, x1, x2
    2478:	add	w3, w3, w5
    247c:	strh	w1, [x28]
    2480:	strh	w3, [x28, #2]
    2484:	ldr	w1, [x28], #32
    2488:	blr	x6
    248c:	cmp	w25, w19
    2490:	b.cc	2458 <grub_cmdline_get+0xbc8>  // b.lo, b.ul, b.last
    2494:	bl	0 <grub_refresh>
    2498:	b	1b0c <grub_cmdline_get+0x27c>
    249c:	add	x28, x28, #0x20
    24a0:	cmp	x20, x28
    24a4:	b.ne	2398 <grub_cmdline_get+0xb08>  // b.any
    24a8:	ldr	x0, [sp, #104]
    24ac:	cbnz	x0, 1dac <grub_cmdline_get+0x51c>
    24b0:	ldr	x27, [sp, #136]
    24b4:	b	2450 <grub_cmdline_get+0xbc0>
    24b8:	str	w27, [x28, #12]
    24bc:	add	x28, x28, #0x20
    24c0:	cmp	x20, x28
    24c4:	b.ne	2310 <grub_cmdline_get+0xa80>  // b.any
    24c8:	b	237c <grub_cmdline_get+0xaec>
    24cc:	ldr	w0, [x22, #24]
    24d0:	add	x25, x25, #0x1
    24d4:	ldr	w1, [x22, #4]
    24d8:	add	w0, w4, w0
    24dc:	str	x2, [sp, #120]
    24e0:	ldr	x3, [x22, #16]
    24e4:	lsl	x25, x25, #2
    24e8:	udiv	w28, w0, w1
    24ec:	msub	w28, w28, w1, w0
    24f0:	sxtw	x28, w28
    24f4:	ldr	x0, [x3, x28, lsl #3]
    24f8:	bl	0 <grub_free>
    24fc:	ldr	x3, [x22, #16]
    2500:	mov	x0, x25
    2504:	str	x3, [sp, #104]
    2508:	bl	0 <grub_malloc>
    250c:	ldr	x3, [sp, #104]
    2510:	ldr	x1, [x22, #16]
    2514:	str	x0, [x3, x28, lsl #3]
    2518:	ldr	x2, [sp, #120]
    251c:	ldr	x0, [x1, x28, lsl #3]
    2520:	cbz	x0, 2600 <grub_cmdline_get+0xd70>
    2524:	sub	x25, x25, #0x4
    2528:	mov	x1, x2
    252c:	mov	x2, x25
    2530:	bl	0 <grub_memmove>
    2534:	ldr	x0, [x22, #16]
    2538:	ldr	x0, [x0, x28, lsl #3]
    253c:	str	wzr, [x0, x25]
    2540:	ldr	w0, [sp, #100]
    2544:	ldp	x3, x25, [sp, #136]
    2548:	sub	w0, w0, #0x1
    254c:	mov	w28, w0
    2550:	str	w0, [sp, #100]
    2554:	ldr	x2, [sp, #152]
    2558:	b	21f8 <grub_cmdline_get+0x968>
    255c:	sub	w1, w0, #0x20
    2560:	cmp	w1, #0x5e
    2564:	b.hi	1b08 <grub_cmdline_get+0x278>  // b.pmore
    2568:	add	x6, sp, #0xa8
    256c:	add	x5, sp, #0x98
    2570:	add	x4, sp, #0xa0
    2574:	add	x3, sp, #0x90
    2578:	add	x2, sp, #0x88
    257c:	mov	w1, w19
    2580:	stp	w0, wzr, [sp, #168]
    2584:	mov	x0, x21
    2588:	bl	1480 <grub_mod_fini+0x610>
    258c:	bl	0 <grub_refresh>
    2590:	b	1b0c <grub_cmdline_get+0x27c>
    2594:	ldp	x1, x2, [sp, #136]
    2598:	ldr	x3, [sp, #152]
    259c:	add	x2, x2, #0x1
    25a0:	sub	x2, x2, x1
    25a4:	add	x1, x3, x1, lsl #2
    25a8:	lsl	x2, x2, #2
    25ac:	bl	0 <grub_memmove>
    25b0:	ldp	x3, x5, [sp, #136]
    25b4:	ldr	x0, [x22, #32]
    25b8:	sub	x1, x5, x3
    25bc:	str	wzr, [x0, x1, lsl #2]
    25c0:	b	2168 <grub_cmdline_get+0x8d8>
    25c4:	bl	0 <grub_print_error>
    25c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    25cc:	add	x0, x0, #0x0
    25d0:	ldr	x1, [x0]
    25d4:	ldr	x0, [x22, #32]
    25d8:	str	wzr, [x1]
    25dc:	b	209c <grub_cmdline_get+0x80c>
    25e0:	bl	0 <grub_print_error>
    25e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    25e8:	ldr	x0, [x0]
    25ec:	str	wzr, [x0]
    25f0:	b	1bb8 <grub_cmdline_get+0x328>
    25f4:	ldr	x1, [sp, #144]
    25f8:	add	x1, x1, #0x1
    25fc:	b	1bcc <grub_cmdline_get+0x33c>
    2600:	bl	0 <grub_print_error>
    2604:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2608:	ldr	x0, [x0]
    260c:	str	wzr, [x0]
    2610:	b	2540 <grub_cmdline_get+0xcb0>
    2614:	bl	0 <grub_print_error>
    2618:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    261c:	ldr	x0, [x0]
    2620:	str	wzr, [x0]
    2624:	b	229c <grub_cmdline_get+0xa0c>
    2628:	mov	x3, #0x0                   	// #0
    262c:	b	2100 <grub_cmdline_get+0x870>
    2630:	ldr	x0, [sp, #104]
    2634:	cbnz	x0, 1dac <grub_cmdline_get+0x51c>
    2638:	bl	0 <grub_refresh>
    263c:	b	1b0c <grub_cmdline_get+0x27c>
	...
    2678:	stp	x29, x30, [sp, #-80]!
    267c:	mov	x29, sp
    2680:	stp	x21, x22, [sp, #32]
    2684:	mov	w22, w1
    2688:	ldr	x21, [x0]
    268c:	stp	x23, x24, [sp, #48]
    2690:	mov	x24, x2
    2694:	stp	x19, x20, [sp, #16]
    2698:	mov	x20, x0
    269c:	ldr	x23, [x21, #24]
    26a0:	str	x25, [sp, #64]
    26a4:	ldr	x25, [x21]
    26a8:	mov	x0, x23
    26ac:	bl	0 <grub_dl_load>
    26b0:	cbz	x0, 2748 <grub_cmdline_get+0xeb8>
    26b4:	mov	x19, x0
    26b8:	mov	x0, x23
    26bc:	bl	0 <grub_free>
    26c0:	mov	x0, x19
    26c4:	bl	0 <grub_dl_ref>
    26c8:	mov	x0, x21
    26cc:	ldr	x21, [x25, #16]
    26d0:	bl	0 <grub_unregister_extcmd>
    26d4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    26d8:	mov	x1, x21
    26dc:	ldr	x0, [x0]
    26e0:	ldr	x0, [x0]
    26e4:	bl	0 <grub_named_list_find>
    26e8:	cbz	x0, 2738 <grub_cmdline_get+0xea8>
    26ec:	ldr	w1, [x0, #40]
    26f0:	mov	w2, #0x50                  	// #80
    26f4:	and	w1, w1, w2
    26f8:	cmp	w1, w2
    26fc:	b.eq	2770 <grub_cmdline_get+0xee0>  // b.none
    2700:	ldr	x3, [x0, #32]
    2704:	mov	x2, x24
    2708:	mov	w1, w22
    270c:	blr	x3
    2710:	mov	w19, w0
    2714:	mov	x0, x21
    2718:	bl	0 <grub_free>
    271c:	mov	w0, w19
    2720:	ldp	x19, x20, [sp, #16]
    2724:	ldp	x21, x22, [sp, #32]
    2728:	ldp	x23, x24, [sp, #48]
    272c:	ldr	x25, [sp, #64]
    2730:	ldp	x29, x30, [sp], #80
    2734:	ret
    2738:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    273c:	ldr	x0, [x0]
    2740:	ldr	w19, [x0]
    2744:	b	2714 <grub_cmdline_get+0xe84>
    2748:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    274c:	ldp	x21, x22, [sp, #32]
    2750:	ldr	x0, [x0]
    2754:	ldp	x23, x24, [sp, #48]
    2758:	ldr	w19, [x0]
    275c:	ldr	x25, [sp, #64]
    2760:	mov	w0, w19
    2764:	ldp	x19, x20, [sp, #16]
    2768:	ldp	x29, x30, [sp], #80
    276c:	ret
    2770:	ldr	x3, [x20, #16]
    2774:	mov	x2, x24
    2778:	mov	w1, w22
    277c:	bl	0 <grub_extcmd_dispatcher>
    2780:	mov	w19, w0
    2784:	b	2714 <grub_cmdline_get+0xe84>
	...

0000000000002798 <grub_dyncmd_get_cmd>:
    2798:	stp	x29, x30, [sp, #-48]!
    279c:	mov	x29, sp
    27a0:	stp	x21, x22, [sp, #32]
    27a4:	ldr	x21, [x0, #64]
    27a8:	stp	x19, x20, [sp, #16]
    27ac:	mov	x20, x0
    27b0:	ldr	x22, [x21, #24]
    27b4:	mov	x0, x22
    27b8:	bl	0 <grub_dl_load>
    27bc:	mov	x19, x0
    27c0:	cbz	x0, 2800 <grub_dyncmd_get_cmd+0x68>
    27c4:	mov	x0, x22
    27c8:	bl	0 <grub_free>
    27cc:	mov	x0, x19
    27d0:	bl	0 <grub_dl_ref>
    27d4:	mov	x0, x21
    27d8:	ldr	x20, [x20, #16]
    27dc:	bl	0 <grub_unregister_extcmd>
    27e0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    27e4:	mov	x1, x20
    27e8:	ldr	x0, [x0]
    27ec:	ldr	x0, [x0]
    27f0:	bl	0 <grub_named_list_find>
    27f4:	mov	x19, x0
    27f8:	mov	x0, x20
    27fc:	bl	0 <grub_free>
    2800:	mov	x0, x19
    2804:	ldp	x19, x20, [sp, #16]
    2808:	ldp	x21, x22, [sp, #32]
    280c:	ldp	x29, x30, [sp], #48
    2810:	ret
    2814:	nop
	...

0000000000002820 <read_command_list>:
    2820:	cbz	x0, 29c8 <read_command_list+0x1a8>
    2824:	stp	x29, x30, [sp, #-96]!
    2828:	mov	x1, x0
    282c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2830:	mov	x29, sp
    2834:	ldr	x0, [x0]
    2838:	stp	x23, x24, [sp, #48]
    283c:	bl	0 <grub_xasprintf>
    2840:	mov	x23, x0
    2844:	cbz	x0, 29a8 <read_command_list+0x188>
    2848:	mov	w1, #0x32                  	// #50
    284c:	stp	x21, x22, [sp, #32]
    2850:	bl	0 <grub_file_open>
    2854:	mov	x22, x0
    2858:	cbz	x0, 299c <read_command_list+0x17c>
    285c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2860:	stp	x19, x20, [sp, #16]
    2864:	mov	x21, #0x0                   	// #0
    2868:	ldr	x24, [x0]
    286c:	stp	x25, x26, [sp, #64]
    2870:	stp	x27, x28, [sp, #80]
    2874:	ldr	x19, [x24]
    2878:	cbz	x19, 28a8 <read_command_list+0x88>
    287c:	ldr	w0, [x19, #40]
    2880:	mov	x20, x19
    2884:	ldr	x19, [x19]
    2888:	tbz	w0, #5, 29c0 <read_command_list+0x1a0>
    288c:	cbz	x21, 29d8 <read_command_list+0x1b8>
    2890:	str	x19, [x21]
    2894:	ldr	x0, [x20, #64]
    2898:	bl	0 <grub_free>
    289c:	mov	x0, x20
    28a0:	bl	0 <grub_free>
    28a4:	cbnz	x19, 287c <read_command_list+0x5c>
    28a8:	mov	x0, x22
    28ac:	adrp	x25, 0 <grub_normal_free_menu-0x498>
    28b0:	bl	fb68 <grub_file_getline>
    28b4:	adrp	x27, 0 <grub_normal_free_menu-0x498>
    28b8:	mov	x21, x0
    28bc:	cbz	x0, 2988 <read_command_list+0x168>
    28c0:	mov	x20, x0
    28c4:	b	28cc <read_command_list+0xac>
    28c8:	add	x20, x20, #0x1
    28cc:	ldrb	w0, [x20]
    28d0:	bl	0 <grub_isspace>
    28d4:	mov	w19, w0
    28d8:	cbnz	w0, 28c8 <read_command_list+0xa8>
    28dc:	ldrb	w0, [x20]
    28e0:	cmp	w0, #0x2a
    28e4:	b.ne	28f4 <read_command_list+0xd4>  // b.any
    28e8:	ldrb	w0, [x20, #1]
    28ec:	add	x20, x20, #0x1
    28f0:	mov	w19, #0x1                   	// #1
    28f4:	sub	w0, w0, #0x21
    28f8:	cmp	w0, #0x5d
    28fc:	b.hi	2970 <read_command_list+0x150>  // b.pmore
    2900:	mov	x0, x20
    2904:	mov	w1, #0x3a                  	// #58
    2908:	bl	0 <grub_strchr>
    290c:	cbz	x0, 2970 <read_command_list+0x150>
    2910:	mov	x28, x0
    2914:	strb	wzr, [x28], #1
    2918:	ldrb	w0, [x0, #1]
    291c:	cmp	w0, #0x20
    2920:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    2924:	b.ne	2938 <read_command_list+0x118>  // b.any
    2928:	ldrb	w0, [x28, #1]!
    292c:	cmp	w0, #0x20
    2930:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    2934:	b.eq	2928 <read_command_list+0x108>  // b.none
    2938:	sub	w0, w0, #0x21
    293c:	cmp	w0, #0x5d
    2940:	b.hi	2970 <read_command_list+0x150>  // b.pmore
    2944:	ldr	x0, [x25]
    2948:	ldr	x26, [x0]
    294c:	cbnz	x26, 295c <read_command_list+0x13c>
    2950:	b	29e0 <read_command_list+0x1c0>
    2954:	ldr	x26, [x26, #112]
    2958:	cbz	x26, 29e0 <read_command_list+0x1c0>
    295c:	ldr	x1, [x26]
    2960:	mov	x0, x28
    2964:	bl	0 <grub_strcmp>
    2968:	cbnz	w0, 2954 <read_command_list+0x134>
    296c:	nop
    2970:	mov	x0, x21
    2974:	bl	0 <grub_free>
    2978:	mov	x0, x22
    297c:	bl	fb68 <grub_file_getline>
    2980:	mov	x21, x0
    2984:	cbnz	x0, 28c0 <read_command_list+0xa0>
    2988:	mov	x0, x22
    298c:	bl	0 <grub_file_close>
    2990:	ldp	x19, x20, [sp, #16]
    2994:	ldp	x25, x26, [sp, #64]
    2998:	ldp	x27, x28, [sp, #80]
    299c:	mov	x0, x23
    29a0:	bl	0 <grub_free>
    29a4:	ldp	x21, x22, [sp, #32]
    29a8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    29ac:	ldp	x23, x24, [sp, #48]
    29b0:	ldr	x0, [x0]
    29b4:	str	wzr, [x0]
    29b8:	ldp	x29, x30, [sp], #96
    29bc:	ret
    29c0:	mov	x21, x20
    29c4:	b	2878 <read_command_list+0x58>
    29c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    29cc:	ldr	x0, [x0]
    29d0:	str	wzr, [x0]
    29d4:	ret
    29d8:	str	x19, [x24]
    29dc:	b	2894 <read_command_list+0x74>
    29e0:	mov	x0, x20
    29e4:	bl	0 <grub_strdup>
    29e8:	mov	x20, x0
    29ec:	cbz	x0, 2970 <read_command_list+0x150>
    29f0:	mov	x0, x28
    29f4:	bl	0 <grub_strdup>
    29f8:	mov	x28, x0
    29fc:	cbz	x0, 2a40 <read_command_list+0x220>
    2a00:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2a04:	mov	w6, w19
    2a08:	ldr	x4, [x27]
    2a0c:	mov	x5, #0x0                   	// #0
    2a10:	ldr	x1, [x0]
    2a14:	mov	x3, #0x0                   	// #0
    2a18:	mov	x0, x20
    2a1c:	mov	w2, #0x70                  	// #112
    2a20:	bl	0 <grub_register_extcmd_prio>
    2a24:	mov	x1, x0
    2a28:	cbz	x0, 2a4c <read_command_list+0x22c>
    2a2c:	ldr	x0, [x24]
    2a30:	str	x28, [x1, #24]
    2a34:	mov	x1, x20
    2a38:	bl	0 <grub_named_list_find>
    2a3c:	b	2970 <read_command_list+0x150>
    2a40:	mov	x0, x20
    2a44:	bl	0 <grub_free>
    2a48:	b	2970 <read_command_list+0x150>
    2a4c:	mov	x0, x20
    2a50:	bl	0 <grub_free>
    2a54:	mov	x0, x28
    2a58:	bl	0 <grub_free>
    2a5c:	b	2970 <read_command_list+0x150>
	...

0000000000002a90 <grub_auth_register_authentication>:
    2a90:	stp	x29, x30, [sp, #-64]!
    2a94:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    2a98:	mov	x29, sp
    2a9c:	str	x23, [sp, #48]
    2aa0:	ldr	x23, [x3]
    2aa4:	stp	x19, x20, [sp, #16]
    2aa8:	mov	x20, x0
    2aac:	stp	x21, x22, [sp, #32]
    2ab0:	mov	x22, x1
    2ab4:	mov	x1, x0
    2ab8:	ldr	x0, [x23]
    2abc:	mov	x21, x2
    2ac0:	bl	0 <grub_named_list_find>
    2ac4:	mov	x19, x0
    2ac8:	cbz	x0, 2af4 <grub_auth_register_authentication+0x64>
    2acc:	ldr	x0, [x19, #16]
    2ad0:	stp	x22, x21, [x19, #24]
    2ad4:	mov	w21, #0x0                   	// #0
    2ad8:	cbz	x0, 2b28 <grub_auth_register_authentication+0x98>
    2adc:	mov	w0, w21
    2ae0:	ldp	x19, x20, [sp, #16]
    2ae4:	ldp	x21, x22, [sp, #32]
    2ae8:	ldr	x23, [sp, #48]
    2aec:	ldp	x29, x30, [sp], #64
    2af0:	ret
    2af4:	mov	x0, #0x30                  	// #48
    2af8:	bl	0 <grub_zalloc>
    2afc:	mov	x19, x0
    2b00:	cbnz	x0, 2acc <grub_auth_register_authentication+0x3c>
    2b04:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2b08:	ldp	x19, x20, [sp, #16]
    2b0c:	ldr	x0, [x0]
    2b10:	ldr	x23, [sp, #48]
    2b14:	ldr	w21, [x0]
    2b18:	mov	w0, w21
    2b1c:	ldp	x21, x22, [sp, #32]
    2b20:	ldp	x29, x30, [sp], #64
    2b24:	ret
    2b28:	mov	x0, x20
    2b2c:	bl	0 <grub_strdup>
    2b30:	str	x0, [x19, #16]
    2b34:	cbz	x0, 2b5c <grub_auth_register_authentication+0xcc>
    2b38:	mov	x1, x19
    2b3c:	mov	x0, x23
    2b40:	bl	0 <grub_list_push>
    2b44:	mov	w0, w21
    2b48:	ldp	x19, x20, [sp, #16]
    2b4c:	ldp	x21, x22, [sp, #32]
    2b50:	ldr	x23, [sp, #48]
    2b54:	ldp	x29, x30, [sp], #64
    2b58:	ret
    2b5c:	mov	x0, x19
    2b60:	bl	0 <grub_free>
    2b64:	b	2b04 <grub_auth_register_authentication+0x74>
	...

0000000000002b78 <grub_auth_unregister_authentication>:
    2b78:	stp	x29, x30, [sp, #-32]!
    2b7c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2b80:	mov	x29, sp
    2b84:	stp	x19, x20, [sp, #16]
    2b88:	mov	x20, x0
    2b8c:	ldr	x0, [x1]
    2b90:	mov	x1, x20
    2b94:	ldr	x0, [x0]
    2b98:	bl	0 <grub_named_list_find>
    2b9c:	cbz	x0, 2be8 <grub_auth_unregister_authentication+0x70>
    2ba0:	mov	x19, x0
    2ba4:	ldr	w0, [x0, #40]
    2ba8:	cbz	w0, 2bc0 <grub_auth_unregister_authentication+0x48>
    2bac:	stp	xzr, xzr, [x19, #24]
    2bb0:	mov	w0, #0x0                   	// #0
    2bb4:	ldp	x19, x20, [sp, #16]
    2bb8:	ldp	x29, x30, [sp], #32
    2bbc:	ret
    2bc0:	ldr	x0, [x19, #16]
    2bc4:	bl	0 <grub_free>
    2bc8:	mov	x0, x19
    2bcc:	bl	0 <grub_list_remove>
    2bd0:	mov	x0, x19
    2bd4:	bl	0 <grub_free>
    2bd8:	mov	w0, #0x0                   	// #0
    2bdc:	ldp	x19, x20, [sp, #16]
    2be0:	ldp	x29, x30, [sp], #32
    2be4:	ret
    2be8:	mov	x2, x20
    2bec:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2bf0:	ldp	x19, x20, [sp, #16]
    2bf4:	mov	w0, #0x12                  	// #18
    2bf8:	ldp	x29, x30, [sp], #32
    2bfc:	ldr	x1, [x1]
    2c00:	b	0 <grub_error>
    2c04:	nop
	...

0000000000002c18 <grub_auth_authenticate>:
    2c18:	stp	x29, x30, [sp, #-48]!
    2c1c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2c20:	mov	x29, sp
    2c24:	stp	x21, x22, [sp, #32]
    2c28:	ldr	x21, [x1]
    2c2c:	mov	x1, x0
    2c30:	stp	x19, x20, [sp, #16]
    2c34:	mov	x20, x0
    2c38:	ldr	x0, [x21]
    2c3c:	bl	0 <grub_named_list_find>
    2c40:	mov	x19, x0
    2c44:	cbz	x0, 2c70 <grub_auth_authenticate+0x58>
    2c48:	ldr	x0, [x19, #16]
    2c4c:	mov	w1, #0x1                   	// #1
    2c50:	str	w1, [x19, #40]
    2c54:	mov	w22, #0x0                   	// #0
    2c58:	cbz	x0, 2ca0 <grub_auth_authenticate+0x88>
    2c5c:	mov	w0, w22
    2c60:	ldp	x19, x20, [sp, #16]
    2c64:	ldp	x21, x22, [sp, #32]
    2c68:	ldp	x29, x30, [sp], #48
    2c6c:	ret
    2c70:	mov	x0, #0x30                  	// #48
    2c74:	bl	0 <grub_zalloc>
    2c78:	mov	x19, x0
    2c7c:	cbnz	x0, 2c48 <grub_auth_authenticate+0x30>
    2c80:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2c84:	ldp	x19, x20, [sp, #16]
    2c88:	ldr	x0, [x0]
    2c8c:	ldr	w22, [x0]
    2c90:	mov	w0, w22
    2c94:	ldp	x21, x22, [sp, #32]
    2c98:	ldp	x29, x30, [sp], #48
    2c9c:	ret
    2ca0:	mov	x0, x20
    2ca4:	bl	0 <grub_strdup>
    2ca8:	str	x0, [x19, #16]
    2cac:	cbz	x0, 2cd0 <grub_auth_authenticate+0xb8>
    2cb0:	mov	x1, x19
    2cb4:	mov	x0, x21
    2cb8:	bl	0 <grub_list_push>
    2cbc:	mov	w0, w22
    2cc0:	ldp	x19, x20, [sp, #16]
    2cc4:	ldp	x21, x22, [sp, #32]
    2cc8:	ldp	x29, x30, [sp], #48
    2ccc:	ret
    2cd0:	mov	x0, x19
    2cd4:	bl	0 <grub_free>
    2cd8:	b	2c80 <grub_auth_authenticate+0x68>
    2cdc:	nop
	...

0000000000002cf0 <grub_auth_deauthenticate>:
    2cf0:	stp	x29, x30, [sp, #-32]!
    2cf4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2cf8:	mov	x29, sp
    2cfc:	stp	x19, x20, [sp, #16]
    2d00:	mov	x20, x0
    2d04:	ldr	x0, [x1]
    2d08:	mov	x1, x20
    2d0c:	ldr	x0, [x0]
    2d10:	bl	0 <grub_named_list_find>
    2d14:	cbz	x0, 2d60 <grub_auth_deauthenticate+0x70>
    2d18:	mov	x19, x0
    2d1c:	ldr	x0, [x0, #24]
    2d20:	cbz	x0, 2d38 <grub_auth_deauthenticate+0x48>
    2d24:	str	wzr, [x19, #40]
    2d28:	mov	w0, #0x0                   	// #0
    2d2c:	ldp	x19, x20, [sp, #16]
    2d30:	ldp	x29, x30, [sp], #32
    2d34:	ret
    2d38:	ldr	x0, [x19, #16]
    2d3c:	bl	0 <grub_free>
    2d40:	mov	x0, x19
    2d44:	bl	0 <grub_list_remove>
    2d48:	mov	x0, x19
    2d4c:	bl	0 <grub_free>
    2d50:	mov	w0, #0x0                   	// #0
    2d54:	ldp	x19, x20, [sp, #16]
    2d58:	ldp	x29, x30, [sp], #32
    2d5c:	ret
    2d60:	mov	x2, x20
    2d64:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2d68:	ldp	x19, x20, [sp, #16]
    2d6c:	mov	w0, #0x12                  	// #18
    2d70:	ldp	x29, x30, [sp], #32
    2d74:	ldr	x1, [x1]
    2d78:	b	0 <grub_error>
    2d7c:	nop
	...

0000000000002d90 <grub_auth_check_authentication>:
    2d90:	sub	sp, sp, #0x850
    2d94:	mov	x2, #0x400                 	// #1024
    2d98:	mov	w1, #0x0                   	// #0
    2d9c:	stp	x29, x30, [sp]
    2da0:	mov	x29, sp
    2da4:	stp	x21, x22, [sp, #32]
    2da8:	mov	x21, x0
    2dac:	add	x0, sp, #0x50
    2db0:	bl	0 <grub_memset>
    2db4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2db8:	ldr	x22, [x0]
    2dbc:	mov	x0, x22
    2dc0:	bl	0 <grub_env_get>
    2dc4:	cbz	x0, 302c <grub_auth_check_authentication+0x29c>
    2dc8:	stp	x19, x20, [sp, #16]
    2dcc:	mov	x20, x0
    2dd0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2dd4:	stp	x23, x24, [sp, #48]
    2dd8:	ldr	x23, [x0]
    2ddc:	ldr	x19, [x23]
    2de0:	cbz	x19, 2e18 <grub_auth_check_authentication+0x88>
    2de4:	cbz	x21, 2ffc <grub_auth_check_authentication+0x26c>
    2de8:	ldr	w1, [x19, #40]
    2dec:	mov	x0, x21
    2df0:	cbz	w1, 2e10 <grub_auth_check_authentication+0x80>
    2df4:	ldr	x1, [x19, #16]
    2df8:	bl	0 <grub_strword>
    2dfc:	cbnz	w0, 3064 <grub_auth_check_authentication+0x2d4>
    2e00:	ldr	x1, [x19, #16]
    2e04:	mov	x0, x20
    2e08:	bl	0 <grub_strword>
    2e0c:	cbnz	w0, 3064 <grub_auth_check_authentication+0x2d4>
    2e10:	ldr	x19, [x19]
    2e14:	cbnz	x19, 2de8 <grub_auth_check_authentication+0x58>
    2e18:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2e1c:	mov	w20, #0x0                   	// #0
    2e20:	adrp	x24, 0 <grub_normal_free_menu-0x498>
    2e24:	str	x25, [sp, #64]
    2e28:	ldr	x0, [x0]
    2e2c:	adrp	x25, 0 <grub_normal_free_menu-0x498>
    2e30:	bl	0 <grub_puts_>
    2e34:	nop
    2e38:	bl	0 <grub_getkey>
    2e3c:	mov	w19, w0
    2e40:	cmp	w19, #0xa
    2e44:	add	w0, w20, #0x2
    2e48:	sub	w1, w19, #0x20
    2e4c:	ccmp	w19, #0xd, #0x4, ne  // ne = any
    2e50:	b.eq	2eb0 <grub_auth_check_authentication+0x120>  // b.none
    2e54:	cmp	w19, #0x1b
    2e58:	b.eq	3070 <grub_auth_check_authentication+0x2e0>  // b.none
    2e5c:	cmp	w19, #0x8
    2e60:	b.eq	3050 <grub_auth_check_authentication+0x2c0>  // b.none
    2e64:	cmp	w1, #0x5e
    2e68:	b.hi	2e38 <grub_auth_check_authentication+0xa8>  // b.pmore
    2e6c:	cmp	w0, #0x3fe
    2e70:	b.hi	2e38 <grub_auth_check_authentication+0xa8>  // b.pmore
    2e74:	add	x3, sp, #0x50
    2e78:	add	w2, w20, #0x1
    2e7c:	ldr	x0, [x24]
    2e80:	mov	w1, w19
    2e84:	strb	w19, [x3, w20, uxtw]
    2e88:	mov	w20, w2
    2e8c:	bl	0 <grub_printf>
    2e90:	bl	0 <grub_getkey>
    2e94:	mov	w19, w0
    2e98:	cmp	w19, #0xa
    2e9c:	add	w0, w20, #0x2
    2ea0:	sub	w1, w19, #0x20
    2ea4:	ccmp	w19, #0xd, #0x4, ne  // ne = any
    2ea8:	b.ne	2e54 <grub_auth_check_authentication+0xc4>  // b.any
    2eac:	nop
    2eb0:	add	x0, sp, #0x50
    2eb4:	mov	w1, #0x0                   	// #0
    2eb8:	add	x0, x0, w20, uxtw
    2ebc:	mov	w2, #0x3ff                 	// #1023
    2ec0:	sub	w2, w2, w20
    2ec4:	bl	0 <grub_memset>
    2ec8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2ecc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2ed0:	ldr	x1, [x1]
    2ed4:	ldr	x0, [x0]
    2ed8:	ldr	x1, [x1]
    2edc:	blr	x1
    2ee0:	bl	0 <grub_refresh>
    2ee4:	cmp	w19, #0x1b
    2ee8:	b.eq	2fa0 <grub_auth_check_authentication+0x210>  // b.none
    2eec:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2ef0:	ldr	x0, [x0]
    2ef4:	bl	0 <grub_puts_>
    2ef8:	add	x0, sp, #0x450
    2efc:	mov	w1, #0x400                 	// #1024
    2f00:	bl	0 <grub_password_get>
    2f04:	cbz	w0, 2fa0 <grub_auth_check_authentication+0x210>
    2f08:	ldr	x19, [x23]
    2f0c:	cbz	x19, 2fa0 <grub_auth_check_authentication+0x210>
    2f10:	mov	x20, #0x0                   	// #0
    2f14:	nop
    2f18:	ldr	x1, [x19, #16]
    2f1c:	add	x0, sp, #0x50
    2f20:	bl	0 <grub_strcmp>
    2f24:	cmp	w0, #0x0
    2f28:	csel	x20, x20, x19, ne  // ne = any
    2f2c:	ldr	x19, [x19]
    2f30:	cbnz	x19, 2f18 <grub_auth_check_authentication+0x188>
    2f34:	cbz	x20, 2fa0 <grub_auth_check_authentication+0x210>
    2f38:	ldr	x3, [x20, #24]
    2f3c:	cbz	x3, 2fa0 <grub_auth_check_authentication+0x210>
    2f40:	ldr	x2, [x20, #32]
    2f44:	add	x1, sp, #0x450
    2f48:	add	x0, sp, #0x50
    2f4c:	blr	x3
    2f50:	mov	x0, x22
    2f54:	bl	0 <grub_env_get>
    2f58:	mov	x20, x0
    2f5c:	cbz	x0, 3020 <grub_auth_check_authentication+0x290>
    2f60:	ldr	x19, [x23]
    2f64:	cbz	x19, 2fa0 <grub_auth_check_authentication+0x210>
    2f68:	cbz	x21, 30a0 <grub_auth_check_authentication+0x310>
    2f6c:	nop
    2f70:	ldr	w1, [x19, #40]
    2f74:	mov	x0, x21
    2f78:	cbz	w1, 2f98 <grub_auth_check_authentication+0x208>
    2f7c:	ldr	x1, [x19, #16]
    2f80:	bl	0 <grub_strword>
    2f84:	cbnz	w0, 3020 <grub_auth_check_authentication+0x290>
    2f88:	ldr	x1, [x19, #16]
    2f8c:	mov	x0, x20
    2f90:	bl	0 <grub_strword>
    2f94:	cbnz	w0, 3020 <grub_auth_check_authentication+0x290>
    2f98:	ldr	x19, [x19]
    2f9c:	cbnz	x19, 2f70 <grub_auth_check_authentication+0x1e0>
    2fa0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    2fa4:	mov	w1, #0x3e8                 	// #1000
    2fa8:	ldr	x19, [x0]
    2fac:	ldr	x0, [x19]
    2fb0:	mul	w0, w1, w0
    2fb4:	bl	0 <grub_millisleep>
    2fb8:	ldr	x0, [x19]
    2fbc:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
    2fc0:	cmp	x0, x1
    2fc4:	b.hi	2fd0 <grub_auth_check_authentication+0x240>  // b.pmore
    2fc8:	lsl	x0, x0, #1
    2fcc:	str	x0, [x19]
    2fd0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    2fd4:	mov	w0, #0x1e                  	// #30
    2fd8:	ldr	x1, [x1]
    2fdc:	bl	0 <grub_error>
    2fe0:	ldp	x29, x30, [sp]
    2fe4:	ldp	x19, x20, [sp, #16]
    2fe8:	ldp	x21, x22, [sp, #32]
    2fec:	ldp	x23, x24, [sp, #48]
    2ff0:	ldr	x25, [sp, #64]
    2ff4:	add	sp, sp, #0x850
    2ff8:	ret
    2ffc:	ldr	w1, [x19, #40]
    3000:	mov	x0, x20
    3004:	cbz	w1, 3014 <grub_auth_check_authentication+0x284>
    3008:	ldr	x1, [x19, #16]
    300c:	bl	0 <grub_strword>
    3010:	cbnz	w0, 3064 <grub_auth_check_authentication+0x2d4>
    3014:	ldr	x19, [x19]
    3018:	cbnz	x19, 2ffc <grub_auth_check_authentication+0x26c>
    301c:	b	2e18 <grub_auth_check_authentication+0x88>
    3020:	ldp	x19, x20, [sp, #16]
    3024:	ldp	x23, x24, [sp, #48]
    3028:	ldr	x25, [sp, #64]
    302c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3030:	mov	x2, #0x1                   	// #1
    3034:	mov	w0, #0x0                   	// #0
    3038:	ldr	x1, [x1]
    303c:	ldp	x29, x30, [sp]
    3040:	str	x2, [x1]
    3044:	ldp	x21, x22, [sp, #32]
    3048:	add	sp, sp, #0x850
    304c:	ret
    3050:	cbz	w20, 2e38 <grub_auth_check_authentication+0xa8>
    3054:	ldr	x0, [x25]
    3058:	sub	w20, w20, #0x1
    305c:	bl	0 <grub_printf>
    3060:	b	2e38 <grub_auth_check_authentication+0xa8>
    3064:	ldp	x19, x20, [sp, #16]
    3068:	ldp	x23, x24, [sp, #48]
    306c:	b	302c <grub_auth_check_authentication+0x29c>
    3070:	mov	x2, #0x3ff                 	// #1023
    3074:	add	x0, sp, #0x50
    3078:	mov	w1, #0x0                   	// #0
    307c:	bl	0 <grub_memset>
    3080:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3084:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3088:	ldr	x1, [x1]
    308c:	ldr	x0, [x0]
    3090:	ldr	x1, [x1]
    3094:	blr	x1
    3098:	bl	0 <grub_refresh>
    309c:	b	2fa0 <grub_auth_check_authentication+0x210>
    30a0:	ldr	w1, [x19, #40]
    30a4:	mov	x0, x20
    30a8:	cbz	w1, 30b8 <grub_auth_check_authentication+0x328>
    30ac:	ldr	x1, [x19, #16]
    30b0:	bl	0 <grub_strword>
    30b4:	cbnz	w0, 3020 <grub_auth_check_authentication+0x290>
    30b8:	ldr	x19, [x19]
    30bc:	cbnz	x19, 30a0 <grub_auth_check_authentication+0x310>
    30c0:	b	2fa0 <grub_auth_check_authentication+0x210>
    30c4:	nop
	...
    3118:	cmp	w1, #0x0
    311c:	b.le	3128 <grub_auth_check_authentication+0x398>
    3120:	ldr	x0, [x2]
    3124:	b	2d90 <grub_auth_check_authentication>
    3128:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    312c:	ldr	x0, [x0]
    3130:	b	2d90 <grub_auth_check_authentication>
    3134:	nop
	...

0000000000003140 <grub_normal_auth_init>:
    3140:	stp	x29, x30, [sp, #-16]!
    3144:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    3148:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    314c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3150:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3154:	mov	x29, sp
    3158:	ldr	x3, [x3]
    315c:	mov	w4, #0x0                   	// #0
    3160:	ldr	x2, [x2]
    3164:	ldr	x1, [x1]
    3168:	ldr	x0, [x0]
    316c:	bl	0 <grub_register_command_prio>
    3170:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3174:	ldr	x1, [x1]
    3178:	str	x0, [x1, #8]
    317c:	ldp	x29, x30, [sp], #16
    3180:	ret
    3184:	nop
	...

00000000000031b0 <grub_normal_auth_fini>:
    31b0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    31b4:	ldr	x0, [x0]
    31b8:	ldr	x0, [x0, #8]
    31bc:	b	0 <grub_unregister_command>
	...
    31c8:	stp	x29, x30, [sp, #-64]!
    31cc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    31d0:	mov	x29, sp
    31d4:	stp	x21, x22, [sp, #32]
    31d8:	ldr	x22, [x0]
    31dc:	stp	x19, x20, [sp, #16]
    31e0:	ldr	x19, [x22]
    31e4:	cbz	x19, 3250 <grub_normal_auth_fini+0xa0>
    31e8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    31ec:	stp	x23, x24, [sp, #48]
    31f0:	adrp	x24, 0 <grub_normal_free_menu-0x498>
    31f4:	ldr	x23, [x0]
    31f8:	ldr	x20, [x23]
    31fc:	ldr	x21, [x19, #16]
    3200:	cbnz	x20, 3210 <grub_normal_auth_fini+0x60>
    3204:	b	3268 <grub_normal_auth_fini+0xb8>
    3208:	ldr	x20, [x20, #112]
    320c:	cbz	x20, 3264 <grub_normal_auth_fini+0xb4>
    3210:	ldr	x1, [x20]
    3214:	mov	x0, x21
    3218:	bl	0 <grub_strcmp>
    321c:	cbnz	w0, 3208 <grub_normal_auth_fini+0x58>
    3220:	ldr	x0, [x24]
    3224:	ldr	w0, [x0]
    3228:	cbnz	w0, 328c <grub_normal_auth_fini+0xdc>
    322c:	ldr	x1, [x19]
    3230:	str	x1, [x22]
    3234:	ldr	x0, [x19, #16]
    3238:	bl	0 <grub_free>
    323c:	mov	x0, x19
    3240:	bl	0 <grub_free>
    3244:	ldr	x19, [x22]
    3248:	cbnz	x19, 31f8 <grub_normal_auth_fini+0x48>
    324c:	ldp	x23, x24, [sp, #48]
    3250:	mov	w0, #0x0                   	// #0
    3254:	ldp	x19, x20, [sp, #16]
    3258:	ldp	x21, x22, [sp, #32]
    325c:	ldp	x29, x30, [sp], #64
    3260:	ret
    3264:	ldr	x21, [x19, #16]
    3268:	mov	x0, x21
    326c:	bl	0 <grub_dl_load>
    3270:	cbz	x0, 3220 <grub_normal_auth_fini+0x70>
    3274:	mov	w0, #0x1                   	// #1
    3278:	ldp	x19, x20, [sp, #16]
    327c:	ldp	x21, x22, [sp, #32]
    3280:	ldp	x23, x24, [sp, #48]
    3284:	ldp	x29, x30, [sp], #64
    3288:	ret
    328c:	bl	0 <grub_print_error>
    3290:	b	322c <grub_normal_auth_fini+0x7c>
    3294:	nop
	...

00000000000032b0 <read_fs_list>:
    32b0:	stp	x29, x30, [sp, #-80]!
    32b4:	mov	x29, sp
    32b8:	stp	x23, x24, [sp, #48]
    32bc:	cbz	x0, 3438 <read_fs_list+0x188>
    32c0:	mov	x1, x0
    32c4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    32c8:	stp	x25, x26, [sp, #64]
    32cc:	ldr	x0, [x0]
    32d0:	bl	0 <grub_xasprintf>
    32d4:	mov	x25, x0
    32d8:	cbz	x0, 33fc <read_fs_list+0x14c>
    32dc:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    32e0:	mov	w1, #0x32                  	// #50
    32e4:	ldr	x24, [x2]
    32e8:	ldr	x26, [x24]
    32ec:	str	xzr, [x24]
    32f0:	bl	0 <grub_file_open>
    32f4:	mov	x23, x0
    32f8:	cbz	x0, 33ec <read_fs_list+0x13c>
    32fc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3300:	stp	x21, x22, [sp, #32]
    3304:	ldr	x22, [x0]
    3308:	stp	x19, x20, [sp, #16]
    330c:	ldr	x19, [x22]
    3310:	cbz	x19, 3330 <read_fs_list+0x80>
    3314:	nop
    3318:	mov	x0, x19
    331c:	ldr	x19, [x19]
    3320:	bl	0 <grub_free>
    3324:	str	x19, [x22]
    3328:	cbnz	x19, 3318 <read_fs_list+0x68>
    332c:	nop
    3330:	mov	x0, x23
    3334:	bl	fb68 <grub_file_getline>
    3338:	mov	x21, x0
    333c:	cbz	x0, 33d8 <read_fs_list+0x128>
    3340:	bl	0 <grub_strlen>
    3344:	sub	x19, x0, #0x1
    3348:	mov	x20, x21
    334c:	add	x19, x21, x19
    3350:	b	3358 <read_fs_list+0xa8>
    3354:	add	x20, x20, #0x1
    3358:	ldrb	w0, [x20]
    335c:	bl	0 <grub_isspace>
    3360:	cbnz	w0, 3354 <read_fs_list+0xa4>
    3364:	cmp	x20, x19
    3368:	b.cc	337c <read_fs_list+0xcc>  // b.lo, b.ul, b.last
    336c:	b	342c <read_fs_list+0x17c>
    3370:	strb	wzr, [x19], #-1
    3374:	cmp	x20, x19
    3378:	b.eq	342c <read_fs_list+0x17c>  // b.none
    337c:	ldrb	w0, [x19]
    3380:	bl	0 <grub_isspace>
    3384:	cbnz	w0, 3370 <read_fs_list+0xc0>
    3388:	cmp	x20, x19
    338c:	b.cs	342c <read_fs_list+0x17c>  // b.hs, b.nlast
    3390:	mov	x0, #0x18                  	// #24
    3394:	bl	0 <grub_malloc>
    3398:	mov	x19, x0
    339c:	cbz	x0, 342c <read_fs_list+0x17c>
    33a0:	mov	x0, x20
    33a4:	bl	0 <grub_strdup>
    33a8:	str	x0, [x19, #16]
    33ac:	mov	x0, x21
    33b0:	bl	0 <grub_free>
    33b4:	ldr	x0, [x19, #16]
    33b8:	cbz	x0, 3444 <read_fs_list+0x194>
    33bc:	ldr	x0, [x22]
    33c0:	str	x0, [x19]
    33c4:	mov	x0, x23
    33c8:	str	x19, [x22]
    33cc:	bl	fb68 <grub_file_getline>
    33d0:	mov	x21, x0
    33d4:	cbnz	x0, 3340 <read_fs_list+0x90>
    33d8:	mov	x0, x23
    33dc:	bl	0 <grub_file_close>
    33e0:	ldp	x19, x20, [sp, #16]
    33e4:	ldp	x21, x22, [sp, #32]
    33e8:	str	x26, [x24]
    33ec:	mov	x0, x25
    33f0:	bl	0 <grub_free>
    33f4:	ldp	x25, x26, [sp, #64]
    33f8:	b	3408 <read_fs_list+0x158>
    33fc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3400:	ldp	x25, x26, [sp, #64]
    3404:	ldr	x24, [x0]
    3408:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    340c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3410:	ldr	x0, [x0]
    3414:	ldr	x1, [x1]
    3418:	str	x1, [x24]
    341c:	str	wzr, [x0]
    3420:	ldp	x23, x24, [sp, #48]
    3424:	ldp	x29, x30, [sp], #80
    3428:	ret
    342c:	mov	x0, x21
    3430:	bl	0 <grub_free>
    3434:	b	3330 <read_fs_list+0x80>
    3438:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    343c:	ldr	x24, [x0]
    3440:	b	3408 <read_fs_list+0x158>
    3444:	mov	x0, x19
    3448:	bl	0 <grub_free>
    344c:	b	3330 <read_fs_list+0x80>
	...
    3478:	stp	x29, x30, [sp, #-80]!
    347c:	mov	x29, sp
    3480:	stp	x21, x22, [sp, #32]
    3484:	stp	x25, x26, [sp, #64]
    3488:	mov	x25, x0
    348c:	mov	x0, x1
    3490:	bl	0 <grub_strdup>
    3494:	cbz	x0, 356c <read_fs_list+0x2bc>
    3498:	mov	x22, x0
    349c:	mov	w1, #0x2f                  	// #47
    34a0:	stp	x23, x24, [sp, #48]
    34a4:	bl	0 <grub_strchr>
    34a8:	mov	x24, x0
    34ac:	cbz	x0, 3598 <read_fs_list+0x2e8>
    34b0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    34b4:	stp	x19, x20, [sp, #16]
    34b8:	mov	x19, #0x0                   	// #0
    34bc:	ldr	x23, [x0]
    34c0:	strb	wzr, [x24]
    34c4:	nop
    34c8:	ldr	x1, [x23, x19, lsl #3]
    34cc:	mov	x0, x22
    34d0:	bl	0 <grub_strcmp>
    34d4:	cbz	w0, 3520 <read_fs_list+0x270>
    34d8:	add	x19, x19, #0x1
    34dc:	cmp	x19, #0x10
    34e0:	b.ne	34c8 <read_fs_list+0x218>  // b.any
    34e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    34e8:	mov	x1, x22
    34ec:	mov	w21, #0x1                   	// #1
    34f0:	ldr	x0, [x0]
    34f4:	bl	0 <grub_printf_>
    34f8:	bl	4ae8 <grub_wait_after_message>
    34fc:	ldp	x19, x20, [sp, #16]
    3500:	mov	x0, x22
    3504:	bl	0 <grub_free>
    3508:	mov	w0, w21
    350c:	ldp	x21, x22, [sp, #32]
    3510:	ldp	x23, x24, [sp, #48]
    3514:	ldp	x25, x26, [sp, #64]
    3518:	ldp	x29, x30, [sp], #80
    351c:	ret
    3520:	add	x24, x24, #0x1
    3524:	mov	x20, #0x0                   	// #0
    3528:	ldr	x1, [x23, x20, lsl #3]
    352c:	mov	x0, x24
    3530:	mov	w26, w20
    3534:	add	x20, x20, #0x1
    3538:	bl	0 <grub_strcmp>
    353c:	mov	w21, w0
    3540:	cbz	w0, 3588 <read_fs_list+0x2d8>
    3544:	cmp	x20, #0x10
    3548:	b.ne	3528 <read_fs_list+0x278>  // b.any
    354c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3550:	mov	x1, x24
    3554:	mov	w21, #0x1                   	// #1
    3558:	ldr	x0, [x0]
    355c:	bl	0 <grub_printf_>
    3560:	bl	4ae8 <grub_wait_after_message>
    3564:	ldp	x19, x20, [sp, #16]
    3568:	b	3500 <read_fs_list+0x250>
    356c:	bl	4ae8 <grub_wait_after_message>
    3570:	mov	w21, #0x1                   	// #1
    3574:	mov	w0, w21
    3578:	ldp	x21, x22, [sp, #32]
    357c:	ldp	x25, x26, [sp, #64]
    3580:	ldp	x29, x30, [sp], #80
    3584:	ret
    3588:	orr	w19, w19, w26, lsl #4
    358c:	strb	w19, [x25]
    3590:	ldp	x19, x20, [sp, #16]
    3594:	b	3500 <read_fs_list+0x250>
    3598:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    359c:	mov	x1, x22
    35a0:	mov	w21, #0x1                   	// #1
    35a4:	ldr	x0, [x0]
    35a8:	bl	0 <grub_printf_>
    35ac:	bl	4ae8 <grub_wait_after_message>
    35b0:	b	3500 <read_fs_list+0x250>
    35b4:	nop
	...

00000000000035d8 <grub_parse_color_name_pair>:
    35d8:	cbz	x1, 35e0 <grub_parse_color_name_pair+0x8>
    35dc:	b	3478 <read_fs_list+0x1c8>
    35e0:	mov	w0, #0x1                   	// #1
    35e4:	ret

00000000000035e8 <grub_env_write_color_normal>:
    35e8:	cbz	x1, 3674 <grub_env_write_color_normal+0x8c>
    35ec:	stp	x29, x30, [sp, #-32]!
    35f0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    35f4:	mov	x29, sp
    35f8:	ldr	x0, [x0]
    35fc:	stp	x19, x20, [sp, #16]
    3600:	mov	x20, x1
    3604:	bl	3478 <read_fs_list+0x1c8>
    3608:	cbnz	w0, 3664 <grub_env_write_color_normal+0x7c>
    360c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3610:	ldr	x0, [x0]
    3614:	ldr	x19, [x0]
    3618:	cbz	x19, 363c <grub_env_write_color_normal+0x54>
    361c:	nop
    3620:	ldr	x2, [x19, #88]
    3624:	mov	x0, x19
    3628:	mov	w1, #0x1                   	// #1
    362c:	cbz	x2, 364c <grub_env_write_color_normal+0x64>
    3630:	blr	x2
    3634:	ldr	x19, [x19]
    3638:	cbnz	x19, 3620 <grub_env_write_color_normal+0x38>
    363c:	mov	x0, x20
    3640:	ldp	x19, x20, [sp, #16]
    3644:	ldp	x29, x30, [sp], #32
    3648:	b	0 <grub_strdup>
    364c:	ldr	x19, [x19]
    3650:	cbnz	x19, 3620 <grub_env_write_color_normal+0x38>
    3654:	mov	x0, x20
    3658:	ldp	x19, x20, [sp, #16]
    365c:	ldp	x29, x30, [sp], #32
    3660:	b	0 <grub_strdup>
    3664:	mov	x0, #0x0                   	// #0
    3668:	ldp	x19, x20, [sp, #16]
    366c:	ldp	x29, x30, [sp], #32
    3670:	ret
    3674:	mov	x0, #0x0                   	// #0
    3678:	ret
    367c:	nop
	...

0000000000003690 <grub_env_write_color_highlight>:
    3690:	cbz	x1, 371c <grub_env_write_color_highlight+0x8c>
    3694:	stp	x29, x30, [sp, #-32]!
    3698:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    369c:	mov	x29, sp
    36a0:	ldr	x0, [x0]
    36a4:	stp	x19, x20, [sp, #16]
    36a8:	mov	x20, x1
    36ac:	bl	3478 <read_fs_list+0x1c8>
    36b0:	cbnz	w0, 370c <grub_env_write_color_highlight+0x7c>
    36b4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    36b8:	ldr	x0, [x0]
    36bc:	ldr	x19, [x0]
    36c0:	cbz	x19, 36e4 <grub_env_write_color_highlight+0x54>
    36c4:	nop
    36c8:	ldr	x2, [x19, #88]
    36cc:	mov	x0, x19
    36d0:	mov	w1, #0x1                   	// #1
    36d4:	cbz	x2, 36f4 <grub_env_write_color_highlight+0x64>
    36d8:	blr	x2
    36dc:	ldr	x19, [x19]
    36e0:	cbnz	x19, 36c8 <grub_env_write_color_highlight+0x38>
    36e4:	mov	x0, x20
    36e8:	ldp	x19, x20, [sp, #16]
    36ec:	ldp	x29, x30, [sp], #32
    36f0:	b	0 <grub_strdup>
    36f4:	ldr	x19, [x19]
    36f8:	cbnz	x19, 36c8 <grub_env_write_color_highlight+0x38>
    36fc:	mov	x0, x20
    3700:	ldp	x19, x20, [sp, #16]
    3704:	ldp	x29, x30, [sp], #32
    3708:	b	0 <grub_strdup>
    370c:	mov	x0, #0x0                   	// #0
    3710:	ldp	x19, x20, [sp, #16]
    3714:	ldp	x29, x30, [sp], #32
    3718:	ret
    371c:	mov	x0, #0x0                   	// #0
    3720:	ret
    3724:	nop
	...
    3738:	stp	x29, x30, [sp, #-64]!
    373c:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    3740:	mov	x29, sp
    3744:	stp	x21, x22, [sp, #32]
    3748:	ldr	x21, [x3]
    374c:	stp	x19, x20, [sp, #16]
    3750:	ldr	w20, [x21]
    3754:	add	w20, w20, #0x1
    3758:	str	w20, [x21]
    375c:	cmp	w20, #0x1
    3760:	b.eq	3874 <grub_env_write_color_highlight+0x1e4>  // b.none
    3764:	mov	w22, w2
    3768:	mov	x19, x0
    376c:	cmp	w20, #0x2
    3770:	b.ne	3794 <grub_env_write_color_highlight+0x104>  // b.any
    3774:	ldr	x4, [x21, #24]
    3778:	ldr	x20, [x21, #8]
    377c:	mov	x3, x20
    3780:	cbz	x4, 37b8 <grub_env_write_color_highlight+0x128>
    3784:	mov	x0, x20
    3788:	mov	w1, w22
    378c:	mov	w2, #0x0                   	// #0
    3790:	blr	x4
    3794:	ldr	x3, [x21, #24]
    3798:	ldr	x20, [x21, #8]
    379c:	cbz	x3, 38b4 <grub_env_write_color_highlight+0x224>
    37a0:	ldr	w2, [x21]
    37a4:	mov	w1, w22
    37a8:	mov	x0, x19
    37ac:	sub	w2, w2, #0x1
    37b0:	blr	x3
    37b4:	ldr	x3, [x21, #8]
    37b8:	ldrb	w0, [x20]
    37bc:	cbnz	w0, 37d0 <grub_env_write_color_highlight+0x140>
    37c0:	b	37e8 <grub_env_write_color_highlight+0x158>
    37c4:	ldrb	w0, [x20, #1]
    37c8:	cbz	w0, 38a8 <grub_env_write_color_highlight+0x218>
    37cc:	mov	x20, x2
    37d0:	ldrb	w1, [x19]
    37d4:	add	x2, x20, #0x1
    37d8:	add	x19, x19, #0x1
    37dc:	cmp	w1, #0x0
    37e0:	ccmp	w1, w0, #0x0, ne  // ne = any
    37e4:	b.eq	37c4 <grub_env_write_color_highlight+0x134>  // b.none
    37e8:	sub	x0, x20, #0x1
    37ec:	cmp	x0, x3
    37f0:	b.cs	3804 <grub_env_write_color_highlight+0x174>  // b.hs, b.nlast
    37f4:	b	3858 <grub_env_write_color_highlight+0x1c8>
    37f8:	sub	x0, x0, #0x1
    37fc:	cmp	x0, x3
    3800:	b.cc	3858 <grub_env_write_color_highlight+0x1c8>  // b.lo, b.ul, b.last
    3804:	ldrb	w1, [x0]
    3808:	and	w2, w1, #0xc0
    380c:	cmp	w2, #0x80
    3810:	b.eq	37f8 <grub_env_write_color_highlight+0x168>  // b.none
    3814:	cmp	x3, x0
    3818:	b.hi	3858 <grub_env_write_color_highlight+0x1c8>  // b.pmore
    381c:	add	x3, x0, #0x1
    3820:	tbz	w1, #7, 3858 <grub_env_write_color_highlight+0x1c8>
    3824:	and	w2, w1, #0xe0
    3828:	cmp	w2, #0xc0
    382c:	b.eq	38bc <grub_env_write_color_highlight+0x22c>  // b.none
    3830:	and	w2, w1, #0xf0
    3834:	cmp	w2, #0xe0
    3838:	b.eq	38cc <grub_env_write_color_highlight+0x23c>  // b.none
    383c:	and	w1, w1, #0xf8
    3840:	mov	x3, x0
    3844:	cmp	w1, #0xf0
    3848:	b.ne	3858 <grub_env_write_color_highlight+0x1c8>  // b.any
    384c:	add	x3, x0, #0x4
    3850:	cmp	x3, x20
    3854:	csel	x3, x3, x0, ls  // ls = plast
    3858:	mov	w20, #0x0                   	// #0
    385c:	strb	wzr, [x3]
    3860:	mov	w0, w20
    3864:	ldp	x19, x20, [sp, #16]
    3868:	ldp	x21, x22, [sp, #32]
    386c:	ldp	x29, x30, [sp], #64
    3870:	ret
    3874:	str	x23, [sp, #48]
    3878:	mov	x23, x1
    387c:	bl	0 <grub_strdup>
    3880:	str	x0, [x21, #8]
    3884:	cbz	x0, 38dc <grub_env_write_color_highlight+0x24c>
    3888:	str	x23, [x21, #16]
    388c:	mov	w20, #0x0                   	// #0
    3890:	mov	w0, w20
    3894:	ldp	x19, x20, [sp, #16]
    3898:	ldp	x21, x22, [sp, #32]
    389c:	ldr	x23, [sp, #48]
    38a0:	ldp	x29, x30, [sp], #64
    38a4:	ret
    38a8:	mov	x0, x20
    38ac:	mov	x20, x2
    38b0:	b	37ec <grub_env_write_color_highlight+0x15c>
    38b4:	mov	x3, x20
    38b8:	b	37b8 <grub_env_write_color_highlight+0x128>
    38bc:	add	x3, x0, #0x2
    38c0:	cmp	x3, x20
    38c4:	b.hi	3830 <grub_env_write_color_highlight+0x1a0>  // b.pmore
    38c8:	b	3858 <grub_env_write_color_highlight+0x1c8>
    38cc:	add	x3, x0, #0x3
    38d0:	cmp	x3, x20
    38d4:	b.hi	383c <grub_env_write_color_highlight+0x1ac>  // b.pmore
    38d8:	b	3858 <grub_env_write_color_highlight+0x1c8>
    38dc:	ldr	x23, [sp, #48]
    38e0:	b	3860 <grub_env_write_color_highlight+0x1d0>
    38e4:	nop
	...
    38f0:	stp	x29, x30, [sp, #-48]!
    38f4:	mov	x2, x0
    38f8:	mov	x0, x1
    38fc:	mov	x29, sp
    3900:	stp	x19, x20, [sp, #16]
    3904:	ldr	x20, [x2]
    3908:	bl	0 <grub_partition_get_name>
    390c:	cbz	x0, 399c <grub_env_write_color_highlight+0x30c>
    3910:	mov	x19, x0
    3914:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3918:	mov	x1, x20
    391c:	mov	x2, x19
    3920:	ldr	x0, [x0]
    3924:	bl	0 <grub_xasprintf>
    3928:	mov	x20, x0
    392c:	mov	x0, x19
    3930:	bl	0 <grub_free>
    3934:	cbz	x20, 399c <grub_env_write_color_highlight+0x30c>
    3938:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    393c:	str	x21, [sp, #32]
    3940:	mov	w19, #0x0                   	// #0
    3944:	ldr	x0, [x0]
    3948:	ldr	x21, [x0, #32]
    394c:	mov	x0, x21
    3950:	bl	0 <grub_strlen>
    3954:	mov	x1, x20
    3958:	mov	x2, x0
    395c:	mov	x0, x21
    3960:	bl	0 <grub_strncmp>
    3964:	cbnz	w0, 3980 <grub_env_write_color_highlight+0x2f0>
    3968:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    396c:	mov	x0, x20
    3970:	mov	w2, #0x2                   	// #2
    3974:	ldr	x1, [x1]
    3978:	bl	3738 <grub_env_write_color_highlight+0xa8>
    397c:	mov	w19, w0
    3980:	mov	x0, x20
    3984:	bl	0 <grub_free>
    3988:	mov	w0, w19
    398c:	ldp	x19, x20, [sp, #16]
    3990:	ldr	x21, [sp, #32]
    3994:	ldp	x29, x30, [sp], #48
    3998:	ret
    399c:	mov	w19, #0x1                   	// #1
    39a0:	mov	w0, w19
    39a4:	ldp	x19, x20, [sp, #16]
    39a8:	ldp	x29, x30, [sp], #48
    39ac:	ret
	...
    39c8:	stp	x29, x30, [sp, #-48]!
    39cc:	mov	x29, sp
    39d0:	str	x21, [sp, #32]
    39d4:	mov	x21, x0
    39d8:	bl	0 <grub_device_open>
    39dc:	cbz	x0, 3ab8 <grub_env_write_color_highlight+0x428>
    39e0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    39e4:	stp	x19, x20, [sp, #16]
    39e8:	mov	x19, x0
    39ec:	ldr	x20, [x1]
    39f0:	mov	x0, x21
    39f4:	ldr	x1, [x20, #32]
    39f8:	bl	0 <grub_strcmp>
    39fc:	ldr	x20, [x20, #32]
    3a00:	cbnz	w0, 3a54 <grub_env_write_color_highlight+0x3c4>
    3a04:	mov	x0, x20
    3a08:	bl	0 <grub_strlen>
    3a0c:	mov	x1, x21
    3a10:	mov	x2, x0
    3a14:	mov	x0, x20
    3a18:	bl	0 <grub_strncmp>
    3a1c:	cbnz	w0, 3a98 <grub_env_write_color_highlight+0x408>
    3a20:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3a24:	mov	x0, x21
    3a28:	mov	w2, #0x2                   	// #2
    3a2c:	ldr	x1, [x1]
    3a30:	bl	3738 <grub_env_write_color_highlight+0xa8>
    3a34:	cbz	w0, 3a98 <grub_env_write_color_highlight+0x408>
    3a38:	mov	x0, x19
    3a3c:	bl	0 <grub_device_close>
    3a40:	mov	w0, #0x1                   	// #1
    3a44:	ldp	x19, x20, [sp, #16]
    3a48:	ldr	x21, [sp, #32]
    3a4c:	ldp	x29, x30, [sp], #48
    3a50:	ret
    3a54:	mov	x0, x20
    3a58:	bl	0 <grub_strlen>
    3a5c:	mov	x1, x21
    3a60:	mov	x2, x0
    3a64:	mov	x0, x20
    3a68:	bl	0 <grub_strncmp>
    3a6c:	cbz	w0, 3ad4 <grub_env_write_color_highlight+0x444>
    3a70:	mov	x0, x19
    3a74:	bl	0 <grub_device_close>
    3a78:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3a7c:	mov	w0, #0x0                   	// #0
    3a80:	ldp	x19, x20, [sp, #16]
    3a84:	ldr	x1, [x1]
    3a88:	ldr	x21, [sp, #32]
    3a8c:	str	wzr, [x1]
    3a90:	ldp	x29, x30, [sp], #48
    3a94:	ret
    3a98:	ldr	x0, [x19]
    3a9c:	cbz	x0, 3a70 <grub_env_write_color_highlight+0x3e0>
    3aa0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3aa4:	mov	x2, #0x0                   	// #0
    3aa8:	ldr	x1, [x1]
    3aac:	bl	0 <grub_partition_iterate>
    3ab0:	cbz	w0, 3a70 <grub_env_write_color_highlight+0x3e0>
    3ab4:	b	3a38 <grub_env_write_color_highlight+0x3a8>
    3ab8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3abc:	mov	w0, #0x0                   	// #0
    3ac0:	ldr	x21, [sp, #32]
    3ac4:	ldr	x1, [x1]
    3ac8:	str	wzr, [x1]
    3acc:	ldp	x29, x30, [sp], #48
    3ad0:	ret
    3ad4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3ad8:	mov	x0, x21
    3adc:	mov	w2, #0x1                   	// #1
    3ae0:	ldr	x1, [x1]
    3ae4:	bl	3738 <grub_env_write_color_highlight+0xa8>
    3ae8:	cbnz	w0, 3a38 <grub_env_write_color_highlight+0x3a8>
    3aec:	b	3a70 <grub_env_write_color_highlight+0x3e0>
	...
    3b18:	stp	x29, x30, [sp, #-48]!
    3b1c:	mov	x29, sp
    3b20:	ldrb	w1, [x1]
    3b24:	stp	x19, x20, [sp, #16]
    3b28:	mov	x19, x0
    3b2c:	tbnz	w1, #0, 3bdc <grub_env_write_color_highlight+0x54c>
    3b30:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3b34:	ldr	x0, [x0]
    3b38:	ldr	w1, [x0, #40]
    3b3c:	str	x21, [sp, #32]
    3b40:	cmp	w1, #0x4
    3b44:	b.eq	3b8c <grub_env_write_color_highlight+0x4fc>  // b.none
    3b48:	cmp	w1, #0x3
    3b4c:	b.eq	3c64 <grub_env_write_color_highlight+0x5d4>  // b.none
    3b50:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3b54:	ldr	x21, [x1]
    3b58:	ldr	x20, [x0, #32]
    3b5c:	mov	x0, x20
    3b60:	bl	0 <grub_strlen>
    3b64:	mov	x1, x19
    3b68:	mov	x2, x0
    3b6c:	mov	x0, x20
    3b70:	bl	0 <grub_strncmp>
    3b74:	cbz	w0, 3bb4 <grub_env_write_color_highlight+0x524>
    3b78:	ldr	x21, [sp, #32]
    3b7c:	mov	w0, #0x0                   	// #0
    3b80:	ldp	x19, x20, [sp, #16]
    3b84:	ldp	x29, x30, [sp], #48
    3b88:	ret
    3b8c:	ldr	x20, [x0, #32]
    3b90:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3b94:	mov	x0, x20
    3b98:	ldr	x21, [x1]
    3b9c:	bl	0 <grub_strlen>
    3ba0:	mov	x1, x19
    3ba4:	mov	x2, x0
    3ba8:	mov	x0, x20
    3bac:	bl	0 <grub_strncmp>
    3bb0:	cbnz	w0, 3b78 <grub_env_write_color_highlight+0x4e8>
    3bb4:	mov	x1, x21
    3bb8:	mov	x0, x19
    3bbc:	mov	w2, #0x3                   	// #3
    3bc0:	bl	3738 <grub_env_write_color_highlight+0xa8>
    3bc4:	cmp	w0, #0x0
    3bc8:	cset	w0, ne  // ne = any
    3bcc:	ldp	x19, x20, [sp, #16]
    3bd0:	ldr	x21, [sp, #32]
    3bd4:	ldp	x29, x30, [sp], #48
    3bd8:	ret
    3bdc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3be0:	ldr	x1, [x1]
    3be4:	bl	0 <grub_strcmp>
    3be8:	cbz	w0, 3b7c <grub_env_write_color_highlight+0x4ec>
    3bec:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3bf0:	mov	x0, x19
    3bf4:	ldr	x1, [x1]
    3bf8:	bl	0 <grub_strcmp>
    3bfc:	cbz	w0, 3b7c <grub_env_write_color_highlight+0x4ec>
    3c00:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3c04:	mov	x1, x19
    3c08:	ldr	x0, [x0]
    3c0c:	bl	0 <grub_xasprintf>
    3c10:	mov	x19, x0
    3c14:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3c18:	ldr	x0, [x1]
    3c1c:	ldr	x20, [x0, #32]
    3c20:	mov	x0, x20
    3c24:	bl	0 <grub_strlen>
    3c28:	mov	x1, x19
    3c2c:	mov	x2, x0
    3c30:	mov	x0, x20
    3c34:	bl	0 <grub_strncmp>
    3c38:	cbnz	w0, 3c70 <grub_env_write_color_highlight+0x5e0>
    3c3c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3c40:	mov	x0, x19
    3c44:	mov	w2, #0x3                   	// #3
    3c48:	ldr	x1, [x1]
    3c4c:	bl	3738 <grub_env_write_color_highlight+0xa8>
    3c50:	cbz	w0, 3c70 <grub_env_write_color_highlight+0x5e0>
    3c54:	mov	x0, x19
    3c58:	bl	0 <grub_free>
    3c5c:	mov	w0, #0x1                   	// #1
    3c60:	b	3b80 <grub_env_write_color_highlight+0x4f0>
    3c64:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3c68:	ldr	x21, [x1]
    3c6c:	b	3b58 <grub_env_write_color_highlight+0x4c8>
    3c70:	mov	x0, x19
    3c74:	bl	0 <grub_free>
    3c78:	b	3b7c <grub_env_write_color_highlight+0x4ec>
    3c7c:	nop
	...

0000000000003cc0 <grub_normal_do_completion>:
    3cc0:	stp	x29, x30, [sp, #-96]!
    3cc4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    3cc8:	mov	x5, x2
    3ccc:	mov	x29, sp
    3cd0:	stp	x21, x22, [sp, #32]
    3cd4:	mov	x21, x1
    3cd8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3cdc:	stp	x19, x20, [sp, #16]
    3ce0:	mov	x22, x0
    3ce4:	add	x4, sp, #0x58
    3ce8:	ldr	x20, [x3]
    3cec:	stp	x23, x24, [sp, #48]
    3cf0:	mov	w3, #0x1                   	// #1
    3cf4:	str	w3, [x21]
    3cf8:	mov	x2, #0x0                   	// #0
    3cfc:	ldr	x24, [x1]
    3d00:	add	x3, sp, #0x54
    3d04:	mov	x1, #0x0                   	// #0
    3d08:	str	wzr, [x20]
    3d0c:	stp	xzr, x24, [x20, #8]
    3d10:	str	x5, [x20, #24]
    3d14:	bl	0 <grub_parser_split_cmdline>
    3d18:	cbnz	w0, 40c4 <grub_normal_do_completion+0x404>
    3d1c:	mov	w23, w0
    3d20:	ldr	w0, [sp, #84]
    3d24:	cbz	w0, 3de8 <grub_normal_do_completion+0x128>
    3d28:	ldr	x1, [sp, #88]
    3d2c:	cmp	w0, #0x1
    3d30:	add	x0, x1, w0, sxtw #3
    3d34:	ldur	x0, [x0, #-8]
    3d38:	str	x0, [x20, #32]
    3d3c:	b.le	3d54 <grub_normal_do_completion+0x94>
    3d40:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    3d44:	ldr	x0, [x1]
    3d48:	ldr	x1, [x2]
    3d4c:	bl	0 <grub_strcmp>
    3d50:	cbz	w0, 411c <grub_normal_do_completion+0x45c>
    3d54:	ldrb	w1, [x22]
    3d58:	mov	x19, x22
    3d5c:	mov	w0, #0x1                   	// #1
    3d60:	cbz	w1, 4338 <grub_normal_do_completion+0x678>
    3d64:	nop
    3d68:	add	x2, sp, #0x50
    3d6c:	bl	0 <grub_parser_cmdline_state>
    3d70:	ldrb	w1, [x19, #1]!
    3d74:	cbnz	w1, 3d68 <grub_normal_do_completion+0xa8>
    3d78:	str	w0, [x20, #40]
    3d7c:	ldr	w0, [sp, #84]
    3d80:	cmp	w0, #0x1
    3d84:	b.ls	3df0 <grub_normal_do_completion+0x130>  // b.plast
    3d88:	ldr	x0, [x20, #32]
    3d8c:	ldrb	w1, [x0]
    3d90:	cmp	w1, #0x2d
    3d94:	b.eq	4138 <grub_normal_do_completion+0x478>  // b.none
    3d98:	cmp	w1, #0x28
    3d9c:	b.eq	4108 <grub_normal_do_completion+0x448>  // b.none
    3da0:	bl	0 <grub_file_get_device_name>
    3da4:	mov	x23, x0
    3da8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3dac:	ldr	x22, [x1]
    3db0:	ldr	w1, [x22]
    3db4:	cbz	w1, 4008 <grub_normal_do_completion+0x348>
    3db8:	ldr	w0, [sp, #84]
    3dbc:	cbnz	w0, 3e60 <grub_normal_do_completion+0x1a0>
    3dc0:	ldr	x0, [x20, #8]
    3dc4:	mov	x19, #0x0                   	// #0
    3dc8:	bl	0 <grub_free>
    3dcc:	str	wzr, [x22]
    3dd0:	mov	x0, x19
    3dd4:	ldp	x19, x20, [sp, #16]
    3dd8:	ldp	x21, x22, [sp, #32]
    3ddc:	ldp	x23, x24, [sp, #48]
    3de0:	ldp	x29, x30, [sp], #96
    3de4:	ret
    3de8:	str	x24, [x20, #32]
    3dec:	b	3d54 <grub_normal_do_completion+0x94>
    3df0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3df4:	ldr	x0, [x0]
    3df8:	ldr	x19, [x0]
    3dfc:	cbz	x19, 3ee0 <grub_normal_do_completion+0x220>
    3e00:	adrp	x24, 0 <grub_normal_free_menu-0x498>
    3e04:	b	3e10 <grub_normal_do_completion+0x150>
    3e08:	ldr	x19, [x19]
    3e0c:	cbz	x19, 3ee0 <grub_normal_do_completion+0x220>
    3e10:	ldr	w0, [x19, #24]
    3e14:	tbz	w0, #8, 3e08 <grub_normal_do_completion+0x148>
    3e18:	ldr	x22, [x20, #32]
    3e1c:	ldr	x23, [x19, #16]
    3e20:	mov	x0, x22
    3e24:	bl	0 <grub_strlen>
    3e28:	mov	x2, x0
    3e2c:	mov	x1, x23
    3e30:	mov	x0, x22
    3e34:	bl	0 <grub_strncmp>
    3e38:	cbnz	w0, 3e08 <grub_normal_do_completion+0x148>
    3e3c:	ldr	x1, [x24]
    3e40:	mov	x0, x23
    3e44:	mov	w2, #0x0                   	// #0
    3e48:	bl	3738 <grub_env_write_color_highlight+0xa8>
    3e4c:	cbz	w0, 3e08 <grub_normal_do_completion+0x148>
    3e50:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    3e54:	ldr	x22, [x0]
    3e58:	ldr	w0, [sp, #84]
    3e5c:	cbz	w0, 3dc0 <grub_normal_do_completion+0x100>
    3e60:	ldr	x0, [sp, #88]
    3e64:	ldr	x0, [x0]
    3e68:	bl	0 <grub_free>
    3e6c:	ldr	x0, [sp, #88]
    3e70:	bl	0 <grub_free>
    3e74:	b	3dc0 <grub_normal_do_completion+0x100>
    3e78:	ldr	x0, [x20, #32]
    3e7c:	mov	w1, #0x2c                  	// #44
    3e80:	add	x0, x0, #0x1
    3e84:	str	x0, [x20, #32]
    3e88:	bl	0 <grub_strchr>
    3e8c:	mov	x19, x0
    3e90:	cbz	x0, 43c8 <grub_normal_do_completion+0x708>
    3e94:	strb	wzr, [x0]
    3e98:	ldr	x0, [x20, #32]
    3e9c:	bl	0 <grub_device_open>
    3ea0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3ea4:	mov	w2, #0x2c                  	// #44
    3ea8:	strb	w2, [x19]
    3eac:	mov	x19, x0
    3eb0:	ldr	x22, [x1]
    3eb4:	str	wzr, [x22]
    3eb8:	cbz	x0, 3db8 <grub_normal_do_completion+0xf8>
    3ebc:	ldr	x0, [x0]
    3ec0:	cbz	x0, 3ed8 <grub_normal_do_completion+0x218>
    3ec4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    3ec8:	mov	x2, #0x0                   	// #0
    3ecc:	ldr	x1, [x1]
    3ed0:	bl	0 <grub_partition_iterate>
    3ed4:	cbnz	w0, 4414 <grub_normal_do_completion+0x754>
    3ed8:	mov	x0, x19
    3edc:	bl	0 <grub_device_close>
    3ee0:	ldr	w1, [x20]
    3ee4:	ldr	x0, [x20, #8]
    3ee8:	cmp	w1, #0x1
    3eec:	cset	w1, gt
    3ef0:	str	w1, [x21]
    3ef4:	cbz	x0, 3e50 <grub_normal_do_completion+0x190>
    3ef8:	ldr	x0, [x20, #32]
    3efc:	bl	0 <grub_strlen>
    3f00:	mov	x23, x0
    3f04:	sxtw	x22, w0
    3f08:	ldr	x0, [x20, #8]
    3f0c:	bl	0 <grub_strlen>
    3f10:	mov	x21, x0
    3f14:	ldr	x2, [x20, #8]
    3f18:	ldrb	w1, [x2, w23, sxtw]
    3f1c:	add	x2, x2, w23, sxtw
    3f20:	cbz	w1, 4358 <grub_normal_do_completion+0x698>
    3f24:	mov	w3, #0x0                   	// #0
    3f28:	cmp	w1, #0x20
    3f2c:	ldrb	w1, [x2, #1]!
    3f30:	cinc	w3, w3, eq  // eq = none
    3f34:	cbnz	w1, 3f28 <grub_normal_do_completion+0x268>
    3f38:	sxtw	x19, w3
    3f3c:	ldr	x0, [x20, #16]
    3f40:	sub	w21, w21, w23
    3f44:	sxtw	x21, w21
    3f48:	bl	0 <grub_strlen>
    3f4c:	add	x21, x21, #0x1
    3f50:	add	x0, x0, x19
    3f54:	add	x0, x21, x0
    3f58:	bl	0 <grub_malloc>
    3f5c:	ldr	x1, [x20, #8]
    3f60:	mov	x19, x0
    3f64:	add	x2, x1, x22
    3f68:	ldrb	w1, [x1, x22]
    3f6c:	cbz	w1, 3fc8 <grub_normal_do_completion+0x308>
    3f70:	mov	x3, x0
    3f74:	ldr	w0, [x20, #40]
    3f78:	mov	w4, #0x5c                  	// #92
    3f7c:	cmp	w0, #0x3
    3f80:	b.eq	40e0 <grub_normal_do_completion+0x420>  // b.none
    3f84:	cmp	w1, #0x20
    3f88:	add	x0, x3, #0x1
    3f8c:	b.eq	3fac <grub_normal_do_completion+0x2ec>  // b.none
    3f90:	strb	w1, [x3]
    3f94:	ldrb	w1, [x2, #1]!
    3f98:	cbz	w1, 3fc8 <grub_normal_do_completion+0x308>
    3f9c:	mov	x3, x0
    3fa0:	cmp	w1, #0x20
    3fa4:	add	x0, x3, #0x1
    3fa8:	b.ne	3f90 <grub_normal_do_completion+0x2d0>  // b.any
    3fac:	mov	x0, x3
    3fb0:	strb	w4, [x0], #2
    3fb4:	ldrb	w1, [x2]
    3fb8:	strb	w1, [x3, #1]
    3fbc:	ldrb	w1, [x2, #1]!
    3fc0:	cbnz	w1, 3f9c <grub_normal_do_completion+0x2dc>
    3fc4:	nop
    3fc8:	ldr	w1, [x20]
    3fcc:	strb	wzr, [x0]
    3fd0:	cmp	w1, #0x1
    3fd4:	b.eq	432c <grub_normal_do_completion+0x66c>  // b.none
    3fd8:	ldrb	w0, [x19]
    3fdc:	cbz	w0, 4340 <grub_normal_do_completion+0x680>
    3fe0:	ldr	w0, [sp, #84]
    3fe4:	cbnz	w0, 40f8 <grub_normal_do_completion+0x438>
    3fe8:	ldr	x0, [x20, #8]
    3fec:	bl	0 <grub_free>
    3ff0:	mov	x0, x19
    3ff4:	ldp	x19, x20, [sp, #16]
    3ff8:	ldp	x21, x22, [sp, #32]
    3ffc:	ldp	x23, x24, [sp, #48]
    4000:	ldp	x29, x30, [sp], #96
    4004:	ret
    4008:	bl	0 <grub_device_open>
    400c:	mov	x19, x0
    4010:	cbz	x0, 434c <grub_normal_do_completion+0x68c>
    4014:	stp	x25, x26, [sp, #64]
    4018:	bl	0 <grub_fs_probe>
    401c:	mov	x25, x0
    4020:	cbz	x0, 4360 <grub_normal_do_completion+0x6a0>
    4024:	ldr	x26, [x20, #32]
    4028:	cbz	x23, 403c <grub_normal_do_completion+0x37c>
    402c:	mov	x0, x23
    4030:	bl	0 <grub_strlen>
    4034:	add	x0, x0, #0x2
    4038:	add	x26, x26, x0
    403c:	mov	x0, x26
    4040:	mov	w1, #0x2f                  	// #47
    4044:	bl	0 <grub_strchr>
    4048:	mov	x26, x0
    404c:	ldr	x0, [x20, #32]
    4050:	mov	w1, #0x2f                  	// #47
    4054:	bl	0 <grub_strrchr>
    4058:	cbz	x26, 4378 <grub_normal_do_completion+0x6b8>
    405c:	add	x1, x0, #0x1
    4060:	mov	x0, x26
    4064:	str	x1, [x20, #32]
    4068:	bl	0 <grub_strdup>
    406c:	mov	x24, x0
    4070:	cbz	x0, 4360 <grub_normal_do_completion+0x6a0>
    4074:	mov	w1, #0x2f                  	// #47
    4078:	bl	0 <grub_strrchr>
    407c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    4080:	strb	wzr, [x0, #1]
    4084:	mov	x1, x24
    4088:	mov	x3, #0x0                   	// #0
    408c:	ldr	x2, [x2]
    4090:	mov	x0, x19
    4094:	ldr	x4, [x25, #24]
    4098:	blr	x4
    409c:	mov	x0, x24
    40a0:	bl	0 <grub_free>
    40a4:	ldr	w24, [x22]
    40a8:	mov	x0, x19
    40ac:	bl	0 <grub_device_close>
    40b0:	mov	x0, x23
    40b4:	bl	0 <grub_free>
    40b8:	ldp	x25, x26, [sp, #64]
    40bc:	cbz	w24, 3ee0 <grub_normal_do_completion+0x220>
    40c0:	b	3db8 <grub_normal_do_completion+0xf8>
    40c4:	mov	x19, #0x0                   	// #0
    40c8:	mov	x0, x19
    40cc:	ldp	x19, x20, [sp, #16]
    40d0:	ldp	x21, x22, [sp, #32]
    40d4:	ldp	x23, x24, [sp, #48]
    40d8:	ldp	x29, x30, [sp], #96
    40dc:	ret
    40e0:	mov	x0, x19
    40e4:	nop
    40e8:	strb	w1, [x0], #1
    40ec:	ldrb	w1, [x2, #1]!
    40f0:	cbnz	w1, 40e8 <grub_normal_do_completion+0x428>
    40f4:	b	3fc8 <grub_normal_do_completion+0x308>
    40f8:	ldr	x0, [sp, #88]
    40fc:	ldr	x0, [x0]
    4100:	bl	0 <grub_free>
    4104:	b	3fe8 <grub_normal_do_completion+0x328>
    4108:	mov	w1, #0x29                  	// #41
    410c:	bl	0 <grub_strchr>
    4110:	cbz	x0, 3e78 <grub_normal_do_completion+0x1b8>
    4114:	ldr	x0, [x20, #32]
    4118:	b	3da0 <grub_normal_do_completion+0xe0>
    411c:	ldr	x0, [x20, #32]
    4120:	mov	w1, #0x3d                  	// #61
    4124:	bl	0 <grub_strchr>
    4128:	cbz	x0, 3d54 <grub_normal_do_completion+0x94>
    412c:	add	x0, x0, #0x1
    4130:	str	x0, [x20, #32]
    4134:	b	3d54 <grub_normal_do_completion+0x94>
    4138:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    413c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    4140:	mov	x1, x22
    4144:	ldr	x2, [x2]
    4148:	ldr	x0, [x0]
    414c:	ldrh	w3, [x2]
    4150:	ldrb	w2, [x2, #2]
    4154:	ldr	x0, [x0]
    4158:	strh	w3, [sp, #80]
    415c:	strb	w2, [sp, #82]
    4160:	bl	0 <grub_named_list_find>
    4164:	cbz	x0, 3ee0 <grub_normal_do_completion+0x220>
    4168:	ldr	w1, [x0, #40]
    416c:	tbz	w1, #4, 3ee0 <grub_normal_do_completion+0x220>
    4170:	ldr	x23, [x0, #64]
    4174:	ldr	x0, [x23, #16]
    4178:	cbz	x0, 3ee0 <grub_normal_do_completion+0x220>
    417c:	ldr	x19, [x20, #32]
    4180:	mov	x0, x19
    4184:	bl	0 <grub_strlen>
    4188:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    418c:	mov	x2, x0
    4190:	mov	x0, x19
    4194:	ldr	x19, [x1]
    4198:	mov	x1, x19
    419c:	bl	0 <grub_strncmp>
    41a0:	cbnz	w0, 41bc <grub_normal_do_completion+0x4fc>
    41a4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    41a8:	mov	x0, x19
    41ac:	mov	w2, #0x4                   	// #4
    41b0:	ldr	x1, [x1]
    41b4:	bl	3738 <grub_env_write_color_highlight+0xa8>
    41b8:	cbnz	w0, 3e50 <grub_normal_do_completion+0x190>
    41bc:	ldr	x19, [x23, #16]
    41c0:	ldr	x22, [x20, #32]
    41c4:	ldr	x0, [x19, #16]
    41c8:	cbz	x0, 421c <grub_normal_do_completion+0x55c>
    41cc:	adrp	x24, 0 <grub_normal_free_menu-0x498>
    41d0:	ldr	w1, [x19, #8]
    41d4:	mov	x0, x22
    41d8:	cbz	w1, 4210 <grub_normal_do_completion+0x550>
    41dc:	strb	w1, [sp, #81]
    41e0:	bl	0 <grub_strlen>
    41e4:	add	x1, sp, #0x50
    41e8:	mov	x2, x0
    41ec:	mov	x0, x22
    41f0:	bl	0 <grub_strncmp>
    41f4:	cbnz	w0, 420c <grub_normal_do_completion+0x54c>
    41f8:	ldr	x1, [x24]
    41fc:	add	x0, sp, #0x50
    4200:	mov	w2, #0x4                   	// #4
    4204:	bl	3738 <grub_env_write_color_highlight+0xa8>
    4208:	cbnz	w0, 3e50 <grub_normal_do_completion+0x190>
    420c:	ldr	x22, [x20, #32]
    4210:	add	x19, x19, #0x28
    4214:	ldr	x0, [x19, #16]
    4218:	cbnz	x0, 41d0 <grub_normal_do_completion+0x510>
    421c:	mov	x0, x22
    4220:	bl	0 <grub_strlen>
    4224:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4228:	mov	x2, x0
    422c:	mov	x0, x22
    4230:	ldr	x19, [x1]
    4234:	mov	x1, x19
    4238:	bl	0 <grub_strncmp>
    423c:	cbnz	w0, 4258 <grub_normal_do_completion+0x598>
    4240:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4244:	mov	x0, x19
    4248:	mov	w2, #0x4                   	// #4
    424c:	ldr	x1, [x1]
    4250:	bl	3738 <grub_env_write_color_highlight+0xa8>
    4254:	cbnz	w0, 3e50 <grub_normal_do_completion+0x190>
    4258:	ldr	x19, [x20, #32]
    425c:	mov	x0, x19
    4260:	bl	0 <grub_strlen>
    4264:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4268:	mov	x2, x0
    426c:	mov	x0, x19
    4270:	ldr	x19, [x1]
    4274:	mov	x1, x19
    4278:	bl	0 <grub_strncmp>
    427c:	cbnz	w0, 4298 <grub_normal_do_completion+0x5d8>
    4280:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4284:	mov	x0, x19
    4288:	mov	w2, #0x4                   	// #4
    428c:	ldr	x1, [x1]
    4290:	bl	3738 <grub_env_write_color_highlight+0xa8>
    4294:	cbnz	w0, 3e50 <grub_normal_do_completion+0x190>
    4298:	ldr	x22, [x23, #16]
    429c:	ldr	x0, [x22, #16]
    42a0:	cbz	x0, 3ee0 <grub_normal_do_completion+0x220>
    42a4:	adrp	x24, 0 <grub_normal_free_menu-0x498>
    42a8:	stp	x25, x26, [sp, #64]
    42ac:	adrp	x25, 0 <grub_normal_free_menu-0x498>
    42b0:	b	42c4 <grub_normal_do_completion+0x604>
    42b4:	mov	x0, x19
    42b8:	bl	0 <grub_free>
    42bc:	ldr	x0, [x22, #16]
    42c0:	cbz	x0, 43c0 <grub_normal_do_completion+0x700>
    42c4:	ldr	x1, [x22]
    42c8:	add	x22, x22, #0x28
    42cc:	cbz	x1, 42bc <grub_normal_do_completion+0x5fc>
    42d0:	ldr	x0, [x24]
    42d4:	bl	0 <grub_xasprintf>
    42d8:	mov	x19, x0
    42dc:	cbz	x0, 431c <grub_normal_do_completion+0x65c>
    42e0:	ldr	x23, [x20, #32]
    42e4:	mov	x0, x23
    42e8:	bl	0 <grub_strlen>
    42ec:	mov	x1, x19
    42f0:	mov	x2, x0
    42f4:	mov	x0, x23
    42f8:	bl	0 <grub_strncmp>
    42fc:	cbnz	w0, 42b4 <grub_normal_do_completion+0x5f4>
    4300:	ldr	x1, [x25]
    4304:	mov	x0, x19
    4308:	mov	w2, #0x4                   	// #4
    430c:	bl	3738 <grub_env_write_color_highlight+0xa8>
    4310:	cbz	w0, 42b4 <grub_normal_do_completion+0x5f4>
    4314:	mov	x0, x19
    4318:	bl	0 <grub_free>
    431c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4320:	ldp	x25, x26, [sp, #64]
    4324:	ldr	x22, [x0]
    4328:	b	3db8 <grub_normal_do_completion+0xf8>
    432c:	ldr	x1, [x20, #16]
    4330:	bl	0 <grub_strcpy>
    4334:	b	3fd8 <grub_normal_do_completion+0x318>
    4338:	mov	w0, #0x1                   	// #1
    433c:	b	3d78 <grub_normal_do_completion+0xb8>
    4340:	mov	x0, x19
    4344:	bl	0 <grub_free>
    4348:	b	3e50 <grub_normal_do_completion+0x190>
    434c:	mov	x0, x23
    4350:	bl	0 <grub_free>
    4354:	b	3db8 <grub_normal_do_completion+0xf8>
    4358:	mov	x19, #0x0                   	// #0
    435c:	b	3f3c <grub_normal_do_completion+0x27c>
    4360:	mov	x0, x19
    4364:	bl	0 <grub_device_close>
    4368:	mov	x0, x23
    436c:	bl	0 <grub_free>
    4370:	ldp	x25, x26, [sp, #64]
    4374:	b	3db8 <grub_normal_do_completion+0xf8>
    4378:	ldr	x0, [x20, #32]
    437c:	bl	0 <grub_strlen>
    4380:	mov	x2, x0
    4384:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4388:	ldr	x1, [x20, #32]
    438c:	ldr	x0, [x0]
    4390:	add	x1, x1, x2
    4394:	str	x1, [x20, #32]
    4398:	bl	0 <grub_strdup>
    439c:	str	x0, [x20, #8]
    43a0:	cbz	x0, 4360 <grub_normal_do_completion+0x6a0>
    43a4:	mov	w1, #0x1                   	// #1
    43a8:	mov	x0, x19
    43ac:	str	w1, [x20]
    43b0:	str	x24, [x20, #16]
    43b4:	bl	0 <grub_device_close>
    43b8:	mov	x0, x23
    43bc:	bl	0 <grub_free>
    43c0:	ldp	x25, x26, [sp, #64]
    43c4:	b	3ee0 <grub_normal_do_completion+0x220>
    43c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    43cc:	adrp	x22, 0 <grub_normal_free_menu-0x498>
    43d0:	ldr	x24, [x0]
    43d4:	ldr	x19, [x24]
    43d8:	cbz	x19, 4404 <grub_normal_do_completion+0x744>
    43dc:	nop
    43e0:	ldr	x3, [x19, #16]
    43e4:	mov	w2, w23
    43e8:	mov	x1, #0x0                   	// #0
    43ec:	cbz	x3, 43fc <grub_normal_do_completion+0x73c>
    43f0:	ldr	x0, [x22]
    43f4:	blr	x3
    43f8:	cbnz	w0, 3e50 <grub_normal_do_completion+0x190>
    43fc:	ldr	x19, [x19, #56]
    4400:	cbnz	x19, 43e0 <grub_normal_do_completion+0x720>
    4404:	add	w23, w23, #0x1
    4408:	cmp	w23, #0x3
    440c:	b.eq	3ee0 <grub_normal_do_completion+0x220>  // b.none
    4410:	b	43d4 <grub_normal_do_completion+0x714>
    4414:	mov	x0, x19
    4418:	bl	0 <grub_device_close>
    441c:	b	3db8 <grub_normal_do_completion+0xf8>
	...

00000000000044a0 <grub_get_weekday>:
    44a0:	ldrb	w7, [x0, #2]
    44a4:	mov	w4, #0xc                   	// #12
    44a8:	ldrh	w2, [x0]
    44ac:	mov	w6, #0x851f                	// #34079
    44b0:	cmp	w7, #0x2
    44b4:	movk	w6, #0x51eb, lsl #16
    44b8:	csel	w3, w4, wzr, ls  // ls = plast
    44bc:	cset	w1, ls  // ls = plast
    44c0:	add	w3, w3, w7
    44c4:	sub	w2, w2, w1
    44c8:	sub	w3, w3, #0x2
    44cc:	mov	w8, #0xaaab                	// #43691
    44d0:	movk	w8, #0xaaaa, lsl #16
    44d4:	ldrb	w0, [x0, #3]
    44d8:	lsl	w1, w3, #5
    44dc:	umull	x4, w2, w6
    44e0:	sub	w1, w1, w3
    44e4:	add	w0, w0, w2
    44e8:	mov	w5, #0x4925                	// #18725
    44ec:	lsr	x3, x4, #39
    44f0:	lsr	x4, x4, #37
    44f4:	umull	x1, w1, w8
    44f8:	add	w2, w3, w2, lsr #2
    44fc:	add	w2, w2, w0
    4500:	movk	w5, #0x2492, lsl #16
    4504:	lsr	x1, x1, #35
    4508:	sub	w1, w1, w4
    450c:	add	w1, w1, w2
    4510:	umull	x0, w1, w5
    4514:	lsr	x2, x0, #32
    4518:	sub	w0, w1, w2
    451c:	add	w0, w2, w0, lsr #1
    4520:	lsr	w0, w0, #2
    4524:	lsl	w2, w0, #3
    4528:	sub	w0, w2, w0
    452c:	sub	w0, w1, w0
    4530:	ret
    4534:	nop

0000000000004538 <grub_get_weekday_name>:
    4538:	ldrb	w7, [x0, #2]
    453c:	mov	w3, #0xc                   	// #12
    4540:	ldrh	w1, [x0]
    4544:	mov	w5, #0x851f                	// #34079
    4548:	cmp	w7, #0x2
    454c:	ldrb	w6, [x0, #3]
    4550:	csel	w2, w3, wzr, ls  // ls = plast
    4554:	cset	w0, ls  // ls = plast
    4558:	add	w2, w2, w7
    455c:	sub	w1, w1, w0
    4560:	sub	w2, w2, #0x2
    4564:	movk	w5, #0x51eb, lsl #16
    4568:	mov	w10, #0xaaab                	// #43691
    456c:	add	w6, w6, w1
    4570:	lsl	w0, w2, #5
    4574:	movk	w10, #0xaaaa, lsl #16
    4578:	sub	w0, w0, w2
    457c:	umull	x3, w1, w5
    4580:	adrp	x8, 0 <grub_normal_free_menu-0x498>
    4584:	mov	w4, #0x4925                	// #18725
    4588:	movk	w4, #0x2492, lsl #16
    458c:	adrp	x9, 0 <grub_normal_free_menu-0x498>
    4590:	umull	x0, w0, w10
    4594:	lsr	x2, x3, #39
    4598:	add	w1, w2, w1, lsr #2
    459c:	lsr	x3, x3, #37
    45a0:	add	w1, w1, w6
    45a4:	lsr	x0, x0, #35
    45a8:	sub	w0, w0, w3
    45ac:	add	w0, w0, w1
    45b0:	ldr	x2, [x8]
    45b4:	umull	x1, w0, w4
    45b8:	ldr	x5, [x9]
    45bc:	ldr	x3, [x2]
    45c0:	lsr	x2, x1, #32
    45c4:	sub	w1, w0, w2
    45c8:	mov	x16, x3
    45cc:	add	w1, w2, w1, lsr #1
    45d0:	lsr	w1, w1, #2
    45d4:	lsl	w2, w1, #3
    45d8:	sub	w1, w2, w1
    45dc:	sub	w0, w0, w1
    45e0:	ldr	x0, [x5, w0, sxtw #3]
    45e4:	br	x16
	...

00000000000045f8 <grub_unixtime2datetime>:
    45f8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    45fc:	sub	sp, sp, #0x10
    4600:	ldr	x2, [x2]
    4604:	ldr	x3, [x2]
    4608:	str	x3, [sp]
    460c:	ldr	w2, [x2, #8]
    4610:	str	w2, [sp, #8]
    4614:	tbnz	w0, #31, 4898 <grub_unixtime2datetime+0x2a0>
    4618:	mov	w3, #0x4507                	// #17671
    461c:	movk	w3, #0xc22e, lsl #16
    4620:	umull	x3, w0, w3
    4624:	lsr	x3, x3, #48
    4628:	mov	w2, #0x6272                	// #25202
    462c:	add	w5, w3, w2
    4630:	mov	w2, #0xb073                	// #45171
    4634:	mov	w4, #0xae80                	// #44672
    4638:	movk	w2, #0x166d, lsl #16
    463c:	movk	w4, #0xfffe, lsl #16
    4640:	mov	w6, #0x5b5                 	// #1461
    4644:	umull	x2, w5, w2
    4648:	madd	w3, w3, w4, w0
    464c:	lsr	x0, x2, #39
    4650:	ubfiz	w4, w0, #2, #14
    4654:	msub	w2, w0, w6, w5
    4658:	sub	w0, w2, #0x5b4
    465c:	cmp	w0, #0x16c
    4660:	b.hi	472c <grub_unixtime2datetime+0x134>  // b.pmore
    4664:	ldrb	w2, [sp]
    4668:	add	w4, w4, #0x770
    466c:	mov	w0, #0x16d                 	// #365
    4670:	strh	w4, [x1]
    4674:	sub	w0, w0, w2
    4678:	cmp	w0, #0x1c
    467c:	b.ls	48bc <grub_unixtime2datetime+0x2c4>  // b.plast
    4680:	ldrb	w2, [sp, #2]
    4684:	sub	w0, w0, #0x1d
    4688:	cmp	w2, w0
    468c:	b.hi	48d0 <grub_unixtime2datetime+0x2d8>  // b.pmore
    4690:	ldrb	w4, [sp, #3]
    4694:	sub	w0, w0, w2
    4698:	cmp	w0, w4
    469c:	b.cc	48dc <grub_unixtime2datetime+0x2e4>  // b.lo, b.ul, b.last
    46a0:	ldrb	w2, [sp, #4]
    46a4:	sub	w0, w0, w4
    46a8:	cmp	w0, w2
    46ac:	b.cc	48e8 <grub_unixtime2datetime+0x2f0>  // b.lo, b.ul, b.last
    46b0:	ldrb	w4, [sp, #5]
    46b4:	sub	w0, w0, w2
    46b8:	cmp	w0, w4
    46bc:	b.cc	48f4 <grub_unixtime2datetime+0x2fc>  // b.lo, b.ul, b.last
    46c0:	ldrb	w2, [sp, #6]
    46c4:	sub	w0, w0, w4
    46c8:	cmp	w0, w2
    46cc:	b.cc	48c4 <grub_unixtime2datetime+0x2cc>  // b.lo, b.ul, b.last
    46d0:	ldrb	w4, [sp, #7]
    46d4:	sub	w0, w0, w2
    46d8:	cmp	w0, w4
    46dc:	b.cc	4900 <grub_unixtime2datetime+0x308>  // b.lo, b.ul, b.last
    46e0:	ldrb	w2, [sp, #8]
    46e4:	sub	w0, w0, w4
    46e8:	cmp	w0, w2
    46ec:	b.cc	4918 <grub_unixtime2datetime+0x320>  // b.lo, b.ul, b.last
    46f0:	ldrb	w4, [sp, #9]
    46f4:	sub	w0, w0, w2
    46f8:	cmp	w0, w4
    46fc:	b.cc	4924 <grub_unixtime2datetime+0x32c>  // b.lo, b.ul, b.last
    4700:	ldrb	w2, [sp, #10]
    4704:	sub	w0, w0, w4
    4708:	cmp	w0, w2
    470c:	b.cc	4930 <grub_unixtime2datetime+0x338>  // b.lo, b.ul, b.last
    4710:	ldrb	w4, [sp, #11]
    4714:	sub	w0, w0, w2
    4718:	cmp	w0, w4
    471c:	b.cc	493c <grub_unixtime2datetime+0x344>  // b.lo, b.ul, b.last
    4720:	sub	w0, w0, w4
    4724:	mov	w5, #0xd                   	// #13
    4728:	b	4844 <grub_unixtime2datetime+0x24c>
    472c:	mov	w5, #0xf361                	// #62305
    4730:	mov	w6, #0x16d                 	// #365
    4734:	movk	w5, #0x6719, lsl #16
    4738:	umull	x5, w2, w5
    473c:	lsr	x0, x5, #32
    4740:	sub	w5, w2, w0
    4744:	add	w5, w0, w5, lsr #1
    4748:	lsr	w5, w5, #8
    474c:	add	w4, w4, w5
    4750:	add	w4, w4, #0x76d
    4754:	and	w4, w4, #0xffff
    4758:	strh	w4, [x1]
    475c:	msub	w0, w5, w6, w2
    4760:	tst	x4, #0x3
    4764:	b.ne	4780 <grub_unixtime2datetime+0x188>  // b.any
    4768:	ldrb	w2, [sp]
    476c:	cmp	w0, w2
    4770:	b.cs	4674 <grub_unixtime2datetime+0x7c>  // b.hs, b.nlast
    4774:	mov	w5, #0x0                   	// #0
    4778:	add	w5, w5, #0x1
    477c:	b	4844 <grub_unixtime2datetime+0x24c>
    4780:	ldrb	w4, [sp]
    4784:	cmp	w0, w4
    4788:	b.cc	4774 <grub_unixtime2datetime+0x17c>  // b.lo, b.ul, b.last
    478c:	ldrb	w2, [sp, #1]
    4790:	sub	w0, w0, w4
    4794:	cmp	w0, w2
    4798:	b.cc	490c <grub_unixtime2datetime+0x314>  // b.lo, b.ul, b.last
    479c:	ldrb	w4, [sp, #2]
    47a0:	sub	w0, w0, w2
    47a4:	cmp	w0, w4
    47a8:	b.cc	48d0 <grub_unixtime2datetime+0x2d8>  // b.lo, b.ul, b.last
    47ac:	ldrb	w2, [sp, #3]
    47b0:	sub	w0, w0, w4
    47b4:	cmp	w0, w2
    47b8:	b.cc	48dc <grub_unixtime2datetime+0x2e4>  // b.lo, b.ul, b.last
    47bc:	ldrb	w4, [sp, #4]
    47c0:	sub	w0, w0, w2
    47c4:	cmp	w0, w4
    47c8:	b.cc	48e8 <grub_unixtime2datetime+0x2f0>  // b.lo, b.ul, b.last
    47cc:	ldrb	w2, [sp, #5]
    47d0:	sub	w0, w0, w4
    47d4:	cmp	w0, w2
    47d8:	b.cc	48f4 <grub_unixtime2datetime+0x2fc>  // b.lo, b.ul, b.last
    47dc:	ldrb	w4, [sp, #6]
    47e0:	sub	w0, w0, w2
    47e4:	cmp	w0, w4
    47e8:	b.cc	48c4 <grub_unixtime2datetime+0x2cc>  // b.lo, b.ul, b.last
    47ec:	ldrb	w2, [sp, #7]
    47f0:	sub	w0, w0, w4
    47f4:	cmp	w0, w2
    47f8:	b.cc	4900 <grub_unixtime2datetime+0x308>  // b.lo, b.ul, b.last
    47fc:	ldrb	w4, [sp, #8]
    4800:	sub	w0, w0, w2
    4804:	cmp	w0, w4
    4808:	b.cc	4918 <grub_unixtime2datetime+0x320>  // b.lo, b.ul, b.last
    480c:	ldrb	w2, [sp, #9]
    4810:	sub	w0, w0, w4
    4814:	cmp	w0, w2
    4818:	b.cc	4924 <grub_unixtime2datetime+0x32c>  // b.lo, b.ul, b.last
    481c:	ldrb	w4, [sp, #10]
    4820:	sub	w0, w0, w2
    4824:	cmp	w0, w4
    4828:	b.cc	4930 <grub_unixtime2datetime+0x338>  // b.lo, b.ul, b.last
    482c:	ldrb	w2, [sp, #11]
    4830:	sub	w0, w0, w4
    4834:	cmp	w2, w0
    4838:	b.hi	493c <grub_unixtime2datetime+0x344>  // b.pmore
    483c:	sub	w0, w0, w2
    4840:	mov	w5, #0xd                   	// #13
    4844:	mov	w2, #0xb3c5                	// #46021
    4848:	add	w0, w0, #0x1
    484c:	movk	w2, #0x91a2, lsl #16
    4850:	strb	w0, [x1, #3]
    4854:	mov	w6, #0xe10                 	// #3600
    4858:	mov	w4, #0x8889                	// #34953
    485c:	umull	x2, w3, w2
    4860:	movk	w4, #0x8888, lsl #16
    4864:	strb	w5, [x1, #2]
    4868:	lsr	x0, x2, #43
    486c:	strb	w0, [x1, #4]
    4870:	msub	w0, w0, w6, w3
    4874:	umull	x2, w0, w4
    4878:	lsr	x2, x2, #37
    487c:	strb	w2, [x1, #5]
    4880:	lsl	w3, w2, #4
    4884:	sub	w2, w3, w2
    4888:	sub	w0, w0, w2, lsl #2
    488c:	strb	w0, [x1, #6]
    4890:	add	sp, sp, #0x10
    4894:	ret
    4898:	mov	w3, #0x517f                	// #20863
    489c:	mov	w2, #0x4507                	// #17671
    48a0:	movk	w3, #0x1, lsl #16
    48a4:	sub	w3, w3, w0
    48a8:	movk	w2, #0xc22e, lsl #16
    48ac:	umull	x3, w3, w2
    48b0:	lsr	x3, x3, #48
    48b4:	neg	w3, w3
    48b8:	b	4628 <grub_unixtime2datetime+0x30>
    48bc:	mov	w5, #0x2                   	// #2
    48c0:	b	4844 <grub_unixtime2datetime+0x24c>
    48c4:	mov	w5, #0x6                   	// #6
    48c8:	add	w5, w5, #0x1
    48cc:	b	4844 <grub_unixtime2datetime+0x24c>
    48d0:	mov	w5, #0x2                   	// #2
    48d4:	add	w5, w5, #0x1
    48d8:	b	4844 <grub_unixtime2datetime+0x24c>
    48dc:	mov	w5, #0x3                   	// #3
    48e0:	add	w5, w5, #0x1
    48e4:	b	4844 <grub_unixtime2datetime+0x24c>
    48e8:	mov	w5, #0x4                   	// #4
    48ec:	add	w5, w5, #0x1
    48f0:	b	4844 <grub_unixtime2datetime+0x24c>
    48f4:	mov	w5, #0x5                   	// #5
    48f8:	add	w5, w5, #0x1
    48fc:	b	4844 <grub_unixtime2datetime+0x24c>
    4900:	mov	w5, #0x7                   	// #7
    4904:	add	w5, w5, #0x1
    4908:	b	4844 <grub_unixtime2datetime+0x24c>
    490c:	mov	w5, #0x1                   	// #1
    4910:	add	w5, w5, #0x1
    4914:	b	4844 <grub_unixtime2datetime+0x24c>
    4918:	mov	w5, #0x8                   	// #8
    491c:	add	w5, w5, #0x1
    4920:	b	4844 <grub_unixtime2datetime+0x24c>
    4924:	mov	w5, #0x9                   	// #9
    4928:	add	w5, w5, #0x1
    492c:	b	4844 <grub_unixtime2datetime+0x24c>
    4930:	mov	w5, #0xa                   	// #10
    4934:	add	w5, w5, #0x1
    4938:	b	4844 <grub_unixtime2datetime+0x24c>
    493c:	mov	w5, #0xb                   	// #11
    4940:	add	w5, w5, #0x1
    4944:	b	4844 <grub_unixtime2datetime+0x24c>
	...
    4950:	stp	x29, x30, [sp, #-32]!
    4954:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4958:	mov	x29, sp
    495c:	str	x19, [sp, #16]
    4960:	mov	x19, x0
    4964:	ldr	x0, [x1]
    4968:	bl	0 <grub_printf>
    496c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4970:	ldr	x1, [x19]
    4974:	ldr	x0, [x0]
    4978:	bl	0 <grub_printf_>
    497c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4980:	ldr	x19, [sp, #16]
    4984:	ldp	x29, x30, [sp], #32
    4988:	ldr	x0, [x0]
    498c:	b	0 <grub_printf>
	...
    49a8:	stp	x29, x30, [sp, #-32]!
    49ac:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    49b0:	mov	x29, sp
    49b4:	str	x19, [sp, #16]
    49b8:	mov	x19, x0
    49bc:	ldr	x0, [x1]
    49c0:	bl	0 <grub_printf>
    49c4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    49c8:	ldr	x1, [x19]
    49cc:	ldr	x0, [x0]
    49d0:	bl	0 <grub_printf_>
    49d4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    49d8:	ldr	x0, [x0]
    49dc:	bl	0 <grub_printf>
    49e0:	ldr	x19, [sp, #16]
    49e4:	mov	w0, #0x9c4                 	// #2500
    49e8:	ldp	x29, x30, [sp], #32
    49ec:	b	0 <grub_millisleep>
	...
    4a08:	stp	x29, x30, [sp, #-48]!
    4a0c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4a10:	mov	x29, sp
    4a14:	stp	x19, x20, [sp, #16]
    4a18:	ldr	x19, [x0]
    4a1c:	ldr	w0, [x19]
    4a20:	str	x21, [sp, #32]
    4a24:	cbnz	w0, 4aac <grub_unixtime2datetime+0x4b4>
    4a28:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4a2c:	ldr	x0, [x0]
    4a30:	bl	0 <grub_printf>
    4a34:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4a38:	ldr	x0, [x0]
    4a3c:	bl	0 <grub_printf_>
    4a40:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4a44:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4a48:	ldr	x21, [x1]
    4a4c:	ldr	x20, [x0]
    4a50:	ldr	x1, [x21]
    4a54:	mov	x0, x20
    4a58:	blr	x1
    4a5c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4a60:	ldr	x0, [x0]
    4a64:	bl	0 <grub_printf_>
    4a68:	bl	0 <grub_refresh>
    4a6c:	bl	0 <grub_get_time_ms>
    4a70:	mov	x1, #0x2710                	// #10000
    4a74:	add	x19, x0, x1
    4a78:	b	4a84 <grub_unixtime2datetime+0x48c>
    4a7c:	bl	0 <grub_getkey_noblock>
    4a80:	cbnz	w0, 4a90 <grub_unixtime2datetime+0x498>
    4a84:	bl	0 <grub_get_time_ms>
    4a88:	cmp	x19, x0
    4a8c:	b.hi	4a7c <grub_unixtime2datetime+0x484>  // b.pmore
    4a90:	mov	x0, x20
    4a94:	ldr	x1, [x21]
    4a98:	ldp	x19, x20, [sp, #16]
    4a9c:	mov	x16, x1
    4aa0:	ldr	x21, [sp, #32]
    4aa4:	ldp	x29, x30, [sp], #48
    4aa8:	br	x16
    4aac:	bl	0 <grub_print_error>
    4ab0:	str	wzr, [x19]
    4ab4:	b	4a28 <grub_unixtime2datetime+0x430>
	...

0000000000004ae8 <grub_wait_after_message>:
    4ae8:	stp	x29, x30, [sp, #-48]!
    4aec:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4af0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4af4:	mov	x29, sp
    4af8:	str	x21, [sp, #32]
    4afc:	ldr	x21, [x1]
    4b00:	stp	x19, x20, [sp, #16]
    4b04:	ldr	x20, [x0]
    4b08:	ldr	x1, [x21]
    4b0c:	mov	x0, x20
    4b10:	blr	x1
    4b14:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4b18:	ldr	x0, [x0]
    4b1c:	bl	0 <grub_printf_>
    4b20:	bl	0 <grub_refresh>
    4b24:	bl	0 <grub_get_time_ms>
    4b28:	mov	x1, #0x2710                	// #10000
    4b2c:	add	x19, x0, x1
    4b30:	b	4b3c <grub_wait_after_message+0x54>
    4b34:	bl	0 <grub_getkey_noblock>
    4b38:	cbnz	w0, 4b48 <grub_wait_after_message+0x60>
    4b3c:	bl	0 <grub_get_time_ms>
    4b40:	cmp	x0, x19
    4b44:	b.cc	4b34 <grub_wait_after_message+0x4c>  // b.lo, b.ul, b.last
    4b48:	mov	x0, x20
    4b4c:	ldr	x1, [x21]
    4b50:	ldp	x19, x20, [sp, #16]
    4b54:	mov	x16, x1
    4b58:	ldr	x21, [sp, #32]
    4b5c:	ldp	x29, x30, [sp], #48
    4b60:	br	x16
    4b64:	nop
	...

0000000000004b80 <grub_menu_get_entry>:
    4b80:	ldr	x0, [x0, #8]
    4b84:	cmp	x0, #0x0
    4b88:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    4b8c:	b.le	4ba4 <grub_menu_get_entry+0x24>
    4b90:	ldr	x0, [x0, #72]
    4b94:	sub	w1, w1, #0x1
    4b98:	cmp	x0, #0x0
    4b9c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    4ba0:	b.gt	4b90 <grub_menu_get_entry+0x10>
    4ba4:	ret

0000000000004ba8 <grub_menu_get_timeout>:
    4ba8:	stp	x29, x30, [sp, #-48]!
    4bac:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4bb0:	mov	x29, sp
    4bb4:	stp	x19, x20, [sp, #16]
    4bb8:	ldr	x20, [x0]
    4bbc:	mov	x0, x20
    4bc0:	bl	0 <grub_env_get>
    4bc4:	cbz	x0, 4c24 <grub_menu_get_timeout+0x7c>
    4bc8:	mov	x19, x0
    4bcc:	str	x21, [sp, #32]
    4bd0:	bl	0 <grub_error_push>
    4bd4:	mov	x0, x19
    4bd8:	mov	x1, #0x0                   	// #0
    4bdc:	mov	w2, #0x0                   	// #0
    4be0:	bl	0 <grub_strtoul>
    4be4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4be8:	mov	w19, w0
    4bec:	ldr	x21, [x1]
    4bf0:	ldr	w1, [x21]
    4bf4:	cbnz	w1, 4c10 <grub_menu_get_timeout+0x68>
    4bf8:	bl	0 <grub_error_pop>
    4bfc:	ldr	x21, [sp, #32]
    4c00:	mov	w0, w19
    4c04:	ldp	x19, x20, [sp, #16]
    4c08:	ldp	x29, x30, [sp], #48
    4c0c:	ret
    4c10:	mov	x0, x20
    4c14:	mov	w19, #0xffffffff            	// #-1
    4c18:	bl	0 <grub_env_unset>
    4c1c:	str	wzr, [x21]
    4c20:	b	4bf8 <grub_menu_get_timeout+0x50>
    4c24:	mov	w19, #0xffffffff            	// #-1
    4c28:	b	4c00 <grub_menu_get_timeout+0x58>
    4c2c:	nop
	...

0000000000004c40 <grub_menu_set_timeout>:
    4c40:	cmp	w0, #0x0
    4c44:	b.gt	4c4c <grub_menu_set_timeout+0xc>
    4c48:	ret
    4c4c:	stp	x29, x30, [sp, #-32]!
    4c50:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4c54:	mov	w3, w0
    4c58:	mov	x29, sp
    4c5c:	ldr	x2, [x1]
    4c60:	add	x0, sp, #0x10
    4c64:	mov	x1, #0x10                  	// #16
    4c68:	bl	0 <grub_snprintf>
    4c6c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4c70:	add	x1, sp, #0x10
    4c74:	ldr	x0, [x0]
    4c78:	bl	0 <grub_env_set>
    4c7c:	ldp	x29, x30, [sp], #32
    4c80:	ret
    4c84:	nop
	...

0000000000004c98 <grub_menu_register_viewer>:
    4c98:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4c9c:	ldr	x1, [x1]
    4ca0:	ldr	x2, [x1]
    4ca4:	str	x2, [x0]
    4ca8:	str	x0, [x1]
    4cac:	ret
	...

0000000000004cb8 <grub_show_menu>:
    4cb8:	stp	x29, x30, [sp, #-160]!
    4cbc:	adrp	x5, 0 <grub_normal_free_menu-0x498>
    4cc0:	adrp	x4, 0 <grub_normal_free_menu-0x498>
    4cc4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    4cc8:	mov	x29, sp
    4ccc:	adrp	x6, 0 <grub_normal_free_menu-0x498>
    4cd0:	stp	x23, x24, [sp, #48]
    4cd4:	ldr	x23, [x5]
    4cd8:	stp	x27, x28, [sp, #80]
    4cdc:	ldr	x27, [x4]
    4ce0:	stp	x21, x22, [sp, #32]
    4ce4:	mov	x21, x0
    4ce8:	ldr	x28, [x3]
    4cec:	stp	x25, x26, [sp, #64]
    4cf0:	mov	w26, w1
    4cf4:	ldr	x0, [x6]
    4cf8:	stp	x19, x20, [sp, #16]
    4cfc:	str	w2, [sp, #116]
    4d00:	str	x0, [sp, #136]
    4d04:	nop
    4d08:	ldr	x0, [sp, #136]
    4d0c:	bl	0 <grub_env_get>
    4d10:	mov	x19, x0
    4d14:	cbz	x0, 53c8 <grub_show_menu+0x710>
    4d18:	bl	0 <grub_error_push>
    4d1c:	mov	x1, #0x0                   	// #0
    4d20:	mov	x0, x19
    4d24:	mov	w2, #0x0                   	// #0
    4d28:	bl	0 <grub_strtoul>
    4d2c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4d30:	mov	x20, x0
    4d34:	ldr	x1, [x1]
    4d38:	ldr	w0, [x1]
    4d3c:	cmp	w0, #0xa
    4d40:	b.eq	58c8 <grub_show_menu+0xc10>  // b.none
    4d44:	cbz	w0, 5a44 <grub_show_menu+0xd8c>
    4d48:	mov	w22, #0x0                   	// #0
    4d4c:	str	wzr, [x1]
    4d50:	bl	0 <grub_error_pop>
    4d54:	mov	x0, x23
    4d58:	bl	0 <grub_env_get>
    4d5c:	mov	x19, x0
    4d60:	cbz	x0, 4ff0 <grub_show_menu+0x338>
    4d64:	bl	0 <grub_error_push>
    4d68:	mov	x1, #0x0                   	// #0
    4d6c:	mov	x0, x19
    4d70:	mov	w2, #0x0                   	// #0
    4d74:	bl	0 <grub_strtoul>
    4d78:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    4d7c:	mov	x20, x0
    4d80:	ldr	x25, [x1]
    4d84:	ldr	w0, [x25]
    4d88:	cbnz	w0, 59bc <grub_show_menu+0xd04>
    4d8c:	mov	w19, w20
    4d90:	bl	0 <grub_error_pop>
    4d94:	tbnz	w20, #31, 4ff8 <grub_show_menu+0x340>
    4d98:	mov	x0, x27
    4d9c:	bl	0 <grub_env_get>
    4da0:	mov	x1, x0
    4da4:	cbz	x0, 58b8 <grub_show_menu+0xc00>
    4da8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    4dac:	ldr	x20, [x2]
    4db0:	ldr	x0, [x20]
    4db4:	cbnz	x0, 4dc4 <grub_show_menu+0x10c>
    4db8:	b	58b8 <grub_show_menu+0xc00>
    4dbc:	ldr	x0, [x20, #16]!
    4dc0:	cbz	x0, 58b8 <grub_show_menu+0xc00>
    4dc4:	str	x1, [sp, #104]
    4dc8:	bl	0 <grub_strcmp>
    4dcc:	mov	w25, w0
    4dd0:	ldr	x1, [sp, #104]
    4dd4:	cbnz	w0, 4dbc <grub_show_menu+0x104>
    4dd8:	ldr	w0, [x20, #8]
    4ddc:	str	w0, [sp, #104]
    4de0:	sub	w0, w0, #0x1
    4de4:	cmp	w0, #0x1
    4de8:	b.hi	58b8 <grub_show_menu+0xc00>  // b.pmore
    4dec:	ldr	w0, [sp, #104]
    4df0:	cmp	w19, #0x0
    4df4:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    4df8:	b.eq	5870 <grub_show_menu+0xbb8>  // b.none
    4dfc:	bl	0 <grub_get_time_ms>
    4e00:	mov	x20, x0
    4e04:	bl	0 <grub_getkey_noblock>
    4e08:	cbnz	w0, 4e28 <grub_show_menu+0x170>
    4e0c:	cmp	w19, #0x0
    4e10:	mov	x24, x20
    4e14:	b.gt	4fa4 <grub_show_menu+0x2ec>
    4e18:	cbz	w19, 58a8 <grub_show_menu+0xbf0>
    4e1c:	mov	x20, x24
    4e20:	bl	0 <grub_getkey_noblock>
    4e24:	cbz	w0, 4e0c <grub_show_menu+0x154>
    4e28:	ldr	w3, [x21]
    4e2c:	ldr	x2, [x21, #8]
    4e30:	cmp	w3, #0x0
    4e34:	b.le	589c <grub_show_menu+0xbe4>
    4e38:	mov	w1, #0x0                   	// #0
    4e3c:	b	4e50 <grub_show_menu+0x198>
    4e40:	add	w1, w1, #0x1
    4e44:	cmp	w3, w1
    4e48:	ldr	x2, [x2, #72]
    4e4c:	b.eq	589c <grub_show_menu+0xbe4>  // b.none
    4e50:	ldr	w4, [x2, #64]
    4e54:	cmp	w0, w4
    4e58:	b.ne	4e40 <grub_show_menu+0x188>  // b.any
    4e5c:	mov	x0, x23
    4e60:	mov	w22, w1
    4e64:	bl	0 <grub_env_unset>
    4e68:	mov	x0, x27
    4e6c:	bl	0 <grub_env_unset>
    4e70:	ldr	x0, [x21, #8]
    4e74:	b	4e80 <grub_show_menu+0x1c8>
    4e78:	ldr	x0, [x0, #72]
    4e7c:	sub	w22, w22, #0x1
    4e80:	cmp	x0, #0x0
    4e84:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4e88:	b.gt	4e78 <grub_show_menu+0x1c0>
    4e8c:	str	x0, [sp, #104]
    4e90:	cbz	x0, 4d08 <grub_show_menu+0x50>
    4e94:	bl	ce30 <grub_cls>
    4e98:	ldr	x0, [sp, #104]
    4e9c:	cbz	w25, 53d0 <grub_show_menu+0x718>
    4ea0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    4ea4:	mov	x1, #0x0                   	// #0
    4ea8:	ldr	x20, [x2]
    4eac:	ldr	x2, [x20, #64]
    4eb0:	blr	x2
    4eb4:	ldr	x0, [sp, #104]
    4eb8:	mov	w1, #0x1                   	// #1
    4ebc:	bl	5ae8 <grub_show_menu+0xe30>
    4ec0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4ec4:	ldr	x22, [x0]
    4ec8:	mov	x0, x22
    4ecc:	bl	0 <grub_env_get>
    4ed0:	mov	x19, x0
    4ed4:	cbz	x0, 5364 <grub_show_menu+0x6ac>
    4ed8:	bl	0 <grub_error_push>
    4edc:	mov	x0, x19
    4ee0:	add	x1, sp, #0x90
    4ee4:	mov	w2, #0x0                   	// #0
    4ee8:	bl	0 <grub_strtoul>
    4eec:	mov	x19, x0
    4ef0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4ef4:	add	x0, x0, #0x0
    4ef8:	ldr	x0, [x0]
    4efc:	ldr	w0, [x0]
    4f00:	cbnz	w0, 5348 <grub_show_menu+0x690>
    4f04:	ldr	x1, [sp, #144]
    4f08:	ldrb	w0, [x1]
    4f0c:	cbnz	w0, 4f28 <grub_show_menu+0x270>
    4f10:	b	4f34 <grub_show_menu+0x27c>
    4f14:	ldr	x0, [sp, #144]
    4f18:	add	x1, x0, #0x1
    4f1c:	str	x1, [sp, #144]
    4f20:	ldrb	w0, [x0, #1]
    4f24:	cbz	w0, 4f34 <grub_show_menu+0x27c>
    4f28:	bl	0 <grub_isspace>
    4f2c:	cbnz	w0, 4f14 <grub_show_menu+0x25c>
    4f30:	ldr	x1, [sp, #144]
    4f34:	mov	w25, w19
    4f38:	mov	x0, x22
    4f3c:	bl	0 <grub_env_set>
    4f40:	bl	0 <grub_error_pop>
    4f44:	tbnz	w19, #31, 5364 <grub_show_menu+0x6ac>
    4f48:	bl	0 <grub_print_error>
    4f4c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4f50:	add	x0, x0, #0x0
    4f54:	ldr	x0, [x0]
    4f58:	str	wzr, [x0]
    4f5c:	ldr	x0, [x21, #8]
    4f60:	cmp	x0, #0x0
    4f64:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    4f68:	b.le	4f84 <grub_show_menu+0x2cc>
    4f6c:	nop
    4f70:	ldr	x0, [x0, #72]
    4f74:	sub	w25, w25, #0x1
    4f78:	cmp	x0, #0x0
    4f7c:	ccmp	w25, #0x0, #0x4, ne  // ne = any
    4f80:	b.gt	4f70 <grub_show_menu+0x2b8>
    4f84:	ldr	x2, [x20, #72]
    4f88:	mov	x1, #0x0                   	// #0
    4f8c:	str	x0, [sp, #104]
    4f90:	blr	x2
    4f94:	ldr	x0, [sp, #104]
    4f98:	mov	w1, #0x1                   	// #1
    4f9c:	bl	5ae8 <grub_show_menu+0xe30>
    4fa0:	b	4ec8 <grub_show_menu+0x210>
    4fa4:	bl	0 <grub_get_time_ms>
    4fa8:	mov	x24, x0
    4fac:	sub	x0, x0, x20
    4fb0:	cmp	x0, #0x3e7
    4fb4:	b.ls	4e04 <grub_show_menu+0x14c>  // b.plast
    4fb8:	ldr	w0, [sp, #104]
    4fbc:	sub	w19, w19, #0x1
    4fc0:	cmp	w0, #0x1
    4fc4:	b.ne	4e18 <grub_show_menu+0x160>  // b.any
    4fc8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4fcc:	ldr	x20, [x0]
    4fd0:	ldr	x0, [x20, #8]
    4fd4:	bl	bc90 <grub_term_restore_pos>
    4fd8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    4fdc:	mov	w1, w19
    4fe0:	ldr	x0, [x0]
    4fe4:	bl	0 <grub_printf>
    4fe8:	bl	0 <grub_refresh>
    4fec:	b	4e18 <grub_show_menu+0x160>
    4ff0:	mov	w19, #0xffffffff            	// #-1
    4ff4:	nop
    4ff8:	mov	x0, x27
    4ffc:	bl	0 <grub_env_unset>
    5000:	mov	x0, x27
    5004:	bl	0 <grub_env_get>
    5008:	mov	x1, x0
    500c:	cbz	x0, 5020 <grub_show_menu+0x368>
    5010:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    5014:	ldr	x20, [x2]
    5018:	ldr	x0, [x20]
    501c:	cbnz	x0, 4dc4 <grub_show_menu+0x10c>
    5020:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5024:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5028:	mov	w19, w22
    502c:	ldr	x20, [x1]
    5030:	ldr	x0, [x0]
    5034:	str	x0, [sp, #128]
    5038:	ldr	x0, [sp, #128]
    503c:	ldr	x24, [x0]
    5040:	mov	x25, x24
    5044:	cbnz	x24, 5054 <grub_show_menu+0x39c>
    5048:	b	5180 <grub_show_menu+0x4c8>
    504c:	ldr	x25, [x25]
    5050:	cbz	x25, 59d4 <grub_show_menu+0xd1c>
    5054:	ldr	x0, [x25, #112]
    5058:	cbz	x0, 504c <grub_show_menu+0x394>
    505c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5060:	ldr	x0, [x0]
    5064:	bl	0 <grub_env_get>
    5068:	cbz	x0, 5100 <grub_show_menu+0x448>
    506c:	ldr	x3, [x20, #16]
    5070:	cbz	x3, 59fc <grub_show_menu+0xd44>
    5074:	mov	w4, #0x1                   	// #1
    5078:	mov	w2, w26
    507c:	mov	x1, x21
    5080:	mov	w0, w19
    5084:	str	w4, [sp, #104]
    5088:	blr	x3
    508c:	cbz	w0, 5118 <grub_show_menu+0x460>
    5090:	bl	0 <grub_print_error>
    5094:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5098:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    509c:	ldr	x1, [x1]
    50a0:	str	x1, [sp, #120]
    50a4:	ldr	x24, [x0]
    50a8:	ldr	x1, [x1]
    50ac:	mov	x0, x24
    50b0:	blr	x1
    50b4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    50b8:	ldr	x0, [x0]
    50bc:	bl	0 <grub_printf_>
    50c0:	bl	0 <grub_refresh>
    50c4:	bl	0 <grub_get_time_ms>
    50c8:	mov	x1, #0x2710                	// #10000
    50cc:	add	x0, x0, x1
    50d0:	str	x0, [sp, #104]
    50d4:	b	50e0 <grub_show_menu+0x428>
    50d8:	bl	0 <grub_getkey_noblock>
    50dc:	cbnz	w0, 50f0 <grub_show_menu+0x438>
    50e0:	bl	0 <grub_get_time_ms>
    50e4:	ldr	x1, [sp, #104]
    50e8:	cmp	x1, x0
    50ec:	b.hi	50d8 <grub_show_menu+0x420>  // b.pmore
    50f0:	ldr	x0, [sp, #120]
    50f4:	ldr	x1, [x0]
    50f8:	mov	x0, x24
    50fc:	blr	x1
    5100:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5104:	str	wzr, [sp, #104]
    5108:	ldr	x0, [x25, #112]
    510c:	ldr	x1, [x1]
    5110:	str	wzr, [x1]
    5114:	blr	x0
    5118:	ldr	x0, [sp, #128]
    511c:	ldr	x24, [x0]
    5120:	cbz	x24, 5180 <grub_show_menu+0x4c8>
    5124:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5128:	adrp	x25, 0 <grub_normal_free_menu-0x498>
    512c:	ldr	x0, [x0]
    5130:	str	x0, [sp, #120]
    5134:	nop
    5138:	ldr	x0, [x24, #16]
    513c:	ldr	x1, [sp, #120]
    5140:	bl	0 <grub_strcmp>
    5144:	cmp	w0, #0x0
    5148:	ldr	w0, [sp, #104]
    514c:	mov	w3, w26
    5150:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    5154:	b.ne	5178 <grub_show_menu+0x4c0>  // b.any
    5158:	mov	x2, x21
    515c:	mov	w1, w19
    5160:	mov	x0, x24
    5164:	bl	9b18 <grub_menu_try_text>
    5168:	cbz	w0, 5178 <grub_show_menu+0x4c0>
    516c:	bl	0 <grub_print_error>
    5170:	ldr	x0, [x25]
    5174:	str	wzr, [x0]
    5178:	ldr	x24, [x24]
    517c:	cbnz	x24, 5138 <grub_show_menu+0x480>
    5180:	bl	0 <grub_get_time_ms>
    5184:	str	x0, [sp, #104]
    5188:	mov	x0, x23
    518c:	bl	0 <grub_env_get>
    5190:	mov	x25, x0
    5194:	cbz	x0, 584c <grub_show_menu+0xb94>
    5198:	bl	0 <grub_error_push>
    519c:	mov	x0, x25
    51a0:	mov	x1, #0x0                   	// #0
    51a4:	mov	w2, #0x0                   	// #0
    51a8:	bl	0 <grub_strtoul>
    51ac:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    51b0:	mov	x25, x0
    51b4:	ldr	x1, [x1]
    51b8:	ldr	w0, [x1]
    51bc:	cbnz	w0, 5830 <grub_show_menu+0xb78>
    51c0:	bl	0 <grub_error_pop>
    51c4:	mov	w0, w25
    51c8:	cmp	w25, #0x0
    51cc:	b.le	584c <grub_show_menu+0xb94>
    51d0:	ldr	x25, [x20]
    51d4:	cbz	x25, 51f8 <grub_show_menu+0x540>
    51d8:	ldr	x1, [x25, #8]
    51dc:	str	w0, [sp, #120]
    51e0:	ldr	x2, [x25, #24]
    51e4:	blr	x2
    51e8:	ldr	x25, [x25]
    51ec:	ldr	w0, [sp, #120]
    51f0:	cbnz	x25, 51d8 <grub_show_menu+0x520>
    51f4:	nop
    51f8:	mov	x0, x23
    51fc:	bl	0 <grub_env_get>
    5200:	mov	x25, x0
    5204:	cbz	x0, 5814 <grub_show_menu+0xb5c>
    5208:	bl	0 <grub_error_push>
    520c:	mov	x0, x25
    5210:	mov	w2, #0x0                   	// #0
    5214:	mov	x1, #0x0                   	// #0
    5218:	bl	0 <grub_strtoul>
    521c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    5220:	mov	x24, x0
    5224:	ldr	x25, [x2]
    5228:	ldr	w0, [x25]
    522c:	cbnz	w0, 5804 <grub_show_menu+0xb4c>
    5230:	bl	0 <grub_error_pop>
    5234:	ldr	w0, [x28]
    5238:	cbnz	w0, 536c <grub_show_menu+0x6b4>
    523c:	cmp	w24, #0x0
    5240:	mov	w25, w24
    5244:	b.le	5290 <grub_show_menu+0x5d8>
    5248:	bl	0 <grub_get_time_ms>
    524c:	str	x0, [sp, #120]
    5250:	ldr	x1, [sp, #104]
    5254:	sub	x0, x0, x1
    5258:	cmp	x0, #0x3e7
    525c:	b.ls	57f0 <grub_show_menu+0xb38>  // b.plast
    5260:	subs	w25, w24, #0x1
    5264:	b.ne	53e4 <grub_show_menu+0x72c>  // b.any
    5268:	ldr	x24, [x20]
    526c:	cbz	x24, 5308 <grub_show_menu+0x650>
    5270:	ldr	x1, [x24, #8]
    5274:	mov	w0, w25
    5278:	ldr	x4, [x24, #24]
    527c:	blr	x4
    5280:	ldr	x24, [x24]
    5284:	cbnz	x24, 5270 <grub_show_menu+0x5b8>
    5288:	ldr	x0, [sp, #120]
    528c:	str	x0, [sp, #104]
    5290:	cbz	w25, 5308 <grub_show_menu+0x650>
    5294:	bl	0 <grub_getkey_noblock>
    5298:	mov	w24, w0
    529c:	cmp	w0, #0x0
    52a0:	b.le	51f8 <grub_show_menu+0x540>
    52a4:	tbz	w25, #31, 5428 <grub_show_menu+0x770>
    52a8:	mov	w0, #0x49                  	// #73
    52ac:	movk	w0, #0x80, lsl #16
    52b0:	cmp	w24, w0
    52b4:	b.eq	5470 <grub_show_menu+0x7b8>  // b.none
    52b8:	b.gt	5674 <grub_show_menu+0x9bc>
    52bc:	cmp	w24, #0x63
    52c0:	b.eq	5638 <grub_show_menu+0x980>  // b.none
    52c4:	b.le	55f8 <grub_show_menu+0x940>
    52c8:	cmp	w24, #0x76
    52cc:	b.eq	55c4 <grub_show_menu+0x90c>  // b.none
    52d0:	b.le	54d8 <grub_show_menu+0x820>
    52d4:	mov	w0, #0x47                  	// #71
    52d8:	movk	w0, #0x80, lsl #16
    52dc:	cmp	w24, w0
    52e0:	b.ne	54a0 <grub_show_menu+0x7e8>  // b.any
    52e4:	ldr	x19, [x20]
    52e8:	cbz	x19, 5790 <grub_show_menu+0xad8>
    52ec:	nop
    52f0:	ldp	x1, x2, [x19, #8]
    52f4:	mov	w0, #0x0                   	// #0
    52f8:	blr	x2
    52fc:	ldr	x19, [x19]
    5300:	cbnz	x19, 52f0 <grub_show_menu+0x638>
    5304:	b	51f8 <grub_show_menu+0x540>
    5308:	mov	x0, x23
    530c:	bl	0 <grub_env_unset>
    5310:	ldr	x19, [x20]
    5314:	cbz	x19, 5338 <grub_show_menu+0x680>
    5318:	mov	x25, x19
    531c:	ldr	x19, [x19]
    5320:	ldr	x0, [x25, #8]
    5324:	ldr	x1, [x25, #40]
    5328:	blr	x1
    532c:	mov	x0, x25
    5330:	bl	0 <grub_free>
    5334:	cbnz	x19, 5318 <grub_show_menu+0x660>
    5338:	str	xzr, [x20]
    533c:	mov	w25, #0x1                   	// #1
    5340:	tbz	w22, #31, 4e70 <grub_show_menu+0x1b8>
    5344:	b	536c <grub_show_menu+0x6b4>
    5348:	mov	x0, x22
    534c:	bl	0 <grub_env_unset>
    5350:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5354:	add	x0, x0, #0x0
    5358:	ldr	x0, [x0]
    535c:	str	wzr, [x0]
    5360:	bl	0 <grub_error_pop>
    5364:	ldr	w0, [sp, #116]
    5368:	cbz	w0, 53a8 <grub_show_menu+0x6f0>
    536c:	bl	0 <grub_print_error>
    5370:	ldr	w0, [x28]
    5374:	str	w0, [sp, #116]
    5378:	cbnz	w0, 5388 <grub_show_menu+0x6d0>
    537c:	mov	x0, #0x0                   	// #0
    5380:	bl	2d90 <grub_auth_check_authentication>
    5384:	cbnz	w0, 5a30 <grub_show_menu+0xd78>
    5388:	mov	w0, #0x0                   	// #0
    538c:	ldp	x19, x20, [sp, #16]
    5390:	ldp	x21, x22, [sp, #32]
    5394:	ldp	x23, x24, [sp, #48]
    5398:	ldp	x25, x26, [sp, #64]
    539c:	ldp	x27, x28, [sp, #80]
    53a0:	ldp	x29, x30, [sp], #160
    53a4:	ret
    53a8:	ldr	x1, [x20, #80]
    53ac:	mov	x0, #0x0                   	// #0
    53b0:	blr	x1
    53b4:	ldr	x0, [sp, #136]
    53b8:	bl	0 <grub_env_get>
    53bc:	mov	x19, x0
    53c0:	cbnz	x0, 4d18 <grub_show_menu+0x60>
    53c4:	nop
    53c8:	mov	w22, #0x0                   	// #0
    53cc:	b	4d54 <grub_show_menu+0x9c>
    53d0:	mov	w1, #0x0                   	// #0
    53d4:	bl	5ae8 <grub_show_menu+0xe30>
    53d8:	ldr	w0, [sp, #116]
    53dc:	cbz	w0, 4d08 <grub_show_menu+0x50>
    53e0:	b	536c <grub_show_menu+0x6b4>
    53e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    53e8:	mov	w3, w25
    53ec:	mov	x1, #0x10                  	// #16
    53f0:	ldr	x2, [x0]
    53f4:	add	x0, sp, #0x90
    53f8:	bl	0 <grub_snprintf>
    53fc:	add	x1, sp, #0x90
    5400:	mov	x0, x23
    5404:	bl	0 <grub_env_set>
    5408:	ldr	x24, [x20]
    540c:	cbnz	x24, 5270 <grub_show_menu+0x5b8>
    5410:	bl	0 <grub_getkey_noblock>
    5414:	mov	w24, w0
    5418:	cmp	w0, #0x0
    541c:	ldr	x0, [sp, #120]
    5420:	str	x0, [sp, #104]
    5424:	b.le	51f8 <grub_show_menu+0x540>
    5428:	mov	x0, x23
    542c:	bl	0 <grub_env_unset>
    5430:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5434:	ldr	x0, [x0]
    5438:	bl	0 <grub_env_unset>
    543c:	ldr	x25, [x20]
    5440:	cbz	x25, 52a8 <grub_show_menu+0x5f0>
    5444:	nop
    5448:	ldr	x0, [x25, #8]
    544c:	ldr	x2, [x25, #32]
    5450:	blr	x2
    5454:	ldr	x25, [x25]
    5458:	cbnz	x25, 5448 <grub_show_menu+0x790>
    545c:	mov	w0, #0x49                  	// #73
    5460:	movk	w0, #0x80, lsl #16
    5464:	cmp	w24, w0
    5468:	b.ne	52b8 <grub_show_menu+0x600>  // b.any
    546c:	nop
    5470:	ldr	x25, [x20]
    5474:	cmp	w19, #0x9
    5478:	sub	w19, w19, #0xa
    547c:	csel	w19, w19, wzr, gt
    5480:	cbz	x25, 51f8 <grub_show_menu+0x540>
    5484:	nop
    5488:	ldp	x1, x2, [x25, #8]
    548c:	mov	w0, w19
    5490:	blr	x2
    5494:	ldr	x25, [x25]
    5498:	cbnz	x25, 5488 <grub_show_menu+0x7d0>
    549c:	b	51f8 <grub_show_menu+0x540>
    54a0:	add	w0, w0, #0x1
    54a4:	cmp	w24, w0
    54a8:	b.ne	554c <grub_show_menu+0x894>  // b.any
    54ac:	ldr	x25, [x20]
    54b0:	cmp	w19, #0x0
    54b4:	cset	w0, gt
    54b8:	sub	w19, w19, w0
    54bc:	cbz	x25, 51f8 <grub_show_menu+0x540>
    54c0:	ldp	x1, x2, [x25, #8]
    54c4:	mov	w0, w19
    54c8:	blr	x2
    54cc:	ldr	x25, [x25]
    54d0:	cbnz	x25, 54c0 <grub_show_menu+0x808>
    54d4:	b	51f8 <grub_show_menu+0x540>
    54d8:	cmp	w24, #0x65
    54dc:	b.ne	554c <grub_show_menu+0x894>  // b.any
    54e0:	ldr	x25, [x20]
    54e4:	cbz	x25, 5508 <grub_show_menu+0x850>
    54e8:	ldr	x0, [x25, #8]
    54ec:	mov	x24, x25
    54f0:	ldr	x2, [x25, #40]
    54f4:	ldr	x25, [x25]
    54f8:	blr	x2
    54fc:	mov	x0, x24
    5500:	bl	0 <grub_free>
    5504:	cbnz	x25, 54e8 <grub_show_menu+0x830>
    5508:	ldr	x0, [x21, #8]
    550c:	str	xzr, [x20]
    5510:	mov	w1, w19
    5514:	cmp	x0, #0x0
    5518:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    551c:	b.le	5534 <grub_show_menu+0x87c>
    5520:	ldr	x0, [x0, #72]
    5524:	sub	w1, w1, #0x1
    5528:	cmp	x0, #0x0
    552c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    5530:	b.gt	5520 <grub_show_menu+0x868>
    5534:	cbz	x0, 5038 <grub_show_menu+0x380>
    5538:	bl	73b8 <grub_menu_entry_run>
    553c:	b	5038 <grub_show_menu+0x380>
    5540:	b.le	56f8 <grub_show_menu+0xa40>
    5544:	cmp	w24, #0x5e
    5548:	b.eq	54ac <grub_show_menu+0x7f4>  // b.none
    554c:	ldr	w3, [x21]
    5550:	ldr	x0, [x21, #8]
    5554:	cmp	w3, #0x0
    5558:	b.le	51f8 <grub_show_menu+0x540>
    555c:	mov	x2, x0
    5560:	mov	w25, #0x0                   	// #0
    5564:	b	5578 <grub_show_menu+0x8c0>
    5568:	add	w25, w25, #0x1
    556c:	cmp	w3, w25
    5570:	ldr	x2, [x2, #72]
    5574:	b.eq	51f8 <grub_show_menu+0x540>  // b.none
    5578:	ldr	w4, [x2, #64]
    557c:	cmp	w4, w24
    5580:	b.ne	5568 <grub_show_menu+0x8b0>  // b.any
    5584:	ldr	x19, [x20]
    5588:	cbz	x19, 55b4 <grub_show_menu+0x8fc>
    558c:	nop
    5590:	mov	x22, x19
    5594:	ldr	x19, [x19]
    5598:	ldr	x0, [x22, #8]
    559c:	ldr	x1, [x22, #40]
    55a0:	blr	x1
    55a4:	mov	x0, x22
    55a8:	bl	0 <grub_free>
    55ac:	cbnz	x19, 5590 <grub_show_menu+0x8d8>
    55b0:	ldr	x0, [x21, #8]
    55b4:	mov	w22, w25
    55b8:	mov	w25, #0x0                   	// #0
    55bc:	str	xzr, [x20]
    55c0:	b	4e80 <grub_show_menu+0x1c8>
    55c4:	ldr	w0, [x21]
    55c8:	ldr	x25, [x20]
    55cc:	sub	w0, w0, #0x1
    55d0:	cmp	w19, w0
    55d4:	cinc	w19, w19, lt  // lt = tstop
    55d8:	cbz	x25, 51f8 <grub_show_menu+0x540>
    55dc:	nop
    55e0:	ldp	x1, x2, [x25, #8]
    55e4:	mov	w0, w19
    55e8:	blr	x2
    55ec:	ldr	x25, [x25]
    55f0:	cbnz	x25, 55e0 <grub_show_menu+0x928>
    55f4:	b	51f8 <grub_show_menu+0x540>
    55f8:	cmp	w24, #0x1b
    55fc:	b.ne	5540 <grub_show_menu+0x888>  // b.any
    5600:	cbz	w26, 51f8 <grub_show_menu+0x540>
    5604:	ldr	x19, [x20]
    5608:	cbz	x19, 5630 <grub_show_menu+0x978>
    560c:	nop
    5610:	mov	x22, x19
    5614:	ldr	x19, [x19]
    5618:	ldr	x0, [x22, #8]
    561c:	ldr	x1, [x22, #40]
    5620:	blr	x1
    5624:	mov	x0, x22
    5628:	bl	0 <grub_free>
    562c:	cbnz	x19, 5610 <grub_show_menu+0x958>
    5630:	str	xzr, [x20]
    5634:	b	536c <grub_show_menu+0x6b4>
    5638:	ldr	x25, [x20]
    563c:	cbz	x25, 5660 <grub_show_menu+0x9a8>
    5640:	ldr	x0, [x25, #8]
    5644:	mov	x24, x25
    5648:	ldr	x2, [x25, #40]
    564c:	ldr	x25, [x25]
    5650:	blr	x2
    5654:	mov	x0, x24
    5658:	bl	0 <grub_free>
    565c:	cbnz	x25, 5640 <grub_show_menu+0x988>
    5660:	mov	w1, #0x0                   	// #0
    5664:	mov	w0, #0x1                   	// #1
    5668:	str	xzr, [x20]
    566c:	bl	b30 <grub_cmdline_run>
    5670:	b	5038 <grub_show_menu+0x380>
    5674:	mov	w0, #0x63                  	// #99
    5678:	movk	w0, #0x200, lsl #16
    567c:	cmp	w24, w0
    5680:	b.eq	5798 <grub_show_menu+0xae0>  // b.none
    5684:	b.le	5754 <grub_show_menu+0xa9c>
    5688:	mov	w0, #0x67                  	// #103
    568c:	movk	w0, #0x200, lsl #16
    5690:	cmp	w24, w0
    5694:	b.eq	5470 <grub_show_menu+0x7b8>  // b.none
    5698:	b.le	56bc <grub_show_menu+0xa04>
    569c:	mov	w0, #0x6e                  	// #110
    56a0:	movk	w0, #0x200, lsl #16
    56a4:	cmp	w24, w0
    56a8:	b.eq	55c4 <grub_show_menu+0x90c>  // b.none
    56ac:	add	w0, w0, #0x2
    56b0:	cmp	w24, w0
    56b4:	b.eq	54ac <grub_show_menu+0x7f4>  // b.none
    56b8:	b	554c <grub_show_menu+0x894>
    56bc:	mov	w0, #0x65                  	// #101
    56c0:	movk	w0, #0x200, lsl #16
    56c4:	cmp	w24, w0
    56c8:	b.ne	5744 <grub_show_menu+0xa8c>  // b.any
    56cc:	ldr	x25, [x20]
    56d0:	ldr	w19, [x21]
    56d4:	sub	w19, w19, #0x1
    56d8:	cbz	x25, 51f8 <grub_show_menu+0x540>
    56dc:	nop
    56e0:	ldp	x1, x2, [x25, #8]
    56e4:	mov	w0, w19
    56e8:	blr	x2
    56ec:	ldr	x25, [x25]
    56f0:	cbnz	x25, 56e0 <grub_show_menu+0xa28>
    56f4:	b	51f8 <grub_show_menu+0x540>
    56f8:	cmp	w24, #0xa
    56fc:	b.eq	5708 <grub_show_menu+0xa50>  // b.none
    5700:	cmp	w24, #0xd
    5704:	b.ne	554c <grub_show_menu+0x894>  // b.any
    5708:	ldr	x22, [x20]
    570c:	cbz	x22, 5730 <grub_show_menu+0xa78>
    5710:	mov	x25, x22
    5714:	ldr	x22, [x22]
    5718:	ldr	x0, [x25, #8]
    571c:	ldr	x1, [x25, #40]
    5720:	blr	x1
    5724:	mov	x0, x25
    5728:	bl	0 <grub_free>
    572c:	cbnz	x22, 5710 <grub_show_menu+0xa58>
    5730:	str	xzr, [x20]
    5734:	mov	w22, w19
    5738:	mov	w25, #0x0                   	// #0
    573c:	tbz	w22, #31, 4e70 <grub_show_menu+0x1b8>
    5740:	b	536c <grub_show_menu+0x6b4>
    5744:	add	w0, w0, #0x1
    5748:	cmp	w24, w0
    574c:	b.eq	5708 <grub_show_menu+0xa50>  // b.none
    5750:	b	554c <grub_show_menu+0x894>
    5754:	mov	w0, #0x50                  	// #80
    5758:	movk	w0, #0x80, lsl #16
    575c:	cmp	w24, w0
    5760:	b.eq	55c4 <grub_show_menu+0x90c>  // b.none
    5764:	b.le	57d0 <grub_show_menu+0xb18>
    5768:	mov	w0, #0x51                  	// #81
    576c:	movk	w0, #0x80, lsl #16
    5770:	cmp	w24, w0
    5774:	b.eq	5798 <grub_show_menu+0xae0>  // b.none
    5778:	mov	w0, #0x61                  	// #97
    577c:	movk	w0, #0x200, lsl #16
    5780:	cmp	w24, w0
    5784:	b.ne	554c <grub_show_menu+0x894>  // b.any
    5788:	ldr	x19, [x20]
    578c:	cbnz	x19, 52f0 <grub_show_menu+0x638>
    5790:	mov	w19, #0x0                   	// #0
    5794:	b	51f8 <grub_show_menu+0x540>
    5798:	ldr	x25, [x20]
    579c:	add	w19, w19, #0xa
    57a0:	ldr	w0, [x21]
    57a4:	cmp	w19, w0
    57a8:	sub	w0, w0, #0x1
    57ac:	csel	w19, w0, w19, ge  // ge = tcont
    57b0:	cbz	x25, 51f8 <grub_show_menu+0x540>
    57b4:	nop
    57b8:	ldp	x1, x2, [x25, #8]
    57bc:	mov	w0, w19
    57c0:	blr	x2
    57c4:	ldr	x25, [x25]
    57c8:	cbnz	x25, 57b8 <grub_show_menu+0xb00>
    57cc:	b	51f8 <grub_show_menu+0x540>
    57d0:	mov	w0, #0x4d                  	// #77
    57d4:	movk	w0, #0x80, lsl #16
    57d8:	cmp	w24, w0
    57dc:	b.eq	5708 <grub_show_menu+0xa50>  // b.none
    57e0:	add	w0, w0, #0x2
    57e4:	cmp	w24, w0
    57e8:	b.eq	56cc <grub_show_menu+0xa14>  // b.none
    57ec:	b	554c <grub_show_menu+0x894>
    57f0:	bl	0 <grub_getkey_noblock>
    57f4:	mov	w24, w0
    57f8:	cmp	w0, #0x0
    57fc:	b.gt	5428 <grub_show_menu+0x770>
    5800:	b	51f8 <grub_show_menu+0x540>
    5804:	mov	x0, x23
    5808:	bl	0 <grub_env_unset>
    580c:	str	wzr, [x25]
    5810:	bl	0 <grub_error_pop>
    5814:	ldr	w0, [x28]
    5818:	cbnz	w0, 536c <grub_show_menu+0x6b4>
    581c:	bl	0 <grub_getkey_noblock>
    5820:	mov	w24, w0
    5824:	cmp	w0, #0x0
    5828:	b.gt	52a8 <grub_show_menu+0x5f0>
    582c:	b	51f8 <grub_show_menu+0x540>
    5830:	mov	x0, x23
    5834:	bl	0 <grub_env_unset>
    5838:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    583c:	add	x0, x0, #0x0
    5840:	ldr	x1, [x0]
    5844:	str	wzr, [x1]
    5848:	bl	0 <grub_error_pop>
    584c:	ldr	x25, [x20]
    5850:	cbz	x25, 51f8 <grub_show_menu+0x540>
    5854:	nop
    5858:	ldr	x0, [x25, #8]
    585c:	ldr	x1, [x25, #32]
    5860:	blr	x1
    5864:	ldr	x25, [x25]
    5868:	cbnz	x25, 5858 <grub_show_menu+0xba0>
    586c:	b	51f8 <grub_show_menu+0x540>
    5870:	bl	bbf8 <grub_term_save_pos>
    5874:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5878:	ldr	x20, [x1]
    587c:	str	x0, [x20, #8]
    5880:	bl	bc90 <grub_term_restore_pos>
    5884:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5888:	mov	w1, w19
    588c:	ldr	x0, [x0]
    5890:	bl	0 <grub_printf>
    5894:	bl	0 <grub_refresh>
    5898:	b	4dfc <grub_show_menu+0x144>
    589c:	cmp	w0, #0x1b
    58a0:	b.ne	4e0c <grub_show_menu+0x154>  // b.any
    58a4:	mov	w19, #0xffffffff            	// #-1
    58a8:	mov	x0, x23
    58ac:	bl	0 <grub_env_unset>
    58b0:	mov	x0, x27
    58b4:	bl	0 <grub_env_unset>
    58b8:	cbnz	w19, 5020 <grub_show_menu+0x368>
    58bc:	mov	w25, #0x1                   	// #1
    58c0:	tbz	w22, #31, 4e70 <grub_show_menu+0x1b8>
    58c4:	b	536c <grub_show_menu+0x6b4>
    58c8:	ldr	x0, [x21, #8]
    58cc:	str	wzr, [x1]
    58d0:	cbz	x0, 59b0 <grub_show_menu+0xcf8>
    58d4:	mov	w22, #0x0                   	// #0
    58d8:	mov	x1, x19
    58dc:	ldr	x2, [x0]
    58e0:	ldrb	w3, [x1]
    58e4:	cmp	w3, #0x3e
    58e8:	b.eq	593c <grub_show_menu+0xc84>  // b.none
    58ec:	nop
    58f0:	ldrb	w4, [x2]
    58f4:	cmp	w3, w4
    58f8:	b.ne	5950 <grub_show_menu+0xc98>  // b.any
    58fc:	cbnz	w3, 5928 <grub_show_menu+0xc70>
    5900:	bl	0 <grub_error_pop>
    5904:	ldr	w0, [x21]
    5908:	cmp	w0, w22
    590c:	b.gt	4d54 <grub_show_menu+0x9c>
    5910:	mov	w22, #0x0                   	// #0
    5914:	b	4d54 <grub_show_menu+0x9c>
    5918:	ldrb	w3, [x2]
    591c:	add	x1, x1, #0x1
    5920:	cmp	w3, #0x3e
    5924:	b.ne	5950 <grub_show_menu+0xc98>  // b.any
    5928:	ldrb	w3, [x1, #1]
    592c:	add	x1, x1, #0x1
    5930:	add	x2, x2, #0x1
    5934:	cmp	w3, #0x3e
    5938:	b.ne	58f0 <grub_show_menu+0xc38>  // b.any
    593c:	ldrb	w3, [x1, #1]
    5940:	cmp	w3, #0x3e
    5944:	b.eq	5918 <grub_show_menu+0xc60>  // b.none
    5948:	ldrb	w1, [x2]
    594c:	cbz	w1, 5900 <grub_show_menu+0xc48>
    5950:	mov	x1, x19
    5954:	ldr	x2, [x0, #8]
    5958:	ldrb	w3, [x1]
    595c:	cmp	w3, #0x3e
    5960:	b.eq	598c <grub_show_menu+0xcd4>  // b.none
    5964:	nop
    5968:	ldrb	w4, [x2]
    596c:	cmp	w3, w4
    5970:	b.ne	59a0 <grub_show_menu+0xce8>  // b.any
    5974:	cbz	w3, 5900 <grub_show_menu+0xc48>
    5978:	ldrb	w3, [x1, #1]
    597c:	add	x1, x1, #0x1
    5980:	add	x2, x2, #0x1
    5984:	cmp	w3, #0x3e
    5988:	b.ne	5968 <grub_show_menu+0xcb0>  // b.any
    598c:	ldrb	w3, [x1, #1]
    5990:	cmp	w3, #0x3e
    5994:	b.eq	59dc <grub_show_menu+0xd24>  // b.none
    5998:	ldrb	w1, [x2]
    599c:	cbz	w1, 5900 <grub_show_menu+0xc48>
    59a0:	ldr	x0, [x0, #72]
    59a4:	add	w22, w22, #0x1
    59a8:	cbnz	x0, 58d8 <grub_show_menu+0xc20>
    59ac:	nop
    59b0:	mov	w22, #0x0                   	// #0
    59b4:	bl	0 <grub_error_pop>
    59b8:	b	4d54 <grub_show_menu+0x9c>
    59bc:	mov	x0, x23
    59c0:	bl	0 <grub_env_unset>
    59c4:	mov	w19, #0xffffffff            	// #-1
    59c8:	str	wzr, [x25]
    59cc:	bl	0 <grub_error_pop>
    59d0:	b	4ff8 <grub_show_menu+0x340>
    59d4:	str	wzr, [sp, #104]
    59d8:	b	5124 <grub_show_menu+0x46c>
    59dc:	ldrb	w3, [x2]
    59e0:	add	x1, x1, #0x1
    59e4:	cmp	w3, #0x3e
    59e8:	b.eq	5978 <grub_show_menu+0xcc0>  // b.none
    59ec:	ldr	x0, [x0, #72]
    59f0:	add	w22, w22, #0x1
    59f4:	cbnz	x0, 58d8 <grub_show_menu+0xc20>
    59f8:	b	59b0 <grub_show_menu+0xcf8>
    59fc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5a00:	ldr	x24, [x0]
    5a04:	mov	x0, x24
    5a08:	bl	0 <grub_dl_load>
    5a0c:	bl	0 <grub_print_error>
    5a10:	ldr	x3, [x20, #16]
    5a14:	cbnz	x3, 5074 <grub_show_menu+0x3bc>
    5a18:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5a1c:	mov	x2, x24
    5a20:	mov	w0, #0x2                   	// #2
    5a24:	ldr	x1, [x1]
    5a28:	bl	0 <grub_error>
    5a2c:	b	5090 <grub_show_menu+0x3d8>
    5a30:	bl	0 <grub_print_error>
    5a34:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5a38:	ldr	x0, [x0]
    5a3c:	str	wzr, [x0]
    5a40:	b	4d08 <grub_show_menu+0x50>
    5a44:	mov	w22, w20
    5a48:	bl	0 <grub_error_pop>
    5a4c:	tbz	w20, #31, 5904 <grub_show_menu+0xc4c>
    5a50:	mov	w22, #0x0                   	// #0
    5a54:	b	4d54 <grub_show_menu+0x9c>
	...
    5ae8:	stp	x29, x30, [sp, #-128]!
    5aec:	mov	x29, sp
    5af0:	stp	x19, x20, [sp, #16]
    5af4:	mov	x19, x0
    5af8:	ldr	w0, [x0, #16]
    5afc:	str	w1, [sp, #124]
    5b00:	cbz	w0, 5b10 <grub_show_menu+0xe58>
    5b04:	ldr	x0, [x19, #24]
    5b08:	bl	2d90 <grub_auth_check_authentication>
    5b0c:	cbnz	w0, 5edc <grub_show_menu+0x1224>
    5b10:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5b14:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5b18:	stp	x21, x22, [sp, #32]
    5b1c:	ldr	x1, [x1]
    5b20:	stp	x23, x24, [sp, #48]
    5b24:	ldr	x21, [x0]
    5b28:	stp	x25, x26, [sp, #64]
    5b2c:	ldr	w26, [x1]
    5b30:	mov	x0, x21
    5b34:	stp	x27, x28, [sp, #80]
    5b38:	str	x1, [sp, #96]
    5b3c:	bl	0 <grub_env_get>
    5b40:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5b44:	mov	x28, x0
    5b48:	ldr	x24, [x1]
    5b4c:	mov	x0, x24
    5b50:	bl	0 <grub_env_get>
    5b54:	ldr	w1, [x19, #68]
    5b58:	mov	x27, x0
    5b5c:	cbnz	w1, 5dec <grub_show_menu+0x1134>
    5b60:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5b64:	mov	x25, #0x0                   	// #0
    5b68:	ldr	x0, [x0]
    5b6c:	str	x0, [sp, #104]
    5b70:	ldr	x3, [x19, #8]
    5b74:	ldrb	w1, [x3]
    5b78:	cbz	w1, 5f88 <grub_show_menu+0x12d0>
    5b7c:	mov	x20, #0x0                   	// #0
    5b80:	cmp	w1, #0x3e
    5b84:	ldrb	w1, [x3, #1]!
    5b88:	b.eq	5c98 <grub_show_menu+0xfe0>  // b.none
    5b8c:	add	x20, x20, #0x1
    5b90:	cbnz	w1, 5b80 <grub_show_menu+0xec8>
    5b94:	add	x20, x20, #0x1
    5b98:	cbz	x28, 5ca8 <grub_show_menu+0xff0>
    5b9c:	mov	x0, x28
    5ba0:	bl	0 <grub_strdup>
    5ba4:	mov	x23, x0
    5ba8:	cbz	x0, 5f94 <grub_show_menu+0x12dc>
    5bac:	mov	x22, #0x0                   	// #0
    5bb0:	cbz	x27, 5bc4 <grub_show_menu+0xf0c>
    5bb4:	mov	x0, x27
    5bb8:	bl	0 <grub_strdup>
    5bbc:	mov	x22, x0
    5bc0:	cbz	x0, 5fa4 <grub_show_menu+0x12ec>
    5bc4:	add	x20, x20, #0x1
    5bc8:	mov	x0, x28
    5bcc:	bl	0 <grub_strlen>
    5bd0:	add	x0, x20, x0
    5bd4:	bl	0 <grub_malloc>
    5bd8:	mov	x20, x0
    5bdc:	mov	x1, x0
    5be0:	cbz	x0, 5ec8 <grub_show_menu+0x1210>
    5be4:	nop
    5be8:	ldrb	w0, [x28]
    5bec:	mov	x3, x20
    5bf0:	strb	w0, [x20], #1
    5bf4:	ldrb	w0, [x28], #1
    5bf8:	cbnz	w0, 5be8 <grub_show_menu+0xf30>
    5bfc:	mov	w0, #0x3e                  	// #62
    5c00:	strb	w0, [x3]
    5c04:	ldr	x3, [x19, #8]
    5c08:	ldrb	w0, [x3]
    5c0c:	cbz	w0, 5f9c <grub_show_menu+0x12e4>
    5c10:	cmp	w0, #0x3e
    5c14:	add	x2, x20, #0x1
    5c18:	b.eq	5c3c <grub_show_menu+0xf84>  // b.none
    5c1c:	nop
    5c20:	strb	w0, [x20]
    5c24:	ldrb	w0, [x3, #1]!
    5c28:	cbz	w0, 5c54 <grub_show_menu+0xf9c>
    5c2c:	mov	x20, x2
    5c30:	cmp	w0, #0x3e
    5c34:	add	x2, x20, #0x1
    5c38:	b.ne	5c20 <grub_show_menu+0xf68>  // b.any
    5c3c:	mov	x2, x20
    5c40:	strb	w0, [x2], #2
    5c44:	ldrb	w0, [x3]
    5c48:	strb	w0, [x20, #1]
    5c4c:	ldrb	w0, [x3, #1]!
    5c50:	cbnz	w0, 5c2c <grub_show_menu+0xf74>
    5c54:	strb	wzr, [x2]
    5c58:	mov	x0, x21
    5c5c:	str	x1, [sp, #112]
    5c60:	bl	0 <grub_env_set>
    5c64:	mov	x0, x21
    5c68:	bl	0 <grub_env_export>
    5c6c:	ldr	x1, [sp, #112]
    5c70:	mov	x0, x1
    5c74:	bl	0 <grub_free>
    5c78:	cbz	x27, 5ce8 <grub_show_menu+0x1030>
    5c7c:	ldrb	w1, [x27]
    5c80:	cbz	w1, 5ce8 <grub_show_menu+0x1030>
    5c84:	cmp	w1, #0x3e
    5c88:	ldrb	w1, [x27, #1]
    5c8c:	b.eq	5cdc <grub_show_menu+0x1024>  // b.none
    5c90:	add	x27, x27, #0x1
    5c94:	b	5c80 <grub_show_menu+0xfc8>
    5c98:	add	x20, x20, #0x2
    5c9c:	cbnz	w1, 5b80 <grub_show_menu+0xec8>
    5ca0:	add	x20, x20, #0x1
    5ca4:	b	5b98 <grub_show_menu+0xee0>
    5ca8:	mov	x22, #0x0                   	// #0
    5cac:	cbz	x27, 5cc0 <grub_show_menu+0x1008>
    5cb0:	mov	x0, x27
    5cb4:	bl	0 <grub_strdup>
    5cb8:	mov	x22, x0
    5cbc:	cbz	x0, 5fac <grub_show_menu+0x12f4>
    5cc0:	add	x0, x20, #0x1
    5cc4:	bl	0 <grub_malloc>
    5cc8:	mov	x20, x0
    5ccc:	cbz	x0, 5ed0 <grub_show_menu+0x1218>
    5cd0:	mov	x1, x0
    5cd4:	mov	x23, #0x0                   	// #0
    5cd8:	b	5c04 <grub_show_menu+0xf4c>
    5cdc:	cmp	w1, #0x3e
    5ce0:	b.eq	5ddc <grub_show_menu+0x1124>  // b.none
    5ce4:	cbnz	w1, 5f64 <grub_show_menu+0x12ac>
    5ce8:	mov	x0, x24
    5cec:	bl	0 <grub_env_unset>
    5cf0:	ldr	w1, [x19, #48]
    5cf4:	ldr	x0, [x19, #40]
    5cf8:	ldr	x2, [x19, #56]
    5cfc:	bl	128c0 <grub_script_execute_new_scope>
    5d00:	ldr	x0, [sp, #96]
    5d04:	ldr	w0, [x0]
    5d08:	cmp	w0, w26
    5d0c:	b.eq	5d74 <grub_show_menu+0x10bc>  // b.none
    5d10:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5d14:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5d18:	ldr	x27, [x1]
    5d1c:	ldr	x26, [x0]
    5d20:	ldr	x1, [x27]
    5d24:	mov	x0, x26
    5d28:	blr	x1
    5d2c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5d30:	ldr	x0, [x0]
    5d34:	bl	0 <grub_printf_>
    5d38:	bl	0 <grub_refresh>
    5d3c:	bl	0 <grub_get_time_ms>
    5d40:	mov	x2, #0x2710                	// #10000
    5d44:	add	x20, x0, x2
    5d48:	b	5d54 <grub_show_menu+0x109c>
    5d4c:	bl	0 <grub_getkey_noblock>
    5d50:	cbnz	w0, 5d60 <grub_show_menu+0x10a8>
    5d54:	bl	0 <grub_get_time_ms>
    5d58:	cmp	x20, x0
    5d5c:	b.hi	5d4c <grub_show_menu+0x1094>  // b.pmore
    5d60:	ldr	x1, [x27]
    5d64:	mov	x0, x26
    5d68:	blr	x1
    5d6c:	ldr	x0, [sp, #96]
    5d70:	ldr	w26, [x0]
    5d74:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5d78:	ldr	x0, [x0]
    5d7c:	ldr	w0, [x0]
    5d80:	cbz	w0, 5e1c <grub_show_menu+0x1164>
    5d84:	ldr	w0, [x19, #68]
    5d88:	cbz	w0, 5d9c <grub_show_menu+0x10e4>
    5d8c:	cbz	x25, 5d98 <grub_show_menu+0x10e0>
    5d90:	ldr	w0, [x25]
    5d94:	cbnz	w0, 5ef8 <grub_show_menu+0x1240>
    5d98:	bl	cfa8 <grub_env_context_close>
    5d9c:	cbz	x23, 5e94 <grub_show_menu+0x11dc>
    5da0:	mov	x1, x23
    5da4:	mov	x0, x21
    5da8:	bl	0 <grub_env_set>
    5dac:	cbz	x22, 5ea0 <grub_show_menu+0x11e8>
    5db0:	mov	x1, x22
    5db4:	mov	x0, x24
    5db8:	bl	0 <grub_env_set>
    5dbc:	ldp	x19, x20, [sp, #16]
    5dc0:	ldp	x21, x22, [sp, #32]
    5dc4:	ldp	x23, x24, [sp, #48]
    5dc8:	ldp	x25, x26, [sp, #64]
    5dcc:	ldp	x27, x28, [sp, #80]
    5dd0:	ldr	x0, [sp, #104]
    5dd4:	ldp	x29, x30, [sp], #128
    5dd8:	b	0 <grub_env_unset>
    5ddc:	ldrb	w1, [x27, #2]
    5de0:	add	x27, x27, #0x1
    5de4:	add	x27, x27, #0x1
    5de8:	b	5c80 <grub_show_menu+0xfc8>
    5dec:	bl	d1c0 <grub_env_context_open>
    5df0:	mov	x0, #0x10                  	// #16
    5df4:	bl	0 <grub_zalloc>
    5df8:	mov	x25, x0
    5dfc:	cbz	x0, 5f74 <grub_show_menu+0x12bc>
    5e00:	bl	cf88 <grub_env_set_menu>
    5e04:	ldr	w0, [sp, #124]
    5e08:	cbnz	w0, 5f48 <grub_show_menu+0x1290>
    5e0c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5e10:	ldr	x0, [x0]
    5e14:	str	x0, [sp, #104]
    5e18:	b	5b70 <grub_show_menu+0xeb8>
    5e1c:	bl	0 <grub_loader_is_loaded>
    5e20:	cbnz	w0, 5f18 <grub_show_menu+0x1260>
    5e24:	ldr	x0, [sp, #96]
    5e28:	ldr	w0, [x0]
    5e2c:	cmp	w0, w26
    5e30:	b.eq	5d84 <grub_show_menu+0x10cc>  // b.none
    5e34:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5e38:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5e3c:	ldr	x27, [x1]
    5e40:	ldr	x26, [x0]
    5e44:	ldr	x1, [x27]
    5e48:	mov	x0, x26
    5e4c:	blr	x1
    5e50:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5e54:	ldr	x0, [x0]
    5e58:	bl	0 <grub_printf_>
    5e5c:	bl	0 <grub_refresh>
    5e60:	bl	0 <grub_get_time_ms>
    5e64:	mov	x1, #0x2710                	// #10000
    5e68:	add	x20, x0, x1
    5e6c:	b	5e78 <grub_show_menu+0x11c0>
    5e70:	bl	0 <grub_getkey_noblock>
    5e74:	cbnz	w0, 5e84 <grub_show_menu+0x11cc>
    5e78:	bl	0 <grub_get_time_ms>
    5e7c:	cmp	x20, x0
    5e80:	b.hi	5e70 <grub_show_menu+0x11b8>  // b.pmore
    5e84:	ldr	x1, [x27]
    5e88:	mov	x0, x26
    5e8c:	blr	x1
    5e90:	b	5d84 <grub_show_menu+0x10cc>
    5e94:	mov	x0, x21
    5e98:	bl	0 <grub_env_unset>
    5e9c:	cbnz	x22, 5db0 <grub_show_menu+0x10f8>
    5ea0:	mov	x0, x24
    5ea4:	bl	0 <grub_env_unset>
    5ea8:	ldp	x19, x20, [sp, #16]
    5eac:	ldp	x21, x22, [sp, #32]
    5eb0:	ldp	x23, x24, [sp, #48]
    5eb4:	ldp	x25, x26, [sp, #64]
    5eb8:	ldp	x27, x28, [sp, #80]
    5ebc:	ldr	x0, [sp, #104]
    5ec0:	ldp	x29, x30, [sp], #128
    5ec4:	b	0 <grub_env_unset>
    5ec8:	mov	x20, x23
    5ecc:	nop
    5ed0:	mov	x23, x20
    5ed4:	bl	0 <grub_print_error>
    5ed8:	b	5c78 <grub_show_menu+0xfc0>
    5edc:	bl	0 <grub_print_error>
    5ee0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5ee4:	ldr	x0, [x0]
    5ee8:	str	wzr, [x0]
    5eec:	ldp	x19, x20, [sp, #16]
    5ef0:	ldp	x29, x30, [sp], #128
    5ef4:	ret
    5ef8:	ldr	w2, [sp, #124]
    5efc:	mov	w1, #0x1                   	// #1
    5f00:	mov	x0, x25
    5f04:	bl	4cb8 <grub_show_menu>
    5f08:	mov	x0, x25
    5f0c:	bl	498 <grub_normal_free_menu>
    5f10:	bl	cfa8 <grub_env_context_close>
    5f14:	b	5d9c <grub_show_menu+0x10e4>
    5f18:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5f1c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5f20:	ldr	x0, [x0]
    5f24:	ldr	x1, [x1]
    5f28:	ldr	x0, [x0]
    5f2c:	bl	0 <grub_named_list_find>
    5f30:	cbz	x0, 5e24 <grub_show_menu+0x116c>
    5f34:	ldr	x3, [x0, #32]
    5f38:	mov	x2, #0x0                   	// #0
    5f3c:	mov	w1, #0x0                   	// #0
    5f40:	blr	x3
    5f44:	b	5e24 <grub_show_menu+0x116c>
    5f48:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    5f4c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    5f50:	ldr	x1, [x1]
    5f54:	ldr	x0, [x0]
    5f58:	str	x0, [sp, #104]
    5f5c:	bl	0 <grub_env_set>
    5f60:	b	5b70 <grub_show_menu+0xeb8>
    5f64:	add	x1, x27, #0x1
    5f68:	mov	x0, x24
    5f6c:	bl	0 <grub_env_set>
    5f70:	b	5cf0 <grub_show_menu+0x1038>
    5f74:	ldp	x21, x22, [sp, #32]
    5f78:	ldp	x23, x24, [sp, #48]
    5f7c:	ldp	x25, x26, [sp, #64]
    5f80:	ldp	x27, x28, [sp, #80]
    5f84:	b	5eec <grub_show_menu+0x1234>
    5f88:	mov	x20, #0x1                   	// #1
    5f8c:	cbnz	x28, 5b9c <grub_show_menu+0xee4>
    5f90:	b	5ca8 <grub_show_menu+0xff0>
    5f94:	bl	0 <grub_print_error>
    5f98:	b	5bac <grub_show_menu+0xef4>
    5f9c:	mov	x2, x20
    5fa0:	b	5c54 <grub_show_menu+0xf9c>
    5fa4:	bl	0 <grub_print_error>
    5fa8:	b	5bc4 <grub_show_menu+0xf0c>
    5fac:	bl	0 <grub_print_error>
    5fb0:	b	5cc0 <grub_show_menu+0x1008>
    5fb4:	nop
	...
    6010:	stp	x29, x30, [sp, #-48]!
    6014:	mov	x29, sp
    6018:	stp	x21, x22, [sp, #32]
    601c:	mov	x21, x0
    6020:	ldr	x0, [x0]
    6024:	cbz	x0, 60ac <grub_show_menu+0x13f4>
    6028:	ldr	w1, [x21, #8]
    602c:	cmp	w1, #0x0
    6030:	b.le	60ac <grub_show_menu+0x13f4>
    6034:	mov	x22, #0x0                   	// #0
    6038:	stp	x19, x20, [sp, #16]
    603c:	b	6064 <grub_show_menu+0x13ac>
    6040:	ldr	x0, [x20]
    6044:	bl	0 <grub_free>
    6048:	ldr	x0, [x20, #16]
    604c:	bl	0 <grub_free>
    6050:	ldr	w1, [x21, #8]
    6054:	add	x22, x22, #0x1
    6058:	cmp	w1, w22
    605c:	b.le	60a8 <grub_show_menu+0x13f0>
    6060:	ldr	x0, [x21]
    6064:	add	x20, x22, x22, lsl #1
    6068:	adds	x20, x0, x20, lsl #3
    606c:	b.eq	6054 <grub_show_menu+0x139c>  // b.none
    6070:	ldr	x1, [x20, #16]
    6074:	cbz	x1, 6040 <grub_show_menu+0x1388>
    6078:	ldr	w0, [x21, #48]
    607c:	cbz	w0, 6040 <grub_show_menu+0x1388>
    6080:	mov	w19, #0x0                   	// #0
    6084:	b	608c <grub_show_menu+0x13d4>
    6088:	ldr	x1, [x20, #16]
    608c:	ldr	x0, [x1, w19, uxtw #3]
    6090:	add	w19, w19, #0x1
    6094:	bl	0 <grub_free>
    6098:	ldr	w0, [x21, #48]
    609c:	cmp	w0, w19
    60a0:	b.hi	6088 <grub_show_menu+0x13d0>  // b.pmore
    60a4:	b	6040 <grub_show_menu+0x1388>
    60a8:	ldp	x19, x20, [sp, #16]
    60ac:	ldr	x0, [x21, #24]
    60b0:	bl	0 <grub_free>
    60b4:	ldr	x0, [x21]
    60b8:	bl	0 <grub_free>
    60bc:	ldr	x0, [x21, #40]
    60c0:	bl	0 <grub_free>
    60c4:	mov	x0, x21
    60c8:	ldp	x21, x22, [sp, #32]
    60cc:	ldp	x29, x30, [sp], #48
    60d0:	b	0 <grub_free>
    60d4:	nop
    60d8:	stp	x29, x30, [sp, #-64]!
    60dc:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    60e0:	mov	x29, sp
    60e4:	stp	x19, x20, [sp, #16]
    60e8:	ldr	x19, [x2]
    60ec:	stp	x21, x22, [sp, #32]
    60f0:	mov	x21, x0
    60f4:	mov	x20, x19
    60f8:	str	x23, [sp, #48]
    60fc:	str	w1, [x20], #8
    6100:	ldp	x22, x23, [x20, #8]
    6104:	bl	0 <grub_strlen>
    6108:	add	x22, x22, #0x2
    610c:	add	x0, x22, w0, sxtw
    6110:	cmp	x23, x0
    6114:	b.cc	616c <grub_show_menu+0x14b4>  // b.lo, b.ul, b.last
    6118:	ldr	x2, [x20, #8]
    611c:	ldr	x1, [x19, #8]
    6120:	add	x0, x1, x2
    6124:	cbnz	x2, 6158 <grub_show_menu+0x14a0>
    6128:	mov	x1, x21
    612c:	bl	0 <grub_strcpy>
    6130:	mov	x0, x21
    6134:	bl	0 <grub_strlen>
    6138:	ldr	x1, [x19, #16]
    613c:	add	x1, x1, x0
    6140:	str	x1, [x19, #16]
    6144:	ldp	x19, x20, [sp, #16]
    6148:	ldp	x21, x22, [sp, #32]
    614c:	ldr	x23, [sp, #48]
    6150:	ldp	x29, x30, [sp], #64
    6154:	ret
    6158:	add	x2, x2, #0x1
    615c:	mov	w1, #0x20                  	// #32
    6160:	strb	w1, [x0], #1
    6164:	str	x2, [x19, #16]
    6168:	b	6128 <grub_show_menu+0x1470>
    616c:	ldr	x22, [x20, #8]
    6170:	mov	x0, x21
    6174:	bl	0 <grub_strlen>
    6178:	add	x22, x22, #0x50
    617c:	add	x22, x22, x0
    6180:	ldr	x0, [x19, #8]
    6184:	mov	x1, x22
    6188:	bl	0 <grub_realloc>
    618c:	mov	x1, x0
    6190:	cbz	x0, 61b0 <grub_show_menu+0x14f8>
    6194:	ldr	x2, [x20, #8]
    6198:	str	x1, [x19, #8]
    619c:	str	x22, [x20, #16]
    61a0:	add	x0, x0, x2
    61a4:	strb	wzr, [x1, x2]
    61a8:	cbz	x2, 6128 <grub_show_menu+0x1470>
    61ac:	b	6158 <grub_show_menu+0x14a0>
    61b0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    61b4:	ldr	x0, [x0]
    61b8:	str	wzr, [x0]
    61bc:	b	6144 <grub_show_menu+0x148c>
	...
    61d0:	sub	sp, sp, #0x90
    61d4:	stp	x29, x30, [sp, #16]
    61d8:	add	x29, sp, #0x10
    61dc:	ldr	w6, [x0, #20]
    61e0:	stp	x19, x20, [sp, #32]
    61e4:	mov	x20, x0
    61e8:	cmp	w6, #0x0
    61ec:	stp	x21, x22, [sp, #48]
    61f0:	mov	w22, w2
    61f4:	stp	x23, x24, [sp, #64]
    61f8:	stp	x27, x28, [sp, #96]
    61fc:	mov	x28, x1
    6200:	ldr	w27, [x1, #8]
    6204:	str	w5, [sp, #124]
    6208:	stp	w3, w4, [sp, #132]
    620c:	ldr	x19, [x0]
    6210:	b.le	625c <grub_show_menu+0x15a4>
    6214:	mov	w24, #0x0                   	// #0
    6218:	ldr	x0, [x19]
    621c:	ldr	x2, [x28]
    6220:	ldrsw	x1, [x19, #8]
    6224:	add	x1, x0, x1, lsl #2
    6228:	bl	93b0 <grub_getstringwidth>
    622c:	cbz	x0, 646c <grub_show_menu+0x17b4>
    6230:	ldr	w2, [x28, #24]
    6234:	add	w24, w24, #0x1
    6238:	ldr	w6, [x20, #20]
    623c:	add	x19, x19, #0x18
    6240:	sub	x1, x2, #0x1
    6244:	add	x0, x1, x0
    6248:	cmp	w6, w24
    624c:	udiv	x0, x0, x2
    6250:	add	w27, w27, w0
    6254:	b.gt	6218 <grub_show_menu+0x1560>
    6258:	ldr	x19, [x20]
    625c:	mov	w0, #0x18                  	// #24
    6260:	ldr	x2, [x28]
    6264:	smull	x6, w6, w0
    6268:	ldrsw	x1, [x20, #12]
    626c:	add	x24, x19, x6
    6270:	ldr	x0, [x19, x6]
    6274:	add	x1, x0, x1, lsl #2
    6278:	bl	93b0 <grub_getstringwidth>
    627c:	ldr	w1, [x28, #24]
    6280:	udiv	x19, x0, x1
    6284:	msub	x1, x19, x1, x0
    6288:	add	w27, w27, w19
    628c:	cmp	x1, #0x0
    6290:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    6294:	b.ne	682c <grub_show_menu+0x1b74>  // b.any
    6298:	ldr	x2, [x28]
    629c:	ldr	x3, [x2, #96]
    62a0:	tbnz	w27, #31, 64f0 <grub_show_menu+0x1838>
    62a4:	ldr	w0, [x28, #12]
    62a8:	cmp	w27, w0
    62ac:	b.lt	6488 <grub_show_menu+0x17d0>  // b.tstop
    62b0:	sub	w19, w0, #0x1
    62b4:	sub	w27, w19, w27
    62b8:	ldr	w19, [x28, #8]
    62bc:	add	w19, w27, w19
    62c0:	str	w19, [x28, #8]
    62c4:	cbz	x3, 6504 <grub_show_menu+0x184c>
    62c8:	mov	w0, #0x1                   	// #1
    62cc:	mov	w22, #0x0                   	// #0
    62d0:	stp	w0, w0, [sp, #132]
    62d4:	mov	w0, #0x2                   	// #2
    62d8:	str	w0, [sp, #124]
    62dc:	mov	x0, x2
    62e0:	mov	w1, #0x0                   	// #0
    62e4:	blr	x3
    62e8:	ldr	x2, [x28]
    62ec:	ldr	w0, [sp, #124]
    62f0:	cbnz	w0, 6520 <grub_show_menu+0x1868>
    62f4:	ldr	w4, [x20, #20]
    62f8:	mov	w3, #0x18                  	// #24
    62fc:	ldr	x1, [x20]
    6300:	mov	x5, #0x6db7                	// #28087
    6304:	ldr	x0, [x20, #40]
    6308:	movk	x5, #0xb6db, lsl #16
    630c:	smaddl	x3, w4, w3, x1
    6310:	movk	x5, #0xdb6d, lsl #32
    6314:	sub	x0, x28, x0
    6318:	movk	x5, #0x6db6, lsl #48
    631c:	asr	x0, x0, #3
    6320:	ldr	x3, [x3, #16]
    6324:	mul	x0, x0, x5
    6328:	ldr	x3, [x3, x0, lsl #3]
    632c:	cbz	x3, 6428 <grub_show_menu+0x1770>
    6330:	ldrsw	x19, [x20, #12]
    6334:	add	x19, x3, x19, lsl #2
    6338:	cmp	x3, x19
    633c:	b.ls	6350 <grub_show_menu+0x1698>  // b.plast
    6340:	b	6358 <grub_show_menu+0x16a0>
    6344:	sub	x19, x19, #0x4
    6348:	cmp	x3, x19
    634c:	b.hi	6358 <grub_show_menu+0x16a0>  // b.pmore
    6350:	ldrb	w0, [x19]
    6354:	tbz	w0, #0, 6344 <grub_show_menu+0x168c>
    6358:	ldr	w23, [x28, #8]
    635c:	cmp	w4, #0x0
    6360:	b.le	63e8 <grub_show_menu+0x1730>
    6364:	mov	x21, #0x0                   	// #0
    6368:	mov	w22, #0x0                   	// #0
    636c:	nop
    6370:	add	x3, x1, x21
    6374:	ldr	x0, [x1, x21]
    6378:	ldrsw	x1, [x3, #8]
    637c:	add	x1, x0, x1, lsl #2
    6380:	bl	93b0 <grub_getstringwidth>
    6384:	cbz	x0, 6490 <grub_show_menu+0x17d8>
    6388:	ldr	w4, [x28, #24]
    638c:	add	w22, w22, #0x1
    6390:	ldr	w3, [x20, #20]
    6394:	add	x21, x21, #0x18
    6398:	sub	x2, x4, #0x1
    639c:	add	x0, x2, x0
    63a0:	cmp	w3, w22
    63a4:	ldr	x1, [x20]
    63a8:	udiv	x0, x0, x4
    63ac:	ldr	x2, [x28]
    63b0:	add	w23, w23, w0
    63b4:	b.gt	6370 <grub_show_menu+0x16b8>
    63b8:	ldr	x0, [x20, #40]
    63bc:	mov	w5, #0x18                  	// #24
    63c0:	mov	x4, #0x6db7                	// #28087
    63c4:	sub	x0, x28, x0
    63c8:	smaddl	x1, w3, w5, x1
    63cc:	movk	x4, #0xb6db, lsl #16
    63d0:	asr	x0, x0, #3
    63d4:	movk	x4, #0xdb6d, lsl #32
    63d8:	movk	x4, #0x6db6, lsl #48
    63dc:	ldr	x1, [x1, #16]
    63e0:	mul	x0, x0, x4
    63e4:	ldr	x3, [x1, x0, lsl #3]
    63e8:	cmp	x19, x3
    63ec:	ldrh	w4, [x28, #20]
    63f0:	and	w23, w23, #0xffff
    63f4:	ldrh	w3, [x28, #16]
    63f8:	ldr	x5, [x2, #72]
    63fc:	b.cc	64b4 <grub_show_menu+0x17fc>  // b.lo, b.ul, b.last
    6400:	ldrh	w6, [x19, #2]
    6404:	mov	x0, x2
    6408:	ldrh	w1, [x19]
    640c:	add	w3, w3, w6
    6410:	add	w23, w23, w3
    6414:	ubfx	x1, x1, #1, #15
    6418:	add	w1, w4, w1
    641c:	bfi	w1, w23, #16, #16
    6420:	blr	x5
    6424:	ldr	x2, [x28]
    6428:	ldr	x3, [x2, #96]
    642c:	cbz	x3, 6440 <grub_show_menu+0x1788>
    6430:	mov	x0, x2
    6434:	mov	w1, #0x1                   	// #1
    6438:	blr	x3
    643c:	ldr	x2, [x28]
    6440:	ldr	x1, [x2, #104]
    6444:	cbz	x1, 64d4 <grub_show_menu+0x181c>
    6448:	ldp	x29, x30, [sp, #16]
    644c:	mov	x0, x2
    6450:	ldp	x19, x20, [sp, #32]
    6454:	mov	x16, x1
    6458:	ldp	x21, x22, [sp, #48]
    645c:	ldp	x23, x24, [sp, #64]
    6460:	ldp	x27, x28, [sp, #96]
    6464:	add	sp, sp, #0x90
    6468:	br	x16
    646c:	ldr	w6, [x20, #20]
    6470:	add	w24, w24, #0x1
    6474:	add	w27, w27, #0x1
    6478:	add	x19, x19, #0x18
    647c:	cmp	w24, w6
    6480:	b.lt	6218 <grub_show_menu+0x1560>  // b.tstop
    6484:	b	6258 <grub_show_menu+0x15a0>
    6488:	cbnz	x3, 62dc <grub_show_menu+0x1624>
    648c:	b	62ec <grub_show_menu+0x1634>
    6490:	ldr	w3, [x20, #20]
    6494:	add	w22, w22, #0x1
    6498:	add	w23, w23, #0x1
    649c:	add	x21, x21, #0x18
    64a0:	cmp	w22, w3
    64a4:	ldr	x1, [x20]
    64a8:	ldr	x2, [x28]
    64ac:	b.lt	6370 <grub_show_menu+0x16b8>  // b.tstop
    64b0:	b	63b8 <grub_show_menu+0x1700>
    64b4:	mov	w1, #0x0                   	// #0
    64b8:	add	w23, w3, w23
    64bc:	bfxil	w1, w4, #0, #16
    64c0:	mov	x0, x2
    64c4:	bfi	w1, w23, #16, #16
    64c8:	blr	x5
    64cc:	ldr	x2, [x28]
    64d0:	b	6428 <grub_show_menu+0x1770>
    64d4:	ldp	x29, x30, [sp, #16]
    64d8:	ldp	x19, x20, [sp, #32]
    64dc:	ldp	x21, x22, [sp, #48]
    64e0:	ldp	x23, x24, [sp, #64]
    64e4:	ldp	x27, x28, [sp, #96]
    64e8:	add	sp, sp, #0x90
    64ec:	ret
    64f0:	ldr	w19, [x28, #8]
    64f4:	neg	w27, w27
    64f8:	add	w19, w27, w19
    64fc:	str	w19, [x28, #8]
    6500:	cbnz	x3, 62c8 <grub_show_menu+0x1610>
    6504:	mov	w0, #0x1                   	// #1
    6508:	mov	w22, #0x0                   	// #0
    650c:	stp	x25, x26, [sp, #80]
    6510:	stp	w0, w0, [sp, #132]
    6514:	mov	w0, #0x2                   	// #2
    6518:	str	w0, [sp, #124]
    651c:	b	6528 <grub_show_menu+0x1870>
    6520:	ldr	w19, [x28, #8]
    6524:	stp	x25, x26, [sp, #80]
    6528:	mov	w26, #0x0                   	// #0
    652c:	ldr	x27, [x20]
    6530:	b	6560 <grub_show_menu+0x18a8>
    6534:	ldr	w2, [x28, #24]
    6538:	sub	x1, x2, #0x1
    653c:	add	x1, x1, x0
    6540:	udiv	x1, x1, x2
    6544:	add	w1, w19, w1
    6548:	cmp	w1, #0x0
    654c:	b.gt	6580 <grub_show_menu+0x18c8>
    6550:	ldr	x2, [x28]
    6554:	add	w26, w26, #0x1
    6558:	add	x27, x27, #0x18
    655c:	mov	w19, w1
    6560:	ldr	x0, [x27]
    6564:	ldrsw	x1, [x27, #8]
    6568:	add	x1, x0, x1, lsl #2
    656c:	bl	93b0 <grub_getstringwidth>
    6570:	add	w1, w19, #0x1
    6574:	cbnz	x0, 6534 <grub_show_menu+0x187c>
    6578:	cmp	w1, #0x0
    657c:	b.le	6550 <grub_show_menu+0x1898>
    6580:	cmp	w26, #0x0
    6584:	ldr	w0, [x20, #8]
    6588:	cset	w1, gt
    658c:	orr	w1, w1, w19, lsr #31
    6590:	str	w1, [sp, #140]
    6594:	ldr	x1, [x20]
    6598:	mov	w2, #0x18                  	// #24
    659c:	smaddl	x0, w0, w2, x1
    65a0:	cmp	x27, x0
    65a4:	b.cs	6704 <grub_show_menu+0x1a4c>  // b.hs, b.nlast
    65a8:	ldr	x10, [x20, #40]
    65ac:	mov	x0, #0x6db7                	// #28087
    65b0:	movk	x0, #0xb6db, lsl #16
    65b4:	sub	x10, x28, x10
    65b8:	movk	x0, #0xdb6d, lsl #32
    65bc:	movk	x0, #0x6db6, lsl #48
    65c0:	asr	x10, x10, #3
    65c4:	ldr	x23, [x27, #16]
    65c8:	mul	x24, x10, x0
    65cc:	ldr	x0, [x23, x24, lsl #3]
    65d0:	cbz	x0, 6814 <grub_show_menu+0x1b5c>
    65d4:	cmp	w26, w22
    65d8:	b.eq	6604 <grub_show_menu+0x194c>  // b.none
    65dc:	ldr	w0, [x20, #20]
    65e0:	mov	w2, #0x18                  	// #24
    65e4:	ldr	x1, [x20]
    65e8:	smaddl	x0, w0, w2, x1
    65ec:	cmp	x27, x0
    65f0:	b.eq	6604 <grub_show_menu+0x194c>  // b.none
    65f4:	ldr	w0, [sp, #124]
    65f8:	cmp	w26, w22
    65fc:	ccmp	w0, #0x2, #0x0, gt
    6600:	b.ne	666c <grub_show_menu+0x19b4>  // b.any
    6604:	ldr	x0, [x28]
    6608:	cmp	w19, #0x0
    660c:	ldp	w1, w3, [x28, #16]
    6610:	csel	w6, w19, wzr, ge  // ge = tcont
    6614:	ldr	x2, [x0, #72]
    6618:	add	w1, w1, w6
    661c:	bfxil	w21, w3, #0, #16
    6620:	str	w6, [sp, #128]
    6624:	bfi	w21, w1, #16, #16
    6628:	mov	w1, w21
    662c:	blr	x2
    6630:	ldr	x10, [x23, x24, lsl #3]
    6634:	cmp	w19, #0x0
    6638:	ldrsw	x1, [x27, #8]
    663c:	csneg	w5, wzr, w19, ge  // ge = tcont
    6640:	ldr	w2, [x28, #20]
    6644:	mov	w7, #0x5c                  	// #92
    6648:	ldr	w3, [x28, #40]
    664c:	ldr	x0, [x27]
    6650:	ldr	x4, [x28]
    6654:	str	x10, [sp]
    6658:	ldr	w6, [sp, #128]
    665c:	add	x1, x0, x1, lsl #2
    6660:	ldr	w10, [x28, #12]
    6664:	sub	w6, w10, w6
    6668:	bl	c150 <grub_print_ucs4_menu>
    666c:	ldr	x0, [x27]
    6670:	ldr	x2, [x28]
    6674:	ldrsw	x1, [x27, #8]
    6678:	add	x1, x0, x1, lsl #2
    667c:	bl	93b0 <grub_getstringwidth>
    6680:	mov	w1, #0x1                   	// #1
    6684:	cbz	x0, 6698 <grub_show_menu+0x19e0>
    6688:	ldr	w2, [x28, #24]
    668c:	sub	x1, x2, #0x1
    6690:	add	x0, x1, x0
    6694:	udiv	x1, x0, x2
    6698:	ldr	w2, [x28, #12]
    669c:	add	w19, w19, w1
    66a0:	ldr	w0, [x20, #8]
    66a4:	add	w26, w26, #0x1
    66a8:	add	x27, x27, #0x18
    66ac:	cmp	w19, w2
    66b0:	b.lt	66e4 <grub_show_menu+0x1a2c>  // b.tstop
    66b4:	cmp	w0, w26
    66b8:	b.le	6784 <grub_show_menu+0x1acc>
    66bc:	mov	w19, #0x1                   	// #1
    66c0:	cmp	w2, #0x1
    66c4:	ldr	w0, [sp, #132]
    66c8:	ldr	x2, [x28]
    66cc:	b.eq	671c <grub_show_menu+0x1a64>  // b.none
    66d0:	cbnz	w0, 689c <grub_show_menu+0x1be4>
    66d4:	ldr	w0, [sp, #136]
    66d8:	cbnz	w0, 6844 <grub_show_menu+0x1b8c>
    66dc:	ldp	x25, x26, [sp, #80]
    66e0:	b	62f4 <grub_show_menu+0x163c>
    66e4:	ldr	w1, [sp, #124]
    66e8:	cmp	w1, #0x2
    66ec:	b.eq	6790 <grub_show_menu+0x1ad8>  // b.none
    66f0:	ldr	x1, [x20]
    66f4:	mov	w2, #0x18                  	// #24
    66f8:	smaddl	x0, w0, w2, x1
    66fc:	cmp	x27, x0
    6700:	b.cc	65a8 <grub_show_menu+0x18f0>  // b.lo, b.ul, b.last
    6704:	ldr	w2, [x28, #12]
    6708:	mov	w19, #0x0                   	// #0
    670c:	ldr	w0, [sp, #132]
    6710:	cmp	w2, #0x1
    6714:	ldr	x2, [x28]
    6718:	b.ne	66d0 <grub_show_menu+0x1a18>  // b.any
    671c:	ldr	w1, [sp, #136]
    6720:	orr	w26, w0, w1
    6724:	cbz	w26, 66dc <grub_show_menu+0x1a24>
    6728:	ldp	w3, w5, [x28, #20]
    672c:	mov	x0, x2
    6730:	ldr	w4, [x28, #36]
    6734:	mov	w1, #0x0                   	// #0
    6738:	add	w3, w3, w5
    673c:	ldrh	w5, [x28, #16]
    6740:	add	w4, w4, #0x1
    6744:	add	w3, w3, w4
    6748:	ldr	x2, [x2, #72]
    674c:	bfxil	w1, w3, #0, #16
    6750:	bfi	w1, w5, #16, #16
    6754:	blr	x2
    6758:	ldr	w0, [sp, #140]
    675c:	ldr	x1, [x28]
    6760:	tst	w0, w19
    6764:	b.ne	690c <grub_show_menu+0x1c54>  // b.any
    6768:	ldr	w0, [sp, #140]
    676c:	cbz	w0, 6884 <grub_show_menu+0x1bcc>
    6770:	mov	w0, #0x2191                	// #8593
    6774:	bl	bf40 <grub_putcode>
    6778:	ldr	x2, [x28]
    677c:	ldp	x25, x26, [sp, #80]
    6780:	b	62f4 <grub_show_menu+0x163c>
    6784:	ldr	w1, [sp, #124]
    6788:	cmp	w1, #0x2
    678c:	b.ne	67fc <grub_show_menu+0x1b44>  // b.any
    6790:	cmp	w0, w26
    6794:	b.ne	6804 <grub_show_menu+0x1b4c>  // b.any
    6798:	cmp	w19, w2
    679c:	b.ge	67fc <grub_show_menu+0x1b44>  // b.tcont
    67a0:	ldr	x0, [x28]
    67a4:	mov	w21, #0x0                   	// #0
    67a8:	ldp	w1, w3, [x28, #16]
    67ac:	ldr	x2, [x0, #72]
    67b0:	add	w1, w1, w19
    67b4:	bfxil	w25, w3, #0, #16
    67b8:	bfi	w25, w1, #16, #16
    67bc:	mov	w1, w25
    67c0:	blr	x2
    67c4:	ldr	w0, [x28, #24]
    67c8:	tbnz	w0, #31, 67ec <grub_show_menu+0x1b34>
    67cc:	nop
    67d0:	ldr	x1, [x28]
    67d4:	mov	w0, #0x20                  	// #32
    67d8:	add	w21, w21, #0x1
    67dc:	bl	bf40 <grub_putcode>
    67e0:	ldr	w0, [x28, #24]
    67e4:	cmp	w21, w0
    67e8:	b.le	67d0 <grub_show_menu+0x1b18>
    67ec:	ldr	w2, [x28, #12]
    67f0:	add	w19, w19, #0x1
    67f4:	cmp	w19, w2
    67f8:	b.lt	67a0 <grub_show_menu+0x1ae8>  // b.tstop
    67fc:	mov	w19, #0x0                   	// #0
    6800:	b	66c0 <grub_show_menu+0x1a08>
    6804:	cmp	w19, w2
    6808:	b.lt	6594 <grub_show_menu+0x18dc>  // b.tstop
    680c:	mov	w19, #0x0                   	// #0
    6810:	b	66c0 <grub_show_menu+0x1a08>
    6814:	ldr	w0, [x27, #8]
    6818:	add	w0, w0, #0x1
    681c:	sbfiz	x0, x0, #2, #32
    6820:	bl	0 <grub_zalloc>
    6824:	str	x0, [x23, x24, lsl #3]
    6828:	b	65d4 <grub_show_menu+0x191c>
    682c:	ldr	w0, [x24, #8]
    6830:	ldr	w1, [x20, #12]
    6834:	cmp	w1, w0
    6838:	cset	w0, eq  // eq = none
    683c:	sub	w27, w27, w0
    6840:	b	6298 <grub_show_menu+0x15e0>
    6844:	ldp	w4, w3, [x28, #20]
    6848:	mov	x0, x2
    684c:	ldr	w6, [x28, #12]
    6850:	mov	w1, #0x0                   	// #0
    6854:	ldr	w5, [x28, #36]
    6858:	add	w4, w4, w3
    685c:	ldr	w3, [x28, #16]
    6860:	add	w5, w5, #0x1
    6864:	add	w3, w3, w6
    6868:	add	w4, w4, w5
    686c:	ldr	x2, [x2, #72]
    6870:	sub	w3, w3, #0x1
    6874:	bfxil	w1, w4, #0, #16
    6878:	bfi	w1, w3, #16, #16
    687c:	blr	x2
    6880:	ldr	x1, [x28]
    6884:	cbz	w19, 68e8 <grub_show_menu+0x1c30>
    6888:	mov	w0, #0x2193                	// #8595
    688c:	bl	bf40 <grub_putcode>
    6890:	ldr	x2, [x28]
    6894:	ldp	x25, x26, [sp, #80]
    6898:	b	62f4 <grub_show_menu+0x163c>
    689c:	ldp	w3, w5, [x28, #20]
    68a0:	mov	x0, x2
    68a4:	ldr	w4, [x28, #36]
    68a8:	mov	w1, #0x0                   	// #0
    68ac:	add	w3, w3, w5
    68b0:	ldrh	w5, [x28, #16]
    68b4:	add	w4, w4, #0x1
    68b8:	add	w3, w3, w4
    68bc:	ldr	x2, [x2, #72]
    68c0:	bfxil	w1, w3, #0, #16
    68c4:	bfi	w1, w5, #16, #16
    68c8:	blr	x2
    68cc:	ldr	w0, [sp, #140]
    68d0:	ldr	x1, [x28]
    68d4:	cbz	w0, 68fc <grub_show_menu+0x1c44>
    68d8:	mov	w0, #0x2191                	// #8593
    68dc:	bl	bf40 <grub_putcode>
    68e0:	ldr	x2, [x28]
    68e4:	b	66d4 <grub_show_menu+0x1a1c>
    68e8:	mov	w0, #0x20                  	// #32
    68ec:	bl	bf40 <grub_putcode>
    68f0:	ldr	x2, [x28]
    68f4:	ldp	x25, x26, [sp, #80]
    68f8:	b	62f4 <grub_show_menu+0x163c>
    68fc:	mov	w0, #0x20                  	// #32
    6900:	bl	bf40 <grub_putcode>
    6904:	ldr	x2, [x28]
    6908:	b	66d4 <grub_show_menu+0x1a1c>
    690c:	mov	w0, #0x2195                	// #8597
    6910:	bl	bf40 <grub_putcode>
    6914:	ldr	x2, [x28]
    6918:	ldp	x25, x26, [sp, #80]
    691c:	b	62f4 <grub_show_menu+0x163c>
    6920:	stp	x29, x30, [sp, #-96]!
    6924:	mov	x29, sp
    6928:	stp	x19, x20, [sp, #16]
    692c:	mov	x19, x0
    6930:	ldr	w0, [x0, #12]
    6934:	stp	x21, x22, [sp, #32]
    6938:	mov	w21, w1
    693c:	ldr	w3, [x19, #20]
    6940:	cmp	w0, #0x0
    6944:	b.gt	69cc <grub_show_menu+0x1d14>
    6948:	cmp	w3, #0x0
    694c:	b.le	696c <grub_show_menu+0x1cb4>
    6950:	ldr	x0, [x19]
    6954:	sub	w3, w3, #0x1
    6958:	mov	w1, #0x18                  	// #24
    695c:	str	w3, [x19, #20]
    6960:	smaddl	x3, w3, w1, x0
    6964:	ldr	w0, [x3, #8]
    6968:	str	w0, [x19, #12]
    696c:	str	w0, [x19, #16]
    6970:	cbz	w21, 69b8 <grub_show_menu+0x1d00>
    6974:	ldr	w0, [x19, #48]
    6978:	ldr	w21, [x19, #8]
    697c:	cbz	w0, 69b8 <grub_show_menu+0x1d00>
    6980:	mov	w20, #0x0                   	// #0
    6984:	mov	w22, #0x38                  	// #56
    6988:	ldr	x1, [x19, #40]
    698c:	mov	x0, x19
    6990:	mov	w2, w21
    6994:	mov	w5, #0x0                   	// #0
    6998:	mov	w4, #0x0                   	// #0
    699c:	mov	w3, #0x0                   	// #0
    69a0:	umaddl	x1, w20, w22, x1
    69a4:	add	w20, w20, #0x1
    69a8:	bl	61d0 <grub_show_menu+0x1518>
    69ac:	ldr	w0, [x19, #48]
    69b0:	cmp	w20, w0
    69b4:	b.cc	6988 <grub_show_menu+0x1cd0>  // b.lo, b.ul, b.last
    69b8:	mov	w0, #0x1                   	// #1
    69bc:	ldp	x19, x20, [sp, #16]
    69c0:	ldp	x21, x22, [sp, #32]
    69c4:	ldp	x29, x30, [sp], #96
    69c8:	ret
    69cc:	ldr	x22, [x19]
    69d0:	str	x23, [sp, #48]
    69d4:	mov	w23, #0x18                  	// #24
    69d8:	sub	w1, w0, #0x1
    69dc:	smull	x20, w3, w23
    69e0:	ldr	x0, [x22, x20]
    69e4:	str	w1, [x19, #12]
    69e8:	add	x1, x0, w1, sxtw #2
    69ec:	bl	fa58 <grub_unicode_get_comb_start>
    69f0:	ldr	w1, [x19, #20]
    69f4:	add	x2, sp, #0x40
    69f8:	ldr	x3, [x19]
    69fc:	ldr	x5, [x22, x20]
    6a00:	smull	x1, w1, w23
    6a04:	add	x4, x3, x1
    6a08:	sub	x0, x0, x5
    6a0c:	ldr	x3, [x3, x1]
    6a10:	asr	x0, x0, #2
    6a14:	ldr	w1, [x4, #8]
    6a18:	str	w0, [x19, #12]
    6a1c:	sub	w1, w1, w0
    6a20:	add	x0, x3, w0, sxtw #2
    6a24:	sxtw	x1, w1
    6a28:	bl	dc58 <grub_unicode_aglomerate_comb>
    6a2c:	ldr	x0, [x22, x20]
    6a30:	ldrsw	x1, [x19, #12]
    6a34:	add	x1, x0, x1, lsl #2
    6a38:	bl	fa58 <grub_unicode_get_comb_start>
    6a3c:	ldr	x2, [x22, x20]
    6a40:	ldrh	w1, [sp, #70]
    6a44:	sub	x0, x0, x2
    6a48:	asr	x0, x0, #2
    6a4c:	str	w0, [x19, #12]
    6a50:	ubfx	x1, x1, #3, #8
    6a54:	cmp	w1, #0x2
    6a58:	b.hi	6a6c <grub_show_menu+0x1db4>  // b.pmore
    6a5c:	ldr	x23, [sp, #48]
    6a60:	str	w0, [x19, #16]
    6a64:	cbz	w21, 69b8 <grub_show_menu+0x1d00>
    6a68:	b	6974 <grub_show_menu+0x1cbc>
    6a6c:	ldr	x0, [sp, #88]
    6a70:	bl	0 <grub_free>
    6a74:	ldr	w0, [x19, #12]
    6a78:	ldr	x23, [sp, #48]
    6a7c:	str	w0, [x19, #16]
    6a80:	cbz	w21, 69b8 <grub_show_menu+0x1d00>
    6a84:	b	6974 <grub_show_menu+0x1cbc>
    6a88:	stp	x29, x30, [sp, #-80]!
    6a8c:	mov	x29, sp
    6a90:	ldr	w1, [x0, #20]
    6a94:	stp	x21, x22, [sp, #32]
    6a98:	mov	w21, #0x18                  	// #24
    6a9c:	stp	x23, x24, [sp, #48]
    6aa0:	smull	x21, w1, w21
    6aa4:	ldr	x23, [x0]
    6aa8:	stp	x19, x20, [sp, #16]
    6aac:	mov	x19, x0
    6ab0:	add	x20, x23, x21
    6ab4:	ldr	w0, [x0, #12]
    6ab8:	ldr	w3, [x20, #8]
    6abc:	cmp	w3, w0
    6ac0:	b.le	6c44 <grub_show_menu+0x1f8c>
    6ac4:	ldr	w1, [x19, #48]
    6ac8:	stp	x25, x26, [sp, #64]
    6acc:	cbz	w1, 6b2c <grub_show_menu+0x1e74>
    6ad0:	mov	w25, #0x0                   	// #0
    6ad4:	mov	w22, #0x38                  	// #56
    6ad8:	mov	w24, #0x1                   	// #1
    6adc:	nop
    6ae0:	umull	x2, w25, w22
    6ae4:	ldr	x1, [x19, #40]
    6ae8:	ldr	x0, [x20]
    6aec:	add	x26, x1, x2
    6af0:	ldr	x2, [x1, x2]
    6af4:	add	x1, x0, w3, sxtw #2
    6af8:	bl	93b0 <grub_getstringwidth>
    6afc:	cbz	x0, 6d4c <grub_show_menu+0x2094>
    6b00:	ldr	w1, [x26, #24]
    6b04:	sub	x0, x0, #0x1
    6b08:	ldr	w2, [x19, #48]
    6b0c:	add	w25, w25, #0x1
    6b10:	add	x0, x0, x1
    6b14:	ldr	w3, [x20, #8]
    6b18:	cmp	w2, w25
    6b1c:	udiv	x0, x0, x1
    6b20:	str	w0, [x26, #44]
    6b24:	b.hi	6ae0 <grub_show_menu+0x1e28>  // b.pmore
    6b28:	ldr	w0, [x19, #12]
    6b2c:	sub	w2, w3, w0
    6b30:	sbfiz	x0, x0, #2, #32
    6b34:	ldr	x3, [x23, x21]
    6b38:	sub	w2, w2, #0x1
    6b3c:	add	x1, x0, #0x4
    6b40:	add	x1, x3, x1
    6b44:	sbfiz	x2, x2, #2, #32
    6b48:	add	x0, x3, x0
    6b4c:	bl	0 <grub_memmove>
    6b50:	ldr	w0, [x20, #8]
    6b54:	ldr	w1, [x19, #48]
    6b58:	sub	w0, w0, #0x1
    6b5c:	str	w0, [x20, #8]
    6b60:	cbz	w1, 6d9c <grub_show_menu+0x20e4>
    6b64:	ldr	x0, [x20, #16]
    6b68:	mov	w21, #0x0                   	// #0
    6b6c:	nop
    6b70:	mov	w22, w21
    6b74:	add	w21, w21, #0x1
    6b78:	ldr	x0, [x0, x22, lsl #3]
    6b7c:	bl	0 <grub_free>
    6b80:	ldr	x0, [x20, #16]
    6b84:	ldr	w1, [x19, #48]
    6b88:	str	xzr, [x0, x22, lsl #3]
    6b8c:	cmp	w21, w1
    6b90:	b.cc	6b70 <grub_show_menu+0x1eb8>  // b.lo, b.ul, b.last
    6b94:	ldr	w0, [x19, #12]
    6b98:	mov	w21, #0x0                   	// #0
    6b9c:	str	w0, [x19, #16]
    6ba0:	mov	w23, #0x38                  	// #56
    6ba4:	ldr	w22, [x19, #20]
    6ba8:	cbz	w1, 6c28 <grub_show_menu+0x1f70>
    6bac:	nop
    6bb0:	umull	x24, w21, w23
    6bb4:	ldrsw	x1, [x20, #8]
    6bb8:	ldr	x2, [x19, #40]
    6bbc:	ldr	x0, [x20]
    6bc0:	add	x25, x2, x24
    6bc4:	ldr	x2, [x2, x24]
    6bc8:	add	x1, x0, x1, lsl #2
    6bcc:	bl	93b0 <grub_getstringwidth>
    6bd0:	mov	x1, x0
    6bd4:	mov	w2, w22
    6bd8:	mov	x0, x19
    6bdc:	sub	x7, x1, #0x1
    6be0:	mov	w5, #0x2                   	// #2
    6be4:	mov	w4, #0x0                   	// #0
    6be8:	mov	w3, #0x0                   	// #0
    6bec:	mov	w6, #0x1                   	// #1
    6bf0:	cbz	x1, 6c00 <grub_show_menu+0x1f48>
    6bf4:	ldr	w6, [x25, #24]
    6bf8:	add	x7, x7, x6
    6bfc:	udiv	x6, x7, x6
    6c00:	ldr	x1, [x19, #40]
    6c04:	add	x1, x1, x24
    6c08:	ldr	w7, [x1, #44]
    6c0c:	cmp	w7, w6
    6c10:	b.eq	6d6c <grub_show_menu+0x20b4>  // b.none
    6c14:	bl	61d0 <grub_show_menu+0x1518>
    6c18:	add	w21, w21, #0x1
    6c1c:	ldr	w0, [x19, #48]
    6c20:	cmp	w0, w21
    6c24:	b.hi	6bb0 <grub_show_menu+0x1ef8>  // b.pmore
    6c28:	ldp	x25, x26, [sp, #64]
    6c2c:	mov	w0, #0x1                   	// #1
    6c30:	ldp	x19, x20, [sp, #16]
    6c34:	ldp	x21, x22, [sp, #32]
    6c38:	ldp	x23, x24, [sp, #48]
    6c3c:	ldp	x29, x30, [sp], #80
    6c40:	ret
    6c44:	ldr	w0, [x19, #8]
    6c48:	add	w1, w1, #0x1
    6c4c:	cmp	w0, w1
    6c50:	b.le	6c2c <grub_show_menu+0x1f74>
    6c54:	ldr	w2, [x20, #32]
    6c58:	add	x24, x20, #0x18
    6c5c:	ldr	w4, [x20, #12]
    6c60:	add	w1, w3, w2
    6c64:	cmp	w4, w1
    6c68:	ldr	x0, [x23, x21]
    6c6c:	b.lt	6dac <grub_show_menu+0x20f4>  // b.tstop
    6c70:	ldr	x1, [x20, #24]
    6c74:	sbfiz	x2, x2, #2, #32
    6c78:	add	x0, x0, w3, sxtw #2
    6c7c:	bl	0 <grub_memmove>
    6c80:	ldr	w0, [x20, #8]
    6c84:	ldr	w2, [x24, #8]
    6c88:	ldr	w1, [x19, #48]
    6c8c:	add	w0, w0, w2
    6c90:	str	w0, [x20, #8]
    6c94:	cbz	w1, 6cc4 <grub_show_menu+0x200c>
    6c98:	ldr	x0, [x20, #16]
    6c9c:	mov	w21, #0x0                   	// #0
    6ca0:	mov	w22, w21
    6ca4:	add	w21, w21, #0x1
    6ca8:	ldr	x0, [x0, x22, lsl #3]
    6cac:	bl	0 <grub_free>
    6cb0:	ldr	x0, [x20, #16]
    6cb4:	ldr	w1, [x19, #48]
    6cb8:	str	xzr, [x0, x22, lsl #3]
    6cbc:	cmp	w21, w1
    6cc0:	b.cc	6ca0 <grub_show_menu+0x1fe8>  // b.lo, b.ul, b.last
    6cc4:	ldr	x0, [x20, #24]
    6cc8:	mov	w21, #0x0                   	// #0
    6ccc:	mov	w22, #0x38                  	// #56
    6cd0:	bl	0 <grub_free>
    6cd4:	ldr	w2, [x19, #8]
    6cd8:	mov	w3, #0x18                  	// #24
    6cdc:	ldr	w4, [x19, #20]
    6ce0:	add	x1, x20, #0x30
    6ce4:	mov	x0, x24
    6ce8:	sub	w2, w2, w4
    6cec:	sub	w2, w2, #0x2
    6cf0:	smull	x2, w2, w3
    6cf4:	bl	0 <grub_memmove>
    6cf8:	ldr	w20, [x19, #20]
    6cfc:	ldp	w0, w2, [x19, #8]
    6d00:	str	w2, [x19, #16]
    6d04:	ldr	w1, [x19, #48]
    6d08:	sub	w0, w0, #0x1
    6d0c:	str	w0, [x19, #8]
    6d10:	cbz	w1, 6c2c <grub_show_menu+0x1f74>
    6d14:	nop
    6d18:	ldr	x1, [x19, #40]
    6d1c:	mov	x0, x19
    6d20:	mov	w4, #0x1                   	// #1
    6d24:	mov	w2, w20
    6d28:	mov	w5, #0x2                   	// #2
    6d2c:	mov	w3, #0x0                   	// #0
    6d30:	umaddl	x1, w21, w22, x1
    6d34:	add	w21, w21, w4
    6d38:	bl	61d0 <grub_show_menu+0x1518>
    6d3c:	ldr	w0, [x19, #48]
    6d40:	cmp	w21, w0
    6d44:	b.cc	6d18 <grub_show_menu+0x2060>  // b.lo, b.ul, b.last
    6d48:	b	6c2c <grub_show_menu+0x1f74>
    6d4c:	ldr	w0, [x19, #48]
    6d50:	add	w25, w25, #0x1
    6d54:	ldr	w3, [x20, #8]
    6d58:	str	w24, [x26, #44]
    6d5c:	cmp	w25, w0
    6d60:	b.cc	6ae0 <grub_show_menu+0x1e28>  // b.lo, b.ul, b.last
    6d64:	ldr	w0, [x19, #12]
    6d68:	b	6b2c <grub_show_menu+0x1e74>
    6d6c:	mov	x0, x19
    6d70:	mov	w2, w22
    6d74:	mov	w5, #0x1                   	// #1
    6d78:	mov	w4, #0x0                   	// #0
    6d7c:	mov	w3, #0x0                   	// #0
    6d80:	bl	61d0 <grub_show_menu+0x1518>
    6d84:	ldr	w0, [x19, #48]
    6d88:	add	w21, w21, #0x1
    6d8c:	cmp	w21, w0
    6d90:	b.cc	6bb0 <grub_show_menu+0x1ef8>  // b.lo, b.ul, b.last
    6d94:	ldp	x25, x26, [sp, #64]
    6d98:	b	6c2c <grub_show_menu+0x1f74>
    6d9c:	ldr	w0, [x19, #12]
    6da0:	ldp	x25, x26, [sp, #64]
    6da4:	str	w0, [x19, #16]
    6da8:	b	6c2c <grub_show_menu+0x1f74>
    6dac:	lsl	w1, w1, #1
    6db0:	str	w1, [x20, #12]
    6db4:	add	w1, w1, #0x1
    6db8:	sbfiz	x1, x1, #2, #32
    6dbc:	bl	0 <grub_realloc>
    6dc0:	str	x0, [x23, x21]
    6dc4:	cbz	x0, 6dd4 <grub_show_menu+0x211c>
    6dc8:	ldr	w3, [x20, #8]
    6dcc:	ldr	w2, [x24, #8]
    6dd0:	b	6c70 <grub_show_menu+0x1fb8>
    6dd4:	mov	w0, #0x0                   	// #0
    6dd8:	b	6c30 <grub_show_menu+0x1f78>
    6ddc:	nop
    6de0:	stp	x29, x30, [sp, #-112]!
    6de4:	mov	x29, sp
    6de8:	stp	x21, x22, [sp, #32]
    6dec:	mov	x22, x1
    6df0:	ldr	w1, [x0, #48]
    6df4:	stp	x19, x20, [sp, #16]
    6df8:	mov	x19, x0
    6dfc:	stp	x25, x26, [sp, #64]
    6e00:	ldr	w25, [x0, #8]
    6e04:	str	w2, [sp, #108]
    6e08:	cbz	w1, 6e38 <grub_show_menu+0x2180>
    6e0c:	ldr	x0, [x0, #40]
    6e10:	sub	w1, w1, #0x1
    6e14:	mov	w3, #0x38                  	// #56
    6e18:	add	x2, x0, #0x68
    6e1c:	add	x0, x0, #0x30
    6e20:	umaddl	x1, w1, w3, x2
    6e24:	nop
    6e28:	stp	wzr, wzr, [x0]
    6e2c:	add	x0, x0, #0x38
    6e30:	cmp	x1, x0
    6e34:	b.ne	6e28 <grub_show_menu+0x2170>  // b.any
    6e38:	ldrb	w0, [x22]
    6e3c:	cbz	w0, 70a8 <grub_show_menu+0x23f0>
    6e40:	stp	x23, x24, [sp, #48]
    6e44:	mov	x24, #0x1                   	// #1
    6e48:	mov	w20, #0x1                   	// #1
    6e4c:	movk	x24, #0x2, lsl #32
    6e50:	stp	x27, x28, [sp, #80]
    6e54:	nop
    6e58:	cmp	w0, #0xa
    6e5c:	b.eq	711c <grub_show_menu+0x2464>  // b.none
    6e60:	mov	x0, x22
    6e64:	mov	w1, #0xa                   	// #10
    6e68:	bl	0 <grub_strchr>
    6e6c:	str	x0, [sp, #96]
    6e70:	cbz	x0, 7298 <grub_show_menu+0x25e0>
    6e74:	ldr	w21, [x19, #20]
    6e78:	mov	w1, #0x18                  	// #24
    6e7c:	ldr	x0, [sp, #96]
    6e80:	ldr	x28, [x19]
    6e84:	smull	x21, w21, w1
    6e88:	sub	x23, x0, x22
    6e8c:	add	x26, x28, x21
    6e90:	lsl	x0, x23, #2
    6e94:	bl	0 <grub_malloc>
    6e98:	mov	x27, x0
    6e9c:	cbz	x0, 737c <grub_show_menu+0x26c4>
    6ea0:	mov	x2, x22
    6ea4:	mov	x1, x23
    6ea8:	mov	x3, x23
    6eac:	mov	x4, #0x0                   	// #0
    6eb0:	bl	d8d8 <grub_utf8_to_ucs4>
    6eb4:	mov	x22, x0
    6eb8:	ldp	w2, w0, [x26, #8]
    6ebc:	add	w1, w2, w22
    6ec0:	cmp	w0, w1
    6ec4:	ldr	x0, [x28, x21]
    6ec8:	b.lt	7274 <grub_show_menu+0x25bc>  // b.tstop
    6ecc:	ldr	w1, [x19, #12]
    6ed0:	sxtw	x3, w22
    6ed4:	mov	x23, x3
    6ed8:	sub	w2, w2, w1
    6edc:	add	x4, x3, w1, sxtw
    6ee0:	add	x1, x0, w1, sxtw #2
    6ee4:	sbfiz	x2, x2, #2, #32
    6ee8:	add	x0, x0, x4, lsl #2
    6eec:	bl	0 <grub_memmove>
    6ef0:	ldrsw	x3, [x19, #12]
    6ef4:	lsl	x2, x23, #2
    6ef8:	ldr	x0, [x28, x21]
    6efc:	mov	x1, x27
    6f00:	add	x0, x0, x3, lsl #2
    6f04:	bl	0 <grub_memmove>
    6f08:	mov	x0, x27
    6f0c:	bl	0 <grub_free>
    6f10:	ldr	w0, [x19, #48]
    6f14:	cbz	w0, 739c <grub_show_menu+0x26e4>
    6f18:	ldr	x0, [x26, #16]
    6f1c:	mov	w21, #0x0                   	// #0
    6f20:	mov	w27, w21
    6f24:	add	w21, w21, #0x1
    6f28:	ldr	x0, [x0, x27, lsl #3]
    6f2c:	bl	0 <grub_free>
    6f30:	ldr	x0, [x26, #16]
    6f34:	ldr	w1, [x19, #48]
    6f38:	str	xzr, [x0, x27, lsl #3]
    6f3c:	cmp	w1, w21
    6f40:	b.hi	6f20 <grub_show_menu+0x2268>  // b.pmore
    6f44:	cbz	w1, 739c <grub_show_menu+0x26e4>
    6f48:	mov	w27, #0x0                   	// #0
    6f4c:	mov	w21, #0x38                  	// #56
    6f50:	umull	x2, w27, w21
    6f54:	ldrsw	x1, [x26, #8]
    6f58:	ldr	x3, [x19, #40]
    6f5c:	ldr	x0, [x26]
    6f60:	add	x28, x3, x2
    6f64:	ldr	x2, [x3, x2]
    6f68:	add	x1, x0, x1, lsl #2
    6f6c:	bl	93b0 <grub_getstringwidth>
    6f70:	cbz	x0, 7104 <grub_show_menu+0x244c>
    6f74:	ldr	w1, [x28, #24]
    6f78:	sub	x0, x0, #0x1
    6f7c:	ldr	w2, [x19, #48]
    6f80:	add	w27, w27, #0x1
    6f84:	add	x0, x0, x1
    6f88:	cmp	w27, w2
    6f8c:	udiv	x0, x0, x1
    6f90:	str	w0, [x28, #44]
    6f94:	b.cc	6f50 <grub_show_menu+0x2298>  // b.lo, b.ul, b.last
    6f98:	ldr	w1, [x26, #8]
    6f9c:	ldr	w0, [x19, #20]
    6fa0:	add	w1, w1, w22
    6fa4:	str	w1, [x26, #8]
    6fa8:	cmp	w25, w0
    6fac:	csel	w25, w25, w0, le
    6fb0:	cbz	w2, 7044 <grub_show_menu+0x238c>
    6fb4:	mov	w23, #0x0                   	// #0
    6fb8:	mov	w27, #0x38                  	// #56
    6fbc:	ldr	x2, [x19, #40]
    6fc0:	b	6fdc <grub_show_menu+0x2324>
    6fc4:	str	x24, [x21, #48]
    6fc8:	ldr	w0, [x19, #48]
    6fcc:	add	w23, w23, #0x1
    6fd0:	cmp	w0, w23
    6fd4:	b.ls	7040 <grub_show_menu+0x2388>  // b.plast
    6fd8:	ldr	w1, [x26, #8]
    6fdc:	umull	x21, w23, w27
    6fe0:	ldr	x0, [x26]
    6fe4:	add	x28, x2, x21
    6fe8:	ldr	x2, [x2, x21]
    6fec:	add	x1, x0, w1, sxtw #2
    6ff0:	bl	93b0 <grub_getstringwidth>
    6ff4:	sub	x2, x0, #0x1
    6ff8:	mov	w1, #0x1                   	// #1
    6ffc:	cbz	x0, 700c <grub_show_menu+0x2354>
    7000:	ldr	w1, [x28, #24]
    7004:	add	x2, x2, x1
    7008:	udiv	x1, x2, x1
    700c:	ldr	x2, [x19, #40]
    7010:	add	x21, x2, x21
    7014:	ldr	w0, [x21, #44]
    7018:	cmp	w0, w1
    701c:	b.ne	6fc4 <grub_show_menu+0x230c>  // b.any
    7020:	ldr	w0, [x21, #52]
    7024:	cmp	w0, #0x2
    7028:	b.eq	6fc8 <grub_show_menu+0x2310>  // b.none
    702c:	ldr	w0, [x19, #48]
    7030:	add	w23, w23, #0x1
    7034:	str	w20, [x21, #52]
    7038:	cmp	w0, w23
    703c:	b.hi	6fd8 <grub_show_menu+0x2320>  // b.pmore
    7040:	ldr	w0, [x19, #20]
    7044:	mov	w21, #0x18                  	// #24
    7048:	ldr	w2, [x19, #12]
    704c:	ldr	x1, [x19]
    7050:	smull	x0, w0, w21
    7054:	add	w2, w2, w22
    7058:	add	x3, x1, x0
    705c:	ldr	x22, [sp, #96]
    7060:	ldr	x1, [x1, x0]
    7064:	ldr	w0, [x3, #8]
    7068:	cmp	w2, w0
    706c:	csel	w2, w2, w0, le
    7070:	add	x0, x1, w0, sxtw #2
    7074:	add	x1, x1, w2, sxtw #2
    7078:	bl	fae0 <grub_unicode_get_comb_end>
    707c:	ldr	w1, [x19, #20]
    7080:	ldr	x2, [x19]
    7084:	smull	x1, w1, w21
    7088:	ldr	x1, [x2, x1]
    708c:	sub	x0, x0, x1
    7090:	asr	x0, x0, #2
    7094:	stp	w0, w0, [x19, #12]
    7098:	ldrb	w0, [x22]
    709c:	cbnz	w0, 6e58 <grub_show_menu+0x21a0>
    70a0:	ldp	x23, x24, [sp, #48]
    70a4:	ldp	x27, x28, [sp, #80]
    70a8:	ldr	w0, [sp, #108]
    70ac:	cbz	w0, 70ec <grub_show_menu+0x2434>
    70b0:	ldr	w0, [x19, #48]
    70b4:	cbz	w0, 70ec <grub_show_menu+0x2434>
    70b8:	mov	w20, #0x0                   	// #0
    70bc:	mov	w21, #0x38                  	// #56
    70c0:	ldr	x1, [x19, #40]
    70c4:	mov	x0, x19
    70c8:	mov	w2, w25
    70cc:	mov	w3, #0x0                   	// #0
    70d0:	umaddl	x1, w20, w21, x1
    70d4:	add	w20, w20, #0x1
    70d8:	ldp	w4, w5, [x1, #48]
    70dc:	bl	61d0 <grub_show_menu+0x1518>
    70e0:	ldr	w0, [x19, #48]
    70e4:	cmp	w0, w20
    70e8:	b.hi	70c0 <grub_show_menu+0x2408>  // b.pmore
    70ec:	mov	w0, #0x1                   	// #1
    70f0:	ldp	x19, x20, [sp, #16]
    70f4:	ldp	x21, x22, [sp, #32]
    70f8:	ldp	x25, x26, [sp, #64]
    70fc:	ldp	x29, x30, [sp], #112
    7100:	ret
    7104:	ldr	w2, [x19, #48]
    7108:	add	w27, w27, #0x1
    710c:	str	w20, [x28, #44]
    7110:	cmp	w2, w27
    7114:	b.hi	6f50 <grub_show_menu+0x2298>  // b.pmore
    7118:	b	6f98 <grub_show_menu+0x22e0>
    711c:	ldr	w1, [x19, #8]
    7120:	mov	w23, #0x18                  	// #24
    7124:	ldr	x0, [x19]
    7128:	add	w1, w1, #0x1
    712c:	str	w1, [x19, #8]
    7130:	smull	x1, w1, w23
    7134:	bl	0 <grub_realloc>
    7138:	str	x0, [x19]
    713c:	cbz	x0, 737c <grub_show_menu+0x26c4>
    7140:	ldr	w2, [x19, #20]
    7144:	ldr	w4, [x19, #8]
    7148:	sxtw	x1, w2
    714c:	sub	w3, w4, #0x2
    7150:	add	x1, x1, #0x1
    7154:	cmp	w2, w3
    7158:	add	x1, x1, x1, lsl #1
    715c:	lsl	x3, x1, #3
    7160:	add	x21, x0, x3
    7164:	b.lt	72ac <grub_show_menu+0x25f4>  // b.tstop
    7168:	mov	x0, #0x5000000000          	// #343597383680
    716c:	str	x0, [x21, #8]
    7170:	mov	x0, #0x144                 	// #324
    7174:	bl	0 <grub_malloc>
    7178:	ldr	w1, [x19, #48]
    717c:	str	x0, [x21]
    7180:	lsl	x0, x1, #3
    7184:	bl	0 <grub_zalloc>
    7188:	str	x0, [x21, #16]
    718c:	ldr	x2, [x21]
    7190:	cbz	x2, 7344 <grub_show_menu+0x268c>
    7194:	cbz	x0, 7344 <grub_show_menu+0x268c>
    7198:	ldr	w21, [x19, #20]
    719c:	mov	w0, #0x18                  	// #24
    71a0:	ldr	x26, [x19]
    71a4:	ldr	w1, [x19, #12]
    71a8:	smull	x21, w21, w0
    71ac:	add	x23, x26, x21
    71b0:	add	x28, x23, #0x18
    71b4:	ldr	w27, [x23, #8]
    71b8:	ldp	w2, w0, [x28, #8]
    71bc:	sub	w27, w27, w1
    71c0:	add	w2, w27, w2
    71c4:	cmp	w0, w2
    71c8:	ldr	x0, [x23, #24]
    71cc:	b.lt	72e0 <grub_show_menu+0x2628>  // b.tstop
    71d0:	ldr	x3, [x26, x21]
    71d4:	sbfiz	x2, x27, #2, #32
    71d8:	add	x1, x3, w1, sxtw #2
    71dc:	bl	0 <grub_memmove>
    71e0:	ldr	w0, [x19, #48]
    71e4:	ldr	w1, [x19, #12]
    71e8:	str	w1, [x23, #8]
    71ec:	cbz	w0, 7320 <grub_show_menu+0x2668>
    71f0:	ldr	x0, [x23, #16]
    71f4:	mov	w21, #0x0                   	// #0
    71f8:	mov	w26, w21
    71fc:	add	w21, w21, #0x1
    7200:	ldr	x0, [x0, x26, lsl #3]
    7204:	bl	0 <grub_free>
    7208:	ldr	x0, [x23, #16]
    720c:	ldr	w1, [x19, #48]
    7210:	str	xzr, [x0, x26, lsl #3]
    7214:	cmp	w1, w21
    7218:	b.hi	71f8 <grub_show_menu+0x2540>  // b.pmore
    721c:	ldr	w3, [x19, #20]
    7220:	str	w27, [x28, #8]
    7224:	cmp	w25, w3
    7228:	csel	w25, w25, w3, le
    722c:	cbz	w1, 7260 <grub_show_menu+0x25a8>
    7230:	ldr	x0, [x19, #40]
    7234:	sub	w1, w1, #0x1
    7238:	mov	w5, #0x38                  	// #56
    723c:	mov	w2, #0x2                   	// #2
    7240:	add	x4, x0, #0x68
    7244:	add	x0, x0, #0x30
    7248:	umaddl	x1, w1, w5, x4
    724c:	nop
    7250:	str	w2, [x0, #4]
    7254:	str	w20, [x0], #56
    7258:	cmp	x1, x0
    725c:	b.ne	7250 <grub_show_menu+0x2598>  // b.any
    7260:	add	w3, w3, #0x1
    7264:	add	x22, x22, #0x1
    7268:	stur	xzr, [x19, #12]
    726c:	str	w3, [x19, #20]
    7270:	b	7098 <grub_show_menu+0x23e0>
    7274:	lsl	w1, w1, #1
    7278:	str	w1, [x26, #12]
    727c:	add	w2, w1, #0x1
    7280:	sbfiz	x1, x2, #2, #32
    7284:	bl	0 <grub_realloc>
    7288:	str	x0, [x28, x21]
    728c:	cbz	x0, 7374 <grub_show_menu+0x26bc>
    7290:	ldr	w2, [x26, #8]
    7294:	b	6ecc <grub_show_menu+0x2214>
    7298:	mov	x0, x22
    729c:	bl	0 <grub_strlen>
    72a0:	add	x0, x22, x0
    72a4:	str	x0, [sp, #96]
    72a8:	b	6e74 <grub_show_menu+0x21bc>
    72ac:	sub	w4, w4, w2
    72b0:	add	x3, x3, #0x18
    72b4:	sub	w2, w4, #0x2
    72b8:	mov	x1, x21
    72bc:	add	x0, x0, x3
    72c0:	smull	x2, w2, w23
    72c4:	bl	0 <grub_memmove>
    72c8:	ldrsw	x21, [x19, #20]
    72cc:	ldr	x0, [x19]
    72d0:	add	x21, x21, #0x1
    72d4:	add	x21, x21, x21, lsl #1
    72d8:	add	x21, x0, x21, lsl #3
    72dc:	b	7168 <grub_show_menu+0x24b0>
    72e0:	lsl	w2, w2, #1
    72e4:	str	w2, [x28, #12]
    72e8:	add	w2, w2, #0x1
    72ec:	sbfiz	x1, x2, #2, #32
    72f0:	bl	0 <grub_realloc>
    72f4:	str	x0, [x23, #24]
    72f8:	cbz	x0, 737c <grub_show_menu+0x26c4>
    72fc:	ldr	x3, [x26, x21]
    7300:	sbfiz	x2, x27, #2, #32
    7304:	ldr	w1, [x19, #12]
    7308:	add	x1, x3, w1, sxtw #2
    730c:	bl	0 <grub_memmove>
    7310:	ldr	w0, [x19, #48]
    7314:	ldr	w1, [x19, #12]
    7318:	str	w1, [x23, #8]
    731c:	cbnz	w0, 71f0 <grub_show_menu+0x2538>
    7320:	ldr	w3, [x19, #20]
    7324:	add	x22, x22, #0x1
    7328:	str	w27, [x28, #8]
    732c:	cmp	w25, w3
    7330:	stur	xzr, [x19, #12]
    7334:	csel	w25, w25, w3, le
    7338:	add	w3, w3, #0x1
    733c:	str	w3, [x19, #20]
    7340:	b	7098 <grub_show_menu+0x23e0>
    7344:	mov	x0, x2
    7348:	bl	0 <grub_free>
    734c:	ldr	x0, [x21, #16]
    7350:	bl	0 <grub_free>
    7354:	mov	w0, #0x0                   	// #0
    7358:	ldp	x19, x20, [sp, #16]
    735c:	ldp	x21, x22, [sp, #32]
    7360:	ldp	x23, x24, [sp, #48]
    7364:	ldp	x25, x26, [sp, #64]
    7368:	ldp	x27, x28, [sp, #80]
    736c:	ldp	x29, x30, [sp], #112
    7370:	ret
    7374:	mov	x0, x27
    7378:	bl	0 <grub_free>
    737c:	mov	w0, #0x0                   	// #0
    7380:	ldp	x19, x20, [sp, #16]
    7384:	ldp	x21, x22, [sp, #32]
    7388:	ldp	x23, x24, [sp, #48]
    738c:	ldp	x25, x26, [sp, #64]
    7390:	ldp	x27, x28, [sp, #80]
    7394:	ldp	x29, x30, [sp], #112
    7398:	ret
    739c:	ldr	w0, [x19, #20]
    73a0:	ldr	w1, [x26, #8]
    73a4:	cmp	w25, w0
    73a8:	add	w1, w1, w22
    73ac:	csel	w25, w25, w0, le
    73b0:	str	w1, [x26, #8]
    73b4:	b	7044 <grub_show_menu+0x238c>

00000000000073b8 <grub_menu_entry_run>:
    73b8:	stp	x29, x30, [sp, #-176]!
    73bc:	mov	x29, sp
    73c0:	stp	x21, x22, [sp, #32]
    73c4:	mov	x21, x0
    73c8:	mov	x0, #0x0                   	// #0
    73cc:	bl	2d90 <grub_auth_check_authentication>
    73d0:	cbnz	w0, 7f60 <grub_menu_entry_run+0xba8>
    73d4:	mov	x0, #0x38                  	// #56
    73d8:	stp	x19, x20, [sp, #16]
    73dc:	bl	0 <grub_zalloc>
    73e0:	mov	x19, x0
    73e4:	cbz	x0, 7f7c <grub_menu_entry_run+0xbc4>
    73e8:	ldr	w1, [x21, #68]
    73ec:	mov	w0, #0x1                   	// #1
    73f0:	str	w0, [x19, #8]
    73f4:	mov	x0, #0x18                  	// #24
    73f8:	str	w1, [x19, #36]
    73fc:	bl	0 <grub_malloc>
    7400:	str	x0, [x19]
    7404:	mov	x20, x0
    7408:	cbz	x0, 7578 <grub_menu_entry_run+0x1c0>
    740c:	mov	x0, #0x5000000000          	// #343597383680
    7410:	str	x0, [x20, #8]
    7414:	mov	x0, #0x144                 	// #324
    7418:	bl	0 <grub_malloc>
    741c:	ldr	w1, [x19, #48]
    7420:	str	x0, [x20]
    7424:	lsl	x0, x1, #3
    7428:	bl	0 <grub_zalloc>
    742c:	str	x0, [x20, #16]
    7430:	ldr	x2, [x20]
    7434:	cmp	x0, #0x0
    7438:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    743c:	b.eq	7568 <grub_menu_entry_run+0x1b0>  // b.none
    7440:	ldr	x1, [x21, #40]
    7444:	mov	x0, x19
    7448:	mov	w2, #0x0                   	// #0
    744c:	stp	x23, x24, [sp, #48]
    7450:	stp	x25, x26, [sp, #64]
    7454:	stp	x27, x28, [sp, #80]
    7458:	bl	6de0 <grub_show_menu+0x2128>
    745c:	ldr	w1, [x19, #48]
    7460:	str	wzr, [x19, #12]
    7464:	str	xzr, [x19, #16]
    7468:	cbz	w1, 7494 <grub_menu_entry_run+0xdc>
    746c:	ldr	x0, [x19, #40]
    7470:	sub	w1, w1, #0x1
    7474:	mov	w3, #0x38                  	// #56
    7478:	add	x2, x0, #0x40
    747c:	add	x0, x0, #0x8
    7480:	umaddl	x1, w1, w3, x2
    7484:	nop
    7488:	str	wzr, [x0], #56
    748c:	cmp	x1, x0
    7490:	b.ne	7488 <grub_menu_entry_run+0xd0>  // b.any
    7494:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    7498:	mov	x0, #0x0                   	// #0
    749c:	str	xzr, [x19, #40]
    74a0:	ldr	x1, [x1]
    74a4:	str	x1, [sp, #112]
    74a8:	bl	0 <grub_free>
    74ac:	str	wzr, [x19, #48]
    74b0:	ldr	x0, [sp, #112]
    74b4:	ldr	x1, [x0]
    74b8:	cbz	x1, 7f8c <grub_menu_entry_run+0xbd4>
    74bc:	mov	w2, #0x1                   	// #1
    74c0:	ldr	x1, [x1]
    74c4:	mov	w0, w2
    74c8:	add	w2, w2, #0x1
    74cc:	cbnz	x1, 74c0 <grub_menu_entry_run+0x108>
    74d0:	str	w0, [x19, #48]
    74d4:	ldr	w1, [x19, #8]
    74d8:	cbz	w1, 7594 <grub_menu_entry_run+0x1dc>
    74dc:	mov	w22, #0x0                   	// #0
    74e0:	mov	w21, #0x18                  	// #24
    74e4:	ldr	x1, [x19]
    74e8:	b	74f8 <grub_menu_entry_run+0x140>
    74ec:	ldr	w0, [x19, #8]
    74f0:	cmp	w0, w22
    74f4:	b.ls	7590 <grub_menu_entry_run+0x1d8>  // b.plast
    74f8:	umull	x20, w22, w21
    74fc:	add	w22, w22, #0x1
    7500:	add	x1, x1, x20
    7504:	ldr	x0, [x1, #16]
    7508:	bl	0 <grub_free>
    750c:	ldr	w0, [x19, #48]
    7510:	ldr	x23, [x19]
    7514:	lsl	x0, x0, #3
    7518:	bl	0 <grub_zalloc>
    751c:	ldr	x1, [x19]
    7520:	add	x23, x23, x20
    7524:	add	x20, x1, x20
    7528:	str	x0, [x23, #16]
    752c:	ldr	x0, [x20, #16]
    7530:	cbnz	x0, 74ec <grub_menu_entry_run+0x134>
    7534:	bl	0 <grub_print_error>
    7538:	mov	x0, x19
    753c:	bl	6010 <grub_show_menu+0x1358>
    7540:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    7544:	ldp	x19, x20, [sp, #16]
    7548:	ldr	x0, [x0]
    754c:	ldp	x23, x24, [sp, #48]
    7550:	ldp	x25, x26, [sp, #64]
    7554:	ldp	x27, x28, [sp, #80]
    7558:	str	wzr, [x0]
    755c:	ldp	x21, x22, [sp, #32]
    7560:	ldp	x29, x30, [sp], #176
    7564:	ret
    7568:	mov	x0, x2
    756c:	bl	0 <grub_free>
    7570:	ldr	x0, [x20, #16]
    7574:	bl	0 <grub_free>
    7578:	mov	x0, x19
    757c:	bl	6010 <grub_show_menu+0x1358>
    7580:	ldp	x19, x20, [sp, #16]
    7584:	ldp	x21, x22, [sp, #32]
    7588:	ldp	x29, x30, [sp], #176
    758c:	ret
    7590:	ldr	w0, [x19, #48]
    7594:	mov	w20, #0x38                  	// #56
    7598:	umull	x0, w0, w20
    759c:	bl	0 <grub_zalloc>
    75a0:	str	x0, [x19, #40]
    75a4:	mov	x3, x0
    75a8:	cbz	x0, 7534 <grub_menu_entry_run+0x17c>
    75ac:	ldr	x0, [sp, #112]
    75b0:	mov	w5, w20
    75b4:	mov	w2, #0x0                   	// #0
    75b8:	ldr	x1, [x0]
    75bc:	cbz	x1, 75dc <grub_menu_entry_run+0x224>
    75c0:	umull	x0, w2, w5
    75c4:	add	w2, w2, #0x1
    75c8:	add	x4, x3, x0
    75cc:	str	x1, [x3, x0]
    75d0:	ldr	x1, [x1]
    75d4:	str	wzr, [x4, #8]
    75d8:	cbnz	x1, 75c0 <grub_menu_entry_run+0x208>
    75dc:	ldr	w0, [x19, #48]
    75e0:	mov	w20, #0x0                   	// #0
    75e4:	mov	w21, #0x38                  	// #56
    75e8:	cbnz	w0, 75f4 <grub_menu_entry_run+0x23c>
    75ec:	b	76bc <grub_menu_entry_run+0x304>
    75f0:	ldr	x3, [x19, #40]
    75f4:	umull	x4, w20, w21
    75f8:	mov	w1, #0x1                   	// #1
    75fc:	mov	w0, #0x0                   	// #0
    7600:	add	x2, x3, x4
    7604:	add	w20, w20, w1
    7608:	add	x2, x2, #0xc
    760c:	ldr	x3, [x3, x4]
    7610:	bl	9598 <grub_menu_init_page>
    7614:	ldr	w0, [x19, #48]
    7618:	cmp	w0, w20
    761c:	b.hi	75f0 <grub_menu_entry_run+0x238>  // b.pmore
    7620:	cbz	w0, 76bc <grub_menu_entry_run+0x304>
    7624:	mov	w20, #0x0                   	// #0
    7628:	mov	w21, #0x38                  	// #56
    762c:	nop
    7630:	ldr	x1, [x19, #40]
    7634:	mov	w4, #0x1                   	// #1
    7638:	mov	w2, #0x0                   	// #0
    763c:	mov	w3, w4
    7640:	mov	x0, x19
    7644:	mov	w5, #0x2                   	// #2
    7648:	umaddl	x1, w20, w21, x1
    764c:	add	w20, w20, w4
    7650:	bl	61d0 <grub_show_menu+0x1518>
    7654:	ldr	w2, [x19, #48]
    7658:	cmp	w20, w2
    765c:	b.cc	7630 <grub_menu_entry_run+0x278>  // b.lo, b.ul, b.last
    7660:	cbz	w2, 76bc <grub_menu_entry_run+0x304>
    7664:	ldr	x4, [x19, #40]
    7668:	mov	w20, #0x0                   	// #0
    766c:	mov	w21, #0x38                  	// #56
    7670:	umull	x0, w20, w21
    7674:	mov	w1, #0x1                   	// #1
    7678:	ldr	x0, [x4, x0]
    767c:	ldr	x3, [x0, #96]
    7680:	cbz	x3, 76b0 <grub_menu_entry_run+0x2f8>
    7684:	blr	x3
    7688:	add	w20, w20, #0x1
    768c:	ldr	w2, [x19, #48]
    7690:	cmp	w20, w2
    7694:	b.cs	76bc <grub_menu_entry_run+0x304>  // b.hs, b.nlast
    7698:	umull	x0, w20, w21
    769c:	mov	w1, #0x1                   	// #1
    76a0:	ldr	x4, [x19, #40]
    76a4:	ldr	x0, [x4, x0]
    76a8:	ldr	x3, [x0, #96]
    76ac:	cbnz	x3, 7684 <grub_menu_entry_run+0x2cc>
    76b0:	add	w20, w20, #0x1
    76b4:	cmp	w20, w2
    76b8:	b.cc	7670 <grub_menu_entry_run+0x2b8>  // b.lo, b.ul, b.last
    76bc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    76c0:	str	wzr, [sp, #120]
    76c4:	ldr	x0, [x0]
    76c8:	str	x0, [sp, #104]
    76cc:	bl	0 <grub_getkey>
    76d0:	mov	w20, w0
    76d4:	ldr	w1, [x19, #32]
    76d8:	cbnz	w1, 776c <grub_menu_entry_run+0x3b4>
    76dc:	nop
    76e0:	ldr	x0, [sp, #104]
    76e4:	ldr	w26, [x0]
    76e8:	cbnz	w26, 7bb8 <grub_menu_entry_run+0x800>
    76ec:	mov	w0, #0x63                  	// #99
    76f0:	movk	w0, #0x200, lsl #16
    76f4:	cmp	w20, w0
    76f8:	b.eq	82a0 <grub_menu_entry_run+0xee8>  // b.none
    76fc:	b.gt	7b00 <grub_menu_entry_run+0x748>
    7700:	mov	w0, #0x47                  	// #71
    7704:	movk	w0, #0x80, lsl #16
    7708:	cmp	w20, w0
    770c:	b.eq	8250 <grub_menu_entry_run+0xe98>  // b.none
    7710:	b.le	7988 <grub_menu_entry_run+0x5d0>
    7714:	mov	w0, #0x50                  	// #80
    7718:	movk	w0, #0x80, lsl #16
    771c:	cmp	w20, w0
    7720:	b.eq	7c44 <grub_menu_entry_run+0x88c>  // b.none
    7724:	b.le	78d0 <grub_menu_entry_run+0x518>
    7728:	mov	w0, #0x61                  	// #97
    772c:	movk	w0, #0x200, lsl #16
    7730:	cmp	w20, w0
    7734:	b.eq	8250 <grub_menu_entry_run+0xe98>  // b.none
    7738:	add	w0, w0, #0x1
    773c:	cmp	w20, w0
    7740:	b.ne	7858 <grub_menu_entry_run+0x4a0>  // b.any
    7744:	mov	x0, x19
    7748:	mov	w1, #0x1                   	// #1
    774c:	bl	6920 <grub_show_menu+0x1c68>
    7750:	cbz	w0, 7874 <grub_menu_entry_run+0x4bc>
    7754:	nop
    7758:	str	w20, [sp, #120]
    775c:	bl	0 <grub_getkey>
    7760:	mov	w20, w0
    7764:	ldr	w1, [x19, #32]
    7768:	cbz	w1, 76e0 <grub_menu_entry_run+0x328>
    776c:	ldr	w0, [x19, #48]
    7770:	mov	w24, #0x0                   	// #0
    7774:	cbz	w0, 7850 <grub_menu_entry_run+0x498>
    7778:	mov	w0, #0x38                  	// #56
    777c:	and	w25, w25, #0xffff0000
    7780:	ldr	x23, [x19, #40]
    7784:	umull	x22, w24, w0
    7788:	mov	w21, #0x0                   	// #0
    778c:	add	x28, x23, x22
    7790:	ldr	x0, [x23, x22]
    7794:	ldr	x1, [x0, #64]
    7798:	blr	x1
    779c:	mov	w26, w0
    77a0:	ldr	x1, [x23, x22]
    77a4:	ldrh	w4, [x28, #28]
    77a8:	mov	x0, x1
    77ac:	ldr	x3, [x1, #72]
    77b0:	bfi	w25, w4, #16, #16
    77b4:	mov	w1, w25
    77b8:	blr	x3
    77bc:	ldr	w0, [x28, #32]
    77c0:	cmp	w0, #0x0
    77c4:	b.le	7f28 <grub_menu_entry_run+0xb70>
    77c8:	mov	w27, #0x0                   	// #0
    77cc:	b	77f0 <grub_menu_entry_run+0x438>
    77d0:	sub	w0, w0, #0x1
    77d4:	cmp	w27, w0
    77d8:	ldr	x3, [x28]
    77dc:	b.cs	7810 <grub_menu_entry_run+0x458>  // b.hs, b.nlast
    77e0:	add	w27, w27, #0x1
    77e4:	mov	x1, x3
    77e8:	mov	w0, #0x20                  	// #32
    77ec:	bl	bf40 <grub_putcode>
    77f0:	ldr	x0, [x28]
    77f4:	ldr	x1, [x0, #56]
    77f8:	blr	x1
    77fc:	ands	w0, w0, #0xffff
    7800:	b.ne	77d0 <grub_menu_entry_run+0x418>  // b.any
    7804:	cmp	w27, #0x4e
    7808:	ldr	x3, [x28]
    780c:	b.ls	77e0 <grub_menu_entry_run+0x428>  // b.plast
    7810:	ldr	w0, [x28, #32]
    7814:	add	w21, w21, #0x1
    7818:	cmp	w21, w0
    781c:	b.lt	7f10 <grub_menu_entry_run+0xb58>  // b.tstop
    7820:	ldr	x2, [x3, #72]
    7824:	mov	w1, w26
    7828:	mov	x0, x3
    782c:	blr	x2
    7830:	ldr	x0, [x23, x22]
    7834:	ldr	x1, [x0, #104]
    7838:	cbz	x1, 7f48 <grub_menu_entry_run+0xb90>
    783c:	blr	x1
    7840:	add	w24, w24, #0x1
    7844:	ldr	w0, [x19, #48]
    7848:	cmp	w0, w24
    784c:	b.hi	7778 <grub_menu_entry_run+0x3c0>  // b.pmore
    7850:	str	wzr, [x19, #32]
    7854:	b	76e0 <grub_menu_entry_run+0x328>
    7858:	mov	w0, #0x53                  	// #83
    785c:	movk	w0, #0x80, lsl #16
    7860:	cmp	w20, w0
    7864:	b.ne	7758 <grub_menu_entry_run+0x3a0>  // b.any
    7868:	mov	x0, x19
    786c:	bl	6a88 <grub_show_menu+0x1dd0>
    7870:	cbnz	w0, 7758 <grub_menu_entry_run+0x3a0>
    7874:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    7878:	ldr	x21, [x0]
    787c:	mov	x0, x19
    7880:	bl	6010 <grub_show_menu+0x1358>
    7884:	bl	ce30 <grub_cls>
    7888:	bl	0 <grub_print_error>
    788c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    7890:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    7894:	mov	x0, x21
    7898:	ldr	x1, [x1]
    789c:	ldr	x2, [x2]
    78a0:	ldr	x1, [x1]
    78a4:	str	wzr, [x2]
    78a8:	blr	x1
    78ac:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    78b0:	ldr	x0, [x0]
    78b4:	bl	0 <grub_printf_>
    78b8:	bl	0 <grub_getkey>
    78bc:	ldp	x19, x20, [sp, #16]
    78c0:	ldp	x23, x24, [sp, #48]
    78c4:	ldp	x25, x26, [sp, #64]
    78c8:	ldp	x27, x28, [sp, #80]
    78cc:	b	755c <grub_menu_entry_run+0x1a4>
    78d0:	mov	w0, #0x4d                  	// #77
    78d4:	movk	w0, #0x80, lsl #16
    78d8:	cmp	w20, w0
    78dc:	b.eq	7e74 <grub_menu_entry_run+0xabc>  // b.none
    78e0:	b.le	7bdc <grub_menu_entry_run+0x824>
    78e4:	mov	w0, #0x4f                  	// #79
    78e8:	movk	w0, #0x80, lsl #16
    78ec:	cmp	w20, w0
    78f0:	b.ne	7758 <grub_menu_entry_run+0x3a0>  // b.any
    78f4:	ldr	w0, [x19, #20]
    78f8:	mov	w21, #0x18                  	// #24
    78fc:	ldr	x1, [x19]
    7900:	smull	x0, w0, w21
    7904:	add	x2, x1, x0
    7908:	ldr	x0, [x1, x0]
    790c:	ldrsw	x1, [x2, #8]
    7910:	add	x1, x0, x1, lsl #2
    7914:	mov	x0, x1
    7918:	bl	fae0 <grub_unicode_get_comb_end>
    791c:	ldr	w1, [x19, #20]
    7920:	ldr	x3, [x19]
    7924:	ldr	w2, [x19, #48]
    7928:	smull	x1, w1, w21
    792c:	ldr	w23, [x19, #8]
    7930:	ldr	x1, [x3, x1]
    7934:	sub	x0, x0, x1
    7938:	asr	x0, x0, #2
    793c:	str	w0, [x19, #12]
    7940:	cbz	w2, 7758 <grub_menu_entry_run+0x3a0>
    7944:	mov	w21, #0x0                   	// #0
    7948:	mov	w22, #0x38                  	// #56
    794c:	nop
    7950:	ldr	x1, [x19, #40]
    7954:	mov	x0, x19
    7958:	mov	w2, w23
    795c:	mov	w5, #0x0                   	// #0
    7960:	mov	w4, #0x0                   	// #0
    7964:	mov	w3, #0x0                   	// #0
    7968:	umaddl	x1, w21, w22, x1
    796c:	add	w21, w21, #0x1
    7970:	bl	61d0 <grub_show_menu+0x1518>
    7974:	ldr	w0, [x19, #48]
    7978:	cmp	w21, w0
    797c:	b.cc	7950 <grub_menu_entry_run+0x598>  // b.lo, b.ul, b.last
    7980:	str	w20, [sp, #120]
    7984:	b	775c <grub_menu_entry_run+0x3a4>
    7988:	cmp	w20, #0xd
    798c:	b.eq	7c10 <grub_menu_entry_run+0x858>  // b.none
    7990:	b.le	7c00 <grub_menu_entry_run+0x848>
    7994:	mov	w0, #0x3c                  	// #60
    7998:	movk	w0, #0x80, lsl #16
    799c:	cmp	w20, w0
    79a0:	b.eq	82a0 <grub_menu_entry_run+0xee8>  // b.none
    79a4:	add	w0, w0, #0x8
    79a8:	cmp	w20, w0
    79ac:	b.ne	7bb0 <grub_menu_entry_run+0x7f8>  // b.any
    79b0:	str	xzr, [sp, #168]
    79b4:	bl	ce30 <grub_cls>
    79b8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    79bc:	mov	x22, #0x0                   	// #0
    79c0:	ldr	x0, [x0]
    79c4:	bl	0 <grub_printf>
    79c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    79cc:	ldr	x0, [x0]
    79d0:	bl	0 <grub_printf_>
    79d4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    79d8:	ldr	x0, [x0]
    79dc:	bl	0 <grub_printf>
    79e0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    79e4:	ldr	w0, [x19, #36]
    79e8:	ldr	x28, [x1]
    79ec:	ldr	w1, [x28]
    79f0:	str	w1, [sp, #104]
    79f4:	cbnz	w0, 83a4 <grub_menu_entry_run+0xfec>
    79f8:	ldr	w0, [x19, #8]
    79fc:	cmp	w0, #0x0
    7a00:	b.le	86c0 <grub_menu_entry_run+0x1308>
    7a04:	mov	w27, #0x0                   	// #0
    7a08:	mov	x21, #0x0                   	// #0
    7a0c:	mov	x20, #0x0                   	// #0
    7a10:	ldr	x0, [x19]
    7a14:	add	w27, w27, #0x1
    7a18:	add	x1, x0, x21
    7a1c:	ldr	x0, [x0, x21]
    7a20:	add	x21, x21, #0x18
    7a24:	ldrsw	x1, [x1, #8]
    7a28:	bl	d690 <grub_get_num_of_utf8_bytes>
    7a2c:	add	x0, x0, #0x1
    7a30:	ldr	w1, [x19, #8]
    7a34:	add	x20, x20, x0
    7a38:	cmp	w27, w1
    7a3c:	b.lt	7a10 <grub_menu_entry_run+0x658>  // b.tstop
    7a40:	add	x0, x20, #0x1
    7a44:	bl	0 <grub_malloc>
    7a48:	mov	x24, x0
    7a4c:	cbz	x0, 7af8 <grub_menu_entry_run+0x740>
    7a50:	ldr	w0, [x19, #8]
    7a54:	cmp	w0, #0x0
    7a58:	b.le	874c <grub_menu_entry_run+0x1394>
    7a5c:	mov	x23, #0x0                   	// #0
    7a60:	mov	x27, #0x0                   	// #0
    7a64:	mov	w21, #0xa                   	// #10
    7a68:	ldr	x1, [x19]
    7a6c:	sub	x3, x20, x27
    7a70:	add	x2, x24, x27
    7a74:	add	w26, w26, #0x1
    7a78:	add	x6, x1, x23
    7a7c:	ldr	x0, [x1, x23]
    7a80:	add	x23, x23, #0x18
    7a84:	ldrsw	x1, [x6, #8]
    7a88:	bl	d548 <grub_ucs4_to_utf8>
    7a8c:	add	x0, x0, x27
    7a90:	add	x27, x0, #0x1
    7a94:	strb	w21, [x24, x0]
    7a98:	ldr	w0, [x19, #8]
    7a9c:	cmp	w26, w0
    7aa0:	b.lt	7a68 <grub_menu_entry_run+0x6b0>  // b.tstop
    7aa4:	add	x27, x24, x27
    7aa8:	add	x2, sp, #0xa8
    7aac:	strb	wzr, [x27]
    7ab0:	mov	w1, #0x0                   	// #0
    7ab4:	mov	x0, x24
    7ab8:	bl	128c0 <grub_script_execute_new_scope>
    7abc:	mov	x0, x24
    7ac0:	bl	0 <grub_free>
    7ac4:	ldr	w0, [x28]
    7ac8:	ldr	w1, [sp, #104]
    7acc:	cmp	w1, w0
    7ad0:	b.ne	8354 <grub_menu_entry_run+0xf9c>  // b.any
    7ad4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    7ad8:	ldr	x20, [x0]
    7adc:	ldr	w0, [x20]
    7ae0:	cbz	w0, 83c8 <grub_menu_entry_run+0x1010>
    7ae4:	ldr	w0, [x19, #36]
    7ae8:	cbnz	w0, 83e8 <grub_menu_entry_run+0x1030>
    7aec:	bl	0 <grub_print_error>
    7af0:	str	wzr, [x20]
    7af4:	bl	4ae8 <grub_wait_after_message>
    7af8:	ldr	x0, [x19, #40]
    7afc:	b	74a8 <grub_menu_entry_run+0xf0>
    7b00:	mov	w0, #0x6c                  	// #108
    7b04:	movk	w0, #0x200, lsl #16
    7b08:	cmp	w20, w0
    7b0c:	b.eq	7af8 <grub_menu_entry_run+0x740>  // b.none
    7b10:	b.le	7d8c <grub_menu_entry_run+0x9d4>
    7b14:	mov	w0, #0x75                  	// #117
    7b18:	movk	w0, #0x200, lsl #16
    7b1c:	cmp	w20, w0
    7b20:	b.gt	7d50 <grub_menu_entry_run+0x998>
    7b24:	mov	w0, #0x71                  	// #113
    7b28:	movk	w0, #0x200, lsl #16
    7b2c:	cmp	w20, w0
    7b30:	b.gt	7758 <grub_menu_entry_run+0x3a0>
    7b34:	mov	w0, #0x6f                  	// #111
    7b38:	movk	w0, #0x200, lsl #16
    7b3c:	cmp	w20, w0
    7b40:	b.eq	81d4 <grub_menu_entry_run+0xe1c>  // b.none
    7b44:	add	w0, w0, #0x1
    7b48:	cmp	w20, w0
    7b4c:	b.ne	7c34 <grub_menu_entry_run+0x87c>  // b.any
    7b50:	ldr	w0, [x19, #20]
    7b54:	cmp	w0, #0x0
    7b58:	b.gt	82f8 <grub_menu_entry_run+0xf40>
    7b5c:	str	wzr, [x19, #12]
    7b60:	ldr	w0, [x19, #48]
    7b64:	ldr	w23, [x19, #8]
    7b68:	cbz	w0, 7758 <grub_menu_entry_run+0x3a0>
    7b6c:	mov	w21, #0x0                   	// #0
    7b70:	mov	w22, #0x38                  	// #56
    7b74:	nop
    7b78:	ldr	x1, [x19, #40]
    7b7c:	mov	x0, x19
    7b80:	mov	w2, w23
    7b84:	mov	w5, #0x0                   	// #0
    7b88:	mov	w4, #0x0                   	// #0
    7b8c:	mov	w3, #0x0                   	// #0
    7b90:	umaddl	x1, w21, w22, x1
    7b94:	add	w21, w21, #0x1
    7b98:	bl	61d0 <grub_show_menu+0x1518>
    7b9c:	ldr	w0, [x19, #48]
    7ba0:	cmp	w21, w0
    7ba4:	b.cc	7b78 <grub_menu_entry_run+0x7c0>  // b.lo, b.ul, b.last
    7ba8:	str	w20, [sp, #120]
    7bac:	b	775c <grub_menu_entry_run+0x3a4>
    7bb0:	cmp	w20, #0x1b
    7bb4:	b.ne	8690 <grub_menu_entry_run+0x12d8>  // b.any
    7bb8:	mov	x0, x19
    7bbc:	bl	6010 <grub_show_menu+0x1358>
    7bc0:	ldp	x19, x20, [sp, #16]
    7bc4:	ldp	x21, x22, [sp, #32]
    7bc8:	ldp	x23, x24, [sp, #48]
    7bcc:	ldp	x25, x26, [sp, #64]
    7bd0:	ldp	x27, x28, [sp, #80]
    7bd4:	ldp	x29, x30, [sp], #176
    7bd8:	ret
    7bdc:	mov	w0, #0x48                  	// #72
    7be0:	movk	w0, #0x80, lsl #16
    7be4:	cmp	w20, w0
    7be8:	b.eq	7b50 <grub_menu_entry_run+0x798>  // b.none
    7bec:	add	w0, w0, #0x3
    7bf0:	cmp	w20, w0
    7bf4:	b.eq	7744 <grub_menu_entry_run+0x38c>  // b.none
    7bf8:	str	w20, [sp, #120]
    7bfc:	b	775c <grub_menu_entry_run+0x3a4>
    7c00:	cmp	w20, #0x9
    7c04:	b.eq	7f94 <grub_menu_entry_run+0xbdc>  // b.none
    7c08:	cmp	w20, #0xa
    7c0c:	b.ne	7d10 <grub_menu_entry_run+0x958>  // b.any
    7c10:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    7c14:	mov	x0, x19
    7c18:	mov	w2, #0x1                   	// #1
    7c1c:	ldr	x21, [x1]
    7c20:	mov	x1, x21
    7c24:	bl	6de0 <grub_show_menu+0x2128>
    7c28:	cbz	w0, 787c <grub_menu_entry_run+0x4c4>
    7c2c:	str	w20, [sp, #120]
    7c30:	b	775c <grub_menu_entry_run+0x3a4>
    7c34:	mov	w0, #0x6e                  	// #110
    7c38:	movk	w0, #0x200, lsl #16
    7c3c:	cmp	w20, w0
    7c40:	b.ne	7758 <grub_menu_entry_run+0x3a0>  // b.any
    7c44:	ldr	w0, [x19, #20]
    7c48:	mov	w21, #0x18                  	// #24
    7c4c:	ldr	w2, [x19, #8]
    7c50:	ldr	x3, [x19]
    7c54:	sub	w2, w2, #0x1
    7c58:	smull	x1, w0, w21
    7c5c:	cmp	w0, w2
    7c60:	add	x2, x3, x1
    7c64:	b.ge	82c0 <grub_menu_entry_run+0xf08>  // b.tcont
    7c68:	add	x1, x1, #0x18
    7c6c:	ldr	w2, [x2, #32]
    7c70:	add	x5, x3, x1
    7c74:	ldr	w4, [x19, #16]
    7c78:	add	w0, w0, #0x1
    7c7c:	cmp	w2, w4
    7c80:	ldr	x1, [x3, x1]
    7c84:	str	w0, [x19, #20]
    7c88:	ldr	w0, [x5, #8]
    7c8c:	csel	w2, w2, w4, le
    7c90:	str	wzr, [x19, #12]
    7c94:	cmp	w2, w0
    7c98:	csel	w2, w2, w0, le
    7c9c:	add	x0, x1, w0, sxtw #2
    7ca0:	add	x1, x1, w2, sxtw #2
    7ca4:	bl	fae0 <grub_unicode_get_comb_end>
    7ca8:	ldr	w23, [x19, #8]
    7cac:	ldr	w1, [x19, #20]
    7cb0:	ldr	x2, [x19]
    7cb4:	smull	x21, w1, w21
    7cb8:	ldr	x1, [x2, x21]
    7cbc:	sub	x0, x0, x1
    7cc0:	asr	x0, x0, #2
    7cc4:	str	w0, [x19, #12]
    7cc8:	ldr	w0, [x19, #48]
    7ccc:	cbz	w0, 7758 <grub_menu_entry_run+0x3a0>
    7cd0:	mov	w21, #0x0                   	// #0
    7cd4:	mov	w22, #0x38                  	// #56
    7cd8:	ldr	x1, [x19, #40]
    7cdc:	mov	x0, x19
    7ce0:	mov	w2, w23
    7ce4:	mov	w5, #0x0                   	// #0
    7ce8:	mov	w4, #0x0                   	// #0
    7cec:	mov	w3, #0x0                   	// #0
    7cf0:	umaddl	x1, w21, w22, x1
    7cf4:	add	w21, w21, #0x1
    7cf8:	bl	61d0 <grub_show_menu+0x1518>
    7cfc:	ldr	w0, [x19, #48]
    7d00:	cmp	w21, w0
    7d04:	b.cc	7cd8 <grub_menu_entry_run+0x920>  // b.lo, b.ul, b.last
    7d08:	str	w20, [sp, #120]
    7d0c:	b	775c <grub_menu_entry_run+0x3a4>
    7d10:	cmp	w20, #0x8
    7d14:	b.ne	7758 <grub_menu_entry_run+0x3a0>  // b.any
    7d18:	ldr	w21, [x19, #12]
    7d1c:	mov	x0, x19
    7d20:	ldr	w22, [x19, #20]
    7d24:	mov	w1, #0x0                   	// #0
    7d28:	bl	6920 <grub_show_menu+0x1c68>
    7d2c:	cbz	w0, 7874 <grub_menu_entry_run+0x4bc>
    7d30:	ldr	w0, [x19, #12]
    7d34:	cmp	w21, w0
    7d38:	b.ne	7868 <grub_menu_entry_run+0x4b0>  // b.any
    7d3c:	ldr	w0, [x19, #20]
    7d40:	cmp	w22, w0
    7d44:	b.ne	7868 <grub_menu_entry_run+0x4b0>  // b.any
    7d48:	str	w20, [sp, #120]
    7d4c:	b	775c <grub_menu_entry_run+0x3a4>
    7d50:	mov	w0, #0x78                  	// #120
    7d54:	movk	w0, #0x200, lsl #16
    7d58:	cmp	w20, w0
    7d5c:	b.eq	79b0 <grub_menu_entry_run+0x5f8>  // b.none
    7d60:	add	w0, w0, #0x1
    7d64:	cmp	w20, w0
    7d68:	b.ne	7758 <grub_menu_entry_run+0x3a0>  // b.any
    7d6c:	ldr	x1, [x19, #24]
    7d70:	cbz	x1, 7758 <grub_menu_entry_run+0x3a0>
    7d74:	mov	x0, x19
    7d78:	mov	w2, #0x1                   	// #1
    7d7c:	bl	6de0 <grub_show_menu+0x2128>
    7d80:	cbz	w0, 7874 <grub_menu_entry_run+0x4bc>
    7d84:	str	w20, [sp, #120]
    7d88:	b	775c <grub_menu_entry_run+0x3a4>
    7d8c:	mov	w0, #0x68                  	// #104
    7d90:	movk	w0, #0x200, lsl #16
    7d94:	cmp	w20, w0
    7d98:	b.eq	7d18 <grub_menu_entry_run+0x960>  // b.none
    7d9c:	b.le	7e58 <grub_menu_entry_run+0xaa0>
    7da0:	mov	w0, #0x69                  	// #105
    7da4:	movk	w0, #0x200, lsl #16
    7da8:	cmp	w20, w0
    7dac:	b.eq	7f94 <grub_menu_entry_run+0xbdc>  // b.none
    7db0:	add	w0, w0, #0x2
    7db4:	cmp	w20, w0
    7db8:	b.ne	7758 <grub_menu_entry_run+0x3a0>  // b.any
    7dbc:	ldr	x24, [x19, #24]
    7dc0:	ldr	w0, [sp, #120]
    7dc4:	cmp	x24, #0x0
    7dc8:	ccmp	w0, w20, #0x4, ne  // ne = any
    7dcc:	b.eq	82d4 <grub_menu_entry_run+0xf1c>  // b.none
    7dd0:	strb	wzr, [x24]
    7dd4:	mov	w2, #0x18                  	// #24
    7dd8:	ldr	w23, [x19, #20]
    7ddc:	ldr	x1, [x19]
    7de0:	ldr	w0, [x19, #12]
    7de4:	smaddl	x23, w23, w2, x1
    7de8:	ldr	w22, [x23, #8]
    7dec:	sub	w22, w22, w0
    7df0:	mov	x0, x24
    7df4:	bl	0 <grub_strlen>
    7df8:	mov	w26, w0
    7dfc:	cmp	w22, #0x0
    7e00:	b.gt	84c0 <grub_menu_entry_run+0x1108>
    7e04:	ldr	w0, [x19, #20]
    7e08:	ldr	w1, [x19, #8]
    7e0c:	add	w0, w0, #0x1
    7e10:	cmp	w0, w1
    7e14:	b.ge	7758 <grub_menu_entry_run+0x3a0>  // b.tcont
    7e18:	add	w1, w26, #0x2
    7e1c:	mov	x0, x24
    7e20:	sxtw	x1, w1
    7e24:	bl	0 <grub_realloc>
    7e28:	mov	x1, x0
    7e2c:	cbz	x0, 7874 <grub_menu_entry_run+0x4bc>
    7e30:	add	x2, x0, w26, sxtw
    7e34:	mov	w0, #0xa                   	// #10
    7e38:	strb	w0, [x1, w26, sxtw]
    7e3c:	mov	x0, x19
    7e40:	strb	wzr, [x2, #1]
    7e44:	str	x1, [x19, #24]
    7e48:	bl	6a88 <grub_show_menu+0x1dd0>
    7e4c:	cbz	w0, 7874 <grub_menu_entry_run+0x4bc>
    7e50:	str	w20, [sp, #120]
    7e54:	b	775c <grub_menu_entry_run+0x3a4>
    7e58:	mov	w0, #0x65                  	// #101
    7e5c:	movk	w0, #0x200, lsl #16
    7e60:	cmp	w20, w0
    7e64:	b.eq	78f4 <grub_menu_entry_run+0x53c>  // b.none
    7e68:	add	w0, w0, #0x1
    7e6c:	cmp	w20, w0
    7e70:	b.ne	7ef8 <grub_menu_entry_run+0xb40>  // b.any
    7e74:	ldr	w2, [x19, #20]
    7e78:	mov	w21, #0x18                  	// #24
    7e7c:	ldr	x4, [x19]
    7e80:	ldr	w1, [x19, #12]
    7e84:	smull	x3, w2, w21
    7e88:	add	x0, x4, x3
    7e8c:	ldr	w0, [x0, #8]
    7e90:	cmp	w1, w0
    7e94:	b.lt	836c <grub_menu_entry_run+0xfb4>  // b.tstop
    7e98:	ldr	w23, [x19, #8]
    7e9c:	add	w2, w2, #0x1
    7ea0:	cmp	w23, w2
    7ea4:	b.gt	835c <grub_menu_entry_run+0xfa4>
    7ea8:	ldr	w0, [x19, #48]
    7eac:	str	w1, [x19, #16]
    7eb0:	cbz	w0, 7758 <grub_menu_entry_run+0x3a0>
    7eb4:	mov	w21, #0x0                   	// #0
    7eb8:	mov	w22, #0x38                  	// #56
    7ebc:	nop
    7ec0:	ldr	x1, [x19, #40]
    7ec4:	mov	x0, x19
    7ec8:	mov	w2, w23
    7ecc:	mov	w5, #0x0                   	// #0
    7ed0:	mov	w4, #0x0                   	// #0
    7ed4:	mov	w3, #0x0                   	// #0
    7ed8:	umaddl	x1, w21, w22, x1
    7edc:	add	w21, w21, #0x1
    7ee0:	bl	61d0 <grub_show_menu+0x1518>
    7ee4:	ldr	w0, [x19, #48]
    7ee8:	cmp	w21, w0
    7eec:	b.cc	7ec0 <grub_menu_entry_run+0xb08>  // b.lo, b.ul, b.last
    7ef0:	str	w20, [sp, #120]
    7ef4:	b	775c <grub_menu_entry_run+0x3a4>
    7ef8:	mov	w0, #0x64                  	// #100
    7efc:	movk	w0, #0x200, lsl #16
    7f00:	cmp	w20, w0
    7f04:	b.eq	7868 <grub_menu_entry_run+0x4b0>  // b.none
    7f08:	str	w20, [sp, #120]
    7f0c:	b	775c <grub_menu_entry_run+0x3a4>
    7f10:	mov	w0, #0xa                   	// #10
    7f14:	mov	x1, x3
    7f18:	bl	bf40 <grub_putcode>
    7f1c:	ldr	w0, [x28, #32]
    7f20:	cmp	w21, w0
    7f24:	b.lt	77c8 <grub_menu_entry_run+0x410>  // b.tstop
    7f28:	ldr	x3, [x23, x22]
    7f2c:	mov	w1, w26
    7f30:	mov	x0, x3
    7f34:	ldr	x2, [x3, #72]
    7f38:	blr	x2
    7f3c:	ldr	x0, [x23, x22]
    7f40:	ldr	x1, [x0, #104]
    7f44:	cbnz	x1, 783c <grub_menu_entry_run+0x484>
    7f48:	ldr	w0, [x19, #48]
    7f4c:	add	w24, w24, #0x1
    7f50:	cmp	w24, w0
    7f54:	b.cc	7778 <grub_menu_entry_run+0x3c0>  // b.lo, b.ul, b.last
    7f58:	str	wzr, [x19, #32]
    7f5c:	b	76e0 <grub_menu_entry_run+0x328>
    7f60:	bl	0 <grub_print_error>
    7f64:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    7f68:	ldp	x21, x22, [sp, #32]
    7f6c:	ldr	x0, [x0]
    7f70:	str	wzr, [x0]
    7f74:	ldp	x29, x30, [sp], #176
    7f78:	ret
    7f7c:	ldp	x19, x20, [sp, #16]
    7f80:	ldp	x21, x22, [sp, #32]
    7f84:	ldp	x29, x30, [sp], #176
    7f88:	ret
    7f8c:	mov	w0, #0x0                   	// #0
    7f90:	b	74d4 <grub_menu_entry_run+0x11c>
    7f94:	ldr	w0, [sp, #120]
    7f98:	cmp	w0, w20
    7f9c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    7fa0:	ldr	x22, [x0]
    7fa4:	b.eq	82b4 <grub_menu_entry_run+0xefc>  // b.none
    7fa8:	ldr	w0, [x19, #20]
    7fac:	mov	w4, #0x18                  	// #24
    7fb0:	ldr	x2, [x19]
    7fb4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    7fb8:	ldrsw	x1, [x19, #12]
    7fbc:	smull	x0, w0, w4
    7fc0:	str	w26, [x22]
    7fc4:	ldr	x23, [x3]
    7fc8:	ldr	x0, [x2, x0]
    7fcc:	stp	xzr, xzr, [x23, #8]
    7fd0:	str	xzr, [x23, #24]
    7fd4:	bl	d708 <grub_ucs4_to_utf8_alloc>
    7fd8:	cbz	x0, 7758 <grub_menu_entry_run+0x3a0>
    7fdc:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    7fe0:	add	x1, sp, #0xa8
    7fe4:	ldr	x2, [x2]
    7fe8:	bl	3cc0 <grub_normal_do_completion>
    7fec:	str	x0, [sp, #144]
    7ff0:	ldr	x1, [x23, #8]
    7ff4:	cbz	x1, 8198 <grub_menu_entry_run+0xde0>
    7ff8:	mov	x0, x1
    7ffc:	bl	0 <grub_strlen>
    8000:	mov	x21, x0
    8004:	add	x0, x0, #0x1
    8008:	lsl	x0, x0, #2
    800c:	bl	0 <grub_malloc>
    8010:	str	x0, [sp, #136]
    8014:	cbz	x0, 8754 <grub_menu_entry_run+0x139c>
    8018:	ldr	x2, [x23, #8]
    801c:	mov	x1, x21
    8020:	mov	x3, x21
    8024:	mov	x4, #0x0                   	// #0
    8028:	bl	d8d8 <grub_utf8_to_ucs4>
    802c:	ldr	x1, [sp, #136]
    8030:	str	wzr, [x1, x0, lsl #2]
    8034:	add	x2, x1, x0, lsl #2
    8038:	str	x2, [sp, #152]
    803c:	ldr	w0, [sp, #168]
    8040:	cbz	w0, 8198 <grub_menu_entry_run+0xde0>
    8044:	ldr	w0, [x19, #48]
    8048:	cbz	w0, 8198 <grub_menu_entry_run+0xde0>
    804c:	mov	w26, #0x0                   	// #0
    8050:	mov	w0, #0x38                  	// #56
    8054:	umull	x21, w26, w0
    8058:	ldr	x0, [x19, #40]
    805c:	ldr	x0, [x0, x21]
    8060:	ldr	x1, [x0, #56]
    8064:	blr	x1
    8068:	ands	w24, w0, #0xffff
    806c:	b.eq	841c <grub_menu_entry_run+0x1064>  // b.none
    8070:	cmp	w24, #0x2
    8074:	b.hi	877c <grub_menu_entry_run+0x13c4>  // b.pmore
    8078:	and	x2, x24, #0xffff
    807c:	ubfiz	x28, x24, #2, #16
    8080:	ldr	x0, [x19, #40]
    8084:	ldr	w1, [sp, #124]
    8088:	and	w1, w1, #0xffff0000
    808c:	str	w1, [sp, #124]
    8090:	ldr	x0, [x0, x21]
    8094:	ldr	x1, [x23, #16]
    8098:	ldr	x3, [x0, #64]
    809c:	sub	x1, x1, #0x1
    80a0:	add	x1, x1, x2
    80a4:	udiv	x27, x1, x2
    80a8:	blr	x3
    80ac:	ldr	x1, [x19, #40]
    80b0:	mov	w2, #0x1                   	// #1
    80b4:	str	w2, [x19, #32]
    80b8:	and	w2, w0, #0xffff
    80bc:	lsr	w0, w0, #16
    80c0:	str	w2, [sp, #120]
    80c4:	add	x2, x1, x21
    80c8:	str	w0, [sp, #128]
    80cc:	ldr	x0, [x1, x21]
    80d0:	ldr	w3, [sp, #124]
    80d4:	ldrh	w1, [x2, #28]
    80d8:	ldr	x2, [x0, #72]
    80dc:	bfi	w3, w1, #16, #16
    80e0:	str	w3, [sp, #124]
    80e4:	mov	w1, w3
    80e8:	blr	x2
    80ec:	ldr	x1, [x19, #40]
    80f0:	add	x0, x1, x21
    80f4:	ldr	w2, [x0, #32]
    80f8:	cmp	w2, #0x1
    80fc:	b.gt	842c <grub_menu_entry_run+0x1074>
    8100:	ldr	w2, [x22]
    8104:	ldr	x1, [x0]
    8108:	udiv	w0, w2, w27
    810c:	msub	w0, w0, w27, w2
    8110:	mul	w24, w0, w24
    8114:	ldr	x0, [sp, #136]
    8118:	add	x24, x0, x24, lsl #2
    811c:	add	x27, x24, x28
    8120:	cmp	x0, x24
    8124:	b.eq	8684 <grub_menu_entry_run+0x12cc>  // b.none
    8128:	mov	w0, #0x2190                	// #8592
    812c:	bl	bf40 <grub_putcode>
    8130:	ldr	x4, [x19, #40]
    8134:	mov	x0, x24
    8138:	ldr	x1, [sp, #152]
    813c:	mov	w3, #0x0                   	// #0
    8140:	ldr	x4, [x4, x21]
    8144:	cmp	x1, x27
    8148:	mov	x24, x1
    814c:	mov	w2, #0x0                   	// #0
    8150:	csel	x1, x1, x27, ls  // ls = plast
    8154:	bl	c430 <grub_print_ucs4>
    8158:	cmp	x24, x27
    815c:	b.hi	8630 <grub_menu_entry_run+0x1278>  // b.pmore
    8160:	ldr	x0, [x19, #40]
    8164:	add	w26, w26, #0x1
    8168:	ldr	w2, [sp, #120]
    816c:	ldr	w1, [sp, #132]
    8170:	ldr	x0, [x0, x21]
    8174:	bfxil	w1, w2, #0, #16
    8178:	ldr	w2, [sp, #128]
    817c:	bfi	w1, w2, #16, #16
    8180:	str	w1, [sp, #132]
    8184:	ldr	x2, [x0, #72]
    8188:	blr	x2
    818c:	ldr	w0, [x19, #48]
    8190:	cmp	w26, w0
    8194:	b.cc	8050 <grub_menu_entry_run+0xc98>  // b.lo, b.ul, b.last
    8198:	ldr	x0, [sp, #144]
    819c:	cbz	x0, 83c0 <grub_menu_entry_run+0x1008>
    81a0:	mov	x1, x0
    81a4:	mov	x21, x0
    81a8:	mov	w2, #0x1                   	// #1
    81ac:	mov	x0, x19
    81b0:	bl	6de0 <grub_show_menu+0x2128>
    81b4:	mov	w1, #0xffffffff            	// #-1
    81b8:	mov	x0, x21
    81bc:	str	w1, [x22]
    81c0:	bl	0 <grub_free>
    81c4:	ldr	x0, [x23, #8]
    81c8:	bl	0 <grub_free>
    81cc:	str	w20, [sp, #120]
    81d0:	b	775c <grub_menu_entry_run+0x3a4>
    81d4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    81d8:	mov	x0, x19
    81dc:	mov	w2, #0x0                   	// #0
    81e0:	ldr	x21, [x1]
    81e4:	mov	x1, x21
    81e8:	bl	6de0 <grub_show_menu+0x2128>
    81ec:	cbz	w0, 787c <grub_menu_entry_run+0x4c4>
    81f0:	mov	x0, x19
    81f4:	mov	w1, #0x0                   	// #0
    81f8:	bl	6920 <grub_show_menu+0x1c68>
    81fc:	cbz	w0, 787c <grub_menu_entry_run+0x4c4>
    8200:	ldr	w0, [x19, #48]
    8204:	mov	w21, #0x0                   	// #0
    8208:	ldr	w23, [x19, #20]
    820c:	mov	w22, #0x38                  	// #56
    8210:	cbz	w0, 7758 <grub_menu_entry_run+0x3a0>
    8214:	nop
    8218:	ldr	x1, [x19, #40]
    821c:	mov	x0, x19
    8220:	mov	w4, #0x1                   	// #1
    8224:	mov	w2, w23
    8228:	mov	w5, #0x2                   	// #2
    822c:	mov	w3, #0x0                   	// #0
    8230:	umaddl	x1, w21, w22, x1
    8234:	add	w21, w21, w4
    8238:	bl	61d0 <grub_show_menu+0x1518>
    823c:	ldr	w0, [x19, #48]
    8240:	cmp	w21, w0
    8244:	b.cc	8218 <grub_menu_entry_run+0xe60>  // b.lo, b.ul, b.last
    8248:	str	w20, [sp, #120]
    824c:	b	775c <grub_menu_entry_run+0x3a4>
    8250:	ldr	w0, [x19, #48]
    8254:	stur	xzr, [x19, #12]
    8258:	ldr	w23, [x19, #8]
    825c:	cbz	w0, 7758 <grub_menu_entry_run+0x3a0>
    8260:	mov	w21, #0x0                   	// #0
    8264:	mov	w22, #0x38                  	// #56
    8268:	ldr	x1, [x19, #40]
    826c:	mov	x0, x19
    8270:	mov	w2, w23
    8274:	mov	w5, #0x0                   	// #0
    8278:	mov	w4, #0x0                   	// #0
    827c:	mov	w3, #0x0                   	// #0
    8280:	umaddl	x1, w21, w22, x1
    8284:	add	w21, w21, #0x1
    8288:	bl	61d0 <grub_show_menu+0x1518>
    828c:	ldr	w0, [x19, #48]
    8290:	cmp	w21, w0
    8294:	b.cc	8268 <grub_menu_entry_run+0xeb0>  // b.lo, b.ul, b.last
    8298:	str	w20, [sp, #120]
    829c:	b	775c <grub_menu_entry_run+0x3a4>
    82a0:	mov	w0, #0x1                   	// #1
    82a4:	mov	w1, #0x0                   	// #0
    82a8:	bl	b30 <grub_cmdline_run>
    82ac:	ldr	x0, [x19, #40]
    82b0:	b	74a8 <grub_menu_entry_run+0xf0>
    82b4:	ldr	w26, [x22]
    82b8:	add	w26, w26, #0x1
    82bc:	b	7fa8 <grub_menu_entry_run+0xbf0>
    82c0:	ldr	x0, [x3, x1]
    82c4:	ldrsw	x1, [x2, #8]
    82c8:	add	x1, x0, x1, lsl #2
    82cc:	mov	x0, x1
    82d0:	b	7ca4 <grub_menu_entry_run+0x8ec>
    82d4:	ldr	w23, [x19, #20]
    82d8:	mov	w2, #0x18                  	// #24
    82dc:	ldr	x1, [x19]
    82e0:	ldr	w0, [x19, #12]
    82e4:	smaddl	x23, w23, w2, x1
    82e8:	ldr	w22, [x23, #8]
    82ec:	sub	w22, w22, w0
    82f0:	cbz	x24, 7dfc <grub_menu_entry_run+0xa44>
    82f4:	b	7df0 <grub_menu_entry_run+0xa38>
    82f8:	sub	w0, w0, #0x1
    82fc:	mov	w21, #0x18                  	// #24
    8300:	ldr	x1, [x19]
    8304:	str	w0, [x19, #20]
    8308:	smull	x0, w0, w21
    830c:	ldr	w2, [x19, #16]
    8310:	add	x3, x1, x0
    8314:	ldr	x1, [x1, x0]
    8318:	ldr	w0, [x3, #8]
    831c:	str	wzr, [x19, #12]
    8320:	cmp	w0, w2
    8324:	csel	w2, w0, w2, le
    8328:	add	x0, x1, w0, sxtw #2
    832c:	add	x1, x1, w2, sxtw #2
    8330:	bl	fae0 <grub_unicode_get_comb_end>
    8334:	ldr	w1, [x19, #20]
    8338:	ldr	x2, [x19]
    833c:	smull	x1, w1, w21
    8340:	ldr	x1, [x2, x1]
    8344:	sub	x0, x0, x1
    8348:	asr	x0, x0, #2
    834c:	str	w0, [x19, #12]
    8350:	b	7b60 <grub_menu_entry_run+0x7a8>
    8354:	bl	4ae8 <grub_wait_after_message>
    8358:	b	7ad4 <grub_menu_entry_run+0x71c>
    835c:	mov	w1, #0x0                   	// #0
    8360:	str	wzr, [x19, #12]
    8364:	str	w2, [x19, #20]
    8368:	b	7ea8 <grub_menu_entry_run+0xaf0>
    836c:	ldr	x2, [x4, x3]
    8370:	add	x1, x2, w1, sxtw #2
    8374:	add	x0, x2, w0, sxtw #2
    8378:	add	x1, x1, #0x4
    837c:	bl	fae0 <grub_unicode_get_comb_end>
    8380:	ldr	w1, [x19, #20]
    8384:	ldr	x2, [x19]
    8388:	ldr	w23, [x19, #8]
    838c:	smull	x21, w1, w21
    8390:	ldr	x1, [x2, x21]
    8394:	sub	x1, x0, x1
    8398:	asr	x1, x1, #2
    839c:	str	w1, [x19, #12]
    83a0:	b	7ea8 <grub_menu_entry_run+0xaf0>
    83a4:	bl	d1c0 <grub_env_context_open>
    83a8:	mov	x0, #0x10                  	// #16
    83ac:	bl	0 <grub_zalloc>
    83b0:	mov	x22, x0
    83b4:	cbz	x0, 7af8 <grub_menu_entry_run+0x740>
    83b8:	bl	cf88 <grub_env_set_menu>
    83bc:	b	79f8 <grub_menu_entry_run+0x640>
    83c0:	bl	0 <grub_refresh>
    83c4:	b	81c4 <grub_menu_entry_run+0xe0c>
    83c8:	bl	0 <grub_loader_is_loaded>
    83cc:	cbnz	w0, 871c <grub_menu_entry_run+0x1364>
    83d0:	ldr	w0, [x19, #36]
    83d4:	cbnz	w0, 83e8 <grub_menu_entry_run+0x1030>
    83d8:	ldr	w0, [x20]
    83dc:	cbnz	w0, 7aec <grub_menu_entry_run+0x734>
    83e0:	ldr	x0, [x19, #40]
    83e4:	b	74a8 <grub_menu_entry_run+0xf0>
    83e8:	cbz	x22, 83f4 <grub_menu_entry_run+0x103c>
    83ec:	ldr	w0, [x22]
    83f0:	cbnz	w0, 83fc <grub_menu_entry_run+0x1044>
    83f4:	bl	cfa8 <grub_env_context_close>
    83f8:	b	83d8 <grub_menu_entry_run+0x1020>
    83fc:	mov	w2, #0x0                   	// #0
    8400:	mov	w1, #0x1                   	// #1
    8404:	mov	x0, x22
    8408:	bl	4cb8 <grub_show_menu>
    840c:	mov	x0, x22
    8410:	bl	498 <grub_normal_free_menu>
    8414:	bl	cfa8 <grub_env_context_close>
    8418:	b	83d8 <grub_menu_entry_run+0x1020>
    841c:	mov	x2, #0x48                  	// #72
    8420:	mov	x28, #0x120                 	// #288
    8424:	mov	w24, w2
    8428:	b	8080 <grub_menu_entry_run+0xcc8>
    842c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8430:	ldr	x1, [x1, x21]
    8434:	ldr	x0, [x0]
    8438:	bl	bae0 <grub_puts_terminal>
    843c:	ldr	w0, [x23]
    8440:	cmp	w0, #0x2
    8444:	b.eq	86e0 <grub_menu_entry_run+0x1328>  // b.none
    8448:	b.gt	849c <grub_menu_entry_run+0x10e4>
    844c:	cbz	w0, 8708 <grub_menu_entry_run+0x1350>
    8450:	cmp	w0, #0x1
    8454:	b.ne	86f4 <grub_menu_entry_run+0x133c>  // b.any
    8458:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    845c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8460:	ldr	x1, [x1]
    8464:	ldr	x0, [x0]
    8468:	ldr	x1, [x1]
    846c:	blr	x1
    8470:	ldr	x1, [x19, #40]
    8474:	ldr	x1, [x1, x21]
    8478:	bl	bae0 <grub_puts_terminal>
    847c:	ldr	x1, [x19, #40]
    8480:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8484:	ldr	x0, [x0]
    8488:	ldr	x1, [x1, x21]
    848c:	bl	bae0 <grub_puts_terminal>
    8490:	ldr	x0, [x19, #40]
    8494:	add	x0, x0, x21
    8498:	b	8100 <grub_menu_entry_run+0xd48>
    849c:	cmp	w0, #0x3
    84a0:	b.eq	86cc <grub_menu_entry_run+0x1314>  // b.none
    84a4:	cmp	w0, #0x4
    84a8:	b.ne	86f4 <grub_menu_entry_run+0x133c>  // b.any
    84ac:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    84b0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    84b4:	ldr	x1, [x1]
    84b8:	ldr	x0, [x0]
    84bc:	b	8468 <grub_menu_entry_run+0x10b0>
    84c0:	add	w21, w26, w22
    84c4:	mov	x0, x24
    84c8:	add	w1, w21, #0x1
    84cc:	sxtw	x1, w1
    84d0:	bl	0 <grub_realloc>
    84d4:	mov	x24, x0
    84d8:	cbz	x0, 7874 <grub_menu_entry_run+0x4bc>
    84dc:	ldrsw	x3, [x19, #12]
    84e0:	sxtw	x2, w22
    84e4:	ldr	x1, [x23]
    84e8:	add	x0, x0, w26, sxtw
    84ec:	add	x1, x1, x3, lsl #2
    84f0:	bl	0 <grub_memmove>
    84f4:	strb	wzr, [x24, w21, sxtw]
    84f8:	str	x24, [x19, #24]
    84fc:	ldr	w0, [x19, #48]
    8500:	cbz	w0, 876c <grub_menu_entry_run+0x13b4>
    8504:	mov	w24, #0x0                   	// #0
    8508:	mov	w21, #0x38                  	// #56
    850c:	mov	w22, #0x1                   	// #1
    8510:	umull	x2, w24, w21
    8514:	ldrsw	x1, [x23, #8]
    8518:	ldr	x3, [x19, #40]
    851c:	ldr	x0, [x23]
    8520:	add	x26, x3, x2
    8524:	ldr	x2, [x3, x2]
    8528:	add	x1, x0, x1, lsl #2
    852c:	bl	93b0 <grub_getstringwidth>
    8530:	cbz	x0, 85ec <grub_menu_entry_run+0x1234>
    8534:	ldr	w1, [x26, #24]
    8538:	sub	x0, x0, #0x1
    853c:	ldr	w2, [x19, #48]
    8540:	add	w24, w24, #0x1
    8544:	add	x0, x0, x1
    8548:	cmp	w2, w24
    854c:	udiv	x0, x0, x1
    8550:	str	w0, [x26, #44]
    8554:	b.hi	8510 <grub_menu_entry_run+0x1158>  // b.pmore
    8558:	ldr	w1, [x19, #12]
    855c:	mov	w24, #0x0                   	// #0
    8560:	str	w1, [x23, #8]
    8564:	mov	w22, #0x38                  	// #56
    8568:	cbz	w2, 7758 <grub_menu_entry_run+0x3a0>
    856c:	nop
    8570:	umull	x26, w24, w22
    8574:	ldr	x2, [x19, #40]
    8578:	ldr	x0, [x23]
    857c:	add	x21, x2, x26
    8580:	ldr	x2, [x2, x26]
    8584:	add	x1, x0, w1, sxtw #2
    8588:	bl	93b0 <grub_getstringwidth>
    858c:	mov	x1, x0
    8590:	mov	w4, #0x1                   	// #1
    8594:	mov	x0, x19
    8598:	mov	w6, w4
    859c:	sub	x2, x1, #0x1
    85a0:	mov	w5, #0x2                   	// #2
    85a4:	mov	w3, #0x0                   	// #0
    85a8:	cbz	x1, 85b8 <grub_menu_entry_run+0x1200>
    85ac:	ldr	w6, [x21, #24]
    85b0:	add	x2, x2, x6
    85b4:	udiv	x6, x2, x6
    85b8:	ldr	x1, [x19, #40]
    85bc:	ldr	w2, [x19, #20]
    85c0:	add	x1, x1, x26
    85c4:	ldr	w7, [x1, #44]
    85c8:	cmp	w7, w6
    85cc:	b.eq	8604 <grub_menu_entry_run+0x124c>  // b.none
    85d0:	bl	61d0 <grub_show_menu+0x1518>
    85d4:	add	w24, w24, #0x1
    85d8:	ldr	w0, [x19, #48]
    85dc:	cmp	w0, w24
    85e0:	b.ls	7758 <grub_menu_entry_run+0x3a0>  // b.plast
    85e4:	ldr	w1, [x23, #8]
    85e8:	b	8570 <grub_menu_entry_run+0x11b8>
    85ec:	ldr	w2, [x19, #48]
    85f0:	add	w24, w24, #0x1
    85f4:	str	w22, [x26, #44]
    85f8:	cmp	w24, w2
    85fc:	b.cc	8510 <grub_menu_entry_run+0x1158>  // b.lo, b.ul, b.last
    8600:	b	8558 <grub_menu_entry_run+0x11a0>
    8604:	mov	x0, x19
    8608:	mov	w5, #0x1                   	// #1
    860c:	mov	w4, #0x0                   	// #0
    8610:	mov	w3, #0x0                   	// #0
    8614:	bl	61d0 <grub_show_menu+0x1518>
    8618:	add	w24, w24, #0x1
    861c:	ldr	w0, [x19, #48]
    8620:	cmp	w24, w0
    8624:	b.cs	7758 <grub_menu_entry_run+0x3a0>  // b.hs, b.nlast
    8628:	ldr	w1, [x23, #8]
    862c:	b	8570 <grub_menu_entry_run+0x11b8>
    8630:	ldp	w3, w0, [sp, #128]
    8634:	add	w26, w26, #0x1
    8638:	ldr	w2, [sp, #120]
    863c:	ldr	x1, [x19, #40]
    8640:	bfxil	w0, w2, #0, #16
    8644:	mov	w2, w0
    8648:	mov	w0, #0x2192                	// #8594
    864c:	ldr	x1, [x1, x21]
    8650:	bfi	w2, w3, #16, #16
    8654:	mov	w24, w2
    8658:	str	w2, [sp, #132]
    865c:	bl	bf40 <grub_putcode>
    8660:	ldr	x0, [x19, #40]
    8664:	mov	w1, w24
    8668:	ldr	x0, [x0, x21]
    866c:	ldr	x2, [x0, #72]
    8670:	blr	x2
    8674:	ldr	w0, [x19, #48]
    8678:	cmp	w0, w26
    867c:	b.hi	8050 <grub_menu_entry_run+0xc98>  // b.pmore
    8680:	b	8198 <grub_menu_entry_run+0xde0>
    8684:	mov	w0, #0x20                  	// #32
    8688:	bl	bf40 <grub_putcode>
    868c:	b	8130 <grub_menu_entry_run+0xd78>
    8690:	sub	w0, w20, #0x20
    8694:	cmp	w0, #0x5e
    8698:	b.hi	7758 <grub_menu_entry_run+0x3a0>  // b.pmore
    869c:	add	x1, sp, #0xa8
    86a0:	mov	x0, x19
    86a4:	mov	w2, #0x1                   	// #1
    86a8:	strb	w20, [sp, #168]
    86ac:	strb	wzr, [sp, #169]
    86b0:	bl	6de0 <grub_show_menu+0x2128>
    86b4:	cbz	w0, 7874 <grub_menu_entry_run+0x4bc>
    86b8:	str	w20, [sp, #120]
    86bc:	b	775c <grub_menu_entry_run+0x3a4>
    86c0:	mov	x0, #0x1                   	// #1
    86c4:	mov	x20, #0x0                   	// #0
    86c8:	b	7a44 <grub_menu_entry_run+0x68c>
    86cc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    86d0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    86d4:	ldr	x1, [x1]
    86d8:	ldr	x0, [x0]
    86dc:	b	8468 <grub_menu_entry_run+0x10b0>
    86e0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    86e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    86e8:	ldr	x1, [x1]
    86ec:	ldr	x0, [x0]
    86f0:	b	8468 <grub_menu_entry_run+0x10b0>
    86f4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    86f8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    86fc:	ldr	x1, [x1]
    8700:	ldr	x0, [x0]
    8704:	b	8468 <grub_menu_entry_run+0x10b0>
    8708:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    870c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8710:	ldr	x1, [x1]
    8714:	ldr	x0, [x0]
    8718:	b	8468 <grub_menu_entry_run+0x10b0>
    871c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8720:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    8724:	ldr	x0, [x0]
    8728:	ldr	x1, [x1]
    872c:	ldr	x0, [x0]
    8730:	bl	0 <grub_named_list_find>
    8734:	cbz	x0, 83d0 <grub_menu_entry_run+0x1018>
    8738:	ldr	x3, [x0, #32]
    873c:	mov	x2, #0x0                   	// #0
    8740:	mov	w1, #0x0                   	// #0
    8744:	blr	x3
    8748:	b	83d0 <grub_menu_entry_run+0x1018>
    874c:	mov	x27, x24
    8750:	b	7aa8 <grub_menu_entry_run+0x6f0>
    8754:	bl	0 <grub_print_error>
    8758:	str	w20, [sp, #120]
    875c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8760:	ldr	x0, [x0]
    8764:	str	wzr, [x0]
    8768:	b	775c <grub_menu_entry_run+0x3a4>
    876c:	ldr	w0, [x19, #12]
    8770:	str	w0, [x23, #8]
    8774:	str	w20, [sp, #120]
    8778:	b	775c <grub_menu_entry_run+0x3a4>
    877c:	sub	w0, w24, #0x2
    8780:	cmp	w0, #0xf
    8784:	b.ls	8798 <grub_menu_entry_run+0x13e0>  // b.plast
    8788:	sub	w2, w24, #0x8
    878c:	mov	x24, x2
    8790:	ubfiz	x28, x2, #2, #32
    8794:	b	8080 <grub_menu_entry_run+0xcc8>
    8798:	mov	w2, w0
    879c:	ubfiz	x28, x0, #2, #32
    87a0:	mov	w24, w0
    87a4:	b	8080 <grub_menu_entry_run+0xcc8>
	...
    8868:	sub	sp, sp, #0x60
    886c:	stp	x29, x30, [sp, #16]
    8870:	add	x29, sp, #0x10
    8874:	stp	x19, x20, [sp, #32]
    8878:	stp	x21, x22, [sp, #48]
    887c:	mov	w21, w1
    8880:	mov	w22, w2
    8884:	stp	x23, x24, [sp, #64]
    8888:	mov	x23, x3
    888c:	mov	w24, w4
    8890:	str	x25, [sp, #80]
    8894:	mov	x25, x0
    8898:	bl	0 <grub_strlen>
    889c:	add	x20, x0, #0x2
    88a0:	lsl	x0, x20, #2
    88a4:	bl	0 <grub_malloc>
    88a8:	cbz	x0, 893c <grub_menu_entry_run+0x1584>
    88ac:	mov	x19, x0
    88b0:	mov	x1, x20
    88b4:	mov	x2, x25
    88b8:	mov	x4, #0x0                   	// #0
    88bc:	mov	x3, #0xffffffffffffffff    	// #-1
    88c0:	bl	d8d8 <grub_utf8_to_ucs4>
    88c4:	str	wzr, [x19, x0, lsl #2]
    88c8:	add	x1, x19, x0, lsl #2
    88cc:	cbnz	w24, 8920 <grub_menu_entry_run+0x1568>
    88d0:	str	xzr, [sp]
    88d4:	mov	x4, x23
    88d8:	mov	w3, w22
    88dc:	mov	w2, w21
    88e0:	mov	x0, x19
    88e4:	mov	w20, #0x0                   	// #0
    88e8:	mov	w7, #0x0                   	// #0
    88ec:	mov	w6, #0xffffffff            	// #-1
    88f0:	mov	w5, #0x0                   	// #0
    88f4:	bl	c150 <grub_print_ucs4_menu>
    88f8:	mov	x0, x19
    88fc:	bl	0 <grub_free>
    8900:	mov	w0, w20
    8904:	ldp	x29, x30, [sp, #16]
    8908:	ldp	x19, x20, [sp, #32]
    890c:	ldp	x21, x22, [sp, #48]
    8910:	ldp	x23, x24, [sp, #64]
    8914:	ldr	x25, [sp, #80]
    8918:	add	sp, sp, #0x60
    891c:	ret
    8920:	mov	x4, x23
    8924:	mov	w3, w22
    8928:	mov	w2, w21
    892c:	mov	x0, x19
    8930:	bl	c620 <grub_ucs4_count_lines>
    8934:	mov	w20, w0
    8938:	b	88f8 <grub_menu_entry_run+0x1540>
    893c:	mov	w20, #0x0                   	// #0
    8940:	mov	w0, w20
    8944:	ldp	x29, x30, [sp, #16]
    8948:	ldp	x19, x20, [sp, #32]
    894c:	ldp	x21, x22, [sp, #48]
    8950:	ldp	x23, x24, [sp, #64]
    8954:	ldr	x25, [sp, #80]
    8958:	add	sp, sp, #0x60
    895c:	ret
    8960:	sub	sp, sp, #0x70
    8964:	stp	x29, x30, [sp, #16]
    8968:	add	x29, sp, #0x10
    896c:	stp	x19, x20, [sp, #32]
    8970:	mov	w20, w0
    8974:	stp	x21, x22, [sp, #48]
    8978:	mov	w21, w1
    897c:	stp	x23, x24, [sp, #64]
    8980:	stp	x27, x28, [sp, #96]
    8984:	mov	x27, x3
    8988:	cbz	x2, 8b4c <grub_menu_entry_run+0x1794>
    898c:	ldr	x23, [x2]
    8990:	mov	x0, x23
    8994:	bl	0 <grub_strlen>
    8998:	mov	x22, x0
    899c:	lsl	x0, x0, #2
    89a0:	bl	0 <grub_malloc>
    89a4:	mov	x19, x0
    89a8:	cbz	x0, 8b30 <grub_menu_entry_run+0x1778>
    89ac:	mov	x2, x23
    89b0:	mov	x1, x22
    89b4:	mov	x4, #0x0                   	// #0
    89b8:	mov	x3, #0xffffffffffffffff    	// #-1
    89bc:	bl	d8d8 <grub_utf8_to_ucs4>
    89c0:	mov	x28, x0
    89c4:	mov	x0, x19
    89c8:	tbnz	x28, #63, 8b14 <grub_menu_entry_run+0x175c>
    89cc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    89d0:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    89d4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    89d8:	stp	x25, x26, [sp, #80]
    89dc:	ldr	x0, [x27, #56]
    89e0:	ldr	x1, [x1]
    89e4:	ldr	x23, [x3]
    89e8:	ldr	x22, [x2]
    89ec:	ldr	x2, [x0, #88]
    89f0:	ldrb	w3, [x1]
    89f4:	ldrb	w1, [x1, #1]
    89f8:	ldrb	w26, [x23]
    89fc:	ldrb	w25, [x22]
    8a00:	strb	w3, [x23]
    8a04:	strb	w1, [x22]
    8a08:	cbz	x2, 8a18 <grub_menu_entry_run+0x1660>
    8a0c:	add	w1, w21, #0x1
    8a10:	blr	x2
    8a14:	ldr	x0, [x27, #56]
    8a18:	mov	w1, #0x0                   	// #0
    8a1c:	ldr	w3, [x27, #16]
    8a20:	and	w20, w20, #0xffff
    8a24:	ldr	x2, [x0, #72]
    8a28:	lsl	x24, x28, #2
    8a2c:	bfxil	w1, w3, #0, #16
    8a30:	bfi	w1, w20, #16, #16
    8a34:	blr	x2
    8a38:	add	x1, x19, x24
    8a3c:	mov	x2, x19
    8a40:	mov	w3, #0x20                  	// #32
    8a44:	cbz	x28, 8b58 <grub_menu_entry_run+0x17a0>
    8a48:	ldr	w4, [x2]
    8a4c:	cmp	w4, #0x1b
    8a50:	and	w0, w4, #0xfffffffd
    8a54:	ccmp	w4, #0xd, #0x4, ne  // ne = any
    8a58:	ccmp	w0, #0x8, #0x4, ne  // ne = any
    8a5c:	b.ne	8a64 <grub_menu_entry_run+0x16ac>  // b.any
    8a60:	str	w3, [x2]
    8a64:	add	x2, x2, #0x4
    8a68:	cmp	x2, x1
    8a6c:	b.ne	8a48 <grub_menu_entry_run+0x1690>  // b.any
    8a70:	ldr	w0, [x27, #8]
    8a74:	cmp	w0, #0x1
    8a78:	b.le	8a94 <grub_menu_entry_run+0x16dc>
    8a7c:	ldr	x1, [x27, #56]
    8a80:	cmp	w21, #0x0
    8a84:	mov	w2, #0x2a                  	// #42
    8a88:	mov	w0, #0x20                  	// #32
    8a8c:	csel	w0, w2, w0, ne  // ne = any
    8a90:	bl	bf40 <grub_putcode>
    8a94:	ldr	w3, [x27, #36]
    8a98:	mov	x0, x19
    8a9c:	ldr	x4, [x27, #56]
    8aa0:	str	xzr, [sp]
    8aa4:	mov	w2, #0x0                   	// #0
    8aa8:	add	x1, x19, x24
    8aac:	mov	w7, #0x2192                	// #8594
    8ab0:	mov	w6, #0x1                   	// #1
    8ab4:	mov	w5, #0x0                   	// #0
    8ab8:	bl	c150 <grub_print_ucs4_menu>
    8abc:	ldr	x0, [x27, #56]
    8ac0:	ldr	x2, [x0, #88]
    8ac4:	cbz	x2, 8ad4 <grub_menu_entry_run+0x171c>
    8ac8:	mov	w1, #0x1                   	// #1
    8acc:	blr	x2
    8ad0:	ldr	x0, [x27, #56]
    8ad4:	mov	w1, #0x0                   	// #0
    8ad8:	ldp	w2, w4, [x27, #16]
    8adc:	ldr	x3, [x0, #72]
    8ae0:	add	w2, w2, w4
    8ae4:	bfxil	w1, w2, #0, #16
    8ae8:	bfi	w1, w20, #16, #16
    8aec:	blr	x3
    8af0:	ldr	x0, [x27, #56]
    8af4:	strb	w26, [x23]
    8af8:	strb	w25, [x22]
    8afc:	ldr	x2, [x0, #88]
    8b00:	cbz	x2, 8b0c <grub_menu_entry_run+0x1754>
    8b04:	mov	w1, #0x1                   	// #1
    8b08:	blr	x2
    8b0c:	ldp	x25, x26, [sp, #80]
    8b10:	mov	x0, x19
    8b14:	ldp	x29, x30, [sp, #16]
    8b18:	ldp	x19, x20, [sp, #32]
    8b1c:	ldp	x21, x22, [sp, #48]
    8b20:	ldp	x23, x24, [sp, #64]
    8b24:	ldp	x27, x28, [sp, #96]
    8b28:	add	sp, sp, #0x70
    8b2c:	b	0 <grub_free>
    8b30:	ldp	x29, x30, [sp, #16]
    8b34:	ldp	x19, x20, [sp, #32]
    8b38:	ldp	x21, x22, [sp, #48]
    8b3c:	ldp	x23, x24, [sp, #64]
    8b40:	ldp	x27, x28, [sp, #96]
    8b44:	add	sp, sp, #0x70
    8b48:	ret
    8b4c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8b50:	ldr	x23, [x0]
    8b54:	b	8990 <grub_menu_entry_run+0x15d8>
    8b58:	mov	x24, #0x0                   	// #0
    8b5c:	b	8a70 <grub_menu_entry_run+0x16b8>
	...
    8b80:	stp	x29, x30, [sp, #-48]!
    8b84:	mov	w4, #0x0                   	// #0
    8b88:	mov	x29, sp
    8b8c:	ldp	w2, w3, [x1, #16]
    8b90:	stp	x19, x20, [sp, #16]
    8b94:	mov	x19, x1
    8b98:	ldrh	w5, [x1, #12]
    8b9c:	add	w2, w2, w3
    8ba0:	ldr	w1, [x1, #32]
    8ba4:	mov	x20, x0
    8ba8:	ldr	x0, [x19, #56]
    8bac:	add	w1, w1, #0x1
    8bb0:	add	w2, w2, w1
    8bb4:	bfxil	w4, w2, #0, #16
    8bb8:	ldr	x3, [x0, #72]
    8bbc:	bfi	w4, w5, #16, #16
    8bc0:	str	x21, [sp, #32]
    8bc4:	mov	w1, w4
    8bc8:	blr	x3
    8bcc:	ldr	w0, [x19, #8]
    8bd0:	cmp	w0, #0x1
    8bd4:	b.eq	8bec <grub_menu_entry_run+0x1834>  // b.none
    8bd8:	ldr	w0, [x19]
    8bdc:	ldr	x1, [x19, #56]
    8be0:	cbz	w0, 8cd8 <grub_menu_entry_run+0x1920>
    8be4:	mov	w0, #0x2191                	// #8593
    8be8:	bl	bf40 <grub_putcode>
    8bec:	ldr	w1, [x19]
    8bf0:	mov	x0, x20
    8bf4:	bl	4b80 <grub_menu_get_entry>
    8bf8:	mov	x21, x0
    8bfc:	ldr	w2, [x19, #8]
    8c00:	cmp	w2, #0x0
    8c04:	b.le	8c48 <grub_menu_entry_run+0x1890>
    8c08:	mov	w20, #0x0                   	// #0
    8c0c:	nop
    8c10:	ldr	w1, [x19, #4]
    8c14:	mov	x3, x19
    8c18:	ldr	w0, [x19, #12]
    8c1c:	mov	x2, x21
    8c20:	cmp	w1, w20
    8c24:	add	w0, w20, w0
    8c28:	cset	w1, eq  // eq = none
    8c2c:	add	w20, w20, #0x1
    8c30:	bl	8960 <grub_menu_entry_run+0x15a8>
    8c34:	cbz	x21, 8c3c <grub_menu_entry_run+0x1884>
    8c38:	ldr	x21, [x21, #72]
    8c3c:	ldr	w2, [x19, #8]
    8c40:	cmp	w2, w20
    8c44:	b.gt	8c10 <grub_menu_entry_run+0x1858>
    8c48:	ldp	w3, w4, [x19, #12]
    8c4c:	mov	w1, #0x0                   	// #0
    8c50:	ldr	x0, [x19, #56]
    8c54:	sub	w3, w3, #0x1
    8c58:	ldr	w6, [x19, #20]
    8c5c:	add	w2, w3, w2
    8c60:	ldr	w5, [x19, #32]
    8c64:	add	w4, w4, w6
    8c68:	add	w5, w5, #0x1
    8c6c:	add	w4, w4, w5
    8c70:	ldr	x5, [x0, #72]
    8c74:	bfxil	w1, w4, #0, #16
    8c78:	bfi	w1, w2, #16, #16
    8c7c:	blr	x5
    8c80:	ldr	w0, [x19, #8]
    8c84:	cmp	w0, #0x1
    8c88:	b.eq	8ce4 <grub_menu_entry_run+0x192c>  // b.none
    8c8c:	ldr	x1, [x19, #56]
    8c90:	cbz	x21, 8d00 <grub_menu_entry_run+0x1948>
    8c94:	mov	w0, #0x2193                	// #8595
    8c98:	bl	bf40 <grub_putcode>
    8c9c:	ldr	x0, [x19, #56]
    8ca0:	mov	w1, #0x0                   	// #0
    8ca4:	ldp	w2, w3, [x19, #12]
    8ca8:	ldr	w4, [x19, #20]
    8cac:	ldr	w5, [x19, #4]
    8cb0:	ldp	x19, x20, [sp, #16]
    8cb4:	add	w3, w3, w4
    8cb8:	ldr	x21, [sp, #32]
    8cbc:	add	w2, w2, w5
    8cc0:	ldp	x29, x30, [sp], #48
    8cc4:	bfxil	w1, w3, #0, #16
    8cc8:	ldr	x4, [x0, #72]
    8ccc:	bfi	w1, w2, #16, #16
    8cd0:	mov	x16, x4
    8cd4:	br	x16
    8cd8:	mov	w0, #0x20                  	// #32
    8cdc:	bl	bf40 <grub_putcode>
    8ce0:	b	8bec <grub_menu_entry_run+0x1834>
    8ce4:	ldr	w0, [x19]
    8ce8:	ldr	x1, [x19, #56]
    8cec:	cbz	w0, 8c90 <grub_menu_entry_run+0x18d8>
    8cf0:	cbz	x21, 8d0c <grub_menu_entry_run+0x1954>
    8cf4:	mov	w0, #0x2195                	// #8597
    8cf8:	bl	bf40 <grub_putcode>
    8cfc:	b	8c9c <grub_menu_entry_run+0x18e4>
    8d00:	mov	w0, #0x20                  	// #32
    8d04:	bl	bf40 <grub_putcode>
    8d08:	b	8c9c <grub_menu_entry_run+0x18e4>
    8d0c:	mov	w0, #0x2191                	// #8593
    8d10:	bl	bf40 <grub_putcode>
    8d14:	b	8c9c <grub_menu_entry_run+0x18e4>
    8d18:	stp	x29, x30, [sp, #-64]!
    8d1c:	mov	x29, sp
    8d20:	stp	x21, x22, [sp, #32]
    8d24:	mov	x21, x0
    8d28:	ldr	w0, [x0, #28]
    8d2c:	cmp	w0, #0x0
    8d30:	b.le	8db8 <grub_menu_entry_run+0x1a00>
    8d34:	mov	w22, #0x0                   	// #0
    8d38:	stp	x19, x20, [sp, #16]
    8d3c:	str	x23, [sp, #48]
    8d40:	ldr	x0, [x21, #56]
    8d44:	and	w23, w23, #0xffff0000
    8d48:	ldr	w1, [x21, #24]
    8d4c:	ldr	x2, [x0, #72]
    8d50:	add	w1, w1, w22
    8d54:	bfi	w23, w1, #16, #16
    8d58:	mov	w1, w23
    8d5c:	blr	x2
    8d60:	ldr	x20, [x21, #56]
    8d64:	mov	x0, x20
    8d68:	ldr	x1, [x20, #56]
    8d6c:	blr	x1
    8d70:	ands	w0, w0, #0xffff
    8d74:	b.eq	8e0c <grub_menu_entry_run+0x1a54>  // b.none
    8d78:	cmp	w0, #0x1
    8d7c:	sub	w19, w0, #0x2
    8d80:	b.eq	8da0 <grub_menu_entry_run+0x19e8>  // b.none
    8d84:	nop
    8d88:	sub	w19, w19, #0x1
    8d8c:	mov	x1, x20
    8d90:	mov	w0, #0x20                  	// #32
    8d94:	bl	bf40 <grub_putcode>
    8d98:	cmn	w19, #0x1
    8d9c:	b.ne	8d88 <grub_menu_entry_run+0x19d0>  // b.any
    8da0:	ldr	w0, [x21, #28]
    8da4:	add	w22, w22, #0x1
    8da8:	cmp	w0, w22
    8dac:	b.gt	8d40 <grub_menu_entry_run+0x1988>
    8db0:	ldp	x19, x20, [sp, #16]
    8db4:	ldr	x23, [sp, #48]
    8db8:	ldr	x0, [x21, #56]
    8dbc:	ldr	w5, [x21, #8]
    8dc0:	ldrh	w2, [x21, #12]
    8dc4:	ldp	w1, w3, [x21, #16]
    8dc8:	cmp	w5, #0x5
    8dcc:	ldr	x4, [x0, #72]
    8dd0:	b.gt	8ddc <grub_menu_entry_run+0x1a24>
    8dd4:	ldr	w6, [x21, #32]
    8dd8:	cbz	w6, 8e14 <grub_menu_entry_run+0x1a5c>
    8ddc:	add	w1, w1, w3
    8de0:	ldr	w3, [x21, #4]
    8de4:	add	w2, w2, w3
    8de8:	bfi	w1, w2, #16, #16
    8dec:	blr	x4
    8df0:	ldr	x0, [x21, #56]
    8df4:	ldr	x1, [x0, #104]
    8df8:	cbz	x1, 8e8c <grub_menu_entry_run+0x1ad4>
    8dfc:	ldp	x21, x22, [sp, #32]
    8e00:	mov	x16, x1
    8e04:	ldp	x29, x30, [sp], #64
    8e08:	br	x16
    8e0c:	mov	w19, #0x4e                  	// #78
    8e10:	b	8d88 <grub_menu_entry_run+0x19d0>
    8e14:	add	w1, w1, w3
    8e18:	add	w2, w2, w5
    8e1c:	add	w3, w1, #0x1
    8e20:	sub	w2, w2, #0x1
    8e24:	mov	w1, #0x0                   	// #0
    8e28:	bfxil	w1, w3, #0, #16
    8e2c:	bfi	w1, w2, #16, #16
    8e30:	blr	x4
    8e34:	ldr	x1, [x21, #56]
    8e38:	mov	w0, #0x20                  	// #32
    8e3c:	bl	bf40 <grub_putcode>
    8e40:	str	wzr, [x21, #28]
    8e44:	ldr	w1, [x21, #8]
    8e48:	ldr	x0, [x21, #48]
    8e4c:	add	w1, w1, #0x1
    8e50:	str	w1, [x21, #8]
    8e54:	mov	x1, x21
    8e58:	bl	8b80 <grub_menu_entry_run+0x17c8>
    8e5c:	ldp	w1, w3, [x21, #16]
    8e60:	ldr	x0, [x21, #56]
    8e64:	add	w1, w1, w3
    8e68:	ldrh	w2, [x21, #12]
    8e6c:	ldr	w3, [x21, #4]
    8e70:	ldr	x4, [x0, #72]
    8e74:	add	w2, w2, w3
    8e78:	bfi	w1, w2, #16, #16
    8e7c:	blr	x4
    8e80:	ldr	x0, [x21, #56]
    8e84:	ldr	x1, [x0, #104]
    8e88:	cbnz	x1, 8dfc <grub_menu_entry_run+0x1a44>
    8e8c:	ldp	x21, x22, [sp, #32]
    8e90:	ldp	x29, x30, [sp], #64
    8e94:	ret
    8e98:	stp	x29, x30, [sp, #-32]!
    8e9c:	mov	w2, w0
    8ea0:	mov	x29, sp
    8ea4:	stp	x19, x20, [sp, #16]
    8ea8:	mov	x19, x1
    8eac:	ldr	w1, [x1]
    8eb0:	ldp	w5, w3, [x19, #4]
    8eb4:	sub	w4, w0, w1
    8eb8:	str	w4, [x19, #4]
    8ebc:	cmp	w4, w3
    8ec0:	ldr	x0, [x19, #48]
    8ec4:	b.ge	8f34 <grub_menu_entry_run+0x1b7c>  // b.tcont
    8ec8:	tbnz	w4, #31, 8f68 <grub_menu_entry_run+0x1bb0>
    8ecc:	ldr	w20, [x19, #12]
    8ed0:	add	w1, w1, w5
    8ed4:	add	w20, w5, w20
    8ed8:	bl	4b80 <grub_menu_get_entry>
    8edc:	mov	x3, x19
    8ee0:	mov	x2, x0
    8ee4:	mov	w1, #0x0                   	// #0
    8ee8:	mov	w0, w20
    8eec:	bl	8960 <grub_menu_entry_run+0x15a8>
    8ef0:	ldr	w20, [x19, #12]
    8ef4:	ldp	w1, w2, [x19]
    8ef8:	ldr	x0, [x19, #48]
    8efc:	add	w1, w2, w1
    8f00:	add	w20, w2, w20
    8f04:	bl	4b80 <grub_menu_get_entry>
    8f08:	mov	x2, x0
    8f0c:	mov	w1, #0x1                   	// #1
    8f10:	mov	w0, w20
    8f14:	mov	x3, x19
    8f18:	bl	8960 <grub_menu_entry_run+0x15a8>
    8f1c:	ldr	x0, [x19, #56]
    8f20:	ldr	x1, [x0, #104]
    8f24:	cbnz	x1, 8f58 <grub_menu_entry_run+0x1ba0>
    8f28:	ldp	x19, x20, [sp, #16]
    8f2c:	ldp	x29, x30, [sp], #32
    8f30:	ret
    8f34:	sub	w3, w3, #0x1
    8f38:	sub	w1, w2, w3
    8f3c:	stp	w1, w3, [x19]
    8f40:	tbnz	w3, #31, 8f68 <grub_menu_entry_run+0x1bb0>
    8f44:	mov	x1, x19
    8f48:	bl	8b80 <grub_menu_entry_run+0x17c8>
    8f4c:	ldr	x0, [x19, #56]
    8f50:	ldr	x1, [x0, #104]
    8f54:	cbz	x1, 8f28 <grub_menu_entry_run+0x1b70>
    8f58:	ldp	x19, x20, [sp, #16]
    8f5c:	mov	x16, x1
    8f60:	ldp	x29, x30, [sp], #32
    8f64:	br	x16
    8f68:	stp	w2, wzr, [x19]
    8f6c:	b	8f44 <grub_menu_entry_run+0x1b8c>
    8f70:	stp	x29, x30, [sp, #-64]!
    8f74:	mov	x29, sp
    8f78:	stp	x19, x20, [sp, #16]
    8f7c:	mov	x19, x2
    8f80:	mov	w20, w3
    8f84:	ldr	x2, [x2, #88]
    8f88:	stp	x21, x22, [sp, #32]
    8f8c:	mov	w22, w0
    8f90:	stp	x23, x24, [sp, #48]
    8f94:	mov	w21, w1
    8f98:	cbz	x2, 8fa8 <grub_menu_entry_run+0x1bf0>
    8f9c:	mov	x0, x19
    8fa0:	mov	w1, #0x1                   	// #1
    8fa4:	blr	x2
    8fa8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8fac:	ldr	x23, [x0]
    8fb0:	ldr	x1, [x23]
    8fb4:	cbz	w21, 8fe8 <grub_menu_entry_run+0x1c30>
    8fb8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8fbc:	ldr	x0, [x0]
    8fc0:	blr	x1
    8fc4:	mov	w4, w20
    8fc8:	mov	x3, x19
    8fcc:	ldp	x19, x20, [sp, #16]
    8fd0:	mov	w2, #0x6                   	// #6
    8fd4:	ldp	x21, x22, [sp, #32]
    8fd8:	mov	w1, w2
    8fdc:	ldp	x23, x24, [sp, #48]
    8fe0:	ldp	x29, x30, [sp], #64
    8fe4:	b	8868 <grub_menu_entry_run+0x14b0>
    8fe8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    8fec:	mov	w24, #0x0                   	// #0
    8ff0:	ldr	x0, [x0]
    8ff4:	blr	x1
    8ff8:	mov	w2, #0x2193                	// #8595
    8ffc:	mov	w1, #0x2191                	// #8593
    9000:	bl	0 <grub_xasprintf>
    9004:	mov	x21, x0
    9008:	cbz	x0, 9058 <grub_menu_entry_run+0x1ca0>
    900c:	mov	w2, #0x6                   	// #6
    9010:	mov	w4, w20
    9014:	mov	w1, w2
    9018:	mov	x3, x19
    901c:	bl	8868 <grub_menu_entry_run+0x14b0>
    9020:	mov	w24, w0
    9024:	mov	x0, x21
    9028:	bl	0 <grub_free>
    902c:	cbnz	w22, 9070 <grub_menu_entry_run+0x1cb8>
    9030:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9034:	ldr	x1, [x23]
    9038:	ldr	x0, [x0]
    903c:	blr	x1
    9040:	mov	w2, #0x6                   	// #6
    9044:	mov	w4, w20
    9048:	mov	x3, x19
    904c:	mov	w1, w2
    9050:	bl	8868 <grub_menu_entry_run+0x14b0>
    9054:	add	w24, w24, w0
    9058:	mov	w0, w24
    905c:	ldp	x19, x20, [sp, #16]
    9060:	ldp	x21, x22, [sp, #32]
    9064:	ldp	x23, x24, [sp, #48]
    9068:	ldp	x29, x30, [sp], #64
    906c:	ret
    9070:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9074:	ldr	x1, [x23]
    9078:	ldr	x0, [x0]
    907c:	b	903c <grub_menu_entry_run+0x1c84>
	...
    90a8:	stp	x29, x30, [sp, #-32]!
    90ac:	mov	x29, sp
    90b0:	stp	x19, x20, [sp, #16]
    90b4:	mov	x19, x0
    90b8:	ldr	x20, [x0, #56]
    90bc:	ldr	x2, [x20, #96]
    90c0:	cbz	x2, 90d4 <grub_menu_entry_run+0x1d1c>
    90c4:	mov	x0, x20
    90c8:	mov	w1, #0x1                   	// #1
    90cc:	blr	x2
    90d0:	ldr	x20, [x19, #56]
    90d4:	ldr	x1, [x20, #80]
    90d8:	cbz	x1, 90f4 <grub_menu_entry_run+0x1d3c>
    90dc:	mov	x0, x20
    90e0:	blr	x1
    90e4:	mov	x0, x19
    90e8:	ldp	x19, x20, [sp, #16]
    90ec:	ldp	x29, x30, [sp], #32
    90f0:	b	0 <grub_free>
    90f4:	mov	x1, x20
    90f8:	mov	w0, #0xa                   	// #10
    90fc:	bl	bf40 <grub_putcode>
    9100:	ldr	x1, [x20, #104]
    9104:	cbnz	x1, 90dc <grub_menu_entry_run+0x1d24>
    9108:	b	90e4 <grub_menu_entry_run+0x1d2c>
    910c:	nop
    9110:	sub	sp, sp, #0x60
    9114:	stp	x29, x30, [sp, #16]
    9118:	add	x29, sp, #0x10
    911c:	stp	x21, x22, [sp, #48]
    9120:	mov	w21, w0
    9124:	ldr	x0, [x1, #56]
    9128:	stp	x19, x20, [sp, #32]
    912c:	mov	x19, x1
    9130:	ldrh	w1, [x1, #24]
    9134:	ldr	x2, [x0, #72]
    9138:	lsl	w1, w1, #16
    913c:	blr	x2
    9140:	ldr	w0, [x19, #40]
    9144:	sub	w0, w0, #0x2
    9148:	cmp	w0, #0x1
    914c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9150:	b.ls	9260 <grub_menu_entry_run+0x1ea8>  // b.plast
    9154:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9158:	ldr	x22, [x0]
    915c:	ldr	x0, [x1]
    9160:	ldr	x1, [x22]
    9164:	blr	x1
    9168:	mov	w1, w21
    916c:	bl	0 <grub_xasprintf>
    9170:	mov	x20, x0
    9174:	cbz	x0, 9364 <grub_menu_entry_run+0x1fac>
    9178:	stp	x23, x24, [sp, #64]
    917c:	ldr	w23, [x19, #40]
    9180:	stp	x25, x26, [sp, #80]
    9184:	ldr	x24, [x19, #56]
    9188:	cbz	w23, 9270 <grub_menu_entry_run+0x1eb8>
    918c:	cmp	w23, #0x3
    9190:	mov	w25, #0x3                   	// #3
    9194:	csel	w25, wzr, w25, eq  // eq = none
    9198:	mov	x0, x20
    919c:	bl	0 <grub_strlen>
    91a0:	add	x22, x0, #0x2
    91a4:	lsl	x0, x22, #2
    91a8:	bl	0 <grub_malloc>
    91ac:	mov	x21, x0
    91b0:	cbz	x0, 9200 <grub_menu_entry_run+0x1e48>
    91b4:	mov	x1, x22
    91b8:	mov	x2, x20
    91bc:	mov	x4, #0x0                   	// #0
    91c0:	mov	x3, #0xffffffffffffffff    	// #-1
    91c4:	bl	d8d8 <grub_utf8_to_ucs4>
    91c8:	str	wzr, [x21, x0, lsl #2]
    91cc:	cmp	w23, #0x3
    91d0:	add	x1, x21, x0, lsl #2
    91d4:	mov	x4, x24
    91d8:	mov	w2, w25
    91dc:	cset	w3, ne  // ne = any
    91e0:	str	xzr, [sp]
    91e4:	mov	w7, #0x0                   	// #0
    91e8:	mov	w6, #0xffffffff            	// #-1
    91ec:	mov	w5, #0x0                   	// #0
    91f0:	mov	x0, x21
    91f4:	bl	c150 <grub_print_ucs4_menu>
    91f8:	mov	x0, x21
    91fc:	bl	0 <grub_free>
    9200:	mov	x0, x20
    9204:	bl	0 <grub_free>
    9208:	ldr	x0, [x19, #56]
    920c:	mov	w1, #0x0                   	// #0
    9210:	ldp	w2, w3, [x19, #12]
    9214:	ldr	w4, [x19, #20]
    9218:	ldr	w5, [x19, #4]
    921c:	add	w3, w3, w4
    9220:	ldr	x4, [x0, #72]
    9224:	add	w2, w2, w5
    9228:	bfxil	w1, w3, #0, #16
    922c:	bfi	w1, w2, #16, #16
    9230:	blr	x4
    9234:	ldr	x0, [x19, #56]
    9238:	ldr	x1, [x0, #104]
    923c:	cbz	x1, 9330 <grub_menu_entry_run+0x1f78>
    9240:	ldp	x29, x30, [sp, #16]
    9244:	mov	x16, x1
    9248:	ldp	x19, x20, [sp, #32]
    924c:	ldp	x21, x22, [sp, #48]
    9250:	ldp	x23, x24, [sp, #64]
    9254:	ldp	x25, x26, [sp, #80]
    9258:	add	sp, sp, #0x60
    925c:	br	x16
    9260:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9264:	ldr	x22, [x0]
    9268:	ldr	x0, [x1]
    926c:	b	9160 <grub_menu_entry_run+0x1da8>
    9270:	bl	0 <grub_strlen>
    9274:	add	x25, x0, #0x2
    9278:	mov	w26, #0x0                   	// #0
    927c:	lsl	x0, x25, #2
    9280:	bl	0 <grub_malloc>
    9284:	mov	x23, x0
    9288:	cbz	x0, 92cc <grub_menu_entry_run+0x1f14>
    928c:	mov	x1, x25
    9290:	mov	x2, x20
    9294:	mov	x4, #0x0                   	// #0
    9298:	mov	x3, #0xffffffffffffffff    	// #-1
    929c:	bl	d8d8 <grub_utf8_to_ucs4>
    92a0:	mov	x5, x0
    92a4:	add	x1, x23, x0, lsl #2
    92a8:	mov	x4, x24
    92ac:	mov	w3, #0x1                   	// #1
    92b0:	mov	w2, #0x3                   	// #3
    92b4:	str	wzr, [x23, x5, lsl #2]
    92b8:	mov	x0, x23
    92bc:	bl	c620 <grub_ucs4_count_lines>
    92c0:	mov	w26, w0
    92c4:	mov	x0, x23
    92c8:	bl	0 <grub_free>
    92cc:	ldr	w0, [x19, #28]
    92d0:	cmp	w0, w26
    92d4:	b.ge	934c <grub_menu_entry_run+0x1f94>  // b.tcont
    92d8:	mov	w0, #0x2                   	// #2
    92dc:	str	w0, [x19, #40]
    92e0:	mov	x0, x20
    92e4:	bl	0 <grub_free>
    92e8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    92ec:	ldr	x1, [x22]
    92f0:	ldr	x0, [x0]
    92f4:	blr	x1
    92f8:	mov	w1, w21
    92fc:	bl	0 <grub_xasprintf>
    9300:	ldr	x1, [x19, #56]
    9304:	mov	x20, x0
    9308:	mov	x0, x1
    930c:	ldr	x1, [x1, #56]
    9310:	blr	x1
    9314:	sub	w0, w0, #0x1
    9318:	and	w0, w0, #0xffff
    931c:	cmp	w0, #0x8
    9320:	b.ls	9378 <grub_menu_entry_run+0x1fc0>  // b.plast
    9324:	ldr	w23, [x19, #40]
    9328:	ldr	x24, [x19, #56]
    932c:	b	918c <grub_menu_entry_run+0x1dd4>
    9330:	ldp	x23, x24, [sp, #64]
    9334:	ldp	x25, x26, [sp, #80]
    9338:	ldp	x29, x30, [sp, #16]
    933c:	ldp	x19, x20, [sp, #32]
    9340:	ldp	x21, x22, [sp, #48]
    9344:	add	sp, sp, #0x60
    9348:	ret
    934c:	mov	w0, #0x1                   	// #1
    9350:	mov	w25, #0x3                   	// #3
    9354:	mov	w23, w0
    9358:	str	w0, [x19, #40]
    935c:	ldr	x24, [x19, #56]
    9360:	b	9198 <grub_menu_entry_run+0x1de0>
    9364:	bl	0 <grub_print_error>
    9368:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    936c:	ldr	x0, [x0]
    9370:	str	wzr, [x0]
    9374:	b	9338 <grub_menu_entry_run+0x1f80>
    9378:	mov	w0, #0x3                   	// #3
    937c:	mov	w25, #0x0                   	// #0
    9380:	mov	w23, w0
    9384:	str	w0, [x19, #40]
    9388:	ldr	x24, [x19, #56]
    938c:	b	9198 <grub_menu_entry_run+0x1de0>
	...

00000000000093b0 <grub_getstringwidth>:
    93b0:	stp	x29, x30, [sp, #-96]!
    93b4:	cmp	x0, x1
    93b8:	mov	x29, sp
    93bc:	str	x23, [sp, #48]
    93c0:	b.cs	94cc <grub_getstringwidth+0x11c>  // b.hs, b.nlast
    93c4:	stp	x19, x20, [sp, #16]
    93c8:	mov	x19, x0
    93cc:	mov	x20, #0x0                   	// #0
    93d0:	stp	x21, x22, [sp, #32]
    93d4:	mov	x22, x1
    93d8:	mov	x21, x2
    93dc:	nop
    93e0:	ldrh	w3, [sp, #70]
    93e4:	sub	x1, x22, x19
    93e8:	add	x2, sp, #0x40
    93ec:	mov	x0, x19
    93f0:	and	w3, w3, #0xfffff807
    93f4:	asr	x1, x1, #2
    93f8:	strh	w3, [sp, #70]
    93fc:	bl	dc58 <grub_unicode_aglomerate_comb>
    9400:	mov	x4, x0
    9404:	ldr	w2, [sp, #64]
    9408:	add	x1, sp, #0x40
    940c:	mov	x0, x21
    9410:	add	x19, x19, x4, lsl #2
    9414:	and	w3, w2, #0x7fffff
    9418:	cmp	w3, #0x9
    941c:	b.eq	94c4 <grub_getstringwidth+0x114>  // b.none
    9420:	ldr	x4, [x21, #48]
    9424:	mov	x3, #0x1                   	// #1
    9428:	cbz	x4, 946c <grub_getstringwidth+0xbc>
    942c:	blr	x4
    9430:	mov	x3, x0
    9434:	ldrh	w0, [sp, #70]
    9438:	add	x20, x20, x3
    943c:	mov	x23, x20
    9440:	ubfx	x0, x0, #3, #8
    9444:	cmp	w0, #0x2
    9448:	b.hi	94b0 <grub_getstringwidth+0x100>  // b.pmore
    944c:	cmp	x22, x19
    9450:	b.hi	93e0 <grub_getstringwidth+0x30>  // b.pmore
    9454:	mov	x0, x23
    9458:	ldp	x19, x20, [sp, #16]
    945c:	ldp	x21, x22, [sp, #32]
    9460:	ldr	x23, [sp, #48]
    9464:	ldp	x29, x30, [sp], #96
    9468:	ret
    946c:	ldr	w1, [x21, #120]
    9470:	and	w0, w2, #0x7fffff
    9474:	and	w2, w1, #0x38
    9478:	and	w1, w1, #0x30
    947c:	cmp	w2, #0x20
    9480:	ccmp	w1, #0x10, #0x4, ne  // ne = any
    9484:	b.ne	9434 <grub_getstringwidth+0x84>  // b.any
    9488:	bl	dab0 <grub_unicode_get_comb_type>
    948c:	cmp	w0, #0x0
    9490:	ldrh	w0, [sp, #70]
    9494:	cset	x3, eq  // eq = none
    9498:	add	x20, x20, x3
    949c:	mov	x23, x20
    94a0:	ubfx	x0, x0, #3, #8
    94a4:	cmp	w0, #0x2
    94a8:	b.ls	944c <grub_getstringwidth+0x9c>  // b.plast
    94ac:	nop
    94b0:	ldr	x0, [sp, #88]
    94b4:	bl	0 <grub_free>
    94b8:	cmp	x22, x19
    94bc:	b.hi	93e0 <grub_getstringwidth+0x30>  // b.pmore
    94c0:	b	9454 <grub_getstringwidth+0xa4>
    94c4:	mov	x3, #0x8                   	// #8
    94c8:	b	9434 <grub_getstringwidth+0x84>
    94cc:	mov	x23, #0x0                   	// #0
    94d0:	mov	x0, x23
    94d4:	ldr	x23, [sp, #48]
    94d8:	ldp	x29, x30, [sp], #96
    94dc:	ret

00000000000094e0 <grub_print_message_indented>:
    94e0:	sub	sp, sp, #0x50
    94e4:	stp	x29, x30, [sp, #16]
    94e8:	add	x29, sp, #0x10
    94ec:	stp	x19, x20, [sp, #32]
    94f0:	stp	x21, x22, [sp, #48]
    94f4:	mov	w21, w1
    94f8:	mov	w22, w2
    94fc:	stp	x23, x24, [sp, #64]
    9500:	mov	x23, x3
    9504:	mov	x24, x0
    9508:	bl	0 <grub_strlen>
    950c:	add	x20, x0, #0x2
    9510:	lsl	x0, x20, #2
    9514:	bl	0 <grub_malloc>
    9518:	cbz	x0, 957c <grub_print_message_indented+0x9c>
    951c:	mov	x19, x0
    9520:	mov	x2, x24
    9524:	mov	x1, x20
    9528:	mov	x4, #0x0                   	// #0
    952c:	mov	x3, #0xffffffffffffffff    	// #-1
    9530:	bl	d8d8 <grub_utf8_to_ucs4>
    9534:	str	wzr, [x19, x0, lsl #2]
    9538:	add	x1, x19, x0, lsl #2
    953c:	str	xzr, [sp]
    9540:	mov	x4, x23
    9544:	mov	w3, w22
    9548:	mov	w2, w21
    954c:	mov	x0, x19
    9550:	mov	w7, #0x0                   	// #0
    9554:	mov	w6, #0xffffffff            	// #-1
    9558:	mov	w5, #0x0                   	// #0
    955c:	bl	c150 <grub_print_ucs4_menu>
    9560:	mov	x0, x19
    9564:	ldp	x29, x30, [sp, #16]
    9568:	ldp	x19, x20, [sp, #32]
    956c:	ldp	x21, x22, [sp, #48]
    9570:	ldp	x23, x24, [sp, #64]
    9574:	add	sp, sp, #0x50
    9578:	b	0 <grub_free>
    957c:	ldp	x29, x30, [sp, #16]
    9580:	ldp	x19, x20, [sp, #32]
    9584:	ldp	x21, x22, [sp, #48]
    9588:	ldp	x23, x24, [sp, #64]
    958c:	add	sp, sp, #0x50
    9590:	ret
    9594:	nop

0000000000009598 <grub_menu_init_page>:
    9598:	stp	x29, x30, [sp, #-128]!
    959c:	mov	x29, sp
    95a0:	stp	x27, x28, [sp, #80]
    95a4:	mov	x27, x2
    95a8:	mov	x28, x3
    95ac:	ldr	x2, [x3, #56]
    95b0:	stp	x19, x20, [sp, #16]
    95b4:	mov	w19, #0x2                   	// #2
    95b8:	stp	x21, x22, [sp, #32]
    95bc:	mov	w20, #0x1                   	// #1
    95c0:	mov	w22, w1
    95c4:	stp	x23, x24, [sp, #48]
    95c8:	mov	w21, w0
    95cc:	mov	x0, x3
    95d0:	str	w19, [x27, #8]
    95d4:	str	w20, [x27, #24]
    95d8:	blr	x2
    95dc:	ands	w0, w0, #0xffff
    95e0:	ldr	x1, [x28, #56]
    95e4:	sub	w0, w0, #0x5
    95e8:	mov	w3, #0x4b                  	// #75
    95ec:	mov	w2, #0x4                   	// #4
    95f0:	csel	w0, w0, w3, ne  // ne = any
    95f4:	str	w2, [x27, #4]
    95f8:	str	w0, [x27, #12]
    95fc:	mov	x0, x28
    9600:	str	w19, [x27, #20]
    9604:	blr	x1
    9608:	lsr	w0, w0, #16
    960c:	ldr	w2, [x27, #20]
    9610:	cmp	w0, #0x0
    9614:	ldr	w1, [x27, #4]
    9618:	sub	w0, w0, #0x3
    961c:	mov	w3, #0x15                  	// #21
    9620:	csel	w0, w0, w3, ne  // ne = any
    9624:	add	w1, w1, w2
    9628:	mov	w3, w20
    962c:	sub	w0, w0, w1
    9630:	str	w0, [x27]
    9634:	mov	x2, x28
    9638:	mov	w1, w22
    963c:	mov	w0, w21
    9640:	bl	8f70 <grub_menu_entry_run+0x1bb8>
    9644:	ldr	w1, [x27]
    9648:	mov	w19, w0
    964c:	ldr	w2, [x27, #12]
    9650:	sub	w0, w1, w0
    9654:	cmp	w0, #0x2
    9658:	b.le	97dc <grub_menu_init_page+0x244>
    965c:	str	w20, [sp, #108]
    9660:	cmp	w2, #0x9
    9664:	b.le	97dc <grub_menu_init_page+0x244>
    9668:	cmp	w0, #0x2
    966c:	b.gt	9840 <grub_menu_init_page+0x2a8>
    9670:	ldr	w3, [x27, #20]
    9674:	add	w2, w1, #0x1
    9678:	sub	w0, w2, w19
    967c:	cmp	w3, #0x2
    9680:	b.eq	9ab8 <grub_menu_init_page+0x520>  // b.none
    9684:	adrp	x6, 0 <grub_normal_free_menu-0x498>
    9688:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    968c:	ldr	w1, [x27, #4]
    9690:	cmp	w0, #0x1
    9694:	ldr	x23, [x6]
    9698:	sub	w1, w1, #0x1
    969c:	ldr	x24, [x3]
    96a0:	stp	w2, w1, [x27]
    96a4:	ldrb	w1, [x23]
    96a8:	str	w1, [sp, #112]
    96ac:	ldrb	w1, [x24]
    96b0:	str	w1, [sp, #116]
    96b4:	b.le	9aa0 <grub_menu_init_page+0x508>
    96b8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    96bc:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    96c0:	str	w0, [x27]
    96c4:	mov	w0, #0x1                   	// #1
    96c8:	ldr	x20, [x1]
    96cc:	str	w0, [sp, #120]
    96d0:	ldr	x0, [x3]
    96d4:	ldrb	w1, [sp, #112]
    96d8:	strb	w1, [x20]
    96dc:	ldrb	w1, [sp, #116]
    96e0:	strb	w1, [x20, #1]
    96e4:	bl	0 <grub_env_get>
    96e8:	mov	x1, x0
    96ec:	mov	x0, x20
    96f0:	bl	35d8 <grub_parse_color_name_pair>
    96f4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    96f8:	ldr	x0, [x0]
    96fc:	bl	0 <grub_env_get>
    9700:	mov	x1, x0
    9704:	add	x0, x20, #0x1
    9708:	bl	35d8 <grub_parse_color_name_pair>
    970c:	ldr	x1, [x28, #80]
    9710:	cbz	x1, 9ad8 <grub_menu_init_page+0x540>
    9714:	mov	x0, x28
    9718:	blr	x1
    971c:	ldr	w3, [x27, #24]
    9720:	ldrb	w1, [x20]
    9724:	ldrb	w0, [x20, #1]
    9728:	strb	w1, [x23]
    972c:	strb	w0, [x24]
    9730:	cbnz	w3, 98cc <grub_menu_init_page+0x334>
    9734:	ldrb	w0, [sp, #112]
    9738:	strb	w0, [x23]
    973c:	ldrb	w0, [sp, #116]
    9740:	strb	w0, [x24]
    9744:	ldp	w0, w1, [x27]
    9748:	add	w1, w1, w0
    974c:	ldr	w0, [sp, #108]
    9750:	add	w1, w1, w3
    9754:	add	w20, w1, w0
    9758:	ldr	w0, [sp, #120]
    975c:	str	w20, [x27, #16]
    9760:	cbz	w0, 9798 <grub_menu_init_page+0x200>
    9764:	ldr	x2, [x28, #72]
    9768:	lsl	w20, w20, #16
    976c:	orr	w1, w20, #0x1
    9770:	mov	x0, x28
    9774:	blr	x2
    9778:	mov	w1, w22
    977c:	mov	w0, w21
    9780:	mov	x2, x28
    9784:	mov	w3, #0x0                   	// #0
    9788:	bl	8f70 <grub_menu_entry_run+0x1bb8>
    978c:	ldr	w0, [x27, #16]
    9790:	add	w19, w0, w19
    9794:	str	w19, [x27, #16]
    9798:	ldr	x1, [x28, #56]
    979c:	mov	x0, x28
    97a0:	blr	x1
    97a4:	ands	w0, w0, #0xffff
    97a8:	ldp	w1, w3, [x27, #8]
    97ac:	sub	w0, w0, #0x1
    97b0:	mov	w2, #0x4f                  	// #79
    97b4:	csel	w0, w0, w2, ne  // ne = any
    97b8:	add	w1, w1, w3
    97bc:	sub	w0, w0, w1
    97c0:	ldp	x19, x20, [sp, #16]
    97c4:	ldp	x21, x22, [sp, #32]
    97c8:	ldp	x23, x24, [sp, #48]
    97cc:	str	w0, [x27, #28]
    97d0:	ldp	x27, x28, [sp, #80]
    97d4:	ldp	x29, x30, [sp], #128
    97d8:	ret
    97dc:	ldp	w6, w3, [x27, #4]
    97e0:	add	w7, w1, #0x4
    97e4:	add	w8, w2, #0x1
    97e8:	sub	w0, w7, w19
    97ec:	sub	w6, w6, #0x2
    97f0:	sub	w3, w3, #0x1
    97f4:	stp	w7, w6, [x27]
    97f8:	cmp	w0, #0x2
    97fc:	stp	w3, w8, [x27, #8]
    9800:	b.gt	9a8c <grub_menu_init_page+0x4f4>
    9804:	add	w2, w2, #0x3
    9808:	add	w1, w1, #0x6
    980c:	cmp	w2, #0x0
    9810:	mov	w7, w2
    9814:	sub	w6, w6, #0x1
    9818:	sub	w3, w3, #0x1
    981c:	mov	w2, #0x1                   	// #1
    9820:	csel	w2, w2, w7, le
    9824:	stp	w1, w6, [x27]
    9828:	sub	w0, w1, w19
    982c:	stp	w3, w2, [x27, #8]
    9830:	cmp	w0, #0x2
    9834:	str	wzr, [x27, #24]
    9838:	str	wzr, [sp, #108]
    983c:	b.le	9670 <grub_menu_init_page+0xd8>
    9840:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    9844:	adrp	x6, 0 <grub_normal_free_menu-0x498>
    9848:	adrp	x7, 0 <grub_normal_free_menu-0x498>
    984c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9850:	ldr	x24, [x3]
    9854:	str	w0, [x27]
    9858:	ldr	x23, [x6]
    985c:	mov	w0, #0x1                   	// #1
    9860:	ldr	x20, [x1]
    9864:	str	w0, [sp, #120]
    9868:	ldrb	w2, [x24]
    986c:	ldr	x0, [x7]
    9870:	strb	w2, [x20, #1]
    9874:	ldrb	w1, [x23]
    9878:	strb	w1, [x20]
    987c:	stp	w1, w2, [sp, #112]
    9880:	bl	0 <grub_env_get>
    9884:	mov	x1, x0
    9888:	mov	x0, x20
    988c:	bl	35d8 <grub_parse_color_name_pair>
    9890:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9894:	ldr	x0, [x0]
    9898:	bl	0 <grub_env_get>
    989c:	mov	x1, x0
    98a0:	add	x0, x20, #0x1
    98a4:	bl	35d8 <grub_parse_color_name_pair>
    98a8:	ldr	w1, [sp, #108]
    98ac:	mov	x0, x28
    98b0:	bl	568 <grub_normal_init_page>
    98b4:	ldr	w3, [x27, #24]
    98b8:	ldrb	w1, [x20]
    98bc:	ldrb	w0, [x20, #1]
    98c0:	strb	w1, [x23]
    98c4:	strb	w0, [x24]
    98c8:	cbz	w3, 9734 <grub_menu_init_page+0x19c>
    98cc:	ldr	x2, [x28, #88]
    98d0:	stp	x25, x26, [sp, #64]
    98d4:	cbz	x2, 98e4 <grub_menu_init_page+0x34c>
    98d8:	mov	x0, x28
    98dc:	mov	w1, #0x1                   	// #1
    98e0:	blr	x2
    98e4:	ldp	w3, w6, [x27, #4]
    98e8:	mov	w1, #0x0                   	// #0
    98ec:	ldr	x7, [x28, #72]
    98f0:	sub	w6, w6, #0x1
    98f4:	sub	w3, w3, #0x1
    98f8:	mov	x0, x28
    98fc:	bfxil	w1, w6, #0, #16
    9900:	mov	w20, #0x0                   	// #0
    9904:	bfi	w1, w3, #16, #16
    9908:	blr	x7
    990c:	mov	w0, #0x250f                	// #9487
    9910:	mov	x1, x28
    9914:	bl	bf40 <grub_putcode>
    9918:	ldr	w0, [x27, #12]
    991c:	tbnz	w0, #31, 993c <grub_menu_init_page+0x3a4>
    9920:	mov	w0, #0x2501                	// #9473
    9924:	mov	x1, x28
    9928:	bl	bf40 <grub_putcode>
    992c:	add	w20, w20, #0x1
    9930:	ldr	w0, [x27, #12]
    9934:	cmp	w20, w0
    9938:	b.le	9920 <grub_menu_init_page+0x388>
    993c:	mov	x1, x28
    9940:	mov	w0, #0x2513                	// #9491
    9944:	bl	bf40 <grub_putcode>
    9948:	mov	w20, #0x0                   	// #0
    994c:	ldr	w3, [x27]
    9950:	cmp	w3, #0x0
    9954:	b.le	99dc <grub_menu_init_page+0x444>
    9958:	ldp	w1, w6, [x27, #4]
    995c:	and	w3, w20, #0xffff
    9960:	ldr	x7, [x28, #72]
    9964:	sub	w6, w6, #0x1
    9968:	add	w1, w1, w20, uxth
    996c:	mov	x0, x28
    9970:	bfxil	w25, w6, #0, #16
    9974:	str	w3, [sp, #124]
    9978:	bfi	w25, w1, #16, #16
    997c:	add	w20, w20, #0x1
    9980:	mov	w1, w25
    9984:	blr	x7
    9988:	mov	x1, x28
    998c:	mov	w0, #0x2503                	// #9475
    9990:	bl	bf40 <grub_putcode>
    9994:	ldp	w6, w1, [x27, #4]
    9998:	mov	x0, x28
    999c:	ldr	w7, [x27, #12]
    99a0:	ldr	w3, [sp, #124]
    99a4:	add	w1, w1, w7
    99a8:	add	w3, w3, w6
    99ac:	add	w1, w1, #0x1
    99b0:	ldr	x6, [x28, #72]
    99b4:	bfxil	w26, w1, #0, #16
    99b8:	bfi	w26, w3, #16, #16
    99bc:	mov	w1, w26
    99c0:	blr	x6
    99c4:	mov	x1, x28
    99c8:	mov	w0, #0x2503                	// #9475
    99cc:	bl	bf40 <grub_putcode>
    99d0:	ldr	w3, [x27]
    99d4:	cmp	w20, w3
    99d8:	b.lt	9958 <grub_menu_init_page+0x3c0>  // b.tstop
    99dc:	ldp	w2, w6, [x27, #4]
    99e0:	mov	w1, #0x0                   	// #0
    99e4:	ldr	x7, [x28, #72]
    99e8:	sub	w6, w6, #0x1
    99ec:	add	w3, w2, w3
    99f0:	mov	x0, x28
    99f4:	bfxil	w1, w6, #0, #16
    99f8:	mov	w25, #0x0                   	// #0
    99fc:	bfi	w1, w3, #16, #16
    9a00:	blr	x7
    9a04:	mov	w0, #0x2517                	// #9495
    9a08:	mov	x1, x28
    9a0c:	bl	bf40 <grub_putcode>
    9a10:	ldr	w0, [x27, #12]
    9a14:	tbnz	w0, #31, 9a34 <grub_menu_init_page+0x49c>
    9a18:	mov	w0, #0x2501                	// #9473
    9a1c:	mov	x1, x28
    9a20:	bl	bf40 <grub_putcode>
    9a24:	add	w25, w25, #0x1
    9a28:	ldr	w0, [x27, #12]
    9a2c:	cmp	w25, w0
    9a30:	b.le	9a18 <grub_menu_init_page+0x480>
    9a34:	mov	x1, x28
    9a38:	mov	w0, #0x251b                	// #9499
    9a3c:	bl	bf40 <grub_putcode>
    9a40:	ldr	x2, [x28, #88]
    9a44:	cbz	x2, 9a54 <grub_menu_init_page+0x4bc>
    9a48:	mov	x0, x28
    9a4c:	mov	w1, #0x1                   	// #1
    9a50:	blr	x2
    9a54:	ldp	w6, w2, [x27]
    9a58:	mov	w1, #0x0                   	// #0
    9a5c:	ldr	w3, [x27, #8]
    9a60:	mov	x0, x28
    9a64:	add	w2, w2, w6
    9a68:	ldr	x6, [x28, #72]
    9a6c:	sub	w3, w3, #0x1
    9a70:	add	w2, w2, #0x1
    9a74:	bfxil	w1, w3, #0, #16
    9a78:	bfi	w1, w2, #16, #16
    9a7c:	blr	x6
    9a80:	ldr	w3, [x27, #24]
    9a84:	ldp	x25, x26, [sp, #64]
    9a88:	b	9734 <grub_menu_init_page+0x19c>
    9a8c:	cmp	w8, #0x9
    9a90:	b.le	9804 <grub_menu_init_page+0x26c>
    9a94:	mov	w1, w7
    9a98:	str	wzr, [sp, #108]
    9a9c:	b	9668 <grub_menu_init_page+0xd0>
    9aa0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9aa4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9aa8:	str	wzr, [sp, #120]
    9aac:	ldr	x20, [x1]
    9ab0:	ldr	x0, [x0]
    9ab4:	b	96d4 <grub_menu_init_page+0x13c>
    9ab8:	mov	w3, #0x1                   	// #1
    9abc:	str	w2, [x27]
    9ac0:	str	w3, [x27, #20]
    9ac4:	cmp	w0, #0x2
    9ac8:	b.gt	9840 <grub_menu_init_page+0x2a8>
    9acc:	add	w2, w1, #0x2
    9ad0:	sub	w0, w2, w19
    9ad4:	b	9684 <grub_menu_init_page+0xec>
    9ad8:	mov	x1, x28
    9adc:	mov	w0, #0xa                   	// #10
    9ae0:	bl	bf40 <grub_putcode>
    9ae4:	ldr	x1, [x28, #104]
    9ae8:	cbnz	x1, 9714 <grub_menu_init_page+0x17c>
    9aec:	b	971c <grub_menu_init_page+0x184>
	...

0000000000009b18 <grub_menu_try_text>:
    9b18:	stp	x29, x30, [sp, #-64]!
    9b1c:	mov	x29, sp
    9b20:	stp	x21, x22, [sp, #32]
    9b24:	mov	x21, x0
    9b28:	mov	x22, x2
    9b2c:	mov	x0, #0x30                  	// #48
    9b30:	stp	x23, x24, [sp, #48]
    9b34:	mov	w24, w1
    9b38:	mov	w23, w3
    9b3c:	bl	0 <grub_zalloc>
    9b40:	cbz	x0, 9c18 <grub_menu_try_text+0x100>
    9b44:	stp	x19, x20, [sp, #16]
    9b48:	mov	x20, x0
    9b4c:	mov	x0, #0x40                  	// #64
    9b50:	bl	0 <grub_zalloc>
    9b54:	mov	x19, x0
    9b58:	cbz	x0, 9c34 <grub_menu_try_text+0x11c>
    9b5c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    9b60:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    9b64:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9b68:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9b6c:	ldr	x2, [x2]
    9b70:	str	x21, [x19, #56]
    9b74:	ldr	x3, [x3]
    9b78:	str	x2, [x20, #24]
    9b7c:	ldr	x1, [x1]
    9b80:	stp	x19, x3, [x20, #8]
    9b84:	ldr	x0, [x0]
    9b88:	ldr	x2, [x21, #96]
    9b8c:	stp	x1, x0, [x20, #32]
    9b90:	stp	wzr, w24, [x19]
    9b94:	str	x22, [x19, #48]
    9b98:	cbz	x2, 9bac <grub_menu_try_text+0x94>
    9b9c:	mov	x0, x21
    9ba0:	mov	w1, #0x0                   	// #0
    9ba4:	blr	x2
    9ba8:	ldr	x21, [x19, #56]
    9bac:	mov	w0, w23
    9bb0:	mov	w1, #0x0                   	// #0
    9bb4:	mov	x3, x21
    9bb8:	add	x2, x19, #0x8
    9bbc:	bl	9598 <grub_menu_init_page>
    9bc0:	ldp	w1, w0, [x19, #4]
    9bc4:	cmp	w0, w1
    9bc8:	b.gt	9bdc <grub_menu_try_text+0xc4>
    9bcc:	sub	w0, w0, #0x1
    9bd0:	str	w0, [x19, #4]
    9bd4:	sub	w0, w1, w0
    9bd8:	str	w0, [x19]
    9bdc:	mov	x0, x22
    9be0:	mov	x1, x19
    9be4:	bl	8b80 <grub_menu_entry_run+0x17c8>
    9be8:	ldr	x0, [x19, #56]
    9bec:	ldr	x1, [x0, #104]
    9bf0:	cbz	x1, 9bf8 <grub_menu_try_text+0xe0>
    9bf4:	blr	x1
    9bf8:	mov	x0, x20
    9bfc:	bl	4c98 <grub_menu_register_viewer>
    9c00:	ldp	x19, x20, [sp, #16]
    9c04:	mov	w0, #0x0                   	// #0
    9c08:	ldp	x21, x22, [sp, #32]
    9c0c:	ldp	x23, x24, [sp, #48]
    9c10:	ldp	x29, x30, [sp], #64
    9c14:	ret
    9c18:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9c1c:	ldp	x21, x22, [sp, #32]
    9c20:	ldr	x0, [x0]
    9c24:	ldp	x23, x24, [sp, #48]
    9c28:	ldr	w0, [x0]
    9c2c:	ldp	x29, x30, [sp], #64
    9c30:	ret
    9c34:	mov	x0, x20
    9c38:	bl	0 <grub_free>
    9c3c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9c40:	ldp	x19, x20, [sp, #16]
    9c44:	ldr	x0, [x0]
    9c48:	ldr	w0, [x0]
    9c4c:	b	9c08 <grub_menu_try_text+0xf0>
	...

0000000000009c78 <grub_get_human_size>:
    9c78:	stp	x29, x30, [sp, #-64]!
    9c7c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    9c80:	mov	x29, sp
    9c84:	stp	x21, x22, [sp, #32]
    9c88:	mov	w21, w1
    9c8c:	cmp	w21, #0x2
    9c90:	ldr	x1, [x2]
    9c94:	stp	x19, x20, [sp, #16]
    9c98:	mov	x22, x0
    9c9c:	ldr	x3, [x1]
    9ca0:	b.eq	9db8 <grub_get_human_size+0x140>  // b.none
    9ca4:	add	x2, x0, x0, lsl #1
    9ca8:	mov	x0, #0x8fff                	// #36863
    9cac:	movk	x0, #0x1, lsl #16
    9cb0:	add	x2, x22, x2, lsl #3
    9cb4:	cmp	x0, x2, lsl #2
    9cb8:	lsl	x19, x2, #2
    9cbc:	b.cs	9d60 <grub_get_human_size+0xe8>  // b.hs, b.nlast
    9cc0:	mov	x4, #0x8fff                	// #36863
    9cc4:	mov	w20, #0x0                   	// #0
    9cc8:	movk	x4, #0x1, lsl #16
    9ccc:	nop
    9cd0:	add	x2, x19, #0x200
    9cd4:	add	w20, w20, #0x1
    9cd8:	cmp	x4, x2, lsr #10
    9cdc:	lsr	x19, x2, #10
    9ce0:	b.cc	9cd0 <grub_get_human_size+0x58>  // b.lo, b.ul, b.last
    9ce4:	ubfiz	x1, x21, #1, #32
    9ce8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9cec:	add	x1, x1, w21, uxtw
    9cf0:	ldr	x0, [x0]
    9cf4:	lsl	x1, x1, #1
    9cf8:	add	x1, x1, w20, uxtw
    9cfc:	ldr	x0, [x0, x1, lsl #3]
    9d00:	blr	x3
    9d04:	cmp	w20, #0x0
    9d08:	mov	x20, x0
    9d0c:	ccmp	w21, #0x2, #0x4, eq  // eq = none
    9d10:	b.ne	9d80 <grub_get_human_size+0x108>  // b.any
    9d14:	add	x2, sp, #0x38
    9d18:	mov	x0, x19
    9d1c:	mov	x1, #0x64                  	// #100
    9d20:	bl	0 <grub_divmod64>
    9d24:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9d28:	adrp	x6, 0 <grub_normal_free_menu-0x498>
    9d2c:	ldr	x4, [sp, #56]
    9d30:	mov	x3, x0
    9d34:	ldr	x2, [x1]
    9d38:	mov	x5, x20
    9d3c:	ldr	x19, [x6]
    9d40:	mov	x1, #0x1e                  	// #30
    9d44:	mov	x0, x19
    9d48:	bl	0 <grub_snprintf>
    9d4c:	mov	x0, x19
    9d50:	ldp	x19, x20, [sp, #16]
    9d54:	ldp	x21, x22, [sp, #32]
    9d58:	ldp	x29, x30, [sp], #64
    9d5c:	ret
    9d60:	ubfiz	x1, x21, #1, #32
    9d64:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9d68:	add	x1, x1, w21, uxtw
    9d6c:	ldr	x0, [x0]
    9d70:	lsl	x1, x1, #4
    9d74:	ldr	x0, [x0, x1]
    9d78:	blr	x3
    9d7c:	mov	x20, x0
    9d80:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9d84:	adrp	x6, 0 <grub_normal_free_menu-0x498>
    9d88:	mov	x4, x20
    9d8c:	mov	x3, x22
    9d90:	ldr	x2, [x0]
    9d94:	mov	x1, #0x1e                  	// #30
    9d98:	ldr	x19, [x6]
    9d9c:	mov	x0, x19
    9da0:	bl	0 <grub_snprintf>
    9da4:	mov	x0, x19
    9da8:	ldp	x19, x20, [sp, #16]
    9dac:	ldp	x21, x22, [sp, #32]
    9db0:	ldp	x29, x30, [sp], #64
    9db4:	ret
    9db8:	mov	x19, x0
    9dbc:	mov	x0, #0x8fff                	// #36863
    9dc0:	movk	x0, #0x1, lsl #16
    9dc4:	cmp	x22, x0
    9dc8:	b.hi	9cc0 <grub_get_human_size+0x48>  // b.pmore
    9dcc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9dd0:	ldr	x0, [x0]
    9dd4:	blr	x3
    9dd8:	mov	x20, x0
    9ddc:	b	9d14 <grub_get_human_size+0x9c>
	...

0000000000009e10 <grub_normal_print_device_info>:
    9e10:	stp	x29, x30, [sp, #-112]!
    9e14:	mov	w1, #0x2c                  	// #44
    9e18:	mov	x29, sp
    9e1c:	stp	x19, x20, [sp, #16]
    9e20:	mov	x19, x0
    9e24:	stp	x21, x22, [sp, #32]
    9e28:	stp	x23, x24, [sp, #48]
    9e2c:	bl	0 <grub_strchr>
    9e30:	cbz	x0, a0d0 <grub_normal_print_device_info+0x2c0>
    9e34:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9e38:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9e3c:	ldr	x20, [x1]
    9e40:	ldr	x0, [x0]
    9e44:	ldr	x1, [x20]
    9e48:	blr	x1
    9e4c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9e50:	mov	x1, x19
    9e54:	ldr	x0, [x0]
    9e58:	bl	0 <grub_printf_>
    9e5c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9e60:	ldr	x1, [x20]
    9e64:	ldr	x23, [x0]
    9e68:	mov	x0, x23
    9e6c:	blr	x1
    9e70:	mov	x0, x19
    9e74:	bl	0 <grub_device_open>
    9e78:	mov	x19, x0
    9e7c:	cbz	x0, a090 <grub_normal_print_device_info+0x280>
    9e80:	ldr	x1, [x0]
    9e84:	cbz	x1, a058 <grub_normal_print_device_info+0x248>
    9e88:	bl	0 <grub_fs_probe>
    9e8c:	mov	x22, x0
    9e90:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9e94:	ldr	x21, [x1]
    9e98:	str	wzr, [x21]
    9e9c:	cbz	x0, a100 <grub_normal_print_device_info+0x2f0>
    9ea0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9ea4:	ldr	x24, [x22, #16]
    9ea8:	ldr	x1, [x0]
    9eac:	mov	x0, x24
    9eb0:	bl	0 <grub_strcmp>
    9eb4:	cmp	w0, #0x0
    9eb8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    9ebc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9ec0:	ldr	x0, [x2]
    9ec4:	ldr	x1, [x1]
    9ec8:	csel	x1, x24, x1, ne  // ne = any
    9ecc:	bl	0 <grub_printf_>
    9ed0:	ldr	x2, [x22, #56]
    9ed4:	cbz	x2, 9f24 <grub_normal_print_device_info+0x114>
    9ed8:	add	x1, sp, #0x68
    9edc:	mov	x0, x19
    9ee0:	blr	x2
    9ee4:	ldr	w0, [x21]
    9ee8:	cbnz	w0, 9f20 <grub_normal_print_device_info+0x110>
    9eec:	ldr	x0, [sp, #104]
    9ef0:	cbz	x0, 9f1c <grub_normal_print_device_info+0x10c>
    9ef4:	bl	0 <grub_strlen>
    9ef8:	cbz	x0, 9f18 <grub_normal_print_device_info+0x108>
    9efc:	ldr	x1, [x20]
    9f00:	mov	x0, x23
    9f04:	blr	x1
    9f08:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9f0c:	ldr	x1, [sp, #104]
    9f10:	ldr	x0, [x0]
    9f14:	bl	0 <grub_printf_>
    9f18:	ldr	x0, [sp, #104]
    9f1c:	bl	0 <grub_free>
    9f20:	str	wzr, [x21]
    9f24:	ldr	x2, [x22, #72]
    9f28:	cbz	x2, 9f44 <grub_normal_print_device_info+0x134>
    9f2c:	add	x1, sp, #0x64
    9f30:	mov	x0, x19
    9f34:	blr	x2
    9f38:	ldr	w0, [x21]
    9f3c:	cbz	w0, a164 <grub_normal_print_device_info+0x354>
    9f40:	str	wzr, [x21]
    9f44:	ldr	x2, [x22, #64]
    9f48:	cbz	x2, 9f7c <grub_normal_print_device_info+0x16c>
    9f4c:	add	x1, sp, #0x68
    9f50:	mov	x0, x19
    9f54:	blr	x2
    9f58:	ldr	w0, [x21]
    9f5c:	cbnz	w0, 9f78 <grub_normal_print_device_info+0x168>
    9f60:	ldr	x0, [sp, #104]
    9f64:	cbz	x0, 9f74 <grub_normal_print_device_info+0x164>
    9f68:	bl	0 <grub_strlen>
    9f6c:	cbnz	x0, a1dc <grub_normal_print_device_info+0x3cc>
    9f70:	ldr	x0, [sp, #104]
    9f74:	bl	0 <grub_free>
    9f78:	str	wzr, [x21]
    9f7c:	ldr	x0, [x19]
    9f80:	ldr	x1, [x0, #40]
    9f84:	cbz	x1, a148 <grub_normal_print_device_info+0x338>
    9f88:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    9f8c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    9f90:	ldr	x1, [x1]
    9f94:	ldr	x0, [x0]
    9f98:	ldr	x1, [x1]
    9f9c:	blr	x1
    9fa0:	ldr	x1, [x19]
    9fa4:	ldr	x2, [x1, #40]
    9fa8:	cbz	x2, a1f4 <grub_normal_print_device_info+0x3e4>
    9fac:	mov	x3, x2
    9fb0:	mov	x1, #0x0                   	// #0
    9fb4:	nop
    9fb8:	ldr	x4, [x3, #8]
    9fbc:	ldr	x3, [x3, #40]
    9fc0:	add	x1, x1, x4
    9fc4:	cbnz	x3, 9fb8 <grub_normal_print_device_info+0x1a8>
    9fc8:	lsr	x1, x1, #1
    9fcc:	mov	x3, #0x0                   	// #0
    9fd0:	ldr	x4, [x2, #8]
    9fd4:	ldr	x2, [x2, #40]
    9fd8:	add	x3, x3, x4
    9fdc:	cbnz	x2, 9fd0 <grub_normal_print_device_info+0x1c0>
    9fe0:	tbz	w3, #0, a0c4 <grub_normal_print_device_info+0x2b4>
    9fe4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    9fe8:	ldr	x2, [x2]
    9fec:	bl	0 <grub_printf>
    9ff0:	ldr	x0, [x19]
    9ff4:	bl	0 <grub_disk_get_size>
    9ff8:	cmn	x0, #0x1
    9ffc:	b.eq	a138 <grub_normal_print_device_info+0x328>  // b.none
    a000:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    a004:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a008:	ldr	x24, [x1]
    a00c:	ldr	x0, [x0]
    a010:	ldr	x1, [x24]
    a014:	blr	x1
    a018:	mov	x22, x0
    a01c:	ldr	x0, [x19]
    a020:	bl	0 <grub_disk_get_size>
    a024:	lsr	x23, x0, #1
    a028:	ldr	x0, [x19]
    a02c:	bl	0 <grub_disk_get_size>
    a030:	tbz	w0, #0, a12c <grub_normal_print_device_info+0x31c>
    a034:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a038:	ldr	x1, [x24]
    a03c:	ldr	x0, [x0]
    a040:	blr	x1
    a044:	mov	x2, x0
    a048:	mov	x1, x23
    a04c:	mov	x0, x22
    a050:	bl	0 <grub_printf>
    a054:	b	a060 <grub_normal_print_device_info+0x250>
    a058:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a05c:	ldr	x21, [x0]
    a060:	mov	x0, x19
    a064:	bl	0 <grub_device_close>
    a068:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a06c:	ldr	x1, [x20]
    a070:	ldr	x0, [x0]
    a074:	blr	x1
    a078:	ldr	w0, [x21]
    a07c:	ldp	x19, x20, [sp, #16]
    a080:	ldp	x21, x22, [sp, #32]
    a084:	ldp	x23, x24, [sp, #48]
    a088:	ldp	x29, x30, [sp], #112
    a08c:	ret
    a090:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    a094:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a098:	ldr	x1, [x1]
    a09c:	ldr	x0, [x0]
    a0a0:	ldr	x1, [x1]
    a0a4:	blr	x1
    a0a8:	mov	x1, x0
    a0ac:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    a0b0:	ldr	x0, [x2]
    a0b4:	bl	0 <grub_printf>
    a0b8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a0bc:	ldr	x21, [x0]
    a0c0:	b	a068 <grub_normal_print_device_info+0x258>
    a0c4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    a0c8:	ldr	x2, [x2]
    a0cc:	b	9fec <grub_normal_print_device_info+0x1dc>
    a0d0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a0d4:	mov	x1, x19
    a0d8:	ldr	x0, [x0]
    a0dc:	bl	0 <grub_printf_>
    a0e0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    a0e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a0e8:	ldr	x20, [x1]
    a0ec:	ldr	x23, [x0]
    a0f0:	ldr	x1, [x20]
    a0f4:	mov	x0, x23
    a0f8:	blr	x1
    a0fc:	b	9e70 <grub_normal_print_device_info+0x60>
    a100:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    a104:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a108:	ldr	x1, [x1]
    a10c:	ldr	x0, [x0]
    a110:	ldr	x1, [x1]
    a114:	blr	x1
    a118:	mov	x1, x0
    a11c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    a120:	ldr	x0, [x2]
    a124:	bl	0 <grub_printf>
    a128:	b	9f7c <grub_normal_print_device_info+0x16c>
    a12c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a130:	ldr	x2, [x0]
    a134:	b	a048 <grub_normal_print_device_info+0x238>
    a138:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a13c:	ldr	x0, [x0]
    a140:	bl	0 <grub_puts_>
    a144:	b	a060 <grub_normal_print_device_info+0x250>
    a148:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    a14c:	ldr	w1, [x0, #24]
    a150:	mov	w2, #0x1                   	// #1
    a154:	ldr	x0, [x3]
    a158:	lsl	w1, w2, w1
    a15c:	bl	0 <grub_printf_>
    a160:	b	9ff0 <grub_normal_print_device_info+0x1e0>
    a164:	ldr	w0, [sp, #100]
    a168:	add	x1, sp, #0x68
    a16c:	stp	x25, x26, [sp, #64]
    a170:	stp	x27, x28, [sp, #80]
    a174:	bl	45f8 <grub_unixtime2datetime>
    a178:	ldr	x1, [x20]
    a17c:	mov	x0, x23
    a180:	blr	x1
    a184:	ldrb	w25, [sp, #107]
    a188:	ldrb	w26, [sp, #108]
    a18c:	add	x0, sp, #0x68
    a190:	ldrb	w27, [sp, #109]
    a194:	ldrb	w28, [sp, #110]
    a198:	ldrh	w23, [sp, #104]
    a19c:	ldrb	w24, [sp, #106]
    a1a0:	bl	4538 <grub_get_weekday_name>
    a1a4:	mov	x7, x0
    a1a8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a1ac:	mov	w6, w28
    a1b0:	mov	w5, w27
    a1b4:	ldr	x0, [x0]
    a1b8:	mov	w4, w26
    a1bc:	mov	w3, w25
    a1c0:	mov	w2, w24
    a1c4:	mov	w1, w23
    a1c8:	bl	0 <grub_printf_>
    a1cc:	ldp	x25, x26, [sp, #64]
    a1d0:	ldp	x27, x28, [sp, #80]
    a1d4:	str	wzr, [x21]
    a1d8:	b	9f44 <grub_normal_print_device_info+0x134>
    a1dc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a1e0:	ldr	x1, [sp, #104]
    a1e4:	ldr	x0, [x0]
    a1e8:	bl	0 <grub_printf>
    a1ec:	ldr	x0, [sp, #104]
    a1f0:	b	9f74 <grub_normal_print_device_info+0x164>
    a1f4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    a1f8:	mov	x1, #0x0                   	// #0
    a1fc:	ldr	x2, [x2]
    a200:	b	9fec <grub_normal_print_device_info+0x1dc>
    a204:	nop
	...
    a2c0:	stp	x29, x30, [sp, #-48]!
    a2c4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    a2c8:	mov	x29, sp
    a2cc:	stp	x19, x20, [sp, #16]
    a2d0:	ldr	x20, [x1]
    a2d4:	stp	x21, x22, [sp, #32]
    a2d8:	mov	x22, x0
    a2dc:	ldr	w0, [x20]
    a2e0:	cbnz	w0, a35c <grub_normal_print_device_info+0x54c>
    a2e4:	ldr	x19, [x20, #8]
    a2e8:	mov	w1, #0x1                   	// #1
    a2ec:	str	w1, [x20]
    a2f0:	cbz	x19, a358 <grub_normal_print_device_info+0x548>
    a2f4:	adrp	x21, 0 <grub_normal_free_menu-0x498>
    a2f8:	ldrb	w2, [x22]
    a2fc:	mov	x7, x22
    a300:	ldr	x3, [x19, #8]
    a304:	cbnz	w2, a320 <grub_normal_print_device_info+0x510>
    a308:	b	a36c <grub_normal_print_device_info+0x55c>
    a30c:	csel	w4, w4, w1, cc  // cc = lo, ul, last
    a310:	cmp	w4, w0
    a314:	b.ne	a3b0 <grub_normal_print_device_info+0x5a0>  // b.any
    a318:	ldrb	w2, [x7, #1]!
    a31c:	cbz	w2, a36c <grub_normal_print_device_info+0x55c>
    a320:	ldrb	w1, [x3]
    a324:	sub	w8, w2, #0x41
    a328:	cmp	w8, #0x1a
    a32c:	add	w5, w2, #0x20
    a330:	sub	w6, w1, #0x41
    a334:	csel	w0, w5, w2, cc  // cc = lo, ul, last
    a338:	add	x3, x3, #0x1
    a33c:	add	w4, w1, #0x20
    a340:	cmp	w6, #0x1a
    a344:	cbnz	w1, a30c <grub_normal_print_device_info+0x4fc>
    a348:	ldr	x19, [x19]
    a34c:	cbnz	x19, a2f8 <grub_normal_print_device_info+0x4e8>
    a350:	ldr	w0, [x20]
    a354:	sub	w0, w0, #0x1
    a358:	str	w0, [x20]
    a35c:	ldp	x19, x20, [sp, #16]
    a360:	ldp	x21, x22, [sp, #32]
    a364:	ldp	x29, x30, [sp], #48
    a368:	ret
    a36c:	ldrb	w1, [x3]
    a370:	mov	w2, #0x0                   	// #0
    a374:	sub	w6, w1, #0x41
    a378:	cmp	w6, #0x1a
    a37c:	add	w0, w1, #0x20
    a380:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    a384:	cmp	w2, w1
    a388:	b.ne	a348 <grub_normal_print_device_info+0x538>  // b.any
    a38c:	ldr	x0, [x19, #16]
    a390:	bl	0 <grub_dl_load>
    a394:	cbz	x0, a39c <grub_normal_print_device_info+0x58c>
    a398:	bl	0 <grub_dl_ref>
    a39c:	ldr	x0, [x21]
    a3a0:	ldr	x19, [x19]
    a3a4:	str	wzr, [x0]
    a3a8:	cbnz	x19, a2f8 <grub_normal_print_device_info+0x4e8>
    a3ac:	b	a350 <grub_normal_print_device_info+0x540>
    a3b0:	cmp	w8, #0x1a
    a3b4:	csel	w2, w5, w2, cc  // cc = lo, ul, last
    a3b8:	b	a378 <grub_normal_print_device_info+0x568>
    a3bc:	nop
	...

000000000000a3d0 <read_crypto_list>:
    a3d0:	cbz	x0, a570 <read_crypto_list+0x1a0>
    a3d4:	stp	x29, x30, [sp, #-80]!
    a3d8:	mov	x1, x0
    a3dc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a3e0:	mov	x29, sp
    a3e4:	ldr	x0, [x0]
    a3e8:	stp	x19, x20, [sp, #16]
    a3ec:	bl	0 <grub_xasprintf>
    a3f0:	mov	x19, x0
    a3f4:	cbz	x0, a550 <read_crypto_list+0x180>
    a3f8:	mov	w1, #0x32                  	// #50
    a3fc:	stp	x21, x22, [sp, #32]
    a400:	bl	0 <grub_file_open>
    a404:	mov	x22, x0
    a408:	mov	x0, x19
    a40c:	bl	0 <grub_free>
    a410:	cbz	x22, a54c <read_crypto_list+0x17c>
    a414:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a418:	stp	x23, x24, [sp, #48]
    a41c:	ldr	x23, [x0]
    a420:	ldr	x19, [x23, #8]
    a424:	str	x25, [sp, #64]
    a428:	cbz	x19, a454 <read_crypto_list+0x84>
    a42c:	nop
    a430:	mov	x20, x19
    a434:	ldr	x19, [x19]
    a438:	ldr	x0, [x20, #8]
    a43c:	bl	0 <grub_free>
    a440:	ldr	x0, [x20, #16]
    a444:	bl	0 <grub_free>
    a448:	mov	x0, x20
    a44c:	bl	0 <grub_free>
    a450:	cbnz	x19, a430 <read_crypto_list+0x60>
    a454:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a458:	str	xzr, [x23, #8]
    a45c:	ldr	x24, [x0]
    a460:	mov	x0, x22
    a464:	bl	fb68 <grub_file_getline>
    a468:	mov	x21, x0
    a46c:	cbz	x0, a514 <read_crypto_list+0x144>
    a470:	mov	x19, x0
    a474:	b	a47c <read_crypto_list+0xac>
    a478:	add	x19, x19, #0x1
    a47c:	ldrb	w0, [x19]
    a480:	bl	0 <grub_isspace>
    a484:	cbnz	w0, a478 <read_crypto_list+0xa8>
    a488:	mov	x0, x19
    a48c:	mov	w1, #0x3a                  	// #58
    a490:	bl	0 <grub_strchr>
    a494:	cbz	x0, a4fc <read_crypto_list+0x12c>
    a498:	mov	x20, x0
    a49c:	strb	wzr, [x20], #1
    a4a0:	ldrb	w0, [x0, #1]
    a4a4:	cmp	w0, #0x20
    a4a8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    a4ac:	b.ne	a4c0 <read_crypto_list+0xf0>  // b.any
    a4b0:	ldrb	w1, [x20, #1]!
    a4b4:	cmp	w1, #0x20
    a4b8:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    a4bc:	b.eq	a4b0 <read_crypto_list+0xe0>  // b.none
    a4c0:	mov	x0, #0x18                  	// #24
    a4c4:	bl	0 <grub_malloc>
    a4c8:	mov	x25, x0
    a4cc:	cbz	x0, a568 <read_crypto_list+0x198>
    a4d0:	mov	x0, x19
    a4d4:	bl	0 <grub_strdup>
    a4d8:	str	x0, [x25, #8]
    a4dc:	cbz	x0, a580 <read_crypto_list+0x1b0>
    a4e0:	mov	x0, x20
    a4e4:	bl	0 <grub_strdup>
    a4e8:	str	x0, [x25, #16]
    a4ec:	cbz	x0, a590 <read_crypto_list+0x1c0>
    a4f0:	ldr	x0, [x23, #8]
    a4f4:	str	x0, [x25]
    a4f8:	str	x25, [x23, #8]
    a4fc:	mov	x0, x21
    a500:	bl	0 <grub_free>
    a504:	mov	x0, x22
    a508:	bl	fb68 <grub_file_getline>
    a50c:	mov	x21, x0
    a510:	cbnz	x0, a470 <read_crypto_list+0xa0>
    a514:	mov	x0, x22
    a518:	bl	0 <grub_file_close>
    a51c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a520:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    a524:	ldp	x21, x22, [sp, #32]
    a528:	ldr	x0, [x0]
    a52c:	ldr	x1, [x1]
    a530:	ldr	x25, [sp, #64]
    a534:	str	wzr, [x24]
    a538:	str	x1, [x0]
    a53c:	ldp	x19, x20, [sp, #16]
    a540:	ldp	x23, x24, [sp, #48]
    a544:	ldp	x29, x30, [sp], #80
    a548:	ret
    a54c:	ldp	x21, x22, [sp, #32]
    a550:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a554:	ldp	x19, x20, [sp, #16]
    a558:	ldr	x0, [x0]
    a55c:	str	wzr, [x0]
    a560:	ldp	x29, x30, [sp], #80
    a564:	ret
    a568:	str	wzr, [x24]
    a56c:	b	a4fc <read_crypto_list+0x12c>
    a570:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    a574:	ldr	x0, [x0]
    a578:	str	wzr, [x0]
    a57c:	ret
    a580:	mov	x0, x25
    a584:	str	wzr, [x24]
    a588:	bl	0 <grub_free>
    a58c:	b	a4fc <read_crypto_list+0x12c>
    a590:	ldr	x0, [x25, #8]
    a594:	str	wzr, [x24]
    a598:	bl	0 <grub_free>
    a59c:	mov	x0, x25
    a5a0:	bl	0 <grub_free>
    a5a4:	b	a4fc <read_crypto_list+0x12c>
	...
    a5d0:	stp	x29, x30, [sp, #-144]!
    a5d4:	mov	x29, sp
    a5d8:	stp	x21, x22, [sp, #32]
    a5dc:	mov	x22, x0
    a5e0:	mov	w0, #0x1                   	// #1
    a5e4:	stp	xzr, xzr, [sp, #112]
    a5e8:	strb	w0, [sp, #120]
    a5ec:	ldr	w0, [x22]
    a5f0:	stp	x19, x20, [sp, #16]
    a5f4:	mov	x19, x1
    a5f8:	and	w1, w0, #0x7fffff
    a5fc:	stp	xzr, xzr, [sp, #128]
    a600:	cmp	w1, #0x9
    a604:	b.eq	a74c <read_crypto_list+0x37c>  // b.none
    a608:	ldr	w1, [x19, #120]
    a60c:	and	w1, w1, #0x30
    a610:	cmp	w1, #0x10
    a614:	b.eq	a668 <read_crypto_list+0x298>  // b.none
    a618:	ldr	x2, [x19, #40]
    a61c:	mov	x1, x22
    a620:	mov	x0, x19
    a624:	blr	x2
    a628:	ldr	w0, [x22]
    a62c:	and	w0, w0, #0x7fffff
    a630:	cmp	w0, #0xa
    a634:	b.ne	a658 <read_crypto_list+0x288>  // b.any
    a638:	ldr	w1, [sp, #112]
    a63c:	mov	w3, #0xd                   	// #13
    a640:	ldr	x2, [x19, #40]
    a644:	mov	x0, x19
    a648:	bfxil	w1, w3, #0, #23
    a64c:	str	w1, [sp, #112]
    a650:	add	x1, sp, #0x70
    a654:	blr	x2
    a658:	ldp	x19, x20, [sp, #16]
    a65c:	ldp	x21, x22, [sp, #32]
    a660:	ldp	x29, x30, [sp], #144
    a664:	ret
    a668:	ldr	x2, [x19, #48]
    a66c:	stp	x23, x24, [sp, #48]
    a670:	str	x25, [sp, #64]
    a674:	cbz	x2, a85c <read_crypto_list+0x48c>
    a678:	mov	x1, x22
    a67c:	mov	x0, x19
    a680:	blr	x2
    a684:	sxtb	w2, w0
    a688:	ldrh	w0, [x22, #6]
    a68c:	add	x25, x22, #0x18
    a690:	add	x21, sp, #0x70
    a694:	mov	x24, #0xfffffffffffffffc    	// #-4
    a698:	mov	w23, #0xffffffff            	// #-1
    a69c:	strb	w2, [sp, #120]
    a6a0:	ubfx	x1, x0, #3, #8
    a6a4:	nop
    a6a8:	cmn	w23, #0x1
    a6ac:	b.eq	a7cc <read_crypto_list+0x3fc>  // b.none
    a6b0:	tst	w0, #0x7f8
    a6b4:	b.eq	a800 <read_crypto_list+0x430>  // b.none
    a6b8:	cmp	w1, #0x2
    a6bc:	mov	x0, x25
    a6c0:	b.ls	a6c8 <read_crypto_list+0x2f8>  // b.plast
    a6c4:	ldr	x0, [x22, #24]
    a6c8:	ldr	w0, [x0, x24]
    a6cc:	ubfx	x0, x0, #0, #21
    a6d0:	str	w0, [sp, #84]
    a6d4:	add	x2, sp, #0x58
    a6d8:	add	x0, sp, #0x54
    a6dc:	mov	x3, #0x14                  	// #20
    a6e0:	mov	x1, #0x1                   	// #1
    a6e4:	bl	d548 <grub_ucs4_to_utf8>
    a6e8:	add	x20, sp, #0x58
    a6ec:	ldrb	w2, [sp, #88]
    a6f0:	cbz	w2, a720 <read_crypto_list+0x350>
    a6f4:	nop
    a6f8:	ldr	w3, [sp, #112]
    a6fc:	mov	x1, x21
    a700:	ldr	x4, [x19, #40]
    a704:	mov	x0, x19
    a708:	bfxil	w3, w2, #0, #23
    a70c:	str	w3, [sp, #112]
    a710:	blr	x4
    a714:	strb	wzr, [sp, #120]
    a718:	ldrb	w2, [x20, #1]!
    a71c:	cbnz	w2, a6f8 <read_crypto_list+0x328>
    a720:	ldrh	w0, [x22, #6]
    a724:	add	w23, w23, #0x1
    a728:	add	x24, x24, #0x4
    a72c:	ubfx	x1, x0, #3, #8
    a730:	cmp	w1, w23
    a734:	b.gt	a6a8 <read_crypto_list+0x2d8>
    a738:	mov	w0, #0x1                   	// #1
    a73c:	strb	w0, [sp, #120]
    a740:	ldp	x23, x24, [sp, #48]
    a744:	ldr	x25, [sp, #64]
    a748:	b	a628 <read_crypto_list+0x258>
    a74c:	cbnz	w2, a808 <read_crypto_list+0x438>
    a750:	ldr	x1, [x19, #64]
    a754:	cbz	x1, a7ac <read_crypto_list+0x3dc>
    a758:	mov	x0, x19
    a75c:	blr	x1
    a760:	ldr	w1, [sp, #112]
    a764:	mvn	w20, w0
    a768:	and	w20, w20, #0x7
    a76c:	mov	w0, #0x20                  	// #32
    a770:	add	x21, sp, #0x70
    a774:	bfxil	w1, w0, #0, #23
    a778:	str	w1, [sp, #112]
    a77c:	nop
    a780:	ldr	x2, [x19, #40]
    a784:	sub	w20, w20, #0x1
    a788:	mov	x1, x21
    a78c:	mov	x0, x19
    a790:	blr	x2
    a794:	cmn	w20, #0x1
    a798:	b.ne	a780 <read_crypto_list+0x3b0>  // b.any
    a79c:	ldp	x19, x20, [sp, #16]
    a7a0:	ldp	x21, x22, [sp, #32]
    a7a4:	ldp	x29, x30, [sp], #144
    a7a8:	ret
    a7ac:	ldr	w0, [x19, #120]
    a7b0:	and	w0, w0, #0x30
    a7b4:	cmp	w0, #0x10
    a7b8:	b.ne	a618 <read_crypto_list+0x248>  // b.any
    a7bc:	mov	w2, #0x8                   	// #8
    a7c0:	stp	x23, x24, [sp, #48]
    a7c4:	str	x25, [sp, #64]
    a7c8:	b	a688 <read_crypto_list+0x2b8>
    a7cc:	ldr	w0, [x22]
    a7d0:	ldr	w1, [x19, #120]
    a7d4:	ubfx	x0, x0, #0, #23
    a7d8:	str	w0, [sp, #84]
    a7dc:	and	w1, w1, #0x38
    a7e0:	cmp	w1, #0x18
    a7e4:	b.ne	a6d4 <read_crypto_list+0x304>  // b.any
    a7e8:	ldrb	w2, [x22, #4]
    a7ec:	and	w1, w2, #0x1f
    a7f0:	tbnz	w2, #0, a848 <read_crypto_list+0x478>
    a7f4:	bl	f9c0 <grub_unicode_shape_code>
    a7f8:	str	w0, [sp, #84]
    a7fc:	b	a6d4 <read_crypto_list+0x304>
    a800:	mov	x0, #0x0                   	// #0
    a804:	b	a6c8 <read_crypto_list+0x2f8>
    a808:	ldr	w0, [sp, #112]
    a80c:	mov	w1, #0x20                  	// #32
    a810:	add	x21, sp, #0x70
    a814:	mov	w20, #0x8                   	// #8
    a818:	bfxil	w0, w1, #0, #23
    a81c:	str	w0, [sp, #112]
    a820:	ldr	x2, [x19, #40]
    a824:	mov	x1, x21
    a828:	mov	x0, x19
    a82c:	blr	x2
    a830:	subs	w20, w20, #0x1
    a834:	b.ne	a820 <read_crypto_list+0x450>  // b.any
    a838:	ldp	x19, x20, [sp, #16]
    a83c:	ldp	x21, x22, [sp, #32]
    a840:	ldp	x29, x30, [sp], #144
    a844:	ret
    a848:	bl	f978 <grub_unicode_mirror_code>
    a84c:	str	w0, [sp, #84]
    a850:	ldrb	w1, [x22, #4]
    a854:	and	w1, w1, #0x1f
    a858:	b	a7f4 <read_crypto_list+0x424>
    a85c:	and	w0, w0, #0x7fffff
    a860:	bl	dab0 <grub_unicode_get_comb_type>
    a864:	cmp	w0, #0x0
    a868:	cset	w2, eq  // eq = none
    a86c:	b	a688 <read_crypto_list+0x2b8>
    a870:	stp	x29, x30, [sp, #-48]!
    a874:	mov	w3, #0x1                   	// #1
    a878:	cmp	w0, #0x7f
    a87c:	mov	x29, sp
    a880:	stp	xzr, xzr, [sp, #16]
    a884:	strb	w3, [sp, #24]
    a888:	stp	xzr, xzr, [sp, #32]
    a88c:	b.ls	a8a4 <read_crypto_list+0x4d4>  // b.plast
    a890:	ldr	w3, [x1, #120]
    a894:	ands	w3, w3, #0x38
    a898:	b.eq	a924 <read_crypto_list+0x554>  // b.none
    a89c:	cmp	w3, #0x8
    a8a0:	b.eq	a8c4 <read_crypto_list+0x4f4>  // b.none
    a8a4:	and	w3, w0, #0x7fffff
    a8a8:	ldr	w4, [sp, #16]
    a8ac:	add	x0, sp, #0x10
    a8b0:	bfxil	w4, w3, #0, #23
    a8b4:	str	w4, [sp, #16]
    a8b8:	bl	a5d0 <read_crypto_list+0x200>
    a8bc:	ldp	x29, x30, [sp], #48
    a8c0:	ret
    a8c4:	mov	w3, #0x2501                	// #9473
    a8c8:	cmp	w0, w3
    a8cc:	b.eq	ab08 <read_crypto_list+0x738>  // b.none
    a8d0:	b.ls	a9e0 <read_crypto_list+0x610>  // b.plast
    a8d4:	mov	w3, #0x2513                	// #9491
    a8d8:	cmp	w0, w3
    a8dc:	b.eq	aaf8 <read_crypto_list+0x728>  // b.none
    a8e0:	b.ls	aa70 <read_crypto_list+0x6a0>  // b.plast
    a8e4:	mov	w4, #0x2517                	// #9495
    a8e8:	mov	w3, #0xc0                  	// #192
    a8ec:	cmp	w0, w4
    a8f0:	b.eq	a8a8 <read_crypto_list+0x4d8>  // b.none
    a8f4:	ldr	w4, [sp, #16]
    a8f8:	mov	w3, #0x251b                	// #9499
    a8fc:	cmp	w0, w3
    a900:	mov	w0, #0xd9                  	// #217
    a904:	mov	w3, #0x3f                  	// #63
    a908:	csel	w3, w3, w0, ne  // ne = any
    a90c:	add	x0, sp, #0x10
    a910:	bfxil	w4, w3, #0, #23
    a914:	str	w4, [sp, #16]
    a918:	bl	a5d0 <read_crypto_list+0x200>
    a91c:	ldp	x29, x30, [sp], #48
    a920:	ret
    a924:	mov	w3, #0x2193                	// #8595
    a928:	cmp	w0, w3
    a92c:	b.eq	ab00 <read_crypto_list+0x730>  // b.none
    a930:	b.ls	a990 <read_crypto_list+0x5c0>  // b.plast
    a934:	mov	w3, #0xffffdaff            	// #-9473
    a938:	add	w0, w0, w3
    a93c:	cmp	w0, #0x1a
    a940:	mov	w3, #0x3f                  	// #63
    a944:	b.hi	a8a8 <read_crypto_list+0x4d8>  // b.pmore
    a948:	mov	x3, #0x1                   	// #1
    a94c:	mov	x4, #0x4000                	// #16384
    a950:	movk	x4, #0x444, lsl #16
    a954:	lsl	x0, x3, x0
    a958:	tst	x0, x4
    a95c:	b.ne	aad0 <read_crypto_list+0x700>  // b.any
    a960:	tbnz	w0, #2, aab0 <read_crypto_list+0x6e0>
    a964:	ldr	w4, [sp, #16]
    a968:	tst	x0, #0x1
    a96c:	mov	w3, #0x3f                  	// #63
    a970:	mov	w0, #0x2d                  	// #45
    a974:	csel	w3, w3, w0, eq  // eq = none
    a978:	add	x0, sp, #0x10
    a97c:	bfxil	w4, w3, #0, #23
    a980:	str	w4, [sp, #16]
    a984:	bl	a5d0 <read_crypto_list+0x200>
    a988:	ldp	x29, x30, [sp], #48
    a98c:	ret
    a990:	mov	w4, #0x2191                	// #8593
    a994:	mov	w3, #0x5e                  	// #94
    a998:	cmp	w0, w4
    a99c:	b.eq	a8a8 <read_crypto_list+0x4d8>  // b.none
    a9a0:	mov	w4, #0x2192                	// #8594
    a9a4:	mov	w3, #0x3e                  	// #62
    a9a8:	cmp	w0, w4
    a9ac:	b.eq	a8a8 <read_crypto_list+0x4d8>  // b.none
    a9b0:	ldr	w4, [sp, #16]
    a9b4:	mov	w3, #0x2190                	// #8592
    a9b8:	cmp	w0, w3
    a9bc:	mov	w0, #0x3c                  	// #60
    a9c0:	mov	w3, #0x3f                  	// #63
    a9c4:	csel	w3, w3, w0, ne  // ne = any
    a9c8:	add	x0, sp, #0x10
    a9cc:	bfxil	w4, w3, #0, #23
    a9d0:	str	w4, [sp, #16]
    a9d4:	bl	a5d0 <read_crypto_list+0x200>
    a9d8:	ldp	x29, x30, [sp], #48
    a9dc:	ret
    a9e0:	mov	w3, #0x2192                	// #8594
    a9e4:	cmp	w0, w3
    a9e8:	b.eq	aaf0 <read_crypto_list+0x720>  // b.none
    a9ec:	b.ls	aa30 <read_crypto_list+0x660>  // b.plast
    a9f0:	mov	w4, #0x2193                	// #8595
    a9f4:	mov	w3, #0x19                  	// #25
    a9f8:	cmp	w0, w4
    a9fc:	b.eq	a8a8 <read_crypto_list+0x4d8>  // b.none
    aa00:	ldr	w4, [sp, #16]
    aa04:	mov	w3, #0x2195                	// #8597
    aa08:	cmp	w0, w3
    aa0c:	mov	w0, #0x12                  	// #18
    aa10:	mov	w3, #0x3f                  	// #63
    aa14:	csel	w3, w3, w0, ne  // ne = any
    aa18:	add	x0, sp, #0x10
    aa1c:	bfxil	w4, w3, #0, #23
    aa20:	str	w4, [sp, #16]
    aa24:	bl	a5d0 <read_crypto_list+0x200>
    aa28:	ldp	x29, x30, [sp], #48
    aa2c:	ret
    aa30:	mov	w4, #0x2190                	// #8592
    aa34:	mov	w3, #0x1b                  	// #27
    aa38:	cmp	w0, w4
    aa3c:	b.eq	a8a8 <read_crypto_list+0x4d8>  // b.none
    aa40:	ldr	w4, [sp, #16]
    aa44:	mov	w3, #0x2191                	// #8593
    aa48:	cmp	w0, w3
    aa4c:	mov	w0, #0x18                  	// #24
    aa50:	mov	w3, #0x3f                  	// #63
    aa54:	csel	w3, w3, w0, ne  // ne = any
    aa58:	add	x0, sp, #0x10
    aa5c:	bfxil	w4, w3, #0, #23
    aa60:	str	w4, [sp, #16]
    aa64:	bl	a5d0 <read_crypto_list+0x200>
    aa68:	ldp	x29, x30, [sp], #48
    aa6c:	ret
    aa70:	mov	w4, #0x2503                	// #9475
    aa74:	mov	w3, #0xb3                  	// #179
    aa78:	cmp	w0, w4
    aa7c:	b.eq	a8a8 <read_crypto_list+0x4d8>  // b.none
    aa80:	ldr	w4, [sp, #16]
    aa84:	mov	w3, #0x250f                	// #9487
    aa88:	cmp	w0, w3
    aa8c:	mov	w0, #0xda                  	// #218
    aa90:	mov	w3, #0x3f                  	// #63
    aa94:	csel	w3, w3, w0, ne  // ne = any
    aa98:	add	x0, sp, #0x10
    aa9c:	bfxil	w4, w3, #0, #23
    aaa0:	str	w4, [sp, #16]
    aaa4:	bl	a5d0 <read_crypto_list+0x200>
    aaa8:	ldp	x29, x30, [sp], #48
    aaac:	ret
    aab0:	ldr	w4, [sp, #16]
    aab4:	mov	w3, #0x7c                  	// #124
    aab8:	add	x0, sp, #0x10
    aabc:	bfxil	w4, w3, #0, #23
    aac0:	str	w4, [sp, #16]
    aac4:	bl	a5d0 <read_crypto_list+0x200>
    aac8:	ldp	x29, x30, [sp], #48
    aacc:	ret
    aad0:	ldr	w4, [sp, #16]
    aad4:	mov	w3, #0x2b                  	// #43
    aad8:	add	x0, sp, #0x10
    aadc:	bfxil	w4, w3, #0, #23
    aae0:	str	w4, [sp, #16]
    aae4:	bl	a5d0 <read_crypto_list+0x200>
    aae8:	ldp	x29, x30, [sp], #48
    aaec:	ret
    aaf0:	mov	w3, #0x1a                  	// #26
    aaf4:	b	a8a8 <read_crypto_list+0x4d8>
    aaf8:	mov	w3, #0xbf                  	// #191
    aafc:	b	a8a8 <read_crypto_list+0x4d8>
    ab00:	mov	w3, #0x76                  	// #118
    ab04:	b	a8a8 <read_crypto_list+0x4d8>
    ab08:	mov	w3, #0xc4                  	// #196
    ab0c:	b	a8a8 <read_crypto_list+0x4d8>
    ab10:	stp	x29, x30, [sp, #-80]!
    ab14:	mov	x29, sp
    ab18:	stp	x21, x22, [sp, #32]
    ab1c:	mov	w22, w1
    ab20:	mov	x21, x0
    ab24:	ldr	x1, [x0, #56]
    ab28:	stp	x19, x20, [sp, #16]
    ab2c:	blr	x1
    ab30:	and	w19, w0, #0xffff
    ab34:	ldr	x1, [x21, #64]
    ab38:	mov	x0, x21
    ab3c:	blr	x1
    ab40:	sub	w19, w19, w0, uxth
    ab44:	sub	w19, w19, w22
    ab48:	cmp	w19, #0x0
    ab4c:	b.le	ab98 <read_crypto_list+0x7c8>
    ab50:	sub	w19, w19, #0x1
    ab54:	mov	w22, #0x20                  	// #32
    ab58:	mov	w20, #0x1                   	// #1
    ab5c:	nop
    ab60:	sub	w19, w19, #0x1
    ab64:	mov	w0, #0x20                  	// #32
    ab68:	bl	dab0 <grub_unicode_get_comb_type>
    ab6c:	cbnz	w0, ab90 <read_crypto_list+0x7c0>
    ab70:	stp	xzr, xzr, [sp, #48]
    ab74:	mov	x1, x21
    ab78:	add	x0, sp, #0x30
    ab7c:	mov	w2, #0x0                   	// #0
    ab80:	str	w22, [sp, #48]
    ab84:	strb	w20, [sp, #56]
    ab88:	stp	xzr, xzr, [sp, #64]
    ab8c:	bl	a5d0 <read_crypto_list+0x200>
    ab90:	cmn	w19, #0x1
    ab94:	b.ne	ab60 <read_crypto_list+0x790>  // b.any
    ab98:	ldp	x19, x20, [sp, #16]
    ab9c:	ldp	x21, x22, [sp, #32]
    aba0:	ldp	x29, x30, [sp], #80
    aba4:	ret
    aba8:	stp	x29, x30, [sp, #-176]!
    abac:	mov	x29, sp
    abb0:	stp	x19, x20, [sp, #16]
    abb4:	mov	x19, x4
    abb8:	stp	x21, x22, [sp, #32]
    abbc:	ldr	w21, [sp, #176]
    abc0:	stp	x23, x24, [sp, #48]
    abc4:	add	x23, x0, x1, lsl #5
    abc8:	cmp	x0, x23
    abcc:	stp	w7, w2, [sp, #108]
    abd0:	str	w3, [sp, #116]
    abd4:	stp	x0, x1, [sp, #128]
    abd8:	b.cs	ae20 <read_crypto_list+0xa50>  // b.hs, b.nlast
    abdc:	sub	w1, w2, #0x1
    abe0:	mov	w20, #0x1                   	// #1
    abe4:	str	w1, [sp, #120]
    abe8:	and	w1, w21, w20
    abec:	mov	x24, x5
    abf0:	mov	w22, w6
    abf4:	mov	w21, w1
    abf8:	stp	x25, x26, [sp, #64]
    abfc:	mov	x26, x0
    ac00:	stp	x27, x28, [sp, #80]
    ac04:	mov	w28, w20
    ac08:	mov	w27, #0x20                  	// #32
    ac0c:	str	w1, [sp, #124]
    ac10:	ldr	w0, [x26]
    ac14:	cmp	w21, #0x0
    ac18:	and	w0, w0, #0x7fffff
    ac1c:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    ac20:	b.eq	ad5c <read_crypto_list+0x98c>  // b.none
    ac24:	mov	x0, x26
    ac28:	mov	w2, w22
    ac2c:	mov	x1, x19
    ac30:	bl	a5d0 <read_crypto_list+0x200>
    ac34:	ldr	w0, [x26]
    ac38:	add	w20, w20, #0x1
    ac3c:	and	w0, w0, #0x7fffff
    ac40:	cmp	w0, #0xa
    ac44:	b.eq	aca4 <read_crypto_list+0x8d4>  // b.none
    ac48:	ldrh	w0, [x26, #6]
    ac4c:	ubfx	x1, x0, #3, #8
    ac50:	cmp	w1, #0x2
    ac54:	b.hi	ad28 <read_crypto_list+0x958>  // b.pmore
    ac58:	and	w0, w0, #0xfffff807
    ac5c:	strh	w0, [x26, #6]
    ac60:	add	x26, x26, #0x20
    ac64:	cmp	x26, x23
    ac68:	b.cc	ac10 <read_crypto_list+0x840>  // b.lo, b.ul, b.last
    ac6c:	ldp	x25, x26, [sp, #64]
    ac70:	cmp	w20, #0x0
    ac74:	ldp	x27, x28, [sp, #80]
    ac78:	cset	w0, ne  // ne = any
    ac7c:	ldr	w1, [sp, #124]
    ac80:	mov	w20, #0x0                   	// #0
    ac84:	tst	w0, w1
    ac88:	b.ne	adb8 <read_crypto_list+0x9e8>  // b.any
    ac8c:	mov	w0, w20
    ac90:	ldp	x19, x20, [sp, #16]
    ac94:	ldp	x21, x22, [sp, #32]
    ac98:	ldp	x23, x24, [sp, #48]
    ac9c:	ldp	x29, x30, [sp], #176
    aca0:	ret
    aca4:	cbz	x24, ace0 <read_crypto_list+0x910>
    aca8:	ldr	w1, [x24, #120]
    acac:	mov	x0, x19
    acb0:	ldr	x2, [x19, #56]
    acb4:	add	w1, w1, #0x1
    acb8:	str	w1, [x24, #120]
    acbc:	sxtw	x20, w1
    acc0:	blr	x2
    acc4:	lsr	w1, w0, #16
    acc8:	cmp	wzr, w0, lsr #16
    accc:	sub	x1, x1, #0x2
    acd0:	mov	x2, #0x16                  	// #22
    acd4:	csel	x1, x1, x2, ne  // ne = any
    acd8:	cmp	x20, x1
    acdc:	b.ge	addc <read_crypto_list+0xa0c>  // b.tcont
    ace0:	ldr	w0, [sp, #108]
    ace4:	cbz	w0, ad6c <read_crypto_list+0x99c>
    ace8:	ldr	w2, [sp, #112]
    acec:	mov	x0, x19
    acf0:	ldr	x1, [x19, #64]
    acf4:	mov	w20, #0x0                   	// #0
    acf8:	bfxil	w25, w2, #0, #16
    acfc:	blr	x1
    ad00:	lsr	w1, w0, #16
    ad04:	ldr	x2, [x19, #72]
    ad08:	bfi	w25, w1, #16, #16
    ad0c:	mov	x0, x19
    ad10:	mov	w1, w25
    ad14:	blr	x2
    ad18:	ldrh	w0, [x26, #6]
    ad1c:	ubfx	x1, x0, #3, #8
    ad20:	cmp	w1, #0x2
    ad24:	b.ls	ac58 <read_crypto_list+0x888>  // b.plast
    ad28:	ldr	x0, [x26, #24]
    ad2c:	add	x26, x26, #0x20
    ad30:	bl	0 <grub_free>
    ad34:	ldurh	w0, [x26, #-26]
    ad38:	and	w0, w0, #0xfffff807
    ad3c:	sturh	w0, [x26, #-26]
    ad40:	cmp	x23, x26
    ad44:	b.ls	ac6c <read_crypto_list+0x89c>  // b.plast
    ad48:	ldr	w0, [x26]
    ad4c:	cmp	w21, #0x0
    ad50:	and	w0, w0, #0x7fffff
    ad54:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    ad58:	b.ne	ac24 <read_crypto_list+0x854>  // b.any
    ad5c:	ldr	w1, [sp, #116]
    ad60:	mov	x0, x19
    ad64:	bl	ab10 <read_crypto_list+0x740>
    ad68:	b	ac24 <read_crypto_list+0x854>
    ad6c:	ldr	w0, [sp, #120]
    ad70:	mov	w20, w0
    ad74:	tbnz	w0, #31, adb0 <read_crypto_list+0x9e0>
    ad78:	sub	w20, w20, #0x1
    ad7c:	mov	w0, #0x20                  	// #32
    ad80:	bl	dab0 <grub_unicode_get_comb_type>
    ad84:	cbnz	w0, ada8 <read_crypto_list+0x9d8>
    ad88:	stp	xzr, xzr, [sp, #144]
    ad8c:	mov	x1, x19
    ad90:	add	x0, sp, #0x90
    ad94:	mov	w2, #0x0                   	// #0
    ad98:	str	w27, [sp, #144]
    ad9c:	strb	w28, [sp, #152]
    ada0:	stp	xzr, xzr, [sp, #160]
    ada4:	bl	a5d0 <read_crypto_list+0x200>
    ada8:	cmn	w20, #0x1
    adac:	b.ne	ad78 <read_crypto_list+0x9a8>  // b.any
    adb0:	mov	w20, #0x0                   	// #0
    adb4:	b	ac48 <read_crypto_list+0x878>
    adb8:	ldr	w1, [sp, #116]
    adbc:	mov	x0, x19
    adc0:	bl	ab10 <read_crypto_list+0x740>
    adc4:	mov	w0, w20
    adc8:	ldp	x19, x20, [sp, #16]
    adcc:	ldp	x21, x22, [sp, #32]
    add0:	ldp	x23, x24, [sp, #48]
    add4:	ldp	x29, x30, [sp], #176
    add8:	ret
    addc:	ldp	x0, x1, [sp, #128]
    ade0:	add	x3, x26, #0x20
    ade4:	ldp	x27, x28, [sp, #80]
    ade8:	mov	w20, #0x1                   	// #1
    adec:	sub	x0, x26, x0
    adf0:	ldp	x25, x26, [sp, #64]
    adf4:	sub	x0, x1, x0, asr #5
    adf8:	sub	x0, x0, #0x1
    adfc:	str	x3, [x24, #8]
    ae00:	str	w22, [x24, #24]
    ae04:	str	x0, [x24, #32]
    ae08:	mov	w0, w20
    ae0c:	ldp	x19, x20, [sp, #16]
    ae10:	ldp	x21, x22, [sp, #32]
    ae14:	ldp	x23, x24, [sp, #48]
    ae18:	ldp	x29, x30, [sp], #176
    ae1c:	ret
    ae20:	and	w0, w21, #0x1
    ae24:	str	w0, [sp, #124]
    ae28:	mov	w0, #0x1                   	// #1
    ae2c:	b	ac7c <read_crypto_list+0x8ac>
    ae30:	mov	x2, x0
    ae34:	mov	x0, x1
    ae38:	ldr	w1, [x2]
    ae3c:	and	w3, w1, #0x7fffff
    ae40:	cmp	w3, #0x9
    ae44:	b.eq	ae9c <read_crypto_list+0xacc>  // b.none
    ae48:	ldr	x3, [x0, #48]
    ae4c:	cbz	x3, ae5c <read_crypto_list+0xa8c>
    ae50:	mov	x1, x2
    ae54:	mov	x16, x3
    ae58:	br	x16
    ae5c:	ldr	w2, [x0, #120]
    ae60:	mov	x0, #0x1                   	// #1
    ae64:	and	w3, w2, #0x38
    ae68:	and	w2, w2, #0x30
    ae6c:	cmp	w3, #0x20
    ae70:	ccmp	w2, #0x10, #0x4, ne  // ne = any
    ae74:	b.eq	ae7c <read_crypto_list+0xaac>  // b.none
    ae78:	ret
    ae7c:	stp	x29, x30, [sp, #-16]!
    ae80:	and	w0, w1, #0x7fffff
    ae84:	mov	x29, sp
    ae88:	bl	dab0 <grub_unicode_get_comb_type>
    ae8c:	cmp	w0, #0x0
    ae90:	cset	x0, eq  // eq = none
    ae94:	ldp	x29, x30, [sp], #16
    ae98:	ret
    ae9c:	mov	x0, #0x8                   	// #8
    aea0:	ret
    aea4:	nop
    aea8:	stp	x29, x30, [sp, #-80]!
    aeac:	mov	w3, #0x20                  	// #32
    aeb0:	mov	x29, sp
    aeb4:	stp	xzr, xzr, [sp, #48]
    aeb8:	str	w3, [sp, #48]
    aebc:	stp	x19, x20, [sp, #16]
    aec0:	mov	w19, w1
    aec4:	ldr	x3, [x0, #56]
    aec8:	stp	x21, x22, [sp, #32]
    aecc:	mov	w22, w2
    aed0:	stp	xzr, xzr, [sp, #64]
    aed4:	mov	x21, x0
    aed8:	blr	x3
    aedc:	and	x20, x0, #0xffff
    aee0:	ldr	w1, [sp, #48]
    aee4:	tst	w0, #0xffff
    aee8:	sub	x20, x20, #0x1
    aeec:	mov	x2, #0x4f                  	// #79
    aef0:	and	w0, w1, #0x7fffff
    aef4:	csel	x20, x20, x2, ne  // ne = any
    aef8:	cmp	w0, #0x9
    aefc:	b.eq	af78 <read_crypto_list+0xba8>  // b.none
    af00:	ldr	x2, [x21, #48]
    af04:	cbz	x2, af30 <read_crypto_list+0xb60>
    af08:	mov	x0, x21
    af0c:	add	x1, sp, #0x30
    af10:	blr	x2
    af14:	add	w19, w19, w22
    af18:	ldp	x21, x22, [sp, #32]
    af1c:	sxtw	x19, w19
    af20:	msub	x0, x19, x0, x20
    af24:	ldp	x19, x20, [sp, #16]
    af28:	ldp	x29, x30, [sp], #80
    af2c:	ret
    af30:	ldr	w2, [x21, #120]
    af34:	mov	x0, #0x1                   	// #1
    af38:	and	w3, w2, #0x38
    af3c:	and	w2, w2, #0x30
    af40:	cmp	w3, #0x20
    af44:	ccmp	w2, #0x10, #0x4, ne  // ne = any
    af48:	b.ne	af14 <read_crypto_list+0xb44>  // b.any
    af4c:	add	w19, w19, w22
    af50:	and	w0, w1, #0x7fffff
    af54:	bl	dab0 <grub_unicode_get_comb_type>
    af58:	cmp	w0, #0x0
    af5c:	cset	x0, eq  // eq = none
    af60:	sxtw	x19, w19
    af64:	ldp	x21, x22, [sp, #32]
    af68:	msub	x0, x19, x0, x20
    af6c:	ldp	x19, x20, [sp, #16]
    af70:	ldp	x29, x30, [sp], #80
    af74:	ret
    af78:	add	w19, w19, w22
    af7c:	mov	x0, #0x8                   	// #8
    af80:	ldp	x21, x22, [sp, #32]
    af84:	sxtw	x19, w19
    af88:	msub	x0, x19, x0, x20
    af8c:	ldp	x19, x20, [sp, #16]
    af90:	ldp	x29, x30, [sp], #80
    af94:	ret
    af98:	stp	x29, x30, [sp, #-368]!
    af9c:	mov	x29, sp
    afa0:	stp	x19, x20, [sp, #16]
    afa4:	mov	x20, x4
    afa8:	stp	x21, x22, [sp, #32]
    afac:	mov	x21, x5
    afb0:	stp	x23, x24, [sp, #48]
    afb4:	stp	x25, x26, [sp, #64]
    afb8:	mov	w26, w7
    afbc:	stp	x27, x28, [sp, #80]
    afc0:	ldr	w27, [sp, #368]
    afc4:	stp	x0, x1, [sp, #136]
    afc8:	stp	w6, w2, [sp, #156]
    afcc:	str	xzr, [sp, #176]
    afd0:	str	w3, [sp, #184]
    afd4:	cbnz	w6, aff8 <read_crypto_list+0xc28>
    afd8:	ldr	x1, [x4, #64]
    afdc:	mov	w19, w2
    afe0:	mov	x0, x4
    afe4:	blr	x1
    afe8:	and	w0, w0, #0xffff
    afec:	sub	w0, w0, w19
    aff0:	sxtw	x0, w0
    aff4:	str	x0, [sp, #176]
    aff8:	ldr	w1, [sp, #160]
    affc:	mov	x0, x20
    b000:	ldr	w2, [sp, #184]
    b004:	bl	aea8 <read_crypto_list+0xad8>
    b008:	ldr	x1, [sp, #136]
    b00c:	sub	x1, x1, #0x4
    b010:	stp	x0, x1, [sp, #112]
    b014:	cbz	x21, b6f4 <read_crypto_list+0x1324>
    b018:	ldr	w0, [x21, #40]
    b01c:	add	x19, x21, #0x2c
    b020:	mov	x22, #0x0                   	// #0
    b024:	cmp	w0, #0x0
    b028:	b.le	b054 <read_crypto_list+0xc84>
    b02c:	nop
    b030:	ldrb	w0, [x19, x22]
    b034:	mov	w2, w26
    b038:	mov	x1, x20
    b03c:	add	x22, x22, #0x1
    b040:	orr	w0, w0, #0x2000
    b044:	bl	a870 <read_crypto_list+0x4a0>
    b048:	ldr	w0, [x21, #40]
    b04c:	cmp	w0, w22
    b050:	b.gt	b030 <read_crypto_list+0xc60>
    b054:	ldp	x0, x1, [sp, #136]
    b058:	cmp	x0, x1
    b05c:	b.cs	b74c <read_crypto_list+0x137c>  // b.hs, b.nlast
    b060:	mov	x19, x0
    b064:	ldr	w0, [sp, #392]
    b068:	mov	w28, #0x0                   	// #0
    b06c:	ldr	w1, [sp, #160]
    b070:	eor	w0, w0, #0x1
    b074:	str	w28, [sp, #108]
    b078:	and	w0, w0, #0x1
    b07c:	str	w0, [sp, #152]
    b080:	ldr	x0, [sp, #112]
    b084:	mov	x28, x19
    b088:	ldr	x25, [sp, #176]
    b08c:	sub	w1, w1, #0x1
    b090:	sub	x0, x0, #0x5
    b094:	str	xzr, [sp, #128]
    b098:	str	x0, [sp, #168]
    b09c:	str	w1, [sp, #188]
    b0a0:	ldr	w0, [x19]
    b0a4:	mov	w1, #0x202c                	// #8236
    b0a8:	cmp	w0, w1
    b0ac:	b.eq	b47c <read_crypto_list+0x10ac>  // b.none
    b0b0:	b.hi	b364 <read_crypto_list+0xf94>  // b.pmore
    b0b4:	mov	w2, #0xffffdfd6            	// #-8234
    b0b8:	add	w1, w0, w2
    b0bc:	cmp	w1, #0x1
    b0c0:	b.hi	b0e0 <read_crypto_list+0xd10>  // b.pmore
    b0c4:	ldr	w1, [x21, #40]
    b0c8:	cmp	w1, #0x3c
    b0cc:	b.le	b380 <read_crypto_list+0xfb0>
    b0d0:	ldr	w0, [x21, #108]
    b0d4:	add	w0, w0, #0x1
    b0d8:	str	w0, [x21, #108]
    b0dc:	ldr	w0, [x19]
    b0e0:	bl	dab0 <grub_unicode_get_comb_type>
    b0e4:	cbz	w0, b3a0 <read_crypto_list+0xfd0>
    b0e8:	ldr	w22, [x19]
    b0ec:	mov	x23, x25
    b0f0:	ldr	w0, [sp, #152]
    b0f4:	mov	x24, #0x0                   	// #0
    b0f8:	cmp	w22, #0x20
    b0fc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    b100:	ldr	x0, [sp, #112]
    b104:	b.ne	b42c <read_crypto_list+0x105c>  // b.any
    b108:	cmp	x23, x0
    b10c:	b.gt	b20c <read_crypto_list+0xe3c>
    b110:	cmp	w22, #0xa
    b114:	b.eq	b214 <read_crypto_list+0xe44>  // b.none
    b118:	mov	x25, x23
    b11c:	ldr	x0, [sp, #144]
    b120:	add	x19, x19, #0x4
    b124:	cmp	x0, x19
    b128:	b.hi	b0a0 <read_crypto_list+0xcd0>  // b.pmore
    b12c:	ldr	w0, [sp, #156]
    b130:	mov	x23, x28
    b134:	ldr	w28, [sp, #108]
    b138:	orr	w27, w27, w0
    b13c:	ldr	x0, [sp, #408]
    b140:	cbz	x0, b170 <read_crypto_list+0xda0>
    b144:	ldr	x0, [sp, #136]
    b148:	and	w1, w28, #0xffff
    b14c:	sub	x19, x19, x0
    b150:	ldr	x0, [sp, #408]
    b154:	add	x0, x0, x19
    b158:	str	x0, [sp, #408]
    b15c:	mov	x2, x0
    b160:	ubfiz	w0, w25, #1, #15
    b164:	strh	w1, [x2, #2]
    b168:	orr	w0, w0, #0x1
    b16c:	strh	w0, [x2]
    b170:	ldr	x0, [sp, #144]
    b174:	cmp	x0, x23
    b178:	cinc	w28, w28, hi  // hi = pmore
    b17c:	cbnz	w27, b6a8 <read_crypto_list+0x12d8>
    b180:	ldr	w0, [sp, #376]
    b184:	cbz	w0, b1e8 <read_crypto_list+0xe18>
    b188:	ldr	x0, [sp, #144]
    b18c:	cmp	x0, x23
    b190:	b.ls	b1e0 <read_crypto_list+0xe10>  // b.plast
    b194:	sub	x19, x0, #0x1
    b198:	sub	x19, x19, x23
    b19c:	and	x19, x19, #0xfffffffffffffffc
    b1a0:	add	x19, x19, #0x4
    b1a4:	add	x19, x23, x19
    b1a8:	ldr	w2, [x20, #120]
    b1ac:	ldr	w0, [x23]
    b1b0:	and	w2, w2, #0x38
    b1b4:	cmp	w2, #0x10
    b1b8:	b.eq	b1c8 <read_crypto_list+0xdf8>  // b.none
    b1bc:	bl	dab0 <grub_unicode_get_comb_type>
    b1c0:	cbnz	w0, b1d4 <read_crypto_list+0xe04>
    b1c4:	ldr	w0, [x23]
    b1c8:	mov	w2, w26
    b1cc:	mov	x1, x20
    b1d0:	bl	a870 <read_crypto_list+0x4a0>
    b1d4:	add	x23, x23, #0x4
    b1d8:	cmp	x23, x19
    b1dc:	b.ne	b1a8 <read_crypto_list+0xdd8>  // b.any
    b1e0:	ldr	w0, [sp, #400]
    b1e4:	cbnz	w0, b6e0 <read_crypto_list+0x1310>
    b1e8:	mov	w28, #0x0                   	// #0
    b1ec:	mov	w0, w28
    b1f0:	ldp	x19, x20, [sp, #16]
    b1f4:	ldp	x21, x22, [sp, #32]
    b1f8:	ldp	x23, x24, [sp, #48]
    b1fc:	ldp	x25, x26, [sp, #64]
    b200:	ldp	x27, x28, [sp, #80]
    b204:	ldp	x29, x30, [sp], #368
    b208:	ret
    b20c:	cmp	w22, #0xa
    b210:	b.ne	b21c <read_crypto_list+0xe4c>  // b.any
    b214:	str	wzr, [x21, #40]
    b218:	str	wzr, [x21, #108]
    b21c:	ldp	x0, x3, [sp, #112]
    b220:	ldr	w2, [sp, #156]
    b224:	mov	w1, w2
    b228:	orr	w2, w27, w2
    b22c:	cmp	x23, x0
    b230:	ldr	w0, [sp, #108]
    b234:	add	w0, w0, #0x1
    b238:	str	w0, [sp, #108]
    b23c:	cset	w0, gt
    b240:	cmp	w0, #0x0
    b244:	ccmp	x28, x3, #0x2, ne  // ne = any
    b248:	b.cc	b43c <read_crypto_list+0x106c>  // b.lo, b.ul, b.last
    b24c:	cmp	w0, #0x0
    b250:	ldr	x0, [sp, #136]
    b254:	ccmp	x0, x28, #0x0, ne  // ne = any
    b258:	b.ne	b494 <read_crypto_list+0x10c4>  // b.any
    b25c:	ldr	x0, [sp, #128]
    b260:	ldr	x3, [sp, #168]
    b264:	sub	x0, x23, x0
    b268:	cmp	x0, x3
    b26c:	b.ge	b494 <read_crypto_list+0x10c4>  // b.tcont
    b270:	cbz	w2, b6d0 <read_crypto_list+0x1300>
    b274:	ldr	x25, [sp, #176]
    b278:	ldr	x19, [sp, #136]
    b27c:	sub	x0, x23, x25
    b280:	ldr	x2, [sp, #120]
    b284:	cmp	x2, x19
    b288:	b.eq	b5b0 <read_crypto_list+0x11e0>  // b.none
    b28c:	ldr	w2, [x19]
    b290:	cmp	w2, #0xa
    b294:	b.eq	b5b0 <read_crypto_list+0x11e0>  // b.none
    b298:	ldr	x2, [sp, #408]
    b29c:	cbz	x2, b5c8 <read_crypto_list+0x11f8>
    b2a0:	mov	x3, x2
    b2a4:	sub	w24, w0, w24
    b2a8:	ldr	x2, [sp, #136]
    b2ac:	str	x25, [sp, #128]
    b2b0:	mov	x25, x0
    b2b4:	ldrh	w0, [sp, #108]
    b2b8:	sub	x2, x19, x2
    b2bc:	ubfiz	w24, w24, #1, #15
    b2c0:	add	x3, x3, x2
    b2c4:	orr	w24, w24, #0x1
    b2c8:	strh	w0, [x3, #2]
    b2cc:	ldr	x0, [sp, #408]
    b2d0:	strh	w24, [x0, x2]
    b2d4:	cbz	w27, b454 <read_crypto_list+0x1084>
    b2d8:	sub	w27, w27, #0x1
    b2dc:	orr	w1, w1, w27
    b2e0:	mov	x28, x19
    b2e4:	cbnz	w1, b11c <read_crypto_list+0xd4c>
    b2e8:	ldr	w0, [sp, #384]
    b2ec:	cbz	w0, b654 <read_crypto_list+0x1284>
    b2f0:	ldp	w2, w22, [sp, #160]
    b2f4:	mov	x0, x20
    b2f8:	ldr	x1, [x20, #64]
    b2fc:	bfxil	w22, w2, #0, #16
    b300:	blr	x1
    b304:	lsr	w1, w0, #16
    b308:	ldr	x2, [x20, #72]
    b30c:	bfi	w22, w1, #16, #16
    b310:	mov	x0, x20
    b314:	mov	w1, w22
    b318:	str	w22, [sp, #164]
    b31c:	blr	x2
    b320:	ldr	w0, [x21, #40]
    b324:	mov	x22, x21
    b328:	cmp	w0, #0x0
    b32c:	b.le	b358 <read_crypto_list+0xf88>
    b330:	ldrb	w0, [x22, #44]
    b334:	mov	w2, w26
    b338:	mov	x1, x20
    b33c:	add	x22, x22, #0x1
    b340:	orr	w0, w0, #0x2000
    b344:	bl	a870 <read_crypto_list+0x4a0>
    b348:	ldr	w3, [x21, #40]
    b34c:	sub	w0, w22, w21
    b350:	cmp	w3, w0
    b354:	b.gt	b330 <read_crypto_list+0xf60>
    b358:	mov	x28, x19
    b35c:	mov	w27, #0x0                   	// #0
    b360:	b	b11c <read_crypto_list+0xd4c>
    b364:	mov	w1, #0xffffdfd3            	// #-8237
    b368:	add	w1, w0, w1
    b36c:	cmp	w1, #0x1
    b370:	b.hi	b0e0 <read_crypto_list+0xd10>  // b.pmore
    b374:	ldr	w1, [x21, #40]
    b378:	cmp	w1, #0x3c
    b37c:	b.gt	b0d0 <read_crypto_list+0xd00>
    b380:	add	x2, x21, w1, sxtw
    b384:	add	w1, w1, #0x1
    b388:	str	w1, [x21, #40]
    b38c:	strb	w0, [x2, #44]
    b390:	ldr	w0, [x19]
    b394:	bl	dab0 <grub_unicode_get_comb_type>
    b398:	cbnz	w0, b0e8 <read_crypto_list+0xd18>
    b39c:	nop
    b3a0:	ldr	w22, [x19]
    b3a4:	mov	w0, #0x0                   	// #0
    b3a8:	stp	xzr, xzr, [sp, #200]
    b3ac:	bfxil	w0, w22, #0, #23
    b3b0:	str	w0, [sp, #200]
    b3b4:	ldr	x0, [sp, #408]
    b3b8:	stp	xzr, xzr, [sp, #216]
    b3bc:	cbz	x0, b3e8 <read_crypto_list+0x1018>
    b3c0:	mov	x2, x0
    b3c4:	ldrh	w3, [sp, #108]
    b3c8:	ldr	x0, [sp, #136]
    b3cc:	sub	x1, x19, x0
    b3d0:	ubfiz	w0, w25, #1, #15
    b3d4:	add	x2, x2, x1
    b3d8:	orr	w0, w0, #0x1
    b3dc:	strh	w3, [x2, #2]
    b3e0:	ldr	x2, [sp, #408]
    b3e4:	strh	w0, [x2, x1]
    b3e8:	ldr	w0, [sp, #200]
    b3ec:	and	w0, w0, #0x7fffff
    b3f0:	cmp	w0, #0x9
    b3f4:	b.eq	b5dc <read_crypto_list+0x120c>  // b.none
    b3f8:	ldr	x2, [x20, #48]
    b3fc:	cbz	x2, b560 <read_crypto_list+0x1190>
    b400:	add	x1, sp, #0xc8
    b404:	mov	x0, x20
    b408:	blr	x2
    b40c:	ldr	w22, [x19]
    b410:	mov	x24, x0
    b414:	add	x23, x25, x24
    b418:	ldr	w0, [sp, #152]
    b41c:	cmp	w22, #0x20
    b420:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    b424:	ldr	x0, [sp, #112]
    b428:	b.eq	b108 <read_crypto_list+0xd38>  // b.none
    b42c:	cmp	x23, x0
    b430:	b.gt	b5d4 <read_crypto_list+0x1204>
    b434:	stp	x19, x23, [sp, #120]
    b438:	b	b118 <read_crypto_list+0xd48>
    b43c:	cbz	w2, b5c0 <read_crypto_list+0x11f0>
    b440:	ldr	x0, [sp, #128]
    b444:	mov	x19, x3
    b448:	add	x19, x19, #0x4
    b44c:	sub	x25, x23, x0
    b450:	cbnz	w27, b2d8 <read_crypto_list+0xf08>
    b454:	ldr	w0, [sp, #376]
    b458:	cmn	w0, #0x1
    b45c:	b.eq	b2e0 <read_crypto_list+0xf10>  // b.none
    b460:	subs	w0, w0, #0x1
    b464:	str	w0, [sp, #376]
    b468:	b.ne	b2e0 <read_crypto_list+0xf10>  // b.any
    b46c:	ldr	w28, [sp, #108]
    b470:	mov	x23, x19
    b474:	ldr	w27, [sp, #156]
    b478:	b	b13c <read_crypto_list+0xd6c>
    b47c:	ldr	w1, [x21, #108]
    b480:	cbz	w1, b598 <read_crypto_list+0x11c8>
    b484:	sub	w1, w1, #0x1
    b488:	str	w1, [x21, #108]
    b48c:	ldr	w0, [x19]
    b490:	b	b0e0 <read_crypto_list+0xd10>
    b494:	mov	x0, x24
    b498:	cbnz	w2, b280 <read_crypto_list+0xeb0>
    b49c:	str	x25, [sp, #128]
    b4a0:	cmp	x19, x28
    b4a4:	b.ls	b4e0 <read_crypto_list+0x1110>  // b.plast
    b4a8:	ldr	w2, [x20, #120]
    b4ac:	ldr	w0, [x28]
    b4b0:	and	w2, w2, #0x38
    b4b4:	cmp	w2, #0x10
    b4b8:	b.eq	b4c8 <read_crypto_list+0x10f8>  // b.none
    b4bc:	bl	dab0 <grub_unicode_get_comb_type>
    b4c0:	cbnz	w0, b4d4 <read_crypto_list+0x1104>
    b4c4:	ldr	w0, [x28]
    b4c8:	mov	w2, w26
    b4cc:	mov	x1, x20
    b4d0:	bl	a870 <read_crypto_list+0x4a0>
    b4d4:	add	x28, x28, #0x4
    b4d8:	cmp	x28, x19
    b4dc:	b.cc	b4a8 <read_crypto_list+0x10d8>  // b.lo, b.ul, b.last
    b4e0:	ldr	w0, [sp, #384]
    b4e4:	cmp	w0, #0x0
    b4e8:	ccmp	w22, #0xa, #0x4, ne  // ne = any
    b4ec:	b.ne	b5e8 <read_crypto_list+0x1218>  // b.any
    b4f0:	ldr	w0, [sp, #400]
    b4f4:	cbnz	w0, b5fc <read_crypto_list+0x122c>
    b4f8:	ldr	w0, [sp, #384]
    b4fc:	cmp	w0, #0x0
    b500:	ldr	w0, [sp, #376]
    b504:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    b508:	b.ne	b61c <read_crypto_list+0x124c>  // b.any
    b50c:	add	x0, sp, #0xe8
    b510:	cmp	x21, x0
    b514:	b.eq	b550 <read_crypto_list+0x1180>  // b.none
    b518:	ldr	w1, [x21, #120]
    b51c:	mov	x0, x20
    b520:	ldr	x2, [x20, #56]
    b524:	add	w1, w1, #0x1
    b528:	str	w1, [x21, #120]
    b52c:	sxtw	x22, w1
    b530:	blr	x2
    b534:	lsr	w1, w0, #16
    b538:	cmp	wzr, w0, lsr #16
    b53c:	sub	x1, x1, #0x2
    b540:	mov	x2, #0x16                  	// #22
    b544:	csel	x1, x1, x2, ne  // ne = any
    b548:	cmp	x22, x1
    b54c:	b.ge	b70c <read_crypto_list+0x133c>  // b.tcont
    b550:	ldr	x25, [sp, #128]
    b554:	mov	w1, #0x0                   	// #0
    b558:	sub	x0, x23, x25
    b55c:	b	b280 <read_crypto_list+0xeb0>
    b560:	ldr	w0, [x20, #120]
    b564:	mov	x24, #0x1                   	// #1
    b568:	and	w1, w0, #0x38
    b56c:	and	w0, w0, #0x30
    b570:	cmp	w1, #0x20
    b574:	ccmp	w0, #0x10, #0x4, ne  // ne = any
    b578:	b.ne	b414 <read_crypto_list+0x1044>  // b.any
    b57c:	and	w0, w22, #0x7fffff
    b580:	bl	dab0 <grub_unicode_get_comb_type>
    b584:	cmp	w0, #0x0
    b588:	ldr	w22, [x19]
    b58c:	cset	x24, eq  // eq = none
    b590:	add	x23, x25, x24
    b594:	b	b418 <read_crypto_list+0x1048>
    b598:	ldr	w1, [x21, #40]
    b59c:	cbz	w1, b0e0 <read_crypto_list+0xd10>
    b5a0:	sub	w1, w1, #0x1
    b5a4:	str	w1, [x21, #40]
    b5a8:	ldr	w0, [x19]
    b5ac:	b	b0e0 <read_crypto_list+0xd10>
    b5b0:	add	x19, x19, #0x4
    b5b4:	str	x25, [sp, #128]
    b5b8:	mov	x25, x0
    b5bc:	b	b450 <read_crypto_list+0x1080>
    b5c0:	mov	x19, x3
    b5c4:	b	b4a8 <read_crypto_list+0x10d8>
    b5c8:	str	x25, [sp, #128]
    b5cc:	mov	x25, x0
    b5d0:	b	b2d4 <read_crypto_list+0xf04>
    b5d4:	stp	x19, x23, [sp, #120]
    b5d8:	b	b21c <read_crypto_list+0xe4c>
    b5dc:	mov	x24, #0x8                   	// #8
    b5e0:	add	x23, x25, x24
    b5e4:	b	b418 <read_crypto_list+0x1048>
    b5e8:	mov	w2, w26
    b5ec:	mov	x1, x20
    b5f0:	bl	a870 <read_crypto_list+0x4a0>
    b5f4:	ldr	w0, [sp, #400]
    b5f8:	cbz	w0, b4f8 <read_crypto_list+0x1128>
    b5fc:	ldr	w1, [sp, #184]
    b600:	mov	x0, x20
    b604:	bl	ab10 <read_crypto_list+0x740>
    b608:	ldr	w0, [sp, #384]
    b60c:	cmp	w0, #0x0
    b610:	ldr	w0, [sp, #376]
    b614:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    b618:	b.eq	b50c <read_crypto_list+0x113c>  // b.none
    b61c:	mov	w0, #0xa                   	// #10
    b620:	bl	dab0 <grub_unicode_get_comb_type>
    b624:	cbnz	w0, b50c <read_crypto_list+0x113c>
    b628:	mov	w3, #0x1                   	// #1
    b62c:	mov	w0, #0xa                   	// #10
    b630:	stp	xzr, xzr, [sp, #200]
    b634:	mov	x1, x20
    b638:	mov	w2, #0x0                   	// #0
    b63c:	str	w0, [sp, #200]
    b640:	add	x0, sp, #0xc8
    b644:	strb	w3, [sp, #208]
    b648:	stp	xzr, xzr, [sp, #216]
    b64c:	bl	a5d0 <read_crypto_list+0x200>
    b650:	b	b50c <read_crypto_list+0x113c>
    b654:	ldr	w0, [sp, #188]
    b658:	tbnz	w0, #31, b320 <read_crypto_list+0xf50>
    b65c:	mov	w23, w0
    b660:	mov	w22, #0x20                  	// #32
    b664:	nop
    b668:	sub	w23, w23, #0x1
    b66c:	mov	w0, #0x20                  	// #32
    b670:	bl	dab0 <grub_unicode_get_comb_type>
    b674:	cbnz	w0, b69c <read_crypto_list+0x12cc>
    b678:	mov	w3, #0x1                   	// #1
    b67c:	stp	xzr, xzr, [sp, #200]
    b680:	mov	x1, x20
    b684:	add	x0, sp, #0xc8
    b688:	mov	w2, #0x0                   	// #0
    b68c:	str	w22, [sp, #200]
    b690:	strb	w3, [sp, #208]
    b694:	stp	xzr, xzr, [sp, #216]
    b698:	bl	a5d0 <read_crypto_list+0x200>
    b69c:	cmn	w23, #0x1
    b6a0:	b.ne	b668 <read_crypto_list+0x1298>  // b.any
    b6a4:	b	b320 <read_crypto_list+0xf50>
    b6a8:	ldr	w0, [sp, #156]
    b6ac:	cbz	w0, b1e8 <read_crypto_list+0xe18>
    b6b0:	mov	w0, w28
    b6b4:	ldp	x19, x20, [sp, #16]
    b6b8:	ldp	x21, x22, [sp, #32]
    b6bc:	ldp	x23, x24, [sp, #48]
    b6c0:	ldp	x25, x26, [sp, #64]
    b6c4:	ldp	x27, x28, [sp, #80]
    b6c8:	ldp	x29, x30, [sp], #368
    b6cc:	ret
    b6d0:	ldr	x0, [sp, #176]
    b6d4:	str	x0, [sp, #128]
    b6d8:	ldr	x19, [sp, #136]
    b6dc:	b	b4e0 <read_crypto_list+0x1110>
    b6e0:	ldr	w1, [sp, #184]
    b6e4:	mov	x0, x20
    b6e8:	mov	w28, #0x0                   	// #0
    b6ec:	bl	ab10 <read_crypto_list+0x740>
    b6f0:	b	b6b0 <read_crypto_list+0x12e0>
    b6f4:	add	x21, sp, #0xe8
    b6f8:	mov	x2, #0x88                  	// #136
    b6fc:	mov	x0, x21
    b700:	mov	w1, #0x0                   	// #0
    b704:	bl	0 <grub_memset>
    b708:	b	b018 <read_crypto_list+0xc48>
    b70c:	ldr	x0, [sp, #120]
    b710:	cmp	x19, x0
    b714:	b.eq	b744 <read_crypto_list+0x1374>  // b.none
    b718:	ldr	w0, [x19]
    b71c:	cmp	w0, #0xa
    b720:	b.eq	b744 <read_crypto_list+0x1374>  // b.none
    b724:	ldr	x0, [sp, #144]
    b728:	mov	w28, #0x1                   	// #1
    b72c:	str	x19, [x21, #16]
    b730:	sub	x0, x0, x19
    b734:	str	w26, [x21, #24]
    b738:	asr	x0, x0, #2
    b73c:	str	x0, [x21, #32]
    b740:	b	b6b0 <read_crypto_list+0x12e0>
    b744:	add	x19, x19, #0x4
    b748:	b	b724 <read_crypto_list+0x1354>
    b74c:	ldr	w0, [sp, #156]
    b750:	mov	w28, #0x0                   	// #0
    b754:	ldr	x23, [sp, #136]
    b758:	orr	w27, w27, w0
    b75c:	ldr	x0, [sp, #408]
    b760:	cbz	x0, b17c <read_crypto_list+0xdac>
    b764:	mov	x2, x0
    b768:	mov	w1, #0x0                   	// #0
    b76c:	mov	w28, #0x0                   	// #0
    b770:	ldr	x25, [sp, #176]
    b774:	b	b160 <read_crypto_list+0xd90>
    b778:	sub	sp, sp, #0xa0
    b77c:	stp	x29, x30, [sp, #48]
    b780:	add	x29, sp, #0x30
    b784:	stp	x19, x20, [sp, #64]
    b788:	mov	x19, x1
    b78c:	mov	x20, #0x0                   	// #0
    b790:	stp	x21, x22, [sp, #80]
    b794:	mov	x21, x2
    b798:	mov	w22, w4
    b79c:	stp	x23, x24, [sp, #96]
    b7a0:	mov	x23, x0
    b7a4:	cbnz	w3, b9c4 <read_crypto_list+0x15f4>
    b7a8:	ldr	x1, [x21, #64]
    b7ac:	mov	x0, x21
    b7b0:	blr	x1
    b7b4:	ldr	w2, [x21, #120]
    b7b8:	and	w2, w2, #0x38
    b7bc:	sub	w2, w2, #0x18
    b7c0:	tst	w2, #0xfffffff0
    b7c4:	b.ne	b8c8 <read_crypto_list+0x14f8>  // b.any
    b7c8:	mov	w2, #0x0                   	// #0
    b7cc:	mov	w1, #0x0                   	// #0
    b7d0:	mov	x0, x21
    b7d4:	bl	aea8 <read_crypto_list+0xad8>
    b7d8:	ldr	x1, [x21, #64]
    b7dc:	mov	x24, x0
    b7e0:	mov	x0, x21
    b7e4:	blr	x1
    b7e8:	str	xzr, [sp]
    b7ec:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    b7f0:	sub	x1, x19, x23
    b7f4:	str	wzr, [sp, #8]
    b7f8:	and	x6, x0, #0xffff
    b7fc:	ldr	x3, [x2]
    b800:	mov	x5, x24
    b804:	asr	x1, x1, #2
    b808:	mov	x0, x23
    b80c:	mov	x4, x21
    b810:	add	x2, sp, #0x98
    b814:	mov	w7, #0x0                   	// #0
    b818:	bl	f778 <grub_bidi_logical_to_visual>
    b81c:	tbnz	x0, #63, ba1c <read_crypto_list+0x164c>
    b820:	stp	x25, x26, [sp, #112]
    b824:	lsl	x24, x0, #5
    b828:	ldr	x26, [sp, #152]
    b82c:	add	x23, x26, x24
    b830:	cmp	x26, x23
    b834:	b.cs	b8a0 <read_crypto_list+0x14d0>  // b.hs, b.nlast
    b838:	cmp	x20, #0x0
    b83c:	mov	x19, x26
    b840:	cset	w25, ne  // ne = any
    b844:	stp	x27, x28, [sp, #128]
    b848:	mov	x27, #0x16                  	// #22
    b84c:	nop
    b850:	mov	x0, x19
    b854:	mov	w2, w22
    b858:	mov	x1, x21
    b85c:	bl	a5d0 <read_crypto_list+0x200>
    b860:	ldr	w0, [x19]
    b864:	cmp	w25, #0x0
    b868:	and	w0, w0, #0x7fffff
    b86c:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    b870:	b.eq	b944 <read_crypto_list+0x1574>  // b.none
    b874:	ldrh	w0, [x19, #6]
    b878:	and	w1, w0, #0xfffff807
    b87c:	ubfx	x0, x0, #3, #8
    b880:	cmp	w0, #0x2
    b884:	b.hi	b920 <read_crypto_list+0x1550>  // b.pmore
    b888:	strh	w1, [x19, #6]
    b88c:	add	x19, x19, #0x20
    b890:	cmp	x23, x19
    b894:	b.hi	b850 <read_crypto_list+0x1480>  // b.pmore
    b898:	ldp	x27, x28, [sp, #128]
    b89c:	ldr	x26, [sp, #152]
    b8a0:	mov	x0, x26
    b8a4:	bl	0 <grub_free>
    b8a8:	mov	w0, #0x0                   	// #0
    b8ac:	ldp	x29, x30, [sp, #48]
    b8b0:	ldp	x19, x20, [sp, #64]
    b8b4:	ldp	x21, x22, [sp, #80]
    b8b8:	ldp	x23, x24, [sp, #96]
    b8bc:	ldp	x25, x26, [sp, #112]
    b8c0:	add	sp, sp, #0xa0
    b8c4:	ret
    b8c8:	mov	w0, #0xffffffff            	// #-1
    b8cc:	str	wzr, [sp]
    b8d0:	str	w0, [sp, #8]
    b8d4:	mov	w7, w22
    b8d8:	str	wzr, [sp, #16]
    b8dc:	mov	x5, x20
    b8e0:	str	wzr, [sp, #24]
    b8e4:	mov	x4, x21
    b8e8:	str	wzr, [sp, #32]
    b8ec:	mov	x1, x19
    b8f0:	str	xzr, [sp, #40]
    b8f4:	mov	x0, x23
    b8f8:	mov	w6, #0x0                   	// #0
    b8fc:	mov	w3, #0x0                   	// #0
    b900:	mov	w2, #0x0                   	// #0
    b904:	bl	af98 <read_crypto_list+0xbc8>
    b908:	ldp	x29, x30, [sp, #48]
    b90c:	ldp	x19, x20, [sp, #64]
    b910:	ldp	x21, x22, [sp, #80]
    b914:	ldp	x23, x24, [sp, #96]
    b918:	add	sp, sp, #0xa0
    b91c:	ret
    b920:	ldr	x0, [x19, #24]
    b924:	add	x19, x19, #0x20
    b928:	bl	0 <grub_free>
    b92c:	ldurh	w0, [x19, #-26]
    b930:	and	w0, w0, #0xfffff807
    b934:	sturh	w0, [x19, #-26]
    b938:	cmp	x23, x19
    b93c:	b.hi	b850 <read_crypto_list+0x1480>  // b.pmore
    b940:	b	b898 <read_crypto_list+0x14c8>
    b944:	ldr	w1, [x20, #120]
    b948:	mov	x0, x21
    b94c:	ldr	x2, [x21, #56]
    b950:	add	w1, w1, #0x1
    b954:	str	w1, [x20, #120]
    b958:	sxtw	x28, w1
    b95c:	blr	x2
    b960:	lsr	w1, w0, #16
    b964:	cmp	wzr, w0, lsr #16
    b968:	sub	x1, x1, #0x2
    b96c:	csel	x1, x1, x27, ne  // ne = any
    b970:	cmp	x1, x28
    b974:	b.gt	b874 <read_crypto_list+0x14a4>
    b978:	sub	x26, x19, x26
    b97c:	asr	x24, x24, #5
    b980:	ldr	x1, [sp, #152]
    b984:	sub	x24, x24, x26, asr #5
    b988:	sub	x24, x24, #0x1
    b98c:	add	x19, x19, #0x20
    b990:	ldp	x25, x26, [sp, #112]
    b994:	mov	w0, #0x1                   	// #1
    b998:	ldp	x27, x28, [sp, #128]
    b99c:	str	x19, [x20, #8]
    b9a0:	str	w22, [x20, #24]
    b9a4:	str	x24, [x20, #32]
    b9a8:	str	x1, [x20, #112]
    b9ac:	ldp	x29, x30, [sp, #48]
    b9b0:	ldp	x19, x20, [sp, #64]
    b9b4:	ldp	x21, x22, [sp, #80]
    b9b8:	ldp	x23, x24, [sp, #96]
    b9bc:	add	sp, sp, #0xa0
    b9c0:	ret
    b9c4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    b9c8:	ldr	x24, [x0]
    b9cc:	ldr	x20, [x24]
    b9d0:	cbz	x20, b9f0 <read_crypto_list+0x1620>
    b9d4:	nop
    b9d8:	ldr	x1, [x21, #16]
    b9dc:	ldr	x0, [x20, #128]
    b9e0:	bl	0 <grub_strcmp>
    b9e4:	cbz	w0, b7a8 <read_crypto_list+0x13d8>
    b9e8:	ldr	x20, [x20]
    b9ec:	cbnz	x20, b9d8 <read_crypto_list+0x1608>
    b9f0:	mov	x0, #0x88                  	// #136
    b9f4:	bl	0 <grub_zalloc>
    b9f8:	mov	x20, x0
    b9fc:	cbz	x0, ba3c <read_crypto_list+0x166c>
    ba00:	ldr	x0, [x21, #16]
    ba04:	bl	0 <grub_strdup>
    ba08:	str	x0, [x20, #128]
    ba0c:	ldr	x1, [x24]
    ba10:	str	x1, [x20]
    ba14:	str	x20, [x24]
    ba18:	b	b7a8 <read_crypto_list+0x13d8>
    ba1c:	bl	0 <grub_print_error>
    ba20:	mov	w0, #0x0                   	// #0
    ba24:	ldp	x29, x30, [sp, #48]
    ba28:	ldp	x19, x20, [sp, #64]
    ba2c:	ldp	x21, x22, [sp, #80]
    ba30:	ldp	x23, x24, [sp, #96]
    ba34:	add	sp, sp, #0xa0
    ba38:	ret
    ba3c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ba40:	ldr	x0, [x0]
    ba44:	str	wzr, [x0]
    ba48:	b	b7a8 <read_crypto_list+0x13d8>
    ba4c:	nop
	...

000000000000ba68 <grub_normal_reset_more>:
    ba68:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ba6c:	ldr	x1, [x0]
    ba70:	ldr	x0, [x1]
    ba74:	str	x0, [x1, #8]
    ba78:	cbz	x0, ba90 <grub_normal_reset_more+0x28>
    ba7c:	nop
    ba80:	str	wzr, [x0, #120]
    ba84:	ldr	x0, [x0]
    ba88:	cbnz	x0, ba80 <grub_normal_reset_more+0x18>
    ba8c:	str	xzr, [x1, #8]
    ba90:	ret
    ba94:	nop
	...

000000000000baa0 <grub_set_more>:
    baa0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    baa4:	cmp	w0, #0x0
    baa8:	cset	w2, ne  // ne = any
    baac:	ldr	x1, [x1]
    bab0:	ldr	x0, [x1]
    bab4:	str	x0, [x1, #8]
    bab8:	str	w2, [x1, #16]
    babc:	cbz	x0, bad0 <grub_set_more+0x30>
    bac0:	str	wzr, [x0, #120]
    bac4:	ldr	x0, [x0]
    bac8:	cbnz	x0, bac0 <grub_set_more+0x20>
    bacc:	str	xzr, [x1, #8]
    bad0:	ret
    bad4:	nop
	...

000000000000bae0 <grub_puts_terminal>:
    bae0:	stp	x29, x30, [sp, #-112]!
    bae4:	mov	x29, sp
    bae8:	stp	x19, x20, [sp, #16]
    baec:	mov	x20, x0
    baf0:	mov	x19, x1
    baf4:	bl	0 <grub_error_push>
    baf8:	add	x2, sp, #0x48
    bafc:	add	x1, sp, #0x40
    bb00:	mov	x0, x20
    bb04:	bl	da40 <grub_utf8_to_ucs4_alloc>
    bb08:	bl	0 <grub_error_pop>
    bb0c:	ldr	x0, [sp, #64]
    bb10:	cbz	x0, bb3c <grub_puts_terminal+0x5c>
    bb14:	ldr	x1, [sp, #72]
    bb18:	mov	x2, x19
    bb1c:	mov	w4, #0x0                   	// #0
    bb20:	mov	w3, #0x0                   	// #0
    bb24:	bl	b778 <read_crypto_list+0x13a8>
    bb28:	ldr	x0, [sp, #64]
    bb2c:	bl	0 <grub_free>
    bb30:	ldp	x19, x20, [sp, #16]
    bb34:	ldp	x29, x30, [sp], #112
    bb38:	ret
    bb3c:	ldrb	w1, [x20]
    bb40:	cbz	w1, bb30 <grub_puts_terminal+0x50>
    bb44:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bb48:	stp	x21, x22, [sp, #32]
    bb4c:	mov	w22, #0x1                   	// #1
    bb50:	ldr	x21, [x0]
    bb54:	str	x23, [sp, #48]
    bb58:	mov	w23, #0xd                   	// #13
    bb5c:	nop
    bb60:	ldr	x19, [x21]
    bb64:	stp	xzr, xzr, [sp, #80]
    bb68:	str	w1, [sp, #80]
    bb6c:	strb	w22, [sp, #88]
    bb70:	stp	xzr, xzr, [sp, #96]
    bb74:	cbz	x19, bb94 <grub_puts_terminal+0xb4>
    bb78:	ldr	x2, [x19, #40]
    bb7c:	mov	x0, x19
    bb80:	add	x1, sp, #0x50
    bb84:	blr	x2
    bb88:	ldr	x19, [x19]
    bb8c:	cbnz	x19, bb78 <grub_puts_terminal+0x98>
    bb90:	ldrb	w1, [x20]
    bb94:	cmp	w1, #0xa
    bb98:	b.eq	bbb8 <grub_puts_terminal+0xd8>  // b.none
    bb9c:	ldrb	w1, [x20, #1]!
    bba0:	cbnz	w1, bb60 <grub_puts_terminal+0x80>
    bba4:	ldp	x19, x20, [sp, #16]
    bba8:	ldp	x21, x22, [sp, #32]
    bbac:	ldr	x23, [sp, #48]
    bbb0:	ldp	x29, x30, [sp], #112
    bbb4:	ret
    bbb8:	ldr	w0, [sp, #80]
    bbbc:	ldr	x19, [x21]
    bbc0:	bfxil	w0, w23, #0, #23
    bbc4:	str	w0, [sp, #80]
    bbc8:	cbz	x19, bb9c <grub_puts_terminal+0xbc>
    bbcc:	nop
    bbd0:	ldr	x2, [x19, #40]
    bbd4:	mov	x0, x19
    bbd8:	add	x1, sp, #0x50
    bbdc:	blr	x2
    bbe0:	ldr	x19, [x19]
    bbe4:	cbnz	x19, bbd0 <grub_puts_terminal+0xf0>
    bbe8:	b	bb9c <grub_puts_terminal+0xbc>
    bbec:	nop
	...

000000000000bbf8 <grub_term_save_pos>:
    bbf8:	stp	x29, x30, [sp, #-48]!
    bbfc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bc00:	mov	x29, sp
    bc04:	stp	x19, x20, [sp, #16]
    bc08:	ldr	x19, [x0]
    bc0c:	ldr	x1, [x19]
    bc10:	str	x21, [sp, #32]
    bc14:	cbz	x1, bc7c <grub_term_save_pos+0x84>
    bc18:	mov	w0, #0x0                   	// #0
    bc1c:	nop
    bc20:	ldr	x1, [x1]
    bc24:	add	w0, w0, #0x1
    bc28:	cbnz	x1, bc20 <grub_term_save_pos+0x28>
    bc2c:	ubfiz	x0, x0, #2, #32
    bc30:	bl	0 <grub_malloc>
    bc34:	mov	x21, x0
    bc38:	cbz	x0, bc68 <grub_term_save_pos+0x70>
    bc3c:	ldr	x19, [x19]
    bc40:	cbz	x19, bc68 <grub_term_save_pos+0x70>
    bc44:	mov	x20, x0
    bc48:	ldr	x1, [x19, #64]
    bc4c:	mov	x0, x19
    bc50:	blr	x1
    bc54:	strh	w0, [x20], #4
    bc58:	ldr	x19, [x19]
    bc5c:	lsr	w0, w0, #16
    bc60:	sturh	w0, [x20, #-2]
    bc64:	cbnz	x19, bc48 <grub_term_save_pos+0x50>
    bc68:	mov	x0, x21
    bc6c:	ldp	x19, x20, [sp, #16]
    bc70:	ldr	x21, [sp, #32]
    bc74:	ldp	x29, x30, [sp], #48
    bc78:	ret
    bc7c:	mov	x0, #0x0                   	// #0
    bc80:	b	bc30 <grub_term_save_pos+0x38>
    bc84:	nop
	...

000000000000bc90 <grub_term_restore_pos>:
    bc90:	cbz	x0, bcdc <grub_term_restore_pos+0x4c>
    bc94:	stp	x29, x30, [sp, #-32]!
    bc98:	mov	x29, sp
    bc9c:	stp	x19, x20, [sp, #16]
    bca0:	mov	x20, x0
    bca4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bca8:	ldr	x0, [x0]
    bcac:	ldr	x19, [x0]
    bcb0:	cbz	x19, bcd0 <grub_term_restore_pos+0x40>
    bcb4:	nop
    bcb8:	ldr	w1, [x20], #4
    bcbc:	mov	x0, x19
    bcc0:	ldr	x2, [x19, #72]
    bcc4:	blr	x2
    bcc8:	ldr	x19, [x19]
    bccc:	cbnz	x19, bcb8 <grub_term_restore_pos+0x28>
    bcd0:	ldp	x19, x20, [sp, #16]
    bcd4:	ldp	x29, x30, [sp], #32
    bcd8:	ret
    bcdc:	ret
	...

000000000000bce8 <read_terminal_list>:
    bce8:	cbz	x0, bee4 <read_terminal_list+0x1fc>
    bcec:	stp	x29, x30, [sp, #-96]!
    bcf0:	mov	x1, x0
    bcf4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bcf8:	mov	x29, sp
    bcfc:	ldr	x0, [x0]
    bd00:	stp	x19, x20, [sp, #16]
    bd04:	bl	0 <grub_xasprintf>
    bd08:	mov	x19, x0
    bd0c:	cbz	x0, bebc <read_terminal_list+0x1d4>
    bd10:	mov	w1, #0x32                  	// #50
    bd14:	stp	x21, x22, [sp, #32]
    bd18:	bl	0 <grub_file_open>
    bd1c:	mov	x22, x0
    bd20:	mov	x0, x19
    bd24:	bl	0 <grub_free>
    bd28:	cbz	x22, beb8 <read_terminal_list+0x1d0>
    bd2c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bd30:	stp	x23, x24, [sp, #48]
    bd34:	ldr	x23, [x0]
    bd38:	stp	x25, x26, [sp, #64]
    bd3c:	ldr	x19, [x23]
    bd40:	str	x27, [sp, #80]
    bd44:	cbz	x19, bd6c <read_terminal_list+0x84>
    bd48:	mov	x20, x19
    bd4c:	ldr	x19, [x19]
    bd50:	ldr	x0, [x20, #8]
    bd54:	bl	0 <grub_free>
    bd58:	ldr	x0, [x20, #16]
    bd5c:	bl	0 <grub_free>
    bd60:	mov	x0, x20
    bd64:	bl	0 <grub_free>
    bd68:	cbnz	x19, bd48 <read_terminal_list+0x60>
    bd6c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bd70:	ldr	x24, [x0]
    bd74:	ldr	x19, [x24]
    bd78:	cbz	x19, bda4 <read_terminal_list+0xbc>
    bd7c:	nop
    bd80:	mov	x20, x19
    bd84:	ldr	x19, [x19]
    bd88:	ldr	x0, [x20, #8]
    bd8c:	bl	0 <grub_free>
    bd90:	ldr	x0, [x20, #16]
    bd94:	bl	0 <grub_free>
    bd98:	mov	x0, x20
    bd9c:	bl	0 <grub_free>
    bda0:	cbnz	x19, bd80 <read_terminal_list+0x98>
    bda4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bda8:	str	xzr, [x23]
    bdac:	str	xzr, [x24]
    bdb0:	ldr	x25, [x0]
    bdb4:	mov	x0, x22
    bdb8:	bl	fb68 <grub_file_getline>
    bdbc:	mov	x21, x0
    bdc0:	cbz	x0, be90 <read_terminal_list+0x1a8>
    bdc4:	nop
    bdc8:	mov	x19, x0
    bdcc:	b	bdd4 <read_terminal_list+0xec>
    bdd0:	add	x19, x19, #0x1
    bdd4:	ldrb	w0, [x19]
    bdd8:	bl	0 <grub_isspace>
    bddc:	cbnz	w0, bdd0 <read_terminal_list+0xe8>
    bde0:	ldrb	w0, [x19]
    bde4:	cmp	w0, #0x69
    bde8:	b.eq	bed4 <read_terminal_list+0x1ec>  // b.none
    bdec:	mov	x26, x23
    bdf0:	cmp	w0, #0x6f
    bdf4:	b.ne	be78 <read_terminal_list+0x190>  // b.any
    bdf8:	add	x19, x19, #0x1
    bdfc:	mov	w1, #0x3a                  	// #58
    be00:	mov	x0, x19
    be04:	bl	0 <grub_strchr>
    be08:	cbz	x0, be78 <read_terminal_list+0x190>
    be0c:	mov	x20, x0
    be10:	strb	wzr, [x20], #1
    be14:	ldrb	w0, [x0, #1]
    be18:	cmp	w0, #0x20
    be1c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    be20:	b.ne	be38 <read_terminal_list+0x150>  // b.any
    be24:	nop
    be28:	ldrb	w1, [x20, #1]!
    be2c:	cmp	w1, #0x20
    be30:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    be34:	b.eq	be28 <read_terminal_list+0x140>  // b.none
    be38:	mov	x0, #0x18                  	// #24
    be3c:	bl	0 <grub_malloc>
    be40:	mov	x27, x0
    be44:	cbz	x0, bedc <read_terminal_list+0x1f4>
    be48:	mov	x0, x19
    be4c:	bl	0 <grub_strdup>
    be50:	str	x0, [x27, #8]
    be54:	cbz	x0, bef4 <read_terminal_list+0x20c>
    be58:	mov	x0, x20
    be5c:	bl	0 <grub_strdup>
    be60:	str	x0, [x27, #16]
    be64:	cbz	x0, bf04 <read_terminal_list+0x21c>
    be68:	ldr	x0, [x26]
    be6c:	str	x0, [x27]
    be70:	str	x27, [x26]
    be74:	nop
    be78:	mov	x0, x21
    be7c:	bl	0 <grub_free>
    be80:	mov	x0, x22
    be84:	bl	fb68 <grub_file_getline>
    be88:	mov	x21, x0
    be8c:	cbnz	x0, bdc8 <read_terminal_list+0xe0>
    be90:	mov	x0, x22
    be94:	bl	0 <grub_file_close>
    be98:	ldp	x21, x22, [sp, #32]
    be9c:	ldp	x23, x24, [sp, #48]
    bea0:	ldr	x27, [sp, #80]
    bea4:	str	wzr, [x25]
    bea8:	ldp	x19, x20, [sp, #16]
    beac:	ldp	x25, x26, [sp, #64]
    beb0:	ldp	x29, x30, [sp], #96
    beb4:	ret
    beb8:	ldp	x21, x22, [sp, #32]
    bebc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bec0:	ldp	x19, x20, [sp, #16]
    bec4:	ldr	x0, [x0]
    bec8:	str	wzr, [x0]
    becc:	ldp	x29, x30, [sp], #96
    bed0:	ret
    bed4:	mov	x26, x24
    bed8:	b	bdf8 <read_terminal_list+0x110>
    bedc:	str	wzr, [x25]
    bee0:	b	be78 <read_terminal_list+0x190>
    bee4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    bee8:	ldr	x0, [x0]
    beec:	str	wzr, [x0]
    bef0:	ret
    bef4:	mov	x0, x27
    bef8:	str	wzr, [x25]
    befc:	bl	0 <grub_free>
    bf00:	b	be78 <read_terminal_list+0x190>
    bf04:	ldr	x0, [x27, #8]
    bf08:	str	wzr, [x25]
    bf0c:	bl	0 <grub_free>
    bf10:	mov	x0, x27
    bf14:	bl	0 <grub_free>
    bf18:	b	be78 <read_terminal_list+0x190>
    bf1c:	nop
	...

000000000000bf40 <grub_putcode>:
    bf40:	stp	x29, x30, [sp, #-64]!
    bf44:	mov	x29, sp
    bf48:	stp	x19, x20, [sp, #16]
    bf4c:	mov	x20, x1
    bf50:	mov	w19, w0
    bf54:	bl	dab0 <grub_unicode_get_comb_type>
    bf58:	cbz	w0, bf68 <grub_putcode+0x28>
    bf5c:	ldp	x19, x20, [sp, #16]
    bf60:	ldp	x29, x30, [sp], #64
    bf64:	ret
    bf68:	stp	xzr, xzr, [sp, #32]
    bf6c:	mov	w0, #0x1                   	// #1
    bf70:	cmp	w19, #0x7f
    bf74:	strb	w0, [sp, #40]
    bf78:	stp	xzr, xzr, [sp, #48]
    bf7c:	b.ls	bfdc <grub_putcode+0x9c>  // b.plast
    bf80:	ldr	w0, [x20, #120]
    bf84:	ands	w0, w0, #0x38
    bf88:	b.eq	c008 <grub_putcode+0xc8>  // b.none
    bf8c:	cmp	w0, #0x8
    bf90:	b.ne	bfdc <grub_putcode+0x9c>  // b.any
    bf94:	mov	w0, #0x2501                	// #9473
    bf98:	cmp	w19, w0
    bf9c:	b.eq	c144 <grub_putcode+0x204>  // b.none
    bfa0:	b.hi	c0cc <grub_putcode+0x18c>  // b.pmore
    bfa4:	mov	w0, #0x2192                	// #8594
    bfa8:	cmp	w19, w0
    bfac:	b.eq	c12c <grub_putcode+0x1ec>  // b.none
    bfb0:	b.ls	c0a4 <grub_putcode+0x164>  // b.plast
    bfb4:	mov	w0, #0x2193                	// #8595
    bfb8:	mov	w3, #0x19                  	// #25
    bfbc:	cmp	w19, w0
    bfc0:	b.eq	bfe0 <grub_putcode+0xa0>  // b.none
    bfc4:	mov	w0, #0x2195                	// #8597
    bfc8:	cmp	w19, w0
    bfcc:	mov	w3, #0x3f                  	// #63
    bfd0:	mov	w0, #0x12                  	// #18
    bfd4:	csel	w3, w3, w0, ne  // ne = any
    bfd8:	b	bfe0 <grub_putcode+0xa0>
    bfdc:	and	w3, w19, #0x7fffff
    bfe0:	ldr	w4, [sp, #32]
    bfe4:	mov	x1, x20
    bfe8:	add	x0, sp, #0x20
    bfec:	mov	w2, #0x0                   	// #0
    bff0:	bfxil	w4, w3, #0, #23
    bff4:	str	w4, [sp, #32]
    bff8:	bl	a5d0 <read_crypto_list+0x200>
    bffc:	ldp	x19, x20, [sp, #16]
    c000:	ldp	x29, x30, [sp], #64
    c004:	ret
    c008:	mov	w0, #0x2193                	// #8595
    c00c:	cmp	w19, w0
    c010:	b.eq	c13c <grub_putcode+0x1fc>  // b.none
    c014:	b.hi	c050 <grub_putcode+0x110>  // b.pmore
    c018:	mov	w0, #0x2191                	// #8593
    c01c:	mov	w3, #0x5e                  	// #94
    c020:	cmp	w19, w0
    c024:	b.eq	bfe0 <grub_putcode+0xa0>  // b.none
    c028:	mov	w0, #0x2192                	// #8594
    c02c:	mov	w3, #0x3e                  	// #62
    c030:	cmp	w19, w0
    c034:	b.eq	bfe0 <grub_putcode+0xa0>  // b.none
    c038:	mov	w0, #0x2190                	// #8592
    c03c:	cmp	w19, w0
    c040:	mov	w3, #0x3f                  	// #63
    c044:	mov	w0, #0x3c                  	// #60
    c048:	csel	w3, w3, w0, ne  // ne = any
    c04c:	b	bfe0 <grub_putcode+0xa0>
    c050:	mov	w0, #0xffffdaff            	// #-9473
    c054:	add	w19, w19, w0
    c058:	cmp	w19, #0x1a
    c05c:	mov	w3, #0x3f                  	// #63
    c060:	b.hi	bfe0 <grub_putcode+0xa0>  // b.pmore
    c064:	mov	x0, #0x1                   	// #1
    c068:	mov	x2, #0x4000                	// #16384
    c06c:	movk	x2, #0x444, lsl #16
    c070:	lsl	x19, x0, x19
    c074:	tst	x19, x2
    c078:	b.ne	c094 <grub_putcode+0x154>  // b.any
    c07c:	tbnz	w19, #2, c09c <grub_putcode+0x15c>
    c080:	tst	x19, #0x1
    c084:	mov	w3, #0x3f                  	// #63
    c088:	mov	w0, #0x2d                  	// #45
    c08c:	csel	w3, w3, w0, eq  // eq = none
    c090:	b	bfe0 <grub_putcode+0xa0>
    c094:	mov	w3, #0x2b                  	// #43
    c098:	b	bfe0 <grub_putcode+0xa0>
    c09c:	mov	w3, #0x7c                  	// #124
    c0a0:	b	bfe0 <grub_putcode+0xa0>
    c0a4:	mov	w0, #0x2190                	// #8592
    c0a8:	mov	w3, #0x1b                  	// #27
    c0ac:	cmp	w19, w0
    c0b0:	b.eq	bfe0 <grub_putcode+0xa0>  // b.none
    c0b4:	mov	w0, #0x2191                	// #8593
    c0b8:	cmp	w19, w0
    c0bc:	mov	w3, #0x3f                  	// #63
    c0c0:	mov	w0, #0x18                  	// #24
    c0c4:	csel	w3, w3, w0, ne  // ne = any
    c0c8:	b	bfe0 <grub_putcode+0xa0>
    c0cc:	mov	w0, #0x2513                	// #9491
    c0d0:	cmp	w19, w0
    c0d4:	b.eq	c134 <grub_putcode+0x1f4>  // b.none
    c0d8:	b.ls	c104 <grub_putcode+0x1c4>  // b.plast
    c0dc:	mov	w0, #0x2517                	// #9495
    c0e0:	mov	w3, #0xc0                  	// #192
    c0e4:	cmp	w19, w0
    c0e8:	b.eq	bfe0 <grub_putcode+0xa0>  // b.none
    c0ec:	mov	w0, #0x251b                	// #9499
    c0f0:	cmp	w19, w0
    c0f4:	mov	w3, #0x3f                  	// #63
    c0f8:	mov	w0, #0xd9                  	// #217
    c0fc:	csel	w3, w3, w0, ne  // ne = any
    c100:	b	bfe0 <grub_putcode+0xa0>
    c104:	mov	w0, #0x2503                	// #9475
    c108:	mov	w3, #0xb3                  	// #179
    c10c:	cmp	w19, w0
    c110:	b.eq	bfe0 <grub_putcode+0xa0>  // b.none
    c114:	mov	w0, #0x250f                	// #9487
    c118:	cmp	w19, w0
    c11c:	mov	w3, #0x3f                  	// #63
    c120:	mov	w0, #0xda                  	// #218
    c124:	csel	w3, w3, w0, ne  // ne = any
    c128:	b	bfe0 <grub_putcode+0xa0>
    c12c:	mov	w3, #0x1a                  	// #26
    c130:	b	bfe0 <grub_putcode+0xa0>
    c134:	mov	w3, #0xbf                  	// #191
    c138:	b	bfe0 <grub_putcode+0xa0>
    c13c:	mov	w3, #0x76                  	// #118
    c140:	b	bfe0 <grub_putcode+0xa0>
    c144:	mov	w3, #0xc4                  	// #196
    c148:	b	bfe0 <grub_putcode+0xa0>
    c14c:	nop

000000000000c150 <grub_print_ucs4_menu>:
    c150:	sub	sp, sp, #0xc0
    c154:	stp	x29, x30, [sp, #48]
    c158:	add	x29, sp, #0x30
    c15c:	ldr	x8, [x4, #64]
    c160:	stp	x19, x20, [sp, #64]
    c164:	mov	w19, w2
    c168:	stp	x21, x22, [sp, #80]
    c16c:	mov	w20, w7
    c170:	mov	w22, w6
    c174:	stp	x23, x24, [sp, #96]
    c178:	mov	x23, x4
    c17c:	mov	w24, w5
    c180:	stp	x25, x26, [sp, #112]
    c184:	mov	x25, x0
    c188:	mov	w26, w3
    c18c:	stp	x27, x28, [sp, #128]
    c190:	mov	x0, x4
    c194:	mov	w27, w5
    c198:	mov	w28, w6
    c19c:	str	x1, [sp, #144]
    c1a0:	blr	x8
    c1a4:	cmp	w19, w0, uxth
    c1a8:	b.le	c200 <grub_print_ucs4_menu+0xb0>
    c1ac:	cbnz	w20, c3a8 <grub_print_ucs4_menu+0x258>
    c1b0:	and	w21, w0, #0xffff
    c1b4:	sub	w21, w19, w21
    c1b8:	subs	w21, w21, #0x1
    c1bc:	b.mi	c200 <grub_print_ucs4_menu+0xb0>  // b.first
    c1c0:	mov	w0, #0x20                  	// #32
    c1c4:	bl	dab0 <grub_unicode_get_comb_type>
    c1c8:	cbnz	w0, c1f4 <grub_print_ucs4_menu+0xa4>
    c1cc:	mov	w3, #0x20                  	// #32
    c1d0:	stp	xzr, xzr, [sp, #160]
    c1d4:	mov	x1, x23
    c1d8:	str	w3, [sp, #160]
    c1dc:	mov	w3, #0x1                   	// #1
    c1e0:	add	x0, sp, #0xa0
    c1e4:	mov	w2, #0x0                   	// #0
    c1e8:	strb	w3, [sp, #168]
    c1ec:	stp	xzr, xzr, [sp, #176]
    c1f0:	bl	a5d0 <read_crypto_list+0x200>
    c1f4:	sub	w21, w21, #0x1
    c1f8:	cmn	w21, #0x1
    c1fc:	b.ne	c1c0 <grub_print_ucs4_menu+0x70>  // b.any
    c200:	ldr	w0, [x23, #120]
    c204:	cmp	w20, #0x0
    c208:	cset	w21, ne  // ne = any
    c20c:	and	w0, w0, #0x38
    c210:	sub	w0, w0, #0x18
    c214:	tst	w0, #0xfffffff0
    c218:	b.ne	c348 <grub_print_ucs4_menu+0x1f8>  // b.any
    c21c:	mov	w2, w26
    c220:	mov	w1, w19
    c224:	mov	x0, x23
    c228:	bl	aea8 <read_crypto_list+0xad8>
    c22c:	ldr	x1, [x23, #64]
    c230:	mov	x5, x0
    c234:	mov	x0, x23
    c238:	str	x5, [sp, #152]
    c23c:	blr	x1
    c240:	and	w6, w0, #0xffff
    c244:	ldp	x0, x5, [sp, #144]
    c248:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    c24c:	sub	w6, w6, w19
    c250:	str	w21, [sp, #8]
    c254:	ldr	x3, [x2]
    c258:	sxtw	x6, w6
    c25c:	mov	w7, w20
    c260:	mov	x4, x23
    c264:	sub	x1, x0, x25
    c268:	add	x2, sp, #0xa0
    c26c:	ldr	x0, [sp, #192]
    c270:	str	x0, [sp]
    c274:	asr	x1, x1, #2
    c278:	mov	x0, x25
    c27c:	bl	f778 <grub_bidi_logical_to_visual>
    c280:	mov	x1, x0
    c284:	tbnz	x0, #63, c3c0 <grub_print_ucs4_menu+0x270>
    c288:	ldr	x2, [sp, #160]
    c28c:	cbz	w24, c41c <grub_print_ucs4_menu+0x2cc>
    c290:	add	x5, x2, x0, lsl #5
    c294:	mov	x0, x2
    c298:	cmp	x2, x5
    c29c:	b.cc	c2ac <grub_print_ucs4_menu+0x15c>  // b.lo, b.ul, b.last
    c2a0:	b	c2c8 <grub_print_ucs4_menu+0x178>
    c2a4:	cmp	x0, x5
    c2a8:	b.cs	c2c8 <grub_print_ucs4_menu+0x178>  // b.hs, b.nlast
    c2ac:	ldr	w3, [x0]
    c2b0:	add	x0, x0, #0x20
    c2b4:	and	w3, w3, #0x7fffff
    c2b8:	cmp	w3, #0xa
    c2bc:	b.ne	c2a4 <grub_print_ucs4_menu+0x154>  // b.any
    c2c0:	subs	w27, w27, #0x1
    c2c4:	b.ne	c2a4 <grub_print_ucs4_menu+0x154>  // b.any
    c2c8:	cmn	w22, #0x1
    c2cc:	b.eq	c3e4 <grub_print_ucs4_menu+0x294>  // b.none
    c2d0:	cbz	w22, c414 <grub_print_ucs4_menu+0x2c4>
    c2d4:	add	x2, x2, x1, lsl #5
    c2d8:	cmp	x2, x0
    c2dc:	b.ls	c414 <grub_print_ucs4_menu+0x2c4>  // b.plast
    c2e0:	mov	x1, x0
    c2e4:	b	c2f0 <grub_print_ucs4_menu+0x1a0>
    c2e8:	cmp	x1, x2
    c2ec:	b.cs	c30c <grub_print_ucs4_menu+0x1bc>  // b.hs, b.nlast
    c2f0:	ldr	w3, [x1]
    c2f4:	add	x1, x1, #0x20
    c2f8:	and	w3, w3, #0x7fffff
    c2fc:	cmp	w3, #0xa
    c300:	b.ne	c2e8 <grub_print_ucs4_menu+0x198>  // b.any
    c304:	subs	w28, w28, #0x1
    c308:	b.ne	c2e8 <grub_print_ucs4_menu+0x198>  // b.any
    c30c:	sub	x1, x1, x0
    c310:	asr	x1, x1, #5
    c314:	mov	w6, #0x1                   	// #1
    c318:	str	w6, [sp]
    c31c:	mov	w7, w20
    c320:	mov	x4, x23
    c324:	mov	w3, w26
    c328:	mov	w2, w19
    c32c:	mov	x5, #0x0                   	// #0
    c330:	bl	aba8 <read_crypto_list+0x7d8>
    c334:	cbz	w0, c3ec <grub_print_ucs4_menu+0x29c>
    c338:	mov	x0, #0x0                   	// #0
    c33c:	ldr	x1, [sp, #160]
    c340:	str	x1, [x0, #112]
    c344:	brk	#0x3e8
    c348:	ldr	x1, [sp, #144]
    c34c:	mov	w7, #0x1                   	// #1
    c350:	ldr	x0, [sp, #192]
    c354:	str	w24, [sp]
    c358:	str	w22, [sp, #8]
    c35c:	mov	x4, x23
    c360:	str	w20, [sp, #16]
    c364:	mov	w3, w26
    c368:	str	w21, [sp, #24]
    c36c:	mov	w2, w19
    c370:	str	w7, [sp, #32]
    c374:	mov	w6, #0x0                   	// #0
    c378:	str	x0, [sp, #40]
    c37c:	mov	x5, #0x0                   	// #0
    c380:	mov	x0, x25
    c384:	bl	af98 <read_crypto_list+0xbc8>
    c388:	ldp	x29, x30, [sp, #48]
    c38c:	ldp	x19, x20, [sp, #64]
    c390:	ldp	x21, x22, [sp, #80]
    c394:	ldp	x23, x24, [sp, #96]
    c398:	ldp	x25, x26, [sp, #112]
    c39c:	ldp	x27, x28, [sp, #128]
    c3a0:	add	sp, sp, #0xc0
    c3a4:	ret
    c3a8:	ldr	x2, [x23, #72]
    c3ac:	bfxil	w0, w19, #0, #16
    c3b0:	mov	w1, w0
    c3b4:	mov	x0, x23
    c3b8:	blr	x2
    c3bc:	b	c200 <grub_print_ucs4_menu+0xb0>
    c3c0:	bl	0 <grub_print_error>
    c3c4:	ldp	x29, x30, [sp, #48]
    c3c8:	ldp	x19, x20, [sp, #64]
    c3cc:	ldp	x21, x22, [sp, #80]
    c3d0:	ldp	x23, x24, [sp, #96]
    c3d4:	ldp	x25, x26, [sp, #112]
    c3d8:	ldp	x27, x28, [sp, #128]
    c3dc:	add	sp, sp, #0xc0
    c3e0:	ret
    c3e4:	add	x1, x2, x1, lsl #5
    c3e8:	b	c30c <grub_print_ucs4_menu+0x1bc>
    c3ec:	ldr	x0, [sp, #160]
    c3f0:	bl	0 <grub_free>
    c3f4:	ldp	x29, x30, [sp, #48]
    c3f8:	ldp	x19, x20, [sp, #64]
    c3fc:	ldp	x21, x22, [sp, #80]
    c400:	ldp	x23, x24, [sp, #96]
    c404:	ldp	x25, x26, [sp, #112]
    c408:	ldp	x27, x28, [sp, #128]
    c40c:	add	sp, sp, #0xc0
    c410:	ret
    c414:	mov	x1, #0x0                   	// #0
    c418:	b	c314 <grub_print_ucs4_menu+0x1c4>
    c41c:	mov	x0, x2
    c420:	b	c2c8 <grub_print_ucs4_menu+0x178>
    c424:	nop
	...

000000000000c430 <grub_print_ucs4>:
    c430:	sub	sp, sp, #0xa0
    c434:	stp	x29, x30, [sp, #48]
    c438:	add	x29, sp, #0x30
    c43c:	stp	x21, x22, [sp, #80]
    c440:	mov	x22, x1
    c444:	mov	w21, w2
    c448:	ldr	x1, [x4, #64]
    c44c:	stp	x19, x20, [sp, #64]
    c450:	mov	x19, x4
    c454:	stp	x23, x24, [sp, #96]
    c458:	mov	x23, x0
    c45c:	mov	w24, w3
    c460:	mov	x0, x4
    c464:	blr	x1
    c468:	cmp	w21, w0, uxth
    c46c:	b.le	c4cc <grub_print_ucs4+0x9c>
    c470:	and	w20, w0, #0xffff
    c474:	sub	w20, w21, w20
    c478:	subs	w20, w20, #0x1
    c47c:	b.mi	c4cc <grub_print_ucs4+0x9c>  // b.first
    c480:	stp	x25, x26, [sp, #112]
    c484:	mov	w26, #0x20                  	// #32
    c488:	mov	w25, #0x1                   	// #1
    c48c:	nop
    c490:	mov	w0, #0x20                  	// #32
    c494:	bl	dab0 <grub_unicode_get_comb_type>
    c498:	cbnz	w0, c4bc <grub_print_ucs4+0x8c>
    c49c:	stp	xzr, xzr, [sp, #128]
    c4a0:	mov	x1, x19
    c4a4:	add	x0, sp, #0x80
    c4a8:	mov	w2, #0x0                   	// #0
    c4ac:	str	w26, [sp, #128]
    c4b0:	strb	w25, [sp, #136]
    c4b4:	stp	xzr, xzr, [sp, #144]
    c4b8:	bl	a5d0 <read_crypto_list+0x200>
    c4bc:	sub	w20, w20, #0x1
    c4c0:	cmn	w20, #0x1
    c4c4:	b.ne	c490 <grub_print_ucs4+0x60>  // b.any
    c4c8:	ldp	x25, x26, [sp, #112]
    c4cc:	ldr	w2, [x19, #120]
    c4d0:	and	w2, w2, #0x38
    c4d4:	sub	w2, w2, #0x18
    c4d8:	tst	w2, #0xfffffff0
    c4dc:	b.ne	c580 <grub_print_ucs4+0x150>  // b.any
    c4e0:	mov	w2, w24
    c4e4:	mov	w1, w21
    c4e8:	mov	x0, x19
    c4ec:	bl	aea8 <read_crypto_list+0xad8>
    c4f0:	ldr	x1, [x19, #64]
    c4f4:	mov	x20, x0
    c4f8:	mov	x0, x19
    c4fc:	blr	x1
    c500:	and	w6, w0, #0xffff
    c504:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    c508:	sub	w6, w6, w21
    c50c:	sub	x1, x22, x23
    c510:	str	xzr, [sp]
    c514:	ldr	x3, [x2]
    c518:	str	wzr, [sp, #8]
    c51c:	sxtw	x6, w6
    c520:	mov	x5, x20
    c524:	asr	x1, x1, #2
    c528:	mov	x0, x23
    c52c:	mov	x4, x19
    c530:	add	x2, sp, #0x80
    c534:	mov	w7, #0x0                   	// #0
    c538:	bl	f778 <grub_bidi_logical_to_visual>
    c53c:	tbnz	x0, #63, c5d8 <grub_print_ucs4+0x1a8>
    c540:	sbfx	x1, x0, #0, #59
    c544:	str	wzr, [sp]
    c548:	ldr	x0, [sp, #128]
    c54c:	mov	x4, x19
    c550:	mov	w3, w24
    c554:	mov	w2, w21
    c558:	mov	w7, #0x0                   	// #0
    c55c:	mov	w6, #0x1                   	// #1
    c560:	mov	x5, #0x0                   	// #0
    c564:	bl	aba8 <read_crypto_list+0x7d8>
    c568:	cbz	w0, c5f4 <grub_print_ucs4+0x1c4>
    c56c:	mov	x0, #0x0                   	// #0
    c570:	stp	x25, x26, [sp, #112]
    c574:	ldr	x1, [sp, #128]
    c578:	str	x1, [x0, #112]
    c57c:	brk	#0x3e8
    c580:	mov	w0, #0xffffffff            	// #-1
    c584:	str	wzr, [sp]
    c588:	str	w0, [sp, #8]
    c58c:	mov	x4, x19
    c590:	str	wzr, [sp, #16]
    c594:	mov	w3, w24
    c598:	str	wzr, [sp, #24]
    c59c:	mov	w2, w21
    c5a0:	str	wzr, [sp, #32]
    c5a4:	mov	x1, x22
    c5a8:	str	xzr, [sp, #40]
    c5ac:	mov	x0, x23
    c5b0:	mov	w7, #0x1                   	// #1
    c5b4:	mov	w6, #0x0                   	// #0
    c5b8:	mov	x5, #0x0                   	// #0
    c5bc:	bl	af98 <read_crypto_list+0xbc8>
    c5c0:	ldp	x29, x30, [sp, #48]
    c5c4:	ldp	x19, x20, [sp, #64]
    c5c8:	ldp	x21, x22, [sp, #80]
    c5cc:	ldp	x23, x24, [sp, #96]
    c5d0:	add	sp, sp, #0xa0
    c5d4:	ret
    c5d8:	bl	0 <grub_print_error>
    c5dc:	ldp	x29, x30, [sp, #48]
    c5e0:	ldp	x19, x20, [sp, #64]
    c5e4:	ldp	x21, x22, [sp, #80]
    c5e8:	ldp	x23, x24, [sp, #96]
    c5ec:	add	sp, sp, #0xa0
    c5f0:	ret
    c5f4:	ldr	x0, [sp, #128]
    c5f8:	bl	0 <grub_free>
    c5fc:	ldp	x29, x30, [sp, #48]
    c600:	ldp	x19, x20, [sp, #64]
    c604:	ldp	x21, x22, [sp, #80]
    c608:	ldp	x23, x24, [sp, #96]
    c60c:	add	sp, sp, #0xa0
    c610:	ret
    c614:	nop
	...

000000000000c620 <grub_ucs4_count_lines>:
    c620:	sub	sp, sp, #0x70
    c624:	stp	x29, x30, [sp, #48]
    c628:	add	x29, sp, #0x30
    c62c:	ldr	w5, [x4, #120]
    c630:	str	x21, [sp, #80]
    c634:	and	w5, w5, #0x38
    c638:	sub	w5, w5, #0x18
    c63c:	tst	w5, #0xfffffff0
    c640:	b.ne	c744 <grub_ucs4_count_lines+0x124>  // b.any
    c644:	mov	w6, w2
    c648:	mov	x21, x0
    c64c:	mov	w2, w3
    c650:	mov	x0, x4
    c654:	stp	x19, x20, [sp, #64]
    c658:	mov	x19, x4
    c65c:	mov	x20, x1
    c660:	mov	w1, w6
    c664:	bl	aea8 <read_crypto_list+0xad8>
    c668:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    c66c:	sub	x1, x20, x21
    c670:	str	xzr, [sp]
    c674:	mov	x5, x0
    c678:	ldr	x3, [x2]
    c67c:	str	wzr, [sp, #8]
    c680:	asr	x1, x1, #2
    c684:	mov	x4, x19
    c688:	mov	x0, x21
    c68c:	add	x2, sp, #0x68
    c690:	mov	w7, #0x0                   	// #0
    c694:	mov	x6, #0x0                   	// #0
    c698:	bl	f778 <grub_bidi_logical_to_visual>
    c69c:	tbnz	x0, #63, c788 <grub_ucs4_count_lines+0x168>
    c6a0:	ldr	x19, [sp, #104]
    c6a4:	lsl	x20, x0, #5
    c6a8:	add	x2, x19, x20
    c6ac:	cmp	x19, x2
    c6b0:	b.cs	c7d8 <grub_ucs4_count_lines+0x1b8>  // b.hs, b.nlast
    c6b4:	mov	x1, x19
    c6b8:	mov	w21, #0x0                   	// #0
    c6bc:	nop
    c6c0:	ldr	w0, [x1], #32
    c6c4:	and	w0, w0, #0x7fffff
    c6c8:	cmp	w0, #0xa
    c6cc:	cinc	w21, w21, eq  // eq = none
    c6d0:	cmp	x1, x2
    c6d4:	b.cc	c6c0 <grub_ucs4_count_lines+0xa0>  // b.lo, b.ul, b.last
    c6d8:	cbz	x20, c724 <grub_ucs4_count_lines+0x104>
    c6dc:	ldur	w0, [x2, #-32]
    c6e0:	and	w0, w0, #0x7fffff
    c6e4:	cmp	w0, #0xa
    c6e8:	cinc	w21, w21, ne  // ne = any
    c6ec:	cmp	x19, x2
    c6f0:	b.cs	c724 <grub_ucs4_count_lines+0x104>  // b.hs, b.nlast
    c6f4:	mov	x1, x19
    c6f8:	ldrh	w0, [x19, #6]
    c6fc:	add	x2, x1, x20
    c700:	and	w3, w0, #0xfffff807
    c704:	ubfx	x0, x0, #3, #8
    c708:	cmp	w0, #0x2
    c70c:	b.hi	c7a8 <grub_ucs4_count_lines+0x188>  // b.pmore
    c710:	strh	w3, [x19, #6]
    c714:	add	x19, x19, #0x20
    c718:	cmp	x19, x2
    c71c:	b.cc	c6f8 <grub_ucs4_count_lines+0xd8>  // b.lo, b.ul, b.last
    c720:	mov	x19, x1
    c724:	mov	x0, x19
    c728:	bl	0 <grub_free>
    c72c:	mov	w0, w21
    c730:	ldp	x29, x30, [sp, #48]
    c734:	ldp	x19, x20, [sp, #64]
    c738:	ldr	x21, [sp, #80]
    c73c:	add	sp, sp, #0x70
    c740:	ret
    c744:	mov	w5, #0xffffffff            	// #-1
    c748:	str	wzr, [sp]
    c74c:	str	w5, [sp, #8]
    c750:	mov	w7, #0x1                   	// #1
    c754:	str	wzr, [sp, #16]
    c758:	mov	w6, w7
    c75c:	str	wzr, [sp, #24]
    c760:	mov	x5, #0x0                   	// #0
    c764:	str	wzr, [sp, #32]
    c768:	str	xzr, [sp, #40]
    c76c:	bl	af98 <read_crypto_list+0xbc8>
    c770:	mov	w21, w0
    c774:	mov	w0, w21
    c778:	ldp	x29, x30, [sp, #48]
    c77c:	ldr	x21, [sp, #80]
    c780:	add	sp, sp, #0x70
    c784:	ret
    c788:	bl	0 <grub_print_error>
    c78c:	mov	w21, #0x0                   	// #0
    c790:	mov	w0, w21
    c794:	ldp	x29, x30, [sp, #48]
    c798:	ldp	x19, x20, [sp, #64]
    c79c:	ldr	x21, [sp, #80]
    c7a0:	add	sp, sp, #0x70
    c7a4:	ret
    c7a8:	ldr	x0, [x19, #24]
    c7ac:	add	x19, x19, #0x20
    c7b0:	bl	0 <grub_free>
    c7b4:	ldurh	w0, [x19, #-26]
    c7b8:	ldr	x1, [sp, #104]
    c7bc:	and	w0, w0, #0xfffff807
    c7c0:	sturh	w0, [x19, #-26]
    c7c4:	add	x0, x1, x20
    c7c8:	cmp	x19, x0
    c7cc:	b.cc	c6f8 <grub_ucs4_count_lines+0xd8>  // b.lo, b.ul, b.last
    c7d0:	mov	x19, x1
    c7d4:	b	c724 <grub_ucs4_count_lines+0x104>
    c7d8:	mov	w21, #0x0                   	// #0
    c7dc:	cbz	x20, c724 <grub_ucs4_count_lines+0x104>
    c7e0:	b	c6dc <grub_ucs4_count_lines+0xbc>
    c7e4:	nop
	...

000000000000c7f0 <grub_xnputs>:
    c7f0:	sub	sp, sp, #0xf0
    c7f4:	stp	x29, x30, [sp, #48]
    c7f8:	add	x29, sp, #0x30
    c7fc:	stp	x19, x20, [sp, #64]
    c800:	mov	x19, x1
    c804:	mov	x20, x0
    c808:	stp	x21, x22, [sp, #80]
    c80c:	bl	0 <grub_error_push>
    c810:	lsl	x0, x19, #2
    c814:	bl	0 <grub_malloc>
    c818:	mov	x21, x0
    c81c:	str	x0, [sp, #168]
    c820:	bl	0 <grub_error_pop>
    c824:	cbz	x21, cd44 <grub_xnputs+0x554>
    c828:	mov	x1, x19
    c82c:	mov	x2, x20
    c830:	ldr	x19, [sp, #168]
    c834:	mov	x4, #0x0                   	// #0
    c838:	mov	x3, #0xffffffffffffffff    	// #-1
    c83c:	stp	x25, x26, [sp, #112]
    c840:	mov	x0, x19
    c844:	bl	d8d8 <grub_utf8_to_ucs4>
    c848:	add	x20, x19, x0, lsl #2
    c84c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    c850:	ldr	x25, [x1]
    c854:	ldr	x19, [x25]
    c858:	cbz	x19, cb08 <grub_xnputs+0x318>
    c85c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    c860:	mov	w22, #0x1                   	// #1
    c864:	str	wzr, [sp, #152]
    c868:	ldr	x21, [x0]
    c86c:	nop
    c870:	mov	x2, x19
    c874:	ldr	w3, [x21, #16]
    c878:	mov	x1, x20
    c87c:	ldr	x0, [sp, #168]
    c880:	mov	w4, #0x0                   	// #0
    c884:	bl	b778 <read_crypto_list+0x13a8>
    c888:	cmp	w0, #0x0
    c88c:	ldr	w0, [sp, #152]
    c890:	ldr	x19, [x19]
    c894:	csel	w0, w0, w22, eq  // eq = none
    c898:	str	w0, [sp, #152]
    c89c:	cbnz	x19, c870 <grub_xnputs+0x80>
    c8a0:	cbz	w0, cb08 <grub_xnputs+0x318>
    c8a4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    c8a8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    c8ac:	stp	x23, x24, [sp, #96]
    c8b0:	mov	w24, #0x1                   	// #1
    c8b4:	ldr	x1, [x1]
    c8b8:	stp	x27, x28, [sp, #128]
    c8bc:	ldr	x0, [x0]
    c8c0:	stp	x1, x0, [sp, #176]
    c8c4:	nop
    c8c8:	ldr	x0, [sp, #184]
    c8cc:	ldr	x1, [x0]
    c8d0:	ldr	x0, [sp, #176]
    c8d4:	blr	x1
    c8d8:	add	x2, sp, #0xc8
    c8dc:	add	x1, sp, #0xc0
    c8e0:	bl	da40 <grub_utf8_to_ucs4_alloc>
    c8e4:	ldr	x0, [sp, #192]
    c8e8:	cbz	x0, cd2c <grub_xnputs+0x53c>
    c8ec:	ldr	x1, [x25]
    c8f0:	cbz	x1, cd3c <grub_xnputs+0x54c>
    c8f4:	mov	w0, #0x0                   	// #0
    c8f8:	ldr	x1, [x1]
    c8fc:	add	w0, w0, #0x1
    c900:	cbnz	x1, c8f8 <grub_xnputs+0x108>
    c904:	ubfiz	x0, x0, #2, #32
    c908:	bl	0 <grub_malloc>
    c90c:	mov	x23, x0
    c910:	cbz	x0, c940 <grub_xnputs+0x150>
    c914:	ldr	x19, [x25]
    c918:	cbz	x19, c9b4 <grub_xnputs+0x1c4>
    c91c:	mov	x20, x0
    c920:	ldr	x1, [x19, #64]
    c924:	mov	x0, x19
    c928:	blr	x1
    c92c:	strh	w0, [x20], #4
    c930:	ldr	x19, [x19]
    c934:	lsr	w0, w0, #16
    c938:	sturh	w0, [x20, #-2]
    c93c:	cbnz	x19, c920 <grub_xnputs+0x130>
    c940:	ldr	x19, [x25]
    c944:	cbz	x19, c9b4 <grub_xnputs+0x1c4>
    c948:	ldr	x2, [x19, #88]
    c94c:	mov	x0, x19
    c950:	mov	w1, #0x2                   	// #2
    c954:	cbz	x2, cba8 <grub_xnputs+0x3b8>
    c958:	blr	x2
    c95c:	ldr	x19, [x19]
    c960:	cbnz	x19, c948 <grub_xnputs+0x158>
    c964:	ldr	x19, [x25]
    c968:	cbz	x19, c9b4 <grub_xnputs+0x1c4>
    c96c:	nop
    c970:	ldp	x0, x1, [sp, #192]
    c974:	mov	x2, x19
    c978:	mov	w4, #0x1                   	// #1
    c97c:	mov	w3, #0x0                   	// #0
    c980:	bl	b778 <read_crypto_list+0x13a8>
    c984:	ldr	x19, [x19]
    c988:	cbnz	x19, c970 <grub_xnputs+0x180>
    c98c:	ldr	x19, [x25]
    c990:	cbz	x19, c9b4 <grub_xnputs+0x1c4>
    c994:	nop
    c998:	ldr	x2, [x19, #88]
    c99c:	mov	x0, x19
    c9a0:	mov	w1, #0x1                   	// #1
    c9a4:	cbz	x2, cbb4 <grub_xnputs+0x3c4>
    c9a8:	blr	x2
    c9ac:	ldr	x19, [x19]
    c9b0:	cbnz	x19, c998 <grub_xnputs+0x1a8>
    c9b4:	ldr	x0, [sp, #192]
    c9b8:	bl	0 <grub_free>
    c9bc:	bl	0 <grub_getkey>
    c9c0:	and	w26, w0, #0xff
    c9c4:	cbz	x23, c9f0 <grub_xnputs+0x200>
    c9c8:	ldr	x19, [x25]
    c9cc:	cbz	x19, ca70 <grub_xnputs+0x280>
    c9d0:	mov	x20, x23
    c9d4:	nop
    c9d8:	ldr	w1, [x20], #4
    c9dc:	mov	x0, x19
    c9e0:	ldr	x2, [x19, #72]
    c9e4:	blr	x2
    c9e8:	ldr	x19, [x19]
    c9ec:	cbnz	x19, c9d8 <grub_xnputs+0x1e8>
    c9f0:	ldr	x20, [x25]
    c9f4:	mov	w22, #0x20                  	// #32
    c9f8:	cbz	x20, ca70 <grub_xnputs+0x280>
    c9fc:	nop
    ca00:	mov	w19, #0x8                   	// #8
    ca04:	nop
    ca08:	mov	w0, #0x20                  	// #32
    ca0c:	bl	dab0 <grub_unicode_get_comb_type>
    ca10:	cbnz	w0, ca34 <grub_xnputs+0x244>
    ca14:	stp	xzr, xzr, [sp, #208]
    ca18:	mov	x1, x20
    ca1c:	add	x0, sp, #0xd0
    ca20:	mov	w2, #0x0                   	// #0
    ca24:	str	w22, [sp, #208]
    ca28:	strb	w24, [sp, #216]
    ca2c:	stp	xzr, xzr, [sp, #224]
    ca30:	bl	a5d0 <read_crypto_list+0x200>
    ca34:	subs	w19, w19, #0x1
    ca38:	b.ne	ca08 <grub_xnputs+0x218>  // b.any
    ca3c:	ldr	x20, [x20]
    ca40:	cbnz	x20, ca00 <grub_xnputs+0x210>
    ca44:	cbz	x23, ca70 <grub_xnputs+0x280>
    ca48:	ldr	x19, [x25]
    ca4c:	cbz	x19, ca70 <grub_xnputs+0x280>
    ca50:	mov	x20, x23
    ca54:	nop
    ca58:	ldr	w1, [x20], #4
    ca5c:	mov	x0, x19
    ca60:	ldr	x2, [x19, #72]
    ca64:	blr	x2
    ca68:	ldr	x19, [x19]
    ca6c:	cbnz	x19, ca58 <grub_xnputs+0x268>
    ca70:	mov	x0, x23
    ca74:	bl	0 <grub_free>
    ca78:	cmp	w26, #0xd
    ca7c:	ccmp	w26, #0xa, #0x4, ne  // ne = any
    ca80:	b.ne	cd08 <grub_xnputs+0x518>  // b.any
    ca84:	ldr	x0, [x21]
    ca88:	str	x0, [x21, #24]
    ca8c:	cbz	x0, caa8 <grub_xnputs+0x2b8>
    ca90:	ldr	w1, [x0, #120]
    ca94:	sub	w1, w1, #0x1
    ca98:	str	w1, [x0, #120]
    ca9c:	ldr	x0, [x0]
    caa0:	cbnz	x0, ca90 <grub_xnputs+0x2a0>
    caa4:	str	xzr, [x21, #24]
    caa8:	ldr	x19, [x25]
    caac:	cbz	x19, cb00 <grub_xnputs+0x310>
    cab0:	str	wzr, [sp, #156]
    cab4:	nop
    cab8:	ldr	x28, [x21]
    cabc:	cbnz	x28, cacc <grub_xnputs+0x2dc>
    cac0:	b	cb28 <grub_xnputs+0x338>
    cac4:	ldr	x28, [x28]
    cac8:	cbz	x28, cb28 <grub_xnputs+0x338>
    cacc:	ldr	x1, [x19, #16]
    cad0:	ldr	x0, [x28, #128]
    cad4:	bl	0 <grub_strcmp>
    cad8:	cbnz	w0, cac4 <grub_xnputs+0x2d4>
    cadc:	ldr	x0, [x28, #16]
    cae0:	cbnz	x0, cb58 <grub_xnputs+0x368>
    cae4:	ldr	x22, [x28, #8]
    cae8:	cbnz	x22, cbc0 <grub_xnputs+0x3d0>
    caec:	ldr	x19, [x19]
    caf0:	cbnz	x19, cab8 <grub_xnputs+0x2c8>
    caf4:	ldr	w0, [sp, #156]
    caf8:	cbnz	w0, c8c8 <grub_xnputs+0xd8>
    cafc:	nop
    cb00:	ldp	x23, x24, [sp, #96]
    cb04:	ldp	x27, x28, [sp, #128]
    cb08:	ldr	x0, [sp, #168]
    cb0c:	bl	0 <grub_free>
    cb10:	ldp	x25, x26, [sp, #112]
    cb14:	ldp	x29, x30, [sp, #48]
    cb18:	ldp	x19, x20, [sp, #64]
    cb1c:	ldp	x21, x22, [sp, #80]
    cb20:	add	sp, sp, #0xf0
    cb24:	ret
    cb28:	mov	x0, #0x88                  	// #136
    cb2c:	bl	0 <grub_zalloc>
    cb30:	mov	x28, x0
    cb34:	cbz	x0, ccf8 <grub_xnputs+0x508>
    cb38:	ldr	x0, [x19, #16]
    cb3c:	bl	0 <grub_strdup>
    cb40:	str	x0, [x28, #128]
    cb44:	ldr	x0, [x28, #16]
    cb48:	ldr	x1, [x21]
    cb4c:	str	x1, [x28]
    cb50:	str	x28, [x21]
    cb54:	cbz	x0, cae4 <grub_xnputs+0x2f4>
    cb58:	ldr	w7, [x28, #24]
    cb5c:	mov	w2, #0xffffffff            	// #-1
    cb60:	ldr	x1, [x28, #32]
    cb64:	str	wzr, [sp]
    cb68:	str	w2, [sp, #8]
    cb6c:	mov	x5, x28
    cb70:	str	wzr, [sp, #16]
    cb74:	mov	x4, x19
    cb78:	str	wzr, [sp, #24]
    cb7c:	add	x1, x0, x1, lsl #2
    cb80:	str	wzr, [sp, #32]
    cb84:	mov	w6, #0x0                   	// #0
    cb88:	str	xzr, [sp, #40]
    cb8c:	mov	w3, #0x0                   	// #0
    cb90:	mov	w2, #0x0                   	// #0
    cb94:	bl	af98 <read_crypto_list+0xbc8>
    cb98:	cbz	w0, cce0 <grub_xnputs+0x4f0>
    cb9c:	ldr	w0, [sp, #152]
    cba0:	str	w0, [sp, #156]
    cba4:	b	caec <grub_xnputs+0x2fc>
    cba8:	ldr	x19, [x19]
    cbac:	cbnz	x19, c948 <grub_xnputs+0x158>
    cbb0:	b	c964 <grub_xnputs+0x174>
    cbb4:	ldr	x19, [x19]
    cbb8:	cbnz	x19, c998 <grub_xnputs+0x1a8>
    cbbc:	b	c9b4 <grub_xnputs+0x1c4>
    cbc0:	ldr	x0, [x28, #32]
    cbc4:	str	x0, [sp, #160]
    cbc8:	ldr	w23, [x28, #24]
    cbcc:	mov	x27, x22
    cbd0:	add	x20, x22, x0, lsl #5
    cbd4:	cmp	x22, x20
    cbd8:	b.cs	cc24 <grub_xnputs+0x434>  // b.hs, b.nlast
    cbdc:	nop
    cbe0:	mov	x0, x27
    cbe4:	mov	w2, w23
    cbe8:	mov	x1, x19
    cbec:	bl	a5d0 <read_crypto_list+0x200>
    cbf0:	ldr	w0, [x27]
    cbf4:	and	w0, w0, #0x7fffff
    cbf8:	cmp	w0, #0xa
    cbfc:	b.eq	cc7c <grub_xnputs+0x48c>  // b.none
    cc00:	ldrh	w0, [x27, #6]
    cc04:	and	w1, w0, #0xfffff807
    cc08:	ubfx	x0, x0, #3, #8
    cc0c:	cmp	w0, #0x2
    cc10:	b.hi	cc3c <grub_xnputs+0x44c>  // b.pmore
    cc14:	strh	w1, [x27, #6]
    cc18:	add	x27, x27, #0x20
    cc1c:	cmp	x20, x27
    cc20:	b.hi	cbe0 <grub_xnputs+0x3f0>  // b.pmore
    cc24:	ldr	x0, [x28, #112]
    cc28:	bl	0 <grub_free>
    cc2c:	str	xzr, [x28, #8]
    cc30:	str	xzr, [x28, #32]
    cc34:	str	xzr, [x28, #112]
    cc38:	b	caec <grub_xnputs+0x2fc>
    cc3c:	ldr	x0, [x27, #24]
    cc40:	add	x27, x27, #0x20
    cc44:	bl	0 <grub_free>
    cc48:	ldurh	w0, [x27, #-26]
    cc4c:	and	w0, w0, #0xfffff807
    cc50:	sturh	w0, [x27, #-26]
    cc54:	cmp	x20, x27
    cc58:	b.ls	cc24 <grub_xnputs+0x434>  // b.plast
    cc5c:	mov	x0, x27
    cc60:	mov	w2, w23
    cc64:	mov	x1, x19
    cc68:	bl	a5d0 <read_crypto_list+0x200>
    cc6c:	ldr	w0, [x27]
    cc70:	and	w0, w0, #0x7fffff
    cc74:	cmp	w0, #0xa
    cc78:	b.ne	cc00 <grub_xnputs+0x410>  // b.any
    cc7c:	ldr	w1, [x28, #120]
    cc80:	mov	x0, x19
    cc84:	ldr	x2, [x19, #56]
    cc88:	add	w1, w1, #0x1
    cc8c:	str	w1, [x28, #120]
    cc90:	sxtw	x26, w1
    cc94:	blr	x2
    cc98:	lsr	w2, w0, #16
    cc9c:	cmp	wzr, w0, lsr #16
    cca0:	sub	x2, x2, #0x2
    cca4:	mov	x0, #0x16                  	// #22
    cca8:	csel	x2, x2, x0, ne  // ne = any
    ccac:	cmp	x26, x2
    ccb0:	b.lt	cc00 <grub_xnputs+0x410>  // b.tstop
    ccb4:	ldr	w1, [sp, #152]
    ccb8:	sub	x0, x27, x22
    ccbc:	str	w1, [sp, #156]
    ccc0:	add	x3, x27, #0x20
    ccc4:	ldr	x1, [sp, #160]
    ccc8:	str	x3, [x28, #8]
    cccc:	str	w23, [x28, #24]
    ccd0:	sub	x0, x1, x0, asr #5
    ccd4:	sub	x0, x0, #0x1
    ccd8:	str	x0, [x28, #32]
    ccdc:	b	caec <grub_xnputs+0x2fc>
    cce0:	ldr	x0, [x28, #112]
    cce4:	bl	0 <grub_free>
    cce8:	str	xzr, [x28, #16]
    ccec:	str	xzr, [x28, #32]
    ccf0:	str	xzr, [x28, #112]
    ccf4:	b	caec <grub_xnputs+0x2fc>
    ccf8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ccfc:	ldr	x0, [x0]
    cd00:	str	wzr, [x0]
    cd04:	b	caec <grub_xnputs+0x2fc>
    cd08:	ldr	x0, [x21]
    cd0c:	str	x0, [x21, #8]
    cd10:	cbz	x0, caa8 <grub_xnputs+0x2b8>
    cd14:	nop
    cd18:	str	wzr, [x0, #120]
    cd1c:	ldr	x0, [x0]
    cd20:	cbnz	x0, cd18 <grub_xnputs+0x528>
    cd24:	str	xzr, [x21, #8]
    cd28:	b	caa8 <grub_xnputs+0x2b8>
    cd2c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    cd30:	ldr	x0, [x0]
    cd34:	str	wzr, [x0]
    cd38:	b	caa8 <grub_xnputs+0x2b8>
    cd3c:	mov	x0, #0x0                   	// #0
    cd40:	b	c908 <grub_xnputs+0x118>
    cd44:	cbz	x19, cb14 <grub_xnputs+0x324>
    cd48:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    cd4c:	stp	x25, x26, [sp, #112]
    cd50:	mov	w21, #0x1                   	// #1
    cd54:	ldr	x25, [x1]
    cd58:	mov	w22, #0xd                   	// #13
    cd5c:	ldr	x19, [x25]
    cd60:	stp	xzr, xzr, [sp, #208]
    cd64:	ldrb	w0, [x20]
    cd68:	str	w0, [sp, #208]
    cd6c:	strb	w21, [sp, #216]
    cd70:	stp	xzr, xzr, [sp, #224]
    cd74:	cbz	x19, cda0 <grub_xnputs+0x5b0>
    cd78:	ldr	x2, [x19, #40]
    cd7c:	mov	x0, x19
    cd80:	add	x1, sp, #0xd0
    cd84:	blr	x2
    cd88:	ldr	x19, [x19]
    cd8c:	cbnz	x19, cd78 <grub_xnputs+0x588>
    cd90:	ldrb	w0, [x20]
    cd94:	ldr	x19, [x25]
    cd98:	cmp	w0, #0xa
    cd9c:	b.eq	cda8 <grub_xnputs+0x5b8>  // b.none
    cda0:	add	x20, x20, #0x1
    cda4:	b	cd60 <grub_xnputs+0x570>
    cda8:	ldr	w0, [sp, #208]
    cdac:	bfxil	w0, w22, #0, #23
    cdb0:	str	w0, [sp, #208]
    cdb4:	cbz	x19, cda0 <grub_xnputs+0x5b0>
    cdb8:	ldr	x2, [x19, #40]
    cdbc:	mov	x0, x19
    cdc0:	add	x1, sp, #0xd0
    cdc4:	blr	x2
    cdc8:	ldr	x19, [x19]
    cdcc:	cbnz	x19, cdb8 <grub_xnputs+0x5c8>
    cdd0:	add	x20, x20, #0x1
    cdd4:	ldr	x19, [x25]
    cdd8:	b	cd60 <grub_xnputs+0x570>
    cddc:	nop
	...

000000000000ce08 <grub_xputs_normal>:
    ce08:	stp	x29, x30, [sp, #-32]!
    ce0c:	mov	x29, sp
    ce10:	str	x19, [sp, #16]
    ce14:	mov	x19, x0
    ce18:	bl	0 <grub_strlen>
    ce1c:	mov	x1, x0
    ce20:	mov	x0, x19
    ce24:	ldr	x19, [sp, #16]
    ce28:	ldp	x29, x30, [sp], #32
    ce2c:	b	c7f0 <grub_xnputs>

000000000000ce30 <grub_cls>:
    ce30:	stp	x29, x30, [sp, #-80]!
    ce34:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ce38:	mov	x29, sp
    ce3c:	ldr	x0, [x0]
    ce40:	stp	x19, x20, [sp, #16]
    ce44:	ldr	x19, [x0]
    ce48:	cbz	x19, cebc <grub_cls+0x8c>
    ce4c:	adrp	x20, 0 <grub_normal_free_menu-0x498>
    ce50:	stp	x21, x22, [sp, #32]
    ce54:	mov	w22, #0xa                   	// #10
    ce58:	mov	w21, #0x1                   	// #1
    ce5c:	nop
    ce60:	ldr	w0, [x19, #120]
    ce64:	tbnz	w0, #2, ce74 <grub_cls+0x44>
    ce68:	ldr	x0, [x20]
    ce6c:	bl	0 <grub_env_get>
    ce70:	cbz	x0, cec8 <grub_cls+0x98>
    ce74:	mov	w0, #0xa                   	// #10
    ce78:	bl	dab0 <grub_unicode_get_comb_type>
    ce7c:	cbnz	w0, cea0 <grub_cls+0x70>
    ce80:	stp	xzr, xzr, [sp, #48]
    ce84:	mov	x1, x19
    ce88:	add	x0, sp, #0x30
    ce8c:	mov	w2, #0x0                   	// #0
    ce90:	str	w22, [sp, #48]
    ce94:	strb	w21, [sp, #56]
    ce98:	stp	xzr, xzr, [sp, #64]
    ce9c:	bl	a5d0 <read_crypto_list+0x200>
    cea0:	mov	x0, x19
    cea4:	ldr	x1, [x19, #104]
    cea8:	cbz	x1, ceb0 <grub_cls+0x80>
    ceac:	blr	x1
    ceb0:	ldr	x19, [x19]
    ceb4:	cbnz	x19, ce60 <grub_cls+0x30>
    ceb8:	ldp	x21, x22, [sp, #32]
    cebc:	ldp	x19, x20, [sp, #16]
    cec0:	ldp	x29, x30, [sp], #80
    cec4:	ret
    cec8:	mov	x0, x19
    cecc:	ldr	x1, [x19, #80]
    ced0:	b	ceac <grub_cls+0x7c>
    ced4:	nop
	...
    cee8:	cmp	w1, #0x0
    ceec:	b.le	cf30 <grub_cls+0x100>
    cef0:	stp	x29, x30, [sp, #-32]!
    cef4:	sub	w1, w1, #0x1
    cef8:	mov	x29, sp
    cefc:	stp	x19, x20, [sp, #16]
    cf00:	add	x20, x2, #0x8
    cf04:	mov	x19, x2
    cf08:	add	x20, x20, w1, uxtw #3
    cf0c:	nop
    cf10:	ldr	x0, [x19], #8
    cf14:	bl	0 <grub_env_export>
    cf18:	cmp	x19, x20
    cf1c:	b.ne	cf10 <grub_cls+0xe0>  // b.any
    cf20:	mov	w0, #0x0                   	// #0
    cf24:	ldp	x19, x20, [sp, #16]
    cf28:	ldp	x29, x30, [sp], #32
    cf2c:	ret
    cf30:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    cf34:	mov	w0, #0x12                  	// #18
    cf38:	ldr	x1, [x1]
    cf3c:	b	0 <grub_error>
	...

000000000000cf48 <grub_env_unset_menu>:
    cf48:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    cf4c:	ldr	x0, [x0]
    cf50:	ldr	x0, [x0]
    cf54:	str	xzr, [x0]
    cf58:	ret
    cf5c:	nop
	...

000000000000cf68 <grub_env_get_menu>:
    cf68:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    cf6c:	ldr	x0, [x0]
    cf70:	ldr	x0, [x0]
    cf74:	ldr	x0, [x0]
    cf78:	ret
    cf7c:	nop
	...

000000000000cf88 <grub_env_set_menu>:
    cf88:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    cf8c:	ldr	x1, [x1]
    cf90:	ldr	x1, [x1]
    cf94:	str	x0, [x1]
    cf98:	ret
    cf9c:	nop
	...

000000000000cfa8 <grub_env_context_close>:
    cfa8:	stp	x29, x30, [sp, #-48]!
    cfac:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    cfb0:	mov	x29, sp
    cfb4:	stp	x21, x22, [sp, #32]
    cfb8:	ldr	x22, [x0]
    cfbc:	ldr	x0, [x22]
    cfc0:	ldr	x1, [x0, #104]
    cfc4:	cbz	x1, d054 <grub_env_context_close+0xac>
    cfc8:	mov	w21, #0x0                   	// #0
    cfcc:	stp	x19, x20, [sp, #16]
    cfd0:	ldr	x19, [x0, w21, sxtw #3]
    cfd4:	cbz	x19, d000 <grub_env_context_close+0x58>
    cfd8:	mov	x20, x19
    cfdc:	ldr	x19, [x19, #32]
    cfe0:	ldr	x0, [x20]
    cfe4:	bl	0 <grub_free>
    cfe8:	ldr	x0, [x20, #8]
    cfec:	bl	0 <grub_free>
    cff0:	mov	x0, x20
    cff4:	bl	0 <grub_free>
    cff8:	cbnz	x19, cfd8 <grub_env_context_close+0x30>
    cffc:	ldr	x0, [x22]
    d000:	add	w21, w21, #0x1
    d004:	cmp	w21, #0xd
    d008:	b.ne	cfd0 <grub_env_context_close+0x28>  // b.any
    d00c:	ldr	x19, [x0, #104]
    d010:	bl	0 <grub_free>
    d014:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d018:	str	x19, [x22]
    d01c:	ldr	x19, [x0]
    d020:	ldr	x0, [x19]
    d024:	ldp	x1, x20, [x0]
    d028:	cbz	x1, d038 <grub_env_context_close+0x90>
    d02c:	mov	x0, x1
    d030:	bl	498 <grub_normal_free_menu>
    d034:	ldr	x0, [x19]
    d038:	bl	0 <grub_free>
    d03c:	ldp	x21, x22, [sp, #32]
    d040:	str	x20, [x19]
    d044:	mov	w0, #0x0                   	// #0
    d048:	ldp	x19, x20, [sp, #16]
    d04c:	ldp	x29, x30, [sp], #48
    d050:	ret
    d054:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d058:	mov	w0, #0x12                  	// #18
    d05c:	ldp	x21, x22, [sp, #32]
    d060:	ldp	x29, x30, [sp], #48
    d064:	ldr	x1, [x1]
    d068:	b	0 <grub_error>
    d06c:	nop
	...
    d088:	stp	x29, x30, [sp, #-48]!
    d08c:	mov	x29, sp
    d090:	stp	x19, x20, [sp, #16]
    d094:	mov	w20, w0
    d098:	mov	x0, #0x70                  	// #112
    d09c:	bl	0 <grub_zalloc>
    d0a0:	cbz	x0, d160 <grub_env_context_close+0x1b8>
    d0a4:	stp	x21, x22, [sp, #32]
    d0a8:	mov	x22, x0
    d0ac:	mov	x0, #0x10                  	// #16
    d0b0:	bl	0 <grub_zalloc>
    d0b4:	cbz	x0, d18c <grub_env_context_close+0x1e4>
    d0b8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    d0bc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d0c0:	mov	w21, #0x0                   	// #0
    d0c4:	ldr	x3, [x2]
    d0c8:	ldr	x2, [x1]
    d0cc:	ldr	x1, [x3]
    d0d0:	str	x1, [x22, #104]
    d0d4:	ldr	x4, [x2]
    d0d8:	str	x22, [x3]
    d0dc:	str	x0, [x2]
    d0e0:	str	x4, [x0, #8]
    d0e4:	ldr	x19, [x1, w21, sxtw #3]
    d0e8:	cbnz	x19, d0f8 <grub_env_context_close+0x150>
    d0ec:	b	d12c <grub_env_context_close+0x184>
    d0f0:	ldr	x19, [x19, #32]
    d0f4:	cbz	x19, d12c <grub_env_context_close+0x184>
    d0f8:	ldr	w1, [x19, #56]
    d0fc:	orr	w1, w20, w1
    d100:	cbz	w1, d0f0 <grub_env_context_close+0x148>
    d104:	ldp	x0, x1, [x19]
    d108:	bl	0 <grub_env_set>
    d10c:	cbnz	w0, d140 <grub_env_context_close+0x198>
    d110:	ldr	x0, [x19]
    d114:	bl	0 <grub_env_export>
    d118:	ldp	x1, x2, [x19, #16]
    d11c:	ldr	x0, [x19]
    d120:	bl	0 <grub_register_variable_hook>
    d124:	ldr	x19, [x19, #32]
    d128:	cbnz	x19, d0f8 <grub_env_context_close+0x150>
    d12c:	add	w21, w21, #0x1
    d130:	cmp	w21, #0xd
    d134:	b.eq	d178 <grub_env_context_close+0x1d0>  // b.none
    d138:	ldr	x1, [x22, #104]
    d13c:	b	d0e4 <grub_env_context_close+0x13c>
    d140:	bl	cfa8 <grub_env_context_close>
    d144:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d148:	ldp	x21, x22, [sp, #32]
    d14c:	ldr	x0, [x0]
    d150:	ldr	w0, [x0]
    d154:	ldp	x19, x20, [sp, #16]
    d158:	ldp	x29, x30, [sp], #48
    d15c:	ret
    d160:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d164:	ldp	x19, x20, [sp, #16]
    d168:	ldr	x0, [x0]
    d16c:	ldp	x29, x30, [sp], #48
    d170:	ldr	w0, [x0]
    d174:	ret
    d178:	mov	w0, #0x0                   	// #0
    d17c:	ldp	x19, x20, [sp, #16]
    d180:	ldp	x21, x22, [sp, #32]
    d184:	ldp	x29, x30, [sp], #48
    d188:	ret
    d18c:	mov	x0, x22
    d190:	bl	0 <grub_free>
    d194:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d198:	ldp	x21, x22, [sp, #32]
    d19c:	ldr	x0, [x0]
    d1a0:	ldr	w0, [x0]
    d1a4:	b	d154 <grub_env_context_close+0x1ac>
	...

000000000000d1c0 <grub_env_context_open>:
    d1c0:	mov	w0, #0x0                   	// #0
    d1c4:	b	d088 <grub_env_context_close+0xe0>

000000000000d1c8 <grub_env_extractor_open>:
    d1c8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d1cc:	ldr	x2, [x1]
    d1d0:	ldr	w1, [x2]
    d1d4:	add	w1, w1, #0x1
    d1d8:	str	w1, [x2]
    d1dc:	b	d088 <grub_env_context_close+0xe0>
	...

000000000000d1e8 <grub_env_extractor_close>:
    d1e8:	stp	x29, x30, [sp, #-32]!
    d1ec:	mov	x29, sp
    d1f0:	cbz	w0, d270 <grub_env_extractor_close+0x88>
    d1f4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d1f8:	stp	x19, x20, [sp, #16]
    d1fc:	ldr	x20, [x0]
    d200:	ldr	x0, [x20]
    d204:	ldr	x19, [x0]
    d208:	str	xzr, [x0]
    d20c:	bl	cfa8 <grub_env_context_close>
    d210:	cbz	x19, d298 <grub_env_extractor_close+0xb0>
    d214:	ldr	x1, [x20]
    d218:	ldr	x3, [x1]
    d21c:	ldr	x1, [x3, #8]
    d220:	cbz	x1, d290 <grub_env_extractor_close+0xa8>
    d224:	nop
    d228:	mov	x2, x1
    d22c:	ldr	x1, [x1, #72]
    d230:	cbnz	x1, d228 <grub_env_extractor_close+0x40>
    d234:	add	x2, x2, #0x48
    d238:	ldr	w4, [x19]
    d23c:	ldr	w1, [x3]
    d240:	ldr	x5, [x19, #8]
    d244:	add	w1, w1, w4
    d248:	ldp	x19, x20, [sp, #16]
    d24c:	str	x5, [x2]
    d250:	str	w1, [x3]
    d254:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d258:	ldr	x2, [x1]
    d25c:	ldr	w1, [x2]
    d260:	sub	w1, w1, #0x1
    d264:	str	w1, [x2]
    d268:	ldp	x29, x30, [sp], #32
    d26c:	ret
    d270:	bl	cfa8 <grub_env_context_close>
    d274:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d278:	ldr	x2, [x1]
    d27c:	ldr	w1, [x2]
    d280:	sub	w1, w1, #0x1
    d284:	str	w1, [x2]
    d288:	ldp	x29, x30, [sp], #32
    d28c:	ret
    d290:	add	x2, x3, #0x8
    d294:	b	d238 <grub_env_extractor_close+0x50>
    d298:	ldp	x19, x20, [sp, #16]
    d29c:	b	d274 <grub_env_extractor_close+0x8c>
	...

000000000000d2b0 <grub_context_init>:
    d2b0:	stp	x29, x30, [sp, #-16]!
    d2b4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    d2b8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    d2bc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d2c0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d2c4:	mov	x29, sp
    d2c8:	ldr	x3, [x3]
    d2cc:	mov	w4, #0x0                   	// #0
    d2d0:	ldr	x2, [x2]
    d2d4:	ldr	x1, [x1]
    d2d8:	ldr	x0, [x0]
    d2dc:	bl	0 <grub_register_command_prio>
    d2e0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d2e4:	ldr	x1, [x1]
    d2e8:	str	x0, [x1, #8]
    d2ec:	ldp	x29, x30, [sp], #16
    d2f0:	ret
    d2f4:	nop
	...

000000000000d320 <grub_context_fini>:
    d320:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d324:	ldr	x0, [x0]
    d328:	ldr	x0, [x0, #8]
    d32c:	b	0 <grub_unregister_command>
	...
    d338:	stp	x29, x30, [sp, #-16]!
    d33c:	mov	x0, #0x20000               	// #131072
    d340:	mov	x29, sp
    d344:	bl	0 <grub_zalloc>
    d348:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d34c:	ldr	x1, [x1]
    d350:	str	x0, [x1]
    d354:	cbz	x0, d41c <grub_context_fini+0xfc>
    d358:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    d35c:	mov	w7, #0x1ffff               	// #131071
    d360:	ldr	x2, [x1]
    d364:	mov	x1, x2
    d368:	ldrh	w2, [x2, #2]
    d36c:	tst	x2, #0x3fe0
    d370:	b.eq	d414 <grub_context_fini+0xf4>  // b.none
    d374:	nop
    d378:	ldrb	w5, [x1]
    d37c:	ldrb	w3, [x1, #1]
    d380:	ldrb	w2, [x1, #2]
    d384:	ldrh	w4, [x1, #2]
    d388:	orr	x3, x5, x3, lsl #8
    d38c:	ubfiz	x2, x2, #16, #5
    d390:	orr	x2, x2, x3
    d394:	ubfx	x4, x4, #5, #9
    d398:	add	w4, w4, w2
    d39c:	mov	w3, w2
    d3a0:	cmp	w2, w4
    d3a4:	add	x5, x0, x2
    d3a8:	ccmp	w2, w7, #0x2, cc  // cc = lo, ul, last
    d3ac:	b.hi	d404 <grub_context_fini+0xe4>  // b.pmore
    d3b0:	ldrb	w4, [x1, #4]
    d3b4:	ldrb	w6, [x1, #5]
    d3b8:	ldrb	w2, [x1, #3]
    d3bc:	ubfiz	x4, x4, #2, #3
    d3c0:	orr	w2, w4, w2, lsr #6
    d3c4:	tbz	w6, #3, d3cc <grub_context_fini+0xac>
    d3c8:	orr	w2, w2, #0xffffff80
    d3cc:	strb	w2, [x5], #1
    d3d0:	add	w3, w3, #0x1
    d3d4:	ldrb	w8, [x1]
    d3d8:	ldrb	w6, [x1, #1]
    d3dc:	ldrb	w4, [x1, #2]
    d3e0:	ldrh	w2, [x1, #2]
    d3e4:	orr	x6, x8, x6, lsl #8
    d3e8:	ubfiz	x4, x4, #16, #5
    d3ec:	orr	x4, x4, x6
    d3f0:	ubfx	x2, x2, #5, #9
    d3f4:	add	w2, w2, w4
    d3f8:	cmp	w2, w3
    d3fc:	ccmp	w3, w7, #0x2, hi  // hi = pmore
    d400:	b.ls	d3b0 <grub_context_fini+0x90>  // b.plast
    d404:	ldrh	w2, [x1, #8]
    d408:	add	x1, x1, #0x6
    d40c:	tst	x2, #0x3fe0
    d410:	b.ne	d378 <grub_context_fini+0x58>  // b.any
    d414:	ldp	x29, x30, [sp], #16
    d418:	ret
    d41c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    d420:	ldr	x0, [x0]
    d424:	str	wzr, [x0]
    d428:	ldp	x29, x30, [sp], #16
    d42c:	ret
	...

000000000000d448 <grub_encode_utf8_character>:
    d448:	mov	x3, x0
    d44c:	cmp	x0, x1
    d450:	b.cs	d534 <grub_encode_utf8_character+0xec>  // b.hs, b.nlast
    d454:	cmp	w2, #0x7f
    d458:	b.ls	d4e4 <grub_encode_utf8_character+0x9c>  // b.plast
    d45c:	cmp	w2, #0x7ff
    d460:	b.hi	d490 <grub_encode_utf8_character+0x48>  // b.pmore
    d464:	add	x0, x0, #0x1
    d468:	cmp	x1, x0
    d46c:	b.ls	d534 <grub_encode_utf8_character+0xec>  // b.plast
    d470:	lsr	w1, w2, #6
    d474:	and	w2, w2, #0x3f
    d478:	orr	w1, w1, #0xffffffc0
    d47c:	orr	w2, w2, #0xffffff80
    d480:	mov	x0, #0x2                   	// #2
    d484:	strb	w1, [x3]
    d488:	strb	w2, [x3, #1]
    d48c:	ret
    d490:	mov	w0, #0xffff2800            	// #-55296
    d494:	add	w0, w2, w0
    d498:	cmp	w0, #0x7ff
    d49c:	b.ls	d53c <grub_encode_utf8_character+0xf4>  // b.plast
    d4a0:	mov	w0, #0xffff                	// #65535
    d4a4:	cmp	w2, w0
    d4a8:	b.hi	d4f0 <grub_encode_utf8_character+0xa8>  // b.pmore
    d4ac:	add	x0, x3, #0x2
    d4b0:	cmp	x1, x0
    d4b4:	b.ls	d534 <grub_encode_utf8_character+0xec>  // b.plast
    d4b8:	lsr	w4, w2, #12
    d4bc:	ubfx	x1, x2, #6, #6
    d4c0:	and	w2, w2, #0x3f
    d4c4:	orr	w4, w4, #0xffffffe0
    d4c8:	orr	w1, w1, #0xffffff80
    d4cc:	orr	w2, w2, #0xffffff80
    d4d0:	mov	x0, #0x3                   	// #3
    d4d4:	strb	w4, [x3]
    d4d8:	strb	w1, [x3, #1]
    d4dc:	strb	w2, [x3, #2]
    d4e0:	ret
    d4e4:	mov	x0, #0x1                   	// #1
    d4e8:	strb	w2, [x3]
    d4ec:	ret
    d4f0:	add	x0, x3, #0x3
    d4f4:	cmp	x1, x0
    d4f8:	b.ls	d534 <grub_encode_utf8_character+0xec>  // b.plast
    d4fc:	lsr	w5, w2, #18
    d500:	ubfx	x4, x2, #12, #6
    d504:	ubfx	x1, x2, #6, #6
    d508:	and	w2, w2, #0x3f
    d50c:	orr	w5, w5, #0xfffffff0
    d510:	orr	w4, w4, #0xffffff80
    d514:	orr	w1, w1, #0xffffff80
    d518:	orr	w2, w2, #0xffffff80
    d51c:	mov	x0, #0x4                   	// #4
    d520:	strb	w5, [x3]
    d524:	strb	w4, [x3, #1]
    d528:	strb	w1, [x3, #2]
    d52c:	strb	w2, [x3, #3]
    d530:	ret
    d534:	mov	x0, #0xfffffffffffffffe    	// #-2
    d538:	ret
    d53c:	mov	x0, #0xffffffffffffffff    	// #-1
    d540:	ret
    d544:	nop

000000000000d548 <grub_ucs4_to_utf8>:
    d548:	sub	x3, x3, #0x1
    d54c:	cmp	x1, #0x0
    d550:	add	x8, x2, x3
    d554:	sub	x6, x1, #0x1
    d558:	ccmp	x2, x8, #0x2, ne  // ne = any
    d55c:	mov	x3, x2
    d560:	b.cs	d684 <grub_ucs4_to_utf8+0x13c>  // b.hs, b.nlast
    d564:	mov	x4, #0x0                   	// #0
    d568:	mov	w11, #0xffff2800            	// #-55296
    d56c:	mov	w13, #0x3f                  	// #63
    d570:	mov	w12, #0xffff                	// #65535
    d574:	nop
    d578:	ldr	w1, [x0, x4, lsl #2]
    d57c:	cmp	w1, #0x7f
    d580:	b.ls	d5e0 <grub_ucs4_to_utf8+0x98>  // b.plast
    d584:	cmp	w1, #0x7ff
    d588:	b.hi	d5ec <grub_ucs4_to_utf8+0xa4>  // b.pmore
    d58c:	add	x5, x3, #0x1
    d590:	cmp	x8, x5
    d594:	b.ls	d5d4 <grub_ucs4_to_utf8+0x8c>  // b.plast
    d598:	lsr	w7, w1, #6
    d59c:	and	w1, w1, #0x3f
    d5a0:	orr	w7, w7, #0xffffffc0
    d5a4:	orr	w1, w1, #0xffffff80
    d5a8:	mov	x5, #0x2                   	// #2
    d5ac:	strb	w7, [x3]
    d5b0:	strb	w1, [x3, #1]
    d5b4:	add	x3, x3, x5
    d5b8:	cmp	x6, x4
    d5bc:	add	x4, x4, #0x1
    d5c0:	cset	w5, ne  // ne = any
    d5c4:	cmp	x8, x3
    d5c8:	cset	w1, hi  // hi = pmore
    d5cc:	tst	w5, w1
    d5d0:	b.ne	d578 <grub_ucs4_to_utf8+0x30>  // b.any
    d5d4:	sub	x0, x3, x2
    d5d8:	strb	wzr, [x3]
    d5dc:	ret
    d5e0:	mov	x5, #0x1                   	// #1
    d5e4:	strb	w1, [x3]
    d5e8:	b	d5b4 <grub_ucs4_to_utf8+0x6c>
    d5ec:	add	w5, w1, w11
    d5f0:	cmp	w5, #0x7ff
    d5f4:	b.ls	d638 <grub_ucs4_to_utf8+0xf0>  // b.plast
    d5f8:	cmp	w1, w12
    d5fc:	b.hi	d640 <grub_ucs4_to_utf8+0xf8>  // b.pmore
    d600:	add	x5, x3, #0x2
    d604:	cmp	x8, x5
    d608:	b.ls	d5d4 <grub_ucs4_to_utf8+0x8c>  // b.plast
    d60c:	lsr	w9, w1, #12
    d610:	ubfx	x7, x1, #6, #6
    d614:	and	w1, w1, #0x3f
    d618:	orr	w9, w9, #0xffffffe0
    d61c:	orr	w7, w7, #0xffffff80
    d620:	orr	w1, w1, #0xffffff80
    d624:	mov	x5, #0x3                   	// #3
    d628:	strb	w9, [x3]
    d62c:	strb	w7, [x3, #1]
    d630:	strb	w1, [x3, #2]
    d634:	b	d5b4 <grub_ucs4_to_utf8+0x6c>
    d638:	strb	w13, [x3], #1
    d63c:	b	d5b8 <grub_ucs4_to_utf8+0x70>
    d640:	add	x5, x3, #0x3
    d644:	cmp	x8, x5
    d648:	b.ls	d5d4 <grub_ucs4_to_utf8+0x8c>  // b.plast
    d64c:	lsr	w10, w1, #18
    d650:	ubfx	x9, x1, #12, #6
    d654:	ubfx	x7, x1, #6, #6
    d658:	and	w1, w1, #0x3f
    d65c:	orr	w10, w10, #0xfffffff0
    d660:	orr	w9, w9, #0xffffff80
    d664:	orr	w7, w7, #0xffffff80
    d668:	orr	w1, w1, #0xffffff80
    d66c:	mov	x5, #0x4                   	// #4
    d670:	strb	w10, [x3]
    d674:	strb	w9, [x3, #1]
    d678:	strb	w7, [x3, #2]
    d67c:	strb	w1, [x3, #3]
    d680:	b	d5b4 <grub_ucs4_to_utf8+0x6c>
    d684:	mov	x0, #0x0                   	// #0
    d688:	b	d5d8 <grub_ucs4_to_utf8+0x90>
    d68c:	nop

000000000000d690 <grub_get_num_of_utf8_bytes>:
    d690:	mov	x4, x0
    d694:	cbz	x1, d700 <grub_get_num_of_utf8_bytes+0x70>
    d698:	mov	x2, #0x0                   	// #0
    d69c:	mov	x0, #0x0                   	// #0
    d6a0:	mov	w6, #0xffff2800            	// #-55296
    d6a4:	mov	w7, #0xffff                	// #65535
    d6a8:	b	d6c8 <grub_get_num_of_utf8_bytes+0x38>
    d6ac:	add	w5, w3, w6
    d6b0:	cmp	w3, #0x7ff
    d6b4:	b.hi	d6e8 <grub_get_num_of_utf8_bytes+0x58>  // b.pmore
    d6b8:	add	x0, x0, #0x2
    d6bc:	add	x2, x2, #0x1
    d6c0:	cmp	x2, x1
    d6c4:	b.eq	d6e4 <grub_get_num_of_utf8_bytes+0x54>  // b.none
    d6c8:	ldr	w3, [x4, x2, lsl #2]
    d6cc:	cmp	w3, #0x7f
    d6d0:	b.hi	d6ac <grub_get_num_of_utf8_bytes+0x1c>  // b.pmore
    d6d4:	add	x2, x2, #0x1
    d6d8:	add	x0, x0, #0x1
    d6dc:	cmp	x2, x1
    d6e0:	b.ne	d6c8 <grub_get_num_of_utf8_bytes+0x38>  // b.any
    d6e4:	ret
    d6e8:	cmp	w5, #0x7ff
    d6ec:	b.ls	d6d4 <grub_get_num_of_utf8_bytes+0x44>  // b.plast
    d6f0:	cmp	w3, w7
    d6f4:	cinc	x0, x0, hi  // hi = pmore
    d6f8:	add	x0, x0, #0x3
    d6fc:	b	d6bc <grub_get_num_of_utf8_bytes+0x2c>
    d700:	mov	x0, #0x0                   	// #0
    d704:	ret

000000000000d708 <grub_ucs4_to_utf8_alloc>:
    d708:	stp	x29, x30, [sp, #-48]!
    d70c:	mov	x29, sp
    d710:	stp	x19, x20, [sp, #16]
    d714:	mov	x20, x1
    d718:	str	x21, [sp, #32]
    d71c:	mov	x21, x0
    d720:	cbz	x1, d7c0 <grub_ucs4_to_utf8_alloc+0xb8>
    d724:	mov	x2, #0x0                   	// #0
    d728:	mov	x3, #0x0                   	// #0
    d72c:	mov	w5, #0xffff2800            	// #-55296
    d730:	mov	w4, #0xffff                	// #65535
    d734:	b	d754 <grub_ucs4_to_utf8_alloc+0x4c>
    d738:	add	w0, w1, w5
    d73c:	cmp	w1, #0x7ff
    d740:	b.hi	d7a8 <grub_ucs4_to_utf8_alloc+0xa0>  // b.pmore
    d744:	add	x3, x3, #0x2
    d748:	add	x2, x2, #0x1
    d74c:	cmp	x20, x2
    d750:	b.eq	d770 <grub_ucs4_to_utf8_alloc+0x68>  // b.none
    d754:	ldr	w1, [x21, x2, lsl #2]
    d758:	cmp	w1, #0x7f
    d75c:	b.hi	d738 <grub_ucs4_to_utf8_alloc+0x30>  // b.pmore
    d760:	add	x2, x2, #0x1
    d764:	add	x3, x3, #0x1
    d768:	cmp	x20, x2
    d76c:	b.ne	d754 <grub_ucs4_to_utf8_alloc+0x4c>  // b.any
    d770:	add	x19, x3, #0x1
    d774:	mov	x0, x19
    d778:	bl	0 <grub_malloc>
    d77c:	mov	x2, x0
    d780:	cbz	x0, d794 <grub_ucs4_to_utf8_alloc+0x8c>
    d784:	mov	x3, x19
    d788:	mov	x1, x20
    d78c:	mov	x0, x21
    d790:	bl	d548 <grub_ucs4_to_utf8>
    d794:	mov	x0, x2
    d798:	ldp	x19, x20, [sp, #16]
    d79c:	ldr	x21, [sp, #32]
    d7a0:	ldp	x29, x30, [sp], #48
    d7a4:	ret
    d7a8:	cmp	w0, #0x7ff
    d7ac:	b.ls	d760 <grub_ucs4_to_utf8_alloc+0x58>  // b.plast
    d7b0:	cmp	w1, w4
    d7b4:	cinc	x3, x3, hi  // hi = pmore
    d7b8:	add	x3, x3, #0x3
    d7bc:	b	d748 <grub_ucs4_to_utf8_alloc+0x40>
    d7c0:	mov	x19, #0x1                   	// #1
    d7c4:	b	d774 <grub_ucs4_to_utf8_alloc+0x6c>

000000000000d7c8 <grub_is_valid_utf8>:
    d7c8:	mov	x3, x0
    d7cc:	cbz	x1, d844 <grub_is_valid_utf8+0x7c>
    d7d0:	mov	w4, #0x0                   	// #0
    d7d4:	mov	w0, #0x0                   	// #0
    d7d8:	mov	w6, #0x10ffff              	// #1114111
    d7dc:	nop
    d7e0:	cmn	x1, #0x1
    d7e4:	ldrb	w2, [x3], #1
    d7e8:	cset	x5, ne  // ne = any
    d7ec:	sub	x1, x1, x5
    d7f0:	cbz	w0, d84c <grub_is_valid_utf8+0x84>
    d7f4:	and	w5, w2, #0xc0
    d7f8:	cmp	w5, #0x80
    d7fc:	b.ne	d828 <grub_is_valid_utf8+0x60>  // b.any
    d800:	sub	w0, w0, #0x1
    d804:	bfi	w2, w4, #6, #26
    d808:	mov	w4, w2
    d80c:	cmp	w0, #0x1
    d810:	b.eq	d8ac <grub_is_valid_utf8+0xe4>  // b.none
    d814:	cmp	w0, #0x2
    d818:	b.ne	d884 <grub_is_valid_utf8+0xbc>  // b.any
    d81c:	cmp	w2, #0xf
    d820:	b.hi	d840 <grub_is_valid_utf8+0x78>  // b.pmore
    d824:	nop
    d828:	mov	w0, #0x0                   	// #0
    d82c:	ret
    d830:	tst	w2, #0x1e
    d834:	b.eq	d82c <grub_is_valid_utf8+0x64>  // b.none
    d838:	and	w4, w2, #0x1f
    d83c:	mov	w0, #0x1                   	// #1
    d840:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d844:	mov	w0, #0x1                   	// #1
    d848:	ret
    d84c:	tbz	w2, #7, d89c <grub_is_valid_utf8+0xd4>
    d850:	and	w4, w2, #0xe0
    d854:	cmp	w4, #0xc0
    d858:	b.eq	d830 <grub_is_valid_utf8+0x68>  // b.none
    d85c:	and	w4, w2, #0xf0
    d860:	cmp	w4, #0xe0
    d864:	b.eq	d8bc <grub_is_valid_utf8+0xf4>  // b.none
    d868:	and	w4, w2, #0xf8
    d86c:	cmp	w4, #0xf0
    d870:	b.ne	d82c <grub_is_valid_utf8+0x64>  // b.any
    d874:	and	w4, w2, #0x7
    d878:	mov	w0, #0x3                   	// #3
    d87c:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d880:	b	d844 <grub_is_valid_utf8+0x7c>
    d884:	cbnz	w0, d8cc <grub_is_valid_utf8+0x104>
    d888:	cbz	w2, d844 <grub_is_valid_utf8+0x7c>
    d88c:	cmp	w2, w6
    d890:	b.hi	d82c <grub_is_valid_utf8+0x64>  // b.pmore
    d894:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d898:	b	d844 <grub_is_valid_utf8+0x7c>
    d89c:	mov	w4, w2
    d8a0:	cbz	w2, d844 <grub_is_valid_utf8+0x7c>
    d8a4:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d8a8:	b	d844 <grub_is_valid_utf8+0x7c>
    d8ac:	cmp	w2, #0x1f
    d8b0:	b.ls	d828 <grub_is_valid_utf8+0x60>  // b.plast
    d8b4:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d8b8:	b	d844 <grub_is_valid_utf8+0x7c>
    d8bc:	and	w4, w2, #0xf
    d8c0:	mov	w0, #0x2                   	// #2
    d8c4:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d8c8:	b	d844 <grub_is_valid_utf8+0x7c>
    d8cc:	mov	w0, #0x1                   	// #1
    d8d0:	cbnz	x1, d7e0 <grub_is_valid_utf8+0x18>
    d8d4:	b	d844 <grub_is_valid_utf8+0x7c>

000000000000d8d8 <grub_utf8_to_ucs4>:
    d8d8:	cbz	x4, da20 <grub_utf8_to_ucs4+0x148>
    d8dc:	str	x2, [x4]
    d8e0:	cmp	x1, #0x0
    d8e4:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    d8e8:	b.eq	da34 <grub_utf8_to_ucs4+0x15c>  // b.none
    d8ec:	mov	x6, x0
    d8f0:	mov	w9, #0x0                   	// #0
    d8f4:	mov	w8, #0x0                   	// #0
    d8f8:	mov	x5, x2
    d8fc:	cmn	x3, #0x1
    d900:	cset	x7, ne  // ne = any
    d904:	sub	x3, x3, x7
    d908:	ldrb	w7, [x5], #1
    d90c:	cbz	w8, d988 <grub_utf8_to_ucs4+0xb0>
    d910:	and	w10, w7, #0xc0
    d914:	cmp	w10, #0x80
    d918:	b.ne	d940 <grub_utf8_to_ucs4+0x68>  // b.any
    d91c:	sub	w8, w8, #0x1
    d920:	bfi	w7, w9, #6, #26
    d924:	mov	w9, w7
    d928:	cmp	w8, #0x1
    d92c:	b.eq	d978 <grub_utf8_to_ucs4+0xa0>  // b.none
    d930:	cmp	w8, #0x2
    d934:	b.ne	d9e0 <grub_utf8_to_ucs4+0x108>  // b.any
    d938:	cmp	w7, #0xf
    d93c:	b.hi	d980 <grub_utf8_to_ucs4+0xa8>  // b.pmore
    d940:	mov	x5, x2
    d944:	mov	w9, #0x3f                  	// #63
    d948:	sub	x1, x1, #0x1
    d94c:	mov	x2, x5
    d950:	mov	w8, #0x0                   	// #0
    d954:	str	w9, [x6], #4
    d958:	cmp	x3, #0x0
    d95c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    d960:	b.ne	d8f8 <grub_utf8_to_ucs4+0x20>  // b.any
    d964:	sub	x6, x6, x0
    d968:	asr	x0, x6, #2
    d96c:	cbz	x4, d974 <grub_utf8_to_ucs4+0x9c>
    d970:	str	x2, [x4]
    d974:	ret
    d978:	cmp	w7, #0x1f
    d97c:	b.ls	d940 <grub_utf8_to_ucs4+0x68>  // b.plast
    d980:	mov	x2, x5
    d984:	b	d958 <grub_utf8_to_ucs4+0x80>
    d988:	mov	w9, w7
    d98c:	tbz	w7, #7, d9c8 <grub_utf8_to_ucs4+0xf0>
    d990:	and	w2, w7, #0xe0
    d994:	cmp	w2, #0xc0
    d998:	b.eq	d9f0 <grub_utf8_to_ucs4+0x118>  // b.none
    d99c:	and	w2, w7, #0xf0
    d9a0:	cmp	w2, #0xe0
    d9a4:	b.eq	da10 <grub_utf8_to_ucs4+0x138>  // b.none
    d9a8:	and	w2, w7, #0xf8
    d9ac:	mov	w9, #0x3f                  	// #63
    d9b0:	cmp	w2, #0xf0
    d9b4:	b.ne	d948 <grub_utf8_to_ucs4+0x70>  // b.any
    d9b8:	and	w9, w7, #0x7
    d9bc:	mov	x2, x5
    d9c0:	mov	w8, #0x3                   	// #3
    d9c4:	b	d958 <grub_utf8_to_ucs4+0x80>
    d9c8:	cbnz	w9, d948 <grub_utf8_to_ucs4+0x70>
    d9cc:	sub	x6, x6, x0
    d9d0:	mov	x2, x5
    d9d4:	asr	x0, x6, #2
    d9d8:	cbnz	x4, d970 <grub_utf8_to_ucs4+0x98>
    d9dc:	b	d974 <grub_utf8_to_ucs4+0x9c>
    d9e0:	cbz	w8, d9c8 <grub_utf8_to_ucs4+0xf0>
    d9e4:	mov	x2, x5
    d9e8:	mov	w8, #0x1                   	// #1
    d9ec:	b	d958 <grub_utf8_to_ucs4+0x80>
    d9f0:	tst	w7, #0x1e
    d9f4:	b.eq	da08 <grub_utf8_to_ucs4+0x130>  // b.none
    d9f8:	and	w9, w7, #0x1f
    d9fc:	mov	x2, x5
    da00:	mov	w8, #0x1                   	// #1
    da04:	b	d958 <grub_utf8_to_ucs4+0x80>
    da08:	mov	w9, #0x3f                  	// #63
    da0c:	b	d948 <grub_utf8_to_ucs4+0x70>
    da10:	and	w9, w7, #0xf
    da14:	mov	x2, x5
    da18:	mov	w8, #0x2                   	// #2
    da1c:	b	d958 <grub_utf8_to_ucs4+0x80>
    da20:	cmp	x1, #0x0
    da24:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    da28:	b.ne	d8ec <grub_utf8_to_ucs4+0x14>  // b.any
    da2c:	mov	x0, #0x0                   	// #0
    da30:	ret
    da34:	mov	x0, #0x0                   	// #0
    da38:	str	x2, [x4]
    da3c:	b	d974 <grub_utf8_to_ucs4+0x9c>

000000000000da40 <grub_utf8_to_ucs4_alloc>:
    da40:	stp	x29, x30, [sp, #-48]!
    da44:	mov	x29, sp
    da48:	stp	x19, x20, [sp, #16]
    da4c:	mov	x20, x1
    da50:	stp	x21, x22, [sp, #32]
    da54:	mov	x21, x2
    da58:	mov	x22, x0
    da5c:	bl	0 <grub_strlen>
    da60:	mov	x19, x0
    da64:	lsl	x0, x0, #2
    da68:	bl	0 <grub_malloc>
    da6c:	str	x0, [x20]
    da70:	cbz	x0, daa8 <grub_utf8_to_ucs4_alloc+0x68>
    da74:	mov	x2, x22
    da78:	mov	x1, x19
    da7c:	mov	x4, #0x0                   	// #0
    da80:	mov	x3, #0xffffffffffffffff    	// #-1
    da84:	bl	d8d8 <grub_utf8_to_ucs4>
    da88:	cbz	x21, da98 <grub_utf8_to_ucs4_alloc+0x58>
    da8c:	ldr	x1, [x20]
    da90:	add	x1, x1, x0, lsl #2
    da94:	str	x1, [x21]
    da98:	ldp	x19, x20, [sp, #16]
    da9c:	ldp	x21, x22, [sp, #32]
    daa0:	ldp	x29, x30, [sp], #48
    daa4:	ret
    daa8:	mov	x0, #0xffffffffffffffff    	// #-1
    daac:	b	da98 <grub_utf8_to_ucs4_alloc+0x58>

000000000000dab0 <grub_unicode_get_comb_type>:
    dab0:	stp	x29, x30, [sp, #-32]!
    dab4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    dab8:	mov	x29, sp
    dabc:	stp	x19, x20, [sp, #16]
    dac0:	mov	w19, w0
    dac4:	ldr	x20, [x1]
    dac8:	ldr	x0, [x20, #8]
    dacc:	cbz	x0, db70 <grub_unicode_get_comb_type+0xc0>
    dad0:	mov	w1, #0x1ffff               	// #131071
    dad4:	cmp	w19, w1
    dad8:	cset	w9, ls  // ls = plast
    dadc:	cbnz	w9, db60 <grub_unicode_get_comb_type+0xb0>
    dae0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    dae4:	ldr	x0, [x0]
    dae8:	mov	x3, x0
    daec:	ldrh	w2, [x0, #2]
    daf0:	ubfx	x2, x2, #5, #9
    daf4:	cbz	w2, db34 <grub_unicode_get_comb_type+0x84>
    daf8:	ldrb	w5, [x3]
    dafc:	ldrb	w4, [x3, #1]
    db00:	ldrb	w1, [x3, #2]
    db04:	orr	x4, x5, x4, lsl #8
    db08:	ubfiz	x1, x1, #16, #5
    db0c:	orr	x1, x1, x4
    db10:	add	w2, w2, w1
    db14:	cmp	w1, w19
    db18:	b.hi	db24 <grub_unicode_get_comb_type+0x74>  // b.pmore
    db1c:	cmp	w2, w19
    db20:	b.hi	db44 <grub_unicode_get_comb_type+0x94>  // b.pmore
    db24:	ldrh	w2, [x3, #8]
    db28:	add	x3, x3, #0x6
    db2c:	ubfx	x2, x2, #5, #9
    db30:	cbnz	w2, daf8 <grub_unicode_get_comb_type+0x48>
    db34:	mov	w0, #0x0                   	// #0
    db38:	ldp	x19, x20, [sp, #16]
    db3c:	ldp	x29, x30, [sp], #32
    db40:	ret
    db44:	ldrh	w0, [x3, #4]
    db48:	ldp	x19, x20, [sp, #16]
    db4c:	ubfx	x0, x0, #3, #8
    db50:	ldp	x29, x30, [sp], #32
    db54:	ret
    db58:	cmp	w19, w8
    db5c:	b.hi	db34 <grub_unicode_get_comb_type+0x84>  // b.pmore
    db60:	ldrb	w0, [x0, w19, uxtw]
    db64:	ldp	x19, x20, [sp, #16]
    db68:	ldp	x29, x30, [sp], #32
    db6c:	ret
    db70:	mov	x0, #0x20000               	// #131072
    db74:	bl	0 <grub_zalloc>
    db78:	str	x0, [x20, #8]
    db7c:	cbz	x0, dc2c <grub_unicode_get_comb_type+0x17c>
    db80:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    db84:	mov	w8, #0x1ffff               	// #131071
    db88:	cmp	w19, w8
    db8c:	ldr	x3, [x1]
    db90:	cset	w9, ls  // ls = plast
    db94:	ldrh	w1, [x3, #2]
    db98:	tst	x1, #0x3fe0
    db9c:	b.eq	db58 <grub_unicode_get_comb_type+0xa8>  // b.none
    dba0:	ldrb	w5, [x3]
    dba4:	ldrb	w4, [x3, #1]
    dba8:	ldrb	w1, [x3, #2]
    dbac:	ldrh	w2, [x3, #2]
    dbb0:	orr	x4, x5, x4, lsl #8
    dbb4:	ubfiz	x1, x1, #16, #5
    dbb8:	orr	x1, x1, x4
    dbbc:	ubfx	x2, x2, #5, #9
    dbc0:	add	w2, w2, w1
    dbc4:	mov	w4, w1
    dbc8:	cmp	w1, w2
    dbcc:	add	x6, x0, x1
    dbd0:	ccmp	w1, w8, #0x2, cc  // cc = lo, ul, last
    dbd4:	b.hi	dc18 <grub_unicode_get_comb_type+0x168>  // b.pmore
    dbd8:	ldrh	w1, [x3, #4]
    dbdc:	add	w4, w4, #0x1
    dbe0:	ubfx	x1, x1, #3, #8
    dbe4:	strb	w1, [x6], #1
    dbe8:	ldrb	w7, [x3]
    dbec:	ldrb	w5, [x3, #1]
    dbf0:	ldrb	w2, [x3, #2]
    dbf4:	ldrh	w1, [x3, #2]
    dbf8:	orr	x5, x7, x5, lsl #8
    dbfc:	ubfiz	x2, x2, #16, #5
    dc00:	orr	x2, x2, x5
    dc04:	ubfx	x1, x1, #5, #9
    dc08:	add	w1, w1, w2
    dc0c:	cmp	w1, w4
    dc10:	ccmp	w4, w8, #0x2, hi  // hi = pmore
    dc14:	b.ls	dbd8 <grub_unicode_get_comb_type+0x128>  // b.plast
    dc18:	ldrh	w1, [x3, #8]
    dc1c:	add	x3, x3, #0x6
    dc20:	tst	x1, #0x3fe0
    dc24:	b.ne	dba0 <grub_unicode_get_comb_type+0xf0>  // b.any
    dc28:	b	dadc <grub_unicode_get_comb_type+0x2c>
    dc2c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    dc30:	ldr	x0, [x0]
    dc34:	str	wzr, [x0]
    dc38:	b	dae0 <grub_unicode_get_comb_type+0x30>
    dc3c:	nop
	...

000000000000dc58 <grub_unicode_aglomerate_comb>:
    dc58:	stp	x29, x30, [sp, #-112]!
    dc5c:	mov	x29, sp
    dc60:	stp	x21, x22, [sp, #32]
    dc64:	mov	x22, x0
    dc68:	mov	x0, x2
    dc6c:	stp	x25, x26, [sp, #64]
    dc70:	mov	x26, x2
    dc74:	mov	x2, #0x20                  	// #32
    dc78:	stp	x27, x28, [sp, #80]
    dc7c:	mov	x27, x1
    dc80:	mov	w1, #0x0                   	// #0
    dc84:	bl	0 <grub_memset>
    dc88:	cbz	x27, dd88 <grub_unicode_aglomerate_comb+0x130>
    dc8c:	ldr	w0, [x22]
    dc90:	stp	x19, x20, [sp, #16]
    dc94:	cmp	w0, #0x7f
    dc98:	stp	x23, x24, [sp, #48]
    dc9c:	ccmp	w0, #0x1f, #0x0, ne  // ne = any
    dca0:	b.ls	df34 <grub_unicode_aglomerate_comb+0x2dc>  // b.plast
    dca4:	add	x27, x22, x27, lsl #2
    dca8:	cmp	x22, x27
    dcac:	b.cs	dfa8 <grub_unicode_aglomerate_comb+0x350>  // b.hs, b.nlast
    dcb0:	mov	w21, #0xff00                	// #65280
    dcb4:	mov	x25, #0xffe000000000        	// #281337537757184
    dcb8:	mov	x19, x22
    dcbc:	mov	w23, #0x0                   	// #0
    dcc0:	mov	w28, #0x0                   	// #0
    dcc4:	mov	w24, #0xffff0200            	// #-65024
    dcc8:	movk	w21, #0xfff1, lsl #16
    dccc:	movk	x25, #0xf807, lsl #48
    dcd0:	b	dcf4 <grub_unicode_aglomerate_comb+0x9c>
    dcd4:	cbz	w28, dce8 <grub_unicode_aglomerate_comb+0x90>
    dcd8:	ldrh	w1, [x26, #2]
    dcdc:	sub	w0, w0, #0xef
    dce0:	bfi	w1, w0, #7, #9
    dce4:	strh	w1, [x26, #2]
    dce8:	add	x19, x19, #0x4
    dcec:	cmp	x19, x27
    dcf0:	b.cs	dd78 <grub_unicode_aglomerate_comb+0x120>  // b.hs, b.nlast
    dcf4:	ldr	w0, [x19]
    dcf8:	add	w1, w0, w24
    dcfc:	cmp	w1, #0xf
    dd00:	b.ls	dda0 <grub_unicode_aglomerate_comb+0x148>  // b.plast
    dd04:	add	w1, w0, w21
    dd08:	cmp	w1, #0xef
    dd0c:	b.ls	dcd4 <grub_unicode_aglomerate_comb+0x7c>  // b.plast
    dd10:	bl	dab0 <grub_unicode_get_comb_type>
    dd14:	mov	w20, w0
    dd18:	cbz	w0, ddb8 <grub_unicode_aglomerate_comb+0x160>
    dd1c:	cbz	w28, dce8 <grub_unicode_aglomerate_comb+0x90>
    dd20:	ldrh	w2, [x26, #6]
    dd24:	sub	w0, w0, #0xfd
    dd28:	cmp	w0, #0x2
    dd2c:	add	x8, x26, #0x18
    dd30:	ubfx	x2, x2, #3, #8
    dd34:	csel	w23, w23, w2, hi  // hi = pmore
    dd38:	cmp	w2, #0x1
    dd3c:	b.ls	de10 <grub_unicode_aglomerate_comb+0x1b8>  // b.plast
    dd40:	cmp	w2, #0x2
    dd44:	b.eq	dde4 <grub_unicode_aglomerate_comb+0x18c>  // b.none
    dd48:	ldr	x0, [x26, #24]
    dd4c:	add	w1, w2, #0x1
    dd50:	sbfiz	x1, x1, #2, #32
    dd54:	bl	0 <grub_realloc>
    dd58:	mov	x8, x0
    dd5c:	cbnz	x0, dea8 <grub_unicode_aglomerate_comb+0x250>
    dd60:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    dd64:	add	x19, x19, #0x4
    dd68:	cmp	x19, x27
    dd6c:	ldr	x0, [x0]
    dd70:	str	wzr, [x0]
    dd74:	b.cc	dcf4 <grub_unicode_aglomerate_comb+0x9c>  // b.lo, b.ul, b.last
    dd78:	sub	x19, x19, x22
    dd7c:	ldp	x23, x24, [sp, #48]
    dd80:	asr	x27, x19, #2
    dd84:	ldp	x19, x20, [sp, #16]
    dd88:	mov	x0, x27
    dd8c:	ldp	x21, x22, [sp, #32]
    dd90:	ldp	x25, x26, [sp, #64]
    dd94:	ldp	x27, x28, [sp, #80]
    dd98:	ldp	x29, x30, [sp], #112
    dd9c:	ret
    dda0:	cbz	w28, dce8 <grub_unicode_aglomerate_comb+0x90>
    dda4:	ldrh	w1, [x26, #2]
    dda8:	add	w0, w0, #0x201
    ddac:	bfi	w1, w0, #7, #9
    ddb0:	strh	w1, [x26, #2]
    ddb4:	b	dce8 <grub_unicode_aglomerate_comb+0x90>
    ddb8:	cbnz	w28, df74 <grub_unicode_aglomerate_comb+0x31c>
    ddbc:	ldr	x1, [x26]
    ddc0:	mov	w2, #0x1                   	// #1
    ddc4:	ldr	w0, [x19]
    ddc8:	mov	w28, #0x1                   	// #1
    ddcc:	and	x1, x1, x25
    ddd0:	strb	w2, [x26, #8]
    ddd4:	and	x0, x0, #0x7fffff
    ddd8:	orr	x0, x0, x1
    dddc:	str	x0, [x26]
    dde0:	b	dce8 <grub_unicode_aglomerate_comb+0x90>
    dde4:	mov	x0, #0xc                   	// #12
    dde8:	bl	0 <grub_malloc>
    ddec:	cbz	x0, dd60 <grub_unicode_aglomerate_comb+0x108>
    ddf0:	mov	x2, #0x8                   	// #8
    ddf4:	add	x1, x26, #0x18
    ddf8:	str	x0, [sp, #104]
    ddfc:	bl	0 <grub_memmove>
    de00:	ldrh	w2, [x26, #6]
    de04:	ldr	x8, [sp, #104]
    de08:	str	x8, [x26, #24]
    de0c:	ubfx	x2, x2, #3, #8
    de10:	cmp	w23, w2
    de14:	b.cs	df98 <grub_unicode_aglomerate_comb+0x340>  // b.hs, b.nlast
    de18:	cmp	w20, #0x20
    de1c:	mov	w4, w23
    de20:	cset	w9, ls  // ls = plast
    de24:	cmp	w20, #0x1a
    de28:	b.hi	deb8 <grub_unicode_aglomerate_comb+0x260>  // b.pmore
    de2c:	add	x7, x8, w23, uxtw #2
    de30:	ldrh	w5, [x7, #2]
    de34:	mov	x1, x7
    de38:	mov	w6, w4
    de3c:	add	x7, x7, #0x4
    de40:	ubfx	x5, x5, #5, #8
    de44:	cmp	w5, #0x21
    de48:	ccmp	w9, #0x0, #0x4, eq  // eq = none
    de4c:	b.eq	df18 <grub_unicode_aglomerate_comb+0x2c0>  // b.none
    de50:	add	x4, x4, #0x1
    de54:	sub	w2, w2, w6
    de58:	str	x1, [sp, #104]
    de5c:	lsl	x2, x2, #2
    de60:	add	x0, x8, x4, lsl #2
    de64:	bl	0 <grub_memmove>
    de68:	ldr	x1, [sp, #104]
    de6c:	ubfiz	w0, w20, #21, #8
    de70:	ldr	w4, [x19]
    de74:	ldr	w2, [x1]
    de78:	and	w20, w4, #0x1fffff
    de7c:	orr	w0, w0, w20
    de80:	and	w2, w2, #0xe0000000
    de84:	orr	w0, w0, w2
    de88:	str	w0, [x1]
    de8c:	ldrh	w0, [x26, #6]
    de90:	mov	w1, w0
    de94:	ubfx	x0, x0, #3, #8
    de98:	add	w0, w0, #0x1
    de9c:	bfi	w1, w0, #3, #8
    dea0:	strh	w1, [x26, #6]
    dea4:	b	dce8 <grub_unicode_aglomerate_comb+0x90>
    dea8:	ldrh	w2, [x26, #6]
    deac:	str	x0, [x26, #24]
    deb0:	ubfx	x2, x2, #3, #8
    deb4:	b	de10 <grub_unicode_aglomerate_comb+0x1b8>
    deb8:	add	x5, x8, w23, uxtw #2
    debc:	nop
    dec0:	ldrh	w0, [x5, #2]
    dec4:	mov	x1, x5
    dec8:	mov	w6, w4
    decc:	add	x5, x5, #0x4
    ded0:	ubfx	x0, x0, #5, #8
    ded4:	sub	w7, w0, #0x1b
    ded8:	cmp	w0, #0x21
    dedc:	and	w7, w7, #0xff
    dee0:	ccmp	w9, #0x0, #0x4, eq  // eq = none
    dee4:	b.ne	defc <grub_unicode_aglomerate_comb+0x2a4>  // b.any
    dee8:	cmp	w20, #0x21
    deec:	ccmp	w7, #0x5, #0x2, eq  // eq = none
    def0:	b.ls	de50 <grub_unicode_aglomerate_comb+0x1f8>  // b.plast
    def4:	cmp	w0, w20
    def8:	b.hi	de50 <grub_unicode_aglomerate_comb+0x1f8>  // b.pmore
    defc:	add	x4, x4, #0x1
    df00:	add	w6, w6, #0x1
    df04:	cmp	w2, w4
    df08:	b.hi	dec0 <grub_unicode_aglomerate_comb+0x268>  // b.pmore
    df0c:	mov	w4, w6
    df10:	add	x1, x8, w6, uxtw #2
    df14:	b	de50 <grub_unicode_aglomerate_comb+0x1f8>
    df18:	cmp	w20, w5
    df1c:	b.cc	de50 <grub_unicode_aglomerate_comb+0x1f8>  // b.lo, b.ul, b.last
    df20:	add	x4, x4, #0x1
    df24:	add	w6, w6, #0x1
    df28:	cmp	w2, w4
    df2c:	b.hi	de30 <grub_unicode_aglomerate_comb+0x1d8>  // b.pmore
    df30:	b	df0c <grub_unicode_aglomerate_comb+0x2b4>
    df34:	ldr	x2, [x26]
    df38:	and	x1, x0, #0x7fffff
    df3c:	mov	w3, #0x1                   	// #1
    df40:	strb	w3, [x26, #8]
    df44:	and	x2, x2, #0xffffffe000000000
    df48:	mov	x0, #0x1                   	// #1
    df4c:	and	x2, x2, #0xf807ffffffffffff
    df50:	orr	x1, x2, x1
    df54:	ldp	x19, x20, [sp, #16]
    df58:	ldp	x23, x24, [sp, #48]
    df5c:	str	x1, [x26]
    df60:	ldp	x21, x22, [sp, #32]
    df64:	ldp	x25, x26, [sp, #64]
    df68:	ldp	x27, x28, [sp, #80]
    df6c:	ldp	x29, x30, [sp], #112
    df70:	ret
    df74:	sub	x19, x19, x22
    df78:	ldp	x21, x22, [sp, #32]
    df7c:	asr	x0, x19, #2
    df80:	ldp	x19, x20, [sp, #16]
    df84:	ldp	x23, x24, [sp, #48]
    df88:	ldp	x25, x26, [sp, #64]
    df8c:	ldp	x27, x28, [sp, #80]
    df90:	ldp	x29, x30, [sp], #112
    df94:	ret
    df98:	mov	w4, w23
    df9c:	add	x1, x8, w23, uxtw #2
    dfa0:	mov	w6, w23
    dfa4:	b	de50 <grub_unicode_aglomerate_comb+0x1f8>
    dfa8:	mov	x27, #0x0                   	// #0
    dfac:	ldp	x19, x20, [sp, #16]
    dfb0:	ldp	x23, x24, [sp, #48]
    dfb4:	b	dd88 <grub_unicode_aglomerate_comb+0x130>
	...
    dfc0:	sub	sp, sp, #0x320
    dfc4:	stp	x29, x30, [sp]
    dfc8:	mov	x29, sp
    dfcc:	stp	x19, x20, [sp, #16]
    dfd0:	stp	x25, x26, [sp, #64]
    dfd4:	mov	x26, x0
    dfd8:	mov	x25, x1
    dfdc:	lsl	x0, x1, #5
    dfe0:	stp	x3, x5, [sp, #128]
    dfe4:	str	w7, [sp, #188]
    dfe8:	stp	x4, x6, [sp, #216]
    dfec:	str	x2, [sp, #232]
    dff0:	ldr	x19, [sp, #800]
    dff4:	bl	0 <grub_malloc>
    dff8:	cbz	x0, f758 <grub_unicode_aglomerate_comb+0x1b00>
    dffc:	stp	x21, x22, [sp, #32]
    e000:	mov	x20, x0
    e004:	stp	x23, x24, [sp, #48]
    e008:	stp	x27, x28, [sp, #80]
    e00c:	cbz	x25, e094 <grub_unicode_aglomerate_comb+0x43c>
    e010:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    e014:	mov	w22, #0x0                   	// #0
    e018:	mov	x1, #0x0                   	// #0
    e01c:	mov	w23, #0x1ffff               	// #131071
    e020:	ldr	x27, [x0]
    e024:	adrp	x24, 0 <grub_normal_free_menu-0x498>
    e028:	ldr	x5, [x27]
    e02c:	nop
    e030:	ldr	w21, [x26, x1, lsl #2]
    e034:	cbz	x5, e4e4 <grub_unicode_aglomerate_comb+0x88c>
    e038:	cmp	x5, #0x0
    e03c:	ccmp	w21, w23, #0x2, ne  // ne = any
    e040:	b.ls	e4a0 <grub_unicode_aglomerate_comb+0x848>  // b.plast
    e044:	ldr	x2, [x24]
    e048:	ldrh	w1, [x2, #2]
    e04c:	ubfx	x1, x1, #5, #9
    e050:	cbz	w1, e094 <grub_unicode_aglomerate_comb+0x43c>
    e054:	nop
    e058:	ldrb	w4, [x2]
    e05c:	ldrb	w3, [x2, #1]
    e060:	ldrb	w0, [x2, #2]
    e064:	orr	x3, x4, x3, lsl #8
    e068:	ubfiz	x0, x0, #16, #5
    e06c:	orr	x0, x0, x3
    e070:	add	w1, w1, w0
    e074:	cmp	w21, w0
    e078:	b.cc	e084 <grub_unicode_aglomerate_comb+0x42c>  // b.lo, b.ul, b.last
    e07c:	cmp	w21, w1
    e080:	b.cc	e450 <grub_unicode_aglomerate_comb+0x7f8>  // b.lo, b.ul, b.last
    e084:	ldrh	w1, [x2, #8]
    e088:	add	x2, x2, #0x6
    e08c:	ubfx	x1, x1, #5, #9
    e090:	cbnz	w1, e058 <grub_unicode_aglomerate_comb+0x400>
    e094:	mov	w27, #0x0                   	// #0
    e098:	add	x25, x26, x25, lsl #2
    e09c:	cmp	x26, x25
    e0a0:	b.cs	e498 <grub_unicode_aglomerate_comb+0x840>  // b.hs, b.nlast
    e0a4:	mov	w7, w27
    e0a8:	mov	w21, #0x0                   	// #0
    e0ac:	mov	x24, x26
    e0b0:	mov	x23, x26
    e0b4:	mov	w8, #0x0                   	// #0
    e0b8:	mov	x26, x20
    e0bc:	mov	w4, #0x0                   	// #0
    e0c0:	mov	w10, #0x0                   	// #0
    e0c4:	mov	w20, w4
    e0c8:	mov	w28, w10
    e0cc:	str	w27, [sp, #152]
    e0d0:	mov	w27, w8
    e0d4:	str	x19, [sp, #800]
    e0d8:	mov	w19, w21
    e0dc:	mov	w21, w7
    e0e0:	mov	w9, #0x0                   	// #0
    e0e4:	mov	w22, #0x0                   	// #0
    e0e8:	mov	w3, #0x200d                	// #8205
    e0ec:	mov	w6, #0x200c                	// #8204
    e0f0:	str	wzr, [sp, #104]
    e0f4:	nop
    e0f8:	ldr	w0, [x24]
    e0fc:	cmp	w0, w3
    e100:	b.eq	e4ac <grub_unicode_aglomerate_comb+0x854>  // b.none
    e104:	cmp	w0, w6
    e108:	b.eq	e4f0 <grub_unicode_aglomerate_comb+0x898>  // b.none
    e10c:	sub	w0, w0, #0xe0, lsl #12
    e110:	cmp	w0, #0x7f
    e114:	b.ls	e240 <grub_unicode_aglomerate_comb+0x5e8>  // b.plast
    e118:	ubfiz	x5, x19, #5, #32
    e11c:	sub	x1, x25, x24
    e120:	add	x2, x26, x5
    e124:	mov	x0, x24
    e128:	asr	x1, x1, #2
    e12c:	stp	x2, x5, [sp, #112]
    e130:	str	w9, [sp, #144]
    e134:	bl	dc58 <grub_unicode_aglomerate_comb>
    e138:	sub	x1, x24, x23
    e13c:	ldr	w9, [sp, #144]
    e140:	ldp	x2, x5, [sp, #112]
    e144:	asr	x1, x1, #2
    e148:	str	x1, [x2, #16]
    e14c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    e150:	add	x1, x1, #0x0
    e154:	mov	w3, #0x200d                	// #8205
    e158:	mov	w6, #0x200c                	// #8204
    e15c:	ldr	x1, [x1]
    e160:	ldr	w12, [x26, x5]
    e164:	ldr	x1, [x1]
    e168:	ubfx	x12, x12, #0, #23
    e16c:	cbz	x1, e8ec <grub_unicode_aglomerate_comb+0xc94>
    e170:	cmp	x1, #0x0
    e174:	mov	w5, #0x1ffff               	// #131071
    e178:	ccmp	w12, w5, #0x2, ne  // ne = any
    e17c:	b.ls	e530 <grub_unicode_aglomerate_comb+0x8d8>  // b.plast
    e180:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    e184:	ldr	x1, [x1]
    e188:	mov	x13, x1
    e18c:	ldrh	w5, [x1, #2]
    e190:	ubfx	x5, x5, #5, #9
    e194:	cbz	w5, e1d4 <grub_unicode_aglomerate_comb+0x57c>
    e198:	ldrb	w7, [x13]
    e19c:	ldrb	w4, [x13, #1]
    e1a0:	ldrb	w1, [x13, #2]
    e1a4:	orr	x4, x7, x4, lsl #8
    e1a8:	ubfiz	x1, x1, #16, #5
    e1ac:	orr	x1, x1, x4
    e1b0:	add	w5, w5, w1
    e1b4:	cmp	w12, w1
    e1b8:	b.cc	e1c4 <grub_unicode_aglomerate_comb+0x56c>  // b.lo, b.ul, b.last
    e1bc:	cmp	w12, w5
    e1c0:	b.cc	e5f0 <grub_unicode_aglomerate_comb+0x998>  // b.lo, b.ul, b.last
    e1c4:	ldrh	w5, [x13, #8]
    e1c8:	add	x13, x13, #0x6
    e1cc:	ubfx	x5, x5, #5, #9
    e1d0:	cbnz	w5, e198 <grub_unicode_aglomerate_comb+0x540>
    e1d4:	mov	w1, #0x0                   	// #0
    e1d8:	ldr	w4, [sp, #104]
    e1dc:	cmp	w4, #0x2
    e1e0:	b.eq	e564 <grub_unicode_aglomerate_comb+0x90c>  // b.none
    e1e4:	ldr	w4, [sp, #104]
    e1e8:	cmp	w4, #0x1
    e1ec:	b.ne	e208 <grub_unicode_aglomerate_comb+0x5b0>  // b.any
    e1f0:	ldrb	w5, [x2, #4]
    e1f4:	mov	w9, #0x1d                  	// #29
    e1f8:	and	w9, w9, w5
    e1fc:	orr	w9, w9, #0x8
    e200:	bfxil	w5, w9, #0, #5
    e204:	strb	w5, [x2, #4]
    e208:	ldrb	w5, [x2, #5]
    e20c:	bfxil	w5, w21, #0, #6
    e210:	strb	w5, [x2, #5]
    e214:	cbz	w28, e584 <grub_unicode_aglomerate_comb+0x92c>
    e218:	ldr	w5, [x2, #4]
    e21c:	cmp	w28, #0x2
    e220:	mov	w1, #0x3                   	// #3
    e224:	csel	w1, wzr, w1, eq  // eq = none
    e228:	bfi	w5, w1, #14, #5
    e22c:	str	w5, [x2, #4]
    e230:	add	w19, w19, #0x1
    e234:	mov	w9, #0x1                   	// #1
    e238:	str	wzr, [sp, #104]
    e23c:	add	x24, x24, x0, lsl #2
    e240:	cmp	x24, x25
    e244:	b.cc	e0f8 <grub_unicode_aglomerate_comb+0x4a0>  // b.lo, b.ul, b.last
    e248:	mov	w21, w19
    e24c:	ldr	w27, [sp, #152]
    e250:	mov	x20, x26
    e254:	ldr	x19, [sp, #800]
    e258:	cbz	w22, f56c <grub_unicode_aglomerate_comb+0x1914>
    e25c:	add	x22, x26, #0x20
    e260:	mov	w1, #0x0                   	// #0
    e264:	cbz	w21, e498 <grub_unicode_aglomerate_comb+0x840>
    e268:	mov	w12, #0x3                   	// #3
    e26c:	mov	w3, #0x8000                	// #32768
    e270:	mov	w18, w12
    e274:	mov	w17, #0x8                   	// #8
    e278:	mov	w15, #0x12                  	// #18
    e27c:	mov	w23, #0xb                   	// #11
    e280:	mov	w4, #0x3c000               	// #245760
    e284:	movk	w3, #0x4, lsl #16
    e288:	ubfiz	x6, x1, #5, #32
    e28c:	add	w2, w1, #0x1
    e290:	add	x6, x20, x6
    e294:	mov	w11, w1
    e298:	add	x2, x20, x2, lsl #5
    e29c:	mov	w8, w1
    e2a0:	ldrb	w5, [x6, #5]
    e2a4:	mov	w0, w5
    e2a8:	b	e2b4 <grub_unicode_aglomerate_comb+0x65c>
    e2ac:	ldrb	w0, [x2, #5]
    e2b0:	add	x2, x2, #0x20
    e2b4:	eor	w0, w5, w0
    e2b8:	tst	x0, #0x3f
    e2bc:	b.ne	e2cc <grub_unicode_aglomerate_comb+0x674>  // b.any
    e2c0:	add	w8, w8, #0x1
    e2c4:	cmp	w21, w8
    e2c8:	b.hi	e2ac <grub_unicode_aglomerate_comb+0x654>  // b.pmore
    e2cc:	mov	w9, w27
    e2d0:	cbz	w1, e2e4 <grub_unicode_aglomerate_comb+0x68c>
    e2d4:	sub	w0, w1, #0x1
    e2d8:	add	x0, x20, x0, lsl #5
    e2dc:	ldrb	w9, [x0, #5]
    e2e0:	and	w9, w9, #0x1
    e2e4:	cmp	w21, w8
    e2e8:	mov	w13, w27
    e2ec:	b.eq	e300 <grub_unicode_aglomerate_comb+0x6a8>  // b.none
    e2f0:	ubfiz	x0, x8, #5, #32
    e2f4:	add	x0, x20, x0
    e2f8:	ldrb	w13, [x0, #5]
    e2fc:	and	w13, w13, #0x3f
    e300:	ldrb	w10, [x6, #5]
    e304:	cmp	w9, #0x0
    e308:	csel	w9, w9, w12, eq  // eq = none
    e30c:	cmp	w8, w1
    e310:	and	w10, w10, #0x3f
    e314:	b.ls	e810 <grub_unicode_aglomerate_comb+0xbb8>  // b.plast
    e318:	mov	w14, w9
    e31c:	mov	w16, w9
    e320:	mov	w2, w1
    e324:	mov	w7, w1
    e328:	b	e36c <grub_unicode_aglomerate_comb+0x714>
    e32c:	cmp	w0, #0x4
    e330:	b.eq	e740 <grub_unicode_aglomerate_comb+0xae8>  // b.none
    e334:	b.ls	e640 <grub_unicode_aglomerate_comb+0x9e8>  // b.plast
    e338:	cmp	w0, #0x8
    e33c:	b.ne	e7b4 <grub_unicode_aglomerate_comb+0xb5c>  // b.any
    e340:	add	w2, w2, #0x1
    e344:	mov	w16, w0
    e348:	cmp	w14, #0x4
    e34c:	b.eq	e8cc <grub_unicode_aglomerate_comb+0xc74>  // b.none
    e350:	ldr	w0, [x5, #4]
    e354:	and	w0, w0, #0x7c000
    e358:	cmp	w0, #0x20, lsl #12
    e35c:	b.eq	e3b0 <grub_unicode_aglomerate_comb+0x758>  // b.none
    e360:	cmp	w8, w2
    e364:	b.ls	e3c8 <grub_unicode_aglomerate_comb+0x770>  // b.plast
    e368:	mov	w7, w2
    e36c:	add	x5, x20, x7, lsl #5
    e370:	ldr	w6, [x5, #4]
    e374:	ubfx	x0, x6, #14, #5
    e378:	cmp	w0, #0x9
    e37c:	b.eq	e7c0 <grub_unicode_aglomerate_comb+0xb68>  // b.none
    e380:	b.ls	e32c <grub_unicode_aglomerate_comb+0x6d4>  // b.plast
    e384:	cmp	w0, #0xc
    e388:	b.eq	e758 <grub_unicode_aglomerate_comb+0xb00>  // b.none
    e38c:	cmp	w0, #0xd
    e390:	b.ne	e65c <grub_unicode_aglomerate_comb+0xa04>  // b.any
    e394:	bfi	w6, w16, #14, #5
    e398:	str	w6, [x5, #4]
    e39c:	add	w2, w2, #0x1
    e3a0:	ldr	w0, [x5, #4]
    e3a4:	and	w0, w0, #0x7c000
    e3a8:	cmp	w0, #0x20, lsl #12
    e3ac:	b.ne	e360 <grub_unicode_aglomerate_comb+0x708>  // b.any
    e3b0:	cbnz	w14, e360 <grub_unicode_aglomerate_comb+0x708>
    e3b4:	ldr	w0, [x5, #4]
    e3b8:	cmp	w8, w2
    e3bc:	and	w0, w0, #0xfff83fff
    e3c0:	str	w0, [x5, #4]
    e3c4:	b.hi	e368 <grub_unicode_aglomerate_comb+0x710>  // b.pmore
    e3c8:	tst	x10, #0x1
    e3cc:	and	w13, w13, #0x1
    e3d0:	csel	w10, w18, wzr, ne  // ne = any
    e3d4:	and	w10, w10, #0xff
    e3d8:	cmp	w8, w1
    e3dc:	b.ls	e428 <grub_unicode_aglomerate_comb+0x7d0>  // b.plast
    e3e0:	add	x6, x20, x11, lsl #5
    e3e4:	mov	w2, w1
    e3e8:	mov	x5, x6
    e3ec:	nop
    e3f0:	ldr	w0, [x5, #4]
    e3f4:	add	x5, x5, #0x20
    e3f8:	and	w7, w0, #0x78000
    e3fc:	and	w0, w0, #0x7c000
    e400:	cmp	w7, #0x40, lsl #12
    e404:	ccmp	w0, w4, #0x4, ne  // ne = any
    e408:	ccmp	w0, w3, #0x4, ne  // ne = any
    e40c:	b.ne	e89c <grub_unicode_aglomerate_comb+0xc44>  // b.any
    e410:	add	w2, w2, #0x1
    e414:	cmp	w8, w2
    e418:	b.ne	e3f0 <grub_unicode_aglomerate_comb+0x798>  // b.any
    e41c:	mov	w2, w8
    e420:	cmp	w8, w1
    e424:	b.ne	e820 <grub_unicode_aglomerate_comb+0xbc8>  // b.any
    e428:	add	x0, x20, x11, lsl #5
    e42c:	add	w2, w1, #0x1
    e430:	ldr	w9, [x0, #4]
    e434:	ands	w9, w9, #0x7c000
    e438:	csel	w9, w9, w12, eq  // eq = none
    e43c:	cmp	w8, w2
    e440:	b.ls	e810 <grub_unicode_aglomerate_comb+0xbb8>  // b.plast
    e444:	mov	w11, w2
    e448:	mov	x1, x11
    e44c:	b	e3d8 <grub_unicode_aglomerate_comb+0x780>
    e450:	ldrb	w1, [x2, #4]
    e454:	ldrb	w0, [x2, #3]
    e458:	ubfiz	x1, x1, #2, #3
    e45c:	orr	w0, w1, w0, lsr #6
    e460:	and	w1, w0, #0xfffffffb
    e464:	cbz	w1, e480 <grub_unicode_aglomerate_comb+0x828>
    e468:	cmp	w0, #0x3
    e46c:	b.eq	f66c <grub_unicode_aglomerate_comb+0x1a14>  // b.none
    e470:	add	w1, w22, #0x1
    e474:	mov	x22, x1
    e478:	cmp	x25, w1, uxtw
    e47c:	b.hi	e030 <grub_unicode_aglomerate_comb+0x3d8>  // b.pmore
    e480:	sub	w0, w0, #0x3
    e484:	add	x25, x26, x25, lsl #2
    e488:	cmp	w0, #0x1
    e48c:	cset	w27, ls  // ls = plast
    e490:	cmp	x26, x25
    e494:	b.cc	e0a4 <grub_unicode_aglomerate_comb+0x44c>  // b.lo, b.ul, b.last
    e498:	mov	x19, #0x0                   	// #0
    e49c:	b	eac8 <grub_unicode_aglomerate_comb+0xe70>
    e4a0:	ldrb	w0, [x5, w21, uxtw]
    e4a4:	and	w0, w0, #0x7f
    e4a8:	b	e460 <grub_unicode_aglomerate_comb+0x808>
    e4ac:	cbz	w9, e4c8 <grub_unicode_aglomerate_comb+0x870>
    e4b0:	sub	w0, w19, #0x1
    e4b4:	mov	w2, #0x14                  	// #20
    e4b8:	add	x0, x26, x0, lsl #5
    e4bc:	ldrb	w1, [x0, #4]
    e4c0:	orr	w1, w1, w2
    e4c4:	strb	w1, [x0, #4]
    e4c8:	mov	w0, #0x2                   	// #2
    e4cc:	str	w0, [sp, #104]
    e4d0:	add	x24, x24, #0x4
    e4d4:	mov	w9, #0x0                   	// #0
    e4d8:	cmp	x24, x25
    e4dc:	b.cc	e0f8 <grub_unicode_aglomerate_comb+0x4a0>  // b.lo, b.ul, b.last
    e4e0:	b	e248 <grub_unicode_aglomerate_comb+0x5f0>
    e4e4:	bl	d338 <grub_context_fini+0x18>
    e4e8:	ldr	x5, [x27]
    e4ec:	b	e038 <grub_unicode_aglomerate_comb+0x3e0>
    e4f0:	cbz	w9, e514 <grub_unicode_aglomerate_comb+0x8bc>
    e4f4:	sub	w0, w19, #0x1
    e4f8:	mov	w2, #0x1b                  	// #27
    e4fc:	add	x0, x26, x0, lsl #5
    e500:	ldrb	w1, [x0, #4]
    e504:	and	w2, w2, w1
    e508:	orr	w2, w2, #0x10
    e50c:	bfxil	w1, w2, #0, #5
    e510:	strb	w1, [x0, #4]
    e514:	mov	w0, #0x1                   	// #1
    e518:	str	w0, [sp, #104]
    e51c:	add	x24, x24, #0x4
    e520:	mov	w9, #0x0                   	// #0
    e524:	cmp	x24, x25
    e528:	b.cc	e0f8 <grub_unicode_aglomerate_comb+0x4a0>  // b.lo, b.ul, b.last
    e52c:	b	e248 <grub_unicode_aglomerate_comb+0x5f0>
    e530:	ldrb	w1, [x1, w12, uxtw]
    e534:	and	w1, w1, #0x7f
    e538:	cmp	w1, #0x5
    e53c:	b.eq	e608 <grub_unicode_aglomerate_comb+0x9b0>  // b.none
    e540:	b.hi	e594 <grub_unicode_aglomerate_comb+0x93c>  // b.pmore
    e544:	cmp	w1, #0x2
    e548:	b.eq	f634 <grub_unicode_aglomerate_comb+0x19dc>  // b.none
    e54c:	b.ls	e5cc <grub_unicode_aglomerate_comb+0x974>  // b.plast
    e550:	ldr	w4, [sp, #104]
    e554:	cmp	w1, #0x5
    e558:	csinc	w22, w22, wzr, eq  // eq = none
    e55c:	cmp	w4, #0x2
    e560:	b.ne	e1e4 <grub_unicode_aglomerate_comb+0x58c>  // b.any
    e564:	ldrb	w5, [x2, #4]
    e568:	mov	w9, #0xa                   	// #10
    e56c:	orr	w5, w5, w9
    e570:	strb	w5, [x2, #4]
    e574:	ldrb	w5, [x2, #5]
    e578:	bfxil	w5, w21, #0, #6
    e57c:	strb	w5, [x2, #5]
    e580:	cbnz	w28, e218 <grub_unicode_aglomerate_comb+0x5c0>
    e584:	ldr	w5, [x2, #4]
    e588:	bfi	w5, w1, #14, #5
    e58c:	str	w5, [x2, #4]
    e590:	b	e230 <grub_unicode_aglomerate_comb+0x5d8>
    e594:	cmp	w1, #0x7
    e598:	b.eq	f60c <grub_unicode_aglomerate_comb+0x19b4>  // b.none
    e59c:	cmp	w1, #0xe
    e5a0:	b.eq	e23c <grub_unicode_aglomerate_comb+0x5e4>  // b.none
    e5a4:	cmp	w1, #0x6
    e5a8:	b.ne	e1d8 <grub_unicode_aglomerate_comb+0x580>  // b.any
    e5ac:	orr	w1, w21, #0x1
    e5b0:	add	w1, w1, #0x1
    e5b4:	cmp	w1, #0x3d
    e5b8:	b.ls	f6b0 <grub_unicode_aglomerate_comb+0x1a58>  // b.plast
    e5bc:	add	w27, w27, #0x1
    e5c0:	add	x24, x24, x0, lsl #2
    e5c4:	mov	w22, #0x1                   	// #1
    e5c8:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    e5cc:	cmp	w1, #0x1
    e5d0:	b.ne	e1d8 <grub_unicode_aglomerate_comb+0x580>  // b.any
    e5d4:	and	w2, w21, #0xfffffffe
    e5d8:	add	w2, w2, #0x2
    e5dc:	cmp	w2, #0x3d
    e5e0:	b.ls	f6dc <grub_unicode_aglomerate_comb+0x1a84>  // b.plast
    e5e4:	add	w27, w27, #0x1
    e5e8:	add	x24, x24, x0, lsl #2
    e5ec:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    e5f0:	ldrb	w1, [x13, #4]
    e5f4:	ldrb	w5, [x13, #3]
    e5f8:	ubfiz	x1, x1, #2, #3
    e5fc:	orr	w1, w1, w5, lsr #6
    e600:	cmp	w1, #0x5
    e604:	b.ne	e540 <grub_unicode_aglomerate_comb+0x8e8>  // b.any
    e608:	orr	w2, w21, #0x1
    e60c:	add	w2, w2, #0x1
    e610:	cmp	w2, #0x3d
    e614:	b.hi	e5bc <grub_unicode_aglomerate_comb+0x964>  // b.pmore
    e618:	mov	w1, w20
    e61c:	add	x4, sp, #0x120
    e620:	mov	w22, #0x1                   	// #1
    e624:	add	x24, x24, x0, lsl #2
    e628:	add	w20, w20, w22
    e62c:	str	w21, [x4, x1, lsl #2]
    e630:	mov	w21, w2
    e634:	add	x2, sp, #0x220
    e638:	str	w28, [x2, x1, lsl #2]
    e63c:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    e640:	cbz	w0, e64c <grub_unicode_aglomerate_comb+0x9f4>
    e644:	cmp	w0, #0x3
    e648:	b.ne	e7b4 <grub_unicode_aglomerate_comb+0xb5c>  // b.any
    e64c:	mov	w14, w0
    e650:	add	w2, w2, #0x1
    e654:	mov	w16, w0
    e658:	b	e350 <grub_unicode_aglomerate_comb+0x6f8>
    e65c:	cmp	w0, #0xa
    e660:	b.ne	e7b4 <grub_unicode_aglomerate_comb+0xb5c>  // b.any
    e664:	cmp	w16, #0x8
    e668:	b.eq	e394 <grub_unicode_aglomerate_comb+0x73c>  // b.none
    e66c:	mov	w0, w2
    e670:	ubfiz	x6, x0, #5, #32
    e674:	add	x6, x20, x6
    e678:	ldr	w6, [x6, #4]
    e67c:	and	w6, w6, #0x7c000
    e680:	cmp	w6, #0x28, lsl #12
    e684:	b.ne	e694 <grub_unicode_aglomerate_comb+0xa3c>  // b.any
    e688:	add	w0, w0, #0x1
    e68c:	cmp	w8, w0
    e690:	b.hi	e670 <grub_unicode_aglomerate_comb+0xa18>  // b.pmore
    e694:	cmp	w8, w0
    e698:	b.eq	e6b4 <grub_unicode_aglomerate_comb+0xa5c>  // b.none
    e69c:	ubfiz	x0, x0, #5, #32
    e6a0:	add	x0, x20, x0
    e6a4:	ldr	w0, [x0, #4]
    e6a8:	and	w0, w0, #0x7c000
    e6ac:	cmp	w0, #0x20, lsl #12
    e6b0:	b.eq	e708 <grub_unicode_aglomerate_comb+0xab0>  // b.none
    e6b4:	mov	x6, x5
    e6b8:	cmp	w8, w2
    e6bc:	b.hi	e6dc <grub_unicode_aglomerate_comb+0xa84>  // b.pmore
    e6c0:	b	e6f4 <grub_unicode_aglomerate_comb+0xa9c>
    e6c4:	bfi	w7, w15, #14, #5
    e6c8:	str	w7, [x6, #4]
    e6cc:	add	w2, w2, #0x1
    e6d0:	add	x6, x5, #0x20
    e6d4:	cmp	w8, w2
    e6d8:	b.eq	e8e0 <grub_unicode_aglomerate_comb+0xc88>  // b.none
    e6dc:	ldr	w0, [x6, #4]
    e6e0:	mov	x5, x6
    e6e4:	mov	w7, w0
    e6e8:	and	w0, w0, #0x7c000
    e6ec:	cmp	w0, #0x28, lsl #12
    e6f0:	b.eq	e6c4 <grub_unicode_aglomerate_comb+0xa6c>  // b.none
    e6f4:	sub	w5, w2, #0x1
    e6f8:	add	x5, x20, x5, lsl #5
    e6fc:	ldr	w16, [x5, #4]
    e700:	ubfx	x16, x16, #14, #5
    e704:	b	e350 <grub_unicode_aglomerate_comb+0x6f8>
    e708:	add	x5, x20, x7, lsl #5
    e70c:	ldr	w0, [x5, #4]
    e710:	mov	w6, w0
    e714:	and	w0, w0, #0x7c000
    e718:	cmp	w0, #0x28, lsl #12
    e71c:	b.ne	e6f4 <grub_unicode_aglomerate_comb+0xa9c>  // b.any
    e720:	bfi	w6, w17, #14, #5
    e724:	str	w6, [x5, #4]
    e728:	add	w7, w2, #0x1
    e72c:	mov	x2, x7
    e730:	cmp	w8, w7
    e734:	b.hi	e708 <grub_unicode_aglomerate_comb+0xab0>  // b.pmore
    e738:	mov	w16, #0x8                   	// #8
    e73c:	b	e350 <grub_unicode_aglomerate_comb+0x6f8>
    e740:	bfi	w6, w12, #14, #5
    e744:	add	w2, w2, #0x1
    e748:	mov	w16, #0x3                   	// #3
    e74c:	mov	w14, #0x4                   	// #4
    e750:	str	w6, [x5, #4]
    e754:	b	e360 <grub_unicode_aglomerate_comb+0x708>
    e758:	add	w2, w2, #0x1
    e75c:	cmp	w16, #0x8
    e760:	b.eq	e7cc <grub_unicode_aglomerate_comb+0xb74>  // b.none
    e764:	cmp	w16, #0xb
    e768:	b.ne	e7a0 <grub_unicode_aglomerate_comb+0xb48>  // b.any
    e76c:	cmp	w8, w2
    e770:	b.ls	e7a0 <grub_unicode_aglomerate_comb+0xb48>  // b.plast
    e774:	ubfiz	x0, x2, #5, #32
    e778:	mov	w7, w2
    e77c:	add	x0, x20, x0
    e780:	ldr	w0, [x0, #4]
    e784:	and	w0, w0, #0x7c000
    e788:	cmp	w0, #0x2c, lsl #12
    e78c:	b.eq	f694 <grub_unicode_aglomerate_comb+0x1a3c>  // b.none
    e790:	cmp	w0, #0x20, lsl #12
    e794:	ccmp	w14, #0x4, #0x0, eq  // eq = none
    e798:	b.eq	f694 <grub_unicode_aglomerate_comb+0x1a3c>  // b.none
    e79c:	nop
    e7a0:	ldr	w0, [x5, #4]
    e7a4:	mov	w16, #0x12                  	// #18
    e7a8:	bfi	w0, w15, #14, #5
    e7ac:	str	w0, [x5, #4]
    e7b0:	b	e350 <grub_unicode_aglomerate_comb+0x6f8>
    e7b4:	mov	w16, w0
    e7b8:	add	w2, w2, #0x1
    e7bc:	b	e350 <grub_unicode_aglomerate_comb+0x6f8>
    e7c0:	add	w2, w2, #0x1
    e7c4:	cmp	w16, #0x8
    e7c8:	b.ne	e7a0 <grub_unicode_aglomerate_comb+0xb48>  // b.any
    e7cc:	cmp	w8, w2
    e7d0:	b.ls	e7a0 <grub_unicode_aglomerate_comb+0xb48>  // b.plast
    e7d4:	ubfiz	x0, x2, #5, #32
    e7d8:	mov	w7, w2
    e7dc:	add	x0, x20, x0
    e7e0:	ldr	w0, [x0, #4]
    e7e4:	and	w0, w0, #0x7c000
    e7e8:	cmp	w0, #0x20, lsl #12
    e7ec:	b.ne	e7a0 <grub_unicode_aglomerate_comb+0xb48>  // b.any
    e7f0:	bfi	w6, w16, #14, #5
    e7f4:	str	w6, [x5, #4]
    e7f8:	ldr	w0, [x5, #4]
    e7fc:	mov	w16, #0x8                   	// #8
    e800:	and	w0, w0, #0x7c000
    e804:	cmp	w0, #0x20, lsl #12
    e808:	b.ne	e36c <grub_unicode_aglomerate_comb+0x714>  // b.any
    e80c:	b	e3b0 <grub_unicode_aglomerate_comb+0x758>
    e810:	cmp	w21, w8
    e814:	b.ls	e928 <grub_unicode_aglomerate_comb+0xcd0>  // b.plast
    e818:	mov	w1, w8
    e81c:	b	e288 <grub_unicode_aglomerate_comb+0x630>
    e820:	cmp	w13, #0x0
    e824:	csel	w5, wzr, w12, eq  // eq = none
    e828:	cmp	w5, w9
    e82c:	b.eq	e864 <grub_unicode_aglomerate_comb+0xc0c>  // b.none
    e830:	cmp	w1, w2
    e834:	b.cs	e8c4 <grub_unicode_aglomerate_comb+0xc6c>  // b.hs, b.nlast
    e838:	mvn	w0, w1
    e83c:	add	w0, w0, w2
    e840:	add	x0, x0, x11
    e844:	add	x0, x22, x0, lsl #5
    e848:	ldr	w1, [x6, #4]
    e84c:	add	x6, x6, #0x20
    e850:	bfi	w1, w10, #14, #5
    e854:	stur	w1, [x6, #-28]
    e858:	cmp	x0, x6
    e85c:	b.ne	e848 <grub_unicode_aglomerate_comb+0xbf0>  // b.any
    e860:	b	e43c <grub_unicode_aglomerate_comb+0x7e4>
    e864:	cmp	w1, w2
    e868:	b.cs	e8c4 <grub_unicode_aglomerate_comb+0xc6c>  // b.hs, b.nlast
    e86c:	mvn	w0, w1
    e870:	and	w5, w9, #0x1f
    e874:	add	w0, w0, w2
    e878:	add	x0, x0, x11
    e87c:	add	x0, x22, x0, lsl #5
    e880:	ldr	w1, [x6, #4]
    e884:	add	x6, x6, #0x20
    e888:	bfi	w1, w5, #14, #5
    e88c:	stur	w1, [x6, #-28]
    e890:	cmp	x0, x6
    e894:	b.ne	e880 <grub_unicode_aglomerate_comb+0xc28>  // b.any
    e898:	b	e43c <grub_unicode_aglomerate_comb+0x7e4>
    e89c:	cmp	w2, w1
    e8a0:	b.eq	e428 <grub_unicode_aglomerate_comb+0x7d0>  // b.none
    e8a4:	cmp	w8, w2
    e8a8:	b.eq	e820 <grub_unicode_aglomerate_comb+0xbc8>  // b.none
    e8ac:	ubfiz	x0, x2, #5, #32
    e8b0:	add	x0, x20, x0
    e8b4:	ldr	w5, [x0, #4]
    e8b8:	ands	w5, w5, #0x7c000
    e8bc:	csel	w5, w5, w12, eq  // eq = none
    e8c0:	b	e828 <grub_unicode_aglomerate_comb+0xbd0>
    e8c4:	mov	w2, w1
    e8c8:	b	e444 <grub_unicode_aglomerate_comb+0x7ec>
    e8cc:	bfi	w6, w23, #14, #5
    e8d0:	mov	w16, #0xb                   	// #11
    e8d4:	mov	w14, #0x4                   	// #4
    e8d8:	str	w6, [x5, #4]
    e8dc:	b	e360 <grub_unicode_aglomerate_comb+0x708>
    e8e0:	mov	w2, w8
    e8e4:	mov	w16, #0x12                  	// #18
    e8e8:	b	e350 <grub_unicode_aglomerate_comb+0x6f8>
    e8ec:	str	w12, [sp, #120]
    e8f0:	str	x0, [sp, #144]
    e8f4:	str	w9, [sp, #160]
    e8f8:	bl	d338 <grub_context_fini+0x18>
    e8fc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    e900:	add	x0, x0, #0x0
    e904:	ldr	w12, [sp, #120]
    e908:	mov	w6, #0x200c                	// #8204
    e90c:	ldr	w9, [sp, #160]
    e910:	mov	w3, #0x200d                	// #8205
    e914:	ldr	x0, [x0]
    e918:	ldr	x2, [sp, #112]
    e91c:	ldr	x1, [x0]
    e920:	ldr	x0, [sp, #144]
    e924:	b	e170 <grub_unicode_aglomerate_comb+0x518>
    e928:	sub	w4, w21, #0x1
    e92c:	mov	w0, #0x20                  	// #32
    e930:	mov	w6, #0xc000                	// #49152
    e934:	mov	x1, x20
    e938:	movk	w6, #0x5, lsl #16
    e93c:	mov	w7, #0x20000               	// #131072
    e940:	umaddl	x4, w4, w0, x22
    e944:	b	e96c <grub_unicode_aglomerate_comb+0xd14>
    e948:	add	w3, w3, #0x1
    e94c:	cmp	w0, #0x2c, lsl #12
    e950:	ccmp	w5, #0x0, #0x4, ne  // ne = any
    e954:	bfxil	w2, w3, #0, #6
    e958:	b.ne	e960 <grub_unicode_aglomerate_comb+0xd08>  // b.any
    e95c:	strb	w2, [x1, #5]
    e960:	add	x1, x1, #0x20
    e964:	cmp	x4, x1
    e968:	b.eq	e9b0 <grub_unicode_aglomerate_comb+0xd58>  // b.none
    e96c:	ldrb	w2, [x1, #5]
    e970:	ldr	w0, [x1, #4]
    e974:	and	w3, w2, #0x3f
    e978:	and	w5, w0, w6
    e97c:	and	w0, w0, #0x7c000
    e980:	tbnz	w2, #0, e948 <grub_unicode_aglomerate_comb+0xcf0>
    e984:	cmp	w0, #0xc, lsl #12
    e988:	b.eq	f5fc <grub_unicode_aglomerate_comb+0x19a4>  // b.none
    e98c:	cmp	w0, #0x2c, lsl #12
    e990:	ccmp	w0, w7, #0x4, ne  // ne = any
    e994:	b.ne	e960 <grub_unicode_aglomerate_comb+0xd08>  // b.any
    e998:	add	w3, w3, #0x2
    e99c:	add	x1, x1, #0x20
    e9a0:	bfxil	w2, w3, #0, #6
    e9a4:	sturb	w2, [x1, #-27]
    e9a8:	cmp	x4, x1
    e9ac:	b.ne	e96c <grub_unicode_aglomerate_comb+0xd14>  // b.any
    e9b0:	ldr	x0, [sp, #136]
    e9b4:	cmp	x0, #0x0
    e9b8:	cset	w1, gt
    e9bc:	str	w1, [sp, #144]
    e9c0:	cmp	w1, #0x0
    e9c4:	ldr	x1, [sp, #224]
    e9c8:	ccmp	x0, x1, #0x2, ne  // ne = any
    e9cc:	b.ls	f5bc <grub_unicode_aglomerate_comb+0x1964>  // b.plast
    e9d0:	ldr	x0, [sp, #232]
    e9d4:	str	x1, [sp, #104]
    e9d8:	mov	x24, x0
    e9dc:	ldr	x0, [sp, #816]
    e9e0:	mov	w27, #0x0                   	// #0
    e9e4:	mov	w25, #0x0                   	// #0
    e9e8:	mov	w26, #0x1ffff               	// #131071
    e9ec:	str	wzr, [sp, #112]
    e9f0:	add	x0, x19, x0, lsl #2
    e9f4:	stp	x0, xzr, [sp, #240]
    e9f8:	mov	x0, #0xffffffffffffffff    	// #-1
    e9fc:	str	x0, [sp, #152]
    ea00:	mov	x0, #0x0                   	// #0
    ea04:	str	x22, [sp, #176]
    ea08:	cmp	x21, x0
    ea0c:	cset	w1, ne  // ne = any
    ea10:	cset	w22, eq  // eq = none
    ea14:	cbz	x19, efd4 <grub_unicode_aglomerate_comb+0x137c>
    ea18:	ldr	w1, [sp, #104]
    ea1c:	ldrh	w4, [sp, #112]
    ea20:	and	w3, w1, #0x7fff
    ea24:	b.eq	f3dc <grub_unicode_aglomerate_comb+0x1784>  // b.none
    ea28:	add	x23, x20, x0, lsl #5
    ea2c:	ldr	x0, [x23, #16]
    ea30:	lsl	x0, x0, #2
    ea34:	add	x5, x19, x0
    ea38:	ldrh	w1, [x19, x0]
    ea3c:	bfi	w1, w3, #1, #15
    ea40:	strh	w1, [x19, x0]
    ea44:	strh	w4, [x5, #2]
    ea48:	orr	w1, w1, #0x1
    ea4c:	strb	w1, [x19, x0]
    ea50:	ldr	x0, [sp, #128]
    ea54:	cbz	x0, f460 <grub_unicode_aglomerate_comb+0x1808>
    ea58:	ldr	x2, [sp, #128]
    ea5c:	mov	x0, x23
    ea60:	ldr	x1, [sp, #216]
    ea64:	blr	x2
    ea68:	ldr	w1, [sp, #144]
    ea6c:	ldr	x2, [sp, #136]
    ea70:	cmp	w1, #0x0
    ea74:	ldr	x1, [sp, #104]
    ea78:	add	x1, x1, x0
    ea7c:	str	x1, [sp, #104]
    ea80:	ccmp	x2, x1, #0x0, ne  // ne = any
    ea84:	cset	w1, lt  // lt = tstop
    ea88:	orr	w2, w22, w1
    ea8c:	ldr	w1, [x23]
    ea90:	and	w1, w1, #0x7fffff
    ea94:	cmp	w1, #0x20
    ea98:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    ea9c:	ldr	w1, [sp, #808]
    eaa0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
    eaa4:	b.eq	eaf4 <grub_unicode_aglomerate_comb+0xe9c>  // b.none
    eaa8:	cbnz	w2, eb08 <grub_unicode_aglomerate_comb+0xeb0>
    eaac:	add	w0, w25, #0x1
    eab0:	mov	x25, x0
    eab4:	cmp	x21, w0, uxtw
    eab8:	b.cs	ea08 <grub_unicode_aglomerate_comb+0xdb0>  // b.hs, b.nlast
    eabc:	ldr	x1, [sp, #232]
    eac0:	sub	x19, x24, x1
    eac4:	asr	x19, x19, #5
    eac8:	mov	x0, x20
    eacc:	bl	0 <grub_free>
    ead0:	ldp	x21, x22, [sp, #32]
    ead4:	ldp	x23, x24, [sp, #48]
    ead8:	ldp	x27, x28, [sp, #80]
    eadc:	mov	x0, x19
    eae0:	ldp	x29, x30, [sp]
    eae4:	ldp	x19, x20, [sp, #16]
    eae8:	ldp	x25, x26, [sp, #64]
    eaec:	add	sp, sp, #0x320
    eaf0:	ret
    eaf4:	mov	w1, w25
    eaf8:	str	x1, [sp, #152]
    eafc:	ldr	x1, [sp, #104]
    eb00:	str	x1, [sp, #248]
    eb04:	cbz	w2, eaac <grub_unicode_aglomerate_comb+0xe54>
    eb08:	ldr	x1, [sp, #152]
    eb0c:	cmp	x1, w27, sxtw
    eb10:	ldr	w1, [sp, #112]
    eb14:	add	w2, w1, #0x1
    eb18:	b.le	f484 <grub_unicode_aglomerate_comb+0x182c>
    eb1c:	ldr	x0, [sp, #104]
    eb20:	str	w2, [sp, #112]
    eb24:	ldr	x1, [sp, #248]
    eb28:	ldr	w12, [sp, #152]
    eb2c:	sub	x0, x0, x1
    eb30:	str	x0, [sp, #104]
    eb34:	mov	w0, w12
    eb38:	str	x0, [sp, #168]
    eb3c:	sxtw	x0, w12
    eb40:	str	x0, [sp, #160]
    eb44:	cmp	w12, w27
    eb48:	sub	w23, w12, #0x1
    eb4c:	b.ls	f450 <grub_unicode_aglomerate_comb+0x17f8>  // b.plast
    eb50:	mvn	w11, w27
    eb54:	mov	w0, w27
    eb58:	add	w2, w11, w12
    eb5c:	str	x0, [sp, #120]
    eb60:	add	x2, x2, x0
    eb64:	ubfiz	x15, x27, #5, #32
    eb68:	ldr	x0, [sp, #176]
    eb6c:	add	x15, x20, x15
    eb70:	mov	x1, x15
    eb74:	mov	w14, #0xffffffff            	// #-1
    eb78:	mov	w9, #0x0                   	// #0
    eb7c:	add	x2, x0, x2, lsl #5
    eb80:	ldrb	w0, [x1, #5]
    eb84:	add	x1, x1, #0x20
    eb88:	and	w0, w0, #0x3f
    eb8c:	cmp	w9, w0
    eb90:	csel	w9, w9, w0, cs  // cs = hs, nlast
    eb94:	cmp	w14, w0
    eb98:	b.ls	eba4 <grub_unicode_aglomerate_comb+0xf4c>  // b.plast
    eb9c:	tst	x0, #0x1
    eba0:	csel	w14, w14, w0, eq  // eq = none
    eba4:	cmp	x1, x2
    eba8:	b.ne	eb80 <grub_unicode_aglomerate_comb+0xf28>  // b.any
    ebac:	sub	w0, w14, #0x1
    ebb0:	cmp	w0, w9
    ebb4:	b.cs	f750 <grub_unicode_aglomerate_comb+0x1af8>  // b.hs, b.nlast
    ebb8:	ldr	x0, [sp, #120]
    ebbc:	add	w13, w27, #0x1
    ebc0:	mov	w16, w11
    ebc4:	sub	x13, x13, x0
    ebc8:	lsl	x13, x13, #5
    ebcc:	nop
    ebd0:	mov	x7, x15
    ebd4:	mov	w0, w27
    ebd8:	mov	w8, w27
    ebdc:	nop
    ebe0:	ldrb	w1, [x7, #5]
    ebe4:	cmp	w27, w0
    ebe8:	and	w1, w1, #0x3f
    ebec:	b.eq	ec4c <grub_unicode_aglomerate_comb+0xff4>  // b.none
    ebf0:	cmp	w9, w1
    ebf4:	add	w6, w0, #0x1
    ebf8:	b.hi	ec58 <grub_unicode_aglomerate_comb+0x1000>  // b.pmore
    ebfc:	sub	w1, w0, #0x1
    ec00:	add	x1, x20, x1, lsl #5
    ec04:	ldrb	w1, [x1, #5]
    ec08:	and	w1, w1, #0x3f
    ec0c:	cmp	w1, w9
    ec10:	csel	w8, w8, w0, cs  // cs = hs, nlast
    ec14:	add	w6, w0, #0x1
    ec18:	cmp	w12, w6
    ec1c:	b.eq	f0b4 <grub_unicode_aglomerate_comb+0x145c>  // b.none
    ec20:	add	x1, x13, x7
    ec24:	ldrb	w1, [x1, #5]
    ec28:	and	w1, w1, #0x3f
    ec2c:	cmp	w1, w9
    ec30:	b.cc	f0b4 <grub_unicode_aglomerate_comb+0x145c>  // b.lo, b.ul, b.last
    ec34:	ldrb	w1, [x7, #37]
    ec38:	mov	w0, w6
    ec3c:	add	x7, x7, #0x20
    ec40:	cmp	w27, w0
    ec44:	and	w1, w1, #0x3f
    ec48:	b.ne	ebf0 <grub_unicode_aglomerate_comb+0xf98>  // b.any
    ec4c:	cmp	w9, w1
    ec50:	add	w6, w27, #0x1
    ec54:	b.ls	ec14 <grub_unicode_aglomerate_comb+0xfbc>  // b.plast
    ec58:	add	x7, x7, #0x20
    ec5c:	cmp	w12, w6
    ec60:	mov	w0, w6
    ec64:	b.ne	ebe0 <grub_unicode_aglomerate_comb+0xf88>  // b.any
    ec68:	cmp	w9, w14
    ec6c:	sub	w9, w9, #0x1
    ec70:	b.ne	ebd0 <grub_unicode_aglomerate_comb+0xf78>  // b.any
    ec74:	mov	w28, w6
    ec78:	mov	w11, w16
    ec7c:	cmp	w27, w12
    ec80:	b.cs	f458 <grub_unicode_aglomerate_comb+0x1800>  // b.hs, b.nlast
    ec84:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ec88:	add	w5, w11, w28
    ec8c:	ldr	x1, [sp, #120]
    ec90:	stp	x21, x20, [sp, #192]
    ec94:	mov	w10, #0xa                   	// #10
    ec98:	ldr	x22, [x0]
    ec9c:	add	x5, x5, x1
    eca0:	ldr	x0, [sp, #176]
    eca4:	add	x3, x20, x1, lsl #5
    eca8:	ldr	x14, [x22]
    ecac:	mov	x20, x3
    ecb0:	add	x5, x0, x5, lsl #5
    ecb4:	mov	x21, x22
    ecb8:	str	x19, [sp, #800]
    ecbc:	mov	x19, x5
    ecc0:	mov	w9, #0x14                  	// #20
    ecc4:	adrp	x8, 0 <grub_normal_free_menu-0x498>
    ecc8:	str	x3, [sp, #208]
    eccc:	nop
    ecd0:	ldr	w4, [x20]
    ecd4:	ubfx	x22, x4, #0, #23
    ecd8:	cbz	x14, f39c <grub_unicode_aglomerate_comb+0x1744>
    ecdc:	cmp	x14, #0x0
    ece0:	ccmp	w22, w26, #0x2, ne  // ne = any
    ece4:	b.ls	f390 <grub_unicode_aglomerate_comb+0x1738>  // b.plast
    ece8:	ldr	x0, [x8]
    ecec:	mov	x2, x0
    ecf0:	ldrh	w1, [x0, #2]
    ecf4:	ubfx	x1, x1, #5, #9
    ecf8:	cbz	w1, ed3c <grub_unicode_aglomerate_comb+0x10e4>
    ecfc:	nop
    ed00:	ldrb	w4, [x2]
    ed04:	ldrb	w3, [x2, #1]
    ed08:	ldrb	w0, [x2, #2]
    ed0c:	orr	x3, x4, x3, lsl #8
    ed10:	ubfiz	x0, x0, #16, #5
    ed14:	orr	x0, x0, x3
    ed18:	add	w1, w1, w0
    ed1c:	cmp	w22, w0
    ed20:	b.cc	ed2c <grub_unicode_aglomerate_comb+0x10d4>  // b.lo, b.ul, b.last
    ed24:	cmp	w22, w1
    ed28:	b.cc	f358 <grub_unicode_aglomerate_comb+0x1700>  // b.lo, b.ul, b.last
    ed2c:	ldrh	w1, [x2, #8]
    ed30:	add	x2, x2, #0x6
    ed34:	ubfx	x1, x1, #5, #9
    ed38:	cbnz	w1, ed00 <grub_unicode_aglomerate_comb+0x10a8>
    ed3c:	ldrb	w0, [x20, #4]
    ed40:	tst	w0, #0x1e
    ed44:	and	w1, w0, #0x1f
    ed48:	b.eq	ed7c <grub_unicode_aglomerate_comb+0x1124>  // b.none
    ed4c:	ldrb	w0, [x20, #5]
    ed50:	tst	x0, #0x3f
    ed54:	b.eq	ed7c <grub_unicode_aglomerate_comb+0x1124>  // b.none
    ed58:	and	w3, w1, w9
    ed5c:	and	w2, w1, w10
    ed60:	and	w0, w1, #0x1
    ed64:	ldrb	w4, [x20, #4]
    ed68:	asr	w1, w3, #1
    ed6c:	orr	w1, w1, w2, lsl #1
    ed70:	orr	w0, w1, w0
    ed74:	bfxil	w4, w0, #0, #5
    ed78:	strb	w4, [x20, #4]
    ed7c:	add	x20, x20, #0x20
    ed80:	cmp	x19, x20
    ed84:	b.ne	ecd0 <grub_unicode_aglomerate_comb+0x1078>  // b.any
    ed88:	ldr	x3, [sp, #208]
    ed8c:	mov	x22, x21
    ed90:	mov	x20, x19
    ed94:	mov	w7, #0x0                   	// #0
    ed98:	mov	x21, x3
    ed9c:	mov	w19, w7
    eda0:	str	w23, [sp, #208]
    eda4:	mov	x23, x22
    eda8:	adrp	x8, 0 <grub_normal_free_menu-0x498>
    edac:	nop
    edb0:	ldr	w22, [x21]
    edb4:	ldr	x0, [x23, #16]
    edb8:	ubfx	x22, x22, #0, #23
    edbc:	cmp	w22, w26
    edc0:	cset	w12, ls  // ls = plast
    edc4:	cbz	x0, efec <grub_unicode_aglomerate_comb+0x1394>
    edc8:	cbnz	w12, f0ac <grub_unicode_aglomerate_comb+0x1454>
    edcc:	ldr	x0, [x8]
    edd0:	mov	x2, x0
    edd4:	ldrh	w1, [x0, #2]
    edd8:	ubfx	x1, x1, #5, #9
    eddc:	cbz	w1, ee1c <grub_unicode_aglomerate_comb+0x11c4>
    ede0:	ldrb	w4, [x2]
    ede4:	ldrb	w3, [x2, #1]
    ede8:	ldrb	w0, [x2, #2]
    edec:	orr	x3, x4, x3, lsl #8
    edf0:	ubfiz	x0, x0, #16, #5
    edf4:	orr	x0, x0, x3
    edf8:	add	w1, w1, w0
    edfc:	cmp	w22, w0
    ee00:	b.cc	ee0c <grub_unicode_aglomerate_comb+0x11b4>  // b.lo, b.ul, b.last
    ee04:	cmp	w22, w1
    ee08:	b.cc	f310 <grub_unicode_aglomerate_comb+0x16b8>  // b.lo, b.ul, b.last
    ee0c:	ldrh	w1, [x2, #8]
    ee10:	add	x2, x2, #0x6
    ee14:	ubfx	x1, x1, #5, #9
    ee18:	cbnz	w1, ede0 <grub_unicode_aglomerate_comb+0x1188>
    ee1c:	mov	w19, #0x0                   	// #0
    ee20:	add	x21, x21, #0x20
    ee24:	cmp	x20, x21
    ee28:	b.ne	edb0 <grub_unicode_aglomerate_comb+0x1158>  // b.any
    ee2c:	mov	x22, x23
    ee30:	ldr	w23, [sp, #208]
    ee34:	ldp	x21, x20, [sp, #192]
    ee38:	ldr	x19, [sp, #800]
    ee3c:	tbnz	w23, #31, f270 <grub_unicode_aglomerate_comb+0x1618>
    ee40:	sbfiz	x5, x23, #5, #32
    ee44:	stp	x21, x20, [sp, #192]
    ee48:	add	x5, x20, x5
    ee4c:	mov	w20, w27
    ee50:	mov	x27, x5
    ee54:	mov	x21, x22
    ee58:	str	x19, [sp, #800]
    ee5c:	mov	w6, #0x0                   	// #0
    ee60:	mov	w19, w6
    ee64:	ldr	w22, [x27]
    ee68:	ldr	x0, [x21, #16]
    ee6c:	ubfx	x22, x22, #0, #23
    ee70:	cmp	w22, w26
    ee74:	cset	w11, ls  // ls = plast
    ee78:	cbz	x0, ef10 <grub_unicode_aglomerate_comb+0x12b8>
    ee7c:	nop
    ee80:	cbnz	w11, efcc <grub_unicode_aglomerate_comb+0x1374>
    ee84:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ee88:	ldr	x0, [x0]
    ee8c:	mov	x2, x0
    ee90:	ldrh	w1, [x0, #2]
    ee94:	ubfx	x1, x1, #5, #9
    ee98:	cbz	w1, eedc <grub_unicode_aglomerate_comb+0x1284>
    ee9c:	nop
    eea0:	ldrb	w4, [x2]
    eea4:	ldrb	w3, [x2, #1]
    eea8:	ldrb	w0, [x2, #2]
    eeac:	orr	x3, x4, x3, lsl #8
    eeb0:	ubfiz	x0, x0, #16, #5
    eeb4:	orr	x0, x0, x3
    eeb8:	add	w1, w1, w0
    eebc:	cmp	w22, w0
    eec0:	b.cc	eecc <grub_unicode_aglomerate_comb+0x1274>  // b.lo, b.ul, b.last
    eec4:	cmp	w22, w1
    eec8:	b.cc	f204 <grub_unicode_aglomerate_comb+0x15ac>  // b.lo, b.ul, b.last
    eecc:	ldrh	w1, [x2, #8]
    eed0:	add	x2, x2, #0x6
    eed4:	ubfx	x1, x1, #5, #9
    eed8:	cbnz	w1, eea0 <grub_unicode_aglomerate_comb+0x1248>
    eedc:	sub	w0, w23, #0x1
    eee0:	mov	w19, #0x0                   	// #0
    eee4:	cbz	w23, f264 <grub_unicode_aglomerate_comb+0x160c>
    eee8:	sub	x27, x27, #0x20
    eeec:	cmp	w23, w20
    eef0:	b.ls	f264 <grub_unicode_aglomerate_comb+0x160c>  // b.plast
    eef4:	ldr	w22, [x27]
    eef8:	mov	w23, w0
    eefc:	ldr	x0, [x21, #16]
    ef00:	ubfx	x22, x22, #0, #23
    ef04:	cmp	w22, w26
    ef08:	cset	w11, ls  // ls = plast
    ef0c:	cbnz	x0, ee80 <grub_unicode_aglomerate_comb+0x1228>
    ef10:	mov	x0, #0x20000               	// #131072
    ef14:	bl	0 <grub_zalloc>
    ef18:	str	x0, [x21, #16]
    ef1c:	cbz	x0, f50c <grub_unicode_aglomerate_comb+0x18b4>
    ef20:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    ef24:	cmp	w22, w26
    ef28:	cset	w11, ls  // ls = plast
    ef2c:	ldr	x1, [x1]
    ef30:	mov	x5, x1
    ef34:	ldrh	w1, [x1, #2]
    ef38:	tst	x1, #0x3fe0
    ef3c:	b.eq	f684 <grub_unicode_aglomerate_comb+0x1a2c>  // b.none
    ef40:	ldrb	w4, [x5]
    ef44:	ldrb	w3, [x5, #1]
    ef48:	ldrb	w1, [x5, #2]
    ef4c:	ldrh	w2, [x5, #2]
    ef50:	orr	x3, x4, x3, lsl #8
    ef54:	ubfiz	x1, x1, #16, #5
    ef58:	orr	x1, x1, x3
    ef5c:	ubfx	x2, x2, #5, #9
    ef60:	add	w2, w2, w1
    ef64:	mov	w3, w1
    ef68:	cmp	w1, w2
    ef6c:	add	x6, x0, x1
    ef70:	ccmp	w1, w26, #0x2, cc  // cc = lo, ul, last
    ef74:	b.hi	efb8 <grub_unicode_aglomerate_comb+0x1360>  // b.pmore
    ef78:	ldrb	w1, [x5, #5]
    ef7c:	add	w3, w3, #0x1
    ef80:	ubfx	x1, x1, #4, #3
    ef84:	strb	w1, [x6], #1
    ef88:	ldrb	w7, [x5]
    ef8c:	ldrb	w4, [x5, #1]
    ef90:	ldrb	w2, [x5, #2]
    ef94:	ldrh	w1, [x5, #2]
    ef98:	orr	x4, x7, x4, lsl #8
    ef9c:	ubfiz	x2, x2, #16, #5
    efa0:	orr	x2, x2, x4
    efa4:	ubfx	x1, x1, #5, #9
    efa8:	add	w1, w1, w2
    efac:	cmp	w3, w1
    efb0:	ccmp	w3, w26, #0x2, cc  // cc = lo, ul, last
    efb4:	b.ls	ef78 <grub_unicode_aglomerate_comb+0x1320>  // b.plast
    efb8:	ldrh	w1, [x5, #8]
    efbc:	add	x5, x5, #0x6
    efc0:	tst	x1, #0x3fe0
    efc4:	b.ne	ef40 <grub_unicode_aglomerate_comb+0x12e8>  // b.any
    efc8:	cbz	w11, ee84 <grub_unicode_aglomerate_comb+0x122c>
    efcc:	ldrb	w0, [x0, w22, uxtw]
    efd0:	b	f20c <grub_unicode_aglomerate_comb+0x15b4>
    efd4:	ldr	x2, [sp, #128]
    efd8:	cmp	x2, #0x0
    efdc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    efe0:	b.eq	f4dc <grub_unicode_aglomerate_comb+0x1884>  // b.none
    efe4:	add	x23, x20, x0, lsl #5
    efe8:	b	ea58 <grub_unicode_aglomerate_comb+0xe00>
    efec:	mov	x0, #0x20000               	// #131072
    eff0:	bl	0 <grub_zalloc>
    eff4:	str	x0, [x23, #16]
    eff8:	adrp	x8, 0 <grub_normal_free_menu-0x498>
    effc:	cbz	x0, f51c <grub_unicode_aglomerate_comb+0x18c4>
    f000:	ldr	x1, [x8]
    f004:	cmp	w22, w26
    f008:	cset	w12, ls  // ls = plast
    f00c:	mov	x6, x1
    f010:	ldrh	w1, [x1, #2]
    f014:	tst	x1, #0x3fe0
    f018:	b.eq	f674 <grub_unicode_aglomerate_comb+0x1a1c>  // b.none
    f01c:	nop
    f020:	ldrb	w4, [x6]
    f024:	ldrb	w3, [x6, #1]
    f028:	ldrb	w1, [x6, #2]
    f02c:	ldrh	w2, [x6, #2]
    f030:	orr	x3, x4, x3, lsl #8
    f034:	ubfiz	x1, x1, #16, #5
    f038:	orr	x1, x1, x3
    f03c:	ubfx	x2, x2, #5, #9
    f040:	add	w2, w2, w1
    f044:	mov	w3, w1
    f048:	cmp	w1, w2
    f04c:	add	x5, x0, x1
    f050:	ccmp	w1, w26, #0x2, cc  // cc = lo, ul, last
    f054:	b.hi	f098 <grub_unicode_aglomerate_comb+0x1440>  // b.pmore
    f058:	ldrb	w1, [x6, #5]
    f05c:	add	w3, w3, #0x1
    f060:	ubfx	x1, x1, #4, #3
    f064:	strb	w1, [x5], #1
    f068:	ldrb	w7, [x6]
    f06c:	ldrb	w4, [x6, #1]
    f070:	ldrb	w2, [x6, #2]
    f074:	ldrh	w1, [x6, #2]
    f078:	orr	x4, x7, x4, lsl #8
    f07c:	ubfiz	x2, x2, #16, #5
    f080:	orr	x2, x2, x4
    f084:	ubfx	x1, x1, #5, #9
    f088:	add	w1, w1, w2
    f08c:	cmp	w3, w1
    f090:	ccmp	w3, w26, #0x2, cc  // cc = lo, ul, last
    f094:	b.ls	f058 <grub_unicode_aglomerate_comb+0x1400>  // b.plast
    f098:	ldrh	w1, [x6, #8]
    f09c:	add	x6, x6, #0x6
    f0a0:	tst	x1, #0x3fe0
    f0a4:	b.ne	f020 <grub_unicode_aglomerate_comb+0x13c8>  // b.any
    f0a8:	cbz	w12, edcc <grub_unicode_aglomerate_comb+0x1174>
    f0ac:	ldrb	w0, [x0, w22, uxtw]
    f0b0:	b	f318 <grub_unicode_aglomerate_comb+0x16c0>
    f0b4:	cbz	x19, f198 <grub_unicode_aglomerate_comb+0x1540>
    f0b8:	ubfiz	x1, x8, #5, #32
    f0bc:	sub	w4, w0, w8
    f0c0:	add	x1, x20, x1
    f0c4:	add	w22, w8, #0x1
    f0c8:	ldr	x2, [x7, #16]
    f0cc:	add	w0, w8, w0
    f0d0:	ldr	x3, [x1, #16]
    f0d4:	add	w22, w22, w4, lsr #1
    f0d8:	lsl	x2, x2, #2
    f0dc:	mov	w17, w8
    f0e0:	mov	x28, x7
    f0e4:	mov	w30, w6
    f0e8:	lsl	x3, x3, #2
    f0ec:	add	x1, sp, #0x100
    f0f0:	ldrh	w2, [x19, x2]
    f0f4:	ldrh	w18, [x19, x3]
    f0f8:	ubfx	x2, x2, #1, #15
    f0fc:	ubfx	x18, x18, #1, #15
    f100:	add	w18, w18, w2
    f104:	and	w18, w18, #0xffff
    f108:	sub	w2, w0, w17
    f10c:	ubfiz	x3, x17, #5, #32
    f110:	add	x3, x20, x3
    f114:	add	w17, w17, #0x1
    f118:	add	x2, x20, x2, lsl #5
    f11c:	cmp	w22, w17
    f120:	ldp	x10, x11, [x3]
    f124:	stp	x10, x11, [x1]
    f128:	ldp	x4, x5, [x2]
    f12c:	stp	x4, x5, [x3]
    f130:	ldp	x6, x7, [x2, #16]
    f134:	ldp	x4, x5, [x3, #16]
    f138:	stp	x6, x7, [x3, #16]
    f13c:	stp	x10, x11, [x2]
    f140:	stp	x4, x5, [x2, #16]
    f144:	ldr	x10, [x3, #16]
    f148:	stp	x4, x5, [x1, #16]
    f14c:	ldr	x3, [x2, #16]
    f150:	lsl	x4, x10, #2
    f154:	ldrh	w2, [x19, x4]
    f158:	lsl	x3, x3, #2
    f15c:	mov	w5, w2
    f160:	ubfx	x2, x2, #1, #15
    f164:	sub	w2, w18, w2
    f168:	bfi	w5, w2, #1, #15
    f16c:	strh	w5, [x19, x4]
    f170:	ldrh	w2, [x19, x3]
    f174:	mov	w4, w2
    f178:	ubfx	x2, x2, #1, #15
    f17c:	sub	w2, w18, w2
    f180:	bfi	w4, w2, #1, #15
    f184:	strh	w4, [x19, x3]
    f188:	b.ne	f108 <grub_unicode_aglomerate_comb+0x14b0>  // b.any
    f18c:	mov	x7, x28
    f190:	mov	w6, w30
    f194:	b	ec58 <grub_unicode_aglomerate_comb+0x1000>
    f198:	sub	w2, w0, w8
    f19c:	add	w18, w8, #0x1
    f1a0:	add	w0, w8, w0
    f1a4:	mov	w17, w8
    f1a8:	add	w18, w18, w2, lsr #1
    f1ac:	add	x1, sp, #0x100
    f1b0:	mov	w28, w23
    f1b4:	nop
    f1b8:	sub	w2, w0, w17
    f1bc:	ubfiz	x3, x17, #5, #32
    f1c0:	add	x3, x20, x3
    f1c4:	add	w17, w17, #0x1
    f1c8:	add	x2, x20, x2, lsl #5
    f1cc:	cmp	w18, w17
    f1d0:	ldp	x10, x11, [x3]
    f1d4:	stp	x10, x11, [x1]
    f1d8:	ldp	x4, x5, [x2]
    f1dc:	stp	x4, x5, [x3]
    f1e0:	ldp	x22, x23, [x2, #16]
    f1e4:	ldp	x4, x5, [x3, #16]
    f1e8:	stp	x22, x23, [x3, #16]
    f1ec:	stp	x10, x11, [x2]
    f1f0:	stp	x4, x5, [x1, #16]
    f1f4:	stp	x4, x5, [x2, #16]
    f1f8:	b.ne	f1b8 <grub_unicode_aglomerate_comb+0x1560>  // b.any
    f1fc:	mov	w23, w28
    f200:	b	ec58 <grub_unicode_aglomerate_comb+0x1000>
    f204:	ldrb	w0, [x2, #5]
    f208:	ubfx	x0, x0, #4, #3
    f20c:	ldrb	w1, [x27, #4]
    f210:	and	w2, w1, #0x1f
    f214:	tbnz	w1, #4, f234 <grub_unicode_aglomerate_comb+0x15dc>
    f218:	sub	w5, w0, #0x2
    f21c:	cmp	w5, #0x1
    f220:	b.hi	f234 <grub_unicode_aglomerate_comb+0x15dc>  // b.pmore
    f224:	cbz	w19, f3c8 <grub_unicode_aglomerate_comb+0x1770>
    f228:	orr	w2, w2, #0x4
    f22c:	bfxil	w1, w2, #0, #5
    f230:	strb	w1, [x27, #4]
    f234:	sub	w1, w0, #0x3
    f238:	and	w2, w0, #0xfffffffd
    f23c:	cmp	w1, #0x1
    f240:	cset	w1, ls  // ls = plast
    f244:	cmp	w0, #0x1
    f248:	csinc	w0, w1, wzr, ne  // ne = any
    f24c:	cmp	w2, #0x0
    f250:	csel	w19, w19, wzr, ne  // ne = any
    f254:	cmp	w0, #0x0
    f258:	csinc	w19, w19, wzr, eq  // eq = none
    f25c:	sub	w0, w23, #0x1
    f260:	cbnz	w23, eee8 <grub_unicode_aglomerate_comb+0x1290>
    f264:	mov	w27, w20
    f268:	ldp	x21, x20, [sp, #192]
    f26c:	ldr	x19, [sp, #800]
    f270:	sub	w27, w28, w27
    f274:	ldr	x0, [sp, #120]
    f278:	lsl	x27, x27, #5
    f27c:	mov	x2, x27
    f280:	add	x1, x20, x0, lsl #5
    f284:	mov	x0, x24
    f288:	bl	0 <grub_memmove>
    f28c:	add	x24, x24, x27
    f290:	ldr	x0, [sp, #168]
    f294:	cmp	x21, x0
    f298:	b.eq	f2cc <grub_unicode_aglomerate_comb+0x1674>  // b.none
    f29c:	ldr	w0, [sp, #188]
    f2a0:	add	x23, x24, #0x20
    f2a4:	cbnz	w0, f53c <grub_unicode_aglomerate_comb+0x18e4>
    f2a8:	mov	x0, x24
    f2ac:	mov	w1, #0x0                   	// #0
    f2b0:	mov	x2, #0x20                  	// #32
    f2b4:	bl	0 <grub_memset>
    f2b8:	ldr	w0, [x24]
    f2bc:	mov	w1, #0xa                   	// #10
    f2c0:	bfxil	w0, w1, #0, #23
    f2c4:	str	w0, [x24]
    f2c8:	mov	x24, x23
    f2cc:	ldp	x1, x0, [sp, #152]
    f2d0:	cmp	x0, x1
    f2d4:	cinc	w27, w28, eq  // eq = none
    f2d8:	cbz	x19, eaac <grub_unicode_aglomerate_comb+0xe54>
    f2dc:	cmp	x21, w27, uxtw
    f2e0:	mov	w0, w27
    f2e4:	b.eq	eaac <grub_unicode_aglomerate_comb+0xe54>  // b.none
    f2e8:	add	x23, x20, x0, lsl #5
    f2ec:	ldr	x0, [x23, #16]
    f2f0:	lsl	x0, x0, #2
    f2f4:	add	x2, x19, x0
    f2f8:	ldrh	w1, [x19, x0]
    f2fc:	and	w1, w1, #0x1
    f300:	strh	w1, [x19, x0]
    f304:	ldrh	w0, [sp, #112]
    f308:	strh	w0, [x2, #2]
    f30c:	b	eaac <grub_unicode_aglomerate_comb+0xe54>
    f310:	ldrb	w0, [x2, #5]
    f314:	ubfx	x0, x0, #4, #3
    f318:	ldrb	w1, [x21, #4]
    f31c:	and	w2, w1, #0x1f
    f320:	tbnz	w1, #3, f340 <grub_unicode_aglomerate_comb+0x16e8>
    f324:	and	w6, w0, #0xfffffffd
    f328:	cmp	w6, #0x1
    f32c:	b.ne	f340 <grub_unicode_aglomerate_comb+0x16e8>  // b.any
    f330:	cbz	w19, f3b4 <grub_unicode_aglomerate_comb+0x175c>
    f334:	orr	w2, w2, #0x2
    f338:	bfxil	w1, w2, #0, #5
    f33c:	strb	w1, [x21, #4]
    f340:	cmp	w0, #0x1
    f344:	b.ls	ee1c <grub_unicode_aglomerate_comb+0x11c4>  // b.plast
    f348:	sub	w0, w0, #0x2
    f34c:	cmp	w0, #0x2
    f350:	csinc	w19, w19, wzr, hi  // hi = pmore
    f354:	b	ee20 <grub_unicode_aglomerate_comb+0x11c8>
    f358:	ldrb	w1, [x2, #5]
    f35c:	ubfx	x1, x1, #3, #1
    f360:	ldrb	w0, [x20, #4]
    f364:	and	w2, w0, #0x1f
    f368:	cbz	w1, ed40 <grub_unicode_aglomerate_comb+0x10e8>
    f36c:	ldrb	w1, [x20, #5]
    f370:	tst	x1, #0x3f
    f374:	b.eq	ed7c <grub_unicode_aglomerate_comb+0x1124>  // b.none
    f378:	orr	w1, w2, #0x1
    f37c:	tst	w2, #0x1e
    f380:	bfxil	w0, w1, #0, #5
    f384:	strb	w0, [x20, #4]
    f388:	b.eq	ed7c <grub_unicode_aglomerate_comb+0x1124>  // b.none
    f38c:	b	ed58 <grub_unicode_aglomerate_comb+0x1100>
    f390:	ldrsb	w1, [x14, w22, uxtw]
    f394:	lsr	w1, w1, #31
    f398:	b	f360 <grub_unicode_aglomerate_comb+0x1708>
    f39c:	bl	d338 <grub_context_fini+0x18>
    f3a0:	adrp	x8, 0 <grub_normal_free_menu-0x498>
    f3a4:	mov	w9, #0x14                  	// #20
    f3a8:	mov	w10, #0xa                   	// #10
    f3ac:	ldr	x14, [x21]
    f3b0:	b	ecdc <grub_unicode_aglomerate_comb+0x1084>
    f3b4:	mov	w3, #0x1d                  	// #29
    f3b8:	and	w2, w2, w3
    f3bc:	bfxil	w1, w2, #0, #5
    f3c0:	strb	w1, [x21, #4]
    f3c4:	b	f340 <grub_unicode_aglomerate_comb+0x16e8>
    f3c8:	mov	w3, #0x1b                  	// #27
    f3cc:	and	w2, w2, w3
    f3d0:	bfxil	w1, w2, #0, #5
    f3d4:	strb	w1, [x27, #4]
    f3d8:	b	f234 <grub_unicode_aglomerate_comb+0x15dc>
    f3dc:	ldr	x1, [sp, #240]
    f3e0:	ldr	w2, [sp, #144]
    f3e4:	ldr	x5, [sp, #104]
    f3e8:	cmp	w2, #0x0
    f3ec:	ldr	x2, [sp, #136]
    f3f0:	strh	w4, [x1, #2]
    f3f4:	ldrh	w0, [x1]
    f3f8:	ccmp	x2, x5, #0x0, ne  // ne = any
    f3fc:	mov	x2, x1
    f400:	cset	w1, lt  // lt = tstop
    f404:	bfi	w0, w3, #1, #15
    f408:	mov	x3, x2
    f40c:	strh	w0, [x2]
    f410:	orr	w2, w22, w1
    f414:	orr	w0, w0, #0x1
    f418:	strb	w0, [x3]
    f41c:	cbz	w2, eaac <grub_unicode_aglomerate_comb+0xe54>
    f420:	ldr	w0, [sp, #112]
    f424:	mov	w12, w25
    f428:	str	xzr, [sp, #104]
    f42c:	cmp	w12, w27
    f430:	add	w0, w0, #0x1
    f434:	str	w0, [sp, #112]
    f438:	mov	w0, w12
    f43c:	str	x0, [sp, #168]
    f440:	sxtw	x0, w12
    f444:	str	x0, [sp, #160]
    f448:	sub	w23, w12, #0x1
    f44c:	b.hi	eb50 <grub_unicode_aglomerate_comb+0xef8>  // b.pmore
    f450:	mov	w0, w27
    f454:	str	x0, [sp, #120]
    f458:	mov	w28, w12
    f45c:	b	f270 <grub_unicode_aglomerate_comb+0x1618>
    f460:	ldr	w0, [sp, #144]
    f464:	ldr	x2, [sp, #104]
    f468:	cmp	w0, #0x0
    f46c:	ldr	x1, [sp, #136]
    f470:	mov	x0, #0x0                   	// #0
    f474:	ccmp	x1, x2, #0x0, ne  // ne = any
    f478:	cset	w1, lt  // lt = tstop
    f47c:	orr	w2, w22, w1
    f480:	b	ea8c <grub_unicode_aglomerate_comb+0xe34>
    f484:	ldr	w1, [sp, #808]
    f488:	ldr	w3, [sp, #112]
    f48c:	orr	w1, w1, w27
    f490:	orr	w28, w1, w3
    f494:	ldr	x1, [sp, #224]
    f498:	cmp	w28, #0x0
    f49c:	ccmp	x1, #0x0, #0x4, eq  // eq = none
    f4a0:	b.eq	f52c <grub_unicode_aglomerate_comb+0x18d4>  // b.none
    f4a4:	ldr	x2, [sp, #104]
    f4a8:	sub	x22, x2, x1
    f4ac:	ldr	x1, [sp, #136]
    f4b0:	cmp	x1, x22
    f4b4:	b.ls	f700 <grub_unicode_aglomerate_comb+0x1aa8>  // b.plast
    f4b8:	mov	w0, #0x1                   	// #1
    f4bc:	mov	w12, #0x0                   	// #0
    f4c0:	mov	w28, w12
    f4c4:	str	x22, [sp, #104]
    f4c8:	str	w0, [sp, #112]
    f4cc:	mov	w0, w27
    f4d0:	str	x0, [sp, #120]
    f4d4:	stp	xzr, xzr, [sp, #160]
    f4d8:	b	f270 <grub_unicode_aglomerate_comb+0x1618>
    f4dc:	ldr	w1, [sp, #144]
    f4e0:	ldr	x2, [sp, #104]
    f4e4:	cmp	w1, #0x0
    f4e8:	ldr	x1, [sp, #136]
    f4ec:	ccmp	x1, x2, #0x0, ne  // ne = any
    f4f0:	cset	w1, lt  // lt = tstop
    f4f4:	cmp	x21, x0
    f4f8:	orr	w2, w22, w1
    f4fc:	b.eq	f41c <grub_unicode_aglomerate_comb+0x17c4>  // b.none
    f500:	add	x23, x20, x0, lsl #5
    f504:	mov	x0, #0x0                   	// #0
    f508:	b	ea8c <grub_unicode_aglomerate_comb+0xe34>
    f50c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    f510:	ldr	x0, [x0]
    f514:	str	wzr, [x0]
    f518:	b	ee84 <grub_unicode_aglomerate_comb+0x122c>
    f51c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    f520:	ldr	x0, [x0]
    f524:	str	wzr, [x0]
    f528:	b	edcc <grub_unicode_aglomerate_comb+0x1174>
    f52c:	mov	w12, w25
    f530:	str	x0, [sp, #104]
    f534:	str	w2, [sp, #112]
    f538:	b	eb34 <grub_unicode_aglomerate_comb+0xedc>
    f53c:	mov	x0, x24
    f540:	mov	x2, #0x20                  	// #32
    f544:	mov	w1, #0x0                   	// #0
    f548:	bl	0 <grub_memset>
    f54c:	ldr	w1, [x24]
    f550:	mov	x0, x24
    f554:	ldr	w2, [sp, #188]
    f558:	mov	x24, x23
    f55c:	bfxil	w1, w2, #0, #23
    f560:	str	w1, [x0], #64
    f564:	mov	x23, x0
    f568:	b	f2a8 <grub_unicode_aglomerate_comb+0x1650>
    f56c:	cbz	w21, e498 <grub_unicode_aglomerate_comb+0x840>
    f570:	sub	w2, w21, #0x1
    f574:	add	x22, x26, #0x20
    f578:	mov	w1, #0x20                  	// #32
    f57c:	mov	x0, x26
    f580:	umaddl	x2, w2, w1, x22
    f584:	ldrb	w1, [x0, #5]
    f588:	add	x0, x0, #0x20
    f58c:	and	w1, w1, #0xffffffc0
    f590:	sturb	w1, [x0, #-27]
    f594:	cmp	x2, x0
    f598:	b.ne	f584 <grub_unicode_aglomerate_comb+0x192c>  // b.any
    f59c:	ldr	x0, [sp, #136]
    f5a0:	cmp	x0, #0x0
    f5a4:	cset	w1, gt
    f5a8:	str	w1, [sp, #144]
    f5ac:	cmp	w1, #0x0
    f5b0:	ldr	x1, [sp, #224]
    f5b4:	ccmp	x0, x1, #0x2, ne  // ne = any
    f5b8:	b.hi	e9d0 <grub_unicode_aglomerate_comb+0xd78>  // b.pmore
    f5bc:	ldr	x23, [sp, #232]
    f5c0:	add	x0, x23, #0x20
    f5c4:	mov	x24, x0
    f5c8:	ldr	w0, [sp, #188]
    f5cc:	cbnz	w0, f720 <grub_unicode_aglomerate_comb+0x1ac8>
    f5d0:	mov	w1, #0x0                   	// #0
    f5d4:	mov	x0, x23
    f5d8:	mov	x2, #0x20                  	// #32
    f5dc:	bl	0 <grub_memset>
    f5e0:	ldr	w0, [x23]
    f5e4:	mov	w1, #0xa                   	// #10
    f5e8:	str	xzr, [sp, #104]
    f5ec:	str	xzr, [sp, #224]
    f5f0:	bfxil	w0, w1, #0, #23
    f5f4:	str	w0, [x23]
    f5f8:	b	e9dc <grub_unicode_aglomerate_comb+0xd84>
    f5fc:	add	w3, w3, #0x1
    f600:	bfxil	w2, w3, #0, #6
    f604:	strb	w2, [x1, #5]
    f608:	b	e960 <grub_unicode_aglomerate_comb+0xd08>
    f60c:	cbnz	w27, f6a4 <grub_unicode_aglomerate_comb+0x1a4c>
    f610:	cbz	w20, f714 <grub_unicode_aglomerate_comb+0x1abc>
    f614:	sub	w1, w20, #0x1
    f618:	add	x2, sp, #0x120
    f61c:	mov	x20, x1
    f620:	add	x24, x24, x0, lsl #2
    f624:	ldr	w21, [x2, x1, lsl #2]
    f628:	add	x2, sp, #0x220
    f62c:	ldr	w28, [x2, x1, lsl #2]
    f630:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    f634:	and	w5, w21, #0xfffffffe
    f638:	add	w5, w5, #0x2
    f63c:	cmp	w5, #0x3d
    f640:	b.hi	e5e4 <grub_unicode_aglomerate_comb+0x98c>  // b.pmore
    f644:	mov	w2, w20
    f648:	add	x4, sp, #0x120
    f64c:	add	w20, w20, #0x1
    f650:	add	x24, x24, x0, lsl #2
    f654:	str	w21, [x4, x2, lsl #2]
    f658:	add	x4, sp, #0x220
    f65c:	mov	w21, w5
    f660:	str	w28, [x4, x2, lsl #2]
    f664:	mov	w28, w1
    f668:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    f66c:	mov	w27, #0x1                   	// #1
    f670:	b	e098 <grub_unicode_aglomerate_comb+0x440>
    f674:	cmp	w22, w26
    f678:	b.hi	ee1c <grub_unicode_aglomerate_comb+0x11c4>  // b.pmore
    f67c:	ldrb	w0, [x0, w22, uxtw]
    f680:	b	f318 <grub_unicode_aglomerate_comb+0x16c0>
    f684:	cmp	w22, w26
    f688:	b.hi	eedc <grub_unicode_aglomerate_comb+0x1284>  // b.pmore
    f68c:	ldrb	w0, [x0, w22, uxtw]
    f690:	b	f20c <grub_unicode_aglomerate_comb+0x15b4>
    f694:	ldr	w0, [x5, #4]
    f698:	bfi	w0, w17, #14, #5
    f69c:	str	w0, [x5, #4]
    f6a0:	b	e7f8 <grub_unicode_aglomerate_comb+0xba0>
    f6a4:	sub	w27, w27, #0x1
    f6a8:	add	x24, x24, x0, lsl #2
    f6ac:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    f6b0:	mov	w2, w20
    f6b4:	add	x4, sp, #0x220
    f6b8:	add	w20, w20, #0x1
    f6bc:	add	x24, x24, x0, lsl #2
    f6c0:	str	w28, [x4, x2, lsl #2]
    f6c4:	add	x4, sp, #0x120
    f6c8:	mov	w28, #0x1                   	// #1
    f6cc:	mov	w22, w28
    f6d0:	str	w21, [x4, x2, lsl #2]
    f6d4:	mov	w21, w1
    f6d8:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    f6dc:	mov	w1, w20
    f6e0:	add	x4, sp, #0x120
    f6e4:	add	w20, w20, #0x1
    f6e8:	add	x24, x24, x0, lsl #2
    f6ec:	str	w21, [x4, x1, lsl #2]
    f6f0:	mov	w21, w2
    f6f4:	add	x2, sp, #0x220
    f6f8:	str	w28, [x2, x1, lsl #2]
    f6fc:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    f700:	mov	w12, w25
    f704:	str	x0, [sp, #104]
    f708:	mov	w0, #0x1                   	// #1
    f70c:	str	w0, [sp, #112]
    f710:	b	eb34 <grub_unicode_aglomerate_comb+0xedc>
    f714:	mov	w27, w20
    f718:	add	x24, x24, x0, lsl #2
    f71c:	b	e240 <grub_unicode_aglomerate_comb+0x5e8>
    f720:	mov	x0, x23
    f724:	mov	x2, #0x20                  	// #32
    f728:	mov	w1, #0x0                   	// #0
    f72c:	bl	0 <grub_memset>
    f730:	mov	x0, x23
    f734:	ldr	w2, [sp, #188]
    f738:	mov	x23, x24
    f73c:	ldr	w1, [x0]
    f740:	bfxil	w1, w2, #0, #23
    f744:	str	w1, [x0], #64
    f748:	mov	x24, x0
    f74c:	b	f5d0 <grub_unicode_aglomerate_comb+0x1978>
    f750:	mov	w28, w12
    f754:	b	ec84 <grub_unicode_aglomerate_comb+0x102c>
    f758:	mov	x19, #0xffffffffffffffff    	// #-1
    f75c:	b	eadc <grub_unicode_aglomerate_comb+0xe84>
	...

000000000000f778 <grub_bidi_logical_to_visual>:
    f778:	sub	sp, sp, #0x90
    f77c:	stp	x29, x30, [sp, #32]
    f780:	add	x29, sp, #0x20
    f784:	stp	x19, x20, [sp, #48]
    f788:	mov	x20, x1
    f78c:	add	x1, x1, x1, lsl #1
    f790:	mov	x19, x2
    f794:	stp	x21, x22, [sp, #64]
    f798:	lsl	x1, x1, #5
    f79c:	mov	x21, x3
    f7a0:	mov	x22, x4
    f7a4:	stp	x23, x24, [sp, #80]
    f7a8:	mov	x23, x5
    f7ac:	mov	w24, w7
    f7b0:	stp	x27, x28, [sp, #112]
    f7b4:	mov	x27, x0
    f7b8:	add	x0, x1, #0xc0
    f7bc:	stp	x2, x6, [sp, #128]
    f7c0:	bl	0 <grub_malloc>
    f7c4:	str	x0, [x19]
    f7c8:	cbz	x0, f96c <grub_bidi_logical_to_visual+0x1f4>
    f7cc:	stp	x25, x26, [sp, #96]
    f7d0:	add	x25, x27, x20, lsl #2
    f7d4:	cmp	x27, x25
    f7d8:	b.hi	f960 <grub_bidi_logical_to_visual+0x1e8>  // b.pmore
    f7dc:	mov	x28, x0
    f7e0:	mov	x19, x27
    f7e4:	mov	w26, #0x200e                	// #8206
    f7e8:	ldr	x6, [sp, #136]
    f7ec:	b	f7fc <grub_bidi_logical_to_visual+0x84>
    f7f0:	add	x19, x19, #0x4
    f7f4:	cmp	x25, x19
    f7f8:	b.cc	f8e8 <grub_bidi_logical_to_visual+0x170>  // b.lo, b.ul, b.last
    f7fc:	cmp	x25, x19
    f800:	b.eq	f810 <grub_bidi_logical_to_visual+0x98>  // b.none
    f804:	ldr	w1, [x19]
    f808:	cmp	w1, #0xa
    f80c:	b.ne	f7f0 <grub_bidi_logical_to_visual+0x78>  // b.any
    f810:	ldr	x0, [sp, #144]
    f814:	str	x0, [sp]
    f818:	ldr	w0, [sp, #152]
    f81c:	sub	x1, x19, x27
    f820:	str	w0, [sp, #8]
    f824:	mov	x3, x21
    f828:	str	x20, [sp, #16]
    f82c:	asr	x1, x1, #2
    f830:	mov	w7, w24
    f834:	mov	x5, x23
    f838:	mov	x4, x22
    f83c:	mov	x2, x28
    f840:	mov	x0, x27
    f844:	bl	dfc0 <grub_unicode_aglomerate_comb+0x368>
    f848:	mov	x3, x0
    f84c:	cmp	x0, #0x0
    f850:	b.lt	f928 <grub_bidi_logical_to_visual+0x1b0>  // b.tstop
    f854:	b.eq	f8ac <grub_bidi_logical_to_visual+0x134>  // b.none
    f858:	add	x3, x28, x0, lsl #5
    f85c:	mov	x6, x28
    f860:	mov	x1, #0x0                   	// #0
    f864:	nop
    f868:	ldrh	w0, [x6, #6]
    f86c:	add	x2, x28, x1, lsl #5
    f870:	tst	w0, #0x7f8
    f874:	b.ne	f888 <grub_bidi_logical_to_visual+0x110>  // b.any
    f878:	ldr	w0, [x6]
    f87c:	and	w0, w0, #0x7ffffe
    f880:	cmp	w0, w26
    f884:	b.eq	f89c <grub_bidi_logical_to_visual+0x124>  // b.none
    f888:	ldp	x4, x5, [x6]
    f88c:	stp	x4, x5, [x2]
    f890:	add	x1, x1, #0x1
    f894:	ldp	x4, x5, [x6, #16]
    f898:	stp	x4, x5, [x2, #16]
    f89c:	add	x6, x6, #0x20
    f8a0:	cmp	x6, x3
    f8a4:	b.ne	f868 <grub_bidi_logical_to_visual+0xf0>  // b.any
    f8a8:	add	x28, x28, x1, lsl #5
    f8ac:	cmp	x25, x19
    f8b0:	add	x19, x19, #0x4
    f8b4:	b.eq	f91c <grub_bidi_logical_to_visual+0x1a4>  // b.none
    f8b8:	mov	x0, x28
    f8bc:	mov	w1, #0x0                   	// #0
    f8c0:	mov	x2, #0x20                  	// #32
    f8c4:	bl	0 <grub_memset>
    f8c8:	ldr	w0, [x28]
    f8cc:	mov	w1, #0xa                   	// #10
    f8d0:	mov	x27, x19
    f8d4:	cmp	x25, x19
    f8d8:	mov	x6, #0x0                   	// #0
    f8dc:	bfxil	w0, w1, #0, #23
    f8e0:	str	w0, [x28], #32
    f8e4:	b.cs	f7fc <grub_bidi_logical_to_visual+0x84>  // b.hs, b.nlast
    f8e8:	ldr	x0, [sp, #128]
    f8ec:	ldp	x25, x26, [sp, #96]
    f8f0:	ldr	x0, [x0]
    f8f4:	sub	x28, x28, x0
    f8f8:	asr	x3, x28, #5
    f8fc:	mov	x0, x3
    f900:	ldp	x29, x30, [sp, #32]
    f904:	ldp	x19, x20, [sp, #48]
    f908:	ldp	x21, x22, [sp, #64]
    f90c:	ldp	x23, x24, [sp, #80]
    f910:	ldp	x27, x28, [sp, #112]
    f914:	add	sp, sp, #0x90
    f918:	ret
    f91c:	mov	x27, x25
    f920:	mov	x6, #0x0                   	// #0
    f924:	b	f7f4 <grub_bidi_logical_to_visual+0x7c>
    f928:	ldr	x0, [sp, #128]
    f92c:	str	x3, [sp, #136]
    f930:	ldr	x0, [x0]
    f934:	bl	0 <grub_free>
    f938:	ldr	x3, [sp, #136]
    f93c:	ldp	x29, x30, [sp, #32]
    f940:	mov	x0, x3
    f944:	ldp	x19, x20, [sp, #48]
    f948:	ldp	x21, x22, [sp, #64]
    f94c:	ldp	x23, x24, [sp, #80]
    f950:	ldp	x25, x26, [sp, #96]
    f954:	ldp	x27, x28, [sp, #112]
    f958:	add	sp, sp, #0x90
    f95c:	ret
    f960:	mov	x3, #0x0                   	// #0
    f964:	ldp	x25, x26, [sp, #96]
    f968:	b	f8fc <grub_bidi_logical_to_visual+0x184>
    f96c:	mov	x3, #0xffffffffffffffff    	// #-1
    f970:	b	f8fc <grub_bidi_logical_to_visual+0x184>
    f974:	nop

000000000000f978 <grub_unicode_mirror_code>:
    f978:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    f97c:	ldr	x4, [x1]
    f980:	ldr	w1, [x4]
    f984:	cbz	w1, f9b0 <grub_unicode_mirror_code+0x38>
    f988:	mov	x3, x4
    f98c:	mov	w2, #0x0                   	// #0
    f990:	b	f9a0 <grub_unicode_mirror_code+0x28>
    f994:	ldr	w1, [x3, #8]!
    f998:	add	w2, w2, #0x1
    f99c:	cbz	w1, f9b0 <grub_unicode_mirror_code+0x38>
    f9a0:	cmp	w0, w1
    f9a4:	b.ne	f994 <grub_unicode_mirror_code+0x1c>  // b.any
    f9a8:	add	x2, x4, w2, sxtw #3
    f9ac:	ldr	w0, [x2, #4]
    f9b0:	ret
    f9b4:	nop
	...

000000000000f9c0 <grub_unicode_shape_code>:
    f9c0:	sub	w2, w0, #0x600
    f9c4:	and	w1, w1, #0xff
    f9c8:	cmp	w2, #0xff
    f9cc:	b.hi	fa1c <grub_unicode_shape_code+0x5c>  // b.pmore
    f9d0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    f9d4:	ldr	x3, [x2]
    f9d8:	ldr	w2, [x3]
    f9dc:	cbz	w2, fa1c <grub_unicode_shape_code+0x5c>
    f9e0:	and	w1, w1, #0x6
    f9e4:	b	f9f0 <grub_unicode_shape_code+0x30>
    f9e8:	ldr	w2, [x3, #20]!
    f9ec:	cbz	w2, fa1c <grub_unicode_shape_code+0x5c>
    f9f0:	cmp	w2, w0
    f9f4:	b.ne	f9e8 <grub_unicode_shape_code+0x28>  // b.any
    f9f8:	cmp	w1, #0x4
    f9fc:	b.eq	fa40 <grub_unicode_shape_code+0x80>  // b.none
    fa00:	b.hi	fa20 <grub_unicode_shape_code+0x60>  // b.pmore
    fa04:	cbz	w1, fa34 <grub_unicode_shape_code+0x74>
    fa08:	cmp	w1, #0x2
    fa0c:	b.ne	f9e8 <grub_unicode_shape_code+0x28>  // b.any
    fa10:	ldr	w2, [x3, #16]
    fa14:	cbz	w2, f9e8 <grub_unicode_shape_code+0x28>
    fa18:	mov	w0, w2
    fa1c:	ret
    fa20:	cmp	w1, #0x6
    fa24:	b.ne	f9e8 <grub_unicode_shape_code+0x28>  // b.any
    fa28:	ldr	w2, [x3, #12]
    fa2c:	cbz	w2, f9e8 <grub_unicode_shape_code+0x28>
    fa30:	b	fa18 <grub_unicode_shape_code+0x58>
    fa34:	ldr	w2, [x3, #4]
    fa38:	cbz	w2, f9e8 <grub_unicode_shape_code+0x28>
    fa3c:	b	fa18 <grub_unicode_shape_code+0x58>
    fa40:	ldr	w2, [x3, #8]
    fa44:	cbz	w2, f9e8 <grub_unicode_shape_code+0x28>
    fa48:	b	fa18 <grub_unicode_shape_code+0x58>
    fa4c:	nop
	...

000000000000fa58 <grub_unicode_get_comb_start>:
    fa58:	stp	x29, x30, [sp, #-48]!
    fa5c:	cmp	x1, x0
    fa60:	mov	x29, sp
    fa64:	stp	x19, x20, [sp, #16]
    fa68:	mov	x20, x0
    fa6c:	b.cc	facc <grub_unicode_get_comb_start+0x74>  // b.lo, b.ul, b.last
    fa70:	mov	x19, x1
    fa74:	stp	x21, x22, [sp, #32]
    fa78:	mov	w21, #0xff00                	// #65280
    fa7c:	mov	w22, #0xffff0200            	// #-65024
    fa80:	movk	w21, #0xfff1, lsl #16
    fa84:	ldr	w0, [x19]
    fa88:	add	w1, w0, w22
    fa8c:	add	w2, w0, w21
    fa90:	cmp	w1, #0xf
    fa94:	b.ls	fabc <grub_unicode_get_comb_start+0x64>  // b.plast
    fa98:	cmp	w2, #0xef
    fa9c:	b.ls	fabc <grub_unicode_get_comb_start+0x64>  // b.plast
    faa0:	bl	dab0 <grub_unicode_get_comb_type>
    faa4:	cbnz	w0, fabc <grub_unicode_get_comb_start+0x64>
    faa8:	mov	x0, x19
    faac:	ldp	x19, x20, [sp, #16]
    fab0:	ldp	x21, x22, [sp, #32]
    fab4:	ldp	x29, x30, [sp], #48
    fab8:	ret
    fabc:	sub	x19, x19, #0x4
    fac0:	cmp	x20, x19
    fac4:	b.ls	fa84 <grub_unicode_get_comb_start+0x2c>  // b.plast
    fac8:	ldp	x21, x22, [sp, #32]
    facc:	mov	x19, x20
    fad0:	mov	x0, x19
    fad4:	ldp	x19, x20, [sp, #16]
    fad8:	ldp	x29, x30, [sp], #48
    fadc:	ret

000000000000fae0 <grub_unicode_get_comb_end>:
    fae0:	stp	x29, x30, [sp, #-48]!
    fae4:	cmp	x1, x0
    fae8:	mov	x29, sp
    faec:	stp	x19, x20, [sp, #16]
    faf0:	mov	x20, x0
    faf4:	b.cs	fb54 <grub_unicode_get_comb_end+0x74>  // b.hs, b.nlast
    faf8:	mov	x19, x1
    fafc:	stp	x21, x22, [sp, #32]
    fb00:	mov	w21, #0xff00                	// #65280
    fb04:	mov	w22, #0xffff0200            	// #-65024
    fb08:	movk	w21, #0xfff1, lsl #16
    fb0c:	ldr	w0, [x19]
    fb10:	add	w1, w0, w22
    fb14:	add	w2, w0, w21
    fb18:	cmp	w1, #0xf
    fb1c:	b.ls	fb44 <grub_unicode_get_comb_end+0x64>  // b.plast
    fb20:	cmp	w2, #0xef
    fb24:	b.ls	fb44 <grub_unicode_get_comb_end+0x64>  // b.plast
    fb28:	bl	dab0 <grub_unicode_get_comb_type>
    fb2c:	cbnz	w0, fb44 <grub_unicode_get_comb_end+0x64>
    fb30:	mov	x0, x19
    fb34:	ldp	x19, x20, [sp, #16]
    fb38:	ldp	x21, x22, [sp, #32]
    fb3c:	ldp	x29, x30, [sp], #48
    fb40:	ret
    fb44:	add	x19, x19, #0x4
    fb48:	cmp	x20, x19
    fb4c:	b.hi	fb0c <grub_unicode_get_comb_end+0x2c>  // b.pmore
    fb50:	ldp	x21, x22, [sp, #32]
    fb54:	mov	x19, x20
    fb58:	mov	x0, x19
    fb5c:	ldp	x19, x20, [sp, #16]
    fb60:	ldp	x29, x30, [sp], #48
    fb64:	ret

000000000000fb68 <grub_file_getline>:
    fb68:	stp	x29, x30, [sp, #-80]!
    fb6c:	mov	x29, sp
    fb70:	stp	x21, x22, [sp, #32]
    fb74:	str	x23, [sp, #48]
    fb78:	mov	x23, x0
    fb7c:	mov	x0, #0x40                  	// #64
    fb80:	bl	0 <grub_malloc>
    fb84:	mov	x21, x0
    fb88:	cbz	x0, fc04 <grub_file_getline+0x9c>
    fb8c:	mov	x22, #0x40                  	// #64
    fb90:	stp	x19, x20, [sp, #16]
    fb94:	mov	x19, #0x0                   	// #0
    fb98:	add	x1, sp, #0x4f
    fb9c:	mov	x0, x23
    fba0:	mov	x2, #0x1                   	// #1
    fba4:	add	x20, x19, #0x1
    fba8:	bl	0 <grub_file_read>
    fbac:	cmp	x0, #0x1
    fbb0:	b.ne	fbf8 <grub_file_getline+0x90>  // b.any
    fbb4:	ldrb	w1, [sp, #79]
    fbb8:	cmp	w1, #0xd
    fbbc:	b.eq	fb98 <grub_file_getline+0x30>  // b.none
    fbc0:	cmp	x20, x22
    fbc4:	b.cs	fc18 <grub_file_getline+0xb0>  // b.hs, b.nlast
    fbc8:	cmp	w1, #0xa
    fbcc:	add	x0, x21, x19
    fbd0:	b.eq	fc40 <grub_file_getline+0xd8>  // b.none
    fbd4:	strb	w1, [x21, x19]
    fbd8:	mov	x19, x20
    fbdc:	add	x1, sp, #0x4f
    fbe0:	mov	x0, x23
    fbe4:	mov	x2, #0x1                   	// #1
    fbe8:	add	x20, x19, #0x1
    fbec:	bl	0 <grub_file_read>
    fbf0:	cmp	x0, #0x1
    fbf4:	b.eq	fbb4 <grub_file_getline+0x4c>  // b.none
    fbf8:	strb	wzr, [x21, x19]
    fbfc:	cbz	x19, fc5c <grub_file_getline+0xf4>
    fc00:	ldp	x19, x20, [sp, #16]
    fc04:	mov	x0, x21
    fc08:	ldp	x21, x22, [sp, #32]
    fc0c:	ldr	x23, [sp, #48]
    fc10:	ldp	x29, x30, [sp], #80
    fc14:	ret
    fc18:	lsl	x22, x22, #1
    fc1c:	mov	x0, x21
    fc20:	mov	x1, x22
    fc24:	bl	0 <grub_realloc>
    fc28:	cbz	x0, fc5c <grub_file_getline+0xf4>
    fc2c:	ldrb	w1, [sp, #79]
    fc30:	mov	x21, x0
    fc34:	add	x0, x21, x19
    fc38:	cmp	w1, #0xa
    fc3c:	b.ne	fbd4 <grub_file_getline+0x6c>  // b.any
    fc40:	strb	wzr, [x0]
    fc44:	mov	x0, x21
    fc48:	ldp	x19, x20, [sp, #16]
    fc4c:	ldp	x21, x22, [sp, #32]
    fc50:	ldr	x23, [sp, #48]
    fc54:	ldp	x29, x30, [sp], #80
    fc58:	ret
    fc5c:	mov	x0, x21
    fc60:	mov	x21, #0x0                   	// #0
    fc64:	bl	0 <grub_free>
    fc68:	mov	x0, x21
    fc6c:	ldp	x19, x20, [sp, #16]
    fc70:	ldp	x21, x22, [sp, #32]
    fc74:	ldr	x23, [sp, #48]
    fc78:	ldp	x29, x30, [sp], #80
    fc7c:	ret

000000000000fc80 <grub_normal_parse_line>:
    fc80:	stp	x29, x30, [sp, #-32]!
    fc84:	mov	x29, sp
    fc88:	bl	108a8 <grub_script_parse>
    fc8c:	cbz	x0, fcb0 <grub_normal_parse_line+0x30>
    fc90:	str	x19, [sp, #16]
    fc94:	mov	x19, x0
    fc98:	bl	13280 <grub_script_execute>
    fc9c:	ldr	w0, [x19]
    fca0:	cbz	w0, fcc4 <grub_normal_parse_line+0x44>
    fca4:	sub	w0, w0, #0x1
    fca8:	str	w0, [x19]
    fcac:	ldr	x19, [sp, #16]
    fcb0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    fcb4:	ldp	x29, x30, [sp], #32
    fcb8:	ldr	x0, [x0]
    fcbc:	ldr	w0, [x0]
    fcc0:	ret
    fcc4:	mov	x0, x19
    fcc8:	bl	10028 <grub_script_free>
    fccc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    fcd0:	ldr	x19, [sp, #16]
    fcd4:	ldr	x0, [x0]
    fcd8:	ldp	x29, x30, [sp], #32
    fcdc:	ldr	w0, [x0]
    fce0:	ret
    fce4:	nop
	...

000000000000fcf0 <grub_script_init>:
    fcf0:	stp	x29, x30, [sp, #-48]!
    fcf4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    fcf8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    fcfc:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    fd00:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    fd04:	mov	x29, sp
    fd08:	ldr	x3, [x3]
    fd0c:	stp	x19, x20, [sp, #16]
    fd10:	mov	w4, #0x0                   	// #0
    fd14:	ldr	x0, [x0]
    fd18:	str	x21, [sp, #32]
    fd1c:	ldr	x20, [x2]
    fd20:	ldr	x21, [x1]
    fd24:	mov	x2, x20
    fd28:	mov	x1, x21
    fd2c:	bl	0 <grub_register_command_prio>
    fd30:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    fd34:	mov	x5, x0
    fd38:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    fd3c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    fd40:	ldr	x19, [x1]
    fd44:	mov	w4, #0x0                   	// #0
    fd48:	ldr	x3, [x2]
    fd4c:	mov	x1, x21
    fd50:	ldr	x0, [x0]
    fd54:	mov	x2, x20
    fd58:	str	x5, [x19]
    fd5c:	bl	0 <grub_register_command_prio>
    fd60:	str	x0, [x19, #8]
    fd64:	adrp	x5, 0 <grub_normal_free_menu-0x498>
    fd68:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    fd6c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    fd70:	mov	x2, x20
    fd74:	ldr	x3, [x3]
    fd78:	mov	w4, #0x0                   	// #0
    fd7c:	ldr	x1, [x1]
    fd80:	ldr	x0, [x5]
    fd84:	bl	0 <grub_register_command_prio>
    fd88:	str	x0, [x19, #16]
    fd8c:	adrp	x5, 0 <grub_normal_free_menu-0x498>
    fd90:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    fd94:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    fd98:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    fd9c:	ldr	x3, [x3]
    fda0:	mov	w4, #0x0                   	// #0
    fda4:	ldr	x2, [x2]
    fda8:	ldr	x1, [x1]
    fdac:	ldr	x0, [x5]
    fdb0:	bl	0 <grub_register_command_prio>
    fdb4:	str	x0, [x19, #24]
    fdb8:	adrp	x5, 0 <grub_normal_free_menu-0x498>
    fdbc:	adrp	x3, 0 <grub_normal_free_menu-0x498>
    fdc0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    fdc4:	mov	x2, x20
    fdc8:	ldr	x3, [x3]
    fdcc:	mov	w4, #0x0                   	// #0
    fdd0:	ldr	x1, [x1]
    fdd4:	ldr	x0, [x5]
    fdd8:	bl	0 <grub_register_command_prio>
    fddc:	ldr	x21, [sp, #32]
    fde0:	str	x0, [x19, #32]
    fde4:	ldp	x19, x20, [sp, #16]
    fde8:	ldp	x29, x30, [sp], #48
    fdec:	ret
	...

000000000000fe78 <grub_script_fini>:
    fe78:	stp	x29, x30, [sp, #-32]!
    fe7c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    fe80:	mov	x29, sp
    fe84:	str	x19, [sp, #16]
    fe88:	ldr	x19, [x0]
    fe8c:	ldr	x0, [x19]
    fe90:	cbz	x0, fe98 <grub_script_fini+0x20>
    fe94:	bl	0 <grub_unregister_command>
    fe98:	ldr	x0, [x19, #8]
    fe9c:	str	xzr, [x19]
    fea0:	cbz	x0, fea8 <grub_script_fini+0x30>
    fea4:	bl	0 <grub_unregister_command>
    fea8:	ldr	x0, [x19, #16]
    feac:	str	xzr, [x19, #8]
    feb0:	cbz	x0, feb8 <grub_script_fini+0x40>
    feb4:	bl	0 <grub_unregister_command>
    feb8:	ldr	x0, [x19, #24]
    febc:	str	xzr, [x19, #16]
    fec0:	cbz	x0, fec8 <grub_script_fini+0x50>
    fec4:	bl	0 <grub_unregister_command>
    fec8:	ldr	x0, [x19, #32]
    fecc:	str	xzr, [x19, #24]
    fed0:	cbz	x0, fed8 <grub_script_fini+0x60>
    fed4:	bl	0 <grub_unregister_command>
    fed8:	str	xzr, [x19, #32]
    fedc:	ldr	x19, [sp, #16]
    fee0:	ldp	x29, x30, [sp], #32
    fee4:	ret
	...

000000000000fef0 <grub_script_malloc>:
    fef0:	stp	x29, x30, [sp, #-32]!
    fef4:	mov	x29, sp
    fef8:	stp	x19, x20, [sp, #16]
    fefc:	mov	x20, x0
    ff00:	add	x0, x1, #0xf
    ff04:	bl	0 <grub_malloc>
    ff08:	mov	x19, x0
    ff0c:	cbz	x0, ff44 <grub_script_malloc+0x54>
    ff10:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    ff14:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    ff18:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ff1c:	mov	x4, x19
    ff20:	ldr	x3, [x1]
    ff24:	mov	w1, #0x32                  	// #50
    ff28:	ldr	x0, [x0]
    ff2c:	ldr	x2, [x2]
    ff30:	bl	0 <grub_real_dprintf>
    ff34:	ldr	x0, [x20, #16]
    ff38:	str	x0, [x19]
    ff3c:	str	x19, [x20, #16]
    ff40:	add	x19, x19, #0x8
    ff44:	mov	x0, x19
    ff48:	ldp	x19, x20, [sp, #16]
    ff4c:	ldp	x29, x30, [sp], #32
    ff50:	ret
    ff54:	nop
	...

000000000000ff70 <grub_script_mem_free>:
    ff70:	cbz	x0, ffe8 <grub_script_mem_free+0x78>
    ff74:	stp	x29, x30, [sp, #-64]!
    ff78:	adrp	x2, 0 <grub_normal_free_menu-0x498>
    ff7c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
    ff80:	mov	x29, sp
    ff84:	stp	x19, x20, [sp, #16]
    ff88:	mov	x19, x0
    ff8c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
    ff90:	stp	x21, x22, [sp, #32]
    ff94:	ldr	x22, [x1]
    ff98:	str	x23, [sp, #48]
    ff9c:	ldr	x21, [x0]
    ffa0:	ldr	x23, [x2]
    ffa4:	nop
    ffa8:	mov	x20, x19
    ffac:	mov	x4, x19
    ffb0:	mov	x3, x23
    ffb4:	ldr	x19, [x19]
    ffb8:	mov	x2, x22
    ffbc:	mov	w1, #0x41                  	// #65
    ffc0:	mov	x0, x21
    ffc4:	bl	0 <grub_real_dprintf>
    ffc8:	mov	x0, x20
    ffcc:	bl	0 <grub_free>
    ffd0:	cbnz	x19, ffa8 <grub_script_mem_free+0x38>
    ffd4:	ldp	x19, x20, [sp, #16]
    ffd8:	ldp	x21, x22, [sp, #32]
    ffdc:	ldr	x23, [sp, #48]
    ffe0:	ldp	x29, x30, [sp], #64
    ffe4:	ret
    ffe8:	ret
    ffec:	nop
	...

0000000000010008 <grub_script_mem_record>:
   10008:	mov	x1, x0
   1000c:	ldr	x0, [x0, #16]
   10010:	str	xzr, [x1, #16]
   10014:	ret

0000000000010018 <grub_script_mem_record_stop>:
   10018:	mov	x2, x0
   1001c:	ldr	x0, [x0, #16]
   10020:	str	x1, [x2, #16]
   10024:	ret

0000000000010028 <grub_script_free>:
   10028:	cbz	x0, 100d8 <grub_script_free+0xb0>
   1002c:	stp	x29, x30, [sp, #-64]!
   10030:	mov	x29, sp
   10034:	stp	x19, x20, [sp, #16]
   10038:	ldr	x19, [x0, #8]
   1003c:	stp	x21, x22, [sp, #32]
   10040:	mov	x21, x0
   10044:	cbz	x19, 10098 <grub_script_free+0x70>
   10048:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   1004c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10050:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   10054:	stp	x23, x24, [sp, #48]
   10058:	ldr	x22, [x0]
   1005c:	ldr	x24, [x2]
   10060:	ldr	x23, [x1]
   10064:	nop
   10068:	mov	x20, x19
   1006c:	mov	x4, x19
   10070:	mov	x3, x24
   10074:	ldr	x19, [x19]
   10078:	mov	x2, x23
   1007c:	mov	w1, #0x41                  	// #65
   10080:	mov	x0, x22
   10084:	bl	0 <grub_real_dprintf>
   10088:	mov	x0, x20
   1008c:	bl	0 <grub_free>
   10090:	cbnz	x19, 10068 <grub_script_free+0x40>
   10094:	ldp	x23, x24, [sp, #48]
   10098:	ldr	x19, [x21, #32]
   1009c:	cbz	x19, 100bc <grub_script_free+0x94>
   100a0:	ldr	w1, [x19]
   100a4:	mov	x0, x19
   100a8:	ldr	x19, [x19, #24]
   100ac:	sub	w2, w1, #0x1
   100b0:	cbz	w1, 100d0 <grub_script_free+0xa8>
   100b4:	str	w2, [x0]
   100b8:	cbnz	x19, 100a0 <grub_script_free+0x78>
   100bc:	mov	x0, x21
   100c0:	ldp	x19, x20, [sp, #16]
   100c4:	ldp	x21, x22, [sp, #32]
   100c8:	ldp	x29, x30, [sp], #64
   100cc:	b	0 <grub_free>
   100d0:	bl	10028 <grub_script_free>
   100d4:	b	1009c <grub_script_free+0x74>
   100d8:	ret
   100dc:	nop
	...

00000000000100f8 <grub_script_arg_add>:
   100f8:	stp	x29, x30, [sp, #-96]!
   100fc:	mov	x29, sp
   10100:	stp	x19, x20, [sp, #16]
   10104:	mov	x20, x0
   10108:	mov	x0, #0x2f                  	// #47
   1010c:	stp	x21, x22, [sp, #32]
   10110:	mov	x22, x1
   10114:	mov	w21, w2
   10118:	stp	x23, x24, [sp, #48]
   1011c:	mov	x23, x3
   10120:	bl	0 <grub_malloc>
   10124:	cbz	x0, 10234 <grub_script_arg_add+0x13c>
   10128:	mov	x19, x0
   1012c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10130:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   10134:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   10138:	stp	x25, x26, [sp, #64]
   1013c:	mov	x4, x19
   10140:	add	x24, x19, #0x8
   10144:	ldr	x26, [x2]
   10148:	str	x27, [sp, #80]
   1014c:	ldr	x25, [x0]
   10150:	mov	x2, x26
   10154:	ldr	x27, [x1]
   10158:	mov	x0, x25
   1015c:	mov	w1, #0x32                  	// #50
   10160:	mov	x3, x27
   10164:	bl	0 <grub_real_dprintf>
   10168:	ldr	x0, [x20, #16]
   1016c:	str	x0, [x19]
   10170:	str	x19, [x20, #16]
   10174:	mov	x0, x23
   10178:	str	w21, [x19, #8]
   1017c:	str	xzr, [x24, #16]
   10180:	bl	0 <grub_strlen>
   10184:	add	w21, w0, #0x1
   10188:	sxtw	x21, w21
   1018c:	add	x0, x21, #0xf
   10190:	bl	0 <grub_malloc>
   10194:	mov	x19, x0
   10198:	cbz	x0, 1024c <grub_script_arg_add+0x154>
   1019c:	mov	x3, x27
   101a0:	mov	x2, x26
   101a4:	mov	x0, x25
   101a8:	mov	x4, x19
   101ac:	mov	w1, #0x32                  	// #50
   101b0:	bl	0 <grub_real_dprintf>
   101b4:	ldr	x0, [x20, #16]
   101b8:	str	x0, [x19]
   101bc:	str	x19, [x20, #16]
   101c0:	add	x0, x19, #0x8
   101c4:	str	x0, [x24, #8]
   101c8:	mov	x2, x21
   101cc:	mov	x1, x23
   101d0:	bl	0 <grub_memmove>
   101d4:	str	xzr, [x24, #24]
   101d8:	mov	x0, x24
   101dc:	cbz	x22, 10218 <grub_script_arg_add+0x120>
   101e0:	mov	x0, x22
   101e4:	nop
   101e8:	mov	x1, x0
   101ec:	ldr	x0, [x0, #24]
   101f0:	cbnz	x0, 101e8 <grub_script_arg_add+0xf0>
   101f4:	ldp	x25, x26, [sp, #64]
   101f8:	mov	x0, x22
   101fc:	ldr	x27, [sp, #80]
   10200:	str	x24, [x1, #24]
   10204:	ldp	x19, x20, [sp, #16]
   10208:	ldp	x21, x22, [sp, #32]
   1020c:	ldp	x23, x24, [sp, #48]
   10210:	ldp	x29, x30, [sp], #96
   10214:	ret
   10218:	ldp	x19, x20, [sp, #16]
   1021c:	ldp	x21, x22, [sp, #32]
   10220:	ldp	x23, x24, [sp, #48]
   10224:	ldp	x25, x26, [sp, #64]
   10228:	ldr	x27, [sp, #80]
   1022c:	ldp	x29, x30, [sp], #96
   10230:	ret
   10234:	mov	x0, x22
   10238:	ldp	x19, x20, [sp, #16]
   1023c:	ldp	x21, x22, [sp, #32]
   10240:	ldp	x23, x24, [sp, #48]
   10244:	ldp	x29, x30, [sp], #96
   10248:	ret
   1024c:	ldp	x25, x26, [sp, #64]
   10250:	mov	x0, x22
   10254:	ldr	x27, [sp, #80]
   10258:	str	xzr, [x24, #8]
   1025c:	ldp	x19, x20, [sp, #16]
   10260:	ldp	x21, x22, [sp, #32]
   10264:	ldp	x23, x24, [sp, #48]
   10268:	ldp	x29, x30, [sp], #96
   1026c:	ret
	...

0000000000010288 <grub_script_add_arglist>:
   10288:	stp	x29, x30, [sp, #-64]!
   1028c:	adrp	x6, 0 <grub_normal_free_menu-0x498>
   10290:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   10294:	mov	x29, sp
   10298:	adrp	x5, 0 <grub_normal_free_menu-0x498>
   1029c:	stp	x23, x24, [sp, #48]
   102a0:	mov	x24, x2
   102a4:	ldr	x23, [x6]
   102a8:	stp	x21, x22, [sp, #32]
   102ac:	mov	x21, x0
   102b0:	ldr	x3, [x3]
   102b4:	mov	x2, x23
   102b8:	ldr	x22, [x5]
   102bc:	stp	x19, x20, [sp, #16]
   102c0:	mov	x20, x1
   102c4:	mov	w1, #0xa3                  	// #163
   102c8:	mov	x0, x22
   102cc:	bl	0 <grub_real_dprintf>
   102d0:	mov	x0, #0x27                  	// #39
   102d4:	bl	0 <grub_malloc>
   102d8:	cbz	x0, 10358 <grub_script_add_arglist+0xd0>
   102dc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   102e0:	mov	x19, x0
   102e4:	mov	x2, x23
   102e8:	mov	x0, x22
   102ec:	ldr	x3, [x1]
   102f0:	mov	x4, x19
   102f4:	mov	w1, #0x32                  	// #50
   102f8:	bl	0 <grub_real_dprintf>
   102fc:	ldr	x1, [x21, #16]
   10300:	add	x0, x19, #0x8
   10304:	str	x1, [x19]
   10308:	str	x19, [x21, #16]
   1030c:	str	xzr, [x19, #8]
   10310:	str	x24, [x0, #8]
   10314:	str	wzr, [x0, #16]
   10318:	cbz	x20, 10370 <grub_script_add_arglist+0xe8>
   1031c:	ldr	w1, [x20, #16]
   10320:	mov	x2, x20
   10324:	add	w1, w1, #0x1
   10328:	str	w1, [x20, #16]
   1032c:	nop
   10330:	mov	x3, x2
   10334:	ldr	x2, [x2]
   10338:	cbnz	x2, 10330 <grub_script_add_arglist+0xa8>
   1033c:	str	x0, [x3]
   10340:	mov	x0, x20
   10344:	ldp	x19, x20, [sp, #16]
   10348:	ldp	x21, x22, [sp, #32]
   1034c:	ldp	x23, x24, [sp, #48]
   10350:	ldp	x29, x30, [sp], #64
   10354:	ret
   10358:	mov	x0, x20
   1035c:	ldp	x19, x20, [sp, #16]
   10360:	ldp	x21, x22, [sp, #32]
   10364:	ldp	x23, x24, [sp, #48]
   10368:	ldp	x29, x30, [sp], #64
   1036c:	ret
   10370:	mov	w1, #0x1                   	// #1
   10374:	str	w1, [x0, #16]
   10378:	ldp	x19, x20, [sp, #16]
   1037c:	ldp	x21, x22, [sp, #32]
   10380:	ldp	x23, x24, [sp, #48]
   10384:	ldp	x29, x30, [sp], #64
   10388:	ret
   1038c:	nop
	...

00000000000103b0 <grub_script_create_cmdline>:
   103b0:	stp	x29, x30, [sp, #-64]!
   103b4:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   103b8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   103bc:	mov	x29, sp
   103c0:	adrp	x5, 0 <grub_normal_free_menu-0x498>
   103c4:	stp	x21, x22, [sp, #32]
   103c8:	ldr	x22, [x3]
   103cc:	str	x23, [sp, #48]
   103d0:	ldr	x3, [x2]
   103d4:	mov	x2, x22
   103d8:	ldr	x21, [x5]
   103dc:	mov	x23, x1
   103e0:	mov	w1, #0xc6                  	// #198
   103e4:	stp	x19, x20, [sp, #16]
   103e8:	mov	x20, x0
   103ec:	mov	x0, x21
   103f0:	bl	0 <grub_real_dprintf>
   103f4:	mov	x0, #0x27                  	// #39
   103f8:	bl	0 <grub_malloc>
   103fc:	cbz	x0, 10454 <grub_script_create_cmdline+0xa4>
   10400:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10404:	mov	x19, x0
   10408:	mov	x2, x22
   1040c:	mov	x0, x21
   10410:	ldr	x3, [x1]
   10414:	mov	x4, x19
   10418:	mov	w1, #0x32                  	// #50
   1041c:	bl	0 <grub_real_dprintf>
   10420:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10424:	add	x0, x19, #0x8
   10428:	ldr	x2, [x20, #16]
   1042c:	str	x2, [x19]
   10430:	ldr	x1, [x1]
   10434:	str	x19, [x20, #16]
   10438:	str	x1, [x19, #8]
   1043c:	stp	xzr, x23, [x0, #8]
   10440:	ldp	x19, x20, [sp, #16]
   10444:	ldp	x21, x22, [sp, #32]
   10448:	ldr	x23, [sp, #48]
   1044c:	ldp	x29, x30, [sp], #64
   10450:	ret
   10454:	mov	x0, #0x0                   	// #0
   10458:	ldp	x19, x20, [sp, #16]
   1045c:	ldp	x21, x22, [sp, #32]
   10460:	ldr	x23, [sp, #48]
   10464:	ldp	x29, x30, [sp], #64
   10468:	ret
   1046c:	nop
	...

0000000000010498 <grub_script_create_cmdif>:
   10498:	stp	x29, x30, [sp, #-80]!
   1049c:	adrp	x6, 0 <grub_normal_free_menu-0x498>
   104a0:	adrp	x5, 0 <grub_normal_free_menu-0x498>
   104a4:	mov	x29, sp
   104a8:	adrp	x4, 0 <grub_normal_free_menu-0x498>
   104ac:	stp	x23, x24, [sp, #48]
   104b0:	ldr	x24, [x6]
   104b4:	stp	x21, x22, [sp, #32]
   104b8:	mov	x21, x3
   104bc:	ldr	x3, [x5]
   104c0:	mov	x22, x2
   104c4:	ldr	x23, [x4]
   104c8:	mov	x2, x24
   104cc:	str	x25, [sp, #64]
   104d0:	mov	x25, x1
   104d4:	mov	w1, #0xdf                  	// #223
   104d8:	stp	x19, x20, [sp, #16]
   104dc:	mov	x20, x0
   104e0:	mov	x0, x23
   104e4:	bl	0 <grub_real_dprintf>
   104e8:	mov	x0, #0x37                  	// #55
   104ec:	bl	0 <grub_malloc>
   104f0:	cbz	x0, 10550 <grub_script_create_cmdif+0xb8>
   104f4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   104f8:	mov	x19, x0
   104fc:	mov	x2, x24
   10500:	mov	x0, x23
   10504:	ldr	x3, [x1]
   10508:	mov	x4, x19
   1050c:	mov	w1, #0x32                  	// #50
   10510:	bl	0 <grub_real_dprintf>
   10514:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10518:	add	x0, x19, #0x8
   1051c:	ldr	x2, [x20, #16]
   10520:	str	x2, [x19]
   10524:	ldr	x1, [x1]
   10528:	str	x19, [x20, #16]
   1052c:	str	x1, [x19, #8]
   10530:	stp	xzr, x25, [x0, #8]
   10534:	stp	x22, x21, [x0, #24]
   10538:	ldp	x19, x20, [sp, #16]
   1053c:	ldp	x21, x22, [sp, #32]
   10540:	ldp	x23, x24, [sp, #48]
   10544:	ldr	x25, [sp, #64]
   10548:	ldp	x29, x30, [sp], #80
   1054c:	ret
   10550:	mov	x0, #0x0                   	// #0
   10554:	ldp	x19, x20, [sp, #16]
   10558:	ldp	x21, x22, [sp, #32]
   1055c:	ldp	x23, x24, [sp, #48]
   10560:	ldr	x25, [sp, #64]
   10564:	ldp	x29, x30, [sp], #80
   10568:	ret
   1056c:	nop
	...

0000000000010598 <grub_script_create_cmdfor>:
   10598:	stp	x29, x30, [sp, #-80]!
   1059c:	adrp	x6, 0 <grub_normal_free_menu-0x498>
   105a0:	adrp	x5, 0 <grub_normal_free_menu-0x498>
   105a4:	mov	x29, sp
   105a8:	adrp	x4, 0 <grub_normal_free_menu-0x498>
   105ac:	stp	x23, x24, [sp, #48]
   105b0:	ldr	x24, [x6]
   105b4:	stp	x21, x22, [sp, #32]
   105b8:	mov	x21, x3
   105bc:	ldr	x3, [x5]
   105c0:	mov	x22, x2
   105c4:	ldr	x23, [x4]
   105c8:	mov	x2, x24
   105cc:	str	x25, [sp, #64]
   105d0:	mov	x25, x1
   105d4:	mov	w1, #0xf7                  	// #247
   105d8:	stp	x19, x20, [sp, #16]
   105dc:	mov	x20, x0
   105e0:	mov	x0, x23
   105e4:	bl	0 <grub_real_dprintf>
   105e8:	mov	x0, #0x37                  	// #55
   105ec:	bl	0 <grub_malloc>
   105f0:	cbz	x0, 10650 <grub_script_create_cmdfor+0xb8>
   105f4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   105f8:	mov	x19, x0
   105fc:	mov	x2, x24
   10600:	mov	x0, x23
   10604:	ldr	x3, [x1]
   10608:	mov	x4, x19
   1060c:	mov	w1, #0x32                  	// #50
   10610:	bl	0 <grub_real_dprintf>
   10614:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10618:	add	x0, x19, #0x8
   1061c:	ldr	x2, [x20, #16]
   10620:	str	x2, [x19]
   10624:	ldr	x1, [x1]
   10628:	str	x19, [x20, #16]
   1062c:	str	x1, [x19, #8]
   10630:	stp	xzr, x25, [x0, #8]
   10634:	stp	x22, x21, [x0, #24]
   10638:	ldp	x19, x20, [sp, #16]
   1063c:	ldp	x21, x22, [sp, #32]
   10640:	ldp	x23, x24, [sp, #48]
   10644:	ldr	x25, [sp, #64]
   10648:	ldp	x29, x30, [sp], #80
   1064c:	ret
   10650:	mov	x0, #0x0                   	// #0
   10654:	ldp	x19, x20, [sp, #16]
   10658:	ldp	x21, x22, [sp, #32]
   1065c:	ldp	x23, x24, [sp, #48]
   10660:	ldr	x25, [sp, #64]
   10664:	ldp	x29, x30, [sp], #80
   10668:	ret
   1066c:	nop
	...

0000000000010698 <grub_script_create_cmdwhile>:
   10698:	stp	x29, x30, [sp, #-64]!
   1069c:	mov	x29, sp
   106a0:	stp	x19, x20, [sp, #16]
   106a4:	mov	x20, x0
   106a8:	mov	x0, #0x37                  	// #55
   106ac:	stp	x21, x22, [sp, #32]
   106b0:	mov	x22, x2
   106b4:	mov	w21, w3
   106b8:	str	x23, [sp, #48]
   106bc:	mov	x23, x1
   106c0:	bl	0 <grub_malloc>
   106c4:	cbz	x0, 1072c <grub_script_create_cmdwhile+0x94>
   106c8:	mov	x19, x0
   106cc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   106d0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   106d4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   106d8:	ldr	x3, [x1]
   106dc:	mov	x4, x19
   106e0:	ldr	x0, [x0]
   106e4:	mov	w1, #0x32                  	// #50
   106e8:	ldr	x2, [x2]
   106ec:	bl	0 <grub_real_dprintf>
   106f0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   106f4:	add	x0, x19, #0x8
   106f8:	ldr	x2, [x20, #16]
   106fc:	str	x2, [x19]
   10700:	ldr	x1, [x1]
   10704:	str	x19, [x20, #16]
   10708:	str	x1, [x19, #8]
   1070c:	stp	xzr, x23, [x0, #8]
   10710:	str	x22, [x0, #24]
   10714:	str	w21, [x0, #32]
   10718:	ldp	x19, x20, [sp, #16]
   1071c:	ldp	x21, x22, [sp, #32]
   10720:	ldr	x23, [sp, #48]
   10724:	ldp	x29, x30, [sp], #64
   10728:	ret
   1072c:	mov	x0, #0x0                   	// #0
   10730:	ldp	x19, x20, [sp, #16]
   10734:	ldp	x21, x22, [sp, #32]
   10738:	ldr	x23, [sp, #48]
   1073c:	ldp	x29, x30, [sp], #64
   10740:	ret
   10744:	nop
	...

0000000000010768 <grub_script_append_cmd>:
   10768:	stp	x29, x30, [sp, #-64]!
   1076c:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   10770:	adrp	x5, 0 <grub_normal_free_menu-0x498>
   10774:	adrp	x4, 0 <grub_normal_free_menu-0x498>
   10778:	mov	x29, sp
   1077c:	ldr	x3, [x3]
   10780:	stp	x21, x22, [sp, #32]
   10784:	mov	x21, x0
   10788:	ldr	x22, [x4]
   1078c:	stp	x23, x24, [sp, #48]
   10790:	ldr	x23, [x5]
   10794:	mov	x0, x22
   10798:	stp	x19, x20, [sp, #16]
   1079c:	mov	x20, x2
   107a0:	mov	x19, x1
   107a4:	mov	x2, x23
   107a8:	mov	w1, #0x126                 	// #294
   107ac:	bl	0 <grub_real_dprintf>
   107b0:	cbz	x20, 107d0 <grub_script_append_cmd+0x68>
   107b4:	mov	x3, x19
   107b8:	cbz	x19, 107e8 <grub_script_append_cmd+0x80>
   107bc:	nop
   107c0:	mov	x0, x3
   107c4:	ldr	x3, [x3, #8]
   107c8:	cbnz	x3, 107c0 <grub_script_append_cmd+0x58>
   107cc:	str	x20, [x0, #8]
   107d0:	mov	x0, x19
   107d4:	ldp	x19, x20, [sp, #16]
   107d8:	ldp	x21, x22, [sp, #32]
   107dc:	ldp	x23, x24, [sp, #48]
   107e0:	ldp	x29, x30, [sp], #64
   107e4:	ret
   107e8:	mov	x0, #0x1f                  	// #31
   107ec:	bl	0 <grub_malloc>
   107f0:	mov	x24, x0
   107f4:	cbz	x0, 107d0 <grub_script_append_cmd+0x68>
   107f8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   107fc:	mov	x2, x23
   10800:	mov	x0, x22
   10804:	mov	x4, x24
   10808:	ldr	x3, [x1]
   1080c:	mov	w1, #0x32                  	// #50
   10810:	add	x19, x24, #0x8
   10814:	bl	0 <grub_real_dprintf>
   10818:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   1081c:	ldr	x1, [x21, #16]
   10820:	str	x1, [x24]
   10824:	ldr	x0, [x0]
   10828:	str	x24, [x21, #16]
   1082c:	stp	x0, x20, [x24, #8]
   10830:	mov	x0, x19
   10834:	ldp	x19, x20, [sp, #16]
   10838:	ldp	x21, x22, [sp, #32]
   1083c:	ldp	x23, x24, [sp, #48]
   10840:	ldp	x29, x30, [sp], #64
   10844:	ret
	...

0000000000010870 <grub_script_create>:
   10870:	stp	x29, x30, [sp, #-32]!
   10874:	mov	x29, sp
   10878:	stp	x19, x20, [sp, #16]
   1087c:	mov	x19, x0
   10880:	mov	x20, x1
   10884:	mov	x0, #0x28                  	// #40
   10888:	bl	0 <grub_malloc>
   1088c:	cbz	x0, 1089c <grub_script_create+0x2c>
   10890:	str	wzr, [x0]
   10894:	stp	x20, x19, [x0, #8]
   10898:	stp	xzr, xzr, [x0, #24]
   1089c:	ldp	x19, x20, [sp, #16]
   108a0:	ldp	x29, x30, [sp], #32
   108a4:	ret

00000000000108a8 <grub_script_parse>:
   108a8:	stp	x29, x30, [sp, #-80]!
   108ac:	mov	x29, sp
   108b0:	stp	x19, x20, [sp, #16]
   108b4:	stp	x21, x22, [sp, #32]
   108b8:	mov	x21, x0
   108bc:	mov	x22, x1
   108c0:	mov	x0, #0x28                  	// #40
   108c4:	stp	x23, x24, [sp, #48]
   108c8:	mov	x23, x2
   108cc:	bl	0 <grub_malloc>
   108d0:	mov	x19, x0
   108d4:	cbz	x0, 10950 <grub_script_parse+0xa8>
   108d8:	str	wzr, [x19]
   108dc:	mov	x0, #0x30                  	// #48
   108e0:	stp	xzr, xzr, [x19, #8]
   108e4:	stp	xzr, xzr, [x19, #24]
   108e8:	bl	0 <grub_zalloc>
   108ec:	mov	x20, x0
   108f0:	cbz	x0, 109d0 <grub_script_parse+0x128>
   108f4:	mov	x2, x22
   108f8:	mov	x3, x23
   108fc:	mov	x1, x21
   10900:	bl	13a10 <grub_script_lexer_init>
   10904:	mov	x22, x0
   10908:	cbz	x0, 109f4 <grub_script_parse+0x14c>
   1090c:	str	x22, [x20, #40]
   10910:	mov	x0, x20
   10914:	ldr	x23, [x20, #16]
   10918:	str	xzr, [x20, #16]
   1091c:	bl	14a30 <grub_script_yyparse>
   10920:	cbnz	w0, 10968 <grub_script_parse+0xc0>
   10924:	ldr	w0, [x20, #8]
   10928:	ldr	x21, [x20, #16]
   1092c:	cbnz	w0, 1096c <grub_script_parse+0xc4>
   10930:	ldp	x1, x2, [x20, #24]
   10934:	str	x23, [x20, #16]
   10938:	stp	x21, x2, [x19, #8]
   1093c:	mov	x0, x22
   10940:	str	x1, [x19, #32]
   10944:	bl	13af0 <grub_script_lexer_fini>
   10948:	mov	x0, x20
   1094c:	bl	0 <grub_free>
   10950:	mov	x0, x19
   10954:	ldp	x19, x20, [sp, #16]
   10958:	ldp	x21, x22, [sp, #32]
   1095c:	ldp	x23, x24, [sp, #48]
   10960:	ldp	x29, x30, [sp], #80
   10964:	ret
   10968:	ldr	x21, [x20, #16]
   1096c:	str	x23, [x20, #16]
   10970:	cbz	x21, 109c0 <grub_script_parse+0x118>
   10974:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   10978:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1097c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   10980:	stp	x25, x26, [sp, #64]
   10984:	ldr	x24, [x0]
   10988:	ldr	x26, [x2]
   1098c:	ldr	x25, [x1]
   10990:	mov	x23, x21
   10994:	mov	x4, x21
   10998:	mov	x3, x26
   1099c:	ldr	x21, [x21]
   109a0:	mov	x2, x25
   109a4:	mov	w1, #0x41                  	// #65
   109a8:	mov	x0, x24
   109ac:	bl	0 <grub_real_dprintf>
   109b0:	mov	x0, x23
   109b4:	bl	0 <grub_free>
   109b8:	cbnz	x21, 10990 <grub_script_parse+0xe8>
   109bc:	ldp	x25, x26, [sp, #64]
   109c0:	mov	x0, x22
   109c4:	bl	13af0 <grub_script_lexer_fini>
   109c8:	mov	x0, x20
   109cc:	bl	0 <grub_free>
   109d0:	mov	x0, x19
   109d4:	mov	x19, #0x0                   	// #0
   109d8:	bl	0 <grub_free>
   109dc:	mov	x0, x19
   109e0:	ldp	x19, x20, [sp, #16]
   109e4:	ldp	x21, x22, [sp, #32]
   109e8:	ldp	x23, x24, [sp, #48]
   109ec:	ldp	x29, x30, [sp], #80
   109f0:	ret
   109f4:	mov	x0, x19
   109f8:	bl	0 <grub_free>
   109fc:	mov	x0, x20
   10a00:	mov	x19, #0x0                   	// #0
   10a04:	bl	0 <grub_free>
   10a08:	b	10950 <grub_script_parse+0xa8>
   10a0c:	nop
	...
   10a28:	stp	x29, x30, [sp, #-48]!
   10a2c:	mov	x29, sp
   10a30:	str	x21, [sp, #32]
   10a34:	mov	x21, x0
   10a38:	ldr	x0, [x2]
   10a3c:	cbz	x0, 10a90 <grub_script_parse+0x1e8>
   10a40:	stp	x19, x20, [sp, #16]
   10a44:	mov	x19, x2
   10a48:	mov	w1, #0xa                   	// #10
   10a4c:	bl	0 <grub_strchr>
   10a50:	mov	x20, x0
   10a54:	ldr	x0, [x19]
   10a58:	cbz	x20, 10a84 <grub_script_parse+0x1dc>
   10a5c:	sub	x1, x20, x0
   10a60:	add	x20, x20, #0x1
   10a64:	bl	0 <grub_strndup>
   10a68:	str	x0, [x21]
   10a6c:	str	x20, [x19]
   10a70:	mov	w0, #0x0                   	// #0
   10a74:	ldp	x19, x20, [sp, #16]
   10a78:	ldr	x21, [sp, #32]
   10a7c:	ldp	x29, x30, [sp], #48
   10a80:	ret
   10a84:	bl	0 <grub_strdup>
   10a88:	str	x0, [x21]
   10a8c:	b	10a6c <grub_script_parse+0x1c4>
   10a90:	str	xzr, [x21]
   10a94:	mov	w0, #0x0                   	// #0
   10a98:	ldr	x21, [sp, #32]
   10a9c:	ldp	x29, x30, [sp], #48
   10aa0:	ret
   10aa4:	nop
   10aa8:	stp	x29, x30, [sp, #-64]!
   10aac:	mov	x29, sp
   10ab0:	stp	x21, x22, [sp, #32]
   10ab4:	mov	x22, x0
   10ab8:	ldr	x0, [x3, #8]
   10abc:	cbz	x0, 10b60 <grub_script_parse+0x2b8>
   10ac0:	mov	x21, x1
   10ac4:	stp	x19, x20, [sp, #16]
   10ac8:	mov	x20, x3
   10acc:	str	x23, [sp, #48]
   10ad0:	mov	x23, x2
   10ad4:	mov	x19, #0x0                   	// #0
   10ad8:	ldr	x3, [x20]
   10adc:	mov	x2, x21
   10ae0:	mov	x1, x22
   10ae4:	ldr	x0, [x3, x19, lsl #3]
   10ae8:	bl	0 <grub_strncmp>
   10aec:	cbnz	w0, 10b00 <grub_script_parse+0x258>
   10af0:	ldr	x0, [x20]
   10af4:	ldr	x0, [x0, x19, lsl #3]
   10af8:	ldrb	w0, [x0, x21]
   10afc:	cbz	w0, 10b88 <grub_script_parse+0x2e0>
   10b00:	ldr	x3, [x20, #8]
   10b04:	add	x19, x19, #0x1
   10b08:	cmp	x3, x19
   10b0c:	b.hi	10ad8 <grub_script_parse+0x230>  // b.pmore
   10b10:	cmp	x3, x19
   10b14:	b.eq	10b70 <grub_script_parse+0x2c8>  // b.none
   10b18:	cmp	x21, #0x1
   10b1c:	b.ne	10b2c <grub_script_parse+0x284>  // b.any
   10b20:	ldrb	w0, [x22]
   10b24:	cmp	w0, #0x23
   10b28:	b.eq	10b90 <grub_script_parse+0x2e8>  // b.none
   10b2c:	ldr	x0, [x20]
   10b30:	ldr	x0, [x0, x19, lsl #3]
   10b34:	bl	0 <grub_env_get>
   10b38:	cbz	x0, 10b70 <grub_script_parse+0x2c8>
   10b3c:	ldr	x1, [x23]
   10b40:	mov	x3, x1
   10b44:	ldrb	w2, [x0]
   10b48:	strb	w2, [x1], #1
   10b4c:	ldrb	w2, [x0], #1
   10b50:	cbnz	w2, 10b40 <grub_script_parse+0x298>
   10b54:	ldp	x19, x20, [sp, #16]
   10b58:	str	x3, [x23]
   10b5c:	ldr	x23, [sp, #48]
   10b60:	mov	w0, #0x0                   	// #0
   10b64:	ldp	x21, x22, [sp, #32]
   10b68:	ldp	x29, x30, [sp], #64
   10b6c:	ret
   10b70:	mov	w0, #0x0                   	// #0
   10b74:	ldp	x19, x20, [sp, #16]
   10b78:	ldp	x21, x22, [sp, #32]
   10b7c:	ldr	x23, [sp, #48]
   10b80:	ldp	x29, x30, [sp], #64
   10b84:	ret
   10b88:	ldr	x3, [x20, #8]
   10b8c:	b	10b10 <grub_script_parse+0x268>
   10b90:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   10b94:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   10b98:	ldr	x0, [x23]
   10b9c:	mov	x1, #0x1e                  	// #30
   10ba0:	ldr	x3, [x3]
   10ba4:	ldr	x2, [x2]
   10ba8:	ldr	x3, [x3]
   10bac:	ldr	w3, [x3, #8]
   10bb0:	bl	0 <grub_snprintf>
   10bb4:	ldr	x0, [x23]
   10bb8:	bl	0 <grub_strlen>
   10bbc:	ldr	x1, [x23]
   10bc0:	ldp	x19, x20, [sp, #16]
   10bc4:	add	x1, x1, x0
   10bc8:	str	x1, [x23]
   10bcc:	ldr	x23, [sp, #48]
   10bd0:	b	10b60 <grub_script_parse+0x2b8>
   10bd4:	nop
	...
   10be8:	stp	x29, x30, [sp, #-48]!
   10bec:	mov	x29, sp
   10bf0:	stp	x21, x22, [sp, #32]
   10bf4:	mov	x22, x0
   10bf8:	ldr	x0, [x3, #8]
   10bfc:	cbz	x0, 10c88 <grub_script_parse+0x3e0>
   10c00:	mov	x21, x1
   10c04:	stp	x19, x20, [sp, #16]
   10c08:	mov	x20, x3
   10c0c:	mov	x19, #0x0                   	// #0
   10c10:	ldr	x3, [x20]
   10c14:	mov	x2, x21
   10c18:	mov	x1, x22
   10c1c:	ldr	x0, [x3, x19, lsl #3]
   10c20:	bl	0 <grub_strncmp>
   10c24:	cbnz	w0, 10c38 <grub_script_parse+0x390>
   10c28:	ldr	x0, [x20]
   10c2c:	ldr	x0, [x0, x19, lsl #3]
   10c30:	ldrb	w0, [x0, x21]
   10c34:	cbz	w0, 10cac <grub_script_parse+0x404>
   10c38:	ldr	x3, [x20, #8]
   10c3c:	add	x19, x19, #0x1
   10c40:	cmp	x3, x19
   10c44:	b.hi	10c10 <grub_script_parse+0x368>  // b.pmore
   10c48:	cmp	x3, x19
   10c4c:	b.eq	10c98 <grub_script_parse+0x3f0>  // b.none
   10c50:	cmp	x21, #0x1
   10c54:	b.ne	10c64 <grub_script_parse+0x3bc>  // b.any
   10c58:	ldrb	w0, [x22]
   10c5c:	cmp	w0, #0x23
   10c60:	b.eq	10cb4 <grub_script_parse+0x40c>  // b.none
   10c64:	ldr	x0, [x20]
   10c68:	ldr	x0, [x0, x19, lsl #3]
   10c6c:	bl	0 <grub_env_get>
   10c70:	cbz	x0, 10c98 <grub_script_parse+0x3f0>
   10c74:	bl	0 <grub_strlen>
   10c78:	ldr	x1, [x20, #16]
   10c7c:	add	x1, x1, x0
   10c80:	str	x1, [x20, #16]
   10c84:	ldp	x19, x20, [sp, #16]
   10c88:	mov	w0, #0x0                   	// #0
   10c8c:	ldp	x21, x22, [sp, #32]
   10c90:	ldp	x29, x30, [sp], #48
   10c94:	ret
   10c98:	mov	w0, #0x0                   	// #0
   10c9c:	ldp	x19, x20, [sp, #16]
   10ca0:	ldp	x21, x22, [sp, #32]
   10ca4:	ldp	x29, x30, [sp], #48
   10ca8:	ret
   10cac:	ldr	x3, [x20, #8]
   10cb0:	b	10c48 <grub_script_parse+0x3a0>
   10cb4:	ldr	x0, [x20, #16]
   10cb8:	add	x0, x0, #0x1e
   10cbc:	str	x0, [x20, #16]
   10cc0:	ldp	x19, x20, [sp, #16]
   10cc4:	b	10c88 <grub_script_parse+0x3e0>
   10cc8:	stp	x29, x30, [sp, #-32]!
   10ccc:	mov	x29, sp
   10cd0:	stp	x19, x20, [sp, #16]
   10cd4:	mov	x19, x0
   10cd8:	ldrb	w2, [x0]
   10cdc:	sub	w2, w2, #0x30
   10ce0:	cmp	w2, #0x9
   10ce4:	b.hi	10d04 <grub_script_parse+0x45c>  // b.pmore
   10ce8:	mov	x2, x19
   10cec:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10cf0:	ldp	x19, x20, [sp, #16]
   10cf4:	mov	w0, #0x12                  	// #18
   10cf8:	ldp	x29, x30, [sp], #32
   10cfc:	ldr	x1, [x1]
   10d00:	b	0 <grub_error>
   10d04:	mov	x20, x1
   10d08:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10d0c:	ldr	x1, [x1]
   10d10:	bl	0 <grub_strcmp>
   10d14:	cbz	w0, 10ce8 <grub_script_parse+0x440>
   10d18:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10d1c:	mov	x0, x19
   10d20:	ldr	x1, [x1]
   10d24:	bl	0 <grub_strcmp>
   10d28:	cbz	w0, 10ce8 <grub_script_parse+0x440>
   10d2c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10d30:	mov	x0, x19
   10d34:	ldr	x1, [x1]
   10d38:	bl	0 <grub_strcmp>
   10d3c:	cbz	w0, 10ce8 <grub_script_parse+0x440>
   10d40:	mov	x1, x20
   10d44:	mov	x0, x19
   10d48:	ldp	x19, x20, [sp, #16]
   10d4c:	ldp	x29, x30, [sp], #32
   10d50:	b	0 <grub_env_set>
   10d54:	nop
	...
   10d78:	stp	x29, x30, [sp, #-192]!
   10d7c:	mov	x29, sp
   10d80:	stp	x19, x20, [sp, #16]
   10d84:	stp	x21, x22, [sp, #32]
   10d88:	stp	x23, x24, [sp, #48]
   10d8c:	str	x0, [sp, #104]
   10d90:	str	x1, [sp, #120]
   10d94:	str	wzr, [sp, #144]
   10d98:	stp	xzr, xzr, [sp, #152]
   10d9c:	cbz	x0, 121a8 <grub_script_parse+0x1900>
   10da0:	stp	x25, x26, [sp, #64]
   10da4:	mov	w25, #0x2a                  	// #42
   10da8:	stp	x27, x28, [sp, #80]
   10dac:	ldr	x0, [sp, #104]
   10db0:	ldr	x0, [x0, #8]
   10db4:	cbz	x0, 11328 <grub_script_parse+0xa80>
   10db8:	add	x0, sp, #0x90
   10dbc:	str	x0, [sp, #112]
   10dc0:	bl	13f00 <grub_script_argv_next>
   10dc4:	cbnz	w0, 11050 <grub_script_parse+0x7a8>
   10dc8:	ldr	x0, [sp, #104]
   10dcc:	ldr	x19, [x0, #8]
   10dd0:	cbz	x19, 11318 <grub_script_parse+0xa70>
   10dd4:	nop
   10dd8:	ldr	w20, [x19]
   10ddc:	cmp	w20, #0x3
   10de0:	b.eq	110e0 <grub_script_parse+0x838>  // b.none
   10de4:	b.hi	11260 <grub_script_parse+0x9b8>  // b.pmore
   10de8:	cmp	w20, #0x1
   10dec:	b.eq	11738 <grub_script_parse+0xe90>  // b.none
   10df0:	cmp	w20, #0x2
   10df4:	b.ne	110dc <grub_script_parse+0x834>  // b.any
   10df8:	ldr	x20, [x19, #8]
   10dfc:	mov	x0, #0x1                   	// #1
   10e00:	stp	xzr, xzr, [sp, #168]
   10e04:	str	x0, [sp, #184]
   10e08:	ldrb	w1, [x20]
   10e0c:	cbz	w1, 11ee8 <grub_script_parse+0x1640>
   10e10:	mov	x2, x20
   10e14:	mov	x0, #0x0                   	// #0
   10e18:	cmp	w1, #0x24
   10e1c:	ldrb	w1, [x2, #1]!
   10e20:	cinc	x0, x0, eq  // eq = none
   10e24:	cbnz	w1, 10e18 <grub_script_parse+0x570>
   10e28:	lsl	x0, x0, #3
   10e2c:	bl	0 <grub_malloc>
   10e30:	str	x0, [sp, #168]
   10e34:	mov	x22, x20
   10e38:	mov	w21, #0x0                   	// #0
   10e3c:	ldrb	w2, [x20]
   10e40:	cbz	w2, 10e70 <grub_script_parse+0x5c8>
   10e44:	nop
   10e48:	ldrb	w1, [x22, #1]
   10e4c:	cmp	w2, #0x24
   10e50:	add	x0, x22, #0x1
   10e54:	b.eq	11078 <grub_script_parse+0x7d0>  // b.none
   10e58:	eor	w21, w21, #0x1
   10e5c:	cmp	w2, #0x5c
   10e60:	csel	w21, w21, wzr, eq  // eq = none
   10e64:	mov	w2, w1
   10e68:	mov	x22, x0
   10e6c:	cbnz	w2, 10e48 <grub_script_parse+0x5a0>
   10e70:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   10e74:	mov	x0, x20
   10e78:	ldr	x1, [x1]
   10e7c:	ldr	x1, [x1]
   10e80:	blr	x1
   10e84:	str	xzr, [sp, #128]
   10e88:	mov	x22, x0
   10e8c:	cbz	x0, 12034 <grub_script_parse+0x178c>
   10e90:	ldrb	w1, [x0]
   10e94:	mov	x20, x0
   10e98:	mov	w3, #0x0                   	// #0
   10e9c:	mov	w21, #0x24                  	// #36
   10ea0:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   10ea4:	nop
   10ea8:	cmp	w1, #0x24
   10eac:	add	x23, x20, #0x1
   10eb0:	b.eq	11764 <grub_script_parse+0xebc>  // b.none
   10eb4:	ldr	x2, [sp, #128]
   10eb8:	mov	w4, #0x5c                  	// #92
   10ebc:	cmp	w1, #0x5c
   10ec0:	b.ne	11888 <grub_script_parse+0xfe0>  // b.any
   10ec4:	cmp	x2, #0x0
   10ec8:	and	w4, w3, #0x1
   10ecc:	csel	w4, w4, wzr, ne  // ne = any
   10ed0:	eor	w0, w3, #0x1
   10ed4:	cbz	w4, 10ee4 <grub_script_parse+0x63c>
   10ed8:	add	x3, x2, #0x1
   10edc:	str	x3, [sp, #128]
   10ee0:	strb	w1, [x2]
   10ee4:	ldrb	w1, [x20, #1]
   10ee8:	mov	w3, w0
   10eec:	mov	x20, x23
   10ef0:	cbnz	w1, 10ea8 <grub_script_parse+0x600>
   10ef4:	ldr	x0, [sp, #128]
   10ef8:	cbz	x0, 11a20 <grub_script_parse+0x1178>
   10efc:	strb	wzr, [x0]
   10f00:	mov	x0, x22
   10f04:	bl	0 <grub_strlen>
   10f08:	ldr	x1, [sp, #184]
   10f0c:	add	x0, x0, x1
   10f10:	bl	0 <grub_malloc>
   10f14:	mov	x23, x0
   10f18:	cbz	x0, 11a40 <grub_script_parse+0x1198>
   10f1c:	str	x23, [sp, #128]
   10f20:	mov	w3, #0x0                   	// #0
   10f24:	mov	w20, #0x24                  	// #36
   10f28:	ldrb	w1, [x22]
   10f2c:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   10f30:	cmp	w1, #0x24
   10f34:	add	x21, x22, #0x1
   10f38:	b.eq	11a8c <grub_script_parse+0x11e4>  // b.none
   10f3c:	ldr	x2, [sp, #128]
   10f40:	mov	w4, #0x5c                  	// #92
   10f44:	cmp	w1, #0x5c
   10f48:	b.ne	11b98 <grub_script_parse+0x12f0>  // b.any
   10f4c:	cmp	x2, #0x0
   10f50:	and	w4, w3, #0x1
   10f54:	csel	w4, w4, wzr, ne  // ne = any
   10f58:	eor	w0, w3, #0x1
   10f5c:	cbz	w4, 10f6c <grub_script_parse+0x6c4>
   10f60:	add	x3, x2, #0x1
   10f64:	str	x3, [sp, #128]
   10f68:	strb	w1, [x2]
   10f6c:	ldrb	w1, [x22, #1]
   10f70:	mov	w3, w0
   10f74:	mov	x22, x21
   10f78:	cbnz	w1, 10f30 <grub_script_parse+0x688>
   10f7c:	ldr	x0, [sp, #128]
   10f80:	cbz	x0, 10f88 <grub_script_parse+0x6e0>
   10f84:	strb	wzr, [x0]
   10f88:	mov	x0, x23
   10f8c:	bl	0 <grub_strlen>
   10f90:	lsl	w0, w0, #1
   10f94:	add	w0, w0, #0x1
   10f98:	sxtw	x0, w0
   10f9c:	bl	0 <grub_malloc>
   10fa0:	mov	x20, x0
   10fa4:	cbz	x0, 11004 <grub_script_parse+0x75c>
   10fa8:	mov	x4, x23
   10fac:	ldrb	w2, [x4], #1
   10fb0:	cbz	w2, 12058 <grub_script_parse+0x17b0>
   10fb4:	mov	w0, #0x0                   	// #0
   10fb8:	mov	x3, #0x0                   	// #0
   10fbc:	mov	w7, #0x5c                  	// #92
   10fc0:	mov	w8, #0x3f                  	// #63
   10fc4:	nop
   10fc8:	add	w1, w0, #0x1
   10fcc:	cmp	w2, #0x2a
   10fd0:	ccmp	w2, w7, #0x4, ne  // ne = any
   10fd4:	add	w0, w0, #0x2
   10fd8:	sxtw	x5, w1
   10fdc:	ccmp	w2, w8, #0x4, ne  // ne = any
   10fe0:	add	x6, x20, x5
   10fe4:	b.ne	11d7c <grub_script_parse+0x14d4>  // b.any
   10fe8:	strb	w7, [x20, x3]
   10fec:	sxtw	x3, w0
   10ff0:	strb	w2, [x20, w1, sxtw]
   10ff4:	add	x6, x20, x3
   10ff8:	ldrb	w2, [x4], #1
   10ffc:	cbnz	w2, 10fc8 <grub_script_parse+0x720>
   11000:	strb	wzr, [x6]
   11004:	mov	x0, x20
   11008:	bl	0 <grub_strlen>
   1100c:	mov	x1, x20
   11010:	mov	x2, x0
   11014:	add	x0, sp, #0x90
   11018:	bl	13fa8 <grub_script_argv_append>
   1101c:	mov	w21, w0
   11020:	mov	x0, x20
   11024:	cbnz	w21, 11f10 <grub_script_parse+0x1668>
   11028:	bl	0 <grub_free>
   1102c:	mov	x20, #0x0                   	// #0
   11030:	mov	x0, x23
   11034:	bl	0 <grub_free>
   11038:	ldr	x0, [sp, #176]
   1103c:	cbnz	x0, 11a60 <grub_script_parse+0x11b8>
   11040:	ldr	x0, [sp, #168]
   11044:	bl	0 <grub_free>
   11048:	cbz	w21, 11310 <grub_script_parse+0xa68>
   1104c:	nop
   11050:	ldp	x25, x26, [sp, #64]
   11054:	ldp	x27, x28, [sp, #80]
   11058:	ldr	x0, [sp, #112]
   1105c:	bl	13cc8 <grub_script_argv_free>
   11060:	mov	w0, #0x1                   	// #1
   11064:	ldp	x19, x20, [sp, #16]
   11068:	ldp	x21, x22, [sp, #32]
   1106c:	ldp	x23, x24, [sp, #48]
   11070:	ldp	x29, x30, [sp], #192
   11074:	ret
   11078:	cbnz	w21, 115d4 <grub_script_parse+0xd2c>
   1107c:	cmp	w1, #0x5a
   11080:	b.hi	11524 <grub_script_parse+0xc7c>  // b.pmore
   11084:	cmp	w1, #0x40
   11088:	b.hi	11548 <grub_script_parse+0xca0>  // b.pmore
   1108c:	cmp	w1, #0x39
   11090:	b.hi	11518 <grub_script_parse+0xc70>  // b.pmore
   11094:	cmp	w1, #0x2f
   11098:	b.hi	11584 <grub_script_parse+0xcdc>  // b.pmore
   1109c:	cmp	w1, #0x23
   110a0:	b.ne	10e64 <grub_script_parse+0x5bc>  // b.any
   110a4:	ldp	x24, x23, [sp, #168]
   110a8:	mov	x1, #0x1                   	// #1
   110ac:	add	x2, x23, x1
   110b0:	str	x2, [sp, #176]
   110b4:	bl	0 <grub_strndup>
   110b8:	ldr	x1, [sp, #168]
   110bc:	str	x0, [x24, x23, lsl #3]
   110c0:	ldr	x0, [sp, #176]
   110c4:	add	x0, x1, x0, lsl #3
   110c8:	ldur	x0, [x0, #-8]
   110cc:	cbz	x0, 11a40 <grub_script_parse+0x1198>
   110d0:	ldrb	w1, [x22, #2]
   110d4:	add	x0, x22, #0x2
   110d8:	b	10e64 <grub_script_parse+0x5bc>
   110dc:	cbnz	w20, 11310 <grub_script_parse+0xa68>
   110e0:	add	x0, sp, #0xa8
   110e4:	ldr	x22, [x19, #8]
   110e8:	str	wzr, [sp, #168]
   110ec:	stp	xzr, xzr, [sp, #176]
   110f0:	bl	13f00 <grub_script_argv_next>
   110f4:	mov	w28, w0
   110f8:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   110fc:	ldrb	w0, [x22]
   11100:	sub	w0, w0, #0x30
   11104:	cmp	w0, #0x9
   11108:	b.ls	11138 <grub_script_parse+0x890>  // b.plast
   1110c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11110:	mov	x0, x22
   11114:	ldr	x1, [x1]
   11118:	bl	0 <grub_strcmp>
   1111c:	cbz	w0, 11138 <grub_script_parse+0x890>
   11120:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11124:	mov	x0, x22
   11128:	ldr	x1, [x1]
   1112c:	bl	0 <grub_strcmp>
   11130:	cbnz	w0, 11cd4 <grub_script_parse+0x142c>
   11134:	nop
   11138:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   1113c:	ldr	x21, [x0]
   11140:	ldr	x0, [x21]
   11144:	cbz	x0, 11ec0 <grub_script_parse+0x1618>
   11148:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1114c:	mov	x0, x22
   11150:	ldr	x1, [x1]
   11154:	bl	0 <grub_strcmp>
   11158:	cbnz	w0, 11de0 <grub_script_parse+0x1538>
   1115c:	ldr	x3, [x21]
   11160:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   11164:	mov	x1, #0xe                   	// #14
   11168:	add	x0, sp, #0x80
   1116c:	ldr	x2, [x2]
   11170:	ldr	w3, [x3, #8]
   11174:	bl	0 <grub_snprintf>
   11178:	add	x0, sp, #0x80
   1117c:	bl	0 <grub_strlen>
   11180:	add	x1, sp, #0x80
   11184:	mov	x2, x0
   11188:	add	x0, sp, #0xa8
   1118c:	bl	13fa8 <grub_script_argv_append>
   11190:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11194:	ldr	x0, [sp, #176]
   11198:	str	x0, [sp, #96]
   1119c:	cbz	x0, 12194 <grub_script_parse+0x18ec>
   111a0:	mov	x20, x0
   111a4:	mov	x23, x0
   111a8:	mov	w21, #0x0                   	// #0
   111ac:	mov	w22, #0x5c                  	// #92
   111b0:	mov	w24, #0x3f                  	// #63
   111b4:	ldr	x27, [x20], #8
   111b8:	cbz	x27, 1202c <grub_script_parse+0x1784>
   111bc:	nop
   111c0:	cbnz	w28, 114ec <grub_script_parse+0xc44>
   111c4:	cbnz	w21, 11724 <grub_script_parse+0xe7c>
   111c8:	ldr	w0, [x19]
   111cc:	cbnz	w0, 1163c <grub_script_parse+0xd94>
   111d0:	mov	x0, x27
   111d4:	bl	0 <grub_strlen>
   111d8:	lsl	w0, w0, #1
   111dc:	add	w0, w0, #0x1
   111e0:	sxtw	x0, w0
   111e4:	bl	0 <grub_malloc>
   111e8:	mov	x26, x0
   111ec:	cbz	x0, 114e4 <grub_script_parse+0xc3c>
   111f0:	mov	x2, x27
   111f4:	mov	x4, x0
   111f8:	ldrb	w3, [x2], #1
   111fc:	cbnz	w3, 11218 <grub_script_parse+0x970>
   11200:	b	11250 <grub_script_parse+0x9a8>
   11204:	mov	x5, x4
   11208:	mov	x4, x6
   1120c:	strb	w3, [x5]
   11210:	ldrb	w3, [x2], #1
   11214:	cbz	w3, 11250 <grub_script_parse+0x9a8>
   11218:	add	x5, x4, #0x1
   1121c:	cmp	w3, #0x5c
   11220:	mov	x6, x5
   11224:	b.ne	11204 <grub_script_parse+0x95c>  // b.any
   11228:	strb	w3, [x4]
   1122c:	ldrb	w0, [x2]
   11230:	cmp	w0, #0x3f
   11234:	ccmp	w0, w25, #0x4, ne  // ne = any
   11238:	b.eq	11714 <grub_script_parse+0xe6c>  // b.none
   1123c:	strb	w3, [x5]
   11240:	add	x4, x4, #0x2
   11244:	ldrb	w3, [x2], #1
   11248:	cbnz	w3, 11218 <grub_script_parse+0x970>
   1124c:	nop
   11250:	sub	x2, x4, x26
   11254:	mov	x1, x26
   11258:	strb	wzr, [x4]
   1125c:	b	116bc <grub_script_parse+0xe14>
   11260:	cmp	w20, #0x5
   11264:	b.hi	113fc <grub_script_parse+0xb54>  // b.pmore
   11268:	ldr	x21, [x19, #8]
   1126c:	mov	x0, x21
   11270:	bl	0 <grub_strlen>
   11274:	lsl	w0, w0, #1
   11278:	add	w0, w0, #0x1
   1127c:	sxtw	x0, w0
   11280:	bl	0 <grub_malloc>
   11284:	mov	x20, x0
   11288:	cbz	x0, 11050 <grub_script_parse+0x7a8>
   1128c:	mov	x0, x21
   11290:	ldrb	w2, [x0], #1
   11294:	cbz	w2, 11ef0 <grub_script_parse+0x1648>
   11298:	mov	w1, #0x0                   	// #0
   1129c:	mov	x4, #0x0                   	// #0
   112a0:	mov	w7, #0x5c                  	// #92
   112a4:	mov	w8, #0x3f                  	// #63
   112a8:	add	w3, w1, #0x1
   112ac:	cmp	w2, #0x2a
   112b0:	ccmp	w2, w7, #0x4, ne  // ne = any
   112b4:	add	w1, w1, #0x2
   112b8:	sxtw	x5, w3
   112bc:	ccmp	w2, w8, #0x4, ne  // ne = any
   112c0:	add	x6, x20, x5
   112c4:	b.ne	115dc <grub_script_parse+0xd34>  // b.any
   112c8:	strb	w7, [x20, x4]
   112cc:	sxtw	x4, w1
   112d0:	strb	w2, [x20, w3, sxtw]
   112d4:	add	x6, x20, x4
   112d8:	ldrb	w2, [x0], #1
   112dc:	cbnz	w2, 112a8 <grub_script_parse+0xa00>
   112e0:	strb	wzr, [x6]
   112e4:	mov	x0, x20
   112e8:	bl	0 <grub_strlen>
   112ec:	mov	x2, x0
   112f0:	mov	x1, x20
   112f4:	add	x0, sp, #0x90
   112f8:	bl	13fa8 <grub_script_argv_append>
   112fc:	mov	w1, w0
   11300:	mov	x0, x20
   11304:	mov	w20, w1
   11308:	bl	0 <grub_free>
   1130c:	cbnz	w20, 11050 <grub_script_parse+0x7a8>
   11310:	ldr	x19, [x19, #24]
   11314:	cbnz	x19, 10dd8 <grub_script_parse+0x530>
   11318:	ldr	x0, [sp, #104]
   1131c:	ldr	x0, [x0]
   11320:	str	x0, [sp, #104]
   11324:	cbnz	x0, 10dac <grub_script_parse+0x504>
   11328:	ldr	w0, [sp, #144]
   1132c:	ldr	x1, [sp, #152]
   11330:	sub	w0, w0, #0x1
   11334:	ldp	x25, x26, [sp, #64]
   11338:	ldp	x27, x28, [sp, #80]
   1133c:	add	x1, x1, w0, uxtw #3
   11340:	ldr	x1, [x1]
   11344:	cbz	x1, 121c0 <grub_script_parse+0x1918>
   11348:	ldp	x0, x1, [sp, #144]
   1134c:	stp	x0, x1, [sp, #168]
   11350:	ldr	x0, [sp, #176]
   11354:	ldr	x1, [sp, #160]
   11358:	ldr	x0, [x0]
   1135c:	str	wzr, [sp, #144]
   11360:	str	xzr, [sp, #152]
   11364:	str	x1, [sp, #184]
   11368:	cbz	x0, 120b4 <grub_script_parse+0x180c>
   1136c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11370:	mov	x21, #0x0                   	// #0
   11374:	ldr	x22, [x1]
   11378:	str	xzr, [sp, #128]
   1137c:	ldr	x1, [x22]
   11380:	cbz	x1, 120d8 <grub_script_parse+0x1830>
   11384:	ldr	x2, [x1]
   11388:	add	x1, sp, #0x80
   1138c:	blr	x2
   11390:	cbnz	w0, 121b4 <grub_script_parse+0x190c>
   11394:	ldr	x0, [sp, #128]
   11398:	cbz	x0, 120d8 <grub_script_parse+0x1830>
   1139c:	ldr	x1, [x0]
   113a0:	add	x3, sp, #0x90
   113a4:	str	x3, [sp, #112]
   113a8:	mov	x20, #0x0                   	// #0
   113ac:	mov	w2, #0x0                   	// #0
   113b0:	cbz	x1, 1218c <grub_script_parse+0x18e4>
   113b4:	add	x19, x20, #0x8
   113b8:	cbnz	w2, 113d0 <grub_script_parse+0xb28>
   113bc:	add	x0, sp, #0x90
   113c0:	bl	13f00 <grub_script_argv_next>
   113c4:	cbz	w0, 12060 <grub_script_parse+0x17b8>
   113c8:	ldr	x0, [sp, #128]
   113cc:	nop
   113d0:	ldr	x0, [x0, x20]
   113d4:	mov	x20, x19
   113d8:	bl	0 <grub_free>
   113dc:	ldr	x0, [sp, #128]
   113e0:	ldr	x1, [x0, x19]
   113e4:	add	x19, x19, #0x8
   113e8:	cbnz	x1, 113d0 <grub_script_parse+0xb28>
   113ec:	bl	0 <grub_free>
   113f0:	add	x0, sp, #0xa8
   113f4:	bl	13cc8 <grub_script_argv_free>
   113f8:	b	11058 <grub_script_parse+0x7b0>
   113fc:	cmp	w20, #0x6
   11400:	b.ne	11310 <grub_script_parse+0xa68>  // b.any
   11404:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11408:	add	x0, sp, #0x90
   1140c:	mov	x2, #0x1                   	// #1
   11410:	ldr	x1, [x1]
   11414:	bl	13fa8 <grub_script_argv_append>
   11418:	mov	w20, w0
   1141c:	cbnz	w0, 11050 <grub_script_parse+0x7a8>
   11420:	ldr	x22, [x19, #8]
   11424:	mov	x0, x22
   11428:	bl	0 <grub_strlen>
   1142c:	lsl	w0, w0, #1
   11430:	add	w0, w0, #0x1
   11434:	sxtw	x0, w0
   11438:	bl	0 <grub_malloc>
   1143c:	mov	x21, x0
   11440:	cbz	x0, 11050 <grub_script_parse+0x7a8>
   11444:	mov	x0, x22
   11448:	ldrb	w2, [x0], #1
   1144c:	cbz	w2, 11ef8 <grub_script_parse+0x1650>
   11450:	mov	x3, #0x0                   	// #0
   11454:	mov	w6, #0x5c                  	// #92
   11458:	mov	w7, #0x3f                  	// #63
   1145c:	nop
   11460:	add	w1, w20, #0x1
   11464:	cmp	w2, #0x2a
   11468:	ccmp	w2, w6, #0x4, ne  // ne = any
   1146c:	add	w20, w20, #0x2
   11470:	sxtw	x4, w1
   11474:	ccmp	w2, w7, #0x4, ne  // ne = any
   11478:	add	x5, x21, x4
   1147c:	b.ne	115f4 <grub_script_parse+0xd4c>  // b.any
   11480:	strb	w6, [x21, x3]
   11484:	sxtw	x3, w20
   11488:	strb	w2, [x21, w1, sxtw]
   1148c:	add	x5, x21, x3
   11490:	ldrb	w2, [x0], #1
   11494:	cbnz	w2, 11460 <grub_script_parse+0xbb8>
   11498:	strb	wzr, [x5]
   1149c:	mov	x0, x21
   114a0:	bl	0 <grub_strlen>
   114a4:	mov	x2, x0
   114a8:	mov	x1, x21
   114ac:	add	x0, sp, #0x90
   114b0:	bl	13fa8 <grub_script_argv_append>
   114b4:	cbnz	w0, 11628 <grub_script_parse+0xd80>
   114b8:	mov	x0, x21
   114bc:	bl	0 <grub_free>
   114c0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   114c4:	add	x0, sp, #0x90
   114c8:	mov	x2, #0x1                   	// #1
   114cc:	ldr	x1, [x1]
   114d0:	bl	13fa8 <grub_script_argv_append>
   114d4:	cbnz	w0, 11050 <grub_script_parse+0x7a8>
   114d8:	ldr	x0, [x19, #16]
   114dc:	str	x0, [sp, #160]
   114e0:	b	11310 <grub_script_parse+0xa68>
   114e4:	ldr	x27, [x23]
   114e8:	mov	w28, #0x1                   	// #1
   114ec:	mov	x0, x27
   114f0:	mov	x23, x20
   114f4:	bl	0 <grub_free>
   114f8:	add	w21, w21, #0x1
   114fc:	ldr	x27, [x20], #8
   11500:	cbnz	x27, 111c0 <grub_script_parse+0x918>
   11504:	ldr	x0, [sp, #96]
   11508:	bl	0 <grub_free>
   1150c:	ldp	x25, x26, [sp, #64]
   11510:	ldp	x27, x28, [sp, #80]
   11514:	b	11058 <grub_script_parse+0x7b0>
   11518:	cmp	w1, #0x3f
   1151c:	b.eq	110a4 <grub_script_parse+0x7fc>  // b.none
   11520:	b	10e64 <grub_script_parse+0x5bc>
   11524:	cmp	w1, #0x7b
   11528:	b.eq	119c0 <grub_script_parse+0x1118>  // b.none
   1152c:	b.hi	10e64 <grub_script_parse+0x5bc>  // b.pmore
   11530:	cmp	w1, #0x5f
   11534:	b.eq	11548 <grub_script_parse+0xca0>  // b.none
   11538:	sub	w2, w1, #0x61
   1153c:	and	w2, w2, #0xff
   11540:	cmp	w2, #0x19
   11544:	b.hi	10e64 <grub_script_parse+0x5bc>  // b.pmore
   11548:	mov	x22, x0
   1154c:	nop
   11550:	ldrb	w2, [x22]
   11554:	and	w1, w2, #0xffffffdf
   11558:	sub	w3, w2, #0x30
   1155c:	sub	w1, w1, #0x41
   11560:	and	w3, w3, #0xff
   11564:	and	w1, w1, #0xff
   11568:	cmp	w3, #0x9
   1156c:	b.ls	1157c <grub_script_parse+0xcd4>  // b.plast
   11570:	cmp	w2, #0x5f
   11574:	ccmp	w1, #0x19, #0x0, ne  // ne = any
   11578:	b.hi	1159c <grub_script_parse+0xcf4>  // b.pmore
   1157c:	add	x22, x22, #0x1
   11580:	b	11550 <grub_script_parse+0xca8>
   11584:	mov	x22, x0
   11588:	ldrb	w1, [x22, #1]!
   1158c:	sub	w1, w1, #0x30
   11590:	and	w1, w1, #0xff
   11594:	cmp	w1, #0x9
   11598:	b.ls	11588 <grub_script_parse+0xce0>  // b.plast
   1159c:	ldp	x24, x23, [sp, #168]
   115a0:	sub	x1, x22, x0
   115a4:	add	x2, x23, #0x1
   115a8:	str	x2, [sp, #176]
   115ac:	bl	0 <grub_strndup>
   115b0:	ldr	x1, [sp, #168]
   115b4:	str	x0, [x24, x23, lsl #3]
   115b8:	ldr	x0, [sp, #176]
   115bc:	add	x0, x1, x0, lsl #3
   115c0:	ldur	x0, [x0, #-8]
   115c4:	cbz	x0, 11a40 <grub_script_parse+0x1198>
   115c8:	ldrb	w1, [x22]
   115cc:	mov	x0, x22
   115d0:	b	10e64 <grub_script_parse+0x5bc>
   115d4:	mov	w21, #0x0                   	// #0
   115d8:	b	10e64 <grub_script_parse+0x5bc>
   115dc:	strb	w2, [x20, x4]
   115e0:	mov	w1, w3
   115e4:	mov	x4, x5
   115e8:	ldrb	w2, [x0], #1
   115ec:	cbnz	w2, 112a8 <grub_script_parse+0xa00>
   115f0:	b	112e0 <grub_script_parse+0xa38>
   115f4:	strb	w2, [x21, x3]
   115f8:	mov	w20, w1
   115fc:	mov	x3, x4
   11600:	ldrb	w2, [x0], #1
   11604:	cbnz	w2, 11460 <grub_script_parse+0xbb8>
   11608:	strb	wzr, [x5]
   1160c:	mov	x0, x21
   11610:	bl	0 <grub_strlen>
   11614:	mov	x2, x0
   11618:	mov	x1, x21
   1161c:	add	x0, sp, #0x90
   11620:	bl	13fa8 <grub_script_argv_append>
   11624:	cbz	w0, 114b8 <grub_script_parse+0xc10>
   11628:	mov	x0, x21
   1162c:	bl	0 <grub_free>
   11630:	ldp	x25, x26, [sp, #64]
   11634:	ldp	x27, x28, [sp, #80]
   11638:	b	11058 <grub_script_parse+0x7b0>
   1163c:	mov	x0, x27
   11640:	bl	0 <grub_strlen>
   11644:	lsl	w0, w0, #1
   11648:	add	w0, w0, #0x1
   1164c:	sxtw	x0, w0
   11650:	bl	0 <grub_malloc>
   11654:	mov	x26, x0
   11658:	cbz	x0, 114e4 <grub_script_parse+0xc3c>
   1165c:	mov	x2, x27
   11660:	ldrb	w3, [x2], #1
   11664:	cbz	w3, 11d94 <grub_script_parse+0x14ec>
   11668:	mov	x0, #0x0                   	// #0
   1166c:	nop
   11670:	add	w5, w28, #0x1
   11674:	cmp	w3, #0x2a
   11678:	ccmp	w3, w22, #0x4, ne  // ne = any
   1167c:	add	w28, w28, #0x2
   11680:	sxtw	x6, w5
   11684:	ccmp	w3, w24, #0x4, ne  // ne = any
   11688:	add	x7, x26, x6
   1168c:	b.ne	116f8 <grub_script_parse+0xe50>  // b.any
   11690:	strb	w22, [x26, x0]
   11694:	sxtw	x0, w28
   11698:	strb	w3, [x26, w5, sxtw]
   1169c:	add	x5, x26, x0
   116a0:	ldrb	w3, [x2], #1
   116a4:	cbnz	w3, 11670 <grub_script_parse+0xdc8>
   116a8:	strb	wzr, [x5]
   116ac:	mov	x0, x26
   116b0:	bl	0 <grub_strlen>
   116b4:	mov	x2, x0
   116b8:	mov	x1, x26
   116bc:	add	x0, sp, #0x90
   116c0:	bl	13fa8 <grub_script_argv_append>
   116c4:	mov	w28, w0
   116c8:	mov	x0, x26
   116cc:	bl	0 <grub_free>
   116d0:	add	w21, w21, #0x1
   116d4:	ldr	x0, [x23]
   116d8:	mov	x23, x20
   116dc:	bl	0 <grub_free>
   116e0:	ldr	x27, [x20], #8
   116e4:	cbnz	x27, 111c0 <grub_script_parse+0x918>
   116e8:	ldr	x0, [sp, #96]
   116ec:	bl	0 <grub_free>
   116f0:	cbz	w28, 11310 <grub_script_parse+0xa68>
   116f4:	b	11050 <grub_script_parse+0x7a8>
   116f8:	strb	w3, [x26, x0]
   116fc:	mov	w28, w5
   11700:	mov	x0, x6
   11704:	ldrb	w3, [x2], #1
   11708:	cbnz	w3, 11670 <grub_script_parse+0xdc8>
   1170c:	mov	x5, x7
   11710:	b	116a8 <grub_script_parse+0xe00>
   11714:	add	x5, x4, #0x2
   11718:	add	x4, x4, #0x3
   1171c:	sturb	w3, [x4, #-2]
   11720:	b	1120c <grub_script_parse+0x964>
   11724:	add	x0, sp, #0x90
   11728:	bl	13f00 <grub_script_argv_next>
   1172c:	cbnz	w0, 114e4 <grub_script_parse+0xc3c>
   11730:	ldr	x27, [x23]
   11734:	b	111c8 <grub_script_parse+0x920>
   11738:	ldr	x20, [x19, #8]
   1173c:	ldrb	w0, [x20]
   11740:	cbz	w0, 11310 <grub_script_parse+0xa68>
   11744:	mov	x0, x20
   11748:	bl	0 <grub_strlen>
   1174c:	mov	x1, x20
   11750:	mov	x2, x0
   11754:	add	x0, sp, #0x90
   11758:	bl	13fa8 <grub_script_argv_append>
   1175c:	cbz	w0, 11310 <grub_script_parse+0xa68>
   11760:	b	11050 <grub_script_parse+0x7a8>
   11764:	cbz	w3, 11814 <grub_script_parse+0xf6c>
   11768:	ldr	x2, [sp, #128]
   1176c:	cbz	x2, 11780 <grub_script_parse+0xed8>
   11770:	add	x0, x2, #0x1
   11774:	str	x0, [sp, #128]
   11778:	ldrb	w0, [x20]
   1177c:	strb	w0, [x2]
   11780:	ldrb	w1, [x20, #1]
   11784:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   11788:	add	x0, x20, #0x2
   1178c:	cmp	w1, #0x24
   11790:	b.eq	117b8 <grub_script_parse+0xf10>  // b.none
   11794:	mov	x20, x23
   11798:	mov	w3, #0x0                   	// #0
   1179c:	mov	x23, x0
   117a0:	ldr	x2, [sp, #128]
   117a4:	b	10eb8 <grub_script_parse+0x610>
   117a8:	mov	x1, x23
   117ac:	mov	x23, x0
   117b0:	mov	x0, x1
   117b4:	nop
   117b8:	ldrb	w1, [x23, #1]
   117bc:	cmp	w1, #0x5a
   117c0:	b.hi	11828 <grub_script_parse+0xf80>  // b.pmore
   117c4:	cmp	w1, #0x40
   117c8:	b.hi	11904 <grub_script_parse+0x105c>  // b.pmore
   117cc:	cmp	w1, #0x39
   117d0:	b.hi	118dc <grub_script_parse+0x1034>  // b.pmore
   117d4:	cmp	w1, #0x2f
   117d8:	b.hi	11970 <grub_script_parse+0x10c8>  // b.pmore
   117dc:	cmp	w1, #0x23
   117e0:	b.ne	11a14 <grub_script_parse+0x116c>  // b.any
   117e4:	add	x3, sp, #0xa8
   117e8:	add	x2, sp, #0x80
   117ec:	mov	x1, #0x1                   	// #1
   117f0:	bl	10be8 <grub_script_parse+0x340>
   117f4:	mov	w3, w0
   117f8:	cbnz	w0, 11a40 <grub_script_parse+0x1198>
   117fc:	ldrb	w1, [x23, #2]
   11800:	add	x20, x23, #0x2
   11804:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   11808:	add	x23, x23, #0x3
   1180c:	cmp	w1, #0x24
   11810:	b.ne	10eb4 <grub_script_parse+0x60c>  // b.any
   11814:	mov	x0, x23
   11818:	mov	x23, x20
   1181c:	ldrb	w1, [x23, #1]
   11820:	cmp	w1, #0x5a
   11824:	b.ls	117c4 <grub_script_parse+0xf1c>  // b.plast
   11828:	cmp	w1, #0x7b
   1182c:	b.eq	11c80 <grub_script_parse+0x13d8>  // b.none
   11830:	b.hi	1184c <grub_script_parse+0xfa4>  // b.pmore
   11834:	cmp	w1, #0x5f
   11838:	b.eq	11904 <grub_script_parse+0x105c>  // b.none
   1183c:	sub	w2, w1, #0x61
   11840:	and	w2, w2, #0xff
   11844:	cmp	w2, #0x19
   11848:	b.ls	11904 <grub_script_parse+0x105c>  // b.plast
   1184c:	ldr	x2, [sp, #128]
   11850:	cbz	x2, 118ec <grub_script_parse+0x1044>
   11854:	nop
   11858:	add	x1, x2, #0x1
   1185c:	str	x1, [sp, #128]
   11860:	strb	w21, [x2]
   11864:	ldrb	w1, [x23, #1]
   11868:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   1186c:	cmp	w1, #0x24
   11870:	add	x23, x0, #0x1
   11874:	b.eq	117a8 <grub_script_parse+0xf00>  // b.none
   11878:	mov	x20, x0
   1187c:	mov	w3, #0x0                   	// #0
   11880:	ldr	x2, [sp, #128]
   11884:	b	10eb8 <grub_script_parse+0x610>
   11888:	cbz	w3, 118a0 <grub_script_parse+0xff8>
   1188c:	add	x0, x2, #0x1
   11890:	cbz	x2, 118b4 <grub_script_parse+0x100c>
   11894:	str	x0, [sp, #128]
   11898:	strb	w4, [x2]
   1189c:	ldr	x2, [sp, #128]
   118a0:	add	x0, x2, #0x1
   118a4:	cbz	x2, 118b4 <grub_script_parse+0x100c>
   118a8:	str	x0, [sp, #128]
   118ac:	ldrb	w0, [x20]
   118b0:	strb	w0, [x2]
   118b4:	ldrb	w1, [x20, #1]
   118b8:	add	x0, x23, #0x1
   118bc:	mov	x20, x23
   118c0:	mov	w3, #0x0                   	// #0
   118c4:	cmp	w1, #0x24
   118c8:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   118cc:	b.eq	117b8 <grub_script_parse+0xf10>  // b.none
   118d0:	mov	x23, x0
   118d4:	ldr	x2, [sp, #128]
   118d8:	b	10ebc <grub_script_parse+0x614>
   118dc:	cmp	w1, #0x3f
   118e0:	b.eq	117e4 <grub_script_parse+0xf3c>  // b.none
   118e4:	ldr	x2, [sp, #128]
   118e8:	cbnz	x2, 11858 <grub_script_parse+0xfb0>
   118ec:	cmp	w1, #0x24
   118f0:	add	x23, x0, #0x1
   118f4:	b.eq	117a8 <grub_script_parse+0xf00>  // b.none
   118f8:	mov	x20, x0
   118fc:	mov	w3, #0x0                   	// #0
   11900:	b	10eb8 <grub_script_parse+0x610>
   11904:	mov	x20, x0
   11908:	ldrb	w3, [x20]
   1190c:	and	w1, w3, #0xffffffdf
   11910:	sub	w2, w3, #0x30
   11914:	sub	w1, w1, #0x41
   11918:	and	w2, w2, #0xff
   1191c:	and	w1, w1, #0xff
   11920:	cmp	w2, #0x9
   11924:	b.ls	11934 <grub_script_parse+0x108c>  // b.plast
   11928:	cmp	w3, #0x5f
   1192c:	ccmp	w1, #0x19, #0x0, ne  // ne = any
   11930:	b.hi	1193c <grub_script_parse+0x1094>  // b.pmore
   11934:	add	x20, x20, #0x1
   11938:	b	11908 <grub_script_parse+0x1060>
   1193c:	add	x3, sp, #0xa8
   11940:	add	x2, sp, #0x80
   11944:	sub	x1, x20, x0
   11948:	bl	10be8 <grub_script_parse+0x340>
   1194c:	mov	w3, w0
   11950:	cbnz	w0, 11a40 <grub_script_parse+0x1198>
   11954:	ldrb	w1, [x20]
   11958:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   1195c:	cmp	w1, #0x24
   11960:	add	x23, x20, #0x1
   11964:	b.eq	11814 <grub_script_parse+0xf6c>  // b.none
   11968:	ldr	x2, [sp, #128]
   1196c:	b	10eb8 <grub_script_parse+0x610>
   11970:	mov	x20, x0
   11974:	mov	x23, x20
   11978:	ldrb	w1, [x20, #1]!
   1197c:	sub	w1, w1, #0x30
   11980:	and	w1, w1, #0xff
   11984:	cmp	w1, #0x9
   11988:	b.ls	11974 <grub_script_parse+0x10cc>  // b.plast
   1198c:	add	x3, sp, #0xa8
   11990:	add	x2, sp, #0x80
   11994:	sub	x1, x20, x0
   11998:	bl	10be8 <grub_script_parse+0x340>
   1199c:	mov	w3, w0
   119a0:	cbnz	w0, 11a40 <grub_script_parse+0x1198>
   119a4:	ldrb	w1, [x20]
   119a8:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   119ac:	add	x23, x23, #0x2
   119b0:	cmp	w1, #0x24
   119b4:	b.eq	11814 <grub_script_parse+0xf6c>  // b.none
   119b8:	ldr	x2, [sp, #128]
   119bc:	b	10eb8 <grub_script_parse+0x610>
   119c0:	add	x22, x22, #0x2
   119c4:	mov	w1, #0x7d                  	// #125
   119c8:	mov	x0, x22
   119cc:	bl	0 <grub_strchr>
   119d0:	mov	x23, x0
   119d4:	cbz	x0, 10e70 <grub_script_parse+0x5c8>
   119d8:	sub	x1, x0, x22
   119dc:	mov	x0, x22
   119e0:	ldp	x22, x24, [sp, #168]
   119e4:	add	x2, x24, #0x1
   119e8:	str	x2, [sp, #176]
   119ec:	bl	0 <grub_strndup>
   119f0:	ldr	x1, [sp, #168]
   119f4:	str	x0, [x22, x24, lsl #3]
   119f8:	ldr	x0, [sp, #176]
   119fc:	add	x0, x1, x0, lsl #3
   11a00:	ldur	x0, [x0, #-8]
   11a04:	cbz	x0, 11a40 <grub_script_parse+0x1198>
   11a08:	ldrb	w1, [x23, #1]
   11a0c:	add	x0, x23, #0x1
   11a10:	b	10e64 <grub_script_parse+0x5bc>
   11a14:	ldr	x2, [sp, #128]
   11a18:	cbnz	x2, 11858 <grub_script_parse+0xfb0>
   11a1c:	cbnz	w1, 118ec <grub_script_parse+0x1044>
   11a20:	mov	x0, x22
   11a24:	bl	0 <grub_strlen>
   11a28:	ldr	x1, [sp, #184]
   11a2c:	add	x0, x0, x1
   11a30:	bl	0 <grub_malloc>
   11a34:	mov	x23, x0
   11a38:	cbnz	x0, 10f1c <grub_script_parse+0x674>
   11a3c:	nop
   11a40:	mov	w21, #0x1                   	// #1
   11a44:	mov	x23, #0x0                   	// #0
   11a48:	mov	x0, x23
   11a4c:	bl	0 <grub_free>
   11a50:	ldr	x0, [sp, #176]
   11a54:	mov	x20, #0x0                   	// #0
   11a58:	cbz	x0, 11040 <grub_script_parse+0x798>
   11a5c:	nop
   11a60:	ldr	x1, [sp, #168]
   11a64:	ldr	x0, [x1, x20, lsl #3]
   11a68:	add	x20, x20, #0x1
   11a6c:	bl	0 <grub_free>
   11a70:	ldr	x1, [sp, #176]
   11a74:	cmp	x20, x1
   11a78:	b.cc	11a60 <grub_script_parse+0x11b8>  // b.lo, b.ul, b.last
   11a7c:	ldr	x0, [sp, #168]
   11a80:	bl	0 <grub_free>
   11a84:	cbz	w21, 11310 <grub_script_parse+0xa68>
   11a88:	b	11050 <grub_script_parse+0x7a8>
   11a8c:	cbz	w3, 11b8c <grub_script_parse+0x12e4>
   11a90:	ldr	x2, [sp, #128]
   11a94:	cbz	x2, 11aa8 <grub_script_parse+0x1200>
   11a98:	add	x0, x2, #0x1
   11a9c:	str	x0, [sp, #128]
   11aa0:	ldrb	w0, [x22]
   11aa4:	strb	w0, [x2]
   11aa8:	ldrb	w1, [x22, #1]
   11aac:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   11ab0:	add	x0, x22, #0x2
   11ab4:	cmp	w1, #0x24
   11ab8:	b.eq	11b30 <grub_script_parse+0x1288>  // b.none
   11abc:	mov	x22, x21
   11ac0:	mov	w3, #0x0                   	// #0
   11ac4:	mov	x21, x0
   11ac8:	ldr	x2, [sp, #128]
   11acc:	b	10f40 <grub_script_parse+0x698>
   11ad0:	cmp	w1, #0x7b
   11ad4:	b.eq	11d9c <grub_script_parse+0x14f4>  // b.none
   11ad8:	b.hi	11af4 <grub_script_parse+0x124c>  // b.pmore
   11adc:	cmp	w1, #0x5f
   11ae0:	b.eq	11c14 <grub_script_parse+0x136c>  // b.none
   11ae4:	sub	w2, w1, #0x61
   11ae8:	and	w2, w2, #0xff
   11aec:	cmp	w2, #0x19
   11af0:	b.ls	11c14 <grub_script_parse+0x136c>  // b.plast
   11af4:	ldr	x2, [sp, #128]
   11af8:	cbz	x2, 11bfc <grub_script_parse+0x1354>
   11afc:	nop
   11b00:	add	x1, x2, #0x1
   11b04:	str	x1, [sp, #128]
   11b08:	strb	w20, [x2]
   11b0c:	ldrb	w1, [x21, #1]
   11b10:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   11b14:	cmp	w1, #0x24
   11b18:	add	x21, x0, #0x1
   11b1c:	b.ne	11f00 <grub_script_parse+0x1658>  // b.any
   11b20:	mov	x1, x21
   11b24:	mov	x21, x0
   11b28:	mov	x0, x1
   11b2c:	nop
   11b30:	ldrb	w1, [x21, #1]
   11b34:	cmp	w1, #0x5a
   11b38:	b.hi	11ad0 <grub_script_parse+0x1228>  // b.pmore
   11b3c:	cmp	w1, #0x40
   11b40:	b.hi	11c14 <grub_script_parse+0x136c>  // b.pmore
   11b44:	cmp	w1, #0x39
   11b48:	b.hi	11bec <grub_script_parse+0x1344>  // b.pmore
   11b4c:	cmp	w1, #0x2f
   11b50:	b.hi	11d2c <grub_script_parse+0x1484>  // b.pmore
   11b54:	cmp	w1, #0x23
   11b58:	b.ne	121d8 <grub_script_parse+0x1930>  // b.any
   11b5c:	add	x3, sp, #0xa8
   11b60:	add	x2, sp, #0x80
   11b64:	mov	x1, #0x1                   	// #1
   11b68:	bl	10aa8 <grub_script_parse+0x200>
   11b6c:	mov	w3, w0
   11b70:	cbnz	w0, 12050 <grub_script_parse+0x17a8>
   11b74:	ldrb	w1, [x21, #2]
   11b78:	add	x22, x21, #0x2
   11b7c:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   11b80:	add	x21, x21, #0x3
   11b84:	cmp	w1, #0x24
   11b88:	b.ne	10f3c <grub_script_parse+0x694>  // b.any
   11b8c:	mov	x0, x21
   11b90:	mov	x21, x22
   11b94:	b	11b30 <grub_script_parse+0x1288>
   11b98:	cbz	w3, 11bb0 <grub_script_parse+0x1308>
   11b9c:	add	x0, x2, #0x1
   11ba0:	cbz	x2, 11bc4 <grub_script_parse+0x131c>
   11ba4:	str	x0, [sp, #128]
   11ba8:	strb	w4, [x2]
   11bac:	ldr	x2, [sp, #128]
   11bb0:	add	x0, x2, #0x1
   11bb4:	cbz	x2, 11bc4 <grub_script_parse+0x131c>
   11bb8:	str	x0, [sp, #128]
   11bbc:	ldrb	w0, [x22]
   11bc0:	strb	w0, [x2]
   11bc4:	ldrb	w1, [x22, #1]
   11bc8:	add	x0, x21, #0x1
   11bcc:	mov	x22, x21
   11bd0:	mov	w3, #0x0                   	// #0
   11bd4:	cmp	w1, #0x24
   11bd8:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   11bdc:	b.eq	11b30 <grub_script_parse+0x1288>  // b.none
   11be0:	mov	x21, x0
   11be4:	ldr	x2, [sp, #128]
   11be8:	b	10f44 <grub_script_parse+0x69c>
   11bec:	cmp	w1, #0x3f
   11bf0:	b.eq	11b5c <grub_script_parse+0x12b4>  // b.none
   11bf4:	ldr	x2, [sp, #128]
   11bf8:	cbnz	x2, 11b00 <grub_script_parse+0x1258>
   11bfc:	cmp	w1, #0x24
   11c00:	add	x21, x0, #0x1
   11c04:	b.eq	11b20 <grub_script_parse+0x1278>  // b.none
   11c08:	mov	x22, x0
   11c0c:	mov	w3, #0x0                   	// #0
   11c10:	b	10f40 <grub_script_parse+0x698>
   11c14:	mov	x22, x0
   11c18:	ldrb	w3, [x22]
   11c1c:	and	w1, w3, #0xffffffdf
   11c20:	sub	w2, w3, #0x30
   11c24:	sub	w1, w1, #0x41
   11c28:	and	w2, w2, #0xff
   11c2c:	and	w1, w1, #0xff
   11c30:	cmp	w2, #0x9
   11c34:	b.ls	11c44 <grub_script_parse+0x139c>  // b.plast
   11c38:	cmp	w3, #0x5f
   11c3c:	ccmp	w1, #0x19, #0x0, ne  // ne = any
   11c40:	b.hi	11c4c <grub_script_parse+0x13a4>  // b.pmore
   11c44:	add	x22, x22, #0x1
   11c48:	b	11c18 <grub_script_parse+0x1370>
   11c4c:	add	x3, sp, #0xa8
   11c50:	add	x2, sp, #0x80
   11c54:	sub	x1, x22, x0
   11c58:	bl	10aa8 <grub_script_parse+0x200>
   11c5c:	mov	w3, w0
   11c60:	cbnz	w0, 12050 <grub_script_parse+0x17a8>
   11c64:	ldrb	w1, [x22]
   11c68:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   11c6c:	cmp	w1, #0x24
   11c70:	add	x21, x22, #0x1
   11c74:	b.eq	11b8c <grub_script_parse+0x12e4>  // b.none
   11c78:	ldr	x2, [sp, #128]
   11c7c:	b	10f40 <grub_script_parse+0x698>
   11c80:	add	x23, x23, #0x2
   11c84:	mov	w1, #0x7d                  	// #125
   11c88:	mov	x0, x23
   11c8c:	bl	0 <grub_strchr>
   11c90:	mov	x24, x0
   11c94:	cbz	x0, 10ef4 <grub_script_parse+0x64c>
   11c98:	add	x3, sp, #0xa8
   11c9c:	sub	x1, x0, x23
   11ca0:	add	x2, sp, #0x80
   11ca4:	mov	x0, x23
   11ca8:	bl	10be8 <grub_script_parse+0x340>
   11cac:	mov	w3, w0
   11cb0:	cbnz	w0, 11a40 <grub_script_parse+0x1198>
   11cb4:	ldrb	w1, [x24, #1]
   11cb8:	add	x20, x24, #0x1
   11cbc:	cbz	w1, 10ef4 <grub_script_parse+0x64c>
   11cc0:	add	x23, x24, #0x2
   11cc4:	cmp	w1, #0x24
   11cc8:	b.eq	11814 <grub_script_parse+0xf6c>  // b.none
   11ccc:	ldr	x2, [sp, #128]
   11cd0:	b	10eb8 <grub_script_parse+0x610>
   11cd4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11cd8:	mov	x0, x22
   11cdc:	ldr	x1, [x1]
   11ce0:	bl	0 <grub_strcmp>
   11ce4:	cbz	w0, 11138 <grub_script_parse+0x890>
   11ce8:	mov	x0, x22
   11cec:	bl	0 <grub_env_get>
   11cf0:	mov	x21, x0
   11cf4:	cbz	x0, 11194 <grub_script_parse+0x8ec>
   11cf8:	ldrb	w1, [x0]
   11cfc:	cbz	w1, 11194 <grub_script_parse+0x8ec>
   11d00:	cbnz	w20, 12010 <grub_script_parse+0x1768>
   11d04:	mov	x1, x21
   11d08:	add	x0, sp, #0xa8
   11d0c:	bl	140a0 <grub_script_argv_split_append>
   11d10:	cbz	w0, 11194 <grub_script_parse+0x8ec>
   11d14:	nop
   11d18:	add	x0, sp, #0xa8
   11d1c:	bl	13cc8 <grub_script_argv_free>
   11d20:	mov	x0, #0x0                   	// #0
   11d24:	bl	0 <grub_free>
   11d28:	b	11310 <grub_script_parse+0xa68>
   11d2c:	mov	x22, x0
   11d30:	mov	x21, x22
   11d34:	ldrb	w1, [x22, #1]!
   11d38:	sub	w1, w1, #0x30
   11d3c:	and	w1, w1, #0xff
   11d40:	cmp	w1, #0x9
   11d44:	b.ls	11d30 <grub_script_parse+0x1488>  // b.plast
   11d48:	add	x3, sp, #0xa8
   11d4c:	add	x2, sp, #0x80
   11d50:	sub	x1, x22, x0
   11d54:	bl	10aa8 <grub_script_parse+0x200>
   11d58:	mov	w3, w0
   11d5c:	cbnz	w0, 12050 <grub_script_parse+0x17a8>
   11d60:	ldrb	w1, [x22]
   11d64:	cbz	w1, 10f7c <grub_script_parse+0x6d4>
   11d68:	add	x21, x21, #0x2
   11d6c:	cmp	w1, #0x24
   11d70:	b.eq	11b8c <grub_script_parse+0x12e4>  // b.none
   11d74:	ldr	x2, [sp, #128]
   11d78:	b	10f40 <grub_script_parse+0x698>
   11d7c:	strb	w2, [x20, x3]
   11d80:	mov	w0, w1
   11d84:	mov	x3, x5
   11d88:	ldrb	w2, [x4], #1
   11d8c:	cbnz	w2, 10fc8 <grub_script_parse+0x720>
   11d90:	b	11000 <grub_script_parse+0x758>
   11d94:	mov	x5, x0
   11d98:	b	116a8 <grub_script_parse+0xe00>
   11d9c:	add	x22, x21, #0x2
   11da0:	mov	w1, #0x7d                  	// #125
   11da4:	mov	x0, x22
   11da8:	bl	0 <grub_strchr>
   11dac:	mov	x21, x0
   11db0:	cbz	x0, 10f7c <grub_script_parse+0x6d4>
   11db4:	add	x3, sp, #0xa8
   11db8:	sub	x1, x0, x22
   11dbc:	add	x2, sp, #0x80
   11dc0:	mov	x0, x22
   11dc4:	bl	10aa8 <grub_script_parse+0x200>
   11dc8:	mov	w3, w0
   11dcc:	cbnz	w0, 12050 <grub_script_parse+0x17a8>
   11dd0:	ldrb	w1, [x21, #1]
   11dd4:	add	x22, x21, #0x1
   11dd8:	cbnz	w1, 11d68 <grub_script_parse+0x14c0>
   11ddc:	b	10f7c <grub_script_parse+0x6d4>
   11de0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11de4:	mov	x0, x22
   11de8:	ldr	x1, [x1]
   11dec:	bl	0 <grub_strcmp>
   11df0:	cbnz	w0, 11f1c <grub_script_parse+0x1674>
   11df4:	ldr	x1, [x21]
   11df8:	ldr	w0, [x1, #8]
   11dfc:	cbz	w0, 11194 <grub_script_parse+0x8ec>
   11e00:	cbz	w20, 11e68 <grub_script_parse+0x15c0>
   11e04:	mov	w20, #0x0                   	// #0
   11e08:	adrp	x22, 0 <grub_normal_free_menu-0x498>
   11e0c:	nop
   11e10:	ldr	x0, [x1, #16]
   11e14:	ldr	x23, [x0, w20, uxtw #3]
   11e18:	add	w20, w20, #0x1
   11e1c:	mov	x0, x23
   11e20:	bl	0 <grub_strlen>
   11e24:	mov	x1, x23
   11e28:	mov	x2, x0
   11e2c:	add	x0, sp, #0xa8
   11e30:	bl	13fa8 <grub_script_argv_append>
   11e34:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11e38:	ldr	x1, [x21]
   11e3c:	add	x0, sp, #0xa8
   11e40:	mov	x2, #0x1                   	// #1
   11e44:	ldr	w3, [x1, #8]
   11e48:	cmp	w3, w20
   11e4c:	b.ls	11194 <grub_script_parse+0x8ec>  // b.plast
   11e50:	cbz	w20, 11e10 <grub_script_parse+0x1568>
   11e54:	ldr	x1, [x22]
   11e58:	bl	13fa8 <grub_script_argv_append>
   11e5c:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11e60:	ldr	x1, [x21]
   11e64:	b	11e10 <grub_script_parse+0x1568>
   11e68:	ldr	x1, [x1, #16]
   11e6c:	add	x0, sp, #0xa8
   11e70:	ldr	x1, [x1, w20, uxtw #3]
   11e74:	add	w20, w20, #0x1
   11e78:	bl	140a0 <grub_script_argv_split_append>
   11e7c:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11e80:	ldr	x1, [x21]
   11e84:	add	x0, sp, #0xa8
   11e88:	ldr	w2, [x1, #8]
   11e8c:	cmp	w20, w2
   11e90:	b.cs	11194 <grub_script_parse+0x8ec>  // b.hs, b.nlast
   11e94:	cbz	w20, 11e68 <grub_script_parse+0x15c0>
   11e98:	bl	13f00 <grub_script_argv_next>
   11e9c:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11ea0:	ldr	x1, [x21]
   11ea4:	add	x0, sp, #0xa8
   11ea8:	ldr	x1, [x1, #16]
   11eac:	ldr	x1, [x1, w20, uxtw #3]
   11eb0:	add	w20, w20, #0x1
   11eb4:	bl	140a0 <grub_script_argv_split_append>
   11eb8:	cbz	w0, 11e80 <grub_script_parse+0x15d8>
   11ebc:	b	11d18 <grub_script_parse+0x1470>
   11ec0:	add	x0, sp, #0xa8
   11ec4:	mov	x2, #0x0                   	// #0
   11ec8:	mov	x1, #0x0                   	// #0
   11ecc:	bl	13fa8 <grub_script_argv_append>
   11ed0:	cbz	w0, 11194 <grub_script_parse+0x8ec>
   11ed4:	add	x0, sp, #0xa8
   11ed8:	bl	13cc8 <grub_script_argv_free>
   11edc:	mov	x0, #0x0                   	// #0
   11ee0:	bl	0 <grub_free>
   11ee4:	b	11310 <grub_script_parse+0xa68>
   11ee8:	mov	x0, #0x0                   	// #0
   11eec:	b	10e2c <grub_script_parse+0x584>
   11ef0:	mov	x6, x20
   11ef4:	b	112e0 <grub_script_parse+0xa38>
   11ef8:	mov	x5, x21
   11efc:	b	11498 <grub_script_parse+0xbf0>
   11f00:	mov	x22, x0
   11f04:	mov	w3, #0x0                   	// #0
   11f08:	ldr	x2, [sp, #128]
   11f0c:	b	10f40 <grub_script_parse+0x698>
   11f10:	mov	w21, #0x1                   	// #1
   11f14:	bl	0 <grub_free>
   11f18:	b	11a48 <grub_script_parse+0x11a0>
   11f1c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   11f20:	mov	x0, x22
   11f24:	ldr	x1, [x1]
   11f28:	bl	0 <grub_strcmp>
   11f2c:	cbnz	w0, 11fd8 <grub_script_parse+0x1730>
   11f30:	ldr	x0, [x21]
   11f34:	ldr	w1, [x0, #8]
   11f38:	cbz	w1, 11194 <grub_script_parse+0x8ec>
   11f3c:	cbz	w20, 11fa8 <grub_script_parse+0x1700>
   11f40:	mov	w20, #0x0                   	// #0
   11f44:	nop
   11f48:	ldr	x0, [x0, #16]
   11f4c:	ldr	x22, [x0, w20, uxtw #3]
   11f50:	add	w20, w20, #0x1
   11f54:	mov	x0, x22
   11f58:	bl	0 <grub_strlen>
   11f5c:	mov	x1, x22
   11f60:	mov	x2, x0
   11f64:	add	x0, sp, #0xa8
   11f68:	bl	13fa8 <grub_script_argv_append>
   11f6c:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11f70:	ldr	x0, [x21]
   11f74:	ldr	w1, [x0, #8]
   11f78:	cmp	w1, w20
   11f7c:	b.ls	11194 <grub_script_parse+0x8ec>  // b.plast
   11f80:	cbz	w20, 11f48 <grub_script_parse+0x16a0>
   11f84:	add	x0, sp, #0xa8
   11f88:	bl	13f00 <grub_script_argv_next>
   11f8c:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11f90:	ldr	x0, [x21]
   11f94:	b	11f48 <grub_script_parse+0x16a0>
   11f98:	add	x0, sp, #0xa8
   11f9c:	bl	13f00 <grub_script_argv_next>
   11fa0:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11fa4:	ldr	x0, [x21]
   11fa8:	ldr	x1, [x0, #16]
   11fac:	add	x0, sp, #0xa8
   11fb0:	ldr	x1, [x1, w20, uxtw #3]
   11fb4:	add	w20, w20, #0x1
   11fb8:	bl	140a0 <grub_script_argv_split_append>
   11fbc:	cbnz	w0, 11d18 <grub_script_parse+0x1470>
   11fc0:	ldr	x0, [x21]
   11fc4:	ldr	w1, [x0, #8]
   11fc8:	cmp	w20, w1
   11fcc:	b.cs	11194 <grub_script_parse+0x8ec>  // b.hs, b.nlast
   11fd0:	cbz	w20, 11fa8 <grub_script_parse+0x1700>
   11fd4:	b	11f98 <grub_script_parse+0x16f0>
   11fd8:	mov	x0, x22
   11fdc:	mov	w2, #0xa                   	// #10
   11fe0:	mov	x1, #0x0                   	// #0
   11fe4:	bl	0 <grub_strtoul>
   11fe8:	cbz	x0, 11194 <grub_script_parse+0x8ec>
   11fec:	ldr	x1, [x21]
   11ff0:	ldr	w2, [x1, #8]
   11ff4:	cmp	x0, x2
   11ff8:	b.hi	11194 <grub_script_parse+0x8ec>  // b.pmore
   11ffc:	ldr	x1, [x1, #16]
   12000:	add	x0, x1, x0, lsl #3
   12004:	ldur	x21, [x0, #-8]
   12008:	cbz	w20, 11d04 <grub_script_parse+0x145c>
   1200c:	mov	x0, x21
   12010:	bl	0 <grub_strlen>
   12014:	mov	x2, x0
   12018:	mov	x1, x21
   1201c:	add	x0, sp, #0xa8
   12020:	bl	13fa8 <grub_script_argv_append>
   12024:	cbz	w0, 11194 <grub_script_parse+0x8ec>
   12028:	b	11d18 <grub_script_parse+0x1470>
   1202c:	bl	0 <grub_free>
   12030:	b	11310 <grub_script_parse+0xa68>
   12034:	bl	0 <grub_strlen>
   12038:	ldr	x1, [sp, #184]
   1203c:	add	x0, x0, x1
   12040:	bl	0 <grub_malloc>
   12044:	mov	x23, x0
   12048:	cbz	x0, 11a40 <grub_script_parse+0x1198>
   1204c:	b	10f84 <grub_script_parse+0x6dc>
   12050:	mov	w21, #0x1                   	// #1
   12054:	b	11a48 <grub_script_parse+0x11a0>
   12058:	mov	x6, x0
   1205c:	b	11000 <grub_script_parse+0x758>
   12060:	ldr	x0, [sp, #128]
   12064:	ldr	x23, [x0, x20]
   12068:	mov	x0, x23
   1206c:	bl	0 <grub_strlen>
   12070:	mov	x1, x23
   12074:	mov	x2, x0
   12078:	add	x0, sp, #0x90
   1207c:	bl	13fa8 <grub_script_argv_append>
   12080:	ldr	x1, [sp, #128]
   12084:	mov	w23, w0
   12088:	ldr	x0, [x1, x20]
   1208c:	bl	0 <grub_free>
   12090:	ldr	x0, [sp, #128]
   12094:	ldr	x1, [x0, x19]
   12098:	cbnz	x1, 121c8 <grub_script_parse+0x1920>
   1209c:	bl	0 <grub_free>
   120a0:	cbnz	w23, 113f0 <grub_script_parse+0xb48>
   120a4:	ldr	x0, [sp, #176]
   120a8:	add	x21, x21, #0x8
   120ac:	ldr	x0, [x0, x21]
   120b0:	cbnz	x0, 11378 <grub_script_parse+0xad0>
   120b4:	add	x0, sp, #0xa8
   120b8:	bl	13cc8 <grub_script_argv_free>
   120bc:	ldr	x4, [sp, #120]
   120c0:	mov	w0, #0x0                   	// #0
   120c4:	ldp	x2, x3, [sp, #144]
   120c8:	ldr	x1, [sp, #160]
   120cc:	stp	x2, x3, [x4]
   120d0:	str	x1, [x4, #16]
   120d4:	b	11064 <grub_script_parse+0x7bc>
   120d8:	add	x0, sp, #0x90
   120dc:	bl	13f00 <grub_script_argv_next>
   120e0:	ldr	x0, [sp, #176]
   120e4:	ldr	x19, [x0, x21]
   120e8:	mov	x0, x19
   120ec:	bl	0 <grub_strlen>
   120f0:	add	w0, w0, #0x1
   120f4:	sxtw	x0, w0
   120f8:	bl	0 <grub_malloc>
   120fc:	mov	x20, x0
   12100:	cbz	x0, 120a4 <grub_script_parse+0x17fc>
   12104:	mov	x5, x19
   12108:	ldrb	w3, [x5], #1
   1210c:	cbz	w3, 121a0 <grub_script_parse+0x18f8>
   12110:	sub	x7, x0, #0x1
   12114:	mov	x2, #0x1                   	// #1
   12118:	b	12134 <grub_script_parse+0x188c>
   1211c:	strb	w3, [x7, x2]
   12120:	add	x2, x2, #0x1
   12124:	ldrb	w3, [x4], #1
   12128:	cbz	w3, 12160 <grub_script_parse+0x18b8>
   1212c:	mov	x19, x5
   12130:	mov	x5, x4
   12134:	mov	x4, x5
   12138:	cmp	w3, #0x5c
   1213c:	mov	w6, w2
   12140:	b.ne	1211c <grub_script_parse+0x1874>  // b.any
   12144:	ldrb	w0, [x19, #1]
   12148:	add	x5, x19, #0x2
   1214c:	strb	w0, [x7, x2]
   12150:	add	x4, x19, #0x3
   12154:	add	x2, x2, #0x1
   12158:	ldrb	w3, [x19, #2]
   1215c:	cbnz	w3, 1212c <grub_script_parse+0x1884>
   12160:	add	x6, x20, w6, sxtw
   12164:	strb	wzr, [x6]
   12168:	mov	x0, x20
   1216c:	bl	0 <grub_strlen>
   12170:	mov	x2, x0
   12174:	mov	x1, x20
   12178:	add	x0, sp, #0x90
   1217c:	bl	13fa8 <grub_script_argv_append>
   12180:	mov	x0, x20
   12184:	bl	0 <grub_free>
   12188:	b	120a4 <grub_script_parse+0x17fc>
   1218c:	bl	0 <grub_free>
   12190:	b	120a4 <grub_script_parse+0x17fc>
   12194:	mov	x0, #0x0                   	// #0
   12198:	bl	0 <grub_free>
   1219c:	b	11310 <grub_script_parse+0xa68>
   121a0:	mov	x6, x0
   121a4:	b	12164 <grub_script_parse+0x18bc>
   121a8:	mov	x1, #0x7fffffff8           	// #34359738360
   121ac:	mov	w0, #0xffffffff            	// #-1
   121b0:	b	11340 <grub_script_parse+0xa98>
   121b4:	add	x0, sp, #0x90
   121b8:	str	x0, [sp, #112]
   121bc:	b	113f0 <grub_script_parse+0xb48>
   121c0:	str	w0, [sp, #144]
   121c4:	b	11348 <grub_script_parse+0xaa0>
   121c8:	cmp	w23, #0x0
   121cc:	mov	x20, x19
   121d0:	cset	w2, ne  // ne = any
   121d4:	b	113b4 <grub_script_parse+0xb0c>
   121d8:	ldr	x2, [sp, #128]
   121dc:	cbnz	x2, 11b00 <grub_script_parse+0x1258>
   121e0:	cbz	w1, 10f88 <grub_script_parse+0x6e0>
   121e4:	b	11bfc <grub_script_parse+0x1354>
	...

0000000000012238 <grub_script_break>:
   12238:	stp	x29, x30, [sp, #-48]!
   1223c:	mov	x29, sp
   12240:	stp	x19, x20, [sp, #16]
   12244:	mov	x20, x0
   12248:	str	xzr, [sp, #40]
   1224c:	cbz	w1, 122e8 <grub_script_break+0xb0>
   12250:	cmp	w1, #0x1
   12254:	b.gt	122cc <grub_script_break+0x94>
   12258:	ldr	x0, [x2]
   1225c:	add	x1, sp, #0x28
   12260:	mov	w2, #0xa                   	// #10
   12264:	bl	0 <grub_strtoul>
   12268:	mov	x19, x0
   1226c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12270:	ldr	x0, [x1]
   12274:	ldr	w0, [x0]
   12278:	cbnz	w0, 122dc <grub_script_break+0xa4>
   1227c:	ldr	x0, [sp, #40]
   12280:	ldrb	w0, [x0]
   12284:	cbnz	w0, 122f0 <grub_script_break+0xb8>
   12288:	cbz	x19, 12304 <grub_script_break+0xcc>
   1228c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12290:	ldr	x0, [x20, #16]
   12294:	ldr	x1, [x1]
   12298:	bl	0 <grub_strcmp>
   1229c:	cmp	w0, #0x0
   122a0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   122a4:	cset	x3, ne  // ne = any
   122a8:	mov	w0, #0x0                   	// #0
   122ac:	ldr	x1, [x1]
   122b0:	ldr	x2, [x1, #24]
   122b4:	cmp	x2, x19
   122b8:	csel	x19, x19, x2, cs  // cs = hs, nlast
   122bc:	stp	x3, x19, [x1, #8]
   122c0:	ldp	x19, x20, [sp, #16]
   122c4:	ldp	x29, x30, [sp], #48
   122c8:	ret
   122cc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   122d0:	mov	w0, #0x12                  	// #18
   122d4:	ldr	x1, [x1]
   122d8:	bl	0 <grub_error>
   122dc:	ldp	x19, x20, [sp, #16]
   122e0:	ldp	x29, x30, [sp], #48
   122e4:	ret
   122e8:	mov	x19, #0x1                   	// #1
   122ec:	b	1228c <grub_script_break+0x54>
   122f0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   122f4:	mov	w0, #0x12                  	// #18
   122f8:	ldr	x1, [x1]
   122fc:	bl	0 <grub_error>
   12300:	b	122dc <grub_script_break+0xa4>
   12304:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12308:	mov	w0, #0x12                  	// #18
   1230c:	ldr	x1, [x1]
   12310:	bl	0 <grub_error>
   12314:	b	122dc <grub_script_break+0xa4>
	...

0000000000012348 <grub_script_shift>:
   12348:	stp	x29, x30, [sp, #-48]!
   1234c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12350:	mov	x29, sp
   12354:	str	x19, [sp, #16]
   12358:	ldr	x19, [x0]
   1235c:	str	xzr, [sp, #40]
   12360:	ldr	x3, [x19]
   12364:	cbz	x3, 123f4 <grub_script_shift+0xac>
   12368:	cbnz	w1, 123ac <grub_script_shift+0x64>
   1236c:	ldr	w0, [x3, #8]
   12370:	mov	x1, #0x1                   	// #1
   12374:	cmp	x1, w0, uxtw
   12378:	b.hi	123e4 <grub_script_shift+0x9c>  // b.pmore
   1237c:	ldr	x4, [x3, #16]
   12380:	sub	w2, w0, w1
   12384:	ldr	w5, [x3, #4]
   12388:	mov	w0, #0x0                   	// #0
   1238c:	str	w2, [x3, #8]
   12390:	add	x2, x4, x1, lsl #3
   12394:	add	w1, w5, w1
   12398:	str	w1, [x3, #4]
   1239c:	str	x2, [x3, #16]
   123a0:	ldr	x19, [sp, #16]
   123a4:	ldp	x29, x30, [sp], #48
   123a8:	ret
   123ac:	cmp	w1, #0x1
   123b0:	b.gt	123e4 <grub_script_shift+0x9c>
   123b4:	ldr	x0, [x2]
   123b8:	add	x1, sp, #0x28
   123bc:	mov	w2, #0xa                   	// #10
   123c0:	bl	0 <grub_strtoul>
   123c4:	mov	x1, x0
   123c8:	ldr	x2, [sp, #40]
   123cc:	ldrb	w0, [x2]
   123d0:	cbnz	w0, 123e4 <grub_script_shift+0x9c>
   123d4:	ldr	x3, [x19]
   123d8:	ldr	w0, [x3, #8]
   123dc:	cmp	x1, w0, uxtw
   123e0:	b.ls	1237c <grub_script_shift+0x34>  // b.plast
   123e4:	mov	w0, #0x12                  	// #18
   123e8:	ldr	x19, [sp, #16]
   123ec:	ldp	x29, x30, [sp], #48
   123f0:	ret
   123f4:	mov	w0, #0x0                   	// #0
   123f8:	ldr	x19, [sp, #16]
   123fc:	ldp	x29, x30, [sp], #48
   12400:	ret
   12404:	nop
	...

0000000000012410 <grub_script_setparams>:
   12410:	stp	x29, x30, [sp, #-80]!
   12414:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12418:	mov	x29, sp
   1241c:	stp	x21, x22, [sp, #32]
   12420:	ldr	x22, [x0]
   12424:	str	wzr, [sp, #56]
   12428:	stp	xzr, xzr, [sp, #64]
   1242c:	ldr	x0, [x22]
   12430:	cbz	x0, 12500 <grub_script_setparams+0xf0>
   12434:	mov	x21, x2
   12438:	mov	x0, #0x20                  	// #32
   1243c:	stp	x19, x20, [sp, #16]
   12440:	mov	w20, w1
   12444:	bl	0 <grub_malloc>
   12448:	mov	x19, x0
   1244c:	cbz	x0, 124c8 <grub_script_setparams+0xb8>
   12450:	mov	x2, x21
   12454:	mov	w1, w20
   12458:	add	x0, sp, #0x38
   1245c:	bl	13d28 <grub_script_argv_make>
   12460:	cbnz	w0, 124c0 <grub_script_setparams+0xb0>
   12464:	ldr	x0, [x22]
   12468:	mov	x2, #0x3                   	// #3
   1246c:	ldp	x4, x5, [sp, #56]
   12470:	stp	x4, x5, [x19, #8]
   12474:	ldr	x1, [sp, #72]
   12478:	str	x2, [x19]
   1247c:	str	x1, [x19, #24]
   12480:	cbz	x0, 124a8 <grub_script_setparams+0x98>
   12484:	ldp	w3, w4, [x0]
   12488:	ldr	x2, [x0, #16]
   1248c:	ldr	w1, [x0, #8]
   12490:	sub	x2, x2, w4, uxtw #3
   12494:	add	w1, w1, w4
   12498:	str	w1, [x0, #8]
   1249c:	str	x2, [x0, #16]
   124a0:	tbnz	w3, #1, 124e4 <grub_script_setparams+0xd4>
   124a4:	tbnz	w3, #0, 124f8 <grub_script_setparams+0xe8>
   124a8:	str	x19, [x22]
   124ac:	mov	w0, #0x0                   	// #0
   124b0:	ldp	x19, x20, [sp, #16]
   124b4:	ldp	x21, x22, [sp, #32]
   124b8:	ldp	x29, x30, [sp], #80
   124bc:	ret
   124c0:	mov	x0, x19
   124c4:	bl	0 <grub_free>
   124c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   124cc:	ldp	x19, x20, [sp, #16]
   124d0:	ldr	x0, [x0]
   124d4:	ldp	x21, x22, [sp, #32]
   124d8:	ldr	w0, [x0]
   124dc:	ldp	x29, x30, [sp], #80
   124e0:	ret
   124e4:	add	x0, x0, #0x8
   124e8:	bl	13cc8 <grub_script_argv_free>
   124ec:	ldr	x0, [x22]
   124f0:	ldr	w3, [x0]
   124f4:	tbz	w3, #0, 124a8 <grub_script_setparams+0x98>
   124f8:	bl	0 <grub_free>
   124fc:	b	124a8 <grub_script_setparams+0x98>
   12500:	mov	w0, #0x11                  	// #17
   12504:	ldp	x21, x22, [sp, #32]
   12508:	ldp	x29, x30, [sp], #80
   1250c:	ret
	...

0000000000012520 <grub_script_return>:
   12520:	stp	x29, x30, [sp, #-48]!
   12524:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12528:	mov	x29, sp
   1252c:	str	x19, [sp, #16]
   12530:	ldr	x19, [x0]
   12534:	ldr	x0, [x19]
   12538:	cmp	x0, #0x0
   1253c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   12540:	b.gt	125c4 <grub_script_return+0xa4>
   12544:	cbnz	w1, 12578 <grub_script_return+0x58>
   12548:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   1254c:	mov	x1, #0x1                   	// #1
   12550:	str	x1, [x19, #32]
   12554:	ldr	x0, [x0]
   12558:	bl	0 <grub_env_get>
   1255c:	cbz	x0, 125b4 <grub_script_return+0x94>
   12560:	mov	w2, #0xa                   	// #10
   12564:	mov	x1, #0x0                   	// #0
   12568:	bl	0 <grub_strtoul>
   1256c:	ldr	x19, [sp, #16]
   12570:	ldp	x29, x30, [sp], #48
   12574:	ret
   12578:	ldr	x0, [x2]
   1257c:	add	x1, sp, #0x28
   12580:	mov	w2, #0xa                   	// #10
   12584:	bl	0 <grub_strtoul>
   12588:	mov	x1, x0
   1258c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   12590:	ldr	x0, [x2]
   12594:	ldr	w0, [x0]
   12598:	cbnz	w0, 125b8 <grub_script_return+0x98>
   1259c:	ldr	x0, [sp, #40]
   125a0:	ldrb	w0, [x0]
   125a4:	cbnz	w0, 125f4 <grub_script_return+0xd4>
   125a8:	mov	x0, #0x1                   	// #1
   125ac:	str	x0, [x19, #32]
   125b0:	cbnz	x1, 125e0 <grub_script_return+0xc0>
   125b4:	mov	w0, #0x0                   	// #0
   125b8:	ldr	x19, [sp, #16]
   125bc:	ldp	x29, x30, [sp], #48
   125c0:	ret
   125c4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   125c8:	mov	w0, #0x12                  	// #18
   125cc:	ldr	x1, [x1]
   125d0:	bl	0 <grub_error>
   125d4:	ldr	x19, [sp, #16]
   125d8:	ldp	x29, x30, [sp], #48
   125dc:	ret
   125e0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   125e4:	mov	w0, w1
   125e8:	ldr	x1, [x2]
   125ec:	bl	0 <grub_error>
   125f0:	b	125b8 <grub_script_return+0x98>
   125f4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   125f8:	mov	w0, #0x12                  	// #18
   125fc:	ldr	x1, [x1]
   12600:	bl	0 <grub_error>
   12604:	b	125b8 <grub_script_return+0x98>
	...

0000000000012638 <grub_script_function_call>:
   12638:	stp	x29, x30, [sp, #-96]!
   1263c:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   12640:	mov	x29, sp
   12644:	stp	x19, x20, [sp, #16]
   12648:	ldr	x19, [x3]
   1264c:	stp	x21, x22, [sp, #32]
   12650:	add	x3, sp, #0x40
   12654:	ldr	x0, [x0, #8]
   12658:	str	xzr, [sp, #64]
   1265c:	str	w1, [sp, #72]
   12660:	str	x2, [sp, #80]
   12664:	ldr	x21, [x19]
   12668:	str	x3, [x19]
   1266c:	ldr	x22, [x19, #24]
   12670:	str	xzr, [x19, #24]
   12674:	cbz	x0, 126d8 <grub_script_function_call+0xa0>
   12678:	ldr	x0, [x0, #16]
   1267c:	cbz	x0, 126d8 <grub_script_function_call+0xa0>
   12680:	ldr	x1, [x0]
   12684:	blr	x1
   12688:	mov	w3, w0
   1268c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12690:	mov	w20, w0
   12694:	add	x0, sp, #0x30
   12698:	ldr	x2, [x1]
   1269c:	mov	x1, #0xe                   	// #14
   126a0:	bl	0 <grub_snprintf>
   126a4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   126a8:	add	x1, sp, #0x30
   126ac:	ldr	x0, [x0]
   126b0:	bl	0 <grub_env_set>
   126b4:	stp	x22, xzr, [x19, #24]
   126b8:	ldr	x0, [x19]
   126bc:	cbnz	x0, 126e4 <grub_script_function_call+0xac>
   126c0:	str	x21, [x19]
   126c4:	mov	w0, w20
   126c8:	ldp	x19, x20, [sp, #16]
   126cc:	ldp	x21, x22, [sp, #32]
   126d0:	ldp	x29, x30, [sp], #96
   126d4:	ret
   126d8:	mov	x0, x3
   126dc:	mov	w20, #0x0                   	// #0
   126e0:	stp	x22, xzr, [x19, #24]
   126e4:	ldr	w1, [x0, #8]
   126e8:	ldp	w3, w4, [x0]
   126ec:	ldr	x2, [x0, #16]
   126f0:	add	w1, w1, w4
   126f4:	str	w1, [x0, #8]
   126f8:	sub	x2, x2, w4, uxtw #3
   126fc:	str	x2, [x0, #16]
   12700:	tbnz	w3, #1, 12724 <grub_script_function_call+0xec>
   12704:	tbz	w3, #0, 126c0 <grub_script_function_call+0x88>
   12708:	bl	0 <grub_free>
   1270c:	str	x21, [x19]
   12710:	mov	w0, w20
   12714:	ldp	x19, x20, [sp, #16]
   12718:	ldp	x21, x22, [sp, #32]
   1271c:	ldp	x29, x30, [sp], #96
   12720:	ret
   12724:	add	x0, x0, #0x8
   12728:	bl	13cc8 <grub_script_argv_free>
   1272c:	ldr	x0, [x19]
   12730:	ldr	w3, [x0]
   12734:	tbz	w3, #0, 126c0 <grub_script_function_call+0x88>
   12738:	b	12708 <grub_script_function_call+0xd0>
   1273c:	nop
	...

0000000000012758 <grub_script_execute_sourcecode>:
   12758:	stp	x29, x30, [sp, #-96]!
   1275c:	mov	x29, sp
   12760:	stp	x23, x24, [sp, #48]
   12764:	str	x0, [sp, #72]
   12768:	cbz	x0, 12898 <grub_script_execute_sourcecode+0x140>
   1276c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12770:	adrp	x23, 0 <grub_normal_free_menu-0x498>
   12774:	stp	x19, x20, [sp, #16]
   12778:	stp	x21, x22, [sp, #32]
   1277c:	adrp	x22, 0 <grub_normal_free_menu-0x498>
   12780:	ldr	x21, [x1]
   12784:	b	12804 <grub_script_execute_sourcecode+0xac>
   12788:	sub	x1, x19, x0
   1278c:	add	x19, x19, #0x1
   12790:	bl	0 <grub_strndup>
   12794:	mov	x20, x0
   12798:	add	x2, sp, #0x48
   1279c:	mov	x1, x21
   127a0:	mov	x0, x20
   127a4:	str	x19, [sp, #72]
   127a8:	bl	108a8 <grub_script_parse>
   127ac:	mov	x19, x0
   127b0:	cbz	x0, 1283c <grub_script_execute_sourcecode+0xe4>
   127b4:	ldr	x1, [x0, #16]
   127b8:	cbz	x1, 12868 <grub_script_execute_sourcecode+0x110>
   127bc:	ldr	x2, [x1]
   127c0:	mov	x0, x1
   127c4:	blr	x2
   127c8:	mov	w3, w0
   127cc:	ldr	x2, [x23]
   127d0:	mov	x1, #0xe                   	// #14
   127d4:	mov	w24, w0
   127d8:	add	x0, sp, #0x50
   127dc:	bl	0 <grub_snprintf>
   127e0:	ldr	x0, [x22]
   127e4:	add	x1, sp, #0x50
   127e8:	bl	0 <grub_env_set>
   127ec:	mov	x0, x19
   127f0:	bl	10028 <grub_script_free>
   127f4:	mov	x0, x20
   127f8:	bl	0 <grub_free>
   127fc:	ldr	x0, [sp, #72]
   12800:	cbz	x0, 12880 <grub_script_execute_sourcecode+0x128>
   12804:	mov	w1, #0xa                   	// #10
   12808:	bl	0 <grub_strchr>
   1280c:	mov	x19, x0
   12810:	ldr	x0, [sp, #72]
   12814:	cbnz	x19, 12788 <grub_script_execute_sourcecode+0x30>
   12818:	bl	0 <grub_strdup>
   1281c:	mov	x20, x0
   12820:	add	x2, sp, #0x48
   12824:	mov	x1, x21
   12828:	mov	x0, x20
   1282c:	str	x19, [sp, #72]
   12830:	bl	108a8 <grub_script_parse>
   12834:	mov	x19, x0
   12838:	cbnz	x0, 127b4 <grub_script_execute_sourcecode+0x5c>
   1283c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12840:	mov	x0, x20
   12844:	ldr	x1, [x1]
   12848:	ldr	w24, [x1]
   1284c:	bl	0 <grub_free>
   12850:	ldp	x19, x20, [sp, #16]
   12854:	ldp	x21, x22, [sp, #32]
   12858:	mov	w0, w24
   1285c:	ldp	x23, x24, [sp, #48]
   12860:	ldp	x29, x30, [sp], #96
   12864:	ret
   12868:	bl	10028 <grub_script_free>
   1286c:	mov	x0, x20
   12870:	bl	0 <grub_free>
   12874:	ldr	x0, [sp, #72]
   12878:	cbnz	x0, 12804 <grub_script_execute_sourcecode+0xac>
   1287c:	mov	w24, #0x0                   	// #0
   12880:	mov	w0, w24
   12884:	ldp	x19, x20, [sp, #16]
   12888:	ldp	x21, x22, [sp, #32]
   1288c:	ldp	x23, x24, [sp, #48]
   12890:	ldp	x29, x30, [sp], #96
   12894:	ret
   12898:	mov	w24, #0x0                   	// #0
   1289c:	b	12858 <grub_script_execute_sourcecode+0x100>
	...

00000000000128c0 <grub_script_execute_new_scope>:
   128c0:	stp	x29, x30, [sp, #-64]!
   128c4:	adrp	x4, 0 <grub_normal_free_menu-0x498>
   128c8:	mov	x29, sp
   128cc:	stp	x19, x20, [sp, #16]
   128d0:	add	x3, sp, #0x20
   128d4:	ldr	x19, [x4]
   128d8:	str	wzr, [sp, #32]
   128dc:	str	w1, [sp, #40]
   128e0:	str	x2, [sp, #48]
   128e4:	ldr	x20, [x19]
   128e8:	str	x3, [x19]
   128ec:	bl	12758 <grub_script_execute_sourcecode>
   128f0:	str	x20, [x19]
   128f4:	ldp	x19, x20, [sp, #16]
   128f8:	ldp	x29, x30, [sp], #64
   128fc:	ret
	...

0000000000012908 <grub_script_execute_cmdline>:
   12908:	stp	x29, x30, [sp, #-128]!
   1290c:	mov	x29, sp
   12910:	ldr	x0, [x0, #16]
   12914:	add	x1, sp, #0x68
   12918:	stp	x19, x20, [sp, #16]
   1291c:	str	wzr, [sp, #104]
   12920:	stp	xzr, xzr, [sp, #112]
   12924:	bl	10d78 <grub_script_parse+0x4d0>
   12928:	cbnz	w0, 12b64 <grub_script_execute_cmdline+0x25c>
   1292c:	stp	x21, x22, [sp, #32]
   12930:	mov	w22, w0
   12934:	ldr	x0, [sp, #112]
   12938:	ldr	x0, [x0]
   1293c:	cbz	x0, 12b60 <grub_script_execute_cmdline+0x258>
   12940:	ldr	w1, [sp, #104]
   12944:	mov	w21, #0x0                   	// #0
   12948:	stp	x23, x24, [sp, #48]
   1294c:	mov	w19, #0x0                   	// #0
   12950:	str	x25, [sp, #64]
   12954:	mov	x25, #0x0                   	// #0
   12958:	cbnz	w1, 12af8 <grub_script_execute_cmdline+0x1f0>
   1295c:	mov	x0, x25
   12960:	bl	0 <grub_malloc>
   12964:	mov	x23, x0
   12968:	cbz	x0, 12b80 <grub_script_execute_cmdline+0x278>
   1296c:	nop
   12970:	ldr	w0, [sp, #104]
   12974:	cbz	w0, 129b8 <grub_script_execute_cmdline+0xb0>
   12978:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   1297c:	mov	w20, #0x0                   	// #0
   12980:	mov	w19, #0x0                   	// #0
   12984:	ldr	x24, [x0]
   12988:	sub	w1, w21, w20
   1298c:	ldr	x3, [sp, #112]
   12990:	sxtw	x1, w1
   12994:	add	x0, x23, w20, sxtw
   12998:	mov	x2, x24
   1299c:	ldr	x3, [x3, w19, uxtw #3]
   129a0:	add	w19, w19, #0x1
   129a4:	bl	0 <grub_snprintf>
   129a8:	add	w20, w20, w0
   129ac:	ldr	w1, [sp, #104]
   129b0:	cmp	w1, w19
   129b4:	b.hi	12988 <grub_script_execute_cmdline+0x80>  // b.pmore
   129b8:	add	x25, x23, x25
   129bc:	mov	w1, #0x2                   	// #2
   129c0:	mov	x0, x23
   129c4:	sturb	wzr, [x25, #-1]
   129c8:	bl	0 <grub_verify_string>
   129cc:	mov	x0, x23
   129d0:	bl	0 <grub_free>
   129d4:	ldr	x19, [sp, #112]
   129d8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   129dc:	ldr	w20, [sp, #104]
   129e0:	ldr	x1, [x0]
   129e4:	ldr	x21, [x19]
   129e8:	mov	x0, x21
   129ec:	bl	0 <grub_strcmp>
   129f0:	cbnz	w0, 12bb0 <grub_script_execute_cmdline+0x2a8>
   129f4:	ldr	w1, [sp, #104]
   129f8:	cmp	w1, #0x1
   129fc:	b.ls	12bbc <grub_script_execute_cmdline+0x2b4>  // b.plast
   12a00:	ldr	x19, [sp, #112]
   12a04:	ldr	x21, [x19, #8]
   12a08:	cbz	x21, 12bbc <grub_script_execute_cmdline+0x2b4>
   12a0c:	sub	w20, w1, #0x2
   12a10:	add	x19, x19, #0x10
   12a14:	mov	w22, #0x1                   	// #1
   12a18:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12a1c:	mov	x1, x21
   12a20:	ldr	x0, [x0]
   12a24:	ldr	x0, [x0]
   12a28:	bl	0 <grub_named_list_find>
   12a2c:	cbz	x0, 12bd4 <grub_script_execute_cmdline+0x2cc>
   12a30:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   12a34:	ldr	w1, [x0, #40]
   12a38:	ldr	x2, [x2]
   12a3c:	ldr	w2, [x2]
   12a40:	cbz	w2, 12b2c <grub_script_execute_cmdline+0x224>
   12a44:	tbnz	w1, #9, 12b2c <grub_script_execute_cmdline+0x224>
   12a48:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12a4c:	mov	x2, x21
   12a50:	mov	w0, #0x1f                  	// #31
   12a54:	ldr	x1, [x1]
   12a58:	bl	0 <grub_error>
   12a5c:	mov	w19, w0
   12a60:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12a64:	ldr	x23, [x1]
   12a68:	cbz	w22, 12a90 <grub_script_execute_cmdline+0x188>
   12a6c:	nop
   12a70:	cmp	w19, #0x1
   12a74:	b.eq	12c04 <grub_script_execute_cmdline+0x2fc>  // b.none
   12a78:	cbnz	w19, 12c10 <grub_script_execute_cmdline+0x308>
   12a7c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12a80:	mov	w0, #0x1                   	// #1
   12a84:	ldr	x1, [x1]
   12a88:	bl	0 <grub_error>
   12a8c:	mov	w19, w0
   12a90:	add	x0, sp, #0x68
   12a94:	bl	13cc8 <grub_script_argv_free>
   12a98:	ldr	w0, [x23]
   12a9c:	cmp	w0, #0x1
   12aa0:	b.ne	12aa8 <grub_script_execute_cmdline+0x1a0>  // b.any
   12aa4:	str	wzr, [x23]
   12aa8:	bl	0 <grub_print_error>
   12aac:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12ab0:	mov	w3, w19
   12ab4:	mov	x1, #0x12                  	// #18
   12ab8:	ldr	x2, [x0]
   12abc:	add	x0, sp, #0x50
   12ac0:	bl	0 <grub_snprintf>
   12ac4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12ac8:	add	x1, sp, #0x50
   12acc:	ldr	x0, [x0]
   12ad0:	bl	0 <grub_env_set>
   12ad4:	ldp	x21, x22, [sp, #32]
   12ad8:	ldp	x23, x24, [sp, #48]
   12adc:	ldr	x25, [sp, #64]
   12ae0:	mov	w0, w19
   12ae4:	ldp	x19, x20, [sp, #16]
   12ae8:	ldp	x29, x30, [sp], #128
   12aec:	ret
   12af0:	ldr	x0, [sp, #112]
   12af4:	ldr	x0, [x0, w19, uxtw #3]
   12af8:	bl	0 <grub_strlen>
   12afc:	ldr	w1, [sp, #104]
   12b00:	add	x0, x0, #0x1
   12b04:	add	w19, w19, #0x1
   12b08:	add	w21, w21, w0
   12b0c:	cmp	w1, w19
   12b10:	b.hi	12af0 <grub_script_execute_cmdline+0x1e8>  // b.pmore
   12b14:	sxtw	x25, w21
   12b18:	mov	x0, x25
   12b1c:	bl	0 <grub_malloc>
   12b20:	mov	x23, x0
   12b24:	cbnz	x0, 12970 <grub_script_execute_cmdline+0x68>
   12b28:	b	12b80 <grub_script_execute_cmdline+0x278>
   12b2c:	mov	w2, #0x50                  	// #80
   12b30:	and	w1, w1, w2
   12b34:	cmp	w1, w2
   12b38:	b.eq	12c1c <grub_script_execute_cmdline+0x314>  // b.none
   12b3c:	ldr	x3, [x0, #32]
   12b40:	mov	x2, x19
   12b44:	mov	w1, w20
   12b48:	blr	x3
   12b4c:	mov	w19, w0
   12b50:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12b54:	ldr	x23, [x1]
   12b58:	cbz	w22, 12a90 <grub_script_execute_cmdline+0x188>
   12b5c:	b	12a70 <grub_script_execute_cmdline+0x168>
   12b60:	ldp	x21, x22, [sp, #32]
   12b64:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12b68:	ldr	x0, [x0]
   12b6c:	ldr	w19, [x0]
   12b70:	mov	w0, w19
   12b74:	ldp	x19, x20, [sp, #16]
   12b78:	ldp	x29, x30, [sp], #128
   12b7c:	ret
   12b80:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12b84:	mov	w0, #0x3                   	// #3
   12b88:	ldr	x1, [x1]
   12b8c:	bl	0 <grub_error>
   12b90:	mov	w19, w0
   12b94:	mov	w0, w19
   12b98:	ldp	x19, x20, [sp, #16]
   12b9c:	ldp	x21, x22, [sp, #32]
   12ba0:	ldp	x23, x24, [sp, #48]
   12ba4:	ldr	x25, [sp, #64]
   12ba8:	ldp	x29, x30, [sp], #128
   12bac:	ret
   12bb0:	sub	w20, w20, #0x1
   12bb4:	add	x19, x19, #0x8
   12bb8:	b	12a18 <grub_script_execute_cmdline+0x110>
   12bbc:	add	x0, sp, #0x68
   12bc0:	bl	13cc8 <grub_script_argv_free>
   12bc4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12bc8:	mov	w0, #0x12                  	// #18
   12bcc:	ldr	x1, [x1]
   12bd0:	b	12b8c <grub_script_execute_cmdline+0x284>
   12bd4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12bd8:	mov	x0, x21
   12bdc:	ldr	x23, [x1]
   12be0:	str	wzr, [x23]
   12be4:	bl	13478 <grub_script_function_find>
   12be8:	cbz	x0, 12c40 <grub_script_execute_cmdline+0x338>
   12bec:	mov	x2, x19
   12bf0:	mov	w1, w20
   12bf4:	bl	12638 <grub_script_function_call>
   12bf8:	mov	w19, w0
   12bfc:	cbz	w22, 12a90 <grub_script_execute_cmdline+0x188>
   12c00:	b	12a70 <grub_script_execute_cmdline+0x168>
   12c04:	mov	w19, #0x0                   	// #0
   12c08:	str	wzr, [x23]
   12c0c:	b	12a90 <grub_script_execute_cmdline+0x188>
   12c10:	mov	w19, #0x0                   	// #0
   12c14:	bl	0 <grub_print_error>
   12c18:	b	12a90 <grub_script_execute_cmdline+0x188>
   12c1c:	ldr	x3, [sp, #120]
   12c20:	mov	x2, x19
   12c24:	mov	w1, w20
   12c28:	bl	0 <grub_extcmd_dispatcher>
   12c2c:	mov	w19, w0
   12c30:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12c34:	ldr	x23, [x1]
   12c38:	cbz	w22, 12a90 <grub_script_execute_cmdline+0x188>
   12c3c:	b	12a70 <grub_script_execute_cmdline+0x168>
   12c40:	mov	x0, x21
   12c44:	bl	0 <grub_strdup>
   12c48:	mov	w1, #0x3d                  	// #61
   12c4c:	mov	x19, x0
   12c50:	bl	0 <grub_strchr>
   12c54:	mov	x1, x0
   12c58:	cbz	x0, 12c6c <grub_script_execute_cmdline+0x364>
   12c5c:	str	wzr, [x23]
   12c60:	mov	x0, x19
   12c64:	strb	wzr, [x1], #1
   12c68:	bl	10cc8 <grub_script_parse+0x420>
   12c6c:	mov	x0, x19
   12c70:	bl	0 <grub_free>
   12c74:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12c78:	ldr	w3, [x23]
   12c7c:	mov	x1, #0x12                  	// #18
   12c80:	mov	w19, #0x0                   	// #0
   12c84:	ldr	x2, [x0]
   12c88:	add	x0, sp, #0x50
   12c8c:	bl	0 <grub_snprintf>
   12c90:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12c94:	add	x1, sp, #0x50
   12c98:	ldr	x0, [x0]
   12c9c:	bl	10cc8 <grub_script_parse+0x420>
   12ca0:	add	x0, sp, #0x68
   12ca4:	bl	13cc8 <grub_script_argv_free>
   12ca8:	bl	0 <grub_print_error>
   12cac:	ldp	x21, x22, [sp, #32]
   12cb0:	ldp	x23, x24, [sp, #48]
   12cb4:	ldr	x25, [sp, #64]
   12cb8:	b	12ae0 <grub_script_execute_cmdline+0x1d8>
   12cbc:	nop
	...

0000000000012d18 <grub_script_execute_cmdlist>:
   12d18:	stp	x29, x30, [sp, #-80]!
   12d1c:	mov	x29, sp
   12d20:	stp	x19, x20, [sp, #16]
   12d24:	ldr	x19, [x0, #8]
   12d28:	stp	x21, x22, [sp, #32]
   12d2c:	cbz	x19, 12dcc <grub_script_execute_cmdlist+0xb4>
   12d30:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12d34:	mov	w20, #0x0                   	// #0
   12d38:	stp	x23, x24, [sp, #48]
   12d3c:	adrp	x24, 0 <grub_normal_free_menu-0x498>
   12d40:	adrp	x23, 0 <grub_normal_free_menu-0x498>
   12d44:	ldr	x21, [x0]
   12d48:	b	12d8c <grub_script_execute_cmdlist+0x74>
   12d4c:	ldr	x1, [x19]
   12d50:	blr	x1
   12d54:	mov	w3, w0
   12d58:	ldr	x2, [x24]
   12d5c:	mov	w20, w0
   12d60:	mov	x1, #0xe                   	// #14
   12d64:	add	x0, sp, #0x40
   12d68:	mov	w22, w20
   12d6c:	bl	0 <grub_snprintf>
   12d70:	ldr	x0, [x23]
   12d74:	add	x1, sp, #0x40
   12d78:	bl	0 <grub_env_set>
   12d7c:	ldr	x0, [x21, #32]
   12d80:	cbnz	x0, 12db4 <grub_script_execute_cmdlist+0x9c>
   12d84:	ldr	x19, [x19, #8]
   12d88:	cbz	x19, 12db4 <grub_script_execute_cmdlist+0x9c>
   12d8c:	ldr	x1, [x21, #16]
   12d90:	mov	x0, x19
   12d94:	cbz	x1, 12d4c <grub_script_execute_cmdlist+0x34>
   12d98:	mov	w22, w20
   12d9c:	mov	w0, w22
   12da0:	ldp	x19, x20, [sp, #16]
   12da4:	ldp	x21, x22, [sp, #32]
   12da8:	ldp	x23, x24, [sp, #48]
   12dac:	ldp	x29, x30, [sp], #80
   12db0:	ret
   12db4:	ldp	x23, x24, [sp, #48]
   12db8:	mov	w0, w22
   12dbc:	ldp	x19, x20, [sp, #16]
   12dc0:	ldp	x21, x22, [sp, #32]
   12dc4:	ldp	x29, x30, [sp], #80
   12dc8:	ret
   12dcc:	mov	w22, #0x0                   	// #0
   12dd0:	b	12db8 <grub_script_execute_cmdlist+0xa0>
   12dd4:	nop
	...

0000000000012df0 <grub_script_execute_cmdif>:
   12df0:	stp	x29, x30, [sp, #-64]!
   12df4:	mov	x29, sp
   12df8:	stp	x19, x20, [sp, #16]
   12dfc:	mov	x20, x0
   12e00:	ldr	x0, [x0, #16]
   12e04:	cbz	x0, 12edc <grub_script_execute_cmdif+0xec>
   12e08:	ldr	x1, [x0]
   12e0c:	blr	x1
   12e10:	mov	w3, w0
   12e14:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12e18:	mov	w19, w0
   12e1c:	add	x0, sp, #0x30
   12e20:	ldr	x2, [x1]
   12e24:	mov	x1, #0xe                   	// #14
   12e28:	bl	0 <grub_snprintf>
   12e2c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12e30:	add	x1, sp, #0x30
   12e34:	ldr	x0, [x0]
   12e38:	bl	0 <grub_env_set>
   12e3c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12e40:	ldr	x0, [x0]
   12e44:	ldr	x0, [x0, #32]
   12e48:	cbz	x0, 12e5c <grub_script_execute_cmdif+0x6c>
   12e4c:	mov	w0, w19
   12e50:	ldp	x19, x20, [sp, #16]
   12e54:	ldp	x29, x30, [sp], #64
   12e58:	ret
   12e5c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12e60:	str	x21, [sp, #32]
   12e64:	ldr	x21, [x0]
   12e68:	mov	x0, x21
   12e6c:	bl	0 <grub_env_get>
   12e70:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12e74:	ldr	x1, [x1]
   12e78:	str	wzr, [x1]
   12e7c:	cbz	x0, 12e90 <grub_script_execute_cmdif+0xa0>
   12e80:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12e84:	ldr	x1, [x1]
   12e88:	bl	0 <grub_strcmp>
   12e8c:	cbz	w0, 12ee4 <grub_script_execute_cmdif+0xf4>
   12e90:	ldr	x0, [x20, #32]
   12e94:	cbz	x0, 12eec <grub_script_execute_cmdif+0xfc>
   12e98:	ldr	x1, [x0]
   12e9c:	blr	x1
   12ea0:	mov	w3, w0
   12ea4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12ea8:	mov	w19, w0
   12eac:	add	x0, sp, #0x30
   12eb0:	ldr	x2, [x1]
   12eb4:	mov	x1, #0xe                   	// #14
   12eb8:	bl	0 <grub_snprintf>
   12ebc:	add	x1, sp, #0x30
   12ec0:	mov	x0, x21
   12ec4:	bl	0 <grub_env_set>
   12ec8:	mov	w0, w19
   12ecc:	ldp	x19, x20, [sp, #16]
   12ed0:	ldr	x21, [sp, #32]
   12ed4:	ldp	x29, x30, [sp], #64
   12ed8:	ret
   12edc:	mov	w19, #0x0                   	// #0
   12ee0:	b	12e3c <grub_script_execute_cmdif+0x4c>
   12ee4:	ldr	x0, [x20, #24]
   12ee8:	cbnz	x0, 12e98 <grub_script_execute_cmdif+0xa8>
   12eec:	mov	w19, #0x0                   	// #0
   12ef0:	ldr	x21, [sp, #32]
   12ef4:	b	12e4c <grub_script_execute_cmdif+0x5c>
	...

0000000000012f20 <grub_script_execute_cmdfor>:
   12f20:	stp	x29, x30, [sp, #-128]!
   12f24:	mov	x29, sp
   12f28:	stp	x21, x22, [sp, #32]
   12f2c:	mov	x22, x0
   12f30:	add	x1, sp, #0x68
   12f34:	ldr	x0, [x0, #24]
   12f38:	str	wzr, [sp, #104]
   12f3c:	stp	xzr, xzr, [sp, #112]
   12f40:	bl	10d78 <grub_script_parse+0x4d0>
   12f44:	cbnz	w0, 130bc <grub_script_execute_cmdfor+0x19c>
   12f48:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   12f4c:	stp	x19, x20, [sp, #16]
   12f50:	ldr	w4, [sp, #104]
   12f54:	ldr	x20, [x0]
   12f58:	mov	w21, w4
   12f5c:	ldp	x2, x1, [x20, #16]
   12f60:	add	x0, x1, #0x1
   12f64:	str	x0, [x20, #24]
   12f68:	cbz	w4, 12fb8 <grub_script_execute_cmdfor+0x98>
   12f6c:	mov	w21, #0x0                   	// #0
   12f70:	mov	w19, #0x0                   	// #0
   12f74:	stp	x23, x24, [sp, #48]
   12f78:	adrp	x24, 0 <grub_normal_free_menu-0x498>
   12f7c:	adrp	x23, 0 <grub_normal_free_menu-0x498>
   12f80:	str	x25, [sp, #64]
   12f84:	nop
   12f88:	ldr	x1, [x20, #8]
   12f8c:	cbz	x1, 12f98 <grub_script_execute_cmdfor+0x78>
   12f90:	cmp	x2, #0x1
   12f94:	b.eq	12fdc <grub_script_execute_cmdfor+0xbc>  // b.none
   12f98:	cbz	x2, 12fe0 <grub_script_execute_cmdfor+0xc0>
   12f9c:	add	w19, w19, #0x1
   12fa0:	cmp	w4, w19
   12fa4:	b.hi	12f88 <grub_script_execute_cmdfor+0x68>  // b.pmore
   12fa8:	ldr	x1, [x20, #24]
   12fac:	ldp	x23, x24, [sp, #48]
   12fb0:	sub	x1, x1, #0x1
   12fb4:	ldr	x25, [sp, #64]
   12fb8:	cbnz	x2, 130b0 <grub_script_execute_cmdfor+0x190>
   12fbc:	add	x0, sp, #0x68
   12fc0:	str	x1, [x20, #24]
   12fc4:	bl	13cc8 <grub_script_argv_free>
   12fc8:	mov	w0, w21
   12fcc:	ldp	x19, x20, [sp, #16]
   12fd0:	ldp	x21, x22, [sp, #32]
   12fd4:	ldp	x29, x30, [sp], #128
   12fd8:	ret
   12fdc:	str	xzr, [x20, #16]
   12fe0:	ldr	x0, [x22, #16]
   12fe4:	ldr	x21, [x0, #8]
   12fe8:	ldrb	w0, [x21]
   12fec:	sub	w0, w0, #0x30
   12ff0:	cmp	w0, #0x9
   12ff4:	b.ls	13028 <grub_script_execute_cmdfor+0x108>  // b.plast
   12ff8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   12ffc:	mov	x0, x21
   13000:	ldr	x2, [sp, #112]
   13004:	ldr	x1, [x1]
   13008:	ldr	x25, [x2, w19, uxtw #3]
   1300c:	bl	0 <grub_strcmp>
   13010:	cbz	w0, 13028 <grub_script_execute_cmdfor+0x108>
   13014:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   13018:	mov	x0, x21
   1301c:	ldr	x1, [x1]
   13020:	bl	0 <grub_strcmp>
   13024:	cbnz	w0, 1308c <grub_script_execute_cmdfor+0x16c>
   13028:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1302c:	mov	x2, x21
   13030:	mov	w0, #0x12                  	// #18
   13034:	ldr	x1, [x1]
   13038:	bl	0 <grub_error>
   1303c:	ldr	x0, [x22, #32]
   13040:	cbz	x0, 13084 <grub_script_execute_cmdfor+0x164>
   13044:	ldr	x1, [x0]
   13048:	blr	x1
   1304c:	mov	w3, w0
   13050:	ldr	x2, [x24]
   13054:	mov	x1, #0xe                   	// #14
   13058:	mov	w21, w0
   1305c:	add	x0, sp, #0x58
   13060:	bl	0 <grub_snprintf>
   13064:	ldr	x0, [x23]
   13068:	add	x1, sp, #0x58
   1306c:	bl	0 <grub_env_set>
   13070:	ldr	x0, [x20, #32]
   13074:	ldr	x2, [x20, #16]
   13078:	cbnz	x0, 12fa8 <grub_script_execute_cmdfor+0x88>
   1307c:	ldr	w4, [sp, #104]
   13080:	b	12f9c <grub_script_execute_cmdfor+0x7c>
   13084:	mov	w21, #0x0                   	// #0
   13088:	b	13070 <grub_script_execute_cmdfor+0x150>
   1308c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   13090:	mov	x0, x21
   13094:	ldr	x1, [x1]
   13098:	bl	0 <grub_strcmp>
   1309c:	cbz	w0, 13028 <grub_script_execute_cmdfor+0x108>
   130a0:	mov	x1, x25
   130a4:	mov	x0, x21
   130a8:	bl	0 <grub_env_set>
   130ac:	b	1303c <grub_script_execute_cmdfor+0x11c>
   130b0:	sub	x2, x2, #0x1
   130b4:	str	x2, [x20, #16]
   130b8:	b	12fbc <grub_script_execute_cmdfor+0x9c>
   130bc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   130c0:	ldr	x0, [x0]
   130c4:	ldr	w21, [x0]
   130c8:	mov	w0, w21
   130cc:	ldp	x21, x22, [sp, #32]
   130d0:	ldp	x29, x30, [sp], #128
   130d4:	ret
	...

0000000000013118 <grub_script_execute_cmdwhile>:
   13118:	stp	x29, x30, [sp, #-80]!
   1311c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   13120:	mov	x29, sp
   13124:	stp	x19, x20, [sp, #16]
   13128:	ldr	x20, [x1]
   1312c:	stp	x21, x22, [sp, #32]
   13130:	mov	x21, x0
   13134:	stp	x23, x24, [sp, #48]
   13138:	adrp	x22, 0 <grub_normal_free_menu-0x498>
   1313c:	adrp	x23, 0 <grub_normal_free_menu-0x498>
   13140:	ldr	x0, [x20, #24]
   13144:	add	x0, x0, #0x1
   13148:	str	x0, [x20, #24]
   1314c:	ldr	x0, [x21, #16]
   13150:	cbz	x0, 131f4 <grub_script_execute_cmdwhile+0xdc>
   13154:	ldr	x1, [x0]
   13158:	blr	x1
   1315c:	mov	w3, w0
   13160:	ldr	x2, [x23]
   13164:	mov	w19, w0
   13168:	mov	x1, #0xe                   	// #14
   1316c:	add	x0, sp, #0x40
   13170:	mov	w24, w19
   13174:	bl	0 <grub_snprintf>
   13178:	ldr	x0, [x22]
   1317c:	add	x1, sp, #0x40
   13180:	bl	0 <grub_env_set>
   13184:	ldr	x0, [x20, #32]
   13188:	cbnz	x0, 13208 <grub_script_execute_cmdwhile+0xf0>
   1318c:	ldr	w0, [x21, #32]
   13190:	cmp	w24, #0x0
   13194:	cbz	w0, 13214 <grub_script_execute_cmdwhile+0xfc>
   13198:	cset	w0, eq  // eq = none
   1319c:	cbnz	w0, 13208 <grub_script_execute_cmdwhile+0xf0>
   131a0:	ldr	x0, [x21, #24]
   131a4:	cbz	x0, 13250 <grub_script_execute_cmdwhile+0x138>
   131a8:	ldr	x1, [x0]
   131ac:	blr	x1
   131b0:	mov	w3, w0
   131b4:	ldr	x2, [x23]
   131b8:	mov	x1, #0xe                   	// #14
   131bc:	mov	w19, w0
   131c0:	add	x0, sp, #0x40
   131c4:	bl	0 <grub_snprintf>
   131c8:	ldr	x0, [x22]
   131cc:	add	x1, sp, #0x40
   131d0:	bl	0 <grub_env_set>
   131d4:	ldr	x1, [x20, #32]
   131d8:	ldr	x0, [x20, #16]
   131dc:	cbnz	x1, 1320c <grub_script_execute_cmdwhile+0xf4>
   131e0:	cmp	x0, #0x1
   131e4:	b.eq	1321c <grub_script_execute_cmdwhile+0x104>  // b.none
   131e8:	cbnz	x0, 13224 <grub_script_execute_cmdwhile+0x10c>
   131ec:	ldr	x0, [x21, #16]
   131f0:	cbnz	x0, 13154 <grub_script_execute_cmdwhile+0x3c>
   131f4:	ldr	x0, [x20, #32]
   131f8:	mov	w24, #0x0                   	// #0
   131fc:	mov	w19, #0x0                   	// #0
   13200:	cbz	x0, 1318c <grub_script_execute_cmdwhile+0x74>
   13204:	nop
   13208:	ldr	x0, [x20, #16]
   1320c:	cbz	x0, 1322c <grub_script_execute_cmdwhile+0x114>
   13210:	b	13224 <grub_script_execute_cmdwhile+0x10c>
   13214:	cset	w0, ne  // ne = any
   13218:	b	1319c <grub_script_execute_cmdwhile+0x84>
   1321c:	ldr	x1, [x20, #8]
   13220:	cbnz	x1, 1325c <grub_script_execute_cmdwhile+0x144>
   13224:	sub	x0, x0, #0x1
   13228:	str	x0, [x20, #16]
   1322c:	ldr	x0, [x20, #24]
   13230:	ldp	x21, x22, [sp, #32]
   13234:	sub	x0, x0, #0x1
   13238:	ldp	x23, x24, [sp, #48]
   1323c:	str	x0, [x20, #24]
   13240:	mov	w0, w19
   13244:	ldp	x19, x20, [sp, #16]
   13248:	ldp	x29, x30, [sp], #80
   1324c:	ret
   13250:	mov	w19, #0x0                   	// #0
   13254:	ldr	x0, [x20, #16]
   13258:	b	131e0 <grub_script_execute_cmdwhile+0xc8>
   1325c:	str	xzr, [x20, #16]
   13260:	b	1314c <grub_script_execute_cmdwhile+0x34>
   13264:	nop
	...

0000000000013280 <grub_script_execute>:
   13280:	stp	x29, x30, [sp, #-48]!
   13284:	mov	x29, sp
   13288:	str	x19, [sp, #16]
   1328c:	cbz	x0, 132dc <grub_script_execute+0x5c>
   13290:	ldr	x0, [x0, #16]
   13294:	cbz	x0, 132dc <grub_script_execute+0x5c>
   13298:	ldr	x1, [x0]
   1329c:	blr	x1
   132a0:	mov	w3, w0
   132a4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   132a8:	mov	w19, w0
   132ac:	add	x0, sp, #0x20
   132b0:	ldr	x2, [x1]
   132b4:	mov	x1, #0xe                   	// #14
   132b8:	bl	0 <grub_snprintf>
   132bc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   132c0:	add	x1, sp, #0x20
   132c4:	ldr	x0, [x0]
   132c8:	bl	0 <grub_env_set>
   132cc:	mov	w0, w19
   132d0:	ldr	x19, [sp, #16]
   132d4:	ldp	x29, x30, [sp], #48
   132d8:	ret
   132dc:	mov	w19, #0x0                   	// #0
   132e0:	mov	w0, w19
   132e4:	ldr	x19, [sp, #16]
   132e8:	ldp	x29, x30, [sp], #48
   132ec:	ret
	...

0000000000013300 <grub_script_function_create>:
   13300:	stp	x29, x30, [sp, #-48]!
   13304:	mov	x29, sp
   13308:	stp	x19, x20, [sp, #16]
   1330c:	mov	x19, x0
   13310:	mov	x0, #0x28                  	// #40
   13314:	str	x21, [sp, #32]
   13318:	mov	x21, x1
   1331c:	bl	0 <grub_malloc>
   13320:	mov	x20, x0
   13324:	cbz	x0, 13394 <grub_script_function_create+0x94>
   13328:	ldr	x0, [x19, #8]
   1332c:	bl	0 <grub_strdup>
   13330:	str	x0, [x20]
   13334:	mov	x1, x0
   13338:	cbz	x0, 133d8 <grub_script_function_create+0xd8>
   1333c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   13340:	str	x21, [x20, #8]
   13344:	ldr	x19, [x0]
   13348:	ldr	x2, [x19]
   1334c:	cbnz	x2, 13364 <grub_script_function_create+0x64>
   13350:	b	1338c <grub_script_function_create+0x8c>
   13354:	add	x19, x2, #0x18
   13358:	ldr	x2, [x2, #24]
   1335c:	cbz	x2, 1338c <grub_script_function_create+0x8c>
   13360:	ldr	x1, [x20]
   13364:	ldr	x0, [x2]
   13368:	bl	0 <grub_strcmp>
   1336c:	ldr	x2, [x19]
   13370:	tbnz	w0, #31, 13354 <grub_script_function_create+0x54>
   13374:	cbz	x2, 1338c <grub_script_function_create+0x8c>
   13378:	ldr	x0, [x2]
   1337c:	ldr	x1, [x20]
   13380:	bl	0 <grub_strcmp>
   13384:	cbz	w0, 133a8 <grub_script_function_create+0xa8>
   13388:	ldr	x2, [x19]
   1338c:	str	x2, [x20, #24]
   13390:	str	x20, [x19]
   13394:	mov	x0, x20
   13398:	ldp	x19, x20, [sp, #16]
   1339c:	ldr	x21, [sp, #32]
   133a0:	ldp	x29, x30, [sp], #48
   133a4:	ret
   133a8:	ldr	x19, [x19]
   133ac:	ldr	x0, [x19, #8]
   133b0:	bl	10028 <grub_script_free>
   133b4:	str	x21, [x19, #8]
   133b8:	mov	x0, x20
   133bc:	mov	x20, x19
   133c0:	bl	0 <grub_free>
   133c4:	mov	x0, x20
   133c8:	ldp	x19, x20, [sp, #16]
   133cc:	ldr	x21, [sp, #32]
   133d0:	ldp	x29, x30, [sp], #48
   133d4:	ret
   133d8:	mov	x0, x20
   133dc:	mov	x20, #0x0                   	// #0
   133e0:	bl	0 <grub_free>
   133e4:	b	13394 <grub_script_function_create+0x94>
	...

00000000000133f0 <grub_script_function_remove>:
   133f0:	stp	x29, x30, [sp, #-48]!
   133f4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   133f8:	mov	x29, sp
   133fc:	stp	x19, x20, [sp, #16]
   13400:	ldr	x20, [x1]
   13404:	ldr	x19, [x20]
   13408:	cbz	x19, 13464 <grub_script_function_remove+0x74>
   1340c:	str	x21, [sp, #32]
   13410:	mov	x21, x0
   13414:	b	13424 <grub_script_function_remove+0x34>
   13418:	add	x20, x19, #0x18
   1341c:	ldr	x19, [x19, #24]
   13420:	cbz	x19, 13460 <grub_script_function_remove+0x70>
   13424:	ldr	x1, [x19]
   13428:	mov	x0, x21
   1342c:	bl	0 <grub_strcmp>
   13430:	cbnz	w0, 13418 <grub_script_function_remove+0x28>
   13434:	ldr	x0, [x19]
   13438:	ldr	x1, [x19, #24]
   1343c:	str	x1, [x20]
   13440:	bl	0 <grub_free>
   13444:	ldr	x0, [x19, #8]
   13448:	bl	10028 <grub_script_free>
   1344c:	mov	x0, x19
   13450:	ldp	x19, x20, [sp, #16]
   13454:	ldr	x21, [sp, #32]
   13458:	ldp	x29, x30, [sp], #48
   1345c:	b	0 <grub_free>
   13460:	ldr	x21, [sp, #32]
   13464:	ldp	x19, x20, [sp, #16]
   13468:	ldp	x29, x30, [sp], #48
   1346c:	ret
	...

0000000000013478 <grub_script_function_find>:
   13478:	stp	x29, x30, [sp, #-80]!
   1347c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   13480:	mov	x29, sp
   13484:	stp	x19, x20, [sp, #16]
   13488:	mov	x20, x0
   1348c:	ldr	x0, [x1]
   13490:	ldr	x19, [x0]
   13494:	cbnz	x19, 134a4 <grub_script_function_find+0x2c>
   13498:	b	134c4 <grub_script_function_find+0x4c>
   1349c:	ldr	x19, [x19, #24]
   134a0:	cbz	x19, 134c4 <grub_script_function_find+0x4c>
   134a4:	ldr	x1, [x19]
   134a8:	mov	x0, x20
   134ac:	bl	0 <grub_strcmp>
   134b0:	cbnz	w0, 1349c <grub_script_function_find+0x24>
   134b4:	mov	x0, x19
   134b8:	ldp	x19, x20, [sp, #16]
   134bc:	ldp	x29, x30, [sp], #80
   134c0:	ret
   134c4:	str	x21, [sp, #32]
   134c8:	add	x21, sp, #0x38
   134cc:	add	x3, x20, #0x14
   134d0:	mov	x1, x21
   134d4:	b	134dc <grub_script_function_find+0x64>
   134d8:	b.eq	134ec <grub_script_function_find+0x74>  // b.none
   134dc:	ldrb	w0, [x20], #1
   134e0:	strb	w0, [x1], #1
   134e4:	cmp	x20, x3
   134e8:	cbnz	w0, 134d8 <grub_script_function_find+0x60>
   134ec:	mov	x0, x21
   134f0:	strb	wzr, [sp, #76]
   134f4:	bl	0 <grub_strlen>
   134f8:	add	x0, x21, x0
   134fc:	sub	x1, x0, #0x1
   13500:	cmp	x1, x21
   13504:	b.cc	13590 <grub_script_function_find+0x118>  // b.lo, b.ul, b.last
   13508:	add	x2, sp, #0x37
   1350c:	b	1351c <grub_script_function_find+0xa4>
   13510:	sub	x1, x1, #0x1
   13514:	cmp	x1, x2
   13518:	b.eq	13590 <grub_script_function_find+0x118>  // b.none
   1351c:	ldrb	w3, [x1]
   13520:	and	w4, w3, #0xc0
   13524:	cmp	w4, #0x80
   13528:	b.eq	13510 <grub_script_function_find+0x98>  // b.none
   1352c:	cmp	x1, x21
   13530:	b.cc	13590 <grub_script_function_find+0x118>  // b.lo, b.ul, b.last
   13534:	tbz	w3, #7, 13598 <grub_script_function_find+0x120>
   13538:	and	w2, w3, #0xe0
   1353c:	cmp	w2, #0xc0
   13540:	b.eq	135cc <grub_script_function_find+0x154>  // b.none
   13544:	and	w2, w3, #0xf0
   13548:	cmp	w2, #0xe0
   1354c:	b.eq	135a4 <grub_script_function_find+0x12c>  // b.none
   13550:	and	w3, w3, #0xf8
   13554:	cmp	w3, #0xf0
   13558:	b.eq	135b8 <grub_script_function_find+0x140>  // b.none
   1355c:	sub	x3, x1, x21
   13560:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   13564:	mov	x2, x21
   13568:	mov	x19, #0x0                   	// #0
   1356c:	mov	w0, #0x10                  	// #16
   13570:	ldr	x1, [x1]
   13574:	strb	wzr, [x21, x3]
   13578:	bl	0 <grub_error>
   1357c:	mov	x0, x19
   13580:	ldp	x19, x20, [sp, #16]
   13584:	ldr	x21, [sp, #32]
   13588:	ldp	x29, x30, [sp], #80
   1358c:	ret
   13590:	mov	x3, #0x0                   	// #0
   13594:	b	13560 <grub_script_function_find+0xe8>
   13598:	add	x1, x1, #0x1
   1359c:	sub	x3, x1, x21
   135a0:	b	13560 <grub_script_function_find+0xe8>
   135a4:	add	x3, x1, #0x3
   135a8:	cmp	x0, x3
   135ac:	b.cc	1355c <grub_script_function_find+0xe4>  // b.lo, b.ul, b.last
   135b0:	sub	x3, x3, x21
   135b4:	b	13560 <grub_script_function_find+0xe8>
   135b8:	add	x3, x1, #0x4
   135bc:	cmp	x0, x3
   135c0:	b.cc	1355c <grub_script_function_find+0xe4>  // b.lo, b.ul, b.last
   135c4:	sub	x3, x3, x21
   135c8:	b	13560 <grub_script_function_find+0xe8>
   135cc:	add	x2, x1, #0x2
   135d0:	cmp	x0, x2
   135d4:	b.cc	13550 <grub_script_function_find+0xd8>  // b.lo, b.ul, b.last
   135d8:	sub	x3, x2, x21
   135dc:	b	13560 <grub_script_function_find+0xe8>
	...

00000000000135f0 <grub_script_lexer_ref>:
   135f0:	ldr	w1, [x0, #16]
   135f4:	add	w1, w1, #0x1
   135f8:	str	w1, [x0, #16]
   135fc:	ret

0000000000013600 <grub_script_lexer_deref>:
   13600:	ldr	w1, [x0, #16]
   13604:	sub	w1, w1, #0x1
   13608:	str	w1, [x0, #16]
   1360c:	ret

0000000000013610 <grub_script_lexer_record_start>:
   13610:	stp	x29, x30, [sp, #-32]!
   13614:	mov	x29, sp
   13618:	stp	x19, x20, [sp, #16]
   1361c:	mov	x20, x0
   13620:	ldr	x19, [x0, #40]
   13624:	ldr	w0, [x19, #20]
   13628:	ldr	x1, [x19, #24]
   1362c:	add	w0, w0, #0x1
   13630:	str	w0, [x19, #20]
   13634:	cbz	x1, 13648 <grub_script_lexer_record_start+0x38>
   13638:	ldr	w0, [x19, #32]
   1363c:	ldp	x19, x20, [sp, #16]
   13640:	ldp	x29, x30, [sp], #32
   13644:	ret
   13648:	mov	x0, #0x10000000000         	// #1099511627776
   1364c:	str	x0, [x19, #32]
   13650:	mov	x0, #0x100                 	// #256
   13654:	bl	0 <grub_malloc>
   13658:	str	x0, [x19, #24]
   1365c:	cbnz	x0, 13638 <grub_script_lexer_record_start+0x28>
   13660:	bl	0 <grub_print_error>
   13664:	ldr	w0, [x20, #8]
   13668:	add	w0, w0, #0x1
   1366c:	str	w0, [x20, #8]
   13670:	str	wzr, [x19, #36]
   13674:	b	13638 <grub_script_lexer_record_start+0x28>

0000000000013678 <grub_script_lexer_record_stop>:
   13678:	stp	x29, x30, [sp, #-48]!
   1367c:	mov	x29, sp
   13680:	stp	x21, x22, [sp, #32]
   13684:	ldr	x21, [x0, #40]
   13688:	stp	x19, x20, [sp, #16]
   1368c:	mov	w19, w1
   13690:	ldr	w1, [x21, #20]
   13694:	cbz	w1, 13734 <grub_script_lexer_record_stop+0xbc>
   13698:	ldr	x2, [x21, #24]
   1369c:	sub	w1, w1, #0x1
   136a0:	str	w1, [x21, #20]
   136a4:	cbz	x2, 13734 <grub_script_lexer_record_stop+0xbc>
   136a8:	ldr	w22, [x21, #32]
   136ac:	sub	w22, w22, w19
   136b0:	add	w1, w22, #0x1
   136b4:	sxtw	x1, w1
   136b8:	bl	fef0 <grub_script_malloc>
   136bc:	mov	x20, x0
   136c0:	cbz	x0, 136f8 <grub_script_lexer_record_stop+0x80>
   136c4:	ldr	x3, [x21, #24]
   136c8:	sub	w0, w22, #0x1
   136cc:	mov	x2, #0x0                   	// #0
   136d0:	add	x3, x3, w19, uxtw
   136d4:	b	136dc <grub_script_lexer_record_stop+0x64>
   136d8:	b.eq	136f4 <grub_script_lexer_record_stop+0x7c>  // b.none
   136dc:	ldrb	w1, [x3, x2]
   136e0:	add	x4, x2, #0x1
   136e4:	strb	w1, [x20, x2]
   136e8:	cmp	x2, x0
   136ec:	mov	x2, x4
   136f0:	cbnz	w1, 136d8 <grub_script_lexer_record_stop+0x60>
   136f4:	strb	wzr, [x20, w22, sxtw]
   136f8:	ldr	w0, [x21, #20]
   136fc:	cbz	w0, 13714 <grub_script_lexer_record_stop+0x9c>
   13700:	mov	x0, x20
   13704:	ldp	x19, x20, [sp, #16]
   13708:	ldp	x21, x22, [sp, #32]
   1370c:	ldp	x29, x30, [sp], #48
   13710:	ret
   13714:	ldr	x0, [x21, #24]
   13718:	bl	0 <grub_free>
   1371c:	stp	xzr, xzr, [x21, #24]
   13720:	mov	x0, x20
   13724:	ldp	x19, x20, [sp, #16]
   13728:	ldp	x21, x22, [sp, #32]
   1372c:	ldp	x29, x30, [sp], #48
   13730:	ret
   13734:	mov	x20, #0x0                   	// #0
   13738:	mov	x0, x20
   1373c:	ldp	x19, x20, [sp, #16]
   13740:	ldp	x21, x22, [sp, #32]
   13744:	ldp	x29, x30, [sp], #48
   13748:	ret
   1374c:	nop

0000000000013750 <grub_script_lexer_record>:
   13750:	stp	x29, x30, [sp, #-64]!
   13754:	mov	x29, sp
   13758:	stp	x19, x20, [sp, #16]
   1375c:	mov	x20, x0
   13760:	ldr	x19, [x0, #40]
   13764:	ldr	w0, [x19, #20]
   13768:	cbz	w0, 137e8 <grub_script_lexer_record+0x98>
   1376c:	ldr	x0, [x19, #24]
   13770:	cbz	x0, 137e8 <grub_script_lexer_record+0x98>
   13774:	mov	x0, x1
   13778:	stp	x21, x22, [sp, #32]
   1377c:	mov	x21, x1
   13780:	bl	0 <grub_strlen>
   13784:	mov	x22, x0
   13788:	ldp	w2, w1, [x19, #32]
   1378c:	add	w0, w2, w0
   13790:	cmp	w0, w1
   13794:	b.lt	137f4 <grub_script_lexer_record+0xa4>  // b.tstop
   13798:	cmp	w22, w1
   1379c:	str	x23, [sp, #48]
   137a0:	csel	w1, w22, w1, ge  // ge = tcont
   137a4:	ldr	x23, [x19, #24]
   137a8:	lsl	w1, w1, #1
   137ac:	str	w1, [x19, #36]
   137b0:	mov	x0, x23
   137b4:	sxtw	x1, w1
   137b8:	bl	0 <grub_realloc>
   137bc:	str	x0, [x19, #24]
   137c0:	cbz	x0, 137fc <grub_script_lexer_record+0xac>
   137c4:	ldr	w2, [x19, #32]
   137c8:	ldr	x23, [sp, #48]
   137cc:	mov	x1, x21
   137d0:	add	x0, x0, w2, sxtw
   137d4:	bl	0 <grub_strcpy>
   137d8:	ldr	w0, [x19, #32]
   137dc:	add	w22, w0, w22
   137e0:	str	w22, [x19, #32]
   137e4:	ldp	x21, x22, [sp, #32]
   137e8:	ldp	x19, x20, [sp, #16]
   137ec:	ldp	x29, x30, [sp], #64
   137f0:	ret
   137f4:	ldr	x0, [x19, #24]
   137f8:	b	137cc <grub_script_lexer_record+0x7c>
   137fc:	mov	x0, x23
   13800:	bl	0 <grub_free>
   13804:	str	xzr, [x19, #32]
   13808:	bl	0 <grub_print_error>
   1380c:	ldr	w0, [x20, #8]
   13810:	ldp	x21, x22, [sp, #32]
   13814:	add	w0, w0, #0x1
   13818:	ldr	x23, [sp, #48]
   1381c:	str	w0, [x20, #8]
   13820:	b	137e8 <grub_script_lexer_record+0x98>
   13824:	nop

0000000000013828 <grub_script_lexer_yywrap>:
   13828:	stp	x29, x30, [sp, #-64]!
   1382c:	mov	x29, sp
   13830:	stp	x21, x22, [sp, #32]
   13834:	mov	x22, x0
   13838:	mov	x0, x1
   1383c:	stp	x19, x20, [sp, #16]
   13840:	ldr	x20, [x22, #40]
   13844:	str	xzr, [sp, #56]
   13848:	ldr	w1, [x20, #16]
   1384c:	cbnz	w1, 13858 <grub_script_lexer_yywrap+0x30>
   13850:	ldr	x1, [x20, #80]
   13854:	cbz	x1, 13994 <grub_script_lexer_yywrap+0x16c>
   13858:	ldr	x3, [x20]
   1385c:	cbz	x3, 13920 <grub_script_lexer_yywrap+0xf8>
   13860:	cbnz	x0, 13924 <grub_script_lexer_yywrap+0xfc>
   13864:	ldr	x2, [x20, #8]
   13868:	add	x0, sp, #0x38
   1386c:	mov	w1, #0x1                   	// #1
   13870:	blr	x3
   13874:	ldr	x0, [sp, #56]
   13878:	cbz	x0, 13930 <grub_script_lexer_yywrap+0x108>
   1387c:	bl	0 <grub_strlen>
   13880:	mov	x21, x0
   13884:	ldr	x19, [sp, #56]
   13888:	ldrb	w0, [x19]
   1388c:	cbz	w0, 13964 <grub_script_lexer_yywrap+0x13c>
   13890:	cbz	x21, 138a4 <grub_script_lexer_yywrap+0x7c>
   13894:	add	x0, x19, x21
   13898:	ldurb	w0, [x0, #-1]
   1389c:	cmp	w0, #0xa
   138a0:	b.ne	139a0 <grub_script_lexer_yywrap+0x178>  // b.any
   138a4:	ldr	x0, [x20, #80]
   138a8:	cbz	x0, 138f0 <grub_script_lexer_yywrap+0xc8>
   138ac:	bl	0 <grub_strlen>
   138b0:	mov	x1, x0
   138b4:	add	x21, x21, #0x1
   138b8:	add	x0, x21, w0, sxtw
   138bc:	sxtw	x21, w1
   138c0:	bl	0 <grub_malloc>
   138c4:	mov	x19, x0
   138c8:	cbz	x0, 139d4 <grub_script_lexer_yywrap+0x1ac>
   138cc:	ldr	x1, [x20, #80]
   138d0:	bl	0 <grub_strcpy>
   138d4:	str	xzr, [x20, #80]
   138d8:	ldr	x1, [sp, #56]
   138dc:	add	x0, x19, x21
   138e0:	bl	0 <grub_strcpy>
   138e4:	ldr	x0, [sp, #56]
   138e8:	bl	0 <grub_free>
   138ec:	str	x19, [sp, #56]
   138f0:	ldr	x1, [x20, #88]
   138f4:	mov	x0, x19
   138f8:	bl	161e0 <yy_scan_string>
   138fc:	mov	x19, x0
   13900:	ldr	x0, [sp, #56]
   13904:	bl	0 <grub_free>
   13908:	mov	w0, #0x0                   	// #0
   1390c:	cbz	x19, 13940 <grub_script_lexer_yywrap+0x118>
   13910:	ldp	x19, x20, [sp, #16]
   13914:	ldp	x21, x22, [sp, #32]
   13918:	ldp	x29, x30, [sp], #64
   1391c:	ret
   13920:	cbz	x0, 139e4 <grub_script_lexer_yywrap+0x1bc>
   13924:	bl	0 <grub_strdup>
   13928:	str	x0, [sp, #56]
   1392c:	cbnz	x0, 1387c <grub_script_lexer_yywrap+0x54>
   13930:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   13934:	mov	w0, #0x11                  	// #17
   13938:	ldr	x1, [x1]
   1393c:	bl	0 <grub_error>
   13940:	bl	0 <grub_print_error>
   13944:	ldr	w1, [x22, #8]
   13948:	mov	w0, #0x1                   	// #1
   1394c:	ldp	x19, x20, [sp, #16]
   13950:	add	w1, w1, w0
   13954:	str	w1, [x22, #8]
   13958:	ldp	x21, x22, [sp, #32]
   1395c:	ldp	x29, x30, [sp], #64
   13960:	ret
   13964:	mov	x0, x19
   13968:	bl	0 <grub_free>
   1396c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   13970:	mov	x21, #0x1                   	// #1
   13974:	ldr	x0, [x0]
   13978:	bl	0 <grub_strdup>
   1397c:	str	x0, [sp, #56]
   13980:	mov	x19, x0
   13984:	cbz	x19, 13930 <grub_script_lexer_yywrap+0x108>
   13988:	ldr	x0, [x20, #80]
   1398c:	cbnz	x0, 138ac <grub_script_lexer_yywrap+0x84>
   13990:	b	138f0 <grub_script_lexer_yywrap+0xc8>
   13994:	cbnz	x0, 13924 <grub_script_lexer_yywrap+0xfc>
   13998:	mov	w0, #0x1                   	// #1
   1399c:	b	13910 <grub_script_lexer_yywrap+0xe8>
   139a0:	mov	x0, x19
   139a4:	add	x1, x21, #0x2
   139a8:	bl	0 <grub_realloc>
   139ac:	mov	x19, x0
   139b0:	cbz	x0, 139c8 <grub_script_lexer_yywrap+0x1a0>
   139b4:	add	x0, x21, #0x1
   139b8:	mov	w1, #0xa                   	// #10
   139bc:	strb	w1, [x19, x21]
   139c0:	mov	x21, x0
   139c4:	strb	wzr, [x19, x0]
   139c8:	str	x19, [sp, #56]
   139cc:	cbnz	x19, 13988 <grub_script_lexer_yywrap+0x160>
   139d0:	b	13930 <grub_script_lexer_yywrap+0x108>
   139d4:	ldr	x0, [sp, #56]
   139d8:	bl	0 <grub_free>
   139dc:	mov	w0, #0x1                   	// #1
   139e0:	b	13910 <grub_script_lexer_yywrap+0xe8>
   139e4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   139e8:	mov	w0, #0x11                  	// #17
   139ec:	ldr	x1, [x1]
   139f0:	bl	0 <grub_error>
   139f4:	b	13940 <grub_script_lexer_yywrap+0x118>
	...

0000000000013a10 <grub_script_lexer_init>:
   13a10:	stp	x29, x30, [sp, #-64]!
   13a14:	mov	x29, sp
   13a18:	stp	x19, x20, [sp, #16]
   13a1c:	mov	x20, x0
   13a20:	mov	x0, #0x68                  	// #104
   13a24:	stp	x21, x22, [sp, #32]
   13a28:	mov	x21, x1
   13a2c:	mov	x22, x3
   13a30:	str	x23, [sp, #48]
   13a34:	mov	x23, x2
   13a38:	bl	0 <grub_zalloc>
   13a3c:	mov	x19, x0
   13a40:	cbz	x0, 13a98 <grub_script_lexer_init+0x88>
   13a44:	mov	w0, #0x20                  	// #32
   13a48:	str	w0, [x19, #68]
   13a4c:	mov	x0, #0x20                  	// #32
   13a50:	bl	0 <grub_malloc>
   13a54:	str	x0, [x19, #56]
   13a58:	cbz	x0, 13ac4 <grub_script_lexer_init+0xb4>
   13a5c:	stp	x23, x22, [x19]
   13a60:	add	x0, x19, #0x58
   13a64:	bl	17810 <yylex_init>
   13a68:	cbnz	w0, 13abc <grub_script_lexer_init+0xac>
   13a6c:	ldr	x1, [x19, #88]
   13a70:	mov	x0, x20
   13a74:	bl	17748 <yyset_extra>
   13a78:	str	x19, [x20, #40]
   13a7c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   13a80:	cmp	x21, #0x0
   13a84:	ldr	x1, [x0]
   13a88:	mov	x0, x20
   13a8c:	csel	x1, x21, x1, ne  // ne = any
   13a90:	bl	13828 <grub_script_lexer_yywrap>
   13a94:	cbnz	w0, 13ab0 <grub_script_lexer_init+0xa0>
   13a98:	mov	x0, x19
   13a9c:	ldp	x19, x20, [sp, #16]
   13aa0:	ldp	x21, x22, [sp, #32]
   13aa4:	ldr	x23, [sp, #48]
   13aa8:	ldp	x29, x30, [sp], #64
   13aac:	ret
   13ab0:	ldr	x0, [x19, #88]
   13ab4:	str	xzr, [x20, #40]
   13ab8:	bl	17968 <yylex_destroy>
   13abc:	ldr	x0, [x19, #56]
   13ac0:	bl	0 <grub_free>
   13ac4:	mov	x0, x19
   13ac8:	mov	x19, #0x0                   	// #0
   13acc:	bl	0 <grub_free>
   13ad0:	mov	x0, x19
   13ad4:	ldp	x19, x20, [sp, #16]
   13ad8:	ldp	x21, x22, [sp, #32]
   13adc:	ldr	x23, [sp, #48]
   13ae0:	ldp	x29, x30, [sp], #64
   13ae4:	ret
	...

0000000000013af0 <grub_script_lexer_fini>:
   13af0:	cbz	x0, 13b2c <grub_script_lexer_fini+0x3c>
   13af4:	stp	x29, x30, [sp, #-32]!
   13af8:	mov	x29, sp
   13afc:	str	x19, [sp, #16]
   13b00:	mov	x19, x0
   13b04:	ldr	x0, [x0, #88]
   13b08:	bl	17968 <yylex_destroy>
   13b0c:	ldr	x0, [x19, #24]
   13b10:	bl	0 <grub_free>
   13b14:	ldr	x0, [x19, #56]
   13b18:	bl	0 <grub_free>
   13b1c:	mov	x0, x19
   13b20:	ldr	x19, [sp, #16]
   13b24:	ldp	x29, x30, [sp], #32
   13b28:	b	0 <grub_free>
   13b2c:	ret

0000000000013b30 <grub_script_yylex>:
   13b30:	stp	x29, x30, [sp, #-96]!
   13b34:	mov	x29, sp
   13b38:	stp	x19, x20, [sp, #16]
   13b3c:	ldr	w20, [x1, #8]
   13b40:	ldr	x19, [x1, #40]
   13b44:	str	xzr, [x0]
   13b48:	cbnz	w20, 13c50 <grub_script_yylex+0x120>
   13b4c:	stp	x21, x22, [sp, #32]
   13b50:	mov	x21, x0
   13b54:	ldr	w0, [x19, #40]
   13b58:	cbnz	w0, 13c64 <grub_script_yylex+0x134>
   13b5c:	stp	x23, x24, [sp, #48]
   13b60:	mov	x22, x1
   13b64:	mov	w23, #0x1                   	// #1
   13b68:	stp	x25, x26, [sp, #64]
   13b6c:	adrp	x24, 0 <grub_normal_free_menu-0x498>
   13b70:	adrp	x26, 0 <grub_normal_free_menu-0x498>
   13b74:	stp	x27, x28, [sp, #80]
   13b78:	adrp	x25, 0 <grub_normal_free_menu-0x498>
   13b7c:	stur	xzr, [x19, #44]
   13b80:	b	13bd0 <grub_script_yylex+0xa0>
   13b84:	ldr	w28, [x19, #72]
   13b88:	ldr	x27, [x19, #56]
   13b8c:	mov	x5, x27
   13b90:	ldr	x3, [x26]
   13b94:	mov	w4, w20
   13b98:	ldr	x2, [x25]
   13b9c:	mov	w1, #0x141                 	// #321
   13ba0:	ldr	x0, [x24]
   13ba4:	bl	0 <grub_real_dprintf>
   13ba8:	ldr	x1, [x21]
   13bac:	mov	x3, x27
   13bb0:	mov	w2, w28
   13bb4:	mov	x0, x22
   13bb8:	bl	100f8 <grub_script_arg_add>
   13bbc:	ldr	w1, [x19, #44]
   13bc0:	str	x0, [x21]
   13bc4:	cbz	w1, 13c14 <grub_script_yylex+0xe4>
   13bc8:	ldr	w1, [x19, #48]
   13bcc:	cbnz	w1, 13c14 <grub_script_yylex+0xe4>
   13bd0:	ldr	x1, [x19, #56]
   13bd4:	str	w23, [x19, #64]
   13bd8:	mov	x0, x21
   13bdc:	strb	wzr, [x1]
   13be0:	ldr	x1, [x19, #88]
   13be4:	bl	16210 <yylex>
   13be8:	mov	w20, w0
   13bec:	cmp	w0, #0x102
   13bf0:	b.eq	13c10 <grub_script_yylex+0xe0>  // b.none
   13bf4:	ldr	w0, [x19, #44]
   13bf8:	cbnz	w0, 13b84 <grub_script_yylex+0x54>
   13bfc:	ldr	x0, [x19, #88]
   13c00:	mov	w28, #0x1                   	// #1
   13c04:	bl	17740 <yyget_text>
   13c08:	mov	x27, x0
   13c0c:	b	13b8c <grub_script_yylex+0x5c>
   13c10:	ldr	x0, [x21]
   13c14:	cbz	x0, 13c40 <grub_script_yylex+0x110>
   13c18:	ldr	w0, [x22, #8]
   13c1c:	cbnz	w0, 13c40 <grub_script_yylex+0x110>
   13c20:	mov	w0, w20
   13c24:	ldp	x19, x20, [sp, #16]
   13c28:	ldp	x21, x22, [sp, #32]
   13c2c:	ldp	x23, x24, [sp, #48]
   13c30:	ldp	x25, x26, [sp, #64]
   13c34:	ldp	x27, x28, [sp, #80]
   13c38:	ldp	x29, x30, [sp], #96
   13c3c:	ret
   13c40:	ldp	x21, x22, [sp, #32]
   13c44:	ldp	x23, x24, [sp, #48]
   13c48:	ldp	x25, x26, [sp, #64]
   13c4c:	ldp	x27, x28, [sp, #80]
   13c50:	mov	w20, #0x102                 	// #258
   13c54:	mov	w0, w20
   13c58:	ldp	x19, x20, [sp, #16]
   13c5c:	ldp	x29, x30, [sp], #96
   13c60:	ret
   13c64:	mov	w0, w20
   13c68:	ldp	x19, x20, [sp, #16]
   13c6c:	ldp	x21, x22, [sp, #32]
   13c70:	ldp	x29, x30, [sp], #96
   13c74:	ret
	...

0000000000013c90 <grub_script_yyerror>:
   13c90:	stp	x29, x30, [sp, #-32]!
   13c94:	mov	x29, sp
   13c98:	str	x19, [sp, #16]
   13c9c:	mov	x19, x0
   13ca0:	cbz	x1, 13cac <grub_script_yyerror+0x1c>
   13ca4:	mov	w0, #0x11                  	// #17
   13ca8:	bl	0 <grub_error>
   13cac:	bl	0 <grub_print_error>
   13cb0:	ldr	w0, [x19, #8]
   13cb4:	add	w0, w0, #0x1
   13cb8:	str	w0, [x19, #8]
   13cbc:	ldr	x19, [sp, #16]
   13cc0:	ldp	x29, x30, [sp], #32
   13cc4:	ret

0000000000013cc8 <grub_script_argv_free>:
   13cc8:	stp	x29, x30, [sp, #-32]!
   13ccc:	mov	x29, sp
   13cd0:	stp	x19, x20, [sp, #16]
   13cd4:	mov	x20, x0
   13cd8:	ldr	x0, [x0, #8]
   13cdc:	cbz	x0, 13d10 <grub_script_argv_free+0x48>
   13ce0:	ldr	w1, [x20]
   13ce4:	cbz	w1, 13d0c <grub_script_argv_free+0x44>
   13ce8:	mov	w19, #0x0                   	// #0
   13cec:	nop
   13cf0:	ldr	x0, [x0, w19, uxtw #3]
   13cf4:	add	w19, w19, #0x1
   13cf8:	bl	0 <grub_free>
   13cfc:	ldr	w0, [x20]
   13d00:	cmp	w0, w19
   13d04:	ldr	x0, [x20, #8]
   13d08:	b.hi	13cf0 <grub_script_argv_free+0x28>  // b.pmore
   13d0c:	bl	0 <grub_free>
   13d10:	str	wzr, [x20]
   13d14:	stp	xzr, xzr, [x20, #8]
   13d18:	ldp	x19, x20, [sp, #16]
   13d1c:	ldp	x29, x30, [sp], #32
   13d20:	ret
   13d24:	nop

0000000000013d28 <grub_script_argv_make>:
   13d28:	stp	x29, x30, [sp, #-96]!
   13d2c:	cmp	w1, #0x0
   13d30:	mov	x29, sp
   13d34:	stp	x19, x20, [sp, #16]
   13d38:	stp	x21, x22, [sp, #32]
   13d3c:	stp	x23, x24, [sp, #48]
   13d40:	mov	x23, x0
   13d44:	b.le	13ef4 <grub_script_argv_make+0x1cc>
   13d48:	sub	w1, w1, #0x1
   13d4c:	add	x22, x2, #0x8
   13d50:	mov	x20, x2
   13d54:	mov	x21, #0x0                   	// #0
   13d58:	add	x22, x22, w1, uxtw #3
   13d5c:	mov	w19, #0x0                   	// #0
   13d60:	stp	x25, x26, [sp, #64]
   13d64:	stp	x27, x28, [sp, #80]
   13d68:	cbz	x21, 13d80 <grub_script_argv_make+0x58>
   13d6c:	cbz	w19, 13d80 <grub_script_argv_make+0x58>
   13d70:	sub	w0, w19, #0x1
   13d74:	add	x26, x21, x0, lsl #3
   13d78:	ldr	x0, [x21, x0, lsl #3]
   13d7c:	cbz	x0, 13dd0 <grub_script_argv_make+0xa8>
   13d80:	lsl	w1, w19, #3
   13d84:	mov	x0, x21
   13d88:	add	w1, w1, #0xf
   13d8c:	orr	w1, w1, w1, lsr #1
   13d90:	orr	w1, w1, w1, lsr #2
   13d94:	orr	w1, w1, w1, lsr #4
   13d98:	orr	w1, w1, w1, lsr #8
   13d9c:	orr	w1, w1, w1, lsr #16
   13da0:	adds	w1, w1, #0x1
   13da4:	cinc	w1, w1, eq  // eq = none
   13da8:	mov	w1, w1
   13dac:	bl	0 <grub_realloc>
   13db0:	cbz	x0, 13e8c <grub_script_argv_make+0x164>
   13db4:	add	w1, w19, #0x1
   13db8:	cbnz	w19, 13dc0 <grub_script_argv_make+0x98>
   13dbc:	str	xzr, [x0]
   13dc0:	add	x26, x0, w19, uxtw #3
   13dc4:	mov	x21, x0
   13dc8:	mov	w19, w1
   13dcc:	str	xzr, [x0, w1, uxtw #3]
   13dd0:	ldr	x28, [x20]
   13dd4:	mov	x0, x28
   13dd8:	bl	0 <grub_strlen>
   13ddc:	mov	x24, x0
   13de0:	cbz	x28, 13e4c <grub_script_argv_make+0x124>
   13de4:	ldr	x27, [x26]
   13de8:	cbz	x27, 13e80 <grub_script_argv_make+0x158>
   13dec:	mov	x0, x27
   13df0:	bl	0 <grub_strlen>
   13df4:	mov	x25, x0
   13df8:	mov	w1, w0
   13dfc:	add	w1, w1, w24
   13e00:	mov	x0, x27
   13e04:	orr	w1, w1, w1, lsr #1
   13e08:	orr	w1, w1, w1, lsr #2
   13e0c:	orr	w1, w1, w1, lsr #4
   13e10:	orr	w1, w1, w1, lsr #8
   13e14:	orr	w1, w1, w1, lsr #16
   13e18:	adds	w1, w1, #0x1
   13e1c:	cinc	w1, w1, eq  // eq = none
   13e20:	mov	w1, w1
   13e24:	bl	0 <grub_realloc>
   13e28:	mov	x27, x0
   13e2c:	cbz	x0, 13eb0 <grub_script_argv_make+0x188>
   13e30:	mov	x2, x24
   13e34:	add	x24, x27, x24
   13e38:	mov	x1, x28
   13e3c:	add	x0, x0, x25
   13e40:	bl	0 <grub_memmove>
   13e44:	strb	wzr, [x24, x25]
   13e48:	str	x27, [x26]
   13e4c:	add	x20, x20, #0x8
   13e50:	cmp	x22, x20
   13e54:	b.ne	13d68 <grub_script_argv_make+0x40>  // b.any
   13e58:	ldp	x25, x26, [sp, #64]
   13e5c:	ldp	x27, x28, [sp, #80]
   13e60:	str	w19, [x23]
   13e64:	stp	x21, xzr, [x23, #8]
   13e68:	mov	w0, #0x0                   	// #0
   13e6c:	ldp	x19, x20, [sp, #16]
   13e70:	ldp	x21, x22, [sp, #32]
   13e74:	ldp	x23, x24, [sp, #48]
   13e78:	ldp	x29, x30, [sp], #96
   13e7c:	ret
   13e80:	mov	w1, #0x0                   	// #0
   13e84:	mov	x25, #0x0                   	// #0
   13e88:	b	13dfc <grub_script_argv_make+0xd4>
   13e8c:	mov	w0, #0x1                   	// #1
   13e90:	cbnz	x21, 13eb0 <grub_script_argv_make+0x188>
   13e94:	ldp	x19, x20, [sp, #16]
   13e98:	ldp	x21, x22, [sp, #32]
   13e9c:	ldp	x23, x24, [sp, #48]
   13ea0:	ldp	x25, x26, [sp, #64]
   13ea4:	ldp	x27, x28, [sp, #80]
   13ea8:	ldp	x29, x30, [sp], #96
   13eac:	ret
   13eb0:	mov	x20, #0x0                   	// #0
   13eb4:	cbz	w19, 13ecc <grub_script_argv_make+0x1a4>
   13eb8:	ldr	x0, [x21, x20, lsl #3]
   13ebc:	add	x20, x20, #0x1
   13ec0:	bl	0 <grub_free>
   13ec4:	cmp	w19, w20
   13ec8:	b.hi	13eb8 <grub_script_argv_make+0x190>  // b.pmore
   13ecc:	mov	x0, x21
   13ed0:	bl	0 <grub_free>
   13ed4:	mov	w0, #0x1                   	// #1
   13ed8:	ldp	x19, x20, [sp, #16]
   13edc:	ldp	x21, x22, [sp, #32]
   13ee0:	ldp	x23, x24, [sp, #48]
   13ee4:	ldp	x25, x26, [sp, #64]
   13ee8:	ldp	x27, x28, [sp, #80]
   13eec:	ldp	x29, x30, [sp], #96
   13ef0:	ret
   13ef4:	mov	x21, #0x0                   	// #0
   13ef8:	mov	w19, #0x0                   	// #0
   13efc:	b	13e60 <grub_script_argv_make+0x138>

0000000000013f00 <grub_script_argv_next>:
   13f00:	stp	x29, x30, [sp, #-32]!
   13f04:	mov	x29, sp
   13f08:	ldr	w1, [x0]
   13f0c:	str	x19, [sp, #16]
   13f10:	mov	x19, x0
   13f14:	ldr	x0, [x0, #8]
   13f18:	cbz	x0, 13f20 <grub_script_argv_next+0x20>
   13f1c:	cbnz	w1, 13f84 <grub_script_argv_next+0x84>
   13f20:	lsl	w1, w1, #3
   13f24:	add	w1, w1, #0xf
   13f28:	orr	w1, w1, w1, lsr #1
   13f2c:	orr	w1, w1, w1, lsr #2
   13f30:	orr	w1, w1, w1, lsr #4
   13f34:	orr	w1, w1, w1, lsr #8
   13f38:	orr	w1, w1, w1, lsr #16
   13f3c:	adds	w1, w1, #0x1
   13f40:	cinc	w1, w1, eq  // eq = none
   13f44:	mov	w1, w1
   13f48:	bl	0 <grub_realloc>
   13f4c:	mov	x1, x0
   13f50:	cbz	x0, 13f98 <grub_script_argv_next+0x98>
   13f54:	ldr	w2, [x19]
   13f58:	str	x0, [x19, #8]
   13f5c:	add	w2, w2, #0x1
   13f60:	str	w2, [x19]
   13f64:	cmp	w2, #0x1
   13f68:	b.ne	13f70 <grub_script_argv_next+0x70>  // b.any
   13f6c:	str	xzr, [x0]
   13f70:	mov	w0, #0x0                   	// #0
   13f74:	str	xzr, [x1, w2, uxtw #3]
   13f78:	ldr	x19, [sp, #16]
   13f7c:	ldp	x29, x30, [sp], #32
   13f80:	ret
   13f84:	sub	w2, w1, #0x1
   13f88:	ldr	x2, [x0, x2, lsl #3]
   13f8c:	cbnz	x2, 13f20 <grub_script_argv_next+0x20>
   13f90:	mov	w0, #0x0                   	// #0
   13f94:	b	13f78 <grub_script_argv_next+0x78>
   13f98:	mov	w0, #0x1                   	// #1
   13f9c:	ldr	x19, [sp, #16]
   13fa0:	ldp	x29, x30, [sp], #32
   13fa4:	ret

0000000000013fa8 <grub_script_argv_append>:
   13fa8:	stp	x29, x30, [sp, #-64]!
   13fac:	mov	x29, sp
   13fb0:	stp	x19, x20, [sp, #16]
   13fb4:	mov	x20, x0
   13fb8:	ldr	w0, [x0]
   13fbc:	stp	x21, x22, [sp, #32]
   13fc0:	mov	x21, x1
   13fc4:	ldr	x1, [x20, #8]
   13fc8:	cbz	x21, 14088 <grub_script_argv_append+0xe0>
   13fcc:	sub	w0, w0, #0x1
   13fd0:	mov	x19, x2
   13fd4:	ldr	x22, [x1, x0, lsl #3]
   13fd8:	str	x23, [sp, #48]
   13fdc:	cbz	x22, 14068 <grub_script_argv_append+0xc0>
   13fe0:	mov	x0, x22
   13fe4:	bl	0 <grub_strlen>
   13fe8:	mov	x23, x0
   13fec:	mov	w3, w0
   13ff0:	add	w3, w3, w19
   13ff4:	mov	x0, x22
   13ff8:	orr	w3, w3, w3, lsr #1
   13ffc:	orr	w3, w3, w3, lsr #2
   14000:	orr	w3, w3, w3, lsr #4
   14004:	orr	w3, w3, w3, lsr #8
   14008:	orr	w3, w3, w3, lsr #16
   1400c:	adds	w3, w3, #0x1
   14010:	cinc	w3, w3, eq  // eq = none
   14014:	mov	w1, w3
   14018:	bl	0 <grub_realloc>
   1401c:	mov	x22, x0
   14020:	mov	w0, #0x1                   	// #1
   14024:	cbz	x22, 14074 <grub_script_argv_append+0xcc>
   14028:	add	x23, x22, x23
   1402c:	mov	x1, x21
   14030:	mov	x2, x19
   14034:	mov	x0, x23
   14038:	bl	0 <grub_memmove>
   1403c:	strb	wzr, [x23, x19]
   14040:	mov	w0, #0x0                   	// #0
   14044:	ldr	w1, [x20]
   14048:	ldr	x2, [x20, #8]
   1404c:	sub	w1, w1, #0x1
   14050:	ldp	x19, x20, [sp, #16]
   14054:	str	x22, [x2, x1, lsl #3]
   14058:	ldp	x21, x22, [sp, #32]
   1405c:	ldr	x23, [sp, #48]
   14060:	ldp	x29, x30, [sp], #64
   14064:	ret
   14068:	mov	w3, #0x0                   	// #0
   1406c:	mov	x23, #0x0                   	// #0
   14070:	b	13ff0 <grub_script_argv_append+0x48>
   14074:	ldp	x19, x20, [sp, #16]
   14078:	ldp	x21, x22, [sp, #32]
   1407c:	ldr	x23, [sp, #48]
   14080:	ldp	x29, x30, [sp], #64
   14084:	ret
   14088:	mov	w0, #0x0                   	// #0
   1408c:	ldp	x19, x20, [sp, #16]
   14090:	ldp	x21, x22, [sp, #32]
   14094:	ldp	x29, x30, [sp], #64
   14098:	ret
   1409c:	nop

00000000000140a0 <grub_script_argv_split_append>:
   140a0:	stp	x29, x30, [sp, #-48]!
   140a4:	mov	x29, sp
   140a8:	stp	x21, x22, [sp, #32]
   140ac:	cbz	x1, 14168 <grub_script_argv_split_append+0xc8>
   140b0:	stp	x19, x20, [sp, #16]
   140b4:	mov	x22, x0
   140b8:	mov	x20, x1
   140bc:	ldrb	w0, [x1]
   140c0:	cbnz	w0, 140d0 <grub_script_argv_split_append+0x30>
   140c4:	b	14164 <grub_script_argv_split_append+0xc4>
   140c8:	ldrb	w0, [x20, #1]!
   140cc:	cbz	w0, 14164 <grub_script_argv_split_append+0xc4>
   140d0:	bl	0 <grub_isspace>
   140d4:	cbnz	w0, 140c8 <grub_script_argv_split_append+0x28>
   140d8:	ldrb	w0, [x20]
   140dc:	cbz	w0, 14164 <grub_script_argv_split_append+0xc4>
   140e0:	mov	x19, x20
   140e4:	b	140f0 <grub_script_argv_split_append+0x50>
   140e8:	ldrb	w0, [x19, #1]!
   140ec:	cbz	w0, 140f8 <grub_script_argv_split_append+0x58>
   140f0:	bl	0 <grub_isspace>
   140f4:	cbz	w0, 140e8 <grub_script_argv_split_append+0x48>
   140f8:	sub	x2, x19, x20
   140fc:	mov	x1, x20
   14100:	mov	x0, x22
   14104:	bl	13fa8 <grub_script_argv_append>
   14108:	mov	w21, w0
   1410c:	ldrb	w0, [x19]
   14110:	cbnz	w0, 14120 <grub_script_argv_split_append+0x80>
   14114:	b	14158 <grub_script_argv_split_append+0xb8>
   14118:	ldrb	w0, [x19, #1]!
   1411c:	cbz	w0, 14158 <grub_script_argv_split_append+0xb8>
   14120:	bl	0 <grub_isspace>
   14124:	cbnz	w0, 14118 <grub_script_argv_split_append+0x78>
   14128:	ldrb	w0, [x19]
   1412c:	mov	x20, x19
   14130:	cbz	w0, 14140 <grub_script_argv_split_append+0xa0>
   14134:	mov	x0, x22
   14138:	bl	13f00 <grub_script_argv_next>
   1413c:	add	w21, w21, w0
   14140:	cbz	w21, 140d8 <grub_script_argv_split_append+0x38>
   14144:	mov	w0, w21
   14148:	ldp	x19, x20, [sp, #16]
   1414c:	ldp	x21, x22, [sp, #32]
   14150:	ldp	x29, x30, [sp], #48
   14154:	ret
   14158:	mov	x20, x19
   1415c:	cbz	w21, 140d8 <grub_script_argv_split_append+0x38>
   14160:	b	14144 <grub_script_argv_split_append+0xa4>
   14164:	ldp	x19, x20, [sp, #16]
   14168:	mov	w21, #0x0                   	// #0
   1416c:	mov	w0, w21
   14170:	ldp	x21, x22, [sp, #32]
   14174:	ldp	x29, x30, [sp], #48
   14178:	ret
   1417c:	nop

0000000000014180 <grub_normal_add_menu_entry>:
   14180:	stp	x29, x30, [sp, #-128]!
   14184:	mov	x29, sp
   14188:	stp	x27, x28, [sp, #80]
   1418c:	mov	w27, w0
   14190:	ldr	w0, [sp, #128]
   14194:	mov	x28, x3
   14198:	stp	x19, x20, [sp, #16]
   1419c:	mov	x19, x2
   141a0:	mov	x20, x6
   141a4:	stp	x21, x22, [sp, #32]
   141a8:	mov	x21, x4
   141ac:	mov	x22, x5
   141b0:	stp	x23, x24, [sp, #48]
   141b4:	mov	x23, x7
   141b8:	stp	x25, x26, [sp, #64]
   141bc:	mov	x25, x1
   141c0:	str	w0, [sp, #112]
   141c4:	bl	cf68 <grub_env_get_menu>
   141c8:	cbz	x0, 144d0 <grub_normal_add_menu_entry+0x350>
   141cc:	mov	x24, x0
   141d0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   141d4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   141d8:	cmp	x20, #0x0
   141dc:	ldr	x0, [x0]
   141e0:	mov	x2, x23
   141e4:	ldr	x1, [x1]
   141e8:	csel	x1, x20, x1, ne  // ne = any
   141ec:	bl	0 <grub_xasprintf>
   141f0:	mov	x23, x0
   141f4:	cbz	x0, 142fc <grub_normal_add_menu_entry+0x17c>
   141f8:	cbz	x19, 14328 <grub_normal_add_menu_entry+0x1a8>
   141fc:	ldr	x0, [x19]
   14200:	cbz	x0, 14418 <grub_normal_add_menu_entry+0x298>
   14204:	mov	x0, #0x0                   	// #0
   14208:	mov	w2, w0
   1420c:	add	x0, x0, #0x1
   14210:	ldr	x1, [x19, x0, lsl #3]
   14214:	cbnz	x1, 14208 <grub_normal_add_menu_entry+0x88>
   14218:	add	w0, w2, #0x2
   1421c:	sbfiz	x0, x0, #4, #32
   14220:	bl	0 <grub_zalloc>
   14224:	mov	x26, x0
   14228:	cbz	x0, 1445c <grub_normal_add_menu_entry+0x2dc>
   1422c:	ldr	x0, [x19]
   14230:	cbz	x0, 14324 <grub_normal_add_menu_entry+0x1a4>
   14234:	add	x1, x26, #0x10
   14238:	str	x1, [sp, #104]
   1423c:	add	x19, x19, #0x8
   14240:	bl	0 <grub_strdup>
   14244:	mov	x20, x0
   14248:	ldr	x1, [sp, #104]
   1424c:	stur	x0, [x1, #-16]
   14250:	cbz	x0, 14280 <grub_normal_add_menu_entry+0x100>
   14254:	ldr	x0, [x19]
   14258:	add	x19, x19, #0x8
   1425c:	cbz	x0, 14450 <grub_normal_add_menu_entry+0x2d0>
   14260:	stur	x1, [x1, #-8]
   14264:	add	x1, x1, #0x10
   14268:	str	x1, [sp, #104]
   1426c:	bl	0 <grub_strdup>
   14270:	mov	x20, x0
   14274:	ldr	x1, [sp, #104]
   14278:	stur	x0, [x1, #-16]
   1427c:	cbnz	x0, 14254 <grub_normal_add_menu_entry+0xd4>
   14280:	mov	x19, x26
   14284:	mov	x22, #0x0                   	// #0
   14288:	mov	x26, #0x0                   	// #0
   1428c:	mov	x21, #0x0                   	// #0
   14290:	mov	x0, x23
   14294:	bl	0 <grub_free>
   14298:	mov	x23, x19
   1429c:	ldr	x0, [x23], #16
   142a0:	cbz	x0, 142b4 <grub_normal_add_menu_entry+0x134>
   142a4:	nop
   142a8:	bl	0 <grub_free>
   142ac:	ldr	x0, [x23], #16
   142b0:	cbnz	x0, 142a8 <grub_normal_add_menu_entry+0x128>
   142b4:	mov	x0, x19
   142b8:	bl	0 <grub_free>
   142bc:	cbz	x20, 1443c <grub_normal_add_menu_entry+0x2bc>
   142c0:	ldr	x0, [x20]
   142c4:	cbz	x0, 142dc <grub_normal_add_menu_entry+0x15c>
   142c8:	add	x19, x20, #0x8
   142cc:	nop
   142d0:	bl	0 <grub_free>
   142d4:	ldr	x0, [x19], #8
   142d8:	cbnz	x0, 142d0 <grub_normal_add_menu_entry+0x150>
   142dc:	mov	x0, x20
   142e0:	bl	0 <grub_free>
   142e4:	mov	x0, x21
   142e8:	bl	0 <grub_free>
   142ec:	mov	x0, x22
   142f0:	bl	0 <grub_free>
   142f4:	mov	x0, x26
   142f8:	bl	0 <grub_free>
   142fc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14300:	ldr	x0, [x0]
   14304:	ldr	w0, [x0]
   14308:	ldp	x19, x20, [sp, #16]
   1430c:	ldp	x21, x22, [sp, #32]
   14310:	ldp	x23, x24, [sp, #48]
   14314:	ldp	x25, x26, [sp, #64]
   14318:	ldp	x27, x28, [sp, #80]
   1431c:	ldp	x29, x30, [sp], #128
   14320:	ret
   14324:	mov	x19, x26
   14328:	cbz	x21, 1433c <grub_normal_add_menu_entry+0x1bc>
   1432c:	mov	x0, x21
   14330:	bl	0 <grub_strdup>
   14334:	mov	x21, x0
   14338:	cbz	x0, 14444 <grub_normal_add_menu_entry+0x2c4>
   1433c:	str	wzr, [sp, #116]
   14340:	cbz	x22, 14380 <grub_normal_add_menu_entry+0x200>
   14344:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14348:	mov	w20, #0x0                   	// #0
   1434c:	ldr	x0, [x0]
   14350:	str	x0, [sp, #104]
   14354:	mov	x26, x0
   14358:	ldr	x1, [x26]
   1435c:	mov	x0, x22
   14360:	add	x26, x26, #0x10
   14364:	bl	0 <grub_strcmp>
   14368:	cbz	w0, 144b8 <grub_normal_add_menu_entry+0x338>
   1436c:	add	w20, w20, #0x1
   14370:	cmp	w20, #0x10
   14374:	b.ne	14358 <grub_normal_add_menu_entry+0x1d8>  // b.any
   14378:	ldrb	w0, [x22]
   1437c:	str	w0, [sp, #116]
   14380:	cbz	w27, 1449c <grub_normal_add_menu_entry+0x31c>
   14384:	ldr	x0, [x25]
   14388:	bl	0 <grub_strdup>
   1438c:	mov	x22, x0
   14390:	cbz	x0, 14420 <grub_normal_add_menu_entry+0x2a0>
   14394:	cmp	x28, #0x0
   14398:	csel	x0, x28, x0, ne  // ne = any
   1439c:	bl	0 <grub_strdup>
   143a0:	mov	x26, x0
   143a4:	cbz	x0, 14424 <grub_normal_add_menu_entry+0x2a4>
   143a8:	add	w0, w27, #0x1
   143ac:	sbfiz	x0, x0, #3, #32
   143b0:	str	x0, [sp, #120]
   143b4:	bl	0 <grub_malloc>
   143b8:	mov	x20, x0
   143bc:	cbz	x0, 14424 <grub_normal_add_menu_entry+0x2a4>
   143c0:	cmp	w27, #0x0
   143c4:	b.le	144f8 <grub_normal_add_menu_entry+0x378>
   143c8:	sub	w0, w27, #0x1
   143cc:	mov	x28, #0x0                   	// #0
   143d0:	add	x0, x0, #0x1
   143d4:	lsl	x0, x0, #3
   143d8:	str	x0, [sp, #104]
   143dc:	b	143ec <grub_normal_add_menu_entry+0x26c>
   143e0:	ldr	x0, [sp, #104]
   143e4:	cmp	x0, x28
   143e8:	b.eq	144f8 <grub_normal_add_menu_entry+0x378>  // b.none
   143ec:	ldr	x0, [x25, x28]
   143f0:	bl	0 <grub_strdup>
   143f4:	str	x0, [x20, x28]
   143f8:	add	x28, x28, #0x8
   143fc:	cbnz	x0, 143e0 <grub_normal_add_menu_entry+0x260>
   14400:	mov	x0, x23
   14404:	bl	0 <grub_free>
   14408:	cbnz	x19, 14298 <grub_normal_add_menu_entry+0x118>
   1440c:	mov	x0, #0x0                   	// #0
   14410:	bl	0 <grub_free>
   14414:	b	142c0 <grub_normal_add_menu_entry+0x140>
   14418:	mov	x19, #0x0                   	// #0
   1441c:	b	14328 <grub_normal_add_menu_entry+0x1a8>
   14420:	mov	x26, #0x0                   	// #0
   14424:	mov	x0, x23
   14428:	mov	x20, #0x0                   	// #0
   1442c:	bl	0 <grub_free>
   14430:	cbnz	x19, 14298 <grub_normal_add_menu_entry+0x118>
   14434:	mov	x0, #0x0                   	// #0
   14438:	bl	0 <grub_free>
   1443c:	mov	x20, #0x0                   	// #0
   14440:	b	142dc <grub_normal_add_menu_entry+0x15c>
   14444:	mov	x26, #0x0                   	// #0
   14448:	mov	x22, #0x0                   	// #0
   1444c:	b	14424 <grub_normal_add_menu_entry+0x2a4>
   14450:	mov	x19, x26
   14454:	stur	xzr, [x1, #-8]
   14458:	b	14328 <grub_normal_add_menu_entry+0x1a8>
   1445c:	mov	x0, x23
   14460:	bl	0 <grub_free>
   14464:	mov	x0, #0x0                   	// #0
   14468:	bl	0 <grub_free>
   1446c:	mov	x20, #0x0                   	// #0
   14470:	mov	x0, x20
   14474:	bl	0 <grub_free>
   14478:	mov	x21, #0x0                   	// #0
   1447c:	mov	x0, x21
   14480:	bl	0 <grub_free>
   14484:	mov	x22, #0x0                   	// #0
   14488:	mov	x0, x22
   1448c:	bl	0 <grub_free>
   14490:	mov	x0, x26
   14494:	bl	0 <grub_free>
   14498:	b	142fc <grub_normal_add_menu_entry+0x17c>
   1449c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   144a0:	mov	x26, #0x0                   	// #0
   144a4:	mov	x22, #0x0                   	// #0
   144a8:	mov	w0, #0x1b                  	// #27
   144ac:	ldr	x1, [x1]
   144b0:	bl	0 <grub_error>
   144b4:	b	14424 <grub_normal_add_menu_entry+0x2a4>
   144b8:	ldr	x0, [sp, #104]
   144bc:	ubfiz	x2, x20, #4, #32
   144c0:	add	x2, x0, x2
   144c4:	ldr	w0, [x2, #8]
   144c8:	str	w0, [sp, #116]
   144cc:	b	14380 <grub_normal_add_menu_entry+0x200>
   144d0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   144d4:	mov	w0, #0x1b                  	// #27
   144d8:	ldp	x19, x20, [sp, #16]
   144dc:	ldr	x1, [x1]
   144e0:	ldp	x21, x22, [sp, #32]
   144e4:	ldp	x23, x24, [sp, #48]
   144e8:	ldp	x25, x26, [sp, #64]
   144ec:	ldp	x27, x28, [sp, #80]
   144f0:	ldp	x29, x30, [sp], #128
   144f4:	b	0 <grub_error>
   144f8:	ldr	x0, [sp, #120]
   144fc:	add	x1, x20, x0
   14500:	ldr	x0, [x24, #8]
   14504:	stur	xzr, [x1, #-8]
   14508:	cbz	x0, 1457c <grub_normal_add_menu_entry+0x3fc>
   1450c:	nop
   14510:	mov	x1, x0
   14514:	ldr	x0, [x0, #72]
   14518:	cbnz	x0, 14510 <grub_normal_add_menu_entry+0x390>
   1451c:	add	x25, x1, #0x48
   14520:	mov	x0, #0x50                  	// #80
   14524:	bl	0 <grub_zalloc>
   14528:	str	x0, [x25]
   1452c:	mov	x1, x0
   14530:	cbz	x0, 14400 <grub_normal_add_menu_entry+0x280>
   14534:	ldr	w0, [sp, #116]
   14538:	stp	x22, x26, [x1]
   1453c:	str	x19, [x1, #32]
   14540:	str	w0, [x1, #64]
   14544:	cbz	x21, 14550 <grub_normal_add_menu_entry+0x3d0>
   14548:	mov	w0, #0x1                   	// #1
   1454c:	str	w0, [x1, #16]
   14550:	ldr	w2, [x24]
   14554:	mov	w0, #0x0                   	// #0
   14558:	ldr	w3, [sp, #112]
   1455c:	str	x21, [x1, #24]
   14560:	add	w2, w2, #0x1
   14564:	str	x23, [x1, #40]
   14568:	str	w27, [x1, #48]
   1456c:	str	x20, [x1, #56]
   14570:	str	w3, [x1, #68]
   14574:	str	w2, [x24]
   14578:	b	14308 <grub_normal_add_menu_entry+0x188>
   1457c:	add	x25, x24, #0x8
   14580:	b	14520 <grub_normal_add_menu_entry+0x3a0>
   14584:	nop
	...
   145b8:	cbz	w1, 14864 <grub_normal_add_menu_entry+0x6e4>
   145bc:	sub	sp, sp, #0x90
   145c0:	stp	x29, x30, [sp, #16]
   145c4:	add	x29, sp, #0x10
   145c8:	stp	x19, x20, [sp, #32]
   145cc:	mov	x20, x0
   145d0:	mov	w0, w1
   145d4:	stp	x25, x26, [sp, #80]
   145d8:	mov	x26, x2
   145dc:	ldp	x3, x2, [x20, #8]
   145e0:	ldr	w1, [x3, #48]
   145e4:	cbz	w1, 147b8 <grub_normal_add_menu_entry+0x638>
   145e8:	cbnz	x2, 14874 <grub_normal_add_menu_entry+0x6f4>
   145ec:	ldr	w1, [x3, #16]
   145f0:	cbz	w1, 147e8 <grub_normal_add_menu_entry+0x668>
   145f4:	ldr	x1, [x3, #24]
   145f8:	str	x1, [sp, #120]
   145fc:	cbz	x2, 14804 <grub_normal_add_menu_entry+0x684>
   14600:	mov	x19, #0xfffffffffffffff8    	// #-8
   14604:	stp	x21, x22, [sp, #48]
   14608:	sub	w21, w0, #0x1
   1460c:	add	x0, x19, w0, sxtw #3
   14610:	stp	x23, x24, [sp, #64]
   14614:	str	x0, [sp, #128]
   14618:	ldr	x22, [x26, x0]
   1461c:	str	xzr, [x26, x0]
   14620:	mov	x0, x22
   14624:	bl	0 <grub_strlen>
   14628:	sub	w0, w0, #0x1
   1462c:	cmp	w21, #0x0
   14630:	ldrb	w1, [x22, w0, uxtw]
   14634:	strb	wzr, [x22, w0, uxtw]
   14638:	stp	w1, w0, [sp, #136]
   1463c:	b.le	148c4 <grub_normal_add_menu_entry+0x744>
   14640:	mov	x3, #0x0                   	// #0
   14644:	mov	x0, #0xa                   	// #10
   14648:	stp	x27, x28, [sp, #96]
   1464c:	nop
   14650:	ldr	x2, [x26, x3, lsl #3]
   14654:	add	x0, x0, #0x3
   14658:	ldrb	w1, [x2]
   1465c:	cbz	w1, 14678 <grub_normal_add_menu_entry+0x4f8>
   14660:	add	x2, x2, #0x1
   14664:	cmp	w1, #0x27
   14668:	b.eq	14654 <grub_normal_add_menu_entry+0x4d4>  // b.none
   1466c:	ldrb	w1, [x2]
   14670:	add	x0, x0, #0x1
   14674:	cbnz	w1, 14660 <grub_normal_add_menu_entry+0x4e0>
   14678:	add	x3, x3, #0x1
   1467c:	cmp	w21, w3
   14680:	b.gt	14650 <grub_normal_add_menu_entry+0x4d0>
   14684:	add	x0, x0, #0x2
   14688:	bl	0 <grub_malloc>
   1468c:	mov	x23, x0
   14690:	cbz	x0, 14894 <grub_normal_add_menu_entry+0x714>
   14694:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14698:	mov	x28, #0x0                   	// #0
   1469c:	adrp	x27, 0 <grub_normal_free_menu-0x498>
   146a0:	ldr	x1, [x1]
   146a4:	bl	0 <grub_strcpy>
   146a8:	add	x0, x23, #0x9
   146ac:	nop
   146b0:	mov	x25, x0
   146b4:	mov	w0, #0x2720                	// #10016
   146b8:	strh	w0, [x25], #2
   146bc:	ldr	x24, [x26, x28, lsl #3]
   146c0:	ldrb	w1, [x24]
   146c4:	cbz	w1, 147cc <grub_normal_add_menu_entry+0x64c>
   146c8:	mov	x0, x25
   146cc:	add	x24, x24, #0x1
   146d0:	cmp	w1, #0x27
   146d4:	b.eq	146f8 <grub_normal_add_menu_entry+0x578>  // b.none
   146d8:	strb	w1, [x0], #1
   146dc:	ldrb	w1, [x24]
   146e0:	cbz	w1, 14718 <grub_normal_add_menu_entry+0x598>
   146e4:	mov	x25, x0
   146e8:	add	x24, x24, #0x1
   146ec:	mov	x0, x25
   146f0:	cmp	w1, #0x27
   146f4:	b.ne	146d8 <grub_normal_add_menu_entry+0x558>  // b.any
   146f8:	ldr	x19, [x27]
   146fc:	mov	x1, x19
   14700:	bl	0 <grub_strcpy>
   14704:	mov	x0, x19
   14708:	bl	0 <grub_strlen>
   1470c:	add	x0, x25, x0
   14710:	ldrb	w1, [x24]
   14714:	cbnz	w1, 146e4 <grub_normal_add_menu_entry+0x564>
   14718:	mov	w1, #0x27                  	// #39
   1471c:	strb	w1, [x0], #1
   14720:	add	x28, x28, #0x1
   14724:	cmp	w21, w28
   14728:	b.gt	146b0 <grub_normal_add_menu_entry+0x530>
   1472c:	ldp	x27, x28, [sp, #96]
   14730:	mov	w1, #0xa                   	// #10
   14734:	strh	w1, [x0]
   14738:	add	x7, x22, #0x1
   1473c:	ldr	x4, [sp, #120]
   14740:	mov	x6, x23
   14744:	ldp	x1, x3, [x20]
   14748:	mov	w0, w21
   1474c:	ldr	x5, [x1]
   14750:	mov	x1, x26
   14754:	ldr	x2, [x3, #8]
   14758:	ldr	x9, [x5, #16]
   1475c:	ldr	x5, [x3, #40]
   14760:	ldrb	w9, [x9]
   14764:	ldr	x3, [x3, #72]
   14768:	cmp	w9, #0x73
   1476c:	cset	w9, eq  // eq = none
   14770:	str	w9, [sp]
   14774:	bl	14180 <grub_normal_add_menu_entry>
   14778:	mov	w20, w0
   1477c:	ldr	w1, [sp, #140]
   14780:	ldr	x0, [sp, #128]
   14784:	ldrb	w2, [sp, #136]
   14788:	strb	w2, [x22, w1, uxtw]
   1478c:	str	x22, [x26, x0]
   14790:	mov	x0, x23
   14794:	bl	0 <grub_free>
   14798:	mov	w0, w20
   1479c:	ldp	x29, x30, [sp, #16]
   147a0:	ldp	x19, x20, [sp, #32]
   147a4:	ldp	x21, x22, [sp, #48]
   147a8:	ldp	x23, x24, [sp, #64]
   147ac:	ldp	x25, x26, [sp, #80]
   147b0:	add	sp, sp, #0x90
   147b4:	ret
   147b8:	cbnz	x2, 145ec <grub_normal_add_menu_entry+0x46c>
   147bc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   147c0:	mov	w0, #0x12                  	// #18
   147c4:	ldr	x1, [x1]
   147c8:	b	14880 <grub_normal_add_menu_entry+0x700>
   147cc:	mov	x0, x25
   147d0:	mov	w1, #0x27                  	// #39
   147d4:	add	x28, x28, #0x1
   147d8:	cmp	w21, w28
   147dc:	strb	w1, [x0], #1
   147e0:	b.gt	146b0 <grub_normal_add_menu_entry+0x530>
   147e4:	b	1472c <grub_normal_add_menu_entry+0x5ac>
   147e8:	adrp	x4, 0 <grub_normal_free_menu-0x498>
   147ec:	ldr	w1, [x3, #80]
   147f0:	ldr	x25, [x4]
   147f4:	cmp	w1, #0x0
   147f8:	csel	x1, xzr, x25, ne  // ne = any
   147fc:	str	x1, [sp, #120]
   14800:	cbnz	x2, 14600 <grub_normal_add_menu_entry+0x480>
   14804:	ldr	w1, [x3]
   14808:	cbz	w1, 14810 <grub_normal_add_menu_entry+0x690>
   1480c:	ldr	x2, [x3, #8]
   14810:	mov	x1, x26
   14814:	ldr	x6, [x20]
   14818:	ldr	x5, [x3, #40]
   1481c:	ldr	x6, [x6]
   14820:	ldr	x7, [x3, #56]
   14824:	ldr	x8, [x6, #16]
   14828:	mov	x6, #0x0                   	// #0
   1482c:	ldr	x3, [x3, #72]
   14830:	ldrb	w8, [x8]
   14834:	ldr	x4, [sp, #120]
   14838:	cmp	w8, #0x73
   1483c:	cset	w8, eq  // eq = none
   14840:	str	w8, [sp]
   14844:	bl	14180 <grub_normal_add_menu_entry>
   14848:	mov	w20, w0
   1484c:	mov	w0, w20
   14850:	ldp	x29, x30, [sp, #16]
   14854:	ldp	x19, x20, [sp, #32]
   14858:	ldp	x25, x26, [sp, #80]
   1485c:	add	sp, sp, #0x90
   14860:	ret
   14864:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14868:	mov	w0, #0x12                  	// #18
   1486c:	ldr	x1, [x1]
   14870:	b	0 <grub_error>
   14874:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14878:	mov	w0, #0x12                  	// #18
   1487c:	ldr	x1, [x1]
   14880:	ldp	x29, x30, [sp, #16]
   14884:	ldp	x19, x20, [sp, #32]
   14888:	ldp	x25, x26, [sp, #80]
   1488c:	add	sp, sp, #0x90
   14890:	b	0 <grub_error>
   14894:	ldp	x27, x28, [sp, #96]
   14898:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   1489c:	ldp	x29, x30, [sp, #16]
   148a0:	ldr	x0, [x0]
   148a4:	ldp	x21, x22, [sp, #48]
   148a8:	ldr	w20, [x0]
   148ac:	ldp	x23, x24, [sp, #64]
   148b0:	mov	w0, w20
   148b4:	ldp	x19, x20, [sp, #32]
   148b8:	ldp	x25, x26, [sp, #80]
   148bc:	add	sp, sp, #0x90
   148c0:	ret
   148c4:	mov	x0, #0xc                   	// #12
   148c8:	bl	0 <grub_malloc>
   148cc:	mov	x23, x0
   148d0:	cbz	x0, 14898 <grub_normal_add_menu_entry+0x718>
   148d4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   148d8:	ldr	x1, [x1]
   148dc:	bl	0 <grub_strcpy>
   148e0:	add	x0, x23, #0x9
   148e4:	b	14730 <grub_normal_add_menu_entry+0x5b0>
	...

0000000000014920 <grub_menu_init>:
   14920:	stp	x29, x30, [sp, #-48]!
   14924:	adrp	x5, 0 <grub_normal_free_menu-0x498>
   14928:	adrp	x4, 0 <grub_normal_free_menu-0x498>
   1492c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14930:	mov	x29, sp
   14934:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   14938:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1493c:	stp	x19, x20, [sp, #16]
   14940:	mov	w2, #0x2c0                 	// #704
   14944:	ldr	x19, [x5]
   14948:	stp	x21, x22, [sp, #32]
   1494c:	ldr	x4, [x4]
   14950:	add	x19, x19, #0x100
   14954:	ldr	x0, [x0]
   14958:	mov	x5, x19
   1495c:	ldr	x22, [x3]
   14960:	ldr	x21, [x1]
   14964:	mov	x3, x22
   14968:	mov	x1, x21
   1496c:	bl	0 <grub_register_extcmd>
   14970:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   14974:	mov	x6, x0
   14978:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1497c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14980:	ldr	x20, [x2]
   14984:	mov	x5, x19
   14988:	ldr	x4, [x1]
   1498c:	mov	x3, x22
   14990:	ldr	x0, [x0]
   14994:	mov	x1, x21
   14998:	mov	w2, #0x2c0                 	// #704
   1499c:	str	x6, [x20]
   149a0:	bl	0 <grub_register_extcmd>
   149a4:	ldp	x21, x22, [sp, #32]
   149a8:	str	x0, [x20, #8]
   149ac:	ldp	x19, x20, [sp, #16]
   149b0:	ldp	x29, x30, [sp], #48
   149b4:	ret
	...

00000000000149f8 <grub_menu_fini>:
   149f8:	stp	x29, x30, [sp, #-32]!
   149fc:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14a00:	mov	x29, sp
   14a04:	str	x19, [sp, #16]
   14a08:	ldr	x19, [x0]
   14a0c:	ldr	x0, [x19]
   14a10:	bl	0 <grub_unregister_extcmd>
   14a14:	ldr	x0, [x19, #8]
   14a18:	ldr	x19, [sp, #16]
   14a1c:	ldp	x29, x30, [sp], #32
   14a20:	b	0 <grub_unregister_extcmd>
   14a24:	nop
	...

0000000000014a30 <grub_script_yyparse>:
   14a30:	mov	x12, #0x1460                	// #5216
   14a34:	sub	sp, sp, x12
   14a38:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14a3c:	add	x4, sp, #0x1a0
   14a40:	stp	x29, x30, [sp]
   14a44:	mov	x29, sp
   14a48:	stp	x21, x22, [sp, #32]
   14a4c:	ldr	x22, [x1]
   14a50:	stp	x19, x20, [sp, #16]
   14a54:	add	x19, sp, #0xd8
   14a58:	add	x21, x22, #0x200
   14a5c:	stp	x25, x26, [sp, #64]
   14a60:	mov	x26, x4
   14a64:	stp	x27, x28, [sp, #80]
   14a68:	mov	x27, x19
   14a6c:	mov	w28, #0x0                   	// #0
   14a70:	stp	x23, x24, [sp, #48]
   14a74:	mov	w23, #0xfffffffe            	// #-2
   14a78:	mov	x24, #0xc8                  	// #200
   14a7c:	str	wzr, [sp, #96]
   14a80:	str	x0, [sp, #104]
   14a84:	strb	wzr, [sp, #216]
   14a88:	ldrsh	w20, [x22, w28, sxtw #1]
   14a8c:	sxtw	x25, w28
   14a90:	cmn	w20, #0x36
   14a94:	mov	w28, w20
   14a98:	b.eq	14b1c <grub_script_yyparse+0xec>  // b.none
   14a9c:	cmn	w23, #0x2
   14aa0:	b.eq	14eb0 <grub_script_yyparse+0x480>  // b.none
   14aa4:	cmp	w23, #0x0
   14aa8:	b.le	14e4c <grub_script_yyparse+0x41c>
   14aac:	cmp	w23, #0x121
   14ab0:	b.le	14e58 <grub_script_yyparse+0x428>
   14ab4:	add	w28, w20, #0x2
   14ab8:	mov	w0, #0x2                   	// #2
   14abc:	cmp	w28, #0xdb
   14ac0:	b.hi	14b1c <grub_script_yyparse+0xec>  // b.pmore
   14ac4:	ldrsb	w1, [x21, w28, sxtw]
   14ac8:	cmp	w1, w0
   14acc:	b.ne	14b1c <grub_script_yyparse+0xec>  // b.any
   14ad0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14ad4:	ldr	x0, [x0]
   14ad8:	ldrsb	w28, [x0, w28, sxtw]
   14adc:	cmp	w28, #0x0
   14ae0:	mov	w2, w28
   14ae4:	b.le	14bd8 <grub_script_yyparse+0x1a8>
   14ae8:	ldr	w5, [sp, #96]
   14aec:	add	x3, x4, #0x18
   14af0:	ldp	x0, x1, [sp, #168]
   14af4:	cmp	w5, #0x0
   14af8:	stp	x0, x1, [x4, #24]
   14afc:	mov	w23, #0xfffffffe            	// #-2
   14b00:	cset	w1, ne  // ne = any
   14b04:	sub	w1, w5, w1
   14b08:	str	w1, [sp, #96]
   14b0c:	ldr	x0, [sp, #184]
   14b10:	mov	x4, x3
   14b14:	str	x0, [x3, #16]
   14b18:	b	14d74 <grub_script_yyparse+0x344>
   14b1c:	add	x0, x22, #0x3c0
   14b20:	ldrsb	w28, [x0, x25]
   14b24:	cbnz	w28, 14bdc <grub_script_yyparse+0x1ac>
   14b28:	ldr	w0, [sp, #96]
   14b2c:	cbz	w0, 14ecc <grub_script_yyparse+0x49c>
   14b30:	ldr	w0, [sp, #96]
   14b34:	cmp	w0, #0x3
   14b38:	b.ne	14bb4 <grub_script_yyparse+0x184>  // b.any
   14b3c:	cmp	w23, #0x0
   14b40:	b.gt	14e68 <grub_script_yyparse+0x438>
   14b44:	b.ne	14bb4 <grub_script_yyparse+0x184>  // b.any
   14b48:	mov	w19, #0x1                   	// #1
   14b4c:	add	x0, sp, #0xd8
   14b50:	cmp	x27, x0
   14b54:	b.eq	14b60 <grub_script_yyparse+0x130>  // b.none
   14b58:	mov	x0, x27
   14b5c:	bl	0 <grub_free>
   14b60:	mov	w0, w19
   14b64:	mov	x12, #0x1460                	// #5216
   14b68:	ldp	x29, x30, [sp]
   14b6c:	ldp	x19, x20, [sp, #16]
   14b70:	ldp	x21, x22, [sp, #32]
   14b74:	ldp	x23, x24, [sp, #48]
   14b78:	ldp	x25, x26, [sp, #64]
   14b7c:	ldp	x27, x28, [sp, #80]
   14b80:	add	sp, sp, x12
   14b84:	ret
   14b88:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14b8c:	ldr	x0, [x0]
   14b90:	ldrsb	w2, [x0, w1, sxtw]
   14b94:	cmp	w2, #0x0
   14b98:	mov	w28, w2
   14b9c:	b.gt	14ee8 <grub_script_yyparse+0x4b8>
   14ba0:	cmp	x19, x27
   14ba4:	b.eq	14b48 <grub_script_yyparse+0x118>  // b.none
   14ba8:	ldrsb	x1, [x19, #-1]!
   14bac:	sub	x4, x4, #0x18
   14bb0:	ldrsh	w20, [x22, x1, lsl #1]
   14bb4:	add	w1, w20, #0x1
   14bb8:	cmn	w20, #0x36
   14bbc:	b.eq	14ba0 <grub_script_yyparse+0x170>  // b.none
   14bc0:	cmp	w1, #0xdb
   14bc4:	b.hi	14ba0 <grub_script_yyparse+0x170>  // b.pmore
   14bc8:	ldrsb	w0, [x21, w1, sxtw]
   14bcc:	cmp	w0, #0x1
   14bd0:	b.ne	14ba0 <grub_script_yyparse+0x170>  // b.any
   14bd4:	b	14b88 <grub_script_yyparse+0x158>
   14bd8:	neg	w28, w28
   14bdc:	add	x1, x22, #0x430
   14be0:	sub	w3, w28, #0x2
   14be4:	sxtw	x20, w28
   14be8:	mov	w2, #0x1                   	// #1
   14bec:	mov	w0, #0x18                  	// #24
   14bf0:	cmp	w3, #0x3d
   14bf4:	ldrsb	w28, [x1, w28, sxtw]
   14bf8:	sub	w2, w2, w28
   14bfc:	smaddl	x2, w2, w0, x4
   14c00:	ldp	x12, x11, [x2, #8]
   14c04:	str	x11, [sp, #208]
   14c08:	ldp	x0, x1, [x2]
   14c0c:	stp	x0, x1, [sp, #192]
   14c10:	mov	x25, x11
   14c14:	b.hi	14d18 <grub_script_yyparse+0x2e8>  // b.pmore
   14c18:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   14c1c:	ldr	x0, [x0]
   14c20:	ldrh	w0, [x0, w3, uxtw #1]
   14c24:	adr	x1, 14c30 <grub_script_yyparse+0x200>
   14c28:	add	x0, x1, w0, sxth #2
   14c2c:	br	x0
   14c30:	ldp	x1, x13, [x4, #-64]
   14c34:	sub	x2, x4, #0x48
   14c38:	ldr	x0, [sp, #104]
   14c3c:	stp	x4, x2, [sp, #112]
   14c40:	stp	x13, x12, [sp, #136]
   14c44:	bl	10018 <grub_script_mem_record_stop>
   14c48:	ldr	x4, [sp, #112]
   14c4c:	str	x0, [sp, #112]
   14c50:	ldr	x0, [sp, #104]
   14c54:	str	x4, [sp, #128]
   14c58:	ldur	w1, [x4, #-72]
   14c5c:	bl	13678 <grub_script_lexer_record_stop>
   14c60:	mov	x3, x0
   14c64:	ldp	x4, x13, [sp, #128]
   14c68:	ldr	x12, [sp, #144]
   14c6c:	cbz	x0, 14c8c <grub_script_yyparse+0x25c>
   14c70:	mov	w1, #0x7d                  	// #125
   14c74:	str	x12, [sp, #128]
   14c78:	stp	x0, x4, [sp, #144]
   14c7c:	bl	0 <grub_strrchr>
   14c80:	ldp	x12, x13, [sp, #128]
   14c84:	strb	wzr, [x0]
   14c88:	ldp	x3, x4, [sp, #144]
   14c8c:	mov	w2, #0x6                   	// #6
   14c90:	ldr	x0, [sp, #104]
   14c94:	mov	x1, #0x0                   	// #0
   14c98:	stp	x12, x13, [sp, #128]
   14c9c:	str	x4, [sp, #144]
   14ca0:	bl	100f8 <grub_script_arg_add>
   14ca4:	str	x0, [sp, #192]
   14ca8:	mov	x2, x0
   14cac:	ldp	x12, x13, [sp, #128]
   14cb0:	ldr	x4, [sp, #144]
   14cb4:	cbz	x0, 15268 <grub_script_yyparse+0x838>
   14cb8:	ldur	x0, [x4, #-48]
   14cbc:	stp	x4, x12, [sp, #128]
   14cc0:	ldr	x1, [sp, #112]
   14cc4:	stp	x2, x13, [sp, #144]
   14cc8:	bl	10870 <grub_script_create>
   14ccc:	ldr	x2, [sp, #144]
   14cd0:	ldp	x4, x12, [sp, #128]
   14cd4:	str	x0, [x2, #16]
   14cd8:	cbz	x0, 15268 <grub_script_yyparse+0x838>
   14cdc:	ldr	x1, [sp, #120]
   14ce0:	ldr	x3, [sp, #104]
   14ce4:	ldr	x1, [x1, #16]
   14ce8:	ldr	x2, [x3, #24]
   14cec:	cmp	x1, #0x0
   14cf0:	ldr	x13, [sp, #152]
   14cf4:	str	x2, [x0, #32]
   14cf8:	csel	x1, x1, x0, ne  // ne = any
   14cfc:	str	x1, [x3, #24]
   14d00:	cbnz	x13, 151ac <grub_script_yyparse+0x77c>
   14d04:	ldr	x0, [sp, #104]
   14d08:	stp	x12, x4, [sp, #112]
   14d0c:	ldr	x0, [x0, #40]
   14d10:	bl	13600 <grub_script_lexer_deref>
   14d14:	ldp	x12, x4, [sp, #112]
   14d18:	mov	w1, #0x18                  	// #24
   14d1c:	add	x0, x22, #0x470
   14d20:	stp	x12, x25, [sp, #200]
   14d24:	smsubl	x9, w28, w1, x4
   14d28:	sub	x19, x19, w28, sxtb
   14d2c:	add	x3, x22, #0x4b0
   14d30:	ldrsb	w2, [x0, x20]
   14d34:	add	x4, x9, #0x18
   14d38:	ldp	x0, x1, [sp, #192]
   14d3c:	sub	w2, w2, #0x23
   14d40:	stp	x0, x1, [x9, #24]
   14d44:	str	x25, [x4, #16]
   14d48:	ldrsb	w0, [x3, w2, sxtw]
   14d4c:	ldrsb	w1, [x19]
   14d50:	add	w0, w0, w1
   14d54:	cmp	w0, #0xdb
   14d58:	b.hi	14d68 <grub_script_yyparse+0x338>  // b.pmore
   14d5c:	ldrsb	w3, [x21, w0, sxtw]
   14d60:	cmp	w3, w1
   14d64:	b.eq	14e70 <grub_script_yyparse+0x440>  // b.none
   14d68:	add	x0, x22, #0x4d0
   14d6c:	ldrsb	w2, [x0, w2, sxtw]
   14d70:	mov	w28, w2
   14d74:	sub	x0, x24, #0x1
   14d78:	strb	w2, [x19, #1]
   14d7c:	add	x0, x27, x0
   14d80:	add	x19, x19, #0x1
   14d84:	cmp	x19, x0
   14d88:	b.cc	14e3c <grub_script_yyparse+0x40c>  // b.lo, b.ul, b.last
   14d8c:	sub	x19, x19, x27
   14d90:	mov	x0, #0x270f                	// #9999
   14d94:	add	x20, x19, #0x1
   14d98:	cmp	x24, x0
   14d9c:	b.gt	14f2c <grub_script_yyparse+0x4fc>
   14da0:	lsl	x7, x24, #1
   14da4:	mov	x0, #0x2710                	// #10000
   14da8:	cmp	x7, x0
   14dac:	csel	x24, x7, x0, le
   14db0:	add	x0, x24, x24, lsl #1
   14db4:	add	x0, x24, x0, lsl #3
   14db8:	add	x0, x0, #0x17
   14dbc:	bl	0 <grub_malloc>
   14dc0:	mov	x25, x0
   14dc4:	cbz	x0, 14f2c <grub_script_yyparse+0x4fc>
   14dc8:	mov	x2, x20
   14dcc:	mov	x1, x27
   14dd0:	bl	0 <memcpy>
   14dd4:	add	x20, x20, x20, lsl #1
   14dd8:	add	x3, x24, #0x17
   14ddc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   14de0:	movk	x0, #0xaaab
   14de4:	mov	x1, x26
   14de8:	lsl	x20, x20, #3
   14dec:	umulh	x26, x3, x0
   14df0:	mov	x2, x20
   14df4:	lsr	x26, x26, #4
   14df8:	add	x26, x26, x26, lsl #1
   14dfc:	add	x26, x25, x26, lsl #3
   14e00:	mov	x0, x26
   14e04:	bl	0 <memcpy>
   14e08:	add	x0, sp, #0xd8
   14e0c:	cmp	x27, x0
   14e10:	b.eq	14e1c <grub_script_yyparse+0x3ec>  // b.none
   14e14:	mov	x0, x27
   14e18:	bl	0 <grub_free>
   14e1c:	sub	x0, x24, #0x1
   14e20:	add	x19, x25, x19
   14e24:	sub	x4, x20, #0x18
   14e28:	add	x0, x25, x0
   14e2c:	add	x4, x26, x4
   14e30:	mov	x27, x25
   14e34:	cmp	x19, x0
   14e38:	b.cs	14b48 <grub_script_yyparse+0x118>  // b.hs, b.nlast
   14e3c:	cmp	w28, #0x3
   14e40:	b.ne	14a88 <grub_script_yyparse+0x58>  // b.any
   14e44:	mov	w19, #0x0                   	// #0
   14e48:	b	14b4c <grub_script_yyparse+0x11c>
   14e4c:	mov	w0, #0x0                   	// #0
   14e50:	mov	w23, #0x0                   	// #0
   14e54:	b	14abc <grub_script_yyparse+0x8c>
   14e58:	add	x0, x22, #0xd8
   14e5c:	ldrsb	w0, [x0, w23, sxtw]
   14e60:	add	w28, w20, w0
   14e64:	b	14abc <grub_script_yyparse+0x8c>
   14e68:	mov	w23, #0xfffffffe            	// #-2
   14e6c:	b	14bb4 <grub_script_yyparse+0x184>
   14e70:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14e74:	ldr	x1, [x1]
   14e78:	ldrsb	w2, [x1, w0, sxtw]
   14e7c:	mov	w28, w2
   14e80:	b	14d74 <grub_script_yyparse+0x344>
   14e84:	ldr	x2, [x4]
   14e88:	mov	x1, #0x0                   	// #0
   14e8c:	ldr	x0, [sp, #104]
   14e90:	stp	x4, x12, [sp, #112]
   14e94:	bl	10288 <grub_script_add_arglist>
   14e98:	str	x0, [sp, #192]
   14e9c:	ldp	x4, x12, [sp, #112]
   14ea0:	b	14d18 <grub_script_yyparse+0x2e8>
   14ea4:	ldr	x0, [x4]
   14ea8:	str	x0, [sp, #192]
   14eac:	b	14d18 <grub_script_yyparse+0x2e8>
   14eb0:	ldr	x1, [sp, #104]
   14eb4:	add	x0, sp, #0xa8
   14eb8:	str	x4, [sp, #112]
   14ebc:	bl	13b30 <grub_script_yylex>
   14ec0:	mov	w23, w0
   14ec4:	ldr	x4, [sp, #112]
   14ec8:	b	14aa4 <grub_script_yyparse+0x74>
   14ecc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14ed0:	str	x4, [sp, #96]
   14ed4:	ldr	x0, [sp, #104]
   14ed8:	ldr	x1, [x1]
   14edc:	bl	13c90 <grub_script_yyerror>
   14ee0:	ldr	x4, [sp, #96]
   14ee4:	b	14bb4 <grub_script_yyparse+0x184>
   14ee8:	ldp	x0, x1, [sp, #168]
   14eec:	add	x3, x4, #0x18
   14ef0:	stp	x0, x1, [x4, #24]
   14ef4:	mov	x4, x3
   14ef8:	mov	w1, #0x3                   	// #3
   14efc:	str	w1, [sp, #96]
   14f00:	ldr	x0, [sp, #184]
   14f04:	str	x0, [x3, #16]
   14f08:	b	14d74 <grub_script_yyparse+0x344>
   14f0c:	ldr	x0, [sp, #104]
   14f10:	stp	x12, x4, [sp, #112]
   14f14:	ldr	x0, [x0, #40]
   14f18:	bl	135f0 <grub_script_lexer_ref>
   14f1c:	ldp	x12, x4, [sp, #112]
   14f20:	b	14d18 <grub_script_yyparse+0x2e8>
   14f24:	str	xzr, [sp, #192]
   14f28:	b	14d18 <grub_script_yyparse+0x2e8>
   14f2c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   14f30:	mov	w19, #0x2                   	// #2
   14f34:	ldr	x0, [sp, #104]
   14f38:	ldr	x1, [x1]
   14f3c:	bl	13c90 <grub_script_yyerror>
   14f40:	b	14b4c <grub_script_yyparse+0x11c>
   14f44:	ldur	x1, [x4, #-120]
   14f48:	mov	w3, #0x1                   	// #1
   14f4c:	ldur	x2, [x4, #-48]
   14f50:	stp	x4, x12, [sp, #112]
   14f54:	ldr	x0, [sp, #104]
   14f58:	bl	10698 <grub_script_create_cmdwhile>
   14f5c:	mov	x1, x0
   14f60:	ldr	x0, [sp, #104]
   14f64:	str	x1, [sp, #192]
   14f68:	ldr	x0, [x0, #40]
   14f6c:	bl	13600 <grub_script_lexer_deref>
   14f70:	ldp	x4, x12, [sp, #112]
   14f74:	b	14d18 <grub_script_yyparse+0x2e8>
   14f78:	ldr	x2, [x4]
   14f7c:	ldur	x0, [x4, #-24]
   14f80:	cbz	x2, 14f98 <grub_script_yyparse+0x568>
   14f84:	mov	x1, x0
   14f88:	stp	x12, x4, [sp, #112]
   14f8c:	ldr	x0, [sp, #104]
   14f90:	bl	10288 <grub_script_add_arglist>
   14f94:	ldp	x12, x4, [sp, #112]
   14f98:	cmp	x0, #0x0
   14f9c:	ldur	x1, [x4, #-48]
   14fa0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   14fa4:	b.eq	14fc0 <grub_script_yyparse+0x590>  // b.none
   14fa8:	ldr	w3, [x0, #16]
   14fac:	ldr	w2, [x1, #16]
   14fb0:	str	x0, [x1]
   14fb4:	add	w2, w2, w3
   14fb8:	str	w2, [x1, #16]
   14fbc:	str	wzr, [x0, #16]
   14fc0:	ldr	x0, [sp, #104]
   14fc4:	stp	x12, x4, [sp, #112]
   14fc8:	bl	103b0 <grub_script_create_cmdline>
   14fcc:	str	x0, [sp, #192]
   14fd0:	ldp	x12, x4, [sp, #112]
   14fd4:	b	14d18 <grub_script_yyparse+0x2e8>
   14fd8:	ldr	x0, [sp, #104]
   14fdc:	stp	x4, x12, [sp, #112]
   14fe0:	ldr	x1, [x0]
   14fe4:	bl	10018 <grub_script_mem_record_stop>
   14fe8:	mov	x1, x0
   14fec:	ldp	x2, x4, [sp, #104]
   14ff0:	ldur	x0, [x4, #-48]
   14ff4:	str	x1, [x2]
   14ff8:	bl	10870 <grub_script_create>
   14ffc:	mov	x1, x0
   15000:	ldp	x4, x12, [sp, #112]
   15004:	cbz	x0, 1527c <grub_script_yyparse+0x84c>
   15008:	ldr	x2, [sp, #104]
   1500c:	stp	x4, x12, [sp, #112]
   15010:	ldur	x0, [x4, #-144]
   15014:	ldr	x2, [x2, #24]
   15018:	str	x2, [x1, #32]
   1501c:	bl	13300 <grub_script_function_create>
   15020:	ldp	x4, x12, [sp, #112]
   15024:	stp	x4, x12, [sp, #112]
   15028:	ldr	x2, [sp, #104]
   1502c:	ldur	x1, [x4, #-104]
   15030:	ldr	x0, [x2, #40]
   15034:	str	x1, [x2, #24]
   15038:	bl	13600 <grub_script_lexer_deref>
   1503c:	ldp	x4, x12, [sp, #112]
   15040:	b	14d18 <grub_script_yyparse+0x2e8>
   15044:	ldur	x0, [x4, #-24]
   15048:	cbz	x0, 14ea8 <grub_script_yyparse+0x478>
   1504c:	ldr	x1, [x4]
   15050:	cbz	x1, 14ea8 <grub_script_yyparse+0x478>
   15054:	ldr	w3, [x1, #16]
   15058:	ldr	w2, [x0, #16]
   1505c:	str	x1, [x0]
   15060:	add	w2, w2, w3
   15064:	str	w2, [x0, #16]
   15068:	str	wzr, [x1, #16]
   1506c:	str	x0, [sp, #192]
   15070:	b	14d18 <grub_script_yyparse+0x2e8>
   15074:	ldur	x1, [x4, #-48]
   15078:	str	x12, [sp, #120]
   1507c:	ldr	x2, [x4]
   15080:	ldr	x0, [sp, #104]
   15084:	str	x4, [sp, #112]
   15088:	bl	10768 <grub_script_append_cmd>
   1508c:	str	x0, [sp, #192]
   15090:	ldp	x4, x12, [sp, #112]
   15094:	b	14d18 <grub_script_yyparse+0x2e8>
   15098:	ldr	x2, [x4]
   1509c:	mov	x1, #0x0                   	// #0
   150a0:	ldr	x0, [sp, #104]
   150a4:	stp	x4, x12, [sp, #112]
   150a8:	bl	10768 <grub_script_append_cmd>
   150ac:	str	x0, [sp, #192]
   150b0:	ldp	x4, x12, [sp, #112]
   150b4:	b	14d18 <grub_script_yyparse+0x2e8>
   150b8:	ldr	x1, [sp, #104]
   150bc:	ldr	x0, [x4]
   150c0:	str	wzr, [x1, #8]
   150c4:	str	x0, [x1, #32]
   150c8:	b	14d18 <grub_script_yyparse+0x2e8>
   150cc:	ldr	x0, [sp, #104]
   150d0:	str	wzr, [x0, #8]
   150d4:	b	14d18 <grub_script_yyparse+0x2e8>
   150d8:	ldur	x1, [x4, #-96]
   150dc:	mov	x3, #0x0                   	// #0
   150e0:	ldur	x2, [x4, #-24]
   150e4:	stp	x4, x12, [sp, #112]
   150e8:	ldr	x0, [sp, #104]
   150ec:	bl	10498 <grub_script_create_cmdif>
   150f0:	str	x0, [sp, #192]
   150f4:	ldp	x4, x12, [sp, #112]
   150f8:	b	14d18 <grub_script_yyparse+0x2e8>
   150fc:	ldr	x25, [sp, #104]
   15100:	str	x4, [sp, #112]
   15104:	ldr	x0, [x25, #40]
   15108:	bl	135f0 <grub_script_lexer_ref>
   1510c:	mov	x0, x25
   15110:	bl	13610 <grub_script_lexer_record_start>
   15114:	mov	w1, w0
   15118:	mov	x0, x25
   1511c:	str	w1, [sp, #192]
   15120:	bl	10008 <grub_script_mem_record>
   15124:	mov	x12, x0
   15128:	mov	x0, x25
   1512c:	ldr	x25, [x25, #24]
   15130:	str	xzr, [x0, #24]
   15134:	ldr	x4, [sp, #112]
   15138:	b	14d18 <grub_script_yyparse+0x2e8>
   1513c:	ldur	x1, [x4, #-168]
   15140:	str	x12, [sp, #120]
   15144:	ldur	x2, [x4, #-96]
   15148:	ldur	x3, [x4, #-24]
   1514c:	ldr	x0, [sp, #104]
   15150:	str	x4, [sp, #112]
   15154:	bl	10498 <grub_script_create_cmdif>
   15158:	str	x0, [sp, #192]
   1515c:	ldp	x4, x12, [sp, #112]
   15160:	b	14d18 <grub_script_yyparse+0x2e8>
   15164:	str	x12, [sp, #120]
   15168:	ldur	x1, [x4, #-72]
   1516c:	ldur	x2, [x4, #-48]
   15170:	ldr	x0, [sp, #104]
   15174:	b	15084 <grub_script_yyparse+0x654>
   15178:	ldur	x1, [x4, #-120]
   1517c:	mov	w3, #0x0                   	// #0
   15180:	ldur	x2, [x4, #-48]
   15184:	stp	x4, x12, [sp, #112]
   15188:	ldr	x0, [sp, #104]
   1518c:	bl	10698 <grub_script_create_cmdwhile>
   15190:	mov	x1, x0
   15194:	str	x1, [sp, #192]
   15198:	ldr	x0, [sp, #104]
   1519c:	ldr	x0, [x0, #40]
   151a0:	bl	13600 <grub_script_lexer_deref>
   151a4:	ldp	x4, x12, [sp, #112]
   151a8:	b	14d18 <grub_script_yyparse+0x2e8>
   151ac:	mov	x1, x13
   151b0:	ldr	x13, [x13, #24]
   151b4:	cbnz	x13, 151ac <grub_script_yyparse+0x77c>
   151b8:	str	x0, [x1, #24]
   151bc:	b	14d04 <grub_script_yyparse+0x2d4>
   151c0:	ldr	x0, [sp, #104]
   151c4:	stp	x4, x12, [sp, #112]
   151c8:	ldur	x1, [x4, #-24]
   151cc:	str	x1, [sp, #192]
   151d0:	ldr	x0, [x0, #40]
   151d4:	bl	13600 <grub_script_lexer_deref>
   151d8:	ldp	x4, x12, [sp, #112]
   151dc:	b	14d18 <grub_script_yyparse+0x2e8>
   151e0:	ldr	x25, [sp, #104]
   151e4:	stp	x12, x4, [sp, #112]
   151e8:	ldr	x0, [x25, #40]
   151ec:	bl	135f0 <grub_script_lexer_ref>
   151f0:	mov	x0, x25
   151f4:	bl	10008 <grub_script_mem_record>
   151f8:	mov	x1, x25
   151fc:	str	x0, [x25]
   15200:	ldr	x25, [x25, #24]
   15204:	str	xzr, [x1, #24]
   15208:	ldp	x12, x4, [sp, #112]
   1520c:	b	14d18 <grub_script_yyparse+0x2e8>
   15210:	ldur	x1, [x4, #-192]
   15214:	stp	x4, x12, [sp, #112]
   15218:	ldur	x2, [x4, #-120]
   1521c:	ldur	x3, [x4, #-48]
   15220:	ldr	x0, [sp, #104]
   15224:	bl	10598 <grub_script_create_cmdfor>
   15228:	b	15190 <grub_script_yyparse+0x760>
   1522c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15230:	str	wzr, [sp, #96]
   15234:	ldr	x0, [sp, #104]
   15238:	stp	x12, x4, [sp, #112]
   1523c:	ldr	x1, [x1]
   15240:	str	xzr, [sp, #192]
   15244:	bl	13c90 <grub_script_yyerror>
   15248:	ldp	x12, x4, [sp, #112]
   1524c:	b	14d18 <grub_script_yyparse+0x2e8>
   15250:	str	x12, [sp, #120]
   15254:	ldur	x1, [x4, #-144]
   15258:	ldur	x2, [x4, #-72]
   1525c:	ldr	x3, [x4]
   15260:	ldr	x0, [sp, #104]
   15264:	b	15150 <grub_script_yyparse+0x720>
   15268:	ldr	x0, [sp, #112]
   1526c:	stp	x12, x4, [sp, #120]
   15270:	bl	ff70 <grub_script_mem_free>
   15274:	ldp	x12, x4, [sp, #120]
   15278:	b	14d04 <grub_script_yyparse+0x2d4>
   1527c:	ldr	x0, [sp, #104]
   15280:	stp	x12, x4, [sp, #112]
   15284:	ldr	x0, [x0]
   15288:	bl	ff70 <grub_script_mem_free>
   1528c:	ldp	x12, x4, [sp, #112]
   15290:	b	15024 <grub_script_yyparse+0x5f4>
   15294:	nop
	...
   152c8:	stp	x29, x30, [sp, #-48]!
   152cc:	mov	x29, sp
   152d0:	stp	x19, x20, [sp, #16]
   152d4:	mov	x19, x0
   152d8:	ldr	x0, [x0, #40]
   152dc:	cbz	x0, 15334 <grub_script_yyparse+0x904>
   152e0:	ldp	x3, x1, [x19, #24]
   152e4:	sub	x2, x1, #0x1
   152e8:	cmp	x3, x2
   152ec:	b.cs	152fc <grub_script_yyparse+0x8cc>  // b.hs, b.nlast
   152f0:	ldp	x19, x20, [sp, #16]
   152f4:	ldp	x29, x30, [sp], #48
   152f8:	ret
   152fc:	add	x20, x1, #0x8
   15300:	lsl	x1, x20, #3
   15304:	bl	0 <grub_realloc>
   15308:	str	x0, [x19, #40]
   1530c:	cbz	x0, 1535c <grub_script_yyparse+0x92c>
   15310:	ldr	x3, [x19, #32]
   15314:	mov	x2, #0x40                  	// #64
   15318:	mov	w1, #0x0                   	// #0
   1531c:	add	x0, x0, x3, lsl #3
   15320:	bl	0 <grub_memset>
   15324:	str	x20, [x19, #32]
   15328:	ldp	x19, x20, [sp, #16]
   1532c:	ldp	x29, x30, [sp], #48
   15330:	ret
   15334:	mov	x0, #0x8                   	// #8
   15338:	bl	0 <grub_malloc>
   1533c:	str	x0, [x19, #40]
   15340:	cbz	x0, 153a4 <grub_script_yyparse+0x974>
   15344:	mov	x2, #0x8                   	// #8
   15348:	mov	w1, #0x0                   	// #0
   1534c:	bl	0 <grub_memset>
   15350:	mov	x0, #0x1                   	// #1
   15354:	stp	xzr, x0, [x19, #24]
   15358:	b	152f0 <grub_script_yyparse+0x8c0>
   1535c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15360:	stp	x21, x22, [sp, #32]
   15364:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   15368:	ldr	x22, [x1]
   1536c:	ldr	x0, [x0]
   15370:	ldr	x1, [x22]
   15374:	blr	x1
   15378:	mov	x21, x0
   1537c:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15380:	ldr	x1, [x22]
   15384:	ldr	x0, [x2]
   15388:	blr	x1
   1538c:	mov	x1, x0
   15390:	mov	x0, x21
   15394:	bl	0 <grub_printf>
   15398:	ldp	x21, x22, [sp, #32]
   1539c:	ldr	x0, [x19, #40]
   153a0:	b	15310 <grub_script_yyparse+0x8e0>
   153a4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   153a8:	stp	x21, x22, [sp, #32]
   153ac:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   153b0:	ldr	x21, [x1]
   153b4:	ldr	x0, [x0]
   153b8:	ldr	x1, [x21]
   153bc:	blr	x1
   153c0:	mov	x20, x0
   153c4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   153c8:	ldr	x1, [x21]
   153cc:	ldr	x0, [x2]
   153d0:	blr	x1
   153d4:	mov	x1, x0
   153d8:	mov	x0, x20
   153dc:	bl	0 <grub_printf>
   153e0:	ldp	x21, x22, [sp, #32]
   153e4:	ldr	x0, [x19, #40]
   153e8:	b	15344 <grub_script_yyparse+0x914>
   153ec:	nop
	...
   15408:	stp	x29, x30, [sp, #-48]!
   1540c:	mov	x29, sp
   15410:	stp	x19, x20, [sp, #16]
   15414:	mov	x19, x1
   15418:	mov	w20, w0
   1541c:	ldp	w2, w1, [x1, #84]
   15420:	ldr	x0, [x19, #96]
   15424:	cmp	w2, w1
   15428:	b.lt	1544c <grub_script_yyparse+0xa1c>  // b.tstop
   1542c:	add	w1, w1, #0x19
   15430:	str	w1, [x19, #88]
   15434:	sbfiz	x1, x1, #2, #32
   15438:	cbz	x0, 15480 <grub_script_yyparse+0xa50>
   1543c:	bl	0 <grub_realloc>
   15440:	str	x0, [x19, #96]
   15444:	cbz	x0, 15490 <grub_script_yyparse+0xa60>
   15448:	ldr	w2, [x19, #84]
   1544c:	ldr	w1, [x19, #76]
   15450:	add	w3, w2, #0x1
   15454:	str	w3, [x19, #84]
   15458:	lsl	w20, w20, #1
   1545c:	sub	w1, w1, #0x1
   15460:	add	w20, w20, #0x1
   15464:	add	w1, w1, w1, lsr #31
   15468:	asr	w1, w1, #1
   1546c:	str	w1, [x0, w2, sxtw #2]
   15470:	str	w20, [x19, #76]
   15474:	ldp	x19, x20, [sp, #16]
   15478:	ldp	x29, x30, [sp], #48
   1547c:	ret
   15480:	mov	x0, x1
   15484:	bl	0 <grub_malloc>
   15488:	str	x0, [x19, #96]
   1548c:	cbnz	x0, 15448 <grub_script_yyparse+0xa18>
   15490:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15494:	stp	x21, x22, [sp, #32]
   15498:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   1549c:	ldr	x22, [x1]
   154a0:	ldr	x0, [x0]
   154a4:	ldr	x1, [x22]
   154a8:	blr	x1
   154ac:	mov	x21, x0
   154b0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   154b4:	ldr	x1, [x22]
   154b8:	ldr	x0, [x2]
   154bc:	blr	x1
   154c0:	mov	x1, x0
   154c4:	mov	x0, x21
   154c8:	bl	0 <grub_printf>
   154cc:	ldr	w2, [x19, #84]
   154d0:	ldp	x21, x22, [sp, #32]
   154d4:	ldr	x0, [x19, #96]
   154d8:	b	1544c <grub_script_yyparse+0xa1c>
   154dc:	nop
	...
   154f8:	stp	x29, x30, [sp, #-48]!
   154fc:	mov	x29, sp
   15500:	stp	x19, x20, [sp, #16]
   15504:	mov	x20, x0
   15508:	mov	w19, w2
   1550c:	stp	x21, x22, [sp, #32]
   15510:	mov	x21, x1
   15514:	cbz	w2, 15590 <grub_script_yyparse+0xb60>
   15518:	ldr	x0, [x20, #40]
   1551c:	ldp	w2, w1, [x0, #64]
   15520:	ldr	x0, [x0, #56]
   15524:	add	w3, w2, w19
   15528:	cmp	w3, w1
   1552c:	b.cc	1555c <grub_script_yyparse+0xb2c>  // b.lo, b.ul, b.last
   15530:	lsl	w1, w1, #1
   15534:	lsl	w2, w19, #1
   15538:	cmp	w2, w1
   1553c:	csel	w22, w2, w1, cs  // cs = hs, nlast
   15540:	mov	w1, w22
   15544:	bl	0 <grub_realloc>
   15548:	cbz	x0, 155a0 <grub_script_yyparse+0xb70>
   1554c:	ldr	x1, [x20, #40]
   15550:	ldr	w2, [x1, #64]
   15554:	str	x0, [x1, #56]
   15558:	str	w22, [x1, #68]
   1555c:	mov	w2, w2
   15560:	mov	x1, x21
   15564:	sub	x2, x2, #0x1
   15568:	add	x0, x0, x2
   1556c:	bl	0 <grub_strcpy>
   15570:	ldr	x0, [x20, #40]
   15574:	ldp	x21, x22, [sp, #32]
   15578:	ldr	w2, [x0, #64]
   1557c:	add	w19, w2, w19
   15580:	str	w19, [x0, #64]
   15584:	ldp	x19, x20, [sp, #16]
   15588:	ldp	x29, x30, [sp], #48
   1558c:	ret
   15590:	mov	x0, x1
   15594:	bl	0 <grub_strlen>
   15598:	mov	w19, w0
   1559c:	b	15518 <grub_script_yyparse+0xae8>
   155a0:	mov	x0, x20
   155a4:	mov	x1, #0x0                   	// #0
   155a8:	ldp	x19, x20, [sp, #16]
   155ac:	ldp	x21, x22, [sp, #32]
   155b0:	ldp	x29, x30, [sp], #48
   155b4:	b	13c90 <grub_script_yyerror>

00000000000155b8 <yy_switch_to_buffer>:
   155b8:	stp	x29, x30, [sp, #-64]!
   155bc:	mov	x29, sp
   155c0:	stp	x19, x20, [sp, #16]
   155c4:	mov	x20, x0
   155c8:	mov	x19, x1
   155cc:	ldr	x0, [x1, #40]
   155d0:	cbz	x0, 156ac <yy_switch_to_buffer+0xf4>
   155d4:	ldp	x1, x2, [x1, #24]
   155d8:	sub	x3, x2, #0x1
   155dc:	cmp	x1, x3
   155e0:	b.cs	15660 <yy_switch_to_buffer+0xa8>  // b.hs, b.nlast
   155e4:	add	x2, x0, x1, lsl #3
   155e8:	ldr	x0, [x0, x1, lsl #3]
   155ec:	cmp	x0, x20
   155f0:	b.eq	15654 <yy_switch_to_buffer+0x9c>  // b.none
   155f4:	cbz	x0, 15624 <yy_switch_to_buffer+0x6c>
   155f8:	ldr	x0, [x19, #64]
   155fc:	ldrb	w1, [x19, #48]
   15600:	strb	w1, [x0]
   15604:	ldr	x1, [x19, #24]
   15608:	ldr	x0, [x19, #40]
   1560c:	ldr	w3, [x19, #52]
   15610:	ldr	x4, [x19, #64]
   15614:	add	x2, x0, x1, lsl #3
   15618:	ldr	x0, [x0, x1, lsl #3]
   1561c:	str	x4, [x0, #16]
   15620:	str	w3, [x0, #28]
   15624:	ldr	x0, [x20, #16]
   15628:	mov	w1, #0x1                   	// #1
   1562c:	ldr	x3, [x20]
   15630:	str	x20, [x2]
   15634:	ldr	w2, [x20, #28]
   15638:	str	x3, [x19, #8]
   1563c:	str	w2, [x19, #52]
   15640:	str	x0, [x19, #64]
   15644:	str	x0, [x19, #8320]
   15648:	ldrb	w0, [x0]
   1564c:	strb	w0, [x19, #48]
   15650:	str	w1, [x19, #80]
   15654:	ldp	x19, x20, [sp, #16]
   15658:	ldp	x29, x30, [sp], #64
   1565c:	ret
   15660:	stp	x21, x22, [sp, #32]
   15664:	add	x21, x2, #0x8
   15668:	lsl	x1, x21, #3
   1566c:	bl	0 <grub_realloc>
   15670:	str	x0, [x19, #40]
   15674:	cbz	x0, 156dc <yy_switch_to_buffer+0x124>
   15678:	ldr	x3, [x19, #32]
   1567c:	mov	x2, #0x40                  	// #64
   15680:	mov	w1, #0x0                   	// #0
   15684:	add	x0, x0, x3, lsl #3
   15688:	bl	0 <grub_memset>
   1568c:	str	x21, [x19, #32]
   15690:	ldp	x21, x22, [sp, #32]
   15694:	ldr	x0, [x19, #40]
   15698:	cbnz	x0, 156d4 <yy_switch_to_buffer+0x11c>
   1569c:	cbz	x20, 15654 <yy_switch_to_buffer+0x9c>
   156a0:	ldr	x2, [x19, #24]
   156a4:	lsl	x2, x2, #3
   156a8:	b	15624 <yy_switch_to_buffer+0x6c>
   156ac:	mov	x0, #0x8                   	// #8
   156b0:	bl	0 <grub_malloc>
   156b4:	str	x0, [x19, #40]
   156b8:	cbz	x0, 15724 <yy_switch_to_buffer+0x16c>
   156bc:	mov	x2, #0x8                   	// #8
   156c0:	mov	w1, #0x0                   	// #0
   156c4:	bl	0 <grub_memset>
   156c8:	mov	x0, #0x1                   	// #1
   156cc:	stp	xzr, x0, [x19, #24]
   156d0:	b	15694 <yy_switch_to_buffer+0xdc>
   156d4:	ldr	x1, [x19, #24]
   156d8:	b	155e4 <yy_switch_to_buffer+0x2c>
   156dc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   156e0:	str	x23, [sp, #48]
   156e4:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   156e8:	ldr	x23, [x1]
   156ec:	ldr	x0, [x0]
   156f0:	ldr	x1, [x23]
   156f4:	blr	x1
   156f8:	mov	x22, x0
   156fc:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15700:	ldr	x1, [x23]
   15704:	ldr	x0, [x2]
   15708:	blr	x1
   1570c:	mov	x1, x0
   15710:	mov	x0, x22
   15714:	bl	0 <grub_printf>
   15718:	ldr	x0, [x19, #40]
   1571c:	ldr	x23, [sp, #48]
   15720:	b	15678 <yy_switch_to_buffer+0xc0>
   15724:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15728:	stp	x21, x22, [sp, #32]
   1572c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   15730:	ldr	x22, [x1]
   15734:	ldr	x0, [x0]
   15738:	ldr	x1, [x22]
   1573c:	blr	x1
   15740:	mov	x21, x0
   15744:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15748:	ldr	x1, [x22]
   1574c:	ldr	x0, [x2]
   15750:	blr	x1
   15754:	mov	x1, x0
   15758:	mov	x0, x21
   1575c:	bl	0 <grub_printf>
   15760:	ldp	x21, x22, [sp, #32]
   15764:	ldr	x0, [x19, #40]
   15768:	b	156bc <yy_switch_to_buffer+0x104>
   1576c:	nop
	...

0000000000015788 <yy_create_buffer>:
   15788:	stp	x29, x30, [sp, #-64]!
   1578c:	mov	x29, sp
   15790:	stp	x19, x20, [sp, #16]
   15794:	mov	x20, x2
   15798:	stp	x21, x22, [sp, #32]
   1579c:	mov	x22, x0
   157a0:	mov	w21, w1
   157a4:	mov	x0, #0x40                  	// #64
   157a8:	bl	0 <grub_malloc>
   157ac:	mov	x19, x0
   157b0:	cbz	x0, 158d0 <yy_create_buffer+0x148>
   157b4:	add	w0, w21, #0x2
   157b8:	str	w21, [x19, #24]
   157bc:	sxtw	x0, w0
   157c0:	bl	0 <grub_malloc>
   157c4:	str	x0, [x19, #8]
   157c8:	cbz	x0, 15888 <yy_create_buffer+0x100>
   157cc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   157d0:	mov	x2, #0x100000000           	// #4294967296
   157d4:	stur	x2, [x19, #28]
   157d8:	mov	w2, #0x1                   	// #1
   157dc:	ldr	x1, [x1]
   157e0:	ldr	w4, [x1]
   157e4:	strb	wzr, [x0]
   157e8:	ldr	x0, [x19, #8]
   157ec:	strb	wzr, [x0, #1]
   157f0:	ldr	x3, [x20, #40]
   157f4:	str	w2, [x19, #40]
   157f8:	ldr	x0, [x19, #8]
   157fc:	str	x0, [x19, #16]
   15800:	str	wzr, [x19, #56]
   15804:	cbz	x3, 15818 <yy_create_buffer+0x90>
   15808:	ldr	x5, [x20, #24]
   1580c:	ldr	x3, [x3, x5, lsl #3]
   15810:	cmp	x19, x3
   15814:	b.eq	15844 <yy_create_buffer+0xbc>  // b.none
   15818:	str	x22, [x19]
   1581c:	mov	x0, #0x1                   	// #1
   15820:	stur	x0, [x19, #44]
   15824:	mov	x0, x19
   15828:	str	w2, [x19, #52]
   1582c:	ldp	x21, x22, [sp, #32]
   15830:	str	w4, [x1]
   15834:	str	wzr, [x19, #36]
   15838:	ldp	x19, x20, [sp, #16]
   1583c:	ldp	x29, x30, [sp], #64
   15840:	ret
   15844:	ldr	w3, [x19, #28]
   15848:	ldr	x5, [x19]
   1584c:	str	x5, [x20, #8]
   15850:	str	w3, [x20, #52]
   15854:	str	x0, [x20, #64]
   15858:	str	x0, [x20, #8320]
   1585c:	ldrb	w0, [x0]
   15860:	strb	w0, [x20, #48]
   15864:	mov	x0, x19
   15868:	str	x22, [x19]
   1586c:	str	w2, [x19, #52]
   15870:	ldp	x21, x22, [sp, #32]
   15874:	str	w4, [x1]
   15878:	str	wzr, [x19, #36]
   1587c:	ldp	x19, x20, [sp, #16]
   15880:	ldp	x29, x30, [sp], #64
   15884:	ret
   15888:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1588c:	stp	x23, x24, [sp, #48]
   15890:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   15894:	ldr	x23, [x1]
   15898:	ldr	x0, [x0]
   1589c:	ldr	x1, [x23]
   158a0:	blr	x1
   158a4:	mov	x21, x0
   158a8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   158ac:	ldr	x1, [x23]
   158b0:	ldr	x0, [x2]
   158b4:	blr	x1
   158b8:	mov	x1, x0
   158bc:	mov	x0, x21
   158c0:	bl	0 <grub_printf>
   158c4:	ldr	x0, [x19, #8]
   158c8:	ldp	x23, x24, [sp, #48]
   158cc:	b	157cc <yy_create_buffer+0x44>
   158d0:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   158d4:	stp	x23, x24, [sp, #48]
   158d8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   158dc:	ldr	x24, [x1]
   158e0:	ldr	x0, [x0]
   158e4:	ldr	x1, [x24]
   158e8:	blr	x1
   158ec:	mov	x23, x0
   158f0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   158f4:	ldr	x1, [x24]
   158f8:	ldr	x0, [x2]
   158fc:	blr	x1
   15900:	mov	x1, x0
   15904:	mov	x0, x23
   15908:	bl	0 <grub_printf>
   1590c:	ldp	x23, x24, [sp, #48]
   15910:	b	157b4 <yy_create_buffer+0x2c>
   15914:	nop
	...

0000000000015938 <yyrestart>:
   15938:	stp	x29, x30, [sp, #-48]!
   1593c:	mov	x29, sp
   15940:	stp	x19, x20, [sp, #16]
   15944:	mov	x19, x1
   15948:	mov	x20, x0
   1594c:	ldr	x1, [x1, #40]
   15950:	cbz	x1, 15a20 <yyrestart+0xe8>
   15954:	ldr	x0, [x19, #24]
   15958:	ldr	x1, [x1, x0, lsl #3]
   1595c:	cbz	x1, 15a20 <yyrestart+0xe8>
   15960:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15964:	ldr	x4, [x2]
   15968:	ldr	w7, [x4]
   1596c:	ldr	x0, [x1, #8]
   15970:	str	wzr, [x1, #28]
   15974:	mov	w5, #0x1                   	// #1
   15978:	strb	wzr, [x0]
   1597c:	ldr	x0, [x1, #8]
   15980:	strb	wzr, [x0, #1]
   15984:	ldr	x2, [x19, #40]
   15988:	str	w5, [x1, #40]
   1598c:	ldr	x0, [x1, #8]
   15990:	str	x0, [x1, #16]
   15994:	str	wzr, [x1, #56]
   15998:	ldr	x0, [x19, #24]
   1599c:	cbz	x2, 15a70 <yyrestart+0x138>
   159a0:	ldr	x3, [x2, x0, lsl #3]
   159a4:	cmp	x1, x3
   159a8:	ldr	w6, [x3, #28]
   159ac:	ldr	x2, [x3, #16]
   159b0:	b.eq	159f4 <yyrestart+0xbc>  // b.none
   159b4:	str	x20, [x1]
   159b8:	str	w5, [x1, #52]
   159bc:	mov	x0, #0x1                   	// #1
   159c0:	stur	x0, [x1, #44]
   159c4:	ldr	x0, [x3]
   159c8:	str	wzr, [x1, #36]
   159cc:	str	w7, [x4]
   159d0:	str	x0, [x19, #8]
   159d4:	str	w6, [x19, #52]
   159d8:	str	x2, [x19, #64]
   159dc:	str	x2, [x19, #8320]
   159e0:	ldrb	w0, [x2]
   159e4:	strb	w0, [x19, #48]
   159e8:	ldp	x19, x20, [sp, #16]
   159ec:	ldp	x29, x30, [sp], #48
   159f0:	ret
   159f4:	ldr	x0, [x1]
   159f8:	str	x0, [x19, #8]
   159fc:	str	w6, [x19, #52]
   15a00:	mov	x3, x1
   15a04:	str	x2, [x19, #64]
   15a08:	str	x2, [x19, #8320]
   15a0c:	ldrb	w0, [x2]
   15a10:	strb	w0, [x19, #48]
   15a14:	str	x20, [x1]
   15a18:	str	w5, [x1, #52]
   15a1c:	b	159c4 <yyrestart+0x8c>
   15a20:	mov	x0, x19
   15a24:	stp	x21, x22, [sp, #32]
   15a28:	bl	152c8 <grub_script_yyparse+0x898>
   15a2c:	ldr	x0, [x19, #8]
   15a30:	mov	w1, #0x4000                	// #16384
   15a34:	ldr	x22, [x19, #24]
   15a38:	mov	x2, x19
   15a3c:	ldr	x21, [x19, #40]
   15a40:	bl	15788 <yy_create_buffer>
   15a44:	ldr	x1, [x19, #40]
   15a48:	str	x0, [x21, x22, lsl #3]
   15a4c:	cbz	x1, 15a8c <yyrestart+0x154>
   15a50:	ldr	x0, [x19, #24]
   15a54:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15a58:	ldr	x4, [x2]
   15a5c:	ldr	x1, [x1, x0, lsl #3]
   15a60:	ldr	w7, [x4]
   15a64:	cbz	x1, 15a8c <yyrestart+0x154>
   15a68:	ldp	x21, x22, [sp, #32]
   15a6c:	b	1596c <yyrestart+0x34>
   15a70:	lsl	x0, x0, #3
   15a74:	ldr	x3, [x0]
   15a78:	ldr	w6, [x3, #28]
   15a7c:	ldr	x2, [x3, #16]
   15a80:	str	x20, [x1]
   15a84:	str	w5, [x1, #52]
   15a88:	b	159bc <yyrestart+0x84>
   15a8c:	mov	x0, #0x0                   	// #0
   15a90:	str	x20, [x0]
   15a94:	brk	#0x3e8
	...

0000000000015aa0 <yy_delete_buffer>:
   15aa0:	cbz	x0, 15b08 <yy_delete_buffer+0x68>
   15aa4:	stp	x29, x30, [sp, #-32]!
   15aa8:	mov	x29, sp
   15aac:	str	x19, [sp, #16]
   15ab0:	mov	x19, x0
   15ab4:	ldr	x0, [x1, #40]
   15ab8:	cbz	x0, 15acc <yy_delete_buffer+0x2c>
   15abc:	ldr	x1, [x1, #24]
   15ac0:	ldr	x2, [x0, x1, lsl #3]
   15ac4:	cmp	x19, x2
   15ac8:	b.eq	15ae4 <yy_delete_buffer+0x44>  // b.none
   15acc:	ldr	w0, [x19, #32]
   15ad0:	cbnz	w0, 15af0 <yy_delete_buffer+0x50>
   15ad4:	mov	x0, x19
   15ad8:	ldr	x19, [sp, #16]
   15adc:	ldp	x29, x30, [sp], #32
   15ae0:	b	0 <grub_free>
   15ae4:	str	xzr, [x0, x1, lsl #3]
   15ae8:	ldr	w0, [x19, #32]
   15aec:	cbz	w0, 15ad4 <yy_delete_buffer+0x34>
   15af0:	ldr	x0, [x19, #8]
   15af4:	bl	0 <grub_free>
   15af8:	mov	x0, x19
   15afc:	ldr	x19, [sp, #16]
   15b00:	ldp	x29, x30, [sp], #32
   15b04:	b	0 <grub_free>
   15b08:	ret
   15b0c:	nop

0000000000015b10 <yy_flush_buffer>:
   15b10:	cbz	x0, 15b54 <yy_flush_buffer+0x44>
   15b14:	ldr	x3, [x0, #8]
   15b18:	str	wzr, [x0, #28]
   15b1c:	mov	w2, #0x1                   	// #1
   15b20:	strb	wzr, [x3]
   15b24:	ldr	x3, [x0, #8]
   15b28:	strb	wzr, [x3, #1]
   15b2c:	ldr	x3, [x1, #40]
   15b30:	str	w2, [x0, #40]
   15b34:	ldr	x2, [x0, #8]
   15b38:	str	x2, [x0, #16]
   15b3c:	str	wzr, [x0, #56]
   15b40:	cbz	x3, 15b54 <yy_flush_buffer+0x44>
   15b44:	ldr	x4, [x1, #24]
   15b48:	ldr	x3, [x3, x4, lsl #3]
   15b4c:	cmp	x0, x3
   15b50:	b.eq	15b58 <yy_flush_buffer+0x48>  // b.none
   15b54:	ret
   15b58:	ldr	x3, [x0]
   15b5c:	ldr	w0, [x0, #28]
   15b60:	str	x3, [x1, #8]
   15b64:	str	w0, [x1, #52]
   15b68:	str	x2, [x1, #64]
   15b6c:	str	x2, [x1, #8320]
   15b70:	ldrb	w0, [x2]
   15b74:	strb	w0, [x1, #48]
   15b78:	ret
   15b7c:	nop

0000000000015b80 <yypush_buffer_state>:
   15b80:	cbz	x0, 15c80 <yypush_buffer_state+0x100>
   15b84:	stp	x29, x30, [sp, #-64]!
   15b88:	mov	x29, sp
   15b8c:	stp	x19, x20, [sp, #16]
   15b90:	mov	x20, x0
   15b94:	mov	x19, x1
   15b98:	ldr	x0, [x1, #40]
   15b9c:	cbz	x0, 15ccc <yypush_buffer_state+0x14c>
   15ba0:	ldp	x2, x3, [x1, #24]
   15ba4:	sub	x4, x3, #0x1
   15ba8:	add	x1, x0, x2, lsl #3
   15bac:	cmp	x2, x4
   15bb0:	b.cs	15c34 <yypush_buffer_state+0xb4>  // b.hs, b.nlast
   15bb4:	ldr	x0, [x1]
   15bb8:	cbz	x0, 15bf8 <yypush_buffer_state+0x78>
   15bbc:	ldr	x0, [x19, #64]
   15bc0:	ldrb	w1, [x19, #48]
   15bc4:	strb	w1, [x0]
   15bc8:	ldr	x0, [x19, #24]
   15bcc:	ldr	x2, [x19, #40]
   15bd0:	ldr	w4, [x19, #52]
   15bd4:	ldr	x5, [x19, #64]
   15bd8:	add	x1, x2, x0, lsl #3
   15bdc:	ldr	x3, [x2, x0, lsl #3]
   15be0:	str	x5, [x3, #16]
   15be4:	str	w4, [x3, #28]
   15be8:	cbz	x2, 15bf8 <yypush_buffer_state+0x78>
   15bec:	add	x1, x0, #0x1
   15bf0:	str	x1, [x19, #24]
   15bf4:	add	x1, x2, x1, lsl #3
   15bf8:	ldr	x0, [x20, #16]
   15bfc:	ldr	w2, [x20, #28]
   15c00:	ldr	x3, [x20]
   15c04:	str	x20, [x1]
   15c08:	str	x3, [x19, #8]
   15c0c:	mov	w1, #0x1                   	// #1
   15c10:	str	w2, [x19, #52]
   15c14:	str	x0, [x19, #64]
   15c18:	str	x0, [x19, #8320]
   15c1c:	ldrb	w0, [x0]
   15c20:	strb	w0, [x19, #48]
   15c24:	str	w1, [x19, #80]
   15c28:	ldp	x19, x20, [sp, #16]
   15c2c:	ldp	x29, x30, [sp], #64
   15c30:	ret
   15c34:	stp	x21, x22, [sp, #32]
   15c38:	add	x21, x3, #0x8
   15c3c:	lsl	x1, x21, #3
   15c40:	bl	0 <grub_realloc>
   15c44:	str	x0, [x19, #40]
   15c48:	cbz	x0, 15c84 <yypush_buffer_state+0x104>
   15c4c:	ldr	x3, [x19, #32]
   15c50:	mov	w1, #0x0                   	// #0
   15c54:	mov	x2, #0x40                  	// #64
   15c58:	add	x0, x0, x3, lsl #3
   15c5c:	bl	0 <grub_memset>
   15c60:	ldr	x1, [x19, #24]
   15c64:	str	x21, [x19, #32]
   15c68:	ldp	x21, x22, [sp, #32]
   15c6c:	lsl	x1, x1, #3
   15c70:	ldr	x0, [x19, #40]
   15c74:	add	x1, x0, x1
   15c78:	cbz	x0, 15bf8 <yypush_buffer_state+0x78>
   15c7c:	b	15bb4 <yypush_buffer_state+0x34>
   15c80:	ret
   15c84:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15c88:	str	x23, [sp, #48]
   15c8c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   15c90:	ldr	x23, [x1]
   15c94:	ldr	x0, [x0]
   15c98:	ldr	x1, [x23]
   15c9c:	blr	x1
   15ca0:	mov	x22, x0
   15ca4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15ca8:	ldr	x1, [x23]
   15cac:	ldr	x0, [x2]
   15cb0:	blr	x1
   15cb4:	mov	x1, x0
   15cb8:	mov	x0, x22
   15cbc:	bl	0 <grub_printf>
   15cc0:	ldr	x0, [x19, #40]
   15cc4:	ldr	x23, [sp, #48]
   15cc8:	b	15c4c <yypush_buffer_state+0xcc>
   15ccc:	mov	x0, #0x8                   	// #8
   15cd0:	bl	0 <grub_malloc>
   15cd4:	str	x0, [x19, #40]
   15cd8:	cbz	x0, 15cf8 <yypush_buffer_state+0x178>
   15cdc:	mov	w1, #0x0                   	// #0
   15ce0:	mov	x2, #0x8                   	// #8
   15ce4:	bl	0 <grub_memset>
   15ce8:	mov	x0, #0x1                   	// #1
   15cec:	mov	x1, #0x0                   	// #0
   15cf0:	stp	xzr, x0, [x19, #24]
   15cf4:	b	15c70 <yypush_buffer_state+0xf0>
   15cf8:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15cfc:	stp	x21, x22, [sp, #32]
   15d00:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   15d04:	ldr	x22, [x1]
   15d08:	ldr	x0, [x0]
   15d0c:	ldr	x1, [x22]
   15d10:	blr	x1
   15d14:	mov	x21, x0
   15d18:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15d1c:	ldr	x1, [x22]
   15d20:	ldr	x0, [x2]
   15d24:	blr	x1
   15d28:	mov	x1, x0
   15d2c:	mov	x0, x21
   15d30:	bl	0 <grub_printf>
   15d34:	ldp	x21, x22, [sp, #32]
   15d38:	ldr	x0, [x19, #40]
   15d3c:	b	15cdc <yypush_buffer_state+0x15c>
	...

0000000000015d58 <yypop_buffer_state>:
   15d58:	stp	x29, x30, [sp, #-32]!
   15d5c:	mov	x29, sp
   15d60:	stp	x19, x20, [sp, #16]
   15d64:	mov	x19, x0
   15d68:	ldr	x0, [x0, #40]
   15d6c:	cbz	x0, 15de0 <yypop_buffer_state+0x88>
   15d70:	ldr	x1, [x19, #24]
   15d74:	ldr	x20, [x0, x1, lsl #3]
   15d78:	cbz	x20, 15de0 <yypop_buffer_state+0x88>
   15d7c:	ldr	w2, [x20, #32]
   15d80:	str	xzr, [x0, x1, lsl #3]
   15d84:	cbnz	w2, 15dec <yypop_buffer_state+0x94>
   15d88:	mov	x0, x20
   15d8c:	bl	0 <grub_free>
   15d90:	ldr	x0, [x19, #24]
   15d94:	ldr	x1, [x19, #40]
   15d98:	str	xzr, [x1, x0, lsl #3]
   15d9c:	cbz	x0, 15da8 <yypop_buffer_state+0x50>
   15da0:	sub	x0, x0, #0x1
   15da4:	str	x0, [x19, #24]
   15da8:	cbz	x1, 15de0 <yypop_buffer_state+0x88>
   15dac:	ldr	x0, [x1, x0, lsl #3]
   15db0:	cbz	x0, 15de0 <yypop_buffer_state+0x88>
   15db4:	ldr	x1, [x0, #16]
   15db8:	mov	w2, #0x1                   	// #1
   15dbc:	ldr	x3, [x0]
   15dc0:	ldr	w0, [x0, #28]
   15dc4:	str	x3, [x19, #8]
   15dc8:	str	w0, [x19, #52]
   15dcc:	str	x1, [x19, #64]
   15dd0:	str	x1, [x19, #8320]
   15dd4:	ldrb	w0, [x1]
   15dd8:	strb	w0, [x19, #48]
   15ddc:	str	w2, [x19, #80]
   15de0:	ldp	x19, x20, [sp, #16]
   15de4:	ldp	x29, x30, [sp], #32
   15de8:	ret
   15dec:	ldr	x0, [x20, #8]
   15df0:	bl	0 <grub_free>
   15df4:	mov	x0, x20
   15df8:	bl	0 <grub_free>
   15dfc:	ldr	x0, [x19, #24]
   15e00:	ldr	x1, [x19, #40]
   15e04:	str	xzr, [x1, x0, lsl #3]
   15e08:	cbz	x0, 15da8 <yypop_buffer_state+0x50>
   15e0c:	b	15da0 <yypop_buffer_state+0x48>

0000000000015e10 <yy_scan_buffer>:
   15e10:	stp	x29, x30, [sp, #-64]!
   15e14:	cmp	x1, #0x1
   15e18:	mov	x29, sp
   15e1c:	stp	x19, x20, [sp, #16]
   15e20:	b.ls	15f8c <yy_scan_buffer+0x17c>  // b.plast
   15e24:	stp	x21, x22, [sp, #32]
   15e28:	mov	x21, x0
   15e2c:	add	x0, x0, x1
   15e30:	mov	x20, x1
   15e34:	ldurb	w1, [x0, #-2]
   15e38:	cbnz	w1, 15f74 <yy_scan_buffer+0x164>
   15e3c:	ldurb	w0, [x0, #-1]
   15e40:	mov	x19, #0x0                   	// #0
   15e44:	cbnz	w0, 15f14 <yy_scan_buffer+0x104>
   15e48:	mov	x22, x2
   15e4c:	mov	x0, #0x40                  	// #64
   15e50:	bl	0 <grub_malloc>
   15e54:	mov	x19, x0
   15e58:	cbz	x0, 15f28 <yy_scan_buffer+0x118>
   15e5c:	mov	w1, #0x1                   	// #1
   15e60:	sub	w20, w20, #0x2
   15e64:	stp	xzr, x21, [x19]
   15e68:	mov	x0, x22
   15e6c:	str	x21, [x19, #16]
   15e70:	stp	w20, w20, [x19, #24]
   15e74:	str	xzr, [x19, #32]
   15e78:	str	w1, [x19, #40]
   15e7c:	stur	xzr, [x19, #52]
   15e80:	bl	152c8 <grub_script_yyparse+0x898>
   15e84:	ldr	x1, [x22, #40]
   15e88:	ldr	x0, [x22, #24]
   15e8c:	cbz	x1, 15f6c <yy_scan_buffer+0x15c>
   15e90:	ldr	x2, [x1, x0, lsl #3]
   15e94:	add	x0, x1, x0, lsl #3
   15e98:	cmp	x19, x2
   15e9c:	b.eq	15f14 <yy_scan_buffer+0x104>  // b.none
   15ea0:	cbz	x2, 15ed0 <yy_scan_buffer+0xc0>
   15ea4:	ldr	x0, [x22, #64]
   15ea8:	ldrb	w1, [x22, #48]
   15eac:	strb	w1, [x0]
   15eb0:	ldr	x2, [x22, #24]
   15eb4:	ldr	x1, [x22, #40]
   15eb8:	ldr	w3, [x22, #52]
   15ebc:	ldr	x4, [x22, #64]
   15ec0:	add	x0, x1, x2, lsl #3
   15ec4:	ldr	x1, [x1, x2, lsl #3]
   15ec8:	str	x4, [x1, #16]
   15ecc:	str	w3, [x1, #28]
   15ed0:	ldr	x1, [x19, #16]
   15ed4:	ldr	w2, [x19, #28]
   15ed8:	ldr	x3, [x19]
   15edc:	str	x19, [x0]
   15ee0:	str	x3, [x22, #8]
   15ee4:	mov	w0, #0x1                   	// #1
   15ee8:	str	w2, [x22, #52]
   15eec:	str	x1, [x22, #64]
   15ef0:	str	x1, [x22, #8320]
   15ef4:	ldrb	w1, [x1]
   15ef8:	strb	w1, [x22, #48]
   15efc:	str	w0, [x22, #80]
   15f00:	mov	x0, x19
   15f04:	ldp	x19, x20, [sp, #16]
   15f08:	ldp	x21, x22, [sp, #32]
   15f0c:	ldp	x29, x30, [sp], #64
   15f10:	ret
   15f14:	mov	x0, x19
   15f18:	ldp	x19, x20, [sp, #16]
   15f1c:	ldp	x21, x22, [sp, #32]
   15f20:	ldp	x29, x30, [sp], #64
   15f24:	ret
   15f28:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   15f2c:	stp	x23, x24, [sp, #48]
   15f30:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   15f34:	ldr	x24, [x1]
   15f38:	ldr	x0, [x0]
   15f3c:	ldr	x1, [x24]
   15f40:	blr	x1
   15f44:	mov	x23, x0
   15f48:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   15f4c:	ldr	x1, [x24]
   15f50:	ldr	x0, [x2]
   15f54:	blr	x1
   15f58:	mov	x1, x0
   15f5c:	mov	x0, x23
   15f60:	bl	0 <grub_printf>
   15f64:	ldp	x23, x24, [sp, #48]
   15f68:	b	15e5c <yy_scan_buffer+0x4c>
   15f6c:	lsl	x0, x0, #3
   15f70:	b	15ed0 <yy_scan_buffer+0xc0>
   15f74:	mov	x19, #0x0                   	// #0
   15f78:	mov	x0, x19
   15f7c:	ldp	x19, x20, [sp, #16]
   15f80:	ldp	x21, x22, [sp, #32]
   15f84:	ldp	x29, x30, [sp], #64
   15f88:	ret
   15f8c:	mov	x19, #0x0                   	// #0
   15f90:	mov	x0, x19
   15f94:	ldp	x19, x20, [sp, #16]
   15f98:	ldp	x29, x30, [sp], #64
   15f9c:	ret
	...

0000000000015fb8 <yy_scan_bytes>:
   15fb8:	stp	x29, x30, [sp, #-80]!
   15fbc:	mov	x29, sp
   15fc0:	stp	x21, x22, [sp, #32]
   15fc4:	add	w22, w1, #0x2
   15fc8:	mov	x21, x0
   15fcc:	sxtw	x22, w22
   15fd0:	stp	x19, x20, [sp, #16]
   15fd4:	mov	x0, x22
   15fd8:	mov	w20, w1
   15fdc:	stp	x23, x24, [sp, #48]
   15fe0:	mov	x23, x2
   15fe4:	bl	0 <grub_malloc>
   15fe8:	mov	x19, x0
   15fec:	cbz	x0, 16104 <yy_scan_bytes+0x14c>
   15ff0:	cmp	w20, #0x0
   15ff4:	b.le	160c0 <yy_scan_bytes+0x108>
   15ff8:	orr	x5, x19, x21
   15ffc:	add	x4, x19, #0x7
   16000:	sub	x4, x4, x21
   16004:	sub	w3, w20, #0x1
   16008:	tst	x5, #0x7
   1600c:	ccmp	x4, #0xe, #0x0, eq  // eq = none
   16010:	ccmp	w3, #0x9, #0x0, hi  // hi = pmore
   16014:	b.ls	161a0 <yy_scan_bytes+0x1e8>  // b.plast
   16018:	and	x5, x20, #0xfffffff8
   1601c:	mov	x3, #0x0                   	// #0
   16020:	ldr	x4, [x21, x3]
   16024:	str	x4, [x19, x3]
   16028:	add	x3, x3, #0x8
   1602c:	cmp	x3, x5
   16030:	b.ne	16020 <yy_scan_bytes+0x68>  // b.any
   16034:	tst	x20, #0x7
   16038:	and	w3, w20, #0xfffffff8
   1603c:	b.eq	160c0 <yy_scan_bytes+0x108>  // b.none
   16040:	ldrb	w0, [x21, w3, uxtw]
   16044:	add	w4, w3, #0x1
   16048:	strb	w0, [x19, w3, uxtw]
   1604c:	cmp	w20, w4
   16050:	b.le	160c0 <yy_scan_bytes+0x108>
   16054:	ldrb	w0, [x21, w4, sxtw]
   16058:	add	w5, w3, #0x2
   1605c:	strb	w0, [x19, w4, sxtw]
   16060:	cmp	w20, w5
   16064:	b.le	160c0 <yy_scan_bytes+0x108>
   16068:	ldrb	w1, [x21, w5, sxtw]
   1606c:	add	w0, w3, #0x3
   16070:	strb	w1, [x19, w5, sxtw]
   16074:	cmp	w20, w0
   16078:	b.le	160c0 <yy_scan_bytes+0x108>
   1607c:	ldrb	w2, [x21, w0, sxtw]
   16080:	add	w1, w3, #0x4
   16084:	strb	w2, [x19, w0, sxtw]
   16088:	cmp	w20, w1
   1608c:	b.le	160c0 <yy_scan_bytes+0x108>
   16090:	ldrb	w2, [x21, w1, sxtw]
   16094:	add	w0, w3, #0x5
   16098:	strb	w2, [x19, w1, sxtw]
   1609c:	cmp	w20, w0
   160a0:	b.le	160c0 <yy_scan_bytes+0x108>
   160a4:	ldrb	w1, [x21, w0, sxtw]
   160a8:	add	w3, w3, #0x6
   160ac:	strb	w1, [x19, w0, sxtw]
   160b0:	cmp	w20, w3
   160b4:	b.le	160c0 <yy_scan_bytes+0x108>
   160b8:	ldrb	w0, [x21, w3, sxtw]
   160bc:	strb	w0, [x19, w3, sxtw]
   160c0:	add	x3, x19, w20, sxtw
   160c4:	mov	x0, x19
   160c8:	mov	x2, x23
   160cc:	mov	x1, x22
   160d0:	strb	wzr, [x3, #1]
   160d4:	strb	wzr, [x19, w20, sxtw]
   160d8:	bl	15e10 <yy_scan_buffer>
   160dc:	mov	x19, x0
   160e0:	cbz	x0, 16148 <yy_scan_bytes+0x190>
   160e4:	mov	w1, #0x1                   	// #1
   160e8:	mov	x0, x19
   160ec:	ldp	x21, x22, [sp, #32]
   160f0:	ldp	x23, x24, [sp, #48]
   160f4:	str	w1, [x19, #32]
   160f8:	ldp	x19, x20, [sp, #16]
   160fc:	ldp	x29, x30, [sp], #80
   16100:	ret
   16104:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16108:	str	x25, [sp, #64]
   1610c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16110:	ldr	x25, [x1]
   16114:	ldr	x0, [x0]
   16118:	ldr	x1, [x25]
   1611c:	blr	x1
   16120:	mov	x24, x0
   16124:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16128:	ldr	x1, [x25]
   1612c:	ldr	x0, [x2]
   16130:	blr	x1
   16134:	mov	x1, x0
   16138:	mov	x0, x24
   1613c:	bl	0 <grub_printf>
   16140:	ldr	x25, [sp, #64]
   16144:	b	15ff0 <yy_scan_bytes+0x38>
   16148:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1614c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16150:	ldr	x21, [x1]
   16154:	ldr	x0, [x0]
   16158:	ldr	x1, [x21]
   1615c:	blr	x1
   16160:	mov	x20, x0
   16164:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16168:	ldr	x1, [x21]
   1616c:	ldr	x0, [x2]
   16170:	blr	x1
   16174:	mov	x1, x0
   16178:	mov	x0, x20
   1617c:	bl	0 <grub_printf>
   16180:	mov	w1, #0x1                   	// #1
   16184:	mov	x0, x19
   16188:	ldp	x21, x22, [sp, #32]
   1618c:	ldp	x23, x24, [sp, #48]
   16190:	str	w1, [x19, #32]
   16194:	ldp	x19, x20, [sp, #16]
   16198:	ldp	x29, x30, [sp], #80
   1619c:	ret
   161a0:	mov	x3, #0x0                   	// #0
   161a4:	nop
   161a8:	ldrb	w4, [x21, x3]
   161ac:	strb	w4, [x19, x3]
   161b0:	add	x3, x3, #0x1
   161b4:	cmp	w20, w3
   161b8:	b.gt	161a8 <yy_scan_bytes+0x1f0>
   161bc:	b	160c0 <yy_scan_bytes+0x108>
	...

00000000000161e0 <yy_scan_string>:
   161e0:	stp	x29, x30, [sp, #-32]!
   161e4:	mov	x29, sp
   161e8:	stp	x19, x20, [sp, #16]
   161ec:	mov	x20, x1
   161f0:	mov	x19, x0
   161f4:	bl	0 <grub_strlen>
   161f8:	mov	w1, w0
   161fc:	mov	x2, x20
   16200:	mov	x0, x19
   16204:	ldp	x19, x20, [sp, #16]
   16208:	ldp	x29, x30, [sp], #32
   1620c:	b	15fb8 <yy_scan_bytes>

0000000000016210 <yylex>:
   16210:	stp	x29, x30, [sp, #-128]!
   16214:	mov	x29, sp
   16218:	stp	x19, x20, [sp, #16]
   1621c:	mov	x20, x1
   16220:	ldr	w1, [x1, #72]
   16224:	stp	x21, x22, [sp, #32]
   16228:	stp	x23, x24, [sp, #48]
   1622c:	stp	x25, x26, [sp, #64]
   16230:	stp	x27, x28, [sp, #80]
   16234:	str	x0, [x20, #8336]
   16238:	cbz	w1, 164e0 <yylex+0x2d0>
   1623c:	ldrb	w0, [x20, #48]
   16240:	ldr	x10, [x20, #64]
   16244:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16248:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1624c:	add	x22, x20, #0x80
   16250:	ldr	x21, [x2]
   16254:	ldr	x1, [x1]
   16258:	add	x19, x21, #0x278
   1625c:	str	x1, [sp, #96]
   16260:	strb	w0, [x10]
   16264:	mov	x27, x10
   16268:	add	x23, x21, #0x100
   1626c:	ldr	w0, [x20, #76]
   16270:	add	x6, x21, #0x428
   16274:	add	x7, x21, #0xa98
   16278:	add	x11, x21, #0xc48
   1627c:	add	x12, x21, #0xc70
   16280:	ldrb	w2, [x10]
   16284:	sxtw	x4, w0
   16288:	ldrsh	w1, [x23, w0, sxtw #1]
   1628c:	ldrb	w3, [x21, w2, sxtw]
   16290:	cbz	w1, 1629c <yylex+0x8c>
   16294:	str	w0, [x20, #104]
   16298:	str	x10, [x20, #112]
   1629c:	ldrsh	w2, [x19, x4, lsl #1]
   162a0:	add	w2, w2, w3
   162a4:	sxtw	x5, w2
   162a8:	ldrsh	w1, [x6, w2, sxtw #1]
   162ac:	cmp	w0, w1
   162b0:	b.eq	162e4 <yylex+0xd4>  // b.none
   162b4:	nop
   162b8:	ldrsh	w0, [x7, x4, lsl #1]
   162bc:	cmp	w0, #0xbb
   162c0:	b.le	1649c <yylex+0x28c>
   162c4:	ldrb	w3, [x11, w3, sxtw]
   162c8:	sxtw	x4, w0
   162cc:	ldrsh	w2, [x19, w0, sxtw #1]
   162d0:	add	w2, w2, w3
   162d4:	sxtw	x5, w2
   162d8:	ldrsh	w1, [x6, w2, sxtw #1]
   162dc:	cmp	w1, w0
   162e0:	b.ne	162b8 <yylex+0xa8>  // b.any
   162e4:	ldrsh	w0, [x12, x5, lsl #1]
   162e8:	add	x10, x10, #0x1
   162ec:	cmp	w0, #0xbb
   162f0:	b.ne	16280 <yylex+0x70>  // b.any
   162f4:	ldr	w0, [x20, #104]
   162f8:	ldr	x28, [x20, #112]
   162fc:	sub	x1, x28, x27
   16300:	str	w1, [x20, #56]
   16304:	mov	w1, #0x1fff                	// #8191
   16308:	str	x27, [x20, #8320]
   1630c:	ldrsh	w26, [x23, w0, sxtw #1]
   16310:	ldrb	w0, [x28]
   16314:	strb	w0, [x20, #48]
   16318:	strb	wzr, [x28]
   1631c:	ldr	w2, [x20, #56]
   16320:	cmp	w2, w1
   16324:	b.le	16364 <yylex+0x154>
   16328:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1632c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16330:	ldr	x25, [x1]
   16334:	ldr	x0, [x0]
   16338:	ldr	x1, [x25]
   1633c:	blr	x1
   16340:	mov	x24, x0
   16344:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16348:	ldr	x1, [x25]
   1634c:	ldr	x0, [x2]
   16350:	blr	x1
   16354:	mov	x1, x0
   16358:	mov	x0, x24
   1635c:	bl	0 <grub_printf>
   16360:	ldr	w2, [x20, #56]
   16364:	ldr	x1, [x20, #8320]
   16368:	tbnz	w2, #31, 16440 <yylex+0x230>
   1636c:	add	x0, x20, #0x88
   16370:	add	x3, x1, #0x8
   16374:	cmp	x1, x0
   16378:	orr	x0, x22, x1
   1637c:	ccmp	x3, x22, #0x0, cc  // cc = lo, ul, last
   16380:	and	x0, x0, #0x7
   16384:	ccmp	x0, #0x0, #0x0, ls  // ls = plast
   16388:	ccmp	w2, #0x9, #0x0, eq  // eq = none
   1638c:	b.ls	16564 <yylex+0x354>  // b.plast
   16390:	add	w4, w2, #0x1
   16394:	mov	x0, #0x0                   	// #0
   16398:	and	x6, x4, #0xfffffff8
   1639c:	nop
   163a0:	ldr	x3, [x1, x0]
   163a4:	str	x3, [x22, x0]
   163a8:	add	x0, x0, #0x8
   163ac:	cmp	x6, x0
   163b0:	b.ne	163a0 <yylex+0x190>  // b.any
   163b4:	tst	x4, #0x7
   163b8:	and	w0, w4, #0xfffffff8
   163bc:	b.eq	16440 <yylex+0x230>  // b.none
   163c0:	ldrb	w4, [x1, w0, sxtw]
   163c4:	add	w3, w0, #0x1
   163c8:	strb	w4, [x22, w0, sxtw]
   163cc:	cmp	w3, w2
   163d0:	b.gt	16440 <yylex+0x230>
   163d4:	ldrb	w6, [x1, w3, sxtw]
   163d8:	add	w4, w0, #0x2
   163dc:	strb	w6, [x22, w3, sxtw]
   163e0:	cmp	w4, w2
   163e4:	b.gt	16440 <yylex+0x230>
   163e8:	ldrb	w6, [x1, w4, sxtw]
   163ec:	add	w3, w0, #0x3
   163f0:	strb	w6, [x22, w4, sxtw]
   163f4:	cmp	w3, w2
   163f8:	b.gt	16440 <yylex+0x230>
   163fc:	ldrb	w6, [x1, w3, sxtw]
   16400:	add	w4, w0, #0x4
   16404:	strb	w6, [x22, w3, sxtw]
   16408:	cmp	w4, w2
   1640c:	b.gt	16440 <yylex+0x230>
   16410:	ldrb	w6, [x1, w4, sxtw]
   16414:	add	w3, w0, #0x5
   16418:	strb	w6, [x22, w4, sxtw]
   1641c:	cmp	w3, w2
   16420:	b.gt	16440 <yylex+0x230>
   16424:	ldrb	w4, [x1, w3, sxtw]
   16428:	add	w0, w0, #0x6
   1642c:	strb	w4, [x22, w3, sxtw]
   16430:	cmp	w0, w2
   16434:	b.gt	16440 <yylex+0x230>
   16438:	ldrb	w1, [x1, w0, sxtw]
   1643c:	strb	w1, [x22, w0, sxtw]
   16440:	mov	x10, x28
   16444:	mov	w25, #0x1                   	// #1
   16448:	mov	w24, #0x2                   	// #2
   1644c:	str	x28, [x20, #64]
   16450:	cmp	w26, #0x4b
   16454:	b.ls	164cc <yylex+0x2bc>  // b.plast
   16458:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1645c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16460:	ldr	x24, [x1]
   16464:	ldr	x0, [x0]
   16468:	ldr	x1, [x24]
   1646c:	blr	x1
   16470:	mov	x23, x0
   16474:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16478:	ldr	x1, [x24]
   1647c:	ldr	x0, [x2]
   16480:	blr	x1
   16484:	mov	x1, x0
   16488:	mov	x0, x23
   1648c:	bl	0 <grub_printf>
   16490:	ldrb	w0, [x20, #48]
   16494:	ldr	x10, [x20, #64]
   16498:	b	16260 <yylex+0x50>
   1649c:	ldrsh	w2, [x19, w0, sxtw #1]
   164a0:	sxtw	x4, w0
   164a4:	add	w2, w2, w3
   164a8:	sxtw	x5, w2
   164ac:	ldrsh	w2, [x6, w2, sxtw #1]
   164b0:	cmp	w2, w0
   164b4:	b.ne	162b8 <yylex+0xa8>  // b.any
   164b8:	ldrsh	w0, [x12, x5, lsl #1]
   164bc:	add	x10, x10, #0x1
   164c0:	cmp	w0, #0xbb
   164c4:	b.ne	16280 <yylex+0x70>  // b.any
   164c8:	b	162f4 <yylex+0xe4>
   164cc:	ldr	x0, [sp, #96]
   164d0:	ldrh	w0, [x0, w26, uxtw #1]
   164d4:	adr	x1, 164e0 <yylex+0x2d0>
   164d8:	add	x0, x1, w0, sxth #2
   164dc:	br	x0
   164e0:	ldr	w1, [x20, #76]
   164e4:	mov	w0, #0x1                   	// #1
   164e8:	str	w0, [x20, #72]
   164ec:	cbnz	w1, 164f4 <yylex+0x2e4>
   164f0:	str	w0, [x20, #76]
   164f4:	ldr	x0, [x20, #40]
   164f8:	cbz	x0, 16530 <yylex+0x320>
   164fc:	ldr	x1, [x20, #24]
   16500:	ldr	x0, [x0, x1, lsl #3]
   16504:	cbz	x0, 16530 <yylex+0x320>
   16508:	ldr	x10, [x0, #16]
   1650c:	ldr	x1, [x0]
   16510:	ldr	w0, [x0, #28]
   16514:	str	x1, [x20, #8]
   16518:	str	w0, [x20, #52]
   1651c:	str	x10, [x20, #64]
   16520:	str	x10, [x20, #8320]
   16524:	ldrb	w0, [x10]
   16528:	strb	w0, [x20, #48]
   1652c:	b	16244 <yylex+0x34>
   16530:	mov	x0, x20
   16534:	bl	152c8 <grub_script_yyparse+0x898>
   16538:	ldr	x0, [x20, #8]
   1653c:	mov	w1, #0x4000                	// #16384
   16540:	ldr	x21, [x20, #24]
   16544:	mov	x2, x20
   16548:	ldr	x19, [x20, #40]
   1654c:	bl	15788 <yy_create_buffer>
   16550:	ldr	x1, [x20, #24]
   16554:	str	x0, [x19, x21, lsl #3]
   16558:	ldr	x0, [x20, #40]
   1655c:	ldr	x0, [x0, x1, lsl #3]
   16560:	b	16508 <yylex+0x2f8>
   16564:	sxtw	x2, w2
   16568:	mov	x0, #0x0                   	// #0
   1656c:	nop
   16570:	ldrb	w4, [x1, x0]
   16574:	cmp	x2, x0
   16578:	strb	w4, [x22, x0]
   1657c:	add	x0, x0, #0x1
   16580:	b.ne	16570 <yylex+0x360>  // b.any
   16584:	b	16440 <yylex+0x230>
   16588:	ldr	w2, [x20, #56]
   1658c:	mov	x1, x22
   16590:	ldr	x0, [x20]
   16594:	bl	154f8 <grub_script_yyparse+0xac8>
   16598:	b	16490 <yylex+0x280>
   1659c:	mov	x0, x20
   165a0:	bl	15d58 <yypop_buffer_state>
   165a4:	ldr	x1, [x20]
   165a8:	mov	w2, #0x1                   	// #1
   165ac:	mov	w0, #0x0                   	// #0
   165b0:	ldr	x1, [x1, #40]
   165b4:	str	w2, [x1, #40]
   165b8:	ldp	x19, x20, [sp, #16]
   165bc:	ldp	x21, x22, [sp, #32]
   165c0:	ldp	x23, x24, [sp, #48]
   165c4:	ldp	x25, x26, [sp, #64]
   165c8:	ldp	x27, x28, [sp, #80]
   165cc:	ldp	x29, x30, [sp], #128
   165d0:	ret
   165d4:	ldr	x24, [x20]
   165d8:	ldr	x0, [x24, #40]
   165dc:	ldp	w1, w23, [x0, #64]
   165e0:	ldr	x0, [x0, #56]
   165e4:	add	w2, w1, #0x1
   165e8:	cmp	w2, w23
   165ec:	b.cc	1661c <yylex+0x40c>  // b.lo, b.ul, b.last
   165f0:	lsl	w23, w23, #1
   165f4:	mov	w1, #0x2                   	// #2
   165f8:	cmp	w23, w1
   165fc:	csel	w23, w23, w1, cs  // cs = hs, nlast
   16600:	mov	w1, w23
   16604:	bl	0 <grub_realloc>
   16608:	cbz	x0, 17084 <yylex+0xe74>
   1660c:	ldr	x2, [x24, #40]
   16610:	ldr	w1, [x2, #64]
   16614:	str	x0, [x2, #56]
   16618:	str	w23, [x2, #68]
   1661c:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   16620:	mov	w1, w1
   16624:	sub	x2, x1, #0x1
   16628:	ldr	x1, [x3]
   1662c:	add	x0, x0, x2
   16630:	bl	0 <grub_strcpy>
   16634:	ldr	x1, [x24, #40]
   16638:	ldr	w0, [x1, #64]
   1663c:	add	w0, w0, #0x1
   16640:	str	w0, [x1, #64]
   16644:	b	16490 <yylex+0x280>
   16648:	ldr	x24, [x20]
   1664c:	ldr	x0, [x24, #40]
   16650:	ldp	w1, w23, [x0, #64]
   16654:	ldr	x0, [x0, #56]
   16658:	add	w2, w1, #0x1
   1665c:	cmp	w2, w23
   16660:	b.cc	16690 <yylex+0x480>  // b.lo, b.ul, b.last
   16664:	lsl	w23, w23, #1
   16668:	mov	w1, #0x2                   	// #2
   1666c:	cmp	w23, w1
   16670:	csel	w23, w23, w1, cs  // cs = hs, nlast
   16674:	mov	w1, w23
   16678:	bl	0 <grub_realloc>
   1667c:	cbz	x0, 17084 <yylex+0xe74>
   16680:	ldr	x2, [x24, #40]
   16684:	ldr	w1, [x2, #64]
   16688:	str	x0, [x2, #56]
   1668c:	str	w23, [x2, #68]
   16690:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   16694:	mov	w1, w1
   16698:	sub	x2, x1, #0x1
   1669c:	ldr	x1, [x3]
   166a0:	b	1662c <yylex+0x41c>
   166a4:	ldr	w2, [x20, #56]
   166a8:	mov	x1, x22
   166ac:	ldr	x0, [x20]
   166b0:	bl	154f8 <grub_script_yyparse+0xac8>
   166b4:	ldr	w0, [x20, #84]
   166b8:	sub	w0, w0, #0x1
   166bc:	str	w0, [x20, #84]
   166c0:	tbz	w0, #31, 16700 <yylex+0x4f0>
   166c4:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   166c8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   166cc:	ldr	x21, [x1]
   166d0:	ldr	x0, [x0]
   166d4:	ldr	x1, [x21]
   166d8:	blr	x1
   166dc:	mov	x19, x0
   166e0:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   166e4:	ldr	x1, [x21]
   166e8:	ldr	x0, [x2]
   166ec:	blr	x1
   166f0:	mov	x1, x0
   166f4:	mov	x0, x19
   166f8:	bl	0 <grub_printf>
   166fc:	ldr	w0, [x20, #84]
   16700:	ldr	x2, [x20, #96]
   16704:	ldr	x1, [x20]
   16708:	ldr	w0, [x2, w0, sxtw #2]
   1670c:	ldr	x1, [x1, #40]
   16710:	lsl	w0, w0, #1
   16714:	add	w2, w0, #0x1
   16718:	str	w2, [x20, #76]
   1671c:	sub	w0, w0, #0x2
   16720:	cmp	w0, #0x1
   16724:	b.ls	17078 <yylex+0xe68>  // b.plast
   16728:	mov	w2, #0x3                   	// #3
   1672c:	mov	w0, #0x121                 	// #289
   16730:	str	w2, [x1, #72]
   16734:	b	165b8 <yylex+0x3a8>
   16738:	ldrb	w0, [x20, #48]
   1673c:	b	16260 <yylex+0x50>
   16740:	ldr	w2, [x20, #56]
   16744:	mov	x1, x20
   16748:	sub	w0, w2, #0x1
   1674c:	sub	w2, w2, #0x2
   16750:	add	x0, x20, w0, sxtw
   16754:	strb	wzr, [x0, #128]
   16758:	ldr	x0, [x1], #129
   1675c:	b	166b0 <yylex+0x4a0>
   16760:	ldr	x0, [x20]
   16764:	mov	x1, x22
   16768:	bl	13c90 <grub_script_yyerror>
   1676c:	mov	w0, #0x102                 	// #258
   16770:	b	165b8 <yylex+0x3a8>
   16774:	ldr	x0, [x20]
   16778:	mov	x1, x22
   1677c:	bl	13750 <grub_script_lexer_record>
   16780:	ldr	x0, [x20, #40]
   16784:	cbz	x0, 16790 <yylex+0x580>
   16788:	ldr	x1, [x20, #24]
   1678c:	ldr	x0, [x0, x1, lsl #3]
   16790:	mov	x1, x20
   16794:	bl	15b80 <yypush_buffer_state>
   16798:	mov	x0, x22
   1679c:	bl	0 <grub_strlen>
   167a0:	mov	w1, w0
   167a4:	mov	x2, x20
   167a8:	mov	x0, x22
   167ac:	bl	15fb8 <yy_scan_bytes>
   167b0:	cbz	x0, 17280 <yylex+0x1070>
   167b4:	ldr	x2, [x20]
   167b8:	mov	w23, #0x1                   	// #1
   167bc:	mov	x1, x20
   167c0:	mov	w0, w23
   167c4:	ldr	x2, [x2, #40]
   167c8:	str	w23, [x2, #44]
   167cc:	bl	15408 <grub_script_yyparse+0x9d8>
   167d0:	ldr	x0, [x20]
   167d4:	ldr	x0, [x0, #40]
   167d8:	str	w23, [x0, #76]
   167dc:	b	16490 <yylex+0x280>
   167e0:	ldr	x0, [x20]
   167e4:	mov	x1, x22
   167e8:	bl	13750 <grub_script_lexer_record>
   167ec:	mov	w0, #0x120                 	// #288
   167f0:	b	165b8 <yylex+0x3a8>
   167f4:	ldr	x4, [x20, #24]
   167f8:	add	x10, x10, #0x1
   167fc:	ldr	x3, [x20, #40]
   16800:	ldrsw	x1, [x20, #52]
   16804:	ldr	x0, [x20]
   16808:	add	x2, x1, #0x1
   1680c:	ldr	x1, [x3, x4, lsl #3]
   16810:	ldr	x1, [x1, #8]
   16814:	add	x1, x1, x2
   16818:	cmp	x10, x1
   1681c:	b.ne	16778 <yylex+0x568>  // b.any
   16820:	ldr	x23, [x0, #40]
   16824:	ldr	x0, [x23, #80]
   16828:	bl	0 <grub_free>
   1682c:	mov	x0, x22
   16830:	bl	0 <grub_strdup>
   16834:	str	x0, [x23, #80]
   16838:	cbnz	x0, 16490 <yylex+0x280>
   1683c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16840:	ldr	x0, [x20]
   16844:	ldr	x1, [x1]
   16848:	bl	13c90 <grub_script_yyerror>
   1684c:	mov	w0, #0x102                 	// #258
   16850:	b	165b8 <yylex+0x3a8>
   16854:	ldr	x0, [x20]
   16858:	b	16820 <yylex+0x610>
   1685c:	ldr	x0, [x20]
   16860:	mov	x1, x22
   16864:	bl	13750 <grub_script_lexer_record>
   16868:	mov	w0, #0x11f                 	// #287
   1686c:	b	165b8 <yylex+0x3a8>
   16870:	ldr	x0, [x20]
   16874:	mov	x1, x22
   16878:	bl	13750 <grub_script_lexer_record>
   1687c:	mov	w0, #0x11e                 	// #286
   16880:	b	165b8 <yylex+0x3a8>
   16884:	ldr	x0, [x20]
   16888:	mov	x1, x22
   1688c:	bl	13750 <grub_script_lexer_record>
   16890:	mov	w0, #0x11d                 	// #285
   16894:	b	165b8 <yylex+0x3a8>
   16898:	ldr	x0, [x20]
   1689c:	mov	x1, x22
   168a0:	bl	13750 <grub_script_lexer_record>
   168a4:	mov	w0, #0x11c                 	// #284
   168a8:	b	165b8 <yylex+0x3a8>
   168ac:	ldr	x0, [x20]
   168b0:	mov	x1, x22
   168b4:	bl	13750 <grub_script_lexer_record>
   168b8:	mov	w0, #0x11b                 	// #283
   168bc:	b	165b8 <yylex+0x3a8>
   168c0:	ldr	x0, [x20]
   168c4:	mov	x1, x22
   168c8:	bl	13750 <grub_script_lexer_record>
   168cc:	mov	w0, #0x11a                 	// #282
   168d0:	b	165b8 <yylex+0x3a8>
   168d4:	ldr	x0, [x20]
   168d8:	mov	x1, x22
   168dc:	bl	13750 <grub_script_lexer_record>
   168e0:	mov	w0, #0x119                 	// #281
   168e4:	b	165b8 <yylex+0x3a8>
   168e8:	ldr	x0, [x20]
   168ec:	mov	x1, x22
   168f0:	bl	13750 <grub_script_lexer_record>
   168f4:	mov	w0, #0x118                 	// #280
   168f8:	b	165b8 <yylex+0x3a8>
   168fc:	mov	w0, #0x102                 	// #258
   16900:	b	165b8 <yylex+0x3a8>
   16904:	mov	x1, x20
   16908:	mov	w0, #0x5                   	// #5
   1690c:	bl	15408 <grub_script_yyparse+0x9d8>
   16910:	ldr	x1, [x20]
   16914:	mov	w2, #0x4                   	// #4
   16918:	mov	w0, #0x121                 	// #289
   1691c:	ldr	x1, [x1, #40]
   16920:	str	w2, [x1, #72]
   16924:	b	165b8 <yylex+0x3a8>
   16928:	ldr	w1, [x20, #84]
   1692c:	sub	w1, w1, #0x1
   16930:	str	w1, [x20, #84]
   16934:	tbz	w1, #31, 16974 <yylex+0x764>
   16938:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1693c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16940:	ldr	x21, [x1]
   16944:	ldr	x0, [x0]
   16948:	ldr	x1, [x21]
   1694c:	blr	x1
   16950:	mov	x19, x0
   16954:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16958:	ldr	x1, [x21]
   1695c:	ldr	x0, [x2]
   16960:	blr	x1
   16964:	mov	x1, x0
   16968:	mov	x0, x19
   1696c:	bl	0 <grub_printf>
   16970:	ldr	w1, [x20, #84]
   16974:	ldr	x4, [x20, #96]
   16978:	mov	w3, #0x2                   	// #2
   1697c:	ldr	x2, [x20]
   16980:	mov	w0, #0x121                 	// #289
   16984:	ldr	w1, [x4, w1, sxtw #2]
   16988:	ldr	x2, [x2, #40]
   1698c:	lsl	w1, w1, #1
   16990:	add	w1, w1, #0x1
   16994:	str	w1, [x20, #76]
   16998:	str	w3, [x2, #72]
   1699c:	b	165b8 <yylex+0x3a8>
   169a0:	ldr	x24, [x20]
   169a4:	ldr	x0, [x24, #40]
   169a8:	ldp	w1, w23, [x0, #64]
   169ac:	ldr	x0, [x0, #56]
   169b0:	add	w2, w1, #0x1
   169b4:	cmp	w2, w23
   169b8:	b.cc	169e8 <yylex+0x7d8>  // b.lo, b.ul, b.last
   169bc:	lsl	w23, w23, #1
   169c0:	mov	w1, #0x2                   	// #2
   169c4:	cmp	w23, w1
   169c8:	csel	w23, w23, w1, cs  // cs = hs, nlast
   169cc:	mov	w1, w23
   169d0:	bl	0 <grub_realloc>
   169d4:	cbz	x0, 17084 <yylex+0xe74>
   169d8:	ldr	x2, [x24, #40]
   169dc:	ldr	w1, [x2, #64]
   169e0:	str	x0, [x2, #56]
   169e4:	str	w23, [x2, #68]
   169e8:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   169ec:	mov	w1, w1
   169f0:	sub	x2, x1, #0x1
   169f4:	ldr	x1, [x3]
   169f8:	b	1662c <yylex+0x41c>
   169fc:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16a00:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16a04:	ldr	x24, [x1]
   16a08:	ldr	x0, [x0]
   16a0c:	ldr	x1, [x24]
   16a10:	blr	x1
   16a14:	mov	x23, x0
   16a18:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16a1c:	ldr	x1, [x24]
   16a20:	ldr	x0, [x2]
   16a24:	blr	x1
   16a28:	mov	x1, x0
   16a2c:	mov	x0, x23
   16a30:	bl	0 <grub_printf>
   16a34:	b	16490 <yylex+0x280>
   16a38:	ldrb	w0, [x20, #48]
   16a3c:	ldr	x10, [x20, #8320]
   16a40:	strb	w0, [x28]
   16a44:	ldr	x6, [x20, #24]
   16a48:	sub	x10, x28, x10
   16a4c:	ldr	x4, [x20, #40]
   16a50:	sub	w10, w10, #0x1
   16a54:	ldr	x2, [x4, x6, lsl #3]
   16a58:	ldr	w0, [x2, #56]
   16a5c:	cbz	w0, 1729c <yylex+0x108c>
   16a60:	ldr	w0, [x20, #52]
   16a64:	ldr	x26, [x2, #8]
   16a68:	sxtw	x1, w0
   16a6c:	ldr	x0, [x20, #64]
   16a70:	add	x7, x26, x1
   16a74:	ldr	x3, [x20, #8320]
   16a78:	cmp	x0, x7
   16a7c:	mov	x5, x3
   16a80:	b.ls	17430 <yylex+0x1220>  // b.plast
   16a84:	add	x1, x1, #0x1
   16a88:	mov	x10, x3
   16a8c:	add	x1, x26, x1
   16a90:	cmp	x0, x1
   16a94:	b.ls	16b04 <yylex+0x8f4>  // b.plast
   16a98:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16a9c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16aa0:	str	x3, [sp, #112]
   16aa4:	ldr	x1, [x1]
   16aa8:	ldr	x0, [x0]
   16aac:	ldr	x2, [x1]
   16ab0:	blr	x2
   16ab4:	mov	x3, x0
   16ab8:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16abc:	add	x0, x0, #0x0
   16ac0:	str	x3, [sp, #104]
   16ac4:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16ac8:	ldr	x1, [x0]
   16acc:	ldr	x0, [x2]
   16ad0:	ldr	x1, [x1]
   16ad4:	blr	x1
   16ad8:	mov	x1, x0
   16adc:	ldr	x3, [sp, #104]
   16ae0:	mov	x0, x3
   16ae4:	bl	0 <grub_printf>
   16ae8:	ldr	x6, [x20, #24]
   16aec:	ldr	x4, [x20, #40]
   16af0:	ldr	x3, [x20, #8320]
   16af4:	ldr	x2, [x4, x6, lsl #3]
   16af8:	mov	x10, x3
   16afc:	ldr	x0, [x20, #64]
   16b00:	ldr	x5, [sp, #112]
   16b04:	sub	x0, x0, x3
   16b08:	ldr	w1, [x2, #52]
   16b0c:	cbnz	w1, 17094 <yylex+0xe84>
   16b10:	cmp	x0, #0x1
   16b14:	b.ne	1732c <yylex+0x111c>  // b.any
   16b18:	ldr	x0, [x20]
   16b1c:	ldr	x1, [x0, #40]
   16b20:	ldr	w1, [x1, #76]
   16b24:	str	wzr, [x20, #80]
   16b28:	cbnz	w1, 16b3c <yylex+0x92c>
   16b2c:	mov	x1, #0x0                   	// #0
   16b30:	bl	13828 <grub_script_lexer_yywrap>
   16b34:	cbz	w0, 17654 <yylex+0x1444>
   16b38:	ldr	x10, [x20, #8320]
   16b3c:	str	x10, [x20, #64]
   16b40:	ldr	w0, [x20, #76]
   16b44:	sub	w0, w0, #0x1
   16b48:	add	w0, w0, w0, lsr #31
   16b4c:	asr	w26, w0, #1
   16b50:	add	w26, w26, #0x46
   16b54:	b	16450 <yylex+0x240>
   16b58:	mov	x1, x20
   16b5c:	mov	w0, #0x5                   	// #5
   16b60:	bl	15408 <grub_script_yyparse+0x9d8>
   16b64:	ldr	x1, [x20]
   16b68:	mov	w2, #0x1                   	// #1
   16b6c:	mov	w0, #0x121                 	// #289
   16b70:	ldr	x1, [x1, #40]
   16b74:	str	w2, [x1, #72]
   16b78:	b	165b8 <yylex+0x3a8>
   16b7c:	ldr	w1, [x20, #84]
   16b80:	sub	w1, w1, #0x1
   16b84:	str	w1, [x20, #84]
   16b88:	tbz	w1, #31, 16bc8 <yylex+0x9b8>
   16b8c:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16b90:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16b94:	ldr	x21, [x1]
   16b98:	ldr	x0, [x0]
   16b9c:	ldr	x1, [x21]
   16ba0:	blr	x1
   16ba4:	mov	x19, x0
   16ba8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16bac:	ldr	x1, [x21]
   16bb0:	ldr	x0, [x2]
   16bb4:	blr	x1
   16bb8:	mov	x1, x0
   16bbc:	mov	x0, x19
   16bc0:	bl	0 <grub_printf>
   16bc4:	ldr	w1, [x20, #84]
   16bc8:	mov	w3, #0x5                   	// #5
   16bcc:	ldr	x4, [x20, #96]
   16bd0:	b	1697c <yylex+0x76c>
   16bd4:	ldr	x0, [x20]
   16bd8:	mov	x1, x22
   16bdc:	bl	13750 <grub_script_lexer_record>
   16be0:	mov	w0, #0x107                 	// #263
   16be4:	b	165b8 <yylex+0x3a8>
   16be8:	mov	x1, x20
   16bec:	mov	w0, #0x2                   	// #2
   16bf0:	b	16b60 <yylex+0x950>
   16bf4:	ldr	x24, [x20]
   16bf8:	ldr	x0, [x24, #40]
   16bfc:	ldp	w1, w23, [x0, #64]
   16c00:	ldr	x0, [x0, #56]
   16c04:	add	w2, w1, #0x2
   16c08:	cmp	w2, w23
   16c0c:	b.cc	16c3c <yylex+0xa2c>  // b.lo, b.ul, b.last
   16c10:	lsl	w23, w23, #1
   16c14:	mov	w1, #0x4                   	// #4
   16c18:	cmp	w23, w1
   16c1c:	csel	w23, w23, w1, cs  // cs = hs, nlast
   16c20:	mov	w1, w23
   16c24:	bl	0 <grub_realloc>
   16c28:	cbz	x0, 17084 <yylex+0xe74>
   16c2c:	ldr	x2, [x24, #40]
   16c30:	ldr	w1, [x2, #64]
   16c34:	str	x0, [x2, #56]
   16c38:	str	w23, [x2, #68]
   16c3c:	adrp	x3, 0 <grub_normal_free_menu-0x498>
   16c40:	mov	w1, w1
   16c44:	sub	x2, x1, #0x1
   16c48:	ldr	x1, [x3]
   16c4c:	add	x0, x0, x2
   16c50:	bl	0 <grub_strcpy>
   16c54:	ldr	x1, [x24, #40]
   16c58:	ldr	w0, [x1, #64]
   16c5c:	add	w0, w0, #0x2
   16c60:	str	w0, [x1, #64]
   16c64:	b	16490 <yylex+0x280>
   16c68:	ldr	w1, [x20, #84]
   16c6c:	sub	w1, w1, #0x1
   16c70:	str	w1, [x20, #84]
   16c74:	tbz	w1, #31, 16cb4 <yylex+0xaa4>
   16c78:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16c7c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16c80:	ldr	x21, [x1]
   16c84:	ldr	x0, [x0]
   16c88:	ldr	x1, [x21]
   16c8c:	blr	x1
   16c90:	mov	x19, x0
   16c94:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16c98:	ldr	x1, [x21]
   16c9c:	ldr	x0, [x2]
   16ca0:	blr	x1
   16ca4:	mov	x1, x0
   16ca8:	mov	x0, x19
   16cac:	bl	0 <grub_printf>
   16cb0:	ldr	w1, [x20, #84]
   16cb4:	mov	w3, #0x4                   	// #4
   16cb8:	ldr	x4, [x20, #96]
   16cbc:	b	1697c <yylex+0x76c>
   16cc0:	mov	x1, x20
   16cc4:	mov	w0, #0x4                   	// #4
   16cc8:	b	16b60 <yylex+0x950>
   16ccc:	ldr	x0, [x20]
   16cd0:	mov	x1, x22
   16cd4:	bl	13750 <grub_script_lexer_record>
   16cd8:	mov	w0, #0x10e                 	// #270
   16cdc:	b	165b8 <yylex+0x3a8>
   16ce0:	ldr	x0, [x20]
   16ce4:	mov	x1, x22
   16ce8:	bl	13750 <grub_script_lexer_record>
   16cec:	mov	w0, #0x10d                 	// #269
   16cf0:	b	165b8 <yylex+0x3a8>
   16cf4:	ldr	x0, [x20]
   16cf8:	mov	x1, x22
   16cfc:	bl	13750 <grub_script_lexer_record>
   16d00:	mov	w0, #0x10b                 	// #267
   16d04:	b	165b8 <yylex+0x3a8>
   16d08:	ldr	x0, [x20]
   16d0c:	mov	x1, x22
   16d10:	bl	13750 <grub_script_lexer_record>
   16d14:	mov	w0, #0x10a                 	// #266
   16d18:	b	165b8 <yylex+0x3a8>
   16d1c:	ldr	x0, [x20]
   16d20:	mov	x1, x22
   16d24:	bl	13750 <grub_script_lexer_record>
   16d28:	mov	w0, #0x110                 	// #272
   16d2c:	b	165b8 <yylex+0x3a8>
   16d30:	ldr	x0, [x20]
   16d34:	mov	x1, x22
   16d38:	bl	13750 <grub_script_lexer_record>
   16d3c:	mov	w0, #0x10f                 	// #271
   16d40:	b	165b8 <yylex+0x3a8>
   16d44:	ldr	x0, [x20]
   16d48:	mov	x1, x22
   16d4c:	bl	13750 <grub_script_lexer_record>
   16d50:	mov	w0, #0x109                 	// #265
   16d54:	b	165b8 <yylex+0x3a8>
   16d58:	ldr	x0, [x20]
   16d5c:	mov	x1, x22
   16d60:	bl	13750 <grub_script_lexer_record>
   16d64:	mov	w0, #0x108                 	// #264
   16d68:	b	165b8 <yylex+0x3a8>
   16d6c:	mov	x1, x20
   16d70:	mov	w0, #0x3                   	// #3
   16d74:	bl	15408 <grub_script_yyparse+0x9d8>
   16d78:	ldr	x1, [x20]
   16d7c:	mov	w2, #0x2                   	// #2
   16d80:	mov	w0, #0x121                 	// #289
   16d84:	ldr	x1, [x1, #40]
   16d88:	str	w2, [x1, #72]
   16d8c:	b	165b8 <yylex+0x3a8>
   16d90:	ldr	x0, [x20]
   16d94:	mov	x1, x22
   16d98:	bl	13750 <grub_script_lexer_record>
   16d9c:	mov	w0, #0x106                 	// #262
   16da0:	b	165b8 <yylex+0x3a8>
   16da4:	ldr	x0, [x20]
   16da8:	mov	x1, x22
   16dac:	bl	13750 <grub_script_lexer_record>
   16db0:	mov	w0, #0x104                 	// #260
   16db4:	b	165b8 <yylex+0x3a8>
   16db8:	ldr	x0, [x20]
   16dbc:	mov	x1, x22
   16dc0:	bl	13750 <grub_script_lexer_record>
   16dc4:	mov	w0, #0x105                 	// #261
   16dc8:	b	165b8 <yylex+0x3a8>
   16dcc:	ldr	x0, [x20]
   16dd0:	mov	x1, x22
   16dd4:	bl	13750 <grub_script_lexer_record>
   16dd8:	mov	w0, #0x103                 	// #259
   16ddc:	b	165b8 <yylex+0x3a8>
   16de0:	mov	x23, x28
   16de4:	ldrb	w1, [x20, #48]
   16de8:	mov	w0, #0x1fff                	// #8191
   16dec:	strb	w1, [x23], #-1
   16df0:	str	x27, [x20, #8320]
   16df4:	sub	x9, x23, x27
   16df8:	str	w9, [x20, #56]
   16dfc:	str	x23, [x20, #64]
   16e00:	ldurb	w1, [x28, #-1]
   16e04:	strb	w1, [x20, #48]
   16e08:	sturb	wzr, [x28, #-1]
   16e0c:	ldr	w1, [x20, #56]
   16e10:	cmp	w1, w0
   16e14:	b.le	16e54 <yylex+0xc44>
   16e18:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16e1c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16e20:	ldr	x25, [x1]
   16e24:	ldr	x0, [x0]
   16e28:	ldr	x1, [x25]
   16e2c:	blr	x1
   16e30:	mov	x24, x0
   16e34:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16e38:	ldr	x1, [x25]
   16e3c:	ldr	x0, [x2]
   16e40:	blr	x1
   16e44:	mov	x1, x0
   16e48:	mov	x0, x24
   16e4c:	bl	0 <grub_printf>
   16e50:	ldr	w1, [x20, #56]
   16e54:	ldr	x2, [x20, #8320]
   16e58:	tbnz	w1, #31, 16f2c <yylex+0xd1c>
   16e5c:	add	x0, x20, #0x88
   16e60:	add	x3, x2, #0x8
   16e64:	cmp	x2, x0
   16e68:	orr	x0, x22, x2
   16e6c:	ccmp	x3, x22, #0x0, cc  // cc = lo, ul, last
   16e70:	and	x0, x0, #0x7
   16e74:	ccmp	x0, #0x0, #0x0, ls  // ls = plast
   16e78:	ccmp	w1, #0x9, #0x0, eq  // eq = none
   16e7c:	b.ls	17558 <yylex+0x1348>  // b.plast
   16e80:	add	w0, w1, #0x1
   16e84:	mov	x3, #0x0                   	// #0
   16e88:	and	x4, x0, #0xfffffff8
   16e8c:	ldr	x5, [x2, x3]
   16e90:	str	x5, [x22, x3]
   16e94:	add	x3, x3, #0x8
   16e98:	cmp	x3, x4
   16e9c:	b.ne	16e8c <yylex+0xc7c>  // b.any
   16ea0:	tst	x0, #0x7
   16ea4:	and	w0, w0, #0xfffffff8
   16ea8:	b.eq	16f2c <yylex+0xd1c>  // b.none
   16eac:	ldrb	w4, [x2, w0, sxtw]
   16eb0:	add	w3, w0, #0x1
   16eb4:	strb	w4, [x22, w0, sxtw]
   16eb8:	cmp	w3, w1
   16ebc:	b.gt	16f2c <yylex+0xd1c>
   16ec0:	ldrb	w5, [x2, w3, sxtw]
   16ec4:	add	w4, w0, #0x2
   16ec8:	strb	w5, [x22, w3, sxtw]
   16ecc:	cmp	w4, w1
   16ed0:	b.gt	16f2c <yylex+0xd1c>
   16ed4:	ldrb	w5, [x2, w4, sxtw]
   16ed8:	add	w3, w0, #0x3
   16edc:	strb	w5, [x22, w4, sxtw]
   16ee0:	cmp	w3, w1
   16ee4:	b.gt	16f2c <yylex+0xd1c>
   16ee8:	ldrb	w5, [x2, w3, sxtw]
   16eec:	add	w4, w0, #0x4
   16ef0:	strb	w5, [x22, w3, sxtw]
   16ef4:	cmp	w4, w1
   16ef8:	b.gt	16f2c <yylex+0xd1c>
   16efc:	ldrb	w5, [x2, w4, sxtw]
   16f00:	add	w3, w0, #0x5
   16f04:	strb	w5, [x22, w4, sxtw]
   16f08:	cmp	w3, w1
   16f0c:	b.gt	16f2c <yylex+0xd1c>
   16f10:	ldrb	w4, [x2, w3, sxtw]
   16f14:	add	w0, w0, #0x6
   16f18:	strb	w4, [x22, w3, sxtw]
   16f1c:	cmp	w0, w1
   16f20:	b.gt	16f2c <yylex+0xd1c>
   16f24:	ldrb	w1, [x2, w0, sxtw]
   16f28:	strb	w1, [x22, w0, sxtw]
   16f2c:	ldr	x0, [x20]
   16f30:	str	x23, [x20, #64]
   16f34:	mov	x1, x22
   16f38:	bl	13750 <grub_script_lexer_record>
   16f3c:	b	16490 <yylex+0x280>
   16f40:	ldr	x0, [x20]
   16f44:	mov	x1, x22
   16f48:	bl	13750 <grub_script_lexer_record>
   16f4c:	b	16490 <yylex+0x280>
   16f50:	ldrb	w0, [x20, #48]
   16f54:	strb	w0, [x28]
   16f58:	ldr	w0, [x20, #104]
   16f5c:	ldr	x28, [x20, #112]
   16f60:	b	162fc <yylex+0xec>
   16f64:	ldr	w1, [x20, #84]
   16f68:	sub	w1, w1, #0x1
   16f6c:	str	w1, [x20, #84]
   16f70:	tbz	w1, #31, 16fb0 <yylex+0xda0>
   16f74:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   16f78:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   16f7c:	ldr	x21, [x1]
   16f80:	ldr	x0, [x0]
   16f84:	ldr	x1, [x21]
   16f88:	blr	x1
   16f8c:	mov	x19, x0
   16f90:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   16f94:	ldr	x1, [x21]
   16f98:	ldr	x0, [x2]
   16f9c:	blr	x1
   16fa0:	mov	x1, x0
   16fa4:	mov	x0, x19
   16fa8:	bl	0 <grub_printf>
   16fac:	ldr	w1, [x20, #84]
   16fb0:	ldr	x2, [x20, #96]
   16fb4:	mov	x0, x20
   16fb8:	ldr	w1, [x2, w1, sxtw #2]
   16fbc:	lsl	w1, w1, #1
   16fc0:	add	w1, w1, #0x1
   16fc4:	str	w1, [x20, #76]
   16fc8:	bl	15d58 <yypop_buffer_state>
   16fcc:	ldr	x1, [x20]
   16fd0:	mov	w3, #0x1                   	// #1
   16fd4:	mov	x2, #0x1                   	// #1
   16fd8:	mov	w0, #0x121                 	// #289
   16fdc:	ldr	x1, [x1, #40]
   16fe0:	str	w3, [x1, #48]
   16fe4:	str	x2, [x1, #72]
   16fe8:	b	165b8 <yylex+0x3a8>
   16fec:	ldr	x0, [x20]
   16ff0:	mov	x1, x22
   16ff4:	bl	13750 <grub_script_lexer_record>
   16ff8:	mov	w0, #0x117                 	// #279
   16ffc:	b	165b8 <yylex+0x3a8>
   17000:	ldr	x0, [x20]
   17004:	mov	x1, x22
   17008:	bl	13750 <grub_script_lexer_record>
   1700c:	mov	w0, #0x116                 	// #278
   17010:	b	165b8 <yylex+0x3a8>
   17014:	ldr	x0, [x20]
   17018:	mov	x1, x22
   1701c:	bl	13750 <grub_script_lexer_record>
   17020:	mov	w0, #0x115                 	// #277
   17024:	b	165b8 <yylex+0x3a8>
   17028:	ldr	x0, [x20]
   1702c:	mov	x1, x22
   17030:	bl	13750 <grub_script_lexer_record>
   17034:	mov	w0, #0x114                 	// #276
   17038:	b	165b8 <yylex+0x3a8>
   1703c:	ldr	x0, [x20]
   17040:	mov	x1, x22
   17044:	bl	13750 <grub_script_lexer_record>
   17048:	mov	w0, #0x113                 	// #275
   1704c:	b	165b8 <yylex+0x3a8>
   17050:	ldr	x0, [x20]
   17054:	mov	x1, x22
   17058:	bl	13750 <grub_script_lexer_record>
   1705c:	mov	w0, #0x112                 	// #274
   17060:	b	165b8 <yylex+0x3a8>
   17064:	ldr	x0, [x20]
   17068:	mov	x1, x22
   1706c:	bl	13750 <grub_script_lexer_record>
   17070:	mov	w0, #0x111                 	// #273
   17074:	b	165b8 <yylex+0x3a8>
   17078:	mov	w0, #0x121                 	// #289
   1707c:	str	wzr, [x1, #72]
   17080:	b	165b8 <yylex+0x3a8>
   17084:	mov	x0, x24
   17088:	mov	x1, #0x0                   	// #0
   1708c:	bl	13c90 <grub_script_yyerror>
   17090:	b	16490 <yylex+0x280>
   17094:	sub	w3, w0, #0x1
   17098:	cmp	w3, #0x0
   1709c:	b.le	17180 <yylex+0xf70>
   170a0:	orr	x2, x26, x5
   170a4:	add	x1, x26, #0x7
   170a8:	sub	x1, x1, x5
   170ac:	sub	w0, w0, #0x2
   170b0:	tst	x2, #0x7
   170b4:	ccmp	x1, #0xe, #0x0, eq  // eq = none
   170b8:	ccmp	w0, #0x9, #0x0, hi  // hi = pmore
   170bc:	b.ls	17414 <yylex+0x1204>  // b.plast
   170c0:	and	x1, x3, #0xfffffff8
   170c4:	mov	x0, #0x0                   	// #0
   170c8:	ldr	x2, [x5, x0]
   170cc:	str	x2, [x26, x0]
   170d0:	add	x0, x0, #0x8
   170d4:	cmp	x1, x0
   170d8:	b.ne	170c8 <yylex+0xeb8>  // b.any
   170dc:	and	x0, x3, #0xfffffff8
   170e0:	tst	x3, #0x7
   170e4:	add	x2, x5, x0
   170e8:	and	w1, w3, #0xfffffff8
   170ec:	add	x0, x26, x0
   170f0:	b.eq	17174 <yylex+0xf64>  // b.none
   170f4:	ldrb	w6, [x5, w1, uxtw]
   170f8:	add	w4, w1, #0x1
   170fc:	strb	w6, [x26, w1, uxtw]
   17100:	cmp	w3, w4
   17104:	b.le	17174 <yylex+0xf64>
   17108:	ldrb	w6, [x2, #1]
   1710c:	add	w4, w1, #0x2
   17110:	strb	w6, [x0, #1]
   17114:	cmp	w3, w4
   17118:	b.le	17174 <yylex+0xf64>
   1711c:	ldrb	w6, [x2, #2]
   17120:	add	w4, w1, #0x3
   17124:	strb	w6, [x0, #2]
   17128:	cmp	w3, w4
   1712c:	b.le	17174 <yylex+0xf64>
   17130:	ldrb	w6, [x2, #3]
   17134:	add	w4, w1, #0x4
   17138:	strb	w6, [x0, #3]
   1713c:	cmp	w3, w4
   17140:	b.le	17174 <yylex+0xf64>
   17144:	ldrb	w6, [x2, #4]
   17148:	add	w4, w1, #0x5
   1714c:	strb	w6, [x0, #4]
   17150:	cmp	w3, w4
   17154:	b.le	17174 <yylex+0xf64>
   17158:	ldrb	w4, [x2, #5]
   1715c:	add	w1, w1, #0x6
   17160:	strb	w4, [x0, #5]
   17164:	cmp	w3, w1
   17168:	b.le	17174 <yylex+0xf64>
   1716c:	ldrb	w1, [x2, #6]
   17170:	strb	w1, [x0, #6]
   17174:	ldr	x1, [x20, #24]
   17178:	ldr	x0, [x20, #40]
   1717c:	ldr	x2, [x0, x1, lsl #3]
   17180:	ldr	w0, [x2, #56]
   17184:	cmp	w0, #0x2
   17188:	b.eq	172b4 <yylex+0x10a4>  // b.none
   1718c:	ldr	w4, [x2, #24]
   17190:	sub	w0, w4, w3
   17194:	cmp	w0, #0x1
   17198:	b.gt	172b4 <yylex+0x10a4>
   1719c:	ldr	x26, [x20, #64]
   171a0:	b	17208 <yylex+0xff8>
   171a4:	cmp	w4, #0x0
   171a8:	add	w1, w4, #0x7
   171ac:	csel	w1, w1, w4, lt  // lt = tstop
   171b0:	lsl	w6, w4, #1
   171b4:	str	x2, [sp, #104]
   171b8:	add	w1, w4, w1, asr #3
   171bc:	str	w3, [sp, #112]
   171c0:	csel	w1, w1, w6, le
   171c4:	str	w1, [x2, #24]
   171c8:	add	w1, w1, #0x2
   171cc:	sxtw	x1, w1
   171d0:	bl	0 <grub_realloc>
   171d4:	ldr	x2, [sp, #104]
   171d8:	ldr	w3, [sp, #112]
   171dc:	str	x0, [x2, #8]
   171e0:	cbz	x0, 1721c <yylex+0x100c>
   171e4:	add	x26, x0, w26, sxtw
   171e8:	ldr	x1, [x20, #24]
   171ec:	ldr	x0, [x20, #40]
   171f0:	ldr	x2, [x0, x1, lsl #3]
   171f4:	ldr	w4, [x2, #24]
   171f8:	str	x26, [x20, #64]
   171fc:	sub	w0, w4, w3
   17200:	cmp	w0, #0x1
   17204:	b.gt	172b4 <yylex+0x10a4>
   17208:	ldr	w1, [x2, #32]
   1720c:	ldr	x0, [x2, #8]
   17210:	sub	x26, x26, x0
   17214:	cbnz	w1, 171a4 <yylex+0xf94>
   17218:	str	xzr, [x2, #8]
   1721c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   17220:	str	x2, [sp, #112]
   17224:	str	w3, [sp, #124]
   17228:	ldr	x1, [x0]
   1722c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   17230:	ldr	x0, [x0]
   17234:	ldr	x4, [x1]
   17238:	blr	x4
   1723c:	mov	x4, x0
   17240:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   17244:	add	x1, x1, #0x0
   17248:	str	x4, [sp, #104]
   1724c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   17250:	ldr	x1, [x1]
   17254:	ldr	x0, [x0]
   17258:	ldr	x1, [x1]
   1725c:	blr	x1
   17260:	mov	x1, x0
   17264:	ldr	x4, [sp, #104]
   17268:	mov	x0, x4
   1726c:	bl	0 <grub_printf>
   17270:	ldr	x2, [sp, #112]
   17274:	ldr	w3, [sp, #124]
   17278:	ldr	x0, [x2, #8]
   1727c:	b	171e4 <yylex+0xfd4>
   17280:	ldr	x0, [x20]
   17284:	mov	x1, #0x0                   	// #0
   17288:	bl	13c90 <grub_script_yyerror>
   1728c:	mov	x0, x20
   17290:	bl	15d58 <yypop_buffer_state>
   17294:	mov	w0, #0x121                 	// #289
   17298:	b	165b8 <yylex+0x3a8>
   1729c:	ldr	w0, [x2, #28]
   172a0:	str	w0, [x20, #52]
   172a4:	ldr	x1, [x20, #8]
   172a8:	str	x1, [x2]
   172ac:	str	w25, [x2, #56]
   172b0:	b	16a64 <yylex+0x854>
   172b4:	str	wzr, [x20, #52]
   172b8:	str	wzr, [x2, #28]
   172bc:	cbz	w3, 175c0 <yylex+0x13b0>
   172c0:	mov	w0, #0x2                   	// #2
   172c4:	str	w24, [x2, #56]
   172c8:	str	w0, [sp, #104]
   172cc:	ldr	w26, [x20, #52]
   172d0:	ldr	w0, [x2, #24]
   172d4:	add	w1, w3, w26
   172d8:	cmp	w1, w0
   172dc:	ldr	x0, [x2, #8]
   172e0:	b.gt	17578 <yylex+0x1368>
   172e4:	str	w1, [x20, #52]
   172e8:	ldr	w2, [sp, #104]
   172ec:	strb	wzr, [x0, w1, sxtw]
   172f0:	cmp	w2, #0x1
   172f4:	ldr	x2, [x20, #24]
   172f8:	ldr	x0, [x20, #40]
   172fc:	ldrsw	x1, [x20, #52]
   17300:	ldr	x0, [x0, x2, lsl #3]
   17304:	ldr	x0, [x0, #8]
   17308:	add	x0, x0, x1
   1730c:	strb	wzr, [x0, #1]
   17310:	ldr	x6, [x20, #24]
   17314:	ldr	x4, [x20, #40]
   17318:	ldr	x0, [x4, x6, lsl #3]
   1731c:	ldr	x10, [x0, #8]
   17320:	str	x10, [x20, #8320]
   17324:	b.eq	16b18 <yylex+0x908>  // b.none
   17328:	mov	x3, x10
   1732c:	ldr	x2, [x4, x6, lsl #3]
   17330:	mov	x27, x3
   17334:	ldrsw	x1, [x20, #52]
   17338:	ldr	w0, [x20, #76]
   1733c:	ldr	x5, [x2, #8]
   17340:	add	x28, x5, x1
   17344:	str	x28, [x20, #64]
   17348:	cmp	x28, x3
   1734c:	b.ls	162fc <yylex+0xec>  // b.plast
   17350:	mov	x4, x3
   17354:	add	x10, x21, #0x428
   17358:	add	x7, x21, #0xa98
   1735c:	add	x13, x21, #0xc48
   17360:	add	x12, x21, #0xc70
   17364:	ldrb	w1, [x4]
   17368:	cbz	w1, 17408 <yylex+0x11f8>
   1736c:	ldrb	w6, [x21, w1, sxtw]
   17370:	mov	w2, w6
   17374:	ldrsh	w1, [x23, w0, sxtw #1]
   17378:	sxtw	x3, w0
   1737c:	cbz	w1, 17388 <yylex+0x1178>
   17380:	str	w0, [x20, #104]
   17384:	str	x4, [x20, #112]
   17388:	ldrsh	w1, [x19, x3, lsl #1]
   1738c:	add	w1, w1, w2
   17390:	sxtw	x11, w1
   17394:	ldrsh	w1, [x10, w1, sxtw #1]
   17398:	cmp	w1, w0
   1739c:	b.eq	173d0 <yylex+0x11c0>  // b.none
   173a0:	ldrsh	w0, [x7, x3, lsl #1]
   173a4:	cmp	w0, #0xbb
   173a8:	b.le	173e4 <yylex+0x11d4>
   173ac:	ldrb	w2, [x13, w2, sxtw]
   173b0:	sxtw	x3, w0
   173b4:	ldrsh	w1, [x19, w0, sxtw #1]
   173b8:	mov	w6, w2
   173bc:	add	w1, w1, w2
   173c0:	sxtw	x11, w1
   173c4:	ldrsh	w1, [x10, w1, sxtw #1]
   173c8:	cmp	w0, w1
   173cc:	b.ne	173a0 <yylex+0x1190>  // b.any
   173d0:	add	x4, x4, #0x1
   173d4:	ldrsh	w0, [x12, x11, lsl #1]
   173d8:	cmp	x28, x4
   173dc:	b.ne	17364 <yylex+0x1154>  // b.any
   173e0:	b	162fc <yylex+0xec>
   173e4:	ldrsh	w1, [x19, w0, sxtw #1]
   173e8:	sxtw	x3, w0
   173ec:	mov	w2, w6
   173f0:	add	w1, w1, w6
   173f4:	sxtw	x11, w1
   173f8:	ldrsh	w1, [x10, w1, sxtw #1]
   173fc:	cmp	w0, w1
   17400:	b.ne	173a0 <yylex+0x1190>  // b.any
   17404:	b	173d0 <yylex+0x11c0>
   17408:	mov	w2, #0x1                   	// #1
   1740c:	mov	w6, w2
   17410:	b	17374 <yylex+0x1164>
   17414:	mov	x0, #0x0                   	// #0
   17418:	ldrb	w1, [x5, x0]
   1741c:	strb	w1, [x26, x0]
   17420:	add	x0, x0, #0x1
   17424:	cmp	w3, w0
   17428:	b.gt	17418 <yylex+0x1208>
   1742c:	b	17174 <yylex+0xf64>
   17430:	add	x10, x3, w10, sxtw
   17434:	str	x10, [x20, #64]
   17438:	ldr	w0, [x20, #76]
   1743c:	cmp	x10, x3
   17440:	b.ls	174e4 <yylex+0x12d4>  // b.plast
   17444:	mov	x4, x3
   17448:	add	x7, x21, #0x428
   1744c:	add	x13, x21, #0xa98
   17450:	add	x12, x21, #0xc48
   17454:	add	x11, x21, #0xc70
   17458:	ldrb	w1, [x4]
   1745c:	cbz	w1, 1766c <yylex+0x145c>
   17460:	ldrb	w5, [x21, w1, sxtw]
   17464:	mov	w2, w5
   17468:	ldrsh	w1, [x23, w0, sxtw #1]
   1746c:	sxtw	x6, w0
   17470:	cbz	w1, 1747c <yylex+0x126c>
   17474:	str	w0, [x20, #104]
   17478:	str	x4, [x20, #112]
   1747c:	ldrsh	w1, [x19, x6, lsl #1]
   17480:	b	17494 <yylex+0x1284>
   17484:	ldrb	w2, [x12, w2, sxtw]
   17488:	sxtw	x6, w0
   1748c:	ldrsh	w1, [x19, w0, sxtw #1]
   17490:	mov	w5, w2
   17494:	add	w1, w1, w2
   17498:	sxtw	x9, w1
   1749c:	ldrsh	w1, [x7, w1, sxtw #1]
   174a0:	cmp	w0, w1
   174a4:	b.eq	174d4 <yylex+0x12c4>  // b.none
   174a8:	ldrsh	w0, [x13, x6, lsl #1]
   174ac:	cmp	w0, #0xbb
   174b0:	b.gt	17484 <yylex+0x1274>
   174b4:	ldrsh	w1, [x19, w0, sxtw #1]
   174b8:	sxtw	x6, w0
   174bc:	mov	w2, w5
   174c0:	add	w1, w1, w5
   174c4:	sxtw	x9, w1
   174c8:	ldrsh	w1, [x7, w1, sxtw #1]
   174cc:	cmp	w0, w1
   174d0:	b.ne	174a8 <yylex+0x1298>  // b.any
   174d4:	add	x4, x4, #0x1
   174d8:	ldrsh	w0, [x11, x9, lsl #1]
   174dc:	cmp	x10, x4
   174e0:	b.ne	17458 <yylex+0x1248>  // b.any
   174e4:	ldrsh	w1, [x23, w0, sxtw #1]
   174e8:	sxtw	x6, w0
   174ec:	cbz	w1, 174f8 <yylex+0x12e8>
   174f0:	str	w0, [x20, #104]
   174f4:	str	x10, [x20, #112]
   174f8:	ldrsh	w1, [x19, x6, lsl #1]
   174fc:	add	x2, x21, #0x428
   17500:	add	w1, w1, #0x1
   17504:	sxtw	x4, w1
   17508:	ldrsh	w1, [x2, w1, sxtw #1]
   1750c:	cmp	w1, w0
   17510:	b.eq	17534 <yylex+0x1324>  // b.none
   17514:	add	x5, x21, #0xa98
   17518:	ldrsh	x6, [x5, x6, lsl #1]
   1751c:	ldrsh	w1, [x19, w6, sxtw #1]
   17520:	add	w1, w1, #0x1
   17524:	sxtw	x4, w1
   17528:	ldrsh	w1, [x2, w1, sxtw #1]
   1752c:	cmp	w6, w1
   17530:	b.ne	17518 <yylex+0x1308>  // b.any
   17534:	add	x0, x21, #0xc70
   17538:	ldrsh	w0, [x0, x4, lsl #1]
   1753c:	cmp	w0, #0xbb
   17540:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   17544:	b.ne	17678 <yylex+0x1468>  // b.any
   17548:	ldr	w0, [x20, #104]
   1754c:	mov	x27, x3
   17550:	ldr	x28, [x20, #112]
   17554:	b	162fc <yylex+0xec>
   17558:	sxtw	x1, w1
   1755c:	mov	x0, #0x0                   	// #0
   17560:	ldrb	w4, [x2, x0]
   17564:	cmp	x0, x1
   17568:	strb	w4, [x22, x0]
   1756c:	add	x0, x0, #0x1
   17570:	b.ne	17560 <yylex+0x1350>  // b.any
   17574:	b	16f2c <yylex+0xd1c>
   17578:	add	w26, w1, w26, asr #1
   1757c:	str	x2, [sp, #112]
   17580:	str	w3, [sp, #124]
   17584:	sxtw	x1, w26
   17588:	bl	0 <grub_realloc>
   1758c:	ldr	x2, [sp, #112]
   17590:	ldr	x1, [x20, #24]
   17594:	str	x0, [x2, #8]
   17598:	ldr	x0, [x20, #40]
   1759c:	ldr	w3, [sp, #124]
   175a0:	ldr	x2, [x0, x1, lsl #3]
   175a4:	ldr	x0, [x2, #8]
   175a8:	cbz	x0, 175ec <yylex+0x13dc>
   175ac:	ldr	w1, [x20, #52]
   175b0:	sub	w26, w26, #0x2
   175b4:	str	w26, [x2, #24]
   175b8:	add	w1, w3, w1
   175bc:	b	172e4 <yylex+0x10d4>
   175c0:	ldr	x0, [x20, #8]
   175c4:	mov	w2, #0x1                   	// #1
   175c8:	mov	x1, x20
   175cc:	str	w2, [sp, #104]
   175d0:	str	w3, [sp, #112]
   175d4:	bl	15938 <yyrestart>
   175d8:	ldr	x1, [x20, #24]
   175dc:	ldr	x0, [x20, #40]
   175e0:	ldr	w3, [sp, #112]
   175e4:	ldr	x2, [x0, x1, lsl #3]
   175e8:	b	172cc <yylex+0x10bc>
   175ec:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   175f0:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   175f4:	str	w3, [sp, #124]
   175f8:	ldr	x1, [x1]
   175fc:	ldr	x0, [x0]
   17600:	ldr	x2, [x1]
   17604:	blr	x2
   17608:	mov	x4, x0
   1760c:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   17610:	add	x0, x0, #0x0
   17614:	str	x4, [sp, #112]
   17618:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   1761c:	ldr	x1, [x0]
   17620:	ldr	x0, [x2]
   17624:	ldr	x1, [x1]
   17628:	blr	x1
   1762c:	mov	x1, x0
   17630:	ldr	x4, [sp, #112]
   17634:	mov	x0, x4
   17638:	bl	0 <grub_printf>
   1763c:	ldr	x1, [x20, #24]
   17640:	ldr	x0, [x20, #40]
   17644:	ldr	w3, [sp, #124]
   17648:	ldr	x2, [x0, x1, lsl #3]
   1764c:	ldr	x0, [x2, #8]
   17650:	b	175ac <yylex+0x139c>
   17654:	ldr	w0, [x20, #80]
   17658:	cbnz	w0, 16490 <yylex+0x280>
   1765c:	ldr	x0, [x20, #8]
   17660:	mov	x1, x20
   17664:	bl	15938 <yyrestart>
   17668:	b	16490 <yylex+0x280>
   1766c:	mov	w2, #0x1                   	// #1
   17670:	mov	w5, w2
   17674:	b	17468 <yylex+0x1258>
   17678:	add	x10, x10, #0x1
   1767c:	mov	x27, x3
   17680:	str	x10, [x20, #64]
   17684:	b	16270 <yylex+0x60>
	...

0000000000017708 <yyget_extra>:
   17708:	ldr	x0, [x0]
   1770c:	ret

0000000000017710 <yyget_column>:
   17710:	ldr	x1, [x0, #40]
   17714:	cbz	x1, 1772c <yyget_column+0x1c>
   17718:	ldr	x0, [x0, #24]
   1771c:	ldr	x0, [x1, x0, lsl #3]
   17720:	cbz	x0, 1772c <yyget_column+0x1c>
   17724:	ldr	w0, [x0, #48]
   17728:	ret
   1772c:	mov	w0, #0x0                   	// #0
   17730:	ret
   17734:	nop

0000000000017738 <yyget_leng>:
   17738:	ldr	w0, [x0, #56]
   1773c:	ret

0000000000017740 <yyget_text>:
   17740:	add	x0, x0, #0x80
   17744:	ret

0000000000017748 <yyset_extra>:
   17748:	str	x0, [x1]
   1774c:	ret

0000000000017750 <yyset_column>:
   17750:	stp	x29, x30, [sp, #-48]!
   17754:	mov	x29, sp
   17758:	stp	x19, x20, [sp, #16]
   1775c:	mov	w20, w0
   17760:	mov	x19, x1
   17764:	ldr	x0, [x1, #40]
   17768:	cbz	x0, 17788 <yyset_column+0x38>
   1776c:	ldr	x1, [x1, #24]
   17770:	ldr	x0, [x0, x1, lsl #3]
   17774:	cbz	x0, 17788 <yyset_column+0x38>
   17778:	str	w20, [x0, #48]
   1777c:	ldp	x19, x20, [sp, #16]
   17780:	ldp	x29, x30, [sp], #48
   17784:	ret
   17788:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1778c:	stp	x21, x22, [sp, #32]
   17790:	adrp	x0, 0 <grub_normal_free_menu-0x498>
   17794:	ldr	x22, [x1]
   17798:	ldr	x0, [x0]
   1779c:	ldr	x1, [x22]
   177a0:	blr	x1
   177a4:	mov	x21, x0
   177a8:	adrp	x2, 0 <grub_normal_free_menu-0x498>
   177ac:	ldr	x1, [x22]
   177b0:	ldr	x0, [x2]
   177b4:	blr	x1
   177b8:	mov	x1, x0
   177bc:	mov	x0, x21
   177c0:	bl	0 <grub_printf>
   177c4:	ldr	x1, [x19, #24]
   177c8:	ldr	x0, [x19, #40]
   177cc:	ldp	x21, x22, [sp, #32]
   177d0:	ldr	x0, [x0, x1, lsl #3]
   177d4:	str	w20, [x0, #48]
   177d8:	ldp	x19, x20, [sp, #16]
   177dc:	ldp	x29, x30, [sp], #48
   177e0:	ret
   177e4:	nop
	...

0000000000017800 <yyget_lval>:
   17800:	ldr	x0, [x0, #8336]
   17804:	ret

0000000000017808 <yyset_lval>:
   17808:	str	x0, [x1, #8336]
   1780c:	ret

0000000000017810 <yylex_init>:
   17810:	cbz	x0, 17894 <yylex_init+0x84>
   17814:	stp	x29, x30, [sp, #-32]!
   17818:	mov	x29, sp
   1781c:	str	x19, [sp, #16]
   17820:	mov	x19, x0
   17824:	mov	x0, #0x2098                	// #8344
   17828:	bl	0 <grub_malloc>
   1782c:	str	x0, [x19]
   17830:	cbz	x0, 17874 <yylex_init+0x64>
   17834:	mov	x2, #0x2098                	// #8344
   17838:	mov	w1, #0x0                   	// #0
   1783c:	bl	0 <grub_memset>
   17840:	ldr	x1, [x19]
   17844:	mov	w0, #0x0                   	// #0
   17848:	ldr	x19, [sp, #16]
   1784c:	stp	xzr, xzr, [x1, #8]
   17850:	stp	xzr, xzr, [x1, #24]
   17854:	str	xzr, [x1, #40]
   17858:	stp	xzr, xzr, [x1, #64]
   1785c:	stur	xzr, [x1, #84]
   17860:	str	xzr, [x1, #96]
   17864:	str	xzr, [x1, #8320]
   17868:	str	xzr, [x1, #8328]
   1786c:	ldp	x29, x30, [sp], #32
   17870:	ret
   17874:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   17878:	mov	w2, #0x3                   	// #3
   1787c:	mov	w0, #0x1                   	// #1
   17880:	ldr	x1, [x1]
   17884:	ldr	x19, [sp, #16]
   17888:	str	w2, [x1]
   1788c:	ldp	x29, x30, [sp], #32
   17890:	ret
   17894:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   17898:	mov	w2, #0xa                   	// #10
   1789c:	mov	w0, #0x1                   	// #1
   178a0:	ldr	x1, [x1]
   178a4:	str	w2, [x1]
   178a8:	ret
   178ac:	nop
	...

00000000000178b8 <yylex_init_extra>:
   178b8:	cbz	x1, 17948 <yylex_init_extra+0x90>
   178bc:	stp	x29, x30, [sp, #-32]!
   178c0:	mov	x29, sp
   178c4:	stp	x19, x20, [sp, #16]
   178c8:	mov	x19, x1
   178cc:	mov	x20, x0
   178d0:	mov	x0, #0x2098                	// #8344
   178d4:	bl	0 <grub_malloc>
   178d8:	str	x0, [x19]
   178dc:	cbz	x0, 17928 <yylex_init_extra+0x70>
   178e0:	mov	x2, #0x2098                	// #8344
   178e4:	mov	w1, #0x0                   	// #0
   178e8:	bl	0 <grub_memset>
   178ec:	ldr	x1, [x19]
   178f0:	mov	w0, #0x0                   	// #0
   178f4:	str	x20, [x1]
   178f8:	ldr	x1, [x19]
   178fc:	ldp	x19, x20, [sp, #16]
   17900:	stp	xzr, xzr, [x1, #8]
   17904:	stp	xzr, xzr, [x1, #24]
   17908:	str	xzr, [x1, #40]
   1790c:	stp	xzr, xzr, [x1, #64]
   17910:	stur	xzr, [x1, #84]
   17914:	str	xzr, [x1, #96]
   17918:	str	xzr, [x1, #8320]
   1791c:	str	xzr, [x1, #8328]
   17920:	ldp	x29, x30, [sp], #32
   17924:	ret
   17928:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1792c:	mov	w2, #0x3                   	// #3
   17930:	mov	w0, #0x1                   	// #1
   17934:	ldr	x1, [x1]
   17938:	ldp	x19, x20, [sp, #16]
   1793c:	str	w2, [x1]
   17940:	ldp	x29, x30, [sp], #32
   17944:	ret
   17948:	adrp	x1, 0 <grub_normal_free_menu-0x498>
   1794c:	mov	w2, #0xa                   	// #10
   17950:	mov	w0, #0x1                   	// #1
   17954:	ldr	x1, [x1]
   17958:	str	w2, [x1]
   1795c:	ret
	...

0000000000017968 <yylex_destroy>:
   17968:	stp	x29, x30, [sp, #-32]!
   1796c:	mov	x29, sp
   17970:	stp	x19, x20, [sp, #16]
   17974:	mov	x19, x0
   17978:	ldr	x0, [x0, #40]
   1797c:	cbz	x0, 17a18 <yylex_destroy+0xb0>
   17980:	ldr	x2, [x19, #24]
   17984:	ldr	x20, [x0, x2, lsl #3]
   17988:	cbz	x20, 179b0 <yylex_destroy+0x48>
   1798c:	ldr	w1, [x20, #32]
   17990:	str	xzr, [x0, x2, lsl #3]
   17994:	cbnz	w1, 179f8 <yylex_destroy+0x90>
   17998:	mov	x0, x20
   1799c:	bl	0 <grub_free>
   179a0:	ldr	x1, [x19, #24]
   179a4:	ldr	x0, [x19, #40]
   179a8:	str	xzr, [x0, x1, lsl #3]
   179ac:	cbz	x0, 17a18 <yylex_destroy+0xb0>
   179b0:	bl	0 <grub_free>
   179b4:	str	xzr, [x19, #40]
   179b8:	ldr	x0, [x19, #96]
   179bc:	bl	0 <grub_free>
   179c0:	stp	xzr, xzr, [x19, #8]
   179c4:	mov	x0, x19
   179c8:	stp	xzr, xzr, [x19, #24]
   179cc:	str	xzr, [x19, #40]
   179d0:	stp	xzr, xzr, [x19, #64]
   179d4:	stur	xzr, [x19, #84]
   179d8:	str	xzr, [x19, #96]
   179dc:	str	xzr, [x19, #8320]
   179e0:	str	xzr, [x19, #8328]
   179e4:	bl	0 <grub_free>
   179e8:	mov	w0, #0x0                   	// #0
   179ec:	ldp	x19, x20, [sp, #16]
   179f0:	ldp	x29, x30, [sp], #32
   179f4:	ret
   179f8:	ldr	x0, [x20, #8]
   179fc:	bl	0 <grub_free>
   17a00:	mov	x0, x20
   17a04:	bl	0 <grub_free>
   17a08:	ldr	x1, [x19, #24]
   17a0c:	ldr	x0, [x19, #40]
   17a10:	str	xzr, [x0, x1, lsl #3]
   17a14:	cbnz	x0, 179b0 <yylex_destroy+0x48>
   17a18:	mov	x0, #0x0                   	// #0
   17a1c:	b	179b0 <yylex_destroy+0x48>

0000000000017a20 <yywrap>:
   17a20:	ldr	x0, [x0]
   17a24:	ldr	x1, [x0, #40]
   17a28:	ldr	w1, [x1, #76]
   17a2c:	cbz	w1, 17a38 <yywrap+0x18>
   17a30:	mov	w0, #0x1                   	// #1
   17a34:	ret
   17a38:	mov	x1, #0x0                   	// #0
   17a3c:	b	13828 <grub_script_lexer_yywrap>
