
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix_be.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xa78>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	ldrh	w3, [x0, #10]
  28:	and	x1, x1, #0xffff
  2c:	lsr	w5, w3, #8
  30:	orr	w5, w5, w3, lsl #8
  34:	and	w5, w5, #0xffff
  38:	add	w5, w5, #0x1
  3c:	add	x4, sp, #0x1e
  40:	mov	x3, #0x2                   	// #2
  44:	ubfiz	x2, x2, #1, #16
  48:	lsl	x1, x1, x5
  4c:	ldr	x0, [x0, #64]
  50:	bl	0 <grub_disk_read>
  54:	ldrh	w0, [sp, #30]
  58:	lsr	w1, w0, #8
  5c:	orr	w0, w1, w0, lsl #8
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	stp	x29, x30, [sp, #-16]!
  6c:	mov	x29, sp
  70:	and	w1, w1, #0xffff
  74:	strh	w1, [x0, #56]
  78:	sub	w2, w1, #0x1
  7c:	ldrh	w1, [x0, #4]
  80:	ldrh	w3, [x0, #6]
  84:	ldrh	w4, [x0, #10]
  88:	lsr	w5, w3, #8
  8c:	orr	w5, w5, w3, lsl #8
  90:	lsr	w3, w1, #8
  94:	orr	w1, w3, w1, lsl #8
  98:	add	w5, w5, w1
  9c:	add	w5, w5, #0x2
  a0:	and	x5, x5, #0xffff
  a4:	lsr	w1, w4, #8
  a8:	orr	w1, w1, w4, lsl #8
  ac:	and	w1, w1, #0xffff
  b0:	add	w1, w1, #0x1
  b4:	lsl	x5, x5, x1
  b8:	ubfx	x1, x2, #4, #12
  bc:	add	x4, x0, #0x14
  c0:	mov	x3, #0x20                  	// #32
  c4:	ubfiz	x2, x2, #5, #4
  c8:	add	x1, x5, x1
  cc:	ldr	x0, [x0, #64]
  d0:	bl	0 <grub_disk_read>
  d4:	mov	w0, #0x0                   	// #0
  d8:	ldp	x29, x30, [sp], #16
  dc:	ret
  e0:	stp	x29, x30, [sp, #-144]!
  e4:	mov	x29, sp
  e8:	stp	x19, x20, [sp, #16]
  ec:	mov	x19, x0
  f0:	str	x1, [sp, #104]
  f4:	str	x4, [sp, #120]
  f8:	ldr	w0, [x0, #24]
  fc:	rev	w0, w0
 100:	cmp	x0, x3
 104:	b.cc	1ac <grub_mod_init-0x8cc>  // b.lo, b.ul, b.last
 108:	stp	x23, x24, [sp, #48]
 10c:	stp	x27, x28, [sp, #80]
 110:	mov	x27, x2
 114:	mov	x23, x5
 118:	ldr	x4, [sp, #120]
 11c:	add	x2, x3, x4
 120:	sub	x1, x0, x3
 124:	cmp	x0, x2
 128:	csel	x0, x1, x4, cc  // cc = lo, ul, last
 12c:	mov	x1, x0
 130:	str	x0, [sp, #120]
 134:	mov	x0, #0x0                   	// #0
 138:	cbz	x1, 384 <grub_mod_init-0x6f4>
 13c:	add	x4, x1, x3
 140:	ldr	x2, [x19, #80]
 144:	sub	x0, x4, #0x1
 148:	ubfx	x0, x0, #9, #32
 14c:	udiv	x0, x0, x2
 150:	str	w0, [sp, #112]
 154:	and	x3, x3, #0xffffffff
 158:	lsl	x2, x2, #9
 15c:	udiv	x1, x3, x2
 160:	str	w1, [sp, #116]
 164:	msub	x2, x1, x2, x3
 168:	str	x2, [sp, #128]
 16c:	add	w2, w0, #0x1
 170:	cmp	w2, w1
 174:	b.ls	344 <grub_mod_init-0x734>  // b.plast
 178:	stp	x21, x22, [sp, #32]
 17c:	stp	x25, x26, [sp, #64]
 180:	add	x22, x1, #0x11
 184:	add	x22, x19, x22, lsl #1
 188:	sub	w20, w1, #0x7
 18c:	sub	w25, w0, w1
 190:	add	x25, x25, x1
 194:	add	x0, x19, #0x24
 198:	add	x25, x0, x25, lsl #1
 19c:	adrp	x26, 0 <grub_mod_init-0xa78>
 1a0:	and	x0, x4, #0xffffffff
 1a4:	str	x0, [sp, #136]
 1a8:	b	2a8 <grub_mod_init-0x7d0>
 1ac:	adrp	x0, 0 <grub_mod_init-0xa78>
 1b0:	ldr	x1, [x0]
 1b4:	mov	w0, #0xb                   	// #11
 1b8:	bl	0 <grub_error>
 1bc:	mov	x0, #0xffffffffffffffff    	// #-1
 1c0:	b	38c <grub_mod_init-0x6ec>
 1c4:	ldrh	w1, [x22]
 1c8:	lsr	w0, w1, #8
 1cc:	orr	w1, w0, w1, lsl #8
 1d0:	and	w1, w1, #0xffff
 1d4:	b	20c <grub_mod_init-0x86c>
 1d8:	ldrh	w0, [x19, #48]
 1dc:	lsr	w1, w0, #8
 1e0:	mov	w2, w20
 1e4:	orr	w1, w1, w0, lsl #8
 1e8:	mov	x0, x19
 1ec:	bl	1c <grub_mod_init-0xa5c>
 1f0:	and	w1, w0, #0xffff
 1f4:	b	20c <grub_mod_init-0x86c>
 1f8:	adrp	x0, 0 <grub_mod_init-0xa78>
 1fc:	ldr	x1, [x0]
 200:	mov	w0, #0xb                   	// #11
 204:	bl	0 <grub_error>
 208:	mov	w1, #0x0                   	// #0
 20c:	ldr	x0, [x26]
 210:	ldr	w0, [x0]
 214:	cbnz	w0, 354 <grub_mod_init-0x724>
 218:	ldr	w0, [sp, #112]
 21c:	lsl	x3, x21, #9
 220:	cmp	w0, w24
 224:	b.eq	30c <grub_mod_init-0x76c>  // b.none
 228:	mov	x28, #0x0                   	// #0
 22c:	ldr	w0, [sp, #116]
 230:	cmp	w0, w24
 234:	b.eq	32c <grub_mod_init-0x74c>  // b.none
 238:	ldr	x0, [x19, #64]
 23c:	ldr	x2, [sp, #104]
 240:	str	x2, [x0, #48]
 244:	ldr	x0, [x19, #64]
 248:	str	x27, [x0, #56]
 24c:	ldrh	w2, [x19, #10]
 250:	and	x0, x1, #0xffff
 254:	lsr	w1, w2, #8
 258:	orr	w2, w1, w2, lsl #8
 25c:	and	w2, w2, #0xffff
 260:	add	w1, w2, #0x1
 264:	mov	x4, x23
 268:	mov	x2, x28
 26c:	lsl	x1, x0, x1
 270:	ldr	x0, [x19, #64]
 274:	bl	0 <grub_disk_read>
 278:	ldr	x0, [x19, #64]
 27c:	str	xzr, [x0, #48]
 280:	ldr	x0, [x26]
 284:	ldr	w0, [x0]
 288:	cbnz	w0, 36c <grub_mod_init-0x70c>
 28c:	ldr	x5, [x19, #80]
 290:	add	x23, x23, x5, lsl #9
 294:	sub	x23, x23, x28
 298:	add	x22, x22, #0x2
 29c:	add	w20, w20, #0x1
 2a0:	cmp	x22, x25
 2a4:	b.eq	33c <grub_mod_init-0x73c>  // b.none
 2a8:	ldr	x21, [x19, #80]
 2ac:	adds	w24, w20, #0x7
 2b0:	b.cs	1c4 <grub_mod_init-0x8b4>  // b.hs, b.nlast
 2b4:	ldr	w2, [x19, #52]
 2b8:	cmp	w2, w20
 2bc:	b.hi	1d8 <grub_mod_init-0x8a0>  // b.pmore
 2c0:	sub	w28, w20, w2
 2c4:	sub	w0, w20, w2
 2c8:	umull	x1, w2, w2
 2cc:	cmp	x0, x1
 2d0:	b.cs	1f8 <grub_mod_init-0x880>  // b.hs, b.nlast
 2d4:	ldrh	w0, [x19, #50]
 2d8:	lsr	w1, w0, #8
 2dc:	udiv	w2, w28, w2
 2e0:	orr	w1, w1, w0, lsl #8
 2e4:	mov	x0, x19
 2e8:	bl	1c <grub_mod_init-0xa5c>
 2ec:	ldr	w3, [x19, #52]
 2f0:	udiv	w2, w28, w3
 2f4:	msub	w2, w2, w3, w28
 2f8:	mov	w1, w0
 2fc:	mov	x0, x19
 300:	bl	1c <grub_mod_init-0xa5c>
 304:	and	w1, w0, #0xffff
 308:	b	20c <grub_mod_init-0x86c>
 30c:	ldr	x0, [x19, #80]
 310:	lsl	x0, x0, #9
 314:	ldr	x2, [sp, #136]
 318:	udiv	x3, x2, x0
 31c:	msub	x3, x3, x0, x2
 320:	cmp	x3, #0x0
 324:	csel	x3, x3, x0, ne  // ne = any
 328:	b	228 <grub_mod_init-0x850>
 32c:	ldr	x0, [sp, #128]
 330:	sub	x3, x3, x0
 334:	mov	x28, x0
 338:	b	238 <grub_mod_init-0x840>
 33c:	ldp	x21, x22, [sp, #32]
 340:	ldp	x25, x26, [sp, #64]
 344:	ldr	x0, [sp, #120]
 348:	ldp	x23, x24, [sp, #48]
 34c:	ldp	x27, x28, [sp, #80]
 350:	b	38c <grub_mod_init-0x6ec>
 354:	mov	x0, #0xffffffffffffffff    	// #-1
 358:	ldp	x21, x22, [sp, #32]
 35c:	ldp	x23, x24, [sp, #48]
 360:	ldp	x25, x26, [sp, #64]
 364:	ldp	x27, x28, [sp, #80]
 368:	b	38c <grub_mod_init-0x6ec>
 36c:	mov	x0, #0xffffffffffffffff    	// #-1
 370:	ldp	x21, x22, [sp, #32]
 374:	ldp	x23, x24, [sp, #48]
 378:	ldp	x25, x26, [sp, #64]
 37c:	ldp	x27, x28, [sp, #80]
 380:	b	38c <grub_mod_init-0x6ec>
 384:	ldp	x23, x24, [sp, #48]
 388:	ldp	x27, x28, [sp, #80]
 38c:	ldp	x19, x20, [sp, #16]
 390:	ldp	x29, x30, [sp], #144
 394:	ret
	...
 3b0:	stp	x29, x30, [sp, #-16]!
 3b4:	mov	x29, sp
 3b8:	mov	x5, x1
 3bc:	mov	x4, x2
 3c0:	ldr	x3, [x0, #24]
 3c4:	ldr	x2, [x0, #96]
 3c8:	ldr	x1, [x0, #88]
 3cc:	ldr	x0, [x0, #80]
 3d0:	bl	e0 <grub_mod_init-0x998>
 3d4:	ldp	x29, x30, [sp], #16
 3d8:	ret
 3dc:	stp	x29, x30, [sp, #-32]!
 3e0:	mov	x29, sp
 3e4:	stp	x19, x20, [sp, #16]
 3e8:	mov	x20, x0
 3ec:	mov	x0, #0x58                  	// #88
 3f0:	bl	0 <grub_malloc>
 3f4:	mov	x19, x0
 3f8:	cbz	x0, 480 <grub_mod_init-0x5f8>
 3fc:	mov	x4, x0
 400:	mov	x3, #0x14                  	// #20
 404:	mov	x2, #0x0                   	// #0
 408:	mov	x1, #0x2                   	// #2
 40c:	mov	x0, x20
 410:	bl	0 <grub_disk_read>
 414:	adrp	x0, 0 <grub_mod_init-0xa78>
 418:	ldr	x0, [x0]
 41c:	ldr	w0, [x0]
 420:	cbnz	w0, 49c <grub_mod_init-0x5dc>
 424:	ldrh	w0, [x19, #16]
 428:	mov	w1, #0x7f13                	// #32531
 42c:	cmp	w0, w1
 430:	b.eq	490 <grub_mod_init-0x5e8>  // b.none
 434:	mov	w1, #0x8f13                	// #36627
 438:	cmp	w0, w1
 43c:	b.ne	49c <grub_mod_init-0x5dc>  // b.any
 440:	mov	w0, #0x1e                  	// #30
 444:	str	w0, [x19, #72]
 448:	ldrh	w1, [x19, #10]
 44c:	lsr	w0, w1, #8
 450:	orr	w1, w0, w1, lsl #8
 454:	and	w1, w1, #0xffff
 458:	cmp	w1, #0x13
 45c:	b.hi	49c <grub_mod_init-0x5dc>  // b.pmore
 460:	str	x20, [x19, #64]
 464:	str	wzr, [x19, #60]
 468:	mov	x0, #0x2                   	// #2
 46c:	str	x0, [x19, #80]
 470:	add	w1, w1, #0x9
 474:	lsl	x1, x0, x1
 478:	lsr	x1, x1, #1
 47c:	str	w1, [x19, #52]
 480:	mov	x0, x19
 484:	ldp	x19, x20, [sp, #16]
 488:	ldp	x29, x30, [sp], #32
 48c:	ret
 490:	mov	w0, #0xe                   	// #14
 494:	str	w0, [x19, #72]
 498:	b	448 <grub_mod_init-0x630>
 49c:	mov	x0, x19
 4a0:	bl	0 <grub_free>
 4a4:	adrp	x0, 0 <grub_mod_init-0xa78>
 4a8:	ldr	x1, [x0]
 4ac:	mov	w0, #0x9                   	// #9
 4b0:	bl	0 <grub_error>
 4b4:	mov	x19, #0x0                   	// #0
 4b8:	b	480 <grub_mod_init-0x5f8>
 4bc:	nop
	...
 4d0:	stp	x29, x30, [sp, #-160]!
 4d4:	mov	x29, sp
 4d8:	stp	x19, x20, [sp, #16]
 4dc:	stp	x21, x22, [sp, #32]
 4e0:	stp	x23, x24, [sp, #48]
 4e4:	stp	x25, x26, [sp, #64]
 4e8:	stp	x27, x28, [sp, #80]
 4ec:	mov	x19, x0
 4f0:	str	x1, [sp, #104]
 4f4:	mov	x21, x1
 4f8:	mov	x27, #0x2                   	// #2
 4fc:	add	x25, sp, #0x80
 500:	mov	x23, x25
 504:	mov	w28, #0xffffa000            	// #-24576
 508:	ldrb	w0, [x21]
 50c:	cmp	w0, #0x2f
 510:	b.ne	520 <grub_mod_init-0x558>  // b.any
 514:	ldrb	w0, [x21, #1]!
 518:	cmp	w0, #0x2f
 51c:	b.eq	514 <grub_mod_init-0x564>  // b.none
 520:	cbz	w0, 730 <grub_mod_init-0x348>
 524:	ldrh	w0, [x19, #20]
 528:	tbz	w0, #6, 564 <grub_mod_init-0x514>
 52c:	ldrb	w0, [x21]
 530:	cmp	w0, #0x2f
 534:	mov	x24, x21
 538:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 53c:	b.eq	550 <grub_mod_init-0x528>  // b.none
 540:	ldrb	w0, [x24, #1]!
 544:	cmp	w0, #0x2f
 548:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 54c:	b.ne	540 <grub_mod_init-0x538>  // b.any
 550:	ldr	w0, [x19, #24]
 554:	cbz	w0, 578 <grub_mod_init-0x500>
 558:	mov	w20, #0x0                   	// #0
 55c:	sub	x26, x24, x21
 560:	b	684 <grub_mod_init-0x3f4>
 564:	adrp	x0, 0 <grub_mod_init-0xa78>
 568:	ldr	x1, [x0]
 56c:	mov	w0, #0x4                   	// #4
 570:	bl	0 <grub_error>
 574:	b	598 <grub_mod_init-0x4e0>
 578:	ldr	x2, [sp, #104]
 57c:	adrp	x0, 0 <grub_mod_init-0xa78>
 580:	ldr	x1, [x0]
 584:	mov	w0, #0x5                   	// #5
 588:	bl	0 <grub_error>
 58c:	adrp	x0, 0 <grub_mod_init-0xa78>
 590:	ldr	x0, [x0]
 594:	ldr	w0, [x0]
 598:	ldp	x19, x20, [sp, #16]
 59c:	ldp	x21, x22, [sp, #32]
 5a0:	ldp	x23, x24, [sp, #48]
 5a4:	ldp	x25, x26, [sp, #64]
 5a8:	ldp	x27, x28, [sp, #80]
 5ac:	ldp	x29, x30, [sp], #160
 5b0:	ret
 5b4:	adrp	x0, 0 <grub_mod_init-0xa78>
 5b8:	ldr	x0, [x0]
 5bc:	ldr	w0, [x0]
 5c0:	b	598 <grub_mod_init-0x4e0>
 5c4:	adrp	x0, 0 <grub_mod_init-0xa78>
 5c8:	ldr	x0, [x0]
 5cc:	ldr	w0, [x0]
 5d0:	b	598 <grub_mod_init-0x4e0>
 5d4:	ldr	w22, [x19, #24]
 5d8:	ldr	w0, [x19, #60]
 5dc:	add	w0, w0, #0x1
 5e0:	str	w0, [x19, #60]
 5e4:	cmp	w0, #0x8
 5e8:	b.gt	650 <grub_mod_init-0x428>
 5ec:	rev	w26, w22
 5f0:	rev	w22, w22
 5f4:	add	x0, x22, #0x1
 5f8:	bl	0 <grub_malloc>
 5fc:	mov	x21, x0
 600:	cbz	x0, 660 <grub_mod_init-0x418>
 604:	mov	x5, x0
 608:	mov	x4, x22
 60c:	mov	x3, #0x0                   	// #0
 610:	mov	x2, #0x0                   	// #0
 614:	mov	x1, #0x0                   	// #0
 618:	mov	x0, x19
 61c:	bl	e0 <grub_mod_init-0x998>
 620:	tbnz	x0, #63, 660 <grub_mod_init-0x418>
 624:	strb	wzr, [x21, w26, uxtw]
 628:	ldrb	w0, [x21]
 62c:	cmp	w0, #0x2f
 630:	csinc	w1, w20, wzr, ne  // ne = any
 634:	mov	x0, x19
 638:	bl	68 <grub_mod_init-0xa10>
 63c:	cbnz	w0, 660 <grub_mod_init-0x418>
 640:	mov	x1, x21
 644:	mov	x0, x19
 648:	bl	4d0 <grub_mod_init-0x5a8>
 64c:	b	660 <grub_mod_init-0x418>
 650:	adrp	x0, 0 <grub_mod_init-0xa78>
 654:	ldr	x1, [x0]
 658:	mov	w0, #0x19                  	// #25
 65c:	bl	0 <grub_error>
 660:	adrp	x0, 0 <grub_mod_init-0xa78>
 664:	ldr	x0, [x0]
 668:	ldr	w0, [x0]
 66c:	cbz	w0, 728 <grub_mod_init-0x350>
 670:	b	598 <grub_mod_init-0x4e0>
 674:	ldr	w0, [x19, #24]
 678:	rev	w0, w0
 67c:	cmp	w20, w0
 680:	b.cs	578 <grub_mod_init-0x500>  // b.hs, b.nlast
 684:	mov	w22, w20
 688:	add	x5, sp, #0x7e
 68c:	mov	x4, x27
 690:	mov	x3, x22
 694:	mov	x2, #0x0                   	// #0
 698:	mov	x1, #0x0                   	// #0
 69c:	mov	x0, x19
 6a0:	bl	e0 <grub_mod_init-0x998>
 6a4:	tbnz	x0, #63, 5b4 <grub_mod_init-0x4c4>
 6a8:	mov	x5, x23
 6ac:	ldrsw	x4, [x19, #72]
 6b0:	add	x3, x22, #0x2
 6b4:	mov	x2, #0x0                   	// #0
 6b8:	mov	x1, #0x0                   	// #0
 6bc:	mov	x0, x19
 6c0:	bl	e0 <grub_mod_init-0x998>
 6c4:	tbnz	x0, #63, 5c4 <grub_mod_init-0x4b4>
 6c8:	ldr	w0, [x19, #72]
 6cc:	add	w1, w0, #0x2
 6d0:	add	w20, w20, w1
 6d4:	strb	wzr, [x25, w0, sxtw]
 6d8:	mov	x2, x26
 6dc:	mov	x1, x23
 6e0:	mov	x0, x21
 6e4:	bl	0 <grub_strncmp>
 6e8:	cbnz	w0, 674 <grub_mod_init-0x404>
 6ec:	ldrb	w0, [x25, x26]
 6f0:	cbnz	w0, 674 <grub_mod_init-0x404>
 6f4:	ldrh	w20, [x19, #56]
 6f8:	ldrh	w0, [sp, #126]
 6fc:	lsr	w1, w0, #8
 700:	orr	w1, w1, w0, lsl #8
 704:	mov	x0, x19
 708:	bl	68 <grub_mod_init-0xa10>
 70c:	ldrh	w0, [x19, #20]
 710:	lsr	w1, w0, #8
 714:	orr	w0, w1, w0, lsl #8
 718:	and	w0, w0, w28
 71c:	and	w0, w0, #0xffff
 720:	cmp	w0, #0xa, lsl #12
 724:	b.eq	5d4 <grub_mod_init-0x4a4>  // b.none
 728:	mov	x21, x24
 72c:	b	508 <grub_mod_init-0x570>
 730:	mov	w0, #0x0                   	// #0
 734:	b	598 <grub_mod_init-0x4e0>
	...
 758:	stp	x29, x30, [sp, #-48]!
 75c:	mov	x29, sp
 760:	stp	x19, x20, [sp, #16]
 764:	str	x21, [sp, #32]
 768:	mov	x21, x0
 76c:	mov	x20, x1
 770:	ldr	x0, [x0, #8]
 774:	ldr	x0, [x0]
 778:	bl	3dc <grub_mod_init-0x69c>
 77c:	cbz	x0, 7dc <grub_mod_init-0x29c>
 780:	mov	x19, x0
 784:	mov	w1, #0x1                   	// #1
 788:	bl	68 <grub_mod_init-0xa10>
 78c:	adrp	x0, 0 <grub_mod_init-0xa78>
 790:	ldr	x0, [x0]
 794:	ldr	w0, [x0]
 798:	cbnz	w0, 7ec <grub_mod_init-0x28c>
 79c:	cbz	x20, 7ac <grub_mod_init-0x2cc>
 7a0:	ldrb	w0, [x20]
 7a4:	cmp	w0, #0x2f
 7a8:	b.eq	804 <grub_mod_init-0x274>  // b.none
 7ac:	mov	x2, x20
 7b0:	adrp	x0, 0 <grub_mod_init-0xa78>
 7b4:	ldr	x1, [x0]
 7b8:	mov	w0, #0x7                   	// #7
 7bc:	bl	0 <grub_error>
 7c0:	adrp	x0, 0 <grub_mod_init-0xa78>
 7c4:	ldr	x0, [x0]
 7c8:	ldr	w0, [x0]
 7cc:	ldp	x19, x20, [sp, #16]
 7d0:	ldr	x21, [sp, #32]
 7d4:	ldp	x29, x30, [sp], #48
 7d8:	ret
 7dc:	adrp	x0, 0 <grub_mod_init-0xa78>
 7e0:	ldr	x0, [x0]
 7e4:	ldr	w0, [x0]
 7e8:	b	7cc <grub_mod_init-0x2ac>
 7ec:	mov	x0, x19
 7f0:	bl	0 <grub_free>
 7f4:	adrp	x0, 0 <grub_mod_init-0xa78>
 7f8:	ldr	x0, [x0]
 7fc:	ldr	w0, [x0]
 800:	b	7cc <grub_mod_init-0x2ac>
 804:	mov	x1, x20
 808:	mov	x0, x19
 80c:	bl	4d0 <grub_mod_init-0x5a8>
 810:	adrp	x0, 0 <grub_mod_init-0xa78>
 814:	ldr	x0, [x0]
 818:	ldr	w0, [x0]
 81c:	cbnz	w0, 834 <grub_mod_init-0x244>
 820:	str	x19, [x21, #80]
 824:	ldr	w1, [x19, #24]
 828:	rev	w1, w1
 82c:	str	x1, [x21, #64]
 830:	b	7cc <grub_mod_init-0x2ac>
 834:	mov	x0, x19
 838:	bl	0 <grub_free>
 83c:	adrp	x0, 0 <grub_mod_init-0xa78>
 840:	ldr	x0, [x0]
 844:	ldr	w0, [x0]
 848:	b	7cc <grub_mod_init-0x2ac>
 84c:	nop
	...
 860:	stp	x29, x30, [sp, #-160]!
 864:	mov	x29, sp
 868:	stp	x19, x20, [sp, #16]
 86c:	stp	x21, x22, [sp, #32]
 870:	stp	x23, x24, [sp, #48]
 874:	mov	x20, x1
 878:	mov	x22, x2
 87c:	mov	x23, x3
 880:	ldr	x0, [x0]
 884:	bl	3dc <grub_mod_init-0x69c>
 888:	cbz	x0, 8d0 <grub_mod_init-0x1a8>
 88c:	mov	x19, x0
 890:	mov	w1, #0x1                   	// #1
 894:	bl	68 <grub_mod_init-0xa10>
 898:	adrp	x0, 0 <grub_mod_init-0xa78>
 89c:	ldr	x0, [x0]
 8a0:	ldr	w0, [x0]
 8a4:	cbz	w0, 8e0 <grub_mod_init-0x198>
 8a8:	mov	x0, x19
 8ac:	bl	0 <grub_free>
 8b0:	adrp	x0, 0 <grub_mod_init-0xa78>
 8b4:	ldr	x0, [x0]
 8b8:	ldr	w0, [x0]
 8bc:	ldp	x19, x20, [sp, #16]
 8c0:	ldp	x21, x22, [sp, #32]
 8c4:	ldp	x23, x24, [sp, #48]
 8c8:	ldp	x29, x30, [sp], #160
 8cc:	ret
 8d0:	adrp	x0, 0 <grub_mod_init-0xa78>
 8d4:	ldr	x0, [x0]
 8d8:	ldr	w0, [x0]
 8dc:	b	8bc <grub_mod_init-0x1bc>
 8e0:	mov	x1, x20
 8e4:	mov	x0, x19
 8e8:	bl	4d0 <grub_mod_init-0x5a8>
 8ec:	adrp	x0, 0 <grub_mod_init-0xa78>
 8f0:	ldr	x0, [x0]
 8f4:	ldr	w20, [x0]
 8f8:	cbnz	w20, 8a8 <grub_mod_init-0x1d0>
 8fc:	ldrh	w0, [x19, #20]
 900:	tbz	w0, #6, 924 <grub_mod_init-0x154>
 904:	ldr	w0, [x19, #24]
 908:	cbz	w0, 8a8 <grub_mod_init-0x1d0>
 90c:	stp	x25, x26, [sp, #64]
 910:	str	x27, [sp, #80]
 914:	mov	x25, #0x10                  	// #16
 918:	mov	x24, #0x2                   	// #2
 91c:	add	x21, sp, #0x80
 920:	b	9d8 <grub_mod_init-0xa0>
 924:	adrp	x0, 0 <grub_mod_init-0xa78>
 928:	ldr	x1, [x0]
 92c:	mov	w0, #0x4                   	// #4
 930:	bl	0 <grub_error>
 934:	b	8a8 <grub_mod_init-0x1d0>
 938:	adrp	x0, 0 <grub_mod_init-0xa78>
 93c:	ldr	x0, [x0]
 940:	ldr	w0, [x0]
 944:	ldp	x25, x26, [sp, #64]
 948:	ldr	x27, [sp, #80]
 94c:	b	8bc <grub_mod_init-0x1bc>
 950:	adrp	x0, 0 <grub_mod_init-0xa78>
 954:	ldr	x0, [x0]
 958:	ldr	w0, [x0]
 95c:	ldp	x25, x26, [sp, #64]
 960:	ldr	x27, [sp, #80]
 964:	b	8bc <grub_mod_init-0x1bc>
 968:	lsr	w0, w1, #8
 96c:	orr	w1, w0, w1, lsl #8
 970:	mov	x0, x19
 974:	bl	68 <grub_mod_init-0xa10>
 978:	ldrh	w1, [x19, #20]
 97c:	ubfx	x1, x1, #6, #1
 980:	ldrb	w0, [sp, #112]
 984:	bfxil	w0, w1, #0, #1
 988:	orr	w0, w0, #0x2
 98c:	strb	w0, [sp, #112]
 990:	ldr	w0, [x19, #28]
 994:	rev	w0, w0
 998:	str	w0, [sp, #116]
 99c:	mov	x2, x23
 9a0:	add	x1, sp, #0x70
 9a4:	mov	x0, x21
 9a8:	blr	x22
 9ac:	cbnz	w0, a58 <grub_mod_init-0x20>
 9b0:	mov	w1, w27
 9b4:	mov	x0, x19
 9b8:	bl	68 <grub_mod_init-0xa10>
 9bc:	ldr	w0, [x19, #72]
 9c0:	add	w0, w0, #0x2
 9c4:	add	w20, w20, w0
 9c8:	ldr	w0, [x19, #24]
 9cc:	rev	w0, w0
 9d0:	cmp	w20, w0
 9d4:	b.cs	a4c <grub_mod_init-0x2c>  // b.hs, b.nlast
 9d8:	ldrh	w27, [x19, #56]
 9dc:	mov	x2, x25
 9e0:	mov	w1, #0x0                   	// #0
 9e4:	add	x0, sp, #0x70
 9e8:	bl	0 <grub_memset>
 9ec:	mov	w26, w20
 9f0:	add	x5, sp, #0x6e
 9f4:	mov	x4, x24
 9f8:	mov	x3, x26
 9fc:	mov	x2, #0x0                   	// #0
 a00:	mov	x1, #0x0                   	// #0
 a04:	mov	x0, x19
 a08:	bl	e0 <grub_mod_init-0x998>
 a0c:	tbnz	x0, #63, 938 <grub_mod_init-0x140>
 a10:	mov	x5, x21
 a14:	ldrsw	x4, [x19, #72]
 a18:	add	x3, x26, #0x2
 a1c:	mov	x2, #0x0                   	// #0
 a20:	mov	x1, #0x0                   	// #0
 a24:	mov	x0, x19
 a28:	bl	e0 <grub_mod_init-0x998>
 a2c:	tbnz	x0, #63, 950 <grub_mod_init-0x128>
 a30:	ldr	w0, [x19, #72]
 a34:	strb	wzr, [x21, w0, sxtw]
 a38:	ldrh	w1, [sp, #110]
 a3c:	cbnz	w1, 968 <grub_mod_init-0x110>
 a40:	add	w0, w0, #0x2
 a44:	add	w20, w20, w0
 a48:	b	9c8 <grub_mod_init-0xb0>
 a4c:	ldp	x25, x26, [sp, #64]
 a50:	ldr	x27, [sp, #80]
 a54:	b	8a8 <grub_mod_init-0x1d0>
 a58:	ldp	x25, x26, [sp, #64]
 a5c:	ldr	x27, [sp, #80]
 a60:	b	8a8 <grub_mod_init-0x1d0>
 a64:	nop
	...

0000000000000a78 <grub_mod_init>:
 a78:	stp	x29, x30, [sp, #-16]!
 a7c:	mov	x29, sp
 a80:	adrp	x0, 0 <grub_mod_init-0xa78>
 a84:	ldr	x1, [x0]
 a88:	adrp	x0, 0 <grub_mod_init-0xa78>
 a8c:	ldr	x0, [x0]
 a90:	bl	0 <grub_list_push>
 a94:	ldp	x29, x30, [sp], #16
 a98:	ret
 a9c:	nop
	...

0000000000000ab0 <grub_mod_fini>:
 ab0:	stp	x29, x30, [sp, #-16]!
 ab4:	mov	x29, sp
 ab8:	adrp	x0, 0 <grub_mod_init-0xa78>
 abc:	ldr	x0, [x0]
 ac0:	bl	0 <grub_list_remove>
 ac4:	ldp	x29, x30, [sp], #16
 ac8:	ret
 acc:	nop
	...
