
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-machined_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404aa8 <_init>:
  404aa8:	stp	x29, x30, [sp, #-16]!
  404aac:	mov	x29, sp
  404ab0:	bl	4059a0 <call_weak_fn>
  404ab4:	ldp	x29, x30, [sp], #16
  404ab8:	ret

Disassembly of section .plt:

0000000000404ac0 <__libc_start_main@plt-0x20>:
  404ac0:	stp	x16, x30, [sp, #-16]!
  404ac4:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ac8:	ldr	x17, [x16, #2240]
  404acc:	add	x16, x16, #0x8c0
  404ad0:	br	x17
  404ad4:	nop
  404ad8:	nop
  404adc:	nop

0000000000404ae0 <__libc_start_main@plt>:
  404ae0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ae4:	ldr	x17, [x16, #2248]
  404ae8:	add	x16, x16, #0x8c8
  404aec:	br	x17

0000000000404af0 <abort@plt>:
  404af0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404af4:	ldr	x17, [x16, #2256]
  404af8:	add	x16, x16, #0x8d0
  404afc:	br	x17

0000000000404b00 <__gmon_start__@plt>:
  404b00:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b04:	ldr	x17, [x16, #2264]
  404b08:	add	x16, x16, #0x8d8
  404b0c:	br	x17

0000000000404b10 <ask_password_agent_close@plt>:
  404b10:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b14:	ldr	x17, [x16, #2272]
  404b18:	add	x16, x16, #0x8e0
  404b1c:	br	x17

0000000000404b20 <polkit_agent_close@plt>:
  404b20:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b24:	ldr	x17, [x16, #2280]
  404b28:	add	x16, x16, #0x8e8
  404b2c:	br	x17

0000000000404b30 <pager_close@plt>:
  404b30:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b34:	ldr	x17, [x16, #2288]
  404b38:	add	x16, x16, #0x8f0
  404b3c:	br	x17

0000000000404b40 <mac_selinux_finish@plt>:
  404b40:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b44:	ldr	x17, [x16, #2296]
  404b48:	add	x16, x16, #0x8f8
  404b4c:	br	x17

0000000000404b50 <log_set_facility@plt>:
  404b50:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b54:	ldr	x17, [x16, #2304]
  404b58:	add	x16, x16, #0x900
  404b5c:	br	x17

0000000000404b60 <log_setup_service@plt>:
  404b60:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b64:	ldr	x17, [x16, #2312]
  404b68:	add	x16, x16, #0x908
  404b6c:	br	x17

0000000000404b70 <umask@plt>:
  404b70:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b74:	ldr	x17, [x16, #2320]
  404b78:	add	x16, x16, #0x910
  404b7c:	br	x17

0000000000404b80 <log_get_max_level_realm@plt>:
  404b80:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b84:	ldr	x17, [x16, #2328]
  404b88:	add	x16, x16, #0x918
  404b8c:	br	x17

0000000000404b90 <log_internal_realm@plt>:
  404b90:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404b94:	ldr	x17, [x16, #2336]
  404b98:	add	x16, x16, #0x920
  404b9c:	br	x17

0000000000404ba0 <abs@plt>:
  404ba0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ba4:	ldr	x17, [x16, #2344]
  404ba8:	add	x16, x16, #0x928
  404bac:	br	x17

0000000000404bb0 <mkdir_label@plt>:
  404bb0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404bb4:	ldr	x17, [x16, #2352]
  404bb8:	add	x16, x16, #0x930
  404bbc:	br	x17

0000000000404bc0 <sigprocmask_many@plt>:
  404bc0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404bc4:	ldr	x17, [x16, #2360]
  404bc8:	add	x16, x16, #0x938
  404bcc:	br	x17

0000000000404bd0 <log_assert_failed_realm@plt>:
  404bd0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404bd4:	ldr	x17, [x16, #2368]
  404bd8:	add	x16, x16, #0x940
  404bdc:	br	x17

0000000000404be0 <getpid_cached@plt>:
  404be0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404be4:	ldr	x17, [x16, #2376]
  404be8:	add	x16, x16, #0x948
  404bec:	br	x17

0000000000404bf0 <sd_notify@plt>:
  404bf0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404bf4:	ldr	x17, [x16, #2384]
  404bf8:	add	x16, x16, #0x950
  404bfc:	br	x17

0000000000404c00 <calloc@plt>:
  404c00:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c04:	ldr	x17, [x16, #2392]
  404c08:	add	x16, x16, #0x958
  404c0c:	br	x17

0000000000404c10 <internal_hashmap_new@plt>:
  404c10:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c14:	ldr	x17, [x16, #2400]
  404c18:	add	x16, x16, #0x960
  404c1c:	br	x17

0000000000404c20 <sd_event_default@plt>:
  404c20:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c24:	ldr	x17, [x16, #2408]
  404c28:	add	x16, x16, #0x968
  404c2c:	br	x17

0000000000404c30 <sd_event_add_signal@plt>:
  404c30:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c34:	ldr	x17, [x16, #2416]
  404c38:	add	x16, x16, #0x970
  404c3c:	br	x17

0000000000404c40 <sd_event_set_watchdog@plt>:
  404c40:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c44:	ldr	x17, [x16, #2424]
  404c48:	add	x16, x16, #0x978
  404c4c:	br	x17

0000000000404c50 <bus_event_loop_with_idle@plt>:
  404c50:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c54:	ldr	x17, [x16, #2432]
  404c58:	add	x16, x16, #0x980
  404c5c:	br	x17

0000000000404c60 <sd_event_source_unref@plt>:
  404c60:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c64:	ldr	x17, [x16, #2440]
  404c68:	add	x16, x16, #0x988
  404c6c:	br	x17

0000000000404c70 <bus_verify_polkit_async_registry_free@plt>:
  404c70:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c74:	ldr	x17, [x16, #2448]
  404c78:	add	x16, x16, #0x990
  404c7c:	br	x17

0000000000404c80 <sd_bus_flush_close_unref@plt>:
  404c80:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c84:	ldr	x17, [x16, #2456]
  404c88:	add	x16, x16, #0x998
  404c8c:	br	x17

0000000000404c90 <sd_event_unref@plt>:
  404c90:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404c94:	ldr	x17, [x16, #2464]
  404c98:	add	x16, x16, #0x9a0
  404c9c:	br	x17

0000000000404ca0 <internal_hashmap_free@plt>:
  404ca0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ca4:	ldr	x17, [x16, #2472]
  404ca8:	add	x16, x16, #0x9a8
  404cac:	br	x17

0000000000404cb0 <free@plt>:
  404cb0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404cb4:	ldr	x17, [x16, #2480]
  404cb8:	add	x16, x16, #0x9b0
  404cbc:	br	x17

0000000000404cc0 <sd_bus_default_system@plt>:
  404cc0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404cc4:	ldr	x17, [x16, #2488]
  404cc8:	add	x16, x16, #0x9b8
  404ccc:	br	x17

0000000000404cd0 <sd_bus_add_object_vtable@plt>:
  404cd0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404cd4:	ldr	x17, [x16, #2496]
  404cd8:	add	x16, x16, #0x9c0
  404cdc:	br	x17

0000000000404ce0 <sd_bus_add_fallback_vtable@plt>:
  404ce0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ce4:	ldr	x17, [x16, #2504]
  404ce8:	add	x16, x16, #0x9c8
  404cec:	br	x17

0000000000404cf0 <sd_bus_add_node_enumerator@plt>:
  404cf0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404cf4:	ldr	x17, [x16, #2512]
  404cf8:	add	x16, x16, #0x9d0
  404cfc:	br	x17

0000000000404d00 <sd_bus_match_signal_async@plt>:
  404d00:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d04:	ldr	x17, [x16, #2520]
  404d08:	add	x16, x16, #0x9d8
  404d0c:	br	x17

0000000000404d10 <sd_bus_call_method_async@plt>:
  404d10:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d14:	ldr	x17, [x16, #2528]
  404d18:	add	x16, x16, #0x9e0
  404d1c:	br	x17

0000000000404d20 <sd_bus_request_name_async@plt>:
  404d20:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d24:	ldr	x17, [x16, #2536]
  404d28:	add	x16, x16, #0x9e8
  404d2c:	br	x17

0000000000404d30 <sd_bus_attach_event@plt>:
  404d30:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d34:	ldr	x17, [x16, #2544]
  404d38:	add	x16, x16, #0x9f0
  404d3c:	br	x17

0000000000404d40 <opendir@plt>:
  404d40:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d44:	ldr	x17, [x16, #2552]
  404d48:	add	x16, x16, #0x9f8
  404d4c:	br	x17

0000000000404d50 <__errno_location@plt>:
  404d50:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d54:	ldr	x17, [x16, #2560]
  404d58:	add	x16, x16, #0xa00
  404d5c:	br	x17

0000000000404d60 <readdir64@plt>:
  404d60:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d64:	ldr	x17, [x16, #2568]
  404d68:	add	x16, x16, #0xa08
  404d6c:	br	x17

0000000000404d70 <hidden_or_backup_file@plt>:
  404d70:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d74:	ldr	x17, [x16, #2576]
  404d78:	add	x16, x16, #0xa10
  404d7c:	br	x17

0000000000404d80 <dirent_is_file@plt>:
  404d80:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d84:	ldr	x17, [x16, #2584]
  404d88:	add	x16, x16, #0xa18
  404d8c:	br	x17

0000000000404d90 <hostname_is_valid@plt>:
  404d90:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404d94:	ldr	x17, [x16, #2592]
  404d98:	add	x16, x16, #0xa20
  404d9c:	br	x17

0000000000404da0 <internal_hashmap_iterate@plt>:
  404da0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404da4:	ldr	x17, [x16, #2600]
  404da8:	add	x16, x16, #0xa28
  404dac:	br	x17

0000000000404db0 <closedir@plt>:
  404db0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404db4:	ldr	x17, [x16, #2608]
  404db8:	add	x16, x16, #0xa30
  404dbc:	br	x17

0000000000404dc0 <sd_id128_get_machine@plt>:
  404dc0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404dc4:	ldr	x17, [x16, #2616]
  404dc8:	add	x16, x16, #0xa38
  404dcc:	br	x17

0000000000404dd0 <strdup@plt>:
  404dd0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404dd4:	ldr	x17, [x16, #2624]
  404dd8:	add	x16, x16, #0xa40
  404ddc:	br	x17

0000000000404de0 <log_oom_internal@plt>:
  404de0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404de4:	ldr	x17, [x16, #2632]
  404de8:	add	x16, x16, #0xa48
  404dec:	br	x17

0000000000404df0 <dual_timestamp_from_boottime_or_monotonic@plt>:
  404df0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404df4:	ldr	x17, [x16, #2640]
  404df8:	add	x16, x16, #0xa50
  404dfc:	br	x17

0000000000404e00 <strlen@plt>:
  404e00:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e04:	ldr	x17, [x16, #2648]
  404e08:	add	x16, x16, #0xa58
  404e0c:	br	x17

0000000000404e10 <strncmp@plt>:
  404e10:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e14:	ldr	x17, [x16, #2656]
  404e18:	add	x16, x16, #0xa60
  404e1c:	br	x17

0000000000404e20 <internal_hashmap_size@plt>:
  404e20:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e24:	ldr	x17, [x16, #2664]
  404e28:	add	x16, x16, #0xa68
  404e2c:	br	x17

0000000000404e30 <string_hash_func@plt>:
  404e30:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e34:	ldr	x17, [x16, #2672]
  404e38:	add	x16, x16, #0xa70
  404e3c:	br	x17

0000000000404e40 <strcmp@plt>:
  404e40:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e44:	ldr	x17, [x16, #2680]
  404e48:	add	x16, x16, #0xa78
  404e4c:	br	x17

0000000000404e50 <path_join_internal@plt>:
  404e50:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e54:	ldr	x17, [x16, #2688]
  404e58:	add	x16, x16, #0xa80
  404e5c:	br	x17

0000000000404e60 <hashmap_put@plt>:
  404e60:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e64:	ldr	x17, [x16, #2696]
  404e68:	add	x16, x16, #0xa88
  404e6c:	br	x17

0000000000404e70 <sd_bus_message_unref@plt>:
  404e70:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e74:	ldr	x17, [x16, #2704]
  404e78:	add	x16, x16, #0xa90
  404e7c:	br	x17

0000000000404e80 <bus_error_message@plt>:
  404e80:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e84:	ldr	x17, [x16, #2712]
  404e88:	add	x16, x16, #0xa98
  404e8c:	br	x17

0000000000404e90 <sd_bus_error_free@plt>:
  404e90:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404e94:	ldr	x17, [x16, #2720]
  404e98:	add	x16, x16, #0xaa0
  404e9c:	br	x17

0000000000404ea0 <internal_hashmap_remove@plt>:
  404ea0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ea4:	ldr	x17, [x16, #2728]
  404ea8:	add	x16, x16, #0xaa8
  404eac:	br	x17

0000000000404eb0 <internal_hashmap_remove_value@plt>:
  404eb0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404eb4:	ldr	x17, [x16, #2736]
  404eb8:	add	x16, x16, #0xab0
  404ebc:	br	x17

0000000000404ec0 <mkdir_safe_label@plt>:
  404ec0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ec4:	ldr	x17, [x16, #2744]
  404ec8:	add	x16, x16, #0xab8
  404ecc:	br	x17

0000000000404ed0 <fopen_temporary@plt>:
  404ed0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ed4:	ldr	x17, [x16, #2752]
  404ed8:	add	x16, x16, #0xac0
  404edc:	br	x17

0000000000404ee0 <fileno@plt>:
  404ee0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ee4:	ldr	x17, [x16, #2760]
  404ee8:	add	x16, x16, #0xac8
  404eec:	br	x17

0000000000404ef0 <fchmod@plt>:
  404ef0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ef4:	ldr	x17, [x16, #2768]
  404ef8:	add	x16, x16, #0xad0
  404efc:	br	x17

0000000000404f00 <fprintf@plt>:
  404f00:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f04:	ldr	x17, [x16, #2776]
  404f08:	add	x16, x16, #0xad8
  404f0c:	br	x17

0000000000404f10 <cescape@plt>:
  404f10:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f14:	ldr	x17, [x16, #2784]
  404f18:	add	x16, x16, #0xae0
  404f1c:	br	x17

0000000000404f20 <fputs@plt>:
  404f20:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f24:	ldr	x17, [x16, #2792]
  404f28:	add	x16, x16, #0xae8
  404f2c:	br	x17

0000000000404f30 <fputc@plt>:
  404f30:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f34:	ldr	x17, [x16, #2800]
  404f38:	add	x16, x16, #0xaf0
  404f3c:	br	x17

0000000000404f40 <fflush_and_check@plt>:
  404f40:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f44:	ldr	x17, [x16, #2808]
  404f48:	add	x16, x16, #0xaf8
  404f4c:	br	x17

0000000000404f50 <rename@plt>:
  404f50:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f54:	ldr	x17, [x16, #2816]
  404f58:	add	x16, x16, #0xb00
  404f5c:	br	x17

0000000000404f60 <stpcpy@plt>:
  404f60:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f64:	ldr	x17, [x16, #2824]
  404f68:	add	x16, x16, #0xb08
  404f6c:	br	x17

0000000000404f70 <symlink@plt>:
  404f70:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f74:	ldr	x17, [x16, #2832]
  404f78:	add	x16, x16, #0xb10
  404f7c:	br	x17

0000000000404f80 <unlink@plt>:
  404f80:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f84:	ldr	x17, [x16, #2840]
  404f88:	add	x16, x16, #0xb18
  404f8c:	br	x17

0000000000404f90 <safe_fclose@plt>:
  404f90:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404f94:	ldr	x17, [x16, #2848]
  404f98:	add	x16, x16, #0xb20
  404f9c:	br	x17

0000000000404fa0 <parse_env_file_sentinel@plt>:
  404fa0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404fa4:	ldr	x17, [x16, #2856]
  404fa8:	add	x16, x16, #0xb28
  404fac:	br	x17

0000000000404fb0 <sd_id128_from_string@plt>:
  404fb0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404fb4:	ldr	x17, [x16, #2864]
  404fb8:	add	x16, x16, #0xb30
  404fbc:	br	x17

0000000000404fc0 <parse_pid@plt>:
  404fc0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404fc4:	ldr	x17, [x16, #2872]
  404fc8:	add	x16, x16, #0xb38
  404fcc:	br	x17

0000000000404fd0 <deserialize_usec@plt>:
  404fd0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404fd4:	ldr	x17, [x16, #2880]
  404fd8:	add	x16, x16, #0xb40
  404fdc:	br	x17

0000000000404fe0 <extract_first_word@plt>:
  404fe0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404fe4:	ldr	x17, [x16, #2888]
  404fe8:	add	x16, x16, #0xb48
  404fec:	br	x17

0000000000404ff0 <parse_ifindex@plt>:
  404ff0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  404ff4:	ldr	x17, [x16, #2896]
  404ff8:	add	x16, x16, #0xb50
  404ffc:	br	x17

0000000000405000 <greedy_realloc@plt>:
  405000:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405004:	ldr	x17, [x16, #2904]
  405008:	add	x16, x16, #0xb58
  40500c:	br	x17

0000000000405010 <string_table_lookup@plt>:
  405010:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405014:	ldr	x17, [x16, #2912]
  405018:	add	x16, x16, #0xb60
  40501c:	br	x17

0000000000405020 <log_struct_internal@plt>:
  405020:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405024:	ldr	x17, [x16, #2920]
  405028:	add	x16, x16, #0xb68
  40502c:	br	x17

0000000000405030 <dual_timestamp_get@plt>:
  405030:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405034:	ldr	x17, [x16, #2928]
  405038:	add	x16, x16, #0xb70
  40503c:	br	x17

0000000000405040 <kill@plt>:
  405040:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405044:	ldr	x17, [x16, #2936]
  405048:	add	x16, x16, #0xb78
  40504c:	br	x17

0000000000405050 <openpt_allocate@plt>:
  405050:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405054:	ldr	x17, [x16, #2944]
  405058:	add	x16, x16, #0xb80
  40505c:	br	x17

0000000000405060 <openpt_allocate_in_namespace@plt>:
  405060:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405064:	ldr	x17, [x16, #2952]
  405068:	add	x16, x16, #0xb88
  40506c:	br	x17

0000000000405070 <open_terminal@plt>:
  405070:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405074:	ldr	x17, [x16, #2960]
  405078:	add	x16, x16, #0xb90
  40507c:	br	x17

0000000000405080 <open_terminal_in_namespace@plt>:
  405080:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405084:	ldr	x17, [x16, #2968]
  405088:	add	x16, x16, #0xb98
  40508c:	br	x17

0000000000405090 <snprintf@plt>:
  405090:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405094:	ldr	x17, [x16, #2976]
  405098:	add	x16, x16, #0xba0
  40509c:	br	x17

00000000004050a0 <fopen64@plt>:
  4050a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4050a4:	ldr	x17, [x16, #2984]
  4050a8:	add	x16, x16, #0xba8
  4050ac:	br	x17

00000000004050b0 <__isoc99_fscanf@plt>:
  4050b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4050b4:	ldr	x17, [x16, #2992]
  4050b8:	add	x16, x16, #0xbb0
  4050bc:	br	x17

00000000004050c0 <ferror@plt>:
  4050c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4050c4:	ldr	x17, [x16, #3000]
  4050c8:	add	x16, x16, #0xbb8
  4050cc:	br	x17

00000000004050d0 <safe_fgetc@plt>:
  4050d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4050d4:	ldr	x17, [x16, #3008]
  4050d8:	add	x16, x16, #0xbc0
  4050dc:	br	x17

00000000004050e0 <fclose@plt>:
  4050e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4050e4:	ldr	x17, [x16, #3016]
  4050e8:	add	x16, x16, #0xbc8
  4050ec:	br	x17

00000000004050f0 <unit_name_escape@plt>:
  4050f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4050f4:	ldr	x17, [x16, #3024]
  4050f8:	add	x16, x16, #0xbd0
  4050fc:	br	x17

0000000000405100 <strjoin_real@plt>:
  405100:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405104:	ldr	x17, [x16, #3032]
  405108:	add	x16, x16, #0xbd8
  40510c:	br	x17

0000000000405110 <sd_bus_message_new_method_call@plt>:
  405110:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405114:	ldr	x17, [x16, #3040]
  405118:	add	x16, x16, #0xbe0
  40511c:	br	x17

0000000000405120 <sd_bus_message_append@plt>:
  405120:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405124:	ldr	x17, [x16, #3048]
  405128:	add	x16, x16, #0xbe8
  40512c:	br	x17

0000000000405130 <sd_bus_message_open_container@plt>:
  405130:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405134:	ldr	x17, [x16, #3056]
  405138:	add	x16, x16, #0xbf0
  40513c:	br	x17

0000000000405140 <sd_bus_message_copy@plt>:
  405140:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405144:	ldr	x17, [x16, #3064]
  405148:	add	x16, x16, #0xbf8
  40514c:	br	x17

0000000000405150 <sd_bus_message_close_container@plt>:
  405150:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405154:	ldr	x17, [x16, #3072]
  405158:	add	x16, x16, #0xc00
  40515c:	br	x17

0000000000405160 <sd_bus_call@plt>:
  405160:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405164:	ldr	x17, [x16, #3080]
  405168:	add	x16, x16, #0xc08
  40516c:	br	x17

0000000000405170 <sd_bus_message_read@plt>:
  405170:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405174:	ldr	x17, [x16, #3088]
  405178:	add	x16, x16, #0xc10
  40517c:	br	x17

0000000000405180 <free_and_strdup@plt>:
  405180:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405184:	ldr	x17, [x16, #3096]
  405188:	add	x16, x16, #0xc18
  40518c:	br	x17

0000000000405190 <open64@plt>:
  405190:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405194:	ldr	x17, [x16, #3104]
  405198:	add	x16, x16, #0xc20
  40519c:	br	x17

00000000004051a0 <btrfs_subvol_get_subtree_quota_fd@plt>:
  4051a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4051a4:	ldr	x17, [x16, #3112]
  4051a8:	add	x16, x16, #0xc28
  4051ac:	br	x17

00000000004051b0 <sd_bus_error_setf@plt>:
  4051b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4051b4:	ldr	x17, [x16, #3120]
  4051b8:	add	x16, x16, #0xc30
  4051bc:	br	x17

00000000004051c0 <sd_bus_reply_method_return@plt>:
  4051c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4051c4:	ldr	x17, [x16, #3128]
  4051c8:	add	x16, x16, #0xc38
  4051cc:	br	x17

00000000004051d0 <image_find@plt>:
  4051d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4051d4:	ldr	x17, [x16, #3136]
  4051d8:	add	x16, x16, #0xc40
  4051dc:	br	x17

00000000004051e0 <sd_bus_query_sender_creds@plt>:
  4051e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4051e4:	ldr	x17, [x16, #3144]
  4051e8:	add	x16, x16, #0xc48
  4051ec:	br	x17

00000000004051f0 <sd_bus_creds_get_pid@plt>:
  4051f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4051f4:	ldr	x17, [x16, #3152]
  4051f8:	add	x16, x16, #0xc50
  4051fc:	br	x17

0000000000405200 <sd_bus_message_new_method_return@plt>:
  405200:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405204:	ldr	x17, [x16, #3160]
  405208:	add	x16, x16, #0xc58
  40520c:	br	x17

0000000000405210 <sd_bus_error_set_errno@plt>:
  405210:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405214:	ldr	x17, [x16, #3168]
  405218:	add	x16, x16, #0xc60
  40521c:	br	x17

0000000000405220 <sd_bus_send@plt>:
  405220:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405224:	ldr	x17, [x16, #3176]
  405228:	add	x16, x16, #0xc68
  40522c:	br	x17

0000000000405230 <image_discover@plt>:
  405230:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405234:	ldr	x17, [x16, #3184]
  405238:	add	x16, x16, #0xc70
  40523c:	br	x17

0000000000405240 <image_type_to_string@plt>:
  405240:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405244:	ldr	x17, [x16, #3192]
  405248:	add	x16, x16, #0xc78
  40524c:	br	x17

0000000000405250 <bus_verify_polkit_async@plt>:
  405250:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405254:	ldr	x17, [x16, #3200]
  405258:	add	x16, x16, #0xc80
  40525c:	br	x17

0000000000405260 <setup_machine_directory@plt>:
  405260:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405264:	ldr	x17, [x16, #3208]
  405268:	add	x16, x16, #0xc88
  40526c:	br	x17

0000000000405270 <btrfs_qgroup_set_limit@plt>:
  405270:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405274:	ldr	x17, [x16, #3216]
  405278:	add	x16, x16, #0xc90
  40527c:	br	x17

0000000000405280 <btrfs_subvol_set_subtree_quota_limit@plt>:
  405280:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405284:	ldr	x17, [x16, #3224]
  405288:	add	x16, x16, #0xc98
  40528c:	br	x17

0000000000405290 <sd_bus_error_set_errnof@plt>:
  405290:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405294:	ldr	x17, [x16, #3232]
  405298:	add	x16, x16, #0xca0
  40529c:	br	x17

00000000004052a0 <pipe2@plt>:
  4052a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4052a4:	ldr	x17, [x16, #3240]
  4052a8:	add	x16, x16, #0xca8
  4052ac:	br	x17

00000000004052b0 <open_tmpfile_unlinkable@plt>:
  4052b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4052b4:	ldr	x17, [x16, #3248]
  4052b8:	add	x16, x16, #0xcb0
  4052bc:	br	x17

00000000004052c0 <safe_close@plt>:
  4052c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4052c4:	ldr	x17, [x16, #3256]
  4052c8:	add	x16, x16, #0xcb8
  4052cc:	br	x17

00000000004052d0 <write@plt>:
  4052d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4052d4:	ldr	x17, [x16, #3264]
  4052d8:	add	x16, x16, #0xcc0
  4052dc:	br	x17

00000000004052e0 <image_remove@plt>:
  4052e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4052e4:	ldr	x17, [x16, #3272]
  4052e8:	add	x16, x16, #0xcc8
  4052ec:	br	x17

00000000004052f0 <ftruncate64@plt>:
  4052f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4052f4:	ldr	x17, [x16, #3280]
  4052f8:	add	x16, x16, #0xcd0
  4052fc:	br	x17

0000000000405300 <lseek64@plt>:
  405300:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405304:	ldr	x17, [x16, #3288]
  405308:	add	x16, x16, #0xcd8
  40530c:	br	x17

0000000000405310 <_exit@plt>:
  405310:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405314:	ldr	x17, [x16, #3296]
  405318:	add	x16, x16, #0xce0
  40531c:	br	x17

0000000000405320 <sigkill_wait@plt>:
  405320:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405324:	ldr	x17, [x16, #3304]
  405328:	add	x16, x16, #0xce8
  40532c:	br	x17

0000000000405330 <uid_is_valid@plt>:
  405330:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405334:	ldr	x17, [x16, #3312]
  405338:	add	x16, x16, #0xcf0
  40533c:	br	x17

0000000000405340 <sprintf@plt>:
  405340:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405344:	ldr	x17, [x16, #3320]
  405348:	add	x16, x16, #0xcf8
  40534c:	br	x17

0000000000405350 <feof@plt>:
  405350:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405354:	ldr	x17, [x16, #3328]
  405358:	add	x16, x16, #0xd00
  40535c:	br	x17

0000000000405360 <internal_hashmap_get@plt>:
  405360:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405364:	ldr	x17, [x16, #3336]
  405368:	add	x16, x16, #0xd08
  40536c:	br	x17

0000000000405370 <strcmp_ptr@plt>:
  405370:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405374:	ldr	x17, [x16, #3344]
  405378:	add	x16, x16, #0xd10
  40537c:	br	x17

0000000000405380 <sd_bus_message_get_path@plt>:
  405380:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405384:	ldr	x17, [x16, #3352]
  405388:	add	x16, x16, #0xd18
  40538c:	br	x17

0000000000405390 <unit_name_from_dbus_path@plt>:
  405390:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405394:	ldr	x17, [x16, #3360]
  405398:	add	x16, x16, #0xd20
  40539c:	br	x17

00000000004053a0 <sd_bus_call_method@plt>:
  4053a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4053a4:	ldr	x17, [x16, #3368]
  4053a8:	add	x16, x16, #0xd28
  4053ac:	br	x17

00000000004053b0 <sd_bus_error_has_name@plt>:
  4053b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4053b4:	ldr	x17, [x16, #3376]
  4053b8:	add	x16, x16, #0xd30
  4053bc:	br	x17

00000000004053c0 <unit_dbus_path_from_name@plt>:
  4053c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4053c4:	ldr	x17, [x16, #3384]
  4053c8:	add	x16, x16, #0xd38
  4053cc:	br	x17

00000000004053d0 <sd_bus_get_property@plt>:
  4053d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4053d4:	ldr	x17, [x16, #3392]
  4053d8:	add	x16, x16, #0xd40
  4053dc:	br	x17

00000000004053e0 <strv_find@plt>:
  4053e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4053e4:	ldr	x17, [x16, #3400]
  4053e8:	add	x16, x16, #0xd48
  4053ec:	br	x17

00000000004053f0 <cg_pid_get_unit@plt>:
  4053f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4053f4:	ldr	x17, [x16, #3408]
  4053f8:	add	x16, x16, #0xd50
  4053fc:	br	x17

0000000000405400 <sd_bus_creds_unref@plt>:
  405400:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405404:	ldr	x17, [x16, #3416]
  405408:	add	x16, x16, #0xd58
  40540c:	br	x17

0000000000405410 <sd_bus_message_enter_container@plt>:
  405410:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405414:	ldr	x17, [x16, #3424]
  405418:	add	x16, x16, #0xd60
  40541c:	br	x17

0000000000405420 <sd_bus_message_ref@plt>:
  405420:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405424:	ldr	x17, [x16, #3432]
  405428:	add	x16, x16, #0xd68
  40542c:	br	x17

0000000000405430 <sd_bus_message_read_array@plt>:
  405430:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405434:	ldr	x17, [x16, #3440]
  405438:	add	x16, x16, #0xd70
  40543c:	br	x17

0000000000405440 <memcpy@plt>:
  405440:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405444:	ldr	x17, [x16, #3448]
  405448:	add	x16, x16, #0xd78
  40544c:	br	x17

0000000000405450 <path_is_absolute@plt>:
  405450:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405454:	ldr	x17, [x16, #3456]
  405458:	add	x16, x16, #0xd80
  40545c:	br	x17

0000000000405460 <memdup@plt>:
  405460:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405464:	ldr	x17, [x16, #3464]
  405468:	add	x16, x16, #0xd88
  40546c:	br	x17

0000000000405470 <image_name_is_valid@plt>:
  405470:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405474:	ldr	x17, [x16, #3472]
  405478:	add	x16, x16, #0xd90
  40547c:	br	x17

0000000000405480 <image_unref@plt>:
  405480:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405484:	ldr	x17, [x16, #3480]
  405488:	add	x16, x16, #0xd98
  40548c:	br	x17

0000000000405490 <safe_close_pair@plt>:
  405490:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405494:	ldr	x17, [x16, #3488]
  405498:	add	x16, x16, #0xda0
  40549c:	br	x17

00000000004054a0 <safe_fork_full@plt>:
  4054a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4054a4:	ldr	x17, [x16, #3496]
  4054a8:	add	x16, x16, #0xda8
  4054ac:	br	x17

00000000004054b0 <path_startswith@plt>:
  4054b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4054b4:	ldr	x17, [x16, #3504]
  4054b8:	add	x16, x16, #0xdb0
  4054bc:	br	x17

00000000004054c0 <path_equal@plt>:
  4054c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4054c4:	ldr	x17, [x16, #3512]
  4054c8:	add	x16, x16, #0xdb8
  4054cc:	br	x17

00000000004054d0 <fdopen@plt>:
  4054d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4054d4:	ldr	x17, [x16, #3520]
  4054d8:	add	x16, x16, #0xdc0
  4054dc:	br	x17

00000000004054e0 <fread@plt>:
  4054e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4054e4:	ldr	x17, [x16, #3528]
  4054e8:	add	x16, x16, #0xdc8
  4054ec:	br	x17

00000000004054f0 <read_line_full@plt>:
  4054f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4054f4:	ldr	x17, [x16, #3536]
  4054f8:	add	x16, x16, #0xdd0
  4054fc:	br	x17

0000000000405500 <sd_event_add_defer@plt>:
  405500:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405504:	ldr	x17, [x16, #3544]
  405508:	add	x16, x16, #0xdd8
  40550c:	br	x17

0000000000405510 <sd_event_source_set_description@plt>:
  405510:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405514:	ldr	x17, [x16, #3552]
  405518:	add	x16, x16, #0xde0
  40551c:	br	x17

0000000000405520 <sd_event_source_set_enabled@plt>:
  405520:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405524:	ldr	x17, [x16, #3560]
  405528:	add	x16, x16, #0xde8
  40552c:	br	x17

0000000000405530 <nscd_flush_cache@plt>:
  405530:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405534:	ldr	x17, [x16, #3568]
  405538:	add	x16, x16, #0xdf0
  40553c:	br	x17

0000000000405540 <local_addresses@plt>:
  405540:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405544:	ldr	x17, [x16, #3576]
  405548:	add	x16, x16, #0xdf8
  40554c:	br	x17

0000000000405550 <sd_bus_message_append_array@plt>:
  405550:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405554:	ldr	x17, [x16, #3584]
  405558:	add	x16, x16, #0xe00
  40555c:	br	x17

0000000000405560 <readlink_malloc@plt>:
  405560:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405564:	ldr	x17, [x16, #3592]
  405568:	add	x16, x16, #0xe08
  40556c:	br	x17

0000000000405570 <namespace_open@plt>:
  405570:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405574:	ldr	x17, [x16, #3600]
  405578:	add	x16, x16, #0xe10
  40557c:	br	x17

0000000000405580 <socketpair@plt>:
  405580:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405584:	ldr	x17, [x16, #3608]
  405588:	add	x16, x16, #0xe18
  40558c:	br	x17

0000000000405590 <namespace_fork@plt>:
  405590:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405594:	ldr	x17, [x16, #3616]
  405598:	add	x16, x16, #0xe20
  40559c:	br	x17

00000000004055a0 <writev@plt>:
  4055a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4055a4:	ldr	x17, [x16, #3624]
  4055a8:	add	x16, x16, #0xe28
  4055ac:	br	x17

00000000004055b0 <recvmsg@plt>:
  4055b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4055b4:	ldr	x17, [x16, #3632]
  4055b8:	add	x16, x16, #0xe30
  4055bc:	br	x17

00000000004055c0 <wait_for_terminate_and_check@plt>:
  4055c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4055c4:	ldr	x17, [x16, #3640]
  4055c8:	add	x16, x16, #0xe38
  4055cc:	br	x17

00000000004055d0 <load_os_release_pairs@plt>:
  4055d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4055d4:	ldr	x17, [x16, #3648]
  4055d8:	add	x16, x16, #0xe40
  4055dc:	br	x17

00000000004055e0 <open_os_release@plt>:
  4055e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4055e4:	ldr	x17, [x16, #3656]
  4055e8:	add	x16, x16, #0xe48
  4055ec:	br	x17

00000000004055f0 <load_env_file_pairs@plt>:
  4055f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4055f4:	ldr	x17, [x16, #3664]
  4055f8:	add	x16, x16, #0xe50
  4055fc:	br	x17

0000000000405600 <bus_reply_pair_array@plt>:
  405600:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405604:	ldr	x17, [x16, #3672]
  405608:	add	x16, x16, #0xe58
  40560c:	br	x17

0000000000405610 <strv_free@plt>:
  405610:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405614:	ldr	x17, [x16, #3680]
  405618:	add	x16, x16, #0xe60
  40561c:	br	x17

0000000000405620 <copy_bytes_full@plt>:
  405620:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405624:	ldr	x17, [x16, #3688]
  405628:	add	x16, x16, #0xe68
  40562c:	br	x17

0000000000405630 <sd_bus_new@plt>:
  405630:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405634:	ldr	x17, [x16, #3696]
  405638:	add	x16, x16, #0xe70
  40563c:	br	x17

0000000000405640 <asprintf@plt>:
  405640:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405644:	ldr	x17, [x16, #3704]
  405648:	add	x16, x16, #0xe78
  40564c:	br	x17

0000000000405650 <sd_bus_start@plt>:
  405650:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405654:	ldr	x17, [x16, #3712]
  405658:	add	x16, x16, #0xe80
  40565c:	br	x17

0000000000405660 <sd_bus_message_read_strv@plt>:
  405660:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405664:	ldr	x17, [x16, #3720]
  405668:	add	x16, x16, #0xe88
  40566c:	br	x17

0000000000405670 <strv_new_internal@plt>:
  405670:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405674:	ldr	x17, [x16, #3728]
  405678:	add	x16, x16, #0xe90
  40567c:	br	x17

0000000000405680 <strv_env_is_valid@plt>:
  405680:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405684:	ldr	x17, [x16, #3736]
  405688:	add	x16, x16, #0xe98
  40568c:	br	x17

0000000000405690 <sd_bus_message_append_strv@plt>:
  405690:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405694:	ldr	x17, [x16, #3744]
  405698:	add	x16, x16, #0xea0
  40569c:	br	x17

00000000004056a0 <path_is_normalized@plt>:
  4056a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4056a4:	ldr	x17, [x16, #3752]
  4056a8:	add	x16, x16, #0xea8
  4056ac:	br	x17

00000000004056b0 <faccessat@plt>:
  4056b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4056b4:	ldr	x17, [x16, #3760]
  4056b8:	add	x16, x16, #0xeb0
  4056bc:	br	x17

00000000004056c0 <chase_symlinks@plt>:
  4056c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4056c4:	ldr	x17, [x16, #3768]
  4056c8:	add	x16, x16, #0xeb8
  4056cc:	br	x17

00000000004056d0 <mkdtemp@plt>:
  4056d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4056d4:	ldr	x17, [x16, #3776]
  4056d8:	add	x16, x16, #0xec0
  4056dc:	br	x17

00000000004056e0 <mount@plt>:
  4056e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4056e4:	ldr	x17, [x16, #3784]
  4056e8:	add	x16, x16, #0xec8
  4056ec:	br	x17

00000000004056f0 <mkdir_errno_wrapper@plt>:
  4056f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4056f4:	ldr	x17, [x16, #3792]
  4056f8:	add	x16, x16, #0xed0
  4056fc:	br	x17

0000000000405700 <touch@plt>:
  405700:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405704:	ldr	x17, [x16, #3800]
  405708:	add	x16, x16, #0xed8
  40570c:	br	x17

0000000000405710 <mkostemp_safe@plt>:
  405710:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405714:	ldr	x17, [x16, #3808]
  405718:	add	x16, x16, #0xee0
  40571c:	br	x17

0000000000405720 <rmdir@plt>:
  405720:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405724:	ldr	x17, [x16, #3816]
  405728:	add	x16, x16, #0xee8
  40572c:	br	x17

0000000000405730 <umount@plt>:
  405730:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405734:	ldr	x17, [x16, #3824]
  405738:	add	x16, x16, #0xef0
  40573c:	br	x17

0000000000405740 <setns@plt>:
  405740:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405744:	ldr	x17, [x16, #3832]
  405748:	add	x16, x16, #0xef8
  40574c:	br	x17

0000000000405750 <mkdir_p@plt>:
  405750:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405754:	ldr	x17, [x16, #3840]
  405758:	add	x16, x16, #0xf00
  40575c:	br	x17

0000000000405760 <mkdir_parents@plt>:
  405760:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405764:	ldr	x17, [x16, #3848]
  405768:	add	x16, x16, #0xf08
  40576c:	br	x17

0000000000405770 <basename@plt>:
  405770:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405774:	ldr	x17, [x16, #3856]
  405778:	add	x16, x16, #0xf10
  40577c:	br	x17

0000000000405780 <read@plt>:
  405780:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405784:	ldr	x17, [x16, #3864]
  405788:	add	x16, x16, #0xf18
  40578c:	br	x17

0000000000405790 <sd_bus_message_get_member@plt>:
  405790:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405794:	ldr	x17, [x16, #3872]
  405798:	add	x16, x16, #0xf20
  40579c:	br	x17

00000000004057a0 <strstr@plt>:
  4057a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4057a4:	ldr	x17, [x16, #3880]
  4057a8:	add	x16, x16, #0xf28
  4057ac:	br	x17

00000000004057b0 <dirname@plt>:
  4057b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4057b4:	ldr	x17, [x16, #3888]
  4057b8:	add	x16, x16, #0xf30
  4057bc:	br	x17

00000000004057c0 <open_parent@plt>:
  4057c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4057c4:	ldr	x17, [x16, #3896]
  4057c8:	add	x16, x16, #0xf38
  4057cc:	br	x17

00000000004057d0 <copy_tree_at_full@plt>:
  4057d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4057d4:	ldr	x17, [x16, #3904]
  4057d8:	add	x16, x16, #0xf40
  4057dc:	br	x17

00000000004057e0 <send_one_fd_iov_sa@plt>:
  4057e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4057e4:	ldr	x17, [x16, #3912]
  4057e8:	add	x16, x16, #0xf48
  4057ec:	br	x17

00000000004057f0 <receive_one_fd@plt>:
  4057f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4057f4:	ldr	x17, [x16, #3920]
  4057f8:	add	x16, x16, #0xf50
  4057fc:	br	x17

0000000000405800 <sd_bus_get_current_message@plt>:
  405800:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405804:	ldr	x17, [x16, #3928]
  405808:	add	x16, x16, #0xf58
  40580c:	br	x17

0000000000405810 <bus_label_unescape_n@plt>:
  405810:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405814:	ldr	x17, [x16, #3936]
  405818:	add	x16, x16, #0xf60
  40581c:	br	x17

0000000000405820 <bus_label_escape@plt>:
  405820:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405824:	ldr	x17, [x16, #3944]
  405828:	add	x16, x16, #0xf68
  40582c:	br	x17

0000000000405830 <strv_consume@plt>:
  405830:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405834:	ldr	x17, [x16, #3952]
  405838:	add	x16, x16, #0xf70
  40583c:	br	x17

0000000000405840 <sd_bus_emit_signal@plt>:
  405840:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405844:	ldr	x17, [x16, #3960]
  405848:	add	x16, x16, #0xf78
  40584c:	br	x17

0000000000405850 <sd_bus_reply_method_error@plt>:
  405850:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405854:	ldr	x17, [x16, #3968]
  405858:	add	x16, x16, #0xf80
  40585c:	br	x17

0000000000405860 <sd_bus_close_unref@plt>:
  405860:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405864:	ldr	x17, [x16, #3976]
  405868:	add	x16, x16, #0xf88
  40586c:	br	x17

0000000000405870 <bus_property_get_id128@plt>:
  405870:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405874:	ldr	x17, [x16, #3984]
  405878:	add	x16, x16, #0xf90
  40587c:	br	x17

0000000000405880 <image_rename@plt>:
  405880:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405884:	ldr	x17, [x16, #3992]
  405888:	add	x16, x16, #0xf98
  40588c:	br	x17

0000000000405890 <image_clone@plt>:
  405890:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405894:	ldr	x17, [x16, #4000]
  405898:	add	x16, x16, #0xfa0
  40589c:	br	x17

00000000004058a0 <image_read_only@plt>:
  4058a0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4058a4:	ldr	x17, [x16, #4008]
  4058a8:	add	x16, x16, #0xfa8
  4058ac:	br	x17

00000000004058b0 <image_set_limit@plt>:
  4058b0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4058b4:	ldr	x17, [x16, #4016]
  4058b8:	add	x16, x16, #0xfb0
  4058bc:	br	x17

00000000004058c0 <image_read_metadata@plt>:
  4058c0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4058c4:	ldr	x17, [x16, #4024]
  4058c8:	add	x16, x16, #0xfb8
  4058cc:	br	x17

00000000004058d0 <internal_hashmap_ensure_allocated@plt>:
  4058d0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4058d4:	ldr	x17, [x16, #4032]
  4058d8:	add	x16, x16, #0xfc0
  4058dc:	br	x17

00000000004058e0 <sd_event_source_set_priority@plt>:
  4058e0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4058e4:	ldr	x17, [x16, #4040]
  4058e8:	add	x16, x16, #0xfc8
  4058ec:	br	x17

00000000004058f0 <internal_hashmap_clear@plt>:
  4058f0:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  4058f4:	ldr	x17, [x16, #4048]
  4058f8:	add	x16, x16, #0xfd0
  4058fc:	br	x17

0000000000405900 <bus_property_get_bool@plt>:
  405900:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405904:	ldr	x17, [x16, #4056]
  405908:	add	x16, x16, #0xfd8
  40590c:	br	x17

0000000000405910 <sd_event_add_child@plt>:
  405910:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405914:	ldr	x17, [x16, #4064]
  405918:	add	x16, x16, #0xfe0
  40591c:	br	x17

0000000000405920 <sigchld_code_to_string@plt>:
  405920:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405924:	ldr	x17, [x16, #4072]
  405928:	add	x16, x16, #0xfe8
  40592c:	br	x17

0000000000405930 <sd_bus_error_is_set@plt>:
  405930:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405934:	ldr	x17, [x16, #4080]
  405938:	add	x16, x16, #0xff0
  40593c:	br	x17

0000000000405940 <__lxstat64@plt>:
  405940:	adrp	x16, 43f000 <machine_vtable+0x4b8>
  405944:	ldr	x17, [x16, #4088]
  405948:	add	x16, x16, #0xff8
  40594c:	br	x17

Disassembly of section .text:

0000000000405950 <_start>:
  405950:	mov	x29, #0x0                   	// #0
  405954:	mov	x30, #0x0                   	// #0
  405958:	mov	x5, x0
  40595c:	ldr	x1, [sp]
  405960:	add	x2, sp, #0x8
  405964:	mov	x6, sp
  405968:	movz	x0, #0x0, lsl #48
  40596c:	movk	x0, #0x0, lsl #32
  405970:	movk	x0, #0x40, lsl #16
  405974:	movk	x0, #0x5b18
  405978:	movz	x3, #0x0, lsl #48
  40597c:	movk	x3, #0x0, lsl #32
  405980:	movk	x3, #0x41, lsl #16
  405984:	movk	x3, #0xab58
  405988:	movz	x4, #0x0, lsl #48
  40598c:	movk	x4, #0x0, lsl #32
  405990:	movk	x4, #0x41, lsl #16
  405994:	movk	x4, #0xabd8
  405998:	bl	404ae0 <__libc_start_main@plt>
  40599c:	bl	404af0 <abort@plt>

00000000004059a0 <call_weak_fn>:
  4059a0:	adrp	x0, 43f000 <machine_vtable+0x4b8>
  4059a4:	ldr	x0, [x0, #2024]
  4059a8:	cbz	x0, 4059b0 <call_weak_fn+0x10>
  4059ac:	b	404b00 <__gmon_start__@plt>
  4059b0:	ret

00000000004059b4 <deregister_tm_clones>:
  4059b4:	stp	x29, x30, [sp, #-32]!
  4059b8:	mov	x29, sp
  4059bc:	adrp	x0, 440000 <__TMC_END__>
  4059c0:	add	x0, x0, #0x0
  4059c4:	str	x0, [sp, #24]
  4059c8:	ldr	x0, [sp, #24]
  4059cc:	str	x0, [sp, #24]
  4059d0:	ldr	x1, [sp, #24]
  4059d4:	adrp	x0, 440000 <__TMC_END__>
  4059d8:	add	x0, x0, #0x0
  4059dc:	cmp	x1, x0
  4059e0:	b.eq	405a1c <deregister_tm_clones+0x68>  // b.none
  4059e4:	adrp	x0, 41a000 <operation_new+0x40>
  4059e8:	add	x0, x0, #0xc00
  4059ec:	ldr	x0, [x0]
  4059f0:	str	x0, [sp, #16]
  4059f4:	ldr	x0, [sp, #16]
  4059f8:	str	x0, [sp, #16]
  4059fc:	ldr	x0, [sp, #16]
  405a00:	cmp	x0, #0x0
  405a04:	b.eq	405a20 <deregister_tm_clones+0x6c>  // b.none
  405a08:	ldr	x1, [sp, #16]
  405a0c:	adrp	x0, 440000 <__TMC_END__>
  405a10:	add	x0, x0, #0x0
  405a14:	blr	x1
  405a18:	b	405a20 <deregister_tm_clones+0x6c>
  405a1c:	nop
  405a20:	ldp	x29, x30, [sp], #32
  405a24:	ret

0000000000405a28 <register_tm_clones>:
  405a28:	stp	x29, x30, [sp, #-48]!
  405a2c:	mov	x29, sp
  405a30:	adrp	x0, 440000 <__TMC_END__>
  405a34:	add	x0, x0, #0x0
  405a38:	str	x0, [sp, #40]
  405a3c:	ldr	x0, [sp, #40]
  405a40:	str	x0, [sp, #40]
  405a44:	ldr	x1, [sp, #40]
  405a48:	adrp	x0, 440000 <__TMC_END__>
  405a4c:	add	x0, x0, #0x0
  405a50:	sub	x0, x1, x0
  405a54:	asr	x0, x0, #3
  405a58:	lsr	x1, x0, #63
  405a5c:	add	x0, x1, x0
  405a60:	asr	x0, x0, #1
  405a64:	str	x0, [sp, #32]
  405a68:	ldr	x0, [sp, #32]
  405a6c:	cmp	x0, #0x0
  405a70:	b.eq	405ab0 <register_tm_clones+0x88>  // b.none
  405a74:	adrp	x0, 41a000 <operation_new+0x40>
  405a78:	add	x0, x0, #0xc08
  405a7c:	ldr	x0, [x0]
  405a80:	str	x0, [sp, #24]
  405a84:	ldr	x0, [sp, #24]
  405a88:	str	x0, [sp, #24]
  405a8c:	ldr	x0, [sp, #24]
  405a90:	cmp	x0, #0x0
  405a94:	b.eq	405ab4 <register_tm_clones+0x8c>  // b.none
  405a98:	ldr	x2, [sp, #24]
  405a9c:	ldr	x1, [sp, #32]
  405aa0:	adrp	x0, 440000 <__TMC_END__>
  405aa4:	add	x0, x0, #0x0
  405aa8:	blr	x2
  405aac:	b	405ab4 <register_tm_clones+0x8c>
  405ab0:	nop
  405ab4:	ldp	x29, x30, [sp], #48
  405ab8:	ret

0000000000405abc <__do_global_dtors_aux>:
  405abc:	stp	x29, x30, [sp, #-16]!
  405ac0:	mov	x29, sp
  405ac4:	adrp	x0, 440000 <__TMC_END__>
  405ac8:	add	x0, x0, #0x38
  405acc:	ldrb	w0, [x0]
  405ad0:	and	x0, x0, #0xff
  405ad4:	cmp	x0, #0x0
  405ad8:	b.ne	405af4 <__do_global_dtors_aux+0x38>  // b.any
  405adc:	bl	4059b4 <deregister_tm_clones>
  405ae0:	adrp	x0, 440000 <__TMC_END__>
  405ae4:	add	x0, x0, #0x38
  405ae8:	mov	w1, #0x1                   	// #1
  405aec:	strb	w1, [x0]
  405af0:	b	405af8 <__do_global_dtors_aux+0x3c>
  405af4:	nop
  405af8:	ldp	x29, x30, [sp], #16
  405afc:	ret

0000000000405b00 <frame_dummy>:
  405b00:	stp	x29, x30, [sp, #-16]!
  405b04:	mov	x29, sp
  405b08:	bl	405a28 <register_tm_clones>
  405b0c:	nop
  405b10:	ldp	x29, x30, [sp], #16
  405b14:	ret

0000000000405b18 <main>:
  405b18:	sub	sp, sp, #0x30
  405b1c:	stp	x29, x30, [sp, #32]
  405b20:	add	x29, sp, #0x20
  405b24:	mov	w8, wzr
  405b28:	mov	w9, #0x1                   	// #1
  405b2c:	stur	wzr, [x29, #-4]
  405b30:	stur	w0, [x29, #-8]
  405b34:	str	x1, [sp, #16]
  405b38:	ldur	w0, [x29, #-8]
  405b3c:	ldr	x1, [sp, #16]
  405b40:	str	w8, [sp, #8]
  405b44:	str	w9, [sp, #4]
  405b48:	bl	405b90 <save_argc_argv>
  405b4c:	ldur	w0, [x29, #-8]
  405b50:	ldr	x1, [sp, #16]
  405b54:	bl	405bc4 <run>
  405b58:	str	w0, [sp, #12]
  405b5c:	bl	404b10 <ask_password_agent_close@plt>
  405b60:	bl	404b20 <polkit_agent_close@plt>
  405b64:	bl	404b30 <pager_close@plt>
  405b68:	bl	404b40 <mac_selinux_finish@plt>
  405b6c:	bl	406008 <static_destruct>
  405b70:	ldr	w8, [sp, #12]
  405b74:	cmp	w8, #0x0
  405b78:	ldr	w8, [sp, #4]
  405b7c:	ldr	w9, [sp, #8]
  405b80:	csel	w0, w8, w9, lt  // lt = tstop
  405b84:	ldp	x29, x30, [sp, #32]
  405b88:	add	sp, sp, #0x30
  405b8c:	ret

0000000000405b90 <save_argc_argv>:
  405b90:	sub	sp, sp, #0x10
  405b94:	adrp	x8, 440000 <__TMC_END__>
  405b98:	add	x8, x8, #0x40
  405b9c:	adrp	x9, 440000 <__TMC_END__>
  405ba0:	add	x9, x9, #0x48
  405ba4:	str	w0, [sp, #12]
  405ba8:	str	x1, [sp]
  405bac:	ldr	w10, [sp, #12]
  405bb0:	str	w10, [x8]
  405bb4:	ldr	x8, [sp]
  405bb8:	str	x8, [x9]
  405bbc:	add	sp, sp, #0x10
  405bc0:	ret

0000000000405bc4 <run>:
  405bc4:	sub	sp, sp, #0xd0
  405bc8:	stp	x29, x30, [sp, #192]
  405bcc:	add	x29, sp, #0xc0
  405bd0:	mov	x8, xzr
  405bd4:	mov	w9, #0x20                  	// #32
  405bd8:	mov	w10, #0x12                  	// #18
  405bdc:	adrp	x11, 41a000 <operation_new+0x40>
  405be0:	add	x11, x11, #0xc38
  405be4:	add	x11, x11, #0x3
  405be8:	adrp	x12, 41a000 <operation_new+0x40>
  405bec:	add	x12, x12, #0xc52
  405bf0:	stur	w0, [x29, #-8]
  405bf4:	stur	x1, [x29, #-16]
  405bf8:	stur	x8, [x29, #-24]
  405bfc:	mov	w0, w9
  405c00:	str	w10, [sp, #76]
  405c04:	str	x11, [sp, #64]
  405c08:	str	x12, [sp, #56]
  405c0c:	bl	404b50 <log_set_facility@plt>
  405c10:	bl	404b60 <log_setup_service@plt>
  405c14:	ldr	w0, [sp, #76]
  405c18:	bl	404b70 <umask@plt>
  405c1c:	ldur	w9, [x29, #-8]
  405c20:	cmp	w9, #0x1
  405c24:	b.eq	405cb0 <run+0xec>  // b.none
  405c28:	mov	w8, #0x3                   	// #3
  405c2c:	stur	w8, [x29, #-32]
  405c30:	stur	wzr, [x29, #-36]
  405c34:	stur	wzr, [x29, #-40]
  405c38:	ldur	w0, [x29, #-40]
  405c3c:	bl	404b80 <log_get_max_level_realm@plt>
  405c40:	ldur	w8, [x29, #-32]
  405c44:	and	w8, w8, #0x7
  405c48:	cmp	w0, w8
  405c4c:	b.lt	405c80 <run+0xbc>  // b.tstop
  405c50:	ldur	w8, [x29, #-40]
  405c54:	ldur	w9, [x29, #-32]
  405c58:	orr	w0, w9, w8, lsl #10
  405c5c:	ldur	w1, [x29, #-36]
  405c60:	ldr	x2, [sp, #64]
  405c64:	mov	w3, #0x166                 	// #358
  405c68:	ldr	x4, [sp, #56]
  405c6c:	adrp	x5, 41a000 <operation_new+0x40>
  405c70:	add	x5, x5, #0xc56
  405c74:	bl	404b90 <log_internal_realm@plt>
  405c78:	str	w0, [sp, #52]
  405c7c:	b	405c94 <run+0xd0>
  405c80:	ldur	w0, [x29, #-36]
  405c84:	bl	404ba0 <abs@plt>
  405c88:	mov	w8, wzr
  405c8c:	subs	w8, w8, w0, uxtb
  405c90:	str	w8, [sp, #52]
  405c94:	ldr	w8, [sp, #52]
  405c98:	stur	w8, [x29, #-44]
  405c9c:	mov	w8, #0xffffffea            	// #-22
  405ca0:	stur	w8, [x29, #-4]
  405ca4:	mov	w8, #0x1                   	// #1
  405ca8:	stur	w8, [x29, #-48]
  405cac:	b	405ff0 <run+0x42c>
  405cb0:	adrp	x0, 41a000 <operation_new+0x40>
  405cb4:	add	x0, x0, #0xc77
  405cb8:	mov	w1, #0x1ed                 	// #493
  405cbc:	bl	404bb0 <mkdir_label@plt>
  405cc0:	mov	w8, wzr
  405cc4:	mov	w0, w8
  405cc8:	mov	x9, xzr
  405ccc:	mov	x1, x9
  405cd0:	mov	w2, #0x11                  	// #17
  405cd4:	mov	w3, #0xf                   	// #15
  405cd8:	mov	w4, #0x2                   	// #2
  405cdc:	mov	w5, #0xffffffff            	// #-1
  405ce0:	bl	404bc0 <sigprocmask_many@plt>
  405ce4:	cmp	w0, #0x0
  405ce8:	cset	w8, ge  // ge = tcont
  405cec:	mov	w10, #0x1                   	// #1
  405cf0:	eor	w8, w8, #0x1
  405cf4:	eor	w8, w8, w10
  405cf8:	eor	w8, w8, w10
  405cfc:	and	w8, w8, #0x1
  405d00:	mov	w1, w8
  405d04:	sxtw	x9, w1
  405d08:	cbz	x9, 405d30 <run+0x16c>
  405d0c:	mov	w8, wzr
  405d10:	mov	w0, w8
  405d14:	adrp	x1, 41a000 <operation_new+0x40>
  405d18:	add	x1, x1, #0xc8d
  405d1c:	ldr	x2, [sp, #64]
  405d20:	mov	w3, #0x16f                 	// #367
  405d24:	adrp	x4, 41a000 <operation_new+0x40>
  405d28:	add	x4, x4, #0xcd2
  405d2c:	bl	404bd0 <log_assert_failed_realm@plt>
  405d30:	sub	x0, x29, #0x18
  405d34:	bl	4060bc <manager_new>
  405d38:	stur	w0, [x29, #-28]
  405d3c:	ldur	w8, [x29, #-28]
  405d40:	cmp	w8, #0x0
  405d44:	cset	w8, ge  // ge = tcont
  405d48:	tbnz	w8, #0, 405dd8 <run+0x214>
  405d4c:	mov	w8, #0x3                   	// #3
  405d50:	stur	w8, [x29, #-52]
  405d54:	ldur	w8, [x29, #-28]
  405d58:	stur	w8, [x29, #-56]
  405d5c:	stur	wzr, [x29, #-60]
  405d60:	ldur	w0, [x29, #-60]
  405d64:	bl	404b80 <log_get_max_level_realm@plt>
  405d68:	ldur	w8, [x29, #-52]
  405d6c:	and	w8, w8, #0x7
  405d70:	cmp	w0, w8
  405d74:	b.lt	405da8 <run+0x1e4>  // b.tstop
  405d78:	ldur	w8, [x29, #-60]
  405d7c:	ldur	w9, [x29, #-52]
  405d80:	orr	w0, w9, w8, lsl #10
  405d84:	ldur	w1, [x29, #-56]
  405d88:	ldr	x2, [sp, #64]
  405d8c:	mov	w3, #0x173                 	// #371
  405d90:	ldr	x4, [sp, #56]
  405d94:	adrp	x5, 41a000 <operation_new+0x40>
  405d98:	add	x5, x5, #0xce8
  405d9c:	bl	404b90 <log_internal_realm@plt>
  405da0:	str	w0, [sp, #48]
  405da4:	b	405dbc <run+0x1f8>
  405da8:	ldur	w0, [x29, #-56]
  405dac:	bl	404ba0 <abs@plt>
  405db0:	mov	w8, wzr
  405db4:	subs	w8, w8, w0, uxtb
  405db8:	str	w8, [sp, #48]
  405dbc:	ldr	w8, [sp, #48]
  405dc0:	stur	w8, [x29, #-64]
  405dc4:	ldur	w8, [x29, #-64]
  405dc8:	stur	w8, [x29, #-4]
  405dcc:	mov	w8, #0x1                   	// #1
  405dd0:	stur	w8, [x29, #-48]
  405dd4:	b	405ff0 <run+0x42c>
  405dd8:	ldur	x0, [x29, #-24]
  405ddc:	bl	4062f4 <manager_startup>
  405de0:	stur	w0, [x29, #-28]
  405de4:	ldur	w8, [x29, #-28]
  405de8:	cmp	w8, #0x0
  405dec:	cset	w8, ge  // ge = tcont
  405df0:	tbnz	w8, #0, 405e80 <run+0x2bc>
  405df4:	mov	w8, #0x3                   	// #3
  405df8:	stur	w8, [x29, #-68]
  405dfc:	ldur	w8, [x29, #-28]
  405e00:	stur	w8, [x29, #-72]
  405e04:	stur	wzr, [x29, #-76]
  405e08:	ldur	w0, [x29, #-76]
  405e0c:	bl	404b80 <log_get_max_level_realm@plt>
  405e10:	ldur	w8, [x29, #-68]
  405e14:	and	w8, w8, #0x7
  405e18:	cmp	w0, w8
  405e1c:	b.lt	405e50 <run+0x28c>  // b.tstop
  405e20:	ldur	w8, [x29, #-76]
  405e24:	ldur	w9, [x29, #-68]
  405e28:	orr	w0, w9, w8, lsl #10
  405e2c:	ldur	w1, [x29, #-72]
  405e30:	ldr	x2, [sp, #64]
  405e34:	mov	w3, #0x177                 	// #375
  405e38:	ldr	x4, [sp, #56]
  405e3c:	adrp	x5, 41a000 <operation_new+0x40>
  405e40:	add	x5, x5, #0xd0e
  405e44:	bl	404b90 <log_internal_realm@plt>
  405e48:	str	w0, [sp, #44]
  405e4c:	b	405e64 <run+0x2a0>
  405e50:	ldur	w0, [x29, #-72]
  405e54:	bl	404ba0 <abs@plt>
  405e58:	mov	w8, wzr
  405e5c:	subs	w8, w8, w0, uxtb
  405e60:	str	w8, [sp, #44]
  405e64:	ldr	w8, [sp, #44]
  405e68:	stur	w8, [x29, #-80]
  405e6c:	ldur	w8, [x29, #-80]
  405e70:	stur	w8, [x29, #-4]
  405e74:	mov	w8, #0x1                   	// #1
  405e78:	stur	w8, [x29, #-48]
  405e7c:	b	405ff0 <run+0x42c>
  405e80:	mov	w8, #0x7                   	// #7
  405e84:	stur	w8, [x29, #-84]
  405e88:	stur	wzr, [x29, #-88]
  405e8c:	stur	wzr, [x29, #-92]
  405e90:	ldur	w0, [x29, #-92]
  405e94:	bl	404b80 <log_get_max_level_realm@plt>
  405e98:	ldur	w8, [x29, #-84]
  405e9c:	and	w8, w8, #0x7
  405ea0:	cmp	w0, w8
  405ea4:	b.lt	405ef8 <run+0x334>  // b.tstop
  405ea8:	ldur	w8, [x29, #-92]
  405eac:	ldur	w9, [x29, #-84]
  405eb0:	orr	w0, w9, w8, lsl #10
  405eb4:	ldur	w1, [x29, #-88]
  405eb8:	str	w0, [sp, #40]
  405ebc:	str	w1, [sp, #36]
  405ec0:	bl	404be0 <getpid_cached@plt>
  405ec4:	ldr	w8, [sp, #40]
  405ec8:	str	w0, [sp, #32]
  405ecc:	mov	w0, w8
  405ed0:	ldr	w1, [sp, #36]
  405ed4:	ldr	x2, [sp, #64]
  405ed8:	mov	w3, #0x179                 	// #377
  405edc:	ldr	x4, [sp, #56]
  405ee0:	adrp	x5, 41a000 <operation_new+0x40>
  405ee4:	add	x5, x5, #0xd32
  405ee8:	ldr	w6, [sp, #32]
  405eec:	bl	404b90 <log_internal_realm@plt>
  405ef0:	str	w0, [sp, #28]
  405ef4:	b	405f0c <run+0x348>
  405ef8:	ldur	w0, [x29, #-88]
  405efc:	bl	404ba0 <abs@plt>
  405f00:	mov	w8, wzr
  405f04:	subs	w8, w8, w0, uxtb
  405f08:	str	w8, [sp, #28]
  405f0c:	ldr	w8, [sp, #28]
  405f10:	str	w8, [sp, #96]
  405f14:	mov	w8, wzr
  405f18:	mov	w0, w8
  405f1c:	adrp	x1, 41a000 <operation_new+0x40>
  405f20:	add	x1, x1, #0xd55
  405f24:	bl	404bf0 <sd_notify@plt>
  405f28:	ldur	x9, [x29, #-24]
  405f2c:	mov	x0, x9
  405f30:	bl	406414 <manager_run>
  405f34:	stur	w0, [x29, #-28]
  405f38:	mov	w8, #0x7                   	// #7
  405f3c:	str	w8, [sp, #92]
  405f40:	str	wzr, [sp, #88]
  405f44:	str	wzr, [sp, #84]
  405f48:	ldr	w0, [sp, #84]
  405f4c:	bl	404b80 <log_get_max_level_realm@plt>
  405f50:	ldr	w8, [sp, #92]
  405f54:	and	w8, w8, #0x7
  405f58:	cmp	w0, w8
  405f5c:	b.lt	405fb0 <run+0x3ec>  // b.tstop
  405f60:	ldr	w8, [sp, #84]
  405f64:	ldr	w9, [sp, #92]
  405f68:	orr	w0, w9, w8, lsl #10
  405f6c:	ldr	w1, [sp, #88]
  405f70:	str	w0, [sp, #24]
  405f74:	str	w1, [sp, #20]
  405f78:	bl	404be0 <getpid_cached@plt>
  405f7c:	ldr	w8, [sp, #24]
  405f80:	str	w0, [sp, #16]
  405f84:	mov	w0, w8
  405f88:	ldr	w1, [sp, #20]
  405f8c:	ldr	x2, [sp, #64]
  405f90:	mov	w3, #0x180                 	// #384
  405f94:	ldr	x4, [sp, #56]
  405f98:	adrp	x5, 41a000 <operation_new+0x40>
  405f9c:	add	x5, x5, #0xd7b
  405fa0:	ldr	w6, [sp, #16]
  405fa4:	bl	404b90 <log_internal_realm@plt>
  405fa8:	str	w0, [sp, #12]
  405fac:	b	405fc4 <run+0x400>
  405fb0:	ldr	w0, [sp, #88]
  405fb4:	bl	404ba0 <abs@plt>
  405fb8:	mov	w8, wzr
  405fbc:	subs	w8, w8, w0, uxtb
  405fc0:	str	w8, [sp, #12]
  405fc4:	ldr	w8, [sp, #12]
  405fc8:	str	w8, [sp, #80]
  405fcc:	mov	w8, wzr
  405fd0:	mov	w0, w8
  405fd4:	adrp	x1, 41a000 <operation_new+0x40>
  405fd8:	add	x1, x1, #0xd9e
  405fdc:	bl	404bf0 <sd_notify@plt>
  405fe0:	ldur	w8, [x29, #-28]
  405fe4:	stur	w8, [x29, #-4]
  405fe8:	mov	w8, #0x1                   	// #1
  405fec:	stur	w8, [x29, #-48]
  405ff0:	sub	x0, x29, #0x18
  405ff4:	bl	406088 <manager_unrefp>
  405ff8:	ldur	w0, [x29, #-4]
  405ffc:	ldp	x29, x30, [sp, #192]
  406000:	add	sp, sp, #0xd0
  406004:	ret

0000000000406008 <static_destruct>:
  406008:	sub	sp, sp, #0x20
  40600c:	stp	x29, x30, [sp, #16]
  406010:	add	x29, sp, #0x10
  406014:	adrp	x8, 43f000 <machine_vtable+0x4b8>
  406018:	ldr	x8, [x8, #2032]
  40601c:	str	x8, [sp]
  406020:	cbnz	x8, 406028 <static_destruct+0x20>
  406024:	b	40607c <static_destruct+0x74>
  406028:	ldr	x0, [sp]
  40602c:	mov	x1, #0x8                   	// #8
  406030:	bl	407bcc <ALIGN_TO>
  406034:	str	x0, [sp, #8]
  406038:	ldr	x8, [sp, #8]
  40603c:	adrp	x9, 43f000 <machine_vtable+0x4b8>
  406040:	ldr	x9, [x9, #2040]
  406044:	cmp	x8, x9
  406048:	b.cs	40607c <static_destruct+0x74>  // b.hs, b.nlast
  40604c:	ldr	x8, [sp, #8]
  406050:	ldr	x8, [x8, #8]
  406054:	ldr	x9, [sp, #8]
  406058:	ldr	x0, [x9]
  40605c:	blr	x8
  406060:	ldr	x8, [sp, #8]
  406064:	add	x8, x8, #0x10
  406068:	mov	x0, x8
  40606c:	mov	x1, #0x8                   	// #8
  406070:	bl	407bcc <ALIGN_TO>
  406074:	str	x0, [sp, #8]
  406078:	b	406038 <static_destruct+0x30>
  40607c:	ldp	x29, x30, [sp, #16]
  406080:	add	sp, sp, #0x20
  406084:	ret

0000000000406088 <manager_unrefp>:
  406088:	sub	sp, sp, #0x20
  40608c:	stp	x29, x30, [sp, #16]
  406090:	add	x29, sp, #0x10
  406094:	str	x0, [sp, #8]
  406098:	ldr	x8, [sp, #8]
  40609c:	ldr	x8, [x8]
  4060a0:	cbz	x8, 4060b0 <manager_unrefp+0x28>
  4060a4:	ldr	x8, [sp, #8]
  4060a8:	ldr	x0, [x8]
  4060ac:	bl	4064c0 <manager_unref>
  4060b0:	ldp	x29, x30, [sp, #16]
  4060b4:	add	sp, sp, #0x20
  4060b8:	ret

00000000004060bc <manager_new>:
  4060bc:	sub	sp, sp, #0x50
  4060c0:	stp	x29, x30, [sp, #64]
  4060c4:	add	x29, sp, #0x40
  4060c8:	mov	x8, xzr
  4060cc:	adrp	x9, 41a000 <operation_new+0x40>
  4060d0:	add	x9, x9, #0xc38
  4060d4:	add	x2, x9, #0x3
  4060d8:	stur	x0, [x29, #-16]
  4060dc:	stur	x8, [x29, #-24]
  4060e0:	str	x2, [sp, #8]
  4060e4:	ldur	x8, [x29, #-16]
  4060e8:	cmp	x8, #0x0
  4060ec:	cset	w9, ne  // ne = any
  4060f0:	mov	w10, #0x1                   	// #1
  4060f4:	eor	w9, w9, #0x1
  4060f8:	eor	w9, w9, w10
  4060fc:	eor	w9, w9, w10
  406100:	and	w9, w9, #0x1
  406104:	mov	w0, w9
  406108:	sxtw	x8, w0
  40610c:	cbz	x8, 406134 <manager_new+0x78>
  406110:	mov	w8, wzr
  406114:	mov	w0, w8
  406118:	adrp	x1, 41a000 <operation_new+0x40>
  40611c:	add	x1, x1, #0xdf8
  406120:	ldr	x2, [sp, #8]
  406124:	mov	w3, #0x24                  	// #36
  406128:	adrp	x4, 41a000 <operation_new+0x40>
  40612c:	add	x4, x4, #0xdfc
  406130:	bl	404bd0 <log_assert_failed_realm@plt>
  406134:	mov	x0, #0x1                   	// #1
  406138:	mov	x1, #0x68                  	// #104
  40613c:	bl	404c00 <calloc@plt>
  406140:	stur	x0, [x29, #-24]
  406144:	ldur	x8, [x29, #-24]
  406148:	cbnz	x8, 406160 <manager_new+0xa4>
  40614c:	mov	w8, #0xfffffff4            	// #-12
  406150:	stur	w8, [x29, #-4]
  406154:	mov	w8, #0x1                   	// #1
  406158:	str	w8, [sp, #32]
  40615c:	b	4062dc <manager_new+0x220>
  406160:	adrp	x0, 41a000 <operation_new+0x40>
  406164:	add	x0, x0, #0xc18
  406168:	bl	404c10 <internal_hashmap_new@plt>
  40616c:	ldur	x8, [x29, #-24]
  406170:	str	x0, [x8, #16]
  406174:	adrp	x0, 43f000 <machine_vtable+0x4b8>
  406178:	add	x0, x0, #0x590
  40617c:	bl	404c10 <internal_hashmap_new@plt>
  406180:	ldur	x8, [x29, #-24]
  406184:	str	x0, [x8, #24]
  406188:	mov	x8, xzr
  40618c:	mov	x0, x8
  406190:	bl	404c10 <internal_hashmap_new@plt>
  406194:	ldur	x8, [x29, #-24]
  406198:	str	x0, [x8, #32]
  40619c:	ldur	x8, [x29, #-24]
  4061a0:	ldr	x8, [x8, #16]
  4061a4:	cbz	x8, 4061c0 <manager_new+0x104>
  4061a8:	ldur	x8, [x29, #-24]
  4061ac:	ldr	x8, [x8, #24]
  4061b0:	cbz	x8, 4061c0 <manager_new+0x104>
  4061b4:	ldur	x8, [x29, #-24]
  4061b8:	ldr	x8, [x8, #32]
  4061bc:	cbnz	x8, 4061d4 <manager_new+0x118>
  4061c0:	mov	w8, #0xfffffff4            	// #-12
  4061c4:	stur	w8, [x29, #-4]
  4061c8:	mov	w8, #0x1                   	// #1
  4061cc:	str	w8, [sp, #32]
  4061d0:	b	4062dc <manager_new+0x220>
  4061d4:	ldur	x0, [x29, #-24]
  4061d8:	bl	404c20 <sd_event_default@plt>
  4061dc:	stur	w0, [x29, #-28]
  4061e0:	ldur	w8, [x29, #-28]
  4061e4:	cmp	w8, #0x0
  4061e8:	cset	w8, ge  // ge = tcont
  4061ec:	tbnz	w8, #0, 406204 <manager_new+0x148>
  4061f0:	ldur	w8, [x29, #-28]
  4061f4:	stur	w8, [x29, #-4]
  4061f8:	mov	w8, #0x1                   	// #1
  4061fc:	str	w8, [sp, #32]
  406200:	b	4062dc <manager_new+0x220>
  406204:	ldur	x8, [x29, #-24]
  406208:	ldr	x0, [x8]
  40620c:	mov	x8, xzr
  406210:	mov	x1, x8
  406214:	mov	w2, #0x2                   	// #2
  406218:	mov	x3, x8
  40621c:	mov	x4, x8
  406220:	bl	404c30 <sd_event_add_signal@plt>
  406224:	stur	w0, [x29, #-28]
  406228:	ldur	w9, [x29, #-28]
  40622c:	cmp	w9, #0x0
  406230:	cset	w9, ge  // ge = tcont
  406234:	tbnz	w9, #0, 40624c <manager_new+0x190>
  406238:	ldur	w8, [x29, #-28]
  40623c:	stur	w8, [x29, #-4]
  406240:	mov	w8, #0x1                   	// #1
  406244:	str	w8, [sp, #32]
  406248:	b	4062dc <manager_new+0x220>
  40624c:	ldur	x8, [x29, #-24]
  406250:	ldr	x0, [x8]
  406254:	mov	x8, xzr
  406258:	mov	x1, x8
  40625c:	mov	w2, #0xf                   	// #15
  406260:	mov	x3, x8
  406264:	mov	x4, x8
  406268:	bl	404c30 <sd_event_add_signal@plt>
  40626c:	stur	w0, [x29, #-28]
  406270:	ldur	w9, [x29, #-28]
  406274:	cmp	w9, #0x0
  406278:	cset	w9, ge  // ge = tcont
  40627c:	tbnz	w9, #0, 406294 <manager_new+0x1d8>
  406280:	ldur	w8, [x29, #-28]
  406284:	stur	w8, [x29, #-4]
  406288:	mov	w8, #0x1                   	// #1
  40628c:	str	w8, [sp, #32]
  406290:	b	4062dc <manager_new+0x220>
  406294:	ldur	x8, [x29, #-24]
  406298:	ldr	x0, [x8]
  40629c:	mov	w9, #0x1                   	// #1
  4062a0:	mov	w1, w9
  4062a4:	str	w9, [sp, #4]
  4062a8:	bl	404c40 <sd_event_set_watchdog@plt>
  4062ac:	ldur	x8, [x29, #-24]
  4062b0:	str	x8, [sp, #24]
  4062b4:	mov	x8, xzr
  4062b8:	stur	x8, [x29, #-24]
  4062bc:	ldr	x8, [sp, #24]
  4062c0:	str	x8, [sp, #16]
  4062c4:	ldr	x8, [sp, #16]
  4062c8:	ldur	x10, [x29, #-16]
  4062cc:	str	x8, [x10]
  4062d0:	stur	wzr, [x29, #-4]
  4062d4:	ldr	w9, [sp, #4]
  4062d8:	str	w9, [sp, #32]
  4062dc:	sub	x0, x29, #0x18
  4062e0:	bl	406088 <manager_unrefp>
  4062e4:	ldur	w0, [x29, #-4]
  4062e8:	ldp	x29, x30, [sp, #64]
  4062ec:	add	sp, sp, #0x50
  4062f0:	ret

00000000004062f4 <manager_startup>:
  4062f4:	sub	sp, sp, #0x60
  4062f8:	stp	x29, x30, [sp, #80]
  4062fc:	add	x29, sp, #0x50
  406300:	adrp	x8, 41a000 <operation_new+0x40>
  406304:	add	x8, x8, #0xc38
  406308:	add	x2, x8, #0x3
  40630c:	stur	x0, [x29, #-16]
  406310:	str	x2, [sp]
  406314:	ldur	x8, [x29, #-16]
  406318:	cmp	x8, #0x0
  40631c:	cset	w9, ne  // ne = any
  406320:	mov	w10, #0x1                   	// #1
  406324:	eor	w9, w9, #0x1
  406328:	eor	w9, w9, w10
  40632c:	eor	w9, w9, w10
  406330:	and	w9, w9, #0x1
  406334:	mov	w0, w9
  406338:	sxtw	x8, w0
  40633c:	cbz	x8, 406364 <manager_startup+0x70>
  406340:	mov	w8, wzr
  406344:	mov	w0, w8
  406348:	adrp	x1, 41a000 <operation_new+0x40>
  40634c:	add	x1, x1, #0xe18
  406350:	ldr	x2, [sp]
  406354:	mov	w3, #0x132                 	// #306
  406358:	adrp	x4, 41a000 <operation_new+0x40>
  40635c:	add	x4, x4, #0xe1a
  406360:	bl	404bd0 <log_assert_failed_realm@plt>
  406364:	ldur	x0, [x29, #-16]
  406368:	bl	406698 <manager_connect_bus>
  40636c:	str	w0, [sp, #28]
  406370:	ldr	w8, [sp, #28]
  406374:	cmp	w8, #0x0
  406378:	cset	w8, ge  // ge = tcont
  40637c:	tbnz	w8, #0, 40638c <manager_startup+0x98>
  406380:	ldr	w8, [sp, #28]
  406384:	stur	w8, [x29, #-4]
  406388:	b	406404 <manager_startup+0x110>
  40638c:	ldur	x0, [x29, #-16]
  406390:	bl	407224 <manager_enumerate_machines>
  406394:	ldur	x8, [x29, #-16]
  406398:	mov	x0, x8
  40639c:	mov	w9, wzr
  4063a0:	and	w1, w9, #0x1
  4063a4:	bl	407574 <manager_gc>
  4063a8:	add	x8, sp, #0x8
  4063ac:	mov	w9, #0xfffffffe            	// #-2
  4063b0:	str	w9, [sp, #8]
  4063b4:	mov	x10, xzr
  4063b8:	str	x10, [x8, #8]
  4063bc:	ldur	q0, [sp, #8]
  4063c0:	str	q0, [sp, #32]
  4063c4:	ldur	x8, [x29, #-16]
  4063c8:	ldr	x0, [x8, #16]
  4063cc:	add	x1, sp, #0x20
  4063d0:	sub	x2, x29, #0x18
  4063d4:	mov	x8, xzr
  4063d8:	mov	x3, x8
  4063dc:	bl	40779c <hashmap_iterate>
  4063e0:	tbnz	w0, #0, 4063e8 <manager_startup+0xf4>
  4063e4:	b	406400 <manager_startup+0x10c>
  4063e8:	ldur	x0, [x29, #-24]
  4063ec:	mov	x8, xzr
  4063f0:	mov	x1, x8
  4063f4:	mov	x2, x8
  4063f8:	bl	409334 <machine_start>
  4063fc:	b	4063c4 <manager_startup+0xd0>
  406400:	stur	wzr, [x29, #-4]
  406404:	ldur	w0, [x29, #-4]
  406408:	ldp	x29, x30, [sp, #80]
  40640c:	add	sp, sp, #0x60
  406410:	ret

0000000000406414 <manager_run>:
  406414:	sub	sp, sp, #0x20
  406418:	stp	x29, x30, [sp, #16]
  40641c:	add	x29, sp, #0x10
  406420:	adrp	x8, 41a000 <operation_new+0x40>
  406424:	add	x8, x8, #0xc38
  406428:	add	x2, x8, #0x3
  40642c:	str	x0, [sp, #8]
  406430:	str	x2, [sp]
  406434:	ldr	x8, [sp, #8]
  406438:	cmp	x8, #0x0
  40643c:	cset	w9, ne  // ne = any
  406440:	mov	w10, #0x1                   	// #1
  406444:	eor	w9, w9, #0x1
  406448:	eor	w9, w9, w10
  40644c:	eor	w9, w9, w10
  406450:	and	w9, w9, #0x1
  406454:	mov	w0, w9
  406458:	sxtw	x8, w0
  40645c:	cbz	x8, 406484 <manager_run+0x70>
  406460:	mov	w8, wzr
  406464:	mov	w0, w8
  406468:	adrp	x1, 41a000 <operation_new+0x40>
  40646c:	add	x1, x1, #0xe18
  406470:	ldr	x2, [sp]
  406474:	mov	w3, #0x152                 	// #338
  406478:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40647c:	add	x4, x4, #0x310
  406480:	bl	404bd0 <log_assert_failed_realm@plt>
  406484:	ldr	x8, [sp, #8]
  406488:	ldr	x0, [x8]
  40648c:	ldr	x8, [sp, #8]
  406490:	ldr	x1, [x8, #8]
  406494:	ldr	x5, [sp, #8]
  406498:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40649c:	add	x2, x2, #0x199
  4064a0:	mov	x3, #0xc380                	// #50048
  4064a4:	movk	x3, #0x1c9, lsl #16
  4064a8:	adrp	x4, 407000 <manager_connect_bus+0x968>
  4064ac:	add	x4, x4, #0xb04
  4064b0:	bl	404c50 <bus_event_loop_with_idle@plt>
  4064b4:	ldp	x29, x30, [sp, #16]
  4064b8:	add	sp, sp, #0x20
  4064bc:	ret

00000000004064c0 <manager_unref>:
  4064c0:	sub	sp, sp, #0x30
  4064c4:	stp	x29, x30, [sp, #32]
  4064c8:	add	x29, sp, #0x20
  4064cc:	adrp	x8, 41a000 <operation_new+0x40>
  4064d0:	add	x8, x8, #0xc38
  4064d4:	add	x2, x8, #0x3
  4064d8:	str	x0, [sp, #16]
  4064dc:	ldr	x8, [sp, #16]
  4064e0:	str	x2, [sp, #8]
  4064e4:	cbnz	x8, 4064f4 <manager_unref+0x34>
  4064e8:	mov	x8, xzr
  4064ec:	stur	x8, [x29, #-8]
  4064f0:	b	4065fc <manager_unref+0x13c>
  4064f4:	ldr	x8, [sp, #16]
  4064f8:	ldr	x8, [x8, #80]
  4064fc:	cbz	x8, 406510 <manager_unref+0x50>
  406500:	ldr	x8, [sp, #16]
  406504:	ldr	x0, [x8, #80]
  406508:	bl	41a80c <operation_free>
  40650c:	b	4064f4 <manager_unref+0x34>
  406510:	ldr	x8, [sp, #16]
  406514:	ldr	w9, [x8, #88]
  406518:	cmp	w9, #0x0
  40651c:	cset	w9, eq  // eq = none
  406520:	mov	w10, #0x1                   	// #1
  406524:	eor	w9, w9, #0x1
  406528:	eor	w9, w9, w10
  40652c:	eor	w9, w9, w10
  406530:	and	w9, w9, #0x1
  406534:	mov	w0, w9
  406538:	sxtw	x8, w0
  40653c:	cbz	x8, 406564 <manager_unref+0xa4>
  406540:	mov	w8, wzr
  406544:	mov	w0, w8
  406548:	adrp	x1, 41a000 <operation_new+0x40>
  40654c:	add	x1, x1, #0xdc1
  406550:	ldr	x2, [sp, #8]
  406554:	mov	w3, #0x4a                  	// #74
  406558:	adrp	x4, 41a000 <operation_new+0x40>
  40655c:	add	x4, x4, #0xdd6
  406560:	bl	404bd0 <log_assert_failed_realm@plt>
  406564:	ldr	x8, [sp, #16]
  406568:	ldr	x0, [x8, #16]
  40656c:	bl	40660c <hashmap_free>
  406570:	ldr	x8, [sp, #16]
  406574:	ldr	x8, [x8, #24]
  406578:	mov	x0, x8
  40657c:	bl	40660c <hashmap_free>
  406580:	ldr	x8, [sp, #16]
  406584:	ldr	x8, [x8, #32]
  406588:	mov	x0, x8
  40658c:	bl	40660c <hashmap_free>
  406590:	ldr	x8, [sp, #16]
  406594:	ldr	x8, [x8, #48]
  406598:	mov	x0, x8
  40659c:	bl	40660c <hashmap_free>
  4065a0:	ldr	x8, [sp, #16]
  4065a4:	ldr	x8, [x8, #56]
  4065a8:	mov	x0, x8
  4065ac:	bl	404c60 <sd_event_source_unref@plt>
  4065b0:	ldr	x8, [sp, #16]
  4065b4:	ldr	x8, [x8, #96]
  4065b8:	mov	x0, x8
  4065bc:	bl	404c60 <sd_event_source_unref@plt>
  4065c0:	ldr	x8, [sp, #16]
  4065c4:	ldr	x8, [x8, #40]
  4065c8:	mov	x0, x8
  4065cc:	bl	404c70 <bus_verify_polkit_async_registry_free@plt>
  4065d0:	ldr	x8, [sp, #16]
  4065d4:	ldr	x0, [x8, #8]
  4065d8:	bl	404c80 <sd_bus_flush_close_unref@plt>
  4065dc:	ldr	x8, [sp, #16]
  4065e0:	ldr	x8, [x8]
  4065e4:	mov	x0, x8
  4065e8:	bl	404c90 <sd_event_unref@plt>
  4065ec:	ldr	x8, [sp, #16]
  4065f0:	mov	x0, x8
  4065f4:	bl	40663c <mfree>
  4065f8:	stur	x0, [x29, #-8]
  4065fc:	ldur	x0, [x29, #-8]
  406600:	ldp	x29, x30, [sp, #32]
  406604:	add	sp, sp, #0x30
  406608:	ret

000000000040660c <hashmap_free>:
  40660c:	sub	sp, sp, #0x20
  406610:	stp	x29, x30, [sp, #16]
  406614:	add	x29, sp, #0x10
  406618:	mov	x8, xzr
  40661c:	str	x0, [sp, #8]
  406620:	ldr	x0, [sp, #8]
  406624:	mov	x1, x8
  406628:	mov	x2, x8
  40662c:	bl	404ca0 <internal_hashmap_free@plt>
  406630:	ldp	x29, x30, [sp, #16]
  406634:	add	sp, sp, #0x20
  406638:	ret

000000000040663c <mfree>:
  40663c:	sub	sp, sp, #0x20
  406640:	stp	x29, x30, [sp, #16]
  406644:	add	x29, sp, #0x10
  406648:	mov	x8, xzr
  40664c:	str	x0, [sp, #8]
  406650:	ldr	x0, [sp, #8]
  406654:	str	x8, [sp]
  406658:	bl	404cb0 <free@plt>
  40665c:	ldr	x0, [sp]
  406660:	ldp	x29, x30, [sp, #16]
  406664:	add	sp, sp, #0x20
  406668:	ret

000000000040666c <__unique_prefix_static_free_wrapper1>:
  40666c:	sub	sp, sp, #0x20
  406670:	stp	x29, x30, [sp, #16]
  406674:	add	x29, sp, #0x10
  406678:	str	x0, [sp, #8]
  40667c:	ldr	x8, [sp, #8]
  406680:	str	x8, [sp]
  406684:	ldr	x0, [sp]
  406688:	bl	407e48 <machine_free>
  40668c:	ldp	x29, x30, [sp, #16]
  406690:	add	sp, sp, #0x20
  406694:	ret

0000000000406698 <manager_connect_bus>:
  406698:	sub	sp, sp, #0x180
  40669c:	stp	x29, x30, [sp, #352]
  4066a0:	str	x28, [sp, #368]
  4066a4:	add	x29, sp, #0x160
  4066a8:	sub	x8, x29, #0x10
  4066ac:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  4066b0:	add	x9, x9, #0x17
  4066b4:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  4066b8:	add	x10, x10, #0x30
  4066bc:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  4066c0:	add	x11, x11, #0x4a
  4066c4:	adrp	x12, 41a000 <operation_new+0x40>
  4066c8:	add	x12, x12, #0xc38
  4066cc:	add	x12, x12, #0x3
  4066d0:	adrp	x13, 41a000 <operation_new+0x40>
  4066d4:	add	x13, x13, #0xe64
  4066d8:	str	x0, [x8]
  4066dc:	str	x8, [sp, #112]
  4066e0:	str	x9, [sp, #104]
  4066e4:	str	x10, [sp, #96]
  4066e8:	str	x11, [sp, #88]
  4066ec:	str	x12, [sp, #80]
  4066f0:	str	x13, [sp, #72]
  4066f4:	ldr	x8, [sp, #112]
  4066f8:	ldr	x9, [x8]
  4066fc:	cmp	x9, #0x0
  406700:	cset	w10, ne  // ne = any
  406704:	mov	w11, #0x1                   	// #1
  406708:	eor	w10, w10, #0x1
  40670c:	eor	w10, w10, w11
  406710:	eor	w10, w10, w11
  406714:	and	w10, w10, #0x1
  406718:	mov	w0, w10
  40671c:	sxtw	x9, w0
  406720:	cbz	x9, 406748 <manager_connect_bus+0xb0>
  406724:	mov	w8, wzr
  406728:	mov	w0, w8
  40672c:	adrp	x1, 41a000 <operation_new+0x40>
  406730:	add	x1, x1, #0xe18
  406734:	ldr	x2, [sp, #80]
  406738:	mov	w3, #0xb7                  	// #183
  40673c:	adrp	x4, 41a000 <operation_new+0x40>
  406740:	add	x4, x4, #0xe39
  406744:	bl	404bd0 <log_assert_failed_realm@plt>
  406748:	ldr	x8, [sp, #112]
  40674c:	ldr	x9, [x8]
  406750:	ldr	x9, [x9, #8]
  406754:	cmp	x9, #0x0
  406758:	cset	w10, ne  // ne = any
  40675c:	mov	w11, #0x1                   	// #1
  406760:	eor	w10, w10, #0x1
  406764:	eor	w10, w10, w11
  406768:	eor	w10, w10, w11
  40676c:	eor	w10, w10, w11
  406770:	and	w10, w10, #0x1
  406774:	mov	w0, w10
  406778:	sxtw	x9, w0
  40677c:	cbz	x9, 4067a4 <manager_connect_bus+0x10c>
  406780:	mov	w8, wzr
  406784:	mov	w0, w8
  406788:	adrp	x1, 41a000 <operation_new+0x40>
  40678c:	add	x1, x1, #0xe5c
  406790:	ldr	x2, [sp, #80]
  406794:	mov	w3, #0xb8                  	// #184
  406798:	adrp	x4, 41a000 <operation_new+0x40>
  40679c:	add	x4, x4, #0xe39
  4067a0:	bl	404bd0 <log_assert_failed_realm@plt>
  4067a4:	ldr	x8, [sp, #112]
  4067a8:	ldr	x9, [x8]
  4067ac:	add	x0, x9, #0x8
  4067b0:	bl	404cc0 <sd_bus_default_system@plt>
  4067b4:	stur	w0, [x29, #-20]
  4067b8:	ldur	w10, [x29, #-20]
  4067bc:	cmp	w10, #0x0
  4067c0:	cset	w10, ge  // ge = tcont
  4067c4:	tbnz	w10, #0, 40684c <manager_connect_bus+0x1b4>
  4067c8:	mov	w8, #0x3                   	// #3
  4067cc:	stur	w8, [x29, #-24]
  4067d0:	ldur	w8, [x29, #-20]
  4067d4:	stur	w8, [x29, #-28]
  4067d8:	stur	wzr, [x29, #-32]
  4067dc:	ldur	w0, [x29, #-32]
  4067e0:	bl	404b80 <log_get_max_level_realm@plt>
  4067e4:	ldur	w8, [x29, #-24]
  4067e8:	and	w8, w8, #0x7
  4067ec:	cmp	w0, w8
  4067f0:	b.lt	406824 <manager_connect_bus+0x18c>  // b.tstop
  4067f4:	ldur	w8, [x29, #-32]
  4067f8:	ldur	w9, [x29, #-24]
  4067fc:	orr	w0, w9, w8, lsl #10
  406800:	ldur	w1, [x29, #-28]
  406804:	ldr	x2, [sp, #80]
  406808:	mov	w3, #0xbc                  	// #188
  40680c:	ldr	x4, [sp, #72]
  406810:	adrp	x5, 41a000 <operation_new+0x40>
  406814:	add	x5, x5, #0xe78
  406818:	bl	404b90 <log_internal_realm@plt>
  40681c:	str	w0, [sp, #68]
  406820:	b	406838 <manager_connect_bus+0x1a0>
  406824:	ldur	w0, [x29, #-28]
  406828:	bl	404ba0 <abs@plt>
  40682c:	mov	w8, wzr
  406830:	subs	w8, w8, w0, uxtb
  406834:	str	w8, [sp, #68]
  406838:	ldr	w8, [sp, #68]
  40683c:	stur	w8, [x29, #-36]
  406840:	ldur	w8, [x29, #-36]
  406844:	stur	w8, [x29, #-4]
  406848:	b	407210 <manager_connect_bus+0xb78>
  40684c:	ldr	x8, [sp, #112]
  406850:	ldr	x9, [x8]
  406854:	ldr	x0, [x9, #8]
  406858:	ldr	x5, [x8]
  40685c:	mov	x9, xzr
  406860:	mov	x1, x9
  406864:	adrp	x2, 41a000 <operation_new+0x40>
  406868:	add	x2, x2, #0xe9c
  40686c:	adrp	x3, 41a000 <operation_new+0x40>
  406870:	add	x3, x3, #0xeb6
  406874:	adrp	x4, 43e000 <__FRAME_END__+0x1f3a8>
  406878:	add	x4, x4, #0x198
  40687c:	bl	404cd0 <sd_bus_add_object_vtable@plt>
  406880:	stur	w0, [x29, #-20]
  406884:	ldur	w10, [x29, #-20]
  406888:	cmp	w10, #0x0
  40688c:	cset	w10, ge  // ge = tcont
  406890:	tbnz	w10, #0, 406918 <manager_connect_bus+0x280>
  406894:	mov	w8, #0x3                   	// #3
  406898:	stur	w8, [x29, #-40]
  40689c:	ldur	w8, [x29, #-20]
  4068a0:	stur	w8, [x29, #-44]
  4068a4:	stur	wzr, [x29, #-48]
  4068a8:	ldur	w0, [x29, #-48]
  4068ac:	bl	404b80 <log_get_max_level_realm@plt>
  4068b0:	ldur	w8, [x29, #-40]
  4068b4:	and	w8, w8, #0x7
  4068b8:	cmp	w0, w8
  4068bc:	b.lt	4068f0 <manager_connect_bus+0x258>  // b.tstop
  4068c0:	ldur	w8, [x29, #-48]
  4068c4:	ldur	w9, [x29, #-40]
  4068c8:	orr	w0, w9, w8, lsl #10
  4068cc:	ldur	w1, [x29, #-44]
  4068d0:	ldr	x2, [sp, #80]
  4068d4:	mov	w3, #0xc0                  	// #192
  4068d8:	ldr	x4, [sp, #72]
  4068dc:	adrp	x5, 41a000 <operation_new+0x40>
  4068e0:	add	x5, x5, #0xed7
  4068e4:	bl	404b90 <log_internal_realm@plt>
  4068e8:	str	w0, [sp, #64]
  4068ec:	b	406904 <manager_connect_bus+0x26c>
  4068f0:	ldur	w0, [x29, #-44]
  4068f4:	bl	404ba0 <abs@plt>
  4068f8:	mov	w8, wzr
  4068fc:	subs	w8, w8, w0, uxtb
  406900:	str	w8, [sp, #64]
  406904:	ldr	w8, [sp, #64]
  406908:	stur	w8, [x29, #-52]
  40690c:	ldur	w8, [x29, #-52]
  406910:	stur	w8, [x29, #-4]
  406914:	b	407210 <manager_connect_bus+0xb78>
  406918:	ldr	x8, [sp, #112]
  40691c:	ldr	x9, [x8]
  406920:	ldr	x0, [x9, #8]
  406924:	ldr	x6, [x8]
  406928:	mov	x9, xzr
  40692c:	mov	x1, x9
  406930:	adrp	x2, 41a000 <operation_new+0x40>
  406934:	add	x2, x2, #0xeff
  406938:	adrp	x3, 41a000 <operation_new+0x40>
  40693c:	add	x3, x3, #0xf21
  406940:	adrp	x4, 43e000 <__FRAME_END__+0x1f3a8>
  406944:	add	x4, x4, #0xb48
  406948:	adrp	x5, 417000 <bus_machine_method_open_root_directory+0x248>
  40694c:	add	x5, x5, #0x8ac
  406950:	bl	404ce0 <sd_bus_add_fallback_vtable@plt>
  406954:	stur	w0, [x29, #-20]
  406958:	ldur	w10, [x29, #-20]
  40695c:	cmp	w10, #0x0
  406960:	cset	w10, ge  // ge = tcont
  406964:	tbnz	w10, #0, 4069ec <manager_connect_bus+0x354>
  406968:	mov	w8, #0x3                   	// #3
  40696c:	stur	w8, [x29, #-56]
  406970:	ldur	w8, [x29, #-20]
  406974:	stur	w8, [x29, #-60]
  406978:	stur	wzr, [x29, #-64]
  40697c:	ldur	w0, [x29, #-64]
  406980:	bl	404b80 <log_get_max_level_realm@plt>
  406984:	ldur	w8, [x29, #-56]
  406988:	and	w8, w8, #0x7
  40698c:	cmp	w0, w8
  406990:	b.lt	4069c4 <manager_connect_bus+0x32c>  // b.tstop
  406994:	ldur	w8, [x29, #-64]
  406998:	ldur	w9, [x29, #-56]
  40699c:	orr	w0, w9, w8, lsl #10
  4069a0:	ldur	w1, [x29, #-60]
  4069a4:	ldr	x2, [sp, #80]
  4069a8:	mov	w3, #0xc4                  	// #196
  4069ac:	ldr	x4, [sp, #72]
  4069b0:	adrp	x5, 41a000 <operation_new+0x40>
  4069b4:	add	x5, x5, #0xf42
  4069b8:	bl	404b90 <log_internal_realm@plt>
  4069bc:	str	w0, [sp, #60]
  4069c0:	b	4069d8 <manager_connect_bus+0x340>
  4069c4:	ldur	w0, [x29, #-60]
  4069c8:	bl	404ba0 <abs@plt>
  4069cc:	mov	w8, wzr
  4069d0:	subs	w8, w8, w0, uxtb
  4069d4:	str	w8, [sp, #60]
  4069d8:	ldr	w8, [sp, #60]
  4069dc:	stur	w8, [x29, #-68]
  4069e0:	ldur	w8, [x29, #-68]
  4069e4:	stur	w8, [x29, #-4]
  4069e8:	b	407210 <manager_connect_bus+0xb78>
  4069ec:	ldr	x8, [sp, #112]
  4069f0:	ldr	x9, [x8]
  4069f4:	ldr	x0, [x9, #8]
  4069f8:	ldr	x4, [x8]
  4069fc:	mov	x9, xzr
  406a00:	mov	x1, x9
  406a04:	adrp	x2, 41a000 <operation_new+0x40>
  406a08:	add	x2, x2, #0xeff
  406a0c:	adrp	x3, 417000 <bus_machine_method_open_root_directory+0x248>
  406a10:	add	x3, x3, #0xe1c
  406a14:	bl	404cf0 <sd_bus_add_node_enumerator@plt>
  406a18:	stur	w0, [x29, #-20]
  406a1c:	ldur	w10, [x29, #-20]
  406a20:	cmp	w10, #0x0
  406a24:	cset	w10, ge  // ge = tcont
  406a28:	tbnz	w10, #0, 406ab0 <manager_connect_bus+0x418>
  406a2c:	mov	w8, #0x3                   	// #3
  406a30:	stur	w8, [x29, #-72]
  406a34:	ldur	w8, [x29, #-20]
  406a38:	stur	w8, [x29, #-76]
  406a3c:	stur	wzr, [x29, #-80]
  406a40:	ldur	w0, [x29, #-80]
  406a44:	bl	404b80 <log_get_max_level_realm@plt>
  406a48:	ldur	w8, [x29, #-72]
  406a4c:	and	w8, w8, #0x7
  406a50:	cmp	w0, w8
  406a54:	b.lt	406a88 <manager_connect_bus+0x3f0>  // b.tstop
  406a58:	ldur	w8, [x29, #-80]
  406a5c:	ldur	w9, [x29, #-72]
  406a60:	orr	w0, w9, w8, lsl #10
  406a64:	ldur	w1, [x29, #-76]
  406a68:	ldr	x2, [sp, #80]
  406a6c:	mov	w3, #0xc8                  	// #200
  406a70:	ldr	x4, [sp, #72]
  406a74:	adrp	x5, 41a000 <operation_new+0x40>
  406a78:	add	x5, x5, #0xf6a
  406a7c:	bl	404b90 <log_internal_realm@plt>
  406a80:	str	w0, [sp, #56]
  406a84:	b	406a9c <manager_connect_bus+0x404>
  406a88:	ldur	w0, [x29, #-76]
  406a8c:	bl	404ba0 <abs@plt>
  406a90:	mov	w8, wzr
  406a94:	subs	w8, w8, w0, uxtb
  406a98:	str	w8, [sp, #56]
  406a9c:	ldr	w8, [sp, #56]
  406aa0:	stur	w8, [x29, #-84]
  406aa4:	ldur	w8, [x29, #-84]
  406aa8:	stur	w8, [x29, #-4]
  406aac:	b	407210 <manager_connect_bus+0xb78>
  406ab0:	ldr	x8, [sp, #112]
  406ab4:	ldr	x9, [x8]
  406ab8:	ldr	x0, [x9, #8]
  406abc:	ldr	x6, [x8]
  406ac0:	mov	x9, xzr
  406ac4:	mov	x1, x9
  406ac8:	adrp	x2, 41a000 <operation_new+0x40>
  406acc:	add	x2, x2, #0xf8f
  406ad0:	adrp	x3, 41a000 <operation_new+0x40>
  406ad4:	add	x3, x3, #0xfaf
  406ad8:	adrp	x4, 43f000 <machine_vtable+0x4b8>
  406adc:	add	x4, x4, #0xf8
  406ae0:	adrp	x5, 419000 <FILE_SIZE_VALID_OR_INFINITY+0x14>
  406ae4:	add	x5, x5, #0x528
  406ae8:	bl	404ce0 <sd_bus_add_fallback_vtable@plt>
  406aec:	stur	w0, [x29, #-20]
  406af0:	ldur	w10, [x29, #-20]
  406af4:	cmp	w10, #0x0
  406af8:	cset	w10, ge  // ge = tcont
  406afc:	tbnz	w10, #0, 406b84 <manager_connect_bus+0x4ec>
  406b00:	mov	w8, #0x3                   	// #3
  406b04:	stur	w8, [x29, #-88]
  406b08:	ldur	w8, [x29, #-20]
  406b0c:	stur	w8, [x29, #-92]
  406b10:	stur	wzr, [x29, #-96]
  406b14:	ldur	w0, [x29, #-96]
  406b18:	bl	404b80 <log_get_max_level_realm@plt>
  406b1c:	ldur	w8, [x29, #-88]
  406b20:	and	w8, w8, #0x7
  406b24:	cmp	w0, w8
  406b28:	b.lt	406b5c <manager_connect_bus+0x4c4>  // b.tstop
  406b2c:	ldur	w8, [x29, #-96]
  406b30:	ldur	w9, [x29, #-88]
  406b34:	orr	w0, w9, w8, lsl #10
  406b38:	ldur	w1, [x29, #-92]
  406b3c:	ldr	x2, [sp, #80]
  406b40:	mov	w3, #0xcc                  	// #204
  406b44:	ldr	x4, [sp, #72]
  406b48:	adrp	x5, 41a000 <operation_new+0x40>
  406b4c:	add	x5, x5, #0xfce
  406b50:	bl	404b90 <log_internal_realm@plt>
  406b54:	str	w0, [sp, #52]
  406b58:	b	406b70 <manager_connect_bus+0x4d8>
  406b5c:	ldur	w0, [x29, #-92]
  406b60:	bl	404ba0 <abs@plt>
  406b64:	mov	w8, wzr
  406b68:	subs	w8, w8, w0, uxtb
  406b6c:	str	w8, [sp, #52]
  406b70:	ldr	w8, [sp, #52]
  406b74:	stur	w8, [x29, #-100]
  406b78:	ldur	w8, [x29, #-100]
  406b7c:	stur	w8, [x29, #-4]
  406b80:	b	407210 <manager_connect_bus+0xb78>
  406b84:	ldr	x8, [sp, #112]
  406b88:	ldr	x9, [x8]
  406b8c:	ldr	x0, [x9, #8]
  406b90:	ldr	x4, [x8]
  406b94:	mov	x9, xzr
  406b98:	mov	x1, x9
  406b9c:	adrp	x2, 41a000 <operation_new+0x40>
  406ba0:	add	x2, x2, #0xf8f
  406ba4:	adrp	x3, 419000 <FILE_SIZE_VALID_OR_INFINITY+0x14>
  406ba8:	add	x3, x3, #0xbd8
  406bac:	bl	404cf0 <sd_bus_add_node_enumerator@plt>
  406bb0:	stur	w0, [x29, #-20]
  406bb4:	ldur	w10, [x29, #-20]
  406bb8:	cmp	w10, #0x0
  406bbc:	cset	w10, ge  // ge = tcont
  406bc0:	tbnz	w10, #0, 406c48 <manager_connect_bus+0x5b0>
  406bc4:	mov	w8, #0x3                   	// #3
  406bc8:	stur	w8, [x29, #-104]
  406bcc:	ldur	w8, [x29, #-20]
  406bd0:	stur	w8, [x29, #-108]
  406bd4:	stur	wzr, [x29, #-112]
  406bd8:	ldur	w0, [x29, #-112]
  406bdc:	bl	404b80 <log_get_max_level_realm@plt>
  406be0:	ldur	w8, [x29, #-104]
  406be4:	and	w8, w8, #0x7
  406be8:	cmp	w0, w8
  406bec:	b.lt	406c20 <manager_connect_bus+0x588>  // b.tstop
  406bf0:	ldur	w8, [x29, #-112]
  406bf4:	ldur	w9, [x29, #-104]
  406bf8:	orr	w0, w9, w8, lsl #10
  406bfc:	ldur	w1, [x29, #-108]
  406c00:	ldr	x2, [sp, #80]
  406c04:	mov	w3, #0xd0                  	// #208
  406c08:	ldr	x4, [sp, #72]
  406c0c:	adrp	x5, 41a000 <operation_new+0x40>
  406c10:	add	x5, x5, #0xff4
  406c14:	bl	404b90 <log_internal_realm@plt>
  406c18:	str	w0, [sp, #48]
  406c1c:	b	406c34 <manager_connect_bus+0x59c>
  406c20:	ldur	w0, [x29, #-108]
  406c24:	bl	404ba0 <abs@plt>
  406c28:	mov	w8, wzr
  406c2c:	subs	w8, w8, w0, uxtb
  406c30:	str	w8, [sp, #48]
  406c34:	ldr	w8, [sp, #48]
  406c38:	stur	w8, [x29, #-116]
  406c3c:	ldur	w8, [x29, #-116]
  406c40:	stur	w8, [x29, #-4]
  406c44:	b	407210 <manager_connect_bus+0xb78>
  406c48:	ldr	x8, [sp, #112]
  406c4c:	ldr	x9, [x8]
  406c50:	ldr	x0, [x9, #8]
  406c54:	ldr	x9, [x8]
  406c58:	mov	x10, xzr
  406c5c:	mov	x1, x10
  406c60:	ldr	x2, [sp, #104]
  406c64:	ldr	x3, [sp, #96]
  406c68:	ldr	x4, [sp, #88]
  406c6c:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406c70:	add	x5, x5, #0x6b
  406c74:	adrp	x6, 40e000 <method_map_to_machine_group+0x30>
  406c78:	add	x6, x6, #0x45c
  406c7c:	mov	x7, x10
  406c80:	mov	x10, sp
  406c84:	str	x9, [x10]
  406c88:	bl	404d00 <sd_bus_match_signal_async@plt>
  406c8c:	stur	w0, [x29, #-20]
  406c90:	ldur	w11, [x29, #-20]
  406c94:	cmp	w11, #0x0
  406c98:	cset	w11, ge  // ge = tcont
  406c9c:	tbnz	w11, #0, 406d24 <manager_connect_bus+0x68c>
  406ca0:	mov	w8, #0x3                   	// #3
  406ca4:	stur	w8, [x29, #-120]
  406ca8:	ldur	w8, [x29, #-20]
  406cac:	stur	w8, [x29, #-124]
  406cb0:	stur	wzr, [x29, #-128]
  406cb4:	ldur	w0, [x29, #-128]
  406cb8:	bl	404b80 <log_get_max_level_realm@plt>
  406cbc:	ldur	w8, [x29, #-120]
  406cc0:	and	w8, w8, #0x7
  406cc4:	cmp	w0, w8
  406cc8:	b.lt	406cfc <manager_connect_bus+0x664>  // b.tstop
  406ccc:	ldur	w8, [x29, #-128]
  406cd0:	ldur	w9, [x29, #-120]
  406cd4:	orr	w0, w9, w8, lsl #10
  406cd8:	ldur	w1, [x29, #-124]
  406cdc:	ldr	x2, [sp, #80]
  406ce0:	mov	w3, #0xdb                  	// #219
  406ce4:	ldr	x4, [sp, #72]
  406ce8:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406cec:	add	x5, x5, #0x76
  406cf0:	bl	404b90 <log_internal_realm@plt>
  406cf4:	str	w0, [sp, #44]
  406cf8:	b	406d10 <manager_connect_bus+0x678>
  406cfc:	ldur	w0, [x29, #-124]
  406d00:	bl	404ba0 <abs@plt>
  406d04:	mov	w8, wzr
  406d08:	subs	w8, w8, w0, uxtb
  406d0c:	str	w8, [sp, #44]
  406d10:	ldr	w8, [sp, #44]
  406d14:	stur	w8, [x29, #-132]
  406d18:	ldur	w8, [x29, #-132]
  406d1c:	stur	w8, [x29, #-4]
  406d20:	b	407210 <manager_connect_bus+0xb78>
  406d24:	ldr	x8, [sp, #112]
  406d28:	ldr	x9, [x8]
  406d2c:	ldr	x0, [x9, #8]
  406d30:	ldr	x9, [x8]
  406d34:	mov	x10, xzr
  406d38:	mov	x1, x10
  406d3c:	ldr	x2, [sp, #104]
  406d40:	ldr	x3, [sp, #96]
  406d44:	ldr	x4, [sp, #88]
  406d48:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406d4c:	add	x5, x5, #0x9d
  406d50:	adrp	x6, 40e000 <method_map_to_machine_group+0x30>
  406d54:	add	x6, x6, #0x968
  406d58:	mov	x7, x10
  406d5c:	mov	x10, sp
  406d60:	str	x9, [x10]
  406d64:	bl	404d00 <sd_bus_match_signal_async@plt>
  406d68:	stur	w0, [x29, #-20]
  406d6c:	ldur	w11, [x29, #-20]
  406d70:	cmp	w11, #0x0
  406d74:	cset	w11, ge  // ge = tcont
  406d78:	tbnz	w11, #0, 406e00 <manager_connect_bus+0x768>
  406d7c:	mov	w8, #0x3                   	// #3
  406d80:	stur	w8, [x29, #-136]
  406d84:	ldur	w8, [x29, #-20]
  406d88:	stur	w8, [x29, #-140]
  406d8c:	stur	wzr, [x29, #-144]
  406d90:	ldur	w0, [x29, #-144]
  406d94:	bl	404b80 <log_get_max_level_realm@plt>
  406d98:	ldur	w8, [x29, #-136]
  406d9c:	and	w8, w8, #0x7
  406da0:	cmp	w0, w8
  406da4:	b.lt	406dd8 <manager_connect_bus+0x740>  // b.tstop
  406da8:	ldur	w8, [x29, #-144]
  406dac:	ldur	w9, [x29, #-136]
  406db0:	orr	w0, w9, w8, lsl #10
  406db4:	ldur	w1, [x29, #-140]
  406db8:	ldr	x2, [sp, #80]
  406dbc:	mov	w3, #0xe6                  	// #230
  406dc0:	ldr	x4, [sp, #72]
  406dc4:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406dc8:	add	x5, x5, #0xa9
  406dcc:	bl	404b90 <log_internal_realm@plt>
  406dd0:	str	w0, [sp, #40]
  406dd4:	b	406dec <manager_connect_bus+0x754>
  406dd8:	ldur	w0, [x29, #-140]
  406ddc:	bl	404ba0 <abs@plt>
  406de0:	mov	w8, wzr
  406de4:	subs	w8, w8, w0, uxtb
  406de8:	str	w8, [sp, #40]
  406dec:	ldr	w8, [sp, #40]
  406df0:	stur	w8, [x29, #-148]
  406df4:	ldur	w8, [x29, #-148]
  406df8:	stur	w8, [x29, #-4]
  406dfc:	b	407210 <manager_connect_bus+0xb78>
  406e00:	ldr	x8, [sp, #112]
  406e04:	ldr	x9, [x8]
  406e08:	ldr	x0, [x9, #8]
  406e0c:	ldr	x9, [x8]
  406e10:	mov	x10, xzr
  406e14:	mov	x1, x10
  406e18:	ldr	x2, [sp, #104]
  406e1c:	mov	x3, x10
  406e20:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  406e24:	add	x4, x4, #0xd5
  406e28:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406e2c:	add	x5, x5, #0xf5
  406e30:	adrp	x6, 40e000 <method_map_to_machine_group+0x30>
  406e34:	add	x6, x6, #0x780
  406e38:	mov	x7, x10
  406e3c:	mov	x10, sp
  406e40:	str	x9, [x10]
  406e44:	bl	404d00 <sd_bus_match_signal_async@plt>
  406e48:	stur	w0, [x29, #-20]
  406e4c:	ldur	w11, [x29, #-20]
  406e50:	cmp	w11, #0x0
  406e54:	cset	w11, ge  // ge = tcont
  406e58:	tbnz	w11, #0, 406ee0 <manager_connect_bus+0x848>
  406e5c:	mov	w8, #0x3                   	// #3
  406e60:	stur	w8, [x29, #-152]
  406e64:	ldur	w8, [x29, #-20]
  406e68:	stur	w8, [x29, #-156]
  406e6c:	stur	wzr, [x29, #-160]
  406e70:	ldur	w0, [x29, #-160]
  406e74:	bl	404b80 <log_get_max_level_realm@plt>
  406e78:	ldur	w8, [x29, #-152]
  406e7c:	and	w8, w8, #0x7
  406e80:	cmp	w0, w8
  406e84:	b.lt	406eb8 <manager_connect_bus+0x820>  // b.tstop
  406e88:	ldur	w8, [x29, #-160]
  406e8c:	ldur	w9, [x29, #-152]
  406e90:	orr	w0, w9, w8, lsl #10
  406e94:	ldur	w1, [x29, #-156]
  406e98:	ldr	x2, [sp, #80]
  406e9c:	mov	w3, #0xf1                  	// #241
  406ea0:	ldr	x4, [sp, #72]
  406ea4:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406ea8:	add	x5, x5, #0x107
  406eac:	bl	404b90 <log_internal_realm@plt>
  406eb0:	str	w0, [sp, #36]
  406eb4:	b	406ecc <manager_connect_bus+0x834>
  406eb8:	ldur	w0, [x29, #-156]
  406ebc:	bl	404ba0 <abs@plt>
  406ec0:	mov	w8, wzr
  406ec4:	subs	w8, w8, w0, uxtb
  406ec8:	str	w8, [sp, #36]
  406ecc:	ldr	w8, [sp, #36]
  406ed0:	stur	w8, [x29, #-164]
  406ed4:	ldur	w8, [x29, #-164]
  406ed8:	stur	w8, [x29, #-4]
  406edc:	b	407210 <manager_connect_bus+0xb78>
  406ee0:	ldr	x8, [sp, #112]
  406ee4:	ldr	x9, [x8]
  406ee8:	ldr	x0, [x9, #8]
  406eec:	ldr	x9, [x8]
  406ef0:	mov	x10, xzr
  406ef4:	mov	x1, x10
  406ef8:	ldr	x2, [sp, #104]
  406efc:	ldr	x3, [sp, #96]
  406f00:	ldr	x4, [sp, #88]
  406f04:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406f08:	add	x5, x5, #0x139
  406f0c:	adrp	x6, 40e000 <method_map_to_machine_group+0x30>
  406f10:	add	x6, x6, #0xb28
  406f14:	mov	x7, x10
  406f18:	mov	x10, sp
  406f1c:	str	x9, [x10]
  406f20:	bl	404d00 <sd_bus_match_signal_async@plt>
  406f24:	stur	w0, [x29, #-20]
  406f28:	ldur	w11, [x29, #-20]
  406f2c:	cmp	w11, #0x0
  406f30:	cset	w11, ge  // ge = tcont
  406f34:	tbnz	w11, #0, 406fbc <manager_connect_bus+0x924>
  406f38:	mov	w8, #0x3                   	// #3
  406f3c:	stur	w8, [x29, #-168]
  406f40:	ldur	w8, [x29, #-20]
  406f44:	stur	w8, [x29, #-172]
  406f48:	str	wzr, [sp, #176]
  406f4c:	ldr	w0, [sp, #176]
  406f50:	bl	404b80 <log_get_max_level_realm@plt>
  406f54:	ldur	w8, [x29, #-168]
  406f58:	and	w8, w8, #0x7
  406f5c:	cmp	w0, w8
  406f60:	b.lt	406f94 <manager_connect_bus+0x8fc>  // b.tstop
  406f64:	ldr	w8, [sp, #176]
  406f68:	ldur	w9, [x29, #-168]
  406f6c:	orr	w0, w9, w8, lsl #10
  406f70:	ldur	w1, [x29, #-172]
  406f74:	ldr	x2, [sp, #80]
  406f78:	mov	w3, #0xfc                  	// #252
  406f7c:	ldr	x4, [sp, #72]
  406f80:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406f84:	add	x5, x5, #0x143
  406f88:	bl	404b90 <log_internal_realm@plt>
  406f8c:	str	w0, [sp, #32]
  406f90:	b	406fa8 <manager_connect_bus+0x910>
  406f94:	ldur	w0, [x29, #-172]
  406f98:	bl	404ba0 <abs@plt>
  406f9c:	mov	w8, wzr
  406fa0:	subs	w8, w8, w0, uxtb
  406fa4:	str	w8, [sp, #32]
  406fa8:	ldr	w8, [sp, #32]
  406fac:	str	w8, [sp, #172]
  406fb0:	ldr	w8, [sp, #172]
  406fb4:	stur	w8, [x29, #-4]
  406fb8:	b	407210 <manager_connect_bus+0xb78>
  406fbc:	ldr	x8, [sp, #112]
  406fc0:	ldr	x9, [x8]
  406fc4:	ldr	x0, [x9, #8]
  406fc8:	mov	x9, xzr
  406fcc:	mov	x1, x9
  406fd0:	ldr	x2, [sp, #104]
  406fd4:	ldr	x3, [sp, #96]
  406fd8:	ldr	x4, [sp, #88]
  406fdc:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  406fe0:	add	x5, x5, #0x16d
  406fe4:	mov	x6, x9
  406fe8:	mov	x7, x9
  406fec:	mov	x10, sp
  406ff0:	str	x9, [x10]
  406ff4:	bl	404d10 <sd_bus_call_method_async@plt>
  406ff8:	stur	w0, [x29, #-20]
  406ffc:	ldur	w11, [x29, #-20]
  407000:	cmp	w11, #0x0
  407004:	cset	w11, ge  // ge = tcont
  407008:	tbnz	w11, #0, 407090 <manager_connect_bus+0x9f8>
  40700c:	mov	w8, #0x3                   	// #3
  407010:	str	w8, [sp, #168]
  407014:	ldur	w8, [x29, #-20]
  407018:	str	w8, [sp, #164]
  40701c:	str	wzr, [sp, #160]
  407020:	ldr	w0, [sp, #160]
  407024:	bl	404b80 <log_get_max_level_realm@plt>
  407028:	ldr	w8, [sp, #168]
  40702c:	and	w8, w8, #0x7
  407030:	cmp	w0, w8
  407034:	b.lt	407068 <manager_connect_bus+0x9d0>  // b.tstop
  407038:	ldr	w8, [sp, #160]
  40703c:	ldr	w9, [sp, #168]
  407040:	orr	w0, w9, w8, lsl #10
  407044:	ldr	w1, [sp, #164]
  407048:	ldr	x2, [sp, #80]
  40704c:	mov	w3, #0x108                 	// #264
  407050:	ldr	x4, [sp, #72]
  407054:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  407058:	add	x5, x5, #0x177
  40705c:	bl	404b90 <log_internal_realm@plt>
  407060:	str	w0, [sp, #28]
  407064:	b	40707c <manager_connect_bus+0x9e4>
  407068:	ldr	w0, [sp, #164]
  40706c:	bl	404ba0 <abs@plt>
  407070:	mov	w8, wzr
  407074:	subs	w8, w8, w0, uxtb
  407078:	str	w8, [sp, #28]
  40707c:	ldr	w8, [sp, #28]
  407080:	str	w8, [sp, #156]
  407084:	ldr	w8, [sp, #156]
  407088:	stur	w8, [x29, #-4]
  40708c:	b	407210 <manager_connect_bus+0xb78>
  407090:	ldr	x8, [sp, #112]
  407094:	ldr	x9, [x8]
  407098:	ldr	x0, [x9, #8]
  40709c:	mov	x9, xzr
  4070a0:	mov	x1, x9
  4070a4:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  4070a8:	add	x2, x2, #0x199
  4070ac:	mov	x3, x9
  4070b0:	mov	x4, x9
  4070b4:	mov	x5, x9
  4070b8:	bl	404d20 <sd_bus_request_name_async@plt>
  4070bc:	stur	w0, [x29, #-20]
  4070c0:	ldur	w10, [x29, #-20]
  4070c4:	cmp	w10, #0x0
  4070c8:	cset	w10, ge  // ge = tcont
  4070cc:	tbnz	w10, #0, 407154 <manager_connect_bus+0xabc>
  4070d0:	mov	w8, #0x3                   	// #3
  4070d4:	str	w8, [sp, #152]
  4070d8:	ldur	w8, [x29, #-20]
  4070dc:	str	w8, [sp, #148]
  4070e0:	str	wzr, [sp, #144]
  4070e4:	ldr	w0, [sp, #144]
  4070e8:	bl	404b80 <log_get_max_level_realm@plt>
  4070ec:	ldr	w8, [sp, #152]
  4070f0:	and	w8, w8, #0x7
  4070f4:	cmp	w0, w8
  4070f8:	b.lt	40712c <manager_connect_bus+0xa94>  // b.tstop
  4070fc:	ldr	w8, [sp, #144]
  407100:	ldr	w9, [sp, #152]
  407104:	orr	w0, w9, w8, lsl #10
  407108:	ldr	w1, [sp, #148]
  40710c:	ldr	x2, [sp, #80]
  407110:	mov	w3, #0x10c                 	// #268
  407114:	ldr	x4, [sp, #72]
  407118:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40711c:	add	x5, x5, #0x1b2
  407120:	bl	404b90 <log_internal_realm@plt>
  407124:	str	w0, [sp, #24]
  407128:	b	407140 <manager_connect_bus+0xaa8>
  40712c:	ldr	w0, [sp, #148]
  407130:	bl	404ba0 <abs@plt>
  407134:	mov	w8, wzr
  407138:	subs	w8, w8, w0, uxtb
  40713c:	str	w8, [sp, #24]
  407140:	ldr	w8, [sp, #24]
  407144:	str	w8, [sp, #140]
  407148:	ldr	w8, [sp, #140]
  40714c:	stur	w8, [x29, #-4]
  407150:	b	407210 <manager_connect_bus+0xb78>
  407154:	ldr	x8, [sp, #112]
  407158:	ldr	x9, [x8]
  40715c:	ldr	x0, [x9, #8]
  407160:	ldr	x9, [x8]
  407164:	ldr	x1, [x9]
  407168:	mov	w10, wzr
  40716c:	mov	w2, w10
  407170:	bl	404d30 <sd_bus_attach_event@plt>
  407174:	stur	w0, [x29, #-20]
  407178:	ldur	w10, [x29, #-20]
  40717c:	cmp	w10, #0x0
  407180:	cset	w10, ge  // ge = tcont
  407184:	tbnz	w10, #0, 40720c <manager_connect_bus+0xb74>
  407188:	mov	w8, #0x3                   	// #3
  40718c:	str	w8, [sp, #136]
  407190:	ldur	w8, [x29, #-20]
  407194:	str	w8, [sp, #132]
  407198:	str	wzr, [sp, #128]
  40719c:	ldr	w0, [sp, #128]
  4071a0:	bl	404b80 <log_get_max_level_realm@plt>
  4071a4:	ldr	w8, [sp, #136]
  4071a8:	and	w8, w8, #0x7
  4071ac:	cmp	w0, w8
  4071b0:	b.lt	4071e4 <manager_connect_bus+0xb4c>  // b.tstop
  4071b4:	ldr	w8, [sp, #128]
  4071b8:	ldr	w9, [sp, #136]
  4071bc:	orr	w0, w9, w8, lsl #10
  4071c0:	ldr	w1, [sp, #132]
  4071c4:	ldr	x2, [sp, #80]
  4071c8:	mov	w3, #0x110                 	// #272
  4071cc:	ldr	x4, [sp, #72]
  4071d0:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  4071d4:	add	x5, x5, #0x1cd
  4071d8:	bl	404b90 <log_internal_realm@plt>
  4071dc:	str	w0, [sp, #20]
  4071e0:	b	4071f8 <manager_connect_bus+0xb60>
  4071e4:	ldr	w0, [sp, #132]
  4071e8:	bl	404ba0 <abs@plt>
  4071ec:	mov	w8, wzr
  4071f0:	subs	w8, w8, w0, uxtb
  4071f4:	str	w8, [sp, #20]
  4071f8:	ldr	w8, [sp, #20]
  4071fc:	str	w8, [sp, #124]
  407200:	ldr	w8, [sp, #124]
  407204:	stur	w8, [x29, #-4]
  407208:	b	407210 <manager_connect_bus+0xb78>
  40720c:	stur	wzr, [x29, #-4]
  407210:	ldur	w0, [x29, #-4]
  407214:	ldr	x28, [sp, #368]
  407218:	ldp	x29, x30, [sp, #352]
  40721c:	add	sp, sp, #0x180
  407220:	ret

0000000000407224 <manager_enumerate_machines>:
  407224:	sub	sp, sp, #0x80
  407228:	stp	x29, x30, [sp, #112]
  40722c:	add	x29, sp, #0x70
  407230:	mov	x8, xzr
  407234:	adrp	x9, 41a000 <operation_new+0x40>
  407238:	add	x9, x9, #0xc38
  40723c:	add	x9, x9, #0x3
  407240:	stur	x0, [x29, #-16]
  407244:	stur	x8, [x29, #-24]
  407248:	stur	wzr, [x29, #-36]
  40724c:	str	x9, [sp, #16]
  407250:	ldur	x8, [x29, #-16]
  407254:	cmp	x8, #0x0
  407258:	cset	w9, ne  // ne = any
  40725c:	mov	w10, #0x1                   	// #1
  407260:	eor	w9, w9, #0x1
  407264:	eor	w9, w9, w10
  407268:	eor	w9, w9, w10
  40726c:	and	w9, w9, #0x1
  407270:	mov	w0, w9
  407274:	sxtw	x8, w0
  407278:	cbz	x8, 4072a0 <manager_enumerate_machines+0x7c>
  40727c:	mov	w8, wzr
  407280:	mov	w0, w8
  407284:	adrp	x1, 41a000 <operation_new+0x40>
  407288:	add	x1, x1, #0xe18
  40728c:	ldr	x2, [sp, #16]
  407290:	mov	w3, #0x87                  	// #135
  407294:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  407298:	add	x4, x4, #0x1f4
  40729c:	bl	404bd0 <log_assert_failed_realm@plt>
  4072a0:	ldur	x0, [x29, #-16]
  4072a4:	bl	407810 <manager_add_host_machine>
  4072a8:	stur	w0, [x29, #-36]
  4072ac:	ldur	w8, [x29, #-36]
  4072b0:	cmp	w8, #0x0
  4072b4:	cset	w8, ge  // ge = tcont
  4072b8:	tbnz	w8, #0, 4072d0 <manager_enumerate_machines+0xac>
  4072bc:	ldur	w8, [x29, #-36]
  4072c0:	stur	w8, [x29, #-4]
  4072c4:	mov	w8, #0x1                   	// #1
  4072c8:	stur	w8, [x29, #-40]
  4072cc:	b	40755c <manager_enumerate_machines+0x338>
  4072d0:	adrp	x0, 41a000 <operation_new+0x40>
  4072d4:	add	x0, x0, #0xc77
  4072d8:	bl	404d40 <opendir@plt>
  4072dc:	stur	x0, [x29, #-24]
  4072e0:	ldur	x8, [x29, #-24]
  4072e4:	cbnz	x8, 40739c <manager_enumerate_machines+0x178>
  4072e8:	bl	404d50 <__errno_location@plt>
  4072ec:	ldr	w8, [x0]
  4072f0:	cmp	w8, #0x2
  4072f4:	b.ne	407308 <manager_enumerate_machines+0xe4>  // b.any
  4072f8:	stur	wzr, [x29, #-4]
  4072fc:	mov	w8, #0x1                   	// #1
  407300:	stur	w8, [x29, #-40]
  407304:	b	40755c <manager_enumerate_machines+0x338>
  407308:	mov	w8, #0x3                   	// #3
  40730c:	stur	w8, [x29, #-44]
  407310:	bl	404d50 <__errno_location@plt>
  407314:	ldr	w8, [x0]
  407318:	stur	w8, [x29, #-48]
  40731c:	stur	wzr, [x29, #-52]
  407320:	ldur	w0, [x29, #-52]
  407324:	bl	404b80 <log_get_max_level_realm@plt>
  407328:	ldur	w8, [x29, #-44]
  40732c:	and	w8, w8, #0x7
  407330:	cmp	w0, w8
  407334:	b.lt	40736c <manager_enumerate_machines+0x148>  // b.tstop
  407338:	ldur	w8, [x29, #-52]
  40733c:	ldur	w9, [x29, #-44]
  407340:	orr	w0, w9, w8, lsl #10
  407344:	ldur	w1, [x29, #-48]
  407348:	ldr	x2, [sp, #16]
  40734c:	mov	w3, #0x93                  	// #147
  407350:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  407354:	add	x4, x4, #0x21e
  407358:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40735c:	add	x5, x5, #0x239
  407360:	bl	404b90 <log_internal_realm@plt>
  407364:	str	w0, [sp, #12]
  407368:	b	407380 <manager_enumerate_machines+0x15c>
  40736c:	ldur	w0, [x29, #-48]
  407370:	bl	404ba0 <abs@plt>
  407374:	mov	w8, wzr
  407378:	subs	w8, w8, w0, uxtb
  40737c:	str	w8, [sp, #12]
  407380:	ldr	w8, [sp, #12]
  407384:	str	w8, [sp, #56]
  407388:	ldr	w8, [sp, #56]
  40738c:	stur	w8, [x29, #-4]
  407390:	mov	w8, #0x1                   	// #1
  407394:	stur	w8, [x29, #-40]
  407398:	b	40755c <manager_enumerate_machines+0x338>
  40739c:	bl	404d50 <__errno_location@plt>
  4073a0:	str	wzr, [x0]
  4073a4:	ldur	x0, [x29, #-24]
  4073a8:	bl	404d60 <readdir64@plt>
  4073ac:	stur	x0, [x29, #-32]
  4073b0:	ldur	x8, [x29, #-32]
  4073b4:	cbnz	x8, 4073f0 <manager_enumerate_machines+0x1cc>
  4073b8:	bl	404d50 <__errno_location@plt>
  4073bc:	ldr	w8, [x0]
  4073c0:	cmp	w8, #0x0
  4073c4:	cset	w8, le
  4073c8:	tbnz	w8, #0, 4073ec <manager_enumerate_machines+0x1c8>
  4073cc:	bl	404d50 <__errno_location@plt>
  4073d0:	ldr	w8, [x0]
  4073d4:	mov	w9, wzr
  4073d8:	subs	w8, w9, w8
  4073dc:	stur	w8, [x29, #-4]
  4073e0:	mov	w8, #0x1                   	// #1
  4073e4:	stur	w8, [x29, #-40]
  4073e8:	b	40755c <manager_enumerate_machines+0x338>
  4073ec:	b	40754c <manager_enumerate_machines+0x328>
  4073f0:	ldur	x8, [x29, #-32]
  4073f4:	add	x0, x8, #0x13
  4073f8:	bl	404d70 <hidden_or_backup_file@plt>
  4073fc:	tbnz	w0, #0, 407404 <manager_enumerate_machines+0x1e0>
  407400:	b	407408 <manager_enumerate_machines+0x1e4>
  407404:	b	407534 <manager_enumerate_machines+0x310>
  407408:	ldur	x0, [x29, #-32]
  40740c:	bl	404d80 <dirent_is_file@plt>
  407410:	tbnz	w0, #0, 407418 <manager_enumerate_machines+0x1f4>
  407414:	b	407534 <manager_enumerate_machines+0x310>
  407418:	ldur	x8, [x29, #-32]
  40741c:	add	x0, x8, #0x13
  407420:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407424:	add	x1, x1, #0x262
  407428:	bl	407a7c <startswith>
  40742c:	cbz	x0, 407434 <manager_enumerate_machines+0x210>
  407430:	b	407534 <manager_enumerate_machines+0x310>
  407434:	ldur	x8, [x29, #-32]
  407438:	add	x0, x8, #0x13
  40743c:	mov	w9, wzr
  407440:	and	w1, w9, #0x1
  407444:	bl	404d90 <hostname_is_valid@plt>
  407448:	tbnz	w0, #0, 407450 <manager_enumerate_machines+0x22c>
  40744c:	b	407534 <manager_enumerate_machines+0x310>
  407450:	ldur	x0, [x29, #-16]
  407454:	ldur	x8, [x29, #-32]
  407458:	add	x1, x8, #0x13
  40745c:	add	x2, sp, #0x30
  407460:	bl	40f8c8 <manager_add_machine>
  407464:	str	w0, [sp, #44]
  407468:	ldr	w9, [sp, #44]
  40746c:	cmp	w9, #0x0
  407470:	cset	w9, ge  // ge = tcont
  407474:	tbnz	w9, #0, 407508 <manager_enumerate_machines+0x2e4>
  407478:	mov	w8, #0x3                   	// #3
  40747c:	str	w8, [sp, #40]
  407480:	ldr	w8, [sp, #44]
  407484:	str	w8, [sp, #36]
  407488:	str	wzr, [sp, #32]
  40748c:	ldr	w0, [sp, #32]
  407490:	bl	404b80 <log_get_max_level_realm@plt>
  407494:	ldr	w8, [sp, #40]
  407498:	and	w8, w8, #0x7
  40749c:	cmp	w0, w8
  4074a0:	b.lt	4074e0 <manager_enumerate_machines+0x2bc>  // b.tstop
  4074a4:	ldr	w8, [sp, #32]
  4074a8:	ldr	w9, [sp, #40]
  4074ac:	orr	w0, w9, w8, lsl #10
  4074b0:	ldr	w1, [sp, #36]
  4074b4:	ldur	x10, [x29, #-32]
  4074b8:	add	x6, x10, #0x13
  4074bc:	ldr	x2, [sp, #16]
  4074c0:	mov	w3, #0xa6                  	// #166
  4074c4:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  4074c8:	add	x4, x4, #0x21e
  4074cc:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  4074d0:	add	x5, x5, #0x268
  4074d4:	bl	404b90 <log_internal_realm@plt>
  4074d8:	str	w0, [sp, #8]
  4074dc:	b	4074f4 <manager_enumerate_machines+0x2d0>
  4074e0:	ldr	w0, [sp, #36]
  4074e4:	bl	404ba0 <abs@plt>
  4074e8:	mov	w8, wzr
  4074ec:	subs	w8, w8, w0, uxtb
  4074f0:	str	w8, [sp, #8]
  4074f4:	ldr	w8, [sp, #8]
  4074f8:	str	w8, [sp, #28]
  4074fc:	ldr	w8, [sp, #28]
  407500:	stur	w8, [x29, #-36]
  407504:	b	407534 <manager_enumerate_machines+0x310>
  407508:	ldr	x0, [sp, #48]
  40750c:	bl	409e88 <machine_add_to_gc_queue>
  407510:	ldr	x0, [sp, #48]
  407514:	bl	408d3c <machine_load>
  407518:	str	w0, [sp, #44]
  40751c:	ldr	w8, [sp, #44]
  407520:	cmp	w8, #0x0
  407524:	cset	w8, ge  // ge = tcont
  407528:	tbnz	w8, #0, 407534 <manager_enumerate_machines+0x310>
  40752c:	ldr	w8, [sp, #44]
  407530:	stur	w8, [x29, #-36]
  407534:	bl	404d50 <__errno_location@plt>
  407538:	str	wzr, [x0]
  40753c:	ldur	x0, [x29, #-24]
  407540:	bl	404d60 <readdir64@plt>
  407544:	stur	x0, [x29, #-32]
  407548:	b	4073b0 <manager_enumerate_machines+0x18c>
  40754c:	ldur	w8, [x29, #-36]
  407550:	stur	w8, [x29, #-4]
  407554:	mov	w8, #0x1                   	// #1
  407558:	stur	w8, [x29, #-40]
  40755c:	sub	x0, x29, #0x18
  407560:	bl	4077dc <closedirp>
  407564:	ldur	w0, [x29, #-4]
  407568:	ldp	x29, x30, [sp, #112]
  40756c:	add	sp, sp, #0x80
  407570:	ret

0000000000407574 <manager_gc>:
  407574:	sub	sp, sp, #0x50
  407578:	stp	x29, x30, [sp, #64]
  40757c:	add	x29, sp, #0x40
  407580:	adrp	x8, 41a000 <operation_new+0x40>
  407584:	add	x8, x8, #0xc38
  407588:	add	x8, x8, #0x3
  40758c:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  407590:	add	x9, x9, #0x2d8
  407594:	stur	x0, [x29, #-8]
  407598:	and	w10, w1, #0x1
  40759c:	sturb	w10, [x29, #-9]
  4075a0:	str	x8, [sp, #16]
  4075a4:	str	x9, [sp, #8]
  4075a8:	ldur	x8, [x29, #-8]
  4075ac:	cmp	x8, #0x0
  4075b0:	cset	w9, ne  // ne = any
  4075b4:	mov	w10, #0x1                   	// #1
  4075b8:	eor	w9, w9, #0x1
  4075bc:	eor	w9, w9, w10
  4075c0:	eor	w9, w9, w10
  4075c4:	and	w9, w9, #0x1
  4075c8:	mov	w0, w9
  4075cc:	sxtw	x8, w0
  4075d0:	cbz	x8, 4075f4 <manager_gc+0x80>
  4075d4:	mov	w8, wzr
  4075d8:	mov	w0, w8
  4075dc:	adrp	x1, 41a000 <operation_new+0x40>
  4075e0:	add	x1, x1, #0xe18
  4075e4:	ldr	x2, [sp, #16]
  4075e8:	mov	w3, #0x118                 	// #280
  4075ec:	ldr	x4, [sp, #8]
  4075f0:	bl	404bd0 <log_assert_failed_realm@plt>
  4075f4:	ldur	x8, [x29, #-8]
  4075f8:	ldr	x8, [x8, #64]
  4075fc:	stur	x8, [x29, #-24]
  407600:	cbz	x8, 407790 <manager_gc+0x21c>
  407604:	ldur	x8, [x29, #-8]
  407608:	add	x8, x8, #0x40
  40760c:	str	x8, [sp, #32]
  407610:	ldur	x8, [x29, #-24]
  407614:	str	x8, [sp, #24]
  407618:	ldr	x8, [sp, #24]
  40761c:	cmp	x8, #0x0
  407620:	cset	w9, ne  // ne = any
  407624:	mov	w10, #0x1                   	// #1
  407628:	eor	w9, w9, #0x1
  40762c:	eor	w9, w9, w10
  407630:	eor	w9, w9, w10
  407634:	and	w9, w9, #0x1
  407638:	mov	w0, w9
  40763c:	sxtw	x8, w0
  407640:	cbz	x8, 407664 <manager_gc+0xf0>
  407644:	mov	w8, wzr
  407648:	mov	w0, w8
  40764c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407650:	add	x1, x1, #0x2fa
  407654:	ldr	x2, [sp, #16]
  407658:	mov	w3, #0x11b                 	// #283
  40765c:	ldr	x4, [sp, #8]
  407660:	bl	404bd0 <log_assert_failed_realm@plt>
  407664:	ldr	x8, [sp, #24]
  407668:	ldr	x8, [x8, #144]
  40766c:	cbz	x8, 407684 <manager_gc+0x110>
  407670:	ldr	x8, [sp, #24]
  407674:	ldr	x8, [x8, #152]
  407678:	ldr	x9, [sp, #24]
  40767c:	ldr	x9, [x9, #144]
  407680:	str	x8, [x9, #152]
  407684:	ldr	x8, [sp, #24]
  407688:	ldr	x8, [x8, #152]
  40768c:	cbz	x8, 4076a8 <manager_gc+0x134>
  407690:	ldr	x8, [sp, #24]
  407694:	ldr	x8, [x8, #144]
  407698:	ldr	x9, [sp, #24]
  40769c:	ldr	x9, [x9, #152]
  4076a0:	str	x8, [x9, #144]
  4076a4:	b	40770c <manager_gc+0x198>
  4076a8:	ldr	x8, [sp, #32]
  4076ac:	ldr	x8, [x8]
  4076b0:	ldr	x9, [sp, #24]
  4076b4:	cmp	x8, x9
  4076b8:	cset	w10, eq  // eq = none
  4076bc:	mov	w11, #0x1                   	// #1
  4076c0:	eor	w10, w10, #0x1
  4076c4:	eor	w10, w10, w11
  4076c8:	eor	w10, w10, w11
  4076cc:	and	w10, w10, #0x1
  4076d0:	mov	w0, w10
  4076d4:	sxtw	x8, w0
  4076d8:	cbz	x8, 4076fc <manager_gc+0x188>
  4076dc:	mov	w8, wzr
  4076e0:	mov	w0, w8
  4076e4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4076e8:	add	x1, x1, #0x300
  4076ec:	ldr	x2, [sp, #16]
  4076f0:	mov	w3, #0x11b                 	// #283
  4076f4:	ldr	x4, [sp, #8]
  4076f8:	bl	404bd0 <log_assert_failed_realm@plt>
  4076fc:	ldr	x8, [sp, #24]
  407700:	ldr	x8, [x8, #144]
  407704:	ldr	x9, [sp, #32]
  407708:	str	x8, [x9]
  40770c:	ldr	x8, [sp, #24]
  407710:	mov	x9, xzr
  407714:	str	x9, [x8, #152]
  407718:	ldr	x8, [sp, #24]
  40771c:	str	x9, [x8, #144]
  407720:	ldur	x8, [x29, #-24]
  407724:	ldrb	w9, [x8, #104]
  407728:	and	w9, w9, #0xfffffffe
  40772c:	strb	w9, [x8, #104]
  407730:	ldur	x0, [x29, #-24]
  407734:	ldurb	w9, [x29, #-9]
  407738:	and	w1, w9, #0x1
  40773c:	bl	409fd4 <machine_may_gc>
  407740:	tbnz	w0, #0, 407748 <manager_gc+0x1d4>
  407744:	b	407760 <manager_gc+0x1ec>
  407748:	ldur	x0, [x29, #-24]
  40774c:	bl	40a128 <machine_get_state>
  407750:	cmp	w0, #0x2
  407754:	b.eq	407760 <manager_gc+0x1ec>  // b.none
  407758:	ldur	x0, [x29, #-24]
  40775c:	bl	4097e0 <machine_stop>
  407760:	ldur	x0, [x29, #-24]
  407764:	ldurb	w8, [x29, #-9]
  407768:	and	w1, w8, #0x1
  40776c:	bl	409fd4 <machine_may_gc>
  407770:	tbnz	w0, #0, 407778 <manager_gc+0x204>
  407774:	b	40778c <manager_gc+0x218>
  407778:	ldur	x0, [x29, #-24]
  40777c:	bl	409a38 <machine_finalize>
  407780:	ldur	x8, [x29, #-24]
  407784:	mov	x0, x8
  407788:	bl	407e48 <machine_free>
  40778c:	b	4075f4 <manager_gc+0x80>
  407790:	ldp	x29, x30, [sp, #64]
  407794:	add	sp, sp, #0x50
  407798:	ret

000000000040779c <hashmap_iterate>:
  40779c:	sub	sp, sp, #0x30
  4077a0:	stp	x29, x30, [sp, #32]
  4077a4:	add	x29, sp, #0x20
  4077a8:	stur	x0, [x29, #-8]
  4077ac:	str	x1, [sp, #16]
  4077b0:	str	x2, [sp, #8]
  4077b4:	str	x3, [sp]
  4077b8:	ldur	x0, [x29, #-8]
  4077bc:	ldr	x1, [sp, #16]
  4077c0:	ldr	x2, [sp, #8]
  4077c4:	ldr	x3, [sp]
  4077c8:	bl	404da0 <internal_hashmap_iterate@plt>
  4077cc:	and	w0, w0, #0x1
  4077d0:	ldp	x29, x30, [sp, #32]
  4077d4:	add	sp, sp, #0x30
  4077d8:	ret

00000000004077dc <closedirp>:
  4077dc:	sub	sp, sp, #0x20
  4077e0:	stp	x29, x30, [sp, #16]
  4077e4:	add	x29, sp, #0x10
  4077e8:	str	x0, [sp, #8]
  4077ec:	ldr	x8, [sp, #8]
  4077f0:	ldr	x8, [x8]
  4077f4:	cbz	x8, 407804 <closedirp+0x28>
  4077f8:	ldr	x8, [sp, #8]
  4077fc:	ldr	x0, [x8]
  407800:	bl	404db0 <closedir@plt>
  407804:	ldp	x29, x30, [sp, #16]
  407808:	add	sp, sp, #0x20
  40780c:	ret

0000000000407810 <manager_add_host_machine>:
  407810:	sub	sp, sp, #0xa0
  407814:	stp	x29, x30, [sp, #144]
  407818:	add	x29, sp, #0x90
  40781c:	mov	x8, xzr
  407820:	adrp	x9, 41a000 <operation_new+0x40>
  407824:	add	x9, x9, #0xc38
  407828:	add	x9, x9, #0x3
  40782c:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  407830:	add	x10, x10, #0x292
  407834:	stur	x0, [x29, #-16]
  407838:	stur	x8, [x29, #-24]
  40783c:	stur	x8, [x29, #-32]
  407840:	ldur	x8, [x29, #-16]
  407844:	ldr	x8, [x8, #72]
  407848:	str	x9, [sp, #24]
  40784c:	str	x10, [sp, #16]
  407850:	cbz	x8, 407864 <manager_add_host_machine+0x54>
  407854:	stur	wzr, [x29, #-4]
  407858:	mov	w8, #0x1                   	// #1
  40785c:	stur	w8, [x29, #-64]
  407860:	b	407a5c <manager_add_host_machine+0x24c>
  407864:	sub	x0, x29, #0x30
  407868:	bl	404dc0 <sd_id128_get_machine@plt>
  40786c:	stur	w0, [x29, #-60]
  407870:	ldur	w8, [x29, #-60]
  407874:	cmp	w8, #0x0
  407878:	cset	w8, ge  // ge = tcont
  40787c:	tbnz	w8, #0, 40790c <manager_add_host_machine+0xfc>
  407880:	mov	w8, #0x3                   	// #3
  407884:	stur	w8, [x29, #-68]
  407888:	ldur	w8, [x29, #-60]
  40788c:	str	w8, [sp, #72]
  407890:	str	wzr, [sp, #68]
  407894:	ldr	w0, [sp, #68]
  407898:	bl	404b80 <log_get_max_level_realm@plt>
  40789c:	ldur	w8, [x29, #-68]
  4078a0:	and	w8, w8, #0x7
  4078a4:	cmp	w0, w8
  4078a8:	b.lt	4078dc <manager_add_host_machine+0xcc>  // b.tstop
  4078ac:	ldr	w8, [sp, #68]
  4078b0:	ldur	w9, [x29, #-68]
  4078b4:	orr	w0, w9, w8, lsl #10
  4078b8:	ldr	w1, [sp, #72]
  4078bc:	ldr	x2, [sp, #24]
  4078c0:	mov	w3, #0x67                  	// #103
  4078c4:	ldr	x4, [sp, #16]
  4078c8:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  4078cc:	add	x5, x5, #0x2ab
  4078d0:	bl	404b90 <log_internal_realm@plt>
  4078d4:	str	w0, [sp, #12]
  4078d8:	b	4078f0 <manager_add_host_machine+0xe0>
  4078dc:	ldr	w0, [sp, #72]
  4078e0:	bl	404ba0 <abs@plt>
  4078e4:	mov	w8, wzr
  4078e8:	subs	w8, w8, w0, uxtb
  4078ec:	str	w8, [sp, #12]
  4078f0:	ldr	w8, [sp, #12]
  4078f4:	str	w8, [sp, #64]
  4078f8:	ldr	w8, [sp, #64]
  4078fc:	stur	w8, [x29, #-4]
  407900:	mov	w8, #0x1                   	// #1
  407904:	stur	w8, [x29, #-64]
  407908:	b	407a5c <manager_add_host_machine+0x24c>
  40790c:	adrp	x0, 41b000 <machine_hash_ops+0x3e8>
  407910:	add	x0, x0, #0x2c8
  407914:	bl	404dd0 <strdup@plt>
  407918:	stur	x0, [x29, #-24]
  40791c:	ldur	x8, [x29, #-24]
  407920:	cbnz	x8, 40794c <manager_add_host_machine+0x13c>
  407924:	mov	w8, wzr
  407928:	mov	w0, w8
  40792c:	ldr	x1, [sp, #24]
  407930:	mov	w2, #0x6b                  	// #107
  407934:	ldr	x3, [sp, #16]
  407938:	bl	404de0 <log_oom_internal@plt>
  40793c:	stur	w0, [x29, #-4]
  407940:	mov	w8, #0x1                   	// #1
  407944:	stur	w8, [x29, #-64]
  407948:	b	407a5c <manager_add_host_machine+0x24c>
  40794c:	adrp	x0, 41b000 <machine_hash_ops+0x3e8>
  407950:	add	x0, x0, #0x2ca
  407954:	bl	404dd0 <strdup@plt>
  407958:	stur	x0, [x29, #-32]
  40795c:	ldur	x8, [x29, #-32]
  407960:	cbnz	x8, 40798c <manager_add_host_machine+0x17c>
  407964:	mov	w8, wzr
  407968:	mov	w0, w8
  40796c:	ldr	x1, [sp, #24]
  407970:	mov	w2, #0x6f                  	// #111
  407974:	ldr	x3, [sp, #16]
  407978:	bl	404de0 <log_oom_internal@plt>
  40797c:	stur	w0, [x29, #-4]
  407980:	mov	w8, #0x1                   	// #1
  407984:	stur	w8, [x29, #-64]
  407988:	b	407a5c <manager_add_host_machine+0x24c>
  40798c:	ldur	x0, [x29, #-16]
  407990:	mov	w1, #0x2                   	// #2
  407994:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  407998:	add	x2, x2, #0x2d2
  40799c:	bl	407bfc <machine_new>
  4079a0:	stur	x0, [x29, #-56]
  4079a4:	ldur	x8, [x29, #-56]
  4079a8:	cbnz	x8, 4079d4 <manager_add_host_machine+0x1c4>
  4079ac:	mov	w8, wzr
  4079b0:	mov	w0, w8
  4079b4:	ldr	x1, [sp, #24]
  4079b8:	mov	w2, #0x73                  	// #115
  4079bc:	ldr	x3, [sp, #16]
  4079c0:	bl	404de0 <log_oom_internal@plt>
  4079c4:	stur	w0, [x29, #-4]
  4079c8:	mov	w8, #0x1                   	// #1
  4079cc:	stur	w8, [x29, #-64]
  4079d0:	b	407a5c <manager_add_host_machine+0x24c>
  4079d4:	ldur	x8, [x29, #-56]
  4079d8:	mov	w9, #0x1                   	// #1
  4079dc:	str	w9, [x8, #80]
  4079e0:	ldur	x8, [x29, #-56]
  4079e4:	ldur	q0, [x29, #-48]
  4079e8:	str	q0, [x8, #16]
  4079ec:	ldur	x8, [x29, #-24]
  4079f0:	str	x8, [sp, #56]
  4079f4:	mov	x8, xzr
  4079f8:	stur	x8, [x29, #-24]
  4079fc:	ldr	x10, [sp, #56]
  407a00:	str	x10, [sp, #48]
  407a04:	ldr	x10, [sp, #48]
  407a08:	ldur	x11, [x29, #-56]
  407a0c:	str	x10, [x11, #56]
  407a10:	ldur	x10, [x29, #-32]
  407a14:	str	x10, [sp, #40]
  407a18:	stur	x8, [x29, #-32]
  407a1c:	ldr	x10, [sp, #40]
  407a20:	str	x10, [sp, #32]
  407a24:	ldr	x10, [sp, #32]
  407a28:	ldur	x11, [x29, #-56]
  407a2c:	str	x10, [x11, #64]
  407a30:	ldur	x10, [x29, #-56]
  407a34:	add	x0, x10, #0x58
  407a38:	mov	x1, x8
  407a3c:	str	w9, [sp, #8]
  407a40:	bl	404df0 <dual_timestamp_from_boottime_or_monotonic@plt>
  407a44:	ldur	x8, [x29, #-56]
  407a48:	ldur	x10, [x29, #-16]
  407a4c:	str	x8, [x10, #72]
  407a50:	stur	wzr, [x29, #-4]
  407a54:	ldr	w9, [sp, #8]
  407a58:	stur	w9, [x29, #-64]
  407a5c:	sub	x0, x29, #0x20
  407a60:	bl	407adc <freep>
  407a64:	sub	x0, x29, #0x18
  407a68:	bl	407adc <freep>
  407a6c:	ldur	w0, [x29, #-4]
  407a70:	ldp	x29, x30, [sp, #144]
  407a74:	add	sp, sp, #0xa0
  407a78:	ret

0000000000407a7c <startswith>:
  407a7c:	sub	sp, sp, #0x30
  407a80:	stp	x29, x30, [sp, #32]
  407a84:	add	x29, sp, #0x20
  407a88:	str	x0, [sp, #16]
  407a8c:	str	x1, [sp, #8]
  407a90:	ldr	x0, [sp, #8]
  407a94:	bl	404e00 <strlen@plt>
  407a98:	str	x0, [sp]
  407a9c:	ldr	x0, [sp, #16]
  407aa0:	ldr	x1, [sp, #8]
  407aa4:	ldr	x2, [sp]
  407aa8:	bl	404e10 <strncmp@plt>
  407aac:	cbnz	w0, 407ac4 <startswith+0x48>
  407ab0:	ldr	x8, [sp, #16]
  407ab4:	ldr	x9, [sp]
  407ab8:	add	x8, x8, x9
  407abc:	stur	x8, [x29, #-8]
  407ac0:	b	407acc <startswith+0x50>
  407ac4:	mov	x8, xzr
  407ac8:	stur	x8, [x29, #-8]
  407acc:	ldur	x0, [x29, #-8]
  407ad0:	ldp	x29, x30, [sp, #32]
  407ad4:	add	sp, sp, #0x30
  407ad8:	ret

0000000000407adc <freep>:
  407adc:	sub	sp, sp, #0x20
  407ae0:	stp	x29, x30, [sp, #16]
  407ae4:	add	x29, sp, #0x10
  407ae8:	str	x0, [sp, #8]
  407aec:	ldr	x8, [sp, #8]
  407af0:	ldr	x0, [x8]
  407af4:	bl	404cb0 <free@plt>
  407af8:	ldp	x29, x30, [sp, #16]
  407afc:	add	sp, sp, #0x20
  407b00:	ret

0000000000407b04 <check_idle>:
  407b04:	sub	sp, sp, #0x30
  407b08:	stp	x29, x30, [sp, #32]
  407b0c:	add	x29, sp, #0x20
  407b10:	str	x0, [sp, #16]
  407b14:	ldr	x8, [sp, #16]
  407b18:	str	x8, [sp, #8]
  407b1c:	ldr	x8, [sp, #8]
  407b20:	ldr	x8, [x8, #80]
  407b24:	cbz	x8, 407b38 <check_idle+0x34>
  407b28:	mov	w8, wzr
  407b2c:	and	w8, w8, #0x1
  407b30:	sturb	w8, [x29, #-1]
  407b34:	b	407b64 <check_idle+0x60>
  407b38:	ldr	x0, [sp, #8]
  407b3c:	mov	w8, #0x1                   	// #1
  407b40:	and	w1, w8, #0x1
  407b44:	str	w8, [sp, #4]
  407b48:	bl	407574 <manager_gc>
  407b4c:	ldr	x9, [sp, #8]
  407b50:	ldr	x0, [x9, #16]
  407b54:	bl	407b78 <hashmap_isempty>
  407b58:	ldr	w8, [sp, #4]
  407b5c:	and	w10, w0, w8
  407b60:	sturb	w10, [x29, #-1]
  407b64:	ldurb	w8, [x29, #-1]
  407b68:	and	w0, w8, #0x1
  407b6c:	ldp	x29, x30, [sp, #32]
  407b70:	add	sp, sp, #0x30
  407b74:	ret

0000000000407b78 <hashmap_isempty>:
  407b78:	sub	sp, sp, #0x20
  407b7c:	stp	x29, x30, [sp, #16]
  407b80:	add	x29, sp, #0x10
  407b84:	str	x0, [sp, #8]
  407b88:	ldr	x0, [sp, #8]
  407b8c:	bl	407ba8 <hashmap_size>
  407b90:	cmp	w0, #0x0
  407b94:	cset	w8, eq  // eq = none
  407b98:	and	w0, w8, #0x1
  407b9c:	ldp	x29, x30, [sp, #16]
  407ba0:	add	sp, sp, #0x20
  407ba4:	ret

0000000000407ba8 <hashmap_size>:
  407ba8:	sub	sp, sp, #0x20
  407bac:	stp	x29, x30, [sp, #16]
  407bb0:	add	x29, sp, #0x10
  407bb4:	str	x0, [sp, #8]
  407bb8:	ldr	x0, [sp, #8]
  407bbc:	bl	404e20 <internal_hashmap_size@plt>
  407bc0:	ldp	x29, x30, [sp, #16]
  407bc4:	add	sp, sp, #0x20
  407bc8:	ret

0000000000407bcc <ALIGN_TO>:
  407bcc:	sub	sp, sp, #0x10
  407bd0:	str	x0, [sp, #8]
  407bd4:	str	x1, [sp]
  407bd8:	ldr	x8, [sp, #8]
  407bdc:	ldr	x9, [sp]
  407be0:	add	x8, x8, x9
  407be4:	subs	x8, x8, #0x1
  407be8:	ldr	x9, [sp]
  407bec:	subs	x9, x9, #0x1
  407bf0:	bic	x0, x8, x9
  407bf4:	add	sp, sp, #0x10
  407bf8:	ret

0000000000407bfc <machine_new>:
  407bfc:	sub	sp, sp, #0x50
  407c00:	stp	x29, x30, [sp, #64]
  407c04:	add	x29, sp, #0x40
  407c08:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  407c0c:	add	x8, x8, #0x333
  407c10:	add	x8, x8, #0x3
  407c14:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  407c18:	add	x9, x9, #0x34c
  407c1c:	stur	x0, [x29, #-16]
  407c20:	stur	w1, [x29, #-20]
  407c24:	str	x2, [sp, #32]
  407c28:	str	x8, [sp, #16]
  407c2c:	str	x9, [sp, #8]
  407c30:	ldur	x8, [x29, #-16]
  407c34:	cmp	x8, #0x0
  407c38:	cset	w9, ne  // ne = any
  407c3c:	mov	w10, #0x1                   	// #1
  407c40:	eor	w9, w9, #0x1
  407c44:	eor	w9, w9, w10
  407c48:	eor	w9, w9, w10
  407c4c:	and	w9, w9, #0x1
  407c50:	mov	w0, w9
  407c54:	sxtw	x8, w0
  407c58:	cbz	x8, 407c7c <machine_new+0x80>
  407c5c:	mov	w8, wzr
  407c60:	mov	w0, w8
  407c64:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407c68:	add	x1, x1, #0x32b
  407c6c:	ldr	x2, [sp, #16]
  407c70:	mov	w3, #0x27                  	// #39
  407c74:	ldr	x4, [sp, #8]
  407c78:	bl	404bd0 <log_assert_failed_realm@plt>
  407c7c:	ldur	w8, [x29, #-20]
  407c80:	cmp	w8, #0x3
  407c84:	cset	w8, lt  // lt = tstop
  407c88:	mov	w9, #0x1                   	// #1
  407c8c:	eor	w8, w8, #0x1
  407c90:	eor	w8, w8, w9
  407c94:	eor	w8, w8, w9
  407c98:	and	w8, w8, #0x1
  407c9c:	mov	w0, w8
  407ca0:	sxtw	x10, w0
  407ca4:	cbz	x10, 407cc8 <machine_new+0xcc>
  407ca8:	mov	w8, wzr
  407cac:	mov	w0, w8
  407cb0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407cb4:	add	x1, x1, #0x388
  407cb8:	ldr	x2, [sp, #16]
  407cbc:	mov	w3, #0x28                  	// #40
  407cc0:	ldr	x4, [sp, #8]
  407cc4:	bl	404bd0 <log_assert_failed_realm@plt>
  407cc8:	ldr	x8, [sp, #32]
  407ccc:	cmp	x8, #0x0
  407cd0:	cset	w9, ne  // ne = any
  407cd4:	mov	w10, #0x1                   	// #1
  407cd8:	eor	w9, w9, #0x1
  407cdc:	eor	w9, w9, w10
  407ce0:	eor	w9, w9, w10
  407ce4:	and	w9, w9, #0x1
  407ce8:	mov	w0, w9
  407cec:	sxtw	x8, w0
  407cf0:	cbz	x8, 407d14 <machine_new+0x118>
  407cf4:	mov	w8, wzr
  407cf8:	mov	w0, w8
  407cfc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407d00:	add	x1, x1, #0x3a3
  407d04:	ldr	x2, [sp, #16]
  407d08:	mov	w3, #0x29                  	// #41
  407d0c:	ldr	x4, [sp, #8]
  407d10:	bl	404bd0 <log_assert_failed_realm@plt>
  407d14:	mov	x0, #0x1                   	// #1
  407d18:	mov	x1, #0xa0                  	// #160
  407d1c:	bl	404c00 <calloc@plt>
  407d20:	str	x0, [sp, #24]
  407d24:	ldr	x8, [sp, #24]
  407d28:	cbnz	x8, 407d38 <machine_new+0x13c>
  407d2c:	mov	x8, xzr
  407d30:	stur	x8, [x29, #-8]
  407d34:	b	407e08 <machine_new+0x20c>
  407d38:	ldr	x0, [sp, #32]
  407d3c:	bl	404dd0 <strdup@plt>
  407d40:	ldr	x8, [sp, #24]
  407d44:	str	x0, [x8, #8]
  407d48:	ldr	x8, [sp, #24]
  407d4c:	ldr	x8, [x8, #8]
  407d50:	cbnz	x8, 407d58 <machine_new+0x15c>
  407d54:	b	407de4 <machine_new+0x1e8>
  407d58:	ldur	w8, [x29, #-20]
  407d5c:	cmp	w8, #0x2
  407d60:	b.eq	407d98 <machine_new+0x19c>  // b.none
  407d64:	ldr	x8, [sp, #24]
  407d68:	ldr	x1, [x8, #8]
  407d6c:	adrp	x0, 41a000 <operation_new+0x40>
  407d70:	add	x0, x0, #0xc77
  407d74:	mov	x8, #0xffffffffffffffff    	// #-1
  407d78:	mov	x2, x8
  407d7c:	bl	404e50 <path_join_internal@plt>
  407d80:	ldr	x8, [sp, #24]
  407d84:	str	x0, [x8, #40]
  407d88:	ldr	x8, [sp, #24]
  407d8c:	ldr	x8, [x8, #40]
  407d90:	cbnz	x8, 407d98 <machine_new+0x19c>
  407d94:	b	407de4 <machine_new+0x1e8>
  407d98:	ldur	w8, [x29, #-20]
  407d9c:	ldr	x9, [sp, #24]
  407da0:	str	w8, [x9, #32]
  407da4:	ldur	x9, [x29, #-16]
  407da8:	ldr	x0, [x9, #16]
  407dac:	ldr	x9, [sp, #24]
  407db0:	ldr	x1, [x9, #8]
  407db4:	ldr	x2, [sp, #24]
  407db8:	bl	404e60 <hashmap_put@plt>
  407dbc:	cmp	w0, #0x0
  407dc0:	cset	w8, ge  // ge = tcont
  407dc4:	tbnz	w8, #0, 407dcc <machine_new+0x1d0>
  407dc8:	b	407de4 <machine_new+0x1e8>
  407dcc:	ldur	x8, [x29, #-16]
  407dd0:	ldr	x9, [sp, #24]
  407dd4:	str	x8, [x9]
  407dd8:	ldr	x8, [sp, #24]
  407ddc:	stur	x8, [x29, #-8]
  407de0:	b	407e08 <machine_new+0x20c>
  407de4:	ldr	x8, [sp, #24]
  407de8:	ldr	x0, [x8, #40]
  407dec:	bl	404cb0 <free@plt>
  407df0:	ldr	x8, [sp, #24]
  407df4:	ldr	x0, [x8, #8]
  407df8:	bl	404cb0 <free@plt>
  407dfc:	ldr	x0, [sp, #24]
  407e00:	bl	407e18 <mfree>
  407e04:	stur	x0, [x29, #-8]
  407e08:	ldur	x0, [x29, #-8]
  407e0c:	ldp	x29, x30, [sp, #64]
  407e10:	add	sp, sp, #0x50
  407e14:	ret

0000000000407e18 <mfree>:
  407e18:	sub	sp, sp, #0x20
  407e1c:	stp	x29, x30, [sp, #16]
  407e20:	add	x29, sp, #0x10
  407e24:	mov	x8, xzr
  407e28:	str	x0, [sp, #8]
  407e2c:	ldr	x0, [sp, #8]
  407e30:	str	x8, [sp]
  407e34:	bl	404cb0 <free@plt>
  407e38:	ldr	x0, [sp]
  407e3c:	ldp	x29, x30, [sp, #16]
  407e40:	add	sp, sp, #0x20
  407e44:	ret

0000000000407e48 <machine_free>:
  407e48:	sub	sp, sp, #0x50
  407e4c:	stp	x29, x30, [sp, #64]
  407e50:	add	x29, sp, #0x40
  407e54:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  407e58:	add	x8, x8, #0x333
  407e5c:	add	x8, x8, #0x3
  407e60:	stur	x0, [x29, #-16]
  407e64:	ldur	x9, [x29, #-16]
  407e68:	str	x8, [sp, #24]
  407e6c:	cbnz	x9, 407e7c <machine_free+0x34>
  407e70:	mov	x8, xzr
  407e74:	stur	x8, [x29, #-8]
  407e78:	b	4080cc <machine_free+0x284>
  407e7c:	ldur	x8, [x29, #-16]
  407e80:	ldr	x8, [x8, #136]
  407e84:	cbz	x8, 407e98 <machine_free+0x50>
  407e88:	ldur	x8, [x29, #-16]
  407e8c:	ldr	x0, [x8, #136]
  407e90:	bl	41a80c <operation_free>
  407e94:	b	407e7c <machine_free+0x34>
  407e98:	ldur	x8, [x29, #-16]
  407e9c:	ldrb	w9, [x8, #104]
  407ea0:	and	w9, w9, #0x1
  407ea4:	tbnz	w9, #0, 407eac <machine_free+0x64>
  407ea8:	b	407fd4 <machine_free+0x18c>
  407eac:	ldur	x8, [x29, #-16]
  407eb0:	ldr	x8, [x8]
  407eb4:	add	x8, x8, #0x40
  407eb8:	stur	x8, [x29, #-24]
  407ebc:	ldur	x8, [x29, #-16]
  407ec0:	str	x8, [sp, #32]
  407ec4:	ldr	x8, [sp, #32]
  407ec8:	cmp	x8, #0x0
  407ecc:	cset	w9, ne  // ne = any
  407ed0:	mov	w10, #0x1                   	// #1
  407ed4:	eor	w9, w9, #0x1
  407ed8:	eor	w9, w9, w10
  407edc:	eor	w9, w9, w10
  407ee0:	and	w9, w9, #0x1
  407ee4:	mov	w0, w9
  407ee8:	sxtw	x8, w0
  407eec:	cbz	x8, 407f14 <machine_free+0xcc>
  407ef0:	mov	w8, wzr
  407ef4:	mov	w0, w8
  407ef8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407efc:	add	x1, x1, #0x2fa
  407f00:	ldr	x2, [sp, #24]
  407f04:	mov	w3, #0x54                  	// #84
  407f08:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  407f0c:	add	x4, x4, #0x3a8
  407f10:	bl	404bd0 <log_assert_failed_realm@plt>
  407f14:	ldr	x8, [sp, #32]
  407f18:	ldr	x8, [x8, #144]
  407f1c:	cbz	x8, 407f34 <machine_free+0xec>
  407f20:	ldr	x8, [sp, #32]
  407f24:	ldr	x8, [x8, #152]
  407f28:	ldr	x9, [sp, #32]
  407f2c:	ldr	x9, [x9, #144]
  407f30:	str	x8, [x9, #152]
  407f34:	ldr	x8, [sp, #32]
  407f38:	ldr	x8, [x8, #152]
  407f3c:	cbz	x8, 407f58 <machine_free+0x110>
  407f40:	ldr	x8, [sp, #32]
  407f44:	ldr	x8, [x8, #144]
  407f48:	ldr	x9, [sp, #32]
  407f4c:	ldr	x9, [x9, #152]
  407f50:	str	x8, [x9, #144]
  407f54:	b	407fc0 <machine_free+0x178>
  407f58:	ldur	x8, [x29, #-24]
  407f5c:	ldr	x8, [x8]
  407f60:	ldr	x9, [sp, #32]
  407f64:	cmp	x8, x9
  407f68:	cset	w10, eq  // eq = none
  407f6c:	mov	w11, #0x1                   	// #1
  407f70:	eor	w10, w10, #0x1
  407f74:	eor	w10, w10, w11
  407f78:	eor	w10, w10, w11
  407f7c:	and	w10, w10, #0x1
  407f80:	mov	w0, w10
  407f84:	sxtw	x8, w0
  407f88:	cbz	x8, 407fb0 <machine_free+0x168>
  407f8c:	mov	w8, wzr
  407f90:	mov	w0, w8
  407f94:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  407f98:	add	x1, x1, #0x300
  407f9c:	ldr	x2, [sp, #24]
  407fa0:	mov	w3, #0x54                  	// #84
  407fa4:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  407fa8:	add	x4, x4, #0x3a8
  407fac:	bl	404bd0 <log_assert_failed_realm@plt>
  407fb0:	ldr	x8, [sp, #32]
  407fb4:	ldr	x8, [x8, #144]
  407fb8:	ldur	x9, [x29, #-24]
  407fbc:	str	x8, [x9]
  407fc0:	ldr	x8, [sp, #32]
  407fc4:	mov	x9, xzr
  407fc8:	str	x9, [x8, #152]
  407fcc:	ldr	x8, [sp, #32]
  407fd0:	str	x9, [x8, #144]
  407fd4:	ldur	x0, [x29, #-16]
  407fd8:	bl	4080dc <machine_release_unit>
  407fdc:	ldur	x8, [x29, #-16]
  407fe0:	ldr	x0, [x8, #72]
  407fe4:	bl	404cb0 <free@plt>
  407fe8:	ldur	x8, [x29, #-16]
  407fec:	ldr	x8, [x8]
  407ff0:	ldr	x0, [x8, #16]
  407ff4:	ldur	x8, [x29, #-16]
  407ff8:	ldr	x1, [x8, #8]
  407ffc:	bl	4082b0 <hashmap_remove>
  408000:	ldur	x8, [x29, #-16]
  408004:	ldr	x8, [x8]
  408008:	ldr	x8, [x8, #72]
  40800c:	ldur	x9, [x29, #-16]
  408010:	cmp	x8, x9
  408014:	b.ne	408028 <machine_free+0x1e0>  // b.any
  408018:	ldur	x8, [x29, #-16]
  40801c:	ldr	x8, [x8]
  408020:	mov	x9, xzr
  408024:	str	x9, [x8, #72]
  408028:	ldur	x8, [x29, #-16]
  40802c:	ldr	w9, [x8, #80]
  408030:	cmp	w9, #0x0
  408034:	cset	w9, le
  408038:	tbnz	w9, #0, 408074 <machine_free+0x22c>
  40803c:	ldur	x8, [x29, #-16]
  408040:	ldr	x8, [x8]
  408044:	ldr	x0, [x8, #32]
  408048:	ldur	x8, [x29, #-16]
  40804c:	ldr	w9, [x8, #80]
  408050:	str	x0, [sp, #16]
  408054:	mov	w0, w9
  408058:	bl	408310 <PID_TO_PTR>
  40805c:	ldur	x2, [x29, #-16]
  408060:	ldr	x8, [sp, #16]
  408064:	str	x0, [sp, #8]
  408068:	mov	x0, x8
  40806c:	ldr	x1, [sp, #8]
  408070:	bl	4082dc <hashmap_remove_value>
  408074:	ldur	x8, [x29, #-16]
  408078:	ldr	x0, [x8, #112]
  40807c:	bl	404e70 <sd_bus_message_unref@plt>
  408080:	ldur	x8, [x29, #-16]
  408084:	ldr	x8, [x8, #8]
  408088:	mov	x0, x8
  40808c:	bl	404cb0 <free@plt>
  408090:	ldur	x8, [x29, #-16]
  408094:	ldr	x0, [x8, #40]
  408098:	bl	404cb0 <free@plt>
  40809c:	ldur	x8, [x29, #-16]
  4080a0:	ldr	x0, [x8, #48]
  4080a4:	bl	404cb0 <free@plt>
  4080a8:	ldur	x8, [x29, #-16]
  4080ac:	ldr	x0, [x8, #56]
  4080b0:	bl	404cb0 <free@plt>
  4080b4:	ldur	x8, [x29, #-16]
  4080b8:	ldr	x0, [x8, #120]
  4080bc:	bl	404cb0 <free@plt>
  4080c0:	ldur	x0, [x29, #-16]
  4080c4:	bl	407e18 <mfree>
  4080c8:	stur	x0, [x29, #-8]
  4080cc:	ldur	x0, [x29, #-8]
  4080d0:	ldp	x29, x30, [sp, #64]
  4080d4:	add	sp, sp, #0x50
  4080d8:	ret

00000000004080dc <machine_release_unit>:
  4080dc:	sub	sp, sp, #0x70
  4080e0:	stp	x29, x30, [sp, #96]
  4080e4:	add	x29, sp, #0x60
  4080e8:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  4080ec:	add	x8, x8, #0x333
  4080f0:	add	x8, x8, #0x3
  4080f4:	stur	x0, [x29, #-8]
  4080f8:	str	x8, [sp, #32]
  4080fc:	ldur	x8, [x29, #-8]
  408100:	cmp	x8, #0x0
  408104:	cset	w9, ne  // ne = any
  408108:	mov	w10, #0x1                   	// #1
  40810c:	eor	w9, w9, #0x1
  408110:	eor	w9, w9, w10
  408114:	eor	w9, w9, w10
  408118:	and	w9, w9, #0x1
  40811c:	mov	w0, w9
  408120:	sxtw	x8, w0
  408124:	cbz	x8, 40814c <machine_release_unit+0x70>
  408128:	mov	w8, wzr
  40812c:	mov	w0, w8
  408130:	adrp	x1, 41a000 <operation_new+0x40>
  408134:	add	x1, x1, #0xe18
  408138:	ldr	x2, [sp, #32]
  40813c:	mov	w3, #0x27a                 	// #634
  408140:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  408144:	add	x4, x4, #0x868
  408148:	bl	404bd0 <log_assert_failed_realm@plt>
  40814c:	ldur	x8, [x29, #-8]
  408150:	ldr	x8, [x8, #64]
  408154:	cbnz	x8, 40815c <machine_release_unit+0x80>
  408158:	b	4082a4 <machine_release_unit+0x1c8>
  40815c:	ldur	x8, [x29, #-8]
  408160:	ldrb	w9, [x8, #104]
  408164:	mov	w10, #0x3                   	// #3
  408168:	lsr	w9, w9, w10
  40816c:	and	w9, w9, #0x1
  408170:	tbnz	w9, #0, 408178 <machine_release_unit+0x9c>
  408174:	b	408274 <machine_release_unit+0x198>
  408178:	sub	x2, x29, #0x20
  40817c:	stur	xzr, [x29, #-32]
  408180:	stur	xzr, [x29, #-24]
  408184:	stur	xzr, [x29, #-16]
  408188:	ldur	x8, [x29, #-8]
  40818c:	ldr	x0, [x8]
  408190:	ldur	x8, [x29, #-8]
  408194:	ldr	x1, [x8, #64]
  408198:	bl	40edcc <manager_unref_unit>
  40819c:	stur	w0, [x29, #-36]
  4081a0:	ldur	w9, [x29, #-36]
  4081a4:	cmp	w9, #0x0
  4081a8:	cset	w9, ge  // ge = tcont
  4081ac:	tbnz	w9, #0, 40825c <machine_release_unit+0x180>
  4081b0:	mov	w8, #0x4                   	// #4
  4081b4:	stur	w8, [x29, #-40]
  4081b8:	ldur	w8, [x29, #-36]
  4081bc:	stur	w8, [x29, #-44]
  4081c0:	str	wzr, [sp, #48]
  4081c4:	ldr	w0, [sp, #48]
  4081c8:	bl	404b80 <log_get_max_level_realm@plt>
  4081cc:	ldur	w8, [x29, #-40]
  4081d0:	and	w8, w8, #0x7
  4081d4:	cmp	w0, w8
  4081d8:	b.lt	408240 <machine_release_unit+0x164>  // b.tstop
  4081dc:	ldr	w8, [sp, #48]
  4081e0:	ldur	w9, [x29, #-40]
  4081e4:	orr	w0, w9, w8, lsl #10
  4081e8:	ldur	w1, [x29, #-44]
  4081ec:	ldur	w8, [x29, #-36]
  4081f0:	sub	x10, x29, #0x20
  4081f4:	str	w0, [sp, #28]
  4081f8:	mov	x0, x10
  4081fc:	str	w1, [sp, #24]
  408200:	mov	w1, w8
  408204:	bl	404e80 <bus_error_message@plt>
  408208:	ldr	w8, [sp, #28]
  40820c:	str	x0, [sp, #16]
  408210:	mov	w0, w8
  408214:	ldr	w1, [sp, #24]
  408218:	ldr	x2, [sp, #32]
  40821c:	mov	w3, #0x286                 	// #646
  408220:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  408224:	add	x4, x4, #0x88d
  408228:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40822c:	add	x5, x5, #0x8a2
  408230:	ldr	x6, [sp, #16]
  408234:	bl	404b90 <log_internal_realm@plt>
  408238:	str	w0, [sp, #12]
  40823c:	b	408254 <machine_release_unit+0x178>
  408240:	ldur	w0, [x29, #-44]
  408244:	bl	404ba0 <abs@plt>
  408248:	mov	w8, wzr
  40824c:	subs	w8, w8, w0, uxtb
  408250:	str	w8, [sp, #12]
  408254:	ldr	w8, [sp, #12]
  408258:	str	w8, [sp, #44]
  40825c:	ldur	x8, [x29, #-8]
  408260:	ldrb	w9, [x8, #104]
  408264:	and	w9, w9, #0xfffffff7
  408268:	strb	w9, [x8, #104]
  40826c:	sub	x0, x29, #0x20
  408270:	bl	404e90 <sd_bus_error_free@plt>
  408274:	ldur	x8, [x29, #-8]
  408278:	ldr	x8, [x8]
  40827c:	ldr	x0, [x8, #24]
  408280:	ldur	x8, [x29, #-8]
  408284:	ldr	x1, [x8, #64]
  408288:	bl	4082b0 <hashmap_remove>
  40828c:	ldur	x8, [x29, #-8]
  408290:	ldr	x8, [x8, #64]
  408294:	mov	x0, x8
  408298:	bl	407e18 <mfree>
  40829c:	ldur	x8, [x29, #-8]
  4082a0:	str	x0, [x8, #64]
  4082a4:	ldp	x29, x30, [sp, #96]
  4082a8:	add	sp, sp, #0x70
  4082ac:	ret

00000000004082b0 <hashmap_remove>:
  4082b0:	sub	sp, sp, #0x20
  4082b4:	stp	x29, x30, [sp, #16]
  4082b8:	add	x29, sp, #0x10
  4082bc:	str	x0, [sp, #8]
  4082c0:	str	x1, [sp]
  4082c4:	ldr	x0, [sp, #8]
  4082c8:	ldr	x1, [sp]
  4082cc:	bl	404ea0 <internal_hashmap_remove@plt>
  4082d0:	ldp	x29, x30, [sp, #16]
  4082d4:	add	sp, sp, #0x20
  4082d8:	ret

00000000004082dc <hashmap_remove_value>:
  4082dc:	sub	sp, sp, #0x30
  4082e0:	stp	x29, x30, [sp, #32]
  4082e4:	add	x29, sp, #0x20
  4082e8:	stur	x0, [x29, #-8]
  4082ec:	str	x1, [sp, #16]
  4082f0:	str	x2, [sp, #8]
  4082f4:	ldur	x0, [x29, #-8]
  4082f8:	ldr	x1, [sp, #16]
  4082fc:	ldr	x2, [sp, #8]
  408300:	bl	404eb0 <internal_hashmap_remove_value@plt>
  408304:	ldp	x29, x30, [sp, #32]
  408308:	add	sp, sp, #0x30
  40830c:	ret

0000000000408310 <PID_TO_PTR>:
  408310:	sub	sp, sp, #0x10
  408314:	str	w0, [sp, #12]
  408318:	ldrsw	x8, [sp, #12]
  40831c:	mov	x0, x8
  408320:	add	sp, sp, #0x10
  408324:	ret

0000000000408328 <machine_save>:
  408328:	stp	x29, x30, [sp, #-16]!
  40832c:	mov	x29, sp
  408330:	sub	sp, sp, #0xf0
  408334:	mov	x8, xzr
  408338:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40833c:	add	x9, x9, #0x333
  408340:	add	x9, x9, #0x3
  408344:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  408348:	add	x10, x10, #0x3c9
  40834c:	stur	x0, [x29, #-16]
  408350:	stur	x8, [x29, #-24]
  408354:	stur	x8, [x29, #-32]
  408358:	stur	x9, [x29, #-176]
  40835c:	stur	x10, [x29, #-184]
  408360:	ldur	x8, [x29, #-16]
  408364:	cmp	x8, #0x0
  408368:	cset	w9, ne  // ne = any
  40836c:	mov	w10, #0x1                   	// #1
  408370:	eor	w9, w9, #0x1
  408374:	eor	w9, w9, w10
  408378:	eor	w9, w9, w10
  40837c:	and	w9, w9, #0x1
  408380:	mov	w0, w9
  408384:	sxtw	x8, w0
  408388:	cbz	x8, 4083ac <machine_save+0x84>
  40838c:	mov	w8, wzr
  408390:	mov	w0, w8
  408394:	adrp	x1, 41a000 <operation_new+0x40>
  408398:	add	x1, x1, #0xe18
  40839c:	ldur	x2, [x29, #-176]
  4083a0:	mov	w3, #0x71                  	// #113
  4083a4:	ldur	x4, [x29, #-184]
  4083a8:	bl	404bd0 <log_assert_failed_realm@plt>
  4083ac:	ldur	x8, [x29, #-16]
  4083b0:	ldr	x8, [x8, #40]
  4083b4:	cbnz	x8, 4083c8 <machine_save+0xa0>
  4083b8:	stur	wzr, [x29, #-4]
  4083bc:	mov	w8, #0x1                   	// #1
  4083c0:	stur	w8, [x29, #-40]
  4083c4:	b	408b80 <machine_save+0x858>
  4083c8:	ldur	x8, [x29, #-16]
  4083cc:	ldrb	w9, [x8, #104]
  4083d0:	mov	w10, #0x1                   	// #1
  4083d4:	lsr	w9, w9, w10
  4083d8:	and	w9, w9, w10
  4083dc:	tbnz	w9, #0, 4083f0 <machine_save+0xc8>
  4083e0:	stur	wzr, [x29, #-4]
  4083e4:	mov	w8, #0x1                   	// #1
  4083e8:	stur	w8, [x29, #-40]
  4083ec:	b	408b80 <machine_save+0x858>
  4083f0:	adrp	x0, 41a000 <operation_new+0x40>
  4083f4:	add	x0, x0, #0xc77
  4083f8:	mov	w1, #0x1ed                 	// #493
  4083fc:	mov	w8, wzr
  408400:	mov	w2, w8
  408404:	mov	w3, w8
  408408:	mov	w4, #0x2                   	// #2
  40840c:	bl	404ec0 <mkdir_safe_label@plt>
  408410:	stur	w0, [x29, #-36]
  408414:	ldur	w8, [x29, #-36]
  408418:	cmp	w8, #0x0
  40841c:	cset	w8, ge  // ge = tcont
  408420:	tbnz	w8, #0, 408428 <machine_save+0x100>
  408424:	b	408ad0 <machine_save+0x7a8>
  408428:	ldur	x8, [x29, #-16]
  40842c:	ldr	x0, [x8, #40]
  408430:	sub	x1, x29, #0x20
  408434:	sub	x2, x29, #0x18
  408438:	bl	404ed0 <fopen_temporary@plt>
  40843c:	stur	w0, [x29, #-36]
  408440:	ldur	w9, [x29, #-36]
  408444:	cmp	w9, #0x0
  408448:	cset	w9, ge  // ge = tcont
  40844c:	tbnz	w9, #0, 408454 <machine_save+0x12c>
  408450:	b	408ad0 <machine_save+0x7a8>
  408454:	ldur	x0, [x29, #-32]
  408458:	bl	404ee0 <fileno@plt>
  40845c:	mov	w1, #0x1a4                 	// #420
  408460:	bl	404ef0 <fchmod@plt>
  408464:	ldur	x8, [x29, #-32]
  408468:	ldur	x9, [x29, #-16]
  40846c:	ldr	x2, [x9, #8]
  408470:	mov	x0, x8
  408474:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  408478:	add	x1, x1, #0x3e5
  40847c:	bl	404f00 <fprintf@plt>
  408480:	ldur	x8, [x29, #-16]
  408484:	ldr	x8, [x8, #64]
  408488:	cbz	x8, 4084f8 <machine_save+0x1d0>
  40848c:	ldur	x8, [x29, #-16]
  408490:	ldr	x0, [x8, #64]
  408494:	bl	404f10 <cescape@plt>
  408498:	stur	x0, [x29, #-48]
  40849c:	ldur	x8, [x29, #-48]
  4084a0:	cbnz	x8, 4084b8 <machine_save+0x190>
  4084a4:	mov	w8, #0xfffffff4            	// #-12
  4084a8:	stur	w8, [x29, #-36]
  4084ac:	mov	w8, #0x4                   	// #4
  4084b0:	stur	w8, [x29, #-40]
  4084b4:	b	4084d0 <machine_save+0x1a8>
  4084b8:	ldur	x0, [x29, #-32]
  4084bc:	ldur	x2, [x29, #-48]
  4084c0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4084c4:	add	x1, x1, #0x414
  4084c8:	bl	404f00 <fprintf@plt>
  4084cc:	stur	wzr, [x29, #-40]
  4084d0:	sub	x0, x29, #0x30
  4084d4:	bl	408ba0 <freep>
  4084d8:	ldur	w8, [x29, #-40]
  4084dc:	stur	w8, [x29, #-188]
  4084e0:	cbz	w8, 4084f8 <machine_save+0x1d0>
  4084e4:	b	4084e8 <machine_save+0x1c0>
  4084e8:	ldur	w8, [x29, #-188]
  4084ec:	cmp	w8, #0x4
  4084f0:	b.eq	408ad0 <machine_save+0x7a8>  // b.none
  4084f4:	b	408b80 <machine_save+0x858>
  4084f8:	ldur	x8, [x29, #-16]
  4084fc:	ldr	x8, [x8, #72]
  408500:	cbz	x8, 40851c <machine_save+0x1f4>
  408504:	ldur	x0, [x29, #-32]
  408508:	ldur	x8, [x29, #-16]
  40850c:	ldr	x2, [x8, #72]
  408510:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  408514:	add	x1, x1, #0x41e
  408518:	bl	404f00 <fprintf@plt>
  40851c:	ldur	x8, [x29, #-16]
  408520:	ldr	x8, [x8, #48]
  408524:	cbz	x8, 408594 <machine_save+0x26c>
  408528:	ldur	x8, [x29, #-16]
  40852c:	ldr	x0, [x8, #48]
  408530:	bl	404f10 <cescape@plt>
  408534:	stur	x0, [x29, #-56]
  408538:	ldur	x8, [x29, #-56]
  40853c:	cbnz	x8, 408554 <machine_save+0x22c>
  408540:	mov	w8, #0xfffffff4            	// #-12
  408544:	stur	w8, [x29, #-36]
  408548:	mov	w8, #0x4                   	// #4
  40854c:	stur	w8, [x29, #-40]
  408550:	b	40856c <machine_save+0x244>
  408554:	ldur	x0, [x29, #-32]
  408558:	ldur	x2, [x29, #-56]
  40855c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  408560:	add	x1, x1, #0x42c
  408564:	bl	404f00 <fprintf@plt>
  408568:	stur	wzr, [x29, #-40]
  40856c:	sub	x0, x29, #0x38
  408570:	bl	408ba0 <freep>
  408574:	ldur	w8, [x29, #-40]
  408578:	stur	w8, [x29, #-192]
  40857c:	cbz	w8, 408594 <machine_save+0x26c>
  408580:	b	408584 <machine_save+0x25c>
  408584:	ldur	w8, [x29, #-192]
  408588:	cmp	w8, #0x4
  40858c:	b.eq	408ad0 <machine_save+0x7a8>  // b.none
  408590:	b	408b80 <machine_save+0x858>
  408594:	ldur	x8, [x29, #-16]
  408598:	ldr	x8, [x8, #56]
  40859c:	cbz	x8, 40860c <machine_save+0x2e4>
  4085a0:	ldur	x8, [x29, #-16]
  4085a4:	ldr	x0, [x8, #56]
  4085a8:	bl	404f10 <cescape@plt>
  4085ac:	stur	x0, [x29, #-64]
  4085b0:	ldur	x8, [x29, #-64]
  4085b4:	cbnz	x8, 4085cc <machine_save+0x2a4>
  4085b8:	mov	w8, #0xfffffff4            	// #-12
  4085bc:	stur	w8, [x29, #-36]
  4085c0:	mov	w8, #0x4                   	// #4
  4085c4:	stur	w8, [x29, #-40]
  4085c8:	b	4085e4 <machine_save+0x2bc>
  4085cc:	ldur	x0, [x29, #-32]
  4085d0:	ldur	x2, [x29, #-64]
  4085d4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4085d8:	add	x1, x1, #0x438
  4085dc:	bl	404f00 <fprintf@plt>
  4085e0:	stur	wzr, [x29, #-40]
  4085e4:	sub	x0, x29, #0x40
  4085e8:	bl	408ba0 <freep>
  4085ec:	ldur	w8, [x29, #-40]
  4085f0:	stur	w8, [x29, #-196]
  4085f4:	cbz	w8, 40860c <machine_save+0x2e4>
  4085f8:	b	4085fc <machine_save+0x2d4>
  4085fc:	ldur	w8, [x29, #-196]
  408600:	cmp	w8, #0x4
  408604:	b.eq	408ad0 <machine_save+0x7a8>  // b.none
  408608:	b	408b80 <machine_save+0x858>
  40860c:	ldur	x8, [x29, #-16]
  408610:	ldr	x0, [x8, #16]
  408614:	ldr	x1, [x8, #24]
  408618:	bl	408bf0 <sd_id128_is_null>
  40861c:	cbnz	w0, 408708 <machine_save+0x3e0>
  408620:	ldur	x0, [x29, #-32]
  408624:	ldur	x8, [x29, #-16]
  408628:	ldrb	w2, [x8, #16]
  40862c:	ldur	x8, [x29, #-16]
  408630:	ldrb	w3, [x8, #17]
  408634:	ldur	x8, [x29, #-16]
  408638:	ldrb	w4, [x8, #18]
  40863c:	ldur	x8, [x29, #-16]
  408640:	ldrb	w5, [x8, #19]
  408644:	ldur	x8, [x29, #-16]
  408648:	ldrb	w6, [x8, #20]
  40864c:	ldur	x8, [x29, #-16]
  408650:	ldrb	w7, [x8, #21]
  408654:	ldur	x8, [x29, #-16]
  408658:	ldrb	w9, [x8, #22]
  40865c:	ldur	x8, [x29, #-16]
  408660:	ldrb	w10, [x8, #23]
  408664:	ldur	x8, [x29, #-16]
  408668:	ldrb	w11, [x8, #24]
  40866c:	ldur	x8, [x29, #-16]
  408670:	ldrb	w12, [x8, #25]
  408674:	ldur	x8, [x29, #-16]
  408678:	ldrb	w13, [x8, #26]
  40867c:	ldur	x8, [x29, #-16]
  408680:	ldrb	w14, [x8, #27]
  408684:	ldur	x8, [x29, #-16]
  408688:	ldrb	w15, [x8, #28]
  40868c:	ldur	x8, [x29, #-16]
  408690:	ldrb	w16, [x8, #29]
  408694:	ldur	x8, [x29, #-16]
  408698:	ldrb	w17, [x8, #30]
  40869c:	ldur	x8, [x29, #-16]
  4086a0:	ldrb	w18, [x8, #31]
  4086a4:	sub	sp, sp, #0x50
  4086a8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4086ac:	add	x1, x1, #0x441
  4086b0:	mov	x8, sp
  4086b4:	str	w9, [x8]
  4086b8:	mov	x8, sp
  4086bc:	str	w10, [x8, #8]
  4086c0:	mov	x8, sp
  4086c4:	str	w11, [x8, #16]
  4086c8:	mov	x8, sp
  4086cc:	str	w12, [x8, #24]
  4086d0:	mov	x8, sp
  4086d4:	str	w13, [x8, #32]
  4086d8:	mov	x8, sp
  4086dc:	str	w14, [x8, #40]
  4086e0:	mov	x8, sp
  4086e4:	str	w15, [x8, #48]
  4086e8:	mov	x8, sp
  4086ec:	str	w16, [x8, #56]
  4086f0:	mov	x8, sp
  4086f4:	str	w17, [x8, #64]
  4086f8:	mov	x8, sp
  4086fc:	str	w18, [x8, #72]
  408700:	bl	404f00 <fprintf@plt>
  408704:	add	sp, sp, #0x50
  408708:	ldur	x8, [x29, #-16]
  40870c:	ldr	w9, [x8, #80]
  408710:	cbz	w9, 40872c <machine_save+0x404>
  408714:	ldur	x0, [x29, #-32]
  408718:	ldur	x8, [x29, #-16]
  40871c:	ldr	w2, [x8, #80]
  408720:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  408724:	add	x1, x1, #0x486
  408728:	bl	404f00 <fprintf@plt>
  40872c:	ldur	x8, [x29, #-16]
  408730:	ldr	w9, [x8, #32]
  408734:	mov	w10, #0xffffffff            	// #-1
  408738:	cmp	w9, w10
  40873c:	b.eq	408774 <machine_save+0x44c>  // b.none
  408740:	ldur	x0, [x29, #-32]
  408744:	ldur	x8, [x29, #-16]
  408748:	ldr	w9, [x8, #32]
  40874c:	stur	x0, [x29, #-208]
  408750:	mov	w0, w9
  408754:	bl	408c2c <machine_class_to_string>
  408758:	ldur	x8, [x29, #-208]
  40875c:	stur	x0, [x29, #-216]
  408760:	mov	x0, x8
  408764:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  408768:	add	x1, x1, #0x491
  40876c:	ldur	x2, [x29, #-216]
  408770:	bl	404f00 <fprintf@plt>
  408774:	ldur	x8, [x29, #-16]
  408778:	add	x0, x8, #0x58
  40877c:	bl	408c88 <dual_timestamp_is_set>
  408780:	tbnz	w0, #0, 408788 <machine_save+0x460>
  408784:	b	4087a8 <machine_save+0x480>
  408788:	ldur	x0, [x29, #-32]
  40878c:	ldur	x8, [x29, #-16]
  408790:	ldr	x2, [x8, #88]
  408794:	ldur	x8, [x29, #-16]
  408798:	ldr	x3, [x8, #96]
  40879c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4087a0:	add	x1, x1, #0x49b
  4087a4:	bl	404f00 <fprintf@plt>
  4087a8:	ldur	x8, [x29, #-16]
  4087ac:	ldr	x8, [x8, #128]
  4087b0:	cmp	x8, #0x0
  4087b4:	cset	w9, ls  // ls = plast
  4087b8:	tbnz	w9, #0, 408834 <machine_save+0x50c>
  4087bc:	ldur	x1, [x29, #-32]
  4087c0:	adrp	x0, 41b000 <machine_hash_ops+0x3e8>
  4087c4:	add	x0, x0, #0x4b7
  4087c8:	bl	404f20 <fputs@plt>
  4087cc:	stur	xzr, [x29, #-72]
  4087d0:	ldur	x8, [x29, #-72]
  4087d4:	ldur	x9, [x29, #-16]
  4087d8:	ldr	x9, [x9, #128]
  4087dc:	cmp	x8, x9
  4087e0:	b.cs	408828 <machine_save+0x500>  // b.hs, b.nlast
  4087e4:	ldur	x8, [x29, #-72]
  4087e8:	cbz	x8, 4087f8 <machine_save+0x4d0>
  4087ec:	ldur	x1, [x29, #-32]
  4087f0:	mov	w0, #0x20                  	// #32
  4087f4:	bl	404f30 <fputc@plt>
  4087f8:	ldur	x0, [x29, #-32]
  4087fc:	ldur	x8, [x29, #-16]
  408800:	ldr	x8, [x8, #120]
  408804:	ldur	x9, [x29, #-72]
  408808:	ldr	w2, [x8, x9, lsl #2]
  40880c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  408810:	add	x1, x1, #0x4be
  408814:	bl	404f00 <fprintf@plt>
  408818:	ldur	x8, [x29, #-72]
  40881c:	add	x8, x8, #0x1
  408820:	stur	x8, [x29, #-72]
  408824:	b	4087d0 <machine_save+0x4a8>
  408828:	ldur	x1, [x29, #-32]
  40882c:	mov	w0, #0xa                   	// #10
  408830:	bl	404f30 <fputc@plt>
  408834:	ldur	x0, [x29, #-32]
  408838:	bl	404f40 <fflush_and_check@plt>
  40883c:	stur	w0, [x29, #-36]
  408840:	ldur	w8, [x29, #-36]
  408844:	cmp	w8, #0x0
  408848:	cset	w8, ge  // ge = tcont
  40884c:	tbnz	w8, #0, 408854 <machine_save+0x52c>
  408850:	b	408ad0 <machine_save+0x7a8>
  408854:	ldur	x0, [x29, #-24]
  408858:	ldur	x8, [x29, #-16]
  40885c:	ldr	x1, [x8, #40]
  408860:	bl	404f50 <rename@plt>
  408864:	cmp	w0, #0x0
  408868:	cset	w9, ge  // ge = tcont
  40886c:	tbnz	w9, #0, 408888 <machine_save+0x560>
  408870:	bl	404d50 <__errno_location@plt>
  408874:	ldr	w8, [x0]
  408878:	mov	w9, wzr
  40887c:	subs	w8, w9, w8
  408880:	stur	w8, [x29, #-36]
  408884:	b	408ad0 <machine_save+0x7a8>
  408888:	ldur	x8, [x29, #-16]
  40888c:	ldr	x8, [x8, #64]
  408890:	cbz	x8, 408ac0 <machine_save+0x798>
  408894:	sub	x8, x29, #0x60
  408898:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40889c:	add	x9, x9, #0x4c1
  4088a0:	stur	x9, [x29, #-96]
  4088a4:	ldur	x9, [x29, #-16]
  4088a8:	ldr	x9, [x9, #64]
  4088ac:	str	x9, [x8, #8]
  4088b0:	stur	xzr, [x29, #-120]
  4088b4:	stur	xzr, [x29, #-128]
  4088b8:	ldur	x8, [x29, #-128]
  4088bc:	mov	w9, #0x0                   	// #0
  4088c0:	cmp	x8, #0x2
  4088c4:	stur	w9, [x29, #-220]
  4088c8:	b.cs	4088f0 <machine_save+0x5c8>  // b.hs, b.nlast
  4088cc:	ldur	x8, [x29, #-128]
  4088d0:	mov	x9, #0x8                   	// #8
  4088d4:	mul	x8, x9, x8
  4088d8:	sub	x9, x29, #0x60
  4088dc:	add	x8, x9, x8
  4088e0:	ldr	x8, [x8]
  4088e4:	cmp	x8, #0x0
  4088e8:	cset	w10, ne  // ne = any
  4088ec:	stur	w10, [x29, #-220]
  4088f0:	ldur	w8, [x29, #-220]
  4088f4:	tbnz	w8, #0, 4088fc <machine_save+0x5d4>
  4088f8:	b	408934 <machine_save+0x60c>
  4088fc:	ldur	x8, [x29, #-128]
  408900:	mov	x9, #0x8                   	// #8
  408904:	mul	x8, x9, x8
  408908:	sub	x9, x29, #0x60
  40890c:	add	x8, x9, x8
  408910:	ldr	x0, [x8]
  408914:	bl	404e00 <strlen@plt>
  408918:	ldur	x8, [x29, #-120]
  40891c:	add	x8, x8, x0
  408920:	stur	x8, [x29, #-120]
  408924:	ldur	x8, [x29, #-128]
  408928:	add	x8, x8, #0x1
  40892c:	stur	x8, [x29, #-128]
  408930:	b	4088b8 <machine_save+0x590>
  408934:	ldur	x8, [x29, #-120]
  408938:	add	x8, x8, #0x1
  40893c:	stur	x8, [x29, #-136]
  408940:	ldur	x1, [x29, #-136]
  408944:	mov	x0, #0x1                   	// #1
  408948:	bl	408cd4 <size_multiply_overflow>
  40894c:	mov	w8, #0x1                   	// #1
  408950:	eor	w9, w0, #0x1
  408954:	eor	w9, w9, w8
  408958:	eor	w9, w9, w8
  40895c:	eor	w8, w9, w8
  408960:	and	w8, w8, #0x1
  408964:	mov	w1, w8
  408968:	sxtw	x10, w1
  40896c:	cbz	x10, 408990 <machine_save+0x668>
  408970:	mov	w8, wzr
  408974:	mov	w0, w8
  408978:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40897c:	add	x1, x1, #0x4dd
  408980:	ldur	x2, [x29, #-176]
  408984:	mov	w3, #0xdb                  	// #219
  408988:	ldur	x4, [x29, #-184]
  40898c:	bl	404bd0 <log_assert_failed_realm@plt>
  408990:	ldur	x8, [x29, #-136]
  408994:	mov	x9, #0x1                   	// #1
  408998:	mul	x8, x9, x8
  40899c:	cmp	x8, #0x400, lsl #12
  4089a0:	cset	w10, ls  // ls = plast
  4089a4:	mov	w11, #0x1                   	// #1
  4089a8:	eor	w10, w10, #0x1
  4089ac:	eor	w10, w10, w11
  4089b0:	eor	w10, w10, w11
  4089b4:	and	w10, w10, #0x1
  4089b8:	mov	w0, w10
  4089bc:	sxtw	x8, w0
  4089c0:	cbz	x8, 4089e4 <machine_save+0x6bc>
  4089c4:	mov	w8, wzr
  4089c8:	mov	w0, w8
  4089cc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4089d0:	add	x1, x1, #0x508
  4089d4:	ldur	x2, [x29, #-176]
  4089d8:	mov	w3, #0xdb                  	// #219
  4089dc:	ldur	x4, [x29, #-184]
  4089e0:	bl	404bd0 <log_assert_failed_realm@plt>
  4089e4:	ldur	x8, [x29, #-136]
  4089e8:	mov	x9, #0x1                   	// #1
  4089ec:	mul	x8, x9, x8
  4089f0:	mul	x8, x8, x9
  4089f4:	add	x8, x8, #0xf
  4089f8:	and	x8, x8, #0xfffffffffffffff0
  4089fc:	mov	x9, sp
  408a00:	subs	x8, x9, x8
  408a04:	mov	sp, x8
  408a08:	stur	x8, [x29, #-144]
  408a0c:	ldur	x8, [x29, #-144]
  408a10:	stur	x8, [x29, #-104]
  408a14:	stur	x8, [x29, #-112]
  408a18:	stur	xzr, [x29, #-128]
  408a1c:	ldur	x8, [x29, #-128]
  408a20:	mov	w9, #0x0                   	// #0
  408a24:	cmp	x8, #0x2
  408a28:	stur	w9, [x29, #-224]
  408a2c:	b.cs	408a54 <machine_save+0x72c>  // b.hs, b.nlast
  408a30:	ldur	x8, [x29, #-128]
  408a34:	mov	x9, #0x8                   	// #8
  408a38:	mul	x8, x9, x8
  408a3c:	sub	x9, x29, #0x60
  408a40:	add	x8, x9, x8
  408a44:	ldr	x8, [x8]
  408a48:	cmp	x8, #0x0
  408a4c:	cset	w10, ne  // ne = any
  408a50:	stur	w10, [x29, #-224]
  408a54:	ldur	w8, [x29, #-224]
  408a58:	tbnz	w8, #0, 408a60 <machine_save+0x738>
  408a5c:	b	408a94 <machine_save+0x76c>
  408a60:	ldur	x0, [x29, #-112]
  408a64:	ldur	x8, [x29, #-128]
  408a68:	mov	x9, #0x8                   	// #8
  408a6c:	mul	x8, x9, x8
  408a70:	sub	x9, x29, #0x60
  408a74:	add	x8, x9, x8
  408a78:	ldr	x1, [x8]
  408a7c:	bl	404f60 <stpcpy@plt>
  408a80:	stur	x0, [x29, #-112]
  408a84:	ldur	x8, [x29, #-128]
  408a88:	add	x8, x8, #0x1
  408a8c:	stur	x8, [x29, #-128]
  408a90:	b	408a1c <machine_save+0x6f4>
  408a94:	ldur	x8, [x29, #-112]
  408a98:	mov	w9, #0x0                   	// #0
  408a9c:	strb	w9, [x8]
  408aa0:	ldur	x8, [x29, #-104]
  408aa4:	stur	x8, [x29, #-152]
  408aa8:	ldur	x8, [x29, #-152]
  408aac:	stur	x8, [x29, #-80]
  408ab0:	ldur	x8, [x29, #-16]
  408ab4:	ldr	x0, [x8, #8]
  408ab8:	ldur	x1, [x29, #-80]
  408abc:	bl	404f70 <symlink@plt>
  408ac0:	stur	wzr, [x29, #-4]
  408ac4:	mov	w8, #0x1                   	// #1
  408ac8:	stur	w8, [x29, #-40]
  408acc:	b	408b80 <machine_save+0x858>
  408ad0:	ldur	x8, [x29, #-16]
  408ad4:	ldr	x0, [x8, #40]
  408ad8:	bl	404f80 <unlink@plt>
  408adc:	ldur	x8, [x29, #-24]
  408ae0:	cbz	x8, 408aec <machine_save+0x7c4>
  408ae4:	ldur	x0, [x29, #-24]
  408ae8:	bl	404f80 <unlink@plt>
  408aec:	mov	w8, #0x3                   	// #3
  408af0:	stur	w8, [x29, #-156]
  408af4:	ldur	w8, [x29, #-36]
  408af8:	stur	w8, [x29, #-160]
  408afc:	stur	wzr, [x29, #-164]
  408b00:	ldur	w0, [x29, #-164]
  408b04:	bl	404b80 <log_get_max_level_realm@plt>
  408b08:	ldur	w8, [x29, #-156]
  408b0c:	and	w8, w8, #0x7
  408b10:	cmp	w0, w8
  408b14:	b.lt	408b54 <machine_save+0x82c>  // b.tstop
  408b18:	ldur	w8, [x29, #-164]
  408b1c:	ldur	w9, [x29, #-156]
  408b20:	orr	w0, w9, w8, lsl #10
  408b24:	ldur	w1, [x29, #-160]
  408b28:	ldur	x10, [x29, #-16]
  408b2c:	ldr	x6, [x10, #40]
  408b30:	ldur	x2, [x29, #-176]
  408b34:	mov	w3, #0xe7                  	// #231
  408b38:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  408b3c:	add	x4, x4, #0x527
  408b40:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  408b44:	add	x5, x5, #0x534
  408b48:	bl	404b90 <log_internal_realm@plt>
  408b4c:	stur	w0, [x29, #-228]
  408b50:	b	408b68 <machine_save+0x840>
  408b54:	ldur	w0, [x29, #-160]
  408b58:	bl	404ba0 <abs@plt>
  408b5c:	mov	w8, wzr
  408b60:	subs	w8, w8, w0, uxtb
  408b64:	stur	w8, [x29, #-228]
  408b68:	ldur	w8, [x29, #-228]
  408b6c:	stur	w8, [x29, #-168]
  408b70:	ldur	w8, [x29, #-168]
  408b74:	stur	w8, [x29, #-4]
  408b78:	mov	w8, #0x1                   	// #1
  408b7c:	stur	w8, [x29, #-40]
  408b80:	sub	x0, x29, #0x20
  408b84:	bl	408bc8 <fclosep>
  408b88:	sub	x0, x29, #0x18
  408b8c:	bl	408ba0 <freep>
  408b90:	ldur	w0, [x29, #-4]
  408b94:	mov	sp, x29
  408b98:	ldp	x29, x30, [sp], #16
  408b9c:	ret

0000000000408ba0 <freep>:
  408ba0:	sub	sp, sp, #0x20
  408ba4:	stp	x29, x30, [sp, #16]
  408ba8:	add	x29, sp, #0x10
  408bac:	str	x0, [sp, #8]
  408bb0:	ldr	x8, [sp, #8]
  408bb4:	ldr	x0, [x8]
  408bb8:	bl	404cb0 <free@plt>
  408bbc:	ldp	x29, x30, [sp, #16]
  408bc0:	add	sp, sp, #0x20
  408bc4:	ret

0000000000408bc8 <fclosep>:
  408bc8:	sub	sp, sp, #0x20
  408bcc:	stp	x29, x30, [sp, #16]
  408bd0:	add	x29, sp, #0x10
  408bd4:	str	x0, [sp, #8]
  408bd8:	ldr	x8, [sp, #8]
  408bdc:	ldr	x0, [x8]
  408be0:	bl	404f90 <safe_fclose@plt>
  408be4:	ldp	x29, x30, [sp, #16]
  408be8:	add	sp, sp, #0x20
  408bec:	ret

0000000000408bf0 <sd_id128_is_null>:
  408bf0:	sub	sp, sp, #0x20
  408bf4:	str	x0, [sp, #16]
  408bf8:	str	x1, [sp, #24]
  408bfc:	ldr	x8, [sp, #16]
  408c00:	mov	w9, #0x0                   	// #0
  408c04:	str	w9, [sp, #12]
  408c08:	cbnz	x8, 408c1c <sd_id128_is_null+0x2c>
  408c0c:	ldr	x8, [sp, #24]
  408c10:	cmp	x8, #0x0
  408c14:	cset	w9, eq  // eq = none
  408c18:	str	w9, [sp, #12]
  408c1c:	ldr	w8, [sp, #12]
  408c20:	and	w0, w8, #0x1
  408c24:	add	sp, sp, #0x20
  408c28:	ret

0000000000408c2c <machine_class_to_string>:
  408c2c:	sub	sp, sp, #0x10
  408c30:	str	w0, [sp, #4]
  408c34:	ldr	w8, [sp, #4]
  408c38:	cmp	w8, #0x0
  408c3c:	cset	w8, lt  // lt = tstop
  408c40:	tbnz	w8, #0, 408c50 <machine_class_to_string+0x24>
  408c44:	ldr	w8, [sp, #4]
  408c48:	cmp	w8, #0x3
  408c4c:	b.lt	408c5c <machine_class_to_string+0x30>  // b.tstop
  408c50:	mov	x8, xzr
  408c54:	str	x8, [sp, #8]
  408c58:	b	408c7c <machine_class_to_string+0x50>
  408c5c:	ldrsw	x8, [sp, #4]
  408c60:	mov	x9, #0x8                   	// #8
  408c64:	mul	x8, x9, x8
  408c68:	adrp	x9, 43e000 <__FRAME_END__+0x1f3a8>
  408c6c:	add	x9, x9, #0x148
  408c70:	add	x8, x9, x8
  408c74:	ldr	x8, [x8]
  408c78:	str	x8, [sp, #8]
  408c7c:	ldr	x0, [sp, #8]
  408c80:	add	sp, sp, #0x10
  408c84:	ret

0000000000408c88 <dual_timestamp_is_set>:
  408c88:	sub	sp, sp, #0x20
  408c8c:	stp	x29, x30, [sp, #16]
  408c90:	add	x29, sp, #0x10
  408c94:	str	x0, [sp, #8]
  408c98:	ldr	x8, [sp, #8]
  408c9c:	ldr	x0, [x8]
  408ca0:	bl	40abf4 <timestamp_is_set>
  408ca4:	mov	w9, #0x1                   	// #1
  408ca8:	str	w9, [sp, #4]
  408cac:	tbnz	w0, #0, 408cc0 <dual_timestamp_is_set+0x38>
  408cb0:	ldr	x8, [sp, #8]
  408cb4:	ldr	x0, [x8, #8]
  408cb8:	bl	40abf4 <timestamp_is_set>
  408cbc:	str	w0, [sp, #4]
  408cc0:	ldr	w8, [sp, #4]
  408cc4:	and	w0, w8, #0x1
  408cc8:	ldp	x29, x30, [sp, #16]
  408ccc:	add	sp, sp, #0x20
  408cd0:	ret

0000000000408cd4 <size_multiply_overflow>:
  408cd4:	sub	sp, sp, #0x20
  408cd8:	str	x0, [sp, #24]
  408cdc:	str	x1, [sp, #16]
  408ce0:	ldr	x8, [sp, #16]
  408ce4:	mov	w9, #0x0                   	// #0
  408ce8:	str	w9, [sp, #12]
  408cec:	cbz	x8, 408d0c <size_multiply_overflow+0x38>
  408cf0:	ldr	x8, [sp, #24]
  408cf4:	ldr	x9, [sp, #16]
  408cf8:	mov	x10, #0xffffffffffffffff    	// #-1
  408cfc:	udiv	x9, x10, x9
  408d00:	cmp	x8, x9
  408d04:	cset	w11, hi  // hi = pmore
  408d08:	str	w11, [sp, #12]
  408d0c:	ldr	w8, [sp, #12]
  408d10:	mov	w9, #0x1                   	// #1
  408d14:	eor	w8, w8, #0x1
  408d18:	eor	w8, w8, w9
  408d1c:	and	w8, w8, #0x1
  408d20:	mov	w0, w8
  408d24:	sxtw	x10, w0
  408d28:	cmp	x10, #0x0
  408d2c:	cset	w8, ne  // ne = any
  408d30:	and	w0, w8, #0x1
  408d34:	add	sp, sp, #0x20
  408d38:	ret

0000000000408d3c <machine_load>:
  408d3c:	sub	sp, sp, #0x160
  408d40:	stp	x29, x30, [sp, #320]
  408d44:	str	x28, [sp, #336]
  408d48:	add	x29, sp, #0x140
  408d4c:	sub	x8, x29, #0x18
  408d50:	mov	x9, xzr
  408d54:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  408d58:	add	x10, x10, #0x333
  408d5c:	add	x10, x10, #0x3
  408d60:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408d64:	add	x11, x11, #0x5b9
  408d68:	str	x0, [x8, #8]
  408d6c:	str	x9, [x8]
  408d70:	stur	x9, [x29, #-32]
  408d74:	stur	x9, [x29, #-40]
  408d78:	stur	x9, [x29, #-48]
  408d7c:	stur	x9, [x29, #-56]
  408d80:	stur	x9, [x29, #-64]
  408d84:	str	x8, [sp, #152]
  408d88:	str	x10, [sp, #144]
  408d8c:	str	x11, [sp, #136]
  408d90:	ldr	x8, [sp, #152]
  408d94:	ldr	x9, [x8, #8]
  408d98:	cmp	x9, #0x0
  408d9c:	cset	w10, ne  // ne = any
  408da0:	mov	w11, #0x1                   	// #1
  408da4:	eor	w10, w10, #0x1
  408da8:	eor	w10, w10, w11
  408dac:	eor	w10, w10, w11
  408db0:	and	w10, w10, #0x1
  408db4:	mov	w0, w10
  408db8:	sxtw	x9, w0
  408dbc:	cbz	x9, 408de4 <machine_load+0xa8>
  408dc0:	mov	w8, wzr
  408dc4:	mov	w0, w8
  408dc8:	adrp	x1, 41a000 <operation_new+0x40>
  408dcc:	add	x1, x1, #0xe18
  408dd0:	ldr	x2, [sp, #144]
  408dd4:	mov	w3, #0xfc                  	// #252
  408dd8:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  408ddc:	add	x4, x4, #0x557
  408de0:	bl	404bd0 <log_assert_failed_realm@plt>
  408de4:	ldr	x8, [sp, #152]
  408de8:	ldr	x9, [x8, #8]
  408dec:	ldr	x9, [x9, #40]
  408df0:	cbnz	x9, 408e04 <machine_load+0xc8>
  408df4:	stur	wzr, [x29, #-4]
  408df8:	mov	w8, #0x1                   	// #1
  408dfc:	stur	w8, [x29, #-72]
  408e00:	b	4092bc <machine_load+0x580>
  408e04:	ldr	x8, [sp, #152]
  408e08:	ldr	x9, [x8, #8]
  408e0c:	ldr	x1, [x9, #40]
  408e10:	ldr	x9, [x8, #8]
  408e14:	add	x3, x9, #0x40
  408e18:	ldr	x9, [x8, #8]
  408e1c:	add	x5, x9, #0x48
  408e20:	ldr	x9, [x8, #8]
  408e24:	add	x7, x9, #0x30
  408e28:	ldr	x9, [x8, #8]
  408e2c:	add	x9, x9, #0x38
  408e30:	mov	x10, xzr
  408e34:	mov	x0, x10
  408e38:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  408e3c:	add	x2, x2, #0x573
  408e40:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  408e44:	add	x4, x4, #0x579
  408e48:	adrp	x6, 41b000 <machine_hash_ops+0x3e8>
  408e4c:	add	x6, x6, #0x583
  408e50:	mov	x11, sp
  408e54:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  408e58:	add	x12, x12, #0x58b
  408e5c:	str	x12, [x11]
  408e60:	mov	x11, sp
  408e64:	str	x9, [x11, #8]
  408e68:	mov	x9, sp
  408e6c:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408e70:	add	x11, x11, #0x590
  408e74:	str	x11, [x9, #16]
  408e78:	mov	x9, sp
  408e7c:	sub	x11, x29, #0x28
  408e80:	str	x11, [x9, #24]
  408e84:	mov	x9, sp
  408e88:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408e8c:	add	x11, x11, #0x593
  408e90:	str	x11, [x9, #32]
  408e94:	mov	x9, sp
  408e98:	sub	x11, x29, #0x30
  408e9c:	str	x11, [x9, #40]
  408ea0:	mov	x9, sp
  408ea4:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408ea8:	add	x11, x11, #0x59a
  408eac:	str	x11, [x9, #48]
  408eb0:	mov	x9, sp
  408eb4:	sub	x11, x29, #0x38
  408eb8:	str	x11, [x9, #56]
  408ebc:	mov	x9, sp
  408ec0:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408ec4:	add	x11, x11, #0x5a0
  408ec8:	str	x11, [x9, #64]
  408ecc:	mov	x9, sp
  408ed0:	sub	x11, x29, #0x18
  408ed4:	str	x11, [x9, #72]
  408ed8:	mov	x9, sp
  408edc:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408ee0:	add	x11, x11, #0x5a9
  408ee4:	str	x11, [x9, #80]
  408ee8:	mov	x9, sp
  408eec:	sub	x11, x29, #0x20
  408ef0:	str	x11, [x9, #88]
  408ef4:	mov	x9, sp
  408ef8:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  408efc:	add	x11, x11, #0x5b3
  408f00:	str	x11, [x9, #96]
  408f04:	mov	x9, sp
  408f08:	sub	x11, x29, #0x40
  408f0c:	str	x11, [x9, #104]
  408f10:	mov	x9, sp
  408f14:	str	x10, [x9, #112]
  408f18:	bl	404fa0 <parse_env_file_sentinel@plt>
  408f1c:	stur	w0, [x29, #-68]
  408f20:	ldur	w13, [x29, #-68]
  408f24:	cmp	w13, #0x0
  408f28:	cset	w13, ge  // ge = tcont
  408f2c:	tbnz	w13, #0, 408fe8 <machine_load+0x2ac>
  408f30:	ldur	w8, [x29, #-68]
  408f34:	mov	w9, #0xfffffffe            	// #-2
  408f38:	cmp	w8, w9
  408f3c:	b.ne	408f50 <machine_load+0x214>  // b.any
  408f40:	stur	wzr, [x29, #-4]
  408f44:	mov	w8, #0x1                   	// #1
  408f48:	stur	w8, [x29, #-72]
  408f4c:	b	4092bc <machine_load+0x580>
  408f50:	mov	w8, #0x3                   	// #3
  408f54:	stur	w8, [x29, #-76]
  408f58:	ldur	w8, [x29, #-68]
  408f5c:	stur	w8, [x29, #-80]
  408f60:	stur	wzr, [x29, #-84]
  408f64:	ldur	w0, [x29, #-84]
  408f68:	bl	404b80 <log_get_max_level_realm@plt>
  408f6c:	ldur	w8, [x29, #-76]
  408f70:	and	w8, w8, #0x7
  408f74:	cmp	w0, w8
  408f78:	b.lt	408fb8 <machine_load+0x27c>  // b.tstop
  408f7c:	ldur	w8, [x29, #-84]
  408f80:	ldur	w9, [x29, #-76]
  408f84:	orr	w0, w9, w8, lsl #10
  408f88:	ldur	w1, [x29, #-80]
  408f8c:	ldr	x10, [sp, #152]
  408f90:	ldr	x11, [x10, #8]
  408f94:	ldr	x6, [x11, #40]
  408f98:	ldr	x2, [sp, #144]
  408f9c:	mov	w3, #0x110                 	// #272
  408fa0:	ldr	x4, [sp, #136]
  408fa4:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  408fa8:	add	x5, x5, #0x5c6
  408fac:	bl	404b90 <log_internal_realm@plt>
  408fb0:	str	w0, [sp, #132]
  408fb4:	b	408fcc <machine_load+0x290>
  408fb8:	ldur	w0, [x29, #-80]
  408fbc:	bl	404ba0 <abs@plt>
  408fc0:	mov	w8, wzr
  408fc4:	subs	w8, w8, w0, uxtb
  408fc8:	str	w8, [sp, #132]
  408fcc:	ldr	w8, [sp, #132]
  408fd0:	stur	w8, [x29, #-88]
  408fd4:	ldur	w8, [x29, #-88]
  408fd8:	stur	w8, [x29, #-4]
  408fdc:	mov	w8, #0x1                   	// #1
  408fe0:	stur	w8, [x29, #-72]
  408fe4:	b	4092bc <machine_load+0x580>
  408fe8:	ldur	x8, [x29, #-40]
  408fec:	cbz	x8, 409004 <machine_load+0x2c8>
  408ff0:	ldur	x0, [x29, #-40]
  408ff4:	ldr	x8, [sp, #152]
  408ff8:	ldr	x9, [x8, #8]
  408ffc:	add	x1, x9, #0x10
  409000:	bl	404fb0 <sd_id128_from_string@plt>
  409004:	ldur	x8, [x29, #-48]
  409008:	cbz	x8, 409020 <machine_load+0x2e4>
  40900c:	ldur	x0, [x29, #-48]
  409010:	ldr	x8, [sp, #152]
  409014:	ldr	x9, [x8, #8]
  409018:	add	x1, x9, #0x50
  40901c:	bl	404fc0 <parse_pid@plt>
  409020:	ldur	x8, [x29, #-56]
  409024:	cbz	x8, 409054 <machine_load+0x318>
  409028:	ldur	x0, [x29, #-56]
  40902c:	bl	409300 <machine_class_from_string>
  409030:	stur	w0, [x29, #-92]
  409034:	ldur	w8, [x29, #-92]
  409038:	cmp	w8, #0x0
  40903c:	cset	w8, lt  // lt = tstop
  409040:	tbnz	w8, #0, 409054 <machine_load+0x318>
  409044:	ldur	w8, [x29, #-92]
  409048:	ldr	x9, [sp, #152]
  40904c:	ldr	x10, [x9, #8]
  409050:	str	w8, [x10, #32]
  409054:	ldr	x8, [sp, #152]
  409058:	ldr	x9, [x8]
  40905c:	cbz	x9, 409074 <machine_load+0x338>
  409060:	ldr	x8, [sp, #152]
  409064:	ldr	x0, [x8]
  409068:	ldr	x9, [x8, #8]
  40906c:	add	x1, x9, #0x58
  409070:	bl	404fd0 <deserialize_usec@plt>
  409074:	ldur	x8, [x29, #-32]
  409078:	cbz	x8, 409090 <machine_load+0x354>
  40907c:	ldur	x0, [x29, #-32]
  409080:	ldr	x8, [sp, #152]
  409084:	ldr	x9, [x8, #8]
  409088:	add	x1, x9, #0x60
  40908c:	bl	404fd0 <deserialize_usec@plt>
  409090:	ldur	x8, [x29, #-64]
  409094:	cbz	x8, 4092ac <machine_load+0x570>
  409098:	mov	x8, xzr
  40909c:	stur	xzr, [x29, #-104]
  4090a0:	stur	xzr, [x29, #-112]
  4090a4:	stur	x8, [x29, #-128]
  4090a8:	ldur	x8, [x29, #-64]
  4090ac:	stur	x8, [x29, #-120]
  4090b0:	sub	x1, x29, #0x88
  4090b4:	mov	x8, xzr
  4090b8:	stur	x8, [x29, #-136]
  4090bc:	sub	x0, x29, #0x78
  4090c0:	mov	x2, x8
  4090c4:	mov	w9, wzr
  4090c8:	mov	w3, w9
  4090cc:	bl	404fe0 <extract_first_word@plt>
  4090d0:	stur	w0, [x29, #-68]
  4090d4:	ldur	w9, [x29, #-68]
  4090d8:	cbnz	w9, 4090e8 <machine_load+0x3ac>
  4090dc:	mov	w8, #0x4                   	// #4
  4090e0:	stur	w8, [x29, #-72]
  4090e4:	b	409244 <machine_load+0x508>
  4090e8:	ldur	w8, [x29, #-68]
  4090ec:	mov	w9, #0xfffffff4            	// #-12
  4090f0:	cmp	w8, w9
  4090f4:	b.ne	409120 <machine_load+0x3e4>  // b.any
  4090f8:	mov	w8, wzr
  4090fc:	mov	w0, w8
  409100:	ldr	x1, [sp, #144]
  409104:	mov	w2, #0x134                 	// #308
  409108:	ldr	x3, [sp, #136]
  40910c:	bl	404de0 <log_oom_internal@plt>
  409110:	stur	w0, [x29, #-4]
  409114:	mov	w8, #0x1                   	// #1
  409118:	stur	w8, [x29, #-72]
  40911c:	b	409244 <machine_load+0x508>
  409120:	ldur	w8, [x29, #-68]
  409124:	cmp	w8, #0x0
  409128:	cset	w8, ge  // ge = tcont
  40912c:	tbnz	w8, #0, 4091b8 <machine_load+0x47c>
  409130:	mov	w8, #0x4                   	// #4
  409134:	stur	w8, [x29, #-144]
  409138:	ldur	w8, [x29, #-68]
  40913c:	stur	w8, [x29, #-148]
  409140:	stur	wzr, [x29, #-152]
  409144:	ldur	w0, [x29, #-152]
  409148:	bl	404b80 <log_get_max_level_realm@plt>
  40914c:	ldur	w8, [x29, #-144]
  409150:	and	w8, w8, #0x7
  409154:	cmp	w0, w8
  409158:	b.lt	409190 <machine_load+0x454>  // b.tstop
  40915c:	ldur	w8, [x29, #-152]
  409160:	ldur	w9, [x29, #-144]
  409164:	orr	w0, w9, w8, lsl #10
  409168:	ldur	w1, [x29, #-148]
  40916c:	ldur	x6, [x29, #-64]
  409170:	ldr	x2, [sp, #144]
  409174:	mov	w3, #0x136                 	// #310
  409178:	ldr	x4, [sp, #136]
  40917c:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  409180:	add	x5, x5, #0x5dc
  409184:	bl	404b90 <log_internal_realm@plt>
  409188:	str	w0, [sp, #128]
  40918c:	b	4091a4 <machine_load+0x468>
  409190:	ldur	w0, [x29, #-148]
  409194:	bl	404ba0 <abs@plt>
  409198:	mov	w8, wzr
  40919c:	subs	w8, w8, w0, uxtb
  4091a0:	str	w8, [sp, #128]
  4091a4:	ldr	w8, [sp, #128]
  4091a8:	stur	w8, [x29, #-156]
  4091ac:	mov	w8, #0x4                   	// #4
  4091b0:	stur	w8, [x29, #-72]
  4091b4:	b	409244 <machine_load+0x508>
  4091b8:	ldur	x0, [x29, #-136]
  4091bc:	sub	x1, x29, #0x8c
  4091c0:	bl	404ff0 <parse_ifindex@plt>
  4091c4:	cmp	w0, #0x0
  4091c8:	cset	w8, ge  // ge = tcont
  4091cc:	tbnz	w8, #0, 4091dc <machine_load+0x4a0>
  4091d0:	mov	w8, #0x5                   	// #5
  4091d4:	stur	w8, [x29, #-72]
  4091d8:	b	409244 <machine_load+0x508>
  4091dc:	ldur	x8, [x29, #-112]
  4091e0:	add	x2, x8, #0x1
  4091e4:	sub	x0, x29, #0x80
  4091e8:	sub	x1, x29, #0x68
  4091ec:	mov	x3, #0x4                   	// #4
  4091f0:	bl	405000 <greedy_realloc@plt>
  4091f4:	cbnz	x0, 409228 <machine_load+0x4ec>
  4091f8:	ldur	x0, [x29, #-128]
  4091fc:	bl	404cb0 <free@plt>
  409200:	mov	w8, wzr
  409204:	mov	w0, w8
  409208:	ldr	x1, [sp, #144]
  40920c:	mov	w2, #0x13f                 	// #319
  409210:	ldr	x3, [sp, #136]
  409214:	bl	404de0 <log_oom_internal@plt>
  409218:	stur	w0, [x29, #-4]
  40921c:	mov	w8, #0x1                   	// #1
  409220:	stur	w8, [x29, #-72]
  409224:	b	409244 <machine_load+0x508>
  409228:	ldur	w8, [x29, #-140]
  40922c:	ldur	x9, [x29, #-128]
  409230:	ldur	x10, [x29, #-112]
  409234:	add	x11, x10, #0x1
  409238:	stur	x11, [x29, #-112]
  40923c:	str	w8, [x9, x10, lsl #2]
  409240:	stur	wzr, [x29, #-72]
  409244:	sub	x0, x29, #0x88
  409248:	bl	408ba0 <freep>
  40924c:	ldur	w8, [x29, #-72]
  409250:	str	w8, [sp, #124]
  409254:	cbz	w8, 40927c <machine_load+0x540>
  409258:	b	40925c <machine_load+0x520>
  40925c:	ldr	w8, [sp, #124]
  409260:	cmp	w8, #0x4
  409264:	b.eq	409280 <machine_load+0x544>  // b.none
  409268:	b	40926c <machine_load+0x530>
  40926c:	ldr	w8, [sp, #124]
  409270:	cmp	w8, #0x5
  409274:	b.eq	4090b0 <machine_load+0x374>  // b.none
  409278:	b	4092bc <machine_load+0x580>
  40927c:	b	4090b0 <machine_load+0x374>
  409280:	ldr	x8, [sp, #152]
  409284:	ldr	x9, [x8, #8]
  409288:	ldr	x0, [x9, #120]
  40928c:	bl	404cb0 <free@plt>
  409290:	ldur	x8, [x29, #-128]
  409294:	ldr	x9, [sp, #152]
  409298:	ldr	x10, [x9, #8]
  40929c:	str	x8, [x10, #120]
  4092a0:	ldur	x8, [x29, #-112]
  4092a4:	ldr	x10, [x9, #8]
  4092a8:	str	x8, [x10, #128]
  4092ac:	ldur	w8, [x29, #-68]
  4092b0:	stur	w8, [x29, #-4]
  4092b4:	mov	w8, #0x1                   	// #1
  4092b8:	stur	w8, [x29, #-72]
  4092bc:	sub	x0, x29, #0x40
  4092c0:	bl	408ba0 <freep>
  4092c4:	sub	x0, x29, #0x38
  4092c8:	bl	408ba0 <freep>
  4092cc:	sub	x0, x29, #0x30
  4092d0:	bl	408ba0 <freep>
  4092d4:	sub	x0, x29, #0x28
  4092d8:	bl	408ba0 <freep>
  4092dc:	sub	x0, x29, #0x20
  4092e0:	bl	408ba0 <freep>
  4092e4:	sub	x0, x29, #0x18
  4092e8:	bl	408ba0 <freep>
  4092ec:	ldur	w0, [x29, #-4]
  4092f0:	ldr	x28, [sp, #336]
  4092f4:	ldp	x29, x30, [sp, #320]
  4092f8:	add	sp, sp, #0x160
  4092fc:	ret

0000000000409300 <machine_class_from_string>:
  409300:	sub	sp, sp, #0x20
  409304:	stp	x29, x30, [sp, #16]
  409308:	add	x29, sp, #0x10
  40930c:	adrp	x8, 43e000 <__FRAME_END__+0x1f3a8>
  409310:	add	x8, x8, #0x148
  409314:	mov	x1, #0x3                   	// #3
  409318:	str	x0, [sp, #8]
  40931c:	ldr	x2, [sp, #8]
  409320:	mov	x0, x8
  409324:	bl	405010 <string_table_lookup@plt>
  409328:	ldp	x29, x30, [sp, #16]
  40932c:	add	sp, sp, #0x20
  409330:	ret

0000000000409334 <machine_start>:
  409334:	sub	sp, sp, #0x80
  409338:	stp	x29, x30, [sp, #112]
  40933c:	add	x29, sp, #0x70
  409340:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  409344:	add	x8, x8, #0x333
  409348:	add	x8, x8, #0x3
  40934c:	stur	x0, [x29, #-16]
  409350:	stur	x1, [x29, #-24]
  409354:	stur	x2, [x29, #-32]
  409358:	stur	x8, [x29, #-48]
  40935c:	ldur	x8, [x29, #-16]
  409360:	cmp	x8, #0x0
  409364:	cset	w9, ne  // ne = any
  409368:	mov	w10, #0x1                   	// #1
  40936c:	eor	w9, w9, #0x1
  409370:	eor	w9, w9, w10
  409374:	eor	w9, w9, w10
  409378:	and	w9, w9, #0x1
  40937c:	mov	w0, w9
  409380:	sxtw	x8, w0
  409384:	cbz	x8, 4093ac <machine_start+0x78>
  409388:	mov	w8, wzr
  40938c:	mov	w0, w8
  409390:	adrp	x1, 41a000 <operation_new+0x40>
  409394:	add	x1, x1, #0xe18
  409398:	ldur	x2, [x29, #-48]
  40939c:	mov	w3, #0x1b9                 	// #441
  4093a0:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  4093a4:	add	x4, x4, #0x5f6
  4093a8:	bl	404bd0 <log_assert_failed_realm@plt>
  4093ac:	mov	w8, #0x0                   	// #0
  4093b0:	sturb	w8, [x29, #-37]
  4093b4:	ldur	x9, [x29, #-16]
  4093b8:	ldr	w8, [x9, #32]
  4093bc:	subs	w8, w8, #0x0
  4093c0:	mov	w10, #0x1                   	// #1
  4093c4:	cmp	w8, #0x1
  4093c8:	cset	w8, ls  // ls = plast
  4093cc:	eor	w8, w8, w10
  4093d0:	tbnz	w8, #0, 4093e4 <machine_start+0xb0>
  4093d4:	b	4093d8 <machine_start+0xa4>
  4093d8:	mov	w8, #0x1                   	// #1
  4093dc:	sturb	w8, [x29, #-37]
  4093e0:	b	4093e4 <machine_start+0xb0>
  4093e4:	ldurb	w8, [x29, #-37]
  4093e8:	and	w8, w8, #0x1
  4093ec:	sturb	w8, [x29, #-38]
  4093f0:	ldurb	w8, [x29, #-38]
  4093f4:	tbnz	w8, #0, 409404 <machine_start+0xd0>
  4093f8:	mov	w8, #0xffffffa1            	// #-95
  4093fc:	stur	w8, [x29, #-4]
  409400:	b	409598 <machine_start+0x264>
  409404:	ldur	x8, [x29, #-16]
  409408:	ldrb	w9, [x8, #104]
  40940c:	mov	w10, #0x1                   	// #1
  409410:	lsr	w9, w9, w10
  409414:	and	w9, w9, w10
  409418:	tbnz	w9, #0, 409420 <machine_start+0xec>
  40941c:	b	409428 <machine_start+0xf4>
  409420:	stur	wzr, [x29, #-4]
  409424:	b	409598 <machine_start+0x264>
  409428:	ldur	x8, [x29, #-16]
  40942c:	ldr	x8, [x8]
  409430:	ldr	x0, [x8, #32]
  409434:	ldur	x8, [x29, #-16]
  409438:	ldr	w9, [x8, #80]
  40943c:	str	x0, [sp, #56]
  409440:	mov	w0, w9
  409444:	bl	408310 <PID_TO_PTR>
  409448:	ldur	x2, [x29, #-16]
  40944c:	ldr	x8, [sp, #56]
  409450:	str	x0, [sp, #48]
  409454:	mov	x0, x8
  409458:	ldr	x1, [sp, #48]
  40945c:	bl	404e60 <hashmap_put@plt>
  409460:	stur	w0, [x29, #-36]
  409464:	ldur	w9, [x29, #-36]
  409468:	cmp	w9, #0x0
  40946c:	cset	w9, ge  // ge = tcont
  409470:	tbnz	w9, #0, 409480 <machine_start+0x14c>
  409474:	ldur	w8, [x29, #-36]
  409478:	stur	w8, [x29, #-4]
  40947c:	b	409598 <machine_start+0x264>
  409480:	ldur	x0, [x29, #-16]
  409484:	ldur	x1, [x29, #-24]
  409488:	ldur	x2, [x29, #-32]
  40948c:	bl	4095a8 <machine_ensure_scope>
  409490:	stur	w0, [x29, #-36]
  409494:	ldur	w8, [x29, #-36]
  409498:	cmp	w8, #0x0
  40949c:	cset	w8, ge  // ge = tcont
  4094a0:	tbnz	w8, #0, 4094b0 <machine_start+0x17c>
  4094a4:	ldur	w8, [x29, #-36]
  4094a8:	stur	w8, [x29, #-4]
  4094ac:	b	409598 <machine_start+0x264>
  4094b0:	ldur	x8, [x29, #-16]
  4094b4:	ldr	x7, [x8, #8]
  4094b8:	ldur	x8, [x29, #-16]
  4094bc:	ldr	w9, [x8, #80]
  4094c0:	ldur	x8, [x29, #-16]
  4094c4:	ldr	x8, [x8, #8]
  4094c8:	mov	w0, #0x6                   	// #6
  4094cc:	mov	w10, wzr
  4094d0:	mov	w1, w10
  4094d4:	ldur	x2, [x29, #-48]
  4094d8:	mov	w3, #0x1ce                 	// #462
  4094dc:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  4094e0:	add	x4, x4, #0x635
  4094e4:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  4094e8:	add	x5, x5, #0x643
  4094ec:	adrp	x6, 41b000 <machine_hash_ops+0x3e8>
  4094f0:	add	x6, x6, #0x66f
  4094f4:	mov	x11, sp
  4094f8:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  4094fc:	add	x12, x12, #0x677
  409500:	str	x12, [x11]
  409504:	mov	x11, sp
  409508:	str	w9, [x11, #8]
  40950c:	mov	x11, sp
  409510:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  409514:	add	x12, x12, #0x681
  409518:	str	x12, [x11, #16]
  40951c:	mov	x11, sp
  409520:	str	x8, [x11, #24]
  409524:	mov	x8, sp
  409528:	mov	x11, xzr
  40952c:	str	x11, [x8, #32]
  409530:	bl	405020 <log_struct_internal@plt>
  409534:	ldur	x8, [x29, #-16]
  409538:	add	x8, x8, #0x58
  40953c:	mov	x0, x8
  409540:	bl	408c88 <dual_timestamp_is_set>
  409544:	tbnz	w0, #0, 409554 <machine_start+0x220>
  409548:	ldur	x8, [x29, #-16]
  40954c:	add	x0, x8, #0x58
  409550:	bl	405030 <dual_timestamp_get@plt>
  409554:	ldur	x8, [x29, #-16]
  409558:	ldrb	w9, [x8, #104]
  40955c:	and	w9, w9, #0xfffffffd
  409560:	orr	w9, w9, #0x2
  409564:	strb	w9, [x8, #104]
  409568:	ldur	x0, [x29, #-16]
  40956c:	bl	408328 <machine_save>
  409570:	ldur	x8, [x29, #-16]
  409574:	mov	x0, x8
  409578:	mov	w9, #0x1                   	// #1
  40957c:	and	w1, w9, #0x1
  409580:	bl	418078 <machine_send_signal>
  409584:	ldur	x8, [x29, #-16]
  409588:	ldr	x8, [x8]
  40958c:	mov	x0, x8
  409590:	bl	4112cc <manager_enqueue_nscd_cache_flush>
  409594:	stur	wzr, [x29, #-4]
  409598:	ldur	w0, [x29, #-4]
  40959c:	ldp	x29, x30, [sp, #112]
  4095a0:	add	sp, sp, #0x80
  4095a4:	ret

00000000004095a8 <machine_ensure_scope>:
  4095a8:	sub	sp, sp, #0x70
  4095ac:	stp	x29, x30, [sp, #96]
  4095b0:	add	x29, sp, #0x60
  4095b4:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  4095b8:	add	x8, x8, #0x333
  4095bc:	add	x8, x8, #0x3
  4095c0:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  4095c4:	add	x9, x9, #0x958
  4095c8:	stur	x0, [x29, #-16]
  4095cc:	stur	x1, [x29, #-24]
  4095d0:	stur	x2, [x29, #-32]
  4095d4:	str	x8, [sp, #32]
  4095d8:	str	x9, [sp, #24]
  4095dc:	ldur	x8, [x29, #-16]
  4095e0:	cmp	x8, #0x0
  4095e4:	cset	w9, ne  // ne = any
  4095e8:	mov	w10, #0x1                   	// #1
  4095ec:	eor	w9, w9, #0x1
  4095f0:	eor	w9, w9, w10
  4095f4:	eor	w9, w9, w10
  4095f8:	and	w9, w9, #0x1
  4095fc:	mov	w0, w9
  409600:	sxtw	x8, w0
  409604:	cbz	x8, 409628 <machine_ensure_scope+0x80>
  409608:	mov	w8, wzr
  40960c:	mov	w0, w8
  409610:	adrp	x1, 41a000 <operation_new+0x40>
  409614:	add	x1, x1, #0xe18
  409618:	ldr	x2, [sp, #32]
  40961c:	mov	w3, #0x1a7                 	// #423
  409620:	ldr	x4, [sp, #24]
  409624:	bl	404bd0 <log_assert_failed_realm@plt>
  409628:	ldur	x8, [x29, #-16]
  40962c:	ldr	w9, [x8, #32]
  409630:	cmp	w9, #0x2
  409634:	cset	w9, ne  // ne = any
  409638:	mov	w10, #0x1                   	// #1
  40963c:	eor	w9, w9, #0x1
  409640:	eor	w9, w9, w10
  409644:	eor	w9, w9, w10
  409648:	and	w9, w9, #0x1
  40964c:	mov	w0, w9
  409650:	sxtw	x8, w0
  409654:	cbz	x8, 409678 <machine_ensure_scope+0xd0>
  409658:	mov	w8, wzr
  40965c:	mov	w0, w8
  409660:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  409664:	add	x1, x1, #0x99e
  409668:	ldr	x2, [sp, #32]
  40966c:	mov	w3, #0x1a8                 	// #424
  409670:	ldr	x4, [sp, #24]
  409674:	bl	404bd0 <log_assert_failed_realm@plt>
  409678:	ldur	x8, [x29, #-16]
  40967c:	ldr	x8, [x8, #64]
  409680:	cbnz	x8, 409760 <machine_ensure_scope+0x1b8>
  409684:	ldur	x0, [x29, #-16]
  409688:	ldur	x1, [x29, #-24]
  40968c:	ldur	x2, [x29, #-32]
  409690:	bl	40ac38 <machine_start_scope>
  409694:	stur	w0, [x29, #-36]
  409698:	ldur	w8, [x29, #-36]
  40969c:	cmp	w8, #0x0
  4096a0:	cset	w8, ge  // ge = tcont
  4096a4:	tbnz	w8, #0, 409760 <machine_ensure_scope+0x1b8>
  4096a8:	mov	w8, #0x3                   	// #3
  4096ac:	stur	w8, [x29, #-40]
  4096b0:	ldur	w8, [x29, #-36]
  4096b4:	stur	w8, [x29, #-44]
  4096b8:	str	wzr, [sp, #48]
  4096bc:	ldr	w0, [sp, #48]
  4096c0:	bl	404b80 <log_get_max_level_realm@plt>
  4096c4:	ldur	w8, [x29, #-40]
  4096c8:	and	w8, w8, #0x7
  4096cc:	cmp	w0, w8
  4096d0:	b.lt	409738 <machine_ensure_scope+0x190>  // b.tstop
  4096d4:	ldr	w8, [sp, #48]
  4096d8:	ldur	w9, [x29, #-40]
  4096dc:	orr	w0, w9, w8, lsl #10
  4096e0:	ldur	w1, [x29, #-44]
  4096e4:	ldur	x10, [x29, #-32]
  4096e8:	ldur	w8, [x29, #-36]
  4096ec:	str	w0, [sp, #20]
  4096f0:	mov	x0, x10
  4096f4:	str	w1, [sp, #16]
  4096f8:	mov	w1, w8
  4096fc:	bl	404e80 <bus_error_message@plt>
  409700:	ldr	w8, [sp, #20]
  409704:	str	x0, [sp, #8]
  409708:	mov	w0, w8
  40970c:	ldr	w1, [sp, #16]
  409710:	ldr	x2, [sp, #32]
  409714:	mov	w3, #0x1ad                 	// #429
  409718:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40971c:	add	x4, x4, #0x9b7
  409720:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  409724:	add	x5, x5, #0x9cc
  409728:	ldr	x6, [sp, #8]
  40972c:	bl	404b90 <log_internal_realm@plt>
  409730:	str	w0, [sp, #4]
  409734:	b	40974c <machine_ensure_scope+0x1a4>
  409738:	ldur	w0, [x29, #-44]
  40973c:	bl	404ba0 <abs@plt>
  409740:	mov	w8, wzr
  409744:	subs	w8, w8, w0, uxtb
  409748:	str	w8, [sp, #4]
  40974c:	ldr	w8, [sp, #4]
  409750:	str	w8, [sp, #44]
  409754:	ldr	w8, [sp, #44]
  409758:	stur	w8, [x29, #-4]
  40975c:	b	4097d0 <machine_ensure_scope+0x228>
  409760:	ldur	x8, [x29, #-16]
  409764:	ldr	x8, [x8, #64]
  409768:	cmp	x8, #0x0
  40976c:	cset	w9, ne  // ne = any
  409770:	mov	w10, #0x1                   	// #1
  409774:	eor	w9, w9, #0x1
  409778:	eor	w9, w9, w10
  40977c:	eor	w9, w9, w10
  409780:	and	w9, w9, #0x1
  409784:	mov	w0, w9
  409788:	sxtw	x8, w0
  40978c:	cbz	x8, 4097b0 <machine_ensure_scope+0x208>
  409790:	mov	w8, wzr
  409794:	mov	w0, w8
  409798:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40979c:	add	x1, x1, #0x9ee
  4097a0:	ldr	x2, [sp, #32]
  4097a4:	mov	w3, #0x1b0                 	// #432
  4097a8:	ldr	x4, [sp, #24]
  4097ac:	bl	404bd0 <log_assert_failed_realm@plt>
  4097b0:	ldur	x8, [x29, #-16]
  4097b4:	ldr	x8, [x8]
  4097b8:	ldr	x0, [x8, #24]
  4097bc:	ldur	x8, [x29, #-16]
  4097c0:	ldr	x1, [x8, #64]
  4097c4:	ldur	x2, [x29, #-16]
  4097c8:	bl	404e60 <hashmap_put@plt>
  4097cc:	stur	wzr, [x29, #-4]
  4097d0:	ldur	w0, [x29, #-4]
  4097d4:	ldp	x29, x30, [sp, #96]
  4097d8:	add	sp, sp, #0x70
  4097dc:	ret

00000000004097e0 <machine_stop>:
  4097e0:	sub	sp, sp, #0x80
  4097e4:	stp	x29, x30, [sp, #112]
  4097e8:	add	x29, sp, #0x70
  4097ec:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  4097f0:	add	x8, x8, #0x333
  4097f4:	add	x8, x8, #0x3
  4097f8:	stur	x0, [x29, #-16]
  4097fc:	str	x8, [sp, #24]
  409800:	ldur	x8, [x29, #-16]
  409804:	cmp	x8, #0x0
  409808:	cset	w9, ne  // ne = any
  40980c:	mov	w10, #0x1                   	// #1
  409810:	eor	w9, w9, #0x1
  409814:	eor	w9, w9, w10
  409818:	eor	w9, w9, w10
  40981c:	and	w9, w9, #0x1
  409820:	mov	w0, w9
  409824:	sxtw	x8, w0
  409828:	cbz	x8, 409850 <machine_stop+0x70>
  40982c:	mov	w8, wzr
  409830:	mov	w0, w8
  409834:	adrp	x1, 41a000 <operation_new+0x40>
  409838:	add	x1, x1, #0xe18
  40983c:	ldr	x2, [sp, #24]
  409840:	mov	w3, #0x1e1                 	// #481
  409844:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  409848:	add	x4, x4, #0x699
  40984c:	bl	404bd0 <log_assert_failed_realm@plt>
  409850:	mov	w8, #0x0                   	// #0
  409854:	sturb	w8, [x29, #-21]
  409858:	ldur	x9, [x29, #-16]
  40985c:	ldr	w8, [x9, #32]
  409860:	subs	w8, w8, #0x0
  409864:	mov	w10, #0x1                   	// #1
  409868:	cmp	w8, #0x1
  40986c:	cset	w8, ls  // ls = plast
  409870:	eor	w8, w8, w10
  409874:	tbnz	w8, #0, 409888 <machine_stop+0xa8>
  409878:	b	40987c <machine_stop+0x9c>
  40987c:	mov	w8, #0x1                   	// #1
  409880:	sturb	w8, [x29, #-21]
  409884:	b	409888 <machine_stop+0xa8>
  409888:	ldurb	w8, [x29, #-21]
  40988c:	and	w8, w8, #0x1
  409890:	sturb	w8, [x29, #-22]
  409894:	ldurb	w8, [x29, #-22]
  409898:	tbnz	w8, #0, 4098a8 <machine_stop+0xc8>
  40989c:	mov	w8, #0xffffffa1            	// #-95
  4098a0:	stur	w8, [x29, #-4]
  4098a4:	b	409a28 <machine_stop+0x248>
  4098a8:	ldur	x8, [x29, #-16]
  4098ac:	ldr	x8, [x8, #64]
  4098b0:	cbz	x8, 4099f8 <machine_stop+0x218>
  4098b4:	sub	x2, x29, #0x30
  4098b8:	stur	xzr, [x29, #-48]
  4098bc:	stur	xzr, [x29, #-40]
  4098c0:	stur	xzr, [x29, #-32]
  4098c4:	add	x3, sp, #0x38
  4098c8:	mov	x8, xzr
  4098cc:	str	x8, [sp, #56]
  4098d0:	ldur	x8, [x29, #-16]
  4098d4:	ldr	x0, [x8]
  4098d8:	ldur	x8, [x29, #-16]
  4098dc:	ldr	x1, [x8, #64]
  4098e0:	bl	40eeec <manager_stop_unit>
  4098e4:	stur	w0, [x29, #-20]
  4098e8:	ldur	w9, [x29, #-20]
  4098ec:	cmp	w9, #0x0
  4098f0:	cset	w9, ge  // ge = tcont
  4098f4:	tbnz	w9, #0, 4099b8 <machine_stop+0x1d8>
  4098f8:	mov	w8, #0x3                   	// #3
  4098fc:	str	w8, [sp, #52]
  409900:	ldur	w8, [x29, #-20]
  409904:	str	w8, [sp, #48]
  409908:	str	wzr, [sp, #44]
  40990c:	ldr	w0, [sp, #44]
  409910:	bl	404b80 <log_get_max_level_realm@plt>
  409914:	ldr	w8, [sp, #52]
  409918:	and	w8, w8, #0x7
  40991c:	cmp	w0, w8
  409920:	b.lt	409988 <machine_stop+0x1a8>  // b.tstop
  409924:	ldr	w8, [sp, #44]
  409928:	ldr	w9, [sp, #52]
  40992c:	orr	w0, w9, w8, lsl #10
  409930:	ldr	w1, [sp, #48]
  409934:	ldur	w8, [x29, #-20]
  409938:	sub	x10, x29, #0x30
  40993c:	str	w0, [sp, #20]
  409940:	mov	x0, x10
  409944:	str	w1, [sp, #16]
  409948:	mov	w1, w8
  40994c:	bl	404e80 <bus_error_message@plt>
  409950:	ldr	w8, [sp, #20]
  409954:	str	x0, [sp, #8]
  409958:	mov	w0, w8
  40995c:	ldr	w1, [sp, #16]
  409960:	ldr	x2, [sp, #24]
  409964:	mov	w3, #0x1ec                 	// #492
  409968:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40996c:	add	x4, x4, #0x6b5
  409970:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  409974:	add	x5, x5, #0x6c2
  409978:	ldr	x6, [sp, #8]
  40997c:	bl	404b90 <log_internal_realm@plt>
  409980:	str	w0, [sp, #4]
  409984:	b	40999c <machine_stop+0x1bc>
  409988:	ldr	w0, [sp, #48]
  40998c:	bl	404ba0 <abs@plt>
  409990:	mov	w8, wzr
  409994:	subs	w8, w8, w0, uxtb
  409998:	str	w8, [sp, #4]
  40999c:	ldr	w8, [sp, #4]
  4099a0:	str	w8, [sp, #40]
  4099a4:	ldr	w8, [sp, #40]
  4099a8:	stur	w8, [x29, #-4]
  4099ac:	mov	w8, #0x1                   	// #1
  4099b0:	str	w8, [sp, #36]
  4099b4:	b	4099e0 <machine_stop+0x200>
  4099b8:	ldur	x8, [x29, #-16]
  4099bc:	ldr	x0, [x8, #72]
  4099c0:	bl	404cb0 <free@plt>
  4099c4:	ldr	x8, [sp, #56]
  4099c8:	ldur	x9, [x29, #-16]
  4099cc:	str	x8, [x9, #72]
  4099d0:	mov	x8, xzr
  4099d4:	str	x8, [sp, #56]
  4099d8:	str	wzr, [sp, #32]
  4099dc:	str	wzr, [sp, #36]
  4099e0:	sub	x0, x29, #0x30
  4099e4:	bl	404e90 <sd_bus_error_free@plt>
  4099e8:	ldr	w8, [sp, #36]
  4099ec:	cbz	w8, 4099f8 <machine_stop+0x218>
  4099f0:	b	4099f4 <machine_stop+0x214>
  4099f4:	b	409a28 <machine_stop+0x248>
  4099f8:	ldur	x8, [x29, #-16]
  4099fc:	ldrb	w9, [x8, #104]
  409a00:	and	w9, w9, #0xfffffffb
  409a04:	orr	w9, w9, #0x4
  409a08:	strb	w9, [x8, #104]
  409a0c:	ldur	x0, [x29, #-16]
  409a10:	bl	408328 <machine_save>
  409a14:	ldur	x8, [x29, #-16]
  409a18:	ldr	x8, [x8]
  409a1c:	mov	x0, x8
  409a20:	bl	4112cc <manager_enqueue_nscd_cache_flush>
  409a24:	stur	wzr, [x29, #-4]
  409a28:	ldur	w0, [x29, #-4]
  409a2c:	ldp	x29, x30, [sp, #112]
  409a30:	add	sp, sp, #0x80
  409a34:	ret

0000000000409a38 <machine_finalize>:
  409a38:	sub	sp, sp, #0x50
  409a3c:	stp	x29, x30, [sp, #64]
  409a40:	add	x29, sp, #0x40
  409a44:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  409a48:	add	x8, x8, #0x333
  409a4c:	add	x8, x8, #0x3
  409a50:	stur	x0, [x29, #-8]
  409a54:	stur	x8, [x29, #-16]
  409a58:	ldur	x8, [x29, #-8]
  409a5c:	cmp	x8, #0x0
  409a60:	cset	w9, ne  // ne = any
  409a64:	mov	w10, #0x1                   	// #1
  409a68:	eor	w9, w9, #0x1
  409a6c:	eor	w9, w9, w10
  409a70:	eor	w9, w9, w10
  409a74:	and	w9, w9, #0x1
  409a78:	mov	w0, w9
  409a7c:	sxtw	x8, w0
  409a80:	cbz	x8, 409aa8 <machine_finalize+0x70>
  409a84:	mov	w8, wzr
  409a88:	mov	w0, w8
  409a8c:	adrp	x1, 41a000 <operation_new+0x40>
  409a90:	add	x1, x1, #0xe18
  409a94:	ldur	x2, [x29, #-16]
  409a98:	mov	w3, #0x1fa                 	// #506
  409a9c:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  409aa0:	add	x4, x4, #0x6e3
  409aa4:	bl	404bd0 <log_assert_failed_realm@plt>
  409aa8:	ldur	x8, [x29, #-8]
  409aac:	ldrb	w9, [x8, #104]
  409ab0:	mov	w10, #0x1                   	// #1
  409ab4:	lsr	w9, w9, w10
  409ab8:	and	w9, w9, w10
  409abc:	tbnz	w9, #0, 409ac4 <machine_finalize+0x8c>
  409ac0:	b	409b5c <machine_finalize+0x124>
  409ac4:	ldur	x8, [x29, #-8]
  409ac8:	ldr	x7, [x8, #8]
  409acc:	ldur	x8, [x29, #-8]
  409ad0:	ldr	w9, [x8, #80]
  409ad4:	ldur	x8, [x29, #-8]
  409ad8:	ldr	x8, [x8, #8]
  409adc:	mov	w0, #0x6                   	// #6
  409ae0:	mov	w10, wzr
  409ae4:	mov	w1, w10
  409ae8:	ldur	x2, [x29, #-16]
  409aec:	mov	w3, #0x201                 	// #513
  409af0:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  409af4:	add	x4, x4, #0x703
  409af8:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  409afc:	add	x5, x5, #0x714
  409b00:	adrp	x6, 41b000 <machine_hash_ops+0x3e8>
  409b04:	add	x6, x6, #0x66f
  409b08:	mov	x11, sp
  409b0c:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  409b10:	add	x12, x12, #0x677
  409b14:	str	x12, [x11]
  409b18:	mov	x11, sp
  409b1c:	str	w9, [x11, #8]
  409b20:	mov	x11, sp
  409b24:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  409b28:	add	x12, x12, #0x740
  409b2c:	str	x12, [x11, #16]
  409b30:	mov	x11, sp
  409b34:	str	x8, [x11, #24]
  409b38:	mov	x8, sp
  409b3c:	mov	x11, xzr
  409b40:	str	x11, [x8, #32]
  409b44:	bl	405020 <log_struct_internal@plt>
  409b48:	ldur	x8, [x29, #-8]
  409b4c:	ldrb	w9, [x8, #104]
  409b50:	and	w9, w9, #0xfffffffb
  409b54:	orr	w9, w9, #0x4
  409b58:	strb	w9, [x8, #104]
  409b5c:	ldur	x0, [x29, #-8]
  409b60:	bl	409bbc <machine_unlink>
  409b64:	ldur	x0, [x29, #-8]
  409b68:	bl	409e88 <machine_add_to_gc_queue>
  409b6c:	ldur	x8, [x29, #-8]
  409b70:	ldrb	w9, [x8, #104]
  409b74:	mov	w10, #0x1                   	// #1
  409b78:	lsr	w9, w9, w10
  409b7c:	and	w9, w9, w10
  409b80:	tbnz	w9, #0, 409b88 <machine_finalize+0x150>
  409b84:	b	409ba8 <machine_finalize+0x170>
  409b88:	ldur	x0, [x29, #-8]
  409b8c:	mov	w8, wzr
  409b90:	and	w1, w8, #0x1
  409b94:	bl	418078 <machine_send_signal>
  409b98:	ldur	x9, [x29, #-8]
  409b9c:	ldrb	w8, [x9, #104]
  409ba0:	and	w8, w8, #0xfffffffd
  409ba4:	strb	w8, [x9, #104]
  409ba8:	mov	w8, wzr
  409bac:	mov	w0, w8
  409bb0:	ldp	x29, x30, [sp, #64]
  409bb4:	add	sp, sp, #0x50
  409bb8:	ret

0000000000409bbc <machine_unlink>:
  409bbc:	stp	x29, x30, [sp, #-16]!
  409bc0:	mov	x29, sp
  409bc4:	sub	sp, sp, #0x70
  409bc8:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  409bcc:	add	x8, x8, #0x333
  409bd0:	add	x8, x8, #0x3
  409bd4:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  409bd8:	add	x9, x9, #0xb4b
  409bdc:	stur	x0, [x29, #-8]
  409be0:	stur	x8, [x29, #-96]
  409be4:	stur	x9, [x29, #-104]
  409be8:	ldur	x8, [x29, #-8]
  409bec:	cmp	x8, #0x0
  409bf0:	cset	w9, ne  // ne = any
  409bf4:	mov	w10, #0x1                   	// #1
  409bf8:	eor	w9, w9, #0x1
  409bfc:	eor	w9, w9, w10
  409c00:	eor	w9, w9, w10
  409c04:	and	w9, w9, #0x1
  409c08:	mov	w0, w9
  409c0c:	sxtw	x8, w0
  409c10:	cbz	x8, 409c34 <machine_unlink+0x78>
  409c14:	mov	w8, wzr
  409c18:	mov	w0, w8
  409c1c:	adrp	x1, 41a000 <operation_new+0x40>
  409c20:	add	x1, x1, #0xe18
  409c24:	ldur	x2, [x29, #-96]
  409c28:	mov	w3, #0xeb                  	// #235
  409c2c:	ldur	x4, [x29, #-104]
  409c30:	bl	404bd0 <log_assert_failed_realm@plt>
  409c34:	ldur	x8, [x29, #-8]
  409c38:	ldr	x8, [x8, #64]
  409c3c:	cbz	x8, 409e64 <machine_unlink+0x2a8>
  409c40:	sub	x8, x29, #0x20
  409c44:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  409c48:	add	x9, x9, #0x4c1
  409c4c:	stur	x9, [x29, #-32]
  409c50:	ldur	x9, [x29, #-8]
  409c54:	ldr	x9, [x9, #64]
  409c58:	str	x9, [x8, #8]
  409c5c:	stur	xzr, [x29, #-56]
  409c60:	stur	xzr, [x29, #-64]
  409c64:	ldur	x8, [x29, #-64]
  409c68:	mov	w9, #0x0                   	// #0
  409c6c:	cmp	x8, #0x2
  409c70:	stur	w9, [x29, #-108]
  409c74:	b.cs	409c9c <machine_unlink+0xe0>  // b.hs, b.nlast
  409c78:	ldur	x8, [x29, #-64]
  409c7c:	mov	x9, #0x8                   	// #8
  409c80:	mul	x8, x9, x8
  409c84:	sub	x9, x29, #0x20
  409c88:	add	x8, x9, x8
  409c8c:	ldr	x8, [x8]
  409c90:	cmp	x8, #0x0
  409c94:	cset	w10, ne  // ne = any
  409c98:	stur	w10, [x29, #-108]
  409c9c:	ldur	w8, [x29, #-108]
  409ca0:	tbnz	w8, #0, 409ca8 <machine_unlink+0xec>
  409ca4:	b	409ce0 <machine_unlink+0x124>
  409ca8:	ldur	x8, [x29, #-64]
  409cac:	mov	x9, #0x8                   	// #8
  409cb0:	mul	x8, x9, x8
  409cb4:	sub	x9, x29, #0x20
  409cb8:	add	x8, x9, x8
  409cbc:	ldr	x0, [x8]
  409cc0:	bl	404e00 <strlen@plt>
  409cc4:	ldur	x8, [x29, #-56]
  409cc8:	add	x8, x8, x0
  409ccc:	stur	x8, [x29, #-56]
  409cd0:	ldur	x8, [x29, #-64]
  409cd4:	add	x8, x8, #0x1
  409cd8:	stur	x8, [x29, #-64]
  409cdc:	b	409c64 <machine_unlink+0xa8>
  409ce0:	ldur	x8, [x29, #-56]
  409ce4:	add	x8, x8, #0x1
  409ce8:	stur	x8, [x29, #-72]
  409cec:	ldur	x1, [x29, #-72]
  409cf0:	mov	x0, #0x1                   	// #1
  409cf4:	bl	408cd4 <size_multiply_overflow>
  409cf8:	mov	w8, #0x1                   	// #1
  409cfc:	eor	w9, w0, #0x1
  409d00:	eor	w9, w9, w8
  409d04:	eor	w9, w9, w8
  409d08:	eor	w8, w9, w8
  409d0c:	and	w8, w8, #0x1
  409d10:	mov	w1, w8
  409d14:	sxtw	x10, w1
  409d18:	cbz	x10, 409d3c <machine_unlink+0x180>
  409d1c:	mov	w8, wzr
  409d20:	mov	w0, w8
  409d24:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  409d28:	add	x1, x1, #0x4dd
  409d2c:	ldur	x2, [x29, #-96]
  409d30:	mov	w3, #0xf0                  	// #240
  409d34:	ldur	x4, [x29, #-104]
  409d38:	bl	404bd0 <log_assert_failed_realm@plt>
  409d3c:	ldur	x8, [x29, #-72]
  409d40:	mov	x9, #0x1                   	// #1
  409d44:	mul	x8, x9, x8
  409d48:	cmp	x8, #0x400, lsl #12
  409d4c:	cset	w10, ls  // ls = plast
  409d50:	mov	w11, #0x1                   	// #1
  409d54:	eor	w10, w10, #0x1
  409d58:	eor	w10, w10, w11
  409d5c:	eor	w10, w10, w11
  409d60:	and	w10, w10, #0x1
  409d64:	mov	w0, w10
  409d68:	sxtw	x8, w0
  409d6c:	cbz	x8, 409d90 <machine_unlink+0x1d4>
  409d70:	mov	w8, wzr
  409d74:	mov	w0, w8
  409d78:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  409d7c:	add	x1, x1, #0x508
  409d80:	ldur	x2, [x29, #-96]
  409d84:	mov	w3, #0xf0                  	// #240
  409d88:	ldur	x4, [x29, #-104]
  409d8c:	bl	404bd0 <log_assert_failed_realm@plt>
  409d90:	ldur	x8, [x29, #-72]
  409d94:	mov	x9, #0x1                   	// #1
  409d98:	mul	x8, x9, x8
  409d9c:	mul	x8, x8, x9
  409da0:	add	x8, x8, #0xf
  409da4:	and	x8, x8, #0xfffffffffffffff0
  409da8:	mov	x9, sp
  409dac:	subs	x8, x9, x8
  409db0:	mov	sp, x8
  409db4:	stur	x8, [x29, #-80]
  409db8:	ldur	x8, [x29, #-80]
  409dbc:	stur	x8, [x29, #-40]
  409dc0:	stur	x8, [x29, #-48]
  409dc4:	stur	xzr, [x29, #-64]
  409dc8:	ldur	x8, [x29, #-64]
  409dcc:	mov	w9, #0x0                   	// #0
  409dd0:	cmp	x8, #0x2
  409dd4:	stur	w9, [x29, #-112]
  409dd8:	b.cs	409e00 <machine_unlink+0x244>  // b.hs, b.nlast
  409ddc:	ldur	x8, [x29, #-64]
  409de0:	mov	x9, #0x8                   	// #8
  409de4:	mul	x8, x9, x8
  409de8:	sub	x9, x29, #0x20
  409dec:	add	x8, x9, x8
  409df0:	ldr	x8, [x8]
  409df4:	cmp	x8, #0x0
  409df8:	cset	w10, ne  // ne = any
  409dfc:	stur	w10, [x29, #-112]
  409e00:	ldur	w8, [x29, #-112]
  409e04:	tbnz	w8, #0, 409e0c <machine_unlink+0x250>
  409e08:	b	409e40 <machine_unlink+0x284>
  409e0c:	ldur	x0, [x29, #-48]
  409e10:	ldur	x8, [x29, #-64]
  409e14:	mov	x9, #0x8                   	// #8
  409e18:	mul	x8, x9, x8
  409e1c:	sub	x9, x29, #0x20
  409e20:	add	x8, x9, x8
  409e24:	ldr	x1, [x8]
  409e28:	bl	404f60 <stpcpy@plt>
  409e2c:	stur	x0, [x29, #-48]
  409e30:	ldur	x8, [x29, #-64]
  409e34:	add	x8, x8, #0x1
  409e38:	stur	x8, [x29, #-64]
  409e3c:	b	409dc8 <machine_unlink+0x20c>
  409e40:	ldur	x8, [x29, #-48]
  409e44:	mov	w9, #0x0                   	// #0
  409e48:	strb	w9, [x8]
  409e4c:	ldur	x8, [x29, #-40]
  409e50:	stur	x8, [x29, #-88]
  409e54:	ldur	x8, [x29, #-88]
  409e58:	stur	x8, [x29, #-16]
  409e5c:	ldur	x0, [x29, #-16]
  409e60:	bl	404f80 <unlink@plt>
  409e64:	ldur	x8, [x29, #-8]
  409e68:	ldr	x8, [x8, #40]
  409e6c:	cbz	x8, 409e7c <machine_unlink+0x2c0>
  409e70:	ldur	x8, [x29, #-8]
  409e74:	ldr	x0, [x8, #40]
  409e78:	bl	404f80 <unlink@plt>
  409e7c:	mov	sp, x29
  409e80:	ldp	x29, x30, [sp], #16
  409e84:	ret

0000000000409e88 <machine_add_to_gc_queue>:
  409e88:	sub	sp, sp, #0x30
  409e8c:	stp	x29, x30, [sp, #32]
  409e90:	add	x29, sp, #0x20
  409e94:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  409e98:	add	x8, x8, #0x333
  409e9c:	add	x8, x8, #0x3
  409ea0:	stur	x0, [x29, #-8]
  409ea4:	str	x8, [sp]
  409ea8:	ldur	x8, [x29, #-8]
  409eac:	cmp	x8, #0x0
  409eb0:	cset	w9, ne  // ne = any
  409eb4:	mov	w10, #0x1                   	// #1
  409eb8:	eor	w9, w9, #0x1
  409ebc:	eor	w9, w9, w10
  409ec0:	eor	w9, w9, w10
  409ec4:	and	w9, w9, #0x1
  409ec8:	mov	w0, w9
  409ecc:	sxtw	x8, w0
  409ed0:	cbz	x8, 409ef8 <machine_add_to_gc_queue+0x70>
  409ed4:	mov	w8, wzr
  409ed8:	mov	w0, w8
  409edc:	adrp	x1, 41a000 <operation_new+0x40>
  409ee0:	add	x1, x1, #0xe18
  409ee4:	ldr	x2, [sp]
  409ee8:	mov	w3, #0x224                 	// #548
  409eec:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  409ef0:	add	x4, x4, #0x786
  409ef4:	bl	404bd0 <log_assert_failed_realm@plt>
  409ef8:	ldur	x8, [x29, #-8]
  409efc:	ldrb	w9, [x8, #104]
  409f00:	and	w9, w9, #0x1
  409f04:	tbnz	w9, #0, 409f0c <machine_add_to_gc_queue+0x84>
  409f08:	b	409f10 <machine_add_to_gc_queue+0x88>
  409f0c:	b	409fc8 <machine_add_to_gc_queue+0x140>
  409f10:	ldur	x8, [x29, #-8]
  409f14:	ldr	x8, [x8]
  409f18:	add	x8, x8, #0x40
  409f1c:	str	x8, [sp, #16]
  409f20:	ldur	x8, [x29, #-8]
  409f24:	str	x8, [sp, #8]
  409f28:	ldr	x8, [sp, #8]
  409f2c:	cmp	x8, #0x0
  409f30:	cset	w9, ne  // ne = any
  409f34:	mov	w10, #0x1                   	// #1
  409f38:	eor	w9, w9, #0x1
  409f3c:	eor	w9, w9, w10
  409f40:	eor	w9, w9, w10
  409f44:	and	w9, w9, #0x1
  409f48:	mov	w0, w9
  409f4c:	sxtw	x8, w0
  409f50:	cbz	x8, 409f78 <machine_add_to_gc_queue+0xf0>
  409f54:	mov	w8, wzr
  409f58:	mov	w0, w8
  409f5c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  409f60:	add	x1, x1, #0x2fa
  409f64:	ldr	x2, [sp]
  409f68:	mov	w3, #0x229                 	// #553
  409f6c:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  409f70:	add	x4, x4, #0x786
  409f74:	bl	404bd0 <log_assert_failed_realm@plt>
  409f78:	ldr	x8, [sp, #16]
  409f7c:	ldr	x8, [x8]
  409f80:	ldr	x9, [sp, #8]
  409f84:	str	x8, [x9, #144]
  409f88:	cbz	x8, 409f9c <machine_add_to_gc_queue+0x114>
  409f8c:	ldr	x8, [sp, #8]
  409f90:	ldr	x9, [sp, #8]
  409f94:	ldr	x9, [x9, #144]
  409f98:	str	x8, [x9, #152]
  409f9c:	ldr	x8, [sp, #8]
  409fa0:	mov	x9, xzr
  409fa4:	str	x9, [x8, #152]
  409fa8:	ldr	x8, [sp, #8]
  409fac:	ldr	x9, [sp, #16]
  409fb0:	str	x8, [x9]
  409fb4:	ldur	x8, [x29, #-8]
  409fb8:	ldrb	w9, [x8, #104]
  409fbc:	and	w9, w9, #0xfffffffe
  409fc0:	orr	w9, w9, #0x1
  409fc4:	strb	w9, [x8, #104]
  409fc8:	ldp	x29, x30, [sp, #32]
  409fcc:	add	sp, sp, #0x30
  409fd0:	ret

0000000000409fd4 <machine_may_gc>:
  409fd4:	sub	sp, sp, #0x30
  409fd8:	stp	x29, x30, [sp, #32]
  409fdc:	add	x29, sp, #0x20
  409fe0:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  409fe4:	add	x8, x8, #0x333
  409fe8:	add	x2, x8, #0x3
  409fec:	str	x0, [sp, #16]
  409ff0:	and	w9, w1, #0x1
  409ff4:	strb	w9, [sp, #15]
  409ff8:	str	x2, [sp]
  409ffc:	ldr	x8, [sp, #16]
  40a000:	cmp	x8, #0x0
  40a004:	cset	w9, ne  // ne = any
  40a008:	mov	w10, #0x1                   	// #1
  40a00c:	eor	w9, w9, #0x1
  40a010:	eor	w9, w9, w10
  40a014:	eor	w9, w9, w10
  40a018:	and	w9, w9, #0x1
  40a01c:	mov	w0, w9
  40a020:	sxtw	x8, w0
  40a024:	cbz	x8, 40a04c <machine_may_gc+0x78>
  40a028:	mov	w8, wzr
  40a02c:	mov	w0, w8
  40a030:	adrp	x1, 41a000 <operation_new+0x40>
  40a034:	add	x1, x1, #0xe18
  40a038:	ldr	x2, [sp]
  40a03c:	mov	w3, #0x212                 	// #530
  40a040:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40a044:	add	x4, x4, #0x75f
  40a048:	bl	404bd0 <log_assert_failed_realm@plt>
  40a04c:	ldr	x8, [sp, #16]
  40a050:	ldr	w9, [x8, #32]
  40a054:	cmp	w9, #0x2
  40a058:	b.ne	40a06c <machine_may_gc+0x98>  // b.any
  40a05c:	mov	w8, wzr
  40a060:	and	w8, w8, #0x1
  40a064:	sturb	w8, [x29, #-1]
  40a068:	b	40a114 <machine_may_gc+0x140>
  40a06c:	ldrb	w8, [sp, #15]
  40a070:	tbnz	w8, #0, 40a078 <machine_may_gc+0xa4>
  40a074:	b	40a0a0 <machine_may_gc+0xcc>
  40a078:	ldr	x8, [sp, #16]
  40a07c:	ldrb	w9, [x8, #104]
  40a080:	mov	w10, #0x1                   	// #1
  40a084:	lsr	w9, w9, w10
  40a088:	and	w9, w9, w10
  40a08c:	tbnz	w9, #0, 40a0a0 <machine_may_gc+0xcc>
  40a090:	mov	w8, #0x1                   	// #1
  40a094:	and	w8, w8, #0x1
  40a098:	sturb	w8, [x29, #-1]
  40a09c:	b	40a114 <machine_may_gc+0x140>
  40a0a0:	ldr	x8, [sp, #16]
  40a0a4:	ldr	x8, [x8, #72]
  40a0a8:	cbz	x8, 40a0d4 <machine_may_gc+0x100>
  40a0ac:	ldr	x8, [sp, #16]
  40a0b0:	ldr	x0, [x8]
  40a0b4:	ldr	x8, [sp, #16]
  40a0b8:	ldr	x1, [x8, #72]
  40a0bc:	bl	40f528 <manager_job_is_active>
  40a0c0:	cbz	w0, 40a0d4 <machine_may_gc+0x100>
  40a0c4:	mov	w8, wzr
  40a0c8:	and	w8, w8, #0x1
  40a0cc:	sturb	w8, [x29, #-1]
  40a0d0:	b	40a114 <machine_may_gc+0x140>
  40a0d4:	ldr	x8, [sp, #16]
  40a0d8:	ldr	x8, [x8, #64]
  40a0dc:	cbz	x8, 40a108 <machine_may_gc+0x134>
  40a0e0:	ldr	x8, [sp, #16]
  40a0e4:	ldr	x0, [x8]
  40a0e8:	ldr	x8, [sp, #16]
  40a0ec:	ldr	x1, [x8, #64]
  40a0f0:	bl	40f2a4 <manager_unit_is_active>
  40a0f4:	cbz	w0, 40a108 <machine_may_gc+0x134>
  40a0f8:	mov	w8, wzr
  40a0fc:	and	w8, w8, #0x1
  40a100:	sturb	w8, [x29, #-1]
  40a104:	b	40a114 <machine_may_gc+0x140>
  40a108:	mov	w8, #0x1                   	// #1
  40a10c:	and	w8, w8, #0x1
  40a110:	sturb	w8, [x29, #-1]
  40a114:	ldurb	w8, [x29, #-1]
  40a118:	and	w0, w8, #0x1
  40a11c:	ldp	x29, x30, [sp, #32]
  40a120:	add	sp, sp, #0x30
  40a124:	ret

000000000040a128 <machine_get_state>:
  40a128:	sub	sp, sp, #0x30
  40a12c:	stp	x29, x30, [sp, #32]
  40a130:	add	x29, sp, #0x20
  40a134:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40a138:	add	x8, x8, #0x333
  40a13c:	add	x2, x8, #0x3
  40a140:	str	x0, [sp, #16]
  40a144:	str	x2, [sp, #8]
  40a148:	ldr	x8, [sp, #16]
  40a14c:	cmp	x8, #0x0
  40a150:	cset	w9, ne  // ne = any
  40a154:	mov	w10, #0x1                   	// #1
  40a158:	eor	w9, w9, #0x1
  40a15c:	eor	w9, w9, w10
  40a160:	eor	w9, w9, w10
  40a164:	and	w9, w9, #0x1
  40a168:	mov	w0, w9
  40a16c:	sxtw	x8, w0
  40a170:	cbz	x8, 40a198 <machine_get_state+0x70>
  40a174:	mov	w8, wzr
  40a178:	mov	w0, w8
  40a17c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a180:	add	x1, x1, #0x7ae
  40a184:	ldr	x2, [sp, #8]
  40a188:	mov	w3, #0x22e                 	// #558
  40a18c:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40a190:	add	x4, x4, #0x7b0
  40a194:	bl	404bd0 <log_assert_failed_realm@plt>
  40a198:	ldr	x8, [sp, #16]
  40a19c:	ldr	w9, [x8, #32]
  40a1a0:	cmp	w9, #0x2
  40a1a4:	b.ne	40a1b4 <machine_get_state+0x8c>  // b.any
  40a1a8:	mov	w8, #0x1                   	// #1
  40a1ac:	stur	w8, [x29, #-4]
  40a1b0:	b	40a1f8 <machine_get_state+0xd0>
  40a1b4:	ldr	x8, [sp, #16]
  40a1b8:	ldrb	w9, [x8, #104]
  40a1bc:	mov	w10, #0x2                   	// #2
  40a1c0:	lsr	w9, w9, w10
  40a1c4:	and	w9, w9, #0x1
  40a1c8:	tbnz	w9, #0, 40a1d0 <machine_get_state+0xa8>
  40a1cc:	b	40a1dc <machine_get_state+0xb4>
  40a1d0:	mov	w8, #0x2                   	// #2
  40a1d4:	stur	w8, [x29, #-4]
  40a1d8:	b	40a1f8 <machine_get_state+0xd0>
  40a1dc:	ldr	x8, [sp, #16]
  40a1e0:	ldr	x8, [x8, #72]
  40a1e4:	cbz	x8, 40a1f0 <machine_get_state+0xc8>
  40a1e8:	stur	wzr, [x29, #-4]
  40a1ec:	b	40a1f8 <machine_get_state+0xd0>
  40a1f0:	mov	w8, #0x1                   	// #1
  40a1f4:	stur	w8, [x29, #-4]
  40a1f8:	ldur	w0, [x29, #-4]
  40a1fc:	ldp	x29, x30, [sp, #32]
  40a200:	add	sp, sp, #0x30
  40a204:	ret

000000000040a208 <machine_kill>:
  40a208:	sub	sp, sp, #0x40
  40a20c:	stp	x29, x30, [sp, #48]
  40a210:	add	x29, sp, #0x30
  40a214:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40a218:	add	x8, x8, #0x333
  40a21c:	add	x8, x8, #0x3
  40a220:	stur	x0, [x29, #-16]
  40a224:	stur	w1, [x29, #-20]
  40a228:	str	w2, [sp, #24]
  40a22c:	str	x8, [sp, #8]
  40a230:	ldur	x8, [x29, #-16]
  40a234:	cmp	x8, #0x0
  40a238:	cset	w9, ne  // ne = any
  40a23c:	mov	w10, #0x1                   	// #1
  40a240:	eor	w9, w9, #0x1
  40a244:	eor	w9, w9, w10
  40a248:	eor	w9, w9, w10
  40a24c:	and	w9, w9, #0x1
  40a250:	mov	w0, w9
  40a254:	sxtw	x8, w0
  40a258:	cbz	x8, 40a280 <machine_kill+0x78>
  40a25c:	mov	w8, wzr
  40a260:	mov	w0, w8
  40a264:	adrp	x1, 41a000 <operation_new+0x40>
  40a268:	add	x1, x1, #0xe18
  40a26c:	ldr	x2, [sp, #8]
  40a270:	mov	w3, #0x23d                 	// #573
  40a274:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40a278:	add	x4, x4, #0x7da
  40a27c:	bl	404bd0 <log_assert_failed_realm@plt>
  40a280:	mov	w8, #0x0                   	// #0
  40a284:	strb	w8, [sp, #23]
  40a288:	ldur	x9, [x29, #-16]
  40a28c:	ldr	w8, [x9, #32]
  40a290:	subs	w8, w8, #0x0
  40a294:	mov	w10, #0x1                   	// #1
  40a298:	cmp	w8, #0x1
  40a29c:	cset	w8, ls  // ls = plast
  40a2a0:	eor	w8, w8, w10
  40a2a4:	tbnz	w8, #0, 40a2b8 <machine_kill+0xb0>
  40a2a8:	b	40a2ac <machine_kill+0xa4>
  40a2ac:	mov	w8, #0x1                   	// #1
  40a2b0:	strb	w8, [sp, #23]
  40a2b4:	b	40a2b8 <machine_kill+0xb0>
  40a2b8:	ldrb	w8, [sp, #23]
  40a2bc:	and	w8, w8, #0x1
  40a2c0:	strb	w8, [sp, #22]
  40a2c4:	ldrb	w8, [sp, #22]
  40a2c8:	tbnz	w8, #0, 40a2d8 <machine_kill+0xd0>
  40a2cc:	mov	w8, #0xffffffa1            	// #-95
  40a2d0:	stur	w8, [x29, #-4]
  40a2d4:	b	40a358 <machine_kill+0x150>
  40a2d8:	ldur	x8, [x29, #-16]
  40a2dc:	ldr	x8, [x8, #64]
  40a2e0:	cbnz	x8, 40a2f0 <machine_kill+0xe8>
  40a2e4:	mov	w8, #0xfffffffd            	// #-3
  40a2e8:	stur	w8, [x29, #-4]
  40a2ec:	b	40a358 <machine_kill+0x150>
  40a2f0:	ldur	w8, [x29, #-20]
  40a2f4:	cbnz	w8, 40a334 <machine_kill+0x12c>
  40a2f8:	ldur	x8, [x29, #-16]
  40a2fc:	ldr	w0, [x8, #80]
  40a300:	ldr	w1, [sp, #24]
  40a304:	bl	405040 <kill@plt>
  40a308:	cmp	w0, #0x0
  40a30c:	cset	w9, ge  // ge = tcont
  40a310:	tbnz	w9, #0, 40a32c <machine_kill+0x124>
  40a314:	bl	404d50 <__errno_location@plt>
  40a318:	ldr	w8, [x0]
  40a31c:	mov	w9, wzr
  40a320:	subs	w8, w9, w8
  40a324:	stur	w8, [x29, #-4]
  40a328:	b	40a358 <machine_kill+0x150>
  40a32c:	stur	wzr, [x29, #-4]
  40a330:	b	40a358 <machine_kill+0x150>
  40a334:	ldur	x8, [x29, #-16]
  40a338:	ldr	x0, [x8]
  40a33c:	ldur	x8, [x29, #-16]
  40a340:	ldr	x1, [x8, #64]
  40a344:	ldr	w2, [sp, #24]
  40a348:	mov	x8, xzr
  40a34c:	mov	x3, x8
  40a350:	bl	40f164 <manager_kill_unit>
  40a354:	stur	w0, [x29, #-4]
  40a358:	ldur	w0, [x29, #-4]
  40a35c:	ldp	x29, x30, [sp, #48]
  40a360:	add	sp, sp, #0x40
  40a364:	ret

000000000040a368 <machine_openpt>:
  40a368:	sub	sp, sp, #0x40
  40a36c:	stp	x29, x30, [sp, #48]
  40a370:	add	x29, sp, #0x30
  40a374:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40a378:	add	x8, x8, #0x333
  40a37c:	add	x8, x8, #0x3
  40a380:	stur	x0, [x29, #-16]
  40a384:	stur	w1, [x29, #-20]
  40a388:	str	x2, [sp, #16]
  40a38c:	str	x8, [sp, #8]
  40a390:	ldur	x8, [x29, #-16]
  40a394:	cmp	x8, #0x0
  40a398:	cset	w9, ne  // ne = any
  40a39c:	mov	w10, #0x1                   	// #1
  40a3a0:	eor	w9, w9, #0x1
  40a3a4:	eor	w9, w9, w10
  40a3a8:	eor	w9, w9, w10
  40a3ac:	and	w9, w9, #0x1
  40a3b0:	mov	w0, w9
  40a3b4:	sxtw	x8, w0
  40a3b8:	cbz	x8, 40a3e0 <machine_openpt+0x78>
  40a3bc:	mov	w8, wzr
  40a3c0:	mov	w0, w8
  40a3c4:	adrp	x1, 41a000 <operation_new+0x40>
  40a3c8:	add	x1, x1, #0xe18
  40a3cc:	ldr	x2, [sp, #8]
  40a3d0:	mov	w3, #0x253                 	// #595
  40a3d4:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40a3d8:	add	x4, x4, #0x804
  40a3dc:	bl	404bd0 <log_assert_failed_realm@plt>
  40a3e0:	ldur	x8, [x29, #-16]
  40a3e4:	ldr	w9, [x8, #32]
  40a3e8:	str	w9, [sp, #4]
  40a3ec:	cbz	w9, 40a420 <machine_openpt+0xb8>
  40a3f0:	b	40a3f4 <machine_openpt+0x8c>
  40a3f4:	ldr	w8, [sp, #4]
  40a3f8:	cmp	w8, #0x2
  40a3fc:	cset	w9, eq  // eq = none
  40a400:	eor	w9, w9, #0x1
  40a404:	tbnz	w9, #0, 40a45c <machine_openpt+0xf4>
  40a408:	b	40a40c <machine_openpt+0xa4>
  40a40c:	ldur	w0, [x29, #-20]
  40a410:	ldr	x1, [sp, #16]
  40a414:	bl	405050 <openpt_allocate@plt>
  40a418:	stur	w0, [x29, #-4]
  40a41c:	b	40a464 <machine_openpt+0xfc>
  40a420:	ldur	x8, [x29, #-16]
  40a424:	ldr	w9, [x8, #80]
  40a428:	cmp	w9, #0x0
  40a42c:	cset	w9, gt
  40a430:	tbnz	w9, #0, 40a440 <machine_openpt+0xd8>
  40a434:	mov	w8, #0xffffffea            	// #-22
  40a438:	stur	w8, [x29, #-4]
  40a43c:	b	40a464 <machine_openpt+0xfc>
  40a440:	ldur	x8, [x29, #-16]
  40a444:	ldr	w0, [x8, #80]
  40a448:	ldur	w1, [x29, #-20]
  40a44c:	ldr	x2, [sp, #16]
  40a450:	bl	405060 <openpt_allocate_in_namespace@plt>
  40a454:	stur	w0, [x29, #-4]
  40a458:	b	40a464 <machine_openpt+0xfc>
  40a45c:	mov	w8, #0xffffffa1            	// #-95
  40a460:	stur	w8, [x29, #-4]
  40a464:	ldur	w0, [x29, #-4]
  40a468:	ldp	x29, x30, [sp, #48]
  40a46c:	add	sp, sp, #0x40
  40a470:	ret

000000000040a474 <machine_open_terminal>:
  40a474:	sub	sp, sp, #0x40
  40a478:	stp	x29, x30, [sp, #48]
  40a47c:	add	x29, sp, #0x30
  40a480:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40a484:	add	x8, x8, #0x333
  40a488:	add	x8, x8, #0x3
  40a48c:	stur	x0, [x29, #-16]
  40a490:	str	x1, [sp, #24]
  40a494:	str	w2, [sp, #20]
  40a498:	str	x8, [sp, #8]
  40a49c:	ldur	x8, [x29, #-16]
  40a4a0:	cmp	x8, #0x0
  40a4a4:	cset	w9, ne  // ne = any
  40a4a8:	mov	w10, #0x1                   	// #1
  40a4ac:	eor	w9, w9, #0x1
  40a4b0:	eor	w9, w9, w10
  40a4b4:	eor	w9, w9, w10
  40a4b8:	and	w9, w9, #0x1
  40a4bc:	mov	w0, w9
  40a4c0:	sxtw	x8, w0
  40a4c4:	cbz	x8, 40a4ec <machine_open_terminal+0x78>
  40a4c8:	mov	w8, wzr
  40a4cc:	mov	w0, w8
  40a4d0:	adrp	x1, 41a000 <operation_new+0x40>
  40a4d4:	add	x1, x1, #0xe18
  40a4d8:	ldr	x2, [sp, #8]
  40a4dc:	mov	w3, #0x267                 	// #615
  40a4e0:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40a4e4:	add	x4, x4, #0x830
  40a4e8:	bl	404bd0 <log_assert_failed_realm@plt>
  40a4ec:	ldur	x8, [x29, #-16]
  40a4f0:	ldr	w9, [x8, #32]
  40a4f4:	str	w9, [sp, #4]
  40a4f8:	cbz	w9, 40a52c <machine_open_terminal+0xb8>
  40a4fc:	b	40a500 <machine_open_terminal+0x8c>
  40a500:	ldr	w8, [sp, #4]
  40a504:	cmp	w8, #0x2
  40a508:	cset	w9, eq  // eq = none
  40a50c:	eor	w9, w9, #0x1
  40a510:	tbnz	w9, #0, 40a568 <machine_open_terminal+0xf4>
  40a514:	b	40a518 <machine_open_terminal+0xa4>
  40a518:	ldr	x0, [sp, #24]
  40a51c:	ldr	w1, [sp, #20]
  40a520:	bl	405070 <open_terminal@plt>
  40a524:	stur	w0, [x29, #-4]
  40a528:	b	40a570 <machine_open_terminal+0xfc>
  40a52c:	ldur	x8, [x29, #-16]
  40a530:	ldr	w9, [x8, #80]
  40a534:	cmp	w9, #0x0
  40a538:	cset	w9, gt
  40a53c:	tbnz	w9, #0, 40a54c <machine_open_terminal+0xd8>
  40a540:	mov	w8, #0xffffffea            	// #-22
  40a544:	stur	w8, [x29, #-4]
  40a548:	b	40a570 <machine_open_terminal+0xfc>
  40a54c:	ldur	x8, [x29, #-16]
  40a550:	ldr	w0, [x8, #80]
  40a554:	ldr	x1, [sp, #24]
  40a558:	ldr	w2, [sp, #20]
  40a55c:	bl	405080 <open_terminal_in_namespace@plt>
  40a560:	stur	w0, [x29, #-4]
  40a564:	b	40a570 <machine_open_terminal+0xfc>
  40a568:	mov	w8, #0xffffffa1            	// #-95
  40a56c:	stur	w8, [x29, #-4]
  40a570:	ldur	w0, [x29, #-4]
  40a574:	ldp	x29, x30, [sp, #48]
  40a578:	add	sp, sp, #0x40
  40a57c:	ret

000000000040a580 <machine_get_uid_shift>:
  40a580:	sub	sp, sp, #0x90
  40a584:	stp	x29, x30, [sp, #128]
  40a588:	add	x29, sp, #0x80
  40a58c:	mov	x8, xzr
  40a590:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40a594:	add	x9, x9, #0x333
  40a598:	add	x9, x9, #0x3
  40a59c:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40a5a0:	add	x10, x10, #0x8da
  40a5a4:	stur	x0, [x29, #-16]
  40a5a8:	stur	x1, [x29, #-24]
  40a5ac:	str	x8, [sp, #40]
  40a5b0:	str	x9, [sp, #16]
  40a5b4:	str	x10, [sp, #8]
  40a5b8:	ldur	x8, [x29, #-16]
  40a5bc:	cmp	x8, #0x0
  40a5c0:	cset	w9, ne  // ne = any
  40a5c4:	mov	w10, #0x1                   	// #1
  40a5c8:	eor	w9, w9, #0x1
  40a5cc:	eor	w9, w9, w10
  40a5d0:	eor	w9, w9, w10
  40a5d4:	and	w9, w9, #0x1
  40a5d8:	mov	w0, w9
  40a5dc:	sxtw	x8, w0
  40a5e0:	cbz	x8, 40a604 <machine_get_uid_shift+0x84>
  40a5e4:	mov	w8, wzr
  40a5e8:	mov	w0, w8
  40a5ec:	adrp	x1, 41a000 <operation_new+0x40>
  40a5f0:	add	x1, x1, #0xe18
  40a5f4:	ldr	x2, [sp, #16]
  40a5f8:	mov	w3, #0x296                 	// #662
  40a5fc:	ldr	x4, [sp, #8]
  40a600:	bl	404bd0 <log_assert_failed_realm@plt>
  40a604:	ldur	x8, [x29, #-24]
  40a608:	cmp	x8, #0x0
  40a60c:	cset	w9, ne  // ne = any
  40a610:	mov	w10, #0x1                   	// #1
  40a614:	eor	w9, w9, #0x1
  40a618:	eor	w9, w9, w10
  40a61c:	eor	w9, w9, w10
  40a620:	and	w9, w9, #0x1
  40a624:	mov	w0, w9
  40a628:	sxtw	x8, w0
  40a62c:	cbz	x8, 40a650 <machine_get_uid_shift+0xd0>
  40a630:	mov	w8, wzr
  40a634:	mov	w0, w8
  40a638:	adrp	x1, 41a000 <operation_new+0x40>
  40a63c:	add	x1, x1, #0xdf8
  40a640:	ldr	x2, [sp, #16]
  40a644:	mov	w3, #0x297                 	// #663
  40a648:	ldr	x4, [sp, #8]
  40a64c:	bl	404bd0 <log_assert_failed_realm@plt>
  40a650:	ldur	x8, [x29, #-16]
  40a654:	ldr	w9, [x8, #32]
  40a658:	cmp	w9, #0x2
  40a65c:	b.ne	40a678 <machine_get_uid_shift+0xf8>  // b.any
  40a660:	ldur	x8, [x29, #-24]
  40a664:	str	wzr, [x8]
  40a668:	stur	wzr, [x29, #-4]
  40a66c:	mov	w9, #0x1                   	// #1
  40a670:	str	w9, [sp, #28]
  40a674:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a678:	ldur	x8, [x29, #-16]
  40a67c:	ldr	w9, [x8, #32]
  40a680:	cbz	w9, 40a698 <machine_get_uid_shift+0x118>
  40a684:	mov	w8, #0xffffffa1            	// #-95
  40a688:	stur	w8, [x29, #-4]
  40a68c:	mov	w8, #0x1                   	// #1
  40a690:	str	w8, [sp, #28]
  40a694:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a698:	ldur	x8, [x29, #-16]
  40a69c:	ldr	w3, [x8, #80]
  40a6a0:	sub	x0, x29, #0x33
  40a6a4:	mov	x1, #0x1b                  	// #27
  40a6a8:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40a6ac:	add	x2, x2, #0x908
  40a6b0:	bl	405090 <snprintf@plt>
  40a6b4:	mov	w1, w0
  40a6b8:	sxtw	x8, w1
  40a6bc:	cmp	x8, #0x1b
  40a6c0:	cset	w9, cc  // cc = lo, ul, last
  40a6c4:	mov	w10, #0x1                   	// #1
  40a6c8:	eor	w9, w9, #0x1
  40a6cc:	eor	w9, w9, w10
  40a6d0:	eor	w9, w9, w10
  40a6d4:	and	w9, w9, #0x1
  40a6d8:	mov	w1, w9
  40a6dc:	sxtw	x8, w1
  40a6e0:	cbz	x8, 40a704 <machine_get_uid_shift+0x184>
  40a6e4:	mov	w8, wzr
  40a6e8:	mov	w0, w8
  40a6ec:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a6f0:	add	x1, x1, #0x919
  40a6f4:	ldr	x2, [sp, #16]
  40a6f8:	mov	w3, #0x2a7                 	// #679
  40a6fc:	ldr	x4, [sp, #8]
  40a700:	bl	404bd0 <log_assert_failed_realm@plt>
  40a704:	sub	x0, x29, #0x33
  40a708:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a70c:	add	x1, x1, #0x93a
  40a710:	bl	4050a0 <fopen64@plt>
  40a714:	str	x0, [sp, #40]
  40a718:	ldr	x8, [sp, #40]
  40a71c:	cbnz	x8, 40a768 <machine_get_uid_shift+0x1e8>
  40a720:	bl	404d50 <__errno_location@plt>
  40a724:	ldr	w8, [x0]
  40a728:	cmp	w8, #0x2
  40a72c:	b.ne	40a748 <machine_get_uid_shift+0x1c8>  // b.any
  40a730:	ldur	x8, [x29, #-24]
  40a734:	str	wzr, [x8]
  40a738:	stur	wzr, [x29, #-4]
  40a73c:	mov	w9, #0x1                   	// #1
  40a740:	str	w9, [sp, #28]
  40a744:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a748:	bl	404d50 <__errno_location@plt>
  40a74c:	ldr	w8, [x0]
  40a750:	mov	w9, wzr
  40a754:	subs	w8, w9, w8
  40a758:	stur	w8, [x29, #-4]
  40a75c:	mov	w8, #0x1                   	// #1
  40a760:	str	w8, [sp, #28]
  40a764:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a768:	bl	404d50 <__errno_location@plt>
  40a76c:	str	wzr, [x0]
  40a770:	ldr	x0, [sp, #40]
  40a774:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a778:	add	x1, x1, #0x93d
  40a77c:	sub	x2, x29, #0x38
  40a780:	sub	x3, x29, #0x3c
  40a784:	add	x4, sp, #0x40
  40a788:	bl	4050b0 <__isoc99_fscanf@plt>
  40a78c:	str	w0, [sp, #36]
  40a790:	ldr	w8, [sp, #36]
  40a794:	cmp	w8, #0x3
  40a798:	b.eq	40a7d4 <machine_get_uid_shift+0x254>  // b.none
  40a79c:	ldr	x0, [sp, #40]
  40a7a0:	bl	4050c0 <ferror@plt>
  40a7a4:	cbz	w0, 40a7c0 <machine_get_uid_shift+0x240>
  40a7a8:	mov	w0, #0x5                   	// #5
  40a7ac:	bl	40aa74 <errno_or_else>
  40a7b0:	stur	w0, [x29, #-4]
  40a7b4:	mov	w8, #0x1                   	// #1
  40a7b8:	str	w8, [sp, #28]
  40a7bc:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a7c0:	mov	w8, #0xffffffb6            	// #-74
  40a7c4:	stur	w8, [x29, #-4]
  40a7c8:	mov	w8, #0x1                   	// #1
  40a7cc:	str	w8, [sp, #28]
  40a7d0:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a7d4:	ldur	w8, [x29, #-56]
  40a7d8:	cbz	w8, 40a7f0 <machine_get_uid_shift+0x270>
  40a7dc:	mov	w8, #0xfffffffa            	// #-6
  40a7e0:	stur	w8, [x29, #-4]
  40a7e4:	mov	w8, #0x1                   	// #1
  40a7e8:	str	w8, [sp, #28]
  40a7ec:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a7f0:	ldr	w8, [sp, #64]
  40a7f4:	mov	w9, #0xfffe                	// #65534
  40a7f8:	cmp	w8, w9
  40a7fc:	b.cs	40a814 <machine_get_uid_shift+0x294>  // b.hs, b.nlast
  40a800:	mov	w8, #0xfffffffa            	// #-6
  40a804:	stur	w8, [x29, #-4]
  40a808:	mov	w8, #0x1                   	// #1
  40a80c:	str	w8, [sp, #28]
  40a810:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a814:	ldr	x0, [sp, #40]
  40a818:	mov	x8, xzr
  40a81c:	mov	x1, x8
  40a820:	bl	4050d0 <safe_fgetc@plt>
  40a824:	str	w0, [sp, #32]
  40a828:	ldr	w9, [sp, #32]
  40a82c:	cmp	w9, #0x0
  40a830:	cset	w9, ge  // ge = tcont
  40a834:	tbnz	w9, #0, 40a84c <machine_get_uid_shift+0x2cc>
  40a838:	ldr	w8, [sp, #32]
  40a83c:	stur	w8, [x29, #-4]
  40a840:	mov	w8, #0x1                   	// #1
  40a844:	str	w8, [sp, #28]
  40a848:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a84c:	ldr	w8, [sp, #32]
  40a850:	cbz	w8, 40a868 <machine_get_uid_shift+0x2e8>
  40a854:	mov	w8, #0xfffffffa            	// #-6
  40a858:	stur	w8, [x29, #-4]
  40a85c:	mov	w8, #0x1                   	// #1
  40a860:	str	w8, [sp, #28]
  40a864:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a868:	ldr	x0, [sp, #40]
  40a86c:	bl	4050e0 <fclose@plt>
  40a870:	ldur	x8, [x29, #-16]
  40a874:	ldr	w3, [x8, #80]
  40a878:	sub	x0, x29, #0x33
  40a87c:	mov	x1, #0x1b                  	// #27
  40a880:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40a884:	add	x2, x2, #0x947
  40a888:	bl	405090 <snprintf@plt>
  40a88c:	mov	w1, w0
  40a890:	sxtw	x8, w1
  40a894:	cmp	x8, #0x1b
  40a898:	cset	w9, cc  // cc = lo, ul, last
  40a89c:	mov	w10, #0x1                   	// #1
  40a8a0:	eor	w9, w9, #0x1
  40a8a4:	eor	w9, w9, w10
  40a8a8:	eor	w9, w9, w10
  40a8ac:	and	w9, w9, #0x1
  40a8b0:	mov	w1, w9
  40a8b4:	sxtw	x8, w1
  40a8b8:	cbz	x8, 40a8dc <machine_get_uid_shift+0x35c>
  40a8bc:	mov	w8, wzr
  40a8c0:	mov	w0, w8
  40a8c4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a8c8:	add	x1, x1, #0x919
  40a8cc:	ldr	x2, [sp, #16]
  40a8d0:	mov	w3, #0x2cd                 	// #717
  40a8d4:	ldr	x4, [sp, #8]
  40a8d8:	bl	404bd0 <log_assert_failed_realm@plt>
  40a8dc:	sub	x0, x29, #0x33
  40a8e0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a8e4:	add	x1, x1, #0x93a
  40a8e8:	bl	4050a0 <fopen64@plt>
  40a8ec:	str	x0, [sp, #40]
  40a8f0:	ldr	x8, [sp, #40]
  40a8f4:	cbnz	x8, 40a918 <machine_get_uid_shift+0x398>
  40a8f8:	bl	404d50 <__errno_location@plt>
  40a8fc:	ldr	w8, [x0]
  40a900:	mov	w9, wzr
  40a904:	subs	w8, w9, w8
  40a908:	stur	w8, [x29, #-4]
  40a90c:	mov	w8, #0x1                   	// #1
  40a910:	str	w8, [sp, #28]
  40a914:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a918:	bl	404d50 <__errno_location@plt>
  40a91c:	str	wzr, [x0]
  40a920:	ldr	x0, [sp, #40]
  40a924:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40a928:	add	x1, x1, #0x93d
  40a92c:	add	x2, sp, #0x3c
  40a930:	add	x3, sp, #0x38
  40a934:	add	x4, sp, #0x34
  40a938:	bl	4050b0 <__isoc99_fscanf@plt>
  40a93c:	str	w0, [sp, #36]
  40a940:	ldr	w8, [sp, #36]
  40a944:	cmp	w8, #0x3
  40a948:	b.eq	40a984 <machine_get_uid_shift+0x404>  // b.none
  40a94c:	ldr	x0, [sp, #40]
  40a950:	bl	4050c0 <ferror@plt>
  40a954:	cbz	w0, 40a970 <machine_get_uid_shift+0x3f0>
  40a958:	mov	w0, #0x5                   	// #5
  40a95c:	bl	40aa74 <errno_or_else>
  40a960:	stur	w0, [x29, #-4]
  40a964:	mov	w8, #0x1                   	// #1
  40a968:	str	w8, [sp, #28]
  40a96c:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a970:	mov	w8, #0xffffffb6            	// #-74
  40a974:	stur	w8, [x29, #-4]
  40a978:	mov	w8, #0x1                   	// #1
  40a97c:	str	w8, [sp, #28]
  40a980:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a984:	ldr	x0, [sp, #40]
  40a988:	mov	x8, xzr
  40a98c:	mov	x1, x8
  40a990:	bl	4050d0 <safe_fgetc@plt>
  40a994:	str	w0, [sp, #32]
  40a998:	ldr	w9, [sp, #32]
  40a99c:	cmp	w9, #0x0
  40a9a0:	cset	w9, ge  // ge = tcont
  40a9a4:	tbnz	w9, #0, 40a9bc <machine_get_uid_shift+0x43c>
  40a9a8:	ldr	w8, [sp, #32]
  40a9ac:	stur	w8, [x29, #-4]
  40a9b0:	mov	w8, #0x1                   	// #1
  40a9b4:	str	w8, [sp, #28]
  40a9b8:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a9bc:	ldr	w8, [sp, #32]
  40a9c0:	cbz	w8, 40a9d8 <machine_get_uid_shift+0x458>
  40a9c4:	mov	w8, #0xfffffffa            	// #-6
  40a9c8:	stur	w8, [x29, #-4]
  40a9cc:	mov	w8, #0x1                   	// #1
  40a9d0:	str	w8, [sp, #28]
  40a9d4:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a9d8:	ldur	w8, [x29, #-56]
  40a9dc:	ldr	w9, [sp, #60]
  40a9e0:	cmp	w8, w9
  40a9e4:	b.eq	40a9fc <machine_get_uid_shift+0x47c>  // b.none
  40a9e8:	mov	w8, #0xfffffffa            	// #-6
  40a9ec:	stur	w8, [x29, #-4]
  40a9f0:	mov	w8, #0x1                   	// #1
  40a9f4:	str	w8, [sp, #28]
  40a9f8:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40a9fc:	ldur	w8, [x29, #-60]
  40aa00:	ldr	w9, [sp, #56]
  40aa04:	cmp	w8, w9
  40aa08:	b.eq	40aa20 <machine_get_uid_shift+0x4a0>  // b.none
  40aa0c:	mov	w8, #0xfffffffa            	// #-6
  40aa10:	stur	w8, [x29, #-4]
  40aa14:	mov	w8, #0x1                   	// #1
  40aa18:	str	w8, [sp, #28]
  40aa1c:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40aa20:	ldr	w8, [sp, #64]
  40aa24:	ldr	w9, [sp, #52]
  40aa28:	cmp	w8, w9
  40aa2c:	b.eq	40aa44 <machine_get_uid_shift+0x4c4>  // b.none
  40aa30:	mov	w8, #0xfffffffa            	// #-6
  40aa34:	stur	w8, [x29, #-4]
  40aa38:	mov	w8, #0x1                   	// #1
  40aa3c:	str	w8, [sp, #28]
  40aa40:	b	40aa5c <machine_get_uid_shift+0x4dc>
  40aa44:	ldur	w8, [x29, #-60]
  40aa48:	ldur	x9, [x29, #-24]
  40aa4c:	str	w8, [x9]
  40aa50:	stur	wzr, [x29, #-4]
  40aa54:	mov	w8, #0x1                   	// #1
  40aa58:	str	w8, [sp, #28]
  40aa5c:	add	x0, sp, #0x28
  40aa60:	bl	408bc8 <fclosep>
  40aa64:	ldur	w0, [x29, #-4]
  40aa68:	ldp	x29, x30, [sp, #128]
  40aa6c:	add	sp, sp, #0x90
  40aa70:	ret

000000000040aa74 <errno_or_else>:
  40aa74:	sub	sp, sp, #0x20
  40aa78:	stp	x29, x30, [sp, #16]
  40aa7c:	add	x29, sp, #0x10
  40aa80:	str	w0, [sp, #8]
  40aa84:	bl	404d50 <__errno_location@plt>
  40aa88:	ldr	w8, [x0]
  40aa8c:	cmp	w8, #0x0
  40aa90:	cset	w8, le
  40aa94:	tbnz	w8, #0, 40aab0 <errno_or_else+0x3c>
  40aa98:	bl	404d50 <__errno_location@plt>
  40aa9c:	ldr	w8, [x0]
  40aaa0:	mov	w9, wzr
  40aaa4:	subs	w8, w9, w8
  40aaa8:	stur	w8, [x29, #-4]
  40aaac:	b	40aac4 <errno_or_else+0x50>
  40aab0:	ldr	w0, [sp, #8]
  40aab4:	bl	404ba0 <abs@plt>
  40aab8:	mov	w8, wzr
  40aabc:	subs	w8, w8, w0
  40aac0:	stur	w8, [x29, #-4]
  40aac4:	ldur	w0, [x29, #-4]
  40aac8:	ldp	x29, x30, [sp, #16]
  40aacc:	add	sp, sp, #0x20
  40aad0:	ret

000000000040aad4 <machine_state_to_string>:
  40aad4:	sub	sp, sp, #0x10
  40aad8:	str	w0, [sp, #4]
  40aadc:	ldr	w8, [sp, #4]
  40aae0:	cmp	w8, #0x0
  40aae4:	cset	w8, lt  // lt = tstop
  40aae8:	tbnz	w8, #0, 40aaf8 <machine_state_to_string+0x24>
  40aaec:	ldr	w8, [sp, #4]
  40aaf0:	cmp	w8, #0x3
  40aaf4:	b.lt	40ab04 <machine_state_to_string+0x30>  // b.tstop
  40aaf8:	mov	x8, xzr
  40aafc:	str	x8, [sp, #8]
  40ab00:	b	40ab24 <machine_state_to_string+0x50>
  40ab04:	ldrsw	x8, [sp, #4]
  40ab08:	mov	x9, #0x8                   	// #8
  40ab0c:	mul	x8, x9, x8
  40ab10:	adrp	x9, 43e000 <__FRAME_END__+0x1f3a8>
  40ab14:	add	x9, x9, #0x160
  40ab18:	add	x8, x9, x8
  40ab1c:	ldr	x8, [x8]
  40ab20:	str	x8, [sp, #8]
  40ab24:	ldr	x0, [sp, #8]
  40ab28:	add	sp, sp, #0x10
  40ab2c:	ret

000000000040ab30 <machine_state_from_string>:
  40ab30:	sub	sp, sp, #0x20
  40ab34:	stp	x29, x30, [sp, #16]
  40ab38:	add	x29, sp, #0x10
  40ab3c:	adrp	x8, 43e000 <__FRAME_END__+0x1f3a8>
  40ab40:	add	x8, x8, #0x160
  40ab44:	mov	x1, #0x3                   	// #3
  40ab48:	str	x0, [sp, #8]
  40ab4c:	ldr	x2, [sp, #8]
  40ab50:	mov	x0, x8
  40ab54:	bl	405010 <string_table_lookup@plt>
  40ab58:	ldp	x29, x30, [sp, #16]
  40ab5c:	add	sp, sp, #0x20
  40ab60:	ret

000000000040ab64 <kill_who_to_string>:
  40ab64:	sub	sp, sp, #0x10
  40ab68:	str	w0, [sp, #4]
  40ab6c:	ldr	w8, [sp, #4]
  40ab70:	cmp	w8, #0x0
  40ab74:	cset	w8, lt  // lt = tstop
  40ab78:	tbnz	w8, #0, 40ab88 <kill_who_to_string+0x24>
  40ab7c:	ldr	w8, [sp, #4]
  40ab80:	cmp	w8, #0x2
  40ab84:	b.lt	40ab94 <kill_who_to_string+0x30>  // b.tstop
  40ab88:	mov	x8, xzr
  40ab8c:	str	x8, [sp, #8]
  40ab90:	b	40abb4 <kill_who_to_string+0x50>
  40ab94:	ldrsw	x8, [sp, #4]
  40ab98:	mov	x9, #0x8                   	// #8
  40ab9c:	mul	x8, x9, x8
  40aba0:	adrp	x9, 43e000 <__FRAME_END__+0x1f3a8>
  40aba4:	add	x9, x9, #0x178
  40aba8:	add	x8, x9, x8
  40abac:	ldr	x8, [x8]
  40abb0:	str	x8, [sp, #8]
  40abb4:	ldr	x0, [sp, #8]
  40abb8:	add	sp, sp, #0x10
  40abbc:	ret

000000000040abc0 <kill_who_from_string>:
  40abc0:	sub	sp, sp, #0x20
  40abc4:	stp	x29, x30, [sp, #16]
  40abc8:	add	x29, sp, #0x10
  40abcc:	adrp	x8, 43e000 <__FRAME_END__+0x1f3a8>
  40abd0:	add	x8, x8, #0x178
  40abd4:	mov	x1, #0x2                   	// #2
  40abd8:	str	x0, [sp, #8]
  40abdc:	ldr	x2, [sp, #8]
  40abe0:	mov	x0, x8
  40abe4:	bl	405010 <string_table_lookup@plt>
  40abe8:	ldp	x29, x30, [sp, #16]
  40abec:	add	sp, sp, #0x20
  40abf0:	ret

000000000040abf4 <timestamp_is_set>:
  40abf4:	sub	sp, sp, #0x10
  40abf8:	str	x0, [sp, #8]
  40abfc:	ldr	x8, [sp, #8]
  40ac00:	cmp	x8, #0x0
  40ac04:	cset	w9, ls  // ls = plast
  40ac08:	mov	w10, #0x0                   	// #0
  40ac0c:	str	w10, [sp, #4]
  40ac10:	tbnz	w9, #0, 40ac28 <timestamp_is_set+0x34>
  40ac14:	ldr	x8, [sp, #8]
  40ac18:	mov	x9, #0xffffffffffffffff    	// #-1
  40ac1c:	cmp	x8, x9
  40ac20:	cset	w10, ne  // ne = any
  40ac24:	str	w10, [sp, #4]
  40ac28:	ldr	w8, [sp, #4]
  40ac2c:	and	w0, w8, #0x1
  40ac30:	add	sp, sp, #0x10
  40ac34:	ret

000000000040ac38 <machine_start_scope>:
  40ac38:	stp	x29, x30, [sp, #-16]!
  40ac3c:	mov	x29, sp
  40ac40:	sub	sp, sp, #0xe0
  40ac44:	mov	x8, xzr
  40ac48:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40ac4c:	add	x9, x9, #0x333
  40ac50:	add	x9, x9, #0x3
  40ac54:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40ac58:	add	x10, x10, #0xaa5
  40ac5c:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  40ac60:	add	x11, x11, #0x7ae
  40ac64:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  40ac68:	add	x12, x12, #0x9fe
  40ac6c:	stur	x0, [x29, #-16]
  40ac70:	stur	x1, [x29, #-24]
  40ac74:	stur	x2, [x29, #-32]
  40ac78:	stur	x8, [x29, #-40]
  40ac7c:	stur	x8, [x29, #-48]
  40ac80:	stur	x8, [x29, #-56]
  40ac84:	stur	x8, [x29, #-64]
  40ac88:	stur	x9, [x29, #-184]
  40ac8c:	stur	x10, [x29, #-192]
  40ac90:	stur	x11, [x29, #-200]
  40ac94:	stur	x12, [x29, #-208]
  40ac98:	ldur	x8, [x29, #-16]
  40ac9c:	cmp	x8, #0x0
  40aca0:	cset	w9, ne  // ne = any
  40aca4:	mov	w10, #0x1                   	// #1
  40aca8:	eor	w9, w9, #0x1
  40acac:	eor	w9, w9, w10
  40acb0:	eor	w9, w9, w10
  40acb4:	and	w9, w9, #0x1
  40acb8:	mov	w0, w9
  40acbc:	sxtw	x8, w0
  40acc0:	cbz	x8, 40ace4 <machine_start_scope+0xac>
  40acc4:	mov	w8, wzr
  40acc8:	mov	w0, w8
  40accc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40acd0:	add	x1, x1, #0x9f6
  40acd4:	ldur	x2, [x29, #-184]
  40acd8:	mov	w3, #0x157                 	// #343
  40acdc:	ldur	x4, [x29, #-208]
  40ace0:	bl	404bd0 <log_assert_failed_realm@plt>
  40ace4:	ldur	x8, [x29, #-16]
  40ace8:	ldr	w9, [x8, #80]
  40acec:	cmp	w9, #0x0
  40acf0:	cset	w9, gt
  40acf4:	mov	w10, #0x1                   	// #1
  40acf8:	eor	w9, w9, #0x1
  40acfc:	eor	w9, w9, w10
  40ad00:	eor	w9, w9, w10
  40ad04:	and	w9, w9, #0x1
  40ad08:	mov	w0, w9
  40ad0c:	sxtw	x8, w0
  40ad10:	cbz	x8, 40ad34 <machine_start_scope+0xfc>
  40ad14:	mov	w8, wzr
  40ad18:	mov	w0, w8
  40ad1c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ad20:	add	x1, x1, #0xa43
  40ad24:	ldur	x2, [x29, #-184]
  40ad28:	mov	w3, #0x158                 	// #344
  40ad2c:	ldur	x4, [x29, #-208]
  40ad30:	bl	404bd0 <log_assert_failed_realm@plt>
  40ad34:	ldur	x8, [x29, #-16]
  40ad38:	ldr	x8, [x8, #64]
  40ad3c:	cmp	x8, #0x0
  40ad40:	cset	w9, ne  // ne = any
  40ad44:	mov	w10, #0x1                   	// #1
  40ad48:	eor	w9, w9, #0x1
  40ad4c:	eor	w9, w9, w10
  40ad50:	eor	w9, w9, w10
  40ad54:	eor	w9, w9, w10
  40ad58:	and	w9, w9, #0x1
  40ad5c:	mov	w0, w9
  40ad60:	sxtw	x8, w0
  40ad64:	cbz	x8, 40ad88 <machine_start_scope+0x150>
  40ad68:	mov	w8, wzr
  40ad6c:	mov	w0, w8
  40ad70:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ad74:	add	x1, x1, #0xa57
  40ad78:	ldur	x2, [x29, #-184]
  40ad7c:	mov	w3, #0x159                 	// #345
  40ad80:	ldur	x4, [x29, #-208]
  40ad84:	bl	404bd0 <log_assert_failed_realm@plt>
  40ad88:	ldur	x8, [x29, #-16]
  40ad8c:	ldr	x0, [x8, #8]
  40ad90:	bl	4050f0 <unit_name_escape@plt>
  40ad94:	stur	x0, [x29, #-56]
  40ad98:	ldur	x8, [x29, #-56]
  40ad9c:	cbnz	x8, 40adcc <machine_start_scope+0x194>
  40ada0:	mov	w8, wzr
  40ada4:	mov	w0, w8
  40ada8:	ldur	x1, [x29, #-184]
  40adac:	mov	w2, #0x15d                 	// #349
  40adb0:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40adb4:	add	x3, x3, #0xa66
  40adb8:	bl	404de0 <log_oom_internal@plt>
  40adbc:	stur	w0, [x29, #-4]
  40adc0:	mov	w8, #0x1                   	// #1
  40adc4:	stur	w8, [x29, #-80]
  40adc8:	b	40b434 <machine_start_scope+0x7fc>
  40adcc:	ldur	x1, [x29, #-56]
  40add0:	adrp	x0, 41b000 <machine_hash_ops+0x3e8>
  40add4:	add	x0, x0, #0xa7a
  40add8:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40addc:	add	x2, x2, #0xa83
  40ade0:	mov	x8, xzr
  40ade4:	mov	x3, x8
  40ade8:	bl	405100 <strjoin_real@plt>
  40adec:	stur	x0, [x29, #-64]
  40adf0:	ldur	x8, [x29, #-64]
  40adf4:	cbnz	x8, 40ae24 <machine_start_scope+0x1ec>
  40adf8:	mov	w8, wzr
  40adfc:	mov	w0, w8
  40ae00:	ldur	x1, [x29, #-184]
  40ae04:	mov	w2, #0x161                 	// #353
  40ae08:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40ae0c:	add	x3, x3, #0xa66
  40ae10:	bl	404de0 <log_oom_internal@plt>
  40ae14:	stur	w0, [x29, #-4]
  40ae18:	mov	w8, #0x1                   	// #1
  40ae1c:	stur	w8, [x29, #-80]
  40ae20:	b	40b434 <machine_start_scope+0x7fc>
  40ae24:	ldur	x8, [x29, #-16]
  40ae28:	ldr	x8, [x8]
  40ae2c:	ldr	x0, [x8, #8]
  40ae30:	sub	x1, x29, #0x28
  40ae34:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40ae38:	add	x2, x2, #0x17
  40ae3c:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40ae40:	add	x3, x3, #0x30
  40ae44:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40ae48:	add	x4, x4, #0x4a
  40ae4c:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40ae50:	add	x5, x5, #0xa8a
  40ae54:	bl	405110 <sd_bus_message_new_method_call@plt>
  40ae58:	stur	w0, [x29, #-76]
  40ae5c:	ldur	w9, [x29, #-76]
  40ae60:	cmp	w9, #0x0
  40ae64:	cset	w9, ge  // ge = tcont
  40ae68:	tbnz	w9, #0, 40ae80 <machine_start_scope+0x248>
  40ae6c:	ldur	w8, [x29, #-76]
  40ae70:	stur	w8, [x29, #-4]
  40ae74:	mov	w8, #0x1                   	// #1
  40ae78:	stur	w8, [x29, #-80]
  40ae7c:	b	40b434 <machine_start_scope+0x7fc>
  40ae80:	ldur	x0, [x29, #-40]
  40ae84:	ldur	x2, [x29, #-64]
  40ae88:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ae8c:	add	x1, x1, #0xa9d
  40ae90:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40ae94:	add	x3, x3, #0xaa0
  40ae98:	bl	405120 <sd_bus_message_append@plt>
  40ae9c:	stur	w0, [x29, #-76]
  40aea0:	ldur	w8, [x29, #-76]
  40aea4:	cmp	w8, #0x0
  40aea8:	cset	w8, ge  // ge = tcont
  40aeac:	tbnz	w8, #0, 40aec4 <machine_start_scope+0x28c>
  40aeb0:	ldur	w8, [x29, #-76]
  40aeb4:	stur	w8, [x29, #-4]
  40aeb8:	mov	w8, #0x1                   	// #1
  40aebc:	stur	w8, [x29, #-80]
  40aec0:	b	40b434 <machine_start_scope+0x7fc>
  40aec4:	ldur	x0, [x29, #-40]
  40aec8:	mov	w1, #0x61                  	// #97
  40aecc:	ldur	x2, [x29, #-192]
  40aed0:	bl	405130 <sd_bus_message_open_container@plt>
  40aed4:	stur	w0, [x29, #-76]
  40aed8:	ldur	w8, [x29, #-76]
  40aedc:	cmp	w8, #0x0
  40aee0:	cset	w8, ge  // ge = tcont
  40aee4:	tbnz	w8, #0, 40aefc <machine_start_scope+0x2c4>
  40aee8:	ldur	w8, [x29, #-76]
  40aeec:	stur	w8, [x29, #-4]
  40aef0:	mov	w8, #0x1                   	// #1
  40aef4:	stur	w8, [x29, #-80]
  40aef8:	b	40b434 <machine_start_scope+0x7fc>
  40aefc:	ldur	x0, [x29, #-40]
  40af00:	ldur	x1, [x29, #-192]
  40af04:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40af08:	add	x2, x2, #0xaaa
  40af0c:	ldur	x3, [x29, #-200]
  40af10:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40af14:	add	x4, x4, #0xab0
  40af18:	bl	405120 <sd_bus_message_append@plt>
  40af1c:	stur	w0, [x29, #-76]
  40af20:	ldur	w8, [x29, #-76]
  40af24:	cmp	w8, #0x0
  40af28:	cset	w8, ge  // ge = tcont
  40af2c:	tbnz	w8, #0, 40af44 <machine_start_scope+0x30c>
  40af30:	ldur	w8, [x29, #-76]
  40af34:	stur	w8, [x29, #-4]
  40af38:	mov	w8, #0x1                   	// #1
  40af3c:	stur	w8, [x29, #-80]
  40af40:	b	40b434 <machine_start_scope+0x7fc>
  40af44:	ldur	x8, [x29, #-16]
  40af48:	ldr	w9, [x8, #32]
  40af4c:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40af50:	add	x8, x8, #0xacf
  40af54:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40af58:	add	x10, x10, #0xabe
  40af5c:	cmp	w9, #0x1
  40af60:	csel	x8, x10, x8, eq  // eq = none
  40af64:	sub	x10, x29, #0x60
  40af68:	stur	x8, [x29, #-96]
  40af6c:	ldur	x8, [x29, #-16]
  40af70:	ldr	x8, [x8, #8]
  40af74:	str	x8, [x10, #8]
  40af78:	stur	xzr, [x29, #-120]
  40af7c:	stur	xzr, [x29, #-128]
  40af80:	ldur	x8, [x29, #-128]
  40af84:	mov	w9, #0x0                   	// #0
  40af88:	cmp	x8, #0x2
  40af8c:	stur	w9, [x29, #-212]
  40af90:	b.cs	40afb8 <machine_start_scope+0x380>  // b.hs, b.nlast
  40af94:	ldur	x8, [x29, #-128]
  40af98:	mov	x9, #0x8                   	// #8
  40af9c:	mul	x8, x9, x8
  40afa0:	sub	x9, x29, #0x60
  40afa4:	add	x8, x9, x8
  40afa8:	ldr	x8, [x8]
  40afac:	cmp	x8, #0x0
  40afb0:	cset	w10, ne  // ne = any
  40afb4:	stur	w10, [x29, #-212]
  40afb8:	ldur	w8, [x29, #-212]
  40afbc:	tbnz	w8, #0, 40afc4 <machine_start_scope+0x38c>
  40afc0:	b	40affc <machine_start_scope+0x3c4>
  40afc4:	ldur	x8, [x29, #-128]
  40afc8:	mov	x9, #0x8                   	// #8
  40afcc:	mul	x8, x9, x8
  40afd0:	sub	x9, x29, #0x60
  40afd4:	add	x8, x9, x8
  40afd8:	ldr	x0, [x8]
  40afdc:	bl	404e00 <strlen@plt>
  40afe0:	ldur	x8, [x29, #-120]
  40afe4:	add	x8, x8, x0
  40afe8:	stur	x8, [x29, #-120]
  40afec:	ldur	x8, [x29, #-128]
  40aff0:	add	x8, x8, #0x1
  40aff4:	stur	x8, [x29, #-128]
  40aff8:	b	40af80 <machine_start_scope+0x348>
  40affc:	ldur	x8, [x29, #-120]
  40b000:	add	x8, x8, #0x1
  40b004:	stur	x8, [x29, #-136]
  40b008:	ldur	x1, [x29, #-136]
  40b00c:	mov	x0, #0x1                   	// #1
  40b010:	bl	408cd4 <size_multiply_overflow>
  40b014:	mov	w8, #0x1                   	// #1
  40b018:	eor	w9, w0, #0x1
  40b01c:	eor	w9, w9, w8
  40b020:	eor	w9, w9, w8
  40b024:	eor	w8, w9, w8
  40b028:	and	w8, w8, #0x1
  40b02c:	mov	w1, w8
  40b030:	sxtw	x10, w1
  40b034:	cbz	x10, 40b058 <machine_start_scope+0x420>
  40b038:	mov	w8, wzr
  40b03c:	mov	w0, w8
  40b040:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b044:	add	x1, x1, #0x4dd
  40b048:	ldur	x2, [x29, #-184]
  40b04c:	mov	w3, #0x179                 	// #377
  40b050:	ldur	x4, [x29, #-208]
  40b054:	bl	404bd0 <log_assert_failed_realm@plt>
  40b058:	ldur	x8, [x29, #-136]
  40b05c:	mov	x9, #0x1                   	// #1
  40b060:	mul	x8, x9, x8
  40b064:	cmp	x8, #0x400, lsl #12
  40b068:	cset	w10, ls  // ls = plast
  40b06c:	mov	w11, #0x1                   	// #1
  40b070:	eor	w10, w10, #0x1
  40b074:	eor	w10, w10, w11
  40b078:	eor	w10, w10, w11
  40b07c:	and	w10, w10, #0x1
  40b080:	mov	w0, w10
  40b084:	sxtw	x8, w0
  40b088:	cbz	x8, 40b0ac <machine_start_scope+0x474>
  40b08c:	mov	w8, wzr
  40b090:	mov	w0, w8
  40b094:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b098:	add	x1, x1, #0x508
  40b09c:	ldur	x2, [x29, #-184]
  40b0a0:	mov	w3, #0x179                 	// #377
  40b0a4:	ldur	x4, [x29, #-208]
  40b0a8:	bl	404bd0 <log_assert_failed_realm@plt>
  40b0ac:	ldur	x8, [x29, #-136]
  40b0b0:	mov	x9, #0x1                   	// #1
  40b0b4:	mul	x8, x9, x8
  40b0b8:	mul	x8, x8, x9
  40b0bc:	add	x8, x8, #0xf
  40b0c0:	and	x8, x8, #0xfffffffffffffff0
  40b0c4:	mov	x9, sp
  40b0c8:	subs	x8, x9, x8
  40b0cc:	mov	sp, x8
  40b0d0:	stur	x8, [x29, #-144]
  40b0d4:	ldur	x8, [x29, #-144]
  40b0d8:	stur	x8, [x29, #-104]
  40b0dc:	stur	x8, [x29, #-112]
  40b0e0:	stur	xzr, [x29, #-128]
  40b0e4:	ldur	x8, [x29, #-128]
  40b0e8:	mov	w9, #0x0                   	// #0
  40b0ec:	cmp	x8, #0x2
  40b0f0:	stur	w9, [x29, #-216]
  40b0f4:	b.cs	40b11c <machine_start_scope+0x4e4>  // b.hs, b.nlast
  40b0f8:	ldur	x8, [x29, #-128]
  40b0fc:	mov	x9, #0x8                   	// #8
  40b100:	mul	x8, x9, x8
  40b104:	sub	x9, x29, #0x60
  40b108:	add	x8, x9, x8
  40b10c:	ldr	x8, [x8]
  40b110:	cmp	x8, #0x0
  40b114:	cset	w10, ne  // ne = any
  40b118:	stur	w10, [x29, #-216]
  40b11c:	ldur	w8, [x29, #-216]
  40b120:	tbnz	w8, #0, 40b128 <machine_start_scope+0x4f0>
  40b124:	b	40b15c <machine_start_scope+0x524>
  40b128:	ldur	x0, [x29, #-112]
  40b12c:	ldur	x8, [x29, #-128]
  40b130:	mov	x9, #0x8                   	// #8
  40b134:	mul	x8, x9, x8
  40b138:	sub	x9, x29, #0x60
  40b13c:	add	x8, x9, x8
  40b140:	ldr	x1, [x8]
  40b144:	bl	404f60 <stpcpy@plt>
  40b148:	stur	x0, [x29, #-112]
  40b14c:	ldur	x8, [x29, #-128]
  40b150:	add	x8, x8, #0x1
  40b154:	stur	x8, [x29, #-128]
  40b158:	b	40b0e4 <machine_start_scope+0x4ac>
  40b15c:	ldur	x8, [x29, #-112]
  40b160:	mov	w9, #0x0                   	// #0
  40b164:	strb	w9, [x8]
  40b168:	ldur	x8, [x29, #-104]
  40b16c:	stur	x8, [x29, #-152]
  40b170:	ldur	x8, [x29, #-152]
  40b174:	stur	x8, [x29, #-72]
  40b178:	ldur	x0, [x29, #-40]
  40b17c:	ldur	x4, [x29, #-72]
  40b180:	ldur	x1, [x29, #-192]
  40b184:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40b188:	add	x2, x2, #0xada
  40b18c:	ldur	x3, [x29, #-200]
  40b190:	bl	405120 <sd_bus_message_append@plt>
  40b194:	stur	w0, [x29, #-76]
  40b198:	ldur	w9, [x29, #-76]
  40b19c:	cmp	w9, #0x0
  40b1a0:	cset	w9, ge  // ge = tcont
  40b1a4:	tbnz	w9, #0, 40b1bc <machine_start_scope+0x584>
  40b1a8:	ldur	w8, [x29, #-76]
  40b1ac:	stur	w8, [x29, #-4]
  40b1b0:	mov	w8, #0x1                   	// #1
  40b1b4:	stur	w8, [x29, #-80]
  40b1b8:	b	40b434 <machine_start_scope+0x7fc>
  40b1bc:	ldur	x0, [x29, #-40]
  40b1c0:	ldur	x8, [x29, #-16]
  40b1c4:	ldr	w5, [x8, #80]
  40b1c8:	sub	sp, sp, #0x50
  40b1cc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b1d0:	add	x1, x1, #0xae6
  40b1d4:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40b1d8:	add	x2, x2, #0xafb
  40b1dc:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40b1e0:	add	x3, x3, #0xb00
  40b1e4:	mov	w9, #0x1                   	// #1
  40b1e8:	mov	w4, w9
  40b1ec:	adrp	x6, 41b000 <machine_hash_ops+0x3e8>
  40b1f0:	add	x6, x6, #0xb03
  40b1f4:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40b1f8:	add	x8, x8, #0xb0c
  40b1fc:	mov	x7, x8
  40b200:	mov	x10, sp
  40b204:	str	w9, [x10]
  40b208:	mov	x10, sp
  40b20c:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  40b210:	add	x11, x11, #0xb0e
  40b214:	str	x11, [x10, #8]
  40b218:	mov	x10, sp
  40b21c:	ldur	x11, [x29, #-200]
  40b220:	str	x11, [x10, #16]
  40b224:	mov	x10, sp
  40b228:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  40b22c:	add	x12, x12, #0xb1a
  40b230:	str	x12, [x10, #24]
  40b234:	mov	x10, sp
  40b238:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  40b23c:	add	x12, x12, #0xb2d
  40b240:	str	x12, [x10, #32]
  40b244:	mov	x10, sp
  40b248:	str	x8, [x10, #40]
  40b24c:	mov	x8, sp
  40b250:	str	w9, [x8, #48]
  40b254:	mov	x8, sp
  40b258:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40b25c:	add	x10, x10, #0xb34
  40b260:	str	x10, [x8, #56]
  40b264:	mov	x8, sp
  40b268:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40b26c:	add	x10, x10, #0xb3d
  40b270:	str	x10, [x8, #64]
  40b274:	mov	x8, sp
  40b278:	mov	x10, #0x4000                	// #16384
  40b27c:	str	x10, [x8, #72]
  40b280:	bl	405120 <sd_bus_message_append@plt>
  40b284:	add	sp, sp, #0x50
  40b288:	stur	w0, [x29, #-76]
  40b28c:	ldur	w9, [x29, #-76]
  40b290:	cmp	w9, #0x0
  40b294:	cset	w9, ge  // ge = tcont
  40b298:	tbnz	w9, #0, 40b2b0 <machine_start_scope+0x678>
  40b29c:	ldur	w8, [x29, #-76]
  40b2a0:	stur	w8, [x29, #-4]
  40b2a4:	mov	w8, #0x1                   	// #1
  40b2a8:	stur	w8, [x29, #-80]
  40b2ac:	b	40b434 <machine_start_scope+0x7fc>
  40b2b0:	ldur	x8, [x29, #-24]
  40b2b4:	cbz	x8, 40b2f0 <machine_start_scope+0x6b8>
  40b2b8:	ldur	x0, [x29, #-40]
  40b2bc:	ldur	x1, [x29, #-24]
  40b2c0:	mov	w2, #0x1                   	// #1
  40b2c4:	bl	405140 <sd_bus_message_copy@plt>
  40b2c8:	stur	w0, [x29, #-76]
  40b2cc:	ldur	w8, [x29, #-76]
  40b2d0:	cmp	w8, #0x0
  40b2d4:	cset	w8, ge  // ge = tcont
  40b2d8:	tbnz	w8, #0, 40b2f0 <machine_start_scope+0x6b8>
  40b2dc:	ldur	w8, [x29, #-76]
  40b2e0:	stur	w8, [x29, #-4]
  40b2e4:	mov	w8, #0x1                   	// #1
  40b2e8:	stur	w8, [x29, #-80]
  40b2ec:	b	40b434 <machine_start_scope+0x7fc>
  40b2f0:	ldur	x0, [x29, #-40]
  40b2f4:	bl	405150 <sd_bus_message_close_container@plt>
  40b2f8:	stur	w0, [x29, #-76]
  40b2fc:	ldur	w8, [x29, #-76]
  40b300:	cmp	w8, #0x0
  40b304:	cset	w8, ge  // ge = tcont
  40b308:	tbnz	w8, #0, 40b320 <machine_start_scope+0x6e8>
  40b30c:	ldur	w8, [x29, #-76]
  40b310:	stur	w8, [x29, #-4]
  40b314:	mov	w8, #0x1                   	// #1
  40b318:	stur	w8, [x29, #-80]
  40b31c:	b	40b434 <machine_start_scope+0x7fc>
  40b320:	ldur	x0, [x29, #-40]
  40b324:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b328:	add	x1, x1, #0xb3f
  40b32c:	mov	w8, wzr
  40b330:	mov	w2, w8
  40b334:	bl	405120 <sd_bus_message_append@plt>
  40b338:	stur	w0, [x29, #-76]
  40b33c:	ldur	w8, [x29, #-76]
  40b340:	cmp	w8, #0x0
  40b344:	cset	w8, ge  // ge = tcont
  40b348:	tbnz	w8, #0, 40b360 <machine_start_scope+0x728>
  40b34c:	ldur	w8, [x29, #-76]
  40b350:	stur	w8, [x29, #-4]
  40b354:	mov	w8, #0x1                   	// #1
  40b358:	stur	w8, [x29, #-80]
  40b35c:	b	40b434 <machine_start_scope+0x7fc>
  40b360:	ldur	x1, [x29, #-40]
  40b364:	ldur	x3, [x29, #-32]
  40b368:	mov	x8, xzr
  40b36c:	mov	x0, x8
  40b370:	mov	x2, x8
  40b374:	sub	x4, x29, #0x30
  40b378:	bl	405160 <sd_bus_call@plt>
  40b37c:	stur	w0, [x29, #-76]
  40b380:	ldur	w9, [x29, #-76]
  40b384:	cmp	w9, #0x0
  40b388:	cset	w9, ge  // ge = tcont
  40b38c:	tbnz	w9, #0, 40b3a4 <machine_start_scope+0x76c>
  40b390:	ldur	w8, [x29, #-76]
  40b394:	stur	w8, [x29, #-4]
  40b398:	mov	w8, #0x1                   	// #1
  40b39c:	stur	w8, [x29, #-80]
  40b3a0:	b	40b434 <machine_start_scope+0x7fc>
  40b3a4:	ldur	x8, [x29, #-64]
  40b3a8:	stur	x8, [x29, #-160]
  40b3ac:	mov	x8, xzr
  40b3b0:	stur	x8, [x29, #-64]
  40b3b4:	ldur	x8, [x29, #-160]
  40b3b8:	stur	x8, [x29, #-168]
  40b3bc:	ldur	x8, [x29, #-168]
  40b3c0:	ldur	x9, [x29, #-16]
  40b3c4:	str	x8, [x9, #64]
  40b3c8:	ldur	x8, [x29, #-16]
  40b3cc:	ldrb	w10, [x8, #104]
  40b3d0:	and	w10, w10, #0xfffffff7
  40b3d4:	orr	w10, w10, #0x8
  40b3d8:	strb	w10, [x8, #104]
  40b3dc:	ldur	x0, [x29, #-48]
  40b3e0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b3e4:	add	x1, x1, #0xb49
  40b3e8:	sub	x2, x29, #0xb0
  40b3ec:	bl	405170 <sd_bus_message_read@plt>
  40b3f0:	stur	w0, [x29, #-76]
  40b3f4:	ldur	w10, [x29, #-76]
  40b3f8:	cmp	w10, #0x0
  40b3fc:	cset	w10, ge  // ge = tcont
  40b400:	tbnz	w10, #0, 40b418 <machine_start_scope+0x7e0>
  40b404:	ldur	w8, [x29, #-76]
  40b408:	stur	w8, [x29, #-4]
  40b40c:	mov	w8, #0x1                   	// #1
  40b410:	stur	w8, [x29, #-80]
  40b414:	b	40b434 <machine_start_scope+0x7fc>
  40b418:	ldur	x8, [x29, #-16]
  40b41c:	add	x0, x8, #0x48
  40b420:	ldur	x1, [x29, #-176]
  40b424:	bl	405180 <free_and_strdup@plt>
  40b428:	stur	w0, [x29, #-4]
  40b42c:	mov	w9, #0x1                   	// #1
  40b430:	stur	w9, [x29, #-80]
  40b434:	sub	x0, x29, #0x40
  40b438:	bl	408ba0 <freep>
  40b43c:	sub	x0, x29, #0x38
  40b440:	bl	408ba0 <freep>
  40b444:	sub	x0, x29, #0x30
  40b448:	bl	40b464 <sd_bus_message_unrefp>
  40b44c:	sub	x0, x29, #0x28
  40b450:	bl	40b464 <sd_bus_message_unrefp>
  40b454:	ldur	w0, [x29, #-4]
  40b458:	mov	sp, x29
  40b45c:	ldp	x29, x30, [sp], #16
  40b460:	ret

000000000040b464 <sd_bus_message_unrefp>:
  40b464:	sub	sp, sp, #0x20
  40b468:	stp	x29, x30, [sp, #16]
  40b46c:	add	x29, sp, #0x10
  40b470:	str	x0, [sp, #8]
  40b474:	ldr	x8, [sp, #8]
  40b478:	ldr	x8, [x8]
  40b47c:	cbz	x8, 40b48c <sd_bus_message_unrefp+0x28>
  40b480:	ldr	x8, [sp, #8]
  40b484:	ldr	x0, [x8]
  40b488:	bl	404e70 <sd_bus_message_unref@plt>
  40b48c:	ldp	x29, x30, [sp, #16]
  40b490:	add	sp, sp, #0x20
  40b494:	ret

000000000040b498 <property_get_pool_path>:
  40b498:	sub	sp, sp, #0x50
  40b49c:	stp	x29, x30, [sp, #64]
  40b4a0:	add	x29, sp, #0x40
  40b4a4:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40b4a8:	add	x8, x8, #0xec5
  40b4ac:	add	x8, x8, #0x3
  40b4b0:	stur	x0, [x29, #-8]
  40b4b4:	stur	x1, [x29, #-16]
  40b4b8:	stur	x2, [x29, #-24]
  40b4bc:	str	x3, [sp, #32]
  40b4c0:	str	x4, [sp, #24]
  40b4c4:	str	x5, [sp, #16]
  40b4c8:	str	x6, [sp, #8]
  40b4cc:	str	x8, [sp]
  40b4d0:	ldur	x8, [x29, #-8]
  40b4d4:	cmp	x8, #0x0
  40b4d8:	cset	w9, ne  // ne = any
  40b4dc:	mov	w10, #0x1                   	// #1
  40b4e0:	eor	w9, w9, #0x1
  40b4e4:	eor	w9, w9, w10
  40b4e8:	eor	w9, w9, w10
  40b4ec:	and	w9, w9, #0x1
  40b4f0:	mov	w0, w9
  40b4f4:	sxtw	x8, w0
  40b4f8:	cbz	x8, 40b520 <property_get_pool_path+0x88>
  40b4fc:	mov	w8, wzr
  40b500:	mov	w0, w8
  40b504:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b508:	add	x1, x1, #0x3da
  40b50c:	ldr	x2, [sp]
  40b510:	mov	w3, #0x21                  	// #33
  40b514:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b518:	add	x4, x4, #0x3de
  40b51c:	bl	404bd0 <log_assert_failed_realm@plt>
  40b520:	ldr	x8, [sp, #24]
  40b524:	cmp	x8, #0x0
  40b528:	cset	w9, ne  // ne = any
  40b52c:	mov	w10, #0x1                   	// #1
  40b530:	eor	w9, w9, #0x1
  40b534:	eor	w9, w9, w10
  40b538:	eor	w9, w9, w10
  40b53c:	and	w9, w9, #0x1
  40b540:	mov	w0, w9
  40b544:	sxtw	x8, w0
  40b548:	cbz	x8, 40b570 <property_get_pool_path+0xd8>
  40b54c:	mov	w8, wzr
  40b550:	mov	w0, w8
  40b554:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b558:	add	x1, x1, #0x457
  40b55c:	ldr	x2, [sp]
  40b560:	mov	w3, #0x21                  	// #33
  40b564:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b568:	add	x4, x4, #0x3de
  40b56c:	bl	404bd0 <log_assert_failed_realm@plt>
  40b570:	ldr	x0, [sp, #24]
  40b574:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b578:	add	x1, x1, #0x7ae
  40b57c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40b580:	add	x2, x2, #0x45d
  40b584:	bl	405120 <sd_bus_message_append@plt>
  40b588:	ldp	x29, x30, [sp, #64]
  40b58c:	add	sp, sp, #0x50
  40b590:	ret

000000000040b594 <property_get_pool_usage>:
  40b594:	sub	sp, sp, #0x90
  40b598:	stp	x29, x30, [sp, #128]
  40b59c:	add	x29, sp, #0x80
  40b5a0:	mov	w8, #0xffffffff            	// #-1
  40b5a4:	mov	x9, #0xffffffffffffffff    	// #-1
  40b5a8:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40b5ac:	add	x10, x10, #0xec5
  40b5b0:	add	x10, x10, #0x3
  40b5b4:	stur	x0, [x29, #-8]
  40b5b8:	stur	x1, [x29, #-16]
  40b5bc:	stur	x2, [x29, #-24]
  40b5c0:	stur	x3, [x29, #-32]
  40b5c4:	stur	x4, [x29, #-40]
  40b5c8:	stur	x5, [x29, #-48]
  40b5cc:	stur	x6, [x29, #-56]
  40b5d0:	stur	w8, [x29, #-60]
  40b5d4:	str	x9, [sp, #56]
  40b5d8:	str	x10, [sp, #16]
  40b5dc:	ldur	x8, [x29, #-8]
  40b5e0:	cmp	x8, #0x0
  40b5e4:	cset	w9, ne  // ne = any
  40b5e8:	mov	w10, #0x1                   	// #1
  40b5ec:	eor	w9, w9, #0x1
  40b5f0:	eor	w9, w9, w10
  40b5f4:	eor	w9, w9, w10
  40b5f8:	and	w9, w9, #0x1
  40b5fc:	mov	w0, w9
  40b600:	sxtw	x8, w0
  40b604:	cbz	x8, 40b62c <property_get_pool_usage+0x98>
  40b608:	mov	w8, wzr
  40b60c:	mov	w0, w8
  40b610:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b614:	add	x1, x1, #0x3da
  40b618:	ldr	x2, [sp, #16]
  40b61c:	mov	w3, #0x2f                  	// #47
  40b620:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b624:	add	x4, x4, #0x46f
  40b628:	bl	404bd0 <log_assert_failed_realm@plt>
  40b62c:	ldur	x8, [x29, #-40]
  40b630:	cmp	x8, #0x0
  40b634:	cset	w9, ne  // ne = any
  40b638:	mov	w10, #0x1                   	// #1
  40b63c:	eor	w9, w9, #0x1
  40b640:	eor	w9, w9, w10
  40b644:	eor	w9, w9, w10
  40b648:	and	w9, w9, #0x1
  40b64c:	mov	w0, w9
  40b650:	sxtw	x8, w0
  40b654:	cbz	x8, 40b67c <property_get_pool_usage+0xe8>
  40b658:	mov	w8, wzr
  40b65c:	mov	w0, w8
  40b660:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b664:	add	x1, x1, #0x457
  40b668:	ldr	x2, [sp, #16]
  40b66c:	mov	w3, #0x30                  	// #48
  40b670:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b674:	add	x4, x4, #0x46f
  40b678:	bl	404bd0 <log_assert_failed_realm@plt>
  40b67c:	adrp	x0, 41c000 <machine_hash_ops+0x13e8>
  40b680:	add	x0, x0, #0x45d
  40b684:	mov	w1, #0x4000                	// #16384
  40b688:	movk	w1, #0x8, lsl #16
  40b68c:	bl	405190 <open64@plt>
  40b690:	stur	w0, [x29, #-60]
  40b694:	ldur	w8, [x29, #-60]
  40b698:	cmp	w8, #0x0
  40b69c:	cset	w8, lt  // lt = tstop
  40b6a0:	tbnz	w8, #0, 40b6cc <property_get_pool_usage+0x138>
  40b6a4:	ldur	w0, [x29, #-60]
  40b6a8:	mov	x8, xzr
  40b6ac:	mov	x1, x8
  40b6b0:	add	x2, sp, #0x18
  40b6b4:	bl	4051a0 <btrfs_subvol_get_subtree_quota_fd@plt>
  40b6b8:	cmp	w0, #0x0
  40b6bc:	cset	w9, lt  // lt = tstop
  40b6c0:	tbnz	w9, #0, 40b6cc <property_get_pool_usage+0x138>
  40b6c4:	ldr	x8, [sp, #24]
  40b6c8:	str	x8, [sp, #56]
  40b6cc:	ldur	x0, [x29, #-40]
  40b6d0:	ldr	x2, [sp, #56]
  40b6d4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b6d8:	add	x1, x1, #0xb3d
  40b6dc:	bl	405120 <sd_bus_message_append@plt>
  40b6e0:	sub	x8, x29, #0x3c
  40b6e4:	str	w0, [sp, #12]
  40b6e8:	mov	x0, x8
  40b6ec:	bl	40f9fc <closep>
  40b6f0:	ldr	w0, [sp, #12]
  40b6f4:	ldp	x29, x30, [sp, #128]
  40b6f8:	add	sp, sp, #0x90
  40b6fc:	ret

000000000040b700 <property_get_pool_limit>:
  40b700:	sub	sp, sp, #0x90
  40b704:	stp	x29, x30, [sp, #128]
  40b708:	add	x29, sp, #0x80
  40b70c:	mov	w8, #0xffffffff            	// #-1
  40b710:	mov	x9, #0xffffffffffffffff    	// #-1
  40b714:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40b718:	add	x10, x10, #0xec5
  40b71c:	add	x10, x10, #0x3
  40b720:	stur	x0, [x29, #-8]
  40b724:	stur	x1, [x29, #-16]
  40b728:	stur	x2, [x29, #-24]
  40b72c:	stur	x3, [x29, #-32]
  40b730:	stur	x4, [x29, #-40]
  40b734:	stur	x5, [x29, #-48]
  40b738:	stur	x6, [x29, #-56]
  40b73c:	stur	w8, [x29, #-60]
  40b740:	str	x9, [sp, #56]
  40b744:	str	x10, [sp, #16]
  40b748:	ldur	x8, [x29, #-8]
  40b74c:	cmp	x8, #0x0
  40b750:	cset	w9, ne  // ne = any
  40b754:	mov	w10, #0x1                   	// #1
  40b758:	eor	w9, w9, #0x1
  40b75c:	eor	w9, w9, w10
  40b760:	eor	w9, w9, w10
  40b764:	and	w9, w9, #0x1
  40b768:	mov	w0, w9
  40b76c:	sxtw	x8, w0
  40b770:	cbz	x8, 40b798 <property_get_pool_limit+0x98>
  40b774:	mov	w8, wzr
  40b778:	mov	w0, w8
  40b77c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b780:	add	x1, x1, #0x3da
  40b784:	ldr	x2, [sp, #16]
  40b788:	mov	w3, #0x49                  	// #73
  40b78c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b790:	add	x4, x4, #0x4e9
  40b794:	bl	404bd0 <log_assert_failed_realm@plt>
  40b798:	ldur	x8, [x29, #-40]
  40b79c:	cmp	x8, #0x0
  40b7a0:	cset	w9, ne  // ne = any
  40b7a4:	mov	w10, #0x1                   	// #1
  40b7a8:	eor	w9, w9, #0x1
  40b7ac:	eor	w9, w9, w10
  40b7b0:	eor	w9, w9, w10
  40b7b4:	and	w9, w9, #0x1
  40b7b8:	mov	w0, w9
  40b7bc:	sxtw	x8, w0
  40b7c0:	cbz	x8, 40b7e8 <property_get_pool_limit+0xe8>
  40b7c4:	mov	w8, wzr
  40b7c8:	mov	w0, w8
  40b7cc:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b7d0:	add	x1, x1, #0x457
  40b7d4:	ldr	x2, [sp, #16]
  40b7d8:	mov	w3, #0x4a                  	// #74
  40b7dc:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b7e0:	add	x4, x4, #0x4e9
  40b7e4:	bl	404bd0 <log_assert_failed_realm@plt>
  40b7e8:	adrp	x0, 41c000 <machine_hash_ops+0x13e8>
  40b7ec:	add	x0, x0, #0x45d
  40b7f0:	mov	w1, #0x4000                	// #16384
  40b7f4:	movk	w1, #0x8, lsl #16
  40b7f8:	bl	405190 <open64@plt>
  40b7fc:	stur	w0, [x29, #-60]
  40b800:	ldur	w8, [x29, #-60]
  40b804:	cmp	w8, #0x0
  40b808:	cset	w8, lt  // lt = tstop
  40b80c:	tbnz	w8, #0, 40b838 <property_get_pool_limit+0x138>
  40b810:	ldur	w0, [x29, #-60]
  40b814:	mov	x8, xzr
  40b818:	mov	x1, x8
  40b81c:	add	x2, sp, #0x18
  40b820:	bl	4051a0 <btrfs_subvol_get_subtree_quota_fd@plt>
  40b824:	cmp	w0, #0x0
  40b828:	cset	w9, lt  // lt = tstop
  40b82c:	tbnz	w9, #0, 40b838 <property_get_pool_limit+0x138>
  40b830:	ldr	x8, [sp, #40]
  40b834:	str	x8, [sp, #56]
  40b838:	ldur	x0, [x29, #-40]
  40b83c:	ldr	x2, [sp, #56]
  40b840:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b844:	add	x1, x1, #0xb3d
  40b848:	bl	405120 <sd_bus_message_append@plt>
  40b84c:	sub	x8, x29, #0x3c
  40b850:	str	w0, [sp, #12]
  40b854:	mov	x0, x8
  40b858:	bl	40f9fc <closep>
  40b85c:	ldr	w0, [sp, #12]
  40b860:	ldp	x29, x30, [sp, #128]
  40b864:	add	sp, sp, #0x90
  40b868:	ret

000000000040b86c <method_get_machine>:
  40b86c:	sub	sp, sp, #0x60
  40b870:	stp	x29, x30, [sp, #80]
  40b874:	add	x29, sp, #0x50
  40b878:	mov	x8, xzr
  40b87c:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40b880:	add	x9, x9, #0xec5
  40b884:	add	x9, x9, #0x3
  40b888:	stur	x0, [x29, #-16]
  40b88c:	stur	x1, [x29, #-24]
  40b890:	stur	x2, [x29, #-32]
  40b894:	str	x8, [sp, #40]
  40b898:	ldur	x8, [x29, #-24]
  40b89c:	str	x8, [sp, #32]
  40b8a0:	str	x9, [sp]
  40b8a4:	ldur	x8, [x29, #-16]
  40b8a8:	cmp	x8, #0x0
  40b8ac:	cset	w9, ne  // ne = any
  40b8b0:	mov	w10, #0x1                   	// #1
  40b8b4:	eor	w9, w9, #0x1
  40b8b8:	eor	w9, w9, w10
  40b8bc:	eor	w9, w9, w10
  40b8c0:	and	w9, w9, #0x1
  40b8c4:	mov	w0, w9
  40b8c8:	sxtw	x8, w0
  40b8cc:	cbz	x8, 40b8f4 <method_get_machine+0x88>
  40b8d0:	mov	w8, wzr
  40b8d4:	mov	w0, w8
  40b8d8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b8dc:	add	x1, x1, #0xebd
  40b8e0:	ldr	x2, [sp]
  40b8e4:	mov	w3, #0x5e                  	// #94
  40b8e8:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b8ec:	add	x4, x4, #0x563
  40b8f0:	bl	404bd0 <log_assert_failed_realm@plt>
  40b8f4:	ldr	x8, [sp, #32]
  40b8f8:	cmp	x8, #0x0
  40b8fc:	cset	w9, ne  // ne = any
  40b900:	mov	w10, #0x1                   	// #1
  40b904:	eor	w9, w9, #0x1
  40b908:	eor	w9, w9, w10
  40b90c:	eor	w9, w9, w10
  40b910:	and	w9, w9, #0x1
  40b914:	mov	w0, w9
  40b918:	sxtw	x8, w0
  40b91c:	cbz	x8, 40b944 <method_get_machine+0xd8>
  40b920:	mov	w8, wzr
  40b924:	mov	w0, w8
  40b928:	adrp	x1, 41a000 <operation_new+0x40>
  40b92c:	add	x1, x1, #0xe18
  40b930:	ldr	x2, [sp]
  40b934:	mov	w3, #0x5f                  	// #95
  40b938:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40b93c:	add	x4, x4, #0x563
  40b940:	bl	404bd0 <log_assert_failed_realm@plt>
  40b944:	ldur	x0, [x29, #-16]
  40b948:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b94c:	add	x1, x1, #0x7ae
  40b950:	add	x2, sp, #0x10
  40b954:	bl	405170 <sd_bus_message_read@plt>
  40b958:	str	w0, [sp, #12]
  40b95c:	ldr	w8, [sp, #12]
  40b960:	cmp	w8, #0x0
  40b964:	cset	w8, ge  // ge = tcont
  40b968:	tbnz	w8, #0, 40b980 <method_get_machine+0x114>
  40b96c:	ldr	w8, [sp, #12]
  40b970:	stur	w8, [x29, #-4]
  40b974:	mov	w8, #0x1                   	// #1
  40b978:	str	w8, [sp, #8]
  40b97c:	b	40ba10 <method_get_machine+0x1a4>
  40b980:	ldr	x8, [sp, #32]
  40b984:	ldr	x0, [x8, #16]
  40b988:	ldr	x1, [sp, #16]
  40b98c:	bl	40e6ec <hashmap_get>
  40b990:	str	x0, [sp, #24]
  40b994:	ldr	x8, [sp, #24]
  40b998:	cbnz	x8, 40b9c8 <method_get_machine+0x15c>
  40b99c:	ldur	x0, [x29, #-32]
  40b9a0:	ldr	x3, [sp, #16]
  40b9a4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40b9a8:	add	x1, x1, #0x5a4
  40b9ac:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40b9b0:	add	x2, x2, #0x5cb
  40b9b4:	bl	4051b0 <sd_bus_error_setf@plt>
  40b9b8:	stur	w0, [x29, #-4]
  40b9bc:	mov	w8, #0x1                   	// #1
  40b9c0:	str	w8, [sp, #8]
  40b9c4:	b	40ba10 <method_get_machine+0x1a4>
  40b9c8:	ldr	x0, [sp, #24]
  40b9cc:	bl	417d3c <machine_bus_path>
  40b9d0:	str	x0, [sp, #40]
  40b9d4:	ldr	x8, [sp, #40]
  40b9d8:	cbnz	x8, 40b9f0 <method_get_machine+0x184>
  40b9dc:	mov	w8, #0xfffffff4            	// #-12
  40b9e0:	stur	w8, [x29, #-4]
  40b9e4:	mov	w8, #0x1                   	// #1
  40b9e8:	str	w8, [sp, #8]
  40b9ec:	b	40ba10 <method_get_machine+0x1a4>
  40b9f0:	ldur	x0, [x29, #-16]
  40b9f4:	ldr	x2, [sp, #40]
  40b9f8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40b9fc:	add	x1, x1, #0xb49
  40ba00:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40ba04:	stur	w0, [x29, #-4]
  40ba08:	mov	w8, #0x1                   	// #1
  40ba0c:	str	w8, [sp, #8]
  40ba10:	add	x0, sp, #0x28
  40ba14:	bl	40e940 <freep>
  40ba18:	ldur	w0, [x29, #-4]
  40ba1c:	ldp	x29, x30, [sp, #80]
  40ba20:	add	sp, sp, #0x60
  40ba24:	ret

000000000040ba28 <method_get_image>:
  40ba28:	sub	sp, sp, #0x60
  40ba2c:	stp	x29, x30, [sp, #80]
  40ba30:	add	x29, sp, #0x50
  40ba34:	mov	x8, xzr
  40ba38:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40ba3c:	add	x9, x9, #0xec5
  40ba40:	add	x9, x9, #0x3
  40ba44:	stur	x0, [x29, #-16]
  40ba48:	stur	x1, [x29, #-24]
  40ba4c:	stur	x2, [x29, #-32]
  40ba50:	str	x8, [sp, #40]
  40ba54:	ldur	x8, [x29, #-24]
  40ba58:	str	x8, [sp, #32]
  40ba5c:	str	x9, [sp, #8]
  40ba60:	ldur	x8, [x29, #-16]
  40ba64:	cmp	x8, #0x0
  40ba68:	cset	w9, ne  // ne = any
  40ba6c:	mov	w10, #0x1                   	// #1
  40ba70:	eor	w9, w9, #0x1
  40ba74:	eor	w9, w9, w10
  40ba78:	eor	w9, w9, w10
  40ba7c:	and	w9, w9, #0x1
  40ba80:	mov	w0, w9
  40ba84:	sxtw	x8, w0
  40ba88:	cbz	x8, 40bab0 <method_get_image+0x88>
  40ba8c:	mov	w8, wzr
  40ba90:	mov	w0, w8
  40ba94:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ba98:	add	x1, x1, #0xebd
  40ba9c:	ldr	x2, [sp, #8]
  40baa0:	mov	w3, #0x76                  	// #118
  40baa4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40baa8:	add	x4, x4, #0x5e1
  40baac:	bl	404bd0 <log_assert_failed_realm@plt>
  40bab0:	ldr	x8, [sp, #32]
  40bab4:	cmp	x8, #0x0
  40bab8:	cset	w9, ne  // ne = any
  40babc:	mov	w10, #0x1                   	// #1
  40bac0:	eor	w9, w9, #0x1
  40bac4:	eor	w9, w9, w10
  40bac8:	eor	w9, w9, w10
  40bacc:	and	w9, w9, #0x1
  40bad0:	mov	w0, w9
  40bad4:	sxtw	x8, w0
  40bad8:	cbz	x8, 40bb00 <method_get_image+0xd8>
  40badc:	mov	w8, wzr
  40bae0:	mov	w0, w8
  40bae4:	adrp	x1, 41a000 <operation_new+0x40>
  40bae8:	add	x1, x1, #0xe18
  40baec:	ldr	x2, [sp, #8]
  40baf0:	mov	w3, #0x77                  	// #119
  40baf4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40baf8:	add	x4, x4, #0x5e1
  40bafc:	bl	404bd0 <log_assert_failed_realm@plt>
  40bb00:	ldur	x0, [x29, #-16]
  40bb04:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40bb08:	add	x1, x1, #0x7ae
  40bb0c:	add	x2, sp, #0x18
  40bb10:	bl	405170 <sd_bus_message_read@plt>
  40bb14:	str	w0, [sp, #20]
  40bb18:	ldr	w8, [sp, #20]
  40bb1c:	cmp	w8, #0x0
  40bb20:	cset	w8, ge  // ge = tcont
  40bb24:	tbnz	w8, #0, 40bb3c <method_get_image+0x114>
  40bb28:	ldr	w8, [sp, #20]
  40bb2c:	stur	w8, [x29, #-4]
  40bb30:	mov	w8, #0x1                   	// #1
  40bb34:	str	w8, [sp, #16]
  40bb38:	b	40bc00 <method_get_image+0x1d8>
  40bb3c:	ldr	x1, [sp, #24]
  40bb40:	mov	w8, wzr
  40bb44:	mov	w0, w8
  40bb48:	mov	x9, xzr
  40bb4c:	mov	x2, x9
  40bb50:	bl	4051d0 <image_find@plt>
  40bb54:	str	w0, [sp, #20]
  40bb58:	ldr	w8, [sp, #20]
  40bb5c:	mov	w10, #0xfffffffe            	// #-2
  40bb60:	cmp	w8, w10
  40bb64:	b.ne	40bb94 <method_get_image+0x16c>  // b.any
  40bb68:	ldur	x0, [x29, #-32]
  40bb6c:	ldr	x3, [sp, #24]
  40bb70:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40bb74:	add	x1, x1, #0x620
  40bb78:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40bb7c:	add	x2, x2, #0x645
  40bb80:	bl	4051b0 <sd_bus_error_setf@plt>
  40bb84:	stur	w0, [x29, #-4]
  40bb88:	mov	w8, #0x1                   	// #1
  40bb8c:	str	w8, [sp, #16]
  40bb90:	b	40bc00 <method_get_image+0x1d8>
  40bb94:	ldr	w8, [sp, #20]
  40bb98:	cmp	w8, #0x0
  40bb9c:	cset	w8, ge  // ge = tcont
  40bba0:	tbnz	w8, #0, 40bbb8 <method_get_image+0x190>
  40bba4:	ldr	w8, [sp, #20]
  40bba8:	stur	w8, [x29, #-4]
  40bbac:	mov	w8, #0x1                   	// #1
  40bbb0:	str	w8, [sp, #16]
  40bbb4:	b	40bc00 <method_get_image+0x1d8>
  40bbb8:	ldr	x0, [sp, #24]
  40bbbc:	bl	419afc <image_bus_path>
  40bbc0:	str	x0, [sp, #40]
  40bbc4:	ldr	x8, [sp, #40]
  40bbc8:	cbnz	x8, 40bbe0 <method_get_image+0x1b8>
  40bbcc:	mov	w8, #0xfffffff4            	// #-12
  40bbd0:	stur	w8, [x29, #-4]
  40bbd4:	mov	w8, #0x1                   	// #1
  40bbd8:	str	w8, [sp, #16]
  40bbdc:	b	40bc00 <method_get_image+0x1d8>
  40bbe0:	ldur	x0, [x29, #-16]
  40bbe4:	ldr	x2, [sp, #40]
  40bbe8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40bbec:	add	x1, x1, #0xb49
  40bbf0:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40bbf4:	stur	w0, [x29, #-4]
  40bbf8:	mov	w8, #0x1                   	// #1
  40bbfc:	str	w8, [sp, #16]
  40bc00:	add	x0, sp, #0x28
  40bc04:	bl	40e940 <freep>
  40bc08:	ldur	w0, [x29, #-4]
  40bc0c:	ldp	x29, x30, [sp, #80]
  40bc10:	add	sp, sp, #0x60
  40bc14:	ret

000000000040bc18 <method_get_machine_by_pid>:
  40bc18:	sub	sp, sp, #0x70
  40bc1c:	stp	x29, x30, [sp, #96]
  40bc20:	add	x29, sp, #0x60
  40bc24:	mov	x8, xzr
  40bc28:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40bc2c:	add	x9, x9, #0xec5
  40bc30:	add	x9, x9, #0x3
  40bc34:	stur	x0, [x29, #-16]
  40bc38:	stur	x1, [x29, #-24]
  40bc3c:	stur	x2, [x29, #-32]
  40bc40:	stur	x8, [x29, #-40]
  40bc44:	ldur	x10, [x29, #-24]
  40bc48:	str	x10, [sp, #48]
  40bc4c:	str	x8, [sp, #40]
  40bc50:	str	x9, [sp, #8]
  40bc54:	ldur	x8, [x29, #-16]
  40bc58:	cmp	x8, #0x0
  40bc5c:	cset	w9, ne  // ne = any
  40bc60:	mov	w10, #0x1                   	// #1
  40bc64:	eor	w9, w9, #0x1
  40bc68:	eor	w9, w9, w10
  40bc6c:	eor	w9, w9, w10
  40bc70:	and	w9, w9, #0x1
  40bc74:	mov	w0, w9
  40bc78:	sxtw	x8, w0
  40bc7c:	cbz	x8, 40bca4 <method_get_machine_by_pid+0x8c>
  40bc80:	mov	w8, wzr
  40bc84:	mov	w0, w8
  40bc88:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40bc8c:	add	x1, x1, #0xebd
  40bc90:	ldr	x2, [sp, #8]
  40bc94:	mov	w3, #0x91                  	// #145
  40bc98:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40bc9c:	add	x4, x4, #0x659
  40bca0:	bl	404bd0 <log_assert_failed_realm@plt>
  40bca4:	ldr	x8, [sp, #48]
  40bca8:	cmp	x8, #0x0
  40bcac:	cset	w9, ne  // ne = any
  40bcb0:	mov	w10, #0x1                   	// #1
  40bcb4:	eor	w9, w9, #0x1
  40bcb8:	eor	w9, w9, w10
  40bcbc:	eor	w9, w9, w10
  40bcc0:	and	w9, w9, #0x1
  40bcc4:	mov	w0, w9
  40bcc8:	sxtw	x8, w0
  40bccc:	cbz	x8, 40bcf4 <method_get_machine_by_pid+0xdc>
  40bcd0:	mov	w8, wzr
  40bcd4:	mov	w0, w8
  40bcd8:	adrp	x1, 41a000 <operation_new+0x40>
  40bcdc:	add	x1, x1, #0xe18
  40bce0:	ldr	x2, [sp, #8]
  40bce4:	mov	w3, #0x92                  	// #146
  40bce8:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40bcec:	add	x4, x4, #0x659
  40bcf0:	bl	404bd0 <log_assert_failed_realm@plt>
  40bcf4:	ldur	x0, [x29, #-16]
  40bcf8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40bcfc:	add	x1, x1, #0xbe1
  40bd00:	add	x2, sp, #0x24
  40bd04:	bl	405170 <sd_bus_message_read@plt>
  40bd08:	str	w0, [sp, #32]
  40bd0c:	ldr	w8, [sp, #32]
  40bd10:	cmp	w8, #0x0
  40bd14:	cset	w8, ge  // ge = tcont
  40bd18:	tbnz	w8, #0, 40bd30 <method_get_machine_by_pid+0x118>
  40bd1c:	ldr	w8, [sp, #32]
  40bd20:	stur	w8, [x29, #-4]
  40bd24:	mov	w8, #0x1                   	// #1
  40bd28:	str	w8, [sp, #28]
  40bd2c:	b	40bea8 <method_get_machine_by_pid+0x290>
  40bd30:	ldr	w8, [sp, #36]
  40bd34:	cmp	w8, #0x0
  40bd38:	cset	w8, ge  // ge = tcont
  40bd3c:	tbnz	w8, #0, 40bd54 <method_get_machine_by_pid+0x13c>
  40bd40:	mov	w8, #0xffffffea            	// #-22
  40bd44:	stur	w8, [x29, #-4]
  40bd48:	mov	w8, #0x1                   	// #1
  40bd4c:	str	w8, [sp, #28]
  40bd50:	b	40bea8 <method_get_machine_by_pid+0x290>
  40bd54:	ldr	w8, [sp, #36]
  40bd58:	cbnz	w8, 40bdf4 <method_get_machine_by_pid+0x1dc>
  40bd5c:	add	x2, sp, #0x10
  40bd60:	mov	x8, xzr
  40bd64:	str	x8, [sp, #16]
  40bd68:	ldur	x0, [x29, #-16]
  40bd6c:	mov	x1, #0x1                   	// #1
  40bd70:	bl	4051e0 <sd_bus_query_sender_creds@plt>
  40bd74:	str	w0, [sp, #32]
  40bd78:	ldr	w9, [sp, #32]
  40bd7c:	cmp	w9, #0x0
  40bd80:	cset	w9, ge  // ge = tcont
  40bd84:	tbnz	w9, #0, 40bd9c <method_get_machine_by_pid+0x184>
  40bd88:	ldr	w8, [sp, #32]
  40bd8c:	stur	w8, [x29, #-4]
  40bd90:	mov	w8, #0x1                   	// #1
  40bd94:	str	w8, [sp, #28]
  40bd98:	b	40bdd4 <method_get_machine_by_pid+0x1bc>
  40bd9c:	ldr	x0, [sp, #16]
  40bda0:	add	x1, sp, #0x24
  40bda4:	bl	4051f0 <sd_bus_creds_get_pid@plt>
  40bda8:	str	w0, [sp, #32]
  40bdac:	ldr	w8, [sp, #32]
  40bdb0:	cmp	w8, #0x0
  40bdb4:	cset	w8, ge  // ge = tcont
  40bdb8:	tbnz	w8, #0, 40bdd0 <method_get_machine_by_pid+0x1b8>
  40bdbc:	ldr	w8, [sp, #32]
  40bdc0:	stur	w8, [x29, #-4]
  40bdc4:	mov	w8, #0x1                   	// #1
  40bdc8:	str	w8, [sp, #28]
  40bdcc:	b	40bdd4 <method_get_machine_by_pid+0x1bc>
  40bdd0:	str	wzr, [sp, #28]
  40bdd4:	add	x0, sp, #0x10
  40bdd8:	bl	40fa24 <sd_bus_creds_unrefp>
  40bddc:	ldr	w8, [sp, #28]
  40bde0:	cmp	w8, #0x0
  40bde4:	cset	w8, eq  // eq = none
  40bde8:	eor	w8, w8, #0x1
  40bdec:	tbnz	w8, #0, 40bea8 <method_get_machine_by_pid+0x290>
  40bdf0:	b	40bdf4 <method_get_machine_by_pid+0x1dc>
  40bdf4:	ldr	x0, [sp, #48]
  40bdf8:	ldr	w1, [sp, #36]
  40bdfc:	add	x2, sp, #0x28
  40be00:	bl	40f6e8 <manager_get_machine_by_pid>
  40be04:	str	w0, [sp, #32]
  40be08:	ldr	w8, [sp, #32]
  40be0c:	cmp	w8, #0x0
  40be10:	cset	w8, ge  // ge = tcont
  40be14:	tbnz	w8, #0, 40be2c <method_get_machine_by_pid+0x214>
  40be18:	ldr	w8, [sp, #32]
  40be1c:	stur	w8, [x29, #-4]
  40be20:	mov	w8, #0x1                   	// #1
  40be24:	str	w8, [sp, #28]
  40be28:	b	40bea8 <method_get_machine_by_pid+0x290>
  40be2c:	ldr	x8, [sp, #40]
  40be30:	cbnz	x8, 40be60 <method_get_machine_by_pid+0x248>
  40be34:	ldur	x0, [x29, #-32]
  40be38:	ldr	w3, [sp, #36]
  40be3c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40be40:	add	x1, x1, #0x6a1
  40be44:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40be48:	add	x2, x2, #0x6ca
  40be4c:	bl	4051b0 <sd_bus_error_setf@plt>
  40be50:	stur	w0, [x29, #-4]
  40be54:	mov	w8, #0x1                   	// #1
  40be58:	str	w8, [sp, #28]
  40be5c:	b	40bea8 <method_get_machine_by_pid+0x290>
  40be60:	ldr	x0, [sp, #40]
  40be64:	bl	417d3c <machine_bus_path>
  40be68:	stur	x0, [x29, #-40]
  40be6c:	ldur	x8, [x29, #-40]
  40be70:	cbnz	x8, 40be88 <method_get_machine_by_pid+0x270>
  40be74:	mov	w8, #0xfffffff4            	// #-12
  40be78:	stur	w8, [x29, #-4]
  40be7c:	mov	w8, #0x1                   	// #1
  40be80:	str	w8, [sp, #28]
  40be84:	b	40bea8 <method_get_machine_by_pid+0x290>
  40be88:	ldur	x0, [x29, #-16]
  40be8c:	ldur	x2, [x29, #-40]
  40be90:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40be94:	add	x1, x1, #0xb49
  40be98:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40be9c:	stur	w0, [x29, #-4]
  40bea0:	mov	w8, #0x1                   	// #1
  40bea4:	str	w8, [sp, #28]
  40bea8:	sub	x0, x29, #0x28
  40beac:	bl	40e940 <freep>
  40beb0:	ldur	w0, [x29, #-4]
  40beb4:	ldp	x29, x30, [sp, #96]
  40beb8:	add	sp, sp, #0x70
  40bebc:	ret

000000000040bec0 <method_list_machines>:
  40bec0:	sub	sp, sp, #0xa0
  40bec4:	stp	x29, x30, [sp, #144]
  40bec8:	add	x29, sp, #0x90
  40becc:	mov	x8, xzr
  40bed0:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40bed4:	add	x9, x9, #0xec5
  40bed8:	add	x9, x9, #0x3
  40bedc:	stur	x0, [x29, #-16]
  40bee0:	stur	x1, [x29, #-24]
  40bee4:	stur	x2, [x29, #-32]
  40bee8:	stur	x8, [x29, #-40]
  40beec:	ldur	x8, [x29, #-24]
  40bef0:	stur	x8, [x29, #-48]
  40bef4:	str	x9, [sp, #24]
  40bef8:	ldur	x8, [x29, #-16]
  40befc:	cmp	x8, #0x0
  40bf00:	cset	w9, ne  // ne = any
  40bf04:	mov	w10, #0x1                   	// #1
  40bf08:	eor	w9, w9, #0x1
  40bf0c:	eor	w9, w9, w10
  40bf10:	eor	w9, w9, w10
  40bf14:	and	w9, w9, #0x1
  40bf18:	mov	w0, w9
  40bf1c:	sxtw	x8, w0
  40bf20:	cbz	x8, 40bf48 <method_list_machines+0x88>
  40bf24:	mov	w8, wzr
  40bf28:	mov	w0, w8
  40bf2c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40bf30:	add	x1, x1, #0xebd
  40bf34:	ldr	x2, [sp, #24]
  40bf38:	mov	w3, #0xbd                  	// #189
  40bf3c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40bf40:	add	x4, x4, #0x6f6
  40bf44:	bl	404bd0 <log_assert_failed_realm@plt>
  40bf48:	ldur	x8, [x29, #-48]
  40bf4c:	cmp	x8, #0x0
  40bf50:	cset	w9, ne  // ne = any
  40bf54:	mov	w10, #0x1                   	// #1
  40bf58:	eor	w9, w9, #0x1
  40bf5c:	eor	w9, w9, w10
  40bf60:	eor	w9, w9, w10
  40bf64:	and	w9, w9, #0x1
  40bf68:	mov	w0, w9
  40bf6c:	sxtw	x8, w0
  40bf70:	cbz	x8, 40bf98 <method_list_machines+0xd8>
  40bf74:	mov	w8, wzr
  40bf78:	mov	w0, w8
  40bf7c:	adrp	x1, 41a000 <operation_new+0x40>
  40bf80:	add	x1, x1, #0xe18
  40bf84:	ldr	x2, [sp, #24]
  40bf88:	mov	w3, #0xbe                  	// #190
  40bf8c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40bf90:	add	x4, x4, #0x6f6
  40bf94:	bl	404bd0 <log_assert_failed_realm@plt>
  40bf98:	ldur	x0, [x29, #-16]
  40bf9c:	sub	x1, x29, #0x28
  40bfa0:	bl	405200 <sd_bus_message_new_method_return@plt>
  40bfa4:	str	w0, [sp, #60]
  40bfa8:	ldr	w8, [sp, #60]
  40bfac:	cmp	w8, #0x0
  40bfb0:	cset	w8, ge  // ge = tcont
  40bfb4:	tbnz	w8, #0, 40bfd4 <method_list_machines+0x114>
  40bfb8:	ldur	x0, [x29, #-32]
  40bfbc:	ldr	w1, [sp, #60]
  40bfc0:	bl	405210 <sd_bus_error_set_errno@plt>
  40bfc4:	stur	w0, [x29, #-4]
  40bfc8:	mov	w8, #0x1                   	// #1
  40bfcc:	str	w8, [sp, #56]
  40bfd0:	b	40c18c <method_list_machines+0x2cc>
  40bfd4:	ldur	x0, [x29, #-40]
  40bfd8:	mov	w1, #0x61                  	// #97
  40bfdc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40bfe0:	add	x2, x2, #0x739
  40bfe4:	bl	405130 <sd_bus_message_open_container@plt>
  40bfe8:	str	w0, [sp, #60]
  40bfec:	ldr	w8, [sp, #60]
  40bff0:	cmp	w8, #0x0
  40bff4:	cset	w8, ge  // ge = tcont
  40bff8:	tbnz	w8, #0, 40c018 <method_list_machines+0x158>
  40bffc:	ldur	x0, [x29, #-32]
  40c000:	ldr	w1, [sp, #60]
  40c004:	bl	405210 <sd_bus_error_set_errno@plt>
  40c008:	stur	w0, [x29, #-4]
  40c00c:	mov	w8, #0x1                   	// #1
  40c010:	str	w8, [sp, #56]
  40c014:	b	40c18c <method_list_machines+0x2cc>
  40c018:	add	x8, sp, #0x28
  40c01c:	mov	w9, #0xfffffffe            	// #-2
  40c020:	str	w9, [sp, #40]
  40c024:	mov	x10, xzr
  40c028:	str	x10, [x8, #8]
  40c02c:	ldur	q0, [sp, #40]
  40c030:	str	q0, [sp, #64]
  40c034:	ldur	x8, [x29, #-48]
  40c038:	ldr	x0, [x8, #16]
  40c03c:	add	x1, sp, #0x40
  40c040:	sub	x2, x29, #0x38
  40c044:	mov	x8, xzr
  40c048:	mov	x3, x8
  40c04c:	bl	40ed8c <hashmap_iterate>
  40c050:	tbnz	w0, #0, 40c058 <method_list_machines+0x198>
  40c054:	b	40c134 <method_list_machines+0x274>
  40c058:	mov	x8, xzr
  40c05c:	str	x8, [sp, #32]
  40c060:	ldur	x0, [x29, #-56]
  40c064:	bl	417d3c <machine_bus_path>
  40c068:	str	x0, [sp, #32]
  40c06c:	ldr	x8, [sp, #32]
  40c070:	cbnz	x8, 40c088 <method_list_machines+0x1c8>
  40c074:	mov	w8, #0xfffffff4            	// #-12
  40c078:	stur	w8, [x29, #-4]
  40c07c:	mov	w8, #0x1                   	// #1
  40c080:	str	w8, [sp, #56]
  40c084:	b	40c110 <method_list_machines+0x250>
  40c088:	ldur	x0, [x29, #-40]
  40c08c:	ldur	x8, [x29, #-56]
  40c090:	ldr	x2, [x8, #8]
  40c094:	ldur	x8, [x29, #-56]
  40c098:	ldr	w9, [x8, #32]
  40c09c:	str	x0, [sp, #16]
  40c0a0:	mov	w0, w9
  40c0a4:	str	x2, [sp, #8]
  40c0a8:	bl	408c2c <machine_class_to_string>
  40c0ac:	bl	40fa58 <strempty>
  40c0b0:	ldur	x8, [x29, #-56]
  40c0b4:	ldr	x4, [x8, #48]
  40c0b8:	ldr	x5, [sp, #32]
  40c0bc:	ldr	x8, [sp, #16]
  40c0c0:	str	x0, [sp]
  40c0c4:	mov	x0, x8
  40c0c8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40c0cc:	add	x1, x1, #0x739
  40c0d0:	ldr	x2, [sp, #8]
  40c0d4:	ldr	x3, [sp]
  40c0d8:	bl	405120 <sd_bus_message_append@plt>
  40c0dc:	str	w0, [sp, #60]
  40c0e0:	ldr	w9, [sp, #60]
  40c0e4:	cmp	w9, #0x0
  40c0e8:	cset	w9, ge  // ge = tcont
  40c0ec:	tbnz	w9, #0, 40c10c <method_list_machines+0x24c>
  40c0f0:	ldur	x0, [x29, #-32]
  40c0f4:	ldr	w1, [sp, #60]
  40c0f8:	bl	405210 <sd_bus_error_set_errno@plt>
  40c0fc:	stur	w0, [x29, #-4]
  40c100:	mov	w8, #0x1                   	// #1
  40c104:	str	w8, [sp, #56]
  40c108:	b	40c110 <method_list_machines+0x250>
  40c10c:	str	wzr, [sp, #56]
  40c110:	add	x0, sp, #0x20
  40c114:	bl	40e940 <freep>
  40c118:	ldr	w8, [sp, #56]
  40c11c:	cmp	w8, #0x0
  40c120:	cset	w8, eq  // eq = none
  40c124:	eor	w8, w8, #0x1
  40c128:	tbnz	w8, #0, 40c18c <method_list_machines+0x2cc>
  40c12c:	b	40c130 <method_list_machines+0x270>
  40c130:	b	40c034 <method_list_machines+0x174>
  40c134:	ldur	x0, [x29, #-40]
  40c138:	bl	405150 <sd_bus_message_close_container@plt>
  40c13c:	str	w0, [sp, #60]
  40c140:	ldr	w8, [sp, #60]
  40c144:	cmp	w8, #0x0
  40c148:	cset	w8, ge  // ge = tcont
  40c14c:	tbnz	w8, #0, 40c16c <method_list_machines+0x2ac>
  40c150:	ldur	x0, [x29, #-32]
  40c154:	ldr	w1, [sp, #60]
  40c158:	bl	405210 <sd_bus_error_set_errno@plt>
  40c15c:	stur	w0, [x29, #-4]
  40c160:	mov	w8, #0x1                   	// #1
  40c164:	str	w8, [sp, #56]
  40c168:	b	40c18c <method_list_machines+0x2cc>
  40c16c:	ldur	x1, [x29, #-40]
  40c170:	mov	x8, xzr
  40c174:	mov	x0, x8
  40c178:	mov	x2, x8
  40c17c:	bl	405220 <sd_bus_send@plt>
  40c180:	stur	w0, [x29, #-4]
  40c184:	mov	w9, #0x1                   	// #1
  40c188:	str	w9, [sp, #56]
  40c18c:	sub	x0, x29, #0x28
  40c190:	bl	40f130 <sd_bus_message_unrefp>
  40c194:	ldur	w0, [x29, #-4]
  40c198:	ldp	x29, x30, [sp, #144]
  40c19c:	add	sp, sp, #0xa0
  40c1a0:	ret

000000000040c1a4 <method_list_images>:
  40c1a4:	sub	sp, sp, #0xb0
  40c1a8:	stp	x29, x30, [sp, #160]
  40c1ac:	add	x29, sp, #0xa0
  40c1b0:	mov	x8, xzr
  40c1b4:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40c1b8:	add	x9, x9, #0xec5
  40c1bc:	add	x9, x9, #0x3
  40c1c0:	stur	x0, [x29, #-16]
  40c1c4:	stur	x1, [x29, #-24]
  40c1c8:	stur	x2, [x29, #-32]
  40c1cc:	stur	x8, [x29, #-40]
  40c1d0:	stur	x8, [x29, #-48]
  40c1d4:	ldur	x8, [x29, #-24]
  40c1d8:	stur	x8, [x29, #-56]
  40c1dc:	str	x9, [sp, #40]
  40c1e0:	ldur	x8, [x29, #-16]
  40c1e4:	cmp	x8, #0x0
  40c1e8:	cset	w9, ne  // ne = any
  40c1ec:	mov	w10, #0x1                   	// #1
  40c1f0:	eor	w9, w9, #0x1
  40c1f4:	eor	w9, w9, w10
  40c1f8:	eor	w9, w9, w10
  40c1fc:	and	w9, w9, #0x1
  40c200:	mov	w0, w9
  40c204:	sxtw	x8, w0
  40c208:	cbz	x8, 40c230 <method_list_images+0x8c>
  40c20c:	mov	w8, wzr
  40c210:	mov	w0, w8
  40c214:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40c218:	add	x1, x1, #0xebd
  40c21c:	ldr	x2, [sp, #40]
  40c220:	mov	w3, #0x1de                 	// #478
  40c224:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40c228:	add	x4, x4, #0x740
  40c22c:	bl	404bd0 <log_assert_failed_realm@plt>
  40c230:	ldur	x8, [x29, #-56]
  40c234:	cmp	x8, #0x0
  40c238:	cset	w9, ne  // ne = any
  40c23c:	mov	w10, #0x1                   	// #1
  40c240:	eor	w9, w9, #0x1
  40c244:	eor	w9, w9, w10
  40c248:	eor	w9, w9, w10
  40c24c:	and	w9, w9, #0x1
  40c250:	mov	w0, w9
  40c254:	sxtw	x8, w0
  40c258:	cbz	x8, 40c280 <method_list_images+0xdc>
  40c25c:	mov	w8, wzr
  40c260:	mov	w0, w8
  40c264:	adrp	x1, 41a000 <operation_new+0x40>
  40c268:	add	x1, x1, #0xe18
  40c26c:	ldr	x2, [sp, #40]
  40c270:	mov	w3, #0x1df                 	// #479
  40c274:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40c278:	add	x4, x4, #0x740
  40c27c:	bl	404bd0 <log_assert_failed_realm@plt>
  40c280:	adrp	x0, 43f000 <machine_vtable+0x4b8>
  40c284:	ldr	x0, [x0, #2048]
  40c288:	bl	404c10 <internal_hashmap_new@plt>
  40c28c:	stur	x0, [x29, #-48]
  40c290:	ldur	x8, [x29, #-48]
  40c294:	cbnz	x8, 40c2ac <method_list_images+0x108>
  40c298:	mov	w8, #0xfffffff4            	// #-12
  40c29c:	stur	w8, [x29, #-4]
  40c2a0:	mov	w8, #0x1                   	// #1
  40c2a4:	str	w8, [sp, #72]
  40c2a8:	b	40c4d8 <method_list_images+0x334>
  40c2ac:	ldur	x1, [x29, #-48]
  40c2b0:	mov	w8, wzr
  40c2b4:	mov	w0, w8
  40c2b8:	bl	405230 <image_discover@plt>
  40c2bc:	str	w0, [sp, #76]
  40c2c0:	ldr	w8, [sp, #76]
  40c2c4:	cmp	w8, #0x0
  40c2c8:	cset	w8, ge  // ge = tcont
  40c2cc:	tbnz	w8, #0, 40c2e4 <method_list_images+0x140>
  40c2d0:	ldr	w8, [sp, #76]
  40c2d4:	stur	w8, [x29, #-4]
  40c2d8:	mov	w8, #0x1                   	// #1
  40c2dc:	str	w8, [sp, #72]
  40c2e0:	b	40c4d8 <method_list_images+0x334>
  40c2e4:	ldur	x0, [x29, #-16]
  40c2e8:	sub	x1, x29, #0x28
  40c2ec:	bl	405200 <sd_bus_message_new_method_return@plt>
  40c2f0:	str	w0, [sp, #76]
  40c2f4:	ldr	w8, [sp, #76]
  40c2f8:	cmp	w8, #0x0
  40c2fc:	cset	w8, ge  // ge = tcont
  40c300:	tbnz	w8, #0, 40c318 <method_list_images+0x174>
  40c304:	ldr	w8, [sp, #76]
  40c308:	stur	w8, [x29, #-4]
  40c30c:	mov	w8, #0x1                   	// #1
  40c310:	str	w8, [sp, #72]
  40c314:	b	40c4d8 <method_list_images+0x334>
  40c318:	ldur	x0, [x29, #-40]
  40c31c:	mov	w1, #0x61                  	// #97
  40c320:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40c324:	add	x2, x2, #0x781
  40c328:	bl	405130 <sd_bus_message_open_container@plt>
  40c32c:	str	w0, [sp, #76]
  40c330:	ldr	w8, [sp, #76]
  40c334:	cmp	w8, #0x0
  40c338:	cset	w8, ge  // ge = tcont
  40c33c:	tbnz	w8, #0, 40c354 <method_list_images+0x1b0>
  40c340:	ldr	w8, [sp, #76]
  40c344:	stur	w8, [x29, #-4]
  40c348:	mov	w8, #0x1                   	// #1
  40c34c:	str	w8, [sp, #72]
  40c350:	b	40c4d8 <method_list_images+0x334>
  40c354:	add	x8, sp, #0x38
  40c358:	mov	w9, #0xfffffffe            	// #-2
  40c35c:	str	w9, [sp, #56]
  40c360:	mov	x10, xzr
  40c364:	str	x10, [x8, #8]
  40c368:	ldur	q0, [sp, #56]
  40c36c:	str	q0, [sp, #80]
  40c370:	ldur	x0, [x29, #-48]
  40c374:	add	x1, sp, #0x50
  40c378:	sub	x2, x29, #0x40
  40c37c:	mov	x8, xzr
  40c380:	mov	x3, x8
  40c384:	bl	40ed8c <hashmap_iterate>
  40c388:	tbnz	w0, #0, 40c390 <method_list_images+0x1ec>
  40c38c:	b	40c488 <method_list_images+0x2e4>
  40c390:	mov	x8, xzr
  40c394:	str	x8, [sp, #48]
  40c398:	ldur	x8, [x29, #-64]
  40c39c:	ldr	x0, [x8, #8]
  40c3a0:	bl	419afc <image_bus_path>
  40c3a4:	str	x0, [sp, #48]
  40c3a8:	ldr	x8, [sp, #48]
  40c3ac:	cbnz	x8, 40c3c4 <method_list_images+0x220>
  40c3b0:	mov	w8, #0xfffffff4            	// #-12
  40c3b4:	stur	w8, [x29, #-4]
  40c3b8:	mov	w8, #0x1                   	// #1
  40c3bc:	str	w8, [sp, #72]
  40c3c0:	b	40c464 <method_list_images+0x2c0>
  40c3c4:	ldur	x0, [x29, #-40]
  40c3c8:	ldur	x8, [x29, #-64]
  40c3cc:	ldr	x2, [x8, #8]
  40c3d0:	ldur	x8, [x29, #-64]
  40c3d4:	ldr	w9, [x8, #4]
  40c3d8:	str	x0, [sp, #32]
  40c3dc:	mov	w0, w9
  40c3e0:	str	x2, [sp, #24]
  40c3e4:	bl	405240 <image_type_to_string@plt>
  40c3e8:	ldur	x8, [x29, #-64]
  40c3ec:	ldrb	w9, [x8, #24]
  40c3f0:	and	w4, w9, #0x1
  40c3f4:	ldur	x8, [x29, #-64]
  40c3f8:	ldr	x5, [x8, #32]
  40c3fc:	ldur	x8, [x29, #-64]
  40c400:	ldr	x6, [x8, #40]
  40c404:	ldur	x8, [x29, #-64]
  40c408:	ldr	x7, [x8, #48]
  40c40c:	ldr	x8, [sp, #48]
  40c410:	ldr	x10, [sp, #32]
  40c414:	str	x0, [sp, #16]
  40c418:	mov	x0, x10
  40c41c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40c420:	add	x1, x1, #0x781
  40c424:	ldr	x2, [sp, #24]
  40c428:	ldr	x3, [sp, #16]
  40c42c:	mov	x11, sp
  40c430:	str	x8, [x11]
  40c434:	bl	405120 <sd_bus_message_append@plt>
  40c438:	str	w0, [sp, #76]
  40c43c:	ldr	w9, [sp, #76]
  40c440:	cmp	w9, #0x0
  40c444:	cset	w9, ge  // ge = tcont
  40c448:	tbnz	w9, #0, 40c460 <method_list_images+0x2bc>
  40c44c:	ldr	w8, [sp, #76]
  40c450:	stur	w8, [x29, #-4]
  40c454:	mov	w8, #0x1                   	// #1
  40c458:	str	w8, [sp, #72]
  40c45c:	b	40c464 <method_list_images+0x2c0>
  40c460:	str	wzr, [sp, #72]
  40c464:	add	x0, sp, #0x30
  40c468:	bl	40e940 <freep>
  40c46c:	ldr	w8, [sp, #72]
  40c470:	cmp	w8, #0x0
  40c474:	cset	w8, eq  // eq = none
  40c478:	eor	w8, w8, #0x1
  40c47c:	tbnz	w8, #0, 40c4d8 <method_list_images+0x334>
  40c480:	b	40c484 <method_list_images+0x2e0>
  40c484:	b	40c370 <method_list_images+0x1cc>
  40c488:	ldur	x0, [x29, #-40]
  40c48c:	bl	405150 <sd_bus_message_close_container@plt>
  40c490:	str	w0, [sp, #76]
  40c494:	ldr	w8, [sp, #76]
  40c498:	cmp	w8, #0x0
  40c49c:	cset	w8, ge  // ge = tcont
  40c4a0:	tbnz	w8, #0, 40c4b8 <method_list_images+0x314>
  40c4a4:	ldr	w8, [sp, #76]
  40c4a8:	stur	w8, [x29, #-4]
  40c4ac:	mov	w8, #0x1                   	// #1
  40c4b0:	str	w8, [sp, #72]
  40c4b4:	b	40c4d8 <method_list_images+0x334>
  40c4b8:	ldur	x1, [x29, #-40]
  40c4bc:	mov	x8, xzr
  40c4c0:	mov	x0, x8
  40c4c4:	mov	x2, x8
  40c4c8:	bl	405220 <sd_bus_send@plt>
  40c4cc:	stur	w0, [x29, #-4]
  40c4d0:	mov	w9, #0x1                   	// #1
  40c4d4:	str	w9, [sp, #72]
  40c4d8:	sub	x0, x29, #0x30
  40c4dc:	bl	40fa94 <hashmap_freep>
  40c4e0:	sub	x0, x29, #0x28
  40c4e4:	bl	40f130 <sd_bus_message_unrefp>
  40c4e8:	ldur	w0, [x29, #-4]
  40c4ec:	ldp	x29, x30, [sp, #160]
  40c4f0:	add	sp, sp, #0xb0
  40c4f4:	ret

000000000040c4f8 <method_create_machine>:
  40c4f8:	sub	sp, sp, #0x30
  40c4fc:	stp	x29, x30, [sp, #32]
  40c500:	add	x29, sp, #0x20
  40c504:	stur	x0, [x29, #-8]
  40c508:	str	x1, [sp, #16]
  40c50c:	str	x2, [sp, #8]
  40c510:	ldur	x0, [x29, #-8]
  40c514:	ldr	x2, [sp, #16]
  40c518:	ldr	x3, [sp, #8]
  40c51c:	mov	w8, wzr
  40c520:	and	w1, w8, #0x1
  40c524:	bl	40faf8 <method_create_machine_internal>
  40c528:	ldp	x29, x30, [sp, #32]
  40c52c:	add	sp, sp, #0x30
  40c530:	ret

000000000040c534 <method_create_machine_with_network>:
  40c534:	sub	sp, sp, #0x30
  40c538:	stp	x29, x30, [sp, #32]
  40c53c:	add	x29, sp, #0x20
  40c540:	stur	x0, [x29, #-8]
  40c544:	str	x1, [sp, #16]
  40c548:	str	x2, [sp, #8]
  40c54c:	ldur	x0, [x29, #-8]
  40c550:	ldr	x2, [sp, #16]
  40c554:	ldr	x3, [sp, #8]
  40c558:	mov	w8, #0x1                   	// #1
  40c55c:	and	w1, w8, #0x1
  40c560:	bl	40faf8 <method_create_machine_internal>
  40c564:	ldp	x29, x30, [sp, #32]
  40c568:	add	sp, sp, #0x30
  40c56c:	ret

000000000040c570 <method_register_machine>:
  40c570:	sub	sp, sp, #0x30
  40c574:	stp	x29, x30, [sp, #32]
  40c578:	add	x29, sp, #0x20
  40c57c:	stur	x0, [x29, #-8]
  40c580:	str	x1, [sp, #16]
  40c584:	str	x2, [sp, #8]
  40c588:	ldur	x0, [x29, #-8]
  40c58c:	ldr	x2, [sp, #16]
  40c590:	ldr	x3, [sp, #8]
  40c594:	mov	w8, wzr
  40c598:	and	w1, w8, #0x1
  40c59c:	bl	410324 <method_register_machine_internal>
  40c5a0:	ldp	x29, x30, [sp, #32]
  40c5a4:	add	sp, sp, #0x30
  40c5a8:	ret

000000000040c5ac <method_register_machine_with_network>:
  40c5ac:	sub	sp, sp, #0x30
  40c5b0:	stp	x29, x30, [sp, #32]
  40c5b4:	add	x29, sp, #0x20
  40c5b8:	stur	x0, [x29, #-8]
  40c5bc:	str	x1, [sp, #16]
  40c5c0:	str	x2, [sp, #8]
  40c5c4:	ldur	x0, [x29, #-8]
  40c5c8:	ldr	x2, [sp, #16]
  40c5cc:	ldr	x3, [sp, #8]
  40c5d0:	mov	w8, #0x1                   	// #1
  40c5d4:	and	w1, w8, #0x1
  40c5d8:	bl	410324 <method_register_machine_internal>
  40c5dc:	ldp	x29, x30, [sp, #32]
  40c5e0:	add	sp, sp, #0x30
  40c5e4:	ret

000000000040c5e8 <method_unregister_machine>:
  40c5e8:	sub	sp, sp, #0x30
  40c5ec:	stp	x29, x30, [sp, #32]
  40c5f0:	add	x29, sp, #0x20
  40c5f4:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c5f8:	ldr	x3, [x3, #2056]
  40c5fc:	stur	x0, [x29, #-8]
  40c600:	str	x1, [sp, #16]
  40c604:	str	x2, [sp, #8]
  40c608:	ldur	x0, [x29, #-8]
  40c60c:	ldr	x1, [sp, #16]
  40c610:	ldr	x2, [sp, #8]
  40c614:	bl	41053c <redirect_method_to_machine>
  40c618:	ldp	x29, x30, [sp, #32]
  40c61c:	add	sp, sp, #0x30
  40c620:	ret

000000000040c624 <method_terminate_machine>:
  40c624:	sub	sp, sp, #0x30
  40c628:	stp	x29, x30, [sp, #32]
  40c62c:	add	x29, sp, #0x20
  40c630:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c634:	ldr	x3, [x3, #2064]
  40c638:	stur	x0, [x29, #-8]
  40c63c:	str	x1, [sp, #16]
  40c640:	str	x2, [sp, #8]
  40c644:	ldur	x0, [x29, #-8]
  40c648:	ldr	x1, [sp, #16]
  40c64c:	ldr	x2, [sp, #8]
  40c650:	bl	41053c <redirect_method_to_machine>
  40c654:	ldp	x29, x30, [sp, #32]
  40c658:	add	sp, sp, #0x30
  40c65c:	ret

000000000040c660 <method_kill_machine>:
  40c660:	sub	sp, sp, #0x30
  40c664:	stp	x29, x30, [sp, #32]
  40c668:	add	x29, sp, #0x20
  40c66c:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c670:	ldr	x3, [x3, #2072]
  40c674:	stur	x0, [x29, #-8]
  40c678:	str	x1, [sp, #16]
  40c67c:	str	x2, [sp, #8]
  40c680:	ldur	x0, [x29, #-8]
  40c684:	ldr	x1, [sp, #16]
  40c688:	ldr	x2, [sp, #8]
  40c68c:	bl	41053c <redirect_method_to_machine>
  40c690:	ldp	x29, x30, [sp, #32]
  40c694:	add	sp, sp, #0x30
  40c698:	ret

000000000040c69c <method_get_machine_addresses>:
  40c69c:	sub	sp, sp, #0x30
  40c6a0:	stp	x29, x30, [sp, #32]
  40c6a4:	add	x29, sp, #0x20
  40c6a8:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c6ac:	ldr	x3, [x3, #2080]
  40c6b0:	stur	x0, [x29, #-8]
  40c6b4:	str	x1, [sp, #16]
  40c6b8:	str	x2, [sp, #8]
  40c6bc:	ldur	x0, [x29, #-8]
  40c6c0:	ldr	x1, [sp, #16]
  40c6c4:	ldr	x2, [sp, #8]
  40c6c8:	bl	41053c <redirect_method_to_machine>
  40c6cc:	ldp	x29, x30, [sp, #32]
  40c6d0:	add	sp, sp, #0x30
  40c6d4:	ret

000000000040c6d8 <method_get_machine_os_release>:
  40c6d8:	sub	sp, sp, #0x30
  40c6dc:	stp	x29, x30, [sp, #32]
  40c6e0:	add	x29, sp, #0x20
  40c6e4:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c6e8:	ldr	x3, [x3, #2088]
  40c6ec:	stur	x0, [x29, #-8]
  40c6f0:	str	x1, [sp, #16]
  40c6f4:	str	x2, [sp, #8]
  40c6f8:	ldur	x0, [x29, #-8]
  40c6fc:	ldr	x1, [sp, #16]
  40c700:	ldr	x2, [sp, #8]
  40c704:	bl	41053c <redirect_method_to_machine>
  40c708:	ldp	x29, x30, [sp, #32]
  40c70c:	add	sp, sp, #0x30
  40c710:	ret

000000000040c714 <method_open_machine_pty>:
  40c714:	sub	sp, sp, #0x30
  40c718:	stp	x29, x30, [sp, #32]
  40c71c:	add	x29, sp, #0x20
  40c720:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c724:	ldr	x3, [x3, #2096]
  40c728:	stur	x0, [x29, #-8]
  40c72c:	str	x1, [sp, #16]
  40c730:	str	x2, [sp, #8]
  40c734:	ldur	x0, [x29, #-8]
  40c738:	ldr	x1, [sp, #16]
  40c73c:	ldr	x2, [sp, #8]
  40c740:	bl	41053c <redirect_method_to_machine>
  40c744:	ldp	x29, x30, [sp, #32]
  40c748:	add	sp, sp, #0x30
  40c74c:	ret

000000000040c750 <method_open_machine_login>:
  40c750:	sub	sp, sp, #0x30
  40c754:	stp	x29, x30, [sp, #32]
  40c758:	add	x29, sp, #0x20
  40c75c:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c760:	ldr	x3, [x3, #2104]
  40c764:	stur	x0, [x29, #-8]
  40c768:	str	x1, [sp, #16]
  40c76c:	str	x2, [sp, #8]
  40c770:	ldur	x0, [x29, #-8]
  40c774:	ldr	x1, [sp, #16]
  40c778:	ldr	x2, [sp, #8]
  40c77c:	bl	41053c <redirect_method_to_machine>
  40c780:	ldp	x29, x30, [sp, #32]
  40c784:	add	sp, sp, #0x30
  40c788:	ret

000000000040c78c <method_open_machine_shell>:
  40c78c:	sub	sp, sp, #0x30
  40c790:	stp	x29, x30, [sp, #32]
  40c794:	add	x29, sp, #0x20
  40c798:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c79c:	ldr	x3, [x3, #2112]
  40c7a0:	stur	x0, [x29, #-8]
  40c7a4:	str	x1, [sp, #16]
  40c7a8:	str	x2, [sp, #8]
  40c7ac:	ldur	x0, [x29, #-8]
  40c7b0:	ldr	x1, [sp, #16]
  40c7b4:	ldr	x2, [sp, #8]
  40c7b8:	bl	41053c <redirect_method_to_machine>
  40c7bc:	ldp	x29, x30, [sp, #32]
  40c7c0:	add	sp, sp, #0x30
  40c7c4:	ret

000000000040c7c8 <method_bind_mount_machine>:
  40c7c8:	sub	sp, sp, #0x30
  40c7cc:	stp	x29, x30, [sp, #32]
  40c7d0:	add	x29, sp, #0x20
  40c7d4:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c7d8:	ldr	x3, [x3, #2120]
  40c7dc:	stur	x0, [x29, #-8]
  40c7e0:	str	x1, [sp, #16]
  40c7e4:	str	x2, [sp, #8]
  40c7e8:	ldur	x0, [x29, #-8]
  40c7ec:	ldr	x1, [sp, #16]
  40c7f0:	ldr	x2, [sp, #8]
  40c7f4:	bl	41053c <redirect_method_to_machine>
  40c7f8:	ldp	x29, x30, [sp, #32]
  40c7fc:	add	sp, sp, #0x30
  40c800:	ret

000000000040c804 <method_copy_machine>:
  40c804:	sub	sp, sp, #0x30
  40c808:	stp	x29, x30, [sp, #32]
  40c80c:	add	x29, sp, #0x20
  40c810:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c814:	ldr	x3, [x3, #2128]
  40c818:	stur	x0, [x29, #-8]
  40c81c:	str	x1, [sp, #16]
  40c820:	str	x2, [sp, #8]
  40c824:	ldur	x0, [x29, #-8]
  40c828:	ldr	x1, [sp, #16]
  40c82c:	ldr	x2, [sp, #8]
  40c830:	bl	41053c <redirect_method_to_machine>
  40c834:	ldp	x29, x30, [sp, #32]
  40c838:	add	sp, sp, #0x30
  40c83c:	ret

000000000040c840 <method_open_machine_root_directory>:
  40c840:	sub	sp, sp, #0x30
  40c844:	stp	x29, x30, [sp, #32]
  40c848:	add	x29, sp, #0x20
  40c84c:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c850:	ldr	x3, [x3, #2136]
  40c854:	stur	x0, [x29, #-8]
  40c858:	str	x1, [sp, #16]
  40c85c:	str	x2, [sp, #8]
  40c860:	ldur	x0, [x29, #-8]
  40c864:	ldr	x1, [sp, #16]
  40c868:	ldr	x2, [sp, #8]
  40c86c:	bl	41053c <redirect_method_to_machine>
  40c870:	ldp	x29, x30, [sp, #32]
  40c874:	add	sp, sp, #0x30
  40c878:	ret

000000000040c87c <method_get_machine_uid_shift>:
  40c87c:	sub	sp, sp, #0x30
  40c880:	stp	x29, x30, [sp, #32]
  40c884:	add	x29, sp, #0x20
  40c888:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c88c:	ldr	x3, [x3, #2144]
  40c890:	stur	x0, [x29, #-8]
  40c894:	str	x1, [sp, #16]
  40c898:	str	x2, [sp, #8]
  40c89c:	ldur	x0, [x29, #-8]
  40c8a0:	ldr	x1, [sp, #16]
  40c8a4:	ldr	x2, [sp, #8]
  40c8a8:	bl	41053c <redirect_method_to_machine>
  40c8ac:	ldp	x29, x30, [sp, #32]
  40c8b0:	add	sp, sp, #0x30
  40c8b4:	ret

000000000040c8b8 <method_remove_image>:
  40c8b8:	sub	sp, sp, #0x30
  40c8bc:	stp	x29, x30, [sp, #32]
  40c8c0:	add	x29, sp, #0x20
  40c8c4:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c8c8:	ldr	x3, [x3, #2152]
  40c8cc:	stur	x0, [x29, #-8]
  40c8d0:	str	x1, [sp, #16]
  40c8d4:	str	x2, [sp, #8]
  40c8d8:	ldur	x0, [x29, #-8]
  40c8dc:	ldr	x1, [sp, #16]
  40c8e0:	ldr	x2, [sp, #8]
  40c8e4:	bl	4106fc <redirect_method_to_image>
  40c8e8:	ldp	x29, x30, [sp, #32]
  40c8ec:	add	sp, sp, #0x30
  40c8f0:	ret

000000000040c8f4 <method_rename_image>:
  40c8f4:	sub	sp, sp, #0x30
  40c8f8:	stp	x29, x30, [sp, #32]
  40c8fc:	add	x29, sp, #0x20
  40c900:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c904:	ldr	x3, [x3, #2160]
  40c908:	stur	x0, [x29, #-8]
  40c90c:	str	x1, [sp, #16]
  40c910:	str	x2, [sp, #8]
  40c914:	ldur	x0, [x29, #-8]
  40c918:	ldr	x1, [sp, #16]
  40c91c:	ldr	x2, [sp, #8]
  40c920:	bl	4106fc <redirect_method_to_image>
  40c924:	ldp	x29, x30, [sp, #32]
  40c928:	add	sp, sp, #0x30
  40c92c:	ret

000000000040c930 <method_clone_image>:
  40c930:	sub	sp, sp, #0x30
  40c934:	stp	x29, x30, [sp, #32]
  40c938:	add	x29, sp, #0x20
  40c93c:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c940:	ldr	x3, [x3, #2168]
  40c944:	stur	x0, [x29, #-8]
  40c948:	str	x1, [sp, #16]
  40c94c:	str	x2, [sp, #8]
  40c950:	ldur	x0, [x29, #-8]
  40c954:	ldr	x1, [sp, #16]
  40c958:	ldr	x2, [sp, #8]
  40c95c:	bl	4106fc <redirect_method_to_image>
  40c960:	ldp	x29, x30, [sp, #32]
  40c964:	add	sp, sp, #0x30
  40c968:	ret

000000000040c96c <method_mark_image_read_only>:
  40c96c:	sub	sp, sp, #0x30
  40c970:	stp	x29, x30, [sp, #32]
  40c974:	add	x29, sp, #0x20
  40c978:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c97c:	ldr	x3, [x3, #2176]
  40c980:	stur	x0, [x29, #-8]
  40c984:	str	x1, [sp, #16]
  40c988:	str	x2, [sp, #8]
  40c98c:	ldur	x0, [x29, #-8]
  40c990:	ldr	x1, [sp, #16]
  40c994:	ldr	x2, [sp, #8]
  40c998:	bl	4106fc <redirect_method_to_image>
  40c99c:	ldp	x29, x30, [sp, #32]
  40c9a0:	add	sp, sp, #0x30
  40c9a4:	ret

000000000040c9a8 <method_get_image_hostname>:
  40c9a8:	sub	sp, sp, #0x30
  40c9ac:	stp	x29, x30, [sp, #32]
  40c9b0:	add	x29, sp, #0x20
  40c9b4:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c9b8:	ldr	x3, [x3, #2184]
  40c9bc:	stur	x0, [x29, #-8]
  40c9c0:	str	x1, [sp, #16]
  40c9c4:	str	x2, [sp, #8]
  40c9c8:	ldur	x0, [x29, #-8]
  40c9cc:	ldr	x1, [sp, #16]
  40c9d0:	ldr	x2, [sp, #8]
  40c9d4:	bl	4106fc <redirect_method_to_image>
  40c9d8:	ldp	x29, x30, [sp, #32]
  40c9dc:	add	sp, sp, #0x30
  40c9e0:	ret

000000000040c9e4 <method_get_image_machine_id>:
  40c9e4:	sub	sp, sp, #0x30
  40c9e8:	stp	x29, x30, [sp, #32]
  40c9ec:	add	x29, sp, #0x20
  40c9f0:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40c9f4:	ldr	x3, [x3, #2192]
  40c9f8:	stur	x0, [x29, #-8]
  40c9fc:	str	x1, [sp, #16]
  40ca00:	str	x2, [sp, #8]
  40ca04:	ldur	x0, [x29, #-8]
  40ca08:	ldr	x1, [sp, #16]
  40ca0c:	ldr	x2, [sp, #8]
  40ca10:	bl	4106fc <redirect_method_to_image>
  40ca14:	ldp	x29, x30, [sp, #32]
  40ca18:	add	sp, sp, #0x30
  40ca1c:	ret

000000000040ca20 <method_get_image_machine_info>:
  40ca20:	sub	sp, sp, #0x30
  40ca24:	stp	x29, x30, [sp, #32]
  40ca28:	add	x29, sp, #0x20
  40ca2c:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40ca30:	ldr	x3, [x3, #2200]
  40ca34:	stur	x0, [x29, #-8]
  40ca38:	str	x1, [sp, #16]
  40ca3c:	str	x2, [sp, #8]
  40ca40:	ldur	x0, [x29, #-8]
  40ca44:	ldr	x1, [sp, #16]
  40ca48:	ldr	x2, [sp, #8]
  40ca4c:	bl	4106fc <redirect_method_to_image>
  40ca50:	ldp	x29, x30, [sp, #32]
  40ca54:	add	sp, sp, #0x30
  40ca58:	ret

000000000040ca5c <method_get_image_os_release>:
  40ca5c:	sub	sp, sp, #0x30
  40ca60:	stp	x29, x30, [sp, #32]
  40ca64:	add	x29, sp, #0x20
  40ca68:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40ca6c:	ldr	x3, [x3, #2208]
  40ca70:	stur	x0, [x29, #-8]
  40ca74:	str	x1, [sp, #16]
  40ca78:	str	x2, [sp, #8]
  40ca7c:	ldur	x0, [x29, #-8]
  40ca80:	ldr	x1, [sp, #16]
  40ca84:	ldr	x2, [sp, #8]
  40ca88:	bl	4106fc <redirect_method_to_image>
  40ca8c:	ldp	x29, x30, [sp, #32]
  40ca90:	add	sp, sp, #0x30
  40ca94:	ret

000000000040ca98 <method_set_pool_limit>:
  40ca98:	sub	sp, sp, #0x60
  40ca9c:	stp	x29, x30, [sp, #80]
  40caa0:	add	x29, sp, #0x50
  40caa4:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40caa8:	add	x8, x8, #0xec5
  40caac:	add	x8, x8, #0x3
  40cab0:	stur	x0, [x29, #-16]
  40cab4:	stur	x1, [x29, #-24]
  40cab8:	stur	x2, [x29, #-32]
  40cabc:	ldur	x9, [x29, #-24]
  40cac0:	str	x9, [sp, #40]
  40cac4:	str	x8, [sp, #16]
  40cac8:	ldur	x8, [x29, #-16]
  40cacc:	cmp	x8, #0x0
  40cad0:	cset	w9, ne  // ne = any
  40cad4:	mov	w10, #0x1                   	// #1
  40cad8:	eor	w9, w9, #0x1
  40cadc:	eor	w9, w9, w10
  40cae0:	eor	w9, w9, w10
  40cae4:	and	w9, w9, #0x1
  40cae8:	mov	w0, w9
  40caec:	sxtw	x8, w0
  40caf0:	cbz	x8, 40cb18 <method_set_pool_limit+0x80>
  40caf4:	mov	w8, wzr
  40caf8:	mov	w0, w8
  40cafc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40cb00:	add	x1, x1, #0xebd
  40cb04:	ldr	x2, [sp, #16]
  40cb08:	mov	w3, #0x34b                 	// #843
  40cb0c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40cb10:	add	x4, x4, #0xadf
  40cb14:	bl	404bd0 <log_assert_failed_realm@plt>
  40cb18:	ldur	x0, [x29, #-16]
  40cb1c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40cb20:	add	x1, x1, #0xb3d
  40cb24:	add	x2, sp, #0x20
  40cb28:	bl	405170 <sd_bus_message_read@plt>
  40cb2c:	str	w0, [sp, #28]
  40cb30:	ldr	w8, [sp, #28]
  40cb34:	cmp	w8, #0x0
  40cb38:	cset	w8, ge  // ge = tcont
  40cb3c:	tbnz	w8, #0, 40cb4c <method_set_pool_limit+0xb4>
  40cb40:	ldr	w8, [sp, #28]
  40cb44:	stur	w8, [x29, #-4]
  40cb48:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cb4c:	ldr	x0, [sp, #32]
  40cb50:	bl	410984 <FILE_SIZE_VALID_OR_INFINITY>
  40cb54:	tbnz	w0, #0, 40cb78 <method_set_pool_limit+0xe0>
  40cb58:	ldur	x0, [x29, #-32]
  40cb5c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40cb60:	add	x1, x1, #0x848
  40cb64:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cb68:	add	x2, x2, #0xb23
  40cb6c:	bl	4051b0 <sd_bus_error_setf@plt>
  40cb70:	stur	w0, [x29, #-4]
  40cb74:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cb78:	ldur	x0, [x29, #-16]
  40cb7c:	ldr	x8, [sp, #40]
  40cb80:	add	x6, x8, #0x28
  40cb84:	ldur	x7, [x29, #-32]
  40cb88:	mov	w1, #0x15                  	// #21
  40cb8c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cb90:	add	x2, x2, #0xb3a
  40cb94:	mov	x8, xzr
  40cb98:	mov	x3, x8
  40cb9c:	mov	w9, wzr
  40cba0:	and	w4, w9, #0x1
  40cba4:	mov	w5, #0xffffffff            	// #-1
  40cba8:	bl	405250 <bus_verify_polkit_async@plt>
  40cbac:	str	w0, [sp, #28]
  40cbb0:	ldr	w9, [sp, #28]
  40cbb4:	cmp	w9, #0x0
  40cbb8:	cset	w9, ge  // ge = tcont
  40cbbc:	tbnz	w9, #0, 40cbcc <method_set_pool_limit+0x134>
  40cbc0:	ldr	w8, [sp, #28]
  40cbc4:	stur	w8, [x29, #-4]
  40cbc8:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cbcc:	ldr	w8, [sp, #28]
  40cbd0:	cbnz	w8, 40cbe0 <method_set_pool_limit+0x148>
  40cbd4:	mov	w8, #0x1                   	// #1
  40cbd8:	stur	w8, [x29, #-4]
  40cbdc:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cbe0:	ldur	x0, [x29, #-32]
  40cbe4:	bl	405260 <setup_machine_directory@plt>
  40cbe8:	str	w0, [sp, #28]
  40cbec:	ldr	w8, [sp, #28]
  40cbf0:	cmp	w8, #0x0
  40cbf4:	cset	w8, ge  // ge = tcont
  40cbf8:	tbnz	w8, #0, 40cc08 <method_set_pool_limit+0x170>
  40cbfc:	ldr	w8, [sp, #28]
  40cc00:	stur	w8, [x29, #-4]
  40cc04:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cc08:	ldr	x2, [sp, #32]
  40cc0c:	adrp	x8, 41c000 <machine_hash_ops+0x13e8>
  40cc10:	add	x8, x8, #0x45d
  40cc14:	mov	x0, x8
  40cc18:	mov	x9, xzr
  40cc1c:	mov	x1, x9
  40cc20:	str	x8, [sp, #8]
  40cc24:	str	x9, [sp]
  40cc28:	bl	405270 <btrfs_qgroup_set_limit@plt>
  40cc2c:	ldr	x2, [sp, #32]
  40cc30:	ldr	x8, [sp, #8]
  40cc34:	mov	x0, x8
  40cc38:	ldr	x1, [sp]
  40cc3c:	bl	405280 <btrfs_subvol_set_subtree_quota_limit@plt>
  40cc40:	str	w0, [sp, #28]
  40cc44:	ldr	w10, [sp, #28]
  40cc48:	mov	w11, #0xffffffe7            	// #-25
  40cc4c:	cmp	w10, w11
  40cc50:	b.ne	40cc74 <method_set_pool_limit+0x1dc>  // b.any
  40cc54:	ldur	x0, [x29, #-32]
  40cc58:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40cc5c:	add	x1, x1, #0xb63
  40cc60:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cc64:	add	x2, x2, #0xb8b
  40cc68:	bl	4051b0 <sd_bus_error_setf@plt>
  40cc6c:	stur	w0, [x29, #-4]
  40cc70:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cc74:	ldr	w8, [sp, #28]
  40cc78:	cmp	w8, #0x0
  40cc7c:	cset	w8, ge  // ge = tcont
  40cc80:	tbnz	w8, #0, 40cca0 <method_set_pool_limit+0x208>
  40cc84:	ldur	x0, [x29, #-32]
  40cc88:	ldr	w1, [sp, #28]
  40cc8c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cc90:	add	x2, x2, #0xbad
  40cc94:	bl	405290 <sd_bus_error_set_errnof@plt>
  40cc98:	stur	w0, [x29, #-4]
  40cc9c:	b	40ccb4 <method_set_pool_limit+0x21c>
  40cca0:	ldur	x0, [x29, #-16]
  40cca4:	mov	x8, xzr
  40cca8:	mov	x1, x8
  40ccac:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40ccb0:	stur	w0, [x29, #-4]
  40ccb4:	ldur	w0, [x29, #-4]
  40ccb8:	ldp	x29, x30, [sp, #80]
  40ccbc:	add	sp, sp, #0x60
  40ccc0:	ret

000000000040ccc4 <method_set_image_limit>:
  40ccc4:	sub	sp, sp, #0x30
  40ccc8:	stp	x29, x30, [sp, #32]
  40cccc:	add	x29, sp, #0x20
  40ccd0:	adrp	x3, 43f000 <machine_vtable+0x4b8>
  40ccd4:	ldr	x3, [x3, #2216]
  40ccd8:	stur	x0, [x29, #-8]
  40ccdc:	str	x1, [sp, #16]
  40cce0:	str	x2, [sp, #8]
  40cce4:	ldur	x0, [x29, #-8]
  40cce8:	ldr	x1, [sp, #16]
  40ccec:	ldr	x2, [sp, #8]
  40ccf0:	bl	4106fc <redirect_method_to_image>
  40ccf4:	ldp	x29, x30, [sp, #32]
  40ccf8:	add	sp, sp, #0x30
  40ccfc:	ret

000000000040cd00 <method_clean_pool>:
  40cd00:	sub	sp, sp, #0x100
  40cd04:	stp	x29, x30, [sp, #240]
  40cd08:	add	x29, sp, #0xf0
  40cd0c:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  40cd10:	add	x8, x8, #0xb48
  40cd14:	mov	w9, #0xffffffff            	// #-1
  40cd18:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40cd1c:	add	x10, x10, #0xec5
  40cd20:	add	x10, x10, #0x3
  40cd24:	stur	x0, [x29, #-16]
  40cd28:	stur	x1, [x29, #-24]
  40cd2c:	stur	x2, [x29, #-32]
  40cd30:	ldr	x8, [x8]
  40cd34:	stur	x8, [x29, #-48]
  40cd38:	stur	w9, [x29, #-52]
  40cd3c:	ldur	x8, [x29, #-24]
  40cd40:	stur	x8, [x29, #-64]
  40cd44:	str	x10, [sp, #64]
  40cd48:	ldur	x8, [x29, #-16]
  40cd4c:	cmp	x8, #0x0
  40cd50:	cset	w9, ne  // ne = any
  40cd54:	mov	w10, #0x1                   	// #1
  40cd58:	eor	w9, w9, #0x1
  40cd5c:	eor	w9, w9, w10
  40cd60:	eor	w9, w9, w10
  40cd64:	and	w9, w9, #0x1
  40cd68:	mov	w0, w9
  40cd6c:	sxtw	x8, w0
  40cd70:	cbz	x8, 40cd98 <method_clean_pool+0x98>
  40cd74:	mov	w8, wzr
  40cd78:	mov	w0, w8
  40cd7c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40cd80:	add	x1, x1, #0xebd
  40cd84:	ldr	x2, [sp, #64]
  40cd88:	mov	w3, #0x2c0                 	// #704
  40cd8c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40cd90:	add	x4, x4, #0xbce
  40cd94:	bl	404bd0 <log_assert_failed_realm@plt>
  40cd98:	ldur	x8, [x29, #-64]
  40cd9c:	ldr	w9, [x8, #88]
  40cda0:	cmp	w9, #0x40
  40cda4:	b.cc	40cdd0 <method_clean_pool+0xd0>  // b.lo, b.ul, b.last
  40cda8:	ldur	x0, [x29, #-32]
  40cdac:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40cdb0:	add	x1, x1, #0xc0e
  40cdb4:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cdb8:	add	x2, x2, #0xc38
  40cdbc:	bl	4051b0 <sd_bus_error_setf@plt>
  40cdc0:	stur	w0, [x29, #-4]
  40cdc4:	mov	w8, #0x1                   	// #1
  40cdc8:	stur	w8, [x29, #-92]
  40cdcc:	b	40d314 <method_clean_pool+0x614>
  40cdd0:	ldur	x0, [x29, #-16]
  40cdd4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40cdd8:	add	x1, x1, #0x7ae
  40cddc:	sub	x2, x29, #0x50
  40cde0:	bl	405170 <sd_bus_message_read@plt>
  40cde4:	stur	w0, [x29, #-88]
  40cde8:	ldur	w8, [x29, #-88]
  40cdec:	cmp	w8, #0x0
  40cdf0:	cset	w8, ge  // ge = tcont
  40cdf4:	tbnz	w8, #0, 40ce0c <method_clean_pool+0x10c>
  40cdf8:	ldur	w8, [x29, #-88]
  40cdfc:	stur	w8, [x29, #-4]
  40ce00:	mov	w8, #0x1                   	// #1
  40ce04:	stur	w8, [x29, #-92]
  40ce08:	b	40d314 <method_clean_pool+0x614>
  40ce0c:	ldur	x0, [x29, #-80]
  40ce10:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ce14:	add	x1, x1, #0xb9b
  40ce18:	bl	404e40 <strcmp@plt>
  40ce1c:	cbnz	w0, 40ce28 <method_clean_pool+0x128>
  40ce20:	stur	wzr, [x29, #-36]
  40ce24:	b	40ce74 <method_clean_pool+0x174>
  40ce28:	ldur	x0, [x29, #-80]
  40ce2c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40ce30:	add	x1, x1, #0xc55
  40ce34:	bl	404e40 <strcmp@plt>
  40ce38:	cbnz	w0, 40ce48 <method_clean_pool+0x148>
  40ce3c:	mov	w8, #0x1                   	// #1
  40ce40:	stur	w8, [x29, #-36]
  40ce44:	b	40ce74 <method_clean_pool+0x174>
  40ce48:	ldur	x0, [x29, #-32]
  40ce4c:	ldur	x3, [x29, #-80]
  40ce50:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40ce54:	add	x1, x1, #0x848
  40ce58:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40ce5c:	add	x2, x2, #0xc5c
  40ce60:	bl	4051b0 <sd_bus_error_setf@plt>
  40ce64:	stur	w0, [x29, #-4]
  40ce68:	mov	w8, #0x1                   	// #1
  40ce6c:	stur	w8, [x29, #-92]
  40ce70:	b	40d314 <method_clean_pool+0x614>
  40ce74:	ldur	x0, [x29, #-16]
  40ce78:	ldur	x8, [x29, #-64]
  40ce7c:	add	x6, x8, #0x28
  40ce80:	ldur	x7, [x29, #-32]
  40ce84:	mov	w1, #0x15                  	// #21
  40ce88:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40ce8c:	add	x2, x2, #0xb3a
  40ce90:	mov	x8, xzr
  40ce94:	mov	x3, x8
  40ce98:	mov	w9, wzr
  40ce9c:	and	w4, w9, #0x1
  40cea0:	mov	w5, #0xffffffff            	// #-1
  40cea4:	bl	405250 <bus_verify_polkit_async@plt>
  40cea8:	stur	w0, [x29, #-88]
  40ceac:	ldur	w9, [x29, #-88]
  40ceb0:	cmp	w9, #0x0
  40ceb4:	cset	w9, ge  // ge = tcont
  40ceb8:	tbnz	w9, #0, 40ced0 <method_clean_pool+0x1d0>
  40cebc:	ldur	w8, [x29, #-88]
  40cec0:	stur	w8, [x29, #-4]
  40cec4:	mov	w8, #0x1                   	// #1
  40cec8:	stur	w8, [x29, #-92]
  40cecc:	b	40d314 <method_clean_pool+0x614>
  40ced0:	ldur	w8, [x29, #-88]
  40ced4:	cbnz	w8, 40cee8 <method_clean_pool+0x1e8>
  40ced8:	mov	w8, #0x1                   	// #1
  40cedc:	stur	w8, [x29, #-4]
  40cee0:	stur	w8, [x29, #-92]
  40cee4:	b	40d314 <method_clean_pool+0x614>
  40cee8:	sub	x0, x29, #0x30
  40ceec:	mov	w1, #0x800                 	// #2048
  40cef0:	movk	w1, #0x8, lsl #16
  40cef4:	bl	4052a0 <pipe2@plt>
  40cef8:	cmp	w0, #0x0
  40cefc:	cset	w8, ge  // ge = tcont
  40cf00:	tbnz	w8, #0, 40cf34 <method_clean_pool+0x234>
  40cf04:	ldur	x0, [x29, #-32]
  40cf08:	str	x0, [sp, #56]
  40cf0c:	bl	404d50 <__errno_location@plt>
  40cf10:	ldr	w1, [x0]
  40cf14:	ldr	x0, [sp, #56]
  40cf18:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cf1c:	add	x2, x2, #0xc6f
  40cf20:	bl	405290 <sd_bus_error_set_errnof@plt>
  40cf24:	stur	w0, [x29, #-4]
  40cf28:	mov	w8, #0x1                   	// #1
  40cf2c:	stur	w8, [x29, #-92]
  40cf30:	b	40d314 <method_clean_pool+0x614>
  40cf34:	mov	x8, xzr
  40cf38:	mov	x0, x8
  40cf3c:	mov	w1, #0x2                   	// #2
  40cf40:	movk	w1, #0x8, lsl #16
  40cf44:	bl	4052b0 <open_tmpfile_unlinkable@plt>
  40cf48:	stur	w0, [x29, #-52]
  40cf4c:	ldur	w9, [x29, #-52]
  40cf50:	cmp	w9, #0x0
  40cf54:	cset	w9, ge  // ge = tcont
  40cf58:	tbnz	w9, #0, 40cf7c <method_clean_pool+0x27c>
  40cf5c:	bl	404d50 <__errno_location@plt>
  40cf60:	ldr	w8, [x0]
  40cf64:	mov	w9, wzr
  40cf68:	subs	w8, w9, w8
  40cf6c:	stur	w8, [x29, #-4]
  40cf70:	mov	w8, #0x1                   	// #1
  40cf74:	stur	w8, [x29, #-92]
  40cf78:	b	40d314 <method_clean_pool+0x614>
  40cf7c:	adrp	x0, 41c000 <machine_hash_ops+0x13e8>
  40cf80:	add	x0, x0, #0xc89
  40cf84:	mov	w1, #0x1                   	// #1
  40cf88:	sub	x2, x29, #0x54
  40cf8c:	bl	410a20 <safe_fork>
  40cf90:	stur	w0, [x29, #-88]
  40cf94:	ldur	w8, [x29, #-88]
  40cf98:	cmp	w8, #0x0
  40cf9c:	cset	w8, ge  // ge = tcont
  40cfa0:	tbnz	w8, #0, 40cfc8 <method_clean_pool+0x2c8>
  40cfa4:	ldur	x0, [x29, #-32]
  40cfa8:	ldur	w1, [x29, #-88]
  40cfac:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40cfb0:	add	x2, x2, #0xc94
  40cfb4:	bl	405290 <sd_bus_error_set_errnof@plt>
  40cfb8:	stur	w0, [x29, #-4]
  40cfbc:	mov	w8, #0x1                   	// #1
  40cfc0:	stur	w8, [x29, #-92]
  40cfc4:	b	40d314 <method_clean_pool+0x614>
  40cfc8:	ldur	w8, [x29, #-88]
  40cfcc:	cbnz	w8, 40d284 <method_clean_pool+0x584>
  40cfd0:	mov	x8, xzr
  40cfd4:	stur	x8, [x29, #-104]
  40cfd8:	mov	w9, #0x1                   	// #1
  40cfdc:	sturb	w9, [x29, #-105]
  40cfe0:	ldur	w0, [x29, #-48]
  40cfe4:	bl	4052c0 <safe_close@plt>
  40cfe8:	stur	w0, [x29, #-48]
  40cfec:	adrp	x0, 43f000 <machine_vtable+0x4b8>
  40cff0:	ldr	x0, [x0, #2048]
  40cff4:	bl	404c10 <internal_hashmap_new@plt>
  40cff8:	stur	x0, [x29, #-104]
  40cffc:	ldur	x8, [x29, #-104]
  40d000:	cbnz	x8, 40d010 <method_clean_pool+0x310>
  40d004:	mov	w8, #0xfffffff4            	// #-12
  40d008:	stur	w8, [x29, #-88]
  40d00c:	b	40d268 <method_clean_pool+0x568>
  40d010:	ldur	x1, [x29, #-104]
  40d014:	mov	w8, wzr
  40d018:	mov	w0, w8
  40d01c:	bl	405230 <image_discover@plt>
  40d020:	stur	w0, [x29, #-88]
  40d024:	ldur	w8, [x29, #-88]
  40d028:	cmp	w8, #0x0
  40d02c:	cset	w8, ge  // ge = tcont
  40d030:	tbnz	w8, #0, 40d038 <method_clean_pool+0x338>
  40d034:	b	40d268 <method_clean_pool+0x568>
  40d038:	ldur	w0, [x29, #-52]
  40d03c:	sub	x1, x29, #0x69
  40d040:	mov	x2, #0x1                   	// #1
  40d044:	bl	4052d0 <write@plt>
  40d048:	str	x0, [sp, #88]
  40d04c:	ldr	x8, [sp, #88]
  40d050:	cmp	x8, #0x0
  40d054:	cset	w9, ge  // ge = tcont
  40d058:	tbnz	w9, #0, 40d074 <method_clean_pool+0x374>
  40d05c:	bl	404d50 <__errno_location@plt>
  40d060:	ldr	w8, [x0]
  40d064:	mov	w9, wzr
  40d068:	subs	w8, w9, w8
  40d06c:	stur	w8, [x29, #-88]
  40d070:	b	40d268 <method_clean_pool+0x568>
  40d074:	add	x8, sp, #0x48
  40d078:	mov	w9, #0xfffffffe            	// #-2
  40d07c:	str	w9, [sp, #72]
  40d080:	mov	x10, xzr
  40d084:	str	x10, [x8, #8]
  40d088:	ldur	q0, [sp, #72]
  40d08c:	str	q0, [sp, #96]
  40d090:	ldur	x0, [x29, #-104]
  40d094:	add	x1, sp, #0x60
  40d098:	add	x2, sp, #0x78
  40d09c:	mov	x8, xzr
  40d0a0:	mov	x3, x8
  40d0a4:	bl	40ed8c <hashmap_iterate>
  40d0a8:	tbnz	w0, #0, 40d0b0 <method_clean_pool+0x3b0>
  40d0ac:	b	40d250 <method_clean_pool+0x550>
  40d0b0:	ldr	x0, [sp, #120]
  40d0b4:	bl	410a68 <IMAGE_IS_VENDOR>
  40d0b8:	tbnz	w0, #0, 40d0c0 <method_clean_pool+0x3c0>
  40d0bc:	b	40d0c4 <method_clean_pool+0x3c4>
  40d0c0:	b	40d090 <method_clean_pool+0x390>
  40d0c4:	ldr	x0, [sp, #120]
  40d0c8:	bl	410b20 <IMAGE_IS_HOST>
  40d0cc:	tbnz	w0, #0, 40d0d4 <method_clean_pool+0x3d4>
  40d0d0:	b	40d0d8 <method_clean_pool+0x3d8>
  40d0d4:	b	40d090 <method_clean_pool+0x390>
  40d0d8:	ldur	w8, [x29, #-36]
  40d0dc:	cmp	w8, #0x1
  40d0e0:	b.ne	40d0f4 <method_clean_pool+0x3f4>  // b.any
  40d0e4:	ldr	x0, [sp, #120]
  40d0e8:	bl	410c1c <IMAGE_IS_HIDDEN>
  40d0ec:	tbnz	w0, #0, 40d0f4 <method_clean_pool+0x3f4>
  40d0f0:	b	40d090 <method_clean_pool+0x390>
  40d0f4:	ldr	x0, [sp, #120]
  40d0f8:	bl	4052e0 <image_remove@plt>
  40d0fc:	stur	w0, [x29, #-88]
  40d100:	ldur	w8, [x29, #-88]
  40d104:	mov	w9, #0xfffffff0            	// #-16
  40d108:	cmp	w8, w9
  40d10c:	b.ne	40d114 <method_clean_pool+0x414>  // b.any
  40d110:	b	40d090 <method_clean_pool+0x390>
  40d114:	ldur	w8, [x29, #-88]
  40d118:	cmp	w8, #0x0
  40d11c:	cset	w8, ge  // ge = tcont
  40d120:	tbnz	w8, #0, 40d1ac <method_clean_pool+0x4ac>
  40d124:	sub	x1, x29, #0x69
  40d128:	mov	w8, #0x0                   	// #0
  40d12c:	sturb	w8, [x29, #-105]
  40d130:	ldur	w0, [x29, #-52]
  40d134:	mov	x9, xzr
  40d138:	str	x1, [sp, #48]
  40d13c:	mov	x1, x9
  40d140:	str	x9, [sp, #40]
  40d144:	bl	4052f0 <ftruncate64@plt>
  40d148:	ldur	w8, [x29, #-52]
  40d14c:	mov	w0, w8
  40d150:	ldr	x1, [sp, #40]
  40d154:	mov	w8, wzr
  40d158:	mov	w2, w8
  40d15c:	bl	405300 <lseek64@plt>
  40d160:	ldur	w8, [x29, #-52]
  40d164:	mov	w0, w8
  40d168:	ldr	x1, [sp, #48]
  40d16c:	mov	x2, #0x1                   	// #1
  40d170:	bl	4052d0 <write@plt>
  40d174:	ldur	w8, [x29, #-52]
  40d178:	ldr	x9, [sp, #120]
  40d17c:	ldr	x1, [x9, #8]
  40d180:	ldr	x9, [sp, #120]
  40d184:	ldr	x9, [x9, #8]
  40d188:	mov	x0, x9
  40d18c:	str	w8, [sp, #36]
  40d190:	str	x1, [sp, #24]
  40d194:	bl	404e00 <strlen@plt>
  40d198:	add	x2, x0, #0x1
  40d19c:	ldr	w0, [sp, #36]
  40d1a0:	ldr	x1, [sp, #24]
  40d1a4:	bl	4052d0 <write@plt>
  40d1a8:	b	40d268 <method_clean_pool+0x568>
  40d1ac:	ldur	w0, [x29, #-52]
  40d1b0:	ldr	x8, [sp, #120]
  40d1b4:	ldr	x1, [x8, #8]
  40d1b8:	ldr	x8, [sp, #120]
  40d1bc:	ldr	x8, [x8, #8]
  40d1c0:	str	w0, [sp, #20]
  40d1c4:	mov	x0, x8
  40d1c8:	str	x1, [sp, #8]
  40d1cc:	bl	404e00 <strlen@plt>
  40d1d0:	add	x2, x0, #0x1
  40d1d4:	ldr	w0, [sp, #20]
  40d1d8:	ldr	x1, [sp, #8]
  40d1dc:	bl	4052d0 <write@plt>
  40d1e0:	str	x0, [sp, #88]
  40d1e4:	ldr	x8, [sp, #88]
  40d1e8:	cmp	x8, #0x0
  40d1ec:	cset	w9, ge  // ge = tcont
  40d1f0:	tbnz	w9, #0, 40d20c <method_clean_pool+0x50c>
  40d1f4:	bl	404d50 <__errno_location@plt>
  40d1f8:	ldr	w8, [x0]
  40d1fc:	mov	w9, wzr
  40d200:	subs	w8, w9, w8
  40d204:	stur	w8, [x29, #-88]
  40d208:	b	40d268 <method_clean_pool+0x568>
  40d20c:	ldur	w0, [x29, #-52]
  40d210:	ldr	x8, [sp, #120]
  40d214:	add	x1, x8, #0x38
  40d218:	mov	x2, #0x8                   	// #8
  40d21c:	bl	4052d0 <write@plt>
  40d220:	str	x0, [sp, #88]
  40d224:	ldr	x8, [sp, #88]
  40d228:	cmp	x8, #0x0
  40d22c:	cset	w9, ge  // ge = tcont
  40d230:	tbnz	w9, #0, 40d24c <method_clean_pool+0x54c>
  40d234:	bl	404d50 <__errno_location@plt>
  40d238:	ldr	w8, [x0]
  40d23c:	mov	w9, wzr
  40d240:	subs	w8, w9, w8
  40d244:	stur	w8, [x29, #-88]
  40d248:	b	40d268 <method_clean_pool+0x568>
  40d24c:	b	40d090 <method_clean_pool+0x390>
  40d250:	ldur	w0, [x29, #-52]
  40d254:	bl	4052c0 <safe_close@plt>
  40d258:	stur	w0, [x29, #-52]
  40d25c:	mov	w8, wzr
  40d260:	mov	w0, w8
  40d264:	bl	405310 <_exit@plt>
  40d268:	ldur	w0, [x29, #-44]
  40d26c:	sub	x1, x29, #0x58
  40d270:	mov	x2, #0x4                   	// #4
  40d274:	bl	4052d0 <write@plt>
  40d278:	mov	w8, #0x1                   	// #1
  40d27c:	mov	w0, w8
  40d280:	bl	405310 <_exit@plt>
  40d284:	ldur	w0, [x29, #-44]
  40d288:	bl	4052c0 <safe_close@plt>
  40d28c:	stur	w0, [x29, #-44]
  40d290:	ldur	x0, [x29, #-64]
  40d294:	ldur	w2, [x29, #-84]
  40d298:	ldur	x3, [x29, #-16]
  40d29c:	ldur	w4, [x29, #-48]
  40d2a0:	mov	x8, xzr
  40d2a4:	mov	x1, x8
  40d2a8:	sub	x5, x29, #0x48
  40d2ac:	bl	419fc0 <operation_new>
  40d2b0:	stur	w0, [x29, #-88]
  40d2b4:	ldur	w9, [x29, #-88]
  40d2b8:	cmp	w9, #0x0
  40d2bc:	cset	w9, ge  // ge = tcont
  40d2c0:	tbnz	w9, #0, 40d2e0 <method_clean_pool+0x5e0>
  40d2c4:	ldur	w0, [x29, #-84]
  40d2c8:	bl	405320 <sigkill_wait@plt>
  40d2cc:	ldur	w8, [x29, #-88]
  40d2d0:	stur	w8, [x29, #-4]
  40d2d4:	mov	w8, #0x1                   	// #1
  40d2d8:	stur	w8, [x29, #-92]
  40d2dc:	b	40d314 <method_clean_pool+0x614>
  40d2e0:	ldur	w8, [x29, #-52]
  40d2e4:	ldur	x9, [x29, #-72]
  40d2e8:	str	w8, [x9, #36]
  40d2ec:	ldur	x9, [x29, #-72]
  40d2f0:	adrp	x10, 410000 <method_create_or_register_machine+0x358>
  40d2f4:	add	x10, x10, #0xccc
  40d2f8:	str	x10, [x9, #48]
  40d2fc:	mov	w8, #0xffffffff            	// #-1
  40d300:	stur	w8, [x29, #-52]
  40d304:	stur	w8, [x29, #-48]
  40d308:	mov	w8, #0x1                   	// #1
  40d30c:	stur	w8, [x29, #-4]
  40d310:	stur	w8, [x29, #-92]
  40d314:	sub	x0, x29, #0x34
  40d318:	bl	40f9fc <closep>
  40d31c:	sub	x0, x29, #0x30
  40d320:	bl	4109fc <close_pairp>
  40d324:	ldur	w0, [x29, #-4]
  40d328:	ldp	x29, x30, [sp, #240]
  40d32c:	add	sp, sp, #0x100
  40d330:	ret

000000000040d334 <method_map_from_machine_user>:
  40d334:	stp	x29, x30, [sp, #-16]!
  40d338:	mov	x29, sp
  40d33c:	sub	sp, sp, #0xa0
  40d340:	mov	x8, xzr
  40d344:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40d348:	add	x9, x9, #0xe62
  40d34c:	adrp	x10, 41c000 <machine_hash_ops+0x13e8>
  40d350:	add	x10, x10, #0x848
  40d354:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  40d358:	add	x11, x11, #0xec5
  40d35c:	add	x11, x11, #0x3
  40d360:	sub	x12, x29, #0x38
  40d364:	sub	x3, x29, #0x4c
  40d368:	stur	x0, [x29, #-16]
  40d36c:	stur	x1, [x29, #-24]
  40d370:	stur	x2, [x29, #-32]
  40d374:	stur	x8, [x29, #-40]
  40d378:	ldur	x8, [x29, #-24]
  40d37c:	stur	x8, [x29, #-48]
  40d380:	ldur	x0, [x29, #-16]
  40d384:	mov	x1, x9
  40d388:	mov	x2, x12
  40d38c:	stur	x10, [x29, #-152]
  40d390:	stur	x11, [x29, #-160]
  40d394:	bl	405170 <sd_bus_message_read@plt>
  40d398:	stur	w0, [x29, #-80]
  40d39c:	ldur	w13, [x29, #-80]
  40d3a0:	cmp	w13, #0x0
  40d3a4:	cset	w13, ge  // ge = tcont
  40d3a8:	tbnz	w13, #0, 40d3c0 <method_map_from_machine_user+0x8c>
  40d3ac:	ldur	w8, [x29, #-80]
  40d3b0:	stur	w8, [x29, #-4]
  40d3b4:	mov	w8, #0x1                   	// #1
  40d3b8:	stur	w8, [x29, #-84]
  40d3bc:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d3c0:	ldur	w0, [x29, #-76]
  40d3c4:	bl	405330 <uid_is_valid@plt>
  40d3c8:	tbnz	w0, #0, 40d3f4 <method_map_from_machine_user+0xc0>
  40d3cc:	ldur	x0, [x29, #-32]
  40d3d0:	ldur	w3, [x29, #-76]
  40d3d4:	ldur	x1, [x29, #-152]
  40d3d8:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d3dc:	add	x2, x2, #0xdd6
  40d3e0:	bl	4051b0 <sd_bus_error_setf@plt>
  40d3e4:	stur	w0, [x29, #-4]
  40d3e8:	mov	w8, #0x1                   	// #1
  40d3ec:	stur	w8, [x29, #-84]
  40d3f0:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d3f4:	ldur	x8, [x29, #-48]
  40d3f8:	ldr	x0, [x8, #16]
  40d3fc:	ldur	x1, [x29, #-56]
  40d400:	bl	40e6ec <hashmap_get>
  40d404:	stur	x0, [x29, #-72]
  40d408:	ldur	x8, [x29, #-72]
  40d40c:	cbnz	x8, 40d43c <method_map_from_machine_user+0x108>
  40d410:	ldur	x0, [x29, #-32]
  40d414:	ldur	x3, [x29, #-56]
  40d418:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40d41c:	add	x1, x1, #0x5a4
  40d420:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d424:	add	x2, x2, #0x5cb
  40d428:	bl	4051b0 <sd_bus_error_setf@plt>
  40d42c:	stur	w0, [x29, #-4]
  40d430:	mov	w8, #0x1                   	// #1
  40d434:	stur	w8, [x29, #-84]
  40d438:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d43c:	ldur	x8, [x29, #-72]
  40d440:	ldr	w9, [x8, #32]
  40d444:	cbz	w9, 40d46c <method_map_from_machine_user+0x138>
  40d448:	ldur	x0, [x29, #-32]
  40d44c:	ldur	x1, [x29, #-152]
  40d450:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d454:	add	x2, x2, #0xde9
  40d458:	bl	4051b0 <sd_bus_error_setf@plt>
  40d45c:	stur	w0, [x29, #-4]
  40d460:	mov	w8, #0x1                   	// #1
  40d464:	stur	w8, [x29, #-84]
  40d468:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d46c:	ldur	x8, [x29, #-72]
  40d470:	ldr	w9, [x8, #80]
  40d474:	stur	w9, [x29, #-88]
  40d478:	ldur	w9, [x29, #-88]
  40d47c:	cbnz	w9, 40d490 <method_map_from_machine_user+0x15c>
  40d480:	adrp	x8, 41c000 <machine_hash_ops+0x13e8>
  40d484:	add	x8, x8, #0xe13
  40d488:	stur	x8, [x29, #-96]
  40d48c:	b	40d588 <method_map_from_machine_user+0x254>
  40d490:	mov	x8, #0x1b                  	// #27
  40d494:	stur	x8, [x29, #-104]
  40d498:	ldur	x1, [x29, #-104]
  40d49c:	mov	x0, #0x1                   	// #1
  40d4a0:	bl	41123c <size_multiply_overflow>
  40d4a4:	mov	w8, #0x1                   	// #1
  40d4a8:	eor	w9, w0, #0x1
  40d4ac:	eor	w9, w9, w8
  40d4b0:	eor	w9, w9, w8
  40d4b4:	eor	w8, w9, w8
  40d4b8:	and	w8, w8, #0x1
  40d4bc:	mov	w1, w8
  40d4c0:	sxtw	x10, w1
  40d4c4:	cbz	x10, 40d4ec <method_map_from_machine_user+0x1b8>
  40d4c8:	mov	w8, wzr
  40d4cc:	mov	w0, w8
  40d4d0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d4d4:	add	x1, x1, #0x4dd
  40d4d8:	ldur	x2, [x29, #-160]
  40d4dc:	mov	w3, #0x38b                 	// #907
  40d4e0:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40d4e4:	add	x4, x4, #0xe26
  40d4e8:	bl	404bd0 <log_assert_failed_realm@plt>
  40d4ec:	ldur	x8, [x29, #-104]
  40d4f0:	mov	x9, #0x1                   	// #1
  40d4f4:	mul	x8, x9, x8
  40d4f8:	cmp	x8, #0x400, lsl #12
  40d4fc:	cset	w10, ls  // ls = plast
  40d500:	mov	w11, #0x1                   	// #1
  40d504:	eor	w10, w10, #0x1
  40d508:	eor	w10, w10, w11
  40d50c:	eor	w10, w10, w11
  40d510:	and	w10, w10, #0x1
  40d514:	mov	w0, w10
  40d518:	sxtw	x8, w0
  40d51c:	cbz	x8, 40d544 <method_map_from_machine_user+0x210>
  40d520:	mov	w8, wzr
  40d524:	mov	w0, w8
  40d528:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d52c:	add	x1, x1, #0x508
  40d530:	ldur	x2, [x29, #-160]
  40d534:	mov	w3, #0x38b                 	// #907
  40d538:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40d53c:	add	x4, x4, #0xe26
  40d540:	bl	404bd0 <log_assert_failed_realm@plt>
  40d544:	ldur	x8, [x29, #-104]
  40d548:	mov	x9, #0x1                   	// #1
  40d54c:	mul	x8, x9, x8
  40d550:	mul	x8, x8, x9
  40d554:	add	x8, x8, #0xf
  40d558:	and	x8, x8, #0xfffffffffffffff0
  40d55c:	mov	x9, sp
  40d560:	subs	x8, x9, x8
  40d564:	mov	sp, x8
  40d568:	stur	x8, [x29, #-112]
  40d56c:	ldur	x8, [x29, #-112]
  40d570:	stur	x8, [x29, #-96]
  40d574:	ldur	x0, [x29, #-96]
  40d578:	ldur	w2, [x29, #-88]
  40d57c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d580:	add	x1, x1, #0x908
  40d584:	bl	405340 <sprintf@plt>
  40d588:	ldur	x8, [x29, #-96]
  40d58c:	stur	x8, [x29, #-120]
  40d590:	ldur	x8, [x29, #-120]
  40d594:	stur	x8, [x29, #-64]
  40d598:	ldur	x0, [x29, #-64]
  40d59c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d5a0:	add	x1, x1, #0x93a
  40d5a4:	bl	4050a0 <fopen64@plt>
  40d5a8:	stur	x0, [x29, #-40]
  40d5ac:	ldur	x8, [x29, #-40]
  40d5b0:	cbnz	x8, 40d5d4 <method_map_from_machine_user+0x2a0>
  40d5b4:	bl	404d50 <__errno_location@plt>
  40d5b8:	ldr	w8, [x0]
  40d5bc:	mov	w9, wzr
  40d5c0:	subs	w8, w9, w8
  40d5c4:	stur	w8, [x29, #-4]
  40d5c8:	mov	w8, #0x1                   	// #1
  40d5cc:	stur	w8, [x29, #-84]
  40d5d0:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d5d4:	bl	404d50 <__errno_location@plt>
  40d5d8:	str	wzr, [x0]
  40d5dc:	ldur	x0, [x29, #-40]
  40d5e0:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40d5e4:	add	x1, x1, #0xe71
  40d5e8:	sub	x2, x29, #0x7c
  40d5ec:	sub	x3, x29, #0x80
  40d5f0:	sub	x4, x29, #0x84
  40d5f4:	bl	4050b0 <__isoc99_fscanf@plt>
  40d5f8:	stur	w0, [x29, #-140]
  40d5fc:	ldur	w8, [x29, #-140]
  40d600:	cmp	w8, #0x0
  40d604:	cset	w8, ge  // ge = tcont
  40d608:	tbnz	w8, #0, 40d61c <method_map_from_machine_user+0x2e8>
  40d60c:	ldur	x0, [x29, #-40]
  40d610:	bl	405350 <feof@plt>
  40d614:	cbz	w0, 40d61c <method_map_from_machine_user+0x2e8>
  40d618:	b	40d6fc <method_map_from_machine_user+0x3c8>
  40d61c:	ldur	w8, [x29, #-140]
  40d620:	cmp	w8, #0x3
  40d624:	b.eq	40d660 <method_map_from_machine_user+0x32c>  // b.none
  40d628:	ldur	x0, [x29, #-40]
  40d62c:	bl	4050c0 <ferror@plt>
  40d630:	cbz	w0, 40d64c <method_map_from_machine_user+0x318>
  40d634:	mov	w0, #0x5                   	// #5
  40d638:	bl	4111a0 <errno_or_else>
  40d63c:	stur	w0, [x29, #-4]
  40d640:	mov	w8, #0x1                   	// #1
  40d644:	stur	w8, [x29, #-84]
  40d648:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d64c:	mov	w8, #0xfffffffb            	// #-5
  40d650:	stur	w8, [x29, #-4]
  40d654:	mov	w8, #0x1                   	// #1
  40d658:	stur	w8, [x29, #-84]
  40d65c:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d660:	ldur	w8, [x29, #-76]
  40d664:	ldur	w9, [x29, #-124]
  40d668:	cmp	w8, w9
  40d66c:	b.cc	40d688 <method_map_from_machine_user+0x354>  // b.lo, b.ul, b.last
  40d670:	ldur	w8, [x29, #-76]
  40d674:	ldur	w9, [x29, #-124]
  40d678:	ldur	w10, [x29, #-132]
  40d67c:	add	w9, w9, w10
  40d680:	cmp	w8, w9
  40d684:	b.cc	40d68c <method_map_from_machine_user+0x358>  // b.lo, b.ul, b.last
  40d688:	b	40d5d4 <method_map_from_machine_user+0x2a0>
  40d68c:	ldur	w8, [x29, #-76]
  40d690:	ldur	w9, [x29, #-124]
  40d694:	subs	w8, w8, w9
  40d698:	ldur	w9, [x29, #-128]
  40d69c:	add	w8, w8, w9
  40d6a0:	stur	w8, [x29, #-136]
  40d6a4:	ldur	w0, [x29, #-136]
  40d6a8:	bl	405330 <uid_is_valid@plt>
  40d6ac:	tbnz	w0, #0, 40d6d8 <method_map_from_machine_user+0x3a4>
  40d6b0:	ldur	x0, [x29, #-32]
  40d6b4:	ldur	w3, [x29, #-76]
  40d6b8:	ldur	x1, [x29, #-152]
  40d6bc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d6c0:	add	x2, x2, #0xdd6
  40d6c4:	bl	4051b0 <sd_bus_error_setf@plt>
  40d6c8:	stur	w0, [x29, #-4]
  40d6cc:	mov	w8, #0x1                   	// #1
  40d6d0:	stur	w8, [x29, #-84]
  40d6d4:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d6d8:	ldur	x0, [x29, #-16]
  40d6dc:	ldur	w2, [x29, #-136]
  40d6e0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d6e4:	add	x1, x1, #0xbe1
  40d6e8:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40d6ec:	stur	w0, [x29, #-4]
  40d6f0:	mov	w8, #0x1                   	// #1
  40d6f4:	stur	w8, [x29, #-84]
  40d6f8:	b	40d724 <method_map_from_machine_user+0x3f0>
  40d6fc:	ldur	x0, [x29, #-32]
  40d700:	ldur	x3, [x29, #-56]
  40d704:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40d708:	add	x1, x1, #0xe7a
  40d70c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d710:	add	x2, x2, #0xea5
  40d714:	bl	4051b0 <sd_bus_error_setf@plt>
  40d718:	stur	w0, [x29, #-4]
  40d71c:	mov	w8, #0x1                   	// #1
  40d720:	stur	w8, [x29, #-84]
  40d724:	sub	x0, x29, #0x28
  40d728:	bl	411178 <fclosep>
  40d72c:	ldur	w0, [x29, #-4]
  40d730:	mov	sp, x29
  40d734:	ldp	x29, x30, [sp], #16
  40d738:	ret

000000000040d73c <method_map_to_machine_user>:
  40d73c:	sub	sp, sp, #0xf0
  40d740:	stp	x29, x30, [sp, #224]
  40d744:	add	x29, sp, #0xe0
  40d748:	sub	x8, x29, #0x30
  40d74c:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40d750:	add	x9, x9, #0xbe1
  40d754:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40d758:	add	x10, x10, #0xec5
  40d75c:	add	x10, x10, #0x3
  40d760:	sub	x11, x29, #0x34
  40d764:	str	x0, [x8, #32]
  40d768:	str	x1, [x8, #24]
  40d76c:	str	x2, [x8, #16]
  40d770:	ldr	x12, [x8, #24]
  40d774:	str	x12, [x8, #8]
  40d778:	ldr	x0, [x8, #32]
  40d77c:	mov	x1, x9
  40d780:	mov	x2, x11
  40d784:	str	x8, [sp, #24]
  40d788:	str	x10, [sp, #16]
  40d78c:	bl	405170 <sd_bus_message_read@plt>
  40d790:	stur	w0, [x29, #-84]
  40d794:	ldur	w13, [x29, #-84]
  40d798:	cmp	w13, #0x0
  40d79c:	cset	w13, ge  // ge = tcont
  40d7a0:	tbnz	w13, #0, 40d7b0 <method_map_to_machine_user+0x74>
  40d7a4:	ldur	w8, [x29, #-84]
  40d7a8:	stur	w8, [x29, #-4]
  40d7ac:	b	40dbb8 <method_map_to_machine_user+0x47c>
  40d7b0:	ldur	w0, [x29, #-52]
  40d7b4:	bl	405330 <uid_is_valid@plt>
  40d7b8:	tbnz	w0, #0, 40d7e4 <method_map_to_machine_user+0xa8>
  40d7bc:	ldr	x8, [sp, #24]
  40d7c0:	ldr	x0, [x8, #16]
  40d7c4:	ldur	w3, [x29, #-52]
  40d7c8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40d7cc:	add	x1, x1, #0x848
  40d7d0:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d7d4:	add	x2, x2, #0xdd6
  40d7d8:	bl	4051b0 <sd_bus_error_setf@plt>
  40d7dc:	stur	w0, [x29, #-4]
  40d7e0:	b	40dbb8 <method_map_to_machine_user+0x47c>
  40d7e4:	ldur	w8, [x29, #-52]
  40d7e8:	cmp	w8, #0x10, lsl #12
  40d7ec:	b.cs	40d818 <method_map_to_machine_user+0xdc>  // b.hs, b.nlast
  40d7f0:	ldr	x8, [sp, #24]
  40d7f4:	ldr	x0, [x8, #16]
  40d7f8:	ldur	w3, [x29, #-52]
  40d7fc:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40d800:	add	x1, x1, #0xe7a
  40d804:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d808:	add	x2, x2, #0xed1
  40d80c:	bl	4051b0 <sd_bus_error_setf@plt>
  40d810:	stur	w0, [x29, #-4]
  40d814:	b	40dbb8 <method_map_to_machine_user+0x47c>
  40d818:	sub	x8, x29, #0x68
  40d81c:	mov	w9, #0xfffffffe            	// #-2
  40d820:	stur	w9, [x29, #-104]
  40d824:	mov	x10, xzr
  40d828:	str	x10, [x8, #8]
  40d82c:	ldur	q0, [x29, #-104]
  40d830:	stur	q0, [x29, #-80]
  40d834:	ldr	x8, [sp, #24]
  40d838:	ldr	x9, [x8, #8]
  40d83c:	ldr	x0, [x9, #16]
  40d840:	sub	x1, x29, #0x50
  40d844:	sub	x2, x29, #0x30
  40d848:	mov	x9, xzr
  40d84c:	mov	x3, x9
  40d850:	bl	40ed8c <hashmap_iterate>
  40d854:	tbnz	w0, #0, 40d85c <method_map_to_machine_user+0x120>
  40d858:	b	40db94 <method_map_to_machine_user+0x458>
  40d85c:	mov	x8, xzr
  40d860:	str	x8, [sp, #112]
  40d864:	ldr	x8, [sp, #24]
  40d868:	ldr	x9, [x8]
  40d86c:	ldr	w10, [x9, #32]
  40d870:	cbz	w10, 40d880 <method_map_to_machine_user+0x144>
  40d874:	mov	w8, #0x3                   	// #3
  40d878:	str	w8, [sp, #80]
  40d87c:	b	40db64 <method_map_to_machine_user+0x428>
  40d880:	ldr	x8, [sp, #24]
  40d884:	ldr	x9, [x8]
  40d888:	ldr	w3, [x9, #80]
  40d88c:	add	x0, sp, #0x55
  40d890:	mov	x1, #0x1b                  	// #27
  40d894:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40d898:	add	x2, x2, #0xef3
  40d89c:	bl	405090 <snprintf@plt>
  40d8a0:	mov	w1, w0
  40d8a4:	sxtw	x8, w1
  40d8a8:	cmp	x8, #0x1b
  40d8ac:	cset	w10, cc  // cc = lo, ul, last
  40d8b0:	mov	w11, #0x1                   	// #1
  40d8b4:	eor	w10, w10, #0x1
  40d8b8:	eor	w10, w10, w11
  40d8bc:	eor	w10, w10, w11
  40d8c0:	and	w10, w10, #0x1
  40d8c4:	mov	w1, w10
  40d8c8:	sxtw	x8, w1
  40d8cc:	cbz	x8, 40d8f4 <method_map_to_machine_user+0x1b8>
  40d8d0:	mov	w8, wzr
  40d8d4:	mov	w0, w8
  40d8d8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d8dc:	add	x1, x1, #0x919
  40d8e0:	ldr	x2, [sp, #16]
  40d8e4:	mov	w3, #0x3c2                 	// #962
  40d8e8:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40d8ec:	add	x4, x4, #0xf04
  40d8f0:	bl	404bd0 <log_assert_failed_realm@plt>
  40d8f4:	add	x0, sp, #0x55
  40d8f8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40d8fc:	add	x1, x1, #0x93a
  40d900:	bl	4050a0 <fopen64@plt>
  40d904:	str	x0, [sp, #112]
  40d908:	ldr	x8, [sp, #112]
  40d90c:	cbnz	x8, 40d9a0 <method_map_to_machine_user+0x264>
  40d910:	mov	w8, #0x4                   	// #4
  40d914:	str	w8, [sp, #76]
  40d918:	bl	404d50 <__errno_location@plt>
  40d91c:	ldr	w8, [x0]
  40d920:	str	w8, [sp, #72]
  40d924:	str	wzr, [sp, #68]
  40d928:	ldr	w0, [sp, #68]
  40d92c:	bl	404b80 <log_get_max_level_realm@plt>
  40d930:	ldr	w8, [sp, #76]
  40d934:	and	w8, w8, #0x7
  40d938:	cmp	w0, w8
  40d93c:	b.lt	40d978 <method_map_to_machine_user+0x23c>  // b.tstop
  40d940:	ldr	w8, [sp, #68]
  40d944:	ldr	w9, [sp, #76]
  40d948:	orr	w0, w9, w8, lsl #10
  40d94c:	ldr	w1, [sp, #72]
  40d950:	ldr	x2, [sp, #16]
  40d954:	mov	w3, #0x3c5                 	// #965
  40d958:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40d95c:	add	x4, x4, #0xf4d
  40d960:	adrp	x5, 41c000 <machine_hash_ops+0x13e8>
  40d964:	add	x5, x5, #0xf68
  40d968:	add	x6, sp, #0x55
  40d96c:	bl	404b90 <log_internal_realm@plt>
  40d970:	str	w0, [sp, #12]
  40d974:	b	40d98c <method_map_to_machine_user+0x250>
  40d978:	ldr	w0, [sp, #72]
  40d97c:	bl	404ba0 <abs@plt>
  40d980:	mov	w8, wzr
  40d984:	subs	w8, w8, w0, uxtb
  40d988:	str	w8, [sp, #12]
  40d98c:	ldr	w8, [sp, #12]
  40d990:	str	w8, [sp, #64]
  40d994:	mov	w8, #0x3                   	// #3
  40d998:	str	w8, [sp, #80]
  40d99c:	b	40db64 <method_map_to_machine_user+0x428>
  40d9a0:	mov	x8, xzr
  40d9a4:	str	x8, [sp, #56]
  40d9a8:	bl	404d50 <__errno_location@plt>
  40d9ac:	str	wzr, [x0]
  40d9b0:	ldr	x0, [sp, #112]
  40d9b4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40d9b8:	add	x1, x1, #0xe71
  40d9bc:	add	x2, sp, #0x34
  40d9c0:	add	x3, sp, #0x30
  40d9c4:	add	x4, sp, #0x2c
  40d9c8:	bl	4050b0 <__isoc99_fscanf@plt>
  40d9cc:	str	w0, [sp, #36]
  40d9d0:	ldr	w9, [sp, #36]
  40d9d4:	cmp	w9, #0x0
  40d9d8:	cset	w9, ge  // ge = tcont
  40d9dc:	tbnz	w9, #0, 40d9f8 <method_map_to_machine_user+0x2bc>
  40d9e0:	ldr	x0, [sp, #112]
  40d9e4:	bl	405350 <feof@plt>
  40d9e8:	cbz	w0, 40d9f8 <method_map_to_machine_user+0x2bc>
  40d9ec:	mov	w8, #0x6                   	// #6
  40d9f0:	str	w8, [sp, #80]
  40d9f4:	b	40db34 <method_map_to_machine_user+0x3f8>
  40d9f8:	ldr	w8, [sp, #36]
  40d9fc:	cmp	w8, #0x3
  40da00:	b.eq	40da3c <method_map_to_machine_user+0x300>  // b.none
  40da04:	ldr	x0, [sp, #112]
  40da08:	bl	4050c0 <ferror@plt>
  40da0c:	cbz	w0, 40da28 <method_map_to_machine_user+0x2ec>
  40da10:	mov	w0, #0x5                   	// #5
  40da14:	bl	4111a0 <errno_or_else>
  40da18:	stur	w0, [x29, #-4]
  40da1c:	mov	w8, #0x1                   	// #1
  40da20:	str	w8, [sp, #80]
  40da24:	b	40db34 <method_map_to_machine_user+0x3f8>
  40da28:	mov	w8, #0xfffffffb            	// #-5
  40da2c:	stur	w8, [x29, #-4]
  40da30:	mov	w8, #0x1                   	// #1
  40da34:	str	w8, [sp, #80]
  40da38:	b	40db34 <method_map_to_machine_user+0x3f8>
  40da3c:	ldr	w8, [sp, #48]
  40da40:	cbnz	w8, 40da50 <method_map_to_machine_user+0x314>
  40da44:	mov	w8, #0x7                   	// #7
  40da48:	str	w8, [sp, #80]
  40da4c:	b	40db34 <method_map_to_machine_user+0x3f8>
  40da50:	ldur	w8, [x29, #-52]
  40da54:	ldr	w9, [sp, #48]
  40da58:	cmp	w8, w9
  40da5c:	b.cc	40da78 <method_map_to_machine_user+0x33c>  // b.lo, b.ul, b.last
  40da60:	ldur	w8, [x29, #-52]
  40da64:	ldr	w9, [sp, #48]
  40da68:	ldr	w10, [sp, #44]
  40da6c:	add	w9, w9, w10
  40da70:	cmp	w8, w9
  40da74:	b.cc	40da84 <method_map_to_machine_user+0x348>  // b.lo, b.ul, b.last
  40da78:	mov	w8, #0x7                   	// #7
  40da7c:	str	w8, [sp, #80]
  40da80:	b	40db34 <method_map_to_machine_user+0x3f8>
  40da84:	ldur	w8, [x29, #-52]
  40da88:	ldr	w9, [sp, #48]
  40da8c:	subs	w8, w8, w9
  40da90:	ldr	w9, [sp, #52]
  40da94:	add	w8, w8, w9
  40da98:	str	w8, [sp, #40]
  40da9c:	ldr	w0, [sp, #40]
  40daa0:	bl	405330 <uid_is_valid@plt>
  40daa4:	tbnz	w0, #0, 40dad8 <method_map_to_machine_user+0x39c>
  40daa8:	ldr	x8, [sp, #24]
  40daac:	ldr	x0, [x8, #16]
  40dab0:	ldur	w3, [x29, #-52]
  40dab4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40dab8:	add	x1, x1, #0x848
  40dabc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40dac0:	add	x2, x2, #0xdd6
  40dac4:	bl	4051b0 <sd_bus_error_setf@plt>
  40dac8:	stur	w0, [x29, #-4]
  40dacc:	mov	w9, #0x1                   	// #1
  40dad0:	str	w9, [sp, #80]
  40dad4:	b	40db34 <method_map_to_machine_user+0x3f8>
  40dad8:	ldr	x8, [sp, #24]
  40dadc:	ldr	x0, [x8]
  40dae0:	bl	417d3c <machine_bus_path>
  40dae4:	str	x0, [sp, #56]
  40dae8:	ldr	x8, [sp, #56]
  40daec:	cbnz	x8, 40db04 <method_map_to_machine_user+0x3c8>
  40daf0:	mov	w8, #0xfffffff4            	// #-12
  40daf4:	stur	w8, [x29, #-4]
  40daf8:	mov	w8, #0x1                   	// #1
  40dafc:	str	w8, [sp, #80]
  40db00:	b	40db34 <method_map_to_machine_user+0x3f8>
  40db04:	ldr	x8, [sp, #24]
  40db08:	ldr	x0, [x8, #32]
  40db0c:	ldr	x9, [x8]
  40db10:	ldr	x2, [x9, #8]
  40db14:	ldr	x3, [sp, #56]
  40db18:	ldr	w4, [sp, #40]
  40db1c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40db20:	add	x1, x1, #0xe76
  40db24:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40db28:	stur	w0, [x29, #-4]
  40db2c:	mov	w10, #0x1                   	// #1
  40db30:	str	w10, [sp, #80]
  40db34:	add	x0, sp, #0x38
  40db38:	bl	40e940 <freep>
  40db3c:	ldr	w8, [sp, #80]
  40db40:	cmp	w8, #0x6
  40db44:	str	w8, [sp, #8]
  40db48:	b.eq	40db60 <method_map_to_machine_user+0x424>  // b.none
  40db4c:	b	40db50 <method_map_to_machine_user+0x414>
  40db50:	ldr	w8, [sp, #8]
  40db54:	cmp	w8, #0x7
  40db58:	b.eq	40d9a0 <method_map_to_machine_user+0x264>  // b.none
  40db5c:	b	40db64 <method_map_to_machine_user+0x428>
  40db60:	str	wzr, [sp, #80]
  40db64:	add	x0, sp, #0x70
  40db68:	bl	411178 <fclosep>
  40db6c:	ldr	w8, [sp, #80]
  40db70:	str	w8, [sp, #4]
  40db74:	cbz	w8, 40db90 <method_map_to_machine_user+0x454>
  40db78:	b	40db7c <method_map_to_machine_user+0x440>
  40db7c:	ldr	w8, [sp, #4]
  40db80:	cmp	w8, #0x1
  40db84:	b.eq	40dbb8 <method_map_to_machine_user+0x47c>  // b.none
  40db88:	b	40db8c <method_map_to_machine_user+0x450>
  40db8c:	b	40d834 <method_map_to_machine_user+0xf8>
  40db90:	b	40d834 <method_map_to_machine_user+0xf8>
  40db94:	ldr	x8, [sp, #24]
  40db98:	ldr	x0, [x8, #16]
  40db9c:	ldur	w3, [x29, #-52]
  40dba0:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40dba4:	add	x1, x1, #0xe7a
  40dba8:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40dbac:	add	x2, x2, #0xf85
  40dbb0:	bl	4051b0 <sd_bus_error_setf@plt>
  40dbb4:	stur	w0, [x29, #-4]
  40dbb8:	ldur	w0, [x29, #-4]
  40dbbc:	ldp	x29, x30, [sp, #224]
  40dbc0:	add	sp, sp, #0xf0
  40dbc4:	ret

000000000040dbc8 <method_map_from_machine_group>:
  40dbc8:	stp	x29, x30, [sp, #-16]!
  40dbcc:	mov	x29, sp
  40dbd0:	sub	sp, sp, #0xa0
  40dbd4:	mov	x8, xzr
  40dbd8:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40dbdc:	add	x9, x9, #0xe62
  40dbe0:	adrp	x10, 41c000 <machine_hash_ops+0x13e8>
  40dbe4:	add	x10, x10, #0x848
  40dbe8:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  40dbec:	add	x11, x11, #0xec5
  40dbf0:	add	x11, x11, #0x3
  40dbf4:	sub	x12, x29, #0x38
  40dbf8:	sub	x3, x29, #0x4c
  40dbfc:	stur	x0, [x29, #-16]
  40dc00:	stur	x1, [x29, #-24]
  40dc04:	stur	x2, [x29, #-32]
  40dc08:	stur	x8, [x29, #-40]
  40dc0c:	ldur	x8, [x29, #-24]
  40dc10:	stur	x8, [x29, #-48]
  40dc14:	ldur	x0, [x29, #-16]
  40dc18:	mov	x1, x9
  40dc1c:	mov	x2, x12
  40dc20:	stur	x10, [x29, #-152]
  40dc24:	stur	x11, [x29, #-160]
  40dc28:	bl	405170 <sd_bus_message_read@plt>
  40dc2c:	stur	w0, [x29, #-80]
  40dc30:	ldur	w13, [x29, #-80]
  40dc34:	cmp	w13, #0x0
  40dc38:	cset	w13, ge  // ge = tcont
  40dc3c:	tbnz	w13, #0, 40dc54 <method_map_from_machine_group+0x8c>
  40dc40:	ldur	w8, [x29, #-80]
  40dc44:	stur	w8, [x29, #-4]
  40dc48:	mov	w8, #0x1                   	// #1
  40dc4c:	stur	w8, [x29, #-84]
  40dc50:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40dc54:	ldur	w0, [x29, #-76]
  40dc58:	bl	4112a4 <gid_is_valid>
  40dc5c:	tbnz	w0, #0, 40dc88 <method_map_from_machine_group+0xc0>
  40dc60:	ldur	x0, [x29, #-32]
  40dc64:	ldur	w3, [x29, #-76]
  40dc68:	ldur	x1, [x29, #-152]
  40dc6c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40dc70:	add	x2, x2, #0xfa6
  40dc74:	bl	4051b0 <sd_bus_error_setf@plt>
  40dc78:	stur	w0, [x29, #-4]
  40dc7c:	mov	w8, #0x1                   	// #1
  40dc80:	stur	w8, [x29, #-84]
  40dc84:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40dc88:	ldur	x8, [x29, #-48]
  40dc8c:	ldr	x0, [x8, #16]
  40dc90:	ldur	x1, [x29, #-56]
  40dc94:	bl	40e6ec <hashmap_get>
  40dc98:	stur	x0, [x29, #-72]
  40dc9c:	ldur	x8, [x29, #-72]
  40dca0:	cbnz	x8, 40dcd0 <method_map_from_machine_group+0x108>
  40dca4:	ldur	x0, [x29, #-32]
  40dca8:	ldur	x3, [x29, #-56]
  40dcac:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40dcb0:	add	x1, x1, #0x5a4
  40dcb4:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40dcb8:	add	x2, x2, #0x5cb
  40dcbc:	bl	4051b0 <sd_bus_error_setf@plt>
  40dcc0:	stur	w0, [x29, #-4]
  40dcc4:	mov	w8, #0x1                   	// #1
  40dcc8:	stur	w8, [x29, #-84]
  40dccc:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40dcd0:	ldur	x8, [x29, #-72]
  40dcd4:	ldr	w9, [x8, #32]
  40dcd8:	cbz	w9, 40dd00 <method_map_from_machine_group+0x138>
  40dcdc:	ldur	x0, [x29, #-32]
  40dce0:	ldur	x1, [x29, #-152]
  40dce4:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40dce8:	add	x2, x2, #0xde9
  40dcec:	bl	4051b0 <sd_bus_error_setf@plt>
  40dcf0:	stur	w0, [x29, #-4]
  40dcf4:	mov	w8, #0x1                   	// #1
  40dcf8:	stur	w8, [x29, #-84]
  40dcfc:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40dd00:	ldur	x8, [x29, #-72]
  40dd04:	ldr	w9, [x8, #80]
  40dd08:	stur	w9, [x29, #-88]
  40dd0c:	ldur	w9, [x29, #-88]
  40dd10:	cbnz	w9, 40dd24 <method_map_from_machine_group+0x15c>
  40dd14:	adrp	x8, 41c000 <machine_hash_ops+0x13e8>
  40dd18:	add	x8, x8, #0xfba
  40dd1c:	stur	x8, [x29, #-96]
  40dd20:	b	40de1c <method_map_from_machine_group+0x254>
  40dd24:	mov	x8, #0x1b                  	// #27
  40dd28:	stur	x8, [x29, #-104]
  40dd2c:	ldur	x1, [x29, #-104]
  40dd30:	mov	x0, #0x1                   	// #1
  40dd34:	bl	41123c <size_multiply_overflow>
  40dd38:	mov	w8, #0x1                   	// #1
  40dd3c:	eor	w9, w0, #0x1
  40dd40:	eor	w9, w9, w8
  40dd44:	eor	w9, w9, w8
  40dd48:	eor	w8, w9, w8
  40dd4c:	and	w8, w8, #0x1
  40dd50:	mov	w1, w8
  40dd54:	sxtw	x10, w1
  40dd58:	cbz	x10, 40dd80 <method_map_from_machine_group+0x1b8>
  40dd5c:	mov	w8, wzr
  40dd60:	mov	w0, w8
  40dd64:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40dd68:	add	x1, x1, #0x4dd
  40dd6c:	ldur	x2, [x29, #-160]
  40dd70:	mov	w3, #0x405                 	// #1029
  40dd74:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40dd78:	add	x4, x4, #0xfcd
  40dd7c:	bl	404bd0 <log_assert_failed_realm@plt>
  40dd80:	ldur	x8, [x29, #-104]
  40dd84:	mov	x9, #0x1                   	// #1
  40dd88:	mul	x8, x9, x8
  40dd8c:	cmp	x8, #0x400, lsl #12
  40dd90:	cset	w10, ls  // ls = plast
  40dd94:	mov	w11, #0x1                   	// #1
  40dd98:	eor	w10, w10, #0x1
  40dd9c:	eor	w10, w10, w11
  40dda0:	eor	w10, w10, w11
  40dda4:	and	w10, w10, #0x1
  40dda8:	mov	w0, w10
  40ddac:	sxtw	x8, w0
  40ddb0:	cbz	x8, 40ddd8 <method_map_from_machine_group+0x210>
  40ddb4:	mov	w8, wzr
  40ddb8:	mov	w0, w8
  40ddbc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ddc0:	add	x1, x1, #0x508
  40ddc4:	ldur	x2, [x29, #-160]
  40ddc8:	mov	w3, #0x405                 	// #1029
  40ddcc:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ddd0:	add	x4, x4, #0xfcd
  40ddd4:	bl	404bd0 <log_assert_failed_realm@plt>
  40ddd8:	ldur	x8, [x29, #-104]
  40dddc:	mov	x9, #0x1                   	// #1
  40dde0:	mul	x8, x9, x8
  40dde4:	mul	x8, x8, x9
  40dde8:	add	x8, x8, #0xf
  40ddec:	and	x8, x8, #0xfffffffffffffff0
  40ddf0:	mov	x9, sp
  40ddf4:	subs	x8, x9, x8
  40ddf8:	mov	sp, x8
  40ddfc:	stur	x8, [x29, #-112]
  40de00:	ldur	x8, [x29, #-112]
  40de04:	stur	x8, [x29, #-96]
  40de08:	ldur	x0, [x29, #-96]
  40de0c:	ldur	w2, [x29, #-88]
  40de10:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40de14:	add	x1, x1, #0x947
  40de18:	bl	405340 <sprintf@plt>
  40de1c:	ldur	x8, [x29, #-96]
  40de20:	stur	x8, [x29, #-120]
  40de24:	ldur	x8, [x29, #-120]
  40de28:	stur	x8, [x29, #-64]
  40de2c:	ldur	x0, [x29, #-64]
  40de30:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40de34:	add	x1, x1, #0x93a
  40de38:	bl	4050a0 <fopen64@plt>
  40de3c:	stur	x0, [x29, #-40]
  40de40:	ldur	x8, [x29, #-40]
  40de44:	cbnz	x8, 40de68 <method_map_from_machine_group+0x2a0>
  40de48:	bl	404d50 <__errno_location@plt>
  40de4c:	ldr	w8, [x0]
  40de50:	mov	w9, wzr
  40de54:	subs	w8, w9, w8
  40de58:	stur	w8, [x29, #-4]
  40de5c:	mov	w8, #0x1                   	// #1
  40de60:	stur	w8, [x29, #-84]
  40de64:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40de68:	bl	404d50 <__errno_location@plt>
  40de6c:	str	wzr, [x0]
  40de70:	ldur	x0, [x29, #-40]
  40de74:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40de78:	add	x1, x1, #0xe71
  40de7c:	sub	x2, x29, #0x7c
  40de80:	sub	x3, x29, #0x80
  40de84:	sub	x4, x29, #0x84
  40de88:	bl	4050b0 <__isoc99_fscanf@plt>
  40de8c:	stur	w0, [x29, #-140]
  40de90:	ldur	w8, [x29, #-140]
  40de94:	cmp	w8, #0x0
  40de98:	cset	w8, ge  // ge = tcont
  40de9c:	tbnz	w8, #0, 40deb0 <method_map_from_machine_group+0x2e8>
  40dea0:	ldur	x0, [x29, #-40]
  40dea4:	bl	405350 <feof@plt>
  40dea8:	cbz	w0, 40deb0 <method_map_from_machine_group+0x2e8>
  40deac:	b	40df90 <method_map_from_machine_group+0x3c8>
  40deb0:	ldur	w8, [x29, #-140]
  40deb4:	cmp	w8, #0x3
  40deb8:	b.eq	40def4 <method_map_from_machine_group+0x32c>  // b.none
  40debc:	ldur	x0, [x29, #-40]
  40dec0:	bl	4050c0 <ferror@plt>
  40dec4:	cbz	w0, 40dee0 <method_map_from_machine_group+0x318>
  40dec8:	mov	w0, #0x5                   	// #5
  40decc:	bl	4111a0 <errno_or_else>
  40ded0:	stur	w0, [x29, #-4]
  40ded4:	mov	w8, #0x1                   	// #1
  40ded8:	stur	w8, [x29, #-84]
  40dedc:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40dee0:	mov	w8, #0xfffffffb            	// #-5
  40dee4:	stur	w8, [x29, #-4]
  40dee8:	mov	w8, #0x1                   	// #1
  40deec:	stur	w8, [x29, #-84]
  40def0:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40def4:	ldur	w8, [x29, #-76]
  40def8:	ldur	w9, [x29, #-124]
  40defc:	cmp	w8, w9
  40df00:	b.cc	40df1c <method_map_from_machine_group+0x354>  // b.lo, b.ul, b.last
  40df04:	ldur	w8, [x29, #-76]
  40df08:	ldur	w9, [x29, #-124]
  40df0c:	ldur	w10, [x29, #-132]
  40df10:	add	w9, w9, w10
  40df14:	cmp	w8, w9
  40df18:	b.cc	40df20 <method_map_from_machine_group+0x358>  // b.lo, b.ul, b.last
  40df1c:	b	40de68 <method_map_from_machine_group+0x2a0>
  40df20:	ldur	w8, [x29, #-76]
  40df24:	ldur	w9, [x29, #-124]
  40df28:	subs	w8, w8, w9
  40df2c:	ldur	w9, [x29, #-128]
  40df30:	add	w8, w8, w9
  40df34:	stur	w8, [x29, #-136]
  40df38:	ldur	w0, [x29, #-136]
  40df3c:	bl	4112a4 <gid_is_valid>
  40df40:	tbnz	w0, #0, 40df6c <method_map_from_machine_group+0x3a4>
  40df44:	ldur	x0, [x29, #-32]
  40df48:	ldur	w3, [x29, #-76]
  40df4c:	ldur	x1, [x29, #-152]
  40df50:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40df54:	add	x2, x2, #0xfa6
  40df58:	bl	4051b0 <sd_bus_error_setf@plt>
  40df5c:	stur	w0, [x29, #-4]
  40df60:	mov	w8, #0x1                   	// #1
  40df64:	stur	w8, [x29, #-84]
  40df68:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40df6c:	ldur	x0, [x29, #-16]
  40df70:	ldur	w2, [x29, #-136]
  40df74:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40df78:	add	x1, x1, #0xbe1
  40df7c:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40df80:	stur	w0, [x29, #-4]
  40df84:	mov	w8, #0x1                   	// #1
  40df88:	stur	w8, [x29, #-84]
  40df8c:	b	40dfb8 <method_map_from_machine_group+0x3f0>
  40df90:	ldur	x0, [x29, #-32]
  40df94:	ldur	x3, [x29, #-56]
  40df98:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  40df9c:	add	x1, x1, #0x19
  40dfa0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  40dfa4:	add	x2, x2, #0x45
  40dfa8:	bl	4051b0 <sd_bus_error_setf@plt>
  40dfac:	stur	w0, [x29, #-4]
  40dfb0:	mov	w8, #0x1                   	// #1
  40dfb4:	stur	w8, [x29, #-84]
  40dfb8:	sub	x0, x29, #0x28
  40dfbc:	bl	411178 <fclosep>
  40dfc0:	ldur	w0, [x29, #-4]
  40dfc4:	mov	sp, x29
  40dfc8:	ldp	x29, x30, [sp], #16
  40dfcc:	ret

000000000040dfd0 <method_map_to_machine_group>:
  40dfd0:	sub	sp, sp, #0xf0
  40dfd4:	stp	x29, x30, [sp, #224]
  40dfd8:	add	x29, sp, #0xe0
  40dfdc:	sub	x8, x29, #0x30
  40dfe0:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40dfe4:	add	x9, x9, #0xbe1
  40dfe8:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40dfec:	add	x10, x10, #0xec5
  40dff0:	add	x10, x10, #0x3
  40dff4:	sub	x11, x29, #0x34
  40dff8:	str	x0, [x8, #32]
  40dffc:	str	x1, [x8, #24]
  40e000:	str	x2, [x8, #16]
  40e004:	ldr	x12, [x8, #24]
  40e008:	str	x12, [x8, #8]
  40e00c:	ldr	x0, [x8, #32]
  40e010:	mov	x1, x9
  40e014:	mov	x2, x11
  40e018:	str	x8, [sp, #24]
  40e01c:	str	x10, [sp, #16]
  40e020:	bl	405170 <sd_bus_message_read@plt>
  40e024:	stur	w0, [x29, #-84]
  40e028:	ldur	w13, [x29, #-84]
  40e02c:	cmp	w13, #0x0
  40e030:	cset	w13, ge  // ge = tcont
  40e034:	tbnz	w13, #0, 40e044 <method_map_to_machine_group+0x74>
  40e038:	ldur	w8, [x29, #-84]
  40e03c:	stur	w8, [x29, #-4]
  40e040:	b	40e44c <method_map_to_machine_group+0x47c>
  40e044:	ldur	w0, [x29, #-52]
  40e048:	bl	4112a4 <gid_is_valid>
  40e04c:	tbnz	w0, #0, 40e078 <method_map_to_machine_group+0xa8>
  40e050:	ldr	x8, [sp, #24]
  40e054:	ldr	x0, [x8, #16]
  40e058:	ldur	w3, [x29, #-52]
  40e05c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40e060:	add	x1, x1, #0x848
  40e064:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40e068:	add	x2, x2, #0xfa6
  40e06c:	bl	4051b0 <sd_bus_error_setf@plt>
  40e070:	stur	w0, [x29, #-4]
  40e074:	b	40e44c <method_map_to_machine_group+0x47c>
  40e078:	ldur	w8, [x29, #-52]
  40e07c:	cmp	w8, #0x10, lsl #12
  40e080:	b.cs	40e0ac <method_map_to_machine_group+0xdc>  // b.hs, b.nlast
  40e084:	ldr	x8, [sp, #24]
  40e088:	ldr	x0, [x8, #16]
  40e08c:	ldur	w3, [x29, #-52]
  40e090:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  40e094:	add	x1, x1, #0x19
  40e098:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  40e09c:	add	x2, x2, #0x72
  40e0a0:	bl	4051b0 <sd_bus_error_setf@plt>
  40e0a4:	stur	w0, [x29, #-4]
  40e0a8:	b	40e44c <method_map_to_machine_group+0x47c>
  40e0ac:	sub	x8, x29, #0x68
  40e0b0:	mov	w9, #0xfffffffe            	// #-2
  40e0b4:	stur	w9, [x29, #-104]
  40e0b8:	mov	x10, xzr
  40e0bc:	str	x10, [x8, #8]
  40e0c0:	ldur	q0, [x29, #-104]
  40e0c4:	stur	q0, [x29, #-80]
  40e0c8:	ldr	x8, [sp, #24]
  40e0cc:	ldr	x9, [x8, #8]
  40e0d0:	ldr	x0, [x9, #16]
  40e0d4:	sub	x1, x29, #0x50
  40e0d8:	sub	x2, x29, #0x30
  40e0dc:	mov	x9, xzr
  40e0e0:	mov	x3, x9
  40e0e4:	bl	40ed8c <hashmap_iterate>
  40e0e8:	tbnz	w0, #0, 40e0f0 <method_map_to_machine_group+0x120>
  40e0ec:	b	40e428 <method_map_to_machine_group+0x458>
  40e0f0:	mov	x8, xzr
  40e0f4:	str	x8, [sp, #112]
  40e0f8:	ldr	x8, [sp, #24]
  40e0fc:	ldr	x9, [x8]
  40e100:	ldr	w10, [x9, #32]
  40e104:	cbz	w10, 40e114 <method_map_to_machine_group+0x144>
  40e108:	mov	w8, #0x3                   	// #3
  40e10c:	str	w8, [sp, #80]
  40e110:	b	40e3f8 <method_map_to_machine_group+0x428>
  40e114:	ldr	x8, [sp, #24]
  40e118:	ldr	x9, [x8]
  40e11c:	ldr	w3, [x9, #80]
  40e120:	add	x0, sp, #0x55
  40e124:	mov	x1, #0x1b                  	// #27
  40e128:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  40e12c:	add	x2, x2, #0x95
  40e130:	bl	405090 <snprintf@plt>
  40e134:	mov	w1, w0
  40e138:	sxtw	x8, w1
  40e13c:	cmp	x8, #0x1b
  40e140:	cset	w10, cc  // cc = lo, ul, last
  40e144:	mov	w11, #0x1                   	// #1
  40e148:	eor	w10, w10, #0x1
  40e14c:	eor	w10, w10, w11
  40e150:	eor	w10, w10, w11
  40e154:	and	w10, w10, #0x1
  40e158:	mov	w1, w10
  40e15c:	sxtw	x8, w1
  40e160:	cbz	x8, 40e188 <method_map_to_machine_group+0x1b8>
  40e164:	mov	w8, wzr
  40e168:	mov	w0, w8
  40e16c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e170:	add	x1, x1, #0x919
  40e174:	ldr	x2, [sp, #16]
  40e178:	mov	w3, #0x43c                 	// #1084
  40e17c:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  40e180:	add	x4, x4, #0xa6
  40e184:	bl	404bd0 <log_assert_failed_realm@plt>
  40e188:	add	x0, sp, #0x55
  40e18c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e190:	add	x1, x1, #0x93a
  40e194:	bl	4050a0 <fopen64@plt>
  40e198:	str	x0, [sp, #112]
  40e19c:	ldr	x8, [sp, #112]
  40e1a0:	cbnz	x8, 40e234 <method_map_to_machine_group+0x264>
  40e1a4:	mov	w8, #0x4                   	// #4
  40e1a8:	str	w8, [sp, #76]
  40e1ac:	bl	404d50 <__errno_location@plt>
  40e1b0:	ldr	w8, [x0]
  40e1b4:	str	w8, [sp, #72]
  40e1b8:	str	wzr, [sp, #68]
  40e1bc:	ldr	w0, [sp, #68]
  40e1c0:	bl	404b80 <log_get_max_level_realm@plt>
  40e1c4:	ldr	w8, [sp, #76]
  40e1c8:	and	w8, w8, #0x7
  40e1cc:	cmp	w0, w8
  40e1d0:	b.lt	40e20c <method_map_to_machine_group+0x23c>  // b.tstop
  40e1d4:	ldr	w8, [sp, #68]
  40e1d8:	ldr	w9, [sp, #76]
  40e1dc:	orr	w0, w9, w8, lsl #10
  40e1e0:	ldr	w1, [sp, #72]
  40e1e4:	ldr	x2, [sp, #16]
  40e1e8:	mov	w3, #0x43f                 	// #1087
  40e1ec:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  40e1f0:	add	x4, x4, #0xf0
  40e1f4:	adrp	x5, 41c000 <machine_hash_ops+0x13e8>
  40e1f8:	add	x5, x5, #0xf68
  40e1fc:	add	x6, sp, #0x55
  40e200:	bl	404b90 <log_internal_realm@plt>
  40e204:	str	w0, [sp, #12]
  40e208:	b	40e220 <method_map_to_machine_group+0x250>
  40e20c:	ldr	w0, [sp, #72]
  40e210:	bl	404ba0 <abs@plt>
  40e214:	mov	w8, wzr
  40e218:	subs	w8, w8, w0, uxtb
  40e21c:	str	w8, [sp, #12]
  40e220:	ldr	w8, [sp, #12]
  40e224:	str	w8, [sp, #64]
  40e228:	mov	w8, #0x3                   	// #3
  40e22c:	str	w8, [sp, #80]
  40e230:	b	40e3f8 <method_map_to_machine_group+0x428>
  40e234:	mov	x8, xzr
  40e238:	str	x8, [sp, #56]
  40e23c:	bl	404d50 <__errno_location@plt>
  40e240:	str	wzr, [x0]
  40e244:	ldr	x0, [sp, #112]
  40e248:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40e24c:	add	x1, x1, #0xe71
  40e250:	add	x2, sp, #0x34
  40e254:	add	x3, sp, #0x30
  40e258:	add	x4, sp, #0x2c
  40e25c:	bl	4050b0 <__isoc99_fscanf@plt>
  40e260:	str	w0, [sp, #36]
  40e264:	ldr	w9, [sp, #36]
  40e268:	cmp	w9, #0x0
  40e26c:	cset	w9, ge  // ge = tcont
  40e270:	tbnz	w9, #0, 40e28c <method_map_to_machine_group+0x2bc>
  40e274:	ldr	x0, [sp, #112]
  40e278:	bl	405350 <feof@plt>
  40e27c:	cbz	w0, 40e28c <method_map_to_machine_group+0x2bc>
  40e280:	mov	w8, #0x6                   	// #6
  40e284:	str	w8, [sp, #80]
  40e288:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e28c:	ldr	w8, [sp, #36]
  40e290:	cmp	w8, #0x3
  40e294:	b.eq	40e2d0 <method_map_to_machine_group+0x300>  // b.none
  40e298:	ldr	x0, [sp, #112]
  40e29c:	bl	4050c0 <ferror@plt>
  40e2a0:	cbz	w0, 40e2bc <method_map_to_machine_group+0x2ec>
  40e2a4:	mov	w0, #0x5                   	// #5
  40e2a8:	bl	4111a0 <errno_or_else>
  40e2ac:	stur	w0, [x29, #-4]
  40e2b0:	mov	w8, #0x1                   	// #1
  40e2b4:	str	w8, [sp, #80]
  40e2b8:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e2bc:	mov	w8, #0xfffffffb            	// #-5
  40e2c0:	stur	w8, [x29, #-4]
  40e2c4:	mov	w8, #0x1                   	// #1
  40e2c8:	str	w8, [sp, #80]
  40e2cc:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e2d0:	ldr	w8, [sp, #48]
  40e2d4:	cbnz	w8, 40e2e4 <method_map_to_machine_group+0x314>
  40e2d8:	mov	w8, #0x7                   	// #7
  40e2dc:	str	w8, [sp, #80]
  40e2e0:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e2e4:	ldur	w8, [x29, #-52]
  40e2e8:	ldr	w9, [sp, #48]
  40e2ec:	cmp	w8, w9
  40e2f0:	b.cc	40e30c <method_map_to_machine_group+0x33c>  // b.lo, b.ul, b.last
  40e2f4:	ldur	w8, [x29, #-52]
  40e2f8:	ldr	w9, [sp, #48]
  40e2fc:	ldr	w10, [sp, #44]
  40e300:	add	w9, w9, w10
  40e304:	cmp	w8, w9
  40e308:	b.cc	40e318 <method_map_to_machine_group+0x348>  // b.lo, b.ul, b.last
  40e30c:	mov	w8, #0x7                   	// #7
  40e310:	str	w8, [sp, #80]
  40e314:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e318:	ldur	w8, [x29, #-52]
  40e31c:	ldr	w9, [sp, #48]
  40e320:	subs	w8, w8, w9
  40e324:	ldr	w9, [sp, #52]
  40e328:	add	w8, w8, w9
  40e32c:	str	w8, [sp, #40]
  40e330:	ldr	w0, [sp, #40]
  40e334:	bl	4112a4 <gid_is_valid>
  40e338:	tbnz	w0, #0, 40e36c <method_map_to_machine_group+0x39c>
  40e33c:	ldr	x8, [sp, #24]
  40e340:	ldr	x0, [x8, #16]
  40e344:	ldur	w3, [x29, #-52]
  40e348:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40e34c:	add	x1, x1, #0x848
  40e350:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40e354:	add	x2, x2, #0xfa6
  40e358:	bl	4051b0 <sd_bus_error_setf@plt>
  40e35c:	stur	w0, [x29, #-4]
  40e360:	mov	w9, #0x1                   	// #1
  40e364:	str	w9, [sp, #80]
  40e368:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e36c:	ldr	x8, [sp, #24]
  40e370:	ldr	x0, [x8]
  40e374:	bl	417d3c <machine_bus_path>
  40e378:	str	x0, [sp, #56]
  40e37c:	ldr	x8, [sp, #56]
  40e380:	cbnz	x8, 40e398 <method_map_to_machine_group+0x3c8>
  40e384:	mov	w8, #0xfffffff4            	// #-12
  40e388:	stur	w8, [x29, #-4]
  40e38c:	mov	w8, #0x1                   	// #1
  40e390:	str	w8, [sp, #80]
  40e394:	b	40e3c8 <method_map_to_machine_group+0x3f8>
  40e398:	ldr	x8, [sp, #24]
  40e39c:	ldr	x0, [x8, #32]
  40e3a0:	ldr	x9, [x8]
  40e3a4:	ldr	x2, [x9, #8]
  40e3a8:	ldr	x3, [sp, #56]
  40e3ac:	ldr	w4, [sp, #40]
  40e3b0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e3b4:	add	x1, x1, #0xe76
  40e3b8:	bl	4051c0 <sd_bus_reply_method_return@plt>
  40e3bc:	stur	w0, [x29, #-4]
  40e3c0:	mov	w10, #0x1                   	// #1
  40e3c4:	str	w10, [sp, #80]
  40e3c8:	add	x0, sp, #0x38
  40e3cc:	bl	40e940 <freep>
  40e3d0:	ldr	w8, [sp, #80]
  40e3d4:	cmp	w8, #0x6
  40e3d8:	str	w8, [sp, #8]
  40e3dc:	b.eq	40e3f4 <method_map_to_machine_group+0x424>  // b.none
  40e3e0:	b	40e3e4 <method_map_to_machine_group+0x414>
  40e3e4:	ldr	w8, [sp, #8]
  40e3e8:	cmp	w8, #0x7
  40e3ec:	b.eq	40e234 <method_map_to_machine_group+0x264>  // b.none
  40e3f0:	b	40e3f8 <method_map_to_machine_group+0x428>
  40e3f4:	str	wzr, [sp, #80]
  40e3f8:	add	x0, sp, #0x70
  40e3fc:	bl	411178 <fclosep>
  40e400:	ldr	w8, [sp, #80]
  40e404:	str	w8, [sp, #4]
  40e408:	cbz	w8, 40e424 <method_map_to_machine_group+0x454>
  40e40c:	b	40e410 <method_map_to_machine_group+0x440>
  40e410:	ldr	w8, [sp, #4]
  40e414:	cmp	w8, #0x1
  40e418:	b.eq	40e44c <method_map_to_machine_group+0x47c>  // b.none
  40e41c:	b	40e420 <method_map_to_machine_group+0x450>
  40e420:	b	40e0c8 <method_map_to_machine_group+0xf8>
  40e424:	b	40e0c8 <method_map_to_machine_group+0xf8>
  40e428:	ldr	x8, [sp, #24]
  40e42c:	ldr	x0, [x8, #16]
  40e430:	ldur	w3, [x29, #-52]
  40e434:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  40e438:	add	x1, x1, #0x19
  40e43c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  40e440:	add	x2, x2, #0x10c
  40e444:	bl	4051b0 <sd_bus_error_setf@plt>
  40e448:	stur	w0, [x29, #-4]
  40e44c:	ldur	w0, [x29, #-4]
  40e450:	ldp	x29, x30, [sp, #224]
  40e454:	add	sp, sp, #0xf0
  40e458:	ret

000000000040e45c <match_job_removed>:
  40e45c:	sub	sp, sp, #0xa0
  40e460:	stp	x29, x30, [sp, #144]
  40e464:	add	x29, sp, #0x90
  40e468:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40e46c:	add	x8, x8, #0xec5
  40e470:	add	x8, x8, #0x3
  40e474:	stur	x0, [x29, #-16]
  40e478:	stur	x1, [x29, #-24]
  40e47c:	stur	x2, [x29, #-32]
  40e480:	ldur	x9, [x29, #-24]
  40e484:	stur	x9, [x29, #-64]
  40e488:	str	x8, [sp, #16]
  40e48c:	ldur	x8, [x29, #-16]
  40e490:	cmp	x8, #0x0
  40e494:	cset	w9, ne  // ne = any
  40e498:	mov	w10, #0x1                   	// #1
  40e49c:	eor	w9, w9, #0x1
  40e4a0:	eor	w9, w9, w10
  40e4a4:	eor	w9, w9, w10
  40e4a8:	and	w9, w9, #0x1
  40e4ac:	mov	w0, w9
  40e4b0:	sxtw	x8, w0
  40e4b4:	cbz	x8, 40e4dc <match_job_removed+0x80>
  40e4b8:	mov	w8, wzr
  40e4bc:	mov	w0, w8
  40e4c0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e4c4:	add	x1, x1, #0xebd
  40e4c8:	ldr	x2, [sp, #16]
  40e4cc:	mov	w3, #0x49f                 	// #1183
  40e4d0:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40e4d4:	add	x4, x4, #0xee4
  40e4d8:	bl	404bd0 <log_assert_failed_realm@plt>
  40e4dc:	ldur	x8, [x29, #-64]
  40e4e0:	cmp	x8, #0x0
  40e4e4:	cset	w9, ne  // ne = any
  40e4e8:	mov	w10, #0x1                   	// #1
  40e4ec:	eor	w9, w9, #0x1
  40e4f0:	eor	w9, w9, w10
  40e4f4:	eor	w9, w9, w10
  40e4f8:	and	w9, w9, #0x1
  40e4fc:	mov	w0, w9
  40e500:	sxtw	x8, w0
  40e504:	cbz	x8, 40e52c <match_job_removed+0xd0>
  40e508:	mov	w8, wzr
  40e50c:	mov	w0, w8
  40e510:	adrp	x1, 41a000 <operation_new+0x40>
  40e514:	add	x1, x1, #0xe18
  40e518:	ldr	x2, [sp, #16]
  40e51c:	mov	w3, #0x4a0                 	// #1184
  40e520:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40e524:	add	x4, x4, #0xee4
  40e528:	bl	404bd0 <log_assert_failed_realm@plt>
  40e52c:	ldur	x0, [x29, #-16]
  40e530:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e534:	add	x1, x1, #0xf24
  40e538:	add	x2, sp, #0x44
  40e53c:	sub	x3, x29, #0x28
  40e540:	sub	x4, x29, #0x38
  40e544:	sub	x5, x29, #0x30
  40e548:	bl	405170 <sd_bus_message_read@plt>
  40e54c:	str	w0, [sp, #64]
  40e550:	ldr	w8, [sp, #64]
  40e554:	cmp	w8, #0x0
  40e558:	cset	w8, ge  // ge = tcont
  40e55c:	tbnz	w8, #0, 40e5e4 <match_job_removed+0x188>
  40e560:	mov	w8, #0x3                   	// #3
  40e564:	str	w8, [sp, #60]
  40e568:	ldr	w8, [sp, #64]
  40e56c:	str	w8, [sp, #56]
  40e570:	str	wzr, [sp, #52]
  40e574:	ldr	w0, [sp, #52]
  40e578:	bl	404b80 <log_get_max_level_realm@plt>
  40e57c:	ldr	w8, [sp, #60]
  40e580:	and	w8, w8, #0x7
  40e584:	cmp	w0, w8
  40e588:	b.lt	40e5c0 <match_job_removed+0x164>  // b.tstop
  40e58c:	ldr	w8, [sp, #52]
  40e590:	ldr	w9, [sp, #60]
  40e594:	orr	w0, w9, w8, lsl #10
  40e598:	ldr	w1, [sp, #56]
  40e59c:	ldr	x2, [sp, #16]
  40e5a0:	mov	w3, #0x4a4                 	// #1188
  40e5a4:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40e5a8:	add	x4, x4, #0xf29
  40e5ac:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40e5b0:	add	x5, x5, #0xf3b
  40e5b4:	bl	404b90 <log_internal_realm@plt>
  40e5b8:	str	w0, [sp, #12]
  40e5bc:	b	40e5d4 <match_job_removed+0x178>
  40e5c0:	ldr	w0, [sp, #56]
  40e5c4:	bl	404ba0 <abs@plt>
  40e5c8:	mov	w8, wzr
  40e5cc:	subs	w8, w8, w0, uxtb
  40e5d0:	str	w8, [sp, #12]
  40e5d4:	ldr	w8, [sp, #12]
  40e5d8:	str	w8, [sp, #48]
  40e5dc:	stur	wzr, [x29, #-4]
  40e5e0:	b	40e6dc <match_job_removed+0x280>
  40e5e4:	ldur	x8, [x29, #-64]
  40e5e8:	ldr	x0, [x8, #24]
  40e5ec:	ldur	x1, [x29, #-56]
  40e5f0:	bl	40e6ec <hashmap_get>
  40e5f4:	str	x0, [sp, #72]
  40e5f8:	ldr	x8, [sp, #72]
  40e5fc:	cbnz	x8, 40e608 <match_job_removed+0x1ac>
  40e600:	stur	wzr, [x29, #-4]
  40e604:	b	40e6dc <match_job_removed+0x280>
  40e608:	ldur	x0, [x29, #-40]
  40e60c:	ldr	x8, [sp, #72]
  40e610:	ldr	x1, [x8, #72]
  40e614:	bl	40e718 <streq_ptr>
  40e618:	tbnz	w0, #0, 40e620 <match_job_removed+0x1c4>
  40e61c:	b	40e6d0 <match_job_removed+0x274>
  40e620:	ldr	x8, [sp, #72]
  40e624:	ldr	x0, [x8, #72]
  40e628:	bl	40e750 <mfree>
  40e62c:	ldr	x8, [sp, #72]
  40e630:	str	x0, [x8, #72]
  40e634:	ldr	x8, [sp, #72]
  40e638:	ldrb	w9, [x8, #104]
  40e63c:	mov	w10, #0x1                   	// #1
  40e640:	lsr	w9, w9, w10
  40e644:	and	w9, w9, w10
  40e648:	tbnz	w9, #0, 40e650 <match_job_removed+0x1f4>
  40e64c:	b	40e6c8 <match_job_removed+0x26c>
  40e650:	ldur	x0, [x29, #-48]
  40e654:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e658:	add	x1, x1, #0xf5b
  40e65c:	bl	404e40 <strcmp@plt>
  40e660:	cbnz	w0, 40e678 <match_job_removed+0x21c>
  40e664:	ldr	x0, [sp, #72]
  40e668:	mov	x8, xzr
  40e66c:	mov	x1, x8
  40e670:	bl	418198 <machine_send_create_reply>
  40e674:	b	40e6c8 <match_job_removed+0x26c>
  40e678:	add	x8, sp, #0x18
  40e67c:	str	xzr, [sp, #24]
  40e680:	str	xzr, [sp, #32]
  40e684:	str	xzr, [sp, #40]
  40e688:	ldur	x3, [x29, #-56]
  40e68c:	ldur	x4, [x29, #-48]
  40e690:	mov	x0, x8
  40e694:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e698:	add	x1, x1, #0xf60
  40e69c:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40e6a0:	add	x2, x2, #0xf83
  40e6a4:	str	x8, [sp]
  40e6a8:	bl	4051b0 <sd_bus_error_setf@plt>
  40e6ac:	ldr	x8, [sp, #72]
  40e6b0:	mov	x0, x8
  40e6b4:	ldr	x1, [sp]
  40e6b8:	bl	418198 <machine_send_create_reply>
  40e6bc:	ldr	x8, [sp]
  40e6c0:	mov	x0, x8
  40e6c4:	bl	404e90 <sd_bus_error_free@plt>
  40e6c8:	ldr	x0, [sp, #72]
  40e6cc:	bl	408328 <machine_save>
  40e6d0:	ldr	x0, [sp, #72]
  40e6d4:	bl	409e88 <machine_add_to_gc_queue>
  40e6d8:	stur	wzr, [x29, #-4]
  40e6dc:	ldur	w0, [x29, #-4]
  40e6e0:	ldp	x29, x30, [sp, #144]
  40e6e4:	add	sp, sp, #0xa0
  40e6e8:	ret

000000000040e6ec <hashmap_get>:
  40e6ec:	sub	sp, sp, #0x20
  40e6f0:	stp	x29, x30, [sp, #16]
  40e6f4:	add	x29, sp, #0x10
  40e6f8:	str	x0, [sp, #8]
  40e6fc:	str	x1, [sp]
  40e700:	ldr	x0, [sp, #8]
  40e704:	ldr	x1, [sp]
  40e708:	bl	405360 <internal_hashmap_get@plt>
  40e70c:	ldp	x29, x30, [sp, #16]
  40e710:	add	sp, sp, #0x20
  40e714:	ret

000000000040e718 <streq_ptr>:
  40e718:	sub	sp, sp, #0x20
  40e71c:	stp	x29, x30, [sp, #16]
  40e720:	add	x29, sp, #0x10
  40e724:	str	x0, [sp, #8]
  40e728:	str	x1, [sp]
  40e72c:	ldr	x0, [sp, #8]
  40e730:	ldr	x1, [sp]
  40e734:	bl	405370 <strcmp_ptr@plt>
  40e738:	cmp	w0, #0x0
  40e73c:	cset	w8, eq  // eq = none
  40e740:	and	w0, w8, #0x1
  40e744:	ldp	x29, x30, [sp, #16]
  40e748:	add	sp, sp, #0x20
  40e74c:	ret

000000000040e750 <mfree>:
  40e750:	sub	sp, sp, #0x20
  40e754:	stp	x29, x30, [sp, #16]
  40e758:	add	x29, sp, #0x10
  40e75c:	mov	x8, xzr
  40e760:	str	x0, [sp, #8]
  40e764:	ldr	x0, [sp, #8]
  40e768:	str	x8, [sp]
  40e76c:	bl	404cb0 <free@plt>
  40e770:	ldr	x0, [sp]
  40e774:	ldp	x29, x30, [sp, #16]
  40e778:	add	sp, sp, #0x20
  40e77c:	ret

000000000040e780 <match_properties_changed>:
  40e780:	sub	sp, sp, #0x60
  40e784:	stp	x29, x30, [sp, #80]
  40e788:	add	x29, sp, #0x50
  40e78c:	mov	x8, xzr
  40e790:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40e794:	add	x9, x9, #0xec5
  40e798:	add	x9, x9, #0x3
  40e79c:	stur	x0, [x29, #-16]
  40e7a0:	stur	x1, [x29, #-24]
  40e7a4:	stur	x2, [x29, #-32]
  40e7a8:	str	x8, [sp, #40]
  40e7ac:	ldur	x8, [x29, #-24]
  40e7b0:	str	x8, [sp, #24]
  40e7b4:	str	x9, [sp]
  40e7b8:	ldur	x8, [x29, #-16]
  40e7bc:	cmp	x8, #0x0
  40e7c0:	cset	w9, ne  // ne = any
  40e7c4:	mov	w10, #0x1                   	// #1
  40e7c8:	eor	w9, w9, #0x1
  40e7cc:	eor	w9, w9, w10
  40e7d0:	eor	w9, w9, w10
  40e7d4:	and	w9, w9, #0x1
  40e7d8:	mov	w0, w9
  40e7dc:	sxtw	x8, w0
  40e7e0:	cbz	x8, 40e808 <match_properties_changed+0x88>
  40e7e4:	mov	w8, wzr
  40e7e8:	mov	w0, w8
  40e7ec:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e7f0:	add	x1, x1, #0xebd
  40e7f4:	ldr	x2, [sp]
  40e7f8:	mov	w3, #0x4c9                 	// #1225
  40e7fc:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40e800:	add	x4, x4, #0xfaa
  40e804:	bl	404bd0 <log_assert_failed_realm@plt>
  40e808:	ldr	x8, [sp, #24]
  40e80c:	cmp	x8, #0x0
  40e810:	cset	w9, ne  // ne = any
  40e814:	mov	w10, #0x1                   	// #1
  40e818:	eor	w9, w9, #0x1
  40e81c:	eor	w9, w9, w10
  40e820:	eor	w9, w9, w10
  40e824:	and	w9, w9, #0x1
  40e828:	mov	w0, w9
  40e82c:	sxtw	x8, w0
  40e830:	cbz	x8, 40e858 <match_properties_changed+0xd8>
  40e834:	mov	w8, wzr
  40e838:	mov	w0, w8
  40e83c:	adrp	x1, 41a000 <operation_new+0x40>
  40e840:	add	x1, x1, #0xe18
  40e844:	ldr	x2, [sp]
  40e848:	mov	w3, #0x4ca                 	// #1226
  40e84c:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  40e850:	add	x4, x4, #0xfaa
  40e854:	bl	404bd0 <log_assert_failed_realm@plt>
  40e858:	ldur	x0, [x29, #-16]
  40e85c:	bl	405380 <sd_bus_message_get_path@plt>
  40e860:	str	x0, [sp, #32]
  40e864:	ldr	x8, [sp, #32]
  40e868:	cbnz	x8, 40e87c <match_properties_changed+0xfc>
  40e86c:	stur	wzr, [x29, #-4]
  40e870:	mov	w8, #0x1                   	// #1
  40e874:	str	w8, [sp, #8]
  40e878:	b	40e928 <match_properties_changed+0x1a8>
  40e87c:	ldr	x0, [sp, #32]
  40e880:	add	x1, sp, #0x28
  40e884:	bl	405390 <unit_name_from_dbus_path@plt>
  40e888:	str	w0, [sp, #12]
  40e88c:	ldr	w8, [sp, #12]
  40e890:	mov	w9, #0xffffffea            	// #-22
  40e894:	cmp	w8, w9
  40e898:	b.ne	40e8ac <match_properties_changed+0x12c>  // b.any
  40e89c:	stur	wzr, [x29, #-4]
  40e8a0:	mov	w8, #0x1                   	// #1
  40e8a4:	str	w8, [sp, #8]
  40e8a8:	b	40e928 <match_properties_changed+0x1a8>
  40e8ac:	ldr	w8, [sp, #12]
  40e8b0:	cmp	w8, #0x0
  40e8b4:	cset	w8, ge  // ge = tcont
  40e8b8:	tbnz	w8, #0, 40e8e8 <match_properties_changed+0x168>
  40e8bc:	mov	w8, wzr
  40e8c0:	mov	w0, w8
  40e8c4:	ldr	x1, [sp]
  40e8c8:	mov	w2, #0x4d4                 	// #1236
  40e8cc:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40e8d0:	add	x3, x3, #0xff1
  40e8d4:	bl	404de0 <log_oom_internal@plt>
  40e8d8:	stur	wzr, [x29, #-4]
  40e8dc:	mov	w8, #0x1                   	// #1
  40e8e0:	str	w8, [sp, #8]
  40e8e4:	b	40e928 <match_properties_changed+0x1a8>
  40e8e8:	ldr	x8, [sp, #24]
  40e8ec:	ldr	x0, [x8, #24]
  40e8f0:	ldr	x1, [sp, #40]
  40e8f4:	bl	40e6ec <hashmap_get>
  40e8f8:	str	x0, [sp, #16]
  40e8fc:	ldr	x8, [sp, #16]
  40e900:	cbnz	x8, 40e914 <match_properties_changed+0x194>
  40e904:	stur	wzr, [x29, #-4]
  40e908:	mov	w8, #0x1                   	// #1
  40e90c:	str	w8, [sp, #8]
  40e910:	b	40e928 <match_properties_changed+0x1a8>
  40e914:	ldr	x0, [sp, #16]
  40e918:	bl	409e88 <machine_add_to_gc_queue>
  40e91c:	stur	wzr, [x29, #-4]
  40e920:	mov	w8, #0x1                   	// #1
  40e924:	str	w8, [sp, #8]
  40e928:	add	x0, sp, #0x28
  40e92c:	bl	40e940 <freep>
  40e930:	ldur	w0, [x29, #-4]
  40e934:	ldp	x29, x30, [sp, #80]
  40e938:	add	sp, sp, #0x60
  40e93c:	ret

000000000040e940 <freep>:
  40e940:	sub	sp, sp, #0x20
  40e944:	stp	x29, x30, [sp, #16]
  40e948:	add	x29, sp, #0x10
  40e94c:	str	x0, [sp, #8]
  40e950:	ldr	x8, [sp, #8]
  40e954:	ldr	x0, [x8]
  40e958:	bl	404cb0 <free@plt>
  40e95c:	ldp	x29, x30, [sp, #16]
  40e960:	add	sp, sp, #0x20
  40e964:	ret

000000000040e968 <match_unit_removed>:
  40e968:	sub	sp, sp, #0x80
  40e96c:	stp	x29, x30, [sp, #112]
  40e970:	add	x29, sp, #0x70
  40e974:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40e978:	add	x8, x8, #0xec5
  40e97c:	add	x8, x8, #0x3
  40e980:	stur	x0, [x29, #-16]
  40e984:	stur	x1, [x29, #-24]
  40e988:	stur	x2, [x29, #-32]
  40e98c:	ldur	x9, [x29, #-24]
  40e990:	str	x9, [sp, #56]
  40e994:	str	x8, [sp, #16]
  40e998:	ldur	x8, [x29, #-16]
  40e99c:	cmp	x8, #0x0
  40e9a0:	cset	w9, ne  // ne = any
  40e9a4:	mov	w10, #0x1                   	// #1
  40e9a8:	eor	w9, w9, #0x1
  40e9ac:	eor	w9, w9, w10
  40e9b0:	eor	w9, w9, w10
  40e9b4:	and	w9, w9, #0x1
  40e9b8:	mov	w0, w9
  40e9bc:	sxtw	x8, w0
  40e9c0:	cbz	x8, 40e9e8 <match_unit_removed+0x80>
  40e9c4:	mov	w8, wzr
  40e9c8:	mov	w0, w8
  40e9cc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40e9d0:	add	x1, x1, #0xebd
  40e9d4:	ldr	x2, [sp, #16]
  40e9d8:	mov	w3, #0x4e6                 	// #1254
  40e9dc:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40e9e0:	add	x4, x4, #0xa
  40e9e4:	bl	404bd0 <log_assert_failed_realm@plt>
  40e9e8:	ldr	x8, [sp, #56]
  40e9ec:	cmp	x8, #0x0
  40e9f0:	cset	w9, ne  // ne = any
  40e9f4:	mov	w10, #0x1                   	// #1
  40e9f8:	eor	w9, w9, #0x1
  40e9fc:	eor	w9, w9, w10
  40ea00:	eor	w9, w9, w10
  40ea04:	and	w9, w9, #0x1
  40ea08:	mov	w0, w9
  40ea0c:	sxtw	x8, w0
  40ea10:	cbz	x8, 40ea38 <match_unit_removed+0xd0>
  40ea14:	mov	w8, wzr
  40ea18:	mov	w0, w8
  40ea1c:	adrp	x1, 41a000 <operation_new+0x40>
  40ea20:	add	x1, x1, #0xe18
  40ea24:	ldr	x2, [sp, #16]
  40ea28:	mov	w3, #0x4e7                 	// #1255
  40ea2c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ea30:	add	x4, x4, #0xa
  40ea34:	bl	404bd0 <log_assert_failed_realm@plt>
  40ea38:	ldur	x0, [x29, #-16]
  40ea3c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ea40:	add	x1, x1, #0xeab
  40ea44:	sub	x2, x29, #0x30
  40ea48:	sub	x3, x29, #0x28
  40ea4c:	bl	405170 <sd_bus_message_read@plt>
  40ea50:	str	w0, [sp, #44]
  40ea54:	ldr	w8, [sp, #44]
  40ea58:	cmp	w8, #0x0
  40ea5c:	cset	w8, ge  // ge = tcont
  40ea60:	tbnz	w8, #0, 40eae8 <match_unit_removed+0x180>
  40ea64:	mov	w8, #0x3                   	// #3
  40ea68:	str	w8, [sp, #40]
  40ea6c:	ldr	w8, [sp, #44]
  40ea70:	str	w8, [sp, #36]
  40ea74:	str	wzr, [sp, #32]
  40ea78:	ldr	w0, [sp, #32]
  40ea7c:	bl	404b80 <log_get_max_level_realm@plt>
  40ea80:	ldr	w8, [sp, #40]
  40ea84:	and	w8, w8, #0x7
  40ea88:	cmp	w0, w8
  40ea8c:	b.lt	40eac4 <match_unit_removed+0x15c>  // b.tstop
  40ea90:	ldr	w8, [sp, #32]
  40ea94:	ldr	w9, [sp, #40]
  40ea98:	orr	w0, w9, w8, lsl #10
  40ea9c:	ldr	w1, [sp, #36]
  40eaa0:	ldr	x2, [sp, #16]
  40eaa4:	mov	w3, #0x4eb                 	// #1259
  40eaa8:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40eaac:	add	x4, x4, #0x4b
  40eab0:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40eab4:	add	x5, x5, #0xf3b
  40eab8:	bl	404b90 <log_internal_realm@plt>
  40eabc:	str	w0, [sp, #12]
  40eac0:	b	40ead8 <match_unit_removed+0x170>
  40eac4:	ldr	w0, [sp, #36]
  40eac8:	bl	404ba0 <abs@plt>
  40eacc:	mov	w8, wzr
  40ead0:	subs	w8, w8, w0, uxtb
  40ead4:	str	w8, [sp, #12]
  40ead8:	ldr	w8, [sp, #12]
  40eadc:	str	w8, [sp, #28]
  40eae0:	stur	wzr, [x29, #-4]
  40eae4:	b	40eb18 <match_unit_removed+0x1b0>
  40eae8:	ldr	x8, [sp, #56]
  40eaec:	ldr	x0, [x8, #24]
  40eaf0:	ldur	x1, [x29, #-48]
  40eaf4:	bl	40e6ec <hashmap_get>
  40eaf8:	str	x0, [sp, #48]
  40eafc:	ldr	x8, [sp, #48]
  40eb00:	cbnz	x8, 40eb0c <match_unit_removed+0x1a4>
  40eb04:	stur	wzr, [x29, #-4]
  40eb08:	b	40eb18 <match_unit_removed+0x1b0>
  40eb0c:	ldr	x0, [sp, #48]
  40eb10:	bl	409e88 <machine_add_to_gc_queue>
  40eb14:	stur	wzr, [x29, #-4]
  40eb18:	ldur	w0, [x29, #-4]
  40eb1c:	ldp	x29, x30, [sp, #112]
  40eb20:	add	sp, sp, #0x80
  40eb24:	ret

000000000040eb28 <match_reloading>:
  40eb28:	sub	sp, sp, #0xa0
  40eb2c:	stp	x29, x30, [sp, #144]
  40eb30:	add	x29, sp, #0x90
  40eb34:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40eb38:	add	x8, x8, #0xec5
  40eb3c:	add	x8, x8, #0x3
  40eb40:	stur	x0, [x29, #-16]
  40eb44:	stur	x1, [x29, #-24]
  40eb48:	stur	x2, [x29, #-32]
  40eb4c:	ldur	x9, [x29, #-24]
  40eb50:	stur	x9, [x29, #-40]
  40eb54:	str	x8, [sp, #16]
  40eb58:	ldur	x8, [x29, #-16]
  40eb5c:	cmp	x8, #0x0
  40eb60:	cset	w9, ne  // ne = any
  40eb64:	mov	w10, #0x1                   	// #1
  40eb68:	eor	w9, w9, #0x1
  40eb6c:	eor	w9, w9, w10
  40eb70:	eor	w9, w9, w10
  40eb74:	and	w9, w9, #0x1
  40eb78:	mov	w0, w9
  40eb7c:	sxtw	x8, w0
  40eb80:	cbz	x8, 40eba8 <match_reloading+0x80>
  40eb84:	mov	w8, wzr
  40eb88:	mov	w0, w8
  40eb8c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40eb90:	add	x1, x1, #0xebd
  40eb94:	ldr	x2, [sp, #16]
  40eb98:	mov	w3, #0x4fd                 	// #1277
  40eb9c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40eba0:	add	x4, x4, #0x5e
  40eba4:	bl	404bd0 <log_assert_failed_realm@plt>
  40eba8:	ldur	x8, [x29, #-40]
  40ebac:	cmp	x8, #0x0
  40ebb0:	cset	w9, ne  // ne = any
  40ebb4:	mov	w10, #0x1                   	// #1
  40ebb8:	eor	w9, w9, #0x1
  40ebbc:	eor	w9, w9, w10
  40ebc0:	eor	w9, w9, w10
  40ebc4:	and	w9, w9, #0x1
  40ebc8:	mov	w0, w9
  40ebcc:	sxtw	x8, w0
  40ebd0:	cbz	x8, 40ebf8 <match_reloading+0xd0>
  40ebd4:	mov	w8, wzr
  40ebd8:	mov	w0, w8
  40ebdc:	adrp	x1, 41a000 <operation_new+0x40>
  40ebe0:	add	x1, x1, #0xe18
  40ebe4:	ldr	x2, [sp, #16]
  40ebe8:	mov	w3, #0x4fe                 	// #1278
  40ebec:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ebf0:	add	x4, x4, #0x5e
  40ebf4:	bl	404bd0 <log_assert_failed_realm@plt>
  40ebf8:	ldur	x0, [x29, #-16]
  40ebfc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ec00:	add	x1, x1, #0xb0c
  40ec04:	sub	x2, x29, #0x44
  40ec08:	bl	405170 <sd_bus_message_read@plt>
  40ec0c:	str	w0, [sp, #72]
  40ec10:	ldr	w8, [sp, #72]
  40ec14:	cmp	w8, #0x0
  40ec18:	cset	w8, ge  // ge = tcont
  40ec1c:	tbnz	w8, #0, 40eca4 <match_reloading+0x17c>
  40ec20:	mov	w8, #0x3                   	// #3
  40ec24:	str	w8, [sp, #68]
  40ec28:	ldr	w8, [sp, #72]
  40ec2c:	str	w8, [sp, #64]
  40ec30:	str	wzr, [sp, #60]
  40ec34:	ldr	w0, [sp, #60]
  40ec38:	bl	404b80 <log_get_max_level_realm@plt>
  40ec3c:	ldr	w8, [sp, #68]
  40ec40:	and	w8, w8, #0x7
  40ec44:	cmp	w0, w8
  40ec48:	b.lt	40ec80 <match_reloading+0x158>  // b.tstop
  40ec4c:	ldr	w8, [sp, #60]
  40ec50:	ldr	w9, [sp, #68]
  40ec54:	orr	w0, w9, w8, lsl #10
  40ec58:	ldr	w1, [sp, #64]
  40ec5c:	ldr	x2, [sp, #16]
  40ec60:	mov	w3, #0x502                 	// #1282
  40ec64:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ec68:	add	x4, x4, #0x9c
  40ec6c:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  40ec70:	add	x5, x5, #0xf3b
  40ec74:	bl	404b90 <log_internal_realm@plt>
  40ec78:	str	w0, [sp, #12]
  40ec7c:	b	40ec94 <match_reloading+0x16c>
  40ec80:	ldr	w0, [sp, #64]
  40ec84:	bl	404ba0 <abs@plt>
  40ec88:	mov	w8, wzr
  40ec8c:	subs	w8, w8, w0, uxtb
  40ec90:	str	w8, [sp, #12]
  40ec94:	ldr	w8, [sp, #12]
  40ec98:	str	w8, [sp, #56]
  40ec9c:	stur	wzr, [x29, #-4]
  40eca0:	b	40ed7c <match_reloading+0x254>
  40eca4:	ldur	w8, [x29, #-68]
  40eca8:	cbz	w8, 40ecb4 <match_reloading+0x18c>
  40ecac:	stur	wzr, [x29, #-4]
  40ecb0:	b	40ed7c <match_reloading+0x254>
  40ecb4:	mov	w8, #0x7                   	// #7
  40ecb8:	str	w8, [sp, #52]
  40ecbc:	str	wzr, [sp, #48]
  40ecc0:	str	wzr, [sp, #44]
  40ecc4:	ldr	w0, [sp, #44]
  40ecc8:	bl	404b80 <log_get_max_level_realm@plt>
  40eccc:	ldr	w8, [sp, #52]
  40ecd0:	and	w8, w8, #0x7
  40ecd4:	cmp	w0, w8
  40ecd8:	b.lt	40ed10 <match_reloading+0x1e8>  // b.tstop
  40ecdc:	ldr	w8, [sp, #44]
  40ece0:	ldr	w9, [sp, #52]
  40ece4:	orr	w0, w9, w8, lsl #10
  40ece8:	ldr	w1, [sp, #48]
  40ecec:	ldr	x2, [sp, #16]
  40ecf0:	mov	w3, #0x509                 	// #1289
  40ecf4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ecf8:	add	x4, x4, #0x9c
  40ecfc:	adrp	x5, 41c000 <machine_hash_ops+0x13e8>
  40ed00:	add	x5, x5, #0xac
  40ed04:	bl	404b90 <log_internal_realm@plt>
  40ed08:	str	w0, [sp, #8]
  40ed0c:	b	40ed24 <match_reloading+0x1fc>
  40ed10:	ldr	w0, [sp, #48]
  40ed14:	bl	404ba0 <abs@plt>
  40ed18:	mov	w8, wzr
  40ed1c:	subs	w8, w8, w0, uxtb
  40ed20:	str	w8, [sp, #8]
  40ed24:	ldr	w8, [sp, #8]
  40ed28:	str	w8, [sp, #40]
  40ed2c:	add	x9, sp, #0x18
  40ed30:	mov	w8, #0xfffffffe            	// #-2
  40ed34:	str	w8, [sp, #24]
  40ed38:	mov	x10, xzr
  40ed3c:	str	x10, [x9, #8]
  40ed40:	ldur	q0, [sp, #24]
  40ed44:	stur	q0, [x29, #-64]
  40ed48:	ldur	x8, [x29, #-40]
  40ed4c:	ldr	x0, [x8, #16]
  40ed50:	sub	x1, x29, #0x40
  40ed54:	sub	x2, x29, #0x30
  40ed58:	mov	x8, xzr
  40ed5c:	mov	x3, x8
  40ed60:	bl	40ed8c <hashmap_iterate>
  40ed64:	tbnz	w0, #0, 40ed6c <match_reloading+0x244>
  40ed68:	b	40ed78 <match_reloading+0x250>
  40ed6c:	ldur	x0, [x29, #-48]
  40ed70:	bl	409e88 <machine_add_to_gc_queue>
  40ed74:	b	40ed48 <match_reloading+0x220>
  40ed78:	stur	wzr, [x29, #-4]
  40ed7c:	ldur	w0, [x29, #-4]
  40ed80:	ldp	x29, x30, [sp, #144]
  40ed84:	add	sp, sp, #0xa0
  40ed88:	ret

000000000040ed8c <hashmap_iterate>:
  40ed8c:	sub	sp, sp, #0x30
  40ed90:	stp	x29, x30, [sp, #32]
  40ed94:	add	x29, sp, #0x20
  40ed98:	stur	x0, [x29, #-8]
  40ed9c:	str	x1, [sp, #16]
  40eda0:	str	x2, [sp, #8]
  40eda4:	str	x3, [sp]
  40eda8:	ldur	x0, [x29, #-8]
  40edac:	ldr	x1, [sp, #16]
  40edb0:	ldr	x2, [sp, #8]
  40edb4:	ldr	x3, [sp]
  40edb8:	bl	404da0 <internal_hashmap_iterate@plt>
  40edbc:	and	w0, w0, #0x1
  40edc0:	ldp	x29, x30, [sp, #32]
  40edc4:	add	sp, sp, #0x30
  40edc8:	ret

000000000040edcc <manager_unref_unit>:
  40edcc:	sub	sp, sp, #0x40
  40edd0:	stp	x29, x30, [sp, #48]
  40edd4:	add	x29, sp, #0x30
  40edd8:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40eddc:	add	x8, x8, #0xec5
  40ede0:	add	x8, x8, #0x3
  40ede4:	stur	x0, [x29, #-8]
  40ede8:	stur	x1, [x29, #-16]
  40edec:	str	x2, [sp, #24]
  40edf0:	str	x8, [sp, #16]
  40edf4:	ldur	x8, [x29, #-8]
  40edf8:	cmp	x8, #0x0
  40edfc:	cset	w9, ne  // ne = any
  40ee00:	mov	w10, #0x1                   	// #1
  40ee04:	eor	w9, w9, #0x1
  40ee08:	eor	w9, w9, w10
  40ee0c:	eor	w9, w9, w10
  40ee10:	and	w9, w9, #0x1
  40ee14:	mov	w0, w9
  40ee18:	sxtw	x8, w0
  40ee1c:	cbz	x8, 40ee44 <manager_unref_unit+0x78>
  40ee20:	mov	w8, wzr
  40ee24:	mov	w0, w8
  40ee28:	adrp	x1, 41a000 <operation_new+0x40>
  40ee2c:	add	x1, x1, #0xe18
  40ee30:	ldr	x2, [sp, #16]
  40ee34:	mov	w3, #0x516                 	// #1302
  40ee38:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ee3c:	add	x4, x4, #0xe5
  40ee40:	bl	404bd0 <log_assert_failed_realm@plt>
  40ee44:	ldur	x8, [x29, #-16]
  40ee48:	cmp	x8, #0x0
  40ee4c:	cset	w9, ne  // ne = any
  40ee50:	mov	w10, #0x1                   	// #1
  40ee54:	eor	w9, w9, #0x1
  40ee58:	eor	w9, w9, w10
  40ee5c:	eor	w9, w9, w10
  40ee60:	and	w9, w9, #0x1
  40ee64:	mov	w0, w9
  40ee68:	sxtw	x8, w0
  40ee6c:	cbz	x8, 40ee94 <manager_unref_unit+0xc8>
  40ee70:	mov	w8, wzr
  40ee74:	mov	w0, w8
  40ee78:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40ee7c:	add	x1, x1, #0x125
  40ee80:	ldr	x2, [sp, #16]
  40ee84:	mov	w3, #0x517                 	// #1303
  40ee88:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ee8c:	add	x4, x4, #0xe5
  40ee90:	bl	404bd0 <log_assert_failed_realm@plt>
  40ee94:	ldur	x8, [x29, #-8]
  40ee98:	ldr	x0, [x8, #8]
  40ee9c:	ldr	x5, [sp, #24]
  40eea0:	ldur	x8, [x29, #-16]
  40eea4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40eea8:	add	x1, x1, #0x17
  40eeac:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40eeb0:	add	x2, x2, #0x30
  40eeb4:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40eeb8:	add	x3, x3, #0x4a
  40eebc:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40eec0:	add	x4, x4, #0x12a
  40eec4:	mov	x9, xzr
  40eec8:	mov	x6, x9
  40eecc:	adrp	x7, 41b000 <machine_hash_ops+0x3e8>
  40eed0:	add	x7, x7, #0x7ae
  40eed4:	mov	x9, sp
  40eed8:	str	x8, [x9]
  40eedc:	bl	4053a0 <sd_bus_call_method@plt>
  40eee0:	ldp	x29, x30, [sp, #48]
  40eee4:	add	sp, sp, #0x40
  40eee8:	ret

000000000040eeec <manager_stop_unit>:
  40eeec:	sub	sp, sp, #0x70
  40eef0:	stp	x29, x30, [sp, #96]
  40eef4:	add	x29, sp, #0x60
  40eef8:	mov	x8, xzr
  40eefc:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40ef00:	add	x9, x9, #0xec5
  40ef04:	add	x9, x9, #0x3
  40ef08:	stur	x0, [x29, #-16]
  40ef0c:	stur	x1, [x29, #-24]
  40ef10:	stur	x2, [x29, #-32]
  40ef14:	stur	x3, [x29, #-40]
  40ef18:	str	x8, [sp, #48]
  40ef1c:	str	x9, [sp, #16]
  40ef20:	ldur	x8, [x29, #-16]
  40ef24:	cmp	x8, #0x0
  40ef28:	cset	w9, ne  // ne = any
  40ef2c:	mov	w10, #0x1                   	// #1
  40ef30:	eor	w9, w9, #0x1
  40ef34:	eor	w9, w9, w10
  40ef38:	eor	w9, w9, w10
  40ef3c:	and	w9, w9, #0x1
  40ef40:	mov	w0, w9
  40ef44:	sxtw	x8, w0
  40ef48:	cbz	x8, 40ef70 <manager_stop_unit+0x84>
  40ef4c:	mov	w8, wzr
  40ef50:	mov	w0, w8
  40ef54:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40ef58:	add	x1, x1, #0x32b
  40ef5c:	ldr	x2, [sp, #16]
  40ef60:	mov	w3, #0x529                 	// #1321
  40ef64:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40ef68:	add	x4, x4, #0x134
  40ef6c:	bl	404bd0 <log_assert_failed_realm@plt>
  40ef70:	ldur	x8, [x29, #-24]
  40ef74:	cmp	x8, #0x0
  40ef78:	cset	w9, ne  // ne = any
  40ef7c:	mov	w10, #0x1                   	// #1
  40ef80:	eor	w9, w9, #0x1
  40ef84:	eor	w9, w9, w10
  40ef88:	eor	w9, w9, w10
  40ef8c:	and	w9, w9, #0x1
  40ef90:	mov	w0, w9
  40ef94:	sxtw	x8, w0
  40ef98:	cbz	x8, 40efc0 <manager_stop_unit+0xd4>
  40ef9c:	mov	w8, wzr
  40efa0:	mov	w0, w8
  40efa4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40efa8:	add	x1, x1, #0x125
  40efac:	ldr	x2, [sp, #16]
  40efb0:	mov	w3, #0x52a                 	// #1322
  40efb4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40efb8:	add	x4, x4, #0x134
  40efbc:	bl	404bd0 <log_assert_failed_realm@plt>
  40efc0:	ldur	x8, [x29, #-16]
  40efc4:	ldr	x0, [x8, #8]
  40efc8:	ldur	x5, [x29, #-32]
  40efcc:	ldur	x8, [x29, #-24]
  40efd0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40efd4:	add	x1, x1, #0x17
  40efd8:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40efdc:	add	x2, x2, #0x30
  40efe0:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40efe4:	add	x3, x3, #0x4a
  40efe8:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40efec:	add	x4, x4, #0x17c
  40eff0:	add	x6, sp, #0x30
  40eff4:	adrp	x7, 41b000 <machine_hash_ops+0x3e8>
  40eff8:	add	x7, x7, #0xa9d
  40effc:	mov	x9, sp
  40f000:	str	x8, [x9]
  40f004:	mov	x8, sp
  40f008:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40f00c:	add	x9, x9, #0xaa0
  40f010:	str	x9, [x8, #8]
  40f014:	bl	4053a0 <sd_bus_call_method@plt>
  40f018:	str	w0, [sp, #44]
  40f01c:	ldr	w10, [sp, #44]
  40f020:	cmp	w10, #0x0
  40f024:	cset	w10, ge  // ge = tcont
  40f028:	tbnz	w10, #0, 40f094 <manager_stop_unit+0x1a8>
  40f02c:	ldur	x0, [x29, #-32]
  40f030:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f034:	add	x1, x1, #0x185
  40f038:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f03c:	cbnz	w0, 40f054 <manager_stop_unit+0x168>
  40f040:	ldur	x0, [x29, #-32]
  40f044:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f048:	add	x1, x1, #0x1a9
  40f04c:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f050:	cbz	w0, 40f080 <manager_stop_unit+0x194>
  40f054:	ldur	x8, [x29, #-40]
  40f058:	cbz	x8, 40f068 <manager_stop_unit+0x17c>
  40f05c:	ldur	x8, [x29, #-40]
  40f060:	mov	x9, xzr
  40f064:	str	x9, [x8]
  40f068:	ldur	x0, [x29, #-32]
  40f06c:	bl	404e90 <sd_bus_error_free@plt>
  40f070:	stur	wzr, [x29, #-4]
  40f074:	mov	w8, #0x1                   	// #1
  40f078:	str	w8, [sp, #40]
  40f07c:	b	40f118 <manager_stop_unit+0x22c>
  40f080:	ldr	w8, [sp, #44]
  40f084:	stur	w8, [x29, #-4]
  40f088:	mov	w8, #0x1                   	// #1
  40f08c:	str	w8, [sp, #40]
  40f090:	b	40f118 <manager_stop_unit+0x22c>
  40f094:	ldur	x8, [x29, #-40]
  40f098:	cbz	x8, 40f10c <manager_stop_unit+0x220>
  40f09c:	ldr	x0, [sp, #48]
  40f0a0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f0a4:	add	x1, x1, #0xb49
  40f0a8:	add	x2, sp, #0x20
  40f0ac:	bl	405170 <sd_bus_message_read@plt>
  40f0b0:	str	w0, [sp, #44]
  40f0b4:	ldr	w8, [sp, #44]
  40f0b8:	cmp	w8, #0x0
  40f0bc:	cset	w8, ge  // ge = tcont
  40f0c0:	tbnz	w8, #0, 40f0d8 <manager_stop_unit+0x1ec>
  40f0c4:	ldr	w8, [sp, #44]
  40f0c8:	stur	w8, [x29, #-4]
  40f0cc:	mov	w8, #0x1                   	// #1
  40f0d0:	str	w8, [sp, #40]
  40f0d4:	b	40f118 <manager_stop_unit+0x22c>
  40f0d8:	ldr	x0, [sp, #32]
  40f0dc:	bl	404dd0 <strdup@plt>
  40f0e0:	str	x0, [sp, #24]
  40f0e4:	ldr	x8, [sp, #24]
  40f0e8:	cbnz	x8, 40f100 <manager_stop_unit+0x214>
  40f0ec:	mov	w8, #0xfffffff4            	// #-12
  40f0f0:	stur	w8, [x29, #-4]
  40f0f4:	mov	w8, #0x1                   	// #1
  40f0f8:	str	w8, [sp, #40]
  40f0fc:	b	40f118 <manager_stop_unit+0x22c>
  40f100:	ldr	x8, [sp, #24]
  40f104:	ldur	x9, [x29, #-40]
  40f108:	str	x8, [x9]
  40f10c:	mov	w8, #0x1                   	// #1
  40f110:	stur	w8, [x29, #-4]
  40f114:	str	w8, [sp, #40]
  40f118:	add	x0, sp, #0x30
  40f11c:	bl	40f130 <sd_bus_message_unrefp>
  40f120:	ldur	w0, [x29, #-4]
  40f124:	ldp	x29, x30, [sp, #96]
  40f128:	add	sp, sp, #0x70
  40f12c:	ret

000000000040f130 <sd_bus_message_unrefp>:
  40f130:	sub	sp, sp, #0x20
  40f134:	stp	x29, x30, [sp, #16]
  40f138:	add	x29, sp, #0x10
  40f13c:	str	x0, [sp, #8]
  40f140:	ldr	x8, [sp, #8]
  40f144:	ldr	x8, [x8]
  40f148:	cbz	x8, 40f158 <sd_bus_message_unrefp+0x28>
  40f14c:	ldr	x8, [sp, #8]
  40f150:	ldr	x0, [x8]
  40f154:	bl	404e70 <sd_bus_message_unref@plt>
  40f158:	ldp	x29, x30, [sp, #16]
  40f15c:	add	sp, sp, #0x20
  40f160:	ret

000000000040f164 <manager_kill_unit>:
  40f164:	sub	sp, sp, #0x50
  40f168:	stp	x29, x30, [sp, #64]
  40f16c:	add	x29, sp, #0x40
  40f170:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40f174:	add	x8, x8, #0xec5
  40f178:	add	x8, x8, #0x3
  40f17c:	stur	x0, [x29, #-8]
  40f180:	stur	x1, [x29, #-16]
  40f184:	stur	w2, [x29, #-20]
  40f188:	str	x3, [sp, #32]
  40f18c:	str	x8, [sp, #24]
  40f190:	ldur	x8, [x29, #-8]
  40f194:	cmp	x8, #0x0
  40f198:	cset	w9, ne  // ne = any
  40f19c:	mov	w10, #0x1                   	// #1
  40f1a0:	eor	w9, w9, #0x1
  40f1a4:	eor	w9, w9, w10
  40f1a8:	eor	w9, w9, w10
  40f1ac:	and	w9, w9, #0x1
  40f1b0:	mov	w0, w9
  40f1b4:	sxtw	x8, w0
  40f1b8:	cbz	x8, 40f1e0 <manager_kill_unit+0x7c>
  40f1bc:	mov	w8, wzr
  40f1c0:	mov	w0, w8
  40f1c4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f1c8:	add	x1, x1, #0x32b
  40f1cc:	ldr	x2, [sp, #24]
  40f1d0:	mov	w3, #0x556                 	// #1366
  40f1d4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f1d8:	add	x4, x4, #0x1cd
  40f1dc:	bl	404bd0 <log_assert_failed_realm@plt>
  40f1e0:	ldur	x8, [x29, #-16]
  40f1e4:	cmp	x8, #0x0
  40f1e8:	cset	w9, ne  // ne = any
  40f1ec:	mov	w10, #0x1                   	// #1
  40f1f0:	eor	w9, w9, #0x1
  40f1f4:	eor	w9, w9, w10
  40f1f8:	eor	w9, w9, w10
  40f1fc:	and	w9, w9, #0x1
  40f200:	mov	w0, w9
  40f204:	sxtw	x8, w0
  40f208:	cbz	x8, 40f230 <manager_kill_unit+0xcc>
  40f20c:	mov	w8, wzr
  40f210:	mov	w0, w8
  40f214:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f218:	add	x1, x1, #0x125
  40f21c:	ldr	x2, [sp, #24]
  40f220:	mov	w3, #0x557                 	// #1367
  40f224:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f228:	add	x4, x4, #0x1cd
  40f22c:	bl	404bd0 <log_assert_failed_realm@plt>
  40f230:	ldur	x8, [x29, #-8]
  40f234:	ldr	x0, [x8, #8]
  40f238:	ldr	x5, [sp, #32]
  40f23c:	ldur	x8, [x29, #-16]
  40f240:	ldur	w9, [x29, #-20]
  40f244:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f248:	add	x1, x1, #0x17
  40f24c:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40f250:	add	x2, x2, #0x30
  40f254:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  40f258:	add	x3, x3, #0x4a
  40f25c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f260:	add	x4, x4, #0x211
  40f264:	mov	x10, xzr
  40f268:	mov	x6, x10
  40f26c:	adrp	x7, 41b000 <machine_hash_ops+0x3e8>
  40f270:	add	x7, x7, #0xcbd
  40f274:	mov	x10, sp
  40f278:	str	x8, [x10]
  40f27c:	mov	x8, sp
  40f280:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40f284:	add	x10, x10, #0xb9b
  40f288:	str	x10, [x8, #8]
  40f28c:	mov	x8, sp
  40f290:	str	w9, [x8, #16]
  40f294:	bl	4053a0 <sd_bus_call_method@plt>
  40f298:	ldp	x29, x30, [sp, #64]
  40f29c:	add	sp, sp, #0x50
  40f2a0:	ret

000000000040f2a4 <manager_unit_is_active>:
  40f2a4:	sub	sp, sp, #0x90
  40f2a8:	stp	x29, x30, [sp, #128]
  40f2ac:	add	x29, sp, #0x80
  40f2b0:	mov	x8, xzr
  40f2b4:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40f2b8:	add	x9, x9, #0xec5
  40f2bc:	add	x9, x9, #0x3
  40f2c0:	stur	x0, [x29, #-16]
  40f2c4:	stur	x1, [x29, #-24]
  40f2c8:	stur	xzr, [x29, #-48]
  40f2cc:	stur	xzr, [x29, #-40]
  40f2d0:	stur	xzr, [x29, #-32]
  40f2d4:	stur	x8, [x29, #-56]
  40f2d8:	str	x8, [sp, #64]
  40f2dc:	str	x9, [sp, #8]
  40f2e0:	ldur	x8, [x29, #-16]
  40f2e4:	cmp	x8, #0x0
  40f2e8:	cset	w9, ne  // ne = any
  40f2ec:	mov	w10, #0x1                   	// #1
  40f2f0:	eor	w9, w9, #0x1
  40f2f4:	eor	w9, w9, w10
  40f2f8:	eor	w9, w9, w10
  40f2fc:	and	w9, w9, #0x1
  40f300:	mov	w0, w9
  40f304:	sxtw	x8, w0
  40f308:	cbz	x8, 40f330 <manager_unit_is_active+0x8c>
  40f30c:	mov	w8, wzr
  40f310:	mov	w0, w8
  40f314:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f318:	add	x1, x1, #0x32b
  40f31c:	ldr	x2, [sp, #8]
  40f320:	mov	w3, #0x56b                 	// #1387
  40f324:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f328:	add	x4, x4, #0x21a
  40f32c:	bl	404bd0 <log_assert_failed_realm@plt>
  40f330:	ldur	x8, [x29, #-24]
  40f334:	cmp	x8, #0x0
  40f338:	cset	w9, ne  // ne = any
  40f33c:	mov	w10, #0x1                   	// #1
  40f340:	eor	w9, w9, #0x1
  40f344:	eor	w9, w9, w10
  40f348:	eor	w9, w9, w10
  40f34c:	and	w9, w9, #0x1
  40f350:	mov	w0, w9
  40f354:	sxtw	x8, w0
  40f358:	cbz	x8, 40f380 <manager_unit_is_active+0xdc>
  40f35c:	mov	w8, wzr
  40f360:	mov	w0, w8
  40f364:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f368:	add	x1, x1, #0x125
  40f36c:	ldr	x2, [sp, #8]
  40f370:	mov	w3, #0x56c                 	// #1388
  40f374:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f378:	add	x4, x4, #0x21a
  40f37c:	bl	404bd0 <log_assert_failed_realm@plt>
  40f380:	ldur	x0, [x29, #-24]
  40f384:	bl	4053c0 <unit_dbus_path_from_name@plt>
  40f388:	str	x0, [sp, #64]
  40f38c:	ldr	x8, [sp, #64]
  40f390:	cbnz	x8, 40f3a8 <manager_unit_is_active+0x104>
  40f394:	mov	w8, #0xfffffff4            	// #-12
  40f398:	stur	w8, [x29, #-4]
  40f39c:	mov	w8, #0x1                   	// #1
  40f3a0:	str	w8, [sp, #48]
  40f3a4:	b	40f500 <manager_unit_is_active+0x25c>
  40f3a8:	ldur	x8, [x29, #-16]
  40f3ac:	ldr	x0, [x8, #8]
  40f3b0:	ldr	x2, [sp, #64]
  40f3b4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f3b8:	add	x1, x1, #0x17
  40f3bc:	adrp	x3, 41c000 <machine_hash_ops+0x13e8>
  40f3c0:	add	x3, x3, #0x24e
  40f3c4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f3c8:	add	x4, x4, #0x26c
  40f3cc:	sub	x5, x29, #0x30
  40f3d0:	sub	x6, x29, #0x38
  40f3d4:	adrp	x7, 41b000 <machine_hash_ops+0x3e8>
  40f3d8:	add	x7, x7, #0x7ae
  40f3dc:	bl	4053d0 <sd_bus_get_property@plt>
  40f3e0:	str	w0, [sp, #52]
  40f3e4:	ldr	w9, [sp, #52]
  40f3e8:	cmp	w9, #0x0
  40f3ec:	cset	w9, ge  // ge = tcont
  40f3f0:	tbnz	w9, #0, 40f478 <manager_unit_is_active+0x1d4>
  40f3f4:	sub	x0, x29, #0x30
  40f3f8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f3fc:	add	x1, x1, #0x278
  40f400:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f404:	cbnz	w0, 40f41c <manager_unit_is_active+0x178>
  40f408:	sub	x0, x29, #0x30
  40f40c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f410:	add	x1, x1, #0x29b
  40f414:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f418:	cbz	w0, 40f42c <manager_unit_is_active+0x188>
  40f41c:	mov	w8, #0x1                   	// #1
  40f420:	stur	w8, [x29, #-4]
  40f424:	str	w8, [sp, #48]
  40f428:	b	40f500 <manager_unit_is_active+0x25c>
  40f42c:	sub	x0, x29, #0x30
  40f430:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f434:	add	x1, x1, #0x185
  40f438:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f43c:	cbnz	w0, 40f454 <manager_unit_is_active+0x1b0>
  40f440:	sub	x0, x29, #0x30
  40f444:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f448:	add	x1, x1, #0x1a9
  40f44c:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f450:	cbz	w0, 40f464 <manager_unit_is_active+0x1c0>
  40f454:	stur	wzr, [x29, #-4]
  40f458:	mov	w8, #0x1                   	// #1
  40f45c:	str	w8, [sp, #48]
  40f460:	b	40f500 <manager_unit_is_active+0x25c>
  40f464:	ldr	w8, [sp, #52]
  40f468:	stur	w8, [x29, #-4]
  40f46c:	mov	w8, #0x1                   	// #1
  40f470:	str	w8, [sp, #48]
  40f474:	b	40f500 <manager_unit_is_active+0x25c>
  40f478:	ldur	x0, [x29, #-56]
  40f47c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f480:	add	x1, x1, #0x7ae
  40f484:	add	x2, sp, #0x38
  40f488:	bl	405170 <sd_bus_message_read@plt>
  40f48c:	str	w0, [sp, #52]
  40f490:	ldr	w8, [sp, #52]
  40f494:	cmp	w8, #0x0
  40f498:	cset	w8, ge  // ge = tcont
  40f49c:	tbnz	w8, #0, 40f4b4 <manager_unit_is_active+0x210>
  40f4a0:	mov	w8, #0xffffffea            	// #-22
  40f4a4:	stur	w8, [x29, #-4]
  40f4a8:	mov	w8, #0x1                   	// #1
  40f4ac:	str	w8, [sp, #48]
  40f4b0:	b	40f500 <manager_unit_is_active+0x25c>
  40f4b4:	adrp	x8, 440000 <__TMC_END__>
  40f4b8:	add	x8, x8, #0x0
  40f4bc:	ldr	q0, [x8]
  40f4c0:	add	x0, sp, #0x10
  40f4c4:	str	q0, [sp, #16]
  40f4c8:	ldr	x8, [x8, #16]
  40f4cc:	str	x8, [sp, #32]
  40f4d0:	ldr	x1, [sp, #56]
  40f4d4:	bl	4053e0 <strv_find@plt>
  40f4d8:	cmp	x0, #0x0
  40f4dc:	cset	w9, ne  // ne = any
  40f4e0:	mov	w10, #0x1                   	// #1
  40f4e4:	eor	w9, w9, #0x1
  40f4e8:	eor	w9, w9, w10
  40f4ec:	eor	w9, w9, w10
  40f4f0:	and	w9, w9, #0x1
  40f4f4:	stur	w9, [x29, #-4]
  40f4f8:	mov	w9, #0x1                   	// #1
  40f4fc:	str	w9, [sp, #48]
  40f500:	add	x0, sp, #0x40
  40f504:	bl	40e940 <freep>
  40f508:	sub	x0, x29, #0x38
  40f50c:	bl	40f130 <sd_bus_message_unrefp>
  40f510:	sub	x0, x29, #0x30
  40f514:	bl	404e90 <sd_bus_error_free@plt>
  40f518:	ldur	w0, [x29, #-4]
  40f51c:	ldp	x29, x30, [sp, #128]
  40f520:	add	sp, sp, #0x90
  40f524:	ret

000000000040f528 <manager_job_is_active>:
  40f528:	sub	sp, sp, #0x60
  40f52c:	stp	x29, x30, [sp, #80]
  40f530:	add	x29, sp, #0x50
  40f534:	mov	x8, xzr
  40f538:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  40f53c:	add	x9, x9, #0xec5
  40f540:	add	x9, x9, #0x3
  40f544:	stur	x0, [x29, #-16]
  40f548:	stur	x1, [x29, #-24]
  40f54c:	str	xzr, [sp, #32]
  40f550:	str	xzr, [sp, #40]
  40f554:	str	xzr, [sp, #48]
  40f558:	str	x8, [sp, #24]
  40f55c:	str	x9, [sp, #8]
  40f560:	ldur	x8, [x29, #-16]
  40f564:	cmp	x8, #0x0
  40f568:	cset	w9, ne  // ne = any
  40f56c:	mov	w10, #0x1                   	// #1
  40f570:	eor	w9, w9, #0x1
  40f574:	eor	w9, w9, w10
  40f578:	eor	w9, w9, w10
  40f57c:	and	w9, w9, #0x1
  40f580:	mov	w0, w9
  40f584:	sxtw	x8, w0
  40f588:	cbz	x8, 40f5b0 <manager_job_is_active+0x88>
  40f58c:	mov	w8, wzr
  40f590:	mov	w0, w8
  40f594:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f598:	add	x1, x1, #0x32b
  40f59c:	ldr	x2, [sp, #8]
  40f5a0:	mov	w3, #0x593                 	// #1427
  40f5a4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f5a8:	add	x4, x4, #0x2d3
  40f5ac:	bl	404bd0 <log_assert_failed_realm@plt>
  40f5b0:	ldur	x8, [x29, #-24]
  40f5b4:	cmp	x8, #0x0
  40f5b8:	cset	w9, ne  // ne = any
  40f5bc:	mov	w10, #0x1                   	// #1
  40f5c0:	eor	w9, w9, #0x1
  40f5c4:	eor	w9, w9, w10
  40f5c8:	eor	w9, w9, w10
  40f5cc:	and	w9, w9, #0x1
  40f5d0:	mov	w0, w9
  40f5d4:	sxtw	x8, w0
  40f5d8:	cbz	x8, 40f600 <manager_job_is_active+0xd8>
  40f5dc:	mov	w8, wzr
  40f5e0:	mov	w0, w8
  40f5e4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f5e8:	add	x1, x1, #0x306
  40f5ec:	ldr	x2, [sp, #8]
  40f5f0:	mov	w3, #0x594                 	// #1428
  40f5f4:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f5f8:	add	x4, x4, #0x2d3
  40f5fc:	bl	404bd0 <log_assert_failed_realm@plt>
  40f600:	ldur	x8, [x29, #-16]
  40f604:	ldr	x0, [x8, #8]
  40f608:	ldur	x2, [x29, #-24]
  40f60c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f610:	add	x1, x1, #0x17
  40f614:	adrp	x3, 41c000 <machine_hash_ops+0x13e8>
  40f618:	add	x3, x3, #0x30b
  40f61c:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f620:	add	x4, x4, #0x328
  40f624:	add	x5, sp, #0x20
  40f628:	add	x6, sp, #0x18
  40f62c:	adrp	x7, 41b000 <machine_hash_ops+0x3e8>
  40f630:	add	x7, x7, #0x7ae
  40f634:	bl	4053d0 <sd_bus_get_property@plt>
  40f638:	str	w0, [sp, #20]
  40f63c:	ldr	w9, [sp, #20]
  40f640:	cmp	w9, #0x0
  40f644:	cset	w9, ge  // ge = tcont
  40f648:	tbnz	w9, #0, 40f6bc <manager_job_is_active+0x194>
  40f64c:	add	x0, sp, #0x20
  40f650:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f654:	add	x1, x1, #0x278
  40f658:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f65c:	cbnz	w0, 40f674 <manager_job_is_active+0x14c>
  40f660:	add	x0, sp, #0x20
  40f664:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f668:	add	x1, x1, #0x29b
  40f66c:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f670:	cbz	w0, 40f684 <manager_job_is_active+0x15c>
  40f674:	mov	w8, #0x1                   	// #1
  40f678:	stur	w8, [x29, #-4]
  40f67c:	str	w8, [sp, #16]
  40f680:	b	40f6c8 <manager_job_is_active+0x1a0>
  40f684:	add	x0, sp, #0x20
  40f688:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f68c:	add	x1, x1, #0x32e
  40f690:	bl	4053b0 <sd_bus_error_has_name@plt>
  40f694:	cbz	w0, 40f6a8 <manager_job_is_active+0x180>
  40f698:	stur	wzr, [x29, #-4]
  40f69c:	mov	w8, #0x1                   	// #1
  40f6a0:	str	w8, [sp, #16]
  40f6a4:	b	40f6c8 <manager_job_is_active+0x1a0>
  40f6a8:	ldr	w8, [sp, #20]
  40f6ac:	stur	w8, [x29, #-4]
  40f6b0:	mov	w8, #0x1                   	// #1
  40f6b4:	str	w8, [sp, #16]
  40f6b8:	b	40f6c8 <manager_job_is_active+0x1a0>
  40f6bc:	mov	w8, #0x1                   	// #1
  40f6c0:	stur	w8, [x29, #-4]
  40f6c4:	str	w8, [sp, #16]
  40f6c8:	add	x0, sp, #0x18
  40f6cc:	bl	40f130 <sd_bus_message_unrefp>
  40f6d0:	add	x0, sp, #0x20
  40f6d4:	bl	404e90 <sd_bus_error_free@plt>
  40f6d8:	ldur	w0, [x29, #-4]
  40f6dc:	ldp	x29, x30, [sp, #80]
  40f6e0:	add	sp, sp, #0x60
  40f6e4:	ret

000000000040f6e8 <manager_get_machine_by_pid>:
  40f6e8:	sub	sp, sp, #0x70
  40f6ec:	stp	x29, x30, [sp, #96]
  40f6f0:	add	x29, sp, #0x60
  40f6f4:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40f6f8:	add	x8, x8, #0xec5
  40f6fc:	add	x8, x8, #0x3
  40f700:	adrp	x9, 41c000 <machine_hash_ops+0x13e8>
  40f704:	add	x9, x9, #0x357
  40f708:	stur	x0, [x29, #-16]
  40f70c:	stur	w1, [x29, #-20]
  40f710:	stur	x2, [x29, #-32]
  40f714:	str	x8, [sp, #32]
  40f718:	str	x9, [sp, #24]
  40f71c:	ldur	x8, [x29, #-16]
  40f720:	cmp	x8, #0x0
  40f724:	cset	w9, ne  // ne = any
  40f728:	mov	w10, #0x1                   	// #1
  40f72c:	eor	w9, w9, #0x1
  40f730:	eor	w9, w9, w10
  40f734:	eor	w9, w9, w10
  40f738:	and	w9, w9, #0x1
  40f73c:	mov	w0, w9
  40f740:	sxtw	x8, w0
  40f744:	cbz	x8, 40f768 <manager_get_machine_by_pid+0x80>
  40f748:	mov	w8, wzr
  40f74c:	mov	w0, w8
  40f750:	adrp	x1, 41a000 <operation_new+0x40>
  40f754:	add	x1, x1, #0xe18
  40f758:	ldr	x2, [sp, #32]
  40f75c:	mov	w3, #0x5b4                 	// #1460
  40f760:	ldr	x4, [sp, #24]
  40f764:	bl	404bd0 <log_assert_failed_realm@plt>
  40f768:	ldur	w8, [x29, #-20]
  40f76c:	cmp	w8, #0x1
  40f770:	cset	w8, ge  // ge = tcont
  40f774:	mov	w9, #0x1                   	// #1
  40f778:	eor	w8, w8, #0x1
  40f77c:	eor	w8, w8, w9
  40f780:	eor	w8, w8, w9
  40f784:	and	w8, w8, #0x1
  40f788:	mov	w0, w8
  40f78c:	sxtw	x10, w0
  40f790:	cbz	x10, 40f7b4 <manager_get_machine_by_pid+0xcc>
  40f794:	mov	w8, wzr
  40f798:	mov	w0, w8
  40f79c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40f7a0:	add	x1, x1, #0x394
  40f7a4:	ldr	x2, [sp, #32]
  40f7a8:	mov	w3, #0x5b5                 	// #1461
  40f7ac:	ldr	x4, [sp, #24]
  40f7b0:	bl	404bd0 <log_assert_failed_realm@plt>
  40f7b4:	ldur	x8, [x29, #-32]
  40f7b8:	cmp	x8, #0x0
  40f7bc:	cset	w9, ne  // ne = any
  40f7c0:	mov	w10, #0x1                   	// #1
  40f7c4:	eor	w9, w9, #0x1
  40f7c8:	eor	w9, w9, w10
  40f7cc:	eor	w9, w9, w10
  40f7d0:	and	w9, w9, #0x1
  40f7d4:	mov	w0, w9
  40f7d8:	sxtw	x8, w0
  40f7dc:	cbz	x8, 40f800 <manager_get_machine_by_pid+0x118>
  40f7e0:	mov	w8, wzr
  40f7e4:	mov	w0, w8
  40f7e8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f7ec:	add	x1, x1, #0x9f6
  40f7f0:	ldr	x2, [sp, #32]
  40f7f4:	mov	w3, #0x5b6                 	// #1462
  40f7f8:	ldr	x4, [sp, #24]
  40f7fc:	bl	404bd0 <log_assert_failed_realm@plt>
  40f800:	ldur	x8, [x29, #-16]
  40f804:	ldr	x0, [x8, #32]
  40f808:	ldur	w9, [x29, #-20]
  40f80c:	str	x0, [sp, #16]
  40f810:	mov	w0, w9
  40f814:	bl	40f8b0 <PID_TO_PTR>
  40f818:	ldr	x8, [sp, #16]
  40f81c:	str	x0, [sp, #8]
  40f820:	mov	x0, x8
  40f824:	ldr	x1, [sp, #8]
  40f828:	bl	40e6ec <hashmap_get>
  40f82c:	stur	x0, [x29, #-40]
  40f830:	ldur	x8, [x29, #-40]
  40f834:	cbnz	x8, 40f87c <manager_get_machine_by_pid+0x194>
  40f838:	add	x1, sp, #0x28
  40f83c:	mov	x8, xzr
  40f840:	str	x8, [sp, #40]
  40f844:	ldur	w0, [x29, #-20]
  40f848:	bl	4053f0 <cg_pid_get_unit@plt>
  40f84c:	stur	w0, [x29, #-44]
  40f850:	ldur	w9, [x29, #-44]
  40f854:	cmp	w9, #0x0
  40f858:	cset	w9, lt  // lt = tstop
  40f85c:	tbnz	w9, #0, 40f874 <manager_get_machine_by_pid+0x18c>
  40f860:	ldur	x8, [x29, #-16]
  40f864:	ldr	x0, [x8, #24]
  40f868:	ldr	x1, [sp, #40]
  40f86c:	bl	40e6ec <hashmap_get>
  40f870:	stur	x0, [x29, #-40]
  40f874:	add	x0, sp, #0x28
  40f878:	bl	40e940 <freep>
  40f87c:	ldur	x8, [x29, #-40]
  40f880:	cbnz	x8, 40f88c <manager_get_machine_by_pid+0x1a4>
  40f884:	stur	wzr, [x29, #-4]
  40f888:	b	40f8a0 <manager_get_machine_by_pid+0x1b8>
  40f88c:	ldur	x8, [x29, #-40]
  40f890:	ldur	x9, [x29, #-32]
  40f894:	str	x8, [x9]
  40f898:	mov	w10, #0x1                   	// #1
  40f89c:	stur	w10, [x29, #-4]
  40f8a0:	ldur	w0, [x29, #-4]
  40f8a4:	ldp	x29, x30, [sp, #96]
  40f8a8:	add	sp, sp, #0x70
  40f8ac:	ret

000000000040f8b0 <PID_TO_PTR>:
  40f8b0:	sub	sp, sp, #0x10
  40f8b4:	str	w0, [sp, #12]
  40f8b8:	ldrsw	x8, [sp, #12]
  40f8bc:	mov	x0, x8
  40f8c0:	add	sp, sp, #0x10
  40f8c4:	ret

000000000040f8c8 <manager_add_machine>:
  40f8c8:	sub	sp, sp, #0x40
  40f8cc:	stp	x29, x30, [sp, #48]
  40f8d0:	add	x29, sp, #0x30
  40f8d4:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40f8d8:	add	x8, x8, #0xec5
  40f8dc:	add	x8, x8, #0x3
  40f8e0:	stur	x0, [x29, #-16]
  40f8e4:	str	x1, [sp, #24]
  40f8e8:	str	x2, [sp, #16]
  40f8ec:	str	x8, [sp]
  40f8f0:	ldur	x8, [x29, #-16]
  40f8f4:	cmp	x8, #0x0
  40f8f8:	cset	w9, ne  // ne = any
  40f8fc:	mov	w10, #0x1                   	// #1
  40f900:	eor	w9, w9, #0x1
  40f904:	eor	w9, w9, w10
  40f908:	eor	w9, w9, w10
  40f90c:	and	w9, w9, #0x1
  40f910:	mov	w0, w9
  40f914:	sxtw	x8, w0
  40f918:	cbz	x8, 40f940 <manager_add_machine+0x78>
  40f91c:	mov	w8, wzr
  40f920:	mov	w0, w8
  40f924:	adrp	x1, 41a000 <operation_new+0x40>
  40f928:	add	x1, x1, #0xe18
  40f92c:	ldr	x2, [sp]
  40f930:	mov	w3, #0x5ca                 	// #1482
  40f934:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f938:	add	x4, x4, #0x39d
  40f93c:	bl	404bd0 <log_assert_failed_realm@plt>
  40f940:	ldr	x8, [sp, #24]
  40f944:	cmp	x8, #0x0
  40f948:	cset	w9, ne  // ne = any
  40f94c:	mov	w10, #0x1                   	// #1
  40f950:	eor	w9, w9, #0x1
  40f954:	eor	w9, w9, w10
  40f958:	eor	w9, w9, w10
  40f95c:	and	w9, w9, #0x1
  40f960:	mov	w0, w9
  40f964:	sxtw	x8, w0
  40f968:	cbz	x8, 40f990 <manager_add_machine+0xc8>
  40f96c:	mov	w8, wzr
  40f970:	mov	w0, w8
  40f974:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40f978:	add	x1, x1, #0x3a3
  40f97c:	ldr	x2, [sp]
  40f980:	mov	w3, #0x5cb                 	// #1483
  40f984:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40f988:	add	x4, x4, #0x39d
  40f98c:	bl	404bd0 <log_assert_failed_realm@plt>
  40f990:	ldur	x8, [x29, #-16]
  40f994:	ldr	x0, [x8, #16]
  40f998:	ldr	x1, [sp, #24]
  40f99c:	bl	40e6ec <hashmap_get>
  40f9a0:	str	x0, [sp, #8]
  40f9a4:	ldr	x8, [sp, #8]
  40f9a8:	cbnz	x8, 40f9d4 <manager_add_machine+0x10c>
  40f9ac:	ldur	x0, [x29, #-16]
  40f9b0:	ldr	x2, [sp, #24]
  40f9b4:	mov	w1, #0xffffffff            	// #-1
  40f9b8:	bl	407bfc <machine_new>
  40f9bc:	str	x0, [sp, #8]
  40f9c0:	ldr	x8, [sp, #8]
  40f9c4:	cbnz	x8, 40f9d4 <manager_add_machine+0x10c>
  40f9c8:	mov	w8, #0xfffffff4            	// #-12
  40f9cc:	stur	w8, [x29, #-4]
  40f9d0:	b	40f9ec <manager_add_machine+0x124>
  40f9d4:	ldr	x8, [sp, #16]
  40f9d8:	cbz	x8, 40f9e8 <manager_add_machine+0x120>
  40f9dc:	ldr	x8, [sp, #8]
  40f9e0:	ldr	x9, [sp, #16]
  40f9e4:	str	x8, [x9]
  40f9e8:	stur	wzr, [x29, #-4]
  40f9ec:	ldur	w0, [x29, #-4]
  40f9f0:	ldp	x29, x30, [sp, #48]
  40f9f4:	add	sp, sp, #0x40
  40f9f8:	ret

000000000040f9fc <closep>:
  40f9fc:	sub	sp, sp, #0x20
  40fa00:	stp	x29, x30, [sp, #16]
  40fa04:	add	x29, sp, #0x10
  40fa08:	str	x0, [sp, #8]
  40fa0c:	ldr	x8, [sp, #8]
  40fa10:	ldr	w0, [x8]
  40fa14:	bl	4052c0 <safe_close@plt>
  40fa18:	ldp	x29, x30, [sp, #16]
  40fa1c:	add	sp, sp, #0x20
  40fa20:	ret

000000000040fa24 <sd_bus_creds_unrefp>:
  40fa24:	sub	sp, sp, #0x20
  40fa28:	stp	x29, x30, [sp, #16]
  40fa2c:	add	x29, sp, #0x10
  40fa30:	str	x0, [sp, #8]
  40fa34:	ldr	x8, [sp, #8]
  40fa38:	ldr	x8, [x8]
  40fa3c:	cbz	x8, 40fa4c <sd_bus_creds_unrefp+0x28>
  40fa40:	ldr	x8, [sp, #8]
  40fa44:	ldr	x0, [x8]
  40fa48:	bl	405400 <sd_bus_creds_unref@plt>
  40fa4c:	ldp	x29, x30, [sp, #16]
  40fa50:	add	sp, sp, #0x20
  40fa54:	ret

000000000040fa58 <strempty>:
  40fa58:	sub	sp, sp, #0x20
  40fa5c:	str	x0, [sp, #24]
  40fa60:	ldr	x8, [sp, #24]
  40fa64:	str	x8, [sp, #16]
  40fa68:	cbz	x8, 40fa78 <strempty+0x20>
  40fa6c:	ldr	x8, [sp, #16]
  40fa70:	str	x8, [sp, #8]
  40fa74:	b	40fa84 <strempty+0x2c>
  40fa78:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  40fa7c:	add	x8, x8, #0xbc7
  40fa80:	str	x8, [sp, #8]
  40fa84:	ldr	x8, [sp, #8]
  40fa88:	mov	x0, x8
  40fa8c:	add	sp, sp, #0x20
  40fa90:	ret

000000000040fa94 <hashmap_freep>:
  40fa94:	sub	sp, sp, #0x20
  40fa98:	stp	x29, x30, [sp, #16]
  40fa9c:	add	x29, sp, #0x10
  40faa0:	str	x0, [sp, #8]
  40faa4:	ldr	x8, [sp, #8]
  40faa8:	ldr	x8, [x8]
  40faac:	cbz	x8, 40fabc <hashmap_freep+0x28>
  40fab0:	ldr	x8, [sp, #8]
  40fab4:	ldr	x0, [x8]
  40fab8:	bl	40fac8 <hashmap_free>
  40fabc:	ldp	x29, x30, [sp, #16]
  40fac0:	add	sp, sp, #0x20
  40fac4:	ret

000000000040fac8 <hashmap_free>:
  40fac8:	sub	sp, sp, #0x20
  40facc:	stp	x29, x30, [sp, #16]
  40fad0:	add	x29, sp, #0x10
  40fad4:	mov	x8, xzr
  40fad8:	str	x0, [sp, #8]
  40fadc:	ldr	x0, [sp, #8]
  40fae0:	mov	x1, x8
  40fae4:	mov	x2, x8
  40fae8:	bl	404ca0 <internal_hashmap_free@plt>
  40faec:	ldp	x29, x30, [sp, #16]
  40faf0:	add	sp, sp, #0x20
  40faf4:	ret

000000000040faf8 <method_create_machine_internal>:
  40faf8:	sub	sp, sp, #0x60
  40fafc:	stp	x29, x30, [sp, #80]
  40fb00:	add	x29, sp, #0x50
  40fb04:	mov	x8, xzr
  40fb08:	mov	w9, #0x1                   	// #1
  40fb0c:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  40fb10:	add	x10, x10, #0xec5
  40fb14:	add	x10, x10, #0x3
  40fb18:	stur	x0, [x29, #-16]
  40fb1c:	and	w9, w1, w9
  40fb20:	sturb	w9, [x29, #-17]
  40fb24:	stur	x2, [x29, #-32]
  40fb28:	str	x3, [sp, #40]
  40fb2c:	ldur	x11, [x29, #-32]
  40fb30:	str	x11, [sp, #32]
  40fb34:	str	x8, [sp, #24]
  40fb38:	str	x10, [sp, #8]
  40fb3c:	ldur	x8, [x29, #-16]
  40fb40:	cmp	x8, #0x0
  40fb44:	cset	w9, ne  // ne = any
  40fb48:	mov	w10, #0x1                   	// #1
  40fb4c:	eor	w9, w9, #0x1
  40fb50:	eor	w9, w9, w10
  40fb54:	eor	w9, w9, w10
  40fb58:	and	w9, w9, #0x1
  40fb5c:	mov	w0, w9
  40fb60:	sxtw	x8, w0
  40fb64:	cbz	x8, 40fb8c <method_create_machine_internal+0x94>
  40fb68:	mov	w8, wzr
  40fb6c:	mov	w0, w8
  40fb70:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40fb74:	add	x1, x1, #0xebd
  40fb78:	ldr	x2, [sp, #8]
  40fb7c:	mov	w3, #0x161                 	// #353
  40fb80:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40fb84:	add	x4, x4, #0x78b
  40fb88:	bl	404bd0 <log_assert_failed_realm@plt>
  40fb8c:	ldr	x8, [sp, #32]
  40fb90:	cmp	x8, #0x0
  40fb94:	cset	w9, ne  // ne = any
  40fb98:	mov	w10, #0x1                   	// #1
  40fb9c:	eor	w9, w9, #0x1
  40fba0:	eor	w9, w9, w10
  40fba4:	eor	w9, w9, w10
  40fba8:	and	w9, w9, #0x1
  40fbac:	mov	w0, w9
  40fbb0:	sxtw	x8, w0
  40fbb4:	cbz	x8, 40fbdc <method_create_machine_internal+0xe4>
  40fbb8:	mov	w8, wzr
  40fbbc:	mov	w0, w8
  40fbc0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40fbc4:	add	x1, x1, #0x32b
  40fbc8:	ldr	x2, [sp, #8]
  40fbcc:	mov	w3, #0x162                 	// #354
  40fbd0:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  40fbd4:	add	x4, x4, #0x78b
  40fbd8:	bl	404bd0 <log_assert_failed_realm@plt>
  40fbdc:	ldr	x0, [sp, #32]
  40fbe0:	ldur	x1, [x29, #-16]
  40fbe4:	ldurb	w8, [x29, #-17]
  40fbe8:	ldr	x4, [sp, #40]
  40fbec:	and	w2, w8, #0x1
  40fbf0:	add	x3, sp, #0x18
  40fbf4:	bl	40fca8 <method_create_or_register_machine>
  40fbf8:	str	w0, [sp, #20]
  40fbfc:	ldr	w8, [sp, #20]
  40fc00:	cmp	w8, #0x0
  40fc04:	cset	w8, ge  // ge = tcont
  40fc08:	tbnz	w8, #0, 40fc18 <method_create_machine_internal+0x120>
  40fc0c:	ldr	w8, [sp, #20]
  40fc10:	stur	w8, [x29, #-4]
  40fc14:	b	40fc98 <method_create_machine_internal+0x1a0>
  40fc18:	ldur	x0, [x29, #-16]
  40fc1c:	mov	w1, #0x61                  	// #97
  40fc20:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  40fc24:	add	x2, x2, #0xaa5
  40fc28:	bl	405410 <sd_bus_message_enter_container@plt>
  40fc2c:	str	w0, [sp, #20]
  40fc30:	ldr	w8, [sp, #20]
  40fc34:	cmp	w8, #0x0
  40fc38:	cset	w8, ge  // ge = tcont
  40fc3c:	tbnz	w8, #0, 40fc44 <method_create_machine_internal+0x14c>
  40fc40:	b	40fc88 <method_create_machine_internal+0x190>
  40fc44:	ldr	x0, [sp, #24]
  40fc48:	ldur	x1, [x29, #-16]
  40fc4c:	ldr	x2, [sp, #40]
  40fc50:	bl	409334 <machine_start>
  40fc54:	str	w0, [sp, #20]
  40fc58:	ldr	w8, [sp, #20]
  40fc5c:	cmp	w8, #0x0
  40fc60:	cset	w8, ge  // ge = tcont
  40fc64:	tbnz	w8, #0, 40fc6c <method_create_machine_internal+0x174>
  40fc68:	b	40fc88 <method_create_machine_internal+0x190>
  40fc6c:	ldur	x0, [x29, #-16]
  40fc70:	bl	405420 <sd_bus_message_ref@plt>
  40fc74:	ldr	x8, [sp, #24]
  40fc78:	str	x0, [x8, #112]
  40fc7c:	mov	w9, #0x1                   	// #1
  40fc80:	stur	w9, [x29, #-4]
  40fc84:	b	40fc98 <method_create_machine_internal+0x1a0>
  40fc88:	ldr	x0, [sp, #24]
  40fc8c:	bl	409e88 <machine_add_to_gc_queue>
  40fc90:	ldr	w8, [sp, #20]
  40fc94:	stur	w8, [x29, #-4]
  40fc98:	ldur	w0, [x29, #-4]
  40fc9c:	ldp	x29, x30, [sp, #80]
  40fca0:	add	sp, sp, #0x60
  40fca4:	ret

000000000040fca8 <method_create_or_register_machine>:
  40fca8:	sub	sp, sp, #0xf0
  40fcac:	stp	x29, x30, [sp, #224]
  40fcb0:	add	x29, sp, #0xe0
  40fcb4:	sub	x8, x29, #0x38
  40fcb8:	mov	x9, xzr
  40fcbc:	adrp	x10, 41c000 <machine_hash_ops+0x13e8>
  40fcc0:	add	x10, x10, #0x848
  40fcc4:	mov	w11, #0x1                   	// #1
  40fcc8:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  40fccc:	add	x12, x12, #0xec5
  40fcd0:	add	x12, x12, #0x3
  40fcd4:	adrp	x13, 41c000 <machine_hash_ops+0x13e8>
  40fcd8:	add	x13, x13, #0x7df
  40fcdc:	str	x0, [x8, #40]
  40fce0:	str	x1, [x8, #32]
  40fce4:	and	w11, w2, w11
  40fce8:	sturb	w11, [x29, #-25]
  40fcec:	str	x3, [x8, #16]
  40fcf0:	str	x4, [x8, #8]
  40fcf4:	stur	x9, [x29, #-88]
  40fcf8:	str	xzr, [sp, #80]
  40fcfc:	str	x8, [sp, #24]
  40fd00:	str	x10, [sp, #16]
  40fd04:	str	x12, [sp, #8]
  40fd08:	str	x13, [sp]
  40fd0c:	ldr	x8, [sp, #24]
  40fd10:	ldr	x9, [x8, #40]
  40fd14:	cmp	x9, #0x0
  40fd18:	cset	w10, ne  // ne = any
  40fd1c:	mov	w11, #0x1                   	// #1
  40fd20:	eor	w10, w10, #0x1
  40fd24:	eor	w10, w10, w11
  40fd28:	eor	w10, w10, w11
  40fd2c:	and	w10, w10, #0x1
  40fd30:	mov	w0, w10
  40fd34:	sxtw	x9, w0
  40fd38:	cbz	x9, 40fd5c <method_create_or_register_machine+0xb4>
  40fd3c:	mov	w8, wzr
  40fd40:	mov	w0, w8
  40fd44:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40fd48:	add	x1, x1, #0x32b
  40fd4c:	ldr	x2, [sp, #8]
  40fd50:	mov	w3, #0xea                  	// #234
  40fd54:	ldr	x4, [sp]
  40fd58:	bl	404bd0 <log_assert_failed_realm@plt>
  40fd5c:	ldr	x8, [sp, #24]
  40fd60:	ldr	x9, [x8, #32]
  40fd64:	cmp	x9, #0x0
  40fd68:	cset	w10, ne  // ne = any
  40fd6c:	mov	w11, #0x1                   	// #1
  40fd70:	eor	w10, w10, #0x1
  40fd74:	eor	w10, w10, w11
  40fd78:	eor	w10, w10, w11
  40fd7c:	and	w10, w10, #0x1
  40fd80:	mov	w0, w10
  40fd84:	sxtw	x9, w0
  40fd88:	cbz	x9, 40fdac <method_create_or_register_machine+0x104>
  40fd8c:	mov	w8, wzr
  40fd90:	mov	w0, w8
  40fd94:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40fd98:	add	x1, x1, #0xebd
  40fd9c:	ldr	x2, [sp, #8]
  40fda0:	mov	w3, #0xeb                  	// #235
  40fda4:	ldr	x4, [sp]
  40fda8:	bl	404bd0 <log_assert_failed_realm@plt>
  40fdac:	ldr	x8, [sp, #24]
  40fdb0:	ldr	x9, [x8, #16]
  40fdb4:	cmp	x9, #0x0
  40fdb8:	cset	w10, ne  // ne = any
  40fdbc:	mov	w11, #0x1                   	// #1
  40fdc0:	eor	w10, w10, #0x1
  40fdc4:	eor	w10, w10, w11
  40fdc8:	eor	w10, w10, w11
  40fdcc:	and	w10, w10, #0x1
  40fdd0:	mov	w0, w10
  40fdd4:	sxtw	x9, w0
  40fdd8:	cbz	x9, 40fdfc <method_create_or_register_machine+0x154>
  40fddc:	mov	w8, wzr
  40fde0:	mov	w0, w8
  40fde4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40fde8:	add	x1, x1, #0x845
  40fdec:	ldr	x2, [sp, #8]
  40fdf0:	mov	w3, #0xec                  	// #236
  40fdf4:	ldr	x4, [sp]
  40fdf8:	bl	404bd0 <log_assert_failed_realm@plt>
  40fdfc:	ldr	x8, [sp, #24]
  40fe00:	ldr	x0, [x8, #32]
  40fe04:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  40fe08:	add	x1, x1, #0x7ae
  40fe0c:	sub	x2, x29, #0x38
  40fe10:	bl	405170 <sd_bus_message_read@plt>
  40fe14:	str	w0, [sp, #76]
  40fe18:	ldr	w9, [sp, #76]
  40fe1c:	cmp	w9, #0x0
  40fe20:	cset	w9, ge  // ge = tcont
  40fe24:	tbnz	w9, #0, 40fe34 <method_create_or_register_machine+0x18c>
  40fe28:	ldr	w8, [sp, #76]
  40fe2c:	stur	w8, [x29, #-4]
  40fe30:	b	4102d4 <method_create_or_register_machine+0x62c>
  40fe34:	ldr	x8, [sp, #24]
  40fe38:	ldr	x0, [x8]
  40fe3c:	mov	w9, wzr
  40fe40:	and	w1, w9, #0x1
  40fe44:	bl	404d90 <hostname_is_valid@plt>
  40fe48:	tbnz	w0, #0, 40fe6c <method_create_or_register_machine+0x1c4>
  40fe4c:	ldr	x8, [sp, #24]
  40fe50:	ldr	x0, [x8, #8]
  40fe54:	ldr	x1, [sp, #16]
  40fe58:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40fe5c:	add	x2, x2, #0x86f
  40fe60:	bl	4051b0 <sd_bus_error_setf@plt>
  40fe64:	stur	w0, [x29, #-4]
  40fe68:	b	4102d4 <method_create_or_register_machine+0x62c>
  40fe6c:	ldr	x8, [sp, #24]
  40fe70:	ldr	x0, [x8, #32]
  40fe74:	mov	w1, #0x79                  	// #121
  40fe78:	add	x2, sp, #0x68
  40fe7c:	add	x3, sp, #0x58
  40fe80:	bl	405430 <sd_bus_message_read_array@plt>
  40fe84:	str	w0, [sp, #76]
  40fe88:	ldr	w9, [sp, #76]
  40fe8c:	cmp	w9, #0x0
  40fe90:	cset	w9, ge  // ge = tcont
  40fe94:	tbnz	w9, #0, 40fea4 <method_create_or_register_machine+0x1fc>
  40fe98:	ldr	w8, [sp, #76]
  40fe9c:	stur	w8, [x29, #-4]
  40fea0:	b	4102d4 <method_create_or_register_machine+0x62c>
  40fea4:	ldr	x8, [sp, #88]
  40fea8:	cbnz	x8, 40fec0 <method_create_or_register_machine+0x218>
  40feac:	str	xzr, [sp, #56]
  40feb0:	str	xzr, [sp, #64]
  40feb4:	ldur	q0, [sp, #56]
  40feb8:	str	q0, [sp, #112]
  40febc:	b	40ff00 <method_create_or_register_machine+0x258>
  40fec0:	ldr	x8, [sp, #88]
  40fec4:	cmp	x8, #0x10
  40fec8:	b.ne	40fee0 <method_create_or_register_machine+0x238>  // b.any
  40fecc:	ldr	x1, [sp, #104]
  40fed0:	ldr	x2, [sp, #88]
  40fed4:	add	x0, sp, #0x70
  40fed8:	bl	405440 <memcpy@plt>
  40fedc:	b	40ff00 <method_create_or_register_machine+0x258>
  40fee0:	ldr	x8, [sp, #24]
  40fee4:	ldr	x0, [x8, #8]
  40fee8:	ldr	x1, [sp, #16]
  40feec:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40fef0:	add	x2, x2, #0x884
  40fef4:	bl	4051b0 <sd_bus_error_setf@plt>
  40fef8:	stur	w0, [x29, #-4]
  40fefc:	b	4102d4 <method_create_or_register_machine+0x62c>
  40ff00:	ldr	x8, [sp, #24]
  40ff04:	ldr	x0, [x8, #32]
  40ff08:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  40ff0c:	add	x1, x1, #0x8a1
  40ff10:	sub	x2, x29, #0x40
  40ff14:	sub	x3, x29, #0x48
  40ff18:	sub	x4, x29, #0x60
  40ff1c:	sub	x5, x29, #0x50
  40ff20:	bl	405170 <sd_bus_message_read@plt>
  40ff24:	str	w0, [sp, #76]
  40ff28:	ldr	w9, [sp, #76]
  40ff2c:	cmp	w9, #0x0
  40ff30:	cset	w9, ge  // ge = tcont
  40ff34:	tbnz	w9, #0, 40ff44 <method_create_or_register_machine+0x29c>
  40ff38:	ldr	w8, [sp, #76]
  40ff3c:	stur	w8, [x29, #-4]
  40ff40:	b	4102d4 <method_create_or_register_machine+0x62c>
  40ff44:	ldurb	w8, [x29, #-25]
  40ff48:	tbnz	w8, #0, 40ff50 <method_create_or_register_machine+0x2a8>
  40ff4c:	b	410000 <method_create_or_register_machine+0x358>
  40ff50:	ldr	x8, [sp, #24]
  40ff54:	ldr	x0, [x8, #32]
  40ff58:	mov	w1, #0x69                  	// #105
  40ff5c:	sub	x2, x29, #0x58
  40ff60:	add	x3, sp, #0x50
  40ff64:	bl	405430 <sd_bus_message_read_array@plt>
  40ff68:	str	w0, [sp, #76]
  40ff6c:	ldr	w9, [sp, #76]
  40ff70:	cmp	w9, #0x0
  40ff74:	cset	w9, ge  // ge = tcont
  40ff78:	tbnz	w9, #0, 40ff88 <method_create_or_register_machine+0x2e0>
  40ff7c:	ldr	w8, [sp, #76]
  40ff80:	stur	w8, [x29, #-4]
  40ff84:	b	4102d4 <method_create_or_register_machine+0x62c>
  40ff88:	ldr	x8, [sp, #80]
  40ff8c:	mov	x9, #0x4                   	// #4
  40ff90:	udiv	x8, x8, x9
  40ff94:	str	x8, [sp, #80]
  40ff98:	str	xzr, [sp, #48]
  40ff9c:	ldr	x8, [sp, #48]
  40ffa0:	ldr	x9, [sp, #80]
  40ffa4:	cmp	x8, x9
  40ffa8:	b.cs	410000 <method_create_or_register_machine+0x358>  // b.hs, b.nlast
  40ffac:	ldur	x8, [x29, #-88]
  40ffb0:	ldr	x9, [sp, #48]
  40ffb4:	ldr	w10, [x8, x9, lsl #2]
  40ffb8:	cmp	w10, #0x0
  40ffbc:	cset	w10, gt
  40ffc0:	tbnz	w10, #0, 40fff0 <method_create_or_register_machine+0x348>
  40ffc4:	ldr	x8, [sp, #24]
  40ffc8:	ldr	x0, [x8, #8]
  40ffcc:	ldur	x9, [x29, #-88]
  40ffd0:	ldr	x10, [sp, #48]
  40ffd4:	ldr	w3, [x9, x10, lsl #2]
  40ffd8:	ldr	x1, [sp, #16]
  40ffdc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  40ffe0:	add	x2, x2, #0x8a6
  40ffe4:	bl	4051b0 <sd_bus_error_setf@plt>
  40ffe8:	stur	w0, [x29, #-4]
  40ffec:	b	4102d4 <method_create_or_register_machine+0x62c>
  40fff0:	ldr	x8, [sp, #48]
  40fff4:	add	x8, x8, #0x1
  40fff8:	str	x8, [sp, #48]
  40fffc:	b	40ff9c <method_create_or_register_machine+0x2f4>
  410000:	ldur	x0, [x29, #-72]
  410004:	bl	4102e4 <isempty>
  410008:	tbnz	w0, #0, 410010 <method_create_or_register_machine+0x368>
  41000c:	b	41001c <method_create_or_register_machine+0x374>
  410010:	mov	w8, #0xffffffff            	// #-1
  410014:	stur	w8, [x29, #-92]
  410018:	b	410058 <method_create_or_register_machine+0x3b0>
  41001c:	ldur	x0, [x29, #-72]
  410020:	bl	409300 <machine_class_from_string>
  410024:	stur	w0, [x29, #-92]
  410028:	ldur	w8, [x29, #-92]
  41002c:	cmp	w8, #0x0
  410030:	cset	w8, ge  // ge = tcont
  410034:	tbnz	w8, #0, 410058 <method_create_or_register_machine+0x3b0>
  410038:	ldr	x8, [sp, #24]
  41003c:	ldr	x0, [x8, #8]
  410040:	ldr	x1, [sp, #16]
  410044:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  410048:	add	x2, x2, #0x8c9
  41004c:	bl	4051b0 <sd_bus_error_setf@plt>
  410050:	stur	w0, [x29, #-4]
  410054:	b	4102d4 <method_create_or_register_machine+0x62c>
  410058:	ldur	w8, [x29, #-96]
  41005c:	cmp	w8, #0x1
  410060:	b.ne	410084 <method_create_or_register_machine+0x3dc>  // b.any
  410064:	ldr	x8, [sp, #24]
  410068:	ldr	x0, [x8, #8]
  41006c:	ldr	x1, [sp, #16]
  410070:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  410074:	add	x2, x2, #0x8e9
  410078:	bl	4051b0 <sd_bus_error_setf@plt>
  41007c:	stur	w0, [x29, #-4]
  410080:	b	4102d4 <method_create_or_register_machine+0x62c>
  410084:	ldur	x0, [x29, #-80]
  410088:	bl	4102e4 <isempty>
  41008c:	tbnz	w0, #0, 4100bc <method_create_or_register_machine+0x414>
  410090:	ldur	x0, [x29, #-80]
  410094:	bl	405450 <path_is_absolute@plt>
  410098:	tbnz	w0, #0, 4100bc <method_create_or_register_machine+0x414>
  41009c:	ldr	x8, [sp, #24]
  4100a0:	ldr	x0, [x8, #8]
  4100a4:	ldr	x1, [sp, #16]
  4100a8:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  4100ac:	add	x2, x2, #0x8fc
  4100b0:	bl	4051b0 <sd_bus_error_setf@plt>
  4100b4:	stur	w0, [x29, #-4]
  4100b8:	b	4102d4 <method_create_or_register_machine+0x62c>
  4100bc:	ldur	w8, [x29, #-96]
  4100c0:	cbnz	w8, 410158 <method_create_or_register_machine+0x4b0>
  4100c4:	add	x2, sp, #0x28
  4100c8:	mov	x8, xzr
  4100cc:	str	x8, [sp, #40]
  4100d0:	ldr	x8, [sp, #24]
  4100d4:	ldr	x0, [x8, #32]
  4100d8:	mov	x1, #0x1                   	// #1
  4100dc:	bl	4051e0 <sd_bus_query_sender_creds@plt>
  4100e0:	str	w0, [sp, #76]
  4100e4:	ldr	w9, [sp, #76]
  4100e8:	cmp	w9, #0x0
  4100ec:	cset	w9, ge  // ge = tcont
  4100f0:	tbnz	w9, #0, 410108 <method_create_or_register_machine+0x460>
  4100f4:	ldr	w8, [sp, #76]
  4100f8:	stur	w8, [x29, #-4]
  4100fc:	mov	w8, #0x1                   	// #1
  410100:	str	w8, [sp, #36]
  410104:	b	410140 <method_create_or_register_machine+0x498>
  410108:	ldr	x0, [sp, #40]
  41010c:	sub	x1, x29, #0x60
  410110:	bl	4051f0 <sd_bus_creds_get_pid@plt>
  410114:	str	w0, [sp, #76]
  410118:	ldr	w8, [sp, #76]
  41011c:	cmp	w8, #0x0
  410120:	cset	w8, ge  // ge = tcont
  410124:	tbnz	w8, #0, 41013c <method_create_or_register_machine+0x494>
  410128:	ldr	w8, [sp, #76]
  41012c:	stur	w8, [x29, #-4]
  410130:	mov	w8, #0x1                   	// #1
  410134:	str	w8, [sp, #36]
  410138:	b	410140 <method_create_or_register_machine+0x498>
  41013c:	str	wzr, [sp, #36]
  410140:	add	x0, sp, #0x28
  410144:	bl	40fa24 <sd_bus_creds_unrefp>
  410148:	ldr	w8, [sp, #36]
  41014c:	cbz	w8, 410158 <method_create_or_register_machine+0x4b0>
  410150:	b	410154 <method_create_or_register_machine+0x4ac>
  410154:	b	4102d4 <method_create_or_register_machine+0x62c>
  410158:	ldr	x8, [sp, #24]
  41015c:	ldr	x9, [x8, #40]
  410160:	ldr	x0, [x9, #16]
  410164:	ldr	x1, [x8]
  410168:	bl	40e6ec <hashmap_get>
  41016c:	cbz	x0, 410198 <method_create_or_register_machine+0x4f0>
  410170:	ldr	x8, [sp, #24]
  410174:	ldr	x0, [x8, #8]
  410178:	ldr	x3, [x8]
  41017c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410180:	add	x1, x1, #0x92d
  410184:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  410188:	add	x2, x2, #0x954
  41018c:	bl	4051b0 <sd_bus_error_setf@plt>
  410190:	stur	w0, [x29, #-4]
  410194:	b	4102d4 <method_create_or_register_machine+0x62c>
  410198:	ldr	x8, [sp, #24]
  41019c:	ldr	x0, [x8, #40]
  4101a0:	ldr	x1, [x8]
  4101a4:	add	x2, sp, #0x60
  4101a8:	bl	40f8c8 <manager_add_machine>
  4101ac:	str	w0, [sp, #76]
  4101b0:	ldr	w9, [sp, #76]
  4101b4:	cmp	w9, #0x0
  4101b8:	cset	w9, ge  // ge = tcont
  4101bc:	tbnz	w9, #0, 4101cc <method_create_or_register_machine+0x524>
  4101c0:	ldr	w8, [sp, #76]
  4101c4:	stur	w8, [x29, #-4]
  4101c8:	b	4102d4 <method_create_or_register_machine+0x62c>
  4101cc:	ldur	w8, [x29, #-96]
  4101d0:	ldr	x9, [sp, #96]
  4101d4:	str	w8, [x9, #80]
  4101d8:	ldur	w8, [x29, #-92]
  4101dc:	ldr	x9, [sp, #96]
  4101e0:	str	w8, [x9, #32]
  4101e4:	ldr	x9, [sp, #96]
  4101e8:	ldr	q0, [sp, #112]
  4101ec:	str	q0, [x9, #16]
  4101f0:	ldur	x0, [x29, #-64]
  4101f4:	bl	4102e4 <isempty>
  4101f8:	tbnz	w0, #0, 410224 <method_create_or_register_machine+0x57c>
  4101fc:	ldur	x0, [x29, #-64]
  410200:	bl	404dd0 <strdup@plt>
  410204:	ldr	x8, [sp, #96]
  410208:	str	x0, [x8, #48]
  41020c:	ldr	x8, [sp, #96]
  410210:	ldr	x8, [x8, #48]
  410214:	cbnz	x8, 410224 <method_create_or_register_machine+0x57c>
  410218:	mov	w8, #0xfffffff4            	// #-12
  41021c:	str	w8, [sp, #76]
  410220:	b	4102c4 <method_create_or_register_machine+0x61c>
  410224:	ldur	x0, [x29, #-80]
  410228:	bl	4102e4 <isempty>
  41022c:	tbnz	w0, #0, 410258 <method_create_or_register_machine+0x5b0>
  410230:	ldur	x0, [x29, #-80]
  410234:	bl	404dd0 <strdup@plt>
  410238:	ldr	x8, [sp, #96]
  41023c:	str	x0, [x8, #56]
  410240:	ldr	x8, [sp, #96]
  410244:	ldr	x8, [x8, #56]
  410248:	cbnz	x8, 410258 <method_create_or_register_machine+0x5b0>
  41024c:	mov	w8, #0xfffffff4            	// #-12
  410250:	str	w8, [sp, #76]
  410254:	b	4102c4 <method_create_or_register_machine+0x61c>
  410258:	ldr	x8, [sp, #80]
  41025c:	cmp	x8, #0x0
  410260:	cset	w9, ls  // ls = plast
  410264:	tbnz	w9, #0, 4102a8 <method_create_or_register_machine+0x600>
  410268:	ldur	x0, [x29, #-88]
  41026c:	ldr	x8, [sp, #80]
  410270:	mov	x9, #0x4                   	// #4
  410274:	mul	x1, x9, x8
  410278:	bl	405460 <memdup@plt>
  41027c:	ldr	x8, [sp, #96]
  410280:	str	x0, [x8, #120]
  410284:	ldr	x8, [sp, #96]
  410288:	ldr	x8, [x8, #120]
  41028c:	cbnz	x8, 41029c <method_create_or_register_machine+0x5f4>
  410290:	mov	w8, #0xfffffff4            	// #-12
  410294:	str	w8, [sp, #76]
  410298:	b	4102c4 <method_create_or_register_machine+0x61c>
  41029c:	ldr	x8, [sp, #80]
  4102a0:	ldr	x9, [sp, #96]
  4102a4:	str	x8, [x9, #128]
  4102a8:	ldr	x8, [sp, #96]
  4102ac:	ldr	x9, [sp, #24]
  4102b0:	ldr	x10, [x9, #16]
  4102b4:	str	x8, [x10]
  4102b8:	mov	w11, #0x1                   	// #1
  4102bc:	stur	w11, [x29, #-4]
  4102c0:	b	4102d4 <method_create_or_register_machine+0x62c>
  4102c4:	ldr	x0, [sp, #96]
  4102c8:	bl	409e88 <machine_add_to_gc_queue>
  4102cc:	ldr	w8, [sp, #76]
  4102d0:	stur	w8, [x29, #-4]
  4102d4:	ldur	w0, [x29, #-4]
  4102d8:	ldp	x29, x30, [sp, #224]
  4102dc:	add	sp, sp, #0xf0
  4102e0:	ret

00000000004102e4 <isempty>:
  4102e4:	sub	sp, sp, #0x10
  4102e8:	str	x0, [sp, #8]
  4102ec:	ldr	x8, [sp, #8]
  4102f0:	mov	w9, #0x1                   	// #1
  4102f4:	str	w9, [sp, #4]
  4102f8:	cbz	x8, 410314 <isempty+0x30>
  4102fc:	ldr	x8, [sp, #8]
  410300:	ldrb	w9, [x8]
  410304:	cmp	w9, #0x0
  410308:	cset	w9, ne  // ne = any
  41030c:	eor	w9, w9, #0x1
  410310:	str	w9, [sp, #4]
  410314:	ldr	w8, [sp, #4]
  410318:	and	w0, w8, #0x1
  41031c:	add	sp, sp, #0x10
  410320:	ret

0000000000410324 <method_register_machine_internal>:
  410324:	sub	sp, sp, #0x60
  410328:	stp	x29, x30, [sp, #80]
  41032c:	add	x29, sp, #0x50
  410330:	mov	x8, xzr
  410334:	mov	w9, #0x1                   	// #1
  410338:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  41033c:	add	x10, x10, #0xec5
  410340:	add	x10, x10, #0x3
  410344:	stur	x0, [x29, #-16]
  410348:	and	w9, w1, w9
  41034c:	sturb	w9, [x29, #-17]
  410350:	stur	x2, [x29, #-32]
  410354:	str	x3, [sp, #40]
  410358:	ldur	x11, [x29, #-32]
  41035c:	str	x11, [sp, #32]
  410360:	str	x8, [sp, #24]
  410364:	str	x8, [sp, #16]
  410368:	str	x10, [sp]
  41036c:	ldur	x8, [x29, #-16]
  410370:	cmp	x8, #0x0
  410374:	cset	w9, ne  // ne = any
  410378:	mov	w10, #0x1                   	// #1
  41037c:	eor	w9, w9, #0x1
  410380:	eor	w9, w9, w10
  410384:	eor	w9, w9, w10
  410388:	and	w9, w9, #0x1
  41038c:	mov	w0, w9
  410390:	sxtw	x8, w0
  410394:	cbz	x8, 4103bc <method_register_machine_internal+0x98>
  410398:	mov	w8, wzr
  41039c:	mov	w0, w8
  4103a0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4103a4:	add	x1, x1, #0xebd
  4103a8:	ldr	x2, [sp]
  4103ac:	mov	w3, #0x186                 	// #390
  4103b0:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  4103b4:	add	x4, x4, #0x970
  4103b8:	bl	404bd0 <log_assert_failed_realm@plt>
  4103bc:	ldr	x8, [sp, #32]
  4103c0:	cmp	x8, #0x0
  4103c4:	cset	w9, ne  // ne = any
  4103c8:	mov	w10, #0x1                   	// #1
  4103cc:	eor	w9, w9, #0x1
  4103d0:	eor	w9, w9, w10
  4103d4:	eor	w9, w9, w10
  4103d8:	and	w9, w9, #0x1
  4103dc:	mov	w0, w9
  4103e0:	sxtw	x8, w0
  4103e4:	cbz	x8, 41040c <method_register_machine_internal+0xe8>
  4103e8:	mov	w8, wzr
  4103ec:	mov	w0, w8
  4103f0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4103f4:	add	x1, x1, #0x32b
  4103f8:	ldr	x2, [sp]
  4103fc:	mov	w3, #0x187                 	// #391
  410400:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  410404:	add	x4, x4, #0x970
  410408:	bl	404bd0 <log_assert_failed_realm@plt>
  41040c:	ldr	x0, [sp, #32]
  410410:	ldur	x1, [x29, #-16]
  410414:	ldurb	w8, [x29, #-17]
  410418:	ldr	x4, [sp, #40]
  41041c:	and	w2, w8, #0x1
  410420:	add	x3, sp, #0x10
  410424:	bl	40fca8 <method_create_or_register_machine>
  410428:	str	w0, [sp, #12]
  41042c:	ldr	w8, [sp, #12]
  410430:	cmp	w8, #0x0
  410434:	cset	w8, ge  // ge = tcont
  410438:	tbnz	w8, #0, 410450 <method_register_machine_internal+0x12c>
  41043c:	ldr	w8, [sp, #12]
  410440:	stur	w8, [x29, #-4]
  410444:	mov	w8, #0x1                   	// #1
  410448:	str	w8, [sp, #8]
  41044c:	b	410524 <method_register_machine_internal+0x200>
  410450:	ldr	x8, [sp, #16]
  410454:	ldr	w0, [x8, #80]
  410458:	ldr	x8, [sp, #16]
  41045c:	add	x1, x8, #0x40
  410460:	bl	4053f0 <cg_pid_get_unit@plt>
  410464:	str	w0, [sp, #12]
  410468:	ldr	w9, [sp, #12]
  41046c:	cmp	w9, #0x0
  410470:	cset	w9, ge  // ge = tcont
  410474:	tbnz	w9, #0, 41049c <method_register_machine_internal+0x178>
  410478:	ldr	x0, [sp, #40]
  41047c:	ldr	w1, [sp, #12]
  410480:	ldr	x8, [sp, #16]
  410484:	ldr	w3, [x8, #80]
  410488:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  41048c:	add	x2, x2, #0x9c6
  410490:	bl	405290 <sd_bus_error_set_errnof@plt>
  410494:	str	w0, [sp, #12]
  410498:	b	41050c <method_register_machine_internal+0x1e8>
  41049c:	ldr	x0, [sp, #16]
  4104a0:	ldr	x2, [sp, #40]
  4104a4:	mov	x8, xzr
  4104a8:	mov	x1, x8
  4104ac:	bl	409334 <machine_start>
  4104b0:	str	w0, [sp, #12]
  4104b4:	ldr	w9, [sp, #12]
  4104b8:	cmp	w9, #0x0
  4104bc:	cset	w9, ge  // ge = tcont
  4104c0:	tbnz	w9, #0, 4104c8 <method_register_machine_internal+0x1a4>
  4104c4:	b	41050c <method_register_machine_internal+0x1e8>
  4104c8:	ldr	x0, [sp, #16]
  4104cc:	bl	417d3c <machine_bus_path>
  4104d0:	str	x0, [sp, #24]
  4104d4:	ldr	x8, [sp, #24]
  4104d8:	cbnz	x8, 4104e8 <method_register_machine_internal+0x1c4>
  4104dc:	mov	w8, #0xfffffff4            	// #-12
  4104e0:	str	w8, [sp, #12]
  4104e4:	b	41050c <method_register_machine_internal+0x1e8>
  4104e8:	ldur	x0, [x29, #-16]
  4104ec:	ldr	x2, [sp, #24]
  4104f0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4104f4:	add	x1, x1, #0xb49
  4104f8:	bl	4051c0 <sd_bus_reply_method_return@plt>
  4104fc:	stur	w0, [x29, #-4]
  410500:	mov	w8, #0x1                   	// #1
  410504:	str	w8, [sp, #8]
  410508:	b	410524 <method_register_machine_internal+0x200>
  41050c:	ldr	x0, [sp, #16]
  410510:	bl	409e88 <machine_add_to_gc_queue>
  410514:	ldr	w8, [sp, #12]
  410518:	stur	w8, [x29, #-4]
  41051c:	mov	w8, #0x1                   	// #1
  410520:	str	w8, [sp, #8]
  410524:	add	x0, sp, #0x18
  410528:	bl	40e940 <freep>
  41052c:	ldur	w0, [x29, #-4]
  410530:	ldp	x29, x30, [sp, #80]
  410534:	add	sp, sp, #0x60
  410538:	ret

000000000041053c <redirect_method_to_machine>:
  41053c:	sub	sp, sp, #0x60
  410540:	stp	x29, x30, [sp, #80]
  410544:	add	x29, sp, #0x50
  410548:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  41054c:	add	x8, x8, #0xec5
  410550:	add	x8, x8, #0x3
  410554:	adrp	x9, 41c000 <machine_hash_ops+0x13e8>
  410558:	add	x9, x9, #0x9f2
  41055c:	stur	x0, [x29, #-16]
  410560:	stur	x1, [x29, #-24]
  410564:	stur	x2, [x29, #-32]
  410568:	str	x3, [sp, #40]
  41056c:	str	x8, [sp, #8]
  410570:	str	x9, [sp]
  410574:	ldur	x8, [x29, #-16]
  410578:	cmp	x8, #0x0
  41057c:	cset	w9, ne  // ne = any
  410580:	mov	w10, #0x1                   	// #1
  410584:	eor	w9, w9, #0x1
  410588:	eor	w9, w9, w10
  41058c:	eor	w9, w9, w10
  410590:	and	w9, w9, #0x1
  410594:	mov	w0, w9
  410598:	sxtw	x8, w0
  41059c:	cbz	x8, 4105c0 <redirect_method_to_machine+0x84>
  4105a0:	mov	w8, wzr
  4105a4:	mov	w0, w8
  4105a8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4105ac:	add	x1, x1, #0xebd
  4105b0:	ldr	x2, [sp, #8]
  4105b4:	mov	w3, #0x1b3                 	// #435
  4105b8:	ldr	x4, [sp]
  4105bc:	bl	404bd0 <log_assert_failed_realm@plt>
  4105c0:	ldur	x8, [x29, #-24]
  4105c4:	cmp	x8, #0x0
  4105c8:	cset	w9, ne  // ne = any
  4105cc:	mov	w10, #0x1                   	// #1
  4105d0:	eor	w9, w9, #0x1
  4105d4:	eor	w9, w9, w10
  4105d8:	eor	w9, w9, w10
  4105dc:	and	w9, w9, #0x1
  4105e0:	mov	w0, w9
  4105e4:	sxtw	x8, w0
  4105e8:	cbz	x8, 41060c <redirect_method_to_machine+0xd0>
  4105ec:	mov	w8, wzr
  4105f0:	mov	w0, w8
  4105f4:	adrp	x1, 41a000 <operation_new+0x40>
  4105f8:	add	x1, x1, #0xe18
  4105fc:	ldr	x2, [sp, #8]
  410600:	mov	w3, #0x1b4                 	// #436
  410604:	ldr	x4, [sp]
  410608:	bl	404bd0 <log_assert_failed_realm@plt>
  41060c:	ldr	x8, [sp, #40]
  410610:	cmp	x8, #0x0
  410614:	cset	w9, ne  // ne = any
  410618:	mov	w10, #0x1                   	// #1
  41061c:	eor	w9, w9, #0x1
  410620:	eor	w9, w9, w10
  410624:	eor	w9, w9, w10
  410628:	and	w9, w9, #0x1
  41062c:	mov	w0, w9
  410630:	sxtw	x8, w0
  410634:	cbz	x8, 410658 <redirect_method_to_machine+0x11c>
  410638:	mov	w8, wzr
  41063c:	mov	w0, w8
  410640:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410644:	add	x1, x1, #0xa58
  410648:	ldr	x2, [sp, #8]
  41064c:	mov	w3, #0x1b5                 	// #437
  410650:	ldr	x4, [sp]
  410654:	bl	404bd0 <log_assert_failed_realm@plt>
  410658:	ldur	x0, [x29, #-16]
  41065c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  410660:	add	x1, x1, #0x7ae
  410664:	add	x2, sp, #0x18
  410668:	bl	405170 <sd_bus_message_read@plt>
  41066c:	str	w0, [sp, #20]
  410670:	ldr	w8, [sp, #20]
  410674:	cmp	w8, #0x0
  410678:	cset	w8, ge  // ge = tcont
  41067c:	tbnz	w8, #0, 410694 <redirect_method_to_machine+0x158>
  410680:	ldur	x0, [x29, #-32]
  410684:	ldr	w1, [sp, #20]
  410688:	bl	405210 <sd_bus_error_set_errno@plt>
  41068c:	stur	w0, [x29, #-4]
  410690:	b	4106ec <redirect_method_to_machine+0x1b0>
  410694:	ldur	x8, [x29, #-24]
  410698:	ldr	x0, [x8, #16]
  41069c:	ldr	x1, [sp, #24]
  4106a0:	bl	40e6ec <hashmap_get>
  4106a4:	str	x0, [sp, #32]
  4106a8:	ldr	x8, [sp, #32]
  4106ac:	cbnz	x8, 4106d4 <redirect_method_to_machine+0x198>
  4106b0:	ldur	x0, [x29, #-32]
  4106b4:	ldr	x3, [sp, #24]
  4106b8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4106bc:	add	x1, x1, #0x5a4
  4106c0:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  4106c4:	add	x2, x2, #0x5cb
  4106c8:	bl	4051b0 <sd_bus_error_setf@plt>
  4106cc:	stur	w0, [x29, #-4]
  4106d0:	b	4106ec <redirect_method_to_machine+0x1b0>
  4106d4:	ldr	x8, [sp, #40]
  4106d8:	ldur	x0, [x29, #-16]
  4106dc:	ldr	x1, [sp, #32]
  4106e0:	ldur	x2, [x29, #-32]
  4106e4:	blr	x8
  4106e8:	stur	w0, [x29, #-4]
  4106ec:	ldur	w0, [x29, #-4]
  4106f0:	ldp	x29, x30, [sp, #80]
  4106f4:	add	sp, sp, #0x60
  4106f8:	ret

00000000004106fc <redirect_method_to_image>:
  4106fc:	sub	sp, sp, #0x60
  410700:	stp	x29, x30, [sp, #80]
  410704:	add	x29, sp, #0x50
  410708:	mov	x8, xzr
  41070c:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  410710:	add	x9, x9, #0xec5
  410714:	add	x9, x9, #0x3
  410718:	adrp	x10, 41c000 <machine_hash_ops+0x13e8>
  41071c:	add	x10, x10, #0xa5f
  410720:	stur	x0, [x29, #-16]
  410724:	stur	x1, [x29, #-24]
  410728:	stur	x2, [x29, #-32]
  41072c:	str	x3, [sp, #40]
  410730:	str	x8, [sp, #32]
  410734:	str	x9, [sp, #8]
  410738:	str	x10, [sp]
  41073c:	ldur	x8, [x29, #-16]
  410740:	cmp	x8, #0x0
  410744:	cset	w9, ne  // ne = any
  410748:	mov	w10, #0x1                   	// #1
  41074c:	eor	w9, w9, #0x1
  410750:	eor	w9, w9, w10
  410754:	eor	w9, w9, w10
  410758:	and	w9, w9, #0x1
  41075c:	mov	w0, w9
  410760:	sxtw	x8, w0
  410764:	cbz	x8, 410788 <redirect_method_to_image+0x8c>
  410768:	mov	w8, wzr
  41076c:	mov	w0, w8
  410770:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  410774:	add	x1, x1, #0xebd
  410778:	ldr	x2, [sp, #8]
  41077c:	mov	w3, #0x22c                 	// #556
  410780:	ldr	x4, [sp]
  410784:	bl	404bd0 <log_assert_failed_realm@plt>
  410788:	ldur	x8, [x29, #-24]
  41078c:	cmp	x8, #0x0
  410790:	cset	w9, ne  // ne = any
  410794:	mov	w10, #0x1                   	// #1
  410798:	eor	w9, w9, #0x1
  41079c:	eor	w9, w9, w10
  4107a0:	eor	w9, w9, w10
  4107a4:	and	w9, w9, #0x1
  4107a8:	mov	w0, w9
  4107ac:	sxtw	x8, w0
  4107b0:	cbz	x8, 4107d4 <redirect_method_to_image+0xd8>
  4107b4:	mov	w8, wzr
  4107b8:	mov	w0, w8
  4107bc:	adrp	x1, 41a000 <operation_new+0x40>
  4107c0:	add	x1, x1, #0xe18
  4107c4:	ldr	x2, [sp, #8]
  4107c8:	mov	w3, #0x22d                 	// #557
  4107cc:	ldr	x4, [sp]
  4107d0:	bl	404bd0 <log_assert_failed_realm@plt>
  4107d4:	ldr	x8, [sp, #40]
  4107d8:	cmp	x8, #0x0
  4107dc:	cset	w9, ne  // ne = any
  4107e0:	mov	w10, #0x1                   	// #1
  4107e4:	eor	w9, w9, #0x1
  4107e8:	eor	w9, w9, w10
  4107ec:	eor	w9, w9, w10
  4107f0:	and	w9, w9, #0x1
  4107f4:	mov	w0, w9
  4107f8:	sxtw	x8, w0
  4107fc:	cbz	x8, 410820 <redirect_method_to_image+0x124>
  410800:	mov	w8, wzr
  410804:	mov	w0, w8
  410808:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41080c:	add	x1, x1, #0xa58
  410810:	ldr	x2, [sp, #8]
  410814:	mov	w3, #0x22e                 	// #558
  410818:	ldr	x4, [sp]
  41081c:	bl	404bd0 <log_assert_failed_realm@plt>
  410820:	ldur	x0, [x29, #-16]
  410824:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  410828:	add	x1, x1, #0x7ae
  41082c:	add	x2, sp, #0x18
  410830:	bl	405170 <sd_bus_message_read@plt>
  410834:	str	w0, [sp, #20]
  410838:	ldr	w8, [sp, #20]
  41083c:	cmp	w8, #0x0
  410840:	cset	w8, ge  // ge = tcont
  410844:	tbnz	w8, #0, 41085c <redirect_method_to_image+0x160>
  410848:	ldr	w8, [sp, #20]
  41084c:	stur	w8, [x29, #-4]
  410850:	mov	w8, #0x1                   	// #1
  410854:	str	w8, [sp, #16]
  410858:	b	410938 <redirect_method_to_image+0x23c>
  41085c:	ldr	x0, [sp, #24]
  410860:	bl	405470 <image_name_is_valid@plt>
  410864:	tbnz	w0, #0, 410894 <redirect_method_to_image+0x198>
  410868:	ldur	x0, [x29, #-32]
  41086c:	ldr	x3, [sp, #24]
  410870:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410874:	add	x1, x1, #0x848
  410878:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  41087c:	add	x2, x2, #0xac3
  410880:	bl	4051b0 <sd_bus_error_setf@plt>
  410884:	stur	w0, [x29, #-4]
  410888:	mov	w8, #0x1                   	// #1
  41088c:	str	w8, [sp, #16]
  410890:	b	410938 <redirect_method_to_image+0x23c>
  410894:	ldr	x1, [sp, #24]
  410898:	mov	w8, wzr
  41089c:	mov	w0, w8
  4108a0:	add	x2, sp, #0x20
  4108a4:	bl	4051d0 <image_find@plt>
  4108a8:	str	w0, [sp, #20]
  4108ac:	ldr	w8, [sp, #20]
  4108b0:	mov	w9, #0xfffffffe            	// #-2
  4108b4:	cmp	w8, w9
  4108b8:	b.ne	4108e8 <redirect_method_to_image+0x1ec>  // b.any
  4108bc:	ldur	x0, [x29, #-32]
  4108c0:	ldr	x3, [sp, #24]
  4108c4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4108c8:	add	x1, x1, #0x620
  4108cc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  4108d0:	add	x2, x2, #0x645
  4108d4:	bl	4051b0 <sd_bus_error_setf@plt>
  4108d8:	stur	w0, [x29, #-4]
  4108dc:	mov	w8, #0x1                   	// #1
  4108e0:	str	w8, [sp, #16]
  4108e4:	b	410938 <redirect_method_to_image+0x23c>
  4108e8:	ldr	w8, [sp, #20]
  4108ec:	cmp	w8, #0x0
  4108f0:	cset	w8, ge  // ge = tcont
  4108f4:	tbnz	w8, #0, 41090c <redirect_method_to_image+0x210>
  4108f8:	ldr	w8, [sp, #20]
  4108fc:	stur	w8, [x29, #-4]
  410900:	mov	w8, #0x1                   	// #1
  410904:	str	w8, [sp, #16]
  410908:	b	410938 <redirect_method_to_image+0x23c>
  41090c:	ldur	x8, [x29, #-24]
  410910:	ldr	x9, [sp, #32]
  410914:	str	x8, [x9, #128]
  410918:	ldr	x8, [sp, #40]
  41091c:	ldur	x0, [x29, #-16]
  410920:	ldr	x1, [sp, #32]
  410924:	ldur	x2, [x29, #-32]
  410928:	blr	x8
  41092c:	stur	w0, [x29, #-4]
  410930:	mov	w10, #0x1                   	// #1
  410934:	str	w10, [sp, #16]
  410938:	add	x0, sp, #0x20
  41093c:	bl	410950 <image_unrefp>
  410940:	ldur	w0, [x29, #-4]
  410944:	ldp	x29, x30, [sp, #80]
  410948:	add	sp, sp, #0x60
  41094c:	ret

0000000000410950 <image_unrefp>:
  410950:	sub	sp, sp, #0x20
  410954:	stp	x29, x30, [sp, #16]
  410958:	add	x29, sp, #0x10
  41095c:	str	x0, [sp, #8]
  410960:	ldr	x8, [sp, #8]
  410964:	ldr	x8, [x8]
  410968:	cbz	x8, 410978 <image_unrefp+0x28>
  41096c:	ldr	x8, [sp, #8]
  410970:	ldr	x0, [x8]
  410974:	bl	405480 <image_unref@plt>
  410978:	ldp	x29, x30, [sp, #16]
  41097c:	add	sp, sp, #0x20
  410980:	ret

0000000000410984 <FILE_SIZE_VALID_OR_INFINITY>:
  410984:	sub	sp, sp, #0x20
  410988:	stp	x29, x30, [sp, #16]
  41098c:	add	x29, sp, #0x10
  410990:	mov	x8, #0xffffffffffffffff    	// #-1
  410994:	str	x0, [sp]
  410998:	ldr	x9, [sp]
  41099c:	cmp	x9, x8
  4109a0:	b.ne	4109b4 <FILE_SIZE_VALID_OR_INFINITY+0x30>  // b.any
  4109a4:	mov	w8, #0x1                   	// #1
  4109a8:	and	w8, w8, #0x1
  4109ac:	sturb	w8, [x29, #-1]
  4109b0:	b	4109c4 <FILE_SIZE_VALID_OR_INFINITY+0x40>
  4109b4:	ldr	x0, [sp]
  4109b8:	bl	4109d8 <FILE_SIZE_VALID>
  4109bc:	and	w8, w0, #0x1
  4109c0:	sturb	w8, [x29, #-1]
  4109c4:	ldurb	w8, [x29, #-1]
  4109c8:	and	w0, w8, #0x1
  4109cc:	ldp	x29, x30, [sp, #16]
  4109d0:	add	sp, sp, #0x20
  4109d4:	ret

00000000004109d8 <FILE_SIZE_VALID>:
  4109d8:	sub	sp, sp, #0x10
  4109dc:	str	x0, [sp, #8]
  4109e0:	ldr	x8, [sp, #8]
  4109e4:	lsr	x8, x8, #63
  4109e8:	cmp	x8, #0x0
  4109ec:	cset	w9, eq  // eq = none
  4109f0:	and	w0, w9, #0x1
  4109f4:	add	sp, sp, #0x10
  4109f8:	ret

00000000004109fc <close_pairp>:
  4109fc:	sub	sp, sp, #0x20
  410a00:	stp	x29, x30, [sp, #16]
  410a04:	add	x29, sp, #0x10
  410a08:	str	x0, [sp, #8]
  410a0c:	ldr	x0, [sp, #8]
  410a10:	bl	405490 <safe_close_pair@plt>
  410a14:	ldp	x29, x30, [sp, #16]
  410a18:	add	sp, sp, #0x20
  410a1c:	ret

0000000000410a20 <safe_fork>:
  410a20:	sub	sp, sp, #0x30
  410a24:	stp	x29, x30, [sp, #32]
  410a28:	add	x29, sp, #0x20
  410a2c:	mov	x8, xzr
  410a30:	mov	x3, x8
  410a34:	stur	x0, [x29, #-8]
  410a38:	stur	w1, [x29, #-12]
  410a3c:	str	x2, [sp, #8]
  410a40:	ldur	x0, [x29, #-8]
  410a44:	ldur	w9, [x29, #-12]
  410a48:	ldr	x4, [sp, #8]
  410a4c:	mov	x1, x3
  410a50:	mov	x2, x8
  410a54:	mov	w3, w9
  410a58:	bl	4054a0 <safe_fork_full@plt>
  410a5c:	ldp	x29, x30, [sp, #32]
  410a60:	add	sp, sp, #0x30
  410a64:	ret

0000000000410a68 <IMAGE_IS_VENDOR>:
  410a68:	sub	sp, sp, #0x30
  410a6c:	stp	x29, x30, [sp, #32]
  410a70:	add	x29, sp, #0x20
  410a74:	adrp	x8, 41c000 <machine_hash_ops+0x13e8>
  410a78:	add	x8, x8, #0xcab
  410a7c:	add	x2, x8, #0x3
  410a80:	stur	x0, [x29, #-8]
  410a84:	str	x2, [sp, #16]
  410a88:	ldur	x8, [x29, #-8]
  410a8c:	cmp	x8, #0x0
  410a90:	cset	w9, ne  // ne = any
  410a94:	mov	w10, #0x1                   	// #1
  410a98:	eor	w9, w9, #0x1
  410a9c:	eor	w9, w9, w10
  410aa0:	eor	w9, w9, w10
  410aa4:	and	w9, w9, #0x1
  410aa8:	mov	w0, w9
  410aac:	sxtw	x8, w0
  410ab0:	cbz	x8, 410ad8 <IMAGE_IS_VENDOR+0x70>
  410ab4:	mov	w8, wzr
  410ab8:	mov	w0, w8
  410abc:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410ac0:	add	x1, x1, #0xca9
  410ac4:	ldr	x2, [sp, #16]
  410ac8:	mov	w3, #0x5f                  	// #95
  410acc:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  410ad0:	add	x4, x4, #0xcc9
  410ad4:	bl	404bd0 <log_assert_failed_realm@plt>
  410ad8:	ldur	x8, [x29, #-8]
  410adc:	ldr	x8, [x8, #16]
  410ae0:	mov	w9, #0x0                   	// #0
  410ae4:	str	w9, [sp, #12]
  410ae8:	cbz	x8, 410b0c <IMAGE_IS_VENDOR+0xa4>
  410aec:	ldur	x8, [x29, #-8]
  410af0:	ldr	x0, [x8, #16]
  410af4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410af8:	add	x1, x1, #0xcf5
  410afc:	bl	4054b0 <path_startswith@plt>
  410b00:	cmp	x0, #0x0
  410b04:	cset	w9, ne  // ne = any
  410b08:	str	w9, [sp, #12]
  410b0c:	ldr	w8, [sp, #12]
  410b10:	and	w0, w8, #0x1
  410b14:	ldp	x29, x30, [sp, #32]
  410b18:	add	sp, sp, #0x30
  410b1c:	ret

0000000000410b20 <IMAGE_IS_HOST>:
  410b20:	sub	sp, sp, #0x30
  410b24:	stp	x29, x30, [sp, #32]
  410b28:	add	x29, sp, #0x20
  410b2c:	adrp	x8, 41c000 <machine_hash_ops+0x13e8>
  410b30:	add	x8, x8, #0xcab
  410b34:	add	x2, x8, #0x3
  410b38:	str	x0, [sp, #16]
  410b3c:	str	x2, [sp, #8]
  410b40:	ldr	x8, [sp, #16]
  410b44:	cmp	x8, #0x0
  410b48:	cset	w9, ne  // ne = any
  410b4c:	mov	w10, #0x1                   	// #1
  410b50:	eor	w9, w9, #0x1
  410b54:	eor	w9, w9, w10
  410b58:	eor	w9, w9, w10
  410b5c:	and	w9, w9, #0x1
  410b60:	mov	w0, w9
  410b64:	sxtw	x8, w0
  410b68:	cbz	x8, 410b90 <IMAGE_IS_HOST+0x70>
  410b6c:	mov	w8, wzr
  410b70:	mov	w0, w8
  410b74:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410b78:	add	x1, x1, #0xca9
  410b7c:	ldr	x2, [sp, #8]
  410b80:	mov	w3, #0x65                  	// #101
  410b84:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  410b88:	add	x4, x4, #0xcfa
  410b8c:	bl	404bd0 <log_assert_failed_realm@plt>
  410b90:	ldr	x8, [sp, #16]
  410b94:	ldr	x8, [x8, #8]
  410b98:	cbz	x8, 410bc4 <IMAGE_IS_HOST+0xa4>
  410b9c:	ldr	x8, [sp, #16]
  410ba0:	ldr	x0, [x8, #8]
  410ba4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  410ba8:	add	x1, x1, #0x2d2
  410bac:	bl	404e40 <strcmp@plt>
  410bb0:	cbnz	w0, 410bc4 <IMAGE_IS_HOST+0xa4>
  410bb4:	mov	w8, #0x1                   	// #1
  410bb8:	and	w8, w8, #0x1
  410bbc:	sturb	w8, [x29, #-1]
  410bc0:	b	410c08 <IMAGE_IS_HOST+0xe8>
  410bc4:	ldr	x8, [sp, #16]
  410bc8:	ldr	x8, [x8, #16]
  410bcc:	cbz	x8, 410bfc <IMAGE_IS_HOST+0xdc>
  410bd0:	ldr	x8, [sp, #16]
  410bd4:	ldr	x0, [x8, #16]
  410bd8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  410bdc:	add	x1, x1, #0x2c8
  410be0:	bl	4054c0 <path_equal@plt>
  410be4:	tbnz	w0, #0, 410bec <IMAGE_IS_HOST+0xcc>
  410be8:	b	410bfc <IMAGE_IS_HOST+0xdc>
  410bec:	mov	w8, #0x1                   	// #1
  410bf0:	and	w8, w8, #0x1
  410bf4:	sturb	w8, [x29, #-1]
  410bf8:	b	410c08 <IMAGE_IS_HOST+0xe8>
  410bfc:	mov	w8, wzr
  410c00:	and	w8, w8, #0x1
  410c04:	sturb	w8, [x29, #-1]
  410c08:	ldurb	w8, [x29, #-1]
  410c0c:	and	w0, w8, #0x1
  410c10:	ldp	x29, x30, [sp, #32]
  410c14:	add	sp, sp, #0x30
  410c18:	ret

0000000000410c1c <IMAGE_IS_HIDDEN>:
  410c1c:	sub	sp, sp, #0x30
  410c20:	stp	x29, x30, [sp, #32]
  410c24:	add	x29, sp, #0x20
  410c28:	adrp	x8, 41c000 <machine_hash_ops+0x13e8>
  410c2c:	add	x8, x8, #0xcab
  410c30:	add	x2, x8, #0x3
  410c34:	stur	x0, [x29, #-8]
  410c38:	str	x2, [sp, #16]
  410c3c:	ldur	x8, [x29, #-8]
  410c40:	cmp	x8, #0x0
  410c44:	cset	w9, ne  // ne = any
  410c48:	mov	w10, #0x1                   	// #1
  410c4c:	eor	w9, w9, #0x1
  410c50:	eor	w9, w9, w10
  410c54:	eor	w9, w9, w10
  410c58:	and	w9, w9, #0x1
  410c5c:	mov	w0, w9
  410c60:	sxtw	x8, w0
  410c64:	cbz	x8, 410c8c <IMAGE_IS_HIDDEN+0x70>
  410c68:	mov	w8, wzr
  410c6c:	mov	w0, w8
  410c70:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410c74:	add	x1, x1, #0xca9
  410c78:	ldr	x2, [sp, #16]
  410c7c:	mov	w3, #0x59                  	// #89
  410c80:	adrp	x4, 41c000 <machine_hash_ops+0x13e8>
  410c84:	add	x4, x4, #0xd24
  410c88:	bl	404bd0 <log_assert_failed_realm@plt>
  410c8c:	ldur	x8, [x29, #-8]
  410c90:	ldr	x8, [x8, #8]
  410c94:	mov	w9, #0x0                   	// #0
  410c98:	str	w9, [sp, #12]
  410c9c:	cbz	x8, 410cb8 <IMAGE_IS_HIDDEN+0x9c>
  410ca0:	ldur	x8, [x29, #-8]
  410ca4:	ldr	x8, [x8, #8]
  410ca8:	ldrb	w9, [x8]
  410cac:	cmp	w9, #0x2e
  410cb0:	cset	w9, eq  // eq = none
  410cb4:	str	w9, [sp, #12]
  410cb8:	ldr	w8, [sp, #12]
  410cbc:	and	w0, w8, #0x1
  410cc0:	ldp	x29, x30, [sp, #32]
  410cc4:	add	sp, sp, #0x30
  410cc8:	ret

0000000000410ccc <clean_pool_done>:
  410ccc:	sub	sp, sp, #0x90
  410cd0:	stp	x29, x30, [sp, #128]
  410cd4:	add	x29, sp, #0x80
  410cd8:	mov	x8, xzr
  410cdc:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  410ce0:	add	x9, x9, #0xec5
  410ce4:	add	x9, x9, #0x3
  410ce8:	adrp	x10, 41c000 <machine_hash_ops+0x13e8>
  410cec:	add	x10, x10, #0xd5a
  410cf0:	stur	x0, [x29, #-16]
  410cf4:	stur	w1, [x29, #-20]
  410cf8:	stur	x2, [x29, #-32]
  410cfc:	stur	x8, [x29, #-40]
  410d00:	stur	x8, [x29, #-48]
  410d04:	str	x9, [sp, #24]
  410d08:	str	x10, [sp, #16]
  410d0c:	ldur	x8, [x29, #-16]
  410d10:	cmp	x8, #0x0
  410d14:	cset	w9, ne  // ne = any
  410d18:	mov	w10, #0x1                   	// #1
  410d1c:	eor	w9, w9, #0x1
  410d20:	eor	w9, w9, w10
  410d24:	eor	w9, w9, w10
  410d28:	and	w9, w9, #0x1
  410d2c:	mov	w0, w9
  410d30:	sxtw	x8, w0
  410d34:	cbz	x8, 410d58 <clean_pool_done+0x8c>
  410d38:	mov	w8, wzr
  410d3c:	mov	w0, w8
  410d40:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410d44:	add	x1, x1, #0xd50
  410d48:	ldr	x2, [sp, #24]
  410d4c:	mov	w3, #0x268                 	// #616
  410d50:	ldr	x4, [sp, #16]
  410d54:	bl	404bd0 <log_assert_failed_realm@plt>
  410d58:	ldur	x8, [x29, #-16]
  410d5c:	ldr	w9, [x8, #36]
  410d60:	cmp	w9, #0x0
  410d64:	cset	w9, ge  // ge = tcont
  410d68:	mov	w10, #0x1                   	// #1
  410d6c:	eor	w9, w9, #0x1
  410d70:	eor	w9, w9, w10
  410d74:	eor	w9, w9, w10
  410d78:	and	w9, w9, #0x1
  410d7c:	mov	w0, w9
  410d80:	sxtw	x8, w0
  410d84:	cbz	x8, 410da8 <clean_pool_done+0xdc>
  410d88:	mov	w8, wzr
  410d8c:	mov	w0, w8
  410d90:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410d94:	add	x1, x1, #0xd90
  410d98:	ldr	x2, [sp, #24]
  410d9c:	mov	w3, #0x269                 	// #617
  410da0:	ldr	x4, [sp, #16]
  410da4:	bl	404bd0 <log_assert_failed_realm@plt>
  410da8:	ldur	x8, [x29, #-16]
  410dac:	ldr	w0, [x8, #36]
  410db0:	mov	x8, xzr
  410db4:	mov	x1, x8
  410db8:	mov	w9, wzr
  410dbc:	mov	w2, w9
  410dc0:	bl	405300 <lseek64@plt>
  410dc4:	mov	x8, #0xffffffffffffffff    	// #-1
  410dc8:	cmp	x0, x8
  410dcc:	b.ne	410df0 <clean_pool_done+0x124>  // b.any
  410dd0:	bl	404d50 <__errno_location@plt>
  410dd4:	ldr	w8, [x0]
  410dd8:	mov	w9, wzr
  410ddc:	subs	w8, w9, w8
  410de0:	stur	w8, [x29, #-4]
  410de4:	mov	w8, #0x1                   	// #1
  410de8:	str	w8, [sp, #56]
  410dec:	b	411158 <clean_pool_done+0x48c>
  410df0:	ldur	x8, [x29, #-16]
  410df4:	ldr	w0, [x8, #36]
  410df8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410dfc:	add	x1, x1, #0xda9
  410e00:	bl	4054d0 <fdopen@plt>
  410e04:	stur	x0, [x29, #-48]
  410e08:	ldur	x8, [x29, #-48]
  410e0c:	cbnz	x8, 410e30 <clean_pool_done+0x164>
  410e10:	bl	404d50 <__errno_location@plt>
  410e14:	ldr	w8, [x0]
  410e18:	mov	w9, wzr
  410e1c:	subs	w8, w9, w8
  410e20:	stur	w8, [x29, #-4]
  410e24:	mov	w8, #0x1                   	// #1
  410e28:	str	w8, [sp, #56]
  410e2c:	b	411158 <clean_pool_done+0x48c>
  410e30:	ldur	x8, [x29, #-16]
  410e34:	mov	w9, #0xffffffff            	// #-1
  410e38:	str	w9, [x8, #36]
  410e3c:	bl	404d50 <__errno_location@plt>
  410e40:	str	wzr, [x0]
  410e44:	ldur	x3, [x29, #-48]
  410e48:	sub	x0, x29, #0x31
  410e4c:	mov	x8, #0x1                   	// #1
  410e50:	mov	x1, x8
  410e54:	mov	x2, x8
  410e58:	bl	4054e0 <fread@plt>
  410e5c:	str	x0, [sp, #64]
  410e60:	ldr	x8, [sp, #64]
  410e64:	cmp	x8, #0x1
  410e68:	b.eq	410ea8 <clean_pool_done+0x1dc>  // b.none
  410e6c:	ldur	w8, [x29, #-20]
  410e70:	cmp	w8, #0x0
  410e74:	cset	w8, ge  // ge = tcont
  410e78:	tbnz	w8, #0, 410e88 <clean_pool_done+0x1bc>
  410e7c:	ldur	w8, [x29, #-20]
  410e80:	str	w8, [sp, #12]
  410e84:	b	410e94 <clean_pool_done+0x1c8>
  410e88:	mov	w0, #0x5                   	// #5
  410e8c:	bl	4111a0 <errno_or_else>
  410e90:	str	w0, [sp, #12]
  410e94:	ldr	w8, [sp, #12]
  410e98:	stur	w8, [x29, #-4]
  410e9c:	mov	w8, #0x1                   	// #1
  410ea0:	str	w8, [sp, #56]
  410ea4:	b	411158 <clean_pool_done+0x48c>
  410ea8:	ldur	w8, [x29, #-20]
  410eac:	cmp	w8, #0x0
  410eb0:	cset	w8, ge  // ge = tcont
  410eb4:	tbnz	w8, #0, 410f48 <clean_pool_done+0x27c>
  410eb8:	mov	x8, xzr
  410ebc:	str	x8, [sp, #48]
  410ec0:	ldurb	w9, [x29, #-49]
  410ec4:	tbnz	w9, #0, 410ecc <clean_pool_done+0x200>
  410ec8:	b	410ee0 <clean_pool_done+0x214>
  410ecc:	ldur	w8, [x29, #-20]
  410ed0:	stur	w8, [x29, #-4]
  410ed4:	mov	w8, #0x1                   	// #1
  410ed8:	str	w8, [sp, #56]
  410edc:	b	410f3c <clean_pool_done+0x270>
  410ee0:	ldur	x0, [x29, #-48]
  410ee4:	mov	x1, #0x100000              	// #1048576
  410ee8:	add	x2, sp, #0x30
  410eec:	bl	411200 <read_nul_string>
  410ef0:	str	w0, [sp, #60]
  410ef4:	ldr	w8, [sp, #60]
  410ef8:	cmp	w8, #0x0
  410efc:	cset	w8, gt
  410f00:	tbnz	w8, #0, 410f18 <clean_pool_done+0x24c>
  410f04:	ldur	w8, [x29, #-20]
  410f08:	stur	w8, [x29, #-4]
  410f0c:	mov	w8, #0x1                   	// #1
  410f10:	str	w8, [sp, #56]
  410f14:	b	410f3c <clean_pool_done+0x270>
  410f18:	ldur	x0, [x29, #-32]
  410f1c:	ldur	w1, [x29, #-20]
  410f20:	ldr	x3, [sp, #48]
  410f24:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  410f28:	add	x2, x2, #0xdab
  410f2c:	bl	405290 <sd_bus_error_set_errnof@plt>
  410f30:	stur	w0, [x29, #-4]
  410f34:	mov	w8, #0x1                   	// #1
  410f38:	str	w8, [sp, #56]
  410f3c:	add	x0, sp, #0x30
  410f40:	bl	40e940 <freep>
  410f44:	b	411158 <clean_pool_done+0x48c>
  410f48:	ldurb	w8, [x29, #-49]
  410f4c:	mov	w9, #0x1                   	// #1
  410f50:	eor	w8, w8, #0x1
  410f54:	eor	w8, w8, w9
  410f58:	eor	w8, w8, w9
  410f5c:	and	w8, w8, #0x1
  410f60:	mov	w0, w8
  410f64:	sxtw	x10, w0
  410f68:	cbz	x10, 410f8c <clean_pool_done+0x2c0>
  410f6c:	mov	w8, wzr
  410f70:	mov	w0, w8
  410f74:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  410f78:	add	x1, x1, #0xdc9
  410f7c:	ldr	x2, [sp, #24]
  410f80:	mov	w3, #0x28b                 	// #651
  410f84:	ldr	x4, [sp, #16]
  410f88:	bl	404bd0 <log_assert_failed_realm@plt>
  410f8c:	ldur	x8, [x29, #-16]
  410f90:	ldr	x0, [x8, #24]
  410f94:	sub	x1, x29, #0x28
  410f98:	bl	405200 <sd_bus_message_new_method_return@plt>
  410f9c:	str	w0, [sp, #60]
  410fa0:	ldr	w9, [sp, #60]
  410fa4:	cmp	w9, #0x0
  410fa8:	cset	w9, ge  // ge = tcont
  410fac:	tbnz	w9, #0, 410fc4 <clean_pool_done+0x2f8>
  410fb0:	ldr	w8, [sp, #60]
  410fb4:	stur	w8, [x29, #-4]
  410fb8:	mov	w8, #0x1                   	// #1
  410fbc:	str	w8, [sp, #56]
  410fc0:	b	411158 <clean_pool_done+0x48c>
  410fc4:	ldur	x0, [x29, #-40]
  410fc8:	mov	w1, #0x61                  	// #97
  410fcc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  410fd0:	add	x2, x2, #0xdd1
  410fd4:	bl	405130 <sd_bus_message_open_container@plt>
  410fd8:	str	w0, [sp, #60]
  410fdc:	ldr	w8, [sp, #60]
  410fe0:	cmp	w8, #0x0
  410fe4:	cset	w8, ge  // ge = tcont
  410fe8:	tbnz	w8, #0, 411000 <clean_pool_done+0x334>
  410fec:	ldr	w8, [sp, #60]
  410ff0:	stur	w8, [x29, #-4]
  410ff4:	mov	w8, #0x1                   	// #1
  410ff8:	str	w8, [sp, #56]
  410ffc:	b	411158 <clean_pool_done+0x48c>
  411000:	add	x2, sp, #0x28
  411004:	mov	x8, xzr
  411008:	str	x8, [sp, #40]
  41100c:	ldur	x0, [x29, #-48]
  411010:	mov	x1, #0x100000              	// #1048576
  411014:	bl	411200 <read_nul_string>
  411018:	str	w0, [sp, #60]
  41101c:	ldr	w9, [sp, #60]
  411020:	cmp	w9, #0x0
  411024:	cset	w9, ge  // ge = tcont
  411028:	tbnz	w9, #0, 411040 <clean_pool_done+0x374>
  41102c:	ldr	w8, [sp, #60]
  411030:	stur	w8, [x29, #-4]
  411034:	mov	w8, #0x1                   	// #1
  411038:	str	w8, [sp, #56]
  41103c:	b	4110dc <clean_pool_done+0x410>
  411040:	ldr	w8, [sp, #60]
  411044:	cbnz	w8, 411054 <clean_pool_done+0x388>
  411048:	mov	w8, #0x8                   	// #8
  41104c:	str	w8, [sp, #56]
  411050:	b	4110dc <clean_pool_done+0x410>
  411054:	bl	404d50 <__errno_location@plt>
  411058:	str	wzr, [x0]
  41105c:	ldur	x3, [x29, #-48]
  411060:	add	x0, sp, #0x20
  411064:	mov	x1, #0x1                   	// #1
  411068:	mov	x2, #0x8                   	// #8
  41106c:	bl	4054e0 <fread@plt>
  411070:	str	x0, [sp, #64]
  411074:	ldr	x8, [sp, #64]
  411078:	cmp	x8, #0x8
  41107c:	b.eq	411098 <clean_pool_done+0x3cc>  // b.none
  411080:	mov	w0, #0x5                   	// #5
  411084:	bl	4111a0 <errno_or_else>
  411088:	stur	w0, [x29, #-4]
  41108c:	mov	w8, #0x1                   	// #1
  411090:	str	w8, [sp, #56]
  411094:	b	4110dc <clean_pool_done+0x410>
  411098:	ldur	x0, [x29, #-40]
  41109c:	ldr	x2, [sp, #40]
  4110a0:	ldr	x3, [sp, #32]
  4110a4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4110a8:	add	x1, x1, #0xdd1
  4110ac:	bl	405120 <sd_bus_message_append@plt>
  4110b0:	str	w0, [sp, #60]
  4110b4:	ldr	w8, [sp, #60]
  4110b8:	cmp	w8, #0x0
  4110bc:	cset	w8, ge  // ge = tcont
  4110c0:	tbnz	w8, #0, 4110d8 <clean_pool_done+0x40c>
  4110c4:	ldr	w8, [sp, #60]
  4110c8:	stur	w8, [x29, #-4]
  4110cc:	mov	w8, #0x1                   	// #1
  4110d0:	str	w8, [sp, #56]
  4110d4:	b	4110dc <clean_pool_done+0x410>
  4110d8:	str	wzr, [sp, #56]
  4110dc:	add	x0, sp, #0x28
  4110e0:	bl	40e940 <freep>
  4110e4:	ldr	w8, [sp, #56]
  4110e8:	str	w8, [sp, #8]
  4110ec:	cbz	w8, 411104 <clean_pool_done+0x438>
  4110f0:	b	4110f4 <clean_pool_done+0x428>
  4110f4:	ldr	w8, [sp, #8]
  4110f8:	cmp	w8, #0x8
  4110fc:	b.eq	411108 <clean_pool_done+0x43c>  // b.none
  411100:	b	411158 <clean_pool_done+0x48c>
  411104:	b	411000 <clean_pool_done+0x334>
  411108:	ldur	x0, [x29, #-40]
  41110c:	bl	405150 <sd_bus_message_close_container@plt>
  411110:	str	w0, [sp, #60]
  411114:	ldr	w8, [sp, #60]
  411118:	cmp	w8, #0x0
  41111c:	cset	w8, ge  // ge = tcont
  411120:	tbnz	w8, #0, 411138 <clean_pool_done+0x46c>
  411124:	ldr	w8, [sp, #60]
  411128:	stur	w8, [x29, #-4]
  41112c:	mov	w8, #0x1                   	// #1
  411130:	str	w8, [sp, #56]
  411134:	b	411158 <clean_pool_done+0x48c>
  411138:	ldur	x1, [x29, #-40]
  41113c:	mov	x8, xzr
  411140:	mov	x0, x8
  411144:	mov	x2, x8
  411148:	bl	405220 <sd_bus_send@plt>
  41114c:	stur	w0, [x29, #-4]
  411150:	mov	w9, #0x1                   	// #1
  411154:	str	w9, [sp, #56]
  411158:	sub	x0, x29, #0x30
  41115c:	bl	411178 <fclosep>
  411160:	sub	x0, x29, #0x28
  411164:	bl	40f130 <sd_bus_message_unrefp>
  411168:	ldur	w0, [x29, #-4]
  41116c:	ldp	x29, x30, [sp, #128]
  411170:	add	sp, sp, #0x90
  411174:	ret

0000000000411178 <fclosep>:
  411178:	sub	sp, sp, #0x20
  41117c:	stp	x29, x30, [sp, #16]
  411180:	add	x29, sp, #0x10
  411184:	str	x0, [sp, #8]
  411188:	ldr	x8, [sp, #8]
  41118c:	ldr	x0, [x8]
  411190:	bl	404f90 <safe_fclose@plt>
  411194:	ldp	x29, x30, [sp, #16]
  411198:	add	sp, sp, #0x20
  41119c:	ret

00000000004111a0 <errno_or_else>:
  4111a0:	sub	sp, sp, #0x20
  4111a4:	stp	x29, x30, [sp, #16]
  4111a8:	add	x29, sp, #0x10
  4111ac:	str	w0, [sp, #8]
  4111b0:	bl	404d50 <__errno_location@plt>
  4111b4:	ldr	w8, [x0]
  4111b8:	cmp	w8, #0x0
  4111bc:	cset	w8, le
  4111c0:	tbnz	w8, #0, 4111dc <errno_or_else+0x3c>
  4111c4:	bl	404d50 <__errno_location@plt>
  4111c8:	ldr	w8, [x0]
  4111cc:	mov	w9, wzr
  4111d0:	subs	w8, w9, w8
  4111d4:	stur	w8, [x29, #-4]
  4111d8:	b	4111f0 <errno_or_else+0x50>
  4111dc:	ldr	w0, [sp, #8]
  4111e0:	bl	404ba0 <abs@plt>
  4111e4:	mov	w8, wzr
  4111e8:	subs	w8, w8, w0
  4111ec:	stur	w8, [x29, #-4]
  4111f0:	ldur	w0, [x29, #-4]
  4111f4:	ldp	x29, x30, [sp, #16]
  4111f8:	add	sp, sp, #0x20
  4111fc:	ret

0000000000411200 <read_nul_string>:
  411200:	sub	sp, sp, #0x30
  411204:	stp	x29, x30, [sp, #32]
  411208:	add	x29, sp, #0x20
  41120c:	mov	w8, #0x1                   	// #1
  411210:	stur	x0, [x29, #-8]
  411214:	str	x1, [sp, #16]
  411218:	str	x2, [sp, #8]
  41121c:	ldur	x0, [x29, #-8]
  411220:	ldr	x1, [sp, #16]
  411224:	ldr	x3, [sp, #8]
  411228:	mov	w2, w8
  41122c:	bl	4054f0 <read_line_full@plt>
  411230:	ldp	x29, x30, [sp, #32]
  411234:	add	sp, sp, #0x30
  411238:	ret

000000000041123c <size_multiply_overflow>:
  41123c:	sub	sp, sp, #0x20
  411240:	str	x0, [sp, #24]
  411244:	str	x1, [sp, #16]
  411248:	ldr	x8, [sp, #16]
  41124c:	mov	w9, #0x0                   	// #0
  411250:	str	w9, [sp, #12]
  411254:	cbz	x8, 411274 <size_multiply_overflow+0x38>
  411258:	ldr	x8, [sp, #24]
  41125c:	ldr	x9, [sp, #16]
  411260:	mov	x10, #0xffffffffffffffff    	// #-1
  411264:	udiv	x9, x10, x9
  411268:	cmp	x8, x9
  41126c:	cset	w11, hi  // hi = pmore
  411270:	str	w11, [sp, #12]
  411274:	ldr	w8, [sp, #12]
  411278:	mov	w9, #0x1                   	// #1
  41127c:	eor	w8, w8, #0x1
  411280:	eor	w8, w8, w9
  411284:	and	w8, w8, #0x1
  411288:	mov	w0, w8
  41128c:	sxtw	x10, w0
  411290:	cmp	x10, #0x0
  411294:	cset	w8, ne  // ne = any
  411298:	and	w0, w8, #0x1
  41129c:	add	sp, sp, #0x20
  4112a0:	ret

00000000004112a4 <gid_is_valid>:
  4112a4:	sub	sp, sp, #0x20
  4112a8:	stp	x29, x30, [sp, #16]
  4112ac:	add	x29, sp, #0x10
  4112b0:	stur	w0, [x29, #-4]
  4112b4:	ldur	w0, [x29, #-4]
  4112b8:	bl	405330 <uid_is_valid@plt>
  4112bc:	and	w0, w0, #0x1
  4112c0:	ldp	x29, x30, [sp, #16]
  4112c4:	add	sp, sp, #0x20
  4112c8:	ret

00000000004112cc <manager_enqueue_nscd_cache_flush>:
  4112cc:	sub	sp, sp, #0x60
  4112d0:	stp	x29, x30, [sp, #80]
  4112d4:	add	x29, sp, #0x50
  4112d8:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  4112dc:	add	x8, x8, #0x12e
  4112e0:	add	x8, x8, #0x3
  4112e4:	stur	x0, [x29, #-16]
  4112e8:	str	x8, [sp, #16]
  4112ec:	ldur	x8, [x29, #-16]
  4112f0:	cmp	x8, #0x0
  4112f4:	cset	w9, ne  // ne = any
  4112f8:	mov	w10, #0x1                   	// #1
  4112fc:	eor	w9, w9, #0x1
  411300:	eor	w9, w9, w10
  411304:	eor	w9, w9, w10
  411308:	and	w9, w9, #0x1
  41130c:	mov	w0, w9
  411310:	sxtw	x8, w0
  411314:	cbz	x8, 41133c <manager_enqueue_nscd_cache_flush+0x70>
  411318:	mov	w8, wzr
  41131c:	mov	w0, w8
  411320:	adrp	x1, 41a000 <operation_new+0x40>
  411324:	add	x1, x1, #0xe18
  411328:	ldr	x2, [sp, #16]
  41132c:	mov	w3, #0x13                  	// #19
  411330:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  411334:	add	x4, x4, #0x14d
  411338:	bl	404bd0 <log_assert_failed_realm@plt>
  41133c:	ldur	x8, [x29, #-16]
  411340:	ldr	x8, [x8, #96]
  411344:	cbnz	x8, 411418 <manager_enqueue_nscd_cache_flush+0x14c>
  411348:	ldur	x8, [x29, #-16]
  41134c:	ldr	x0, [x8]
  411350:	ldur	x8, [x29, #-16]
  411354:	add	x1, x8, #0x60
  411358:	ldur	x3, [x29, #-16]
  41135c:	adrp	x2, 411000 <clean_pool_done+0x334>
  411360:	add	x2, x2, #0x4ec
  411364:	bl	405500 <sd_event_add_defer@plt>
  411368:	stur	w0, [x29, #-20]
  41136c:	ldur	w9, [x29, #-20]
  411370:	cmp	w9, #0x0
  411374:	cset	w9, ge  // ge = tcont
  411378:	tbnz	w9, #0, 411404 <manager_enqueue_nscd_cache_flush+0x138>
  41137c:	mov	w8, #0x3                   	// #3
  411380:	stur	w8, [x29, #-24]
  411384:	ldur	w8, [x29, #-20]
  411388:	stur	w8, [x29, #-28]
  41138c:	stur	wzr, [x29, #-32]
  411390:	ldur	w0, [x29, #-32]
  411394:	bl	404b80 <log_get_max_level_realm@plt>
  411398:	ldur	w8, [x29, #-24]
  41139c:	and	w8, w8, #0x7
  4113a0:	cmp	w0, w8
  4113a4:	b.lt	4113dc <manager_enqueue_nscd_cache_flush+0x110>  // b.tstop
  4113a8:	ldur	w8, [x29, #-32]
  4113ac:	ldur	w9, [x29, #-24]
  4113b0:	orr	w0, w9, w8, lsl #10
  4113b4:	ldur	w1, [x29, #-28]
  4113b8:	ldr	x2, [sp, #16]
  4113bc:	mov	w3, #0x18                  	// #24
  4113c0:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  4113c4:	add	x4, x4, #0x17d
  4113c8:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  4113cc:	add	x5, x5, #0x19e
  4113d0:	bl	404b90 <log_internal_realm@plt>
  4113d4:	str	w0, [sp, #12]
  4113d8:	b	4113f0 <manager_enqueue_nscd_cache_flush+0x124>
  4113dc:	ldur	w0, [x29, #-28]
  4113e0:	bl	404ba0 <abs@plt>
  4113e4:	mov	w8, wzr
  4113e8:	subs	w8, w8, w0, uxtb
  4113ec:	str	w8, [sp, #12]
  4113f0:	ldr	w8, [sp, #12]
  4113f4:	stur	w8, [x29, #-36]
  4113f8:	ldur	w8, [x29, #-36]
  4113fc:	stur	w8, [x29, #-4]
  411400:	b	4114dc <manager_enqueue_nscd_cache_flush+0x210>
  411404:	ldur	x8, [x29, #-16]
  411408:	ldr	x0, [x8, #96]
  41140c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  411410:	add	x1, x1, #0x1cc
  411414:	bl	405510 <sd_event_source_set_description@plt>
  411418:	ldur	x8, [x29, #-16]
  41141c:	ldr	x0, [x8, #96]
  411420:	mov	w1, #0xffffffff            	// #-1
  411424:	bl	405520 <sd_event_source_set_enabled@plt>
  411428:	stur	w0, [x29, #-20]
  41142c:	ldur	w9, [x29, #-20]
  411430:	cmp	w9, #0x0
  411434:	cset	w9, ge  // ge = tcont
  411438:	tbnz	w9, #0, 4114d8 <manager_enqueue_nscd_cache_flush+0x20c>
  41143c:	ldur	x8, [x29, #-16]
  411440:	ldr	x0, [x8, #96]
  411444:	bl	404c60 <sd_event_source_unref@plt>
  411448:	ldur	x8, [x29, #-16]
  41144c:	str	x0, [x8, #96]
  411450:	mov	w9, #0x3                   	// #3
  411454:	str	w9, [sp, #40]
  411458:	ldur	w9, [x29, #-20]
  41145c:	str	w9, [sp, #36]
  411460:	str	wzr, [sp, #32]
  411464:	ldr	w0, [sp, #32]
  411468:	bl	404b80 <log_get_max_level_realm@plt>
  41146c:	ldr	w9, [sp, #40]
  411470:	and	w9, w9, #0x7
  411474:	cmp	w0, w9
  411478:	b.lt	4114b0 <manager_enqueue_nscd_cache_flush+0x1e4>  // b.tstop
  41147c:	ldr	w8, [sp, #32]
  411480:	ldr	w9, [sp, #40]
  411484:	orr	w0, w9, w8, lsl #10
  411488:	ldr	w1, [sp, #36]
  41148c:	ldr	x2, [sp, #16]
  411490:	mov	w3, #0x20                  	// #32
  411494:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  411498:	add	x4, x4, #0x17d
  41149c:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  4114a0:	add	x5, x5, #0x1dd
  4114a4:	bl	404b90 <log_internal_realm@plt>
  4114a8:	str	w0, [sp, #8]
  4114ac:	b	4114c4 <manager_enqueue_nscd_cache_flush+0x1f8>
  4114b0:	ldr	w0, [sp, #36]
  4114b4:	bl	404ba0 <abs@plt>
  4114b8:	mov	w8, wzr
  4114bc:	subs	w8, w8, w0, uxtb
  4114c0:	str	w8, [sp, #8]
  4114c4:	ldr	w8, [sp, #8]
  4114c8:	str	w8, [sp, #28]
  4114cc:	ldr	w8, [sp, #28]
  4114d0:	stur	w8, [x29, #-4]
  4114d4:	b	4114dc <manager_enqueue_nscd_cache_flush+0x210>
  4114d8:	stur	wzr, [x29, #-4]
  4114dc:	ldur	w0, [x29, #-4]
  4114e0:	ldp	x29, x30, [sp, #80]
  4114e4:	add	sp, sp, #0x60
  4114e8:	ret

00000000004114ec <on_nscd_cache_flush_event>:
  4114ec:	sub	sp, sp, #0x50
  4114f0:	stp	x29, x30, [sp, #64]
  4114f4:	add	x29, sp, #0x40
  4114f8:	adrp	x8, 440000 <__TMC_END__>
  4114fc:	add	x8, x8, #0x18
  411500:	mov	w9, wzr
  411504:	add	x10, sp, #0x10
  411508:	stur	x0, [x29, #-8]
  41150c:	stur	x1, [x29, #-16]
  411510:	ldr	q0, [x8]
  411514:	str	q0, [sp, #16]
  411518:	ldr	q0, [x8, #16]
  41151c:	str	q0, [sp, #32]
  411520:	mov	x0, x10
  411524:	str	w9, [sp, #12]
  411528:	bl	405530 <nscd_flush_cache@plt>
  41152c:	ldr	w9, [sp, #12]
  411530:	mov	w0, w9
  411534:	ldp	x29, x30, [sp, #64]
  411538:	add	sp, sp, #0x50
  41153c:	ret

0000000000411540 <bus_machine_method_unregister>:
  411540:	sub	sp, sp, #0x50
  411544:	stp	x29, x30, [sp, #64]
  411548:	add	x29, sp, #0x40
  41154c:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  411550:	add	x8, x8, #0x21c
  411554:	add	x8, x8, #0x3
  411558:	stur	x0, [x29, #-16]
  41155c:	stur	x1, [x29, #-24]
  411560:	str	x2, [sp, #32]
  411564:	ldur	x9, [x29, #-24]
  411568:	str	x9, [sp, #24]
  41156c:	str	x8, [sp, #8]
  411570:	ldur	x8, [x29, #-16]
  411574:	cmp	x8, #0x0
  411578:	cset	w9, ne  // ne = any
  41157c:	mov	w10, #0x1                   	// #1
  411580:	eor	w9, w9, #0x1
  411584:	eor	w9, w9, w10
  411588:	eor	w9, w9, w10
  41158c:	and	w9, w9, #0x1
  411590:	mov	w0, w9
  411594:	sxtw	x8, w0
  411598:	cbz	x8, 4115c0 <bus_machine_method_unregister+0x80>
  41159c:	mov	w8, wzr
  4115a0:	mov	w0, w8
  4115a4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4115a8:	add	x1, x1, #0xebd
  4115ac:	ldr	x2, [sp, #8]
  4115b0:	mov	w3, #0x44                  	// #68
  4115b4:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  4115b8:	add	x4, x4, #0x23a
  4115bc:	bl	404bd0 <log_assert_failed_realm@plt>
  4115c0:	ldr	x8, [sp, #24]
  4115c4:	cmp	x8, #0x0
  4115c8:	cset	w9, ne  // ne = any
  4115cc:	mov	w10, #0x1                   	// #1
  4115d0:	eor	w9, w9, #0x1
  4115d4:	eor	w9, w9, w10
  4115d8:	eor	w9, w9, w10
  4115dc:	and	w9, w9, #0x1
  4115e0:	mov	w0, w9
  4115e4:	sxtw	x8, w0
  4115e8:	cbz	x8, 411610 <bus_machine_method_unregister+0xd0>
  4115ec:	mov	w8, wzr
  4115f0:	mov	w0, w8
  4115f4:	adrp	x1, 41a000 <operation_new+0x40>
  4115f8:	add	x1, x1, #0xe18
  4115fc:	ldr	x2, [sp, #8]
  411600:	mov	w3, #0x45                  	// #69
  411604:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  411608:	add	x4, x4, #0x23a
  41160c:	bl	404bd0 <log_assert_failed_realm@plt>
  411610:	ldur	x0, [x29, #-16]
  411614:	ldr	x8, [sp, #24]
  411618:	ldr	x8, [x8]
  41161c:	add	x6, x8, #0x28
  411620:	ldr	x7, [sp, #32]
  411624:	mov	w1, #0x5                   	// #5
  411628:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  41162c:	add	x2, x2, #0xb3a
  411630:	mov	x8, xzr
  411634:	mov	x3, x8
  411638:	mov	w9, wzr
  41163c:	and	w4, w9, #0x1
  411640:	mov	w5, #0xffffffff            	// #-1
  411644:	bl	405250 <bus_verify_polkit_async@plt>
  411648:	str	w0, [sp, #20]
  41164c:	ldr	w9, [sp, #20]
  411650:	cmp	w9, #0x0
  411654:	cset	w9, ge  // ge = tcont
  411658:	tbnz	w9, #0, 411668 <bus_machine_method_unregister+0x128>
  41165c:	ldr	w8, [sp, #20]
  411660:	stur	w8, [x29, #-4]
  411664:	b	4116b8 <bus_machine_method_unregister+0x178>
  411668:	ldr	w8, [sp, #20]
  41166c:	cbnz	w8, 41167c <bus_machine_method_unregister+0x13c>
  411670:	mov	w8, #0x1                   	// #1
  411674:	stur	w8, [x29, #-4]
  411678:	b	4116b8 <bus_machine_method_unregister+0x178>
  41167c:	ldr	x0, [sp, #24]
  411680:	bl	409a38 <machine_finalize>
  411684:	str	w0, [sp, #20]
  411688:	ldr	w8, [sp, #20]
  41168c:	cmp	w8, #0x0
  411690:	cset	w8, ge  // ge = tcont
  411694:	tbnz	w8, #0, 4116a4 <bus_machine_method_unregister+0x164>
  411698:	ldr	w8, [sp, #20]
  41169c:	stur	w8, [x29, #-4]
  4116a0:	b	4116b8 <bus_machine_method_unregister+0x178>
  4116a4:	ldur	x0, [x29, #-16]
  4116a8:	mov	x8, xzr
  4116ac:	mov	x1, x8
  4116b0:	bl	4051c0 <sd_bus_reply_method_return@plt>
  4116b4:	stur	w0, [x29, #-4]
  4116b8:	ldur	w0, [x29, #-4]
  4116bc:	ldp	x29, x30, [sp, #64]
  4116c0:	add	sp, sp, #0x50
  4116c4:	ret

00000000004116c8 <bus_machine_method_terminate>:
  4116c8:	sub	sp, sp, #0x50
  4116cc:	stp	x29, x30, [sp, #64]
  4116d0:	add	x29, sp, #0x40
  4116d4:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  4116d8:	add	x8, x8, #0x21c
  4116dc:	add	x8, x8, #0x3
  4116e0:	stur	x0, [x29, #-16]
  4116e4:	stur	x1, [x29, #-24]
  4116e8:	str	x2, [sp, #32]
  4116ec:	ldur	x9, [x29, #-24]
  4116f0:	str	x9, [sp, #24]
  4116f4:	str	x8, [sp, #8]
  4116f8:	ldur	x8, [x29, #-16]
  4116fc:	cmp	x8, #0x0
  411700:	cset	w9, ne  // ne = any
  411704:	mov	w10, #0x1                   	// #1
  411708:	eor	w9, w9, #0x1
  41170c:	eor	w9, w9, w10
  411710:	eor	w9, w9, w10
  411714:	and	w9, w9, #0x1
  411718:	mov	w0, w9
  41171c:	sxtw	x8, w0
  411720:	cbz	x8, 411748 <bus_machine_method_terminate+0x80>
  411724:	mov	w8, wzr
  411728:	mov	w0, w8
  41172c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  411730:	add	x1, x1, #0xebd
  411734:	ldr	x2, [sp, #8]
  411738:	mov	w3, #0x60                  	// #96
  41173c:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  411740:	add	x4, x4, #0x286
  411744:	bl	404bd0 <log_assert_failed_realm@plt>
  411748:	ldr	x8, [sp, #24]
  41174c:	cmp	x8, #0x0
  411750:	cset	w9, ne  // ne = any
  411754:	mov	w10, #0x1                   	// #1
  411758:	eor	w9, w9, #0x1
  41175c:	eor	w9, w9, w10
  411760:	eor	w9, w9, w10
  411764:	and	w9, w9, #0x1
  411768:	mov	w0, w9
  41176c:	sxtw	x8, w0
  411770:	cbz	x8, 411798 <bus_machine_method_terminate+0xd0>
  411774:	mov	w8, wzr
  411778:	mov	w0, w8
  41177c:	adrp	x1, 41a000 <operation_new+0x40>
  411780:	add	x1, x1, #0xe18
  411784:	ldr	x2, [sp, #8]
  411788:	mov	w3, #0x61                  	// #97
  41178c:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  411790:	add	x4, x4, #0x286
  411794:	bl	404bd0 <log_assert_failed_realm@plt>
  411798:	ldur	x0, [x29, #-16]
  41179c:	ldr	x8, [sp, #24]
  4117a0:	ldr	x8, [x8]
  4117a4:	add	x6, x8, #0x28
  4117a8:	ldr	x7, [sp, #32]
  4117ac:	mov	w1, #0x5                   	// #5
  4117b0:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  4117b4:	add	x2, x2, #0xb3a
  4117b8:	mov	x8, xzr
  4117bc:	mov	x3, x8
  4117c0:	mov	w9, wzr
  4117c4:	and	w4, w9, #0x1
  4117c8:	mov	w5, #0xffffffff            	// #-1
  4117cc:	bl	405250 <bus_verify_polkit_async@plt>
  4117d0:	str	w0, [sp, #20]
  4117d4:	ldr	w9, [sp, #20]
  4117d8:	cmp	w9, #0x0
  4117dc:	cset	w9, ge  // ge = tcont
  4117e0:	tbnz	w9, #0, 4117f0 <bus_machine_method_terminate+0x128>
  4117e4:	ldr	w8, [sp, #20]
  4117e8:	stur	w8, [x29, #-4]
  4117ec:	b	411840 <bus_machine_method_terminate+0x178>
  4117f0:	ldr	w8, [sp, #20]
  4117f4:	cbnz	w8, 411804 <bus_machine_method_terminate+0x13c>
  4117f8:	mov	w8, #0x1                   	// #1
  4117fc:	stur	w8, [x29, #-4]
  411800:	b	411840 <bus_machine_method_terminate+0x178>
  411804:	ldr	x0, [sp, #24]
  411808:	bl	4097e0 <machine_stop>
  41180c:	str	w0, [sp, #20]
  411810:	ldr	w8, [sp, #20]
  411814:	cmp	w8, #0x0
  411818:	cset	w8, ge  // ge = tcont
  41181c:	tbnz	w8, #0, 41182c <bus_machine_method_terminate+0x164>
  411820:	ldr	w8, [sp, #20]
  411824:	stur	w8, [x29, #-4]
  411828:	b	411840 <bus_machine_method_terminate+0x178>
  41182c:	ldur	x0, [x29, #-16]
  411830:	mov	x8, xzr
  411834:	mov	x1, x8
  411838:	bl	4051c0 <sd_bus_reply_method_return@plt>
  41183c:	stur	w0, [x29, #-4]
  411840:	ldur	w0, [x29, #-4]
  411844:	ldp	x29, x30, [sp, #64]
  411848:	add	sp, sp, #0x50
  41184c:	ret

0000000000411850 <bus_machine_method_kill>:
  411850:	sub	sp, sp, #0x60
  411854:	stp	x29, x30, [sp, #80]
  411858:	add	x29, sp, #0x50
  41185c:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  411860:	add	x8, x8, #0x21c
  411864:	add	x8, x8, #0x3
  411868:	stur	x0, [x29, #-16]
  41186c:	stur	x1, [x29, #-24]
  411870:	stur	x2, [x29, #-32]
  411874:	ldur	x9, [x29, #-24]
  411878:	str	x9, [sp, #40]
  41187c:	str	x8, [sp, #8]
  411880:	ldur	x8, [x29, #-16]
  411884:	cmp	x8, #0x0
  411888:	cset	w9, ne  // ne = any
  41188c:	mov	w10, #0x1                   	// #1
  411890:	eor	w9, w9, #0x1
  411894:	eor	w9, w9, w10
  411898:	eor	w9, w9, w10
  41189c:	and	w9, w9, #0x1
  4118a0:	mov	w0, w9
  4118a4:	sxtw	x8, w0
  4118a8:	cbz	x8, 4118d0 <bus_machine_method_kill+0x80>
  4118ac:	mov	w8, wzr
  4118b0:	mov	w0, w8
  4118b4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4118b8:	add	x1, x1, #0xebd
  4118bc:	ldr	x2, [sp, #8]
  4118c0:	mov	w3, #0x7f                  	// #127
  4118c4:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  4118c8:	add	x4, x4, #0x2d1
  4118cc:	bl	404bd0 <log_assert_failed_realm@plt>
  4118d0:	ldr	x8, [sp, #40]
  4118d4:	cmp	x8, #0x0
  4118d8:	cset	w9, ne  // ne = any
  4118dc:	mov	w10, #0x1                   	// #1
  4118e0:	eor	w9, w9, #0x1
  4118e4:	eor	w9, w9, w10
  4118e8:	eor	w9, w9, w10
  4118ec:	and	w9, w9, #0x1
  4118f0:	mov	w0, w9
  4118f4:	sxtw	x8, w0
  4118f8:	cbz	x8, 411920 <bus_machine_method_kill+0xd0>
  4118fc:	mov	w8, wzr
  411900:	mov	w0, w8
  411904:	adrp	x1, 41a000 <operation_new+0x40>
  411908:	add	x1, x1, #0xe18
  41190c:	ldr	x2, [sp, #8]
  411910:	mov	w3, #0x80                  	// #128
  411914:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  411918:	add	x4, x4, #0x2d1
  41191c:	bl	404bd0 <log_assert_failed_realm@plt>
  411920:	ldur	x0, [x29, #-16]
  411924:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  411928:	add	x1, x1, #0x317
  41192c:	add	x2, sp, #0x20
  411930:	add	x3, sp, #0x1c
  411934:	bl	405170 <sd_bus_message_read@plt>
  411938:	str	w0, [sp, #20]
  41193c:	ldr	w8, [sp, #20]
  411940:	cmp	w8, #0x0
  411944:	cset	w8, ge  // ge = tcont
  411948:	tbnz	w8, #0, 411958 <bus_machine_method_kill+0x108>
  41194c:	ldr	w8, [sp, #20]
  411950:	stur	w8, [x29, #-4]
  411954:	b	411a94 <bus_machine_method_kill+0x244>
  411958:	ldr	x0, [sp, #32]
  41195c:	bl	411aa4 <isempty>
  411960:	tbnz	w0, #0, 411968 <bus_machine_method_kill+0x118>
  411964:	b	411974 <bus_machine_method_kill+0x124>
  411968:	mov	w8, #0x1                   	// #1
  41196c:	str	w8, [sp, #24]
  411970:	b	4119b4 <bus_machine_method_kill+0x164>
  411974:	ldr	x0, [sp, #32]
  411978:	bl	40abc0 <kill_who_from_string>
  41197c:	str	w0, [sp, #24]
  411980:	ldr	w8, [sp, #24]
  411984:	cmp	w8, #0x0
  411988:	cset	w8, ge  // ge = tcont
  41198c:	tbnz	w8, #0, 4119b4 <bus_machine_method_kill+0x164>
  411990:	ldur	x0, [x29, #-32]
  411994:	ldr	x3, [sp, #32]
  411998:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41199c:	add	x1, x1, #0x848
  4119a0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4119a4:	add	x2, x2, #0x31a
  4119a8:	bl	4051b0 <sd_bus_error_setf@plt>
  4119ac:	stur	w0, [x29, #-4]
  4119b0:	b	411a94 <bus_machine_method_kill+0x244>
  4119b4:	ldr	w0, [sp, #28]
  4119b8:	bl	411ae4 <SIGNAL_VALID>
  4119bc:	tbnz	w0, #0, 4119e4 <bus_machine_method_kill+0x194>
  4119c0:	ldur	x0, [x29, #-32]
  4119c4:	ldr	w3, [sp, #28]
  4119c8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4119cc:	add	x1, x1, #0x848
  4119d0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4119d4:	add	x2, x2, #0x336
  4119d8:	bl	4051b0 <sd_bus_error_setf@plt>
  4119dc:	stur	w0, [x29, #-4]
  4119e0:	b	411a94 <bus_machine_method_kill+0x244>
  4119e4:	ldur	x0, [x29, #-16]
  4119e8:	ldr	x8, [sp, #40]
  4119ec:	ldr	x8, [x8]
  4119f0:	add	x6, x8, #0x28
  4119f4:	ldur	x7, [x29, #-32]
  4119f8:	mov	w1, #0x5                   	// #5
  4119fc:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  411a00:	add	x2, x2, #0xb3a
  411a04:	mov	x8, xzr
  411a08:	mov	x3, x8
  411a0c:	mov	w9, wzr
  411a10:	and	w4, w9, #0x1
  411a14:	mov	w5, #0xffffffff            	// #-1
  411a18:	bl	405250 <bus_verify_polkit_async@plt>
  411a1c:	str	w0, [sp, #20]
  411a20:	ldr	w9, [sp, #20]
  411a24:	cmp	w9, #0x0
  411a28:	cset	w9, ge  // ge = tcont
  411a2c:	tbnz	w9, #0, 411a3c <bus_machine_method_kill+0x1ec>
  411a30:	ldr	w8, [sp, #20]
  411a34:	stur	w8, [x29, #-4]
  411a38:	b	411a94 <bus_machine_method_kill+0x244>
  411a3c:	ldr	w8, [sp, #20]
  411a40:	cbnz	w8, 411a50 <bus_machine_method_kill+0x200>
  411a44:	mov	w8, #0x1                   	// #1
  411a48:	stur	w8, [x29, #-4]
  411a4c:	b	411a94 <bus_machine_method_kill+0x244>
  411a50:	ldr	x0, [sp, #40]
  411a54:	ldr	w1, [sp, #24]
  411a58:	ldr	w2, [sp, #28]
  411a5c:	bl	40a208 <machine_kill>
  411a60:	str	w0, [sp, #20]
  411a64:	ldr	w8, [sp, #20]
  411a68:	cmp	w8, #0x0
  411a6c:	cset	w8, ge  // ge = tcont
  411a70:	tbnz	w8, #0, 411a80 <bus_machine_method_kill+0x230>
  411a74:	ldr	w8, [sp, #20]
  411a78:	stur	w8, [x29, #-4]
  411a7c:	b	411a94 <bus_machine_method_kill+0x244>
  411a80:	ldur	x0, [x29, #-16]
  411a84:	mov	x8, xzr
  411a88:	mov	x1, x8
  411a8c:	bl	4051c0 <sd_bus_reply_method_return@plt>
  411a90:	stur	w0, [x29, #-4]
  411a94:	ldur	w0, [x29, #-4]
  411a98:	ldp	x29, x30, [sp, #80]
  411a9c:	add	sp, sp, #0x60
  411aa0:	ret

0000000000411aa4 <isempty>:
  411aa4:	sub	sp, sp, #0x10
  411aa8:	str	x0, [sp, #8]
  411aac:	ldr	x8, [sp, #8]
  411ab0:	mov	w9, #0x1                   	// #1
  411ab4:	str	w9, [sp, #4]
  411ab8:	cbz	x8, 411ad4 <isempty+0x30>
  411abc:	ldr	x8, [sp, #8]
  411ac0:	ldrb	w9, [x8]
  411ac4:	cmp	w9, #0x0
  411ac8:	cset	w9, ne  // ne = any
  411acc:	eor	w9, w9, #0x1
  411ad0:	str	w9, [sp, #4]
  411ad4:	ldr	w8, [sp, #4]
  411ad8:	and	w0, w8, #0x1
  411adc:	add	sp, sp, #0x10
  411ae0:	ret

0000000000411ae4 <SIGNAL_VALID>:
  411ae4:	sub	sp, sp, #0x10
  411ae8:	str	w0, [sp, #12]
  411aec:	ldr	w8, [sp, #12]
  411af0:	cmp	w8, #0x0
  411af4:	cset	w8, le
  411af8:	mov	w9, #0x0                   	// #0
  411afc:	str	w9, [sp, #8]
  411b00:	tbnz	w8, #0, 411b14 <SIGNAL_VALID+0x30>
  411b04:	ldr	w8, [sp, #12]
  411b08:	cmp	w8, #0x41
  411b0c:	cset	w8, lt  // lt = tstop
  411b10:	str	w8, [sp, #8]
  411b14:	ldr	w8, [sp, #8]
  411b18:	and	w0, w8, #0x1
  411b1c:	add	sp, sp, #0x10
  411b20:	ret

0000000000411b24 <bus_machine_method_get_addresses>:
  411b24:	stp	x29, x30, [sp, #-32]!
  411b28:	stp	x28, x19, [sp, #16]
  411b2c:	mov	x29, sp
  411b30:	sub	sp, sp, #0x1d0
  411b34:	mov	x19, sp
  411b38:	mov	x8, xzr
  411b3c:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  411b40:	add	x9, x9, #0x21c
  411b44:	add	x9, x9, #0x3
  411b48:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  411b4c:	add	x10, x10, #0x348
  411b50:	stur	x0, [x29, #-16]
  411b54:	stur	x1, [x29, #-24]
  411b58:	stur	x2, [x29, #-32]
  411b5c:	stur	x8, [x29, #-40]
  411b60:	ldur	x8, [x29, #-24]
  411b64:	stur	x8, [x29, #-48]
  411b68:	str	x9, [x19, #80]
  411b6c:	str	x10, [x19, #72]
  411b70:	ldur	x8, [x29, #-16]
  411b74:	cmp	x8, #0x0
  411b78:	cset	w9, ne  // ne = any
  411b7c:	mov	w10, #0x1                   	// #1
  411b80:	eor	w9, w9, #0x1
  411b84:	eor	w9, w9, w10
  411b88:	eor	w9, w9, w10
  411b8c:	and	w9, w9, #0x1
  411b90:	mov	w0, w9
  411b94:	sxtw	x8, w0
  411b98:	cbz	x8, 411bbc <bus_machine_method_get_addresses+0x98>
  411b9c:	mov	w8, wzr
  411ba0:	mov	w0, w8
  411ba4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  411ba8:	add	x1, x1, #0xebd
  411bac:	ldr	x2, [x19, #80]
  411bb0:	mov	w3, #0xab                  	// #171
  411bb4:	ldr	x4, [x19, #72]
  411bb8:	bl	404bd0 <log_assert_failed_realm@plt>
  411bbc:	ldur	x8, [x29, #-48]
  411bc0:	cmp	x8, #0x0
  411bc4:	cset	w9, ne  // ne = any
  411bc8:	mov	w10, #0x1                   	// #1
  411bcc:	eor	w9, w9, #0x1
  411bd0:	eor	w9, w9, w10
  411bd4:	eor	w9, w9, w10
  411bd8:	and	w9, w9, #0x1
  411bdc:	mov	w0, w9
  411be0:	sxtw	x8, w0
  411be4:	cbz	x8, 411c08 <bus_machine_method_get_addresses+0xe4>
  411be8:	mov	w8, wzr
  411bec:	mov	w0, w8
  411bf0:	adrp	x1, 41a000 <operation_new+0x40>
  411bf4:	add	x1, x1, #0xe18
  411bf8:	ldr	x2, [x19, #80]
  411bfc:	mov	w3, #0xac                  	// #172
  411c00:	ldr	x4, [x19, #72]
  411c04:	bl	404bd0 <log_assert_failed_realm@plt>
  411c08:	ldur	x0, [x29, #-16]
  411c0c:	sub	x1, x29, #0x28
  411c10:	bl	405200 <sd_bus_message_new_method_return@plt>
  411c14:	stur	w0, [x29, #-52]
  411c18:	ldur	w8, [x29, #-52]
  411c1c:	cmp	w8, #0x0
  411c20:	cset	w8, ge  // ge = tcont
  411c24:	tbnz	w8, #0, 411c3c <bus_machine_method_get_addresses+0x118>
  411c28:	ldur	w8, [x29, #-52]
  411c2c:	stur	w8, [x29, #-4]
  411c30:	mov	w8, #0x1                   	// #1
  411c34:	stur	w8, [x29, #-56]
  411c38:	b	4125f8 <bus_machine_method_get_addresses+0xad4>
  411c3c:	ldur	x0, [x29, #-40]
  411c40:	mov	w1, #0x61                  	// #97
  411c44:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  411c48:	add	x2, x2, #0x397
  411c4c:	bl	405130 <sd_bus_message_open_container@plt>
  411c50:	stur	w0, [x29, #-52]
  411c54:	ldur	w8, [x29, #-52]
  411c58:	cmp	w8, #0x0
  411c5c:	cset	w8, ge  // ge = tcont
  411c60:	tbnz	w8, #0, 411c78 <bus_machine_method_get_addresses+0x154>
  411c64:	ldur	w8, [x29, #-52]
  411c68:	stur	w8, [x29, #-4]
  411c6c:	mov	w8, #0x1                   	// #1
  411c70:	stur	w8, [x29, #-56]
  411c74:	b	4125f8 <bus_machine_method_get_addresses+0xad4>
  411c78:	ldur	x8, [x29, #-48]
  411c7c:	ldr	w9, [x8, #32]
  411c80:	str	w9, [x19, #68]
  411c84:	cbz	w9, 411e7c <bus_machine_method_get_addresses+0x358>
  411c88:	b	411c8c <bus_machine_method_get_addresses+0x168>
  411c8c:	ldr	w8, [x19, #68]
  411c90:	cmp	w8, #0x2
  411c94:	cset	w9, eq  // eq = none
  411c98:	eor	w9, w9, #0x1
  411c9c:	tbnz	w9, #0, 412580 <bus_machine_method_get_addresses+0xa5c>
  411ca0:	b	411ca4 <bus_machine_method_get_addresses+0x180>
  411ca4:	sub	x3, x29, #0x40
  411ca8:	mov	x8, xzr
  411cac:	stur	x8, [x29, #-64]
  411cb0:	mov	x0, x8
  411cb4:	mov	w9, wzr
  411cb8:	mov	w1, w9
  411cbc:	mov	w2, w9
  411cc0:	bl	405540 <local_addresses@plt>
  411cc4:	stur	w0, [x29, #-76]
  411cc8:	ldur	w9, [x29, #-76]
  411ccc:	cmp	w9, #0x0
  411cd0:	cset	w9, ge  // ge = tcont
  411cd4:	tbnz	w9, #0, 411cec <bus_machine_method_get_addresses+0x1c8>
  411cd8:	ldur	w8, [x29, #-76]
  411cdc:	stur	w8, [x29, #-4]
  411ce0:	mov	w8, #0x1                   	// #1
  411ce4:	stur	w8, [x29, #-56]
  411ce8:	b	411e64 <bus_machine_method_get_addresses+0x340>
  411cec:	ldur	x8, [x29, #-64]
  411cf0:	stur	x8, [x29, #-72]
  411cf4:	stur	wzr, [x29, #-80]
  411cf8:	ldur	w8, [x29, #-80]
  411cfc:	ldur	w9, [x29, #-76]
  411d00:	cmp	w8, w9
  411d04:	b.ge	411e5c <bus_machine_method_get_addresses+0x338>  // b.tcont
  411d08:	ldur	x0, [x29, #-40]
  411d0c:	mov	w1, #0x72                  	// #114
  411d10:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  411d14:	add	x2, x2, #0x39d
  411d18:	bl	405130 <sd_bus_message_open_container@plt>
  411d1c:	stur	w0, [x29, #-52]
  411d20:	ldur	w8, [x29, #-52]
  411d24:	cmp	w8, #0x0
  411d28:	cset	w8, ge  // ge = tcont
  411d2c:	tbnz	w8, #0, 411d44 <bus_machine_method_get_addresses+0x220>
  411d30:	ldur	w8, [x29, #-52]
  411d34:	stur	w8, [x29, #-4]
  411d38:	mov	w8, #0x1                   	// #1
  411d3c:	stur	w8, [x29, #-56]
  411d40:	b	411e64 <bus_machine_method_get_addresses+0x340>
  411d44:	ldur	x0, [x29, #-40]
  411d48:	ldur	x8, [x29, #-64]
  411d4c:	ldursw	x9, [x29, #-80]
  411d50:	mov	x10, #0x20                  	// #32
  411d54:	mul	x9, x10, x9
  411d58:	ldr	w2, [x8, x9]
  411d5c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  411d60:	add	x1, x1, #0xca9
  411d64:	bl	405120 <sd_bus_message_append@plt>
  411d68:	stur	w0, [x29, #-52]
  411d6c:	ldur	w11, [x29, #-52]
  411d70:	cmp	w11, #0x0
  411d74:	cset	w11, ge  // ge = tcont
  411d78:	tbnz	w11, #0, 411d90 <bus_machine_method_get_addresses+0x26c>
  411d7c:	ldur	w8, [x29, #-52]
  411d80:	stur	w8, [x29, #-4]
  411d84:	mov	w8, #0x1                   	// #1
  411d88:	stur	w8, [x29, #-56]
  411d8c:	b	411e64 <bus_machine_method_get_addresses+0x340>
  411d90:	ldur	x0, [x29, #-40]
  411d94:	ldur	x8, [x29, #-64]
  411d98:	ldursw	x9, [x29, #-80]
  411d9c:	mov	x10, #0x20                  	// #32
  411da0:	mul	x9, x10, x9
  411da4:	add	x8, x8, x9
  411da8:	add	x2, x8, #0x10
  411dac:	ldur	x8, [x29, #-64]
  411db0:	ldursw	x9, [x29, #-80]
  411db4:	mul	x9, x10, x9
  411db8:	ldr	w11, [x8, x9]
  411dbc:	str	x0, [x19, #56]
  411dc0:	mov	w0, w11
  411dc4:	str	x2, [x19, #48]
  411dc8:	bl	412670 <FAMILY_ADDRESS_SIZE>
  411dcc:	ldr	x8, [x19, #56]
  411dd0:	str	x0, [x19, #40]
  411dd4:	mov	x0, x8
  411dd8:	mov	w1, #0x79                  	// #121
  411ddc:	ldr	x2, [x19, #48]
  411de0:	ldr	x3, [x19, #40]
  411de4:	bl	405550 <sd_bus_message_append_array@plt>
  411de8:	stur	w0, [x29, #-52]
  411dec:	ldur	w11, [x29, #-52]
  411df0:	cmp	w11, #0x0
  411df4:	cset	w11, ge  // ge = tcont
  411df8:	tbnz	w11, #0, 411e10 <bus_machine_method_get_addresses+0x2ec>
  411dfc:	ldur	w8, [x29, #-52]
  411e00:	stur	w8, [x29, #-4]
  411e04:	mov	w8, #0x1                   	// #1
  411e08:	stur	w8, [x29, #-56]
  411e0c:	b	411e64 <bus_machine_method_get_addresses+0x340>
  411e10:	ldur	x0, [x29, #-40]
  411e14:	bl	405150 <sd_bus_message_close_container@plt>
  411e18:	stur	w0, [x29, #-52]
  411e1c:	ldur	w8, [x29, #-52]
  411e20:	cmp	w8, #0x0
  411e24:	cset	w8, ge  // ge = tcont
  411e28:	tbnz	w8, #0, 411e40 <bus_machine_method_get_addresses+0x31c>
  411e2c:	ldur	w8, [x29, #-52]
  411e30:	stur	w8, [x29, #-4]
  411e34:	mov	w8, #0x1                   	// #1
  411e38:	stur	w8, [x29, #-56]
  411e3c:	b	411e64 <bus_machine_method_get_addresses+0x340>
  411e40:	ldur	x8, [x29, #-72]
  411e44:	add	x8, x8, #0x20
  411e48:	stur	x8, [x29, #-72]
  411e4c:	ldur	w9, [x29, #-80]
  411e50:	add	w9, w9, #0x1
  411e54:	stur	w9, [x29, #-80]
  411e58:	b	411cf8 <bus_machine_method_get_addresses+0x1d4>
  411e5c:	mov	w8, #0x6                   	// #6
  411e60:	stur	w8, [x29, #-56]
  411e64:	sub	x0, x29, #0x40
  411e68:	bl	412648 <freep>
  411e6c:	ldur	w8, [x29, #-56]
  411e70:	cmp	w8, #0x6
  411e74:	b.eq	4125a8 <bus_machine_method_get_addresses+0xa84>  // b.none
  411e78:	b	4125f8 <bus_machine_method_get_addresses+0xad4>
  411e7c:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  411e80:	add	x8, x8, #0xb48
  411e84:	ldr	x8, [x8]
  411e88:	stur	x8, [x29, #-88]
  411e8c:	sub	x1, x29, #0x60
  411e90:	mov	x8, xzr
  411e94:	stur	x8, [x29, #-96]
  411e98:	stur	x8, [x29, #-104]
  411e9c:	mov	w9, #0xffffffff            	// #-1
  411ea0:	stur	w9, [x29, #-108]
  411ea4:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  411ea8:	add	x0, x0, #0x3a1
  411eac:	bl	405560 <readlink_malloc@plt>
  411eb0:	stur	w0, [x29, #-52]
  411eb4:	ldur	w9, [x29, #-52]
  411eb8:	cmp	w9, #0x0
  411ebc:	cset	w9, ge  // ge = tcont
  411ec0:	tbnz	w9, #0, 411ed8 <bus_machine_method_get_addresses+0x3b4>
  411ec4:	ldur	w8, [x29, #-52]
  411ec8:	stur	w8, [x29, #-4]
  411ecc:	mov	w8, #0x1                   	// #1
  411ed0:	stur	w8, [x29, #-56]
  411ed4:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  411ed8:	ldur	x8, [x29, #-48]
  411edc:	ldr	w9, [x8, #80]
  411ee0:	stur	w9, [x29, #-128]
  411ee4:	ldur	w9, [x29, #-128]
  411ee8:	cbnz	w9, 411efc <bus_machine_method_get_addresses+0x3d8>
  411eec:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  411ef0:	add	x8, x8, #0x3a1
  411ef4:	stur	x8, [x29, #-136]
  411ef8:	b	411fec <bus_machine_method_get_addresses+0x4c8>
  411efc:	mov	x8, #0x1a                  	// #26
  411f00:	stur	x8, [x29, #-144]
  411f04:	ldur	x1, [x29, #-144]
  411f08:	mov	x0, #0x1                   	// #1
  411f0c:	bl	412798 <size_multiply_overflow>
  411f10:	mov	w8, #0x1                   	// #1
  411f14:	eor	w9, w0, #0x1
  411f18:	eor	w9, w9, w8
  411f1c:	eor	w9, w9, w8
  411f20:	eor	w8, w9, w8
  411f24:	and	w8, w8, #0x1
  411f28:	mov	w1, w8
  411f2c:	sxtw	x10, w1
  411f30:	cbz	x10, 411f54 <bus_machine_method_get_addresses+0x430>
  411f34:	mov	w8, wzr
  411f38:	mov	w0, w8
  411f3c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  411f40:	add	x1, x1, #0x4dd
  411f44:	ldr	x2, [x19, #80]
  411f48:	mov	w3, #0xe2                  	// #226
  411f4c:	ldr	x4, [x19, #72]
  411f50:	bl	404bd0 <log_assert_failed_realm@plt>
  411f54:	ldur	x8, [x29, #-144]
  411f58:	mov	x9, #0x1                   	// #1
  411f5c:	mul	x8, x9, x8
  411f60:	cmp	x8, #0x400, lsl #12
  411f64:	cset	w10, ls  // ls = plast
  411f68:	mov	w11, #0x1                   	// #1
  411f6c:	eor	w10, w10, #0x1
  411f70:	eor	w10, w10, w11
  411f74:	eor	w10, w10, w11
  411f78:	and	w10, w10, #0x1
  411f7c:	mov	w0, w10
  411f80:	sxtw	x8, w0
  411f84:	cbz	x8, 411fa8 <bus_machine_method_get_addresses+0x484>
  411f88:	mov	w8, wzr
  411f8c:	mov	w0, w8
  411f90:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  411f94:	add	x1, x1, #0x508
  411f98:	ldr	x2, [x19, #80]
  411f9c:	mov	w3, #0xe2                  	// #226
  411fa0:	ldr	x4, [x19, #72]
  411fa4:	bl	404bd0 <log_assert_failed_realm@plt>
  411fa8:	ldur	x8, [x29, #-144]
  411fac:	mov	x9, #0x1                   	// #1
  411fb0:	mul	x8, x9, x8
  411fb4:	mul	x8, x8, x9
  411fb8:	add	x8, x8, #0xf
  411fbc:	and	x8, x8, #0xfffffffffffffff0
  411fc0:	mov	x9, sp
  411fc4:	subs	x8, x9, x8
  411fc8:	mov	sp, x8
  411fcc:	stur	x8, [x29, #-152]
  411fd0:	ldur	x8, [x29, #-152]
  411fd4:	stur	x8, [x29, #-136]
  411fd8:	ldur	x0, [x29, #-136]
  411fdc:	ldur	w2, [x29, #-128]
  411fe0:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  411fe4:	add	x1, x1, #0x3b3
  411fe8:	bl	405340 <sprintf@plt>
  411fec:	ldur	x8, [x29, #-136]
  411ff0:	stur	x8, [x29, #-160]
  411ff4:	ldur	x8, [x29, #-160]
  411ff8:	stur	x8, [x29, #-120]
  411ffc:	ldur	x0, [x29, #-120]
  412000:	sub	x1, x29, #0x68
  412004:	bl	405560 <readlink_malloc@plt>
  412008:	stur	w0, [x29, #-52]
  41200c:	ldur	w9, [x29, #-52]
  412010:	cmp	w9, #0x0
  412014:	cset	w9, ge  // ge = tcont
  412018:	tbnz	w9, #0, 412030 <bus_machine_method_get_addresses+0x50c>
  41201c:	ldur	w8, [x29, #-52]
  412020:	stur	w8, [x29, #-4]
  412024:	mov	w8, #0x1                   	// #1
  412028:	stur	w8, [x29, #-56]
  41202c:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412030:	ldur	x0, [x29, #-96]
  412034:	ldur	x1, [x29, #-104]
  412038:	bl	404e40 <strcmp@plt>
  41203c:	cbnz	w0, 412070 <bus_machine_method_get_addresses+0x54c>
  412040:	ldur	x0, [x29, #-32]
  412044:	ldur	x8, [x29, #-48]
  412048:	ldr	x3, [x8, #8]
  41204c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412050:	add	x1, x1, #0x3c3
  412054:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412058:	add	x2, x2, #0x3f0
  41205c:	bl	4051b0 <sd_bus_error_setf@plt>
  412060:	stur	w0, [x29, #-4]
  412064:	mov	w9, #0x1                   	// #1
  412068:	stur	w9, [x29, #-56]
  41206c:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412070:	ldur	x8, [x29, #-48]
  412074:	ldr	w0, [x8, #80]
  412078:	mov	x8, xzr
  41207c:	mov	x1, x8
  412080:	mov	x2, x8
  412084:	sub	x3, x29, #0x6c
  412088:	mov	x4, x8
  41208c:	mov	x5, x8
  412090:	bl	405570 <namespace_open@plt>
  412094:	stur	w0, [x29, #-52]
  412098:	ldur	w9, [x29, #-52]
  41209c:	cmp	w9, #0x0
  4120a0:	cset	w9, ge  // ge = tcont
  4120a4:	tbnz	w9, #0, 4120bc <bus_machine_method_get_addresses+0x598>
  4120a8:	ldur	w8, [x29, #-52]
  4120ac:	stur	w8, [x29, #-4]
  4120b0:	mov	w8, #0x1                   	// #1
  4120b4:	stur	w8, [x29, #-56]
  4120b8:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  4120bc:	mov	w0, #0x1                   	// #1
  4120c0:	mov	w1, #0x5                   	// #5
  4120c4:	mov	w8, wzr
  4120c8:	mov	w2, w8
  4120cc:	sub	x3, x29, #0x58
  4120d0:	bl	405580 <socketpair@plt>
  4120d4:	cmp	w0, #0x0
  4120d8:	cset	w8, ge  // ge = tcont
  4120dc:	tbnz	w8, #0, 412100 <bus_machine_method_get_addresses+0x5dc>
  4120e0:	bl	404d50 <__errno_location@plt>
  4120e4:	ldr	w8, [x0]
  4120e8:	mov	w9, wzr
  4120ec:	subs	w8, w9, w8
  4120f0:	stur	w8, [x29, #-4]
  4120f4:	mov	w8, #0x1                   	// #1
  4120f8:	stur	w8, [x29, #-56]
  4120fc:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412100:	ldur	w7, [x29, #-108]
  412104:	sub	sp, sp, #0x20
  412108:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  41210c:	add	x0, x0, #0x41b
  412110:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412114:	add	x1, x1, #0x427
  412118:	mov	x8, xzr
  41211c:	mov	x2, x8
  412120:	mov	x3, x8
  412124:	mov	w4, #0x5                   	// #5
  412128:	mov	w9, #0xffffffff            	// #-1
  41212c:	mov	w5, w9
  412130:	mov	w6, w9
  412134:	mov	x8, sp
  412138:	str	w9, [x8]
  41213c:	mov	x8, sp
  412140:	str	w9, [x8, #8]
  412144:	mov	x8, sp
  412148:	sub	x10, x29, #0x7c
  41214c:	str	x10, [x8, #16]
  412150:	bl	405590 <namespace_fork@plt>
  412154:	add	sp, sp, #0x20
  412158:	stur	w0, [x29, #-52]
  41215c:	ldur	w9, [x29, #-52]
  412160:	cmp	w9, #0x0
  412164:	cset	w9, ge  // ge = tcont
  412168:	tbnz	w9, #0, 412190 <bus_machine_method_get_addresses+0x66c>
  41216c:	ldur	x0, [x29, #-32]
  412170:	ldur	w1, [x29, #-52]
  412174:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  412178:	add	x2, x2, #0xc94
  41217c:	bl	405290 <sd_bus_error_set_errnof@plt>
  412180:	stur	w0, [x29, #-4]
  412184:	mov	w8, #0x1                   	// #1
  412188:	stur	w8, [x29, #-56]
  41218c:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412190:	ldur	w8, [x29, #-52]
  412194:	cbnz	w8, 4122a0 <bus_machine_method_get_addresses+0x77c>
  412198:	sub	x3, x29, #0xa8
  41219c:	mov	x8, xzr
  4121a0:	stur	x8, [x29, #-168]
  4121a4:	ldur	w0, [x29, #-88]
  4121a8:	str	x3, [x19, #32]
  4121ac:	str	x8, [x19, #24]
  4121b0:	bl	4052c0 <safe_close@plt>
  4121b4:	stur	w0, [x29, #-88]
  4121b8:	ldr	x8, [x19, #24]
  4121bc:	mov	x0, x8
  4121c0:	mov	w9, wzr
  4121c4:	mov	w1, w9
  4121c8:	mov	w2, w9
  4121cc:	ldr	x3, [x19, #32]
  4121d0:	bl	405540 <local_addresses@plt>
  4121d4:	stur	w0, [x29, #-184]
  4121d8:	ldur	w9, [x29, #-184]
  4121dc:	cmp	w9, #0x0
  4121e0:	cset	w9, ge  // ge = tcont
  4121e4:	tbnz	w9, #0, 4121f0 <bus_machine_method_get_addresses+0x6cc>
  4121e8:	mov	w0, #0x1                   	// #1
  4121ec:	bl	405310 <_exit@plt>
  4121f0:	ldur	x8, [x29, #-168]
  4121f4:	stur	x8, [x29, #-176]
  4121f8:	stur	wzr, [x29, #-180]
  4121fc:	ldur	w8, [x29, #-180]
  412200:	ldur	w9, [x29, #-184]
  412204:	cmp	w8, w9
  412208:	b.ge	412288 <bus_machine_method_get_addresses+0x764>  // b.tcont
  41220c:	ldur	x8, [x29, #-176]
  412210:	sub	x9, x29, #0xd8
  412214:	stur	x8, [x29, #-216]
  412218:	mov	x8, #0x4                   	// #4
  41221c:	stur	x8, [x29, #-208]
  412220:	ldur	x8, [x29, #-176]
  412224:	add	x8, x8, #0x10
  412228:	str	x8, [x9, #16]
  41222c:	ldur	x8, [x29, #-176]
  412230:	ldr	w0, [x8]
  412234:	str	x9, [x19, #16]
  412238:	bl	412670 <FAMILY_ADDRESS_SIZE>
  41223c:	stur	x0, [x29, #-192]
  412240:	ldur	w0, [x29, #-84]
  412244:	ldr	x1, [x19, #16]
  412248:	mov	w2, #0x2                   	// #2
  41224c:	bl	4055a0 <writev@plt>
  412250:	stur	w0, [x29, #-52]
  412254:	ldur	w10, [x29, #-52]
  412258:	cmp	w10, #0x0
  41225c:	cset	w10, ge  // ge = tcont
  412260:	tbnz	w10, #0, 41226c <bus_machine_method_get_addresses+0x748>
  412264:	mov	w0, #0x1                   	// #1
  412268:	bl	405310 <_exit@plt>
  41226c:	ldur	x8, [x29, #-176]
  412270:	add	x8, x8, #0x20
  412274:	stur	x8, [x29, #-176]
  412278:	ldur	w9, [x29, #-180]
  41227c:	add	w9, w9, #0x1
  412280:	stur	w9, [x29, #-180]
  412284:	b	4121fc <bus_machine_method_get_addresses+0x6d8>
  412288:	ldur	w0, [x29, #-84]
  41228c:	bl	4052c0 <safe_close@plt>
  412290:	stur	w0, [x29, #-84]
  412294:	mov	w8, wzr
  412298:	mov	w0, w8
  41229c:	bl	405310 <_exit@plt>
  4122a0:	ldur	w0, [x29, #-84]
  4122a4:	bl	4052c0 <safe_close@plt>
  4122a8:	stur	w0, [x29, #-84]
  4122ac:	add	x8, x19, #0x78
  4122b0:	mov	x9, xzr
  4122b4:	str	x9, [x19, #120]
  4122b8:	mov	w10, wzr
  4122bc:	str	wzr, [x19, #128]
  4122c0:	add	x11, x19, #0xb0
  4122c4:	str	x11, [x8, #16]
  4122c8:	mov	x11, #0x2                   	// #2
  4122cc:	str	x11, [x19, #144]
  4122d0:	str	x9, [x8, #32]
  4122d4:	str	xzr, [x19, #160]
  4122d8:	str	wzr, [x19, #168]
  4122dc:	sub	x9, x29, #0xdc
  4122e0:	str	x9, [x19, #104]
  4122e4:	mov	x9, #0x4                   	// #4
  4122e8:	str	x9, [x19, #112]
  4122ec:	ldur	q0, [x19, #104]
  4122f0:	str	q0, [x19, #176]
  4122f4:	add	x9, x19, #0xd8
  4122f8:	str	x9, [x19, #88]
  4122fc:	mov	x9, #0x10                  	// #16
  412300:	str	x9, [x19, #96]
  412304:	ldur	q0, [x19, #88]
  412308:	str	q0, [x19, #192]
  41230c:	ldur	w0, [x29, #-88]
  412310:	mov	x1, x8
  412314:	mov	w2, w10
  412318:	bl	4055b0 <recvmsg@plt>
  41231c:	str	x0, [x19, #232]
  412320:	ldr	x8, [x19, #232]
  412324:	cmp	x8, #0x0
  412328:	cset	w10, ge  // ge = tcont
  41232c:	tbnz	w10, #0, 412350 <bus_machine_method_get_addresses+0x82c>
  412330:	bl	404d50 <__errno_location@plt>
  412334:	ldr	w8, [x0]
  412338:	mov	w9, wzr
  41233c:	subs	w8, w9, w8
  412340:	stur	w8, [x29, #-4]
  412344:	mov	w8, #0x1                   	// #1
  412348:	stur	w8, [x29, #-56]
  41234c:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412350:	ldr	x8, [x19, #232]
  412354:	cmp	x8, #0x4
  412358:	b.cs	412360 <bus_machine_method_get_addresses+0x83c>  // b.hs, b.nlast
  41235c:	b	4124c8 <bus_machine_method_get_addresses+0x9a4>
  412360:	ldur	x0, [x29, #-40]
  412364:	mov	w1, #0x72                  	// #114
  412368:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41236c:	add	x2, x2, #0x39d
  412370:	bl	405130 <sd_bus_message_open_container@plt>
  412374:	stur	w0, [x29, #-52]
  412378:	ldur	w8, [x29, #-52]
  41237c:	cmp	w8, #0x0
  412380:	cset	w8, ge  // ge = tcont
  412384:	tbnz	w8, #0, 41239c <bus_machine_method_get_addresses+0x878>
  412388:	ldur	w8, [x29, #-52]
  41238c:	stur	w8, [x29, #-4]
  412390:	mov	w8, #0x1                   	// #1
  412394:	stur	w8, [x29, #-56]
  412398:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  41239c:	ldur	x0, [x29, #-40]
  4123a0:	ldur	w2, [x29, #-220]
  4123a4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4123a8:	add	x1, x1, #0xca9
  4123ac:	bl	405120 <sd_bus_message_append@plt>
  4123b0:	stur	w0, [x29, #-52]
  4123b4:	ldur	w8, [x29, #-52]
  4123b8:	cmp	w8, #0x0
  4123bc:	cset	w8, ge  // ge = tcont
  4123c0:	tbnz	w8, #0, 4123d8 <bus_machine_method_get_addresses+0x8b4>
  4123c4:	ldur	w8, [x29, #-52]
  4123c8:	stur	w8, [x29, #-4]
  4123cc:	mov	w8, #0x1                   	// #1
  4123d0:	stur	w8, [x29, #-56]
  4123d4:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  4123d8:	ldur	w8, [x29, #-220]
  4123dc:	cmp	w8, #0x2
  4123e0:	str	w8, [x19, #12]
  4123e4:	b.eq	4123fc <bus_machine_method_get_addresses+0x8d8>  // b.none
  4123e8:	b	4123ec <bus_machine_method_get_addresses+0x8c8>
  4123ec:	ldr	w8, [x19, #12]
  4123f0:	cmp	w8, #0xa
  4123f4:	b.eq	412438 <bus_machine_method_get_addresses+0x914>  // b.none
  4123f8:	b	412470 <bus_machine_method_get_addresses+0x94c>
  4123fc:	ldr	x8, [x19, #232]
  412400:	cmp	x8, #0x8
  412404:	b.eq	41241c <bus_machine_method_get_addresses+0x8f8>  // b.none
  412408:	mov	w8, #0xfffffffb            	// #-5
  41240c:	stur	w8, [x29, #-4]
  412410:	mov	w8, #0x1                   	// #1
  412414:	stur	w8, [x29, #-56]
  412418:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  41241c:	ldur	x0, [x29, #-40]
  412420:	mov	w1, #0x79                  	// #121
  412424:	add	x2, x19, #0xd8
  412428:	mov	x3, #0x4                   	// #4
  41242c:	bl	405550 <sd_bus_message_append_array@plt>
  412430:	stur	w0, [x29, #-52]
  412434:	b	412470 <bus_machine_method_get_addresses+0x94c>
  412438:	ldr	x8, [x19, #232]
  41243c:	cmp	x8, #0x14
  412440:	b.eq	412458 <bus_machine_method_get_addresses+0x934>  // b.none
  412444:	mov	w8, #0xfffffffb            	// #-5
  412448:	stur	w8, [x29, #-4]
  41244c:	mov	w8, #0x1                   	// #1
  412450:	stur	w8, [x29, #-56]
  412454:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412458:	ldur	x0, [x29, #-40]
  41245c:	mov	w1, #0x79                  	// #121
  412460:	add	x2, x19, #0xd8
  412464:	mov	x3, #0x10                  	// #16
  412468:	bl	405550 <sd_bus_message_append_array@plt>
  41246c:	stur	w0, [x29, #-52]
  412470:	ldur	w8, [x29, #-52]
  412474:	cmp	w8, #0x0
  412478:	cset	w8, ge  // ge = tcont
  41247c:	tbnz	w8, #0, 412494 <bus_machine_method_get_addresses+0x970>
  412480:	ldur	w8, [x29, #-52]
  412484:	stur	w8, [x29, #-4]
  412488:	mov	w8, #0x1                   	// #1
  41248c:	stur	w8, [x29, #-56]
  412490:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412494:	ldur	x0, [x29, #-40]
  412498:	bl	405150 <sd_bus_message_close_container@plt>
  41249c:	stur	w0, [x29, #-52]
  4124a0:	ldur	w8, [x29, #-52]
  4124a4:	cmp	w8, #0x0
  4124a8:	cset	w8, ge  // ge = tcont
  4124ac:	tbnz	w8, #0, 4124c4 <bus_machine_method_get_addresses+0x9a0>
  4124b0:	ldur	w8, [x29, #-52]
  4124b4:	stur	w8, [x29, #-4]
  4124b8:	mov	w8, #0x1                   	// #1
  4124bc:	stur	w8, [x29, #-56]
  4124c0:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  4124c4:	b	4122ac <bus_machine_method_get_addresses+0x788>
  4124c8:	ldur	w1, [x29, #-124]
  4124cc:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  4124d0:	add	x0, x0, #0x41b
  4124d4:	mov	w8, wzr
  4124d8:	mov	w2, w8
  4124dc:	bl	4055c0 <wait_for_terminate_and_check@plt>
  4124e0:	stur	w0, [x29, #-52]
  4124e4:	ldur	w8, [x29, #-52]
  4124e8:	cmp	w8, #0x0
  4124ec:	cset	w8, ge  // ge = tcont
  4124f0:	tbnz	w8, #0, 412518 <bus_machine_method_get_addresses+0x9f4>
  4124f4:	ldur	x0, [x29, #-32]
  4124f8:	ldur	w1, [x29, #-52]
  4124fc:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412500:	add	x2, x2, #0x431
  412504:	bl	405290 <sd_bus_error_set_errnof@plt>
  412508:	stur	w0, [x29, #-4]
  41250c:	mov	w8, #0x1                   	// #1
  412510:	stur	w8, [x29, #-56]
  412514:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412518:	ldur	w8, [x29, #-52]
  41251c:	cbz	w8, 412548 <bus_machine_method_get_addresses+0xa24>
  412520:	ldur	x0, [x29, #-32]
  412524:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412528:	add	x1, x1, #0x44e
  41252c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412530:	add	x2, x2, #0x470
  412534:	bl	4051b0 <sd_bus_error_setf@plt>
  412538:	stur	w0, [x29, #-4]
  41253c:	mov	w8, #0x1                   	// #1
  412540:	stur	w8, [x29, #-56]
  412544:	b	412550 <bus_machine_method_get_addresses+0xa2c>
  412548:	mov	w8, #0x6                   	// #6
  41254c:	stur	w8, [x29, #-56]
  412550:	sub	x0, x29, #0x6c
  412554:	bl	412770 <closep>
  412558:	sub	x0, x29, #0x68
  41255c:	bl	412648 <freep>
  412560:	sub	x0, x29, #0x60
  412564:	bl	412648 <freep>
  412568:	sub	x0, x29, #0x58
  41256c:	bl	41274c <close_pairp>
  412570:	ldur	w8, [x29, #-56]
  412574:	cmp	w8, #0x6
  412578:	b.eq	4125a8 <bus_machine_method_get_addresses+0xa84>  // b.none
  41257c:	b	4125f8 <bus_machine_method_get_addresses+0xad4>
  412580:	ldur	x0, [x29, #-32]
  412584:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  412588:	add	x1, x1, #0xb63
  41258c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412590:	add	x2, x2, #0x487
  412594:	bl	4051b0 <sd_bus_error_setf@plt>
  412598:	stur	w0, [x29, #-4]
  41259c:	mov	w8, #0x1                   	// #1
  4125a0:	stur	w8, [x29, #-56]
  4125a4:	b	4125f8 <bus_machine_method_get_addresses+0xad4>
  4125a8:	ldur	x0, [x29, #-40]
  4125ac:	bl	405150 <sd_bus_message_close_container@plt>
  4125b0:	stur	w0, [x29, #-52]
  4125b4:	ldur	w8, [x29, #-52]
  4125b8:	cmp	w8, #0x0
  4125bc:	cset	w8, ge  // ge = tcont
  4125c0:	tbnz	w8, #0, 4125d8 <bus_machine_method_get_addresses+0xab4>
  4125c4:	ldur	w8, [x29, #-52]
  4125c8:	stur	w8, [x29, #-4]
  4125cc:	mov	w8, #0x1                   	// #1
  4125d0:	stur	w8, [x29, #-56]
  4125d4:	b	4125f8 <bus_machine_method_get_addresses+0xad4>
  4125d8:	ldur	x1, [x29, #-40]
  4125dc:	mov	x8, xzr
  4125e0:	mov	x0, x8
  4125e4:	mov	x2, x8
  4125e8:	bl	405220 <sd_bus_send@plt>
  4125ec:	stur	w0, [x29, #-4]
  4125f0:	mov	w9, #0x1                   	// #1
  4125f4:	stur	w9, [x29, #-56]
  4125f8:	sub	x0, x29, #0x28
  4125fc:	bl	412614 <sd_bus_message_unrefp>
  412600:	ldur	w0, [x29, #-4]
  412604:	mov	sp, x29
  412608:	ldp	x28, x19, [sp, #16]
  41260c:	ldp	x29, x30, [sp], #32
  412610:	ret

0000000000412614 <sd_bus_message_unrefp>:
  412614:	sub	sp, sp, #0x20
  412618:	stp	x29, x30, [sp, #16]
  41261c:	add	x29, sp, #0x10
  412620:	str	x0, [sp, #8]
  412624:	ldr	x8, [sp, #8]
  412628:	ldr	x8, [x8]
  41262c:	cbz	x8, 41263c <sd_bus_message_unrefp+0x28>
  412630:	ldr	x8, [sp, #8]
  412634:	ldr	x0, [x8]
  412638:	bl	404e70 <sd_bus_message_unref@plt>
  41263c:	ldp	x29, x30, [sp, #16]
  412640:	add	sp, sp, #0x20
  412644:	ret

0000000000412648 <freep>:
  412648:	sub	sp, sp, #0x20
  41264c:	stp	x29, x30, [sp, #16]
  412650:	add	x29, sp, #0x10
  412654:	str	x0, [sp, #8]
  412658:	ldr	x8, [sp, #8]
  41265c:	ldr	x0, [x8]
  412660:	bl	404cb0 <free@plt>
  412664:	ldp	x29, x30, [sp, #16]
  412668:	add	sp, sp, #0x20
  41266c:	ret

0000000000412670 <FAMILY_ADDRESS_SIZE>:
  412670:	sub	sp, sp, #0x30
  412674:	stp	x29, x30, [sp, #32]
  412678:	add	x29, sp, #0x20
  41267c:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  412680:	add	x8, x8, #0x35a
  412684:	add	x2, x8, #0x3
  412688:	stur	w0, [x29, #-4]
  41268c:	str	x2, [sp, #16]
  412690:	mov	w8, #0x0                   	// #0
  412694:	sturb	w8, [x29, #-5]
  412698:	ldur	w8, [x29, #-4]
  41269c:	cmp	w8, #0x2
  4126a0:	str	w8, [sp, #12]
  4126a4:	b.eq	4126c4 <FAMILY_ADDRESS_SIZE+0x54>  // b.none
  4126a8:	b	4126ac <FAMILY_ADDRESS_SIZE+0x3c>
  4126ac:	ldr	w8, [sp, #12]
  4126b0:	cmp	w8, #0xa
  4126b4:	cset	w9, eq  // eq = none
  4126b8:	eor	w9, w9, #0x1
  4126bc:	tbnz	w9, #0, 4126d0 <FAMILY_ADDRESS_SIZE+0x60>
  4126c0:	b	4126c4 <FAMILY_ADDRESS_SIZE+0x54>
  4126c4:	mov	w8, #0x1                   	// #1
  4126c8:	sturb	w8, [x29, #-5]
  4126cc:	b	4126d0 <FAMILY_ADDRESS_SIZE+0x60>
  4126d0:	ldurb	w8, [x29, #-5]
  4126d4:	mov	w9, #0x1                   	// #1
  4126d8:	and	w8, w8, w9
  4126dc:	sturb	w8, [x29, #-6]
  4126e0:	ldurb	w8, [x29, #-6]
  4126e4:	eor	w8, w8, #0x1
  4126e8:	eor	w8, w8, w9
  4126ec:	eor	w8, w8, w9
  4126f0:	and	w8, w8, #0x1
  4126f4:	mov	w0, w8
  4126f8:	sxtw	x10, w0
  4126fc:	cbz	x10, 412724 <FAMILY_ADDRESS_SIZE+0xb4>
  412700:	mov	w8, wzr
  412704:	mov	w0, w8
  412708:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  41270c:	add	x1, x1, #0x338
  412710:	ldr	x2, [sp, #16]
  412714:	mov	w3, #0x43                  	// #67
  412718:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  41271c:	add	x4, x4, #0x376
  412720:	bl	404bd0 <log_assert_failed_realm@plt>
  412724:	ldur	w8, [x29, #-4]
  412728:	mov	w9, #0x4                   	// #4
  41272c:	mov	w10, #0x10                  	// #16
  412730:	cmp	w8, #0xa
  412734:	csel	w8, w10, w9, eq  // eq = none
  412738:	mov	w0, w8
  41273c:	sxtw	x0, w0
  412740:	ldp	x29, x30, [sp, #32]
  412744:	add	sp, sp, #0x30
  412748:	ret

000000000041274c <close_pairp>:
  41274c:	sub	sp, sp, #0x20
  412750:	stp	x29, x30, [sp, #16]
  412754:	add	x29, sp, #0x10
  412758:	str	x0, [sp, #8]
  41275c:	ldr	x0, [sp, #8]
  412760:	bl	405490 <safe_close_pair@plt>
  412764:	ldp	x29, x30, [sp, #16]
  412768:	add	sp, sp, #0x20
  41276c:	ret

0000000000412770 <closep>:
  412770:	sub	sp, sp, #0x20
  412774:	stp	x29, x30, [sp, #16]
  412778:	add	x29, sp, #0x10
  41277c:	str	x0, [sp, #8]
  412780:	ldr	x8, [sp, #8]
  412784:	ldr	w0, [x8]
  412788:	bl	4052c0 <safe_close@plt>
  41278c:	ldp	x29, x30, [sp, #16]
  412790:	add	sp, sp, #0x20
  412794:	ret

0000000000412798 <size_multiply_overflow>:
  412798:	sub	sp, sp, #0x20
  41279c:	str	x0, [sp, #24]
  4127a0:	str	x1, [sp, #16]
  4127a4:	ldr	x8, [sp, #16]
  4127a8:	mov	w9, #0x0                   	// #0
  4127ac:	str	w9, [sp, #12]
  4127b0:	cbz	x8, 4127d0 <size_multiply_overflow+0x38>
  4127b4:	ldr	x8, [sp, #24]
  4127b8:	ldr	x9, [sp, #16]
  4127bc:	mov	x10, #0xffffffffffffffff    	// #-1
  4127c0:	udiv	x9, x10, x9
  4127c4:	cmp	x8, x9
  4127c8:	cset	w11, hi  // hi = pmore
  4127cc:	str	w11, [sp, #12]
  4127d0:	ldr	w8, [sp, #12]
  4127d4:	mov	w9, #0x1                   	// #1
  4127d8:	eor	w8, w8, #0x1
  4127dc:	eor	w8, w8, w9
  4127e0:	and	w8, w8, #0x1
  4127e4:	mov	w0, w8
  4127e8:	sxtw	x10, w0
  4127ec:	cmp	x10, #0x0
  4127f0:	cset	w8, ne  // ne = any
  4127f4:	and	w0, w8, #0x1
  4127f8:	add	sp, sp, #0x20
  4127fc:	ret

0000000000412800 <bus_machine_method_get_os_release>:
  412800:	sub	sp, sp, #0xa0
  412804:	stp	x29, x30, [sp, #144]
  412808:	add	x29, sp, #0x90
  41280c:	mov	x8, xzr
  412810:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  412814:	add	x9, x9, #0x21c
  412818:	add	x9, x9, #0x3
  41281c:	stur	x0, [x29, #-16]
  412820:	stur	x1, [x29, #-24]
  412824:	stur	x2, [x29, #-32]
  412828:	stur	x8, [x29, #-40]
  41282c:	ldur	x8, [x29, #-24]
  412830:	stur	x8, [x29, #-48]
  412834:	str	x9, [sp, #40]
  412838:	ldur	x8, [x29, #-16]
  41283c:	cmp	x8, #0x0
  412840:	cset	w9, ne  // ne = any
  412844:	mov	w10, #0x1                   	// #1
  412848:	eor	w9, w9, #0x1
  41284c:	eor	w9, w9, w10
  412850:	eor	w9, w9, w10
  412854:	and	w9, w9, #0x1
  412858:	mov	w0, w9
  41285c:	sxtw	x8, w0
  412860:	cbz	x8, 412888 <bus_machine_method_get_os_release+0x88>
  412864:	mov	w8, wzr
  412868:	mov	w0, w8
  41286c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  412870:	add	x1, x1, #0xebd
  412874:	ldr	x2, [sp, #40]
  412878:	mov	w3, #0x15f                 	// #351
  41287c:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  412880:	add	x4, x4, #0x4cb
  412884:	bl	404bd0 <log_assert_failed_realm@plt>
  412888:	ldur	x8, [x29, #-48]
  41288c:	cmp	x8, #0x0
  412890:	cset	w9, ne  // ne = any
  412894:	mov	w10, #0x1                   	// #1
  412898:	eor	w9, w9, #0x1
  41289c:	eor	w9, w9, w10
  4128a0:	eor	w9, w9, w10
  4128a4:	and	w9, w9, #0x1
  4128a8:	mov	w0, w9
  4128ac:	sxtw	x8, w0
  4128b0:	cbz	x8, 4128d8 <bus_machine_method_get_os_release+0xd8>
  4128b4:	mov	w8, wzr
  4128b8:	mov	w0, w8
  4128bc:	adrp	x1, 41a000 <operation_new+0x40>
  4128c0:	add	x1, x1, #0xe18
  4128c4:	ldr	x2, [sp, #40]
  4128c8:	mov	w3, #0x160                 	// #352
  4128cc:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  4128d0:	add	x4, x4, #0x4cb
  4128d4:	bl	404bd0 <log_assert_failed_realm@plt>
  4128d8:	ldur	x8, [x29, #-48]
  4128dc:	ldr	w9, [x8, #32]
  4128e0:	str	w9, [sp, #36]
  4128e4:	cbz	w9, 412940 <bus_machine_method_get_os_release+0x140>
  4128e8:	b	4128ec <bus_machine_method_get_os_release+0xec>
  4128ec:	ldr	w8, [sp, #36]
  4128f0:	cmp	w8, #0x2
  4128f4:	cset	w9, eq  // eq = none
  4128f8:	eor	w9, w9, #0x1
  4128fc:	tbnz	w9, #0, 412cb0 <bus_machine_method_get_os_release+0x4b0>
  412900:	b	412904 <bus_machine_method_get_os_release+0x104>
  412904:	mov	x8, xzr
  412908:	mov	x0, x8
  41290c:	sub	x1, x29, #0x28
  412910:	bl	4055d0 <load_os_release_pairs@plt>
  412914:	stur	w0, [x29, #-52]
  412918:	ldur	w9, [x29, #-52]
  41291c:	cmp	w9, #0x0
  412920:	cset	w9, ge  // ge = tcont
  412924:	tbnz	w9, #0, 41293c <bus_machine_method_get_os_release+0x13c>
  412928:	ldur	w8, [x29, #-52]
  41292c:	stur	w8, [x29, #-4]
  412930:	mov	w8, #0x1                   	// #1
  412934:	stur	w8, [x29, #-56]
  412938:	b	412cf0 <bus_machine_method_get_os_release+0x4f0>
  41293c:	b	412cd8 <bus_machine_method_get_os_release+0x4d8>
  412940:	sub	x2, x29, #0x3c
  412944:	mov	w8, #0xffffffff            	// #-1
  412948:	stur	w8, [x29, #-60]
  41294c:	sub	x5, x29, #0x40
  412950:	stur	w8, [x29, #-64]
  412954:	sub	x1, x29, #0x44
  412958:	stur	w8, [x29, #-68]
  41295c:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  412960:	add	x9, x9, #0xb48
  412964:	ldr	x9, [x9]
  412968:	str	x9, [sp, #64]
  41296c:	mov	x9, xzr
  412970:	str	x9, [sp, #56]
  412974:	ldur	x10, [x29, #-48]
  412978:	ldr	w0, [x10, #80]
  41297c:	mov	x3, x9
  412980:	mov	x4, x9
  412984:	bl	405570 <namespace_open@plt>
  412988:	stur	w0, [x29, #-52]
  41298c:	ldur	w8, [x29, #-52]
  412990:	cmp	w8, #0x0
  412994:	cset	w8, ge  // ge = tcont
  412998:	tbnz	w8, #0, 4129b0 <bus_machine_method_get_os_release+0x1b0>
  41299c:	ldur	w8, [x29, #-52]
  4129a0:	stur	w8, [x29, #-4]
  4129a4:	mov	w8, #0x1                   	// #1
  4129a8:	stur	w8, [x29, #-56]
  4129ac:	b	412c78 <bus_machine_method_get_os_release+0x478>
  4129b0:	mov	w0, #0x1                   	// #1
  4129b4:	mov	w1, #0x5                   	// #5
  4129b8:	mov	w8, wzr
  4129bc:	mov	w2, w8
  4129c0:	add	x3, sp, #0x40
  4129c4:	bl	405580 <socketpair@plt>
  4129c8:	cmp	w0, #0x0
  4129cc:	cset	w8, ge  // ge = tcont
  4129d0:	tbnz	w8, #0, 4129f4 <bus_machine_method_get_os_release+0x1f4>
  4129d4:	bl	404d50 <__errno_location@plt>
  4129d8:	ldr	w8, [x0]
  4129dc:	mov	w9, wzr
  4129e0:	subs	w8, w9, w8
  4129e4:	stur	w8, [x29, #-4]
  4129e8:	mov	w8, #0x1                   	// #1
  4129ec:	stur	w8, [x29, #-56]
  4129f0:	b	412c78 <bus_machine_method_get_os_release+0x478>
  4129f4:	ldur	w5, [x29, #-68]
  4129f8:	ldur	w6, [x29, #-60]
  4129fc:	ldur	w8, [x29, #-64]
  412a00:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  412a04:	add	x0, x0, #0x51b
  412a08:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412a0c:	add	x1, x1, #0x528
  412a10:	mov	x9, xzr
  412a14:	mov	x2, x9
  412a18:	mov	x3, x9
  412a1c:	mov	w4, #0x5                   	// #5
  412a20:	mov	w10, #0xffffffff            	// #-1
  412a24:	mov	w7, w10
  412a28:	mov	x9, sp
  412a2c:	str	w10, [x9]
  412a30:	mov	x9, sp
  412a34:	str	w8, [x9, #8]
  412a38:	mov	x9, sp
  412a3c:	add	x11, sp, #0x34
  412a40:	str	x11, [x9, #16]
  412a44:	bl	405590 <namespace_fork@plt>
  412a48:	stur	w0, [x29, #-52]
  412a4c:	ldur	w8, [x29, #-52]
  412a50:	cmp	w8, #0x0
  412a54:	cset	w8, ge  // ge = tcont
  412a58:	tbnz	w8, #0, 412a80 <bus_machine_method_get_os_release+0x280>
  412a5c:	ldur	x0, [x29, #-32]
  412a60:	ldur	w1, [x29, #-52]
  412a64:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  412a68:	add	x2, x2, #0xc94
  412a6c:	bl	405290 <sd_bus_error_set_errnof@plt>
  412a70:	stur	w0, [x29, #-4]
  412a74:	mov	w8, #0x1                   	// #1
  412a78:	stur	w8, [x29, #-56]
  412a7c:	b	412c78 <bus_machine_method_get_os_release+0x478>
  412a80:	ldur	w8, [x29, #-52]
  412a84:	cbnz	w8, 412b30 <bus_machine_method_get_os_release+0x330>
  412a88:	add	x2, sp, #0x30
  412a8c:	mov	w8, #0xffffffff            	// #-1
  412a90:	str	w8, [sp, #48]
  412a94:	ldr	w0, [sp, #64]
  412a98:	str	x2, [sp, #24]
  412a9c:	bl	4052c0 <safe_close@plt>
  412aa0:	str	w0, [sp, #64]
  412aa4:	mov	x9, xzr
  412aa8:	mov	x1, x9
  412aac:	mov	x0, x1
  412ab0:	mov	x1, x9
  412ab4:	ldr	x2, [sp, #24]
  412ab8:	bl	4055e0 <open_os_release@plt>
  412abc:	stur	w0, [x29, #-52]
  412ac0:	ldur	w8, [x29, #-52]
  412ac4:	mov	w10, #0xfffffffe            	// #-2
  412ac8:	cmp	w8, w10
  412acc:	b.ne	412ad8 <bus_machine_method_get_os_release+0x2d8>  // b.any
  412ad0:	mov	w0, #0x2                   	// #2
  412ad4:	bl	405310 <_exit@plt>
  412ad8:	ldur	w8, [x29, #-52]
  412adc:	cmp	w8, #0x0
  412ae0:	cset	w8, ge  // ge = tcont
  412ae4:	tbnz	w8, #0, 412af0 <bus_machine_method_get_os_release+0x2f0>
  412ae8:	mov	w0, #0x1                   	// #1
  412aec:	bl	405310 <_exit@plt>
  412af0:	ldr	w0, [sp, #48]
  412af4:	ldr	w1, [sp, #68]
  412af8:	mov	x2, #0xffffffffffffffff    	// #-1
  412afc:	mov	w8, wzr
  412b00:	mov	w3, w8
  412b04:	bl	412d64 <copy_bytes>
  412b08:	stur	w0, [x29, #-52]
  412b0c:	ldur	w8, [x29, #-52]
  412b10:	cmp	w8, #0x0
  412b14:	cset	w8, ge  // ge = tcont
  412b18:	tbnz	w8, #0, 412b24 <bus_machine_method_get_os_release+0x324>
  412b1c:	mov	w0, #0x1                   	// #1
  412b20:	bl	405310 <_exit@plt>
  412b24:	mov	w8, wzr
  412b28:	mov	w0, w8
  412b2c:	bl	405310 <_exit@plt>
  412b30:	ldr	w0, [sp, #68]
  412b34:	bl	4052c0 <safe_close@plt>
  412b38:	str	w0, [sp, #68]
  412b3c:	ldr	w0, [sp, #64]
  412b40:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  412b44:	add	x1, x1, #0xda9
  412b48:	bl	4054d0 <fdopen@plt>
  412b4c:	str	x0, [sp, #56]
  412b50:	ldr	x8, [sp, #56]
  412b54:	cbnz	x8, 412b78 <bus_machine_method_get_os_release+0x378>
  412b58:	bl	404d50 <__errno_location@plt>
  412b5c:	ldr	w8, [x0]
  412b60:	mov	w9, wzr
  412b64:	subs	w8, w9, w8
  412b68:	stur	w8, [x29, #-4]
  412b6c:	mov	w8, #0x1                   	// #1
  412b70:	stur	w8, [x29, #-56]
  412b74:	b	412c78 <bus_machine_method_get_os_release+0x478>
  412b78:	mov	w8, #0xffffffff            	// #-1
  412b7c:	str	w8, [sp, #64]
  412b80:	ldr	x0, [sp, #56]
  412b84:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412b88:	add	x1, x1, #0x533
  412b8c:	sub	x2, x29, #0x28
  412b90:	bl	4055f0 <load_env_file_pairs@plt>
  412b94:	stur	w0, [x29, #-52]
  412b98:	ldur	w8, [x29, #-52]
  412b9c:	cmp	w8, #0x0
  412ba0:	cset	w8, ge  // ge = tcont
  412ba4:	tbnz	w8, #0, 412bbc <bus_machine_method_get_os_release+0x3bc>
  412ba8:	ldur	w8, [x29, #-52]
  412bac:	stur	w8, [x29, #-4]
  412bb0:	mov	w8, #0x1                   	// #1
  412bb4:	stur	w8, [x29, #-56]
  412bb8:	b	412c78 <bus_machine_method_get_os_release+0x478>
  412bbc:	ldr	w1, [sp, #52]
  412bc0:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  412bc4:	add	x0, x0, #0x51b
  412bc8:	mov	w8, wzr
  412bcc:	mov	w2, w8
  412bd0:	bl	4055c0 <wait_for_terminate_and_check@plt>
  412bd4:	stur	w0, [x29, #-52]
  412bd8:	ldur	w8, [x29, #-52]
  412bdc:	cmp	w8, #0x0
  412be0:	cset	w8, ge  // ge = tcont
  412be4:	tbnz	w8, #0, 412c0c <bus_machine_method_get_os_release+0x40c>
  412be8:	ldur	x0, [x29, #-32]
  412bec:	ldur	w1, [x29, #-52]
  412bf0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412bf4:	add	x2, x2, #0x431
  412bf8:	bl	405290 <sd_bus_error_set_errnof@plt>
  412bfc:	stur	w0, [x29, #-4]
  412c00:	mov	w8, #0x1                   	// #1
  412c04:	stur	w8, [x29, #-56]
  412c08:	b	412c78 <bus_machine_method_get_os_release+0x478>
  412c0c:	ldur	w8, [x29, #-52]
  412c10:	cmp	w8, #0x2
  412c14:	b.ne	412c40 <bus_machine_method_get_os_release+0x440>  // b.any
  412c18:	ldur	x0, [x29, #-32]
  412c1c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412c20:	add	x1, x1, #0x44e
  412c24:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412c28:	add	x2, x2, #0x543
  412c2c:	bl	4051b0 <sd_bus_error_setf@plt>
  412c30:	stur	w0, [x29, #-4]
  412c34:	mov	w8, #0x1                   	// #1
  412c38:	stur	w8, [x29, #-56]
  412c3c:	b	412c78 <bus_machine_method_get_os_release+0x478>
  412c40:	ldur	w8, [x29, #-52]
  412c44:	cbz	w8, 412c70 <bus_machine_method_get_os_release+0x470>
  412c48:	ldur	x0, [x29, #-32]
  412c4c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  412c50:	add	x1, x1, #0x44e
  412c54:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412c58:	add	x2, x2, #0x470
  412c5c:	bl	4051b0 <sd_bus_error_setf@plt>
  412c60:	stur	w0, [x29, #-4]
  412c64:	mov	w8, #0x1                   	// #1
  412c68:	stur	w8, [x29, #-56]
  412c6c:	b	412c78 <bus_machine_method_get_os_release+0x478>
  412c70:	mov	w8, #0x6                   	// #6
  412c74:	stur	w8, [x29, #-56]
  412c78:	add	x0, sp, #0x38
  412c7c:	bl	412d3c <fclosep>
  412c80:	add	x0, sp, #0x40
  412c84:	bl	41274c <close_pairp>
  412c88:	sub	x0, x29, #0x44
  412c8c:	bl	412770 <closep>
  412c90:	sub	x0, x29, #0x40
  412c94:	bl	412770 <closep>
  412c98:	sub	x0, x29, #0x3c
  412c9c:	bl	412770 <closep>
  412ca0:	ldur	w8, [x29, #-56]
  412ca4:	cmp	w8, #0x6
  412ca8:	b.eq	412cd8 <bus_machine_method_get_os_release+0x4d8>  // b.none
  412cac:	b	412cf0 <bus_machine_method_get_os_release+0x4f0>
  412cb0:	ldur	x0, [x29, #-32]
  412cb4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  412cb8:	add	x1, x1, #0xb63
  412cbc:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  412cc0:	add	x2, x2, #0x573
  412cc4:	bl	4051b0 <sd_bus_error_setf@plt>
  412cc8:	stur	w0, [x29, #-4]
  412ccc:	mov	w8, #0x1                   	// #1
  412cd0:	stur	w8, [x29, #-56]
  412cd4:	b	412cf0 <bus_machine_method_get_os_release+0x4f0>
  412cd8:	ldur	x0, [x29, #-16]
  412cdc:	ldur	x1, [x29, #-40]
  412ce0:	bl	405600 <bus_reply_pair_array@plt>
  412ce4:	stur	w0, [x29, #-4]
  412ce8:	mov	w8, #0x1                   	// #1
  412cec:	stur	w8, [x29, #-56]
  412cf0:	sub	x0, x29, #0x28
  412cf4:	bl	412d08 <strv_freep>
  412cf8:	ldur	w0, [x29, #-4]
  412cfc:	ldp	x29, x30, [sp, #144]
  412d00:	add	sp, sp, #0xa0
  412d04:	ret

0000000000412d08 <strv_freep>:
  412d08:	sub	sp, sp, #0x20
  412d0c:	stp	x29, x30, [sp, #16]
  412d10:	add	x29, sp, #0x10
  412d14:	str	x0, [sp, #8]
  412d18:	ldr	x8, [sp, #8]
  412d1c:	ldr	x8, [x8]
  412d20:	cbz	x8, 412d30 <strv_freep+0x28>
  412d24:	ldr	x8, [sp, #8]
  412d28:	ldr	x0, [x8]
  412d2c:	bl	405610 <strv_free@plt>
  412d30:	ldp	x29, x30, [sp, #16]
  412d34:	add	sp, sp, #0x20
  412d38:	ret

0000000000412d3c <fclosep>:
  412d3c:	sub	sp, sp, #0x20
  412d40:	stp	x29, x30, [sp, #16]
  412d44:	add	x29, sp, #0x10
  412d48:	str	x0, [sp, #8]
  412d4c:	ldr	x8, [sp, #8]
  412d50:	ldr	x0, [x8]
  412d54:	bl	404f90 <safe_fclose@plt>
  412d58:	ldp	x29, x30, [sp, #16]
  412d5c:	add	sp, sp, #0x20
  412d60:	ret

0000000000412d64 <copy_bytes>:
  412d64:	sub	sp, sp, #0x30
  412d68:	stp	x29, x30, [sp, #32]
  412d6c:	add	x29, sp, #0x20
  412d70:	mov	x8, xzr
  412d74:	mov	x4, x8
  412d78:	mov	x5, x8
  412d7c:	mov	x6, x8
  412d80:	stur	w0, [x29, #-4]
  412d84:	stur	w1, [x29, #-8]
  412d88:	str	x2, [sp, #16]
  412d8c:	str	w3, [sp, #12]
  412d90:	ldur	w0, [x29, #-4]
  412d94:	ldur	w1, [x29, #-8]
  412d98:	ldr	x2, [sp, #16]
  412d9c:	ldr	w3, [sp, #12]
  412da0:	mov	x7, x8
  412da4:	bl	405620 <copy_bytes_full@plt>
  412da8:	ldp	x29, x30, [sp, #32]
  412dac:	add	sp, sp, #0x30
  412db0:	ret

0000000000412db4 <bus_machine_method_open_pty>:
  412db4:	sub	sp, sp, #0x60
  412db8:	stp	x29, x30, [sp, #80]
  412dbc:	add	x29, sp, #0x50
  412dc0:	mov	x8, xzr
  412dc4:	mov	w9, #0xffffffff            	// #-1
  412dc8:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  412dcc:	add	x10, x10, #0x21c
  412dd0:	add	x10, x10, #0x3
  412dd4:	stur	x0, [x29, #-16]
  412dd8:	stur	x1, [x29, #-24]
  412ddc:	stur	x2, [x29, #-32]
  412de0:	str	x8, [sp, #40]
  412de4:	str	x8, [sp, #32]
  412de8:	str	w9, [sp, #28]
  412dec:	ldur	x8, [x29, #-24]
  412df0:	str	x8, [sp, #16]
  412df4:	str	x10, [sp]
  412df8:	ldur	x8, [x29, #-16]
  412dfc:	cmp	x8, #0x0
  412e00:	cset	w9, ne  // ne = any
  412e04:	mov	w10, #0x1                   	// #1
  412e08:	eor	w9, w9, #0x1
  412e0c:	eor	w9, w9, w10
  412e10:	eor	w9, w9, w10
  412e14:	and	w9, w9, #0x1
  412e18:	mov	w0, w9
  412e1c:	sxtw	x8, w0
  412e20:	cbz	x8, 412e48 <bus_machine_method_open_pty+0x94>
  412e24:	mov	w8, wzr
  412e28:	mov	w0, w8
  412e2c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  412e30:	add	x1, x1, #0xebd
  412e34:	ldr	x2, [sp]
  412e38:	mov	w3, #0x1b4                 	// #436
  412e3c:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  412e40:	add	x4, x4, #0x5b7
  412e44:	bl	404bd0 <log_assert_failed_realm@plt>
  412e48:	ldr	x8, [sp, #16]
  412e4c:	cmp	x8, #0x0
  412e50:	cset	w9, ne  // ne = any
  412e54:	mov	w10, #0x1                   	// #1
  412e58:	eor	w9, w9, #0x1
  412e5c:	eor	w9, w9, w10
  412e60:	eor	w9, w9, w10
  412e64:	and	w9, w9, #0x1
  412e68:	mov	w0, w9
  412e6c:	sxtw	x8, w0
  412e70:	cbz	x8, 412e98 <bus_machine_method_open_pty+0xe4>
  412e74:	mov	w8, wzr
  412e78:	mov	w0, w8
  412e7c:	adrp	x1, 41a000 <operation_new+0x40>
  412e80:	add	x1, x1, #0xe18
  412e84:	ldr	x2, [sp]
  412e88:	mov	w3, #0x1b5                 	// #437
  412e8c:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  412e90:	add	x4, x4, #0x5b7
  412e94:	bl	404bd0 <log_assert_failed_realm@plt>
  412e98:	ldur	x0, [x29, #-16]
  412e9c:	ldr	x8, [sp, #16]
  412ea0:	ldr	w9, [x8, #32]
  412ea4:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  412ea8:	add	x8, x8, #0x628
  412eac:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  412eb0:	add	x10, x10, #0x601
  412eb4:	cmp	w9, #0x2
  412eb8:	csel	x2, x10, x8, eq  // eq = none
  412ebc:	ldr	x8, [sp, #16]
  412ec0:	ldr	x8, [x8]
  412ec4:	add	x6, x8, #0x28
  412ec8:	ldur	x7, [x29, #-32]
  412ecc:	mov	w1, #0x15                  	// #21
  412ed0:	mov	x8, xzr
  412ed4:	mov	x3, x8
  412ed8:	mov	w9, wzr
  412edc:	and	w4, w9, #0x1
  412ee0:	mov	w5, #0xffffffff            	// #-1
  412ee4:	bl	405250 <bus_verify_polkit_async@plt>
  412ee8:	str	w0, [sp, #12]
  412eec:	ldr	w9, [sp, #12]
  412ef0:	cmp	w9, #0x0
  412ef4:	cset	w9, ge  // ge = tcont
  412ef8:	tbnz	w9, #0, 412f10 <bus_machine_method_open_pty+0x15c>
  412efc:	ldr	w8, [sp, #12]
  412f00:	stur	w8, [x29, #-4]
  412f04:	mov	w8, #0x1                   	// #1
  412f08:	str	w8, [sp, #8]
  412f0c:	b	412ff8 <bus_machine_method_open_pty+0x244>
  412f10:	ldr	w8, [sp, #12]
  412f14:	cbnz	w8, 412f28 <bus_machine_method_open_pty+0x174>
  412f18:	mov	w8, #0x1                   	// #1
  412f1c:	stur	w8, [x29, #-4]
  412f20:	str	w8, [sp, #8]
  412f24:	b	412ff8 <bus_machine_method_open_pty+0x244>
  412f28:	ldr	x0, [sp, #16]
  412f2c:	mov	w1, #0x102                 	// #258
  412f30:	movk	w1, #0x8, lsl #16
  412f34:	add	x2, sp, #0x20
  412f38:	bl	40a368 <machine_openpt>
  412f3c:	str	w0, [sp, #28]
  412f40:	ldr	w8, [sp, #28]
  412f44:	cmp	w8, #0x0
  412f48:	cset	w8, ge  // ge = tcont
  412f4c:	tbnz	w8, #0, 412f64 <bus_machine_method_open_pty+0x1b0>
  412f50:	ldr	w8, [sp, #28]
  412f54:	stur	w8, [x29, #-4]
  412f58:	mov	w8, #0x1                   	// #1
  412f5c:	str	w8, [sp, #8]
  412f60:	b	412ff8 <bus_machine_method_open_pty+0x244>
  412f64:	ldur	x0, [x29, #-16]
  412f68:	add	x1, sp, #0x28
  412f6c:	bl	405200 <sd_bus_message_new_method_return@plt>
  412f70:	str	w0, [sp, #12]
  412f74:	ldr	w8, [sp, #12]
  412f78:	cmp	w8, #0x0
  412f7c:	cset	w8, ge  // ge = tcont
  412f80:	tbnz	w8, #0, 412f98 <bus_machine_method_open_pty+0x1e4>
  412f84:	ldr	w8, [sp, #12]
  412f88:	stur	w8, [x29, #-4]
  412f8c:	mov	w8, #0x1                   	// #1
  412f90:	str	w8, [sp, #8]
  412f94:	b	412ff8 <bus_machine_method_open_pty+0x244>
  412f98:	ldr	x0, [sp, #40]
  412f9c:	ldr	w2, [sp, #28]
  412fa0:	ldr	x3, [sp, #32]
  412fa4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  412fa8:	add	x1, x1, #0xd05
  412fac:	bl	405120 <sd_bus_message_append@plt>
  412fb0:	str	w0, [sp, #12]
  412fb4:	ldr	w8, [sp, #12]
  412fb8:	cmp	w8, #0x0
  412fbc:	cset	w8, ge  // ge = tcont
  412fc0:	tbnz	w8, #0, 412fd8 <bus_machine_method_open_pty+0x224>
  412fc4:	ldr	w8, [sp, #12]
  412fc8:	stur	w8, [x29, #-4]
  412fcc:	mov	w8, #0x1                   	// #1
  412fd0:	str	w8, [sp, #8]
  412fd4:	b	412ff8 <bus_machine_method_open_pty+0x244>
  412fd8:	ldr	x1, [sp, #40]
  412fdc:	mov	x8, xzr
  412fe0:	mov	x0, x8
  412fe4:	mov	x2, x8
  412fe8:	bl	405220 <sd_bus_send@plt>
  412fec:	stur	w0, [x29, #-4]
  412ff0:	mov	w9, #0x1                   	// #1
  412ff4:	str	w9, [sp, #8]
  412ff8:	add	x0, sp, #0x1c
  412ffc:	bl	412770 <closep>
  413000:	add	x0, sp, #0x20
  413004:	bl	412648 <freep>
  413008:	add	x0, sp, #0x28
  41300c:	bl	412614 <sd_bus_message_unrefp>
  413010:	ldur	w0, [x29, #-4]
  413014:	ldp	x29, x30, [sp, #80]
  413018:	add	sp, sp, #0x60
  41301c:	ret

0000000000413020 <bus_machine_method_open_login>:
  413020:	stp	x29, x30, [sp, #-16]!
  413024:	mov	x29, sp
  413028:	sub	sp, sp, #0xe0
  41302c:	mov	x8, xzr
  413030:	mov	w9, #0xffffffff            	// #-1
  413034:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  413038:	add	x10, x10, #0x21c
  41303c:	add	x10, x10, #0x3
  413040:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  413044:	add	x11, x11, #0x64a
  413048:	stur	x0, [x29, #-16]
  41304c:	stur	x1, [x29, #-24]
  413050:	stur	x2, [x29, #-32]
  413054:	stur	x8, [x29, #-40]
  413058:	stur	x8, [x29, #-48]
  41305c:	stur	x8, [x29, #-56]
  413060:	stur	w9, [x29, #-60]
  413064:	stur	x8, [x29, #-72]
  413068:	ldur	x8, [x29, #-24]
  41306c:	stur	x8, [x29, #-80]
  413070:	stur	x10, [x29, #-192]
  413074:	stur	x11, [x29, #-200]
  413078:	ldur	x8, [x29, #-16]
  41307c:	cmp	x8, #0x0
  413080:	cset	w9, ne  // ne = any
  413084:	mov	w10, #0x1                   	// #1
  413088:	eor	w9, w9, #0x1
  41308c:	eor	w9, w9, w10
  413090:	eor	w9, w9, w10
  413094:	and	w9, w9, #0x1
  413098:	mov	w0, w9
  41309c:	sxtw	x8, w0
  4130a0:	cbz	x8, 4130c4 <bus_machine_method_open_login+0xa4>
  4130a4:	mov	w8, wzr
  4130a8:	mov	w0, w8
  4130ac:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4130b0:	add	x1, x1, #0xebd
  4130b4:	ldur	x2, [x29, #-192]
  4130b8:	mov	w3, #0x20b                 	// #523
  4130bc:	ldur	x4, [x29, #-200]
  4130c0:	bl	404bd0 <log_assert_failed_realm@plt>
  4130c4:	ldur	x8, [x29, #-80]
  4130c8:	cmp	x8, #0x0
  4130cc:	cset	w9, ne  // ne = any
  4130d0:	mov	w10, #0x1                   	// #1
  4130d4:	eor	w9, w9, #0x1
  4130d8:	eor	w9, w9, w10
  4130dc:	eor	w9, w9, w10
  4130e0:	and	w9, w9, #0x1
  4130e4:	mov	w0, w9
  4130e8:	sxtw	x8, w0
  4130ec:	cbz	x8, 413110 <bus_machine_method_open_login+0xf0>
  4130f0:	mov	w8, wzr
  4130f4:	mov	w0, w8
  4130f8:	adrp	x1, 41a000 <operation_new+0x40>
  4130fc:	add	x1, x1, #0xe18
  413100:	ldur	x2, [x29, #-192]
  413104:	mov	w3, #0x20c                 	// #524
  413108:	ldur	x4, [x29, #-200]
  41310c:	bl	404bd0 <log_assert_failed_realm@plt>
  413110:	ldur	x0, [x29, #-16]
  413114:	ldur	x8, [x29, #-80]
  413118:	ldr	w9, [x8, #32]
  41311c:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  413120:	add	x8, x8, #0x6ba
  413124:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  413128:	add	x10, x10, #0x696
  41312c:	cmp	w9, #0x2
  413130:	csel	x2, x10, x8, eq  // eq = none
  413134:	ldur	x8, [x29, #-80]
  413138:	ldr	x8, [x8]
  41313c:	add	x6, x8, #0x28
  413140:	ldur	x7, [x29, #-32]
  413144:	mov	w1, #0x15                  	// #21
  413148:	mov	x8, xzr
  41314c:	mov	x3, x8
  413150:	mov	w9, wzr
  413154:	and	w4, w9, #0x1
  413158:	mov	w5, #0xffffffff            	// #-1
  41315c:	bl	405250 <bus_verify_polkit_async@plt>
  413160:	stur	w0, [x29, #-100]
  413164:	ldur	w9, [x29, #-100]
  413168:	cmp	w9, #0x0
  41316c:	cset	w9, ge  // ge = tcont
  413170:	tbnz	w9, #0, 413188 <bus_machine_method_open_login+0x168>
  413174:	ldur	w8, [x29, #-100]
  413178:	stur	w8, [x29, #-4]
  41317c:	mov	w8, #0x1                   	// #1
  413180:	stur	w8, [x29, #-104]
  413184:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  413188:	ldur	w8, [x29, #-100]
  41318c:	cbnz	w8, 4131a0 <bus_machine_method_open_login+0x180>
  413190:	mov	w8, #0x1                   	// #1
  413194:	stur	w8, [x29, #-4]
  413198:	stur	w8, [x29, #-104]
  41319c:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  4131a0:	ldur	x0, [x29, #-80]
  4131a4:	mov	w1, #0x102                 	// #258
  4131a8:	movk	w1, #0x8, lsl #16
  4131ac:	sub	x2, x29, #0x30
  4131b0:	bl	40a368 <machine_openpt>
  4131b4:	stur	w0, [x29, #-60]
  4131b8:	ldur	w8, [x29, #-60]
  4131bc:	cmp	w8, #0x0
  4131c0:	cset	w8, ge  // ge = tcont
  4131c4:	tbnz	w8, #0, 4131dc <bus_machine_method_open_login+0x1bc>
  4131c8:	ldur	w8, [x29, #-60]
  4131cc:	stur	w8, [x29, #-4]
  4131d0:	mov	w8, #0x1                   	// #1
  4131d4:	stur	w8, [x29, #-104]
  4131d8:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  4131dc:	ldur	x0, [x29, #-48]
  4131e0:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  4131e4:	add	x1, x1, #0x6d9
  4131e8:	bl	4054b0 <path_startswith@plt>
  4131ec:	stur	x0, [x29, #-88]
  4131f0:	ldur	x8, [x29, #-88]
  4131f4:	cmp	x8, #0x0
  4131f8:	cset	w9, ne  // ne = any
  4131fc:	mov	w10, #0x1                   	// #1
  413200:	eor	w9, w9, #0x1
  413204:	eor	w9, w9, w10
  413208:	eor	w9, w9, w10
  41320c:	and	w9, w9, #0x1
  413210:	mov	w0, w9
  413214:	sxtw	x8, w0
  413218:	cbz	x8, 41323c <bus_machine_method_open_login+0x21c>
  41321c:	mov	w8, wzr
  413220:	mov	w0, w8
  413224:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  413228:	add	x1, x1, #0x6e3
  41322c:	ldur	x2, [x29, #-192]
  413230:	mov	w3, #0x221                 	// #545
  413234:	ldur	x4, [x29, #-200]
  413238:	bl	404bd0 <log_assert_failed_realm@plt>
  41323c:	ldur	x0, [x29, #-80]
  413240:	ldur	x1, [x29, #-32]
  413244:	sub	x2, x29, #0x38
  413248:	bl	413648 <container_bus_new>
  41324c:	stur	w0, [x29, #-100]
  413250:	ldur	w8, [x29, #-100]
  413254:	cmp	w8, #0x0
  413258:	cset	w8, ge  // ge = tcont
  41325c:	tbnz	w8, #0, 413274 <bus_machine_method_open_login+0x254>
  413260:	ldur	w8, [x29, #-100]
  413264:	stur	w8, [x29, #-4]
  413268:	mov	w8, #0x1                   	// #1
  41326c:	stur	w8, [x29, #-104]
  413270:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  413274:	ldur	x8, [x29, #-56]
  413278:	stur	x8, [x29, #-208]
  41327c:	cbz	x8, 41328c <bus_machine_method_open_login+0x26c>
  413280:	ldur	x8, [x29, #-208]
  413284:	stur	x8, [x29, #-216]
  413288:	b	41329c <bus_machine_method_open_login+0x27c>
  41328c:	ldur	x8, [x29, #-80]
  413290:	ldr	x8, [x8]
  413294:	ldr	x8, [x8, #8]
  413298:	stur	x8, [x29, #-216]
  41329c:	ldur	x8, [x29, #-216]
  4132a0:	stur	x8, [x29, #-72]
  4132a4:	sub	x8, x29, #0x80
  4132a8:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  4132ac:	add	x9, x9, #0x6e5
  4132b0:	stur	x9, [x29, #-128]
  4132b4:	ldur	x9, [x29, #-88]
  4132b8:	str	x9, [x8, #8]
  4132bc:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  4132c0:	add	x9, x9, #0x6f6
  4132c4:	str	x9, [x8, #16]
  4132c8:	stur	xzr, [x29, #-152]
  4132cc:	stur	xzr, [x29, #-160]
  4132d0:	ldur	x8, [x29, #-160]
  4132d4:	mov	w9, #0x0                   	// #0
  4132d8:	cmp	x8, #0x3
  4132dc:	stur	w9, [x29, #-220]
  4132e0:	b.cs	413308 <bus_machine_method_open_login+0x2e8>  // b.hs, b.nlast
  4132e4:	ldur	x8, [x29, #-160]
  4132e8:	mov	x9, #0x8                   	// #8
  4132ec:	mul	x8, x9, x8
  4132f0:	sub	x9, x29, #0x80
  4132f4:	add	x8, x9, x8
  4132f8:	ldr	x8, [x8]
  4132fc:	cmp	x8, #0x0
  413300:	cset	w10, ne  // ne = any
  413304:	stur	w10, [x29, #-220]
  413308:	ldur	w8, [x29, #-220]
  41330c:	tbnz	w8, #0, 413314 <bus_machine_method_open_login+0x2f4>
  413310:	b	41334c <bus_machine_method_open_login+0x32c>
  413314:	ldur	x8, [x29, #-160]
  413318:	mov	x9, #0x8                   	// #8
  41331c:	mul	x8, x9, x8
  413320:	sub	x9, x29, #0x80
  413324:	add	x8, x9, x8
  413328:	ldr	x0, [x8]
  41332c:	bl	404e00 <strlen@plt>
  413330:	ldur	x8, [x29, #-152]
  413334:	add	x8, x8, x0
  413338:	stur	x8, [x29, #-152]
  41333c:	ldur	x8, [x29, #-160]
  413340:	add	x8, x8, #0x1
  413344:	stur	x8, [x29, #-160]
  413348:	b	4132d0 <bus_machine_method_open_login+0x2b0>
  41334c:	ldur	x8, [x29, #-152]
  413350:	add	x8, x8, #0x1
  413354:	stur	x8, [x29, #-168]
  413358:	ldur	x1, [x29, #-168]
  41335c:	mov	x0, #0x1                   	// #1
  413360:	bl	412798 <size_multiply_overflow>
  413364:	mov	w8, #0x1                   	// #1
  413368:	eor	w9, w0, #0x1
  41336c:	eor	w9, w9, w8
  413370:	eor	w9, w9, w8
  413374:	eor	w8, w9, w8
  413378:	and	w8, w8, #0x1
  41337c:	mov	w1, w8
  413380:	sxtw	x10, w1
  413384:	cbz	x10, 4133a8 <bus_machine_method_open_login+0x388>
  413388:	mov	w8, wzr
  41338c:	mov	w0, w8
  413390:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  413394:	add	x1, x1, #0x4dd
  413398:	ldur	x2, [x29, #-192]
  41339c:	mov	w3, #0x229                 	// #553
  4133a0:	ldur	x4, [x29, #-200]
  4133a4:	bl	404bd0 <log_assert_failed_realm@plt>
  4133a8:	ldur	x8, [x29, #-168]
  4133ac:	mov	x9, #0x1                   	// #1
  4133b0:	mul	x8, x9, x8
  4133b4:	cmp	x8, #0x400, lsl #12
  4133b8:	cset	w10, ls  // ls = plast
  4133bc:	mov	w11, #0x1                   	// #1
  4133c0:	eor	w10, w10, #0x1
  4133c4:	eor	w10, w10, w11
  4133c8:	eor	w10, w10, w11
  4133cc:	and	w10, w10, #0x1
  4133d0:	mov	w0, w10
  4133d4:	sxtw	x8, w0
  4133d8:	cbz	x8, 4133fc <bus_machine_method_open_login+0x3dc>
  4133dc:	mov	w8, wzr
  4133e0:	mov	w0, w8
  4133e4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4133e8:	add	x1, x1, #0x508
  4133ec:	ldur	x2, [x29, #-192]
  4133f0:	mov	w3, #0x229                 	// #553
  4133f4:	ldur	x4, [x29, #-200]
  4133f8:	bl	404bd0 <log_assert_failed_realm@plt>
  4133fc:	ldur	x8, [x29, #-168]
  413400:	mov	x9, #0x1                   	// #1
  413404:	mul	x8, x9, x8
  413408:	mul	x8, x8, x9
  41340c:	add	x8, x8, #0xf
  413410:	and	x8, x8, #0xfffffffffffffff0
  413414:	mov	x9, sp
  413418:	subs	x8, x9, x8
  41341c:	mov	sp, x8
  413420:	stur	x8, [x29, #-176]
  413424:	ldur	x8, [x29, #-176]
  413428:	stur	x8, [x29, #-136]
  41342c:	stur	x8, [x29, #-144]
  413430:	stur	xzr, [x29, #-160]
  413434:	ldur	x8, [x29, #-160]
  413438:	mov	w9, #0x0                   	// #0
  41343c:	cmp	x8, #0x3
  413440:	stur	w9, [x29, #-224]
  413444:	b.cs	41346c <bus_machine_method_open_login+0x44c>  // b.hs, b.nlast
  413448:	ldur	x8, [x29, #-160]
  41344c:	mov	x9, #0x8                   	// #8
  413450:	mul	x8, x9, x8
  413454:	sub	x9, x29, #0x80
  413458:	add	x8, x9, x8
  41345c:	ldr	x8, [x8]
  413460:	cmp	x8, #0x0
  413464:	cset	w10, ne  // ne = any
  413468:	stur	w10, [x29, #-224]
  41346c:	ldur	w8, [x29, #-224]
  413470:	tbnz	w8, #0, 413478 <bus_machine_method_open_login+0x458>
  413474:	b	4134ac <bus_machine_method_open_login+0x48c>
  413478:	ldur	x0, [x29, #-144]
  41347c:	ldur	x8, [x29, #-160]
  413480:	mov	x9, #0x8                   	// #8
  413484:	mul	x8, x9, x8
  413488:	sub	x9, x29, #0x80
  41348c:	add	x8, x9, x8
  413490:	ldr	x1, [x8]
  413494:	bl	404f60 <stpcpy@plt>
  413498:	stur	x0, [x29, #-144]
  41349c:	ldur	x8, [x29, #-160]
  4134a0:	add	x8, x8, #0x1
  4134a4:	stur	x8, [x29, #-160]
  4134a8:	b	413434 <bus_machine_method_open_login+0x414>
  4134ac:	ldur	x8, [x29, #-144]
  4134b0:	mov	w9, #0x0                   	// #0
  4134b4:	strb	w9, [x8]
  4134b8:	ldur	x8, [x29, #-136]
  4134bc:	stur	x8, [x29, #-184]
  4134c0:	ldur	x8, [x29, #-184]
  4134c4:	stur	x8, [x29, #-96]
  4134c8:	ldur	x0, [x29, #-72]
  4134cc:	ldur	x5, [x29, #-32]
  4134d0:	ldur	x8, [x29, #-96]
  4134d4:	sub	sp, sp, #0x10
  4134d8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4134dc:	add	x1, x1, #0x17
  4134e0:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  4134e4:	add	x2, x2, #0x30
  4134e8:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  4134ec:	add	x3, x3, #0x4a
  4134f0:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  4134f4:	add	x4, x4, #0x6ff
  4134f8:	mov	x10, xzr
  4134fc:	mov	x6, x10
  413500:	adrp	x7, 41b000 <machine_hash_ops+0x3e8>
  413504:	add	x7, x7, #0xa9d
  413508:	mov	x10, sp
  41350c:	str	x8, [x10]
  413510:	mov	x8, sp
  413514:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  413518:	add	x10, x10, #0x709
  41351c:	str	x10, [x8, #8]
  413520:	bl	4053a0 <sd_bus_call_method@plt>
  413524:	add	sp, sp, #0x10
  413528:	stur	w0, [x29, #-100]
  41352c:	ldur	w9, [x29, #-100]
  413530:	cmp	w9, #0x0
  413534:	cset	w9, ge  // ge = tcont
  413538:	tbnz	w9, #0, 413550 <bus_machine_method_open_login+0x530>
  41353c:	ldur	w8, [x29, #-100]
  413540:	stur	w8, [x29, #-4]
  413544:	mov	w8, #0x1                   	// #1
  413548:	stur	w8, [x29, #-104]
  41354c:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  413550:	ldur	x0, [x29, #-16]
  413554:	sub	x1, x29, #0x28
  413558:	bl	405200 <sd_bus_message_new_method_return@plt>
  41355c:	stur	w0, [x29, #-100]
  413560:	ldur	w8, [x29, #-100]
  413564:	cmp	w8, #0x0
  413568:	cset	w8, ge  // ge = tcont
  41356c:	tbnz	w8, #0, 413584 <bus_machine_method_open_login+0x564>
  413570:	ldur	w8, [x29, #-100]
  413574:	stur	w8, [x29, #-4]
  413578:	mov	w8, #0x1                   	// #1
  41357c:	stur	w8, [x29, #-104]
  413580:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  413584:	ldur	x0, [x29, #-40]
  413588:	ldur	w2, [x29, #-60]
  41358c:	ldur	x3, [x29, #-48]
  413590:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  413594:	add	x1, x1, #0xd05
  413598:	bl	405120 <sd_bus_message_append@plt>
  41359c:	stur	w0, [x29, #-100]
  4135a0:	ldur	w8, [x29, #-100]
  4135a4:	cmp	w8, #0x0
  4135a8:	cset	w8, ge  // ge = tcont
  4135ac:	tbnz	w8, #0, 4135c4 <bus_machine_method_open_login+0x5a4>
  4135b0:	ldur	w8, [x29, #-100]
  4135b4:	stur	w8, [x29, #-4]
  4135b8:	mov	w8, #0x1                   	// #1
  4135bc:	stur	w8, [x29, #-104]
  4135c0:	b	4135e4 <bus_machine_method_open_login+0x5c4>
  4135c4:	ldur	x1, [x29, #-40]
  4135c8:	mov	x8, xzr
  4135cc:	mov	x0, x8
  4135d0:	mov	x2, x8
  4135d4:	bl	405220 <sd_bus_send@plt>
  4135d8:	stur	w0, [x29, #-4]
  4135dc:	mov	w9, #0x1                   	// #1
  4135e0:	stur	w9, [x29, #-104]
  4135e4:	sub	x0, x29, #0x3c
  4135e8:	bl	412770 <closep>
  4135ec:	sub	x0, x29, #0x38
  4135f0:	bl	413614 <sd_bus_flush_close_unrefp>
  4135f4:	sub	x0, x29, #0x30
  4135f8:	bl	412648 <freep>
  4135fc:	sub	x0, x29, #0x28
  413600:	bl	412614 <sd_bus_message_unrefp>
  413604:	ldur	w0, [x29, #-4]
  413608:	mov	sp, x29
  41360c:	ldp	x29, x30, [sp], #16
  413610:	ret

0000000000413614 <sd_bus_flush_close_unrefp>:
  413614:	sub	sp, sp, #0x20
  413618:	stp	x29, x30, [sp, #16]
  41361c:	add	x29, sp, #0x10
  413620:	str	x0, [sp, #8]
  413624:	ldr	x8, [sp, #8]
  413628:	ldr	x8, [x8]
  41362c:	cbz	x8, 41363c <sd_bus_flush_close_unrefp+0x28>
  413630:	ldr	x8, [sp, #8]
  413634:	ldr	x0, [x8]
  413638:	bl	404c80 <sd_bus_flush_close_unref@plt>
  41363c:	ldp	x29, x30, [sp, #16]
  413640:	add	sp, sp, #0x20
  413644:	ret

0000000000413648 <container_bus_new>:
  413648:	sub	sp, sp, #0x70
  41364c:	stp	x29, x30, [sp, #96]
  413650:	add	x29, sp, #0x60
  413654:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  413658:	add	x8, x8, #0x21c
  41365c:	add	x8, x8, #0x3
  413660:	stur	x0, [x29, #-16]
  413664:	stur	x1, [x29, #-24]
  413668:	stur	x2, [x29, #-32]
  41366c:	str	x8, [sp, #8]
  413670:	ldur	x8, [x29, #-16]
  413674:	cmp	x8, #0x0
  413678:	cset	w9, ne  // ne = any
  41367c:	mov	w10, #0x1                   	// #1
  413680:	eor	w9, w9, #0x1
  413684:	eor	w9, w9, w10
  413688:	eor	w9, w9, w10
  41368c:	and	w9, w9, #0x1
  413690:	mov	w0, w9
  413694:	sxtw	x8, w0
  413698:	cbz	x8, 4136c0 <container_bus_new+0x78>
  41369c:	mov	w8, wzr
  4136a0:	mov	w0, w8
  4136a4:	adrp	x1, 41a000 <operation_new+0x40>
  4136a8:	add	x1, x1, #0xe18
  4136ac:	ldr	x2, [sp, #8]
  4136b0:	mov	w3, #0x1d7                 	// #471
  4136b4:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  4136b8:	add	x4, x4, #0x396
  4136bc:	bl	404bd0 <log_assert_failed_realm@plt>
  4136c0:	ldur	x8, [x29, #-32]
  4136c4:	cmp	x8, #0x0
  4136c8:	cset	w9, ne  // ne = any
  4136cc:	mov	w10, #0x1                   	// #1
  4136d0:	eor	w9, w9, #0x1
  4136d4:	eor	w9, w9, w10
  4136d8:	eor	w9, w9, w10
  4136dc:	and	w9, w9, #0x1
  4136e0:	mov	w0, w9
  4136e4:	sxtw	x8, w0
  4136e8:	cbz	x8, 413710 <container_bus_new+0xc8>
  4136ec:	mov	w8, wzr
  4136f0:	mov	w0, w8
  4136f4:	adrp	x1, 41a000 <operation_new+0x40>
  4136f8:	add	x1, x1, #0xdf8
  4136fc:	ldr	x2, [sp, #8]
  413700:	mov	w3, #0x1d8                 	// #472
  413704:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  413708:	add	x4, x4, #0x396
  41370c:	bl	404bd0 <log_assert_failed_realm@plt>
  413710:	ldur	x8, [x29, #-16]
  413714:	ldr	w9, [x8, #32]
  413718:	str	w9, [sp, #4]
  41371c:	cbz	w9, 41374c <container_bus_new+0x104>
  413720:	b	413724 <container_bus_new+0xdc>
  413724:	ldr	w8, [sp, #4]
  413728:	cmp	w8, #0x2
  41372c:	cset	w9, eq  // eq = none
  413730:	eor	w9, w9, #0x1
  413734:	tbnz	w9, #0, 4138b4 <container_bus_new+0x26c>
  413738:	b	41373c <container_bus_new+0xf4>
  41373c:	ldur	x8, [x29, #-32]
  413740:	mov	x9, xzr
  413744:	str	x9, [x8]
  413748:	b	4138c0 <container_bus_new+0x278>
  41374c:	add	x0, sp, #0x30
  413750:	mov	x8, xzr
  413754:	str	x8, [sp, #48]
  413758:	bl	405630 <sd_bus_new@plt>
  41375c:	stur	w0, [x29, #-36]
  413760:	ldur	w9, [x29, #-36]
  413764:	cmp	w9, #0x0
  413768:	cset	w9, ge  // ge = tcont
  41376c:	tbnz	w9, #0, 413784 <container_bus_new+0x13c>
  413770:	ldur	w8, [x29, #-36]
  413774:	stur	w8, [x29, #-4]
  413778:	mov	w8, #0x1                   	// #1
  41377c:	str	w8, [sp, #36]
  413780:	b	413898 <container_bus_new+0x250>
  413784:	ldur	x8, [x29, #-16]
  413788:	ldr	w2, [x8, #80]
  41378c:	add	x0, sp, #0x28
  413790:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  413794:	add	x1, x1, #0x3d2
  413798:	bl	405640 <asprintf@plt>
  41379c:	cmp	w0, #0x0
  4137a0:	cset	w9, ge  // ge = tcont
  4137a4:	tbnz	w9, #0, 4137bc <container_bus_new+0x174>
  4137a8:	mov	w8, #0xfffffff4            	// #-12
  4137ac:	stur	w8, [x29, #-4]
  4137b0:	mov	w8, #0x1                   	// #1
  4137b4:	str	w8, [sp, #36]
  4137b8:	b	413898 <container_bus_new+0x250>
  4137bc:	ldr	x8, [sp, #40]
  4137c0:	ldr	x9, [sp, #48]
  4137c4:	str	x8, [x9, #400]
  4137c8:	ldr	x8, [sp, #48]
  4137cc:	ldr	w10, [x8, #28]
  4137d0:	and	w10, w10, #0xfffffffd
  4137d4:	orr	w10, w10, #0x2
  4137d8:	str	w10, [x8, #28]
  4137dc:	ldr	x8, [sp, #48]
  4137e0:	ldr	w10, [x8, #28]
  4137e4:	and	w10, w10, #0xfffffbff
  4137e8:	str	w10, [x8, #28]
  4137ec:	ldr	x8, [sp, #48]
  4137f0:	ldr	w10, [x8, #28]
  4137f4:	and	w10, w10, #0xffffefff
  4137f8:	orr	w10, w10, #0x1000
  4137fc:	str	w10, [x8, #28]
  413800:	ldr	x0, [sp, #48]
  413804:	bl	405650 <sd_bus_start@plt>
  413808:	stur	w0, [x29, #-36]
  41380c:	ldur	w10, [x29, #-36]
  413810:	mov	w11, #0xfffffffe            	// #-2
  413814:	cmp	w10, w11
  413818:	b.ne	413848 <container_bus_new+0x200>  // b.any
  41381c:	ldur	x0, [x29, #-24]
  413820:	ldur	w1, [x29, #-36]
  413824:	ldur	x8, [x29, #-16]
  413828:	ldr	x3, [x8, #8]
  41382c:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  413830:	add	x2, x2, #0x404
  413834:	bl	405290 <sd_bus_error_set_errnof@plt>
  413838:	stur	w0, [x29, #-4]
  41383c:	mov	w9, #0x1                   	// #1
  413840:	str	w9, [sp, #36]
  413844:	b	413898 <container_bus_new+0x250>
  413848:	ldur	w8, [x29, #-36]
  41384c:	cmp	w8, #0x0
  413850:	cset	w8, ge  // ge = tcont
  413854:	tbnz	w8, #0, 41386c <container_bus_new+0x224>
  413858:	ldur	w8, [x29, #-36]
  41385c:	stur	w8, [x29, #-4]
  413860:	mov	w8, #0x1                   	// #1
  413864:	str	w8, [sp, #36]
  413868:	b	413898 <container_bus_new+0x250>
  41386c:	ldr	x8, [sp, #48]
  413870:	str	x8, [sp, #24]
  413874:	mov	x8, xzr
  413878:	str	x8, [sp, #48]
  41387c:	ldr	x8, [sp, #24]
  413880:	str	x8, [sp, #16]
  413884:	ldr	x8, [sp, #16]
  413888:	ldur	x9, [x29, #-32]
  41388c:	str	x8, [x9]
  413890:	mov	w10, #0x6                   	// #6
  413894:	str	w10, [sp, #36]
  413898:	add	x0, sp, #0x30
  41389c:	bl	4182f4 <sd_bus_close_unrefp>
  4138a0:	ldr	w8, [sp, #36]
  4138a4:	cmp	w8, #0x1
  4138a8:	b.eq	4138c4 <container_bus_new+0x27c>  // b.none
  4138ac:	b	4138b0 <container_bus_new+0x268>
  4138b0:	b	4138c0 <container_bus_new+0x278>
  4138b4:	mov	w8, #0xffffffa1            	// #-95
  4138b8:	stur	w8, [x29, #-4]
  4138bc:	b	4138c4 <container_bus_new+0x27c>
  4138c0:	stur	wzr, [x29, #-4]
  4138c4:	ldur	w0, [x29, #-4]
  4138c8:	ldp	x29, x30, [sp, #96]
  4138cc:	add	sp, sp, #0x70
  4138d0:	ret

00000000004138d4 <bus_machine_method_open_shell>:
  4138d4:	stp	x29, x30, [sp, #-32]!
  4138d8:	stp	x28, x19, [sp, #16]
  4138dc:	mov	x29, sp
  4138e0:	sub	sp, sp, #0x1d0
  4138e4:	mov	x19, sp
  4138e8:	mov	x8, xzr
  4138ec:	mov	w9, #0xffffffff            	// #-1
  4138f0:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  4138f4:	add	x10, x10, #0x7ae
  4138f8:	adrp	x11, 41b000 <machine_hash_ops+0x3e8>
  4138fc:	add	x11, x11, #0xd84
  413900:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  413904:	add	x12, x12, #0xb0c
  413908:	adrp	x13, 41d000 <machine_hash_ops+0x23e8>
  41390c:	add	x13, x13, #0x21c
  413910:	add	x13, x13, #0x3
  413914:	adrp	x14, 41d000 <machine_hash_ops+0x23e8>
  413918:	add	x14, x14, #0x711
  41391c:	adrp	x15, 41d000 <machine_hash_ops+0x23e8>
  413920:	add	x15, x15, #0x7d8
  413924:	stur	x0, [x29, #-16]
  413928:	stur	x1, [x29, #-24]
  41392c:	stur	x2, [x29, #-32]
  413930:	stur	x8, [x29, #-40]
  413934:	stur	x8, [x29, #-48]
  413938:	stur	x8, [x29, #-56]
  41393c:	stur	x8, [x29, #-64]
  413940:	stur	x8, [x29, #-72]
  413944:	stur	w9, [x29, #-76]
  413948:	stur	w9, [x29, #-80]
  41394c:	stur	x8, [x29, #-88]
  413950:	stur	x8, [x29, #-96]
  413954:	stur	x8, [x29, #-104]
  413958:	ldur	x8, [x29, #-24]
  41395c:	stur	x8, [x29, #-112]
  413960:	str	x10, [x19, #120]
  413964:	str	x11, [x19, #112]
  413968:	str	x12, [x19, #104]
  41396c:	str	x13, [x19, #96]
  413970:	str	x14, [x19, #88]
  413974:	str	x15, [x19, #80]
  413978:	ldur	x8, [x29, #-16]
  41397c:	cmp	x8, #0x0
  413980:	cset	w9, ne  // ne = any
  413984:	mov	w10, #0x1                   	// #1
  413988:	eor	w9, w9, #0x1
  41398c:	eor	w9, w9, w10
  413990:	eor	w9, w9, w10
  413994:	and	w9, w9, #0x1
  413998:	mov	w0, w9
  41399c:	sxtw	x8, w0
  4139a0:	cbz	x8, 4139c4 <bus_machine_method_open_shell+0xf0>
  4139a4:	mov	w8, wzr
  4139a8:	mov	w0, w8
  4139ac:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4139b0:	add	x1, x1, #0xebd
  4139b4:	ldr	x2, [x19, #96]
  4139b8:	mov	w3, #0x24c                 	// #588
  4139bc:	ldr	x4, [x19, #88]
  4139c0:	bl	404bd0 <log_assert_failed_realm@plt>
  4139c4:	ldur	x8, [x29, #-112]
  4139c8:	cmp	x8, #0x0
  4139cc:	cset	w9, ne  // ne = any
  4139d0:	mov	w10, #0x1                   	// #1
  4139d4:	eor	w9, w9, #0x1
  4139d8:	eor	w9, w9, w10
  4139dc:	eor	w9, w9, w10
  4139e0:	and	w9, w9, #0x1
  4139e4:	mov	w0, w9
  4139e8:	sxtw	x8, w0
  4139ec:	cbz	x8, 413a10 <bus_machine_method_open_shell+0x13c>
  4139f0:	mov	w8, wzr
  4139f4:	mov	w0, w8
  4139f8:	adrp	x1, 41a000 <operation_new+0x40>
  4139fc:	add	x1, x1, #0xe18
  413a00:	ldr	x2, [x19, #96]
  413a04:	mov	w3, #0x24d                 	// #589
  413a08:	ldr	x4, [x19, #88]
  413a0c:	bl	404bd0 <log_assert_failed_realm@plt>
  413a10:	ldur	x0, [x29, #-16]
  413a14:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  413a18:	add	x1, x1, #0xa9d
  413a1c:	sub	x2, x29, #0x88
  413a20:	sub	x3, x29, #0x90
  413a24:	bl	405170 <sd_bus_message_read@plt>
  413a28:	stur	w0, [x29, #-164]
  413a2c:	ldur	w8, [x29, #-164]
  413a30:	cmp	w8, #0x0
  413a34:	cset	w8, ge  // ge = tcont
  413a38:	tbnz	w8, #0, 413a50 <bus_machine_method_open_shell+0x17c>
  413a3c:	ldur	w8, [x29, #-164]
  413a40:	stur	w8, [x29, #-4]
  413a44:	mov	w8, #0x1                   	// #1
  413a48:	stur	w8, [x29, #-168]
  413a4c:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413a50:	ldur	x0, [x29, #-136]
  413a54:	bl	414c28 <empty_to_null>
  413a58:	stur	x0, [x29, #-136]
  413a5c:	ldur	x0, [x29, #-16]
  413a60:	sub	x1, x29, #0x60
  413a64:	bl	405660 <sd_bus_message_read_strv@plt>
  413a68:	stur	w0, [x29, #-164]
  413a6c:	ldur	w8, [x29, #-164]
  413a70:	cmp	w8, #0x0
  413a74:	cset	w8, ge  // ge = tcont
  413a78:	tbnz	w8, #0, 413a90 <bus_machine_method_open_shell+0x1bc>
  413a7c:	ldur	w8, [x29, #-164]
  413a80:	stur	w8, [x29, #-4]
  413a84:	mov	w8, #0x1                   	// #1
  413a88:	stur	w8, [x29, #-168]
  413a8c:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413a90:	ldur	x0, [x29, #-144]
  413a94:	bl	411aa4 <isempty>
  413a98:	tbnz	w0, #0, 413aa0 <bus_machine_method_open_shell+0x1cc>
  413a9c:	b	413bc4 <bus_machine_method_open_shell+0x2f0>
  413aa0:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  413aa4:	add	x8, x8, #0x75d
  413aa8:	stur	x8, [x29, #-144]
  413aac:	mov	x0, #0x4                   	// #4
  413ab0:	mov	x1, #0x8                   	// #8
  413ab4:	bl	404c00 <calloc@plt>
  413ab8:	stur	x0, [x29, #-104]
  413abc:	ldur	x8, [x29, #-104]
  413ac0:	cbnz	x8, 413ad8 <bus_machine_method_open_shell+0x204>
  413ac4:	mov	w8, #0xfffffff4            	// #-12
  413ac8:	stur	w8, [x29, #-4]
  413acc:	mov	w8, #0x1                   	// #1
  413ad0:	stur	w8, [x29, #-168]
  413ad4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413ad8:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  413adc:	add	x0, x0, #0x765
  413ae0:	bl	404dd0 <strdup@plt>
  413ae4:	ldur	x8, [x29, #-104]
  413ae8:	str	x0, [x8]
  413aec:	ldur	x8, [x29, #-104]
  413af0:	ldr	x8, [x8]
  413af4:	cbnz	x8, 413b0c <bus_machine_method_open_shell+0x238>
  413af8:	mov	w8, #0xfffffff4            	// #-12
  413afc:	stur	w8, [x29, #-4]
  413b00:	mov	w8, #0x1                   	// #1
  413b04:	stur	w8, [x29, #-168]
  413b08:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413b0c:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  413b10:	add	x0, x0, #0x768
  413b14:	bl	404dd0 <strdup@plt>
  413b18:	ldur	x8, [x29, #-104]
  413b1c:	str	x0, [x8, #8]
  413b20:	ldur	x8, [x29, #-104]
  413b24:	ldr	x8, [x8, #8]
  413b28:	cbnz	x8, 413b40 <bus_machine_method_open_shell+0x26c>
  413b2c:	mov	w8, #0xfffffff4            	// #-12
  413b30:	stur	w8, [x29, #-4]
  413b34:	mov	w8, #0x1                   	// #1
  413b38:	stur	w8, [x29, #-168]
  413b3c:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413b40:	ldur	x8, [x29, #-104]
  413b44:	add	x0, x8, #0x10
  413b48:	ldur	x8, [x29, #-136]
  413b4c:	str	x0, [x19, #72]
  413b50:	mov	x0, x8
  413b54:	bl	411aa4 <isempty>
  413b58:	tbnz	w0, #0, 413b60 <bus_machine_method_open_shell+0x28c>
  413b5c:	b	413b6c <bus_machine_method_open_shell+0x298>
  413b60:	ldr	x8, [x19, #80]
  413b64:	str	x8, [x19, #64]
  413b68:	b	413b74 <bus_machine_method_open_shell+0x2a0>
  413b6c:	ldur	x8, [x29, #-136]
  413b70:	str	x8, [x19, #64]
  413b74:	ldr	x8, [x19, #64]
  413b78:	ldr	x0, [x19, #72]
  413b7c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  413b80:	add	x1, x1, #0x76b
  413b84:	mov	x2, x8
  413b88:	bl	405640 <asprintf@plt>
  413b8c:	stur	w0, [x29, #-164]
  413b90:	ldur	w9, [x29, #-164]
  413b94:	cmp	w9, #0x0
  413b98:	cset	w9, ge  // ge = tcont
  413b9c:	tbnz	w9, #0, 413bc0 <bus_machine_method_open_shell+0x2ec>
  413ba0:	ldur	x8, [x29, #-104]
  413ba4:	mov	x9, xzr
  413ba8:	str	x9, [x8, #16]
  413bac:	mov	w10, #0xfffffff4            	// #-12
  413bb0:	stur	w10, [x29, #-4]
  413bb4:	mov	w10, #0x1                   	// #1
  413bb8:	stur	w10, [x29, #-168]
  413bbc:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413bc0:	b	413c68 <bus_machine_method_open_shell+0x394>
  413bc4:	ldur	x0, [x29, #-144]
  413bc8:	bl	405450 <path_is_absolute@plt>
  413bcc:	tbnz	w0, #0, 413bfc <bus_machine_method_open_shell+0x328>
  413bd0:	ldur	x0, [x29, #-32]
  413bd4:	ldur	x3, [x29, #-144]
  413bd8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  413bdc:	add	x1, x1, #0x848
  413be0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  413be4:	add	x2, x2, #0x7dd
  413be8:	bl	4051b0 <sd_bus_error_setf@plt>
  413bec:	stur	w0, [x29, #-4]
  413bf0:	mov	w8, #0x1                   	// #1
  413bf4:	stur	w8, [x29, #-168]
  413bf8:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413bfc:	ldur	x8, [x29, #-96]
  413c00:	stur	x8, [x29, #-176]
  413c04:	mov	x8, xzr
  413c08:	stur	x8, [x29, #-96]
  413c0c:	ldur	x8, [x29, #-176]
  413c10:	stur	x8, [x29, #-184]
  413c14:	ldur	x8, [x29, #-184]
  413c18:	stur	x8, [x29, #-104]
  413c1c:	ldur	x0, [x29, #-104]
  413c20:	bl	414c70 <strv_isempty>
  413c24:	tbnz	w0, #0, 413c2c <bus_machine_method_open_shell+0x358>
  413c28:	b	413c68 <bus_machine_method_open_shell+0x394>
  413c2c:	ldur	x0, [x29, #-104]
  413c30:	bl	405610 <strv_free@plt>
  413c34:	stur	x0, [x29, #-104]
  413c38:	ldur	x0, [x29, #-144]
  413c3c:	mov	x8, xzr
  413c40:	mov	x1, x8
  413c44:	bl	405670 <strv_new_internal@plt>
  413c48:	stur	x0, [x29, #-104]
  413c4c:	ldur	x8, [x29, #-104]
  413c50:	cbnz	x8, 413c68 <bus_machine_method_open_shell+0x394>
  413c54:	mov	w8, #0xfffffff4            	// #-12
  413c58:	stur	w8, [x29, #-4]
  413c5c:	mov	w8, #0x1                   	// #1
  413c60:	stur	w8, [x29, #-168]
  413c64:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413c68:	ldur	x0, [x29, #-16]
  413c6c:	sub	x1, x29, #0x58
  413c70:	bl	405660 <sd_bus_message_read_strv@plt>
  413c74:	stur	w0, [x29, #-164]
  413c78:	ldur	w8, [x29, #-164]
  413c7c:	cmp	w8, #0x0
  413c80:	cset	w8, ge  // ge = tcont
  413c84:	tbnz	w8, #0, 413c9c <bus_machine_method_open_shell+0x3c8>
  413c88:	ldur	w8, [x29, #-164]
  413c8c:	stur	w8, [x29, #-4]
  413c90:	mov	w8, #0x1                   	// #1
  413c94:	stur	w8, [x29, #-168]
  413c98:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413c9c:	ldur	x0, [x29, #-88]
  413ca0:	bl	405680 <strv_env_is_valid@plt>
  413ca4:	tbnz	w0, #0, 413cd0 <bus_machine_method_open_shell+0x3fc>
  413ca8:	ldur	x0, [x29, #-32]
  413cac:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  413cb0:	add	x1, x1, #0x848
  413cb4:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  413cb8:	add	x2, x2, #0x801
  413cbc:	bl	4051b0 <sd_bus_error_setf@plt>
  413cc0:	stur	w0, [x29, #-4]
  413cc4:	mov	w8, #0x1                   	// #1
  413cc8:	stur	w8, [x29, #-168]
  413ccc:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413cd0:	ldur	x0, [x29, #-16]
  413cd4:	ldur	x8, [x29, #-112]
  413cd8:	ldr	w9, [x8, #32]
  413cdc:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  413ce0:	add	x8, x8, #0x845
  413ce4:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  413ce8:	add	x10, x10, #0x821
  413cec:	cmp	w9, #0x2
  413cf0:	csel	x2, x10, x8, eq  // eq = none
  413cf4:	ldur	x8, [x29, #-112]
  413cf8:	ldr	x8, [x8]
  413cfc:	add	x6, x8, #0x28
  413d00:	ldur	x7, [x29, #-32]
  413d04:	mov	w1, #0x15                  	// #21
  413d08:	mov	x8, xzr
  413d0c:	mov	x3, x8
  413d10:	mov	w9, wzr
  413d14:	and	w4, w9, #0x1
  413d18:	mov	w5, #0xffffffff            	// #-1
  413d1c:	bl	405250 <bus_verify_polkit_async@plt>
  413d20:	stur	w0, [x29, #-164]
  413d24:	ldur	w9, [x29, #-164]
  413d28:	cmp	w9, #0x0
  413d2c:	cset	w9, ge  // ge = tcont
  413d30:	tbnz	w9, #0, 413d48 <bus_machine_method_open_shell+0x474>
  413d34:	ldur	w8, [x29, #-164]
  413d38:	stur	w8, [x29, #-4]
  413d3c:	mov	w8, #0x1                   	// #1
  413d40:	stur	w8, [x29, #-168]
  413d44:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413d48:	ldur	w8, [x29, #-164]
  413d4c:	cbnz	w8, 413d60 <bus_machine_method_open_shell+0x48c>
  413d50:	mov	w8, #0x1                   	// #1
  413d54:	stur	w8, [x29, #-4]
  413d58:	stur	w8, [x29, #-168]
  413d5c:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413d60:	ldur	x0, [x29, #-112]
  413d64:	mov	w1, #0x102                 	// #258
  413d68:	movk	w1, #0x8, lsl #16
  413d6c:	sub	x2, x29, #0x38
  413d70:	bl	40a368 <machine_openpt>
  413d74:	stur	w0, [x29, #-76]
  413d78:	ldur	w8, [x29, #-76]
  413d7c:	cmp	w8, #0x0
  413d80:	cset	w8, ge  // ge = tcont
  413d84:	tbnz	w8, #0, 413d9c <bus_machine_method_open_shell+0x4c8>
  413d88:	ldur	w8, [x29, #-76]
  413d8c:	stur	w8, [x29, #-4]
  413d90:	mov	w8, #0x1                   	// #1
  413d94:	stur	w8, [x29, #-168]
  413d98:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413d9c:	ldur	x0, [x29, #-56]
  413da0:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  413da4:	add	x1, x1, #0x6d9
  413da8:	bl	4054b0 <path_startswith@plt>
  413dac:	stur	x0, [x29, #-120]
  413db0:	ldur	x8, [x29, #-120]
  413db4:	cmp	x8, #0x0
  413db8:	cset	w9, ne  // ne = any
  413dbc:	mov	w10, #0x1                   	// #1
  413dc0:	eor	w9, w9, #0x1
  413dc4:	eor	w9, w9, w10
  413dc8:	eor	w9, w9, w10
  413dcc:	and	w9, w9, #0x1
  413dd0:	mov	w0, w9
  413dd4:	sxtw	x8, w0
  413dd8:	cbz	x8, 413dfc <bus_machine_method_open_shell+0x528>
  413ddc:	mov	w8, wzr
  413de0:	mov	w0, w8
  413de4:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  413de8:	add	x1, x1, #0x6e3
  413dec:	ldr	x2, [x19, #96]
  413df0:	mov	w3, #0x290                 	// #656
  413df4:	ldr	x4, [x19, #88]
  413df8:	bl	404bd0 <log_assert_failed_realm@plt>
  413dfc:	ldur	x0, [x29, #-112]
  413e00:	ldur	x1, [x29, #-56]
  413e04:	mov	w2, #0x102                 	// #258
  413e08:	movk	w2, #0x8, lsl #16
  413e0c:	bl	40a474 <machine_open_terminal>
  413e10:	stur	w0, [x29, #-80]
  413e14:	ldur	w8, [x29, #-80]
  413e18:	cmp	w8, #0x0
  413e1c:	cset	w8, ge  // ge = tcont
  413e20:	tbnz	w8, #0, 413e38 <bus_machine_method_open_shell+0x564>
  413e24:	ldur	w8, [x29, #-80]
  413e28:	stur	w8, [x29, #-4]
  413e2c:	mov	w8, #0x1                   	// #1
  413e30:	stur	w8, [x29, #-168]
  413e34:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413e38:	ldur	x0, [x29, #-56]
  413e3c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  413e40:	add	x1, x1, #0x864
  413e44:	bl	4054b0 <path_startswith@plt>
  413e48:	stur	x0, [x29, #-160]
  413e4c:	ldur	x8, [x29, #-160]
  413e50:	cmp	x8, #0x0
  413e54:	cset	w9, ne  // ne = any
  413e58:	mov	w10, #0x1                   	// #1
  413e5c:	eor	w9, w9, #0x1
  413e60:	eor	w9, w9, w10
  413e64:	eor	w9, w9, w10
  413e68:	and	w9, w9, #0x1
  413e6c:	mov	w0, w9
  413e70:	sxtw	x8, w0
  413e74:	cbz	x8, 413e98 <bus_machine_method_open_shell+0x5c4>
  413e78:	mov	w8, wzr
  413e7c:	mov	w0, w8
  413e80:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  413e84:	add	x1, x1, #0x86a
  413e88:	ldr	x2, [x19, #96]
  413e8c:	mov	w3, #0x297                 	// #663
  413e90:	ldr	x4, [x19, #88]
  413e94:	bl	404bd0 <log_assert_failed_realm@plt>
  413e98:	ldur	x0, [x29, #-112]
  413e9c:	ldur	x1, [x29, #-32]
  413ea0:	sub	x2, x29, #0x40
  413ea4:	bl	413648 <container_bus_new>
  413ea8:	stur	w0, [x29, #-164]
  413eac:	ldur	w8, [x29, #-164]
  413eb0:	cmp	w8, #0x0
  413eb4:	cset	w8, ge  // ge = tcont
  413eb8:	tbnz	w8, #0, 413ed0 <bus_machine_method_open_shell+0x5fc>
  413ebc:	ldur	w8, [x29, #-164]
  413ec0:	stur	w8, [x29, #-4]
  413ec4:	mov	w8, #0x1                   	// #1
  413ec8:	stur	w8, [x29, #-168]
  413ecc:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413ed0:	ldur	x8, [x29, #-64]
  413ed4:	str	x8, [x19, #56]
  413ed8:	cbz	x8, 413ee8 <bus_machine_method_open_shell+0x614>
  413edc:	ldr	x8, [x19, #56]
  413ee0:	str	x8, [x19, #48]
  413ee4:	b	413ef8 <bus_machine_method_open_shell+0x624>
  413ee8:	ldur	x8, [x29, #-112]
  413eec:	ldr	x8, [x8]
  413ef0:	ldr	x8, [x8, #8]
  413ef4:	str	x8, [x19, #48]
  413ef8:	ldr	x8, [x19, #48]
  413efc:	stur	x8, [x29, #-72]
  413f00:	ldur	x0, [x29, #-72]
  413f04:	sub	x1, x29, #0x30
  413f08:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  413f0c:	add	x2, x2, #0x17
  413f10:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  413f14:	add	x3, x3, #0x30
  413f18:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  413f1c:	add	x4, x4, #0x4a
  413f20:	adrp	x5, 41b000 <machine_hash_ops+0x3e8>
  413f24:	add	x5, x5, #0xa8a
  413f28:	bl	405110 <sd_bus_message_new_method_call@plt>
  413f2c:	stur	w0, [x29, #-164]
  413f30:	ldur	w9, [x29, #-164]
  413f34:	cmp	w9, #0x0
  413f38:	cset	w9, ge  // ge = tcont
  413f3c:	tbnz	w9, #0, 413f54 <bus_machine_method_open_shell+0x680>
  413f40:	ldur	w8, [x29, #-164]
  413f44:	stur	w8, [x29, #-4]
  413f48:	mov	w8, #0x1                   	// #1
  413f4c:	stur	w8, [x29, #-168]
  413f50:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  413f54:	sub	x8, x29, #0xd0
  413f58:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  413f5c:	add	x9, x9, #0x872
  413f60:	stur	x9, [x29, #-208]
  413f64:	ldur	x9, [x29, #-120]
  413f68:	str	x9, [x8, #8]
  413f6c:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  413f70:	add	x9, x9, #0x6f6
  413f74:	str	x9, [x8, #16]
  413f78:	str	xzr, [x19, #232]
  413f7c:	str	xzr, [x19, #224]
  413f80:	ldr	x8, [x19, #224]
  413f84:	mov	w9, #0x0                   	// #0
  413f88:	cmp	x8, #0x3
  413f8c:	str	w9, [x19, #44]
  413f90:	b.cs	413fb8 <bus_machine_method_open_shell+0x6e4>  // b.hs, b.nlast
  413f94:	ldr	x8, [x19, #224]
  413f98:	mov	x9, #0x8                   	// #8
  413f9c:	mul	x8, x9, x8
  413fa0:	sub	x9, x29, #0xd0
  413fa4:	add	x8, x9, x8
  413fa8:	ldr	x8, [x8]
  413fac:	cmp	x8, #0x0
  413fb0:	cset	w10, ne  // ne = any
  413fb4:	str	w10, [x19, #44]
  413fb8:	ldr	w8, [x19, #44]
  413fbc:	tbnz	w8, #0, 413fc4 <bus_machine_method_open_shell+0x6f0>
  413fc0:	b	413ffc <bus_machine_method_open_shell+0x728>
  413fc4:	ldr	x8, [x19, #224]
  413fc8:	mov	x9, #0x8                   	// #8
  413fcc:	mul	x8, x9, x8
  413fd0:	sub	x9, x29, #0xd0
  413fd4:	add	x8, x9, x8
  413fd8:	ldr	x0, [x8]
  413fdc:	bl	404e00 <strlen@plt>
  413fe0:	ldr	x8, [x19, #232]
  413fe4:	add	x8, x8, x0
  413fe8:	str	x8, [x19, #232]
  413fec:	ldr	x8, [x19, #224]
  413ff0:	add	x8, x8, #0x1
  413ff4:	str	x8, [x19, #224]
  413ff8:	b	413f80 <bus_machine_method_open_shell+0x6ac>
  413ffc:	ldr	x8, [x19, #232]
  414000:	add	x8, x8, #0x1
  414004:	str	x8, [x19, #216]
  414008:	ldr	x1, [x19, #216]
  41400c:	mov	x0, #0x1                   	// #1
  414010:	bl	412798 <size_multiply_overflow>
  414014:	mov	w8, #0x1                   	// #1
  414018:	eor	w9, w0, #0x1
  41401c:	eor	w9, w9, w8
  414020:	eor	w9, w9, w8
  414024:	eor	w8, w9, w8
  414028:	and	w8, w8, #0x1
  41402c:	mov	w1, w8
  414030:	sxtw	x10, w1
  414034:	cbz	x10, 414058 <bus_machine_method_open_shell+0x784>
  414038:	mov	w8, wzr
  41403c:	mov	w0, w8
  414040:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414044:	add	x1, x1, #0x4dd
  414048:	ldr	x2, [x19, #96]
  41404c:	mov	w3, #0x2aa                 	// #682
  414050:	ldr	x4, [x19, #88]
  414054:	bl	404bd0 <log_assert_failed_realm@plt>
  414058:	ldr	x8, [x19, #216]
  41405c:	mov	x9, #0x1                   	// #1
  414060:	mul	x8, x9, x8
  414064:	cmp	x8, #0x400, lsl #12
  414068:	cset	w10, ls  // ls = plast
  41406c:	mov	w11, #0x1                   	// #1
  414070:	eor	w10, w10, #0x1
  414074:	eor	w10, w10, w11
  414078:	eor	w10, w10, w11
  41407c:	and	w10, w10, #0x1
  414080:	mov	w0, w10
  414084:	sxtw	x8, w0
  414088:	cbz	x8, 4140ac <bus_machine_method_open_shell+0x7d8>
  41408c:	mov	w8, wzr
  414090:	mov	w0, w8
  414094:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414098:	add	x1, x1, #0x508
  41409c:	ldr	x2, [x19, #96]
  4140a0:	mov	w3, #0x2aa                 	// #682
  4140a4:	ldr	x4, [x19, #88]
  4140a8:	bl	404bd0 <log_assert_failed_realm@plt>
  4140ac:	ldr	x8, [x19, #216]
  4140b0:	mov	x9, #0x1                   	// #1
  4140b4:	mul	x8, x9, x8
  4140b8:	mul	x8, x8, x9
  4140bc:	add	x8, x8, #0xf
  4140c0:	and	x8, x8, #0xfffffffffffffff0
  4140c4:	mov	x9, sp
  4140c8:	subs	x8, x9, x8
  4140cc:	mov	sp, x8
  4140d0:	str	x8, [x19, #208]
  4140d4:	ldr	x8, [x19, #208]
  4140d8:	stur	x8, [x29, #-216]
  4140dc:	stur	x8, [x29, #-224]
  4140e0:	str	xzr, [x19, #224]
  4140e4:	ldr	x8, [x19, #224]
  4140e8:	mov	w9, #0x0                   	// #0
  4140ec:	cmp	x8, #0x3
  4140f0:	str	w9, [x19, #40]
  4140f4:	b.cs	41411c <bus_machine_method_open_shell+0x848>  // b.hs, b.nlast
  4140f8:	ldr	x8, [x19, #224]
  4140fc:	mov	x9, #0x8                   	// #8
  414100:	mul	x8, x9, x8
  414104:	sub	x9, x29, #0xd0
  414108:	add	x8, x9, x8
  41410c:	ldr	x8, [x8]
  414110:	cmp	x8, #0x0
  414114:	cset	w10, ne  // ne = any
  414118:	str	w10, [x19, #40]
  41411c:	ldr	w8, [x19, #40]
  414120:	tbnz	w8, #0, 414128 <bus_machine_method_open_shell+0x854>
  414124:	b	41415c <bus_machine_method_open_shell+0x888>
  414128:	ldur	x0, [x29, #-224]
  41412c:	ldr	x8, [x19, #224]
  414130:	mov	x9, #0x8                   	// #8
  414134:	mul	x8, x9, x8
  414138:	sub	x9, x29, #0xd0
  41413c:	add	x8, x9, x8
  414140:	ldr	x1, [x8]
  414144:	bl	404f60 <stpcpy@plt>
  414148:	stur	x0, [x29, #-224]
  41414c:	ldr	x8, [x19, #224]
  414150:	add	x8, x8, #0x1
  414154:	str	x8, [x19, #224]
  414158:	b	4140e4 <bus_machine_method_open_shell+0x810>
  41415c:	ldur	x8, [x29, #-224]
  414160:	mov	w9, #0x0                   	// #0
  414164:	strb	w9, [x8]
  414168:	ldur	x8, [x29, #-216]
  41416c:	str	x8, [x19, #200]
  414170:	ldr	x8, [x19, #200]
  414174:	stur	x8, [x29, #-128]
  414178:	ldur	x0, [x29, #-48]
  41417c:	ldur	x2, [x29, #-128]
  414180:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414184:	add	x1, x1, #0xa9d
  414188:	adrp	x3, 41b000 <machine_hash_ops+0x3e8>
  41418c:	add	x3, x3, #0xaa0
  414190:	bl	405120 <sd_bus_message_append@plt>
  414194:	stur	w0, [x29, #-164]
  414198:	ldur	w9, [x29, #-164]
  41419c:	cmp	w9, #0x0
  4141a0:	cset	w9, ge  // ge = tcont
  4141a4:	tbnz	w9, #0, 4141bc <bus_machine_method_open_shell+0x8e8>
  4141a8:	ldur	w8, [x29, #-164]
  4141ac:	stur	w8, [x29, #-4]
  4141b0:	mov	w8, #0x1                   	// #1
  4141b4:	stur	w8, [x29, #-168]
  4141b8:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4141bc:	ldur	x0, [x29, #-48]
  4141c0:	mov	w1, #0x61                  	// #97
  4141c4:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  4141c8:	add	x2, x2, #0xaa5
  4141cc:	bl	405130 <sd_bus_message_open_container@plt>
  4141d0:	stur	w0, [x29, #-164]
  4141d4:	ldur	w8, [x29, #-164]
  4141d8:	cmp	w8, #0x0
  4141dc:	cset	w8, ge  // ge = tcont
  4141e0:	tbnz	w8, #0, 4141f8 <bus_machine_method_open_shell+0x924>
  4141e4:	ldur	w8, [x29, #-164]
  4141e8:	stur	w8, [x29, #-4]
  4141ec:	mov	w8, #0x1                   	// #1
  4141f0:	stur	w8, [x29, #-168]
  4141f4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4141f8:	add	x8, x19, #0xb8
  4141fc:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  414200:	add	x9, x9, #0x883
  414204:	str	x9, [x19, #184]
  414208:	ldur	x0, [x29, #-136]
  41420c:	str	x8, [x19, #32]
  414210:	bl	411aa4 <isempty>
  414214:	tbnz	w0, #0, 41421c <bus_machine_method_open_shell+0x948>
  414218:	b	414228 <bus_machine_method_open_shell+0x954>
  41421c:	ldr	x8, [x19, #80]
  414220:	str	x8, [x19, #24]
  414224:	b	414230 <bus_machine_method_open_shell+0x95c>
  414228:	ldur	x8, [x29, #-136]
  41422c:	str	x8, [x19, #24]
  414230:	ldr	x8, [x19, #24]
  414234:	ldr	x9, [x19, #32]
  414238:	str	x8, [x9, #8]
  41423c:	str	xzr, [x19, #160]
  414240:	str	xzr, [x19, #152]
  414244:	ldr	x8, [x19, #152]
  414248:	mov	w9, #0x0                   	// #0
  41424c:	cmp	x8, #0x2
  414250:	str	w9, [x19, #20]
  414254:	b.cs	41427c <bus_machine_method_open_shell+0x9a8>  // b.hs, b.nlast
  414258:	ldr	x8, [x19, #152]
  41425c:	mov	x9, #0x8                   	// #8
  414260:	mul	x8, x9, x8
  414264:	add	x9, x19, #0xb8
  414268:	add	x8, x9, x8
  41426c:	ldr	x8, [x8]
  414270:	cmp	x8, #0x0
  414274:	cset	w10, ne  // ne = any
  414278:	str	w10, [x19, #20]
  41427c:	ldr	w8, [x19, #20]
  414280:	tbnz	w8, #0, 414288 <bus_machine_method_open_shell+0x9b4>
  414284:	b	4142c0 <bus_machine_method_open_shell+0x9ec>
  414288:	ldr	x8, [x19, #152]
  41428c:	mov	x9, #0x8                   	// #8
  414290:	mul	x8, x9, x8
  414294:	add	x9, x19, #0xb8
  414298:	add	x8, x9, x8
  41429c:	ldr	x0, [x8]
  4142a0:	bl	404e00 <strlen@plt>
  4142a4:	ldr	x8, [x19, #160]
  4142a8:	add	x8, x8, x0
  4142ac:	str	x8, [x19, #160]
  4142b0:	ldr	x8, [x19, #152]
  4142b4:	add	x8, x8, #0x1
  4142b8:	str	x8, [x19, #152]
  4142bc:	b	414244 <bus_machine_method_open_shell+0x970>
  4142c0:	ldr	x8, [x19, #160]
  4142c4:	add	x8, x8, #0x1
  4142c8:	str	x8, [x19, #144]
  4142cc:	ldr	x1, [x19, #144]
  4142d0:	mov	x0, #0x1                   	// #1
  4142d4:	bl	412798 <size_multiply_overflow>
  4142d8:	mov	w8, #0x1                   	// #1
  4142dc:	eor	w9, w0, #0x1
  4142e0:	eor	w9, w9, w8
  4142e4:	eor	w9, w9, w8
  4142e8:	eor	w8, w9, w8
  4142ec:	and	w8, w8, #0x1
  4142f0:	mov	w1, w8
  4142f4:	sxtw	x10, w1
  4142f8:	cbz	x10, 41431c <bus_machine_method_open_shell+0xa48>
  4142fc:	mov	w8, wzr
  414300:	mov	w0, w8
  414304:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414308:	add	x1, x1, #0x4dd
  41430c:	ldr	x2, [x19, #96]
  414310:	mov	w3, #0x2b4                 	// #692
  414314:	ldr	x4, [x19, #88]
  414318:	bl	404bd0 <log_assert_failed_realm@plt>
  41431c:	ldr	x8, [x19, #144]
  414320:	mov	x9, #0x1                   	// #1
  414324:	mul	x8, x9, x8
  414328:	cmp	x8, #0x400, lsl #12
  41432c:	cset	w10, ls  // ls = plast
  414330:	mov	w11, #0x1                   	// #1
  414334:	eor	w10, w10, #0x1
  414338:	eor	w10, w10, w11
  41433c:	eor	w10, w10, w11
  414340:	and	w10, w10, #0x1
  414344:	mov	w0, w10
  414348:	sxtw	x8, w0
  41434c:	cbz	x8, 414370 <bus_machine_method_open_shell+0xa9c>
  414350:	mov	w8, wzr
  414354:	mov	w0, w8
  414358:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41435c:	add	x1, x1, #0x508
  414360:	ldr	x2, [x19, #96]
  414364:	mov	w3, #0x2b4                 	// #692
  414368:	ldr	x4, [x19, #88]
  41436c:	bl	404bd0 <log_assert_failed_realm@plt>
  414370:	ldr	x8, [x19, #144]
  414374:	mov	x9, #0x1                   	// #1
  414378:	mul	x8, x9, x8
  41437c:	mul	x8, x8, x9
  414380:	add	x8, x8, #0xf
  414384:	and	x8, x8, #0xfffffffffffffff0
  414388:	mov	x9, sp
  41438c:	subs	x8, x9, x8
  414390:	mov	sp, x8
  414394:	str	x8, [x19, #136]
  414398:	ldr	x8, [x19, #136]
  41439c:	str	x8, [x19, #176]
  4143a0:	str	x8, [x19, #168]
  4143a4:	str	xzr, [x19, #152]
  4143a8:	ldr	x8, [x19, #152]
  4143ac:	mov	w9, #0x0                   	// #0
  4143b0:	cmp	x8, #0x2
  4143b4:	str	w9, [x19, #16]
  4143b8:	b.cs	4143e0 <bus_machine_method_open_shell+0xb0c>  // b.hs, b.nlast
  4143bc:	ldr	x8, [x19, #152]
  4143c0:	mov	x9, #0x8                   	// #8
  4143c4:	mul	x8, x9, x8
  4143c8:	add	x9, x19, #0xb8
  4143cc:	add	x8, x9, x8
  4143d0:	ldr	x8, [x8]
  4143d4:	cmp	x8, #0x0
  4143d8:	cset	w10, ne  // ne = any
  4143dc:	str	w10, [x19, #16]
  4143e0:	ldr	w8, [x19, #16]
  4143e4:	tbnz	w8, #0, 4143ec <bus_machine_method_open_shell+0xb18>
  4143e8:	b	414420 <bus_machine_method_open_shell+0xb4c>
  4143ec:	ldr	x0, [x19, #168]
  4143f0:	ldr	x8, [x19, #152]
  4143f4:	mov	x9, #0x8                   	// #8
  4143f8:	mul	x8, x9, x8
  4143fc:	add	x9, x19, #0xb8
  414400:	add	x8, x9, x8
  414404:	ldr	x1, [x8]
  414408:	bl	404f60 <stpcpy@plt>
  41440c:	str	x0, [x19, #168]
  414410:	ldr	x8, [x19, #152]
  414414:	add	x8, x8, #0x1
  414418:	str	x8, [x19, #152]
  41441c:	b	4143a8 <bus_machine_method_open_shell+0xad4>
  414420:	ldr	x8, [x19, #168]
  414424:	mov	w9, #0x0                   	// #0
  414428:	strb	w9, [x8]
  41442c:	ldr	x8, [x19, #176]
  414430:	str	x8, [x19, #128]
  414434:	ldr	x8, [x19, #128]
  414438:	stur	x8, [x29, #-152]
  41443c:	ldur	x0, [x29, #-48]
  414440:	ldur	x4, [x29, #-152]
  414444:	ldur	w7, [x29, #-80]
  414448:	ldur	w9, [x29, #-80]
  41444c:	ldur	w10, [x29, #-80]
  414450:	ldur	x8, [x29, #-160]
  414454:	sub	sp, sp, #0xf0
  414458:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  41445c:	add	x1, x1, #0x893
  414460:	adrp	x2, 41b000 <machine_hash_ops+0x3e8>
  414464:	add	x2, x2, #0xada
  414468:	ldr	x3, [x19, #120]
  41446c:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  414470:	add	x5, x5, #0x8c4
  414474:	ldr	x6, [x19, #112]
  414478:	mov	x11, sp
  41447c:	adrp	x12, 41d000 <machine_hash_ops+0x23e8>
  414480:	add	x12, x12, #0x8e0
  414484:	str	x12, [x11]
  414488:	mov	x11, sp
  41448c:	ldr	x12, [x19, #112]
  414490:	str	x12, [x11, #8]
  414494:	mov	x11, sp
  414498:	str	w9, [x11, #16]
  41449c:	mov	x11, sp
  4144a0:	adrp	x13, 41d000 <machine_hash_ops+0x23e8>
  4144a4:	add	x13, x13, #0x8fd
  4144a8:	str	x13, [x11, #24]
  4144ac:	mov	x11, sp
  4144b0:	str	x12, [x11, #32]
  4144b4:	mov	x11, sp
  4144b8:	str	w10, [x11, #40]
  4144bc:	mov	x11, sp
  4144c0:	adrp	x13, 41d000 <machine_hash_ops+0x23e8>
  4144c4:	add	x13, x13, #0x919
  4144c8:	str	x13, [x11, #48]
  4144cc:	mov	x11, sp
  4144d0:	ldr	x13, [x19, #104]
  4144d4:	str	x13, [x11, #56]
  4144d8:	mov	x11, sp
  4144dc:	mov	w9, #0x1                   	// #1
  4144e0:	str	w9, [x11, #64]
  4144e4:	mov	x11, sp
  4144e8:	adrp	x14, 41d000 <machine_hash_ops+0x23e8>
  4144ec:	add	x14, x14, #0x924
  4144f0:	str	x14, [x11, #72]
  4144f4:	mov	x11, sp
  4144f8:	str	x13, [x11, #80]
  4144fc:	mov	x11, sp
  414500:	str	wzr, [x11, #88]
  414504:	mov	x11, sp
  414508:	adrp	x14, 41d000 <machine_hash_ops+0x23e8>
  41450c:	add	x14, x14, #0x932
  414510:	str	x14, [x11, #96]
  414514:	mov	x11, sp
  414518:	ldr	x14, [x19, #120]
  41451c:	str	x14, [x11, #104]
  414520:	mov	x11, sp
  414524:	adrp	x15, 41d000 <machine_hash_ops+0x23e8>
  414528:	add	x15, x15, #0x93b
  41452c:	str	x15, [x11, #112]
  414530:	mov	x11, sp
  414534:	adrp	x15, 41d000 <machine_hash_ops+0x23e8>
  414538:	add	x15, x15, #0x941
  41453c:	str	x15, [x11, #120]
  414540:	mov	x11, sp
  414544:	str	x13, [x11, #128]
  414548:	mov	x11, sp
  41454c:	str	w9, [x11, #136]
  414550:	mov	x11, sp
  414554:	adrp	x15, 41d000 <machine_hash_ops+0x23e8>
  414558:	add	x15, x15, #0x94a
  41455c:	str	x15, [x11, #144]
  414560:	mov	x11, sp
  414564:	str	x14, [x11, #152]
  414568:	mov	x11, sp
  41456c:	str	x8, [x11, #160]
  414570:	mov	x8, sp
  414574:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  414578:	add	x11, x11, #0x959
  41457c:	str	x11, [x8, #168]
  414580:	mov	x8, sp
  414584:	str	x14, [x8, #176]
  414588:	mov	x8, sp
  41458c:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  414590:	add	x11, x11, #0x962
  414594:	str	x11, [x8, #184]
  414598:	mov	x8, sp
  41459c:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  4145a0:	add	x11, x11, #0x967
  4145a4:	str	x11, [x8, #192]
  4145a8:	mov	x8, sp
  4145ac:	str	x14, [x8, #200]
  4145b0:	mov	x8, sp
  4145b4:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  4145b8:	add	x11, x11, #0x96f
  4145bc:	str	x11, [x8, #208]
  4145c0:	mov	x8, sp
  4145c4:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  4145c8:	add	x11, x11, #0x975
  4145cc:	str	x11, [x8, #216]
  4145d0:	mov	x8, sp
  4145d4:	str	x14, [x8, #224]
  4145d8:	mov	x8, sp
  4145dc:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  4145e0:	add	x11, x11, #0x986
  4145e4:	str	x11, [x8, #232]
  4145e8:	bl	405120 <sd_bus_message_append@plt>
  4145ec:	add	sp, sp, #0xf0
  4145f0:	stur	w0, [x29, #-164]
  4145f4:	ldur	w9, [x29, #-164]
  4145f8:	cmp	w9, #0x0
  4145fc:	cset	w9, ge  // ge = tcont
  414600:	tbnz	w9, #0, 414618 <bus_machine_method_open_shell+0xd44>
  414604:	ldur	w8, [x29, #-164]
  414608:	stur	w8, [x29, #-4]
  41460c:	mov	w8, #0x1                   	// #1
  414610:	stur	w8, [x29, #-168]
  414614:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414618:	ldur	x0, [x29, #-48]
  41461c:	ldur	x8, [x29, #-136]
  414620:	str	x0, [x19, #8]
  414624:	mov	x0, x8
  414628:	bl	411aa4 <isempty>
  41462c:	tbnz	w0, #0, 414634 <bus_machine_method_open_shell+0xd60>
  414630:	b	414640 <bus_machine_method_open_shell+0xd6c>
  414634:	ldr	x8, [x19, #80]
  414638:	str	x8, [x19]
  41463c:	b	414648 <bus_machine_method_open_shell+0xd74>
  414640:	ldur	x8, [x29, #-136]
  414644:	str	x8, [x19]
  414648:	ldr	x8, [x19]
  41464c:	ldr	x0, [x19, #8]
  414650:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414654:	add	x1, x1, #0xaa5
  414658:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41465c:	add	x2, x2, #0x989
  414660:	ldr	x3, [x19, #120]
  414664:	mov	x4, x8
  414668:	bl	405120 <sd_bus_message_append@plt>
  41466c:	stur	w0, [x29, #-164]
  414670:	ldur	w9, [x29, #-164]
  414674:	cmp	w9, #0x0
  414678:	cset	w9, ge  // ge = tcont
  41467c:	tbnz	w9, #0, 414694 <bus_machine_method_open_shell+0xdc0>
  414680:	ldur	w8, [x29, #-164]
  414684:	stur	w8, [x29, #-4]
  414688:	mov	w8, #0x1                   	// #1
  41468c:	stur	w8, [x29, #-168]
  414690:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414694:	ldur	x0, [x29, #-88]
  414698:	bl	414c70 <strv_isempty>
  41469c:	tbnz	w0, #0, 4147e8 <bus_machine_method_open_shell+0xf14>
  4146a0:	ldur	x0, [x29, #-48]
  4146a4:	mov	w1, #0x72                  	// #114
  4146a8:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4146ac:	add	x2, x2, #0x98e
  4146b0:	bl	405130 <sd_bus_message_open_container@plt>
  4146b4:	stur	w0, [x29, #-164]
  4146b8:	ldur	w8, [x29, #-164]
  4146bc:	cmp	w8, #0x0
  4146c0:	cset	w8, ge  // ge = tcont
  4146c4:	tbnz	w8, #0, 4146dc <bus_machine_method_open_shell+0xe08>
  4146c8:	ldur	w8, [x29, #-164]
  4146cc:	stur	w8, [x29, #-4]
  4146d0:	mov	w8, #0x1                   	// #1
  4146d4:	stur	w8, [x29, #-168]
  4146d8:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4146dc:	ldur	x0, [x29, #-48]
  4146e0:	ldr	x1, [x19, #120]
  4146e4:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4146e8:	add	x2, x2, #0x991
  4146ec:	bl	405120 <sd_bus_message_append@plt>
  4146f0:	stur	w0, [x29, #-164]
  4146f4:	ldur	w8, [x29, #-164]
  4146f8:	cmp	w8, #0x0
  4146fc:	cset	w8, ge  // ge = tcont
  414700:	tbnz	w8, #0, 414718 <bus_machine_method_open_shell+0xe44>
  414704:	ldur	w8, [x29, #-164]
  414708:	stur	w8, [x29, #-4]
  41470c:	mov	w8, #0x1                   	// #1
  414710:	stur	w8, [x29, #-168]
  414714:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414718:	ldur	x0, [x29, #-48]
  41471c:	mov	w1, #0x76                  	// #118
  414720:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  414724:	add	x2, x2, #0x99d
  414728:	bl	405130 <sd_bus_message_open_container@plt>
  41472c:	stur	w0, [x29, #-164]
  414730:	ldur	w8, [x29, #-164]
  414734:	cmp	w8, #0x0
  414738:	cset	w8, ge  // ge = tcont
  41473c:	tbnz	w8, #0, 414754 <bus_machine_method_open_shell+0xe80>
  414740:	ldur	w8, [x29, #-164]
  414744:	stur	w8, [x29, #-4]
  414748:	mov	w8, #0x1                   	// #1
  41474c:	stur	w8, [x29, #-168]
  414750:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414754:	ldur	x0, [x29, #-48]
  414758:	ldur	x1, [x29, #-88]
  41475c:	bl	405690 <sd_bus_message_append_strv@plt>
  414760:	stur	w0, [x29, #-164]
  414764:	ldur	w8, [x29, #-164]
  414768:	cmp	w8, #0x0
  41476c:	cset	w8, ge  // ge = tcont
  414770:	tbnz	w8, #0, 414788 <bus_machine_method_open_shell+0xeb4>
  414774:	ldur	w8, [x29, #-164]
  414778:	stur	w8, [x29, #-4]
  41477c:	mov	w8, #0x1                   	// #1
  414780:	stur	w8, [x29, #-168]
  414784:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414788:	ldur	x0, [x29, #-48]
  41478c:	bl	405150 <sd_bus_message_close_container@plt>
  414790:	stur	w0, [x29, #-164]
  414794:	ldur	w8, [x29, #-164]
  414798:	cmp	w8, #0x0
  41479c:	cset	w8, ge  // ge = tcont
  4147a0:	tbnz	w8, #0, 4147b8 <bus_machine_method_open_shell+0xee4>
  4147a4:	ldur	w8, [x29, #-164]
  4147a8:	stur	w8, [x29, #-4]
  4147ac:	mov	w8, #0x1                   	// #1
  4147b0:	stur	w8, [x29, #-168]
  4147b4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4147b8:	ldur	x0, [x29, #-48]
  4147bc:	bl	405150 <sd_bus_message_close_container@plt>
  4147c0:	stur	w0, [x29, #-164]
  4147c4:	ldur	w8, [x29, #-164]
  4147c8:	cmp	w8, #0x0
  4147cc:	cset	w8, ge  // ge = tcont
  4147d0:	tbnz	w8, #0, 4147e8 <bus_machine_method_open_shell+0xf14>
  4147d4:	ldur	w8, [x29, #-164]
  4147d8:	stur	w8, [x29, #-4]
  4147dc:	mov	w8, #0x1                   	// #1
  4147e0:	stur	w8, [x29, #-168]
  4147e4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4147e8:	ldur	x0, [x29, #-48]
  4147ec:	mov	w1, #0x72                  	// #114
  4147f0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4147f4:	add	x2, x2, #0x98e
  4147f8:	bl	405130 <sd_bus_message_open_container@plt>
  4147fc:	stur	w0, [x29, #-164]
  414800:	ldur	w8, [x29, #-164]
  414804:	cmp	w8, #0x0
  414808:	cset	w8, ge  // ge = tcont
  41480c:	tbnz	w8, #0, 414824 <bus_machine_method_open_shell+0xf50>
  414810:	ldur	w8, [x29, #-164]
  414814:	stur	w8, [x29, #-4]
  414818:	mov	w8, #0x1                   	// #1
  41481c:	stur	w8, [x29, #-168]
  414820:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414824:	ldur	x0, [x29, #-48]
  414828:	ldr	x1, [x19, #120]
  41482c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  414830:	add	x2, x2, #0x9a0
  414834:	bl	405120 <sd_bus_message_append@plt>
  414838:	stur	w0, [x29, #-164]
  41483c:	ldur	w8, [x29, #-164]
  414840:	cmp	w8, #0x0
  414844:	cset	w8, ge  // ge = tcont
  414848:	tbnz	w8, #0, 414860 <bus_machine_method_open_shell+0xf8c>
  41484c:	ldur	w8, [x29, #-164]
  414850:	stur	w8, [x29, #-4]
  414854:	mov	w8, #0x1                   	// #1
  414858:	stur	w8, [x29, #-168]
  41485c:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414860:	ldur	x0, [x29, #-48]
  414864:	mov	w1, #0x76                  	// #118
  414868:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41486c:	add	x2, x2, #0x9aa
  414870:	bl	405130 <sd_bus_message_open_container@plt>
  414874:	stur	w0, [x29, #-164]
  414878:	ldur	w8, [x29, #-164]
  41487c:	cmp	w8, #0x0
  414880:	cset	w8, ge  // ge = tcont
  414884:	tbnz	w8, #0, 41489c <bus_machine_method_open_shell+0xfc8>
  414888:	ldur	w8, [x29, #-164]
  41488c:	stur	w8, [x29, #-4]
  414890:	mov	w8, #0x1                   	// #1
  414894:	stur	w8, [x29, #-168]
  414898:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  41489c:	ldur	x0, [x29, #-48]
  4148a0:	mov	w1, #0x61                  	// #97
  4148a4:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4148a8:	add	x2, x2, #0x9b2
  4148ac:	bl	405130 <sd_bus_message_open_container@plt>
  4148b0:	stur	w0, [x29, #-164]
  4148b4:	ldur	w8, [x29, #-164]
  4148b8:	cmp	w8, #0x0
  4148bc:	cset	w8, ge  // ge = tcont
  4148c0:	tbnz	w8, #0, 4148d8 <bus_machine_method_open_shell+0x1004>
  4148c4:	ldur	w8, [x29, #-164]
  4148c8:	stur	w8, [x29, #-4]
  4148cc:	mov	w8, #0x1                   	// #1
  4148d0:	stur	w8, [x29, #-168]
  4148d4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4148d8:	ldur	x0, [x29, #-48]
  4148dc:	mov	w1, #0x72                  	// #114
  4148e0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4148e4:	add	x2, x2, #0x9b9
  4148e8:	bl	405130 <sd_bus_message_open_container@plt>
  4148ec:	stur	w0, [x29, #-164]
  4148f0:	ldur	w8, [x29, #-164]
  4148f4:	cmp	w8, #0x0
  4148f8:	cset	w8, ge  // ge = tcont
  4148fc:	tbnz	w8, #0, 414914 <bus_machine_method_open_shell+0x1040>
  414900:	ldur	w8, [x29, #-164]
  414904:	stur	w8, [x29, #-4]
  414908:	mov	w8, #0x1                   	// #1
  41490c:	stur	w8, [x29, #-168]
  414910:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414914:	ldur	x0, [x29, #-48]
  414918:	ldur	x2, [x29, #-144]
  41491c:	ldr	x1, [x19, #120]
  414920:	bl	405120 <sd_bus_message_append@plt>
  414924:	stur	w0, [x29, #-164]
  414928:	ldur	w8, [x29, #-164]
  41492c:	cmp	w8, #0x0
  414930:	cset	w8, ge  // ge = tcont
  414934:	tbnz	w8, #0, 41494c <bus_machine_method_open_shell+0x1078>
  414938:	ldur	w8, [x29, #-164]
  41493c:	stur	w8, [x29, #-4]
  414940:	mov	w8, #0x1                   	// #1
  414944:	stur	w8, [x29, #-168]
  414948:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  41494c:	ldur	x0, [x29, #-48]
  414950:	ldur	x1, [x29, #-104]
  414954:	bl	405690 <sd_bus_message_append_strv@plt>
  414958:	stur	w0, [x29, #-164]
  41495c:	ldur	w8, [x29, #-164]
  414960:	cmp	w8, #0x0
  414964:	cset	w8, ge  // ge = tcont
  414968:	tbnz	w8, #0, 414980 <bus_machine_method_open_shell+0x10ac>
  41496c:	ldur	w8, [x29, #-164]
  414970:	stur	w8, [x29, #-4]
  414974:	mov	w8, #0x1                   	// #1
  414978:	stur	w8, [x29, #-168]
  41497c:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414980:	ldur	x0, [x29, #-48]
  414984:	ldr	x1, [x19, #104]
  414988:	mov	w2, #0x1                   	// #1
  41498c:	bl	405120 <sd_bus_message_append@plt>
  414990:	stur	w0, [x29, #-164]
  414994:	ldur	w8, [x29, #-164]
  414998:	cmp	w8, #0x0
  41499c:	cset	w8, ge  // ge = tcont
  4149a0:	tbnz	w8, #0, 4149b8 <bus_machine_method_open_shell+0x10e4>
  4149a4:	ldur	w8, [x29, #-164]
  4149a8:	stur	w8, [x29, #-4]
  4149ac:	mov	w8, #0x1                   	// #1
  4149b0:	stur	w8, [x29, #-168]
  4149b4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4149b8:	ldur	x0, [x29, #-48]
  4149bc:	bl	405150 <sd_bus_message_close_container@plt>
  4149c0:	stur	w0, [x29, #-164]
  4149c4:	ldur	w8, [x29, #-164]
  4149c8:	cmp	w8, #0x0
  4149cc:	cset	w8, ge  // ge = tcont
  4149d0:	tbnz	w8, #0, 4149e8 <bus_machine_method_open_shell+0x1114>
  4149d4:	ldur	w8, [x29, #-164]
  4149d8:	stur	w8, [x29, #-4]
  4149dc:	mov	w8, #0x1                   	// #1
  4149e0:	stur	w8, [x29, #-168]
  4149e4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  4149e8:	ldur	x0, [x29, #-48]
  4149ec:	bl	405150 <sd_bus_message_close_container@plt>
  4149f0:	stur	w0, [x29, #-164]
  4149f4:	ldur	w8, [x29, #-164]
  4149f8:	cmp	w8, #0x0
  4149fc:	cset	w8, ge  // ge = tcont
  414a00:	tbnz	w8, #0, 414a18 <bus_machine_method_open_shell+0x1144>
  414a04:	ldur	w8, [x29, #-164]
  414a08:	stur	w8, [x29, #-4]
  414a0c:	mov	w8, #0x1                   	// #1
  414a10:	stur	w8, [x29, #-168]
  414a14:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414a18:	ldur	x0, [x29, #-48]
  414a1c:	bl	405150 <sd_bus_message_close_container@plt>
  414a20:	stur	w0, [x29, #-164]
  414a24:	ldur	w8, [x29, #-164]
  414a28:	cmp	w8, #0x0
  414a2c:	cset	w8, ge  // ge = tcont
  414a30:	tbnz	w8, #0, 414a48 <bus_machine_method_open_shell+0x1174>
  414a34:	ldur	w8, [x29, #-164]
  414a38:	stur	w8, [x29, #-4]
  414a3c:	mov	w8, #0x1                   	// #1
  414a40:	stur	w8, [x29, #-168]
  414a44:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414a48:	ldur	x0, [x29, #-48]
  414a4c:	bl	405150 <sd_bus_message_close_container@plt>
  414a50:	stur	w0, [x29, #-164]
  414a54:	ldur	w8, [x29, #-164]
  414a58:	cmp	w8, #0x0
  414a5c:	cset	w8, ge  // ge = tcont
  414a60:	tbnz	w8, #0, 414a78 <bus_machine_method_open_shell+0x11a4>
  414a64:	ldur	w8, [x29, #-164]
  414a68:	stur	w8, [x29, #-4]
  414a6c:	mov	w8, #0x1                   	// #1
  414a70:	stur	w8, [x29, #-168]
  414a74:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414a78:	ldur	x0, [x29, #-48]
  414a7c:	bl	405150 <sd_bus_message_close_container@plt>
  414a80:	stur	w0, [x29, #-164]
  414a84:	ldur	w8, [x29, #-164]
  414a88:	cmp	w8, #0x0
  414a8c:	cset	w8, ge  // ge = tcont
  414a90:	tbnz	w8, #0, 414aa8 <bus_machine_method_open_shell+0x11d4>
  414a94:	ldur	w8, [x29, #-164]
  414a98:	stur	w8, [x29, #-4]
  414a9c:	mov	w8, #0x1                   	// #1
  414aa0:	stur	w8, [x29, #-168]
  414aa4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414aa8:	ldur	x0, [x29, #-48]
  414aac:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414ab0:	add	x1, x1, #0xb3f
  414ab4:	mov	w8, wzr
  414ab8:	mov	w2, w8
  414abc:	bl	405120 <sd_bus_message_append@plt>
  414ac0:	stur	w0, [x29, #-164]
  414ac4:	ldur	w8, [x29, #-164]
  414ac8:	cmp	w8, #0x0
  414acc:	cset	w8, ge  // ge = tcont
  414ad0:	tbnz	w8, #0, 414ae8 <bus_machine_method_open_shell+0x1214>
  414ad4:	ldur	w8, [x29, #-164]
  414ad8:	stur	w8, [x29, #-4]
  414adc:	mov	w8, #0x1                   	// #1
  414ae0:	stur	w8, [x29, #-168]
  414ae4:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414ae8:	ldur	x0, [x29, #-72]
  414aec:	ldur	x1, [x29, #-48]
  414af0:	ldur	x3, [x29, #-32]
  414af4:	mov	x8, xzr
  414af8:	mov	x2, x8
  414afc:	mov	x4, x8
  414b00:	bl	405160 <sd_bus_call@plt>
  414b04:	stur	w0, [x29, #-164]
  414b08:	ldur	w9, [x29, #-164]
  414b0c:	cmp	w9, #0x0
  414b10:	cset	w9, ge  // ge = tcont
  414b14:	tbnz	w9, #0, 414b2c <bus_machine_method_open_shell+0x1258>
  414b18:	ldur	w8, [x29, #-164]
  414b1c:	stur	w8, [x29, #-4]
  414b20:	mov	w8, #0x1                   	// #1
  414b24:	stur	w8, [x29, #-168]
  414b28:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414b2c:	ldur	w0, [x29, #-80]
  414b30:	bl	4052c0 <safe_close@plt>
  414b34:	stur	w0, [x29, #-80]
  414b38:	ldur	x0, [x29, #-16]
  414b3c:	sub	x1, x29, #0x28
  414b40:	bl	405200 <sd_bus_message_new_method_return@plt>
  414b44:	stur	w0, [x29, #-164]
  414b48:	ldur	w8, [x29, #-164]
  414b4c:	cmp	w8, #0x0
  414b50:	cset	w8, ge  // ge = tcont
  414b54:	tbnz	w8, #0, 414b6c <bus_machine_method_open_shell+0x1298>
  414b58:	ldur	w8, [x29, #-164]
  414b5c:	stur	w8, [x29, #-4]
  414b60:	mov	w8, #0x1                   	// #1
  414b64:	stur	w8, [x29, #-168]
  414b68:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414b6c:	ldur	x0, [x29, #-40]
  414b70:	ldur	w2, [x29, #-76]
  414b74:	ldur	x3, [x29, #-56]
  414b78:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414b7c:	add	x1, x1, #0xd05
  414b80:	bl	405120 <sd_bus_message_append@plt>
  414b84:	stur	w0, [x29, #-164]
  414b88:	ldur	w8, [x29, #-164]
  414b8c:	cmp	w8, #0x0
  414b90:	cset	w8, ge  // ge = tcont
  414b94:	tbnz	w8, #0, 414bac <bus_machine_method_open_shell+0x12d8>
  414b98:	ldur	w8, [x29, #-164]
  414b9c:	stur	w8, [x29, #-4]
  414ba0:	mov	w8, #0x1                   	// #1
  414ba4:	stur	w8, [x29, #-168]
  414ba8:	b	414bcc <bus_machine_method_open_shell+0x12f8>
  414bac:	ldur	x1, [x29, #-40]
  414bb0:	mov	x8, xzr
  414bb4:	mov	x0, x8
  414bb8:	mov	x2, x8
  414bbc:	bl	405220 <sd_bus_send@plt>
  414bc0:	stur	w0, [x29, #-4]
  414bc4:	mov	w9, #0x1                   	// #1
  414bc8:	stur	w9, [x29, #-168]
  414bcc:	sub	x0, x29, #0x68
  414bd0:	bl	412d08 <strv_freep>
  414bd4:	sub	x0, x29, #0x60
  414bd8:	bl	412d08 <strv_freep>
  414bdc:	sub	x0, x29, #0x58
  414be0:	bl	412d08 <strv_freep>
  414be4:	sub	x0, x29, #0x50
  414be8:	bl	412770 <closep>
  414bec:	sub	x0, x29, #0x4c
  414bf0:	bl	412770 <closep>
  414bf4:	sub	x0, x29, #0x40
  414bf8:	bl	413614 <sd_bus_flush_close_unrefp>
  414bfc:	sub	x0, x29, #0x38
  414c00:	bl	412648 <freep>
  414c04:	sub	x0, x29, #0x30
  414c08:	bl	412614 <sd_bus_message_unrefp>
  414c0c:	sub	x0, x29, #0x28
  414c10:	bl	412614 <sd_bus_message_unrefp>
  414c14:	ldur	w0, [x29, #-4]
  414c18:	mov	sp, x29
  414c1c:	ldp	x28, x19, [sp, #16]
  414c20:	ldp	x29, x30, [sp], #32
  414c24:	ret

0000000000414c28 <empty_to_null>:
  414c28:	sub	sp, sp, #0x20
  414c2c:	stp	x29, x30, [sp, #16]
  414c30:	add	x29, sp, #0x10
  414c34:	str	x0, [sp, #8]
  414c38:	ldr	x0, [sp, #8]
  414c3c:	bl	411aa4 <isempty>
  414c40:	tbnz	w0, #0, 414c48 <empty_to_null+0x20>
  414c44:	b	414c54 <empty_to_null+0x2c>
  414c48:	mov	x8, xzr
  414c4c:	str	x8, [sp]
  414c50:	b	414c5c <empty_to_null+0x34>
  414c54:	ldr	x8, [sp, #8]
  414c58:	str	x8, [sp]
  414c5c:	ldr	x8, [sp]
  414c60:	mov	x0, x8
  414c64:	ldp	x29, x30, [sp, #16]
  414c68:	add	sp, sp, #0x20
  414c6c:	ret

0000000000414c70 <strv_isempty>:
  414c70:	sub	sp, sp, #0x10
  414c74:	str	x0, [sp, #8]
  414c78:	ldr	x8, [sp, #8]
  414c7c:	mov	w9, #0x1                   	// #1
  414c80:	str	w9, [sp, #4]
  414c84:	cbz	x8, 414ca0 <strv_isempty+0x30>
  414c88:	ldr	x8, [sp, #8]
  414c8c:	ldr	x8, [x8]
  414c90:	cmp	x8, #0x0
  414c94:	cset	w9, ne  // ne = any
  414c98:	eor	w9, w9, #0x1
  414c9c:	str	w9, [sp, #4]
  414ca0:	ldr	w8, [sp, #4]
  414ca4:	and	w0, w8, #0x1
  414ca8:	add	sp, sp, #0x10
  414cac:	ret

0000000000414cb0 <bus_machine_method_bind_mount>:
  414cb0:	stp	x29, x30, [sp, #-32]!
  414cb4:	stp	x28, x19, [sp, #16]
  414cb8:	mov	x29, sp
  414cbc:	sub	sp, sp, #0x390
  414cc0:	mov	x19, sp
  414cc4:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  414cc8:	add	x8, x8, #0xb48
  414ccc:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  414cd0:	add	x9, x9, #0x9be
  414cd4:	mov	w10, #0x0                   	// #0
  414cd8:	mov	x11, xzr
  414cdc:	adrp	x12, 41b000 <machine_hash_ops+0x3e8>
  414ce0:	add	x12, x12, #0x508
  414ce4:	adrp	x13, 41d000 <machine_hash_ops+0x23e8>
  414ce8:	add	x13, x13, #0x21c
  414cec:	add	x13, x13, #0x3
  414cf0:	adrp	x14, 41d000 <machine_hash_ops+0x23e8>
  414cf4:	add	x14, x14, #0x9d4
  414cf8:	adrp	x15, 41b000 <machine_hash_ops+0x3e8>
  414cfc:	add	x15, x15, #0x4dd
  414d00:	adrp	x16, 41d000 <machine_hash_ops+0x23e8>
  414d04:	add	x16, x16, #0xd1c
  414d08:	adrp	x17, 41c000 <machine_hash_ops+0x13e8>
  414d0c:	add	x17, x17, #0xb63
  414d10:	sub	x18, x29, #0x40
  414d14:	stur	x0, [x29, #-16]
  414d18:	stur	x1, [x29, #-24]
  414d1c:	stur	x2, [x29, #-32]
  414d20:	ldr	x8, [x8]
  414d24:	stur	x8, [x29, #-40]
  414d28:	ldr	q0, [x9]
  414d2c:	stur	q0, [x29, #-64]
  414d30:	ldur	x8, [x9, #14]
  414d34:	stur	x8, [x18, #14]
  414d38:	sturb	w10, [x29, #-89]
  414d3c:	sturb	w10, [x29, #-90]
  414d40:	sturb	w10, [x29, #-91]
  414d44:	sturb	w10, [x29, #-92]
  414d48:	sturb	w10, [x29, #-93]
  414d4c:	sturb	w10, [x29, #-94]
  414d50:	stur	x11, [x29, #-104]
  414d54:	ldur	x8, [x29, #-24]
  414d58:	stur	x8, [x29, #-136]
  414d5c:	str	x12, [x19, #208]
  414d60:	str	x13, [x19, #200]
  414d64:	str	x14, [x19, #192]
  414d68:	str	x15, [x19, #184]
  414d6c:	str	x16, [x19, #176]
  414d70:	str	x17, [x19, #168]
  414d74:	ldur	x8, [x29, #-16]
  414d78:	cmp	x8, #0x0
  414d7c:	cset	w9, ne  // ne = any
  414d80:	mov	w10, #0x1                   	// #1
  414d84:	eor	w9, w9, #0x1
  414d88:	eor	w9, w9, w10
  414d8c:	eor	w9, w9, w10
  414d90:	and	w9, w9, #0x1
  414d94:	mov	w0, w9
  414d98:	sxtw	x8, w0
  414d9c:	cbz	x8, 414dc0 <bus_machine_method_bind_mount+0x110>
  414da0:	mov	w8, wzr
  414da4:	mov	w0, w8
  414da8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  414dac:	add	x1, x1, #0xebd
  414db0:	ldr	x2, [x19, #200]
  414db4:	mov	w3, #0x33e                 	// #830
  414db8:	ldr	x4, [x19, #192]
  414dbc:	bl	404bd0 <log_assert_failed_realm@plt>
  414dc0:	ldur	x8, [x29, #-136]
  414dc4:	cmp	x8, #0x0
  414dc8:	cset	w9, ne  // ne = any
  414dcc:	mov	w10, #0x1                   	// #1
  414dd0:	eor	w9, w9, #0x1
  414dd4:	eor	w9, w9, w10
  414dd8:	eor	w9, w9, w10
  414ddc:	and	w9, w9, #0x1
  414de0:	mov	w0, w9
  414de4:	sxtw	x8, w0
  414de8:	cbz	x8, 414e0c <bus_machine_method_bind_mount+0x15c>
  414dec:	mov	w8, wzr
  414df0:	mov	w0, w8
  414df4:	adrp	x1, 41a000 <operation_new+0x40>
  414df8:	add	x1, x1, #0xe18
  414dfc:	ldr	x2, [x19, #200]
  414e00:	mov	w3, #0x33f                 	// #831
  414e04:	ldr	x4, [x19, #192]
  414e08:	bl	404bd0 <log_assert_failed_realm@plt>
  414e0c:	ldur	x8, [x29, #-136]
  414e10:	ldr	w9, [x8, #32]
  414e14:	cbz	w9, 414e3c <bus_machine_method_bind_mount+0x18c>
  414e18:	ldur	x0, [x29, #-32]
  414e1c:	ldr	x1, [x19, #168]
  414e20:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  414e24:	add	x2, x2, #0xa20
  414e28:	bl	4051b0 <sd_bus_error_setf@plt>
  414e2c:	stur	w0, [x29, #-4]
  414e30:	mov	w8, #0x1                   	// #1
  414e34:	str	w8, [x19, #632]
  414e38:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414e3c:	ldur	x0, [x29, #-16]
  414e40:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  414e44:	add	x1, x1, #0xa57
  414e48:	sub	x2, x29, #0x80
  414e4c:	sub	x3, x29, #0x78
  414e50:	sub	x4, x29, #0x6c
  414e54:	sub	x5, x29, #0x70
  414e58:	bl	405170 <sd_bus_message_read@plt>
  414e5c:	str	w0, [x19, #636]
  414e60:	ldr	w8, [x19, #636]
  414e64:	cmp	w8, #0x0
  414e68:	cset	w8, ge  // ge = tcont
  414e6c:	tbnz	w8, #0, 414e84 <bus_machine_method_bind_mount+0x1d4>
  414e70:	ldr	w8, [x19, #636]
  414e74:	stur	w8, [x29, #-4]
  414e78:	mov	w8, #0x1                   	// #1
  414e7c:	str	w8, [x19, #632]
  414e80:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414e84:	ldur	x0, [x29, #-128]
  414e88:	bl	405450 <path_is_absolute@plt>
  414e8c:	tbnz	w0, #0, 414e94 <bus_machine_method_bind_mount+0x1e4>
  414e90:	b	414ea0 <bus_machine_method_bind_mount+0x1f0>
  414e94:	ldur	x0, [x29, #-128]
  414e98:	bl	4056a0 <path_is_normalized@plt>
  414e9c:	tbnz	w0, #0, 414ec8 <bus_machine_method_bind_mount+0x218>
  414ea0:	ldur	x0, [x29, #-32]
  414ea4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  414ea8:	add	x1, x1, #0x848
  414eac:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  414eb0:	add	x2, x2, #0xa5c
  414eb4:	bl	4051b0 <sd_bus_error_setf@plt>
  414eb8:	stur	w0, [x29, #-4]
  414ebc:	mov	w8, #0x1                   	// #1
  414ec0:	str	w8, [x19, #632]
  414ec4:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414ec8:	ldur	x0, [x29, #-120]
  414ecc:	bl	411aa4 <isempty>
  414ed0:	tbnz	w0, #0, 414ed8 <bus_machine_method_bind_mount+0x228>
  414ed4:	b	414ee4 <bus_machine_method_bind_mount+0x234>
  414ed8:	ldur	x8, [x29, #-128]
  414edc:	stur	x8, [x29, #-120]
  414ee0:	b	414f28 <bus_machine_method_bind_mount+0x278>
  414ee4:	ldur	x0, [x29, #-120]
  414ee8:	bl	405450 <path_is_absolute@plt>
  414eec:	tbnz	w0, #0, 414ef4 <bus_machine_method_bind_mount+0x244>
  414ef0:	b	414f00 <bus_machine_method_bind_mount+0x250>
  414ef4:	ldur	x0, [x29, #-120]
  414ef8:	bl	4056a0 <path_is_normalized@plt>
  414efc:	tbnz	w0, #0, 414f28 <bus_machine_method_bind_mount+0x278>
  414f00:	ldur	x0, [x29, #-32]
  414f04:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  414f08:	add	x1, x1, #0x848
  414f0c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  414f10:	add	x2, x2, #0xa8e
  414f14:	bl	4051b0 <sd_bus_error_setf@plt>
  414f18:	stur	w0, [x29, #-4]
  414f1c:	mov	w8, #0x1                   	// #1
  414f20:	str	w8, [x19, #632]
  414f24:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414f28:	ldur	x0, [x29, #-16]
  414f2c:	ldur	x8, [x29, #-136]
  414f30:	ldr	x8, [x8]
  414f34:	add	x6, x8, #0x28
  414f38:	ldur	x7, [x29, #-32]
  414f3c:	mov	w1, #0x15                  	// #21
  414f40:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  414f44:	add	x2, x2, #0xb3a
  414f48:	mov	x8, xzr
  414f4c:	mov	x3, x8
  414f50:	mov	w9, wzr
  414f54:	and	w4, w9, #0x1
  414f58:	mov	w5, #0xffffffff            	// #-1
  414f5c:	bl	405250 <bus_verify_polkit_async@plt>
  414f60:	str	w0, [x19, #636]
  414f64:	ldr	w9, [x19, #636]
  414f68:	cmp	w9, #0x0
  414f6c:	cset	w9, ge  // ge = tcont
  414f70:	tbnz	w9, #0, 414f88 <bus_machine_method_bind_mount+0x2d8>
  414f74:	ldr	w8, [x19, #636]
  414f78:	stur	w8, [x29, #-4]
  414f7c:	mov	w8, #0x1                   	// #1
  414f80:	str	w8, [x19, #632]
  414f84:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414f88:	ldr	w8, [x19, #636]
  414f8c:	cbnz	w8, 414fa0 <bus_machine_method_bind_mount+0x2f0>
  414f90:	mov	w8, #0x1                   	// #1
  414f94:	stur	w8, [x29, #-4]
  414f98:	str	w8, [x19, #632]
  414f9c:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414fa0:	ldur	x0, [x29, #-136]
  414fa4:	add	x1, x19, #0x280
  414fa8:	bl	40a580 <machine_get_uid_shift>
  414fac:	str	w0, [x19, #636]
  414fb0:	ldr	w8, [x19, #636]
  414fb4:	cmp	w8, #0x0
  414fb8:	cset	w8, ge  // ge = tcont
  414fbc:	tbnz	w8, #0, 414fd4 <bus_machine_method_bind_mount+0x324>
  414fc0:	ldr	w8, [x19, #636]
  414fc4:	stur	w8, [x29, #-4]
  414fc8:	mov	w8, #0x1                   	// #1
  414fcc:	str	w8, [x19, #632]
  414fd0:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  414fd4:	ldr	w8, [x19, #640]
  414fd8:	cbz	w8, 415000 <bus_machine_method_bind_mount+0x350>
  414fdc:	ldur	x0, [x29, #-32]
  414fe0:	ldr	x1, [x19, #168]
  414fe4:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  414fe8:	add	x2, x2, #0xac5
  414fec:	bl	4051b0 <sd_bus_error_setf@plt>
  414ff0:	stur	w0, [x29, #-4]
  414ff4:	mov	w8, #0x1                   	// #1
  414ff8:	str	w8, [x19, #632]
  414ffc:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  415000:	add	x8, x19, #0x260
  415004:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  415008:	add	x9, x9, #0xb02
  41500c:	str	x9, [x19, #608]
  415010:	ldur	x9, [x29, #-136]
  415014:	ldr	x9, [x9, #8]
  415018:	str	x9, [x8, #8]
  41501c:	adrp	x9, 41b000 <machine_hash_ops+0x3e8>
  415020:	add	x9, x9, #0x2c8
  415024:	str	x9, [x8, #16]
  415028:	str	xzr, [x19, #584]
  41502c:	str	xzr, [x19, #576]
  415030:	ldr	x8, [x19, #576]
  415034:	mov	w9, #0x0                   	// #0
  415038:	cmp	x8, #0x3
  41503c:	str	w9, [x19, #164]
  415040:	b.cs	415068 <bus_machine_method_bind_mount+0x3b8>  // b.hs, b.nlast
  415044:	ldr	x8, [x19, #576]
  415048:	mov	x9, #0x8                   	// #8
  41504c:	mul	x8, x9, x8
  415050:	add	x9, x19, #0x260
  415054:	add	x8, x9, x8
  415058:	ldr	x8, [x8]
  41505c:	cmp	x8, #0x0
  415060:	cset	w10, ne  // ne = any
  415064:	str	w10, [x19, #164]
  415068:	ldr	w8, [x19, #164]
  41506c:	tbnz	w8, #0, 415074 <bus_machine_method_bind_mount+0x3c4>
  415070:	b	4150ac <bus_machine_method_bind_mount+0x3fc>
  415074:	ldr	x8, [x19, #576]
  415078:	mov	x9, #0x8                   	// #8
  41507c:	mul	x8, x9, x8
  415080:	add	x9, x19, #0x260
  415084:	add	x8, x9, x8
  415088:	ldr	x0, [x8]
  41508c:	bl	404e00 <strlen@plt>
  415090:	ldr	x8, [x19, #584]
  415094:	add	x8, x8, x0
  415098:	str	x8, [x19, #584]
  41509c:	ldr	x8, [x19, #576]
  4150a0:	add	x8, x8, #0x1
  4150a4:	str	x8, [x19, #576]
  4150a8:	b	415030 <bus_machine_method_bind_mount+0x380>
  4150ac:	ldr	x8, [x19, #584]
  4150b0:	add	x8, x8, #0x1
  4150b4:	str	x8, [x19, #568]
  4150b8:	ldr	x1, [x19, #568]
  4150bc:	mov	x0, #0x1                   	// #1
  4150c0:	bl	412798 <size_multiply_overflow>
  4150c4:	mov	w8, #0x1                   	// #1
  4150c8:	eor	w9, w0, #0x1
  4150cc:	eor	w9, w9, w8
  4150d0:	eor	w9, w9, w8
  4150d4:	eor	w8, w9, w8
  4150d8:	and	w8, w8, #0x1
  4150dc:	mov	w1, w8
  4150e0:	sxtw	x10, w1
  4150e4:	cbz	x10, 415104 <bus_machine_method_bind_mount+0x454>
  4150e8:	mov	w8, wzr
  4150ec:	mov	w0, w8
  4150f0:	ldr	x1, [x19, #184]
  4150f4:	ldr	x2, [x19, #200]
  4150f8:	mov	w3, #0x368                 	// #872
  4150fc:	ldr	x4, [x19, #192]
  415100:	bl	404bd0 <log_assert_failed_realm@plt>
  415104:	ldr	x8, [x19, #568]
  415108:	mov	x9, #0x1                   	// #1
  41510c:	mul	x8, x9, x8
  415110:	cmp	x8, #0x400, lsl #12
  415114:	cset	w10, ls  // ls = plast
  415118:	mov	w11, #0x1                   	// #1
  41511c:	eor	w10, w10, #0x1
  415120:	eor	w10, w10, w11
  415124:	eor	w10, w10, w11
  415128:	and	w10, w10, #0x1
  41512c:	mov	w0, w10
  415130:	sxtw	x8, w0
  415134:	cbz	x8, 415154 <bus_machine_method_bind_mount+0x4a4>
  415138:	mov	w8, wzr
  41513c:	mov	w0, w8
  415140:	ldr	x1, [x19, #208]
  415144:	ldr	x2, [x19, #200]
  415148:	mov	w3, #0x368                 	// #872
  41514c:	ldr	x4, [x19, #192]
  415150:	bl	404bd0 <log_assert_failed_realm@plt>
  415154:	ldr	x8, [x19, #568]
  415158:	mov	x9, #0x1                   	// #1
  41515c:	mul	x8, x9, x8
  415160:	mul	x8, x8, x9
  415164:	add	x8, x8, #0xf
  415168:	and	x8, x8, #0xfffffffffffffff0
  41516c:	mov	x9, sp
  415170:	subs	x8, x9, x8
  415174:	mov	sp, x8
  415178:	str	x8, [x19, #560]
  41517c:	ldr	x8, [x19, #560]
  415180:	str	x8, [x19, #600]
  415184:	str	x8, [x19, #592]
  415188:	str	xzr, [x19, #576]
  41518c:	ldr	x8, [x19, #576]
  415190:	mov	w9, #0x0                   	// #0
  415194:	cmp	x8, #0x3
  415198:	str	w9, [x19, #160]
  41519c:	b.cs	4151c4 <bus_machine_method_bind_mount+0x514>  // b.hs, b.nlast
  4151a0:	ldr	x8, [x19, #576]
  4151a4:	mov	x9, #0x8                   	// #8
  4151a8:	mul	x8, x9, x8
  4151ac:	add	x9, x19, #0x260
  4151b0:	add	x8, x9, x8
  4151b4:	ldr	x8, [x8]
  4151b8:	cmp	x8, #0x0
  4151bc:	cset	w10, ne  // ne = any
  4151c0:	str	w10, [x19, #160]
  4151c4:	ldr	w8, [x19, #160]
  4151c8:	tbnz	w8, #0, 4151d0 <bus_machine_method_bind_mount+0x520>
  4151cc:	b	415204 <bus_machine_method_bind_mount+0x554>
  4151d0:	ldr	x0, [x19, #592]
  4151d4:	ldr	x8, [x19, #576]
  4151d8:	mov	x9, #0x8                   	// #8
  4151dc:	mul	x8, x9, x8
  4151e0:	add	x9, x19, #0x260
  4151e4:	add	x8, x9, x8
  4151e8:	ldr	x1, [x8]
  4151ec:	bl	404f60 <stpcpy@plt>
  4151f0:	str	x0, [x19, #592]
  4151f4:	ldr	x8, [x19, #576]
  4151f8:	add	x8, x8, #0x1
  4151fc:	str	x8, [x19, #576]
  415200:	b	41518c <bus_machine_method_bind_mount+0x4dc>
  415204:	ldr	x8, [x19, #592]
  415208:	mov	w9, #0x0                   	// #0
  41520c:	strb	w9, [x8]
  415210:	ldr	x8, [x19, #600]
  415214:	str	x8, [x19, #552]
  415218:	ldr	x8, [x19, #552]
  41521c:	stur	x8, [x29, #-88]
  415220:	ldur	x1, [x29, #-88]
  415224:	mov	w0, #0xffffff9c            	// #-100
  415228:	mov	w9, wzr
  41522c:	mov	w2, w9
  415230:	mov	w3, #0x100                 	// #256
  415234:	bl	4056b0 <faccessat@plt>
  415238:	cmp	w0, #0x0
  41523c:	cset	w9, ge  // ge = tcont
  415240:	tbnz	w9, #0, 415268 <bus_machine_method_bind_mount+0x5b8>
  415244:	ldur	x0, [x29, #-32]
  415248:	ldr	x1, [x19, #168]
  41524c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  415250:	add	x2, x2, #0xb21
  415254:	bl	4051b0 <sd_bus_error_setf@plt>
  415258:	stur	w0, [x29, #-4]
  41525c:	mov	w8, #0x1                   	// #1
  415260:	str	w8, [x19, #632]
  415264:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  415268:	ldur	x0, [x29, #-128]
  41526c:	mov	x8, xzr
  415270:	mov	x1, x8
  415274:	mov	w2, #0x10                  	// #16
  415278:	sub	x3, x29, #0x68
  41527c:	mov	x4, x8
  415280:	bl	4056c0 <chase_symlinks@plt>
  415284:	str	w0, [x19, #636]
  415288:	ldr	w9, [x19, #636]
  41528c:	cmp	w9, #0x0
  415290:	cset	w9, ge  // ge = tcont
  415294:	tbnz	w9, #0, 4152bc <bus_machine_method_bind_mount+0x60c>
  415298:	ldur	x0, [x29, #-32]
  41529c:	ldr	w1, [x19, #636]
  4152a0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4152a4:	add	x2, x2, #0xb57
  4152a8:	bl	405290 <sd_bus_error_set_errnof@plt>
  4152ac:	stur	w0, [x29, #-4]
  4152b0:	mov	w8, #0x1                   	// #1
  4152b4:	str	w8, [x19, #632]
  4152b8:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  4152bc:	ldur	x0, [x29, #-104]
  4152c0:	add	x1, x19, #0x288
  4152c4:	bl	41abe0 <lstat64>
  4152c8:	cmp	w0, #0x0
  4152cc:	cset	w8, ge  // ge = tcont
  4152d0:	tbnz	w8, #0, 415304 <bus_machine_method_bind_mount+0x654>
  4152d4:	ldur	x0, [x29, #-32]
  4152d8:	str	x0, [x19, #152]
  4152dc:	bl	404d50 <__errno_location@plt>
  4152e0:	ldr	w1, [x0]
  4152e4:	ldr	x0, [x19, #152]
  4152e8:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4152ec:	add	x2, x2, #0xb79
  4152f0:	bl	405290 <sd_bus_error_set_errnof@plt>
  4152f4:	stur	w0, [x29, #-4]
  4152f8:	mov	w8, #0x1                   	// #1
  4152fc:	str	w8, [x19, #632]
  415300:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  415304:	ldr	w8, [x19, #664]
  415308:	and	w8, w8, #0xf000
  41530c:	cmp	w8, #0xa, lsl #12
  415310:	b.ne	415338 <bus_machine_method_bind_mount+0x688>  // b.any
  415314:	ldur	x0, [x29, #-32]
  415318:	ldr	x1, [x19, #168]
  41531c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  415320:	add	x2, x2, #0xb9a
  415324:	bl	4051b0 <sd_bus_error_setf@plt>
  415328:	stur	w0, [x29, #-4]
  41532c:	mov	w8, #0x1                   	// #1
  415330:	str	w8, [x19, #632]
  415334:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  415338:	sub	x0, x29, #0x40
  41533c:	bl	4056d0 <mkdtemp@plt>
  415340:	cbnz	x0, 415378 <bus_machine_method_bind_mount+0x6c8>
  415344:	ldur	x0, [x29, #-32]
  415348:	str	x0, [x19, #144]
  41534c:	bl	404d50 <__errno_location@plt>
  415350:	ldr	w1, [x0]
  415354:	ldr	x0, [x19, #144]
  415358:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41535c:	add	x2, x2, #0xbc4
  415360:	sub	x3, x29, #0x40
  415364:	bl	405290 <sd_bus_error_set_errnof@plt>
  415368:	stur	w0, [x29, #-4]
  41536c:	mov	w8, #0x1                   	// #1
  415370:	str	w8, [x19, #632]
  415374:	b	4162c4 <bus_machine_method_bind_mount+0x1614>
  415378:	mov	w8, #0x1                   	// #1
  41537c:	sturb	w8, [x29, #-89]
  415380:	sub	x9, x29, #0x40
  415384:	mov	x0, x9
  415388:	mov	x1, x9
  41538c:	mov	x9, xzr
  415390:	mov	x2, x9
  415394:	mov	x3, #0x1000                	// #4096
  415398:	mov	x4, x9
  41539c:	bl	4056e0 <mount@plt>
  4153a0:	cmp	w0, #0x0
  4153a4:	cset	w8, ge  // ge = tcont
  4153a8:	tbnz	w8, #0, 4153d8 <bus_machine_method_bind_mount+0x728>
  4153ac:	ldur	x0, [x29, #-32]
  4153b0:	str	x0, [x19, #136]
  4153b4:	bl	404d50 <__errno_location@plt>
  4153b8:	ldr	w1, [x0]
  4153bc:	ldr	x0, [x19, #136]
  4153c0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4153c4:	add	x2, x2, #0xbe7
  4153c8:	sub	x3, x29, #0x40
  4153cc:	bl	405290 <sd_bus_error_set_errnof@plt>
  4153d0:	str	w0, [x19, #636]
  4153d4:	b	416204 <bus_machine_method_bind_mount+0x1554>
  4153d8:	mov	w8, #0x1                   	// #1
  4153dc:	sturb	w8, [x29, #-90]
  4153e0:	mov	x9, xzr
  4153e4:	mov	x0, x9
  4153e8:	sub	x1, x29, #0x40
  4153ec:	mov	x2, x9
  4153f0:	mov	x3, #0x80000               	// #524288
  4153f4:	mov	x4, x9
  4153f8:	bl	4056e0 <mount@plt>
  4153fc:	cmp	w0, #0x0
  415400:	cset	w8, ge  // ge = tcont
  415404:	tbnz	w8, #0, 415434 <bus_machine_method_bind_mount+0x784>
  415408:	ldur	x0, [x29, #-32]
  41540c:	str	x0, [x19, #128]
  415410:	bl	404d50 <__errno_location@plt>
  415414:	ldr	w1, [x0]
  415418:	ldr	x0, [x19, #128]
  41541c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  415420:	add	x2, x2, #0xc08
  415424:	sub	x3, x29, #0x40
  415428:	bl	405290 <sd_bus_error_set_errnof@plt>
  41542c:	str	w0, [x19, #636]
  415430:	b	416204 <bus_machine_method_bind_mount+0x1554>
  415434:	add	x8, x19, #0x218
  415438:	sub	x9, x29, #0x40
  41543c:	str	x9, [x19, #536]
  415440:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  415444:	add	x9, x9, #0xc27
  415448:	str	x9, [x8, #8]
  41544c:	str	xzr, [x19, #512]
  415450:	str	xzr, [x19, #504]
  415454:	ldr	x8, [x19, #504]
  415458:	mov	w9, #0x0                   	// #0
  41545c:	cmp	x8, #0x2
  415460:	str	w9, [x19, #124]
  415464:	b.cs	41548c <bus_machine_method_bind_mount+0x7dc>  // b.hs, b.nlast
  415468:	ldr	x8, [x19, #504]
  41546c:	mov	x9, #0x8                   	// #8
  415470:	mul	x8, x9, x8
  415474:	add	x9, x19, #0x218
  415478:	add	x8, x9, x8
  41547c:	ldr	x8, [x8]
  415480:	cmp	x8, #0x0
  415484:	cset	w10, ne  // ne = any
  415488:	str	w10, [x19, #124]
  41548c:	ldr	w8, [x19, #124]
  415490:	tbnz	w8, #0, 415498 <bus_machine_method_bind_mount+0x7e8>
  415494:	b	4154d0 <bus_machine_method_bind_mount+0x820>
  415498:	ldr	x8, [x19, #504]
  41549c:	mov	x9, #0x8                   	// #8
  4154a0:	mul	x8, x9, x8
  4154a4:	add	x9, x19, #0x218
  4154a8:	add	x8, x9, x8
  4154ac:	ldr	x0, [x8]
  4154b0:	bl	404e00 <strlen@plt>
  4154b4:	ldr	x8, [x19, #512]
  4154b8:	add	x8, x8, x0
  4154bc:	str	x8, [x19, #512]
  4154c0:	ldr	x8, [x19, #504]
  4154c4:	add	x8, x8, #0x1
  4154c8:	str	x8, [x19, #504]
  4154cc:	b	415454 <bus_machine_method_bind_mount+0x7a4>
  4154d0:	ldr	x8, [x19, #512]
  4154d4:	add	x8, x8, #0x1
  4154d8:	str	x8, [x19, #496]
  4154dc:	ldr	x1, [x19, #496]
  4154e0:	mov	x0, #0x1                   	// #1
  4154e4:	bl	412798 <size_multiply_overflow>
  4154e8:	mov	w8, #0x1                   	// #1
  4154ec:	eor	w9, w0, #0x1
  4154f0:	eor	w9, w9, w8
  4154f4:	eor	w9, w9, w8
  4154f8:	eor	w8, w9, w8
  4154fc:	and	w8, w8, #0x1
  415500:	mov	w1, w8
  415504:	sxtw	x10, w1
  415508:	cbz	x10, 415528 <bus_machine_method_bind_mount+0x878>
  41550c:	mov	w8, wzr
  415510:	mov	w0, w8
  415514:	ldr	x1, [x19, #184]
  415518:	ldr	x2, [x19, #200]
  41551c:	mov	w3, #0x390                 	// #912
  415520:	ldr	x4, [x19, #192]
  415524:	bl	404bd0 <log_assert_failed_realm@plt>
  415528:	ldr	x8, [x19, #496]
  41552c:	mov	x9, #0x1                   	// #1
  415530:	mul	x8, x9, x8
  415534:	cmp	x8, #0x400, lsl #12
  415538:	cset	w10, ls  // ls = plast
  41553c:	mov	w11, #0x1                   	// #1
  415540:	eor	w10, w10, #0x1
  415544:	eor	w10, w10, w11
  415548:	eor	w10, w10, w11
  41554c:	and	w10, w10, #0x1
  415550:	mov	w0, w10
  415554:	sxtw	x8, w0
  415558:	cbz	x8, 415578 <bus_machine_method_bind_mount+0x8c8>
  41555c:	mov	w8, wzr
  415560:	mov	w0, w8
  415564:	ldr	x1, [x19, #208]
  415568:	ldr	x2, [x19, #200]
  41556c:	mov	w3, #0x390                 	// #912
  415570:	ldr	x4, [x19, #192]
  415574:	bl	404bd0 <log_assert_failed_realm@plt>
  415578:	ldr	x8, [x19, #496]
  41557c:	mov	x9, #0x1                   	// #1
  415580:	mul	x8, x9, x8
  415584:	mul	x8, x8, x9
  415588:	add	x8, x8, #0xf
  41558c:	and	x8, x8, #0xfffffffffffffff0
  415590:	mov	x9, sp
  415594:	subs	x8, x9, x8
  415598:	mov	sp, x8
  41559c:	str	x8, [x19, #488]
  4155a0:	ldr	x8, [x19, #488]
  4155a4:	str	x8, [x19, #528]
  4155a8:	str	x8, [x19, #520]
  4155ac:	str	xzr, [x19, #504]
  4155b0:	ldr	x8, [x19, #504]
  4155b4:	mov	w9, #0x0                   	// #0
  4155b8:	cmp	x8, #0x2
  4155bc:	str	w9, [x19, #120]
  4155c0:	b.cs	4155e8 <bus_machine_method_bind_mount+0x938>  // b.hs, b.nlast
  4155c4:	ldr	x8, [x19, #504]
  4155c8:	mov	x9, #0x8                   	// #8
  4155cc:	mul	x8, x9, x8
  4155d0:	add	x9, x19, #0x218
  4155d4:	add	x8, x9, x8
  4155d8:	ldr	x8, [x8]
  4155dc:	cmp	x8, #0x0
  4155e0:	cset	w10, ne  // ne = any
  4155e4:	str	w10, [x19, #120]
  4155e8:	ldr	w8, [x19, #120]
  4155ec:	tbnz	w8, #0, 4155f4 <bus_machine_method_bind_mount+0x944>
  4155f0:	b	415628 <bus_machine_method_bind_mount+0x978>
  4155f4:	ldr	x0, [x19, #520]
  4155f8:	ldr	x8, [x19, #504]
  4155fc:	mov	x9, #0x8                   	// #8
  415600:	mul	x8, x9, x8
  415604:	add	x9, x19, #0x218
  415608:	add	x8, x9, x8
  41560c:	ldr	x1, [x8]
  415610:	bl	404f60 <stpcpy@plt>
  415614:	str	x0, [x19, #520]
  415618:	ldr	x8, [x19, #504]
  41561c:	add	x8, x8, #0x1
  415620:	str	x8, [x19, #504]
  415624:	b	4155b0 <bus_machine_method_bind_mount+0x900>
  415628:	ldr	x8, [x19, #520]
  41562c:	mov	w9, #0x0                   	// #0
  415630:	strb	w9, [x8]
  415634:	ldr	x8, [x19, #528]
  415638:	str	x8, [x19, #480]
  41563c:	ldr	x8, [x19, #480]
  415640:	stur	x8, [x29, #-72]
  415644:	ldr	w9, [x19, #664]
  415648:	and	w9, w9, #0xf000
  41564c:	cmp	w9, #0x4, lsl #12
  415650:	b.ne	415668 <bus_machine_method_bind_mount+0x9b8>  // b.any
  415654:	ldur	x0, [x29, #-72]
  415658:	mov	w1, #0x1c0                 	// #448
  41565c:	bl	4056f0 <mkdir_errno_wrapper@plt>
  415660:	str	w0, [x19, #636]
  415664:	b	415674 <bus_machine_method_bind_mount+0x9c4>
  415668:	ldur	x0, [x29, #-72]
  41566c:	bl	405700 <touch@plt>
  415670:	str	w0, [x19, #636]
  415674:	ldr	w8, [x19, #636]
  415678:	cmp	w8, #0x0
  41567c:	cset	w8, ge  // ge = tcont
  415680:	tbnz	w8, #0, 4156ac <bus_machine_method_bind_mount+0x9fc>
  415684:	ldur	x0, [x29, #-32]
  415688:	str	x0, [x19, #112]
  41568c:	bl	404d50 <__errno_location@plt>
  415690:	ldr	w1, [x0]
  415694:	ldur	x3, [x29, #-72]
  415698:	ldr	x0, [x19, #112]
  41569c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4156a0:	add	x2, x2, #0xc2e
  4156a4:	bl	405290 <sd_bus_error_set_errnof@plt>
  4156a8:	b	416204 <bus_machine_method_bind_mount+0x1554>
  4156ac:	mov	w8, #0x1                   	// #1
  4156b0:	sturb	w8, [x29, #-91]
  4156b4:	ldur	x0, [x29, #-104]
  4156b8:	ldur	x1, [x29, #-72]
  4156bc:	mov	x9, xzr
  4156c0:	mov	x2, x9
  4156c4:	mov	x3, #0x1000                	// #4096
  4156c8:	mov	x4, x9
  4156cc:	bl	4056e0 <mount@plt>
  4156d0:	cmp	w0, #0x0
  4156d4:	cset	w8, ge  // ge = tcont
  4156d8:	tbnz	w8, #0, 415708 <bus_machine_method_bind_mount+0xa58>
  4156dc:	ldur	x0, [x29, #-32]
  4156e0:	str	x0, [x19, #104]
  4156e4:	bl	404d50 <__errno_location@plt>
  4156e8:	ldr	w1, [x0]
  4156ec:	ldur	x3, [x29, #-104]
  4156f0:	ldr	x0, [x19, #104]
  4156f4:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4156f8:	add	x2, x2, #0xc5c
  4156fc:	bl	405290 <sd_bus_error_set_errnof@plt>
  415700:	str	w0, [x19, #636]
  415704:	b	416204 <bus_machine_method_bind_mount+0x1554>
  415708:	mov	w8, #0x1                   	// #1
  41570c:	sturb	w8, [x29, #-92]
  415710:	ldur	w8, [x29, #-108]
  415714:	cbz	w8, 41576c <bus_machine_method_bind_mount+0xabc>
  415718:	ldur	x1, [x29, #-72]
  41571c:	mov	x8, xzr
  415720:	mov	x0, x8
  415724:	mov	x2, x8
  415728:	mov	x3, #0x1021                	// #4129
  41572c:	mov	x4, x8
  415730:	bl	4056e0 <mount@plt>
  415734:	cmp	w0, #0x0
  415738:	cset	w9, ge  // ge = tcont
  41573c:	tbnz	w9, #0, 41576c <bus_machine_method_bind_mount+0xabc>
  415740:	ldur	x0, [x29, #-32]
  415744:	str	x0, [x19, #96]
  415748:	bl	404d50 <__errno_location@plt>
  41574c:	ldr	w1, [x0]
  415750:	ldur	x3, [x29, #-72]
  415754:	ldr	x0, [x19, #96]
  415758:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41575c:	add	x2, x2, #0xc73
  415760:	bl	405290 <sd_bus_error_set_errnof@plt>
  415764:	str	w0, [x19, #636]
  415768:	b	416204 <bus_machine_method_bind_mount+0x1554>
  41576c:	add	x8, x19, #0x1c8
  415770:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  415774:	add	x9, x9, #0xb02
  415778:	str	x9, [x19, #456]
  41577c:	ldur	x9, [x29, #-136]
  415780:	ldr	x9, [x9, #8]
  415784:	str	x9, [x8, #8]
  415788:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  41578c:	add	x9, x9, #0xc96
  415790:	str	x9, [x8, #16]
  415794:	str	xzr, [x19, #432]
  415798:	str	xzr, [x19, #424]
  41579c:	ldr	x8, [x19, #424]
  4157a0:	mov	w9, #0x0                   	// #0
  4157a4:	cmp	x8, #0x3
  4157a8:	str	w9, [x19, #92]
  4157ac:	b.cs	4157d4 <bus_machine_method_bind_mount+0xb24>  // b.hs, b.nlast
  4157b0:	ldr	x8, [x19, #424]
  4157b4:	mov	x9, #0x8                   	// #8
  4157b8:	mul	x8, x9, x8
  4157bc:	add	x9, x19, #0x1c8
  4157c0:	add	x8, x9, x8
  4157c4:	ldr	x8, [x8]
  4157c8:	cmp	x8, #0x0
  4157cc:	cset	w10, ne  // ne = any
  4157d0:	str	w10, [x19, #92]
  4157d4:	ldr	w8, [x19, #92]
  4157d8:	tbnz	w8, #0, 4157e0 <bus_machine_method_bind_mount+0xb30>
  4157dc:	b	415818 <bus_machine_method_bind_mount+0xb68>
  4157e0:	ldr	x8, [x19, #424]
  4157e4:	mov	x9, #0x8                   	// #8
  4157e8:	mul	x8, x9, x8
  4157ec:	add	x9, x19, #0x1c8
  4157f0:	add	x8, x9, x8
  4157f4:	ldr	x0, [x8]
  4157f8:	bl	404e00 <strlen@plt>
  4157fc:	ldr	x8, [x19, #432]
  415800:	add	x8, x8, x0
  415804:	str	x8, [x19, #432]
  415808:	ldr	x8, [x19, #424]
  41580c:	add	x8, x8, #0x1
  415810:	str	x8, [x19, #424]
  415814:	b	41579c <bus_machine_method_bind_mount+0xaec>
  415818:	ldr	x8, [x19, #432]
  41581c:	add	x8, x8, #0x1
  415820:	str	x8, [x19, #416]
  415824:	ldr	x1, [x19, #416]
  415828:	mov	x0, #0x1                   	// #1
  41582c:	bl	412798 <size_multiply_overflow>
  415830:	mov	w8, #0x1                   	// #1
  415834:	eor	w9, w0, #0x1
  415838:	eor	w9, w9, w8
  41583c:	eor	w9, w9, w8
  415840:	eor	w8, w9, w8
  415844:	and	w8, w8, #0x1
  415848:	mov	w1, w8
  41584c:	sxtw	x10, w1
  415850:	cbz	x10, 415870 <bus_machine_method_bind_mount+0xbc0>
  415854:	mov	w8, wzr
  415858:	mov	w0, w8
  41585c:	ldr	x1, [x19, #184]
  415860:	ldr	x2, [x19, #200]
  415864:	mov	w3, #0x3ad                 	// #941
  415868:	ldr	x4, [x19, #192]
  41586c:	bl	404bd0 <log_assert_failed_realm@plt>
  415870:	ldr	x8, [x19, #416]
  415874:	mov	x9, #0x1                   	// #1
  415878:	mul	x8, x9, x8
  41587c:	cmp	x8, #0x400, lsl #12
  415880:	cset	w10, ls  // ls = plast
  415884:	mov	w11, #0x1                   	// #1
  415888:	eor	w10, w10, #0x1
  41588c:	eor	w10, w10, w11
  415890:	eor	w10, w10, w11
  415894:	and	w10, w10, #0x1
  415898:	mov	w0, w10
  41589c:	sxtw	x8, w0
  4158a0:	cbz	x8, 4158c0 <bus_machine_method_bind_mount+0xc10>
  4158a4:	mov	w8, wzr
  4158a8:	mov	w0, w8
  4158ac:	ldr	x1, [x19, #208]
  4158b0:	ldr	x2, [x19, #200]
  4158b4:	mov	w3, #0x3ad                 	// #941
  4158b8:	ldr	x4, [x19, #192]
  4158bc:	bl	404bd0 <log_assert_failed_realm@plt>
  4158c0:	ldr	x8, [x19, #416]
  4158c4:	mov	x9, #0x1                   	// #1
  4158c8:	mul	x8, x9, x8
  4158cc:	mul	x8, x8, x9
  4158d0:	add	x8, x8, #0xf
  4158d4:	and	x8, x8, #0xfffffffffffffff0
  4158d8:	mov	x9, sp
  4158dc:	subs	x8, x9, x8
  4158e0:	mov	sp, x8
  4158e4:	str	x8, [x19, #408]
  4158e8:	ldr	x8, [x19, #408]
  4158ec:	str	x8, [x19, #448]
  4158f0:	str	x8, [x19, #440]
  4158f4:	str	xzr, [x19, #424]
  4158f8:	ldr	x8, [x19, #424]
  4158fc:	mov	w9, #0x0                   	// #0
  415900:	cmp	x8, #0x3
  415904:	str	w9, [x19, #88]
  415908:	b.cs	415930 <bus_machine_method_bind_mount+0xc80>  // b.hs, b.nlast
  41590c:	ldr	x8, [x19, #424]
  415910:	mov	x9, #0x8                   	// #8
  415914:	mul	x8, x9, x8
  415918:	add	x9, x19, #0x1c8
  41591c:	add	x8, x9, x8
  415920:	ldr	x8, [x8]
  415924:	cmp	x8, #0x0
  415928:	cset	w10, ne  // ne = any
  41592c:	str	w10, [x19, #88]
  415930:	ldr	w8, [x19, #88]
  415934:	tbnz	w8, #0, 41593c <bus_machine_method_bind_mount+0xc8c>
  415938:	b	415970 <bus_machine_method_bind_mount+0xcc0>
  41593c:	ldr	x0, [x19, #440]
  415940:	ldr	x8, [x19, #424]
  415944:	mov	x9, #0x8                   	// #8
  415948:	mul	x8, x9, x8
  41594c:	add	x9, x19, #0x1c8
  415950:	add	x8, x9, x8
  415954:	ldr	x1, [x8]
  415958:	bl	404f60 <stpcpy@plt>
  41595c:	str	x0, [x19, #440]
  415960:	ldr	x8, [x19, #424]
  415964:	add	x8, x8, #0x1
  415968:	str	x8, [x19, #424]
  41596c:	b	4158f8 <bus_machine_method_bind_mount+0xc48>
  415970:	ldr	x8, [x19, #440]
  415974:	mov	w9, #0x0                   	// #0
  415978:	strb	w9, [x8]
  41597c:	ldr	x8, [x19, #448]
  415980:	str	x8, [x19, #400]
  415984:	ldr	x8, [x19, #400]
  415988:	stur	x8, [x29, #-80]
  41598c:	ldr	w9, [x19, #664]
  415990:	and	w9, w9, #0xf000
  415994:	cmp	w9, #0x4, lsl #12
  415998:	b.ne	4159d4 <bus_machine_method_bind_mount+0xd24>  // b.any
  41599c:	ldur	x0, [x29, #-80]
  4159a0:	bl	4056d0 <mkdtemp@plt>
  4159a4:	cbz	x0, 4159b4 <bus_machine_method_bind_mount+0xd04>
  4159a8:	mov	w8, wzr
  4159ac:	str	w8, [x19, #84]
  4159b0:	b	4159c8 <bus_machine_method_bind_mount+0xd18>
  4159b4:	bl	404d50 <__errno_location@plt>
  4159b8:	ldr	w8, [x0]
  4159bc:	mov	w9, wzr
  4159c0:	subs	w8, w9, w8
  4159c4:	str	w8, [x19, #84]
  4159c8:	ldr	w8, [x19, #84]
  4159cc:	str	w8, [x19, #636]
  4159d0:	b	4159e8 <bus_machine_method_bind_mount+0xd38>
  4159d4:	ldur	x0, [x29, #-80]
  4159d8:	bl	405710 <mkostemp_safe@plt>
  4159dc:	str	w0, [x19, #636]
  4159e0:	ldr	w0, [x19, #636]
  4159e4:	bl	4052c0 <safe_close@plt>
  4159e8:	ldr	w8, [x19, #636]
  4159ec:	cmp	w8, #0x0
  4159f0:	cset	w8, ge  // ge = tcont
  4159f4:	tbnz	w8, #0, 415a20 <bus_machine_method_bind_mount+0xd70>
  4159f8:	ldur	x0, [x29, #-32]
  4159fc:	str	x0, [x19, #72]
  415a00:	bl	404d50 <__errno_location@plt>
  415a04:	ldr	w1, [x0]
  415a08:	ldur	x3, [x29, #-80]
  415a0c:	ldr	x0, [x19, #72]
  415a10:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  415a14:	add	x2, x2, #0xc9e
  415a18:	bl	405290 <sd_bus_error_set_errnof@plt>
  415a1c:	b	416204 <bus_machine_method_bind_mount+0x1554>
  415a20:	mov	w8, #0x1                   	// #1
  415a24:	sturb	w8, [x29, #-93]
  415a28:	ldur	x0, [x29, #-72]
  415a2c:	ldur	x1, [x29, #-80]
  415a30:	mov	x9, xzr
  415a34:	mov	x2, x9
  415a38:	mov	x3, #0x2000                	// #8192
  415a3c:	mov	x4, x9
  415a40:	bl	4056e0 <mount@plt>
  415a44:	cmp	w0, #0x0
  415a48:	cset	w8, ge  // ge = tcont
  415a4c:	tbnz	w8, #0, 415a80 <bus_machine_method_bind_mount+0xdd0>
  415a50:	ldur	x0, [x29, #-32]
  415a54:	str	x0, [x19, #64]
  415a58:	bl	404d50 <__errno_location@plt>
  415a5c:	ldr	w1, [x0]
  415a60:	ldur	x3, [x29, #-72]
  415a64:	ldur	x4, [x29, #-80]
  415a68:	ldr	x0, [x19, #64]
  415a6c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  415a70:	add	x2, x2, #0xcd1
  415a74:	bl	405290 <sd_bus_error_set_errnof@plt>
  415a78:	str	w0, [x19, #636]
  415a7c:	b	416204 <bus_machine_method_bind_mount+0x1554>
  415a80:	mov	w8, #0x1                   	// #1
  415a84:	sturb	w8, [x29, #-94]
  415a88:	mov	w8, #0x0                   	// #0
  415a8c:	sturb	w8, [x29, #-92]
  415a90:	ldr	w8, [x19, #664]
  415a94:	and	w8, w8, #0xf000
  415a98:	cmp	w8, #0x4, lsl #12
  415a9c:	b.ne	415aac <bus_machine_method_bind_mount+0xdfc>  // b.any
  415aa0:	ldur	x0, [x29, #-72]
  415aa4:	bl	405720 <rmdir@plt>
  415aa8:	b	415ab4 <bus_machine_method_bind_mount+0xe04>
  415aac:	ldur	x0, [x29, #-72]
  415ab0:	bl	404f80 <unlink@plt>
  415ab4:	mov	w8, #0x0                   	// #0
  415ab8:	sturb	w8, [x29, #-91]
  415abc:	sub	x9, x29, #0x40
  415ac0:	mov	x0, x9
  415ac4:	str	w8, [x19, #60]
  415ac8:	str	x9, [x19, #48]
  415acc:	bl	405730 <umount@plt>
  415ad0:	ldr	w8, [x19, #60]
  415ad4:	sturb	w8, [x29, #-90]
  415ad8:	ldr	x9, [x19, #48]
  415adc:	mov	x0, x9
  415ae0:	bl	405720 <rmdir@plt>
  415ae4:	ldr	w8, [x19, #60]
  415ae8:	sturb	w8, [x29, #-89]
  415aec:	sub	x9, x29, #0x28
  415af0:	mov	x0, x9
  415af4:	mov	w1, #0x800                 	// #2048
  415af8:	movk	w1, #0x8, lsl #16
  415afc:	bl	4052a0 <pipe2@plt>
  415b00:	cmp	w0, #0x0
  415b04:	cset	w8, ge  // ge = tcont
  415b08:	tbnz	w8, #0, 415b34 <bus_machine_method_bind_mount+0xe84>
  415b0c:	ldur	x0, [x29, #-32]
  415b10:	str	x0, [x19, #40]
  415b14:	bl	404d50 <__errno_location@plt>
  415b18:	ldr	w1, [x0]
  415b1c:	ldr	x0, [x19, #40]
  415b20:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  415b24:	add	x2, x2, #0xc6f
  415b28:	bl	405290 <sd_bus_error_set_errnof@plt>
  415b2c:	str	w0, [x19, #636]
  415b30:	b	416204 <bus_machine_method_bind_mount+0x1554>
  415b34:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  415b38:	add	x0, x0, #0xced
  415b3c:	mov	w1, #0x1                   	// #1
  415b40:	add	x2, x19, #0x284
  415b44:	bl	4162e8 <safe_fork>
  415b48:	str	w0, [x19, #636]
  415b4c:	ldr	w8, [x19, #636]
  415b50:	cmp	w8, #0x0
  415b54:	cset	w8, ge  // ge = tcont
  415b58:	tbnz	w8, #0, 415b74 <bus_machine_method_bind_mount+0xec4>
  415b5c:	ldur	x0, [x29, #-32]
  415b60:	ldr	w1, [x19, #636]
  415b64:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  415b68:	add	x2, x2, #0xc94
  415b6c:	bl	405290 <sd_bus_error_set_errnof@plt>
  415b70:	b	416204 <bus_machine_method_bind_mount+0x1554>
  415b74:	ldr	w8, [x19, #636]
  415b78:	cbnz	w8, 416140 <bus_machine_method_bind_mount+0x1490>
  415b7c:	ldur	w0, [x29, #-40]
  415b80:	bl	4052c0 <safe_close@plt>
  415b84:	stur	w0, [x29, #-40]
  415b88:	ldur	x8, [x29, #-136]
  415b8c:	ldr	w9, [x8, #80]
  415b90:	str	w9, [x19, #372]
  415b94:	ldr	w9, [x19, #372]
  415b98:	cbnz	w9, 415bac <bus_machine_method_bind_mount+0xefc>
  415b9c:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  415ba0:	add	x8, x8, #0xcfa
  415ba4:	str	x8, [x19, #360]
  415ba8:	b	415c94 <bus_machine_method_bind_mount+0xfe4>
  415bac:	mov	x8, #0x1a                  	// #26
  415bb0:	str	x8, [x19, #352]
  415bb4:	ldr	x1, [x19, #352]
  415bb8:	mov	x0, #0x1                   	// #1
  415bbc:	bl	412798 <size_multiply_overflow>
  415bc0:	mov	w8, #0x1                   	// #1
  415bc4:	eor	w9, w0, #0x1
  415bc8:	eor	w9, w9, w8
  415bcc:	eor	w9, w9, w8
  415bd0:	eor	w8, w9, w8
  415bd4:	and	w8, w8, #0x1
  415bd8:	mov	w1, w8
  415bdc:	sxtw	x10, w1
  415be0:	cbz	x10, 415c00 <bus_machine_method_bind_mount+0xf50>
  415be4:	mov	w8, wzr
  415be8:	mov	w0, w8
  415bec:	ldr	x1, [x19, #184]
  415bf0:	ldr	x2, [x19, #200]
  415bf4:	mov	w3, #0x3e0                 	// #992
  415bf8:	ldr	x4, [x19, #192]
  415bfc:	bl	404bd0 <log_assert_failed_realm@plt>
  415c00:	ldr	x8, [x19, #352]
  415c04:	mov	x9, #0x1                   	// #1
  415c08:	mul	x8, x9, x8
  415c0c:	cmp	x8, #0x400, lsl #12
  415c10:	cset	w10, ls  // ls = plast
  415c14:	mov	w11, #0x1                   	// #1
  415c18:	eor	w10, w10, #0x1
  415c1c:	eor	w10, w10, w11
  415c20:	eor	w10, w10, w11
  415c24:	and	w10, w10, #0x1
  415c28:	mov	w0, w10
  415c2c:	sxtw	x8, w0
  415c30:	cbz	x8, 415c50 <bus_machine_method_bind_mount+0xfa0>
  415c34:	mov	w8, wzr
  415c38:	mov	w0, w8
  415c3c:	ldr	x1, [x19, #208]
  415c40:	ldr	x2, [x19, #200]
  415c44:	mov	w3, #0x3e0                 	// #992
  415c48:	ldr	x4, [x19, #192]
  415c4c:	bl	404bd0 <log_assert_failed_realm@plt>
  415c50:	ldr	x8, [x19, #352]
  415c54:	mov	x9, #0x1                   	// #1
  415c58:	mul	x8, x9, x8
  415c5c:	mul	x8, x8, x9
  415c60:	add	x8, x8, #0xf
  415c64:	and	x8, x8, #0xfffffffffffffff0
  415c68:	mov	x9, sp
  415c6c:	subs	x8, x9, x8
  415c70:	mov	sp, x8
  415c74:	str	x8, [x19, #344]
  415c78:	ldr	x8, [x19, #344]
  415c7c:	str	x8, [x19, #360]
  415c80:	ldr	x0, [x19, #360]
  415c84:	ldr	w2, [x19, #372]
  415c88:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  415c8c:	add	x1, x1, #0xd0c
  415c90:	bl	405340 <sprintf@plt>
  415c94:	ldr	x8, [x19, #360]
  415c98:	str	x8, [x19, #336]
  415c9c:	ldr	x8, [x19, #336]
  415ca0:	str	x8, [x19, #376]
  415ca4:	ldr	x0, [x19, #376]
  415ca8:	mov	w1, #0x100                 	// #256
  415cac:	movk	w1, #0x8, lsl #16
  415cb0:	bl	405190 <open64@plt>
  415cb4:	str	w0, [x19, #388]
  415cb8:	ldr	w9, [x19, #388]
  415cbc:	cmp	w9, #0x0
  415cc0:	cset	w9, ge  // ge = tcont
  415cc4:	tbnz	w9, #0, 415d50 <bus_machine_method_bind_mount+0x10a0>
  415cc8:	mov	w8, #0x3                   	// #3
  415ccc:	str	w8, [x19, #332]
  415cd0:	bl	404d50 <__errno_location@plt>
  415cd4:	ldr	w8, [x0]
  415cd8:	str	w8, [x19, #328]
  415cdc:	str	wzr, [x19, #324]
  415ce0:	ldr	w0, [x19, #324]
  415ce4:	bl	404b80 <log_get_max_level_realm@plt>
  415ce8:	ldr	w8, [x19, #332]
  415cec:	and	w8, w8, #0x7
  415cf0:	cmp	w0, w8
  415cf4:	b.lt	415d28 <bus_machine_method_bind_mount+0x1078>  // b.tstop
  415cf8:	ldr	w8, [x19, #324]
  415cfc:	ldr	w9, [x19, #332]
  415d00:	orr	w0, w9, w8, lsl #10
  415d04:	ldr	w1, [x19, #328]
  415d08:	ldr	x2, [x19, #200]
  415d0c:	mov	w3, #0x3e3                 	// #995
  415d10:	ldr	x4, [x19, #176]
  415d14:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  415d18:	add	x5, x5, #0xd3a
  415d1c:	bl	404b90 <log_internal_realm@plt>
  415d20:	str	w0, [x19, #36]
  415d24:	b	415d3c <bus_machine_method_bind_mount+0x108c>
  415d28:	ldr	w0, [x19, #328]
  415d2c:	bl	404ba0 <abs@plt>
  415d30:	mov	w8, wzr
  415d34:	subs	w8, w8, w0, uxtb
  415d38:	str	w8, [x19, #36]
  415d3c:	ldr	w8, [x19, #36]
  415d40:	str	w8, [x19, #320]
  415d44:	ldr	w8, [x19, #320]
  415d48:	str	w8, [x19, #636]
  415d4c:	b	416118 <bus_machine_method_bind_mount+0x1468>
  415d50:	ldr	w0, [x19, #388]
  415d54:	mov	w1, #0x20000               	// #131072
  415d58:	bl	405740 <setns@plt>
  415d5c:	cmp	w0, #0x0
  415d60:	cset	w8, ge  // ge = tcont
  415d64:	tbnz	w8, #0, 415df0 <bus_machine_method_bind_mount+0x1140>
  415d68:	mov	w8, #0x3                   	// #3
  415d6c:	str	w8, [x19, #316]
  415d70:	bl	404d50 <__errno_location@plt>
  415d74:	ldr	w8, [x0]
  415d78:	str	w8, [x19, #312]
  415d7c:	str	wzr, [x19, #308]
  415d80:	ldr	w0, [x19, #308]
  415d84:	bl	404b80 <log_get_max_level_realm@plt>
  415d88:	ldr	w8, [x19, #316]
  415d8c:	and	w8, w8, #0x7
  415d90:	cmp	w0, w8
  415d94:	b.lt	415dc8 <bus_machine_method_bind_mount+0x1118>  // b.tstop
  415d98:	ldr	w8, [x19, #308]
  415d9c:	ldr	w9, [x19, #316]
  415da0:	orr	w0, w9, w8, lsl #10
  415da4:	ldr	w1, [x19, #312]
  415da8:	ldr	x2, [x19, #200]
  415dac:	mov	w3, #0x3e8                 	// #1000
  415db0:	ldr	x4, [x19, #176]
  415db4:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  415db8:	add	x5, x5, #0xd67
  415dbc:	bl	404b90 <log_internal_realm@plt>
  415dc0:	str	w0, [x19, #32]
  415dc4:	b	415ddc <bus_machine_method_bind_mount+0x112c>
  415dc8:	ldr	w0, [x19, #312]
  415dcc:	bl	404ba0 <abs@plt>
  415dd0:	mov	w8, wzr
  415dd4:	subs	w8, w8, w0, uxtb
  415dd8:	str	w8, [x19, #32]
  415ddc:	ldr	w8, [x19, #32]
  415de0:	str	w8, [x19, #304]
  415de4:	ldr	w8, [x19, #304]
  415de8:	str	w8, [x19, #636]
  415dec:	b	416118 <bus_machine_method_bind_mount+0x1468>
  415df0:	ldur	w8, [x29, #-112]
  415df4:	cbz	w8, 415e40 <bus_machine_method_bind_mount+0x1190>
  415df8:	ldr	w8, [x19, #664]
  415dfc:	and	w8, w8, #0xf000
  415e00:	cmp	w8, #0x4, lsl #12
  415e04:	b.ne	415e18 <bus_machine_method_bind_mount+0x1168>  // b.any
  415e08:	ldur	x0, [x29, #-120]
  415e0c:	mov	w1, #0x1ed                 	// #493
  415e10:	bl	405750 <mkdir_p@plt>
  415e14:	b	415e40 <bus_machine_method_bind_mount+0x1190>
  415e18:	ldur	x0, [x29, #-120]
  415e1c:	mov	w1, #0x1ed                 	// #493
  415e20:	bl	405760 <mkdir_parents@plt>
  415e24:	ldur	x8, [x29, #-120]
  415e28:	mov	x0, x8
  415e2c:	mov	w1, #0x1c1                 	// #449
  415e30:	movk	w1, #0x8, lsl #16
  415e34:	mov	w2, #0x180                 	// #384
  415e38:	bl	405190 <open64@plt>
  415e3c:	bl	4052c0 <safe_close@plt>
  415e40:	add	x8, x19, #0x120
  415e44:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  415e48:	add	x9, x9, #0xd8e
  415e4c:	str	x9, [x19, #288]
  415e50:	ldur	x0, [x29, #-80]
  415e54:	str	x8, [x19, #24]
  415e58:	bl	405770 <basename@plt>
  415e5c:	ldr	x8, [x19, #24]
  415e60:	str	x0, [x8, #8]
  415e64:	str	xzr, [x19, #264]
  415e68:	str	xzr, [x19, #256]
  415e6c:	ldr	x8, [x19, #256]
  415e70:	mov	w9, #0x0                   	// #0
  415e74:	cmp	x8, #0x2
  415e78:	str	w9, [x19, #20]
  415e7c:	b.cs	415ea4 <bus_machine_method_bind_mount+0x11f4>  // b.hs, b.nlast
  415e80:	ldr	x8, [x19, #256]
  415e84:	mov	x9, #0x8                   	// #8
  415e88:	mul	x8, x9, x8
  415e8c:	add	x9, x19, #0x120
  415e90:	add	x8, x9, x8
  415e94:	ldr	x8, [x8]
  415e98:	cmp	x8, #0x0
  415e9c:	cset	w10, ne  // ne = any
  415ea0:	str	w10, [x19, #20]
  415ea4:	ldr	w8, [x19, #20]
  415ea8:	tbnz	w8, #0, 415eb0 <bus_machine_method_bind_mount+0x1200>
  415eac:	b	415ee8 <bus_machine_method_bind_mount+0x1238>
  415eb0:	ldr	x8, [x19, #256]
  415eb4:	mov	x9, #0x8                   	// #8
  415eb8:	mul	x8, x9, x8
  415ebc:	add	x9, x19, #0x120
  415ec0:	add	x8, x9, x8
  415ec4:	ldr	x0, [x8]
  415ec8:	bl	404e00 <strlen@plt>
  415ecc:	ldr	x8, [x19, #264]
  415ed0:	add	x8, x8, x0
  415ed4:	str	x8, [x19, #264]
  415ed8:	ldr	x8, [x19, #256]
  415edc:	add	x8, x8, #0x1
  415ee0:	str	x8, [x19, #256]
  415ee4:	b	415e6c <bus_machine_method_bind_mount+0x11bc>
  415ee8:	ldr	x8, [x19, #264]
  415eec:	add	x8, x8, #0x1
  415ef0:	str	x8, [x19, #248]
  415ef4:	ldr	x1, [x19, #248]
  415ef8:	mov	x0, #0x1                   	// #1
  415efc:	bl	412798 <size_multiply_overflow>
  415f00:	mov	w8, #0x1                   	// #1
  415f04:	eor	w9, w0, #0x1
  415f08:	eor	w9, w9, w8
  415f0c:	eor	w9, w9, w8
  415f10:	eor	w8, w9, w8
  415f14:	and	w8, w8, #0x1
  415f18:	mov	w1, w8
  415f1c:	sxtw	x10, w1
  415f20:	cbz	x10, 415f40 <bus_machine_method_bind_mount+0x1290>
  415f24:	mov	w8, wzr
  415f28:	mov	w0, w8
  415f2c:	ldr	x1, [x19, #184]
  415f30:	ldr	x2, [x19, #200]
  415f34:	mov	w3, #0x3f6                 	// #1014
  415f38:	ldr	x4, [x19, #192]
  415f3c:	bl	404bd0 <log_assert_failed_realm@plt>
  415f40:	ldr	x8, [x19, #248]
  415f44:	mov	x9, #0x1                   	// #1
  415f48:	mul	x8, x9, x8
  415f4c:	cmp	x8, #0x400, lsl #12
  415f50:	cset	w10, ls  // ls = plast
  415f54:	mov	w11, #0x1                   	// #1
  415f58:	eor	w10, w10, #0x1
  415f5c:	eor	w10, w10, w11
  415f60:	eor	w10, w10, w11
  415f64:	and	w10, w10, #0x1
  415f68:	mov	w0, w10
  415f6c:	sxtw	x8, w0
  415f70:	cbz	x8, 415f90 <bus_machine_method_bind_mount+0x12e0>
  415f74:	mov	w8, wzr
  415f78:	mov	w0, w8
  415f7c:	ldr	x1, [x19, #208]
  415f80:	ldr	x2, [x19, #200]
  415f84:	mov	w3, #0x3f6                 	// #1014
  415f88:	ldr	x4, [x19, #192]
  415f8c:	bl	404bd0 <log_assert_failed_realm@plt>
  415f90:	ldr	x8, [x19, #248]
  415f94:	mov	x9, #0x1                   	// #1
  415f98:	mul	x8, x9, x8
  415f9c:	mul	x8, x8, x9
  415fa0:	add	x8, x8, #0xf
  415fa4:	and	x8, x8, #0xfffffffffffffff0
  415fa8:	mov	x9, sp
  415fac:	subs	x8, x9, x8
  415fb0:	mov	sp, x8
  415fb4:	str	x8, [x19, #240]
  415fb8:	ldr	x8, [x19, #240]
  415fbc:	str	x8, [x19, #280]
  415fc0:	str	x8, [x19, #272]
  415fc4:	str	xzr, [x19, #256]
  415fc8:	ldr	x8, [x19, #256]
  415fcc:	mov	w9, #0x0                   	// #0
  415fd0:	cmp	x8, #0x2
  415fd4:	str	w9, [x19, #16]
  415fd8:	b.cs	416000 <bus_machine_method_bind_mount+0x1350>  // b.hs, b.nlast
  415fdc:	ldr	x8, [x19, #256]
  415fe0:	mov	x9, #0x8                   	// #8
  415fe4:	mul	x8, x9, x8
  415fe8:	add	x9, x19, #0x120
  415fec:	add	x8, x9, x8
  415ff0:	ldr	x8, [x8]
  415ff4:	cmp	x8, #0x0
  415ff8:	cset	w10, ne  // ne = any
  415ffc:	str	w10, [x19, #16]
  416000:	ldr	w8, [x19, #16]
  416004:	tbnz	w8, #0, 41600c <bus_machine_method_bind_mount+0x135c>
  416008:	b	416040 <bus_machine_method_bind_mount+0x1390>
  41600c:	ldr	x0, [x19, #272]
  416010:	ldr	x8, [x19, #256]
  416014:	mov	x9, #0x8                   	// #8
  416018:	mul	x8, x9, x8
  41601c:	add	x9, x19, #0x120
  416020:	add	x8, x9, x8
  416024:	ldr	x1, [x8]
  416028:	bl	404f60 <stpcpy@plt>
  41602c:	str	x0, [x19, #272]
  416030:	ldr	x8, [x19, #256]
  416034:	add	x8, x8, #0x1
  416038:	str	x8, [x19, #256]
  41603c:	b	415fc8 <bus_machine_method_bind_mount+0x1318>
  416040:	ldr	x8, [x19, #272]
  416044:	mov	w9, #0x0                   	// #0
  416048:	strb	w9, [x8]
  41604c:	ldr	x8, [x19, #280]
  416050:	str	x8, [x19, #232]
  416054:	ldr	x8, [x19, #232]
  416058:	str	x8, [x19, #392]
  41605c:	ldr	x0, [x19, #392]
  416060:	ldur	x1, [x29, #-120]
  416064:	mov	x8, xzr
  416068:	mov	x2, x8
  41606c:	mov	x3, #0x2000                	// #8192
  416070:	mov	x4, x8
  416074:	bl	4056e0 <mount@plt>
  416078:	cmp	w0, #0x0
  41607c:	cset	w9, ge  // ge = tcont
  416080:	tbnz	w9, #0, 41610c <bus_machine_method_bind_mount+0x145c>
  416084:	mov	w8, #0x3                   	// #3
  416088:	str	w8, [x19, #228]
  41608c:	bl	404d50 <__errno_location@plt>
  416090:	ldr	w8, [x0]
  416094:	str	w8, [x19, #224]
  416098:	str	wzr, [x19, #220]
  41609c:	ldr	w0, [x19, #220]
  4160a0:	bl	404b80 <log_get_max_level_realm@plt>
  4160a4:	ldr	w8, [x19, #228]
  4160a8:	and	w8, w8, #0x7
  4160ac:	cmp	w0, w8
  4160b0:	b.lt	4160e4 <bus_machine_method_bind_mount+0x1434>  // b.tstop
  4160b4:	ldr	w8, [x19, #220]
  4160b8:	ldr	w9, [x19, #228]
  4160bc:	orr	w0, w9, w8, lsl #10
  4160c0:	ldr	w1, [x19, #224]
  4160c4:	ldr	x2, [x19, #200]
  4160c8:	mov	w3, #0x3f8                 	// #1016
  4160cc:	ldr	x4, [x19, #176]
  4160d0:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  4160d4:	add	x5, x5, #0xdac
  4160d8:	bl	404b90 <log_internal_realm@plt>
  4160dc:	str	w0, [x19, #12]
  4160e0:	b	4160f8 <bus_machine_method_bind_mount+0x1448>
  4160e4:	ldr	w0, [x19, #224]
  4160e8:	bl	404ba0 <abs@plt>
  4160ec:	mov	w8, wzr
  4160f0:	subs	w8, w8, w0, uxtb
  4160f4:	str	w8, [x19, #12]
  4160f8:	ldr	w8, [x19, #12]
  4160fc:	str	w8, [x19, #216]
  416100:	ldr	w8, [x19, #216]
  416104:	str	w8, [x19, #636]
  416108:	b	416118 <bus_machine_method_bind_mount+0x1468>
  41610c:	mov	w8, wzr
  416110:	mov	w0, w8
  416114:	bl	405310 <_exit@plt>
  416118:	ldur	w0, [x29, #-36]
  41611c:	add	x1, x19, #0x27c
  416120:	mov	x2, #0x4                   	// #4
  416124:	bl	4052d0 <write@plt>
  416128:	ldur	w8, [x29, #-36]
  41612c:	mov	w0, w8
  416130:	bl	4052c0 <safe_close@plt>
  416134:	stur	w0, [x29, #-36]
  416138:	mov	w0, #0x1                   	// #1
  41613c:	bl	405310 <_exit@plt>
  416140:	ldur	w0, [x29, #-36]
  416144:	bl	4052c0 <safe_close@plt>
  416148:	stur	w0, [x29, #-36]
  41614c:	ldr	w1, [x19, #644]
  416150:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  416154:	add	x0, x0, #0xced
  416158:	mov	w8, wzr
  41615c:	mov	w2, w8
  416160:	bl	4055c0 <wait_for_terminate_and_check@plt>
  416164:	str	w0, [x19, #636]
  416168:	ldr	w8, [x19, #636]
  41616c:	cmp	w8, #0x0
  416170:	cset	w8, ge  // ge = tcont
  416174:	tbnz	w8, #0, 416194 <bus_machine_method_bind_mount+0x14e4>
  416178:	ldur	x0, [x29, #-32]
  41617c:	ldr	w1, [x19, #636]
  416180:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  416184:	add	x2, x2, #0x431
  416188:	bl	405290 <sd_bus_error_set_errnof@plt>
  41618c:	str	w0, [x19, #636]
  416190:	b	416204 <bus_machine_method_bind_mount+0x1554>
  416194:	ldr	w8, [x19, #636]
  416198:	cbz	w8, 4161f0 <bus_machine_method_bind_mount+0x1540>
  41619c:	ldur	w0, [x29, #-40]
  4161a0:	add	x1, x19, #0x27c
  4161a4:	mov	x2, #0x4                   	// #4
  4161a8:	bl	405780 <read@plt>
  4161ac:	cmp	x0, #0x4
  4161b0:	b.ne	4161d0 <bus_machine_method_bind_mount+0x1520>  // b.any
  4161b4:	ldur	x0, [x29, #-32]
  4161b8:	ldr	w1, [x19, #636]
  4161bc:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4161c0:	add	x2, x2, #0xdac
  4161c4:	bl	405290 <sd_bus_error_set_errnof@plt>
  4161c8:	str	w0, [x19, #636]
  4161cc:	b	4161ec <bus_machine_method_bind_mount+0x153c>
  4161d0:	ldur	x0, [x29, #-32]
  4161d4:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  4161d8:	add	x1, x1, #0x44e
  4161dc:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4161e0:	add	x2, x2, #0xdc0
  4161e4:	bl	4051b0 <sd_bus_error_setf@plt>
  4161e8:	str	w0, [x19, #636]
  4161ec:	b	416204 <bus_machine_method_bind_mount+0x1554>
  4161f0:	ldur	x0, [x29, #-16]
  4161f4:	mov	x8, xzr
  4161f8:	mov	x1, x8
  4161fc:	bl	4051c0 <sd_bus_reply_method_return@plt>
  416200:	str	w0, [x19, #636]
  416204:	ldurb	w8, [x29, #-94]
  416208:	tbnz	w8, #0, 416210 <bus_machine_method_bind_mount+0x1560>
  41620c:	b	416218 <bus_machine_method_bind_mount+0x1568>
  416210:	ldur	x0, [x29, #-80]
  416214:	bl	405730 <umount@plt>
  416218:	ldurb	w8, [x29, #-93]
  41621c:	tbnz	w8, #0, 416224 <bus_machine_method_bind_mount+0x1574>
  416220:	b	416248 <bus_machine_method_bind_mount+0x1598>
  416224:	ldr	w8, [x19, #664]
  416228:	and	w8, w8, #0xf000
  41622c:	cmp	w8, #0x4, lsl #12
  416230:	b.ne	416240 <bus_machine_method_bind_mount+0x1590>  // b.any
  416234:	ldur	x0, [x29, #-80]
  416238:	bl	405720 <rmdir@plt>
  41623c:	b	416248 <bus_machine_method_bind_mount+0x1598>
  416240:	ldur	x0, [x29, #-80]
  416244:	bl	404f80 <unlink@plt>
  416248:	ldurb	w8, [x29, #-92]
  41624c:	tbnz	w8, #0, 416254 <bus_machine_method_bind_mount+0x15a4>
  416250:	b	41625c <bus_machine_method_bind_mount+0x15ac>
  416254:	ldur	x0, [x29, #-72]
  416258:	bl	405730 <umount@plt>
  41625c:	ldurb	w8, [x29, #-91]
  416260:	tbnz	w8, #0, 416268 <bus_machine_method_bind_mount+0x15b8>
  416264:	b	41628c <bus_machine_method_bind_mount+0x15dc>
  416268:	ldr	w8, [x19, #664]
  41626c:	and	w8, w8, #0xf000
  416270:	cmp	w8, #0x4, lsl #12
  416274:	b.ne	416284 <bus_machine_method_bind_mount+0x15d4>  // b.any
  416278:	ldur	x0, [x29, #-72]
  41627c:	bl	405720 <rmdir@plt>
  416280:	b	41628c <bus_machine_method_bind_mount+0x15dc>
  416284:	ldur	x0, [x29, #-72]
  416288:	bl	404f80 <unlink@plt>
  41628c:	ldurb	w8, [x29, #-90]
  416290:	tbnz	w8, #0, 416298 <bus_machine_method_bind_mount+0x15e8>
  416294:	b	4162a0 <bus_machine_method_bind_mount+0x15f0>
  416298:	sub	x0, x29, #0x40
  41629c:	bl	405730 <umount@plt>
  4162a0:	ldurb	w8, [x29, #-89]
  4162a4:	tbnz	w8, #0, 4162ac <bus_machine_method_bind_mount+0x15fc>
  4162a8:	b	4162b4 <bus_machine_method_bind_mount+0x1604>
  4162ac:	sub	x0, x29, #0x40
  4162b0:	bl	405720 <rmdir@plt>
  4162b4:	ldr	w8, [x19, #636]
  4162b8:	stur	w8, [x29, #-4]
  4162bc:	mov	w8, #0x1                   	// #1
  4162c0:	str	w8, [x19, #632]
  4162c4:	sub	x0, x29, #0x68
  4162c8:	bl	412648 <freep>
  4162cc:	sub	x0, x29, #0x28
  4162d0:	bl	41274c <close_pairp>
  4162d4:	ldur	w0, [x29, #-4]
  4162d8:	mov	sp, x29
  4162dc:	ldp	x28, x19, [sp, #16]
  4162e0:	ldp	x29, x30, [sp], #32
  4162e4:	ret

00000000004162e8 <safe_fork>:
  4162e8:	sub	sp, sp, #0x30
  4162ec:	stp	x29, x30, [sp, #32]
  4162f0:	add	x29, sp, #0x20
  4162f4:	mov	x8, xzr
  4162f8:	mov	x3, x8
  4162fc:	stur	x0, [x29, #-8]
  416300:	stur	w1, [x29, #-12]
  416304:	str	x2, [sp, #8]
  416308:	ldur	x0, [x29, #-8]
  41630c:	ldur	w9, [x29, #-12]
  416310:	ldr	x4, [sp, #8]
  416314:	mov	x1, x3
  416318:	mov	x2, x8
  41631c:	mov	w3, w9
  416320:	bl	4054a0 <safe_fork_full@plt>
  416324:	ldp	x29, x30, [sp, #32]
  416328:	add	sp, sp, #0x30
  41632c:	ret

0000000000416330 <bus_machine_method_copy>:
  416330:	stp	x29, x30, [sp, #-32]!
  416334:	stp	x28, x19, [sp, #16]
  416338:	mov	x29, sp
  41633c:	sub	sp, sp, #0x190
  416340:	mov	x19, sp
  416344:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  416348:	add	x8, x8, #0xb48
  41634c:	mov	w9, #0x3                   	// #3
  416350:	mov	w10, #0xffffffff            	// #-1
  416354:	adrp	x11, 41d000 <machine_hash_ops+0x23e8>
  416358:	add	x11, x11, #0x21c
  41635c:	add	x11, x11, #0x3
  416360:	adrp	x12, 41d000 <machine_hash_ops+0x23e8>
  416364:	add	x12, x12, #0xdce
  416368:	adrp	x13, 41d000 <machine_hash_ops+0x23e8>
  41636c:	add	x13, x13, #0xedd
  416370:	stur	x0, [x29, #-16]
  416374:	stur	x1, [x29, #-24]
  416378:	stur	x2, [x29, #-32]
  41637c:	ldr	x8, [x8]
  416380:	stur	x8, [x29, #-96]
  416384:	stur	w9, [x29, #-100]
  416388:	stur	w10, [x29, #-104]
  41638c:	ldur	x8, [x29, #-24]
  416390:	stur	x8, [x29, #-112]
  416394:	str	x11, [x19, #96]
  416398:	str	x12, [x19, #88]
  41639c:	str	x13, [x19, #80]
  4163a0:	ldur	x8, [x29, #-16]
  4163a4:	cmp	x8, #0x0
  4163a8:	cset	w9, ne  // ne = any
  4163ac:	mov	w10, #0x1                   	// #1
  4163b0:	eor	w9, w9, #0x1
  4163b4:	eor	w9, w9, w10
  4163b8:	eor	w9, w9, w10
  4163bc:	and	w9, w9, #0x1
  4163c0:	mov	w0, w9
  4163c4:	sxtw	x8, w0
  4163c8:	cbz	x8, 4163ec <bus_machine_method_copy+0xbc>
  4163cc:	mov	w8, wzr
  4163d0:	mov	w0, w8
  4163d4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4163d8:	add	x1, x1, #0xebd
  4163dc:	ldr	x2, [x19, #96]
  4163e0:	mov	w3, #0x43d                 	// #1085
  4163e4:	ldr	x4, [x19, #88]
  4163e8:	bl	404bd0 <log_assert_failed_realm@plt>
  4163ec:	ldur	x8, [x29, #-112]
  4163f0:	cmp	x8, #0x0
  4163f4:	cset	w9, ne  // ne = any
  4163f8:	mov	w10, #0x1                   	// #1
  4163fc:	eor	w9, w9, #0x1
  416400:	eor	w9, w9, w10
  416404:	eor	w9, w9, w10
  416408:	and	w9, w9, #0x1
  41640c:	mov	w0, w9
  416410:	sxtw	x8, w0
  416414:	cbz	x8, 416438 <bus_machine_method_copy+0x108>
  416418:	mov	w8, wzr
  41641c:	mov	w0, w8
  416420:	adrp	x1, 41a000 <operation_new+0x40>
  416424:	add	x1, x1, #0xe18
  416428:	ldr	x2, [x19, #96]
  41642c:	mov	w3, #0x43e                 	// #1086
  416430:	ldr	x4, [x19, #88]
  416434:	bl	404bd0 <log_assert_failed_realm@plt>
  416438:	ldur	x8, [x29, #-112]
  41643c:	ldr	x8, [x8]
  416440:	ldr	w9, [x8, #88]
  416444:	cmp	w9, #0x40
  416448:	b.cc	416474 <bus_machine_method_copy+0x144>  // b.lo, b.ul, b.last
  41644c:	ldur	x0, [x29, #-32]
  416450:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  416454:	add	x1, x1, #0xc0e
  416458:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41645c:	add	x2, x2, #0xe14
  416460:	bl	4051b0 <sd_bus_error_setf@plt>
  416464:	stur	w0, [x29, #-4]
  416468:	mov	w8, #0x1                   	// #1
  41646c:	stur	w8, [x29, #-144]
  416470:	b	416d28 <bus_machine_method_copy+0x9f8>
  416474:	ldur	x8, [x29, #-112]
  416478:	ldr	w9, [x8, #32]
  41647c:	cbz	w9, 4164a8 <bus_machine_method_copy+0x178>
  416480:	ldur	x0, [x29, #-32]
  416484:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  416488:	add	x1, x1, #0xb63
  41648c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  416490:	add	x2, x2, #0xe2d
  416494:	bl	4051b0 <sd_bus_error_setf@plt>
  416498:	stur	w0, [x29, #-4]
  41649c:	mov	w8, #0x1                   	// #1
  4164a0:	stur	w8, [x29, #-144]
  4164a4:	b	416d28 <bus_machine_method_copy+0x9f8>
  4164a8:	ldur	x0, [x29, #-16]
  4164ac:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4164b0:	add	x1, x1, #0xa9d
  4164b4:	sub	x2, x29, #0x28
  4164b8:	sub	x3, x29, #0x30
  4164bc:	bl	405170 <sd_bus_message_read@plt>
  4164c0:	stur	w0, [x29, #-140]
  4164c4:	ldur	w8, [x29, #-140]
  4164c8:	cmp	w8, #0x0
  4164cc:	cset	w8, ge  // ge = tcont
  4164d0:	tbnz	w8, #0, 4164e8 <bus_machine_method_copy+0x1b8>
  4164d4:	ldur	w8, [x29, #-140]
  4164d8:	stur	w8, [x29, #-4]
  4164dc:	mov	w8, #0x1                   	// #1
  4164e0:	stur	w8, [x29, #-144]
  4164e4:	b	416d28 <bus_machine_method_copy+0x9f8>
  4164e8:	ldur	x0, [x29, #-40]
  4164ec:	bl	405450 <path_is_absolute@plt>
  4164f0:	tbnz	w0, #0, 41651c <bus_machine_method_copy+0x1ec>
  4164f4:	ldur	x0, [x29, #-32]
  4164f8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4164fc:	add	x1, x1, #0x848
  416500:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  416504:	add	x2, x2, #0xe64
  416508:	bl	4051b0 <sd_bus_error_setf@plt>
  41650c:	stur	w0, [x29, #-4]
  416510:	mov	w8, #0x1                   	// #1
  416514:	stur	w8, [x29, #-144]
  416518:	b	416d28 <bus_machine_method_copy+0x9f8>
  41651c:	ldur	x0, [x29, #-48]
  416520:	bl	411aa4 <isempty>
  416524:	tbnz	w0, #0, 41652c <bus_machine_method_copy+0x1fc>
  416528:	b	416538 <bus_machine_method_copy+0x208>
  41652c:	ldur	x8, [x29, #-40]
  416530:	stur	x8, [x29, #-48]
  416534:	b	41656c <bus_machine_method_copy+0x23c>
  416538:	ldur	x0, [x29, #-48]
  41653c:	bl	405450 <path_is_absolute@plt>
  416540:	tbnz	w0, #0, 41656c <bus_machine_method_copy+0x23c>
  416544:	ldur	x0, [x29, #-32]
  416548:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41654c:	add	x1, x1, #0x848
  416550:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  416554:	add	x2, x2, #0xe82
  416558:	bl	4051b0 <sd_bus_error_setf@plt>
  41655c:	stur	w0, [x29, #-4]
  416560:	mov	w8, #0x1                   	// #1
  416564:	stur	w8, [x29, #-144]
  416568:	b	416d28 <bus_machine_method_copy+0x9f8>
  41656c:	ldur	x0, [x29, #-16]
  416570:	ldur	x8, [x29, #-112]
  416574:	ldr	x8, [x8]
  416578:	add	x6, x8, #0x28
  41657c:	ldur	x7, [x29, #-32]
  416580:	mov	w1, #0x15                  	// #21
  416584:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  416588:	add	x2, x2, #0xb3a
  41658c:	mov	x8, xzr
  416590:	mov	x3, x8
  416594:	mov	w9, wzr
  416598:	and	w4, w9, #0x1
  41659c:	mov	w5, #0xffffffff            	// #-1
  4165a0:	bl	405250 <bus_verify_polkit_async@plt>
  4165a4:	stur	w0, [x29, #-140]
  4165a8:	ldur	w9, [x29, #-140]
  4165ac:	cmp	w9, #0x0
  4165b0:	cset	w9, ge  // ge = tcont
  4165b4:	tbnz	w9, #0, 4165cc <bus_machine_method_copy+0x29c>
  4165b8:	ldur	w8, [x29, #-140]
  4165bc:	stur	w8, [x29, #-4]
  4165c0:	mov	w8, #0x1                   	// #1
  4165c4:	stur	w8, [x29, #-144]
  4165c8:	b	416d28 <bus_machine_method_copy+0x9f8>
  4165cc:	ldur	w8, [x29, #-140]
  4165d0:	cbnz	w8, 4165e4 <bus_machine_method_copy+0x2b4>
  4165d4:	mov	w8, #0x1                   	// #1
  4165d8:	stur	w8, [x29, #-4]
  4165dc:	stur	w8, [x29, #-144]
  4165e0:	b	416d28 <bus_machine_method_copy+0x9f8>
  4165e4:	ldur	x0, [x29, #-112]
  4165e8:	sub	x1, x29, #0x7c
  4165ec:	bl	40a580 <machine_get_uid_shift>
  4165f0:	stur	w0, [x29, #-140]
  4165f4:	ldur	w8, [x29, #-140]
  4165f8:	cmp	w8, #0x0
  4165fc:	cset	w8, ge  // ge = tcont
  416600:	tbnz	w8, #0, 416618 <bus_machine_method_copy+0x2e8>
  416604:	ldur	w8, [x29, #-140]
  416608:	stur	w8, [x29, #-4]
  41660c:	mov	w8, #0x1                   	// #1
  416610:	stur	w8, [x29, #-144]
  416614:	b	416d28 <bus_machine_method_copy+0x9f8>
  416618:	ldur	x0, [x29, #-16]
  41661c:	bl	405790 <sd_bus_message_get_member@plt>
  416620:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  416624:	add	x1, x1, #0xea5
  416628:	bl	4057a0 <strstr@plt>
  41662c:	cmp	x0, #0x0
  416630:	cset	w8, ne  // ne = any
  416634:	and	w8, w8, #0x1
  416638:	sturb	w8, [x29, #-113]
  41663c:	ldurb	w8, [x29, #-113]
  416640:	tbnz	w8, #0, 416648 <bus_machine_method_copy+0x318>
  416644:	b	41665c <bus_machine_method_copy+0x32c>
  416648:	ldur	x8, [x29, #-40]
  41664c:	stur	x8, [x29, #-64]
  416650:	ldur	x8, [x29, #-48]
  416654:	stur	x8, [x29, #-56]
  416658:	b	41666c <bus_machine_method_copy+0x33c>
  41665c:	ldur	x8, [x29, #-40]
  416660:	stur	x8, [x29, #-56]
  416664:	ldur	x8, [x29, #-48]
  416668:	stur	x8, [x29, #-64]
  41666c:	ldur	x0, [x29, #-56]
  416670:	bl	405770 <basename@plt>
  416674:	stur	x0, [x29, #-72]
  416678:	ldur	x0, [x29, #-64]
  41667c:	bl	405770 <basename@plt>
  416680:	stur	x0, [x29, #-80]
  416684:	ldur	x8, [x29, #-64]
  416688:	stur	x8, [x29, #-152]
  41668c:	ldur	x0, [x29, #-152]
  416690:	bl	404e00 <strlen@plt>
  416694:	mov	x8, #0x1                   	// #1
  416698:	add	x9, x0, #0x1
  41669c:	stur	x9, [x29, #-160]
  4166a0:	ldur	x9, [x29, #-160]
  4166a4:	mul	x8, x9, x8
  4166a8:	add	x8, x8, #0xf
  4166ac:	and	x8, x8, #0xfffffffffffffff0
  4166b0:	mov	x9, sp
  4166b4:	subs	x8, x9, x8
  4166b8:	mov	sp, x8
  4166bc:	stur	x8, [x29, #-168]
  4166c0:	ldur	x8, [x29, #-168]
  4166c4:	ldur	x1, [x29, #-152]
  4166c8:	ldur	x2, [x29, #-160]
  4166cc:	mov	x0, x8
  4166d0:	str	x8, [x19, #72]
  4166d4:	bl	405440 <memcpy@plt>
  4166d8:	ldr	x8, [x19, #72]
  4166dc:	stur	x8, [x29, #-176]
  4166e0:	ldur	x9, [x29, #-176]
  4166e4:	stur	x9, [x29, #-136]
  4166e8:	ldur	x0, [x29, #-136]
  4166ec:	bl	4057b0 <dirname@plt>
  4166f0:	stur	x0, [x29, #-88]
  4166f4:	ldur	x0, [x29, #-56]
  4166f8:	mov	w1, #0x80000               	// #524288
  4166fc:	mov	w10, wzr
  416700:	mov	w2, w10
  416704:	bl	4057c0 <open_parent@plt>
  416708:	stur	w0, [x29, #-104]
  41670c:	ldur	w10, [x29, #-104]
  416710:	cmp	w10, #0x0
  416714:	cset	w10, ge  // ge = tcont
  416718:	tbnz	w10, #0, 416744 <bus_machine_method_copy+0x414>
  41671c:	ldur	x0, [x29, #-32]
  416720:	ldur	w1, [x29, #-104]
  416724:	ldur	x3, [x29, #-56]
  416728:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41672c:	add	x2, x2, #0xeae
  416730:	bl	405290 <sd_bus_error_set_errnof@plt>
  416734:	stur	w0, [x29, #-4]
  416738:	mov	w8, #0x1                   	// #1
  41673c:	stur	w8, [x29, #-144]
  416740:	b	416d28 <bus_machine_method_copy+0x9f8>
  416744:	sub	x0, x29, #0x60
  416748:	mov	w1, #0x800                 	// #2048
  41674c:	movk	w1, #0x8, lsl #16
  416750:	bl	4052a0 <pipe2@plt>
  416754:	cmp	w0, #0x0
  416758:	cset	w8, ge  // ge = tcont
  41675c:	tbnz	w8, #0, 416790 <bus_machine_method_copy+0x460>
  416760:	ldur	x0, [x29, #-32]
  416764:	str	x0, [x19, #64]
  416768:	bl	404d50 <__errno_location@plt>
  41676c:	ldr	w1, [x0]
  416770:	ldr	x0, [x19, #64]
  416774:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  416778:	add	x2, x2, #0xc6f
  41677c:	bl	405290 <sd_bus_error_set_errnof@plt>
  416780:	stur	w0, [x29, #-4]
  416784:	mov	w8, #0x1                   	// #1
  416788:	stur	w8, [x29, #-144]
  41678c:	b	416d28 <bus_machine_method_copy+0x9f8>
  416790:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  416794:	add	x0, x0, #0xed3
  416798:	mov	w1, #0x1                   	// #1
  41679c:	sub	x2, x29, #0x78
  4167a0:	bl	4162e8 <safe_fork>
  4167a4:	stur	w0, [x29, #-140]
  4167a8:	ldur	w8, [x29, #-140]
  4167ac:	cmp	w8, #0x0
  4167b0:	cset	w8, ge  // ge = tcont
  4167b4:	tbnz	w8, #0, 4167dc <bus_machine_method_copy+0x4ac>
  4167b8:	ldur	x0, [x29, #-32]
  4167bc:	ldur	w1, [x29, #-140]
  4167c0:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  4167c4:	add	x2, x2, #0xc94
  4167c8:	bl	405290 <sd_bus_error_set_errnof@plt>
  4167cc:	stur	w0, [x29, #-4]
  4167d0:	mov	w8, #0x1                   	// #1
  4167d4:	stur	w8, [x29, #-144]
  4167d8:	b	416d28 <bus_machine_method_copy+0x9f8>
  4167dc:	ldur	w8, [x29, #-140]
  4167e0:	cbnz	w8, 416cb4 <bus_machine_method_copy+0x984>
  4167e4:	ldur	w0, [x29, #-96]
  4167e8:	bl	4052c0 <safe_close@plt>
  4167ec:	stur	w0, [x29, #-96]
  4167f0:	ldur	x8, [x29, #-112]
  4167f4:	ldr	w9, [x8, #80]
  4167f8:	str	w9, [x19, #200]
  4167fc:	ldr	w9, [x19, #200]
  416800:	cbnz	w9, 416814 <bus_machine_method_copy+0x4e4>
  416804:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  416808:	add	x8, x8, #0xcfa
  41680c:	str	x8, [x19, #192]
  416810:	b	416904 <bus_machine_method_copy+0x5d4>
  416814:	mov	x8, #0x1a                  	// #26
  416818:	str	x8, [x19, #184]
  41681c:	ldr	x1, [x19, #184]
  416820:	mov	x0, #0x1                   	// #1
  416824:	bl	412798 <size_multiply_overflow>
  416828:	mov	w8, #0x1                   	// #1
  41682c:	eor	w9, w0, #0x1
  416830:	eor	w9, w9, w8
  416834:	eor	w9, w9, w8
  416838:	eor	w8, w9, w8
  41683c:	and	w8, w8, #0x1
  416840:	mov	w1, w8
  416844:	sxtw	x10, w1
  416848:	cbz	x10, 41686c <bus_machine_method_copy+0x53c>
  41684c:	mov	w8, wzr
  416850:	mov	w0, w8
  416854:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  416858:	add	x1, x1, #0x4dd
  41685c:	ldr	x2, [x19, #96]
  416860:	mov	w3, #0x485                 	// #1157
  416864:	ldr	x4, [x19, #88]
  416868:	bl	404bd0 <log_assert_failed_realm@plt>
  41686c:	ldr	x8, [x19, #184]
  416870:	mov	x9, #0x1                   	// #1
  416874:	mul	x8, x9, x8
  416878:	cmp	x8, #0x400, lsl #12
  41687c:	cset	w10, ls  // ls = plast
  416880:	mov	w11, #0x1                   	// #1
  416884:	eor	w10, w10, #0x1
  416888:	eor	w10, w10, w11
  41688c:	eor	w10, w10, w11
  416890:	and	w10, w10, #0x1
  416894:	mov	w0, w10
  416898:	sxtw	x8, w0
  41689c:	cbz	x8, 4168c0 <bus_machine_method_copy+0x590>
  4168a0:	mov	w8, wzr
  4168a4:	mov	w0, w8
  4168a8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4168ac:	add	x1, x1, #0x508
  4168b0:	ldr	x2, [x19, #96]
  4168b4:	mov	w3, #0x485                 	// #1157
  4168b8:	ldr	x4, [x19, #88]
  4168bc:	bl	404bd0 <log_assert_failed_realm@plt>
  4168c0:	ldr	x8, [x19, #184]
  4168c4:	mov	x9, #0x1                   	// #1
  4168c8:	mul	x8, x9, x8
  4168cc:	mul	x8, x8, x9
  4168d0:	add	x8, x8, #0xf
  4168d4:	and	x8, x8, #0xfffffffffffffff0
  4168d8:	mov	x9, sp
  4168dc:	subs	x8, x9, x8
  4168e0:	mov	sp, x8
  4168e4:	str	x8, [x19, #176]
  4168e8:	ldr	x8, [x19, #176]
  4168ec:	str	x8, [x19, #192]
  4168f0:	ldr	x0, [x19, #192]
  4168f4:	ldr	w2, [x19, #200]
  4168f8:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  4168fc:	add	x1, x1, #0xd0c
  416900:	bl	405340 <sprintf@plt>
  416904:	ldr	x8, [x19, #192]
  416908:	str	x8, [x19, #168]
  41690c:	ldr	x8, [x19, #168]
  416910:	stur	x8, [x29, #-192]
  416914:	ldur	x0, [x29, #-192]
  416918:	mov	w1, #0x100                 	// #256
  41691c:	movk	w1, #0x8, lsl #16
  416920:	bl	405190 <open64@plt>
  416924:	stur	w0, [x29, #-196]
  416928:	ldur	w9, [x29, #-196]
  41692c:	cmp	w9, #0x0
  416930:	cset	w9, ge  // ge = tcont
  416934:	tbnz	w9, #0, 4169c0 <bus_machine_method_copy+0x690>
  416938:	mov	w8, #0x3                   	// #3
  41693c:	str	w8, [x19, #164]
  416940:	bl	404d50 <__errno_location@plt>
  416944:	ldr	w8, [x0]
  416948:	str	w8, [x19, #160]
  41694c:	str	wzr, [x19, #156]
  416950:	ldr	w0, [x19, #156]
  416954:	bl	404b80 <log_get_max_level_realm@plt>
  416958:	ldr	w8, [x19, #164]
  41695c:	and	w8, w8, #0x7
  416960:	cmp	w0, w8
  416964:	b.lt	416998 <bus_machine_method_copy+0x668>  // b.tstop
  416968:	ldr	w8, [x19, #156]
  41696c:	ldr	w9, [x19, #164]
  416970:	orr	w0, w9, w8, lsl #10
  416974:	ldr	w1, [x19, #160]
  416978:	ldr	x2, [x19, #96]
  41697c:	mov	w3, #0x488                 	// #1160
  416980:	ldr	x4, [x19, #80]
  416984:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  416988:	add	x5, x5, #0xd3a
  41698c:	bl	404b90 <log_internal_realm@plt>
  416990:	str	w0, [x19, #60]
  416994:	b	4169ac <bus_machine_method_copy+0x67c>
  416998:	ldr	w0, [x19, #160]
  41699c:	bl	404ba0 <abs@plt>
  4169a0:	mov	w8, wzr
  4169a4:	subs	w8, w8, w0, uxtb
  4169a8:	str	w8, [x19, #60]
  4169ac:	ldr	w8, [x19, #60]
  4169b0:	str	w8, [x19, #152]
  4169b4:	ldr	w8, [x19, #152]
  4169b8:	stur	w8, [x29, #-140]
  4169bc:	b	416c98 <bus_machine_method_copy+0x968>
  4169c0:	ldur	w0, [x29, #-196]
  4169c4:	mov	w1, #0x20000               	// #131072
  4169c8:	bl	405740 <setns@plt>
  4169cc:	cmp	w0, #0x0
  4169d0:	cset	w8, ge  // ge = tcont
  4169d4:	tbnz	w8, #0, 416a60 <bus_machine_method_copy+0x730>
  4169d8:	mov	w8, #0x3                   	// #3
  4169dc:	str	w8, [x19, #148]
  4169e0:	bl	404d50 <__errno_location@plt>
  4169e4:	ldr	w8, [x0]
  4169e8:	str	w8, [x19, #144]
  4169ec:	str	wzr, [x19, #140]
  4169f0:	ldr	w0, [x19, #140]
  4169f4:	bl	404b80 <log_get_max_level_realm@plt>
  4169f8:	ldr	w8, [x19, #148]
  4169fc:	and	w8, w8, #0x7
  416a00:	cmp	w0, w8
  416a04:	b.lt	416a38 <bus_machine_method_copy+0x708>  // b.tstop
  416a08:	ldr	w8, [x19, #140]
  416a0c:	ldr	w9, [x19, #148]
  416a10:	orr	w0, w9, w8, lsl #10
  416a14:	ldr	w1, [x19, #144]
  416a18:	ldr	x2, [x19, #96]
  416a1c:	mov	w3, #0x48d                 	// #1165
  416a20:	ldr	x4, [x19, #80]
  416a24:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  416a28:	add	x5, x5, #0xd67
  416a2c:	bl	404b90 <log_internal_realm@plt>
  416a30:	str	w0, [x19, #56]
  416a34:	b	416a4c <bus_machine_method_copy+0x71c>
  416a38:	ldr	w0, [x19, #144]
  416a3c:	bl	404ba0 <abs@plt>
  416a40:	mov	w8, wzr
  416a44:	subs	w8, w8, w0, uxtb
  416a48:	str	w8, [x19, #56]
  416a4c:	ldr	w8, [x19, #56]
  416a50:	str	w8, [x19, #136]
  416a54:	ldr	w8, [x19, #136]
  416a58:	stur	w8, [x29, #-140]
  416a5c:	b	416c98 <bus_machine_method_copy+0x968>
  416a60:	ldur	x0, [x29, #-88]
  416a64:	mov	w1, #0x4100                	// #16640
  416a68:	movk	w1, #0x8, lsl #16
  416a6c:	bl	405190 <open64@plt>
  416a70:	stur	w0, [x29, #-180]
  416a74:	ldur	w8, [x29, #-180]
  416a78:	cmp	w8, #0x0
  416a7c:	cset	w8, ge  // ge = tcont
  416a80:	tbnz	w8, #0, 416b0c <bus_machine_method_copy+0x7dc>
  416a84:	mov	w8, #0x3                   	// #3
  416a88:	str	w8, [x19, #132]
  416a8c:	bl	404d50 <__errno_location@plt>
  416a90:	ldr	w8, [x0]
  416a94:	str	w8, [x19, #128]
  416a98:	str	wzr, [x19, #124]
  416a9c:	ldr	w0, [x19, #124]
  416aa0:	bl	404b80 <log_get_max_level_realm@plt>
  416aa4:	ldr	w8, [x19, #132]
  416aa8:	and	w8, w8, #0x7
  416aac:	cmp	w0, w8
  416ab0:	b.lt	416ae4 <bus_machine_method_copy+0x7b4>  // b.tstop
  416ab4:	ldr	w8, [x19, #124]
  416ab8:	ldr	w9, [x19, #132]
  416abc:	orr	w0, w9, w8, lsl #10
  416ac0:	ldr	w1, [x19, #128]
  416ac4:	ldr	x2, [x19, #96]
  416ac8:	mov	w3, #0x493                 	// #1171
  416acc:	ldr	x4, [x19, #80]
  416ad0:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  416ad4:	add	x5, x5, #0xef5
  416ad8:	bl	404b90 <log_internal_realm@plt>
  416adc:	str	w0, [x19, #52]
  416ae0:	b	416af8 <bus_machine_method_copy+0x7c8>
  416ae4:	ldr	w0, [x19, #128]
  416ae8:	bl	404ba0 <abs@plt>
  416aec:	mov	w8, wzr
  416af0:	subs	w8, w8, w0, uxtb
  416af4:	str	w8, [x19, #52]
  416af8:	ldr	w8, [x19, #52]
  416afc:	str	w8, [x19, #120]
  416b00:	ldr	w8, [x19, #120]
  416b04:	stur	w8, [x29, #-140]
  416b08:	b	416c98 <bus_machine_method_copy+0x968>
  416b0c:	ldurb	w8, [x29, #-113]
  416b10:	tbnz	w8, #0, 416b18 <bus_machine_method_copy+0x7e8>
  416b14:	b	416b58 <bus_machine_method_copy+0x828>
  416b18:	ldur	w0, [x29, #-180]
  416b1c:	ldur	x1, [x29, #-80]
  416b20:	ldur	w2, [x29, #-104]
  416b24:	ldur	x3, [x29, #-72]
  416b28:	ldur	w8, [x29, #-124]
  416b2c:	mov	w9, wzr
  416b30:	mov	w10, #0xffffffff            	// #-1
  416b34:	cmp	w8, #0x0
  416b38:	csel	w4, w10, w9, eq  // eq = none
  416b3c:	ldur	w8, [x29, #-124]
  416b40:	cmp	w8, #0x0
  416b44:	csel	w5, w10, w9, eq  // eq = none
  416b48:	ldur	w6, [x29, #-100]
  416b4c:	bl	416d4c <copy_tree_at>
  416b50:	stur	w0, [x29, #-140]
  416b54:	b	416be0 <bus_machine_method_copy+0x8b0>
  416b58:	ldur	w0, [x29, #-104]
  416b5c:	ldur	x1, [x29, #-72]
  416b60:	ldur	w2, [x29, #-180]
  416b64:	ldur	x3, [x29, #-80]
  416b68:	ldur	w8, [x29, #-124]
  416b6c:	str	w0, [x19, #48]
  416b70:	str	x1, [x19, #40]
  416b74:	str	w2, [x19, #36]
  416b78:	str	x3, [x19, #24]
  416b7c:	cbnz	w8, 416b8c <bus_machine_method_copy+0x85c>
  416b80:	mov	w8, #0xffffffff            	// #-1
  416b84:	str	w8, [x19, #20]
  416b88:	b	416b94 <bus_machine_method_copy+0x864>
  416b8c:	ldur	w8, [x29, #-124]
  416b90:	str	w8, [x19, #20]
  416b94:	ldr	w8, [x19, #20]
  416b98:	ldur	w9, [x29, #-124]
  416b9c:	str	w8, [x19, #16]
  416ba0:	cbnz	w9, 416bb0 <bus_machine_method_copy+0x880>
  416ba4:	mov	w8, #0xffffffff            	// #-1
  416ba8:	str	w8, [x19, #12]
  416bac:	b	416bb8 <bus_machine_method_copy+0x888>
  416bb0:	ldur	w8, [x29, #-124]
  416bb4:	str	w8, [x19, #12]
  416bb8:	ldr	w8, [x19, #12]
  416bbc:	ldur	w6, [x29, #-100]
  416bc0:	ldr	w0, [x19, #48]
  416bc4:	ldr	x1, [x19, #40]
  416bc8:	ldr	w2, [x19, #36]
  416bcc:	ldr	x3, [x19, #24]
  416bd0:	ldr	w4, [x19, #16]
  416bd4:	mov	w5, w8
  416bd8:	bl	416d4c <copy_tree_at>
  416bdc:	stur	w0, [x29, #-140]
  416be0:	ldur	w0, [x29, #-104]
  416be4:	bl	4052c0 <safe_close@plt>
  416be8:	stur	w0, [x29, #-104]
  416bec:	ldur	w0, [x29, #-180]
  416bf0:	bl	4052c0 <safe_close@plt>
  416bf4:	stur	w0, [x29, #-180]
  416bf8:	ldur	w8, [x29, #-140]
  416bfc:	cmp	w8, #0x0
  416c00:	cset	w8, ge  // ge = tcont
  416c04:	tbnz	w8, #0, 416c8c <bus_machine_method_copy+0x95c>
  416c08:	mov	w8, #0x3                   	// #3
  416c0c:	str	w8, [x19, #116]
  416c10:	ldur	w8, [x29, #-140]
  416c14:	str	w8, [x19, #112]
  416c18:	str	wzr, [x19, #108]
  416c1c:	ldr	w0, [x19, #108]
  416c20:	bl	404b80 <log_get_max_level_realm@plt>
  416c24:	ldr	w8, [x19, #116]
  416c28:	and	w8, w8, #0x7
  416c2c:	cmp	w0, w8
  416c30:	b.lt	416c64 <bus_machine_method_copy+0x934>  // b.tstop
  416c34:	ldr	w8, [x19, #108]
  416c38:	ldr	w9, [x19, #116]
  416c3c:	orr	w0, w9, w8, lsl #10
  416c40:	ldr	w1, [x19, #112]
  416c44:	ldr	x2, [x19, #96]
  416c48:	mov	w3, #0x4a3                 	// #1187
  416c4c:	ldr	x4, [x19, #80]
  416c50:	adrp	x5, 41d000 <machine_hash_ops+0x23e8>
  416c54:	add	x5, x5, #0xf1e
  416c58:	bl	404b90 <log_internal_realm@plt>
  416c5c:	str	w0, [x19, #8]
  416c60:	b	416c78 <bus_machine_method_copy+0x948>
  416c64:	ldr	w0, [x19, #112]
  416c68:	bl	404ba0 <abs@plt>
  416c6c:	mov	w8, wzr
  416c70:	subs	w8, w8, w0, uxtb
  416c74:	str	w8, [x19, #8]
  416c78:	ldr	w8, [x19, #8]
  416c7c:	str	w8, [x19, #104]
  416c80:	ldr	w8, [x19, #104]
  416c84:	stur	w8, [x29, #-140]
  416c88:	b	416c98 <bus_machine_method_copy+0x968>
  416c8c:	mov	w8, wzr
  416c90:	mov	w0, w8
  416c94:	bl	405310 <_exit@plt>
  416c98:	ldur	w0, [x29, #-92]
  416c9c:	sub	x1, x29, #0x8c
  416ca0:	mov	x2, #0x4                   	// #4
  416ca4:	bl	4052d0 <write@plt>
  416ca8:	mov	w8, #0x1                   	// #1
  416cac:	mov	w0, w8
  416cb0:	bl	405310 <_exit@plt>
  416cb4:	ldur	w0, [x29, #-92]
  416cb8:	bl	4052c0 <safe_close@plt>
  416cbc:	stur	w0, [x29, #-92]
  416cc0:	ldur	x8, [x29, #-112]
  416cc4:	ldr	x0, [x8]
  416cc8:	ldur	x1, [x29, #-112]
  416ccc:	ldur	w2, [x29, #-120]
  416cd0:	ldur	x3, [x29, #-16]
  416cd4:	ldur	w4, [x29, #-96]
  416cd8:	mov	x8, xzr
  416cdc:	mov	x5, x8
  416ce0:	bl	419fc0 <operation_new>
  416ce4:	stur	w0, [x29, #-140]
  416ce8:	ldur	w9, [x29, #-140]
  416cec:	cmp	w9, #0x0
  416cf0:	cset	w9, ge  // ge = tcont
  416cf4:	tbnz	w9, #0, 416d14 <bus_machine_method_copy+0x9e4>
  416cf8:	ldur	w0, [x29, #-120]
  416cfc:	bl	405320 <sigkill_wait@plt>
  416d00:	ldur	w8, [x29, #-140]
  416d04:	stur	w8, [x29, #-4]
  416d08:	mov	w8, #0x1                   	// #1
  416d0c:	stur	w8, [x29, #-144]
  416d10:	b	416d28 <bus_machine_method_copy+0x9f8>
  416d14:	mov	w8, #0xffffffff            	// #-1
  416d18:	stur	w8, [x29, #-96]
  416d1c:	mov	w8, #0x1                   	// #1
  416d20:	stur	w8, [x29, #-4]
  416d24:	stur	w8, [x29, #-144]
  416d28:	sub	x0, x29, #0x68
  416d2c:	bl	412770 <closep>
  416d30:	sub	x0, x29, #0x60
  416d34:	bl	41274c <close_pairp>
  416d38:	ldur	w0, [x29, #-4]
  416d3c:	mov	sp, x29
  416d40:	ldp	x28, x19, [sp, #16]
  416d44:	ldp	x29, x30, [sp], #32
  416d48:	ret

0000000000416d4c <copy_tree_at>:
  416d4c:	sub	sp, sp, #0x50
  416d50:	stp	x29, x30, [sp, #64]
  416d54:	add	x29, sp, #0x40
  416d58:	mov	x8, xzr
  416d5c:	mov	x7, x8
  416d60:	stur	w0, [x29, #-4]
  416d64:	stur	x1, [x29, #-16]
  416d68:	stur	w2, [x29, #-20]
  416d6c:	str	x3, [sp, #32]
  416d70:	str	w4, [sp, #28]
  416d74:	str	w5, [sp, #24]
  416d78:	str	w6, [sp, #20]
  416d7c:	ldur	w0, [x29, #-4]
  416d80:	ldur	x1, [x29, #-16]
  416d84:	ldur	w2, [x29, #-20]
  416d88:	ldr	x3, [sp, #32]
  416d8c:	ldr	w4, [sp, #28]
  416d90:	ldr	w5, [sp, #24]
  416d94:	ldr	w6, [sp, #20]
  416d98:	mov	x9, sp
  416d9c:	str	x8, [x9]
  416da0:	mov	x9, sp
  416da4:	str	x8, [x9, #8]
  416da8:	bl	4057d0 <copy_tree_at_full@plt>
  416dac:	ldp	x29, x30, [sp, #64]
  416db0:	add	sp, sp, #0x50
  416db4:	ret

0000000000416db8 <bus_machine_method_open_root_directory>:
  416db8:	sub	sp, sp, #0x90
  416dbc:	stp	x29, x30, [sp, #128]
  416dc0:	add	x29, sp, #0x80
  416dc4:	mov	w8, #0xffffffff            	// #-1
  416dc8:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  416dcc:	add	x9, x9, #0x21c
  416dd0:	add	x9, x9, #0x3
  416dd4:	stur	x0, [x29, #-16]
  416dd8:	stur	x1, [x29, #-24]
  416ddc:	stur	x2, [x29, #-32]
  416de0:	stur	w8, [x29, #-36]
  416de4:	ldur	x10, [x29, #-24]
  416de8:	stur	x10, [x29, #-48]
  416dec:	str	x9, [sp, #40]
  416df0:	ldur	x8, [x29, #-16]
  416df4:	cmp	x8, #0x0
  416df8:	cset	w9, ne  // ne = any
  416dfc:	mov	w10, #0x1                   	// #1
  416e00:	eor	w9, w9, #0x1
  416e04:	eor	w9, w9, w10
  416e08:	eor	w9, w9, w10
  416e0c:	and	w9, w9, #0x1
  416e10:	mov	w0, w9
  416e14:	sxtw	x8, w0
  416e18:	cbz	x8, 416e40 <bus_machine_method_open_root_directory+0x88>
  416e1c:	mov	w8, wzr
  416e20:	mov	w0, w8
  416e24:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  416e28:	add	x1, x1, #0xebd
  416e2c:	ldr	x2, [sp, #40]
  416e30:	mov	w3, #0x4c1                 	// #1217
  416e34:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  416e38:	add	x4, x4, #0xf36
  416e3c:	bl	404bd0 <log_assert_failed_realm@plt>
  416e40:	ldur	x8, [x29, #-48]
  416e44:	cmp	x8, #0x0
  416e48:	cset	w9, ne  // ne = any
  416e4c:	mov	w10, #0x1                   	// #1
  416e50:	eor	w9, w9, #0x1
  416e54:	eor	w9, w9, w10
  416e58:	eor	w9, w9, w10
  416e5c:	and	w9, w9, #0x1
  416e60:	mov	w0, w9
  416e64:	sxtw	x8, w0
  416e68:	cbz	x8, 416e90 <bus_machine_method_open_root_directory+0xd8>
  416e6c:	mov	w8, wzr
  416e70:	mov	w0, w8
  416e74:	adrp	x1, 41a000 <operation_new+0x40>
  416e78:	add	x1, x1, #0xe18
  416e7c:	ldr	x2, [sp, #40]
  416e80:	mov	w3, #0x4c2                 	// #1218
  416e84:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  416e88:	add	x4, x4, #0xf36
  416e8c:	bl	404bd0 <log_assert_failed_realm@plt>
  416e90:	ldur	x0, [x29, #-16]
  416e94:	ldur	x8, [x29, #-48]
  416e98:	ldr	x8, [x8]
  416e9c:	add	x6, x8, #0x28
  416ea0:	ldur	x7, [x29, #-32]
  416ea4:	mov	w1, #0x15                  	// #21
  416ea8:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  416eac:	add	x2, x2, #0xb3a
  416eb0:	mov	x8, xzr
  416eb4:	mov	x3, x8
  416eb8:	mov	w9, wzr
  416ebc:	and	w4, w9, #0x1
  416ec0:	mov	w5, #0xffffffff            	// #-1
  416ec4:	bl	405250 <bus_verify_polkit_async@plt>
  416ec8:	stur	w0, [x29, #-52]
  416ecc:	ldur	w9, [x29, #-52]
  416ed0:	cmp	w9, #0x0
  416ed4:	cset	w9, ge  // ge = tcont
  416ed8:	tbnz	w9, #0, 416ef0 <bus_machine_method_open_root_directory+0x138>
  416edc:	ldur	w8, [x29, #-52]
  416ee0:	stur	w8, [x29, #-4]
  416ee4:	mov	w8, #0x1                   	// #1
  416ee8:	stur	w8, [x29, #-56]
  416eec:	b	417298 <bus_machine_method_open_root_directory+0x4e0>
  416ef0:	ldur	w8, [x29, #-52]
  416ef4:	cbnz	w8, 416f08 <bus_machine_method_open_root_directory+0x150>
  416ef8:	mov	w8, #0x1                   	// #1
  416efc:	stur	w8, [x29, #-4]
  416f00:	stur	w8, [x29, #-56]
  416f04:	b	417298 <bus_machine_method_open_root_directory+0x4e0>
  416f08:	ldur	x8, [x29, #-48]
  416f0c:	ldr	w9, [x8, #32]
  416f10:	str	w9, [sp, #36]
  416f14:	cbz	w9, 416f80 <bus_machine_method_open_root_directory+0x1c8>
  416f18:	b	416f1c <bus_machine_method_open_root_directory+0x164>
  416f1c:	ldr	w8, [sp, #36]
  416f20:	cmp	w8, #0x2
  416f24:	cset	w9, eq  // eq = none
  416f28:	eor	w9, w9, #0x1
  416f2c:	tbnz	w9, #0, 417250 <bus_machine_method_open_root_directory+0x498>
  416f30:	b	416f34 <bus_machine_method_open_root_directory+0x17c>
  416f34:	adrp	x0, 41b000 <machine_hash_ops+0x3e8>
  416f38:	add	x0, x0, #0x2c8
  416f3c:	mov	w1, #0x4000                	// #16384
  416f40:	movk	w1, #0x8, lsl #16
  416f44:	bl	405190 <open64@plt>
  416f48:	stur	w0, [x29, #-36]
  416f4c:	ldur	w8, [x29, #-36]
  416f50:	cmp	w8, #0x0
  416f54:	cset	w8, ge  // ge = tcont
  416f58:	tbnz	w8, #0, 416f7c <bus_machine_method_open_root_directory+0x1c4>
  416f5c:	bl	404d50 <__errno_location@plt>
  416f60:	ldr	w8, [x0]
  416f64:	mov	w9, wzr
  416f68:	subs	w8, w9, w8
  416f6c:	stur	w8, [x29, #-4]
  416f70:	mov	w8, #0x1                   	// #1
  416f74:	stur	w8, [x29, #-56]
  416f78:	b	417298 <bus_machine_method_open_root_directory+0x4e0>
  416f7c:	b	417278 <bus_machine_method_open_root_directory+0x4c0>
  416f80:	sub	x2, x29, #0x3c
  416f84:	mov	w8, #0xffffffff            	// #-1
  416f88:	stur	w8, [x29, #-60]
  416f8c:	add	x5, sp, #0x40
  416f90:	str	w8, [sp, #64]
  416f94:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  416f98:	add	x9, x9, #0xb48
  416f9c:	ldr	x9, [x9]
  416fa0:	str	x9, [sp, #56]
  416fa4:	ldur	x9, [x29, #-48]
  416fa8:	ldr	w0, [x9, #80]
  416fac:	mov	x9, xzr
  416fb0:	mov	x1, x9
  416fb4:	mov	x3, x9
  416fb8:	mov	x4, x9
  416fbc:	bl	405570 <namespace_open@plt>
  416fc0:	stur	w0, [x29, #-52]
  416fc4:	ldur	w8, [x29, #-52]
  416fc8:	cmp	w8, #0x0
  416fcc:	cset	w8, ge  // ge = tcont
  416fd0:	tbnz	w8, #0, 416fe8 <bus_machine_method_open_root_directory+0x230>
  416fd4:	ldur	w8, [x29, #-52]
  416fd8:	stur	w8, [x29, #-4]
  416fdc:	mov	w8, #0x1                   	// #1
  416fe0:	stur	w8, [x29, #-56]
  416fe4:	b	417228 <bus_machine_method_open_root_directory+0x470>
  416fe8:	mov	w0, #0x1                   	// #1
  416fec:	mov	w1, #0x2                   	// #2
  416ff0:	mov	w8, wzr
  416ff4:	mov	w2, w8
  416ff8:	add	x3, sp, #0x38
  416ffc:	bl	405580 <socketpair@plt>
  417000:	cmp	w0, #0x0
  417004:	cset	w8, ge  // ge = tcont
  417008:	tbnz	w8, #0, 41702c <bus_machine_method_open_root_directory+0x274>
  41700c:	bl	404d50 <__errno_location@plt>
  417010:	ldr	w8, [x0]
  417014:	mov	w9, wzr
  417018:	subs	w8, w9, w8
  41701c:	stur	w8, [x29, #-4]
  417020:	mov	w8, #0x1                   	// #1
  417024:	stur	w8, [x29, #-56]
  417028:	b	417228 <bus_machine_method_open_root_directory+0x470>
  41702c:	ldur	w6, [x29, #-60]
  417030:	ldr	w8, [sp, #64]
  417034:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  417038:	add	x0, x0, #0xf8b
  41703c:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  417040:	add	x1, x1, #0xf9b
  417044:	mov	x9, xzr
  417048:	mov	x2, x9
  41704c:	mov	x3, x9
  417050:	mov	w4, #0x5                   	// #5
  417054:	mov	w10, #0xffffffff            	// #-1
  417058:	mov	w5, w10
  41705c:	mov	w7, w10
  417060:	mov	x9, sp
  417064:	str	w10, [x9]
  417068:	mov	x9, sp
  41706c:	str	w8, [x9, #8]
  417070:	mov	x9, sp
  417074:	add	x11, sp, #0x34
  417078:	str	x11, [x9, #16]
  41707c:	bl	405590 <namespace_fork@plt>
  417080:	stur	w0, [x29, #-52]
  417084:	ldur	w8, [x29, #-52]
  417088:	cmp	w8, #0x0
  41708c:	cset	w8, ge  // ge = tcont
  417090:	tbnz	w8, #0, 4170b8 <bus_machine_method_open_root_directory+0x300>
  417094:	ldur	x0, [x29, #-32]
  417098:	ldur	w1, [x29, #-52]
  41709c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  4170a0:	add	x2, x2, #0xc94
  4170a4:	bl	405290 <sd_bus_error_set_errnof@plt>
  4170a8:	stur	w0, [x29, #-4]
  4170ac:	mov	w8, #0x1                   	// #1
  4170b0:	stur	w8, [x29, #-56]
  4170b4:	b	417228 <bus_machine_method_open_root_directory+0x470>
  4170b8:	ldur	w8, [x29, #-52]
  4170bc:	cbnz	w8, 417160 <bus_machine_method_open_root_directory+0x3a8>
  4170c0:	mov	w8, #0xffffffff            	// #-1
  4170c4:	str	w8, [sp, #48]
  4170c8:	ldr	w0, [sp, #56]
  4170cc:	bl	4052c0 <safe_close@plt>
  4170d0:	str	w0, [sp, #56]
  4170d4:	adrp	x0, 41b000 <machine_hash_ops+0x3e8>
  4170d8:	add	x0, x0, #0x2c8
  4170dc:	mov	w1, #0x4000                	// #16384
  4170e0:	movk	w1, #0x8, lsl #16
  4170e4:	bl	405190 <open64@plt>
  4170e8:	str	w0, [sp, #48]
  4170ec:	ldr	w8, [sp, #48]
  4170f0:	cmp	w8, #0x0
  4170f4:	cset	w8, ge  // ge = tcont
  4170f8:	tbnz	w8, #0, 417104 <bus_machine_method_open_root_directory+0x34c>
  4170fc:	mov	w0, #0x1                   	// #1
  417100:	bl	405310 <_exit@plt>
  417104:	ldr	w0, [sp, #60]
  417108:	ldr	w1, [sp, #48]
  41710c:	mov	x8, xzr
  417110:	mov	x2, x8
  417114:	mov	x3, x8
  417118:	mov	x4, x8
  41711c:	mov	w9, wzr
  417120:	mov	w5, w9
  417124:	mov	w6, w9
  417128:	bl	4057e0 <send_one_fd_iov_sa@plt>
  41712c:	stur	w0, [x29, #-52]
  417130:	ldr	w0, [sp, #48]
  417134:	bl	4052c0 <safe_close@plt>
  417138:	str	w0, [sp, #48]
  41713c:	ldur	w9, [x29, #-52]
  417140:	cmp	w9, #0x0
  417144:	cset	w9, ge  // ge = tcont
  417148:	tbnz	w9, #0, 417154 <bus_machine_method_open_root_directory+0x39c>
  41714c:	mov	w0, #0x1                   	// #1
  417150:	bl	405310 <_exit@plt>
  417154:	mov	w8, wzr
  417158:	mov	w0, w8
  41715c:	bl	405310 <_exit@plt>
  417160:	ldr	w0, [sp, #60]
  417164:	bl	4052c0 <safe_close@plt>
  417168:	str	w0, [sp, #60]
  41716c:	ldr	w1, [sp, #52]
  417170:	adrp	x0, 41d000 <machine_hash_ops+0x23e8>
  417174:	add	x0, x0, #0xf8b
  417178:	mov	w8, wzr
  41717c:	mov	w2, w8
  417180:	bl	4055c0 <wait_for_terminate_and_check@plt>
  417184:	stur	w0, [x29, #-52]
  417188:	ldur	w8, [x29, #-52]
  41718c:	cmp	w8, #0x0
  417190:	cset	w8, ge  // ge = tcont
  417194:	tbnz	w8, #0, 4171bc <bus_machine_method_open_root_directory+0x404>
  417198:	ldur	x0, [x29, #-32]
  41719c:	ldur	w1, [x29, #-52]
  4171a0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4171a4:	add	x2, x2, #0x431
  4171a8:	bl	405290 <sd_bus_error_set_errnof@plt>
  4171ac:	stur	w0, [x29, #-4]
  4171b0:	mov	w8, #0x1                   	// #1
  4171b4:	stur	w8, [x29, #-56]
  4171b8:	b	417228 <bus_machine_method_open_root_directory+0x470>
  4171bc:	ldur	w8, [x29, #-52]
  4171c0:	cbz	w8, 4171ec <bus_machine_method_open_root_directory+0x434>
  4171c4:	ldur	x0, [x29, #-32]
  4171c8:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  4171cc:	add	x1, x1, #0x44e
  4171d0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  4171d4:	add	x2, x2, #0x470
  4171d8:	bl	4051b0 <sd_bus_error_setf@plt>
  4171dc:	stur	w0, [x29, #-4]
  4171e0:	mov	w8, #0x1                   	// #1
  4171e4:	stur	w8, [x29, #-56]
  4171e8:	b	417228 <bus_machine_method_open_root_directory+0x470>
  4171ec:	ldr	w0, [sp, #56]
  4171f0:	mov	w1, #0x40                  	// #64
  4171f4:	bl	4057f0 <receive_one_fd@plt>
  4171f8:	stur	w0, [x29, #-36]
  4171fc:	ldur	w8, [x29, #-36]
  417200:	cmp	w8, #0x0
  417204:	cset	w8, ge  // ge = tcont
  417208:	tbnz	w8, #0, 417220 <bus_machine_method_open_root_directory+0x468>
  41720c:	ldur	w8, [x29, #-36]
  417210:	stur	w8, [x29, #-4]
  417214:	mov	w8, #0x1                   	// #1
  417218:	stur	w8, [x29, #-56]
  41721c:	b	417228 <bus_machine_method_open_root_directory+0x470>
  417220:	mov	w8, #0x6                   	// #6
  417224:	stur	w8, [x29, #-56]
  417228:	add	x0, sp, #0x38
  41722c:	bl	41274c <close_pairp>
  417230:	add	x0, sp, #0x40
  417234:	bl	412770 <closep>
  417238:	sub	x0, x29, #0x3c
  41723c:	bl	412770 <closep>
  417240:	ldur	w8, [x29, #-56]
  417244:	cmp	w8, #0x6
  417248:	b.eq	417278 <bus_machine_method_open_root_directory+0x4c0>  // b.none
  41724c:	b	417298 <bus_machine_method_open_root_directory+0x4e0>
  417250:	ldur	x0, [x29, #-32]
  417254:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  417258:	add	x1, x1, #0xb63
  41725c:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  417260:	add	x2, x2, #0xfa9
  417264:	bl	4051b0 <sd_bus_error_setf@plt>
  417268:	stur	w0, [x29, #-4]
  41726c:	mov	w8, #0x1                   	// #1
  417270:	stur	w8, [x29, #-56]
  417274:	b	417298 <bus_machine_method_open_root_directory+0x4e0>
  417278:	ldur	x0, [x29, #-16]
  41727c:	ldur	w2, [x29, #-36]
  417280:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  417284:	add	x1, x1, #0xd84
  417288:	bl	4051c0 <sd_bus_reply_method_return@plt>
  41728c:	stur	w0, [x29, #-4]
  417290:	mov	w8, #0x1                   	// #1
  417294:	stur	w8, [x29, #-56]
  417298:	sub	x0, x29, #0x24
  41729c:	bl	412770 <closep>
  4172a0:	ldur	w0, [x29, #-4]
  4172a4:	ldp	x29, x30, [sp, #128]
  4172a8:	add	sp, sp, #0x90
  4172ac:	ret

00000000004172b0 <bus_machine_method_get_uid_shift>:
  4172b0:	sub	sp, sp, #0x50
  4172b4:	stp	x29, x30, [sp, #64]
  4172b8:	add	x29, sp, #0x40
  4172bc:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  4172c0:	add	x8, x8, #0x21c
  4172c4:	add	x8, x8, #0x3
  4172c8:	stur	x0, [x29, #-16]
  4172cc:	stur	x1, [x29, #-24]
  4172d0:	str	x2, [sp, #32]
  4172d4:	ldur	x9, [x29, #-24]
  4172d8:	str	x9, [sp, #24]
  4172dc:	str	wzr, [sp, #20]
  4172e0:	str	x8, [sp, #8]
  4172e4:	ldur	x8, [x29, #-16]
  4172e8:	cmp	x8, #0x0
  4172ec:	cset	w9, ne  // ne = any
  4172f0:	mov	w10, #0x1                   	// #1
  4172f4:	eor	w9, w9, #0x1
  4172f8:	eor	w9, w9, w10
  4172fc:	eor	w9, w9, w10
  417300:	and	w9, w9, #0x1
  417304:	mov	w0, w9
  417308:	sxtw	x8, w0
  41730c:	cbz	x8, 417334 <bus_machine_method_get_uid_shift+0x84>
  417310:	mov	w8, wzr
  417314:	mov	w0, w8
  417318:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41731c:	add	x1, x1, #0xebd
  417320:	ldr	x2, [sp, #8]
  417324:	mov	w3, #0x517                 	// #1303
  417328:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  41732c:	add	x4, x4, #0xfed
  417330:	bl	404bd0 <log_assert_failed_realm@plt>
  417334:	ldr	x8, [sp, #24]
  417338:	cmp	x8, #0x0
  41733c:	cset	w9, ne  // ne = any
  417340:	mov	w10, #0x1                   	// #1
  417344:	eor	w9, w9, #0x1
  417348:	eor	w9, w9, w10
  41734c:	eor	w9, w9, w10
  417350:	and	w9, w9, #0x1
  417354:	mov	w0, w9
  417358:	sxtw	x8, w0
  41735c:	cbz	x8, 417384 <bus_machine_method_get_uid_shift+0xd4>
  417360:	mov	w8, wzr
  417364:	mov	w0, w8
  417368:	adrp	x1, 41a000 <operation_new+0x40>
  41736c:	add	x1, x1, #0xe18
  417370:	ldr	x2, [sp, #8]
  417374:	mov	w3, #0x518                 	// #1304
  417378:	adrp	x4, 41d000 <machine_hash_ops+0x23e8>
  41737c:	add	x4, x4, #0xfed
  417380:	bl	404bd0 <log_assert_failed_realm@plt>
  417384:	ldr	x8, [sp, #24]
  417388:	ldr	w9, [x8, #32]
  41738c:	cmp	w9, #0x2
  417390:	b.ne	4173b4 <bus_machine_method_get_uid_shift+0x104>  // b.any
  417394:	ldur	x0, [x29, #-16]
  417398:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41739c:	add	x1, x1, #0xbe1
  4173a0:	mov	w8, wzr
  4173a4:	mov	w2, w8
  4173a8:	bl	4051c0 <sd_bus_reply_method_return@plt>
  4173ac:	stur	w0, [x29, #-4]
  4173b0:	b	41745c <bus_machine_method_get_uid_shift+0x1ac>
  4173b4:	ldr	x8, [sp, #24]
  4173b8:	ldr	w9, [x8, #32]
  4173bc:	cbz	w9, 4173e0 <bus_machine_method_get_uid_shift+0x130>
  4173c0:	ldr	x0, [sp, #32]
  4173c4:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4173c8:	add	x1, x1, #0xb63
  4173cc:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  4173d0:	add	x2, x2, #0x3c
  4173d4:	bl	4051b0 <sd_bus_error_setf@plt>
  4173d8:	stur	w0, [x29, #-4]
  4173dc:	b	41745c <bus_machine_method_get_uid_shift+0x1ac>
  4173e0:	ldr	x0, [sp, #24]
  4173e4:	add	x1, sp, #0x14
  4173e8:	bl	40a580 <machine_get_uid_shift>
  4173ec:	str	w0, [sp, #16]
  4173f0:	ldr	w8, [sp, #16]
  4173f4:	mov	w9, #0xfffffffa            	// #-6
  4173f8:	cmp	w8, w9
  4173fc:	b.ne	417428 <bus_machine_method_get_uid_shift+0x178>  // b.any
  417400:	ldr	x0, [sp, #32]
  417404:	ldr	x8, [sp, #24]
  417408:	ldr	x3, [x8, #8]
  41740c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  417410:	add	x1, x1, #0xb63
  417414:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  417418:	add	x2, x2, #0x79
  41741c:	bl	4051b0 <sd_bus_error_setf@plt>
  417420:	stur	w0, [x29, #-4]
  417424:	b	41745c <bus_machine_method_get_uid_shift+0x1ac>
  417428:	ldr	w8, [sp, #16]
  41742c:	cmp	w8, #0x0
  417430:	cset	w8, ge  // ge = tcont
  417434:	tbnz	w8, #0, 417444 <bus_machine_method_get_uid_shift+0x194>
  417438:	ldr	w8, [sp, #16]
  41743c:	stur	w8, [x29, #-4]
  417440:	b	41745c <bus_machine_method_get_uid_shift+0x1ac>
  417444:	ldur	x0, [x29, #-16]
  417448:	ldr	w2, [sp, #20]
  41744c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  417450:	add	x1, x1, #0xbe1
  417454:	bl	4051c0 <sd_bus_reply_method_return@plt>
  417458:	stur	w0, [x29, #-4]
  41745c:	ldur	w0, [x29, #-4]
  417460:	ldp	x29, x30, [sp, #64]
  417464:	add	sp, sp, #0x50
  417468:	ret

000000000041746c <property_get_class>:
  41746c:	sub	sp, sp, #0x70
  417470:	stp	x29, x30, [sp, #96]
  417474:	add	x29, sp, #0x60
  417478:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  41747c:	add	x8, x8, #0x21c
  417480:	add	x8, x8, #0x3
  417484:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  417488:	add	x9, x9, #0x42c
  41748c:	stur	x0, [x29, #-8]
  417490:	stur	x1, [x29, #-16]
  417494:	stur	x2, [x29, #-24]
  417498:	stur	x3, [x29, #-32]
  41749c:	stur	x4, [x29, #-40]
  4174a0:	str	x5, [sp, #48]
  4174a4:	str	x6, [sp, #40]
  4174a8:	ldr	x10, [sp, #48]
  4174ac:	str	x10, [sp, #32]
  4174b0:	str	x8, [sp, #24]
  4174b4:	str	x9, [sp, #16]
  4174b8:	ldur	x8, [x29, #-8]
  4174bc:	cmp	x8, #0x0
  4174c0:	cset	w9, ne  // ne = any
  4174c4:	mov	w10, #0x1                   	// #1
  4174c8:	eor	w9, w9, #0x1
  4174cc:	eor	w9, w9, w10
  4174d0:	eor	w9, w9, w10
  4174d4:	and	w9, w9, #0x1
  4174d8:	mov	w0, w9
  4174dc:	sxtw	x8, w0
  4174e0:	cbz	x8, 417504 <property_get_class+0x98>
  4174e4:	mov	w8, wzr
  4174e8:	mov	w0, w8
  4174ec:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4174f0:	add	x1, x1, #0x3da
  4174f4:	ldr	x2, [sp, #24]
  4174f8:	mov	w3, #0x29                  	// #41
  4174fc:	ldr	x4, [sp, #16]
  417500:	bl	404bd0 <log_assert_failed_realm@plt>
  417504:	ldur	x8, [x29, #-40]
  417508:	cmp	x8, #0x0
  41750c:	cset	w9, ne  // ne = any
  417510:	mov	w10, #0x1                   	// #1
  417514:	eor	w9, w9, #0x1
  417518:	eor	w9, w9, w10
  41751c:	eor	w9, w9, w10
  417520:	and	w9, w9, #0x1
  417524:	mov	w0, w9
  417528:	sxtw	x8, w0
  41752c:	cbz	x8, 417550 <property_get_class+0xe4>
  417530:	mov	w8, wzr
  417534:	mov	w0, w8
  417538:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41753c:	add	x1, x1, #0x457
  417540:	ldr	x2, [sp, #24]
  417544:	mov	w3, #0x29                  	// #41
  417548:	ldr	x4, [sp, #16]
  41754c:	bl	404bd0 <log_assert_failed_realm@plt>
  417550:	ldr	x8, [sp, #32]
  417554:	cmp	x8, #0x0
  417558:	cset	w9, ne  // ne = any
  41755c:	mov	w10, #0x1                   	// #1
  417560:	eor	w9, w9, #0x1
  417564:	eor	w9, w9, w10
  417568:	eor	w9, w9, w10
  41756c:	and	w9, w9, #0x1
  417570:	mov	w0, w9
  417574:	sxtw	x8, w0
  417578:	cbz	x8, 41759c <property_get_class+0x130>
  41757c:	mov	w8, wzr
  417580:	mov	w0, w8
  417584:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  417588:	add	x1, x1, #0x4a1
  41758c:	ldr	x2, [sp, #24]
  417590:	mov	w3, #0x29                  	// #41
  417594:	ldr	x4, [sp, #16]
  417598:	bl	404bd0 <log_assert_failed_realm@plt>
  41759c:	ldur	x0, [x29, #-40]
  4175a0:	ldr	x8, [sp, #32]
  4175a4:	ldr	w9, [x8]
  4175a8:	str	x0, [sp, #8]
  4175ac:	mov	w0, w9
  4175b0:	bl	408c2c <machine_class_to_string>
  4175b4:	ldr	x8, [sp, #8]
  4175b8:	str	x0, [sp]
  4175bc:	mov	x0, x8
  4175c0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4175c4:	add	x1, x1, #0x7ae
  4175c8:	ldr	x2, [sp]
  4175cc:	bl	405120 <sd_bus_message_append@plt>
  4175d0:	ldp	x29, x30, [sp, #96]
  4175d4:	add	sp, sp, #0x70
  4175d8:	ret

00000000004175dc <property_get_netif>:
  4175dc:	sub	sp, sp, #0x60
  4175e0:	stp	x29, x30, [sp, #80]
  4175e4:	add	x29, sp, #0x50
  4175e8:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  4175ec:	add	x8, x8, #0x21c
  4175f0:	add	x8, x8, #0x3
  4175f4:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  4175f8:	add	x9, x9, #0x4a6
  4175fc:	stur	x0, [x29, #-8]
  417600:	stur	x1, [x29, #-16]
  417604:	stur	x2, [x29, #-24]
  417608:	stur	x3, [x29, #-32]
  41760c:	str	x4, [sp, #40]
  417610:	str	x5, [sp, #32]
  417614:	str	x6, [sp, #24]
  417618:	ldr	x10, [sp, #32]
  41761c:	str	x10, [sp, #16]
  417620:	str	x8, [sp, #8]
  417624:	str	x9, [sp]
  417628:	ldur	x8, [x29, #-8]
  41762c:	cmp	x8, #0x0
  417630:	cset	w9, ne  // ne = any
  417634:	mov	w10, #0x1                   	// #1
  417638:	eor	w9, w9, #0x1
  41763c:	eor	w9, w9, w10
  417640:	eor	w9, w9, w10
  417644:	and	w9, w9, #0x1
  417648:	mov	w0, w9
  41764c:	sxtw	x8, w0
  417650:	cbz	x8, 417674 <property_get_netif+0x98>
  417654:	mov	w8, wzr
  417658:	mov	w0, w8
  41765c:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  417660:	add	x1, x1, #0x3da
  417664:	ldr	x2, [sp, #8]
  417668:	mov	w3, #0x37                  	// #55
  41766c:	ldr	x4, [sp]
  417670:	bl	404bd0 <log_assert_failed_realm@plt>
  417674:	ldr	x8, [sp, #40]
  417678:	cmp	x8, #0x0
  41767c:	cset	w9, ne  // ne = any
  417680:	mov	w10, #0x1                   	// #1
  417684:	eor	w9, w9, #0x1
  417688:	eor	w9, w9, w10
  41768c:	eor	w9, w9, w10
  417690:	and	w9, w9, #0x1
  417694:	mov	w0, w9
  417698:	sxtw	x8, w0
  41769c:	cbz	x8, 4176c0 <property_get_netif+0xe4>
  4176a0:	mov	w8, wzr
  4176a4:	mov	w0, w8
  4176a8:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4176ac:	add	x1, x1, #0x457
  4176b0:	ldr	x2, [sp, #8]
  4176b4:	mov	w3, #0x38                  	// #56
  4176b8:	ldr	x4, [sp]
  4176bc:	bl	404bd0 <log_assert_failed_realm@plt>
  4176c0:	ldr	x8, [sp, #16]
  4176c4:	cmp	x8, #0x0
  4176c8:	cset	w9, ne  // ne = any
  4176cc:	mov	w10, #0x1                   	// #1
  4176d0:	eor	w9, w9, #0x1
  4176d4:	eor	w9, w9, w10
  4176d8:	eor	w9, w9, w10
  4176dc:	and	w9, w9, #0x1
  4176e0:	mov	w0, w9
  4176e4:	sxtw	x8, w0
  4176e8:	cbz	x8, 41770c <property_get_netif+0x130>
  4176ec:	mov	w8, wzr
  4176f0:	mov	w0, w8
  4176f4:	adrp	x1, 41a000 <operation_new+0x40>
  4176f8:	add	x1, x1, #0xe18
  4176fc:	ldr	x2, [sp, #8]
  417700:	mov	w3, #0x39                  	// #57
  417704:	ldr	x4, [sp]
  417708:	bl	404bd0 <log_assert_failed_realm@plt>
  41770c:	ldr	x0, [sp, #40]
  417710:	ldr	x8, [sp, #16]
  417714:	ldr	x2, [x8, #120]
  417718:	ldr	x8, [sp, #16]
  41771c:	ldr	x8, [x8, #128]
  417720:	mov	x9, #0x4                   	// #4
  417724:	mul	x3, x8, x9
  417728:	mov	w1, #0x69                  	// #105
  41772c:	bl	405550 <sd_bus_message_append_array@plt>
  417730:	ldp	x29, x30, [sp, #80]
  417734:	add	sp, sp, #0x60
  417738:	ret

000000000041773c <property_get_state>:
  41773c:	sub	sp, sp, #0x70
  417740:	stp	x29, x30, [sp, #96]
  417744:	add	x29, sp, #0x60
  417748:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  41774c:	add	x8, x8, #0x21c
  417750:	add	x8, x8, #0x3
  417754:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  417758:	add	x9, x9, #0x51b
  41775c:	stur	x0, [x29, #-8]
  417760:	stur	x1, [x29, #-16]
  417764:	stur	x2, [x29, #-24]
  417768:	stur	x3, [x29, #-32]
  41776c:	stur	x4, [x29, #-40]
  417770:	str	x5, [sp, #48]
  417774:	str	x6, [sp, #40]
  417778:	ldr	x10, [sp, #48]
  41777c:	str	x10, [sp, #32]
  417780:	str	x8, [sp, #24]
  417784:	str	x9, [sp, #16]
  417788:	ldur	x8, [x29, #-8]
  41778c:	cmp	x8, #0x0
  417790:	cset	w9, ne  // ne = any
  417794:	mov	w10, #0x1                   	// #1
  417798:	eor	w9, w9, #0x1
  41779c:	eor	w9, w9, w10
  4177a0:	eor	w9, w9, w10
  4177a4:	and	w9, w9, #0x1
  4177a8:	mov	w0, w9
  4177ac:	sxtw	x8, w0
  4177b0:	cbz	x8, 4177d4 <property_get_state+0x98>
  4177b4:	mov	w8, wzr
  4177b8:	mov	w0, w8
  4177bc:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4177c0:	add	x1, x1, #0x3da
  4177c4:	ldr	x2, [sp, #24]
  4177c8:	mov	w3, #0x2a                  	// #42
  4177cc:	ldr	x4, [sp, #16]
  4177d0:	bl	404bd0 <log_assert_failed_realm@plt>
  4177d4:	ldur	x8, [x29, #-40]
  4177d8:	cmp	x8, #0x0
  4177dc:	cset	w9, ne  // ne = any
  4177e0:	mov	w10, #0x1                   	// #1
  4177e4:	eor	w9, w9, #0x1
  4177e8:	eor	w9, w9, w10
  4177ec:	eor	w9, w9, w10
  4177f0:	and	w9, w9, #0x1
  4177f4:	mov	w0, w9
  4177f8:	sxtw	x8, w0
  4177fc:	cbz	x8, 417820 <property_get_state+0xe4>
  417800:	mov	w8, wzr
  417804:	mov	w0, w8
  417808:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41780c:	add	x1, x1, #0x457
  417810:	ldr	x2, [sp, #24]
  417814:	mov	w3, #0x2a                  	// #42
  417818:	ldr	x4, [sp, #16]
  41781c:	bl	404bd0 <log_assert_failed_realm@plt>
  417820:	ldr	x8, [sp, #32]
  417824:	cmp	x8, #0x0
  417828:	cset	w9, ne  // ne = any
  41782c:	mov	w10, #0x1                   	// #1
  417830:	eor	w9, w9, #0x1
  417834:	eor	w9, w9, w10
  417838:	eor	w9, w9, w10
  41783c:	and	w9, w9, #0x1
  417840:	mov	w0, w9
  417844:	sxtw	x8, w0
  417848:	cbz	x8, 41786c <property_get_state+0x130>
  41784c:	mov	w8, wzr
  417850:	mov	w0, w8
  417854:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  417858:	add	x1, x1, #0x4a1
  41785c:	ldr	x2, [sp, #24]
  417860:	mov	w3, #0x2a                  	// #42
  417864:	ldr	x4, [sp, #16]
  417868:	bl	404bd0 <log_assert_failed_realm@plt>
  41786c:	ldur	x0, [x29, #-40]
  417870:	ldr	x8, [sp, #32]
  417874:	str	x0, [sp, #8]
  417878:	mov	x0, x8
  41787c:	bl	40a128 <machine_get_state>
  417880:	bl	40aad4 <machine_state_to_string>
  417884:	ldr	x8, [sp, #8]
  417888:	str	x0, [sp]
  41788c:	mov	x0, x8
  417890:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  417894:	add	x1, x1, #0x7ae
  417898:	ldr	x2, [sp]
  41789c:	bl	405120 <sd_bus_message_append@plt>
  4178a0:	ldp	x29, x30, [sp, #96]
  4178a4:	add	sp, sp, #0x70
  4178a8:	ret

00000000004178ac <machine_object_find>:
  4178ac:	sub	sp, sp, #0xa0
  4178b0:	stp	x29, x30, [sp, #144]
  4178b4:	add	x29, sp, #0x90
  4178b8:	adrp	x8, 41d000 <machine_hash_ops+0x23e8>
  4178bc:	add	x8, x8, #0x21c
  4178c0:	add	x8, x8, #0x3
  4178c4:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  4178c8:	add	x9, x9, #0x19e
  4178cc:	stur	x0, [x29, #-16]
  4178d0:	stur	x1, [x29, #-24]
  4178d4:	stur	x2, [x29, #-32]
  4178d8:	stur	x3, [x29, #-40]
  4178dc:	stur	x4, [x29, #-48]
  4178e0:	stur	x5, [x29, #-56]
  4178e4:	ldur	x10, [x29, #-40]
  4178e8:	stur	x10, [x29, #-64]
  4178ec:	str	x8, [sp, #16]
  4178f0:	str	x9, [sp, #8]
  4178f4:	ldur	x8, [x29, #-16]
  4178f8:	cmp	x8, #0x0
  4178fc:	cset	w9, ne  // ne = any
  417900:	mov	w10, #0x1                   	// #1
  417904:	eor	w9, w9, #0x1
  417908:	eor	w9, w9, w10
  41790c:	eor	w9, w9, w10
  417910:	and	w9, w9, #0x1
  417914:	mov	w0, w9
  417918:	sxtw	x8, w0
  41791c:	cbz	x8, 417940 <machine_object_find+0x94>
  417920:	mov	w8, wzr
  417924:	mov	w0, w8
  417928:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41792c:	add	x1, x1, #0x3da
  417930:	ldr	x2, [sp, #16]
  417934:	mov	w3, #0x54d                 	// #1357
  417938:	ldr	x4, [sp, #8]
  41793c:	bl	404bd0 <log_assert_failed_realm@plt>
  417940:	ldur	x8, [x29, #-24]
  417944:	cmp	x8, #0x0
  417948:	cset	w9, ne  // ne = any
  41794c:	mov	w10, #0x1                   	// #1
  417950:	eor	w9, w9, #0x1
  417954:	eor	w9, w9, w10
  417958:	eor	w9, w9, w10
  41795c:	and	w9, w9, #0x1
  417960:	mov	w0, w9
  417964:	sxtw	x8, w0
  417968:	cbz	x8, 41798c <machine_object_find+0xe0>
  41796c:	mov	w8, wzr
  417970:	mov	w0, w8
  417974:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  417978:	add	x1, x1, #0x306
  41797c:	ldr	x2, [sp, #16]
  417980:	mov	w3, #0x54e                 	// #1358
  417984:	ldr	x4, [sp, #8]
  417988:	bl	404bd0 <log_assert_failed_realm@plt>
  41798c:	ldur	x8, [x29, #-32]
  417990:	cmp	x8, #0x0
  417994:	cset	w9, ne  // ne = any
  417998:	mov	w10, #0x1                   	// #1
  41799c:	eor	w9, w9, #0x1
  4179a0:	eor	w9, w9, w10
  4179a4:	eor	w9, w9, w10
  4179a8:	and	w9, w9, #0x1
  4179ac:	mov	w0, w9
  4179b0:	sxtw	x8, w0
  4179b4:	cbz	x8, 4179d8 <machine_object_find+0x12c>
  4179b8:	mov	w8, wzr
  4179bc:	mov	w0, w8
  4179c0:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  4179c4:	add	x1, x1, #0x1fd
  4179c8:	ldr	x2, [sp, #16]
  4179cc:	mov	w3, #0x54f                 	// #1359
  4179d0:	ldr	x4, [sp, #8]
  4179d4:	bl	404bd0 <log_assert_failed_realm@plt>
  4179d8:	ldur	x8, [x29, #-48]
  4179dc:	cmp	x8, #0x0
  4179e0:	cset	w9, ne  // ne = any
  4179e4:	mov	w10, #0x1                   	// #1
  4179e8:	eor	w9, w9, #0x1
  4179ec:	eor	w9, w9, w10
  4179f0:	eor	w9, w9, w10
  4179f4:	and	w9, w9, #0x1
  4179f8:	mov	w0, w9
  4179fc:	sxtw	x8, w0
  417a00:	cbz	x8, 417a24 <machine_object_find+0x178>
  417a04:	mov	w8, wzr
  417a08:	mov	w0, w8
  417a0c:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  417a10:	add	x1, x1, #0x207
  417a14:	ldr	x2, [sp, #16]
  417a18:	mov	w3, #0x550                 	// #1360
  417a1c:	ldr	x4, [sp, #8]
  417a20:	bl	404bd0 <log_assert_failed_realm@plt>
  417a24:	ldur	x8, [x29, #-64]
  417a28:	cmp	x8, #0x0
  417a2c:	cset	w9, ne  // ne = any
  417a30:	mov	w10, #0x1                   	// #1
  417a34:	eor	w9, w9, #0x1
  417a38:	eor	w9, w9, w10
  417a3c:	eor	w9, w9, w10
  417a40:	and	w9, w9, #0x1
  417a44:	mov	w0, w9
  417a48:	sxtw	x8, w0
  417a4c:	cbz	x8, 417a70 <machine_object_find+0x1c4>
  417a50:	mov	w8, wzr
  417a54:	mov	w0, w8
  417a58:	adrp	x1, 41a000 <operation_new+0x40>
  417a5c:	add	x1, x1, #0xe18
  417a60:	ldr	x2, [sp, #16]
  417a64:	mov	w3, #0x551                 	// #1361
  417a68:	ldr	x4, [sp, #8]
  417a6c:	bl	404bd0 <log_assert_failed_realm@plt>
  417a70:	ldur	x0, [x29, #-24]
  417a74:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  417a78:	add	x1, x1, #0x20d
  417a7c:	bl	404e40 <strcmp@plt>
  417a80:	cbnz	w0, 417b70 <machine_object_find+0x2c4>
  417a84:	mov	x8, xzr
  417a88:	str	x8, [sp, #56]
  417a8c:	ldur	x0, [x29, #-16]
  417a90:	bl	405800 <sd_bus_get_current_message@plt>
  417a94:	str	x0, [sp, #48]
  417a98:	ldr	x8, [sp, #48]
  417a9c:	cbnz	x8, 417ab0 <machine_object_find+0x204>
  417aa0:	stur	wzr, [x29, #-4]
  417aa4:	mov	w8, #0x1                   	// #1
  417aa8:	str	w8, [sp, #40]
  417aac:	b	417b54 <machine_object_find+0x2a8>
  417ab0:	ldr	x0, [sp, #48]
  417ab4:	mov	x1, #0x1                   	// #1
  417ab8:	add	x2, sp, #0x38
  417abc:	bl	4051e0 <sd_bus_query_sender_creds@plt>
  417ac0:	str	w0, [sp, #68]
  417ac4:	ldr	w8, [sp, #68]
  417ac8:	cmp	w8, #0x0
  417acc:	cset	w8, ge  // ge = tcont
  417ad0:	tbnz	w8, #0, 417ae8 <machine_object_find+0x23c>
  417ad4:	ldr	w8, [sp, #68]
  417ad8:	stur	w8, [x29, #-4]
  417adc:	mov	w8, #0x1                   	// #1
  417ae0:	str	w8, [sp, #40]
  417ae4:	b	417b54 <machine_object_find+0x2a8>
  417ae8:	ldr	x0, [sp, #56]
  417aec:	add	x1, sp, #0x2c
  417af0:	bl	4051f0 <sd_bus_creds_get_pid@plt>
  417af4:	str	w0, [sp, #68]
  417af8:	ldr	w8, [sp, #68]
  417afc:	cmp	w8, #0x0
  417b00:	cset	w8, ge  // ge = tcont
  417b04:	tbnz	w8, #0, 417b1c <machine_object_find+0x270>
  417b08:	ldr	w8, [sp, #68]
  417b0c:	stur	w8, [x29, #-4]
  417b10:	mov	w8, #0x1                   	// #1
  417b14:	str	w8, [sp, #40]
  417b18:	b	417b54 <machine_object_find+0x2a8>
  417b1c:	ldur	x0, [x29, #-64]
  417b20:	ldr	w1, [sp, #44]
  417b24:	add	x2, sp, #0x48
  417b28:	bl	40f6e8 <manager_get_machine_by_pid>
  417b2c:	str	w0, [sp, #68]
  417b30:	ldr	w8, [sp, #68]
  417b34:	cmp	w8, #0x0
  417b38:	cset	w8, gt
  417b3c:	tbnz	w8, #0, 417b50 <machine_object_find+0x2a4>
  417b40:	stur	wzr, [x29, #-4]
  417b44:	mov	w8, #0x1                   	// #1
  417b48:	str	w8, [sp, #40]
  417b4c:	b	417b54 <machine_object_find+0x2a8>
  417b50:	str	wzr, [sp, #40]
  417b54:	add	x0, sp, #0x38
  417b58:	bl	417c38 <sd_bus_creds_unrefp>
  417b5c:	ldr	w8, [sp, #40]
  417b60:	cbz	w8, 417b6c <machine_object_find+0x2c0>
  417b64:	b	417b68 <machine_object_find+0x2bc>
  417b68:	b	417c28 <machine_object_find+0x37c>
  417b6c:	b	417c14 <machine_object_find+0x368>
  417b70:	mov	x8, xzr
  417b74:	str	x8, [sp, #32]
  417b78:	ldur	x0, [x29, #-24]
  417b7c:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  417b80:	add	x1, x1, #0x234
  417b84:	bl	417c6c <startswith>
  417b88:	str	x0, [sp, #24]
  417b8c:	ldr	x8, [sp, #24]
  417b90:	cbnz	x8, 417ba4 <machine_object_find+0x2f8>
  417b94:	stur	wzr, [x29, #-4]
  417b98:	mov	w8, #0x1                   	// #1
  417b9c:	str	w8, [sp, #40]
  417ba0:	b	417bfc <machine_object_find+0x350>
  417ba4:	ldr	x0, [sp, #24]
  417ba8:	bl	417ccc <bus_label_unescape>
  417bac:	str	x0, [sp, #32]
  417bb0:	ldr	x8, [sp, #32]
  417bb4:	cbnz	x8, 417bcc <machine_object_find+0x320>
  417bb8:	mov	w8, #0xfffffff4            	// #-12
  417bbc:	stur	w8, [x29, #-4]
  417bc0:	mov	w8, #0x1                   	// #1
  417bc4:	str	w8, [sp, #40]
  417bc8:	b	417bfc <machine_object_find+0x350>
  417bcc:	ldur	x8, [x29, #-64]
  417bd0:	ldr	x0, [x8, #16]
  417bd4:	ldr	x1, [sp, #32]
  417bd8:	bl	417d10 <hashmap_get>
  417bdc:	str	x0, [sp, #72]
  417be0:	ldr	x8, [sp, #72]
  417be4:	cbnz	x8, 417bf8 <machine_object_find+0x34c>
  417be8:	stur	wzr, [x29, #-4]
  417bec:	mov	w8, #0x1                   	// #1
  417bf0:	str	w8, [sp, #40]
  417bf4:	b	417bfc <machine_object_find+0x350>
  417bf8:	str	wzr, [sp, #40]
  417bfc:	add	x0, sp, #0x20
  417c00:	bl	412648 <freep>
  417c04:	ldr	w8, [sp, #40]
  417c08:	cbz	w8, 417c14 <machine_object_find+0x368>
  417c0c:	b	417c10 <machine_object_find+0x364>
  417c10:	b	417c28 <machine_object_find+0x37c>
  417c14:	ldr	x8, [sp, #72]
  417c18:	ldur	x9, [x29, #-48]
  417c1c:	str	x8, [x9]
  417c20:	mov	w10, #0x1                   	// #1
  417c24:	stur	w10, [x29, #-4]
  417c28:	ldur	w0, [x29, #-4]
  417c2c:	ldp	x29, x30, [sp, #144]
  417c30:	add	sp, sp, #0xa0
  417c34:	ret

0000000000417c38 <sd_bus_creds_unrefp>:
  417c38:	sub	sp, sp, #0x20
  417c3c:	stp	x29, x30, [sp, #16]
  417c40:	add	x29, sp, #0x10
  417c44:	str	x0, [sp, #8]
  417c48:	ldr	x8, [sp, #8]
  417c4c:	ldr	x8, [x8]
  417c50:	cbz	x8, 417c60 <sd_bus_creds_unrefp+0x28>
  417c54:	ldr	x8, [sp, #8]
  417c58:	ldr	x0, [x8]
  417c5c:	bl	405400 <sd_bus_creds_unref@plt>
  417c60:	ldp	x29, x30, [sp, #16]
  417c64:	add	sp, sp, #0x20
  417c68:	ret

0000000000417c6c <startswith>:
  417c6c:	sub	sp, sp, #0x30
  417c70:	stp	x29, x30, [sp, #32]
  417c74:	add	x29, sp, #0x20
  417c78:	str	x0, [sp, #16]
  417c7c:	str	x1, [sp, #8]
  417c80:	ldr	x0, [sp, #8]
  417c84:	bl	404e00 <strlen@plt>
  417c88:	str	x0, [sp]
  417c8c:	ldr	x0, [sp, #16]
  417c90:	ldr	x1, [sp, #8]
  417c94:	ldr	x2, [sp]
  417c98:	bl	404e10 <strncmp@plt>
  417c9c:	cbnz	w0, 417cb4 <startswith+0x48>
  417ca0:	ldr	x8, [sp, #16]
  417ca4:	ldr	x9, [sp]
  417ca8:	add	x8, x8, x9
  417cac:	stur	x8, [x29, #-8]
  417cb0:	b	417cbc <startswith+0x50>
  417cb4:	mov	x8, xzr
  417cb8:	stur	x8, [x29, #-8]
  417cbc:	ldur	x0, [x29, #-8]
  417cc0:	ldp	x29, x30, [sp, #32]
  417cc4:	add	sp, sp, #0x30
  417cc8:	ret

0000000000417ccc <bus_label_unescape>:
  417ccc:	sub	sp, sp, #0x30
  417cd0:	stp	x29, x30, [sp, #32]
  417cd4:	add	x29, sp, #0x20
  417cd8:	stur	x0, [x29, #-8]
  417cdc:	ldur	x0, [x29, #-8]
  417ce0:	ldur	x8, [x29, #-8]
  417ce4:	str	x0, [sp, #16]
  417ce8:	mov	x0, x8
  417cec:	bl	418328 <strlen_ptr>
  417cf0:	ldr	x8, [sp, #16]
  417cf4:	str	x0, [sp, #8]
  417cf8:	mov	x0, x8
  417cfc:	ldr	x1, [sp, #8]
  417d00:	bl	405810 <bus_label_unescape_n@plt>
  417d04:	ldp	x29, x30, [sp, #32]
  417d08:	add	sp, sp, #0x30
  417d0c:	ret

0000000000417d10 <hashmap_get>:
  417d10:	sub	sp, sp, #0x20
  417d14:	stp	x29, x30, [sp, #16]
  417d18:	add	x29, sp, #0x10
  417d1c:	str	x0, [sp, #8]
  417d20:	str	x1, [sp]
  417d24:	ldr	x0, [sp, #8]
  417d28:	ldr	x1, [sp]
  417d2c:	bl	405360 <internal_hashmap_get@plt>
  417d30:	ldp	x29, x30, [sp, #16]
  417d34:	add	sp, sp, #0x20
  417d38:	ret

0000000000417d3c <machine_bus_path>:
  417d3c:	sub	sp, sp, #0x40
  417d40:	stp	x29, x30, [sp, #48]
  417d44:	add	x29, sp, #0x30
  417d48:	mov	x8, xzr
  417d4c:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  417d50:	add	x9, x9, #0x21c
  417d54:	add	x2, x9, #0x3
  417d58:	stur	x0, [x29, #-16]
  417d5c:	str	x8, [sp, #24]
  417d60:	str	x2, [sp, #8]
  417d64:	ldur	x8, [x29, #-16]
  417d68:	cmp	x8, #0x0
  417d6c:	cset	w9, ne  // ne = any
  417d70:	mov	w10, #0x1                   	// #1
  417d74:	eor	w9, w9, #0x1
  417d78:	eor	w9, w9, w10
  417d7c:	eor	w9, w9, w10
  417d80:	and	w9, w9, #0x1
  417d84:	mov	w0, w9
  417d88:	sxtw	x8, w0
  417d8c:	cbz	x8, 417db4 <machine_bus_path+0x78>
  417d90:	mov	w8, wzr
  417d94:	mov	w0, w8
  417d98:	adrp	x1, 41a000 <operation_new+0x40>
  417d9c:	add	x1, x1, #0xe18
  417da0:	ldr	x2, [sp, #8]
  417da4:	mov	w3, #0x57f                 	// #1407
  417da8:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  417dac:	add	x4, x4, #0x257
  417db0:	bl	404bd0 <log_assert_failed_realm@plt>
  417db4:	ldur	x8, [x29, #-16]
  417db8:	ldr	x0, [x8, #8]
  417dbc:	bl	405820 <bus_label_escape@plt>
  417dc0:	str	x0, [sp, #24]
  417dc4:	ldr	x8, [sp, #24]
  417dc8:	cbnz	x8, 417de0 <machine_bus_path+0xa4>
  417dcc:	mov	x8, xzr
  417dd0:	stur	x8, [x29, #-8]
  417dd4:	mov	w9, #0x1                   	// #1
  417dd8:	str	w9, [sp, #20]
  417ddc:	b	417e04 <machine_bus_path+0xc8>
  417de0:	ldr	x1, [sp, #24]
  417de4:	adrp	x0, 41e000 <machine_hash_ops+0x33e8>
  417de8:	add	x0, x0, #0x234
  417dec:	mov	x8, xzr
  417df0:	mov	x2, x8
  417df4:	bl	405100 <strjoin_real@plt>
  417df8:	stur	x0, [x29, #-8]
  417dfc:	mov	w9, #0x1                   	// #1
  417e00:	str	w9, [sp, #20]
  417e04:	add	x0, sp, #0x18
  417e08:	bl	412648 <freep>
  417e0c:	ldur	x0, [x29, #-8]
  417e10:	ldp	x29, x30, [sp, #48]
  417e14:	add	sp, sp, #0x40
  417e18:	ret

0000000000417e1c <machine_node_enumerator>:
  417e1c:	sub	sp, sp, #0xc0
  417e20:	stp	x29, x30, [sp, #176]
  417e24:	add	x29, sp, #0xb0
  417e28:	mov	x8, xzr
  417e2c:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  417e30:	add	x9, x9, #0x21c
  417e34:	add	x9, x9, #0x3
  417e38:	adrp	x10, 41e000 <machine_hash_ops+0x33e8>
  417e3c:	add	x10, x10, #0x279
  417e40:	stur	x0, [x29, #-16]
  417e44:	stur	x1, [x29, #-24]
  417e48:	stur	x2, [x29, #-32]
  417e4c:	stur	x3, [x29, #-40]
  417e50:	stur	x4, [x29, #-48]
  417e54:	stur	x8, [x29, #-56]
  417e58:	stur	x8, [x29, #-64]
  417e5c:	ldur	x8, [x29, #-32]
  417e60:	stur	x8, [x29, #-72]
  417e64:	str	x9, [sp, #16]
  417e68:	str	x10, [sp, #8]
  417e6c:	ldur	x8, [x29, #-16]
  417e70:	cmp	x8, #0x0
  417e74:	cset	w9, ne  // ne = any
  417e78:	mov	w10, #0x1                   	// #1
  417e7c:	eor	w9, w9, #0x1
  417e80:	eor	w9, w9, w10
  417e84:	eor	w9, w9, w10
  417e88:	and	w9, w9, #0x1
  417e8c:	mov	w0, w9
  417e90:	sxtw	x8, w0
  417e94:	cbz	x8, 417eb8 <machine_node_enumerator+0x9c>
  417e98:	mov	w8, wzr
  417e9c:	mov	w0, w8
  417ea0:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  417ea4:	add	x1, x1, #0x3da
  417ea8:	ldr	x2, [sp, #16]
  417eac:	mov	w3, #0x58f                 	// #1423
  417eb0:	ldr	x4, [sp, #8]
  417eb4:	bl	404bd0 <log_assert_failed_realm@plt>
  417eb8:	ldur	x8, [x29, #-24]
  417ebc:	cmp	x8, #0x0
  417ec0:	cset	w9, ne  // ne = any
  417ec4:	mov	w10, #0x1                   	// #1
  417ec8:	eor	w9, w9, #0x1
  417ecc:	eor	w9, w9, w10
  417ed0:	eor	w9, w9, w10
  417ed4:	and	w9, w9, #0x1
  417ed8:	mov	w0, w9
  417edc:	sxtw	x8, w0
  417ee0:	cbz	x8, 417f04 <machine_node_enumerator+0xe8>
  417ee4:	mov	w8, wzr
  417ee8:	mov	w0, w8
  417eec:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  417ef0:	add	x1, x1, #0x306
  417ef4:	ldr	x2, [sp, #16]
  417ef8:	mov	w3, #0x590                 	// #1424
  417efc:	ldr	x4, [sp, #8]
  417f00:	bl	404bd0 <log_assert_failed_realm@plt>
  417f04:	ldur	x8, [x29, #-40]
  417f08:	cmp	x8, #0x0
  417f0c:	cset	w9, ne  // ne = any
  417f10:	mov	w10, #0x1                   	// #1
  417f14:	eor	w9, w9, #0x1
  417f18:	eor	w9, w9, w10
  417f1c:	eor	w9, w9, w10
  417f20:	and	w9, w9, #0x1
  417f24:	mov	w0, w9
  417f28:	sxtw	x8, w0
  417f2c:	cbz	x8, 417f50 <machine_node_enumerator+0x134>
  417f30:	mov	w8, wzr
  417f34:	mov	w0, w8
  417f38:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  417f3c:	add	x1, x1, #0x2cf
  417f40:	ldr	x2, [sp, #16]
  417f44:	mov	w3, #0x591                 	// #1425
  417f48:	ldr	x4, [sp, #8]
  417f4c:	bl	404bd0 <log_assert_failed_realm@plt>
  417f50:	add	x8, sp, #0x38
  417f54:	mov	w9, #0xfffffffe            	// #-2
  417f58:	str	w9, [sp, #56]
  417f5c:	mov	x10, xzr
  417f60:	str	x10, [x8, #8]
  417f64:	ldur	q0, [sp, #56]
  417f68:	str	q0, [sp, #80]
  417f6c:	ldur	x8, [x29, #-72]
  417f70:	ldr	x0, [x8, #16]
  417f74:	add	x1, sp, #0x50
  417f78:	sub	x2, x29, #0x40
  417f7c:	mov	x8, xzr
  417f80:	mov	x3, x8
  417f84:	bl	418038 <hashmap_iterate>
  417f88:	tbnz	w0, #0, 417f90 <machine_node_enumerator+0x174>
  417f8c:	b	417ff0 <machine_node_enumerator+0x1d4>
  417f90:	ldur	x0, [x29, #-64]
  417f94:	bl	417d3c <machine_bus_path>
  417f98:	str	x0, [sp, #48]
  417f9c:	ldr	x8, [sp, #48]
  417fa0:	cbnz	x8, 417fb8 <machine_node_enumerator+0x19c>
  417fa4:	mov	w8, #0xfffffff4            	// #-12
  417fa8:	stur	w8, [x29, #-4]
  417fac:	mov	w8, #0x1                   	// #1
  417fb0:	str	w8, [sp, #44]
  417fb4:	b	418020 <machine_node_enumerator+0x204>
  417fb8:	ldr	x1, [sp, #48]
  417fbc:	sub	x0, x29, #0x38
  417fc0:	bl	405830 <strv_consume@plt>
  417fc4:	str	w0, [sp, #76]
  417fc8:	ldr	w8, [sp, #76]
  417fcc:	cmp	w8, #0x0
  417fd0:	cset	w8, ge  // ge = tcont
  417fd4:	tbnz	w8, #0, 417fec <machine_node_enumerator+0x1d0>
  417fd8:	ldr	w8, [sp, #76]
  417fdc:	stur	w8, [x29, #-4]
  417fe0:	mov	w8, #0x1                   	// #1
  417fe4:	str	w8, [sp, #44]
  417fe8:	b	418020 <machine_node_enumerator+0x204>
  417fec:	b	417f6c <machine_node_enumerator+0x150>
  417ff0:	ldur	x8, [x29, #-56]
  417ff4:	str	x8, [sp, #32]
  417ff8:	mov	x8, xzr
  417ffc:	stur	x8, [x29, #-56]
  418000:	ldr	x8, [sp, #32]
  418004:	str	x8, [sp, #24]
  418008:	ldr	x8, [sp, #24]
  41800c:	ldur	x9, [x29, #-40]
  418010:	str	x8, [x9]
  418014:	mov	w10, #0x1                   	// #1
  418018:	stur	w10, [x29, #-4]
  41801c:	str	w10, [sp, #44]
  418020:	sub	x0, x29, #0x38
  418024:	bl	412d08 <strv_freep>
  418028:	ldur	w0, [x29, #-4]
  41802c:	ldp	x29, x30, [sp, #176]
  418030:	add	sp, sp, #0xc0
  418034:	ret

0000000000418038 <hashmap_iterate>:
  418038:	sub	sp, sp, #0x30
  41803c:	stp	x29, x30, [sp, #32]
  418040:	add	x29, sp, #0x20
  418044:	stur	x0, [x29, #-8]
  418048:	str	x1, [sp, #16]
  41804c:	str	x2, [sp, #8]
  418050:	str	x3, [sp]
  418054:	ldur	x0, [x29, #-8]
  418058:	ldr	x1, [sp, #16]
  41805c:	ldr	x2, [sp, #8]
  418060:	ldr	x3, [sp]
  418064:	bl	404da0 <internal_hashmap_iterate@plt>
  418068:	and	w0, w0, #0x1
  41806c:	ldp	x29, x30, [sp, #32]
  418070:	add	sp, sp, #0x30
  418074:	ret

0000000000418078 <machine_send_signal>:
  418078:	sub	sp, sp, #0x40
  41807c:	stp	x29, x30, [sp, #48]
  418080:	add	x29, sp, #0x30
  418084:	mov	x8, xzr
  418088:	mov	w9, #0x1                   	// #1
  41808c:	adrp	x10, 41d000 <machine_hash_ops+0x23e8>
  418090:	add	x10, x10, #0x21c
  418094:	add	x2, x10, #0x3
  418098:	stur	x0, [x29, #-16]
  41809c:	and	w9, w1, w9
  4180a0:	sturb	w9, [x29, #-17]
  4180a4:	str	x8, [sp, #16]
  4180a8:	str	x2, [sp]
  4180ac:	ldur	x8, [x29, #-16]
  4180b0:	cmp	x8, #0x0
  4180b4:	cset	w9, ne  // ne = any
  4180b8:	mov	w10, #0x1                   	// #1
  4180bc:	eor	w9, w9, #0x1
  4180c0:	eor	w9, w9, w10
  4180c4:	eor	w9, w9, w10
  4180c8:	and	w9, w9, #0x1
  4180cc:	mov	w0, w9
  4180d0:	sxtw	x8, w0
  4180d4:	cbz	x8, 4180fc <machine_send_signal+0x84>
  4180d8:	mov	w8, wzr
  4180dc:	mov	w0, w8
  4180e0:	adrp	x1, 41a000 <operation_new+0x40>
  4180e4:	add	x1, x1, #0xe18
  4180e8:	ldr	x2, [sp]
  4180ec:	mov	w3, #0x5a7                 	// #1447
  4180f0:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  4180f4:	add	x4, x4, #0x2d5
  4180f8:	bl	404bd0 <log_assert_failed_realm@plt>
  4180fc:	ldur	x0, [x29, #-16]
  418100:	bl	417d3c <machine_bus_path>
  418104:	str	x0, [sp, #16]
  418108:	ldr	x8, [sp, #16]
  41810c:	cbnz	x8, 418124 <machine_send_signal+0xac>
  418110:	mov	w8, #0xfffffff4            	// #-12
  418114:	stur	w8, [x29, #-4]
  418118:	mov	w8, #0x1                   	// #1
  41811c:	str	w8, [sp, #12]
  418120:	b	418180 <machine_send_signal+0x108>
  418124:	ldur	x8, [x29, #-16]
  418128:	ldr	x8, [x8]
  41812c:	ldr	x0, [x8, #8]
  418130:	ldurb	w9, [x29, #-17]
  418134:	adrp	x8, 41b000 <machine_hash_ops+0x3e8>
  418138:	add	x8, x8, #0xeae
  41813c:	adrp	x10, 41b000 <machine_hash_ops+0x3e8>
  418140:	add	x10, x10, #0xea0
  418144:	tst	w9, #0x1
  418148:	csel	x3, x10, x8, ne  // ne = any
  41814c:	ldur	x8, [x29, #-16]
  418150:	ldr	x5, [x8, #8]
  418154:	ldr	x6, [sp, #16]
  418158:	adrp	x1, 41a000 <operation_new+0x40>
  41815c:	add	x1, x1, #0xe9c
  418160:	adrp	x2, 41a000 <operation_new+0x40>
  418164:	add	x2, x2, #0xeb6
  418168:	adrp	x4, 41b000 <machine_hash_ops+0x3e8>
  41816c:	add	x4, x4, #0xeab
  418170:	bl	405840 <sd_bus_emit_signal@plt>
  418174:	stur	w0, [x29, #-4]
  418178:	mov	w9, #0x1                   	// #1
  41817c:	str	w9, [sp, #12]
  418180:	add	x0, sp, #0x10
  418184:	bl	412648 <freep>
  418188:	ldur	w0, [x29, #-4]
  41818c:	ldp	x29, x30, [sp, #48]
  418190:	add	sp, sp, #0x40
  418194:	ret

0000000000418198 <machine_send_create_reply>:
  418198:	sub	sp, sp, #0x60
  41819c:	stp	x29, x30, [sp, #80]
  4181a0:	add	x29, sp, #0x50
  4181a4:	mov	x8, xzr
  4181a8:	adrp	x9, 41d000 <machine_hash_ops+0x23e8>
  4181ac:	add	x9, x9, #0x21c
  4181b0:	add	x2, x9, #0x3
  4181b4:	stur	x0, [x29, #-16]
  4181b8:	stur	x1, [x29, #-24]
  4181bc:	stur	x8, [x29, #-32]
  4181c0:	str	x8, [sp, #40]
  4181c4:	str	x2, [sp, #8]
  4181c8:	ldur	x8, [x29, #-16]
  4181cc:	cmp	x8, #0x0
  4181d0:	cset	w9, ne  // ne = any
  4181d4:	mov	w10, #0x1                   	// #1
  4181d8:	eor	w9, w9, #0x1
  4181dc:	eor	w9, w9, w10
  4181e0:	eor	w9, w9, w10
  4181e4:	and	w9, w9, #0x1
  4181e8:	mov	w0, w9
  4181ec:	sxtw	x8, w0
  4181f0:	cbz	x8, 418218 <machine_send_create_reply+0x80>
  4181f4:	mov	w8, wzr
  4181f8:	mov	w0, w8
  4181fc:	adrp	x1, 41a000 <operation_new+0x40>
  418200:	add	x1, x1, #0xe18
  418204:	ldr	x2, [sp, #8]
  418208:	mov	w3, #0x5b9                 	// #1465
  41820c:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  418210:	add	x4, x4, #0x2ff
  418214:	bl	404bd0 <log_assert_failed_realm@plt>
  418218:	ldur	x8, [x29, #-16]
  41821c:	ldr	x8, [x8, #112]
  418220:	cbnz	x8, 418234 <machine_send_create_reply+0x9c>
  418224:	stur	wzr, [x29, #-4]
  418228:	mov	w8, #0x1                   	// #1
  41822c:	str	w8, [sp, #36]
  418230:	b	4182d4 <machine_send_create_reply+0x13c>
  418234:	ldur	x8, [x29, #-16]
  418238:	ldr	x8, [x8, #112]
  41823c:	str	x8, [sp, #24]
  418240:	ldur	x8, [x29, #-16]
  418244:	mov	x9, xzr
  418248:	str	x9, [x8, #112]
  41824c:	ldr	x8, [sp, #24]
  418250:	str	x8, [sp, #16]
  418254:	ldr	x8, [sp, #16]
  418258:	stur	x8, [x29, #-32]
  41825c:	ldur	x8, [x29, #-24]
  418260:	cbz	x8, 418280 <machine_send_create_reply+0xe8>
  418264:	ldur	x0, [x29, #-32]
  418268:	ldur	x1, [x29, #-24]
  41826c:	bl	405850 <sd_bus_reply_method_error@plt>
  418270:	stur	w0, [x29, #-4]
  418274:	mov	w8, #0x1                   	// #1
  418278:	str	w8, [sp, #36]
  41827c:	b	4182d4 <machine_send_create_reply+0x13c>
  418280:	ldur	x0, [x29, #-16]
  418284:	bl	408328 <machine_save>
  418288:	ldur	x8, [x29, #-16]
  41828c:	mov	x0, x8
  418290:	bl	417d3c <machine_bus_path>
  418294:	str	x0, [sp, #40]
  418298:	ldr	x8, [sp, #40]
  41829c:	cbnz	x8, 4182b4 <machine_send_create_reply+0x11c>
  4182a0:	mov	w8, #0xfffffff4            	// #-12
  4182a4:	stur	w8, [x29, #-4]
  4182a8:	mov	w8, #0x1                   	// #1
  4182ac:	str	w8, [sp, #36]
  4182b0:	b	4182d4 <machine_send_create_reply+0x13c>
  4182b4:	ldur	x0, [x29, #-32]
  4182b8:	ldr	x2, [sp, #40]
  4182bc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4182c0:	add	x1, x1, #0xb49
  4182c4:	bl	4051c0 <sd_bus_reply_method_return@plt>
  4182c8:	stur	w0, [x29, #-4]
  4182cc:	mov	w8, #0x1                   	// #1
  4182d0:	str	w8, [sp, #36]
  4182d4:	add	x0, sp, #0x28
  4182d8:	bl	412648 <freep>
  4182dc:	sub	x0, x29, #0x20
  4182e0:	bl	412614 <sd_bus_message_unrefp>
  4182e4:	ldur	w0, [x29, #-4]
  4182e8:	ldp	x29, x30, [sp, #80]
  4182ec:	add	sp, sp, #0x60
  4182f0:	ret

00000000004182f4 <sd_bus_close_unrefp>:
  4182f4:	sub	sp, sp, #0x20
  4182f8:	stp	x29, x30, [sp, #16]
  4182fc:	add	x29, sp, #0x10
  418300:	str	x0, [sp, #8]
  418304:	ldr	x8, [sp, #8]
  418308:	ldr	x8, [x8]
  41830c:	cbz	x8, 41831c <sd_bus_close_unrefp+0x28>
  418310:	ldr	x8, [sp, #8]
  418314:	ldr	x0, [x8]
  418318:	bl	405860 <sd_bus_close_unref@plt>
  41831c:	ldp	x29, x30, [sp, #16]
  418320:	add	sp, sp, #0x20
  418324:	ret

0000000000418328 <strlen_ptr>:
  418328:	sub	sp, sp, #0x20
  41832c:	stp	x29, x30, [sp, #16]
  418330:	add	x29, sp, #0x10
  418334:	str	x0, [sp]
  418338:	ldr	x8, [sp]
  41833c:	cbnz	x8, 418348 <strlen_ptr+0x20>
  418340:	str	xzr, [sp, #8]
  418344:	b	418354 <strlen_ptr+0x2c>
  418348:	ldr	x0, [sp]
  41834c:	bl	404e00 <strlen@plt>
  418350:	str	x0, [sp, #8]
  418354:	ldr	x0, [sp, #8]
  418358:	ldp	x29, x30, [sp, #16]
  41835c:	add	sp, sp, #0x20
  418360:	ret

0000000000418364 <bus_image_method_remove>:
  418364:	sub	sp, sp, #0x70
  418368:	stp	x29, x30, [sp, #96]
  41836c:	add	x29, sp, #0x60
  418370:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  418374:	add	x8, x8, #0xb48
  418378:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  41837c:	add	x9, x9, #0x590
  418380:	add	x9, x9, #0x3
  418384:	stur	x0, [x29, #-16]
  418388:	stur	x1, [x29, #-24]
  41838c:	stur	x2, [x29, #-32]
  418390:	ldr	x8, [x8]
  418394:	stur	x8, [x29, #-40]
  418398:	ldur	x8, [x29, #-24]
  41839c:	str	x8, [sp, #48]
  4183a0:	ldr	x8, [sp, #48]
  4183a4:	ldr	x8, [x8, #128]
  4183a8:	str	x8, [sp, #40]
  4183ac:	str	x9, [sp, #16]
  4183b0:	ldur	x8, [x29, #-16]
  4183b4:	cmp	x8, #0x0
  4183b8:	cset	w9, ne  // ne = any
  4183bc:	mov	w10, #0x1                   	// #1
  4183c0:	eor	w9, w9, #0x1
  4183c4:	eor	w9, w9, w10
  4183c8:	eor	w9, w9, w10
  4183cc:	and	w9, w9, #0x1
  4183d0:	mov	w0, w9
  4183d4:	sxtw	x8, w0
  4183d8:	cbz	x8, 418400 <bus_image_method_remove+0x9c>
  4183dc:	mov	w8, wzr
  4183e0:	mov	w0, w8
  4183e4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4183e8:	add	x1, x1, #0xebd
  4183ec:	ldr	x2, [sp, #16]
  4183f0:	mov	w3, #0x26                  	// #38
  4183f4:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  4183f8:	add	x4, x4, #0x5ac
  4183fc:	bl	404bd0 <log_assert_failed_realm@plt>
  418400:	ldr	x8, [sp, #48]
  418404:	cmp	x8, #0x0
  418408:	cset	w9, ne  // ne = any
  41840c:	mov	w10, #0x1                   	// #1
  418410:	eor	w9, w9, #0x1
  418414:	eor	w9, w9, w10
  418418:	eor	w9, w9, w10
  41841c:	and	w9, w9, #0x1
  418420:	mov	w0, w9
  418424:	sxtw	x8, w0
  418428:	cbz	x8, 418450 <bus_image_method_remove+0xec>
  41842c:	mov	w8, wzr
  418430:	mov	w0, w8
  418434:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  418438:	add	x1, x1, #0x5f2
  41843c:	ldr	x2, [sp, #16]
  418440:	mov	w3, #0x27                  	// #39
  418444:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  418448:	add	x4, x4, #0x5ac
  41844c:	bl	404bd0 <log_assert_failed_realm@plt>
  418450:	ldr	x8, [sp, #40]
  418454:	ldr	w9, [x8, #88]
  418458:	cmp	w9, #0x40
  41845c:	b.cc	418488 <bus_image_method_remove+0x124>  // b.lo, b.ul, b.last
  418460:	ldur	x0, [x29, #-32]
  418464:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  418468:	add	x1, x1, #0xc0e
  41846c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418470:	add	x2, x2, #0xc38
  418474:	bl	4051b0 <sd_bus_error_setf@plt>
  418478:	stur	w0, [x29, #-4]
  41847c:	mov	w8, #0x1                   	// #1
  418480:	str	w8, [sp, #28]
  418484:	b	41865c <bus_image_method_remove+0x2f8>
  418488:	ldur	x0, [x29, #-16]
  41848c:	ldr	x8, [sp, #40]
  418490:	add	x6, x8, #0x28
  418494:	ldur	x7, [x29, #-32]
  418498:	mov	w1, #0x15                  	// #21
  41849c:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  4184a0:	add	x2, x2, #0x5f8
  4184a4:	mov	x8, xzr
  4184a8:	mov	x3, x8
  4184ac:	mov	w9, wzr
  4184b0:	and	w4, w9, #0x1
  4184b4:	mov	w5, #0xffffffff            	// #-1
  4184b8:	bl	405250 <bus_verify_polkit_async@plt>
  4184bc:	str	w0, [sp, #32]
  4184c0:	ldr	w9, [sp, #32]
  4184c4:	cmp	w9, #0x0
  4184c8:	cset	w9, ge  // ge = tcont
  4184cc:	tbnz	w9, #0, 4184e4 <bus_image_method_remove+0x180>
  4184d0:	ldr	w8, [sp, #32]
  4184d4:	stur	w8, [x29, #-4]
  4184d8:	mov	w8, #0x1                   	// #1
  4184dc:	str	w8, [sp, #28]
  4184e0:	b	41865c <bus_image_method_remove+0x2f8>
  4184e4:	ldr	w8, [sp, #32]
  4184e8:	cbnz	w8, 4184fc <bus_image_method_remove+0x198>
  4184ec:	mov	w8, #0x1                   	// #1
  4184f0:	stur	w8, [x29, #-4]
  4184f4:	str	w8, [sp, #28]
  4184f8:	b	41865c <bus_image_method_remove+0x2f8>
  4184fc:	sub	x0, x29, #0x28
  418500:	mov	w1, #0x800                 	// #2048
  418504:	movk	w1, #0x8, lsl #16
  418508:	bl	4052a0 <pipe2@plt>
  41850c:	cmp	w0, #0x0
  418510:	cset	w8, ge  // ge = tcont
  418514:	tbnz	w8, #0, 418548 <bus_image_method_remove+0x1e4>
  418518:	ldur	x0, [x29, #-32]
  41851c:	str	x0, [sp, #8]
  418520:	bl	404d50 <__errno_location@plt>
  418524:	ldr	w1, [x0]
  418528:	ldr	x0, [sp, #8]
  41852c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418530:	add	x2, x2, #0xc6f
  418534:	bl	405290 <sd_bus_error_set_errnof@plt>
  418538:	stur	w0, [x29, #-4]
  41853c:	mov	w8, #0x1                   	// #1
  418540:	str	w8, [sp, #28]
  418544:	b	41865c <bus_image_method_remove+0x2f8>
  418548:	adrp	x0, 41e000 <machine_hash_ops+0x33e8>
  41854c:	add	x0, x0, #0x61f
  418550:	mov	w1, #0x1                   	// #1
  418554:	add	x2, sp, #0x24
  418558:	bl	418698 <safe_fork>
  41855c:	str	w0, [sp, #32]
  418560:	ldr	w8, [sp, #32]
  418564:	cmp	w8, #0x0
  418568:	cset	w8, ge  // ge = tcont
  41856c:	tbnz	w8, #0, 418594 <bus_image_method_remove+0x230>
  418570:	ldur	x0, [x29, #-32]
  418574:	ldr	w1, [sp, #32]
  418578:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  41857c:	add	x2, x2, #0xc94
  418580:	bl	405290 <sd_bus_error_set_errnof@plt>
  418584:	stur	w0, [x29, #-4]
  418588:	mov	w8, #0x1                   	// #1
  41858c:	str	w8, [sp, #28]
  418590:	b	41865c <bus_image_method_remove+0x2f8>
  418594:	ldr	w8, [sp, #32]
  418598:	cbnz	w8, 4185ec <bus_image_method_remove+0x288>
  41859c:	ldur	w0, [x29, #-40]
  4185a0:	bl	4052c0 <safe_close@plt>
  4185a4:	stur	w0, [x29, #-40]
  4185a8:	ldr	x0, [sp, #48]
  4185ac:	bl	4052e0 <image_remove@plt>
  4185b0:	str	w0, [sp, #32]
  4185b4:	ldr	w8, [sp, #32]
  4185b8:	cmp	w8, #0x0
  4185bc:	cset	w8, ge  // ge = tcont
  4185c0:	tbnz	w8, #0, 4185e0 <bus_image_method_remove+0x27c>
  4185c4:	ldur	w0, [x29, #-36]
  4185c8:	add	x1, sp, #0x20
  4185cc:	mov	x2, #0x4                   	// #4
  4185d0:	bl	4052d0 <write@plt>
  4185d4:	mov	w8, #0x1                   	// #1
  4185d8:	mov	w0, w8
  4185dc:	bl	405310 <_exit@plt>
  4185e0:	mov	w8, wzr
  4185e4:	mov	w0, w8
  4185e8:	bl	405310 <_exit@plt>
  4185ec:	ldur	w0, [x29, #-36]
  4185f0:	bl	4052c0 <safe_close@plt>
  4185f4:	stur	w0, [x29, #-36]
  4185f8:	ldr	x0, [sp, #40]
  4185fc:	ldr	w2, [sp, #36]
  418600:	ldur	x3, [x29, #-16]
  418604:	ldur	w4, [x29, #-40]
  418608:	mov	x8, xzr
  41860c:	mov	x1, x8
  418610:	mov	x5, x8
  418614:	bl	419fc0 <operation_new>
  418618:	str	w0, [sp, #32]
  41861c:	ldr	w9, [sp, #32]
  418620:	cmp	w9, #0x0
  418624:	cset	w9, ge  // ge = tcont
  418628:	tbnz	w9, #0, 418648 <bus_image_method_remove+0x2e4>
  41862c:	ldr	w0, [sp, #36]
  418630:	bl	405320 <sigkill_wait@plt>
  418634:	ldr	w8, [sp, #32]
  418638:	stur	w8, [x29, #-4]
  41863c:	mov	w8, #0x1                   	// #1
  418640:	str	w8, [sp, #28]
  418644:	b	41865c <bus_image_method_remove+0x2f8>
  418648:	mov	w8, #0xffffffff            	// #-1
  41864c:	stur	w8, [x29, #-40]
  418650:	mov	w8, #0x1                   	// #1
  418654:	stur	w8, [x29, #-4]
  418658:	str	w8, [sp, #28]
  41865c:	sub	x0, x29, #0x28
  418660:	bl	418674 <close_pairp>
  418664:	ldur	w0, [x29, #-4]
  418668:	ldp	x29, x30, [sp, #96]
  41866c:	add	sp, sp, #0x70
  418670:	ret

0000000000418674 <close_pairp>:
  418674:	sub	sp, sp, #0x20
  418678:	stp	x29, x30, [sp, #16]
  41867c:	add	x29, sp, #0x10
  418680:	str	x0, [sp, #8]
  418684:	ldr	x0, [sp, #8]
  418688:	bl	405490 <safe_close_pair@plt>
  41868c:	ldp	x29, x30, [sp, #16]
  418690:	add	sp, sp, #0x20
  418694:	ret

0000000000418698 <safe_fork>:
  418698:	sub	sp, sp, #0x30
  41869c:	stp	x29, x30, [sp, #32]
  4186a0:	add	x29, sp, #0x20
  4186a4:	mov	x8, xzr
  4186a8:	mov	x3, x8
  4186ac:	stur	x0, [x29, #-8]
  4186b0:	stur	w1, [x29, #-12]
  4186b4:	str	x2, [sp, #8]
  4186b8:	ldur	x0, [x29, #-8]
  4186bc:	ldur	w9, [x29, #-12]
  4186c0:	ldr	x4, [sp, #8]
  4186c4:	mov	x1, x3
  4186c8:	mov	x2, x8
  4186cc:	mov	w3, w9
  4186d0:	bl	4054a0 <safe_fork_full@plt>
  4186d4:	ldp	x29, x30, [sp, #32]
  4186d8:	add	sp, sp, #0x30
  4186dc:	ret

00000000004186e0 <bus_image_method_rename>:
  4186e0:	sub	sp, sp, #0x60
  4186e4:	stp	x29, x30, [sp, #80]
  4186e8:	add	x29, sp, #0x50
  4186ec:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  4186f0:	add	x8, x8, #0x590
  4186f4:	add	x8, x8, #0x3
  4186f8:	stur	x0, [x29, #-16]
  4186fc:	stur	x1, [x29, #-24]
  418700:	stur	x2, [x29, #-32]
  418704:	ldur	x9, [x29, #-24]
  418708:	str	x9, [sp, #40]
  41870c:	ldr	x9, [sp, #40]
  418710:	ldr	x9, [x9, #128]
  418714:	str	x9, [sp, #32]
  418718:	str	x8, [sp, #8]
  41871c:	ldur	x8, [x29, #-16]
  418720:	cmp	x8, #0x0
  418724:	cset	w9, ne  // ne = any
  418728:	mov	w10, #0x1                   	// #1
  41872c:	eor	w9, w9, #0x1
  418730:	eor	w9, w9, w10
  418734:	eor	w9, w9, w10
  418738:	and	w9, w9, #0x1
  41873c:	mov	w0, w9
  418740:	sxtw	x8, w0
  418744:	cbz	x8, 41876c <bus_image_method_rename+0x8c>
  418748:	mov	w8, wzr
  41874c:	mov	w0, w8
  418750:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418754:	add	x1, x1, #0xebd
  418758:	ldr	x2, [sp, #8]
  41875c:	mov	w3, #0x63                  	// #99
  418760:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  418764:	add	x4, x4, #0x62a
  418768:	bl	404bd0 <log_assert_failed_realm@plt>
  41876c:	ldr	x8, [sp, #40]
  418770:	cmp	x8, #0x0
  418774:	cset	w9, ne  // ne = any
  418778:	mov	w10, #0x1                   	// #1
  41877c:	eor	w9, w9, #0x1
  418780:	eor	w9, w9, w10
  418784:	eor	w9, w9, w10
  418788:	and	w9, w9, #0x1
  41878c:	mov	w0, w9
  418790:	sxtw	x8, w0
  418794:	cbz	x8, 4187bc <bus_image_method_rename+0xdc>
  418798:	mov	w8, wzr
  41879c:	mov	w0, w8
  4187a0:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  4187a4:	add	x1, x1, #0x5f2
  4187a8:	ldr	x2, [sp, #8]
  4187ac:	mov	w3, #0x64                  	// #100
  4187b0:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  4187b4:	add	x4, x4, #0x62a
  4187b8:	bl	404bd0 <log_assert_failed_realm@plt>
  4187bc:	ldur	x0, [x29, #-16]
  4187c0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4187c4:	add	x1, x1, #0x7ae
  4187c8:	add	x2, sp, #0x18
  4187cc:	bl	405170 <sd_bus_message_read@plt>
  4187d0:	str	w0, [sp, #20]
  4187d4:	ldr	w8, [sp, #20]
  4187d8:	cmp	w8, #0x0
  4187dc:	cset	w8, ge  // ge = tcont
  4187e0:	tbnz	w8, #0, 4187f0 <bus_image_method_rename+0x110>
  4187e4:	ldr	w8, [sp, #20]
  4187e8:	stur	w8, [x29, #-4]
  4187ec:	b	4188c8 <bus_image_method_rename+0x1e8>
  4187f0:	ldr	x0, [sp, #24]
  4187f4:	bl	405470 <image_name_is_valid@plt>
  4187f8:	tbnz	w0, #0, 418820 <bus_image_method_rename+0x140>
  4187fc:	ldur	x0, [x29, #-32]
  418800:	ldr	x3, [sp, #24]
  418804:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  418808:	add	x1, x1, #0x848
  41880c:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418810:	add	x2, x2, #0xac3
  418814:	bl	4051b0 <sd_bus_error_setf@plt>
  418818:	stur	w0, [x29, #-4]
  41881c:	b	4188c8 <bus_image_method_rename+0x1e8>
  418820:	ldur	x0, [x29, #-16]
  418824:	ldr	x8, [sp, #32]
  418828:	add	x6, x8, #0x28
  41882c:	ldur	x7, [x29, #-32]
  418830:	mov	w1, #0x15                  	// #21
  418834:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  418838:	add	x2, x2, #0x5f8
  41883c:	mov	x8, xzr
  418840:	mov	x3, x8
  418844:	mov	w9, wzr
  418848:	and	w4, w9, #0x1
  41884c:	mov	w5, #0xffffffff            	// #-1
  418850:	bl	405250 <bus_verify_polkit_async@plt>
  418854:	str	w0, [sp, #20]
  418858:	ldr	w9, [sp, #20]
  41885c:	cmp	w9, #0x0
  418860:	cset	w9, ge  // ge = tcont
  418864:	tbnz	w9, #0, 418874 <bus_image_method_rename+0x194>
  418868:	ldr	w8, [sp, #20]
  41886c:	stur	w8, [x29, #-4]
  418870:	b	4188c8 <bus_image_method_rename+0x1e8>
  418874:	ldr	w8, [sp, #20]
  418878:	cbnz	w8, 418888 <bus_image_method_rename+0x1a8>
  41887c:	mov	w8, #0x1                   	// #1
  418880:	stur	w8, [x29, #-4]
  418884:	b	4188c8 <bus_image_method_rename+0x1e8>
  418888:	ldr	x0, [sp, #40]
  41888c:	ldr	x1, [sp, #24]
  418890:	bl	405880 <image_rename@plt>
  418894:	str	w0, [sp, #20]
  418898:	ldr	w8, [sp, #20]
  41889c:	cmp	w8, #0x0
  4188a0:	cset	w8, ge  // ge = tcont
  4188a4:	tbnz	w8, #0, 4188b4 <bus_image_method_rename+0x1d4>
  4188a8:	ldr	w8, [sp, #20]
  4188ac:	stur	w8, [x29, #-4]
  4188b0:	b	4188c8 <bus_image_method_rename+0x1e8>
  4188b4:	ldur	x0, [x29, #-16]
  4188b8:	mov	x8, xzr
  4188bc:	mov	x1, x8
  4188c0:	bl	4051c0 <sd_bus_reply_method_return@plt>
  4188c4:	stur	w0, [x29, #-4]
  4188c8:	ldur	w0, [x29, #-4]
  4188cc:	ldp	x29, x30, [sp, #80]
  4188d0:	add	sp, sp, #0x60
  4188d4:	ret

00000000004188d8 <bus_image_method_clone>:
  4188d8:	sub	sp, sp, #0x80
  4188dc:	stp	x29, x30, [sp, #112]
  4188e0:	add	x29, sp, #0x70
  4188e4:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  4188e8:	add	x8, x8, #0xb48
  4188ec:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  4188f0:	add	x9, x9, #0x590
  4188f4:	add	x9, x9, #0x3
  4188f8:	adrp	x10, 41e000 <machine_hash_ops+0x33e8>
  4188fc:	add	x10, x10, #0x670
  418900:	stur	x0, [x29, #-16]
  418904:	stur	x1, [x29, #-24]
  418908:	stur	x2, [x29, #-32]
  41890c:	ldr	x8, [x8]
  418910:	stur	x8, [x29, #-40]
  418914:	ldur	x8, [x29, #-24]
  418918:	stur	x8, [x29, #-48]
  41891c:	ldur	x8, [x29, #-48]
  418920:	ldr	x8, [x8, #128]
  418924:	str	x8, [sp, #56]
  418928:	str	x9, [sp, #24]
  41892c:	str	x10, [sp, #16]
  418930:	ldur	x8, [x29, #-16]
  418934:	cmp	x8, #0x0
  418938:	cset	w9, ne  // ne = any
  41893c:	mov	w10, #0x1                   	// #1
  418940:	eor	w9, w9, #0x1
  418944:	eor	w9, w9, w10
  418948:	eor	w9, w9, w10
  41894c:	and	w9, w9, #0x1
  418950:	mov	w0, w9
  418954:	sxtw	x8, w0
  418958:	cbz	x8, 41897c <bus_image_method_clone+0xa4>
  41895c:	mov	w8, wzr
  418960:	mov	w0, w8
  418964:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418968:	add	x1, x1, #0xebd
  41896c:	ldr	x2, [sp, #24]
  418970:	mov	w3, #0x8e                  	// #142
  418974:	ldr	x4, [sp, #16]
  418978:	bl	404bd0 <log_assert_failed_realm@plt>
  41897c:	ldur	x8, [x29, #-48]
  418980:	cmp	x8, #0x0
  418984:	cset	w9, ne  // ne = any
  418988:	mov	w10, #0x1                   	// #1
  41898c:	eor	w9, w9, #0x1
  418990:	eor	w9, w9, w10
  418994:	eor	w9, w9, w10
  418998:	and	w9, w9, #0x1
  41899c:	mov	w0, w9
  4189a0:	sxtw	x8, w0
  4189a4:	cbz	x8, 4189c8 <bus_image_method_clone+0xf0>
  4189a8:	mov	w8, wzr
  4189ac:	mov	w0, w8
  4189b0:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  4189b4:	add	x1, x1, #0x5f2
  4189b8:	ldr	x2, [sp, #24]
  4189bc:	mov	w3, #0x8f                  	// #143
  4189c0:	ldr	x4, [sp, #16]
  4189c4:	bl	404bd0 <log_assert_failed_realm@plt>
  4189c8:	ldr	x8, [sp, #56]
  4189cc:	cmp	x8, #0x0
  4189d0:	cset	w9, ne  // ne = any
  4189d4:	mov	w10, #0x1                   	// #1
  4189d8:	eor	w9, w9, #0x1
  4189dc:	eor	w9, w9, w10
  4189e0:	eor	w9, w9, w10
  4189e4:	and	w9, w9, #0x1
  4189e8:	mov	w0, w9
  4189ec:	sxtw	x8, w0
  4189f0:	cbz	x8, 418a14 <bus_image_method_clone+0x13c>
  4189f4:	mov	w8, wzr
  4189f8:	mov	w0, w8
  4189fc:	adrp	x1, 41a000 <operation_new+0x40>
  418a00:	add	x1, x1, #0xe18
  418a04:	ldr	x2, [sp, #24]
  418a08:	mov	w3, #0x90                  	// #144
  418a0c:	ldr	x4, [sp, #16]
  418a10:	bl	404bd0 <log_assert_failed_realm@plt>
  418a14:	ldr	x8, [sp, #56]
  418a18:	ldr	w9, [x8, #88]
  418a1c:	cmp	w9, #0x40
  418a20:	b.cc	418a4c <bus_image_method_clone+0x174>  // b.lo, b.ul, b.last
  418a24:	ldur	x0, [x29, #-32]
  418a28:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  418a2c:	add	x1, x1, #0xc0e
  418a30:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418a34:	add	x2, x2, #0xc38
  418a38:	bl	4051b0 <sd_bus_error_setf@plt>
  418a3c:	stur	w0, [x29, #-4]
  418a40:	mov	w8, #0x1                   	// #1
  418a44:	str	w8, [sp, #32]
  418a48:	b	418cac <bus_image_method_clone+0x3d4>
  418a4c:	ldur	x0, [x29, #-16]
  418a50:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418a54:	add	x1, x1, #0xdd2
  418a58:	add	x2, sp, #0x30
  418a5c:	add	x3, sp, #0x28
  418a60:	bl	405170 <sd_bus_message_read@plt>
  418a64:	str	w0, [sp, #44]
  418a68:	ldr	w8, [sp, #44]
  418a6c:	cmp	w8, #0x0
  418a70:	cset	w8, ge  // ge = tcont
  418a74:	tbnz	w8, #0, 418a8c <bus_image_method_clone+0x1b4>
  418a78:	ldr	w8, [sp, #44]
  418a7c:	stur	w8, [x29, #-4]
  418a80:	mov	w8, #0x1                   	// #1
  418a84:	str	w8, [sp, #32]
  418a88:	b	418cac <bus_image_method_clone+0x3d4>
  418a8c:	ldr	x0, [sp, #48]
  418a90:	bl	405470 <image_name_is_valid@plt>
  418a94:	tbnz	w0, #0, 418ac4 <bus_image_method_clone+0x1ec>
  418a98:	ldur	x0, [x29, #-32]
  418a9c:	ldr	x3, [sp, #48]
  418aa0:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  418aa4:	add	x1, x1, #0x848
  418aa8:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418aac:	add	x2, x2, #0xac3
  418ab0:	bl	4051b0 <sd_bus_error_setf@plt>
  418ab4:	stur	w0, [x29, #-4]
  418ab8:	mov	w8, #0x1                   	// #1
  418abc:	str	w8, [sp, #32]
  418ac0:	b	418cac <bus_image_method_clone+0x3d4>
  418ac4:	ldur	x0, [x29, #-16]
  418ac8:	ldr	x8, [sp, #56]
  418acc:	add	x6, x8, #0x28
  418ad0:	ldur	x7, [x29, #-32]
  418ad4:	mov	w1, #0x15                  	// #21
  418ad8:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  418adc:	add	x2, x2, #0x5f8
  418ae0:	mov	x8, xzr
  418ae4:	mov	x3, x8
  418ae8:	mov	w9, wzr
  418aec:	and	w4, w9, #0x1
  418af0:	mov	w5, #0xffffffff            	// #-1
  418af4:	bl	405250 <bus_verify_polkit_async@plt>
  418af8:	str	w0, [sp, #44]
  418afc:	ldr	w9, [sp, #44]
  418b00:	cmp	w9, #0x0
  418b04:	cset	w9, ge  // ge = tcont
  418b08:	tbnz	w9, #0, 418b20 <bus_image_method_clone+0x248>
  418b0c:	ldr	w8, [sp, #44]
  418b10:	stur	w8, [x29, #-4]
  418b14:	mov	w8, #0x1                   	// #1
  418b18:	str	w8, [sp, #32]
  418b1c:	b	418cac <bus_image_method_clone+0x3d4>
  418b20:	ldr	w8, [sp, #44]
  418b24:	cbnz	w8, 418b38 <bus_image_method_clone+0x260>
  418b28:	mov	w8, #0x1                   	// #1
  418b2c:	stur	w8, [x29, #-4]
  418b30:	str	w8, [sp, #32]
  418b34:	b	418cac <bus_image_method_clone+0x3d4>
  418b38:	sub	x0, x29, #0x28
  418b3c:	mov	w1, #0x800                 	// #2048
  418b40:	movk	w1, #0x8, lsl #16
  418b44:	bl	4052a0 <pipe2@plt>
  418b48:	cmp	w0, #0x0
  418b4c:	cset	w8, ge  // ge = tcont
  418b50:	tbnz	w8, #0, 418b84 <bus_image_method_clone+0x2ac>
  418b54:	ldur	x0, [x29, #-32]
  418b58:	str	x0, [sp, #8]
  418b5c:	bl	404d50 <__errno_location@plt>
  418b60:	ldr	w1, [x0]
  418b64:	ldr	x0, [sp, #8]
  418b68:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418b6c:	add	x2, x2, #0xc6f
  418b70:	bl	405290 <sd_bus_error_set_errnof@plt>
  418b74:	stur	w0, [x29, #-4]
  418b78:	mov	w8, #0x1                   	// #1
  418b7c:	str	w8, [sp, #32]
  418b80:	b	418cac <bus_image_method_clone+0x3d4>
  418b84:	adrp	x0, 41e000 <machine_hash_ops+0x33e8>
  418b88:	add	x0, x0, #0x6b5
  418b8c:	mov	w1, #0x1                   	// #1
  418b90:	add	x2, sp, #0x24
  418b94:	bl	418698 <safe_fork>
  418b98:	str	w0, [sp, #44]
  418b9c:	ldr	w8, [sp, #44]
  418ba0:	cmp	w8, #0x0
  418ba4:	cset	w8, ge  // ge = tcont
  418ba8:	tbnz	w8, #0, 418bd0 <bus_image_method_clone+0x2f8>
  418bac:	ldur	x0, [x29, #-32]
  418bb0:	ldr	w1, [sp, #44]
  418bb4:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418bb8:	add	x2, x2, #0xc94
  418bbc:	bl	405290 <sd_bus_error_set_errnof@plt>
  418bc0:	stur	w0, [x29, #-4]
  418bc4:	mov	w8, #0x1                   	// #1
  418bc8:	str	w8, [sp, #32]
  418bcc:	b	418cac <bus_image_method_clone+0x3d4>
  418bd0:	ldr	w8, [sp, #44]
  418bd4:	cbnz	w8, 418c3c <bus_image_method_clone+0x364>
  418bd8:	ldur	w0, [x29, #-40]
  418bdc:	bl	4052c0 <safe_close@plt>
  418be0:	stur	w0, [x29, #-40]
  418be4:	ldur	x0, [x29, #-48]
  418be8:	ldr	x1, [sp, #48]
  418bec:	ldr	w8, [sp, #40]
  418bf0:	cmp	w8, #0x0
  418bf4:	cset	w8, ne  // ne = any
  418bf8:	and	w2, w8, #0x1
  418bfc:	bl	405890 <image_clone@plt>
  418c00:	str	w0, [sp, #44]
  418c04:	ldr	w8, [sp, #44]
  418c08:	cmp	w8, #0x0
  418c0c:	cset	w8, ge  // ge = tcont
  418c10:	tbnz	w8, #0, 418c30 <bus_image_method_clone+0x358>
  418c14:	ldur	w0, [x29, #-36]
  418c18:	add	x1, sp, #0x2c
  418c1c:	mov	x2, #0x4                   	// #4
  418c20:	bl	4052d0 <write@plt>
  418c24:	mov	w8, #0x1                   	// #1
  418c28:	mov	w0, w8
  418c2c:	bl	405310 <_exit@plt>
  418c30:	mov	w8, wzr
  418c34:	mov	w0, w8
  418c38:	bl	405310 <_exit@plt>
  418c3c:	ldur	w0, [x29, #-36]
  418c40:	bl	4052c0 <safe_close@plt>
  418c44:	stur	w0, [x29, #-36]
  418c48:	ldr	x0, [sp, #56]
  418c4c:	ldr	w2, [sp, #36]
  418c50:	ldur	x3, [x29, #-16]
  418c54:	ldur	w4, [x29, #-40]
  418c58:	mov	x8, xzr
  418c5c:	mov	x1, x8
  418c60:	mov	x5, x8
  418c64:	bl	419fc0 <operation_new>
  418c68:	str	w0, [sp, #44]
  418c6c:	ldr	w9, [sp, #44]
  418c70:	cmp	w9, #0x0
  418c74:	cset	w9, ge  // ge = tcont
  418c78:	tbnz	w9, #0, 418c98 <bus_image_method_clone+0x3c0>
  418c7c:	ldr	w0, [sp, #36]
  418c80:	bl	405320 <sigkill_wait@plt>
  418c84:	ldr	w8, [sp, #44]
  418c88:	stur	w8, [x29, #-4]
  418c8c:	mov	w8, #0x1                   	// #1
  418c90:	str	w8, [sp, #32]
  418c94:	b	418cac <bus_image_method_clone+0x3d4>
  418c98:	mov	w8, #0xffffffff            	// #-1
  418c9c:	stur	w8, [x29, #-40]
  418ca0:	mov	w8, #0x1                   	// #1
  418ca4:	stur	w8, [x29, #-4]
  418ca8:	str	w8, [sp, #32]
  418cac:	sub	x0, x29, #0x28
  418cb0:	bl	418674 <close_pairp>
  418cb4:	ldur	w0, [x29, #-4]
  418cb8:	ldp	x29, x30, [sp, #112]
  418cbc:	add	sp, sp, #0x80
  418cc0:	ret

0000000000418cc4 <bus_image_method_mark_read_only>:
  418cc4:	sub	sp, sp, #0x50
  418cc8:	stp	x29, x30, [sp, #64]
  418ccc:	add	x29, sp, #0x40
  418cd0:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  418cd4:	add	x8, x8, #0x590
  418cd8:	add	x8, x8, #0x3
  418cdc:	stur	x0, [x29, #-16]
  418ce0:	stur	x1, [x29, #-24]
  418ce4:	str	x2, [sp, #32]
  418ce8:	ldur	x9, [x29, #-24]
  418cec:	str	x9, [sp, #24]
  418cf0:	ldr	x9, [sp, #24]
  418cf4:	ldr	x9, [x9, #128]
  418cf8:	str	x9, [sp, #16]
  418cfc:	str	x8, [sp]
  418d00:	ldur	x8, [x29, #-16]
  418d04:	cmp	x8, #0x0
  418d08:	cset	w9, ne  // ne = any
  418d0c:	mov	w10, #0x1                   	// #1
  418d10:	eor	w9, w9, #0x1
  418d14:	eor	w9, w9, w10
  418d18:	eor	w9, w9, w10
  418d1c:	and	w9, w9, #0x1
  418d20:	mov	w0, w9
  418d24:	sxtw	x8, w0
  418d28:	cbz	x8, 418d50 <bus_image_method_mark_read_only+0x8c>
  418d2c:	mov	w8, wzr
  418d30:	mov	w0, w8
  418d34:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418d38:	add	x1, x1, #0xebd
  418d3c:	ldr	x2, [sp]
  418d40:	mov	w3, #0xd2                  	// #210
  418d44:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  418d48:	add	x4, x4, #0x6c3
  418d4c:	bl	404bd0 <log_assert_failed_realm@plt>
  418d50:	ldur	x0, [x29, #-16]
  418d54:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418d58:	add	x1, x1, #0xb0c
  418d5c:	add	x2, sp, #0x8
  418d60:	bl	405170 <sd_bus_message_read@plt>
  418d64:	str	w0, [sp, #12]
  418d68:	ldr	w8, [sp, #12]
  418d6c:	cmp	w8, #0x0
  418d70:	cset	w8, ge  // ge = tcont
  418d74:	tbnz	w8, #0, 418d84 <bus_image_method_mark_read_only+0xc0>
  418d78:	ldr	w8, [sp, #12]
  418d7c:	stur	w8, [x29, #-4]
  418d80:	b	418e38 <bus_image_method_mark_read_only+0x174>
  418d84:	ldur	x0, [x29, #-16]
  418d88:	ldr	x8, [sp, #16]
  418d8c:	add	x6, x8, #0x28
  418d90:	ldr	x7, [sp, #32]
  418d94:	mov	w1, #0x15                  	// #21
  418d98:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  418d9c:	add	x2, x2, #0x5f8
  418da0:	mov	x8, xzr
  418da4:	mov	x3, x8
  418da8:	mov	w9, wzr
  418dac:	and	w4, w9, #0x1
  418db0:	mov	w5, #0xffffffff            	// #-1
  418db4:	bl	405250 <bus_verify_polkit_async@plt>
  418db8:	str	w0, [sp, #12]
  418dbc:	ldr	w9, [sp, #12]
  418dc0:	cmp	w9, #0x0
  418dc4:	cset	w9, ge  // ge = tcont
  418dc8:	tbnz	w9, #0, 418dd8 <bus_image_method_mark_read_only+0x114>
  418dcc:	ldr	w8, [sp, #12]
  418dd0:	stur	w8, [x29, #-4]
  418dd4:	b	418e38 <bus_image_method_mark_read_only+0x174>
  418dd8:	ldr	w8, [sp, #12]
  418ddc:	cbnz	w8, 418dec <bus_image_method_mark_read_only+0x128>
  418de0:	mov	w8, #0x1                   	// #1
  418de4:	stur	w8, [x29, #-4]
  418de8:	b	418e38 <bus_image_method_mark_read_only+0x174>
  418dec:	ldr	x0, [sp, #24]
  418df0:	ldr	w8, [sp, #8]
  418df4:	cmp	w8, #0x0
  418df8:	cset	w8, ne  // ne = any
  418dfc:	and	w1, w8, #0x1
  418e00:	bl	4058a0 <image_read_only@plt>
  418e04:	str	w0, [sp, #12]
  418e08:	ldr	w8, [sp, #12]
  418e0c:	cmp	w8, #0x0
  418e10:	cset	w8, ge  // ge = tcont
  418e14:	tbnz	w8, #0, 418e24 <bus_image_method_mark_read_only+0x160>
  418e18:	ldr	w8, [sp, #12]
  418e1c:	stur	w8, [x29, #-4]
  418e20:	b	418e38 <bus_image_method_mark_read_only+0x174>
  418e24:	ldur	x0, [x29, #-16]
  418e28:	mov	x8, xzr
  418e2c:	mov	x1, x8
  418e30:	bl	4051c0 <sd_bus_reply_method_return@plt>
  418e34:	stur	w0, [x29, #-4]
  418e38:	ldur	w0, [x29, #-4]
  418e3c:	ldp	x29, x30, [sp, #64]
  418e40:	add	sp, sp, #0x50
  418e44:	ret

0000000000418e48 <bus_image_method_set_limit>:
  418e48:	sub	sp, sp, #0x60
  418e4c:	stp	x29, x30, [sp, #80]
  418e50:	add	x29, sp, #0x50
  418e54:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  418e58:	add	x8, x8, #0x590
  418e5c:	add	x8, x8, #0x3
  418e60:	stur	x0, [x29, #-16]
  418e64:	stur	x1, [x29, #-24]
  418e68:	stur	x2, [x29, #-32]
  418e6c:	ldur	x9, [x29, #-24]
  418e70:	str	x9, [sp, #40]
  418e74:	ldr	x9, [sp, #40]
  418e78:	ldr	x9, [x9, #128]
  418e7c:	str	x9, [sp, #32]
  418e80:	str	x8, [sp, #8]
  418e84:	ldur	x8, [x29, #-16]
  418e88:	cmp	x8, #0x0
  418e8c:	cset	w9, ne  // ne = any
  418e90:	mov	w10, #0x1                   	// #1
  418e94:	eor	w9, w9, #0x1
  418e98:	eor	w9, w9, w10
  418e9c:	eor	w9, w9, w10
  418ea0:	and	w9, w9, #0x1
  418ea4:	mov	w0, w9
  418ea8:	sxtw	x8, w0
  418eac:	cbz	x8, 418ed4 <bus_image_method_set_limit+0x8c>
  418eb0:	mov	w8, wzr
  418eb4:	mov	w0, w8
  418eb8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418ebc:	add	x1, x1, #0xebd
  418ec0:	ldr	x2, [sp, #8]
  418ec4:	mov	w3, #0xf7                  	// #247
  418ec8:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  418ecc:	add	x4, x4, #0x711
  418ed0:	bl	404bd0 <log_assert_failed_realm@plt>
  418ed4:	ldur	x0, [x29, #-16]
  418ed8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  418edc:	add	x1, x1, #0xb3d
  418ee0:	add	x2, sp, #0x18
  418ee4:	bl	405170 <sd_bus_message_read@plt>
  418ee8:	str	w0, [sp, #20]
  418eec:	ldr	w8, [sp, #20]
  418ef0:	cmp	w8, #0x0
  418ef4:	cset	w8, ge  // ge = tcont
  418ef8:	tbnz	w8, #0, 418f08 <bus_image_method_set_limit+0xc0>
  418efc:	ldr	w8, [sp, #20]
  418f00:	stur	w8, [x29, #-4]
  418f04:	b	418fdc <bus_image_method_set_limit+0x194>
  418f08:	ldr	x0, [sp, #24]
  418f0c:	bl	418fec <FILE_SIZE_VALID_OR_INFINITY>
  418f10:	tbnz	w0, #0, 418f34 <bus_image_method_set_limit+0xec>
  418f14:	ldur	x0, [x29, #-32]
  418f18:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  418f1c:	add	x1, x1, #0x848
  418f20:	adrp	x2, 41c000 <machine_hash_ops+0x13e8>
  418f24:	add	x2, x2, #0xb23
  418f28:	bl	4051b0 <sd_bus_error_setf@plt>
  418f2c:	stur	w0, [x29, #-4]
  418f30:	b	418fdc <bus_image_method_set_limit+0x194>
  418f34:	ldur	x0, [x29, #-16]
  418f38:	ldr	x8, [sp, #32]
  418f3c:	add	x6, x8, #0x28
  418f40:	ldur	x7, [x29, #-32]
  418f44:	mov	w1, #0x15                  	// #21
  418f48:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  418f4c:	add	x2, x2, #0x5f8
  418f50:	mov	x8, xzr
  418f54:	mov	x3, x8
  418f58:	mov	w9, wzr
  418f5c:	and	w4, w9, #0x1
  418f60:	mov	w5, #0xffffffff            	// #-1
  418f64:	bl	405250 <bus_verify_polkit_async@plt>
  418f68:	str	w0, [sp, #20]
  418f6c:	ldr	w9, [sp, #20]
  418f70:	cmp	w9, #0x0
  418f74:	cset	w9, ge  // ge = tcont
  418f78:	tbnz	w9, #0, 418f88 <bus_image_method_set_limit+0x140>
  418f7c:	ldr	w8, [sp, #20]
  418f80:	stur	w8, [x29, #-4]
  418f84:	b	418fdc <bus_image_method_set_limit+0x194>
  418f88:	ldr	w8, [sp, #20]
  418f8c:	cbnz	w8, 418f9c <bus_image_method_set_limit+0x154>
  418f90:	mov	w8, #0x1                   	// #1
  418f94:	stur	w8, [x29, #-4]
  418f98:	b	418fdc <bus_image_method_set_limit+0x194>
  418f9c:	ldr	x0, [sp, #40]
  418fa0:	ldr	x1, [sp, #24]
  418fa4:	bl	4058b0 <image_set_limit@plt>
  418fa8:	str	w0, [sp, #20]
  418fac:	ldr	w8, [sp, #20]
  418fb0:	cmp	w8, #0x0
  418fb4:	cset	w8, ge  // ge = tcont
  418fb8:	tbnz	w8, #0, 418fc8 <bus_image_method_set_limit+0x180>
  418fbc:	ldr	w8, [sp, #20]
  418fc0:	stur	w8, [x29, #-4]
  418fc4:	b	418fdc <bus_image_method_set_limit+0x194>
  418fc8:	ldur	x0, [x29, #-16]
  418fcc:	mov	x8, xzr
  418fd0:	mov	x1, x8
  418fd4:	bl	4051c0 <sd_bus_reply_method_return@plt>
  418fd8:	stur	w0, [x29, #-4]
  418fdc:	ldur	w0, [x29, #-4]
  418fe0:	ldp	x29, x30, [sp, #80]
  418fe4:	add	sp, sp, #0x60
  418fe8:	ret

0000000000418fec <FILE_SIZE_VALID_OR_INFINITY>:
  418fec:	sub	sp, sp, #0x20
  418ff0:	stp	x29, x30, [sp, #16]
  418ff4:	add	x29, sp, #0x10
  418ff8:	mov	x8, #0xffffffffffffffff    	// #-1
  418ffc:	str	x0, [sp]
  419000:	ldr	x9, [sp]
  419004:	cmp	x9, x8
  419008:	b.ne	41901c <FILE_SIZE_VALID_OR_INFINITY+0x30>  // b.any
  41900c:	mov	w8, #0x1                   	// #1
  419010:	and	w8, w8, #0x1
  419014:	sturb	w8, [x29, #-1]
  419018:	b	41902c <FILE_SIZE_VALID_OR_INFINITY+0x40>
  41901c:	ldr	x0, [sp]
  419020:	bl	419f00 <FILE_SIZE_VALID>
  419024:	and	w8, w0, #0x1
  419028:	sturb	w8, [x29, #-1]
  41902c:	ldurb	w8, [x29, #-1]
  419030:	and	w0, w8, #0x1
  419034:	ldp	x29, x30, [sp, #16]
  419038:	add	sp, sp, #0x20
  41903c:	ret

0000000000419040 <bus_image_method_get_hostname>:
  419040:	sub	sp, sp, #0x40
  419044:	stp	x29, x30, [sp, #48]
  419048:	add	x29, sp, #0x30
  41904c:	stur	x0, [x29, #-16]
  419050:	str	x1, [sp, #24]
  419054:	str	x2, [sp, #16]
  419058:	ldr	x8, [sp, #24]
  41905c:	str	x8, [sp, #8]
  419060:	ldr	x8, [sp, #8]
  419064:	ldrb	w9, [x8, #120]
  419068:	and	w9, w9, #0x1
  41906c:	tbnz	w9, #0, 4190a8 <bus_image_method_get_hostname+0x68>
  419070:	ldr	x0, [sp, #8]
  419074:	bl	4058c0 <image_read_metadata@plt>
  419078:	str	w0, [sp, #4]
  41907c:	ldr	w8, [sp, #4]
  419080:	cmp	w8, #0x0
  419084:	cset	w8, ge  // ge = tcont
  419088:	tbnz	w8, #0, 4190a8 <bus_image_method_get_hostname+0x68>
  41908c:	ldr	x0, [sp, #16]
  419090:	ldr	w1, [sp, #4]
  419094:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  419098:	add	x2, x2, #0x75a
  41909c:	bl	405290 <sd_bus_error_set_errnof@plt>
  4190a0:	stur	w0, [x29, #-4]
  4190a4:	b	4190c4 <bus_image_method_get_hostname+0x84>
  4190a8:	ldur	x0, [x29, #-16]
  4190ac:	ldr	x8, [sp, #8]
  4190b0:	ldr	x2, [x8, #80]
  4190b4:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4190b8:	add	x1, x1, #0x7ae
  4190bc:	bl	4051c0 <sd_bus_reply_method_return@plt>
  4190c0:	stur	w0, [x29, #-4]
  4190c4:	ldur	w0, [x29, #-4]
  4190c8:	ldp	x29, x30, [sp, #48]
  4190cc:	add	sp, sp, #0x40
  4190d0:	ret

00000000004190d4 <bus_image_method_get_machine_id>:
  4190d4:	sub	sp, sp, #0x50
  4190d8:	stp	x29, x30, [sp, #64]
  4190dc:	add	x29, sp, #0x40
  4190e0:	mov	x8, xzr
  4190e4:	mov	w9, #0x1                   	// #1
  4190e8:	stur	x0, [x29, #-16]
  4190ec:	stur	x1, [x29, #-24]
  4190f0:	str	x2, [sp, #32]
  4190f4:	str	x8, [sp, #24]
  4190f8:	ldur	x8, [x29, #-24]
  4190fc:	str	x8, [sp, #16]
  419100:	ldr	x8, [sp, #16]
  419104:	ldrb	w10, [x8, #120]
  419108:	and	w9, w10, w9
  41910c:	tbnz	w9, #0, 419150 <bus_image_method_get_machine_id+0x7c>
  419110:	ldr	x0, [sp, #16]
  419114:	bl	4058c0 <image_read_metadata@plt>
  419118:	str	w0, [sp, #12]
  41911c:	ldr	w8, [sp, #12]
  419120:	cmp	w8, #0x0
  419124:	cset	w8, ge  // ge = tcont
  419128:	tbnz	w8, #0, 419150 <bus_image_method_get_machine_id+0x7c>
  41912c:	ldr	x0, [sp, #32]
  419130:	ldr	w1, [sp, #12]
  419134:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  419138:	add	x2, x2, #0x75a
  41913c:	bl	405290 <sd_bus_error_set_errnof@plt>
  419140:	stur	w0, [x29, #-4]
  419144:	mov	w8, #0x1                   	// #1
  419148:	str	w8, [sp, #8]
  41914c:	b	419218 <bus_image_method_get_machine_id+0x144>
  419150:	ldur	x0, [x29, #-16]
  419154:	add	x1, sp, #0x18
  419158:	bl	405200 <sd_bus_message_new_method_return@plt>
  41915c:	str	w0, [sp, #12]
  419160:	ldr	w8, [sp, #12]
  419164:	cmp	w8, #0x0
  419168:	cset	w8, ge  // ge = tcont
  41916c:	tbnz	w8, #0, 419184 <bus_image_method_get_machine_id+0xb0>
  419170:	ldr	w8, [sp, #12]
  419174:	stur	w8, [x29, #-4]
  419178:	mov	w8, #0x1                   	// #1
  41917c:	str	w8, [sp, #8]
  419180:	b	419218 <bus_image_method_get_machine_id+0x144>
  419184:	ldr	x8, [sp, #16]
  419188:	ldr	x0, [x8, #88]
  41918c:	ldr	x1, [x8, #96]
  419190:	bl	419264 <sd_id128_is_null>
  419194:	cbz	w0, 4191b8 <bus_image_method_get_machine_id+0xe4>
  419198:	ldr	x0, [sp, #24]
  41919c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  4191a0:	add	x1, x1, #0xdf8
  4191a4:	mov	w8, wzr
  4191a8:	mov	w2, w8
  4191ac:	bl	405120 <sd_bus_message_append@plt>
  4191b0:	str	w0, [sp, #12]
  4191b4:	b	4191d4 <bus_image_method_get_machine_id+0x100>
  4191b8:	ldr	x0, [sp, #24]
  4191bc:	ldr	x8, [sp, #16]
  4191c0:	add	x2, x8, #0x58
  4191c4:	mov	w1, #0x79                  	// #121
  4191c8:	mov	x3, #0x10                  	// #16
  4191cc:	bl	405550 <sd_bus_message_append_array@plt>
  4191d0:	str	w0, [sp, #12]
  4191d4:	ldr	w8, [sp, #12]
  4191d8:	cmp	w8, #0x0
  4191dc:	cset	w8, ge  // ge = tcont
  4191e0:	tbnz	w8, #0, 4191f8 <bus_image_method_get_machine_id+0x124>
  4191e4:	ldr	w8, [sp, #12]
  4191e8:	stur	w8, [x29, #-4]
  4191ec:	mov	w8, #0x1                   	// #1
  4191f0:	str	w8, [sp, #8]
  4191f4:	b	419218 <bus_image_method_get_machine_id+0x144>
  4191f8:	ldr	x1, [sp, #24]
  4191fc:	mov	x8, xzr
  419200:	mov	x0, x8
  419204:	mov	x2, x8
  419208:	bl	405220 <sd_bus_send@plt>
  41920c:	stur	w0, [x29, #-4]
  419210:	mov	w9, #0x1                   	// #1
  419214:	str	w9, [sp, #8]
  419218:	add	x0, sp, #0x18
  41921c:	bl	419230 <sd_bus_message_unrefp>
  419220:	ldur	w0, [x29, #-4]
  419224:	ldp	x29, x30, [sp, #64]
  419228:	add	sp, sp, #0x50
  41922c:	ret

0000000000419230 <sd_bus_message_unrefp>:
  419230:	sub	sp, sp, #0x20
  419234:	stp	x29, x30, [sp, #16]
  419238:	add	x29, sp, #0x10
  41923c:	str	x0, [sp, #8]
  419240:	ldr	x8, [sp, #8]
  419244:	ldr	x8, [x8]
  419248:	cbz	x8, 419258 <sd_bus_message_unrefp+0x28>
  41924c:	ldr	x8, [sp, #8]
  419250:	ldr	x0, [x8]
  419254:	bl	404e70 <sd_bus_message_unref@plt>
  419258:	ldp	x29, x30, [sp, #16]
  41925c:	add	sp, sp, #0x20
  419260:	ret

0000000000419264 <sd_id128_is_null>:
  419264:	sub	sp, sp, #0x20
  419268:	str	x0, [sp, #16]
  41926c:	str	x1, [sp, #24]
  419270:	ldr	x8, [sp, #16]
  419274:	mov	w9, #0x0                   	// #0
  419278:	str	w9, [sp, #12]
  41927c:	cbnz	x8, 419290 <sd_id128_is_null+0x2c>
  419280:	ldr	x8, [sp, #24]
  419284:	cmp	x8, #0x0
  419288:	cset	w9, eq  // eq = none
  41928c:	str	w9, [sp, #12]
  419290:	ldr	w8, [sp, #12]
  419294:	and	w0, w8, #0x1
  419298:	add	sp, sp, #0x20
  41929c:	ret

00000000004192a0 <bus_image_method_get_machine_info>:
  4192a0:	sub	sp, sp, #0x40
  4192a4:	stp	x29, x30, [sp, #48]
  4192a8:	add	x29, sp, #0x30
  4192ac:	stur	x0, [x29, #-16]
  4192b0:	str	x1, [sp, #24]
  4192b4:	str	x2, [sp, #16]
  4192b8:	ldr	x8, [sp, #24]
  4192bc:	str	x8, [sp, #8]
  4192c0:	ldr	x8, [sp, #8]
  4192c4:	ldrb	w9, [x8, #120]
  4192c8:	and	w9, w9, #0x1
  4192cc:	tbnz	w9, #0, 419308 <bus_image_method_get_machine_info+0x68>
  4192d0:	ldr	x0, [sp, #8]
  4192d4:	bl	4058c0 <image_read_metadata@plt>
  4192d8:	str	w0, [sp, #4]
  4192dc:	ldr	w8, [sp, #4]
  4192e0:	cmp	w8, #0x0
  4192e4:	cset	w8, ge  // ge = tcont
  4192e8:	tbnz	w8, #0, 419308 <bus_image_method_get_machine_info+0x68>
  4192ec:	ldr	x0, [sp, #16]
  4192f0:	ldr	w1, [sp, #4]
  4192f4:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  4192f8:	add	x2, x2, #0x75a
  4192fc:	bl	405290 <sd_bus_error_set_errnof@plt>
  419300:	stur	w0, [x29, #-4]
  419304:	b	41931c <bus_image_method_get_machine_info+0x7c>
  419308:	ldur	x0, [x29, #-16]
  41930c:	ldr	x8, [sp, #8]
  419310:	ldr	x1, [x8, #104]
  419314:	bl	405600 <bus_reply_pair_array@plt>
  419318:	stur	w0, [x29, #-4]
  41931c:	ldur	w0, [x29, #-4]
  419320:	ldp	x29, x30, [sp, #48]
  419324:	add	sp, sp, #0x40
  419328:	ret

000000000041932c <bus_image_method_get_os_release>:
  41932c:	sub	sp, sp, #0x40
  419330:	stp	x29, x30, [sp, #48]
  419334:	add	x29, sp, #0x30
  419338:	stur	x0, [x29, #-16]
  41933c:	str	x1, [sp, #24]
  419340:	str	x2, [sp, #16]
  419344:	ldr	x8, [sp, #24]
  419348:	str	x8, [sp, #8]
  41934c:	ldr	x8, [sp, #8]
  419350:	ldrb	w9, [x8, #120]
  419354:	and	w9, w9, #0x1
  419358:	tbnz	w9, #0, 419394 <bus_image_method_get_os_release+0x68>
  41935c:	ldr	x0, [sp, #8]
  419360:	bl	4058c0 <image_read_metadata@plt>
  419364:	str	w0, [sp, #4]
  419368:	ldr	w8, [sp, #4]
  41936c:	cmp	w8, #0x0
  419370:	cset	w8, ge  // ge = tcont
  419374:	tbnz	w8, #0, 419394 <bus_image_method_get_os_release+0x68>
  419378:	ldr	x0, [sp, #16]
  41937c:	ldr	w1, [sp, #4]
  419380:	adrp	x2, 41e000 <machine_hash_ops+0x33e8>
  419384:	add	x2, x2, #0x75a
  419388:	bl	405290 <sd_bus_error_set_errnof@plt>
  41938c:	stur	w0, [x29, #-4]
  419390:	b	4193a8 <bus_image_method_get_os_release+0x7c>
  419394:	ldur	x0, [x29, #-16]
  419398:	ldr	x8, [sp, #8]
  41939c:	ldr	x1, [x8, #112]
  4193a0:	bl	405600 <bus_reply_pair_array@plt>
  4193a4:	stur	w0, [x29, #-4]
  4193a8:	ldur	w0, [x29, #-4]
  4193ac:	ldp	x29, x30, [sp, #48]
  4193b0:	add	sp, sp, #0x40
  4193b4:	ret

00000000004193b8 <property_get_type>:
  4193b8:	sub	sp, sp, #0x70
  4193bc:	stp	x29, x30, [sp, #96]
  4193c0:	add	x29, sp, #0x60
  4193c4:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  4193c8:	add	x8, x8, #0x590
  4193cc:	add	x8, x8, #0x3
  4193d0:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  4193d4:	add	x9, x9, #0x928
  4193d8:	stur	x0, [x29, #-8]
  4193dc:	stur	x1, [x29, #-16]
  4193e0:	stur	x2, [x29, #-24]
  4193e4:	stur	x3, [x29, #-32]
  4193e8:	stur	x4, [x29, #-40]
  4193ec:	str	x5, [sp, #48]
  4193f0:	str	x6, [sp, #40]
  4193f4:	ldr	x10, [sp, #48]
  4193f8:	str	x10, [sp, #32]
  4193fc:	str	x8, [sp, #24]
  419400:	str	x9, [sp, #16]
  419404:	ldur	x8, [x29, #-8]
  419408:	cmp	x8, #0x0
  41940c:	cset	w9, ne  // ne = any
  419410:	mov	w10, #0x1                   	// #1
  419414:	eor	w9, w9, #0x1
  419418:	eor	w9, w9, w10
  41941c:	eor	w9, w9, w10
  419420:	and	w9, w9, #0x1
  419424:	mov	w0, w9
  419428:	sxtw	x8, w0
  41942c:	cbz	x8, 419450 <property_get_type+0x98>
  419430:	mov	w8, wzr
  419434:	mov	w0, w8
  419438:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  41943c:	add	x1, x1, #0x3da
  419440:	ldr	x2, [sp, #24]
  419444:	mov	w3, #0x19                  	// #25
  419448:	ldr	x4, [sp, #16]
  41944c:	bl	404bd0 <log_assert_failed_realm@plt>
  419450:	ldur	x8, [x29, #-40]
  419454:	cmp	x8, #0x0
  419458:	cset	w9, ne  // ne = any
  41945c:	mov	w10, #0x1                   	// #1
  419460:	eor	w9, w9, #0x1
  419464:	eor	w9, w9, w10
  419468:	eor	w9, w9, w10
  41946c:	and	w9, w9, #0x1
  419470:	mov	w0, w9
  419474:	sxtw	x8, w0
  419478:	cbz	x8, 41949c <property_get_type+0xe4>
  41947c:	mov	w8, wzr
  419480:	mov	w0, w8
  419484:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  419488:	add	x1, x1, #0x457
  41948c:	ldr	x2, [sp, #24]
  419490:	mov	w3, #0x19                  	// #25
  419494:	ldr	x4, [sp, #16]
  419498:	bl	404bd0 <log_assert_failed_realm@plt>
  41949c:	ldr	x8, [sp, #32]
  4194a0:	cmp	x8, #0x0
  4194a4:	cset	w9, ne  // ne = any
  4194a8:	mov	w10, #0x1                   	// #1
  4194ac:	eor	w9, w9, #0x1
  4194b0:	eor	w9, w9, w10
  4194b4:	eor	w9, w9, w10
  4194b8:	and	w9, w9, #0x1
  4194bc:	mov	w0, w9
  4194c0:	sxtw	x8, w0
  4194c4:	cbz	x8, 4194e8 <property_get_type+0x130>
  4194c8:	mov	w8, wzr
  4194cc:	mov	w0, w8
  4194d0:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  4194d4:	add	x1, x1, #0x4a1
  4194d8:	ldr	x2, [sp, #24]
  4194dc:	mov	w3, #0x19                  	// #25
  4194e0:	ldr	x4, [sp, #16]
  4194e4:	bl	404bd0 <log_assert_failed_realm@plt>
  4194e8:	ldur	x0, [x29, #-40]
  4194ec:	ldr	x8, [sp, #32]
  4194f0:	ldr	w9, [x8]
  4194f4:	str	x0, [sp, #8]
  4194f8:	mov	w0, w9
  4194fc:	bl	405240 <image_type_to_string@plt>
  419500:	ldr	x8, [sp, #8]
  419504:	str	x0, [sp]
  419508:	mov	x0, x8
  41950c:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  419510:	add	x1, x1, #0x7ae
  419514:	ldr	x2, [sp]
  419518:	bl	405120 <sd_bus_message_append@plt>
  41951c:	ldp	x29, x30, [sp, #96]
  419520:	add	sp, sp, #0x70
  419524:	ret

0000000000419528 <image_object_find>:
  419528:	sub	sp, sp, #0x80
  41952c:	stp	x29, x30, [sp, #112]
  419530:	add	x29, sp, #0x70
  419534:	mov	x8, xzr
  419538:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  41953c:	add	x9, x9, #0x590
  419540:	add	x9, x9, #0x3
  419544:	adrp	x10, 41e000 <machine_hash_ops+0x33e8>
  419548:	add	x10, x10, #0x833
  41954c:	stur	x0, [x29, #-16]
  419550:	stur	x1, [x29, #-24]
  419554:	stur	x2, [x29, #-32]
  419558:	stur	x3, [x29, #-40]
  41955c:	stur	x4, [x29, #-48]
  419560:	str	x5, [sp, #56]
  419564:	str	x8, [sp, #48]
  419568:	ldur	x11, [x29, #-40]
  41956c:	str	x11, [sp, #40]
  419570:	str	x8, [sp, #32]
  419574:	str	x9, [sp, #8]
  419578:	str	x10, [sp]
  41957c:	ldur	x8, [x29, #-16]
  419580:	cmp	x8, #0x0
  419584:	cset	w9, ne  // ne = any
  419588:	mov	w10, #0x1                   	// #1
  41958c:	eor	w9, w9, #0x1
  419590:	eor	w9, w9, w10
  419594:	eor	w9, w9, w10
  419598:	and	w9, w9, #0x1
  41959c:	mov	w0, w9
  4195a0:	sxtw	x8, w0
  4195a4:	cbz	x8, 4195c8 <image_object_find+0xa0>
  4195a8:	mov	w8, wzr
  4195ac:	mov	w0, w8
  4195b0:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  4195b4:	add	x1, x1, #0x3da
  4195b8:	ldr	x2, [sp, #8]
  4195bc:	mov	w3, #0x18d                 	// #397
  4195c0:	ldr	x4, [sp]
  4195c4:	bl	404bd0 <log_assert_failed_realm@plt>
  4195c8:	ldur	x8, [x29, #-24]
  4195cc:	cmp	x8, #0x0
  4195d0:	cset	w9, ne  // ne = any
  4195d4:	mov	w10, #0x1                   	// #1
  4195d8:	eor	w9, w9, #0x1
  4195dc:	eor	w9, w9, w10
  4195e0:	eor	w9, w9, w10
  4195e4:	and	w9, w9, #0x1
  4195e8:	mov	w0, w9
  4195ec:	sxtw	x8, w0
  4195f0:	cbz	x8, 419614 <image_object_find+0xec>
  4195f4:	mov	w8, wzr
  4195f8:	mov	w0, w8
  4195fc:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  419600:	add	x1, x1, #0x306
  419604:	ldr	x2, [sp, #8]
  419608:	mov	w3, #0x18e                 	// #398
  41960c:	ldr	x4, [sp]
  419610:	bl	404bd0 <log_assert_failed_realm@plt>
  419614:	ldur	x8, [x29, #-32]
  419618:	cmp	x8, #0x0
  41961c:	cset	w9, ne  // ne = any
  419620:	mov	w10, #0x1                   	// #1
  419624:	eor	w9, w9, #0x1
  419628:	eor	w9, w9, w10
  41962c:	eor	w9, w9, w10
  419630:	and	w9, w9, #0x1
  419634:	mov	w0, w9
  419638:	sxtw	x8, w0
  41963c:	cbz	x8, 419660 <image_object_find+0x138>
  419640:	mov	w8, wzr
  419644:	mov	w0, w8
  419648:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  41964c:	add	x1, x1, #0x1fd
  419650:	ldr	x2, [sp, #8]
  419654:	mov	w3, #0x18f                 	// #399
  419658:	ldr	x4, [sp]
  41965c:	bl	404bd0 <log_assert_failed_realm@plt>
  419660:	ldur	x8, [x29, #-48]
  419664:	cmp	x8, #0x0
  419668:	cset	w9, ne  // ne = any
  41966c:	mov	w10, #0x1                   	// #1
  419670:	eor	w9, w9, #0x1
  419674:	eor	w9, w9, w10
  419678:	eor	w9, w9, w10
  41967c:	and	w9, w9, #0x1
  419680:	mov	w0, w9
  419684:	sxtw	x8, w0
  419688:	cbz	x8, 4196ac <image_object_find+0x184>
  41968c:	mov	w8, wzr
  419690:	mov	w0, w8
  419694:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  419698:	add	x1, x1, #0x207
  41969c:	ldr	x2, [sp, #8]
  4196a0:	mov	w3, #0x190                 	// #400
  4196a4:	ldr	x4, [sp]
  4196a8:	bl	404bd0 <log_assert_failed_realm@plt>
  4196ac:	ldur	x0, [x29, #-24]
  4196b0:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  4196b4:	add	x1, x1, #0x890
  4196b8:	bl	419940 <startswith>
  4196bc:	str	x0, [sp, #24]
  4196c0:	ldr	x8, [sp, #24]
  4196c4:	cbnz	x8, 4196d8 <image_object_find+0x1b0>
  4196c8:	stur	wzr, [x29, #-4]
  4196cc:	mov	w8, #0x1                   	// #1
  4196d0:	str	w8, [sp, #16]
  4196d4:	b	419900 <image_object_find+0x3d8>
  4196d8:	ldr	x0, [sp, #24]
  4196dc:	bl	4199a0 <bus_label_unescape>
  4196e0:	str	x0, [sp, #48]
  4196e4:	ldr	x8, [sp, #48]
  4196e8:	cbnz	x8, 419700 <image_object_find+0x1d8>
  4196ec:	mov	w8, #0xfffffff4            	// #-12
  4196f0:	stur	w8, [x29, #-4]
  4196f4:	mov	w8, #0x1                   	// #1
  4196f8:	str	w8, [sp, #16]
  4196fc:	b	419900 <image_object_find+0x3d8>
  419700:	ldr	x8, [sp, #40]
  419704:	ldr	x0, [x8, #48]
  419708:	ldr	x1, [sp, #48]
  41970c:	bl	4199e4 <hashmap_get>
  419710:	str	x0, [sp, #32]
  419714:	ldr	x8, [sp, #32]
  419718:	cbz	x8, 419738 <image_object_find+0x210>
  41971c:	ldr	x8, [sp, #32]
  419720:	ldur	x9, [x29, #-48]
  419724:	str	x8, [x9]
  419728:	mov	w10, #0x1                   	// #1
  41972c:	stur	w10, [x29, #-4]
  419730:	str	w10, [sp, #16]
  419734:	b	419900 <image_object_find+0x3d8>
  419738:	ldr	x8, [sp, #40]
  41973c:	add	x0, x8, #0x30
  419740:	adrp	x1, 43f000 <machine_vtable+0x4b8>
  419744:	ldr	x1, [x1, #2048]
  419748:	bl	4058d0 <internal_hashmap_ensure_allocated@plt>
  41974c:	str	w0, [sp, #20]
  419750:	ldr	w9, [sp, #20]
  419754:	cmp	w9, #0x0
  419758:	cset	w9, ge  // ge = tcont
  41975c:	tbnz	w9, #0, 419774 <image_object_find+0x24c>
  419760:	ldr	w8, [sp, #20]
  419764:	stur	w8, [x29, #-4]
  419768:	mov	w8, #0x1                   	// #1
  41976c:	str	w8, [sp, #16]
  419770:	b	419900 <image_object_find+0x3d8>
  419774:	ldr	x8, [sp, #40]
  419778:	ldr	x8, [x8, #56]
  41977c:	cbnz	x8, 419800 <image_object_find+0x2d8>
  419780:	ldr	x8, [sp, #40]
  419784:	ldr	x0, [x8]
  419788:	ldr	x8, [sp, #40]
  41978c:	add	x1, x8, #0x38
  419790:	ldr	x3, [sp, #40]
  419794:	adrp	x2, 419000 <FILE_SIZE_VALID_OR_INFINITY+0x14>
  419798:	add	x2, x2, #0xa10
  41979c:	bl	405500 <sd_event_add_defer@plt>
  4197a0:	str	w0, [sp, #20]
  4197a4:	ldr	w9, [sp, #20]
  4197a8:	cmp	w9, #0x0
  4197ac:	cset	w9, ge  // ge = tcont
  4197b0:	tbnz	w9, #0, 4197c8 <image_object_find+0x2a0>
  4197b4:	ldr	w8, [sp, #20]
  4197b8:	stur	w8, [x29, #-4]
  4197bc:	mov	w8, #0x1                   	// #1
  4197c0:	str	w8, [sp, #16]
  4197c4:	b	419900 <image_object_find+0x3d8>
  4197c8:	ldr	x8, [sp, #40]
  4197cc:	ldr	x0, [x8, #56]
  4197d0:	mov	x1, #0x64                  	// #100
  4197d4:	bl	4058e0 <sd_event_source_set_priority@plt>
  4197d8:	str	w0, [sp, #20]
  4197dc:	ldr	w9, [sp, #20]
  4197e0:	cmp	w9, #0x0
  4197e4:	cset	w9, ge  // ge = tcont
  4197e8:	tbnz	w9, #0, 419800 <image_object_find+0x2d8>
  4197ec:	ldr	w8, [sp, #20]
  4197f0:	stur	w8, [x29, #-4]
  4197f4:	mov	w8, #0x1                   	// #1
  4197f8:	str	w8, [sp, #16]
  4197fc:	b	419900 <image_object_find+0x3d8>
  419800:	ldr	x8, [sp, #40]
  419804:	ldr	x0, [x8, #56]
  419808:	mov	w1, #0xffffffff            	// #-1
  41980c:	bl	405520 <sd_event_source_set_enabled@plt>
  419810:	str	w0, [sp, #20]
  419814:	ldr	w9, [sp, #20]
  419818:	cmp	w9, #0x0
  41981c:	cset	w9, ge  // ge = tcont
  419820:	tbnz	w9, #0, 419838 <image_object_find+0x310>
  419824:	ldr	w8, [sp, #20]
  419828:	stur	w8, [x29, #-4]
  41982c:	mov	w8, #0x1                   	// #1
  419830:	str	w8, [sp, #16]
  419834:	b	419900 <image_object_find+0x3d8>
  419838:	ldr	x1, [sp, #48]
  41983c:	mov	w8, wzr
  419840:	mov	w0, w8
  419844:	add	x2, sp, #0x20
  419848:	bl	4051d0 <image_find@plt>
  41984c:	str	w0, [sp, #20]
  419850:	ldr	w8, [sp, #20]
  419854:	mov	w9, #0xfffffffe            	// #-2
  419858:	cmp	w8, w9
  41985c:	b.ne	419870 <image_object_find+0x348>  // b.any
  419860:	stur	wzr, [x29, #-4]
  419864:	mov	w8, #0x1                   	// #1
  419868:	str	w8, [sp, #16]
  41986c:	b	419900 <image_object_find+0x3d8>
  419870:	ldr	w8, [sp, #20]
  419874:	cmp	w8, #0x0
  419878:	cset	w8, ge  // ge = tcont
  41987c:	tbnz	w8, #0, 419894 <image_object_find+0x36c>
  419880:	ldr	w8, [sp, #20]
  419884:	stur	w8, [x29, #-4]
  419888:	mov	w8, #0x1                   	// #1
  41988c:	str	w8, [sp, #16]
  419890:	b	419900 <image_object_find+0x3d8>
  419894:	ldr	x8, [sp, #40]
  419898:	ldr	x9, [sp, #32]
  41989c:	str	x8, [x9, #128]
  4198a0:	ldr	x8, [sp, #40]
  4198a4:	ldr	x0, [x8, #48]
  4198a8:	ldr	x8, [sp, #32]
  4198ac:	ldr	x1, [x8, #8]
  4198b0:	ldr	x2, [sp, #32]
  4198b4:	bl	404e60 <hashmap_put@plt>
  4198b8:	str	w0, [sp, #20]
  4198bc:	ldr	w10, [sp, #20]
  4198c0:	cmp	w10, #0x0
  4198c4:	cset	w10, ge  // ge = tcont
  4198c8:	tbnz	w10, #0, 4198e8 <image_object_find+0x3c0>
  4198cc:	ldr	x0, [sp, #32]
  4198d0:	bl	405480 <image_unref@plt>
  4198d4:	ldr	w8, [sp, #20]
  4198d8:	stur	w8, [x29, #-4]
  4198dc:	mov	w8, #0x1                   	// #1
  4198e0:	str	w8, [sp, #16]
  4198e4:	b	419900 <image_object_find+0x3d8>
  4198e8:	ldr	x8, [sp, #32]
  4198ec:	ldur	x9, [x29, #-48]
  4198f0:	str	x8, [x9]
  4198f4:	mov	w10, #0x1                   	// #1
  4198f8:	stur	w10, [x29, #-4]
  4198fc:	str	w10, [sp, #16]
  419900:	add	x0, sp, #0x30
  419904:	bl	419918 <freep>
  419908:	ldur	w0, [x29, #-4]
  41990c:	ldp	x29, x30, [sp, #112]
  419910:	add	sp, sp, #0x80
  419914:	ret

0000000000419918 <freep>:
  419918:	sub	sp, sp, #0x20
  41991c:	stp	x29, x30, [sp, #16]
  419920:	add	x29, sp, #0x10
  419924:	str	x0, [sp, #8]
  419928:	ldr	x8, [sp, #8]
  41992c:	ldr	x0, [x8]
  419930:	bl	404cb0 <free@plt>
  419934:	ldp	x29, x30, [sp, #16]
  419938:	add	sp, sp, #0x20
  41993c:	ret

0000000000419940 <startswith>:
  419940:	sub	sp, sp, #0x30
  419944:	stp	x29, x30, [sp, #32]
  419948:	add	x29, sp, #0x20
  41994c:	str	x0, [sp, #16]
  419950:	str	x1, [sp, #8]
  419954:	ldr	x0, [sp, #8]
  419958:	bl	404e00 <strlen@plt>
  41995c:	str	x0, [sp]
  419960:	ldr	x0, [sp, #16]
  419964:	ldr	x1, [sp, #8]
  419968:	ldr	x2, [sp]
  41996c:	bl	404e10 <strncmp@plt>
  419970:	cbnz	w0, 419988 <startswith+0x48>
  419974:	ldr	x8, [sp, #16]
  419978:	ldr	x9, [sp]
  41997c:	add	x8, x8, x9
  419980:	stur	x8, [x29, #-8]
  419984:	b	419990 <startswith+0x50>
  419988:	mov	x8, xzr
  41998c:	stur	x8, [x29, #-8]
  419990:	ldur	x0, [x29, #-8]
  419994:	ldp	x29, x30, [sp, #32]
  419998:	add	sp, sp, #0x30
  41999c:	ret

00000000004199a0 <bus_label_unescape>:
  4199a0:	sub	sp, sp, #0x30
  4199a4:	stp	x29, x30, [sp, #32]
  4199a8:	add	x29, sp, #0x20
  4199ac:	stur	x0, [x29, #-8]
  4199b0:	ldur	x0, [x29, #-8]
  4199b4:	ldur	x8, [x29, #-8]
  4199b8:	str	x0, [sp, #16]
  4199bc:	mov	x0, x8
  4199c0:	bl	419f24 <strlen_ptr>
  4199c4:	ldr	x8, [sp, #16]
  4199c8:	str	x0, [sp, #8]
  4199cc:	mov	x0, x8
  4199d0:	ldr	x1, [sp, #8]
  4199d4:	bl	405810 <bus_label_unescape_n@plt>
  4199d8:	ldp	x29, x30, [sp, #32]
  4199dc:	add	sp, sp, #0x30
  4199e0:	ret

00000000004199e4 <hashmap_get>:
  4199e4:	sub	sp, sp, #0x20
  4199e8:	stp	x29, x30, [sp, #16]
  4199ec:	add	x29, sp, #0x10
  4199f0:	str	x0, [sp, #8]
  4199f4:	str	x1, [sp]
  4199f8:	ldr	x0, [sp, #8]
  4199fc:	ldr	x1, [sp]
  419a00:	bl	405360 <internal_hashmap_get@plt>
  419a04:	ldp	x29, x30, [sp, #16]
  419a08:	add	sp, sp, #0x20
  419a0c:	ret

0000000000419a10 <image_flush_cache>:
  419a10:	sub	sp, sp, #0x30
  419a14:	stp	x29, x30, [sp, #32]
  419a18:	add	x29, sp, #0x20
  419a1c:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  419a20:	add	x8, x8, #0x590
  419a24:	add	x8, x8, #0x3
  419a28:	stur	x0, [x29, #-8]
  419a2c:	str	x1, [sp, #16]
  419a30:	ldr	x9, [sp, #16]
  419a34:	str	x9, [sp, #8]
  419a38:	str	x8, [sp]
  419a3c:	ldur	x8, [x29, #-8]
  419a40:	cmp	x8, #0x0
  419a44:	cset	w9, ne  // ne = any
  419a48:	mov	w10, #0x1                   	// #1
  419a4c:	eor	w9, w9, #0x1
  419a50:	eor	w9, w9, w10
  419a54:	eor	w9, w9, w10
  419a58:	and	w9, w9, #0x1
  419a5c:	mov	w0, w9
  419a60:	sxtw	x8, w0
  419a64:	cbz	x8, 419a8c <image_flush_cache+0x7c>
  419a68:	mov	w8, wzr
  419a6c:	mov	w0, w8
  419a70:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  419a74:	add	x1, x1, #0x7ae
  419a78:	ldr	x2, [sp]
  419a7c:	mov	w3, #0x17f                 	// #383
  419a80:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  419a84:	add	x4, x4, #0x99c
  419a88:	bl	404bd0 <log_assert_failed_realm@plt>
  419a8c:	ldr	x8, [sp, #8]
  419a90:	cmp	x8, #0x0
  419a94:	cset	w9, ne  // ne = any
  419a98:	mov	w10, #0x1                   	// #1
  419a9c:	eor	w9, w9, #0x1
  419aa0:	eor	w9, w9, w10
  419aa4:	eor	w9, w9, w10
  419aa8:	and	w9, w9, #0x1
  419aac:	mov	w0, w9
  419ab0:	sxtw	x8, w0
  419ab4:	cbz	x8, 419adc <image_flush_cache+0xcc>
  419ab8:	mov	w8, wzr
  419abc:	mov	w0, w8
  419ac0:	adrp	x1, 41a000 <operation_new+0x40>
  419ac4:	add	x1, x1, #0xe18
  419ac8:	ldr	x2, [sp]
  419acc:	mov	w3, #0x180                 	// #384
  419ad0:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  419ad4:	add	x4, x4, #0x99c
  419ad8:	bl	404bd0 <log_assert_failed_realm@plt>
  419adc:	ldr	x8, [sp, #8]
  419ae0:	ldr	x0, [x8, #48]
  419ae4:	bl	419f60 <hashmap_clear>
  419ae8:	mov	w9, wzr
  419aec:	mov	w0, w9
  419af0:	ldp	x29, x30, [sp, #32]
  419af4:	add	sp, sp, #0x30
  419af8:	ret

0000000000419afc <image_bus_path>:
  419afc:	sub	sp, sp, #0x40
  419b00:	stp	x29, x30, [sp, #48]
  419b04:	add	x29, sp, #0x30
  419b08:	mov	x8, xzr
  419b0c:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  419b10:	add	x9, x9, #0x590
  419b14:	add	x2, x9, #0x3
  419b18:	stur	x0, [x29, #-16]
  419b1c:	str	x8, [sp, #24]
  419b20:	str	x2, [sp, #8]
  419b24:	ldur	x8, [x29, #-16]
  419b28:	cmp	x8, #0x0
  419b2c:	cset	w9, ne  // ne = any
  419b30:	mov	w10, #0x1                   	// #1
  419b34:	eor	w9, w9, #0x1
  419b38:	eor	w9, w9, w10
  419b3c:	eor	w9, w9, w10
  419b40:	and	w9, w9, #0x1
  419b44:	mov	w0, w9
  419b48:	sxtw	x8, w0
  419b4c:	cbz	x8, 419b74 <image_bus_path+0x78>
  419b50:	mov	w8, wzr
  419b54:	mov	w0, w8
  419b58:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  419b5c:	add	x1, x1, #0x3a3
  419b60:	ldr	x2, [sp, #8]
  419b64:	mov	w3, #0x1c7                 	// #455
  419b68:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  419b6c:	add	x4, x4, #0x8b1
  419b70:	bl	404bd0 <log_assert_failed_realm@plt>
  419b74:	ldur	x0, [x29, #-16]
  419b78:	bl	405820 <bus_label_escape@plt>
  419b7c:	str	x0, [sp, #24]
  419b80:	ldr	x8, [sp, #24]
  419b84:	cbnz	x8, 419b9c <image_bus_path+0xa0>
  419b88:	mov	x8, xzr
  419b8c:	stur	x8, [x29, #-8]
  419b90:	mov	w9, #0x1                   	// #1
  419b94:	str	w9, [sp, #20]
  419b98:	b	419bc0 <image_bus_path+0xc4>
  419b9c:	ldr	x1, [sp, #24]
  419ba0:	adrp	x0, 41e000 <machine_hash_ops+0x33e8>
  419ba4:	add	x0, x0, #0x890
  419ba8:	mov	x8, xzr
  419bac:	mov	x2, x8
  419bb0:	bl	405100 <strjoin_real@plt>
  419bb4:	stur	x0, [x29, #-8]
  419bb8:	mov	w9, #0x1                   	// #1
  419bbc:	str	w9, [sp, #20]
  419bc0:	add	x0, sp, #0x18
  419bc4:	bl	419918 <freep>
  419bc8:	ldur	x0, [x29, #-8]
  419bcc:	ldp	x29, x30, [sp, #48]
  419bd0:	add	sp, sp, #0x40
  419bd4:	ret

0000000000419bd8 <image_node_enumerator>:
  419bd8:	sub	sp, sp, #0xb0
  419bdc:	stp	x29, x30, [sp, #160]
  419be0:	add	x29, sp, #0xa0
  419be4:	mov	x8, xzr
  419be8:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  419bec:	add	x9, x9, #0x590
  419bf0:	add	x9, x9, #0x3
  419bf4:	adrp	x10, 41e000 <machine_hash_ops+0x33e8>
  419bf8:	add	x10, x10, #0x8d4
  419bfc:	stur	x0, [x29, #-16]
  419c00:	stur	x1, [x29, #-24]
  419c04:	stur	x2, [x29, #-32]
  419c08:	stur	x3, [x29, #-40]
  419c0c:	stur	x4, [x29, #-48]
  419c10:	stur	x8, [x29, #-56]
  419c14:	stur	x8, [x29, #-64]
  419c18:	str	x9, [sp, #8]
  419c1c:	str	x10, [sp]
  419c20:	ldur	x8, [x29, #-16]
  419c24:	cmp	x8, #0x0
  419c28:	cset	w9, ne  // ne = any
  419c2c:	mov	w10, #0x1                   	// #1
  419c30:	eor	w9, w9, #0x1
  419c34:	eor	w9, w9, w10
  419c38:	eor	w9, w9, w10
  419c3c:	and	w9, w9, #0x1
  419c40:	mov	w0, w9
  419c44:	sxtw	x8, w0
  419c48:	cbz	x8, 419c6c <image_node_enumerator+0x94>
  419c4c:	mov	w8, wzr
  419c50:	mov	w0, w8
  419c54:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  419c58:	add	x1, x1, #0x3da
  419c5c:	ldr	x2, [sp, #8]
  419c60:	mov	w3, #0x1d7                 	// #471
  419c64:	ldr	x4, [sp]
  419c68:	bl	404bd0 <log_assert_failed_realm@plt>
  419c6c:	ldur	x8, [x29, #-24]
  419c70:	cmp	x8, #0x0
  419c74:	cset	w9, ne  // ne = any
  419c78:	mov	w10, #0x1                   	// #1
  419c7c:	eor	w9, w9, #0x1
  419c80:	eor	w9, w9, w10
  419c84:	eor	w9, w9, w10
  419c88:	and	w9, w9, #0x1
  419c8c:	mov	w0, w9
  419c90:	sxtw	x8, w0
  419c94:	cbz	x8, 419cb8 <image_node_enumerator+0xe0>
  419c98:	mov	w8, wzr
  419c9c:	mov	w0, w8
  419ca0:	adrp	x1, 41c000 <machine_hash_ops+0x13e8>
  419ca4:	add	x1, x1, #0x306
  419ca8:	ldr	x2, [sp, #8]
  419cac:	mov	w3, #0x1d8                 	// #472
  419cb0:	ldr	x4, [sp]
  419cb4:	bl	404bd0 <log_assert_failed_realm@plt>
  419cb8:	ldur	x8, [x29, #-40]
  419cbc:	cmp	x8, #0x0
  419cc0:	cset	w9, ne  // ne = any
  419cc4:	mov	w10, #0x1                   	// #1
  419cc8:	eor	w9, w9, #0x1
  419ccc:	eor	w9, w9, w10
  419cd0:	eor	w9, w9, w10
  419cd4:	and	w9, w9, #0x1
  419cd8:	mov	w0, w9
  419cdc:	sxtw	x8, w0
  419ce0:	cbz	x8, 419d04 <image_node_enumerator+0x12c>
  419ce4:	mov	w8, wzr
  419ce8:	mov	w0, w8
  419cec:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  419cf0:	add	x1, x1, #0x2cf
  419cf4:	ldr	x2, [sp, #8]
  419cf8:	mov	w3, #0x1d9                 	// #473
  419cfc:	ldr	x4, [sp]
  419d00:	bl	404bd0 <log_assert_failed_realm@plt>
  419d04:	adrp	x0, 43f000 <machine_vtable+0x4b8>
  419d08:	ldr	x0, [x0, #2048]
  419d0c:	bl	404c10 <internal_hashmap_new@plt>
  419d10:	stur	x0, [x29, #-56]
  419d14:	ldur	x8, [x29, #-56]
  419d18:	cbnz	x8, 419d30 <image_node_enumerator+0x158>
  419d1c:	mov	w8, #0xfffffff4            	// #-12
  419d20:	stur	w8, [x29, #-4]
  419d24:	mov	w8, #0x1                   	// #1
  419d28:	str	w8, [sp, #56]
  419d2c:	b	419e38 <image_node_enumerator+0x260>
  419d30:	ldur	x1, [x29, #-56]
  419d34:	mov	w8, wzr
  419d38:	mov	w0, w8
  419d3c:	bl	405230 <image_discover@plt>
  419d40:	str	w0, [sp, #60]
  419d44:	ldr	w8, [sp, #60]
  419d48:	cmp	w8, #0x0
  419d4c:	cset	w8, ge  // ge = tcont
  419d50:	tbnz	w8, #0, 419d68 <image_node_enumerator+0x190>
  419d54:	ldr	w8, [sp, #60]
  419d58:	stur	w8, [x29, #-4]
  419d5c:	mov	w8, #0x1                   	// #1
  419d60:	str	w8, [sp, #56]
  419d64:	b	419e38 <image_node_enumerator+0x260>
  419d68:	add	x8, sp, #0x28
  419d6c:	mov	w9, #0xfffffffe            	// #-2
  419d70:	str	w9, [sp, #40]
  419d74:	mov	x10, xzr
  419d78:	str	x10, [x8, #8]
  419d7c:	ldur	q0, [sp, #40]
  419d80:	str	q0, [sp, #64]
  419d84:	ldur	x0, [x29, #-56]
  419d88:	add	x1, sp, #0x40
  419d8c:	sub	x2, x29, #0x48
  419d90:	mov	x8, xzr
  419d94:	mov	x3, x8
  419d98:	bl	419ec0 <hashmap_iterate>
  419d9c:	tbnz	w0, #0, 419da4 <image_node_enumerator+0x1cc>
  419da0:	b	419e08 <image_node_enumerator+0x230>
  419da4:	ldur	x8, [x29, #-72]
  419da8:	ldr	x0, [x8, #8]
  419dac:	bl	419afc <image_bus_path>
  419db0:	str	x0, [sp, #32]
  419db4:	ldr	x8, [sp, #32]
  419db8:	cbnz	x8, 419dd0 <image_node_enumerator+0x1f8>
  419dbc:	mov	w8, #0xfffffff4            	// #-12
  419dc0:	stur	w8, [x29, #-4]
  419dc4:	mov	w8, #0x1                   	// #1
  419dc8:	str	w8, [sp, #56]
  419dcc:	b	419e38 <image_node_enumerator+0x260>
  419dd0:	ldr	x1, [sp, #32]
  419dd4:	sub	x0, x29, #0x40
  419dd8:	bl	405830 <strv_consume@plt>
  419ddc:	str	w0, [sp, #60]
  419de0:	ldr	w8, [sp, #60]
  419de4:	cmp	w8, #0x0
  419de8:	cset	w8, ge  // ge = tcont
  419dec:	tbnz	w8, #0, 419e04 <image_node_enumerator+0x22c>
  419df0:	ldr	w8, [sp, #60]
  419df4:	stur	w8, [x29, #-4]
  419df8:	mov	w8, #0x1                   	// #1
  419dfc:	str	w8, [sp, #56]
  419e00:	b	419e38 <image_node_enumerator+0x260>
  419e04:	b	419d84 <image_node_enumerator+0x1ac>
  419e08:	ldur	x8, [x29, #-64]
  419e0c:	str	x8, [sp, #24]
  419e10:	mov	x8, xzr
  419e14:	stur	x8, [x29, #-64]
  419e18:	ldr	x8, [sp, #24]
  419e1c:	str	x8, [sp, #16]
  419e20:	ldr	x8, [sp, #16]
  419e24:	ldur	x9, [x29, #-40]
  419e28:	str	x8, [x9]
  419e2c:	mov	w10, #0x1                   	// #1
  419e30:	stur	w10, [x29, #-4]
  419e34:	str	w10, [sp, #56]
  419e38:	sub	x0, x29, #0x40
  419e3c:	bl	419e8c <strv_freep>
  419e40:	sub	x0, x29, #0x38
  419e44:	bl	419e58 <hashmap_freep>
  419e48:	ldur	w0, [x29, #-4]
  419e4c:	ldp	x29, x30, [sp, #160]
  419e50:	add	sp, sp, #0xb0
  419e54:	ret

0000000000419e58 <hashmap_freep>:
  419e58:	sub	sp, sp, #0x20
  419e5c:	stp	x29, x30, [sp, #16]
  419e60:	add	x29, sp, #0x10
  419e64:	str	x0, [sp, #8]
  419e68:	ldr	x8, [sp, #8]
  419e6c:	ldr	x8, [x8]
  419e70:	cbz	x8, 419e80 <hashmap_freep+0x28>
  419e74:	ldr	x8, [sp, #8]
  419e78:	ldr	x0, [x8]
  419e7c:	bl	419f90 <hashmap_free>
  419e80:	ldp	x29, x30, [sp, #16]
  419e84:	add	sp, sp, #0x20
  419e88:	ret

0000000000419e8c <strv_freep>:
  419e8c:	sub	sp, sp, #0x20
  419e90:	stp	x29, x30, [sp, #16]
  419e94:	add	x29, sp, #0x10
  419e98:	str	x0, [sp, #8]
  419e9c:	ldr	x8, [sp, #8]
  419ea0:	ldr	x8, [x8]
  419ea4:	cbz	x8, 419eb4 <strv_freep+0x28>
  419ea8:	ldr	x8, [sp, #8]
  419eac:	ldr	x0, [x8]
  419eb0:	bl	405610 <strv_free@plt>
  419eb4:	ldp	x29, x30, [sp, #16]
  419eb8:	add	sp, sp, #0x20
  419ebc:	ret

0000000000419ec0 <hashmap_iterate>:
  419ec0:	sub	sp, sp, #0x30
  419ec4:	stp	x29, x30, [sp, #32]
  419ec8:	add	x29, sp, #0x20
  419ecc:	stur	x0, [x29, #-8]
  419ed0:	str	x1, [sp, #16]
  419ed4:	str	x2, [sp, #8]
  419ed8:	str	x3, [sp]
  419edc:	ldur	x0, [x29, #-8]
  419ee0:	ldr	x1, [sp, #16]
  419ee4:	ldr	x2, [sp, #8]
  419ee8:	ldr	x3, [sp]
  419eec:	bl	404da0 <internal_hashmap_iterate@plt>
  419ef0:	and	w0, w0, #0x1
  419ef4:	ldp	x29, x30, [sp, #32]
  419ef8:	add	sp, sp, #0x30
  419efc:	ret

0000000000419f00 <FILE_SIZE_VALID>:
  419f00:	sub	sp, sp, #0x10
  419f04:	str	x0, [sp, #8]
  419f08:	ldr	x8, [sp, #8]
  419f0c:	lsr	x8, x8, #63
  419f10:	cmp	x8, #0x0
  419f14:	cset	w9, eq  // eq = none
  419f18:	and	w0, w9, #0x1
  419f1c:	add	sp, sp, #0x10
  419f20:	ret

0000000000419f24 <strlen_ptr>:
  419f24:	sub	sp, sp, #0x20
  419f28:	stp	x29, x30, [sp, #16]
  419f2c:	add	x29, sp, #0x10
  419f30:	str	x0, [sp]
  419f34:	ldr	x8, [sp]
  419f38:	cbnz	x8, 419f44 <strlen_ptr+0x20>
  419f3c:	str	xzr, [sp, #8]
  419f40:	b	419f50 <strlen_ptr+0x2c>
  419f44:	ldr	x0, [sp]
  419f48:	bl	404e00 <strlen@plt>
  419f4c:	str	x0, [sp, #8]
  419f50:	ldr	x0, [sp, #8]
  419f54:	ldp	x29, x30, [sp, #16]
  419f58:	add	sp, sp, #0x20
  419f5c:	ret

0000000000419f60 <hashmap_clear>:
  419f60:	sub	sp, sp, #0x20
  419f64:	stp	x29, x30, [sp, #16]
  419f68:	add	x29, sp, #0x10
  419f6c:	mov	x8, xzr
  419f70:	str	x0, [sp, #8]
  419f74:	ldr	x0, [sp, #8]
  419f78:	mov	x1, x8
  419f7c:	mov	x2, x8
  419f80:	bl	4058f0 <internal_hashmap_clear@plt>
  419f84:	ldp	x29, x30, [sp, #16]
  419f88:	add	sp, sp, #0x20
  419f8c:	ret

0000000000419f90 <hashmap_free>:
  419f90:	sub	sp, sp, #0x20
  419f94:	stp	x29, x30, [sp, #16]
  419f98:	add	x29, sp, #0x10
  419f9c:	mov	x8, xzr
  419fa0:	str	x0, [sp, #8]
  419fa4:	ldr	x0, [sp, #8]
  419fa8:	mov	x1, x8
  419fac:	mov	x2, x8
  419fb0:	bl	404ca0 <internal_hashmap_free@plt>
  419fb4:	ldp	x29, x30, [sp, #16]
  419fb8:	add	sp, sp, #0x20
  419fbc:	ret

0000000000419fc0 <operation_new>:
  419fc0:	sub	sp, sp, #0xa0
  419fc4:	stp	x29, x30, [sp, #144]
  419fc8:	add	x29, sp, #0x90
  419fcc:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  419fd0:	add	x8, x8, #0x9cd
  419fd4:	add	x8, x8, #0x3
  419fd8:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  419fdc:	add	x9, x9, #0x9e8
  419fe0:	stur	x0, [x29, #-16]
  419fe4:	stur	x1, [x29, #-24]
  419fe8:	stur	w2, [x29, #-28]
  419fec:	stur	x3, [x29, #-40]
  419ff0:	stur	w4, [x29, #-44]
  419ff4:	stur	x5, [x29, #-56]
  419ff8:	str	x8, [sp, #16]
  419ffc:	str	x9, [sp, #8]
  41a000:	ldur	x8, [x29, #-16]
  41a004:	cmp	x8, #0x0
  41a008:	cset	w9, ne  // ne = any
  41a00c:	mov	w10, #0x1                   	// #1
  41a010:	eor	w9, w9, #0x1
  41a014:	eor	w9, w9, w10
  41a018:	eor	w9, w9, w10
  41a01c:	and	w9, w9, #0x1
  41a020:	mov	w0, w9
  41a024:	sxtw	x8, w0
  41a028:	cbz	x8, 41a04c <operation_new+0x8c>
  41a02c:	mov	w8, wzr
  41a030:	mov	w0, w8
  41a034:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a038:	add	x1, x1, #0x32b
  41a03c:	ldr	x2, [sp, #16]
  41a040:	mov	w3, #0x4b                  	// #75
  41a044:	ldr	x4, [sp, #8]
  41a048:	bl	404bd0 <log_assert_failed_realm@plt>
  41a04c:	ldur	w8, [x29, #-28]
  41a050:	cmp	w8, #0x1
  41a054:	cset	w8, gt
  41a058:	mov	w9, #0x1                   	// #1
  41a05c:	eor	w8, w8, #0x1
  41a060:	eor	w8, w8, w9
  41a064:	eor	w8, w8, w9
  41a068:	and	w8, w8, #0x1
  41a06c:	mov	w0, w8
  41a070:	sxtw	x10, w0
  41a074:	cbz	x10, 41a098 <operation_new+0xd8>
  41a078:	mov	w8, wzr
  41a07c:	mov	w0, w8
  41a080:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  41a084:	add	x1, x1, #0xa3c
  41a088:	ldr	x2, [sp, #16]
  41a08c:	mov	w3, #0x4c                  	// #76
  41a090:	ldr	x4, [sp, #8]
  41a094:	bl	404bd0 <log_assert_failed_realm@plt>
  41a098:	ldur	x8, [x29, #-40]
  41a09c:	cmp	x8, #0x0
  41a0a0:	cset	w9, ne  // ne = any
  41a0a4:	mov	w10, #0x1                   	// #1
  41a0a8:	eor	w9, w9, #0x1
  41a0ac:	eor	w9, w9, w10
  41a0b0:	eor	w9, w9, w10
  41a0b4:	and	w9, w9, #0x1
  41a0b8:	mov	w0, w9
  41a0bc:	sxtw	x8, w0
  41a0c0:	cbz	x8, 41a0e4 <operation_new+0x124>
  41a0c4:	mov	w8, wzr
  41a0c8:	mov	w0, w8
  41a0cc:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a0d0:	add	x1, x1, #0xebd
  41a0d4:	ldr	x2, [sp, #16]
  41a0d8:	mov	w3, #0x4d                  	// #77
  41a0dc:	ldr	x4, [sp, #8]
  41a0e0:	bl	404bd0 <log_assert_failed_realm@plt>
  41a0e4:	ldur	w8, [x29, #-44]
  41a0e8:	cmp	w8, #0x0
  41a0ec:	cset	w8, ge  // ge = tcont
  41a0f0:	mov	w9, #0x1                   	// #1
  41a0f4:	eor	w8, w8, #0x1
  41a0f8:	eor	w8, w8, w9
  41a0fc:	eor	w8, w8, w9
  41a100:	and	w8, w8, #0x1
  41a104:	mov	w0, w8
  41a108:	sxtw	x10, w0
  41a10c:	cbz	x10, 41a130 <operation_new+0x170>
  41a110:	mov	w8, wzr
  41a114:	mov	w0, w8
  41a118:	adrp	x1, 41e000 <machine_hash_ops+0x33e8>
  41a11c:	add	x1, x1, #0xa46
  41a120:	ldr	x2, [sp, #16]
  41a124:	mov	w3, #0x4e                  	// #78
  41a128:	ldr	x4, [sp, #8]
  41a12c:	bl	404bd0 <log_assert_failed_realm@plt>
  41a130:	mov	x0, #0x1                   	// #1
  41a134:	mov	x1, #0x58                  	// #88
  41a138:	bl	404c00 <calloc@plt>
  41a13c:	stur	x0, [x29, #-64]
  41a140:	ldur	x8, [x29, #-64]
  41a144:	cbnz	x8, 41a154 <operation_new+0x194>
  41a148:	mov	w8, #0xfffffff4            	// #-12
  41a14c:	stur	w8, [x29, #-4]
  41a150:	b	41a3d4 <operation_new+0x414>
  41a154:	ldur	x8, [x29, #-64]
  41a158:	mov	w9, #0xffffffff            	// #-1
  41a15c:	str	w9, [x8, #36]
  41a160:	ldur	x8, [x29, #-16]
  41a164:	ldr	x0, [x8]
  41a168:	ldur	x8, [x29, #-64]
  41a16c:	add	x1, x8, #0x28
  41a170:	ldur	w2, [x29, #-28]
  41a174:	ldur	x5, [x29, #-64]
  41a178:	mov	w3, #0x4                   	// #4
  41a17c:	adrp	x4, 41a000 <operation_new+0x40>
  41a180:	add	x4, x4, #0x3e4
  41a184:	bl	405910 <sd_event_add_child@plt>
  41a188:	stur	w0, [x29, #-68]
  41a18c:	ldur	w9, [x29, #-68]
  41a190:	cmp	w9, #0x0
  41a194:	cset	w9, ge  // ge = tcont
  41a198:	tbnz	w9, #0, 41a1b0 <operation_new+0x1f0>
  41a19c:	ldur	x0, [x29, #-64]
  41a1a0:	bl	404cb0 <free@plt>
  41a1a4:	ldur	w8, [x29, #-68]
  41a1a8:	stur	w8, [x29, #-4]
  41a1ac:	b	41a3d4 <operation_new+0x414>
  41a1b0:	ldur	w8, [x29, #-28]
  41a1b4:	ldur	x9, [x29, #-64]
  41a1b8:	str	w8, [x9, #16]
  41a1bc:	ldur	x0, [x29, #-40]
  41a1c0:	bl	405420 <sd_bus_message_ref@plt>
  41a1c4:	ldur	x9, [x29, #-64]
  41a1c8:	str	x0, [x9, #24]
  41a1cc:	ldur	w8, [x29, #-44]
  41a1d0:	ldur	x9, [x29, #-64]
  41a1d4:	str	w8, [x9, #32]
  41a1d8:	ldur	x8, [x29, #-16]
  41a1dc:	add	x8, x8, #0x50
  41a1e0:	str	x8, [sp, #64]
  41a1e4:	ldur	x8, [x29, #-64]
  41a1e8:	str	x8, [sp, #56]
  41a1ec:	ldr	x8, [sp, #56]
  41a1f0:	cmp	x8, #0x0
  41a1f4:	cset	w9, ne  // ne = any
  41a1f8:	mov	w10, #0x1                   	// #1
  41a1fc:	eor	w9, w9, #0x1
  41a200:	eor	w9, w9, w10
  41a204:	eor	w9, w9, w10
  41a208:	and	w9, w9, #0x1
  41a20c:	mov	w0, w9
  41a210:	sxtw	x8, w0
  41a214:	cbz	x8, 41a238 <operation_new+0x278>
  41a218:	mov	w8, wzr
  41a21c:	mov	w0, w8
  41a220:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a224:	add	x1, x1, #0x2fa
  41a228:	ldr	x2, [sp, #16]
  41a22c:	mov	w3, #0x60                  	// #96
  41a230:	ldr	x4, [sp, #8]
  41a234:	bl	404bd0 <log_assert_failed_realm@plt>
  41a238:	ldr	x8, [sp, #64]
  41a23c:	ldr	x8, [x8]
  41a240:	ldr	x9, [sp, #56]
  41a244:	str	x8, [x9, #56]
  41a248:	cbz	x8, 41a25c <operation_new+0x29c>
  41a24c:	ldr	x8, [sp, #56]
  41a250:	ldr	x9, [sp, #56]
  41a254:	ldr	x9, [x9, #56]
  41a258:	str	x8, [x9, #64]
  41a25c:	ldr	x8, [sp, #56]
  41a260:	mov	x9, xzr
  41a264:	str	x9, [x8, #64]
  41a268:	ldr	x8, [sp, #56]
  41a26c:	ldr	x9, [sp, #64]
  41a270:	str	x8, [x9]
  41a274:	ldur	x8, [x29, #-16]
  41a278:	ldr	w9, [x8, #88]
  41a27c:	add	w9, w9, #0x1
  41a280:	str	w9, [x8, #88]
  41a284:	ldur	x8, [x29, #-16]
  41a288:	ldur	x10, [x29, #-64]
  41a28c:	str	x8, [x10]
  41a290:	ldur	x8, [x29, #-24]
  41a294:	cbz	x8, 41a340 <operation_new+0x380>
  41a298:	ldur	x8, [x29, #-24]
  41a29c:	add	x8, x8, #0x88
  41a2a0:	str	x8, [sp, #48]
  41a2a4:	ldur	x8, [x29, #-64]
  41a2a8:	str	x8, [sp, #40]
  41a2ac:	ldr	x8, [sp, #40]
  41a2b0:	cmp	x8, #0x0
  41a2b4:	cset	w9, ne  // ne = any
  41a2b8:	mov	w10, #0x1                   	// #1
  41a2bc:	eor	w9, w9, #0x1
  41a2c0:	eor	w9, w9, w10
  41a2c4:	eor	w9, w9, w10
  41a2c8:	and	w9, w9, #0x1
  41a2cc:	mov	w0, w9
  41a2d0:	sxtw	x8, w0
  41a2d4:	cbz	x8, 41a2f8 <operation_new+0x338>
  41a2d8:	mov	w8, wzr
  41a2dc:	mov	w0, w8
  41a2e0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a2e4:	add	x1, x1, #0x2fa
  41a2e8:	ldr	x2, [sp, #16]
  41a2ec:	mov	w3, #0x65                  	// #101
  41a2f0:	ldr	x4, [sp, #8]
  41a2f4:	bl	404bd0 <log_assert_failed_realm@plt>
  41a2f8:	ldr	x8, [sp, #48]
  41a2fc:	ldr	x8, [x8]
  41a300:	ldr	x9, [sp, #40]
  41a304:	str	x8, [x9, #72]
  41a308:	cbz	x8, 41a31c <operation_new+0x35c>
  41a30c:	ldr	x8, [sp, #40]
  41a310:	ldr	x9, [sp, #40]
  41a314:	ldr	x9, [x9, #72]
  41a318:	str	x8, [x9, #80]
  41a31c:	ldr	x8, [sp, #40]
  41a320:	mov	x9, xzr
  41a324:	str	x9, [x8, #80]
  41a328:	ldr	x8, [sp, #40]
  41a32c:	ldr	x9, [sp, #48]
  41a330:	str	x8, [x9]
  41a334:	ldur	x8, [x29, #-24]
  41a338:	ldur	x9, [x29, #-64]
  41a33c:	str	x8, [x9, #8]
  41a340:	mov	w8, #0x7                   	// #7
  41a344:	str	w8, [sp, #36]
  41a348:	str	wzr, [sp, #32]
  41a34c:	str	wzr, [sp, #28]
  41a350:	ldr	w0, [sp, #28]
  41a354:	bl	404b80 <log_get_max_level_realm@plt>
  41a358:	ldr	w8, [sp, #36]
  41a35c:	and	w8, w8, #0x7
  41a360:	cmp	w0, w8
  41a364:	b.lt	41a3a0 <operation_new+0x3e0>  // b.tstop
  41a368:	ldr	w8, [sp, #28]
  41a36c:	ldr	w9, [sp, #36]
  41a370:	orr	w0, w9, w8, lsl #10
  41a374:	ldr	w1, [sp, #32]
  41a378:	ldur	w6, [x29, #-28]
  41a37c:	ldr	x2, [sp, #16]
  41a380:	mov	w3, #0x69                  	// #105
  41a384:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  41a388:	add	x4, x4, #0xa54
  41a38c:	adrp	x5, 41e000 <machine_hash_ops+0x33e8>
  41a390:	add	x5, x5, #0xa62
  41a394:	bl	404b90 <log_internal_realm@plt>
  41a398:	str	w0, [sp, #4]
  41a39c:	b	41a3b4 <operation_new+0x3f4>
  41a3a0:	ldr	w0, [sp, #32]
  41a3a4:	bl	404ba0 <abs@plt>
  41a3a8:	mov	w8, wzr
  41a3ac:	subs	w8, w8, w0, uxtb
  41a3b0:	str	w8, [sp, #4]
  41a3b4:	ldr	w8, [sp, #4]
  41a3b8:	str	w8, [sp, #24]
  41a3bc:	ldur	x9, [x29, #-56]
  41a3c0:	cbz	x9, 41a3d0 <operation_new+0x410>
  41a3c4:	ldur	x8, [x29, #-64]
  41a3c8:	ldur	x9, [x29, #-56]
  41a3cc:	str	x8, [x9]
  41a3d0:	stur	wzr, [x29, #-4]
  41a3d4:	ldur	w0, [x29, #-4]
  41a3d8:	ldp	x29, x30, [sp, #144]
  41a3dc:	add	sp, sp, #0xa0
  41a3e0:	ret

000000000041a3e4 <operation_done>:
  41a3e4:	sub	sp, sp, #0xd0
  41a3e8:	stp	x29, x30, [sp, #192]
  41a3ec:	add	x29, sp, #0xc0
  41a3f0:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  41a3f4:	add	x8, x8, #0x9cd
  41a3f8:	add	x8, x8, #0x3
  41a3fc:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  41a400:	add	x9, x9, #0xae4
  41a404:	stur	x0, [x29, #-16]
  41a408:	stur	x1, [x29, #-24]
  41a40c:	stur	x2, [x29, #-32]
  41a410:	stur	xzr, [x29, #-56]
  41a414:	stur	xzr, [x29, #-48]
  41a418:	stur	xzr, [x29, #-40]
  41a41c:	ldur	x10, [x29, #-32]
  41a420:	stur	x10, [x29, #-64]
  41a424:	str	x8, [sp, #64]
  41a428:	str	x9, [sp, #56]
  41a42c:	ldur	x8, [x29, #-64]
  41a430:	cmp	x8, #0x0
  41a434:	cset	w9, ne  // ne = any
  41a438:	mov	w10, #0x1                   	// #1
  41a43c:	eor	w9, w9, #0x1
  41a440:	eor	w9, w9, w10
  41a444:	eor	w9, w9, w10
  41a448:	and	w9, w9, #0x1
  41a44c:	mov	w0, w9
  41a450:	sxtw	x8, w0
  41a454:	cbz	x8, 41a47c <operation_done+0x98>
  41a458:	mov	w8, wzr
  41a45c:	mov	w0, w8
  41a460:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a464:	add	x1, x1, #0xb49
  41a468:	ldr	x2, [sp, #64]
  41a46c:	mov	w3, #0xf                   	// #15
  41a470:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  41a474:	add	x4, x4, #0xaa3
  41a478:	bl	404bd0 <log_assert_failed_realm@plt>
  41a47c:	ldur	x8, [x29, #-24]
  41a480:	cmp	x8, #0x0
  41a484:	cset	w9, ne  // ne = any
  41a488:	mov	w10, #0x1                   	// #1
  41a48c:	eor	w9, w9, #0x1
  41a490:	eor	w9, w9, w10
  41a494:	eor	w9, w9, w10
  41a498:	and	w9, w9, #0x1
  41a49c:	mov	w0, w9
  41a4a0:	sxtw	x8, w0
  41a4a4:	cbz	x8, 41a4cc <operation_done+0xe8>
  41a4a8:	mov	w8, wzr
  41a4ac:	mov	w0, w8
  41a4b0:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  41a4b4:	add	x1, x1, #0x317
  41a4b8:	ldr	x2, [sp, #64]
  41a4bc:	mov	w3, #0x10                  	// #16
  41a4c0:	adrp	x4, 41e000 <machine_hash_ops+0x33e8>
  41a4c4:	add	x4, x4, #0xaa3
  41a4c8:	bl	404bd0 <log_assert_failed_realm@plt>
  41a4cc:	mov	w8, #0x7                   	// #7
  41a4d0:	stur	w8, [x29, #-72]
  41a4d4:	stur	wzr, [x29, #-76]
  41a4d8:	stur	wzr, [x29, #-80]
  41a4dc:	ldur	w0, [x29, #-80]
  41a4e0:	bl	404b80 <log_get_max_level_realm@plt>
  41a4e4:	ldur	w8, [x29, #-72]
  41a4e8:	and	w8, w8, #0x7
  41a4ec:	cmp	w0, w8
  41a4f0:	b.lt	41a570 <operation_done+0x18c>  // b.tstop
  41a4f4:	ldur	w8, [x29, #-80]
  41a4f8:	ldur	w9, [x29, #-72]
  41a4fc:	orr	w0, w9, w8, lsl #10
  41a500:	ldur	w1, [x29, #-76]
  41a504:	ldur	x10, [x29, #-64]
  41a508:	ldr	w6, [x10, #16]
  41a50c:	ldur	x10, [x29, #-24]
  41a510:	ldr	w8, [x10, #8]
  41a514:	str	w0, [sp, #52]
  41a518:	mov	w0, w8
  41a51c:	str	w1, [sp, #48]
  41a520:	str	w6, [sp, #44]
  41a524:	bl	405920 <sigchld_code_to_string@plt>
  41a528:	ldur	x10, [x29, #-24]
  41a52c:	ldr	w8, [x10, #24]
  41a530:	ldr	w9, [sp, #52]
  41a534:	str	x0, [sp, #32]
  41a538:	mov	w0, w9
  41a53c:	ldr	w1, [sp, #48]
  41a540:	ldr	x2, [sp, #64]
  41a544:	mov	w3, #0x14                  	// #20
  41a548:	ldr	x4, [sp, #56]
  41a54c:	adrp	x5, 41e000 <machine_hash_ops+0x33e8>
  41a550:	add	x5, x5, #0xaf3
  41a554:	ldr	w6, [sp, #44]
  41a558:	ldr	x7, [sp, #32]
  41a55c:	mov	x10, sp
  41a560:	str	w8, [x10]
  41a564:	bl	404b90 <log_internal_realm@plt>
  41a568:	str	w0, [sp, #28]
  41a56c:	b	41a584 <operation_done+0x1a0>
  41a570:	ldur	w0, [x29, #-76]
  41a574:	bl	404ba0 <abs@plt>
  41a578:	mov	w8, wzr
  41a57c:	subs	w8, w8, w0, uxtb
  41a580:	str	w8, [sp, #28]
  41a584:	ldr	w8, [sp, #28]
  41a588:	stur	w8, [x29, #-84]
  41a58c:	ldur	x9, [x29, #-64]
  41a590:	str	wzr, [x9, #16]
  41a594:	ldur	x9, [x29, #-24]
  41a598:	ldr	w8, [x9, #8]
  41a59c:	cmp	w8, #0x1
  41a5a0:	b.eq	41a5c4 <operation_done+0x1e0>  // b.none
  41a5a4:	sub	x0, x29, #0x38
  41a5a8:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  41a5ac:	add	x1, x1, #0x44e
  41a5b0:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41a5b4:	add	x2, x2, #0x470
  41a5b8:	bl	4051b0 <sd_bus_error_setf@plt>
  41a5bc:	stur	w0, [x29, #-68]
  41a5c0:	b	41a744 <operation_done+0x360>
  41a5c4:	ldur	x8, [x29, #-24]
  41a5c8:	ldr	w9, [x8, #24]
  41a5cc:	cbnz	w9, 41a5d8 <operation_done+0x1f4>
  41a5d0:	stur	wzr, [x29, #-68]
  41a5d4:	b	41a614 <operation_done+0x230>
  41a5d8:	ldur	x8, [x29, #-64]
  41a5dc:	ldr	w0, [x8, #32]
  41a5e0:	sub	x1, x29, #0x44
  41a5e4:	mov	x2, #0x4                   	// #4
  41a5e8:	bl	405780 <read@plt>
  41a5ec:	cmp	x0, #0x4
  41a5f0:	b.eq	41a614 <operation_done+0x230>  // b.none
  41a5f4:	sub	x0, x29, #0x38
  41a5f8:	adrp	x1, 41d000 <machine_hash_ops+0x23e8>
  41a5fc:	add	x1, x1, #0x44e
  41a600:	adrp	x2, 41d000 <machine_hash_ops+0x23e8>
  41a604:	add	x2, x2, #0xdc0
  41a608:	bl	4051b0 <sd_bus_error_setf@plt>
  41a60c:	stur	w0, [x29, #-68]
  41a610:	b	41a744 <operation_done+0x360>
  41a614:	ldur	x8, [x29, #-64]
  41a618:	ldr	x8, [x8, #48]
  41a61c:	cbz	x8, 41a66c <operation_done+0x288>
  41a620:	ldur	x8, [x29, #-64]
  41a624:	ldr	x8, [x8, #48]
  41a628:	ldur	x0, [x29, #-64]
  41a62c:	ldur	w1, [x29, #-68]
  41a630:	sub	x2, x29, #0x38
  41a634:	blr	x8
  41a638:	stur	w0, [x29, #-68]
  41a63c:	ldur	w9, [x29, #-68]
  41a640:	cmp	w9, #0x0
  41a644:	cset	w9, ge  // ge = tcont
  41a648:	tbnz	w9, #0, 41a668 <operation_done+0x284>
  41a64c:	sub	x0, x29, #0x38
  41a650:	bl	405930 <sd_bus_error_is_set@plt>
  41a654:	cbnz	w0, 41a664 <operation_done+0x280>
  41a658:	ldur	w1, [x29, #-68]
  41a65c:	sub	x0, x29, #0x38
  41a660:	bl	405210 <sd_bus_error_set_errno@plt>
  41a664:	b	41a744 <operation_done+0x360>
  41a668:	b	41a72c <operation_done+0x348>
  41a66c:	ldur	w8, [x29, #-68]
  41a670:	cmp	w8, #0x0
  41a674:	cset	w8, ge  // ge = tcont
  41a678:	tbnz	w8, #0, 41a68c <operation_done+0x2a8>
  41a67c:	ldur	w1, [x29, #-68]
  41a680:	sub	x0, x29, #0x38
  41a684:	bl	405210 <sd_bus_error_set_errno@plt>
  41a688:	b	41a744 <operation_done+0x360>
  41a68c:	ldur	x8, [x29, #-64]
  41a690:	ldr	x0, [x8, #24]
  41a694:	mov	x8, xzr
  41a698:	mov	x1, x8
  41a69c:	bl	4051c0 <sd_bus_reply_method_return@plt>
  41a6a0:	stur	w0, [x29, #-68]
  41a6a4:	ldur	w9, [x29, #-68]
  41a6a8:	cmp	w9, #0x0
  41a6ac:	cset	w9, ge  // ge = tcont
  41a6b0:	tbnz	w9, #0, 41a72c <operation_done+0x348>
  41a6b4:	mov	w8, #0x3                   	// #3
  41a6b8:	stur	w8, [x29, #-88]
  41a6bc:	ldur	w8, [x29, #-68]
  41a6c0:	stur	w8, [x29, #-92]
  41a6c4:	str	wzr, [sp, #96]
  41a6c8:	ldr	w0, [sp, #96]
  41a6cc:	bl	404b80 <log_get_max_level_realm@plt>
  41a6d0:	ldur	w8, [x29, #-88]
  41a6d4:	and	w8, w8, #0x7
  41a6d8:	cmp	w0, w8
  41a6dc:	b.lt	41a710 <operation_done+0x32c>  // b.tstop
  41a6e0:	ldr	w8, [sp, #96]
  41a6e4:	ldur	w9, [x29, #-88]
  41a6e8:	orr	w0, w9, w8, lsl #10
  41a6ec:	ldur	w1, [x29, #-92]
  41a6f0:	ldr	x2, [sp, #64]
  41a6f4:	mov	w3, #0x38                  	// #56
  41a6f8:	ldr	x4, [sp, #56]
  41a6fc:	adrp	x5, 41e000 <machine_hash_ops+0x33e8>
  41a700:	add	x5, x5, #0xb27
  41a704:	bl	404b90 <log_internal_realm@plt>
  41a708:	str	w0, [sp, #24]
  41a70c:	b	41a724 <operation_done+0x340>
  41a710:	ldur	w0, [x29, #-92]
  41a714:	bl	404ba0 <abs@plt>
  41a718:	mov	w8, wzr
  41a71c:	subs	w8, w8, w0, uxtb
  41a720:	str	w8, [sp, #24]
  41a724:	ldr	w8, [sp, #24]
  41a728:	str	w8, [sp, #92]
  41a72c:	ldur	x0, [x29, #-64]
  41a730:	bl	41a80c <operation_free>
  41a734:	stur	wzr, [x29, #-4]
  41a738:	mov	w8, #0x1                   	// #1
  41a73c:	str	w8, [sp, #88]
  41a740:	b	41a7f4 <operation_done+0x410>
  41a744:	ldur	x8, [x29, #-64]
  41a748:	ldr	x0, [x8, #24]
  41a74c:	sub	x1, x29, #0x38
  41a750:	bl	405850 <sd_bus_reply_method_error@plt>
  41a754:	stur	w0, [x29, #-68]
  41a758:	ldur	w9, [x29, #-68]
  41a75c:	cmp	w9, #0x0
  41a760:	cset	w9, ge  // ge = tcont
  41a764:	tbnz	w9, #0, 41a7e0 <operation_done+0x3fc>
  41a768:	mov	w8, #0x3                   	// #3
  41a76c:	str	w8, [sp, #84]
  41a770:	ldur	w8, [x29, #-68]
  41a774:	str	w8, [sp, #80]
  41a778:	str	wzr, [sp, #76]
  41a77c:	ldr	w0, [sp, #76]
  41a780:	bl	404b80 <log_get_max_level_realm@plt>
  41a784:	ldr	w8, [sp, #84]
  41a788:	and	w8, w8, #0x7
  41a78c:	cmp	w0, w8
  41a790:	b.lt	41a7c4 <operation_done+0x3e0>  // b.tstop
  41a794:	ldr	w8, [sp, #76]
  41a798:	ldr	w9, [sp, #84]
  41a79c:	orr	w0, w9, w8, lsl #10
  41a7a0:	ldr	w1, [sp, #80]
  41a7a4:	ldr	x2, [sp, #64]
  41a7a8:	mov	w3, #0x41                  	// #65
  41a7ac:	ldr	x4, [sp, #56]
  41a7b0:	adrp	x5, 41e000 <machine_hash_ops+0x33e8>
  41a7b4:	add	x5, x5, #0xb27
  41a7b8:	bl	404b90 <log_internal_realm@plt>
  41a7bc:	str	w0, [sp, #20]
  41a7c0:	b	41a7d8 <operation_done+0x3f4>
  41a7c4:	ldr	w0, [sp, #80]
  41a7c8:	bl	404ba0 <abs@plt>
  41a7cc:	mov	w8, wzr
  41a7d0:	subs	w8, w8, w0, uxtb
  41a7d4:	str	w8, [sp, #20]
  41a7d8:	ldr	w8, [sp, #20]
  41a7dc:	str	w8, [sp, #72]
  41a7e0:	ldur	x0, [x29, #-64]
  41a7e4:	bl	41a80c <operation_free>
  41a7e8:	stur	wzr, [x29, #-4]
  41a7ec:	mov	w8, #0x1                   	// #1
  41a7f0:	str	w8, [sp, #88]
  41a7f4:	sub	x0, x29, #0x38
  41a7f8:	bl	404e90 <sd_bus_error_free@plt>
  41a7fc:	ldur	w0, [x29, #-4]
  41a800:	ldp	x29, x30, [sp, #192]
  41a804:	add	sp, sp, #0xd0
  41a808:	ret

000000000041a80c <operation_free>:
  41a80c:	sub	sp, sp, #0x50
  41a810:	stp	x29, x30, [sp, #64]
  41a814:	add	x29, sp, #0x40
  41a818:	adrp	x8, 41e000 <machine_hash_ops+0x33e8>
  41a81c:	add	x8, x8, #0x9cd
  41a820:	add	x8, x8, #0x3
  41a824:	adrp	x9, 41e000 <machine_hash_ops+0x33e8>
  41a828:	add	x9, x9, #0xa7c
  41a82c:	stur	x0, [x29, #-16]
  41a830:	ldur	x10, [x29, #-16]
  41a834:	str	x8, [sp, #8]
  41a838:	str	x9, [sp]
  41a83c:	cbnz	x10, 41a84c <operation_free+0x40>
  41a840:	mov	x8, xzr
  41a844:	stur	x8, [x29, #-8]
  41a848:	b	41ab18 <operation_free+0x30c>
  41a84c:	ldur	x8, [x29, #-16]
  41a850:	ldr	x0, [x8, #40]
  41a854:	bl	404c60 <sd_event_source_unref@plt>
  41a858:	ldur	x8, [x29, #-16]
  41a85c:	ldr	w9, [x8, #32]
  41a860:	mov	w0, w9
  41a864:	bl	4052c0 <safe_close@plt>
  41a868:	ldur	x8, [x29, #-16]
  41a86c:	ldr	w9, [x8, #36]
  41a870:	mov	w0, w9
  41a874:	bl	4052c0 <safe_close@plt>
  41a878:	ldur	x8, [x29, #-16]
  41a87c:	ldr	w9, [x8, #16]
  41a880:	cmp	w9, #0x1
  41a884:	b.le	41a894 <operation_free+0x88>
  41a888:	ldur	x8, [x29, #-16]
  41a88c:	ldr	w0, [x8, #16]
  41a890:	bl	405320 <sigkill_wait@plt>
  41a894:	ldur	x8, [x29, #-16]
  41a898:	ldr	x0, [x8, #24]
  41a89c:	bl	404e70 <sd_bus_message_unref@plt>
  41a8a0:	ldur	x8, [x29, #-16]
  41a8a4:	ldr	x8, [x8]
  41a8a8:	cbz	x8, 41a9e0 <operation_free+0x1d4>
  41a8ac:	ldur	x8, [x29, #-16]
  41a8b0:	ldr	x8, [x8]
  41a8b4:	add	x8, x8, #0x50
  41a8b8:	stur	x8, [x29, #-24]
  41a8bc:	ldur	x8, [x29, #-16]
  41a8c0:	str	x8, [sp, #32]
  41a8c4:	ldr	x8, [sp, #32]
  41a8c8:	cmp	x8, #0x0
  41a8cc:	cset	w9, ne  // ne = any
  41a8d0:	mov	w10, #0x1                   	// #1
  41a8d4:	eor	w9, w9, #0x1
  41a8d8:	eor	w9, w9, w10
  41a8dc:	eor	w9, w9, w10
  41a8e0:	and	w9, w9, #0x1
  41a8e4:	mov	w0, w9
  41a8e8:	sxtw	x8, w0
  41a8ec:	cbz	x8, 41a910 <operation_free+0x104>
  41a8f0:	mov	w8, wzr
  41a8f4:	mov	w0, w8
  41a8f8:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a8fc:	add	x1, x1, #0x2fa
  41a900:	ldr	x2, [sp, #8]
  41a904:	mov	w3, #0x82                  	// #130
  41a908:	ldr	x4, [sp]
  41a90c:	bl	404bd0 <log_assert_failed_realm@plt>
  41a910:	ldr	x8, [sp, #32]
  41a914:	ldr	x8, [x8, #56]
  41a918:	cbz	x8, 41a930 <operation_free+0x124>
  41a91c:	ldr	x8, [sp, #32]
  41a920:	ldr	x8, [x8, #64]
  41a924:	ldr	x9, [sp, #32]
  41a928:	ldr	x9, [x9, #56]
  41a92c:	str	x8, [x9, #64]
  41a930:	ldr	x8, [sp, #32]
  41a934:	ldr	x8, [x8, #64]
  41a938:	cbz	x8, 41a954 <operation_free+0x148>
  41a93c:	ldr	x8, [sp, #32]
  41a940:	ldr	x8, [x8, #56]
  41a944:	ldr	x9, [sp, #32]
  41a948:	ldr	x9, [x9, #64]
  41a94c:	str	x8, [x9, #56]
  41a950:	b	41a9b8 <operation_free+0x1ac>
  41a954:	ldur	x8, [x29, #-24]
  41a958:	ldr	x8, [x8]
  41a95c:	ldr	x9, [sp, #32]
  41a960:	cmp	x8, x9
  41a964:	cset	w10, eq  // eq = none
  41a968:	mov	w11, #0x1                   	// #1
  41a96c:	eor	w10, w10, #0x1
  41a970:	eor	w10, w10, w11
  41a974:	eor	w10, w10, w11
  41a978:	and	w10, w10, #0x1
  41a97c:	mov	w0, w10
  41a980:	sxtw	x8, w0
  41a984:	cbz	x8, 41a9a8 <operation_free+0x19c>
  41a988:	mov	w8, wzr
  41a98c:	mov	w0, w8
  41a990:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41a994:	add	x1, x1, #0x300
  41a998:	ldr	x2, [sp, #8]
  41a99c:	mov	w3, #0x82                  	// #130
  41a9a0:	ldr	x4, [sp]
  41a9a4:	bl	404bd0 <log_assert_failed_realm@plt>
  41a9a8:	ldr	x8, [sp, #32]
  41a9ac:	ldr	x8, [x8, #56]
  41a9b0:	ldur	x9, [x29, #-24]
  41a9b4:	str	x8, [x9]
  41a9b8:	ldr	x8, [sp, #32]
  41a9bc:	mov	x9, xzr
  41a9c0:	str	x9, [x8, #64]
  41a9c4:	ldr	x8, [sp, #32]
  41a9c8:	str	x9, [x8, #56]
  41a9cc:	ldur	x8, [x29, #-16]
  41a9d0:	ldr	x8, [x8]
  41a9d4:	ldr	w9, [x8, #88]
  41a9d8:	subs	w9, w9, #0x1
  41a9dc:	str	w9, [x8, #88]
  41a9e0:	ldur	x8, [x29, #-16]
  41a9e4:	ldr	x8, [x8, #8]
  41a9e8:	cbz	x8, 41ab0c <operation_free+0x300>
  41a9ec:	ldur	x8, [x29, #-16]
  41a9f0:	ldr	x8, [x8, #8]
  41a9f4:	add	x8, x8, #0x88
  41a9f8:	str	x8, [sp, #24]
  41a9fc:	ldur	x8, [x29, #-16]
  41aa00:	str	x8, [sp, #16]
  41aa04:	ldr	x8, [sp, #16]
  41aa08:	cmp	x8, #0x0
  41aa0c:	cset	w9, ne  // ne = any
  41aa10:	mov	w10, #0x1                   	// #1
  41aa14:	eor	w9, w9, #0x1
  41aa18:	eor	w9, w9, w10
  41aa1c:	eor	w9, w9, w10
  41aa20:	and	w9, w9, #0x1
  41aa24:	mov	w0, w9
  41aa28:	sxtw	x8, w0
  41aa2c:	cbz	x8, 41aa50 <operation_free+0x244>
  41aa30:	mov	w8, wzr
  41aa34:	mov	w0, w8
  41aa38:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41aa3c:	add	x1, x1, #0x2fa
  41aa40:	ldr	x2, [sp, #8]
  41aa44:	mov	w3, #0x87                  	// #135
  41aa48:	ldr	x4, [sp]
  41aa4c:	bl	404bd0 <log_assert_failed_realm@plt>
  41aa50:	ldr	x8, [sp, #16]
  41aa54:	ldr	x8, [x8, #72]
  41aa58:	cbz	x8, 41aa70 <operation_free+0x264>
  41aa5c:	ldr	x8, [sp, #16]
  41aa60:	ldr	x8, [x8, #80]
  41aa64:	ldr	x9, [sp, #16]
  41aa68:	ldr	x9, [x9, #72]
  41aa6c:	str	x8, [x9, #80]
  41aa70:	ldr	x8, [sp, #16]
  41aa74:	ldr	x8, [x8, #80]
  41aa78:	cbz	x8, 41aa94 <operation_free+0x288>
  41aa7c:	ldr	x8, [sp, #16]
  41aa80:	ldr	x8, [x8, #72]
  41aa84:	ldr	x9, [sp, #16]
  41aa88:	ldr	x9, [x9, #80]
  41aa8c:	str	x8, [x9, #72]
  41aa90:	b	41aaf8 <operation_free+0x2ec>
  41aa94:	ldr	x8, [sp, #24]
  41aa98:	ldr	x8, [x8]
  41aa9c:	ldr	x9, [sp, #16]
  41aaa0:	cmp	x8, x9
  41aaa4:	cset	w10, eq  // eq = none
  41aaa8:	mov	w11, #0x1                   	// #1
  41aaac:	eor	w10, w10, #0x1
  41aab0:	eor	w10, w10, w11
  41aab4:	eor	w10, w10, w11
  41aab8:	and	w10, w10, #0x1
  41aabc:	mov	w0, w10
  41aac0:	sxtw	x8, w0
  41aac4:	cbz	x8, 41aae8 <operation_free+0x2dc>
  41aac8:	mov	w8, wzr
  41aacc:	mov	w0, w8
  41aad0:	adrp	x1, 41b000 <machine_hash_ops+0x3e8>
  41aad4:	add	x1, x1, #0x300
  41aad8:	ldr	x2, [sp, #8]
  41aadc:	mov	w3, #0x87                  	// #135
  41aae0:	ldr	x4, [sp]
  41aae4:	bl	404bd0 <log_assert_failed_realm@plt>
  41aae8:	ldr	x8, [sp, #16]
  41aaec:	ldr	x8, [x8, #72]
  41aaf0:	ldr	x9, [sp, #24]
  41aaf4:	str	x8, [x9]
  41aaf8:	ldr	x8, [sp, #16]
  41aafc:	mov	x9, xzr
  41ab00:	str	x9, [x8, #80]
  41ab04:	ldr	x8, [sp, #16]
  41ab08:	str	x9, [x8, #72]
  41ab0c:	ldur	x0, [x29, #-16]
  41ab10:	bl	41ab28 <mfree>
  41ab14:	stur	x0, [x29, #-8]
  41ab18:	ldur	x0, [x29, #-8]
  41ab1c:	ldp	x29, x30, [sp, #64]
  41ab20:	add	sp, sp, #0x50
  41ab24:	ret

000000000041ab28 <mfree>:
  41ab28:	sub	sp, sp, #0x20
  41ab2c:	stp	x29, x30, [sp, #16]
  41ab30:	add	x29, sp, #0x10
  41ab34:	mov	x8, xzr
  41ab38:	str	x0, [sp, #8]
  41ab3c:	ldr	x0, [sp, #8]
  41ab40:	str	x8, [sp]
  41ab44:	bl	404cb0 <free@plt>
  41ab48:	ldr	x0, [sp]
  41ab4c:	ldp	x29, x30, [sp, #16]
  41ab50:	add	sp, sp, #0x20
  41ab54:	ret

000000000041ab58 <__libc_csu_init>:
  41ab58:	stp	x29, x30, [sp, #-64]!
  41ab5c:	mov	x29, sp
  41ab60:	stp	x19, x20, [sp, #16]
  41ab64:	adrp	x20, 43e000 <__FRAME_END__+0x1f3a8>
  41ab68:	add	x20, x20, #0x140
  41ab6c:	stp	x21, x22, [sp, #32]
  41ab70:	adrp	x21, 43e000 <__FRAME_END__+0x1f3a8>
  41ab74:	add	x21, x21, #0x138
  41ab78:	sub	x20, x20, x21
  41ab7c:	mov	w22, w0
  41ab80:	stp	x23, x24, [sp, #48]
  41ab84:	mov	x23, x1
  41ab88:	mov	x24, x2
  41ab8c:	bl	404aa8 <_init>
  41ab90:	cmp	xzr, x20, asr #3
  41ab94:	b.eq	41abc0 <__libc_csu_init+0x68>  // b.none
  41ab98:	asr	x20, x20, #3
  41ab9c:	mov	x19, #0x0                   	// #0
  41aba0:	ldr	x3, [x21, x19, lsl #3]
  41aba4:	mov	x2, x24
  41aba8:	add	x19, x19, #0x1
  41abac:	mov	x1, x23
  41abb0:	mov	w0, w22
  41abb4:	blr	x3
  41abb8:	cmp	x20, x19
  41abbc:	b.ne	41aba0 <__libc_csu_init+0x48>  // b.any
  41abc0:	ldp	x19, x20, [sp, #16]
  41abc4:	ldp	x21, x22, [sp, #32]
  41abc8:	ldp	x23, x24, [sp, #48]
  41abcc:	ldp	x29, x30, [sp], #64
  41abd0:	ret
  41abd4:	nop

000000000041abd8 <__libc_csu_fini>:
  41abd8:	ret
  41abdc:	udf	#0

000000000041abe0 <lstat64>:
  41abe0:	mov	x2, x1
  41abe4:	mov	x1, x0
  41abe8:	mov	w0, #0x0                   	// #0
  41abec:	b	405940 <__lxstat64@plt>

Disassembly of section .fini:

000000000041abf0 <_fini>:
  41abf0:	stp	x29, x30, [sp, #-16]!
  41abf4:	mov	x29, sp
  41abf8:	ldp	x29, x30, [sp], #16
  41abfc:	ret
