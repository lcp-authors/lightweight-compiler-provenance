
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ls_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402480 <.init>:
  402480:	stp	x29, x30, [sp, #-16]!
  402484:	mov	x29, sp
  402488:	bl	402c00 <__fxstatat@plt+0x60>
  40248c:	ldp	x29, x30, [sp], #16
  402490:	ret

Disassembly of section .plt:

00000000004024a0 <mbrtowc@plt-0x20>:
  4024a0:	stp	x16, x30, [sp, #-16]!
  4024a4:	adrp	x16, 429000 <_obstack_memory_used@@Base+0x16d48>
  4024a8:	ldr	x17, [x16, #4088]
  4024ac:	add	x16, x16, #0xff8
  4024b0:	br	x17
  4024b4:	nop
  4024b8:	nop
  4024bc:	nop

00000000004024c0 <mbrtowc@plt>:
  4024c0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16]
  4024c8:	add	x16, x16, #0x0
  4024cc:	br	x17

00000000004024d0 <memcpy@plt>:
  4024d0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #8]
  4024d8:	add	x16, x16, #0x8
  4024dc:	br	x17

00000000004024e0 <memmove@plt>:
  4024e0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #16]
  4024e8:	add	x16, x16, #0x10
  4024ec:	br	x17

00000000004024f0 <cap_to_text@plt>:
  4024f0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #24]
  4024f8:	add	x16, x16, #0x18
  4024fc:	br	x17

0000000000402500 <_exit@plt>:
  402500:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #32]
  402508:	add	x16, x16, #0x20
  40250c:	br	x17

0000000000402510 <getcwd@plt>:
  402510:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #40]
  402518:	add	x16, x16, #0x28
  40251c:	br	x17

0000000000402520 <fwrite_unlocked@plt>:
  402520:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #48]
  402528:	add	x16, x16, #0x30
  40252c:	br	x17

0000000000402530 <strtoul@plt>:
  402530:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #56]
  402538:	add	x16, x16, #0x38
  40253c:	br	x17

0000000000402540 <strlen@plt>:
  402540:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #64]
  402548:	add	x16, x16, #0x40
  40254c:	br	x17

0000000000402550 <fputs@plt>:
  402550:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #72]
  402558:	add	x16, x16, #0x48
  40255c:	br	x17

0000000000402560 <__sprintf_chk@plt>:
  402560:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #80]
  402568:	add	x16, x16, #0x50
  40256c:	br	x17

0000000000402570 <mbstowcs@plt>:
  402570:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #88]
  402578:	add	x16, x16, #0x58
  40257c:	br	x17

0000000000402580 <exit@plt>:
  402580:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #96]
  402588:	add	x16, x16, #0x60
  40258c:	br	x17

0000000000402590 <_setjmp@plt>:
  402590:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #104]
  402598:	add	x16, x16, #0x68
  40259c:	br	x17

00000000004025a0 <raise@plt>:
  4025a0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #112]
  4025a8:	add	x16, x16, #0x70
  4025ac:	br	x17

00000000004025b0 <error@plt>:
  4025b0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #120]
  4025b8:	add	x16, x16, #0x78
  4025bc:	br	x17

00000000004025c0 <sigprocmask@plt>:
  4025c0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #128]
  4025c8:	add	x16, x16, #0x80
  4025cc:	br	x17

00000000004025d0 <localtime_r@plt>:
  4025d0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #136]
  4025d8:	add	x16, x16, #0x88
  4025dc:	br	x17

00000000004025e0 <setenv@plt>:
  4025e0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #144]
  4025e8:	add	x16, x16, #0x90
  4025ec:	br	x17

00000000004025f0 <readlink@plt>:
  4025f0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #152]
  4025f8:	add	x16, x16, #0x98
  4025fc:	br	x17

0000000000402600 <getgrnam@plt>:
  402600:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #160]
  402608:	add	x16, x16, #0xa0
  40260c:	br	x17

0000000000402610 <ferror_unlocked@plt>:
  402610:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #168]
  402618:	add	x16, x16, #0xa8
  40261c:	br	x17

0000000000402620 <opendir@plt>:
  402620:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #176]
  402628:	add	x16, x16, #0xb0
  40262c:	br	x17

0000000000402630 <strftime@plt>:
  402630:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #184]
  402638:	add	x16, x16, #0xb8
  40263c:	br	x17

0000000000402640 <__cxa_atexit@plt>:
  402640:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #192]
  402648:	add	x16, x16, #0xc0
  40264c:	br	x17

0000000000402650 <iswcntrl@plt>:
  402650:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #200]
  402658:	add	x16, x16, #0xc8
  40265c:	br	x17

0000000000402660 <clock_gettime@plt>:
  402660:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #208]
  402668:	add	x16, x16, #0xd0
  40266c:	br	x17

0000000000402670 <lseek@plt>:
  402670:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #216]
  402678:	add	x16, x16, #0xd8
  40267c:	br	x17

0000000000402680 <__fpending@plt>:
  402680:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #224]
  402688:	add	x16, x16, #0xe0
  40268c:	br	x17

0000000000402690 <__ctype_tolower_loc@plt>:
  402690:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #232]
  402698:	add	x16, x16, #0xe8
  40269c:	br	x17

00000000004026a0 <localeconv@plt>:
  4026a0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #240]
  4026a8:	add	x16, x16, #0xf0
  4026ac:	br	x17

00000000004026b0 <stpcpy@plt>:
  4026b0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #248]
  4026b8:	add	x16, x16, #0xf8
  4026bc:	br	x17

00000000004026c0 <fileno@plt>:
  4026c0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #256]
  4026c8:	add	x16, x16, #0x100
  4026cc:	br	x17

00000000004026d0 <putc_unlocked@plt>:
  4026d0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #264]
  4026d8:	add	x16, x16, #0x108
  4026dc:	br	x17

00000000004026e0 <__memcpy_chk@plt>:
  4026e0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #272]
  4026e8:	add	x16, x16, #0x110
  4026ec:	br	x17

00000000004026f0 <signal@plt>:
  4026f0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #280]
  4026f8:	add	x16, x16, #0x118
  4026fc:	br	x17

0000000000402700 <__snprintf_chk@plt>:
  402700:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #288]
  402708:	add	x16, x16, #0x120
  40270c:	br	x17

0000000000402710 <fclose@plt>:
  402710:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #296]
  402718:	add	x16, x16, #0x128
  40271c:	br	x17

0000000000402720 <nl_langinfo@plt>:
  402720:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #304]
  402728:	add	x16, x16, #0x130
  40272c:	br	x17

0000000000402730 <malloc@plt>:
  402730:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #312]
  402738:	add	x16, x16, #0x138
  40273c:	br	x17

0000000000402740 <wcwidth@plt>:
  402740:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #320]
  402748:	add	x16, x16, #0x140
  40274c:	br	x17

0000000000402750 <tzset@plt>:
  402750:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #328]
  402758:	add	x16, x16, #0x148
  40275c:	br	x17

0000000000402760 <wcswidth@plt>:
  402760:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #336]
  402768:	add	x16, x16, #0x150
  40276c:	br	x17

0000000000402770 <sigemptyset@plt>:
  402770:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #344]
  402778:	add	x16, x16, #0x158
  40277c:	br	x17

0000000000402780 <strncmp@plt>:
  402780:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #352]
  402788:	add	x16, x16, #0x160
  40278c:	br	x17

0000000000402790 <bindtextdomain@plt>:
  402790:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #360]
  402798:	add	x16, x16, #0x168
  40279c:	br	x17

00000000004027a0 <__libc_start_main@plt>:
  4027a0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #368]
  4027a8:	add	x16, x16, #0x170
  4027ac:	br	x17

00000000004027b0 <__printf_chk@plt>:
  4027b0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #376]
  4027b8:	add	x16, x16, #0x178
  4027bc:	br	x17

00000000004027c0 <memset@plt>:
  4027c0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #384]
  4027c8:	add	x16, x16, #0x180
  4027cc:	br	x17

00000000004027d0 <getpwnam@plt>:
  4027d0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #392]
  4027d8:	add	x16, x16, #0x188
  4027dc:	br	x17

00000000004027e0 <gmtime_r@plt>:
  4027e0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #400]
  4027e8:	add	x16, x16, #0x190
  4027ec:	br	x17

00000000004027f0 <putchar_unlocked@plt>:
  4027f0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #408]
  4027f8:	add	x16, x16, #0x198
  4027fc:	br	x17

0000000000402800 <calloc@plt>:
  402800:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #416]
  402808:	add	x16, x16, #0x1a0
  40280c:	br	x17

0000000000402810 <bcmp@plt>:
  402810:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #424]
  402818:	add	x16, x16, #0x1a8
  40281c:	br	x17

0000000000402820 <readdir@plt>:
  402820:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #432]
  402828:	add	x16, x16, #0x1b0
  40282c:	br	x17

0000000000402830 <realloc@plt>:
  402830:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #440]
  402838:	add	x16, x16, #0x1b8
  40283c:	br	x17

0000000000402840 <__ctype_toupper_loc@plt>:
  402840:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #448]
  402848:	add	x16, x16, #0x1c0
  40284c:	br	x17

0000000000402850 <closedir@plt>:
  402850:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #456]
  402858:	add	x16, x16, #0x1c8
  40285c:	br	x17

0000000000402860 <sigaction@plt>:
  402860:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #464]
  402868:	add	x16, x16, #0x1d0
  40286c:	br	x17

0000000000402870 <strrchr@plt>:
  402870:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #472]
  402878:	add	x16, x16, #0x1d8
  40287c:	br	x17

0000000000402880 <tcgetpgrp@plt>:
  402880:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #480]
  402888:	add	x16, x16, #0x1e0
  40288c:	br	x17

0000000000402890 <__gmon_start__@plt>:
  402890:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #488]
  402898:	add	x16, x16, #0x1e8
  40289c:	br	x17

00000000004028a0 <mktime@plt>:
  4028a0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #496]
  4028a8:	add	x16, x16, #0x1f0
  4028ac:	br	x17

00000000004028b0 <strtoumax@plt>:
  4028b0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #504]
  4028b8:	add	x16, x16, #0x1f8
  4028bc:	br	x17

00000000004028c0 <abort@plt>:
  4028c0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #512]
  4028c8:	add	x16, x16, #0x200
  4028cc:	br	x17

00000000004028d0 <mbsinit@plt>:
  4028d0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #520]
  4028d8:	add	x16, x16, #0x208
  4028dc:	br	x17

00000000004028e0 <gnu_dev_major@plt>:
  4028e0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #528]
  4028e8:	add	x16, x16, #0x210
  4028ec:	br	x17

00000000004028f0 <getxattr@plt>:
  4028f0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #536]
  4028f8:	add	x16, x16, #0x218
  4028fc:	br	x17

0000000000402900 <textdomain@plt>:
  402900:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #544]
  402908:	add	x16, x16, #0x220
  40290c:	br	x17

0000000000402910 <stpncpy@plt>:
  402910:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #552]
  402918:	add	x16, x16, #0x228
  40291c:	br	x17

0000000000402920 <getopt_long@plt>:
  402920:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #560]
  402928:	add	x16, x16, #0x230
  40292c:	br	x17

0000000000402930 <__fprintf_chk@plt>:
  402930:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #568]
  402938:	add	x16, x16, #0x238
  40293c:	br	x17

0000000000402940 <sigismember@plt>:
  402940:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #576]
  402948:	add	x16, x16, #0x240
  40294c:	br	x17

0000000000402950 <strcmp@plt>:
  402950:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #584]
  402958:	add	x16, x16, #0x248
  40295c:	br	x17

0000000000402960 <getpwuid@plt>:
  402960:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #592]
  402968:	add	x16, x16, #0x250
  40296c:	br	x17

0000000000402970 <__ctype_b_loc@plt>:
  402970:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #600]
  402978:	add	x16, x16, #0x258
  40297c:	br	x17

0000000000402980 <fseeko@plt>:
  402980:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #608]
  402988:	add	x16, x16, #0x260
  40298c:	br	x17

0000000000402990 <free@plt>:
  402990:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #616]
  402998:	add	x16, x16, #0x268
  40299c:	br	x17

00000000004029a0 <__ctype_get_mb_cur_max@plt>:
  4029a0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #624]
  4029a8:	add	x16, x16, #0x270
  4029ac:	br	x17

00000000004029b0 <strspn@plt>:
  4029b0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #632]
  4029b8:	add	x16, x16, #0x278
  4029bc:	br	x17

00000000004029c0 <strchr@plt>:
  4029c0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #640]
  4029c8:	add	x16, x16, #0x280
  4029cc:	br	x17

00000000004029d0 <fnmatch@plt>:
  4029d0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #648]
  4029d8:	add	x16, x16, #0x288
  4029dc:	br	x17

00000000004029e0 <fflush_unlocked@plt>:
  4029e0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #656]
  4029e8:	add	x16, x16, #0x290
  4029ec:	br	x17

00000000004029f0 <fflush@plt>:
  4029f0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #664]
  4029f8:	add	x16, x16, #0x298
  4029fc:	br	x17

0000000000402a00 <gnu_dev_minor@plt>:
  402a00:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #672]
  402a08:	add	x16, x16, #0x2a0
  402a0c:	br	x17

0000000000402a10 <strcpy@plt>:
  402a10:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #680]
  402a18:	add	x16, x16, #0x2a8
  402a1c:	br	x17

0000000000402a20 <dirfd@plt>:
  402a20:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #688]
  402a28:	add	x16, x16, #0x2b0
  402a2c:	br	x17

0000000000402a30 <unsetenv@plt>:
  402a30:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #696]
  402a38:	add	x16, x16, #0x2b8
  402a3c:	br	x17

0000000000402a40 <__lxstat@plt>:
  402a40:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #704]
  402a48:	add	x16, x16, #0x2c0
  402a4c:	br	x17

0000000000402a50 <cap_get_file@plt>:
  402a50:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #712]
  402a58:	add	x16, x16, #0x2c8
  402a5c:	br	x17

0000000000402a60 <isatty@plt>:
  402a60:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #720]
  402a68:	add	x16, x16, #0x2d0
  402a6c:	br	x17

0000000000402a70 <wcstombs@plt>:
  402a70:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #728]
  402a78:	add	x16, x16, #0x2d8
  402a7c:	br	x17

0000000000402a80 <gethostname@plt>:
  402a80:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #736]
  402a88:	add	x16, x16, #0x2e0
  402a8c:	br	x17

0000000000402a90 <__mempcpy_chk@plt>:
  402a90:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #744]
  402a98:	add	x16, x16, #0x2e8
  402a9c:	br	x17

0000000000402aa0 <cap_free@plt>:
  402aa0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #752]
  402aa8:	add	x16, x16, #0x2f0
  402aac:	br	x17

0000000000402ab0 <__fxstat@plt>:
  402ab0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #760]
  402ab8:	add	x16, x16, #0x2f8
  402abc:	br	x17

0000000000402ac0 <dcgettext@plt>:
  402ac0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #768]
  402ac8:	add	x16, x16, #0x300
  402acc:	br	x17

0000000000402ad0 <fputs_unlocked@plt>:
  402ad0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #776]
  402ad8:	add	x16, x16, #0x308
  402adc:	br	x17

0000000000402ae0 <strcoll@plt>:
  402ae0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #784]
  402ae8:	add	x16, x16, #0x310
  402aec:	br	x17

0000000000402af0 <__freading@plt>:
  402af0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #792]
  402af8:	add	x16, x16, #0x318
  402afc:	br	x17

0000000000402b00 <sigaddset@plt>:
  402b00:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #800]
  402b08:	add	x16, x16, #0x320
  402b0c:	br	x17

0000000000402b10 <iswprint@plt>:
  402b10:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #808]
  402b18:	add	x16, x16, #0x328
  402b1c:	br	x17

0000000000402b20 <__assert_fail@plt>:
  402b20:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #816]
  402b28:	add	x16, x16, #0x330
  402b2c:	br	x17

0000000000402b30 <__errno_location@plt>:
  402b30:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #824]
  402b38:	add	x16, x16, #0x338
  402b3c:	br	x17

0000000000402b40 <getenv@plt>:
  402b40:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #832]
  402b48:	add	x16, x16, #0x340
  402b4c:	br	x17

0000000000402b50 <__xstat@plt>:
  402b50:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #840]
  402b58:	add	x16, x16, #0x348
  402b5c:	br	x17

0000000000402b60 <getgrgid@plt>:
  402b60:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #848]
  402b68:	add	x16, x16, #0x350
  402b6c:	br	x17

0000000000402b70 <timegm@plt>:
  402b70:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #856]
  402b78:	add	x16, x16, #0x358
  402b7c:	br	x17

0000000000402b80 <ioctl@plt>:
  402b80:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #864]
  402b88:	add	x16, x16, #0x360
  402b8c:	br	x17

0000000000402b90 <setlocale@plt>:
  402b90:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #872]
  402b98:	add	x16, x16, #0x368
  402b9c:	br	x17

0000000000402ba0 <__fxstatat@plt>:
  402ba0:	adrp	x16, 42a000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #880]
  402ba8:	add	x16, x16, #0x370
  402bac:	br	x17

Disassembly of section .text:

0000000000402bb0 <_obstack_begin@@Base-0xf3f0>:
  402bb0:	mov	x29, #0x0                   	// #0
  402bb4:	mov	x30, #0x0                   	// #0
  402bb8:	mov	x5, x0
  402bbc:	ldr	x1, [sp]
  402bc0:	add	x2, sp, #0x8
  402bc4:	mov	x6, sp
  402bc8:	movz	x0, #0x0, lsl #48
  402bcc:	movk	x0, #0x0, lsl #32
  402bd0:	movk	x0, #0x40, lsl #16
  402bd4:	movk	x0, #0x2cbc
  402bd8:	movz	x3, #0x0, lsl #48
  402bdc:	movk	x3, #0x0, lsl #32
  402be0:	movk	x3, #0x41, lsl #16
  402be4:	movk	x3, #0x40f8
  402be8:	movz	x4, #0x0, lsl #48
  402bec:	movk	x4, #0x0, lsl #32
  402bf0:	movk	x4, #0x41, lsl #16
  402bf4:	movk	x4, #0x4178
  402bf8:	bl	4027a0 <__libc_start_main@plt>
  402bfc:	bl	4028c0 <abort@plt>
  402c00:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x16d48>
  402c04:	ldr	x0, [x0, #4064]
  402c08:	cbz	x0, 402c10 <__fxstatat@plt+0x70>
  402c0c:	b	402890 <__gmon_start__@plt>
  402c10:	ret
  402c14:	nop
  402c18:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402c1c:	add	x0, x0, #0x5a8
  402c20:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402c24:	add	x1, x1, #0x5a8
  402c28:	cmp	x1, x0
  402c2c:	b.eq	402c44 <__fxstatat@plt+0xa4>  // b.none
  402c30:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x1d48>
  402c34:	ldr	x1, [x1, #504]
  402c38:	cbz	x1, 402c44 <__fxstatat@plt+0xa4>
  402c3c:	mov	x16, x1
  402c40:	br	x16
  402c44:	ret
  402c48:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402c4c:	add	x0, x0, #0x5a8
  402c50:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402c54:	add	x1, x1, #0x5a8
  402c58:	sub	x1, x1, x0
  402c5c:	lsr	x2, x1, #63
  402c60:	add	x1, x2, x1, asr #3
  402c64:	cmp	xzr, x1, asr #1
  402c68:	asr	x1, x1, #1
  402c6c:	b.eq	402c84 <__fxstatat@plt+0xe4>  // b.none
  402c70:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  402c74:	ldr	x2, [x2, #512]
  402c78:	cbz	x2, 402c84 <__fxstatat@plt+0xe4>
  402c7c:	mov	x16, x2
  402c80:	br	x16
  402c84:	ret
  402c88:	stp	x29, x30, [sp, #-32]!
  402c8c:	mov	x29, sp
  402c90:	str	x19, [sp, #16]
  402c94:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402c98:	ldrb	w0, [x19, #1504]
  402c9c:	cbnz	w0, 402cac <__fxstatat@plt+0x10c>
  402ca0:	bl	402c18 <__fxstatat@plt+0x78>
  402ca4:	mov	w0, #0x1                   	// #1
  402ca8:	strb	w0, [x19, #1504]
  402cac:	ldr	x19, [sp, #16]
  402cb0:	ldp	x29, x30, [sp], #32
  402cb4:	ret
  402cb8:	b	402c48 <__fxstatat@plt+0xa8>
  402cbc:	stp	x29, x30, [sp, #-96]!
  402cc0:	stp	x28, x27, [sp, #16]
  402cc4:	stp	x26, x25, [sp, #32]
  402cc8:	stp	x24, x23, [sp, #48]
  402ccc:	stp	x22, x21, [sp, #64]
  402cd0:	stp	x20, x19, [sp, #80]
  402cd4:	mov	x29, sp
  402cd8:	sub	sp, sp, #0x640
  402cdc:	ldr	x8, [x1]
  402ce0:	mov	w21, w0
  402ce4:	mov	x28, x1
  402ce8:	mov	x0, x8
  402cec:	bl	40f54c <__fxstatat@plt+0xc9ac>
  402cf0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  402cf4:	add	x1, x1, #0x2c9
  402cf8:	mov	w0, #0x6                   	// #6
  402cfc:	bl	402b90 <setlocale@plt>
  402d00:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x4d48>
  402d04:	add	x19, x19, #0xdea
  402d08:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  402d0c:	add	x1, x1, #0xf28
  402d10:	mov	x0, x19
  402d14:	bl	402790 <bindtextdomain@plt>
  402d18:	mov	x0, x19
  402d1c:	bl	402900 <textdomain@plt>
  402d20:	adrp	x0, 40b000 <__fxstatat@plt+0x8460>
  402d24:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d28:	mov	w9, #0x2                   	// #2
  402d2c:	add	x0, x0, #0x14c
  402d30:	str	w9, [x8, #1344]
  402d34:	bl	414180 <_obstack_memory_used@@Base+0x1ec8>
  402d38:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d3c:	mov	w8, #0x1                   	// #1
  402d40:	strb	w8, [x12, #1524]
  402d44:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d48:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x1d48>
  402d4c:	ldr	w8, [x8, #1320]
  402d50:	ldr	q0, [x9, #528]
  402d54:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d58:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d5c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d60:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d64:	cmp	w8, #0x1
  402d68:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402d6c:	str	wzr, [x11, #1520]
  402d70:	str	xzr, [x13, #1528]
  402d74:	strb	wzr, [x22, #2328]
  402d78:	str	q0, [x10, #1536]
  402d7c:	b.eq	402dac <__fxstatat@plt+0x20c>  // b.none
  402d80:	cmp	w8, #0x3
  402d84:	b.eq	402d98 <__fxstatat@plt+0x1f8>  // b.none
  402d88:	cmp	w8, #0x2
  402d8c:	b.ne	404b60 <__fxstatat@plt+0x1fc0>  // b.any
  402d90:	str	w8, [x20, #1556]
  402d94:	b	402d9c <__fxstatat@plt+0x1fc>
  402d98:	str	wzr, [x20, #1556]
  402d9c:	mov	w1, #0x7                   	// #7
  402da0:	mov	x0, xzr
  402da4:	bl	40f654 <__fxstatat@plt+0xcab4>
  402da8:	b	402de0 <__fxstatat@plt+0x240>
  402dac:	mov	w0, #0x1                   	// #1
  402db0:	mov	w19, #0x1                   	// #1
  402db4:	bl	402a60 <isatty@plt>
  402db8:	cbz	w0, 402dd8 <__fxstatat@plt+0x238>
  402dbc:	mov	w8, #0x2                   	// #2
  402dc0:	mov	w1, #0x3                   	// #3
  402dc4:	mov	x0, xzr
  402dc8:	str	w8, [x20, #1556]
  402dcc:	bl	40f654 <__fxstatat@plt+0xcab4>
  402dd0:	strb	w19, [x22, #2328]
  402dd4:	b	402de0 <__fxstatat@plt+0x240>
  402dd8:	str	w19, [x20, #1556]
  402ddc:	strb	wzr, [x22, #2328]
  402de0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402de4:	adrp	x17, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402de8:	mov	w8, #0x1                   	// #1
  402dec:	strb	wzr, [x0, #2336]
  402df0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  402df4:	adrp	x18, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402df8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402dfc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e00:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e04:	adrp	x16, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e08:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e0c:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e10:	adrp	x15, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e14:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e18:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e1c:	adrp	x14, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e20:	str	w8, [x17, #1560]
  402e24:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402e28:	add	x0, x0, #0xeec
  402e2c:	str	wzr, [x18, #2332]
  402e30:	str	wzr, [x9, #1680]
  402e34:	strb	wzr, [x1, #2337]
  402e38:	strb	wzr, [x10, #1685]
  402e3c:	str	wzr, [x16, #1568]
  402e40:	strb	wzr, [x2, #2338]
  402e44:	strb	wzr, [x11, #1572]
  402e48:	strb	wzr, [x15, #1564]
  402e4c:	str	wzr, [x12, #2340]
  402e50:	str	xzr, [x13, #2344]
  402e54:	str	xzr, [x14, #2352]
  402e58:	strb	wzr, [x8, #1684]
  402e5c:	bl	402b40 <getenv@plt>
  402e60:	cbz	x0, 402ed0 <__fxstatat@plt+0x330>
  402e64:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x5d48>
  402e68:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  402e6c:	add	x22, x22, #0x9e8
  402e70:	add	x1, x1, #0x990
  402e74:	mov	w3, #0x4                   	// #4
  402e78:	mov	x2, x22
  402e7c:	mov	x19, x0
  402e80:	bl	40a68c <__fxstatat@plt+0x7aec>
  402e84:	tbnz	w0, #31, 402e9c <__fxstatat@plt+0x2fc>
  402e88:	sbfiz	x8, x0, #2, #32
  402e8c:	ldr	w1, [x22, x8]
  402e90:	mov	x0, xzr
  402e94:	bl	40f654 <__fxstatat@plt+0xcab4>
  402e98:	b	402ed0 <__fxstatat@plt+0x330>
  402e9c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  402ea0:	add	x1, x1, #0xefa
  402ea4:	mov	w2, #0x5                   	// #5
  402ea8:	mov	x0, xzr
  402eac:	bl	402ac0 <dcgettext@plt>
  402eb0:	mov	x22, x0
  402eb4:	mov	x0, x19
  402eb8:	bl	410abc <__fxstatat@plt+0xdf1c>
  402ebc:	mov	x3, x0
  402ec0:	mov	w0, wzr
  402ec4:	mov	w1, wzr
  402ec8:	mov	x2, x22
  402ecc:	bl	4025b0 <error@plt>
  402ed0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  402ed4:	adrp	x27, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402ed8:	mov	w8, #0x50                  	// #80
  402edc:	add	x0, x0, #0xcac
  402ee0:	str	x8, [x27, #2360]
  402ee4:	bl	402b40 <getenv@plt>
  402ee8:	cbz	x0, 402f38 <__fxstatat@plt+0x398>
  402eec:	ldrb	w8, [x0]
  402ef0:	mov	x19, x0
  402ef4:	cbz	w8, 402f38 <__fxstatat@plt+0x398>
  402ef8:	mov	x0, x19
  402efc:	bl	406fcc <__fxstatat@plt+0x442c>
  402f00:	tbnz	w0, #0, 402f38 <__fxstatat@plt+0x398>
  402f04:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  402f08:	add	x1, x1, #0xcb4
  402f0c:	mov	w2, #0x5                   	// #5
  402f10:	mov	x0, xzr
  402f14:	bl	402ac0 <dcgettext@plt>
  402f18:	mov	x22, x0
  402f1c:	mov	x0, x19
  402f20:	bl	410abc <__fxstatat@plt+0xdf1c>
  402f24:	mov	x3, x0
  402f28:	mov	w0, wzr
  402f2c:	mov	w1, wzr
  402f30:	mov	x2, x22
  402f34:	bl	4025b0 <error@plt>
  402f38:	add	x2, sp, #0x20
  402f3c:	mov	w0, #0x1                   	// #1
  402f40:	mov	w1, #0x5413                	// #21523
  402f44:	bl	402b80 <ioctl@plt>
  402f48:	cmn	w0, #0x1
  402f4c:	b.eq	402f5c <__fxstatat@plt+0x3bc>  // b.none
  402f50:	ldrh	w8, [sp, #34]
  402f54:	cbz	x8, 402f5c <__fxstatat@plt+0x3bc>
  402f58:	str	x8, [x27, #2360]
  402f5c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  402f60:	add	x0, x0, #0xcef
  402f64:	bl	402b40 <getenv@plt>
  402f68:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  402f6c:	mov	w8, #0x8                   	// #8
  402f70:	str	x8, [x24, #2368]
  402f74:	cbz	x0, 402fd4 <__fxstatat@plt+0x434>
  402f78:	add	x3, sp, #0x20
  402f7c:	mov	x1, xzr
  402f80:	mov	w2, wzr
  402f84:	mov	x4, xzr
  402f88:	mov	x19, x0
  402f8c:	bl	411688 <__fxstatat@plt+0xeae8>
  402f90:	cbz	w0, 402fcc <__fxstatat@plt+0x42c>
  402f94:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  402f98:	add	x1, x1, #0xcf7
  402f9c:	mov	w2, #0x5                   	// #5
  402fa0:	mov	x0, xzr
  402fa4:	bl	402ac0 <dcgettext@plt>
  402fa8:	mov	x22, x0
  402fac:	mov	x0, x19
  402fb0:	bl	410abc <__fxstatat@plt+0xdf1c>
  402fb4:	mov	x3, x0
  402fb8:	mov	w0, wzr
  402fbc:	mov	w1, wzr
  402fc0:	mov	x2, x22
  402fc4:	bl	4025b0 <error@plt>
  402fc8:	b	402fd4 <__fxstatat@plt+0x434>
  402fcc:	ldr	x8, [sp, #32]
  402fd0:	str	x8, [x24, #2368]
  402fd4:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x4d48>
  402fd8:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x1d48>
  402fdc:	mov	w20, wzr
  402fe0:	mov	w22, wzr
  402fe4:	mov	x23, xzr
  402fe8:	mov	w19, #0xffffffff            	// #-1
  402fec:	add	x25, x25, #0xd35
  402ff0:	add	x26, x26, #0x3a8
  402ff4:	add	x4, sp, #0x20
  402ff8:	mov	w0, w21
  402ffc:	mov	x1, x28
  403000:	mov	x2, x25
  403004:	mov	x3, x26
  403008:	str	w19, [sp, #32]
  40300c:	bl	402920 <getopt_long@plt>
  403010:	cmp	w0, #0x30
  403014:	b.le	4036bc <__fxstatat@plt+0xb1c>
  403018:	sub	w8, w0, #0x31
  40301c:	cmp	w8, #0x47
  403020:	b.hi	403054 <__fxstatat@plt+0x4b4>  // b.pmore
  403024:	adrp	x11, 414000 <_obstack_memory_used@@Base+0x1d48>
  403028:	add	x11, x11, #0x220
  40302c:	adr	x9, 403040 <__fxstatat@plt+0x4a0>
  403030:	ldrh	w10, [x11, x8, lsl #1]
  403034:	add	x9, x9, x10, lsl #2
  403038:	mov	w8, #0x1                   	// #1
  40303c:	br	x9
  403040:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403044:	ldr	w8, [x9, #1556]
  403048:	cbz	w8, 4036a4 <__fxstatat@plt+0xb04>
  40304c:	mov	w8, #0x1                   	// #1
  403050:	b	403634 <__fxstatat@plt+0xa94>
  403054:	sub	w8, w0, #0x100
  403058:	cmp	w8, #0x10
  40305c:	b.hi	404c64 <__fxstatat@plt+0x20c4>  // b.pmore
  403060:	adrp	x11, 414000 <_obstack_memory_used@@Base+0x1d48>
  403064:	add	x11, x11, #0x2b0
  403068:	adr	x9, 403078 <__fxstatat@plt+0x4d8>
  40306c:	ldrh	w10, [x11, x8, lsl #1]
  403070:	add	x9, x9, x10, lsl #2
  403074:	br	x9
  403078:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40307c:	mov	w9, #0x1                   	// #1
  403080:	strb	w9, [x8, #2401]
  403084:	b	4036a4 <__fxstatat@plt+0xb04>
  403088:	mov	w8, #0x4                   	// #4
  40308c:	b	4035a8 <__fxstatat@plt+0xa08>
  403090:	mov	w8, #0x3                   	// #3
  403094:	b	4035a8 <__fxstatat@plt+0xa08>
  403098:	mov	w8, #0x2                   	// #2
  40309c:	b	4033c8 <__fxstatat@plt+0x828>
  4030a0:	mov	w8, #0x1                   	// #1
  4030a4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4030a8:	strb	w8, [x9, #1685]
  4030ac:	b	4036a4 <__fxstatat@plt+0xb04>
  4030b0:	mov	w8, #0x1                   	// #1
  4030b4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4030b8:	strb	w8, [x9, #2336]
  4030bc:	b	4036a4 <__fxstatat@plt+0xb04>
  4030c0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4030c4:	ldr	x23, [x8, #1472]
  4030c8:	b	4036a4 <__fxstatat@plt+0xb04>
  4030cc:	mov	w1, #0x5                   	// #5
  4030d0:	b	40330c <__fxstatat@plt+0x76c>
  4030d4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4030d8:	ldr	x1, [x8, #1472]
  4030dc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4030e0:	ldr	x5, [x8, #1336]
  4030e4:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x1d48>
  4030e8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  4030ec:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  4030f0:	add	x22, x22, #0x928
  4030f4:	mov	w4, #0x4                   	// #4
  4030f8:	add	x0, x0, #0xd90
  4030fc:	add	x2, x2, #0x940
  403100:	mov	x3, x22
  403104:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  403108:	ldr	w8, [x22, x0, lsl #2]
  40310c:	b	4035a8 <__fxstatat@plt+0xa08>
  403110:	mov	w0, #0x10                  	// #16
  403114:	bl	4111f4 <__fxstatat@plt+0xe654>
  403118:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40311c:	ldr	x8, [x10, #2344]
  403120:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x4d48>
  403124:	add	x9, x9, #0xd7c
  403128:	str	x0, [x10, #2344]
  40312c:	stp	x9, x8, [x0]
  403130:	mov	w0, #0x10                  	// #16
  403134:	bl	4111f4 <__fxstatat@plt+0xe654>
  403138:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40313c:	ldr	x8, [x10, #2344]
  403140:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x4d48>
  403144:	add	x9, x9, #0xd7b
  403148:	str	x0, [x10, #2344]
  40314c:	stp	x9, x8, [x0]
  403150:	b	4036a4 <__fxstatat@plt+0xb04>
  403154:	mov	w8, #0x3                   	// #3
  403158:	b	4031ec <__fxstatat@plt+0x64c>
  40315c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403160:	ldr	x8, [x8, #1472]
  403164:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  403168:	add	x1, x1, #0xd7f
  40316c:	mov	w2, #0x5                   	// #5
  403170:	mov	x0, xzr
  403174:	str	x8, [sp, #24]
  403178:	bl	402ac0 <dcgettext@plt>
  40317c:	mov	x5, x0
  403180:	ldr	x0, [sp, #24]
  403184:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x5d48>
  403188:	add	x4, x4, #0x2c9
  40318c:	mov	x3, #0xffffffffffffffff    	// #-1
  403190:	mov	w6, #0x2                   	// #2
  403194:	mov	w1, wzr
  403198:	mov	x2, xzr
  40319c:	bl	411474 <__fxstatat@plt+0xe8d4>
  4031a0:	str	x0, [x24, #2368]
  4031a4:	b	4036a4 <__fxstatat@plt+0xb04>
  4031a8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4031ac:	str	wzr, [x8, #1556]
  4031b0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4031b4:	mov	w9, #0x1                   	// #1
  4031b8:	strb	w9, [x8, #2376]
  4031bc:	b	4036a4 <__fxstatat@plt+0xb04>
  4031c0:	mov	w8, #0xb0                  	// #176
  4031c4:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4031c8:	str	w8, [x10, #2380]
  4031cc:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4031d0:	mov	w9, #0x1                   	// #1
  4031d4:	str	w8, [x10, #2384]
  4031d8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4031dc:	b	4034bc <__fxstatat@plt+0x91c>
  4031e0:	mov	w8, #0x2                   	// #2
  4031e4:	b	403630 <__fxstatat@plt+0xa90>
  4031e8:	mov	w8, #0x5                   	// #5
  4031ec:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4031f0:	str	w8, [x9, #1560]
  4031f4:	b	4036a4 <__fxstatat@plt+0xb04>
  4031f8:	mov	w8, #0x1                   	// #1
  4031fc:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403200:	strb	w8, [x9, #1572]
  403204:	b	4036a4 <__fxstatat@plt+0xb04>
  403208:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40320c:	ldr	x1, [x8, #1472]
  403210:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403214:	ldr	x5, [x8, #1336]
  403218:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  40321c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  403220:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  403224:	mov	w4, #0x4                   	// #4
  403228:	add	x0, x0, #0xdd6
  40322c:	add	x2, x2, #0x990
  403230:	add	x3, x3, #0x9e8
  403234:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  403238:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40323c:	add	x8, x8, #0x9e8
  403240:	ldr	w1, [x8, x0, lsl #2]
  403244:	b	40330c <__fxstatat@plt+0x76c>
  403248:	mov	w8, #0x1                   	// #1
  40324c:	b	4035bc <__fxstatat@plt+0xa1c>
  403250:	mov	w22, #0x1                   	// #1
  403254:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403258:	str	w22, [x8, #1680]
  40325c:	b	4036a4 <__fxstatat@plt+0xb04>
  403260:	mov	w8, #0x1                   	// #1
  403264:	b	403580 <__fxstatat@plt+0x9e0>
  403268:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40326c:	mov	w9, #0x2                   	// #2
  403270:	str	w9, [x8, #1568]
  403274:	b	4036a4 <__fxstatat@plt+0xb04>
  403278:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40327c:	ldr	x1, [x8, #1472]
  403280:	cbz	x1, 403690 <__fxstatat@plt+0xaf0>
  403284:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403288:	ldr	x5, [x8, #1336]
  40328c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  403290:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  403294:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x1d48>
  403298:	mov	w4, #0x4                   	// #4
  40329c:	add	x0, x0, #0xdb8
  4032a0:	add	x2, x2, #0xa40
  4032a4:	add	x3, x3, #0xa18
  4032a8:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  4032ac:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x1d48>
  4032b0:	add	x8, x8, #0xa18
  4032b4:	ldr	w8, [x8, x0, lsl #2]
  4032b8:	cmp	w8, #0x1
  4032bc:	b.eq	40369c <__fxstatat@plt+0xafc>  // b.none
  4032c0:	cmp	w8, #0x2
  4032c4:	b.ne	403698 <__fxstatat@plt+0xaf8>  // b.any
  4032c8:	mov	w0, #0x1                   	// #1
  4032cc:	bl	402a60 <isatty@plt>
  4032d0:	cmp	w0, #0x0
  4032d4:	cset	w8, ne  // ne = any
  4032d8:	b	40369c <__fxstatat@plt+0xafc>
  4032dc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4032e0:	strb	wzr, [x8, #2328]
  4032e4:	b	4036a4 <__fxstatat@plt+0xb04>
  4032e8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4032ec:	mov	w9, #0x1                   	// #1
  4032f0:	strb	w9, [x8, #1693]
  4032f4:	b	4036a4 <__fxstatat@plt+0xb04>
  4032f8:	mov	w8, #0x1                   	// #1
  4032fc:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403300:	strb	w8, [x9, #1684]
  403304:	b	4036a4 <__fxstatat@plt+0xb04>
  403308:	mov	w1, #0x7                   	// #7
  40330c:	mov	x0, xzr
  403310:	b	403500 <__fxstatat@plt+0x960>
  403314:	mov	w8, #0x1                   	// #1
  403318:	b	4033c8 <__fxstatat@plt+0x828>
  40331c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403320:	ldr	x1, [x8, #1472]
  403324:	cbz	x1, 40367c <__fxstatat@plt+0xadc>
  403328:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40332c:	ldr	x5, [x8, #1336]
  403330:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  403334:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  403338:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x1d48>
  40333c:	mov	w4, #0x4                   	// #4
  403340:	add	x0, x0, #0xdb0
  403344:	add	x2, x2, #0xa40
  403348:	add	x3, x3, #0xa18
  40334c:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  403350:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x1d48>
  403354:	add	x8, x8, #0xa18
  403358:	ldr	w8, [x8, x0, lsl #2]
  40335c:	cmp	w8, #0x1
  403360:	b.eq	40367c <__fxstatat@plt+0xadc>  // b.none
  403364:	cmp	w8, #0x2
  403368:	b.ne	4036b0 <__fxstatat@plt+0xb10>  // b.any
  40336c:	mov	w0, #0x1                   	// #1
  403370:	bl	402a60 <isatty@plt>
  403374:	cmp	w0, #0x0
  403378:	cset	w8, ne  // ne = any
  40337c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403380:	strb	w8, [x9, #1552]
  403384:	cbnz	w0, 403688 <__fxstatat@plt+0xae8>
  403388:	b	4036a4 <__fxstatat@plt+0xb04>
  40338c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403390:	ldr	x1, [x8, #1472]
  403394:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403398:	ldr	x5, [x8, #1336]
  40339c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  4033a0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  4033a4:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x1d48>
  4033a8:	mov	w4, #0x4                   	// #4
  4033ac:	add	x0, x0, #0xd97
  4033b0:	add	x2, x2, #0x988
  4033b4:	add	x3, x3, #0x970
  4033b8:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  4033bc:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x1d48>
  4033c0:	add	x8, x8, #0x970
  4033c4:	ldr	w8, [x8, x0, lsl #2]
  4033c8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4033cc:	str	w8, [x9, #2332]
  4033d0:	b	4036a4 <__fxstatat@plt+0xb04>
  4033d4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4033d8:	str	wzr, [x8, #1556]
  4033dc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4033e0:	mov	w9, #0x1                   	// #1
  4033e4:	strb	w9, [x8, #2400]
  4033e8:	b	4036a4 <__fxstatat@plt+0xb04>
  4033ec:	mov	w8, #0x1                   	// #1
  4033f0:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4033f4:	strb	w8, [x9, #2328]
  4033f8:	b	4036a4 <__fxstatat@plt+0xb04>
  4033fc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403400:	ldr	x0, [x8, #1472]
  403404:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403408:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40340c:	add	x1, x1, #0x94c
  403410:	add	x2, x2, #0x958
  403414:	bl	40d1d8 <__fxstatat@plt+0xa638>
  403418:	cbnz	w0, 404b68 <__fxstatat@plt+0x1fc8>
  40341c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403420:	ldr	w8, [x8, #2380]
  403424:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403428:	ldr	x9, [x9, #2392]
  40342c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403430:	str	w8, [x10, #2384]
  403434:	b	4034c0 <__fxstatat@plt+0x920>
  403438:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40343c:	mov	w9, #0x4                   	// #4
  403440:	str	w9, [x8, #1560]
  403444:	b	4036a4 <__fxstatat@plt+0xb04>
  403448:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40344c:	mov	w9, #0x1                   	// #1
  403450:	strb	w9, [x8, #1553]
  403454:	b	4036a4 <__fxstatat@plt+0xb04>
  403458:	mov	w8, #0x3                   	// #3
  40345c:	b	403580 <__fxstatat@plt+0x9e0>
  403460:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403464:	ldr	x1, [x8, #1472]
  403468:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40346c:	ldr	x5, [x8, #1336]
  403470:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  403474:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  403478:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x1d48>
  40347c:	mov	w4, #0x4                   	// #4
  403480:	add	x0, x0, #0xd9e
  403484:	add	x2, x2, #0x9d8
  403488:	add	x3, x3, #0x9b8
  40348c:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  403490:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x1d48>
  403494:	add	x8, x8, #0x9b8
  403498:	ldr	w8, [x8, x0, lsl #2]
  40349c:	b	403630 <__fxstatat@plt+0xa90>
  4034a0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4034a4:	mov	w9, #0x90                  	// #144
  4034a8:	str	w9, [x8, #2380]
  4034ac:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4034b0:	str	w9, [x8, #2384]
  4034b4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4034b8:	mov	w9, #0x1                   	// #1
  4034bc:	str	x9, [x8, #2392]
  4034c0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4034c4:	str	x9, [x8, #1288]
  4034c8:	b	4036a4 <__fxstatat@plt+0xb04>
  4034cc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4034d0:	ldr	x8, [x8, #1472]
  4034d4:	mov	w0, #0x10                  	// #16
  4034d8:	str	x8, [sp, #24]
  4034dc:	bl	4111f4 <__fxstatat@plt+0xe654>
  4034e0:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4034e4:	ldr	x8, [x9, #2344]
  4034e8:	ldr	x10, [sp, #24]
  4034ec:	str	x0, [x9, #2344]
  4034f0:	stp	x10, x8, [x0]
  4034f4:	b	4036a4 <__fxstatat@plt+0xb04>
  4034f8:	mov	x0, xzr
  4034fc:	mov	w1, wzr
  403500:	bl	40f654 <__fxstatat@plt+0xcab4>
  403504:	b	4036a4 <__fxstatat@plt+0xb04>
  403508:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40350c:	adrp	x23, 417000 <_obstack_memory_used@@Base+0x4d48>
  403510:	str	wzr, [x8, #1556]
  403514:	mov	w8, w20
  403518:	add	x23, x23, #0xda7
  40351c:	b	4036a8 <__fxstatat@plt+0xb08>
  403520:	mov	w0, #0x10                  	// #16
  403524:	bl	4111f4 <__fxstatat@plt+0xe654>
  403528:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40352c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403530:	ldr	x8, [x8, #1472]
  403534:	ldr	x9, [x10, #2352]
  403538:	str	x0, [x10, #2352]
  40353c:	stp	x8, x9, [x0]
  403540:	b	4036a4 <__fxstatat@plt+0xb04>
  403544:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403548:	ldr	x1, [x8, #1472]
  40354c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403550:	ldr	x5, [x8, #1336]
  403554:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  403558:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  40355c:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x1d48>
  403560:	mov	w4, #0x4                   	// #4
  403564:	add	x0, x0, #0xdc4
  403568:	add	x2, x2, #0xaa0
  40356c:	add	x3, x3, #0xa90
  403570:	bl	40a8fc <__fxstatat@plt+0x7d5c>
  403574:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x1d48>
  403578:	add	x8, x8, #0xa90
  40357c:	ldr	w8, [x8, x0, lsl #2]
  403580:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403584:	str	w8, [x9, #1568]
  403588:	b	4036a4 <__fxstatat@plt+0xb04>
  40358c:	mov	w8, #0x2                   	// #2
  403590:	b	4035a8 <__fxstatat@plt+0xa08>
  403594:	mov	w8, #0x1                   	// #1
  403598:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40359c:	strb	w8, [x9, #1564]
  4035a0:	b	4036a4 <__fxstatat@plt+0xb04>
  4035a4:	mov	w8, #0xffffffff            	// #-1
  4035a8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4035ac:	str	w8, [x9, #1680]
  4035b0:	mov	w22, #0x1                   	// #1
  4035b4:	b	4036a4 <__fxstatat@plt+0xb04>
  4035b8:	mov	w8, #0x2                   	// #2
  4035bc:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4035c0:	str	w8, [x9, #2340]
  4035c4:	b	4036a4 <__fxstatat@plt+0xb04>
  4035c8:	mov	w8, #0x3                   	// #3
  4035cc:	b	403630 <__fxstatat@plt+0xa90>
  4035d0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4035d4:	ldr	w8, [x8, #1556]
  4035d8:	mov	w9, #0x2                   	// #2
  4035dc:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4035e0:	str	w9, [x10, #2340]
  4035e4:	mov	w9, #0xffffffff            	// #-1
  4035e8:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4035ec:	str	w9, [x10, #1680]
  4035f0:	cbnz	w8, 403610 <__fxstatat@plt+0xa70>
  4035f4:	mov	w0, #0x1                   	// #1
  4035f8:	mov	w22, #0x1                   	// #1
  4035fc:	bl	402a60 <isatty@plt>
  403600:	cmp	w0, #0x0
  403604:	cinc	w8, w22, ne  // ne = any
  403608:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40360c:	str	w8, [x9, #1556]
  403610:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403614:	strb	wzr, [x8, #1685]
  403618:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40361c:	strb	wzr, [x8, #1552]
  403620:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403624:	strb	wzr, [x8, #1872]
  403628:	b	4035b0 <__fxstatat@plt+0xa10>
  40362c:	mov	w8, #0x4                   	// #4
  403630:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403634:	str	w8, [x9, #1556]
  403638:	b	4036a4 <__fxstatat@plt+0xb04>
  40363c:	mov	w8, #0x1                   	// #1
  403640:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403644:	strb	w8, [x9, #2337]
  403648:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40364c:	str	wzr, [x8, #1556]
  403650:	b	4036a4 <__fxstatat@plt+0xb04>
  403654:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403658:	ldr	x0, [x8, #1472]
  40365c:	bl	406fcc <__fxstatat@plt+0x442c>
  403660:	mov	w8, w20
  403664:	tbnz	w0, #0, 4036a8 <__fxstatat@plt+0xb08>
  403668:	b	404b84 <__fxstatat@plt+0x1fe4>
  40366c:	mov	w8, #0x1                   	// #1
  403670:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403674:	strb	w8, [x9, #2338]
  403678:	b	4036a4 <__fxstatat@plt+0xb04>
  40367c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403680:	mov	w9, #0x1                   	// #1
  403684:	strb	w9, [x8, #1552]
  403688:	str	xzr, [x24, #2368]
  40368c:	b	4036a4 <__fxstatat@plt+0xb04>
  403690:	mov	w8, #0x1                   	// #1
  403694:	b	40369c <__fxstatat@plt+0xafc>
  403698:	mov	w8, wzr
  40369c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4036a0:	strb	w8, [x9, #1872]
  4036a4:	mov	w8, w20
  4036a8:	mov	w20, w8
  4036ac:	b	402ff4 <__fxstatat@plt+0x454>
  4036b0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4036b4:	strb	wzr, [x8, #1552]
  4036b8:	b	4036a4 <__fxstatat@plt+0xb04>
  4036bc:	cmn	w0, #0x1
  4036c0:	b.ne	404aa0 <__fxstatat@plt+0x1f00>  // b.any
  4036c4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4036c8:	ldr	x8, [x8, #2392]
  4036cc:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4036d0:	cbnz	x8, 403744 <__fxstatat@plt+0xba4>
  4036d4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  4036d8:	add	x0, x0, #0xe18
  4036dc:	bl	402b40 <getenv@plt>
  4036e0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4036e4:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4036e8:	add	x1, x1, #0x94c
  4036ec:	add	x2, x2, #0x958
  4036f0:	mov	x19, x0
  4036f4:	bl	40d1d8 <__fxstatat@plt+0xa638>
  4036f8:	cbnz	x19, 40370c <__fxstatat@plt+0xb6c>
  4036fc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  403700:	add	x0, x0, #0xe1b
  403704:	bl	402b40 <getenv@plt>
  403708:	cbz	x0, 40372c <__fxstatat@plt+0xb8c>
  40370c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403710:	ldr	w8, [x8, #2380]
  403714:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403718:	ldr	x9, [x9, #2392]
  40371c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403720:	str	w8, [x10, #2384]
  403724:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403728:	str	x9, [x8, #1288]
  40372c:	tbz	w20, #0, 403744 <__fxstatat@plt+0xba4>
  403730:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403734:	str	wzr, [x8, #2380]
  403738:	mov	w8, #0x400                 	// #1024
  40373c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403740:	str	x8, [x9, #2392]
  403744:	ldr	x8, [x27, #2360]
  403748:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40374c:	movk	x9, #0xaaab
  403750:	mov	x0, xzr
  403754:	umulh	x9, x8, x9
  403758:	lsr	x10, x9, #1
  40375c:	lsl	x11, x10, #1
  403760:	add	x9, x11, x9, lsr #1
  403764:	cmp	x8, x9
  403768:	cinc	x8, x10, ne  // ne = any
  40376c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403770:	str	x8, [x9, #2408]
  403774:	bl	40f63c <__fxstatat@plt+0xca9c>
  403778:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40377c:	ldr	w9, [x8, #1556]
  403780:	mov	w19, w0
  403784:	mov	w8, wzr
  403788:	cmp	w9, #0x1
  40378c:	b.eq	4037bc <__fxstatat@plt+0xc1c>  // b.none
  403790:	cmp	w9, #0x4
  403794:	b.eq	4037bc <__fxstatat@plt+0xc1c>  // b.none
  403798:	cbz	w9, 4037a4 <__fxstatat@plt+0xc04>
  40379c:	ldr	x8, [x27, #2360]
  4037a0:	cbz	x8, 4037bc <__fxstatat@plt+0xc1c>
  4037a4:	orr	w8, w19, #0x2
  4037a8:	cmp	w8, #0x3
  4037ac:	cset	w8, eq  // eq = none
  4037b0:	cmp	w19, #0x6
  4037b4:	cset	w9, eq  // eq = none
  4037b8:	orr	w8, w9, w8
  4037bc:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4037c0:	mov	x0, xzr
  4037c4:	strb	w8, [x9, #2416]
  4037c8:	bl	40f5f0 <__fxstatat@plt+0xca50>
  4037cc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4037d0:	cmp	w19, #0x7
  4037d4:	str	x0, [x8, #1936]
  4037d8:	b.ne	4037e8 <__fxstatat@plt+0xc48>  // b.any
  4037dc:	mov	w1, #0x20                  	// #32
  4037e0:	mov	w2, #0x1                   	// #1
  4037e4:	bl	40f66c <__fxstatat@plt+0xcacc>
  4037e8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4037ec:	ldr	w8, [x8, #1568]
  4037f0:	adrp	x27, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4037f4:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4037f8:	subs	w8, w8, #0x2
  4037fc:	b.cc	40382c <__fxstatat@plt+0xc8c>  // b.lo, b.ul, b.last
  403800:	cmp	w8, #0x5
  403804:	b.eq	40382c <__fxstatat@plt+0xc8c>  // b.none
  403808:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x4d48>
  40380c:	add	x9, x9, #0xe26
  403810:	add	x19, x9, x8
  403814:	ldrb	w1, [x19], #1
  403818:	ldr	x0, [x20, #1936]
  40381c:	mov	w2, #0x1                   	// #1
  403820:	bl	40f66c <__fxstatat@plt+0xcacc>
  403824:	ldrb	w1, [x19], #1
  403828:	cbnz	w1, 403818 <__fxstatat@plt+0xc78>
  40382c:	mov	x0, xzr
  403830:	bl	40f5f0 <__fxstatat@plt+0xca50>
  403834:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403838:	mov	w1, #0x3a                  	// #58
  40383c:	mov	w2, #0x1                   	// #1
  403840:	str	x0, [x8, #2424]
  403844:	bl	40f66c <__fxstatat@plt+0xcacc>
  403848:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40384c:	ldrb	w8, [x8, #1693]
  403850:	cmp	w8, #0x1
  403854:	b.ne	403874 <__fxstatat@plt+0xcd4>  // b.any
  403858:	ldr	w8, [x27, #1556]
  40385c:	cbnz	w8, 40386c <__fxstatat@plt+0xccc>
  403860:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403864:	ldrb	w8, [x8, #1872]
  403868:	cbz	w8, 403874 <__fxstatat@plt+0xcd4>
  40386c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403870:	strb	wzr, [x8, #1693]
  403874:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403878:	ldr	w8, [x8, #2332]
  40387c:	sub	w8, w8, #0x1
  403880:	cmp	w8, #0x1
  403884:	b.hi	4038a8 <__fxstatat@plt+0xd08>  // b.pmore
  403888:	ldr	w8, [x27, #1556]
  40388c:	cbz	w8, 4038ac <__fxstatat@plt+0xd0c>
  403890:	eor	w9, w22, #0x1
  403894:	tbz	w9, #0, 4038ac <__fxstatat@plt+0xd0c>
  403898:	mov	w8, #0x4                   	// #4
  40389c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4038a0:	str	w8, [x9, #1680]
  4038a4:	b	403bd8 <__fxstatat@plt+0x1038>
  4038a8:	ldr	w8, [x27, #1556]
  4038ac:	cbnz	w8, 403bd8 <__fxstatat@plt+0x1038>
  4038b0:	cbnz	x23, 4038d0 <__fxstatat@plt+0xd30>
  4038b4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  4038b8:	add	x0, x0, #0xe2c
  4038bc:	bl	402b40 <getenv@plt>
  4038c0:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x2d48>
  4038c4:	add	x8, x8, #0xf33
  4038c8:	cmp	x0, #0x0
  4038cc:	csel	x23, x8, x0, eq  // eq = none
  4038d0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x1d48>
  4038d4:	add	x1, x1, #0xac8
  4038d8:	mov	w2, #0x6                   	// #6
  4038dc:	mov	x0, x23
  4038e0:	bl	402780 <strncmp@plt>
  4038e4:	cbnz	w0, 403914 <__fxstatat@plt+0xd74>
  4038e8:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x1d48>
  4038ec:	add	x19, x19, #0xac8
  4038f0:	mov	w0, #0x2                   	// #2
  4038f4:	bl	40bb08 <__fxstatat@plt+0x8f68>
  4038f8:	tbz	w0, #0, 403bd8 <__fxstatat@plt+0x1038>
  4038fc:	add	x23, x23, #0x6
  403900:	mov	w2, #0x6                   	// #6
  403904:	mov	x0, x23
  403908:	mov	x1, x19
  40390c:	bl	402780 <strncmp@plt>
  403910:	cbz	w0, 4038f0 <__fxstatat@plt+0xd50>
  403914:	ldrb	w8, [x23]
  403918:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40391c:	add	x20, x20, #0x510
  403920:	cmp	w8, #0x2b
  403924:	b.ne	403964 <__fxstatat@plt+0xdc4>  // b.any
  403928:	add	x19, x23, #0x1
  40392c:	mov	w1, #0xa                   	// #10
  403930:	mov	x0, x19
  403934:	bl	4029c0 <strchr@plt>
  403938:	mov	x22, x19
  40393c:	cbz	x0, 40395c <__fxstatat@plt+0xdbc>
  403940:	add	x22, x0, #0x1
  403944:	mov	x23, x0
  403948:	mov	w1, #0xa                   	// #10
  40394c:	mov	x0, x22
  403950:	bl	4029c0 <strchr@plt>
  403954:	cbnz	x0, 404c6c <__fxstatat@plt+0x20cc>
  403958:	strb	wzr, [x23]
  40395c:	stp	x19, x22, [x20]
  403960:	b	403a0c <__fxstatat@plt+0xe6c>
  403964:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x1d48>
  403968:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x1d48>
  40396c:	add	x1, x1, #0xad0
  403970:	add	x2, x2, #0xaf8
  403974:	mov	w3, #0x4                   	// #4
  403978:	mov	x0, x23
  40397c:	bl	40a68c <__fxstatat@plt+0x7aec>
  403980:	mov	x2, x0
  403984:	tbnz	x0, #63, 404be8 <__fxstatat@plt+0x2048>
  403988:	cmp	x2, #0x3
  40398c:	b.hi	403a0c <__fxstatat@plt+0xe6c>  // b.pmore
  403990:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x1d48>
  403994:	add	x8, x8, #0x2d2
  403998:	adr	x9, 4039a8 <__fxstatat@plt+0xe08>
  40399c:	ldrb	w10, [x8, x2]
  4039a0:	add	x9, x9, x10, lsl #2
  4039a4:	br	x9
  4039a8:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x4d48>
  4039ac:	add	x8, x8, #0xebb
  4039b0:	b	403a08 <__fxstatat@plt+0xe68>
  4039b4:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x4d48>
  4039b8:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x4d48>
  4039bc:	add	x8, x8, #0xee2
  4039c0:	add	x9, x9, #0xed6
  4039c4:	stp	x8, x9, [x20]
  4039c8:	b	403a0c <__fxstatat@plt+0xe6c>
  4039cc:	mov	w0, #0x2                   	// #2
  4039d0:	bl	40bb08 <__fxstatat@plt+0x8f68>
  4039d4:	tbz	w0, #0, 403a0c <__fxstatat@plt+0xe6c>
  4039d8:	mov	x8, xzr
  4039dc:	ldr	x1, [x20, x8, lsl #3]
  4039e0:	mov	w2, #0x2                   	// #2
  4039e4:	mov	x0, xzr
  4039e8:	mov	x19, x8
  4039ec:	bl	402ac0 <dcgettext@plt>
  4039f0:	mov	w8, #0x1                   	// #1
  4039f4:	str	x0, [x20, x19, lsl #3]
  4039f8:	cbz	x19, 4039dc <__fxstatat@plt+0xe3c>
  4039fc:	b	403a0c <__fxstatat@plt+0xe6c>
  403a00:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x4d48>
  403a04:	add	x8, x8, #0xed3
  403a08:	stp	x8, x8, [x20]
  403a0c:	mov	x10, xzr
  403a10:	sub	x8, x29, #0x20
  403a14:	mov	x9, x10
  403a18:	ldr	x10, [x20, x10, lsl #3]
  403a1c:	ldrb	w11, [x10]
  403a20:	cmp	w11, #0x25
  403a24:	b.eq	403a30 <__fxstatat@plt+0xe90>  // b.none
  403a28:	cbnz	w11, 403a50 <__fxstatat@plt+0xeb0>
  403a2c:	b	403a58 <__fxstatat@plt+0xeb8>
  403a30:	mov	x11, x10
  403a34:	ldrb	w12, [x11, #1]!
  403a38:	cmp	w12, #0x25
  403a3c:	b.eq	403a4c <__fxstatat@plt+0xeac>  // b.none
  403a40:	cmp	w12, #0x62
  403a44:	b.ne	403a50 <__fxstatat@plt+0xeb0>  // b.any
  403a48:	b	403a5c <__fxstatat@plt+0xebc>
  403a4c:	mov	x10, x11
  403a50:	add	x10, x10, #0x1
  403a54:	b	403a1c <__fxstatat@plt+0xe7c>
  403a58:	mov	x10, xzr
  403a5c:	str	x10, [x8, x9, lsl #3]
  403a60:	mov	w10, #0x1                   	// #1
  403a64:	cbz	x9, 403a14 <__fxstatat@plt+0xe74>
  403a68:	ldur	x25, [x29, #-32]
  403a6c:	cbnz	x25, 403a78 <__fxstatat@plt+0xed8>
  403a70:	ldur	x8, [x29, #-24]
  403a74:	cbz	x8, 403bd4 <__fxstatat@plt+0x1034>
  403a78:	mov	w24, #0xe                   	// #14
  403a7c:	mov	w23, #0xc                   	// #12
  403a80:	movk	w24, #0x2, lsl #16
  403a84:	mov	x27, xzr
  403a88:	mov	x26, xzr
  403a8c:	add	x19, sp, #0x20
  403a90:	add	w0, w27, w24
  403a94:	stur	x23, [x29, #-16]
  403a98:	bl	402720 <nl_langinfo@plt>
  403a9c:	mov	w1, #0x25                  	// #37
  403aa0:	mov	x22, x0
  403aa4:	bl	4029c0 <strchr@plt>
  403aa8:	cbnz	x0, 403bd0 <__fxstatat@plt+0x1030>
  403aac:	bl	402970 <__ctype_b_loc@plt>
  403ab0:	ldr	x8, [x0]
  403ab4:	ldrb	w9, [x22]
  403ab8:	sub	x3, x29, #0x10
  403abc:	mov	w2, #0x80                  	// #128
  403ac0:	mov	x0, x22
  403ac4:	ldrh	w8, [x8, x9, lsl #1]
  403ac8:	mov	x1, x19
  403acc:	mov	w5, wzr
  403ad0:	ubfx	w4, w8, #11, #1
  403ad4:	bl	40d744 <__fxstatat@plt+0xaba4>
  403ad8:	cmp	x0, #0x7f
  403adc:	b.hi	403bd0 <__fxstatat@plt+0x1030>  // b.pmore
  403ae0:	ldur	x8, [x29, #-16]
  403ae4:	add	x27, x27, #0x1
  403ae8:	add	x19, x19, #0x80
  403aec:	cmp	x26, x8
  403af0:	csel	x26, x26, x8, hi  // hi = pmore
  403af4:	cmp	x27, #0xc
  403af8:	b.ne	403a90 <__fxstatat@plt+0xef0>  // b.any
  403afc:	cmp	x23, x26
  403b00:	mov	x23, x26
  403b04:	b.hi	403a84 <__fxstatat@plt+0xee4>  // b.pmore
  403b08:	ldur	x9, [x29, #-24]
  403b0c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403b10:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x5d48>
  403b14:	mov	x8, xzr
  403b18:	str	x9, [sp, #16]
  403b1c:	mov	w9, #0x600                 	// #1536
  403b20:	add	x10, x10, #0x980
  403b24:	add	x22, x22, #0x148
  403b28:	ldr	x23, [x20, x8, lsl #3]
  403b2c:	mov	x19, xzr
  403b30:	add	x26, x25, #0x2
  403b34:	str	x8, [sp, #24]
  403b38:	sub	x24, x25, x23
  403b3c:	madd	x27, x8, x9, x10
  403b40:	add	x0, x27, x19
  403b44:	cbz	x25, 403b7c <__fxstatat@plt+0xfdc>
  403b48:	cmp	x24, #0x80
  403b4c:	b.gt	403bd0 <__fxstatat@plt+0x1030>
  403b50:	add	x8, sp, #0x20
  403b54:	add	x7, x8, x19
  403b58:	mov	w1, #0x80                  	// #128
  403b5c:	mov	w2, #0x1                   	// #1
  403b60:	mov	x3, #0xffffffffffffffff    	// #-1
  403b64:	mov	x4, x22
  403b68:	mov	w5, w24
  403b6c:	mov	x6, x23
  403b70:	str	x26, [sp]
  403b74:	bl	402700 <__snprintf_chk@plt>
  403b78:	b	403b98 <__fxstatat@plt+0xff8>
  403b7c:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x5d48>
  403b80:	mov	w1, #0x80                  	// #128
  403b84:	mov	w2, #0x1                   	// #1
  403b88:	mov	x3, #0xffffffffffffffff    	// #-1
  403b8c:	add	x4, x4, #0x607
  403b90:	mov	x5, x23
  403b94:	bl	402700 <__snprintf_chk@plt>
  403b98:	cmp	w0, #0x80
  403b9c:	b.cs	403bd0 <__fxstatat@plt+0x1030>  // b.hs, b.nlast
  403ba0:	add	x19, x19, #0x80
  403ba4:	cmp	x19, #0x600
  403ba8:	b.ne	403b40 <__fxstatat@plt+0xfa0>  // b.any
  403bac:	ldp	x25, x11, [sp, #16]
  403bb0:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403bb4:	mov	w8, #0x1                   	// #1
  403bb8:	mov	w9, #0x600                 	// #1536
  403bbc:	add	x10, x10, #0x980
  403bc0:	cbz	x11, 403b28 <__fxstatat@plt+0xf88>
  403bc4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  403bc8:	mov	w9, #0x1                   	// #1
  403bcc:	strb	w9, [x8, #1408]
  403bd0:	adrp	x27, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403bd4:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403bd8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403bdc:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403be0:	ldrb	w9, [x9, #1552]
  403be4:	ldrsw	x24, [x8, #1480]
  403be8:	cbz	w9, 403f30 <__fxstatat@plt+0x1390>
  403bec:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  403bf0:	add	x0, x0, #0x151
  403bf4:	bl	402b40 <getenv@plt>
  403bf8:	str	x0, [sp, #32]
  403bfc:	cbz	x0, 403e08 <__fxstatat@plt+0x1268>
  403c00:	ldrb	w8, [x0]
  403c04:	cbz	w8, 403e08 <__fxstatat@plt+0x1268>
  403c08:	mov	w8, #0x3f3f                	// #16191
  403c0c:	sturb	wzr, [x29, #-14]
  403c10:	sturh	w8, [x29, #-16]
  403c14:	bl	4113e8 <__fxstatat@plt+0xe848>
  403c18:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x1d48>
  403c1c:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x1d48>
  403c20:	mov	x19, xzr
  403c24:	adrp	x20, 42b000 <__progname@@GLIBC_2.17+0xa28>
  403c28:	mov	w8, #0x1                   	// #1
  403c2c:	add	x26, x26, #0x2d6
  403c30:	adrp	x25, 42b000 <__progname@@GLIBC_2.17+0xa28>
  403c34:	add	x22, x22, #0xb08
  403c38:	stur	x0, [x29, #-32]
  403c3c:	str	x0, [x20, #1416]
  403c40:	sub	w8, w8, #0x1
  403c44:	cmp	w8, #0x5
  403c48:	b.hi	404b60 <__fxstatat@plt+0x1fc0>  // b.pmore
  403c4c:	adr	x9, 403c5c <__fxstatat@plt+0x10bc>
  403c50:	ldrh	w10, [x26, x8, lsl #1]
  403c54:	add	x9, x9, x10, lsl #2
  403c58:	br	x9
  403c5c:	ldr	x23, [sp, #32]
  403c60:	ldrb	w8, [x23]
  403c64:	cmp	w8, #0x2a
  403c68:	b.eq	403d58 <__fxstatat@plt+0x11b8>  // b.none
  403c6c:	cmp	w8, #0x3a
  403c70:	b.eq	403d48 <__fxstatat@plt+0x11a8>  // b.none
  403c74:	adrp	x27, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403c78:	cbz	w8, 403ef4 <__fxstatat@plt+0x1354>
  403c7c:	add	x9, x23, #0x1
  403c80:	sturb	w8, [x29, #-16]
  403c84:	str	x9, [sp, #32]
  403c88:	mov	w8, #0x2                   	// #2
  403c8c:	b	403c40 <__fxstatat@plt+0x10a0>
  403c90:	ldr	x8, [sp, #32]
  403c94:	add	x9, x8, #0x1
  403c98:	str	x9, [sp, #32]
  403c9c:	ldrb	w8, [x8]
  403ca0:	cmp	w8, #0x3d
  403ca4:	mov	w8, #0x6                   	// #6
  403ca8:	b.ne	403c40 <__fxstatat@plt+0x10a0>  // b.any
  403cac:	ldur	x8, [x29, #-32]
  403cb0:	add	x3, x19, #0x10
  403cb4:	sub	x0, x29, #0x20
  403cb8:	add	x1, sp, #0x20
  403cbc:	mov	w2, wzr
  403cc0:	str	x8, [x19, #24]
  403cc4:	bl	407028 <__fxstatat@plt+0x4488>
  403cc8:	tst	w0, #0x1
  403ccc:	mov	w8, #0x6                   	// #6
  403cd0:	csinc	w8, w8, wzr, eq  // eq = none
  403cd4:	b	403c40 <__fxstatat@plt+0x10a0>
  403cd8:	ldr	x10, [sp, #32]
  403cdc:	mov	w8, #0x6                   	// #6
  403ce0:	ldrb	w9, [x10]
  403ce4:	cbz	w9, 403c40 <__fxstatat@plt+0x10a0>
  403ce8:	add	x8, x10, #0x1
  403cec:	sturb	w9, [x29, #-15]
  403cf0:	str	x8, [sp, #32]
  403cf4:	mov	w8, #0x3                   	// #3
  403cf8:	b	403c40 <__fxstatat@plt+0x10a0>
  403cfc:	ldr	x8, [sp, #32]
  403d00:	add	x9, x8, #0x1
  403d04:	str	x9, [sp, #32]
  403d08:	ldrb	w8, [x8]
  403d0c:	cmp	w8, #0x3d
  403d10:	mov	w8, #0x6                   	// #6
  403d14:	b.ne	403c40 <__fxstatat@plt+0x10a0>  // b.any
  403d18:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403d1c:	mov	x27, xzr
  403d20:	add	x23, x23, #0x388
  403d24:	ldr	x1, [x22, x27]
  403d28:	sub	x0, x29, #0x10
  403d2c:	bl	402950 <strcmp@plt>
  403d30:	cbz	w0, 403da8 <__fxstatat@plt+0x1208>
  403d34:	add	x27, x27, #0x8
  403d38:	cmp	x27, #0xc0
  403d3c:	add	x23, x23, #0x10
  403d40:	b.ne	403d24 <__fxstatat@plt+0x1184>  // b.any
  403d44:	b	403dcc <__fxstatat@plt+0x122c>
  403d48:	add	x8, x23, #0x1
  403d4c:	str	x8, [sp, #32]
  403d50:	mov	w8, #0x1                   	// #1
  403d54:	b	403c40 <__fxstatat@plt+0x10a0>
  403d58:	mov	w0, #0x28                  	// #40
  403d5c:	bl	4111f4 <__fxstatat@plt+0xe654>
  403d60:	ldr	x8, [x25, #1424]
  403d64:	ldur	x9, [x29, #-32]
  403d68:	mov	x19, x0
  403d6c:	str	x0, [x25, #1424]
  403d70:	add	x10, x23, #0x1
  403d74:	str	x8, [x0, #32]
  403d78:	str	x9, [x0, #8]
  403d7c:	sub	x0, x29, #0x20
  403d80:	add	x1, sp, #0x20
  403d84:	mov	w2, #0x1                   	// #1
  403d88:	mov	x3, x19
  403d8c:	str	x10, [sp, #32]
  403d90:	bl	407028 <__fxstatat@plt+0x4488>
  403d94:	tst	w0, #0x1
  403d98:	mov	w8, #0x6                   	// #6
  403d9c:	mov	w9, #0x4                   	// #4
  403da0:	csel	w8, w9, w8, ne  // ne = any
  403da4:	b	403c40 <__fxstatat@plt+0x10a0>
  403da8:	ldur	x8, [x29, #-32]
  403dac:	sub	x0, x29, #0x20
  403db0:	add	x1, sp, #0x20
  403db4:	mov	w2, wzr
  403db8:	mov	x3, x23
  403dbc:	str	x8, [x23, #8]
  403dc0:	bl	407028 <__fxstatat@plt+0x4488>
  403dc4:	mov	w8, #0x1                   	// #1
  403dc8:	tbnz	w0, #0, 403c40 <__fxstatat@plt+0x10a0>
  403dcc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  403dd0:	mov	w2, #0x5                   	// #5
  403dd4:	mov	x0, xzr
  403dd8:	add	x1, x1, #0x168
  403ddc:	bl	402ac0 <dcgettext@plt>
  403de0:	mov	x23, x0
  403de4:	sub	x0, x29, #0x10
  403de8:	bl	410abc <__fxstatat@plt+0xdf1c>
  403dec:	mov	x3, x0
  403df0:	mov	w0, wzr
  403df4:	mov	w1, wzr
  403df8:	mov	x2, x23
  403dfc:	bl	4025b0 <error@plt>
  403e00:	mov	w8, #0x6                   	// #6
  403e04:	b	403c40 <__fxstatat@plt+0x10a0>
  403e08:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  403e0c:	add	x0, x0, #0x15b
  403e10:	bl	402b40 <getenv@plt>
  403e14:	cbz	x0, 403e20 <__fxstatat@plt+0x1280>
  403e18:	ldrb	w8, [x0]
  403e1c:	cbnz	w8, 403f30 <__fxstatat@plt+0x1390>
  403e20:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  403e24:	add	x0, x0, #0x160
  403e28:	bl	402b40 <getenv@plt>
  403e2c:	cbz	x0, 403e98 <__fxstatat@plt+0x12f8>
  403e30:	ldrb	w8, [x0]
  403e34:	mov	x19, x0
  403e38:	cbz	w8, 403e98 <__fxstatat@plt+0x12f8>
  403e3c:	adrp	x20, 414000 <_obstack_memory_used@@Base+0x1d48>
  403e40:	add	x20, x20, #0xbd0
  403e44:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x5d48>
  403e48:	add	x22, x22, #0x1bb
  403e4c:	mov	x23, x20
  403e50:	mov	w2, #0x5                   	// #5
  403e54:	mov	x0, x23
  403e58:	mov	x1, x22
  403e5c:	bl	402780 <strncmp@plt>
  403e60:	cbnz	w0, 403e78 <__fxstatat@plt+0x12d8>
  403e64:	add	x0, x23, #0x5
  403e68:	mov	x1, x19
  403e6c:	mov	w2, wzr
  403e70:	bl	4029d0 <fnmatch@plt>
  403e74:	cbz	w0, 403f30 <__fxstatat@plt+0x1390>
  403e78:	mov	x0, x23
  403e7c:	bl	402540 <strlen@plt>
  403e80:	add	x8, x0, x23
  403e84:	add	x23, x8, #0x1
  403e88:	sub	x8, x23, x20
  403e8c:	lsr	x8, x8, #2
  403e90:	cmp	x8, #0x431
  403e94:	b.cc	403e50 <__fxstatat@plt+0x12b0>  // b.lo, b.ul, b.last
  403e98:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403e9c:	strb	wzr, [x8, #1552]
  403ea0:	b	403f30 <__fxstatat@plt+0x1390>
  403ea4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  403ea8:	add	x1, x1, #0x180
  403eac:	mov	w2, #0x5                   	// #5
  403eb0:	mov	x0, xzr
  403eb4:	bl	402ac0 <dcgettext@plt>
  403eb8:	mov	x2, x0
  403ebc:	mov	w0, wzr
  403ec0:	mov	w1, wzr
  403ec4:	bl	4025b0 <error@plt>
  403ec8:	ldr	x0, [x20, #1416]
  403ecc:	bl	402990 <free@plt>
  403ed0:	ldr	x0, [x25, #1424]
  403ed4:	cbz	x0, 403ee8 <__fxstatat@plt+0x1348>
  403ed8:	ldr	x19, [x0, #32]
  403edc:	bl	402990 <free@plt>
  403ee0:	mov	x0, x19
  403ee4:	cbnz	x19, 403ed8 <__fxstatat@plt+0x1338>
  403ee8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403eec:	adrp	x27, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403ef0:	strb	wzr, [x8, #1552]
  403ef4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403ef8:	ldr	x8, [x8, #1016]
  403efc:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f00:	cmp	x8, #0x6
  403f04:	b.ne	403f30 <__fxstatat@plt+0x1390>  // b.any
  403f08:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f0c:	ldr	x0, [x8, #1024]
  403f10:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  403f14:	add	x1, x1, #0x1b4
  403f18:	mov	w2, #0x6                   	// #6
  403f1c:	bl	402780 <strncmp@plt>
  403f20:	cbnz	w0, 403f30 <__fxstatat@plt+0x1390>
  403f24:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f28:	mov	w9, #0x1                   	// #1
  403f2c:	strb	w9, [x8, #1555]
  403f30:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f34:	ldrb	w8, [x19, #1553]
  403f38:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f3c:	cmp	w8, #0x1
  403f40:	b.eq	403f88 <__fxstatat@plt+0x13e8>  // b.none
  403f44:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f48:	ldrb	w8, [x8, #1552]
  403f4c:	cbz	w8, 403f94 <__fxstatat@plt+0x13f4>
  403f50:	mov	w0, #0xd                   	// #13
  403f54:	bl	404ca0 <__fxstatat@plt+0x2100>
  403f58:	tbnz	w0, #0, 403f88 <__fxstatat@plt+0x13e8>
  403f5c:	mov	w0, #0xe                   	// #14
  403f60:	bl	404ca0 <__fxstatat@plt+0x2100>
  403f64:	tbz	w0, #0, 403f74 <__fxstatat@plt+0x13d4>
  403f68:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f6c:	ldrb	w8, [x8, #1555]
  403f70:	tbnz	w8, #0, 403f88 <__fxstatat@plt+0x13e8>
  403f74:	mov	w0, #0xc                   	// #12
  403f78:	bl	404ca0 <__fxstatat@plt+0x2100>
  403f7c:	tbz	w0, #0, 403f94 <__fxstatat@plt+0x13f4>
  403f80:	ldr	w8, [x27, #1556]
  403f84:	cbnz	w8, 403f94 <__fxstatat@plt+0x13f4>
  403f88:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f8c:	mov	w9, #0x1                   	// #1
  403f90:	strb	w9, [x8, #1554]
  403f94:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403f98:	ldr	w8, [x12, #1560]
  403f9c:	cmp	w8, #0x1
  403fa0:	b.ne	403fe0 <__fxstatat@plt+0x1440>  // b.any
  403fa4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403fa8:	ldr	w8, [x8, #1568]
  403fac:	ldr	w10, [x27, #1556]
  403fb0:	ldrb	w9, [x23, #1564]
  403fb4:	mov	w11, #0x4                   	// #4
  403fb8:	cmp	w8, #0x3
  403fbc:	cset	w8, eq  // eq = none
  403fc0:	cmp	w10, #0x0
  403fc4:	orr	w8, w9, w8
  403fc8:	cset	w9, eq  // eq = none
  403fcc:	orr	w8, w8, w9
  403fd0:	tst	w8, #0x1
  403fd4:	mov	w8, #0x2                   	// #2
  403fd8:	csel	w8, w8, w11, ne  // ne = any
  403fdc:	str	w8, [x12, #1560]
  403fe0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  403fe4:	ldrb	w8, [x8, #1572]
  403fe8:	cmp	w8, #0x1
  403fec:	b.ne	404044 <__fxstatat@plt+0x14a4>  // b.any
  403ff0:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  403ff4:	adrp	x3, 404000 <__fxstatat@plt+0x1460>
  403ff8:	adrp	x4, 404000 <__fxstatat@plt+0x1460>
  403ffc:	add	x2, x2, #0xd0c
  404000:	add	x3, x3, #0xd1c
  404004:	add	x4, x4, #0xd48
  404008:	mov	w0, #0x1e                  	// #30
  40400c:	mov	x1, xzr
  404010:	bl	40bfe0 <__fxstatat@plt+0x9440>
  404014:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404018:	str	x0, [x8, #1576]
  40401c:	cbz	x0, 404b64 <__fxstatat@plt+0x1fc4>
  404020:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404024:	adrp	x3, 402000 <mbrtowc@plt-0x4c0>
  404028:	adrp	x4, 402000 <mbrtowc@plt-0x4c0>
  40402c:	add	x0, x0, #0x630
  404030:	add	x3, x3, #0x730
  404034:	add	x4, x4, #0x990
  404038:	mov	x1, xzr
  40403c:	mov	x2, xzr
  404040:	bl	411fa0 <_obstack_begin@@Base>
  404044:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  404048:	add	x0, x0, #0xf3a
  40404c:	bl	402b40 <getenv@plt>
  404050:	bl	41232c <_obstack_memory_used@@Base+0x74>
  404054:	ldr	w8, [x27, #1556]
  404058:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40405c:	str	x0, [x9, #1672]
  404060:	cbz	w8, 40407c <__fxstatat@plt+0x14dc>
  404064:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404068:	ldr	w8, [x8, #1680]
  40406c:	cmp	w8, #0x4
  404070:	b.eq	40407c <__fxstatat@plt+0x14dc>  // b.none
  404074:	cmp	w8, #0x2
  404078:	b.ne	404204 <__fxstatat@plt+0x1664>  // b.any
  40407c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404080:	mov	w10, #0x1                   	// #1
  404084:	mov	w8, wzr
  404088:	strb	w10, [x9, #1688]
  40408c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404090:	ldrb	w9, [x9, #1693]
  404094:	and	w8, w8, #0x1
  404098:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40409c:	strb	w8, [x10, #1692]
  4040a0:	cmp	w9, #0x1
  4040a4:	b.ne	4040f0 <__fxstatat@plt+0x1550>  // b.any
  4040a8:	adrp	x19, 402000 <mbrtowc@plt-0x4c0>
  4040ac:	adrp	x22, 402000 <mbrtowc@plt-0x4c0>
  4040b0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4040b4:	add	x19, x19, #0x730
  4040b8:	add	x22, x22, #0x990
  4040bc:	add	x0, x0, #0x6a0
  4040c0:	mov	x1, xzr
  4040c4:	mov	x2, xzr
  4040c8:	mov	x3, x19
  4040cc:	mov	x4, x22
  4040d0:	bl	411fa0 <_obstack_begin@@Base>
  4040d4:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4040d8:	add	x0, x0, #0x6f8
  4040dc:	mov	x1, xzr
  4040e0:	mov	x2, xzr
  4040e4:	mov	x3, x19
  4040e8:	mov	x4, x22
  4040ec:	bl	411fa0 <_obstack_begin@@Base>
  4040f0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4040f4:	ldrb	w8, [x8, #1872]
  4040f8:	cbz	w8, 404174 <__fxstatat@plt+0x15d4>
  4040fc:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404100:	mov	x19, xzr
  404104:	add	x20, x20, #0x798
  404108:	mov	w0, w19
  40410c:	bl	40aa00 <__fxstatat@plt+0x7e60>
  404110:	tbz	w0, #0, 40411c <__fxstatat@plt+0x157c>
  404114:	mov	w8, #0x1                   	// #1
  404118:	b	404140 <__fxstatat@plt+0x15a0>
  40411c:	sub	w8, w19, #0x2d
  404120:	cmp	w8, #0x2
  404124:	mov	w8, #0x1                   	// #1
  404128:	b.cc	404140 <__fxstatat@plt+0x15a0>  // b.lo, b.ul, b.last
  40412c:	cmp	w19, #0x5f
  404130:	b.eq	404140 <__fxstatat@plt+0x15a0>  // b.none
  404134:	cmp	w19, #0x7e
  404138:	b.eq	404140 <__fxstatat@plt+0x15a0>  // b.none
  40413c:	mov	w8, wzr
  404140:	ldrb	w9, [x20, x19]
  404144:	orr	w8, w9, w8
  404148:	strb	w8, [x20, x19]
  40414c:	add	x19, x19, #0x1
  404150:	cmp	x19, #0x100
  404154:	b.ne	404108 <__fxstatat@plt+0x1568>  // b.any
  404158:	bl	4115c4 <__fxstatat@plt+0xea24>
  40415c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  404160:	cmp	x0, #0x0
  404164:	add	x8, x8, #0x2c9
  404168:	csel	x8, x8, x0, eq  // eq = none
  40416c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404170:	str	x8, [x9, #1880]
  404174:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404178:	mov	w9, #0x64                  	// #100
  40417c:	mov	w0, #0x47e0                	// #18400
  404180:	str	x9, [x8, #1888]
  404184:	bl	4111f4 <__fxstatat@plt+0xe654>
  404188:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40418c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404190:	str	x0, [x8, #1896]
  404194:	str	xzr, [x9, #1904]
  404198:	bl	404d4c <__fxstatat@plt+0x21ac>
  40419c:	sub	w20, w21, w24
  4041a0:	cmp	w20, #0x1
  4041a4:	b.lt	4041d8 <__fxstatat@plt+0x1638>  // b.tstop
  4041a8:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x5d48>
  4041ac:	sxtw	x21, w21
  4041b0:	add	x19, x19, #0x2c9
  4041b4:	ldr	x0, [x28, x24, lsl #3]
  4041b8:	mov	w2, #0x1                   	// #1
  4041bc:	mov	w1, wzr
  4041c0:	mov	x3, x19
  4041c4:	add	x24, x24, #0x1
  4041c8:	bl	404e00 <__fxstatat@plt+0x2260>
  4041cc:	cmp	x24, x21
  4041d0:	b.lt	4041b4 <__fxstatat@plt+0x1614>  // b.tstop
  4041d4:	b	404264 <__fxstatat@plt+0x16c4>
  4041d8:	ldrb	w8, [x23, #1564]
  4041dc:	cmp	w8, #0x1
  4041e0:	b.ne	404230 <__fxstatat@plt+0x1690>  // b.any
  4041e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  4041e8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  4041ec:	add	x0, x0, #0x654
  4041f0:	add	x3, x3, #0x2c9
  4041f4:	mov	w1, #0x3                   	// #3
  4041f8:	mov	w2, #0x1                   	// #1
  4041fc:	bl	404e00 <__fxstatat@plt+0x2260>
  404200:	b	404264 <__fxstatat@plt+0x16c4>
  404204:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404208:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40420c:	ldrb	w8, [x8, #1684]
  404210:	ldrb	w9, [x9, #1685]
  404214:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404218:	orr	w8, w8, w9
  40421c:	and	w9, w8, #0x1
  404220:	strb	w9, [x10, #1688]
  404224:	tbz	w8, #0, 404a64 <__fxstatat@plt+0x1ec4>
  404228:	mov	w8, wzr
  40422c:	b	40408c <__fxstatat@plt+0x14ec>
  404230:	mov	w0, #0x20                  	// #32
  404234:	bl	4111f4 <__fxstatat@plt+0xe654>
  404238:	mov	x19, x0
  40423c:	str	xzr, [x0, #8]
  404240:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  404244:	add	x0, x0, #0x654
  404248:	bl	4113e8 <__fxstatat@plt+0xe848>
  40424c:	ldr	x8, [x25, #1528]
  404250:	mov	w9, #0x1                   	// #1
  404254:	str	x0, [x19]
  404258:	strb	w9, [x19, #16]
  40425c:	str	x8, [x19, #24]
  404260:	str	x19, [x25, #1528]
  404264:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404268:	ldr	x8, [x8, #1904]
  40426c:	cbz	x8, 4042c0 <__fxstatat@plt+0x1720>
  404270:	bl	4059c8 <__fxstatat@plt+0x2e28>
  404274:	ldrb	w8, [x23, #1564]
  404278:	tbnz	w8, #0, 404288 <__fxstatat@plt+0x16e8>
  40427c:	mov	w1, #0x1                   	// #1
  404280:	mov	x0, xzr
  404284:	bl	405b40 <__fxstatat@plt+0x2fa0>
  404288:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40428c:	ldr	x8, [x8, #1904]
  404290:	cbz	x8, 4042c0 <__fxstatat@plt+0x1720>
  404294:	bl	405cc4 <__fxstatat@plt+0x3124>
  404298:	ldr	x8, [x25, #1528]
  40429c:	cbz	x8, 4048fc <__fxstatat@plt+0x1d5c>
  4042a0:	mov	w0, #0xa                   	// #10
  4042a4:	bl	4027f0 <putchar_unlocked@plt>
  4042a8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4042ac:	ldr	x9, [x8, #1912]
  4042b0:	ldr	x19, [x25, #1528]
  4042b4:	add	x9, x9, #0x1
  4042b8:	str	x9, [x8, #1912]
  4042bc:	b	4042e4 <__fxstatat@plt+0x1744>
  4042c0:	ldr	x19, [x25, #1528]
  4042c4:	cmp	w20, #0x1
  4042c8:	b.gt	4042e4 <__fxstatat@plt+0x1744>
  4042cc:	cbz	x19, 4042e4 <__fxstatat@plt+0x1744>
  4042d0:	ldr	x8, [x19, #24]
  4042d4:	cbnz	x8, 4042e8 <__fxstatat@plt+0x1748>
  4042d8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4042dc:	strb	wzr, [x8, #1524]
  4042e0:	b	4042e8 <__fxstatat@plt+0x1748>
  4042e4:	cbz	x19, 4048fc <__fxstatat@plt+0x1d5c>
  4042e8:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x5d48>
  4042ec:	add	x27, x27, #0x27f
  4042f0:	ldr	x8, [x19, #24]
  4042f4:	str	x8, [x25, #1528]
  4042f8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4042fc:	ldr	x0, [x8, #1576]
  404300:	ldr	x28, [x19]
  404304:	cbz	x0, 404354 <__fxstatat@plt+0x17b4>
  404308:	cbnz	x28, 404354 <__fxstatat@plt+0x17b4>
  40430c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404310:	add	x9, x9, #0x640
  404314:	ldp	x9, x8, [x9]
  404318:	sub	x9, x8, x9
  40431c:	cmp	x9, #0xf
  404320:	b.ls	404b20 <__fxstatat@plt+0x1f80>  // b.plast
  404324:	sub	x9, x8, #0x10
  404328:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40432c:	str	x9, [x10, #1608]
  404330:	ldur	q0, [x8, #-16]
  404334:	add	x1, sp, #0x20
  404338:	str	q0, [sp, #32]
  40433c:	bl	40c8b0 <__fxstatat@plt+0x9d10>
  404340:	cbz	x0, 404b40 <__fxstatat@plt+0x1fa0>
  404344:	bl	402990 <free@plt>
  404348:	mov	x0, x19
  40434c:	bl	4067b0 <__fxstatat@plt+0x3c10>
  404350:	b	4048f4 <__fxstatat@plt+0x1d54>
  404354:	ldr	x22, [x19, #8]
  404358:	ldrb	w20, [x19, #16]
  40435c:	bl	402b30 <__errno_location@plt>
  404360:	mov	x26, x0
  404364:	str	wzr, [x0]
  404368:	mov	x0, x28
  40436c:	bl	402620 <opendir@plt>
  404370:	cbz	x0, 404428 <__fxstatat@plt+0x1888>
  404374:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404378:	ldr	x8, [x8, #1576]
  40437c:	mov	x24, x0
  404380:	cbz	x8, 4044dc <__fxstatat@plt+0x193c>
  404384:	mov	x0, x24
  404388:	bl	402a20 <dirfd@plt>
  40438c:	add	x1, sp, #0x20
  404390:	tbnz	w0, #31, 404454 <__fxstatat@plt+0x18b4>
  404394:	bl	4141a0 <_obstack_memory_used@@Base+0x1ee8>
  404398:	tbnz	w0, #31, 404460 <__fxstatat@plt+0x18c0>
  40439c:	ldp	x25, x23, [sp, #32]
  4043a0:	mov	w0, #0x10                  	// #16
  4043a4:	bl	4111f4 <__fxstatat@plt+0xe654>
  4043a8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4043ac:	mov	x21, x0
  4043b0:	ldr	x0, [x8, #1576]
  4043b4:	mov	x1, x21
  4043b8:	stp	x23, x25, [x21]
  4043bc:	bl	40c878 <__fxstatat@plt+0x9cd8>
  4043c0:	cbz	x0, 404b64 <__fxstatat@plt+0x1fc4>
  4043c4:	cmp	x0, x21
  4043c8:	b.eq	40449c <__fxstatat@plt+0x18fc>  // b.none
  4043cc:	mov	x0, x21
  4043d0:	bl	402990 <free@plt>
  4043d4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4043d8:	mov	w2, #0x5                   	// #5
  4043dc:	mov	x0, xzr
  4043e0:	add	x1, x1, #0x23b
  4043e4:	bl	402ac0 <dcgettext@plt>
  4043e8:	mov	x21, x0
  4043ec:	mov	w1, #0x3                   	// #3
  4043f0:	mov	w0, wzr
  4043f4:	mov	x2, x28
  4043f8:	bl	410978 <__fxstatat@plt+0xddd8>
  4043fc:	mov	x3, x0
  404400:	mov	w0, wzr
  404404:	mov	w1, wzr
  404408:	mov	x2, x21
  40440c:	bl	4025b0 <error@plt>
  404410:	mov	x0, x24
  404414:	bl	402850 <closedir@plt>
  404418:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40441c:	mov	w9, #0x2                   	// #2
  404420:	str	w9, [x8, #1520]
  404424:	b	404494 <__fxstatat@plt+0x18f4>
  404428:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40442c:	cmp	w20, #0x0
  404430:	mov	w2, #0x5                   	// #5
  404434:	add	x1, x1, #0x1fa
  404438:	cset	w21, ne  // ne = any
  40443c:	bl	402ac0 <dcgettext@plt>
  404440:	mov	x1, x0
  404444:	mov	w0, w21
  404448:	mov	x2, x28
  40444c:	bl	4072c4 <__fxstatat@plt+0x4724>
  404450:	b	4048e0 <__fxstatat@plt+0x1d40>
  404454:	mov	x0, x28
  404458:	bl	414190 <_obstack_memory_used@@Base+0x1ed8>
  40445c:	tbz	w0, #31, 40439c <__fxstatat@plt+0x17fc>
  404460:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  404464:	cmp	w20, #0x0
  404468:	mov	w2, #0x5                   	// #5
  40446c:	mov	x0, xzr
  404470:	add	x1, x1, #0x213
  404474:	cset	w21, ne  // ne = any
  404478:	bl	402ac0 <dcgettext@plt>
  40447c:	mov	x1, x0
  404480:	mov	w0, w21
  404484:	mov	x2, x28
  404488:	bl	4072c4 <__fxstatat@plt+0x4724>
  40448c:	mov	x0, x24
  404490:	bl	402850 <closedir@plt>
  404494:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404498:	b	4048e0 <__fxstatat@plt+0x1d40>
  40449c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4044a0:	add	x8, x8, #0x648
  4044a4:	ldp	x8, x9, [x8]
  4044a8:	sub	x9, x9, x8
  4044ac:	cmp	x9, #0xf
  4044b0:	b.hi	4044cc <__fxstatat@plt+0x192c>  // b.pmore
  4044b4:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4044b8:	add	x21, x21, #0x630
  4044bc:	mov	w1, #0x10                  	// #16
  4044c0:	mov	x0, x21
  4044c4:	bl	4120a8 <_obstack_newchunk@@Base>
  4044c8:	ldr	x8, [x21, #24]
  4044cc:	add	x9, x8, #0x10
  4044d0:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4044d4:	str	x9, [x10, #1608]
  4044d8:	stp	x23, x25, [x8]
  4044dc:	bl	404d4c <__fxstatat@plt+0x21ac>
  4044e0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4044e4:	ldrb	w8, [x8, #1572]
  4044e8:	tbnz	w8, #0, 4044fc <__fxstatat@plt+0x195c>
  4044ec:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4044f0:	ldrb	w8, [x8, #1524]
  4044f4:	cmp	w8, #0x1
  4044f8:	b.ne	404608 <__fxstatat@plt+0x1a68>  // b.any
  4044fc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404500:	ldrb	w8, [x8, #1432]
  404504:	cmp	w8, #0x1
  404508:	b.ne	404524 <__fxstatat@plt+0x1984>  // b.any
  40450c:	mov	w0, #0xa                   	// #10
  404510:	bl	4027f0 <putchar_unlocked@plt>
  404514:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404518:	ldr	x8, [x9, #1912]
  40451c:	add	x8, x8, #0x1
  404520:	str	x8, [x9, #1912]
  404524:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404528:	ldrb	w8, [x8, #1693]
  40452c:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404530:	cmp	w8, #0x1
  404534:	mov	w8, #0x1                   	// #1
  404538:	strb	w8, [x9, #1432]
  40453c:	b.ne	404564 <__fxstatat@plt+0x19c4>  // b.any
  404540:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404544:	ldr	x1, [x8, #1488]
  404548:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40454c:	add	x0, x0, #0x264
  404550:	bl	402ad0 <fputs_unlocked@plt>
  404554:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404558:	ldr	x8, [x9, #1912]
  40455c:	add	x8, x8, #0x2
  404560:	str	x8, [x9, #1912]
  404564:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404568:	ldrb	w8, [x8, #1872]
  40456c:	cbz	w8, 4045ac <__fxstatat@plt+0x1a0c>
  404570:	mov	w1, #0x2                   	// #2
  404574:	mov	x0, x28
  404578:	bl	40ac1c <__fxstatat@plt+0x807c>
  40457c:	mov	x21, x0
  404580:	cbnz	x0, 4045b0 <__fxstatat@plt+0x1a10>
  404584:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  404588:	cmp	w20, #0x0
  40458c:	mov	w2, #0x5                   	// #5
  404590:	add	x1, x1, #0x267
  404594:	cset	w21, ne  // ne = any
  404598:	bl	402ac0 <dcgettext@plt>
  40459c:	mov	x1, x0
  4045a0:	mov	w0, w21
  4045a4:	mov	x2, x28
  4045a8:	bl	4072c4 <__fxstatat@plt+0x4724>
  4045ac:	mov	x21, xzr
  4045b0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4045b4:	ldr	x1, [x8, #2424]
  4045b8:	cmp	x22, #0x0
  4045bc:	adrp	x5, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4045c0:	csel	x0, x28, x22, eq  // eq = none
  4045c4:	mov	w2, #0xffffffff            	// #-1
  4045c8:	mov	w4, #0x1                   	// #1
  4045cc:	mov	x3, xzr
  4045d0:	add	x5, x5, #0x6f8
  4045d4:	mov	x6, x21
  4045d8:	bl	407338 <__fxstatat@plt+0x4798>
  4045dc:	mov	x0, x21
  4045e0:	bl	402990 <free@plt>
  4045e4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4045e8:	ldr	x1, [x8, #1488]
  4045ec:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  4045f0:	add	x0, x0, #0xe72
  4045f4:	bl	402ad0 <fputs_unlocked@plt>
  4045f8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4045fc:	ldr	x8, [x9, #1912]
  404600:	add	x8, x8, #0x2
  404604:	str	x8, [x9, #1912]
  404608:	mov	x25, xzr
  40460c:	mov	x0, x24
  404610:	str	wzr, [x26]
  404614:	bl	402820 <readdir@plt>
  404618:	cbz	x0, 4046b0 <__fxstatat@plt+0x1b10>
  40461c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404620:	ldr	w8, [x8, #2340]
  404624:	mov	x22, x0
  404628:	add	x21, x0, #0x13
  40462c:	cmp	w8, #0x2
  404630:	b.eq	404664 <__fxstatat@plt+0x1ac4>  // b.none
  404634:	ldrb	w9, [x21]
  404638:	cmp	w9, #0x2e
  40463c:	b.ne	404660 <__fxstatat@plt+0x1ac0>  // b.any
  404640:	cbz	w8, 4046ec <__fxstatat@plt+0x1b4c>
  404644:	ldrb	w9, [x22, #20]
  404648:	cmp	w9, #0x2e
  40464c:	mov	w9, #0x1                   	// #1
  404650:	cinc	x9, x9, eq  // eq = none
  404654:	add	x9, x22, x9
  404658:	ldrb	w9, [x9, #19]
  40465c:	cbz	w9, 4046ec <__fxstatat@plt+0x1b4c>
  404660:	cbz	w8, 404754 <__fxstatat@plt+0x1bb4>
  404664:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404668:	ldr	x23, [x8, #2344]
  40466c:	cbz	x23, 40468c <__fxstatat@plt+0x1aec>
  404670:	ldr	x0, [x23]
  404674:	mov	w2, #0x4                   	// #4
  404678:	mov	x1, x21
  40467c:	bl	4029d0 <fnmatch@plt>
  404680:	cbz	w0, 4046ec <__fxstatat@plt+0x1b4c>
  404684:	ldr	x23, [x23, #8]
  404688:	cbnz	x23, 404670 <__fxstatat@plt+0x1ad0>
  40468c:	ldrb	w8, [x22, #18]
  404690:	sub	w8, w8, #0x1
  404694:	cmp	w8, #0xd
  404698:	b.hi	4046f4 <__fxstatat@plt+0x1b54>  // b.pmore
  40469c:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x2d48>
  4046a0:	sxtb	x8, w8
  4046a4:	add	x9, x9, #0xef0
  4046a8:	ldr	w1, [x9, x8, lsl #2]
  4046ac:	b	4046f8 <__fxstatat@plt+0x1b58>
  4046b0:	ldr	w8, [x26]
  4046b4:	cbz	w8, 404780 <__fxstatat@plt+0x1be0>
  4046b8:	cmp	w20, #0x0
  4046bc:	mov	w2, #0x5                   	// #5
  4046c0:	mov	x0, xzr
  4046c4:	mov	x1, x27
  4046c8:	cset	w21, ne  // ne = any
  4046cc:	bl	402ac0 <dcgettext@plt>
  4046d0:	mov	x1, x0
  4046d4:	mov	w0, w21
  4046d8:	mov	x2, x28
  4046dc:	bl	4072c4 <__fxstatat@plt+0x4724>
  4046e0:	ldr	w8, [x26]
  4046e4:	cmp	w8, #0x4b
  4046e8:	b.ne	404780 <__fxstatat@plt+0x1be0>  // b.any
  4046ec:	bl	4075e0 <__fxstatat@plt+0x4a40>
  4046f0:	b	40460c <__fxstatat@plt+0x1a6c>
  4046f4:	mov	w1, wzr
  4046f8:	mov	x0, x21
  4046fc:	mov	w2, wzr
  404700:	mov	x3, x28
  404704:	bl	404e00 <__fxstatat@plt+0x2260>
  404708:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40470c:	ldr	w8, [x8, #1556]
  404710:	add	x25, x0, x25
  404714:	cmp	w8, #0x1
  404718:	b.ne	4046ec <__fxstatat@plt+0x1b4c>  // b.any
  40471c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404720:	ldr	w8, [x8, #1680]
  404724:	cmn	w8, #0x1
  404728:	b.ne	4046ec <__fxstatat@plt+0x1b4c>  // b.any
  40472c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404730:	ldrb	w8, [x8, #1685]
  404734:	tbnz	w8, #0, 4046ec <__fxstatat@plt+0x1b4c>
  404738:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40473c:	ldrb	w8, [x8, #1572]
  404740:	tbnz	w8, #0, 4046ec <__fxstatat@plt+0x1b4c>
  404744:	bl	4059c8 <__fxstatat@plt+0x2e28>
  404748:	bl	405cc4 <__fxstatat@plt+0x3124>
  40474c:	bl	404d4c <__fxstatat@plt+0x21ac>
  404750:	b	4046ec <__fxstatat@plt+0x1b4c>
  404754:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404758:	ldr	x23, [x8, #2352]
  40475c:	cbz	x23, 404664 <__fxstatat@plt+0x1ac4>
  404760:	ldr	x0, [x23]
  404764:	mov	w2, #0x4                   	// #4
  404768:	mov	x1, x21
  40476c:	bl	4029d0 <fnmatch@plt>
  404770:	cbz	w0, 4046ec <__fxstatat@plt+0x1b4c>
  404774:	ldr	x23, [x23, #8]
  404778:	cbnz	x23, 404760 <__fxstatat@plt+0x1bc0>
  40477c:	b	404664 <__fxstatat@plt+0x1ac4>
  404780:	mov	x0, x24
  404784:	bl	402850 <closedir@plt>
  404788:	cbz	w0, 4047b8 <__fxstatat@plt+0x1c18>
  40478c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  404790:	cmp	w20, #0x0
  404794:	mov	w2, #0x5                   	// #5
  404798:	mov	x0, xzr
  40479c:	add	x1, x1, #0x294
  4047a0:	cset	w21, ne  // ne = any
  4047a4:	bl	402ac0 <dcgettext@plt>
  4047a8:	mov	x1, x0
  4047ac:	mov	w0, w21
  4047b0:	mov	x2, x28
  4047b4:	bl	4072c4 <__fxstatat@plt+0x4724>
  4047b8:	bl	4059c8 <__fxstatat@plt+0x2e28>
  4047bc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4047c0:	ldrb	w8, [x8, #1572]
  4047c4:	cmp	w8, #0x1
  4047c8:	b.ne	4047d8 <__fxstatat@plt+0x1c38>  // b.any
  4047cc:	mov	x0, x28
  4047d0:	mov	w1, wzr
  4047d4:	bl	405b40 <__fxstatat@plt+0x2fa0>
  4047d8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4047dc:	ldr	w8, [x8, #1556]
  4047e0:	cbz	w8, 4047f4 <__fxstatat@plt+0x1c54>
  4047e4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4047e8:	ldrb	w8, [x8, #1685]
  4047ec:	cmp	w8, #0x1
  4047f0:	b.ne	4048cc <__fxstatat@plt+0x1d2c>  // b.any
  4047f4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4047f8:	ldrb	w8, [x8, #1693]
  4047fc:	cmp	w8, #0x1
  404800:	b.ne	404828 <__fxstatat@plt+0x1c88>  // b.any
  404804:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404808:	ldr	x1, [x8, #1488]
  40480c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  404810:	add	x0, x0, #0x264
  404814:	bl	402ad0 <fputs_unlocked@plt>
  404818:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40481c:	ldr	x8, [x9, #1912]
  404820:	add	x8, x8, #0x2
  404824:	str	x8, [x9, #1912]
  404828:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40482c:	mov	w2, #0x5                   	// #5
  404830:	mov	x0, xzr
  404834:	add	x1, x1, #0x2a9
  404838:	bl	402ac0 <dcgettext@plt>
  40483c:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404840:	ldr	x1, [x22, #1488]
  404844:	mov	x21, x0
  404848:	bl	402ad0 <fputs_unlocked@plt>
  40484c:	mov	x0, x21
  404850:	bl	402540 <strlen@plt>
  404854:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404858:	ldr	x8, [x20, #1912]
  40485c:	add	x8, x8, x0
  404860:	mov	w0, #0x20                  	// #32
  404864:	str	x8, [x20, #1912]
  404868:	bl	4027f0 <putchar_unlocked@plt>
  40486c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404870:	ldr	x8, [x20, #1912]
  404874:	ldr	w2, [x9, #2380]
  404878:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40487c:	ldr	x4, [x9, #2392]
  404880:	add	x8, x8, #0x1
  404884:	add	x1, sp, #0x20
  404888:	mov	w3, #0x200                 	// #512
  40488c:	mov	x0, x25
  404890:	str	x8, [x20, #1912]
  404894:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  404898:	ldr	x1, [x22, #1488]
  40489c:	mov	x21, x0
  4048a0:	bl	402ad0 <fputs_unlocked@plt>
  4048a4:	mov	x0, x21
  4048a8:	bl	402540 <strlen@plt>
  4048ac:	ldr	x8, [x20, #1912]
  4048b0:	add	x8, x8, x0
  4048b4:	mov	w0, #0xa                   	// #10
  4048b8:	str	x8, [x20, #1912]
  4048bc:	bl	4027f0 <putchar_unlocked@plt>
  4048c0:	ldr	x8, [x20, #1912]
  4048c4:	add	x8, x8, #0x1
  4048c8:	str	x8, [x20, #1912]
  4048cc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4048d0:	ldr	x8, [x8, #1904]
  4048d4:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4048d8:	cbz	x8, 4048e0 <__fxstatat@plt+0x1d40>
  4048dc:	bl	405cc4 <__fxstatat@plt+0x3124>
  4048e0:	mov	x0, x19
  4048e4:	bl	4067b0 <__fxstatat@plt+0x3c10>
  4048e8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4048ec:	mov	w9, #0x1                   	// #1
  4048f0:	strb	w9, [x8, #1524]
  4048f4:	ldr	x19, [x25, #1528]
  4048f8:	cbnz	x19, 4042f0 <__fxstatat@plt+0x1750>
  4048fc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404900:	ldrb	w8, [x8, #1552]
  404904:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404908:	cbz	w8, 4049c0 <__fxstatat@plt+0x1e20>
  40490c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404910:	ldrb	w8, [x8, #1920]
  404914:	cmp	w8, #0x1
  404918:	b.ne	4049c0 <__fxstatat@plt+0x1e20>  // b.any
  40491c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404920:	ldr	x8, [x8, #904]
  404924:	cmp	x8, #0x2
  404928:	b.ne	404968 <__fxstatat@plt+0x1dc8>  // b.any
  40492c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404930:	add	x8, x8, #0x390
  404934:	ldr	x9, [x8]
  404938:	mov	w10, #0x5b1b                	// #23323
  40493c:	ldrh	w9, [x9]
  404940:	cmp	w9, w10
  404944:	b.ne	404968 <__fxstatat@plt+0x1dc8>  // b.any
  404948:	ldr	x8, [x8, #8]
  40494c:	cmp	x8, #0x1
  404950:	b.ne	404968 <__fxstatat@plt+0x1dc8>  // b.any
  404954:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404958:	ldr	x8, [x8, #928]
  40495c:	ldrb	w8, [x8]
  404960:	cmp	w8, #0x6d
  404964:	b.eq	404980 <__fxstatat@plt+0x1de0>  // b.none
  404968:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40496c:	add	x19, x19, #0x388
  404970:	mov	x0, x19
  404974:	bl	406db4 <__fxstatat@plt+0x4214>
  404978:	add	x0, x19, #0x10
  40497c:	bl	406db4 <__fxstatat@plt+0x4214>
  404980:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404984:	ldr	x0, [x8, #1488]
  404988:	bl	4029e0 <fflush_unlocked@plt>
  40498c:	mov	w0, wzr
  404990:	bl	406e50 <__fxstatat@plt+0x42b0>
  404994:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404998:	ldr	w19, [x8, #1924]
  40499c:	cbz	w19, 4049b0 <__fxstatat@plt+0x1e10>
  4049a0:	mov	w0, #0x13                  	// #19
  4049a4:	bl	4025a0 <raise@plt>
  4049a8:	subs	w19, w19, #0x1
  4049ac:	b.ne	4049a0 <__fxstatat@plt+0x1e00>  // b.any
  4049b0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4049b4:	ldr	w0, [x8, #1928]
  4049b8:	cbz	w0, 4049c0 <__fxstatat@plt+0x1e20>
  4049bc:	bl	4025a0 <raise@plt>
  4049c0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4049c4:	ldrb	w8, [x8, #1693]
  4049c8:	cmp	w8, #0x1
  4049cc:	b.ne	404a1c <__fxstatat@plt+0x1e7c>  // b.any
  4049d0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  4049d4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4049d8:	add	x0, x0, #0xf66
  4049dc:	add	x1, x1, #0x6a0
  4049e0:	bl	4067e0 <__fxstatat@plt+0x3c40>
  4049e4:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  4049e8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4049ec:	add	x0, x0, #0xf70
  4049f0:	add	x1, x1, #0x6f8
  4049f4:	bl	4067e0 <__fxstatat@plt+0x3c40>
  4049f8:	ldr	x0, [x20, #1936]
  4049fc:	bl	40f63c <__fxstatat@plt+0xca9c>
  404a00:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  404a04:	add	x8, x8, #0x990
  404a08:	ldr	x2, [x8, w0, uxtw #3]
  404a0c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  404a10:	add	x1, x1, #0xf7d
  404a14:	mov	w0, #0x1                   	// #1
  404a18:	bl	4027b0 <__printf_chk@plt>
  404a1c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404a20:	ldr	x19, [x8, #1576]
  404a24:	cbz	x19, 404a3c <__fxstatat@plt+0x1e9c>
  404a28:	mov	x0, x19
  404a2c:	bl	40bb70 <__fxstatat@plt+0x8fd0>
  404a30:	cbnz	x0, 404bc8 <__fxstatat@plt+0x2028>
  404a34:	mov	x0, x19
  404a38:	bl	40c2a8 <__fxstatat@plt+0x9708>
  404a3c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404a40:	ldr	w0, [x8, #1520]
  404a44:	add	sp, sp, #0x640
  404a48:	ldp	x20, x19, [sp, #80]
  404a4c:	ldp	x22, x21, [sp, #64]
  404a50:	ldp	x24, x23, [sp, #48]
  404a54:	ldp	x26, x25, [sp, #32]
  404a58:	ldp	x28, x27, [sp, #16]
  404a5c:	ldp	x29, x30, [sp], #96
  404a60:	ret
  404a64:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404a68:	ldrb	w8, [x8, #1572]
  404a6c:	tbz	w8, #0, 404a78 <__fxstatat@plt+0x1ed8>
  404a70:	mov	w8, #0x1                   	// #1
  404a74:	b	40408c <__fxstatat@plt+0x14ec>
  404a78:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404a7c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404a80:	ldrb	w8, [x8, #1552]
  404a84:	ldr	w9, [x9, #1568]
  404a88:	ldrb	w10, [x19, #1553]
  404a8c:	orr	w8, w8, w9
  404a90:	cmp	w8, #0x0
  404a94:	cset	w8, ne  // ne = any
  404a98:	orr	w8, w10, w8
  404a9c:	b	40408c <__fxstatat@plt+0x14ec>
  404aa0:	cmn	w0, #0x3
  404aa4:	b.ne	404b10 <__fxstatat@plt+0x1f70>  // b.any
  404aa8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404aac:	ldr	w9, [x9, #1320]
  404ab0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404ab4:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404ab8:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x4d48>
  404abc:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x5d48>
  404ac0:	ldr	x0, [x8, #1488]
  404ac4:	ldr	x3, [x13, #1328]
  404ac8:	add	x10, x10, #0xc01
  404acc:	add	x11, x11, #0x23
  404ad0:	adrp	x12, 417000 <_obstack_memory_used@@Base+0x4d48>
  404ad4:	cmp	w9, #0x2
  404ad8:	add	x12, x12, #0xdf1
  404adc:	csel	x8, x11, x10, eq  // eq = none
  404ae0:	cmp	w9, #0x1
  404ae4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x4d48>
  404ae8:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x4d48>
  404aec:	adrp	x5, 417000 <_obstack_memory_used@@Base+0x4d48>
  404af0:	csel	x1, x12, x8, eq  // eq = none
  404af4:	add	x2, x2, #0xde6
  404af8:	add	x4, x4, #0xdf4
  404afc:	add	x5, x5, #0xe08
  404b00:	mov	x6, xzr
  404b04:	bl	4110e8 <__fxstatat@plt+0xe548>
  404b08:	mov	w0, wzr
  404b0c:	bl	402580 <exit@plt>
  404b10:	cmn	w0, #0x2
  404b14:	b.ne	404c64 <__fxstatat@plt+0x20c4>  // b.any
  404b18:	mov	w0, wzr
  404b1c:	bl	40689c <__fxstatat@plt+0x3cfc>
  404b20:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  404b24:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  404b28:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x4d48>
  404b2c:	add	x0, x0, #0xc09
  404b30:	add	x1, x1, #0xf43
  404b34:	add	x3, x3, #0xc40
  404b38:	mov	w2, #0x403                 	// #1027
  404b3c:	bl	402b20 <__assert_fail@plt>
  404b40:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  404b44:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  404b48:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x2d48>
  404b4c:	add	x0, x0, #0xf3d
  404b50:	add	x1, x1, #0xf43
  404b54:	add	x3, x3, #0xf4c
  404b58:	mov	w2, #0x640                 	// #1600
  404b5c:	bl	402b20 <__assert_fail@plt>
  404b60:	bl	4028c0 <abort@plt>
  404b64:	bl	411430 <__fxstatat@plt+0xe890>
  404b68:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404b6c:	ldr	w1, [sp, #32]
  404b70:	ldr	x4, [x8, #1472]
  404b74:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x1d48>
  404b78:	add	x3, x3, #0x3a8
  404b7c:	mov	w2, wzr
  404b80:	bl	411a54 <__fxstatat@plt+0xeeb4>
  404b84:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  404b88:	add	x1, x1, #0xd68
  404b8c:	mov	w2, #0x5                   	// #5
  404b90:	mov	x0, xzr
  404b94:	bl	402ac0 <dcgettext@plt>
  404b98:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404b9c:	ldr	x8, [x8, #1472]
  404ba0:	mov	x19, x0
  404ba4:	mov	x0, x8
  404ba8:	bl	410abc <__fxstatat@plt+0xdf1c>
  404bac:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x4d48>
  404bb0:	mov	x4, x0
  404bb4:	add	x2, x2, #0xd61
  404bb8:	mov	w0, #0x2                   	// #2
  404bbc:	mov	w1, wzr
  404bc0:	mov	x3, x19
  404bc4:	bl	4025b0 <error@plt>
  404bc8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  404bcc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  404bd0:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x2d48>
  404bd4:	add	x0, x0, #0xfa3
  404bd8:	add	x1, x1, #0xf43
  404bdc:	add	x3, x3, #0xf4c
  404be0:	mov	w2, #0x674                 	// #1652
  404be4:	bl	402b20 <__assert_fail@plt>
  404be8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  404bec:	add	x0, x0, #0xe54
  404bf0:	mov	x1, x23
  404bf4:	bl	40a770 <__fxstatat@plt+0x7bd0>
  404bf8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  404bfc:	add	x1, x1, #0xe5f
  404c00:	mov	w2, #0x5                   	// #5
  404c04:	mov	x0, xzr
  404c08:	bl	402ac0 <dcgettext@plt>
  404c0c:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404c10:	ldr	x1, [x20, #1464]
  404c14:	bl	402ad0 <fputs_unlocked@plt>
  404c18:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x4d48>
  404c1c:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x1d48>
  404c20:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x4d48>
  404c24:	add	x3, x3, #0xda7
  404c28:	add	x21, x21, #0xad8
  404c2c:	add	x19, x19, #0xe75
  404c30:	ldr	x0, [x20, #1464]
  404c34:	mov	w1, #0x1                   	// #1
  404c38:	mov	x2, x19
  404c3c:	bl	402930 <__fprintf_chk@plt>
  404c40:	ldr	x3, [x21], #8
  404c44:	cbnz	x3, 404c30 <__fxstatat@plt+0x2090>
  404c48:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  404c4c:	add	x1, x1, #0xe85
  404c50:	mov	w2, #0x5                   	// #5
  404c54:	mov	x0, xzr
  404c58:	bl	402ac0 <dcgettext@plt>
  404c5c:	ldr	x1, [x20, #1464]
  404c60:	bl	402ad0 <fputs_unlocked@plt>
  404c64:	mov	w0, #0x2                   	// #2
  404c68:	bl	40689c <__fxstatat@plt+0x3cfc>
  404c6c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  404c70:	add	x1, x1, #0xe37
  404c74:	mov	w2, #0x5                   	// #5
  404c78:	mov	x0, xzr
  404c7c:	bl	402ac0 <dcgettext@plt>
  404c80:	mov	x20, x0
  404c84:	mov	x0, x19
  404c88:	bl	410abc <__fxstatat@plt+0xdf1c>
  404c8c:	mov	x3, x0
  404c90:	mov	w0, #0x2                   	// #2
  404c94:	mov	w1, wzr
  404c98:	mov	x2, x20
  404c9c:	bl	4025b0 <error@plt>
  404ca0:	stp	x29, x30, [sp, #-16]!
  404ca4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404ca8:	add	x8, x8, #0x388
  404cac:	add	x9, x8, w0, uxtw #4
  404cb0:	ldr	x8, [x9]
  404cb4:	mov	x29, sp
  404cb8:	cbz	x8, 404cdc <__fxstatat@plt+0x213c>
  404cbc:	ldr	x0, [x9, #8]
  404cc0:	cmp	x8, #0x2
  404cc4:	b.eq	404cec <__fxstatat@plt+0x214c>  // b.none
  404cc8:	cmp	x8, #0x1
  404ccc:	b.ne	404ce4 <__fxstatat@plt+0x2144>  // b.any
  404cd0:	ldrb	w8, [x0]
  404cd4:	cmp	w8, #0x30
  404cd8:	b.ne	404ce4 <__fxstatat@plt+0x2144>  // b.any
  404cdc:	mov	w0, wzr
  404ce0:	b	404d04 <__fxstatat@plt+0x2164>
  404ce4:	mov	w0, #0x1                   	// #1
  404ce8:	b	404d04 <__fxstatat@plt+0x2164>
  404cec:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  404cf0:	add	x1, x1, #0xc06
  404cf4:	mov	w2, #0x2                   	// #2
  404cf8:	bl	402780 <strncmp@plt>
  404cfc:	cmp	w0, #0x0
  404d00:	cset	w0, ne  // ne = any
  404d04:	ldp	x29, x30, [sp], #16
  404d08:	ret
  404d0c:	ldr	x8, [x0]
  404d10:	udiv	x9, x8, x1
  404d14:	msub	x0, x9, x1, x8
  404d18:	ret
  404d1c:	ldr	x8, [x0]
  404d20:	ldr	x9, [x1]
  404d24:	cmp	x8, x9
  404d28:	b.ne	404d40 <__fxstatat@plt+0x21a0>  // b.any
  404d2c:	ldr	x8, [x0, #8]
  404d30:	ldr	x9, [x1, #8]
  404d34:	cmp	x8, x9
  404d38:	cset	w0, eq  // eq = none
  404d3c:	ret
  404d40:	mov	w0, wzr
  404d44:	ret
  404d48:	b	402990 <free@plt>
  404d4c:	stp	x29, x30, [sp, #-48]!
  404d50:	stp	x20, x19, [sp, #32]
  404d54:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404d58:	ldr	x8, [x19, #1904]
  404d5c:	str	x21, [sp, #16]
  404d60:	mov	x29, sp
  404d64:	cbz	x8, 404d8c <__fxstatat@plt+0x21ec>
  404d68:	mov	x20, xzr
  404d6c:	adrp	x21, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404d70:	ldr	x8, [x21, #1440]
  404d74:	ldr	x0, [x8, x20, lsl #3]
  404d78:	bl	407adc <__fxstatat@plt+0x4f3c>
  404d7c:	ldr	x8, [x19, #1904]
  404d80:	add	x20, x20, #0x1
  404d84:	cmp	x20, x8
  404d88:	b.cc	404d70 <__fxstatat@plt+0x21d0>  // b.lo, b.ul, b.last
  404d8c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404d90:	strb	wzr, [x8, #1433]
  404d94:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404d98:	strb	wzr, [x8, #1448]
  404d9c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404da0:	str	wzr, [x8, #1452]
  404da4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404da8:	str	wzr, [x8, #1456]
  404dac:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404db0:	str	wzr, [x8, #1460]
  404db4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404db8:	str	wzr, [x8, #1464]
  404dbc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404dc0:	str	wzr, [x8, #1468]
  404dc4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404dc8:	str	wzr, [x8, #1472]
  404dcc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404dd0:	str	xzr, [x19, #1904]
  404dd4:	str	wzr, [x8, #1476]
  404dd8:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404ddc:	ldp	x20, x19, [sp, #32]
  404de0:	ldr	x21, [sp, #16]
  404de4:	str	wzr, [x8, #1480]
  404de8:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404dec:	str	wzr, [x8, #1484]
  404df0:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404df4:	str	wzr, [x8, #1488]
  404df8:	ldp	x29, x30, [sp], #48
  404dfc:	ret
  404e00:	stp	x29, x30, [sp, #-96]!
  404e04:	stp	x28, x27, [sp, #16]
  404e08:	stp	x26, x25, [sp, #32]
  404e0c:	stp	x24, x23, [sp, #48]
  404e10:	stp	x22, x21, [sp, #64]
  404e14:	stp	x20, x19, [sp, #80]
  404e18:	mov	x29, sp
  404e1c:	sub	sp, sp, #0x2e0
  404e20:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404e24:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404e28:	ldr	x28, [x23, #1904]
  404e2c:	ldr	x8, [x20, #1888]
  404e30:	mov	x26, x3
  404e34:	mov	w24, w2
  404e38:	mov	w25, w1
  404e3c:	cmp	x28, x8
  404e40:	mov	x21, x0
  404e44:	mov	x19, sp
  404e48:	b.ne	404e98 <__fxstatat@plt+0x22f8>  // b.any
  404e4c:	mov	x8, #0x8591                	// #34193
  404e50:	movk	x8, #0x642c, lsl #16
  404e54:	movk	x8, #0xb21, lsl #32
  404e58:	movk	x8, #0x59, lsl #48
  404e5c:	cmp	x28, x8
  404e60:	b.cs	405948 <__fxstatat@plt+0x2da8>  // b.hs, b.nlast
  404e64:	mov	x22, x21
  404e68:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404e6c:	ldr	x0, [x21, #1896]
  404e70:	mov	w8, #0x170                 	// #368
  404e74:	mul	x1, x28, x8
  404e78:	bl	411244 <__fxstatat@plt+0xe6a4>
  404e7c:	ldr	x8, [x20, #1888]
  404e80:	ldr	x28, [x23, #1904]
  404e84:	str	x0, [x21, #1896]
  404e88:	mov	x21, x22
  404e8c:	lsl	x8, x8, #1
  404e90:	str	x8, [x20, #1888]
  404e94:	b	404ea0 <__fxstatat@plt+0x2300>
  404e98:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404e9c:	ldr	x0, [x8, #1896]
  404ea0:	mov	w8, #0xb8                  	// #184
  404ea4:	madd	x22, x28, x8, x0
  404ea8:	str	x0, [x19, #40]
  404eac:	mov	w2, #0xb8                  	// #184
  404eb0:	mov	x0, x22
  404eb4:	mov	w1, wzr
  404eb8:	bl	4027c0 <memset@plt>
  404ebc:	mov	x20, x22
  404ec0:	mov	x9, x22
  404ec4:	mov	w8, #0xffffffff            	// #-1
  404ec8:	mov	x27, x22
  404ecc:	str	xzr, [x20, #32]!
  404ed0:	str	w25, [x9, #152]!
  404ed4:	str	w8, [x27, #180]!
  404ed8:	adrp	x23, 42b000 <__progname@@GLIBC_2.17+0xa28>
  404edc:	ldrb	w8, [x23, #1433]
  404ee0:	str	x9, [x19, #24]
  404ee4:	tbnz	w8, #0, 404f10 <__fxstatat@plt+0x2370>
  404ee8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404eec:	ldrb	w8, [x8, #2416]
  404ef0:	cbz	w8, 404f10 <__fxstatat@plt+0x2370>
  404ef4:	mov	x0, x21
  404ef8:	bl	407b0c <__fxstatat@plt+0x4f6c>
  404efc:	and	w8, w0, #0x1
  404f00:	str	w8, [x27]
  404f04:	tbz	w0, #0, 404f10 <__fxstatat@plt+0x2370>
  404f08:	mov	w8, #0x1                   	// #1
  404f0c:	strb	w8, [x23, #1433]
  404f10:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404f14:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404f18:	str	x27, [x19, #16]
  404f1c:	ldrb	w27, [x8, #1872]
  404f20:	ldrb	w8, [x9, #1688]
  404f24:	orr	w8, w8, w27
  404f28:	tst	w8, #0xff
  404f2c:	b.ne	405014 <__fxstatat@plt+0x2474>  // b.any
  404f30:	tbnz	w24, #0, 405014 <__fxstatat@plt+0x2474>
  404f34:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404f38:	ldrb	w23, [x8, #1552]
  404f3c:	cmp	w25, #0x3
  404f40:	b.ne	404f6c <__fxstatat@plt+0x23cc>  // b.any
  404f44:	cbz	w23, 404f6c <__fxstatat@plt+0x23cc>
  404f48:	mov	w0, #0x13                  	// #19
  404f4c:	bl	404ca0 <__fxstatat@plt+0x2100>
  404f50:	tbnz	w0, #0, 405014 <__fxstatat@plt+0x2474>
  404f54:	mov	w0, #0x12                  	// #18
  404f58:	bl	404ca0 <__fxstatat@plt+0x2100>
  404f5c:	tbnz	w0, #0, 405014 <__fxstatat@plt+0x2474>
  404f60:	mov	w0, #0x14                  	// #20
  404f64:	bl	404ca0 <__fxstatat@plt+0x2100>
  404f68:	tbnz	w0, #0, 405014 <__fxstatat@plt+0x2474>
  404f6c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404f70:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404f74:	ldrb	w8, [x8, #1692]
  404f78:	ldrb	w9, [x9, #2338]
  404f7c:	cbnz	w8, 404f84 <__fxstatat@plt+0x23e4>
  404f80:	cbz	w9, 404fb8 <__fxstatat@plt+0x2418>
  404f84:	cmp	w25, #0x6
  404f88:	b.eq	404f90 <__fxstatat@plt+0x23f0>  // b.none
  404f8c:	cbnz	w25, 404fb8 <__fxstatat@plt+0x2418>
  404f90:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404f94:	ldr	w10, [x10, #1560]
  404f98:	cmp	w10, #0x5
  404f9c:	b.eq	405014 <__fxstatat@plt+0x2474>  // b.none
  404fa0:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404fa4:	ldrb	w10, [x10, #1555]
  404fa8:	tbnz	w10, #0, 405014 <__fxstatat@plt+0x2474>
  404fac:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404fb0:	ldrb	w10, [x10, #1554]
  404fb4:	orr	w9, w9, w10
  404fb8:	tbnz	w9, #0, 405014 <__fxstatat@plt+0x2474>
  404fbc:	cbz	w8, 405184 <__fxstatat@plt+0x25e4>
  404fc0:	cbz	w25, 405014 <__fxstatat@plt+0x2474>
  404fc4:	tbnz	w24, #0, 405014 <__fxstatat@plt+0x2474>
  404fc8:	cmp	w25, #0x5
  404fcc:	b.ne	405184 <__fxstatat@plt+0x25e4>  // b.any
  404fd0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  404fd4:	ldr	w8, [x8, #1568]
  404fd8:	cmp	w8, #0x3
  404fdc:	b.eq	405014 <__fxstatat@plt+0x2474>  // b.none
  404fe0:	cbz	w23, 405184 <__fxstatat@plt+0x25e4>
  404fe4:	mov	w0, #0xe                   	// #14
  404fe8:	bl	404ca0 <__fxstatat@plt+0x2100>
  404fec:	tbnz	w0, #0, 405014 <__fxstatat@plt+0x2474>
  404ff0:	mov	w0, #0x10                  	// #16
  404ff4:	bl	404ca0 <__fxstatat@plt+0x2100>
  404ff8:	tbnz	w0, #0, 405014 <__fxstatat@plt+0x2474>
  404ffc:	mov	w0, #0x11                  	// #17
  405000:	bl	404ca0 <__fxstatat@plt+0x2100>
  405004:	tbnz	w0, #0, 405014 <__fxstatat@plt+0x2474>
  405008:	mov	w0, #0x15                  	// #21
  40500c:	bl	404ca0 <__fxstatat@plt+0x2100>
  405010:	tbz	w0, #0, 405184 <__fxstatat@plt+0x25e4>
  405014:	ldrb	w8, [x21]
  405018:	str	w24, [x19, #36]
  40501c:	mov	x24, x21
  405020:	cmp	w8, #0x2f
  405024:	b.eq	4050c0 <__fxstatat@plt+0x2520>  // b.none
  405028:	ldrb	w23, [x26]
  40502c:	mov	x24, x21
  405030:	cbz	w23, 4050c0 <__fxstatat@plt+0x2520>
  405034:	mov	x0, x21
  405038:	bl	402540 <strlen@plt>
  40503c:	mov	x24, x0
  405040:	mov	x0, x26
  405044:	bl	402540 <strlen@plt>
  405048:	add	x8, x24, x0
  40504c:	add	x8, x8, #0x11
  405050:	and	x8, x8, #0xfffffffffffffff0
  405054:	mov	x9, sp
  405058:	sub	x24, x9, x8
  40505c:	mov	sp, x24
  405060:	cmp	w23, #0x2e
  405064:	b.ne	405074 <__fxstatat@plt+0x24d4>  // b.any
  405068:	ldrb	w9, [x26, #1]
  40506c:	mov	x8, x24
  405070:	cbz	w9, 4050a4 <__fxstatat@plt+0x2504>
  405074:	mov	x9, x26
  405078:	mov	x8, x24
  40507c:	strb	w23, [x8], #1
  405080:	ldrb	w23, [x9, #1]!
  405084:	cbnz	w23, 40507c <__fxstatat@plt+0x24dc>
  405088:	cmp	x9, x26
  40508c:	b.ls	4050a4 <__fxstatat@plt+0x2504>  // b.plast
  405090:	ldurb	w9, [x9, #-1]
  405094:	cmp	w9, #0x2f
  405098:	b.eq	4050a4 <__fxstatat@plt+0x2504>  // b.none
  40509c:	mov	w9, #0x2f                  	// #47
  4050a0:	strb	w9, [x8], #1
  4050a4:	ldrb	w9, [x21]
  4050a8:	cbz	w9, 4050bc <__fxstatat@plt+0x251c>
  4050ac:	add	x10, x21, #0x1
  4050b0:	strb	w9, [x8], #1
  4050b4:	ldrb	w9, [x10], #1
  4050b8:	cbnz	w9, 4050b0 <__fxstatat@plt+0x2510>
  4050bc:	strb	wzr, [x8]
  4050c0:	cbz	w27, 405108 <__fxstatat@plt+0x2568>
  4050c4:	mov	w1, #0x2                   	// #2
  4050c8:	mov	x0, x24
  4050cc:	bl	40ac1c <__fxstatat@plt+0x807c>
  4050d0:	ldr	x9, [x19, #40]
  4050d4:	mov	w8, #0xb8                  	// #184
  4050d8:	madd	x8, x28, x8, x9
  4050dc:	str	x0, [x8, #16]
  4050e0:	cbnz	x0, 405108 <__fxstatat@plt+0x2568>
  4050e4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4050e8:	add	x1, x1, #0x267
  4050ec:	mov	w2, #0x5                   	// #5
  4050f0:	bl	402ac0 <dcgettext@plt>
  4050f4:	ldr	w8, [x19, #36]
  4050f8:	mov	x1, x0
  4050fc:	mov	x2, x24
  405100:	and	w0, w8, #0x1
  405104:	bl	4072c4 <__fxstatat@plt+0x4724>
  405108:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40510c:	ldr	w8, [x23, #1560]
  405110:	add	x26, x22, #0x18
  405114:	sub	w9, w8, #0x3
  405118:	cmp	w9, #0x2
  40511c:	b.cs	405164 <__fxstatat@plt+0x25c4>  // b.hs, b.nlast
  405120:	ldr	x27, [x19, #40]
  405124:	ldr	w8, [x19, #36]
  405128:	tbz	w8, #0, 40519c <__fxstatat@plt+0x25fc>
  40512c:	mov	x0, x24
  405130:	mov	x1, x26
  405134:	bl	414190 <_obstack_memory_used@@Base+0x1ed8>
  405138:	ldr	w8, [x23, #1560]
  40513c:	cmp	w8, #0x3
  405140:	b.eq	40517c <__fxstatat@plt+0x25dc>  // b.none
  405144:	tbnz	w0, #31, 40518c <__fxstatat@plt+0x25ec>
  405148:	mov	w8, #0xb8                  	// #184
  40514c:	madd	x8, x28, x8, x27
  405150:	ldr	w8, [x8, #40]
  405154:	and	w8, w8, #0xf000
  405158:	cmp	w8, #0x4, lsl #12
  40515c:	b.eq	40517c <__fxstatat@plt+0x25dc>  // b.none
  405160:	b	40519c <__fxstatat@plt+0x25fc>
  405164:	ldr	x27, [x19, #40]
  405168:	cmp	w8, #0x5
  40516c:	b.ne	40519c <__fxstatat@plt+0x25fc>  // b.any
  405170:	mov	x0, x24
  405174:	mov	x1, x26
  405178:	bl	414190 <_obstack_memory_used@@Base+0x1ed8>
  40517c:	cbnz	w0, 4051ac <__fxstatat@plt+0x260c>
  405180:	b	4051ec <__fxstatat@plt+0x264c>
  405184:	mov	x24, xzr
  405188:	b	4058d4 <__fxstatat@plt+0x2d34>
  40518c:	bl	402b30 <__errno_location@plt>
  405190:	ldr	w8, [x0]
  405194:	cmp	w8, #0x2
  405198:	b.ne	4051ac <__fxstatat@plt+0x260c>  // b.any
  40519c:	mov	x0, x24
  4051a0:	mov	x1, x26
  4051a4:	bl	4141b0 <_obstack_memory_used@@Base+0x1ef8>
  4051a8:	cbz	w0, 4051ec <__fxstatat@plt+0x264c>
  4051ac:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4051b0:	add	x1, x1, #0x2d1
  4051b4:	mov	w2, #0x5                   	// #5
  4051b8:	mov	x0, xzr
  4051bc:	bl	402ac0 <dcgettext@plt>
  4051c0:	ldr	w20, [x19, #36]
  4051c4:	mov	x1, x0
  4051c8:	mov	x2, x24
  4051cc:	and	w0, w20, #0x1
  4051d0:	bl	4072c4 <__fxstatat@plt+0x4724>
  4051d4:	mov	x24, xzr
  4051d8:	tbnz	w20, #0, 405924 <__fxstatat@plt+0x2d84>
  4051dc:	mov	x0, x21
  4051e0:	bl	4113e8 <__fxstatat@plt+0xe848>
  4051e4:	mov	x24, xzr
  4051e8:	b	405910 <__fxstatat@plt+0x2d70>
  4051ec:	mov	w8, #0xb8                  	// #184
  4051f0:	mov	w9, #0x1                   	// #1
  4051f4:	madd	x8, x28, x8, x27
  4051f8:	cmp	w25, #0x5
  4051fc:	strb	w9, [x8, #168]
  405200:	b.eq	40521c <__fxstatat@plt+0x267c>  // b.none
  405204:	mov	w8, #0xb8                  	// #184
  405208:	madd	x8, x28, x8, x27
  40520c:	ldr	w8, [x8, #40]
  405210:	and	w8, w8, #0xf000
  405214:	cmp	w8, #0x8, lsl #12
  405218:	b.ne	4052f4 <__fxstatat@plt+0x2754>  // b.any
  40521c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405220:	ldrb	w8, [x8, #1552]
  405224:	cbz	w8, 4052f4 <__fxstatat@plt+0x2754>
  405228:	mov	w0, #0x15                  	// #21
  40522c:	bl	404ca0 <__fxstatat@plt+0x2100>
  405230:	tbz	w0, #0, 4052f4 <__fxstatat@plt+0x2754>
  405234:	mov	w8, #0xb8                  	// #184
  405238:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40523c:	madd	x23, x28, x8, x27
  405240:	ldr	x8, [x23, #24]!
  405244:	ldr	x9, [x9, #1496]
  405248:	cmp	x8, x9
  40524c:	b.ne	405264 <__fxstatat@plt+0x26c4>  // b.any
  405250:	bl	402b30 <__errno_location@plt>
  405254:	mov	w9, #0x5f                  	// #95
  405258:	mov	w8, wzr
  40525c:	str	w9, [x0]
  405260:	b	4052e8 <__fxstatat@plt+0x2748>
  405264:	mov	x0, x24
  405268:	str	x20, [x19, #8]
  40526c:	bl	402a50 <cap_get_file@plt>
  405270:	cbz	x0, 4052a8 <__fxstatat@plt+0x2708>
  405274:	mov	x1, xzr
  405278:	mov	x25, x0
  40527c:	bl	4024f0 <cap_to_text@plt>
  405280:	mov	x27, x0
  405284:	mov	x0, x25
  405288:	bl	402aa0 <cap_free@plt>
  40528c:	cbz	x27, 4052a8 <__fxstatat@plt+0x2708>
  405290:	ldrb	w20, [x27]
  405294:	mov	x0, x27
  405298:	bl	402aa0 <cap_free@plt>
  40529c:	cbz	w20, 4052a8 <__fxstatat@plt+0x2708>
  4052a0:	mov	w8, #0x1                   	// #1
  4052a4:	b	4052e0 <__fxstatat@plt+0x2740>
  4052a8:	bl	402b30 <__errno_location@plt>
  4052ac:	ldr	w8, [x0]
  4052b0:	cmp	w8, #0x16
  4052b4:	b.eq	4052c8 <__fxstatat@plt+0x2728>  // b.none
  4052b8:	cmp	w8, #0x5f
  4052bc:	b.eq	4052c8 <__fxstatat@plt+0x2728>  // b.none
  4052c0:	cmp	w8, #0x26
  4052c4:	b.ne	4052dc <__fxstatat@plt+0x273c>  // b.any
  4052c8:	ldr	x9, [x23]
  4052cc:	mov	w8, wzr
  4052d0:	adrp	x10, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4052d4:	str	x9, [x10, #1496]
  4052d8:	b	4052e0 <__fxstatat@plt+0x2740>
  4052dc:	mov	w8, wzr
  4052e0:	ldr	x20, [x19, #8]
  4052e4:	ldr	x27, [x19, #40]
  4052e8:	mov	w9, #0xb8                  	// #184
  4052ec:	madd	x9, x28, x9, x27
  4052f0:	strb	w8, [x9, #176]
  4052f4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4052f8:	ldr	w23, [x8, #1556]
  4052fc:	cbz	w23, 405310 <__fxstatat@plt+0x2770>
  405300:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405304:	ldrb	w8, [x8, #1684]
  405308:	cmp	w8, #0x1
  40530c:	b.ne	405484 <__fxstatat@plt+0x28e4>  // b.any
  405310:	mov	w8, #0xb8                  	// #184
  405314:	mov	x25, x20
  405318:	adrp	x20, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40531c:	madd	x8, x28, x8, x27
  405320:	str	x22, [x19, #8]
  405324:	mov	x22, x21
  405328:	ldr	x27, [x8, #24]
  40532c:	ldr	x21, [x20, #1504]
  405330:	bl	402b30 <__errno_location@plt>
  405334:	mov	x12, x0
  405338:	mov	w8, #0x5f                  	// #95
  40533c:	cmp	x27, x21
  405340:	str	w8, [x0]
  405344:	b.eq	40534c <__fxstatat@plt+0x27ac>  // b.none
  405348:	str	x27, [x20, #1504]
  40534c:	ldr	x9, [x19, #40]
  405350:	mov	w8, #0xb8                  	// #184
  405354:	madd	x8, x28, x8, x9
  405358:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40535c:	add	x9, x9, #0x520
  405360:	str	x9, [x8, #160]
  405364:	cbz	w23, 405388 <__fxstatat@plt+0x27e8>
  405368:	mov	x21, x22
  40536c:	ldr	x22, [x19, #8]
  405370:	ldr	x27, [x19, #40]
  405374:	mov	w8, wzr
  405378:	mov	w10, wzr
  40537c:	mov	w9, wzr
  405380:	mov	x20, x25
  405384:	b	405438 <__fxstatat@plt+0x2898>
  405388:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40538c:	ldr	x8, [x8, #1512]
  405390:	cmp	x27, x8
  405394:	b.ne	4053b8 <__fxstatat@plt+0x2818>  // b.any
  405398:	mov	x21, x22
  40539c:	ldr	x22, [x19, #8]
  4053a0:	ldr	x27, [x19, #40]
  4053a4:	mov	w8, #0x5f                  	// #95
  4053a8:	mov	w0, wzr
  4053ac:	str	w8, [x12]
  4053b0:	mov	x20, x25
  4053b4:	b	405428 <__fxstatat@plt+0x2888>
  4053b8:	mov	x0, x24
  4053bc:	mov	x1, x26
  4053c0:	str	wzr, [x12]
  4053c4:	mov	x23, x12
  4053c8:	bl	40b370 <__fxstatat@plt+0x87d0>
  4053cc:	ldr	x27, [x19, #40]
  4053d0:	cmp	w0, #0x0
  4053d4:	mov	x21, x22
  4053d8:	mov	x20, x25
  4053dc:	b.le	4053f8 <__fxstatat@plt+0x2858>
  4053e0:	ldr	x22, [x19, #8]
  4053e4:	mov	w8, wzr
  4053e8:	mov	w9, #0x2                   	// #2
  4053ec:	mov	w10, #0x1                   	// #1
  4053f0:	mov	x12, x23
  4053f4:	b	405438 <__fxstatat@plt+0x2898>
  4053f8:	ldr	w8, [x23]
  4053fc:	mov	x12, x23
  405400:	cmp	w8, #0x16
  405404:	b.eq	405418 <__fxstatat@plt+0x2878>  // b.none
  405408:	cmp	w8, #0x5f
  40540c:	b.eq	405418 <__fxstatat@plt+0x2878>  // b.none
  405410:	cmp	w8, #0x26
  405414:	b.ne	405424 <__fxstatat@plt+0x2884>  // b.any
  405418:	ldr	x8, [x26]
  40541c:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405420:	str	x8, [x9, #1512]
  405424:	ldr	x22, [x19, #8]
  405428:	cmp	w0, #0x0
  40542c:	mov	w9, wzr
  405430:	lsr	w8, w0, #31
  405434:	cset	w10, gt
  405438:	mov	w11, #0xb8                  	// #184
  40543c:	madd	x11, x28, x11, x27
  405440:	str	w9, [x11, #172]
  405444:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405448:	ldrb	w11, [x9, #1448]
  40544c:	orr	w10, w11, w10
  405450:	strb	w10, [x9, #1448]
  405454:	cbz	w8, 405484 <__fxstatat@plt+0x28e4>
  405458:	ldr	w25, [x12]
  40545c:	mov	w1, #0x3                   	// #3
  405460:	mov	w0, wzr
  405464:	mov	x2, x24
  405468:	bl	410978 <__fxstatat@plt+0xddd8>
  40546c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  405470:	mov	x3, x0
  405474:	add	x2, x2, #0x607
  405478:	mov	w0, wzr
  40547c:	mov	w1, w25
  405480:	bl	4025b0 <error@plt>
  405484:	mov	w8, #0xb8                  	// #184
  405488:	madd	x25, x28, x8, x27
  40548c:	ldr	w8, [x25, #40]!
  405490:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405494:	and	w9, w8, #0xf000
  405498:	cmp	w9, #0xa, lsl #12
  40549c:	b.ne	405610 <__fxstatat@plt+0x2a70>  // b.any
  4054a0:	ldr	w9, [x26, #1556]
  4054a4:	cbz	w9, 4054b8 <__fxstatat@plt+0x2918>
  4054a8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4054ac:	ldrb	w9, [x9, #1554]
  4054b0:	cmp	w9, #0x1
  4054b4:	b.ne	405610 <__fxstatat@plt+0x2a70>  // b.any
  4054b8:	mov	w8, #0xb8                  	// #184
  4054bc:	madd	x23, x28, x8, x27
  4054c0:	ldr	x1, [x23, #72]
  4054c4:	mov	x0, x24
  4054c8:	bl	40a5b0 <__fxstatat@plt+0x7a10>
  4054cc:	mov	x26, x0
  4054d0:	str	x0, [x23, #8]!
  4054d4:	str	x25, [x19, #8]
  4054d8:	cbnz	x0, 405508 <__fxstatat@plt+0x2968>
  4054dc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4054e0:	add	x1, x1, #0x2e2
  4054e4:	mov	w2, #0x5                   	// #5
  4054e8:	bl	402ac0 <dcgettext@plt>
  4054ec:	ldr	w8, [x19, #36]
  4054f0:	mov	x1, x0
  4054f4:	mov	x2, x24
  4054f8:	and	w0, w8, #0x1
  4054fc:	bl	4072c4 <__fxstatat@plt+0x4724>
  405500:	ldr	x26, [x23]
  405504:	cbz	x26, 4055f8 <__fxstatat@plt+0x2a58>
  405508:	ldrb	w8, [x26]
  40550c:	cmp	w8, #0x2f
  405510:	b.ne	405524 <__fxstatat@plt+0x2984>  // b.any
  405514:	mov	x0, x26
  405518:	bl	4113e8 <__fxstatat@plt+0xe848>
  40551c:	mov	x25, x0
  405520:	b	405580 <__fxstatat@plt+0x29e0>
  405524:	mov	x0, x24
  405528:	bl	40b220 <__fxstatat@plt+0x8680>
  40552c:	cbz	x0, 405570 <__fxstatat@plt+0x29d0>
  405530:	mov	x27, x0
  405534:	mov	x0, x26
  405538:	bl	402540 <strlen@plt>
  40553c:	add	x8, x27, x0
  405540:	add	x0, x8, #0x2
  405544:	bl	4111f4 <__fxstatat@plt+0xe654>
  405548:	add	x8, x27, x24
  40554c:	ldurb	w8, [x8, #-1]
  405550:	mov	x1, x24
  405554:	mov	x25, x0
  405558:	cmp	w8, #0x2f
  40555c:	cinc	x2, x27, ne  // ne = any
  405560:	bl	402910 <stpncpy@plt>
  405564:	mov	x1, x26
  405568:	bl	4026b0 <stpcpy@plt>
  40556c:	b	40557c <__fxstatat@plt+0x29dc>
  405570:	mov	x0, x26
  405574:	bl	4113e8 <__fxstatat@plt+0xe848>
  405578:	mov	x25, x0
  40557c:	ldr	x27, [x19, #40]
  405580:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405584:	cbz	x25, 405600 <__fxstatat@plt+0x2a60>
  405588:	ldr	x8, [x19, #16]
  40558c:	ldr	w8, [x8]
  405590:	cbnz	w8, 4055ac <__fxstatat@plt+0x2a0c>
  405594:	ldr	x0, [x23]
  405598:	bl	407b0c <__fxstatat@plt+0x4f6c>
  40559c:	tbz	w0, #0, 4055ac <__fxstatat@plt+0x2a0c>
  4055a0:	ldr	x9, [x19, #16]
  4055a4:	mov	w8, #0xffffffff            	// #-1
  4055a8:	str	w8, [x9]
  4055ac:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4055b0:	ldr	w8, [x8, #1568]
  4055b4:	cmp	w8, #0x1
  4055b8:	b.hi	4055cc <__fxstatat@plt+0x2a2c>  // b.pmore
  4055bc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4055c0:	ldrb	w8, [x8, #1554]
  4055c4:	cmp	w8, #0x1
  4055c8:	b.ne	405600 <__fxstatat@plt+0x2a60>  // b.any
  4055cc:	add	x1, x19, #0x48
  4055d0:	mov	x0, x25
  4055d4:	bl	414190 <_obstack_memory_used@@Base+0x1ed8>
  4055d8:	cbnz	w0, 405600 <__fxstatat@plt+0x2a60>
  4055dc:	mov	w8, #0xb8                  	// #184
  4055e0:	madd	x8, x28, x8, x27
  4055e4:	mov	w9, #0x1                   	// #1
  4055e8:	strb	w9, [x8, #169]
  4055ec:	ldr	w9, [x19, #88]
  4055f0:	str	w9, [x8, #156]
  4055f4:	b	405600 <__fxstatat@plt+0x2a60>
  4055f8:	mov	x25, xzr
  4055fc:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405600:	mov	x0, x25
  405604:	bl	402990 <free@plt>
  405608:	ldr	x25, [x19, #8]
  40560c:	ldr	w8, [x25]
  405610:	and	w8, w8, #0xf000
  405614:	cmp	w8, #0xa, lsl #12
  405618:	b.eq	405644 <__fxstatat@plt+0x2aa4>  // b.none
  40561c:	cmp	w8, #0x4, lsl #12
  405620:	b.ne	40564c <__fxstatat@plt+0x2aac>  // b.any
  405624:	ldr	w8, [x19, #36]
  405628:	tbz	w8, #0, 40563c <__fxstatat@plt+0x2a9c>
  40562c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405630:	ldrb	w8, [x8, #1564]
  405634:	cmp	w8, #0x1
  405638:	b.ne	405654 <__fxstatat@plt+0x2ab4>  // b.any
  40563c:	mov	w8, #0x3                   	// #3
  405640:	b	405658 <__fxstatat@plt+0x2ab8>
  405644:	mov	w8, #0x6                   	// #6
  405648:	b	405658 <__fxstatat@plt+0x2ab8>
  40564c:	mov	w8, #0x5                   	// #5
  405650:	b	405658 <__fxstatat@plt+0x2ab8>
  405654:	mov	w8, #0x9                   	// #9
  405658:	ldr	x9, [x19, #24]
  40565c:	str	w8, [x9]
  405660:	mov	w8, #0xb8                  	// #184
  405664:	madd	x8, x28, x8, x27
  405668:	ldr	w9, [x26, #1556]
  40566c:	ldr	x24, [x8, #88]
  405670:	cbz	w9, 405684 <__fxstatat@plt+0x2ae4>
  405674:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405678:	ldrb	w8, [x8, #1685]
  40567c:	cmp	w8, #0x1
  405680:	b.ne	40577c <__fxstatat@plt+0x2bdc>  // b.any
  405684:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405688:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40568c:	ldr	w2, [x8, #2380]
  405690:	ldr	x4, [x9, #2392]
  405694:	add	x1, x19, #0x48
  405698:	mov	w3, #0x200                 	// #512
  40569c:	mov	x0, x24
  4056a0:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  4056a4:	mov	w1, wzr
  4056a8:	bl	40db9c <__fxstatat@plt+0xaffc>
  4056ac:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4056b0:	ldr	w9, [x8, #1456]
  4056b4:	cmp	w9, w0
  4056b8:	b.ge	4056c0 <__fxstatat@plt+0x2b20>  // b.tcont
  4056bc:	str	w0, [x8, #1456]
  4056c0:	ldr	w8, [x26, #1556]
  4056c4:	cbnz	w8, 40577c <__fxstatat@plt+0x2bdc>
  4056c8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4056cc:	ldrb	w8, [x8, #2376]
  4056d0:	tbnz	w8, #0, 4056f8 <__fxstatat@plt+0x2b58>
  4056d4:	mov	w8, #0xb8                  	// #184
  4056d8:	madd	x8, x28, x8, x27
  4056dc:	ldr	w0, [x8, #48]
  4056e0:	bl	407b78 <__fxstatat@plt+0x4fd8>
  4056e4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4056e8:	ldr	w9, [x8, #1464]
  4056ec:	cmp	w9, w0
  4056f0:	b.ge	4056f8 <__fxstatat@plt+0x2b58>  // b.tcont
  4056f4:	str	w0, [x8, #1464]
  4056f8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4056fc:	ldrb	w8, [x8, #2400]
  405700:	tbnz	w8, #0, 405748 <__fxstatat@plt+0x2ba8>
  405704:	mov	w8, #0xb8                  	// #184
  405708:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40570c:	madd	x8, x28, x8, x27
  405710:	ldrb	w9, [x9, #2337]
  405714:	ldr	w23, [x8, #52]
  405718:	tbz	w9, #0, 405724 <__fxstatat@plt+0x2b84>
  40571c:	mov	x0, xzr
  405720:	b	40572c <__fxstatat@plt+0x2b8c>
  405724:	mov	w0, w23
  405728:	bl	40d4ec <__fxstatat@plt+0xa94c>
  40572c:	mov	x1, x23
  405730:	bl	407bb4 <__fxstatat@plt+0x5014>
  405734:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405738:	ldr	w9, [x8, #1468]
  40573c:	cmp	w9, w0
  405740:	b.ge	405748 <__fxstatat@plt+0x2ba8>  // b.tcont
  405744:	str	w0, [x8, #1468]
  405748:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40574c:	ldrb	w8, [x8, #2401]
  405750:	cmp	w8, #0x1
  405754:	b.ne	40577c <__fxstatat@plt+0x2bdc>  // b.any
  405758:	mov	w8, #0xb8                  	// #184
  40575c:	madd	x8, x28, x8, x27
  405760:	ldr	w0, [x8, #48]
  405764:	bl	407b78 <__fxstatat@plt+0x4fd8>
  405768:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40576c:	ldr	w9, [x8, #1472]
  405770:	cmp	w9, w0
  405774:	b.ge	40577c <__fxstatat@plt+0x2bdc>  // b.tcont
  405778:	str	w0, [x8, #1472]
  40577c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405780:	ldrb	w8, [x8, #1684]
  405784:	cmp	w8, #0x1
  405788:	b.ne	4057b0 <__fxstatat@plt+0x2c10>  // b.any
  40578c:	mov	w8, #0xb8                  	// #184
  405790:	madd	x8, x28, x8, x27
  405794:	ldr	x0, [x8, #160]
  405798:	bl	402540 <strlen@plt>
  40579c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4057a0:	ldr	w9, [x8, #1476]
  4057a4:	cmp	w9, w0
  4057a8:	b.ge	4057b0 <__fxstatat@plt+0x2c10>  // b.tcont
  4057ac:	str	w0, [x8, #1476]
  4057b0:	ldr	w8, [x26, #1556]
  4057b4:	cbnz	w8, 4058d4 <__fxstatat@plt+0x2d34>
  4057b8:	mov	w8, #0xb8                  	// #184
  4057bc:	madd	x8, x28, x8, x27
  4057c0:	ldr	w0, [x8, #44]
  4057c4:	add	x1, x19, #0x30
  4057c8:	bl	40d70c <__fxstatat@plt+0xab6c>
  4057cc:	bl	402540 <strlen@plt>
  4057d0:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4057d4:	ldr	w9, [x8, #1460]
  4057d8:	cmp	w9, w0
  4057dc:	b.ge	4057e4 <__fxstatat@plt+0x2c44>  // b.tcont
  4057e0:	str	w0, [x8, #1460]
  4057e4:	ldr	w8, [x25]
  4057e8:	and	w8, w8, #0xf000
  4057ec:	orr	w8, w8, #0x4000
  4057f0:	cmp	w8, #0x6, lsl #12
  4057f4:	b.ne	405890 <__fxstatat@plt+0x2cf0>  // b.any
  4057f8:	mov	w8, #0xb8                  	// #184
  4057fc:	mov	x23, x22
  405800:	madd	x22, x28, x8, x27
  405804:	ldr	x0, [x22, #56]!
  405808:	mov	x25, x20
  40580c:	bl	4028e0 <gnu_dev_major@plt>
  405810:	mov	w0, w0
  405814:	add	x1, x19, #0x48
  405818:	bl	40d70c <__fxstatat@plt+0xab6c>
  40581c:	bl	402540 <strlen@plt>
  405820:	adrp	x20, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405824:	ldr	w8, [x20, #1480]
  405828:	cmp	w8, w0
  40582c:	b.ge	405834 <__fxstatat@plt+0x2c94>  // b.tcont
  405830:	str	w0, [x20, #1480]
  405834:	ldr	x0, [x22]
  405838:	bl	402a00 <gnu_dev_minor@plt>
  40583c:	mov	w0, w0
  405840:	add	x1, x19, #0x48
  405844:	bl	40d70c <__fxstatat@plt+0xab6c>
  405848:	bl	402540 <strlen@plt>
  40584c:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405850:	ldr	w8, [x9, #1484]
  405854:	cmp	w8, w0
  405858:	b.ge	405864 <__fxstatat@plt+0x2cc4>  // b.tcont
  40585c:	mov	w8, w0
  405860:	str	w0, [x9, #1484]
  405864:	ldr	w10, [x20, #1480]
  405868:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40586c:	ldr	w11, [x9, #1488]
  405870:	mov	x22, x23
  405874:	add	w8, w10, w8
  405878:	add	w8, w8, #0x2
  40587c:	cmp	w11, w8
  405880:	b.ge	405888 <__fxstatat@plt+0x2ce8>  // b.tcont
  405884:	str	w8, [x9, #1488]
  405888:	mov	x20, x25
  40588c:	b	4058d4 <__fxstatat@plt+0x2d34>
  405890:	mov	w8, #0xb8                  	// #184
  405894:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405898:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40589c:	madd	x8, x28, x8, x27
  4058a0:	ldr	w2, [x9, #2384]
  4058a4:	ldr	x0, [x8, #72]
  4058a8:	ldr	x4, [x10, #1288]
  4058ac:	add	x1, x19, #0x48
  4058b0:	mov	w3, #0x1                   	// #1
  4058b4:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  4058b8:	mov	w1, wzr
  4058bc:	bl	40db9c <__fxstatat@plt+0xaffc>
  4058c0:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4058c4:	ldr	w9, [x8, #1488]
  4058c8:	cmp	w9, w0
  4058cc:	b.ge	4058d4 <__fxstatat@plt+0x2d34>  // b.tcont
  4058d0:	str	w0, [x8, #1488]
  4058d4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4058d8:	ldrb	w8, [x8, #2338]
  4058dc:	cmp	w8, #0x1
  4058e0:	b.ne	405908 <__fxstatat@plt+0x2d68>  // b.any
  4058e4:	ldr	x0, [x20]
  4058e8:	add	x1, x19, #0x48
  4058ec:	bl	40d70c <__fxstatat@plt+0xab6c>
  4058f0:	bl	402540 <strlen@plt>
  4058f4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4058f8:	ldr	w9, [x8, #1452]
  4058fc:	cmp	w9, w0
  405900:	b.ge	405908 <__fxstatat@plt+0x2d68>  // b.tcont
  405904:	str	w0, [x8, #1452]
  405908:	mov	x0, x21
  40590c:	bl	4113e8 <__fxstatat@plt+0xe848>
  405910:	str	x0, [x22]
  405914:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405918:	ldr	x8, [x9, #1904]
  40591c:	add	x8, x8, #0x1
  405920:	str	x8, [x9, #1904]
  405924:	mov	x0, x24
  405928:	mov	sp, x29
  40592c:	ldp	x20, x19, [sp, #80]
  405930:	ldp	x22, x21, [sp, #64]
  405934:	ldp	x24, x23, [sp, #48]
  405938:	ldp	x26, x25, [sp, #32]
  40593c:	ldp	x28, x27, [sp, #16]
  405940:	ldp	x29, x30, [sp], #96
  405944:	ret
  405948:	bl	411430 <__fxstatat@plt+0xe890>
  40594c:	stp	x29, x30, [sp, #-48]!
  405950:	stp	x20, x19, [sp, #32]
  405954:	mov	x20, x0
  405958:	mov	w0, #0x20                  	// #32
  40595c:	stp	x22, x21, [sp, #16]
  405960:	mov	x29, sp
  405964:	mov	x21, x1
  405968:	and	w22, w2, #0x1
  40596c:	bl	4111f4 <__fxstatat@plt+0xe654>
  405970:	mov	x19, x0
  405974:	cbz	x21, 405984 <__fxstatat@plt+0x2de4>
  405978:	mov	x0, x21
  40597c:	bl	4113e8 <__fxstatat@plt+0xe848>
  405980:	b	405988 <__fxstatat@plt+0x2de8>
  405984:	mov	x0, xzr
  405988:	str	x0, [x19, #8]
  40598c:	cbz	x20, 40599c <__fxstatat@plt+0x2dfc>
  405990:	mov	x0, x20
  405994:	bl	4113e8 <__fxstatat@plt+0xe848>
  405998:	b	4059a0 <__fxstatat@plt+0x2e00>
  40599c:	mov	x0, xzr
  4059a0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4059a4:	ldr	x9, [x8, #1528]
  4059a8:	str	x0, [x19]
  4059ac:	strb	w22, [x19, #16]
  4059b0:	str	x19, [x8, #1528]
  4059b4:	str	x9, [x19, #24]
  4059b8:	ldp	x20, x19, [sp, #32]
  4059bc:	ldp	x22, x21, [sp, #16]
  4059c0:	ldp	x29, x30, [sp], #48
  4059c4:	ret
  4059c8:	stp	x29, x30, [sp, #-48]!
  4059cc:	stp	x20, x19, [sp, #32]
  4059d0:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4059d4:	str	x21, [sp, #16]
  4059d8:	adrp	x21, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4059dc:	ldr	x8, [x20, #1904]
  4059e0:	ldr	x9, [x21, #1520]
  4059e4:	adrp	x19, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4059e8:	mov	x29, sp
  4059ec:	add	x10, x8, x8, lsr #1
  4059f0:	cmp	x9, x10
  4059f4:	b.cs	405a34 <__fxstatat@plt+0x2e94>  // b.hs, b.nlast
  4059f8:	ldr	x0, [x19, #1440]
  4059fc:	bl	402990 <free@plt>
  405a00:	ldr	x8, [x20, #1904]
  405a04:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  405a08:	movk	x9, #0x5556
  405a0c:	movk	x9, #0x555, lsl #48
  405a10:	cmp	x8, x9
  405a14:	b.cs	405b1c <__fxstatat@plt+0x2f7c>  // b.hs, b.nlast
  405a18:	add	x8, x8, x8, lsl #1
  405a1c:	lsl	x0, x8, #3
  405a20:	bl	4111f4 <__fxstatat@plt+0xe654>
  405a24:	ldr	x8, [x20, #1904]
  405a28:	str	x0, [x19, #1440]
  405a2c:	add	x9, x8, x8, lsl #1
  405a30:	str	x9, [x21, #1520]
  405a34:	cbz	x8, 405a54 <__fxstatat@plt+0x2eb4>
  405a38:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405a3c:	ldr	x9, [x9, #1896]
  405a40:	ldr	x10, [x19, #1440]
  405a44:	str	x9, [x10], #8
  405a48:	subs	x8, x8, #0x1
  405a4c:	add	x9, x9, #0xb8
  405a50:	b.ne	405a44 <__fxstatat@plt+0x2ea4>  // b.any
  405a54:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405a58:	ldr	w8, [x21, #1680]
  405a5c:	cmn	w8, #0x1
  405a60:	b.eq	405b0c <__fxstatat@plt+0x2f6c>  // b.none
  405a64:	adrp	x0, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405a68:	add	x0, x0, #0x5f8
  405a6c:	bl	402590 <_setjmp@plt>
  405a70:	cbz	w0, 405ab4 <__fxstatat@plt+0x2f14>
  405a74:	ldr	w8, [x21, #1680]
  405a78:	cmp	w8, #0x3
  405a7c:	b.eq	405b20 <__fxstatat@plt+0x2f80>  // b.none
  405a80:	ldr	x1, [x20, #1904]
  405a84:	cbz	x1, 405ac4 <__fxstatat@plt+0x2f24>
  405a88:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405a8c:	ldr	x11, [x9, #1896]
  405a90:	ldr	x12, [x19, #1440]
  405a94:	mov	x10, xzr
  405a98:	mov	w9, #0x1                   	// #1
  405a9c:	str	x11, [x12, x10, lsl #3]
  405aa0:	add	x10, x10, #0x1
  405aa4:	cmp	x1, x10
  405aa8:	add	x11, x11, #0xb8
  405aac:	b.ne	405a9c <__fxstatat@plt+0x2efc>  // b.any
  405ab0:	b	405ac8 <__fxstatat@plt+0x2f28>
  405ab4:	ldr	x1, [x20, #1904]
  405ab8:	ldr	w8, [x21, #1680]
  405abc:	mov	x9, xzr
  405ac0:	b	405ac8 <__fxstatat@plt+0x2f28>
  405ac4:	mov	w9, #0x1                   	// #1
  405ac8:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405acc:	ldr	w10, [x10, #2332]
  405ad0:	cmp	w8, #0x4
  405ad4:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405ad8:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405adc:	csel	w10, w10, wzr, eq  // eq = none
  405ae0:	ldrb	w11, [x11, #2336]
  405ae4:	add	w8, w10, w8
  405ae8:	adrp	x10, 415000 <_obstack_memory_used@@Base+0x2d48>
  405aec:	ldrb	w12, [x12, #1553]
  405af0:	add	x10, x10, #0xc98
  405af4:	add	x8, x10, x8, lsl #6
  405af8:	add	x8, x8, x9, lsl #5
  405afc:	add	x8, x8, x11, lsl #4
  405b00:	ldr	x0, [x19, #1440]
  405b04:	ldr	x2, [x8, x12, lsl #3]
  405b08:	bl	40dd60 <__fxstatat@plt+0xb1c0>
  405b0c:	ldp	x20, x19, [sp, #32]
  405b10:	ldr	x21, [sp, #16]
  405b14:	ldp	x29, x30, [sp], #48
  405b18:	ret
  405b1c:	bl	411430 <__fxstatat@plt+0xe890>
  405b20:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  405b24:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  405b28:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  405b2c:	add	x0, x0, #0x2ff
  405b30:	add	x1, x1, #0xf43
  405b34:	add	x3, x3, #0x319
  405b38:	mov	w2, #0xeea                 	// #3818
  405b3c:	bl	402b20 <__assert_fail@plt>
  405b40:	stp	x29, x30, [sp, #-80]!
  405b44:	stp	x20, x19, [sp, #64]
  405b48:	mov	w19, w1
  405b4c:	mov	x20, x0
  405b50:	stp	x26, x25, [sp, #16]
  405b54:	stp	x24, x23, [sp, #32]
  405b58:	stp	x22, x21, [sp, #48]
  405b5c:	mov	x29, sp
  405b60:	cbz	x0, 405b9c <__fxstatat@plt+0x2ffc>
  405b64:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405b68:	ldr	x8, [x8, #1576]
  405b6c:	cbz	x8, 405b9c <__fxstatat@plt+0x2ffc>
  405b70:	mov	w0, #0x20                  	// #32
  405b74:	bl	4111f4 <__fxstatat@plt+0xe654>
  405b78:	mov	x21, x0
  405b7c:	mov	x0, x20
  405b80:	bl	4113e8 <__fxstatat@plt+0xe848>
  405b84:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405b88:	ldr	x9, [x8, #1528]
  405b8c:	stp	xzr, x0, [x21]
  405b90:	strb	wzr, [x21, #16]
  405b94:	str	x21, [x8, #1528]
  405b98:	str	x9, [x21, #24]
  405b9c:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405ba0:	ldr	x8, [x23, #1904]
  405ba4:	cbz	x8, 405ca4 <__fxstatat@plt+0x3104>
  405ba8:	sub	x25, x8, #0x1
  405bac:	adrp	x24, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405bb0:	mov	w26, #0x1                   	// #1
  405bb4:	ldr	x8, [x24, #1440]
  405bb8:	ldr	x21, [x8, x25, lsl #3]
  405bbc:	ldr	w8, [x21, #152]
  405bc0:	cmp	w8, #0x9
  405bc4:	ccmp	w8, #0x3, #0x4, ne  // ne = any
  405bc8:	b.ne	405c60 <__fxstatat@plt+0x30c0>  // b.any
  405bcc:	ldr	x22, [x21]
  405bd0:	cbz	x20, 405c10 <__fxstatat@plt+0x3070>
  405bd4:	mov	x0, x22
  405bd8:	bl	40b2e4 <__fxstatat@plt+0x8744>
  405bdc:	ldrb	w8, [x0]
  405be0:	cmp	w8, #0x2e
  405be4:	b.ne	405c04 <__fxstatat@plt+0x3064>  // b.any
  405be8:	ldrb	w8, [x0, #1]
  405bec:	cmp	w8, #0x2e
  405bf0:	cinc	x8, x26, eq  // eq = none
  405bf4:	ldrb	w8, [x0, x8]
  405bf8:	cbz	w8, 405c60 <__fxstatat@plt+0x30c0>
  405bfc:	cmp	w8, #0x2f
  405c00:	b.eq	405c60 <__fxstatat@plt+0x30c0>  // b.none
  405c04:	ldrb	w8, [x22]
  405c08:	cmp	w8, #0x2f
  405c0c:	b.ne	405c24 <__fxstatat@plt+0x3084>  // b.any
  405c10:	ldr	x1, [x21, #8]
  405c14:	and	w2, w19, #0x1
  405c18:	mov	x0, x22
  405c1c:	bl	40594c <__fxstatat@plt+0x2dac>
  405c20:	b	405c4c <__fxstatat@plt+0x30ac>
  405c24:	mov	x0, x20
  405c28:	mov	x1, x22
  405c2c:	mov	x2, xzr
  405c30:	bl	40b618 <__fxstatat@plt+0x8a78>
  405c34:	ldr	x1, [x21, #8]
  405c38:	and	w2, w19, #0x1
  405c3c:	mov	x22, x0
  405c40:	bl	40594c <__fxstatat@plt+0x2dac>
  405c44:	mov	x0, x22
  405c48:	bl	402990 <free@plt>
  405c4c:	ldr	w8, [x21, #152]
  405c50:	cmp	w8, #0x9
  405c54:	b.ne	405c60 <__fxstatat@plt+0x30c0>  // b.any
  405c58:	mov	x0, x21
  405c5c:	bl	407adc <__fxstatat@plt+0x4f3c>
  405c60:	sub	x25, x25, #0x1
  405c64:	cmn	x25, #0x1
  405c68:	b.ne	405bb4 <__fxstatat@plt+0x3014>  // b.any
  405c6c:	ldr	x8, [x23, #1904]
  405c70:	cbz	x8, 405ca4 <__fxstatat@plt+0x3104>
  405c74:	ldr	x11, [x24, #1440]
  405c78:	mov	x10, xzr
  405c7c:	mov	x9, xzr
  405c80:	ldr	x12, [x11, x10, lsl #3]
  405c84:	add	x10, x10, #0x1
  405c88:	str	x12, [x11, x9, lsl #3]
  405c8c:	ldr	w12, [x12, #152]
  405c90:	cmp	w12, #0x9
  405c94:	cinc	x9, x9, ne  // ne = any
  405c98:	cmp	x10, x8
  405c9c:	b.cc	405c80 <__fxstatat@plt+0x30e0>  // b.lo, b.ul, b.last
  405ca0:	b	405ca8 <__fxstatat@plt+0x3108>
  405ca4:	mov	x9, xzr
  405ca8:	str	x9, [x23, #1904]
  405cac:	ldp	x20, x19, [sp, #64]
  405cb0:	ldp	x22, x21, [sp, #48]
  405cb4:	ldp	x24, x23, [sp, #32]
  405cb8:	ldp	x26, x25, [sp, #16]
  405cbc:	ldp	x29, x30, [sp], #80
  405cc0:	ret
  405cc4:	stp	x29, x30, [sp, #-96]!
  405cc8:	stp	x28, x27, [sp, #16]
  405ccc:	stp	x26, x25, [sp, #32]
  405cd0:	stp	x24, x23, [sp, #48]
  405cd4:	stp	x22, x21, [sp, #64]
  405cd8:	stp	x20, x19, [sp, #80]
  405cdc:	mov	x29, sp
  405ce0:	sub	sp, sp, #0x1, lsl #12
  405ce4:	sub	sp, sp, #0x2e0
  405ce8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405cec:	ldr	w8, [x8, #1556]
  405cf0:	cmp	w8, #0x4
  405cf4:	b.hi	406668 <__fxstatat@plt+0x3ac8>  // b.pmore
  405cf8:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x1d48>
  405cfc:	add	x9, x9, #0x2e2
  405d00:	adr	x10, 405d10 <__fxstatat@plt+0x3170>
  405d04:	ldrh	w11, [x9, x8, lsl #1]
  405d08:	add	x10, x10, x11, lsl #2
  405d0c:	br	x10
  405d10:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405d14:	ldr	x8, [x8, #1904]
  405d18:	cbz	x8, 406668 <__fxstatat@plt+0x3ac8>
  405d1c:	add	x8, sp, #0xea0
  405d20:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x5d48>
  405d24:	mov	x20, xzr
  405d28:	adrp	x25, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405d2c:	adrp	x21, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405d30:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405d34:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405d38:	add	x19, x19, #0x166
  405d3c:	orr	x8, x8, #0x1
  405d40:	str	x8, [sp, #8]
  405d44:	bl	409af8 <__fxstatat@plt+0x6f58>
  405d48:	ldr	x8, [x25, #1440]
  405d4c:	ldr	x26, [x8, x20, lsl #3]
  405d50:	ldrb	w8, [x26, #168]
  405d54:	cbz	w8, 405d68 <__fxstatat@plt+0x31c8>
  405d58:	add	x0, x26, #0x18
  405d5c:	add	x1, sp, #0xea0
  405d60:	bl	40b610 <__fxstatat@plt+0x8a70>
  405d64:	b	405d90 <__fxstatat@plt+0x31f0>
  405d68:	ldr	w8, [x26, #152]
  405d6c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  405d70:	add	x9, x9, #0x32f
  405d74:	ldrb	w8, [x9, x8]
  405d78:	ldr	x9, [sp, #8]
  405d7c:	strb	w8, [sp, #3744]
  405d80:	mov	x8, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  405d84:	strh	w8, [x9, #8]
  405d88:	str	x8, [x9]
  405d8c:	strb	wzr, [sp, #3755]
  405d90:	ldrb	w8, [x21, #1448]
  405d94:	cbz	w8, 405db8 <__fxstatat@plt+0x3218>
  405d98:	ldr	w8, [x26, #172]
  405d9c:	cmp	w8, #0x1
  405da0:	b.eq	405db4 <__fxstatat@plt+0x3214>  // b.none
  405da4:	cmp	w8, #0x2
  405da8:	b.ne	405dbc <__fxstatat@plt+0x321c>  // b.any
  405dac:	mov	w8, #0x2b                  	// #43
  405db0:	b	405db8 <__fxstatat@plt+0x3218>
  405db4:	mov	w8, #0x2e                  	// #46
  405db8:	strb	w8, [sp, #3754]
  405dbc:	ldr	w8, [x22, #2332]
  405dc0:	cbz	w8, 405de4 <__fxstatat@plt+0x3244>
  405dc4:	cmp	w8, #0x2
  405dc8:	b.eq	405ddc <__fxstatat@plt+0x323c>  // b.none
  405dcc:	cmp	w8, #0x1
  405dd0:	b.ne	4067ac <__fxstatat@plt+0x3c0c>  // b.any
  405dd4:	ldp	x9, x8, [x26, #128]
  405dd8:	b	405de8 <__fxstatat@plt+0x3248>
  405ddc:	ldp	x9, x8, [x26, #96]
  405de0:	b	405de8 <__fxstatat@plt+0x3248>
  405de4:	ldp	x9, x8, [x26, #112]
  405de8:	stp	x9, x8, [sp, #80]
  405dec:	ldrb	w9, [x24, #2338]
  405df0:	cmp	w9, #0x1
  405df4:	b.ne	405e20 <__fxstatat@plt+0x3280>  // b.any
  405df8:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405dfc:	ldrb	w8, [x26, #168]
  405e00:	ldr	w27, [x9, #1452]
  405e04:	cbz	w8, 405e28 <__fxstatat@plt+0x3288>
  405e08:	ldr	x0, [x26, #32]
  405e0c:	cbz	x0, 405e28 <__fxstatat@plt+0x3288>
  405e10:	add	x1, sp, #0xeac
  405e14:	bl	40d70c <__fxstatat@plt+0xab6c>
  405e18:	mov	x5, x0
  405e1c:	b	405e2c <__fxstatat@plt+0x328c>
  405e20:	add	x27, sp, #0x64
  405e24:	b	405e58 <__fxstatat@plt+0x32b8>
  405e28:	mov	x5, x19
  405e2c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  405e30:	add	x0, sp, #0x64
  405e34:	mov	w1, #0x1                   	// #1
  405e38:	mov	w2, #0xe3b                 	// #3643
  405e3c:	add	x3, x3, #0x347
  405e40:	mov	w4, w27
  405e44:	bl	402560 <__sprintf_chk@plt>
  405e48:	add	x0, sp, #0x64
  405e4c:	bl	402540 <strlen@plt>
  405e50:	add	x8, sp, #0x64
  405e54:	add	x27, x8, x0
  405e58:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405e5c:	ldrb	w8, [x8, #1685]
  405e60:	cmp	w8, #0x1
  405e64:	b.ne	405ee8 <__fxstatat@plt+0x3348>  // b.any
  405e68:	ldrb	w8, [x26, #168]
  405e6c:	cbz	w8, 405e98 <__fxstatat@plt+0x32f8>
  405e70:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405e74:	ldr	w2, [x8, #2380]
  405e78:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405e7c:	ldr	x0, [x26, #88]
  405e80:	ldr	x4, [x8, #2392]
  405e84:	add	x1, sp, #0xeac
  405e88:	mov	w3, #0x200                 	// #512
  405e8c:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  405e90:	mov	x28, x0
  405e94:	b	405e9c <__fxstatat@plt+0x32fc>
  405e98:	mov	x28, x19
  405e9c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405ea0:	ldr	w23, [x8, #1456]
  405ea4:	mov	x0, x28
  405ea8:	mov	w1, wzr
  405eac:	bl	40db9c <__fxstatat@plt+0xaffc>
  405eb0:	sub	w8, w23, w0
  405eb4:	subs	w23, w8, #0x1
  405eb8:	b.lt	405ed4 <__fxstatat@plt+0x3334>  // b.tstop
  405ebc:	add	x2, x23, #0x1
  405ec0:	mov	w1, #0x20                  	// #32
  405ec4:	mov	x0, x27
  405ec8:	bl	4027c0 <memset@plt>
  405ecc:	add	x8, x27, x23
  405ed0:	add	x27, x8, #0x1
  405ed4:	ldrb	w8, [x28], #1
  405ed8:	strb	w8, [x27], #1
  405edc:	cbnz	w8, 405ed4 <__fxstatat@plt+0x3334>
  405ee0:	mov	w8, #0x20                  	// #32
  405ee4:	sturb	w8, [x27, #-1]
  405ee8:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405eec:	ldrb	w8, [x26, #168]
  405ef0:	ldr	w28, [x9, #1460]
  405ef4:	cbz	w8, 405f0c <__fxstatat@plt+0x336c>
  405ef8:	ldr	w0, [x26, #44]
  405efc:	add	x1, sp, #0xeac
  405f00:	bl	40d70c <__fxstatat@plt+0xab6c>
  405f04:	mov	x6, x0
  405f08:	b	405f10 <__fxstatat@plt+0x3370>
  405f0c:	mov	x6, x19
  405f10:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  405f14:	add	x4, sp, #0xea0
  405f18:	mov	w1, #0x1                   	// #1
  405f1c:	mov	x2, #0xffffffffffffffff    	// #-1
  405f20:	mov	x0, x27
  405f24:	add	x3, x3, #0x33a
  405f28:	mov	w5, w28
  405f2c:	bl	402560 <__sprintf_chk@plt>
  405f30:	mov	x0, x27
  405f34:	bl	402540 <strlen@plt>
  405f38:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405f3c:	ldrb	w8, [x8, #1693]
  405f40:	mov	x28, x0
  405f44:	cmp	w8, #0x1
  405f48:	b.ne	405f70 <__fxstatat@plt+0x33d0>  // b.any
  405f4c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405f50:	ldr	x1, [x8, #1488]
  405f54:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  405f58:	add	x0, x0, #0x264
  405f5c:	bl	402ad0 <fputs_unlocked@plt>
  405f60:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405f64:	ldr	x8, [x9, #1912]
  405f68:	add	x8, x8, #0x2
  405f6c:	str	x8, [x9, #1912]
  405f70:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405f74:	ldrb	w8, [x8, #2376]
  405f78:	add	x27, x27, x28
  405f7c:	cmp	w8, #0x1
  405f80:	b.ne	405fb0 <__fxstatat@plt+0x3410>  // b.any
  405f84:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405f88:	ldrb	w8, [x8, #2400]
  405f8c:	cmp	w8, #0x1
  405f90:	b.ne	405fb0 <__fxstatat@plt+0x3410>  // b.any
  405f94:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405f98:	ldrb	w8, [x8, #2401]
  405f9c:	tbnz	w8, #0, 405fb0 <__fxstatat@plt+0x3410>
  405fa0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405fa4:	ldrb	w8, [x8, #1684]
  405fa8:	cmp	w8, #0x1
  405fac:	b.ne	40609c <__fxstatat@plt+0x34fc>  // b.any
  405fb0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405fb4:	ldr	x1, [x8, #1488]
  405fb8:	add	x0, sp, #0x64
  405fbc:	bl	402ad0 <fputs_unlocked@plt>
  405fc0:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405fc4:	ldr	x8, [x11, #1912]
  405fc8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405fcc:	ldrb	w9, [x9, #2376]
  405fd0:	add	x10, sp, #0x64
  405fd4:	sub	x10, x27, x10
  405fd8:	add	x8, x10, x8
  405fdc:	str	x8, [x11, #1912]
  405fe0:	tbnz	w9, #0, 405ff8 <__fxstatat@plt+0x3458>
  405fe4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  405fe8:	ldr	w0, [x26, #48]
  405fec:	ldr	w1, [x8, #1464]
  405ff0:	ldrb	w2, [x26, #168]
  405ff4:	bl	40a4b8 <__fxstatat@plt+0x7918>
  405ff8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  405ffc:	ldrb	w8, [x8, #2400]
  406000:	tbnz	w8, #0, 406048 <__fxstatat@plt+0x34a8>
  406004:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  406008:	ldr	w27, [x26, #52]
  40600c:	ldrb	w8, [x26, #168]
  406010:	ldr	w28, [x9, #1468]
  406014:	cbz	w8, 40602c <__fxstatat@plt+0x348c>
  406018:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40601c:	ldrb	w8, [x8, #2337]
  406020:	tbz	w8, #0, 406034 <__fxstatat@plt+0x3494>
  406024:	mov	x0, xzr
  406028:	b	40603c <__fxstatat@plt+0x349c>
  40602c:	mov	x0, x19
  406030:	b	40603c <__fxstatat@plt+0x349c>
  406034:	mov	w0, w27
  406038:	bl	40d4ec <__fxstatat@plt+0xa94c>
  40603c:	mov	x1, x27
  406040:	mov	w2, w28
  406044:	bl	40a50c <__fxstatat@plt+0x796c>
  406048:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40604c:	ldrb	w8, [x8, #2401]
  406050:	cmp	w8, #0x1
  406054:	b.ne	40606c <__fxstatat@plt+0x34cc>  // b.any
  406058:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40605c:	ldr	w0, [x26, #48]
  406060:	ldr	w1, [x8, #1472]
  406064:	ldrb	w2, [x26, #168]
  406068:	bl	40a4b8 <__fxstatat@plt+0x7918>
  40606c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406070:	ldrb	w8, [x8, #1684]
  406074:	cmp	w8, #0x1
  406078:	b.ne	406098 <__fxstatat@plt+0x34f8>  // b.any
  40607c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  406080:	ldr	x0, [x26, #160]
  406084:	ldr	w2, [x8, #1476]
  406088:	mov	x1, xzr
  40608c:	add	x27, sp, #0x64
  406090:	bl	40a50c <__fxstatat@plt+0x796c>
  406094:	b	40609c <__fxstatat@plt+0x34fc>
  406098:	add	x27, sp, #0x64
  40609c:	ldrb	w8, [x26, #168]
  4060a0:	cbz	w8, 40618c <__fxstatat@plt+0x35ec>
  4060a4:	ldr	w8, [x26, #40]
  4060a8:	and	w8, w8, #0xf000
  4060ac:	orr	w8, w8, #0x4000
  4060b0:	cmp	w8, #0x6, lsl #12
  4060b4:	b.ne	406194 <__fxstatat@plt+0x35f4>  // b.any
  4060b8:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4060bc:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4060c0:	ldr	w8, [x8, #1488]
  4060c4:	ldr	w9, [x9, #1480]
  4060c8:	adrp	x23, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4060cc:	ldr	w10, [x23, #1484]
  4060d0:	ldr	x0, [x26, #56]
  4060d4:	sub	w8, w8, w9
  4060d8:	sub	w8, w8, w10
  4060dc:	sub	w8, w8, #0x2
  4060e0:	bic	w8, w8, w8, asr #31
  4060e4:	add	w8, w8, w9
  4060e8:	str	w8, [sp, #16]
  4060ec:	bl	4028e0 <gnu_dev_major@plt>
  4060f0:	mov	w0, w0
  4060f4:	add	x1, sp, #0xeac
  4060f8:	bl	40d70c <__fxstatat@plt+0xab6c>
  4060fc:	ldr	x8, [x26, #56]
  406100:	ldr	w23, [x23, #1484]
  406104:	mov	x28, x20
  406108:	mov	x20, x19
  40610c:	mov	x19, x24
  406110:	mov	x24, x22
  406114:	mov	x22, x21
  406118:	mov	x21, x25
  40611c:	mov	x25, x0
  406120:	mov	x0, x8
  406124:	bl	402a00 <gnu_dev_minor@plt>
  406128:	mov	w0, w0
  40612c:	sub	x1, x29, #0x48
  406130:	bl	40d70c <__fxstatat@plt+0xab6c>
  406134:	ldr	w4, [sp, #16]
  406138:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  40613c:	mov	x7, x0
  406140:	mov	w1, #0x1                   	// #1
  406144:	mov	x2, #0xffffffffffffffff    	// #-1
  406148:	mov	x0, x27
  40614c:	add	x3, x3, #0x342
  406150:	mov	x5, x25
  406154:	mov	w6, w23
  406158:	mov	x25, x21
  40615c:	mov	x21, x22
  406160:	mov	x22, x24
  406164:	mov	x24, x19
  406168:	mov	x19, x20
  40616c:	mov	x20, x28
  406170:	bl	402560 <__sprintf_chk@plt>
  406174:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  406178:	ldrsw	x8, [x8, #1488]
  40617c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406180:	add	x8, x8, x27
  406184:	add	x27, x8, #0x1
  406188:	b	406208 <__fxstatat@plt+0x3668>
  40618c:	mov	x28, x19
  406190:	b	4061b8 <__fxstatat@plt+0x3618>
  406194:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406198:	ldr	w2, [x8, #2384]
  40619c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4061a0:	ldr	x0, [x26, #72]
  4061a4:	ldr	x4, [x8, #1288]
  4061a8:	add	x1, sp, #0xeac
  4061ac:	mov	w3, #0x1                   	// #1
  4061b0:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  4061b4:	mov	x28, x0
  4061b8:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4061bc:	ldr	w23, [x8, #1488]
  4061c0:	mov	x0, x28
  4061c4:	mov	w1, wzr
  4061c8:	bl	40db9c <__fxstatat@plt+0xaffc>
  4061cc:	sub	w8, w23, w0
  4061d0:	subs	w23, w8, #0x1
  4061d4:	b.lt	4061f0 <__fxstatat@plt+0x3650>  // b.tstop
  4061d8:	add	x2, x23, #0x1
  4061dc:	mov	w1, #0x20                  	// #32
  4061e0:	mov	x0, x27
  4061e4:	bl	4027c0 <memset@plt>
  4061e8:	add	x8, x27, x23
  4061ec:	add	x27, x8, #0x1
  4061f0:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4061f4:	ldrb	w8, [x28], #1
  4061f8:	strb	w8, [x27], #1
  4061fc:	cbnz	w8, 4061f4 <__fxstatat@plt+0x3654>
  406200:	mov	w8, #0x20                  	// #32
  406204:	sturb	w8, [x27, #-1]
  406208:	mov	w8, #0x1                   	// #1
  40620c:	strb	w8, [x27]
  406210:	ldrb	w8, [x26, #168]
  406214:	cbz	w8, 406310 <__fxstatat@plt+0x3770>
  406218:	ldr	x0, [x9, #1672]
  40621c:	add	x1, sp, #0x50
  406220:	add	x2, sp, #0x18
  406224:	bl	4123ec <_obstack_memory_used@@Base+0x134>
  406228:	cbz	x0, 406304 <__fxstatat@plt+0x3764>
  40622c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406230:	add	x8, x8, #0x600
  406234:	ldr	x8, [x8]
  406238:	ldr	x10, [sp, #80]
  40623c:	cmp	x8, x10
  406240:	b.ge	406260 <__fxstatat@plt+0x36c0>  // b.tcont
  406244:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406248:	add	x23, x23, #0x600
  40624c:	mov	x0, x23
  406250:	bl	40bad4 <__fxstatat@plt+0x8f34>
  406254:	ldp	x8, x9, [x23]
  406258:	ldp	x10, x5, [sp, #80]
  40625c:	b	40627c <__fxstatat@plt+0x36dc>
  406260:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406264:	add	x9, x9, #0x600
  406268:	ldr	x9, [x9, #8]
  40626c:	ldr	x5, [sp, #88]
  406270:	b.gt	40627c <__fxstatat@plt+0x36dc>
  406274:	cmp	w9, w5
  406278:	b.mi	406244 <__fxstatat@plt+0x36a4>  // b.first
  40627c:	mov	x11, #0xffffffffffff3d54    	// #-49836
  406280:	movk	x11, #0xff0f, lsl #16
  406284:	add	x11, x8, x11
  406288:	cmp	x11, x10
  40628c:	b.ge	4062a0 <__fxstatat@plt+0x3700>  // b.tcont
  406290:	cmp	x10, x8
  406294:	b.ge	406510 <__fxstatat@plt+0x3970>  // b.tcont
  406298:	mov	w8, #0x1                   	// #1
  40629c:	b	4062b0 <__fxstatat@plt+0x3710>
  4062a0:	b.gt	4062ac <__fxstatat@plt+0x370c>
  4062a4:	cmp	w9, w5
  4062a8:	b.mi	406290 <__fxstatat@plt+0x36f0>  // b.first
  4062ac:	mov	x8, xzr
  4062b0:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4062b4:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4062b8:	ldrb	w9, [x9, #1408]
  4062bc:	ldr	x4, [x10, #1672]
  4062c0:	cmp	w9, #0x1
  4062c4:	b.ne	4062e4 <__fxstatat@plt+0x3744>  // b.any
  4062c8:	ldrsw	x9, [sp, #40]
  4062cc:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4062d0:	add	x10, x10, #0x980
  4062d4:	mov	w11, #0x600                 	// #1536
  4062d8:	madd	x8, x8, x11, x10
  4062dc:	add	x2, x8, x9, lsl #7
  4062e0:	b	4062f0 <__fxstatat@plt+0x3750>
  4062e4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4062e8:	add	x9, x9, #0x510
  4062ec:	ldr	x2, [x9, x8, lsl #3]
  4062f0:	add	x3, sp, #0x18
  4062f4:	mov	w1, #0x3e9                 	// #1001
  4062f8:	mov	x0, x27
  4062fc:	bl	40dfac <__fxstatat@plt+0xb40c>
  406300:	cbnz	x0, 4063f0 <__fxstatat@plt+0x3850>
  406304:	ldrb	w8, [x27]
  406308:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40630c:	cbz	w8, 4063ec <__fxstatat@plt+0x384c>
  406310:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406314:	ldr	w28, [x8, #1316]
  406318:	tbnz	w28, #31, 406338 <__fxstatat@plt+0x3798>
  40631c:	ldrb	w8, [x26, #168]
  406320:	cbz	w8, 4063bc <__fxstatat@plt+0x381c>
  406324:	ldr	x0, [sp, #80]
  406328:	add	x1, sp, #0xeac
  40632c:	bl	40d67c <__fxstatat@plt+0xaadc>
  406330:	mov	x5, x0
  406334:	b	4063c0 <__fxstatat@plt+0x3820>
  406338:	ldr	x0, [x9, #1672]
  40633c:	sub	x1, x29, #0x10
  406340:	sub	x2, x29, #0x48
  406344:	stur	xzr, [x29, #-16]
  406348:	mov	x23, x9
  40634c:	bl	4123ec <_obstack_memory_used@@Base+0x134>
  406350:	cbz	x0, 4064f4 <__fxstatat@plt+0x3954>
  406354:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  406358:	ldursw	x8, [x29, #-56]
  40635c:	ldrb	w9, [x9, #1408]
  406360:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406364:	ldr	x10, [x10, #1296]
  406368:	ldr	x4, [x23, #1672]
  40636c:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406370:	add	x11, x11, #0x980
  406374:	add	x8, x11, x8, lsl #7
  406378:	cmp	w9, #0x0
  40637c:	csel	x2, x8, x10, ne  // ne = any
  406380:	add	x0, sp, #0xeac
  406384:	sub	x3, x29, #0x48
  406388:	mov	w1, #0x3e9                 	// #1001
  40638c:	mov	w5, wzr
  406390:	bl	40dfac <__fxstatat@plt+0xb40c>
  406394:	cbz	x0, 4064f4 <__fxstatat@plt+0x3954>
  406398:	mov	x1, x0
  40639c:	add	x0, sp, #0xeac
  4063a0:	mov	w2, wzr
  4063a4:	bl	40dbcc <__fxstatat@plt+0xb02c>
  4063a8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4063ac:	mov	w28, w0
  4063b0:	str	w0, [x8, #1316]
  4063b4:	tbz	w28, #31, 40631c <__fxstatat@plt+0x377c>
  4063b8:	b	406500 <__fxstatat@plt+0x3960>
  4063bc:	mov	x5, x19
  4063c0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  4063c4:	mov	w1, #0x1                   	// #1
  4063c8:	mov	x2, #0xffffffffffffffff    	// #-1
  4063cc:	mov	x0, x27
  4063d0:	add	x3, x3, #0x347
  4063d4:	mov	w4, w28
  4063d8:	bl	402560 <__sprintf_chk@plt>
  4063dc:	mov	x0, x27
  4063e0:	bl	402540 <strlen@plt>
  4063e4:	add	x23, x27, x0
  4063e8:	b	4063fc <__fxstatat@plt+0x385c>
  4063ec:	mov	x0, xzr
  4063f0:	add	x23, x27, x0
  4063f4:	mov	w8, #0x20                  	// #32
  4063f8:	strh	w8, [x23], #1
  4063fc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406400:	ldr	x1, [x8, #1488]
  406404:	add	x0, sp, #0x64
  406408:	bl	402ad0 <fputs_unlocked@plt>
  40640c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406410:	ldr	x8, [x10, #1912]
  406414:	add	x9, sp, #0x64
  406418:	sub	x27, x23, x9
  40641c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406420:	add	x8, x8, x27
  406424:	mov	x0, x26
  406428:	mov	w1, wzr
  40642c:	add	x2, x2, #0x6a0
  406430:	mov	x3, x27
  406434:	str	x8, [x10, #1912]
  406438:	bl	409b50 <__fxstatat@plt+0x6fb0>
  40643c:	ldr	w2, [x26, #152]
  406440:	cmp	w2, #0x6
  406444:	b.ne	4064ac <__fxstatat@plt+0x390c>  // b.any
  406448:	ldr	x8, [x26, #8]
  40644c:	cbz	x8, 4064c4 <__fxstatat@plt+0x3924>
  406450:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406454:	ldr	x1, [x8, #1488]
  406458:	mov	x28, x0
  40645c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  406460:	add	x0, x0, #0x34c
  406464:	bl	402ad0 <fputs_unlocked@plt>
  406468:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40646c:	ldr	x8, [x10, #1912]
  406470:	add	x9, x27, x28
  406474:	add	x3, x9, #0x4
  406478:	mov	w1, #0x1                   	// #1
  40647c:	add	x8, x8, #0x4
  406480:	mov	x0, x26
  406484:	mov	x2, xzr
  406488:	str	x8, [x10, #1912]
  40648c:	bl	409b50 <__fxstatat@plt+0x6fb0>
  406490:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406494:	ldr	w8, [x8, #1568]
  406498:	cbz	w8, 4064c4 <__fxstatat@plt+0x3924>
  40649c:	ldr	w1, [x26, #156]
  4064a0:	mov	w0, #0x1                   	// #1
  4064a4:	mov	w2, wzr
  4064a8:	b	4064c0 <__fxstatat@plt+0x3920>
  4064ac:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4064b0:	ldr	w8, [x8, #1568]
  4064b4:	cbz	w8, 4064c4 <__fxstatat@plt+0x3924>
  4064b8:	ldrb	w0, [x26, #168]
  4064bc:	ldr	w1, [x26, #40]
  4064c0:	bl	409ed8 <__fxstatat@plt+0x7338>
  4064c4:	mov	w0, #0xa                   	// #10
  4064c8:	bl	4027f0 <putchar_unlocked@plt>
  4064cc:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4064d0:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4064d4:	ldr	x8, [x10, #1912]
  4064d8:	ldr	x9, [x9, #1904]
  4064dc:	add	x20, x20, #0x1
  4064e0:	add	x8, x8, #0x1
  4064e4:	cmp	x20, x9
  4064e8:	str	x8, [x10, #1912]
  4064ec:	b.cc	405d44 <__fxstatat@plt+0x31a4>  // b.lo, b.ul, b.last
  4064f0:	b	406668 <__fxstatat@plt+0x3ac8>
  4064f4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4064f8:	ldr	w28, [x8, #1316]
  4064fc:	tbz	w28, #31, 40631c <__fxstatat@plt+0x377c>
  406500:	mov	w28, wzr
  406504:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406508:	str	wzr, [x8, #1316]
  40650c:	b	40631c <__fxstatat@plt+0x377c>
  406510:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406514:	b.le	406520 <__fxstatat@plt+0x3980>
  406518:	mov	x8, xzr
  40651c:	b	4062b4 <__fxstatat@plt+0x3714>
  406520:	sub	w8, w5, w9
  406524:	lsr	w8, w8, #31
  406528:	b	4062b4 <__fxstatat@plt+0x3714>
  40652c:	mov	w0, #0x2c                  	// #44
  406530:	b	406788 <__fxstatat@plt+0x3be8>
  406534:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406538:	ldr	x8, [x19, #1904]
  40653c:	cbz	x8, 406668 <__fxstatat@plt+0x3ac8>
  406540:	mov	x20, xzr
  406544:	adrp	x21, 42b000 <__progname@@GLIBC_2.17+0xa28>
  406548:	ldr	x8, [x21, #1440]
  40654c:	mov	x1, xzr
  406550:	ldr	x0, [x8, x20, lsl #3]
  406554:	bl	40988c <__fxstatat@plt+0x6cec>
  406558:	mov	w0, #0xa                   	// #10
  40655c:	bl	4027f0 <putchar_unlocked@plt>
  406560:	ldr	x8, [x19, #1904]
  406564:	add	x20, x20, #0x1
  406568:	cmp	x20, x8
  40656c:	b.cc	406548 <__fxstatat@plt+0x39a8>  // b.lo, b.ul, b.last
  406570:	b	406668 <__fxstatat@plt+0x3ac8>
  406574:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406578:	ldr	x8, [x8, #2360]
  40657c:	cbz	x8, 406784 <__fxstatat@plt+0x3be4>
  406580:	mov	w0, #0x1                   	// #1
  406584:	bl	40a1b8 <__fxstatat@plt+0x7618>
  406588:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40658c:	ldr	x8, [x24, #1904]
  406590:	udiv	x9, x8, x0
  406594:	msub	x8, x9, x0, x8
  406598:	cmp	x8, #0x0
  40659c:	cinc	x23, x9, ne  // ne = any
  4065a0:	cbz	x23, 406668 <__fxstatat@plt+0x3ac8>
  4065a4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4065a8:	ldr	x8, [x8, #1840]
  4065ac:	mov	w9, #0x18                  	// #24
  4065b0:	mov	x22, xzr
  4065b4:	adrp	x26, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4065b8:	madd	x8, x0, x9, x8
  4065bc:	sub	x25, x8, #0x8
  4065c0:	ldr	x8, [x26, #1440]
  4065c4:	ldr	x19, [x8, x22, lsl #3]
  4065c8:	mov	x0, x19
  4065cc:	bl	40a010 <__fxstatat@plt+0x7470>
  4065d0:	ldr	x8, [x25]
  4065d4:	mov	x20, x0
  4065d8:	mov	x0, x19
  4065dc:	mov	x1, xzr
  4065e0:	ldr	x28, [x8]
  4065e4:	bl	40988c <__fxstatat@plt+0x6cec>
  4065e8:	ldr	x8, [x24, #1904]
  4065ec:	add	x27, x22, x23
  4065f0:	str	x22, [sp, #16]
  4065f4:	cmp	x27, x8
  4065f8:	b.cs	406650 <__fxstatat@plt+0x3ab0>  // b.hs, b.nlast
  4065fc:	mov	x19, xzr
  406600:	mov	w22, #0x8                   	// #8
  406604:	add	x0, x19, x20
  406608:	add	x19, x19, x28
  40660c:	mov	x1, x19
  406610:	bl	40a430 <__fxstatat@plt+0x7890>
  406614:	ldr	x8, [x26, #1440]
  406618:	ldr	x21, [x8, x27, lsl #3]
  40661c:	mov	x0, x21
  406620:	bl	40a010 <__fxstatat@plt+0x7470>
  406624:	ldr	x8, [x25]
  406628:	mov	x20, x0
  40662c:	mov	x0, x21
  406630:	mov	x1, x19
  406634:	ldr	x28, [x8, x22]
  406638:	bl	40988c <__fxstatat@plt+0x6cec>
  40663c:	ldr	x8, [x24, #1904]
  406640:	add	x27, x27, x23
  406644:	add	x22, x22, #0x8
  406648:	cmp	x27, x8
  40664c:	b.cc	406604 <__fxstatat@plt+0x3a64>  // b.lo, b.ul, b.last
  406650:	mov	w0, #0xa                   	// #10
  406654:	bl	4027f0 <putchar_unlocked@plt>
  406658:	ldr	x22, [sp, #16]
  40665c:	add	x22, x22, #0x1
  406660:	cmp	x22, x23
  406664:	b.cc	4065c0 <__fxstatat@plt+0x3a20>  // b.lo, b.ul, b.last
  406668:	add	sp, sp, #0x1, lsl #12
  40666c:	add	sp, sp, #0x2e0
  406670:	ldp	x20, x19, [sp, #80]
  406674:	ldp	x22, x21, [sp, #64]
  406678:	ldp	x24, x23, [sp, #48]
  40667c:	ldp	x26, x25, [sp, #32]
  406680:	ldp	x28, x27, [sp, #16]
  406684:	ldp	x29, x30, [sp], #96
  406688:	ret
  40668c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406690:	ldr	x8, [x8, #2360]
  406694:	cbz	x8, 406784 <__fxstatat@plt+0x3be4>
  406698:	mov	w0, wzr
  40669c:	bl	40a1b8 <__fxstatat@plt+0x7618>
  4066a0:	adrp	x22, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4066a4:	ldr	x8, [x22, #1440]
  4066a8:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4066ac:	ldr	x21, [x9, #1840]
  4066b0:	mov	x19, x0
  4066b4:	ldr	x20, [x8]
  4066b8:	mov	w23, #0x18                  	// #24
  4066bc:	mov	x0, x20
  4066c0:	bl	40a010 <__fxstatat@plt+0x7470>
  4066c4:	madd	x23, x19, x23, x21
  4066c8:	ldr	x8, [x23, #-8]!
  4066cc:	mov	x21, x0
  4066d0:	mov	x0, x20
  4066d4:	mov	x1, xzr
  4066d8:	ldr	x26, [x8]
  4066dc:	bl	40988c <__fxstatat@plt+0x6cec>
  4066e0:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4066e4:	ldr	x8, [x24, #1904]
  4066e8:	cmp	x8, #0x2
  4066ec:	b.cc	40675c <__fxstatat@plt+0x3bbc>  // b.lo, b.ul, b.last
  4066f0:	mov	x20, xzr
  4066f4:	mov	w25, #0x1                   	// #1
  4066f8:	udiv	x8, x25, x19
  4066fc:	msub	x27, x8, x19, x25
  406700:	cbz	x27, 406718 <__fxstatat@plt+0x3b78>
  406704:	add	x0, x20, x21
  406708:	add	x20, x20, x26
  40670c:	mov	x1, x20
  406710:	bl	40a430 <__fxstatat@plt+0x7890>
  406714:	b	406724 <__fxstatat@plt+0x3b84>
  406718:	mov	w0, #0xa                   	// #10
  40671c:	bl	4027f0 <putchar_unlocked@plt>
  406720:	mov	x20, xzr
  406724:	ldr	x8, [x22, #1440]
  406728:	mov	x1, x20
  40672c:	ldr	x21, [x8, x25, lsl #3]
  406730:	mov	x0, x21
  406734:	bl	40988c <__fxstatat@plt+0x6cec>
  406738:	mov	x0, x21
  40673c:	bl	40a010 <__fxstatat@plt+0x7470>
  406740:	ldr	x8, [x23]
  406744:	ldr	x9, [x24, #1904]
  406748:	add	x25, x25, #0x1
  40674c:	mov	x21, x0
  406750:	ldr	x26, [x8, x27, lsl #3]
  406754:	cmp	x25, x9
  406758:	b.cc	4066f8 <__fxstatat@plt+0x3b58>  // b.lo, b.ul, b.last
  40675c:	mov	w0, #0xa                   	// #10
  406760:	add	sp, sp, #0x1, lsl #12
  406764:	add	sp, sp, #0x2e0
  406768:	ldp	x20, x19, [sp, #80]
  40676c:	ldp	x22, x21, [sp, #64]
  406770:	ldp	x24, x23, [sp, #48]
  406774:	ldp	x26, x25, [sp, #32]
  406778:	ldp	x28, x27, [sp, #16]
  40677c:	ldp	x29, x30, [sp], #96
  406780:	b	4027f0 <putchar_unlocked@plt>
  406784:	mov	w0, #0x20                  	// #32
  406788:	add	sp, sp, #0x1, lsl #12
  40678c:	add	sp, sp, #0x2e0
  406790:	ldp	x20, x19, [sp, #80]
  406794:	ldp	x22, x21, [sp, #64]
  406798:	ldp	x24, x23, [sp, #48]
  40679c:	ldp	x26, x25, [sp, #32]
  4067a0:	ldp	x28, x27, [sp, #16]
  4067a4:	ldp	x29, x30, [sp], #96
  4067a8:	b	409a04 <__fxstatat@plt+0x6e64>
  4067ac:	bl	4028c0 <abort@plt>
  4067b0:	stp	x29, x30, [sp, #-32]!
  4067b4:	str	x19, [sp, #16]
  4067b8:	mov	x19, x0
  4067bc:	ldr	x0, [x0]
  4067c0:	mov	x29, sp
  4067c4:	bl	402990 <free@plt>
  4067c8:	ldr	x0, [x19, #8]
  4067cc:	bl	402990 <free@plt>
  4067d0:	mov	x0, x19
  4067d4:	ldr	x19, [sp, #16]
  4067d8:	ldp	x29, x30, [sp], #32
  4067dc:	b	402990 <free@plt>
  4067e0:	stp	x29, x30, [sp, #-48]!
  4067e4:	stp	x22, x21, [sp, #16]
  4067e8:	stp	x20, x19, [sp, #32]
  4067ec:	ldp	x20, x8, [x1, #16]
  4067f0:	mov	x29, sp
  4067f4:	subs	x9, x8, x20
  4067f8:	lsr	x21, x9, #3
  4067fc:	cbz	x21, 40688c <__fxstatat@plt+0x3cec>
  406800:	b.ne	406810 <__fxstatat@plt+0x3c70>  // b.any
  406804:	ldrb	w9, [x1, #80]
  406808:	orr	w9, w9, #0x2
  40680c:	strb	w9, [x1, #80]
  406810:	ldr	x10, [x1, #48]
  406814:	ldr	x11, [x1, #8]
  406818:	ldr	x9, [x1, #32]
  40681c:	add	x8, x10, x8
  406820:	bic	x8, x8, x10
  406824:	sub	x10, x8, x11
  406828:	sub	x11, x9, x11
  40682c:	cmp	x10, x11
  406830:	str	x8, [x1, #24]
  406834:	b.ls	406840 <__fxstatat@plt+0x3ca0>  // b.plast
  406838:	mov	x8, x9
  40683c:	str	x9, [x1, #24]
  406840:	str	x8, [x1, #16]
  406844:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406848:	ldr	x1, [x8, #1488]
  40684c:	bl	402ad0 <fputs_unlocked@plt>
  406850:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x4d48>
  406854:	mov	x22, xzr
  406858:	add	x19, x19, #0xca7
  40685c:	ldr	x2, [x20, x22, lsl #3]
  406860:	mov	w0, #0x1                   	// #1
  406864:	mov	x1, x19
  406868:	bl	4027b0 <__printf_chk@plt>
  40686c:	add	x22, x22, #0x1
  406870:	cmp	x22, x21
  406874:	b.cc	40685c <__fxstatat@plt+0x3cbc>  // b.lo, b.ul, b.last
  406878:	ldp	x20, x19, [sp, #32]
  40687c:	ldp	x22, x21, [sp, #16]
  406880:	mov	w0, #0xa                   	// #10
  406884:	ldp	x29, x30, [sp], #48
  406888:	b	4027f0 <putchar_unlocked@plt>
  40688c:	ldp	x20, x19, [sp, #32]
  406890:	ldp	x22, x21, [sp, #16]
  406894:	ldp	x29, x30, [sp], #48
  406898:	ret
  40689c:	sub	sp, sp, #0xa0
  4068a0:	stp	x20, x19, [sp, #144]
  4068a4:	mov	w19, w0
  4068a8:	stp	x29, x30, [sp, #112]
  4068ac:	stp	x22, x21, [sp, #128]
  4068b0:	add	x29, sp, #0x70
  4068b4:	cbnz	w0, 406d78 <__fxstatat@plt+0x41d8>
  4068b8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  4068bc:	add	x1, x1, #0xff3
  4068c0:	mov	w2, #0x5                   	// #5
  4068c4:	mov	x0, xzr
  4068c8:	bl	402ac0 <dcgettext@plt>
  4068cc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4068d0:	ldr	x2, [x8, #1904]
  4068d4:	mov	x1, x0
  4068d8:	mov	w0, #0x1                   	// #1
  4068dc:	bl	4027b0 <__printf_chk@plt>
  4068e0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  4068e4:	add	x1, x1, #0x14
  4068e8:	mov	w2, #0x5                   	// #5
  4068ec:	mov	x0, xzr
  4068f0:	bl	402ac0 <dcgettext@plt>
  4068f4:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4068f8:	ldr	x1, [x22, #1488]
  4068fc:	bl	402ad0 <fputs_unlocked@plt>
  406900:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406904:	add	x1, x1, #0x357
  406908:	mov	w2, #0x5                   	// #5
  40690c:	mov	x0, xzr
  406910:	bl	402ac0 <dcgettext@plt>
  406914:	ldr	x1, [x22, #1488]
  406918:	bl	402ad0 <fputs_unlocked@plt>
  40691c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406920:	add	x1, x1, #0xa4
  406924:	mov	w2, #0x5                   	// #5
  406928:	mov	x0, xzr
  40692c:	bl	402ac0 <dcgettext@plt>
  406930:	ldr	x1, [x22, #1488]
  406934:	bl	402ad0 <fputs_unlocked@plt>
  406938:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  40693c:	add	x1, x1, #0x1b3
  406940:	mov	w2, #0x5                   	// #5
  406944:	mov	x0, xzr
  406948:	bl	402ac0 <dcgettext@plt>
  40694c:	ldr	x1, [x22, #1488]
  406950:	bl	402ad0 <fputs_unlocked@plt>
  406954:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406958:	add	x1, x1, #0x24f
  40695c:	mov	w2, #0x5                   	// #5
  406960:	mov	x0, xzr
  406964:	bl	402ac0 <dcgettext@plt>
  406968:	ldr	x1, [x22, #1488]
  40696c:	bl	402ad0 <fputs_unlocked@plt>
  406970:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406974:	add	x1, x1, #0x3b9
  406978:	mov	w2, #0x5                   	// #5
  40697c:	mov	x0, xzr
  406980:	bl	402ac0 <dcgettext@plt>
  406984:	ldr	x1, [x22, #1488]
  406988:	bl	402ad0 <fputs_unlocked@plt>
  40698c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406990:	add	x1, x1, #0x528
  406994:	mov	w2, #0x5                   	// #5
  406998:	mov	x0, xzr
  40699c:	bl	402ac0 <dcgettext@plt>
  4069a0:	ldr	x1, [x22, #1488]
  4069a4:	bl	402ad0 <fputs_unlocked@plt>
  4069a8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  4069ac:	add	x1, x1, #0x6cb
  4069b0:	mov	w2, #0x5                   	// #5
  4069b4:	mov	x0, xzr
  4069b8:	bl	402ac0 <dcgettext@plt>
  4069bc:	ldr	x1, [x22, #1488]
  4069c0:	bl	402ad0 <fputs_unlocked@plt>
  4069c4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  4069c8:	add	x1, x1, #0x708
  4069cc:	mov	w2, #0x5                   	// #5
  4069d0:	mov	x0, xzr
  4069d4:	bl	402ac0 <dcgettext@plt>
  4069d8:	ldr	x1, [x22, #1488]
  4069dc:	bl	402ad0 <fputs_unlocked@plt>
  4069e0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  4069e4:	add	x1, x1, #0x7fd
  4069e8:	mov	w2, #0x5                   	// #5
  4069ec:	mov	x0, xzr
  4069f0:	bl	402ac0 <dcgettext@plt>
  4069f4:	ldr	x1, [x22, #1488]
  4069f8:	bl	402ad0 <fputs_unlocked@plt>
  4069fc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406a00:	add	x1, x1, #0x846
  406a04:	mov	w2, #0x5                   	// #5
  406a08:	mov	x0, xzr
  406a0c:	bl	402ac0 <dcgettext@plt>
  406a10:	ldr	x1, [x22, #1488]
  406a14:	bl	402ad0 <fputs_unlocked@plt>
  406a18:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406a1c:	add	x1, x1, #0x8dc
  406a20:	mov	w2, #0x5                   	// #5
  406a24:	mov	x0, xzr
  406a28:	bl	402ac0 <dcgettext@plt>
  406a2c:	ldr	x1, [x22, #1488]
  406a30:	bl	402ad0 <fputs_unlocked@plt>
  406a34:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406a38:	add	x1, x1, #0xa82
  406a3c:	mov	w2, #0x5                   	// #5
  406a40:	mov	x0, xzr
  406a44:	bl	402ac0 <dcgettext@plt>
  406a48:	ldr	x1, [x22, #1488]
  406a4c:	bl	402ad0 <fputs_unlocked@plt>
  406a50:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406a54:	add	x1, x1, #0xb13
  406a58:	mov	w2, #0x5                   	// #5
  406a5c:	mov	x0, xzr
  406a60:	bl	402ac0 <dcgettext@plt>
  406a64:	ldr	x1, [x22, #1488]
  406a68:	bl	402ad0 <fputs_unlocked@plt>
  406a6c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406a70:	add	x1, x1, #0xc75
  406a74:	mov	w2, #0x5                   	// #5
  406a78:	mov	x0, xzr
  406a7c:	bl	402ac0 <dcgettext@plt>
  406a80:	ldr	x1, [x22, #1488]
  406a84:	bl	402ad0 <fputs_unlocked@plt>
  406a88:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406a8c:	add	x1, x1, #0xd09
  406a90:	mov	w2, #0x5                   	// #5
  406a94:	mov	x0, xzr
  406a98:	bl	402ac0 <dcgettext@plt>
  406a9c:	ldr	x1, [x22, #1488]
  406aa0:	bl	402ad0 <fputs_unlocked@plt>
  406aa4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406aa8:	add	x1, x1, #0xe70
  406aac:	mov	w2, #0x5                   	// #5
  406ab0:	mov	x0, xzr
  406ab4:	bl	402ac0 <dcgettext@plt>
  406ab8:	ldr	x1, [x22, #1488]
  406abc:	bl	402ad0 <fputs_unlocked@plt>
  406ac0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x3d48>
  406ac4:	add	x1, x1, #0xf9f
  406ac8:	mov	w2, #0x5                   	// #5
  406acc:	mov	x0, xzr
  406ad0:	bl	402ac0 <dcgettext@plt>
  406ad4:	ldr	x1, [x22, #1488]
  406ad8:	bl	402ad0 <fputs_unlocked@plt>
  406adc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406ae0:	add	x1, x1, #0x1e8
  406ae4:	mov	w2, #0x5                   	// #5
  406ae8:	mov	x0, xzr
  406aec:	bl	402ac0 <dcgettext@plt>
  406af0:	ldr	x1, [x22, #1488]
  406af4:	bl	402ad0 <fputs_unlocked@plt>
  406af8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406afc:	add	x1, x1, #0x2ad
  406b00:	mov	w2, #0x5                   	// #5
  406b04:	mov	x0, xzr
  406b08:	bl	402ac0 <dcgettext@plt>
  406b0c:	ldr	x1, [x22, #1488]
  406b10:	bl	402ad0 <fputs_unlocked@plt>
  406b14:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406b18:	add	x1, x1, #0x4b4
  406b1c:	mov	w2, #0x5                   	// #5
  406b20:	mov	x0, xzr
  406b24:	bl	402ac0 <dcgettext@plt>
  406b28:	ldr	x1, [x22, #1488]
  406b2c:	bl	402ad0 <fputs_unlocked@plt>
  406b30:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406b34:	add	x1, x1, #0x503
  406b38:	mov	w2, #0x5                   	// #5
  406b3c:	mov	x0, xzr
  406b40:	bl	402ac0 <dcgettext@plt>
  406b44:	ldr	x1, [x22, #1488]
  406b48:	bl	402ad0 <fputs_unlocked@plt>
  406b4c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406b50:	add	x1, x1, #0x591
  406b54:	mov	w2, #0x5                   	// #5
  406b58:	mov	x0, xzr
  406b5c:	bl	402ac0 <dcgettext@plt>
  406b60:	ldr	x1, [x22, #1488]
  406b64:	bl	402ad0 <fputs_unlocked@plt>
  406b68:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406b6c:	add	x1, x1, #0x705
  406b70:	mov	w2, #0x5                   	// #5
  406b74:	mov	x0, xzr
  406b78:	bl	402ac0 <dcgettext@plt>
  406b7c:	ldr	x1, [x22, #1488]
  406b80:	bl	402ad0 <fputs_unlocked@plt>
  406b84:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406b88:	add	x1, x1, #0x870
  406b8c:	mov	w2, #0x5                   	// #5
  406b90:	mov	x0, xzr
  406b94:	bl	402ac0 <dcgettext@plt>
  406b98:	ldr	x1, [x22, #1488]
  406b9c:	bl	402ad0 <fputs_unlocked@plt>
  406ba0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406ba4:	add	x1, x1, #0x89d
  406ba8:	mov	w2, #0x5                   	// #5
  406bac:	mov	x0, xzr
  406bb0:	bl	402ac0 <dcgettext@plt>
  406bb4:	ldr	x1, [x22, #1488]
  406bb8:	bl	402ad0 <fputs_unlocked@plt>
  406bbc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406bc0:	add	x1, x1, #0x3a2
  406bc4:	mov	w2, #0x5                   	// #5
  406bc8:	mov	x0, xzr
  406bcc:	bl	402ac0 <dcgettext@plt>
  406bd0:	ldr	x1, [x22, #1488]
  406bd4:	bl	402ad0 <fputs_unlocked@plt>
  406bd8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406bdc:	add	x1, x1, #0x8d3
  406be0:	mov	w2, #0x5                   	// #5
  406be4:	mov	x0, xzr
  406be8:	bl	402ac0 <dcgettext@plt>
  406bec:	ldr	x1, [x22, #1488]
  406bf0:	bl	402ad0 <fputs_unlocked@plt>
  406bf4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406bf8:	add	x1, x1, #0xa4b
  406bfc:	mov	w2, #0x5                   	// #5
  406c00:	mov	x0, xzr
  406c04:	bl	402ac0 <dcgettext@plt>
  406c08:	ldr	x1, [x22, #1488]
  406c0c:	bl	402ad0 <fputs_unlocked@plt>
  406c10:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x4d48>
  406c14:	add	x1, x1, #0xb69
  406c18:	mov	w2, #0x5                   	// #5
  406c1c:	mov	x0, xzr
  406c20:	bl	402ac0 <dcgettext@plt>
  406c24:	ldr	x1, [x22, #1488]
  406c28:	bl	402ad0 <fputs_unlocked@plt>
  406c2c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406c30:	ldr	w8, [x8, #1320]
  406c34:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x4d48>
  406c38:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  406c3c:	add	x9, x9, #0xc01
  406c40:	add	x10, x10, #0x23
  406c44:	adrp	x11, 417000 <_obstack_memory_used@@Base+0x4d48>
  406c48:	cmp	w8, #0x2
  406c4c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  406c50:	add	x11, x11, #0xdf1
  406c54:	csel	x9, x10, x9, eq  // eq = none
  406c58:	cmp	w8, #0x1
  406c5c:	add	x1, x1, #0xe80
  406c60:	mov	x0, sp
  406c64:	mov	w2, #0x70                  	// #112
  406c68:	csel	x20, x11, x9, eq  // eq = none
  406c6c:	mov	x21, sp
  406c70:	bl	4024d0 <memcpy@plt>
  406c74:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  406c78:	add	x1, x1, #0xf64
  406c7c:	mov	x0, x20
  406c80:	bl	402950 <strcmp@plt>
  406c84:	cbz	w0, 406c90 <__fxstatat@plt+0x40f0>
  406c88:	ldr	x1, [x21, #16]!
  406c8c:	cbnz	x1, 406c7c <__fxstatat@plt+0x40dc>
  406c90:	ldr	x8, [x21, #8]
  406c94:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406c98:	add	x1, x1, #0x4d3
  406c9c:	mov	w2, #0x5                   	// #5
  406ca0:	cmp	x8, #0x0
  406ca4:	mov	x0, xzr
  406ca8:	csel	x21, x20, x8, eq  // eq = none
  406cac:	bl	402ac0 <dcgettext@plt>
  406cb0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x4d48>
  406cb4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  406cb8:	mov	x1, x0
  406cbc:	add	x2, x2, #0xde6
  406cc0:	add	x3, x3, #0x4ea
  406cc4:	mov	w0, #0x1                   	// #1
  406cc8:	bl	4027b0 <__printf_chk@plt>
  406ccc:	mov	w0, #0x5                   	// #5
  406cd0:	mov	x1, xzr
  406cd4:	bl	402b90 <setlocale@plt>
  406cd8:	cbz	x0, 406d0c <__fxstatat@plt+0x416c>
  406cdc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406ce0:	add	x1, x1, #0x512
  406ce4:	mov	w2, #0x3                   	// #3
  406ce8:	bl	402780 <strncmp@plt>
  406cec:	cbz	w0, 406d0c <__fxstatat@plt+0x416c>
  406cf0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406cf4:	add	x1, x1, #0x516
  406cf8:	mov	w2, #0x5                   	// #5
  406cfc:	mov	x0, xzr
  406d00:	bl	402ac0 <dcgettext@plt>
  406d04:	ldr	x1, [x22, #1488]
  406d08:	bl	402ad0 <fputs_unlocked@plt>
  406d0c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406d10:	add	x1, x1, #0x55d
  406d14:	mov	w2, #0x5                   	// #5
  406d18:	mov	x0, xzr
  406d1c:	bl	402ac0 <dcgettext@plt>
  406d20:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  406d24:	mov	x1, x0
  406d28:	add	x2, x2, #0x4ea
  406d2c:	mov	w0, #0x1                   	// #1
  406d30:	mov	x3, x20
  406d34:	bl	4027b0 <__printf_chk@plt>
  406d38:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  406d3c:	add	x1, x1, #0x578
  406d40:	mov	w2, #0x5                   	// #5
  406d44:	mov	x0, xzr
  406d48:	bl	402ac0 <dcgettext@plt>
  406d4c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  406d50:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  406d54:	add	x8, x8, #0x2c9
  406d58:	add	x9, x9, #0x490
  406d5c:	cmp	x21, x20
  406d60:	mov	x1, x0
  406d64:	csel	x3, x9, x8, eq  // eq = none
  406d68:	mov	w0, #0x1                   	// #1
  406d6c:	mov	x2, x21
  406d70:	bl	4027b0 <__printf_chk@plt>
  406d74:	b	406dac <__fxstatat@plt+0x420c>
  406d78:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406d7c:	ldr	x20, [x8, #1464]
  406d80:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  406d84:	add	x1, x1, #0xfcc
  406d88:	mov	w2, #0x5                   	// #5
  406d8c:	mov	x0, xzr
  406d90:	bl	402ac0 <dcgettext@plt>
  406d94:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  406d98:	ldr	x3, [x8, #1904]
  406d9c:	mov	x2, x0
  406da0:	mov	w1, #0x1                   	// #1
  406da4:	mov	x0, x20
  406da8:	bl	402930 <__fprintf_chk@plt>
  406dac:	mov	w0, w19
  406db0:	bl	402580 <exit@plt>
  406db4:	stp	x29, x30, [sp, #-32]!
  406db8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406dbc:	ldrb	w9, [x8, #1920]
  406dc0:	str	x19, [sp, #16]
  406dc4:	mov	x19, x0
  406dc8:	mov	x29, sp
  406dcc:	tbnz	w9, #0, 406df0 <__fxstatat@plt+0x4250>
  406dd0:	mov	w9, #0x1                   	// #1
  406dd4:	mov	w0, #0x1                   	// #1
  406dd8:	strb	w9, [x8, #1920]
  406ddc:	bl	402880 <tcgetpgrp@plt>
  406de0:	tbnz	w0, #31, 406dec <__fxstatat@plt+0x424c>
  406de4:	mov	w0, #0x1                   	// #1
  406de8:	bl	406e50 <__fxstatat@plt+0x42b0>
  406dec:	bl	406e0c <__fxstatat@plt+0x426c>
  406df0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406df4:	ldp	x1, x0, [x19]
  406df8:	ldr	x3, [x8, #1488]
  406dfc:	ldr	x19, [sp, #16]
  406e00:	mov	w2, #0x1                   	// #1
  406e04:	ldp	x29, x30, [sp], #32
  406e08:	b	402520 <fwrite_unlocked@plt>
  406e0c:	stp	x29, x30, [sp, #-32]!
  406e10:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406e14:	add	x0, x0, #0x3a8
  406e18:	ldr	x8, [x0, #8]
  406e1c:	str	x19, [sp, #16]
  406e20:	mov	x29, sp
  406e24:	cbnz	x8, 406e44 <__fxstatat@plt+0x42a4>
  406e28:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406e2c:	add	x19, x19, #0x388
  406e30:	mov	x0, x19
  406e34:	bl	406db4 <__fxstatat@plt+0x4214>
  406e38:	add	x0, x19, #0x30
  406e3c:	bl	406db4 <__fxstatat@plt+0x4214>
  406e40:	add	x0, x19, #0x10
  406e44:	ldr	x19, [sp, #16]
  406e48:	ldp	x29, x30, [sp], #32
  406e4c:	b	406db4 <__fxstatat@plt+0x4214>
  406e50:	sub	sp, sp, #0xe0
  406e54:	stp	x29, x30, [sp, #160]
  406e58:	stp	x24, x23, [sp, #176]
  406e5c:	stp	x22, x21, [sp, #192]
  406e60:	stp	x20, x19, [sp, #208]
  406e64:	add	x29, sp, #0xa0
  406e68:	tbz	w0, #0, 406f38 <__fxstatat@plt+0x4398>
  406e6c:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406e70:	add	x19, x19, #0x898
  406e74:	mov	x0, x19
  406e78:	bl	402770 <sigemptyset@plt>
  406e7c:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x1d48>
  406e80:	mov	x22, xzr
  406e84:	add	x21, x21, #0x378
  406e88:	ldr	w20, [x21, x22]
  406e8c:	add	x2, sp, #0x8
  406e90:	mov	x1, xzr
  406e94:	mov	w0, w20
  406e98:	bl	402860 <sigaction@plt>
  406e9c:	ldr	x8, [sp, #8]
  406ea0:	cmp	x8, #0x1
  406ea4:	b.eq	406eb4 <__fxstatat@plt+0x4314>  // b.none
  406ea8:	mov	x0, x19
  406eac:	mov	w1, w20
  406eb0:	bl	402b00 <sigaddset@plt>
  406eb4:	add	x22, x22, #0x4
  406eb8:	cmp	x22, #0x30
  406ebc:	b.ne	406e88 <__fxstatat@plt+0x42e8>  // b.any
  406ec0:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406ec4:	add	x8, sp, #0x8
  406ec8:	add	x19, x19, #0x898
  406ecc:	add	x0, x8, #0x8
  406ed0:	mov	w2, #0x80                  	// #128
  406ed4:	mov	x1, x19
  406ed8:	bl	4024d0 <memcpy@plt>
  406edc:	adrp	x23, 406000 <__fxstatat@plt+0x3460>
  406ee0:	adrp	x24, 406000 <__fxstatat@plt+0x3460>
  406ee4:	mov	x22, xzr
  406ee8:	mov	w8, #0x10000000            	// #268435456
  406eec:	add	x23, x23, #0xfb4
  406ef0:	add	x24, x24, #0xf90
  406ef4:	str	w8, [sp, #144]
  406ef8:	ldr	w20, [x21, x22]
  406efc:	mov	x0, x19
  406f00:	mov	w1, w20
  406f04:	bl	402940 <sigismember@plt>
  406f08:	cbz	w0, 406f28 <__fxstatat@plt+0x4388>
  406f0c:	cmp	x22, #0x0
  406f10:	csel	x8, x24, x23, eq  // eq = none
  406f14:	add	x1, sp, #0x8
  406f18:	mov	w0, w20
  406f1c:	mov	x2, xzr
  406f20:	str	x8, [sp, #8]
  406f24:	bl	402860 <sigaction@plt>
  406f28:	add	x22, x22, #0x4
  406f2c:	cmp	x22, #0x30
  406f30:	b.ne	406ef8 <__fxstatat@plt+0x4358>  // b.any
  406f34:	b	406f78 <__fxstatat@plt+0x43d8>
  406f38:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x1d48>
  406f3c:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406f40:	mov	x21, xzr
  406f44:	add	x22, x22, #0x378
  406f48:	add	x19, x19, #0x898
  406f4c:	ldr	w20, [x22, x21]
  406f50:	mov	x0, x19
  406f54:	mov	w1, w20
  406f58:	bl	402940 <sigismember@plt>
  406f5c:	cbz	w0, 406f6c <__fxstatat@plt+0x43cc>
  406f60:	mov	w0, w20
  406f64:	mov	x1, xzr
  406f68:	bl	4026f0 <signal@plt>
  406f6c:	add	x21, x21, #0x4
  406f70:	cmp	x21, #0x30
  406f74:	b.ne	406f4c <__fxstatat@plt+0x43ac>  // b.any
  406f78:	ldp	x20, x19, [sp, #208]
  406f7c:	ldp	x22, x21, [sp, #192]
  406f80:	ldp	x24, x23, [sp, #176]
  406f84:	ldp	x29, x30, [sp, #160]
  406f88:	add	sp, sp, #0xe0
  406f8c:	ret
  406f90:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406f94:	ldr	w8, [x8, #1928]
  406f98:	cbz	w8, 406fa0 <__fxstatat@plt+0x4400>
  406f9c:	ret
  406fa0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406fa4:	ldr	w9, [x8, #1924]
  406fa8:	add	w9, w9, #0x1
  406fac:	str	w9, [x8, #1924]
  406fb0:	ret
  406fb4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  406fb8:	ldr	w9, [x8, #1928]
  406fbc:	cbz	w9, 406fc4 <__fxstatat@plt+0x4424>
  406fc0:	ret
  406fc4:	str	w0, [x8, #1928]
  406fc8:	ret
  406fcc:	sub	sp, sp, #0x20
  406fd0:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x5d48>
  406fd4:	add	x4, x4, #0x2c9
  406fd8:	add	x3, sp, #0x8
  406fdc:	mov	x1, xzr
  406fe0:	mov	w2, wzr
  406fe4:	stp	x29, x30, [sp, #16]
  406fe8:	add	x29, sp, #0x10
  406fec:	bl	411b18 <__fxstatat@plt+0xef78>
  406ff0:	cmp	w0, #0x1
  406ff4:	b.eq	40700c <__fxstatat@plt+0x446c>  // b.none
  406ff8:	mov	w8, w0
  406ffc:	mov	w0, wzr
  407000:	cbnz	w8, 40701c <__fxstatat@plt+0x447c>
  407004:	ldr	x8, [sp, #8]
  407008:	b	407010 <__fxstatat@plt+0x4470>
  40700c:	mov	x8, #0xffffffffffffffff    	// #-1
  407010:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407014:	mov	w0, #0x1                   	// #1
  407018:	str	x8, [x9, #2360]
  40701c:	ldp	x29, x30, [sp, #16]
  407020:	add	sp, sp, #0x20
  407024:	ret
  407028:	stp	x29, x30, [sp, #-16]!
  40702c:	ldr	x9, [x1]
  407030:	ldr	x10, [x0]
  407034:	adrp	x11, 414000 <_obstack_memory_used@@Base+0x1d48>
  407038:	adrp	x12, 414000 <_obstack_memory_used@@Base+0x1d48>
  40703c:	adrp	x13, 414000 <_obstack_memory_used@@Base+0x1d48>
  407040:	mov	w17, wzr
  407044:	mov	x8, xzr
  407048:	mov	w16, wzr
  40704c:	add	x11, x11, #0x2ec
  407050:	add	x12, x12, #0x300
  407054:	add	x13, x13, #0x2f1
  407058:	mov	w14, #0x1                   	// #1
  40705c:	mov	w15, #0x7f                  	// #127
  407060:	mov	x29, sp
  407064:	cmp	w17, #0x4
  407068:	b.hi	4072c0 <__fxstatat@plt+0x4720>  // b.pmore
  40706c:	mov	w17, w17
  407070:	adr	x18, 407080 <__fxstatat@plt+0x44e0>
  407074:	ldrb	w4, [x11, x17]
  407078:	add	x18, x18, x4, lsl #2
  40707c:	br	x18
  407080:	ldrb	w18, [x9]
  407084:	cmp	w18, #0x5b
  407088:	b.le	4071b0 <__fxstatat@plt+0x4610>
  40708c:	cmp	w18, #0x5e
  407090:	b.eq	4071d4 <__fxstatat@plt+0x4634>  // b.none
  407094:	cmp	w18, #0x5c
  407098:	b.ne	407214 <__fxstatat@plt+0x4674>  // b.any
  40709c:	add	x9, x9, #0x1
  4070a0:	mov	w17, #0x1                   	// #1
  4070a4:	b	40728c <__fxstatat@plt+0x46ec>
  4070a8:	ldrb	w18, [x9]
  4070ac:	sub	w17, w18, #0x40
  4070b0:	cmp	w17, #0x3e
  4070b4:	b.hi	407178 <__fxstatat@plt+0x45d8>  // b.pmore
  4070b8:	mov	w17, wzr
  4070bc:	add	x9, x9, #0x1
  4070c0:	and	w18, w18, #0x1f
  4070c4:	b	40721c <__fxstatat@plt+0x467c>
  4070c8:	ldrb	w17, [x9]
  4070cc:	and	w18, w17, #0xf8
  4070d0:	cmp	w18, #0x30
  4070d4:	b.ne	40716c <__fxstatat@plt+0x45cc>  // b.any
  4070d8:	add	w16, w17, w16, lsl #3
  4070dc:	add	x9, x9, #0x1
  4070e0:	sub	w16, w16, #0x30
  4070e4:	mov	w17, #0x2                   	// #2
  4070e8:	b	40728c <__fxstatat@plt+0x46ec>
  4070ec:	ldrb	w17, [x9]
  4070f0:	sub	w18, w17, #0x30
  4070f4:	cmp	w18, #0x36
  4070f8:	b.hi	40716c <__fxstatat@plt+0x45cc>  // b.pmore
  4070fc:	lsl	x4, x14, x18
  407100:	tst	x4, #0x3ff
  407104:	b.ne	4071a0 <__fxstatat@plt+0x4600>  // b.any
  407108:	lsl	x4, x14, x18
  40710c:	tst	x4, #0x7e0000
  407110:	b.ne	4071c0 <__fxstatat@plt+0x4620>  // b.any
  407114:	lsl	x18, x14, x18
  407118:	tst	x18, #0x7e000000000000
  40711c:	b.eq	40716c <__fxstatat@plt+0x45cc>  // b.none
  407120:	add	w16, w17, w16, lsl #4
  407124:	add	x9, x9, #0x1
  407128:	sub	w16, w16, #0x57
  40712c:	b	4071cc <__fxstatat@plt+0x462c>
  407130:	ldrb	w18, [x9]
  407134:	cmp	w18, #0x57
  407138:	b.le	40718c <__fxstatat@plt+0x45ec>
  40713c:	sub	w4, w18, #0x58
  407140:	mov	w16, wzr
  407144:	cmp	w4, #0xe
  407148:	mov	w17, #0x3                   	// #3
  40714c:	b.hi	4071e0 <__fxstatat@plt+0x4640>  // b.pmore
  407150:	adr	x5, 407164 <__fxstatat@plt+0x45c4>
  407154:	ldrb	w6, [x13, x4]
  407158:	add	x5, x5, x6, lsl #2
  40715c:	mov	w4, #0x7                   	// #7
  407160:	br	x5
  407164:	mov	w4, #0x20                  	// #32
  407168:	b	407278 <__fxstatat@plt+0x46d8>
  40716c:	mov	w17, wzr
  407170:	strb	w16, [x10], #1
  407174:	b	407220 <__fxstatat@plt+0x4680>
  407178:	cmp	w18, #0x3f
  40717c:	b.ne	4072b0 <__fxstatat@plt+0x4710>  // b.any
  407180:	mov	w17, wzr
  407184:	strb	w15, [x10], #1
  407188:	b	407220 <__fxstatat@plt+0x4680>
  40718c:	sub	w4, w18, #0x30
  407190:	cmp	w4, #0x8
  407194:	b.cs	407228 <__fxstatat@plt+0x4688>  // b.hs, b.nlast
  407198:	mov	w17, #0x2                   	// #2
  40719c:	b	407284 <__fxstatat@plt+0x46e4>
  4071a0:	add	w16, w17, w16, lsl #4
  4071a4:	add	x9, x9, #0x1
  4071a8:	sub	w16, w16, #0x30
  4071ac:	b	4071cc <__fxstatat@plt+0x462c>
  4071b0:	cmp	w18, #0x3d
  4071b4:	b.ne	407204 <__fxstatat@plt+0x4664>  // b.any
  4071b8:	tbz	w2, #0, 407214 <__fxstatat@plt+0x4674>
  4071bc:	b	4072b8 <__fxstatat@plt+0x4718>
  4071c0:	add	w16, w17, w16, lsl #4
  4071c4:	add	x9, x9, #0x1
  4071c8:	sub	w16, w16, #0x37
  4071cc:	mov	w17, #0x3                   	// #3
  4071d0:	b	40728c <__fxstatat@plt+0x46ec>
  4071d4:	add	x9, x9, #0x1
  4071d8:	mov	w17, #0x4                   	// #4
  4071dc:	b	40728c <__fxstatat@plt+0x46ec>
  4071e0:	sub	w4, w18, #0x6e
  4071e4:	cmp	w4, #0xa
  4071e8:	b.hi	407274 <__fxstatat@plt+0x46d4>  // b.pmore
  4071ec:	adr	x5, 4071fc <__fxstatat@plt+0x465c>
  4071f0:	ldrb	w6, [x12, x4]
  4071f4:	add	x5, x5, x6, lsl #2
  4071f8:	br	x5
  4071fc:	mov	w4, #0xa                   	// #10
  407200:	b	407278 <__fxstatat@plt+0x46d8>
  407204:	mov	w17, #0x5                   	// #5
  407208:	cbz	w18, 407294 <__fxstatat@plt+0x46f4>
  40720c:	cmp	w18, #0x3a
  407210:	b.eq	407294 <__fxstatat@plt+0x46f4>  // b.none
  407214:	mov	w17, wzr
  407218:	add	x9, x9, #0x1
  40721c:	strb	w18, [x10], #1
  407220:	add	x8, x8, #0x1
  407224:	b	40728c <__fxstatat@plt+0x46ec>
  407228:	cbz	w18, 407254 <__fxstatat@plt+0x46b4>
  40722c:	cmp	w18, #0x3f
  407230:	b.ne	407274 <__fxstatat@plt+0x46d4>  // b.any
  407234:	mov	w4, #0x7f                  	// #127
  407238:	b	407278 <__fxstatat@plt+0x46d8>
  40723c:	mov	w4, #0x8                   	// #8
  407240:	b	407278 <__fxstatat@plt+0x46d8>
  407244:	mov	w4, #0x1b                  	// #27
  407248:	b	407278 <__fxstatat@plt+0x46d8>
  40724c:	mov	w4, #0xc                   	// #12
  407250:	b	407278 <__fxstatat@plt+0x46d8>
  407254:	mov	w17, #0x6                   	// #6
  407258:	b	407288 <__fxstatat@plt+0x46e8>
  40725c:	mov	w4, #0xd                   	// #13
  407260:	b	407278 <__fxstatat@plt+0x46d8>
  407264:	mov	w4, #0x9                   	// #9
  407268:	b	407278 <__fxstatat@plt+0x46d8>
  40726c:	mov	w4, #0xb                   	// #11
  407270:	b	407278 <__fxstatat@plt+0x46d8>
  407274:	mov	w4, w18
  407278:	mov	w17, wzr
  40727c:	strb	w4, [x10], #1
  407280:	add	x8, x8, #0x1
  407284:	mov	w16, w4
  407288:	add	x9, x9, #0x1
  40728c:	cmp	w17, #0x5
  407290:	b.cc	407064 <__fxstatat@plt+0x44c4>  // b.lo, b.ul, b.last
  407294:	cmp	w17, #0x6
  407298:	str	x10, [x0]
  40729c:	str	x9, [x1]
  4072a0:	cset	w0, ne  // ne = any
  4072a4:	str	x8, [x3]
  4072a8:	ldp	x29, x30, [sp], #16
  4072ac:	ret
  4072b0:	mov	w17, #0x6                   	// #6
  4072b4:	b	407294 <__fxstatat@plt+0x46f4>
  4072b8:	mov	w17, #0x5                   	// #5
  4072bc:	b	407294 <__fxstatat@plt+0x46f4>
  4072c0:	bl	4028c0 <abort@plt>
  4072c4:	stp	x29, x30, [sp, #-48]!
  4072c8:	stp	x22, x21, [sp, #16]
  4072cc:	stp	x20, x19, [sp, #32]
  4072d0:	mov	x29, sp
  4072d4:	mov	x19, x2
  4072d8:	mov	x20, x1
  4072dc:	mov	w21, w0
  4072e0:	bl	402b30 <__errno_location@plt>
  4072e4:	ldr	w22, [x0]
  4072e8:	mov	w0, #0x4                   	// #4
  4072ec:	mov	x1, x19
  4072f0:	bl	4107b4 <__fxstatat@plt+0xdc14>
  4072f4:	mov	x3, x0
  4072f8:	mov	w0, wzr
  4072fc:	mov	w1, w22
  407300:	mov	x2, x20
  407304:	bl	4025b0 <error@plt>
  407308:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40730c:	tbz	w21, #0, 407318 <__fxstatat@plt+0x4778>
  407310:	mov	w9, #0x2                   	// #2
  407314:	b	407324 <__fxstatat@plt+0x4784>
  407318:	ldr	w9, [x8, #1520]
  40731c:	cbnz	w9, 407328 <__fxstatat@plt+0x4788>
  407320:	mov	w9, #0x1                   	// #1
  407324:	str	w9, [x8, #1520]
  407328:	ldp	x20, x19, [sp, #32]
  40732c:	ldp	x22, x21, [sp, #16]
  407330:	ldp	x29, x30, [sp], #48
  407334:	ret
  407338:	stp	x29, x30, [sp, #-96]!
  40733c:	stp	x28, x27, [sp, #16]
  407340:	stp	x26, x25, [sp, #32]
  407344:	stp	x24, x23, [sp, #48]
  407348:	stp	x22, x21, [sp, #64]
  40734c:	stp	x20, x19, [sp, #80]
  407350:	mov	x29, sp
  407354:	sub	sp, sp, #0x2, lsl #12
  407358:	sub	sp, sp, #0x20
  40735c:	mov	x19, x0
  407360:	mov	x22, x5
  407364:	mov	w24, w4
  407368:	mov	x23, x3
  40736c:	mov	w3, w2
  407370:	mov	x2, x1
  407374:	add	x8, sp, #0x18
  407378:	add	x0, sp, #0x10
  40737c:	add	x5, sp, #0xc
  407380:	mov	x1, x19
  407384:	mov	x4, xzr
  407388:	mov	x21, x6
  40738c:	str	x8, [sp, #16]
  407390:	bl	4076c0 <__fxstatat@plt+0x4b20>
  407394:	ldrb	w25, [sp, #12]
  407398:	mov	x20, x0
  40739c:	cbz	x25, 4073bc <__fxstatat@plt+0x481c>
  4073a0:	tbz	w24, #0, 4073bc <__fxstatat@plt+0x481c>
  4073a4:	mov	w0, #0x20                  	// #32
  4073a8:	bl	4027f0 <putchar_unlocked@plt>
  4073ac:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4073b0:	ldr	x8, [x9, #1912]
  4073b4:	add	x8, x8, #0x1
  4073b8:	str	x8, [x9, #1912]
  4073bc:	cbz	x23, 4073fc <__fxstatat@plt+0x485c>
  4073c0:	mov	w0, #0x4                   	// #4
  4073c4:	bl	404ca0 <__fxstatat@plt+0x2100>
  4073c8:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4073cc:	add	x24, x24, #0x388
  4073d0:	tbz	w0, #0, 4073e4 <__fxstatat@plt+0x4844>
  4073d4:	mov	x0, x24
  4073d8:	bl	406db4 <__fxstatat@plt+0x4214>
  4073dc:	add	x0, x24, #0x10
  4073e0:	bl	406db4 <__fxstatat@plt+0x4214>
  4073e4:	mov	x0, x24
  4073e8:	bl	406db4 <__fxstatat@plt+0x4214>
  4073ec:	mov	x0, x23
  4073f0:	bl	406db4 <__fxstatat@plt+0x4214>
  4073f4:	add	x0, x24, #0x10
  4073f8:	bl	406db4 <__fxstatat@plt+0x4214>
  4073fc:	cbz	x21, 40749c <__fxstatat@plt+0x48fc>
  407400:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407404:	ldrb	w8, [x8, #2416]
  407408:	mov	w27, wzr
  40740c:	cbz	w8, 407430 <__fxstatat@plt+0x4890>
  407410:	cbnz	w25, 407430 <__fxstatat@plt+0x4890>
  407414:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  407418:	ldrb	w8, [x8, #1433]
  40741c:	cbz	w8, 407430 <__fxstatat@plt+0x4890>
  407420:	ldr	x8, [sp, #16]
  407424:	ldrb	w0, [x8]
  407428:	bl	4027f0 <putchar_unlocked@plt>
  40742c:	mov	w27, #0x1                   	// #1
  407430:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407434:	ldr	x0, [x8, #1880]
  407438:	mov	w1, wzr
  40743c:	bl	4079f8 <__fxstatat@plt+0x4e58>
  407440:	mov	x23, x0
  407444:	mov	w1, #0x1                   	// #1
  407448:	mov	x0, x21
  40744c:	bl	4079f8 <__fxstatat@plt+0x4e58>
  407450:	ldrb	w8, [x0]
  407454:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x2d48>
  407458:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  40745c:	mov	x24, x0
  407460:	add	x9, x9, #0xf6e
  407464:	add	x10, x10, #0x2c9
  407468:	cmp	w8, #0x2f
  40746c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  407470:	csel	x3, x10, x9, eq  // eq = none
  407474:	add	x1, x1, #0x2af
  407478:	mov	w0, #0x1                   	// #1
  40747c:	mov	x2, x23
  407480:	mov	x4, x24
  407484:	bl	4027b0 <__printf_chk@plt>
  407488:	mov	x0, x23
  40748c:	bl	402990 <free@plt>
  407490:	mov	x0, x24
  407494:	bl	402990 <free@plt>
  407498:	b	4074a0 <__fxstatat@plt+0x4900>
  40749c:	mov	w27, wzr
  4074a0:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4074a4:	cbz	x22, 4074f4 <__fxstatat@plt+0x4954>
  4074a8:	ldrb	w8, [x24, #1693]
  4074ac:	cmp	w8, #0x1
  4074b0:	b.ne	4074ec <__fxstatat@plt+0x494c>  // b.any
  4074b4:	ldp	x8, x9, [x22, #24]
  4074b8:	sub	x9, x9, x8
  4074bc:	cmp	x9, #0x7
  4074c0:	b.hi	4074d4 <__fxstatat@plt+0x4934>  // b.pmore
  4074c4:	mov	w1, #0x8                   	// #8
  4074c8:	mov	x0, x22
  4074cc:	bl	4120a8 <_obstack_newchunk@@Base>
  4074d0:	ldr	x8, [x22, #24]
  4074d4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4074d8:	ldr	x9, [x9, #1912]
  4074dc:	str	x9, [x8]
  4074e0:	ldr	x8, [x22, #24]
  4074e4:	add	x8, x8, #0x8
  4074e8:	str	x8, [x22, #24]
  4074ec:	mov	w26, #0x1                   	// #1
  4074f0:	b	4074f8 <__fxstatat@plt+0x4958>
  4074f4:	mov	w26, wzr
  4074f8:	ldr	x23, [sp, #16]
  4074fc:	adrp	x28, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407500:	ldr	x3, [x28, #1488]
  407504:	cmp	w27, #0x0
  407508:	mov	w8, #0x2                   	// #2
  40750c:	csel	x8, x8, xzr, ne  // ne = any
  407510:	add	x0, x23, x27
  407514:	sub	x2, x20, x8
  407518:	mov	w1, #0x1                   	// #1
  40751c:	bl	402520 <fwrite_unlocked@plt>
  407520:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407524:	ldr	x8, [x9, #1912]
  407528:	add	x8, x8, x20
  40752c:	str	x8, [x9, #1912]
  407530:	cbz	w26, 407578 <__fxstatat@plt+0x49d8>
  407534:	ldrb	w8, [x24, #1693]
  407538:	cmp	w8, #0x1
  40753c:	b.ne	407578 <__fxstatat@plt+0x49d8>  // b.any
  407540:	ldp	x8, x9, [x22, #24]
  407544:	sub	x9, x9, x8
  407548:	cmp	x9, #0x7
  40754c:	b.hi	407560 <__fxstatat@plt+0x49c0>  // b.pmore
  407550:	mov	w1, #0x8                   	// #8
  407554:	mov	x0, x22
  407558:	bl	4120a8 <_obstack_newchunk@@Base>
  40755c:	ldr	x8, [x22, #24]
  407560:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407564:	ldr	x9, [x9, #1912]
  407568:	str	x9, [x8]
  40756c:	ldr	x8, [x22, #24]
  407570:	add	x8, x8, #0x8
  407574:	str	x8, [x22, #24]
  407578:	cbz	x21, 40759c <__fxstatat@plt+0x49fc>
  40757c:	ldr	x1, [x28, #1488]
  407580:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  407584:	add	x0, x0, #0x2c3
  407588:	bl	402ad0 <fputs_unlocked@plt>
  40758c:	cbz	w27, 40759c <__fxstatat@plt+0x49fc>
  407590:	add	x8, x23, x20
  407594:	ldurb	w0, [x8, #-1]
  407598:	bl	4027f0 <putchar_unlocked@plt>
  40759c:	add	x8, sp, #0x18
  4075a0:	cmp	x23, x8
  4075a4:	b.eq	4075b8 <__fxstatat@plt+0x4a18>  // b.none
  4075a8:	cmp	x23, x19
  4075ac:	b.eq	4075b8 <__fxstatat@plt+0x4a18>  // b.none
  4075b0:	mov	x0, x23
  4075b4:	bl	402990 <free@plt>
  4075b8:	add	x0, x20, x25
  4075bc:	add	sp, sp, #0x2, lsl #12
  4075c0:	add	sp, sp, #0x20
  4075c4:	ldp	x20, x19, [sp, #80]
  4075c8:	ldp	x22, x21, [sp, #64]
  4075cc:	ldp	x24, x23, [sp, #48]
  4075d0:	ldp	x26, x25, [sp, #32]
  4075d4:	ldp	x28, x27, [sp, #16]
  4075d8:	ldp	x29, x30, [sp], #96
  4075dc:	ret
  4075e0:	sub	sp, sp, #0xd0
  4075e4:	stp	x20, x19, [sp, #192]
  4075e8:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4075ec:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4075f0:	str	x25, [sp, #144]
  4075f4:	stp	x24, x23, [sp, #160]
  4075f8:	stp	x22, x21, [sp, #176]
  4075fc:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407600:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407604:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407608:	add	x19, x19, #0x388
  40760c:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407610:	add	x20, x20, #0x898
  407614:	stp	x29, x30, [sp, #128]
  407618:	add	x29, sp, #0x80
  40761c:	ldr	w8, [x22, #1928]
  407620:	cbnz	w8, 40762c <__fxstatat@plt+0x4a8c>
  407624:	ldr	w8, [x23, #1924]
  407628:	cbz	w8, 4076a4 <__fxstatat@plt+0x4b04>
  40762c:	ldrb	w8, [x24, #1920]
  407630:	cmp	w8, #0x1
  407634:	b.ne	407648 <__fxstatat@plt+0x4aa8>  // b.any
  407638:	mov	x0, x19
  40763c:	bl	406db4 <__fxstatat@plt+0x4214>
  407640:	add	x0, x19, #0x10
  407644:	bl	406db4 <__fxstatat@plt+0x4214>
  407648:	ldr	x0, [x25, #1488]
  40764c:	bl	4029e0 <fflush_unlocked@plt>
  407650:	mov	x2, sp
  407654:	mov	w0, wzr
  407658:	mov	x1, x20
  40765c:	bl	4025c0 <sigprocmask@plt>
  407660:	ldr	w21, [x22, #1928]
  407664:	ldr	w8, [x23, #1924]
  407668:	cbz	w8, 40767c <__fxstatat@plt+0x4adc>
  40766c:	sub	w8, w8, #0x1
  407670:	str	w8, [x23, #1924]
  407674:	mov	w21, #0x13                  	// #19
  407678:	b	407688 <__fxstatat@plt+0x4ae8>
  40767c:	mov	w0, w21
  407680:	mov	x1, xzr
  407684:	bl	4026f0 <signal@plt>
  407688:	mov	w0, w21
  40768c:	bl	4025a0 <raise@plt>
  407690:	mov	x1, sp
  407694:	mov	w0, #0x2                   	// #2
  407698:	mov	x2, xzr
  40769c:	bl	4025c0 <sigprocmask@plt>
  4076a0:	b	40761c <__fxstatat@plt+0x4a7c>
  4076a4:	ldp	x20, x19, [sp, #192]
  4076a8:	ldp	x22, x21, [sp, #176]
  4076ac:	ldp	x24, x23, [sp, #160]
  4076b0:	ldr	x25, [sp, #144]
  4076b4:	ldp	x29, x30, [sp, #128]
  4076b8:	add	sp, sp, #0xd0
  4076bc:	ret
  4076c0:	sub	sp, sp, #0x70
  4076c4:	stp	x29, x30, [sp, #16]
  4076c8:	stp	x28, x27, [sp, #32]
  4076cc:	stp	x26, x25, [sp, #48]
  4076d0:	stp	x24, x23, [sp, #64]
  4076d4:	stp	x22, x21, [sp, #80]
  4076d8:	stp	x20, x19, [sp, #96]
  4076dc:	ldr	x22, [x0]
  4076e0:	mov	x20, x0
  4076e4:	mov	x0, x2
  4076e8:	add	x29, sp, #0x10
  4076ec:	mov	x21, x5
  4076f0:	mov	x19, x4
  4076f4:	mov	w23, w3
  4076f8:	mov	x25, x2
  4076fc:	mov	x24, x1
  407700:	bl	40f63c <__fxstatat@plt+0xca9c>
  407704:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407708:	sub	w9, w0, #0x1
  40770c:	ldrb	w8, [x8, #2328]
  407710:	cmp	w9, #0x2
  407714:	cset	w9, cc  // cc = lo, ul, last
  407718:	cmp	w0, #0x0
  40771c:	cset	w10, eq  // eq = none
  407720:	orr	w9, w10, w9
  407724:	and	w27, w8, w9
  407728:	cbz	w23, 4077c0 <__fxstatat@plt+0x4c20>
  40772c:	mov	w1, #0x2000                	// #8192
  407730:	mov	x3, #0xffffffffffffffff    	// #-1
  407734:	mov	x0, x22
  407738:	mov	x2, x24
  40773c:	mov	x4, x25
  407740:	bl	40f6fc <__fxstatat@plt+0xcb5c>
  407744:	mov	x23, x0
  407748:	cmp	x0, #0x2, lsl #12
  40774c:	b.cc	407774 <__fxstatat@plt+0x4bd4>  // b.lo, b.ul, b.last
  407750:	add	x26, x23, #0x1
  407754:	mov	x0, x26
  407758:	bl	4111f4 <__fxstatat@plt+0xe654>
  40775c:	mov	x3, #0xffffffffffffffff    	// #-1
  407760:	mov	x1, x26
  407764:	mov	x2, x24
  407768:	mov	x4, x25
  40776c:	mov	x22, x0
  407770:	bl	40f6fc <__fxstatat@plt+0xcb5c>
  407774:	ldrb	w8, [x24]
  407778:	ldrb	w9, [x22]
  40777c:	cmp	w8, w9
  407780:	b.ne	407800 <__fxstatat@plt+0x4c60>  // b.any
  407784:	mov	x0, x24
  407788:	bl	402540 <strlen@plt>
  40778c:	cmp	x0, x23
  407790:	cset	w25, ne  // ne = any
  407794:	cbnz	w27, 407808 <__fxstatat@plt+0x4c68>
  407798:	cbz	x19, 40794c <__fxstatat@plt+0x4dac>
  40779c:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  4077a0:	cmp	x0, #0x2
  4077a4:	b.cc	407950 <__fxstatat@plt+0x4db0>  // b.lo, b.ul, b.last
  4077a8:	mov	x0, x22
  4077ac:	mov	x1, x23
  4077b0:	mov	w2, wzr
  4077b4:	bl	40dbcc <__fxstatat@plt+0xb02c>
  4077b8:	sxtw	x26, w0
  4077bc:	b	407994 <__fxstatat@plt+0x4df4>
  4077c0:	mov	x0, x24
  4077c4:	bl	402540 <strlen@plt>
  4077c8:	mov	x23, x0
  4077cc:	cbz	w27, 407940 <__fxstatat@plt+0x4da0>
  4077d0:	cmp	x23, #0x2, lsl #12
  4077d4:	add	x25, x23, #0x1
  4077d8:	b.cc	4077e8 <__fxstatat@plt+0x4c48>  // b.lo, b.ul, b.last
  4077dc:	mov	x0, x25
  4077e0:	bl	4111f4 <__fxstatat@plt+0xe654>
  4077e4:	mov	x22, x0
  4077e8:	mov	x0, x22
  4077ec:	mov	x1, x24
  4077f0:	mov	x2, x25
  4077f4:	bl	4024d0 <memcpy@plt>
  4077f8:	mov	w25, wzr
  4077fc:	b	407808 <__fxstatat@plt+0x4c68>
  407800:	mov	w25, #0x1                   	// #1
  407804:	cbz	w27, 407798 <__fxstatat@plt+0x4bf8>
  407808:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40780c:	cmp	x0, #0x1
  407810:	add	x27, x22, x23
  407814:	b.ls	407904 <__fxstatat@plt+0x4d64>  // b.plast
  407818:	cmp	x23, #0x1
  40781c:	mov	x26, xzr
  407820:	str	w25, [sp]
  407824:	b.lt	407988 <__fxstatat@plt+0x4de8>  // b.tstop
  407828:	adrp	x25, 414000 <_obstack_memory_used@@Base+0x1d48>
  40782c:	add	x25, x25, #0x30b
  407830:	mov	x28, x22
  407834:	mov	x23, x22
  407838:	ldrb	w8, [x23]
  40783c:	sub	w9, w8, #0x20
  407840:	cmp	w9, #0x5e
  407844:	b.hi	407870 <__fxstatat@plt+0x4cd0>  // b.pmore
  407848:	adr	x10, 407858 <__fxstatat@plt+0x4cb8>
  40784c:	ldrb	w11, [x25, x9]
  407850:	add	x10, x10, x11, lsl #2
  407854:	br	x10
  407858:	add	x23, x23, #0x1
  40785c:	strb	w8, [x28], #1
  407860:	add	x26, x26, #0x1
  407864:	cmp	x23, x27
  407868:	b.cc	407838 <__fxstatat@plt+0x4c98>  // b.lo, b.ul, b.last
  40786c:	b	40798c <__fxstatat@plt+0x4dec>
  407870:	str	xzr, [sp, #8]
  407874:	sub	x2, x27, x23
  407878:	add	x0, sp, #0x4
  40787c:	add	x3, sp, #0x8
  407880:	mov	x1, x23
  407884:	bl	411f30 <__fxstatat@plt+0xf390>
  407888:	cbz	x0, 4078a4 <__fxstatat@plt+0x4d04>
  40788c:	mov	x24, x0
  407890:	cmn	x0, #0x2
  407894:	b.eq	4078f0 <__fxstatat@plt+0x4d50>  // b.none
  407898:	cmn	x24, #0x1
  40789c:	b.ne	4078a8 <__fxstatat@plt+0x4d08>  // b.any
  4078a0:	b	4078f8 <__fxstatat@plt+0x4d58>
  4078a4:	mov	w24, #0x1                   	// #1
  4078a8:	ldr	w0, [sp, #4]
  4078ac:	bl	402740 <wcwidth@plt>
  4078b0:	tbnz	w0, #31, 4078cc <__fxstatat@plt+0x4d2c>
  4078b4:	ldrb	w8, [x23], #1
  4078b8:	subs	x24, x24, #0x1
  4078bc:	strb	w8, [x28], #1
  4078c0:	b.ne	4078b4 <__fxstatat@plt+0x4d14>  // b.any
  4078c4:	sxtw	x8, w0
  4078c8:	b	4078dc <__fxstatat@plt+0x4d3c>
  4078cc:	mov	w8, #0x3f                  	// #63
  4078d0:	add	x23, x23, x24
  4078d4:	strb	w8, [x28], #1
  4078d8:	mov	w8, #0x1                   	// #1
  4078dc:	add	x0, sp, #0x8
  4078e0:	add	x26, x8, x26
  4078e4:	bl	4028d0 <mbsinit@plt>
  4078e8:	cbz	w0, 407874 <__fxstatat@plt+0x4cd4>
  4078ec:	b	407864 <__fxstatat@plt+0x4cc4>
  4078f0:	mov	x23, x27
  4078f4:	b	4078fc <__fxstatat@plt+0x4d5c>
  4078f8:	add	x23, x23, #0x1
  4078fc:	mov	w8, #0x3f                  	// #63
  407900:	b	40785c <__fxstatat@plt+0x4cbc>
  407904:	cmp	x23, #0x1
  407908:	b.lt	407938 <__fxstatat@plt+0x4d98>  // b.tstop
  40790c:	bl	402970 <__ctype_b_loc@plt>
  407910:	mov	w8, #0x3f                  	// #63
  407914:	mov	x9, x22
  407918:	ldr	x10, [x0]
  40791c:	ldrb	w11, [x9]
  407920:	ldrh	w10, [x10, x11, lsl #1]
  407924:	tbnz	w10, #14, 40792c <__fxstatat@plt+0x4d8c>
  407928:	strb	w8, [x9]
  40792c:	add	x9, x9, #0x1
  407930:	cmp	x9, x27
  407934:	b.cc	407918 <__fxstatat@plt+0x4d78>  // b.lo, b.ul, b.last
  407938:	mov	x26, x23
  40793c:	b	407994 <__fxstatat@plt+0x4df4>
  407940:	mov	w25, wzr
  407944:	mov	x22, x24
  407948:	cbnz	x19, 40779c <__fxstatat@plt+0x4bfc>
  40794c:	b	407994 <__fxstatat@plt+0x4df4>
  407950:	cmp	x23, #0x1
  407954:	b.lt	4079f0 <__fxstatat@plt+0x4e50>  // b.tstop
  407958:	add	x24, x22, x23
  40795c:	bl	402970 <__ctype_b_loc@plt>
  407960:	ldr	x8, [x0]
  407964:	mov	x26, xzr
  407968:	mov	x9, x22
  40796c:	ldrb	w10, [x9], #1
  407970:	ldrh	w10, [x8, x10, lsl #1]
  407974:	cmp	x9, x24
  407978:	ubfx	x10, x10, #14, #1
  40797c:	add	x26, x26, x10
  407980:	b.cc	40796c <__fxstatat@plt+0x4dcc>  // b.lo, b.ul, b.last
  407984:	b	407994 <__fxstatat@plt+0x4df4>
  407988:	mov	x28, x22
  40798c:	ldr	w25, [sp]
  407990:	sub	x23, x28, x22
  407994:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407998:	ldrb	w8, [x8, #2416]
  40799c:	cbz	w8, 4079bc <__fxstatat@plt+0x4e1c>
  4079a0:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4079a4:	ldrb	w8, [x8, #1433]
  4079a8:	cmp	w8, #0x1
  4079ac:	b.ne	4079b8 <__fxstatat@plt+0x4e18>  // b.any
  4079b0:	eor	w8, w25, #0x1
  4079b4:	b	4079bc <__fxstatat@plt+0x4e1c>
  4079b8:	mov	w8, wzr
  4079bc:	strb	w8, [x21]
  4079c0:	cbz	x19, 4079c8 <__fxstatat@plt+0x4e28>
  4079c4:	str	x26, [x19]
  4079c8:	str	x22, [x20]
  4079cc:	mov	x0, x23
  4079d0:	ldp	x20, x19, [sp, #96]
  4079d4:	ldp	x22, x21, [sp, #80]
  4079d8:	ldp	x24, x23, [sp, #64]
  4079dc:	ldp	x26, x25, [sp, #48]
  4079e0:	ldp	x28, x27, [sp, #32]
  4079e4:	ldp	x29, x30, [sp, #16]
  4079e8:	add	sp, sp, #0x70
  4079ec:	ret
  4079f0:	mov	x26, xzr
  4079f4:	b	407994 <__fxstatat@plt+0x4df4>
  4079f8:	stp	x29, x30, [sp, #-80]!
  4079fc:	str	x25, [sp, #16]
  407a00:	stp	x24, x23, [sp, #32]
  407a04:	stp	x22, x21, [sp, #48]
  407a08:	stp	x20, x19, [sp, #64]
  407a0c:	mov	x29, sp
  407a10:	mov	w19, w1
  407a14:	mov	x22, x0
  407a18:	bl	402540 <strlen@plt>
  407a1c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  407a20:	movk	x9, #0xaaab
  407a24:	add	x8, x0, #0x1
  407a28:	movk	x9, #0x2aaa, lsl #48
  407a2c:	cmp	x8, x9
  407a30:	b.cs	407ad8 <__fxstatat@plt+0x4f38>  // b.hs, b.nlast
  407a34:	add	x0, x8, x8, lsl #1
  407a38:	bl	4111f4 <__fxstatat@plt+0xe654>
  407a3c:	ldrb	w8, [x22]
  407a40:	mov	x20, x0
  407a44:	mov	x21, x0
  407a48:	cbz	w8, 407ab8 <__fxstatat@plt+0x4f18>
  407a4c:	add	x23, x22, #0x1
  407a50:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407a54:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x5d48>
  407a58:	mov	w24, #0x2f                  	// #47
  407a5c:	add	x25, x25, #0x798
  407a60:	add	x22, x22, #0x2ca
  407a64:	mov	x21, x20
  407a68:	and	w9, w8, #0xff
  407a6c:	cmp	w9, #0x2f
  407a70:	b.ne	407a80 <__fxstatat@plt+0x4ee0>  // b.any
  407a74:	tbz	w19, #0, 407a80 <__fxstatat@plt+0x4ee0>
  407a78:	strb	w24, [x21], #1
  407a7c:	b	407ab0 <__fxstatat@plt+0x4f10>
  407a80:	and	x9, x8, #0xff
  407a84:	ldrb	w9, [x25, x9]
  407a88:	cbz	w9, 407a94 <__fxstatat@plt+0x4ef4>
  407a8c:	strb	w8, [x21], #1
  407a90:	b	407ab0 <__fxstatat@plt+0x4f10>
  407a94:	and	w4, w8, #0xff
  407a98:	mov	w1, #0x1                   	// #1
  407a9c:	mov	x2, #0xffffffffffffffff    	// #-1
  407aa0:	mov	x0, x21
  407aa4:	mov	x3, x22
  407aa8:	bl	402560 <__sprintf_chk@plt>
  407aac:	add	x21, x21, w0, sxtw
  407ab0:	ldrb	w8, [x23], #1
  407ab4:	cbnz	w8, 407a68 <__fxstatat@plt+0x4ec8>
  407ab8:	strb	wzr, [x21]
  407abc:	mov	x0, x20
  407ac0:	ldp	x20, x19, [sp, #64]
  407ac4:	ldp	x22, x21, [sp, #48]
  407ac8:	ldp	x24, x23, [sp, #32]
  407acc:	ldr	x25, [sp, #16]
  407ad0:	ldp	x29, x30, [sp], #80
  407ad4:	ret
  407ad8:	bl	411430 <__fxstatat@plt+0xe890>
  407adc:	stp	x29, x30, [sp, #-32]!
  407ae0:	str	x19, [sp, #16]
  407ae4:	mov	x19, x0
  407ae8:	ldr	x0, [x0]
  407aec:	mov	x29, sp
  407af0:	bl	402990 <free@plt>
  407af4:	ldr	x0, [x19, #8]
  407af8:	bl	402990 <free@plt>
  407afc:	ldr	x0, [x19, #16]
  407b00:	ldr	x19, [sp, #16]
  407b04:	ldp	x29, x30, [sp], #32
  407b08:	b	402990 <free@plt>
  407b0c:	sub	sp, sp, #0x30
  407b10:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407b14:	ldr	x4, [x8, #1936]
  407b18:	stp	x29, x30, [sp, #16]
  407b1c:	stp	x20, x19, [sp, #32]
  407b20:	add	x29, sp, #0x10
  407b24:	mov	x19, x0
  407b28:	sub	x0, x29, #0x4
  407b2c:	mov	w1, #0x2                   	// #2
  407b30:	mov	x3, #0xffffffffffffffff    	// #-1
  407b34:	mov	x2, x19
  407b38:	bl	40f6fc <__fxstatat@plt+0xcb5c>
  407b3c:	ldrb	w8, [x19]
  407b40:	ldurb	w9, [x29, #-4]
  407b44:	cmp	w8, w9
  407b48:	b.ne	407b64 <__fxstatat@plt+0x4fc4>  // b.any
  407b4c:	mov	x20, x0
  407b50:	mov	x0, x19
  407b54:	bl	402540 <strlen@plt>
  407b58:	cmp	x0, x20
  407b5c:	cset	w0, ne  // ne = any
  407b60:	b	407b68 <__fxstatat@plt+0x4fc8>
  407b64:	mov	w0, #0x1                   	// #1
  407b68:	ldp	x20, x19, [sp, #32]
  407b6c:	ldp	x29, x30, [sp, #16]
  407b70:	add	sp, sp, #0x30
  407b74:	ret
  407b78:	stp	x29, x30, [sp, #-32]!
  407b7c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  407b80:	ldrb	w8, [x8, #2337]
  407b84:	str	x19, [sp, #16]
  407b88:	mov	w19, w0
  407b8c:	mov	x29, sp
  407b90:	tbz	w8, #0, 407b9c <__fxstatat@plt+0x4ffc>
  407b94:	mov	x0, xzr
  407b98:	b	407ba4 <__fxstatat@plt+0x5004>
  407b9c:	mov	w0, w19
  407ba0:	bl	40d35c <__fxstatat@plt+0xa7bc>
  407ba4:	mov	w1, w19
  407ba8:	ldr	x19, [sp, #16]
  407bac:	ldp	x29, x30, [sp], #32
  407bb0:	b	407bb4 <__fxstatat@plt+0x5014>
  407bb4:	sub	sp, sp, #0x30
  407bb8:	stp	x29, x30, [sp, #32]
  407bbc:	add	x29, sp, #0x20
  407bc0:	cbz	x0, 407bd4 <__fxstatat@plt+0x5034>
  407bc4:	mov	w1, wzr
  407bc8:	bl	40db9c <__fxstatat@plt+0xaffc>
  407bcc:	bic	w0, w0, w0, asr #31
  407bd0:	b	407bf8 <__fxstatat@plt+0x5058>
  407bd4:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x4d48>
  407bd8:	mov	x4, x1
  407bdc:	add	x3, x3, #0xca8
  407be0:	add	x0, sp, #0x8
  407be4:	mov	w1, #0x1                   	// #1
  407be8:	mov	w2, #0x15                  	// #21
  407bec:	bl	402560 <__sprintf_chk@plt>
  407bf0:	add	x0, sp, #0x8
  407bf4:	bl	402540 <strlen@plt>
  407bf8:	ldp	x29, x30, [sp, #32]
  407bfc:	add	sp, sp, #0x30
  407c00:	ret
  407c04:	stp	x29, x30, [sp, #-32]!
  407c08:	stp	x20, x19, [sp, #16]
  407c0c:	ldr	x19, [x0]
  407c10:	ldr	x20, [x1]
  407c14:	mov	x29, sp
  407c18:	bl	402b30 <__errno_location@plt>
  407c1c:	str	wzr, [x0]
  407c20:	mov	x0, x19
  407c24:	mov	x1, x20
  407c28:	ldp	x20, x19, [sp, #16]
  407c2c:	ldp	x29, x30, [sp], #32
  407c30:	b	402ae0 <strcoll@plt>
  407c34:	stp	x29, x30, [sp, #-32]!
  407c38:	stp	x20, x19, [sp, #16]
  407c3c:	ldr	w9, [x0, #152]
  407c40:	mov	w8, #0x1                   	// #1
  407c44:	mov	x29, sp
  407c48:	cmp	w9, #0x3
  407c4c:	b.eq	407c68 <__fxstatat@plt+0x50c8>  // b.none
  407c50:	cmp	w9, #0x9
  407c54:	b.eq	407c68 <__fxstatat@plt+0x50c8>  // b.none
  407c58:	ldr	w8, [x0, #156]
  407c5c:	and	w8, w8, #0xf000
  407c60:	cmp	w8, #0x4, lsl #12
  407c64:	cset	w8, eq  // eq = none
  407c68:	ldr	w9, [x1, #152]
  407c6c:	cmp	w9, #0x9
  407c70:	b.eq	407c7c <__fxstatat@plt+0x50dc>  // b.none
  407c74:	cmp	w9, #0x3
  407c78:	b.ne	407c88 <__fxstatat@plt+0x50e8>  // b.any
  407c7c:	tbnz	w8, #0, 407cc4 <__fxstatat@plt+0x5124>
  407c80:	mov	w8, #0x1                   	// #1
  407c84:	b	407cb4 <__fxstatat@plt+0x5114>
  407c88:	ldr	w9, [x1, #156]
  407c8c:	eor	w10, w8, #0x1
  407c90:	mov	w11, #0x1                   	// #1
  407c94:	and	w9, w9, #0xf000
  407c98:	cmp	w9, #0x4, lsl #12
  407c9c:	cset	w9, eq  // eq = none
  407ca0:	orr	w10, w9, w10
  407ca4:	cmp	w10, #0x0
  407ca8:	eor	w9, w8, w9
  407cac:	cneg	w8, w11, eq  // eq = none
  407cb0:	tbz	w9, #0, 407cc4 <__fxstatat@plt+0x5124>
  407cb4:	ldp	x20, x19, [sp, #16]
  407cb8:	mov	w0, w8
  407cbc:	ldp	x29, x30, [sp], #32
  407cc0:	ret
  407cc4:	ldr	x19, [x0]
  407cc8:	ldr	x20, [x1]
  407ccc:	bl	402b30 <__errno_location@plt>
  407cd0:	str	wzr, [x0]
  407cd4:	mov	x0, x19
  407cd8:	mov	x1, x20
  407cdc:	ldp	x20, x19, [sp, #16]
  407ce0:	ldp	x29, x30, [sp], #32
  407ce4:	b	402ae0 <strcoll@plt>
  407ce8:	stp	x29, x30, [sp, #-32]!
  407cec:	stp	x20, x19, [sp, #16]
  407cf0:	ldr	x19, [x1]
  407cf4:	ldr	x20, [x0]
  407cf8:	mov	x29, sp
  407cfc:	bl	402b30 <__errno_location@plt>
  407d00:	str	wzr, [x0]
  407d04:	mov	x0, x19
  407d08:	mov	x1, x20
  407d0c:	ldp	x20, x19, [sp, #16]
  407d10:	ldp	x29, x30, [sp], #32
  407d14:	b	402ae0 <strcoll@plt>
  407d18:	stp	x29, x30, [sp, #-32]!
  407d1c:	stp	x20, x19, [sp, #16]
  407d20:	ldr	w9, [x0, #152]
  407d24:	mov	w8, #0x1                   	// #1
  407d28:	mov	x29, sp
  407d2c:	cmp	w9, #0x3
  407d30:	b.eq	407d4c <__fxstatat@plt+0x51ac>  // b.none
  407d34:	cmp	w9, #0x9
  407d38:	b.eq	407d4c <__fxstatat@plt+0x51ac>  // b.none
  407d3c:	ldr	w8, [x0, #156]
  407d40:	and	w8, w8, #0xf000
  407d44:	cmp	w8, #0x4, lsl #12
  407d48:	cset	w8, eq  // eq = none
  407d4c:	ldr	w9, [x1, #152]
  407d50:	cmp	w9, #0x9
  407d54:	b.eq	407d60 <__fxstatat@plt+0x51c0>  // b.none
  407d58:	cmp	w9, #0x3
  407d5c:	b.ne	407d6c <__fxstatat@plt+0x51cc>  // b.any
  407d60:	tbnz	w8, #0, 407da8 <__fxstatat@plt+0x5208>
  407d64:	mov	w8, #0x1                   	// #1
  407d68:	b	407d98 <__fxstatat@plt+0x51f8>
  407d6c:	ldr	w9, [x1, #156]
  407d70:	eor	w10, w8, #0x1
  407d74:	mov	w11, #0x1                   	// #1
  407d78:	and	w9, w9, #0xf000
  407d7c:	cmp	w9, #0x4, lsl #12
  407d80:	cset	w9, eq  // eq = none
  407d84:	orr	w10, w9, w10
  407d88:	cmp	w10, #0x0
  407d8c:	eor	w9, w8, w9
  407d90:	cneg	w8, w11, eq  // eq = none
  407d94:	tbz	w9, #0, 407da8 <__fxstatat@plt+0x5208>
  407d98:	ldp	x20, x19, [sp, #16]
  407d9c:	mov	w0, w8
  407da0:	ldp	x29, x30, [sp], #32
  407da4:	ret
  407da8:	ldr	x19, [x1]
  407dac:	ldr	x20, [x0]
  407db0:	bl	402b30 <__errno_location@plt>
  407db4:	str	wzr, [x0]
  407db8:	mov	x0, x19
  407dbc:	mov	x1, x20
  407dc0:	ldp	x20, x19, [sp, #16]
  407dc4:	ldp	x29, x30, [sp], #32
  407dc8:	b	402ae0 <strcoll@plt>
  407dcc:	ldr	x0, [x0]
  407dd0:	ldr	x1, [x1]
  407dd4:	b	402950 <strcmp@plt>
  407dd8:	ldr	w9, [x0, #152]
  407ddc:	mov	w8, #0x1                   	// #1
  407de0:	cmp	w9, #0x3
  407de4:	b.eq	407e00 <__fxstatat@plt+0x5260>  // b.none
  407de8:	cmp	w9, #0x9
  407dec:	b.eq	407e00 <__fxstatat@plt+0x5260>  // b.none
  407df0:	ldr	w8, [x0, #156]
  407df4:	and	w8, w8, #0xf000
  407df8:	cmp	w8, #0x4, lsl #12
  407dfc:	cset	w8, eq  // eq = none
  407e00:	ldr	w9, [x1, #152]
  407e04:	cmp	w9, #0x9
  407e08:	b.eq	407e14 <__fxstatat@plt+0x5274>  // b.none
  407e0c:	cmp	w9, #0x3
  407e10:	b.ne	407e20 <__fxstatat@plt+0x5280>  // b.any
  407e14:	tbnz	w8, #0, 407e54 <__fxstatat@plt+0x52b4>
  407e18:	mov	w8, #0x1                   	// #1
  407e1c:	b	407e4c <__fxstatat@plt+0x52ac>
  407e20:	ldr	w9, [x1, #156]
  407e24:	eor	w10, w8, #0x1
  407e28:	mov	w11, #0x1                   	// #1
  407e2c:	and	w9, w9, #0xf000
  407e30:	cmp	w9, #0x4, lsl #12
  407e34:	cset	w9, eq  // eq = none
  407e38:	orr	w10, w9, w10
  407e3c:	cmp	w10, #0x0
  407e40:	eor	w9, w8, w9
  407e44:	cneg	w8, w11, eq  // eq = none
  407e48:	tbz	w9, #0, 407e54 <__fxstatat@plt+0x52b4>
  407e4c:	mov	w0, w8
  407e50:	ret
  407e54:	ldr	x0, [x0]
  407e58:	ldr	x1, [x1]
  407e5c:	b	402950 <strcmp@plt>
  407e60:	ldr	x8, [x1]
  407e64:	ldr	x1, [x0]
  407e68:	mov	x0, x8
  407e6c:	b	402950 <strcmp@plt>
  407e70:	ldr	w9, [x0, #152]
  407e74:	mov	w8, #0x1                   	// #1
  407e78:	cmp	w9, #0x3
  407e7c:	b.eq	407e98 <__fxstatat@plt+0x52f8>  // b.none
  407e80:	cmp	w9, #0x9
  407e84:	b.eq	407e98 <__fxstatat@plt+0x52f8>  // b.none
  407e88:	ldr	w8, [x0, #156]
  407e8c:	and	w8, w8, #0xf000
  407e90:	cmp	w8, #0x4, lsl #12
  407e94:	cset	w8, eq  // eq = none
  407e98:	ldr	w9, [x1, #152]
  407e9c:	cmp	w9, #0x9
  407ea0:	b.eq	407eac <__fxstatat@plt+0x530c>  // b.none
  407ea4:	cmp	w9, #0x3
  407ea8:	b.ne	407eb8 <__fxstatat@plt+0x5318>  // b.any
  407eac:	tbnz	w8, #0, 407eec <__fxstatat@plt+0x534c>
  407eb0:	mov	w8, #0x1                   	// #1
  407eb4:	b	407ee4 <__fxstatat@plt+0x5344>
  407eb8:	ldr	w9, [x1, #156]
  407ebc:	eor	w10, w8, #0x1
  407ec0:	mov	w11, #0x1                   	// #1
  407ec4:	and	w9, w9, #0xf000
  407ec8:	cmp	w9, #0x4, lsl #12
  407ecc:	cset	w9, eq  // eq = none
  407ed0:	orr	w10, w9, w10
  407ed4:	cmp	w10, #0x0
  407ed8:	eor	w9, w8, w9
  407edc:	cneg	w8, w11, eq  // eq = none
  407ee0:	tbz	w9, #0, 407eec <__fxstatat@plt+0x534c>
  407ee4:	mov	w0, w8
  407ee8:	ret
  407eec:	ldr	x8, [x1]
  407ef0:	ldr	x1, [x0]
  407ef4:	mov	x0, x8
  407ef8:	b	402950 <strcmp@plt>
  407efc:	stp	x29, x30, [sp, #-64]!
  407f00:	stp	x22, x21, [sp, #32]
  407f04:	stp	x20, x19, [sp, #48]
  407f08:	ldr	x19, [x0]
  407f0c:	mov	x20, x1
  407f10:	mov	w1, #0x2e                  	// #46
  407f14:	str	x23, [sp, #16]
  407f18:	mov	x0, x19
  407f1c:	mov	x29, sp
  407f20:	bl	402870 <strrchr@plt>
  407f24:	ldr	x20, [x20]
  407f28:	mov	x21, x0
  407f2c:	mov	w1, #0x2e                  	// #46
  407f30:	mov	x0, x20
  407f34:	bl	402870 <strrchr@plt>
  407f38:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  407f3c:	add	x8, x8, #0x2c9
  407f40:	cmp	x21, #0x0
  407f44:	csel	x22, x8, x21, eq  // eq = none
  407f48:	cmp	x0, #0x0
  407f4c:	csel	x23, x8, x0, eq  // eq = none
  407f50:	bl	402b30 <__errno_location@plt>
  407f54:	mov	x21, x0
  407f58:	str	wzr, [x0]
  407f5c:	mov	x0, x22
  407f60:	mov	x1, x23
  407f64:	bl	402ae0 <strcoll@plt>
  407f68:	cbz	w0, 407f80 <__fxstatat@plt+0x53e0>
  407f6c:	ldp	x20, x19, [sp, #48]
  407f70:	ldp	x22, x21, [sp, #32]
  407f74:	ldr	x23, [sp, #16]
  407f78:	ldp	x29, x30, [sp], #64
  407f7c:	ret
  407f80:	str	wzr, [x21]
  407f84:	mov	x0, x19
  407f88:	mov	x1, x20
  407f8c:	ldp	x20, x19, [sp, #48]
  407f90:	ldp	x22, x21, [sp, #32]
  407f94:	ldr	x23, [sp, #16]
  407f98:	ldp	x29, x30, [sp], #64
  407f9c:	b	402ae0 <strcoll@plt>
  407fa0:	stp	x29, x30, [sp, #-64]!
  407fa4:	stp	x22, x21, [sp, #32]
  407fa8:	stp	x20, x19, [sp, #48]
  407fac:	ldr	w9, [x0, #152]
  407fb0:	mov	x19, x1
  407fb4:	mov	w8, #0x1                   	// #1
  407fb8:	str	x23, [sp, #16]
  407fbc:	cmp	w9, #0x3
  407fc0:	mov	x29, sp
  407fc4:	b.eq	407fe0 <__fxstatat@plt+0x5440>  // b.none
  407fc8:	cmp	w9, #0x9
  407fcc:	b.eq	407fe0 <__fxstatat@plt+0x5440>  // b.none
  407fd0:	ldr	w8, [x0, #156]
  407fd4:	and	w8, w8, #0xf000
  407fd8:	cmp	w8, #0x4, lsl #12
  407fdc:	cset	w8, eq  // eq = none
  407fe0:	ldr	w9, [x19, #152]
  407fe4:	cmp	w9, #0x9
  407fe8:	b.eq	407ff4 <__fxstatat@plt+0x5454>  // b.none
  407fec:	cmp	w9, #0x3
  407ff0:	b.ne	408000 <__fxstatat@plt+0x5460>  // b.any
  407ff4:	tbnz	w8, #0, 40802c <__fxstatat@plt+0x548c>
  407ff8:	mov	w8, #0x1                   	// #1
  407ffc:	b	408088 <__fxstatat@plt+0x54e8>
  408000:	ldr	w9, [x19, #156]
  408004:	eor	w10, w8, #0x1
  408008:	mov	w11, #0x1                   	// #1
  40800c:	and	w9, w9, #0xf000
  408010:	cmp	w9, #0x4, lsl #12
  408014:	cset	w9, eq  // eq = none
  408018:	orr	w10, w9, w10
  40801c:	cmp	w10, #0x0
  408020:	eor	w9, w8, w9
  408024:	cneg	w8, w11, eq  // eq = none
  408028:	tbnz	w9, #0, 408088 <__fxstatat@plt+0x54e8>
  40802c:	ldr	x20, [x0]
  408030:	mov	w1, #0x2e                  	// #46
  408034:	mov	x0, x20
  408038:	bl	402870 <strrchr@plt>
  40803c:	ldr	x19, [x19]
  408040:	mov	x21, x0
  408044:	mov	w1, #0x2e                  	// #46
  408048:	mov	x0, x19
  40804c:	bl	402870 <strrchr@plt>
  408050:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  408054:	add	x8, x8, #0x2c9
  408058:	cmp	x21, #0x0
  40805c:	csel	x22, x8, x21, eq  // eq = none
  408060:	cmp	x0, #0x0
  408064:	csel	x23, x8, x0, eq  // eq = none
  408068:	bl	402b30 <__errno_location@plt>
  40806c:	mov	x21, x0
  408070:	str	wzr, [x0]
  408074:	mov	x0, x22
  408078:	mov	x1, x23
  40807c:	bl	402ae0 <strcoll@plt>
  408080:	mov	w8, w0
  408084:	cbz	w0, 4080a0 <__fxstatat@plt+0x5500>
  408088:	ldp	x20, x19, [sp, #48]
  40808c:	ldp	x22, x21, [sp, #32]
  408090:	ldr	x23, [sp, #16]
  408094:	mov	w0, w8
  408098:	ldp	x29, x30, [sp], #64
  40809c:	ret
  4080a0:	str	wzr, [x21]
  4080a4:	mov	x0, x20
  4080a8:	mov	x1, x19
  4080ac:	ldp	x20, x19, [sp, #48]
  4080b0:	ldp	x22, x21, [sp, #32]
  4080b4:	ldr	x23, [sp, #16]
  4080b8:	ldp	x29, x30, [sp], #64
  4080bc:	b	402ae0 <strcoll@plt>
  4080c0:	stp	x29, x30, [sp, #-64]!
  4080c4:	stp	x22, x21, [sp, #32]
  4080c8:	stp	x20, x19, [sp, #48]
  4080cc:	ldr	x19, [x1]
  4080d0:	mov	x20, x0
  4080d4:	mov	w1, #0x2e                  	// #46
  4080d8:	str	x23, [sp, #16]
  4080dc:	mov	x0, x19
  4080e0:	mov	x29, sp
  4080e4:	bl	402870 <strrchr@plt>
  4080e8:	ldr	x20, [x20]
  4080ec:	mov	x21, x0
  4080f0:	mov	w1, #0x2e                  	// #46
  4080f4:	mov	x0, x20
  4080f8:	bl	402870 <strrchr@plt>
  4080fc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  408100:	add	x8, x8, #0x2c9
  408104:	cmp	x21, #0x0
  408108:	csel	x22, x8, x21, eq  // eq = none
  40810c:	cmp	x0, #0x0
  408110:	csel	x23, x8, x0, eq  // eq = none
  408114:	bl	402b30 <__errno_location@plt>
  408118:	mov	x21, x0
  40811c:	str	wzr, [x0]
  408120:	mov	x0, x22
  408124:	mov	x1, x23
  408128:	bl	402ae0 <strcoll@plt>
  40812c:	cbz	w0, 408144 <__fxstatat@plt+0x55a4>
  408130:	ldp	x20, x19, [sp, #48]
  408134:	ldp	x22, x21, [sp, #32]
  408138:	ldr	x23, [sp, #16]
  40813c:	ldp	x29, x30, [sp], #64
  408140:	ret
  408144:	str	wzr, [x21]
  408148:	mov	x0, x19
  40814c:	mov	x1, x20
  408150:	ldp	x20, x19, [sp, #48]
  408154:	ldp	x22, x21, [sp, #32]
  408158:	ldr	x23, [sp, #16]
  40815c:	ldp	x29, x30, [sp], #64
  408160:	b	402ae0 <strcoll@plt>
  408164:	stp	x29, x30, [sp, #-64]!
  408168:	stp	x22, x21, [sp, #32]
  40816c:	stp	x20, x19, [sp, #48]
  408170:	ldr	w9, [x0, #152]
  408174:	mov	x19, x0
  408178:	mov	w8, #0x1                   	// #1
  40817c:	str	x23, [sp, #16]
  408180:	cmp	w9, #0x3
  408184:	mov	x29, sp
  408188:	b.eq	4081a4 <__fxstatat@plt+0x5604>  // b.none
  40818c:	cmp	w9, #0x9
  408190:	b.eq	4081a4 <__fxstatat@plt+0x5604>  // b.none
  408194:	ldr	w8, [x19, #156]
  408198:	and	w8, w8, #0xf000
  40819c:	cmp	w8, #0x4, lsl #12
  4081a0:	cset	w8, eq  // eq = none
  4081a4:	ldr	w9, [x1, #152]
  4081a8:	cmp	w9, #0x9
  4081ac:	b.eq	4081b8 <__fxstatat@plt+0x5618>  // b.none
  4081b0:	cmp	w9, #0x3
  4081b4:	b.ne	4081c4 <__fxstatat@plt+0x5624>  // b.any
  4081b8:	tbnz	w8, #0, 4081f0 <__fxstatat@plt+0x5650>
  4081bc:	mov	w0, #0x1                   	// #1
  4081c0:	b	408248 <__fxstatat@plt+0x56a8>
  4081c4:	ldr	w9, [x1, #156]
  4081c8:	eor	w10, w8, #0x1
  4081cc:	mov	w11, #0x1                   	// #1
  4081d0:	and	w9, w9, #0xf000
  4081d4:	cmp	w9, #0x4, lsl #12
  4081d8:	cset	w9, eq  // eq = none
  4081dc:	orr	w10, w9, w10
  4081e0:	cmp	w10, #0x0
  4081e4:	eor	w8, w8, w9
  4081e8:	cneg	w0, w11, eq  // eq = none
  4081ec:	tbnz	w8, #0, 408248 <__fxstatat@plt+0x56a8>
  4081f0:	ldr	x20, [x1]
  4081f4:	mov	w1, #0x2e                  	// #46
  4081f8:	mov	x0, x20
  4081fc:	bl	402870 <strrchr@plt>
  408200:	ldr	x19, [x19]
  408204:	mov	x21, x0
  408208:	mov	w1, #0x2e                  	// #46
  40820c:	mov	x0, x19
  408210:	bl	402870 <strrchr@plt>
  408214:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  408218:	add	x8, x8, #0x2c9
  40821c:	cmp	x21, #0x0
  408220:	csel	x22, x8, x21, eq  // eq = none
  408224:	cmp	x0, #0x0
  408228:	csel	x23, x8, x0, eq  // eq = none
  40822c:	bl	402b30 <__errno_location@plt>
  408230:	mov	x21, x0
  408234:	str	wzr, [x0]
  408238:	mov	x0, x22
  40823c:	mov	x1, x23
  408240:	bl	402ae0 <strcoll@plt>
  408244:	cbz	w0, 40825c <__fxstatat@plt+0x56bc>
  408248:	ldp	x20, x19, [sp, #48]
  40824c:	ldp	x22, x21, [sp, #32]
  408250:	ldr	x23, [sp, #16]
  408254:	ldp	x29, x30, [sp], #64
  408258:	ret
  40825c:	str	wzr, [x21]
  408260:	mov	x0, x20
  408264:	mov	x1, x19
  408268:	ldp	x20, x19, [sp, #48]
  40826c:	ldp	x22, x21, [sp, #32]
  408270:	ldr	x23, [sp, #16]
  408274:	ldp	x29, x30, [sp], #64
  408278:	b	402ae0 <strcoll@plt>
  40827c:	stp	x29, x30, [sp, #-48]!
  408280:	stp	x20, x19, [sp, #32]
  408284:	ldr	x19, [x0]
  408288:	mov	x20, x1
  40828c:	mov	w1, #0x2e                  	// #46
  408290:	str	x21, [sp, #16]
  408294:	mov	x0, x19
  408298:	mov	x29, sp
  40829c:	bl	402870 <strrchr@plt>
  4082a0:	ldr	x20, [x20]
  4082a4:	mov	x21, x0
  4082a8:	mov	w1, #0x2e                  	// #46
  4082ac:	mov	x0, x20
  4082b0:	bl	402870 <strrchr@plt>
  4082b4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  4082b8:	add	x9, x9, #0x2c9
  4082bc:	cmp	x21, #0x0
  4082c0:	csel	x8, x9, x21, eq  // eq = none
  4082c4:	cmp	x0, #0x0
  4082c8:	csel	x1, x9, x0, eq  // eq = none
  4082cc:	mov	x0, x8
  4082d0:	bl	402950 <strcmp@plt>
  4082d4:	cbz	w0, 4082e8 <__fxstatat@plt+0x5748>
  4082d8:	ldp	x20, x19, [sp, #32]
  4082dc:	ldr	x21, [sp, #16]
  4082e0:	ldp	x29, x30, [sp], #48
  4082e4:	ret
  4082e8:	mov	x0, x19
  4082ec:	mov	x1, x20
  4082f0:	ldp	x20, x19, [sp, #32]
  4082f4:	ldr	x21, [sp, #16]
  4082f8:	ldp	x29, x30, [sp], #48
  4082fc:	b	402950 <strcmp@plt>
  408300:	stp	x29, x30, [sp, #-48]!
  408304:	stp	x20, x19, [sp, #32]
  408308:	ldr	w9, [x0, #152]
  40830c:	mov	x19, x1
  408310:	mov	w8, #0x1                   	// #1
  408314:	str	x21, [sp, #16]
  408318:	cmp	w9, #0x3
  40831c:	mov	x29, sp
  408320:	b.eq	40833c <__fxstatat@plt+0x579c>  // b.none
  408324:	cmp	w9, #0x9
  408328:	b.eq	40833c <__fxstatat@plt+0x579c>  // b.none
  40832c:	ldr	w8, [x0, #156]
  408330:	and	w8, w8, #0xf000
  408334:	cmp	w8, #0x4, lsl #12
  408338:	cset	w8, eq  // eq = none
  40833c:	ldr	w9, [x19, #152]
  408340:	cmp	w9, #0x9
  408344:	b.eq	408350 <__fxstatat@plt+0x57b0>  // b.none
  408348:	cmp	w9, #0x3
  40834c:	b.ne	40835c <__fxstatat@plt+0x57bc>  // b.any
  408350:	tbnz	w8, #0, 408388 <__fxstatat@plt+0x57e8>
  408354:	mov	w8, #0x1                   	// #1
  408358:	b	4083d4 <__fxstatat@plt+0x5834>
  40835c:	ldr	w9, [x19, #156]
  408360:	eor	w10, w8, #0x1
  408364:	mov	w11, #0x1                   	// #1
  408368:	and	w9, w9, #0xf000
  40836c:	cmp	w9, #0x4, lsl #12
  408370:	cset	w9, eq  // eq = none
  408374:	orr	w10, w9, w10
  408378:	cmp	w10, #0x0
  40837c:	eor	w9, w8, w9
  408380:	cneg	w8, w11, eq  // eq = none
  408384:	tbnz	w9, #0, 4083d4 <__fxstatat@plt+0x5834>
  408388:	ldr	x20, [x0]
  40838c:	mov	w1, #0x2e                  	// #46
  408390:	mov	x0, x20
  408394:	bl	402870 <strrchr@plt>
  408398:	ldr	x19, [x19]
  40839c:	mov	x21, x0
  4083a0:	mov	w1, #0x2e                  	// #46
  4083a4:	mov	x0, x19
  4083a8:	bl	402870 <strrchr@plt>
  4083ac:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  4083b0:	add	x9, x9, #0x2c9
  4083b4:	cmp	x21, #0x0
  4083b8:	csel	x8, x9, x21, eq  // eq = none
  4083bc:	cmp	x0, #0x0
  4083c0:	csel	x1, x9, x0, eq  // eq = none
  4083c4:	mov	x0, x8
  4083c8:	bl	402950 <strcmp@plt>
  4083cc:	mov	w8, w0
  4083d0:	cbz	w0, 4083e8 <__fxstatat@plt+0x5848>
  4083d4:	ldp	x20, x19, [sp, #32]
  4083d8:	ldr	x21, [sp, #16]
  4083dc:	mov	w0, w8
  4083e0:	ldp	x29, x30, [sp], #48
  4083e4:	ret
  4083e8:	mov	x0, x20
  4083ec:	mov	x1, x19
  4083f0:	ldp	x20, x19, [sp, #32]
  4083f4:	ldr	x21, [sp, #16]
  4083f8:	ldp	x29, x30, [sp], #48
  4083fc:	b	402950 <strcmp@plt>
  408400:	stp	x29, x30, [sp, #-48]!
  408404:	stp	x20, x19, [sp, #32]
  408408:	ldr	x19, [x1]
  40840c:	mov	x20, x0
  408410:	mov	w1, #0x2e                  	// #46
  408414:	str	x21, [sp, #16]
  408418:	mov	x0, x19
  40841c:	mov	x29, sp
  408420:	bl	402870 <strrchr@plt>
  408424:	ldr	x20, [x20]
  408428:	mov	x21, x0
  40842c:	mov	w1, #0x2e                  	// #46
  408430:	mov	x0, x20
  408434:	bl	402870 <strrchr@plt>
  408438:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  40843c:	add	x9, x9, #0x2c9
  408440:	cmp	x21, #0x0
  408444:	csel	x8, x9, x21, eq  // eq = none
  408448:	cmp	x0, #0x0
  40844c:	csel	x1, x9, x0, eq  // eq = none
  408450:	mov	x0, x8
  408454:	bl	402950 <strcmp@plt>
  408458:	cbz	w0, 40846c <__fxstatat@plt+0x58cc>
  40845c:	ldp	x20, x19, [sp, #32]
  408460:	ldr	x21, [sp, #16]
  408464:	ldp	x29, x30, [sp], #48
  408468:	ret
  40846c:	mov	x0, x19
  408470:	mov	x1, x20
  408474:	ldp	x20, x19, [sp, #32]
  408478:	ldr	x21, [sp, #16]
  40847c:	ldp	x29, x30, [sp], #48
  408480:	b	402950 <strcmp@plt>
  408484:	stp	x29, x30, [sp, #-48]!
  408488:	stp	x20, x19, [sp, #32]
  40848c:	ldr	w9, [x0, #152]
  408490:	mov	x19, x0
  408494:	mov	w8, #0x1                   	// #1
  408498:	str	x21, [sp, #16]
  40849c:	cmp	w9, #0x3
  4084a0:	mov	x29, sp
  4084a4:	b.eq	4084c0 <__fxstatat@plt+0x5920>  // b.none
  4084a8:	cmp	w9, #0x9
  4084ac:	b.eq	4084c0 <__fxstatat@plt+0x5920>  // b.none
  4084b0:	ldr	w8, [x19, #156]
  4084b4:	and	w8, w8, #0xf000
  4084b8:	cmp	w8, #0x4, lsl #12
  4084bc:	cset	w8, eq  // eq = none
  4084c0:	ldr	w9, [x1, #152]
  4084c4:	cmp	w9, #0x9
  4084c8:	b.eq	4084d4 <__fxstatat@plt+0x5934>  // b.none
  4084cc:	cmp	w9, #0x3
  4084d0:	b.ne	4084e0 <__fxstatat@plt+0x5940>  // b.any
  4084d4:	tbnz	w8, #0, 40850c <__fxstatat@plt+0x596c>
  4084d8:	mov	w0, #0x1                   	// #1
  4084dc:	b	408554 <__fxstatat@plt+0x59b4>
  4084e0:	ldr	w9, [x1, #156]
  4084e4:	eor	w10, w8, #0x1
  4084e8:	mov	w11, #0x1                   	// #1
  4084ec:	and	w9, w9, #0xf000
  4084f0:	cmp	w9, #0x4, lsl #12
  4084f4:	cset	w9, eq  // eq = none
  4084f8:	orr	w10, w9, w10
  4084fc:	cmp	w10, #0x0
  408500:	eor	w8, w8, w9
  408504:	cneg	w0, w11, eq  // eq = none
  408508:	tbnz	w8, #0, 408554 <__fxstatat@plt+0x59b4>
  40850c:	ldr	x20, [x1]
  408510:	mov	w1, #0x2e                  	// #46
  408514:	mov	x0, x20
  408518:	bl	402870 <strrchr@plt>
  40851c:	ldr	x19, [x19]
  408520:	mov	x21, x0
  408524:	mov	w1, #0x2e                  	// #46
  408528:	mov	x0, x19
  40852c:	bl	402870 <strrchr@plt>
  408530:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  408534:	add	x9, x9, #0x2c9
  408538:	cmp	x21, #0x0
  40853c:	csel	x8, x9, x21, eq  // eq = none
  408540:	cmp	x0, #0x0
  408544:	csel	x1, x9, x0, eq  // eq = none
  408548:	mov	x0, x8
  40854c:	bl	402950 <strcmp@plt>
  408550:	cbz	w0, 408564 <__fxstatat@plt+0x59c4>
  408554:	ldp	x20, x19, [sp, #32]
  408558:	ldr	x21, [sp, #16]
  40855c:	ldp	x29, x30, [sp], #48
  408560:	ret
  408564:	mov	x0, x20
  408568:	mov	x1, x19
  40856c:	ldp	x20, x19, [sp, #32]
  408570:	ldr	x21, [sp, #16]
  408574:	ldp	x29, x30, [sp], #48
  408578:	b	402950 <strcmp@plt>
  40857c:	stp	x29, x30, [sp, #-32]!
  408580:	stp	x20, x19, [sp, #16]
  408584:	ldr	x8, [x1, #72]
  408588:	ldr	x9, [x0, #72]
  40858c:	mov	x29, sp
  408590:	cmp	x8, x9
  408594:	cset	w8, gt
  408598:	csinv	w8, w8, wzr, ge  // ge = tcont
  40859c:	cbz	w8, 4085b0 <__fxstatat@plt+0x5a10>
  4085a0:	ldp	x20, x19, [sp, #16]
  4085a4:	mov	w0, w8
  4085a8:	ldp	x29, x30, [sp], #32
  4085ac:	ret
  4085b0:	ldr	x19, [x0]
  4085b4:	ldr	x20, [x1]
  4085b8:	bl	402b30 <__errno_location@plt>
  4085bc:	str	wzr, [x0]
  4085c0:	mov	x0, x19
  4085c4:	mov	x1, x20
  4085c8:	ldp	x20, x19, [sp, #16]
  4085cc:	ldp	x29, x30, [sp], #32
  4085d0:	b	402ae0 <strcoll@plt>
  4085d4:	stp	x29, x30, [sp, #-32]!
  4085d8:	stp	x20, x19, [sp, #16]
  4085dc:	ldr	w9, [x0, #152]
  4085e0:	mov	w8, #0x1                   	// #1
  4085e4:	mov	x29, sp
  4085e8:	cmp	w9, #0x3
  4085ec:	b.eq	408608 <__fxstatat@plt+0x5a68>  // b.none
  4085f0:	cmp	w9, #0x9
  4085f4:	b.eq	408608 <__fxstatat@plt+0x5a68>  // b.none
  4085f8:	ldr	w8, [x0, #156]
  4085fc:	and	w8, w8, #0xf000
  408600:	cmp	w8, #0x4, lsl #12
  408604:	cset	w8, eq  // eq = none
  408608:	ldr	w9, [x1, #152]
  40860c:	cmp	w9, #0x9
  408610:	b.eq	40861c <__fxstatat@plt+0x5a7c>  // b.none
  408614:	cmp	w9, #0x3
  408618:	b.ne	408628 <__fxstatat@plt+0x5a88>  // b.any
  40861c:	tbnz	w8, #0, 408654 <__fxstatat@plt+0x5ab4>
  408620:	mov	w8, #0x1                   	// #1
  408624:	b	40866c <__fxstatat@plt+0x5acc>
  408628:	ldr	w9, [x1, #156]
  40862c:	eor	w10, w8, #0x1
  408630:	mov	w11, #0x1                   	// #1
  408634:	and	w9, w9, #0xf000
  408638:	cmp	w9, #0x4, lsl #12
  40863c:	cset	w9, eq  // eq = none
  408640:	orr	w10, w9, w10
  408644:	cmp	w10, #0x0
  408648:	eor	w9, w8, w9
  40864c:	cneg	w8, w11, eq  // eq = none
  408650:	tbnz	w9, #0, 40866c <__fxstatat@plt+0x5acc>
  408654:	ldr	x8, [x1, #72]
  408658:	ldr	x9, [x0, #72]
  40865c:	cmp	x8, x9
  408660:	cset	w8, gt
  408664:	csinv	w8, w8, wzr, ge  // ge = tcont
  408668:	cbz	w8, 40867c <__fxstatat@plt+0x5adc>
  40866c:	ldp	x20, x19, [sp, #16]
  408670:	mov	w0, w8
  408674:	ldp	x29, x30, [sp], #32
  408678:	ret
  40867c:	ldr	x19, [x0]
  408680:	ldr	x20, [x1]
  408684:	bl	402b30 <__errno_location@plt>
  408688:	str	wzr, [x0]
  40868c:	mov	x0, x19
  408690:	mov	x1, x20
  408694:	ldp	x20, x19, [sp, #16]
  408698:	ldp	x29, x30, [sp], #32
  40869c:	b	402ae0 <strcoll@plt>
  4086a0:	stp	x29, x30, [sp, #-32]!
  4086a4:	stp	x20, x19, [sp, #16]
  4086a8:	ldr	x8, [x0, #72]
  4086ac:	ldr	x9, [x1, #72]
  4086b0:	mov	x29, sp
  4086b4:	cmp	x8, x9
  4086b8:	cset	w8, gt
  4086bc:	csinv	w8, w8, wzr, ge  // ge = tcont
  4086c0:	cbz	w8, 4086d4 <__fxstatat@plt+0x5b34>
  4086c4:	ldp	x20, x19, [sp, #16]
  4086c8:	mov	w0, w8
  4086cc:	ldp	x29, x30, [sp], #32
  4086d0:	ret
  4086d4:	ldr	x19, [x1]
  4086d8:	ldr	x20, [x0]
  4086dc:	bl	402b30 <__errno_location@plt>
  4086e0:	str	wzr, [x0]
  4086e4:	mov	x0, x19
  4086e8:	mov	x1, x20
  4086ec:	ldp	x20, x19, [sp, #16]
  4086f0:	ldp	x29, x30, [sp], #32
  4086f4:	b	402ae0 <strcoll@plt>
  4086f8:	stp	x29, x30, [sp, #-32]!
  4086fc:	stp	x20, x19, [sp, #16]
  408700:	ldr	w9, [x0, #152]
  408704:	mov	w8, #0x1                   	// #1
  408708:	mov	x29, sp
  40870c:	cmp	w9, #0x3
  408710:	b.eq	40872c <__fxstatat@plt+0x5b8c>  // b.none
  408714:	cmp	w9, #0x9
  408718:	b.eq	40872c <__fxstatat@plt+0x5b8c>  // b.none
  40871c:	ldr	w8, [x0, #156]
  408720:	and	w8, w8, #0xf000
  408724:	cmp	w8, #0x4, lsl #12
  408728:	cset	w8, eq  // eq = none
  40872c:	ldr	w9, [x1, #152]
  408730:	cmp	w9, #0x9
  408734:	b.eq	408740 <__fxstatat@plt+0x5ba0>  // b.none
  408738:	cmp	w9, #0x3
  40873c:	b.ne	40874c <__fxstatat@plt+0x5bac>  // b.any
  408740:	tbnz	w8, #0, 408778 <__fxstatat@plt+0x5bd8>
  408744:	mov	w8, #0x1                   	// #1
  408748:	b	408790 <__fxstatat@plt+0x5bf0>
  40874c:	ldr	w9, [x1, #156]
  408750:	eor	w10, w8, #0x1
  408754:	mov	w11, #0x1                   	// #1
  408758:	and	w9, w9, #0xf000
  40875c:	cmp	w9, #0x4, lsl #12
  408760:	cset	w9, eq  // eq = none
  408764:	orr	w10, w9, w10
  408768:	cmp	w10, #0x0
  40876c:	eor	w9, w8, w9
  408770:	cneg	w8, w11, eq  // eq = none
  408774:	tbnz	w9, #0, 408790 <__fxstatat@plt+0x5bf0>
  408778:	ldr	x8, [x0, #72]
  40877c:	ldr	x9, [x1, #72]
  408780:	cmp	x8, x9
  408784:	cset	w8, gt
  408788:	csinv	w8, w8, wzr, ge  // ge = tcont
  40878c:	cbz	w8, 4087a0 <__fxstatat@plt+0x5c00>
  408790:	ldp	x20, x19, [sp, #16]
  408794:	mov	w0, w8
  408798:	ldp	x29, x30, [sp], #32
  40879c:	ret
  4087a0:	ldr	x19, [x1]
  4087a4:	ldr	x20, [x0]
  4087a8:	bl	402b30 <__errno_location@plt>
  4087ac:	str	wzr, [x0]
  4087b0:	mov	x0, x19
  4087b4:	mov	x1, x20
  4087b8:	ldp	x20, x19, [sp, #16]
  4087bc:	ldp	x29, x30, [sp], #32
  4087c0:	b	402ae0 <strcoll@plt>
  4087c4:	ldr	x8, [x1, #72]
  4087c8:	ldr	x9, [x0, #72]
  4087cc:	cmp	x8, x9
  4087d0:	cset	w8, gt
  4087d4:	csinv	w8, w8, wzr, ge  // ge = tcont
  4087d8:	cbz	w8, 4087e4 <__fxstatat@plt+0x5c44>
  4087dc:	mov	w0, w8
  4087e0:	ret
  4087e4:	ldr	x0, [x0]
  4087e8:	ldr	x1, [x1]
  4087ec:	b	402950 <strcmp@plt>
  4087f0:	ldr	w9, [x0, #152]
  4087f4:	mov	w8, #0x1                   	// #1
  4087f8:	cmp	w9, #0x3
  4087fc:	b.eq	408818 <__fxstatat@plt+0x5c78>  // b.none
  408800:	cmp	w9, #0x9
  408804:	b.eq	408818 <__fxstatat@plt+0x5c78>  // b.none
  408808:	ldr	w8, [x0, #156]
  40880c:	and	w8, w8, #0xf000
  408810:	cmp	w8, #0x4, lsl #12
  408814:	cset	w8, eq  // eq = none
  408818:	ldr	w9, [x1, #152]
  40881c:	cmp	w9, #0x9
  408820:	b.eq	40882c <__fxstatat@plt+0x5c8c>  // b.none
  408824:	cmp	w9, #0x3
  408828:	b.ne	408838 <__fxstatat@plt+0x5c98>  // b.any
  40882c:	tbnz	w8, #0, 408864 <__fxstatat@plt+0x5cc4>
  408830:	mov	w8, #0x1                   	// #1
  408834:	b	40887c <__fxstatat@plt+0x5cdc>
  408838:	ldr	w9, [x1, #156]
  40883c:	eor	w10, w8, #0x1
  408840:	mov	w11, #0x1                   	// #1
  408844:	and	w9, w9, #0xf000
  408848:	cmp	w9, #0x4, lsl #12
  40884c:	cset	w9, eq  // eq = none
  408850:	orr	w10, w9, w10
  408854:	cmp	w10, #0x0
  408858:	eor	w9, w8, w9
  40885c:	cneg	w8, w11, eq  // eq = none
  408860:	tbnz	w9, #0, 40887c <__fxstatat@plt+0x5cdc>
  408864:	ldr	x8, [x1, #72]
  408868:	ldr	x9, [x0, #72]
  40886c:	cmp	x8, x9
  408870:	cset	w8, gt
  408874:	csinv	w8, w8, wzr, ge  // ge = tcont
  408878:	cbz	w8, 408884 <__fxstatat@plt+0x5ce4>
  40887c:	mov	w0, w8
  408880:	ret
  408884:	ldr	x0, [x0]
  408888:	ldr	x1, [x1]
  40888c:	b	402950 <strcmp@plt>
  408890:	ldr	x8, [x0, #72]
  408894:	ldr	x9, [x1, #72]
  408898:	cmp	x8, x9
  40889c:	cset	w8, gt
  4088a0:	csinv	w8, w8, wzr, ge  // ge = tcont
  4088a4:	cbz	w8, 4088b0 <__fxstatat@plt+0x5d10>
  4088a8:	mov	w0, w8
  4088ac:	ret
  4088b0:	ldr	x8, [x1]
  4088b4:	ldr	x1, [x0]
  4088b8:	mov	x0, x8
  4088bc:	b	402950 <strcmp@plt>
  4088c0:	ldr	w9, [x0, #152]
  4088c4:	mov	w8, #0x1                   	// #1
  4088c8:	cmp	w9, #0x3
  4088cc:	b.eq	4088e8 <__fxstatat@plt+0x5d48>  // b.none
  4088d0:	cmp	w9, #0x9
  4088d4:	b.eq	4088e8 <__fxstatat@plt+0x5d48>  // b.none
  4088d8:	ldr	w8, [x0, #156]
  4088dc:	and	w8, w8, #0xf000
  4088e0:	cmp	w8, #0x4, lsl #12
  4088e4:	cset	w8, eq  // eq = none
  4088e8:	ldr	w9, [x1, #152]
  4088ec:	cmp	w9, #0x9
  4088f0:	b.eq	4088fc <__fxstatat@plt+0x5d5c>  // b.none
  4088f4:	cmp	w9, #0x3
  4088f8:	b.ne	408908 <__fxstatat@plt+0x5d68>  // b.any
  4088fc:	tbnz	w8, #0, 408934 <__fxstatat@plt+0x5d94>
  408900:	mov	w8, #0x1                   	// #1
  408904:	b	40894c <__fxstatat@plt+0x5dac>
  408908:	ldr	w9, [x1, #156]
  40890c:	eor	w10, w8, #0x1
  408910:	mov	w11, #0x1                   	// #1
  408914:	and	w9, w9, #0xf000
  408918:	cmp	w9, #0x4, lsl #12
  40891c:	cset	w9, eq  // eq = none
  408920:	orr	w10, w9, w10
  408924:	cmp	w10, #0x0
  408928:	eor	w9, w8, w9
  40892c:	cneg	w8, w11, eq  // eq = none
  408930:	tbnz	w9, #0, 40894c <__fxstatat@plt+0x5dac>
  408934:	ldr	x8, [x0, #72]
  408938:	ldr	x9, [x1, #72]
  40893c:	cmp	x8, x9
  408940:	cset	w8, gt
  408944:	csinv	w8, w8, wzr, ge  // ge = tcont
  408948:	cbz	w8, 408954 <__fxstatat@plt+0x5db4>
  40894c:	mov	w0, w8
  408950:	ret
  408954:	ldr	x8, [x1]
  408958:	ldr	x1, [x0]
  40895c:	mov	x0, x8
  408960:	b	402950 <strcmp@plt>
  408964:	ldr	x0, [x0]
  408968:	ldr	x1, [x1]
  40896c:	b	40b730 <__fxstatat@plt+0x8b90>
  408970:	ldr	w9, [x0, #152]
  408974:	mov	w8, #0x1                   	// #1
  408978:	cmp	w9, #0x3
  40897c:	b.eq	408998 <__fxstatat@plt+0x5df8>  // b.none
  408980:	cmp	w9, #0x9
  408984:	b.eq	408998 <__fxstatat@plt+0x5df8>  // b.none
  408988:	ldr	w8, [x0, #156]
  40898c:	and	w8, w8, #0xf000
  408990:	cmp	w8, #0x4, lsl #12
  408994:	cset	w8, eq  // eq = none
  408998:	ldr	w9, [x1, #152]
  40899c:	cmp	w9, #0x9
  4089a0:	b.eq	4089ac <__fxstatat@plt+0x5e0c>  // b.none
  4089a4:	cmp	w9, #0x3
  4089a8:	b.ne	4089b8 <__fxstatat@plt+0x5e18>  // b.any
  4089ac:	tbnz	w8, #0, 4089ec <__fxstatat@plt+0x5e4c>
  4089b0:	mov	w8, #0x1                   	// #1
  4089b4:	b	4089e4 <__fxstatat@plt+0x5e44>
  4089b8:	ldr	w9, [x1, #156]
  4089bc:	eor	w10, w8, #0x1
  4089c0:	mov	w11, #0x1                   	// #1
  4089c4:	and	w9, w9, #0xf000
  4089c8:	cmp	w9, #0x4, lsl #12
  4089cc:	cset	w9, eq  // eq = none
  4089d0:	orr	w10, w9, w10
  4089d4:	cmp	w10, #0x0
  4089d8:	eor	w9, w8, w9
  4089dc:	cneg	w8, w11, eq  // eq = none
  4089e0:	tbz	w9, #0, 4089ec <__fxstatat@plt+0x5e4c>
  4089e4:	mov	w0, w8
  4089e8:	ret
  4089ec:	ldr	x0, [x0]
  4089f0:	ldr	x1, [x1]
  4089f4:	b	40b730 <__fxstatat@plt+0x8b90>
  4089f8:	ldr	x8, [x1]
  4089fc:	ldr	x1, [x0]
  408a00:	mov	x0, x8
  408a04:	b	40b730 <__fxstatat@plt+0x8b90>
  408a08:	ldr	w9, [x0, #152]
  408a0c:	mov	w8, #0x1                   	// #1
  408a10:	cmp	w9, #0x3
  408a14:	b.eq	408a30 <__fxstatat@plt+0x5e90>  // b.none
  408a18:	cmp	w9, #0x9
  408a1c:	b.eq	408a30 <__fxstatat@plt+0x5e90>  // b.none
  408a20:	ldr	w8, [x0, #156]
  408a24:	and	w8, w8, #0xf000
  408a28:	cmp	w8, #0x4, lsl #12
  408a2c:	cset	w8, eq  // eq = none
  408a30:	ldr	w9, [x1, #152]
  408a34:	cmp	w9, #0x9
  408a38:	b.eq	408a44 <__fxstatat@plt+0x5ea4>  // b.none
  408a3c:	cmp	w9, #0x3
  408a40:	b.ne	408a50 <__fxstatat@plt+0x5eb0>  // b.any
  408a44:	tbnz	w8, #0, 408a84 <__fxstatat@plt+0x5ee4>
  408a48:	mov	w8, #0x1                   	// #1
  408a4c:	b	408a7c <__fxstatat@plt+0x5edc>
  408a50:	ldr	w9, [x1, #156]
  408a54:	eor	w10, w8, #0x1
  408a58:	mov	w11, #0x1                   	// #1
  408a5c:	and	w9, w9, #0xf000
  408a60:	cmp	w9, #0x4, lsl #12
  408a64:	cset	w9, eq  // eq = none
  408a68:	orr	w10, w9, w10
  408a6c:	cmp	w10, #0x0
  408a70:	eor	w9, w8, w9
  408a74:	cneg	w8, w11, eq  // eq = none
  408a78:	tbz	w9, #0, 408a84 <__fxstatat@plt+0x5ee4>
  408a7c:	mov	w0, w8
  408a80:	ret
  408a84:	ldr	x8, [x1]
  408a88:	ldr	x1, [x0]
  408a8c:	mov	x0, x8
  408a90:	b	40b730 <__fxstatat@plt+0x8b90>
  408a94:	stp	x29, x30, [sp, #-32]!
  408a98:	stp	x20, x19, [sp, #16]
  408a9c:	ldr	x8, [x1, #112]
  408aa0:	ldr	x9, [x0, #112]
  408aa4:	mov	x29, sp
  408aa8:	cmp	x8, x9
  408aac:	b.ge	408ab8 <__fxstatat@plt+0x5f18>  // b.tcont
  408ab0:	mov	w8, #0xffffffff            	// #-1
  408ab4:	b	408ad4 <__fxstatat@plt+0x5f34>
  408ab8:	b.le	408ac4 <__fxstatat@plt+0x5f24>
  408abc:	mov	w8, #0x1                   	// #1
  408ac0:	b	408ad4 <__fxstatat@plt+0x5f34>
  408ac4:	ldr	x8, [x1, #120]
  408ac8:	ldr	x9, [x0, #120]
  408acc:	subs	w8, w8, w9
  408ad0:	b.eq	408ae4 <__fxstatat@plt+0x5f44>  // b.none
  408ad4:	ldp	x20, x19, [sp, #16]
  408ad8:	mov	w0, w8
  408adc:	ldp	x29, x30, [sp], #32
  408ae0:	ret
  408ae4:	ldr	x19, [x0]
  408ae8:	ldr	x20, [x1]
  408aec:	bl	402b30 <__errno_location@plt>
  408af0:	str	wzr, [x0]
  408af4:	mov	x0, x19
  408af8:	mov	x1, x20
  408afc:	ldp	x20, x19, [sp, #16]
  408b00:	ldp	x29, x30, [sp], #32
  408b04:	b	402ae0 <strcoll@plt>
  408b08:	stp	x29, x30, [sp, #-32]!
  408b0c:	stp	x20, x19, [sp, #16]
  408b10:	ldr	w9, [x0, #152]
  408b14:	mov	w8, #0x1                   	// #1
  408b18:	mov	x29, sp
  408b1c:	cmp	w9, #0x3
  408b20:	b.eq	408b3c <__fxstatat@plt+0x5f9c>  // b.none
  408b24:	cmp	w9, #0x9
  408b28:	b.eq	408b3c <__fxstatat@plt+0x5f9c>  // b.none
  408b2c:	ldr	w8, [x0, #156]
  408b30:	and	w8, w8, #0xf000
  408b34:	cmp	w8, #0x4, lsl #12
  408b38:	cset	w8, eq  // eq = none
  408b3c:	ldr	w9, [x1, #152]
  408b40:	cmp	w9, #0x9
  408b44:	b.eq	408b50 <__fxstatat@plt+0x5fb0>  // b.none
  408b48:	cmp	w9, #0x3
  408b4c:	b.ne	408b58 <__fxstatat@plt+0x5fb8>  // b.any
  408b50:	tbnz	w8, #0, 408b84 <__fxstatat@plt+0x5fe4>
  408b54:	b	408ba0 <__fxstatat@plt+0x6000>
  408b58:	ldr	w9, [x1, #156]
  408b5c:	eor	w10, w8, #0x1
  408b60:	mov	w11, #0x1                   	// #1
  408b64:	and	w9, w9, #0xf000
  408b68:	cmp	w9, #0x4, lsl #12
  408b6c:	cset	w9, eq  // eq = none
  408b70:	orr	w10, w9, w10
  408b74:	cmp	w10, #0x0
  408b78:	eor	w9, w8, w9
  408b7c:	cneg	w8, w11, eq  // eq = none
  408b80:	tbnz	w9, #0, 408ba4 <__fxstatat@plt+0x6004>
  408b84:	ldr	x8, [x1, #112]
  408b88:	ldr	x9, [x0, #112]
  408b8c:	cmp	x8, x9
  408b90:	b.ge	408b9c <__fxstatat@plt+0x5ffc>  // b.tcont
  408b94:	mov	w8, #0xffffffff            	// #-1
  408b98:	b	408ba4 <__fxstatat@plt+0x6004>
  408b9c:	b.le	408bb4 <__fxstatat@plt+0x6014>
  408ba0:	mov	w8, #0x1                   	// #1
  408ba4:	ldp	x20, x19, [sp, #16]
  408ba8:	mov	w0, w8
  408bac:	ldp	x29, x30, [sp], #32
  408bb0:	ret
  408bb4:	ldr	x8, [x1, #120]
  408bb8:	ldr	x9, [x0, #120]
  408bbc:	subs	w8, w8, w9
  408bc0:	b.ne	408ba4 <__fxstatat@plt+0x6004>  // b.any
  408bc4:	ldr	x19, [x0]
  408bc8:	ldr	x20, [x1]
  408bcc:	bl	402b30 <__errno_location@plt>
  408bd0:	str	wzr, [x0]
  408bd4:	mov	x0, x19
  408bd8:	mov	x1, x20
  408bdc:	ldp	x20, x19, [sp, #16]
  408be0:	ldp	x29, x30, [sp], #32
  408be4:	b	402ae0 <strcoll@plt>
  408be8:	stp	x29, x30, [sp, #-32]!
  408bec:	stp	x20, x19, [sp, #16]
  408bf0:	ldr	x8, [x0, #112]
  408bf4:	ldr	x9, [x1, #112]
  408bf8:	mov	x29, sp
  408bfc:	cmp	x8, x9
  408c00:	b.ge	408c0c <__fxstatat@plt+0x606c>  // b.tcont
  408c04:	mov	w8, #0xffffffff            	// #-1
  408c08:	b	408c28 <__fxstatat@plt+0x6088>
  408c0c:	b.le	408c18 <__fxstatat@plt+0x6078>
  408c10:	mov	w8, #0x1                   	// #1
  408c14:	b	408c28 <__fxstatat@plt+0x6088>
  408c18:	ldr	x8, [x0, #120]
  408c1c:	ldr	x9, [x1, #120]
  408c20:	subs	w8, w8, w9
  408c24:	b.eq	408c38 <__fxstatat@plt+0x6098>  // b.none
  408c28:	ldp	x20, x19, [sp, #16]
  408c2c:	mov	w0, w8
  408c30:	ldp	x29, x30, [sp], #32
  408c34:	ret
  408c38:	ldr	x19, [x1]
  408c3c:	ldr	x20, [x0]
  408c40:	bl	402b30 <__errno_location@plt>
  408c44:	str	wzr, [x0]
  408c48:	mov	x0, x19
  408c4c:	mov	x1, x20
  408c50:	ldp	x20, x19, [sp, #16]
  408c54:	ldp	x29, x30, [sp], #32
  408c58:	b	402ae0 <strcoll@plt>
  408c5c:	stp	x29, x30, [sp, #-32]!
  408c60:	stp	x20, x19, [sp, #16]
  408c64:	ldr	w9, [x0, #152]
  408c68:	mov	w8, #0x1                   	// #1
  408c6c:	mov	x29, sp
  408c70:	cmp	w9, #0x3
  408c74:	b.eq	408c90 <__fxstatat@plt+0x60f0>  // b.none
  408c78:	cmp	w9, #0x9
  408c7c:	b.eq	408c90 <__fxstatat@plt+0x60f0>  // b.none
  408c80:	ldr	w8, [x0, #156]
  408c84:	and	w8, w8, #0xf000
  408c88:	cmp	w8, #0x4, lsl #12
  408c8c:	cset	w8, eq  // eq = none
  408c90:	ldr	w9, [x1, #152]
  408c94:	cmp	w9, #0x9
  408c98:	b.eq	408ca4 <__fxstatat@plt+0x6104>  // b.none
  408c9c:	cmp	w9, #0x3
  408ca0:	b.ne	408cac <__fxstatat@plt+0x610c>  // b.any
  408ca4:	tbnz	w8, #0, 408cd8 <__fxstatat@plt+0x6138>
  408ca8:	b	408cf4 <__fxstatat@plt+0x6154>
  408cac:	ldr	w9, [x1, #156]
  408cb0:	eor	w10, w8, #0x1
  408cb4:	mov	w11, #0x1                   	// #1
  408cb8:	and	w9, w9, #0xf000
  408cbc:	cmp	w9, #0x4, lsl #12
  408cc0:	cset	w9, eq  // eq = none
  408cc4:	orr	w10, w9, w10
  408cc8:	cmp	w10, #0x0
  408ccc:	eor	w9, w8, w9
  408cd0:	cneg	w8, w11, eq  // eq = none
  408cd4:	tbnz	w9, #0, 408cf8 <__fxstatat@plt+0x6158>
  408cd8:	ldr	x8, [x0, #112]
  408cdc:	ldr	x9, [x1, #112]
  408ce0:	cmp	x8, x9
  408ce4:	b.ge	408cf0 <__fxstatat@plt+0x6150>  // b.tcont
  408ce8:	mov	w8, #0xffffffff            	// #-1
  408cec:	b	408cf8 <__fxstatat@plt+0x6158>
  408cf0:	b.le	408d08 <__fxstatat@plt+0x6168>
  408cf4:	mov	w8, #0x1                   	// #1
  408cf8:	ldp	x20, x19, [sp, #16]
  408cfc:	mov	w0, w8
  408d00:	ldp	x29, x30, [sp], #32
  408d04:	ret
  408d08:	ldr	x8, [x0, #120]
  408d0c:	ldr	x9, [x1, #120]
  408d10:	subs	w8, w8, w9
  408d14:	b.ne	408cf8 <__fxstatat@plt+0x6158>  // b.any
  408d18:	ldr	x19, [x1]
  408d1c:	ldr	x20, [x0]
  408d20:	bl	402b30 <__errno_location@plt>
  408d24:	str	wzr, [x0]
  408d28:	mov	x0, x19
  408d2c:	mov	x1, x20
  408d30:	ldp	x20, x19, [sp, #16]
  408d34:	ldp	x29, x30, [sp], #32
  408d38:	b	402ae0 <strcoll@plt>
  408d3c:	ldr	x8, [x1, #112]
  408d40:	ldr	x9, [x0, #112]
  408d44:	cmp	x8, x9
  408d48:	b.ge	408d54 <__fxstatat@plt+0x61b4>  // b.tcont
  408d4c:	mov	w8, #0xffffffff            	// #-1
  408d50:	b	408d70 <__fxstatat@plt+0x61d0>
  408d54:	b.le	408d60 <__fxstatat@plt+0x61c0>
  408d58:	mov	w8, #0x1                   	// #1
  408d5c:	b	408d70 <__fxstatat@plt+0x61d0>
  408d60:	ldr	x8, [x1, #120]
  408d64:	ldr	x9, [x0, #120]
  408d68:	subs	w8, w8, w9
  408d6c:	b.eq	408d78 <__fxstatat@plt+0x61d8>  // b.none
  408d70:	mov	w0, w8
  408d74:	ret
  408d78:	ldr	x0, [x0]
  408d7c:	ldr	x1, [x1]
  408d80:	b	402950 <strcmp@plt>
  408d84:	ldr	w9, [x0, #152]
  408d88:	mov	w8, #0x1                   	// #1
  408d8c:	cmp	w9, #0x3
  408d90:	b.eq	408dac <__fxstatat@plt+0x620c>  // b.none
  408d94:	cmp	w9, #0x9
  408d98:	b.eq	408dac <__fxstatat@plt+0x620c>  // b.none
  408d9c:	ldr	w8, [x0, #156]
  408da0:	and	w8, w8, #0xf000
  408da4:	cmp	w8, #0x4, lsl #12
  408da8:	cset	w8, eq  // eq = none
  408dac:	ldr	w9, [x1, #152]
  408db0:	cmp	w9, #0x9
  408db4:	b.eq	408dc0 <__fxstatat@plt+0x6220>  // b.none
  408db8:	cmp	w9, #0x3
  408dbc:	b.ne	408dc8 <__fxstatat@plt+0x6228>  // b.any
  408dc0:	tbnz	w8, #0, 408df4 <__fxstatat@plt+0x6254>
  408dc4:	b	408e10 <__fxstatat@plt+0x6270>
  408dc8:	ldr	w9, [x1, #156]
  408dcc:	eor	w10, w8, #0x1
  408dd0:	mov	w11, #0x1                   	// #1
  408dd4:	and	w9, w9, #0xf000
  408dd8:	cmp	w9, #0x4, lsl #12
  408ddc:	cset	w9, eq  // eq = none
  408de0:	orr	w10, w9, w10
  408de4:	cmp	w10, #0x0
  408de8:	eor	w9, w8, w9
  408dec:	cneg	w8, w11, eq  // eq = none
  408df0:	tbnz	w9, #0, 408e14 <__fxstatat@plt+0x6274>
  408df4:	ldr	x8, [x1, #112]
  408df8:	ldr	x9, [x0, #112]
  408dfc:	cmp	x8, x9
  408e00:	b.ge	408e0c <__fxstatat@plt+0x626c>  // b.tcont
  408e04:	mov	w8, #0xffffffff            	// #-1
  408e08:	b	408e14 <__fxstatat@plt+0x6274>
  408e0c:	b.le	408e1c <__fxstatat@plt+0x627c>
  408e10:	mov	w8, #0x1                   	// #1
  408e14:	mov	w0, w8
  408e18:	ret
  408e1c:	ldr	x8, [x1, #120]
  408e20:	ldr	x9, [x0, #120]
  408e24:	subs	w8, w8, w9
  408e28:	b.ne	408e14 <__fxstatat@plt+0x6274>  // b.any
  408e2c:	ldr	x0, [x0]
  408e30:	ldr	x1, [x1]
  408e34:	b	402950 <strcmp@plt>
  408e38:	ldr	x8, [x0, #112]
  408e3c:	ldr	x9, [x1, #112]
  408e40:	cmp	x8, x9
  408e44:	b.ge	408e50 <__fxstatat@plt+0x62b0>  // b.tcont
  408e48:	mov	w8, #0xffffffff            	// #-1
  408e4c:	b	408e6c <__fxstatat@plt+0x62cc>
  408e50:	b.le	408e5c <__fxstatat@plt+0x62bc>
  408e54:	mov	w8, #0x1                   	// #1
  408e58:	b	408e6c <__fxstatat@plt+0x62cc>
  408e5c:	ldr	x8, [x0, #120]
  408e60:	ldr	x9, [x1, #120]
  408e64:	subs	w8, w8, w9
  408e68:	b.eq	408e74 <__fxstatat@plt+0x62d4>  // b.none
  408e6c:	mov	w0, w8
  408e70:	ret
  408e74:	ldr	x8, [x1]
  408e78:	ldr	x1, [x0]
  408e7c:	mov	x0, x8
  408e80:	b	402950 <strcmp@plt>
  408e84:	ldr	w9, [x0, #152]
  408e88:	mov	w8, #0x1                   	// #1
  408e8c:	cmp	w9, #0x3
  408e90:	b.eq	408eac <__fxstatat@plt+0x630c>  // b.none
  408e94:	cmp	w9, #0x9
  408e98:	b.eq	408eac <__fxstatat@plt+0x630c>  // b.none
  408e9c:	ldr	w8, [x0, #156]
  408ea0:	and	w8, w8, #0xf000
  408ea4:	cmp	w8, #0x4, lsl #12
  408ea8:	cset	w8, eq  // eq = none
  408eac:	ldr	w9, [x1, #152]
  408eb0:	cmp	w9, #0x9
  408eb4:	b.eq	408ec0 <__fxstatat@plt+0x6320>  // b.none
  408eb8:	cmp	w9, #0x3
  408ebc:	b.ne	408ec8 <__fxstatat@plt+0x6328>  // b.any
  408ec0:	tbnz	w8, #0, 408ef4 <__fxstatat@plt+0x6354>
  408ec4:	b	408f10 <__fxstatat@plt+0x6370>
  408ec8:	ldr	w9, [x1, #156]
  408ecc:	eor	w10, w8, #0x1
  408ed0:	mov	w11, #0x1                   	// #1
  408ed4:	and	w9, w9, #0xf000
  408ed8:	cmp	w9, #0x4, lsl #12
  408edc:	cset	w9, eq  // eq = none
  408ee0:	orr	w10, w9, w10
  408ee4:	cmp	w10, #0x0
  408ee8:	eor	w9, w8, w9
  408eec:	cneg	w8, w11, eq  // eq = none
  408ef0:	tbnz	w9, #0, 408f14 <__fxstatat@plt+0x6374>
  408ef4:	ldr	x8, [x0, #112]
  408ef8:	ldr	x9, [x1, #112]
  408efc:	cmp	x8, x9
  408f00:	b.ge	408f0c <__fxstatat@plt+0x636c>  // b.tcont
  408f04:	mov	w8, #0xffffffff            	// #-1
  408f08:	b	408f14 <__fxstatat@plt+0x6374>
  408f0c:	b.le	408f1c <__fxstatat@plt+0x637c>
  408f10:	mov	w8, #0x1                   	// #1
  408f14:	mov	w0, w8
  408f18:	ret
  408f1c:	ldr	x8, [x0, #120]
  408f20:	ldr	x9, [x1, #120]
  408f24:	subs	w8, w8, w9
  408f28:	b.ne	408f14 <__fxstatat@plt+0x6374>  // b.any
  408f2c:	ldr	x8, [x1]
  408f30:	ldr	x1, [x0]
  408f34:	mov	x0, x8
  408f38:	b	402950 <strcmp@plt>
  408f3c:	stp	x29, x30, [sp, #-32]!
  408f40:	stp	x20, x19, [sp, #16]
  408f44:	ldr	x8, [x1, #128]
  408f48:	ldr	x9, [x0, #128]
  408f4c:	mov	x29, sp
  408f50:	cmp	x8, x9
  408f54:	b.ge	408f60 <__fxstatat@plt+0x63c0>  // b.tcont
  408f58:	mov	w8, #0xffffffff            	// #-1
  408f5c:	b	408f7c <__fxstatat@plt+0x63dc>
  408f60:	b.le	408f6c <__fxstatat@plt+0x63cc>
  408f64:	mov	w8, #0x1                   	// #1
  408f68:	b	408f7c <__fxstatat@plt+0x63dc>
  408f6c:	ldr	x8, [x1, #136]
  408f70:	ldr	x9, [x0, #136]
  408f74:	subs	w8, w8, w9
  408f78:	b.eq	408f8c <__fxstatat@plt+0x63ec>  // b.none
  408f7c:	ldp	x20, x19, [sp, #16]
  408f80:	mov	w0, w8
  408f84:	ldp	x29, x30, [sp], #32
  408f88:	ret
  408f8c:	ldr	x19, [x0]
  408f90:	ldr	x20, [x1]
  408f94:	bl	402b30 <__errno_location@plt>
  408f98:	str	wzr, [x0]
  408f9c:	mov	x0, x19
  408fa0:	mov	x1, x20
  408fa4:	ldp	x20, x19, [sp, #16]
  408fa8:	ldp	x29, x30, [sp], #32
  408fac:	b	402ae0 <strcoll@plt>
  408fb0:	stp	x29, x30, [sp, #-32]!
  408fb4:	stp	x20, x19, [sp, #16]
  408fb8:	ldr	w9, [x0, #152]
  408fbc:	mov	w8, #0x1                   	// #1
  408fc0:	mov	x29, sp
  408fc4:	cmp	w9, #0x3
  408fc8:	b.eq	408fe4 <__fxstatat@plt+0x6444>  // b.none
  408fcc:	cmp	w9, #0x9
  408fd0:	b.eq	408fe4 <__fxstatat@plt+0x6444>  // b.none
  408fd4:	ldr	w8, [x0, #156]
  408fd8:	and	w8, w8, #0xf000
  408fdc:	cmp	w8, #0x4, lsl #12
  408fe0:	cset	w8, eq  // eq = none
  408fe4:	ldr	w9, [x1, #152]
  408fe8:	cmp	w9, #0x9
  408fec:	b.eq	408ff8 <__fxstatat@plt+0x6458>  // b.none
  408ff0:	cmp	w9, #0x3
  408ff4:	b.ne	409000 <__fxstatat@plt+0x6460>  // b.any
  408ff8:	tbnz	w8, #0, 40902c <__fxstatat@plt+0x648c>
  408ffc:	b	409048 <__fxstatat@plt+0x64a8>
  409000:	ldr	w9, [x1, #156]
  409004:	eor	w10, w8, #0x1
  409008:	mov	w11, #0x1                   	// #1
  40900c:	and	w9, w9, #0xf000
  409010:	cmp	w9, #0x4, lsl #12
  409014:	cset	w9, eq  // eq = none
  409018:	orr	w10, w9, w10
  40901c:	cmp	w10, #0x0
  409020:	eor	w9, w8, w9
  409024:	cneg	w8, w11, eq  // eq = none
  409028:	tbnz	w9, #0, 40904c <__fxstatat@plt+0x64ac>
  40902c:	ldr	x8, [x1, #128]
  409030:	ldr	x9, [x0, #128]
  409034:	cmp	x8, x9
  409038:	b.ge	409044 <__fxstatat@plt+0x64a4>  // b.tcont
  40903c:	mov	w8, #0xffffffff            	// #-1
  409040:	b	40904c <__fxstatat@plt+0x64ac>
  409044:	b.le	40905c <__fxstatat@plt+0x64bc>
  409048:	mov	w8, #0x1                   	// #1
  40904c:	ldp	x20, x19, [sp, #16]
  409050:	mov	w0, w8
  409054:	ldp	x29, x30, [sp], #32
  409058:	ret
  40905c:	ldr	x8, [x1, #136]
  409060:	ldr	x9, [x0, #136]
  409064:	subs	w8, w8, w9
  409068:	b.ne	40904c <__fxstatat@plt+0x64ac>  // b.any
  40906c:	ldr	x19, [x0]
  409070:	ldr	x20, [x1]
  409074:	bl	402b30 <__errno_location@plt>
  409078:	str	wzr, [x0]
  40907c:	mov	x0, x19
  409080:	mov	x1, x20
  409084:	ldp	x20, x19, [sp, #16]
  409088:	ldp	x29, x30, [sp], #32
  40908c:	b	402ae0 <strcoll@plt>
  409090:	stp	x29, x30, [sp, #-32]!
  409094:	stp	x20, x19, [sp, #16]
  409098:	ldr	x8, [x0, #128]
  40909c:	ldr	x9, [x1, #128]
  4090a0:	mov	x29, sp
  4090a4:	cmp	x8, x9
  4090a8:	b.ge	4090b4 <__fxstatat@plt+0x6514>  // b.tcont
  4090ac:	mov	w8, #0xffffffff            	// #-1
  4090b0:	b	4090d0 <__fxstatat@plt+0x6530>
  4090b4:	b.le	4090c0 <__fxstatat@plt+0x6520>
  4090b8:	mov	w8, #0x1                   	// #1
  4090bc:	b	4090d0 <__fxstatat@plt+0x6530>
  4090c0:	ldr	x8, [x0, #136]
  4090c4:	ldr	x9, [x1, #136]
  4090c8:	subs	w8, w8, w9
  4090cc:	b.eq	4090e0 <__fxstatat@plt+0x6540>  // b.none
  4090d0:	ldp	x20, x19, [sp, #16]
  4090d4:	mov	w0, w8
  4090d8:	ldp	x29, x30, [sp], #32
  4090dc:	ret
  4090e0:	ldr	x19, [x1]
  4090e4:	ldr	x20, [x0]
  4090e8:	bl	402b30 <__errno_location@plt>
  4090ec:	str	wzr, [x0]
  4090f0:	mov	x0, x19
  4090f4:	mov	x1, x20
  4090f8:	ldp	x20, x19, [sp, #16]
  4090fc:	ldp	x29, x30, [sp], #32
  409100:	b	402ae0 <strcoll@plt>
  409104:	stp	x29, x30, [sp, #-32]!
  409108:	stp	x20, x19, [sp, #16]
  40910c:	ldr	w9, [x0, #152]
  409110:	mov	w8, #0x1                   	// #1
  409114:	mov	x29, sp
  409118:	cmp	w9, #0x3
  40911c:	b.eq	409138 <__fxstatat@plt+0x6598>  // b.none
  409120:	cmp	w9, #0x9
  409124:	b.eq	409138 <__fxstatat@plt+0x6598>  // b.none
  409128:	ldr	w8, [x0, #156]
  40912c:	and	w8, w8, #0xf000
  409130:	cmp	w8, #0x4, lsl #12
  409134:	cset	w8, eq  // eq = none
  409138:	ldr	w9, [x1, #152]
  40913c:	cmp	w9, #0x9
  409140:	b.eq	40914c <__fxstatat@plt+0x65ac>  // b.none
  409144:	cmp	w9, #0x3
  409148:	b.ne	409154 <__fxstatat@plt+0x65b4>  // b.any
  40914c:	tbnz	w8, #0, 409180 <__fxstatat@plt+0x65e0>
  409150:	b	40919c <__fxstatat@plt+0x65fc>
  409154:	ldr	w9, [x1, #156]
  409158:	eor	w10, w8, #0x1
  40915c:	mov	w11, #0x1                   	// #1
  409160:	and	w9, w9, #0xf000
  409164:	cmp	w9, #0x4, lsl #12
  409168:	cset	w9, eq  // eq = none
  40916c:	orr	w10, w9, w10
  409170:	cmp	w10, #0x0
  409174:	eor	w9, w8, w9
  409178:	cneg	w8, w11, eq  // eq = none
  40917c:	tbnz	w9, #0, 4091a0 <__fxstatat@plt+0x6600>
  409180:	ldr	x8, [x0, #128]
  409184:	ldr	x9, [x1, #128]
  409188:	cmp	x8, x9
  40918c:	b.ge	409198 <__fxstatat@plt+0x65f8>  // b.tcont
  409190:	mov	w8, #0xffffffff            	// #-1
  409194:	b	4091a0 <__fxstatat@plt+0x6600>
  409198:	b.le	4091b0 <__fxstatat@plt+0x6610>
  40919c:	mov	w8, #0x1                   	// #1
  4091a0:	ldp	x20, x19, [sp, #16]
  4091a4:	mov	w0, w8
  4091a8:	ldp	x29, x30, [sp], #32
  4091ac:	ret
  4091b0:	ldr	x8, [x0, #136]
  4091b4:	ldr	x9, [x1, #136]
  4091b8:	subs	w8, w8, w9
  4091bc:	b.ne	4091a0 <__fxstatat@plt+0x6600>  // b.any
  4091c0:	ldr	x19, [x1]
  4091c4:	ldr	x20, [x0]
  4091c8:	bl	402b30 <__errno_location@plt>
  4091cc:	str	wzr, [x0]
  4091d0:	mov	x0, x19
  4091d4:	mov	x1, x20
  4091d8:	ldp	x20, x19, [sp, #16]
  4091dc:	ldp	x29, x30, [sp], #32
  4091e0:	b	402ae0 <strcoll@plt>
  4091e4:	ldr	x8, [x1, #128]
  4091e8:	ldr	x9, [x0, #128]
  4091ec:	cmp	x8, x9
  4091f0:	b.ge	4091fc <__fxstatat@plt+0x665c>  // b.tcont
  4091f4:	mov	w8, #0xffffffff            	// #-1
  4091f8:	b	409218 <__fxstatat@plt+0x6678>
  4091fc:	b.le	409208 <__fxstatat@plt+0x6668>
  409200:	mov	w8, #0x1                   	// #1
  409204:	b	409218 <__fxstatat@plt+0x6678>
  409208:	ldr	x8, [x1, #136]
  40920c:	ldr	x9, [x0, #136]
  409210:	subs	w8, w8, w9
  409214:	b.eq	409220 <__fxstatat@plt+0x6680>  // b.none
  409218:	mov	w0, w8
  40921c:	ret
  409220:	ldr	x0, [x0]
  409224:	ldr	x1, [x1]
  409228:	b	402950 <strcmp@plt>
  40922c:	ldr	w9, [x0, #152]
  409230:	mov	w8, #0x1                   	// #1
  409234:	cmp	w9, #0x3
  409238:	b.eq	409254 <__fxstatat@plt+0x66b4>  // b.none
  40923c:	cmp	w9, #0x9
  409240:	b.eq	409254 <__fxstatat@plt+0x66b4>  // b.none
  409244:	ldr	w8, [x0, #156]
  409248:	and	w8, w8, #0xf000
  40924c:	cmp	w8, #0x4, lsl #12
  409250:	cset	w8, eq  // eq = none
  409254:	ldr	w9, [x1, #152]
  409258:	cmp	w9, #0x9
  40925c:	b.eq	409268 <__fxstatat@plt+0x66c8>  // b.none
  409260:	cmp	w9, #0x3
  409264:	b.ne	409270 <__fxstatat@plt+0x66d0>  // b.any
  409268:	tbnz	w8, #0, 40929c <__fxstatat@plt+0x66fc>
  40926c:	b	4092b8 <__fxstatat@plt+0x6718>
  409270:	ldr	w9, [x1, #156]
  409274:	eor	w10, w8, #0x1
  409278:	mov	w11, #0x1                   	// #1
  40927c:	and	w9, w9, #0xf000
  409280:	cmp	w9, #0x4, lsl #12
  409284:	cset	w9, eq  // eq = none
  409288:	orr	w10, w9, w10
  40928c:	cmp	w10, #0x0
  409290:	eor	w9, w8, w9
  409294:	cneg	w8, w11, eq  // eq = none
  409298:	tbnz	w9, #0, 4092bc <__fxstatat@plt+0x671c>
  40929c:	ldr	x8, [x1, #128]
  4092a0:	ldr	x9, [x0, #128]
  4092a4:	cmp	x8, x9
  4092a8:	b.ge	4092b4 <__fxstatat@plt+0x6714>  // b.tcont
  4092ac:	mov	w8, #0xffffffff            	// #-1
  4092b0:	b	4092bc <__fxstatat@plt+0x671c>
  4092b4:	b.le	4092c4 <__fxstatat@plt+0x6724>
  4092b8:	mov	w8, #0x1                   	// #1
  4092bc:	mov	w0, w8
  4092c0:	ret
  4092c4:	ldr	x8, [x1, #136]
  4092c8:	ldr	x9, [x0, #136]
  4092cc:	subs	w8, w8, w9
  4092d0:	b.ne	4092bc <__fxstatat@plt+0x671c>  // b.any
  4092d4:	ldr	x0, [x0]
  4092d8:	ldr	x1, [x1]
  4092dc:	b	402950 <strcmp@plt>
  4092e0:	ldr	x8, [x0, #128]
  4092e4:	ldr	x9, [x1, #128]
  4092e8:	cmp	x8, x9
  4092ec:	b.ge	4092f8 <__fxstatat@plt+0x6758>  // b.tcont
  4092f0:	mov	w8, #0xffffffff            	// #-1
  4092f4:	b	409314 <__fxstatat@plt+0x6774>
  4092f8:	b.le	409304 <__fxstatat@plt+0x6764>
  4092fc:	mov	w8, #0x1                   	// #1
  409300:	b	409314 <__fxstatat@plt+0x6774>
  409304:	ldr	x8, [x0, #136]
  409308:	ldr	x9, [x1, #136]
  40930c:	subs	w8, w8, w9
  409310:	b.eq	40931c <__fxstatat@plt+0x677c>  // b.none
  409314:	mov	w0, w8
  409318:	ret
  40931c:	ldr	x8, [x1]
  409320:	ldr	x1, [x0]
  409324:	mov	x0, x8
  409328:	b	402950 <strcmp@plt>
  40932c:	ldr	w9, [x0, #152]
  409330:	mov	w8, #0x1                   	// #1
  409334:	cmp	w9, #0x3
  409338:	b.eq	409354 <__fxstatat@plt+0x67b4>  // b.none
  40933c:	cmp	w9, #0x9
  409340:	b.eq	409354 <__fxstatat@plt+0x67b4>  // b.none
  409344:	ldr	w8, [x0, #156]
  409348:	and	w8, w8, #0xf000
  40934c:	cmp	w8, #0x4, lsl #12
  409350:	cset	w8, eq  // eq = none
  409354:	ldr	w9, [x1, #152]
  409358:	cmp	w9, #0x9
  40935c:	b.eq	409368 <__fxstatat@plt+0x67c8>  // b.none
  409360:	cmp	w9, #0x3
  409364:	b.ne	409370 <__fxstatat@plt+0x67d0>  // b.any
  409368:	tbnz	w8, #0, 40939c <__fxstatat@plt+0x67fc>
  40936c:	b	4093b8 <__fxstatat@plt+0x6818>
  409370:	ldr	w9, [x1, #156]
  409374:	eor	w10, w8, #0x1
  409378:	mov	w11, #0x1                   	// #1
  40937c:	and	w9, w9, #0xf000
  409380:	cmp	w9, #0x4, lsl #12
  409384:	cset	w9, eq  // eq = none
  409388:	orr	w10, w9, w10
  40938c:	cmp	w10, #0x0
  409390:	eor	w9, w8, w9
  409394:	cneg	w8, w11, eq  // eq = none
  409398:	tbnz	w9, #0, 4093bc <__fxstatat@plt+0x681c>
  40939c:	ldr	x8, [x0, #128]
  4093a0:	ldr	x9, [x1, #128]
  4093a4:	cmp	x8, x9
  4093a8:	b.ge	4093b4 <__fxstatat@plt+0x6814>  // b.tcont
  4093ac:	mov	w8, #0xffffffff            	// #-1
  4093b0:	b	4093bc <__fxstatat@plt+0x681c>
  4093b4:	b.le	4093c4 <__fxstatat@plt+0x6824>
  4093b8:	mov	w8, #0x1                   	// #1
  4093bc:	mov	w0, w8
  4093c0:	ret
  4093c4:	ldr	x8, [x0, #136]
  4093c8:	ldr	x9, [x1, #136]
  4093cc:	subs	w8, w8, w9
  4093d0:	b.ne	4093bc <__fxstatat@plt+0x681c>  // b.any
  4093d4:	ldr	x8, [x1]
  4093d8:	ldr	x1, [x0]
  4093dc:	mov	x0, x8
  4093e0:	b	402950 <strcmp@plt>
  4093e4:	stp	x29, x30, [sp, #-32]!
  4093e8:	stp	x20, x19, [sp, #16]
  4093ec:	ldr	x8, [x1, #96]
  4093f0:	ldr	x9, [x0, #96]
  4093f4:	mov	x29, sp
  4093f8:	cmp	x8, x9
  4093fc:	b.ge	409408 <__fxstatat@plt+0x6868>  // b.tcont
  409400:	mov	w8, #0xffffffff            	// #-1
  409404:	b	409424 <__fxstatat@plt+0x6884>
  409408:	b.le	409414 <__fxstatat@plt+0x6874>
  40940c:	mov	w8, #0x1                   	// #1
  409410:	b	409424 <__fxstatat@plt+0x6884>
  409414:	ldr	x8, [x1, #104]
  409418:	ldr	x9, [x0, #104]
  40941c:	subs	w8, w8, w9
  409420:	b.eq	409434 <__fxstatat@plt+0x6894>  // b.none
  409424:	ldp	x20, x19, [sp, #16]
  409428:	mov	w0, w8
  40942c:	ldp	x29, x30, [sp], #32
  409430:	ret
  409434:	ldr	x19, [x0]
  409438:	ldr	x20, [x1]
  40943c:	bl	402b30 <__errno_location@plt>
  409440:	str	wzr, [x0]
  409444:	mov	x0, x19
  409448:	mov	x1, x20
  40944c:	ldp	x20, x19, [sp, #16]
  409450:	ldp	x29, x30, [sp], #32
  409454:	b	402ae0 <strcoll@plt>
  409458:	stp	x29, x30, [sp, #-32]!
  40945c:	stp	x20, x19, [sp, #16]
  409460:	ldr	w9, [x0, #152]
  409464:	mov	w8, #0x1                   	// #1
  409468:	mov	x29, sp
  40946c:	cmp	w9, #0x3
  409470:	b.eq	40948c <__fxstatat@plt+0x68ec>  // b.none
  409474:	cmp	w9, #0x9
  409478:	b.eq	40948c <__fxstatat@plt+0x68ec>  // b.none
  40947c:	ldr	w8, [x0, #156]
  409480:	and	w8, w8, #0xf000
  409484:	cmp	w8, #0x4, lsl #12
  409488:	cset	w8, eq  // eq = none
  40948c:	ldr	w9, [x1, #152]
  409490:	cmp	w9, #0x9
  409494:	b.eq	4094a0 <__fxstatat@plt+0x6900>  // b.none
  409498:	cmp	w9, #0x3
  40949c:	b.ne	4094a8 <__fxstatat@plt+0x6908>  // b.any
  4094a0:	tbnz	w8, #0, 4094d4 <__fxstatat@plt+0x6934>
  4094a4:	b	4094f0 <__fxstatat@plt+0x6950>
  4094a8:	ldr	w9, [x1, #156]
  4094ac:	eor	w10, w8, #0x1
  4094b0:	mov	w11, #0x1                   	// #1
  4094b4:	and	w9, w9, #0xf000
  4094b8:	cmp	w9, #0x4, lsl #12
  4094bc:	cset	w9, eq  // eq = none
  4094c0:	orr	w10, w9, w10
  4094c4:	cmp	w10, #0x0
  4094c8:	eor	w9, w8, w9
  4094cc:	cneg	w8, w11, eq  // eq = none
  4094d0:	tbnz	w9, #0, 4094f4 <__fxstatat@plt+0x6954>
  4094d4:	ldr	x8, [x1, #96]
  4094d8:	ldr	x9, [x0, #96]
  4094dc:	cmp	x8, x9
  4094e0:	b.ge	4094ec <__fxstatat@plt+0x694c>  // b.tcont
  4094e4:	mov	w8, #0xffffffff            	// #-1
  4094e8:	b	4094f4 <__fxstatat@plt+0x6954>
  4094ec:	b.le	409504 <__fxstatat@plt+0x6964>
  4094f0:	mov	w8, #0x1                   	// #1
  4094f4:	ldp	x20, x19, [sp, #16]
  4094f8:	mov	w0, w8
  4094fc:	ldp	x29, x30, [sp], #32
  409500:	ret
  409504:	ldr	x8, [x1, #104]
  409508:	ldr	x9, [x0, #104]
  40950c:	subs	w8, w8, w9
  409510:	b.ne	4094f4 <__fxstatat@plt+0x6954>  // b.any
  409514:	ldr	x19, [x0]
  409518:	ldr	x20, [x1]
  40951c:	bl	402b30 <__errno_location@plt>
  409520:	str	wzr, [x0]
  409524:	mov	x0, x19
  409528:	mov	x1, x20
  40952c:	ldp	x20, x19, [sp, #16]
  409530:	ldp	x29, x30, [sp], #32
  409534:	b	402ae0 <strcoll@plt>
  409538:	stp	x29, x30, [sp, #-32]!
  40953c:	stp	x20, x19, [sp, #16]
  409540:	ldr	x8, [x0, #96]
  409544:	ldr	x9, [x1, #96]
  409548:	mov	x29, sp
  40954c:	cmp	x8, x9
  409550:	b.ge	40955c <__fxstatat@plt+0x69bc>  // b.tcont
  409554:	mov	w8, #0xffffffff            	// #-1
  409558:	b	409578 <__fxstatat@plt+0x69d8>
  40955c:	b.le	409568 <__fxstatat@plt+0x69c8>
  409560:	mov	w8, #0x1                   	// #1
  409564:	b	409578 <__fxstatat@plt+0x69d8>
  409568:	ldr	x8, [x0, #104]
  40956c:	ldr	x9, [x1, #104]
  409570:	subs	w8, w8, w9
  409574:	b.eq	409588 <__fxstatat@plt+0x69e8>  // b.none
  409578:	ldp	x20, x19, [sp, #16]
  40957c:	mov	w0, w8
  409580:	ldp	x29, x30, [sp], #32
  409584:	ret
  409588:	ldr	x19, [x1]
  40958c:	ldr	x20, [x0]
  409590:	bl	402b30 <__errno_location@plt>
  409594:	str	wzr, [x0]
  409598:	mov	x0, x19
  40959c:	mov	x1, x20
  4095a0:	ldp	x20, x19, [sp, #16]
  4095a4:	ldp	x29, x30, [sp], #32
  4095a8:	b	402ae0 <strcoll@plt>
  4095ac:	stp	x29, x30, [sp, #-32]!
  4095b0:	stp	x20, x19, [sp, #16]
  4095b4:	ldr	w9, [x0, #152]
  4095b8:	mov	w8, #0x1                   	// #1
  4095bc:	mov	x29, sp
  4095c0:	cmp	w9, #0x3
  4095c4:	b.eq	4095e0 <__fxstatat@plt+0x6a40>  // b.none
  4095c8:	cmp	w9, #0x9
  4095cc:	b.eq	4095e0 <__fxstatat@plt+0x6a40>  // b.none
  4095d0:	ldr	w8, [x0, #156]
  4095d4:	and	w8, w8, #0xf000
  4095d8:	cmp	w8, #0x4, lsl #12
  4095dc:	cset	w8, eq  // eq = none
  4095e0:	ldr	w9, [x1, #152]
  4095e4:	cmp	w9, #0x9
  4095e8:	b.eq	4095f4 <__fxstatat@plt+0x6a54>  // b.none
  4095ec:	cmp	w9, #0x3
  4095f0:	b.ne	4095fc <__fxstatat@plt+0x6a5c>  // b.any
  4095f4:	tbnz	w8, #0, 409628 <__fxstatat@plt+0x6a88>
  4095f8:	b	409644 <__fxstatat@plt+0x6aa4>
  4095fc:	ldr	w9, [x1, #156]
  409600:	eor	w10, w8, #0x1
  409604:	mov	w11, #0x1                   	// #1
  409608:	and	w9, w9, #0xf000
  40960c:	cmp	w9, #0x4, lsl #12
  409610:	cset	w9, eq  // eq = none
  409614:	orr	w10, w9, w10
  409618:	cmp	w10, #0x0
  40961c:	eor	w9, w8, w9
  409620:	cneg	w8, w11, eq  // eq = none
  409624:	tbnz	w9, #0, 409648 <__fxstatat@plt+0x6aa8>
  409628:	ldr	x8, [x0, #96]
  40962c:	ldr	x9, [x1, #96]
  409630:	cmp	x8, x9
  409634:	b.ge	409640 <__fxstatat@plt+0x6aa0>  // b.tcont
  409638:	mov	w8, #0xffffffff            	// #-1
  40963c:	b	409648 <__fxstatat@plt+0x6aa8>
  409640:	b.le	409658 <__fxstatat@plt+0x6ab8>
  409644:	mov	w8, #0x1                   	// #1
  409648:	ldp	x20, x19, [sp, #16]
  40964c:	mov	w0, w8
  409650:	ldp	x29, x30, [sp], #32
  409654:	ret
  409658:	ldr	x8, [x0, #104]
  40965c:	ldr	x9, [x1, #104]
  409660:	subs	w8, w8, w9
  409664:	b.ne	409648 <__fxstatat@plt+0x6aa8>  // b.any
  409668:	ldr	x19, [x1]
  40966c:	ldr	x20, [x0]
  409670:	bl	402b30 <__errno_location@plt>
  409674:	str	wzr, [x0]
  409678:	mov	x0, x19
  40967c:	mov	x1, x20
  409680:	ldp	x20, x19, [sp, #16]
  409684:	ldp	x29, x30, [sp], #32
  409688:	b	402ae0 <strcoll@plt>
  40968c:	ldr	x8, [x1, #96]
  409690:	ldr	x9, [x0, #96]
  409694:	cmp	x8, x9
  409698:	b.ge	4096a4 <__fxstatat@plt+0x6b04>  // b.tcont
  40969c:	mov	w8, #0xffffffff            	// #-1
  4096a0:	b	4096c0 <__fxstatat@plt+0x6b20>
  4096a4:	b.le	4096b0 <__fxstatat@plt+0x6b10>
  4096a8:	mov	w8, #0x1                   	// #1
  4096ac:	b	4096c0 <__fxstatat@plt+0x6b20>
  4096b0:	ldr	x8, [x1, #104]
  4096b4:	ldr	x9, [x0, #104]
  4096b8:	subs	w8, w8, w9
  4096bc:	b.eq	4096c8 <__fxstatat@plt+0x6b28>  // b.none
  4096c0:	mov	w0, w8
  4096c4:	ret
  4096c8:	ldr	x0, [x0]
  4096cc:	ldr	x1, [x1]
  4096d0:	b	402950 <strcmp@plt>
  4096d4:	ldr	w9, [x0, #152]
  4096d8:	mov	w8, #0x1                   	// #1
  4096dc:	cmp	w9, #0x3
  4096e0:	b.eq	4096fc <__fxstatat@plt+0x6b5c>  // b.none
  4096e4:	cmp	w9, #0x9
  4096e8:	b.eq	4096fc <__fxstatat@plt+0x6b5c>  // b.none
  4096ec:	ldr	w8, [x0, #156]
  4096f0:	and	w8, w8, #0xf000
  4096f4:	cmp	w8, #0x4, lsl #12
  4096f8:	cset	w8, eq  // eq = none
  4096fc:	ldr	w9, [x1, #152]
  409700:	cmp	w9, #0x9
  409704:	b.eq	409710 <__fxstatat@plt+0x6b70>  // b.none
  409708:	cmp	w9, #0x3
  40970c:	b.ne	409718 <__fxstatat@plt+0x6b78>  // b.any
  409710:	tbnz	w8, #0, 409744 <__fxstatat@plt+0x6ba4>
  409714:	b	409760 <__fxstatat@plt+0x6bc0>
  409718:	ldr	w9, [x1, #156]
  40971c:	eor	w10, w8, #0x1
  409720:	mov	w11, #0x1                   	// #1
  409724:	and	w9, w9, #0xf000
  409728:	cmp	w9, #0x4, lsl #12
  40972c:	cset	w9, eq  // eq = none
  409730:	orr	w10, w9, w10
  409734:	cmp	w10, #0x0
  409738:	eor	w9, w8, w9
  40973c:	cneg	w8, w11, eq  // eq = none
  409740:	tbnz	w9, #0, 409764 <__fxstatat@plt+0x6bc4>
  409744:	ldr	x8, [x1, #96]
  409748:	ldr	x9, [x0, #96]
  40974c:	cmp	x8, x9
  409750:	b.ge	40975c <__fxstatat@plt+0x6bbc>  // b.tcont
  409754:	mov	w8, #0xffffffff            	// #-1
  409758:	b	409764 <__fxstatat@plt+0x6bc4>
  40975c:	b.le	40976c <__fxstatat@plt+0x6bcc>
  409760:	mov	w8, #0x1                   	// #1
  409764:	mov	w0, w8
  409768:	ret
  40976c:	ldr	x8, [x1, #104]
  409770:	ldr	x9, [x0, #104]
  409774:	subs	w8, w8, w9
  409778:	b.ne	409764 <__fxstatat@plt+0x6bc4>  // b.any
  40977c:	ldr	x0, [x0]
  409780:	ldr	x1, [x1]
  409784:	b	402950 <strcmp@plt>
  409788:	ldr	x8, [x0, #96]
  40978c:	ldr	x9, [x1, #96]
  409790:	cmp	x8, x9
  409794:	b.ge	4097a0 <__fxstatat@plt+0x6c00>  // b.tcont
  409798:	mov	w8, #0xffffffff            	// #-1
  40979c:	b	4097bc <__fxstatat@plt+0x6c1c>
  4097a0:	b.le	4097ac <__fxstatat@plt+0x6c0c>
  4097a4:	mov	w8, #0x1                   	// #1
  4097a8:	b	4097bc <__fxstatat@plt+0x6c1c>
  4097ac:	ldr	x8, [x0, #104]
  4097b0:	ldr	x9, [x1, #104]
  4097b4:	subs	w8, w8, w9
  4097b8:	b.eq	4097c4 <__fxstatat@plt+0x6c24>  // b.none
  4097bc:	mov	w0, w8
  4097c0:	ret
  4097c4:	ldr	x8, [x1]
  4097c8:	ldr	x1, [x0]
  4097cc:	mov	x0, x8
  4097d0:	b	402950 <strcmp@plt>
  4097d4:	ldr	w9, [x0, #152]
  4097d8:	mov	w8, #0x1                   	// #1
  4097dc:	cmp	w9, #0x3
  4097e0:	b.eq	4097fc <__fxstatat@plt+0x6c5c>  // b.none
  4097e4:	cmp	w9, #0x9
  4097e8:	b.eq	4097fc <__fxstatat@plt+0x6c5c>  // b.none
  4097ec:	ldr	w8, [x0, #156]
  4097f0:	and	w8, w8, #0xf000
  4097f4:	cmp	w8, #0x4, lsl #12
  4097f8:	cset	w8, eq  // eq = none
  4097fc:	ldr	w9, [x1, #152]
  409800:	cmp	w9, #0x9
  409804:	b.eq	409810 <__fxstatat@plt+0x6c70>  // b.none
  409808:	cmp	w9, #0x3
  40980c:	b.ne	409818 <__fxstatat@plt+0x6c78>  // b.any
  409810:	tbnz	w8, #0, 409844 <__fxstatat@plt+0x6ca4>
  409814:	b	409860 <__fxstatat@plt+0x6cc0>
  409818:	ldr	w9, [x1, #156]
  40981c:	eor	w10, w8, #0x1
  409820:	mov	w11, #0x1                   	// #1
  409824:	and	w9, w9, #0xf000
  409828:	cmp	w9, #0x4, lsl #12
  40982c:	cset	w9, eq  // eq = none
  409830:	orr	w10, w9, w10
  409834:	cmp	w10, #0x0
  409838:	eor	w9, w8, w9
  40983c:	cneg	w8, w11, eq  // eq = none
  409840:	tbnz	w9, #0, 409864 <__fxstatat@plt+0x6cc4>
  409844:	ldr	x8, [x0, #96]
  409848:	ldr	x9, [x1, #96]
  40984c:	cmp	x8, x9
  409850:	b.ge	40985c <__fxstatat@plt+0x6cbc>  // b.tcont
  409854:	mov	w8, #0xffffffff            	// #-1
  409858:	b	409864 <__fxstatat@plt+0x6cc4>
  40985c:	b.le	40986c <__fxstatat@plt+0x6ccc>
  409860:	mov	w8, #0x1                   	// #1
  409864:	mov	w0, w8
  409868:	ret
  40986c:	ldr	x8, [x0, #104]
  409870:	ldr	x9, [x1, #104]
  409874:	subs	w8, w8, w9
  409878:	b.ne	409864 <__fxstatat@plt+0x6cc4>  // b.any
  40987c:	ldr	x8, [x1]
  409880:	ldr	x1, [x0]
  409884:	mov	x0, x8
  409888:	b	402950 <strcmp@plt>
  40988c:	stp	x29, x30, [sp, #-64]!
  409890:	str	x28, [sp, #16]
  409894:	stp	x22, x21, [sp, #32]
  409898:	stp	x20, x19, [sp, #48]
  40989c:	mov	x29, sp
  4098a0:	sub	sp, sp, #0x290
  4098a4:	mov	x20, x1
  4098a8:	mov	x19, x0
  4098ac:	bl	409af8 <__fxstatat@plt+0x6f58>
  4098b0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4098b4:	ldrb	w8, [x8, #2338]
  4098b8:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4098bc:	cmp	w8, #0x1
  4098c0:	b.ne	409914 <__fxstatat@plt+0x6d74>  // b.any
  4098c4:	ldr	w8, [x22, #1556]
  4098c8:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4098cc:	ldr	w9, [x9, #1452]
  4098d0:	ldrb	w10, [x19, #168]
  4098d4:	cmp	w8, #0x4
  4098d8:	csel	w21, wzr, w9, eq  // eq = none
  4098dc:	cbz	w10, 4098f8 <__fxstatat@plt+0x6d58>
  4098e0:	ldr	x0, [x19, #32]
  4098e4:	cbz	x0, 4098f8 <__fxstatat@plt+0x6d58>
  4098e8:	add	x1, sp, #0x4
  4098ec:	bl	40d70c <__fxstatat@plt+0xab6c>
  4098f0:	mov	x3, x0
  4098f4:	b	409900 <__fxstatat@plt+0x6d60>
  4098f8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  4098fc:	add	x3, x3, #0x166
  409900:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  409904:	add	x1, x1, #0x347
  409908:	mov	w0, #0x1                   	// #1
  40990c:	mov	w2, w21
  409910:	bl	4027b0 <__printf_chk@plt>
  409914:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409918:	ldrb	w8, [x8, #1685]
  40991c:	cmp	w8, #0x1
  409920:	b.ne	409984 <__fxstatat@plt+0x6de4>  // b.any
  409924:	ldr	w8, [x22, #1556]
  409928:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40992c:	ldr	w9, [x9, #1456]
  409930:	ldrb	w10, [x19, #168]
  409934:	cmp	w8, #0x4
  409938:	csel	w21, wzr, w9, eq  // eq = none
  40993c:	cbz	w10, 409968 <__fxstatat@plt+0x6dc8>
  409940:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409944:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409948:	ldr	x0, [x19, #88]
  40994c:	ldr	w2, [x8, #2380]
  409950:	ldr	x4, [x9, #2392]
  409954:	add	x1, sp, #0x4
  409958:	mov	w3, #0x200                 	// #512
  40995c:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  409960:	mov	x3, x0
  409964:	b	409970 <__fxstatat@plt+0x6dd0>
  409968:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  40996c:	add	x3, x3, #0x166
  409970:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  409974:	add	x1, x1, #0x347
  409978:	mov	w0, #0x1                   	// #1
  40997c:	mov	w2, w21
  409980:	bl	4027b0 <__printf_chk@plt>
  409984:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409988:	ldrb	w8, [x8, #1684]
  40998c:	cmp	w8, #0x1
  409990:	b.ne	4099bc <__fxstatat@plt+0x6e1c>  // b.any
  409994:	ldr	w8, [x22, #1556]
  409998:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40999c:	ldr	w9, [x9, #1476]
  4099a0:	ldr	x3, [x19, #160]
  4099a4:	cmp	w8, #0x4
  4099a8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4099ac:	csel	w2, wzr, w9, eq  // eq = none
  4099b0:	add	x1, x1, #0x347
  4099b4:	mov	w0, #0x1                   	// #1
  4099b8:	bl	4027b0 <__printf_chk@plt>
  4099bc:	mov	x0, x19
  4099c0:	mov	w1, wzr
  4099c4:	mov	x2, xzr
  4099c8:	mov	x3, x20
  4099cc:	bl	409b50 <__fxstatat@plt+0x6fb0>
  4099d0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4099d4:	ldr	w8, [x8, #1568]
  4099d8:	cbz	w8, 4099ec <__fxstatat@plt+0x6e4c>
  4099dc:	ldrb	w0, [x19, #168]
  4099e0:	ldr	w1, [x19, #40]
  4099e4:	ldr	w2, [x19, #152]
  4099e8:	bl	409ed8 <__fxstatat@plt+0x7338>
  4099ec:	add	sp, sp, #0x290
  4099f0:	ldp	x20, x19, [sp, #48]
  4099f4:	ldp	x22, x21, [sp, #32]
  4099f8:	ldr	x28, [sp, #16]
  4099fc:	ldp	x29, x30, [sp], #64
  409a00:	ret
  409a04:	stp	x29, x30, [sp, #-96]!
  409a08:	stp	x28, x27, [sp, #16]
  409a0c:	stp	x26, x25, [sp, #32]
  409a10:	stp	x24, x23, [sp, #48]
  409a14:	stp	x22, x21, [sp, #64]
  409a18:	stp	x20, x19, [sp, #80]
  409a1c:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409a20:	ldr	x8, [x23, #1904]
  409a24:	mov	x29, sp
  409a28:	cbz	x8, 409ad8 <__fxstatat@plt+0x6f38>
  409a2c:	mov	x24, xzr
  409a30:	mov	x22, xzr
  409a34:	and	w19, w0, #0xff
  409a38:	adrp	x25, 42b000 <__progname@@GLIBC_2.17+0xa28>
  409a3c:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409a40:	mov	x27, #0xfffffffffffffffd    	// #-3
  409a44:	ldr	x8, [x25, #1440]
  409a48:	ldr	x9, [x26, #2360]
  409a4c:	ldr	x20, [x8, x24, lsl #3]
  409a50:	cbz	x9, 409a68 <__fxstatat@plt+0x6ec8>
  409a54:	mov	x0, x20
  409a58:	bl	40a010 <__fxstatat@plt+0x7470>
  409a5c:	mov	x21, x0
  409a60:	cbnz	x24, 409a70 <__fxstatat@plt+0x6ed0>
  409a64:	b	409ab8 <__fxstatat@plt+0x6f18>
  409a68:	mov	x21, xzr
  409a6c:	cbz	x24, 409ab8 <__fxstatat@plt+0x6f18>
  409a70:	ldr	x9, [x26, #2360]
  409a74:	add	x8, x22, #0x2
  409a78:	cbz	x9, 409a9c <__fxstatat@plt+0x6efc>
  409a7c:	sub	x10, x27, x21
  409a80:	mov	x28, xzr
  409a84:	cmp	x22, x10
  409a88:	mov	w22, #0xa                   	// #10
  409a8c:	b.hi	409aa4 <__fxstatat@plt+0x6f04>  // b.pmore
  409a90:	add	x10, x8, x21
  409a94:	cmp	x10, x9
  409a98:	b.cs	409aa4 <__fxstatat@plt+0x6f04>  // b.hs, b.nlast
  409a9c:	mov	w22, #0x20                  	// #32
  409aa0:	mov	x28, x8
  409aa4:	mov	w0, w19
  409aa8:	bl	4027f0 <putchar_unlocked@plt>
  409aac:	mov	w0, w22
  409ab0:	bl	4027f0 <putchar_unlocked@plt>
  409ab4:	mov	x22, x28
  409ab8:	mov	x0, x20
  409abc:	mov	x1, x22
  409ac0:	bl	40988c <__fxstatat@plt+0x6cec>
  409ac4:	ldr	x8, [x23, #1904]
  409ac8:	add	x24, x24, #0x1
  409acc:	add	x22, x22, x21
  409ad0:	cmp	x24, x8
  409ad4:	b.cc	409a44 <__fxstatat@plt+0x6ea4>  // b.lo, b.ul, b.last
  409ad8:	ldp	x20, x19, [sp, #80]
  409adc:	ldp	x22, x21, [sp, #64]
  409ae0:	ldp	x24, x23, [sp, #48]
  409ae4:	ldp	x26, x25, [sp, #32]
  409ae8:	ldp	x28, x27, [sp, #16]
  409aec:	mov	w0, #0xa                   	// #10
  409af0:	ldp	x29, x30, [sp], #96
  409af4:	b	4027f0 <putchar_unlocked@plt>
  409af8:	stp	x29, x30, [sp, #-32]!
  409afc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409b00:	ldrb	w8, [x8, #1552]
  409b04:	str	x19, [sp, #16]
  409b08:	mov	x29, sp
  409b0c:	cbz	w8, 409b44 <__fxstatat@plt+0x6fa4>
  409b10:	mov	w0, #0x4                   	// #4
  409b14:	bl	404ca0 <__fxstatat@plt+0x2100>
  409b18:	tbz	w0, #0, 409b44 <__fxstatat@plt+0x6fa4>
  409b1c:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409b20:	add	x19, x19, #0x388
  409b24:	mov	x0, x19
  409b28:	bl	406db4 <__fxstatat@plt+0x4214>
  409b2c:	add	x0, x19, #0x40
  409b30:	bl	406db4 <__fxstatat@plt+0x4214>
  409b34:	add	x0, x19, #0x10
  409b38:	ldr	x19, [sp, #16]
  409b3c:	ldp	x29, x30, [sp], #32
  409b40:	b	406db4 <__fxstatat@plt+0x4214>
  409b44:	ldr	x19, [sp, #16]
  409b48:	ldp	x29, x30, [sp], #32
  409b4c:	ret
  409b50:	stp	x29, x30, [sp, #-96]!
  409b54:	tst	w1, #0x1
  409b58:	mov	w8, #0x8                   	// #8
  409b5c:	stp	x26, x25, [sp, #32]
  409b60:	stp	x24, x23, [sp, #48]
  409b64:	stp	x22, x21, [sp, #64]
  409b68:	stp	x20, x19, [sp, #80]
  409b6c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409b70:	csel	x8, x8, xzr, ne  // ne = any
  409b74:	ldrb	w9, [x9, #1552]
  409b78:	ldr	x23, [x0, x8]
  409b7c:	mov	x19, x3
  409b80:	mov	w20, w1
  409b84:	mov	x21, x0
  409b88:	mov	x22, x2
  409b8c:	str	x27, [sp, #16]
  409b90:	mov	x29, sp
  409b94:	cbz	w9, 409bb4 <__fxstatat@plt+0x7014>
  409b98:	tbz	w20, #0, 409bc0 <__fxstatat@plt+0x7020>
  409b9c:	ldr	x24, [x21, #8]
  409ba0:	ldrb	w8, [x21, #169]
  409ba4:	ldr	w27, [x21, #156]
  409ba8:	cbz	w8, 409c98 <__fxstatat@plt+0x70f8>
  409bac:	mov	w8, wzr
  409bb0:	b	409bf0 <__fxstatat@plt+0x7050>
  409bb4:	mov	x3, xzr
  409bb8:	mov	w24, wzr
  409bbc:	b	409e54 <__fxstatat@plt+0x72b4>
  409bc0:	ldrb	w8, [x21, #169]
  409bc4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409bc8:	ldrb	w9, [x9, #1555]
  409bcc:	mov	w10, #0x9c                  	// #156
  409bd0:	cmp	w8, #0x0
  409bd4:	cset	w11, eq  // eq = none
  409bd8:	orn	w9, w11, w9
  409bdc:	tst	w9, #0x1
  409be0:	mov	w9, #0x28                  	// #40
  409be4:	csel	x9, x9, x10, ne  // ne = any
  409be8:	ldr	x24, [x21]
  409bec:	ldr	w27, [x21, x9]
  409bf0:	ldrb	w9, [x21, #168]
  409bf4:	cbz	w9, 409c3c <__fxstatat@plt+0x709c>
  409bf8:	and	w9, w27, #0xf000
  409bfc:	sub	w9, w9, #0x1, lsl #12
  409c00:	lsr	w9, w9, #12
  409c04:	cmp	w9, #0xb
  409c08:	b.hi	409ce8 <__fxstatat@plt+0x7148>  // b.pmore
  409c0c:	adrp	x10, 414000 <_obstack_memory_used@@Base+0x1d48>
  409c10:	add	x10, x10, #0x36a
  409c14:	adr	x11, 409c30 <__fxstatat@plt+0x7090>
  409c18:	ldrb	w12, [x10, x9]
  409c1c:	add	x11, x11, x12, lsl #2
  409c20:	mov	x26, xzr
  409c24:	mov	w25, #0x8                   	// #8
  409c28:	mov	w9, #0x7                   	// #7
  409c2c:	br	x11
  409c30:	mov	x26, xzr
  409c34:	mov	w25, #0xb                   	// #11
  409c38:	b	409e1c <__fxstatat@plt+0x727c>
  409c3c:	ldr	w9, [x21, #152]
  409c40:	cmp	w9, #0x8
  409c44:	b.eq	409c50 <__fxstatat@plt+0x70b0>  // b.none
  409c48:	cmp	w9, #0x5
  409c4c:	b.ne	409cb0 <__fxstatat@plt+0x7110>  // b.any
  409c50:	mov	x0, x24
  409c54:	bl	402540 <strlen@plt>
  409c58:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  409c5c:	ldr	x26, [x8, #1424]
  409c60:	cbz	x26, 409c90 <__fxstatat@plt+0x70f0>
  409c64:	mov	x25, x0
  409c68:	add	x24, x24, x0
  409c6c:	ldr	x2, [x26]
  409c70:	cmp	x2, x25
  409c74:	b.hi	409c88 <__fxstatat@plt+0x70e8>  // b.pmore
  409c78:	ldr	x1, [x26, #8]
  409c7c:	sub	x0, x24, x2
  409c80:	bl	40abb4 <__fxstatat@plt+0x8014>
  409c84:	cbz	w0, 409c90 <__fxstatat@plt+0x70f0>
  409c88:	ldr	x26, [x26, #32]
  409c8c:	cbnz	x26, 409c6c <__fxstatat@plt+0x70cc>
  409c90:	mov	w25, #0x5                   	// #5
  409c94:	b	409e1c <__fxstatat@plt+0x727c>
  409c98:	mov	w0, #0xc                   	// #12
  409c9c:	mov	w25, #0xc                   	// #12
  409ca0:	bl	404ca0 <__fxstatat@plt+0x2100>
  409ca4:	tbz	w0, #0, 409cf4 <__fxstatat@plt+0x7154>
  409ca8:	mov	x26, xzr
  409cac:	b	409e1c <__fxstatat@plt+0x727c>
  409cb0:	adrp	x10, 415000 <_obstack_memory_used@@Base+0x2d48>
  409cb4:	add	x10, x10, #0xe58
  409cb8:	ldr	w9, [x10, x9, lsl #2]
  409cbc:	mov	x26, xzr
  409cc0:	cbnz	w8, 409d90 <__fxstatat@plt+0x71f0>
  409cc4:	cmp	w9, #0x7
  409cc8:	mov	w25, w9
  409ccc:	b.ne	409e1c <__fxstatat@plt+0x727c>  // b.any
  409cd0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409cd4:	ldrb	w8, [x8, #1555]
  409cd8:	tbnz	w8, #0, 409ce8 <__fxstatat@plt+0x7148>
  409cdc:	mov	w0, #0xd                   	// #13
  409ce0:	bl	404ca0 <__fxstatat@plt+0x2100>
  409ce4:	tbz	w0, #0, 409e14 <__fxstatat@plt+0x7274>
  409ce8:	mov	x26, xzr
  409cec:	mov	w25, #0xd                   	// #13
  409cf0:	b	409e1c <__fxstatat@plt+0x727c>
  409cf4:	mov	w8, #0xffffffff            	// #-1
  409cf8:	b	409bf0 <__fxstatat@plt+0x7050>
  409cfc:	tst	w27, #0x200
  409d00:	cset	w24, eq  // eq = none
  409d04:	tbz	w27, #1, 409d1c <__fxstatat@plt+0x717c>
  409d08:	tbnz	w24, #0, 409d1c <__fxstatat@plt+0x717c>
  409d0c:	mov	w0, #0x14                  	// #20
  409d10:	mov	w25, #0x14                  	// #20
  409d14:	bl	404ca0 <__fxstatat@plt+0x2100>
  409d18:	tbnz	w0, #0, 409ca8 <__fxstatat@plt+0x7108>
  409d1c:	tbnz	w27, #1, 409dd4 <__fxstatat@plt+0x7234>
  409d20:	tbnz	w27, #9, 409df4 <__fxstatat@plt+0x7254>
  409d24:	mov	x26, xzr
  409d28:	mov	w25, #0x6                   	// #6
  409d2c:	b	409e1c <__fxstatat@plt+0x727c>
  409d30:	mov	x26, xzr
  409d34:	mov	w25, #0xa                   	// #10
  409d38:	b	409e1c <__fxstatat@plt+0x727c>
  409d3c:	tbz	w27, #11, 409d50 <__fxstatat@plt+0x71b0>
  409d40:	mov	w0, #0x10                  	// #16
  409d44:	mov	w25, #0x10                  	// #16
  409d48:	bl	404ca0 <__fxstatat@plt+0x2100>
  409d4c:	tbnz	w0, #0, 409ca8 <__fxstatat@plt+0x7108>
  409d50:	tbz	w27, #10, 409d64 <__fxstatat@plt+0x71c4>
  409d54:	mov	w0, #0x11                  	// #17
  409d58:	mov	w25, #0x11                  	// #17
  409d5c:	bl	404ca0 <__fxstatat@plt+0x2100>
  409d60:	tbnz	w0, #0, 409ca8 <__fxstatat@plt+0x7108>
  409d64:	mov	w0, #0x15                  	// #21
  409d68:	bl	404ca0 <__fxstatat@plt+0x2100>
  409d6c:	tbz	w0, #0, 409d98 <__fxstatat@plt+0x71f8>
  409d70:	ldrb	w8, [x21, #176]
  409d74:	cbz	w8, 409d98 <__fxstatat@plt+0x71f8>
  409d78:	mov	x26, xzr
  409d7c:	mov	w25, #0x15                  	// #21
  409d80:	b	409e1c <__fxstatat@plt+0x727c>
  409d84:	mov	x26, xzr
  409d88:	mov	w25, #0x9                   	// #9
  409d8c:	b	409e1c <__fxstatat@plt+0x727c>
  409d90:	mov	w25, w9
  409d94:	b	409e1c <__fxstatat@plt+0x727c>
  409d98:	mov	w8, #0x49                  	// #73
  409d9c:	tst	w27, w8
  409da0:	b.eq	409db4 <__fxstatat@plt+0x7214>  // b.none
  409da4:	mov	w0, #0xe                   	// #14
  409da8:	mov	w25, #0xe                   	// #14
  409dac:	bl	404ca0 <__fxstatat@plt+0x2100>
  409db0:	tbnz	w0, #0, 409ca8 <__fxstatat@plt+0x7108>
  409db4:	ldr	w8, [x21, #44]
  409db8:	cmp	w8, #0x2
  409dbc:	b.cc	409c50 <__fxstatat@plt+0x70b0>  // b.lo, b.ul, b.last
  409dc0:	mov	w0, #0x16                  	// #22
  409dc4:	mov	w25, #0x16                  	// #22
  409dc8:	bl	404ca0 <__fxstatat@plt+0x2100>
  409dcc:	tbz	w0, #0, 409c50 <__fxstatat@plt+0x70b0>
  409dd0:	b	409ca8 <__fxstatat@plt+0x7108>
  409dd4:	mov	w0, #0x13                  	// #19
  409dd8:	mov	w25, #0x13                  	// #19
  409ddc:	bl	404ca0 <__fxstatat@plt+0x2100>
  409de0:	tst	w0, #0x1
  409de4:	mov	w9, #0x6                   	// #6
  409de8:	orr	w8, w0, w24
  409dec:	csel	w25, w25, w9, ne  // ne = any
  409df0:	tbnz	w8, #0, 409ca8 <__fxstatat@plt+0x7108>
  409df4:	mov	w0, #0x12                  	// #18
  409df8:	mov	w24, #0x12                  	// #18
  409dfc:	bl	404ca0 <__fxstatat@plt+0x2100>
  409e00:	tst	w0, #0x1
  409e04:	mov	w8, #0x6                   	// #6
  409e08:	mov	x26, xzr
  409e0c:	csel	w25, w24, w8, ne  // ne = any
  409e10:	b	409e1c <__fxstatat@plt+0x727c>
  409e14:	mov	x26, xzr
  409e18:	mov	w25, #0x7                   	// #7
  409e1c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409e20:	add	x9, x9, #0x388
  409e24:	add	x8, x26, #0x10
  409e28:	add	x9, x9, w25, uxtw #4
  409e2c:	cmp	x26, #0x0
  409e30:	csel	x3, x9, x8, eq  // eq = none
  409e34:	ldr	x8, [x3, #8]
  409e38:	cbz	x8, 409e44 <__fxstatat@plt+0x72a4>
  409e3c:	mov	w24, #0x1                   	// #1
  409e40:	b	409e54 <__fxstatat@plt+0x72b4>
  409e44:	mov	w0, #0x4                   	// #4
  409e48:	bl	404ca0 <__fxstatat@plt+0x2100>
  409e4c:	mov	w24, w0
  409e50:	mov	x3, xzr
  409e54:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409e58:	ldr	w2, [x21, #180]
  409e5c:	ldr	x1, [x8, #1936]
  409e60:	ldr	x6, [x21, #16]
  409e64:	mvn	w8, w20
  409e68:	and	w4, w8, #0x1
  409e6c:	mov	x0, x23
  409e70:	mov	x5, x22
  409e74:	bl	407338 <__fxstatat@plt+0x4798>
  409e78:	mov	x20, x0
  409e7c:	bl	4075e0 <__fxstatat@plt+0x4a40>
  409e80:	tbz	w24, #0, 409eb8 <__fxstatat@plt+0x7318>
  409e84:	bl	406e0c <__fxstatat@plt+0x426c>
  409e88:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409e8c:	ldr	x8, [x8, #2360]
  409e90:	cbz	x8, 409eb8 <__fxstatat@plt+0x7318>
  409e94:	add	x10, x19, x20
  409e98:	sub	x10, x10, #0x1
  409e9c:	udiv	x9, x19, x8
  409ea0:	udiv	x8, x10, x8
  409ea4:	cmp	x9, x8
  409ea8:	b.eq	409eb8 <__fxstatat@plt+0x7318>  // b.none
  409eac:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409eb0:	add	x0, x0, #0x4f8
  409eb4:	bl	406db4 <__fxstatat@plt+0x4214>
  409eb8:	mov	x0, x20
  409ebc:	ldp	x20, x19, [sp, #80]
  409ec0:	ldp	x22, x21, [sp, #64]
  409ec4:	ldp	x24, x23, [sp, #48]
  409ec8:	ldp	x26, x25, [sp, #32]
  409ecc:	ldr	x27, [sp, #16]
  409ed0:	ldp	x29, x30, [sp], #96
  409ed4:	ret
  409ed8:	stp	x29, x30, [sp, #-32]!
  409edc:	and	w0, w0, #0x1
  409ee0:	str	x19, [sp, #16]
  409ee4:	mov	x29, sp
  409ee8:	bl	409f24 <__fxstatat@plt+0x7384>
  409eec:	mov	w19, w0
  409ef0:	tst	w0, #0xff
  409ef4:	b.eq	409f10 <__fxstatat@plt+0x7370>  // b.none
  409ef8:	and	w0, w19, #0xff
  409efc:	bl	4027f0 <putchar_unlocked@plt>
  409f00:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409f04:	ldr	x9, [x8, #1912]
  409f08:	add	x9, x9, #0x1
  409f0c:	str	x9, [x8, #1912]
  409f10:	tst	w19, #0xff
  409f14:	ldr	x19, [sp, #16]
  409f18:	cset	w0, ne  // ne = any
  409f1c:	ldp	x29, x30, [sp], #32
  409f20:	ret
  409f24:	tbz	w0, #0, 409f70 <__fxstatat@plt+0x73d0>
  409f28:	and	w8, w1, #0xf000
  409f2c:	cmp	w8, #0x4, lsl #12
  409f30:	b.eq	409fc4 <__fxstatat@plt+0x7424>  // b.none
  409f34:	cmp	w8, #0x8, lsl #12
  409f38:	b.ne	409f8c <__fxstatat@plt+0x73ec>  // b.any
  409f3c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409f40:	ldr	w8, [x8, #1568]
  409f44:	mov	w9, #0x49                  	// #73
  409f48:	cmp	w8, #0x3
  409f4c:	cset	w8, ne  // ne = any
  409f50:	tst	w1, w9
  409f54:	orn	w8, w8, w0
  409f58:	cset	w9, eq  // eq = none
  409f5c:	orr	w8, w9, w8
  409f60:	tst	w8, #0x1
  409f64:	mov	w8, #0x2a                  	// #42
  409f68:	csel	w0, wzr, w8, ne  // ne = any
  409f6c:	ret
  409f70:	cmp	w2, #0x3
  409f74:	mov	w8, #0x2f                  	// #47
  409f78:	b.eq	409ff8 <__fxstatat@plt+0x7458>  // b.none
  409f7c:	cmp	w2, #0x9
  409f80:	b.eq	409ff8 <__fxstatat@plt+0x7458>  // b.none
  409f84:	cmp	w2, #0x5
  409f88:	b.eq	409f3c <__fxstatat@plt+0x739c>  // b.none
  409f8c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  409f90:	ldr	w8, [x8, #1568]
  409f94:	cmp	w8, #0x1
  409f98:	b.eq	409ff4 <__fxstatat@plt+0x7454>  // b.none
  409f9c:	tbz	w0, #0, 409fcc <__fxstatat@plt+0x742c>
  409fa0:	and	w8, w1, #0xf000
  409fa4:	cmp	w8, #0x1, lsl #12
  409fa8:	b.eq	40a000 <__fxstatat@plt+0x7460>  // b.none
  409fac:	cmp	w8, #0xa, lsl #12
  409fb0:	b.eq	40a008 <__fxstatat@plt+0x7468>  // b.none
  409fb4:	cmp	w8, #0xc, lsl #12
  409fb8:	b.ne	409ff4 <__fxstatat@plt+0x7454>  // b.any
  409fbc:	mov	w8, #0x3d                  	// #61
  409fc0:	b	409ff8 <__fxstatat@plt+0x7458>
  409fc4:	mov	w8, #0x2f                  	// #47
  409fc8:	b	409ff8 <__fxstatat@plt+0x7458>
  409fcc:	sub	w8, w2, #0x1
  409fd0:	cmp	w8, #0x7
  409fd4:	b.cs	409ff4 <__fxstatat@plt+0x7454>  // b.hs, b.nlast
  409fd8:	mov	x9, #0x7c                  	// #124
  409fdc:	mov	w8, w8
  409fe0:	movk	x9, #0x4000, lsl #32
  409fe4:	lsl	x8, x8, #3
  409fe8:	movk	x9, #0x3d, lsl #48
  409fec:	lsr	x0, x9, x8
  409ff0:	ret
  409ff4:	mov	w8, wzr
  409ff8:	mov	w0, w8
  409ffc:	ret
  40a000:	mov	w8, #0x7c                  	// #124
  40a004:	b	409ff8 <__fxstatat@plt+0x7458>
  40a008:	mov	w8, #0x40                  	// #64
  40a00c:	b	409ff8 <__fxstatat@plt+0x7458>
  40a010:	stp	x29, x30, [sp, #-64]!
  40a014:	str	x28, [sp, #16]
  40a018:	stp	x22, x21, [sp, #32]
  40a01c:	stp	x20, x19, [sp, #48]
  40a020:	mov	x29, sp
  40a024:	sub	sp, sp, #0x2, lsl #12
  40a028:	sub	sp, sp, #0x2a0
  40a02c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a030:	ldrb	w8, [x8, #2338]
  40a034:	mov	x19, x0
  40a038:	cmp	w8, #0x1
  40a03c:	b.ne	40a064 <__fxstatat@plt+0x74c4>  // b.any
  40a040:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a044:	ldr	w8, [x8, #1556]
  40a048:	cmp	w8, #0x4
  40a04c:	b.ne	40a06c <__fxstatat@plt+0x74cc>  // b.any
  40a050:	ldr	x0, [x19, #32]
  40a054:	add	x1, sp, #0x8
  40a058:	bl	40d70c <__fxstatat@plt+0xab6c>
  40a05c:	bl	402540 <strlen@plt>
  40a060:	b	40a074 <__fxstatat@plt+0x74d4>
  40a064:	mov	x21, xzr
  40a068:	b	40a078 <__fxstatat@plt+0x74d8>
  40a06c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40a070:	ldrsw	x0, [x8, #1452]
  40a074:	add	x21, x0, #0x1
  40a078:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a07c:	ldrb	w8, [x8, #1685]
  40a080:	cmp	w8, #0x1
  40a084:	b.ne	40a0e4 <__fxstatat@plt+0x7544>  // b.any
  40a088:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a08c:	ldr	w8, [x8, #1556]
  40a090:	cmp	w8, #0x4
  40a094:	b.ne	40a0c4 <__fxstatat@plt+0x7524>  // b.any
  40a098:	ldrb	w8, [x19, #168]
  40a09c:	cbz	w8, 40a0d0 <__fxstatat@plt+0x7530>
  40a0a0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a0a4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a0a8:	ldr	x0, [x19, #88]
  40a0ac:	ldr	w2, [x8, #2380]
  40a0b0:	ldr	x4, [x9, #2392]
  40a0b4:	add	x1, sp, #0x8
  40a0b8:	mov	w3, #0x200                 	// #512
  40a0bc:	bl	40ca88 <__fxstatat@plt+0x9ee8>
  40a0c0:	b	40a0d8 <__fxstatat@plt+0x7538>
  40a0c4:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40a0c8:	ldrsw	x0, [x8, #1456]
  40a0cc:	b	40a0dc <__fxstatat@plt+0x753c>
  40a0d0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a0d4:	add	x0, x0, #0x166
  40a0d8:	bl	402540 <strlen@plt>
  40a0dc:	add	x8, x21, x0
  40a0e0:	add	x21, x8, #0x1
  40a0e4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a0e8:	ldrb	w8, [x8, #1684]
  40a0ec:	cmp	w8, #0x1
  40a0f0:	b.ne	40a120 <__fxstatat@plt+0x7580>  // b.any
  40a0f4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a0f8:	ldr	w8, [x8, #1556]
  40a0fc:	cmp	w8, #0x4
  40a100:	b.ne	40a110 <__fxstatat@plt+0x7570>  // b.any
  40a104:	ldr	x0, [x19, #160]
  40a108:	bl	402540 <strlen@plt>
  40a10c:	b	40a118 <__fxstatat@plt+0x7578>
  40a110:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40a114:	ldrsw	x0, [x8, #1476]
  40a118:	add	x8, x21, x0
  40a11c:	add	x21, x8, #0x1
  40a120:	ldr	x20, [x19]
  40a124:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a128:	ldr	x2, [x8, #1936]
  40a12c:	ldr	w3, [x19, #180]
  40a130:	add	x22, sp, #0x2a0
  40a134:	add	x0, x29, #0x18
  40a138:	add	x4, sp, #0x298
  40a13c:	add	x5, sp, #0x294
  40a140:	mov	x1, x20
  40a144:	str	x22, [x29, #24]
  40a148:	bl	4076c0 <__fxstatat@plt+0x4b20>
  40a14c:	ldr	x0, [x29, #24]
  40a150:	cmp	x0, x22
  40a154:	b.eq	40a164 <__fxstatat@plt+0x75c4>  // b.none
  40a158:	cmp	x0, x20
  40a15c:	b.eq	40a164 <__fxstatat@plt+0x75c4>  // b.none
  40a160:	bl	402990 <free@plt>
  40a164:	ldrb	w8, [sp, #660]
  40a168:	ldr	x9, [sp, #664]
  40a16c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a170:	ldr	w10, [x10, #1568]
  40a174:	add	x8, x21, x8
  40a178:	add	x20, x8, x9
  40a17c:	cbz	w10, 40a198 <__fxstatat@plt+0x75f8>
  40a180:	ldrb	w0, [x19, #168]
  40a184:	ldr	w1, [x19, #40]
  40a188:	ldr	w2, [x19, #152]
  40a18c:	bl	409f24 <__fxstatat@plt+0x7384>
  40a190:	tst	w0, #0xff
  40a194:	cinc	x20, x20, ne  // ne = any
  40a198:	mov	x0, x20
  40a19c:	add	sp, sp, #0x2, lsl #12
  40a1a0:	add	sp, sp, #0x2a0
  40a1a4:	ldp	x20, x19, [sp, #48]
  40a1a8:	ldp	x22, x21, [sp, #32]
  40a1ac:	ldr	x28, [sp, #16]
  40a1b0:	ldp	x29, x30, [sp], #64
  40a1b4:	ret
  40a1b8:	stp	x29, x30, [sp, #-80]!
  40a1bc:	stp	x24, x23, [sp, #32]
  40a1c0:	stp	x22, x21, [sp, #48]
  40a1c4:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a1c8:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a1cc:	ldr	x8, [x24, #2408]
  40a1d0:	ldr	x9, [x21, #1904]
  40a1d4:	adrp	x23, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40a1d8:	ldr	x10, [x23, #1848]
  40a1dc:	stp	x20, x19, [sp, #64]
  40a1e0:	cmp	x8, x9
  40a1e4:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40a1e8:	mov	w19, w0
  40a1ec:	cmp	x10, x20
  40a1f0:	adrp	x22, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40a1f4:	str	x25, [sp, #16]
  40a1f8:	mov	x29, sp
  40a1fc:	b.cs	40a2d4 <__fxstatat@plt+0x7734>  // b.hs, b.nlast
  40a200:	ldr	x0, [x22, #1840]
  40a204:	cmp	x20, x8, lsr #1
  40a208:	b.cs	40a238 <__fxstatat@plt+0x7698>  // b.hs, b.nlast
  40a20c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40a210:	movk	x8, #0xaaab
  40a214:	movk	x8, #0x2aa, lsl #48
  40a218:	cmp	x20, x8
  40a21c:	b.cs	40a42c <__fxstatat@plt+0x788c>  // b.hs, b.nlast
  40a220:	add	x8, x20, x20, lsl #1
  40a224:	lsl	x1, x8, #4
  40a228:	bl	411244 <__fxstatat@plt+0xe6a4>
  40a22c:	str	x0, [x22, #1840]
  40a230:	lsl	x24, x20, #1
  40a234:	b	40a260 <__fxstatat@plt+0x76c0>
  40a238:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40a23c:	movk	x9, #0x5556
  40a240:	movk	x9, #0x555, lsl #48
  40a244:	cmp	x8, x9
  40a248:	b.cs	40a42c <__fxstatat@plt+0x788c>  // b.hs, b.nlast
  40a24c:	add	x8, x8, x8, lsl #1
  40a250:	lsl	x1, x8, #3
  40a254:	bl	411244 <__fxstatat@plt+0xe6a4>
  40a258:	ldr	x24, [x24, #2408]
  40a25c:	str	x0, [x22, #1840]
  40a260:	ldr	x9, [x23, #1848]
  40a264:	sub	x8, x24, x9
  40a268:	add	x9, x24, x9
  40a26c:	add	x9, x9, #0x1
  40a270:	umulh	x10, x8, x9
  40a274:	cmp	xzr, x10
  40a278:	cset	w10, ne  // ne = any
  40a27c:	cmp	x9, x24
  40a280:	b.cc	40a42c <__fxstatat@plt+0x788c>  // b.lo, b.ul, b.last
  40a284:	cbnz	w10, 40a42c <__fxstatat@plt+0x788c>
  40a288:	mul	x8, x8, x9
  40a28c:	lsr	x9, x8, #61
  40a290:	cbnz	x9, 40a42c <__fxstatat@plt+0x788c>
  40a294:	lsl	x8, x8, #2
  40a298:	and	x0, x8, #0xfffffffffffffff8
  40a29c:	bl	4111f4 <__fxstatat@plt+0xe654>
  40a2a0:	ldr	x8, [x23, #1848]
  40a2a4:	cmp	x8, x24
  40a2a8:	b.cs	40a2d0 <__fxstatat@plt+0x7730>  // b.hs, b.nlast
  40a2ac:	ldr	x9, [x22, #1840]
  40a2b0:	mov	w10, #0x18                  	// #24
  40a2b4:	madd	x9, x8, x10, x9
  40a2b8:	add	x9, x9, #0x10
  40a2bc:	add	x8, x8, #0x1
  40a2c0:	str	x0, [x9], #24
  40a2c4:	cmp	x24, x8
  40a2c8:	add	x0, x0, x8, lsl #3
  40a2cc:	b.ne	40a2bc <__fxstatat@plt+0x771c>  // b.any
  40a2d0:	str	x24, [x23, #1848]
  40a2d4:	cbz	x20, 40a328 <__fxstatat@plt+0x7788>
  40a2d8:	ldr	x9, [x22, #1840]
  40a2dc:	mov	x8, xzr
  40a2e0:	mov	w10, #0x1                   	// #1
  40a2e4:	mov	w11, #0x18                  	// #24
  40a2e8:	mov	w12, #0x3                   	// #3
  40a2ec:	mov	w13, #0x1                   	// #1
  40a2f0:	madd	x16, x8, x11, x9
  40a2f4:	ldr	x15, [x16, #16]
  40a2f8:	add	x8, x8, #0x1
  40a2fc:	mov	x14, xzr
  40a300:	add	x17, x8, x8, lsl #1
  40a304:	strb	w10, [x16]
  40a308:	str	x17, [x16, #8]
  40a30c:	str	x12, [x15, x14, lsl #3]
  40a310:	add	x14, x14, #0x1
  40a314:	cmp	x13, x14
  40a318:	b.ne	40a30c <__fxstatat@plt+0x776c>  // b.any
  40a31c:	cmp	x8, x20
  40a320:	add	x13, x13, #0x1
  40a324:	b.cc	40a2f0 <__fxstatat@plt+0x7750>  // b.lo, b.ul, b.last
  40a328:	ldr	x8, [x21, #1904]
  40a32c:	cbz	x8, 40a3ec <__fxstatat@plt+0x784c>
  40a330:	mov	x23, xzr
  40a334:	adrp	x24, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40a338:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a33c:	ldr	x8, [x24, #1440]
  40a340:	ldr	x0, [x8, x23, lsl #3]
  40a344:	bl	40a010 <__fxstatat@plt+0x7470>
  40a348:	cbz	x20, 40a3dc <__fxstatat@plt+0x783c>
  40a34c:	ldr	x11, [x22, #1840]
  40a350:	ldr	x8, [x21, #1904]
  40a354:	ldr	x10, [x25, #2360]
  40a358:	mov	x9, xzr
  40a35c:	add	x11, x11, #0x8
  40a360:	ldurb	w12, [x11, #-8]
  40a364:	cbz	w12, 40a3c8 <__fxstatat@plt+0x7828>
  40a368:	tbz	w19, #0, 40a380 <__fxstatat@plt+0x77e0>
  40a36c:	add	x12, x8, x9
  40a370:	add	x13, x9, #0x1
  40a374:	udiv	x12, x12, x13
  40a378:	udiv	x12, x23, x12
  40a37c:	b	40a38c <__fxstatat@plt+0x77ec>
  40a380:	add	x12, x9, #0x1
  40a384:	udiv	x13, x23, x12
  40a388:	msub	x12, x13, x12, x23
  40a38c:	ldr	x13, [x11, #8]
  40a390:	cmp	x9, x12
  40a394:	cset	w14, ne  // ne = any
  40a398:	add	x14, x0, w14, uxtw #1
  40a39c:	ldr	x15, [x13, x12, lsl #3]
  40a3a0:	subs	x15, x14, x15
  40a3a4:	b.ls	40a3c8 <__fxstatat@plt+0x7828>  // b.plast
  40a3a8:	ldr	x16, [x11]
  40a3ac:	add	x15, x15, x16
  40a3b0:	str	x15, [x11]
  40a3b4:	str	x14, [x13, x12, lsl #3]
  40a3b8:	ldr	x12, [x11]
  40a3bc:	cmp	x12, x10
  40a3c0:	cset	w12, cc  // cc = lo, ul, last
  40a3c4:	sturb	w12, [x11, #-8]
  40a3c8:	add	x9, x9, #0x1
  40a3cc:	cmp	x9, x20
  40a3d0:	add	x11, x11, #0x18
  40a3d4:	b.cc	40a360 <__fxstatat@plt+0x77c0>  // b.lo, b.ul, b.last
  40a3d8:	b	40a3e0 <__fxstatat@plt+0x7840>
  40a3dc:	ldr	x8, [x21, #1904]
  40a3e0:	add	x23, x23, #0x1
  40a3e4:	cmp	x23, x8
  40a3e8:	b.cc	40a33c <__fxstatat@plt+0x779c>  // b.lo, b.ul, b.last
  40a3ec:	ldr	x8, [x22, #1840]
  40a3f0:	mov	w9, #0x18                  	// #24
  40a3f4:	madd	x8, x20, x9, x8
  40a3f8:	sub	x8, x8, #0x18
  40a3fc:	mov	x0, x20
  40a400:	cmp	x20, #0x2
  40a404:	b.cc	40a414 <__fxstatat@plt+0x7874>  // b.lo, b.ul, b.last
  40a408:	ldrb	w9, [x8], #-24
  40a40c:	sub	x20, x0, #0x1
  40a410:	cbz	w9, 40a3fc <__fxstatat@plt+0x785c>
  40a414:	ldp	x20, x19, [sp, #64]
  40a418:	ldp	x22, x21, [sp, #48]
  40a41c:	ldp	x24, x23, [sp, #32]
  40a420:	ldr	x25, [sp, #16]
  40a424:	ldp	x29, x30, [sp], #80
  40a428:	ret
  40a42c:	bl	411430 <__fxstatat@plt+0xe890>
  40a430:	stp	x29, x30, [sp, #-48]!
  40a434:	cmp	x0, x1
  40a438:	str	x21, [sp, #16]
  40a43c:	stp	x20, x19, [sp, #32]
  40a440:	mov	x29, sp
  40a444:	b.cs	40a4a8 <__fxstatat@plt+0x7908>  // b.hs, b.nlast
  40a448:	mov	x19, x1
  40a44c:	mov	x20, x0
  40a450:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a454:	ldr	x8, [x21, #2368]
  40a458:	cbz	x8, 40a490 <__fxstatat@plt+0x78f0>
  40a45c:	add	x10, x20, #0x1
  40a460:	udiv	x9, x19, x8
  40a464:	udiv	x8, x10, x8
  40a468:	cmp	x9, x8
  40a46c:	b.ls	40a490 <__fxstatat@plt+0x78f0>  // b.plast
  40a470:	mov	w0, #0x9                   	// #9
  40a474:	bl	4027f0 <putchar_unlocked@plt>
  40a478:	ldr	x8, [x21, #2368]
  40a47c:	neg	x10, x20
  40a480:	udiv	x9, x20, x8
  40a484:	madd	x9, x9, x8, x10
  40a488:	add	x8, x8, x9
  40a48c:	b	40a49c <__fxstatat@plt+0x78fc>
  40a490:	mov	w0, #0x20                  	// #32
  40a494:	bl	4027f0 <putchar_unlocked@plt>
  40a498:	mov	w8, #0x1                   	// #1
  40a49c:	add	x20, x8, x20
  40a4a0:	cmp	x20, x19
  40a4a4:	b.cc	40a454 <__fxstatat@plt+0x78b4>  // b.lo, b.ul, b.last
  40a4a8:	ldp	x20, x19, [sp, #32]
  40a4ac:	ldr	x21, [sp, #16]
  40a4b0:	ldp	x29, x30, [sp], #48
  40a4b4:	ret
  40a4b8:	stp	x29, x30, [sp, #-32]!
  40a4bc:	stp	x20, x19, [sp, #16]
  40a4c0:	mov	w19, w1
  40a4c4:	mov	w20, w0
  40a4c8:	mov	x29, sp
  40a4cc:	tbz	w2, #0, 40a4e4 <__fxstatat@plt+0x7944>
  40a4d0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a4d4:	ldrb	w8, [x8, #2337]
  40a4d8:	tbz	w8, #0, 40a4f0 <__fxstatat@plt+0x7950>
  40a4dc:	mov	x0, xzr
  40a4e0:	b	40a4f8 <__fxstatat@plt+0x7958>
  40a4e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a4e8:	add	x0, x0, #0x166
  40a4ec:	b	40a4f8 <__fxstatat@plt+0x7958>
  40a4f0:	mov	w0, w20
  40a4f4:	bl	40d35c <__fxstatat@plt+0xa7bc>
  40a4f8:	mov	w1, w20
  40a4fc:	mov	w2, w19
  40a500:	ldp	x20, x19, [sp, #16]
  40a504:	ldp	x29, x30, [sp], #32
  40a508:	b	40a50c <__fxstatat@plt+0x796c>
  40a50c:	stp	x29, x30, [sp, #-48]!
  40a510:	stp	x20, x19, [sp, #32]
  40a514:	mov	w19, w2
  40a518:	str	x21, [sp, #16]
  40a51c:	mov	x29, sp
  40a520:	cbz	x0, 40a570 <__fxstatat@plt+0x79d0>
  40a524:	mov	w1, wzr
  40a528:	mov	x20, x0
  40a52c:	bl	40db9c <__fxstatat@plt+0xaffc>
  40a530:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a534:	ldr	x1, [x8, #1488]
  40a538:	sub	w8, w19, w0
  40a53c:	mov	x0, x20
  40a540:	bic	w21, w8, w8, asr #31
  40a544:	bl	402ad0 <fputs_unlocked@plt>
  40a548:	mov	x0, x20
  40a54c:	bl	402540 <strlen@plt>
  40a550:	mov	x19, x0
  40a554:	add	w20, w21, #0x1
  40a558:	mov	w0, #0x20                  	// #32
  40a55c:	bl	4027f0 <putchar_unlocked@plt>
  40a560:	subs	w20, w20, #0x1
  40a564:	b.ne	40a558 <__fxstatat@plt+0x79b8>  // b.any
  40a568:	add	x8, x19, x21
  40a56c:	b	40a58c <__fxstatat@plt+0x79ec>
  40a570:	mov	x3, x1
  40a574:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a578:	add	x1, x1, #0x351
  40a57c:	mov	w0, #0x1                   	// #1
  40a580:	mov	w2, w19
  40a584:	bl	4027b0 <__printf_chk@plt>
  40a588:	sxtw	x8, w19
  40a58c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a590:	ldr	x10, [x9, #1912]
  40a594:	ldp	x20, x19, [sp, #32]
  40a598:	ldr	x21, [sp, #16]
  40a59c:	add	x8, x8, x10
  40a5a0:	add	x8, x8, #0x1
  40a5a4:	str	x8, [x9, #1912]
  40a5a8:	ldp	x29, x30, [sp], #48
  40a5ac:	ret
  40a5b0:	stp	x29, x30, [sp, #-64]!
  40a5b4:	cmp	x1, #0x401
  40a5b8:	mov	w8, #0x401                 	// #1025
  40a5bc:	stp	x20, x19, [sp, #48]
  40a5c0:	mov	x19, x0
  40a5c4:	csinc	x20, x8, x1, cs  // cs = hs, nlast
  40a5c8:	stp	x24, x23, [sp, #16]
  40a5cc:	stp	x22, x21, [sp, #32]
  40a5d0:	mov	x29, sp
  40a5d4:	mov	x0, x20
  40a5d8:	bl	402730 <malloc@plt>
  40a5dc:	mov	x21, x0
  40a5e0:	cbz	x0, 40a66c <__fxstatat@plt+0x7acc>
  40a5e4:	mov	x0, x19
  40a5e8:	mov	x1, x21
  40a5ec:	mov	x2, x20
  40a5f0:	bl	4025f0 <readlink@plt>
  40a5f4:	mov	x22, x0
  40a5f8:	tbz	x0, #63, 40a60c <__fxstatat@plt+0x7a6c>
  40a5fc:	bl	402b30 <__errno_location@plt>
  40a600:	ldr	w24, [x0]
  40a604:	cmp	w24, #0x22
  40a608:	b.ne	40a658 <__fxstatat@plt+0x7ab8>  // b.any
  40a60c:	cmp	x22, x20
  40a610:	b.cc	40a650 <__fxstatat@plt+0x7ab0>  // b.lo, b.ul, b.last
  40a614:	mov	x0, x21
  40a618:	bl	402990 <free@plt>
  40a61c:	lsr	x8, x20, #62
  40a620:	cbnz	x8, 40a62c <__fxstatat@plt+0x7a8c>
  40a624:	lsl	x20, x20, #1
  40a628:	b	40a5d4 <__fxstatat@plt+0x7a34>
  40a62c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40a630:	cmp	x20, x8
  40a634:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  40a638:	b.cc	40a5d4 <__fxstatat@plt+0x7a34>  // b.lo, b.ul, b.last
  40a63c:	bl	402b30 <__errno_location@plt>
  40a640:	mov	x21, xzr
  40a644:	mov	w8, #0xc                   	// #12
  40a648:	str	w8, [x0]
  40a64c:	b	40a66c <__fxstatat@plt+0x7acc>
  40a650:	strb	wzr, [x21, x22]
  40a654:	b	40a66c <__fxstatat@plt+0x7acc>
  40a658:	mov	x23, x0
  40a65c:	mov	x0, x21
  40a660:	bl	402990 <free@plt>
  40a664:	mov	x21, xzr
  40a668:	str	w24, [x23]
  40a66c:	mov	x0, x21
  40a670:	ldp	x20, x19, [sp, #48]
  40a674:	ldp	x22, x21, [sp, #32]
  40a678:	ldp	x24, x23, [sp, #16]
  40a67c:	ldp	x29, x30, [sp], #64
  40a680:	ret
  40a684:	mov	w0, #0x1                   	// #1
  40a688:	b	40689c <__fxstatat@plt+0x3cfc>
  40a68c:	stp	x29, x30, [sp, #-96]!
  40a690:	stp	x28, x27, [sp, #16]
  40a694:	stp	x26, x25, [sp, #32]
  40a698:	stp	x24, x23, [sp, #48]
  40a69c:	stp	x22, x21, [sp, #64]
  40a6a0:	stp	x20, x19, [sp, #80]
  40a6a4:	mov	x29, sp
  40a6a8:	mov	x19, x3
  40a6ac:	mov	x20, x2
  40a6b0:	mov	x24, x1
  40a6b4:	mov	x21, x0
  40a6b8:	bl	402540 <strlen@plt>
  40a6bc:	ldr	x25, [x24]
  40a6c0:	cbz	x25, 40a74c <__fxstatat@plt+0x7bac>
  40a6c4:	mov	x22, x0
  40a6c8:	mov	w26, wzr
  40a6cc:	mov	x23, xzr
  40a6d0:	add	x27, x24, #0x8
  40a6d4:	mov	x28, #0xffffffffffffffff    	// #-1
  40a6d8:	mov	x24, x20
  40a6dc:	mov	x0, x25
  40a6e0:	mov	x1, x21
  40a6e4:	mov	x2, x22
  40a6e8:	bl	402780 <strncmp@plt>
  40a6ec:	cbnz	w0, 40a72c <__fxstatat@plt+0x7b8c>
  40a6f0:	mov	x0, x25
  40a6f4:	bl	402540 <strlen@plt>
  40a6f8:	cmp	x0, x22
  40a6fc:	b.eq	40a750 <__fxstatat@plt+0x7bb0>  // b.none
  40a700:	cmn	x28, #0x1
  40a704:	b.eq	40a728 <__fxstatat@plt+0x7b88>  // b.none
  40a708:	cbz	x20, 40a720 <__fxstatat@plt+0x7b80>
  40a70c:	madd	x0, x28, x19, x20
  40a710:	mov	x1, x24
  40a714:	mov	x2, x19
  40a718:	bl	402810 <bcmp@plt>
  40a71c:	cbz	w0, 40a72c <__fxstatat@plt+0x7b8c>
  40a720:	mov	w26, #0x1                   	// #1
  40a724:	b	40a72c <__fxstatat@plt+0x7b8c>
  40a728:	mov	x28, x23
  40a72c:	ldr	x25, [x27, x23, lsl #3]
  40a730:	add	x23, x23, #0x1
  40a734:	add	x24, x24, x19
  40a738:	cbnz	x25, 40a6dc <__fxstatat@plt+0x7b3c>
  40a73c:	tst	w26, #0x1
  40a740:	mov	x8, #0xfffffffffffffffe    	// #-2
  40a744:	csel	x0, x8, x28, ne  // ne = any
  40a748:	b	40a754 <__fxstatat@plt+0x7bb4>
  40a74c:	mov	x23, #0xffffffffffffffff    	// #-1
  40a750:	mov	x0, x23
  40a754:	ldp	x20, x19, [sp, #80]
  40a758:	ldp	x22, x21, [sp, #64]
  40a75c:	ldp	x24, x23, [sp, #48]
  40a760:	ldp	x26, x25, [sp, #32]
  40a764:	ldp	x28, x27, [sp, #16]
  40a768:	ldp	x29, x30, [sp], #96
  40a76c:	ret
  40a770:	stp	x29, x30, [sp, #-48]!
  40a774:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a778:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a77c:	add	x8, x8, #0x5cb
  40a780:	add	x9, x9, #0x5b0
  40a784:	cmn	x2, #0x1
  40a788:	stp	x20, x19, [sp, #32]
  40a78c:	mov	x19, x1
  40a790:	mov	x20, x0
  40a794:	csel	x1, x9, x8, eq  // eq = none
  40a798:	mov	w2, #0x5                   	// #5
  40a79c:	mov	x0, xzr
  40a7a0:	str	x21, [sp, #16]
  40a7a4:	mov	x29, sp
  40a7a8:	bl	402ac0 <dcgettext@plt>
  40a7ac:	mov	x21, x0
  40a7b0:	mov	w1, #0x8                   	// #8
  40a7b4:	mov	w0, wzr
  40a7b8:	mov	x2, x19
  40a7bc:	bl	41071c <__fxstatat@plt+0xdb7c>
  40a7c0:	mov	x19, x0
  40a7c4:	mov	w0, #0x1                   	// #1
  40a7c8:	mov	x1, x20
  40a7cc:	bl	410aac <__fxstatat@plt+0xdf0c>
  40a7d0:	mov	x2, x21
  40a7d4:	mov	x3, x19
  40a7d8:	ldp	x20, x19, [sp, #32]
  40a7dc:	ldr	x21, [sp, #16]
  40a7e0:	mov	x4, x0
  40a7e4:	mov	w0, wzr
  40a7e8:	mov	w1, wzr
  40a7ec:	ldp	x29, x30, [sp], #48
  40a7f0:	b	4025b0 <error@plt>
  40a7f4:	stp	x29, x30, [sp, #-96]!
  40a7f8:	stp	x20, x19, [sp, #80]
  40a7fc:	mov	x20, x1
  40a800:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a804:	stp	x22, x21, [sp, #64]
  40a808:	mov	x19, x2
  40a80c:	mov	x21, x0
  40a810:	add	x1, x1, #0x5e8
  40a814:	mov	w2, #0x5                   	// #5
  40a818:	mov	x0, xzr
  40a81c:	stp	x28, x27, [sp, #16]
  40a820:	stp	x26, x25, [sp, #32]
  40a824:	stp	x24, x23, [sp, #48]
  40a828:	mov	x29, sp
  40a82c:	bl	402ac0 <dcgettext@plt>
  40a830:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40a834:	ldr	x1, [x26, #1464]
  40a838:	bl	402ad0 <fputs_unlocked@plt>
  40a83c:	ldr	x24, [x21]
  40a840:	cbz	x24, 40a8d8 <__fxstatat@plt+0x7d38>
  40a844:	add	x28, x21, #0x8
  40a848:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a84c:	mov	x27, xzr
  40a850:	mov	x23, xzr
  40a854:	mov	x22, xzr
  40a858:	add	x21, x21, #0x5fd
  40a85c:	cbz	x22, 40a8a0 <__fxstatat@plt+0x7d00>
  40a860:	add	x1, x20, x27
  40a864:	mov	x0, x23
  40a868:	mov	x2, x19
  40a86c:	bl	402810 <bcmp@plt>
  40a870:	mov	x25, x27
  40a874:	cbnz	w0, 40a8a4 <__fxstatat@plt+0x7d04>
  40a878:	ldr	x25, [x26, #1464]
  40a87c:	mov	x0, x24
  40a880:	bl	410abc <__fxstatat@plt+0xdf1c>
  40a884:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  40a888:	mov	x3, x0
  40a88c:	mov	w1, #0x1                   	// #1
  40a890:	mov	x0, x25
  40a894:	add	x2, x2, #0x605
  40a898:	bl	402930 <__fprintf_chk@plt>
  40a89c:	b	40a8c8 <__fxstatat@plt+0x7d28>
  40a8a0:	mov	x25, xzr
  40a8a4:	ldr	x23, [x26, #1464]
  40a8a8:	mov	x0, x24
  40a8ac:	bl	410abc <__fxstatat@plt+0xdf1c>
  40a8b0:	mov	x3, x0
  40a8b4:	mov	w1, #0x1                   	// #1
  40a8b8:	mov	x0, x23
  40a8bc:	mov	x2, x21
  40a8c0:	bl	402930 <__fprintf_chk@plt>
  40a8c4:	add	x23, x20, x25
  40a8c8:	ldr	x24, [x28, x22, lsl #3]
  40a8cc:	add	x22, x22, #0x1
  40a8d0:	add	x27, x27, x19
  40a8d4:	cbnz	x24, 40a85c <__fxstatat@plt+0x7cbc>
  40a8d8:	ldr	x1, [x26, #1464]
  40a8dc:	ldp	x20, x19, [sp, #80]
  40a8e0:	ldp	x22, x21, [sp, #64]
  40a8e4:	ldp	x24, x23, [sp, #48]
  40a8e8:	ldp	x26, x25, [sp, #32]
  40a8ec:	ldp	x28, x27, [sp, #16]
  40a8f0:	mov	w0, #0xa                   	// #10
  40a8f4:	ldp	x29, x30, [sp], #96
  40a8f8:	b	4026d0 <putc_unlocked@plt>
  40a8fc:	stp	x29, x30, [sp, #-64]!
  40a900:	stp	x24, x23, [sp, #16]
  40a904:	stp	x22, x21, [sp, #32]
  40a908:	mov	x21, x3
  40a90c:	mov	x22, x2
  40a910:	mov	x23, x1
  40a914:	mov	x24, x0
  40a918:	mov	x0, x1
  40a91c:	mov	x1, x2
  40a920:	mov	x2, x3
  40a924:	mov	x3, x4
  40a928:	stp	x20, x19, [sp, #48]
  40a92c:	mov	x29, sp
  40a930:	mov	x19, x5
  40a934:	mov	x20, x4
  40a938:	bl	40a68c <__fxstatat@plt+0x7aec>
  40a93c:	mov	x2, x0
  40a940:	tbz	x0, #63, 40a968 <__fxstatat@plt+0x7dc8>
  40a944:	mov	x0, x24
  40a948:	mov	x1, x23
  40a94c:	bl	40a770 <__fxstatat@plt+0x7bd0>
  40a950:	mov	x0, x22
  40a954:	mov	x1, x21
  40a958:	mov	x2, x20
  40a95c:	bl	40a7f4 <__fxstatat@plt+0x7c54>
  40a960:	blr	x19
  40a964:	mov	x2, #0xffffffffffffffff    	// #-1
  40a968:	ldp	x20, x19, [sp, #48]
  40a96c:	ldp	x22, x21, [sp, #32]
  40a970:	ldp	x24, x23, [sp, #16]
  40a974:	mov	x0, x2
  40a978:	ldp	x29, x30, [sp], #64
  40a97c:	ret
  40a980:	stp	x29, x30, [sp, #-64]!
  40a984:	stp	x22, x21, [sp, #32]
  40a988:	stp	x20, x19, [sp, #48]
  40a98c:	ldr	x20, [x1]
  40a990:	str	x23, [sp, #16]
  40a994:	mov	x29, sp
  40a998:	cbz	x20, 40a9e8 <__fxstatat@plt+0x7e48>
  40a99c:	mov	x22, x2
  40a9a0:	mov	x23, x1
  40a9a4:	mov	x1, x2
  40a9a8:	mov	x2, x3
  40a9ac:	mov	x19, x3
  40a9b0:	mov	x21, x0
  40a9b4:	bl	402810 <bcmp@plt>
  40a9b8:	cbz	w0, 40a9e8 <__fxstatat@plt+0x7e48>
  40a9bc:	add	x22, x22, x19
  40a9c0:	add	x23, x23, #0x8
  40a9c4:	ldr	x20, [x23]
  40a9c8:	cbz	x20, 40a9e8 <__fxstatat@plt+0x7e48>
  40a9cc:	mov	x0, x21
  40a9d0:	mov	x1, x22
  40a9d4:	mov	x2, x19
  40a9d8:	bl	402810 <bcmp@plt>
  40a9dc:	add	x22, x22, x19
  40a9e0:	add	x23, x23, #0x8
  40a9e4:	cbnz	w0, 40a9c4 <__fxstatat@plt+0x7e24>
  40a9e8:	mov	x0, x20
  40a9ec:	ldp	x20, x19, [sp, #48]
  40a9f0:	ldp	x22, x21, [sp, #32]
  40a9f4:	ldr	x23, [sp, #16]
  40a9f8:	ldp	x29, x30, [sp], #64
  40a9fc:	ret
  40aa00:	sub	w9, w0, #0x41
  40aa04:	mov	w8, w0
  40aa08:	cmp	w9, #0x39
  40aa0c:	mov	w0, #0x1                   	// #1
  40aa10:	b.hi	40aa28 <__fxstatat@plt+0x7e88>  // b.pmore
  40aa14:	mov	w10, #0x1                   	// #1
  40aa18:	lsl	x9, x10, x9
  40aa1c:	tst	x9, #0x3ffffff03ffffff
  40aa20:	b.eq	40aa28 <__fxstatat@plt+0x7e88>  // b.none
  40aa24:	ret
  40aa28:	sub	w8, w8, #0x30
  40aa2c:	cmp	w8, #0xa
  40aa30:	b.cc	40aa24 <__fxstatat@plt+0x7e84>  // b.lo, b.ul, b.last
  40aa34:	mov	w0, wzr
  40aa38:	ret
  40aa3c:	sub	w8, w0, #0x41
  40aa40:	cmp	w8, #0x39
  40aa44:	b.hi	40aa58 <__fxstatat@plt+0x7eb8>  // b.pmore
  40aa48:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  40aa4c:	lsr	x8, x9, x8
  40aa50:	and	w0, w8, #0x1
  40aa54:	ret
  40aa58:	mov	w0, wzr
  40aa5c:	ret
  40aa60:	cmp	w0, #0x80
  40aa64:	cset	w0, cc  // cc = lo, ul, last
  40aa68:	ret
  40aa6c:	cmp	w0, #0x20
  40aa70:	cset	w8, eq  // eq = none
  40aa74:	cmp	w0, #0x9
  40aa78:	cset	w9, eq  // eq = none
  40aa7c:	orr	w0, w8, w9
  40aa80:	ret
  40aa84:	mov	w8, w0
  40aa88:	cmp	w0, #0x20
  40aa8c:	mov	w0, #0x1                   	// #1
  40aa90:	b.cs	40aa98 <__fxstatat@plt+0x7ef8>  // b.hs, b.nlast
  40aa94:	ret
  40aa98:	cmp	w8, #0x7f
  40aa9c:	b.eq	40aa94 <__fxstatat@plt+0x7ef4>  // b.none
  40aaa0:	mov	w0, wzr
  40aaa4:	ret
  40aaa8:	sub	w8, w0, #0x30
  40aaac:	cmp	w8, #0xa
  40aab0:	cset	w0, cc  // cc = lo, ul, last
  40aab4:	ret
  40aab8:	sub	w8, w0, #0x21
  40aabc:	cmp	w8, #0x5e
  40aac0:	cset	w0, cc  // cc = lo, ul, last
  40aac4:	ret
  40aac8:	sub	w8, w0, #0x61
  40aacc:	cmp	w8, #0x1a
  40aad0:	cset	w0, cc  // cc = lo, ul, last
  40aad4:	ret
  40aad8:	sub	w8, w0, #0x20
  40aadc:	cmp	w8, #0x5f
  40aae0:	cset	w0, cc  // cc = lo, ul, last
  40aae4:	ret
  40aae8:	sub	w9, w0, #0x21
  40aaec:	mov	w8, w0
  40aaf0:	cmp	w9, #0x3f
  40aaf4:	mov	w0, #0x1                   	// #1
  40aaf8:	b.hi	40ab18 <__fxstatat@plt+0x7f78>  // b.pmore
  40aafc:	mov	w10, #0x1                   	// #1
  40ab00:	lsl	x9, x10, x9
  40ab04:	mov	x10, #0xfc00000000007fff    	// #-288230376151678977
  40ab08:	movk	x10, #0xfe00, lsl #16
  40ab0c:	tst	x9, x10
  40ab10:	b.eq	40ab18 <__fxstatat@plt+0x7f78>  // b.none
  40ab14:	ret
  40ab18:	sub	w8, w8, #0x7b
  40ab1c:	cmp	w8, #0x4
  40ab20:	b.cc	40ab14 <__fxstatat@plt+0x7f74>  // b.lo, b.ul, b.last
  40ab24:	mov	w0, wzr
  40ab28:	ret
  40ab2c:	sub	w8, w0, #0x9
  40ab30:	cmp	w8, #0x17
  40ab34:	b.hi	40ab4c <__fxstatat@plt+0x7fac>  // b.pmore
  40ab38:	mov	w9, #0x1f                  	// #31
  40ab3c:	movk	w9, #0x80, lsl #16
  40ab40:	lsr	w8, w9, w8
  40ab44:	and	w0, w8, #0x1
  40ab48:	ret
  40ab4c:	mov	w0, wzr
  40ab50:	ret
  40ab54:	sub	w8, w0, #0x41
  40ab58:	cmp	w8, #0x1a
  40ab5c:	cset	w0, cc  // cc = lo, ul, last
  40ab60:	ret
  40ab64:	sub	w8, w0, #0x30
  40ab68:	cmp	w8, #0x36
  40ab6c:	b.hi	40ab84 <__fxstatat@plt+0x7fe4>  // b.pmore
  40ab70:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  40ab74:	movk	x9, #0x3ff
  40ab78:	lsr	x8, x9, x8
  40ab7c:	and	w0, w8, #0x1
  40ab80:	ret
  40ab84:	mov	w0, wzr
  40ab88:	ret
  40ab8c:	sub	w8, w0, #0x41
  40ab90:	add	w9, w0, #0x20
  40ab94:	cmp	w8, #0x1a
  40ab98:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40ab9c:	ret
  40aba0:	sub	w8, w0, #0x61
  40aba4:	sub	w9, w0, #0x20
  40aba8:	cmp	w8, #0x1a
  40abac:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40abb0:	ret
  40abb4:	cmp	x0, x1
  40abb8:	mov	w8, wzr
  40abbc:	b.eq	40ac14 <__fxstatat@plt+0x8074>  // b.none
  40abc0:	cbz	x2, 40ac14 <__fxstatat@plt+0x8074>
  40abc4:	sub	x8, x2, #0x1
  40abc8:	ldrb	w9, [x0]
  40abcc:	ldrb	w10, [x1]
  40abd0:	sub	w11, w9, #0x41
  40abd4:	add	w12, w9, #0x20
  40abd8:	sub	w13, w10, #0x41
  40abdc:	cmp	w11, #0x1a
  40abe0:	add	w14, w10, #0x20
  40abe4:	csel	w11, w12, w9, cc  // cc = lo, ul, last
  40abe8:	cmp	w13, #0x1a
  40abec:	csel	w9, w14, w10, cc  // cc = lo, ul, last
  40abf0:	and	w10, w11, #0xff
  40abf4:	cbz	x8, 40ac10 <__fxstatat@plt+0x8070>
  40abf8:	cbz	w10, 40ac10 <__fxstatat@plt+0x8070>
  40abfc:	add	x0, x0, #0x1
  40ac00:	add	x1, x1, #0x1
  40ac04:	cmp	w10, w9, uxtb
  40ac08:	sub	x8, x8, #0x1
  40ac0c:	b.eq	40abc8 <__fxstatat@plt+0x8028>  // b.none
  40ac10:	sub	w8, w10, w9, uxtb
  40ac14:	mov	w0, w8
  40ac18:	ret
  40ac1c:	sub	sp, sp, #0x110
  40ac20:	stp	x26, x25, [sp, #208]
  40ac24:	and	w26, w1, #0x3
  40ac28:	sub	w8, w26, #0x1
  40ac2c:	tst	w26, w8
  40ac30:	stp	x29, x30, [sp, #176]
  40ac34:	stp	x28, x27, [sp, #192]
  40ac38:	stp	x24, x23, [sp, #224]
  40ac3c:	stp	x22, x21, [sp, #240]
  40ac40:	stp	x20, x19, [sp, #256]
  40ac44:	add	x29, sp, #0xb0
  40ac48:	b.ne	40ac74 <__fxstatat@plt+0x80d4>  // b.any
  40ac4c:	mov	x27, x0
  40ac50:	cbz	x0, 40ac74 <__fxstatat@plt+0x80d4>
  40ac54:	ldrb	w8, [x27]
  40ac58:	mov	w22, w1
  40ac5c:	cmp	w8, #0x2f
  40ac60:	b.eq	40aca8 <__fxstatat@plt+0x8108>  // b.none
  40ac64:	cbnz	w8, 40acc8 <__fxstatat@plt+0x8128>
  40ac68:	bl	402b30 <__errno_location@plt>
  40ac6c:	mov	w8, #0x2                   	// #2
  40ac70:	b	40ac7c <__fxstatat@plt+0x80dc>
  40ac74:	bl	402b30 <__errno_location@plt>
  40ac78:	mov	w8, #0x16                  	// #22
  40ac7c:	mov	x21, xzr
  40ac80:	str	w8, [x0]
  40ac84:	mov	x0, x21
  40ac88:	ldp	x20, x19, [sp, #256]
  40ac8c:	ldp	x22, x21, [sp, #240]
  40ac90:	ldp	x24, x23, [sp, #224]
  40ac94:	ldp	x26, x25, [sp, #208]
  40ac98:	ldp	x28, x27, [sp, #192]
  40ac9c:	ldp	x29, x30, [sp, #176]
  40aca0:	add	sp, sp, #0x110
  40aca4:	ret
  40aca8:	mov	w0, #0x1000                	// #4096
  40acac:	bl	4111f4 <__fxstatat@plt+0xe654>
  40acb0:	mov	w8, #0x2f                  	// #47
  40acb4:	mov	x19, x0
  40acb8:	mov	x21, x0
  40acbc:	add	x20, x0, #0x1, lsl #12
  40acc0:	strb	w8, [x19], #1
  40acc4:	b	40ad0c <__fxstatat@plt+0x816c>
  40acc8:	bl	411580 <__fxstatat@plt+0xe9e0>
  40accc:	mov	x21, x0
  40acd0:	cbz	x0, 40ac84 <__fxstatat@plt+0x80e4>
  40acd4:	mov	x0, x21
  40acd8:	bl	402540 <strlen@plt>
  40acdc:	mov	x20, x0
  40ace0:	cmp	x0, #0xfff
  40ace4:	b.gt	40ad04 <__fxstatat@plt+0x8164>
  40ace8:	mov	w1, #0x1000                	// #4096
  40acec:	mov	x0, x21
  40acf0:	bl	411244 <__fxstatat@plt+0xe6a4>
  40acf4:	mov	x21, x0
  40acf8:	add	x19, x0, x20
  40acfc:	add	x20, x0, #0x1, lsl #12
  40ad00:	b	40ad0c <__fxstatat@plt+0x816c>
  40ad04:	add	x20, x21, x20
  40ad08:	mov	x19, x20
  40ad0c:	ldrb	w8, [x27]
  40ad10:	cbz	w8, 40b084 <__fxstatat@plt+0x84e4>
  40ad14:	and	w9, w22, #0x7
  40ad18:	mov	x24, x19
  40ad1c:	mov	x23, x27
  40ad20:	stp	xzr, xzr, [sp, #8]
  40ad24:	str	xzr, [sp, #24]
  40ad28:	stp	w22, w9, [sp, #32]
  40ad2c:	and	w9, w8, #0xff
  40ad30:	cmp	w9, #0x2f
  40ad34:	mov	x28, x23
  40ad38:	b.ne	40ad4c <__fxstatat@plt+0x81ac>  // b.any
  40ad3c:	ldrb	w8, [x28, #1]!
  40ad40:	cmp	w8, #0x2f
  40ad44:	b.eq	40ad3c <__fxstatat@plt+0x819c>  // b.none
  40ad48:	mov	x23, x28
  40ad4c:	mov	w9, w8
  40ad50:	ands	w9, w9, #0xff
  40ad54:	b.eq	40ad68 <__fxstatat@plt+0x81c8>  // b.none
  40ad58:	cmp	w9, #0x2f
  40ad5c:	b.eq	40ad68 <__fxstatat@plt+0x81c8>  // b.none
  40ad60:	ldrb	w9, [x23, #1]!
  40ad64:	b	40ad50 <__fxstatat@plt+0x81b0>
  40ad68:	sub	x25, x23, x28
  40ad6c:	cmp	x25, #0x1
  40ad70:	b.eq	40adcc <__fxstatat@plt+0x822c>  // b.none
  40ad74:	cmp	x25, #0x2
  40ad78:	b.eq	40ad84 <__fxstatat@plt+0x81e4>  // b.none
  40ad7c:	cbnz	x25, 40ade0 <__fxstatat@plt+0x8240>
  40ad80:	b	40b08c <__fxstatat@plt+0x84ec>
  40ad84:	and	w8, w8, #0xff
  40ad88:	cmp	w8, #0x2e
  40ad8c:	b.ne	40ade0 <__fxstatat@plt+0x8240>  // b.any
  40ad90:	ldrb	w8, [x28, #1]
  40ad94:	cmp	w8, #0x2e
  40ad98:	b.ne	40ade0 <__fxstatat@plt+0x8240>  // b.any
  40ad9c:	add	x8, x21, #0x1
  40ada0:	cmp	x24, x8
  40ada4:	b.ls	40add8 <__fxstatat@plt+0x8238>  // b.plast
  40ada8:	sub	x8, x24, #0x1
  40adac:	mov	x19, x8
  40adb0:	cmp	x8, x21
  40adb4:	b.ls	40aeec <__fxstatat@plt+0x834c>  // b.plast
  40adb8:	mov	x8, x19
  40adbc:	ldrb	w9, [x8, #-1]!
  40adc0:	cmp	w9, #0x2f
  40adc4:	b.ne	40adac <__fxstatat@plt+0x820c>  // b.any
  40adc8:	b	40aeec <__fxstatat@plt+0x834c>
  40adcc:	and	w8, w8, #0xff
  40add0:	cmp	w8, #0x2e
  40add4:	b.ne	40ade0 <__fxstatat@plt+0x8240>  // b.any
  40add8:	mov	x19, x24
  40addc:	b	40aeec <__fxstatat@plt+0x834c>
  40ade0:	ldurb	w8, [x24, #-1]
  40ade4:	cmp	w8, #0x2f
  40ade8:	b.eq	40adf4 <__fxstatat@plt+0x8254>  // b.none
  40adec:	mov	w8, #0x2f                  	// #47
  40adf0:	strb	w8, [x24], #1
  40adf4:	add	x8, x24, x25
  40adf8:	cmp	x8, x20
  40adfc:	b.cc	40ae30 <__fxstatat@plt+0x8290>  // b.lo, b.ul, b.last
  40ae00:	cmp	x25, #0x1, lsl #12
  40ae04:	mov	w9, #0x1000                	// #4096
  40ae08:	sub	x8, x20, x21
  40ae0c:	csinc	x9, x9, x25, lt  // lt = tstop
  40ae10:	add	x22, x9, x8
  40ae14:	mov	x0, x21
  40ae18:	mov	x1, x22
  40ae1c:	sub	x19, x24, x21
  40ae20:	bl	411244 <__fxstatat@plt+0xe6a4>
  40ae24:	mov	x21, x0
  40ae28:	add	x20, x0, x22
  40ae2c:	add	x24, x0, x19
  40ae30:	mov	x0, x24
  40ae34:	mov	x1, x28
  40ae38:	mov	x2, x25
  40ae3c:	bl	4024d0 <memcpy@plt>
  40ae40:	ldr	w8, [sp, #36]
  40ae44:	add	x19, x24, x25
  40ae48:	strb	wzr, [x19]
  40ae4c:	cmp	w8, #0x6
  40ae50:	b.eq	40ae80 <__fxstatat@plt+0x82e0>  // b.none
  40ae54:	ldr	w8, [sp, #32]
  40ae58:	tbnz	w8, #2, 40ae98 <__fxstatat@plt+0x82f8>
  40ae5c:	add	x1, sp, #0x28
  40ae60:	mov	x0, x21
  40ae64:	bl	4141b0 <_obstack_memory_used@@Base+0x1ef8>
  40ae68:	cbz	w0, 40aea8 <__fxstatat@plt+0x8308>
  40ae6c:	bl	402b30 <__errno_location@plt>
  40ae70:	ldr	w22, [x0]
  40ae74:	cmp	w26, #0x1
  40ae78:	b.eq	40aec4 <__fxstatat@plt+0x8324>  // b.none
  40ae7c:	cbz	w26, 40b0f0 <__fxstatat@plt+0x8550>
  40ae80:	str	wzr, [sp, #56]
  40ae84:	cmp	w26, #0x2
  40ae88:	b.eq	40aee4 <__fxstatat@plt+0x8344>  // b.none
  40ae8c:	ldrb	w8, [x23]
  40ae90:	cbz	w8, 40aee4 <__fxstatat@plt+0x8344>
  40ae94:	b	40b0ec <__fxstatat@plt+0x854c>
  40ae98:	add	x1, sp, #0x28
  40ae9c:	mov	x0, x21
  40aea0:	bl	414190 <_obstack_memory_used@@Base+0x1ed8>
  40aea4:	cbnz	w0, 40ae6c <__fxstatat@plt+0x82cc>
  40aea8:	ldr	w8, [sp, #56]
  40aeac:	and	w8, w8, #0xf000
  40aeb0:	cmp	w8, #0xa, lsl #12
  40aeb4:	b.eq	40aefc <__fxstatat@plt+0x835c>  // b.none
  40aeb8:	cmp	w8, #0x4, lsl #12
  40aebc:	b.eq	40aee4 <__fxstatat@plt+0x8344>  // b.none
  40aec0:	b	40ae84 <__fxstatat@plt+0x82e4>
  40aec4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x2d48>
  40aec8:	mov	x0, x23
  40aecc:	add	x1, x1, #0xf6e
  40aed0:	bl	4029b0 <strspn@plt>
  40aed4:	cmp	w22, #0x2
  40aed8:	b.ne	40b0f0 <__fxstatat@plt+0x8550>  // b.any
  40aedc:	ldrb	w8, [x23, x0]
  40aee0:	cbnz	w8, 40b0f0 <__fxstatat@plt+0x8550>
  40aee4:	mov	x22, x23
  40aee8:	mov	x23, x22
  40aeec:	ldrb	w8, [x23]
  40aef0:	mov	x24, x19
  40aef4:	cbnz	w8, 40ad2c <__fxstatat@plt+0x818c>
  40aef8:	b	40b090 <__fxstatat@plt+0x84f0>
  40aefc:	ldr	x0, [sp, #24]
  40af00:	cbnz	x0, 40af2c <__fxstatat@plt+0x838c>
  40af04:	adrp	x2, 40c000 <__fxstatat@plt+0x9460>
  40af08:	adrp	x3, 40c000 <__fxstatat@plt+0x9460>
  40af0c:	adrp	x4, 40c000 <__fxstatat@plt+0x9460>
  40af10:	mov	w0, #0x7                   	// #7
  40af14:	mov	x1, xzr
  40af18:	add	x2, x2, #0x998
  40af1c:	add	x3, x3, #0xa14
  40af20:	add	x4, x4, #0xa60
  40af24:	bl	40bfe0 <__fxstatat@plt+0x9440>
  40af28:	cbz	x0, 40b12c <__fxstatat@plt+0x858c>
  40af2c:	add	x2, sp, #0x28
  40af30:	mov	x1, x27
  40af34:	mov	x22, x0
  40af38:	bl	40b4b0 <__fxstatat@plt+0x8910>
  40af3c:	str	x22, [sp, #24]
  40af40:	tbz	w0, #0, 40af50 <__fxstatat@plt+0x83b0>
  40af44:	cmp	w26, #0x2
  40af48:	b.eq	40aeec <__fxstatat@plt+0x834c>  // b.none
  40af4c:	b	40b11c <__fxstatat@plt+0x857c>
  40af50:	add	x2, sp, #0x28
  40af54:	mov	x0, x22
  40af58:	mov	x1, x27
  40af5c:	bl	40b42c <__fxstatat@plt+0x888c>
  40af60:	ldr	x1, [sp, #88]
  40af64:	mov	x0, x21
  40af68:	bl	40a5b0 <__fxstatat@plt+0x7a10>
  40af6c:	cbz	x0, 40afc0 <__fxstatat@plt+0x8420>
  40af70:	mov	x28, x0
  40af74:	bl	402540 <strlen@plt>
  40af78:	mov	x22, x0
  40af7c:	mov	x0, x23
  40af80:	bl	402540 <strlen@plt>
  40af84:	ldr	x8, [sp, #8]
  40af88:	add	x2, x0, #0x1
  40af8c:	add	x27, x2, x22
  40af90:	str	x22, [sp]
  40af94:	cbz	x8, 40afdc <__fxstatat@plt+0x843c>
  40af98:	cmp	x27, x8
  40af9c:	b.ls	40b000 <__fxstatat@plt+0x8460>  // b.plast
  40afa0:	ldr	x0, [sp, #16]
  40afa4:	mov	x1, x27
  40afa8:	mov	x22, x2
  40afac:	bl	411244 <__fxstatat@plt+0xe6a4>
  40afb0:	mov	x2, x22
  40afb4:	mov	x22, x0
  40afb8:	str	x27, [sp, #8]
  40afbc:	b	40b004 <__fxstatat@plt+0x8464>
  40afc0:	bl	402b30 <__errno_location@plt>
  40afc4:	cmp	w26, #0x2
  40afc8:	b.ne	40b124 <__fxstatat@plt+0x8584>  // b.any
  40afcc:	ldr	w8, [x0]
  40afd0:	cmp	w8, #0xc
  40afd4:	b.ne	40aeec <__fxstatat@plt+0x834c>  // b.any
  40afd8:	b	40b124 <__fxstatat@plt+0x8584>
  40afdc:	cmp	x27, #0x1, lsl #12
  40afe0:	mov	w8, #0x1000                	// #4096
  40afe4:	csel	x0, x27, x8, hi  // hi = pmore
  40afe8:	str	x0, [sp, #8]
  40afec:	mov	x22, x2
  40aff0:	bl	4111f4 <__fxstatat@plt+0xe654>
  40aff4:	mov	x2, x22
  40aff8:	mov	x22, x0
  40affc:	b	40b004 <__fxstatat@plt+0x8464>
  40b000:	ldr	x22, [sp, #16]
  40b004:	ldr	x27, [sp]
  40b008:	mov	x1, x23
  40b00c:	add	x0, x22, x27
  40b010:	bl	4024e0 <memmove@plt>
  40b014:	mov	x0, x22
  40b018:	mov	x1, x28
  40b01c:	mov	x2, x27
  40b020:	bl	4024d0 <memcpy@plt>
  40b024:	ldrb	w8, [x28]
  40b028:	cmp	w8, #0x2f
  40b02c:	add	x8, x21, #0x1
  40b030:	b.ne	40b044 <__fxstatat@plt+0x84a4>  // b.any
  40b034:	mov	w9, #0x2f                  	// #47
  40b038:	strb	w9, [x21]
  40b03c:	mov	x19, x8
  40b040:	b	40b070 <__fxstatat@plt+0x84d0>
  40b044:	cmp	x19, x8
  40b048:	b.ls	40b070 <__fxstatat@plt+0x84d0>  // b.plast
  40b04c:	add	x8, x24, x25
  40b050:	sub	x8, x8, #0x1
  40b054:	mov	x19, x8
  40b058:	cmp	x8, x21
  40b05c:	b.ls	40b070 <__fxstatat@plt+0x84d0>  // b.plast
  40b060:	mov	x8, x19
  40b064:	ldrb	w9, [x8, #-1]!
  40b068:	cmp	w9, #0x2f
  40b06c:	b.ne	40b054 <__fxstatat@plt+0x84b4>  // b.any
  40b070:	mov	x0, x28
  40b074:	bl	402990 <free@plt>
  40b078:	mov	x27, x22
  40b07c:	str	x22, [sp, #16]
  40b080:	b	40aee8 <__fxstatat@plt+0x8348>
  40b084:	stp	xzr, xzr, [sp, #16]
  40b088:	b	40b090 <__fxstatat@plt+0x84f0>
  40b08c:	mov	x19, x24
  40b090:	add	x8, x21, #0x1
  40b094:	cmp	x19, x8
  40b098:	b.ls	40b0ac <__fxstatat@plt+0x850c>  // b.plast
  40b09c:	mov	x8, x19
  40b0a0:	ldrb	w9, [x8, #-1]!
  40b0a4:	cmp	w9, #0x2f
  40b0a8:	csel	x19, x8, x19, eq  // eq = none
  40b0ac:	ldr	x22, [sp, #16]
  40b0b0:	mov	x8, x19
  40b0b4:	strb	wzr, [x8], #1
  40b0b8:	cmp	x20, x8
  40b0bc:	b.eq	40b0d4 <__fxstatat@plt+0x8534>  // b.none
  40b0c0:	sub	x8, x19, x21
  40b0c4:	add	x1, x8, #0x1
  40b0c8:	mov	x0, x21
  40b0cc:	bl	411244 <__fxstatat@plt+0xe6a4>
  40b0d0:	mov	x21, x0
  40b0d4:	mov	x0, x22
  40b0d8:	bl	402990 <free@plt>
  40b0dc:	ldr	x0, [sp, #24]
  40b0e0:	cbz	x0, 40ac84 <__fxstatat@plt+0x80e4>
  40b0e4:	bl	40c2a8 <__fxstatat@plt+0x9708>
  40b0e8:	b	40ac84 <__fxstatat@plt+0x80e4>
  40b0ec:	mov	w22, #0x14                  	// #20
  40b0f0:	ldr	x0, [sp, #16]
  40b0f4:	bl	402990 <free@plt>
  40b0f8:	mov	x0, x21
  40b0fc:	bl	402990 <free@plt>
  40b100:	ldr	x0, [sp, #24]
  40b104:	cbz	x0, 40b10c <__fxstatat@plt+0x856c>
  40b108:	bl	40c2a8 <__fxstatat@plt+0x9708>
  40b10c:	bl	402b30 <__errno_location@plt>
  40b110:	mov	x21, xzr
  40b114:	str	w22, [x0]
  40b118:	b	40ac84 <__fxstatat@plt+0x80e4>
  40b11c:	mov	w22, #0x28                  	// #40
  40b120:	b	40b0f0 <__fxstatat@plt+0x8550>
  40b124:	ldr	w22, [x0]
  40b128:	b	40b0f0 <__fxstatat@plt+0x8550>
  40b12c:	bl	411430 <__fxstatat@plt+0xe890>
  40b130:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40b134:	str	x0, [x8, #1856]
  40b138:	ret
  40b13c:	and	w8, w0, #0x1
  40b140:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40b144:	strb	w8, [x9, #1864]
  40b148:	ret
  40b14c:	stp	x29, x30, [sp, #-48]!
  40b150:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40b154:	ldr	x0, [x8, #1488]
  40b158:	str	x21, [sp, #16]
  40b15c:	stp	x20, x19, [sp, #32]
  40b160:	mov	x29, sp
  40b164:	bl	41288c <_obstack_memory_used@@Base+0x5d4>
  40b168:	cbz	w0, 40b188 <__fxstatat@plt+0x85e8>
  40b16c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40b170:	ldrb	w8, [x8, #1864]
  40b174:	cbz	w8, 40b1a8 <__fxstatat@plt+0x8608>
  40b178:	bl	402b30 <__errno_location@plt>
  40b17c:	ldr	w8, [x0]
  40b180:	cmp	w8, #0x20
  40b184:	b.ne	40b1a8 <__fxstatat@plt+0x8608>  // b.any
  40b188:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40b18c:	ldr	x0, [x8, #1464]
  40b190:	bl	41288c <_obstack_memory_used@@Base+0x5d4>
  40b194:	cbnz	w0, 40b214 <__fxstatat@plt+0x8674>
  40b198:	ldp	x20, x19, [sp, #32]
  40b19c:	ldr	x21, [sp, #16]
  40b1a0:	ldp	x29, x30, [sp], #48
  40b1a4:	ret
  40b1a8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b1ac:	add	x1, x1, #0x60a
  40b1b0:	mov	w2, #0x5                   	// #5
  40b1b4:	mov	x0, xzr
  40b1b8:	bl	402ac0 <dcgettext@plt>
  40b1bc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40b1c0:	ldr	x21, [x8, #1856]
  40b1c4:	mov	x19, x0
  40b1c8:	bl	402b30 <__errno_location@plt>
  40b1cc:	ldr	w20, [x0]
  40b1d0:	cbnz	x21, 40b1f0 <__fxstatat@plt+0x8650>
  40b1d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b1d8:	add	x2, x2, #0x607
  40b1dc:	mov	w0, wzr
  40b1e0:	mov	w1, w20
  40b1e4:	mov	x3, x19
  40b1e8:	bl	4025b0 <error@plt>
  40b1ec:	b	40b214 <__fxstatat@plt+0x8674>
  40b1f0:	mov	x0, x21
  40b1f4:	bl	4108c8 <__fxstatat@plt+0xdd28>
  40b1f8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x4d48>
  40b1fc:	mov	x3, x0
  40b200:	add	x2, x2, #0xd61
  40b204:	mov	w0, wzr
  40b208:	mov	w1, w20
  40b20c:	mov	x4, x19
  40b210:	bl	4025b0 <error@plt>
  40b214:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40b218:	ldr	w0, [x8, #1344]
  40b21c:	bl	402500 <_exit@plt>
  40b220:	stp	x29, x30, [sp, #-48]!
  40b224:	str	x21, [sp, #16]
  40b228:	stp	x20, x19, [sp, #32]
  40b22c:	mov	x20, x0
  40b230:	ldrb	w8, [x20], #-1
  40b234:	mov	x29, sp
  40b238:	mov	x19, x0
  40b23c:	cmp	w8, #0x2f
  40b240:	cset	w21, eq  // eq = none
  40b244:	bl	40b2e4 <__fxstatat@plt+0x8744>
  40b248:	sub	x8, x0, x19
  40b24c:	mov	x0, x8
  40b250:	cmp	x8, x21
  40b254:	b.ls	40b268 <__fxstatat@plt+0x86c8>  // b.plast
  40b258:	ldrb	w8, [x20, x0]
  40b25c:	cmp	w8, #0x2f
  40b260:	sub	x8, x0, #0x1
  40b264:	b.eq	40b24c <__fxstatat@plt+0x86ac>  // b.none
  40b268:	ldp	x20, x19, [sp, #32]
  40b26c:	ldr	x21, [sp, #16]
  40b270:	ldp	x29, x30, [sp], #48
  40b274:	ret
  40b278:	stp	x29, x30, [sp, #-48]!
  40b27c:	str	x21, [sp, #16]
  40b280:	stp	x20, x19, [sp, #32]
  40b284:	mov	x29, sp
  40b288:	mov	x21, x0
  40b28c:	bl	40b220 <__fxstatat@plt+0x8680>
  40b290:	cmp	x0, #0x0
  40b294:	cinc	x8, x0, eq  // eq = none
  40b298:	mov	x19, x0
  40b29c:	add	x0, x8, #0x1
  40b2a0:	bl	402730 <malloc@plt>
  40b2a4:	mov	x20, x0
  40b2a8:	cbz	x0, 40b2d0 <__fxstatat@plt+0x8730>
  40b2ac:	mov	x0, x20
  40b2b0:	mov	x1, x21
  40b2b4:	mov	x2, x19
  40b2b8:	bl	4024d0 <memcpy@plt>
  40b2bc:	cbnz	x19, 40b2cc <__fxstatat@plt+0x872c>
  40b2c0:	mov	w8, #0x2e                  	// #46
  40b2c4:	mov	w19, #0x1                   	// #1
  40b2c8:	strb	w8, [x20]
  40b2cc:	strb	wzr, [x20, x19]
  40b2d0:	mov	x0, x20
  40b2d4:	ldp	x20, x19, [sp, #32]
  40b2d8:	ldr	x21, [sp, #16]
  40b2dc:	ldp	x29, x30, [sp], #48
  40b2e0:	ret
  40b2e4:	sub	x0, x0, #0x1
  40b2e8:	ldrb	w10, [x0, #1]!
  40b2ec:	cmp	w10, #0x2f
  40b2f0:	b.eq	40b2e8 <__fxstatat@plt+0x8748>  // b.none
  40b2f4:	mov	w8, wzr
  40b2f8:	mov	x9, x0
  40b2fc:	and	w10, w10, #0xff
  40b300:	cmp	w10, #0x2f
  40b304:	b.eq	40b31c <__fxstatat@plt+0x877c>  // b.none
  40b308:	cbz	w10, 40b328 <__fxstatat@plt+0x8788>
  40b30c:	tst	w8, #0x1
  40b310:	mov	w8, wzr
  40b314:	csel	x0, x9, x0, ne  // ne = any
  40b318:	b	40b320 <__fxstatat@plt+0x8780>
  40b31c:	mov	w8, #0x1                   	// #1
  40b320:	ldrb	w10, [x9, #1]!
  40b324:	b	40b2fc <__fxstatat@plt+0x875c>
  40b328:	ret
  40b32c:	stp	x29, x30, [sp, #-32]!
  40b330:	str	x19, [sp, #16]
  40b334:	mov	x29, sp
  40b338:	mov	x19, x0
  40b33c:	bl	402540 <strlen@plt>
  40b340:	mov	x8, x0
  40b344:	sub	x9, x19, #0x1
  40b348:	mov	x0, x8
  40b34c:	cmp	x8, #0x2
  40b350:	b.cc	40b364 <__fxstatat@plt+0x87c4>  // b.lo, b.ul, b.last
  40b354:	ldrb	w8, [x9, x0]
  40b358:	cmp	w8, #0x2f
  40b35c:	sub	x8, x0, #0x1
  40b360:	b.eq	40b348 <__fxstatat@plt+0x87a8>  // b.none
  40b364:	ldr	x19, [sp, #16]
  40b368:	ldp	x29, x30, [sp], #32
  40b36c:	ret
  40b370:	stp	x29, x30, [sp, #-32]!
  40b374:	stp	x20, x19, [sp, #16]
  40b378:	ldr	w8, [x1, #16]
  40b37c:	mov	x29, sp
  40b380:	and	w8, w8, #0xf000
  40b384:	cmp	w8, #0xa, lsl #12
  40b388:	b.ne	40b394 <__fxstatat@plt+0x87f4>  // b.any
  40b38c:	mov	w0, wzr
  40b390:	b	40b420 <__fxstatat@plt+0x8880>
  40b394:	mov	x20, x1
  40b398:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b39c:	add	x1, x1, #0x616
  40b3a0:	mov	x2, xzr
  40b3a4:	mov	x3, xzr
  40b3a8:	mov	x19, x0
  40b3ac:	bl	4028f0 <getxattr@plt>
  40b3b0:	tbnz	x0, #63, 40b3c0 <__fxstatat@plt+0x8820>
  40b3b4:	cbz	x0, 40b3d0 <__fxstatat@plt+0x8830>
  40b3b8:	mov	w0, #0x1                   	// #1
  40b3bc:	b	40b420 <__fxstatat@plt+0x8880>
  40b3c0:	bl	402b30 <__errno_location@plt>
  40b3c4:	ldr	w8, [x0]
  40b3c8:	cmp	w8, #0x3d
  40b3cc:	b.ne	40b414 <__fxstatat@plt+0x8874>  // b.any
  40b3d0:	ldr	w8, [x20, #16]
  40b3d4:	and	w8, w8, #0xf000
  40b3d8:	cmp	w8, #0x4, lsl #12
  40b3dc:	b.ne	40b38c <__fxstatat@plt+0x87ec>  // b.any
  40b3e0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b3e4:	add	x1, x1, #0x62e
  40b3e8:	mov	x0, x19
  40b3ec:	mov	x2, xzr
  40b3f0:	mov	x3, xzr
  40b3f4:	bl	4028f0 <getxattr@plt>
  40b3f8:	tbnz	x0, #63, 40b404 <__fxstatat@plt+0x8864>
  40b3fc:	cbnz	x0, 40b3b8 <__fxstatat@plt+0x8818>
  40b400:	b	40b38c <__fxstatat@plt+0x87ec>
  40b404:	bl	402b30 <__errno_location@plt>
  40b408:	ldr	w8, [x0]
  40b40c:	cmp	w8, #0x3d
  40b410:	b.eq	40b38c <__fxstatat@plt+0x87ec>  // b.none
  40b414:	ldr	w0, [x0]
  40b418:	bl	41284c <_obstack_memory_used@@Base+0x594>
  40b41c:	sbfx	w0, w0, #0, #1
  40b420:	ldp	x20, x19, [sp, #16]
  40b424:	ldp	x29, x30, [sp], #32
  40b428:	ret
  40b42c:	stp	x29, x30, [sp, #-48]!
  40b430:	stp	x22, x21, [sp, #16]
  40b434:	stp	x20, x19, [sp, #32]
  40b438:	mov	x29, sp
  40b43c:	cbz	x0, 40b49c <__fxstatat@plt+0x88fc>
  40b440:	mov	x20, x0
  40b444:	mov	w0, #0x18                  	// #24
  40b448:	mov	x21, x2
  40b44c:	mov	x22, x1
  40b450:	bl	4111f4 <__fxstatat@plt+0xe654>
  40b454:	mov	x19, x0
  40b458:	mov	x0, x22
  40b45c:	bl	4113e8 <__fxstatat@plt+0xe848>
  40b460:	str	x0, [x19]
  40b464:	ldr	q0, [x21]
  40b468:	mov	x0, x20
  40b46c:	mov	x1, x19
  40b470:	ext	v0.16b, v0.16b, v0.16b, #8
  40b474:	stur	q0, [x19, #8]
  40b478:	bl	40c878 <__fxstatat@plt+0x9cd8>
  40b47c:	cbz	x0, 40b4ac <__fxstatat@plt+0x890c>
  40b480:	cmp	x0, x19
  40b484:	b.eq	40b49c <__fxstatat@plt+0x88fc>  // b.none
  40b488:	mov	x0, x19
  40b48c:	ldp	x20, x19, [sp, #32]
  40b490:	ldp	x22, x21, [sp, #16]
  40b494:	ldp	x29, x30, [sp], #48
  40b498:	b	40ca60 <__fxstatat@plt+0x9ec0>
  40b49c:	ldp	x20, x19, [sp, #32]
  40b4a0:	ldp	x22, x21, [sp, #16]
  40b4a4:	ldp	x29, x30, [sp], #48
  40b4a8:	ret
  40b4ac:	bl	411430 <__fxstatat@plt+0xe890>
  40b4b0:	cbz	x0, 40b4e8 <__fxstatat@plt+0x8948>
  40b4b4:	sub	sp, sp, #0x30
  40b4b8:	stp	x29, x30, [sp, #32]
  40b4bc:	str	x1, [sp, #8]
  40b4c0:	ldr	q0, [x2]
  40b4c4:	add	x1, sp, #0x8
  40b4c8:	add	x29, sp, #0x20
  40b4cc:	ext	v0.16b, v0.16b, v0.16b, #8
  40b4d0:	stur	q0, [sp, #16]
  40b4d4:	bl	40bd10 <__fxstatat@plt+0x9170>
  40b4d8:	ldp	x29, x30, [sp, #32]
  40b4dc:	cmp	x0, #0x0
  40b4e0:	cset	w0, ne  // ne = any
  40b4e4:	add	sp, sp, #0x30
  40b4e8:	ret
  40b4ec:	and	w8, w0, #0xf000
  40b4f0:	sub	w8, w8, #0x1, lsl #12
  40b4f4:	lsr	w8, w8, #12
  40b4f8:	cmp	w8, #0xb
  40b4fc:	b.hi	40b52c <__fxstatat@plt+0x898c>  // b.pmore
  40b500:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b504:	add	x9, x9, #0x647
  40b508:	adr	x10, 40b51c <__fxstatat@plt+0x897c>
  40b50c:	ldrb	w11, [x9, x8]
  40b510:	add	x10, x10, x11, lsl #2
  40b514:	mov	w8, #0x2d                  	// #45
  40b518:	br	x10
  40b51c:	mov	w8, #0x70                  	// #112
  40b520:	b	40b550 <__fxstatat@plt+0x89b0>
  40b524:	mov	w8, #0x63                  	// #99
  40b528:	b	40b550 <__fxstatat@plt+0x89b0>
  40b52c:	mov	w8, #0x3f                  	// #63
  40b530:	b	40b550 <__fxstatat@plt+0x89b0>
  40b534:	mov	w8, #0x64                  	// #100
  40b538:	b	40b550 <__fxstatat@plt+0x89b0>
  40b53c:	mov	w8, #0x6c                  	// #108
  40b540:	b	40b550 <__fxstatat@plt+0x89b0>
  40b544:	mov	w8, #0x73                  	// #115
  40b548:	b	40b550 <__fxstatat@plt+0x89b0>
  40b54c:	mov	w8, #0x62                  	// #98
  40b550:	strb	w8, [x1]
  40b554:	tst	w0, #0x100
  40b558:	mov	w8, #0x72                  	// #114
  40b55c:	mov	w9, #0x2d                  	// #45
  40b560:	mov	w10, #0x77                  	// #119
  40b564:	csel	w14, w9, w8, eq  // eq = none
  40b568:	tst	w0, #0x80
  40b56c:	mov	w11, #0x53                  	// #83
  40b570:	mov	w12, #0x73                  	// #115
  40b574:	mov	w13, #0x78                  	// #120
  40b578:	strb	w14, [x1, #1]
  40b57c:	csel	w14, w9, w10, eq  // eq = none
  40b580:	tst	w0, #0x40
  40b584:	strb	w14, [x1, #2]
  40b588:	csel	w14, w12, w11, ne  // ne = any
  40b58c:	csel	w15, w13, w9, ne  // ne = any
  40b590:	tst	w0, #0x800
  40b594:	csel	w14, w15, w14, eq  // eq = none
  40b598:	tst	w0, #0x20
  40b59c:	strb	w14, [x1, #3]
  40b5a0:	csel	w14, w9, w8, eq  // eq = none
  40b5a4:	tst	w0, #0x10
  40b5a8:	strb	w14, [x1, #4]
  40b5ac:	csel	w14, w9, w10, eq  // eq = none
  40b5b0:	tst	w0, #0x8
  40b5b4:	csel	w11, w12, w11, ne  // ne = any
  40b5b8:	csel	w12, w13, w9, ne  // ne = any
  40b5bc:	tst	w0, #0x400
  40b5c0:	csel	w11, w12, w11, eq  // eq = none
  40b5c4:	tst	w0, #0x4
  40b5c8:	csel	w8, w9, w8, eq  // eq = none
  40b5cc:	tst	w0, #0x2
  40b5d0:	mov	w15, #0x54                  	// #84
  40b5d4:	strb	w14, [x1, #5]
  40b5d8:	mov	w14, #0x74                  	// #116
  40b5dc:	strb	w8, [x1, #7]
  40b5e0:	csel	w8, w9, w10, eq  // eq = none
  40b5e4:	tst	w0, #0x1
  40b5e8:	strb	w8, [x1, #8]
  40b5ec:	csel	w8, w14, w15, ne  // ne = any
  40b5f0:	csel	w9, w13, w9, ne  // ne = any
  40b5f4:	tst	w0, #0x200
  40b5f8:	mov	w12, #0x20                  	// #32
  40b5fc:	csel	w8, w9, w8, eq  // eq = none
  40b600:	strb	w11, [x1, #6]
  40b604:	strb	w8, [x1, #9]
  40b608:	strh	w12, [x1, #10]
  40b60c:	ret
  40b610:	ldr	w0, [x0, #16]
  40b614:	b	40b4ec <__fxstatat@plt+0x894c>
  40b618:	stp	x29, x30, [sp, #-16]!
  40b61c:	mov	x29, sp
  40b620:	bl	40b634 <__fxstatat@plt+0x8a94>
  40b624:	cbz	x0, 40b630 <__fxstatat@plt+0x8a90>
  40b628:	ldp	x29, x30, [sp], #16
  40b62c:	ret
  40b630:	bl	411430 <__fxstatat@plt+0xe890>
  40b634:	stp	x29, x30, [sp, #-80]!
  40b638:	stp	x26, x25, [sp, #16]
  40b63c:	stp	x24, x23, [sp, #32]
  40b640:	stp	x22, x21, [sp, #48]
  40b644:	stp	x20, x19, [sp, #64]
  40b648:	mov	x29, sp
  40b64c:	mov	x20, x2
  40b650:	mov	x19, x1
  40b654:	mov	x21, x0
  40b658:	bl	40b2e4 <__fxstatat@plt+0x8744>
  40b65c:	mov	x22, x0
  40b660:	bl	40b32c <__fxstatat@plt+0x878c>
  40b664:	sub	x8, x22, x21
  40b668:	mov	x24, x0
  40b66c:	add	x23, x8, x0
  40b670:	mov	x0, x19
  40b674:	bl	402540 <strlen@plt>
  40b678:	mov	x22, x0
  40b67c:	cbz	x24, 40b698 <__fxstatat@plt+0x8af8>
  40b680:	add	x8, x23, x21
  40b684:	ldurb	w8, [x8, #-1]
  40b688:	cmp	w8, #0x2f
  40b68c:	b.ne	40b6ac <__fxstatat@plt+0x8b0c>  // b.any
  40b690:	mov	w25, wzr
  40b694:	b	40b6bc <__fxstatat@plt+0x8b1c>
  40b698:	ldrb	w8, [x19]
  40b69c:	cmp	w8, #0x2f
  40b6a0:	mov	w8, #0x2e                  	// #46
  40b6a4:	csel	w25, w8, wzr, eq  // eq = none
  40b6a8:	b	40b6bc <__fxstatat@plt+0x8b1c>
  40b6ac:	ldrb	w8, [x19]
  40b6b0:	cmp	w8, #0x2f
  40b6b4:	mov	w8, #0x2f                  	// #47
  40b6b8:	csel	w25, wzr, w8, eq  // eq = none
  40b6bc:	cmp	w25, #0x0
  40b6c0:	add	x8, x22, x23
  40b6c4:	cinc	x8, x8, ne  // ne = any
  40b6c8:	add	x0, x8, #0x1
  40b6cc:	cset	w26, ne  // ne = any
  40b6d0:	bl	402730 <malloc@plt>
  40b6d4:	mov	x24, x0
  40b6d8:	cbz	x0, 40b714 <__fxstatat@plt+0x8b74>
  40b6dc:	mov	x3, #0xffffffffffffffff    	// #-1
  40b6e0:	mov	x0, x24
  40b6e4:	mov	x1, x21
  40b6e8:	mov	x2, x23
  40b6ec:	bl	402a90 <__mempcpy_chk@plt>
  40b6f0:	strb	w25, [x0]
  40b6f4:	add	x0, x0, x26
  40b6f8:	cbz	x20, 40b700 <__fxstatat@plt+0x8b60>
  40b6fc:	str	x0, [x20]
  40b700:	mov	x3, #0xffffffffffffffff    	// #-1
  40b704:	mov	x1, x19
  40b708:	mov	x2, x22
  40b70c:	bl	402a90 <__mempcpy_chk@plt>
  40b710:	strb	wzr, [x0]
  40b714:	mov	x0, x24
  40b718:	ldp	x20, x19, [sp, #64]
  40b71c:	ldp	x22, x21, [sp, #48]
  40b720:	ldp	x24, x23, [sp, #32]
  40b724:	ldp	x26, x25, [sp, #16]
  40b728:	ldp	x29, x30, [sp], #80
  40b72c:	ret
  40b730:	sub	sp, sp, #0x50
  40b734:	stp	x29, x30, [sp, #16]
  40b738:	stp	x24, x23, [sp, #32]
  40b73c:	stp	x22, x21, [sp, #48]
  40b740:	stp	x20, x19, [sp, #64]
  40b744:	add	x29, sp, #0x10
  40b748:	mov	x19, x1
  40b74c:	mov	x21, x0
  40b750:	bl	402950 <strcmp@plt>
  40b754:	cbz	w0, 40b7fc <__fxstatat@plt+0x8c5c>
  40b758:	ldrb	w23, [x21]
  40b75c:	cbz	w23, 40b7cc <__fxstatat@plt+0x8c2c>
  40b760:	ldrb	w22, [x19]
  40b764:	cbz	w22, 40b7f8 <__fxstatat@plt+0x8c58>
  40b768:	mov	w20, w0
  40b76c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b770:	add	x0, x0, #0x654
  40b774:	mov	x1, x21
  40b778:	bl	402950 <strcmp@plt>
  40b77c:	cbz	w0, 40b7cc <__fxstatat@plt+0x8c2c>
  40b780:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b784:	add	x0, x0, #0x654
  40b788:	mov	x1, x19
  40b78c:	bl	402950 <strcmp@plt>
  40b790:	cbz	w0, 40b7f8 <__fxstatat@plt+0x8c58>
  40b794:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b798:	add	x0, x0, #0x653
  40b79c:	mov	x1, x21
  40b7a0:	bl	402950 <strcmp@plt>
  40b7a4:	cbz	w0, 40b7cc <__fxstatat@plt+0x8c2c>
  40b7a8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40b7ac:	add	x0, x0, #0x653
  40b7b0:	mov	x1, x19
  40b7b4:	bl	402950 <strcmp@plt>
  40b7b8:	cbz	w0, 40b7f8 <__fxstatat@plt+0x8c58>
  40b7bc:	cmp	w23, #0x2e
  40b7c0:	b.ne	40b7d4 <__fxstatat@plt+0x8c34>  // b.any
  40b7c4:	cmp	w22, #0x2e
  40b7c8:	b.eq	40b7d4 <__fxstatat@plt+0x8c34>  // b.none
  40b7cc:	mov	w0, #0xffffffff            	// #-1
  40b7d0:	b	40b7fc <__fxstatat@plt+0x8c5c>
  40b7d4:	cmp	w23, #0x2e
  40b7d8:	b.ne	40b7f0 <__fxstatat@plt+0x8c50>  // b.any
  40b7dc:	cmp	w22, #0x2e
  40b7e0:	b.ne	40b814 <__fxstatat@plt+0x8c74>  // b.any
  40b7e4:	add	x21, x21, #0x1
  40b7e8:	add	x19, x19, #0x1
  40b7ec:	b	40b814 <__fxstatat@plt+0x8c74>
  40b7f0:	cmp	w22, #0x2e
  40b7f4:	b.ne	40b814 <__fxstatat@plt+0x8c74>  // b.any
  40b7f8:	mov	w0, #0x1                   	// #1
  40b7fc:	ldp	x20, x19, [sp, #64]
  40b800:	ldp	x22, x21, [sp, #48]
  40b804:	ldp	x24, x23, [sp, #32]
  40b808:	ldp	x29, x30, [sp, #16]
  40b80c:	add	sp, sp, #0x50
  40b810:	ret
  40b814:	add	x0, sp, #0x8
  40b818:	stp	x19, x21, [sp]
  40b81c:	bl	40ba14 <__fxstatat@plt+0x8e74>
  40b820:	mov	x22, x0
  40b824:	mov	x0, sp
  40b828:	bl	40ba14 <__fxstatat@plt+0x8e74>
  40b82c:	ldp	x24, x23, [sp]
  40b830:	cmp	x22, #0x0
  40b834:	orr	x9, x22, x0
  40b838:	csel	x8, x22, x23, ne  // ne = any
  40b83c:	cmp	x0, #0x0
  40b840:	sub	x22, x8, x21
  40b844:	csel	x8, x0, x24, ne  // ne = any
  40b848:	sub	x8, x8, x19
  40b84c:	cbz	x9, 40b878 <__fxstatat@plt+0x8cd8>
  40b850:	cmp	x22, x8
  40b854:	b.ne	40b878 <__fxstatat@plt+0x8cd8>  // b.any
  40b858:	mov	x0, x21
  40b85c:	mov	x1, x19
  40b860:	mov	x2, x22
  40b864:	bl	402780 <strncmp@plt>
  40b868:	mov	x8, x22
  40b86c:	cbnz	w0, 40b878 <__fxstatat@plt+0x8cd8>
  40b870:	sub	x22, x23, x21
  40b874:	sub	x8, x24, x19
  40b878:	mov	x9, xzr
  40b87c:	mov	x11, xzr
  40b880:	mov	w10, #0x1                   	// #1
  40b884:	cmp	x9, x8
  40b888:	b.cc	40b894 <__fxstatat@plt+0x8cf4>  // b.lo, b.ul, b.last
  40b88c:	cmp	x11, x22
  40b890:	b.cs	40ba0c <__fxstatat@plt+0x8e6c>  // b.hs, b.nlast
  40b894:	cmp	x11, x22
  40b898:	b.cs	40b8ac <__fxstatat@plt+0x8d0c>  // b.hs, b.nlast
  40b89c:	ldrb	w12, [x21, x11]
  40b8a0:	sub	w12, w12, #0x30
  40b8a4:	cmp	w12, #0x9
  40b8a8:	b.hi	40b8c4 <__fxstatat@plt+0x8d24>  // b.pmore
  40b8ac:	cmp	x9, x8
  40b8b0:	b.cs	40b968 <__fxstatat@plt+0x8dc8>  // b.hs, b.nlast
  40b8b4:	ldrb	w12, [x19, x9]
  40b8b8:	sub	w12, w12, #0x30
  40b8bc:	cmp	w12, #0xa
  40b8c0:	b.cc	40b968 <__fxstatat@plt+0x8dc8>  // b.lo, b.ul, b.last
  40b8c4:	cmp	x22, x11
  40b8c8:	b.eq	40b8dc <__fxstatat@plt+0x8d3c>  // b.none
  40b8cc:	ldrb	w12, [x21, x11]
  40b8d0:	sub	w13, w12, #0x30
  40b8d4:	cmp	w13, #0xa
  40b8d8:	b.cs	40b8e4 <__fxstatat@plt+0x8d44>  // b.hs, b.nlast
  40b8dc:	mov	w12, wzr
  40b8e0:	b	40b8fc <__fxstatat@plt+0x8d5c>
  40b8e4:	sub	w13, w12, #0x41
  40b8e8:	cmp	w13, #0x39
  40b8ec:	b.hi	40b948 <__fxstatat@plt+0x8da8>  // b.pmore
  40b8f0:	lsl	x13, x10, x13
  40b8f4:	tst	x13, #0x3ffffff03ffffff
  40b8f8:	b.eq	40b948 <__fxstatat@plt+0x8da8>  // b.none
  40b8fc:	cmp	x8, x9
  40b900:	b.eq	40b914 <__fxstatat@plt+0x8d74>  // b.none
  40b904:	ldrb	w13, [x19, x9]
  40b908:	sub	w14, w13, #0x30
  40b90c:	cmp	w14, #0xa
  40b910:	b.cs	40b91c <__fxstatat@plt+0x8d7c>  // b.hs, b.nlast
  40b914:	mov	w13, wzr
  40b918:	b	40b934 <__fxstatat@plt+0x8d94>
  40b91c:	sub	w14, w13, #0x41
  40b920:	cmp	w14, #0x39
  40b924:	b.hi	40b958 <__fxstatat@plt+0x8db8>  // b.pmore
  40b928:	lsl	x14, x10, x14
  40b92c:	tst	x14, #0x3ffffff03ffffff
  40b930:	b.eq	40b958 <__fxstatat@plt+0x8db8>  // b.none
  40b934:	subs	w0, w12, w13
  40b938:	b.ne	40ba08 <__fxstatat@plt+0x8e68>  // b.any
  40b93c:	add	x11, x11, #0x1
  40b940:	add	x9, x9, #0x1
  40b944:	b	40b894 <__fxstatat@plt+0x8cf4>
  40b948:	orr	w13, w12, #0x100
  40b94c:	cmp	w12, #0x7e
  40b950:	csinv	w12, w13, wzr, ne  // ne = any
  40b954:	b	40b8fc <__fxstatat@plt+0x8d5c>
  40b958:	orr	w14, w13, #0x100
  40b95c:	cmp	w13, #0x7e
  40b960:	csinv	w13, w14, wzr, ne  // ne = any
  40b964:	b	40b934 <__fxstatat@plt+0x8d94>
  40b968:	mov	x12, x11
  40b96c:	ldrb	w13, [x21, x12]
  40b970:	add	x12, x12, #0x1
  40b974:	subs	w16, w13, #0x30
  40b978:	b.eq	40b96c <__fxstatat@plt+0x8dcc>  // b.none
  40b97c:	sub	x11, x12, #0x1
  40b980:	ldrb	w15, [x19, x9]
  40b984:	add	x9, x9, #0x1
  40b988:	subs	w14, w15, #0x30
  40b98c:	b.eq	40b980 <__fxstatat@plt+0x8de0>  // b.none
  40b990:	cmp	w14, #0xa
  40b994:	cset	w14, cc  // cc = lo, ul, last
  40b998:	cmp	w16, #0x9
  40b99c:	b.hi	40b9f4 <__fxstatat@plt+0x8e54>  // b.pmore
  40b9a0:	mov	x11, xzr
  40b9a4:	mov	w0, wzr
  40b9a8:	add	x16, x21, x12
  40b9ac:	add	x17, x19, x9
  40b9b0:	tbz	w14, #0, 40b7f8 <__fxstatat@plt+0x8c58>
  40b9b4:	sub	w14, w13, w15
  40b9b8:	ldrb	w15, [x17, x11]
  40b9bc:	ldrb	w13, [x16, x11]
  40b9c0:	cmp	w0, #0x0
  40b9c4:	csel	w0, w14, w0, eq  // eq = none
  40b9c8:	sub	w14, w15, #0x30
  40b9cc:	sub	w18, w13, #0x30
  40b9d0:	cmp	w14, #0xa
  40b9d4:	cset	w14, cc  // cc = lo, ul, last
  40b9d8:	cmp	w18, #0xa
  40b9dc:	add	x11, x11, #0x1
  40b9e0:	b.cc	40b9b0 <__fxstatat@plt+0x8e10>  // b.lo, b.ul, b.last
  40b9e4:	add	x12, x12, x11
  40b9e8:	add	x9, x9, x11
  40b9ec:	sub	x11, x12, #0x1
  40b9f0:	b	40b9f8 <__fxstatat@plt+0x8e58>
  40b9f4:	mov	w0, wzr
  40b9f8:	sub	x9, x9, #0x1
  40b9fc:	tbnz	w14, #0, 40b7cc <__fxstatat@plt+0x8c2c>
  40ba00:	cbz	w0, 40b884 <__fxstatat@plt+0x8ce4>
  40ba04:	b	40b7fc <__fxstatat@plt+0x8c5c>
  40ba08:	b.ne	40b7fc <__fxstatat@plt+0x8c5c>  // b.any
  40ba0c:	mov	w0, w20
  40ba10:	b	40b7fc <__fxstatat@plt+0x8c5c>
  40ba14:	stp	x29, x30, [sp, #-48]!
  40ba18:	stp	x20, x19, [sp, #32]
  40ba1c:	ldr	x8, [x0]
  40ba20:	str	x21, [sp, #16]
  40ba24:	mov	x29, sp
  40ba28:	ldrb	w10, [x8]
  40ba2c:	cbz	w10, 40babc <__fxstatat@plt+0x8f1c>
  40ba30:	mov	x19, x0
  40ba34:	mov	w9, wzr
  40ba38:	mov	x20, xzr
  40ba3c:	mov	w21, #0x1                   	// #1
  40ba40:	tbz	w9, #0, 40ba64 <__fxstatat@plt+0x8ec4>
  40ba44:	and	w10, w10, #0xff
  40ba48:	sub	w9, w10, #0x41
  40ba4c:	cmp	w9, #0x39
  40ba50:	b.hi	40baac <__fxstatat@plt+0x8f0c>  // b.pmore
  40ba54:	lsl	x9, x21, x9
  40ba58:	tst	x9, #0x3ffffff03ffffff
  40ba5c:	b.ne	40ba8c <__fxstatat@plt+0x8eec>  // b.any
  40ba60:	b	40baac <__fxstatat@plt+0x8f0c>
  40ba64:	and	w0, w10, #0xff
  40ba68:	cmp	w0, #0x2e
  40ba6c:	b.ne	40ba80 <__fxstatat@plt+0x8ee0>  // b.any
  40ba70:	cmp	x20, #0x0
  40ba74:	csel	x20, x8, x20, eq  // eq = none
  40ba78:	mov	w9, #0x1                   	// #1
  40ba7c:	b	40ba90 <__fxstatat@plt+0x8ef0>
  40ba80:	bl	40aa00 <__fxstatat@plt+0x7e60>
  40ba84:	ldr	x8, [x19]
  40ba88:	tbz	w0, #0, 40baa8 <__fxstatat@plt+0x8f08>
  40ba8c:	mov	w9, wzr
  40ba90:	add	x11, x8, #0x1
  40ba94:	str	x11, [x19]
  40ba98:	ldrb	w10, [x8, #1]
  40ba9c:	mov	x8, x11
  40baa0:	cbnz	w10, 40ba40 <__fxstatat@plt+0x8ea0>
  40baa4:	b	40bac0 <__fxstatat@plt+0x8f20>
  40baa8:	ldrb	w10, [x8]
  40baac:	mov	w9, wzr
  40bab0:	cmp	w10, #0x7e
  40bab4:	csel	x20, x20, xzr, eq  // eq = none
  40bab8:	b	40ba90 <__fxstatat@plt+0x8ef0>
  40babc:	mov	x20, xzr
  40bac0:	mov	x0, x20
  40bac4:	ldp	x20, x19, [sp, #32]
  40bac8:	ldr	x21, [sp, #16]
  40bacc:	ldp	x29, x30, [sp], #48
  40bad0:	ret
  40bad4:	mov	x1, x0
  40bad8:	mov	w0, wzr
  40badc:	b	402660 <clock_gettime@plt>
  40bae0:	sub	sp, sp, #0x20
  40bae4:	mov	x1, sp
  40bae8:	mov	w0, wzr
  40baec:	stp	x29, x30, [sp, #16]
  40baf0:	add	x29, sp, #0x10
  40baf4:	bl	402660 <clock_gettime@plt>
  40baf8:	ldp	x0, x1, [sp]
  40bafc:	ldp	x29, x30, [sp, #16]
  40bb00:	add	sp, sp, #0x20
  40bb04:	ret
  40bb08:	stp	x29, x30, [sp, #-32]!
  40bb0c:	mov	x1, xzr
  40bb10:	str	x19, [sp, #16]
  40bb14:	mov	x29, sp
  40bb18:	bl	402b90 <setlocale@plt>
  40bb1c:	cbz	x0, 40bb48 <__fxstatat@plt+0x8fa8>
  40bb20:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bb24:	add	x1, x1, #0x656
  40bb28:	mov	x19, x0
  40bb2c:	bl	402950 <strcmp@plt>
  40bb30:	cbz	w0, 40bb50 <__fxstatat@plt+0x8fb0>
  40bb34:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bb38:	add	x1, x1, #0x658
  40bb3c:	mov	x0, x19
  40bb40:	bl	402950 <strcmp@plt>
  40bb44:	cbz	w0, 40bb50 <__fxstatat@plt+0x8fb0>
  40bb48:	mov	w0, #0x1                   	// #1
  40bb4c:	b	40bb54 <__fxstatat@plt+0x8fb4>
  40bb50:	mov	w0, wzr
  40bb54:	ldr	x19, [sp, #16]
  40bb58:	ldp	x29, x30, [sp], #32
  40bb5c:	ret
  40bb60:	ldr	x0, [x0, #16]
  40bb64:	ret
  40bb68:	ldr	x0, [x0, #24]
  40bb6c:	ret
  40bb70:	ldr	x0, [x0, #32]
  40bb74:	ret
  40bb78:	ldp	x8, x9, [x0]
  40bb7c:	cmp	x8, x9
  40bb80:	b.cs	40bbbc <__fxstatat@plt+0x901c>  // b.hs, b.nlast
  40bb84:	mov	x0, xzr
  40bb88:	ldr	x10, [x8]
  40bb8c:	cbz	x10, 40bbac <__fxstatat@plt+0x900c>
  40bb90:	mov	x10, xzr
  40bb94:	mov	x11, x8
  40bb98:	ldr	x11, [x11, #8]
  40bb9c:	add	x10, x10, #0x1
  40bba0:	cbnz	x11, 40bb98 <__fxstatat@plt+0x8ff8>
  40bba4:	cmp	x10, x0
  40bba8:	csel	x0, x10, x0, hi  // hi = pmore
  40bbac:	add	x8, x8, #0x10
  40bbb0:	cmp	x8, x9
  40bbb4:	b.cc	40bb88 <__fxstatat@plt+0x8fe8>  // b.lo, b.ul, b.last
  40bbb8:	ret
  40bbbc:	mov	x0, xzr
  40bbc0:	ret
  40bbc4:	ldp	x9, x10, [x0]
  40bbc8:	cmp	x9, x10
  40bbcc:	b.cs	40bc04 <__fxstatat@plt+0x9064>  // b.hs, b.nlast
  40bbd0:	mov	x8, xzr
  40bbd4:	mov	x11, xzr
  40bbd8:	ldr	x12, [x9]
  40bbdc:	cbz	x12, 40bbf4 <__fxstatat@plt+0x9054>
  40bbe0:	mov	x12, x9
  40bbe4:	ldr	x12, [x12, #8]
  40bbe8:	add	x8, x8, #0x1
  40bbec:	cbnz	x12, 40bbe4 <__fxstatat@plt+0x9044>
  40bbf0:	add	x11, x11, #0x1
  40bbf4:	add	x9, x9, #0x10
  40bbf8:	cmp	x9, x10
  40bbfc:	b.cc	40bbd8 <__fxstatat@plt+0x9038>  // b.lo, b.ul, b.last
  40bc00:	b	40bc0c <__fxstatat@plt+0x906c>
  40bc04:	mov	x11, xzr
  40bc08:	mov	x8, xzr
  40bc0c:	ldr	x9, [x0, #24]
  40bc10:	cmp	x11, x9
  40bc14:	b.ne	40bc2c <__fxstatat@plt+0x908c>  // b.any
  40bc18:	ldr	x9, [x0, #32]
  40bc1c:	cmp	x8, x9
  40bc20:	b.ne	40bc2c <__fxstatat@plt+0x908c>  // b.any
  40bc24:	mov	w0, #0x1                   	// #1
  40bc28:	ret
  40bc2c:	mov	w0, wzr
  40bc30:	ret
  40bc34:	stp	x29, x30, [sp, #-48]!
  40bc38:	stp	x22, x21, [sp, #16]
  40bc3c:	stp	x20, x19, [sp, #32]
  40bc40:	ldp	x8, x9, [x0]
  40bc44:	ldp	x20, x3, [x0, #24]
  40bc48:	ldr	x22, [x0, #16]
  40bc4c:	mov	x19, x1
  40bc50:	cmp	x8, x9
  40bc54:	mov	x21, xzr
  40bc58:	mov	x29, sp
  40bc5c:	b.cs	40bc90 <__fxstatat@plt+0x90f0>  // b.hs, b.nlast
  40bc60:	ldr	x10, [x8]
  40bc64:	cbz	x10, 40bc84 <__fxstatat@plt+0x90e4>
  40bc68:	mov	x10, xzr
  40bc6c:	mov	x11, x8
  40bc70:	ldr	x11, [x11, #8]
  40bc74:	add	x10, x10, #0x1
  40bc78:	cbnz	x11, 40bc70 <__fxstatat@plt+0x90d0>
  40bc7c:	cmp	x10, x21
  40bc80:	csel	x21, x10, x21, hi  // hi = pmore
  40bc84:	add	x8, x8, #0x10
  40bc88:	cmp	x8, x9
  40bc8c:	b.cc	40bc60 <__fxstatat@plt+0x90c0>  // b.lo, b.ul, b.last
  40bc90:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bc94:	add	x2, x2, #0x66c
  40bc98:	mov	w1, #0x1                   	// #1
  40bc9c:	mov	x0, x19
  40bca0:	bl	402930 <__fprintf_chk@plt>
  40bca4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bca8:	add	x2, x2, #0x684
  40bcac:	mov	w1, #0x1                   	// #1
  40bcb0:	mov	x0, x19
  40bcb4:	mov	x3, x22
  40bcb8:	bl	402930 <__fprintf_chk@plt>
  40bcbc:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40bcc0:	ucvtf	d0, x20
  40bcc4:	fmov	d1, x8
  40bcc8:	fmul	d0, d0, d1
  40bccc:	ucvtf	d1, x22
  40bcd0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bcd4:	fdiv	d0, d0, d1
  40bcd8:	add	x2, x2, #0x69c
  40bcdc:	mov	w1, #0x1                   	// #1
  40bce0:	mov	x0, x19
  40bce4:	mov	x3, x20
  40bce8:	bl	402930 <__fprintf_chk@plt>
  40bcec:	mov	x0, x19
  40bcf0:	mov	x3, x21
  40bcf4:	ldp	x20, x19, [sp, #32]
  40bcf8:	ldp	x22, x21, [sp, #16]
  40bcfc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bd00:	add	x2, x2, #0x6bd
  40bd04:	mov	w1, #0x1                   	// #1
  40bd08:	ldp	x29, x30, [sp], #48
  40bd0c:	b	402930 <__fprintf_chk@plt>
  40bd10:	stp	x29, x30, [sp, #-48]!
  40bd14:	stp	x20, x19, [sp, #32]
  40bd18:	ldr	x8, [x0, #16]
  40bd1c:	ldr	x9, [x0, #48]
  40bd20:	mov	x19, x0
  40bd24:	mov	x20, x1
  40bd28:	mov	x0, x1
  40bd2c:	mov	x1, x8
  40bd30:	str	x21, [sp, #16]
  40bd34:	mov	x29, sp
  40bd38:	blr	x9
  40bd3c:	ldr	x8, [x19, #16]
  40bd40:	cmp	x0, x8
  40bd44:	b.cs	40bdac <__fxstatat@plt+0x920c>  // b.hs, b.nlast
  40bd48:	ldr	x8, [x19]
  40bd4c:	add	x21, x8, x0, lsl #4
  40bd50:	ldr	x1, [x21]
  40bd54:	mov	x0, xzr
  40bd58:	cbz	x1, 40bd9c <__fxstatat@plt+0x91fc>
  40bd5c:	cbz	x8, 40bd9c <__fxstatat@plt+0x91fc>
  40bd60:	cmp	x1, x20
  40bd64:	b.eq	40bd88 <__fxstatat@plt+0x91e8>  // b.none
  40bd68:	ldr	x8, [x19, #56]
  40bd6c:	mov	x0, x20
  40bd70:	blr	x8
  40bd74:	tbnz	w0, #0, 40bd90 <__fxstatat@plt+0x91f0>
  40bd78:	ldr	x21, [x21, #8]
  40bd7c:	cbz	x21, 40bd98 <__fxstatat@plt+0x91f8>
  40bd80:	ldr	x1, [x21]
  40bd84:	b	40bd60 <__fxstatat@plt+0x91c0>
  40bd88:	mov	x0, x20
  40bd8c:	b	40bd9c <__fxstatat@plt+0x91fc>
  40bd90:	ldr	x0, [x21]
  40bd94:	b	40bd9c <__fxstatat@plt+0x91fc>
  40bd98:	mov	x0, xzr
  40bd9c:	ldp	x20, x19, [sp, #32]
  40bda0:	ldr	x21, [sp, #16]
  40bda4:	ldp	x29, x30, [sp], #48
  40bda8:	ret
  40bdac:	bl	4028c0 <abort@plt>
  40bdb0:	stp	x29, x30, [sp, #-16]!
  40bdb4:	ldr	x8, [x0, #32]
  40bdb8:	mov	x29, sp
  40bdbc:	cbz	x8, 40bdd8 <__fxstatat@plt+0x9238>
  40bdc0:	ldp	x8, x9, [x0]
  40bdc4:	cmp	x8, x9
  40bdc8:	b.cs	40bde4 <__fxstatat@plt+0x9244>  // b.hs, b.nlast
  40bdcc:	ldr	x0, [x8], #16
  40bdd0:	cbz	x0, 40bdc4 <__fxstatat@plt+0x9224>
  40bdd4:	b	40bddc <__fxstatat@plt+0x923c>
  40bdd8:	mov	x0, xzr
  40bddc:	ldp	x29, x30, [sp], #16
  40bde0:	ret
  40bde4:	bl	4028c0 <abort@plt>
  40bde8:	stp	x29, x30, [sp, #-32]!
  40bdec:	stp	x20, x19, [sp, #16]
  40bdf0:	ldr	x8, [x0, #16]
  40bdf4:	ldr	x9, [x0, #48]
  40bdf8:	mov	x19, x0
  40bdfc:	mov	x20, x1
  40be00:	mov	x0, x1
  40be04:	mov	x1, x8
  40be08:	mov	x29, sp
  40be0c:	blr	x9
  40be10:	ldr	x8, [x19, #16]
  40be14:	cmp	x0, x8
  40be18:	b.cs	40be74 <__fxstatat@plt+0x92d4>  // b.hs, b.nlast
  40be1c:	ldr	x8, [x19]
  40be20:	add	x9, x8, x0, lsl #4
  40be24:	ldp	x10, x9, [x9]
  40be28:	cmp	x10, x20
  40be2c:	b.eq	40be38 <__fxstatat@plt+0x9298>  // b.none
  40be30:	cbnz	x9, 40be24 <__fxstatat@plt+0x9284>
  40be34:	b	40be44 <__fxstatat@plt+0x92a4>
  40be38:	cbz	x9, 40be44 <__fxstatat@plt+0x92a4>
  40be3c:	ldr	x0, [x9]
  40be40:	b	40be68 <__fxstatat@plt+0x92c8>
  40be44:	ldr	x9, [x19, #8]
  40be48:	add	x8, x8, x0, lsl #4
  40be4c:	add	x8, x8, #0x10
  40be50:	cmp	x8, x9
  40be54:	b.cs	40be64 <__fxstatat@plt+0x92c4>  // b.hs, b.nlast
  40be58:	ldr	x0, [x8], #16
  40be5c:	cbz	x0, 40be50 <__fxstatat@plt+0x92b0>
  40be60:	b	40be68 <__fxstatat@plt+0x92c8>
  40be64:	mov	x0, xzr
  40be68:	ldp	x20, x19, [sp, #16]
  40be6c:	ldp	x29, x30, [sp], #32
  40be70:	ret
  40be74:	bl	4028c0 <abort@plt>
  40be78:	ldp	x9, x10, [x0]
  40be7c:	cmp	x9, x10
  40be80:	b.cs	40bed8 <__fxstatat@plt+0x9338>  // b.hs, b.nlast
  40be84:	mov	x11, xzr
  40be88:	ldr	x8, [x9]
  40be8c:	cbz	x8, 40bec0 <__fxstatat@plt+0x9320>
  40be90:	cbz	x9, 40bec0 <__fxstatat@plt+0x9320>
  40be94:	mov	x10, x9
  40be98:	cmp	x11, x2
  40be9c:	b.cs	40bee0 <__fxstatat@plt+0x9340>  // b.hs, b.nlast
  40bea0:	ldr	x8, [x10]
  40bea4:	str	x8, [x1, x11, lsl #3]
  40bea8:	ldr	x10, [x10, #8]
  40beac:	add	x8, x11, #0x1
  40beb0:	mov	x11, x8
  40beb4:	cbnz	x10, 40be98 <__fxstatat@plt+0x92f8>
  40beb8:	ldr	x10, [x0, #8]
  40bebc:	b	40bec4 <__fxstatat@plt+0x9324>
  40bec0:	mov	x8, x11
  40bec4:	add	x9, x9, #0x10
  40bec8:	cmp	x9, x10
  40becc:	mov	x11, x8
  40bed0:	b.cc	40be88 <__fxstatat@plt+0x92e8>  // b.lo, b.ul, b.last
  40bed4:	b	40bee4 <__fxstatat@plt+0x9344>
  40bed8:	mov	x8, xzr
  40bedc:	b	40bee4 <__fxstatat@plt+0x9344>
  40bee0:	mov	x8, x11
  40bee4:	mov	x0, x8
  40bee8:	ret
  40beec:	stp	x29, x30, [sp, #-64]!
  40bef0:	stp	x24, x23, [sp, #16]
  40bef4:	stp	x22, x21, [sp, #32]
  40bef8:	stp	x20, x19, [sp, #48]
  40befc:	ldp	x23, x8, [x0]
  40bf00:	mov	x29, sp
  40bf04:	cmp	x23, x8
  40bf08:	b.cs	40bf6c <__fxstatat@plt+0x93cc>  // b.hs, b.nlast
  40bf0c:	mov	x19, x2
  40bf10:	mov	x20, x0
  40bf14:	mov	x21, x1
  40bf18:	mov	x22, xzr
  40bf1c:	ldr	x0, [x23]
  40bf20:	cbz	x0, 40bf5c <__fxstatat@plt+0x93bc>
  40bf24:	cbz	x23, 40bf5c <__fxstatat@plt+0x93bc>
  40bf28:	mov	x1, x19
  40bf2c:	blr	x21
  40bf30:	tbz	w0, #0, 40bf70 <__fxstatat@plt+0x93d0>
  40bf34:	mov	x24, x23
  40bf38:	ldr	x24, [x24, #8]
  40bf3c:	add	x22, x22, #0x1
  40bf40:	cbz	x24, 40bf58 <__fxstatat@plt+0x93b8>
  40bf44:	ldr	x0, [x24]
  40bf48:	mov	x1, x19
  40bf4c:	blr	x21
  40bf50:	tbnz	w0, #0, 40bf38 <__fxstatat@plt+0x9398>
  40bf54:	b	40bf70 <__fxstatat@plt+0x93d0>
  40bf58:	ldr	x8, [x20, #8]
  40bf5c:	add	x23, x23, #0x10
  40bf60:	cmp	x23, x8
  40bf64:	b.cc	40bf1c <__fxstatat@plt+0x937c>  // b.lo, b.ul, b.last
  40bf68:	b	40bf70 <__fxstatat@plt+0x93d0>
  40bf6c:	mov	x22, xzr
  40bf70:	mov	x0, x22
  40bf74:	ldp	x20, x19, [sp, #48]
  40bf78:	ldp	x22, x21, [sp, #32]
  40bf7c:	ldp	x24, x23, [sp, #16]
  40bf80:	ldp	x29, x30, [sp], #64
  40bf84:	ret
  40bf88:	ldrb	w9, [x0]
  40bf8c:	cbz	w9, 40bfbc <__fxstatat@plt+0x941c>
  40bf90:	mov	x8, x0
  40bf94:	mov	x0, xzr
  40bf98:	add	x8, x8, #0x1
  40bf9c:	lsl	x10, x0, #5
  40bfa0:	sub	x10, x10, x0
  40bfa4:	add	x10, x10, w9, uxtb
  40bfa8:	ldrb	w9, [x8], #1
  40bfac:	udiv	x11, x10, x1
  40bfb0:	msub	x0, x11, x1, x10
  40bfb4:	cbnz	w9, 40bf9c <__fxstatat@plt+0x93fc>
  40bfb8:	ret
  40bfbc:	mov	x0, xzr
  40bfc0:	ret
  40bfc4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40bfc8:	add	x8, x8, #0x6d8
  40bfcc:	ldr	w9, [x8, #16]
  40bfd0:	ldr	q0, [x8]
  40bfd4:	str	w9, [x0, #16]
  40bfd8:	str	q0, [x0]
  40bfdc:	ret
  40bfe0:	stp	x29, x30, [sp, #-64]!
  40bfe4:	adrp	x8, 40c000 <__fxstatat@plt+0x9460>
  40bfe8:	add	x8, x8, #0xb4
  40bfec:	cmp	x2, #0x0
  40bff0:	adrp	x9, 40c000 <__fxstatat@plt+0x9460>
  40bff4:	stp	x24, x23, [sp, #16]
  40bff8:	stp	x22, x21, [sp, #32]
  40bffc:	mov	x21, x0
  40c000:	add	x9, x9, #0xc4
  40c004:	csel	x23, x8, x2, eq  // eq = none
  40c008:	cmp	x3, #0x0
  40c00c:	mov	w0, #0x50                  	// #80
  40c010:	stp	x20, x19, [sp, #48]
  40c014:	mov	x29, sp
  40c018:	mov	x19, x4
  40c01c:	mov	x22, x1
  40c020:	csel	x24, x9, x3, eq  // eq = none
  40c024:	bl	402730 <malloc@plt>
  40c028:	mov	x20, x0
  40c02c:	cbz	x0, 40c09c <__fxstatat@plt+0x94fc>
  40c030:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40c034:	add	x8, x8, #0x6d8
  40c038:	cmp	x22, #0x0
  40c03c:	csel	x22, x8, x22, eq  // eq = none
  40c040:	mov	x0, x20
  40c044:	str	x22, [x20, #40]
  40c048:	bl	40c0d0 <__fxstatat@plt+0x9530>
  40c04c:	tbz	w0, #0, 40c090 <__fxstatat@plt+0x94f0>
  40c050:	mov	x0, x21
  40c054:	mov	x1, x22
  40c058:	bl	40c164 <__fxstatat@plt+0x95c4>
  40c05c:	str	x0, [x20, #16]
  40c060:	cbz	x0, 40c090 <__fxstatat@plt+0x94f0>
  40c064:	mov	w1, #0x10                  	// #16
  40c068:	mov	x21, x0
  40c06c:	bl	411ee4 <__fxstatat@plt+0xf344>
  40c070:	str	x0, [x20]
  40c074:	cbz	x0, 40c090 <__fxstatat@plt+0x94f0>
  40c078:	add	x8, x0, x21, lsl #4
  40c07c:	stp	xzr, xzr, [x20, #24]
  40c080:	stp	x23, x24, [x20, #48]
  40c084:	str	x8, [x20, #8]
  40c088:	stp	x19, xzr, [x20, #64]
  40c08c:	b	40c09c <__fxstatat@plt+0x94fc>
  40c090:	mov	x0, x20
  40c094:	bl	402990 <free@plt>
  40c098:	mov	x20, xzr
  40c09c:	mov	x0, x20
  40c0a0:	ldp	x20, x19, [sp, #48]
  40c0a4:	ldp	x22, x21, [sp, #32]
  40c0a8:	ldp	x24, x23, [sp, #16]
  40c0ac:	ldp	x29, x30, [sp], #64
  40c0b0:	ret
  40c0b4:	ror	x8, x0, #3
  40c0b8:	udiv	x9, x8, x1
  40c0bc:	msub	x0, x9, x1, x8
  40c0c0:	ret
  40c0c4:	cmp	x0, x1
  40c0c8:	cset	w0, eq  // eq = none
  40c0cc:	ret
  40c0d0:	ldr	x8, [x0, #40]
  40c0d4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  40c0d8:	add	x9, x9, #0x6d8
  40c0dc:	cmp	x8, x9
  40c0e0:	b.eq	40c14c <__fxstatat@plt+0x95ac>  // b.none
  40c0e4:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  40c0e8:	ldr	s0, [x8, #8]
  40c0ec:	ldr	s1, [x10, #1632]
  40c0f0:	fcmp	s0, s1
  40c0f4:	b.le	40c154 <__fxstatat@plt+0x95b4>
  40c0f8:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  40c0fc:	ldr	s2, [x10, #1636]
  40c100:	fcmp	s0, s2
  40c104:	b.pl	40c154 <__fxstatat@plt+0x95b4>  // b.nfrst
  40c108:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  40c10c:	ldr	s2, [x8, #12]
  40c110:	ldr	s3, [x10, #1640]
  40c114:	fcmp	s2, s3
  40c118:	b.le	40c154 <__fxstatat@plt+0x95b4>
  40c11c:	ldr	s2, [x8]
  40c120:	fcmp	s2, #0.0
  40c124:	b.lt	40c154 <__fxstatat@plt+0x95b4>  // b.tstop
  40c128:	fadd	s1, s2, s1
  40c12c:	fcmp	s1, s0
  40c130:	b.pl	40c154 <__fxstatat@plt+0x95b4>  // b.nfrst
  40c134:	ldr	s0, [x8, #4]
  40c138:	fmov	s2, #1.000000000000000000e+00
  40c13c:	fcmp	s0, s2
  40c140:	b.hi	40c154 <__fxstatat@plt+0x95b4>  // b.pmore
  40c144:	fcmp	s1, s0
  40c148:	b.pl	40c154 <__fxstatat@plt+0x95b4>  // b.nfrst
  40c14c:	mov	w8, #0x1                   	// #1
  40c150:	b	40c15c <__fxstatat@plt+0x95bc>
  40c154:	mov	w8, wzr
  40c158:	str	x9, [x0, #40]
  40c15c:	mov	w0, w8
  40c160:	ret
  40c164:	ldrb	w8, [x1, #16]
  40c168:	cbnz	w8, 40c18c <__fxstatat@plt+0x95ec>
  40c16c:	ldr	s0, [x1, #8]
  40c170:	ucvtf	s1, x0
  40c174:	mov	w8, #0x5f800000            	// #1602224128
  40c178:	fdiv	s0, s1, s0
  40c17c:	fmov	s1, w8
  40c180:	fcmp	s0, s1
  40c184:	b.ge	40c200 <__fxstatat@plt+0x9660>  // b.tcont
  40c188:	fcvtzu	x0, s0
  40c18c:	cmp	x0, #0xa
  40c190:	mov	w8, #0xa                   	// #10
  40c194:	csel	x8, x0, x8, hi  // hi = pmore
  40c198:	orr	x0, x8, #0x1
  40c19c:	cmn	x0, #0x1
  40c1a0:	b.eq	40c200 <__fxstatat@plt+0x9660>  // b.none
  40c1a4:	cmp	x0, #0xa
  40c1a8:	b.cc	40c1e0 <__fxstatat@plt+0x9640>  // b.lo, b.ul, b.last
  40c1ac:	mov	w9, #0xc                   	// #12
  40c1b0:	mov	w10, #0x9                   	// #9
  40c1b4:	mov	w8, #0x3                   	// #3
  40c1b8:	udiv	x11, x0, x8
  40c1bc:	msub	x11, x11, x8, x0
  40c1c0:	cbz	x11, 40c1e4 <__fxstatat@plt+0x9644>
  40c1c4:	add	x10, x10, x9
  40c1c8:	add	x10, x10, #0x4
  40c1cc:	add	x8, x8, #0x2
  40c1d0:	cmp	x10, x0
  40c1d4:	add	x9, x9, #0x8
  40c1d8:	b.cc	40c1b8 <__fxstatat@plt+0x9618>  // b.lo, b.ul, b.last
  40c1dc:	b	40c1e4 <__fxstatat@plt+0x9644>
  40c1e0:	mov	w8, #0x3                   	// #3
  40c1e4:	udiv	x9, x0, x8
  40c1e8:	msub	x8, x9, x8, x0
  40c1ec:	cbnz	x8, 40c1f8 <__fxstatat@plt+0x9658>
  40c1f0:	add	x0, x0, #0x2
  40c1f4:	b	40c19c <__fxstatat@plt+0x95fc>
  40c1f8:	lsr	x8, x0, #60
  40c1fc:	cbz	x8, 40c204 <__fxstatat@plt+0x9664>
  40c200:	mov	x0, xzr
  40c204:	ret
  40c208:	stp	x29, x30, [sp, #-48]!
  40c20c:	str	x21, [sp, #16]
  40c210:	stp	x20, x19, [sp, #32]
  40c214:	ldp	x20, x8, [x0]
  40c218:	mov	x19, x0
  40c21c:	mov	x29, sp
  40c220:	cmp	x20, x8
  40c224:	b.cs	40c294 <__fxstatat@plt+0x96f4>  // b.hs, b.nlast
  40c228:	ldr	x9, [x20]
  40c22c:	cbz	x9, 40c28c <__fxstatat@plt+0x96ec>
  40c230:	ldr	x8, [x19, #64]
  40c234:	ldr	x21, [x20, #8]
  40c238:	cmp	x8, #0x0
  40c23c:	cset	w9, ne  // ne = any
  40c240:	cbz	x21, 40c278 <__fxstatat@plt+0x96d8>
  40c244:	tbz	w9, #0, 40c254 <__fxstatat@plt+0x96b4>
  40c248:	ldr	x0, [x21]
  40c24c:	blr	x8
  40c250:	ldr	x8, [x19, #64]
  40c254:	str	xzr, [x21]
  40c258:	ldr	x9, [x19, #72]
  40c25c:	ldr	x10, [x21, #8]
  40c260:	cmp	x8, #0x0
  40c264:	str	x9, [x21, #8]
  40c268:	str	x21, [x19, #72]
  40c26c:	cset	w9, ne  // ne = any
  40c270:	mov	x21, x10
  40c274:	cbnz	x10, 40c244 <__fxstatat@plt+0x96a4>
  40c278:	cbz	w9, 40c284 <__fxstatat@plt+0x96e4>
  40c27c:	ldr	x0, [x20]
  40c280:	blr	x8
  40c284:	stp	xzr, xzr, [x20]
  40c288:	ldr	x8, [x19, #8]
  40c28c:	add	x20, x20, #0x10
  40c290:	b	40c220 <__fxstatat@plt+0x9680>
  40c294:	stp	xzr, xzr, [x19, #24]
  40c298:	ldp	x20, x19, [sp, #32]
  40c29c:	ldr	x21, [sp, #16]
  40c2a0:	ldp	x29, x30, [sp], #48
  40c2a4:	ret
  40c2a8:	stp	x29, x30, [sp, #-48]!
  40c2ac:	stp	x20, x19, [sp, #32]
  40c2b0:	ldr	x8, [x0, #64]
  40c2b4:	mov	x19, x0
  40c2b8:	str	x21, [sp, #16]
  40c2bc:	mov	x29, sp
  40c2c0:	cbz	x8, 40c314 <__fxstatat@plt+0x9774>
  40c2c4:	ldr	x8, [x19, #32]
  40c2c8:	cbz	x8, 40c314 <__fxstatat@plt+0x9774>
  40c2cc:	ldp	x20, x8, [x19]
  40c2d0:	cmp	x20, x8
  40c2d4:	b.cs	40c314 <__fxstatat@plt+0x9774>  // b.hs, b.nlast
  40c2d8:	ldr	x0, [x20]
  40c2dc:	cbz	x0, 40c30c <__fxstatat@plt+0x976c>
  40c2e0:	cbz	x20, 40c30c <__fxstatat@plt+0x976c>
  40c2e4:	ldr	x8, [x19, #64]
  40c2e8:	blr	x8
  40c2ec:	ldr	x21, [x20, #8]
  40c2f0:	cbz	x21, 40c308 <__fxstatat@plt+0x9768>
  40c2f4:	ldr	x0, [x21]
  40c2f8:	ldr	x8, [x19, #64]
  40c2fc:	blr	x8
  40c300:	ldr	x21, [x21, #8]
  40c304:	cbnz	x21, 40c2f4 <__fxstatat@plt+0x9754>
  40c308:	ldr	x8, [x19, #8]
  40c30c:	add	x20, x20, #0x10
  40c310:	b	40c2d0 <__fxstatat@plt+0x9730>
  40c314:	ldp	x20, x8, [x19]
  40c318:	cmp	x20, x8
  40c31c:	b.cs	40c344 <__fxstatat@plt+0x97a4>  // b.hs, b.nlast
  40c320:	ldr	x0, [x20, #8]
  40c324:	cbz	x0, 40c33c <__fxstatat@plt+0x979c>
  40c328:	ldr	x21, [x0, #8]
  40c32c:	bl	402990 <free@plt>
  40c330:	mov	x0, x21
  40c334:	cbnz	x21, 40c328 <__fxstatat@plt+0x9788>
  40c338:	ldr	x8, [x19, #8]
  40c33c:	add	x20, x20, #0x10
  40c340:	b	40c318 <__fxstatat@plt+0x9778>
  40c344:	ldr	x0, [x19, #72]
  40c348:	cbz	x0, 40c35c <__fxstatat@plt+0x97bc>
  40c34c:	ldr	x20, [x0, #8]
  40c350:	bl	402990 <free@plt>
  40c354:	mov	x0, x20
  40c358:	cbnz	x20, 40c34c <__fxstatat@plt+0x97ac>
  40c35c:	ldr	x0, [x19]
  40c360:	bl	402990 <free@plt>
  40c364:	mov	x0, x19
  40c368:	ldp	x20, x19, [sp, #32]
  40c36c:	ldr	x21, [sp, #16]
  40c370:	ldp	x29, x30, [sp], #48
  40c374:	b	402990 <free@plt>
  40c378:	sub	sp, sp, #0x70
  40c37c:	stp	x29, x30, [sp, #80]
  40c380:	stp	x20, x19, [sp, #96]
  40c384:	ldr	x8, [x0, #40]
  40c388:	mov	x19, x0
  40c38c:	mov	x0, x1
  40c390:	add	x29, sp, #0x50
  40c394:	mov	x1, x8
  40c398:	bl	40c164 <__fxstatat@plt+0x95c4>
  40c39c:	cbz	x0, 40c420 <__fxstatat@plt+0x9880>
  40c3a0:	ldr	x8, [x19, #16]
  40c3a4:	mov	x20, x0
  40c3a8:	cmp	x0, x8
  40c3ac:	b.eq	40c41c <__fxstatat@plt+0x987c>  // b.none
  40c3b0:	mov	w1, #0x10                  	// #16
  40c3b4:	mov	x0, x20
  40c3b8:	bl	411ee4 <__fxstatat@plt+0xf344>
  40c3bc:	str	x0, [sp]
  40c3c0:	cbz	x0, 40c420 <__fxstatat@plt+0x9880>
  40c3c4:	add	x8, x0, x20, lsl #4
  40c3c8:	stp	x8, x20, [sp, #8]
  40c3cc:	stp	xzr, xzr, [sp, #24]
  40c3d0:	ldur	q0, [x19, #40]
  40c3d4:	mov	x0, sp
  40c3d8:	mov	x1, x19
  40c3dc:	mov	w2, wzr
  40c3e0:	stur	q0, [sp, #40]
  40c3e4:	ldur	q0, [x19, #56]
  40c3e8:	stur	q0, [sp, #56]
  40c3ec:	ldr	x8, [x19, #72]
  40c3f0:	str	x8, [sp, #72]
  40c3f4:	bl	40c474 <__fxstatat@plt+0x98d4>
  40c3f8:	tbz	w0, #0, 40c430 <__fxstatat@plt+0x9890>
  40c3fc:	ldr	x0, [x19]
  40c400:	bl	402990 <free@plt>
  40c404:	ldr	q0, [sp]
  40c408:	str	q0, [x19]
  40c40c:	ldr	q0, [sp, #16]
  40c410:	str	q0, [x19, #16]
  40c414:	ldr	x8, [sp, #72]
  40c418:	str	x8, [x19, #72]
  40c41c:	mov	w0, #0x1                   	// #1
  40c420:	ldp	x20, x19, [sp, #96]
  40c424:	ldp	x29, x30, [sp, #80]
  40c428:	add	sp, sp, #0x70
  40c42c:	ret
  40c430:	ldr	x8, [sp, #72]
  40c434:	mov	x1, sp
  40c438:	mov	w2, #0x1                   	// #1
  40c43c:	mov	x0, x19
  40c440:	str	x8, [x19, #72]
  40c444:	bl	40c474 <__fxstatat@plt+0x98d4>
  40c448:	tbz	w0, #0, 40c470 <__fxstatat@plt+0x98d0>
  40c44c:	mov	x1, sp
  40c450:	mov	x0, x19
  40c454:	mov	w2, wzr
  40c458:	bl	40c474 <__fxstatat@plt+0x98d4>
  40c45c:	tbz	w0, #0, 40c470 <__fxstatat@plt+0x98d0>
  40c460:	ldr	x0, [sp]
  40c464:	bl	402990 <free@plt>
  40c468:	mov	w0, wzr
  40c46c:	b	40c420 <__fxstatat@plt+0x9880>
  40c470:	bl	4028c0 <abort@plt>
  40c474:	stp	x29, x30, [sp, #-80]!
  40c478:	stp	x26, x25, [sp, #16]
  40c47c:	stp	x24, x23, [sp, #32]
  40c480:	stp	x22, x21, [sp, #48]
  40c484:	stp	x20, x19, [sp, #64]
  40c488:	ldp	x24, x8, [x1]
  40c48c:	mov	x29, sp
  40c490:	cmp	x24, x8
  40c494:	b.cs	40c5c4 <__fxstatat@plt+0x9a24>  // b.hs, b.nlast
  40c498:	mov	w19, w2
  40c49c:	mov	x20, x1
  40c4a0:	mov	x21, x0
  40c4a4:	add	x25, x0, #0x48
  40c4a8:	ldr	x22, [x24]
  40c4ac:	cbz	x22, 40c5b4 <__fxstatat@plt+0x9a14>
  40c4b0:	ldr	x23, [x24, #8]
  40c4b4:	cbz	x23, 40c524 <__fxstatat@plt+0x9984>
  40c4b8:	ldr	x1, [x21, #16]
  40c4bc:	ldr	x22, [x23]
  40c4c0:	ldr	x8, [x21, #48]
  40c4c4:	mov	x0, x22
  40c4c8:	blr	x8
  40c4cc:	ldr	x1, [x21, #16]
  40c4d0:	cmp	x0, x1
  40c4d4:	b.cs	40c5e0 <__fxstatat@plt+0x9a40>  // b.hs, b.nlast
  40c4d8:	ldr	x8, [x21]
  40c4dc:	add	x9, x8, x0, lsl #4
  40c4e0:	ldr	x10, [x9]
  40c4e4:	ldr	x8, [x23, #8]
  40c4e8:	cbz	x10, 40c4f4 <__fxstatat@plt+0x9954>
  40c4ec:	add	x9, x9, #0x8
  40c4f0:	b	40c50c <__fxstatat@plt+0x996c>
  40c4f4:	str	x22, [x9]
  40c4f8:	ldr	x9, [x21, #24]
  40c4fc:	add	x9, x9, #0x1
  40c500:	str	x9, [x21, #24]
  40c504:	mov	x9, x25
  40c508:	str	xzr, [x23]
  40c50c:	ldr	x10, [x9]
  40c510:	str	x10, [x23, #8]
  40c514:	str	x23, [x9]
  40c518:	mov	x23, x8
  40c51c:	cbnz	x8, 40c4bc <__fxstatat@plt+0x991c>
  40c520:	ldr	x22, [x24]
  40c524:	str	xzr, [x24, #8]
  40c528:	tbnz	w19, #0, 40c5b4 <__fxstatat@plt+0x9a14>
  40c52c:	ldr	x8, [x21, #48]
  40c530:	ldr	x1, [x21, #16]
  40c534:	mov	x0, x22
  40c538:	blr	x8
  40c53c:	ldr	x8, [x21, #16]
  40c540:	cmp	x0, x8
  40c544:	b.cs	40c5e0 <__fxstatat@plt+0x9a40>  // b.hs, b.nlast
  40c548:	ldr	x26, [x21]
  40c54c:	mov	x23, x0
  40c550:	add	x8, x26, x0, lsl #4
  40c554:	ldr	x9, [x8]
  40c558:	cbz	x9, 40c570 <__fxstatat@plt+0x99d0>
  40c55c:	ldr	x0, [x25]
  40c560:	cbz	x0, 40c584 <__fxstatat@plt+0x99e4>
  40c564:	ldr	x8, [x0, #8]
  40c568:	str	x8, [x25]
  40c56c:	b	40c590 <__fxstatat@plt+0x99f0>
  40c570:	str	x22, [x8]
  40c574:	ldr	x8, [x21, #24]
  40c578:	add	x8, x8, #0x1
  40c57c:	str	x8, [x21, #24]
  40c580:	b	40c5a4 <__fxstatat@plt+0x9a04>
  40c584:	mov	w0, #0x10                  	// #16
  40c588:	bl	402730 <malloc@plt>
  40c58c:	cbz	x0, 40c5c8 <__fxstatat@plt+0x9a28>
  40c590:	str	x22, [x0]
  40c594:	add	x8, x26, x23, lsl #4
  40c598:	ldr	x9, [x8, #8]
  40c59c:	str	x9, [x0, #8]
  40c5a0:	str	x0, [x8, #8]
  40c5a4:	str	xzr, [x24]
  40c5a8:	ldr	x8, [x20, #24]
  40c5ac:	sub	x8, x8, #0x1
  40c5b0:	str	x8, [x20, #24]
  40c5b4:	ldr	x8, [x20, #8]
  40c5b8:	add	x24, x24, #0x10
  40c5bc:	cmp	x24, x8
  40c5c0:	b.cc	40c4a8 <__fxstatat@plt+0x9908>  // b.lo, b.ul, b.last
  40c5c4:	mov	w0, #0x1                   	// #1
  40c5c8:	ldp	x20, x19, [sp, #64]
  40c5cc:	ldp	x22, x21, [sp, #48]
  40c5d0:	ldp	x24, x23, [sp, #32]
  40c5d4:	ldp	x26, x25, [sp, #16]
  40c5d8:	ldp	x29, x30, [sp], #80
  40c5dc:	ret
  40c5e0:	bl	4028c0 <abort@plt>
  40c5e4:	stp	x29, x30, [sp, #-48]!
  40c5e8:	str	x21, [sp, #16]
  40c5ec:	stp	x20, x19, [sp, #32]
  40c5f0:	mov	x29, sp
  40c5f4:	cbz	x1, 40c748 <__fxstatat@plt+0x9ba8>
  40c5f8:	mov	x21, x2
  40c5fc:	add	x2, x29, #0x18
  40c600:	mov	w3, wzr
  40c604:	mov	x20, x1
  40c608:	mov	x19, x0
  40c60c:	bl	40c74c <__fxstatat@plt+0x9bac>
  40c610:	cbz	x0, 40c628 <__fxstatat@plt+0x9a88>
  40c614:	cbz	x21, 40c6e0 <__fxstatat@plt+0x9b40>
  40c618:	mov	x8, x0
  40c61c:	mov	w0, wzr
  40c620:	str	x8, [x21]
  40c624:	b	40c738 <__fxstatat@plt+0x9b98>
  40c628:	ldr	x8, [x19, #40]
  40c62c:	ldp	x10, x9, [x19, #16]
  40c630:	ldr	s0, [x8, #8]
  40c634:	ucvtf	s2, x10
  40c638:	ucvtf	s1, x9
  40c63c:	fmul	s0, s0, s2
  40c640:	fcmp	s0, s1
  40c644:	b.pl	40c6c0 <__fxstatat@plt+0x9b20>  // b.nfrst
  40c648:	mov	x0, x19
  40c64c:	bl	40c0d0 <__fxstatat@plt+0x9530>
  40c650:	ldr	x8, [x19, #40]
  40c654:	ldp	x10, x9, [x19, #16]
  40c658:	ldr	s0, [x8, #8]
  40c65c:	ucvtf	s1, x10
  40c660:	ucvtf	s2, x9
  40c664:	fmul	s3, s0, s1
  40c668:	fcmp	s3, s2
  40c66c:	b.pl	40c6c0 <__fxstatat@plt+0x9b20>  // b.nfrst
  40c670:	ldr	s2, [x8, #12]
  40c674:	ldrb	w8, [x8, #16]
  40c678:	fmul	s1, s2, s1
  40c67c:	cmp	w8, #0x0
  40c680:	fmul	s0, s0, s1
  40c684:	mov	w8, #0x5f800000            	// #1602224128
  40c688:	fcsel	s0, s0, s1, eq  // eq = none
  40c68c:	fmov	s1, w8
  40c690:	fcmp	s0, s1
  40c694:	b.ge	40c734 <__fxstatat@plt+0x9b94>  // b.tcont
  40c698:	fcvtzu	x1, s0
  40c69c:	mov	x0, x19
  40c6a0:	bl	40c378 <__fxstatat@plt+0x97d8>
  40c6a4:	tbz	w0, #0, 40c734 <__fxstatat@plt+0x9b94>
  40c6a8:	add	x2, x29, #0x18
  40c6ac:	mov	x0, x19
  40c6b0:	mov	x1, x20
  40c6b4:	mov	w3, wzr
  40c6b8:	bl	40c74c <__fxstatat@plt+0x9bac>
  40c6bc:	cbnz	x0, 40c748 <__fxstatat@plt+0x9ba8>
  40c6c0:	ldr	x21, [x29, #24]
  40c6c4:	ldr	x8, [x21]
  40c6c8:	cbz	x8, 40c6e8 <__fxstatat@plt+0x9b48>
  40c6cc:	ldr	x0, [x19, #72]
  40c6d0:	cbz	x0, 40c704 <__fxstatat@plt+0x9b64>
  40c6d4:	ldr	x8, [x0, #8]
  40c6d8:	str	x8, [x19, #72]
  40c6dc:	b	40c710 <__fxstatat@plt+0x9b70>
  40c6e0:	mov	w0, wzr
  40c6e4:	b	40c738 <__fxstatat@plt+0x9b98>
  40c6e8:	str	x20, [x21]
  40c6ec:	ldur	q0, [x19, #24]
  40c6f0:	mov	w0, #0x1                   	// #1
  40c6f4:	dup	v1.2d, x0
  40c6f8:	add	v0.2d, v0.2d, v1.2d
  40c6fc:	stur	q0, [x19, #24]
  40c700:	b	40c738 <__fxstatat@plt+0x9b98>
  40c704:	mov	w0, #0x10                  	// #16
  40c708:	bl	402730 <malloc@plt>
  40c70c:	cbz	x0, 40c734 <__fxstatat@plt+0x9b94>
  40c710:	str	x20, [x0]
  40c714:	ldr	x8, [x21, #8]
  40c718:	str	x8, [x0, #8]
  40c71c:	str	x0, [x21, #8]
  40c720:	ldr	x8, [x19, #32]
  40c724:	mov	w0, #0x1                   	// #1
  40c728:	add	x8, x8, #0x1
  40c72c:	str	x8, [x19, #32]
  40c730:	b	40c738 <__fxstatat@plt+0x9b98>
  40c734:	mov	w0, #0xffffffff            	// #-1
  40c738:	ldp	x20, x19, [sp, #32]
  40c73c:	ldr	x21, [sp, #16]
  40c740:	ldp	x29, x30, [sp], #48
  40c744:	ret
  40c748:	bl	4028c0 <abort@plt>
  40c74c:	stp	x29, x30, [sp, #-80]!
  40c750:	stp	x24, x23, [sp, #32]
  40c754:	stp	x22, x21, [sp, #48]
  40c758:	stp	x20, x19, [sp, #64]
  40c75c:	ldr	x8, [x0, #16]
  40c760:	ldr	x9, [x0, #48]
  40c764:	mov	x20, x0
  40c768:	mov	x19, x1
  40c76c:	mov	x0, x1
  40c770:	mov	x1, x8
  40c774:	str	x25, [sp, #16]
  40c778:	mov	x29, sp
  40c77c:	mov	w21, w3
  40c780:	mov	x23, x2
  40c784:	blr	x9
  40c788:	ldr	x8, [x20, #16]
  40c78c:	cmp	x0, x8
  40c790:	b.cs	40c874 <__fxstatat@plt+0x9cd4>  // b.hs, b.nlast
  40c794:	ldr	x25, [x20]
  40c798:	mov	x22, x0
  40c79c:	add	x24, x25, x0, lsl #4
  40c7a0:	str	x24, [x23]
  40c7a4:	ldr	x1, [x24]
  40c7a8:	cbz	x1, 40c81c <__fxstatat@plt+0x9c7c>
  40c7ac:	cmp	x1, x19
  40c7b0:	b.eq	40c7c8 <__fxstatat@plt+0x9c28>  // b.none
  40c7b4:	ldr	x8, [x20, #56]
  40c7b8:	mov	x0, x19
  40c7bc:	blr	x8
  40c7c0:	tbz	w0, #0, 40c7e4 <__fxstatat@plt+0x9c44>
  40c7c4:	ldr	x19, [x24]
  40c7c8:	tbz	w21, #0, 40c858 <__fxstatat@plt+0x9cb8>
  40c7cc:	add	x8, x25, x22, lsl #4
  40c7d0:	ldr	x8, [x8, #8]
  40c7d4:	cbz	x8, 40c824 <__fxstatat@plt+0x9c84>
  40c7d8:	ldr	q0, [x8]
  40c7dc:	str	q0, [x24]
  40c7e0:	b	40c848 <__fxstatat@plt+0x9ca8>
  40c7e4:	add	x22, x25, x22, lsl #4
  40c7e8:	ldr	x9, [x22, #8]!
  40c7ec:	cbz	x9, 40c81c <__fxstatat@plt+0x9c7c>
  40c7f0:	ldr	x1, [x9]
  40c7f4:	cmp	x1, x19
  40c7f8:	b.eq	40c82c <__fxstatat@plt+0x9c8c>  // b.none
  40c7fc:	ldr	x8, [x20, #56]
  40c800:	mov	x0, x19
  40c804:	blr	x8
  40c808:	ldr	x8, [x22]
  40c80c:	tbnz	w0, #0, 40c838 <__fxstatat@plt+0x9c98>
  40c810:	ldr	x9, [x8, #8]!
  40c814:	mov	x22, x8
  40c818:	cbnz	x9, 40c7f0 <__fxstatat@plt+0x9c50>
  40c81c:	mov	x19, xzr
  40c820:	b	40c858 <__fxstatat@plt+0x9cb8>
  40c824:	str	xzr, [x24]
  40c828:	b	40c858 <__fxstatat@plt+0x9cb8>
  40c82c:	mov	x8, x9
  40c830:	tbnz	w21, #0, 40c840 <__fxstatat@plt+0x9ca0>
  40c834:	b	40c858 <__fxstatat@plt+0x9cb8>
  40c838:	ldr	x19, [x8]
  40c83c:	tbz	w21, #0, 40c858 <__fxstatat@plt+0x9cb8>
  40c840:	ldr	x9, [x8, #8]
  40c844:	str	x9, [x22]
  40c848:	str	xzr, [x8]
  40c84c:	ldr	x9, [x20, #72]
  40c850:	str	x9, [x8, #8]
  40c854:	str	x8, [x20, #72]
  40c858:	mov	x0, x19
  40c85c:	ldp	x20, x19, [sp, #64]
  40c860:	ldp	x22, x21, [sp, #48]
  40c864:	ldp	x24, x23, [sp, #32]
  40c868:	ldr	x25, [sp, #16]
  40c86c:	ldp	x29, x30, [sp], #80
  40c870:	ret
  40c874:	bl	4028c0 <abort@plt>
  40c878:	stp	x29, x30, [sp, #-32]!
  40c87c:	mov	x29, sp
  40c880:	add	x2, x29, #0x18
  40c884:	str	x19, [sp, #16]
  40c888:	mov	x19, x1
  40c88c:	bl	40c5e4 <__fxstatat@plt+0x9a44>
  40c890:	ldr	x8, [x29, #24]
  40c894:	cmp	w0, #0x0
  40c898:	csel	x8, x8, x19, eq  // eq = none
  40c89c:	ldr	x19, [sp, #16]
  40c8a0:	cmn	w0, #0x1
  40c8a4:	csel	x0, xzr, x8, eq  // eq = none
  40c8a8:	ldp	x29, x30, [sp], #32
  40c8ac:	ret
  40c8b0:	stp	x29, x30, [sp, #-48]!
  40c8b4:	mov	x29, sp
  40c8b8:	add	x2, x29, #0x18
  40c8bc:	mov	w3, #0x1                   	// #1
  40c8c0:	str	x21, [sp, #16]
  40c8c4:	stp	x20, x19, [sp, #32]
  40c8c8:	mov	x19, x0
  40c8cc:	bl	40c74c <__fxstatat@plt+0x9bac>
  40c8d0:	mov	x20, x0
  40c8d4:	cbz	x0, 40c984 <__fxstatat@plt+0x9de4>
  40c8d8:	ldr	x8, [x19, #32]
  40c8dc:	sub	x8, x8, #0x1
  40c8e0:	str	x8, [x19, #32]
  40c8e4:	ldr	x8, [x29, #24]
  40c8e8:	ldr	x8, [x8]
  40c8ec:	cbnz	x8, 40c984 <__fxstatat@plt+0x9de4>
  40c8f0:	ldp	x10, x8, [x19, #16]
  40c8f4:	ldr	x9, [x19, #40]
  40c8f8:	sub	x8, x8, #0x1
  40c8fc:	str	x8, [x19, #24]
  40c900:	ldr	s0, [x9]
  40c904:	ucvtf	s2, x10
  40c908:	ucvtf	s1, x8
  40c90c:	fmul	s0, s0, s2
  40c910:	fcmp	s0, s1
  40c914:	b.le	40c984 <__fxstatat@plt+0x9de4>
  40c918:	mov	x0, x19
  40c91c:	bl	40c0d0 <__fxstatat@plt+0x9530>
  40c920:	ldr	x8, [x19, #40]
  40c924:	ldp	x10, x9, [x19, #16]
  40c928:	ldr	s1, [x8]
  40c92c:	ucvtf	s0, x10
  40c930:	ucvtf	s2, x9
  40c934:	fmul	s1, s1, s0
  40c938:	fcmp	s1, s2
  40c93c:	b.le	40c984 <__fxstatat@plt+0x9de4>
  40c940:	ldr	s1, [x8, #4]
  40c944:	ldrb	w9, [x8, #16]
  40c948:	fmul	s0, s1, s0
  40c94c:	cbnz	w9, 40c958 <__fxstatat@plt+0x9db8>
  40c950:	ldr	s1, [x8, #8]
  40c954:	fmul	s0, s0, s1
  40c958:	fcvtzu	x1, s0
  40c95c:	mov	x0, x19
  40c960:	bl	40c378 <__fxstatat@plt+0x97d8>
  40c964:	tbnz	w0, #0, 40c984 <__fxstatat@plt+0x9de4>
  40c968:	ldr	x0, [x19, #72]
  40c96c:	cbz	x0, 40c980 <__fxstatat@plt+0x9de0>
  40c970:	ldr	x21, [x0, #8]
  40c974:	bl	402990 <free@plt>
  40c978:	mov	x0, x21
  40c97c:	cbnz	x21, 40c970 <__fxstatat@plt+0x9dd0>
  40c980:	str	xzr, [x19, #72]
  40c984:	mov	x0, x20
  40c988:	ldp	x20, x19, [sp, #32]
  40c98c:	ldr	x21, [sp, #16]
  40c990:	ldp	x29, x30, [sp], #48
  40c994:	ret
  40c998:	stp	x29, x30, [sp, #-32]!
  40c99c:	stp	x20, x19, [sp, #16]
  40c9a0:	mov	x19, x0
  40c9a4:	ldr	x0, [x0]
  40c9a8:	mov	x29, sp
  40c9ac:	mov	x20, x1
  40c9b0:	bl	412924 <_obstack_memory_used@@Base+0x66c>
  40c9b4:	ldr	x8, [x19, #8]
  40c9b8:	eor	x8, x8, x0
  40c9bc:	udiv	x9, x8, x20
  40c9c0:	msub	x0, x9, x20, x8
  40c9c4:	ldp	x20, x19, [sp, #16]
  40c9c8:	ldp	x29, x30, [sp], #32
  40c9cc:	ret
  40c9d0:	ldr	x8, [x0, #8]
  40c9d4:	udiv	x9, x8, x1
  40c9d8:	msub	x0, x9, x1, x8
  40c9dc:	ret
  40c9e0:	ldr	x8, [x0, #8]
  40c9e4:	ldr	x9, [x1, #8]
  40c9e8:	cmp	x8, x9
  40c9ec:	b.ne	40ca0c <__fxstatat@plt+0x9e6c>  // b.any
  40c9f0:	ldr	x8, [x0, #16]
  40c9f4:	ldr	x9, [x1, #16]
  40c9f8:	cmp	x8, x9
  40c9fc:	b.ne	40ca0c <__fxstatat@plt+0x9e6c>  // b.any
  40ca00:	ldr	x0, [x0]
  40ca04:	ldr	x1, [x1]
  40ca08:	b	410c0c <__fxstatat@plt+0xe06c>
  40ca0c:	mov	w0, wzr
  40ca10:	ret
  40ca14:	stp	x29, x30, [sp, #-16]!
  40ca18:	ldr	x8, [x0, #8]
  40ca1c:	ldr	x9, [x1, #8]
  40ca20:	mov	x29, sp
  40ca24:	cmp	x8, x9
  40ca28:	b.ne	40ca54 <__fxstatat@plt+0x9eb4>  // b.any
  40ca2c:	ldr	x8, [x0, #16]
  40ca30:	ldr	x9, [x1, #16]
  40ca34:	cmp	x8, x9
  40ca38:	b.ne	40ca54 <__fxstatat@plt+0x9eb4>  // b.any
  40ca3c:	ldr	x0, [x0]
  40ca40:	ldr	x1, [x1]
  40ca44:	bl	402950 <strcmp@plt>
  40ca48:	cmp	w0, #0x0
  40ca4c:	cset	w0, eq  // eq = none
  40ca50:	b	40ca58 <__fxstatat@plt+0x9eb8>
  40ca54:	mov	w0, wzr
  40ca58:	ldp	x29, x30, [sp], #16
  40ca5c:	ret
  40ca60:	stp	x29, x30, [sp, #-32]!
  40ca64:	str	x19, [sp, #16]
  40ca68:	mov	x19, x0
  40ca6c:	ldr	x0, [x0]
  40ca70:	mov	x29, sp
  40ca74:	bl	402990 <free@plt>
  40ca78:	mov	x0, x19
  40ca7c:	ldr	x19, [sp, #16]
  40ca80:	ldp	x29, x30, [sp], #32
  40ca84:	b	402990 <free@plt>
  40ca88:	sub	sp, sp, #0xe0
  40ca8c:	tst	w2, #0x20
  40ca90:	mov	w8, #0x3e8                 	// #1000
  40ca94:	mov	w9, #0x400                 	// #1024
  40ca98:	stp	x29, x30, [sp, #128]
  40ca9c:	stp	x28, x27, [sp, #144]
  40caa0:	stp	x26, x25, [sp, #160]
  40caa4:	stp	x24, x23, [sp, #176]
  40caa8:	stp	x22, x21, [sp, #192]
  40caac:	stp	x20, x19, [sp, #208]
  40cab0:	add	x29, sp, #0x80
  40cab4:	mov	x21, x4
  40cab8:	mov	x27, x3
  40cabc:	mov	x19, x1
  40cac0:	mov	x26, x0
  40cac4:	and	w28, w2, #0x3
  40cac8:	str	w2, [sp, #20]
  40cacc:	csel	w22, w9, w8, ne  // ne = any
  40cad0:	bl	4026a0 <localeconv@plt>
  40cad4:	ldr	x25, [x0]
  40cad8:	mov	x23, x0
  40cadc:	mov	x0, x25
  40cae0:	bl	402540 <strlen@plt>
  40cae4:	ldp	x23, x20, [x23, #8]
  40cae8:	sub	x8, x0, #0x1
  40caec:	cmp	x8, #0x10
  40caf0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40caf4:	csinc	x24, x0, xzr, cc  // cc = lo, ul, last
  40caf8:	add	x8, x8, #0x654
  40cafc:	mov	x0, x23
  40cb00:	csel	x25, x25, x8, cc  // cc = lo, ul, last
  40cb04:	bl	402540 <strlen@plt>
  40cb08:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cb0c:	mov	x11, x21
  40cb10:	add	x8, x8, #0x2c9
  40cb14:	cmp	x0, #0x11
  40cb18:	csel	x21, x23, x8, cc  // cc = lo, ul, last
  40cb1c:	cmp	x11, x27
  40cb20:	str	x19, [sp, #24]
  40cb24:	add	x19, x19, #0x287
  40cb28:	stp	x21, x11, [sp]
  40cb2c:	b.ls	40cb7c <__fxstatat@plt+0x9fdc>  // b.plast
  40cb30:	cbz	x27, 40cb94 <__fxstatat@plt+0x9ff4>
  40cb34:	udiv	x9, x11, x27
  40cb38:	msub	x8, x9, x27, x11
  40cb3c:	cbnz	x8, 40cb94 <__fxstatat@plt+0x9ff4>
  40cb40:	udiv	x27, x26, x9
  40cb44:	msub	x8, x27, x9, x26
  40cb48:	add	x8, x8, x8, lsl #2
  40cb4c:	lsl	x11, x8, #1
  40cb50:	udiv	x8, x11, x9
  40cb54:	msub	x11, x8, x9, x11
  40cb58:	lsl	x12, x11, #1
  40cb5c:	cmp	x12, #0x0
  40cb60:	mov	w10, #0x2                   	// #2
  40cb64:	cset	w13, ne  // ne = any
  40cb68:	cmp	x9, x11, lsl #1
  40cb6c:	cinc	w10, w10, cc  // cc = lo, ul, last
  40cb70:	cmp	x12, x9
  40cb74:	csel	w9, w13, w10, cc  // cc = lo, ul, last
  40cb78:	b	40ce0c <__fxstatat@plt+0xa26c>
  40cb7c:	udiv	x10, x27, x11
  40cb80:	msub	x8, x10, x11, x27
  40cb84:	cbnz	x8, 40cb94 <__fxstatat@plt+0x9ff4>
  40cb88:	umulh	x8, x10, x26
  40cb8c:	cmp	xzr, x8
  40cb90:	b.eq	40ce00 <__fxstatat@plt+0xa260>  // b.none
  40cb94:	mov	x0, x11
  40cb98:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cb9c:	mov	x0, x26
  40cba0:	str	q0, [sp, #48]
  40cba4:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cba8:	mov	x0, x27
  40cbac:	str	q0, [sp, #64]
  40cbb0:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cbb4:	ldr	q1, [sp, #48]
  40cbb8:	bl	412b10 <_obstack_memory_used@@Base+0x858>
  40cbbc:	ldr	q1, [sp, #64]
  40cbc0:	bl	413678 <_obstack_memory_used@@Base+0x13c0>
  40cbc4:	ldr	w23, [sp, #20]
  40cbc8:	tbnz	w23, #4, 40cc30 <__fxstatat@plt+0xa090>
  40cbcc:	cmp	w28, #0x1
  40cbd0:	b.eq	40cdc0 <__fxstatat@plt+0xa220>  // b.none
  40cbd4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cbd8:	ldr	q1, [x8, #1792]
  40cbdc:	str	q0, [sp, #32]
  40cbe0:	bl	413538 <_obstack_memory_used@@Base+0x1280>
  40cbe4:	ldr	x25, [sp, #24]
  40cbe8:	cmp	w0, #0x0
  40cbec:	mov	x27, x19
  40cbf0:	b.ge	40cdcc <__fxstatat@plt+0xa22c>  // b.tcont
  40cbf4:	ldr	q0, [sp, #32]
  40cbf8:	bl	413ec8 <_obstack_memory_used@@Base+0x1c10>
  40cbfc:	cmp	w28, #0x0
  40cc00:	mov	x24, x0
  40cc04:	cset	w19, eq  // eq = none
  40cc08:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cc0c:	mov	v1.16b, v0.16b
  40cc10:	ldr	q0, [sp, #32]
  40cc14:	bl	413430 <_obstack_memory_used@@Base+0x1178>
  40cc18:	cmp	w0, #0x0
  40cc1c:	cset	w8, ne  // ne = any
  40cc20:	and	w8, w19, w8
  40cc24:	add	x0, x8, x24
  40cc28:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cc2c:	b	40cdd0 <__fxstatat@plt+0xa230>
  40cc30:	mov	w0, w22
  40cc34:	str	q0, [sp, #32]
  40cc38:	mov	x27, x19
  40cc3c:	bl	413e60 <_obstack_memory_used@@Base+0x1ba8>
  40cc40:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cc44:	str	q0, [sp, #48]
  40cc48:	ldr	q0, [x8, #1776]
  40cc4c:	mov	w21, wzr
  40cc50:	str	q0, [sp, #64]
  40cc54:	ldp	q1, q0, [sp, #48]
  40cc58:	mov	w19, w21
  40cc5c:	bl	413678 <_obstack_memory_used@@Base+0x13c0>
  40cc60:	ldr	q1, [sp, #48]
  40cc64:	add	w21, w21, #0x1
  40cc68:	str	q0, [sp, #64]
  40cc6c:	bl	413678 <_obstack_memory_used@@Base+0x13c0>
  40cc70:	cmp	w19, #0x6
  40cc74:	b.hi	40cc88 <__fxstatat@plt+0xa0e8>  // b.pmore
  40cc78:	ldr	q1, [sp, #32]
  40cc7c:	bl	413538 <_obstack_memory_used@@Base+0x1280>
  40cc80:	cmp	w0, #0x0
  40cc84:	b.le	40cc54 <__fxstatat@plt+0xa0b4>
  40cc88:	ldr	q0, [sp, #32]
  40cc8c:	ldr	q1, [sp, #64]
  40cc90:	bl	412b10 <_obstack_memory_used@@Base+0x858>
  40cc94:	ldr	x25, [sp, #24]
  40cc98:	cmp	w28, #0x1
  40cc9c:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cca0:	str	q0, [sp, #64]
  40cca4:	b.eq	40ccfc <__fxstatat@plt+0xa15c>  // b.none
  40cca8:	ldr	q1, [x26, #1792]
  40ccac:	bl	413538 <_obstack_memory_used@@Base+0x1280>
  40ccb0:	ldr	q1, [sp, #64]
  40ccb4:	cmp	w0, #0x0
  40ccb8:	mov	v0.16b, v1.16b
  40ccbc:	b.ge	40ccfc <__fxstatat@plt+0xa15c>  // b.tcont
  40ccc0:	mov	v0.16b, v1.16b
  40ccc4:	bl	413ec8 <_obstack_memory_used@@Base+0x1c10>
  40ccc8:	cmp	w28, #0x0
  40cccc:	mov	x25, x0
  40ccd0:	cset	w19, eq  // eq = none
  40ccd4:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40ccd8:	mov	v1.16b, v0.16b
  40ccdc:	ldr	q0, [sp, #64]
  40cce0:	bl	413430 <_obstack_memory_used@@Base+0x1178>
  40cce4:	cmp	w0, #0x0
  40cce8:	cset	w8, ne  // ne = any
  40ccec:	and	w8, w19, w8
  40ccf0:	add	x0, x8, x25
  40ccf4:	ldr	x25, [sp, #24]
  40ccf8:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40ccfc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cd00:	add	x3, x3, #0x726
  40cd04:	mov	w1, #0x1                   	// #1
  40cd08:	mov	x2, #0xffffffffffffffff    	// #-1
  40cd0c:	mov	x0, x25
  40cd10:	bl	402560 <__sprintf_chk@plt>
  40cd14:	mov	x0, x25
  40cd18:	bl	402540 <strlen@plt>
  40cd1c:	ldr	q0, [sp, #64]
  40cd20:	tst	w23, #0x20
  40cd24:	mov	w8, #0x2                   	// #2
  40cd28:	cinc	x8, x8, eq  // eq = none
  40cd2c:	add	x8, x8, x24
  40cd30:	cmp	x8, x0
  40cd34:	b.cc	40cd54 <__fxstatat@plt+0xa1b4>  // b.lo, b.ul, b.last
  40cd38:	mov	x2, x0
  40cd3c:	add	x19, x24, #0x1
  40cd40:	tbz	w23, #3, 40ce5c <__fxstatat@plt+0xa2bc>
  40cd44:	add	x8, x2, x25
  40cd48:	ldurb	w8, [x8, #-1]
  40cd4c:	cmp	w8, #0x30
  40cd50:	b.ne	40ce5c <__fxstatat@plt+0xa2bc>  // b.any
  40cd54:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cd58:	ldr	q1, [x8, #1808]
  40cd5c:	str	q1, [sp, #64]
  40cd60:	bl	413678 <_obstack_memory_used@@Base+0x13c0>
  40cd64:	cmp	w28, #0x1
  40cd68:	b.eq	40cdb8 <__fxstatat@plt+0xa218>  // b.none
  40cd6c:	ldr	q1, [x26, #1792]
  40cd70:	str	q0, [sp, #48]
  40cd74:	bl	413538 <_obstack_memory_used@@Base+0x1280>
  40cd78:	cmp	w0, #0x0
  40cd7c:	b.ge	40ce2c <__fxstatat@plt+0xa28c>  // b.tcont
  40cd80:	ldr	q0, [sp, #48]
  40cd84:	bl	413ec8 <_obstack_memory_used@@Base+0x1c10>
  40cd88:	cmp	w28, #0x0
  40cd8c:	mov	x24, x0
  40cd90:	cset	w19, eq  // eq = none
  40cd94:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cd98:	mov	v1.16b, v0.16b
  40cd9c:	ldr	q0, [sp, #48]
  40cda0:	bl	413430 <_obstack_memory_used@@Base+0x1178>
  40cda4:	cmp	w0, #0x0
  40cda8:	cset	w8, ne  // ne = any
  40cdac:	and	w8, w19, w8
  40cdb0:	add	x0, x8, x24
  40cdb4:	bl	413fe8 <_obstack_memory_used@@Base+0x1d30>
  40cdb8:	ldr	q1, [sp, #64]
  40cdbc:	b	40ce30 <__fxstatat@plt+0xa290>
  40cdc0:	ldr	x25, [sp, #24]
  40cdc4:	mov	x27, x19
  40cdc8:	b	40cdd0 <__fxstatat@plt+0xa230>
  40cdcc:	ldr	q0, [sp, #32]
  40cdd0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  40cdd4:	add	x3, x3, #0x720
  40cdd8:	mov	w1, #0x1                   	// #1
  40cddc:	mov	x2, #0xffffffffffffffff    	// #-1
  40cde0:	mov	x0, x25
  40cde4:	bl	402560 <__sprintf_chk@plt>
  40cde8:	mov	x0, x25
  40cdec:	bl	402540 <strlen@plt>
  40cdf0:	mov	x2, x0
  40cdf4:	mov	x19, xzr
  40cdf8:	mov	w21, #0xffffffff            	// #-1
  40cdfc:	b	40ce5c <__fxstatat@plt+0xa2bc>
  40ce00:	mov	w9, wzr
  40ce04:	mov	w8, wzr
  40ce08:	mul	x27, x10, x26
  40ce0c:	ldr	w23, [sp, #20]
  40ce10:	tbz	w23, #4, 40ce24 <__fxstatat@plt+0xa284>
  40ce14:	cmp	x27, x22
  40ce18:	b.cs	40ce78 <__fxstatat@plt+0xa2d8>  // b.hs, b.nlast
  40ce1c:	mov	w21, wzr
  40ce20:	b	40cf70 <__fxstatat@plt+0xa3d0>
  40ce24:	mov	w21, #0xffffffff            	// #-1
  40ce28:	b	40cf70 <__fxstatat@plt+0xa3d0>
  40ce2c:	ldp	q0, q1, [sp, #48]
  40ce30:	bl	412b10 <_obstack_memory_used@@Base+0x858>
  40ce34:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  40ce38:	add	x3, x3, #0x720
  40ce3c:	mov	w1, #0x1                   	// #1
  40ce40:	mov	x2, #0xffffffffffffffff    	// #-1
  40ce44:	mov	x0, x25
  40ce48:	bl	402560 <__sprintf_chk@plt>
  40ce4c:	mov	x0, x25
  40ce50:	bl	402540 <strlen@plt>
  40ce54:	mov	x2, x0
  40ce58:	mov	x19, xzr
  40ce5c:	sub	x24, x27, x2
  40ce60:	mov	x0, x24
  40ce64:	mov	x1, x25
  40ce68:	bl	4024e0 <memmove@plt>
  40ce6c:	sub	x26, x27, x19
  40ce70:	mov	x19, x27
  40ce74:	b	40d018 <__fxstatat@plt+0xa478>
  40ce78:	mov	w12, wzr
  40ce7c:	mov	w10, #0xa                   	// #10
  40ce80:	mov	w11, #0x2                   	// #2
  40ce84:	mov	x13, x27
  40ce88:	udiv	x27, x27, x22
  40ce8c:	msub	w13, w27, w22, w13
  40ce90:	madd	w13, w13, w10, w8
  40ce94:	udiv	w8, w13, w22
  40ce98:	msub	w13, w8, w22, w13
  40ce9c:	lsl	w13, w13, #1
  40cea0:	add	w13, w13, w9, lsr #1
  40cea4:	cmp	w13, w22
  40cea8:	b.cs	40ceb8 <__fxstatat@plt+0xa318>  // b.hs, b.nlast
  40ceac:	cmn	w13, w9
  40ceb0:	cset	w9, ne  // ne = any
  40ceb4:	b	40cec4 <__fxstatat@plt+0xa324>
  40ceb8:	add	w9, w13, w9
  40cebc:	cmp	w22, w9
  40cec0:	cinc	w9, w11, cc  // cc = lo, ul, last
  40cec4:	cmp	w12, #0x6
  40cec8:	add	w21, w12, #0x1
  40cecc:	b.hi	40cedc <__fxstatat@plt+0xa33c>  // b.pmore
  40ced0:	cmp	x27, x22
  40ced4:	mov	w12, w21
  40ced8:	b.cs	40ce84 <__fxstatat@plt+0xa2e4>  // b.hs, b.nlast
  40cedc:	cmp	x27, #0x9
  40cee0:	b.hi	40cf70 <__fxstatat@plt+0xa3d0>  // b.pmore
  40cee4:	cmp	w28, #0x1
  40cee8:	b.ne	40cf00 <__fxstatat@plt+0xa360>  // b.any
  40ceec:	and	w10, w8, #0x1
  40cef0:	add	w10, w9, w10
  40cef4:	cmp	w10, #0x2
  40cef8:	b.hi	40cf08 <__fxstatat@plt+0xa368>  // b.pmore
  40cefc:	b	40cf30 <__fxstatat@plt+0xa390>
  40cf00:	cbnz	w28, 40cf30 <__fxstatat@plt+0xa390>
  40cf04:	cbz	w9, 40cf30 <__fxstatat@plt+0xa390>
  40cf08:	add	w8, w8, #0x1
  40cf0c:	cmp	w8, #0xa
  40cf10:	b.ne	40cf2c <__fxstatat@plt+0xa38c>  // b.any
  40cf14:	cmp	x27, #0x8
  40cf18:	mov	w8, wzr
  40cf1c:	b.hi	40cf68 <__fxstatat@plt+0xa3c8>  // b.pmore
  40cf20:	add	x27, x27, #0x1
  40cf24:	mov	w9, w8
  40cf28:	b	40cf30 <__fxstatat@plt+0xa390>
  40cf2c:	mov	w9, wzr
  40cf30:	tbz	w23, #3, 40cf38 <__fxstatat@plt+0xa398>
  40cf34:	cbz	w8, 40cf70 <__fxstatat@plt+0xa3d0>
  40cf38:	ldr	x10, [sp, #24]
  40cf3c:	add	w8, w8, #0x30
  40cf40:	mov	x1, x25
  40cf44:	mov	x2, x24
  40cf48:	add	x9, x10, #0x286
  40cf4c:	sub	x26, x9, x24
  40cf50:	mov	x0, x26
  40cf54:	strb	w8, [x10, #646]
  40cf58:	bl	4024d0 <memcpy@plt>
  40cf5c:	mov	w9, wzr
  40cf60:	mov	w8, wzr
  40cf64:	b	40cf74 <__fxstatat@plt+0xa3d4>
  40cf68:	mov	w27, #0xa                   	// #10
  40cf6c:	mov	w9, w8
  40cf70:	mov	x26, x19
  40cf74:	cbz	w28, 40cf98 <__fxstatat@plt+0xa3f8>
  40cf78:	cmp	w28, #0x1
  40cf7c:	b.ne	40cfe4 <__fxstatat@plt+0xa444>  // b.any
  40cf80:	and	x10, x27, #0x1
  40cf84:	cmn	x10, w9, uxtw
  40cf88:	cinc	w8, w8, ne  // ne = any
  40cf8c:	cmp	w8, #0x5
  40cf90:	b.gt	40cfa4 <__fxstatat@plt+0xa404>
  40cf94:	b	40cfe4 <__fxstatat@plt+0xa444>
  40cf98:	add	w8, w8, w9
  40cf9c:	cmp	w8, #0x1
  40cfa0:	b.lt	40cfe4 <__fxstatat@plt+0xa444>  // b.tstop
  40cfa4:	cmp	w21, #0x7
  40cfa8:	add	x27, x27, #0x1
  40cfac:	b.gt	40cfe4 <__fxstatat@plt+0xa444>
  40cfb0:	tbz	w23, #4, 40cfe4 <__fxstatat@plt+0xa444>
  40cfb4:	cmp	x27, x22
  40cfb8:	b.ne	40cfe4 <__fxstatat@plt+0xa444>  // b.any
  40cfbc:	add	w21, w21, #0x1
  40cfc0:	tbnz	w23, #3, 40cfe0 <__fxstatat@plt+0xa440>
  40cfc4:	mov	w8, #0x30                  	// #48
  40cfc8:	strb	w8, [x26, #-1]!
  40cfcc:	sub	x26, x26, x24
  40cfd0:	mov	x0, x26
  40cfd4:	mov	x1, x25
  40cfd8:	mov	x2, x24
  40cfdc:	bl	4024d0 <memcpy@plt>
  40cfe0:	mov	w27, #0x1                   	// #1
  40cfe4:	ldr	x25, [sp, #24]
  40cfe8:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40cfec:	movk	x8, #0xcccd
  40cff0:	mov	w9, #0xa                   	// #10
  40cff4:	mov	x24, x26
  40cff8:	umulh	x10, x27, x8
  40cffc:	lsr	x10, x10, #3
  40d000:	msub	w11, w10, w9, w27
  40d004:	orr	w11, w11, #0x30
  40d008:	cmp	x27, #0x9
  40d00c:	strb	w11, [x24, #-1]!
  40d010:	mov	x27, x10
  40d014:	b.hi	40cff8 <__fxstatat@plt+0xa458>  // b.pmore
  40d018:	tbnz	w23, #2, 40d028 <__fxstatat@plt+0xa488>
  40d01c:	ldr	x9, [sp, #8]
  40d020:	tbnz	w23, #7, 40d114 <__fxstatat@plt+0xa574>
  40d024:	b	40d1b0 <__fxstatat@plt+0xa610>
  40d028:	ldr	x0, [sp]
  40d02c:	str	x22, [sp, #48]
  40d030:	str	x19, [sp, #64]
  40d034:	sub	x28, x26, x24
  40d038:	bl	402540 <strlen@plt>
  40d03c:	mov	x25, x0
  40d040:	sub	x0, x29, #0x2c
  40d044:	mov	w3, #0x29                  	// #41
  40d048:	mov	x1, x24
  40d04c:	mov	x2, x28
  40d050:	sub	x19, x29, #0x2c
  40d054:	bl	4026e0 <__memcpy_chk@plt>
  40d058:	ldrb	w8, [x20]
  40d05c:	cmp	x8, #0x0
  40d060:	cset	w23, eq  // eq = none
  40d064:	cmp	w8, #0xff
  40d068:	csel	x9, x28, x8, eq  // eq = none
  40d06c:	cmp	w8, #0x0
  40d070:	csinv	x8, x9, xzr, ne  // ne = any
  40d074:	cmp	x8, x28
  40d078:	csel	x27, x28, x8, hi  // hi = pmore
  40d07c:	sub	x24, x26, x27
  40d080:	sub	x26, x28, x27
  40d084:	add	x1, x19, x26
  40d088:	mov	x0, x24
  40d08c:	mov	x2, x27
  40d090:	bl	4024d0 <memcpy@plt>
  40d094:	cbz	x26, 40d0fc <__fxstatat@plt+0xa55c>
  40d098:	ldr	x22, [sp]
  40d09c:	neg	x28, x25
  40d0a0:	add	x24, x24, x28
  40d0a4:	tst	w23, #0x1
  40d0a8:	mov	x0, x24
  40d0ac:	mov	x1, x22
  40d0b0:	mov	x2, x25
  40d0b4:	cinc	x20, x20, eq  // eq = none
  40d0b8:	bl	4024d0 <memcpy@plt>
  40d0bc:	ldrb	w8, [x20]
  40d0c0:	cmp	x8, #0x0
  40d0c4:	cset	w23, eq  // eq = none
  40d0c8:	cmp	w8, #0xff
  40d0cc:	csel	x9, x26, x8, eq  // eq = none
  40d0d0:	cmp	w8, #0x0
  40d0d4:	csel	x8, x27, x9, eq  // eq = none
  40d0d8:	cmp	x26, x8
  40d0dc:	csel	x27, x26, x8, cc  // cc = lo, ul, last
  40d0e0:	sub	x24, x24, x27
  40d0e4:	sub	x26, x26, x27
  40d0e8:	add	x1, x19, x26
  40d0ec:	mov	x0, x24
  40d0f0:	mov	x2, x27
  40d0f4:	bl	4024d0 <memcpy@plt>
  40d0f8:	cbnz	x26, 40d0a0 <__fxstatat@plt+0xa500>
  40d0fc:	ldr	w23, [sp, #20]
  40d100:	ldr	x19, [sp, #64]
  40d104:	ldr	x25, [sp, #24]
  40d108:	ldr	x9, [sp, #8]
  40d10c:	ldr	x22, [sp, #48]
  40d110:	tbz	w23, #7, 40d1b0 <__fxstatat@plt+0xa610>
  40d114:	tbz	w21, #31, 40d150 <__fxstatat@plt+0xa5b0>
  40d118:	cmp	x9, #0x2
  40d11c:	b.cc	40d144 <__fxstatat@plt+0xa5a4>  // b.lo, b.ul, b.last
  40d120:	mov	w21, wzr
  40d124:	mov	w8, #0x1                   	// #1
  40d128:	cmp	w21, #0x7
  40d12c:	b.eq	40d14c <__fxstatat@plt+0xa5ac>  // b.none
  40d130:	mul	x8, x8, x22
  40d134:	cmp	x8, x9
  40d138:	add	w21, w21, #0x1
  40d13c:	b.cc	40d128 <__fxstatat@plt+0xa588>  // b.lo, b.ul, b.last
  40d140:	b	40d150 <__fxstatat@plt+0xa5b0>
  40d144:	mov	w21, wzr
  40d148:	b	40d150 <__fxstatat@plt+0xa5b0>
  40d14c:	mov	w21, #0x8                   	// #8
  40d150:	and	w8, w23, #0x100
  40d154:	tbz	w23, #6, 40d16c <__fxstatat@plt+0xa5cc>
  40d158:	orr	w9, w21, w8
  40d15c:	cbz	w9, 40d16c <__fxstatat@plt+0xa5cc>
  40d160:	add	x19, x25, #0x288
  40d164:	mov	w9, #0x20                  	// #32
  40d168:	strb	w9, [x25, #647]
  40d16c:	cbz	w21, 40d194 <__fxstatat@plt+0xa5f4>
  40d170:	tbnz	w23, #5, 40d184 <__fxstatat@plt+0xa5e4>
  40d174:	cmp	w21, #0x1
  40d178:	b.ne	40d184 <__fxstatat@plt+0xa5e4>  // b.any
  40d17c:	mov	w9, #0x6b                  	// #107
  40d180:	b	40d190 <__fxstatat@plt+0xa5f0>
  40d184:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d188:	add	x9, x9, #0x758
  40d18c:	ldrb	w9, [x9, w21, sxtw]
  40d190:	strb	w9, [x19], #1
  40d194:	cbz	w8, 40d1b0 <__fxstatat@plt+0xa610>
  40d198:	tbz	w23, #5, 40d1a8 <__fxstatat@plt+0xa608>
  40d19c:	cbz	w21, 40d1a8 <__fxstatat@plt+0xa608>
  40d1a0:	mov	w8, #0x69                  	// #105
  40d1a4:	strb	w8, [x19], #1
  40d1a8:	mov	w8, #0x42                  	// #66
  40d1ac:	strb	w8, [x19], #1
  40d1b0:	strb	wzr, [x19]
  40d1b4:	mov	x0, x24
  40d1b8:	ldp	x20, x19, [sp, #208]
  40d1bc:	ldp	x22, x21, [sp, #192]
  40d1c0:	ldp	x24, x23, [sp, #176]
  40d1c4:	ldp	x26, x25, [sp, #160]
  40d1c8:	ldp	x28, x27, [sp, #144]
  40d1cc:	ldp	x29, x30, [sp, #128]
  40d1d0:	add	sp, sp, #0xe0
  40d1d4:	ret
  40d1d8:	stp	x29, x30, [sp, #-64]!
  40d1dc:	stp	x20, x19, [sp, #48]
  40d1e0:	mov	x19, x2
  40d1e4:	mov	x20, x1
  40d1e8:	str	x23, [sp, #16]
  40d1ec:	stp	x22, x21, [sp, #32]
  40d1f0:	mov	x29, sp
  40d1f4:	cbnz	x0, 40d218 <__fxstatat@plt+0xa678>
  40d1f8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x4d48>
  40d1fc:	add	x0, x0, #0xe1b
  40d200:	bl	402b40 <getenv@plt>
  40d204:	cbnz	x0, 40d218 <__fxstatat@plt+0xa678>
  40d208:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d20c:	add	x0, x0, #0x72c
  40d210:	bl	402b40 <getenv@plt>
  40d214:	cbz	x0, 40d308 <__fxstatat@plt+0xa768>
  40d218:	mov	x8, x0
  40d21c:	ldrb	w9, [x8], #1
  40d220:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d224:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d228:	add	x22, x22, #0x780
  40d22c:	cmp	w9, #0x27
  40d230:	csel	x21, x8, x0, eq  // eq = none
  40d234:	cset	w9, eq  // eq = none
  40d238:	add	x1, x1, #0x768
  40d23c:	mov	w3, #0x4                   	// #4
  40d240:	mov	x0, x21
  40d244:	mov	x2, x22
  40d248:	lsl	w23, w9, #2
  40d24c:	bl	40a68c <__fxstatat@plt+0x7aec>
  40d250:	tbnz	w0, #31, 40d274 <__fxstatat@plt+0xa6d4>
  40d254:	sbfiz	x8, x0, #2, #32
  40d258:	ldr	w8, [x22, x8]
  40d25c:	mov	w9, #0x1                   	// #1
  40d260:	str	x9, [x19]
  40d264:	orr	w23, w8, w23
  40d268:	mov	w0, wzr
  40d26c:	str	w23, [x20]
  40d270:	b	40d298 <__fxstatat@plt+0xa6f8>
  40d274:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d278:	add	x4, x4, #0x736
  40d27c:	add	x1, x29, #0x18
  40d280:	mov	x0, x21
  40d284:	mov	w2, wzr
  40d288:	mov	x3, x19
  40d28c:	bl	411b18 <__fxstatat@plt+0xef78>
  40d290:	cbz	w0, 40d2d8 <__fxstatat@plt+0xa738>
  40d294:	str	wzr, [x20]
  40d298:	ldr	x8, [x19]
  40d29c:	cbnz	x8, 40d2c4 <__fxstatat@plt+0xa724>
  40d2a0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d2a4:	add	x0, x0, #0x748
  40d2a8:	bl	402b40 <getenv@plt>
  40d2ac:	cmp	x0, #0x0
  40d2b0:	mov	w8, #0x200                 	// #512
  40d2b4:	mov	w9, #0x400                 	// #1024
  40d2b8:	csel	x8, x9, x8, eq  // eq = none
  40d2bc:	mov	w0, #0x4                   	// #4
  40d2c0:	str	x8, [x19]
  40d2c4:	ldp	x20, x19, [sp, #48]
  40d2c8:	ldp	x22, x21, [sp, #32]
  40d2cc:	ldr	x23, [sp, #16]
  40d2d0:	ldp	x29, x30, [sp], #64
  40d2d4:	ret
  40d2d8:	ldrb	w8, [x21]
  40d2dc:	sub	w8, w8, #0x30
  40d2e0:	cmp	w8, #0xa
  40d2e4:	b.cc	40d268 <__fxstatat@plt+0xa6c8>  // b.lo, b.ul, b.last
  40d2e8:	ldr	x8, [x29, #24]
  40d2ec:	cmp	x8, x21
  40d2f0:	b.eq	40d330 <__fxstatat@plt+0xa790>  // b.none
  40d2f4:	ldrb	w9, [x21, #1]!
  40d2f8:	sub	w9, w9, #0x30
  40d2fc:	cmp	w9, #0xa
  40d300:	b.cs	40d2ec <__fxstatat@plt+0xa74c>  // b.hs, b.nlast
  40d304:	b	40d268 <__fxstatat@plt+0xa6c8>
  40d308:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d30c:	add	x0, x0, #0x748
  40d310:	bl	402b40 <getenv@plt>
  40d314:	cmp	x0, #0x0
  40d318:	mov	w8, #0x200                 	// #512
  40d31c:	mov	w9, #0x400                 	// #1024
  40d320:	csel	x8, x9, x8, eq  // eq = none
  40d324:	mov	w23, wzr
  40d328:	str	x8, [x19]
  40d32c:	b	40d268 <__fxstatat@plt+0xa6c8>
  40d330:	ldurb	w9, [x8, #-1]
  40d334:	orr	w10, w23, #0x80
  40d338:	orr	w23, w23, #0x180
  40d33c:	cmp	w9, #0x42
  40d340:	csel	w9, w23, w10, eq  // eq = none
  40d344:	b.ne	40d354 <__fxstatat@plt+0xa7b4>  // b.any
  40d348:	ldurb	w8, [x8, #-2]
  40d34c:	cmp	w8, #0x69
  40d350:	b.ne	40d268 <__fxstatat@plt+0xa6c8>  // b.any
  40d354:	orr	w23, w9, #0x20
  40d358:	b	40d268 <__fxstatat@plt+0xa6c8>
  40d35c:	stp	x29, x30, [sp, #-48]!
  40d360:	stp	x22, x21, [sp, #16]
  40d364:	adrp	x22, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40d368:	stp	x20, x19, [sp, #32]
  40d36c:	ldr	x20, [x22, #1872]
  40d370:	mov	w19, w0
  40d374:	mov	x29, sp
  40d378:	cbz	x20, 40d390 <__fxstatat@plt+0xa7f0>
  40d37c:	ldr	w8, [x20]
  40d380:	cmp	w8, w19
  40d384:	b.eq	40d3dc <__fxstatat@plt+0xa83c>  // b.none
  40d388:	ldr	x20, [x20, #8]
  40d38c:	cbnz	x20, 40d37c <__fxstatat@plt+0xa7dc>
  40d390:	mov	w0, w19
  40d394:	bl	402960 <getpwuid@plt>
  40d398:	cbz	x0, 40d3a4 <__fxstatat@plt+0xa804>
  40d39c:	ldr	x21, [x0]
  40d3a0:	b	40d3ac <__fxstatat@plt+0xa80c>
  40d3a4:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d3a8:	add	x21, x21, #0x2c9
  40d3ac:	mov	x0, x21
  40d3b0:	bl	402540 <strlen@plt>
  40d3b4:	add	x8, x0, #0x18
  40d3b8:	and	x0, x8, #0xfffffffffffffff8
  40d3bc:	bl	4111f4 <__fxstatat@plt+0xe654>
  40d3c0:	mov	x20, x0
  40d3c4:	str	w19, [x0], #16
  40d3c8:	mov	x1, x21
  40d3cc:	bl	402a10 <strcpy@plt>
  40d3d0:	ldr	x8, [x22, #1872]
  40d3d4:	str	x20, [x22, #1872]
  40d3d8:	str	x8, [x20, #8]
  40d3dc:	ldrb	w8, [x20, #16]!
  40d3e0:	ldp	x22, x21, [sp, #16]
  40d3e4:	cmp	w8, #0x0
  40d3e8:	csel	x0, xzr, x20, eq  // eq = none
  40d3ec:	ldp	x20, x19, [sp, #32]
  40d3f0:	ldp	x29, x30, [sp], #48
  40d3f4:	ret
  40d3f8:	stp	x29, x30, [sp, #-64]!
  40d3fc:	stp	x22, x21, [sp, #32]
  40d400:	adrp	x22, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40d404:	stp	x20, x19, [sp, #48]
  40d408:	ldr	x20, [x22, #1872]
  40d40c:	mov	x19, x0
  40d410:	str	x23, [sp, #16]
  40d414:	mov	x29, sp
  40d418:	cbz	x20, 40d444 <__fxstatat@plt+0xa8a4>
  40d41c:	ldrb	w21, [x19]
  40d420:	mov	x0, x20
  40d424:	ldrb	w8, [x0, #16]!
  40d428:	cmp	w8, w21
  40d42c:	b.ne	40d43c <__fxstatat@plt+0xa89c>  // b.any
  40d430:	mov	x1, x19
  40d434:	bl	402950 <strcmp@plt>
  40d438:	cbz	w0, 40d4d4 <__fxstatat@plt+0xa934>
  40d43c:	ldr	x20, [x20, #8]
  40d440:	cbnz	x20, 40d420 <__fxstatat@plt+0xa880>
  40d444:	adrp	x23, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40d448:	ldr	x20, [x23, #1880]
  40d44c:	cbz	x20, 40d478 <__fxstatat@plt+0xa8d8>
  40d450:	ldrb	w21, [x19]
  40d454:	mov	x0, x20
  40d458:	ldrb	w8, [x0, #16]!
  40d45c:	cmp	w8, w21
  40d460:	b.ne	40d470 <__fxstatat@plt+0xa8d0>  // b.any
  40d464:	mov	x1, x19
  40d468:	bl	402950 <strcmp@plt>
  40d46c:	cbz	w0, 40d4d0 <__fxstatat@plt+0xa930>
  40d470:	ldr	x20, [x20, #8]
  40d474:	cbnz	x20, 40d454 <__fxstatat@plt+0xa8b4>
  40d478:	mov	x0, x19
  40d47c:	bl	4027d0 <getpwnam@plt>
  40d480:	mov	x21, x0
  40d484:	mov	x0, x19
  40d488:	bl	402540 <strlen@plt>
  40d48c:	add	x8, x0, #0x18
  40d490:	and	x0, x8, #0xfffffffffffffff8
  40d494:	bl	4111f4 <__fxstatat@plt+0xe654>
  40d498:	mov	x20, x0
  40d49c:	add	x0, x0, #0x10
  40d4a0:	mov	x1, x19
  40d4a4:	bl	402a10 <strcpy@plt>
  40d4a8:	cbz	x21, 40d4c4 <__fxstatat@plt+0xa924>
  40d4ac:	ldr	w8, [x21, #16]
  40d4b0:	ldr	x9, [x22, #1872]
  40d4b4:	str	x20, [x22, #1872]
  40d4b8:	str	w8, [x20]
  40d4bc:	str	x9, [x20, #8]
  40d4c0:	b	40d4d4 <__fxstatat@plt+0xa934>
  40d4c4:	ldr	x8, [x23, #1880]
  40d4c8:	str	x20, [x23, #1880]
  40d4cc:	str	x8, [x20, #8]
  40d4d0:	mov	x20, xzr
  40d4d4:	mov	x0, x20
  40d4d8:	ldp	x20, x19, [sp, #48]
  40d4dc:	ldp	x22, x21, [sp, #32]
  40d4e0:	ldr	x23, [sp, #16]
  40d4e4:	ldp	x29, x30, [sp], #64
  40d4e8:	ret
  40d4ec:	stp	x29, x30, [sp, #-48]!
  40d4f0:	stp	x22, x21, [sp, #16]
  40d4f4:	adrp	x22, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40d4f8:	stp	x20, x19, [sp, #32]
  40d4fc:	ldr	x20, [x22, #1888]
  40d500:	mov	w19, w0
  40d504:	mov	x29, sp
  40d508:	cbz	x20, 40d520 <__fxstatat@plt+0xa980>
  40d50c:	ldr	w8, [x20]
  40d510:	cmp	w8, w19
  40d514:	b.eq	40d56c <__fxstatat@plt+0xa9cc>  // b.none
  40d518:	ldr	x20, [x20, #8]
  40d51c:	cbnz	x20, 40d50c <__fxstatat@plt+0xa96c>
  40d520:	mov	w0, w19
  40d524:	bl	402b60 <getgrgid@plt>
  40d528:	cbz	x0, 40d534 <__fxstatat@plt+0xa994>
  40d52c:	ldr	x21, [x0]
  40d530:	b	40d53c <__fxstatat@plt+0xa99c>
  40d534:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x5d48>
  40d538:	add	x21, x21, #0x2c9
  40d53c:	mov	x0, x21
  40d540:	bl	402540 <strlen@plt>
  40d544:	add	x8, x0, #0x18
  40d548:	and	x0, x8, #0xfffffffffffffff8
  40d54c:	bl	4111f4 <__fxstatat@plt+0xe654>
  40d550:	mov	x20, x0
  40d554:	str	w19, [x0], #16
  40d558:	mov	x1, x21
  40d55c:	bl	402a10 <strcpy@plt>
  40d560:	ldr	x8, [x22, #1888]
  40d564:	str	x20, [x22, #1888]
  40d568:	str	x8, [x20, #8]
  40d56c:	ldrb	w8, [x20, #16]!
  40d570:	ldp	x22, x21, [sp, #16]
  40d574:	cmp	w8, #0x0
  40d578:	csel	x0, xzr, x20, eq  // eq = none
  40d57c:	ldp	x20, x19, [sp, #32]
  40d580:	ldp	x29, x30, [sp], #48
  40d584:	ret
  40d588:	stp	x29, x30, [sp, #-64]!
  40d58c:	stp	x22, x21, [sp, #32]
  40d590:	adrp	x22, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40d594:	stp	x20, x19, [sp, #48]
  40d598:	ldr	x20, [x22, #1888]
  40d59c:	mov	x19, x0
  40d5a0:	str	x23, [sp, #16]
  40d5a4:	mov	x29, sp
  40d5a8:	cbz	x20, 40d5d4 <__fxstatat@plt+0xaa34>
  40d5ac:	ldrb	w21, [x19]
  40d5b0:	mov	x0, x20
  40d5b4:	ldrb	w8, [x0, #16]!
  40d5b8:	cmp	w8, w21
  40d5bc:	b.ne	40d5cc <__fxstatat@plt+0xaa2c>  // b.any
  40d5c0:	mov	x1, x19
  40d5c4:	bl	402950 <strcmp@plt>
  40d5c8:	cbz	w0, 40d664 <__fxstatat@plt+0xaac4>
  40d5cc:	ldr	x20, [x20, #8]
  40d5d0:	cbnz	x20, 40d5b0 <__fxstatat@plt+0xaa10>
  40d5d4:	adrp	x23, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40d5d8:	ldr	x20, [x23, #1896]
  40d5dc:	cbz	x20, 40d608 <__fxstatat@plt+0xaa68>
  40d5e0:	ldrb	w21, [x19]
  40d5e4:	mov	x0, x20
  40d5e8:	ldrb	w8, [x0, #16]!
  40d5ec:	cmp	w8, w21
  40d5f0:	b.ne	40d600 <__fxstatat@plt+0xaa60>  // b.any
  40d5f4:	mov	x1, x19
  40d5f8:	bl	402950 <strcmp@plt>
  40d5fc:	cbz	w0, 40d660 <__fxstatat@plt+0xaac0>
  40d600:	ldr	x20, [x20, #8]
  40d604:	cbnz	x20, 40d5e4 <__fxstatat@plt+0xaa44>
  40d608:	mov	x0, x19
  40d60c:	bl	402600 <getgrnam@plt>
  40d610:	mov	x21, x0
  40d614:	mov	x0, x19
  40d618:	bl	402540 <strlen@plt>
  40d61c:	add	x8, x0, #0x18
  40d620:	and	x0, x8, #0xfffffffffffffff8
  40d624:	bl	4111f4 <__fxstatat@plt+0xe654>
  40d628:	mov	x20, x0
  40d62c:	add	x0, x0, #0x10
  40d630:	mov	x1, x19
  40d634:	bl	402a10 <strcpy@plt>
  40d638:	cbz	x21, 40d654 <__fxstatat@plt+0xaab4>
  40d63c:	ldr	w8, [x21, #16]
  40d640:	ldr	x9, [x22, #1888]
  40d644:	str	x20, [x22, #1888]
  40d648:	str	w8, [x20]
  40d64c:	str	x9, [x20, #8]
  40d650:	b	40d664 <__fxstatat@plt+0xaac4>
  40d654:	ldr	x8, [x23, #1896]
  40d658:	str	x20, [x23, #1896]
  40d65c:	str	x8, [x20, #8]
  40d660:	mov	x20, xzr
  40d664:	mov	x0, x20
  40d668:	ldp	x20, x19, [sp, #48]
  40d66c:	ldp	x22, x21, [sp, #32]
  40d670:	ldr	x23, [sp, #16]
  40d674:	ldp	x29, x30, [sp], #64
  40d678:	ret
  40d67c:	mov	x8, x0
  40d680:	mov	x0, x1
  40d684:	strb	wzr, [x0, #20]!
  40d688:	tbnz	x8, #63, 40d6c4 <__fxstatat@plt+0xab24>
  40d68c:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40d690:	movk	x9, #0x6667
  40d694:	mov	w10, #0xa                   	// #10
  40d698:	smulh	x11, x8, x9
  40d69c:	asr	x13, x11, #2
  40d6a0:	add	x11, x13, x11, lsr #63
  40d6a4:	add	x12, x8, #0x9
  40d6a8:	msub	w8, w11, w10, w8
  40d6ac:	add	w8, w8, #0x30
  40d6b0:	cmp	x12, #0x12
  40d6b4:	strb	w8, [x0, #-1]!
  40d6b8:	mov	x8, x11
  40d6bc:	b.hi	40d698 <__fxstatat@plt+0xaaf8>  // b.pmore
  40d6c0:	ret
  40d6c4:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40d6c8:	add	x0, x1, #0x13
  40d6cc:	movk	x9, #0x6667
  40d6d0:	mov	w10, #0xa                   	// #10
  40d6d4:	smulh	x11, x8, x9
  40d6d8:	asr	x13, x11, #2
  40d6dc:	neg	w12, w8
  40d6e0:	add	x11, x13, x11, lsr #63
  40d6e4:	madd	w12, w11, w10, w12
  40d6e8:	add	x8, x8, #0x9
  40d6ec:	add	w12, w12, #0x30
  40d6f0:	cmp	x8, #0x12
  40d6f4:	strb	w12, [x0], #-1
  40d6f8:	mov	x8, x11
  40d6fc:	b.hi	40d6d4 <__fxstatat@plt+0xab34>  // b.pmore
  40d700:	mov	w8, #0x2d                  	// #45
  40d704:	strb	w8, [x0]
  40d708:	ret
  40d70c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40d710:	movk	x8, #0xcccd
  40d714:	strb	wzr, [x1, #20]!
  40d718:	mov	w9, #0xa                   	// #10
  40d71c:	umulh	x10, x0, x8
  40d720:	lsr	x10, x10, #3
  40d724:	msub	w11, w10, w9, w0
  40d728:	orr	w11, w11, #0x30
  40d72c:	cmp	x0, #0x9
  40d730:	strb	w11, [x1, #-1]!
  40d734:	mov	x0, x10
  40d738:	b.hi	40d71c <__fxstatat@plt+0xab7c>  // b.pmore
  40d73c:	mov	x0, x1
  40d740:	ret
  40d744:	sub	sp, sp, #0x70
  40d748:	stp	x29, x30, [sp, #16]
  40d74c:	stp	x28, x27, [sp, #32]
  40d750:	stp	x26, x25, [sp, #48]
  40d754:	stp	x24, x23, [sp, #64]
  40d758:	stp	x22, x21, [sp, #80]
  40d75c:	stp	x20, x19, [sp, #96]
  40d760:	add	x29, sp, #0x10
  40d764:	mov	w22, w5
  40d768:	mov	w23, w4
  40d76c:	mov	x25, x3
  40d770:	mov	x28, x2
  40d774:	mov	x19, x1
  40d778:	mov	x24, x0
  40d77c:	bl	402540 <strlen@plt>
  40d780:	mov	x21, x0
  40d784:	tbnz	w22, #1, 40d83c <__fxstatat@plt+0xac9c>
  40d788:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40d78c:	cmp	x0, #0x2
  40d790:	b.cc	40d83c <__fxstatat@plt+0xac9c>  // b.lo, b.ul, b.last
  40d794:	mov	x0, xzr
  40d798:	mov	x1, x24
  40d79c:	mov	x2, xzr
  40d7a0:	str	x28, [sp, #8]
  40d7a4:	bl	402570 <mbstowcs@plt>
  40d7a8:	cmn	x0, #0x1
  40d7ac:	b.eq	40d9cc <__fxstatat@plt+0xae2c>  // b.none
  40d7b0:	add	x26, x0, #0x1
  40d7b4:	mov	x28, x0
  40d7b8:	lsl	x0, x26, #2
  40d7bc:	bl	402730 <malloc@plt>
  40d7c0:	cbz	x0, 40d9e0 <__fxstatat@plt+0xae40>
  40d7c4:	mov	x1, x24
  40d7c8:	mov	x2, x26
  40d7cc:	mov	x20, x0
  40d7d0:	bl	402570 <mbstowcs@plt>
  40d7d4:	cbz	x0, 40d9f8 <__fxstatat@plt+0xae58>
  40d7d8:	str	wzr, [x20, x28, lsl #2]
  40d7dc:	ldr	w0, [x20]
  40d7e0:	mov	x8, x20
  40d7e4:	str	x20, [sp]
  40d7e8:	cbz	w0, 40da14 <__fxstatat@plt+0xae74>
  40d7ec:	mov	w28, wzr
  40d7f0:	add	x27, x8, #0x4
  40d7f4:	mov	w20, #0xfffd                	// #65533
  40d7f8:	bl	402b10 <iswprint@plt>
  40d7fc:	cbnz	w0, 40d808 <__fxstatat@plt+0xac68>
  40d800:	mov	w28, #0x1                   	// #1
  40d804:	stur	w20, [x27, #-4]
  40d808:	ldr	w0, [x27], #4
  40d80c:	cbnz	w0, 40d7f8 <__fxstatat@plt+0xac58>
  40d810:	ldr	x20, [sp]
  40d814:	mov	x1, x26
  40d818:	mov	x0, x20
  40d81c:	bl	402760 <wcswidth@plt>
  40d820:	sxtw	x27, w0
  40d824:	tbz	w28, #0, 40da24 <__fxstatat@plt+0xae84>
  40d828:	mov	x0, xzr
  40d82c:	mov	x1, x20
  40d830:	mov	x2, xzr
  40d834:	bl	402a70 <wcstombs@plt>
  40d838:	b	40da38 <__fxstatat@plt+0xae98>
  40d83c:	mov	x20, xzr
  40d840:	mov	x10, xzr
  40d844:	mov	x27, x21
  40d848:	ldr	x8, [x25]
  40d84c:	cmp	x27, x8
  40d850:	csel	x9, x8, x27, hi  // hi = pmore
  40d854:	csel	x21, x8, x21, hi  // hi = pmore
  40d858:	cmp	x8, x27
  40d85c:	sub	x8, x8, x9
  40d860:	csel	x27, x8, xzr, hi  // hi = pmore
  40d864:	str	x9, [x25]
  40d868:	cbz	w23, 40d880 <__fxstatat@plt+0xace0>
  40d86c:	cmp	w23, #0x1
  40d870:	b.ne	40d888 <__fxstatat@plt+0xace8>  // b.any
  40d874:	mov	x26, x27
  40d878:	mov	x27, xzr
  40d87c:	b	40d898 <__fxstatat@plt+0xacf8>
  40d880:	mov	x26, xzr
  40d884:	b	40d898 <__fxstatat@plt+0xacf8>
  40d888:	and	x8, x27, #0x1
  40d88c:	lsr	x9, x27, #1
  40d890:	add	x26, x8, x27, lsr #1
  40d894:	mov	x27, x9
  40d898:	tst	w22, #0x4
  40d89c:	csel	x23, x26, xzr, eq  // eq = none
  40d8a0:	tst	w22, #0x8
  40d8a4:	csel	x25, x27, xzr, eq  // eq = none
  40d8a8:	cbz	x28, 40d990 <__fxstatat@plt+0xadf0>
  40d8ac:	add	x8, x19, x28
  40d8b0:	mov	x22, x24
  40d8b4:	mov	x24, x28
  40d8b8:	sub	x28, x8, #0x1
  40d8bc:	str	x20, [sp, #8]
  40d8c0:	mov	x20, x10
  40d8c4:	cmp	x28, x19
  40d8c8:	mov	x0, x19
  40d8cc:	b.ls	40d914 <__fxstatat@plt+0xad74>  // b.plast
  40d8d0:	mov	x0, x19
  40d8d4:	cbz	x23, 40d914 <__fxstatat@plt+0xad74>
  40d8d8:	mvn	x8, x19
  40d8dc:	add	x8, x28, x8
  40d8e0:	sub	x9, x23, #0x1
  40d8e4:	cmp	x9, x8
  40d8e8:	csel	x8, x8, x9, hi  // hi = pmore
  40d8ec:	add	x2, x8, #0x1
  40d8f0:	mov	w1, #0x20                  	// #32
  40d8f4:	mov	x0, x19
  40d8f8:	bl	4027c0 <memset@plt>
  40d8fc:	sub	x8, x26, #0x1
  40d900:	sub	x9, x24, #0x2
  40d904:	cmp	x8, x9
  40d908:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  40d90c:	add	x8, x8, x19
  40d910:	add	x0, x8, #0x1
  40d914:	sub	x8, x28, x0
  40d918:	cmp	x21, x8
  40d91c:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  40d920:	mov	x3, #0xffffffffffffffff    	// #-1
  40d924:	mov	x1, x22
  40d928:	strb	wzr, [x0]
  40d92c:	bl	402a90 <__mempcpy_chk@plt>
  40d930:	mov	x22, x0
  40d934:	cbz	x25, 40d984 <__fxstatat@plt+0xade4>
  40d938:	cmp	x22, x28
  40d93c:	b.cs	40d984 <__fxstatat@plt+0xade4>  // b.hs, b.nlast
  40d940:	mvn	x8, x22
  40d944:	add	x8, x28, x8
  40d948:	sub	x9, x25, #0x1
  40d94c:	cmp	x9, x8
  40d950:	csel	x8, x8, x9, hi  // hi = pmore
  40d954:	add	x2, x8, #0x1
  40d958:	mov	w1, #0x20                  	// #32
  40d95c:	mov	x0, x22
  40d960:	bl	4027c0 <memset@plt>
  40d964:	sub	x8, x24, x22
  40d968:	add	x8, x8, x19
  40d96c:	sub	x8, x8, #0x2
  40d970:	sub	x9, x27, #0x1
  40d974:	cmp	x9, x8
  40d978:	csel	x8, x8, x9, hi  // hi = pmore
  40d97c:	add	x8, x8, x22
  40d980:	add	x22, x8, #0x1
  40d984:	mov	x10, x20
  40d988:	ldr	x20, [sp, #8]
  40d98c:	strb	wzr, [x22]
  40d990:	add	x8, x23, x21
  40d994:	add	x19, x8, x25
  40d998:	mov	x0, x10
  40d99c:	bl	402990 <free@plt>
  40d9a0:	mov	x0, x20
  40d9a4:	bl	402990 <free@plt>
  40d9a8:	mov	x0, x19
  40d9ac:	ldp	x20, x19, [sp, #96]
  40d9b0:	ldp	x22, x21, [sp, #80]
  40d9b4:	ldp	x24, x23, [sp, #64]
  40d9b8:	ldp	x26, x25, [sp, #48]
  40d9bc:	ldp	x28, x27, [sp, #32]
  40d9c0:	ldp	x29, x30, [sp, #16]
  40d9c4:	add	sp, sp, #0x70
  40d9c8:	ret
  40d9cc:	mov	x20, xzr
  40d9d0:	tbz	w22, #0, 40d9ec <__fxstatat@plt+0xae4c>
  40d9d4:	mov	x10, x20
  40d9d8:	mov	x27, x21
  40d9dc:	b	40dae0 <__fxstatat@plt+0xaf40>
  40d9e0:	ldr	x28, [sp, #8]
  40d9e4:	mov	x20, xzr
  40d9e8:	tbnz	w22, #0, 40da0c <__fxstatat@plt+0xae6c>
  40d9ec:	mov	x19, #0xffffffffffffffff    	// #-1
  40d9f0:	mov	x10, x20
  40d9f4:	b	40d998 <__fxstatat@plt+0xadf8>
  40d9f8:	mov	x8, xzr
  40d9fc:	mov	x27, x21
  40da00:	mov	x10, x20
  40da04:	mov	x20, xzr
  40da08:	b	40dae0 <__fxstatat@plt+0xaf40>
  40da0c:	mov	x10, x20
  40da10:	b	40d844 <__fxstatat@plt+0xaca4>
  40da14:	mov	x0, x8
  40da18:	mov	x1, x26
  40da1c:	bl	402760 <wcswidth@plt>
  40da20:	sxtw	x27, w0
  40da24:	ldr	x8, [x25]
  40da28:	ldr	x28, [sp, #8]
  40da2c:	cmp	x27, x8
  40da30:	b.ls	40da94 <__fxstatat@plt+0xaef4>  // b.plast
  40da34:	mov	x0, x21
  40da38:	add	x28, x0, #0x1
  40da3c:	mov	x0, x28
  40da40:	bl	402730 <malloc@plt>
  40da44:	mov	x20, x0
  40da48:	cbz	x0, 40daa0 <__fxstatat@plt+0xaf00>
  40da4c:	ldr	x21, [sp]
  40da50:	ldr	w0, [x21]
  40da54:	cbz	w0, 40dab0 <__fxstatat@plt+0xaf10>
  40da58:	ldr	x24, [x25]
  40da5c:	mov	x26, xzr
  40da60:	bl	402740 <wcwidth@plt>
  40da64:	cmn	w0, #0x1
  40da68:	b.ne	40da78 <__fxstatat@plt+0xaed8>  // b.any
  40da6c:	mov	w8, #0xfffd                	// #65533
  40da70:	mov	w0, #0x1                   	// #1
  40da74:	str	w8, [x21]
  40da78:	add	x27, x26, w0, sxtw
  40da7c:	cmp	x27, x24
  40da80:	b.hi	40dab8 <__fxstatat@plt+0xaf18>  // b.pmore
  40da84:	ldr	w0, [x21, #4]!
  40da88:	mov	x26, x27
  40da8c:	cbnz	w0, 40da60 <__fxstatat@plt+0xaec0>
  40da90:	b	40dabc <__fxstatat@plt+0xaf1c>
  40da94:	ldr	x10, [sp]
  40da98:	mov	x20, xzr
  40da9c:	b	40d848 <__fxstatat@plt+0xaca8>
  40daa0:	ldr	x10, [sp]
  40daa4:	tbnz	w22, #0, 40dae0 <__fxstatat@plt+0xaf40>
  40daa8:	mov	x19, #0xffffffffffffffff    	// #-1
  40daac:	b	40d998 <__fxstatat@plt+0xadf8>
  40dab0:	mov	x27, xzr
  40dab4:	b	40dabc <__fxstatat@plt+0xaf1c>
  40dab8:	mov	x27, x26
  40dabc:	str	wzr, [x21]
  40dac0:	ldr	x21, [sp]
  40dac4:	mov	x0, x20
  40dac8:	mov	x2, x28
  40dacc:	mov	x1, x21
  40dad0:	bl	402a70 <wcstombs@plt>
  40dad4:	mov	x10, x21
  40dad8:	mov	x21, x0
  40dadc:	mov	x24, x20
  40dae0:	ldr	x28, [sp, #8]
  40dae4:	b	40d848 <__fxstatat@plt+0xaca8>
  40dae8:	stp	x29, x30, [sp, #-80]!
  40daec:	stp	x26, x25, [sp, #16]
  40daf0:	stp	x24, x23, [sp, #32]
  40daf4:	stp	x22, x21, [sp, #48]
  40daf8:	stp	x20, x19, [sp, #64]
  40dafc:	ldr	x26, [x1]
  40db00:	mov	w19, w3
  40db04:	mov	w20, w2
  40db08:	mov	x21, x1
  40db0c:	mov	x22, x0
  40db10:	mov	x23, xzr
  40db14:	mov	x0, x26
  40db18:	mov	x24, x26
  40db1c:	mov	x29, sp
  40db20:	cmp	x0, x24
  40db24:	b.cc	40db80 <__fxstatat@plt+0xafe0>  // b.lo, b.ul, b.last
  40db28:	add	x24, x0, #0x1
  40db2c:	mov	x0, x23
  40db30:	mov	x1, x24
  40db34:	bl	402830 <realloc@plt>
  40db38:	cbz	x0, 40db74 <__fxstatat@plt+0xafd4>
  40db3c:	mov	x25, x0
  40db40:	mov	x0, x22
  40db44:	mov	x1, x25
  40db48:	mov	x2, x24
  40db4c:	mov	x3, x21
  40db50:	mov	w4, w20
  40db54:	mov	w5, w19
  40db58:	str	x26, [x21]
  40db5c:	bl	40d744 <__fxstatat@plt+0xaba4>
  40db60:	cmn	x0, #0x1
  40db64:	mov	x23, x25
  40db68:	b.ne	40db20 <__fxstatat@plt+0xaf80>  // b.any
  40db6c:	mov	x0, x25
  40db70:	b	40db78 <__fxstatat@plt+0xafd8>
  40db74:	mov	x0, x23
  40db78:	bl	402990 <free@plt>
  40db7c:	mov	x23, xzr
  40db80:	mov	x0, x23
  40db84:	ldp	x20, x19, [sp, #64]
  40db88:	ldp	x22, x21, [sp, #48]
  40db8c:	ldp	x24, x23, [sp, #32]
  40db90:	ldp	x26, x25, [sp, #16]
  40db94:	ldp	x29, x30, [sp], #80
  40db98:	ret
  40db9c:	stp	x29, x30, [sp, #-32]!
  40dba0:	stp	x20, x19, [sp, #16]
  40dba4:	mov	x29, sp
  40dba8:	mov	w19, w1
  40dbac:	mov	x20, x0
  40dbb0:	bl	402540 <strlen@plt>
  40dbb4:	mov	x1, x0
  40dbb8:	mov	x0, x20
  40dbbc:	mov	w2, w19
  40dbc0:	ldp	x20, x19, [sp, #16]
  40dbc4:	ldp	x29, x30, [sp], #32
  40dbc8:	b	40dbcc <__fxstatat@plt+0xb02c>
  40dbcc:	sub	sp, sp, #0x60
  40dbd0:	stp	x29, x30, [sp, #16]
  40dbd4:	str	x25, [sp, #32]
  40dbd8:	stp	x24, x23, [sp, #48]
  40dbdc:	stp	x22, x21, [sp, #64]
  40dbe0:	stp	x20, x19, [sp, #80]
  40dbe4:	add	x29, sp, #0x10
  40dbe8:	mov	w19, w2
  40dbec:	mov	x21, x1
  40dbf0:	mov	x20, x0
  40dbf4:	add	x23, x0, x1
  40dbf8:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40dbfc:	cmp	x0, #0x1
  40dc00:	b.ls	40dcf0 <__fxstatat@plt+0xb150>  // b.plast
  40dc04:	cmp	x21, #0x1
  40dc08:	b.lt	40dd34 <__fxstatat@plt+0xb194>  // b.tstop
  40dc0c:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x5d48>
  40dc10:	mov	w21, wzr
  40dc14:	mov	w24, #0x7fffffff            	// #2147483647
  40dc18:	add	x25, x25, #0x788
  40dc1c:	ldrb	w8, [x20]
  40dc20:	sub	w8, w8, #0x20
  40dc24:	cmp	w8, #0x5e
  40dc28:	b.hi	40dc50 <__fxstatat@plt+0xb0b0>  // b.pmore
  40dc2c:	adr	x9, 40dc3c <__fxstatat@plt+0xb09c>
  40dc30:	ldrb	w10, [x25, x8]
  40dc34:	add	x9, x9, x10, lsl #2
  40dc38:	br	x9
  40dc3c:	add	x20, x20, #0x1
  40dc40:	add	w21, w21, #0x1
  40dc44:	cmp	x20, x23
  40dc48:	b.cc	40dc1c <__fxstatat@plt+0xb07c>  // b.lo, b.ul, b.last
  40dc4c:	b	40dd40 <__fxstatat@plt+0xb1a0>
  40dc50:	str	xzr, [x29, #24]
  40dc54:	sub	x2, x23, x20
  40dc58:	sub	x0, x29, #0x4
  40dc5c:	add	x3, x29, #0x18
  40dc60:	mov	x1, x20
  40dc64:	bl	411f30 <__fxstatat@plt+0xf390>
  40dc68:	cbz	x0, 40dc84 <__fxstatat@plt+0xb0e4>
  40dc6c:	mov	x22, x0
  40dc70:	cmn	x0, #0x2
  40dc74:	b.eq	40dcd8 <__fxstatat@plt+0xb138>  // b.none
  40dc78:	cmn	x22, #0x1
  40dc7c:	b.ne	40dc88 <__fxstatat@plt+0xb0e8>  // b.any
  40dc80:	b	40dce4 <__fxstatat@plt+0xb144>
  40dc84:	mov	w22, #0x1                   	// #1
  40dc88:	ldur	w0, [x29, #-4]
  40dc8c:	bl	402740 <wcwidth@plt>
  40dc90:	tbnz	w0, #31, 40dca8 <__fxstatat@plt+0xb108>
  40dc94:	sub	w8, w24, w21
  40dc98:	cmp	w0, w8
  40dc9c:	b.gt	40dd3c <__fxstatat@plt+0xb19c>
  40dca0:	add	w21, w0, w21
  40dca4:	b	40dcc4 <__fxstatat@plt+0xb124>
  40dca8:	tbnz	w19, #1, 40dce8 <__fxstatat@plt+0xb148>
  40dcac:	ldur	w0, [x29, #-4]
  40dcb0:	bl	402650 <iswcntrl@plt>
  40dcb4:	cbnz	w0, 40dcc4 <__fxstatat@plt+0xb124>
  40dcb8:	cmp	w21, w24
  40dcbc:	b.eq	40dd3c <__fxstatat@plt+0xb19c>  // b.none
  40dcc0:	add	w21, w21, #0x1
  40dcc4:	add	x0, x29, #0x18
  40dcc8:	add	x20, x20, x22
  40dccc:	bl	4028d0 <mbsinit@plt>
  40dcd0:	cbz	w0, 40dc54 <__fxstatat@plt+0xb0b4>
  40dcd4:	b	40dc44 <__fxstatat@plt+0xb0a4>
  40dcd8:	mov	x20, x23
  40dcdc:	tbz	w19, #0, 40dc40 <__fxstatat@plt+0xb0a0>
  40dce0:	b	40dce8 <__fxstatat@plt+0xb148>
  40dce4:	tbz	w19, #0, 40dc3c <__fxstatat@plt+0xb09c>
  40dce8:	mov	w21, #0xffffffff            	// #-1
  40dcec:	b	40dd40 <__fxstatat@plt+0xb1a0>
  40dcf0:	cmp	x21, #0x1
  40dcf4:	b.lt	40dd34 <__fxstatat@plt+0xb194>  // b.tstop
  40dcf8:	bl	402970 <__ctype_b_loc@plt>
  40dcfc:	ldr	x8, [x0]
  40dd00:	mov	w21, wzr
  40dd04:	ldrb	w9, [x20], #1
  40dd08:	ldrh	w9, [x8, x9, lsl #1]
  40dd0c:	tbnz	w9, #14, 40dd18 <__fxstatat@plt+0xb178>
  40dd10:	tbnz	w19, #1, 40dce8 <__fxstatat@plt+0xb148>
  40dd14:	tbnz	w9, #1, 40dd28 <__fxstatat@plt+0xb188>
  40dd18:	mov	w9, #0x7fffffff            	// #2147483647
  40dd1c:	cmp	w21, w9
  40dd20:	b.eq	40dd3c <__fxstatat@plt+0xb19c>  // b.none
  40dd24:	add	w21, w21, #0x1
  40dd28:	cmp	x20, x23
  40dd2c:	b.cc	40dd04 <__fxstatat@plt+0xb164>  // b.lo, b.ul, b.last
  40dd30:	b	40dd40 <__fxstatat@plt+0xb1a0>
  40dd34:	mov	w21, wzr
  40dd38:	b	40dd40 <__fxstatat@plt+0xb1a0>
  40dd3c:	mov	w21, #0x7fffffff            	// #2147483647
  40dd40:	mov	w0, w21
  40dd44:	ldp	x20, x19, [sp, #80]
  40dd48:	ldp	x22, x21, [sp, #64]
  40dd4c:	ldp	x24, x23, [sp, #48]
  40dd50:	ldr	x25, [sp, #32]
  40dd54:	ldp	x29, x30, [sp, #16]
  40dd58:	add	sp, sp, #0x60
  40dd5c:	ret
  40dd60:	add	x8, x0, x1, lsl #3
  40dd64:	mov	x3, x2
  40dd68:	mov	x2, x8
  40dd6c:	b	40dd70 <__fxstatat@plt+0xb1d0>
  40dd70:	sub	sp, sp, #0x90
  40dd74:	stp	x20, x19, [sp, #128]
  40dd78:	mov	x20, x3
  40dd7c:	cmp	x1, #0x2
  40dd80:	mov	x19, x0
  40dd84:	stp	x29, x30, [sp, #48]
  40dd88:	stp	x28, x27, [sp, #64]
  40dd8c:	stp	x26, x25, [sp, #80]
  40dd90:	stp	x24, x23, [sp, #96]
  40dd94:	stp	x22, x21, [sp, #112]
  40dd98:	add	x29, sp, #0x30
  40dd9c:	b.hi	40ddc4 <__fxstatat@plt+0xb224>  // b.pmore
  40dda0:	b.ne	40df8c <__fxstatat@plt+0xb3ec>  // b.any
  40dda4:	ldp	x21, x22, [x19]
  40dda8:	mov	x0, x21
  40ddac:	mov	x1, x22
  40ddb0:	blr	x20
  40ddb4:	cmp	w0, #0x1
  40ddb8:	b.lt	40df8c <__fxstatat@plt+0xb3ec>  // b.tstop
  40ddbc:	stp	x22, x21, [x19]
  40ddc0:	b	40df8c <__fxstatat@plt+0xb3ec>
  40ddc4:	lsr	x28, x1, #1
  40ddc8:	add	x21, x19, x28, lsl #3
  40ddcc:	mov	x22, x1
  40ddd0:	sub	x1, x1, x1, lsr #1
  40ddd4:	mov	x0, x21
  40ddd8:	mov	x3, x20
  40dddc:	mov	x27, x2
  40dde0:	bl	40dd70 <__fxstatat@plt+0xb1d0>
  40dde4:	cmp	x22, #0x3
  40dde8:	stp	x27, x28, [x29, #-16]
  40ddec:	b.ne	40ddfc <__fxstatat@plt+0xb25c>  // b.any
  40ddf0:	ldr	x24, [x19]
  40ddf4:	str	x24, [x27]
  40ddf8:	b	40decc <__fxstatat@plt+0xb32c>
  40ddfc:	lsr	x23, x22, #2
  40de00:	add	x25, x19, x23, lsl #3
  40de04:	sub	x1, x28, x22, lsr #2
  40de08:	mov	x0, x25
  40de0c:	mov	x2, x27
  40de10:	mov	x3, x20
  40de14:	str	x21, [sp, #8]
  40de18:	bl	40dd70 <__fxstatat@plt+0xb1d0>
  40de1c:	mov	x0, x19
  40de20:	mov	x1, x23
  40de24:	mov	x2, x27
  40de28:	mov	x3, x20
  40de2c:	bl	40dd70 <__fxstatat@plt+0xb1d0>
  40de30:	ldr	x26, [x25]
  40de34:	mov	x8, x28
  40de38:	mov	x21, xzr
  40de3c:	add	x28, x19, #0x8
  40de40:	sub	x24, x8, #0x1
  40de44:	mov	x25, x27
  40de48:	str	x23, [sp, #16]
  40de4c:	ldr	x27, [x19, x21, lsl #3]
  40de50:	mov	x0, x27
  40de54:	mov	x1, x26
  40de58:	add	x25, x25, #0x8
  40de5c:	blr	x20
  40de60:	cmp	w0, #0x0
  40de64:	b.le	40de80 <__fxstatat@plt+0xb2e0>
  40de68:	cmp	x24, x23
  40de6c:	stur	x26, [x25, #-8]
  40de70:	b.eq	40dea4 <__fxstatat@plt+0xb304>  // b.none
  40de74:	ldr	x26, [x28, x23, lsl #3]
  40de78:	add	x23, x23, #0x1
  40de7c:	b	40de50 <__fxstatat@plt+0xb2b0>
  40de80:	ldr	x8, [sp, #16]
  40de84:	add	x21, x21, #0x1
  40de88:	stur	x27, [x25, #-8]
  40de8c:	cmp	x21, x8
  40de90:	b.ne	40de4c <__fxstatat@plt+0xb2ac>  // b.any
  40de94:	ldur	x28, [x29, #-8]
  40de98:	mov	x21, x23
  40de9c:	str	x28, [sp, #16]
  40dea0:	b	40dea8 <__fxstatat@plt+0xb308>
  40dea4:	ldur	x28, [x29, #-8]
  40dea8:	ldr	x8, [sp, #16]
  40deac:	add	x1, x19, x21, lsl #3
  40deb0:	mov	x0, x25
  40deb4:	sub	x8, x8, x21
  40deb8:	lsl	x2, x8, #3
  40debc:	bl	4024d0 <memcpy@plt>
  40dec0:	ldur	x8, [x29, #-16]
  40dec4:	ldr	x21, [sp, #8]
  40dec8:	ldr	x24, [x8]
  40decc:	ldr	x23, [x21]
  40ded0:	mov	w8, #0x1                   	// #1
  40ded4:	mov	x25, xzr
  40ded8:	mov	x9, xzr
  40dedc:	add	x10, x19, #0x8
  40dee0:	sub	x8, x8, x22
  40dee4:	stp	x10, x19, [sp, #16]
  40dee8:	str	x8, [sp, #8]
  40deec:	mov	x27, xzr
  40def0:	add	x21, x10, x28, lsl #3
  40def4:	add	x22, x8, x28
  40def8:	mov	x26, x9
  40defc:	add	x19, x19, x9, lsl #3
  40df00:	mov	x0, x24
  40df04:	mov	x1, x23
  40df08:	blr	x20
  40df0c:	cmp	w0, #0x0
  40df10:	b.le	40df2c <__fxstatat@plt+0xb38c>
  40df14:	cmn	x22, x27
  40df18:	str	x23, [x19, x27, lsl #3]
  40df1c:	b.eq	40df64 <__fxstatat@plt+0xb3c4>  // b.none
  40df20:	ldr	x23, [x21, x27, lsl #3]
  40df24:	add	x27, x27, #0x1
  40df28:	b	40df00 <__fxstatat@plt+0xb360>
  40df2c:	ldr	x19, [sp, #24]
  40df30:	ldur	x9, [x29, #-8]
  40df34:	add	x25, x25, #0x1
  40df38:	add	x8, x19, x26, lsl #3
  40df3c:	cmp	x25, x9
  40df40:	str	x24, [x8, x27, lsl #3]
  40df44:	b.eq	40df8c <__fxstatat@plt+0xb3ec>  // b.none
  40df48:	ldur	x8, [x29, #-16]
  40df4c:	add	x28, x28, x27
  40df50:	ldr	x24, [x8, x25, lsl #3]
  40df54:	add	x8, x26, x27
  40df58:	add	x9, x8, #0x1
  40df5c:	ldp	x8, x10, [sp, #8]
  40df60:	b	40deec <__fxstatat@plt+0xb34c>
  40df64:	ldur	x9, [x29, #-16]
  40df68:	ldr	x8, [sp, #24]
  40df6c:	add	x1, x9, x25, lsl #3
  40df70:	ldur	x9, [x29, #-8]
  40df74:	add	x8, x8, x26, lsl #3
  40df78:	add	x8, x8, x27, lsl #3
  40df7c:	add	x0, x8, #0x8
  40df80:	sub	x9, x9, x25
  40df84:	lsl	x2, x9, #3
  40df88:	bl	4024d0 <memcpy@plt>
  40df8c:	ldp	x20, x19, [sp, #128]
  40df90:	ldp	x22, x21, [sp, #112]
  40df94:	ldp	x24, x23, [sp, #96]
  40df98:	ldp	x26, x25, [sp, #80]
  40df9c:	ldp	x28, x27, [sp, #64]
  40dfa0:	ldp	x29, x30, [sp, #48]
  40dfa4:	add	sp, sp, #0x90
  40dfa8:	ret
  40dfac:	sub	sp, sp, #0x20
  40dfb0:	mov	x7, x4
  40dfb4:	mov	w6, #0xffffffff            	// #-1
  40dfb8:	str	w5, [sp]
  40dfbc:	mov	w4, wzr
  40dfc0:	mov	w5, wzr
  40dfc4:	stp	x29, x30, [sp, #16]
  40dfc8:	add	x29, sp, #0x10
  40dfcc:	bl	40dfdc <__fxstatat@plt+0xb43c>
  40dfd0:	ldp	x29, x30, [sp, #16]
  40dfd4:	add	sp, sp, #0x20
  40dfd8:	ret
  40dfdc:	stp	x29, x30, [sp, #-96]!
  40dfe0:	stp	x28, x27, [sp, #16]
  40dfe4:	stp	x26, x25, [sp, #32]
  40dfe8:	stp	x24, x23, [sp, #48]
  40dfec:	stp	x22, x21, [sp, #64]
  40dff0:	stp	x20, x19, [sp, #80]
  40dff4:	mov	x29, sp
  40dff8:	sub	sp, sp, #0x4c0
  40dffc:	ldr	x8, [x3, #48]
  40e000:	ldr	w9, [x3, #8]
  40e004:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  40e008:	mov	x25, x2
  40e00c:	add	x10, x10, #0x2c9
  40e010:	cmp	x8, #0x0
  40e014:	csel	x12, x10, x8, eq  // eq = none
  40e018:	ldrb	w8, [x25]
  40e01c:	mov	w11, #0xc                   	// #12
  40e020:	cmp	w9, #0x0
  40e024:	csel	w10, w11, w9, eq  // eq = none
  40e028:	subs	w9, w9, #0xc
  40e02c:	mov	x2, x0
  40e030:	csel	w9, w9, w10, gt
  40e034:	str	x7, [sp, #64]
  40e038:	str	w4, [sp, #116]
  40e03c:	str	x1, [sp, #136]
  40e040:	cbz	w8, 40f510 <__fxstatat@plt+0xc970>
  40e044:	stp	w9, w5, [sp, #44]
  40e048:	ldr	w9, [x29, #96]
  40e04c:	sub	x10, x29, #0x28
  40e050:	add	x11, sp, #0x90
  40e054:	str	x12, [sp, #32]
  40e058:	str	w9, [sp, #52]
  40e05c:	sub	x9, x29, #0x20
  40e060:	add	x9, x9, #0x17
  40e064:	str	x9, [sp, #96]
  40e068:	orr	x9, x10, #0x2
  40e06c:	str	x9, [sp, #88]
  40e070:	orr	x9, x10, #0x3
  40e074:	sub	x12, x12, #0x1
  40e078:	str	x9, [sp, #72]
  40e07c:	orr	x9, x11, #0x1
  40e080:	mov	x27, #0x2500                	// #9472
  40e084:	mov	w22, w6
  40e088:	mov	x0, xzr
  40e08c:	mov	w1, #0xa                   	// #10
  40e090:	stp	x12, x9, [sp, #16]
  40e094:	sub	x9, x11, #0x1
  40e098:	mov	w20, #0x1                   	// #1
  40e09c:	movk	x27, #0x1000, lsl #48
  40e0a0:	str	x3, [sp, #104]
  40e0a4:	str	x9, [sp, #56]
  40e0a8:	and	w9, w8, #0xff
  40e0ac:	cmp	w9, #0x25
  40e0b0:	b.ne	40e110 <__fxstatat@plt+0xb570>  // b.any
  40e0b4:	ldr	w23, [sp, #116]
  40e0b8:	mov	w11, #0xcccc                	// #52428
  40e0bc:	mov	w24, wzr
  40e0c0:	mov	w28, wzr
  40e0c4:	movk	w11, #0xccc, lsl #16
  40e0c8:	add	x25, x25, #0x1
  40e0cc:	ldrb	w8, [x25]
  40e0d0:	sub	w9, w8, #0x23
  40e0d4:	cmp	w9, #0x3c
  40e0d8:	b.hi	40e174 <__fxstatat@plt+0xb5d4>  // b.pmore
  40e0dc:	lsl	x10, x20, x9
  40e0e0:	tst	x10, x27
  40e0e4:	b.eq	40e0f4 <__fxstatat@plt+0xb554>  // b.none
  40e0e8:	add	x25, x25, #0x1
  40e0ec:	mov	w28, w8
  40e0f0:	b	40e0cc <__fxstatat@plt+0xb52c>
  40e0f4:	cbz	x9, 40e108 <__fxstatat@plt+0xb568>
  40e0f8:	cmp	x9, #0x3b
  40e0fc:	b.ne	40e174 <__fxstatat@plt+0xb5d4>  // b.any
  40e100:	mov	w23, #0x1                   	// #1
  40e104:	b	40e0c8 <__fxstatat@plt+0xb528>
  40e108:	mov	w24, #0x1                   	// #1
  40e10c:	b	40e0c8 <__fxstatat@plt+0xb528>
  40e110:	ldr	x10, [sp, #136]
  40e114:	bic	w9, w22, w22, asr #31
  40e118:	cmp	w9, #0x1
  40e11c:	csinc	w19, w9, wzr, hi  // hi = pmore
  40e120:	sub	x10, x10, x0
  40e124:	cmp	x10, x19
  40e128:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40e12c:	cbz	x2, 40f1ac <__fxstatat@plt+0xc60c>
  40e130:	cmp	w9, #0x2
  40e134:	b.cc	40e16c <__fxstatat@plt+0xb5cc>  // b.lo, b.ul, b.last
  40e138:	sxtw	x8, w22
  40e13c:	sub	x21, x8, #0x1
  40e140:	mov	w1, #0x20                  	// #32
  40e144:	mov	x22, x0
  40e148:	mov	x0, x2
  40e14c:	mov	x23, x2
  40e150:	mov	x2, x21
  40e154:	bl	4027c0 <memset@plt>
  40e158:	ldrb	w8, [x25]
  40e15c:	mov	x2, x23
  40e160:	mov	w1, #0xa                   	// #10
  40e164:	mov	x0, x22
  40e168:	add	x2, x23, x21
  40e16c:	strb	w8, [x2], #1
  40e170:	b	40f1ac <__fxstatat@plt+0xc60c>
  40e174:	sub	w9, w8, #0x30
  40e178:	cmp	w9, #0x9
  40e17c:	b.hi	40e1c0 <__fxstatat@plt+0xb620>  // b.pmore
  40e180:	mov	w22, wzr
  40e184:	cmp	w22, w11
  40e188:	b.gt	40e19c <__fxstatat@plt+0xb5fc>
  40e18c:	b.ne	40e1a4 <__fxstatat@plt+0xb604>  // b.any
  40e190:	and	w9, w8, #0xff
  40e194:	cmp	w9, #0x37
  40e198:	b.ls	40e1a4 <__fxstatat@plt+0xb604>  // b.plast
  40e19c:	mov	w22, #0x7fffffff            	// #2147483647
  40e1a0:	b	40e1b0 <__fxstatat@plt+0xb610>
  40e1a4:	mul	w9, w22, w1
  40e1a8:	add	w8, w9, w8, uxtb
  40e1ac:	sub	w22, w8, #0x30
  40e1b0:	ldrb	w8, [x25, #1]!
  40e1b4:	sub	w9, w8, #0x30
  40e1b8:	cmp	w9, #0xa
  40e1bc:	b.cc	40e184 <__fxstatat@plt+0xb5e4>  // b.lo, b.ul, b.last
  40e1c0:	cmp	w8, #0x4f
  40e1c4:	b.eq	40e1d0 <__fxstatat@plt+0xb630>  // b.none
  40e1c8:	cmp	w8, #0x45
  40e1cc:	b.ne	40e1e0 <__fxstatat@plt+0xb640>  // b.any
  40e1d0:	ldrb	w10, [x25, #1]!
  40e1d4:	mov	w9, w8
  40e1d8:	mov	w8, w10
  40e1dc:	b	40e1e4 <__fxstatat@plt+0xb644>
  40e1e0:	mov	w9, wzr
  40e1e4:	sub	w12, w8, #0x25
  40e1e8:	cmp	w12, #0x55
  40e1ec:	b.hi	40e330 <__fxstatat@plt+0xb790>  // b.pmore
  40e1f0:	adrp	x15, 418000 <_obstack_memory_used@@Base+0x5d48>
  40e1f4:	add	x15, x15, #0x7e8
  40e1f8:	adr	x13, 40e224 <__fxstatat@plt+0xb684>
  40e1fc:	ldrh	w14, [x15, x12, lsl #1]
  40e200:	add	x13, x13, x14, lsl #2
  40e204:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x4d48>
  40e208:	mov	w16, wzr
  40e20c:	mov	w19, wzr
  40e210:	mov	w11, wzr
  40e214:	mov	x10, xzr
  40e218:	mov	w21, #0xffffffff            	// #-1
  40e21c:	add	x26, x26, #0xedc
  40e220:	br	x13
  40e224:	cmp	w9, #0x45
  40e228:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e22c:	ldr	x10, [sp, #104]
  40e230:	mov	w13, #0xffffff9c            	// #-100
  40e234:	mov	w14, #0x12c                 	// #300
  40e238:	ldr	w12, [x10, #20]
  40e23c:	ldp	w10, w11, [x10, #24]
  40e240:	cmp	w12, #0x0
  40e244:	sub	w15, w11, w10
  40e248:	csel	w13, w14, w13, lt  // lt = tstop
  40e24c:	add	w14, w15, #0x17e
  40e250:	mov	w15, #0x2493                	// #9363
  40e254:	movk	w15, #0x9249, lsl #16
  40e258:	smull	x15, w14, w15
  40e25c:	lsr	x15, x15, #32
  40e260:	add	w15, w15, w14
  40e264:	asr	w16, w15, #2
  40e268:	add	w15, w16, w15, lsr #31
  40e26c:	lsl	w16, w15, #3
  40e270:	sub	w15, w16, w15
  40e274:	sub	w14, w15, w14
  40e278:	add	w14, w11, w14
  40e27c:	adds	w14, w14, #0x3
  40e280:	add	w15, w13, w12
  40e284:	b.mi	40e998 <__fxstatat@plt+0xbdf8>  // b.first
  40e288:	tst	w15, #0x3
  40e28c:	mov	w13, #0x16d                 	// #365
  40e290:	b.ne	40e2cc <__fxstatat@plt+0xb72c>  // b.any
  40e294:	mov	w16, #0x5c29                	// #23593
  40e298:	mov	w17, #0xb850                	// #47184
  40e29c:	movk	w16, #0xc28f, lsl #16
  40e2a0:	movk	w17, #0x51e, lsl #16
  40e2a4:	mov	w18, #0xd70b                	// #55051
  40e2a8:	madd	w15, w15, w16, w17
  40e2ac:	movk	w18, #0xa3, lsl #16
  40e2b0:	ror	w16, w15, #2
  40e2b4:	ror	w15, w15, #4
  40e2b8:	cmp	w15, w18
  40e2bc:	mov	w15, #0x5c28                	// #23592
  40e2c0:	movk	w15, #0x28f, lsl #16
  40e2c4:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  40e2c8:	cinc	w13, w13, hi  // hi = pmore
  40e2cc:	add	w13, w10, w13
  40e2d0:	sub	w11, w11, w13
  40e2d4:	mov	w13, #0x2493                	// #9363
  40e2d8:	movk	w13, #0x9249, lsl #16
  40e2dc:	add	w11, w11, #0x17e
  40e2e0:	smull	x13, w11, w13
  40e2e4:	lsr	x13, x13, #32
  40e2e8:	add	w11, w13, w11
  40e2ec:	asr	w13, w11, #2
  40e2f0:	add	w11, w13, w11, lsr #31
  40e2f4:	lsl	w13, w11, #3
  40e2f8:	sub	w11, w13, w11
  40e2fc:	add	w10, w10, w11
  40e300:	sub	w10, w10, #0x17b
  40e304:	mvn	w11, w10
  40e308:	cmp	w10, #0x0
  40e30c:	lsr	w13, w11, #31
  40e310:	csel	w10, w10, w14, ge  // ge = tcont
  40e314:	b	40ea20 <__fxstatat@plt+0xbe80>
  40e318:	cmp	w9, #0x45
  40e31c:	orr	w23, w24, w23
  40e320:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e324:	mov	w16, wzr
  40e328:	mov	w19, wzr
  40e32c:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e330:	str	w23, [sp, #132]
  40e334:	cbnz	w8, 40f0a0 <__fxstatat@plt+0xc500>
  40e338:	sub	x25, x25, #0x1
  40e33c:	b	40f0a0 <__fxstatat@plt+0xc500>
  40e340:	cbnz	w9, 40f09c <__fxstatat@plt+0xc4fc>
  40e344:	ldr	x9, [sp, #136]
  40e348:	bic	w8, w22, w22, asr #31
  40e34c:	cmp	w8, #0x1
  40e350:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e354:	sub	x9, x9, x0
  40e358:	cmp	x9, x19
  40e35c:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40e360:	cbz	x2, 40f1ac <__fxstatat@plt+0xc60c>
  40e364:	cmp	w8, #0x2
  40e368:	b.cc	40f288 <__fxstatat@plt+0xc6e8>  // b.lo, b.ul, b.last
  40e36c:	sxtw	x9, w22
  40e370:	and	w8, w28, #0xff
  40e374:	cmp	w8, #0x30
  40e378:	sub	x21, x9, #0x1
  40e37c:	b.eq	40e388 <__fxstatat@plt+0xb7e8>  // b.none
  40e380:	cmp	w8, #0x2b
  40e384:	b.ne	40e140 <__fxstatat@plt+0xb5a0>  // b.any
  40e388:	mov	w1, #0x30                  	// #48
  40e38c:	b	40e144 <__fxstatat@plt+0xb5a4>
  40e390:	mov	w10, #0x1                   	// #1
  40e394:	ldrb	w11, [x25, x10]
  40e398:	cmp	w11, #0x3a
  40e39c:	b.ne	40e964 <__fxstatat@plt+0xbdc4>  // b.any
  40e3a0:	add	x10, x10, #0x1
  40e3a4:	b	40e394 <__fxstatat@plt+0xb7f4>
  40e3a8:	cbnz	w9, 40f09c <__fxstatat@plt+0xc4fc>
  40e3ac:	mov	w16, wzr
  40e3b0:	mov	w19, wzr
  40e3b4:	orr	w23, w24, w23
  40e3b8:	mov	w8, #0x41                  	// #65
  40e3bc:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e3c0:	cmp	w9, #0x45
  40e3c4:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e3c8:	mov	w16, wzr
  40e3cc:	mov	w19, wzr
  40e3d0:	orr	w23, w24, w23
  40e3d4:	mov	w8, #0x42                  	// #66
  40e3d8:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e3dc:	cmp	w9, #0x45
  40e3e0:	b.ne	40ea74 <__fxstatat@plt+0xbed4>  // b.any
  40e3e4:	mov	w16, wzr
  40e3e8:	mov	w19, wzr
  40e3ec:	mov	w8, #0x43                  	// #67
  40e3f0:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e3f4:	cbnz	w9, 40f09c <__fxstatat@plt+0xc4fc>
  40e3f8:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x5d48>
  40e3fc:	add	x26, x26, #0x89c
  40e400:	b	40e500 <__fxstatat@plt+0xb960>
  40e404:	cbnz	w9, 40f09c <__fxstatat@plt+0xc4fc>
  40e408:	cmp	w28, #0x0
  40e40c:	cset	w11, eq  // eq = none
  40e410:	cmp	w22, #0x0
  40e414:	mov	w8, #0x6                   	// #6
  40e418:	cset	w12, lt  // lt = tstop
  40e41c:	cmp	w22, #0x6
  40e420:	csel	w8, w22, w8, gt
  40e424:	mov	w9, #0x4                   	// #4
  40e428:	mov	w10, #0x2b                  	// #43
  40e42c:	tst	w11, w12
  40e430:	sub	w8, w8, #0x6
  40e434:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x5d48>
  40e438:	csel	w28, w10, w28, ne  // ne = any
  40e43c:	csel	w21, w9, w8, ne  // ne = any
  40e440:	add	x26, x26, #0x8a5
  40e444:	b	40e504 <__fxstatat@plt+0xb964>
  40e448:	cmp	w9, #0x45
  40e44c:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e450:	ldr	x10, [sp, #104]
  40e454:	ldr	w10, [x10, #8]
  40e458:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e45c:	cmp	w9, #0x45
  40e460:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e464:	ldr	w10, [sp, #44]
  40e468:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e46c:	cmp	w9, #0x45
  40e470:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e474:	ldr	x10, [sp, #104]
  40e478:	ldr	w10, [x10, #4]
  40e47c:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e480:	cmp	w9, #0x45
  40e484:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e488:	cmn	w22, #0x1
  40e48c:	b.eq	40f1c0 <__fxstatat@plt+0xc620>  // b.none
  40e490:	cmp	w22, #0x8
  40e494:	b.gt	40f25c <__fxstatat@plt+0xc6bc>
  40e498:	ldr	w10, [sp, #52]
  40e49c:	sub	w11, w22, #0x1
  40e4a0:	mov	w12, #0x6667                	// #26215
  40e4a4:	movk	w12, #0x6666, lsl #16
  40e4a8:	smull	x10, w10, w12
  40e4ac:	add	w11, w11, #0x1
  40e4b0:	lsr	x12, x10, #63
  40e4b4:	asr	x10, x10, #34
  40e4b8:	cmp	w11, #0x8
  40e4bc:	add	w10, w10, w12
  40e4c0:	b.lt	40e4a0 <__fxstatat@plt+0xb900>  // b.tstop
  40e4c4:	b	40f260 <__fxstatat@plt+0xc6c0>
  40e4c8:	mov	w11, #0x1                   	// #1
  40e4cc:	eor	w8, w24, #0x1
  40e4d0:	mov	w19, wzr
  40e4d4:	orr	w16, w24, w11
  40e4d8:	and	w23, w23, w8
  40e4dc:	mov	w8, #0x70                  	// #112
  40e4e0:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e4e4:	cmp	w9, #0x45
  40e4e8:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e4ec:	ldr	x10, [sp, #104]
  40e4f0:	ldr	w10, [x10]
  40e4f4:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e4f8:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x5d48>
  40e4fc:	add	x26, x26, #0x8ae
  40e500:	mov	w21, #0xffffffff            	// #-1
  40e504:	ldr	w8, [sp, #52]
  40e508:	ldr	x3, [sp, #104]
  40e50c:	ldr	x7, [sp, #64]
  40e510:	and	w4, w23, #0x1
  40e514:	mov	x1, #0xffffffffffffffff    	// #-1
  40e518:	str	x0, [sp, #120]
  40e51c:	mov	x0, xzr
  40e520:	mov	x19, x2
  40e524:	mov	x2, x26
  40e528:	mov	w5, w28
  40e52c:	mov	w6, w21
  40e530:	str	w23, [sp, #132]
  40e534:	str	w8, [sp]
  40e538:	bl	40dfdc <__fxstatat@plt+0xb43c>
  40e53c:	mov	x23, x0
  40e540:	ldr	x0, [sp, #120]
  40e544:	ldr	x9, [sp, #136]
  40e548:	bic	w8, w22, w22, asr #31
  40e54c:	cmp	x23, x8
  40e550:	mov	x10, x19
  40e554:	csel	x19, x8, x23, cc  // cc = lo, ul, last
  40e558:	sub	x24, x9, x0
  40e55c:	mov	w1, #0xa                   	// #10
  40e560:	cmp	x19, x24
  40e564:	b.cs	40f528 <__fxstatat@plt+0xc988>  // b.hs, b.nlast
  40e568:	cbz	x10, 40e990 <__fxstatat@plt+0xbdf0>
  40e56c:	cmp	x23, x8
  40e570:	b.cs	40efb8 <__fxstatat@plt+0xc418>  // b.hs, b.nlast
  40e574:	sxtw	x8, w22
  40e578:	cmp	w28, #0x30
  40e57c:	sub	x8, x8, x23
  40e580:	str	x8, [sp, #80]
  40e584:	b.eq	40e590 <__fxstatat@plt+0xb9f0>  // b.none
  40e588:	cmp	w28, #0x2b
  40e58c:	b.ne	40ef9c <__fxstatat@plt+0xc3fc>  // b.any
  40e590:	mov	w1, #0x30                  	// #48
  40e594:	b	40efa0 <__fxstatat@plt+0xc400>
  40e598:	cmp	w9, #0x45
  40e59c:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e5a0:	ldr	x11, [sp, #104]
  40e5a4:	mov	w12, #0x2493                	// #9363
  40e5a8:	movk	w12, #0x9249, lsl #16
  40e5ac:	ldp	w11, w10, [x11, #24]
  40e5b0:	sub	w10, w10, w11
  40e5b4:	b	40e5f8 <__fxstatat@plt+0xba58>
  40e5b8:	cmp	w9, #0x45
  40e5bc:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e5c0:	ldr	x11, [sp, #104]
  40e5c4:	mov	w12, #0x2493                	// #9363
  40e5c8:	movk	w12, #0x9249, lsl #16
  40e5cc:	ldp	w10, w11, [x11, #24]
  40e5d0:	add	w10, w10, #0x6
  40e5d4:	smull	x13, w10, w12
  40e5d8:	lsr	x13, x13, #32
  40e5dc:	add	w13, w13, w10
  40e5e0:	asr	w14, w13, #2
  40e5e4:	add	w13, w14, w13, lsr #31
  40e5e8:	lsl	w14, w13, #3
  40e5ec:	sub	w13, w14, w13
  40e5f0:	sub	w10, w13, w10
  40e5f4:	add	w10, w11, w10
  40e5f8:	add	w10, w10, #0x7
  40e5fc:	smull	x11, w10, w12
  40e600:	lsr	x11, x11, #32
  40e604:	add	w10, w11, w10
  40e608:	asr	w11, w10, #2
  40e60c:	add	w10, w11, w10, lsr #31
  40e610:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e614:	cmp	w9, #0x4f
  40e618:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e61c:	mov	w16, wzr
  40e620:	mov	w19, wzr
  40e624:	mov	w8, #0x58                  	// #88
  40e628:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e62c:	cmp	w9, #0x45
  40e630:	b.eq	40ef3c <__fxstatat@plt+0xc39c>  // b.none
  40e634:	cmp	w9, #0x4f
  40e638:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e63c:	ldr	x10, [sp, #104]
  40e640:	ldr	w10, [x10, #20]
  40e644:	cmn	w10, #0x76c
  40e648:	add	w10, w10, #0x76c
  40e64c:	b	40eb18 <__fxstatat@plt+0xbf78>
  40e650:	str	x0, [sp, #120]
  40e654:	ldr	x0, [sp, #32]
  40e658:	mov	x19, x2
  40e65c:	bl	402540 <strlen@plt>
  40e660:	mov	x21, x0
  40e664:	ldr	x0, [sp, #120]
  40e668:	ldr	x9, [sp, #136]
  40e66c:	bic	w8, w22, w22, asr #31
  40e670:	cmp	x21, x8
  40e674:	mov	x2, x19
  40e678:	csel	x19, x8, x21, cc  // cc = lo, ul, last
  40e67c:	sub	x9, x9, x0
  40e680:	mov	w1, #0xa                   	// #10
  40e684:	cmp	x19, x9
  40e688:	b.cs	40f528 <__fxstatat@plt+0xc988>  // b.hs, b.nlast
  40e68c:	cbz	x2, 40f46c <__fxstatat@plt+0xc8cc>
  40e690:	cmp	x21, x8
  40e694:	b.cs	40ef4c <__fxstatat@plt+0xc3ac>  // b.hs, b.nlast
  40e698:	sxtw	x9, w22
  40e69c:	and	w8, w28, #0xff
  40e6a0:	cmp	w8, #0x30
  40e6a4:	sub	x22, x9, x21
  40e6a8:	b.eq	40e6b4 <__fxstatat@plt+0xbb14>  // b.none
  40e6ac:	cmp	w8, #0x2b
  40e6b0:	b.ne	40f290 <__fxstatat@plt+0xc6f0>  // b.any
  40e6b4:	mov	w1, #0x30                  	// #48
  40e6b8:	b	40f294 <__fxstatat@plt+0xc6f4>
  40e6bc:	cbnz	w9, 40f09c <__fxstatat@plt+0xc4fc>
  40e6c0:	mov	w16, wzr
  40e6c4:	mov	w19, wzr
  40e6c8:	orr	w23, w24, w23
  40e6cc:	mov	w8, #0x61                  	// #97
  40e6d0:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e6d4:	cmp	w9, #0x4f
  40e6d8:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e6dc:	mov	w16, wzr
  40e6e0:	mov	w19, wzr
  40e6e4:	mov	w8, #0x63                  	// #99
  40e6e8:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e6ec:	cmp	w9, #0x45
  40e6f0:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e6f4:	ldr	x10, [sp, #104]
  40e6f8:	ldr	w10, [x10, #12]
  40e6fc:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e700:	cmp	w9, #0x45
  40e704:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e708:	ldr	x10, [sp, #104]
  40e70c:	ldr	w10, [x10, #12]
  40e710:	b	40e74c <__fxstatat@plt+0xbbac>
  40e714:	cmp	w9, #0x45
  40e718:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e71c:	ldr	x10, [sp, #104]
  40e720:	mov	w19, #0x3                   	// #3
  40e724:	ldr	w10, [x10, #28]
  40e728:	b	40e770 <__fxstatat@plt+0xbbd0>
  40e72c:	cmp	w9, #0x45
  40e730:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e734:	ldr	x10, [sp, #104]
  40e738:	ldr	w10, [x10, #8]
  40e73c:	b	40e74c <__fxstatat@plt+0xbbac>
  40e740:	ldr	w10, [sp, #44]
  40e744:	cmp	w9, #0x45
  40e748:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e74c:	cmp	w28, #0x0
  40e750:	mov	w11, #0x5f                  	// #95
  40e754:	csel	w28, w11, w28, eq  // eq = none
  40e758:	b	40eb44 <__fxstatat@plt+0xbfa4>
  40e75c:	cmp	w9, #0x45
  40e760:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e764:	ldr	x10, [sp, #104]
  40e768:	mov	w19, #0x2                   	// #2
  40e76c:	ldr	w10, [x10, #16]
  40e770:	cmn	w10, #0x1
  40e774:	add	w10, w10, #0x1
  40e778:	cset	w11, lt  // lt = tstop
  40e77c:	b	40eb4c <__fxstatat@plt+0xbfac>
  40e780:	ldr	x9, [sp, #136]
  40e784:	bic	w8, w22, w22, asr #31
  40e788:	cmp	w8, #0x1
  40e78c:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e790:	sub	x9, x9, x0
  40e794:	cmp	x9, x19
  40e798:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40e79c:	cbz	x2, 40f1ac <__fxstatat@plt+0xc60c>
  40e7a0:	cmp	w8, #0x2
  40e7a4:	b.cc	40f318 <__fxstatat@plt+0xc778>  // b.lo, b.ul, b.last
  40e7a8:	sxtw	x9, w22
  40e7ac:	and	w8, w28, #0xff
  40e7b0:	mov	x23, x0
  40e7b4:	cmp	w8, #0x30
  40e7b8:	sub	x21, x9, #0x1
  40e7bc:	b.eq	40e7c8 <__fxstatat@plt+0xbc28>  // b.none
  40e7c0:	cmp	w8, #0x2b
  40e7c4:	b.ne	40f2f8 <__fxstatat@plt+0xc758>  // b.any
  40e7c8:	mov	w1, #0x30                  	// #48
  40e7cc:	b	40f2fc <__fxstatat@plt+0xc75c>
  40e7d0:	ldr	x10, [sp, #104]
  40e7d4:	mov	w12, #0xb                   	// #11
  40e7d8:	mov	w11, wzr
  40e7dc:	mov	w19, #0x1                   	// #1
  40e7e0:	ldr	w10, [x10, #16]
  40e7e4:	mul	w10, w10, w12
  40e7e8:	asr	w10, w10, #5
  40e7ec:	add	w10, w10, #0x1
  40e7f0:	b	40eb4c <__fxstatat@plt+0xbfac>
  40e7f4:	ldr	x9, [sp, #104]
  40e7f8:	mov	x19, x0
  40e7fc:	ldr	x0, [sp, #64]
  40e800:	add	x1, sp, #0x90
  40e804:	ldr	x8, [x9, #48]
  40e808:	ldp	q1, q0, [x9, #16]
  40e80c:	ldr	q2, [x9]
  40e810:	mov	w24, w23
  40e814:	mov	x23, x2
  40e818:	str	x8, [sp, #192]
  40e81c:	stp	q1, q0, [sp, #160]
  40e820:	str	q2, [sp, #144]
  40e824:	bl	4126e0 <_obstack_memory_used@@Base+0x428>
  40e828:	ldr	x21, [sp, #96]
  40e82c:	lsr	x11, x0, #63
  40e830:	mov	x8, x0
  40e834:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40e838:	movk	x9, #0x6667
  40e83c:	smulh	x9, x8, x9
  40e840:	asr	x13, x9, #2
  40e844:	mov	w10, #0xa                   	// #10
  40e848:	add	x9, x13, x9, lsr #63
  40e84c:	cmp	x0, #0x0
  40e850:	add	x12, x8, #0x9
  40e854:	msub	w8, w9, w10, w8
  40e858:	cneg	w8, w8, lt  // lt = tstop
  40e85c:	add	w8, w8, #0x30
  40e860:	cmp	x12, #0x12
  40e864:	strb	w8, [x21, #-1]!
  40e868:	mov	x8, x9
  40e86c:	b.hi	40e834 <__fxstatat@plt+0xbc94>  // b.pmore
  40e870:	cmp	w22, #0x1
  40e874:	mov	w8, wzr
  40e878:	csinc	w12, w22, wzr, gt
  40e87c:	mov	x0, x19
  40e880:	mov	x2, x23
  40e884:	mov	w1, #0xa                   	// #10
  40e888:	mov	w23, w24
  40e88c:	b	40ec74 <__fxstatat@plt+0xc0d4>
  40e890:	ldr	x9, [sp, #136]
  40e894:	bic	w8, w22, w22, asr #31
  40e898:	cmp	w8, #0x1
  40e89c:	csinc	w19, w8, wzr, hi  // hi = pmore
  40e8a0:	sub	x9, x9, x0
  40e8a4:	cmp	x9, x19
  40e8a8:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40e8ac:	cbz	x2, 40f1ac <__fxstatat@plt+0xc60c>
  40e8b0:	cmp	w8, #0x2
  40e8b4:	b.cc	40f340 <__fxstatat@plt+0xc7a0>  // b.lo, b.ul, b.last
  40e8b8:	sxtw	x9, w22
  40e8bc:	and	w8, w28, #0xff
  40e8c0:	mov	x23, x0
  40e8c4:	cmp	w8, #0x30
  40e8c8:	sub	x21, x9, #0x1
  40e8cc:	b.eq	40e8d8 <__fxstatat@plt+0xbd38>  // b.none
  40e8d0:	cmp	w8, #0x2b
  40e8d4:	b.ne	40f320 <__fxstatat@plt+0xc780>  // b.any
  40e8d8:	mov	w1, #0x30                  	// #48
  40e8dc:	b	40f324 <__fxstatat@plt+0xc784>
  40e8e0:	ldr	x10, [sp, #104]
  40e8e4:	mov	w11, #0x2493                	// #9363
  40e8e8:	movk	w11, #0x9249, lsl #16
  40e8ec:	mov	w19, #0x1                   	// #1
  40e8f0:	ldr	w10, [x10, #24]
  40e8f4:	add	w10, w10, #0x6
  40e8f8:	smull	x11, w10, w11
  40e8fc:	lsr	x11, x11, #32
  40e900:	add	w11, w11, w10
  40e904:	asr	w12, w11, #2
  40e908:	add	w11, w12, w11, lsr #31
  40e90c:	sub	w11, w11, w11, lsl #3
  40e910:	add	w10, w10, w11
  40e914:	add	w10, w10, #0x1
  40e918:	b	40eb48 <__fxstatat@plt+0xbfa8>
  40e91c:	cmp	w9, #0x45
  40e920:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e924:	ldr	x10, [sp, #104]
  40e928:	mov	w19, #0x1                   	// #1
  40e92c:	ldr	w10, [x10, #24]
  40e930:	b	40eb48 <__fxstatat@plt+0xbfa8>
  40e934:	cmp	w9, #0x4f
  40e938:	b.eq	40f09c <__fxstatat@plt+0xc4fc>  // b.none
  40e93c:	mov	w16, wzr
  40e940:	mov	w19, wzr
  40e944:	mov	w8, #0x78                  	// #120
  40e948:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e94c:	cmp	w9, #0x45
  40e950:	b.ne	40eac0 <__fxstatat@plt+0xbf20>  // b.any
  40e954:	mov	w16, wzr
  40e958:	mov	w19, wzr
  40e95c:	mov	w8, #0x79                  	// #121
  40e960:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40e964:	cmp	w11, #0x7a
  40e968:	b.ne	40f09c <__fxstatat@plt+0xc4fc>  // b.any
  40e96c:	add	x25, x25, x10
  40e970:	ldr	x12, [sp, #104]
  40e974:	ldr	w11, [x12, #32]
  40e978:	tbnz	w11, #31, 40f1b0 <__fxstatat@plt+0xc610>
  40e97c:	ldr	w12, [x12, #40]
  40e980:	tbnz	w12, #31, 40ef34 <__fxstatat@plt+0xc394>
  40e984:	cbz	w12, 40effc <__fxstatat@plt+0xc45c>
  40e988:	mov	w11, wzr
  40e98c:	b	40f00c <__fxstatat@plt+0xc46c>
  40e990:	mov	x2, xzr
  40e994:	b	40f46c <__fxstatat@plt+0xc8cc>
  40e998:	sub	w14, w15, #0x1
  40e99c:	tst	w14, #0x3
  40e9a0:	mov	w13, #0x16d                 	// #365
  40e9a4:	b.ne	40e9e0 <__fxstatat@plt+0xbe40>  // b.any
  40e9a8:	mov	w15, #0x5c29                	// #23593
  40e9ac:	mov	w16, #0xb850                	// #47184
  40e9b0:	movk	w15, #0xc28f, lsl #16
  40e9b4:	movk	w16, #0x51e, lsl #16
  40e9b8:	mov	w17, #0xd70b                	// #55051
  40e9bc:	madd	w14, w14, w15, w16
  40e9c0:	movk	w17, #0xa3, lsl #16
  40e9c4:	ror	w15, w14, #2
  40e9c8:	ror	w14, w14, #4
  40e9cc:	cmp	w14, w17
  40e9d0:	mov	w14, #0x5c28                	// #23592
  40e9d4:	movk	w14, #0x28f, lsl #16
  40e9d8:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  40e9dc:	cinc	w13, w13, hi  // hi = pmore
  40e9e0:	add	w11, w13, w11
  40e9e4:	mov	w13, #0x17e                 	// #382
  40e9e8:	mov	w14, #0x2493                	// #9363
  40e9ec:	sub	w10, w13, w10
  40e9f0:	movk	w14, #0x9249, lsl #16
  40e9f4:	add	w11, w10, w11
  40e9f8:	smull	x13, w11, w14
  40e9fc:	lsr	x13, x13, #32
  40ea00:	add	w11, w13, w11
  40ea04:	asr	w13, w11, #2
  40ea08:	add	w11, w13, w11, lsr #31
  40ea0c:	lsl	w13, w11, #3
  40ea10:	sub	w11, w13, w11
  40ea14:	sub	w10, w11, w10
  40ea18:	add	w10, w10, #0x3
  40ea1c:	mov	w13, #0xffffffff            	// #-1
  40ea20:	cmp	w8, #0x47
  40ea24:	b.eq	40eb04 <__fxstatat@plt+0xbf64>  // b.none
  40ea28:	cmp	w8, #0x67
  40ea2c:	b.ne	40eb24 <__fxstatat@plt+0xbf84>  // b.any
  40ea30:	mov	w10, #0x851f                	// #34079
  40ea34:	movk	w10, #0x51eb, lsl #16
  40ea38:	smull	x14, w12, w10
  40ea3c:	lsr	x15, x14, #63
  40ea40:	asr	x14, x14, #37
  40ea44:	mov	w11, #0x64                  	// #100
  40ea48:	add	w14, w14, w15
  40ea4c:	msub	w14, w14, w11, w12
  40ea50:	add	w14, w13, w14
  40ea54:	smull	x10, w14, w10
  40ea58:	lsr	x15, x10, #63
  40ea5c:	asr	x10, x10, #37
  40ea60:	add	w10, w10, w15
  40ea64:	msub	w10, w10, w11, w14
  40ea68:	tbnz	w10, #31, 40f1d0 <__fxstatat@plt+0xc630>
  40ea6c:	mov	w11, wzr
  40ea70:	b	40f1e8 <__fxstatat@plt+0xc648>
  40ea74:	ldr	x10, [sp, #104]
  40ea78:	mov	w11, #0x851f                	// #34079
  40ea7c:	movk	w11, #0x51eb, lsl #16
  40ea80:	mov	w12, #0x64                  	// #100
  40ea84:	ldrsw	x10, [x10, #20]
  40ea88:	mul	x13, x10, x11
  40ea8c:	lsr	x14, x13, #63
  40ea90:	asr	x13, x13, #37
  40ea94:	add	w13, w13, w14
  40ea98:	cmn	x10, #0x76c
  40ea9c:	msub	w10, w13, w12, w10
  40eaa0:	cset	w11, lt  // lt = tstop
  40eaa4:	cset	w14, gt
  40eaa8:	cmp	w10, #0x0
  40eaac:	cset	w10, lt  // lt = tstop
  40eab0:	and	w10, w14, w10
  40eab4:	sub	w10, w13, w10
  40eab8:	add	w10, w10, #0x13
  40eabc:	b	40f1e8 <__fxstatat@plt+0xc648>
  40eac0:	ldr	x10, [sp, #104]
  40eac4:	mov	w12, #0x851f                	// #34079
  40eac8:	movk	w12, #0x51eb, lsl #16
  40eacc:	mov	w13, #0x64                  	// #100
  40ead0:	ldrsw	x10, [x10, #20]
  40ead4:	mov	w11, wzr
  40ead8:	mul	x12, x10, x12
  40eadc:	lsr	x14, x12, #63
  40eae0:	asr	x12, x12, #37
  40eae4:	add	w12, w12, w14
  40eae8:	cmn	w10, #0x76c
  40eaec:	msub	w10, w12, w13, w10
  40eaf0:	add	w12, w10, #0x64
  40eaf4:	csneg	w12, w12, w10, ge  // ge = tcont
  40eaf8:	cmp	w10, #0x0
  40eafc:	csel	w10, w12, w10, lt  // lt = tstop
  40eb00:	b	40f1e8 <__fxstatat@plt+0xc648>
  40eb04:	mov	w10, #0xfffff894            	// #-1900
  40eb08:	add	w11, w12, w13
  40eb0c:	sub	w13, w10, w13
  40eb10:	add	w10, w11, #0x76c
  40eb14:	cmp	w12, w13
  40eb18:	cset	w11, lt  // lt = tstop
  40eb1c:	mov	w19, #0x4                   	// #4
  40eb20:	b	40f1ec <__fxstatat@plt+0xc64c>
  40eb24:	mov	w11, #0x2493                	// #9363
  40eb28:	movk	w11, #0x9249, lsl #16
  40eb2c:	smull	x11, w10, w11
  40eb30:	lsr	x11, x11, #32
  40eb34:	add	w10, w11, w10
  40eb38:	asr	w11, w10, #2
  40eb3c:	add	w10, w11, w10, lsr #31
  40eb40:	add	w10, w10, #0x1
  40eb44:	mov	w19, #0x2                   	// #2
  40eb48:	lsr	w11, w10, #31
  40eb4c:	cmp	w11, #0x0
  40eb50:	mov	w12, wzr
  40eb54:	mov	w13, wzr
  40eb58:	cset	w11, ne  // ne = any
  40eb5c:	cmp	w9, #0x4f
  40eb60:	b.ne	40ec10 <__fxstatat@plt+0xc070>  // b.any
  40eb64:	cbnz	w11, 40ec10 <__fxstatat@plt+0xc070>
  40eb68:	mov	w16, wzr
  40eb6c:	mov	w10, #0x2520                	// #9504
  40eb70:	sturh	w10, [x29, #-40]
  40eb74:	ldr	x10, [sp, #88]
  40eb78:	str	w23, [sp, #132]
  40eb7c:	mov	x23, x2
  40eb80:	str	w16, [sp, #80]
  40eb84:	str	x0, [sp, #120]
  40eb88:	cbz	w9, 40eb94 <__fxstatat@plt+0xbff4>
  40eb8c:	ldr	x10, [sp, #72]
  40eb90:	sturb	w9, [x29, #-38]
  40eb94:	ldr	x3, [sp, #104]
  40eb98:	add	x0, sp, #0x90
  40eb9c:	sub	x2, x29, #0x28
  40eba0:	mov	w1, #0x400                 	// #1024
  40eba4:	strb	w8, [x10]
  40eba8:	strb	wzr, [x10, #1]
  40ebac:	bl	402630 <strftime@plt>
  40ebb0:	cbz	x0, 40ecc4 <__fxstatat@plt+0xc124>
  40ebb4:	mov	x26, x0
  40ebb8:	sub	x21, x0, #0x1
  40ebbc:	ldr	x9, [sp, #136]
  40ebc0:	ldr	x0, [sp, #120]
  40ebc4:	bic	w8, w22, w22, asr #31
  40ebc8:	cmp	x21, x8
  40ebcc:	csel	x24, x8, x21, cc  // cc = lo, ul, last
  40ebd0:	sub	x9, x9, x0
  40ebd4:	cmp	x24, x9
  40ebd8:	b.cs	40f528 <__fxstatat@plt+0xc988>  // b.hs, b.nlast
  40ebdc:	mov	x2, x23
  40ebe0:	cbz	x23, 40ef28 <__fxstatat@plt+0xc388>
  40ebe4:	cbnz	w19, 40ee8c <__fxstatat@plt+0xc2ec>
  40ebe8:	cmp	x21, x8
  40ebec:	b.cs	40ee8c <__fxstatat@plt+0xc2ec>  // b.hs, b.nlast
  40ebf0:	sxtw	x8, w22
  40ebf4:	cmp	w28, #0x30
  40ebf8:	sub	x22, x8, x21
  40ebfc:	b.eq	40ec08 <__fxstatat@plt+0xc068>  // b.none
  40ec00:	cmp	w28, #0x2b
  40ec04:	b.ne	40ee74 <__fxstatat@plt+0xc2d4>  // b.any
  40ec08:	mov	w1, #0x30                  	// #48
  40ec0c:	b	40ee78 <__fxstatat@plt+0xc2d8>
  40ec10:	ldr	x21, [sp, #96]
  40ec14:	cmp	w11, #0x0
  40ec18:	cneg	w8, w10, ne  // ne = any
  40ec1c:	tbz	w12, #0, 40ec28 <__fxstatat@plt+0xc088>
  40ec20:	mov	w9, #0x3a                  	// #58
  40ec24:	strb	w9, [x21, #-1]!
  40ec28:	mov	w9, #0xcccd                	// #52429
  40ec2c:	movk	w9, #0xcccc, lsl #16
  40ec30:	umull	x9, w8, w9
  40ec34:	mov	w10, #0xa                   	// #10
  40ec38:	lsr	x9, x9, #35
  40ec3c:	msub	w10, w9, w10, w8
  40ec40:	orr	w10, w10, #0x30
  40ec44:	asr	w12, w12, #1
  40ec48:	cmp	w8, #0x9
  40ec4c:	strb	w10, [x21, #-1]!
  40ec50:	mov	w8, w9
  40ec54:	b.hi	40ec1c <__fxstatat@plt+0xc07c>  // b.pmore
  40ec58:	mov	w8, w9
  40ec5c:	cbnz	w12, 40ec1c <__fxstatat@plt+0xc07c>
  40ec60:	cmp	w19, w22
  40ec64:	csel	w12, w22, w19, lt  // lt = tstop
  40ec68:	cmp	w13, #0x0
  40ec6c:	mov	w8, #0x2b                  	// #43
  40ec70:	csel	w8, w8, wzr, ne  // ne = any
  40ec74:	cmp	w11, #0x0
  40ec78:	mov	w9, #0x2d                  	// #45
  40ec7c:	csel	w19, w9, w8, ne  // ne = any
  40ec80:	cmp	w28, #0x2d
  40ec84:	str	w23, [sp, #132]
  40ec88:	b.ne	40ecd4 <__fxstatat@plt+0xc134>  // b.any
  40ec8c:	cbz	w19, 40f374 <__fxstatat@plt+0xc7d4>
  40ec90:	ldr	x9, [sp, #136]
  40ec94:	bic	w8, w22, w22, asr #31
  40ec98:	cmp	w8, #0x1
  40ec9c:	csinc	w26, w8, wzr, hi  // hi = pmore
  40eca0:	sub	x9, x9, x0
  40eca4:	cmp	x9, x26
  40eca8:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40ecac:	cbz	x2, 40f370 <__fxstatat@plt+0xc7d0>
  40ecb0:	cbnz	w12, 40f36c <__fxstatat@plt+0xc7cc>
  40ecb4:	cmp	w8, #0x2
  40ecb8:	b.cc	40f36c <__fxstatat@plt+0xc7cc>  // b.lo, b.ul, b.last
  40ecbc:	sxtw	x8, w22
  40ecc0:	b	40ed84 <__fxstatat@plt+0xc1e4>
  40ecc4:	ldr	x0, [sp, #120]
  40ecc8:	mov	x2, x23
  40eccc:	mov	w1, #0xa                   	// #10
  40ecd0:	b	40f1b0 <__fxstatat@plt+0xc610>
  40ecd4:	ldr	x10, [sp, #96]
  40ecd8:	sxtw	x8, w12
  40ecdc:	cmp	w19, #0x0
  40ece0:	cset	w9, ne  // ne = any
  40ece4:	sub	x10, x8, x10
  40ece8:	add	x10, x10, x21
  40ecec:	sub	x26, x10, x9
  40ecf0:	cmp	w26, #0x1
  40ecf4:	b.lt	40edbc <__fxstatat@plt+0xc21c>  // b.tstop
  40ecf8:	cmp	w28, #0x5f
  40ecfc:	b.ne	40ee14 <__fxstatat@plt+0xc274>  // b.any
  40ed00:	ldr	x8, [sp, #136]
  40ed04:	sxtw	x23, w26
  40ed08:	sub	x8, x8, x0
  40ed0c:	cmp	x23, x8
  40ed10:	b.cs	40f528 <__fxstatat@plt+0xc988>  // b.hs, b.nlast
  40ed14:	cbz	x2, 40ed48 <__fxstatat@plt+0xc1a8>
  40ed18:	mov	w1, #0x20                  	// #32
  40ed1c:	str	x0, [sp, #120]
  40ed20:	mov	x0, x2
  40ed24:	str	x2, [sp, #80]
  40ed28:	mov	x2, x23
  40ed2c:	mov	x24, x12
  40ed30:	bl	4027c0 <memset@plt>
  40ed34:	ldr	x2, [sp, #80]
  40ed38:	ldr	x0, [sp, #120]
  40ed3c:	mov	x12, x24
  40ed40:	mov	w1, #0xa                   	// #10
  40ed44:	add	x2, x2, x23
  40ed48:	subs	w8, w22, w26
  40ed4c:	add	x0, x23, x0
  40ed50:	csel	w22, w8, wzr, gt
  40ed54:	cbz	w19, 40f374 <__fxstatat@plt+0xc7d4>
  40ed58:	ldr	x8, [sp, #136]
  40ed5c:	cmp	w22, #0x1
  40ed60:	csinc	w26, w22, wzr, hi  // hi = pmore
  40ed64:	sub	x8, x8, x0
  40ed68:	cmp	x8, x26
  40ed6c:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40ed70:	cbz	x2, 40f370 <__fxstatat@plt+0xc7d0>
  40ed74:	cbnz	w12, 40f36c <__fxstatat@plt+0xc7cc>
  40ed78:	cmp	w22, #0x2
  40ed7c:	b.cc	40f36c <__fxstatat@plt+0xc7cc>  // b.lo, b.ul, b.last
  40ed80:	mov	w8, w22
  40ed84:	sub	x23, x8, #0x1
  40ed88:	mov	w1, #0x20                  	// #32
  40ed8c:	str	x0, [sp, #120]
  40ed90:	mov	x0, x2
  40ed94:	str	x2, [sp, #80]
  40ed98:	mov	x2, x23
  40ed9c:	mov	x24, x12
  40eda0:	bl	4027c0 <memset@plt>
  40eda4:	ldr	x2, [sp, #80]
  40eda8:	ldr	x0, [sp, #120]
  40edac:	mov	x12, x24
  40edb0:	mov	w1, #0xa                   	// #10
  40edb4:	add	x2, x2, x23
  40edb8:	b	40f36c <__fxstatat@plt+0xc7cc>
  40edbc:	cbz	w19, 40f374 <__fxstatat@plt+0xc7d4>
  40edc0:	ldr	x9, [sp, #136]
  40edc4:	bic	w8, w22, w22, asr #31
  40edc8:	cmp	w8, #0x1
  40edcc:	csinc	w26, w8, wzr, hi  // hi = pmore
  40edd0:	sub	x9, x9, x0
  40edd4:	cmp	x9, x26
  40edd8:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40eddc:	cbz	x2, 40f370 <__fxstatat@plt+0xc7d0>
  40ede0:	cbnz	w12, 40f36c <__fxstatat@plt+0xc7cc>
  40ede4:	cmp	w8, #0x2
  40ede8:	b.cc	40f36c <__fxstatat@plt+0xc7cc>  // b.lo, b.ul, b.last
  40edec:	sxtw	x8, w22
  40edf0:	cmp	w28, #0x30
  40edf4:	sub	x23, x8, #0x1
  40edf8:	str	x12, [sp, #80]
  40edfc:	str	x0, [sp, #120]
  40ee00:	b.eq	40ee0c <__fxstatat@plt+0xc26c>  // b.none
  40ee04:	cmp	w28, #0x2b
  40ee08:	b.ne	40f348 <__fxstatat@plt+0xc7a8>  // b.any
  40ee0c:	mov	w1, #0x30                  	// #48
  40ee10:	b	40f34c <__fxstatat@plt+0xc7ac>
  40ee14:	ldr	x9, [sp, #136]
  40ee18:	sub	x9, x9, x0
  40ee1c:	cmp	x9, x8
  40ee20:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40ee24:	cbz	w19, 40f4a0 <__fxstatat@plt+0xc900>
  40ee28:	bic	w8, w22, w22, asr #31
  40ee2c:	cmp	w8, #0x1
  40ee30:	csinc	w23, w8, wzr, hi  // hi = pmore
  40ee34:	cmp	x9, x23
  40ee38:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40ee3c:	cbz	x2, 40f49c <__fxstatat@plt+0xc8fc>
  40ee40:	cbnz	w12, 40f498 <__fxstatat@plt+0xc8f8>
  40ee44:	cmp	w8, #0x2
  40ee48:	b.cc	40f498 <__fxstatat@plt+0xc8f8>  // b.lo, b.ul, b.last
  40ee4c:	sxtw	x8, w22
  40ee50:	cmp	w28, #0x30
  40ee54:	sub	x22, x8, #0x1
  40ee58:	str	x12, [sp, #80]
  40ee5c:	str	x0, [sp, #120]
  40ee60:	b.eq	40ee6c <__fxstatat@plt+0xc2cc>  // b.none
  40ee64:	cmp	w28, #0x2b
  40ee68:	b.ne	40f474 <__fxstatat@plt+0xc8d4>  // b.any
  40ee6c:	mov	w1, #0x30                  	// #48
  40ee70:	b	40f478 <__fxstatat@plt+0xc8d8>
  40ee74:	mov	w1, #0x20                  	// #32
  40ee78:	mov	x0, x2
  40ee7c:	mov	x23, x2
  40ee80:	mov	x2, x22
  40ee84:	bl	4027c0 <memset@plt>
  40ee88:	add	x2, x23, x22
  40ee8c:	ldr	x22, [sp, #56]
  40ee90:	ldr	w8, [sp, #132]
  40ee94:	ldr	w9, [sp, #80]
  40ee98:	tbz	w9, #0, 40eed0 <__fxstatat@plt+0xc330>
  40ee9c:	cbz	x21, 40ef20 <__fxstatat@plt+0xc380>
  40eea0:	mov	x19, x2
  40eea4:	bl	402690 <__ctype_tolower_loc@plt>
  40eea8:	mov	x2, x19
  40eeac:	sub	x8, x19, #0x2
  40eeb0:	ldr	x9, [x0]
  40eeb4:	ldrb	w10, [x22, x26]
  40eeb8:	ldr	w9, [x9, x10, lsl #2]
  40eebc:	strb	w9, [x8, x26]
  40eec0:	sub	x26, x26, #0x1
  40eec4:	cmp	x26, #0x1
  40eec8:	b.ne	40eeb0 <__fxstatat@plt+0xc310>  // b.any
  40eecc:	b	40ef20 <__fxstatat@plt+0xc380>
  40eed0:	tbz	w8, #0, 40ef08 <__fxstatat@plt+0xc368>
  40eed4:	cbz	x21, 40ef20 <__fxstatat@plt+0xc380>
  40eed8:	mov	x19, x2
  40eedc:	bl	402840 <__ctype_toupper_loc@plt>
  40eee0:	mov	x2, x19
  40eee4:	sub	x8, x19, #0x2
  40eee8:	ldr	x9, [x0]
  40eeec:	ldrb	w10, [x22, x26]
  40eef0:	ldr	w9, [x9, x10, lsl #2]
  40eef4:	strb	w9, [x8, x26]
  40eef8:	sub	x26, x26, #0x1
  40eefc:	cmp	x26, #0x1
  40ef00:	b.ne	40eee8 <__fxstatat@plt+0xc348>  // b.any
  40ef04:	b	40ef20 <__fxstatat@plt+0xc380>
  40ef08:	ldr	x1, [sp, #24]
  40ef0c:	mov	x0, x2
  40ef10:	mov	x19, x2
  40ef14:	mov	x2, x21
  40ef18:	bl	4024d0 <memcpy@plt>
  40ef1c:	mov	x2, x19
  40ef20:	ldr	x0, [sp, #120]
  40ef24:	add	x2, x2, x21
  40ef28:	mov	w1, #0xa                   	// #10
  40ef2c:	add	x0, x24, x0
  40ef30:	b	40f1b0 <__fxstatat@plt+0xc610>
  40ef34:	mov	w11, #0x1                   	// #1
  40ef38:	b	40f00c <__fxstatat@plt+0xc46c>
  40ef3c:	mov	w16, wzr
  40ef40:	mov	w19, wzr
  40ef44:	mov	w8, #0x59                  	// #89
  40ef48:	b	40eb6c <__fxstatat@plt+0xbfcc>
  40ef4c:	ldr	x22, [sp, #16]
  40ef50:	tbnz	w24, #0, 40f2b4 <__fxstatat@plt+0xc714>
  40ef54:	eor	w8, w24, #0x1
  40ef58:	and	w8, w23, w8
  40ef5c:	tbz	w8, #0, 40f268 <__fxstatat@plt+0xc6c8>
  40ef60:	cbz	x21, 40f2ec <__fxstatat@plt+0xc74c>
  40ef64:	mov	x24, x2
  40ef68:	bl	402840 <__ctype_toupper_loc@plt>
  40ef6c:	mov	w1, #0xa                   	// #10
  40ef70:	mov	x2, x24
  40ef74:	sub	x8, x24, #0x1
  40ef78:	mov	x9, x21
  40ef7c:	ldr	x10, [x0]
  40ef80:	ldrb	w11, [x22, x9]
  40ef84:	ldr	w10, [x10, x11, lsl #2]
  40ef88:	subs	x11, x9, #0x1
  40ef8c:	strb	w10, [x8, x9]
  40ef90:	mov	x9, x11
  40ef94:	b.ne	40ef7c <__fxstatat@plt+0xc3dc>  // b.any
  40ef98:	b	40f2ec <__fxstatat@plt+0xc74c>
  40ef9c:	mov	w1, #0x20                  	// #32
  40efa0:	mov	x0, x10
  40efa4:	mov	x2, x8
  40efa8:	mov	x22, x10
  40efac:	bl	4027c0 <memset@plt>
  40efb0:	ldr	x8, [sp, #80]
  40efb4:	add	x10, x22, x8
  40efb8:	ldr	w8, [sp, #132]
  40efbc:	ldr	x3, [sp, #104]
  40efc0:	ldr	x7, [sp, #64]
  40efc4:	mov	x0, x10
  40efc8:	and	w4, w8, #0x1
  40efcc:	ldr	w8, [sp, #52]
  40efd0:	mov	x1, x24
  40efd4:	mov	x2, x26
  40efd8:	mov	w5, w28
  40efdc:	mov	w6, w21
  40efe0:	str	w8, [sp]
  40efe4:	mov	x22, x10
  40efe8:	bl	40dfdc <__fxstatat@plt+0xb43c>
  40efec:	ldr	x0, [sp, #120]
  40eff0:	mov	x2, x22
  40eff4:	add	x2, x22, x23
  40eff8:	b	40f468 <__fxstatat@plt+0xc8c8>
  40effc:	ldr	x11, [sp, #32]
  40f000:	ldrb	w11, [x11]
  40f004:	cmp	w11, #0x2d
  40f008:	cset	w11, eq  // eq = none
  40f00c:	cmp	x10, #0x3
  40f010:	b.hi	40f09c <__fxstatat@plt+0xc4fc>  // b.pmore
  40f014:	mov	w13, #0x8889                	// #34953
  40f018:	movk	w13, #0x8888, lsl #16
  40f01c:	adrp	x15, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f020:	add	x15, x15, #0x894
  40f024:	smull	x16, w12, w13
  40f028:	adr	x17, 40f084 <__fxstatat@plt+0xc4e4>
  40f02c:	ldrh	w18, [x15, x10, lsl #1]
  40f030:	add	x17, x17, x18, lsl #2
  40f034:	lsr	x10, x16, #32
  40f038:	mov	w14, #0xb3c5                	// #46021
  40f03c:	add	w10, w10, w12
  40f040:	movk	w14, #0x91a2, lsl #16
  40f044:	asr	w15, w10, #5
  40f048:	smull	x14, w12, w14
  40f04c:	add	w15, w15, w10, lsr #31
  40f050:	lsr	x14, x14, #32
  40f054:	smull	x13, w15, w13
  40f058:	add	w14, w14, w12
  40f05c:	lsr	x13, x13, #32
  40f060:	asr	w10, w14, #11
  40f064:	add	w13, w13, w15
  40f068:	add	w10, w10, w14, lsr #31
  40f06c:	asr	w14, w13, #5
  40f070:	add	w13, w14, w13, lsr #31
  40f074:	mov	w16, #0x3c                  	// #60
  40f078:	msub	w14, w13, w16, w15
  40f07c:	msub	w12, w15, w16, w12
  40f080:	br	x17
  40f084:	mov	w13, #0x64                  	// #100
  40f088:	mov	w12, wzr
  40f08c:	mov	w19, #0x5                   	// #5
  40f090:	madd	w10, w10, w13, w14
  40f094:	mov	w13, #0x1                   	// #1
  40f098:	b	40eb5c <__fxstatat@plt+0xbfbc>
  40f09c:	str	w23, [sp, #132]
  40f0a0:	sub	x8, x25, #0x1
  40f0a4:	mov	w9, #0x1                   	// #1
  40f0a8:	sub	x26, x20, x9
  40f0ac:	ldrb	w10, [x25, x26]
  40f0b0:	mov	x23, x9
  40f0b4:	mov	x24, x8
  40f0b8:	add	x9, x9, #0x1
  40f0bc:	cmp	w10, #0x25
  40f0c0:	sub	x8, x8, #0x1
  40f0c4:	b.ne	40f0a8 <__fxstatat@plt+0xc508>  // b.any
  40f0c8:	ldr	x9, [sp, #136]
  40f0cc:	bic	w8, w22, w22, asr #31
  40f0d0:	cmp	w8, w23
  40f0d4:	csel	w19, w23, w8, cc  // cc = lo, ul, last
  40f0d8:	sub	x9, x9, x0
  40f0dc:	cmp	x9, x19
  40f0e0:	b.ls	40f528 <__fxstatat@plt+0xc988>  // b.plast
  40f0e4:	cbz	x2, 40f1ac <__fxstatat@plt+0xc60c>
  40f0e8:	cmp	w8, w23
  40f0ec:	and	x21, x23, #0xffffffff
  40f0f0:	b.ls	40f13c <__fxstatat@plt+0xc59c>  // b.plast
  40f0f4:	sxtw	x9, w22
  40f0f8:	and	w8, w28, #0xff
  40f0fc:	cmp	w8, #0x30
  40f100:	sub	x22, x9, x21
  40f104:	str	x0, [sp, #120]
  40f108:	b.eq	40f114 <__fxstatat@plt+0xc574>  // b.none
  40f10c:	cmp	w8, #0x2b
  40f110:	b.ne	40f11c <__fxstatat@plt+0xc57c>  // b.any
  40f114:	mov	w1, #0x30                  	// #48
  40f118:	b	40f120 <__fxstatat@plt+0xc580>
  40f11c:	mov	w1, #0x20                  	// #32
  40f120:	mov	x0, x2
  40f124:	mov	x28, x2
  40f128:	mov	x2, x22
  40f12c:	bl	4027c0 <memset@plt>
  40f130:	ldr	x0, [sp, #120]
  40f134:	mov	x2, x28
  40f138:	add	x2, x28, x22
  40f13c:	ldr	w8, [sp, #132]
  40f140:	tbz	w8, #0, 40f184 <__fxstatat@plt+0xc5e4>
  40f144:	mov	x22, x0
  40f148:	mov	x26, x2
  40f14c:	bl	402840 <__ctype_toupper_loc@plt>
  40f150:	mov	w1, #0xa                   	// #10
  40f154:	mov	x2, x26
  40f158:	sub	x8, x26, #0x1
  40f15c:	add	x9, x24, w23, uxtw
  40f160:	mov	x10, x21
  40f164:	ldr	x11, [x0]
  40f168:	ldrb	w12, [x9], #-1
  40f16c:	ldr	w11, [x11, x12, lsl #2]
  40f170:	subs	x12, x10, #0x1
  40f174:	strb	w11, [x8, x10]
  40f178:	mov	x10, x12
  40f17c:	b.ne	40f164 <__fxstatat@plt+0xc5c4>  // b.any
  40f180:	b	40f1a4 <__fxstatat@plt+0xc604>
  40f184:	mov	x22, x0
  40f188:	add	x1, x25, x26
  40f18c:	mov	x0, x2
  40f190:	mov	x23, x2
  40f194:	mov	x2, x21
  40f198:	bl	4024d0 <memcpy@plt>
  40f19c:	mov	w1, #0xa                   	// #10
  40f1a0:	mov	x2, x23
  40f1a4:	add	x2, x2, x21
  40f1a8:	mov	x0, x22
  40f1ac:	add	x0, x0, x19
  40f1b0:	ldrb	w8, [x25, #1]!
  40f1b4:	mov	w22, #0xffffffff            	// #-1
  40f1b8:	cbnz	w8, 40e0a8 <__fxstatat@plt+0xb508>
  40f1bc:	b	40f514 <__fxstatat@plt+0xc974>
  40f1c0:	ldr	w10, [sp, #52]
  40f1c4:	mov	w19, #0x9                   	// #9
  40f1c8:	mov	w22, #0x9                   	// #9
  40f1cc:	b	40eb48 <__fxstatat@plt+0xbfa8>
  40f1d0:	mov	w14, #0xfffff894            	// #-1900
  40f1d4:	sub	w13, w14, w13
  40f1d8:	add	w15, w10, #0x64
  40f1dc:	cmp	w12, w13
  40f1e0:	mov	w11, wzr
  40f1e4:	csneg	w10, w15, w10, ge  // ge = tcont
  40f1e8:	mov	w19, #0x2                   	// #2
  40f1ec:	ldr	w12, [sp, #48]
  40f1f0:	cmp	w28, #0x0
  40f1f4:	csel	w28, w12, w28, eq  // eq = none
  40f1f8:	cmp	w28, #0x2b
  40f1fc:	b.ne	40f22c <__fxstatat@plt+0xc68c>  // b.any
  40f200:	cmp	w19, #0x2
  40f204:	mov	w13, #0x270f                	// #9999
  40f208:	mov	w14, #0x63                  	// #99
  40f20c:	csel	w13, w14, w13, eq  // eq = none
  40f210:	cmp	w13, w10
  40f214:	cset	w13, cc  // cc = lo, ul, last
  40f218:	cmp	w19, w22
  40f21c:	cset	w14, lt  // lt = tstop
  40f220:	mov	w12, wzr
  40f224:	orr	w13, w14, w13
  40f228:	b	40eb5c <__fxstatat@plt+0xbfbc>
  40f22c:	mov	w12, wzr
  40f230:	mov	w13, wzr
  40f234:	b	40eb5c <__fxstatat@plt+0xbfbc>
  40f238:	cbz	w12, 40f4e8 <__fxstatat@plt+0xc948>
  40f23c:	mov	w15, #0x2710                	// #10000
  40f240:	mov	w16, #0x64                  	// #100
  40f244:	madd	w10, w10, w15, w12
  40f248:	mov	w19, #0x9                   	// #9
  40f24c:	mov	w13, #0x1                   	// #1
  40f250:	madd	w10, w14, w16, w10
  40f254:	mov	w12, #0x14                  	// #20
  40f258:	b	40eb5c <__fxstatat@plt+0xbfbc>
  40f25c:	ldr	w10, [sp, #52]
  40f260:	mov	w19, w22
  40f264:	b	40eb48 <__fxstatat@plt+0xbfa8>
  40f268:	ldr	x1, [sp, #32]
  40f26c:	mov	x0, x2
  40f270:	mov	x22, x2
  40f274:	mov	x2, x21
  40f278:	bl	4024d0 <memcpy@plt>
  40f27c:	mov	w1, #0xa                   	// #10
  40f280:	mov	x2, x22
  40f284:	b	40f2ec <__fxstatat@plt+0xc74c>
  40f288:	mov	w8, #0x25                  	// #37
  40f28c:	b	40e16c <__fxstatat@plt+0xb5cc>
  40f290:	mov	w1, #0x20                  	// #32
  40f294:	mov	x0, x2
  40f298:	mov	x26, x2
  40f29c:	mov	x2, x22
  40f2a0:	bl	4027c0 <memset@plt>
  40f2a4:	add	x2, x26, x22
  40f2a8:	ldr	x22, [sp, #16]
  40f2ac:	mov	w1, #0xa                   	// #10
  40f2b0:	tbz	w24, #0, 40ef54 <__fxstatat@plt+0xc3b4>
  40f2b4:	cbz	x21, 40f2ec <__fxstatat@plt+0xc74c>
  40f2b8:	mov	x24, x2
  40f2bc:	bl	402690 <__ctype_tolower_loc@plt>
  40f2c0:	mov	w1, #0xa                   	// #10
  40f2c4:	mov	x2, x24
  40f2c8:	sub	x8, x24, #0x1
  40f2cc:	mov	x9, x21
  40f2d0:	ldr	x10, [x0]
  40f2d4:	ldrb	w11, [x22, x9]
  40f2d8:	ldr	w10, [x10, x11, lsl #2]
  40f2dc:	subs	x11, x9, #0x1
  40f2e0:	strb	w10, [x8, x9]
  40f2e4:	mov	x9, x11
  40f2e8:	b.ne	40f2d0 <__fxstatat@plt+0xc730>  // b.any
  40f2ec:	ldr	x0, [sp, #120]
  40f2f0:	add	x2, x2, x21
  40f2f4:	b	40f46c <__fxstatat@plt+0xc8cc>
  40f2f8:	mov	w1, #0x20                  	// #32
  40f2fc:	mov	x0, x2
  40f300:	mov	x22, x2
  40f304:	mov	x2, x21
  40f308:	bl	4027c0 <memset@plt>
  40f30c:	add	x2, x22, x21
  40f310:	mov	x0, x23
  40f314:	mov	w1, #0xa                   	// #10
  40f318:	mov	w8, #0xa                   	// #10
  40f31c:	b	40e16c <__fxstatat@plt+0xb5cc>
  40f320:	mov	w1, #0x20                  	// #32
  40f324:	mov	x0, x2
  40f328:	mov	x22, x2
  40f32c:	mov	x2, x21
  40f330:	bl	4027c0 <memset@plt>
  40f334:	add	x2, x22, x21
  40f338:	mov	x0, x23
  40f33c:	mov	w1, #0xa                   	// #10
  40f340:	mov	w8, #0x9                   	// #9
  40f344:	b	40e16c <__fxstatat@plt+0xb5cc>
  40f348:	mov	w1, #0x20                  	// #32
  40f34c:	mov	x0, x2
  40f350:	mov	x24, x2
  40f354:	mov	x2, x23
  40f358:	bl	4027c0 <memset@plt>
  40f35c:	ldr	x0, [sp, #120]
  40f360:	ldr	x12, [sp, #80]
  40f364:	add	x2, x24, x23
  40f368:	mov	w1, #0xa                   	// #10
  40f36c:	strb	w19, [x2], #1
  40f370:	add	x0, x0, x26
  40f374:	bic	w8, w22, w22, asr #31
  40f378:	ldr	x9, [sp, #96]
  40f37c:	sub	x26, x9, x21
  40f380:	mov	w9, w8
  40f384:	cmp	x26, w8, uxtw
  40f388:	ldr	x8, [sp, #136]
  40f38c:	csel	x19, x9, x26, cc  // cc = lo, ul, last
  40f390:	sub	x8, x8, x0
  40f394:	cmp	x19, x8
  40f398:	b.cs	40f528 <__fxstatat@plt+0xc988>  // b.hs, b.nlast
  40f39c:	cbz	x2, 40f46c <__fxstatat@plt+0xc8cc>
  40f3a0:	cbnz	w12, 40f3d0 <__fxstatat@plt+0xc830>
  40f3a4:	cmp	x26, x9
  40f3a8:	ldr	w9, [sp, #132]
  40f3ac:	b.cs	40f404 <__fxstatat@plt+0xc864>  // b.hs, b.nlast
  40f3b0:	sxtw	x8, w22
  40f3b4:	cmp	w28, #0x30
  40f3b8:	sub	x22, x8, x26
  40f3bc:	b.eq	40f3c8 <__fxstatat@plt+0xc828>  // b.none
  40f3c0:	cmp	w28, #0x2b
  40f3c4:	b.ne	40f3d8 <__fxstatat@plt+0xc838>  // b.any
  40f3c8:	mov	w1, #0x30                  	// #48
  40f3cc:	b	40f3dc <__fxstatat@plt+0xc83c>
  40f3d0:	ldr	w9, [sp, #132]
  40f3d4:	b	40f404 <__fxstatat@plt+0xc864>
  40f3d8:	mov	w1, #0x20                  	// #32
  40f3dc:	mov	x23, x0
  40f3e0:	mov	x0, x2
  40f3e4:	mov	x24, x2
  40f3e8:	mov	x2, x22
  40f3ec:	mov	w28, w9
  40f3f0:	bl	4027c0 <memset@plt>
  40f3f4:	mov	x2, x24
  40f3f8:	mov	x0, x23
  40f3fc:	mov	w9, w28
  40f400:	add	x2, x24, x22
  40f404:	mov	x22, x0
  40f408:	tbz	w9, #0, 40f448 <__fxstatat@plt+0xc8a8>
  40f40c:	cbz	x26, 40f460 <__fxstatat@plt+0xc8c0>
  40f410:	mov	x23, x2
  40f414:	bl	402840 <__ctype_toupper_loc@plt>
  40f418:	mov	x2, x23
  40f41c:	sub	x8, x23, #0x1
  40f420:	sub	x9, x21, #0x1
  40f424:	mov	x10, x26
  40f428:	ldr	x11, [x0]
  40f42c:	ldrb	w12, [x9, x10]
  40f430:	ldr	w11, [x11, x12, lsl #2]
  40f434:	subs	x12, x10, #0x1
  40f438:	strb	w11, [x8, x10]
  40f43c:	mov	x10, x12
  40f440:	b.ne	40f428 <__fxstatat@plt+0xc888>  // b.any
  40f444:	b	40f460 <__fxstatat@plt+0xc8c0>
  40f448:	mov	x0, x2
  40f44c:	mov	x1, x21
  40f450:	mov	x21, x2
  40f454:	mov	x2, x26
  40f458:	bl	4024d0 <memcpy@plt>
  40f45c:	mov	x2, x21
  40f460:	add	x2, x2, x26
  40f464:	mov	x0, x22
  40f468:	mov	w1, #0xa                   	// #10
  40f46c:	add	x0, x19, x0
  40f470:	b	40f1b0 <__fxstatat@plt+0xc610>
  40f474:	mov	w1, #0x20                  	// #32
  40f478:	mov	x0, x2
  40f47c:	mov	x24, x2
  40f480:	mov	x2, x22
  40f484:	bl	4027c0 <memset@plt>
  40f488:	ldr	x0, [sp, #120]
  40f48c:	ldr	x12, [sp, #80]
  40f490:	add	x2, x24, x22
  40f494:	mov	w1, #0xa                   	// #10
  40f498:	strb	w19, [x2], #1
  40f49c:	add	x0, x0, x23
  40f4a0:	sxtw	x23, w26
  40f4a4:	cbz	x2, 40f4d8 <__fxstatat@plt+0xc938>
  40f4a8:	mov	w1, #0x30                  	// #48
  40f4ac:	mov	x19, x0
  40f4b0:	mov	x0, x2
  40f4b4:	mov	x22, x2
  40f4b8:	mov	x2, x23
  40f4bc:	mov	x24, x12
  40f4c0:	bl	4027c0 <memset@plt>
  40f4c4:	mov	x2, x22
  40f4c8:	mov	x12, x24
  40f4cc:	mov	w1, #0xa                   	// #10
  40f4d0:	mov	x0, x19
  40f4d4:	add	x2, x22, x23
  40f4d8:	mov	w22, wzr
  40f4dc:	mov	w8, wzr
  40f4e0:	add	x0, x0, x23
  40f4e4:	b	40f378 <__fxstatat@plt+0xc7d8>
  40f4e8:	cbz	w14, 40f504 <__fxstatat@plt+0xc964>
  40f4ec:	mov	w12, #0x64                  	// #100
  40f4f0:	mov	w19, #0x6                   	// #6
  40f4f4:	mov	w13, #0x1                   	// #1
  40f4f8:	madd	w10, w10, w12, w14
  40f4fc:	mov	w12, #0x4                   	// #4
  40f500:	b	40eb5c <__fxstatat@plt+0xbfbc>
  40f504:	mov	w12, wzr
  40f508:	mov	w19, #0x3                   	// #3
  40f50c:	b	40f094 <__fxstatat@plt+0xc4f4>
  40f510:	mov	x0, xzr
  40f514:	ldr	x8, [sp, #136]
  40f518:	cbz	x8, 40f52c <__fxstatat@plt+0xc98c>
  40f51c:	cbz	x2, 40f52c <__fxstatat@plt+0xc98c>
  40f520:	strb	wzr, [x2]
  40f524:	b	40f52c <__fxstatat@plt+0xc98c>
  40f528:	mov	x0, xzr
  40f52c:	add	sp, sp, #0x4c0
  40f530:	ldp	x20, x19, [sp, #80]
  40f534:	ldp	x22, x21, [sp, #64]
  40f538:	ldp	x24, x23, [sp, #48]
  40f53c:	ldp	x26, x25, [sp, #32]
  40f540:	ldp	x28, x27, [sp, #16]
  40f544:	ldp	x29, x30, [sp], #96
  40f548:	ret
  40f54c:	stp	x29, x30, [sp, #-32]!
  40f550:	stp	x20, x19, [sp, #16]
  40f554:	mov	x29, sp
  40f558:	cbz	x0, 40f5d8 <__fxstatat@plt+0xca38>
  40f55c:	mov	w1, #0x2f                  	// #47
  40f560:	mov	x19, x0
  40f564:	bl	402870 <strrchr@plt>
  40f568:	cmp	x0, #0x0
  40f56c:	csinc	x20, x19, x0, eq  // eq = none
  40f570:	sub	x8, x20, x19
  40f574:	cmp	x8, #0x7
  40f578:	b.lt	40f5bc <__fxstatat@plt+0xca1c>  // b.tstop
  40f57c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f580:	sub	x0, x20, #0x7
  40f584:	add	x1, x1, #0x8ef
  40f588:	mov	w2, #0x7                   	// #7
  40f58c:	bl	402780 <strncmp@plt>
  40f590:	cbnz	w0, 40f5bc <__fxstatat@plt+0xca1c>
  40f594:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f598:	add	x1, x1, #0x8f7
  40f59c:	mov	w2, #0x3                   	// #3
  40f5a0:	mov	x0, x20
  40f5a4:	bl	402780 <strncmp@plt>
  40f5a8:	mov	x19, x20
  40f5ac:	cbnz	w0, 40f5bc <__fxstatat@plt+0xca1c>
  40f5b0:	add	x19, x20, #0x3
  40f5b4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40f5b8:	str	x19, [x8, #1496]
  40f5bc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f5c0:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40f5c4:	str	x19, [x8, #1904]
  40f5c8:	str	x19, [x9, #1456]
  40f5cc:	ldp	x20, x19, [sp, #16]
  40f5d0:	ldp	x29, x30, [sp], #32
  40f5d4:	ret
  40f5d8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  40f5dc:	ldr	x1, [x8, #1464]
  40f5e0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f5e4:	add	x0, x0, #0x8b7
  40f5e8:	bl	402550 <fputs@plt>
  40f5ec:	bl	4028c0 <abort@plt>
  40f5f0:	stp	x29, x30, [sp, #-48]!
  40f5f4:	str	x21, [sp, #16]
  40f5f8:	stp	x20, x19, [sp, #32]
  40f5fc:	mov	x29, sp
  40f600:	mov	x19, x0
  40f604:	bl	402b30 <__errno_location@plt>
  40f608:	ldr	w21, [x0]
  40f60c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f610:	add	x8, x8, #0x778
  40f614:	cmp	x19, #0x0
  40f618:	mov	x20, x0
  40f61c:	csel	x0, x8, x19, eq  // eq = none
  40f620:	mov	w1, #0x38                  	// #56
  40f624:	bl	4113a4 <__fxstatat@plt+0xe804>
  40f628:	str	w21, [x20]
  40f62c:	ldp	x20, x19, [sp, #32]
  40f630:	ldr	x21, [sp, #16]
  40f634:	ldp	x29, x30, [sp], #48
  40f638:	ret
  40f63c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f640:	add	x8, x8, #0x778
  40f644:	cmp	x0, #0x0
  40f648:	csel	x8, x8, x0, eq  // eq = none
  40f64c:	ldr	w0, [x8]
  40f650:	ret
  40f654:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f658:	add	x8, x8, #0x778
  40f65c:	cmp	x0, #0x0
  40f660:	csel	x8, x8, x0, eq  // eq = none
  40f664:	str	w1, [x8]
  40f668:	ret
  40f66c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f670:	add	x8, x8, #0x778
  40f674:	cmp	x0, #0x0
  40f678:	ubfx	w9, w1, #5, #3
  40f67c:	csel	x8, x8, x0, eq  // eq = none
  40f680:	add	x8, x8, w9, uxtw #2
  40f684:	ldr	w9, [x8, #8]
  40f688:	lsr	w10, w9, w1
  40f68c:	and	w0, w10, #0x1
  40f690:	and	w10, w2, #0x1
  40f694:	eor	w10, w0, w10
  40f698:	lsl	w10, w10, w1
  40f69c:	eor	w9, w10, w9
  40f6a0:	str	w9, [x8, #8]
  40f6a4:	ret
  40f6a8:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f6ac:	add	x8, x8, #0x778
  40f6b0:	cmp	x0, #0x0
  40f6b4:	csel	x8, x8, x0, eq  // eq = none
  40f6b8:	ldr	w0, [x8, #4]
  40f6bc:	str	w1, [x8, #4]
  40f6c0:	ret
  40f6c4:	stp	x29, x30, [sp, #-16]!
  40f6c8:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f6cc:	add	x8, x8, #0x778
  40f6d0:	cmp	x0, #0x0
  40f6d4:	csel	x8, x8, x0, eq  // eq = none
  40f6d8:	mov	w9, #0xa                   	// #10
  40f6dc:	mov	x29, sp
  40f6e0:	str	w9, [x8]
  40f6e4:	cbz	x1, 40f6f8 <__fxstatat@plt+0xcb58>
  40f6e8:	cbz	x2, 40f6f8 <__fxstatat@plt+0xcb58>
  40f6ec:	stp	x1, x2, [x8, #40]
  40f6f0:	ldp	x29, x30, [sp], #16
  40f6f4:	ret
  40f6f8:	bl	4028c0 <abort@plt>
  40f6fc:	sub	sp, sp, #0x60
  40f700:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  40f704:	add	x8, x8, #0x778
  40f708:	cmp	x4, #0x0
  40f70c:	stp	x29, x30, [sp, #16]
  40f710:	str	x25, [sp, #32]
  40f714:	stp	x24, x23, [sp, #48]
  40f718:	stp	x22, x21, [sp, #64]
  40f71c:	stp	x20, x19, [sp, #80]
  40f720:	add	x29, sp, #0x10
  40f724:	mov	x19, x3
  40f728:	mov	x20, x2
  40f72c:	mov	x21, x1
  40f730:	mov	x22, x0
  40f734:	csel	x24, x8, x4, eq  // eq = none
  40f738:	bl	402b30 <__errno_location@plt>
  40f73c:	ldp	w4, w5, [x24]
  40f740:	ldp	x7, x8, [x24, #40]
  40f744:	ldr	w25, [x0]
  40f748:	mov	x23, x0
  40f74c:	add	x6, x24, #0x8
  40f750:	mov	x0, x22
  40f754:	mov	x1, x21
  40f758:	mov	x2, x20
  40f75c:	mov	x3, x19
  40f760:	str	x8, [sp]
  40f764:	bl	40f788 <__fxstatat@plt+0xcbe8>
  40f768:	str	w25, [x23]
  40f76c:	ldp	x20, x19, [sp, #80]
  40f770:	ldp	x22, x21, [sp, #64]
  40f774:	ldp	x24, x23, [sp, #48]
  40f778:	ldr	x25, [sp, #32]
  40f77c:	ldp	x29, x30, [sp, #16]
  40f780:	add	sp, sp, #0x60
  40f784:	ret
  40f788:	sub	sp, sp, #0x120
  40f78c:	stp	x29, x30, [sp, #192]
  40f790:	add	x29, sp, #0xc0
  40f794:	ldr	x8, [x29, #96]
  40f798:	stp	x28, x27, [sp, #208]
  40f79c:	stp	x26, x25, [sp, #224]
  40f7a0:	stp	x24, x23, [sp, #240]
  40f7a4:	stp	x22, x21, [sp, #256]
  40f7a8:	stp	x20, x19, [sp, #272]
  40f7ac:	str	x7, [sp, #88]
  40f7b0:	stur	x6, [x29, #-40]
  40f7b4:	mov	w19, w5
  40f7b8:	mov	w22, w4
  40f7bc:	mov	x28, x3
  40f7c0:	mov	x20, x2
  40f7c4:	mov	x24, x1
  40f7c8:	stur	x8, [x29, #-88]
  40f7cc:	mov	x21, x0
  40f7d0:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40f7d4:	mov	w4, w22
  40f7d8:	mov	w8, wzr
  40f7dc:	mov	w14, wzr
  40f7e0:	str	w19, [sp, #80]
  40f7e4:	ubfx	w19, w19, #1, #1
  40f7e8:	add	x9, x20, #0x1
  40f7ec:	mov	w25, #0x1                   	// #1
  40f7f0:	str	x0, [sp, #48]
  40f7f4:	str	xzr, [sp, #64]
  40f7f8:	stur	xzr, [x29, #-64]
  40f7fc:	stur	xzr, [x29, #-32]
  40f800:	str	wzr, [sp, #72]
  40f804:	stur	x20, [x29, #-80]
  40f808:	str	x9, [sp, #96]
  40f80c:	cmp	w4, #0xa
  40f810:	b.hi	4103a8 <__fxstatat@plt+0xd808>  // b.pmore
  40f814:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f818:	mov	w9, w4
  40f81c:	add	x12, x12, #0x900
  40f820:	mov	x22, x24
  40f824:	adr	x10, 40f844 <__fxstatat@plt+0xcca4>
  40f828:	ldrb	w11, [x12, x9]
  40f82c:	add	x10, x10, x11, lsl #2
  40f830:	ldur	x24, [x29, #-80]
  40f834:	mov	x20, xzr
  40f838:	mov	w16, wzr
  40f83c:	mov	w9, #0x1                   	// #1
  40f840:	br	x10
  40f844:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f848:	add	x0, x0, #0xa56
  40f84c:	mov	w1, w4
  40f850:	mov	w20, w4
  40f854:	mov	w23, w14
  40f858:	bl	410ad4 <__fxstatat@plt+0xdf34>
  40f85c:	str	x0, [sp, #88]
  40f860:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f864:	add	x0, x0, #0xe4d
  40f868:	mov	w1, w20
  40f86c:	bl	410ad4 <__fxstatat@plt+0xdf34>
  40f870:	mov	w14, w23
  40f874:	mov	w4, w20
  40f878:	stur	x0, [x29, #-88]
  40f87c:	tbnz	w19, #0, 40f8bc <__fxstatat@plt+0xcd1c>
  40f880:	ldr	x8, [sp, #88]
  40f884:	ldrb	w9, [x8]
  40f888:	cbz	w9, 40f8bc <__fxstatat@plt+0xcd1c>
  40f88c:	mov	w27, w14
  40f890:	mov	w26, w4
  40f894:	mov	x10, xzr
  40f898:	add	x8, x8, #0x1
  40f89c:	cmp	x10, x22
  40f8a0:	b.cs	40f8a8 <__fxstatat@plt+0xcd08>  // b.hs, b.nlast
  40f8a4:	strb	w9, [x21, x10]
  40f8a8:	ldrb	w9, [x8, x10]
  40f8ac:	add	x20, x10, #0x1
  40f8b0:	mov	x10, x20
  40f8b4:	cbnz	w9, 40f89c <__fxstatat@plt+0xccfc>
  40f8b8:	b	40f8c8 <__fxstatat@plt+0xcd28>
  40f8bc:	mov	w27, w14
  40f8c0:	mov	w26, w4
  40f8c4:	mov	x20, xzr
  40f8c8:	ldur	x23, [x29, #-88]
  40f8cc:	mov	x0, x23
  40f8d0:	bl	402540 <strlen@plt>
  40f8d4:	stur	x0, [x29, #-32]
  40f8d8:	stur	x23, [x29, #-64]
  40f8dc:	mov	w9, #0x1                   	// #1
  40f8e0:	mov	w16, w19
  40f8e4:	mov	w4, w26
  40f8e8:	mov	w14, w27
  40f8ec:	b	40f968 <__fxstatat@plt+0xcdc8>
  40f8f0:	mov	w8, #0x1                   	// #1
  40f8f4:	b	40f944 <__fxstatat@plt+0xcda4>
  40f8f8:	mov	w4, wzr
  40f8fc:	mov	x20, xzr
  40f900:	mov	w16, wzr
  40f904:	mov	w9, w8
  40f908:	b	40f968 <__fxstatat@plt+0xcdc8>
  40f90c:	tbnz	w19, #0, 40f944 <__fxstatat@plt+0xcda4>
  40f910:	mov	w9, w8
  40f914:	b	41025c <__fxstatat@plt+0xd6bc>
  40f918:	tbz	w19, #0, 410224 <__fxstatat@plt+0xd684>
  40f91c:	mov	w8, #0x1                   	// #1
  40f920:	stur	x8, [x29, #-32]
  40f924:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f928:	add	x8, x8, #0xa54
  40f92c:	mov	x20, xzr
  40f930:	mov	w4, #0x5                   	// #5
  40f934:	stur	x8, [x29, #-64]
  40f938:	mov	w9, #0x1                   	// #1
  40f93c:	b	40f964 <__fxstatat@plt+0xcdc4>
  40f940:	tbz	w19, #0, 410258 <__fxstatat@plt+0xd6b8>
  40f944:	mov	w9, #0x1                   	// #1
  40f948:	stur	x9, [x29, #-32]
  40f94c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  40f950:	add	x9, x9, #0xe4d
  40f954:	mov	x20, xzr
  40f958:	mov	w4, #0x2                   	// #2
  40f95c:	stur	x9, [x29, #-64]
  40f960:	mov	w9, w8
  40f964:	mov	w16, #0x1                   	// #1
  40f968:	mov	w15, w9
  40f96c:	ldp	x8, x9, [x29, #-40]
  40f970:	eor	w17, w16, #0x1
  40f974:	stur	w17, [x29, #-68]
  40f978:	mov	x23, xzr
  40f97c:	cmp	x8, #0x0
  40f980:	cset	w8, eq  // eq = none
  40f984:	cmp	x9, #0x0
  40f988:	cset	w9, ne  // ne = any
  40f98c:	cmp	w4, #0x2
  40f990:	cset	w10, ne  // ne = any
  40f994:	and	w13, w10, w15
  40f998:	and	w12, w9, w16
  40f99c:	orr	w10, w10, w17
  40f9a0:	and	w17, w9, w13
  40f9a4:	orr	w9, w13, w16
  40f9a8:	eor	w9, w9, #0x1
  40f9ac:	cset	w11, eq  // eq = none
  40f9b0:	orr	w8, w8, w9
  40f9b4:	and	w12, w15, w12
  40f9b8:	str	w10, [sp, #84]
  40f9bc:	and	w10, w11, w16
  40f9c0:	stur	w8, [x29, #-24]
  40f9c4:	eor	w8, w15, #0x1
  40f9c8:	str	w12, [sp, #56]
  40f9cc:	str	w10, [sp, #76]
  40f9d0:	stur	w15, [x29, #-72]
  40f9d4:	str	w8, [sp, #60]
  40f9d8:	stp	w16, w4, [x29, #-48]
  40f9dc:	stur	w17, [x29, #-52]
  40f9e0:	cmn	x28, #0x1
  40f9e4:	b.eq	40f9f4 <__fxstatat@plt+0xce54>  // b.none
  40f9e8:	cmp	x23, x28
  40f9ec:	b.ne	40f9fc <__fxstatat@plt+0xce5c>  // b.any
  40f9f0:	b	4101b4 <__fxstatat@plt+0xd614>
  40f9f4:	ldrb	w8, [x24, x23]
  40f9f8:	cbz	w8, 4101bc <__fxstatat@plt+0xd61c>
  40f9fc:	cbz	w17, 40fa3c <__fxstatat@plt+0xce9c>
  40fa00:	ldur	x8, [x29, #-32]
  40fa04:	cmp	x8, #0x2
  40fa08:	add	x19, x23, x8
  40fa0c:	b.cc	40fa34 <__fxstatat@plt+0xce94>  // b.lo, b.ul, b.last
  40fa10:	cmn	x28, #0x1
  40fa14:	b.ne	40fa34 <__fxstatat@plt+0xce94>  // b.any
  40fa18:	mov	x0, x24
  40fa1c:	mov	w26, w14
  40fa20:	bl	402540 <strlen@plt>
  40fa24:	ldp	w17, w16, [x29, #-52]
  40fa28:	ldur	w4, [x29, #-44]
  40fa2c:	mov	w14, w26
  40fa30:	mov	x28, x0
  40fa34:	cmp	x19, x28
  40fa38:	b.ls	40fa44 <__fxstatat@plt+0xcea4>  // b.plast
  40fa3c:	mov	w27, wzr
  40fa40:	b	40fa7c <__fxstatat@plt+0xcedc>
  40fa44:	ldur	x1, [x29, #-64]
  40fa48:	ldur	x2, [x29, #-32]
  40fa4c:	add	x0, x24, x23
  40fa50:	mov	w19, w14
  40fa54:	bl	402810 <bcmp@plt>
  40fa58:	ldur	w9, [x29, #-68]
  40fa5c:	cmp	w0, #0x0
  40fa60:	cset	w8, ne  // ne = any
  40fa64:	cset	w27, eq  // eq = none
  40fa68:	orr	w8, w8, w9
  40fa6c:	tbz	w8, #0, 4102b4 <__fxstatat@plt+0xd714>
  40fa70:	ldp	w16, w4, [x29, #-48]
  40fa74:	ldur	w17, [x29, #-52]
  40fa78:	mov	w14, w19
  40fa7c:	ldrb	w19, [x24, x23]
  40fa80:	cmp	w19, #0x7e
  40fa84:	b.hi	40fc9c <__fxstatat@plt+0xd0fc>  // b.pmore
  40fa88:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x5d48>
  40fa8c:	add	x13, x13, #0x90b
  40fa90:	adr	x12, 40fab4 <__fxstatat@plt+0xcf14>
  40fa94:	ldrb	w9, [x13, x19]
  40fa98:	add	x12, x12, x9, lsl #2
  40fa9c:	mov	w10, wzr
  40faa0:	mov	w8, wzr
  40faa4:	mov	w26, #0x1                   	// #1
  40faa8:	mov	w11, #0x6e                  	// #110
  40faac:	mov	w9, #0x61                  	// #97
  40fab0:	br	x12
  40fab4:	ldur	w9, [x29, #-24]
  40fab8:	tbnz	w9, #0, 40fad8 <__fxstatat@plt+0xcf38>
  40fabc:	ldur	x10, [x29, #-40]
  40fac0:	lsr	w9, w19, #5
  40fac4:	ldr	w9, [x10, w9, uxtw #2]
  40fac8:	lsr	w9, w9, w19
  40facc:	tbz	w9, #0, 40fad8 <__fxstatat@plt+0xcf38>
  40fad0:	mov	w9, w19
  40fad4:	b	40fae0 <__fxstatat@plt+0xcf40>
  40fad8:	mov	w9, w19
  40fadc:	cbz	w27, 40fd00 <__fxstatat@plt+0xd160>
  40fae0:	tbnz	w16, #0, 41028c <__fxstatat@plt+0xd6ec>
  40fae4:	cmp	w4, #0x2
  40fae8:	cset	w8, ne  // ne = any
  40faec:	orr	w8, w8, w14
  40faf0:	tbnz	w8, #0, 40fb34 <__fxstatat@plt+0xcf94>
  40faf4:	cmp	x20, x22
  40faf8:	b.cs	40fb04 <__fxstatat@plt+0xcf64>  // b.hs, b.nlast
  40fafc:	mov	w8, #0x27                  	// #39
  40fb00:	strb	w8, [x21, x20]
  40fb04:	add	x8, x20, #0x1
  40fb08:	cmp	x8, x22
  40fb0c:	b.cs	40fb18 <__fxstatat@plt+0xcf78>  // b.hs, b.nlast
  40fb10:	mov	w10, #0x24                  	// #36
  40fb14:	strb	w10, [x21, x8]
  40fb18:	add	x8, x20, #0x2
  40fb1c:	cmp	x8, x22
  40fb20:	b.cs	40fb2c <__fxstatat@plt+0xcf8c>  // b.hs, b.nlast
  40fb24:	mov	w10, #0x27                  	// #39
  40fb28:	strb	w10, [x21, x8]
  40fb2c:	add	x20, x20, #0x3
  40fb30:	mov	w14, #0x1                   	// #1
  40fb34:	cmp	x20, x22
  40fb38:	b.cs	40fb44 <__fxstatat@plt+0xcfa4>  // b.hs, b.nlast
  40fb3c:	mov	w8, #0x5c                  	// #92
  40fb40:	strb	w8, [x21, x20]
  40fb44:	add	x20, x20, #0x1
  40fb48:	b	40fd38 <__fxstatat@plt+0xd198>
  40fb4c:	cmp	x28, #0x1
  40fb50:	b.eq	40fb74 <__fxstatat@plt+0xcfd4>  // b.none
  40fb54:	cmn	x28, #0x1
  40fb58:	b.ne	40fb78 <__fxstatat@plt+0xcfd8>  // b.any
  40fb5c:	ldrb	w8, [x24, #1]
  40fb60:	cbz	w8, 40fb74 <__fxstatat@plt+0xcfd4>
  40fb64:	mov	w8, wzr
  40fb68:	mov	w26, wzr
  40fb6c:	mov	x28, #0xffffffffffffffff    	// #-1
  40fb70:	b	40fab4 <__fxstatat@plt+0xcf14>
  40fb74:	cbz	x23, 40fb84 <__fxstatat@plt+0xcfe4>
  40fb78:	mov	w8, wzr
  40fb7c:	mov	w26, wzr
  40fb80:	b	40fab4 <__fxstatat@plt+0xcf14>
  40fb84:	mov	w10, #0x1                   	// #1
  40fb88:	cmp	w4, #0x2
  40fb8c:	b.ne	40fb94 <__fxstatat@plt+0xcff4>  // b.any
  40fb90:	tbnz	w16, #0, 41028c <__fxstatat@plt+0xd6ec>
  40fb94:	mov	w8, wzr
  40fb98:	mov	w26, w10
  40fb9c:	b	40fab4 <__fxstatat@plt+0xcf14>
  40fba0:	cmp	w4, #0x2
  40fba4:	b.ne	40fce8 <__fxstatat@plt+0xd148>  // b.any
  40fba8:	tbz	w16, #0, 40fcf4 <__fxstatat@plt+0xd154>
  40fbac:	b	41028c <__fxstatat@plt+0xd6ec>
  40fbb0:	mov	w9, #0x66                  	// #102
  40fbb4:	b	40fd54 <__fxstatat@plt+0xd1b4>
  40fbb8:	mov	w11, #0x74                  	// #116
  40fbbc:	b	40fbcc <__fxstatat@plt+0xd02c>
  40fbc0:	mov	w9, #0x62                  	// #98
  40fbc4:	b	40fd54 <__fxstatat@plt+0xd1b4>
  40fbc8:	mov	w11, #0x72                  	// #114
  40fbcc:	ldr	w8, [sp, #84]
  40fbd0:	mov	w9, w11
  40fbd4:	tbnz	w8, #0, 40fd54 <__fxstatat@plt+0xd1b4>
  40fbd8:	b	41028c <__fxstatat@plt+0xd6ec>
  40fbdc:	ldur	w8, [x29, #-72]
  40fbe0:	tbz	w8, #0, 40fd68 <__fxstatat@plt+0xd1c8>
  40fbe4:	cmp	w4, #0x2
  40fbe8:	tbnz	w16, #0, 41039c <__fxstatat@plt+0xd7fc>
  40fbec:	cset	w8, ne  // ne = any
  40fbf0:	orr	w8, w8, w14
  40fbf4:	tbz	w8, #0, 41009c <__fxstatat@plt+0xd4fc>
  40fbf8:	mov	x8, x20
  40fbfc:	b	4100dc <__fxstatat@plt+0xd53c>
  40fc00:	cmp	w4, #0x5
  40fc04:	b.eq	40fe8c <__fxstatat@plt+0xd2ec>  // b.none
  40fc08:	cmp	w4, #0x2
  40fc0c:	b.ne	40ff3c <__fxstatat@plt+0xd39c>  // b.any
  40fc10:	tbz	w16, #0, 40ff3c <__fxstatat@plt+0xd39c>
  40fc14:	b	41028c <__fxstatat@plt+0xd6ec>
  40fc18:	mov	w9, #0x76                  	// #118
  40fc1c:	b	40fd54 <__fxstatat@plt+0xd1b4>
  40fc20:	cmp	w4, #0x2
  40fc24:	b.ne	40fd78 <__fxstatat@plt+0xd1d8>  // b.any
  40fc28:	tbnz	w16, #0, 41028c <__fxstatat@plt+0xd6ec>
  40fc2c:	ldr	x10, [sp, #64]
  40fc30:	cmp	x22, #0x0
  40fc34:	cset	w8, eq  // eq = none
  40fc38:	cmp	x10, #0x0
  40fc3c:	cset	w9, ne  // ne = any
  40fc40:	orr	w8, w9, w8
  40fc44:	cmp	w8, #0x0
  40fc48:	csel	x10, x10, x22, ne  // ne = any
  40fc4c:	csel	x22, x22, xzr, ne  // ne = any
  40fc50:	cmp	x20, x22
  40fc54:	str	x10, [sp, #64]
  40fc58:	b.cs	40fc64 <__fxstatat@plt+0xd0c4>  // b.hs, b.nlast
  40fc5c:	mov	w8, #0x27                  	// #39
  40fc60:	strb	w8, [x21, x20]
  40fc64:	add	x8, x20, #0x1
  40fc68:	cmp	x8, x22
  40fc6c:	b.cs	40fc78 <__fxstatat@plt+0xd0d8>  // b.hs, b.nlast
  40fc70:	mov	w9, #0x5c                  	// #92
  40fc74:	strb	w9, [x21, x8]
  40fc78:	add	x8, x20, #0x2
  40fc7c:	cmp	x8, x22
  40fc80:	b.cs	40fc8c <__fxstatat@plt+0xd0ec>  // b.hs, b.nlast
  40fc84:	mov	w9, #0x27                  	// #39
  40fc88:	strb	w9, [x21, x8]
  40fc8c:	mov	w14, wzr
  40fc90:	mov	w8, wzr
  40fc94:	add	x20, x20, #0x3
  40fc98:	b	40fd7c <__fxstatat@plt+0xd1dc>
  40fc9c:	ldr	x8, [sp, #48]
  40fca0:	str	w14, [sp, #28]
  40fca4:	cmp	x8, #0x1
  40fca8:	b.ne	40fd90 <__fxstatat@plt+0xd1f0>  // b.any
  40fcac:	bl	402970 <__ctype_b_loc@plt>
  40fcb0:	ldr	x8, [x0]
  40fcb4:	mov	w11, #0x1                   	// #1
  40fcb8:	ldrh	w8, [x8, x19, lsl #1]
  40fcbc:	ubfx	w26, w8, #14, #1
  40fcc0:	ldr	w8, [sp, #60]
  40fcc4:	ldp	w16, w4, [x29, #-48]
  40fcc8:	ldr	w14, [sp, #28]
  40fccc:	ldur	w17, [x29, #-52]
  40fcd0:	cmp	x11, #0x1
  40fcd4:	orr	w8, w26, w8
  40fcd8:	b.hi	40ff4c <__fxstatat@plt+0xd3ac>  // b.pmore
  40fcdc:	tbz	w8, #0, 40ff4c <__fxstatat@plt+0xd3ac>
  40fce0:	mov	w8, wzr
  40fce4:	b	40fab4 <__fxstatat@plt+0xcf14>
  40fce8:	ldr	w8, [sp, #56]
  40fcec:	mov	w9, #0x5c                  	// #92
  40fcf0:	tbz	w8, #0, 40fd54 <__fxstatat@plt+0xd1b4>
  40fcf4:	mov	w8, wzr
  40fcf8:	mov	w26, wzr
  40fcfc:	mov	w19, #0x5c                  	// #92
  40fd00:	tbnz	w8, #0, 40fd34 <__fxstatat@plt+0xd194>
  40fd04:	tbz	w14, #0, 40fd34 <__fxstatat@plt+0xd194>
  40fd08:	cmp	x20, x22
  40fd0c:	b.cs	40fd18 <__fxstatat@plt+0xd178>  // b.hs, b.nlast
  40fd10:	mov	w8, #0x27                  	// #39
  40fd14:	strb	w8, [x21, x20]
  40fd18:	add	x8, x20, #0x1
  40fd1c:	cmp	x8, x22
  40fd20:	b.cs	40fd2c <__fxstatat@plt+0xd18c>  // b.hs, b.nlast
  40fd24:	mov	w9, #0x27                  	// #39
  40fd28:	strb	w9, [x21, x8]
  40fd2c:	mov	w14, wzr
  40fd30:	add	x20, x20, #0x2
  40fd34:	mov	w9, w19
  40fd38:	cmp	x20, x22
  40fd3c:	b.cs	40fd44 <__fxstatat@plt+0xd1a4>  // b.hs, b.nlast
  40fd40:	strb	w9, [x21, x20]
  40fd44:	add	x20, x20, #0x1
  40fd48:	and	w25, w25, w26
  40fd4c:	add	x23, x23, #0x1
  40fd50:	b	40f9e0 <__fxstatat@plt+0xce40>
  40fd54:	ldur	w10, [x29, #-72]
  40fd58:	mov	w8, wzr
  40fd5c:	mov	w26, wzr
  40fd60:	tbz	w10, #0, 40fab4 <__fxstatat@plt+0xcf14>
  40fd64:	b	40fae0 <__fxstatat@plt+0xcf40>
  40fd68:	ldr	w8, [sp, #80]
  40fd6c:	tbnz	w8, #0, 40fd4c <__fxstatat@plt+0xd1ac>
  40fd70:	mov	w19, wzr
  40fd74:	b	40fb78 <__fxstatat@plt+0xcfd8>
  40fd78:	mov	w8, wzr
  40fd7c:	mov	w9, #0x1                   	// #1
  40fd80:	mov	w19, #0x27                  	// #39
  40fd84:	str	w9, [sp, #72]
  40fd88:	mov	w26, #0x1                   	// #1
  40fd8c:	b	40fab4 <__fxstatat@plt+0xcf14>
  40fd90:	cmn	x28, #0x1
  40fd94:	stur	xzr, [x29, #-16]
  40fd98:	b.ne	40fda8 <__fxstatat@plt+0xd208>  // b.any
  40fd9c:	mov	x0, x24
  40fda0:	bl	402540 <strlen@plt>
  40fda4:	mov	x28, x0
  40fda8:	ldr	x8, [sp, #96]
  40fdac:	mov	x11, xzr
  40fdb0:	mov	w26, #0x1                   	// #1
  40fdb4:	str	x21, [sp, #32]
  40fdb8:	add	x8, x8, x23
  40fdbc:	str	x8, [sp, #16]
  40fdc0:	add	x21, x11, x23
  40fdc4:	add	x1, x24, x21
  40fdc8:	sub	x2, x28, x21
  40fdcc:	sub	x0, x29, #0x14
  40fdd0:	sub	x3, x29, #0x10
  40fdd4:	str	x11, [sp, #40]
  40fdd8:	bl	411f30 <__fxstatat@plt+0xf390>
  40fddc:	cbz	x0, 410194 <__fxstatat@plt+0xd5f4>
  40fde0:	mov	x24, x0
  40fde4:	cmn	x0, #0x1
  40fde8:	b.eq	410190 <__fxstatat@plt+0xd5f0>  // b.none
  40fdec:	cmn	x24, #0x2
  40fdf0:	b.eq	410154 <__fxstatat@plt+0xd5b4>  // b.none
  40fdf4:	ldr	w9, [sp, #76]
  40fdf8:	ldr	x21, [sp, #32]
  40fdfc:	cmp	x24, #0x2
  40fe00:	cset	w8, cc  // cc = lo, ul, last
  40fe04:	eor	w9, w9, #0x1
  40fe08:	mov	x12, #0x2b                  	// #43
  40fe0c:	orr	w8, w9, w8
  40fe10:	mov	w11, #0x1                   	// #1
  40fe14:	movk	x12, #0x2, lsl #32
  40fe18:	tbnz	w8, #0, 40fe54 <__fxstatat@plt+0xd2b4>
  40fe1c:	ldr	x9, [sp, #40]
  40fe20:	ldr	x10, [sp, #16]
  40fe24:	sub	x8, x24, #0x1
  40fe28:	add	x9, x10, x9
  40fe2c:	ldrb	w10, [x9]
  40fe30:	sub	w10, w10, #0x5b
  40fe34:	cmp	w10, #0x21
  40fe38:	b.hi	40fe48 <__fxstatat@plt+0xd2a8>  // b.pmore
  40fe3c:	lsl	x10, x11, x10
  40fe40:	tst	x10, x12
  40fe44:	b.ne	4102c0 <__fxstatat@plt+0xd720>  // b.any
  40fe48:	subs	x8, x8, #0x1
  40fe4c:	add	x9, x9, #0x1
  40fe50:	b.ne	40fe2c <__fxstatat@plt+0xd28c>  // b.any
  40fe54:	ldur	w0, [x29, #-20]
  40fe58:	bl	402b10 <iswprint@plt>
  40fe5c:	ldr	x21, [sp, #40]
  40fe60:	cmp	w0, #0x0
  40fe64:	cset	w8, ne  // ne = any
  40fe68:	sub	x0, x29, #0x10
  40fe6c:	and	w26, w26, w8
  40fe70:	add	x21, x24, x21
  40fe74:	bl	4028d0 <mbsinit@plt>
  40fe78:	mov	x11, x21
  40fe7c:	ldr	x21, [sp, #32]
  40fe80:	ldur	x24, [x29, #-80]
  40fe84:	cbz	w0, 40fdc0 <__fxstatat@plt+0xd220>
  40fe88:	b	40fcc0 <__fxstatat@plt+0xd120>
  40fe8c:	ldr	w8, [sp, #80]
  40fe90:	tbz	w8, #2, 40ff3c <__fxstatat@plt+0xd39c>
  40fe94:	add	x9, x23, #0x2
  40fe98:	cmp	x9, x28
  40fe9c:	b.cs	40ff3c <__fxstatat@plt+0xd39c>  // b.hs, b.nlast
  40fea0:	add	x8, x23, x24
  40fea4:	ldrb	w8, [x8, #1]
  40fea8:	cmp	w8, #0x3f
  40feac:	b.ne	40ff3c <__fxstatat@plt+0xd39c>  // b.any
  40feb0:	ldrb	w19, [x24, x9]
  40feb4:	mov	w8, wzr
  40feb8:	cmp	w19, #0x3e
  40febc:	b.hi	4101a8 <__fxstatat@plt+0xd608>  // b.pmore
  40fec0:	mov	w10, #0x1                   	// #1
  40fec4:	mov	x11, #0xa38200000000        	// #179778741075968
  40fec8:	lsl	x10, x10, x19
  40fecc:	movk	x11, #0x7000, lsl #48
  40fed0:	tst	x10, x11
  40fed4:	b.eq	4101a8 <__fxstatat@plt+0xd608>  // b.none
  40fed8:	tbnz	w16, #0, 41028c <__fxstatat@plt+0xd6ec>
  40fedc:	cmp	x20, x22
  40fee0:	b.cs	40feec <__fxstatat@plt+0xd34c>  // b.hs, b.nlast
  40fee4:	mov	w8, #0x3f                  	// #63
  40fee8:	strb	w8, [x21, x20]
  40feec:	add	x8, x20, #0x1
  40fef0:	cmp	x8, x22
  40fef4:	b.cs	40ff00 <__fxstatat@plt+0xd360>  // b.hs, b.nlast
  40fef8:	mov	w10, #0x22                  	// #34
  40fefc:	strb	w10, [x21, x8]
  40ff00:	add	x8, x20, #0x2
  40ff04:	cmp	x8, x22
  40ff08:	b.cs	40ff14 <__fxstatat@plt+0xd374>  // b.hs, b.nlast
  40ff0c:	mov	w10, #0x22                  	// #34
  40ff10:	strb	w10, [x21, x8]
  40ff14:	add	x8, x20, #0x3
  40ff18:	cmp	x8, x22
  40ff1c:	b.cs	40ff28 <__fxstatat@plt+0xd388>  // b.hs, b.nlast
  40ff20:	mov	w10, #0x3f                  	// #63
  40ff24:	strb	w10, [x21, x8]
  40ff28:	mov	w8, wzr
  40ff2c:	mov	w26, wzr
  40ff30:	add	x20, x20, #0x4
  40ff34:	mov	x23, x9
  40ff38:	b	40fab4 <__fxstatat@plt+0xcf14>
  40ff3c:	mov	w8, wzr
  40ff40:	mov	w26, wzr
  40ff44:	mov	w19, #0x3f                  	// #63
  40ff48:	b	40fab4 <__fxstatat@plt+0xcf14>
  40ff4c:	mov	w10, wzr
  40ff50:	add	x9, x11, x23
  40ff54:	tbz	w8, #0, 40ffb4 <__fxstatat@plt+0xd414>
  40ff58:	b	410060 <__fxstatat@plt+0xd4c0>
  40ff5c:	and	w12, w10, #0x1
  40ff60:	orn	w12, w12, w14
  40ff64:	tbnz	w12, #0, 40ff94 <__fxstatat@plt+0xd3f4>
  40ff68:	cmp	x20, x22
  40ff6c:	b.cs	40ff78 <__fxstatat@plt+0xd3d8>  // b.hs, b.nlast
  40ff70:	mov	w12, #0x27                  	// #39
  40ff74:	strb	w12, [x21, x20]
  40ff78:	add	x12, x20, #0x1
  40ff7c:	cmp	x12, x22
  40ff80:	b.cs	40ff8c <__fxstatat@plt+0xd3ec>  // b.hs, b.nlast
  40ff84:	mov	w13, #0x27                  	// #39
  40ff88:	strb	w13, [x21, x12]
  40ff8c:	mov	w14, wzr
  40ff90:	add	x20, x20, #0x2
  40ff94:	cmp	x20, x22
  40ff98:	b.cs	40ffa0 <__fxstatat@plt+0xd400>  // b.hs, b.nlast
  40ff9c:	strb	w19, [x21, x20]
  40ffa0:	ldr	x12, [sp, #96]
  40ffa4:	add	x20, x20, #0x1
  40ffa8:	ldrb	w19, [x12, x23]
  40ffac:	mov	x23, x11
  40ffb0:	tbnz	w8, #0, 410060 <__fxstatat@plt+0xd4c0>
  40ffb4:	tbnz	w16, #0, 41028c <__fxstatat@plt+0xd6ec>
  40ffb8:	cmp	w4, #0x2
  40ffbc:	cset	w10, ne  // ne = any
  40ffc0:	orr	w10, w10, w14
  40ffc4:	tbnz	w10, #0, 410008 <__fxstatat@plt+0xd468>
  40ffc8:	cmp	x20, x22
  40ffcc:	b.cs	40ffd8 <__fxstatat@plt+0xd438>  // b.hs, b.nlast
  40ffd0:	mov	w10, #0x27                  	// #39
  40ffd4:	strb	w10, [x21, x20]
  40ffd8:	add	x10, x20, #0x1
  40ffdc:	cmp	x10, x22
  40ffe0:	b.cs	40ffec <__fxstatat@plt+0xd44c>  // b.hs, b.nlast
  40ffe4:	mov	w11, #0x24                  	// #36
  40ffe8:	strb	w11, [x21, x10]
  40ffec:	add	x10, x20, #0x2
  40fff0:	cmp	x10, x22
  40fff4:	b.cs	410000 <__fxstatat@plt+0xd460>  // b.hs, b.nlast
  40fff8:	mov	w11, #0x27                  	// #39
  40fffc:	strb	w11, [x21, x10]
  410000:	add	x20, x20, #0x3
  410004:	mov	w14, #0x1                   	// #1
  410008:	cmp	x20, x22
  41000c:	b.cs	410018 <__fxstatat@plt+0xd478>  // b.hs, b.nlast
  410010:	mov	w10, #0x5c                  	// #92
  410014:	strb	w10, [x21, x20]
  410018:	add	x10, x20, #0x1
  41001c:	cmp	x10, x22
  410020:	b.cs	410030 <__fxstatat@plt+0xd490>  // b.hs, b.nlast
  410024:	mov	w11, #0x30                  	// #48
  410028:	bfxil	w11, w19, #6, #2
  41002c:	strb	w11, [x21, x10]
  410030:	add	x10, x20, #0x2
  410034:	cmp	x10, x22
  410038:	b.cs	410048 <__fxstatat@plt+0xd4a8>  // b.hs, b.nlast
  41003c:	mov	w11, #0x30                  	// #48
  410040:	bfxil	w11, w19, #3, #3
  410044:	strb	w11, [x21, x10]
  410048:	mov	w11, #0x30                  	// #48
  41004c:	bfxil	w11, w19, #0, #3
  410050:	add	x20, x20, #0x3
  410054:	mov	w10, #0x1                   	// #1
  410058:	mov	w19, w11
  41005c:	b	410084 <__fxstatat@plt+0xd4e4>
  410060:	tbz	w27, #0, 410080 <__fxstatat@plt+0xd4e0>
  410064:	cmp	x20, x22
  410068:	b.cs	410074 <__fxstatat@plt+0xd4d4>  // b.hs, b.nlast
  41006c:	mov	w11, #0x5c                  	// #92
  410070:	strb	w11, [x21, x20]
  410074:	mov	w27, wzr
  410078:	add	x20, x20, #0x1
  41007c:	b	410084 <__fxstatat@plt+0xd4e4>
  410080:	mov	w27, wzr
  410084:	add	x11, x23, #0x1
  410088:	cmp	x9, x11
  41008c:	b.hi	40ff5c <__fxstatat@plt+0xd3bc>  // b.pmore
  410090:	and	w8, w10, #0x1
  410094:	tbz	w8, #0, 40fd04 <__fxstatat@plt+0xd164>
  410098:	b	40fd34 <__fxstatat@plt+0xd194>
  41009c:	cmp	x20, x22
  4100a0:	b.cs	4100ac <__fxstatat@plt+0xd50c>  // b.hs, b.nlast
  4100a4:	mov	w8, #0x27                  	// #39
  4100a8:	strb	w8, [x21, x20]
  4100ac:	add	x8, x20, #0x1
  4100b0:	cmp	x8, x22
  4100b4:	b.cs	4100c0 <__fxstatat@plt+0xd520>  // b.hs, b.nlast
  4100b8:	mov	w9, #0x24                  	// #36
  4100bc:	strb	w9, [x21, x8]
  4100c0:	add	x8, x20, #0x2
  4100c4:	cmp	x8, x22
  4100c8:	b.cs	4100d4 <__fxstatat@plt+0xd534>  // b.hs, b.nlast
  4100cc:	mov	w9, #0x27                  	// #39
  4100d0:	strb	w9, [x21, x8]
  4100d4:	add	x8, x20, #0x3
  4100d8:	mov	w14, #0x1                   	// #1
  4100dc:	cmp	x8, x22
  4100e0:	b.cs	4100ec <__fxstatat@plt+0xd54c>  // b.hs, b.nlast
  4100e4:	mov	w9, #0x5c                  	// #92
  4100e8:	strb	w9, [x21, x8]
  4100ec:	cmp	w4, #0x2
  4100f0:	add	x20, x8, #0x1
  4100f4:	b.eq	410144 <__fxstatat@plt+0xd5a4>  // b.none
  4100f8:	add	x9, x23, #0x1
  4100fc:	cmp	x9, x28
  410100:	b.cs	410144 <__fxstatat@plt+0xd5a4>  // b.hs, b.nlast
  410104:	ldrb	w9, [x24, x9]
  410108:	sub	w9, w9, #0x30
  41010c:	cmp	w9, #0x9
  410110:	b.hi	410144 <__fxstatat@plt+0xd5a4>  // b.pmore
  410114:	cmp	x20, x22
  410118:	b.cs	410124 <__fxstatat@plt+0xd584>  // b.hs, b.nlast
  41011c:	mov	w9, #0x30                  	// #48
  410120:	strb	w9, [x21, x20]
  410124:	add	x9, x8, #0x2
  410128:	cmp	x9, x22
  41012c:	b.cs	410138 <__fxstatat@plt+0xd598>  // b.hs, b.nlast
  410130:	mov	w10, #0x30                  	// #48
  410134:	strb	w10, [x21, x9]
  410138:	mov	w26, wzr
  41013c:	add	x20, x8, #0x3
  410140:	b	410148 <__fxstatat@plt+0xd5a8>
  410144:	mov	w26, wzr
  410148:	mov	w8, #0x1                   	// #1
  41014c:	mov	w19, #0x30                  	// #48
  410150:	b	40fab4 <__fxstatat@plt+0xcf14>
  410154:	cmp	x28, x21
  410158:	b.ls	410190 <__fxstatat@plt+0xd5f0>  // b.plast
  41015c:	ldur	x24, [x29, #-80]
  410160:	ldp	x21, x11, [sp, #32]
  410164:	sub	x8, x28, x23
  410168:	add	x9, x24, x23
  41016c:	ldrb	w10, [x9, x11]
  410170:	cbz	w10, 4101a0 <__fxstatat@plt+0xd600>
  410174:	add	x11, x11, #0x1
  410178:	add	x10, x23, x11
  41017c:	cmp	x10, x28
  410180:	b.cc	41016c <__fxstatat@plt+0xd5cc>  // b.lo, b.ul, b.last
  410184:	mov	w26, wzr
  410188:	mov	x11, x8
  41018c:	b	40fcc0 <__fxstatat@plt+0xd120>
  410190:	mov	w26, wzr
  410194:	ldp	x21, x11, [sp, #32]
  410198:	ldur	x24, [x29, #-80]
  41019c:	b	40fcc0 <__fxstatat@plt+0xd120>
  4101a0:	mov	w26, wzr
  4101a4:	b	40fcc0 <__fxstatat@plt+0xd120>
  4101a8:	mov	w19, #0x3f                  	// #63
  4101ac:	mov	w26, w8
  4101b0:	b	40fab4 <__fxstatat@plt+0xcf14>
  4101b4:	mov	x28, x23
  4101b8:	b	4101c0 <__fxstatat@plt+0xd620>
  4101bc:	mov	x28, #0xffffffffffffffff    	// #-1
  4101c0:	cmp	w4, #0x2
  4101c4:	ldur	w10, [x29, #-72]
  4101c8:	cset	w8, eq  // eq = none
  4101cc:	cmp	x20, #0x0
  4101d0:	cset	w9, eq  // eq = none
  4101d4:	and	w8, w8, w9
  4101d8:	and	w8, w16, w8
  4101dc:	tbnz	w8, #0, 410290 <__fxstatat@plt+0xd6f0>
  4101e0:	cmp	w4, #0x2
  4101e4:	cset	w8, ne  // ne = any
  4101e8:	orr	w8, w16, w8
  4101ec:	tbnz	w8, #0, 41035c <__fxstatat@plt+0xd7bc>
  4101f0:	ldr	w8, [sp, #72]
  4101f4:	eor	w8, w8, #0x1
  4101f8:	tbnz	w8, #0, 41035c <__fxstatat@plt+0xd7bc>
  4101fc:	tbnz	w25, #0, 41032c <__fxstatat@plt+0xd78c>
  410200:	ldr	x24, [sp, #64]
  410204:	mov	w19, wzr
  410208:	cbz	x24, 410358 <__fxstatat@plt+0xd7b8>
  41020c:	mov	w4, #0x2                   	// #2
  410210:	mov	w8, w10
  410214:	mov	w25, w19
  410218:	mov	w16, w19
  41021c:	cbz	x22, 40f80c <__fxstatat@plt+0xcc6c>
  410220:	b	41035c <__fxstatat@plt+0xd7bc>
  410224:	mov	w16, wzr
  410228:	cbz	x22, 410234 <__fxstatat@plt+0xd694>
  41022c:	mov	w8, #0x22                  	// #34
  410230:	strb	w8, [x21]
  410234:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  410238:	add	x8, x8, #0xa54
  41023c:	stur	x8, [x29, #-64]
  410240:	mov	w8, #0x1                   	// #1
  410244:	mov	w20, #0x1                   	// #1
  410248:	mov	w4, #0x5                   	// #5
  41024c:	stur	x8, [x29, #-32]
  410250:	mov	w9, #0x1                   	// #1
  410254:	b	40f968 <__fxstatat@plt+0xcdc8>
  410258:	mov	w9, #0x1                   	// #1
  41025c:	mov	w16, wzr
  410260:	cbz	x22, 41026c <__fxstatat@plt+0xd6cc>
  410264:	mov	w8, #0x27                  	// #39
  410268:	strb	w8, [x21]
  41026c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  410270:	add	x8, x8, #0xe4d
  410274:	stur	x8, [x29, #-64]
  410278:	mov	w8, #0x1                   	// #1
  41027c:	mov	w4, #0x2                   	// #2
  410280:	mov	w20, #0x1                   	// #1
  410284:	stur	x8, [x29, #-32]
  410288:	b	40f968 <__fxstatat@plt+0xcdc8>
  41028c:	ldur	w10, [x29, #-72]
  410290:	tst	w10, #0x1
  410294:	mov	w8, #0x2                   	// #2
  410298:	mov	w9, #0x4                   	// #4
  41029c:	csel	w8, w9, w8, ne  // ne = any
  4102a0:	cmp	w4, #0x2
  4102a4:	b.ne	4102ac <__fxstatat@plt+0xd70c>  // b.any
  4102a8:	mov	w4, w8
  4102ac:	ldr	x7, [sp, #88]
  4102b0:	b	4102dc <__fxstatat@plt+0xd73c>
  4102b4:	ldr	x7, [sp, #88]
  4102b8:	ldur	w4, [x29, #-44]
  4102bc:	b	4102dc <__fxstatat@plt+0xd73c>
  4102c0:	ldur	w8, [x29, #-72]
  4102c4:	ldr	x7, [sp, #88]
  4102c8:	ldur	x24, [x29, #-80]
  4102cc:	mov	w9, #0x4                   	// #4
  4102d0:	tst	w8, #0x1
  4102d4:	mov	w8, #0x2                   	// #2
  4102d8:	csel	w4, w9, w8, ne  // ne = any
  4102dc:	ldr	w8, [sp, #80]
  4102e0:	mov	x0, x21
  4102e4:	mov	x1, x22
  4102e8:	mov	x2, x24
  4102ec:	and	w5, w8, #0xfffffffd
  4102f0:	ldur	x8, [x29, #-88]
  4102f4:	mov	x3, x28
  4102f8:	mov	x6, xzr
  4102fc:	str	x8, [sp]
  410300:	bl	40f788 <__fxstatat@plt+0xcbe8>
  410304:	mov	x20, x0
  410308:	mov	x0, x20
  41030c:	ldp	x20, x19, [sp, #272]
  410310:	ldp	x22, x21, [sp, #256]
  410314:	ldp	x24, x23, [sp, #240]
  410318:	ldp	x26, x25, [sp, #224]
  41031c:	ldp	x28, x27, [sp, #208]
  410320:	ldp	x29, x30, [sp, #192]
  410324:	add	sp, sp, #0x120
  410328:	ret
  41032c:	ldur	x8, [x29, #-88]
  410330:	ldr	x1, [sp, #64]
  410334:	ldur	x2, [x29, #-80]
  410338:	ldr	w5, [sp, #80]
  41033c:	ldur	x6, [x29, #-40]
  410340:	ldr	x7, [sp, #88]
  410344:	mov	w4, #0x5                   	// #5
  410348:	str	x8, [sp]
  41034c:	mov	x0, x21
  410350:	mov	x3, x28
  410354:	b	410300 <__fxstatat@plt+0xd760>
  410358:	mov	w16, w19
  41035c:	ldur	x8, [x29, #-64]
  410360:	cbz	x8, 41038c <__fxstatat@plt+0xd7ec>
  410364:	tbnz	w16, #0, 41038c <__fxstatat@plt+0xd7ec>
  410368:	ldrb	w9, [x8]
  41036c:	cbz	w9, 41038c <__fxstatat@plt+0xd7ec>
  410370:	add	x8, x8, #0x1
  410374:	cmp	x20, x22
  410378:	b.cs	410380 <__fxstatat@plt+0xd7e0>  // b.hs, b.nlast
  41037c:	strb	w9, [x21, x20]
  410380:	ldrb	w9, [x8], #1
  410384:	add	x20, x20, #0x1
  410388:	cbnz	w9, 410374 <__fxstatat@plt+0xd7d4>
  41038c:	cmp	x20, x22
  410390:	b.cs	410308 <__fxstatat@plt+0xd768>  // b.hs, b.nlast
  410394:	strb	wzr, [x21, x20]
  410398:	b	410308 <__fxstatat@plt+0xd768>
  41039c:	b.ne	4102ac <__fxstatat@plt+0xd70c>  // b.any
  4103a0:	mov	w4, #0x4                   	// #4
  4103a4:	b	4102ac <__fxstatat@plt+0xd70c>
  4103a8:	bl	4028c0 <abort@plt>
  4103ac:	mov	x3, x2
  4103b0:	mov	x2, xzr
  4103b4:	b	4103b8 <__fxstatat@plt+0xd818>
  4103b8:	sub	sp, sp, #0x70
  4103bc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4103c0:	add	x8, x8, #0x778
  4103c4:	cmp	x3, #0x0
  4103c8:	stp	x29, x30, [sp, #16]
  4103cc:	stp	x28, x27, [sp, #32]
  4103d0:	stp	x26, x25, [sp, #48]
  4103d4:	stp	x24, x23, [sp, #64]
  4103d8:	stp	x22, x21, [sp, #80]
  4103dc:	stp	x20, x19, [sp, #96]
  4103e0:	add	x29, sp, #0x10
  4103e4:	mov	x19, x2
  4103e8:	mov	x22, x1
  4103ec:	mov	x23, x0
  4103f0:	csel	x21, x8, x3, eq  // eq = none
  4103f4:	bl	402b30 <__errno_location@plt>
  4103f8:	ldp	w4, w8, [x21]
  4103fc:	cmp	x19, #0x0
  410400:	ldp	x7, x9, [x21, #40]
  410404:	ldr	w28, [x0]
  410408:	cset	w10, eq  // eq = none
  41040c:	orr	w25, w8, w10
  410410:	add	x26, x21, #0x8
  410414:	mov	x24, x0
  410418:	mov	x0, xzr
  41041c:	mov	x1, xzr
  410420:	mov	x2, x23
  410424:	mov	x3, x22
  410428:	mov	w5, w25
  41042c:	mov	x6, x26
  410430:	str	x9, [sp]
  410434:	bl	40f788 <__fxstatat@plt+0xcbe8>
  410438:	add	x27, x0, #0x1
  41043c:	mov	x20, x0
  410440:	mov	x0, x27
  410444:	bl	4111f4 <__fxstatat@plt+0xe654>
  410448:	ldr	w4, [x21]
  41044c:	ldp	x7, x8, [x21, #40]
  410450:	mov	x1, x27
  410454:	mov	x2, x23
  410458:	mov	x3, x22
  41045c:	mov	w5, w25
  410460:	mov	x6, x26
  410464:	mov	x21, x0
  410468:	str	x8, [sp]
  41046c:	bl	40f788 <__fxstatat@plt+0xcbe8>
  410470:	str	w28, [x24]
  410474:	cbz	x19, 41047c <__fxstatat@plt+0xd8dc>
  410478:	str	x20, [x19]
  41047c:	mov	x0, x21
  410480:	ldp	x20, x19, [sp, #96]
  410484:	ldp	x22, x21, [sp, #80]
  410488:	ldp	x24, x23, [sp, #64]
  41048c:	ldp	x26, x25, [sp, #48]
  410490:	ldp	x28, x27, [sp, #32]
  410494:	ldp	x29, x30, [sp, #16]
  410498:	add	sp, sp, #0x70
  41049c:	ret
  4104a0:	stp	x29, x30, [sp, #-64]!
  4104a4:	stp	x20, x19, [sp, #48]
  4104a8:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4104ac:	stp	x22, x21, [sp, #32]
  4104b0:	ldr	w8, [x20, #1360]
  4104b4:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4104b8:	ldr	x19, [x21, #1352]
  4104bc:	str	x23, [sp, #16]
  4104c0:	cmp	w8, #0x2
  4104c4:	mov	x29, sp
  4104c8:	b.lt	4104ec <__fxstatat@plt+0xd94c>  // b.tstop
  4104cc:	add	x22, x19, #0x18
  4104d0:	mov	w23, #0x1                   	// #1
  4104d4:	ldr	x0, [x22], #16
  4104d8:	bl	402990 <free@plt>
  4104dc:	ldrsw	x8, [x20, #1360]
  4104e0:	add	x23, x23, #0x1
  4104e4:	cmp	x23, x8
  4104e8:	b.lt	4104d4 <__fxstatat@plt+0xd934>  // b.tstop
  4104ec:	ldr	x0, [x19, #8]
  4104f0:	adrp	x23, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4104f4:	add	x23, x23, #0x7b0
  4104f8:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4104fc:	cmp	x0, x23
  410500:	add	x22, x22, #0x558
  410504:	b.eq	410514 <__fxstatat@plt+0xd974>  // b.none
  410508:	bl	402990 <free@plt>
  41050c:	mov	w8, #0x100                 	// #256
  410510:	stp	x8, x23, [x22]
  410514:	cmp	x19, x22
  410518:	b.eq	410528 <__fxstatat@plt+0xd988>  // b.none
  41051c:	mov	x0, x19
  410520:	bl	402990 <free@plt>
  410524:	str	x22, [x21, #1352]
  410528:	mov	w8, #0x1                   	// #1
  41052c:	str	w8, [x20, #1360]
  410530:	ldp	x20, x19, [sp, #48]
  410534:	ldp	x22, x21, [sp, #32]
  410538:	ldr	x23, [sp, #16]
  41053c:	ldp	x29, x30, [sp], #64
  410540:	ret
  410544:	adrp	x3, 42b000 <__progname@@GLIBC_2.17+0xa28>
  410548:	add	x3, x3, #0x778
  41054c:	mov	x2, #0xffffffffffffffff    	// #-1
  410550:	b	410554 <__fxstatat@plt+0xd9b4>
  410554:	sub	sp, sp, #0x80
  410558:	stp	x29, x30, [sp, #32]
  41055c:	add	x29, sp, #0x20
  410560:	stp	x28, x27, [sp, #48]
  410564:	stp	x26, x25, [sp, #64]
  410568:	stp	x24, x23, [sp, #80]
  41056c:	stp	x22, x21, [sp, #96]
  410570:	stp	x20, x19, [sp, #112]
  410574:	mov	x22, x3
  410578:	stur	x2, [x29, #-8]
  41057c:	mov	x21, x1
  410580:	mov	w23, w0
  410584:	bl	402b30 <__errno_location@plt>
  410588:	tbnz	w23, #31, 4106d8 <__fxstatat@plt+0xdb38>
  41058c:	adrp	x25, 42a000 <_obstack_memory_used@@Base+0x17d48>
  410590:	ldr	w8, [x25, #1360]
  410594:	adrp	x28, 42a000 <_obstack_memory_used@@Base+0x17d48>
  410598:	ldr	w20, [x0]
  41059c:	ldr	x27, [x28, #1352]
  4105a0:	mov	x19, x0
  4105a4:	cmp	w8, w23
  4105a8:	b.gt	410614 <__fxstatat@plt+0xda74>
  4105ac:	mov	w8, #0x7fffffff            	// #2147483647
  4105b0:	cmp	w23, w8
  4105b4:	stur	w20, [x29, #-12]
  4105b8:	b.eq	4106dc <__fxstatat@plt+0xdb3c>  // b.none
  4105bc:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4105c0:	add	x20, x20, #0x558
  4105c4:	add	w26, w23, #0x1
  4105c8:	cmp	x27, x20
  4105cc:	csel	x0, xzr, x27, eq  // eq = none
  4105d0:	sbfiz	x1, x26, #4, #32
  4105d4:	bl	411244 <__fxstatat@plt+0xe6a4>
  4105d8:	mov	x24, x0
  4105dc:	cmp	x27, x20
  4105e0:	str	x0, [x28, #1352]
  4105e4:	b.ne	4105f0 <__fxstatat@plt+0xda50>  // b.any
  4105e8:	ldr	q0, [x20]
  4105ec:	str	q0, [x24]
  4105f0:	ldrsw	x8, [x25, #1360]
  4105f4:	mov	w1, wzr
  4105f8:	add	x0, x24, x8, lsl #4
  4105fc:	sub	w8, w26, w8
  410600:	sbfiz	x2, x8, #4, #32
  410604:	bl	4027c0 <memset@plt>
  410608:	ldur	w20, [x29, #-12]
  41060c:	mov	x27, x24
  410610:	str	w26, [x25, #1360]
  410614:	add	x28, x27, w23, uxtw #4
  410618:	mov	x27, x28
  41061c:	ldr	x26, [x28]
  410620:	ldr	x23, [x27, #8]!
  410624:	ldp	w4, w8, [x22]
  410628:	ldp	x7, x9, [x22, #40]
  41062c:	ldur	x3, [x29, #-8]
  410630:	add	x24, x22, #0x8
  410634:	orr	w25, w8, #0x1
  410638:	mov	x0, x23
  41063c:	mov	x1, x26
  410640:	mov	x2, x21
  410644:	mov	w5, w25
  410648:	mov	x6, x24
  41064c:	str	x9, [sp]
  410650:	bl	40f788 <__fxstatat@plt+0xcbe8>
  410654:	cmp	x26, x0
  410658:	b.hi	4106b0 <__fxstatat@plt+0xdb10>  // b.pmore
  41065c:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  410660:	add	x8, x8, #0x7b0
  410664:	add	x26, x0, #0x1
  410668:	cmp	x23, x8
  41066c:	str	x26, [x28]
  410670:	b.eq	41067c <__fxstatat@plt+0xdadc>  // b.none
  410674:	mov	x0, x23
  410678:	bl	402990 <free@plt>
  41067c:	mov	x0, x26
  410680:	bl	4111f4 <__fxstatat@plt+0xe654>
  410684:	str	x0, [x27]
  410688:	ldr	w4, [x22]
  41068c:	ldp	x7, x8, [x22, #40]
  410690:	ldur	x3, [x29, #-8]
  410694:	mov	x1, x26
  410698:	mov	x2, x21
  41069c:	mov	w5, w25
  4106a0:	mov	x6, x24
  4106a4:	mov	x23, x0
  4106a8:	str	x8, [sp]
  4106ac:	bl	40f788 <__fxstatat@plt+0xcbe8>
  4106b0:	str	w20, [x19]
  4106b4:	mov	x0, x23
  4106b8:	ldp	x20, x19, [sp, #112]
  4106bc:	ldp	x22, x21, [sp, #96]
  4106c0:	ldp	x24, x23, [sp, #80]
  4106c4:	ldp	x26, x25, [sp, #64]
  4106c8:	ldp	x28, x27, [sp, #48]
  4106cc:	ldp	x29, x30, [sp, #32]
  4106d0:	add	sp, sp, #0x80
  4106d4:	ret
  4106d8:	bl	4028c0 <abort@plt>
  4106dc:	bl	411430 <__fxstatat@plt+0xe890>
  4106e0:	adrp	x3, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4106e4:	add	x3, x3, #0x778
  4106e8:	b	410554 <__fxstatat@plt+0xd9b4>
  4106ec:	adrp	x3, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4106f0:	add	x3, x3, #0x778
  4106f4:	mov	x2, #0xffffffffffffffff    	// #-1
  4106f8:	mov	x1, x0
  4106fc:	mov	w0, wzr
  410700:	b	410554 <__fxstatat@plt+0xd9b4>
  410704:	adrp	x3, 42b000 <__progname@@GLIBC_2.17+0xa28>
  410708:	mov	x2, x1
  41070c:	add	x3, x3, #0x778
  410710:	mov	x1, x0
  410714:	mov	w0, wzr
  410718:	b	410554 <__fxstatat@plt+0xd9b4>
  41071c:	sub	sp, sp, #0x50
  410720:	movi	v0.2d, #0x0
  410724:	cmp	w1, #0xa
  410728:	stp	x29, x30, [sp, #64]
  41072c:	add	x29, sp, #0x40
  410730:	str	xzr, [sp, #48]
  410734:	stp	q0, q0, [sp, #16]
  410738:	str	q0, [sp]
  41073c:	b.eq	410764 <__fxstatat@plt+0xdbc4>  // b.none
  410740:	mov	x8, x2
  410744:	str	w1, [sp]
  410748:	mov	x3, sp
  41074c:	mov	x2, #0xffffffffffffffff    	// #-1
  410750:	mov	x1, x8
  410754:	bl	410554 <__fxstatat@plt+0xd9b4>
  410758:	ldp	x29, x30, [sp, #64]
  41075c:	add	sp, sp, #0x50
  410760:	ret
  410764:	bl	4028c0 <abort@plt>
  410768:	sub	sp, sp, #0x50
  41076c:	movi	v0.2d, #0x0
  410770:	cmp	w1, #0xa
  410774:	stp	x29, x30, [sp, #64]
  410778:	add	x29, sp, #0x40
  41077c:	str	xzr, [sp, #48]
  410780:	stp	q0, q0, [sp, #16]
  410784:	str	q0, [sp]
  410788:	b.eq	4107b0 <__fxstatat@plt+0xdc10>  // b.none
  41078c:	mov	x8, x3
  410790:	str	w1, [sp]
  410794:	mov	x3, sp
  410798:	mov	x1, x2
  41079c:	mov	x2, x8
  4107a0:	bl	410554 <__fxstatat@plt+0xd9b4>
  4107a4:	ldp	x29, x30, [sp, #64]
  4107a8:	add	sp, sp, #0x50
  4107ac:	ret
  4107b0:	bl	4028c0 <abort@plt>
  4107b4:	mov	x2, x1
  4107b8:	mov	w1, w0
  4107bc:	mov	w0, wzr
  4107c0:	b	41071c <__fxstatat@plt+0xdb7c>
  4107c4:	mov	x3, x2
  4107c8:	mov	x2, x1
  4107cc:	mov	w1, w0
  4107d0:	mov	w0, wzr
  4107d4:	b	410768 <__fxstatat@plt+0xdbc8>
  4107d8:	sub	sp, sp, #0x50
  4107dc:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4107e0:	add	x9, x9, #0x778
  4107e4:	ldp	q0, q1, [x9]
  4107e8:	ubfx	w10, w2, #5, #3
  4107ec:	mov	x11, sp
  4107f0:	mov	x8, x1
  4107f4:	stp	q0, q1, [sp]
  4107f8:	ldr	q0, [x9, #32]
  4107fc:	ldr	x9, [x9, #48]
  410800:	mov	x1, x0
  410804:	mov	x3, sp
  410808:	str	q0, [sp, #32]
  41080c:	str	x9, [sp, #48]
  410810:	add	x9, x11, w10, uxtw #2
  410814:	ldr	w10, [x9, #8]
  410818:	mov	w0, wzr
  41081c:	stp	x29, x30, [sp, #64]
  410820:	add	x29, sp, #0x40
  410824:	lsr	w11, w10, w2
  410828:	mvn	w11, w11
  41082c:	and	w11, w11, #0x1
  410830:	lsl	w11, w11, w2
  410834:	eor	w10, w11, w10
  410838:	mov	x2, x8
  41083c:	str	w10, [x9, #8]
  410840:	bl	410554 <__fxstatat@plt+0xd9b4>
  410844:	ldp	x29, x30, [sp, #64]
  410848:	add	sp, sp, #0x50
  41084c:	ret
  410850:	sub	sp, sp, #0x50
  410854:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  410858:	add	x9, x9, #0x778
  41085c:	ldp	q0, q1, [x9]
  410860:	ubfx	w10, w1, #5, #3
  410864:	mov	x11, sp
  410868:	mov	x8, x0
  41086c:	stp	q0, q1, [sp]
  410870:	ldr	q0, [x9, #32]
  410874:	ldr	x9, [x9, #48]
  410878:	mov	x3, sp
  41087c:	mov	x2, #0xffffffffffffffff    	// #-1
  410880:	str	q0, [sp, #32]
  410884:	str	x9, [sp, #48]
  410888:	add	x9, x11, w10, uxtw #2
  41088c:	ldr	w10, [x9, #8]
  410890:	mov	w0, wzr
  410894:	stp	x29, x30, [sp, #64]
  410898:	add	x29, sp, #0x40
  41089c:	lsr	w11, w10, w1
  4108a0:	mvn	w11, w11
  4108a4:	and	w11, w11, #0x1
  4108a8:	lsl	w11, w11, w1
  4108ac:	eor	w10, w11, w10
  4108b0:	mov	x1, x8
  4108b4:	str	w10, [x9, #8]
  4108b8:	bl	410554 <__fxstatat@plt+0xd9b4>
  4108bc:	ldp	x29, x30, [sp, #64]
  4108c0:	add	sp, sp, #0x50
  4108c4:	ret
  4108c8:	sub	sp, sp, #0x50
  4108cc:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4108d0:	add	x8, x8, #0x778
  4108d4:	ldp	q0, q1, [x8]
  4108d8:	ldr	q2, [x8, #32]
  4108dc:	ldr	x8, [x8, #48]
  4108e0:	mov	x1, x0
  4108e4:	stp	q0, q1, [sp]
  4108e8:	ldr	w9, [sp, #12]
  4108ec:	str	x8, [sp, #48]
  4108f0:	mov	x3, sp
  4108f4:	mov	x2, #0xffffffffffffffff    	// #-1
  4108f8:	orr	w8, w9, #0x4000000
  4108fc:	mov	w0, wzr
  410900:	stp	x29, x30, [sp, #64]
  410904:	add	x29, sp, #0x40
  410908:	str	q2, [sp, #32]
  41090c:	str	w8, [sp, #12]
  410910:	bl	410554 <__fxstatat@plt+0xd9b4>
  410914:	ldp	x29, x30, [sp, #64]
  410918:	add	sp, sp, #0x50
  41091c:	ret
  410920:	sub	sp, sp, #0x50
  410924:	adrp	x8, 42b000 <__progname@@GLIBC_2.17+0xa28>
  410928:	add	x8, x8, #0x778
  41092c:	ldp	q0, q1, [x8]
  410930:	ldr	q2, [x8, #32]
  410934:	ldr	x8, [x8, #48]
  410938:	mov	x2, x1
  41093c:	stp	q0, q1, [sp]
  410940:	ldr	w9, [sp, #12]
  410944:	mov	x1, x0
  410948:	str	x8, [sp, #48]
  41094c:	mov	x3, sp
  410950:	orr	w8, w9, #0x4000000
  410954:	mov	w0, wzr
  410958:	stp	x29, x30, [sp, #64]
  41095c:	add	x29, sp, #0x40
  410960:	str	q2, [sp, #32]
  410964:	str	w8, [sp, #12]
  410968:	bl	410554 <__fxstatat@plt+0xd9b4>
  41096c:	ldp	x29, x30, [sp, #64]
  410970:	add	sp, sp, #0x50
  410974:	ret
  410978:	sub	sp, sp, #0x80
  41097c:	movi	v0.2d, #0x0
  410980:	cmp	w1, #0xa
  410984:	stp	x29, x30, [sp, #112]
  410988:	add	x29, sp, #0x70
  41098c:	str	wzr, [sp, #48]
  410990:	stp	q0, q0, [sp, #16]
  410994:	str	q0, [sp]
  410998:	b.eq	4109e8 <__fxstatat@plt+0xde48>  // b.none
  41099c:	ldp	q0, q1, [sp]
  4109a0:	ldr	w9, [sp, #48]
  4109a4:	ldr	q2, [sp, #32]
  4109a8:	mov	x8, x2
  4109ac:	stur	q0, [sp, #60]
  4109b0:	ldr	w10, [sp, #68]
  4109b4:	str	w1, [sp, #56]
  4109b8:	str	w9, [sp, #108]
  4109bc:	add	x3, sp, #0x38
  4109c0:	orr	w9, w10, #0x4000000
  4109c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4109c8:	mov	x1, x8
  4109cc:	stur	q1, [sp, #76]
  4109d0:	stur	q2, [sp, #92]
  4109d4:	str	w9, [sp, #68]
  4109d8:	bl	410554 <__fxstatat@plt+0xd9b4>
  4109dc:	ldp	x29, x30, [sp, #112]
  4109e0:	add	sp, sp, #0x80
  4109e4:	ret
  4109e8:	bl	4028c0 <abort@plt>
  4109ec:	mov	x4, #0xffffffffffffffff    	// #-1
  4109f0:	b	4109f4 <__fxstatat@plt+0xde54>
  4109f4:	sub	sp, sp, #0x50
  4109f8:	adrp	x9, 42b000 <__progname@@GLIBC_2.17+0xa28>
  4109fc:	add	x9, x9, #0x778
  410a00:	ldp	q0, q1, [x9]
  410a04:	ldr	x10, [x9, #48]
  410a08:	stp	x29, x30, [sp, #64]
  410a0c:	add	x29, sp, #0x40
  410a10:	stp	q0, q1, [sp]
  410a14:	ldr	q0, [x9, #32]
  410a18:	mov	w9, #0xa                   	// #10
  410a1c:	str	x10, [sp, #48]
  410a20:	str	w9, [sp]
  410a24:	str	q0, [sp, #32]
  410a28:	cbz	x1, 410a54 <__fxstatat@plt+0xdeb4>
  410a2c:	cbz	x2, 410a54 <__fxstatat@plt+0xdeb4>
  410a30:	mov	x8, x3
  410a34:	stp	x1, x2, [sp, #40]
  410a38:	mov	x3, sp
  410a3c:	mov	x1, x8
  410a40:	mov	x2, x4
  410a44:	bl	410554 <__fxstatat@plt+0xd9b4>
  410a48:	ldp	x29, x30, [sp, #64]
  410a4c:	add	sp, sp, #0x50
  410a50:	ret
  410a54:	bl	4028c0 <abort@plt>
  410a58:	mov	x3, x2
  410a5c:	mov	x2, x1
  410a60:	mov	x4, #0xffffffffffffffff    	// #-1
  410a64:	mov	x1, x0
  410a68:	mov	w0, wzr
  410a6c:	b	4109f4 <__fxstatat@plt+0xde54>
  410a70:	mov	x4, x3
  410a74:	mov	x3, x2
  410a78:	mov	x2, x1
  410a7c:	mov	x1, x0
  410a80:	mov	w0, wzr
  410a84:	b	4109f4 <__fxstatat@plt+0xde54>
  410a88:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x17d48>
  410a8c:	add	x3, x3, #0x568
  410a90:	b	410554 <__fxstatat@plt+0xd9b4>
  410a94:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x17d48>
  410a98:	mov	x2, x1
  410a9c:	add	x3, x3, #0x568
  410aa0:	mov	x1, x0
  410aa4:	mov	w0, wzr
  410aa8:	b	410554 <__fxstatat@plt+0xd9b4>
  410aac:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x17d48>
  410ab0:	add	x3, x3, #0x568
  410ab4:	mov	x2, #0xffffffffffffffff    	// #-1
  410ab8:	b	410554 <__fxstatat@plt+0xd9b4>
  410abc:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x17d48>
  410ac0:	add	x3, x3, #0x568
  410ac4:	mov	x2, #0xffffffffffffffff    	// #-1
  410ac8:	mov	x1, x0
  410acc:	mov	w0, wzr
  410ad0:	b	410554 <__fxstatat@plt+0xd9b4>
  410ad4:	stp	x29, x30, [sp, #-32]!
  410ad8:	stp	x20, x19, [sp, #16]
  410adc:	mov	x20, x0
  410ae0:	mov	w19, w1
  410ae4:	mov	w2, #0x5                   	// #5
  410ae8:	mov	x0, xzr
  410aec:	mov	x1, x20
  410af0:	mov	x29, sp
  410af4:	bl	402ac0 <dcgettext@plt>
  410af8:	cmp	x0, x20
  410afc:	b.ne	410be0 <__fxstatat@plt+0xe040>  // b.any
  410b00:	bl	412958 <_obstack_memory_used@@Base+0x6a0>
  410b04:	ldrb	w8, [x0]
  410b08:	and	w8, w8, #0xffffffdf
  410b0c:	cmp	w8, #0x47
  410b10:	b.eq	410b74 <__fxstatat@plt+0xdfd4>  // b.none
  410b14:	cmp	w8, #0x55
  410b18:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b1c:	ldrb	w8, [x0, #1]
  410b20:	and	w8, w8, #0xffffffdf
  410b24:	cmp	w8, #0x54
  410b28:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b2c:	ldrb	w8, [x0, #2]
  410b30:	and	w8, w8, #0xffffffdf
  410b34:	cmp	w8, #0x46
  410b38:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b3c:	ldrb	w8, [x0, #3]
  410b40:	cmp	w8, #0x2d
  410b44:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b48:	ldrb	w8, [x0, #4]
  410b4c:	cmp	w8, #0x38
  410b50:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b54:	ldrb	w8, [x0, #5]
  410b58:	cbnz	w8, 410bc8 <__fxstatat@plt+0xe028>
  410b5c:	ldrb	w8, [x20]
  410b60:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  410b64:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  410b68:	add	x9, x9, #0xa5c
  410b6c:	add	x10, x10, #0xa58
  410b70:	b	410c00 <__fxstatat@plt+0xe060>
  410b74:	ldrb	w8, [x0, #1]
  410b78:	and	w8, w8, #0xffffffdf
  410b7c:	cmp	w8, #0x42
  410b80:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b84:	ldrb	w8, [x0, #2]
  410b88:	cmp	w8, #0x31
  410b8c:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b90:	ldrb	w8, [x0, #3]
  410b94:	cmp	w8, #0x38
  410b98:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410b9c:	ldrb	w8, [x0, #4]
  410ba0:	cmp	w8, #0x30
  410ba4:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410ba8:	ldrb	w8, [x0, #5]
  410bac:	cmp	w8, #0x33
  410bb0:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410bb4:	ldrb	w8, [x0, #6]
  410bb8:	cmp	w8, #0x30
  410bbc:	b.ne	410bc8 <__fxstatat@plt+0xe028>  // b.any
  410bc0:	ldrb	w8, [x0, #7]
  410bc4:	cbz	w8, 410bec <__fxstatat@plt+0xe04c>
  410bc8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  410bcc:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  410bd0:	add	x8, x8, #0xe4d
  410bd4:	add	x9, x9, #0xa54
  410bd8:	cmp	w19, #0x9
  410bdc:	csel	x0, x9, x8, eq  // eq = none
  410be0:	ldp	x20, x19, [sp, #16]
  410be4:	ldp	x29, x30, [sp], #32
  410be8:	ret
  410bec:	ldrb	w8, [x20]
  410bf0:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x5d48>
  410bf4:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  410bf8:	add	x9, x9, #0xa64
  410bfc:	add	x10, x10, #0xa60
  410c00:	cmp	w8, #0x60
  410c04:	csel	x0, x10, x9, eq  // eq = none
  410c08:	b	410be0 <__fxstatat@plt+0xe040>
  410c0c:	mov	x8, x0
  410c10:	mov	w0, #0xffffff9c            	// #-100
  410c14:	mov	w2, #0xffffff9c            	// #-100
  410c18:	mov	x3, x1
  410c1c:	mov	x1, x8
  410c20:	b	410c24 <__fxstatat@plt+0xe084>
  410c24:	sub	sp, sp, #0x150
  410c28:	stp	x22, x21, [sp, #304]
  410c2c:	mov	w21, w0
  410c30:	mov	x0, x1
  410c34:	stp	x29, x30, [sp, #256]
  410c38:	stp	x28, x25, [sp, #272]
  410c3c:	stp	x24, x23, [sp, #288]
  410c40:	stp	x20, x19, [sp, #320]
  410c44:	add	x29, sp, #0x100
  410c48:	mov	x20, x3
  410c4c:	mov	w19, w2
  410c50:	mov	x22, x1
  410c54:	bl	40b2e4 <__fxstatat@plt+0x8744>
  410c58:	mov	x23, x0
  410c5c:	mov	x0, x20
  410c60:	bl	40b2e4 <__fxstatat@plt+0x8744>
  410c64:	mov	x24, x0
  410c68:	mov	x0, x23
  410c6c:	bl	40b32c <__fxstatat@plt+0x878c>
  410c70:	mov	x25, x0
  410c74:	mov	x0, x24
  410c78:	bl	40b32c <__fxstatat@plt+0x878c>
  410c7c:	cmp	x25, x0
  410c80:	b.ne	410c98 <__fxstatat@plt+0xe0f8>  // b.any
  410c84:	mov	x0, x23
  410c88:	mov	x1, x24
  410c8c:	mov	x2, x25
  410c90:	bl	402810 <bcmp@plt>
  410c94:	cbz	w0, 410cbc <__fxstatat@plt+0xe11c>
  410c98:	mov	w19, wzr
  410c9c:	mov	w0, w19
  410ca0:	ldp	x20, x19, [sp, #320]
  410ca4:	ldp	x22, x21, [sp, #304]
  410ca8:	ldp	x24, x23, [sp, #288]
  410cac:	ldp	x28, x25, [sp, #272]
  410cb0:	ldp	x29, x30, [sp, #256]
  410cb4:	add	sp, sp, #0x150
  410cb8:	ret
  410cbc:	mov	x0, x22
  410cc0:	bl	412908 <_obstack_memory_used@@Base+0x650>
  410cc4:	mov	x22, x0
  410cc8:	add	x2, sp, #0x80
  410ccc:	mov	w3, #0x100                 	// #256
  410cd0:	mov	w0, w21
  410cd4:	mov	x1, x22
  410cd8:	bl	4141c0 <_obstack_memory_used@@Base+0x1f08>
  410cdc:	cbz	w0, 410cfc <__fxstatat@plt+0xe15c>
  410ce0:	bl	402b30 <__errno_location@plt>
  410ce4:	ldr	w1, [x0]
  410ce8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  410cec:	add	x2, x2, #0x607
  410cf0:	mov	w0, #0x1                   	// #1
  410cf4:	mov	x3, x22
  410cf8:	bl	4025b0 <error@plt>
  410cfc:	mov	x0, x22
  410d00:	bl	402990 <free@plt>
  410d04:	mov	x0, x20
  410d08:	bl	412908 <_obstack_memory_used@@Base+0x650>
  410d0c:	mov	x20, x0
  410d10:	mov	x2, sp
  410d14:	mov	w3, #0x100                 	// #256
  410d18:	mov	w0, w19
  410d1c:	mov	x1, x20
  410d20:	bl	4141c0 <_obstack_memory_used@@Base+0x1f08>
  410d24:	cbz	w0, 410d44 <__fxstatat@plt+0xe1a4>
  410d28:	bl	402b30 <__errno_location@plt>
  410d2c:	ldr	w1, [x0]
  410d30:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  410d34:	add	x2, x2, #0x607
  410d38:	mov	w0, #0x1                   	// #1
  410d3c:	mov	x3, x20
  410d40:	bl	4025b0 <error@plt>
  410d44:	ldp	x11, x8, [sp]
  410d48:	ldp	x10, x9, [sp, #128]
  410d4c:	mov	x0, x20
  410d50:	cmp	x9, x8
  410d54:	cset	w8, eq  // eq = none
  410d58:	cmp	x10, x11
  410d5c:	cset	w9, eq  // eq = none
  410d60:	and	w19, w8, w9
  410d64:	bl	402990 <free@plt>
  410d68:	b	410c9c <__fxstatat@plt+0xe0fc>
  410d6c:	sub	sp, sp, #0x50
  410d70:	str	x21, [sp, #48]
  410d74:	stp	x20, x19, [sp, #64]
  410d78:	mov	x21, x5
  410d7c:	mov	x20, x4
  410d80:	mov	x5, x3
  410d84:	mov	x4, x2
  410d88:	mov	x19, x0
  410d8c:	stp	x29, x30, [sp, #32]
  410d90:	add	x29, sp, #0x20
  410d94:	cbz	x1, 410db4 <__fxstatat@plt+0xe214>
  410d98:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  410d9c:	mov	x3, x1
  410da0:	add	x2, x2, #0xa71
  410da4:	mov	w1, #0x1                   	// #1
  410da8:	mov	x0, x19
  410dac:	bl	402930 <__fprintf_chk@plt>
  410db0:	b	410dd0 <__fxstatat@plt+0xe230>
  410db4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  410db8:	add	x2, x2, #0xa7d
  410dbc:	mov	w1, #0x1                   	// #1
  410dc0:	mov	x0, x19
  410dc4:	mov	x3, x4
  410dc8:	mov	x4, x5
  410dcc:	bl	402930 <__fprintf_chk@plt>
  410dd0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410dd4:	add	x1, x1, #0xa84
  410dd8:	mov	w2, #0x5                   	// #5
  410ddc:	mov	x0, xzr
  410de0:	bl	402ac0 <dcgettext@plt>
  410de4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  410de8:	mov	x3, x0
  410dec:	add	x2, x2, #0xd4f
  410df0:	mov	w1, #0x1                   	// #1
  410df4:	mov	w4, #0x7e3                 	// #2019
  410df8:	mov	x0, x19
  410dfc:	bl	402930 <__fprintf_chk@plt>
  410e00:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410e04:	add	x1, x1, #0xa88
  410e08:	mov	w2, #0x5                   	// #5
  410e0c:	mov	x0, xzr
  410e10:	bl	402ac0 <dcgettext@plt>
  410e14:	mov	x1, x19
  410e18:	bl	402ad0 <fputs_unlocked@plt>
  410e1c:	cmp	x21, #0x9
  410e20:	b.hi	410e74 <__fxstatat@plt+0xe2d4>  // b.pmore
  410e24:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  410e28:	add	x8, x8, #0xa67
  410e2c:	adr	x9, 410e3c <__fxstatat@plt+0xe29c>
  410e30:	ldrb	w10, [x8, x21]
  410e34:	add	x9, x9, x10, lsl #2
  410e38:	br	x9
  410e3c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410e40:	add	x1, x1, #0xb54
  410e44:	mov	w2, #0x5                   	// #5
  410e48:	mov	x0, xzr
  410e4c:	bl	402ac0 <dcgettext@plt>
  410e50:	ldr	x3, [x20]
  410e54:	mov	x2, x0
  410e58:	mov	x0, x19
  410e5c:	ldp	x20, x19, [sp, #64]
  410e60:	ldr	x21, [sp, #48]
  410e64:	ldp	x29, x30, [sp, #32]
  410e68:	mov	w1, #0x1                   	// #1
  410e6c:	add	sp, sp, #0x50
  410e70:	b	402930 <__fprintf_chk@plt>
  410e74:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410e78:	add	x1, x1, #0xc93
  410e7c:	b	410fd8 <__fxstatat@plt+0xe438>
  410e80:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410e84:	add	x1, x1, #0xb64
  410e88:	mov	w2, #0x5                   	// #5
  410e8c:	mov	x0, xzr
  410e90:	bl	402ac0 <dcgettext@plt>
  410e94:	ldp	x3, x4, [x20]
  410e98:	mov	x2, x0
  410e9c:	mov	x0, x19
  410ea0:	ldp	x20, x19, [sp, #64]
  410ea4:	ldr	x21, [sp, #48]
  410ea8:	ldp	x29, x30, [sp, #32]
  410eac:	mov	w1, #0x1                   	// #1
  410eb0:	add	sp, sp, #0x50
  410eb4:	b	402930 <__fprintf_chk@plt>
  410eb8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410ebc:	add	x1, x1, #0xb7b
  410ec0:	mov	w2, #0x5                   	// #5
  410ec4:	mov	x0, xzr
  410ec8:	bl	402ac0 <dcgettext@plt>
  410ecc:	ldp	x3, x4, [x20]
  410ed0:	ldr	x5, [x20, #16]
  410ed4:	mov	x2, x0
  410ed8:	mov	x0, x19
  410edc:	ldp	x20, x19, [sp, #64]
  410ee0:	ldr	x21, [sp, #48]
  410ee4:	ldp	x29, x30, [sp, #32]
  410ee8:	mov	w1, #0x1                   	// #1
  410eec:	add	sp, sp, #0x50
  410ef0:	b	402930 <__fprintf_chk@plt>
  410ef4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410ef8:	add	x1, x1, #0xb97
  410efc:	mov	w2, #0x5                   	// #5
  410f00:	mov	x0, xzr
  410f04:	bl	402ac0 <dcgettext@plt>
  410f08:	ldp	x3, x4, [x20]
  410f0c:	ldp	x5, x6, [x20, #16]
  410f10:	mov	x2, x0
  410f14:	mov	x0, x19
  410f18:	ldp	x20, x19, [sp, #64]
  410f1c:	ldr	x21, [sp, #48]
  410f20:	ldp	x29, x30, [sp, #32]
  410f24:	mov	w1, #0x1                   	// #1
  410f28:	add	sp, sp, #0x50
  410f2c:	b	402930 <__fprintf_chk@plt>
  410f30:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410f34:	add	x1, x1, #0xbb7
  410f38:	mov	w2, #0x5                   	// #5
  410f3c:	mov	x0, xzr
  410f40:	bl	402ac0 <dcgettext@plt>
  410f44:	ldp	x3, x4, [x20]
  410f48:	ldp	x5, x6, [x20, #16]
  410f4c:	ldr	x7, [x20, #32]
  410f50:	mov	x2, x0
  410f54:	mov	x0, x19
  410f58:	ldp	x20, x19, [sp, #64]
  410f5c:	ldr	x21, [sp, #48]
  410f60:	ldp	x29, x30, [sp, #32]
  410f64:	mov	w1, #0x1                   	// #1
  410f68:	add	sp, sp, #0x50
  410f6c:	b	402930 <__fprintf_chk@plt>
  410f70:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410f74:	add	x1, x1, #0xbdb
  410f78:	mov	w2, #0x5                   	// #5
  410f7c:	mov	x0, xzr
  410f80:	bl	402ac0 <dcgettext@plt>
  410f84:	ldp	x3, x4, [x20]
  410f88:	ldp	x5, x6, [x20, #16]
  410f8c:	ldp	x7, x8, [x20, #32]
  410f90:	mov	x2, x0
  410f94:	b	410fc4 <__fxstatat@plt+0xe424>
  410f98:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410f9c:	add	x1, x1, #0xc03
  410fa0:	mov	w2, #0x5                   	// #5
  410fa4:	mov	x0, xzr
  410fa8:	bl	402ac0 <dcgettext@plt>
  410fac:	ldr	x9, [x20, #48]
  410fb0:	ldp	x3, x4, [x20]
  410fb4:	ldp	x5, x6, [x20, #16]
  410fb8:	ldp	x7, x8, [x20, #32]
  410fbc:	mov	x2, x0
  410fc0:	str	x9, [sp, #8]
  410fc4:	mov	w1, #0x1                   	// #1
  410fc8:	str	x8, [sp]
  410fcc:	b	41103c <__fxstatat@plt+0xe49c>
  410fd0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  410fd4:	add	x1, x1, #0xc5f
  410fd8:	mov	w2, #0x5                   	// #5
  410fdc:	mov	x0, xzr
  410fe0:	bl	402ac0 <dcgettext@plt>
  410fe4:	ldp	x8, x9, [x20, #56]
  410fe8:	ldp	x3, x4, [x20]
  410fec:	ldp	x5, x6, [x20, #16]
  410ff0:	ldr	x7, [x20, #32]
  410ff4:	ldur	q0, [x20, #40]
  410ff8:	mov	x2, x0
  410ffc:	str	x9, [sp, #24]
  411000:	b	411030 <__fxstatat@plt+0xe490>
  411004:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  411008:	add	x1, x1, #0xc2f
  41100c:	mov	w2, #0x5                   	// #5
  411010:	mov	x0, xzr
  411014:	bl	402ac0 <dcgettext@plt>
  411018:	ldp	x3, x4, [x20]
  41101c:	ldp	x5, x6, [x20, #16]
  411020:	ldr	x7, [x20, #32]
  411024:	ldur	q0, [x20, #40]
  411028:	ldr	x8, [x20, #56]
  41102c:	mov	x2, x0
  411030:	str	x8, [sp, #16]
  411034:	mov	w1, #0x1                   	// #1
  411038:	str	q0, [sp]
  41103c:	mov	x0, x19
  411040:	bl	402930 <__fprintf_chk@plt>
  411044:	ldp	x20, x19, [sp, #64]
  411048:	ldr	x21, [sp, #48]
  41104c:	ldp	x29, x30, [sp, #32]
  411050:	add	sp, sp, #0x50
  411054:	ret
  411058:	mov	x8, xzr
  41105c:	ldr	x9, [x4, x8, lsl #3]
  411060:	add	x8, x8, #0x1
  411064:	cbnz	x9, 41105c <__fxstatat@plt+0xe4bc>
  411068:	sub	x5, x8, #0x1
  41106c:	b	410d6c <__fxstatat@plt+0xe1cc>
  411070:	sub	sp, sp, #0x60
  411074:	stp	x29, x30, [sp, #80]
  411078:	ldr	w8, [x4, #24]
  41107c:	mov	x5, xzr
  411080:	mov	x9, sp
  411084:	add	x29, sp, #0x50
  411088:	tbz	w8, #31, 4110b0 <__fxstatat@plt+0xe510>
  41108c:	add	w11, w8, #0x8
  411090:	cmn	w8, #0x8
  411094:	str	w11, [x4, #24]
  411098:	b.gt	4110ac <__fxstatat@plt+0xe50c>
  41109c:	ldr	x10, [x4, #8]
  4110a0:	add	x10, x10, w8, sxtw
  4110a4:	mov	w8, w11
  4110a8:	b	4110bc <__fxstatat@plt+0xe51c>
  4110ac:	mov	w8, w11
  4110b0:	ldr	x10, [x4]
  4110b4:	add	x11, x10, #0x8
  4110b8:	str	x11, [x4]
  4110bc:	ldr	x10, [x10]
  4110c0:	str	x10, [x9, x5, lsl #3]
  4110c4:	cbz	x10, 4110d4 <__fxstatat@plt+0xe534>
  4110c8:	add	x5, x5, #0x1
  4110cc:	cmp	x5, #0xa
  4110d0:	b.ne	411088 <__fxstatat@plt+0xe4e8>  // b.any
  4110d4:	mov	x4, sp
  4110d8:	bl	410d6c <__fxstatat@plt+0xe1cc>
  4110dc:	ldp	x29, x30, [sp, #80]
  4110e0:	add	sp, sp, #0x60
  4110e4:	ret
  4110e8:	sub	sp, sp, #0xf0
  4110ec:	stp	x29, x30, [sp, #224]
  4110f0:	add	x29, sp, #0xe0
  4110f4:	mov	x8, #0xffffffffffffffe0    	// #-32
  4110f8:	mov	x9, sp
  4110fc:	sub	x10, x29, #0x60
  411100:	movk	x8, #0xff80, lsl #32
  411104:	add	x11, x29, #0x10
  411108:	add	x9, x9, #0x80
  41110c:	add	x10, x10, #0x20
  411110:	stp	x9, x8, [x29, #-16]
  411114:	stp	x11, x10, [x29, #-32]
  411118:	stp	x4, x5, [x29, #-96]
  41111c:	stp	x6, x7, [x29, #-80]
  411120:	stp	q0, q1, [sp]
  411124:	ldp	q0, q1, [x29, #-32]
  411128:	sub	x4, x29, #0x40
  41112c:	stp	q2, q3, [sp, #32]
  411130:	stp	q4, q5, [sp, #64]
  411134:	stp	q6, q7, [sp, #96]
  411138:	stp	q0, q1, [x29, #-64]
  41113c:	bl	411070 <__fxstatat@plt+0xe4d0>
  411140:	ldp	x29, x30, [sp, #224]
  411144:	add	sp, sp, #0xf0
  411148:	ret
  41114c:	stp	x29, x30, [sp, #-16]!
  411150:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  411154:	add	x1, x1, #0xccf
  411158:	mov	w2, #0x5                   	// #5
  41115c:	mov	x0, xzr
  411160:	mov	x29, sp
  411164:	bl	402ac0 <dcgettext@plt>
  411168:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  41116c:	mov	x1, x0
  411170:	add	x2, x2, #0xce4
  411174:	mov	w0, #0x1                   	// #1
  411178:	bl	4027b0 <__printf_chk@plt>
  41117c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  411180:	add	x1, x1, #0xcfa
  411184:	mov	w2, #0x5                   	// #5
  411188:	mov	x0, xzr
  41118c:	bl	402ac0 <dcgettext@plt>
  411190:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x4d48>
  411194:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  411198:	mov	x1, x0
  41119c:	add	x2, x2, #0xde6
  4111a0:	add	x3, x3, #0x4ea
  4111a4:	mov	w0, #0x1                   	// #1
  4111a8:	bl	4027b0 <__printf_chk@plt>
  4111ac:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4111b0:	add	x1, x1, #0xd0e
  4111b4:	mov	w2, #0x5                   	// #5
  4111b8:	mov	x0, xzr
  4111bc:	bl	402ac0 <dcgettext@plt>
  4111c0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4111c4:	ldr	x1, [x8, #1488]
  4111c8:	ldp	x29, x30, [sp], #16
  4111cc:	b	402ad0 <fputs_unlocked@plt>
  4111d0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4111d4:	udiv	x8, x8, x1
  4111d8:	cmp	x8, x0
  4111dc:	b.cc	4111e8 <__fxstatat@plt+0xe648>  // b.lo, b.ul, b.last
  4111e0:	mul	x0, x1, x0
  4111e4:	b	4111f4 <__fxstatat@plt+0xe654>
  4111e8:	stp	x29, x30, [sp, #-16]!
  4111ec:	mov	x29, sp
  4111f0:	bl	411430 <__fxstatat@plt+0xe890>
  4111f4:	stp	x29, x30, [sp, #-32]!
  4111f8:	str	x19, [sp, #16]
  4111fc:	mov	x29, sp
  411200:	mov	x19, x0
  411204:	bl	402730 <malloc@plt>
  411208:	cbz	x19, 411210 <__fxstatat@plt+0xe670>
  41120c:	cbz	x0, 41121c <__fxstatat@plt+0xe67c>
  411210:	ldr	x19, [sp, #16]
  411214:	ldp	x29, x30, [sp], #32
  411218:	ret
  41121c:	bl	411430 <__fxstatat@plt+0xe890>
  411220:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411224:	udiv	x8, x8, x2
  411228:	cmp	x8, x1
  41122c:	b.cc	411238 <__fxstatat@plt+0xe698>  // b.lo, b.ul, b.last
  411230:	mul	x1, x2, x1
  411234:	b	411244 <__fxstatat@plt+0xe6a4>
  411238:	stp	x29, x30, [sp, #-16]!
  41123c:	mov	x29, sp
  411240:	bl	411430 <__fxstatat@plt+0xe890>
  411244:	stp	x29, x30, [sp, #-32]!
  411248:	str	x19, [sp, #16]
  41124c:	mov	x19, x1
  411250:	mov	x29, sp
  411254:	cbz	x0, 411268 <__fxstatat@plt+0xe6c8>
  411258:	cbnz	x19, 411268 <__fxstatat@plt+0xe6c8>
  41125c:	bl	402990 <free@plt>
  411260:	mov	x0, xzr
  411264:	b	411278 <__fxstatat@plt+0xe6d8>
  411268:	mov	x1, x19
  41126c:	bl	402830 <realloc@plt>
  411270:	cbz	x19, 411278 <__fxstatat@plt+0xe6d8>
  411274:	cbz	x0, 411284 <__fxstatat@plt+0xe6e4>
  411278:	ldr	x19, [sp, #16]
  41127c:	ldp	x29, x30, [sp], #32
  411280:	ret
  411284:	bl	411430 <__fxstatat@plt+0xe890>
  411288:	stp	x29, x30, [sp, #-16]!
  41128c:	ldr	x9, [x1]
  411290:	mov	x29, sp
  411294:	cbz	x0, 4112b8 <__fxstatat@plt+0xe718>
  411298:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41129c:	movk	x8, #0x5554
  4112a0:	udiv	x8, x8, x2
  4112a4:	cmp	x8, x9
  4112a8:	b.ls	4112f0 <__fxstatat@plt+0xe750>  // b.plast
  4112ac:	add	x8, x9, x9, lsr #1
  4112b0:	add	x9, x8, #0x1
  4112b4:	b	4112dc <__fxstatat@plt+0xe73c>
  4112b8:	cbnz	x9, 4112cc <__fxstatat@plt+0xe72c>
  4112bc:	mov	w8, #0x80                  	// #128
  4112c0:	udiv	x8, x8, x2
  4112c4:	cmp	x2, #0x80
  4112c8:	cinc	x9, x8, hi  // hi = pmore
  4112cc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4112d0:	udiv	x8, x8, x2
  4112d4:	cmp	x8, x9
  4112d8:	b.cc	4112f0 <__fxstatat@plt+0xe750>  // b.lo, b.ul, b.last
  4112dc:	mul	x8, x9, x2
  4112e0:	str	x9, [x1]
  4112e4:	mov	x1, x8
  4112e8:	ldp	x29, x30, [sp], #16
  4112ec:	b	411244 <__fxstatat@plt+0xe6a4>
  4112f0:	bl	411430 <__fxstatat@plt+0xe890>
  4112f4:	b	4111f4 <__fxstatat@plt+0xe654>
  4112f8:	stp	x29, x30, [sp, #-16]!
  4112fc:	ldr	x8, [x1]
  411300:	mov	x29, sp
  411304:	cbz	x0, 411324 <__fxstatat@plt+0xe784>
  411308:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  41130c:	movk	x9, #0x5554
  411310:	cmp	x8, x9
  411314:	b.cs	41132c <__fxstatat@plt+0xe78c>  // b.hs, b.nlast
  411318:	add	x8, x8, x8, lsr #1
  41131c:	add	x8, x8, #0x1
  411320:	b	411334 <__fxstatat@plt+0xe794>
  411324:	cbz	x8, 411330 <__fxstatat@plt+0xe790>
  411328:	tbz	x8, #63, 411334 <__fxstatat@plt+0xe794>
  41132c:	bl	411430 <__fxstatat@plt+0xe890>
  411330:	mov	w8, #0x80                  	// #128
  411334:	str	x8, [x1]
  411338:	mov	x1, x8
  41133c:	ldp	x29, x30, [sp], #16
  411340:	b	411244 <__fxstatat@plt+0xe6a4>
  411344:	stp	x29, x30, [sp, #-32]!
  411348:	stp	x20, x19, [sp, #16]
  41134c:	mov	x29, sp
  411350:	mov	x19, x0
  411354:	bl	4111f4 <__fxstatat@plt+0xe654>
  411358:	mov	w1, wzr
  41135c:	mov	x2, x19
  411360:	mov	x20, x0
  411364:	bl	4027c0 <memset@plt>
  411368:	mov	x0, x20
  41136c:	ldp	x20, x19, [sp, #16]
  411370:	ldp	x29, x30, [sp], #32
  411374:	ret
  411378:	stp	x29, x30, [sp, #-16]!
  41137c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411380:	udiv	x8, x8, x1
  411384:	cmp	x8, x0
  411388:	mov	x29, sp
  41138c:	b.cc	4113a0 <__fxstatat@plt+0xe800>  // b.lo, b.ul, b.last
  411390:	bl	411ee4 <__fxstatat@plt+0xf344>
  411394:	cbz	x0, 4113a0 <__fxstatat@plt+0xe800>
  411398:	ldp	x29, x30, [sp], #16
  41139c:	ret
  4113a0:	bl	411430 <__fxstatat@plt+0xe890>
  4113a4:	stp	x29, x30, [sp, #-48]!
  4113a8:	stp	x20, x19, [sp, #32]
  4113ac:	mov	x20, x0
  4113b0:	mov	x0, x1
  4113b4:	str	x21, [sp, #16]
  4113b8:	mov	x29, sp
  4113bc:	mov	x19, x1
  4113c0:	bl	4111f4 <__fxstatat@plt+0xe654>
  4113c4:	mov	x1, x20
  4113c8:	mov	x2, x19
  4113cc:	mov	x21, x0
  4113d0:	bl	4024d0 <memcpy@plt>
  4113d4:	mov	x0, x21
  4113d8:	ldp	x20, x19, [sp, #32]
  4113dc:	ldr	x21, [sp, #16]
  4113e0:	ldp	x29, x30, [sp], #48
  4113e4:	ret
  4113e8:	stp	x29, x30, [sp, #-48]!
  4113ec:	str	x21, [sp, #16]
  4113f0:	stp	x20, x19, [sp, #32]
  4113f4:	mov	x29, sp
  4113f8:	mov	x19, x0
  4113fc:	bl	402540 <strlen@plt>
  411400:	add	x20, x0, #0x1
  411404:	mov	x0, x20
  411408:	bl	4111f4 <__fxstatat@plt+0xe654>
  41140c:	mov	x1, x19
  411410:	mov	x2, x20
  411414:	mov	x21, x0
  411418:	bl	4024d0 <memcpy@plt>
  41141c:	mov	x0, x21
  411420:	ldp	x20, x19, [sp, #32]
  411424:	ldr	x21, [sp, #16]
  411428:	ldp	x29, x30, [sp], #48
  41142c:	ret
  411430:	stp	x29, x30, [sp, #-32]!
  411434:	str	x19, [sp, #16]
  411438:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  41143c:	ldr	w19, [x8, #1344]
  411440:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  411444:	add	x1, x1, #0xd7e
  411448:	mov	w2, #0x5                   	// #5
  41144c:	mov	x0, xzr
  411450:	mov	x29, sp
  411454:	bl	402ac0 <dcgettext@plt>
  411458:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  41145c:	mov	x3, x0
  411460:	add	x2, x2, #0x607
  411464:	mov	w0, w19
  411468:	mov	w1, wzr
  41146c:	bl	4025b0 <error@plt>
  411470:	bl	4028c0 <abort@plt>
  411474:	sub	sp, sp, #0x50
  411478:	stp	x24, x23, [sp, #32]
  41147c:	stp	x22, x21, [sp, #48]
  411480:	mov	x22, x3
  411484:	mov	x24, x2
  411488:	mov	w2, w1
  41148c:	add	x3, sp, #0x8
  411490:	mov	x1, xzr
  411494:	stp	x29, x30, [sp, #16]
  411498:	stp	x20, x19, [sp, #64]
  41149c:	add	x29, sp, #0x10
  4114a0:	mov	w20, w6
  4114a4:	mov	x19, x5
  4114a8:	mov	x21, x0
  4114ac:	bl	411b18 <__fxstatat@plt+0xef78>
  4114b0:	cbz	w0, 4114e0 <__fxstatat@plt+0xe940>
  4114b4:	cmp	w0, #0x1
  4114b8:	b.eq	4114d0 <__fxstatat@plt+0xe930>  // b.none
  4114bc:	cmp	w0, #0x3
  4114c0:	b.ne	411508 <__fxstatat@plt+0xe968>  // b.any
  4114c4:	bl	402b30 <__errno_location@plt>
  4114c8:	str	wzr, [x0]
  4114cc:	b	41150c <__fxstatat@plt+0xe96c>
  4114d0:	bl	402b30 <__errno_location@plt>
  4114d4:	mov	w8, #0x4b                  	// #75
  4114d8:	str	w8, [x0]
  4114dc:	b	41150c <__fxstatat@plt+0xe96c>
  4114e0:	ldr	x23, [sp, #8]
  4114e4:	cmp	x23, x24
  4114e8:	b.cc	4114f4 <__fxstatat@plt+0xe954>  // b.lo, b.ul, b.last
  4114ec:	cmp	x23, x22
  4114f0:	b.ls	411548 <__fxstatat@plt+0xe9a8>  // b.plast
  4114f4:	bl	402b30 <__errno_location@plt>
  4114f8:	lsr	x8, x23, #30
  4114fc:	cbnz	x8, 4114d4 <__fxstatat@plt+0xe934>
  411500:	mov	w8, #0x22                  	// #34
  411504:	b	4114d8 <__fxstatat@plt+0xe938>
  411508:	bl	402b30 <__errno_location@plt>
  41150c:	ldr	w8, [x0]
  411510:	cmp	w20, #0x0
  411514:	csinc	w20, w20, wzr, ne  // ne = any
  411518:	mov	x0, x21
  41151c:	cmp	w8, #0x16
  411520:	csel	w22, wzr, w8, eq  // eq = none
  411524:	bl	410abc <__fxstatat@plt+0xdf1c>
  411528:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x4d48>
  41152c:	mov	x4, x0
  411530:	add	x2, x2, #0xd61
  411534:	mov	w0, w20
  411538:	mov	w1, w22
  41153c:	mov	x3, x19
  411540:	bl	4025b0 <error@plt>
  411544:	ldr	x23, [sp, #8]
  411548:	mov	x0, x23
  41154c:	ldp	x20, x19, [sp, #64]
  411550:	ldp	x22, x21, [sp, #48]
  411554:	ldp	x24, x23, [sp, #32]
  411558:	ldp	x29, x30, [sp, #16]
  41155c:	add	sp, sp, #0x50
  411560:	ret
  411564:	mov	w6, w5
  411568:	mov	x5, x4
  41156c:	mov	x4, x3
  411570:	mov	x3, x2
  411574:	mov	x2, x1
  411578:	mov	w1, #0xa                   	// #10
  41157c:	b	411474 <__fxstatat@plt+0xe8d4>
  411580:	stp	x29, x30, [sp, #-32]!
  411584:	mov	x0, xzr
  411588:	mov	x1, xzr
  41158c:	str	x19, [sp, #16]
  411590:	mov	x29, sp
  411594:	bl	402510 <getcwd@plt>
  411598:	mov	x19, x0
  41159c:	cbnz	x0, 4115b0 <__fxstatat@plt+0xea10>
  4115a0:	bl	402b30 <__errno_location@plt>
  4115a4:	ldr	w8, [x0]
  4115a8:	cmp	w8, #0xc
  4115ac:	b.eq	4115c0 <__fxstatat@plt+0xea20>  // b.none
  4115b0:	mov	x0, x19
  4115b4:	ldr	x19, [sp, #16]
  4115b8:	ldp	x29, x30, [sp], #32
  4115bc:	ret
  4115c0:	bl	411430 <__fxstatat@plt+0xe890>
  4115c4:	sub	sp, sp, #0x50
  4115c8:	stp	x24, x23, [sp, #32]
  4115cc:	mov	x23, #0x1001                	// #4097
  4115d0:	movk	x23, #0x40, lsl #16
  4115d4:	stp	x22, x21, [sp, #48]
  4115d8:	stp	x20, x19, [sp, #64]
  4115dc:	mov	x19, xzr
  4115e0:	mov	w8, #0x22                  	// #34
  4115e4:	mov	w22, #0x1                   	// #1
  4115e8:	movk	x23, #0x10, lsl #32
  4115ec:	stp	x29, x30, [sp, #16]
  4115f0:	add	x29, sp, #0x10
  4115f4:	str	x8, [sp, #8]
  4115f8:	add	x1, sp, #0x8
  4115fc:	mov	x0, x19
  411600:	bl	4112f8 <__fxstatat@plt+0xe758>
  411604:	ldr	x8, [sp, #8]
  411608:	mov	x19, x0
  41160c:	sub	x24, x8, #0x2
  411610:	sub	x21, x8, #0x1
  411614:	strb	wzr, [x0, x24]
  411618:	bl	402b30 <__errno_location@plt>
  41161c:	mov	x20, x0
  411620:	str	wzr, [x0]
  411624:	mov	x0, x19
  411628:	mov	x1, x21
  41162c:	bl	402a80 <gethostname@plt>
  411630:	cbz	w0, 411650 <__fxstatat@plt+0xeab0>
  411634:	ldr	w21, [x20]
  411638:	cmp	w21, #0x24
  41163c:	b.hi	41165c <__fxstatat@plt+0xeabc>  // b.pmore
  411640:	lsl	x8, x22, x21
  411644:	tst	x8, x23
  411648:	b.ne	4115f8 <__fxstatat@plt+0xea58>  // b.any
  41164c:	b	41165c <__fxstatat@plt+0xeabc>
  411650:	ldrb	w8, [x19, x24]
  411654:	cbnz	w8, 4115f8 <__fxstatat@plt+0xea58>
  411658:	b	41166c <__fxstatat@plt+0xeacc>
  41165c:	mov	x0, x19
  411660:	bl	402990 <free@plt>
  411664:	mov	x19, xzr
  411668:	str	w21, [x20]
  41166c:	mov	x0, x19
  411670:	ldp	x20, x19, [sp, #64]
  411674:	ldp	x22, x21, [sp, #48]
  411678:	ldp	x24, x23, [sp, #32]
  41167c:	ldp	x29, x30, [sp, #16]
  411680:	add	sp, sp, #0x50
  411684:	ret
  411688:	stp	x29, x30, [sp, #-80]!
  41168c:	cmp	w2, #0x25
  411690:	str	x25, [sp, #16]
  411694:	stp	x24, x23, [sp, #32]
  411698:	stp	x22, x21, [sp, #48]
  41169c:	stp	x20, x19, [sp, #64]
  4116a0:	mov	x29, sp
  4116a4:	b.cs	411a34 <__fxstatat@plt+0xee94>  // b.hs, b.nlast
  4116a8:	mov	x23, x4
  4116ac:	mov	x19, x3
  4116b0:	mov	w22, w2
  4116b4:	mov	x21, x1
  4116b8:	mov	x20, x0
  4116bc:	bl	402b30 <__errno_location@plt>
  4116c0:	mov	x24, x0
  4116c4:	str	wzr, [x0]
  4116c8:	bl	402970 <__ctype_b_loc@plt>
  4116cc:	ldr	x8, [x0]
  4116d0:	mov	x10, x20
  4116d4:	ldrb	w9, [x10], #1
  4116d8:	ldrh	w11, [x8, x9, lsl #1]
  4116dc:	tbnz	w11, #13, 4116d4 <__fxstatat@plt+0xeb34>
  4116e0:	cmp	x21, #0x0
  4116e4:	add	x8, x29, #0x18
  4116e8:	csel	x21, x8, x21, eq  // eq = none
  4116ec:	cmp	w9, #0x2d
  4116f0:	b.ne	4116fc <__fxstatat@plt+0xeb5c>  // b.any
  4116f4:	mov	w20, #0x4                   	// #4
  4116f8:	b	411a18 <__fxstatat@plt+0xee78>
  4116fc:	mov	x0, x20
  411700:	mov	x1, x21
  411704:	mov	w2, w22
  411708:	bl	402530 <strtoul@plt>
  41170c:	ldr	x25, [x21]
  411710:	cmp	x25, x20
  411714:	b.eq	411738 <__fxstatat@plt+0xeb98>  // b.none
  411718:	ldr	w20, [x24]
  41171c:	mov	x22, x0
  411720:	cbz	w20, 411730 <__fxstatat@plt+0xeb90>
  411724:	cmp	w20, #0x22
  411728:	b.ne	4116f4 <__fxstatat@plt+0xeb54>  // b.any
  41172c:	mov	w20, #0x1                   	// #1
  411730:	cbnz	x23, 411758 <__fxstatat@plt+0xebb8>
  411734:	b	411a14 <__fxstatat@plt+0xee74>
  411738:	cbz	x23, 4116f4 <__fxstatat@plt+0xeb54>
  41173c:	ldrb	w1, [x20]
  411740:	cbz	w1, 4116f4 <__fxstatat@plt+0xeb54>
  411744:	mov	x0, x23
  411748:	bl	4029c0 <strchr@plt>
  41174c:	cbz	x0, 4116f4 <__fxstatat@plt+0xeb54>
  411750:	mov	w20, wzr
  411754:	mov	w22, #0x1                   	// #1
  411758:	ldrb	w24, [x25]
  41175c:	cbz	w24, 411a14 <__fxstatat@plt+0xee74>
  411760:	mov	x0, x23
  411764:	mov	w1, w24
  411768:	bl	4029c0 <strchr@plt>
  41176c:	cbz	x0, 411998 <__fxstatat@plt+0xedf8>
  411770:	sub	w10, w24, #0x45
  411774:	mov	w8, #0x1                   	// #1
  411778:	cmp	w10, #0x2f
  41177c:	mov	w9, #0x400                 	// #1024
  411780:	b.hi	4117f4 <__fxstatat@plt+0xec54>  // b.pmore
  411784:	mov	w11, #0x1                   	// #1
  411788:	lsl	x10, x11, x10
  41178c:	mov	x11, #0x8945                	// #35141
  411790:	movk	x11, #0x30, lsl #16
  411794:	movk	x11, #0x8144, lsl #32
  411798:	tst	x10, x11
  41179c:	b.eq	4117f4 <__fxstatat@plt+0xec54>  // b.none
  4117a0:	mov	w1, #0x30                  	// #48
  4117a4:	mov	x0, x23
  4117a8:	bl	4029c0 <strchr@plt>
  4117ac:	cbz	x0, 4117e0 <__fxstatat@plt+0xec40>
  4117b0:	ldrb	w8, [x25, #1]
  4117b4:	cmp	w8, #0x42
  4117b8:	b.eq	4117ec <__fxstatat@plt+0xec4c>  // b.none
  4117bc:	cmp	w8, #0x44
  4117c0:	b.eq	4117ec <__fxstatat@plt+0xec4c>  // b.none
  4117c4:	cmp	w8, #0x69
  4117c8:	b.ne	4117e0 <__fxstatat@plt+0xec40>  // b.any
  4117cc:	ldrb	w8, [x25, #2]
  4117d0:	mov	w9, #0x3                   	// #3
  4117d4:	cmp	w8, #0x42
  4117d8:	csinc	x8, x9, xzr, eq  // eq = none
  4117dc:	b	4117e4 <__fxstatat@plt+0xec44>
  4117e0:	mov	w8, #0x1                   	// #1
  4117e4:	mov	w9, #0x400                 	// #1024
  4117e8:	b	4117f4 <__fxstatat@plt+0xec54>
  4117ec:	mov	w8, #0x2                   	// #2
  4117f0:	mov	w9, #0x3e8                 	// #1000
  4117f4:	cmp	w24, #0x59
  4117f8:	b.gt	41182c <__fxstatat@plt+0xec8c>
  4117fc:	sub	w10, w24, #0x42
  411800:	cmp	w10, #0xe
  411804:	b.hi	411868 <__fxstatat@plt+0xecc8>  // b.pmore
  411808:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x5d48>
  41180c:	add	x11, x11, #0xd8f
  411810:	adr	x12, 411820 <__fxstatat@plt+0xec80>
  411814:	ldrb	w13, [x11, x10]
  411818:	add	x12, x12, x13, lsl #2
  41181c:	br	x12
  411820:	cmp	xzr, x22, lsr #54
  411824:	lsl	x9, x22, #10
  411828:	b	411900 <__fxstatat@plt+0xed60>
  41182c:	cmp	w24, #0x73
  411830:	b.gt	4118a4 <__fxstatat@plt+0xed04>
  411834:	sub	w10, w24, #0x62
  411838:	cmp	w10, #0xb
  41183c:	b.hi	411964 <__fxstatat@plt+0xedc4>  // b.pmore
  411840:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x5d48>
  411844:	add	x11, x11, #0xd9e
  411848:	adr	x12, 41185c <__fxstatat@plt+0xecbc>
  41184c:	ldrb	w13, [x11, x10]
  411850:	add	x12, x12, x13, lsl #2
  411854:	mov	w10, wzr
  411858:	br	x12
  41185c:	cmp	xzr, x22, lsr #55
  411860:	lsl	x9, x22, #9
  411864:	b	411900 <__fxstatat@plt+0xed60>
  411868:	cmp	w24, #0x54
  41186c:	b.eq	411938 <__fxstatat@plt+0xed98>  // b.none
  411870:	cmp	w24, #0x59
  411874:	b.ne	411998 <__fxstatat@plt+0xedf8>  // b.any
  411878:	mov	w10, wzr
  41187c:	mov	w11, #0xfffffff8            	// #-8
  411880:	umulh	x12, x9, x22
  411884:	cmp	xzr, x12
  411888:	mul	x13, x22, x9
  41188c:	cset	w12, ne  // ne = any
  411890:	csinv	x22, x13, xzr, eq  // eq = none
  411894:	adds	w11, w11, #0x1
  411898:	orr	w10, w10, w12
  41189c:	b.cc	411880 <__fxstatat@plt+0xece0>  // b.lo, b.ul, b.last
  4118a0:	b	4119f8 <__fxstatat@plt+0xee58>
  4118a4:	cmp	w24, #0x74
  4118a8:	b.eq	411938 <__fxstatat@plt+0xed98>  // b.none
  4118ac:	cmp	w24, #0x77
  4118b0:	b.ne	411998 <__fxstatat@plt+0xedf8>  // b.any
  4118b4:	cmn	x22, x22
  4118b8:	lsl	x9, x22, #1
  4118bc:	cset	w10, cs  // cs = hs, nlast
  4118c0:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  4118c4:	b	4119f8 <__fxstatat@plt+0xee58>
  4118c8:	mov	w10, wzr
  4118cc:	mov	w11, #0xfffffffd            	// #-3
  4118d0:	umulh	x12, x9, x22
  4118d4:	cmp	xzr, x12
  4118d8:	mul	x13, x22, x9
  4118dc:	cset	w12, ne  // ne = any
  4118e0:	csinv	x22, x13, xzr, eq  // eq = none
  4118e4:	adds	w11, w11, #0x1
  4118e8:	orr	w10, w10, w12
  4118ec:	b.cc	4118d0 <__fxstatat@plt+0xed30>  // b.lo, b.ul, b.last
  4118f0:	b	4119f8 <__fxstatat@plt+0xee58>
  4118f4:	umulh	x10, x9, x22
  4118f8:	mul	x9, x22, x9
  4118fc:	cmp	xzr, x10
  411900:	cset	w10, ne  // ne = any
  411904:	csinv	x22, x9, xzr, eq  // eq = none
  411908:	b	4119f8 <__fxstatat@plt+0xee58>
  41190c:	mov	w10, wzr
  411910:	mov	w11, #0xfffffffe            	// #-2
  411914:	umulh	x12, x9, x22
  411918:	cmp	xzr, x12
  41191c:	mul	x13, x22, x9
  411920:	cset	w12, ne  // ne = any
  411924:	csinv	x22, x13, xzr, eq  // eq = none
  411928:	adds	w11, w11, #0x1
  41192c:	orr	w10, w10, w12
  411930:	b.cc	411914 <__fxstatat@plt+0xed74>  // b.lo, b.ul, b.last
  411934:	b	4119f8 <__fxstatat@plt+0xee58>
  411938:	mov	w10, wzr
  41193c:	mov	w11, #0xfffffffc            	// #-4
  411940:	umulh	x12, x9, x22
  411944:	cmp	xzr, x12
  411948:	mul	x13, x22, x9
  41194c:	cset	w12, ne  // ne = any
  411950:	csinv	x22, x13, xzr, eq  // eq = none
  411954:	adds	w11, w11, #0x1
  411958:	orr	w10, w10, w12
  41195c:	b.cc	411940 <__fxstatat@plt+0xeda0>  // b.lo, b.ul, b.last
  411960:	b	4119f8 <__fxstatat@plt+0xee58>
  411964:	cmp	w24, #0x5a
  411968:	b.ne	411998 <__fxstatat@plt+0xedf8>  // b.any
  41196c:	mov	w10, wzr
  411970:	mov	w11, #0xfffffff9            	// #-7
  411974:	umulh	x12, x9, x22
  411978:	cmp	xzr, x12
  41197c:	mul	x13, x22, x9
  411980:	cset	w12, ne  // ne = any
  411984:	csinv	x22, x13, xzr, eq  // eq = none
  411988:	adds	w11, w11, #0x1
  41198c:	orr	w10, w10, w12
  411990:	b.cc	411974 <__fxstatat@plt+0xedd4>  // b.lo, b.ul, b.last
  411994:	b	4119f8 <__fxstatat@plt+0xee58>
  411998:	str	x22, [x19]
  41199c:	orr	w20, w20, #0x2
  4119a0:	b	411a18 <__fxstatat@plt+0xee78>
  4119a4:	mov	w10, wzr
  4119a8:	mov	w11, #0xfffffffa            	// #-6
  4119ac:	umulh	x12, x9, x22
  4119b0:	cmp	xzr, x12
  4119b4:	mul	x13, x22, x9
  4119b8:	cset	w12, ne  // ne = any
  4119bc:	csinv	x22, x13, xzr, eq  // eq = none
  4119c0:	adds	w11, w11, #0x1
  4119c4:	orr	w10, w10, w12
  4119c8:	b.cc	4119ac <__fxstatat@plt+0xee0c>  // b.lo, b.ul, b.last
  4119cc:	b	4119f8 <__fxstatat@plt+0xee58>
  4119d0:	mov	w10, wzr
  4119d4:	mov	w11, #0xfffffffb            	// #-5
  4119d8:	umulh	x12, x9, x22
  4119dc:	cmp	xzr, x12
  4119e0:	mul	x13, x22, x9
  4119e4:	cset	w12, ne  // ne = any
  4119e8:	csinv	x22, x13, xzr, eq  // eq = none
  4119ec:	adds	w11, w11, #0x1
  4119f0:	orr	w10, w10, w12
  4119f4:	b.cc	4119d8 <__fxstatat@plt+0xee38>  // b.lo, b.ul, b.last
  4119f8:	add	x9, x25, x8
  4119fc:	str	x9, [x21]
  411a00:	ldrb	w8, [x25, x8]
  411a04:	orr	w9, w10, w20
  411a08:	orr	w10, w9, #0x2
  411a0c:	cmp	w8, #0x0
  411a10:	csel	w20, w9, w10, eq  // eq = none
  411a14:	str	x22, [x19]
  411a18:	mov	w0, w20
  411a1c:	ldp	x20, x19, [sp, #64]
  411a20:	ldp	x22, x21, [sp, #48]
  411a24:	ldp	x24, x23, [sp, #32]
  411a28:	ldr	x25, [sp, #16]
  411a2c:	ldp	x29, x30, [sp], #80
  411a30:	ret
  411a34:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  411a38:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  411a3c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  411a40:	add	x0, x0, #0xdaa
  411a44:	add	x1, x1, #0xdd0
  411a48:	add	x3, x3, #0xde0
  411a4c:	mov	w2, #0x54                  	// #84
  411a50:	bl	402b20 <__assert_fail@plt>
  411a54:	stp	x29, x30, [sp, #-16]!
  411a58:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  411a5c:	ldr	w5, [x8, #1344]
  411a60:	mov	x29, sp
  411a64:	bl	411a6c <__fxstatat@plt+0xeecc>
  411a68:	bl	4028c0 <abort@plt>
  411a6c:	sub	sp, sp, #0x40
  411a70:	sub	w9, w0, #0x1
  411a74:	cmp	w9, #0x4
  411a78:	stp	x29, x30, [sp, #16]
  411a7c:	stp	x22, x21, [sp, #32]
  411a80:	stp	x20, x19, [sp, #48]
  411a84:	add	x29, sp, #0x10
  411a88:	b.cs	411b14 <__fxstatat@plt+0xef74>  // b.hs, b.nlast
  411a8c:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  411a90:	add	x10, x10, #0xe98
  411a94:	mov	w8, w1
  411a98:	ldr	x1, [x10, w9, sxtw #3]
  411a9c:	mov	w20, w5
  411aa0:	mov	x19, x4
  411aa4:	sxtw	x9, w8
  411aa8:	tbnz	w8, #31, 411ac0 <__fxstatat@plt+0xef20>
  411aac:	lsl	x8, x9, #5
  411ab0:	ldr	x21, [x3, x8]
  411ab4:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x5d48>
  411ab8:	add	x22, x22, #0xe31
  411abc:	b	411ad8 <__fxstatat@plt+0xef38>
  411ac0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  411ac4:	add	x8, x8, #0xe31
  411ac8:	sub	x21, x29, #0x4
  411acc:	sturb	w2, [x29, #-4]
  411ad0:	sub	x22, x8, x9
  411ad4:	sturb	wzr, [x29, #-3]
  411ad8:	mov	w2, #0x5                   	// #5
  411adc:	mov	x0, xzr
  411ae0:	bl	402ac0 <dcgettext@plt>
  411ae4:	mov	x2, x0
  411ae8:	mov	w0, w20
  411aec:	mov	w1, wzr
  411af0:	mov	x3, x22
  411af4:	mov	x4, x21
  411af8:	mov	x5, x19
  411afc:	bl	4025b0 <error@plt>
  411b00:	ldp	x20, x19, [sp, #48]
  411b04:	ldp	x22, x21, [sp, #32]
  411b08:	ldp	x29, x30, [sp, #16]
  411b0c:	add	sp, sp, #0x40
  411b10:	ret
  411b14:	bl	4028c0 <abort@plt>
  411b18:	stp	x29, x30, [sp, #-80]!
  411b1c:	cmp	w2, #0x25
  411b20:	str	x25, [sp, #16]
  411b24:	stp	x24, x23, [sp, #32]
  411b28:	stp	x22, x21, [sp, #48]
  411b2c:	stp	x20, x19, [sp, #64]
  411b30:	mov	x29, sp
  411b34:	b.cs	411ec4 <__fxstatat@plt+0xf324>  // b.hs, b.nlast
  411b38:	mov	x23, x4
  411b3c:	mov	x19, x3
  411b40:	mov	w22, w2
  411b44:	mov	x21, x1
  411b48:	mov	x20, x0
  411b4c:	bl	402b30 <__errno_location@plt>
  411b50:	mov	x24, x0
  411b54:	str	wzr, [x0]
  411b58:	bl	402970 <__ctype_b_loc@plt>
  411b5c:	ldr	x8, [x0]
  411b60:	mov	x10, x20
  411b64:	ldrb	w9, [x10], #1
  411b68:	ldrh	w11, [x8, x9, lsl #1]
  411b6c:	tbnz	w11, #13, 411b64 <__fxstatat@plt+0xefc4>
  411b70:	cmp	x21, #0x0
  411b74:	add	x8, x29, #0x18
  411b78:	csel	x21, x8, x21, eq  // eq = none
  411b7c:	cmp	w9, #0x2d
  411b80:	b.ne	411b8c <__fxstatat@plt+0xefec>  // b.any
  411b84:	mov	w20, #0x4                   	// #4
  411b88:	b	411ea8 <__fxstatat@plt+0xf308>
  411b8c:	mov	x0, x20
  411b90:	mov	x1, x21
  411b94:	mov	w2, w22
  411b98:	bl	4028b0 <strtoumax@plt>
  411b9c:	ldr	x25, [x21]
  411ba0:	cmp	x25, x20
  411ba4:	b.eq	411bc8 <__fxstatat@plt+0xf028>  // b.none
  411ba8:	ldr	w20, [x24]
  411bac:	mov	x22, x0
  411bb0:	cbz	w20, 411bc0 <__fxstatat@plt+0xf020>
  411bb4:	cmp	w20, #0x22
  411bb8:	b.ne	411b84 <__fxstatat@plt+0xefe4>  // b.any
  411bbc:	mov	w20, #0x1                   	// #1
  411bc0:	cbnz	x23, 411be8 <__fxstatat@plt+0xf048>
  411bc4:	b	411ea4 <__fxstatat@plt+0xf304>
  411bc8:	cbz	x23, 411b84 <__fxstatat@plt+0xefe4>
  411bcc:	ldrb	w1, [x20]
  411bd0:	cbz	w1, 411b84 <__fxstatat@plt+0xefe4>
  411bd4:	mov	x0, x23
  411bd8:	bl	4029c0 <strchr@plt>
  411bdc:	cbz	x0, 411b84 <__fxstatat@plt+0xefe4>
  411be0:	mov	w20, wzr
  411be4:	mov	w22, #0x1                   	// #1
  411be8:	ldrb	w24, [x25]
  411bec:	cbz	w24, 411ea4 <__fxstatat@plt+0xf304>
  411bf0:	mov	x0, x23
  411bf4:	mov	w1, w24
  411bf8:	bl	4029c0 <strchr@plt>
  411bfc:	cbz	x0, 411e28 <__fxstatat@plt+0xf288>
  411c00:	sub	w10, w24, #0x45
  411c04:	mov	w8, #0x1                   	// #1
  411c08:	cmp	w10, #0x2f
  411c0c:	mov	w9, #0x400                 	// #1024
  411c10:	b.hi	411c84 <__fxstatat@plt+0xf0e4>  // b.pmore
  411c14:	mov	w11, #0x1                   	// #1
  411c18:	lsl	x10, x11, x10
  411c1c:	mov	x11, #0x8945                	// #35141
  411c20:	movk	x11, #0x30, lsl #16
  411c24:	movk	x11, #0x8144, lsl #32
  411c28:	tst	x10, x11
  411c2c:	b.eq	411c84 <__fxstatat@plt+0xf0e4>  // b.none
  411c30:	mov	w1, #0x30                  	// #48
  411c34:	mov	x0, x23
  411c38:	bl	4029c0 <strchr@plt>
  411c3c:	cbz	x0, 411c70 <__fxstatat@plt+0xf0d0>
  411c40:	ldrb	w8, [x25, #1]
  411c44:	cmp	w8, #0x42
  411c48:	b.eq	411c7c <__fxstatat@plt+0xf0dc>  // b.none
  411c4c:	cmp	w8, #0x44
  411c50:	b.eq	411c7c <__fxstatat@plt+0xf0dc>  // b.none
  411c54:	cmp	w8, #0x69
  411c58:	b.ne	411c70 <__fxstatat@plt+0xf0d0>  // b.any
  411c5c:	ldrb	w8, [x25, #2]
  411c60:	mov	w9, #0x3                   	// #3
  411c64:	cmp	w8, #0x42
  411c68:	csinc	x8, x9, xzr, eq  // eq = none
  411c6c:	b	411c74 <__fxstatat@plt+0xf0d4>
  411c70:	mov	w8, #0x1                   	// #1
  411c74:	mov	w9, #0x400                 	// #1024
  411c78:	b	411c84 <__fxstatat@plt+0xf0e4>
  411c7c:	mov	w8, #0x2                   	// #2
  411c80:	mov	w9, #0x3e8                 	// #1000
  411c84:	cmp	w24, #0x59
  411c88:	b.gt	411cbc <__fxstatat@plt+0xf11c>
  411c8c:	sub	w10, w24, #0x42
  411c90:	cmp	w10, #0xe
  411c94:	b.hi	411cf8 <__fxstatat@plt+0xf158>  // b.pmore
  411c98:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x5d48>
  411c9c:	add	x11, x11, #0xeb8
  411ca0:	adr	x12, 411cb0 <__fxstatat@plt+0xf110>
  411ca4:	ldrb	w13, [x11, x10]
  411ca8:	add	x12, x12, x13, lsl #2
  411cac:	br	x12
  411cb0:	cmp	xzr, x22, lsr #54
  411cb4:	lsl	x9, x22, #10
  411cb8:	b	411d90 <__fxstatat@plt+0xf1f0>
  411cbc:	cmp	w24, #0x73
  411cc0:	b.gt	411d34 <__fxstatat@plt+0xf194>
  411cc4:	sub	w10, w24, #0x62
  411cc8:	cmp	w10, #0xb
  411ccc:	b.hi	411df4 <__fxstatat@plt+0xf254>  // b.pmore
  411cd0:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x5d48>
  411cd4:	add	x11, x11, #0xec7
  411cd8:	adr	x12, 411cec <__fxstatat@plt+0xf14c>
  411cdc:	ldrb	w13, [x11, x10]
  411ce0:	add	x12, x12, x13, lsl #2
  411ce4:	mov	w10, wzr
  411ce8:	br	x12
  411cec:	cmp	xzr, x22, lsr #55
  411cf0:	lsl	x9, x22, #9
  411cf4:	b	411d90 <__fxstatat@plt+0xf1f0>
  411cf8:	cmp	w24, #0x54
  411cfc:	b.eq	411dc8 <__fxstatat@plt+0xf228>  // b.none
  411d00:	cmp	w24, #0x59
  411d04:	b.ne	411e28 <__fxstatat@plt+0xf288>  // b.any
  411d08:	mov	w10, wzr
  411d0c:	mov	w11, #0xfffffff8            	// #-8
  411d10:	umulh	x12, x9, x22
  411d14:	cmp	xzr, x12
  411d18:	mul	x13, x22, x9
  411d1c:	cset	w12, ne  // ne = any
  411d20:	csinv	x22, x13, xzr, eq  // eq = none
  411d24:	adds	w11, w11, #0x1
  411d28:	orr	w10, w10, w12
  411d2c:	b.cc	411d10 <__fxstatat@plt+0xf170>  // b.lo, b.ul, b.last
  411d30:	b	411e88 <__fxstatat@plt+0xf2e8>
  411d34:	cmp	w24, #0x74
  411d38:	b.eq	411dc8 <__fxstatat@plt+0xf228>  // b.none
  411d3c:	cmp	w24, #0x77
  411d40:	b.ne	411e28 <__fxstatat@plt+0xf288>  // b.any
  411d44:	cmn	x22, x22
  411d48:	lsl	x9, x22, #1
  411d4c:	cset	w10, cs  // cs = hs, nlast
  411d50:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  411d54:	b	411e88 <__fxstatat@plt+0xf2e8>
  411d58:	mov	w10, wzr
  411d5c:	mov	w11, #0xfffffffd            	// #-3
  411d60:	umulh	x12, x9, x22
  411d64:	cmp	xzr, x12
  411d68:	mul	x13, x22, x9
  411d6c:	cset	w12, ne  // ne = any
  411d70:	csinv	x22, x13, xzr, eq  // eq = none
  411d74:	adds	w11, w11, #0x1
  411d78:	orr	w10, w10, w12
  411d7c:	b.cc	411d60 <__fxstatat@plt+0xf1c0>  // b.lo, b.ul, b.last
  411d80:	b	411e88 <__fxstatat@plt+0xf2e8>
  411d84:	umulh	x10, x9, x22
  411d88:	mul	x9, x22, x9
  411d8c:	cmp	xzr, x10
  411d90:	cset	w10, ne  // ne = any
  411d94:	csinv	x22, x9, xzr, eq  // eq = none
  411d98:	b	411e88 <__fxstatat@plt+0xf2e8>
  411d9c:	mov	w10, wzr
  411da0:	mov	w11, #0xfffffffe            	// #-2
  411da4:	umulh	x12, x9, x22
  411da8:	cmp	xzr, x12
  411dac:	mul	x13, x22, x9
  411db0:	cset	w12, ne  // ne = any
  411db4:	csinv	x22, x13, xzr, eq  // eq = none
  411db8:	adds	w11, w11, #0x1
  411dbc:	orr	w10, w10, w12
  411dc0:	b.cc	411da4 <__fxstatat@plt+0xf204>  // b.lo, b.ul, b.last
  411dc4:	b	411e88 <__fxstatat@plt+0xf2e8>
  411dc8:	mov	w10, wzr
  411dcc:	mov	w11, #0xfffffffc            	// #-4
  411dd0:	umulh	x12, x9, x22
  411dd4:	cmp	xzr, x12
  411dd8:	mul	x13, x22, x9
  411ddc:	cset	w12, ne  // ne = any
  411de0:	csinv	x22, x13, xzr, eq  // eq = none
  411de4:	adds	w11, w11, #0x1
  411de8:	orr	w10, w10, w12
  411dec:	b.cc	411dd0 <__fxstatat@plt+0xf230>  // b.lo, b.ul, b.last
  411df0:	b	411e88 <__fxstatat@plt+0xf2e8>
  411df4:	cmp	w24, #0x5a
  411df8:	b.ne	411e28 <__fxstatat@plt+0xf288>  // b.any
  411dfc:	mov	w10, wzr
  411e00:	mov	w11, #0xfffffff9            	// #-7
  411e04:	umulh	x12, x9, x22
  411e08:	cmp	xzr, x12
  411e0c:	mul	x13, x22, x9
  411e10:	cset	w12, ne  // ne = any
  411e14:	csinv	x22, x13, xzr, eq  // eq = none
  411e18:	adds	w11, w11, #0x1
  411e1c:	orr	w10, w10, w12
  411e20:	b.cc	411e04 <__fxstatat@plt+0xf264>  // b.lo, b.ul, b.last
  411e24:	b	411e88 <__fxstatat@plt+0xf2e8>
  411e28:	str	x22, [x19]
  411e2c:	orr	w20, w20, #0x2
  411e30:	b	411ea8 <__fxstatat@plt+0xf308>
  411e34:	mov	w10, wzr
  411e38:	mov	w11, #0xfffffffa            	// #-6
  411e3c:	umulh	x12, x9, x22
  411e40:	cmp	xzr, x12
  411e44:	mul	x13, x22, x9
  411e48:	cset	w12, ne  // ne = any
  411e4c:	csinv	x22, x13, xzr, eq  // eq = none
  411e50:	adds	w11, w11, #0x1
  411e54:	orr	w10, w10, w12
  411e58:	b.cc	411e3c <__fxstatat@plt+0xf29c>  // b.lo, b.ul, b.last
  411e5c:	b	411e88 <__fxstatat@plt+0xf2e8>
  411e60:	mov	w10, wzr
  411e64:	mov	w11, #0xfffffffb            	// #-5
  411e68:	umulh	x12, x9, x22
  411e6c:	cmp	xzr, x12
  411e70:	mul	x13, x22, x9
  411e74:	cset	w12, ne  // ne = any
  411e78:	csinv	x22, x13, xzr, eq  // eq = none
  411e7c:	adds	w11, w11, #0x1
  411e80:	orr	w10, w10, w12
  411e84:	b.cc	411e68 <__fxstatat@plt+0xf2c8>  // b.lo, b.ul, b.last
  411e88:	add	x9, x25, x8
  411e8c:	str	x9, [x21]
  411e90:	ldrb	w8, [x25, x8]
  411e94:	orr	w9, w10, w20
  411e98:	orr	w10, w9, #0x2
  411e9c:	cmp	w8, #0x0
  411ea0:	csel	w20, w9, w10, eq  // eq = none
  411ea4:	str	x22, [x19]
  411ea8:	mov	w0, w20
  411eac:	ldp	x20, x19, [sp, #64]
  411eb0:	ldp	x22, x21, [sp, #48]
  411eb4:	ldp	x24, x23, [sp, #32]
  411eb8:	ldr	x25, [sp, #16]
  411ebc:	ldp	x29, x30, [sp], #80
  411ec0:	ret
  411ec4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x5d48>
  411ec8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  411ecc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x5d48>
  411ed0:	add	x0, x0, #0xdaa
  411ed4:	add	x1, x1, #0xdd0
  411ed8:	add	x3, x3, #0xed3
  411edc:	mov	w2, #0x54                  	// #84
  411ee0:	bl	402b20 <__assert_fail@plt>
  411ee4:	mov	x8, x1
  411ee8:	mov	w1, #0x1                   	// #1
  411eec:	mov	w9, #0x1                   	// #1
  411ef0:	cbz	x0, 411f28 <__fxstatat@plt+0xf388>
  411ef4:	cbz	x8, 411f28 <__fxstatat@plt+0xf388>
  411ef8:	umulh	x10, x8, x0
  411efc:	mov	x1, x8
  411f00:	mov	x9, x0
  411f04:	cbz	x10, 411f28 <__fxstatat@plt+0xf388>
  411f08:	stp	x29, x30, [sp, #-16]!
  411f0c:	mov	x29, sp
  411f10:	bl	402b30 <__errno_location@plt>
  411f14:	mov	w8, #0xc                   	// #12
  411f18:	str	w8, [x0]
  411f1c:	mov	x0, xzr
  411f20:	ldp	x29, x30, [sp], #16
  411f24:	ret
  411f28:	mov	x0, x9
  411f2c:	b	402800 <calloc@plt>
  411f30:	sub	sp, sp, #0x40
  411f34:	stp	x29, x30, [sp, #16]
  411f38:	add	x29, sp, #0x10
  411f3c:	cmp	x0, #0x0
  411f40:	sub	x8, x29, #0x4
  411f44:	stp	x20, x19, [sp, #48]
  411f48:	csel	x20, x8, x0, eq  // eq = none
  411f4c:	mov	x0, x20
  411f50:	stp	x22, x21, [sp, #32]
  411f54:	mov	x22, x2
  411f58:	mov	x19, x1
  411f5c:	bl	4024c0 <mbrtowc@plt>
  411f60:	mov	x21, x0
  411f64:	cbz	x22, 411f88 <__fxstatat@plt+0xf3e8>
  411f68:	cmn	x21, #0x2
  411f6c:	b.cc	411f88 <__fxstatat@plt+0xf3e8>  // b.lo, b.ul, b.last
  411f70:	mov	w0, wzr
  411f74:	bl	40bb08 <__fxstatat@plt+0x8f68>
  411f78:	tbnz	w0, #0, 411f88 <__fxstatat@plt+0xf3e8>
  411f7c:	ldrb	w8, [x19]
  411f80:	mov	w21, #0x1                   	// #1
  411f84:	str	w8, [x20]
  411f88:	mov	x0, x21
  411f8c:	ldp	x20, x19, [sp, #48]
  411f90:	ldp	x22, x21, [sp, #32]
  411f94:	ldp	x29, x30, [sp, #16]
  411f98:	add	sp, sp, #0x40
  411f9c:	ret

0000000000411fa0 <_obstack_begin@@Base>:
  411fa0:	stp	x29, x30, [sp, #-16]!
  411fa4:	ldrb	w8, [x0, #80]
  411fa8:	mov	x29, sp
  411fac:	stp	x3, x4, [x0, #56]
  411fb0:	and	w8, w8, #0xfe
  411fb4:	strb	w8, [x0, #80]
  411fb8:	bl	411fc8 <_obstack_begin@@Base+0x28>
  411fbc:	mov	w0, #0x1                   	// #1
  411fc0:	ldp	x29, x30, [sp], #16
  411fc4:	ret
  411fc8:	stp	x29, x30, [sp, #-48]!
  411fcc:	stp	x20, x19, [sp, #32]
  411fd0:	ldrb	w10, [x0, #80]
  411fd4:	cmp	x2, #0x0
  411fd8:	mov	w8, #0x10                  	// #16
  411fdc:	mov	w9, #0xfe0                 	// #4064
  411fe0:	csel	x20, x8, x2, eq  // eq = none
  411fe4:	cmp	x1, #0x0
  411fe8:	str	x21, [sp, #16]
  411fec:	mov	x19, x0
  411ff0:	csel	x1, x9, x1, eq  // eq = none
  411ff4:	sub	x21, x20, #0x1
  411ff8:	mov	x29, sp
  411ffc:	str	x1, [x0]
  412000:	str	x21, [x0, #48]
  412004:	tbnz	w10, #0, 412018 <_obstack_begin@@Base+0x78>
  412008:	ldr	x8, [x19, #56]
  41200c:	mov	x0, x1
  412010:	blr	x8
  412014:	b	412024 <_obstack_begin@@Base+0x84>
  412018:	ldr	x8, [x19, #56]
  41201c:	ldr	x0, [x19, #72]
  412020:	blr	x8
  412024:	str	x0, [x19, #8]
  412028:	cbz	x0, 412070 <_obstack_begin@@Base+0xd0>
  41202c:	ldr	x10, [x19]
  412030:	add	x8, x0, x21
  412034:	neg	x9, x20
  412038:	add	x8, x8, #0x10
  41203c:	and	x8, x8, x9
  412040:	stp	x8, x8, [x19, #16]
  412044:	add	x8, x0, x10
  412048:	str	x8, [x0]
  41204c:	str	x8, [x19, #32]
  412050:	str	xzr, [x0, #8]
  412054:	ldrb	w8, [x19, #80]
  412058:	ldr	x21, [sp, #16]
  41205c:	and	w8, w8, #0xfffffff9
  412060:	strb	w8, [x19, #80]
  412064:	ldp	x20, x19, [sp, #32]
  412068:	ldp	x29, x30, [sp], #48
  41206c:	ret
  412070:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  412074:	ldr	x8, [x8, #1440]
  412078:	blr	x8

000000000041207c <_obstack_begin_1@@Base>:
  41207c:	stp	x29, x30, [sp, #-16]!
  412080:	ldrb	w8, [x0, #80]
  412084:	mov	x29, sp
  412088:	stp	x3, x4, [x0, #56]
  41208c:	str	x5, [x0, #72]
  412090:	orr	w8, w8, #0x1
  412094:	strb	w8, [x0, #80]
  412098:	bl	411fc8 <_obstack_begin@@Base+0x28>
  41209c:	mov	w0, #0x1                   	// #1
  4120a0:	ldp	x29, x30, [sp], #16
  4120a4:	ret

00000000004120a8 <_obstack_newchunk@@Base>:
  4120a8:	stp	x29, x30, [sp, #-64]!
  4120ac:	str	x23, [sp, #16]
  4120b0:	stp	x22, x21, [sp, #32]
  4120b4:	stp	x20, x19, [sp, #48]
  4120b8:	ldp	x9, x8, [x0, #16]
  4120bc:	ldr	x10, [x0, #48]
  4120c0:	ldr	x11, [x0]
  4120c4:	mov	x29, sp
  4120c8:	sub	x20, x8, x9
  4120cc:	adds	x8, x20, x1
  4120d0:	lsr	x9, x20, #3
  4120d4:	cset	w12, cs  // cs = hs, nlast
  4120d8:	adds	x10, x8, x10
  4120dc:	add	x9, x9, #0x64
  4120e0:	cset	w8, cs  // cs = hs, nlast
  4120e4:	adds	x9, x9, x10
  4120e8:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4120ec:	cmp	x9, x11
  4120f0:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  4120f4:	tbnz	w12, #0, 4121e0 <_obstack_newchunk@@Base+0x138>
  4120f8:	tbnz	w8, #0, 4121e0 <_obstack_newchunk@@Base+0x138>
  4120fc:	ldrb	w8, [x0, #80]
  412100:	ldr	x21, [x0, #8]
  412104:	mov	x19, x0
  412108:	tbnz	w8, #0, 41211c <_obstack_newchunk@@Base+0x74>
  41210c:	ldr	x8, [x19, #56]
  412110:	mov	x0, x23
  412114:	blr	x8
  412118:	b	41212c <_obstack_newchunk@@Base+0x84>
  41211c:	ldr	x8, [x19, #56]
  412120:	ldr	x0, [x19, #72]
  412124:	mov	x1, x23
  412128:	blr	x8
  41212c:	mov	x22, x0
  412130:	cbz	x0, 4121e0 <_obstack_newchunk@@Base+0x138>
  412134:	add	x8, x22, x23
  412138:	str	x22, [x19, #8]
  41213c:	str	x21, [x22, #8]
  412140:	str	x8, [x19, #32]
  412144:	str	x8, [x22]
  412148:	ldr	x8, [x19, #48]
  41214c:	ldr	x1, [x19, #16]
  412150:	mov	x2, x20
  412154:	add	x9, x22, x8
  412158:	add	x9, x9, #0x10
  41215c:	bic	x23, x9, x8
  412160:	mov	x0, x23
  412164:	bl	4024d0 <memcpy@plt>
  412168:	ldrb	w8, [x19, #80]
  41216c:	tbnz	w8, #1, 4121b8 <_obstack_newchunk@@Base+0x110>
  412170:	ldr	x8, [x19, #48]
  412174:	ldr	x9, [x19, #16]
  412178:	add	x10, x21, x8
  41217c:	add	x10, x10, #0x10
  412180:	bic	x8, x10, x8
  412184:	cmp	x9, x8
  412188:	b.ne	4121b8 <_obstack_newchunk@@Base+0x110>  // b.any
  41218c:	ldr	x8, [x21, #8]
  412190:	str	x8, [x22, #8]
  412194:	ldrb	w8, [x19, #80]
  412198:	tbnz	w8, #0, 4121ac <_obstack_newchunk@@Base+0x104>
  41219c:	ldr	x8, [x19, #64]
  4121a0:	mov	x0, x21
  4121a4:	blr	x8
  4121a8:	b	4121b8 <_obstack_newchunk@@Base+0x110>
  4121ac:	ldp	x8, x0, [x19, #64]
  4121b0:	mov	x1, x21
  4121b4:	blr	x8
  4121b8:	ldrb	w8, [x19, #80]
  4121bc:	add	x9, x23, x20
  4121c0:	stp	x23, x9, [x19, #16]
  4121c4:	ldr	x23, [sp, #16]
  4121c8:	and	w8, w8, #0xfffffffd
  4121cc:	strb	w8, [x19, #80]
  4121d0:	ldp	x20, x19, [sp, #48]
  4121d4:	ldp	x22, x21, [sp, #32]
  4121d8:	ldp	x29, x30, [sp], #64
  4121dc:	ret
  4121e0:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4121e4:	ldr	x8, [x8, #1440]
  4121e8:	blr	x8

00000000004121ec <_obstack_allocated_p@@Base>:
  4121ec:	ldr	x8, [x0, #8]
  4121f0:	cbz	x8, 412210 <_obstack_allocated_p@@Base+0x24>
  4121f4:	cmp	x8, x1
  4121f8:	b.cs	412208 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  4121fc:	ldr	x9, [x8]
  412200:	cmp	x9, x1
  412204:	b.cs	412218 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  412208:	ldr	x8, [x8, #8]
  41220c:	cbnz	x8, 4121f4 <_obstack_allocated_p@@Base+0x8>
  412210:	mov	w0, wzr
  412214:	ret
  412218:	mov	w0, #0x1                   	// #1
  41221c:	ret

0000000000412220 <_obstack_free@@Base>:
  412220:	stp	x29, x30, [sp, #-48]!
  412224:	stp	x20, x19, [sp, #32]
  412228:	ldr	x8, [x0, #8]
  41222c:	mov	x20, x1
  412230:	str	x21, [sp, #16]
  412234:	mov	x29, sp
  412238:	cbz	x8, 412290 <_obstack_free@@Base+0x70>
  41223c:	mov	x19, x0
  412240:	cmp	x8, x20
  412244:	b.cs	412254 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  412248:	ldr	x9, [x8]
  41224c:	cmp	x9, x20
  412250:	b.cs	412298 <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  412254:	ldrb	w9, [x19, #80]
  412258:	ldr	x21, [x8, #8]
  41225c:	tbnz	w9, #0, 412270 <_obstack_free@@Base+0x50>
  412260:	ldr	x9, [x19, #64]
  412264:	mov	x0, x8
  412268:	blr	x9
  41226c:	b	41227c <_obstack_free@@Base+0x5c>
  412270:	ldp	x9, x0, [x19, #64]
  412274:	mov	x1, x8
  412278:	blr	x9
  41227c:	ldrb	w8, [x19, #80]
  412280:	orr	w8, w8, #0x2
  412284:	strb	w8, [x19, #80]
  412288:	mov	x8, x21
  41228c:	cbnz	x21, 412240 <_obstack_free@@Base+0x20>
  412290:	cbz	x20, 4122a8 <_obstack_free@@Base+0x88>
  412294:	bl	4028c0 <abort@plt>
  412298:	stp	x20, x20, [x19, #16]
  41229c:	ldr	x9, [x8]
  4122a0:	str	x8, [x19, #8]
  4122a4:	str	x9, [x19, #32]
  4122a8:	ldp	x20, x19, [sp, #32]
  4122ac:	ldr	x21, [sp, #16]
  4122b0:	ldp	x29, x30, [sp], #48
  4122b4:	ret

00000000004122b8 <_obstack_memory_used@@Base>:
  4122b8:	ldr	x8, [x0, #8]
  4122bc:	cbz	x8, 4122d8 <_obstack_memory_used@@Base+0x20>
  4122c0:	mov	x0, xzr
  4122c4:	sub	x10, x0, x8
  4122c8:	ldp	x9, x8, [x8]
  4122cc:	add	x0, x10, x9
  4122d0:	cbnz	x8, 4122c4 <_obstack_memory_used@@Base+0xc>
  4122d4:	ret
  4122d8:	mov	x0, xzr
  4122dc:	ret
  4122e0:	stp	x29, x30, [sp, #-32]!
  4122e4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  4122e8:	str	x19, [sp, #16]
  4122ec:	ldr	x19, [x8, #1464]
  4122f0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x5d48>
  4122f4:	add	x1, x1, #0xd7e
  4122f8:	mov	w2, #0x5                   	// #5
  4122fc:	mov	x0, xzr
  412300:	mov	x29, sp
  412304:	bl	402ac0 <dcgettext@plt>
  412308:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x5d48>
  41230c:	mov	x3, x0
  412310:	add	x2, x2, #0xa79
  412314:	mov	w1, #0x1                   	// #1
  412318:	mov	x0, x19
  41231c:	bl	402930 <__fprintf_chk@plt>
  412320:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x17d48>
  412324:	ldr	w0, [x8, #1344]
  412328:	bl	402580 <exit@plt>
  41232c:	stp	x29, x30, [sp, #-48]!
  412330:	stp	x20, x19, [sp, #32]
  412334:	mov	x19, x0
  412338:	stp	x22, x21, [sp, #16]
  41233c:	mov	x29, sp
  412340:	cbz	x0, 412364 <_obstack_memory_used@@Base+0xac>
  412344:	mov	x0, x19
  412348:	bl	402540 <strlen@plt>
  41234c:	add	x20, x0, #0x1
  412350:	cmp	x20, #0x76
  412354:	b.ls	412368 <_obstack_memory_used@@Base+0xb0>  // b.plast
  412358:	add	x8, x0, #0x12
  41235c:	and	x0, x8, #0xfffffffffffffff8
  412360:	b	41236c <_obstack_memory_used@@Base+0xb4>
  412364:	mov	x20, xzr
  412368:	mov	w0, #0x80                  	// #128
  41236c:	bl	402730 <malloc@plt>
  412370:	mov	x21, x0
  412374:	cbz	x0, 4123a8 <_obstack_memory_used@@Base+0xf0>
  412378:	cmp	x19, #0x0
  41237c:	mov	x22, x21
  412380:	cset	w8, ne  // ne = any
  412384:	str	xzr, [x21]
  412388:	strb	w8, [x21, #8]
  41238c:	strb	wzr, [x22, #9]!
  412390:	cbz	x19, 4123a8 <_obstack_memory_used@@Base+0xf0>
  412394:	mov	x0, x22
  412398:	mov	x1, x19
  41239c:	mov	x2, x20
  4123a0:	bl	4024d0 <memcpy@plt>
  4123a4:	strb	wzr, [x22, x20]
  4123a8:	mov	x0, x21
  4123ac:	ldp	x20, x19, [sp, #32]
  4123b0:	ldp	x22, x21, [sp, #16]
  4123b4:	ldp	x29, x30, [sp], #48
  4123b8:	ret
  4123bc:	stp	x29, x30, [sp, #-32]!
  4123c0:	cmp	x0, #0x2
  4123c4:	str	x19, [sp, #16]
  4123c8:	mov	x29, sp
  4123cc:	b.cc	4123e0 <_obstack_memory_used@@Base+0x128>  // b.lo, b.ul, b.last
  4123d0:	ldr	x19, [x0]
  4123d4:	bl	402990 <free@plt>
  4123d8:	mov	x0, x19
  4123dc:	cbnz	x19, 4123d0 <_obstack_memory_used@@Base+0x118>
  4123e0:	ldr	x19, [sp, #16]
  4123e4:	ldp	x29, x30, [sp], #32
  4123e8:	ret
  4123ec:	stp	x29, x30, [sp, #-48]!
  4123f0:	stp	x22, x21, [sp, #16]
  4123f4:	stp	x20, x19, [sp, #32]
  4123f8:	mov	x19, x2
  4123fc:	mov	x22, x1
  412400:	mov	x29, sp
  412404:	cbz	x0, 41243c <_obstack_memory_used@@Base+0x184>
  412408:	mov	x21, x0
  41240c:	bl	41247c <_obstack_memory_used@@Base+0x1c4>
  412410:	cbz	x0, 41246c <_obstack_memory_used@@Base+0x1b4>
  412414:	mov	x20, x0
  412418:	mov	x0, x22
  41241c:	mov	x1, x19
  412420:	bl	4025d0 <localtime_r@plt>
  412424:	cbz	x0, 412454 <_obstack_memory_used@@Base+0x19c>
  412428:	mov	x0, x21
  41242c:	mov	x1, x19
  412430:	bl	412528 <_obstack_memory_used@@Base+0x270>
  412434:	eor	w21, w0, #0x1
  412438:	b	412458 <_obstack_memory_used@@Base+0x1a0>
  41243c:	mov	x0, x22
  412440:	mov	x1, x19
  412444:	ldp	x20, x19, [sp, #32]
  412448:	ldp	x22, x21, [sp, #16]
  41244c:	ldp	x29, x30, [sp], #48
  412450:	b	4027e0 <gmtime_r@plt>
  412454:	mov	w21, #0x1                   	// #1
  412458:	mov	x0, x20
  41245c:	bl	412660 <_obstack_memory_used@@Base+0x3a8>
  412460:	orn	w8, w21, w0
  412464:	tst	w8, #0x1
  412468:	csel	x0, xzr, x19, ne  // ne = any
  41246c:	ldp	x20, x19, [sp, #32]
  412470:	ldp	x22, x21, [sp, #16]
  412474:	ldp	x29, x30, [sp], #48
  412478:	ret
  41247c:	stp	x29, x30, [sp, #-48]!
  412480:	stp	x20, x19, [sp, #32]
  412484:	mov	x20, x0
  412488:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  41248c:	add	x0, x0, #0xf3a
  412490:	stp	x22, x21, [sp, #16]
  412494:	mov	x29, sp
  412498:	bl	402b40 <getenv@plt>
  41249c:	ldrb	w8, [x20, #8]
  4124a0:	mov	x19, x0
  4124a4:	cbz	x0, 4124c4 <_obstack_memory_used@@Base+0x20c>
  4124a8:	cbz	w8, 4124c8 <_obstack_memory_used@@Base+0x210>
  4124ac:	add	x0, x20, #0x9
  4124b0:	mov	x1, x19
  4124b4:	bl	402950 <strcmp@plt>
  4124b8:	cbnz	w0, 4124c8 <_obstack_memory_used@@Base+0x210>
  4124bc:	mov	w19, #0x1                   	// #1
  4124c0:	b	412514 <_obstack_memory_used@@Base+0x25c>
  4124c4:	cbz	w8, 4124bc <_obstack_memory_used@@Base+0x204>
  4124c8:	mov	x0, x19
  4124cc:	bl	41232c <_obstack_memory_used@@Base+0x74>
  4124d0:	mov	x19, x0
  4124d4:	cbz	x0, 412514 <_obstack_memory_used@@Base+0x25c>
  4124d8:	mov	x0, x20
  4124dc:	bl	4127fc <_obstack_memory_used@@Base+0x544>
  4124e0:	tbnz	w0, #0, 412514 <_obstack_memory_used@@Base+0x25c>
  4124e4:	bl	402b30 <__errno_location@plt>
  4124e8:	ldr	w21, [x0]
  4124ec:	mov	x20, x0
  4124f0:	cmp	x19, #0x2
  4124f4:	b.cc	41250c <_obstack_memory_used@@Base+0x254>  // b.lo, b.ul, b.last
  4124f8:	ldr	x22, [x19]
  4124fc:	mov	x0, x19
  412500:	bl	402990 <free@plt>
  412504:	mov	x19, x22
  412508:	cbnz	x22, 4124f8 <_obstack_memory_used@@Base+0x240>
  41250c:	mov	x19, xzr
  412510:	str	w21, [x20]
  412514:	mov	x0, x19
  412518:	ldp	x20, x19, [sp, #32]
  41251c:	ldp	x22, x21, [sp, #16]
  412520:	ldp	x29, x30, [sp], #48
  412524:	ret
  412528:	stp	x29, x30, [sp, #-64]!
  41252c:	stp	x24, x23, [sp, #16]
  412530:	stp	x22, x21, [sp, #32]
  412534:	stp	x20, x19, [sp, #48]
  412538:	ldr	x21, [x1, #48]
  41253c:	mov	x29, sp
  412540:	cbz	x21, 4125d0 <_obstack_memory_used@@Base+0x318>
  412544:	mov	x19, x1
  412548:	mov	x22, x0
  41254c:	cmp	x21, x1
  412550:	b.cc	412560 <_obstack_memory_used@@Base+0x2a8>  // b.lo, b.ul, b.last
  412554:	add	x8, x19, #0x38
  412558:	cmp	x21, x8
  41255c:	b.cc	4125d0 <_obstack_memory_used@@Base+0x318>  // b.lo, b.ul, b.last
  412560:	ldrb	w8, [x21]
  412564:	cbz	w8, 4125c4 <_obstack_memory_used@@Base+0x30c>
  412568:	add	x20, x22, #0x9
  41256c:	mov	x0, x20
  412570:	mov	x1, x21
  412574:	bl	402950 <strcmp@plt>
  412578:	cbz	w0, 4125cc <_obstack_memory_used@@Base+0x314>
  41257c:	ldrb	w8, [x20]
  412580:	cbnz	w8, 412598 <_obstack_memory_used@@Base+0x2e0>
  412584:	add	x24, x22, #0x9
  412588:	cmp	x20, x24
  41258c:	b.ne	4125ec <_obstack_memory_used@@Base+0x334>  // b.any
  412590:	ldrb	w8, [x22, #8]
  412594:	cbz	w8, 4125e8 <_obstack_memory_used@@Base+0x330>
  412598:	mov	x0, x20
  41259c:	bl	402540 <strlen@plt>
  4125a0:	add	x20, x0, x20
  4125a4:	ldrb	w8, [x20, #1]!
  4125a8:	cbnz	w8, 41256c <_obstack_memory_used@@Base+0x2b4>
  4125ac:	ldr	x8, [x22]
  4125b0:	add	x9, x8, #0x9
  4125b4:	cmp	x8, #0x0
  4125b8:	csel	x20, x20, x9, eq  // eq = none
  4125bc:	csel	x22, x22, x8, eq  // eq = none
  4125c0:	b	41256c <_obstack_memory_used@@Base+0x2b4>
  4125c4:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x5d48>
  4125c8:	add	x20, x20, #0x2c9
  4125cc:	str	x20, [x19, #48]
  4125d0:	mov	w0, #0x1                   	// #1
  4125d4:	ldp	x20, x19, [sp, #48]
  4125d8:	ldp	x22, x21, [sp, #32]
  4125dc:	ldp	x24, x23, [sp, #16]
  4125e0:	ldp	x29, x30, [sp], #64
  4125e4:	ret
  4125e8:	mov	x24, x20
  4125ec:	mov	x0, x21
  4125f0:	bl	402540 <strlen@plt>
  4125f4:	sub	x8, x20, x24
  4125f8:	add	x23, x0, #0x1
  4125fc:	mvn	x9, x8
  412600:	cmp	x23, x9
  412604:	b.ls	412620 <_obstack_memory_used@@Base+0x368>  // b.plast
  412608:	bl	402b30 <__errno_location@plt>
  41260c:	mov	x8, x0
  412610:	mov	w0, wzr
  412614:	mov	w9, #0xc                   	// #12
  412618:	str	w9, [x8]
  41261c:	b	4125d4 <_obstack_memory_used@@Base+0x31c>
  412620:	add	x8, x23, x8
  412624:	cmp	x8, #0x76
  412628:	b.hi	412644 <_obstack_memory_used@@Base+0x38c>  // b.pmore
  41262c:	mov	x0, x20
  412630:	mov	x1, x21
  412634:	mov	x2, x23
  412638:	bl	4024d0 <memcpy@plt>
  41263c:	strb	wzr, [x20, x23]
  412640:	b	4125cc <_obstack_memory_used@@Base+0x314>
  412644:	mov	x0, x21
  412648:	bl	41232c <_obstack_memory_used@@Base+0x74>
  41264c:	str	x0, [x22]
  412650:	cbz	x0, 4125d4 <_obstack_memory_used@@Base+0x31c>
  412654:	add	x20, x0, #0x9
  412658:	strb	wzr, [x0, #8]
  41265c:	b	4125cc <_obstack_memory_used@@Base+0x314>
  412660:	stp	x29, x30, [sp, #-64]!
  412664:	cmp	x0, #0x1
  412668:	str	x23, [sp, #16]
  41266c:	stp	x22, x21, [sp, #32]
  412670:	stp	x20, x19, [sp, #48]
  412674:	mov	x29, sp
  412678:	b.eq	4126c4 <_obstack_memory_used@@Base+0x40c>  // b.none
  41267c:	mov	x19, x0
  412680:	bl	402b30 <__errno_location@plt>
  412684:	ldr	w22, [x0]
  412688:	mov	x21, x0
  41268c:	mov	x0, x19
  412690:	bl	4127fc <_obstack_memory_used@@Base+0x544>
  412694:	mov	w20, w0
  412698:	tbnz	w0, #0, 4126a0 <_obstack_memory_used@@Base+0x3e8>
  41269c:	ldr	w22, [x21]
  4126a0:	cmp	x19, #0x2
  4126a4:	b.cc	4126bc <_obstack_memory_used@@Base+0x404>  // b.lo, b.ul, b.last
  4126a8:	ldr	x23, [x19]
  4126ac:	mov	x0, x19
  4126b0:	bl	402990 <free@plt>
  4126b4:	mov	x19, x23
  4126b8:	cbnz	x23, 4126a8 <_obstack_memory_used@@Base+0x3f0>
  4126bc:	str	w22, [x21]
  4126c0:	b	4126c8 <_obstack_memory_used@@Base+0x410>
  4126c4:	mov	w20, #0x1                   	// #1
  4126c8:	and	w0, w20, #0x1
  4126cc:	ldp	x20, x19, [sp, #48]
  4126d0:	ldp	x22, x21, [sp, #32]
  4126d4:	ldr	x23, [sp, #16]
  4126d8:	ldp	x29, x30, [sp], #64
  4126dc:	ret
  4126e0:	sub	sp, sp, #0x70
  4126e4:	stp	x20, x19, [sp, #96]
  4126e8:	mov	x20, x1
  4126ec:	stp	x29, x30, [sp, #64]
  4126f0:	str	x21, [sp, #80]
  4126f4:	add	x29, sp, #0x40
  4126f8:	cbz	x0, 41273c <_obstack_memory_used@@Base+0x484>
  4126fc:	mov	x21, x0
  412700:	bl	41247c <_obstack_memory_used@@Base+0x1c4>
  412704:	cbz	x0, 4127e4 <_obstack_memory_used@@Base+0x52c>
  412708:	mov	x19, x0
  41270c:	mov	x0, x20
  412710:	bl	4028a0 <mktime@plt>
  412714:	cmn	x0, #0x1
  412718:	str	x0, [x29, #24]
  41271c:	b.eq	412754 <_obstack_memory_used@@Base+0x49c>  // b.none
  412720:	mov	x0, x21
  412724:	mov	x1, x20
  412728:	bl	412528 <_obstack_memory_used@@Base+0x270>
  41272c:	tbnz	w0, #0, 4127d0 <_obstack_memory_used@@Base+0x518>
  412730:	mov	x8, #0xffffffffffffffff    	// #-1
  412734:	str	x8, [x29, #24]
  412738:	b	4127d0 <_obstack_memory_used@@Base+0x518>
  41273c:	mov	x0, x20
  412740:	ldp	x20, x19, [sp, #96]
  412744:	ldr	x21, [sp, #80]
  412748:	ldp	x29, x30, [sp, #64]
  41274c:	add	sp, sp, #0x70
  412750:	b	402b70 <timegm@plt>
  412754:	add	x0, x29, #0x18
  412758:	mov	x1, sp
  41275c:	bl	4025d0 <localtime_r@plt>
  412760:	cbz	x0, 4127d0 <_obstack_memory_used@@Base+0x518>
  412764:	ldr	q0, [x20]
  412768:	ldr	q1, [sp]
  41276c:	ldr	w12, [x20, #32]
  412770:	ldp	w8, w9, [x20, #16]
  412774:	ldp	w10, w11, [sp, #16]
  412778:	ldr	w13, [sp, #32]
  41277c:	eor	v0.16b, v1.16b, v0.16b
  412780:	cmp	w12, #0x0
  412784:	ext	v1.16b, v0.16b, v0.16b, #8
  412788:	eor	w8, w10, w8
  41278c:	eor	w9, w11, w9
  412790:	orr	w10, w13, w12
  412794:	cset	w11, eq  // eq = none
  412798:	cmp	w13, #0x0
  41279c:	orr	v0.16b, v0.16b, v1.16b
  4127a0:	cset	w12, eq  // eq = none
  4127a4:	cmp	w10, #0x0
  4127a8:	dup	v1.4s, v0.s[1]
  4127ac:	eor	w10, w11, w12
  4127b0:	cset	w11, ge  // ge = tcont
  4127b4:	orr	v0.16b, v0.16b, v1.16b
  4127b8:	and	w10, w11, w10
  4127bc:	fmov	w11, s0
  4127c0:	orr	w8, w11, w8
  4127c4:	orr	w8, w8, w9
  4127c8:	orr	w8, w8, w10
  4127cc:	cbz	w8, 412720 <_obstack_memory_used@@Base+0x468>
  4127d0:	mov	x0, x19
  4127d4:	bl	412660 <_obstack_memory_used@@Base+0x3a8>
  4127d8:	tbz	w0, #0, 4127e4 <_obstack_memory_used@@Base+0x52c>
  4127dc:	ldr	x0, [x29, #24]
  4127e0:	b	4127e8 <_obstack_memory_used@@Base+0x530>
  4127e4:	mov	x0, #0xffffffffffffffff    	// #-1
  4127e8:	ldp	x20, x19, [sp, #96]
  4127ec:	ldr	x21, [sp, #80]
  4127f0:	ldp	x29, x30, [sp, #64]
  4127f4:	add	sp, sp, #0x70
  4127f8:	ret
  4127fc:	stp	x29, x30, [sp, #-16]!
  412800:	ldrb	w8, [x0, #8]
  412804:	mov	x29, sp
  412808:	cbz	w8, 41282c <_obstack_memory_used@@Base+0x574>
  41280c:	add	x1, x0, #0x9
  412810:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  412814:	add	x0, x0, #0xf3a
  412818:	mov	w2, #0x1                   	// #1
  41281c:	bl	4025e0 <setenv@plt>
  412820:	cbz	w0, 41283c <_obstack_memory_used@@Base+0x584>
  412824:	mov	w0, wzr
  412828:	b	412844 <_obstack_memory_used@@Base+0x58c>
  41282c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x2d48>
  412830:	add	x0, x0, #0xf3a
  412834:	bl	402a30 <unsetenv@plt>
  412838:	cbnz	w0, 412824 <_obstack_memory_used@@Base+0x56c>
  41283c:	bl	402750 <tzset@plt>
  412840:	mov	w0, #0x1                   	// #1
  412844:	ldp	x29, x30, [sp], #16
  412848:	ret
  41284c:	mov	w8, w0
  412850:	cmp	w0, #0x26
  412854:	mov	w0, wzr
  412858:	b.hi	412878 <_obstack_memory_used@@Base+0x5c0>  // b.pmore
  41285c:	mov	w9, w8
  412860:	mov	w10, #0x1                   	// #1
  412864:	lsl	x9, x10, x9
  412868:	mov	x10, #0x410000              	// #4259840
  41286c:	movk	x10, #0x40, lsl #32
  412870:	tst	x9, x10
  412874:	b.ne	412880 <_obstack_memory_used@@Base+0x5c8>  // b.any
  412878:	cmp	w8, #0x5f
  41287c:	b.ne	412884 <_obstack_memory_used@@Base+0x5cc>  // b.any
  412880:	ret
  412884:	mov	w0, #0x1                   	// #1
  412888:	ret
  41288c:	stp	x29, x30, [sp, #-48]!
  412890:	str	x21, [sp, #16]
  412894:	stp	x20, x19, [sp, #32]
  412898:	mov	x29, sp
  41289c:	mov	x20, x0
  4128a0:	bl	402680 <__fpending@plt>
  4128a4:	mov	x19, x0
  4128a8:	mov	x0, x20
  4128ac:	bl	402610 <ferror_unlocked@plt>
  4128b0:	mov	w21, w0
  4128b4:	mov	x0, x20
  4128b8:	bl	412994 <_obstack_memory_used@@Base+0x6dc>
  4128bc:	mov	w8, w0
  4128c0:	cbz	w21, 4128d8 <_obstack_memory_used@@Base+0x620>
  4128c4:	cbnz	w8, 4128d0 <_obstack_memory_used@@Base+0x618>
  4128c8:	bl	402b30 <__errno_location@plt>
  4128cc:	str	wzr, [x0]
  4128d0:	mov	w0, #0xffffffff            	// #-1
  4128d4:	b	4128f8 <_obstack_memory_used@@Base+0x640>
  4128d8:	cmp	w8, #0x0
  4128dc:	csetm	w0, ne  // ne = any
  4128e0:	cbnz	x19, 4128f8 <_obstack_memory_used@@Base+0x640>
  4128e4:	cbz	w8, 4128f8 <_obstack_memory_used@@Base+0x640>
  4128e8:	bl	402b30 <__errno_location@plt>
  4128ec:	ldr	w8, [x0]
  4128f0:	cmp	w8, #0x9
  4128f4:	csetm	w0, ne  // ne = any
  4128f8:	ldp	x20, x19, [sp, #32]
  4128fc:	ldr	x21, [sp, #16]
  412900:	ldp	x29, x30, [sp], #48
  412904:	ret
  412908:	stp	x29, x30, [sp, #-16]!
  41290c:	mov	x29, sp
  412910:	bl	40b278 <__fxstatat@plt+0x86d8>
  412914:	cbz	x0, 412920 <_obstack_memory_used@@Base+0x668>
  412918:	ldp	x29, x30, [sp], #16
  41291c:	ret
  412920:	bl	411430 <__fxstatat@plt+0xe890>
  412924:	ldrb	w9, [x0]
  412928:	cbz	w9, 412948 <_obstack_memory_used@@Base+0x690>
  41292c:	mov	x8, xzr
  412930:	add	x10, x0, #0x1
  412934:	ror	x8, x8, #55
  412938:	add	x8, x8, w9, uxtb
  41293c:	ldrb	w9, [x10], #1
  412940:	cbnz	w9, 412934 <_obstack_memory_used@@Base+0x67c>
  412944:	b	41294c <_obstack_memory_used@@Base+0x694>
  412948:	mov	x8, xzr
  41294c:	udiv	x9, x8, x1
  412950:	msub	x0, x9, x1, x8
  412954:	ret
  412958:	stp	x29, x30, [sp, #-16]!
  41295c:	mov	w0, #0xe                   	// #14
  412960:	mov	x29, sp
  412964:	bl	402720 <nl_langinfo@plt>
  412968:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x5d48>
  41296c:	add	x8, x8, #0x2c9
  412970:	cmp	x0, #0x0
  412974:	csel	x8, x8, x0, eq  // eq = none
  412978:	ldrb	w9, [x8]
  41297c:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x5d48>
  412980:	add	x10, x10, #0xf22
  412984:	cmp	w9, #0x0
  412988:	csel	x0, x10, x8, eq  // eq = none
  41298c:	ldp	x29, x30, [sp], #16
  412990:	ret
  412994:	stp	x29, x30, [sp, #-48]!
  412998:	str	x21, [sp, #16]
  41299c:	stp	x20, x19, [sp, #32]
  4129a0:	mov	x29, sp
  4129a4:	mov	x19, x0
  4129a8:	bl	4026c0 <fileno@plt>
  4129ac:	tbnz	w0, #31, 412a14 <_obstack_memory_used@@Base+0x75c>
  4129b0:	mov	x0, x19
  4129b4:	bl	402af0 <__freading@plt>
  4129b8:	cbz	w0, 4129d8 <_obstack_memory_used@@Base+0x720>
  4129bc:	mov	x0, x19
  4129c0:	bl	4026c0 <fileno@plt>
  4129c4:	mov	w2, #0x1                   	// #1
  4129c8:	mov	x1, xzr
  4129cc:	bl	402670 <lseek@plt>
  4129d0:	cmn	x0, #0x1
  4129d4:	b.eq	412a14 <_obstack_memory_used@@Base+0x75c>  // b.none
  4129d8:	mov	x0, x19
  4129dc:	bl	412a28 <_obstack_memory_used@@Base+0x770>
  4129e0:	cbz	w0, 412a14 <_obstack_memory_used@@Base+0x75c>
  4129e4:	bl	402b30 <__errno_location@plt>
  4129e8:	ldr	w21, [x0]
  4129ec:	mov	x20, x0
  4129f0:	mov	x0, x19
  4129f4:	bl	402710 <fclose@plt>
  4129f8:	cbz	w21, 412a04 <_obstack_memory_used@@Base+0x74c>
  4129fc:	mov	w0, #0xffffffff            	// #-1
  412a00:	str	w21, [x20]
  412a04:	ldp	x20, x19, [sp, #32]
  412a08:	ldr	x21, [sp, #16]
  412a0c:	ldp	x29, x30, [sp], #48
  412a10:	ret
  412a14:	mov	x0, x19
  412a18:	ldp	x20, x19, [sp, #32]
  412a1c:	ldr	x21, [sp, #16]
  412a20:	ldp	x29, x30, [sp], #48
  412a24:	b	402710 <fclose@plt>
  412a28:	stp	x29, x30, [sp, #-32]!
  412a2c:	str	x19, [sp, #16]
  412a30:	mov	x19, x0
  412a34:	mov	x29, sp
  412a38:	cbz	x0, 412a60 <_obstack_memory_used@@Base+0x7a8>
  412a3c:	mov	x0, x19
  412a40:	bl	402af0 <__freading@plt>
  412a44:	cbz	w0, 412a60 <_obstack_memory_used@@Base+0x7a8>
  412a48:	ldrb	w8, [x19, #1]
  412a4c:	tbz	w8, #0, 412a60 <_obstack_memory_used@@Base+0x7a8>
  412a50:	mov	w2, #0x1                   	// #1
  412a54:	mov	x0, x19
  412a58:	mov	x1, xzr
  412a5c:	bl	412a70 <_obstack_memory_used@@Base+0x7b8>
  412a60:	mov	x0, x19
  412a64:	ldr	x19, [sp, #16]
  412a68:	ldp	x29, x30, [sp], #32
  412a6c:	b	4029f0 <fflush@plt>
  412a70:	stp	x29, x30, [sp, #-48]!
  412a74:	str	x21, [sp, #16]
  412a78:	stp	x20, x19, [sp, #32]
  412a7c:	ldp	x9, x8, [x0, #8]
  412a80:	mov	w20, w2
  412a84:	mov	x19, x0
  412a88:	mov	x21, x1
  412a8c:	cmp	x8, x9
  412a90:	mov	x29, sp
  412a94:	b.ne	412aac <_obstack_memory_used@@Base+0x7f4>  // b.any
  412a98:	ldp	x9, x8, [x19, #32]
  412a9c:	cmp	x8, x9
  412aa0:	b.ne	412aac <_obstack_memory_used@@Base+0x7f4>  // b.any
  412aa4:	ldr	x8, [x19, #72]
  412aa8:	cbz	x8, 412ac8 <_obstack_memory_used@@Base+0x810>
  412aac:	mov	x0, x19
  412ab0:	mov	x1, x21
  412ab4:	mov	w2, w20
  412ab8:	ldp	x20, x19, [sp, #32]
  412abc:	ldr	x21, [sp, #16]
  412ac0:	ldp	x29, x30, [sp], #48
  412ac4:	b	402980 <fseeko@plt>
  412ac8:	mov	x0, x19
  412acc:	bl	4026c0 <fileno@plt>
  412ad0:	mov	x1, x21
  412ad4:	mov	w2, w20
  412ad8:	bl	402670 <lseek@plt>
  412adc:	cmn	x0, #0x1
  412ae0:	b.eq	412afc <_obstack_memory_used@@Base+0x844>  // b.none
  412ae4:	ldr	w9, [x19]
  412ae8:	mov	x8, x0
  412aec:	mov	w0, wzr
  412af0:	str	x8, [x19, #144]
  412af4:	and	w9, w9, #0xffffffef
  412af8:	str	w9, [x19]
  412afc:	ldp	x20, x19, [sp, #32]
  412b00:	ldr	x21, [sp, #16]
  412b04:	ldp	x29, x30, [sp], #48
  412b08:	ret
  412b0c:	nop
  412b10:	stp	x29, x30, [sp, #-48]!
  412b14:	mov	x29, sp
  412b18:	str	q0, [sp, #16]
  412b1c:	str	q1, [sp, #32]
  412b20:	ldp	x2, x0, [sp, #16]
  412b24:	ldp	x5, x3, [sp, #32]
  412b28:	mrs	x10, fpcr
  412b2c:	lsr	x1, x0, #63
  412b30:	ubfx	x6, x0, #0, #48
  412b34:	and	w13, w1, #0xff
  412b38:	mov	x14, x1
  412b3c:	ubfx	x7, x0, #48, #15
  412b40:	cbz	w7, 412f60 <_obstack_memory_used@@Base+0xca8>
  412b44:	mov	w4, #0x7fff                	// #32767
  412b48:	cmp	w7, w4
  412b4c:	b.eq	412fa8 <_obstack_memory_used@@Base+0xcf0>  // b.none
  412b50:	and	x7, x7, #0xffff
  412b54:	extr	x6, x6, x2, #61
  412b58:	mov	x15, #0xffffffffffffc001    	// #-16383
  412b5c:	orr	x4, x6, #0x8000000000000
  412b60:	add	x7, x7, x15
  412b64:	lsl	x2, x2, #3
  412b68:	mov	x1, #0x0                   	// #0
  412b6c:	mov	x16, #0x0                   	// #0
  412b70:	mov	w0, #0x0                   	// #0
  412b74:	lsr	x8, x3, #63
  412b78:	ubfx	x6, x3, #0, #48
  412b7c:	and	w15, w8, #0xff
  412b80:	ubfx	x9, x3, #48, #15
  412b84:	cbz	w9, 412f1c <_obstack_memory_used@@Base+0xc64>
  412b88:	mov	w11, #0x7fff                	// #32767
  412b8c:	cmp	w9, w11
  412b90:	b.eq	412c54 <_obstack_memory_used@@Base+0x99c>  // b.none
  412b94:	and	x9, x9, #0xffff
  412b98:	extr	x6, x6, x5, #61
  412b9c:	mov	x12, #0xffffffffffffc001    	// #-16383
  412ba0:	orr	x6, x6, #0x8000000000000
  412ba4:	add	x9, x9, x12
  412ba8:	lsl	x5, x5, #3
  412bac:	sub	x7, x7, x9
  412bb0:	mov	x9, #0x0                   	// #0
  412bb4:	eor	w11, w13, w15
  412bb8:	cmp	x1, #0x9
  412bbc:	and	x3, x11, #0xff
  412bc0:	mov	x12, x3
  412bc4:	b.gt	412ef4 <_obstack_memory_used@@Base+0xc3c>
  412bc8:	cmp	x1, #0x7
  412bcc:	b.gt	4130b4 <_obstack_memory_used@@Base+0xdfc>
  412bd0:	cmp	x1, #0x3
  412bd4:	b.eq	412bf0 <_obstack_memory_used@@Base+0x938>  // b.none
  412bd8:	b.le	412ec4 <_obstack_memory_used@@Base+0xc0c>
  412bdc:	cmp	x1, #0x5
  412be0:	b.eq	412f04 <_obstack_memory_used@@Base+0xc4c>  // b.none
  412be4:	b.le	412ce8 <_obstack_memory_used@@Base+0xa30>
  412be8:	cmp	x1, #0x6
  412bec:	b.eq	412cb8 <_obstack_memory_used@@Base+0xa00>  // b.none
  412bf0:	cmp	x9, #0x1
  412bf4:	b.eq	413038 <_obstack_memory_used@@Base+0xd80>  // b.none
  412bf8:	cbz	x9, 412c0c <_obstack_memory_used@@Base+0x954>
  412bfc:	cmp	x9, #0x2
  412c00:	b.eq	41323c <_obstack_memory_used@@Base+0xf84>  // b.none
  412c04:	cmp	x9, #0x3
  412c08:	b.eq	413224 <_obstack_memory_used@@Base+0xf6c>  // b.none
  412c0c:	mov	x1, #0x3fff                	// #16383
  412c10:	mov	x12, x8
  412c14:	add	x3, x7, x1
  412c18:	cmp	x3, #0x0
  412c1c:	b.le	4130f8 <_obstack_memory_used@@Base+0xe40>
  412c20:	tst	x5, #0x7
  412c24:	b.ne	413068 <_obstack_memory_used@@Base+0xdb0>  // b.any
  412c28:	and	w11, w12, #0x1
  412c2c:	tbz	x6, #52, 412c38 <_obstack_memory_used@@Base+0x980>
  412c30:	and	x6, x6, #0xffefffffffffffff
  412c34:	add	x3, x7, #0x4, lsl #12
  412c38:	mov	x1, #0x7ffe                	// #32766
  412c3c:	cmp	x3, x1
  412c40:	b.gt	4131e0 <_obstack_memory_used@@Base+0xf28>
  412c44:	and	w1, w3, #0x7fff
  412c48:	extr	x2, x6, x5, #3
  412c4c:	ubfx	x6, x6, #3, #48
  412c50:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  412c54:	mov	x9, #0xffffffffffff8001    	// #-32767
  412c58:	orr	x3, x6, x5
  412c5c:	add	x7, x7, x9
  412c60:	cbz	x3, 412fdc <_obstack_memory_used@@Base+0xd24>
  412c64:	tst	x6, #0x800000000000
  412c68:	orr	x1, x1, #0x3
  412c6c:	csinc	w0, w0, wzr, ne  // ne = any
  412c70:	mov	x9, #0x3                   	// #3
  412c74:	eor	w11, w13, w15
  412c78:	cmp	x1, #0x9
  412c7c:	and	x3, x11, #0xff
  412c80:	mov	x12, x3
  412c84:	b.le	412bc8 <_obstack_memory_used@@Base+0x910>
  412c88:	cmp	x1, #0xf
  412c8c:	b.ne	412ef4 <_obstack_memory_used@@Base+0xc3c>  // b.any
  412c90:	tbz	x4, #47, 4130a0 <_obstack_memory_used@@Base+0xde8>
  412c94:	tbnz	x6, #47, 4130a0 <_obstack_memory_used@@Base+0xde8>
  412c98:	orr	x6, x6, #0x800000000000
  412c9c:	mov	w11, w15
  412ca0:	and	x6, x6, #0xffffffffffff
  412ca4:	mov	x2, x5
  412ca8:	mov	w1, #0x7fff                	// #32767
  412cac:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  412cb0:	cmp	x1, #0x2
  412cb4:	b.ne	412cf0 <_obstack_memory_used@@Base+0xa38>  // b.any
  412cb8:	mov	w1, #0x0                   	// #0
  412cbc:	mov	x6, #0x0                   	// #0
  412cc0:	mov	x2, #0x0                   	// #0
  412cc4:	mov	x5, #0x0                   	// #0
  412cc8:	orr	w1, w1, w11, lsl #15
  412ccc:	bfxil	x5, x6, #0, #48
  412cd0:	fmov	d0, x2
  412cd4:	bfi	x5, x1, #48, #16
  412cd8:	fmov	v0.d[1], x5
  412cdc:	cbnz	w0, 412ee4 <_obstack_memory_used@@Base+0xc2c>
  412ce0:	ldp	x29, x30, [sp], #48
  412ce4:	ret
  412ce8:	cmp	x1, #0x4
  412cec:	b.eq	412cb8 <_obstack_memory_used@@Base+0xa00>  // b.none
  412cf0:	cmp	x4, x6
  412cf4:	b.ls	41304c <_obstack_memory_used@@Base+0xd94>  // b.plast
  412cf8:	lsr	x3, x4, #1
  412cfc:	extr	x8, x4, x2, #1
  412d00:	lsl	x2, x2, #63
  412d04:	ubfx	x14, x6, #20, #32
  412d08:	extr	x9, x6, x5, #52
  412d0c:	lsl	x13, x5, #12
  412d10:	and	x15, x9, #0xffffffff
  412d14:	udiv	x5, x3, x14
  412d18:	msub	x3, x5, x14, x3
  412d1c:	mul	x1, x15, x5
  412d20:	extr	x3, x3, x8, #32
  412d24:	cmp	x1, x3
  412d28:	b.ls	412d3c <_obstack_memory_used@@Base+0xa84>  // b.plast
  412d2c:	adds	x3, x9, x3
  412d30:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  412d34:	b.hi	41331c <_obstack_memory_used@@Base+0x1064>  // b.pmore
  412d38:	sub	x5, x5, #0x1
  412d3c:	sub	x3, x3, x1
  412d40:	mov	x4, x8
  412d44:	udiv	x1, x3, x14
  412d48:	msub	x3, x1, x14, x3
  412d4c:	mul	x6, x15, x1
  412d50:	bfi	x4, x3, #32, #32
  412d54:	cmp	x6, x4
  412d58:	b.ls	412d6c <_obstack_memory_used@@Base+0xab4>  // b.plast
  412d5c:	adds	x4, x9, x4
  412d60:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  412d64:	b.hi	413310 <_obstack_memory_used@@Base+0x1058>  // b.pmore
  412d68:	sub	x1, x1, #0x1
  412d6c:	orr	x8, x1, x5, lsl #32
  412d70:	and	x17, x13, #0xffffffff
  412d74:	and	x1, x8, #0xffffffff
  412d78:	lsr	x16, x13, #32
  412d7c:	lsr	x5, x8, #32
  412d80:	sub	x4, x4, x6
  412d84:	mov	x18, #0x100000000           	// #4294967296
  412d88:	mul	x3, x1, x17
  412d8c:	mul	x30, x5, x17
  412d90:	madd	x6, x16, x1, x30
  412d94:	and	x1, x3, #0xffffffff
  412d98:	mul	x5, x5, x16
  412d9c:	add	x3, x6, x3, lsr #32
  412da0:	add	x6, x5, x18
  412da4:	cmp	x30, x3
  412da8:	csel	x5, x6, x5, hi  // hi = pmore
  412dac:	add	x1, x1, x3, lsl #32
  412db0:	add	x5, x5, x3, lsr #32
  412db4:	cmp	x4, x5
  412db8:	b.cc	4130c4 <_obstack_memory_used@@Base+0xe0c>  // b.lo, b.ul, b.last
  412dbc:	ccmp	x2, x1, #0x2, eq  // eq = none
  412dc0:	mov	x6, x8
  412dc4:	b.cc	4130c4 <_obstack_memory_used@@Base+0xe0c>  // b.lo, b.ul, b.last
  412dc8:	subs	x8, x2, x1
  412dcc:	mov	x3, #0x3fff                	// #16383
  412dd0:	cmp	x2, x1
  412dd4:	add	x3, x7, x3
  412dd8:	sbc	x4, x4, x5
  412ddc:	cmp	x9, x4
  412de0:	b.eq	413328 <_obstack_memory_used@@Base+0x1070>  // b.none
  412de4:	udiv	x5, x4, x14
  412de8:	msub	x4, x5, x14, x4
  412dec:	mul	x2, x15, x5
  412df0:	extr	x1, x4, x8, #32
  412df4:	cmp	x2, x1
  412df8:	b.ls	412e0c <_obstack_memory_used@@Base+0xb54>  // b.plast
  412dfc:	adds	x1, x9, x1
  412e00:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  412e04:	b.hi	4133e0 <_obstack_memory_used@@Base+0x1128>  // b.pmore
  412e08:	sub	x5, x5, #0x1
  412e0c:	sub	x1, x1, x2
  412e10:	udiv	x2, x1, x14
  412e14:	msub	x1, x2, x14, x1
  412e18:	mul	x15, x15, x2
  412e1c:	bfi	x8, x1, #32, #32
  412e20:	mov	x1, x8
  412e24:	cmp	x15, x8
  412e28:	b.ls	412e3c <_obstack_memory_used@@Base+0xb84>  // b.plast
  412e2c:	adds	x1, x9, x8
  412e30:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  412e34:	b.hi	4133ec <_obstack_memory_used@@Base+0x1134>  // b.pmore
  412e38:	sub	x2, x2, #0x1
  412e3c:	orr	x5, x2, x5, lsl #32
  412e40:	mov	x11, #0x100000000           	// #4294967296
  412e44:	and	x4, x5, #0xffffffff
  412e48:	sub	x1, x1, x15
  412e4c:	lsr	x14, x5, #32
  412e50:	mul	x2, x17, x4
  412e54:	mul	x17, x14, x17
  412e58:	madd	x4, x16, x4, x17
  412e5c:	and	x8, x2, #0xffffffff
  412e60:	mul	x16, x16, x14
  412e64:	add	x2, x4, x2, lsr #32
  412e68:	add	x4, x16, x11
  412e6c:	cmp	x17, x2
  412e70:	csel	x16, x4, x16, hi  // hi = pmore
  412e74:	add	x4, x8, x2, lsl #32
  412e78:	add	x16, x16, x2, lsr #32
  412e7c:	cmp	x1, x16
  412e80:	b.cs	413260 <_obstack_memory_used@@Base+0xfa8>  // b.hs, b.nlast
  412e84:	adds	x2, x9, x1
  412e88:	sub	x8, x5, #0x1
  412e8c:	mov	x1, x2
  412e90:	b.cs	412ea4 <_obstack_memory_used@@Base+0xbec>  // b.hs, b.nlast
  412e94:	cmp	x2, x16
  412e98:	b.cc	413360 <_obstack_memory_used@@Base+0x10a8>  // b.lo, b.ul, b.last
  412e9c:	ccmp	x13, x4, #0x2, eq  // eq = none
  412ea0:	b.cc	413360 <_obstack_memory_used@@Base+0x10a8>  // b.lo, b.ul, b.last
  412ea4:	cmp	x13, x4
  412ea8:	mov	x5, x8
  412eac:	cset	w2, ne  // ne = any
  412eb0:	cmp	w2, #0x0
  412eb4:	orr	x2, x5, #0x1
  412eb8:	ccmp	x1, x16, #0x0, eq  // eq = none
  412ebc:	csel	x5, x2, x5, ne  // ne = any
  412ec0:	b	412c18 <_obstack_memory_used@@Base+0x960>
  412ec4:	cmp	x1, #0x1
  412ec8:	b.ne	412cb0 <_obstack_memory_used@@Base+0x9f8>  // b.any
  412ecc:	mov	x4, #0x0                   	// #0
  412ed0:	fmov	d0, x4
  412ed4:	lsl	x3, x3, #63
  412ed8:	orr	w0, w0, #0x2
  412edc:	orr	x5, x3, #0x7fff000000000000
  412ee0:	fmov	v0.d[1], x5
  412ee4:	str	q0, [sp, #16]
  412ee8:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  412eec:	ldr	q0, [sp, #16]
  412ef0:	b	412ce0 <_obstack_memory_used@@Base+0xa28>
  412ef4:	cmp	x1, #0xb
  412ef8:	b.gt	412fc8 <_obstack_memory_used@@Base+0xd10>
  412efc:	cmp	x1, #0xa
  412f00:	b.ne	412bf0 <_obstack_memory_used@@Base+0x938>  // b.any
  412f04:	mov	w11, #0x0                   	// #0
  412f08:	mov	x6, #0xffffffffffff        	// #281474976710655
  412f0c:	mov	x2, #0xffffffffffffffff    	// #-1
  412f10:	mov	w0, #0x1                   	// #1
  412f14:	mov	w1, #0x7fff                	// #32767
  412f18:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  412f1c:	orr	x3, x6, x5
  412f20:	cbz	x3, 413008 <_obstack_memory_used@@Base+0xd50>
  412f24:	cbz	x6, 4131bc <_obstack_memory_used@@Base+0xf04>
  412f28:	clz	x3, x6
  412f2c:	sub	x9, x3, #0xf
  412f30:	add	w12, w9, #0x3
  412f34:	mov	w11, #0x3d                  	// #61
  412f38:	sub	w9, w11, w9
  412f3c:	lsl	x6, x6, x12
  412f40:	lsr	x9, x5, x9
  412f44:	orr	x6, x9, x6
  412f48:	lsl	x5, x5, x12
  412f4c:	add	x7, x3, x7
  412f50:	mov	x11, #0x3fef                	// #16367
  412f54:	mov	x9, #0x0                   	// #0
  412f58:	add	x7, x7, x11
  412f5c:	b	412bb4 <_obstack_memory_used@@Base+0x8fc>
  412f60:	orr	x4, x6, x2
  412f64:	cbz	x4, 412ff0 <_obstack_memory_used@@Base+0xd38>
  412f68:	cbz	x6, 413198 <_obstack_memory_used@@Base+0xee0>
  412f6c:	clz	x0, x6
  412f70:	sub	x4, x0, #0xf
  412f74:	add	w7, w4, #0x3
  412f78:	mov	w1, #0x3d                  	// #61
  412f7c:	sub	w4, w1, w4
  412f80:	lsl	x6, x6, x7
  412f84:	lsr	x4, x2, x4
  412f88:	orr	x4, x4, x6
  412f8c:	lsl	x2, x2, x7
  412f90:	mov	x7, #0xffffffffffffc011    	// #-16367
  412f94:	mov	x1, #0x0                   	// #0
  412f98:	sub	x7, x7, x0
  412f9c:	mov	x16, #0x0                   	// #0
  412fa0:	mov	w0, #0x0                   	// #0
  412fa4:	b	412b74 <_obstack_memory_used@@Base+0x8bc>
  412fa8:	orr	x4, x6, x2
  412fac:	cbnz	x4, 41301c <_obstack_memory_used@@Base+0xd64>
  412fb0:	mov	x2, #0x0                   	// #0
  412fb4:	mov	x1, #0x8                   	// #8
  412fb8:	mov	x7, #0x7fff                	// #32767
  412fbc:	mov	x16, #0x2                   	// #2
  412fc0:	mov	w0, #0x0                   	// #0
  412fc4:	b	412b74 <_obstack_memory_used@@Base+0x8bc>
  412fc8:	mov	x6, x4
  412fcc:	mov	x5, x2
  412fd0:	mov	x8, x14
  412fd4:	mov	x9, x16
  412fd8:	b	412bf0 <_obstack_memory_used@@Base+0x938>
  412fdc:	orr	x1, x1, #0x2
  412fe0:	mov	x6, #0x0                   	// #0
  412fe4:	mov	x5, #0x0                   	// #0
  412fe8:	mov	x9, #0x2                   	// #2
  412fec:	b	412c74 <_obstack_memory_used@@Base+0x9bc>
  412ff0:	mov	x2, #0x0                   	// #0
  412ff4:	mov	x1, #0x4                   	// #4
  412ff8:	mov	x7, #0x0                   	// #0
  412ffc:	mov	x16, #0x1                   	// #1
  413000:	mov	w0, #0x0                   	// #0
  413004:	b	412b74 <_obstack_memory_used@@Base+0x8bc>
  413008:	orr	x1, x1, #0x1
  41300c:	mov	x6, #0x0                   	// #0
  413010:	mov	x5, #0x0                   	// #0
  413014:	mov	x9, #0x1                   	// #1
  413018:	b	412bb4 <_obstack_memory_used@@Base+0x8fc>
  41301c:	lsr	x0, x6, #47
  413020:	mov	x4, x6
  413024:	eor	w0, w0, #0x1
  413028:	mov	x1, #0xc                   	// #12
  41302c:	mov	x7, #0x7fff                	// #32767
  413030:	mov	x16, #0x3                   	// #3
  413034:	b	412b74 <_obstack_memory_used@@Base+0x8bc>
  413038:	mov	w11, w8
  41303c:	mov	w1, #0x0                   	// #0
  413040:	mov	x6, #0x0                   	// #0
  413044:	mov	x2, #0x0                   	// #0
  413048:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  41304c:	ccmp	x5, x2, #0x2, eq  // eq = none
  413050:	b.ls	412cf8 <_obstack_memory_used@@Base+0xa40>  // b.plast
  413054:	mov	x8, x2
  413058:	sub	x7, x7, #0x1
  41305c:	mov	x3, x4
  413060:	mov	x2, #0x0                   	// #0
  413064:	b	412d04 <_obstack_memory_used@@Base+0xa4c>
  413068:	and	x1, x10, #0xc00000
  41306c:	orr	w0, w0, #0x10
  413070:	cmp	x1, #0x400, lsl #12
  413074:	b.eq	4133c8 <_obstack_memory_used@@Base+0x1110>  // b.none
  413078:	cmp	x1, #0x800, lsl #12
  41307c:	b.eq	4132dc <_obstack_memory_used@@Base+0x1024>  // b.none
  413080:	cbnz	x1, 412c28 <_obstack_memory_used@@Base+0x970>
  413084:	and	x1, x5, #0xf
  413088:	and	w11, w12, #0x1
  41308c:	cmp	x1, #0x4
  413090:	b.eq	412c2c <_obstack_memory_used@@Base+0x974>  // b.none
  413094:	adds	x5, x5, #0x4
  413098:	cinc	x6, x6, cs  // cs = hs, nlast
  41309c:	b	412c2c <_obstack_memory_used@@Base+0x974>
  4130a0:	orr	x6, x4, #0x800000000000
  4130a4:	mov	w11, w13
  4130a8:	and	x6, x6, #0xffffffffffff
  4130ac:	mov	w1, #0x7fff                	// #32767
  4130b0:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  4130b4:	mov	w1, #0x7fff                	// #32767
  4130b8:	mov	x6, #0x0                   	// #0
  4130bc:	mov	x2, #0x0                   	// #0
  4130c0:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  4130c4:	adds	x3, x2, x13
  4130c8:	sub	x6, x8, #0x1
  4130cc:	adc	x4, x4, x9
  4130d0:	cset	x18, cs  // cs = hs, nlast
  4130d4:	mov	x2, x3
  4130d8:	cmp	x9, x4
  4130dc:	b.cs	413250 <_obstack_memory_used@@Base+0xf98>  // b.hs, b.nlast
  4130e0:	cmp	x5, x4
  4130e4:	b.ls	413278 <_obstack_memory_used@@Base+0xfc0>  // b.plast
  4130e8:	adds	x2, x13, x3
  4130ec:	sub	x6, x8, #0x2
  4130f0:	adc	x4, x4, x9
  4130f4:	b	412dc8 <_obstack_memory_used@@Base+0xb10>
  4130f8:	mov	x1, #0x1                   	// #1
  4130fc:	sub	x1, x1, x3
  413100:	cmp	x1, #0x74
  413104:	and	w11, w12, #0x1
  413108:	b.le	413124 <_obstack_memory_used@@Base+0xe6c>
  41310c:	orr	x2, x5, x6
  413110:	cbnz	x2, 413344 <_obstack_memory_used@@Base+0x108c>
  413114:	orr	w0, w0, #0x8
  413118:	mov	w1, #0x0                   	// #0
  41311c:	mov	x6, #0x0                   	// #0
  413120:	b	413208 <_obstack_memory_used@@Base+0xf50>
  413124:	cmp	x1, #0x3f
  413128:	b.le	413284 <_obstack_memory_used@@Base+0xfcc>
  41312c:	mov	w2, #0x80                  	// #128
  413130:	sub	w2, w2, w1
  413134:	cmp	x1, #0x40
  413138:	sub	w1, w1, #0x40
  41313c:	lsl	x2, x6, x2
  413140:	orr	x2, x5, x2
  413144:	csel	x5, x2, x5, ne  // ne = any
  413148:	lsr	x6, x6, x1
  41314c:	cmp	x5, #0x0
  413150:	cset	x2, ne  // ne = any
  413154:	orr	x2, x2, x6
  413158:	ands	x6, x2, #0x7
  41315c:	b.eq	4132b8 <_obstack_memory_used@@Base+0x1000>  // b.none
  413160:	mov	x6, #0x0                   	// #0
  413164:	and	x10, x10, #0xc00000
  413168:	orr	w0, w0, #0x10
  41316c:	cmp	x10, #0x400, lsl #12
  413170:	b.eq	413404 <_obstack_memory_used@@Base+0x114c>  // b.none
  413174:	cmp	x10, #0x800, lsl #12
  413178:	b.eq	413418 <_obstack_memory_used@@Base+0x1160>  // b.none
  41317c:	cbz	x10, 413380 <_obstack_memory_used@@Base+0x10c8>
  413180:	tbnz	x6, #51, 413398 <_obstack_memory_used@@Base+0x10e0>
  413184:	orr	w0, w0, #0x8
  413188:	extr	x2, x6, x2, #3
  41318c:	mov	w1, #0x0                   	// #0
  413190:	ubfx	x6, x6, #3, #48
  413194:	b	413208 <_obstack_memory_used@@Base+0xf50>
  413198:	clz	x7, x2
  41319c:	add	x4, x7, #0x31
  4131a0:	add	x0, x7, #0x40
  4131a4:	cmp	x4, #0x3c
  4131a8:	b.le	412f74 <_obstack_memory_used@@Base+0xcbc>
  4131ac:	sub	w4, w4, #0x3d
  4131b0:	lsl	x4, x2, x4
  4131b4:	mov	x2, #0x0                   	// #0
  4131b8:	b	412f90 <_obstack_memory_used@@Base+0xcd8>
  4131bc:	clz	x3, x5
  4131c0:	add	x9, x3, #0x31
  4131c4:	add	x3, x3, #0x40
  4131c8:	cmp	x9, #0x3c
  4131cc:	b.le	412f30 <_obstack_memory_used@@Base+0xc78>
  4131d0:	sub	w6, w9, #0x3d
  4131d4:	lsl	x6, x5, x6
  4131d8:	mov	x5, #0x0                   	// #0
  4131dc:	b	412f4c <_obstack_memory_used@@Base+0xc94>
  4131e0:	and	x2, x10, #0xc00000
  4131e4:	cmp	x2, #0x400, lsl #12
  4131e8:	b.eq	4133ac <_obstack_memory_used@@Base+0x10f4>  // b.none
  4131ec:	cmp	x2, #0x800, lsl #12
  4131f0:	b.eq	4132f4 <_obstack_memory_used@@Base+0x103c>  // b.none
  4131f4:	cbz	x2, 4132d0 <_obstack_memory_used@@Base+0x1018>
  4131f8:	mov	x6, #0xffffffffffff        	// #281474976710655
  4131fc:	mov	x2, #0xffffffffffffffff    	// #-1
  413200:	mov	w3, #0x14                  	// #20
  413204:	orr	w0, w0, w3
  413208:	mov	x5, #0x0                   	// #0
  41320c:	orr	w1, w1, w11, lsl #15
  413210:	bfxil	x5, x6, #0, #48
  413214:	fmov	d0, x2
  413218:	bfi	x5, x1, #48, #16
  41321c:	fmov	v0.d[1], x5
  413220:	b	412ee4 <_obstack_memory_used@@Base+0xc2c>
  413224:	orr	x6, x6, #0x800000000000
  413228:	mov	w11, w8
  41322c:	and	x6, x6, #0xffffffffffff
  413230:	mov	x2, x5
  413234:	mov	w1, #0x7fff                	// #32767
  413238:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  41323c:	mov	w11, w8
  413240:	mov	w1, #0x7fff                	// #32767
  413244:	mov	x6, #0x0                   	// #0
  413248:	mov	x2, #0x0                   	// #0
  41324c:	b	412cc4 <_obstack_memory_used@@Base+0xa0c>
  413250:	cmp	x18, #0x0
  413254:	ccmp	x9, x4, #0x0, eq  // eq = none
  413258:	b.ne	412dc8 <_obstack_memory_used@@Base+0xb10>  // b.any
  41325c:	b	4130e0 <_obstack_memory_used@@Base+0xe28>
  413260:	cmp	x4, #0x0
  413264:	cset	w2, ne  // ne = any
  413268:	cmp	w2, #0x0
  41326c:	ccmp	x1, x16, #0x0, ne  // ne = any
  413270:	b.ne	412eb0 <_obstack_memory_used@@Base+0xbf8>  // b.any
  413274:	b	412e84 <_obstack_memory_used@@Base+0xbcc>
  413278:	ccmp	x1, x3, #0x0, eq  // eq = none
  41327c:	b.ls	412dc8 <_obstack_memory_used@@Base+0xb10>  // b.plast
  413280:	b	4130e8 <_obstack_memory_used@@Base+0xe30>
  413284:	mov	w2, #0x40                  	// #64
  413288:	sub	w2, w2, w1
  41328c:	lsr	x4, x5, x1
  413290:	lsl	x5, x5, x2
  413294:	cmp	x5, #0x0
  413298:	cset	x3, ne  // ne = any
  41329c:	lsl	x2, x6, x2
  4132a0:	orr	x2, x2, x4
  4132a4:	lsr	x6, x6, x1
  4132a8:	orr	x2, x2, x3
  4132ac:	tst	x2, #0x7
  4132b0:	b.ne	413164 <_obstack_memory_used@@Base+0xeac>  // b.any
  4132b4:	tbnz	x6, #51, 413424 <_obstack_memory_used@@Base+0x116c>
  4132b8:	mov	w1, #0x0                   	// #0
  4132bc:	extr	x2, x6, x2, #3
  4132c0:	ubfx	x6, x6, #3, #48
  4132c4:	tbz	w10, #11, 412cc4 <_obstack_memory_used@@Base+0xa0c>
  4132c8:	orr	w0, w0, #0x8
  4132cc:	b	413208 <_obstack_memory_used@@Base+0xf50>
  4132d0:	mov	w1, #0x7fff                	// #32767
  4132d4:	mov	x6, #0x0                   	// #0
  4132d8:	b	413200 <_obstack_memory_used@@Base+0xf48>
  4132dc:	mov	w11, #0x0                   	// #0
  4132e0:	cbz	x12, 412c2c <_obstack_memory_used@@Base+0x974>
  4132e4:	adds	x5, x5, #0x8
  4132e8:	mov	w11, #0x1                   	// #1
  4132ec:	cinc	x6, x6, cs  // cs = hs, nlast
  4132f0:	b	412c2c <_obstack_memory_used@@Base+0x974>
  4132f4:	cmp	x12, #0x0
  4132f8:	mov	w2, #0x7fff                	// #32767
  4132fc:	mov	x6, #0xffffffffffff        	// #281474976710655
  413300:	csel	w1, w1, w2, eq  // eq = none
  413304:	csel	x6, x6, xzr, eq  // eq = none
  413308:	csetm	x2, eq  // eq = none
  41330c:	b	413200 <_obstack_memory_used@@Base+0xf48>
  413310:	sub	x1, x1, #0x2
  413314:	add	x4, x4, x9
  413318:	b	412d6c <_obstack_memory_used@@Base+0xab4>
  41331c:	sub	x5, x5, #0x2
  413320:	add	x3, x3, x9
  413324:	b	412d3c <_obstack_memory_used@@Base+0xa84>
  413328:	cmp	x3, #0x0
  41332c:	mov	x5, #0xffffffffffffffff    	// #-1
  413330:	b.gt	413068 <_obstack_memory_used@@Base+0xdb0>
  413334:	mov	x1, #0x1                   	// #1
  413338:	sub	x1, x1, x3
  41333c:	cmp	x1, #0x74
  413340:	b.le	413124 <_obstack_memory_used@@Base+0xe6c>
  413344:	and	x10, x10, #0xc00000
  413348:	orr	w0, w0, #0x10
  41334c:	cmp	x10, #0x400, lsl #12
  413350:	b.eq	4133f8 <_obstack_memory_used@@Base+0x1140>  // b.none
  413354:	cmp	x10, #0x800, lsl #12
  413358:	csel	x2, x12, xzr, eq  // eq = none
  41335c:	b	413114 <_obstack_memory_used@@Base+0xe5c>
  413360:	lsl	x8, x13, #1
  413364:	sub	x5, x5, #0x2
  413368:	cmp	x13, x8
  41336c:	cinc	x1, x9, hi  // hi = pmore
  413370:	cmp	x4, x8
  413374:	add	x1, x2, x1
  413378:	cset	w2, ne  // ne = any
  41337c:	b	412eb0 <_obstack_memory_used@@Base+0xbf8>
  413380:	and	x1, x2, #0xf
  413384:	cmp	x1, #0x4
  413388:	b.eq	413394 <_obstack_memory_used@@Base+0x10dc>  // b.none
  41338c:	adds	x2, x2, #0x4
  413390:	cinc	x6, x6, cs  // cs = hs, nlast
  413394:	tbz	x6, #51, 413184 <_obstack_memory_used@@Base+0xecc>
  413398:	orr	w0, w0, #0x8
  41339c:	mov	w1, #0x1                   	// #1
  4133a0:	mov	x6, #0x0                   	// #0
  4133a4:	mov	x2, #0x0                   	// #0
  4133a8:	b	413208 <_obstack_memory_used@@Base+0xf50>
  4133ac:	cmp	x12, #0x0
  4133b0:	mov	w2, #0x7fff                	// #32767
  4133b4:	mov	x6, #0xffffffffffff        	// #281474976710655
  4133b8:	csel	w1, w1, w2, ne  // ne = any
  4133bc:	csel	x6, x6, xzr, ne  // ne = any
  4133c0:	csetm	x2, ne  // ne = any
  4133c4:	b	413200 <_obstack_memory_used@@Base+0xf48>
  4133c8:	mov	w11, #0x1                   	// #1
  4133cc:	cbnz	x12, 412c2c <_obstack_memory_used@@Base+0x974>
  4133d0:	adds	x5, x5, #0x8
  4133d4:	mov	w11, #0x0                   	// #0
  4133d8:	cinc	x6, x6, cs  // cs = hs, nlast
  4133dc:	b	412c2c <_obstack_memory_used@@Base+0x974>
  4133e0:	sub	x5, x5, #0x2
  4133e4:	add	x1, x1, x9
  4133e8:	b	412e0c <_obstack_memory_used@@Base+0xb54>
  4133ec:	sub	x2, x2, #0x2
  4133f0:	add	x1, x1, x9
  4133f4:	b	412e3c <_obstack_memory_used@@Base+0xb84>
  4133f8:	mov	x2, #0x1                   	// #1
  4133fc:	sub	x2, x2, x12
  413400:	b	413114 <_obstack_memory_used@@Base+0xe5c>
  413404:	cbnz	x12, 413394 <_obstack_memory_used@@Base+0x10dc>
  413408:	adds	x2, x2, #0x8
  41340c:	cinc	x6, x6, cs  // cs = hs, nlast
  413410:	tbnz	x6, #51, 413398 <_obstack_memory_used@@Base+0x10e0>
  413414:	b	413184 <_obstack_memory_used@@Base+0xecc>
  413418:	cbnz	x12, 413408 <_obstack_memory_used@@Base+0x1150>
  41341c:	tbnz	x6, #51, 413398 <_obstack_memory_used@@Base+0x10e0>
  413420:	b	413184 <_obstack_memory_used@@Base+0xecc>
  413424:	orr	w0, w0, #0x10
  413428:	b	413398 <_obstack_memory_used@@Base+0x10e0>
  41342c:	nop
  413430:	stp	x29, x30, [sp, #-48]!
  413434:	mov	x29, sp
  413438:	str	q0, [sp, #16]
  41343c:	str	q1, [sp, #32]
  413440:	ldp	x6, x1, [sp, #16]
  413444:	ldp	x7, x0, [sp, #32]
  413448:	mrs	x2, fpcr
  41344c:	ubfx	x4, x1, #48, #15
  413450:	lsr	x2, x1, #63
  413454:	lsr	x3, x0, #63
  413458:	ubfx	x9, x0, #0, #48
  41345c:	mov	x5, #0x7fff                	// #32767
  413460:	mov	x10, x6
  413464:	cmp	x4, x5
  413468:	and	w2, w2, #0xff
  41346c:	ubfx	x1, x1, #0, #48
  413470:	and	w3, w3, #0xff
  413474:	ubfx	x0, x0, #48, #15
  413478:	b.eq	4134ac <_obstack_memory_used@@Base+0x11f4>  // b.none
  41347c:	cmp	x0, x5
  413480:	b.eq	413498 <_obstack_memory_used@@Base+0x11e0>  // b.none
  413484:	cmp	x4, x0
  413488:	mov	w0, #0x1                   	// #1
  41348c:	b.eq	4134c4 <_obstack_memory_used@@Base+0x120c>  // b.none
  413490:	ldp	x29, x30, [sp], #48
  413494:	ret
  413498:	orr	x8, x9, x7
  41349c:	cbnz	x8, 413528 <_obstack_memory_used@@Base+0x1270>
  4134a0:	mov	w0, #0x1                   	// #1
  4134a4:	ldp	x29, x30, [sp], #48
  4134a8:	ret
  4134ac:	orr	x5, x1, x6
  4134b0:	cbnz	x5, 4134f8 <_obstack_memory_used@@Base+0x1240>
  4134b4:	cmp	x0, x4
  4134b8:	b.ne	4134a0 <_obstack_memory_used@@Base+0x11e8>  // b.any
  4134bc:	orr	x8, x9, x7
  4134c0:	cbnz	x8, 413528 <_obstack_memory_used@@Base+0x1270>
  4134c4:	cmp	x1, x9
  4134c8:	mov	w0, #0x1                   	// #1
  4134cc:	ccmp	x6, x7, #0x0, eq  // eq = none
  4134d0:	b.ne	413490 <_obstack_memory_used@@Base+0x11d8>  // b.any
  4134d4:	cmp	w2, w3
  4134d8:	mov	w0, #0x0                   	// #0
  4134dc:	b.eq	413490 <_obstack_memory_used@@Base+0x11d8>  // b.none
  4134e0:	mov	w0, #0x1                   	// #1
  4134e4:	cbnz	x4, 413490 <_obstack_memory_used@@Base+0x11d8>
  4134e8:	orr	x1, x1, x10
  4134ec:	cmp	x1, #0x0
  4134f0:	cset	w0, ne  // ne = any
  4134f4:	b	413490 <_obstack_memory_used@@Base+0x11d8>
  4134f8:	tst	x1, #0x800000000000
  4134fc:	b.ne	413514 <_obstack_memory_used@@Base+0x125c>  // b.any
  413500:	mov	w0, #0x1                   	// #1
  413504:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413508:	mov	w0, #0x1                   	// #1
  41350c:	ldp	x29, x30, [sp], #48
  413510:	ret
  413514:	cmp	x0, x4
  413518:	mov	w0, #0x1                   	// #1
  41351c:	b.ne	413490 <_obstack_memory_used@@Base+0x11d8>  // b.any
  413520:	orr	x8, x9, x7
  413524:	cbz	x8, 413490 <_obstack_memory_used@@Base+0x11d8>
  413528:	tst	x9, #0x800000000000
  41352c:	b.eq	413500 <_obstack_memory_used@@Base+0x1248>  // b.none
  413530:	b	4134a0 <_obstack_memory_used@@Base+0x11e8>
  413534:	nop
  413538:	stp	x29, x30, [sp, #-48]!
  41353c:	mov	x29, sp
  413540:	str	q0, [sp, #16]
  413544:	str	q1, [sp, #32]
  413548:	ldp	x8, x1, [sp, #16]
  41354c:	ldp	x9, x0, [sp, #32]
  413550:	mrs	x2, fpcr
  413554:	ubfx	x4, x1, #48, #15
  413558:	ubfx	x10, x1, #0, #48
  41355c:	lsr	x2, x1, #63
  413560:	mov	x5, #0x7fff                	// #32767
  413564:	mov	x6, x8
  413568:	cmp	x4, x5
  41356c:	ubfx	x11, x0, #0, #48
  413570:	ubfx	x7, x0, #48, #15
  413574:	lsr	x1, x0, #63
  413578:	mov	x3, x9
  41357c:	b.eq	4135b4 <_obstack_memory_used@@Base+0x12fc>  // b.none
  413580:	cmp	x7, x5
  413584:	b.eq	4135c4 <_obstack_memory_used@@Base+0x130c>  // b.none
  413588:	cbnz	x4, 4135f0 <_obstack_memory_used@@Base+0x1338>
  41358c:	orr	x6, x10, x8
  413590:	cmp	x6, #0x0
  413594:	cset	w0, eq  // eq = none
  413598:	cbnz	x7, 4135dc <_obstack_memory_used@@Base+0x1324>
  41359c:	orr	x3, x11, x9
  4135a0:	cbnz	x3, 4135dc <_obstack_memory_used@@Base+0x1324>
  4135a4:	mov	w0, #0x0                   	// #0
  4135a8:	cbnz	x6, 413604 <_obstack_memory_used@@Base+0x134c>
  4135ac:	ldp	x29, x30, [sp], #48
  4135b0:	ret
  4135b4:	orr	x0, x10, x8
  4135b8:	cbnz	x0, 413618 <_obstack_memory_used@@Base+0x1360>
  4135bc:	cmp	x7, x4
  4135c0:	b.ne	4135f0 <_obstack_memory_used@@Base+0x1338>  // b.any
  4135c4:	orr	x3, x11, x3
  4135c8:	cbnz	x3, 413618 <_obstack_memory_used@@Base+0x1360>
  4135cc:	cbnz	x4, 4135fc <_obstack_memory_used@@Base+0x1344>
  4135d0:	orr	x6, x10, x6
  4135d4:	cmp	x6, #0x0
  4135d8:	cset	w0, eq  // eq = none
  4135dc:	cbz	w0, 4135fc <_obstack_memory_used@@Base+0x1344>
  4135e0:	cmp	x1, #0x0
  4135e4:	csinv	w0, w0, wzr, ne  // ne = any
  4135e8:	ldp	x29, x30, [sp], #48
  4135ec:	ret
  4135f0:	cbnz	x7, 4135fc <_obstack_memory_used@@Base+0x1344>
  4135f4:	orr	x3, x11, x3
  4135f8:	cbz	x3, 413604 <_obstack_memory_used@@Base+0x134c>
  4135fc:	cmp	x2, x1
  413600:	b.eq	41362c <_obstack_memory_used@@Base+0x1374>  // b.none
  413604:	cmp	x2, #0x0
  413608:	mov	w0, #0xffffffff            	// #-1
  41360c:	cneg	w0, w0, eq  // eq = none
  413610:	ldp	x29, x30, [sp], #48
  413614:	ret
  413618:	mov	w0, #0x1                   	// #1
  41361c:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413620:	mov	w0, #0x2                   	// #2
  413624:	ldp	x29, x30, [sp], #48
  413628:	ret
  41362c:	cmp	x4, x7
  413630:	b.gt	413604 <_obstack_memory_used@@Base+0x134c>
  413634:	b.lt	413668 <_obstack_memory_used@@Base+0x13b0>  // b.tstop
  413638:	cmp	x10, x11
  41363c:	b.hi	413604 <_obstack_memory_used@@Base+0x134c>  // b.pmore
  413640:	cset	w0, eq  // eq = none
  413644:	cmp	w0, #0x0
  413648:	ccmp	x8, x9, #0x0, ne  // ne = any
  41364c:	b.hi	413604 <_obstack_memory_used@@Base+0x134c>  // b.pmore
  413650:	cmp	x10, x11
  413654:	b.cc	413668 <_obstack_memory_used@@Base+0x13b0>  // b.lo, b.ul, b.last
  413658:	cmp	w0, #0x0
  41365c:	mov	w0, #0x0                   	// #0
  413660:	ccmp	x8, x9, #0x2, ne  // ne = any
  413664:	b.cs	4135ac <_obstack_memory_used@@Base+0x12f4>  // b.hs, b.nlast
  413668:	cmp	x2, #0x0
  41366c:	mov	w0, #0x1                   	// #1
  413670:	cneg	w0, w0, eq  // eq = none
  413674:	b	4135ac <_obstack_memory_used@@Base+0x12f4>
  413678:	stp	x29, x30, [sp, #-80]!
  41367c:	mov	x29, sp
  413680:	str	q0, [sp, #48]
  413684:	str	q1, [sp, #64]
  413688:	ldp	x1, x0, [sp, #48]
  41368c:	ldp	x6, x2, [sp, #64]
  413690:	mrs	x11, fpcr
  413694:	lsr	x3, x0, #63
  413698:	ubfx	x7, x0, #0, #48
  41369c:	and	w12, w3, #0xff
  4136a0:	mov	x14, x3
  4136a4:	ubfx	x3, x0, #48, #15
  4136a8:	cbz	w3, 413a50 <_obstack_memory_used@@Base+0x1798>
  4136ac:	mov	w4, #0x7fff                	// #32767
  4136b0:	cmp	w3, w4
  4136b4:	b.eq	413af4 <_obstack_memory_used@@Base+0x183c>  // b.none
  4136b8:	and	x3, x3, #0xffff
  4136bc:	extr	x4, x7, x1, #61
  4136c0:	mov	x18, #0xffffffffffffc001    	// #-16383
  4136c4:	orr	x7, x4, #0x8000000000000
  4136c8:	add	x3, x3, x18
  4136cc:	lsl	x5, x1, #3
  4136d0:	mov	x16, #0x0                   	// #0
  4136d4:	mov	x1, #0x0                   	// #0
  4136d8:	mov	w0, #0x0                   	// #0
  4136dc:	lsr	x8, x2, #63
  4136e0:	ubfx	x4, x2, #0, #48
  4136e4:	and	w15, w8, #0xff
  4136e8:	mov	x13, x8
  4136ec:	ubfx	x9, x2, #48, #15
  4136f0:	cbz	w9, 413ab0 <_obstack_memory_used@@Base+0x17f8>
  4136f4:	mov	w8, #0x7fff                	// #32767
  4136f8:	cmp	w9, w8
  4136fc:	b.eq	413780 <_obstack_memory_used@@Base+0x14c8>  // b.none
  413700:	and	x9, x9, #0xffff
  413704:	mov	x17, #0xffffffffffffc001    	// #-16383
  413708:	add	x9, x9, x17
  41370c:	extr	x2, x4, x6, #61
  413710:	add	x9, x9, x3
  413714:	lsl	x6, x6, #3
  413718:	orr	x4, x2, #0x8000000000000
  41371c:	mov	x2, #0x0                   	// #0
  413720:	eor	w8, w12, w15
  413724:	cmp	x1, #0xa
  413728:	and	w10, w8, #0xff
  41372c:	add	x3, x9, #0x1
  413730:	and	x8, x8, #0xff
  413734:	b.le	4137b8 <_obstack_memory_used@@Base+0x1500>
  413738:	cmp	x1, #0xb
  41373c:	b.eq	413e50 <_obstack_memory_used@@Base+0x1b98>  // b.none
  413740:	mov	w15, w12
  413744:	mov	x13, x14
  413748:	mov	w10, w15
  41374c:	cmp	x16, #0x2
  413750:	b.eq	413b14 <_obstack_memory_used@@Base+0x185c>  // b.none
  413754:	mov	x4, x7
  413758:	mov	x6, x5
  41375c:	mov	x2, x16
  413760:	mov	x8, x13
  413764:	cmp	x2, #0x3
  413768:	b.ne	4137d4 <_obstack_memory_used@@Base+0x151c>  // b.any
  41376c:	orr	x4, x4, #0x800000000000
  413770:	mov	x5, x6
  413774:	and	x4, x4, #0xffffffffffff
  413778:	mov	w1, #0x7fff                	// #32767
  41377c:	b	4137e8 <_obstack_memory_used@@Base+0x1530>
  413780:	mov	x8, #0x7fff                	// #32767
  413784:	orr	x2, x4, x6
  413788:	add	x9, x3, x8
  41378c:	cbnz	x2, 41380c <_obstack_memory_used@@Base+0x1554>
  413790:	eor	w8, w12, w15
  413794:	orr	x1, x1, #0x2
  413798:	and	w10, w8, #0xff
  41379c:	cmp	x1, #0xa
  4137a0:	add	x3, x3, #0x8, lsl #12
  4137a4:	and	x8, x8, #0xff
  4137a8:	mov	x6, #0x0                   	// #0
  4137ac:	b.gt	413dc4 <_obstack_memory_used@@Base+0x1b0c>
  4137b0:	mov	x4, #0x0                   	// #0
  4137b4:	mov	x2, #0x2                   	// #2
  4137b8:	cmp	x1, #0x2
  4137bc:	b.gt	413834 <_obstack_memory_used@@Base+0x157c>
  4137c0:	sub	x1, x1, #0x1
  4137c4:	cmp	x1, #0x1
  4137c8:	b.hi	413870 <_obstack_memory_used@@Base+0x15b8>  // b.pmore
  4137cc:	cmp	x2, #0x2
  4137d0:	b.eq	413b14 <_obstack_memory_used@@Base+0x185c>  // b.none
  4137d4:	cmp	x2, #0x1
  4137d8:	b.ne	4139d0 <_obstack_memory_used@@Base+0x1718>  // b.any
  4137dc:	mov	w1, #0x0                   	// #0
  4137e0:	mov	x4, #0x0                   	// #0
  4137e4:	mov	x5, #0x0                   	// #0
  4137e8:	mov	x3, #0x0                   	// #0
  4137ec:	orr	w1, w1, w10, lsl #15
  4137f0:	bfxil	x3, x4, #0, #48
  4137f4:	fmov	d0, x5
  4137f8:	bfi	x3, x1, #48, #16
  4137fc:	fmov	v0.d[1], x3
  413800:	cbnz	w0, 413c40 <_obstack_memory_used@@Base+0x1988>
  413804:	ldp	x29, x30, [sp], #80
  413808:	ret
  41380c:	tst	x4, #0x800000000000
  413810:	eor	w8, w12, w15
  413814:	orr	x1, x1, #0x3
  413818:	csinc	w0, w0, wzr, ne  // ne = any
  41381c:	and	w10, w8, #0xff
  413820:	add	x3, x3, #0x8, lsl #12
  413824:	cmp	x1, #0xa
  413828:	and	x8, x8, #0xff
  41382c:	mov	x2, #0x3                   	// #3
  413830:	b.gt	413e44 <_obstack_memory_used@@Base+0x1b8c>
  413834:	mov	x12, #0x1                   	// #1
  413838:	mov	x14, #0x530                 	// #1328
  41383c:	lsl	x1, x12, x1
  413840:	tst	x1, x14
  413844:	b.ne	413a44 <_obstack_memory_used@@Base+0x178c>  // b.any
  413848:	mov	x14, #0x240                 	// #576
  41384c:	tst	x1, x14
  413850:	b.ne	413a2c <_obstack_memory_used@@Base+0x1774>  // b.any
  413854:	mov	x12, #0x88                  	// #136
  413858:	tst	x1, x12
  41385c:	b.eq	413870 <_obstack_memory_used@@Base+0x15b8>  // b.none
  413860:	mov	x7, x4
  413864:	mov	x5, x6
  413868:	mov	x16, x2
  41386c:	b	413748 <_obstack_memory_used@@Base+0x1490>
  413870:	lsr	x13, x5, #32
  413874:	and	x12, x6, #0xffffffff
  413878:	and	x15, x5, #0xffffffff
  41387c:	lsr	x6, x6, #32
  413880:	and	x18, x4, #0xffffffff
  413884:	lsr	x2, x4, #32
  413888:	mul	x4, x13, x12
  41388c:	stp	x21, x22, [sp, #32]
  413890:	lsr	x22, x7, #32
  413894:	and	x5, x7, #0xffffffff
  413898:	mul	x16, x12, x15
  41389c:	madd	x7, x6, x15, x4
  4138a0:	stp	x19, x20, [sp, #16]
  4138a4:	mul	x1, x13, x18
  4138a8:	mul	x17, x15, x18
  4138ac:	and	x30, x16, #0xffffffff
  4138b0:	madd	x15, x2, x15, x1
  4138b4:	add	x16, x7, x16, lsr #32
  4138b8:	mul	x21, x22, x12
  4138bc:	cmp	x4, x16
  4138c0:	mul	x20, x22, x18
  4138c4:	mov	x14, #0x100000000           	// #4294967296
  4138c8:	mul	x19, x13, x6
  4138cc:	add	x15, x15, x17, lsr #32
  4138d0:	mul	x12, x12, x5
  4138d4:	and	x17, x17, #0xffffffff
  4138d8:	mul	x18, x5, x18
  4138dc:	add	x4, x19, x14
  4138e0:	madd	x7, x6, x5, x21
  4138e4:	csel	x19, x4, x19, hi  // hi = pmore
  4138e8:	madd	x5, x2, x5, x20
  4138ec:	cmp	x1, x15
  4138f0:	mul	x13, x13, x2
  4138f4:	add	x17, x17, x15, lsl #32
  4138f8:	mul	x6, x6, x22
  4138fc:	add	x7, x7, x12, lsr #32
  413900:	add	x5, x5, x18, lsr #32
  413904:	add	x4, x13, x14
  413908:	mul	x2, x2, x22
  41390c:	csel	x13, x4, x13, hi  // hi = pmore
  413910:	and	x1, x18, #0xffffffff
  413914:	cmp	x21, x7
  413918:	add	x4, x6, x14
  41391c:	add	x30, x30, x16, lsl #32
  413920:	csel	x6, x4, x6, hi  // hi = pmore
  413924:	add	x13, x13, x15, lsr #32
  413928:	cmp	x20, x5
  41392c:	add	x1, x1, x5, lsl #32
  413930:	add	x16, x17, x16, lsr #32
  413934:	add	x14, x2, x14
  413938:	csel	x2, x14, x2, hi  // hi = pmore
  41393c:	add	x16, x19, x16
  413940:	adds	x1, x1, x13
  413944:	and	x12, x12, #0xffffffff
  413948:	cset	x13, cs  // cs = hs, nlast
  41394c:	cmp	x16, x17
  413950:	cset	x4, cc  // cc = lo, ul, last
  413954:	add	x12, x12, x7, lsl #32
  413958:	adds	x1, x1, x4
  41395c:	lsr	x5, x5, #32
  413960:	cset	x4, cs  // cs = hs, nlast
  413964:	cmp	x13, #0x0
  413968:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  41396c:	add	x7, x6, x7, lsr #32
  413970:	cinc	x5, x5, ne  // ne = any
  413974:	adds	x6, x16, x12
  413978:	cset	x4, cs  // cs = hs, nlast
  41397c:	adds	x1, x1, x7
  413980:	cset	x7, cs  // cs = hs, nlast
  413984:	adds	x4, x1, x4
  413988:	cset	x1, cs  // cs = hs, nlast
  41398c:	cmp	x7, #0x0
  413990:	orr	x30, x30, x6, lsl #13
  413994:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  413998:	cinc	x1, x2, ne  // ne = any
  41399c:	cmp	x30, #0x0
  4139a0:	add	x1, x1, x5
  4139a4:	cset	x2, ne  // ne = any
  4139a8:	orr	x6, x2, x6, lsr #51
  4139ac:	orr	x6, x6, x4, lsl #13
  4139b0:	extr	x4, x1, x4, #51
  4139b4:	tbz	x1, #39, 413cc8 <_obstack_memory_used@@Base+0x1a10>
  4139b8:	ldp	x19, x20, [sp, #16]
  4139bc:	and	x1, x6, #0x1
  4139c0:	ldp	x21, x22, [sp, #32]
  4139c4:	orr	x6, x1, x6, lsr #1
  4139c8:	orr	x6, x6, x4, lsl #63
  4139cc:	lsr	x4, x4, #1
  4139d0:	mov	x1, #0x3fff                	// #16383
  4139d4:	add	x2, x3, x1
  4139d8:	cmp	x2, #0x0
  4139dc:	b.le	413b74 <_obstack_memory_used@@Base+0x18bc>
  4139e0:	tst	x6, #0x7
  4139e4:	b.eq	413a04 <_obstack_memory_used@@Base+0x174c>  // b.none
  4139e8:	and	x1, x11, #0xc00000
  4139ec:	orr	w0, w0, #0x10
  4139f0:	cmp	x1, #0x400, lsl #12
  4139f4:	b.eq	413dbc <_obstack_memory_used@@Base+0x1b04>  // b.none
  4139f8:	cmp	x1, #0x800, lsl #12
  4139fc:	b.eq	413d64 <_obstack_memory_used@@Base+0x1aac>  // b.none
  413a00:	cbz	x1, 413d4c <_obstack_memory_used@@Base+0x1a94>
  413a04:	tbz	x4, #52, 413a10 <_obstack_memory_used@@Base+0x1758>
  413a08:	and	x4, x4, #0xffefffffffffffff
  413a0c:	add	x2, x3, #0x4, lsl #12
  413a10:	mov	x1, #0x7ffe                	// #32766
  413a14:	cmp	x2, x1
  413a18:	b.gt	413c9c <_obstack_memory_used@@Base+0x19e4>
  413a1c:	and	w1, w2, #0x7fff
  413a20:	extr	x5, x4, x6, #3
  413a24:	ubfx	x4, x4, #3, #48
  413a28:	b	4137e8 <_obstack_memory_used@@Base+0x1530>
  413a2c:	mov	w0, w12
  413a30:	mov	w10, #0x0                   	// #0
  413a34:	mov	x4, #0xffffffffffff        	// #281474976710655
  413a38:	mov	x5, #0xffffffffffffffff    	// #-1
  413a3c:	mov	w1, #0x7fff                	// #32767
  413a40:	b	4137e8 <_obstack_memory_used@@Base+0x1530>
  413a44:	mov	w15, w10
  413a48:	mov	x13, x8
  413a4c:	b	413748 <_obstack_memory_used@@Base+0x1490>
  413a50:	orr	x5, x7, x1
  413a54:	cbz	x5, 413b5c <_obstack_memory_used@@Base+0x18a4>
  413a58:	cbz	x7, 413c78 <_obstack_memory_used@@Base+0x19c0>
  413a5c:	clz	x0, x7
  413a60:	sub	x4, x0, #0xf
  413a64:	add	w5, w4, #0x3
  413a68:	mov	w3, #0x3d                  	// #61
  413a6c:	sub	w3, w3, w4
  413a70:	lsl	x4, x7, x5
  413a74:	lsr	x3, x1, x3
  413a78:	orr	x7, x3, x4
  413a7c:	lsl	x5, x1, x5
  413a80:	lsr	x8, x2, #63
  413a84:	mov	x3, #0xffffffffffffc011    	// #-16367
  413a88:	ubfx	x4, x2, #0, #48
  413a8c:	sub	x3, x3, x0
  413a90:	and	w15, w8, #0xff
  413a94:	mov	x13, x8
  413a98:	ubfx	x9, x2, #48, #15
  413a9c:	mov	x1, #0x0                   	// #0
  413aa0:	mov	x16, #0x0                   	// #0
  413aa4:	mov	w0, #0x0                   	// #0
  413aa8:	cbnz	w9, 4136f4 <_obstack_memory_used@@Base+0x143c>
  413aac:	nop
  413ab0:	orr	x2, x4, x6
  413ab4:	cbz	x2, 413b24 <_obstack_memory_used@@Base+0x186c>
  413ab8:	cbz	x4, 413c54 <_obstack_memory_used@@Base+0x199c>
  413abc:	clz	x9, x4
  413ac0:	sub	x2, x9, #0xf
  413ac4:	add	w10, w2, #0x3
  413ac8:	mov	w8, #0x3d                  	// #61
  413acc:	sub	w8, w8, w2
  413ad0:	lsl	x2, x4, x10
  413ad4:	lsr	x8, x6, x8
  413ad8:	orr	x4, x8, x2
  413adc:	lsl	x6, x6, x10
  413ae0:	sub	x9, x3, x9
  413ae4:	mov	x10, #0xffffffffffffc011    	// #-16367
  413ae8:	mov	x2, #0x0                   	// #0
  413aec:	add	x9, x9, x10
  413af0:	b	413720 <_obstack_memory_used@@Base+0x1468>
  413af4:	orr	x5, x7, x1
  413af8:	cbnz	x5, 413b3c <_obstack_memory_used@@Base+0x1884>
  413afc:	mov	x7, #0x0                   	// #0
  413b00:	mov	x1, #0x8                   	// #8
  413b04:	mov	x3, #0x7fff                	// #32767
  413b08:	mov	x16, #0x2                   	// #2
  413b0c:	mov	w0, #0x0                   	// #0
  413b10:	b	4136dc <_obstack_memory_used@@Base+0x1424>
  413b14:	mov	w1, #0x7fff                	// #32767
  413b18:	mov	x4, #0x0                   	// #0
  413b1c:	mov	x5, #0x0                   	// #0
  413b20:	b	4137e8 <_obstack_memory_used@@Base+0x1530>
  413b24:	orr	x1, x1, #0x1
  413b28:	mov	x9, x3
  413b2c:	mov	x4, #0x0                   	// #0
  413b30:	mov	x6, #0x0                   	// #0
  413b34:	mov	x2, #0x1                   	// #1
  413b38:	b	413720 <_obstack_memory_used@@Base+0x1468>
  413b3c:	lsr	x0, x7, #47
  413b40:	mov	x5, x1
  413b44:	eor	x0, x0, #0x1
  413b48:	mov	x1, #0xc                   	// #12
  413b4c:	and	w0, w0, #0x1
  413b50:	mov	x3, #0x7fff                	// #32767
  413b54:	mov	x16, #0x3                   	// #3
  413b58:	b	4136dc <_obstack_memory_used@@Base+0x1424>
  413b5c:	mov	x7, #0x0                   	// #0
  413b60:	mov	x1, #0x4                   	// #4
  413b64:	mov	x3, #0x0                   	// #0
  413b68:	mov	x16, #0x1                   	// #1
  413b6c:	mov	w0, #0x0                   	// #0
  413b70:	b	4136dc <_obstack_memory_used@@Base+0x1424>
  413b74:	mov	x1, #0x1                   	// #1
  413b78:	sub	x2, x1, x2
  413b7c:	cmp	x2, #0x74
  413b80:	b.gt	413bf8 <_obstack_memory_used@@Base+0x1940>
  413b84:	cmp	x2, #0x3f
  413b88:	b.le	413cd8 <_obstack_memory_used@@Base+0x1a20>
  413b8c:	mov	w1, #0x80                  	// #128
  413b90:	sub	w1, w1, w2
  413b94:	cmp	x2, #0x40
  413b98:	sub	w2, w2, #0x40
  413b9c:	lsl	x1, x4, x1
  413ba0:	orr	x1, x6, x1
  413ba4:	csel	x6, x1, x6, ne  // ne = any
  413ba8:	lsr	x2, x4, x2
  413bac:	cmp	x6, #0x0
  413bb0:	cset	x5, ne  // ne = any
  413bb4:	orr	x5, x5, x2
  413bb8:	ands	x2, x5, #0x7
  413bbc:	b.eq	413d0c <_obstack_memory_used@@Base+0x1a54>  // b.none
  413bc0:	mov	x2, #0x0                   	// #0
  413bc4:	and	x11, x11, #0xc00000
  413bc8:	orr	w0, w0, #0x10
  413bcc:	cmp	x11, #0x400, lsl #12
  413bd0:	b.eq	413e1c <_obstack_memory_used@@Base+0x1b64>  // b.none
  413bd4:	cmp	x11, #0x800, lsl #12
  413bd8:	b.eq	413e30 <_obstack_memory_used@@Base+0x1b78>  // b.none
  413bdc:	cbz	x11, 413d74 <_obstack_memory_used@@Base+0x1abc>
  413be0:	tbnz	x2, #51, 413d8c <_obstack_memory_used@@Base+0x1ad4>
  413be4:	ubfx	x4, x2, #3, #48
  413be8:	extr	x5, x2, x5, #3
  413bec:	orr	w0, w0, #0x8
  413bf0:	mov	w1, #0x0                   	// #0
  413bf4:	b	413c28 <_obstack_memory_used@@Base+0x1970>
  413bf8:	orr	x5, x6, x4
  413bfc:	cbz	x5, 413c1c <_obstack_memory_used@@Base+0x1964>
  413c00:	and	x11, x11, #0xc00000
  413c04:	orr	w0, w0, #0x10
  413c08:	cmp	x11, #0x400, lsl #12
  413c0c:	sub	x5, x1, x8
  413c10:	b.eq	413c1c <_obstack_memory_used@@Base+0x1964>  // b.none
  413c14:	cmp	x11, #0x800, lsl #12
  413c18:	csel	x5, x8, xzr, eq  // eq = none
  413c1c:	orr	w0, w0, #0x8
  413c20:	mov	w1, #0x0                   	// #0
  413c24:	mov	x4, #0x0                   	// #0
  413c28:	mov	x3, #0x0                   	// #0
  413c2c:	fmov	d0, x5
  413c30:	bfxil	x3, x4, #0, #48
  413c34:	bfi	x3, x1, #48, #15
  413c38:	bfi	x3, x10, #63, #1
  413c3c:	fmov	v0.d[1], x3
  413c40:	str	q0, [sp, #48]
  413c44:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413c48:	ldr	q0, [sp, #48]
  413c4c:	ldp	x29, x30, [sp], #80
  413c50:	ret
  413c54:	clz	x9, x6
  413c58:	add	x2, x9, #0x31
  413c5c:	add	x9, x9, #0x40
  413c60:	cmp	x2, #0x3c
  413c64:	b.le	413ac4 <_obstack_memory_used@@Base+0x180c>
  413c68:	sub	w2, w2, #0x3d
  413c6c:	lsl	x4, x6, x2
  413c70:	mov	x6, #0x0                   	// #0
  413c74:	b	413ae0 <_obstack_memory_used@@Base+0x1828>
  413c78:	clz	x3, x1
  413c7c:	add	x4, x3, #0x31
  413c80:	add	x0, x3, #0x40
  413c84:	cmp	x4, #0x3c
  413c88:	b.le	413a64 <_obstack_memory_used@@Base+0x17ac>
  413c8c:	sub	w4, w4, #0x3d
  413c90:	mov	x5, #0x0                   	// #0
  413c94:	lsl	x7, x1, x4
  413c98:	b	413a80 <_obstack_memory_used@@Base+0x17c8>
  413c9c:	and	x5, x11, #0xc00000
  413ca0:	cmp	x5, #0x400, lsl #12
  413ca4:	b.eq	413da0 <_obstack_memory_used@@Base+0x1ae8>  // b.none
  413ca8:	cmp	x5, #0x800, lsl #12
  413cac:	b.eq	413d30 <_obstack_memory_used@@Base+0x1a78>  // b.none
  413cb0:	cbz	x5, 413d24 <_obstack_memory_used@@Base+0x1a6c>
  413cb4:	mov	x4, #0xffffffffffff        	// #281474976710655
  413cb8:	mov	x5, #0xffffffffffffffff    	// #-1
  413cbc:	mov	w2, #0x14                  	// #20
  413cc0:	orr	w0, w0, w2
  413cc4:	b	413c28 <_obstack_memory_used@@Base+0x1970>
  413cc8:	mov	x3, x9
  413ccc:	ldp	x19, x20, [sp, #16]
  413cd0:	ldp	x21, x22, [sp, #32]
  413cd4:	b	4139d0 <_obstack_memory_used@@Base+0x1718>
  413cd8:	mov	w1, #0x40                  	// #64
  413cdc:	sub	w1, w1, w2
  413ce0:	lsr	x3, x6, x2
  413ce4:	lsl	x6, x6, x1
  413ce8:	cmp	x6, #0x0
  413cec:	lsl	x5, x4, x1
  413cf0:	cset	x1, ne  // ne = any
  413cf4:	orr	x5, x5, x3
  413cf8:	lsr	x2, x4, x2
  413cfc:	orr	x5, x5, x1
  413d00:	tst	x5, #0x7
  413d04:	b.ne	413bc4 <_obstack_memory_used@@Base+0x190c>  // b.any
  413d08:	tbnz	x2, #51, 413e3c <_obstack_memory_used@@Base+0x1b84>
  413d0c:	ubfx	x4, x2, #3, #48
  413d10:	extr	x5, x2, x5, #3
  413d14:	mov	w1, #0x0                   	// #0
  413d18:	tbz	w11, #11, 4137e8 <_obstack_memory_used@@Base+0x1530>
  413d1c:	orr	w0, w0, #0x8
  413d20:	b	413c28 <_obstack_memory_used@@Base+0x1970>
  413d24:	mov	w1, #0x7fff                	// #32767
  413d28:	mov	x4, #0x0                   	// #0
  413d2c:	b	413cbc <_obstack_memory_used@@Base+0x1a04>
  413d30:	cmp	x8, #0x0
  413d34:	mov	w2, #0x7fff                	// #32767
  413d38:	mov	x4, #0xffffffffffff        	// #281474976710655
  413d3c:	csel	w1, w1, w2, eq  // eq = none
  413d40:	csel	x4, x4, xzr, eq  // eq = none
  413d44:	csetm	x5, eq  // eq = none
  413d48:	b	413cbc <_obstack_memory_used@@Base+0x1a04>
  413d4c:	and	x1, x6, #0xf
  413d50:	cmp	x1, #0x4
  413d54:	b.eq	413a04 <_obstack_memory_used@@Base+0x174c>  // b.none
  413d58:	adds	x6, x6, #0x4
  413d5c:	cinc	x4, x4, cs  // cs = hs, nlast
  413d60:	b	413a04 <_obstack_memory_used@@Base+0x174c>
  413d64:	cbz	x8, 413a04 <_obstack_memory_used@@Base+0x174c>
  413d68:	adds	x6, x6, #0x8
  413d6c:	cinc	x4, x4, cs  // cs = hs, nlast
  413d70:	b	413a04 <_obstack_memory_used@@Base+0x174c>
  413d74:	and	x1, x5, #0xf
  413d78:	cmp	x1, #0x4
  413d7c:	b.eq	413d88 <_obstack_memory_used@@Base+0x1ad0>  // b.none
  413d80:	adds	x5, x5, #0x4
  413d84:	cinc	x2, x2, cs  // cs = hs, nlast
  413d88:	tbz	x2, #51, 413be4 <_obstack_memory_used@@Base+0x192c>
  413d8c:	orr	w0, w0, #0x8
  413d90:	mov	w1, #0x1                   	// #1
  413d94:	mov	x4, #0x0                   	// #0
  413d98:	mov	x5, #0x0                   	// #0
  413d9c:	b	413c28 <_obstack_memory_used@@Base+0x1970>
  413da0:	cmp	x8, #0x0
  413da4:	mov	w2, #0x7fff                	// #32767
  413da8:	mov	x4, #0xffffffffffff        	// #281474976710655
  413dac:	csel	w1, w1, w2, ne  // ne = any
  413db0:	csel	x4, x4, xzr, ne  // ne = any
  413db4:	csetm	x5, ne  // ne = any
  413db8:	b	413cbc <_obstack_memory_used@@Base+0x1a04>
  413dbc:	cbnz	x8, 413a04 <_obstack_memory_used@@Base+0x174c>
  413dc0:	b	413d68 <_obstack_memory_used@@Base+0x1ab0>
  413dc4:	mov	x4, #0x2                   	// #2
  413dc8:	cmp	x1, #0xf
  413dcc:	b.ne	413df0 <_obstack_memory_used@@Base+0x1b38>  // b.any
  413dd0:	tbz	x7, #47, 413e08 <_obstack_memory_used@@Base+0x1b50>
  413dd4:	tbnz	x2, #47, 413e08 <_obstack_memory_used@@Base+0x1b50>
  413dd8:	orr	x4, x2, #0x800000000000
  413ddc:	mov	w10, w15
  413de0:	and	x4, x4, #0xffffffffffff
  413de4:	mov	x5, x6
  413de8:	mov	w1, #0x7fff                	// #32767
  413dec:	b	4137e8 <_obstack_memory_used@@Base+0x1530>
  413df0:	cmp	x1, #0xb
  413df4:	b.ne	413740 <_obstack_memory_used@@Base+0x1488>  // b.any
  413df8:	mov	x7, x2
  413dfc:	mov	x5, x6
  413e00:	mov	x16, x4
  413e04:	b	413748 <_obstack_memory_used@@Base+0x1490>
  413e08:	orr	x4, x7, #0x800000000000
  413e0c:	mov	w10, w12
  413e10:	and	x4, x4, #0xffffffffffff
  413e14:	mov	w1, #0x7fff                	// #32767
  413e18:	b	4137e8 <_obstack_memory_used@@Base+0x1530>
  413e1c:	cbnz	x8, 413d88 <_obstack_memory_used@@Base+0x1ad0>
  413e20:	adds	x5, x5, #0x8
  413e24:	cinc	x2, x2, cs  // cs = hs, nlast
  413e28:	tbnz	x2, #51, 413d8c <_obstack_memory_used@@Base+0x1ad4>
  413e2c:	b	413be4 <_obstack_memory_used@@Base+0x192c>
  413e30:	cbnz	x8, 413e20 <_obstack_memory_used@@Base+0x1b68>
  413e34:	tbnz	x2, #51, 413d8c <_obstack_memory_used@@Base+0x1ad4>
  413e38:	b	413be4 <_obstack_memory_used@@Base+0x192c>
  413e3c:	orr	w0, w0, #0x10
  413e40:	b	413d8c <_obstack_memory_used@@Base+0x1ad4>
  413e44:	mov	x2, x4
  413e48:	mov	x4, #0x3                   	// #3
  413e4c:	b	413dc8 <_obstack_memory_used@@Base+0x1b10>
  413e50:	mov	w10, w15
  413e54:	mov	x8, x13
  413e58:	b	413764 <_obstack_memory_used@@Base+0x14ac>
  413e5c:	nop
  413e60:	cbz	w0, 413ea4 <_obstack_memory_used@@Base+0x1bec>
  413e64:	mov	w0, w0
  413e68:	mov	w1, #0x403e                	// #16446
  413e6c:	clz	x3, x0
  413e70:	mov	w2, #0x402f                	// #16431
  413e74:	sub	w1, w1, w3
  413e78:	mov	x3, #0x0                   	// #0
  413e7c:	sub	w2, w2, w1
  413e80:	and	w1, w1, #0x7fff
  413e84:	lsl	x0, x0, x2
  413e88:	and	x0, x0, #0xffffffffffff
  413e8c:	mov	x2, #0x0                   	// #0
  413e90:	fmov	d0, x2
  413e94:	bfxil	x3, x0, #0, #48
  413e98:	bfi	x3, x1, #48, #16
  413e9c:	fmov	v0.d[1], x3
  413ea0:	ret
  413ea4:	mov	x0, #0x0                   	// #0
  413ea8:	mov	x3, #0x0                   	// #0
  413eac:	bfxil	x3, x0, #0, #48
  413eb0:	mov	x2, #0x0                   	// #0
  413eb4:	fmov	d0, x2
  413eb8:	mov	w1, #0x0                   	// #0
  413ebc:	bfi	x3, x1, #48, #16
  413ec0:	fmov	v0.d[1], x3
  413ec4:	ret
  413ec8:	stp	x29, x30, [sp, #-48]!
  413ecc:	mov	x29, sp
  413ed0:	str	x19, [sp, #16]
  413ed4:	str	q0, [sp, #32]
  413ed8:	ldr	x19, [sp, #32]
  413edc:	ldr	x1, [sp, #40]
  413ee0:	mrs	x0, fpcr
  413ee4:	ubfx	x3, x1, #48, #15
  413ee8:	mov	x2, x19
  413eec:	mov	x4, #0x3ffe                	// #16382
  413ef0:	ubfx	x19, x1, #0, #48
  413ef4:	cmp	x3, x4
  413ef8:	b.gt	413f24 <_obstack_memory_used@@Base+0x1c6c>
  413efc:	cbnz	x3, 413f08 <_obstack_memory_used@@Base+0x1c50>
  413f00:	orr	x19, x2, x19
  413f04:	cbz	x19, 413f14 <_obstack_memory_used@@Base+0x1c5c>
  413f08:	mov	w0, #0x10                  	// #16
  413f0c:	mov	x19, #0x0                   	// #0
  413f10:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413f14:	mov	x0, x19
  413f18:	ldr	x19, [sp, #16]
  413f1c:	ldp	x29, x30, [sp], #48
  413f20:	ret
  413f24:	lsr	x0, x1, #63
  413f28:	mov	x4, #0x403f                	// #16447
  413f2c:	and	w0, w0, #0xff
  413f30:	and	x5, x0, #0xff
  413f34:	sub	x4, x4, x5
  413f38:	cmp	x4, x3
  413f3c:	b.le	413f90 <_obstack_memory_used@@Base+0x1cd8>
  413f40:	cbnz	x5, 413fa4 <_obstack_memory_used@@Base+0x1cec>
  413f44:	mov	x1, x3
  413f48:	mov	x0, #0x406f                	// #16495
  413f4c:	sub	x3, x0, x3
  413f50:	orr	x4, x19, #0x1000000000000
  413f54:	cmp	x3, #0x3f
  413f58:	b.gt	413fb4 <_obstack_memory_used@@Base+0x1cfc>
  413f5c:	mov	w3, #0xffffbfd1            	// #-16431
  413f60:	add	w3, w1, w3
  413f64:	sub	w1, w0, w1
  413f68:	lsl	x0, x2, x3
  413f6c:	cmp	x0, #0x0
  413f70:	lsr	x19, x2, x1
  413f74:	cset	w0, ne  // ne = any
  413f78:	lsl	x4, x4, x3
  413f7c:	orr	x19, x19, x4
  413f80:	cbz	w0, 413f14 <_obstack_memory_used@@Base+0x1c5c>
  413f84:	mov	w0, #0x10                  	// #16
  413f88:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413f8c:	b	413f14 <_obstack_memory_used@@Base+0x1c5c>
  413f90:	eor	w19, w0, #0x1
  413f94:	mov	w0, #0x1                   	// #1
  413f98:	sbfx	x19, x19, #0, #1
  413f9c:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413fa0:	b	413f14 <_obstack_memory_used@@Base+0x1c5c>
  413fa4:	mov	w0, #0x1                   	// #1
  413fa8:	mov	x19, #0x0                   	// #0
  413fac:	bl	414088 <_obstack_memory_used@@Base+0x1dd0>
  413fb0:	b	413f14 <_obstack_memory_used@@Base+0x1c5c>
  413fb4:	mov	w0, #0xffffc011            	// #-16367
  413fb8:	add	w5, w1, w0
  413fbc:	mov	w0, #0x402f                	// #16431
  413fc0:	cmp	x3, #0x40
  413fc4:	sub	w1, w0, w1
  413fc8:	lsl	x0, x4, x5
  413fcc:	orr	x0, x2, x0
  413fd0:	csel	x2, x0, x2, ne  // ne = any
  413fd4:	lsr	x19, x4, x1
  413fd8:	cmp	x2, #0x0
  413fdc:	cset	w0, ne  // ne = any
  413fe0:	b	413f80 <_obstack_memory_used@@Base+0x1cc8>
  413fe4:	nop
  413fe8:	cbz	x0, 41403c <_obstack_memory_used@@Base+0x1d84>
  413fec:	clz	x2, x0
  413ff0:	mov	w1, #0x403e                	// #16446
  413ff4:	sub	w1, w1, w2
  413ff8:	mov	x2, #0x406f                	// #16495
  413ffc:	and	w4, w1, #0x7fff
  414000:	sub	x3, x2, w1, sxtw
  414004:	cmp	x3, #0x3f
  414008:	b.gt	41405c <_obstack_memory_used@@Base+0x1da4>
  41400c:	sub	w2, w2, w1
  414010:	mov	w3, #0xffffbfd1            	// #-16431
  414014:	add	w1, w1, w3
  414018:	mov	x3, #0x0                   	// #0
  41401c:	lsr	x1, x0, x1
  414020:	and	x1, x1, #0xffffffffffff
  414024:	lsl	x0, x0, x2
  414028:	fmov	d0, x0
  41402c:	bfxil	x3, x1, #0, #48
  414030:	bfi	x3, x4, #48, #16
  414034:	fmov	v0.d[1], x3
  414038:	ret
  41403c:	mov	x1, #0x0                   	// #0
  414040:	mov	x3, #0x0                   	// #0
  414044:	bfxil	x3, x1, #0, #48
  414048:	fmov	d0, x0
  41404c:	mov	w4, #0x0                   	// #0
  414050:	bfi	x3, x4, #48, #16
  414054:	fmov	v0.d[1], x3
  414058:	ret
  41405c:	mov	w2, #0x402f                	// #16431
  414060:	sub	w1, w2, w1
  414064:	mov	x3, #0x0                   	// #0
  414068:	lsl	x1, x0, x1
  41406c:	and	x1, x1, #0xffffffffffff
  414070:	mov	x0, #0x0                   	// #0
  414074:	fmov	d0, x0
  414078:	bfxil	x3, x1, #0, #48
  41407c:	bfi	x3, x4, #48, #16
  414080:	fmov	v0.d[1], x3
  414084:	ret
  414088:	tbz	w0, #0, 414098 <_obstack_memory_used@@Base+0x1de0>
  41408c:	movi	v1.2s, #0x0
  414090:	fdiv	s0, s1, s1
  414094:	mrs	x1, fpsr
  414098:	tbz	w0, #1, 4140ac <_obstack_memory_used@@Base+0x1df4>
  41409c:	fmov	s1, #1.000000000000000000e+00
  4140a0:	movi	v2.2s, #0x0
  4140a4:	fdiv	s0, s1, s2
  4140a8:	mrs	x1, fpsr
  4140ac:	tbz	w0, #2, 4140cc <_obstack_memory_used@@Base+0x1e14>
  4140b0:	mov	w2, #0xc5ae                	// #50606
  4140b4:	mov	w1, #0x7f7fffff            	// #2139095039
  4140b8:	movk	w2, #0x749d, lsl #16
  4140bc:	fmov	s1, w1
  4140c0:	fmov	s2, w2
  4140c4:	fadd	s0, s1, s2
  4140c8:	mrs	x1, fpsr
  4140cc:	tbz	w0, #3, 4140dc <_obstack_memory_used@@Base+0x1e24>
  4140d0:	movi	v1.2s, #0x80, lsl #16
  4140d4:	fmul	s0, s1, s1
  4140d8:	mrs	x1, fpsr
  4140dc:	tbz	w0, #4, 4140f4 <_obstack_memory_used@@Base+0x1e3c>
  4140e0:	mov	w0, #0x7f7fffff            	// #2139095039
  4140e4:	fmov	s2, #1.000000000000000000e+00
  4140e8:	fmov	s1, w0
  4140ec:	fsub	s0, s1, s2
  4140f0:	mrs	x0, fpsr
  4140f4:	ret
  4140f8:	stp	x29, x30, [sp, #-64]!
  4140fc:	mov	x29, sp
  414100:	stp	x19, x20, [sp, #16]
  414104:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x16d48>
  414108:	add	x20, x20, #0xde0
  41410c:	stp	x21, x22, [sp, #32]
  414110:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x16d48>
  414114:	add	x21, x21, #0xdd8
  414118:	sub	x20, x20, x21
  41411c:	mov	w22, w0
  414120:	stp	x23, x24, [sp, #48]
  414124:	mov	x23, x1
  414128:	mov	x24, x2
  41412c:	bl	402480 <mbrtowc@plt-0x40>
  414130:	cmp	xzr, x20, asr #3
  414134:	b.eq	414160 <_obstack_memory_used@@Base+0x1ea8>  // b.none
  414138:	asr	x20, x20, #3
  41413c:	mov	x19, #0x0                   	// #0
  414140:	ldr	x3, [x21, x19, lsl #3]
  414144:	mov	x2, x24
  414148:	add	x19, x19, #0x1
  41414c:	mov	x1, x23
  414150:	mov	w0, w22
  414154:	blr	x3
  414158:	cmp	x20, x19
  41415c:	b.ne	414140 <_obstack_memory_used@@Base+0x1e88>  // b.any
  414160:	ldp	x19, x20, [sp, #16]
  414164:	ldp	x21, x22, [sp, #32]
  414168:	ldp	x23, x24, [sp, #48]
  41416c:	ldp	x29, x30, [sp], #64
  414170:	ret
  414174:	nop
  414178:	ret
  41417c:	nop
  414180:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x17d48>
  414184:	mov	x1, #0x0                   	// #0
  414188:	ldr	x2, [x2, #896]
  41418c:	b	402640 <__cxa_atexit@plt>
  414190:	mov	x2, x1
  414194:	mov	x1, x0
  414198:	mov	w0, #0x0                   	// #0
  41419c:	b	402b50 <__xstat@plt>
  4141a0:	mov	x2, x1
  4141a4:	mov	w1, w0
  4141a8:	mov	w0, #0x0                   	// #0
  4141ac:	b	402ab0 <__fxstat@plt>
  4141b0:	mov	x2, x1
  4141b4:	mov	x1, x0
  4141b8:	mov	w0, #0x0                   	// #0
  4141bc:	b	402a40 <__lxstat@plt>
  4141c0:	mov	x4, x1
  4141c4:	mov	x5, x2
  4141c8:	mov	w1, w0
  4141cc:	mov	x2, x4
  4141d0:	mov	w0, #0x0                   	// #0
  4141d4:	mov	w4, w3
  4141d8:	mov	x3, x5
  4141dc:	b	402ba0 <__fxstatat@plt>

Disassembly of section .fini:

00000000004141e0 <.fini>:
  4141e0:	stp	x29, x30, [sp, #-16]!
  4141e4:	mov	x29, sp
  4141e8:	ldp	x29, x30, [sp], #16
  4141ec:	ret
