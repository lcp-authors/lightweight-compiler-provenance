
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sulogin-shell_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210f50 <_start>:
  210f50:	mov	x29, #0x0                   	// #0
  210f54:	mov	x30, #0x0                   	// #0
  210f58:	mov	x5, x0
  210f5c:	ldr	x1, [sp]
  210f60:	add	x2, sp, #0x8
  210f64:	mov	x6, sp
  210f68:	movz	x0, #0x0, lsl #48
  210f6c:	movk	x0, #0x0, lsl #32
  210f70:	movk	x0, #0x21, lsl #16
  210f74:	movk	x0, #0x10a0
  210f78:	movz	x3, #0x0, lsl #48
  210f7c:	movk	x3, #0x0, lsl #32
  210f80:	movk	x3, #0x21, lsl #16
  210f84:	movk	x3, #0x1540
  210f88:	movz	x4, #0x0, lsl #48
  210f8c:	movk	x4, #0x0, lsl #32
  210f90:	movk	x4, #0x21, lsl #16
  210f94:	movk	x4, #0x15c0
  210f98:	bl	211610 <__libc_start_main@plt>
  210f9c:	bl	211620 <abort@plt>

0000000000210fa0 <call_weak_fn>:
  210fa0:	adrp	x0, 221000 <sd_bus_message_unref@plt+0xf8a0>
  210fa4:	ldr	x0, [x0, #2384]
  210fa8:	cbz	x0, 210fb0 <call_weak_fn+0x10>
  210fac:	b	211630 <__gmon_start__@plt>
  210fb0:	ret

0000000000210fb4 <deregister_tm_clones>:
  210fb4:	adrp	x0, 231000 <_DYNAMIC+0xf880>
  210fb8:	add	x0, x0, #0xa20
  210fbc:	adrp	x1, 231000 <_DYNAMIC+0xf880>
  210fc0:	add	x1, x1, #0xa20
  210fc4:	cmp	x0, x1
  210fc8:	b.eq	210ffc <deregister_tm_clones+0x48>  // b.none
  210fcc:	stp	x29, x30, [sp, #-32]!
  210fd0:	mov	x29, sp
  210fd4:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xb68>
  210fd8:	ldr	x0, [x0, #2904]
  210fdc:	str	x0, [sp, #24]
  210fe0:	mov	x1, x0
  210fe4:	cbz	x1, 210ff4 <deregister_tm_clones+0x40>
  210fe8:	adrp	x0, 231000 <_DYNAMIC+0xf880>
  210fec:	add	x0, x0, #0xa20
  210ff0:	blr	x1
  210ff4:	ldp	x29, x30, [sp], #32
  210ff8:	ret
  210ffc:	ret

0000000000211000 <register_tm_clones>:
  211000:	adrp	x0, 231000 <_DYNAMIC+0xf880>
  211004:	add	x0, x0, #0xa20
  211008:	adrp	x1, 231000 <_DYNAMIC+0xf880>
  21100c:	add	x1, x1, #0xa20
  211010:	sub	x0, x0, x1
  211014:	lsr	x1, x0, #63
  211018:	add	x0, x1, x0, asr #3
  21101c:	cmp	xzr, x0, asr #1
  211020:	b.eq	211058 <register_tm_clones+0x58>  // b.none
  211024:	stp	x29, x30, [sp, #-32]!
  211028:	mov	x29, sp
  21102c:	asr	x1, x0, #1
  211030:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xb68>
  211034:	ldr	x0, [x0, #2912]
  211038:	str	x0, [sp, #24]
  21103c:	mov	x2, x0
  211040:	cbz	x2, 211050 <register_tm_clones+0x50>
  211044:	adrp	x0, 231000 <_DYNAMIC+0xf880>
  211048:	add	x0, x0, #0xa20
  21104c:	blr	x2
  211050:	ldp	x29, x30, [sp], #32
  211054:	ret
  211058:	ret

000000000021105c <__do_global_dtors_aux>:
  21105c:	adrp	x0, 231000 <_DYNAMIC+0xf880>
  211060:	ldrb	w0, [x0, #2592]
  211064:	cbnz	w0, 211088 <__do_global_dtors_aux+0x2c>
  211068:	stp	x29, x30, [sp, #-16]!
  21106c:	mov	x29, sp
  211070:	bl	210fb4 <deregister_tm_clones>
  211074:	adrp	x0, 231000 <_DYNAMIC+0xf880>
  211078:	mov	w1, #0x1                   	// #1
  21107c:	strb	w1, [x0, #2592]
  211080:	ldp	x29, x30, [sp], #16
  211084:	ret
  211088:	ret

000000000021108c <frame_dummy>:
  21108c:	stp	x29, x30, [sp, #-16]!
  211090:	mov	x29, sp
  211094:	bl	211000 <register_tm_clones>
  211098:	ldp	x29, x30, [sp], #16
  21109c:	ret

00000000002110a0 <main>:
  2110a0:	sub	sp, sp, #0x50
  2110a4:	adrp	x8, 200000 <bus_standard_errors_copy_0-0xb68>
  2110a8:	add	x8, x8, #0xb70
  2110ac:	ldr	q0, [x8]
  2110b0:	ldr	x8, [x8, #16]
  2110b4:	stp	x29, x30, [sp, #48]
  2110b8:	stp	x20, x19, [sp, #64]
  2110bc:	add	x29, sp, #0x30
  2110c0:	mov	x19, x1
  2110c4:	mov	w20, w0
  2110c8:	str	q0, [sp, #16]
  2110cc:	str	x8, [sp, #32]
  2110d0:	str	xzr, [sp, #8]
  2110d4:	bl	211640 <log_setup_service@plt>
  2110d8:	cmp	w20, #0x1
  2110dc:	b.le	2110e8 <main+0x48>
  2110e0:	ldr	x0, [x19, #8]
  2110e4:	b	2110f0 <main+0x50>
  2110e8:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xb68>
  2110ec:	add	x0, x0, #0xde0
  2110f0:	bl	2111bc <print_mode>
  2110f4:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xb68>
  2110f8:	add	x0, x0, #0xde1
  2110fc:	bl	211650 <getenv_bool@plt>
  211100:	cmp	w0, #0x1
  211104:	b.lt	211114 <main+0x74>  // b.tstop
  211108:	adrp	x8, 200000 <bus_standard_errors_copy_0-0xb68>
  21110c:	add	x8, x8, #0xba7
  211110:	str	x8, [sp, #24]
  211114:	add	x0, sp, #0x10
  211118:	bl	2111e8 <fork_wait>
  21111c:	add	x0, sp, #0x8
  211120:	bl	211660 <bus_connect_system_systemd@plt>
  211124:	tbnz	w0, #31, 211140 <main+0xa0>
  211128:	ldr	x0, [sp, #8]
  21112c:	bl	211278 <reload_manager>
  211130:	ldr	x0, [sp, #8]
  211134:	bl	2113cc <start_default_target>
  211138:	lsr	w20, w0, #31
  21113c:	b	211184 <main+0xe4>
  211140:	mov	w19, w0
  211144:	mov	w0, wzr
  211148:	bl	211670 <log_get_max_level_realm@plt>
  21114c:	cmp	w0, #0x4
  211150:	mov	w20, wzr
  211154:	b.lt	211184 <main+0xe4>  // b.tstop
  211158:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  21115c:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  211160:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  211164:	add	x2, x2, #0xda5
  211168:	add	x4, x4, #0xd56
  21116c:	add	x5, x5, #0xdf7
  211170:	mov	w0, #0x4                   	// #4
  211174:	mov	w3, #0x71                  	// #113
  211178:	mov	w1, w19
  21117c:	bl	211680 <log_internal_realm@plt>
  211180:	mov	w20, wzr
  211184:	add	x0, sp, #0x8
  211188:	bl	2111a0 <sd_bus_flush_close_unrefp>
  21118c:	mov	w0, w20
  211190:	ldp	x20, x19, [sp, #64]
  211194:	ldp	x29, x30, [sp, #48]
  211198:	add	sp, sp, #0x50
  21119c:	ret

00000000002111a0 <sd_bus_flush_close_unrefp>:
  2111a0:	stp	x29, x30, [sp, #-16]!
  2111a4:	ldr	x0, [x0]
  2111a8:	mov	x29, sp
  2111ac:	cbz	x0, 2111b4 <sd_bus_flush_close_unrefp+0x14>
  2111b0:	bl	211690 <sd_bus_flush_close_unref@plt>
  2111b4:	ldp	x29, x30, [sp], #16
  2111b8:	ret

00000000002111bc <print_mode>:
  2111bc:	stp	x29, x30, [sp, #-16]!
  2111c0:	mov	x1, x0
  2111c4:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xb68>
  2111c8:	add	x0, x0, #0xc84
  2111cc:	mov	x29, sp
  2111d0:	bl	2116a0 <printf@plt>
  2111d4:	adrp	x8, 231000 <_DYNAMIC+0xf880>
  2111d8:	ldr	x0, [x8, #2600]
  2111dc:	bl	2116b0 <fflush@plt>
  2111e0:	ldp	x29, x30, [sp], #16
  2111e4:	ret

00000000002111e8 <fork_wait>:
  2111e8:	stp	x29, x30, [sp, #-32]!
  2111ec:	mov	x29, sp
  2111f0:	str	x19, [sp, #16]
  2111f4:	mov	x19, x0
  2111f8:	add	x0, x29, #0x1c
  2111fc:	bl	2114f4 <safe_fork>
  211200:	tbnz	w0, #31, 21121c <fork_wait+0x34>
  211204:	mov	w8, w0
  211208:	ldr	x0, [x19]
  21120c:	cbz	w8, 211228 <fork_wait+0x40>
  211210:	ldr	w1, [x29, #28]
  211214:	mov	w2, #0x1                   	// #1
  211218:	bl	2116c0 <wait_for_terminate_and_check@plt>
  21121c:	ldr	x19, [sp, #16]
  211220:	ldp	x29, x30, [sp], #32
  211224:	ret
  211228:	mov	x1, x19
  21122c:	bl	2116d0 <execv@plt>
  211230:	mov	w0, wzr
  211234:	bl	211670 <log_get_max_level_realm@plt>
  211238:	cmp	w0, #0x3
  21123c:	b.lt	211270 <fork_wait+0x88>  // b.tstop
  211240:	bl	2116e0 <__errno_location@plt>
  211244:	ldr	w1, [x0]
  211248:	ldr	x6, [x19]
  21124c:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  211250:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  211254:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  211258:	add	x2, x2, #0xda5
  21125c:	add	x4, x4, #0xd2d
  211260:	add	x5, x5, #0xdc7
  211264:	mov	w0, #0x3                   	// #3
  211268:	mov	w3, #0x4e                  	// #78
  21126c:	bl	211680 <log_internal_realm@plt>
  211270:	mov	w0, #0x1                   	// #1
  211274:	bl	2116f0 <_exit@plt>

0000000000211278 <reload_manager>:
  211278:	sub	sp, sp, #0x40
  21127c:	stp	x20, x19, [sp, #48]
  211280:	mov	x19, x0
  211284:	mov	w0, wzr
  211288:	stp	x29, x30, [sp, #32]
  21128c:	add	x29, sp, #0x20
  211290:	stp	xzr, xzr, [sp, #8]
  211294:	str	xzr, [sp, #24]
  211298:	str	xzr, [sp]
  21129c:	bl	211670 <log_get_max_level_realm@plt>
  2112a0:	cmp	w0, #0x6
  2112a4:	b.lt	2112d0 <reload_manager+0x58>  // b.tstop
  2112a8:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  2112ac:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  2112b0:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  2112b4:	add	x2, x2, #0xda5
  2112b8:	add	x4, x4, #0xc1a
  2112bc:	add	x5, x5, #0xbd0
  2112c0:	mov	w0, #0x6                   	// #6
  2112c4:	mov	w3, #0x17                  	// #23
  2112c8:	mov	w1, wzr
  2112cc:	bl	211680 <log_internal_realm@plt>
  2112d0:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  2112d4:	adrp	x3, 200000 <bus_standard_errors_copy_0-0xb68>
  2112d8:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  2112dc:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  2112e0:	add	x2, x2, #0xc01
  2112e4:	add	x3, x3, #0xc4a
  2112e8:	add	x4, x4, #0xbaf
  2112ec:	add	x5, x5, #0xba0
  2112f0:	mov	x1, sp
  2112f4:	mov	x0, x19
  2112f8:	bl	211700 <sd_bus_message_new_method_call@plt>
  2112fc:	tbnz	w0, #31, 211370 <reload_manager+0xf8>
  211300:	ldr	x1, [sp]
  211304:	mov	w2, #0x9500                	// #38144
  211308:	add	x3, sp, #0x8
  21130c:	movk	w2, #0xaba, lsl #16
  211310:	mov	x0, x19
  211314:	mov	x4, xzr
  211318:	bl	211710 <sd_bus_call@plt>
  21131c:	tbz	w0, #31, 2113ac <reload_manager+0x134>
  211320:	mov	w19, w0
  211324:	mov	w0, wzr
  211328:	bl	211670 <log_get_max_level_realm@plt>
  21132c:	cmp	w0, #0x3
  211330:	b.lt	2113ac <reload_manager+0x134>  // b.tstop
  211334:	add	x0, sp, #0x8
  211338:	mov	w1, w19
  21133c:	bl	211720 <bus_error_message@plt>
  211340:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  211344:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  211348:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  21134c:	mov	x6, x0
  211350:	add	x2, x2, #0xda5
  211354:	add	x4, x4, #0xc1a
  211358:	add	x5, x5, #0xd86
  21135c:	mov	w0, #0x3                   	// #3
  211360:	mov	w3, #0x29                  	// #41
  211364:	mov	w1, w19
  211368:	bl	211680 <log_internal_realm@plt>
  21136c:	b	2113ac <reload_manager+0x134>
  211370:	mov	w20, w0
  211374:	mov	w0, wzr
  211378:	bl	211670 <log_get_max_level_realm@plt>
  21137c:	cmp	w0, #0x3
  211380:	b.lt	2113ac <reload_manager+0x134>  // b.tstop
  211384:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  211388:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  21138c:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  211390:	add	x2, x2, #0xda5
  211394:	add	x4, x4, #0xc1a
  211398:	add	x5, x5, #0xc29
  21139c:	mov	w0, #0x3                   	// #3
  2113a0:	mov	w3, #0x21                  	// #33
  2113a4:	mov	w1, w20
  2113a8:	bl	211680 <log_internal_realm@plt>
  2113ac:	mov	x0, sp
  2113b0:	bl	211520 <sd_bus_message_unrefp>
  2113b4:	add	x0, sp, #0x8
  2113b8:	bl	211730 <sd_bus_error_free@plt>
  2113bc:	ldp	x20, x19, [sp, #48]
  2113c0:	ldp	x29, x30, [sp, #32]
  2113c4:	add	sp, sp, #0x40
  2113c8:	ret

00000000002113cc <start_default_target>:
  2113cc:	sub	sp, sp, #0x50
  2113d0:	str	x19, [sp, #64]
  2113d4:	mov	x19, x0
  2113d8:	mov	w0, wzr
  2113dc:	stp	x29, x30, [sp, #48]
  2113e0:	add	x29, sp, #0x30
  2113e4:	stp	xzr, xzr, [sp, #24]
  2113e8:	str	xzr, [sp, #40]
  2113ec:	bl	211670 <log_get_max_level_realm@plt>
  2113f0:	cmp	w0, #0x6
  2113f4:	b.lt	211420 <start_default_target+0x54>  // b.tstop
  2113f8:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  2113fc:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  211400:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  211404:	add	x2, x2, #0xda5
  211408:	add	x4, x4, #0xd41
  21140c:	add	x5, x5, #0xb88
  211410:	mov	w0, #0x6                   	// #6
  211414:	mov	w3, #0x32                  	// #50
  211418:	mov	w1, wzr
  21141c:	bl	211680 <log_internal_realm@plt>
  211420:	adrp	x8, 200000 <bus_standard_errors_copy_0-0xb68>
  211424:	adrp	x9, 200000 <bus_standard_errors_copy_0-0xb68>
  211428:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xb68>
  21142c:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  211430:	adrp	x3, 200000 <bus_standard_errors_copy_0-0xb68>
  211434:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  211438:	adrp	x7, 200000 <bus_standard_errors_copy_0-0xb68>
  21143c:	add	x8, x8, #0xd5b
  211440:	add	x9, x9, #0xc75
  211444:	add	x1, x1, #0xc01
  211448:	add	x2, x2, #0xc4a
  21144c:	add	x3, x3, #0xbaf
  211450:	add	x4, x4, #0xd37
  211454:	add	x7, x7, #0xc64
  211458:	add	x5, sp, #0x18
  21145c:	mov	x0, x19
  211460:	mov	x6, xzr
  211464:	stp	x9, x8, [sp]
  211468:	bl	211740 <sd_bus_call_method@plt>
  21146c:	tbnz	w0, #31, 211478 <start_default_target+0xac>
  211470:	mov	w19, wzr
  211474:	b	2114d8 <start_default_target+0x10c>
  211478:	mov	w19, w0
  21147c:	mov	w0, wzr
  211480:	bl	211670 <log_get_max_level_realm@plt>
  211484:	cmp	w0, #0x3
  211488:	b.lt	2114cc <start_default_target+0x100>  // b.tstop
  21148c:	add	x0, sp, #0x18
  211490:	mov	w1, w19
  211494:	bl	211720 <bus_error_message@plt>
  211498:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xb68>
  21149c:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xb68>
  2114a0:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xb68>
  2114a4:	mov	x6, x0
  2114a8:	add	x2, x2, #0xda5
  2114ac:	add	x4, x4, #0xd41
  2114b0:	add	x5, x5, #0xd63
  2114b4:	mov	w0, #0x3                   	// #3
  2114b8:	mov	w3, #0x3f                  	// #63
  2114bc:	mov	w1, w19
  2114c0:	bl	211680 <log_internal_realm@plt>
  2114c4:	mov	w19, w0
  2114c8:	b	2114d8 <start_default_target+0x10c>
  2114cc:	mov	w8, wzr
  2114d0:	neg	w9, w19
  2114d4:	sub	w19, w8, w9, uxtb
  2114d8:	add	x0, sp, #0x18
  2114dc:	bl	211730 <sd_bus_error_free@plt>
  2114e0:	mov	w0, w19
  2114e4:	ldr	x19, [sp, #64]
  2114e8:	ldp	x29, x30, [sp, #48]
  2114ec:	add	sp, sp, #0x50
  2114f0:	ret

00000000002114f4 <safe_fork>:
  2114f4:	stp	x29, x30, [sp, #-16]!
  2114f8:	mov	x4, x0
  2114fc:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xb68>
  211500:	add	x0, x0, #0xbf7
  211504:	mov	w3, #0x225                 	// #549
  211508:	mov	x1, xzr
  21150c:	mov	x2, xzr
  211510:	mov	x29, sp
  211514:	bl	211750 <safe_fork_full@plt>
  211518:	ldp	x29, x30, [sp], #16
  21151c:	ret

0000000000211520 <sd_bus_message_unrefp>:
  211520:	stp	x29, x30, [sp, #-16]!
  211524:	ldr	x0, [x0]
  211528:	mov	x29, sp
  21152c:	cbz	x0, 211534 <sd_bus_message_unrefp+0x14>
  211530:	bl	211760 <sd_bus_message_unref@plt>
  211534:	ldp	x29, x30, [sp], #16
  211538:	ret
  21153c:	udf	#0

0000000000211540 <__libc_csu_init>:
  211540:	stp	x29, x30, [sp, #-64]!
  211544:	mov	x29, sp
  211548:	stp	x19, x20, [sp, #16]
  21154c:	adrp	x20, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211550:	add	x20, x20, #0x780
  211554:	stp	x21, x22, [sp, #32]
  211558:	adrp	x21, 221000 <sd_bus_message_unref@plt+0xf8a0>
  21155c:	add	x21, x21, #0x778
  211560:	sub	x20, x20, x21
  211564:	mov	w22, w0
  211568:	stp	x23, x24, [sp, #48]
  21156c:	mov	x23, x1
  211570:	mov	x24, x2
  211574:	bl	2115c4 <_init>
  211578:	cmp	xzr, x20, asr #3
  21157c:	b.eq	2115a8 <__libc_csu_init+0x68>  // b.none
  211580:	asr	x20, x20, #3
  211584:	mov	x19, #0x0                   	// #0
  211588:	ldr	x3, [x21, x19, lsl #3]
  21158c:	mov	x2, x24
  211590:	add	x19, x19, #0x1
  211594:	mov	x1, x23
  211598:	mov	w0, w22
  21159c:	blr	x3
  2115a0:	cmp	x20, x19
  2115a4:	b.ne	211588 <__libc_csu_init+0x48>  // b.any
  2115a8:	ldp	x19, x20, [sp, #16]
  2115ac:	ldp	x21, x22, [sp, #32]
  2115b0:	ldp	x23, x24, [sp, #48]
  2115b4:	ldp	x29, x30, [sp], #64
  2115b8:	ret
  2115bc:	nop

00000000002115c0 <__libc_csu_fini>:
  2115c0:	ret

Disassembly of section .init:

00000000002115c4 <_init>:
  2115c4:	stp	x29, x30, [sp, #-16]!
  2115c8:	mov	x29, sp
  2115cc:	bl	210fa0 <call_weak_fn>
  2115d0:	ldp	x29, x30, [sp], #16
  2115d4:	ret

Disassembly of section .fini:

00000000002115d8 <_fini>:
  2115d8:	stp	x29, x30, [sp, #-16]!
  2115dc:	mov	x29, sp
  2115e0:	ldp	x29, x30, [sp], #16
  2115e4:	ret

Disassembly of section .plt:

00000000002115f0 <__libc_start_main@plt-0x20>:
  2115f0:	stp	x16, x30, [sp, #-16]!
  2115f4:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2115f8:	ldr	x17, [x16, #2408]
  2115fc:	add	x16, x16, #0x968
  211600:	br	x17
  211604:	nop
  211608:	nop
  21160c:	nop

0000000000211610 <__libc_start_main@plt>:
  211610:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211614:	ldr	x17, [x16, #2416]
  211618:	add	x16, x16, #0x970
  21161c:	br	x17

0000000000211620 <abort@plt>:
  211620:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211624:	ldr	x17, [x16, #2424]
  211628:	add	x16, x16, #0x978
  21162c:	br	x17

0000000000211630 <__gmon_start__@plt>:
  211630:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211634:	ldr	x17, [x16, #2432]
  211638:	add	x16, x16, #0x980
  21163c:	br	x17

0000000000211640 <log_setup_service@plt>:
  211640:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211644:	ldr	x17, [x16, #2440]
  211648:	add	x16, x16, #0x988
  21164c:	br	x17

0000000000211650 <getenv_bool@plt>:
  211650:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211654:	ldr	x17, [x16, #2448]
  211658:	add	x16, x16, #0x990
  21165c:	br	x17

0000000000211660 <bus_connect_system_systemd@plt>:
  211660:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211664:	ldr	x17, [x16, #2456]
  211668:	add	x16, x16, #0x998
  21166c:	br	x17

0000000000211670 <log_get_max_level_realm@plt>:
  211670:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211674:	ldr	x17, [x16, #2464]
  211678:	add	x16, x16, #0x9a0
  21167c:	br	x17

0000000000211680 <log_internal_realm@plt>:
  211680:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211684:	ldr	x17, [x16, #2472]
  211688:	add	x16, x16, #0x9a8
  21168c:	br	x17

0000000000211690 <sd_bus_flush_close_unref@plt>:
  211690:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211694:	ldr	x17, [x16, #2480]
  211698:	add	x16, x16, #0x9b0
  21169c:	br	x17

00000000002116a0 <printf@plt>:
  2116a0:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2116a4:	ldr	x17, [x16, #2488]
  2116a8:	add	x16, x16, #0x9b8
  2116ac:	br	x17

00000000002116b0 <fflush@plt>:
  2116b0:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2116b4:	ldr	x17, [x16, #2496]
  2116b8:	add	x16, x16, #0x9c0
  2116bc:	br	x17

00000000002116c0 <wait_for_terminate_and_check@plt>:
  2116c0:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2116c4:	ldr	x17, [x16, #2504]
  2116c8:	add	x16, x16, #0x9c8
  2116cc:	br	x17

00000000002116d0 <execv@plt>:
  2116d0:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2116d4:	ldr	x17, [x16, #2512]
  2116d8:	add	x16, x16, #0x9d0
  2116dc:	br	x17

00000000002116e0 <__errno_location@plt>:
  2116e0:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2116e4:	ldr	x17, [x16, #2520]
  2116e8:	add	x16, x16, #0x9d8
  2116ec:	br	x17

00000000002116f0 <_exit@plt>:
  2116f0:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  2116f4:	ldr	x17, [x16, #2528]
  2116f8:	add	x16, x16, #0x9e0
  2116fc:	br	x17

0000000000211700 <sd_bus_message_new_method_call@plt>:
  211700:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211704:	ldr	x17, [x16, #2536]
  211708:	add	x16, x16, #0x9e8
  21170c:	br	x17

0000000000211710 <sd_bus_call@plt>:
  211710:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211714:	ldr	x17, [x16, #2544]
  211718:	add	x16, x16, #0x9f0
  21171c:	br	x17

0000000000211720 <bus_error_message@plt>:
  211720:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211724:	ldr	x17, [x16, #2552]
  211728:	add	x16, x16, #0x9f8
  21172c:	br	x17

0000000000211730 <sd_bus_error_free@plt>:
  211730:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211734:	ldr	x17, [x16, #2560]
  211738:	add	x16, x16, #0xa00
  21173c:	br	x17

0000000000211740 <sd_bus_call_method@plt>:
  211740:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211744:	ldr	x17, [x16, #2568]
  211748:	add	x16, x16, #0xa08
  21174c:	br	x17

0000000000211750 <safe_fork_full@plt>:
  211750:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211754:	ldr	x17, [x16, #2576]
  211758:	add	x16, x16, #0xa10
  21175c:	br	x17

0000000000211760 <sd_bus_message_unref@plt>:
  211760:	adrp	x16, 221000 <sd_bus_message_unref@plt+0xf8a0>
  211764:	ldr	x17, [x16, #2584]
  211768:	add	x16, x16, #0xa18
  21176c:	br	x17
