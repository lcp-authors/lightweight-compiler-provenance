
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_socket.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004098 <.init>:
    4098:	stp	x29, x30, [sp, #-16]!
    409c:	mov	x29, sp
    40a0:	bl	48a0 <PySequence_Fast@plt+0x10>
    40a4:	ldp	x29, x30, [sp], #16
    40a8:	ret

Disassembly of section .plt:

00000000000040b0 <memcpy@plt-0x20>:
    40b0:	stp	x16, x30, [sp, #-16]!
    40b4:	adrp	x16, 27000 <PyInit__socket@@Base+0x1991c>
    40b8:	ldr	x17, [x16, #4088]
    40bc:	add	x16, x16, #0xff8
    40c0:	br	x17
    40c4:	nop
    40c8:	nop
    40cc:	nop

00000000000040d0 <memcpy@plt>:
    40d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16]
    40d8:	add	x16, x16, #0x0
    40dc:	br	x17

00000000000040e0 <PyUnicode_FromFormat@plt>:
    40e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #8]
    40e8:	add	x16, x16, #0x8
    40ec:	br	x17

00000000000040f0 <gai_strerror@plt>:
    40f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #16]
    40f8:	add	x16, x16, #0x10
    40fc:	br	x17

0000000000004100 <PyList_New@plt>:
    4100:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #24]
    4108:	add	x16, x16, #0x18
    410c:	br	x17

0000000000004110 <_PyUnicode_Ready@plt>:
    4110:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #32]
    4118:	add	x16, x16, #0x20
    411c:	br	x17

0000000000004120 <sendto@plt>:
    4120:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #40]
    4128:	add	x16, x16, #0x28
    412c:	br	x17

0000000000004130 <recvmsg@plt>:
    4130:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #48]
    4138:	add	x16, x16, #0x30
    413c:	br	x17

0000000000004140 <freeaddrinfo@plt>:
    4140:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #56]
    4148:	add	x16, x16, #0x38
    414c:	br	x17

0000000000004150 <strlen@plt>:
    4150:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #64]
    4158:	add	x16, x16, #0x40
    415c:	br	x17

0000000000004160 <getpeername@plt>:
    4160:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #72]
    4168:	add	x16, x16, #0x48
    416c:	br	x17

0000000000004170 <PyByteArray_Size@plt>:
    4170:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #80]
    4178:	add	x16, x16, #0x50
    417c:	br	x17

0000000000004180 <PyModule_AddIntConstant@plt>:
    4180:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #88]
    4188:	add	x16, x16, #0x58
    418c:	br	x17

0000000000004190 <__h_errno_location@plt>:
    4190:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #96]
    4198:	add	x16, x16, #0x60
    419c:	br	x17

00000000000041a0 <__cmsg_nxthdr@plt>:
    41a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #104]
    41a8:	add	x16, x16, #0x68
    41ac:	br	x17

00000000000041b0 <listen@plt>:
    41b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #112]
    41b8:	add	x16, x16, #0x70
    41bc:	br	x17

00000000000041c0 <_PyBytes_Resize@plt>:
    41c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #120]
    41c8:	add	x16, x16, #0x78
    41cc:	br	x17

00000000000041d0 <htonl@plt>:
    41d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #128]
    41d8:	add	x16, x16, #0x80
    41dc:	br	x17

00000000000041e0 <PyErr_Restore@plt>:
    41e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #136]
    41e8:	add	x16, x16, #0x88
    41ec:	br	x17

00000000000041f0 <getnameinfo@plt>:
    41f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #144]
    41f8:	add	x16, x16, #0x90
    41fc:	br	x17

0000000000004200 <strnlen@plt>:
    4200:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #152]
    4208:	add	x16, x16, #0x98
    420c:	br	x17

0000000000004210 <PyEval_RestoreThread@plt>:
    4210:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #160]
    4218:	add	x16, x16, #0xa0
    421c:	br	x17

0000000000004220 <PyMem_Free@plt>:
    4220:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #168]
    4228:	add	x16, x16, #0xa8
    422c:	br	x17

0000000000004230 <PyErr_SetFromErrno@plt>:
    4230:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #176]
    4238:	add	x16, x16, #0xb0
    423c:	br	x17

0000000000004240 <bind@plt>:
    4240:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #184]
    4248:	add	x16, x16, #0xb8
    424c:	br	x17

0000000000004250 <ntohl@plt>:
    4250:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4254:	ldr	x17, [x16, #192]
    4258:	add	x16, x16, #0xc0
    425c:	br	x17

0000000000004260 <PyBuffer_Release@plt>:
    4260:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4264:	ldr	x17, [x16, #200]
    4268:	add	x16, x16, #0xc8
    426c:	br	x17

0000000000004270 <__cxa_finalize@plt>:
    4270:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4274:	ldr	x17, [x16, #208]
    4278:	add	x16, x16, #0xd0
    427c:	br	x17

0000000000004280 <PyBytes_FromStringAndSize@plt>:
    4280:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4284:	ldr	x17, [x16, #216]
    4288:	add	x16, x16, #0xd8
    428c:	br	x17

0000000000004290 <_Py_set_inheritable@plt>:
    4290:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4294:	ldr	x17, [x16, #224]
    4298:	add	x16, x16, #0xe0
    429c:	br	x17

00000000000042a0 <getprotobyname@plt>:
    42a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42a4:	ldr	x17, [x16, #232]
    42a8:	add	x16, x16, #0xe8
    42ac:	br	x17

00000000000042b0 <inet_ntoa@plt>:
    42b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42b4:	ldr	x17, [x16, #240]
    42b8:	add	x16, x16, #0xf0
    42bc:	br	x17

00000000000042c0 <PyErr_WarnEx@plt>:
    42c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42c4:	ldr	x17, [x16, #248]
    42c8:	add	x16, x16, #0xf8
    42cc:	br	x17

00000000000042d0 <gethostbyname_r@plt>:
    42d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42d4:	ldr	x17, [x16, #256]
    42d8:	add	x16, x16, #0x100
    42dc:	br	x17

00000000000042e0 <_Py_Dealloc@plt>:
    42e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42e4:	ldr	x17, [x16, #264]
    42e8:	add	x16, x16, #0x108
    42ec:	br	x17

00000000000042f0 <PyErr_NoMemory@plt>:
    42f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    42f4:	ldr	x17, [x16, #272]
    42f8:	add	x16, x16, #0x110
    42fc:	br	x17

0000000000004300 <PyErr_SetObject@plt>:
    4300:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4304:	ldr	x17, [x16, #280]
    4308:	add	x16, x16, #0x118
    430c:	br	x17

0000000000004310 <gethostbyaddr_r@plt>:
    4310:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4314:	ldr	x17, [x16, #288]
    4318:	add	x16, x16, #0x120
    431c:	br	x17

0000000000004320 <PyLong_FromSize_t@plt>:
    4320:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4324:	ldr	x17, [x16, #296]
    4328:	add	x16, x16, #0x128
    432c:	br	x17

0000000000004330 <ntohs@plt>:
    4330:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4334:	ldr	x17, [x16, #304]
    4338:	add	x16, x16, #0x130
    433c:	br	x17

0000000000004340 <PyErr_SetString@plt>:
    4340:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4344:	ldr	x17, [x16, #312]
    4348:	add	x16, x16, #0x138
    434c:	br	x17

0000000000004350 <setsockopt@plt>:
    4350:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4354:	ldr	x17, [x16, #320]
    4358:	add	x16, x16, #0x140
    435c:	br	x17

0000000000004360 <_PyTime_AsSecondsDouble@plt>:
    4360:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4364:	ldr	x17, [x16, #328]
    4368:	add	x16, x16, #0x148
    436c:	br	x17

0000000000004370 <poll@plt>:
    4370:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4374:	ldr	x17, [x16, #336]
    4378:	add	x16, x16, #0x150
    437c:	br	x17

0000000000004380 <PyType_GenericNew@plt>:
    4380:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4384:	ldr	x17, [x16, #344]
    4388:	add	x16, x16, #0x158
    438c:	br	x17

0000000000004390 <PyUnicode_AsEncodedString@plt>:
    4390:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4394:	ldr	x17, [x16, #352]
    4398:	add	x16, x16, #0x160
    439c:	br	x17

00000000000043a0 <recvfrom@plt>:
    43a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43a4:	ldr	x17, [x16, #360]
    43a8:	add	x16, x16, #0x168
    43ac:	br	x17

00000000000043b0 <PyByteArray_AsString@plt>:
    43b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43b4:	ldr	x17, [x16, #368]
    43b8:	add	x16, x16, #0x170
    43bc:	br	x17

00000000000043c0 <PyErr_ExceptionMatches@plt>:
    43c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43c4:	ldr	x17, [x16, #376]
    43c8:	add	x16, x16, #0x178
    43cc:	br	x17

00000000000043d0 <if_indextoname@plt>:
    43d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43d4:	ldr	x17, [x16, #384]
    43d8:	add	x16, x16, #0x180
    43dc:	br	x17

00000000000043e0 <memset@plt>:
    43e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43e4:	ldr	x17, [x16, #392]
    43e8:	add	x16, x16, #0x188
    43ec:	br	x17

00000000000043f0 <PyOS_snprintf@plt>:
    43f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    43f4:	ldr	x17, [x16, #400]
    43f8:	add	x16, x16, #0x190
    43fc:	br	x17

0000000000004400 <_PyTime_FromSecondsObject@plt>:
    4400:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4404:	ldr	x17, [x16, #408]
    4408:	add	x16, x16, #0x198
    440c:	br	x17

0000000000004410 <accept@plt>:
    4410:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4414:	ldr	x17, [x16, #416]
    4418:	add	x16, x16, #0x1a0
    441c:	br	x17

0000000000004420 <PyObject_CallFinalizerFromDealloc@plt>:
    4420:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4424:	ldr	x17, [x16, #424]
    4428:	add	x16, x16, #0x1a8
    442c:	br	x17

0000000000004430 <sendmsg@plt>:
    4430:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4434:	ldr	x17, [x16, #432]
    4438:	add	x16, x16, #0x1b0
    443c:	br	x17

0000000000004440 <_PyTime_AsMilliseconds@plt>:
    4440:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4444:	ldr	x17, [x16, #440]
    4448:	add	x16, x16, #0x1b8
    444c:	br	x17

0000000000004450 <PyLong_FromSsize_t@plt>:
    4450:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4454:	ldr	x17, [x16, #448]
    4458:	add	x16, x16, #0x1c0
    445c:	br	x17

0000000000004460 <PyFloat_FromDouble@plt>:
    4460:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4464:	ldr	x17, [x16, #456]
    4468:	add	x16, x16, #0x1c8
    446c:	br	x17

0000000000004470 <_PyArg_Parse_SizeT@plt>:
    4470:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4474:	ldr	x17, [x16, #464]
    4478:	add	x16, x16, #0x1d0
    447c:	br	x17

0000000000004480 <PyLong_FromLong@plt>:
    4480:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4484:	ldr	x17, [x16, #472]
    4488:	add	x16, x16, #0x1d8
    448c:	br	x17

0000000000004490 <PyUnicode_EncodeFSDefault@plt>:
    4490:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4494:	ldr	x17, [x16, #480]
    4498:	add	x16, x16, #0x1e0
    449c:	br	x17

00000000000044a0 <PyBytes_Size@plt>:
    44a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44a4:	ldr	x17, [x16, #488]
    44a8:	add	x16, x16, #0x1e8
    44ac:	br	x17

00000000000044b0 <PyErr_NewException@plt>:
    44b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44b4:	ldr	x17, [x16, #496]
    44b8:	add	x16, x16, #0x1f0
    44bc:	br	x17

00000000000044c0 <htons@plt>:
    44c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44c4:	ldr	x17, [x16, #504]
    44c8:	add	x16, x16, #0x1f8
    44cc:	br	x17

00000000000044d0 <PyErr_Clear@plt>:
    44d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44d4:	ldr	x17, [x16, #512]
    44d8:	add	x16, x16, #0x200
    44dc:	br	x17

00000000000044e0 <PyList_Append@plt>:
    44e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44e4:	ldr	x17, [x16, #520]
    44e8:	add	x16, x16, #0x208
    44ec:	br	x17

00000000000044f0 <shutdown@plt>:
    44f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    44f4:	ldr	x17, [x16, #528]
    44f8:	add	x16, x16, #0x210
    44fc:	br	x17

0000000000004500 <close@plt>:
    4500:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4504:	ldr	x17, [x16, #536]
    4508:	add	x16, x16, #0x218
    450c:	br	x17

0000000000004510 <recv@plt>:
    4510:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4514:	ldr	x17, [x16, #544]
    4518:	add	x16, x16, #0x220
    451c:	br	x17

0000000000004520 <__gmon_start__@plt>:
    4520:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4524:	ldr	x17, [x16, #552]
    4528:	add	x16, x16, #0x228
    452c:	br	x17

0000000000004530 <getservbyport@plt>:
    4530:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4534:	ldr	x17, [x16, #560]
    4538:	add	x16, x16, #0x230
    453c:	br	x17

0000000000004540 <PyErr_Occurred@plt>:
    4540:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4544:	ldr	x17, [x16, #568]
    4548:	add	x16, x16, #0x238
    454c:	br	x17

0000000000004550 <PyModule_Create2@plt>:
    4550:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4554:	ldr	x17, [x16, #576]
    4558:	add	x16, x16, #0x240
    455c:	br	x17

0000000000004560 <PyLong_AsLong@plt>:
    4560:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4564:	ldr	x17, [x16, #584]
    4568:	add	x16, x16, #0x248
    456c:	br	x17

0000000000004570 <strcmp@plt>:
    4570:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4574:	ldr	x17, [x16, #592]
    4578:	add	x16, x16, #0x250
    457c:	br	x17

0000000000004580 <_PyArg_ParseTuple_SizeT@plt>:
    4580:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4584:	ldr	x17, [x16, #600]
    4588:	add	x16, x16, #0x258
    458c:	br	x17

0000000000004590 <hstrerror@plt>:
    4590:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4594:	ldr	x17, [x16, #608]
    4598:	add	x16, x16, #0x260
    459c:	br	x17

00000000000045a0 <inet_pton@plt>:
    45a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45a4:	ldr	x17, [x16, #616]
    45a8:	add	x16, x16, #0x268
    45ac:	br	x17

00000000000045b0 <PyErr_ResourceWarning@plt>:
    45b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45b4:	ldr	x17, [x16, #624]
    45b8:	add	x16, x16, #0x270
    45bc:	br	x17

00000000000045c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    45c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45c4:	ldr	x17, [x16, #632]
    45c8:	add	x16, x16, #0x278
    45cc:	br	x17

00000000000045d0 <send@plt>:
    45d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45d4:	ldr	x17, [x16, #640]
    45d8:	add	x16, x16, #0x280
    45dc:	br	x17

00000000000045e0 <sethostname@plt>:
    45e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45e4:	ldr	x17, [x16, #648]
    45e8:	add	x16, x16, #0x288
    45ec:	br	x17

00000000000045f0 <_Py_dup@plt>:
    45f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    45f4:	ldr	x17, [x16, #656]
    45f8:	add	x16, x16, #0x290
    45fc:	br	x17

0000000000004600 <connect@plt>:
    4600:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4604:	ldr	x17, [x16, #664]
    4608:	add	x16, x16, #0x298
    460c:	br	x17

0000000000004610 <strchr@plt>:
    4610:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4614:	ldr	x17, [x16, #672]
    4618:	add	x16, x16, #0x2a0
    461c:	br	x17

0000000000004620 <PySys_Audit@plt>:
    4620:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4624:	ldr	x17, [x16, #680]
    4628:	add	x16, x16, #0x2a8
    462c:	br	x17

0000000000004630 <if_freenameindex@plt>:
    4630:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4634:	ldr	x17, [x16, #688]
    4638:	add	x16, x16, #0x2b0
    463c:	br	x17

0000000000004640 <accept4@plt>:
    4640:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4644:	ldr	x17, [x16, #696]
    4648:	add	x16, x16, #0x2b8
    464c:	br	x17

0000000000004650 <PyObject_GetBuffer@plt>:
    4650:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4654:	ldr	x17, [x16, #704]
    4658:	add	x16, x16, #0x2c0
    465c:	br	x17

0000000000004660 <PyLong_AsUnsignedLong@plt>:
    4660:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4664:	ldr	x17, [x16, #712]
    4668:	add	x16, x16, #0x2c8
    466c:	br	x17

0000000000004670 <socket@plt>:
    4670:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4674:	ldr	x17, [x16, #720]
    4678:	add	x16, x16, #0x2d0
    467c:	br	x17

0000000000004680 <PyLong_FromUnsignedLong@plt>:
    4680:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4684:	ldr	x17, [x16, #728]
    4688:	add	x16, x16, #0x2d8
    468c:	br	x17

0000000000004690 <PyUnicode_AsUTF8@plt>:
    4690:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4694:	ldr	x17, [x16, #736]
    4698:	add	x16, x16, #0x2e0
    469c:	br	x17

00000000000046a0 <PyUnicode_DecodeFSDefault@plt>:
    46a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46a4:	ldr	x17, [x16, #744]
    46a8:	add	x16, x16, #0x2e8
    46ac:	br	x17

00000000000046b0 <getsockopt@plt>:
    46b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46b4:	ldr	x17, [x16, #752]
    46b8:	add	x16, x16, #0x2f0
    46bc:	br	x17

00000000000046c0 <PyErr_Fetch@plt>:
    46c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46c4:	ldr	x17, [x16, #760]
    46c8:	add	x16, x16, #0x2f8
    46cc:	br	x17

00000000000046d0 <PyUnicode_FromString@plt>:
    46d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46d4:	ldr	x17, [x16, #768]
    46d8:	add	x16, x16, #0x300
    46dc:	br	x17

00000000000046e0 <getaddrinfo@plt>:
    46e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46e4:	ldr	x17, [x16, #776]
    46e8:	add	x16, x16, #0x308
    46ec:	br	x17

00000000000046f0 <PyEval_SaveThread@plt>:
    46f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    46f4:	ldr	x17, [x16, #784]
    46f8:	add	x16, x16, #0x310
    46fc:	br	x17

0000000000004700 <PyModule_AddObject@plt>:
    4700:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4704:	ldr	x17, [x16, #792]
    4708:	add	x16, x16, #0x318
    470c:	br	x17

0000000000004710 <gethostname@plt>:
    4710:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4714:	ldr	x17, [x16, #800]
    4718:	add	x16, x16, #0x320
    471c:	br	x17

0000000000004720 <PyBytes_AsString@plt>:
    4720:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4724:	ldr	x17, [x16, #808]
    4728:	add	x16, x16, #0x328
    472c:	br	x17

0000000000004730 <inet_aton@plt>:
    4730:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4734:	ldr	x17, [x16, #816]
    4738:	add	x16, x16, #0x330
    473c:	br	x17

0000000000004740 <if_nametoindex@plt>:
    4740:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4744:	ldr	x17, [x16, #824]
    4748:	add	x16, x16, #0x338
    474c:	br	x17

0000000000004750 <_PyTime_FromSeconds@plt>:
    4750:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4754:	ldr	x17, [x16, #832]
    4758:	add	x16, x16, #0x340
    475c:	br	x17

0000000000004760 <PyErr_CheckSignals@plt>:
    4760:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4764:	ldr	x17, [x16, #840]
    4768:	add	x16, x16, #0x348
    476c:	br	x17

0000000000004770 <PyCapsule_New@plt>:
    4770:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4774:	ldr	x17, [x16, #848]
    4778:	add	x16, x16, #0x350
    477c:	br	x17

0000000000004780 <PyType_IsSubtype@plt>:
    4780:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4784:	ldr	x17, [x16, #856]
    4788:	add	x16, x16, #0x358
    478c:	br	x17

0000000000004790 <PyTuple_Size@plt>:
    4790:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4794:	ldr	x17, [x16, #864]
    4798:	add	x16, x16, #0x360
    479c:	br	x17

00000000000047a0 <PyErr_Format@plt>:
    47a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47a4:	ldr	x17, [x16, #872]
    47a8:	add	x16, x16, #0x368
    47ac:	br	x17

00000000000047b0 <socketpair@plt>:
    47b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47b4:	ldr	x17, [x16, #880]
    47b8:	add	x16, x16, #0x370
    47bc:	br	x17

00000000000047c0 <_Py_BuildValue_SizeT@plt>:
    47c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47c4:	ldr	x17, [x16, #888]
    47c8:	add	x16, x16, #0x378
    47cc:	br	x17

00000000000047d0 <strncpy@plt>:
    47d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47d4:	ldr	x17, [x16, #896]
    47d8:	add	x16, x16, #0x380
    47dc:	br	x17

00000000000047e0 <__errno_location@plt>:
    47e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47e4:	ldr	x17, [x16, #904]
    47e8:	add	x16, x16, #0x388
    47ec:	br	x17

00000000000047f0 <_PyLong_AsInt@plt>:
    47f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47f4:	ldr	x17, [x16, #912]
    47f8:	add	x16, x16, #0x390
    47fc:	br	x17

0000000000004800 <getsockname@plt>:
    4800:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4804:	ldr	x17, [x16, #920]
    4808:	add	x16, x16, #0x398
    480c:	br	x17

0000000000004810 <PyMem_Malloc@plt>:
    4810:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4814:	ldr	x17, [x16, #928]
    4818:	add	x16, x16, #0x3a0
    481c:	br	x17

0000000000004820 <getservbyname@plt>:
    4820:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4824:	ldr	x17, [x16, #936]
    4828:	add	x16, x16, #0x3a8
    482c:	br	x17

0000000000004830 <if_nameindex@plt>:
    4830:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4834:	ldr	x17, [x16, #944]
    4838:	add	x16, x16, #0x3b0
    483c:	br	x17

0000000000004840 <_PyTime_GetMonotonicClock@plt>:
    4840:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4844:	ldr	x17, [x16, #952]
    4848:	add	x16, x16, #0x3b8
    484c:	br	x17

0000000000004850 <PyTuple_Pack@plt>:
    4850:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4854:	ldr	x17, [x16, #960]
    4858:	add	x16, x16, #0x3c0
    485c:	br	x17

0000000000004860 <inet_ntop@plt>:
    4860:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4864:	ldr	x17, [x16, #968]
    4868:	add	x16, x16, #0x3c8
    486c:	br	x17

0000000000004870 <PyErr_WriteUnraisable@plt>:
    4870:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4874:	ldr	x17, [x16, #976]
    4878:	add	x16, x16, #0x3d0
    487c:	br	x17

0000000000004880 <ioctl@plt>:
    4880:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4884:	ldr	x17, [x16, #984]
    4888:	add	x16, x16, #0x3d8
    488c:	br	x17

0000000000004890 <PySequence_Fast@plt>:
    4890:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4894:	ldr	x17, [x16, #992]
    4898:	add	x16, x16, #0x3e0
    489c:	br	x17

Disassembly of section .text:

00000000000048a0 <PyInit__socket@@Base-0x8e44>:
    48a0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    48a4:	ldr	x0, [x0, #4000]
    48a8:	cbz	x0, 48b0 <PySequence_Fast@plt+0x20>
    48ac:	b	4520 <__gmon_start__@plt>
    48b0:	ret
    48b4:	stp	x29, x30, [sp, #-32]!
    48b8:	mov	x29, sp
    48bc:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    48c0:	add	x0, x0, #0xf20
    48c4:	str	x0, [sp, #24]
    48c8:	ldr	x0, [sp, #24]
    48cc:	str	x0, [sp, #24]
    48d0:	ldr	x1, [sp, #24]
    48d4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    48d8:	add	x0, x0, #0xf20
    48dc:	cmp	x1, x0
    48e0:	b.eq	4918 <PySequence_Fast@plt+0x88>  // b.none
    48e4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    48e8:	ldr	x0, [x0, #3904]
    48ec:	str	x0, [sp, #16]
    48f0:	ldr	x0, [sp, #16]
    48f4:	str	x0, [sp, #16]
    48f8:	ldr	x0, [sp, #16]
    48fc:	cmp	x0, #0x0
    4900:	b.eq	491c <PySequence_Fast@plt+0x8c>  // b.none
    4904:	ldr	x1, [sp, #16]
    4908:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    490c:	add	x0, x0, #0xf20
    4910:	blr	x1
    4914:	b	491c <PySequence_Fast@plt+0x8c>
    4918:	nop
    491c:	ldp	x29, x30, [sp], #32
    4920:	ret
    4924:	stp	x29, x30, [sp, #-48]!
    4928:	mov	x29, sp
    492c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    4930:	add	x0, x0, #0xf20
    4934:	str	x0, [sp, #40]
    4938:	ldr	x0, [sp, #40]
    493c:	str	x0, [sp, #40]
    4940:	ldr	x1, [sp, #40]
    4944:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    4948:	add	x0, x0, #0xf20
    494c:	sub	x0, x1, x0
    4950:	asr	x0, x0, #3
    4954:	lsr	x1, x0, #63
    4958:	add	x0, x1, x0
    495c:	asr	x0, x0, #1
    4960:	str	x0, [sp, #32]
    4964:	ldr	x0, [sp, #32]
    4968:	cmp	x0, #0x0
    496c:	b.eq	49a8 <PySequence_Fast@plt+0x118>  // b.none
    4970:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    4974:	ldr	x0, [x0, #4064]
    4978:	str	x0, [sp, #24]
    497c:	ldr	x0, [sp, #24]
    4980:	str	x0, [sp, #24]
    4984:	ldr	x0, [sp, #24]
    4988:	cmp	x0, #0x0
    498c:	b.eq	49ac <PySequence_Fast@plt+0x11c>  // b.none
    4990:	ldr	x2, [sp, #24]
    4994:	ldr	x1, [sp, #32]
    4998:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    499c:	add	x0, x0, #0xf20
    49a0:	blr	x2
    49a4:	b	49ac <PySequence_Fast@plt+0x11c>
    49a8:	nop
    49ac:	ldp	x29, x30, [sp], #48
    49b0:	ret
    49b4:	stp	x29, x30, [sp, #-16]!
    49b8:	mov	x29, sp
    49bc:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    49c0:	add	x0, x0, #0xf20
    49c4:	ldrb	w0, [x0]
    49c8:	and	x0, x0, #0xff
    49cc:	cmp	x0, #0x0
    49d0:	b.ne	4a0c <PySequence_Fast@plt+0x17c>  // b.any
    49d4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    49d8:	ldr	x0, [x0, #3920]
    49dc:	cmp	x0, #0x0
    49e0:	b.eq	49f4 <PySequence_Fast@plt+0x164>  // b.none
    49e4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    49e8:	add	x0, x0, #0x3e8
    49ec:	ldr	x0, [x0]
    49f0:	bl	4270 <__cxa_finalize@plt>
    49f4:	bl	48b4 <PySequence_Fast@plt+0x24>
    49f8:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    49fc:	add	x0, x0, #0xf20
    4a00:	mov	w1, #0x1                   	// #1
    4a04:	strb	w1, [x0]
    4a08:	b	4a10 <PySequence_Fast@plt+0x180>
    4a0c:	nop
    4a10:	ldp	x29, x30, [sp], #16
    4a14:	ret
    4a18:	stp	x29, x30, [sp, #-16]!
    4a1c:	mov	x29, sp
    4a20:	bl	4924 <PySequence_Fast@plt+0x94>
    4a24:	nop
    4a28:	ldp	x29, x30, [sp], #16
    4a2c:	ret
    4a30:	sub	sp, sp, #0x10
    4a34:	str	x0, [sp, #8]
    4a38:	ldr	x0, [sp, #8]
    4a3c:	ldr	x0, [x0]
    4a40:	add	x1, x0, #0x1
    4a44:	ldr	x0, [sp, #8]
    4a48:	str	x1, [x0]
    4a4c:	nop
    4a50:	add	sp, sp, #0x10
    4a54:	ret
    4a58:	stp	x29, x30, [sp, #-48]!
    4a5c:	mov	x29, sp
    4a60:	str	x0, [sp, #40]
    4a64:	str	w1, [sp, #36]
    4a68:	str	x2, [sp, #24]
    4a6c:	ldr	x0, [sp, #24]
    4a70:	ldr	x0, [x0]
    4a74:	sub	x1, x0, #0x1
    4a78:	ldr	x0, [sp, #24]
    4a7c:	str	x1, [x0]
    4a80:	ldr	x0, [sp, #24]
    4a84:	ldr	x0, [x0]
    4a88:	cmp	x0, #0x0
    4a8c:	b.ne	4a98 <PySequence_Fast@plt+0x208>  // b.any
    4a90:	ldr	x0, [sp, #24]
    4a94:	bl	42e0 <_Py_Dealloc@plt>
    4a98:	nop
    4a9c:	ldp	x29, x30, [sp], #48
    4aa0:	ret
    4aa4:	stp	x29, x30, [sp, #-32]!
    4aa8:	mov	x29, sp
    4aac:	str	x0, [sp, #24]
    4ab0:	ldr	x0, [sp, #24]
    4ab4:	cmp	x0, #0x0
    4ab8:	b.eq	4ac4 <PySequence_Fast@plt+0x234>  // b.none
    4abc:	ldr	x0, [sp, #24]
    4ac0:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    4ac4:	nop
    4ac8:	ldp	x29, x30, [sp], #32
    4acc:	ret
    4ad0:	stp	x29, x30, [sp, #-32]!
    4ad4:	mov	x29, sp
    4ad8:	str	x0, [sp, #24]
    4adc:	ldr	x0, [sp, #24]
    4ae0:	cmp	x0, #0x0
    4ae4:	b.eq	4afc <PySequence_Fast@plt+0x26c>  // b.none
    4ae8:	ldr	x2, [sp, #24]
    4aec:	mov	w1, #0x21d                 	// #541
    4af0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4af4:	add	x0, x0, #0x230
    4af8:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    4afc:	nop
    4b00:	ldp	x29, x30, [sp], #32
    4b04:	ret
    4b08:	stp	x29, x30, [sp, #-16]!
    4b0c:	mov	x29, sp
    4b10:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    4b14:	ldr	x0, [x0, #3984]
    4b18:	ldr	x2, [x0]
    4b1c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4b20:	add	x1, x0, #0xb78
    4b24:	mov	x0, x2
    4b28:	bl	4340 <PyErr_SetString@plt>
    4b2c:	mov	x0, #0x0                   	// #0
    4b30:	ldp	x29, x30, [sp], #16
    4b34:	ret
    4b38:	stp	x29, x30, [sp, #-16]!
    4b3c:	mov	x29, sp
    4b40:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    4b44:	ldr	x0, [x0, #3984]
    4b48:	ldr	x0, [x0]
    4b4c:	bl	4230 <PyErr_SetFromErrno@plt>
    4b50:	ldp	x29, x30, [sp], #16
    4b54:	ret
    4b58:	stp	x29, x30, [sp, #-48]!
    4b5c:	mov	x29, sp
    4b60:	str	w0, [sp, #28]
    4b64:	ldr	w0, [sp, #28]
    4b68:	bl	4590 <hstrerror@plt>
    4b6c:	mov	x2, x0
    4b70:	ldr	w1, [sp, #28]
    4b74:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4b78:	add	x0, x0, #0xb98
    4b7c:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    4b80:	str	x0, [sp, #40]
    4b84:	ldr	x0, [sp, #40]
    4b88:	cmp	x0, #0x0
    4b8c:	b.eq	4bb8 <PySequence_Fast@plt+0x328>  // b.none
    4b90:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    4b94:	add	x0, x0, #0xf28
    4b98:	ldr	x0, [x0]
    4b9c:	ldr	x1, [sp, #40]
    4ba0:	bl	4300 <PyErr_SetObject@plt>
    4ba4:	ldr	x2, [sp, #40]
    4ba8:	mov	w1, #0x292                 	// #658
    4bac:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4bb0:	add	x0, x0, #0xba0
    4bb4:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    4bb8:	mov	x0, #0x0                   	// #0
    4bbc:	ldp	x29, x30, [sp], #48
    4bc0:	ret
    4bc4:	stp	x29, x30, [sp, #-48]!
    4bc8:	mov	x29, sp
    4bcc:	str	w0, [sp, #28]
    4bd0:	ldr	w0, [sp, #28]
    4bd4:	cmn	w0, #0xb
    4bd8:	b.ne	4be4 <PySequence_Fast@plt+0x354>  // b.any
    4bdc:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    4be0:	b	4c3c <PySequence_Fast@plt+0x3ac>
    4be4:	ldr	w0, [sp, #28]
    4be8:	bl	40f0 <gai_strerror@plt>
    4bec:	mov	x2, x0
    4bf0:	ldr	w1, [sp, #28]
    4bf4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4bf8:	add	x0, x0, #0xb98
    4bfc:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    4c00:	str	x0, [sp, #40]
    4c04:	ldr	x0, [sp, #40]
    4c08:	cmp	x0, #0x0
    4c0c:	b.eq	4c38 <PySequence_Fast@plt+0x3a8>  // b.none
    4c10:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    4c14:	add	x0, x0, #0xf30
    4c18:	ldr	x0, [x0]
    4c1c:	ldr	x1, [sp, #40]
    4c20:	bl	4300 <PyErr_SetObject@plt>
    4c24:	ldr	x2, [sp, #40]
    4c28:	mov	w1, #0x2ab                 	// #683
    4c2c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4c30:	add	x0, x0, #0xba0
    4c34:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    4c38:	mov	x0, #0x0                   	// #0
    4c3c:	ldp	x29, x30, [sp], #48
    4c40:	ret
    4c44:	stp	x29, x30, [sp, #-48]!
    4c48:	mov	x29, sp
    4c4c:	str	x0, [sp, #24]
    4c50:	str	w1, [sp, #20]
    4c54:	mov	w0, #0xffffffff            	// #-1
    4c58:	str	w0, [sp, #44]
    4c5c:	bl	46f0 <PyEval_SaveThread@plt>
    4c60:	str	x0, [sp, #32]
    4c64:	ldr	w0, [sp, #20]
    4c68:	cmp	w0, #0x0
    4c6c:	cset	w0, eq  // eq = none
    4c70:	and	w0, w0, #0xff
    4c74:	str	w0, [sp, #20]
    4c78:	ldr	x0, [sp, #24]
    4c7c:	ldr	w0, [x0, #16]
    4c80:	add	x1, sp, #0x14
    4c84:	mov	x2, x1
    4c88:	mov	x1, #0x5421                	// #21537
    4c8c:	bl	4880 <ioctl@plt>
    4c90:	cmn	w0, #0x1
    4c94:	b.eq	4ca0 <PySequence_Fast@plt+0x410>  // b.none
    4c98:	str	wzr, [sp, #44]
    4c9c:	b	4ca4 <PySequence_Fast@plt+0x414>
    4ca0:	nop
    4ca4:	ldr	x0, [sp, #32]
    4ca8:	bl	4210 <PyEval_RestoreThread@plt>
    4cac:	ldr	w0, [sp, #44]
    4cb0:	cmp	w0, #0x0
    4cb4:	b.eq	4cc8 <PySequence_Fast@plt+0x438>  // b.none
    4cb8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    4cbc:	ldr	x0, [x0, #3984]
    4cc0:	ldr	x0, [x0]
    4cc4:	bl	4230 <PyErr_SetFromErrno@plt>
    4cc8:	ldr	w0, [sp, #44]
    4ccc:	ldp	x29, x30, [sp], #48
    4cd0:	ret
    4cd4:	stp	x29, x30, [sp, #-80]!
    4cd8:	mov	x29, sp
    4cdc:	str	x0, [sp, #40]
    4ce0:	str	w1, [sp, #36]
    4ce4:	str	x2, [sp, #24]
    4ce8:	str	w3, [sp, #32]
    4cec:	ldr	x0, [sp, #40]
    4cf0:	ldr	w0, [x0, #16]
    4cf4:	cmn	w0, #0x1
    4cf8:	b.ne	4d04 <PySequence_Fast@plt+0x474>  // b.any
    4cfc:	mov	w0, #0x0                   	// #0
    4d00:	b	4dc4 <PySequence_Fast@plt+0x534>
    4d04:	ldr	x0, [sp, #40]
    4d08:	ldr	w0, [x0, #16]
    4d0c:	str	w0, [sp, #48]
    4d10:	ldr	w0, [sp, #36]
    4d14:	cmp	w0, #0x0
    4d18:	b.eq	4d24 <PySequence_Fast@plt+0x494>  // b.none
    4d1c:	mov	w0, #0x4                   	// #4
    4d20:	b	4d28 <PySequence_Fast@plt+0x498>
    4d24:	mov	w0, #0x1                   	// #1
    4d28:	strh	w0, [sp, #52]
    4d2c:	ldr	w0, [sp, #32]
    4d30:	cmp	w0, #0x0
    4d34:	b.eq	4d48 <PySequence_Fast@plt+0x4b8>  // b.none
    4d38:	ldrsh	w0, [sp, #52]
    4d3c:	orr	w0, w0, #0x8
    4d40:	sxth	w0, w0
    4d44:	strh	w0, [sp, #52]
    4d48:	mov	w1, #0x1                   	// #1
    4d4c:	ldr	x0, [sp, #24]
    4d50:	bl	4440 <_PyTime_AsMilliseconds@plt>
    4d54:	str	x0, [sp, #72]
    4d58:	ldr	x0, [sp, #72]
    4d5c:	cmp	x0, #0x0
    4d60:	b.ge	4d6c <PySequence_Fast@plt+0x4dc>  // b.tcont
    4d64:	mov	x0, #0xffffffffffffffff    	// #-1
    4d68:	str	x0, [sp, #72]
    4d6c:	bl	46f0 <PyEval_SaveThread@plt>
    4d70:	str	x0, [sp, #64]
    4d74:	ldr	x0, [sp, #72]
    4d78:	mov	w1, w0
    4d7c:	add	x0, sp, #0x30
    4d80:	mov	w2, w1
    4d84:	mov	x1, #0x1                   	// #1
    4d88:	bl	4370 <poll@plt>
    4d8c:	str	w0, [sp, #60]
    4d90:	ldr	x0, [sp, #64]
    4d94:	bl	4210 <PyEval_RestoreThread@plt>
    4d98:	ldr	w0, [sp, #60]
    4d9c:	cmp	w0, #0x0
    4da0:	b.ge	4dac <PySequence_Fast@plt+0x51c>  // b.tcont
    4da4:	mov	w0, #0xffffffff            	// #-1
    4da8:	b	4dc4 <PySequence_Fast@plt+0x534>
    4dac:	ldr	w0, [sp, #60]
    4db0:	cmp	w0, #0x0
    4db4:	b.ne	4dc0 <PySequence_Fast@plt+0x530>  // b.any
    4db8:	mov	w0, #0x1                   	// #1
    4dbc:	b	4dc4 <PySequence_Fast@plt+0x534>
    4dc0:	mov	w0, #0x0                   	// #0
    4dc4:	ldp	x29, x30, [sp], #80
    4dc8:	ret
    4dcc:	stp	x29, x30, [sp, #-112]!
    4dd0:	mov	x29, sp
    4dd4:	str	x0, [sp, #56]
    4dd8:	str	w1, [sp, #52]
    4ddc:	str	x2, [sp, #40]
    4de0:	str	x3, [sp, #32]
    4de4:	str	w4, [sp, #48]
    4de8:	str	x5, [sp, #24]
    4dec:	str	x6, [sp, #16]
    4df0:	ldr	x0, [sp, #16]
    4df4:	cmp	x0, #0x0
    4df8:	cset	w0, gt
    4dfc:	and	w0, w0, #0xff
    4e00:	str	w0, [sp, #84]
    4e04:	str	xzr, [sp, #104]
    4e08:	str	wzr, [sp, #100]
    4e0c:	ldr	w0, [sp, #84]
    4e10:	cmp	w0, #0x0
    4e14:	b.ne	4e24 <PySequence_Fast@plt+0x594>  // b.any
    4e18:	ldr	w0, [sp, #48]
    4e1c:	cmp	w0, #0x0
    4e20:	b.eq	4f88 <PySequence_Fast@plt+0x6f8>  // b.none
    4e24:	ldr	w0, [sp, #84]
    4e28:	cmp	w0, #0x0
    4e2c:	b.eq	4eac <PySequence_Fast@plt+0x61c>  // b.none
    4e30:	ldr	w0, [sp, #100]
    4e34:	cmp	w0, #0x0
    4e38:	b.eq	4e54 <PySequence_Fast@plt+0x5c4>  // b.none
    4e3c:	bl	4840 <_PyTime_GetMonotonicClock@plt>
    4e40:	mov	x1, x0
    4e44:	ldr	x0, [sp, #104]
    4e48:	sub	x0, x0, x1
    4e4c:	str	x0, [sp, #88]
    4e50:	b	4e78 <PySequence_Fast@plt+0x5e8>
    4e54:	mov	w0, #0x1                   	// #1
    4e58:	str	w0, [sp, #100]
    4e5c:	bl	4840 <_PyTime_GetMonotonicClock@plt>
    4e60:	mov	x1, x0
    4e64:	ldr	x0, [sp, #16]
    4e68:	add	x0, x0, x1
    4e6c:	str	x0, [sp, #104]
    4e70:	ldr	x0, [sp, #16]
    4e74:	str	x0, [sp, #88]
    4e78:	ldr	x0, [sp, #88]
    4e7c:	cmp	x0, #0x0
    4e80:	b.lt	4ea0 <PySequence_Fast@plt+0x610>  // b.tstop
    4e84:	ldr	w3, [sp, #48]
    4e88:	ldr	x2, [sp, #88]
    4e8c:	ldr	w1, [sp, #52]
    4e90:	ldr	x0, [sp, #56]
    4e94:	bl	4cd4 <PySequence_Fast@plt+0x444>
    4e98:	str	w0, [sp, #96]
    4e9c:	b	4ec4 <PySequence_Fast@plt+0x634>
    4ea0:	mov	w0, #0x1                   	// #1
    4ea4:	str	w0, [sp, #96]
    4ea8:	b	4ec4 <PySequence_Fast@plt+0x634>
    4eac:	ldr	w3, [sp, #48]
    4eb0:	ldr	x2, [sp, #16]
    4eb4:	ldr	w1, [sp, #52]
    4eb8:	ldr	x0, [sp, #56]
    4ebc:	bl	4cd4 <PySequence_Fast@plt+0x444>
    4ec0:	str	w0, [sp, #96]
    4ec4:	ldr	w0, [sp, #96]
    4ec8:	cmn	w0, #0x1
    4ecc:	b.ne	4f3c <PySequence_Fast@plt+0x6ac>  // b.any
    4ed0:	ldr	x0, [sp, #24]
    4ed4:	cmp	x0, #0x0
    4ed8:	b.eq	4eec <PySequence_Fast@plt+0x65c>  // b.none
    4edc:	bl	47e0 <__errno_location@plt>
    4ee0:	ldr	w1, [x0]
    4ee4:	ldr	x0, [sp, #24]
    4ee8:	str	w1, [x0]
    4eec:	bl	47e0 <__errno_location@plt>
    4ef0:	ldr	w0, [x0]
    4ef4:	cmp	w0, #0x4
    4ef8:	b.ne	4f28 <PySequence_Fast@plt+0x698>  // b.any
    4efc:	bl	4760 <PyErr_CheckSignals@plt>
    4f00:	cmp	w0, #0x0
    4f04:	b.eq	5080 <PySequence_Fast@plt+0x7f0>  // b.none
    4f08:	ldr	x0, [sp, #24]
    4f0c:	cmp	x0, #0x0
    4f10:	b.eq	4f20 <PySequence_Fast@plt+0x690>  // b.none
    4f14:	ldr	x0, [sp, #24]
    4f18:	mov	w1, #0xffffffff            	// #-1
    4f1c:	str	w1, [x0]
    4f20:	mov	w0, #0xffffffff            	// #-1
    4f24:	b	5090 <PySequence_Fast@plt+0x800>
    4f28:	ldr	x0, [sp, #56]
    4f2c:	ldr	x0, [x0, #32]
    4f30:	blr	x0
    4f34:	mov	w0, #0xffffffff            	// #-1
    4f38:	b	5090 <PySequence_Fast@plt+0x800>
    4f3c:	ldr	w0, [sp, #96]
    4f40:	cmp	w0, #0x1
    4f44:	b.ne	4f88 <PySequence_Fast@plt+0x6f8>  // b.any
    4f48:	ldr	x0, [sp, #24]
    4f4c:	cmp	x0, #0x0
    4f50:	b.eq	4f64 <PySequence_Fast@plt+0x6d4>  // b.none
    4f54:	ldr	x0, [sp, #24]
    4f58:	mov	w1, #0xb                   	// #11
    4f5c:	str	w1, [x0]
    4f60:	b	4f80 <PySequence_Fast@plt+0x6f0>
    4f64:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    4f68:	add	x0, x0, #0xf38
    4f6c:	ldr	x2, [x0]
    4f70:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    4f74:	add	x1, x0, #0xbd0
    4f78:	mov	x0, x2
    4f7c:	bl	4340 <PyErr_SetString@plt>
    4f80:	mov	w0, #0xffffffff            	// #-1
    4f84:	b	5090 <PySequence_Fast@plt+0x800>
    4f88:	bl	46f0 <PyEval_SaveThread@plt>
    4f8c:	str	x0, [sp, #72]
    4f90:	ldr	x2, [sp, #40]
    4f94:	ldr	x1, [sp, #32]
    4f98:	ldr	x0, [sp, #56]
    4f9c:	blr	x2
    4fa0:	str	w0, [sp, #96]
    4fa4:	ldr	x0, [sp, #72]
    4fa8:	bl	4210 <PyEval_RestoreThread@plt>
    4fac:	ldr	w0, [sp, #96]
    4fb0:	cmp	w0, #0x0
    4fb4:	b.eq	4fd4 <PySequence_Fast@plt+0x744>  // b.none
    4fb8:	ldr	x0, [sp, #24]
    4fbc:	cmp	x0, #0x0
    4fc0:	b.eq	4fcc <PySequence_Fast@plt+0x73c>  // b.none
    4fc4:	ldr	x0, [sp, #24]
    4fc8:	str	wzr, [x0]
    4fcc:	mov	w0, #0x0                   	// #0
    4fd0:	b	5090 <PySequence_Fast@plt+0x800>
    4fd4:	ldr	x0, [sp, #24]
    4fd8:	cmp	x0, #0x0
    4fdc:	b.eq	4ff0 <PySequence_Fast@plt+0x760>  // b.none
    4fe0:	bl	47e0 <__errno_location@plt>
    4fe4:	ldr	w1, [x0]
    4fe8:	ldr	x0, [sp, #24]
    4fec:	str	w1, [x0]
    4ff0:	bl	47e0 <__errno_location@plt>
    4ff4:	ldr	w0, [x0]
    4ff8:	cmp	w0, #0x4
    4ffc:	b.ne	502c <PySequence_Fast@plt+0x79c>  // b.any
    5000:	bl	4760 <PyErr_CheckSignals@plt>
    5004:	cmp	w0, #0x0
    5008:	b.eq	4f88 <PySequence_Fast@plt+0x6f8>  // b.none
    500c:	ldr	x0, [sp, #24]
    5010:	cmp	x0, #0x0
    5014:	b.eq	5024 <PySequence_Fast@plt+0x794>  // b.none
    5018:	ldr	x0, [sp, #24]
    501c:	mov	w1, #0xffffffff            	// #-1
    5020:	str	w1, [x0]
    5024:	mov	w0, #0xffffffff            	// #-1
    5028:	b	5090 <PySequence_Fast@plt+0x800>
    502c:	nop
    5030:	ldr	x0, [sp, #56]
    5034:	ldr	x0, [x0, #40]
    5038:	cmp	x0, #0x0
    503c:	b.le	5060 <PySequence_Fast@plt+0x7d0>
    5040:	bl	47e0 <__errno_location@plt>
    5044:	ldr	w0, [x0]
    5048:	cmp	w0, #0xb
    504c:	b.eq	5088 <PySequence_Fast@plt+0x7f8>  // b.none
    5050:	bl	47e0 <__errno_location@plt>
    5054:	ldr	w0, [x0]
    5058:	cmp	w0, #0xb
    505c:	b.eq	5088 <PySequence_Fast@plt+0x7f8>  // b.none
    5060:	ldr	x0, [sp, #24]
    5064:	cmp	x0, #0x0
    5068:	b.ne	5078 <PySequence_Fast@plt+0x7e8>  // b.any
    506c:	ldr	x0, [sp, #56]
    5070:	ldr	x0, [x0, #32]
    5074:	blr	x0
    5078:	mov	w0, #0xffffffff            	// #-1
    507c:	b	5090 <PySequence_Fast@plt+0x800>
    5080:	nop
    5084:	b	4e0c <PySequence_Fast@plt+0x57c>
    5088:	nop
    508c:	b	4e0c <PySequence_Fast@plt+0x57c>
    5090:	ldp	x29, x30, [sp], #112
    5094:	ret
    5098:	stp	x29, x30, [sp, #-48]!
    509c:	mov	x29, sp
    50a0:	str	x0, [sp, #40]
    50a4:	str	w1, [sp, #36]
    50a8:	str	x2, [sp, #24]
    50ac:	str	x3, [sp, #16]
    50b0:	ldr	x0, [sp, #40]
    50b4:	ldr	x0, [x0, #40]
    50b8:	mov	x6, x0
    50bc:	mov	x5, #0x0                   	// #0
    50c0:	mov	w4, #0x0                   	// #0
    50c4:	ldr	x3, [sp, #16]
    50c8:	ldr	x2, [sp, #24]
    50cc:	ldr	w1, [sp, #36]
    50d0:	ldr	x0, [sp, #40]
    50d4:	bl	4dcc <PySequence_Fast@plt+0x53c>
    50d8:	ldp	x29, x30, [sp], #48
    50dc:	ret
    50e0:	stp	x29, x30, [sp, #-48]!
    50e4:	mov	x29, sp
    50e8:	str	x0, [sp, #40]
    50ec:	str	w1, [sp, #36]
    50f0:	str	w2, [sp, #32]
    50f4:	str	w3, [sp, #28]
    50f8:	str	w4, [sp, #24]
    50fc:	ldr	x0, [sp, #40]
    5100:	ldr	w1, [sp, #36]
    5104:	str	w1, [x0, #16]
    5108:	ldr	x0, [sp, #40]
    510c:	ldr	w1, [sp, #32]
    5110:	str	w1, [x0, #20]
    5114:	ldr	x0, [sp, #40]
    5118:	ldr	w1, [sp, #28]
    511c:	str	w1, [x0, #24]
    5120:	ldr	x0, [sp, #40]
    5124:	ldr	w0, [x0, #24]
    5128:	and	w1, w0, #0xfffff7ff
    512c:	ldr	x0, [sp, #40]
    5130:	str	w1, [x0, #24]
    5134:	ldr	x0, [sp, #40]
    5138:	ldr	w0, [x0, #24]
    513c:	and	w1, w0, #0xfff7ffff
    5140:	ldr	x0, [sp, #40]
    5144:	str	w1, [x0, #24]
    5148:	ldr	x0, [sp, #40]
    514c:	ldr	w1, [sp, #24]
    5150:	str	w1, [x0, #28]
    5154:	ldr	x0, [sp, #40]
    5158:	adrp	x1, 4000 <memcpy@plt-0xd0>
    515c:	add	x1, x1, #0xb38
    5160:	str	x1, [x0, #32]
    5164:	ldr	w0, [sp, #28]
    5168:	and	w0, w0, #0x800
    516c:	cmp	w0, #0x0
    5170:	b.eq	5180 <PySequence_Fast@plt+0x8f0>  // b.none
    5174:	ldr	x0, [sp, #40]
    5178:	str	xzr, [x0, #40]
    517c:	b	51c4 <PySequence_Fast@plt+0x934>
    5180:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    5184:	add	x0, x0, #0x3f0
    5188:	ldr	x1, [x0]
    518c:	ldr	x0, [sp, #40]
    5190:	str	x1, [x0, #40]
    5194:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    5198:	add	x0, x0, #0x3f0
    519c:	ldr	x0, [x0]
    51a0:	cmp	x0, #0x0
    51a4:	b.lt	51c4 <PySequence_Fast@plt+0x934>  // b.tstop
    51a8:	mov	w1, #0x0                   	// #0
    51ac:	ldr	x0, [sp, #40]
    51b0:	bl	4c44 <PySequence_Fast@plt+0x3b4>
    51b4:	cmn	w0, #0x1
    51b8:	b.ne	51c4 <PySequence_Fast@plt+0x934>  // b.any
    51bc:	mov	w0, #0xffffffff            	// #-1
    51c0:	b	51c8 <PySequence_Fast@plt+0x938>
    51c4:	mov	w0, #0x0                   	// #0
    51c8:	ldp	x29, x30, [sp], #48
    51cc:	ret
    51d0:	stp	x29, x30, [sp, #-48]!
    51d4:	mov	x29, sp
    51d8:	str	w0, [sp, #28]
    51dc:	str	w1, [sp, #24]
    51e0:	str	w2, [sp, #20]
    51e4:	str	w3, [sp, #16]
    51e8:	mov	x2, #0x0                   	// #0
    51ec:	mov	x1, #0x0                   	// #0
    51f0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    51f4:	add	x0, x0, #0x400
    51f8:	bl	4380 <PyType_GenericNew@plt>
    51fc:	str	x0, [sp, #40]
    5200:	ldr	x0, [sp, #40]
    5204:	cmp	x0, #0x0
    5208:	b.ne	5214 <PySequence_Fast@plt+0x984>  // b.any
    520c:	mov	x0, #0x0                   	// #0
    5210:	b	5254 <PySequence_Fast@plt+0x9c4>
    5214:	ldr	w4, [sp, #16]
    5218:	ldr	w3, [sp, #20]
    521c:	ldr	w2, [sp, #24]
    5220:	ldr	w1, [sp, #28]
    5224:	ldr	x0, [sp, #40]
    5228:	bl	50e0 <PySequence_Fast@plt+0x850>
    522c:	cmn	w0, #0x1
    5230:	b.ne	5250 <PySequence_Fast@plt+0x9c0>  // b.any
    5234:	ldr	x2, [sp, #40]
    5238:	mov	w1, #0x41b                 	// #1051
    523c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5240:	add	x0, x0, #0xba0
    5244:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    5248:	mov	x0, #0x0                   	// #0
    524c:	b	5254 <PySequence_Fast@plt+0x9c4>
    5250:	ldr	x0, [sp, #40]
    5254:	ldp	x29, x30, [sp], #48
    5258:	ret
    525c:	stp	x29, x30, [sp, #-160]!
    5260:	mov	x29, sp
    5264:	str	x0, [sp, #40]
    5268:	str	x1, [sp, #32]
    526c:	str	x2, [sp, #24]
    5270:	str	w3, [sp, #20]
    5274:	mov	x2, #0x10                  	// #16
    5278:	mov	w1, #0x0                   	// #0
    527c:	ldr	x0, [sp, #32]
    5280:	bl	43e0 <memset@plt>
    5284:	ldr	x0, [sp, #40]
    5288:	ldrb	w0, [x0]
    528c:	cmp	w0, #0x0
    5290:	b.ne	53f8 <PySequence_Fast@plt+0xb68>  // b.any
    5294:	add	x0, sp, #0x38
    5298:	mov	x2, #0x30                  	// #48
    529c:	mov	w1, #0x0                   	// #0
    52a0:	bl	43e0 <memset@plt>
    52a4:	ldr	w0, [sp, #20]
    52a8:	str	w0, [sp, #60]
    52ac:	mov	w0, #0x2                   	// #2
    52b0:	str	w0, [sp, #64]
    52b4:	mov	w0, #0x1                   	// #1
    52b8:	str	w0, [sp, #56]
    52bc:	bl	46f0 <PyEval_SaveThread@plt>
    52c0:	str	x0, [sp, #104]
    52c4:	add	x1, sp, #0x30
    52c8:	add	x0, sp, #0x38
    52cc:	mov	x3, x1
    52d0:	mov	x2, x0
    52d4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    52d8:	add	x1, x0, #0xbe0
    52dc:	mov	x0, #0x0                   	// #0
    52e0:	bl	46e0 <getaddrinfo@plt>
    52e4:	str	w0, [sp, #124]
    52e8:	ldr	x0, [sp, #104]
    52ec:	bl	4210 <PyEval_RestoreThread@plt>
    52f0:	ldr	w0, [sp, #124]
    52f4:	cmp	w0, #0x0
    52f8:	b.eq	530c <PySequence_Fast@plt+0xa7c>  // b.none
    52fc:	ldr	w0, [sp, #124]
    5300:	bl	4bc4 <PySequence_Fast@plt+0x334>
    5304:	mov	w0, #0xffffffff            	// #-1
    5308:	b	5670 <PySequence_Fast@plt+0xde0>
    530c:	ldr	x0, [sp, #48]
    5310:	ldr	w0, [x0, #4]
    5314:	cmp	w0, #0x2
    5318:	b.eq	5328 <PySequence_Fast@plt+0xa98>  // b.none
    531c:	cmp	w0, #0xa
    5320:	b.eq	5334 <PySequence_Fast@plt+0xaa4>  // b.none
    5324:	b	5340 <PySequence_Fast@plt+0xab0>
    5328:	mov	w0, #0x4                   	// #4
    532c:	str	w0, [sp, #156]
    5330:	b	536c <PySequence_Fast@plt+0xadc>
    5334:	mov	w0, #0x10                  	// #16
    5338:	str	w0, [sp, #156]
    533c:	b	536c <PySequence_Fast@plt+0xadc>
    5340:	ldr	x0, [sp, #48]
    5344:	bl	4140 <freeaddrinfo@plt>
    5348:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    534c:	ldr	x0, [x0, #3984]
    5350:	ldr	x2, [x0]
    5354:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5358:	add	x1, x0, #0xbe8
    535c:	mov	x0, x2
    5360:	bl	4340 <PyErr_SetString@plt>
    5364:	mov	w0, #0xffffffff            	// #-1
    5368:	b	5670 <PySequence_Fast@plt+0xde0>
    536c:	ldr	x0, [sp, #48]
    5370:	ldr	x0, [x0, #40]
    5374:	cmp	x0, #0x0
    5378:	b.eq	53a8 <PySequence_Fast@plt+0xb18>  // b.none
    537c:	ldr	x0, [sp, #48]
    5380:	bl	4140 <freeaddrinfo@plt>
    5384:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5388:	ldr	x0, [x0, #3984]
    538c:	ldr	x2, [x0]
    5390:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5394:	add	x1, x0, #0xc08
    5398:	mov	x0, x2
    539c:	bl	4340 <PyErr_SetString@plt>
    53a0:	mov	w0, #0xffffffff            	// #-1
    53a4:	b	5670 <PySequence_Fast@plt+0xde0>
    53a8:	ldr	x0, [sp, #48]
    53ac:	ldr	w0, [x0, #16]
    53b0:	mov	w0, w0
    53b4:	ldr	x1, [sp, #24]
    53b8:	cmp	x1, x0
    53bc:	b.ls	53d0 <PySequence_Fast@plt+0xb40>  // b.plast
    53c0:	ldr	x0, [sp, #48]
    53c4:	ldr	w0, [x0, #16]
    53c8:	mov	w0, w0
    53cc:	str	x0, [sp, #24]
    53d0:	ldr	x0, [sp, #48]
    53d4:	ldr	x0, [x0, #24]
    53d8:	ldr	x2, [sp, #24]
    53dc:	mov	x1, x0
    53e0:	ldr	x0, [sp, #32]
    53e4:	bl	40d0 <memcpy@plt>
    53e8:	ldr	x0, [sp, #48]
    53ec:	bl	4140 <freeaddrinfo@plt>
    53f0:	ldr	w0, [sp, #156]
    53f4:	b	5670 <PySequence_Fast@plt+0xde0>
    53f8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    53fc:	add	x1, x0, #0xc30
    5400:	ldr	x0, [sp, #40]
    5404:	bl	4570 <strcmp@plt>
    5408:	cmp	w0, #0x0
    540c:	b.eq	5428 <PySequence_Fast@plt+0xb98>  // b.none
    5410:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5414:	add	x1, x0, #0xc40
    5418:	ldr	x0, [sp, #40]
    541c:	bl	4570 <strcmp@plt>
    5420:	cmp	w0, #0x0
    5424:	b.ne	549c <PySequence_Fast@plt+0xc0c>  // b.any
    5428:	ldr	w0, [sp, #20]
    542c:	cmp	w0, #0x2
    5430:	b.eq	5464 <PySequence_Fast@plt+0xbd4>  // b.none
    5434:	ldr	w0, [sp, #20]
    5438:	cmp	w0, #0x0
    543c:	b.eq	5464 <PySequence_Fast@plt+0xbd4>  // b.none
    5440:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5444:	ldr	x0, [x0, #3984]
    5448:	ldr	x2, [x0]
    544c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5450:	add	x1, x0, #0xc50
    5454:	mov	x0, x2
    5458:	bl	4340 <PyErr_SetString@plt>
    545c:	mov	w0, #0xffffffff            	// #-1
    5460:	b	5670 <PySequence_Fast@plt+0xde0>
    5464:	ldr	x0, [sp, #32]
    5468:	str	x0, [sp, #112]
    546c:	mov	x2, #0x10                  	// #16
    5470:	mov	w1, #0x0                   	// #0
    5474:	ldr	x0, [sp, #112]
    5478:	bl	43e0 <memset@plt>
    547c:	ldr	x0, [sp, #112]
    5480:	mov	w1, #0x2                   	// #2
    5484:	strh	w1, [x0]
    5488:	ldr	x0, [sp, #112]
    548c:	mov	w1, #0xffffffff            	// #-1
    5490:	str	w1, [x0, #4]
    5494:	mov	w0, #0x4                   	// #4
    5498:	b	5670 <PySequence_Fast@plt+0xde0>
    549c:	ldr	w0, [sp, #20]
    54a0:	cmp	w0, #0x0
    54a4:	b.eq	54b4 <PySequence_Fast@plt+0xc24>  // b.none
    54a8:	ldr	w0, [sp, #20]
    54ac:	cmp	w0, #0x2
    54b0:	b.ne	5500 <PySequence_Fast@plt+0xc70>  // b.any
    54b4:	ldr	x0, [sp, #32]
    54b8:	str	x0, [sp, #144]
    54bc:	mov	x2, #0x10                  	// #16
    54c0:	mov	w1, #0x0                   	// #0
    54c4:	ldr	x0, [sp, #144]
    54c8:	bl	43e0 <memset@plt>
    54cc:	ldr	x0, [sp, #144]
    54d0:	add	x0, x0, #0x4
    54d4:	mov	x2, x0
    54d8:	ldr	x1, [sp, #40]
    54dc:	mov	w0, #0x2                   	// #2
    54e0:	bl	45a0 <inet_pton@plt>
    54e4:	cmp	w0, #0x0
    54e8:	b.le	5500 <PySequence_Fast@plt+0xc70>
    54ec:	ldr	x0, [sp, #144]
    54f0:	mov	w1, #0x2                   	// #2
    54f4:	strh	w1, [x0]
    54f8:	mov	w0, #0x4                   	// #4
    54fc:	b	5670 <PySequence_Fast@plt+0xde0>
    5500:	ldr	w0, [sp, #20]
    5504:	cmp	w0, #0x0
    5508:	b.eq	5518 <PySequence_Fast@plt+0xc88>  // b.none
    550c:	ldr	w0, [sp, #20]
    5510:	cmp	w0, #0xa
    5514:	b.ne	5578 <PySequence_Fast@plt+0xce8>  // b.any
    5518:	mov	w1, #0x25                  	// #37
    551c:	ldr	x0, [sp, #40]
    5520:	bl	4610 <strchr@plt>
    5524:	cmp	x0, #0x0
    5528:	b.ne	5578 <PySequence_Fast@plt+0xce8>  // b.any
    552c:	ldr	x0, [sp, #32]
    5530:	str	x0, [sp, #136]
    5534:	mov	x2, #0x1c                  	// #28
    5538:	mov	w1, #0x0                   	// #0
    553c:	ldr	x0, [sp, #136]
    5540:	bl	43e0 <memset@plt>
    5544:	ldr	x0, [sp, #136]
    5548:	add	x0, x0, #0x8
    554c:	mov	x2, x0
    5550:	ldr	x1, [sp, #40]
    5554:	mov	w0, #0xa                   	// #10
    5558:	bl	45a0 <inet_pton@plt>
    555c:	cmp	w0, #0x0
    5560:	b.le	5578 <PySequence_Fast@plt+0xce8>
    5564:	ldr	x0, [sp, #136]
    5568:	mov	w1, #0xa                   	// #10
    556c:	strh	w1, [x0]
    5570:	mov	w0, #0x10                  	// #16
    5574:	b	5670 <PySequence_Fast@plt+0xde0>
    5578:	add	x0, sp, #0x38
    557c:	mov	x2, #0x30                  	// #48
    5580:	mov	w1, #0x0                   	// #0
    5584:	bl	43e0 <memset@plt>
    5588:	ldr	w0, [sp, #20]
    558c:	str	w0, [sp, #60]
    5590:	bl	46f0 <PyEval_SaveThread@plt>
    5594:	str	x0, [sp, #128]
    5598:	add	x1, sp, #0x30
    559c:	add	x0, sp, #0x38
    55a0:	mov	x3, x1
    55a4:	mov	x2, x0
    55a8:	mov	x1, #0x0                   	// #0
    55ac:	ldr	x0, [sp, #40]
    55b0:	bl	46e0 <getaddrinfo@plt>
    55b4:	str	w0, [sp, #124]
    55b8:	ldr	x0, [sp, #128]
    55bc:	bl	4210 <PyEval_RestoreThread@plt>
    55c0:	ldr	w0, [sp, #124]
    55c4:	cmp	w0, #0x0
    55c8:	b.eq	55dc <PySequence_Fast@plt+0xd4c>  // b.none
    55cc:	ldr	w0, [sp, #124]
    55d0:	bl	4bc4 <PySequence_Fast@plt+0x334>
    55d4:	mov	w0, #0xffffffff            	// #-1
    55d8:	b	5670 <PySequence_Fast@plt+0xde0>
    55dc:	ldr	x0, [sp, #48]
    55e0:	ldr	w0, [x0, #16]
    55e4:	mov	w0, w0
    55e8:	ldr	x1, [sp, #24]
    55ec:	cmp	x1, x0
    55f0:	b.ls	5604 <PySequence_Fast@plt+0xd74>  // b.plast
    55f4:	ldr	x0, [sp, #48]
    55f8:	ldr	w0, [x0, #16]
    55fc:	mov	w0, w0
    5600:	str	x0, [sp, #24]
    5604:	ldr	x0, [sp, #48]
    5608:	ldr	x0, [x0, #24]
    560c:	ldr	x2, [sp, #24]
    5610:	mov	x1, x0
    5614:	ldr	x0, [sp, #32]
    5618:	bl	40d0 <memcpy@plt>
    561c:	ldr	x0, [sp, #48]
    5620:	bl	4140 <freeaddrinfo@plt>
    5624:	ldr	x0, [sp, #32]
    5628:	ldrh	w0, [x0]
    562c:	cmp	w0, #0x2
    5630:	b.eq	5640 <PySequence_Fast@plt+0xdb0>  // b.none
    5634:	cmp	w0, #0xa
    5638:	b.eq	5648 <PySequence_Fast@plt+0xdb8>  // b.none
    563c:	b	5650 <PySequence_Fast@plt+0xdc0>
    5640:	mov	w0, #0x4                   	// #4
    5644:	b	5670 <PySequence_Fast@plt+0xde0>
    5648:	mov	w0, #0x10                  	// #16
    564c:	b	5670 <PySequence_Fast@plt+0xde0>
    5650:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5654:	ldr	x0, [x0, #3984]
    5658:	ldr	x2, [x0]
    565c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5660:	add	x1, x0, #0xc70
    5664:	mov	x0, x2
    5668:	bl	4340 <PyErr_SetString@plt>
    566c:	mov	w0, #0xffffffff            	// #-1
    5670:	ldp	x29, x30, [sp], #160
    5674:	ret
    5678:	stp	x29, x30, [sp, #-48]!
    567c:	mov	x29, sp
    5680:	str	x0, [sp, #24]
    5684:	ldr	x0, [sp, #24]
    5688:	add	x0, x0, #0x4
    568c:	add	x1, sp, #0x20
    5690:	mov	w3, #0x10                  	// #16
    5694:	mov	x2, x1
    5698:	mov	x1, x0
    569c:	mov	w0, #0x2                   	// #2
    56a0:	bl	4860 <inet_ntop@plt>
    56a4:	cmp	x0, #0x0
    56a8:	b.ne	56c4 <PySequence_Fast@plt+0xe34>  // b.any
    56ac:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    56b0:	ldr	x0, [x0, #3984]
    56b4:	ldr	x0, [x0]
    56b8:	bl	4230 <PyErr_SetFromErrno@plt>
    56bc:	mov	x0, #0x0                   	// #0
    56c0:	b	56cc <PySequence_Fast@plt+0xe3c>
    56c4:	add	x0, sp, #0x20
    56c8:	bl	46d0 <PyUnicode_FromString@plt>
    56cc:	ldp	x29, x30, [sp], #48
    56d0:	ret
    56d4:	stp	x29, x30, [sp, #-80]!
    56d8:	mov	x29, sp
    56dc:	str	x0, [sp, #24]
    56e0:	ldr	x0, [sp, #24]
    56e4:	add	x0, x0, #0x8
    56e8:	add	x1, sp, #0x20
    56ec:	mov	w3, #0x2e                  	// #46
    56f0:	mov	x2, x1
    56f4:	mov	x1, x0
    56f8:	mov	w0, #0xa                   	// #10
    56fc:	bl	4860 <inet_ntop@plt>
    5700:	cmp	x0, #0x0
    5704:	b.ne	5720 <PySequence_Fast@plt+0xe90>  // b.any
    5708:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    570c:	ldr	x0, [x0, #3984]
    5710:	ldr	x0, [x0]
    5714:	bl	4230 <PyErr_SetFromErrno@plt>
    5718:	mov	x0, #0x0                   	// #0
    571c:	b	5728 <PySequence_Fast@plt+0xe98>
    5720:	add	x0, sp, #0x20
    5724:	bl	46d0 <PyUnicode_FromString@plt>
    5728:	ldp	x29, x30, [sp], #80
    572c:	ret
    5730:	stp	x29, x30, [sp, #-256]!
    5734:	mov	x29, sp
    5738:	stp	x19, x20, [sp, #16]
    573c:	str	x21, [sp, #32]
    5740:	str	w0, [sp, #76]
    5744:	str	x1, [sp, #64]
    5748:	str	x2, [sp, #56]
    574c:	str	w3, [sp, #72]
    5750:	ldr	x0, [sp, #56]
    5754:	cmp	x0, #0x0
    5758:	b.ne	5774 <PySequence_Fast@plt+0xee4>  // b.any
    575c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5760:	ldr	x0, [x0, #4024]
    5764:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    5768:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    576c:	ldr	x0, [x0, #4024]
    5770:	b	5d1c <PySequence_Fast@plt+0x148c>
    5774:	ldr	x0, [sp, #64]
    5778:	ldrh	w0, [x0]
    577c:	cmp	w0, #0x2a
    5780:	b.eq	58f4 <PySequence_Fast@plt+0x1064>  // b.none
    5784:	cmp	w0, #0x2a
    5788:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    578c:	cmp	w0, #0x28
    5790:	b.eq	5920 <PySequence_Fast@plt+0x1090>  // b.none
    5794:	cmp	w0, #0x28
    5798:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    579c:	cmp	w0, #0x26
    57a0:	b.eq	5c7c <PySequence_Fast@plt+0x13ec>  // b.none
    57a4:	cmp	w0, #0x26
    57a8:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    57ac:	cmp	w0, #0x1e
    57b0:	b.eq	5a88 <PySequence_Fast@plt+0x11f8>  // b.none
    57b4:	cmp	w0, #0x1e
    57b8:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    57bc:	cmp	w0, #0x1d
    57c0:	b.eq	5bcc <PySequence_Fast@plt+0x133c>  // b.none
    57c4:	cmp	w0, #0x1d
    57c8:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    57cc:	cmp	w0, #0x11
    57d0:	b.eq	59d8 <PySequence_Fast@plt+0x1148>  // b.none
    57d4:	cmp	w0, #0x11
    57d8:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    57dc:	cmp	w0, #0x10
    57e0:	b.eq	58c8 <PySequence_Fast@plt+0x1038>  // b.none
    57e4:	cmp	w0, #0x10
    57e8:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    57ec:	cmp	w0, #0xa
    57f0:	b.eq	594c <PySequence_Fast@plt+0x10bc>  // b.none
    57f4:	cmp	w0, #0xa
    57f8:	b.gt	5cf4 <PySequence_Fast@plt+0x1464>
    57fc:	cmp	w0, #0x1
    5800:	b.eq	5874 <PySequence_Fast@plt+0xfe4>  // b.none
    5804:	cmp	w0, #0x2
    5808:	b.ne	5cf4 <PySequence_Fast@plt+0x1464>  // b.any
    580c:	ldr	x0, [sp, #64]
    5810:	str	x0, [sp, #144]
    5814:	ldr	x0, [sp, #144]
    5818:	bl	5678 <PySequence_Fast@plt+0xde8>
    581c:	str	x0, [sp, #136]
    5820:	str	xzr, [sp, #248]
    5824:	ldr	x0, [sp, #136]
    5828:	cmp	x0, #0x0
    582c:	b.eq	586c <PySequence_Fast@plt+0xfdc>  // b.none
    5830:	ldr	x0, [sp, #144]
    5834:	ldrh	w0, [x0, #2]
    5838:	bl	4330 <ntohs@plt>
    583c:	and	w0, w0, #0xffff
    5840:	mov	w2, w0
    5844:	ldr	x1, [sp, #136]
    5848:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    584c:	add	x0, x0, #0xc88
    5850:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5854:	str	x0, [sp, #248]
    5858:	ldr	x2, [sp, #136]
    585c:	mov	w1, #0x52b                 	// #1323
    5860:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5864:	add	x0, x0, #0xba0
    5868:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    586c:	ldr	x0, [sp, #248]
    5870:	b	5d1c <PySequence_Fast@plt+0x148c>
    5874:	ldr	x0, [sp, #64]
    5878:	str	x0, [sp, #128]
    587c:	ldr	x0, [sp, #56]
    5880:	sub	x0, x0, #0x2
    5884:	str	x0, [sp, #120]
    5888:	ldr	x0, [sp, #120]
    588c:	cmp	x0, #0x0
    5890:	b.eq	58b8 <PySequence_Fast@plt+0x1028>  // b.none
    5894:	ldr	x0, [sp, #128]
    5898:	ldrb	w0, [x0, #2]
    589c:	cmp	w0, #0x0
    58a0:	b.ne	58b8 <PySequence_Fast@plt+0x1028>  // b.any
    58a4:	ldr	x0, [sp, #128]
    58a8:	add	x0, x0, #0x2
    58ac:	ldr	x1, [sp, #120]
    58b0:	bl	4280 <PyBytes_FromStringAndSize@plt>
    58b4:	b	5d1c <PySequence_Fast@plt+0x148c>
    58b8:	ldr	x0, [sp, #128]
    58bc:	add	x0, x0, #0x2
    58c0:	bl	46a0 <PyUnicode_DecodeFSDefault@plt>
    58c4:	b	5d1c <PySequence_Fast@plt+0x148c>
    58c8:	ldr	x0, [sp, #64]
    58cc:	str	x0, [sp, #168]
    58d0:	ldr	x0, [sp, #168]
    58d4:	ldr	w1, [x0, #4]
    58d8:	ldr	x0, [sp, #168]
    58dc:	ldr	w0, [x0, #8]
    58e0:	mov	w2, w0
    58e4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    58e8:	add	x0, x0, #0xc90
    58ec:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    58f0:	b	5d1c <PySequence_Fast@plt+0x148c>
    58f4:	ldr	x0, [sp, #64]
    58f8:	str	x0, [sp, #216]
    58fc:	ldr	x0, [sp, #216]
    5900:	ldr	w1, [x0, #4]
    5904:	ldr	x0, [sp, #216]
    5908:	ldr	w0, [x0, #8]
    590c:	mov	w2, w0
    5910:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5914:	add	x0, x0, #0xc90
    5918:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    591c:	b	5d1c <PySequence_Fast@plt+0x148c>
    5920:	ldr	x0, [sp, #64]
    5924:	str	x0, [sp, #208]
    5928:	ldr	x0, [sp, #208]
    592c:	ldr	w1, [x0, #8]
    5930:	ldr	x0, [sp, #208]
    5934:	ldr	w0, [x0, #4]
    5938:	mov	w2, w0
    593c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5940:	add	x0, x0, #0xc90
    5944:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5948:	b	5d1c <PySequence_Fast@plt+0x148c>
    594c:	ldr	x0, [sp, #64]
    5950:	str	x0, [sp, #160]
    5954:	ldr	x0, [sp, #160]
    5958:	bl	56d4 <PySequence_Fast@plt+0xe44>
    595c:	str	x0, [sp, #152]
    5960:	str	xzr, [sp, #240]
    5964:	ldr	x0, [sp, #152]
    5968:	cmp	x0, #0x0
    596c:	b.eq	59d0 <PySequence_Fast@plt+0x1140>  // b.none
    5970:	ldr	x0, [sp, #160]
    5974:	ldrh	w0, [x0, #2]
    5978:	bl	4330 <ntohs@plt>
    597c:	and	w0, w0, #0xffff
    5980:	mov	w19, w0
    5984:	ldr	x0, [sp, #160]
    5988:	ldr	w0, [x0, #4]
    598c:	bl	4250 <ntohl@plt>
    5990:	mov	w1, w0
    5994:	ldr	x0, [sp, #160]
    5998:	ldr	w0, [x0, #24]
    599c:	mov	w4, w0
    59a0:	mov	w3, w1
    59a4:	mov	w2, w19
    59a8:	ldr	x1, [sp, #152]
    59ac:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    59b0:	add	x0, x0, #0xc98
    59b4:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    59b8:	str	x0, [sp, #240]
    59bc:	ldr	x2, [sp, #152]
    59c0:	mov	w1, #0x566                 	// #1382
    59c4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    59c8:	add	x0, x0, #0xba0
    59cc:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    59d0:	ldr	x0, [sp, #240]
    59d4:	b	5d1c <PySequence_Fast@plt+0x148c>
    59d8:	ldr	x0, [sp, #64]
    59dc:	str	x0, [sp, #176]
    59e0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    59e4:	add	x0, x0, #0xca0
    59e8:	str	x0, [sp, #232]
    59ec:	ldr	x0, [sp, #176]
    59f0:	ldr	w0, [x0, #4]
    59f4:	cmp	w0, #0x0
    59f8:	b.eq	5a2c <PySequence_Fast@plt+0x119c>  // b.none
    59fc:	ldr	x0, [sp, #176]
    5a00:	ldr	w0, [x0, #4]
    5a04:	str	w0, [sp, #96]
    5a08:	add	x0, sp, #0x50
    5a0c:	mov	x2, x0
    5a10:	mov	x1, #0x8910                	// #35088
    5a14:	ldr	w0, [sp, #76]
    5a18:	bl	4880 <ioctl@plt>
    5a1c:	cmp	w0, #0x0
    5a20:	b.ne	5a2c <PySequence_Fast@plt+0x119c>  // b.any
    5a24:	add	x0, sp, #0x50
    5a28:	str	x0, [sp, #232]
    5a2c:	ldr	x0, [sp, #176]
    5a30:	ldrh	w0, [x0, #2]
    5a34:	bl	4330 <ntohs@plt>
    5a38:	and	w0, w0, #0xffff
    5a3c:	mov	w2, w0
    5a40:	ldr	x0, [sp, #176]
    5a44:	ldrb	w0, [x0, #10]
    5a48:	mov	w3, w0
    5a4c:	ldr	x0, [sp, #176]
    5a50:	ldrh	w0, [x0, #8]
    5a54:	mov	w4, w0
    5a58:	ldr	x0, [sp, #176]
    5a5c:	add	x1, x0, #0xc
    5a60:	ldr	x0, [sp, #176]
    5a64:	ldrb	w0, [x0, #11]
    5a68:	and	x0, x0, #0xff
    5a6c:	mov	x6, x0
    5a70:	mov	x5, x1
    5a74:	ldr	x1, [sp, #232]
    5a78:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5a7c:	add	x0, x0, #0xca8
    5a80:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5a84:	b	5d1c <PySequence_Fast@plt+0x148c>
    5a88:	ldr	x0, [sp, #64]
    5a8c:	str	x0, [sp, #192]
    5a90:	ldr	x0, [sp, #192]
    5a94:	ldrb	w0, [x0, #2]
    5a98:	cmp	w0, #0x1
    5a9c:	b.ne	5af0 <PySequence_Fast@plt+0x1260>  // b.any
    5aa0:	ldr	x0, [sp, #192]
    5aa4:	ldrb	w0, [x0, #2]
    5aa8:	mov	w6, w0
    5aac:	ldr	x0, [sp, #192]
    5ab0:	ldr	w1, [x0, #4]
    5ab4:	ldr	x0, [sp, #192]
    5ab8:	ldr	w2, [x0, #8]
    5abc:	ldr	x0, [sp, #192]
    5ac0:	ldr	w3, [x0, #12]
    5ac4:	ldr	x0, [sp, #192]
    5ac8:	ldrsb	w0, [x0, #3]
    5acc:	mov	w5, w0
    5ad0:	mov	w4, w3
    5ad4:	mov	w3, w2
    5ad8:	mov	w2, w1
    5adc:	mov	w1, w6
    5ae0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5ae4:	add	x0, x0, #0xcb0
    5ae8:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5aec:	b	5d1c <PySequence_Fast@plt+0x148c>
    5af0:	ldr	x0, [sp, #192]
    5af4:	ldrb	w0, [x0, #2]
    5af8:	cmp	w0, #0x2
    5afc:	b.ne	5b50 <PySequence_Fast@plt+0x12c0>  // b.any
    5b00:	ldr	x0, [sp, #192]
    5b04:	ldrb	w0, [x0, #2]
    5b08:	mov	w6, w0
    5b0c:	ldr	x0, [sp, #192]
    5b10:	ldr	w1, [x0, #4]
    5b14:	ldr	x0, [sp, #192]
    5b18:	ldr	w2, [x0, #8]
    5b1c:	ldr	x0, [sp, #192]
    5b20:	ldr	w3, [x0, #8]
    5b24:	ldr	x0, [sp, #192]
    5b28:	ldrsb	w0, [x0, #3]
    5b2c:	mov	w5, w0
    5b30:	mov	w4, w3
    5b34:	mov	w3, w2
    5b38:	mov	w2, w1
    5b3c:	mov	w1, w6
    5b40:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5b44:	add	x0, x0, #0xcb0
    5b48:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5b4c:	b	5d1c <PySequence_Fast@plt+0x148c>
    5b50:	ldr	x0, [sp, #192]
    5b54:	ldrb	w0, [x0, #2]
    5b58:	cmp	w0, #0x3
    5b5c:	b.ne	5ba8 <PySequence_Fast@plt+0x1318>  // b.any
    5b60:	ldr	x0, [sp, #192]
    5b64:	ldrb	w0, [x0, #2]
    5b68:	mov	w6, w0
    5b6c:	ldr	x0, [sp, #192]
    5b70:	ldr	w1, [x0, #8]
    5b74:	ldr	x0, [sp, #192]
    5b78:	ldr	w2, [x0, #4]
    5b7c:	ldr	x0, [sp, #192]
    5b80:	ldrsb	w0, [x0, #3]
    5b84:	mov	w5, w0
    5b88:	mov	w4, #0x0                   	// #0
    5b8c:	mov	w3, w2
    5b90:	mov	w2, w1
    5b94:	mov	w1, w6
    5b98:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5b9c:	add	x0, x0, #0xcb0
    5ba0:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5ba4:	b	5d1c <PySequence_Fast@plt+0x148c>
    5ba8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5bac:	ldr	x0, [x0, #3960]
    5bb0:	ldr	x2, [x0]
    5bb4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5bb8:	add	x1, x0, #0xcb8
    5bbc:	mov	x0, x2
    5bc0:	bl	4340 <PyErr_SetString@plt>
    5bc4:	mov	x0, #0x0                   	// #0
    5bc8:	b	5d1c <PySequence_Fast@plt+0x148c>
    5bcc:	ldr	x0, [sp, #64]
    5bd0:	str	x0, [sp, #184]
    5bd4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5bd8:	add	x0, x0, #0xca0
    5bdc:	str	x0, [sp, #224]
    5be0:	ldr	x0, [sp, #184]
    5be4:	ldr	w0, [x0, #4]
    5be8:	cmp	w0, #0x0
    5bec:	b.eq	5c20 <PySequence_Fast@plt+0x1390>  // b.none
    5bf0:	ldr	x0, [sp, #184]
    5bf4:	ldr	w0, [x0, #4]
    5bf8:	str	w0, [sp, #96]
    5bfc:	add	x0, sp, #0x50
    5c00:	mov	x2, x0
    5c04:	mov	x1, #0x8910                	// #35088
    5c08:	ldr	w0, [sp, #76]
    5c0c:	bl	4880 <ioctl@plt>
    5c10:	cmp	w0, #0x0
    5c14:	b.ne	5c20 <PySequence_Fast@plt+0x1390>  // b.any
    5c18:	add	x0, sp, #0x50
    5c1c:	str	x0, [sp, #224]
    5c20:	ldr	w0, [sp, #72]
    5c24:	cmp	w0, #0x6
    5c28:	b.ne	5c60 <PySequence_Fast@plt+0x13d0>  // b.any
    5c2c:	ldr	x0, [sp, #184]
    5c30:	ldr	w1, [x0, #8]
    5c34:	ldr	x0, [sp, #184]
    5c38:	ldr	w0, [x0, #12]
    5c3c:	mov	w4, w0
    5c40:	mov	w3, w1
    5c44:	ldr	x2, [sp, #224]
    5c48:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5c4c:	ldr	x1, [x0, #4048]
    5c50:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5c54:	add	x0, x0, #0xcd0
    5c58:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5c5c:	b	5d1c <PySequence_Fast@plt+0x148c>
    5c60:	ldr	x2, [sp, #224]
    5c64:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5c68:	ldr	x1, [x0, #4048]
    5c6c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5c70:	add	x0, x0, #0xcd8
    5c74:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5c78:	b	5d1c <PySequence_Fast@plt+0x148c>
    5c7c:	ldr	x0, [sp, #64]
    5c80:	str	x0, [sp, #200]
    5c84:	ldr	x0, [sp, #200]
    5c88:	add	x19, x0, #0x2
    5c8c:	ldr	x0, [sp, #200]
    5c90:	add	x0, x0, #0x2
    5c94:	mov	x1, #0xe                   	// #14
    5c98:	bl	4200 <strnlen@plt>
    5c9c:	mov	x21, x0
    5ca0:	ldr	x0, [sp, #200]
    5ca4:	add	x20, x0, #0x18
    5ca8:	ldr	x0, [sp, #200]
    5cac:	add	x0, x0, #0x18
    5cb0:	mov	x1, #0x40                  	// #64
    5cb4:	bl	4200 <strnlen@plt>
    5cb8:	mov	x2, x0
    5cbc:	ldr	x0, [sp, #200]
    5cc0:	ldr	w1, [x0, #16]
    5cc4:	ldr	x0, [sp, #200]
    5cc8:	ldr	w0, [x0, #20]
    5ccc:	mov	w6, w0
    5cd0:	mov	w5, w1
    5cd4:	mov	x4, x2
    5cd8:	mov	x3, x20
    5cdc:	mov	x2, x21
    5ce0:	mov	x1, x19
    5ce4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5ce8:	add	x0, x0, #0xce0
    5cec:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5cf0:	b	5d1c <PySequence_Fast@plt+0x148c>
    5cf4:	ldr	x0, [sp, #64]
    5cf8:	ldrh	w0, [x0]
    5cfc:	mov	w1, w0
    5d00:	ldr	x0, [sp, #64]
    5d04:	add	x0, x0, #0x2
    5d08:	mov	x3, #0xe                   	// #14
    5d0c:	mov	x2, x0
    5d10:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5d14:	add	x0, x0, #0xce8
    5d18:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    5d1c:	ldp	x19, x20, [sp, #16]
    5d20:	ldr	x21, [sp, #32]
    5d24:	ldp	x29, x30, [sp], #256
    5d28:	ret
    5d2c:	stp	x29, x30, [sp, #-48]!
    5d30:	mov	x29, sp
    5d34:	str	x0, [sp, #24]
    5d38:	ldr	x0, [sp, #24]
    5d3c:	ldr	x0, [x0]
    5d40:	str	x0, [sp, #40]
    5d44:	ldr	x0, [sp, #40]
    5d48:	cmp	x0, #0x0
    5d4c:	b.eq	5d6c <PySequence_Fast@plt+0x14dc>  // b.none
    5d50:	ldr	x0, [sp, #24]
    5d54:	str	xzr, [x0]
    5d58:	ldr	x2, [sp, #40]
    5d5c:	mov	w1, #0x636                 	// #1590
    5d60:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5d64:	add	x0, x0, #0xba0
    5d68:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    5d6c:	nop
    5d70:	ldp	x29, x30, [sp], #48
    5d74:	ret
    5d78:	stp	x29, x30, [sp, #-64]!
    5d7c:	mov	x29, sp
    5d80:	str	x0, [sp, #24]
    5d84:	str	x1, [sp, #16]
    5d88:	ldr	x0, [sp, #24]
    5d8c:	cmp	x0, #0x0
    5d90:	b.ne	5da4 <PySequence_Fast@plt+0x1514>  // b.any
    5d94:	ldr	x0, [sp, #16]
    5d98:	bl	5d2c <PySequence_Fast@plt+0x149c>
    5d9c:	mov	w0, #0x1                   	// #1
    5da0:	b	604c <PySequence_Fast@plt+0x17bc>
    5da4:	ldr	x0, [sp, #16]
    5da8:	str	xzr, [x0]
    5dac:	mov	x0, #0xffffffffffffffff    	// #-1
    5db0:	str	x0, [sp, #56]
    5db4:	ldr	x0, [sp, #24]
    5db8:	ldr	x0, [x0, #8]
    5dbc:	ldr	x0, [x0, #168]
    5dc0:	and	x0, x0, #0x8000000
    5dc4:	cmp	x0, #0x0
    5dc8:	b.eq	5df0 <PySequence_Fast@plt+0x1560>  // b.none
    5dcc:	ldr	x0, [sp, #24]
    5dd0:	bl	4720 <PyBytes_AsString@plt>
    5dd4:	mov	x1, x0
    5dd8:	ldr	x0, [sp, #16]
    5ddc:	str	x1, [x0, #8]
    5de0:	ldr	x0, [sp, #24]
    5de4:	bl	44a0 <PyBytes_Size@plt>
    5de8:	str	x0, [sp, #56]
    5dec:	b	5fd4 <PySequence_Fast@plt+0x1744>
    5df0:	ldr	x0, [sp, #24]
    5df4:	ldr	x1, [x0, #8]
    5df8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5dfc:	ldr	x0, [x0, #3928]
    5e00:	cmp	x1, x0
    5e04:	b.eq	5e28 <PySequence_Fast@plt+0x1598>  // b.none
    5e08:	ldr	x0, [sp, #24]
    5e0c:	ldr	x2, [x0, #8]
    5e10:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5e14:	ldr	x1, [x0, #3928]
    5e18:	mov	x0, x2
    5e1c:	bl	4780 <PyType_IsSubtype@plt>
    5e20:	cmp	w0, #0x0
    5e24:	b.eq	5e4c <PySequence_Fast@plt+0x15bc>  // b.none
    5e28:	ldr	x0, [sp, #24]
    5e2c:	bl	43b0 <PyByteArray_AsString@plt>
    5e30:	mov	x1, x0
    5e34:	ldr	x0, [sp, #16]
    5e38:	str	x1, [x0, #8]
    5e3c:	ldr	x0, [sp, #24]
    5e40:	bl	4170 <PyByteArray_Size@plt>
    5e44:	str	x0, [sp, #56]
    5e48:	b	5fd4 <PySequence_Fast@plt+0x1744>
    5e4c:	ldr	x0, [sp, #24]
    5e50:	ldr	x0, [x0, #8]
    5e54:	ldr	x0, [x0, #168]
    5e58:	and	x0, x0, #0x10000000
    5e5c:	cmp	x0, #0x0
    5e60:	b.eq	5fa0 <PySequence_Fast@plt+0x1710>  // b.none
    5e64:	ldr	x0, [sp, #24]
    5e68:	ldrb	w0, [x0, #32]
    5e6c:	and	w0, w0, #0xffffff80
    5e70:	and	w0, w0, #0xff
    5e74:	cmp	w0, #0x0
    5e78:	b.ne	5e94 <PySequence_Fast@plt+0x1604>  // b.any
    5e7c:	ldr	x0, [sp, #24]
    5e80:	bl	4110 <_PyUnicode_Ready@plt>
    5e84:	cmn	w0, #0x1
    5e88:	b.ne	5e94 <PySequence_Fast@plt+0x1604>  // b.any
    5e8c:	mov	w0, #0x0                   	// #0
    5e90:	b	604c <PySequence_Fast@plt+0x17bc>
    5e94:	ldr	x0, [sp, #24]
    5e98:	ldrb	w0, [x0, #32]
    5e9c:	and	w0, w0, #0x40
    5ea0:	and	w0, w0, #0xff
    5ea4:	cmp	w0, #0x0
    5ea8:	b.eq	5f2c <PySequence_Fast@plt+0x169c>  // b.none
    5eac:	ldr	x0, [sp, #24]
    5eb0:	ldrb	w0, [x0, #32]
    5eb4:	and	w0, w0, #0x20
    5eb8:	and	w0, w0, #0xff
    5ebc:	cmp	w0, #0x0
    5ec0:	b.eq	5f2c <PySequence_Fast@plt+0x169c>  // b.none
    5ec4:	ldr	x0, [sp, #24]
    5ec8:	ldrb	w0, [x0, #32]
    5ecc:	and	w0, w0, #0x20
    5ed0:	and	w0, w0, #0xff
    5ed4:	cmp	w0, #0x0
    5ed8:	b.eq	5f0c <PySequence_Fast@plt+0x167c>  // b.none
    5edc:	ldr	x0, [sp, #24]
    5ee0:	ldrb	w0, [x0, #32]
    5ee4:	and	w0, w0, #0x40
    5ee8:	and	w0, w0, #0xff
    5eec:	cmp	w0, #0x0
    5ef0:	b.eq	5f00 <PySequence_Fast@plt+0x1670>  // b.none
    5ef4:	ldr	x0, [sp, #24]
    5ef8:	add	x0, x0, #0x30
    5efc:	b	5f14 <PySequence_Fast@plt+0x1684>
    5f00:	ldr	x0, [sp, #24]
    5f04:	add	x0, x0, #0x48
    5f08:	b	5f14 <PySequence_Fast@plt+0x1684>
    5f0c:	ldr	x0, [sp, #24]
    5f10:	ldr	x0, [x0, #72]
    5f14:	ldr	x1, [sp, #16]
    5f18:	str	x0, [x1, #8]
    5f1c:	ldr	x0, [sp, #24]
    5f20:	ldr	x0, [x0, #16]
    5f24:	str	x0, [sp, #56]
    5f28:	b	5fd4 <PySequence_Fast@plt+0x1744>
    5f2c:	mov	x2, #0x0                   	// #0
    5f30:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5f34:	add	x1, x0, #0xcf0
    5f38:	ldr	x0, [sp, #24]
    5f3c:	bl	4390 <PyUnicode_AsEncodedString@plt>
    5f40:	str	x0, [sp, #48]
    5f44:	ldr	x0, [sp, #48]
    5f48:	cmp	x0, #0x0
    5f4c:	b.ne	5f74 <PySequence_Fast@plt+0x16e4>  // b.any
    5f50:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5f54:	ldr	x0, [x0, #3976]
    5f58:	ldr	x2, [x0]
    5f5c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5f60:	add	x1, x0, #0xcf8
    5f64:	mov	x0, x2
    5f68:	bl	4340 <PyErr_SetString@plt>
    5f6c:	mov	w0, #0x0                   	// #0
    5f70:	b	604c <PySequence_Fast@plt+0x17bc>
    5f74:	ldr	x0, [sp, #16]
    5f78:	ldr	x1, [sp, #48]
    5f7c:	str	x1, [x0]
    5f80:	ldr	x0, [sp, #48]
    5f84:	add	x1, x0, #0x20
    5f88:	ldr	x0, [sp, #16]
    5f8c:	str	x1, [x0, #8]
    5f90:	ldr	x0, [sp, #48]
    5f94:	ldr	x0, [x0, #16]
    5f98:	str	x0, [sp, #56]
    5f9c:	b	5fd4 <PySequence_Fast@plt+0x1744>
    5fa0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    5fa4:	ldr	x0, [x0, #3976]
    5fa8:	ldr	x3, [x0]
    5fac:	ldr	x0, [sp, #24]
    5fb0:	ldr	x0, [x0, #8]
    5fb4:	ldr	x0, [x0, #24]
    5fb8:	mov	x2, x0
    5fbc:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    5fc0:	add	x1, x0, #0xd18
    5fc4:	mov	x0, x3
    5fc8:	bl	47a0 <PyErr_Format@plt>
    5fcc:	mov	w0, #0x0                   	// #0
    5fd0:	b	604c <PySequence_Fast@plt+0x17bc>
    5fd4:	ldr	x0, [sp, #16]
    5fd8:	ldr	x0, [x0, #8]
    5fdc:	bl	4150 <strlen@plt>
    5fe0:	mov	x1, x0
    5fe4:	ldr	x0, [sp, #56]
    5fe8:	cmp	x0, x1
    5fec:	b.eq	6048 <PySequence_Fast@plt+0x17b8>  // b.none
    5ff0:	ldr	x0, [sp, #16]
    5ff4:	ldr	x0, [x0]
    5ff8:	str	x0, [sp, #40]
    5ffc:	ldr	x0, [sp, #40]
    6000:	cmp	x0, #0x0
    6004:	b.eq	6024 <PySequence_Fast@plt+0x1794>  // b.none
    6008:	ldr	x0, [sp, #16]
    600c:	str	xzr, [x0]
    6010:	ldr	x2, [sp, #40]
    6014:	mov	w1, #0x666                 	// #1638
    6018:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    601c:	add	x0, x0, #0xba0
    6020:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6024:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6028:	ldr	x0, [x0, #3976]
    602c:	ldr	x2, [x0]
    6030:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6034:	add	x1, x0, #0xd48
    6038:	mov	x0, x2
    603c:	bl	4340 <PyErr_SetString@plt>
    6040:	mov	w0, #0x0                   	// #0
    6044:	b	604c <PySequence_Fast@plt+0x17bc>
    6048:	mov	w0, #0x20000               	// #131072
    604c:	ldp	x29, x30, [sp], #64
    6050:	ret
    6054:	stp	x29, x30, [sp, #-480]!
    6058:	mov	x29, sp
    605c:	str	x0, [sp, #56]
    6060:	str	x1, [sp, #48]
    6064:	str	x2, [sp, #40]
    6068:	str	x3, [sp, #32]
    606c:	str	x4, [sp, #24]
    6070:	ldr	x0, [sp, #56]
    6074:	ldr	w0, [x0, #20]
    6078:	cmp	w0, #0x2a
    607c:	b.eq	6358 <PySequence_Fast@plt+0x1ac8>  // b.none
    6080:	cmp	w0, #0x2a
    6084:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    6088:	cmp	w0, #0x28
    608c:	b.eq	6414 <PySequence_Fast@plt+0x1b84>  // b.none
    6090:	cmp	w0, #0x28
    6094:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    6098:	cmp	w0, #0x26
    609c:	b.eq	6fe8 <PySequence_Fast@plt+0x2758>  // b.none
    60a0:	cmp	w0, #0x26
    60a4:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    60a8:	cmp	w0, #0x1e
    60ac:	b.eq	6ae8 <PySequence_Fast@plt+0x2258>  // b.none
    60b0:	cmp	w0, #0x1e
    60b4:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    60b8:	cmp	w0, #0x1d
    60bc:	b.eq	6c88 <PySequence_Fast@plt+0x23f8>  // b.none
    60c0:	cmp	w0, #0x1d
    60c4:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    60c8:	cmp	w0, #0x15
    60cc:	b.eq	64f0 <PySequence_Fast@plt+0x1c60>  // b.none
    60d0:	cmp	w0, #0x15
    60d4:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    60d8:	cmp	w0, #0x11
    60dc:	b.eq	686c <PySequence_Fast@plt+0x1fdc>  // b.none
    60e0:	cmp	w0, #0x11
    60e4:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    60e8:	cmp	w0, #0x10
    60ec:	b.eq	6290 <PySequence_Fast@plt+0x1a00>  // b.none
    60f0:	cmp	w0, #0x10
    60f4:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    60f8:	cmp	w0, #0xa
    60fc:	b.eq	6670 <PySequence_Fast@plt+0x1de0>  // b.none
    6100:	cmp	w0, #0xa
    6104:	b.gt	7148 <PySequence_Fast@plt+0x28b8>
    6108:	cmp	w0, #0x1
    610c:	b.eq	611c <PySequence_Fast@plt+0x188c>  // b.none
    6110:	cmp	w0, #0x2
    6114:	b.eq	64f0 <PySequence_Fast@plt+0x1c60>  // b.none
    6118:	b	7148 <PySequence_Fast@plt+0x28b8>
    611c:	str	wzr, [sp, #476]
    6120:	ldr	x0, [sp, #48]
    6124:	ldr	x0, [x0, #8]
    6128:	ldr	x0, [x0, #168]
    612c:	and	x0, x0, #0x10000000
    6130:	cmp	x0, #0x0
    6134:	b.eq	6158 <PySequence_Fast@plt+0x18c8>  // b.none
    6138:	ldr	x0, [sp, #48]
    613c:	bl	4490 <PyUnicode_EncodeFSDefault@plt>
    6140:	str	x0, [sp, #48]
    6144:	ldr	x0, [sp, #48]
    6148:	cmp	x0, #0x0
    614c:	b.ne	6160 <PySequence_Fast@plt+0x18d0>  // b.any
    6150:	mov	w0, #0x0                   	// #0
    6154:	b	716c <PySequence_Fast@plt+0x28dc>
    6158:	ldr	x0, [sp, #48]
    615c:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    6160:	add	x0, sp, #0x68
    6164:	mov	x2, x0
    6168:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    616c:	add	x1, x0, #0xd78
    6170:	ldr	x0, [sp, #48]
    6174:	bl	4470 <_PyArg_Parse_SizeT@plt>
    6178:	cmp	w0, #0x0
    617c:	b.ne	619c <PySequence_Fast@plt+0x190c>  // b.any
    6180:	ldr	x2, [sp, #48]
    6184:	mov	w1, #0x688                 	// #1672
    6188:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    618c:	add	x0, x0, #0xba0
    6190:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6194:	ldr	w0, [sp, #476]
    6198:	b	716c <PySequence_Fast@plt+0x28dc>
    619c:	ldr	x0, [sp, #40]
    61a0:	str	x0, [sp, #352]
    61a4:	ldr	x0, [sp, #120]
    61a8:	cmp	x0, #0x0
    61ac:	b.le	61ec <PySequence_Fast@plt+0x195c>
    61b0:	ldr	x0, [sp, #104]
    61b4:	ldrb	w0, [x0]
    61b8:	cmp	w0, #0x0
    61bc:	b.ne	61ec <PySequence_Fast@plt+0x195c>  // b.any
    61c0:	ldr	x0, [sp, #120]
    61c4:	cmp	x0, #0x6c
    61c8:	b.ls	6228 <PySequence_Fast@plt+0x1998>  // b.plast
    61cc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    61d0:	ldr	x0, [x0, #3984]
    61d4:	ldr	x2, [x0]
    61d8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    61dc:	add	x1, x0, #0xd80
    61e0:	mov	x0, x2
    61e4:	bl	4340 <PyErr_SetString@plt>
    61e8:	b	626c <PySequence_Fast@plt+0x19dc>
    61ec:	ldr	x0, [sp, #120]
    61f0:	cmp	x0, #0x6b
    61f4:	b.ls	6218 <PySequence_Fast@plt+0x1988>  // b.plast
    61f8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    61fc:	ldr	x0, [x0, #3984]
    6200:	ldr	x2, [x0]
    6204:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6208:	add	x1, x0, #0xd80
    620c:	mov	x0, x2
    6210:	bl	4340 <PyErr_SetString@plt>
    6214:	b	626c <PySequence_Fast@plt+0x19dc>
    6218:	ldr	x0, [sp, #120]
    621c:	ldr	x1, [sp, #352]
    6220:	add	x0, x1, x0
    6224:	strb	wzr, [x0, #2]
    6228:	ldr	x0, [sp, #56]
    622c:	ldr	w0, [x0, #20]
    6230:	and	w1, w0, #0xffff
    6234:	ldr	x0, [sp, #352]
    6238:	strh	w1, [x0]
    623c:	ldr	x0, [sp, #352]
    6240:	add	x0, x0, #0x2
    6244:	ldr	x1, [sp, #104]
    6248:	ldr	x2, [sp, #120]
    624c:	bl	40d0 <memcpy@plt>
    6250:	ldr	x0, [sp, #120]
    6254:	add	w0, w0, #0x2
    6258:	mov	w1, w0
    625c:	ldr	x0, [sp, #32]
    6260:	str	w1, [x0]
    6264:	mov	w0, #0x1                   	// #1
    6268:	str	w0, [sp, #476]
    626c:	add	x0, sp, #0x68
    6270:	bl	4260 <PyBuffer_Release@plt>
    6274:	ldr	x2, [sp, #48]
    6278:	mov	w1, #0x6a8                 	// #1704
    627c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6280:	add	x0, x0, #0xba0
    6284:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6288:	ldr	w0, [sp, #476]
    628c:	b	716c <PySequence_Fast@plt+0x28dc>
    6290:	ldr	x0, [sp, #40]
    6294:	str	x0, [sp, #392]
    6298:	ldr	x0, [sp, #48]
    629c:	ldr	x0, [x0, #8]
    62a0:	ldr	x0, [x0, #168]
    62a4:	and	x0, x0, #0x4000000
    62a8:	cmp	x0, #0x0
    62ac:	b.ne	62e8 <PySequence_Fast@plt+0x1a58>  // b.any
    62b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    62b4:	ldr	x0, [x0, #3976]
    62b8:	ldr	x4, [x0]
    62bc:	ldr	x0, [sp, #48]
    62c0:	ldr	x0, [x0, #8]
    62c4:	ldr	x0, [x0, #24]
    62c8:	mov	x3, x0
    62cc:	ldr	x2, [sp, #24]
    62d0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    62d4:	add	x1, x0, #0xd98
    62d8:	mov	x0, x4
    62dc:	bl	47a0 <PyErr_Format@plt>
    62e0:	mov	w0, #0x0                   	// #0
    62e4:	b	716c <PySequence_Fast@plt+0x28dc>
    62e8:	add	x1, sp, #0x158
    62ec:	add	x0, sp, #0x15c
    62f0:	mov	x3, x1
    62f4:	mov	x2, x0
    62f8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    62fc:	add	x1, x0, #0xdd0
    6300:	ldr	x0, [sp, #48]
    6304:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6308:	cmp	w0, #0x0
    630c:	b.ne	6318 <PySequence_Fast@plt+0x1a88>  // b.any
    6310:	mov	w0, #0x0                   	// #0
    6314:	b	716c <PySequence_Fast@plt+0x28dc>
    6318:	ldr	x0, [sp, #392]
    631c:	mov	w1, #0x10                  	// #16
    6320:	strh	w1, [x0]
    6324:	ldr	w0, [sp, #348]
    6328:	mov	w1, w0
    632c:	ldr	x0, [sp, #392]
    6330:	str	w1, [x0, #4]
    6334:	ldr	w0, [sp, #344]
    6338:	mov	w1, w0
    633c:	ldr	x0, [sp, #392]
    6340:	str	w1, [x0, #8]
    6344:	ldr	x0, [sp, #32]
    6348:	mov	w1, #0xc                   	// #12
    634c:	str	w1, [x0]
    6350:	mov	w0, #0x1                   	// #1
    6354:	b	716c <PySequence_Fast@plt+0x28dc>
    6358:	ldr	x0, [sp, #40]
    635c:	str	x0, [sp, #464]
    6360:	ldr	x0, [sp, #48]
    6364:	ldr	x0, [x0, #8]
    6368:	ldr	x0, [x0, #168]
    636c:	and	x0, x0, #0x4000000
    6370:	cmp	x0, #0x0
    6374:	b.ne	63ac <PySequence_Fast@plt+0x1b1c>  // b.any
    6378:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    637c:	ldr	x0, [x0, #3976]
    6380:	ldr	x3, [x0]
    6384:	ldr	x0, [sp, #48]
    6388:	ldr	x0, [x0, #8]
    638c:	ldr	x0, [x0, #24]
    6390:	mov	x2, x0
    6394:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6398:	add	x1, x0, #0xe08
    639c:	mov	x0, x3
    63a0:	bl	47a0 <PyErr_Format@plt>
    63a4:	mov	w0, #0x0                   	// #0
    63a8:	b	716c <PySequence_Fast@plt+0x28dc>
    63ac:	add	x1, sp, #0x150
    63b0:	add	x0, sp, #0x154
    63b4:	mov	x3, x1
    63b8:	mov	x2, x0
    63bc:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    63c0:	add	x1, x0, #0xe48
    63c4:	ldr	x0, [sp, #48]
    63c8:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    63cc:	cmp	w0, #0x0
    63d0:	b.ne	63dc <PySequence_Fast@plt+0x1b4c>  // b.any
    63d4:	mov	w0, #0x0                   	// #0
    63d8:	b	716c <PySequence_Fast@plt+0x28dc>
    63dc:	ldr	x0, [sp, #464]
    63e0:	mov	w1, #0x2a                  	// #42
    63e4:	strh	w1, [x0]
    63e8:	ldr	w1, [sp, #340]
    63ec:	ldr	x0, [sp, #464]
    63f0:	str	w1, [x0, #4]
    63f4:	ldr	w1, [sp, #336]
    63f8:	ldr	x0, [sp, #464]
    63fc:	str	w1, [x0, #8]
    6400:	ldr	x0, [sp, #32]
    6404:	mov	w1, #0xc                   	// #12
    6408:	str	w1, [x0]
    640c:	mov	w0, #0x1                   	// #1
    6410:	b	716c <PySequence_Fast@plt+0x28dc>
    6414:	ldr	x0, [sp, #40]
    6418:	str	x0, [sp, #456]
    641c:	mov	x2, #0x10                  	// #16
    6420:	mov	w1, #0x0                   	// #0
    6424:	ldr	x0, [sp, #456]
    6428:	bl	43e0 <memset@plt>
    642c:	ldr	x0, [sp, #48]
    6430:	ldr	x0, [x0, #8]
    6434:	ldr	x0, [x0, #168]
    6438:	and	x0, x0, #0x4000000
    643c:	cmp	x0, #0x0
    6440:	b.ne	6478 <PySequence_Fast@plt+0x1be8>  // b.any
    6444:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6448:	ldr	x0, [x0, #3976]
    644c:	ldr	x3, [x0]
    6450:	ldr	x0, [sp, #48]
    6454:	ldr	x0, [x0, #8]
    6458:	ldr	x0, [x0, #24]
    645c:	mov	x2, x0
    6460:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6464:	add	x1, x0, #0xe60
    6468:	mov	x0, x3
    646c:	bl	47a0 <PyErr_Format@plt>
    6470:	mov	w0, #0x0                   	// #0
    6474:	b	716c <PySequence_Fast@plt+0x28dc>
    6478:	add	x1, sp, #0x14c
    647c:	add	x0, sp, #0x148
    6480:	mov	x3, x1
    6484:	mov	x2, x0
    6488:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    648c:	add	x1, x0, #0xe48
    6490:	ldr	x0, [sp, #48]
    6494:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6498:	cmp	w0, #0x0
    649c:	b.ne	64a8 <PySequence_Fast@plt+0x1c18>  // b.any
    64a0:	mov	w0, #0x0                   	// #0
    64a4:	b	716c <PySequence_Fast@plt+0x28dc>
    64a8:	ldr	x0, [sp, #56]
    64ac:	ldr	w0, [x0, #20]
    64b0:	and	w1, w0, #0xffff
    64b4:	ldr	x0, [sp, #456]
    64b8:	strh	w1, [x0]
    64bc:	ldr	w0, [sp, #332]
    64c0:	mov	w1, w0
    64c4:	ldr	x0, [sp, #456]
    64c8:	str	w1, [x0, #4]
    64cc:	ldr	w0, [sp, #328]
    64d0:	mov	w1, w0
    64d4:	ldr	x0, [sp, #456]
    64d8:	str	w1, [x0, #8]
    64dc:	ldr	x0, [sp, #32]
    64e0:	mov	w1, #0x10                  	// #16
    64e4:	str	w1, [x0]
    64e8:	mov	w0, #0x1                   	// #1
    64ec:	b	716c <PySequence_Fast@plt+0x28dc>
    64f0:	str	xzr, [sp, #312]
    64f4:	str	xzr, [sp, #320]
    64f8:	ldr	x0, [sp, #48]
    64fc:	ldr	x0, [x0, #8]
    6500:	ldr	x0, [x0, #168]
    6504:	and	x0, x0, #0x4000000
    6508:	cmp	x0, #0x0
    650c:	b.ne	6548 <PySequence_Fast@plt+0x1cb8>  // b.any
    6510:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6514:	ldr	x0, [x0, #3976]
    6518:	ldr	x4, [x0]
    651c:	ldr	x0, [sp, #48]
    6520:	ldr	x0, [x0, #8]
    6524:	ldr	x0, [x0, #24]
    6528:	mov	x3, x0
    652c:	ldr	x2, [sp, #24]
    6530:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6534:	add	x1, x0, #0xea0
    6538:	mov	x0, x4
    653c:	bl	47a0 <PyErr_Format@plt>
    6540:	mov	w0, #0x0                   	// #0
    6544:	b	716c <PySequence_Fast@plt+0x28dc>
    6548:	add	x1, sp, #0x134
    654c:	add	x0, sp, #0x138
    6550:	mov	x4, x1
    6554:	mov	x3, x0
    6558:	adrp	x0, 5000 <PySequence_Fast@plt+0x770>
    655c:	add	x2, x0, #0xd78
    6560:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6564:	add	x1, x0, #0xed0
    6568:	ldr	x0, [sp, #48]
    656c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6570:	cmp	w0, #0x0
    6574:	b.ne	65b8 <PySequence_Fast@plt+0x1d28>  // b.any
    6578:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    657c:	ldr	x0, [x0, #4008]
    6580:	ldr	x0, [x0]
    6584:	bl	43c0 <PyErr_ExceptionMatches@plt>
    6588:	cmp	w0, #0x0
    658c:	b.eq	65b0 <PySequence_Fast@plt+0x1d20>  // b.none
    6590:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6594:	ldr	x0, [x0, #4008]
    6598:	ldr	x3, [x0]
    659c:	ldr	x2, [sp, #24]
    65a0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    65a4:	add	x1, x0, #0xf00
    65a8:	mov	x0, x3
    65ac:	bl	47a0 <PyErr_Format@plt>
    65b0:	mov	w0, #0x0                   	// #0
    65b4:	b	716c <PySequence_Fast@plt+0x28dc>
    65b8:	ldr	x0, [sp, #40]
    65bc:	str	x0, [sp, #368]
    65c0:	ldr	x0, [sp, #320]
    65c4:	mov	w3, #0x2                   	// #2
    65c8:	mov	x2, #0x10                  	// #16
    65cc:	ldr	x1, [sp, #368]
    65d0:	bl	525c <PySequence_Fast@plt+0x9cc>
    65d4:	str	w0, [sp, #364]
    65d8:	add	x0, sp, #0x138
    65dc:	bl	5d2c <PySequence_Fast@plt+0x149c>
    65e0:	ldr	w0, [sp, #364]
    65e4:	cmp	w0, #0x0
    65e8:	b.ge	65f4 <PySequence_Fast@plt+0x1d64>  // b.tcont
    65ec:	mov	w0, #0x0                   	// #0
    65f0:	b	716c <PySequence_Fast@plt+0x28dc>
    65f4:	ldr	w0, [sp, #308]
    65f8:	cmp	w0, #0x0
    65fc:	b.lt	6610 <PySequence_Fast@plt+0x1d80>  // b.tstop
    6600:	ldr	w1, [sp, #308]
    6604:	mov	w0, #0xffff                	// #65535
    6608:	cmp	w1, w0
    660c:	b.le	6638 <PySequence_Fast@plt+0x1da8>
    6610:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6614:	ldr	x0, [x0, #4008]
    6618:	ldr	x3, [x0]
    661c:	ldr	x2, [sp, #24]
    6620:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6624:	add	x1, x0, #0xf00
    6628:	mov	x0, x3
    662c:	bl	47a0 <PyErr_Format@plt>
    6630:	mov	w0, #0x0                   	// #0
    6634:	b	716c <PySequence_Fast@plt+0x28dc>
    6638:	ldr	x0, [sp, #368]
    663c:	mov	w1, #0x2                   	// #2
    6640:	strh	w1, [x0]
    6644:	ldr	w0, [sp, #308]
    6648:	and	w0, w0, #0xffff
    664c:	bl	44c0 <htons@plt>
    6650:	and	w1, w0, #0xffff
    6654:	ldr	x0, [sp, #368]
    6658:	strh	w1, [x0, #2]
    665c:	ldr	x0, [sp, #32]
    6660:	mov	w1, #0x10                  	// #16
    6664:	str	w1, [x0]
    6668:	mov	w0, #0x1                   	// #1
    666c:	b	716c <PySequence_Fast@plt+0x28dc>
    6670:	str	xzr, [sp, #288]
    6674:	str	xzr, [sp, #296]
    6678:	str	wzr, [sp, #276]
    667c:	ldr	w0, [sp, #276]
    6680:	str	w0, [sp, #280]
    6684:	ldr	x0, [sp, #48]
    6688:	ldr	x0, [x0, #8]
    668c:	ldr	x0, [x0, #168]
    6690:	and	x0, x0, #0x4000000
    6694:	cmp	x0, #0x0
    6698:	b.ne	66d4 <PySequence_Fast@plt+0x1e44>  // b.any
    669c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    66a0:	ldr	x0, [x0, #3976]
    66a4:	ldr	x4, [x0]
    66a8:	ldr	x0, [sp, #48]
    66ac:	ldr	x0, [x0, #8]
    66b0:	ldr	x0, [x0, #24]
    66b4:	mov	x3, x0
    66b8:	ldr	x2, [sp, #24]
    66bc:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    66c0:	add	x1, x0, #0xf20
    66c4:	mov	x0, x4
    66c8:	bl	47a0 <PyErr_Format@plt>
    66cc:	mov	w0, #0x0                   	// #0
    66d0:	b	716c <PySequence_Fast@plt+0x28dc>
    66d4:	add	x3, sp, #0x114
    66d8:	add	x2, sp, #0x118
    66dc:	add	x1, sp, #0x11c
    66e0:	add	x0, sp, #0x120
    66e4:	mov	x6, x3
    66e8:	mov	x5, x2
    66ec:	mov	x4, x1
    66f0:	mov	x3, x0
    66f4:	adrp	x0, 5000 <PySequence_Fast@plt+0x770>
    66f8:	add	x2, x0, #0xd78
    66fc:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6700:	add	x1, x0, #0xf58
    6704:	ldr	x0, [sp, #48]
    6708:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    670c:	cmp	w0, #0x0
    6710:	b.ne	6754 <PySequence_Fast@plt+0x1ec4>  // b.any
    6714:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6718:	ldr	x0, [x0, #4008]
    671c:	ldr	x0, [x0]
    6720:	bl	43c0 <PyErr_ExceptionMatches@plt>
    6724:	cmp	w0, #0x0
    6728:	b.eq	674c <PySequence_Fast@plt+0x1ebc>  // b.none
    672c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6730:	ldr	x0, [x0, #4008]
    6734:	ldr	x3, [x0]
    6738:	ldr	x2, [sp, #24]
    673c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6740:	add	x1, x0, #0xf00
    6744:	mov	x0, x3
    6748:	bl	47a0 <PyErr_Format@plt>
    674c:	mov	w0, #0x0                   	// #0
    6750:	b	716c <PySequence_Fast@plt+0x28dc>
    6754:	ldr	x0, [sp, #40]
    6758:	str	x0, [sp, #384]
    675c:	ldr	x0, [sp, #296]
    6760:	mov	w3, #0xa                   	// #10
    6764:	mov	x2, #0x1c                  	// #28
    6768:	ldr	x1, [sp, #384]
    676c:	bl	525c <PySequence_Fast@plt+0x9cc>
    6770:	str	w0, [sp, #380]
    6774:	add	x0, sp, #0x120
    6778:	bl	5d2c <PySequence_Fast@plt+0x149c>
    677c:	ldr	w0, [sp, #380]
    6780:	cmp	w0, #0x0
    6784:	b.ge	6790 <PySequence_Fast@plt+0x1f00>  // b.tcont
    6788:	mov	w0, #0x0                   	// #0
    678c:	b	716c <PySequence_Fast@plt+0x28dc>
    6790:	ldr	w0, [sp, #284]
    6794:	cmp	w0, #0x0
    6798:	b.lt	67ac <PySequence_Fast@plt+0x1f1c>  // b.tstop
    679c:	ldr	w1, [sp, #284]
    67a0:	mov	w0, #0xffff                	// #65535
    67a4:	cmp	w1, w0
    67a8:	b.le	67d4 <PySequence_Fast@plt+0x1f44>
    67ac:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    67b0:	ldr	x0, [x0, #4008]
    67b4:	ldr	x3, [x0]
    67b8:	ldr	x2, [sp, #24]
    67bc:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    67c0:	add	x1, x0, #0xf00
    67c4:	mov	x0, x3
    67c8:	bl	47a0 <PyErr_Format@plt>
    67cc:	mov	w0, #0x0                   	// #0
    67d0:	b	716c <PySequence_Fast@plt+0x28dc>
    67d4:	ldr	w1, [sp, #280]
    67d8:	mov	w0, #0xfffff               	// #1048575
    67dc:	cmp	w1, w0
    67e0:	b.ls	680c <PySequence_Fast@plt+0x1f7c>  // b.plast
    67e4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    67e8:	ldr	x0, [x0, #4008]
    67ec:	ldr	x3, [x0]
    67f0:	ldr	x2, [sp, #24]
    67f4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    67f8:	add	x1, x0, #0xfa8
    67fc:	mov	x0, x3
    6800:	bl	47a0 <PyErr_Format@plt>
    6804:	mov	w0, #0x0                   	// #0
    6808:	b	716c <PySequence_Fast@plt+0x28dc>
    680c:	ldr	x0, [sp, #56]
    6810:	ldr	w0, [x0, #20]
    6814:	and	w1, w0, #0xffff
    6818:	ldr	x0, [sp, #384]
    681c:	strh	w1, [x0]
    6820:	ldr	w0, [sp, #284]
    6824:	and	w0, w0, #0xffff
    6828:	bl	44c0 <htons@plt>
    682c:	and	w1, w0, #0xffff
    6830:	ldr	x0, [sp, #384]
    6834:	strh	w1, [x0, #2]
    6838:	ldr	w0, [sp, #280]
    683c:	bl	41d0 <htonl@plt>
    6840:	mov	w1, w0
    6844:	ldr	x0, [sp, #384]
    6848:	str	w1, [x0, #4]
    684c:	ldr	w1, [sp, #276]
    6850:	ldr	x0, [sp, #384]
    6854:	str	w1, [x0, #24]
    6858:	ldr	x0, [sp, #32]
    685c:	mov	w1, #0x1c                  	// #28
    6860:	str	w1, [x0]
    6864:	mov	w0, #0x1                   	// #1
    6868:	b	716c <PySequence_Fast@plt+0x28dc>
    686c:	str	wzr, [sp, #256]
    6870:	str	wzr, [sp, #252]
    6874:	stp	xzr, xzr, [sp, #104]
    6878:	stp	xzr, xzr, [sp, #120]
    687c:	stp	xzr, xzr, [sp, #136]
    6880:	stp	xzr, xzr, [sp, #152]
    6884:	stp	xzr, xzr, [sp, #168]
    6888:	ldr	x0, [sp, #48]
    688c:	ldr	x0, [x0, #8]
    6890:	ldr	x0, [x0, #168]
    6894:	and	x0, x0, #0x4000000
    6898:	cmp	x0, #0x0
    689c:	b.ne	68d8 <PySequence_Fast@plt+0x2048>  // b.any
    68a0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    68a4:	ldr	x0, [x0, #3976]
    68a8:	ldr	x4, [x0]
    68ac:	ldr	x0, [sp, #48]
    68b0:	ldr	x0, [x0, #8]
    68b4:	ldr	x0, [x0, #24]
    68b8:	mov	x3, x0
    68bc:	ldr	x2, [sp, #24]
    68c0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    68c4:	add	x1, x0, #0xfd0
    68c8:	mov	x0, x4
    68cc:	bl	47a0 <PyErr_Format@plt>
    68d0:	mov	w0, #0x0                   	// #0
    68d4:	b	716c <PySequence_Fast@plt+0x28dc>
    68d8:	add	x4, sp, #0x68
    68dc:	add	x3, sp, #0x100
    68e0:	add	x2, sp, #0xfc
    68e4:	add	x1, sp, #0x104
    68e8:	add	x0, sp, #0x108
    68ec:	mov	x6, x4
    68f0:	mov	x5, x3
    68f4:	mov	x4, x2
    68f8:	mov	x3, x1
    68fc:	mov	x2, x0
    6900:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6904:	add	x1, x0, #0x8
    6908:	ldr	x0, [sp, #48]
    690c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6910:	cmp	w0, #0x0
    6914:	b.ne	6958 <PySequence_Fast@plt+0x20c8>  // b.any
    6918:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    691c:	ldr	x0, [x0, #4008]
    6920:	ldr	x0, [x0]
    6924:	bl	43c0 <PyErr_ExceptionMatches@plt>
    6928:	cmp	w0, #0x0
    692c:	b.eq	6950 <PySequence_Fast@plt+0x20c0>  // b.none
    6930:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6934:	ldr	x0, [x0, #4008]
    6938:	ldr	x3, [x0]
    693c:	ldr	x2, [sp, #24]
    6940:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6944:	add	x1, x0, #0x50
    6948:	mov	x0, x3
    694c:	bl	47a0 <PyErr_Format@plt>
    6950:	mov	w0, #0x0                   	// #0
    6954:	b	716c <PySequence_Fast@plt+0x28dc>
    6958:	ldr	x1, [sp, #264]
    695c:	add	x0, sp, #0x40
    6960:	mov	x2, #0x10                  	// #16
    6964:	bl	47d0 <strncpy@plt>
    6968:	strb	wzr, [sp, #79]
    696c:	ldr	x0, [sp, #56]
    6970:	ldr	w0, [x0, #16]
    6974:	add	x1, sp, #0x40
    6978:	mov	x2, x1
    697c:	mov	x1, #0x8933                	// #35123
    6980:	bl	4880 <ioctl@plt>
    6984:	cmp	w0, #0x0
    6988:	b.ge	69a8 <PySequence_Fast@plt+0x2118>  // b.tcont
    698c:	ldr	x0, [sp, #56]
    6990:	ldr	x0, [x0, #32]
    6994:	blr	x0
    6998:	add	x0, sp, #0x68
    699c:	bl	4260 <PyBuffer_Release@plt>
    69a0:	mov	w0, #0x0                   	// #0
    69a4:	b	716c <PySequence_Fast@plt+0x28dc>
    69a8:	ldr	x0, [sp, #104]
    69ac:	cmp	x0, #0x0
    69b0:	b.eq	69ec <PySequence_Fast@plt+0x215c>  // b.none
    69b4:	ldr	x0, [sp, #120]
    69b8:	cmp	x0, #0x8
    69bc:	b.le	69ec <PySequence_Fast@plt+0x215c>
    69c0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    69c4:	ldr	x0, [x0, #3960]
    69c8:	ldr	x2, [x0]
    69cc:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    69d0:	add	x1, x0, #0x78
    69d4:	mov	x0, x2
    69d8:	bl	4340 <PyErr_SetString@plt>
    69dc:	add	x0, sp, #0x68
    69e0:	bl	4260 <PyBuffer_Release@plt>
    69e4:	mov	w0, #0x0                   	// #0
    69e8:	b	716c <PySequence_Fast@plt+0x28dc>
    69ec:	ldr	w0, [sp, #260]
    69f0:	cmp	w0, #0x0
    69f4:	b.lt	6a08 <PySequence_Fast@plt+0x2178>  // b.tstop
    69f8:	ldr	w1, [sp, #260]
    69fc:	mov	w0, #0xffff                	// #65535
    6a00:	cmp	w1, w0
    6a04:	b.le	6a38 <PySequence_Fast@plt+0x21a8>
    6a08:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6a0c:	ldr	x0, [x0, #4008]
    6a10:	ldr	x3, [x0]
    6a14:	ldr	x2, [sp, #24]
    6a18:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6a1c:	add	x1, x0, #0xa8
    6a20:	mov	x0, x3
    6a24:	bl	47a0 <PyErr_Format@plt>
    6a28:	add	x0, sp, #0x68
    6a2c:	bl	4260 <PyBuffer_Release@plt>
    6a30:	mov	w0, #0x0                   	// #0
    6a34:	b	716c <PySequence_Fast@plt+0x28dc>
    6a38:	ldr	x0, [sp, #40]
    6a3c:	str	x0, [sp, #400]
    6a40:	ldr	x0, [sp, #400]
    6a44:	mov	w1, #0x11                  	// #17
    6a48:	strh	w1, [x0]
    6a4c:	ldr	w0, [sp, #260]
    6a50:	and	w0, w0, #0xffff
    6a54:	bl	44c0 <htons@plt>
    6a58:	and	w1, w0, #0xffff
    6a5c:	ldr	x0, [sp, #400]
    6a60:	strh	w1, [x0, #2]
    6a64:	ldr	w1, [sp, #80]
    6a68:	ldr	x0, [sp, #400]
    6a6c:	str	w1, [x0, #4]
    6a70:	ldr	w0, [sp, #252]
    6a74:	and	w1, w0, #0xff
    6a78:	ldr	x0, [sp, #400]
    6a7c:	strb	w1, [x0, #10]
    6a80:	ldr	w0, [sp, #256]
    6a84:	and	w1, w0, #0xffff
    6a88:	ldr	x0, [sp, #400]
    6a8c:	strh	w1, [x0, #8]
    6a90:	ldr	x0, [sp, #104]
    6a94:	cmp	x0, #0x0
    6a98:	b.eq	6ac4 <PySequence_Fast@plt+0x2234>  // b.none
    6a9c:	ldr	x0, [sp, #400]
    6aa0:	add	x0, x0, #0xc
    6aa4:	ldr	x1, [sp, #104]
    6aa8:	ldr	x2, [sp, #120]
    6aac:	bl	40d0 <memcpy@plt>
    6ab0:	ldr	x0, [sp, #120]
    6ab4:	and	w1, w0, #0xff
    6ab8:	ldr	x0, [sp, #400]
    6abc:	strb	w1, [x0, #11]
    6ac0:	b	6acc <PySequence_Fast@plt+0x223c>
    6ac4:	ldr	x0, [sp, #400]
    6ac8:	strb	wzr, [x0, #11]
    6acc:	ldr	x0, [sp, #32]
    6ad0:	mov	w1, #0x14                  	// #20
    6ad4:	str	w1, [x0]
    6ad8:	add	x0, sp, #0x68
    6adc:	bl	4260 <PyBuffer_Release@plt>
    6ae0:	mov	w0, #0x1                   	// #1
    6ae4:	b	716c <PySequence_Fast@plt+0x28dc>
    6ae8:	mov	w0, #0x2                   	// #2
    6aec:	str	w0, [sp, #232]
    6af0:	ldr	x0, [sp, #48]
    6af4:	ldr	x0, [x0, #8]
    6af8:	ldr	x0, [x0, #168]
    6afc:	and	x0, x0, #0x4000000
    6b00:	cmp	x0, #0x0
    6b04:	b.ne	6b40 <PySequence_Fast@plt+0x22b0>  // b.any
    6b08:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6b0c:	ldr	x0, [x0, #3976]
    6b10:	ldr	x4, [x0]
    6b14:	ldr	x0, [sp, #48]
    6b18:	ldr	x0, [x0, #8]
    6b1c:	ldr	x0, [x0, #24]
    6b20:	mov	x3, x0
    6b24:	ldr	x2, [sp, #24]
    6b28:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6b2c:	add	x1, x0, #0xc8
    6b30:	mov	x0, x4
    6b34:	bl	47a0 <PyErr_Format@plt>
    6b38:	mov	w0, #0x0                   	// #0
    6b3c:	b	716c <PySequence_Fast@plt+0x28dc>
    6b40:	add	x4, sp, #0xe8
    6b44:	add	x3, sp, #0xec
    6b48:	add	x2, sp, #0xf0
    6b4c:	add	x1, sp, #0xf4
    6b50:	add	x0, sp, #0xf8
    6b54:	mov	x6, x4
    6b58:	mov	x5, x3
    6b5c:	mov	x4, x2
    6b60:	mov	x3, x1
    6b64:	mov	x2, x0
    6b68:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6b6c:	add	x1, x0, #0xf8
    6b70:	ldr	x0, [sp, #48]
    6b74:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6b78:	cmp	w0, #0x0
    6b7c:	b.ne	6b88 <PySequence_Fast@plt+0x22f8>  // b.any
    6b80:	mov	w0, #0x0                   	// #0
    6b84:	b	716c <PySequence_Fast@plt+0x28dc>
    6b88:	ldr	x0, [sp, #40]
    6b8c:	str	x0, [sp, #440]
    6b90:	mov	x2, #0x10                  	// #16
    6b94:	mov	w1, #0x0                   	// #0
    6b98:	ldr	x0, [sp, #440]
    6b9c:	bl	43e0 <memset@plt>
    6ba0:	ldr	x0, [sp, #440]
    6ba4:	mov	w1, #0x1e                  	// #30
    6ba8:	strh	w1, [x0]
    6bac:	ldr	w0, [sp, #232]
    6bb0:	sxtb	w1, w0
    6bb4:	ldr	x0, [sp, #440]
    6bb8:	strb	w1, [x0, #3]
    6bbc:	ldr	w0, [sp, #248]
    6bc0:	and	w1, w0, #0xff
    6bc4:	ldr	x0, [sp, #440]
    6bc8:	strb	w1, [x0, #2]
    6bcc:	ldr	w0, [sp, #248]
    6bd0:	cmp	w0, #0x1
    6bd4:	b.ne	6c00 <PySequence_Fast@plt+0x2370>  // b.any
    6bd8:	ldr	w1, [sp, #244]
    6bdc:	ldr	x0, [sp, #440]
    6be0:	str	w1, [x0, #4]
    6be4:	ldr	w1, [sp, #240]
    6be8:	ldr	x0, [sp, #440]
    6bec:	str	w1, [x0, #8]
    6bf0:	ldr	w1, [sp, #236]
    6bf4:	ldr	x0, [sp, #440]
    6bf8:	str	w1, [x0, #12]
    6bfc:	b	6c74 <PySequence_Fast@plt+0x23e4>
    6c00:	ldr	w0, [sp, #248]
    6c04:	cmp	w0, #0x2
    6c08:	b.ne	6c28 <PySequence_Fast@plt+0x2398>  // b.any
    6c0c:	ldr	w1, [sp, #244]
    6c10:	ldr	x0, [sp, #440]
    6c14:	str	w1, [x0, #4]
    6c18:	ldr	w1, [sp, #240]
    6c1c:	ldr	x0, [sp, #440]
    6c20:	str	w1, [x0, #8]
    6c24:	b	6c74 <PySequence_Fast@plt+0x23e4>
    6c28:	ldr	w0, [sp, #248]
    6c2c:	cmp	w0, #0x3
    6c30:	b.ne	6c50 <PySequence_Fast@plt+0x23c0>  // b.any
    6c34:	ldr	w1, [sp, #244]
    6c38:	ldr	x0, [sp, #440]
    6c3c:	str	w1, [x0, #8]
    6c40:	ldr	w1, [sp, #240]
    6c44:	ldr	x0, [sp, #440]
    6c48:	str	w1, [x0, #4]
    6c4c:	b	6c74 <PySequence_Fast@plt+0x23e4>
    6c50:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6c54:	ldr	x0, [x0, #3976]
    6c58:	ldr	x2, [x0]
    6c5c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6c60:	add	x1, x0, #0xcb8
    6c64:	mov	x0, x2
    6c68:	bl	4340 <PyErr_SetString@plt>
    6c6c:	mov	w0, #0x0                   	// #0
    6c70:	b	716c <PySequence_Fast@plt+0x28dc>
    6c74:	ldr	x0, [sp, #32]
    6c78:	mov	w1, #0x10                  	// #16
    6c7c:	str	w1, [x0]
    6c80:	mov	w0, #0x1                   	// #1
    6c84:	b	716c <PySequence_Fast@plt+0x28dc>
    6c88:	ldr	x0, [sp, #56]
    6c8c:	ldr	w0, [x0, #28]
    6c90:	cmp	w0, #0x2
    6c94:	b.gt	6ca4 <PySequence_Fast@plt+0x2414>
    6c98:	cmp	w0, #0x0
    6c9c:	b.gt	6cb0 <PySequence_Fast@plt+0x2420>
    6ca0:	b	6fc0 <PySequence_Fast@plt+0x2730>
    6ca4:	cmp	w0, #0x6
    6ca8:	b.eq	6e48 <PySequence_Fast@plt+0x25b8>  // b.none
    6cac:	b	6fc0 <PySequence_Fast@plt+0x2730>
    6cb0:	ldr	x0, [sp, #40]
    6cb4:	str	x0, [sp, #416]
    6cb8:	ldr	x0, [sp, #48]
    6cbc:	ldr	x0, [x0, #8]
    6cc0:	ldr	x0, [x0, #168]
    6cc4:	and	x0, x0, #0x4000000
    6cc8:	cmp	x0, #0x0
    6ccc:	b.ne	6d08 <PySequence_Fast@plt+0x2478>  // b.any
    6cd0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6cd4:	ldr	x0, [x0, #3976]
    6cd8:	ldr	x4, [x0]
    6cdc:	ldr	x0, [sp, #48]
    6ce0:	ldr	x0, [x0, #8]
    6ce4:	ldr	x0, [x0, #24]
    6ce8:	mov	x3, x0
    6cec:	ldr	x2, [sp, #24]
    6cf0:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6cf4:	add	x1, x0, #0x140
    6cf8:	mov	x0, x4
    6cfc:	bl	47a0 <PyErr_Format@plt>
    6d00:	mov	w0, #0x0                   	// #0
    6d04:	b	716c <PySequence_Fast@plt+0x28dc>
    6d08:	add	x0, sp, #0xe0
    6d0c:	mov	x3, x0
    6d10:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6d14:	ldr	x2, [x0, #3936]
    6d18:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6d1c:	add	x1, x0, #0x170
    6d20:	ldr	x0, [sp, #48]
    6d24:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6d28:	cmp	w0, #0x0
    6d2c:	b.ne	6d38 <PySequence_Fast@plt+0x24a8>  // b.any
    6d30:	mov	w0, #0x0                   	// #0
    6d34:	b	716c <PySequence_Fast@plt+0x28dc>
    6d38:	ldr	x0, [sp, #224]
    6d3c:	ldr	x0, [x0, #16]
    6d40:	str	x0, [sp, #408]
    6d44:	ldr	x0, [sp, #408]
    6d48:	cmp	x0, #0x0
    6d4c:	b.ne	6d58 <PySequence_Fast@plt+0x24c8>  // b.any
    6d50:	str	wzr, [sp, #120]
    6d54:	b	6e04 <PySequence_Fast@plt+0x2574>
    6d58:	ldr	x0, [sp, #408]
    6d5c:	cmp	x0, #0xf
    6d60:	b.hi	6dc8 <PySequence_Fast@plt+0x2538>  // b.pmore
    6d64:	ldr	x0, [sp, #224]
    6d68:	add	x1, x0, #0x20
    6d6c:	add	x0, sp, #0x68
    6d70:	mov	x2, #0x10                  	// #16
    6d74:	bl	47d0 <strncpy@plt>
    6d78:	strb	wzr, [sp, #119]
    6d7c:	ldr	x0, [sp, #56]
    6d80:	ldr	w0, [x0, #16]
    6d84:	add	x1, sp, #0x68
    6d88:	mov	x2, x1
    6d8c:	mov	x1, #0x8933                	// #35123
    6d90:	bl	4880 <ioctl@plt>
    6d94:	cmp	w0, #0x0
    6d98:	b.ge	6e04 <PySequence_Fast@plt+0x2574>  // b.tcont
    6d9c:	ldr	x0, [sp, #56]
    6da0:	ldr	x0, [x0, #32]
    6da4:	blr	x0
    6da8:	ldr	x0, [sp, #224]
    6dac:	mov	x2, x0
    6db0:	mov	w1, #0x867                 	// #2151
    6db4:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6db8:	add	x0, x0, #0xba0
    6dbc:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6dc0:	mov	w0, #0x0                   	// #0
    6dc4:	b	716c <PySequence_Fast@plt+0x28dc>
    6dc8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6dcc:	ldr	x0, [x0, #3984]
    6dd0:	ldr	x2, [x0]
    6dd4:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6dd8:	add	x1, x0, #0x1a0
    6ddc:	mov	x0, x2
    6de0:	bl	4340 <PyErr_SetString@plt>
    6de4:	ldr	x0, [sp, #224]
    6de8:	mov	x2, x0
    6dec:	mov	w1, #0x86d                 	// #2157
    6df0:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6df4:	add	x0, x0, #0xba0
    6df8:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6dfc:	mov	w0, #0x0                   	// #0
    6e00:	b	716c <PySequence_Fast@plt+0x28dc>
    6e04:	ldr	x0, [sp, #416]
    6e08:	mov	w1, #0x1d                  	// #29
    6e0c:	strh	w1, [x0]
    6e10:	ldr	w1, [sp, #120]
    6e14:	ldr	x0, [sp, #416]
    6e18:	str	w1, [x0, #4]
    6e1c:	ldr	x0, [sp, #32]
    6e20:	mov	w1, #0x18                  	// #24
    6e24:	str	w1, [x0]
    6e28:	ldr	x0, [sp, #224]
    6e2c:	mov	x2, x0
    6e30:	mov	w1, #0x875                 	// #2165
    6e34:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6e38:	add	x0, x0, #0xba0
    6e3c:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6e40:	mov	w0, #0x1                   	// #1
    6e44:	b	716c <PySequence_Fast@plt+0x28dc>
    6e48:	ldr	x0, [sp, #40]
    6e4c:	str	x0, [sp, #432]
    6e50:	add	x2, sp, #0xc8
    6e54:	add	x1, sp, #0xd0
    6e58:	add	x0, sp, #0xd8
    6e5c:	mov	x5, x2
    6e60:	mov	x4, x1
    6e64:	mov	x3, x0
    6e68:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6e6c:	ldr	x2, [x0, #3936]
    6e70:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6e74:	add	x1, x0, #0xcd0
    6e78:	ldr	x0, [sp, #48]
    6e7c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    6e80:	cmp	w0, #0x0
    6e84:	b.ne	6e90 <PySequence_Fast@plt+0x2600>  // b.any
    6e88:	mov	w0, #0x0                   	// #0
    6e8c:	b	716c <PySequence_Fast@plt+0x28dc>
    6e90:	ldr	x0, [sp, #216]
    6e94:	ldr	x0, [x0, #16]
    6e98:	str	x0, [sp, #424]
    6e9c:	ldr	x0, [sp, #424]
    6ea0:	cmp	x0, #0x0
    6ea4:	b.ne	6eb0 <PySequence_Fast@plt+0x2620>  // b.any
    6ea8:	str	wzr, [sp, #120]
    6eac:	b	6f5c <PySequence_Fast@plt+0x26cc>
    6eb0:	ldr	x0, [sp, #424]
    6eb4:	cmp	x0, #0xf
    6eb8:	b.hi	6f20 <PySequence_Fast@plt+0x2690>  // b.pmore
    6ebc:	ldr	x0, [sp, #216]
    6ec0:	add	x1, x0, #0x20
    6ec4:	add	x0, sp, #0x68
    6ec8:	mov	x2, #0x10                  	// #16
    6ecc:	bl	47d0 <strncpy@plt>
    6ed0:	strb	wzr, [sp, #119]
    6ed4:	ldr	x0, [sp, #56]
    6ed8:	ldr	w0, [x0, #16]
    6edc:	add	x1, sp, #0x68
    6ee0:	mov	x2, x1
    6ee4:	mov	x1, #0x8933                	// #35123
    6ee8:	bl	4880 <ioctl@plt>
    6eec:	cmp	w0, #0x0
    6ef0:	b.ge	6f5c <PySequence_Fast@plt+0x26cc>  // b.tcont
    6ef4:	ldr	x0, [sp, #56]
    6ef8:	ldr	x0, [x0, #32]
    6efc:	blr	x0
    6f00:	ldr	x0, [sp, #216]
    6f04:	mov	x2, x0
    6f08:	mov	w1, #0x894                 	// #2196
    6f0c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6f10:	add	x0, x0, #0xba0
    6f14:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6f18:	mov	w0, #0x0                   	// #0
    6f1c:	b	716c <PySequence_Fast@plt+0x28dc>
    6f20:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6f24:	ldr	x0, [x0, #3984]
    6f28:	ldr	x2, [x0]
    6f2c:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6f30:	add	x1, x0, #0x1a0
    6f34:	mov	x0, x2
    6f38:	bl	4340 <PyErr_SetString@plt>
    6f3c:	ldr	x0, [sp, #216]
    6f40:	mov	x2, x0
    6f44:	mov	w1, #0x89a                 	// #2202
    6f48:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6f4c:	add	x0, x0, #0xba0
    6f50:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6f54:	mov	w0, #0x0                   	// #0
    6f58:	b	716c <PySequence_Fast@plt+0x28dc>
    6f5c:	ldr	x0, [sp, #432]
    6f60:	mov	w1, #0x1d                  	// #29
    6f64:	strh	w1, [x0]
    6f68:	ldr	w1, [sp, #120]
    6f6c:	ldr	x0, [sp, #432]
    6f70:	str	w1, [x0, #4]
    6f74:	ldr	x0, [sp, #208]
    6f78:	mov	w1, w0
    6f7c:	ldr	x0, [sp, #432]
    6f80:	str	w1, [x0, #8]
    6f84:	ldr	x0, [sp, #200]
    6f88:	mov	w1, w0
    6f8c:	ldr	x0, [sp, #432]
    6f90:	str	w1, [x0, #12]
    6f94:	ldr	x0, [sp, #32]
    6f98:	mov	w1, #0x18                  	// #24
    6f9c:	str	w1, [x0]
    6fa0:	ldr	x0, [sp, #216]
    6fa4:	mov	x2, x0
    6fa8:	mov	w1, #0x8a4                 	// #2212
    6fac:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    6fb0:	add	x0, x0, #0xba0
    6fb4:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    6fb8:	mov	w0, #0x1                   	// #1
    6fbc:	b	716c <PySequence_Fast@plt+0x28dc>
    6fc0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    6fc4:	ldr	x0, [x0, #3984]
    6fc8:	ldr	x3, [x0]
    6fcc:	ldr	x2, [sp, #24]
    6fd0:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    6fd4:	add	x1, x0, #0x1c0
    6fd8:	mov	x0, x3
    6fdc:	bl	47a0 <PyErr_Format@plt>
    6fe0:	mov	w0, #0x0                   	// #0
    6fe4:	b	716c <PySequence_Fast@plt+0x28dc>
    6fe8:	ldr	x0, [sp, #40]
    6fec:	str	x0, [sp, #448]
    6ff0:	mov	x2, #0x58                  	// #88
    6ff4:	mov	w1, #0x0                   	// #0
    6ff8:	ldr	x0, [sp, #448]
    6ffc:	bl	43e0 <memset@plt>
    7000:	ldr	x0, [sp, #448]
    7004:	mov	w1, #0x26                  	// #38
    7008:	strh	w1, [x0]
    700c:	ldr	x0, [sp, #48]
    7010:	ldr	x0, [x0, #8]
    7014:	ldr	x0, [x0, #168]
    7018:	and	x0, x0, #0x4000000
    701c:	cmp	x0, #0x0
    7020:	b.ne	705c <PySequence_Fast@plt+0x27cc>  // b.any
    7024:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7028:	ldr	x0, [x0, #3976]
    702c:	ldr	x4, [x0]
    7030:	ldr	x0, [sp, #48]
    7034:	ldr	x0, [x0, #8]
    7038:	ldr	x0, [x0, #24]
    703c:	mov	x3, x0
    7040:	ldr	x2, [sp, #24]
    7044:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7048:	add	x1, x0, #0x1e0
    704c:	mov	x0, x4
    7050:	bl	47a0 <PyErr_Format@plt>
    7054:	mov	w0, #0x0                   	// #0
    7058:	b	716c <PySequence_Fast@plt+0x28dc>
    705c:	ldr	x0, [sp, #448]
    7060:	add	x2, x0, #0x10
    7064:	ldr	x0, [sp, #448]
    7068:	add	x3, x0, #0x14
    706c:	add	x1, sp, #0xb8
    7070:	add	x0, sp, #0xc0
    7074:	mov	x5, x3
    7078:	mov	x4, x2
    707c:	mov	x3, x1
    7080:	mov	x2, x0
    7084:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7088:	add	x1, x0, #0x210
    708c:	ldr	x0, [sp, #48]
    7090:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    7094:	cmp	w0, #0x0
    7098:	b.ne	70a4 <PySequence_Fast@plt+0x2814>  // b.any
    709c:	mov	w0, #0x0                   	// #0
    70a0:	b	716c <PySequence_Fast@plt+0x28dc>
    70a4:	ldr	x0, [sp, #192]
    70a8:	bl	4150 <strlen@plt>
    70ac:	cmp	x0, #0xd
    70b0:	b.ls	70d8 <PySequence_Fast@plt+0x2848>  // b.plast
    70b4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    70b8:	ldr	x0, [x0, #3960]
    70bc:	ldr	x2, [x0]
    70c0:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    70c4:	add	x1, x0, #0x258
    70c8:	mov	x0, x2
    70cc:	bl	4340 <PyErr_SetString@plt>
    70d0:	mov	w0, #0x0                   	// #0
    70d4:	b	716c <PySequence_Fast@plt+0x28dc>
    70d8:	ldr	x0, [sp, #448]
    70dc:	add	x0, x0, #0x2
    70e0:	ldr	x1, [sp, #192]
    70e4:	mov	x2, #0xe                   	// #14
    70e8:	bl	47d0 <strncpy@plt>
    70ec:	ldr	x0, [sp, #184]
    70f0:	bl	4150 <strlen@plt>
    70f4:	cmp	x0, #0x3f
    70f8:	b.ls	7120 <PySequence_Fast@plt+0x2890>  // b.plast
    70fc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7100:	ldr	x0, [x0, #3960]
    7104:	ldr	x2, [x0]
    7108:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    710c:	add	x1, x0, #0x270
    7110:	mov	x0, x2
    7114:	bl	4340 <PyErr_SetString@plt>
    7118:	mov	w0, #0x0                   	// #0
    711c:	b	716c <PySequence_Fast@plt+0x28dc>
    7120:	ldr	x0, [sp, #448]
    7124:	add	x0, x0, #0x18
    7128:	ldr	x1, [sp, #184]
    712c:	mov	x2, #0x40                  	// #64
    7130:	bl	47d0 <strncpy@plt>
    7134:	ldr	x0, [sp, #32]
    7138:	mov	w1, #0x58                  	// #88
    713c:	str	w1, [x0]
    7140:	mov	w0, #0x1                   	// #1
    7144:	b	716c <PySequence_Fast@plt+0x28dc>
    7148:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    714c:	ldr	x0, [x0, #3984]
    7150:	ldr	x3, [x0]
    7154:	ldr	x2, [sp, #24]
    7158:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    715c:	add	x1, x0, #0x288
    7160:	mov	x0, x3
    7164:	bl	47a0 <PyErr_Format@plt>
    7168:	mov	w0, #0x0                   	// #0
    716c:	ldp	x29, x30, [sp], #480
    7170:	ret
    7174:	stp	x29, x30, [sp, #-32]!
    7178:	mov	x29, sp
    717c:	str	x0, [sp, #24]
    7180:	str	x1, [sp, #16]
    7184:	ldr	x0, [sp, #24]
    7188:	ldr	w0, [x0, #20]
    718c:	cmp	w0, #0x2a
    7190:	b.eq	7258 <PySequence_Fast@plt+0x29c8>  // b.none
    7194:	cmp	w0, #0x2a
    7198:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    719c:	cmp	w0, #0x28
    71a0:	b.eq	726c <PySequence_Fast@plt+0x29dc>  // b.none
    71a4:	cmp	w0, #0x28
    71a8:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    71ac:	cmp	w0, #0x26
    71b0:	b.eq	72e4 <PySequence_Fast@plt+0x2a54>  // b.none
    71b4:	cmp	w0, #0x26
    71b8:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    71bc:	cmp	w0, #0x1e
    71c0:	b.eq	72bc <PySequence_Fast@plt+0x2a2c>  // b.none
    71c4:	cmp	w0, #0x1e
    71c8:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    71cc:	cmp	w0, #0x1d
    71d0:	b.eq	72d0 <PySequence_Fast@plt+0x2a40>  // b.none
    71d4:	cmp	w0, #0x1d
    71d8:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    71dc:	cmp	w0, #0x15
    71e0:	b.eq	7280 <PySequence_Fast@plt+0x29f0>  // b.none
    71e4:	cmp	w0, #0x15
    71e8:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    71ec:	cmp	w0, #0x11
    71f0:	b.eq	72a8 <PySequence_Fast@plt+0x2a18>  // b.none
    71f4:	cmp	w0, #0x11
    71f8:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    71fc:	cmp	w0, #0x10
    7200:	b.eq	7244 <PySequence_Fast@plt+0x29b4>  // b.none
    7204:	cmp	w0, #0x10
    7208:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    720c:	cmp	w0, #0xa
    7210:	b.eq	7294 <PySequence_Fast@plt+0x2a04>  // b.none
    7214:	cmp	w0, #0xa
    7218:	b.gt	72f8 <PySequence_Fast@plt+0x2a68>
    721c:	cmp	w0, #0x1
    7220:	b.eq	7230 <PySequence_Fast@plt+0x29a0>  // b.none
    7224:	cmp	w0, #0x2
    7228:	b.eq	7280 <PySequence_Fast@plt+0x29f0>  // b.none
    722c:	b	72f8 <PySequence_Fast@plt+0x2a68>
    7230:	ldr	x0, [sp, #16]
    7234:	mov	w1, #0x6e                  	// #110
    7238:	str	w1, [x0]
    723c:	mov	w0, #0x1                   	// #1
    7240:	b	7318 <PySequence_Fast@plt+0x2a88>
    7244:	ldr	x0, [sp, #16]
    7248:	mov	w1, #0xc                   	// #12
    724c:	str	w1, [x0]
    7250:	mov	w0, #0x1                   	// #1
    7254:	b	7318 <PySequence_Fast@plt+0x2a88>
    7258:	ldr	x0, [sp, #16]
    725c:	mov	w1, #0xc                   	// #12
    7260:	str	w1, [x0]
    7264:	mov	w0, #0x1                   	// #1
    7268:	b	7318 <PySequence_Fast@plt+0x2a88>
    726c:	ldr	x0, [sp, #16]
    7270:	mov	w1, #0x10                  	// #16
    7274:	str	w1, [x0]
    7278:	mov	w0, #0x1                   	// #1
    727c:	b	7318 <PySequence_Fast@plt+0x2a88>
    7280:	ldr	x0, [sp, #16]
    7284:	mov	w1, #0x10                  	// #16
    7288:	str	w1, [x0]
    728c:	mov	w0, #0x1                   	// #1
    7290:	b	7318 <PySequence_Fast@plt+0x2a88>
    7294:	ldr	x0, [sp, #16]
    7298:	mov	w1, #0x1c                  	// #28
    729c:	str	w1, [x0]
    72a0:	mov	w0, #0x1                   	// #1
    72a4:	b	7318 <PySequence_Fast@plt+0x2a88>
    72a8:	ldr	x0, [sp, #16]
    72ac:	mov	w1, #0x14                  	// #20
    72b0:	str	w1, [x0]
    72b4:	mov	w0, #0x1                   	// #1
    72b8:	b	7318 <PySequence_Fast@plt+0x2a88>
    72bc:	ldr	x0, [sp, #16]
    72c0:	mov	w1, #0x10                  	// #16
    72c4:	str	w1, [x0]
    72c8:	mov	w0, #0x1                   	// #1
    72cc:	b	7318 <PySequence_Fast@plt+0x2a88>
    72d0:	ldr	x0, [sp, #16]
    72d4:	mov	w1, #0x18                  	// #24
    72d8:	str	w1, [x0]
    72dc:	mov	w0, #0x1                   	// #1
    72e0:	b	7318 <PySequence_Fast@plt+0x2a88>
    72e4:	ldr	x0, [sp, #16]
    72e8:	mov	w1, #0x58                  	// #88
    72ec:	str	w1, [x0]
    72f0:	mov	w0, #0x1                   	// #1
    72f4:	b	7318 <PySequence_Fast@plt+0x2a88>
    72f8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    72fc:	ldr	x0, [x0, #3984]
    7300:	ldr	x2, [x0]
    7304:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7308:	add	x1, x0, #0x2a0
    730c:	mov	x0, x2
    7310:	bl	4340 <PyErr_SetString@plt>
    7314:	mov	w0, #0x0                   	// #0
    7318:	ldp	x29, x30, [sp], #32
    731c:	ret
    7320:	sub	sp, sp, #0x20
    7324:	str	x0, [sp, #8]
    7328:	str	x1, [sp]
    732c:	ldr	x1, [sp, #8]
    7330:	mov	x0, #0x7ffffff0            	// #2147483632
    7334:	cmp	x1, x0
    7338:	b.cc	7344 <PySequence_Fast@plt+0x2ab4>  // b.lo, b.ul, b.last
    733c:	mov	w0, #0x0                   	// #0
    7340:	b	7388 <PySequence_Fast@plt+0x2af8>
    7344:	ldr	x0, [sp, #8]
    7348:	add	x0, x0, #0x10
    734c:	str	x0, [sp, #24]
    7350:	ldr	x1, [sp, #24]
    7354:	mov	x0, #0x7fffffff            	// #2147483647
    7358:	cmp	x1, x0
    735c:	b.hi	7370 <PySequence_Fast@plt+0x2ae0>  // b.pmore
    7360:	ldr	x1, [sp, #24]
    7364:	ldr	x0, [sp, #8]
    7368:	cmp	x1, x0
    736c:	b.cs	7378 <PySequence_Fast@plt+0x2ae8>  // b.hs, b.nlast
    7370:	mov	w0, #0x0                   	// #0
    7374:	b	7388 <PySequence_Fast@plt+0x2af8>
    7378:	ldr	x0, [sp]
    737c:	ldr	x1, [sp, #24]
    7380:	str	x1, [x0]
    7384:	mov	w0, #0x1                   	// #1
    7388:	add	sp, sp, #0x20
    738c:	ret
    7390:	sub	sp, sp, #0x20
    7394:	str	x0, [sp, #8]
    7398:	str	x1, [sp]
    739c:	ldr	x1, [sp, #8]
    73a0:	mov	x0, #0xffe7                	// #65511
    73a4:	movk	x0, #0x7fff, lsl #16
    73a8:	cmp	x1, x0
    73ac:	b.ls	73b8 <PySequence_Fast@plt+0x2b28>  // b.plast
    73b0:	mov	w0, #0x0                   	// #0
    73b4:	b	7404 <PySequence_Fast@plt+0x2b74>
    73b8:	ldr	x0, [sp, #8]
    73bc:	add	x0, x0, #0x7
    73c0:	and	x0, x0, #0xfffffffffffffff8
    73c4:	add	x0, x0, #0x10
    73c8:	str	x0, [sp, #24]
    73cc:	ldr	x1, [sp, #24]
    73d0:	mov	x0, #0x7fffffff            	// #2147483647
    73d4:	cmp	x1, x0
    73d8:	b.hi	73ec <PySequence_Fast@plt+0x2b5c>  // b.pmore
    73dc:	ldr	x1, [sp, #24]
    73e0:	ldr	x0, [sp, #8]
    73e4:	cmp	x1, x0
    73e8:	b.cs	73f4 <PySequence_Fast@plt+0x2b64>  // b.hs, b.nlast
    73ec:	mov	w0, #0x0                   	// #0
    73f0:	b	7404 <PySequence_Fast@plt+0x2b74>
    73f4:	ldr	x0, [sp]
    73f8:	ldr	x1, [sp, #24]
    73fc:	str	x1, [x0]
    7400:	mov	w0, #0x1                   	// #1
    7404:	add	sp, sp, #0x20
    7408:	ret
    740c:	sub	sp, sp, #0x30
    7410:	str	x0, [sp, #24]
    7414:	str	x1, [sp, #16]
    7418:	str	x2, [sp, #8]
    741c:	ldr	x0, [sp, #16]
    7420:	cmp	x0, #0x0
    7424:	b.eq	7438 <PySequence_Fast@plt+0x2ba8>  // b.none
    7428:	ldr	x0, [sp, #24]
    742c:	ldr	x0, [x0, #32]
    7430:	cmp	x0, #0x0
    7434:	b.ne	7440 <PySequence_Fast@plt+0x2bb0>  // b.any
    7438:	mov	w0, #0x0                   	// #0
    743c:	b	74b8 <PySequence_Fast@plt+0x2c28>
    7440:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    7444:	add	x0, x0, #0x328
    7448:	ldr	x0, [x0]
    744c:	ldr	x1, [sp, #8]
    7450:	cmp	x1, x0
    7454:	b.cs	7468 <PySequence_Fast@plt+0x2bd8>  // b.hs, b.nlast
    7458:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    745c:	add	x0, x0, #0x328
    7460:	ldr	x0, [x0]
    7464:	str	x0, [sp, #8]
    7468:	ldr	x0, [sp, #24]
    746c:	ldr	x0, [x0, #32]
    7470:	ldr	x1, [sp, #16]
    7474:	sub	x0, x1, x0
    7478:	str	x0, [sp, #40]
    747c:	ldr	x0, [sp, #8]
    7480:	mvn	x0, x0
    7484:	ldr	x1, [sp, #40]
    7488:	cmp	x1, x0
    748c:	b.hi	74b4 <PySequence_Fast@plt+0x2c24>  // b.pmore
    7490:	ldr	x1, [sp, #40]
    7494:	ldr	x0, [sp, #8]
    7498:	add	x1, x1, x0
    749c:	ldr	x0, [sp, #24]
    74a0:	ldr	x0, [x0, #40]
    74a4:	cmp	x1, x0
    74a8:	b.hi	74b4 <PySequence_Fast@plt+0x2c24>  // b.pmore
    74ac:	mov	w0, #0x1                   	// #1
    74b0:	b	74b8 <PySequence_Fast@plt+0x2c28>
    74b4:	mov	w0, #0x0                   	// #0
    74b8:	add	sp, sp, #0x30
    74bc:	ret
    74c0:	sub	sp, sp, #0x30
    74c4:	str	x0, [sp, #24]
    74c8:	str	x1, [sp, #16]
    74cc:	str	x2, [sp, #8]
    74d0:	ldr	x0, [sp, #16]
    74d4:	add	x0, x0, #0x10
    74d8:	str	x0, [sp, #40]
    74dc:	ldr	x0, [sp, #40]
    74e0:	cmp	x0, #0x0
    74e4:	b.ne	74f0 <PySequence_Fast@plt+0x2c60>  // b.any
    74e8:	mov	w0, #0x0                   	// #0
    74ec:	b	753c <PySequence_Fast@plt+0x2cac>
    74f0:	ldr	x0, [sp, #24]
    74f4:	ldr	x0, [x0, #32]
    74f8:	ldr	x1, [sp, #40]
    74fc:	sub	x0, x1, x0
    7500:	str	x0, [sp, #32]
    7504:	ldr	x0, [sp, #24]
    7508:	ldr	x0, [x0, #40]
    750c:	ldr	x1, [sp, #32]
    7510:	cmp	x1, x0
    7514:	b.ls	7520 <PySequence_Fast@plt+0x2c90>  // b.plast
    7518:	mov	w0, #0x0                   	// #0
    751c:	b	753c <PySequence_Fast@plt+0x2cac>
    7520:	ldr	x0, [sp, #24]
    7524:	ldr	x1, [x0, #40]
    7528:	ldr	x0, [sp, #32]
    752c:	sub	x1, x1, x0
    7530:	ldr	x0, [sp, #8]
    7534:	str	x1, [x0]
    7538:	mov	w0, #0x1                   	// #1
    753c:	add	sp, sp, #0x30
    7540:	ret
    7544:	stp	x29, x30, [sp, #-64]!
    7548:	mov	x29, sp
    754c:	str	x0, [sp, #40]
    7550:	str	x1, [sp, #32]
    7554:	str	x2, [sp, #24]
    7558:	mov	x2, #0x10                  	// #16
    755c:	ldr	x1, [sp, #32]
    7560:	ldr	x0, [sp, #40]
    7564:	bl	740c <PySequence_Fast@plt+0x2b7c>
    7568:	cmp	w0, #0x0
    756c:	b.eq	7580 <PySequence_Fast@plt+0x2cf0>  // b.none
    7570:	ldr	x0, [sp, #32]
    7574:	ldr	x0, [x0]
    7578:	cmp	x0, #0xf
    757c:	b.hi	7588 <PySequence_Fast@plt+0x2cf8>  // b.pmore
    7580:	mov	w0, #0xffffffff            	// #-1
    7584:	b	75f0 <PySequence_Fast@plt+0x2d60>
    7588:	ldr	x0, [sp, #32]
    758c:	ldr	x0, [x0]
    7590:	sub	x0, x0, #0x10
    7594:	str	x0, [sp, #56]
    7598:	add	x0, sp, #0x30
    759c:	mov	x2, x0
    75a0:	ldr	x1, [sp, #32]
    75a4:	ldr	x0, [sp, #40]
    75a8:	bl	74c0 <PySequence_Fast@plt+0x2c30>
    75ac:	cmp	w0, #0x0
    75b0:	b.ne	75bc <PySequence_Fast@plt+0x2d2c>  // b.any
    75b4:	mov	w0, #0xffffffff            	// #-1
    75b8:	b	75f0 <PySequence_Fast@plt+0x2d60>
    75bc:	ldr	x0, [sp, #48]
    75c0:	ldr	x1, [sp, #56]
    75c4:	cmp	x1, x0
    75c8:	b.hi	75e0 <PySequence_Fast@plt+0x2d50>  // b.pmore
    75cc:	ldr	x0, [sp, #24]
    75d0:	ldr	x1, [sp, #56]
    75d4:	str	x1, [x0]
    75d8:	mov	w0, #0x0                   	// #0
    75dc:	b	75f0 <PySequence_Fast@plt+0x2d60>
    75e0:	ldr	x1, [sp, #48]
    75e4:	ldr	x0, [sp, #24]
    75e8:	str	x1, [x0]
    75ec:	mov	w0, #0x1                   	// #1
    75f0:	ldp	x29, x30, [sp], #64
    75f4:	ret
    75f8:	stp	x29, x30, [sp, #-64]!
    75fc:	mov	x29, sp
    7600:	str	x0, [sp, #24]
    7604:	str	x1, [sp, #16]
    7608:	ldr	x0, [sp, #16]
    760c:	str	x0, [sp, #40]
    7610:	ldr	x0, [sp, #40]
    7614:	ldr	x0, [x0, #8]
    7618:	str	x0, [sp, #56]
    761c:	ldr	x0, [sp, #40]
    7620:	ldr	x0, [x0]
    7624:	str	x0, [sp, #48]
    7628:	ldr	x0, [sp, #24]
    762c:	ldr	w0, [x0, #20]
    7630:	cmp	w0, #0x26
    7634:	b.ne	764c <PySequence_Fast@plt+0x2dbc>  // b.any
    7638:	str	xzr, [sp, #56]
    763c:	str	xzr, [sp, #48]
    7640:	ldr	x0, [sp, #40]
    7644:	ldr	x0, [x0]
    7648:	str	wzr, [x0]
    764c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    7650:	add	x0, x0, #0x3f8
    7654:	ldr	w0, [x0]
    7658:	cmp	w0, #0x0
    765c:	b.eq	76cc <PySequence_Fast@plt+0x2e3c>  // b.none
    7660:	ldr	x0, [sp, #24]
    7664:	ldr	w0, [x0, #16]
    7668:	ldr	x1, [sp, #56]
    766c:	mov	w3, #0x80000               	// #524288
    7670:	ldr	x2, [sp, #48]
    7674:	bl	4640 <accept4@plt>
    7678:	mov	w1, w0
    767c:	ldr	x0, [sp, #40]
    7680:	str	w1, [x0, #16]
    7684:	ldr	x0, [sp, #40]
    7688:	ldr	w0, [x0, #16]
    768c:	cmn	w0, #0x1
    7690:	b.ne	76cc <PySequence_Fast@plt+0x2e3c>  // b.any
    7694:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    7698:	add	x0, x0, #0x3f8
    769c:	ldr	w0, [x0]
    76a0:	cmn	w0, #0x1
    76a4:	b.ne	76cc <PySequence_Fast@plt+0x2e3c>  // b.any
    76a8:	bl	47e0 <__errno_location@plt>
    76ac:	ldr	w0, [x0]
    76b0:	cmp	w0, #0x26
    76b4:	cset	w0, ne  // ne = any
    76b8:	and	w0, w0, #0xff
    76bc:	mov	w1, w0
    76c0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    76c4:	add	x0, x0, #0x3f8
    76c8:	str	w1, [x0]
    76cc:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    76d0:	add	x0, x0, #0x3f8
    76d4:	ldr	w0, [x0]
    76d8:	cmp	w0, #0x0
    76dc:	b.ne	7700 <PySequence_Fast@plt+0x2e70>  // b.any
    76e0:	ldr	x0, [sp, #24]
    76e4:	ldr	w0, [x0, #16]
    76e8:	ldr	x1, [sp, #56]
    76ec:	ldr	x2, [sp, #48]
    76f0:	bl	4410 <accept@plt>
    76f4:	mov	w1, w0
    76f8:	ldr	x0, [sp, #40]
    76fc:	str	w1, [x0, #16]
    7700:	ldr	x0, [sp, #40]
    7704:	ldr	w0, [x0, #16]
    7708:	mvn	w0, w0
    770c:	lsr	w0, w0, #31
    7710:	and	w0, w0, #0xff
    7714:	ldp	x29, x30, [sp], #64
    7718:	ret
    771c:	stp	x29, x30, [sp, #-224]!
    7720:	mov	x29, sp
    7724:	str	x0, [sp, #24]
    7728:	str	x1, [sp, #16]
    772c:	str	xzr, [sp, #216]
    7730:	str	xzr, [sp, #208]
    7734:	str	xzr, [sp, #200]
    7738:	add	x0, sp, #0x3c
    773c:	mov	x1, x0
    7740:	ldr	x0, [sp, #24]
    7744:	bl	7174 <PySequence_Fast@plt+0x28e4>
    7748:	cmp	w0, #0x0
    774c:	b.ne	7758 <PySequence_Fast@plt+0x2ec8>  // b.any
    7750:	mov	x0, #0x0                   	// #0
    7754:	b	7880 <PySequence_Fast@plt+0x2ff0>
    7758:	ldr	w0, [sp, #60]
    775c:	mov	w1, w0
    7760:	add	x0, sp, #0x40
    7764:	mov	x2, x1
    7768:	mov	w1, #0x0                   	// #0
    776c:	bl	43e0 <memset@plt>
    7770:	add	x0, sp, #0x3c
    7774:	str	x0, [sp, #32]
    7778:	add	x0, sp, #0x40
    777c:	str	x0, [sp, #40]
    7780:	add	x0, sp, #0x20
    7784:	mov	x3, x0
    7788:	adrp	x0, 7000 <PySequence_Fast@plt+0x2770>
    778c:	add	x2, x0, #0x5f8
    7790:	mov	w1, #0x0                   	// #0
    7794:	ldr	x0, [sp, #24]
    7798:	bl	5098 <PySequence_Fast@plt+0x808>
    779c:	cmp	w0, #0x0
    77a0:	b.ge	77ac <PySequence_Fast@plt+0x2f1c>  // b.tcont
    77a4:	mov	x0, #0x0                   	// #0
    77a8:	b	7880 <PySequence_Fast@plt+0x2ff0>
    77ac:	ldr	w0, [sp, #48]
    77b0:	str	w0, [sp, #196]
    77b4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    77b8:	add	x0, x0, #0x3f8
    77bc:	ldr	w0, [x0]
    77c0:	cmp	w0, #0x0
    77c4:	b.ne	77ec <PySequence_Fast@plt+0x2f5c>  // b.any
    77c8:	mov	x2, #0x0                   	// #0
    77cc:	mov	w1, #0x0                   	// #0
    77d0:	ldr	w0, [sp, #196]
    77d4:	bl	4290 <_Py_set_inheritable@plt>
    77d8:	cmp	w0, #0x0
    77dc:	b.ge	77ec <PySequence_Fast@plt+0x2f5c>  // b.tcont
    77e0:	ldr	w0, [sp, #196]
    77e4:	bl	4500 <close@plt>
    77e8:	b	786c <PySequence_Fast@plt+0x2fdc>
    77ec:	ldrsw	x0, [sp, #196]
    77f0:	bl	4480 <PyLong_FromLong@plt>
    77f4:	str	x0, [sp, #216]
    77f8:	ldr	x0, [sp, #216]
    77fc:	cmp	x0, #0x0
    7800:	b.ne	7810 <PySequence_Fast@plt+0x2f80>  // b.any
    7804:	ldr	w0, [sp, #196]
    7808:	bl	4500 <close@plt>
    780c:	b	786c <PySequence_Fast@plt+0x2fdc>
    7810:	ldr	x0, [sp, #24]
    7814:	ldr	w4, [x0, #16]
    7818:	ldr	w0, [sp, #60]
    781c:	mov	w1, w0
    7820:	ldr	x0, [sp, #24]
    7824:	ldr	w2, [x0, #28]
    7828:	add	x0, sp, #0x40
    782c:	mov	w3, w2
    7830:	mov	x2, x1
    7834:	mov	x1, x0
    7838:	mov	w0, w4
    783c:	bl	5730 <PySequence_Fast@plt+0xea0>
    7840:	str	x0, [sp, #208]
    7844:	ldr	x0, [sp, #208]
    7848:	cmp	x0, #0x0
    784c:	b.eq	7868 <PySequence_Fast@plt+0x2fd8>  // b.none
    7850:	ldr	x2, [sp, #208]
    7854:	ldr	x1, [sp, #216]
    7858:	mov	x0, #0x2                   	// #2
    785c:	bl	4850 <PyTuple_Pack@plt>
    7860:	str	x0, [sp, #200]
    7864:	b	786c <PySequence_Fast@plt+0x2fdc>
    7868:	nop
    786c:	ldr	x0, [sp, #216]
    7870:	bl	4ad0 <PySequence_Fast@plt+0x240>
    7874:	ldr	x0, [sp, #208]
    7878:	bl	4ad0 <PySequence_Fast@plt+0x240>
    787c:	ldr	x0, [sp, #200]
    7880:	ldp	x29, x30, [sp], #224
    7884:	ret
    7888:	stp	x29, x30, [sp, #-48]!
    788c:	mov	x29, sp
    7890:	str	x0, [sp, #24]
    7894:	str	x1, [sp, #16]
    7898:	ldr	x0, [sp, #16]
    789c:	bl	4560 <PyLong_AsLong@plt>
    78a0:	str	x0, [sp, #40]
    78a4:	ldr	x0, [sp, #40]
    78a8:	cmn	x0, #0x1
    78ac:	b.ne	78c4 <PySequence_Fast@plt+0x3034>  // b.any
    78b0:	bl	4540 <PyErr_Occurred@plt>
    78b4:	cmp	x0, #0x0
    78b8:	b.eq	78c4 <PySequence_Fast@plt+0x3034>  // b.none
    78bc:	mov	x0, #0x0                   	// #0
    78c0:	b	7920 <PySequence_Fast@plt+0x3090>
    78c4:	ldr	x0, [sp, #40]
    78c8:	cmp	x0, #0x0
    78cc:	b.eq	78d8 <PySequence_Fast@plt+0x3048>  // b.none
    78d0:	mov	w0, #0xffffffff            	// #-1
    78d4:	b	78dc <PySequence_Fast@plt+0x304c>
    78d8:	mov	w0, #0x0                   	// #0
    78dc:	bl	4750 <_PyTime_FromSeconds@plt>
    78e0:	mov	x1, x0
    78e4:	ldr	x0, [sp, #24]
    78e8:	str	x1, [x0, #40]
    78ec:	ldr	x0, [sp, #40]
    78f0:	mov	w1, w0
    78f4:	ldr	x0, [sp, #24]
    78f8:	bl	4c44 <PySequence_Fast@plt+0x3b4>
    78fc:	cmn	w0, #0x1
    7900:	b.ne	790c <PySequence_Fast@plt+0x307c>  // b.any
    7904:	mov	x0, #0x0                   	// #0
    7908:	b	7920 <PySequence_Fast@plt+0x3090>
    790c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7910:	ldr	x0, [x0, #4024]
    7914:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    7918:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    791c:	ldr	x0, [x0, #4024]
    7920:	ldp	x29, x30, [sp], #48
    7924:	ret
    7928:	stp	x29, x30, [sp, #-32]!
    792c:	mov	x29, sp
    7930:	str	x0, [sp, #24]
    7934:	str	x1, [sp, #16]
    7938:	ldr	x0, [sp, #24]
    793c:	ldr	x0, [x0, #40]
    7940:	cmp	x0, #0x0
    7944:	b.eq	7960 <PySequence_Fast@plt+0x30d0>  // b.none
    7948:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    794c:	ldr	x0, [x0, #4032]
    7950:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    7954:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7958:	ldr	x0, [x0, #4032]
    795c:	b	7974 <PySequence_Fast@plt+0x30e4>
    7960:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7964:	ldr	x0, [x0, #3992]
    7968:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    796c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7970:	ldr	x0, [x0, #3992]
    7974:	ldp	x29, x30, [sp], #32
    7978:	ret
    797c:	stp	x29, x30, [sp, #-48]!
    7980:	mov	x29, sp
    7984:	str	x0, [sp, #24]
    7988:	str	x1, [sp, #16]
    798c:	str	wzr, [sp, #44]
    7990:	ldr	x1, [sp, #16]
    7994:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7998:	ldr	x0, [x0, #4024]
    799c:	cmp	x1, x0
    79a0:	b.ne	79c0 <PySequence_Fast@plt+0x3130>  // b.any
    79a4:	mov	w0, #0xffffffff            	// #-1
    79a8:	bl	4750 <_PyTime_FromSeconds@plt>
    79ac:	mov	x1, x0
    79b0:	ldr	x0, [sp, #24]
    79b4:	str	x1, [x0]
    79b8:	mov	w0, #0x0                   	// #0
    79bc:	b	7a48 <PySequence_Fast@plt+0x31b8>
    79c0:	mov	w2, #0x3                   	// #3
    79c4:	ldr	x1, [sp, #16]
    79c8:	ldr	x0, [sp, #24]
    79cc:	bl	4400 <_PyTime_FromSecondsObject@plt>
    79d0:	cmp	w0, #0x0
    79d4:	b.ge	79e0 <PySequence_Fast@plt+0x3150>  // b.tcont
    79d8:	mov	w0, #0xffffffff            	// #-1
    79dc:	b	7a48 <PySequence_Fast@plt+0x31b8>
    79e0:	ldr	x0, [sp, #24]
    79e4:	ldr	x0, [x0]
    79e8:	cmp	x0, #0x0
    79ec:	b.ge	7a14 <PySequence_Fast@plt+0x3184>  // b.tcont
    79f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    79f4:	ldr	x0, [x0, #3960]
    79f8:	ldr	x2, [x0]
    79fc:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7a00:	add	x1, x0, #0x4d0
    7a04:	mov	x0, x2
    7a08:	bl	4340 <PyErr_SetString@plt>
    7a0c:	mov	w0, #0xffffffff            	// #-1
    7a10:	b	7a48 <PySequence_Fast@plt+0x31b8>
    7a14:	ldr	w0, [sp, #44]
    7a18:	cmp	w0, #0x0
    7a1c:	b.eq	7a44 <PySequence_Fast@plt+0x31b4>  // b.none
    7a20:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7a24:	ldr	x0, [x0, #4008]
    7a28:	ldr	x2, [x0]
    7a2c:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7a30:	add	x1, x0, #0x4f0
    7a34:	mov	x0, x2
    7a38:	bl	4340 <PyErr_SetString@plt>
    7a3c:	mov	w0, #0xffffffff            	// #-1
    7a40:	b	7a48 <PySequence_Fast@plt+0x31b8>
    7a44:	mov	w0, #0x0                   	// #0
    7a48:	ldp	x29, x30, [sp], #48
    7a4c:	ret
    7a50:	stp	x29, x30, [sp, #-48]!
    7a54:	mov	x29, sp
    7a58:	str	x0, [sp, #24]
    7a5c:	str	x1, [sp, #16]
    7a60:	add	x0, sp, #0x20
    7a64:	ldr	x1, [sp, #16]
    7a68:	bl	797c <PySequence_Fast@plt+0x30ec>
    7a6c:	cmp	w0, #0x0
    7a70:	b.ge	7a7c <PySequence_Fast@plt+0x31ec>  // b.tcont
    7a74:	mov	x0, #0x0                   	// #0
    7a78:	b	7ac8 <PySequence_Fast@plt+0x3238>
    7a7c:	ldr	x1, [sp, #32]
    7a80:	ldr	x0, [sp, #24]
    7a84:	str	x1, [x0, #40]
    7a88:	ldr	x0, [sp, #32]
    7a8c:	lsr	x0, x0, #63
    7a90:	and	w0, w0, #0xff
    7a94:	str	w0, [sp, #44]
    7a98:	ldr	w1, [sp, #44]
    7a9c:	ldr	x0, [sp, #24]
    7aa0:	bl	4c44 <PySequence_Fast@plt+0x3b4>
    7aa4:	cmn	w0, #0x1
    7aa8:	b.ne	7ab4 <PySequence_Fast@plt+0x3224>  // b.any
    7aac:	mov	x0, #0x0                   	// #0
    7ab0:	b	7ac8 <PySequence_Fast@plt+0x3238>
    7ab4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7ab8:	ldr	x0, [x0, #4024]
    7abc:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    7ac0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7ac4:	ldr	x0, [x0, #4024]
    7ac8:	ldp	x29, x30, [sp], #48
    7acc:	ret
    7ad0:	stp	x29, x30, [sp, #-48]!
    7ad4:	mov	x29, sp
    7ad8:	str	x0, [sp, #24]
    7adc:	str	x1, [sp, #16]
    7ae0:	ldr	x0, [sp, #24]
    7ae4:	ldr	x0, [x0, #40]
    7ae8:	cmp	x0, #0x0
    7aec:	b.ge	7b08 <PySequence_Fast@plt+0x3278>  // b.tcont
    7af0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7af4:	ldr	x0, [x0, #4024]
    7af8:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    7afc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7b00:	ldr	x0, [x0, #4024]
    7b04:	b	7b20 <PySequence_Fast@plt+0x3290>
    7b08:	ldr	x0, [sp, #24]
    7b0c:	ldr	x0, [x0, #40]
    7b10:	bl	4360 <_PyTime_AsSecondsDouble@plt>
    7b14:	str	d0, [sp, #40]
    7b18:	ldr	d0, [sp, #40]
    7b1c:	bl	4460 <PyFloat_FromDouble@plt>
    7b20:	ldp	x29, x30, [sp], #48
    7b24:	ret
    7b28:	stp	x29, x30, [sp, #-160]!
    7b2c:	mov	x29, sp
    7b30:	str	x0, [sp, #24]
    7b34:	str	x1, [sp, #16]
    7b38:	ldr	x0, [sp, #24]
    7b3c:	ldr	w0, [x0, #20]
    7b40:	cmp	w0, #0x28
    7b44:	b.ne	7ba4 <PySequence_Fast@plt+0x3314>  // b.any
    7b48:	add	x2, sp, #0x28
    7b4c:	add	x1, sp, #0x94
    7b50:	add	x0, sp, #0x98
    7b54:	mov	x4, x2
    7b58:	mov	x3, x1
    7b5c:	mov	x2, x0
    7b60:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7b64:	add	x1, x0, #0x6d0
    7b68:	ldr	x0, [sp, #16]
    7b6c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    7b70:	cmp	w0, #0x0
    7b74:	b.eq	7b9c <PySequence_Fast@plt+0x330c>  // b.none
    7b78:	ldr	x0, [sp, #24]
    7b7c:	ldr	w0, [x0, #16]
    7b80:	ldr	w1, [sp, #152]
    7b84:	ldr	w2, [sp, #148]
    7b88:	add	x3, sp, #0x28
    7b8c:	mov	w4, #0x8                   	// #8
    7b90:	bl	4350 <setsockopt@plt>
    7b94:	str	w0, [sp, #156]
    7b98:	b	7cd0 <PySequence_Fast@plt+0x3440>
    7b9c:	mov	x0, #0x0                   	// #0
    7ba0:	b	7d00 <PySequence_Fast@plt+0x3470>
    7ba4:	add	x2, sp, #0x3c
    7ba8:	add	x1, sp, #0x94
    7bac:	add	x0, sp, #0x98
    7bb0:	mov	x4, x2
    7bb4:	mov	x3, x1
    7bb8:	mov	x2, x0
    7bbc:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7bc0:	add	x1, x0, #0x6e0
    7bc4:	ldr	x0, [sp, #16]
    7bc8:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    7bcc:	cmp	w0, #0x0
    7bd0:	b.eq	7bf8 <PySequence_Fast@plt+0x3368>  // b.none
    7bd4:	ldr	x0, [sp, #24]
    7bd8:	ldr	w0, [x0, #16]
    7bdc:	ldr	w1, [sp, #152]
    7be0:	ldr	w2, [sp, #148]
    7be4:	add	x3, sp, #0x3c
    7be8:	mov	w4, #0x4                   	// #4
    7bec:	bl	4350 <setsockopt@plt>
    7bf0:	str	w0, [sp, #156]
    7bf4:	b	7cd0 <PySequence_Fast@plt+0x3440>
    7bf8:	bl	44d0 <PyErr_Clear@plt>
    7bfc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7c00:	ldr	x0, [x0, #4024]
    7c04:	ldr	x2, [x0, #8]
    7c08:	add	x4, sp, #0x38
    7c0c:	add	x3, sp, #0x30
    7c10:	add	x1, sp, #0x94
    7c14:	add	x0, sp, #0x98
    7c18:	mov	x6, x4
    7c1c:	mov	x5, x3
    7c20:	mov	x4, x2
    7c24:	mov	x3, x1
    7c28:	mov	x2, x0
    7c2c:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7c30:	add	x1, x0, #0x6f0
    7c34:	ldr	x0, [sp, #16]
    7c38:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    7c3c:	cmp	w0, #0x0
    7c40:	b.eq	7c6c <PySequence_Fast@plt+0x33dc>  // b.none
    7c44:	ldr	x0, [sp, #24]
    7c48:	ldr	w0, [x0, #16]
    7c4c:	ldr	w1, [sp, #152]
    7c50:	ldr	w2, [sp, #148]
    7c54:	ldr	w3, [sp, #56]
    7c58:	mov	w4, w3
    7c5c:	mov	x3, #0x0                   	// #0
    7c60:	bl	4350 <setsockopt@plt>
    7c64:	str	w0, [sp, #156]
    7c68:	b	7cd0 <PySequence_Fast@plt+0x3440>
    7c6c:	bl	44d0 <PyErr_Clear@plt>
    7c70:	add	x2, sp, #0x40
    7c74:	add	x1, sp, #0x94
    7c78:	add	x0, sp, #0x98
    7c7c:	mov	x4, x2
    7c80:	mov	x3, x1
    7c84:	mov	x2, x0
    7c88:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7c8c:	add	x1, x0, #0x708
    7c90:	ldr	x0, [sp, #16]
    7c94:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    7c98:	cmp	w0, #0x0
    7c9c:	b.ne	7ca8 <PySequence_Fast@plt+0x3418>  // b.any
    7ca0:	mov	x0, #0x0                   	// #0
    7ca4:	b	7d00 <PySequence_Fast@plt+0x3470>
    7ca8:	ldr	x0, [sp, #24]
    7cac:	ldr	w0, [x0, #16]
    7cb0:	ldr	w1, [sp, #152]
    7cb4:	ldr	w2, [sp, #148]
    7cb8:	ldr	x3, [sp, #64]
    7cbc:	ldr	x4, [sp, #80]
    7cc0:	bl	4350 <setsockopt@plt>
    7cc4:	str	w0, [sp, #156]
    7cc8:	add	x0, sp, #0x40
    7ccc:	bl	4260 <PyBuffer_Release@plt>
    7cd0:	ldr	w0, [sp, #156]
    7cd4:	cmp	w0, #0x0
    7cd8:	b.ge	7cec <PySequence_Fast@plt+0x345c>  // b.tcont
    7cdc:	ldr	x0, [sp, #24]
    7ce0:	ldr	x0, [x0, #32]
    7ce4:	blr	x0
    7ce8:	b	7d00 <PySequence_Fast@plt+0x3470>
    7cec:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7cf0:	ldr	x0, [x0, #4024]
    7cf4:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    7cf8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7cfc:	ldr	x0, [x0, #4024]
    7d00:	ldp	x29, x30, [sp], #160
    7d04:	ret
    7d08:	stp	x29, x30, [sp, #-80]!
    7d0c:	mov	x29, sp
    7d10:	str	x0, [sp, #24]
    7d14:	str	x1, [sp, #16]
    7d18:	str	wzr, [sp, #52]
    7d1c:	str	wzr, [sp, #48]
    7d20:	add	x2, sp, #0x34
    7d24:	add	x1, sp, #0x44
    7d28:	add	x0, sp, #0x48
    7d2c:	mov	x4, x2
    7d30:	mov	x3, x1
    7d34:	mov	x2, x0
    7d38:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7d3c:	add	x1, x0, #0x828
    7d40:	ldr	x0, [sp, #16]
    7d44:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    7d48:	cmp	w0, #0x0
    7d4c:	b.ne	7d58 <PySequence_Fast@plt+0x34c8>  // b.any
    7d50:	mov	x0, #0x0                   	// #0
    7d54:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7d58:	ldr	w0, [sp, #52]
    7d5c:	cmp	w0, #0x0
    7d60:	b.ne	7e1c <PySequence_Fast@plt+0x358c>  // b.any
    7d64:	ldr	x0, [sp, #24]
    7d68:	ldr	w0, [x0, #20]
    7d6c:	cmp	w0, #0x28
    7d70:	b.ne	7dc8 <PySequence_Fast@plt+0x3538>  // b.any
    7d74:	str	xzr, [sp, #32]
    7d78:	mov	w0, #0x8                   	// #8
    7d7c:	str	w0, [sp, #44]
    7d80:	ldr	x0, [sp, #24]
    7d84:	ldr	w0, [x0, #16]
    7d88:	ldr	w1, [sp, #72]
    7d8c:	ldr	w2, [sp, #68]
    7d90:	add	x4, sp, #0x2c
    7d94:	add	x3, sp, #0x20
    7d98:	bl	46b0 <getsockopt@plt>
    7d9c:	str	w0, [sp, #76]
    7da0:	ldr	w0, [sp, #76]
    7da4:	cmp	w0, #0x0
    7da8:	b.ge	7dbc <PySequence_Fast@plt+0x352c>  // b.tcont
    7dac:	ldr	x0, [sp, #24]
    7db0:	ldr	x0, [x0, #32]
    7db4:	blr	x0
    7db8:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7dbc:	ldr	x0, [sp, #32]
    7dc0:	bl	4680 <PyLong_FromUnsignedLong@plt>
    7dc4:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7dc8:	mov	w0, #0x4                   	// #4
    7dcc:	str	w0, [sp, #44]
    7dd0:	ldr	x0, [sp, #24]
    7dd4:	ldr	w0, [x0, #16]
    7dd8:	ldr	w1, [sp, #72]
    7ddc:	ldr	w2, [sp, #68]
    7de0:	add	x4, sp, #0x2c
    7de4:	add	x3, sp, #0x30
    7de8:	bl	46b0 <getsockopt@plt>
    7dec:	str	w0, [sp, #76]
    7df0:	ldr	w0, [sp, #76]
    7df4:	cmp	w0, #0x0
    7df8:	b.ge	7e0c <PySequence_Fast@plt+0x357c>  // b.tcont
    7dfc:	ldr	x0, [sp, #24]
    7e00:	ldr	x0, [x0, #32]
    7e04:	blr	x0
    7e08:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7e0c:	ldr	w0, [sp, #48]
    7e10:	sxtw	x0, w0
    7e14:	bl	4480 <PyLong_FromLong@plt>
    7e18:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7e1c:	ldr	x0, [sp, #24]
    7e20:	ldr	w0, [x0, #20]
    7e24:	cmp	w0, #0x28
    7e28:	b.ne	7e50 <PySequence_Fast@plt+0x35c0>  // b.any
    7e2c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7e30:	ldr	x0, [x0, #3984]
    7e34:	ldr	x2, [x0]
    7e38:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7e3c:	add	x1, x0, #0x838
    7e40:	mov	x0, x2
    7e44:	bl	4340 <PyErr_SetString@plt>
    7e48:	mov	x0, #0x0                   	// #0
    7e4c:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7e50:	ldr	w0, [sp, #52]
    7e54:	cmp	w0, #0x0
    7e58:	b.eq	7e68 <PySequence_Fast@plt+0x35d8>  // b.none
    7e5c:	ldr	w0, [sp, #52]
    7e60:	cmp	w0, #0x400
    7e64:	b.ls	7e8c <PySequence_Fast@plt+0x35fc>  // b.plast
    7e68:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7e6c:	ldr	x0, [x0, #3984]
    7e70:	ldr	x2, [x0]
    7e74:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7e78:	add	x1, x0, #0x860
    7e7c:	mov	x0, x2
    7e80:	bl	4340 <PyErr_SetString@plt>
    7e84:	mov	x0, #0x0                   	// #0
    7e88:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7e8c:	ldr	w0, [sp, #52]
    7e90:	mov	w0, w0
    7e94:	mov	x1, x0
    7e98:	mov	x0, #0x0                   	// #0
    7e9c:	bl	4280 <PyBytes_FromStringAndSize@plt>
    7ea0:	str	x0, [sp, #56]
    7ea4:	ldr	x0, [sp, #56]
    7ea8:	cmp	x0, #0x0
    7eac:	b.ne	7eb8 <PySequence_Fast@plt+0x3628>  // b.any
    7eb0:	mov	x0, #0x0                   	// #0
    7eb4:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7eb8:	ldr	x0, [sp, #24]
    7ebc:	ldr	w5, [x0, #16]
    7ec0:	ldr	w1, [sp, #72]
    7ec4:	ldr	w2, [sp, #68]
    7ec8:	ldr	x0, [sp, #56]
    7ecc:	add	x0, x0, #0x20
    7ed0:	add	x3, sp, #0x34
    7ed4:	mov	x4, x3
    7ed8:	mov	x3, x0
    7edc:	mov	w0, w5
    7ee0:	bl	46b0 <getsockopt@plt>
    7ee4:	str	w0, [sp, #76]
    7ee8:	ldr	w0, [sp, #76]
    7eec:	cmp	w0, #0x0
    7ef0:	b.ge	7f1c <PySequence_Fast@plt+0x368c>  // b.tcont
    7ef4:	ldr	x0, [sp, #56]
    7ef8:	mov	x2, x0
    7efc:	mov	w1, #0xbe2                 	// #3042
    7f00:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    7f04:	add	x0, x0, #0xba0
    7f08:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    7f0c:	ldr	x0, [sp, #24]
    7f10:	ldr	x0, [x0, #32]
    7f14:	blr	x0
    7f18:	b	7f30 <PySequence_Fast@plt+0x36a0>
    7f1c:	ldr	w0, [sp, #52]
    7f20:	mov	w1, w0
    7f24:	add	x0, sp, #0x38
    7f28:	bl	41c0 <_PyBytes_Resize@plt>
    7f2c:	ldr	x0, [sp, #56]
    7f30:	ldp	x29, x30, [sp], #80
    7f34:	ret
    7f38:	stp	x29, x30, [sp, #-192]!
    7f3c:	mov	x29, sp
    7f40:	str	x0, [sp, #24]
    7f44:	str	x1, [sp, #16]
    7f48:	add	x2, sp, #0x2c
    7f4c:	add	x1, sp, #0x30
    7f50:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7f54:	add	x4, x0, #0x968
    7f58:	mov	x3, x2
    7f5c:	mov	x2, x1
    7f60:	ldr	x1, [sp, #16]
    7f64:	ldr	x0, [sp, #24]
    7f68:	bl	6054 <PySequence_Fast@plt+0x17c4>
    7f6c:	cmp	w0, #0x0
    7f70:	b.ne	7f7c <PySequence_Fast@plt+0x36ec>  // b.any
    7f74:	mov	x0, #0x0                   	// #0
    7f78:	b	800c <PySequence_Fast@plt+0x377c>
    7f7c:	ldr	x3, [sp, #16]
    7f80:	ldr	x2, [sp, #24]
    7f84:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7f88:	add	x1, x0, #0x970
    7f8c:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    7f90:	add	x0, x0, #0x978
    7f94:	bl	4620 <PySys_Audit@plt>
    7f98:	cmp	w0, #0x0
    7f9c:	b.ge	7fa8 <PySequence_Fast@plt+0x3718>  // b.tcont
    7fa0:	mov	x0, #0x0                   	// #0
    7fa4:	b	800c <PySequence_Fast@plt+0x377c>
    7fa8:	bl	46f0 <PyEval_SaveThread@plt>
    7fac:	str	x0, [sp, #184]
    7fb0:	ldr	x0, [sp, #24]
    7fb4:	ldr	w0, [x0, #16]
    7fb8:	add	x1, sp, #0x30
    7fbc:	mov	x3, x1
    7fc0:	ldr	w1, [sp, #44]
    7fc4:	mov	w2, w1
    7fc8:	mov	x1, x3
    7fcc:	bl	4240 <bind@plt>
    7fd0:	str	w0, [sp, #180]
    7fd4:	ldr	x0, [sp, #184]
    7fd8:	bl	4210 <PyEval_RestoreThread@plt>
    7fdc:	ldr	w0, [sp, #180]
    7fe0:	cmp	w0, #0x0
    7fe4:	b.ge	7ff8 <PySequence_Fast@plt+0x3768>  // b.tcont
    7fe8:	ldr	x0, [sp, #24]
    7fec:	ldr	x0, [x0, #32]
    7ff0:	blr	x0
    7ff4:	b	800c <PySequence_Fast@plt+0x377c>
    7ff8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    7ffc:	ldr	x0, [x0, #4024]
    8000:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    8004:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8008:	ldr	x0, [x0, #4024]
    800c:	ldp	x29, x30, [sp], #192
    8010:	ret
    8014:	stp	x29, x30, [sp, #-64]!
    8018:	mov	x29, sp
    801c:	str	x0, [sp, #24]
    8020:	str	x1, [sp, #16]
    8024:	ldr	x0, [sp, #24]
    8028:	ldr	w0, [x0, #16]
    802c:	str	w0, [sp, #60]
    8030:	ldr	w0, [sp, #60]
    8034:	cmn	w0, #0x1
    8038:	b.eq	8090 <PySequence_Fast@plt+0x3800>  // b.none
    803c:	ldr	x0, [sp, #24]
    8040:	mov	w1, #0xffffffff            	// #-1
    8044:	str	w1, [x0, #16]
    8048:	bl	46f0 <PyEval_SaveThread@plt>
    804c:	str	x0, [sp, #48]
    8050:	ldr	w0, [sp, #60]
    8054:	bl	4500 <close@plt>
    8058:	str	w0, [sp, #44]
    805c:	ldr	x0, [sp, #48]
    8060:	bl	4210 <PyEval_RestoreThread@plt>
    8064:	ldr	w0, [sp, #44]
    8068:	cmp	w0, #0x0
    806c:	b.ge	8090 <PySequence_Fast@plt+0x3800>  // b.tcont
    8070:	bl	47e0 <__errno_location@plt>
    8074:	ldr	w0, [x0]
    8078:	cmp	w0, #0x68
    807c:	b.eq	8090 <PySequence_Fast@plt+0x3800>  // b.none
    8080:	ldr	x0, [sp, #24]
    8084:	ldr	x0, [x0, #32]
    8088:	blr	x0
    808c:	b	80a4 <PySequence_Fast@plt+0x3814>
    8090:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8094:	ldr	x0, [x0, #4024]
    8098:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    809c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    80a0:	ldr	x0, [x0, #4024]
    80a4:	ldp	x29, x30, [sp], #64
    80a8:	ret
    80ac:	stp	x29, x30, [sp, #-48]!
    80b0:	mov	x29, sp
    80b4:	str	x0, [sp, #24]
    80b8:	str	x1, [sp, #16]
    80bc:	ldr	x0, [sp, #24]
    80c0:	ldr	w0, [x0, #16]
    80c4:	str	w0, [sp, #44]
    80c8:	ldr	x0, [sp, #24]
    80cc:	mov	w1, #0xffffffff            	// #-1
    80d0:	str	w1, [x0, #16]
    80d4:	ldrsw	x0, [sp, #44]
    80d8:	bl	4480 <PyLong_FromLong@plt>
    80dc:	ldp	x29, x30, [sp], #48
    80e0:	ret
    80e4:	stp	x29, x30, [sp, #-48]!
    80e8:	mov	x29, sp
    80ec:	str	x0, [sp, #24]
    80f0:	str	x1, [sp, #16]
    80f4:	mov	w0, #0x4                   	// #4
    80f8:	str	w0, [sp, #40]
    80fc:	ldr	x0, [sp, #24]
    8100:	ldr	w0, [x0, #16]
    8104:	add	x2, sp, #0x28
    8108:	add	x1, sp, #0x2c
    810c:	mov	x4, x2
    8110:	mov	x3, x1
    8114:	mov	w2, #0x4                   	// #4
    8118:	mov	w1, #0x1                   	// #1
    811c:	bl	46b0 <getsockopt@plt>
    8120:	cmp	w0, #0x0
    8124:	b.eq	8130 <PySequence_Fast@plt+0x38a0>  // b.none
    8128:	mov	w0, #0x0                   	// #0
    812c:	b	816c <PySequence_Fast@plt+0x38dc>
    8130:	ldr	w0, [sp, #44]
    8134:	cmp	w0, #0x6a
    8138:	b.ne	8144 <PySequence_Fast@plt+0x38b4>  // b.any
    813c:	mov	w0, #0x1                   	// #1
    8140:	b	816c <PySequence_Fast@plt+0x38dc>
    8144:	ldr	w0, [sp, #44]
    8148:	cmp	w0, #0x0
    814c:	b.eq	8168 <PySequence_Fast@plt+0x38d8>  // b.none
    8150:	bl	47e0 <__errno_location@plt>
    8154:	mov	x1, x0
    8158:	ldr	w0, [sp, #44]
    815c:	str	w0, [x1]
    8160:	mov	w0, #0x0                   	// #0
    8164:	b	816c <PySequence_Fast@plt+0x38dc>
    8168:	mov	w0, #0x1                   	// #1
    816c:	ldp	x29, x30, [sp], #48
    8170:	ret
    8174:	stp	x29, x30, [sp, #-80]!
    8178:	mov	x29, sp
    817c:	str	x0, [sp, #40]
    8180:	str	x1, [sp, #32]
    8184:	str	w2, [sp, #28]
    8188:	str	w3, [sp, #24]
    818c:	bl	46f0 <PyEval_SaveThread@plt>
    8190:	str	x0, [sp, #64]
    8194:	ldr	x0, [sp, #40]
    8198:	ldr	w0, [x0, #16]
    819c:	ldr	x1, [sp, #32]
    81a0:	ldr	w2, [sp, #28]
    81a4:	bl	4600 <connect@plt>
    81a8:	str	w0, [sp, #60]
    81ac:	ldr	x0, [sp, #64]
    81b0:	bl	4210 <PyEval_RestoreThread@plt>
    81b4:	ldr	w0, [sp, #60]
    81b8:	cmp	w0, #0x0
    81bc:	b.ne	81c8 <PySequence_Fast@plt+0x3938>  // b.any
    81c0:	mov	w0, #0x0                   	// #0
    81c4:	b	8310 <PySequence_Fast@plt+0x3a80>
    81c8:	bl	47e0 <__errno_location@plt>
    81cc:	ldr	w0, [x0]
    81d0:	str	w0, [sp, #56]
    81d4:	bl	47e0 <__errno_location@plt>
    81d8:	ldr	w0, [x0]
    81dc:	cmp	w0, #0x4
    81e0:	b.ne	8214 <PySequence_Fast@plt+0x3984>  // b.any
    81e4:	bl	4760 <PyErr_CheckSignals@plt>
    81e8:	cmp	w0, #0x0
    81ec:	b.eq	81f8 <PySequence_Fast@plt+0x3968>  // b.none
    81f0:	mov	w0, #0xffffffff            	// #-1
    81f4:	b	8310 <PySequence_Fast@plt+0x3a80>
    81f8:	ldr	x0, [sp, #40]
    81fc:	ldr	x0, [x0, #40]
    8200:	cmp	x0, #0x0
    8204:	cset	w0, ne  // ne = any
    8208:	and	w0, w0, #0xff
    820c:	str	w0, [sp, #76]
    8210:	b	8240 <PySequence_Fast@plt+0x39b0>
    8214:	ldr	x0, [sp, #40]
    8218:	ldr	x0, [x0, #40]
    821c:	cmp	x0, #0x0
    8220:	b.le	8238 <PySequence_Fast@plt+0x39a8>
    8224:	ldr	w0, [sp, #56]
    8228:	cmp	w0, #0x73
    822c:	b.ne	8238 <PySequence_Fast@plt+0x39a8>  // b.any
    8230:	mov	w0, #0x1                   	// #1
    8234:	b	823c <PySequence_Fast@plt+0x39ac>
    8238:	mov	w0, #0x0                   	// #0
    823c:	str	w0, [sp, #76]
    8240:	ldr	w0, [sp, #76]
    8244:	cmp	w0, #0x0
    8248:	b.ne	8284 <PySequence_Fast@plt+0x39f4>  // b.any
    824c:	ldr	w0, [sp, #24]
    8250:	cmp	w0, #0x0
    8254:	b.eq	827c <PySequence_Fast@plt+0x39ec>  // b.none
    8258:	bl	47e0 <__errno_location@plt>
    825c:	mov	x1, x0
    8260:	ldr	w0, [sp, #56]
    8264:	str	w0, [x1]
    8268:	ldr	x0, [sp, #40]
    826c:	ldr	x0, [x0, #32]
    8270:	blr	x0
    8274:	mov	w0, #0xffffffff            	// #-1
    8278:	b	8310 <PySequence_Fast@plt+0x3a80>
    827c:	ldr	w0, [sp, #56]
    8280:	b	8310 <PySequence_Fast@plt+0x3a80>
    8284:	ldr	w0, [sp, #24]
    8288:	cmp	w0, #0x0
    828c:	b.eq	82cc <PySequence_Fast@plt+0x3a3c>  // b.none
    8290:	ldr	x0, [sp, #40]
    8294:	ldr	x0, [x0, #40]
    8298:	mov	x6, x0
    829c:	mov	x5, #0x0                   	// #0
    82a0:	mov	w4, #0x1                   	// #1
    82a4:	mov	x3, #0x0                   	// #0
    82a8:	adrp	x0, 8000 <PySequence_Fast@plt+0x3770>
    82ac:	add	x2, x0, #0xe4
    82b0:	mov	w1, #0x1                   	// #1
    82b4:	ldr	x0, [sp, #40]
    82b8:	bl	4dcc <PySequence_Fast@plt+0x53c>
    82bc:	cmp	w0, #0x0
    82c0:	b.ge	830c <PySequence_Fast@plt+0x3a7c>  // b.tcont
    82c4:	mov	w0, #0xffffffff            	// #-1
    82c8:	b	8310 <PySequence_Fast@plt+0x3a80>
    82cc:	ldr	x0, [sp, #40]
    82d0:	ldr	x1, [x0, #40]
    82d4:	add	x0, sp, #0x38
    82d8:	mov	x6, x1
    82dc:	mov	x5, x0
    82e0:	mov	w4, #0x1                   	// #1
    82e4:	mov	x3, #0x0                   	// #0
    82e8:	adrp	x0, 8000 <PySequence_Fast@plt+0x3770>
    82ec:	add	x2, x0, #0xe4
    82f0:	mov	w1, #0x1                   	// #1
    82f4:	ldr	x0, [sp, #40]
    82f8:	bl	4dcc <PySequence_Fast@plt+0x53c>
    82fc:	cmp	w0, #0x0
    8300:	b.ge	830c <PySequence_Fast@plt+0x3a7c>  // b.tcont
    8304:	ldr	w0, [sp, #56]
    8308:	b	8310 <PySequence_Fast@plt+0x3a80>
    830c:	mov	w0, #0x0                   	// #0
    8310:	ldp	x29, x30, [sp], #80
    8314:	ret
    8318:	stp	x29, x30, [sp, #-176]!
    831c:	mov	x29, sp
    8320:	str	x0, [sp, #24]
    8324:	str	x1, [sp, #16]
    8328:	add	x2, sp, #0x24
    832c:	add	x1, sp, #0x28
    8330:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8334:	add	x4, x0, #0xb98
    8338:	mov	x3, x2
    833c:	mov	x2, x1
    8340:	ldr	x1, [sp, #16]
    8344:	ldr	x0, [sp, #24]
    8348:	bl	6054 <PySequence_Fast@plt+0x17c4>
    834c:	cmp	w0, #0x0
    8350:	b.ne	835c <PySequence_Fast@plt+0x3acc>  // b.any
    8354:	mov	x0, #0x0                   	// #0
    8358:	b	83d0 <PySequence_Fast@plt+0x3b40>
    835c:	ldr	x3, [sp, #16]
    8360:	ldr	x2, [sp, #24]
    8364:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8368:	add	x1, x0, #0x970
    836c:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8370:	add	x0, x0, #0xba0
    8374:	bl	4620 <PySys_Audit@plt>
    8378:	cmp	w0, #0x0
    837c:	b.ge	8388 <PySequence_Fast@plt+0x3af8>  // b.tcont
    8380:	mov	x0, #0x0                   	// #0
    8384:	b	83d0 <PySequence_Fast@plt+0x3b40>
    8388:	ldr	w1, [sp, #36]
    838c:	add	x0, sp, #0x28
    8390:	mov	w3, #0x1                   	// #1
    8394:	mov	w2, w1
    8398:	mov	x1, x0
    839c:	ldr	x0, [sp, #24]
    83a0:	bl	8174 <PySequence_Fast@plt+0x38e4>
    83a4:	str	w0, [sp, #172]
    83a8:	ldr	w0, [sp, #172]
    83ac:	cmp	w0, #0x0
    83b0:	b.ge	83bc <PySequence_Fast@plt+0x3b2c>  // b.tcont
    83b4:	mov	x0, #0x0                   	// #0
    83b8:	b	83d0 <PySequence_Fast@plt+0x3b40>
    83bc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    83c0:	ldr	x0, [x0, #4024]
    83c4:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    83c8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    83cc:	ldr	x0, [x0, #4024]
    83d0:	ldp	x29, x30, [sp], #176
    83d4:	ret
    83d8:	stp	x29, x30, [sp, #-176]!
    83dc:	mov	x29, sp
    83e0:	str	x0, [sp, #24]
    83e4:	str	x1, [sp, #16]
    83e8:	add	x2, sp, #0x24
    83ec:	add	x1, sp, #0x28
    83f0:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    83f4:	add	x4, x0, #0xc20
    83f8:	mov	x3, x2
    83fc:	mov	x2, x1
    8400:	ldr	x1, [sp, #16]
    8404:	ldr	x0, [sp, #24]
    8408:	bl	6054 <PySequence_Fast@plt+0x17c4>
    840c:	cmp	w0, #0x0
    8410:	b.ne	841c <PySequence_Fast@plt+0x3b8c>  // b.any
    8414:	mov	x0, #0x0                   	// #0
    8418:	b	8484 <PySequence_Fast@plt+0x3bf4>
    841c:	ldr	x3, [sp, #16]
    8420:	ldr	x2, [sp, #24]
    8424:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8428:	add	x1, x0, #0x970
    842c:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8430:	add	x0, x0, #0xba0
    8434:	bl	4620 <PySys_Audit@plt>
    8438:	cmp	w0, #0x0
    843c:	b.ge	8448 <PySequence_Fast@plt+0x3bb8>  // b.tcont
    8440:	mov	x0, #0x0                   	// #0
    8444:	b	8484 <PySequence_Fast@plt+0x3bf4>
    8448:	ldr	w1, [sp, #36]
    844c:	add	x0, sp, #0x28
    8450:	mov	w3, #0x0                   	// #0
    8454:	mov	w2, w1
    8458:	mov	x1, x0
    845c:	ldr	x0, [sp, #24]
    8460:	bl	8174 <PySequence_Fast@plt+0x38e4>
    8464:	str	w0, [sp, #172]
    8468:	ldr	w0, [sp, #172]
    846c:	cmp	w0, #0x0
    8470:	b.ge	847c <PySequence_Fast@plt+0x3bec>  // b.tcont
    8474:	mov	x0, #0x0                   	// #0
    8478:	b	8484 <PySequence_Fast@plt+0x3bf4>
    847c:	ldrsw	x0, [sp, #172]
    8480:	bl	4480 <PyLong_FromLong@plt>
    8484:	ldp	x29, x30, [sp], #176
    8488:	ret
    848c:	stp	x29, x30, [sp, #-32]!
    8490:	mov	x29, sp
    8494:	str	x0, [sp, #24]
    8498:	str	x1, [sp, #16]
    849c:	ldr	x0, [sp, #24]
    84a0:	ldr	w0, [x0, #16]
    84a4:	sxtw	x0, w0
    84a8:	bl	4480 <PyLong_FromLong@plt>
    84ac:	ldp	x29, x30, [sp], #32
    84b0:	ret
    84b4:	stp	x29, x30, [sp, #-192]!
    84b8:	mov	x29, sp
    84bc:	str	x0, [sp, #24]
    84c0:	str	x1, [sp, #16]
    84c4:	add	x0, sp, #0x2c
    84c8:	mov	x1, x0
    84cc:	ldr	x0, [sp, #24]
    84d0:	bl	7174 <PySequence_Fast@plt+0x28e4>
    84d4:	cmp	w0, #0x0
    84d8:	b.ne	84e4 <PySequence_Fast@plt+0x3c54>  // b.any
    84dc:	mov	x0, #0x0                   	// #0
    84e0:	b	857c <PySequence_Fast@plt+0x3cec>
    84e4:	ldr	w0, [sp, #44]
    84e8:	mov	w1, w0
    84ec:	add	x0, sp, #0x30
    84f0:	mov	x2, x1
    84f4:	mov	w1, #0x0                   	// #0
    84f8:	bl	43e0 <memset@plt>
    84fc:	bl	46f0 <PyEval_SaveThread@plt>
    8500:	str	x0, [sp, #184]
    8504:	ldr	x0, [sp, #24]
    8508:	ldr	w0, [x0, #16]
    850c:	add	x1, sp, #0x30
    8510:	mov	x3, x1
    8514:	add	x1, sp, #0x2c
    8518:	mov	x2, x1
    851c:	mov	x1, x3
    8520:	bl	4800 <getsockname@plt>
    8524:	str	w0, [sp, #180]
    8528:	ldr	x0, [sp, #184]
    852c:	bl	4210 <PyEval_RestoreThread@plt>
    8530:	ldr	w0, [sp, #180]
    8534:	cmp	w0, #0x0
    8538:	b.ge	854c <PySequence_Fast@plt+0x3cbc>  // b.tcont
    853c:	ldr	x0, [sp, #24]
    8540:	ldr	x0, [x0, #32]
    8544:	blr	x0
    8548:	b	857c <PySequence_Fast@plt+0x3cec>
    854c:	ldr	x0, [sp, #24]
    8550:	ldr	w4, [x0, #16]
    8554:	ldr	w0, [sp, #44]
    8558:	mov	w1, w0
    855c:	ldr	x0, [sp, #24]
    8560:	ldr	w2, [x0, #28]
    8564:	add	x0, sp, #0x30
    8568:	mov	w3, w2
    856c:	mov	x2, x1
    8570:	mov	x1, x0
    8574:	mov	w0, w4
    8578:	bl	5730 <PySequence_Fast@plt+0xea0>
    857c:	ldp	x29, x30, [sp], #192
    8580:	ret
    8584:	stp	x29, x30, [sp, #-192]!
    8588:	mov	x29, sp
    858c:	str	x0, [sp, #24]
    8590:	str	x1, [sp, #16]
    8594:	add	x0, sp, #0x2c
    8598:	mov	x1, x0
    859c:	ldr	x0, [sp, #24]
    85a0:	bl	7174 <PySequence_Fast@plt+0x28e4>
    85a4:	cmp	w0, #0x0
    85a8:	b.ne	85b4 <PySequence_Fast@plt+0x3d24>  // b.any
    85ac:	mov	x0, #0x0                   	// #0
    85b0:	b	864c <PySequence_Fast@plt+0x3dbc>
    85b4:	ldr	w0, [sp, #44]
    85b8:	mov	w1, w0
    85bc:	add	x0, sp, #0x30
    85c0:	mov	x2, x1
    85c4:	mov	w1, #0x0                   	// #0
    85c8:	bl	43e0 <memset@plt>
    85cc:	bl	46f0 <PyEval_SaveThread@plt>
    85d0:	str	x0, [sp, #184]
    85d4:	ldr	x0, [sp, #24]
    85d8:	ldr	w0, [x0, #16]
    85dc:	add	x1, sp, #0x30
    85e0:	mov	x3, x1
    85e4:	add	x1, sp, #0x2c
    85e8:	mov	x2, x1
    85ec:	mov	x1, x3
    85f0:	bl	4160 <getpeername@plt>
    85f4:	str	w0, [sp, #180]
    85f8:	ldr	x0, [sp, #184]
    85fc:	bl	4210 <PyEval_RestoreThread@plt>
    8600:	ldr	w0, [sp, #180]
    8604:	cmp	w0, #0x0
    8608:	b.ge	861c <PySequence_Fast@plt+0x3d8c>  // b.tcont
    860c:	ldr	x0, [sp, #24]
    8610:	ldr	x0, [x0, #32]
    8614:	blr	x0
    8618:	b	864c <PySequence_Fast@plt+0x3dbc>
    861c:	ldr	x0, [sp, #24]
    8620:	ldr	w4, [x0, #16]
    8624:	ldr	w0, [sp, #44]
    8628:	mov	w1, w0
    862c:	ldr	x0, [sp, #24]
    8630:	ldr	w2, [x0, #28]
    8634:	add	x0, sp, #0x30
    8638:	mov	w3, w2
    863c:	mov	x2, x1
    8640:	mov	x1, x0
    8644:	mov	w0, w4
    8648:	bl	5730 <PySequence_Fast@plt+0xea0>
    864c:	ldp	x29, x30, [sp], #192
    8650:	ret
    8654:	stp	x29, x30, [sp, #-48]!
    8658:	mov	x29, sp
    865c:	str	x0, [sp, #24]
    8660:	str	x1, [sp, #16]
    8664:	mov	w0, #0x80                  	// #128
    8668:	str	w0, [sp, #32]
    866c:	add	x0, sp, #0x20
    8670:	mov	x2, x0
    8674:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8678:	add	x1, x0, #0xe28
    867c:	ldr	x0, [sp, #16]
    8680:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    8684:	cmp	w0, #0x0
    8688:	b.ne	8694 <PySequence_Fast@plt+0x3e04>  // b.any
    868c:	mov	x0, #0x0                   	// #0
    8690:	b	86f8 <PySequence_Fast@plt+0x3e68>
    8694:	bl	46f0 <PyEval_SaveThread@plt>
    8698:	str	x0, [sp, #40]
    869c:	ldr	w0, [sp, #32]
    86a0:	cmp	w0, #0x0
    86a4:	b.ge	86ac <PySequence_Fast@plt+0x3e1c>  // b.tcont
    86a8:	str	wzr, [sp, #32]
    86ac:	ldr	x0, [sp, #24]
    86b0:	ldr	w0, [x0, #16]
    86b4:	ldr	w1, [sp, #32]
    86b8:	bl	41b0 <listen@plt>
    86bc:	str	w0, [sp, #36]
    86c0:	ldr	x0, [sp, #40]
    86c4:	bl	4210 <PyEval_RestoreThread@plt>
    86c8:	ldr	w0, [sp, #36]
    86cc:	cmp	w0, #0x0
    86d0:	b.ge	86e4 <PySequence_Fast@plt+0x3e54>  // b.tcont
    86d4:	ldr	x0, [sp, #24]
    86d8:	ldr	x0, [x0, #32]
    86dc:	blr	x0
    86e0:	b	86f8 <PySequence_Fast@plt+0x3e68>
    86e4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    86e8:	ldr	x0, [x0, #4024]
    86ec:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    86f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    86f4:	ldr	x0, [x0, #4024]
    86f8:	ldp	x29, x30, [sp], #48
    86fc:	ret
    8700:	stp	x29, x30, [sp, #-48]!
    8704:	mov	x29, sp
    8708:	str	x0, [sp, #24]
    870c:	str	x1, [sp, #16]
    8710:	ldr	x0, [sp, #16]
    8714:	str	x0, [sp, #40]
    8718:	ldr	x0, [sp, #24]
    871c:	ldr	w4, [x0, #16]
    8720:	ldr	x0, [sp, #40]
    8724:	ldr	x1, [x0]
    8728:	ldr	x0, [sp, #40]
    872c:	ldr	x0, [x0, #8]
    8730:	mov	x2, x0
    8734:	ldr	x0, [sp, #40]
    8738:	ldr	w0, [x0, #16]
    873c:	mov	w3, w0
    8740:	mov	w0, w4
    8744:	bl	4510 <recv@plt>
    8748:	mov	x1, x0
    874c:	ldr	x0, [sp, #40]
    8750:	str	x1, [x0, #24]
    8754:	ldr	x0, [sp, #40]
    8758:	ldr	x0, [x0, #24]
    875c:	mvn	x0, x0
    8760:	lsr	x0, x0, #63
    8764:	and	w0, w0, #0xff
    8768:	ldp	x29, x30, [sp], #48
    876c:	ret
    8770:	stp	x29, x30, [sp, #-80]!
    8774:	mov	x29, sp
    8778:	str	x0, [sp, #40]
    877c:	str	x1, [sp, #32]
    8780:	str	x2, [sp, #24]
    8784:	str	w3, [sp, #20]
    8788:	ldr	x0, [sp, #24]
    878c:	cmp	x0, #0x0
    8790:	b.ne	879c <PySequence_Fast@plt+0x3f0c>  // b.any
    8794:	mov	x0, #0x0                   	// #0
    8798:	b	87e4 <PySequence_Fast@plt+0x3f54>
    879c:	ldr	x0, [sp, #32]
    87a0:	str	x0, [sp, #48]
    87a4:	ldr	x0, [sp, #24]
    87a8:	str	x0, [sp, #56]
    87ac:	ldr	w0, [sp, #20]
    87b0:	str	w0, [sp, #64]
    87b4:	add	x0, sp, #0x30
    87b8:	mov	x3, x0
    87bc:	adrp	x0, 8000 <PySequence_Fast@plt+0x3770>
    87c0:	add	x2, x0, #0x700
    87c4:	mov	w1, #0x0                   	// #0
    87c8:	ldr	x0, [sp, #40]
    87cc:	bl	5098 <PySequence_Fast@plt+0x808>
    87d0:	cmp	w0, #0x0
    87d4:	b.ge	87e0 <PySequence_Fast@plt+0x3f50>  // b.tcont
    87d8:	mov	x0, #0xffffffffffffffff    	// #-1
    87dc:	b	87e4 <PySequence_Fast@plt+0x3f54>
    87e0:	ldr	x0, [sp, #72]
    87e4:	ldp	x29, x30, [sp], #80
    87e8:	ret
    87ec:	stp	x29, x30, [sp, #-64]!
    87f0:	mov	x29, sp
    87f4:	str	x0, [sp, #24]
    87f8:	str	x1, [sp, #16]
    87fc:	str	wzr, [sp, #44]
    8800:	add	x1, sp, #0x2c
    8804:	add	x0, sp, #0x30
    8808:	mov	x3, x1
    880c:	mov	x2, x0
    8810:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    8814:	add	x1, x0, #0xf70
    8818:	ldr	x0, [sp, #16]
    881c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    8820:	cmp	w0, #0x0
    8824:	b.ne	8830 <PySequence_Fast@plt+0x3fa0>  // b.any
    8828:	mov	x0, #0x0                   	// #0
    882c:	b	88fc <PySequence_Fast@plt+0x406c>
    8830:	ldr	x0, [sp, #48]
    8834:	cmp	x0, #0x0
    8838:	b.ge	8860 <PySequence_Fast@plt+0x3fd0>  // b.tcont
    883c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8840:	ldr	x0, [x0, #3960]
    8844:	ldr	x2, [x0]
    8848:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    884c:	add	x1, x0, #0xf80
    8850:	mov	x0, x2
    8854:	bl	4340 <PyErr_SetString@plt>
    8858:	mov	x0, #0x0                   	// #0
    885c:	b	88fc <PySequence_Fast@plt+0x406c>
    8860:	ldr	x0, [sp, #48]
    8864:	mov	x1, x0
    8868:	mov	x0, #0x0                   	// #0
    886c:	bl	4280 <PyBytes_FromStringAndSize@plt>
    8870:	str	x0, [sp, #32]
    8874:	ldr	x0, [sp, #32]
    8878:	cmp	x0, #0x0
    887c:	b.ne	8888 <PySequence_Fast@plt+0x3ff8>  // b.any
    8880:	mov	x0, #0x0                   	// #0
    8884:	b	88fc <PySequence_Fast@plt+0x406c>
    8888:	ldr	x0, [sp, #32]
    888c:	add	x0, x0, #0x20
    8890:	ldr	x1, [sp, #48]
    8894:	ldr	w2, [sp, #44]
    8898:	mov	w3, w2
    889c:	mov	x2, x1
    88a0:	mov	x1, x0
    88a4:	ldr	x0, [sp, #24]
    88a8:	bl	8770 <PySequence_Fast@plt+0x3ee0>
    88ac:	str	x0, [sp, #56]
    88b0:	ldr	x0, [sp, #56]
    88b4:	cmp	x0, #0x0
    88b8:	b.ge	88dc <PySequence_Fast@plt+0x404c>  // b.tcont
    88bc:	ldr	x0, [sp, #32]
    88c0:	mov	x2, x0
    88c4:	mov	w1, #0xd97                 	// #3479
    88c8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    88cc:	add	x0, x0, #0xba0
    88d0:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    88d4:	mov	x0, #0x0                   	// #0
    88d8:	b	88fc <PySequence_Fast@plt+0x406c>
    88dc:	ldr	x0, [sp, #48]
    88e0:	ldr	x1, [sp, #56]
    88e4:	cmp	x1, x0
    88e8:	b.eq	88f8 <PySequence_Fast@plt+0x4068>  // b.none
    88ec:	add	x0, sp, #0x20
    88f0:	ldr	x1, [sp, #56]
    88f4:	bl	41c0 <_PyBytes_Resize@plt>
    88f8:	ldr	x0, [sp, #32]
    88fc:	ldp	x29, x30, [sp], #64
    8900:	ret
    8904:	stp	x29, x30, [sp, #-176]!
    8908:	mov	x29, sp
    890c:	str	x0, [sp, #40]
    8910:	str	x1, [sp, #32]
    8914:	str	x2, [sp, #24]
    8918:	str	wzr, [sp, #148]
    891c:	str	xzr, [sp, #56]
    8920:	add	x2, sp, #0x94
    8924:	add	x1, sp, #0x38
    8928:	add	x0, sp, #0x40
    892c:	mov	x6, x2
    8930:	mov	x5, x1
    8934:	mov	x4, x0
    8938:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    893c:	add	x3, x0, #0xe50
    8940:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8944:	add	x2, x0, #0xe8
    8948:	ldr	x1, [sp, #24]
    894c:	ldr	x0, [sp, #32]
    8950:	bl	45c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    8954:	cmp	w0, #0x0
    8958:	b.ne	8964 <PySequence_Fast@plt+0x40d4>  // b.any
    895c:	mov	x0, #0x0                   	// #0
    8960:	b	8a48 <PySequence_Fast@plt+0x41b8>
    8964:	ldr	x0, [sp, #64]
    8968:	str	x0, [sp, #168]
    896c:	ldr	x0, [sp, #80]
    8970:	str	x0, [sp, #160]
    8974:	ldr	x0, [sp, #56]
    8978:	cmp	x0, #0x0
    897c:	b.ge	89ac <PySequence_Fast@plt+0x411c>  // b.tcont
    8980:	add	x0, sp, #0x40
    8984:	bl	4260 <PyBuffer_Release@plt>
    8988:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    898c:	ldr	x0, [x0, #3960]
    8990:	ldr	x2, [x0]
    8994:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8998:	add	x1, x0, #0xf8
    899c:	mov	x0, x2
    89a0:	bl	4340 <PyErr_SetString@plt>
    89a4:	mov	x0, #0x0                   	// #0
    89a8:	b	8a48 <PySequence_Fast@plt+0x41b8>
    89ac:	ldr	x0, [sp, #56]
    89b0:	cmp	x0, #0x0
    89b4:	b.ne	89c0 <PySequence_Fast@plt+0x4130>  // b.any
    89b8:	ldr	x0, [sp, #160]
    89bc:	str	x0, [sp, #56]
    89c0:	ldr	x0, [sp, #56]
    89c4:	ldr	x1, [sp, #160]
    89c8:	cmp	x1, x0
    89cc:	b.ge	89fc <PySequence_Fast@plt+0x416c>  // b.tcont
    89d0:	add	x0, sp, #0x40
    89d4:	bl	4260 <PyBuffer_Release@plt>
    89d8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    89dc:	ldr	x0, [x0, #3960]
    89e0:	ldr	x2, [x0]
    89e4:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    89e8:	add	x1, x0, #0x120
    89ec:	mov	x0, x2
    89f0:	bl	4340 <PyErr_SetString@plt>
    89f4:	mov	x0, #0x0                   	// #0
    89f8:	b	8a48 <PySequence_Fast@plt+0x41b8>
    89fc:	ldr	x0, [sp, #56]
    8a00:	ldr	w1, [sp, #148]
    8a04:	mov	w3, w1
    8a08:	mov	x2, x0
    8a0c:	ldr	x1, [sp, #168]
    8a10:	ldr	x0, [sp, #40]
    8a14:	bl	8770 <PySequence_Fast@plt+0x3ee0>
    8a18:	str	x0, [sp, #152]
    8a1c:	ldr	x0, [sp, #152]
    8a20:	cmp	x0, #0x0
    8a24:	b.ge	8a38 <PySequence_Fast@plt+0x41a8>  // b.tcont
    8a28:	add	x0, sp, #0x40
    8a2c:	bl	4260 <PyBuffer_Release@plt>
    8a30:	mov	x0, #0x0                   	// #0
    8a34:	b	8a48 <PySequence_Fast@plt+0x41b8>
    8a38:	add	x0, sp, #0x40
    8a3c:	bl	4260 <PyBuffer_Release@plt>
    8a40:	ldr	x0, [sp, #152]
    8a44:	bl	4450 <PyLong_FromSsize_t@plt>
    8a48:	ldp	x29, x30, [sp], #176
    8a4c:	ret
    8a50:	stp	x29, x30, [sp, #-48]!
    8a54:	mov	x29, sp
    8a58:	str	x0, [sp, #24]
    8a5c:	str	x1, [sp, #16]
    8a60:	ldr	x0, [sp, #16]
    8a64:	str	x0, [sp, #40]
    8a68:	ldr	x0, [sp, #40]
    8a6c:	ldr	x3, [x0, #32]
    8a70:	ldr	x0, [sp, #40]
    8a74:	ldr	x0, [x0, #24]
    8a78:	ldr	w0, [x0]
    8a7c:	mov	w0, w0
    8a80:	mov	x2, x0
    8a84:	mov	w1, #0x0                   	// #0
    8a88:	mov	x0, x3
    8a8c:	bl	43e0 <memset@plt>
    8a90:	ldr	x0, [sp, #24]
    8a94:	ldr	w6, [x0, #16]
    8a98:	ldr	x0, [sp, #40]
    8a9c:	ldr	x1, [x0]
    8aa0:	ldr	x0, [sp, #40]
    8aa4:	ldr	x0, [x0, #8]
    8aa8:	mov	x7, x0
    8aac:	ldr	x0, [sp, #40]
    8ab0:	ldr	w2, [x0, #16]
    8ab4:	ldr	x0, [sp, #40]
    8ab8:	ldr	x0, [x0, #32]
    8abc:	mov	x3, x0
    8ac0:	ldr	x0, [sp, #40]
    8ac4:	ldr	x0, [x0, #24]
    8ac8:	mov	x5, x0
    8acc:	mov	x4, x3
    8ad0:	mov	w3, w2
    8ad4:	mov	x2, x7
    8ad8:	mov	w0, w6
    8adc:	bl	43a0 <recvfrom@plt>
    8ae0:	mov	x1, x0
    8ae4:	ldr	x0, [sp, #40]
    8ae8:	str	x1, [x0, #40]
    8aec:	ldr	x0, [sp, #40]
    8af0:	ldr	x0, [x0, #40]
    8af4:	mvn	x0, x0
    8af8:	lsr	x0, x0, #63
    8afc:	and	w0, w0, #0xff
    8b00:	ldp	x29, x30, [sp], #48
    8b04:	ret
    8b08:	stp	x29, x30, [sp, #-256]!
    8b0c:	mov	x29, sp
    8b10:	str	x0, [sp, #56]
    8b14:	str	x1, [sp, #48]
    8b18:	str	x2, [sp, #40]
    8b1c:	str	w3, [sp, #36]
    8b20:	str	x4, [sp, #24]
    8b24:	ldr	x0, [sp, #24]
    8b28:	str	xzr, [x0]
    8b2c:	add	x0, sp, #0x7c
    8b30:	mov	x1, x0
    8b34:	ldr	x0, [sp, #56]
    8b38:	bl	7174 <PySequence_Fast@plt+0x28e4>
    8b3c:	cmp	w0, #0x0
    8b40:	b.ne	8b4c <PySequence_Fast@plt+0x42bc>  // b.any
    8b44:	mov	x0, #0xffffffffffffffff    	// #-1
    8b48:	b	8bf8 <PySequence_Fast@plt+0x4368>
    8b4c:	ldr	x0, [sp, #48]
    8b50:	str	x0, [sp, #72]
    8b54:	ldr	x0, [sp, #40]
    8b58:	str	x0, [sp, #80]
    8b5c:	ldr	w0, [sp, #36]
    8b60:	str	w0, [sp, #88]
    8b64:	add	x0, sp, #0x80
    8b68:	str	x0, [sp, #104]
    8b6c:	add	x0, sp, #0x7c
    8b70:	str	x0, [sp, #96]
    8b74:	add	x0, sp, #0x48
    8b78:	mov	x3, x0
    8b7c:	adrp	x0, 8000 <PySequence_Fast@plt+0x3770>
    8b80:	add	x2, x0, #0xa50
    8b84:	mov	w1, #0x0                   	// #0
    8b88:	ldr	x0, [sp, #56]
    8b8c:	bl	5098 <PySequence_Fast@plt+0x808>
    8b90:	cmp	w0, #0x0
    8b94:	b.ge	8ba0 <PySequence_Fast@plt+0x4310>  // b.tcont
    8b98:	mov	x0, #0xffffffffffffffff    	// #-1
    8b9c:	b	8bf8 <PySequence_Fast@plt+0x4368>
    8ba0:	ldr	x0, [sp, #56]
    8ba4:	ldr	w4, [x0, #16]
    8ba8:	ldr	w0, [sp, #124]
    8bac:	mov	w1, w0
    8bb0:	ldr	x0, [sp, #56]
    8bb4:	ldr	w2, [x0, #28]
    8bb8:	add	x0, sp, #0x80
    8bbc:	mov	w3, w2
    8bc0:	mov	x2, x1
    8bc4:	mov	x1, x0
    8bc8:	mov	w0, w4
    8bcc:	bl	5730 <PySequence_Fast@plt+0xea0>
    8bd0:	mov	x1, x0
    8bd4:	ldr	x0, [sp, #24]
    8bd8:	str	x1, [x0]
    8bdc:	ldr	x0, [sp, #24]
    8be0:	ldr	x0, [x0]
    8be4:	cmp	x0, #0x0
    8be8:	b.ne	8bf4 <PySequence_Fast@plt+0x4364>  // b.any
    8bec:	mov	x0, #0xffffffffffffffff    	// #-1
    8bf0:	b	8bf8 <PySequence_Fast@plt+0x4368>
    8bf4:	ldr	x0, [sp, #112]
    8bf8:	ldp	x29, x30, [sp], #256
    8bfc:	ret
    8c00:	stp	x29, x30, [sp, #-80]!
    8c04:	mov	x29, sp
    8c08:	str	x0, [sp, #24]
    8c0c:	str	x1, [sp, #16]
    8c10:	str	xzr, [sp, #56]
    8c14:	str	xzr, [sp, #48]
    8c18:	str	xzr, [sp, #72]
    8c1c:	str	wzr, [sp, #44]
    8c20:	add	x1, sp, #0x2c
    8c24:	add	x0, sp, #0x20
    8c28:	mov	x3, x1
    8c2c:	mov	x2, x0
    8c30:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8c34:	add	x1, x0, #0x298
    8c38:	ldr	x0, [sp, #16]
    8c3c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    8c40:	cmp	w0, #0x0
    8c44:	b.ne	8c50 <PySequence_Fast@plt+0x43c0>  // b.any
    8c48:	mov	x0, #0x0                   	// #0
    8c4c:	b	8d48 <PySequence_Fast@plt+0x44b8>
    8c50:	ldr	x0, [sp, #32]
    8c54:	cmp	x0, #0x0
    8c58:	b.ge	8c80 <PySequence_Fast@plt+0x43f0>  // b.tcont
    8c5c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8c60:	ldr	x0, [x0, #3960]
    8c64:	ldr	x2, [x0]
    8c68:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8c6c:	add	x1, x0, #0x2a8
    8c70:	mov	x0, x2
    8c74:	bl	4340 <PyErr_SetString@plt>
    8c78:	mov	x0, #0x0                   	// #0
    8c7c:	b	8d48 <PySequence_Fast@plt+0x44b8>
    8c80:	ldr	x0, [sp, #32]
    8c84:	mov	x1, x0
    8c88:	mov	x0, #0x0                   	// #0
    8c8c:	bl	4280 <PyBytes_FromStringAndSize@plt>
    8c90:	str	x0, [sp, #56]
    8c94:	ldr	x0, [sp, #56]
    8c98:	cmp	x0, #0x0
    8c9c:	b.ne	8ca8 <PySequence_Fast@plt+0x4418>  // b.any
    8ca0:	mov	x0, #0x0                   	// #0
    8ca4:	b	8d48 <PySequence_Fast@plt+0x44b8>
    8ca8:	ldr	x0, [sp, #56]
    8cac:	add	x0, x0, #0x20
    8cb0:	ldr	x1, [sp, #32]
    8cb4:	ldr	w2, [sp, #44]
    8cb8:	add	x3, sp, #0x30
    8cbc:	mov	x4, x3
    8cc0:	mov	w3, w2
    8cc4:	mov	x2, x1
    8cc8:	mov	x1, x0
    8ccc:	ldr	x0, [sp, #24]
    8cd0:	bl	8b08 <PySequence_Fast@plt+0x4278>
    8cd4:	str	x0, [sp, #64]
    8cd8:	ldr	x0, [sp, #64]
    8cdc:	cmp	x0, #0x0
    8ce0:	b.lt	8d28 <PySequence_Fast@plt+0x4498>  // b.tstop
    8ce4:	ldr	x0, [sp, #32]
    8ce8:	ldr	x1, [sp, #64]
    8cec:	cmp	x1, x0
    8cf0:	b.eq	8d08 <PySequence_Fast@plt+0x4478>  // b.none
    8cf4:	add	x0, sp, #0x38
    8cf8:	ldr	x1, [sp, #64]
    8cfc:	bl	41c0 <_PyBytes_Resize@plt>
    8d00:	cmp	w0, #0x0
    8d04:	b.lt	8d30 <PySequence_Fast@plt+0x44a0>  // b.tstop
    8d08:	ldr	x0, [sp, #56]
    8d0c:	ldr	x1, [sp, #48]
    8d10:	mov	x2, x1
    8d14:	mov	x1, x0
    8d18:	mov	x0, #0x2                   	// #2
    8d1c:	bl	4850 <PyTuple_Pack@plt>
    8d20:	str	x0, [sp, #72]
    8d24:	b	8d34 <PySequence_Fast@plt+0x44a4>
    8d28:	nop
    8d2c:	b	8d34 <PySequence_Fast@plt+0x44a4>
    8d30:	nop
    8d34:	ldr	x0, [sp, #56]
    8d38:	bl	4ad0 <PySequence_Fast@plt+0x240>
    8d3c:	ldr	x0, [sp, #48]
    8d40:	bl	4ad0 <PySequence_Fast@plt+0x240>
    8d44:	ldr	x0, [sp, #72]
    8d48:	ldp	x29, x30, [sp], #80
    8d4c:	ret
    8d50:	stp	x29, x30, [sp, #-176]!
    8d54:	mov	x29, sp
    8d58:	str	x0, [sp, #40]
    8d5c:	str	x1, [sp, #32]
    8d60:	str	x2, [sp, #24]
    8d64:	str	wzr, [sp, #148]
    8d68:	str	xzr, [sp, #56]
    8d6c:	str	xzr, [sp, #48]
    8d70:	add	x2, sp, #0x94
    8d74:	add	x1, sp, #0x38
    8d78:	add	x0, sp, #0x40
    8d7c:	mov	x6, x2
    8d80:	mov	x5, x1
    8d84:	mov	x4, x0
    8d88:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    8d8c:	add	x3, x0, #0xe70
    8d90:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8d94:	add	x2, x0, #0x348
    8d98:	ldr	x1, [sp, #24]
    8d9c:	ldr	x0, [sp, #32]
    8da0:	bl	45c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    8da4:	cmp	w0, #0x0
    8da8:	b.ne	8db4 <PySequence_Fast@plt+0x4524>  // b.any
    8dac:	mov	x0, #0x0                   	// #0
    8db0:	b	8ebc <PySequence_Fast@plt+0x462c>
    8db4:	ldr	x0, [sp, #64]
    8db8:	str	x0, [sp, #168]
    8dbc:	ldr	x0, [sp, #80]
    8dc0:	str	x0, [sp, #160]
    8dc4:	ldr	x0, [sp, #56]
    8dc8:	cmp	x0, #0x0
    8dcc:	b.ge	8dfc <PySequence_Fast@plt+0x456c>  // b.tcont
    8dd0:	add	x0, sp, #0x40
    8dd4:	bl	4260 <PyBuffer_Release@plt>
    8dd8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8ddc:	ldr	x0, [x0, #3960]
    8de0:	ldr	x2, [x0]
    8de4:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8de8:	add	x1, x0, #0x360
    8dec:	mov	x0, x2
    8df0:	bl	4340 <PyErr_SetString@plt>
    8df4:	mov	x0, #0x0                   	// #0
    8df8:	b	8ebc <PySequence_Fast@plt+0x462c>
    8dfc:	ldr	x0, [sp, #56]
    8e00:	cmp	x0, #0x0
    8e04:	b.ne	8e14 <PySequence_Fast@plt+0x4584>  // b.any
    8e08:	ldr	x0, [sp, #160]
    8e0c:	str	x0, [sp, #56]
    8e10:	b	8e50 <PySequence_Fast@plt+0x45c0>
    8e14:	ldr	x0, [sp, #56]
    8e18:	ldr	x1, [sp, #160]
    8e1c:	cmp	x1, x0
    8e20:	b.ge	8e50 <PySequence_Fast@plt+0x45c0>  // b.tcont
    8e24:	add	x0, sp, #0x40
    8e28:	bl	4260 <PyBuffer_Release@plt>
    8e2c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8e30:	ldr	x0, [x0, #3960]
    8e34:	ldr	x2, [x0]
    8e38:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8e3c:	add	x1, x0, #0x388
    8e40:	mov	x0, x2
    8e44:	bl	4340 <PyErr_SetString@plt>
    8e48:	mov	x0, #0x0                   	// #0
    8e4c:	b	8ebc <PySequence_Fast@plt+0x462c>
    8e50:	ldr	x0, [sp, #56]
    8e54:	ldr	w1, [sp, #148]
    8e58:	add	x2, sp, #0x30
    8e5c:	mov	x4, x2
    8e60:	mov	w3, w1
    8e64:	mov	x2, x0
    8e68:	ldr	x1, [sp, #168]
    8e6c:	ldr	x0, [sp, #40]
    8e70:	bl	8b08 <PySequence_Fast@plt+0x4278>
    8e74:	str	x0, [sp, #152]
    8e78:	ldr	x0, [sp, #152]
    8e7c:	cmp	x0, #0x0
    8e80:	b.ge	8e9c <PySequence_Fast@plt+0x460c>  // b.tcont
    8e84:	add	x0, sp, #0x40
    8e88:	bl	4260 <PyBuffer_Release@plt>
    8e8c:	ldr	x0, [sp, #48]
    8e90:	bl	4ad0 <PySequence_Fast@plt+0x240>
    8e94:	mov	x0, #0x0                   	// #0
    8e98:	b	8ebc <PySequence_Fast@plt+0x462c>
    8e9c:	add	x0, sp, #0x40
    8ea0:	bl	4260 <PyBuffer_Release@plt>
    8ea4:	ldr	x0, [sp, #48]
    8ea8:	mov	x2, x0
    8eac:	ldr	x1, [sp, #152]
    8eb0:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8eb4:	add	x0, x0, #0x3b8
    8eb8:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    8ebc:	ldp	x29, x30, [sp], #176
    8ec0:	ret
    8ec4:	stp	x29, x30, [sp, #-48]!
    8ec8:	mov	x29, sp
    8ecc:	str	x0, [sp, #24]
    8ed0:	str	x1, [sp, #16]
    8ed4:	ldr	x0, [sp, #16]
    8ed8:	str	x0, [sp, #40]
    8edc:	ldr	x0, [sp, #24]
    8ee0:	ldr	w3, [x0, #16]
    8ee4:	ldr	x0, [sp, #40]
    8ee8:	ldr	x1, [x0]
    8eec:	ldr	x0, [sp, #40]
    8ef0:	ldr	w0, [x0, #8]
    8ef4:	mov	w2, w0
    8ef8:	mov	w0, w3
    8efc:	bl	4130 <recvmsg@plt>
    8f00:	mov	x1, x0
    8f04:	ldr	x0, [sp, #40]
    8f08:	str	x1, [x0, #16]
    8f0c:	ldr	x0, [sp, #40]
    8f10:	ldr	x0, [x0, #16]
    8f14:	mvn	x0, x0
    8f18:	lsr	x0, x0, #63
    8f1c:	and	w0, w0, #0xff
    8f20:	ldp	x29, x30, [sp], #48
    8f24:	ret
    8f28:	stp	x29, x30, [sp, #-384]!
    8f2c:	mov	x29, sp
    8f30:	stp	x19, x20, [sp, #16]
    8f34:	str	x0, [sp, #72]
    8f38:	str	x1, [sp, #64]
    8f3c:	str	w2, [sp, #60]
    8f40:	str	w3, [sp, #56]
    8f44:	str	x4, [sp, #48]
    8f48:	str	x5, [sp, #40]
    8f4c:	str	x6, [sp, #32]
    8f50:	stp	xzr, xzr, [sp, #112]
    8f54:	stp	xzr, xzr, [sp, #128]
    8f58:	stp	xzr, xzr, [sp, #144]
    8f5c:	str	xzr, [sp, #160]
    8f60:	str	xzr, [sp, #376]
    8f64:	str	xzr, [sp, #368]
    8f68:	str	xzr, [sp, #360]
    8f6c:	str	xzr, [sp, #104]
    8f70:	add	x0, sp, #0xac
    8f74:	mov	x1, x0
    8f78:	ldr	x0, [sp, #72]
    8f7c:	bl	7174 <PySequence_Fast@plt+0x28e4>
    8f80:	cmp	w0, #0x0
    8f84:	b.ne	8f90 <PySequence_Fast@plt+0x4700>  // b.any
    8f88:	mov	x0, #0x0                   	// #0
    8f8c:	b	93b8 <PySequence_Fast@plt+0x4b28>
    8f90:	ldr	w0, [sp, #172]
    8f94:	mov	w1, w0
    8f98:	add	x0, sp, #0xb0
    8f9c:	mov	x2, x1
    8fa0:	mov	w1, #0x0                   	// #0
    8fa4:	bl	43e0 <memset@plt>
    8fa8:	strh	wzr, [sp, #176]
    8fac:	ldr	x0, [sp, #48]
    8fb0:	cmp	x0, #0x0
    8fb4:	b.lt	8fc8 <PySequence_Fast@plt+0x4738>  // b.tstop
    8fb8:	ldr	x1, [sp, #48]
    8fbc:	mov	x0, #0x7fffffff            	// #2147483647
    8fc0:	cmp	x1, x0
    8fc4:	b.le	8fec <PySequence_Fast@plt+0x475c>
    8fc8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    8fcc:	ldr	x0, [x0, #3960]
    8fd0:	ldr	x2, [x0]
    8fd4:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    8fd8:	add	x1, x0, #0x460
    8fdc:	mov	x0, x2
    8fe0:	bl	4340 <PyErr_SetString@plt>
    8fe4:	mov	x0, #0x0                   	// #0
    8fe8:	b	93b8 <PySequence_Fast@plt+0x4b28>
    8fec:	ldr	x0, [sp, #48]
    8ff0:	cmp	x0, #0x0
    8ff4:	b.le	9018 <PySequence_Fast@plt+0x4788>
    8ff8:	ldr	x0, [sp, #48]
    8ffc:	bl	4810 <PyMem_Malloc@plt>
    9000:	str	x0, [sp, #360]
    9004:	ldr	x0, [sp, #360]
    9008:	cmp	x0, #0x0
    900c:	b.ne	9018 <PySequence_Fast@plt+0x4788>  // b.any
    9010:	bl	42f0 <PyErr_NoMemory@plt>
    9014:	b	93b8 <PySequence_Fast@plt+0x4b28>
    9018:	add	x0, sp, #0xb0
    901c:	str	x0, [sp, #112]
    9020:	ldr	w0, [sp, #172]
    9024:	str	w0, [sp, #120]
    9028:	ldr	x0, [sp, #64]
    902c:	str	x0, [sp, #128]
    9030:	ldrsw	x0, [sp, #60]
    9034:	str	x0, [sp, #136]
    9038:	ldr	x0, [sp, #360]
    903c:	str	x0, [sp, #144]
    9040:	ldr	x0, [sp, #48]
    9044:	str	x0, [sp, #152]
    9048:	add	x0, sp, #0x70
    904c:	str	x0, [sp, #80]
    9050:	ldr	w0, [sp, #56]
    9054:	str	w0, [sp, #88]
    9058:	add	x0, sp, #0x50
    905c:	mov	x3, x0
    9060:	adrp	x0, 8000 <PySequence_Fast@plt+0x3770>
    9064:	add	x2, x0, #0xec4
    9068:	mov	w1, #0x0                   	// #0
    906c:	ldr	x0, [sp, #72]
    9070:	bl	5098 <PySequence_Fast@plt+0x808>
    9074:	cmp	w0, #0x0
    9078:	b.lt	9280 <PySequence_Fast@plt+0x49f0>  // b.tstop
    907c:	mov	x0, #0x0                   	// #0
    9080:	bl	4100 <PyList_New@plt>
    9084:	str	x0, [sp, #376]
    9088:	ldr	x0, [sp, #376]
    908c:	cmp	x0, #0x0
    9090:	b.eq	929c <PySequence_Fast@plt+0x4a0c>  // b.none
    9094:	ldr	x0, [sp, #152]
    9098:	cmp	x0, #0x0
    909c:	b.eq	90bc <PySequence_Fast@plt+0x482c>  // b.none
    90a0:	ldr	x0, [sp, #152]
    90a4:	cmp	x0, #0xf
    90a8:	b.ls	90b4 <PySequence_Fast@plt+0x4824>  // b.plast
    90ac:	ldr	x0, [sp, #144]
    90b0:	b	90c0 <PySequence_Fast@plt+0x4830>
    90b4:	mov	x0, #0x0                   	// #0
    90b8:	b	90c0 <PySequence_Fast@plt+0x4830>
    90bc:	mov	x0, #0x0                   	// #0
    90c0:	str	x0, [sp, #352]
    90c4:	b	91e0 <PySequence_Fast@plt+0x4950>
    90c8:	add	x1, sp, #0x68
    90cc:	add	x0, sp, #0x70
    90d0:	mov	x2, x1
    90d4:	ldr	x1, [sp, #352]
    90d8:	bl	7544 <PySequence_Fast@plt+0x2cb4>
    90dc:	str	w0, [sp, #332]
    90e0:	ldr	w0, [sp, #332]
    90e4:	cmp	w0, #0x0
    90e8:	b.eq	9114 <PySequence_Fast@plt+0x4884>  // b.none
    90ec:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    90f0:	ldr	x0, [x0, #4056]
    90f4:	ldr	x3, [x0]
    90f8:	mov	x2, #0x1                   	// #1
    90fc:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    9100:	add	x1, x0, #0x488
    9104:	mov	x0, x3
    9108:	bl	42c0 <PyErr_WarnEx@plt>
    910c:	cmn	w0, #0x1
    9110:	b.eq	92a4 <PySequence_Fast@plt+0x4a14>  // b.none
    9114:	ldr	w0, [sp, #332]
    9118:	cmp	w0, #0x0
    911c:	b.lt	91f0 <PySequence_Fast@plt+0x4960>  // b.tstop
    9120:	ldr	x0, [sp, #104]
    9124:	cmp	x0, #0x0
    9128:	b.ge	914c <PySequence_Fast@plt+0x48bc>  // b.tcont
    912c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    9130:	ldr	x0, [x0, #3984]
    9134:	ldr	x2, [x0]
    9138:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    913c:	add	x1, x0, #0x4c8
    9140:	mov	x0, x2
    9144:	bl	4340 <PyErr_SetString@plt>
    9148:	b	92c0 <PySequence_Fast@plt+0x4a30>
    914c:	ldr	x0, [sp, #352]
    9150:	add	x0, x0, #0x10
    9154:	ldr	x1, [sp, #104]
    9158:	bl	4280 <PyBytes_FromStringAndSize@plt>
    915c:	str	x0, [sp, #320]
    9160:	ldr	x0, [sp, #352]
    9164:	ldr	w1, [x0, #8]
    9168:	ldr	x0, [sp, #352]
    916c:	ldr	w0, [x0, #12]
    9170:	ldr	x3, [sp, #320]
    9174:	mov	w2, w0
    9178:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    917c:	add	x0, x0, #0x4e8
    9180:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    9184:	str	x0, [sp, #312]
    9188:	ldr	x0, [sp, #312]
    918c:	cmp	x0, #0x0
    9190:	b.eq	92ac <PySequence_Fast@plt+0x4a1c>  // b.none
    9194:	ldr	x1, [sp, #312]
    9198:	ldr	x0, [sp, #376]
    919c:	bl	44e0 <PyList_Append@plt>
    91a0:	str	w0, [sp, #308]
    91a4:	ldr	x2, [sp, #312]
    91a8:	mov	w1, #0xf0e                 	// #3854
    91ac:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    91b0:	add	x0, x0, #0xba0
    91b4:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    91b8:	ldr	w0, [sp, #308]
    91bc:	cmp	w0, #0x0
    91c0:	b.ne	92b4 <PySequence_Fast@plt+0x4a24>  // b.any
    91c4:	ldr	w0, [sp, #332]
    91c8:	cmp	w0, #0x0
    91cc:	b.ne	91f8 <PySequence_Fast@plt+0x4968>  // b.any
    91d0:	add	x0, sp, #0x70
    91d4:	ldr	x1, [sp, #352]
    91d8:	bl	41a0 <__cmsg_nxthdr@plt>
    91dc:	str	x0, [sp, #352]
    91e0:	ldr	x0, [sp, #352]
    91e4:	cmp	x0, #0x0
    91e8:	b.ne	90c8 <PySequence_Fast@plt+0x4838>  // b.any
    91ec:	b	91fc <PySequence_Fast@plt+0x496c>
    91f0:	nop
    91f4:	b	91fc <PySequence_Fast@plt+0x496c>
    91f8:	nop
    91fc:	ldr	x0, [sp, #96]
    9200:	ldr	x2, [sp, #40]
    9204:	ldr	x1, [sp, #32]
    9208:	blr	x2
    920c:	mov	x20, x0
    9210:	ldr	w19, [sp, #160]
    9214:	ldr	x0, [sp, #72]
    9218:	ldr	w4, [x0, #16]
    921c:	ldr	w1, [sp, #120]
    9220:	ldr	w0, [sp, #172]
    9224:	cmp	w1, w0
    9228:	csel	w0, w1, w0, ls  // ls = plast
    922c:	mov	w1, w0
    9230:	ldr	x0, [sp, #72]
    9234:	ldr	w2, [x0, #28]
    9238:	add	x0, sp, #0xb0
    923c:	mov	w3, w2
    9240:	mov	x2, x1
    9244:	mov	x1, x0
    9248:	mov	w0, w4
    924c:	bl	5730 <PySequence_Fast@plt+0xea0>
    9250:	mov	x4, x0
    9254:	mov	w3, w19
    9258:	ldr	x2, [sp, #376]
    925c:	mov	x1, x20
    9260:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    9264:	add	x0, x0, #0x4f0
    9268:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    926c:	str	x0, [sp, #368]
    9270:	ldr	x0, [sp, #368]
    9274:	cmp	x0, #0x0
    9278:	b.eq	92bc <PySequence_Fast@plt+0x4a2c>  // b.none
    927c:	b	9284 <PySequence_Fast@plt+0x49f4>
    9280:	nop
    9284:	ldr	x0, [sp, #376]
    9288:	bl	4ad0 <PySequence_Fast@plt+0x240>
    928c:	ldr	x0, [sp, #360]
    9290:	bl	4220 <PyMem_Free@plt>
    9294:	ldr	x0, [sp, #368]
    9298:	b	93b8 <PySequence_Fast@plt+0x4b28>
    929c:	nop
    92a0:	b	92c0 <PySequence_Fast@plt+0x4a30>
    92a4:	nop
    92a8:	b	92c0 <PySequence_Fast@plt+0x4a30>
    92ac:	nop
    92b0:	b	92c0 <PySequence_Fast@plt+0x4a30>
    92b4:	nop
    92b8:	b	92c0 <PySequence_Fast@plt+0x4a30>
    92bc:	nop
    92c0:	ldr	x0, [sp, #152]
    92c4:	cmp	x0, #0x0
    92c8:	b.eq	92e8 <PySequence_Fast@plt+0x4a58>  // b.none
    92cc:	ldr	x0, [sp, #152]
    92d0:	cmp	x0, #0xf
    92d4:	b.ls	92e0 <PySequence_Fast@plt+0x4a50>  // b.plast
    92d8:	ldr	x0, [sp, #144]
    92dc:	b	92ec <PySequence_Fast@plt+0x4a5c>
    92e0:	mov	x0, #0x0                   	// #0
    92e4:	b	92ec <PySequence_Fast@plt+0x4a5c>
    92e8:	mov	x0, #0x0                   	// #0
    92ec:	str	x0, [sp, #352]
    92f0:	b	9398 <PySequence_Fast@plt+0x4b08>
    92f4:	add	x1, sp, #0x68
    92f8:	add	x0, sp, #0x70
    92fc:	mov	x2, x1
    9300:	ldr	x1, [sp, #352]
    9304:	bl	7544 <PySequence_Fast@plt+0x2cb4>
    9308:	str	w0, [sp, #332]
    930c:	ldr	w0, [sp, #332]
    9310:	cmp	w0, #0x0
    9314:	b.lt	93a8 <PySequence_Fast@plt+0x4b18>  // b.tstop
    9318:	ldr	x0, [sp, #352]
    931c:	ldr	w0, [x0, #8]
    9320:	cmp	w0, #0x1
    9324:	b.ne	937c <PySequence_Fast@plt+0x4aec>  // b.any
    9328:	ldr	x0, [sp, #352]
    932c:	ldr	w0, [x0, #12]
    9330:	cmp	w0, #0x1
    9334:	b.ne	937c <PySequence_Fast@plt+0x4aec>  // b.any
    9338:	ldr	x0, [sp, #104]
    933c:	lsr	x0, x0, #2
    9340:	str	x0, [sp, #344]
    9344:	ldr	x0, [sp, #352]
    9348:	add	x0, x0, #0x10
    934c:	str	x0, [sp, #336]
    9350:	b	9368 <PySequence_Fast@plt+0x4ad8>
    9354:	ldr	x0, [sp, #336]
    9358:	add	x1, x0, #0x4
    935c:	str	x1, [sp, #336]
    9360:	ldr	w0, [x0]
    9364:	bl	4500 <close@plt>
    9368:	ldr	x0, [sp, #344]
    936c:	sub	x1, x0, #0x1
    9370:	str	x1, [sp, #344]
    9374:	cmp	x0, #0x0
    9378:	b.ne	9354 <PySequence_Fast@plt+0x4ac4>  // b.any
    937c:	ldr	w0, [sp, #332]
    9380:	cmp	w0, #0x0
    9384:	b.ne	93b0 <PySequence_Fast@plt+0x4b20>  // b.any
    9388:	add	x0, sp, #0x70
    938c:	ldr	x1, [sp, #352]
    9390:	bl	41a0 <__cmsg_nxthdr@plt>
    9394:	str	x0, [sp, #352]
    9398:	ldr	x0, [sp, #352]
    939c:	cmp	x0, #0x0
    93a0:	b.ne	92f4 <PySequence_Fast@plt+0x4a64>  // b.any
    93a4:	b	9284 <PySequence_Fast@plt+0x49f4>
    93a8:	nop
    93ac:	b	9284 <PySequence_Fast@plt+0x49f4>
    93b0:	nop
    93b4:	b	9284 <PySequence_Fast@plt+0x49f4>
    93b8:	ldp	x19, x20, [sp, #16]
    93bc:	ldp	x29, x30, [sp], #384
    93c0:	ret
    93c4:	stp	x29, x30, [sp, #-48]!
    93c8:	mov	x29, sp
    93cc:	str	x0, [sp, #24]
    93d0:	str	x1, [sp, #16]
    93d4:	ldr	x0, [sp, #16]
    93d8:	str	x0, [sp, #40]
    93dc:	ldr	x0, [sp, #40]
    93e0:	ldr	x0, [x0]
    93e4:	ldr	x0, [x0, #16]
    93e8:	ldr	x1, [sp, #24]
    93ec:	cmp	x1, x0
    93f0:	b.ge	9400 <PySequence_Fast@plt+0x4b70>  // b.tcont
    93f4:	ldr	x1, [sp, #24]
    93f8:	ldr	x0, [sp, #40]
    93fc:	bl	41c0 <_PyBytes_Resize@plt>
    9400:	ldr	x0, [sp, #40]
    9404:	ldr	x0, [x0]
    9408:	bl	4aa4 <PySequence_Fast@plt+0x214>
    940c:	ldr	x0, [sp, #40]
    9410:	ldr	x0, [x0]
    9414:	ldp	x29, x30, [sp], #48
    9418:	ret
    941c:	stp	x29, x30, [sp, #-96]!
    9420:	mov	x29, sp
    9424:	str	x0, [sp, #24]
    9428:	str	x1, [sp, #16]
    942c:	str	xzr, [sp, #72]
    9430:	str	wzr, [sp, #68]
    9434:	str	xzr, [sp, #40]
    9438:	str	xzr, [sp, #88]
    943c:	add	x2, sp, #0x44
    9440:	add	x1, sp, #0x48
    9444:	add	x0, sp, #0x50
    9448:	mov	x4, x2
    944c:	mov	x3, x1
    9450:	mov	x2, x0
    9454:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    9458:	add	x1, x0, #0x4f8
    945c:	ldr	x0, [sp, #16]
    9460:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    9464:	cmp	w0, #0x0
    9468:	b.ne	9474 <PySequence_Fast@plt+0x4be4>  // b.any
    946c:	mov	x0, #0x0                   	// #0
    9470:	b	9520 <PySequence_Fast@plt+0x4c90>
    9474:	ldr	x0, [sp, #80]
    9478:	cmp	x0, #0x0
    947c:	b.ge	94a4 <PySequence_Fast@plt+0x4c14>  // b.tcont
    9480:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    9484:	ldr	x0, [x0, #3960]
    9488:	ldr	x2, [x0]
    948c:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    9490:	add	x1, x0, #0x508
    9494:	mov	x0, x2
    9498:	bl	4340 <PyErr_SetString@plt>
    949c:	mov	x0, #0x0                   	// #0
    94a0:	b	9520 <PySequence_Fast@plt+0x4c90>
    94a4:	ldr	x0, [sp, #80]
    94a8:	mov	x1, x0
    94ac:	mov	x0, #0x0                   	// #0
    94b0:	bl	4280 <PyBytes_FromStringAndSize@plt>
    94b4:	str	x0, [sp, #40]
    94b8:	ldr	x0, [sp, #40]
    94bc:	cmp	x0, #0x0
    94c0:	b.ne	94cc <PySequence_Fast@plt+0x4c3c>  // b.any
    94c4:	mov	x0, #0x0                   	// #0
    94c8:	b	9520 <PySequence_Fast@plt+0x4c90>
    94cc:	ldr	x0, [sp, #40]
    94d0:	add	x0, x0, #0x20
    94d4:	str	x0, [sp, #48]
    94d8:	ldr	x0, [sp, #80]
    94dc:	str	x0, [sp, #56]
    94e0:	ldr	w2, [sp, #68]
    94e4:	ldr	x3, [sp, #72]
    94e8:	add	x0, sp, #0x28
    94ec:	add	x1, sp, #0x30
    94f0:	mov	x6, x0
    94f4:	adrp	x0, 9000 <PySequence_Fast@plt+0x4770>
    94f8:	add	x5, x0, #0x3c4
    94fc:	mov	x4, x3
    9500:	mov	w3, w2
    9504:	mov	w2, #0x1                   	// #1
    9508:	ldr	x0, [sp, #24]
    950c:	bl	8f28 <PySequence_Fast@plt+0x4698>
    9510:	str	x0, [sp, #88]
    9514:	ldr	x0, [sp, #40]
    9518:	bl	4ad0 <PySequence_Fast@plt+0x240>
    951c:	ldr	x0, [sp, #88]
    9520:	ldp	x29, x30, [sp], #96
    9524:	ret
    9528:	stp	x29, x30, [sp, #-32]!
    952c:	mov	x29, sp
    9530:	str	x0, [sp, #24]
    9534:	str	x1, [sp, #16]
    9538:	ldr	x0, [sp, #24]
    953c:	bl	4450 <PyLong_FromSsize_t@plt>
    9540:	ldp	x29, x30, [sp], #32
    9544:	ret
    9548:	stp	x29, x30, [sp, #-112]!
    954c:	mov	x29, sp
    9550:	str	x0, [sp, #24]
    9554:	str	x1, [sp, #16]
    9558:	str	xzr, [sp, #48]
    955c:	str	wzr, [sp, #44]
    9560:	str	xzr, [sp, #104]
    9564:	str	xzr, [sp, #88]
    9568:	str	xzr, [sp, #80]
    956c:	str	xzr, [sp, #72]
    9570:	add	x2, sp, #0x2c
    9574:	add	x1, sp, #0x30
    9578:	add	x0, sp, #0x20
    957c:	mov	x4, x2
    9580:	mov	x3, x1
    9584:	mov	x2, x0
    9588:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    958c:	add	x1, x0, #0xaf8
    9590:	ldr	x0, [sp, #16]
    9594:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    9598:	cmp	w0, #0x0
    959c:	b.ne	95a8 <PySequence_Fast@plt+0x4d18>  // b.any
    95a0:	mov	x0, #0x0                   	// #0
    95a4:	b	9864 <PySequence_Fast@plt+0x4fd4>
    95a8:	ldr	x2, [sp, #32]
    95ac:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    95b0:	add	x1, x0, #0xb10
    95b4:	mov	x0, x2
    95b8:	bl	4890 <PySequence_Fast@plt>
    95bc:	str	x0, [sp, #64]
    95c0:	ldr	x0, [sp, #64]
    95c4:	cmp	x0, #0x0
    95c8:	b.ne	95d4 <PySequence_Fast@plt+0x4d44>  // b.any
    95cc:	mov	x0, #0x0                   	// #0
    95d0:	b	9864 <PySequence_Fast@plt+0x4fd4>
    95d4:	ldr	x0, [sp, #64]
    95d8:	ldr	x0, [x0, #16]
    95dc:	str	x0, [sp, #56]
    95e0:	ldr	x1, [sp, #56]
    95e4:	mov	x0, #0x7fffffff            	// #2147483647
    95e8:	cmp	x1, x0
    95ec:	b.le	9610 <PySequence_Fast@plt+0x4d80>
    95f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    95f4:	ldr	x0, [x0, #3984]
    95f8:	ldr	x2, [x0]
    95fc:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    9600:	add	x1, x0, #0xb40
    9604:	mov	x0, x2
    9608:	bl	4340 <PyErr_SetString@plt>
    960c:	b	97f4 <PySequence_Fast@plt+0x4f64>
    9610:	ldr	x0, [sp, #56]
    9614:	cmp	x0, #0x0
    9618:	b.le	97a4 <PySequence_Fast@plt+0x4f14>
    961c:	ldr	x1, [sp, #56]
    9620:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    9624:	cmp	x1, x0
    9628:	b.hi	963c <PySequence_Fast@plt+0x4dac>  // b.pmore
    962c:	ldr	x0, [sp, #56]
    9630:	lsl	x0, x0, #4
    9634:	bl	4810 <PyMem_Malloc@plt>
    9638:	b	9640 <PySequence_Fast@plt+0x4db0>
    963c:	mov	x0, #0x0                   	// #0
    9640:	str	x0, [sp, #104]
    9644:	ldr	x0, [sp, #104]
    9648:	cmp	x0, #0x0
    964c:	b.eq	9694 <PySequence_Fast@plt+0x4e04>  // b.none
    9650:	ldr	x1, [sp, #56]
    9654:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
    9658:	movk	x0, #0x199, lsl #48
    965c:	cmp	x1, x0
    9660:	b.hi	9680 <PySequence_Fast@plt+0x4df0>  // b.pmore
    9664:	ldr	x1, [sp, #56]
    9668:	mov	x0, x1
    966c:	lsl	x0, x0, #2
    9670:	add	x0, x0, x1
    9674:	lsl	x0, x0, #4
    9678:	bl	4810 <PyMem_Malloc@plt>
    967c:	b	9684 <PySequence_Fast@plt+0x4df4>
    9680:	mov	x0, #0x0                   	// #0
    9684:	str	x0, [sp, #80]
    9688:	ldr	x0, [sp, #80]
    968c:	cmp	x0, #0x0
    9690:	b.ne	97a4 <PySequence_Fast@plt+0x4f14>  // b.any
    9694:	bl	42f0 <PyErr_NoMemory@plt>
    9698:	b	97f4 <PySequence_Fast@plt+0x4f64>
    969c:	ldr	x0, [sp, #64]
    96a0:	ldr	x0, [x0, #8]
    96a4:	ldr	x0, [x0, #168]
    96a8:	and	x0, x0, #0x2000000
    96ac:	cmp	x0, #0x0
    96b0:	b.eq	96d0 <PySequence_Fast@plt+0x4e40>  // b.none
    96b4:	ldr	x0, [sp, #64]
    96b8:	ldr	x1, [x0, #24]
    96bc:	ldr	x0, [sp, #88]
    96c0:	lsl	x0, x0, #3
    96c4:	add	x0, x1, x0
    96c8:	ldr	x3, [x0]
    96cc:	b	96e8 <PySequence_Fast@plt+0x4e58>
    96d0:	ldr	x1, [sp, #64]
    96d4:	ldr	x0, [sp, #88]
    96d8:	add	x0, x0, #0x2
    96dc:	lsl	x0, x0, #3
    96e0:	add	x0, x1, x0
    96e4:	ldr	x3, [x0, #8]
    96e8:	ldr	x1, [sp, #88]
    96ec:	mov	x0, x1
    96f0:	lsl	x0, x0, #2
    96f4:	add	x0, x0, x1
    96f8:	lsl	x0, x0, #4
    96fc:	mov	x1, x0
    9700:	ldr	x0, [sp, #80]
    9704:	add	x0, x0, x1
    9708:	mov	x2, x0
    970c:	adrp	x0, 11000 <PyInit__socket@@Base+0x391c>
    9710:	add	x1, x0, #0xb68
    9714:	mov	x0, x3
    9718:	bl	4470 <_PyArg_Parse_SizeT@plt>
    971c:	cmp	w0, #0x0
    9720:	b.eq	97f0 <PySequence_Fast@plt+0x4f60>  // b.none
    9724:	ldr	x1, [sp, #88]
    9728:	mov	x0, x1
    972c:	lsl	x0, x0, #2
    9730:	add	x0, x0, x1
    9734:	lsl	x0, x0, #4
    9738:	mov	x1, x0
    973c:	ldr	x0, [sp, #80]
    9740:	add	x1, x0, x1
    9744:	ldr	x0, [sp, #88]
    9748:	lsl	x0, x0, #4
    974c:	ldr	x2, [sp, #104]
    9750:	add	x0, x2, x0
    9754:	ldr	x1, [x1]
    9758:	str	x1, [x0]
    975c:	ldr	x1, [sp, #88]
    9760:	mov	x0, x1
    9764:	lsl	x0, x0, #2
    9768:	add	x0, x0, x1
    976c:	lsl	x0, x0, #4
    9770:	mov	x1, x0
    9774:	ldr	x0, [sp, #80]
    9778:	add	x0, x0, x1
    977c:	ldr	x2, [x0, #16]
    9780:	ldr	x0, [sp, #88]
    9784:	lsl	x0, x0, #4
    9788:	ldr	x1, [sp, #104]
    978c:	add	x0, x1, x0
    9790:	mov	x1, x2
    9794:	str	x1, [x0, #8]
    9798:	ldr	x0, [sp, #88]
    979c:	add	x0, x0, #0x1
    97a0:	str	x0, [sp, #88]
    97a4:	ldr	x1, [sp, #88]
    97a8:	ldr	x0, [sp, #56]
    97ac:	cmp	x1, x0
    97b0:	b.lt	969c <PySequence_Fast@plt+0x4e0c>  // b.tstop
    97b4:	ldr	x0, [sp, #56]
    97b8:	mov	w7, w0
    97bc:	ldr	w1, [sp, #44]
    97c0:	ldr	x2, [sp, #48]
    97c4:	mov	x6, #0x0                   	// #0
    97c8:	adrp	x0, 9000 <PySequence_Fast@plt+0x4770>
    97cc:	add	x5, x0, #0x528
    97d0:	mov	x4, x2
    97d4:	mov	w3, w1
    97d8:	mov	w2, w7
    97dc:	ldr	x1, [sp, #104]
    97e0:	ldr	x0, [sp, #24]
    97e4:	bl	8f28 <PySequence_Fast@plt+0x4698>
    97e8:	str	x0, [sp, #72]
    97ec:	b	97f4 <PySequence_Fast@plt+0x4f64>
    97f0:	nop
    97f4:	str	xzr, [sp, #96]
    97f8:	b	982c <PySequence_Fast@plt+0x4f9c>
    97fc:	ldr	x1, [sp, #96]
    9800:	mov	x0, x1
    9804:	lsl	x0, x0, #2
    9808:	add	x0, x0, x1
    980c:	lsl	x0, x0, #4
    9810:	mov	x1, x0
    9814:	ldr	x0, [sp, #80]
    9818:	add	x0, x0, x1
    981c:	bl	4260 <PyBuffer_Release@plt>
    9820:	ldr	x0, [sp, #96]
    9824:	add	x0, x0, #0x1
    9828:	str	x0, [sp, #96]
    982c:	ldr	x1, [sp, #96]
    9830:	ldr	x0, [sp, #88]
    9834:	cmp	x1, x0
    9838:	b.lt	97fc <PySequence_Fast@plt+0x4f6c>  // b.tstop
    983c:	ldr	x0, [sp, #80]
    9840:	bl	4220 <PyMem_Free@plt>
    9844:	ldr	x0, [sp, #104]
    9848:	bl	4220 <PyMem_Free@plt>
    984c:	ldr	x2, [sp, #64]
    9850:	mov	w1, #0xfc0                 	// #4032
    9854:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    9858:	add	x0, x0, #0xba0
    985c:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    9860:	ldr	x0, [sp, #72]
    9864:	ldp	x29, x30, [sp], #112
    9868:	ret
    986c:	stp	x29, x30, [sp, #-48]!
    9870:	mov	x29, sp
    9874:	str	x0, [sp, #24]
    9878:	str	x1, [sp, #16]
    987c:	ldr	x0, [sp, #16]
    9880:	str	x0, [sp, #40]
    9884:	ldr	x0, [sp, #24]
    9888:	ldr	w4, [x0, #16]
    988c:	ldr	x0, [sp, #40]
    9890:	ldr	x1, [x0]
    9894:	ldr	x0, [sp, #40]
    9898:	ldr	x0, [x0, #8]
    989c:	mov	x2, x0
    98a0:	ldr	x0, [sp, #40]
    98a4:	ldr	w0, [x0, #16]
    98a8:	mov	w3, w0
    98ac:	mov	w0, w4
    98b0:	bl	45d0 <send@plt>
    98b4:	mov	x1, x0
    98b8:	ldr	x0, [sp, #40]
    98bc:	str	x1, [x0, #24]
    98c0:	ldr	x0, [sp, #40]
    98c4:	ldr	x0, [x0, #24]
    98c8:	mvn	x0, x0
    98cc:	lsr	x0, x0, #63
    98d0:	and	w0, w0, #0xff
    98d4:	ldp	x29, x30, [sp], #48
    98d8:	ret
    98dc:	stp	x29, x30, [sp, #-160]!
    98e0:	mov	x29, sp
    98e4:	str	x0, [sp, #24]
    98e8:	str	x1, [sp, #16]
    98ec:	str	wzr, [sp, #156]
    98f0:	add	x1, sp, #0x9c
    98f4:	add	x0, sp, #0x48
    98f8:	mov	x3, x1
    98fc:	mov	x2, x0
    9900:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9904:	add	x1, x0, #0x2c0
    9908:	ldr	x0, [sp, #16]
    990c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    9910:	cmp	w0, #0x0
    9914:	b.ne	9920 <PySequence_Fast@plt+0x5090>  // b.any
    9918:	mov	x0, #0x0                   	// #0
    991c:	b	997c <PySequence_Fast@plt+0x50ec>
    9920:	ldr	x0, [sp, #72]
    9924:	str	x0, [sp, #40]
    9928:	ldr	x0, [sp, #88]
    992c:	str	x0, [sp, #48]
    9930:	ldr	w0, [sp, #156]
    9934:	str	w0, [sp, #56]
    9938:	add	x0, sp, #0x28
    993c:	mov	x3, x0
    9940:	adrp	x0, 9000 <PySequence_Fast@plt+0x4770>
    9944:	add	x2, x0, #0x86c
    9948:	mov	w1, #0x1                   	// #1
    994c:	ldr	x0, [sp, #24]
    9950:	bl	5098 <PySequence_Fast@plt+0x808>
    9954:	cmp	w0, #0x0
    9958:	b.ge	996c <PySequence_Fast@plt+0x50dc>  // b.tcont
    995c:	add	x0, sp, #0x48
    9960:	bl	4260 <PyBuffer_Release@plt>
    9964:	mov	x0, #0x0                   	// #0
    9968:	b	997c <PySequence_Fast@plt+0x50ec>
    996c:	add	x0, sp, #0x48
    9970:	bl	4260 <PyBuffer_Release@plt>
    9974:	ldr	x0, [sp, #64]
    9978:	bl	4450 <PyLong_FromSsize_t@plt>
    997c:	ldp	x29, x30, [sp], #160
    9980:	ret
    9984:	stp	x29, x30, [sp, #-224]!
    9988:	mov	x29, sp
    998c:	str	x0, [sp, #24]
    9990:	str	x1, [sp, #16]
    9994:	str	wzr, [sp, #156]
    9998:	ldr	x0, [sp, #24]
    999c:	ldr	x0, [x0, #40]
    99a0:	cmp	x0, #0x0
    99a4:	cset	w0, gt
    99a8:	and	w0, w0, #0xff
    99ac:	str	w0, [sp, #172]
    99b0:	ldr	x0, [sp, #24]
    99b4:	ldr	x0, [x0, #40]
    99b8:	str	x0, [sp, #200]
    99bc:	str	xzr, [sp, #192]
    99c0:	str	wzr, [sp, #188]
    99c4:	str	xzr, [sp, #176]
    99c8:	add	x1, sp, #0x9c
    99cc:	add	x0, sp, #0x48
    99d0:	mov	x3, x1
    99d4:	mov	x2, x0
    99d8:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    99dc:	add	x1, x0, #0x3a8
    99e0:	ldr	x0, [sp, #16]
    99e4:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    99e8:	cmp	w0, #0x0
    99ec:	b.ne	99f8 <PySequence_Fast@plt+0x5168>  // b.any
    99f0:	mov	x0, #0x0                   	// #0
    99f4:	b	9b48 <PySequence_Fast@plt+0x52b8>
    99f8:	ldr	x0, [sp, #72]
    99fc:	str	x0, [sp, #216]
    9a00:	ldr	x0, [sp, #88]
    9a04:	str	x0, [sp, #208]
    9a08:	ldr	w0, [sp, #172]
    9a0c:	cmp	w0, #0x0
    9a10:	b.eq	9a84 <PySequence_Fast@plt+0x51f4>  // b.none
    9a14:	ldr	w0, [sp, #188]
    9a18:	cmp	w0, #0x0
    9a1c:	b.eq	9a38 <PySequence_Fast@plt+0x51a8>  // b.none
    9a20:	bl	4840 <_PyTime_GetMonotonicClock@plt>
    9a24:	mov	x1, x0
    9a28:	ldr	x0, [sp, #192]
    9a2c:	sub	x0, x0, x1
    9a30:	str	x0, [sp, #200]
    9a34:	b	9a58 <PySequence_Fast@plt+0x51c8>
    9a38:	mov	w0, #0x1                   	// #1
    9a3c:	str	w0, [sp, #188]
    9a40:	bl	4840 <_PyTime_GetMonotonicClock@plt>
    9a44:	mov	x1, x0
    9a48:	ldr	x0, [sp, #24]
    9a4c:	ldr	x0, [x0, #40]
    9a50:	add	x0, x1, x0
    9a54:	str	x0, [sp, #192]
    9a58:	ldr	x0, [sp, #200]
    9a5c:	cmp	x0, #0x0
    9a60:	b.gt	9a84 <PySequence_Fast@plt+0x51f4>
    9a64:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    9a68:	add	x0, x0, #0xf38
    9a6c:	ldr	x2, [x0]
    9a70:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    9a74:	add	x1, x0, #0xbd0
    9a78:	mov	x0, x2
    9a7c:	bl	4340 <PyErr_SetString@plt>
    9a80:	b	9b3c <PySequence_Fast@plt+0x52ac>
    9a84:	ldr	x0, [sp, #216]
    9a88:	str	x0, [sp, #40]
    9a8c:	ldr	x0, [sp, #208]
    9a90:	str	x0, [sp, #48]
    9a94:	ldr	w0, [sp, #156]
    9a98:	str	w0, [sp, #56]
    9a9c:	add	x0, sp, #0x28
    9aa0:	ldr	x6, [sp, #200]
    9aa4:	mov	x5, #0x0                   	// #0
    9aa8:	mov	w4, #0x0                   	// #0
    9aac:	mov	x3, x0
    9ab0:	adrp	x0, 9000 <PySequence_Fast@plt+0x4770>
    9ab4:	add	x2, x0, #0x86c
    9ab8:	mov	w1, #0x1                   	// #1
    9abc:	ldr	x0, [sp, #24]
    9ac0:	bl	4dcc <PySequence_Fast@plt+0x53c>
    9ac4:	cmp	w0, #0x0
    9ac8:	b.lt	9b30 <PySequence_Fast@plt+0x52a0>  // b.tstop
    9acc:	ldr	x0, [sp, #64]
    9ad0:	str	x0, [sp, #160]
    9ad4:	ldr	x0, [sp, #160]
    9ad8:	ldr	x1, [sp, #216]
    9adc:	add	x0, x1, x0
    9ae0:	str	x0, [sp, #216]
    9ae4:	ldr	x1, [sp, #208]
    9ae8:	ldr	x0, [sp, #160]
    9aec:	sub	x0, x1, x0
    9af0:	str	x0, [sp, #208]
    9af4:	bl	4760 <PyErr_CheckSignals@plt>
    9af8:	cmp	w0, #0x0
    9afc:	b.ne	9b38 <PySequence_Fast@plt+0x52a8>  // b.any
    9b00:	ldr	x0, [sp, #208]
    9b04:	cmp	x0, #0x0
    9b08:	b.gt	9a08 <PySequence_Fast@plt+0x5178>
    9b0c:	add	x0, sp, #0x48
    9b10:	bl	4260 <PyBuffer_Release@plt>
    9b14:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    9b18:	ldr	x0, [x0, #4024]
    9b1c:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    9b20:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    9b24:	ldr	x0, [x0, #4024]
    9b28:	str	x0, [sp, #176]
    9b2c:	b	9b3c <PySequence_Fast@plt+0x52ac>
    9b30:	nop
    9b34:	b	9b3c <PySequence_Fast@plt+0x52ac>
    9b38:	nop
    9b3c:	add	x0, sp, #0x48
    9b40:	bl	4260 <PyBuffer_Release@plt>
    9b44:	ldr	x0, [sp, #176]
    9b48:	ldp	x29, x30, [sp], #224
    9b4c:	ret
    9b50:	stp	x29, x30, [sp, #-48]!
    9b54:	mov	x29, sp
    9b58:	str	x0, [sp, #24]
    9b5c:	str	x1, [sp, #16]
    9b60:	ldr	x0, [sp, #16]
    9b64:	str	x0, [sp, #40]
    9b68:	ldr	x0, [sp, #24]
    9b6c:	ldr	w6, [x0, #16]
    9b70:	ldr	x0, [sp, #40]
    9b74:	ldr	x1, [x0]
    9b78:	ldr	x0, [sp, #40]
    9b7c:	ldr	x0, [x0, #8]
    9b80:	mov	x7, x0
    9b84:	ldr	x0, [sp, #40]
    9b88:	ldr	w2, [x0, #16]
    9b8c:	ldr	x0, [sp, #40]
    9b90:	ldr	x0, [x0, #24]
    9b94:	mov	x3, x0
    9b98:	ldr	x0, [sp, #40]
    9b9c:	ldr	w0, [x0, #20]
    9ba0:	mov	w5, w0
    9ba4:	mov	x4, x3
    9ba8:	mov	w3, w2
    9bac:	mov	x2, x7
    9bb0:	mov	w0, w6
    9bb4:	bl	4120 <sendto@plt>
    9bb8:	mov	x1, x0
    9bbc:	ldr	x0, [sp, #40]
    9bc0:	str	x1, [x0, #32]
    9bc4:	ldr	x0, [sp, #40]
    9bc8:	ldr	x0, [x0, #32]
    9bcc:	mvn	x0, x0
    9bd0:	lsr	x0, x0, #63
    9bd4:	and	w0, w0, #0xff
    9bd8:	ldp	x29, x30, [sp], #48
    9bdc:	ret
    9be0:	stp	x29, x30, [sp, #-304]!
    9be4:	mov	x29, sp
    9be8:	str	x0, [sp, #24]
    9bec:	str	x1, [sp, #16]
    9bf0:	str	wzr, [sp, #72]
    9bf4:	ldr	x0, [sp, #16]
    9bf8:	bl	4790 <PyTuple_Size@plt>
    9bfc:	str	x0, [sp, #296]
    9c00:	ldr	x0, [sp, #296]
    9c04:	cmp	x0, #0x2
    9c08:	b.eq	9c1c <PySequence_Fast@plt+0x538c>  // b.none
    9c0c:	ldr	x0, [sp, #296]
    9c10:	cmp	x0, #0x3
    9c14:	b.eq	9c4c <PySequence_Fast@plt+0x53bc>  // b.none
    9c18:	b	9c84 <PySequence_Fast@plt+0x53f4>
    9c1c:	add	x1, sp, #0xd0
    9c20:	add	x0, sp, #0xd8
    9c24:	mov	x3, x1
    9c28:	mov	x2, x0
    9c2c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9c30:	add	x1, x0, #0x4b0
    9c34:	ldr	x0, [sp, #16]
    9c38:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    9c3c:	cmp	w0, #0x0
    9c40:	b.ne	9cac <PySequence_Fast@plt+0x541c>  // b.any
    9c44:	mov	x0, #0x0                   	// #0
    9c48:	b	9d88 <PySequence_Fast@plt+0x54f8>
    9c4c:	add	x2, sp, #0xd0
    9c50:	add	x1, sp, #0x48
    9c54:	add	x0, sp, #0xd8
    9c58:	mov	x4, x2
    9c5c:	mov	x3, x1
    9c60:	mov	x2, x0
    9c64:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9c68:	add	x1, x0, #0x4c0
    9c6c:	ldr	x0, [sp, #16]
    9c70:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    9c74:	cmp	w0, #0x0
    9c78:	b.ne	9cb4 <PySequence_Fast@plt+0x5424>  // b.any
    9c7c:	mov	x0, #0x0                   	// #0
    9c80:	b	9d88 <PySequence_Fast@plt+0x54f8>
    9c84:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    9c88:	ldr	x0, [x0, #3976]
    9c8c:	ldr	x3, [x0]
    9c90:	ldr	x2, [sp, #296]
    9c94:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9c98:	add	x1, x0, #0x4d0
    9c9c:	mov	x0, x3
    9ca0:	bl	47a0 <PyErr_Format@plt>
    9ca4:	mov	x0, #0x0                   	// #0
    9ca8:	b	9d88 <PySequence_Fast@plt+0x54f8>
    9cac:	nop
    9cb0:	b	9cb8 <PySequence_Fast@plt+0x5428>
    9cb4:	nop
    9cb8:	ldr	x1, [sp, #208]
    9cbc:	add	x3, sp, #0x4c
    9cc0:	add	x2, sp, #0x50
    9cc4:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9cc8:	add	x4, x0, #0x500
    9ccc:	ldr	x0, [sp, #24]
    9cd0:	bl	6054 <PySequence_Fast@plt+0x17c4>
    9cd4:	cmp	w0, #0x0
    9cd8:	b.ne	9cec <PySequence_Fast@plt+0x545c>  // b.any
    9cdc:	add	x0, sp, #0xd8
    9ce0:	bl	4260 <PyBuffer_Release@plt>
    9ce4:	mov	x0, #0x0                   	// #0
    9ce8:	b	9d88 <PySequence_Fast@plt+0x54f8>
    9cec:	ldr	x0, [sp, #208]
    9cf0:	mov	x3, x0
    9cf4:	ldr	x2, [sp, #24]
    9cf8:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    9cfc:	add	x1, x0, #0x970
    9d00:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9d04:	add	x0, x0, #0x508
    9d08:	bl	4620 <PySys_Audit@plt>
    9d0c:	cmp	w0, #0x0
    9d10:	b.ge	9d1c <PySequence_Fast@plt+0x548c>  // b.tcont
    9d14:	mov	x0, #0x0                   	// #0
    9d18:	b	9d88 <PySequence_Fast@plt+0x54f8>
    9d1c:	ldr	x0, [sp, #216]
    9d20:	str	x0, [sp, #32]
    9d24:	ldr	x0, [sp, #232]
    9d28:	str	x0, [sp, #40]
    9d2c:	ldr	w0, [sp, #72]
    9d30:	str	w0, [sp, #48]
    9d34:	ldr	w0, [sp, #76]
    9d38:	str	w0, [sp, #52]
    9d3c:	add	x0, sp, #0x50
    9d40:	str	x0, [sp, #56]
    9d44:	add	x0, sp, #0x20
    9d48:	mov	x3, x0
    9d4c:	adrp	x0, 9000 <PySequence_Fast@plt+0x4770>
    9d50:	add	x2, x0, #0xb50
    9d54:	mov	w1, #0x1                   	// #1
    9d58:	ldr	x0, [sp, #24]
    9d5c:	bl	5098 <PySequence_Fast@plt+0x808>
    9d60:	cmp	w0, #0x0
    9d64:	b.ge	9d78 <PySequence_Fast@plt+0x54e8>  // b.tcont
    9d68:	add	x0, sp, #0xd8
    9d6c:	bl	4260 <PyBuffer_Release@plt>
    9d70:	mov	x0, #0x0                   	// #0
    9d74:	b	9d88 <PySequence_Fast@plt+0x54f8>
    9d78:	add	x0, sp, #0xd8
    9d7c:	bl	4260 <PyBuffer_Release@plt>
    9d80:	ldr	x0, [sp, #64]
    9d84:	bl	4450 <PyLong_FromSsize_t@plt>
    9d88:	ldp	x29, x30, [sp], #304
    9d8c:	ret
    9d90:	stp	x29, x30, [sp, #-112]!
    9d94:	mov	x29, sp
    9d98:	str	x0, [sp, #56]
    9d9c:	str	x1, [sp, #48]
    9da0:	str	x2, [sp, #40]
    9da4:	str	x3, [sp, #32]
    9da8:	str	x4, [sp, #24]
    9dac:	str	xzr, [sp, #104]
    9db0:	mov	w0, #0xffffffff            	// #-1
    9db4:	str	w0, [sp, #100]
    9db8:	str	xzr, [sp, #88]
    9dbc:	str	xzr, [sp, #72]
    9dc0:	str	xzr, [sp, #80]
    9dc4:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9dc8:	add	x1, x0, #0x5c0
    9dcc:	ldr	x0, [sp, #48]
    9dd0:	bl	4890 <PySequence_Fast@plt>
    9dd4:	str	x0, [sp, #72]
    9dd8:	ldr	x0, [sp, #72]
    9ddc:	cmp	x0, #0x0
    9de0:	b.eq	9fec <PySequence_Fast@plt+0x575c>  // b.none
    9de4:	ldr	x0, [sp, #72]
    9de8:	ldr	x0, [x0, #16]
    9dec:	str	x0, [sp, #64]
    9df0:	ldr	x1, [sp, #64]
    9df4:	mov	x0, #0x7fffffff            	// #2147483647
    9df8:	cmp	x1, x0
    9dfc:	b.le	9e20 <PySequence_Fast@plt+0x5590>
    9e00:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    9e04:	ldr	x0, [x0, #3984]
    9e08:	ldr	x2, [x0]
    9e0c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9e10:	add	x1, x0, #0x5f0
    9e14:	mov	x0, x2
    9e18:	bl	4340 <PyErr_SetString@plt>
    9e1c:	b	9ff8 <PySequence_Fast@plt+0x5768>
    9e20:	ldr	x1, [sp, #64]
    9e24:	ldr	x0, [sp, #40]
    9e28:	str	x1, [x0, #24]
    9e2c:	ldr	x0, [sp, #64]
    9e30:	cmp	x0, #0x0
    9e34:	b.le	9fd4 <PySequence_Fast@plt+0x5744>
    9e38:	ldr	x1, [sp, #64]
    9e3c:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
    9e40:	cmp	x1, x0
    9e44:	b.hi	9e58 <PySequence_Fast@plt+0x55c8>  // b.pmore
    9e48:	ldr	x0, [sp, #64]
    9e4c:	lsl	x0, x0, #4
    9e50:	bl	4810 <PyMem_Malloc@plt>
    9e54:	b	9e5c <PySequence_Fast@plt+0x55cc>
    9e58:	mov	x0, #0x0                   	// #0
    9e5c:	str	x0, [sp, #88]
    9e60:	ldr	x0, [sp, #88]
    9e64:	cmp	x0, #0x0
    9e68:	b.ne	9e74 <PySequence_Fast@plt+0x55e4>  // b.any
    9e6c:	bl	42f0 <PyErr_NoMemory@plt>
    9e70:	b	9ff8 <PySequence_Fast@plt+0x5768>
    9e74:	ldr	x0, [sp, #40]
    9e78:	ldr	x1, [sp, #88]
    9e7c:	str	x1, [x0, #16]
    9e80:	ldr	x1, [sp, #64]
    9e84:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
    9e88:	movk	x0, #0x199, lsl #48
    9e8c:	cmp	x1, x0
    9e90:	b.hi	9eb0 <PySequence_Fast@plt+0x5620>  // b.pmore
    9e94:	ldr	x1, [sp, #64]
    9e98:	mov	x0, x1
    9e9c:	lsl	x0, x0, #2
    9ea0:	add	x0, x0, x1
    9ea4:	lsl	x0, x0, #4
    9ea8:	bl	4810 <PyMem_Malloc@plt>
    9eac:	b	9eb4 <PySequence_Fast@plt+0x5624>
    9eb0:	mov	x0, #0x0                   	// #0
    9eb4:	str	x0, [sp, #80]
    9eb8:	ldr	x0, [sp, #80]
    9ebc:	cmp	x0, #0x0
    9ec0:	b.ne	9fd4 <PySequence_Fast@plt+0x5744>  // b.any
    9ec4:	bl	42f0 <PyErr_NoMemory@plt>
    9ec8:	b	9ff8 <PySequence_Fast@plt+0x5768>
    9ecc:	ldr	x0, [sp, #72]
    9ed0:	ldr	x0, [x0, #8]
    9ed4:	ldr	x0, [x0, #168]
    9ed8:	and	x0, x0, #0x2000000
    9edc:	cmp	x0, #0x0
    9ee0:	b.eq	9f00 <PySequence_Fast@plt+0x5670>  // b.none
    9ee4:	ldr	x0, [sp, #72]
    9ee8:	ldr	x1, [x0, #24]
    9eec:	ldr	x0, [sp, #104]
    9ef0:	lsl	x0, x0, #3
    9ef4:	add	x0, x1, x0
    9ef8:	ldr	x3, [x0]
    9efc:	b	9f18 <PySequence_Fast@plt+0x5688>
    9f00:	ldr	x1, [sp, #72]
    9f04:	ldr	x0, [sp, #104]
    9f08:	add	x0, x0, #0x2
    9f0c:	lsl	x0, x0, #3
    9f10:	add	x0, x1, x0
    9f14:	ldr	x3, [x0, #8]
    9f18:	ldr	x1, [sp, #104]
    9f1c:	mov	x0, x1
    9f20:	lsl	x0, x0, #2
    9f24:	add	x0, x0, x1
    9f28:	lsl	x0, x0, #4
    9f2c:	mov	x1, x0
    9f30:	ldr	x0, [sp, #80]
    9f34:	add	x0, x0, x1
    9f38:	mov	x2, x0
    9f3c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    9f40:	add	x1, x0, #0x618
    9f44:	mov	x0, x3
    9f48:	bl	4470 <_PyArg_Parse_SizeT@plt>
    9f4c:	cmp	w0, #0x0
    9f50:	b.eq	9ff4 <PySequence_Fast@plt+0x5764>  // b.none
    9f54:	ldr	x1, [sp, #104]
    9f58:	mov	x0, x1
    9f5c:	lsl	x0, x0, #2
    9f60:	add	x0, x0, x1
    9f64:	lsl	x0, x0, #4
    9f68:	mov	x1, x0
    9f6c:	ldr	x0, [sp, #80]
    9f70:	add	x1, x0, x1
    9f74:	ldr	x0, [sp, #104]
    9f78:	lsl	x0, x0, #4
    9f7c:	ldr	x2, [sp, #88]
    9f80:	add	x0, x2, x0
    9f84:	ldr	x1, [x1]
    9f88:	str	x1, [x0]
    9f8c:	ldr	x1, [sp, #104]
    9f90:	mov	x0, x1
    9f94:	lsl	x0, x0, #2
    9f98:	add	x0, x0, x1
    9f9c:	lsl	x0, x0, #4
    9fa0:	mov	x1, x0
    9fa4:	ldr	x0, [sp, #80]
    9fa8:	add	x0, x0, x1
    9fac:	ldr	x2, [x0, #16]
    9fb0:	ldr	x0, [sp, #104]
    9fb4:	lsl	x0, x0, #4
    9fb8:	ldr	x1, [sp, #88]
    9fbc:	add	x0, x1, x0
    9fc0:	mov	x1, x2
    9fc4:	str	x1, [x0, #8]
    9fc8:	ldr	x0, [sp, #104]
    9fcc:	add	x0, x0, #0x1
    9fd0:	str	x0, [sp, #104]
    9fd4:	ldr	x1, [sp, #104]
    9fd8:	ldr	x0, [sp, #64]
    9fdc:	cmp	x1, x0
    9fe0:	b.lt	9ecc <PySequence_Fast@plt+0x563c>  // b.tstop
    9fe4:	str	wzr, [sp, #100]
    9fe8:	b	9ff8 <PySequence_Fast@plt+0x5768>
    9fec:	nop
    9ff0:	b	9ff8 <PySequence_Fast@plt+0x5768>
    9ff4:	nop
    9ff8:	ldr	x0, [sp, #32]
    9ffc:	ldr	x1, [sp, #80]
    a000:	str	x1, [x0]
    a004:	ldr	x0, [sp, #24]
    a008:	ldr	x1, [sp, #104]
    a00c:	str	x1, [x0]
    a010:	ldr	x0, [sp, #72]
    a014:	bl	4ad0 <PySequence_Fast@plt+0x240>
    a018:	ldr	w0, [sp, #100]
    a01c:	ldp	x29, x30, [sp], #112
    a020:	ret
    a024:	stp	x29, x30, [sp, #-48]!
    a028:	mov	x29, sp
    a02c:	str	x0, [sp, #24]
    a030:	str	x1, [sp, #16]
    a034:	ldr	x0, [sp, #16]
    a038:	str	x0, [sp, #40]
    a03c:	ldr	x0, [sp, #24]
    a040:	ldr	w3, [x0, #16]
    a044:	ldr	x0, [sp, #40]
    a048:	ldr	x1, [x0]
    a04c:	ldr	x0, [sp, #40]
    a050:	ldr	w0, [x0, #8]
    a054:	mov	w2, w0
    a058:	mov	w0, w3
    a05c:	bl	4430 <sendmsg@plt>
    a060:	mov	x1, x0
    a064:	ldr	x0, [sp, #40]
    a068:	str	x1, [x0, #16]
    a06c:	ldr	x0, [sp, #40]
    a070:	ldr	x0, [x0, #16]
    a074:	mvn	x0, x0
    a078:	lsr	x0, x0, #63
    a07c:	and	w0, w0, #0xff
    a080:	ldp	x29, x30, [sp], #48
    a084:	ret
    a088:	stp	x29, x30, [sp, #-416]!
    a08c:	mov	x29, sp
    a090:	str	x0, [sp, #24]
    a094:	str	x1, [sp, #16]
    a098:	str	xzr, [sp, #304]
    a09c:	str	xzr, [sp, #392]
    a0a0:	str	xzr, [sp, #296]
    a0a4:	str	xzr, [sp, #384]
    a0a8:	str	xzr, [sp, #376]
    a0ac:	str	wzr, [sp, #104]
    a0b0:	str	xzr, [sp, #88]
    a0b4:	str	xzr, [sp, #80]
    a0b8:	str	xzr, [sp, #352]
    a0bc:	str	xzr, [sp, #344]
    a0c0:	add	x3, sp, #0x50
    a0c4:	add	x2, sp, #0x68
    a0c8:	add	x1, sp, #0x58
    a0cc:	add	x0, sp, #0x60
    a0d0:	mov	x5, x3
    a0d4:	mov	x4, x2
    a0d8:	mov	x3, x1
    a0dc:	mov	x2, x0
    a0e0:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a0e4:	add	x1, x0, #0x660
    a0e8:	ldr	x0, [sp, #16]
    a0ec:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    a0f0:	cmp	w0, #0x0
    a0f4:	b.ne	a100 <PySequence_Fast@plt+0x5870>  // b.any
    a0f8:	mov	x0, #0x0                   	// #0
    a0fc:	b	a84c <PySequence_Fast@plt+0x5fbc>
    a100:	add	x0, sp, #0x70
    a104:	mov	x2, #0x38                  	// #56
    a108:	mov	w1, #0x0                   	// #0
    a10c:	bl	43e0 <memset@plt>
    a110:	ldr	x0, [sp, #80]
    a114:	cmp	x0, #0x0
    a118:	b.eq	a198 <PySequence_Fast@plt+0x5908>  // b.none
    a11c:	ldr	x1, [sp, #80]
    a120:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a124:	ldr	x0, [x0, #4024]
    a128:	cmp	x1, x0
    a12c:	b.eq	a198 <PySequence_Fast@plt+0x5908>  // b.none
    a130:	ldr	x1, [sp, #80]
    a134:	add	x3, sp, #0x6c
    a138:	add	x2, sp, #0xa8
    a13c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a140:	add	x4, x0, #0x670
    a144:	ldr	x0, [sp, #24]
    a148:	bl	6054 <PySequence_Fast@plt+0x17c4>
    a14c:	cmp	w0, #0x0
    a150:	b.eq	a764 <PySequence_Fast@plt+0x5ed4>  // b.none
    a154:	ldr	x0, [sp, #80]
    a158:	mov	x3, x0
    a15c:	ldr	x2, [sp, #24]
    a160:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    a164:	add	x1, x0, #0x970
    a168:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a16c:	add	x0, x0, #0x678
    a170:	bl	4620 <PySys_Audit@plt>
    a174:	cmp	w0, #0x0
    a178:	b.ge	a184 <PySequence_Fast@plt+0x58f4>  // b.tcont
    a17c:	mov	x0, #0x0                   	// #0
    a180:	b	a84c <PySequence_Fast@plt+0x5fbc>
    a184:	add	x0, sp, #0xa8
    a188:	str	x0, [sp, #112]
    a18c:	ldr	w0, [sp, #108]
    a190:	str	w0, [sp, #120]
    a194:	b	a1c8 <PySequence_Fast@plt+0x5938>
    a198:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a19c:	ldr	x3, [x0, #4024]
    a1a0:	ldr	x2, [sp, #24]
    a1a4:	adrp	x0, 10000 <PyInit__socket@@Base+0x291c>
    a1a8:	add	x1, x0, #0x970
    a1ac:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a1b0:	add	x0, x0, #0x678
    a1b4:	bl	4620 <PySys_Audit@plt>
    a1b8:	cmp	w0, #0x0
    a1bc:	b.ge	a1c8 <PySequence_Fast@plt+0x5938>  // b.tcont
    a1c0:	mov	x0, #0x0                   	// #0
    a1c4:	b	a84c <PySequence_Fast@plt+0x5fbc>
    a1c8:	ldr	x0, [sp, #96]
    a1cc:	add	x3, sp, #0x130
    a1d0:	add	x2, sp, #0x128
    a1d4:	add	x1, sp, #0x70
    a1d8:	mov	x4, x3
    a1dc:	mov	x3, x2
    a1e0:	mov	x2, x1
    a1e4:	mov	x1, x0
    a1e8:	ldr	x0, [sp, #24]
    a1ec:	bl	9d90 <PySequence_Fast@plt+0x5500>
    a1f0:	cmn	w0, #0x1
    a1f4:	b.eq	a76c <PySequence_Fast@plt+0x5edc>  // b.none
    a1f8:	ldr	x0, [sp, #88]
    a1fc:	cmp	x0, #0x0
    a200:	b.ne	a20c <PySequence_Fast@plt+0x597c>  // b.any
    a204:	str	xzr, [sp, #400]
    a208:	b	a23c <PySequence_Fast@plt+0x59ac>
    a20c:	ldr	x2, [sp, #88]
    a210:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a214:	add	x1, x0, #0x688
    a218:	mov	x0, x2
    a21c:	bl	4890 <PySequence_Fast@plt>
    a220:	str	x0, [sp, #352]
    a224:	ldr	x0, [sp, #352]
    a228:	cmp	x0, #0x0
    a22c:	b.eq	a774 <PySequence_Fast@plt+0x5ee4>  // b.none
    a230:	ldr	x0, [sp, #352]
    a234:	ldr	x0, [x0, #16]
    a238:	str	x0, [sp, #400]
    a23c:	ldr	x0, [sp, #400]
    a240:	cmp	x0, #0x0
    a244:	b.le	a2a4 <PySequence_Fast@plt+0x5a14>
    a248:	ldr	x1, [sp, #400]
    a24c:	mov	x0, #0x745d                	// #29789
    a250:	movk	x0, #0x45d1, lsl #16
    a254:	movk	x0, #0x5d17, lsl #32
    a258:	movk	x0, #0x174, lsl #48
    a25c:	cmp	x1, x0
    a260:	b.hi	a288 <PySequence_Fast@plt+0x59f8>  // b.pmore
    a264:	ldr	x1, [sp, #400]
    a268:	mov	x0, x1
    a26c:	lsl	x0, x0, #1
    a270:	add	x0, x0, x1
    a274:	lsl	x0, x0, #2
    a278:	sub	x0, x0, x1
    a27c:	lsl	x0, x0, #3
    a280:	bl	4810 <PyMem_Malloc@plt>
    a284:	b	a28c <PySequence_Fast@plt+0x59fc>
    a288:	mov	x0, #0x0                   	// #0
    a28c:	str	x0, [sp, #384]
    a290:	ldr	x0, [sp, #384]
    a294:	cmp	x0, #0x0
    a298:	b.ne	a2a4 <PySequence_Fast@plt+0x5a14>  // b.any
    a29c:	bl	42f0 <PyErr_NoMemory@plt>
    a2a0:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a2a4:	str	xzr, [sp, #360]
    a2a8:	ldr	x0, [sp, #360]
    a2ac:	str	x0, [sp, #368]
    a2b0:	b	a474 <PySequence_Fast@plt+0x5be4>
    a2b4:	ldr	x0, [sp, #352]
    a2b8:	ldr	x0, [x0, #8]
    a2bc:	ldr	x0, [x0, #168]
    a2c0:	and	x0, x0, #0x2000000
    a2c4:	cmp	x0, #0x0
    a2c8:	b.eq	a2e8 <PySequence_Fast@plt+0x5a58>  // b.none
    a2cc:	ldr	x0, [sp, #352]
    a2d0:	ldr	x1, [x0, #24]
    a2d4:	ldr	x0, [sp, #392]
    a2d8:	lsl	x0, x0, #3
    a2dc:	add	x0, x1, x0
    a2e0:	ldr	x5, [x0]
    a2e4:	b	a300 <PySequence_Fast@plt+0x5a70>
    a2e8:	ldr	x1, [sp, #352]
    a2ec:	ldr	x0, [sp, #392]
    a2f0:	add	x0, x0, #0x2
    a2f4:	lsl	x0, x0, #3
    a2f8:	add	x0, x1, x0
    a2fc:	ldr	x5, [x0, #8]
    a300:	ldr	x1, [sp, #392]
    a304:	mov	x0, x1
    a308:	lsl	x0, x0, #1
    a30c:	add	x0, x0, x1
    a310:	lsl	x0, x0, #2
    a314:	sub	x0, x0, x1
    a318:	lsl	x0, x0, #3
    a31c:	mov	x1, x0
    a320:	ldr	x0, [sp, #384]
    a324:	add	x0, x0, x1
    a328:	mov	x6, x0
    a32c:	ldr	x1, [sp, #392]
    a330:	mov	x0, x1
    a334:	lsl	x0, x0, #1
    a338:	add	x0, x0, x1
    a33c:	lsl	x0, x0, #2
    a340:	sub	x0, x0, x1
    a344:	lsl	x0, x0, #3
    a348:	mov	x1, x0
    a34c:	ldr	x0, [sp, #384]
    a350:	add	x0, x0, x1
    a354:	add	x2, x0, #0x4
    a358:	ldr	x1, [sp, #392]
    a35c:	mov	x0, x1
    a360:	lsl	x0, x0, #1
    a364:	add	x0, x0, x1
    a368:	lsl	x0, x0, #2
    a36c:	sub	x0, x0, x1
    a370:	lsl	x0, x0, #3
    a374:	mov	x1, x0
    a378:	ldr	x0, [sp, #384]
    a37c:	add	x0, x0, x1
    a380:	add	x0, x0, #0x8
    a384:	mov	x4, x0
    a388:	mov	x3, x2
    a38c:	mov	x2, x6
    a390:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a394:	add	x1, x0, #0x6b8
    a398:	mov	x0, x5
    a39c:	bl	4470 <_PyArg_Parse_SizeT@plt>
    a3a0:	cmp	w0, #0x0
    a3a4:	b.eq	a77c <PySequence_Fast@plt+0x5eec>  // b.none
    a3a8:	ldr	x0, [sp, #392]
    a3ac:	add	x1, x0, #0x1
    a3b0:	str	x1, [sp, #392]
    a3b4:	mov	x1, x0
    a3b8:	mov	x0, x1
    a3bc:	lsl	x0, x0, #1
    a3c0:	add	x0, x0, x1
    a3c4:	lsl	x0, x0, #2
    a3c8:	sub	x0, x0, x1
    a3cc:	lsl	x0, x0, #3
    a3d0:	mov	x1, x0
    a3d4:	ldr	x0, [sp, #384]
    a3d8:	add	x0, x0, x1
    a3dc:	ldr	x0, [x0, #24]
    a3e0:	str	x0, [sp, #312]
    a3e4:	add	x0, sp, #0x30
    a3e8:	mov	x1, x0
    a3ec:	ldr	x0, [sp, #312]
    a3f0:	bl	7390 <PySequence_Fast@plt+0x2b00>
    a3f4:	cmp	w0, #0x0
    a3f8:	b.ne	a41c <PySequence_Fast@plt+0x5b8c>  // b.any
    a3fc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a400:	ldr	x0, [x0, #3984]
    a404:	ldr	x2, [x0]
    a408:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a40c:	add	x1, x0, #0x6e0
    a410:	mov	x0, x2
    a414:	bl	4340 <PyErr_SetString@plt>
    a418:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a41c:	ldr	x0, [sp, #48]
    a420:	ldr	x1, [sp, #368]
    a424:	add	x0, x1, x0
    a428:	str	x0, [sp, #368]
    a42c:	ldr	x1, [sp, #368]
    a430:	mov	x0, #0x7fffffff            	// #2147483647
    a434:	cmp	x1, x0
    a438:	b.hi	a44c <PySequence_Fast@plt+0x5bbc>  // b.pmore
    a43c:	ldr	x1, [sp, #368]
    a440:	ldr	x0, [sp, #360]
    a444:	cmp	x1, x0
    a448:	b.cs	a46c <PySequence_Fast@plt+0x5bdc>  // b.hs, b.nlast
    a44c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a450:	ldr	x0, [x0, #3984]
    a454:	ldr	x2, [x0]
    a458:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a45c:	add	x1, x0, #0x700
    a460:	mov	x0, x2
    a464:	bl	4340 <PyErr_SetString@plt>
    a468:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a46c:	ldr	x0, [sp, #368]
    a470:	str	x0, [sp, #360]
    a474:	ldr	x1, [sp, #392]
    a478:	ldr	x0, [sp, #400]
    a47c:	cmp	x1, x0
    a480:	b.lt	a2b4 <PySequence_Fast@plt+0x5a24>  // b.tstop
    a484:	ldr	x0, [sp, #392]
    a488:	cmp	x0, #0x0
    a48c:	b.le	a720 <PySequence_Fast@plt+0x5e90>
    a490:	str	xzr, [sp, #336]
    a494:	ldr	x0, [sp, #368]
    a498:	bl	4810 <PyMem_Malloc@plt>
    a49c:	str	x0, [sp, #376]
    a4a0:	ldr	x0, [sp, #376]
    a4a4:	cmp	x0, #0x0
    a4a8:	b.ne	a4b4 <PySequence_Fast@plt+0x5c24>  // b.any
    a4ac:	bl	42f0 <PyErr_NoMemory@plt>
    a4b0:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a4b4:	ldr	x0, [sp, #376]
    a4b8:	str	x0, [sp, #144]
    a4bc:	ldr	x0, [sp, #368]
    a4c0:	str	x0, [sp, #152]
    a4c4:	ldr	x2, [sp, #368]
    a4c8:	mov	w1, #0x0                   	// #0
    a4cc:	ldr	x0, [sp, #376]
    a4d0:	bl	43e0 <memset@plt>
    a4d4:	str	xzr, [sp, #408]
    a4d8:	b	a710 <PySequence_Fast@plt+0x5e80>
    a4dc:	ldr	x1, [sp, #408]
    a4e0:	mov	x0, x1
    a4e4:	lsl	x0, x0, #1
    a4e8:	add	x0, x0, x1
    a4ec:	lsl	x0, x0, #2
    a4f0:	sub	x0, x0, x1
    a4f4:	lsl	x0, x0, #3
    a4f8:	mov	x1, x0
    a4fc:	ldr	x0, [sp, #384]
    a500:	add	x0, x0, x1
    a504:	ldr	x0, [x0, #24]
    a508:	str	x0, [sp, #320]
    a50c:	str	wzr, [sp, #332]
    a510:	ldr	x0, [sp, #408]
    a514:	cmp	x0, #0x0
    a518:	b.ne	a538 <PySequence_Fast@plt+0x5ca8>  // b.any
    a51c:	ldr	x0, [sp, #152]
    a520:	cmp	x0, #0xf
    a524:	b.ls	a530 <PySequence_Fast@plt+0x5ca0>  // b.plast
    a528:	ldr	x0, [sp, #144]
    a52c:	b	a544 <PySequence_Fast@plt+0x5cb4>
    a530:	mov	x0, #0x0                   	// #0
    a534:	b	a544 <PySequence_Fast@plt+0x5cb4>
    a538:	add	x0, sp, #0x70
    a53c:	ldr	x1, [sp, #336]
    a540:	bl	41a0 <__cmsg_nxthdr@plt>
    a544:	str	x0, [sp, #336]
    a548:	ldr	x0, [sp, #336]
    a54c:	cmp	x0, #0x0
    a550:	b.ne	a598 <PySequence_Fast@plt+0x5d08>  // b.any
    a554:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a558:	ldr	x0, [x0, #3944]
    a55c:	ldr	x3, [x0]
    a560:	ldr	x0, [sp, #408]
    a564:	cmp	x0, #0x0
    a568:	b.ne	a578 <PySequence_Fast@plt+0x5ce8>  // b.any
    a56c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a570:	add	x0, x0, #0x718
    a574:	b	a580 <PySequence_Fast@plt+0x5cf0>
    a578:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a57c:	add	x0, x0, #0x728
    a580:	mov	x2, x0
    a584:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a588:	add	x1, x0, #0x738
    a58c:	mov	x0, x3
    a590:	bl	47a0 <PyErr_Format@plt>
    a594:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a598:	add	x0, sp, #0x28
    a59c:	mov	x1, x0
    a5a0:	ldr	x0, [sp, #320]
    a5a4:	bl	7320 <PySequence_Fast@plt+0x2a90>
    a5a8:	cmp	w0, #0x0
    a5ac:	b.ne	a5d0 <PySequence_Fast@plt+0x5d40>  // b.any
    a5b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a5b4:	ldr	x0, [x0, #3944]
    a5b8:	ldr	x2, [x0]
    a5bc:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a5c0:	add	x1, x0, #0x760
    a5c4:	mov	x0, x2
    a5c8:	bl	4340 <PyErr_SetString@plt>
    a5cc:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a5d0:	ldr	x1, [sp, #40]
    a5d4:	add	x0, sp, #0x70
    a5d8:	mov	x2, x1
    a5dc:	ldr	x1, [sp, #336]
    a5e0:	bl	740c <PySequence_Fast@plt+0x2b7c>
    a5e4:	cmp	w0, #0x0
    a5e8:	b.eq	a62c <PySequence_Fast@plt+0x5d9c>  // b.none
    a5ec:	ldr	x1, [sp, #40]
    a5f0:	ldr	x0, [sp, #336]
    a5f4:	str	x1, [x0]
    a5f8:	add	x1, sp, #0x20
    a5fc:	add	x0, sp, #0x70
    a600:	mov	x2, x1
    a604:	ldr	x1, [sp, #336]
    a608:	bl	74c0 <PySequence_Fast@plt+0x2c30>
    a60c:	cmp	w0, #0x0
    a610:	b.eq	a62c <PySequence_Fast@plt+0x5d9c>  // b.none
    a614:	ldr	x0, [sp, #32]
    a618:	ldr	x1, [sp, #320]
    a61c:	cmp	x1, x0
    a620:	cset	w0, ls  // ls = plast
    a624:	and	w0, w0, #0xff
    a628:	str	w0, [sp, #332]
    a62c:	ldr	w0, [sp, #332]
    a630:	cmp	w0, #0x0
    a634:	b.ne	a658 <PySequence_Fast@plt+0x5dc8>  // b.any
    a638:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a63c:	ldr	x0, [x0, #3944]
    a640:	ldr	x2, [x0]
    a644:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a648:	add	x1, x0, #0x788
    a64c:	mov	x0, x2
    a650:	bl	4340 <PyErr_SetString@plt>
    a654:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a658:	ldr	x1, [sp, #408]
    a65c:	mov	x0, x1
    a660:	lsl	x0, x0, #1
    a664:	add	x0, x0, x1
    a668:	lsl	x0, x0, #2
    a66c:	sub	x0, x0, x1
    a670:	lsl	x0, x0, #3
    a674:	mov	x1, x0
    a678:	ldr	x0, [sp, #384]
    a67c:	add	x0, x0, x1
    a680:	ldr	w1, [x0]
    a684:	ldr	x0, [sp, #336]
    a688:	str	w1, [x0, #8]
    a68c:	ldr	x1, [sp, #408]
    a690:	mov	x0, x1
    a694:	lsl	x0, x0, #1
    a698:	add	x0, x0, x1
    a69c:	lsl	x0, x0, #2
    a6a0:	sub	x0, x0, x1
    a6a4:	lsl	x0, x0, #3
    a6a8:	mov	x1, x0
    a6ac:	ldr	x0, [sp, #384]
    a6b0:	add	x0, x0, x1
    a6b4:	ldr	w1, [x0, #4]
    a6b8:	ldr	x0, [sp, #336]
    a6bc:	str	w1, [x0, #12]
    a6c0:	ldr	x0, [sp, #336]
    a6c4:	add	x3, x0, #0x10
    a6c8:	ldr	x1, [sp, #408]
    a6cc:	mov	x0, x1
    a6d0:	lsl	x0, x0, #1
    a6d4:	add	x0, x0, x1
    a6d8:	lsl	x0, x0, #2
    a6dc:	sub	x0, x0, x1
    a6e0:	lsl	x0, x0, #3
    a6e4:	mov	x1, x0
    a6e8:	ldr	x0, [sp, #384]
    a6ec:	add	x0, x0, x1
    a6f0:	ldr	x0, [x0, #8]
    a6f4:	ldr	x2, [sp, #320]
    a6f8:	mov	x1, x0
    a6fc:	mov	x0, x3
    a700:	bl	40d0 <memcpy@plt>
    a704:	ldr	x0, [sp, #408]
    a708:	add	x0, x0, #0x1
    a70c:	str	x0, [sp, #408]
    a710:	ldr	x1, [sp, #408]
    a714:	ldr	x0, [sp, #392]
    a718:	cmp	x1, x0
    a71c:	b.lt	a4dc <PySequence_Fast@plt+0x5c4c>  // b.tstop
    a720:	add	x0, sp, #0x70
    a724:	str	x0, [sp, #56]
    a728:	ldr	w0, [sp, #104]
    a72c:	str	w0, [sp, #64]
    a730:	add	x0, sp, #0x38
    a734:	mov	x3, x0
    a738:	adrp	x0, a000 <PySequence_Fast@plt+0x5770>
    a73c:	add	x2, x0, #0x24
    a740:	mov	w1, #0x1                   	// #1
    a744:	ldr	x0, [sp, #24]
    a748:	bl	5098 <PySequence_Fast@plt+0x808>
    a74c:	cmp	w0, #0x0
    a750:	b.lt	a784 <PySequence_Fast@plt+0x5ef4>  // b.tstop
    a754:	ldr	x0, [sp, #72]
    a758:	bl	4450 <PyLong_FromSsize_t@plt>
    a75c:	str	x0, [sp, #344]
    a760:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a764:	nop
    a768:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a76c:	nop
    a770:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a774:	nop
    a778:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a77c:	nop
    a780:	b	a788 <PySequence_Fast@plt+0x5ef8>
    a784:	nop
    a788:	ldr	x0, [sp, #376]
    a78c:	bl	4220 <PyMem_Free@plt>
    a790:	str	xzr, [sp, #408]
    a794:	b	a7d4 <PySequence_Fast@plt+0x5f44>
    a798:	ldr	x1, [sp, #408]
    a79c:	mov	x0, x1
    a7a0:	lsl	x0, x0, #1
    a7a4:	add	x0, x0, x1
    a7a8:	lsl	x0, x0, #2
    a7ac:	sub	x0, x0, x1
    a7b0:	lsl	x0, x0, #3
    a7b4:	mov	x1, x0
    a7b8:	ldr	x0, [sp, #384]
    a7bc:	add	x0, x0, x1
    a7c0:	add	x0, x0, #0x8
    a7c4:	bl	4260 <PyBuffer_Release@plt>
    a7c8:	ldr	x0, [sp, #408]
    a7cc:	add	x0, x0, #0x1
    a7d0:	str	x0, [sp, #408]
    a7d4:	ldr	x1, [sp, #408]
    a7d8:	ldr	x0, [sp, #392]
    a7dc:	cmp	x1, x0
    a7e0:	b.lt	a798 <PySequence_Fast@plt+0x5f08>  // b.tstop
    a7e4:	ldr	x0, [sp, #384]
    a7e8:	bl	4220 <PyMem_Free@plt>
    a7ec:	ldr	x0, [sp, #352]
    a7f0:	bl	4ad0 <PySequence_Fast@plt+0x240>
    a7f4:	ldr	x0, [sp, #128]
    a7f8:	bl	4220 <PyMem_Free@plt>
    a7fc:	str	xzr, [sp, #408]
    a800:	b	a830 <PySequence_Fast@plt+0x5fa0>
    a804:	ldr	x2, [sp, #296]
    a808:	ldr	x1, [sp, #408]
    a80c:	mov	x0, x1
    a810:	lsl	x0, x0, #2
    a814:	add	x0, x0, x1
    a818:	lsl	x0, x0, #4
    a81c:	add	x0, x2, x0
    a820:	bl	4260 <PyBuffer_Release@plt>
    a824:	ldr	x0, [sp, #408]
    a828:	add	x0, x0, #0x1
    a82c:	str	x0, [sp, #408]
    a830:	ldr	x0, [sp, #304]
    a834:	ldr	x1, [sp, #408]
    a838:	cmp	x1, x0
    a83c:	b.lt	a804 <PySequence_Fast@plt+0x5f74>  // b.tstop
    a840:	ldr	x0, [sp, #296]
    a844:	bl	4220 <PyMem_Free@plt>
    a848:	ldr	x0, [sp, #344]
    a84c:	ldp	x29, x30, [sp], #416
    a850:	ret
    a854:	sub	sp, sp, #0x160
    a858:	stp	x29, x30, [sp, #32]
    a85c:	add	x29, sp, #0x20
    a860:	str	x0, [sp, #72]
    a864:	str	x1, [sp, #64]
    a868:	str	x2, [sp, #56]
    a86c:	str	xzr, [sp, #344]
    a870:	str	xzr, [sp, #280]
    a874:	str	xzr, [sp, #272]
    a878:	str	xzr, [sp, #264]
    a87c:	stp	xzr, xzr, [sp, #184]
    a880:	stp	xzr, xzr, [sp, #200]
    a884:	stp	xzr, xzr, [sp, #216]
    a888:	stp	xzr, xzr, [sp, #232]
    a88c:	stp	xzr, xzr, [sp, #248]
    a890:	str	xzr, [sp, #176]
    a894:	mov	w0, #0xffffffff            	// #-1
    a898:	str	w0, [sp, #332]
    a89c:	str	xzr, [sp, #168]
    a8a0:	mov	w0, #0xffffffff            	// #-1
    a8a4:	str	w0, [sp, #328]
    a8a8:	str	wzr, [sp, #164]
    a8ac:	str	xzr, [sp, #320]
    a8b0:	str	xzr, [sp, #296]
    a8b4:	str	xzr, [sp, #304]
    a8b8:	ldr	x0, [sp, #72]
    a8bc:	ldr	w0, [x0, #20]
    a8c0:	cmp	w0, #0x26
    a8c4:	b.eq	a8ec <PySequence_Fast@plt+0x605c>  // b.none
    a8c8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a8cc:	ldr	x0, [x0, #3984]
    a8d0:	ldr	x2, [x0]
    a8d4:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a8d8:	add	x1, x0, #0xb20
    a8dc:	mov	x0, x2
    a8e0:	bl	4340 <PyErr_SetString@plt>
    a8e4:	mov	x0, #0x0                   	// #0
    a8e8:	b	ad48 <PySequence_Fast@plt+0x64b8>
    a8ec:	add	x3, sp, #0xb8
    a8f0:	add	x2, sp, #0xb0
    a8f4:	add	x1, sp, #0x108
    a8f8:	add	x0, sp, #0xa4
    a8fc:	str	x0, [sp, #16]
    a900:	add	x0, sp, #0xa8
    a904:	str	x0, [sp, #8]
    a908:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a90c:	ldr	x0, [x0, #4040]
    a910:	str	x0, [sp]
    a914:	mov	x7, x3
    a918:	mov	x6, x2
    a91c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a920:	ldr	x5, [x0, #4040]
    a924:	mov	x4, x1
    a928:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    a92c:	add	x3, x0, #0xe90
    a930:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a934:	add	x2, x0, #0xb48
    a938:	ldr	x1, [sp, #56]
    a93c:	ldr	x0, [sp, #64]
    a940:	bl	45c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    a944:	cmp	w0, #0x0
    a948:	b.ne	a954 <PySequence_Fast@plt+0x60c4>  // b.any
    a94c:	mov	x0, #0x0                   	// #0
    a950:	b	ad48 <PySequence_Fast@plt+0x64b8>
    a954:	add	x0, sp, #0x68
    a958:	mov	x2, #0x38                  	// #56
    a95c:	mov	w1, #0x0                   	// #0
    a960:	bl	43e0 <memset@plt>
    a964:	ldr	x0, [sp, #176]
    a968:	cmp	x0, #0x0
    a96c:	b.eq	a97c <PySequence_Fast@plt+0x60ec>  // b.none
    a970:	ldr	x0, [sp, #176]
    a974:	bl	47f0 <_PyLong_AsInt@plt>
    a978:	str	w0, [sp, #332]
    a97c:	ldr	w0, [sp, #332]
    a980:	cmp	w0, #0x0
    a984:	b.ge	a9a8 <PySequence_Fast@plt+0x6118>  // b.tcont
    a988:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a98c:	ldr	x0, [x0, #3976]
    a990:	ldr	x2, [x0]
    a994:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a998:	add	x1, x0, #0xb68
    a99c:	mov	x0, x2
    a9a0:	bl	4340 <PyErr_SetString@plt>
    a9a4:	b	acd4 <PySequence_Fast@plt+0x6444>
    a9a8:	ldr	x0, [sp, #168]
    a9ac:	cmp	x0, #0x0
    a9b0:	b.eq	aa04 <PySequence_Fast@plt+0x6174>  // b.none
    a9b4:	ldr	x0, [sp, #168]
    a9b8:	bl	47f0 <_PyLong_AsInt@plt>
    a9bc:	str	w0, [sp, #328]
    a9c0:	ldr	w0, [sp, #328]
    a9c4:	cmn	w0, #0x1
    a9c8:	b.ne	a9d8 <PySequence_Fast@plt+0x6148>  // b.any
    a9cc:	bl	4540 <PyErr_Occurred@plt>
    a9d0:	cmp	x0, #0x0
    a9d4:	b.ne	acc0 <PySequence_Fast@plt+0x6430>  // b.any
    a9d8:	ldr	w0, [sp, #328]
    a9dc:	cmp	w0, #0x0
    a9e0:	b.ge	aa04 <PySequence_Fast@plt+0x6174>  // b.tcont
    a9e4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    a9e8:	ldr	x0, [x0, #3976]
    a9ec:	ldr	x2, [x0]
    a9f0:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    a9f4:	add	x1, x0, #0xb90
    a9f8:	mov	x0, x2
    a9fc:	bl	4340 <PyErr_SetString@plt>
    aa00:	b	acd4 <PySequence_Fast@plt+0x6444>
    aa04:	mov	x0, #0x18                  	// #24
    aa08:	str	x0, [sp, #312]
    aa0c:	ldr	x0, [sp, #184]
    aa10:	cmp	x0, #0x0
    aa14:	b.eq	aa34 <PySequence_Fast@plt+0x61a4>  // b.none
    aa18:	ldr	x0, [sp, #200]
    aa1c:	add	x0, x0, #0xb
    aa20:	and	x1, x0, #0xfffffffffffffff8
    aa24:	ldr	x0, [sp, #312]
    aa28:	add	x0, x1, x0
    aa2c:	add	x0, x0, #0x10
    aa30:	str	x0, [sp, #312]
    aa34:	ldr	w0, [sp, #328]
    aa38:	cmp	w0, #0x0
    aa3c:	b.lt	aa4c <PySequence_Fast@plt+0x61bc>  // b.tstop
    aa40:	ldr	x0, [sp, #312]
    aa44:	add	x0, x0, #0x18
    aa48:	str	x0, [sp, #312]
    aa4c:	ldr	x0, [sp, #312]
    aa50:	bl	4810 <PyMem_Malloc@plt>
    aa54:	str	x0, [sp, #304]
    aa58:	ldr	x0, [sp, #304]
    aa5c:	cmp	x0, #0x0
    aa60:	b.ne	aa6c <PySequence_Fast@plt+0x61dc>  // b.any
    aa64:	bl	42f0 <PyErr_NoMemory@plt>
    aa68:	b	acd4 <PySequence_Fast@plt+0x6444>
    aa6c:	ldr	x0, [sp, #312]
    aa70:	mov	x2, x0
    aa74:	mov	w1, #0x0                   	// #0
    aa78:	ldr	x0, [sp, #304]
    aa7c:	bl	43e0 <memset@plt>
    aa80:	ldr	x0, [sp, #312]
    aa84:	str	x0, [sp, #144]
    aa88:	ldr	x0, [sp, #304]
    aa8c:	str	x0, [sp, #136]
    aa90:	ldr	x0, [sp, #264]
    aa94:	cmp	x0, #0x0
    aa98:	b.eq	aacc <PySequence_Fast@plt+0x623c>  // b.none
    aa9c:	ldr	x0, [sp, #264]
    aaa0:	add	x3, sp, #0x118
    aaa4:	add	x2, sp, #0x110
    aaa8:	add	x1, sp, #0x68
    aaac:	mov	x4, x3
    aab0:	mov	x3, x2
    aab4:	mov	x2, x1
    aab8:	mov	x1, x0
    aabc:	ldr	x0, [sp, #72]
    aac0:	bl	9d90 <PySequence_Fast@plt+0x5500>
    aac4:	cmn	w0, #0x1
    aac8:	b.eq	acc8 <PySequence_Fast@plt+0x6438>  // b.none
    aacc:	ldr	x0, [sp, #144]
    aad0:	cmp	x0, #0xf
    aad4:	b.ls	aae0 <PySequence_Fast@plt+0x6250>  // b.plast
    aad8:	ldr	x0, [sp, #136]
    aadc:	b	aae4 <PySequence_Fast@plt+0x6254>
    aae0:	mov	x0, #0x0                   	// #0
    aae4:	str	x0, [sp, #320]
    aae8:	ldr	x0, [sp, #320]
    aaec:	cmp	x0, #0x0
    aaf0:	b.ne	ab14 <PySequence_Fast@plt+0x6284>  // b.any
    aaf4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    aaf8:	ldr	x0, [x0, #3944]
    aafc:	ldr	x2, [x0]
    ab00:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    ab04:	add	x1, x0, #0xbb0
    ab08:	mov	x0, x2
    ab0c:	bl	4340 <PyErr_SetString@plt>
    ab10:	b	acd4 <PySequence_Fast@plt+0x6444>
    ab14:	ldr	x0, [sp, #320]
    ab18:	mov	w1, #0x117                 	// #279
    ab1c:	str	w1, [x0, #8]
    ab20:	ldr	x0, [sp, #320]
    ab24:	mov	w1, #0x3                   	// #3
    ab28:	str	w1, [x0, #12]
    ab2c:	ldr	x0, [sp, #320]
    ab30:	mov	x1, #0x14                  	// #20
    ab34:	str	x1, [x0]
    ab38:	ldr	x0, [sp, #320]
    ab3c:	add	x0, x0, #0x10
    ab40:	str	x0, [sp, #288]
    ab44:	ldr	w1, [sp, #332]
    ab48:	ldr	x0, [sp, #288]
    ab4c:	str	w1, [x0]
    ab50:	ldr	x0, [sp, #184]
    ab54:	cmp	x0, #0x0
    ab58:	b.eq	abf8 <PySequence_Fast@plt+0x6368>  // b.none
    ab5c:	add	x0, sp, #0x68
    ab60:	ldr	x1, [sp, #320]
    ab64:	bl	41a0 <__cmsg_nxthdr@plt>
    ab68:	str	x0, [sp, #320]
    ab6c:	ldr	x0, [sp, #320]
    ab70:	cmp	x0, #0x0
    ab74:	b.ne	ab98 <PySequence_Fast@plt+0x6308>  // b.any
    ab78:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    ab7c:	ldr	x0, [x0, #3944]
    ab80:	ldr	x2, [x0]
    ab84:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    ab88:	add	x1, x0, #0xbe0
    ab8c:	mov	x0, x2
    ab90:	bl	4340 <PyErr_SetString@plt>
    ab94:	b	acd4 <PySequence_Fast@plt+0x6444>
    ab98:	ldr	x0, [sp, #320]
    ab9c:	mov	w1, #0x117                 	// #279
    aba0:	str	w1, [x0, #8]
    aba4:	ldr	x0, [sp, #320]
    aba8:	mov	w1, #0x2                   	// #2
    abac:	str	w1, [x0, #12]
    abb0:	ldr	x0, [sp, #200]
    abb4:	add	x0, x0, #0xb
    abb8:	and	x0, x0, #0xfffffffffffffff8
    abbc:	add	x1, x0, #0x10
    abc0:	ldr	x0, [sp, #320]
    abc4:	str	x1, [x0]
    abc8:	ldr	x0, [sp, #320]
    abcc:	add	x0, x0, #0x10
    abd0:	str	x0, [sp, #296]
    abd4:	ldr	x0, [sp, #200]
    abd8:	mov	w1, w0
    abdc:	ldr	x0, [sp, #296]
    abe0:	str	w1, [x0]
    abe4:	ldr	x0, [sp, #296]
    abe8:	add	x0, x0, #0x4
    abec:	ldr	x1, [sp, #184]
    abf0:	ldr	x2, [sp, #200]
    abf4:	bl	40d0 <memcpy@plt>
    abf8:	ldr	w0, [sp, #328]
    abfc:	cmp	w0, #0x0
    ac00:	b.lt	ac7c <PySequence_Fast@plt+0x63ec>  // b.tstop
    ac04:	add	x0, sp, #0x68
    ac08:	ldr	x1, [sp, #320]
    ac0c:	bl	41a0 <__cmsg_nxthdr@plt>
    ac10:	str	x0, [sp, #320]
    ac14:	ldr	x0, [sp, #320]
    ac18:	cmp	x0, #0x0
    ac1c:	b.ne	ac40 <PySequence_Fast@plt+0x63b0>  // b.any
    ac20:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    ac24:	ldr	x0, [x0, #3944]
    ac28:	ldr	x2, [x0]
    ac2c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    ac30:	add	x1, x0, #0xc10
    ac34:	mov	x0, x2
    ac38:	bl	4340 <PyErr_SetString@plt>
    ac3c:	b	acd4 <PySequence_Fast@plt+0x6444>
    ac40:	ldr	x0, [sp, #320]
    ac44:	mov	w1, #0x117                 	// #279
    ac48:	str	w1, [x0, #8]
    ac4c:	ldr	x0, [sp, #320]
    ac50:	mov	w1, #0x4                   	// #4
    ac54:	str	w1, [x0, #12]
    ac58:	ldr	x0, [sp, #320]
    ac5c:	mov	x1, #0x14                  	// #20
    ac60:	str	x1, [x0]
    ac64:	ldr	x0, [sp, #320]
    ac68:	add	x0, x0, #0x10
    ac6c:	str	x0, [sp, #288]
    ac70:	ldr	w1, [sp, #328]
    ac74:	ldr	x0, [sp, #288]
    ac78:	str	w1, [x0]
    ac7c:	add	x0, sp, #0x68
    ac80:	str	x0, [sp, #80]
    ac84:	ldr	w0, [sp, #164]
    ac88:	str	w0, [sp, #88]
    ac8c:	add	x0, sp, #0x50
    ac90:	mov	x3, x0
    ac94:	adrp	x0, a000 <PySequence_Fast@plt+0x5770>
    ac98:	add	x2, x0, #0x24
    ac9c:	mov	w1, #0x1                   	// #1
    aca0:	ldr	x0, [sp, #72]
    aca4:	bl	5098 <PySequence_Fast@plt+0x808>
    aca8:	cmp	w0, #0x0
    acac:	b.lt	acd0 <PySequence_Fast@plt+0x6440>  // b.tstop
    acb0:	ldr	x0, [sp, #96]
    acb4:	bl	4450 <PyLong_FromSsize_t@plt>
    acb8:	str	x0, [sp, #344]
    acbc:	b	acd4 <PySequence_Fast@plt+0x6444>
    acc0:	nop
    acc4:	b	acd4 <PySequence_Fast@plt+0x6444>
    acc8:	nop
    accc:	b	acd4 <PySequence_Fast@plt+0x6444>
    acd0:	nop
    acd4:	ldr	x0, [sp, #304]
    acd8:	bl	4220 <PyMem_Free@plt>
    acdc:	ldr	x0, [sp, #184]
    ace0:	cmp	x0, #0x0
    ace4:	b.eq	acf0 <PySequence_Fast@plt+0x6460>  // b.none
    ace8:	add	x0, sp, #0xb8
    acec:	bl	4260 <PyBuffer_Release@plt>
    acf0:	ldr	x0, [sp, #120]
    acf4:	bl	4220 <PyMem_Free@plt>
    acf8:	str	xzr, [sp, #336]
    acfc:	b	ad2c <PySequence_Fast@plt+0x649c>
    ad00:	ldr	x2, [sp, #272]
    ad04:	ldr	x1, [sp, #336]
    ad08:	mov	x0, x1
    ad0c:	lsl	x0, x0, #2
    ad10:	add	x0, x0, x1
    ad14:	lsl	x0, x0, #4
    ad18:	add	x0, x2, x0
    ad1c:	bl	4260 <PyBuffer_Release@plt>
    ad20:	ldr	x0, [sp, #336]
    ad24:	add	x0, x0, #0x1
    ad28:	str	x0, [sp, #336]
    ad2c:	ldr	x0, [sp, #280]
    ad30:	ldr	x1, [sp, #336]
    ad34:	cmp	x1, x0
    ad38:	b.lt	ad00 <PySequence_Fast@plt+0x6470>  // b.tstop
    ad3c:	ldr	x0, [sp, #272]
    ad40:	bl	4220 <PyMem_Free@plt>
    ad44:	ldr	x0, [sp, #344]
    ad48:	ldp	x29, x30, [sp, #32]
    ad4c:	add	sp, sp, #0x160
    ad50:	ret
    ad54:	stp	x29, x30, [sp, #-64]!
    ad58:	mov	x29, sp
    ad5c:	str	x0, [sp, #24]
    ad60:	str	x1, [sp, #16]
    ad64:	ldr	x0, [sp, #16]
    ad68:	bl	47f0 <_PyLong_AsInt@plt>
    ad6c:	str	w0, [sp, #60]
    ad70:	ldr	w0, [sp, #60]
    ad74:	cmn	w0, #0x1
    ad78:	b.ne	ad90 <PySequence_Fast@plt+0x6500>  // b.any
    ad7c:	bl	4540 <PyErr_Occurred@plt>
    ad80:	cmp	x0, #0x0
    ad84:	b.eq	ad90 <PySequence_Fast@plt+0x6500>  // b.none
    ad88:	mov	x0, #0x0                   	// #0
    ad8c:	b	ade4 <PySequence_Fast@plt+0x6554>
    ad90:	bl	46f0 <PyEval_SaveThread@plt>
    ad94:	str	x0, [sp, #48]
    ad98:	ldr	x0, [sp, #24]
    ad9c:	ldr	w0, [x0, #16]
    ada0:	ldr	w1, [sp, #60]
    ada4:	bl	44f0 <shutdown@plt>
    ada8:	str	w0, [sp, #44]
    adac:	ldr	x0, [sp, #48]
    adb0:	bl	4210 <PyEval_RestoreThread@plt>
    adb4:	ldr	w0, [sp, #44]
    adb8:	cmp	w0, #0x0
    adbc:	b.ge	add0 <PySequence_Fast@plt+0x6540>  // b.tcont
    adc0:	ldr	x0, [sp, #24]
    adc4:	ldr	x0, [x0, #32]
    adc8:	blr	x0
    adcc:	b	ade4 <PySequence_Fast@plt+0x6554>
    add0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    add4:	ldr	x0, [x0, #4024]
    add8:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    addc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    ade0:	ldr	x0, [x0, #4024]
    ade4:	ldp	x29, x30, [sp], #64
    ade8:	ret
    adec:	stp	x29, x30, [sp, #-80]!
    adf0:	mov	x29, sp
    adf4:	str	x0, [sp, #24]
    adf8:	add	x2, sp, #0x28
    adfc:	add	x1, sp, #0x30
    ae00:	add	x0, sp, #0x38
    ae04:	bl	46c0 <PyErr_Fetch@plt>
    ae08:	ldr	x0, [sp, #24]
    ae0c:	ldr	w0, [x0, #16]
    ae10:	cmn	w0, #0x1
    ae14:	b.eq	ae88 <PySequence_Fast@plt+0x65f8>  // b.none
    ae18:	ldr	x3, [sp, #24]
    ae1c:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    ae20:	add	x2, x0, #0xf18
    ae24:	mov	x1, #0x1                   	// #1
    ae28:	ldr	x0, [sp, #24]
    ae2c:	bl	45b0 <PyErr_ResourceWarning@plt>
    ae30:	cmp	w0, #0x0
    ae34:	b.eq	ae58 <PySequence_Fast@plt+0x65c8>  // b.none
    ae38:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    ae3c:	ldr	x0, [x0, #3952]
    ae40:	ldr	x0, [x0]
    ae44:	bl	43c0 <PyErr_ExceptionMatches@plt>
    ae48:	cmp	w0, #0x0
    ae4c:	b.eq	ae58 <PySequence_Fast@plt+0x65c8>  // b.none
    ae50:	ldr	x0, [sp, #24]
    ae54:	bl	4870 <PyErr_WriteUnraisable@plt>
    ae58:	ldr	x0, [sp, #24]
    ae5c:	ldr	w0, [x0, #16]
    ae60:	str	w0, [sp, #76]
    ae64:	ldr	x0, [sp, #24]
    ae68:	mov	w1, #0xffffffff            	// #-1
    ae6c:	str	w1, [x0, #16]
    ae70:	bl	46f0 <PyEval_SaveThread@plt>
    ae74:	str	x0, [sp, #64]
    ae78:	ldr	w0, [sp, #76]
    ae7c:	bl	4500 <close@plt>
    ae80:	ldr	x0, [sp, #64]
    ae84:	bl	4210 <PyEval_RestoreThread@plt>
    ae88:	ldr	x0, [sp, #56]
    ae8c:	ldr	x1, [sp, #48]
    ae90:	ldr	x2, [sp, #40]
    ae94:	bl	41e0 <PyErr_Restore@plt>
    ae98:	nop
    ae9c:	ldp	x29, x30, [sp], #80
    aea0:	ret
    aea4:	stp	x29, x30, [sp, #-32]!
    aea8:	mov	x29, sp
    aeac:	str	x0, [sp, #24]
    aeb0:	ldr	x0, [sp, #24]
    aeb4:	bl	4420 <PyObject_CallFinalizerFromDealloc@plt>
    aeb8:	cmp	w0, #0x0
    aebc:	b.lt	aed8 <PySequence_Fast@plt+0x6648>  // b.tstop
    aec0:	ldr	x0, [sp, #24]
    aec4:	ldr	x0, [x0, #8]
    aec8:	ldr	x1, [x0, #320]
    aecc:	ldr	x0, [sp, #24]
    aed0:	blr	x1
    aed4:	b	aedc <PySequence_Fast@plt+0x664c>
    aed8:	nop
    aedc:	ldp	x29, x30, [sp], #32
    aee0:	ret
    aee4:	stp	x29, x30, [sp, #-48]!
    aee8:	mov	x29, sp
    aeec:	str	x0, [sp, #24]
    aef0:	ldr	x0, [sp, #24]
    aef4:	ldr	w0, [x0, #16]
    aef8:	cmn	w0, #0x1
    aefc:	b.ne	af0c <PySequence_Fast@plt+0x667c>  // b.any
    af00:	mov	x0, #0xffffffffffffffff    	// #-1
    af04:	str	x0, [sp, #40]
    af08:	b	af1c <PySequence_Fast@plt+0x668c>
    af0c:	ldr	x0, [sp, #24]
    af10:	ldr	w0, [x0, #16]
    af14:	sxtw	x0, w0
    af18:	str	x0, [sp, #40]
    af1c:	ldr	x0, [sp, #24]
    af20:	ldr	w1, [x0, #20]
    af24:	ldr	x0, [sp, #24]
    af28:	ldr	w2, [x0, #24]
    af2c:	ldr	x0, [sp, #24]
    af30:	ldr	w0, [x0, #28]
    af34:	mov	w4, w0
    af38:	mov	w3, w2
    af3c:	mov	w2, w1
    af40:	ldr	x1, [sp, #40]
    af44:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    af48:	add	x0, x0, #0xf28
    af4c:	bl	40e0 <PyUnicode_FromFormat@plt>
    af50:	ldp	x29, x30, [sp], #48
    af54:	ret
    af58:	stp	x29, x30, [sp, #-64]!
    af5c:	mov	x29, sp
    af60:	str	x0, [sp, #40]
    af64:	str	x1, [sp, #32]
    af68:	str	x2, [sp, #24]
    af6c:	ldr	x0, [sp, #40]
    af70:	ldr	x2, [x0, #304]
    af74:	mov	x1, #0x0                   	// #0
    af78:	ldr	x0, [sp, #40]
    af7c:	blr	x2
    af80:	str	x0, [sp, #56]
    af84:	ldr	x0, [sp, #56]
    af88:	cmp	x0, #0x0
    af8c:	b.eq	afc0 <PySequence_Fast@plt+0x6730>  // b.none
    af90:	ldr	x0, [sp, #56]
    af94:	mov	w1, #0xffffffff            	// #-1
    af98:	str	w1, [x0, #16]
    af9c:	mov	w0, #0xffffffff            	// #-1
    afa0:	bl	4750 <_PyTime_FromSeconds@plt>
    afa4:	mov	x1, x0
    afa8:	ldr	x0, [sp, #56]
    afac:	str	x1, [x0, #40]
    afb0:	ldr	x0, [sp, #56]
    afb4:	adrp	x1, 4000 <memcpy@plt-0xd0>
    afb8:	add	x1, x1, #0xb38
    afbc:	str	x1, [x0, #32]
    afc0:	ldr	x0, [sp, #56]
    afc4:	ldp	x29, x30, [sp], #64
    afc8:	ret
    afcc:	stp	x29, x30, [sp, #-256]!
    afd0:	mov	x29, sp
    afd4:	str	x0, [sp, #40]
    afd8:	str	x1, [sp, #32]
    afdc:	str	x2, [sp, #24]
    afe0:	ldr	x0, [sp, #40]
    afe4:	str	x0, [sp, #240]
    afe8:	str	xzr, [sp, #216]
    afec:	mov	w0, #0xffffffff            	// #-1
    aff0:	str	w0, [sp, #252]
    aff4:	mov	w0, #0xffffffff            	// #-1
    aff8:	str	w0, [sp, #212]
    affc:	mov	w0, #0xffffffff            	// #-1
    b000:	str	w0, [sp, #208]
    b004:	mov	w0, #0xffffffff            	// #-1
    b008:	str	w0, [sp, #204]
    b00c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    b010:	add	x0, x0, #0x3fc
    b014:	str	x0, [sp, #232]
    b018:	add	x3, sp, #0xd8
    b01c:	add	x2, sp, #0xcc
    b020:	add	x1, sp, #0xd0
    b024:	add	x0, sp, #0xd4
    b028:	mov	x7, x3
    b02c:	mov	x6, x2
    b030:	mov	x5, x1
    b034:	mov	x4, x0
    b038:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    b03c:	add	x3, x0, #0xec0
    b040:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    b044:	add	x2, x0, #0xf60
    b048:	ldr	x1, [sp, #24]
    b04c:	ldr	x0, [sp, #32]
    b050:	bl	45c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    b054:	cmp	w0, #0x0
    b058:	b.ne	b064 <PySequence_Fast@plt+0x67d4>  // b.any
    b05c:	mov	w0, #0xffffffff            	// #-1
    b060:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b064:	ldr	w0, [sp, #212]
    b068:	ldr	w1, [sp, #208]
    b06c:	ldr	w2, [sp, #204]
    b070:	mov	w5, w2
    b074:	mov	w4, w1
    b078:	mov	w3, w0
    b07c:	ldr	x2, [sp, #240]
    b080:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    b084:	add	x1, x0, #0xf70
    b088:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    b08c:	add	x0, x0, #0xf78
    b090:	bl	4620 <PySys_Audit@plt>
    b094:	cmp	w0, #0x0
    b098:	b.ge	b0a4 <PySequence_Fast@plt+0x6814>  // b.tcont
    b09c:	mov	w0, #0xffffffff            	// #-1
    b0a0:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b0a4:	ldr	x0, [sp, #216]
    b0a8:	cmp	x0, #0x0
    b0ac:	b.eq	b2b4 <PySequence_Fast@plt+0x6a24>  // b.none
    b0b0:	ldr	x1, [sp, #216]
    b0b4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b0b8:	ldr	x0, [x0, #4024]
    b0bc:	cmp	x1, x0
    b0c0:	b.eq	b2b4 <PySequence_Fast@plt+0x6a24>  // b.none
    b0c4:	ldr	x0, [sp, #216]
    b0c8:	ldr	x1, [x0, #8]
    b0cc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b0d0:	ldr	x0, [x0, #3912]
    b0d4:	cmp	x1, x0
    b0d8:	b.eq	b0fc <PySequence_Fast@plt+0x686c>  // b.none
    b0dc:	ldr	x0, [sp, #216]
    b0e0:	ldr	x2, [x0, #8]
    b0e4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b0e8:	ldr	x1, [x0, #3912]
    b0ec:	mov	x0, x2
    b0f0:	bl	4780 <PyType_IsSubtype@plt>
    b0f4:	cmp	w0, #0x0
    b0f8:	b.eq	b120 <PySequence_Fast@plt+0x6890>  // b.none
    b0fc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b100:	ldr	x0, [x0, #3976]
    b104:	ldr	x2, [x0]
    b108:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    b10c:	add	x1, x0, #0xf88
    b110:	mov	x0, x2
    b114:	bl	4340 <PyErr_SetString@plt>
    b118:	mov	w0, #0xffffffff            	// #-1
    b11c:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b120:	ldr	x0, [sp, #216]
    b124:	bl	4560 <PyLong_AsLong@plt>
    b128:	str	w0, [sp, #252]
    b12c:	ldr	w0, [sp, #252]
    b130:	cmn	w0, #0x1
    b134:	b.ne	b14c <PySequence_Fast@plt+0x68bc>  // b.any
    b138:	bl	4540 <PyErr_Occurred@plt>
    b13c:	cmp	x0, #0x0
    b140:	b.eq	b14c <PySequence_Fast@plt+0x68bc>  // b.none
    b144:	mov	w0, #0xffffffff            	// #-1
    b148:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b14c:	ldr	w0, [sp, #252]
    b150:	cmp	w0, #0x0
    b154:	b.ge	b17c <PySequence_Fast@plt+0x68ec>  // b.tcont
    b158:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b15c:	ldr	x0, [x0, #3960]
    b160:	ldr	x2, [x0]
    b164:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    b168:	add	x1, x0, #0xfb0
    b16c:	mov	x0, x2
    b170:	bl	4340 <PyErr_SetString@plt>
    b174:	mov	w0, #0xffffffff            	// #-1
    b178:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b17c:	mov	w0, #0x80                  	// #128
    b180:	str	w0, [sp, #200]
    b184:	ldr	w0, [sp, #200]
    b188:	mov	w1, w0
    b18c:	add	x0, sp, #0x38
    b190:	mov	x2, x1
    b194:	mov	w1, #0x0                   	// #0
    b198:	bl	43e0 <memset@plt>
    b19c:	add	x0, sp, #0x38
    b1a0:	mov	x1, x0
    b1a4:	add	x0, sp, #0xc8
    b1a8:	mov	x2, x0
    b1ac:	ldr	w0, [sp, #252]
    b1b0:	bl	4800 <getsockname@plt>
    b1b4:	cmp	w0, #0x0
    b1b8:	b.ne	b1d4 <PySequence_Fast@plt+0x6944>  // b.any
    b1bc:	ldr	w0, [sp, #212]
    b1c0:	cmn	w0, #0x1
    b1c4:	b.ne	b20c <PySequence_Fast@plt+0x697c>  // b.any
    b1c8:	ldrh	w0, [sp, #56]
    b1cc:	str	w0, [sp, #212]
    b1d0:	b	b20c <PySequence_Fast@plt+0x697c>
    b1d4:	ldr	w0, [sp, #212]
    b1d8:	cmn	w0, #0x1
    b1dc:	b.eq	b200 <PySequence_Fast@plt+0x6970>  // b.none
    b1e0:	bl	47e0 <__errno_location@plt>
    b1e4:	ldr	w0, [x0]
    b1e8:	cmp	w0, #0x9
    b1ec:	b.eq	b200 <PySequence_Fast@plt+0x6970>  // b.none
    b1f0:	bl	47e0 <__errno_location@plt>
    b1f4:	ldr	w0, [x0]
    b1f8:	cmp	w0, #0x58
    b1fc:	b.ne	b20c <PySequence_Fast@plt+0x697c>  // b.any
    b200:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    b204:	mov	w0, #0xffffffff            	// #-1
    b208:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b20c:	ldr	w0, [sp, #208]
    b210:	cmn	w0, #0x1
    b214:	b.ne	b260 <PySequence_Fast@plt+0x69d0>  // b.any
    b218:	mov	w0, #0x4                   	// #4
    b21c:	str	w0, [sp, #192]
    b220:	add	x1, sp, #0xc0
    b224:	add	x0, sp, #0xc4
    b228:	mov	x4, x1
    b22c:	mov	x3, x0
    b230:	mov	w2, #0x3                   	// #3
    b234:	mov	w1, #0x1                   	// #1
    b238:	ldr	w0, [sp, #252]
    b23c:	bl	46b0 <getsockopt@plt>
    b240:	cmp	w0, #0x0
    b244:	b.ne	b254 <PySequence_Fast@plt+0x69c4>  // b.any
    b248:	ldr	w0, [sp, #196]
    b24c:	str	w0, [sp, #208]
    b250:	b	b260 <PySequence_Fast@plt+0x69d0>
    b254:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    b258:	mov	w0, #0xffffffff            	// #-1
    b25c:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b260:	ldr	w0, [sp, #204]
    b264:	cmn	w0, #0x1
    b268:	b.ne	b3f0 <PySequence_Fast@plt+0x6b60>  // b.any
    b26c:	mov	w0, #0x4                   	// #4
    b270:	str	w0, [sp, #184]
    b274:	add	x1, sp, #0xb8
    b278:	add	x0, sp, #0xbc
    b27c:	mov	x4, x1
    b280:	mov	x3, x0
    b284:	mov	w2, #0x26                  	// #38
    b288:	mov	w1, #0x1                   	// #1
    b28c:	ldr	w0, [sp, #252]
    b290:	bl	46b0 <getsockopt@plt>
    b294:	cmp	w0, #0x0
    b298:	b.ne	b2a8 <PySequence_Fast@plt+0x6a18>  // b.any
    b29c:	ldr	w0, [sp, #188]
    b2a0:	str	w0, [sp, #204]
    b2a4:	b	b3f0 <PySequence_Fast@plt+0x6b60>
    b2a8:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    b2ac:	mov	w0, #0xffffffff            	// #-1
    b2b0:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b2b4:	ldr	w0, [sp, #212]
    b2b8:	cmn	w0, #0x1
    b2bc:	b.ne	b2c8 <PySequence_Fast@plt+0x6a38>  // b.any
    b2c0:	mov	w0, #0x2                   	// #2
    b2c4:	str	w0, [sp, #212]
    b2c8:	ldr	w0, [sp, #208]
    b2cc:	cmn	w0, #0x1
    b2d0:	b.ne	b2dc <PySequence_Fast@plt+0x6a4c>  // b.any
    b2d4:	mov	w0, #0x1                   	// #1
    b2d8:	str	w0, [sp, #208]
    b2dc:	ldr	w0, [sp, #204]
    b2e0:	cmn	w0, #0x1
    b2e4:	b.ne	b2ec <PySequence_Fast@plt+0x6a5c>  // b.any
    b2e8:	str	wzr, [sp, #204]
    b2ec:	bl	46f0 <PyEval_SaveThread@plt>
    b2f0:	str	x0, [sp, #224]
    b2f4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    b2f8:	add	x0, x0, #0x3fc
    b2fc:	ldr	w0, [x0]
    b300:	cmp	w0, #0x0
    b304:	b.eq	b394 <PySequence_Fast@plt+0x6b04>  // b.none
    b308:	ldr	w3, [sp, #212]
    b30c:	ldr	w0, [sp, #208]
    b310:	orr	w0, w0, #0x80000
    b314:	ldr	w1, [sp, #204]
    b318:	mov	w2, w1
    b31c:	mov	w1, w0
    b320:	mov	w0, w3
    b324:	bl	4670 <socket@plt>
    b328:	str	w0, [sp, #252]
    b32c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    b330:	add	x0, x0, #0x3fc
    b334:	ldr	w0, [x0]
    b338:	cmn	w0, #0x1
    b33c:	b.ne	b3a8 <PySequence_Fast@plt+0x6b18>  // b.any
    b340:	ldr	w0, [sp, #252]
    b344:	cmp	w0, #0x0
    b348:	b.lt	b360 <PySequence_Fast@plt+0x6ad0>  // b.tstop
    b34c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    b350:	add	x0, x0, #0x3fc
    b354:	mov	w1, #0x1                   	// #1
    b358:	str	w1, [x0]
    b35c:	b	b3a8 <PySequence_Fast@plt+0x6b18>
    b360:	bl	47e0 <__errno_location@plt>
    b364:	ldr	w0, [x0]
    b368:	cmp	w0, #0x16
    b36c:	b.ne	b3a8 <PySequence_Fast@plt+0x6b18>  // b.any
    b370:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    b374:	add	x0, x0, #0x3fc
    b378:	str	wzr, [x0]
    b37c:	ldr	w0, [sp, #212]
    b380:	ldr	w1, [sp, #208]
    b384:	ldr	w2, [sp, #204]
    b388:	bl	4670 <socket@plt>
    b38c:	str	w0, [sp, #252]
    b390:	b	b3a8 <PySequence_Fast@plt+0x6b18>
    b394:	ldr	w0, [sp, #212]
    b398:	ldr	w1, [sp, #208]
    b39c:	ldr	w2, [sp, #204]
    b3a0:	bl	4670 <socket@plt>
    b3a4:	str	w0, [sp, #252]
    b3a8:	ldr	x0, [sp, #224]
    b3ac:	bl	4210 <PyEval_RestoreThread@plt>
    b3b0:	ldr	w0, [sp, #252]
    b3b4:	cmn	w0, #0x1
    b3b8:	b.ne	b3c8 <PySequence_Fast@plt+0x6b38>  // b.any
    b3bc:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    b3c0:	mov	w0, #0xffffffff            	// #-1
    b3c4:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b3c8:	ldr	x2, [sp, #232]
    b3cc:	mov	w1, #0x0                   	// #0
    b3d0:	ldr	w0, [sp, #252]
    b3d4:	bl	4290 <_Py_set_inheritable@plt>
    b3d8:	cmp	w0, #0x0
    b3dc:	b.ge	b3f4 <PySequence_Fast@plt+0x6b64>  // b.tcont
    b3e0:	ldr	w0, [sp, #252]
    b3e4:	bl	4500 <close@plt>
    b3e8:	mov	w0, #0xffffffff            	// #-1
    b3ec:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b3f0:	nop
    b3f4:	ldr	w0, [sp, #212]
    b3f8:	ldr	w1, [sp, #208]
    b3fc:	ldr	w2, [sp, #204]
    b400:	mov	w4, w2
    b404:	mov	w3, w1
    b408:	mov	w2, w0
    b40c:	ldr	w1, [sp, #252]
    b410:	ldr	x0, [sp, #240]
    b414:	bl	50e0 <PySequence_Fast@plt+0x850>
    b418:	cmn	w0, #0x1
    b41c:	b.ne	b430 <PySequence_Fast@plt+0x6ba0>  // b.any
    b420:	ldr	w0, [sp, #252]
    b424:	bl	4500 <close@plt>
    b428:	mov	w0, #0xffffffff            	// #-1
    b42c:	b	b434 <PySequence_Fast@plt+0x6ba4>
    b430:	mov	w0, #0x0                   	// #0
    b434:	ldp	x29, x30, [sp], #256
    b438:	ret
    b43c:	sub	sp, sp, #0x430
    b440:	stp	x29, x30, [sp]
    b444:	mov	x29, sp
    b448:	str	x0, [sp, #24]
    b44c:	str	x1, [sp, #16]
    b450:	mov	x1, #0x0                   	// #0
    b454:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    b458:	add	x0, x0, #0xfd0
    b45c:	bl	4620 <PySys_Audit@plt>
    b460:	cmp	w0, #0x0
    b464:	b.ge	b470 <PySequence_Fast@plt+0x6be0>  // b.tcont
    b468:	mov	x0, #0x0                   	// #0
    b46c:	b	b4b0 <PySequence_Fast@plt+0x6c20>
    b470:	bl	46f0 <PyEval_SaveThread@plt>
    b474:	str	x0, [sp, #1064]
    b478:	add	x0, sp, #0x20
    b47c:	mov	x1, #0x3ff                 	// #1023
    b480:	bl	4710 <gethostname@plt>
    b484:	str	w0, [sp, #1060]
    b488:	ldr	x0, [sp, #1064]
    b48c:	bl	4210 <PyEval_RestoreThread@plt>
    b490:	ldr	w0, [sp, #1060]
    b494:	cmp	w0, #0x0
    b498:	b.ge	b4a4 <PySequence_Fast@plt+0x6c14>  // b.tcont
    b49c:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    b4a0:	b	b4b0 <PySequence_Fast@plt+0x6c20>
    b4a4:	strb	wzr, [sp, #1055]
    b4a8:	add	x0, sp, #0x20
    b4ac:	bl	46a0 <PyUnicode_DecodeFSDefault@plt>
    b4b0:	ldp	x29, x30, [sp]
    b4b4:	add	sp, sp, #0x430
    b4b8:	ret
    b4bc:	stp	x29, x30, [sp, #-128]!
    b4c0:	mov	x29, sp
    b4c4:	str	x0, [sp, #24]
    b4c8:	str	x1, [sp, #16]
    b4cc:	str	wzr, [sp, #120]
    b4d0:	add	x0, sp, #0x70
    b4d4:	mov	x2, x0
    b4d8:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b4dc:	add	x1, x0, #0x50
    b4e0:	ldr	x0, [sp, #16]
    b4e4:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    b4e8:	cmp	w0, #0x0
    b4ec:	b.ne	b52c <PySequence_Fast@plt+0x6c9c>  // b.any
    b4f0:	bl	44d0 <PyErr_Clear@plt>
    b4f4:	add	x0, sp, #0x70
    b4f8:	mov	x3, x0
    b4fc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b500:	ldr	x2, [x0, #3936]
    b504:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b508:	add	x1, x0, #0x60
    b50c:	ldr	x0, [sp, #16]
    b510:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    b514:	cmp	w0, #0x0
    b518:	b.ne	b524 <PySequence_Fast@plt+0x6c94>  // b.any
    b51c:	mov	x0, #0x0                   	// #0
    b520:	b	b5dc <PySequence_Fast@plt+0x6d4c>
    b524:	mov	w0, #0x1                   	// #1
    b528:	str	w0, [sp, #120]
    b52c:	ldr	x0, [sp, #112]
    b530:	mov	x2, x0
    b534:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b538:	add	x1, x0, #0x70
    b53c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b540:	add	x0, x0, #0x78
    b544:	bl	4620 <PySys_Audit@plt>
    b548:	cmp	w0, #0x0
    b54c:	b.ge	b558 <PySequence_Fast@plt+0x6cc8>  // b.tcont
    b550:	mov	x0, #0x0                   	// #0
    b554:	b	b5dc <PySequence_Fast@plt+0x6d4c>
    b558:	ldr	x0, [sp, #112]
    b55c:	add	x1, sp, #0x20
    b560:	mov	w2, #0x0                   	// #0
    b564:	bl	4650 <PyObject_GetBuffer@plt>
    b568:	str	w0, [sp, #124]
    b56c:	ldr	w0, [sp, #124]
    b570:	cmp	w0, #0x0
    b574:	b.ne	b590 <PySequence_Fast@plt+0x6d00>  // b.any
    b578:	ldr	x0, [sp, #32]
    b57c:	ldr	x1, [sp, #48]
    b580:	bl	45e0 <sethostname@plt>
    b584:	str	w0, [sp, #124]
    b588:	add	x0, sp, #0x20
    b58c:	bl	4260 <PyBuffer_Release@plt>
    b590:	ldr	w0, [sp, #120]
    b594:	cmp	w0, #0x0
    b598:	b.eq	b5b4 <PySequence_Fast@plt+0x6d24>  // b.none
    b59c:	ldr	x0, [sp, #112]
    b5a0:	mov	x2, x0
    b5a4:	mov	w1, #0x1539                	// #5433
    b5a8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    b5ac:	add	x0, x0, #0xba0
    b5b0:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    b5b4:	ldr	w0, [sp, #124]
    b5b8:	cmp	w0, #0x0
    b5bc:	b.eq	b5c8 <PySequence_Fast@plt+0x6d38>  // b.none
    b5c0:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    b5c4:	b	b5dc <PySequence_Fast@plt+0x6d4c>
    b5c8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b5cc:	ldr	x0, [x0, #4024]
    b5d0:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    b5d4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b5d8:	ldr	x0, [x0, #4024]
    b5dc:	ldp	x29, x30, [sp], #128
    b5e0:	ret
    b5e4:	stp	x29, x30, [sp, #-64]!
    b5e8:	mov	x29, sp
    b5ec:	str	x0, [sp, #24]
    b5f0:	str	x1, [sp, #16]
    b5f4:	str	xzr, [sp, #56]
    b5f8:	add	x0, sp, #0x30
    b5fc:	mov	x3, x0
    b600:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    b604:	add	x2, x0, #0xcf0
    b608:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b60c:	add	x1, x0, #0x90
    b610:	ldr	x0, [sp, #16]
    b614:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    b618:	cmp	w0, #0x0
    b61c:	b.ne	b628 <PySequence_Fast@plt+0x6d98>  // b.any
    b620:	mov	x0, #0x0                   	// #0
    b624:	b	b68c <PySequence_Fast@plt+0x6dfc>
    b628:	ldr	x2, [sp, #16]
    b62c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b630:	add	x1, x0, #0xa8
    b634:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b638:	add	x0, x0, #0xb0
    b63c:	bl	4620 <PySys_Audit@plt>
    b640:	cmp	w0, #0x0
    b644:	b.lt	b674 <PySequence_Fast@plt+0x6de4>  // b.tstop
    b648:	ldr	x0, [sp, #48]
    b64c:	add	x1, sp, #0x20
    b650:	mov	w3, #0x2                   	// #2
    b654:	mov	x2, #0x10                  	// #16
    b658:	bl	525c <PySequence_Fast@plt+0x9cc>
    b65c:	cmp	w0, #0x0
    b660:	b.lt	b67c <PySequence_Fast@plt+0x6dec>  // b.tstop
    b664:	add	x0, sp, #0x20
    b668:	bl	5678 <PySequence_Fast@plt+0xde8>
    b66c:	str	x0, [sp, #56]
    b670:	b	b680 <PySequence_Fast@plt+0x6df0>
    b674:	nop
    b678:	b	b680 <PySequence_Fast@plt+0x6df0>
    b67c:	nop
    b680:	ldr	x0, [sp, #48]
    b684:	bl	4220 <PyMem_Free@plt>
    b688:	ldr	x0, [sp, #56]
    b68c:	ldp	x29, x30, [sp], #64
    b690:	ret
    b694:	stp	x29, x30, [sp, #-32]!
    b698:	mov	x29, sp
    b69c:	str	x0, [sp, #24]
    b6a0:	ldr	x0, [sp, #24]
    b6a4:	bl	46d0 <PyUnicode_FromString@plt>
    b6a8:	ldp	x29, x30, [sp], #32
    b6ac:	ret
    b6b0:	stp	x29, x30, [sp, #-160]!
    b6b4:	mov	x29, sp
    b6b8:	str	x0, [sp, #40]
    b6bc:	str	x1, [sp, #32]
    b6c0:	str	x2, [sp, #24]
    b6c4:	str	w3, [sp, #20]
    b6c8:	str	xzr, [sp, #144]
    b6cc:	str	xzr, [sp, #120]
    b6d0:	str	xzr, [sp, #136]
    b6d4:	ldr	x0, [sp, #40]
    b6d8:	cmp	x0, #0x0
    b6dc:	b.ne	b6f4 <PySequence_Fast@plt+0x6e64>  // b.any
    b6e0:	bl	4190 <__h_errno_location@plt>
    b6e4:	ldr	w0, [x0]
    b6e8:	bl	4b58 <PySequence_Fast@plt+0x2c8>
    b6ec:	mov	x0, #0x0                   	// #0
    b6f0:	b	ba48 <PySequence_Fast@plt+0x71b8>
    b6f4:	ldr	x0, [sp, #40]
    b6f8:	ldr	w0, [x0, #16]
    b6fc:	ldr	w1, [sp, #20]
    b700:	cmp	w1, w0
    b704:	b.eq	b730 <PySequence_Fast@plt+0x6ea0>  // b.none
    b708:	bl	47e0 <__errno_location@plt>
    b70c:	mov	x1, x0
    b710:	mov	w0, #0x61                  	// #97
    b714:	str	w0, [x1]
    b718:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b71c:	ldr	x0, [x0, #3984]
    b720:	ldr	x0, [x0]
    b724:	bl	4230 <PyErr_SetFromErrno@plt>
    b728:	mov	x0, #0x0                   	// #0
    b72c:	b	ba48 <PySequence_Fast@plt+0x71b8>
    b730:	ldr	w0, [sp, #20]
    b734:	cmp	w0, #0x2
    b738:	b.eq	b74c <PySequence_Fast@plt+0x6ebc>  // b.none
    b73c:	ldr	w0, [sp, #20]
    b740:	cmp	w0, #0xa
    b744:	b.eq	b760 <PySequence_Fast@plt+0x6ed0>  // b.none
    b748:	b	b780 <PySequence_Fast@plt+0x6ef0>
    b74c:	ldr	x0, [sp, #24]
    b750:	cmp	x0, #0xf
    b754:	b.hi	b774 <PySequence_Fast@plt+0x6ee4>  // b.pmore
    b758:	mov	x0, #0x0                   	// #0
    b75c:	b	ba48 <PySequence_Fast@plt+0x71b8>
    b760:	ldr	x0, [sp, #24]
    b764:	cmp	x0, #0x1b
    b768:	b.hi	b77c <PySequence_Fast@plt+0x6eec>  // b.pmore
    b76c:	mov	x0, #0x0                   	// #0
    b770:	b	ba48 <PySequence_Fast@plt+0x71b8>
    b774:	nop
    b778:	b	b780 <PySequence_Fast@plt+0x6ef0>
    b77c:	nop
    b780:	mov	x0, #0x0                   	// #0
    b784:	bl	4100 <PyList_New@plt>
    b788:	str	x0, [sp, #120]
    b78c:	ldr	x0, [sp, #120]
    b790:	cmp	x0, #0x0
    b794:	b.eq	ba00 <PySequence_Fast@plt+0x7170>  // b.none
    b798:	mov	x0, #0x0                   	// #0
    b79c:	bl	4100 <PyList_New@plt>
    b7a0:	str	x0, [sp, #136]
    b7a4:	ldr	x0, [sp, #136]
    b7a8:	cmp	x0, #0x0
    b7ac:	b.eq	ba08 <PySequence_Fast@plt+0x7178>  // b.none
    b7b0:	ldr	x0, [sp, #40]
    b7b4:	ldr	x0, [x0, #8]
    b7b8:	cmp	x0, #0x0
    b7bc:	b.eq	b838 <PySequence_Fast@plt+0x6fa8>  // b.none
    b7c0:	ldr	x0, [sp, #40]
    b7c4:	ldr	x0, [x0, #8]
    b7c8:	str	x0, [sp, #152]
    b7cc:	b	b828 <PySequence_Fast@plt+0x6f98>
    b7d0:	ldr	x0, [sp, #152]
    b7d4:	ldr	x0, [x0]
    b7d8:	bl	46d0 <PyUnicode_FromString@plt>
    b7dc:	str	x0, [sp, #128]
    b7e0:	ldr	x0, [sp, #128]
    b7e4:	cmp	x0, #0x0
    b7e8:	b.eq	ba10 <PySequence_Fast@plt+0x7180>  // b.none
    b7ec:	ldr	x1, [sp, #128]
    b7f0:	ldr	x0, [sp, #120]
    b7f4:	bl	44e0 <PyList_Append@plt>
    b7f8:	str	w0, [sp, #116]
    b7fc:	ldr	x2, [sp, #128]
    b800:	mov	w1, #0x15a2                	// #5538
    b804:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    b808:	add	x0, x0, #0xba0
    b80c:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    b810:	ldr	w0, [sp, #116]
    b814:	cmp	w0, #0x0
    b818:	b.ne	ba18 <PySequence_Fast@plt+0x7188>  // b.any
    b81c:	ldr	x0, [sp, #152]
    b820:	add	x0, x0, #0x8
    b824:	str	x0, [sp, #152]
    b828:	ldr	x0, [sp, #152]
    b82c:	ldr	x0, [x0]
    b830:	cmp	x0, #0x0
    b834:	b.ne	b7d0 <PySequence_Fast@plt+0x6f40>  // b.any
    b838:	ldr	x0, [sp, #40]
    b83c:	ldr	x0, [x0, #24]
    b840:	str	x0, [sp, #152]
    b844:	b	b9b4 <PySequence_Fast@plt+0x7124>
    b848:	ldr	w0, [sp, #20]
    b84c:	cmp	w0, #0x2
    b850:	b.eq	b864 <PySequence_Fast@plt+0x6fd4>  // b.none
    b854:	ldr	w0, [sp, #20]
    b858:	cmp	w0, #0xa
    b85c:	b.eq	b8cc <PySequence_Fast@plt+0x703c>  // b.none
    b860:	b	b93c <PySequence_Fast@plt+0x70ac>
    b864:	add	x0, sp, #0x50
    b868:	mov	x2, #0x10                  	// #16
    b86c:	mov	w1, #0x0                   	// #0
    b870:	bl	43e0 <memset@plt>
    b874:	ldr	w0, [sp, #20]
    b878:	and	w0, w0, #0xffff
    b87c:	strh	w0, [sp, #80]
    b880:	ldr	x0, [sp, #152]
    b884:	ldr	x0, [x0]
    b888:	ldr	w0, [x0]
    b88c:	str	w0, [sp, #84]
    b890:	add	x0, sp, #0x50
    b894:	bl	5678 <PySequence_Fast@plt+0xde8>
    b898:	str	x0, [sp, #128]
    b89c:	ldr	x0, [sp, #40]
    b8a0:	ldr	x0, [x0, #24]
    b8a4:	ldr	x1, [sp, #152]
    b8a8:	cmp	x1, x0
    b8ac:	b.ne	b960 <PySequence_Fast@plt+0x70d0>  // b.any
    b8b0:	ldr	x0, [sp, #24]
    b8b4:	cmp	x0, #0xf
    b8b8:	b.ls	b960 <PySequence_Fast@plt+0x70d0>  // b.plast
    b8bc:	ldp	x0, x1, [sp, #80]
    b8c0:	ldr	x2, [sp, #32]
    b8c4:	stp	x0, x1, [x2]
    b8c8:	b	b960 <PySequence_Fast@plt+0x70d0>
    b8cc:	add	x0, sp, #0x30
    b8d0:	mov	x2, #0x1c                  	// #28
    b8d4:	mov	w1, #0x0                   	// #0
    b8d8:	bl	43e0 <memset@plt>
    b8dc:	ldr	w0, [sp, #20]
    b8e0:	and	w0, w0, #0xffff
    b8e4:	strh	w0, [sp, #48]
    b8e8:	ldr	x0, [sp, #152]
    b8ec:	ldr	x0, [x0]
    b8f0:	ldp	x0, x1, [x0]
    b8f4:	stp	x0, x1, [sp, #56]
    b8f8:	add	x0, sp, #0x30
    b8fc:	bl	56d4 <PySequence_Fast@plt+0xe44>
    b900:	str	x0, [sp, #128]
    b904:	ldr	x0, [sp, #40]
    b908:	ldr	x0, [x0, #24]
    b90c:	ldr	x1, [sp, #152]
    b910:	cmp	x1, x0
    b914:	b.ne	b968 <PySequence_Fast@plt+0x70d8>  // b.any
    b918:	ldr	x0, [sp, #24]
    b91c:	cmp	x0, #0x1b
    b920:	b.ls	b968 <PySequence_Fast@plt+0x70d8>  // b.plast
    b924:	add	x0, sp, #0x30
    b928:	mov	x2, #0x1c                  	// #28
    b92c:	mov	x1, x0
    b930:	ldr	x0, [sp, #32]
    b934:	bl	40d0 <memcpy@plt>
    b938:	b	b968 <PySequence_Fast@plt+0x70d8>
    b93c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    b940:	ldr	x0, [x0, #3984]
    b944:	ldr	x2, [x0]
    b948:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    b94c:	add	x1, x0, #0xbe8
    b950:	mov	x0, x2
    b954:	bl	4340 <PyErr_SetString@plt>
    b958:	mov	x0, #0x0                   	// #0
    b95c:	b	ba48 <PySequence_Fast@plt+0x71b8>
    b960:	nop
    b964:	b	b96c <PySequence_Fast@plt+0x70dc>
    b968:	nop
    b96c:	ldr	x0, [sp, #128]
    b970:	cmp	x0, #0x0
    b974:	b.eq	ba20 <PySequence_Fast@plt+0x7190>  // b.none
    b978:	ldr	x1, [sp, #128]
    b97c:	ldr	x0, [sp, #136]
    b980:	bl	44e0 <PyList_Append@plt>
    b984:	str	w0, [sp, #100]
    b988:	ldr	x2, [sp, #128]
    b98c:	mov	w1, #0x15da                	// #5594
    b990:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    b994:	add	x0, x0, #0xba0
    b998:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    b99c:	ldr	w0, [sp, #100]
    b9a0:	cmp	w0, #0x0
    b9a4:	b.ne	ba28 <PySequence_Fast@plt+0x7198>  // b.any
    b9a8:	ldr	x0, [sp, #152]
    b9ac:	add	x0, x0, #0x8
    b9b0:	str	x0, [sp, #152]
    b9b4:	ldr	x0, [sp, #152]
    b9b8:	ldr	x0, [x0]
    b9bc:	cmp	x0, #0x0
    b9c0:	b.ne	b848 <PySequence_Fast@plt+0x6fb8>  // b.any
    b9c4:	ldr	x0, [sp, #40]
    b9c8:	ldr	x0, [x0]
    b9cc:	bl	b694 <PySequence_Fast@plt+0x6e04>
    b9d0:	str	x0, [sp, #104]
    b9d4:	ldr	x0, [sp, #104]
    b9d8:	cmp	x0, #0x0
    b9dc:	b.eq	ba30 <PySequence_Fast@plt+0x71a0>  // b.none
    b9e0:	ldr	x3, [sp, #136]
    b9e4:	ldr	x2, [sp, #120]
    b9e8:	ldr	x1, [sp, #104]
    b9ec:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    b9f0:	add	x0, x0, #0x138
    b9f4:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    b9f8:	str	x0, [sp, #144]
    b9fc:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba00:	nop
    ba04:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba08:	nop
    ba0c:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba10:	nop
    ba14:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba18:	nop
    ba1c:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba20:	nop
    ba24:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba28:	nop
    ba2c:	b	ba34 <PySequence_Fast@plt+0x71a4>
    ba30:	nop
    ba34:	ldr	x0, [sp, #120]
    ba38:	bl	4ad0 <PySequence_Fast@plt+0x240>
    ba3c:	ldr	x0, [sp, #136]
    ba40:	bl	4ad0 <PySequence_Fast@plt+0x240>
    ba44:	ldr	x0, [sp, #144]
    ba48:	ldp	x29, x30, [sp], #160
    ba4c:	ret
    ba50:	mov	x12, #0x4100                	// #16640
    ba54:	sub	sp, sp, x12
    ba58:	stp	x29, x30, [sp]
    ba5c:	mov	x29, sp
    ba60:	str	x0, [sp, #24]
    ba64:	str	x1, [sp, #16]
    ba68:	str	xzr, [sp, #16632]
    ba6c:	mov	w0, #0x3fff                	// #16383
    ba70:	add	x1, sp, #0x4, lsl #12
    ba74:	str	w0, [x1, #244]
    ba78:	add	x0, sp, #0x4, lsl #12
    ba7c:	add	x0, x0, #0xd8
    ba80:	mov	x3, x0
    ba84:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    ba88:	add	x2, x0, #0xcf0
    ba8c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    ba90:	add	x1, x0, #0x140
    ba94:	ldr	x0, [sp, #16]
    ba98:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    ba9c:	cmp	w0, #0x0
    baa0:	b.ne	baac <PySequence_Fast@plt+0x721c>  // b.any
    baa4:	mov	x0, #0x0                   	// #0
    baa8:	b	bb7c <PySequence_Fast@plt+0x72ec>
    baac:	ldr	x2, [sp, #16]
    bab0:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bab4:	add	x1, x0, #0xa8
    bab8:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    babc:	add	x0, x0, #0xb0
    bac0:	bl	4620 <PySys_Audit@plt>
    bac4:	cmp	w0, #0x0
    bac8:	b.lt	bb64 <PySequence_Fast@plt+0x72d4>  // b.tstop
    bacc:	ldr	x0, [sp, #16600]
    bad0:	add	x1, sp, #0x4, lsl #12
    bad4:	add	x1, x1, #0x50
    bad8:	mov	w3, #0x2                   	// #2
    badc:	mov	x2, #0x80                  	// #128
    bae0:	bl	525c <PySequence_Fast@plt+0x9cc>
    bae4:	cmp	w0, #0x0
    bae8:	b.lt	bb6c <PySequence_Fast@plt+0x72dc>  // b.tstop
    baec:	bl	46f0 <PyEval_SaveThread@plt>
    baf0:	str	x0, [sp, #16616]
    baf4:	ldr	x0, [sp, #16600]
    baf8:	add	x1, sp, #0x4, lsl #12
    bafc:	ldrsw	x3, [x1, #244]
    bb00:	add	x5, sp, #0x2c
    bb04:	add	x4, sp, #0x4, lsl #12
    bb08:	add	x4, x4, #0xd0
    bb0c:	add	x2, sp, #0x30
    bb10:	add	x1, sp, #0x4, lsl #12
    bb14:	add	x1, x1, #0x30
    bb18:	bl	42d0 <gethostbyname_r@plt>
    bb1c:	ldr	x0, [sp, #16616]
    bb20:	bl	4210 <PyEval_RestoreThread@plt>
    bb24:	add	x0, sp, #0x4, lsl #12
    bb28:	add	x0, x0, #0x50
    bb2c:	str	x0, [sp, #16608]
    bb30:	ldr	x4, [sp, #16592]
    bb34:	ldr	x0, [sp, #16608]
    bb38:	ldrh	w0, [x0]
    bb3c:	mov	w1, w0
    bb40:	add	x0, sp, #0x4, lsl #12
    bb44:	add	x0, x0, #0x50
    bb48:	mov	w3, w1
    bb4c:	mov	x2, #0x80                  	// #128
    bb50:	mov	x1, x0
    bb54:	mov	x0, x4
    bb58:	bl	b6b0 <PySequence_Fast@plt+0x6e20>
    bb5c:	str	x0, [sp, #16632]
    bb60:	b	bb70 <PySequence_Fast@plt+0x72e0>
    bb64:	nop
    bb68:	b	bb70 <PySequence_Fast@plt+0x72e0>
    bb6c:	nop
    bb70:	ldr	x0, [sp, #16600]
    bb74:	bl	4220 <PyMem_Free@plt>
    bb78:	ldr	x0, [sp, #16632]
    bb7c:	ldp	x29, x30, [sp]
    bb80:	mov	x12, #0x4100                	// #16640
    bb84:	add	sp, sp, x12
    bb88:	ret
    bb8c:	mov	x12, #0x4110                	// #16656
    bb90:	sub	sp, sp, x12
    bb94:	stp	x29, x30, [sp]
    bb98:	mov	x29, sp
    bb9c:	str	x0, [sp, #24]
    bba0:	str	x1, [sp, #16]
    bba4:	add	x0, sp, #0x4, lsl #12
    bba8:	add	x0, x0, #0x60
    bbac:	str	x0, [sp, #16624]
    bbb0:	str	xzr, [sp, #16648]
    bbb4:	mov	w0, #0x3fff                	// #16383
    bbb8:	add	x1, sp, #0x4, lsl #12
    bbbc:	str	w0, [x1, #236]
    bbc0:	add	x0, sp, #0x4, lsl #12
    bbc4:	add	x0, x0, #0x58
    bbc8:	mov	x3, x0
    bbcc:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    bbd0:	add	x2, x0, #0xcf0
    bbd4:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bbd8:	add	x1, x0, #0x228
    bbdc:	ldr	x0, [sp, #16]
    bbe0:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    bbe4:	cmp	w0, #0x0
    bbe8:	b.ne	bbf4 <PySequence_Fast@plt+0x7364>  // b.any
    bbec:	mov	x0, #0x0                   	// #0
    bbf0:	b	bd68 <PySequence_Fast@plt+0x74d8>
    bbf4:	ldr	x2, [sp, #16]
    bbf8:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bbfc:	add	x1, x0, #0xa8
    bc00:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bc04:	add	x0, x0, #0x240
    bc08:	bl	4620 <PySys_Audit@plt>
    bc0c:	cmp	w0, #0x0
    bc10:	b.lt	bd50 <PySequence_Fast@plt+0x74c0>  // b.tstop
    bc14:	add	x0, sp, #0x4, lsl #12
    bc18:	str	wzr, [x0, #232]
    bc1c:	ldr	x0, [sp, #16472]
    bc20:	add	x1, sp, #0x4, lsl #12
    bc24:	ldr	w3, [x1, #232]
    bc28:	mov	x2, #0x80                  	// #128
    bc2c:	ldr	x1, [sp, #16624]
    bc30:	bl	525c <PySequence_Fast@plt+0x9cc>
    bc34:	cmp	w0, #0x0
    bc38:	b.lt	bd58 <PySequence_Fast@plt+0x74c8>  // b.tstop
    bc3c:	ldr	x0, [sp, #16624]
    bc40:	ldrh	w0, [x0]
    bc44:	add	x1, sp, #0x4, lsl #12
    bc48:	str	w0, [x1, #232]
    bc4c:	str	xzr, [sp, #16640]
    bc50:	add	x0, sp, #0x4, lsl #12
    bc54:	ldr	w0, [x0, #232]
    bc58:	cmp	w0, #0x2
    bc5c:	b.eq	bc74 <PySequence_Fast@plt+0x73e4>  // b.none
    bc60:	add	x0, sp, #0x4, lsl #12
    bc64:	ldr	w0, [x0, #232]
    bc68:	cmp	w0, #0xa
    bc6c:	b.eq	bc90 <PySequence_Fast@plt+0x7400>  // b.none
    bc70:	b	bcac <PySequence_Fast@plt+0x741c>
    bc74:	ldr	x0, [sp, #16624]
    bc78:	add	x0, x0, #0x4
    bc7c:	str	x0, [sp, #16640]
    bc80:	mov	w0, #0x4                   	// #4
    bc84:	add	x1, sp, #0x4, lsl #12
    bc88:	str	w0, [x1, #252]
    bc8c:	b	bccc <PySequence_Fast@plt+0x743c>
    bc90:	ldr	x0, [sp, #16624]
    bc94:	add	x0, x0, #0x8
    bc98:	str	x0, [sp, #16640]
    bc9c:	mov	w0, #0x10                  	// #16
    bca0:	add	x1, sp, #0x4, lsl #12
    bca4:	str	w0, [x1, #252]
    bca8:	b	bccc <PySequence_Fast@plt+0x743c>
    bcac:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    bcb0:	ldr	x0, [x0, #3984]
    bcb4:	ldr	x2, [x0]
    bcb8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    bcbc:	add	x1, x0, #0xbe8
    bcc0:	mov	x0, x2
    bcc4:	bl	4340 <PyErr_SetString@plt>
    bcc8:	b	bd5c <PySequence_Fast@plt+0x74cc>
    bccc:	bl	46f0 <PyEval_SaveThread@plt>
    bcd0:	str	x0, [sp, #16608]
    bcd4:	add	x0, sp, #0x4, lsl #12
    bcd8:	ldr	w0, [x0, #252]
    bcdc:	add	x1, sp, #0x4, lsl #12
    bce0:	ldrsw	x3, [x1, #236]
    bce4:	add	x5, sp, #0x2c
    bce8:	add	x4, sp, #0x4, lsl #12
    bcec:	add	x4, x4, #0x50
    bcf0:	add	x2, sp, #0x30
    bcf4:	add	x1, sp, #0x4, lsl #12
    bcf8:	add	x1, x1, #0x30
    bcfc:	mov	x7, x5
    bd00:	mov	x6, x4
    bd04:	mov	x5, x3
    bd08:	mov	x4, x2
    bd0c:	mov	x3, x1
    bd10:	add	x1, sp, #0x4, lsl #12
    bd14:	ldr	w2, [x1, #232]
    bd18:	mov	w1, w0
    bd1c:	ldr	x0, [sp, #16640]
    bd20:	bl	4310 <gethostbyaddr_r@plt>
    bd24:	ldr	x0, [sp, #16608]
    bd28:	bl	4210 <PyEval_RestoreThread@plt>
    bd2c:	ldr	x0, [sp, #16464]
    bd30:	add	x1, sp, #0x4, lsl #12
    bd34:	add	x1, x1, #0x60
    bd38:	add	x2, sp, #0x4, lsl #12
    bd3c:	ldr	w3, [x2, #232]
    bd40:	mov	x2, #0x80                  	// #128
    bd44:	bl	b6b0 <PySequence_Fast@plt+0x6e20>
    bd48:	str	x0, [sp, #16648]
    bd4c:	b	bd5c <PySequence_Fast@plt+0x74cc>
    bd50:	nop
    bd54:	b	bd5c <PySequence_Fast@plt+0x74cc>
    bd58:	nop
    bd5c:	ldr	x0, [sp, #16472]
    bd60:	bl	4220 <PyMem_Free@plt>
    bd64:	ldr	x0, [sp, #16648]
    bd68:	ldp	x29, x30, [sp]
    bd6c:	mov	x12, #0x4110                	// #16656
    bd70:	add	sp, sp, x12
    bd74:	ret
    bd78:	stp	x29, x30, [sp, #-64]!
    bd7c:	mov	x29, sp
    bd80:	str	x0, [sp, #24]
    bd84:	str	x1, [sp, #16]
    bd88:	str	xzr, [sp, #32]
    bd8c:	add	x1, sp, #0x20
    bd90:	add	x0, sp, #0x28
    bd94:	mov	x3, x1
    bd98:	mov	x2, x0
    bd9c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bda0:	add	x1, x0, #0x328
    bda4:	ldr	x0, [sp, #16]
    bda8:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    bdac:	cmp	w0, #0x0
    bdb0:	b.ne	bdbc <PySequence_Fast@plt+0x752c>  // b.any
    bdb4:	mov	x0, #0x0                   	// #0
    bdb8:	b	be5c <PySequence_Fast@plt+0x75cc>
    bdbc:	ldr	x0, [sp, #40]
    bdc0:	ldr	x1, [sp, #32]
    bdc4:	mov	x3, x1
    bdc8:	mov	x2, x0
    bdcc:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bdd0:	add	x1, x0, #0x340
    bdd4:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bdd8:	add	x0, x0, #0x348
    bddc:	bl	4620 <PySys_Audit@plt>
    bde0:	cmp	w0, #0x0
    bde4:	b.ge	bdf0 <PySequence_Fast@plt+0x7560>  // b.tcont
    bde8:	mov	x0, #0x0                   	// #0
    bdec:	b	be5c <PySequence_Fast@plt+0x75cc>
    bdf0:	bl	46f0 <PyEval_SaveThread@plt>
    bdf4:	str	x0, [sp, #56]
    bdf8:	ldr	x0, [sp, #40]
    bdfc:	ldr	x1, [sp, #32]
    be00:	bl	4820 <getservbyname@plt>
    be04:	str	x0, [sp, #48]
    be08:	ldr	x0, [sp, #56]
    be0c:	bl	4210 <PyEval_RestoreThread@plt>
    be10:	ldr	x0, [sp, #48]
    be14:	cmp	x0, #0x0
    be18:	b.ne	be40 <PySequence_Fast@plt+0x75b0>  // b.any
    be1c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    be20:	ldr	x0, [x0, #3984]
    be24:	ldr	x2, [x0]
    be28:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    be2c:	add	x1, x0, #0x360
    be30:	mov	x0, x2
    be34:	bl	4340 <PyErr_SetString@plt>
    be38:	mov	x0, #0x0                   	// #0
    be3c:	b	be5c <PySequence_Fast@plt+0x75cc>
    be40:	ldr	x0, [sp, #48]
    be44:	ldr	w0, [x0, #16]
    be48:	and	w0, w0, #0xffff
    be4c:	bl	4330 <ntohs@plt>
    be50:	and	w0, w0, #0xffff
    be54:	and	x0, x0, #0xffff
    be58:	bl	4480 <PyLong_FromLong@plt>
    be5c:	ldp	x29, x30, [sp], #64
    be60:	ret
    be64:	stp	x29, x30, [sp, #-64]!
    be68:	mov	x29, sp
    be6c:	str	x0, [sp, #24]
    be70:	str	x1, [sp, #16]
    be74:	str	xzr, [sp, #32]
    be78:	add	x1, sp, #0x20
    be7c:	add	x0, sp, #0x2c
    be80:	mov	x3, x1
    be84:	mov	x2, x0
    be88:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    be8c:	add	x1, x0, #0x450
    be90:	ldr	x0, [sp, #16]
    be94:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    be98:	cmp	w0, #0x0
    be9c:	b.ne	bea8 <PySequence_Fast@plt+0x7618>  // b.any
    bea0:	mov	x0, #0x0                   	// #0
    bea4:	b	bf90 <PySequence_Fast@plt+0x7700>
    bea8:	ldr	w0, [sp, #44]
    beac:	cmp	w0, #0x0
    beb0:	b.lt	bec4 <PySequence_Fast@plt+0x7634>  // b.tstop
    beb4:	ldr	w1, [sp, #44]
    beb8:	mov	w0, #0xffff                	// #65535
    bebc:	cmp	w1, w0
    bec0:	b.le	bee8 <PySequence_Fast@plt+0x7658>
    bec4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    bec8:	ldr	x0, [x0, #4008]
    becc:	ldr	x2, [x0]
    bed0:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bed4:	add	x1, x0, #0x468
    bed8:	mov	x0, x2
    bedc:	bl	4340 <PyErr_SetString@plt>
    bee0:	mov	x0, #0x0                   	// #0
    bee4:	b	bf90 <PySequence_Fast@plt+0x7700>
    bee8:	ldr	w0, [sp, #44]
    beec:	ldr	x1, [sp, #32]
    bef0:	mov	x3, x1
    bef4:	mov	w2, w0
    bef8:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    befc:	add	x1, x0, #0x490
    bf00:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bf04:	add	x0, x0, #0x498
    bf08:	bl	4620 <PySys_Audit@plt>
    bf0c:	cmp	w0, #0x0
    bf10:	b.ge	bf1c <PySequence_Fast@plt+0x768c>  // b.tcont
    bf14:	mov	x0, #0x0                   	// #0
    bf18:	b	bf90 <PySequence_Fast@plt+0x7700>
    bf1c:	bl	46f0 <PyEval_SaveThread@plt>
    bf20:	str	x0, [sp, #56]
    bf24:	ldr	w0, [sp, #44]
    bf28:	and	w0, w0, #0xffff
    bf2c:	bl	44c0 <htons@plt>
    bf30:	and	w0, w0, #0xffff
    bf34:	mov	w2, w0
    bf38:	ldr	x0, [sp, #32]
    bf3c:	mov	x1, x0
    bf40:	mov	w0, w2
    bf44:	bl	4530 <getservbyport@plt>
    bf48:	str	x0, [sp, #48]
    bf4c:	ldr	x0, [sp, #56]
    bf50:	bl	4210 <PyEval_RestoreThread@plt>
    bf54:	ldr	x0, [sp, #48]
    bf58:	cmp	x0, #0x0
    bf5c:	b.ne	bf84 <PySequence_Fast@plt+0x76f4>  // b.any
    bf60:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    bf64:	ldr	x0, [x0, #3984]
    bf68:	ldr	x2, [x0]
    bf6c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bf70:	add	x1, x0, #0x4b0
    bf74:	mov	x0, x2
    bf78:	bl	4340 <PyErr_SetString@plt>
    bf7c:	mov	x0, #0x0                   	// #0
    bf80:	b	bf90 <PySequence_Fast@plt+0x7700>
    bf84:	ldr	x0, [sp, #48]
    bf88:	ldr	x0, [x0]
    bf8c:	bl	46d0 <PyUnicode_FromString@plt>
    bf90:	ldp	x29, x30, [sp], #64
    bf94:	ret
    bf98:	stp	x29, x30, [sp, #-64]!
    bf9c:	mov	x29, sp
    bfa0:	str	x0, [sp, #24]
    bfa4:	str	x1, [sp, #16]
    bfa8:	add	x0, sp, #0x28
    bfac:	mov	x2, x0
    bfb0:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    bfb4:	add	x1, x0, #0x598
    bfb8:	ldr	x0, [sp, #16]
    bfbc:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    bfc0:	cmp	w0, #0x0
    bfc4:	b.ne	bfd0 <PySequence_Fast@plt+0x7740>  // b.any
    bfc8:	mov	x0, #0x0                   	// #0
    bfcc:	b	c02c <PySequence_Fast@plt+0x779c>
    bfd0:	bl	46f0 <PyEval_SaveThread@plt>
    bfd4:	str	x0, [sp, #56]
    bfd8:	ldr	x0, [sp, #40]
    bfdc:	bl	42a0 <getprotobyname@plt>
    bfe0:	str	x0, [sp, #48]
    bfe4:	ldr	x0, [sp, #56]
    bfe8:	bl	4210 <PyEval_RestoreThread@plt>
    bfec:	ldr	x0, [sp, #48]
    bff0:	cmp	x0, #0x0
    bff4:	b.ne	c01c <PySequence_Fast@plt+0x778c>  // b.any
    bff8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    bffc:	ldr	x0, [x0, #3984]
    c000:	ldr	x2, [x0]
    c004:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c008:	add	x1, x0, #0x5b0
    c00c:	mov	x0, x2
    c010:	bl	4340 <PyErr_SetString@plt>
    c014:	mov	x0, #0x0                   	// #0
    c018:	b	c02c <PySequence_Fast@plt+0x779c>
    c01c:	ldr	x0, [sp, #48]
    c020:	ldr	w0, [x0, #16]
    c024:	sxtw	x0, w0
    c028:	bl	4480 <PyLong_FromLong@plt>
    c02c:	ldp	x29, x30, [sp], #64
    c030:	ret
    c034:	stp	x29, x30, [sp, #-64]!
    c038:	mov	x29, sp
    c03c:	str	x0, [sp, #24]
    c040:	str	x1, [sp, #16]
    c044:	ldr	x0, [sp, #16]
    c048:	bl	4560 <PyLong_AsLong@plt>
    c04c:	str	w0, [sp, #60]
    c050:	ldr	w0, [sp, #60]
    c054:	cmn	w0, #0x1
    c058:	b.ne	c070 <PySequence_Fast@plt+0x77e0>  // b.any
    c05c:	bl	4540 <PyErr_Occurred@plt>
    c060:	cmp	x0, #0x0
    c064:	b.eq	c070 <PySequence_Fast@plt+0x77e0>  // b.none
    c068:	mov	x0, #0x0                   	// #0
    c06c:	b	c0c4 <PySequence_Fast@plt+0x7834>
    c070:	bl	46f0 <PyEval_SaveThread@plt>
    c074:	str	x0, [sp, #48]
    c078:	ldr	w0, [sp, #60]
    c07c:	bl	4500 <close@plt>
    c080:	str	w0, [sp, #44]
    c084:	ldr	x0, [sp, #48]
    c088:	bl	4210 <PyEval_RestoreThread@plt>
    c08c:	ldr	w0, [sp, #44]
    c090:	cmp	w0, #0x0
    c094:	b.ge	c0b0 <PySequence_Fast@plt+0x7820>  // b.tcont
    c098:	bl	47e0 <__errno_location@plt>
    c09c:	ldr	w0, [x0]
    c0a0:	cmp	w0, #0x68
    c0a4:	b.eq	c0b0 <PySequence_Fast@plt+0x7820>  // b.none
    c0a8:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    c0ac:	b	c0c4 <PySequence_Fast@plt+0x7834>
    c0b0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c0b4:	ldr	x0, [x0, #4024]
    c0b8:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    c0bc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c0c0:	ldr	x0, [x0, #4024]
    c0c4:	ldp	x29, x30, [sp], #64
    c0c8:	ret
    c0cc:	stp	x29, x30, [sp, #-48]!
    c0d0:	mov	x29, sp
    c0d4:	str	x0, [sp, #24]
    c0d8:	str	x1, [sp, #16]
    c0dc:	ldr	x0, [sp, #16]
    c0e0:	bl	4560 <PyLong_AsLong@plt>
    c0e4:	str	w0, [sp, #44]
    c0e8:	ldr	w0, [sp, #44]
    c0ec:	cmn	w0, #0x1
    c0f0:	b.ne	c108 <PySequence_Fast@plt+0x7878>  // b.any
    c0f4:	bl	4540 <PyErr_Occurred@plt>
    c0f8:	cmp	x0, #0x0
    c0fc:	b.eq	c108 <PySequence_Fast@plt+0x7878>  // b.none
    c100:	mov	x0, #0x0                   	// #0
    c104:	b	c14c <PySequence_Fast@plt+0x78bc>
    c108:	ldr	w0, [sp, #44]
    c10c:	bl	45f0 <_Py_dup@plt>
    c110:	str	w0, [sp, #40]
    c114:	ldr	w0, [sp, #40]
    c118:	cmn	w0, #0x1
    c11c:	b.ne	c128 <PySequence_Fast@plt+0x7898>  // b.any
    c120:	mov	x0, #0x0                   	// #0
    c124:	b	c14c <PySequence_Fast@plt+0x78bc>
    c128:	ldrsw	x0, [sp, #40]
    c12c:	bl	4480 <PyLong_FromLong@plt>
    c130:	str	x0, [sp, #32]
    c134:	ldr	x0, [sp, #32]
    c138:	cmp	x0, #0x0
    c13c:	b.ne	c148 <PySequence_Fast@plt+0x78b8>  // b.any
    c140:	ldr	w0, [sp, #40]
    c144:	bl	4500 <close@plt>
    c148:	ldr	x0, [sp, #32]
    c14c:	ldp	x29, x30, [sp], #48
    c150:	ret
    c154:	stp	x29, x30, [sp, #-112]!
    c158:	mov	x29, sp
    c15c:	str	x0, [sp, #24]
    c160:	str	x1, [sp, #16]
    c164:	str	xzr, [sp, #104]
    c168:	str	xzr, [sp, #96]
    c16c:	mov	w0, #0x1                   	// #1
    c170:	str	w0, [sp, #48]
    c174:	str	wzr, [sp, #44]
    c178:	str	xzr, [sp, #88]
    c17c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    c180:	add	x0, x0, #0x3fc
    c184:	str	x0, [sp, #72]
    c188:	mov	w0, #0x1                   	// #1
    c18c:	str	w0, [sp, #52]
    c190:	add	x2, sp, #0x2c
    c194:	add	x1, sp, #0x30
    c198:	add	x0, sp, #0x34
    c19c:	mov	x4, x2
    c1a0:	mov	x3, x1
    c1a4:	mov	x2, x0
    c1a8:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c1ac:	add	x1, x0, #0x7a0
    c1b0:	ldr	x0, [sp, #16]
    c1b4:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c1b8:	cmp	w0, #0x0
    c1bc:	b.ne	c1c8 <PySequence_Fast@plt+0x7938>  // b.any
    c1c0:	mov	x0, #0x0                   	// #0
    c1c4:	b	c3a4 <PySequence_Fast@plt+0x7b14>
    c1c8:	bl	46f0 <PyEval_SaveThread@plt>
    c1cc:	str	x0, [sp, #64]
    c1d0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    c1d4:	add	x0, x0, #0x3fc
    c1d8:	ldr	w0, [x0]
    c1dc:	cmp	w0, #0x0
    c1e0:	b.eq	c27c <PySequence_Fast@plt+0x79ec>  // b.none
    c1e4:	ldr	w4, [sp, #52]
    c1e8:	ldr	w0, [sp, #48]
    c1ec:	orr	w0, w0, #0x80000
    c1f0:	ldr	w1, [sp, #44]
    c1f4:	add	x2, sp, #0x38
    c1f8:	mov	x3, x2
    c1fc:	mov	w2, w1
    c200:	mov	w1, w0
    c204:	mov	w0, w4
    c208:	bl	47b0 <socketpair@plt>
    c20c:	str	w0, [sp, #84]
    c210:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    c214:	add	x0, x0, #0x3fc
    c218:	ldr	w0, [x0]
    c21c:	cmn	w0, #0x1
    c220:	b.ne	c294 <PySequence_Fast@plt+0x7a04>  // b.any
    c224:	ldr	w0, [sp, #84]
    c228:	cmp	w0, #0x0
    c22c:	b.lt	c244 <PySequence_Fast@plt+0x79b4>  // b.tstop
    c230:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    c234:	add	x0, x0, #0x3fc
    c238:	mov	w1, #0x1                   	// #1
    c23c:	str	w1, [x0]
    c240:	b	c294 <PySequence_Fast@plt+0x7a04>
    c244:	bl	47e0 <__errno_location@plt>
    c248:	ldr	w0, [x0]
    c24c:	cmp	w0, #0x16
    c250:	b.ne	c294 <PySequence_Fast@plt+0x7a04>  // b.any
    c254:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    c258:	add	x0, x0, #0x3fc
    c25c:	str	wzr, [x0]
    c260:	ldr	w0, [sp, #52]
    c264:	ldr	w1, [sp, #48]
    c268:	ldr	w2, [sp, #44]
    c26c:	add	x3, sp, #0x38
    c270:	bl	47b0 <socketpair@plt>
    c274:	str	w0, [sp, #84]
    c278:	b	c294 <PySequence_Fast@plt+0x7a04>
    c27c:	ldr	w0, [sp, #52]
    c280:	ldr	w1, [sp, #48]
    c284:	ldr	w2, [sp, #44]
    c288:	add	x3, sp, #0x38
    c28c:	bl	47b0 <socketpair@plt>
    c290:	str	w0, [sp, #84]
    c294:	ldr	x0, [sp, #64]
    c298:	bl	4210 <PyEval_RestoreThread@plt>
    c29c:	ldr	w0, [sp, #84]
    c2a0:	cmp	w0, #0x0
    c2a4:	b.ge	c2b0 <PySequence_Fast@plt+0x7a20>  // b.tcont
    c2a8:	bl	4b38 <PySequence_Fast@plt+0x2a8>
    c2ac:	b	c3a4 <PySequence_Fast@plt+0x7b14>
    c2b0:	ldr	w0, [sp, #56]
    c2b4:	ldr	x2, [sp, #72]
    c2b8:	mov	w1, #0x0                   	// #0
    c2bc:	bl	4290 <_Py_set_inheritable@plt>
    c2c0:	cmp	w0, #0x0
    c2c4:	b.lt	c340 <PySequence_Fast@plt+0x7ab0>  // b.tstop
    c2c8:	ldr	w0, [sp, #60]
    c2cc:	ldr	x2, [sp, #72]
    c2d0:	mov	w1, #0x0                   	// #0
    c2d4:	bl	4290 <_Py_set_inheritable@plt>
    c2d8:	cmp	w0, #0x0
    c2dc:	b.lt	c348 <PySequence_Fast@plt+0x7ab8>  // b.tstop
    c2e0:	ldr	w0, [sp, #56]
    c2e4:	ldr	w1, [sp, #52]
    c2e8:	ldr	w2, [sp, #48]
    c2ec:	ldr	w3, [sp, #44]
    c2f0:	bl	51d0 <PySequence_Fast@plt+0x940>
    c2f4:	str	x0, [sp, #104]
    c2f8:	ldr	x0, [sp, #104]
    c2fc:	cmp	x0, #0x0
    c300:	b.eq	c350 <PySequence_Fast@plt+0x7ac0>  // b.none
    c304:	ldr	w0, [sp, #60]
    c308:	ldr	w1, [sp, #52]
    c30c:	ldr	w2, [sp, #48]
    c310:	ldr	w3, [sp, #44]
    c314:	bl	51d0 <PySequence_Fast@plt+0x940>
    c318:	str	x0, [sp, #96]
    c31c:	ldr	x0, [sp, #96]
    c320:	cmp	x0, #0x0
    c324:	b.eq	c358 <PySequence_Fast@plt+0x7ac8>  // b.none
    c328:	ldr	x2, [sp, #96]
    c32c:	ldr	x1, [sp, #104]
    c330:	mov	x0, #0x2                   	// #2
    c334:	bl	4850 <PyTuple_Pack@plt>
    c338:	str	x0, [sp, #88]
    c33c:	b	c35c <PySequence_Fast@plt+0x7acc>
    c340:	nop
    c344:	b	c35c <PySequence_Fast@plt+0x7acc>
    c348:	nop
    c34c:	b	c35c <PySequence_Fast@plt+0x7acc>
    c350:	nop
    c354:	b	c35c <PySequence_Fast@plt+0x7acc>
    c358:	nop
    c35c:	ldr	x0, [sp, #88]
    c360:	cmp	x0, #0x0
    c364:	b.ne	c390 <PySequence_Fast@plt+0x7b00>  // b.any
    c368:	ldr	x0, [sp, #104]
    c36c:	cmp	x0, #0x0
    c370:	b.ne	c37c <PySequence_Fast@plt+0x7aec>  // b.any
    c374:	ldr	w0, [sp, #56]
    c378:	bl	4500 <close@plt>
    c37c:	ldr	x0, [sp, #96]
    c380:	cmp	x0, #0x0
    c384:	b.ne	c390 <PySequence_Fast@plt+0x7b00>  // b.any
    c388:	ldr	w0, [sp, #60]
    c38c:	bl	4500 <close@plt>
    c390:	ldr	x0, [sp, #104]
    c394:	bl	4ad0 <PySequence_Fast@plt+0x240>
    c398:	ldr	x0, [sp, #96]
    c39c:	bl	4ad0 <PySequence_Fast@plt+0x240>
    c3a0:	ldr	x0, [sp, #88]
    c3a4:	ldp	x29, x30, [sp], #112
    c3a8:	ret
    c3ac:	stp	x29, x30, [sp, #-48]!
    c3b0:	mov	x29, sp
    c3b4:	str	x0, [sp, #24]
    c3b8:	str	x1, [sp, #16]
    c3bc:	add	x0, sp, #0x2c
    c3c0:	mov	x2, x0
    c3c4:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c3c8:	add	x1, x0, #0x8f0
    c3cc:	ldr	x0, [sp, #16]
    c3d0:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c3d4:	cmp	w0, #0x0
    c3d8:	b.ne	c3e4 <PySequence_Fast@plt+0x7b54>  // b.any
    c3dc:	mov	x0, #0x0                   	// #0
    c3e0:	b	c46c <PySequence_Fast@plt+0x7bdc>
    c3e4:	ldr	w0, [sp, #44]
    c3e8:	cmp	w0, #0x0
    c3ec:	b.ge	c414 <PySequence_Fast@plt+0x7b84>  // b.tcont
    c3f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c3f4:	ldr	x0, [x0, #4008]
    c3f8:	ldr	x2, [x0]
    c3fc:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c400:	add	x1, x0, #0x8f8
    c404:	mov	x0, x2
    c408:	bl	4340 <PyErr_SetString@plt>
    c40c:	mov	x0, #0x0                   	// #0
    c410:	b	c46c <PySequence_Fast@plt+0x7bdc>
    c414:	ldr	w1, [sp, #44]
    c418:	mov	w0, #0xffff                	// #65535
    c41c:	cmp	w1, w0
    c420:	b.le	c454 <PySequence_Fast@plt+0x7bc4>
    c424:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c428:	ldr	x0, [x0, #3968]
    c42c:	ldr	x3, [x0]
    c430:	mov	x2, #0x1                   	// #1
    c434:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c438:	add	x1, x0, #0x940
    c43c:	mov	x0, x3
    c440:	bl	42c0 <PyErr_WarnEx@plt>
    c444:	cmp	w0, #0x0
    c448:	b.eq	c454 <PySequence_Fast@plt+0x7bc4>  // b.none
    c44c:	mov	x0, #0x0                   	// #0
    c450:	b	c46c <PySequence_Fast@plt+0x7bdc>
    c454:	ldr	w0, [sp, #44]
    c458:	and	w0, w0, #0xffff
    c45c:	bl	4330 <ntohs@plt>
    c460:	and	w0, w0, #0xffff
    c464:	and	x0, x0, #0xffff
    c468:	bl	4680 <PyLong_FromUnsignedLong@plt>
    c46c:	ldp	x29, x30, [sp], #48
    c470:	ret
    c474:	stp	x29, x30, [sp, #-48]!
    c478:	mov	x29, sp
    c47c:	str	x0, [sp, #24]
    c480:	str	x1, [sp, #16]
    c484:	ldr	x0, [sp, #16]
    c488:	ldr	x0, [x0, #8]
    c48c:	ldr	x0, [x0, #168]
    c490:	and	x0, x0, #0x1000000
    c494:	cmp	x0, #0x0
    c498:	b.eq	c520 <PySequence_Fast@plt+0x7c90>  // b.none
    c49c:	ldr	x0, [sp, #16]
    c4a0:	bl	4660 <PyLong_AsUnsignedLong@plt>
    c4a4:	str	x0, [sp, #40]
    c4a8:	ldr	x0, [sp, #40]
    c4ac:	cmn	x0, #0x1
    c4b0:	b.ne	c4c8 <PySequence_Fast@plt+0x7c38>  // b.any
    c4b4:	bl	4540 <PyErr_Occurred@plt>
    c4b8:	cmp	x0, #0x0
    c4bc:	b.eq	c4c8 <PySequence_Fast@plt+0x7c38>  // b.none
    c4c0:	mov	x0, #0x0                   	// #0
    c4c4:	b	c54c <PySequence_Fast@plt+0x7cbc>
    c4c8:	ldr	x0, [sp, #40]
    c4cc:	and	x0, x0, #0xffffffff
    c4d0:	str	x0, [sp, #32]
    c4d4:	ldr	x1, [sp, #32]
    c4d8:	ldr	x0, [sp, #40]
    c4dc:	cmp	x1, x0
    c4e0:	b.eq	c504 <PySequence_Fast@plt+0x7c74>  // b.none
    c4e4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c4e8:	ldr	x0, [x0, #4008]
    c4ec:	ldr	x2, [x0]
    c4f0:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c4f4:	add	x1, x0, #0xb28
    c4f8:	mov	x0, x2
    c4fc:	bl	47a0 <PyErr_Format@plt>
    c500:	b	c54c <PySequence_Fast@plt+0x7cbc>
    c504:	ldr	x0, [sp, #32]
    c508:	str	x0, [sp, #40]
    c50c:	ldr	x0, [sp, #40]
    c510:	bl	4250 <ntohl@plt>
    c514:	mov	w0, w0
    c518:	bl	4680 <PyLong_FromUnsignedLong@plt>
    c51c:	b	c54c <PySequence_Fast@plt+0x7cbc>
    c520:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c524:	ldr	x0, [x0, #3976]
    c528:	ldr	x3, [x0]
    c52c:	ldr	x0, [sp, #16]
    c530:	ldr	x0, [x0, #8]
    c534:	ldr	x0, [x0, #24]
    c538:	mov	x2, x0
    c53c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c540:	add	x1, x0, #0xb40
    c544:	mov	x0, x3
    c548:	bl	47a0 <PyErr_Format@plt>
    c54c:	ldp	x29, x30, [sp], #48
    c550:	ret
    c554:	stp	x29, x30, [sp, #-48]!
    c558:	mov	x29, sp
    c55c:	str	x0, [sp, #24]
    c560:	str	x1, [sp, #16]
    c564:	add	x0, sp, #0x2c
    c568:	mov	x2, x0
    c56c:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c570:	add	x1, x0, #0xbb0
    c574:	ldr	x0, [sp, #16]
    c578:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c57c:	cmp	w0, #0x0
    c580:	b.ne	c58c <PySequence_Fast@plt+0x7cfc>  // b.any
    c584:	mov	x0, #0x0                   	// #0
    c588:	b	c614 <PySequence_Fast@plt+0x7d84>
    c58c:	ldr	w0, [sp, #44]
    c590:	cmp	w0, #0x0
    c594:	b.ge	c5bc <PySequence_Fast@plt+0x7d2c>  // b.tcont
    c598:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c59c:	ldr	x0, [x0, #4008]
    c5a0:	ldr	x2, [x0]
    c5a4:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c5a8:	add	x1, x0, #0xbb8
    c5ac:	mov	x0, x2
    c5b0:	bl	4340 <PyErr_SetString@plt>
    c5b4:	mov	x0, #0x0                   	// #0
    c5b8:	b	c614 <PySequence_Fast@plt+0x7d84>
    c5bc:	ldr	w1, [sp, #44]
    c5c0:	mov	w0, #0xffff                	// #65535
    c5c4:	cmp	w1, w0
    c5c8:	b.le	c5fc <PySequence_Fast@plt+0x7d6c>
    c5cc:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c5d0:	ldr	x0, [x0, #3968]
    c5d4:	ldr	x3, [x0]
    c5d8:	mov	x2, #0x1                   	// #1
    c5dc:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c5e0:	add	x1, x0, #0xc00
    c5e4:	mov	x0, x3
    c5e8:	bl	42c0 <PyErr_WarnEx@plt>
    c5ec:	cmp	w0, #0x0
    c5f0:	b.eq	c5fc <PySequence_Fast@plt+0x7d6c>  // b.none
    c5f4:	mov	x0, #0x0                   	// #0
    c5f8:	b	c614 <PySequence_Fast@plt+0x7d84>
    c5fc:	ldr	w0, [sp, #44]
    c600:	and	w0, w0, #0xffff
    c604:	bl	44c0 <htons@plt>
    c608:	and	w0, w0, #0xffff
    c60c:	and	x0, x0, #0xffff
    c610:	bl	4680 <PyLong_FromUnsignedLong@plt>
    c614:	ldp	x29, x30, [sp], #48
    c618:	ret
    c61c:	stp	x29, x30, [sp, #-48]!
    c620:	mov	x29, sp
    c624:	str	x0, [sp, #24]
    c628:	str	x1, [sp, #16]
    c62c:	ldr	x0, [sp, #16]
    c630:	ldr	x0, [x0, #8]
    c634:	ldr	x0, [x0, #168]
    c638:	and	x0, x0, #0x1000000
    c63c:	cmp	x0, #0x0
    c640:	b.eq	c6c8 <PySequence_Fast@plt+0x7e38>  // b.none
    c644:	ldr	x0, [sp, #16]
    c648:	bl	4660 <PyLong_AsUnsignedLong@plt>
    c64c:	str	x0, [sp, #40]
    c650:	ldr	x0, [sp, #40]
    c654:	cmn	x0, #0x1
    c658:	b.ne	c670 <PySequence_Fast@plt+0x7de0>  // b.any
    c65c:	bl	4540 <PyErr_Occurred@plt>
    c660:	cmp	x0, #0x0
    c664:	b.eq	c670 <PySequence_Fast@plt+0x7de0>  // b.none
    c668:	mov	x0, #0x0                   	// #0
    c66c:	b	c6f4 <PySequence_Fast@plt+0x7e64>
    c670:	ldr	x0, [sp, #40]
    c674:	and	x0, x0, #0xffffffff
    c678:	str	x0, [sp, #32]
    c67c:	ldr	x1, [sp, #32]
    c680:	ldr	x0, [sp, #40]
    c684:	cmp	x1, x0
    c688:	b.eq	c6ac <PySequence_Fast@plt+0x7e1c>  // b.none
    c68c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c690:	ldr	x0, [x0, #4008]
    c694:	ldr	x2, [x0]
    c698:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c69c:	add	x1, x0, #0xb28
    c6a0:	mov	x0, x2
    c6a4:	bl	47a0 <PyErr_Format@plt>
    c6a8:	b	c6f4 <PySequence_Fast@plt+0x7e64>
    c6ac:	ldr	x0, [sp, #32]
    c6b0:	str	x0, [sp, #40]
    c6b4:	ldr	x0, [sp, #40]
    c6b8:	bl	41d0 <htonl@plt>
    c6bc:	mov	w0, w0
    c6c0:	bl	4680 <PyLong_FromUnsignedLong@plt>
    c6c4:	b	c6f4 <PySequence_Fast@plt+0x7e64>
    c6c8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c6cc:	ldr	x0, [x0, #3976]
    c6d0:	ldr	x3, [x0]
    c6d4:	ldr	x0, [sp, #16]
    c6d8:	ldr	x0, [x0, #8]
    c6dc:	ldr	x0, [x0, #24]
    c6e0:	mov	x2, x0
    c6e4:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c6e8:	add	x1, x0, #0xb40
    c6ec:	mov	x0, x3
    c6f0:	bl	47a0 <PyErr_Format@plt>
    c6f4:	ldp	x29, x30, [sp], #48
    c6f8:	ret
    c6fc:	stp	x29, x30, [sp, #-48]!
    c700:	mov	x29, sp
    c704:	str	x0, [sp, #24]
    c708:	str	x1, [sp, #16]
    c70c:	add	x0, sp, #0x20
    c710:	mov	x2, x0
    c714:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c718:	add	x1, x0, #0xf08
    c71c:	ldr	x0, [sp, #16]
    c720:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c724:	cmp	w0, #0x0
    c728:	b.ne	c734 <PySequence_Fast@plt+0x7ea4>  // b.any
    c72c:	mov	x0, #0x0                   	// #0
    c730:	b	c778 <PySequence_Fast@plt+0x7ee8>
    c734:	ldr	x0, [sp, #32]
    c738:	add	x1, sp, #0x28
    c73c:	bl	4730 <inet_aton@plt>
    c740:	cmp	w0, #0x0
    c744:	b.eq	c758 <PySequence_Fast@plt+0x7ec8>  // b.none
    c748:	add	x0, sp, #0x28
    c74c:	mov	x1, #0x4                   	// #4
    c750:	bl	4280 <PyBytes_FromStringAndSize@plt>
    c754:	b	c778 <PySequence_Fast@plt+0x7ee8>
    c758:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c75c:	ldr	x0, [x0, #3984]
    c760:	ldr	x2, [x0]
    c764:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c768:	add	x1, x0, #0xf18
    c76c:	mov	x0, x2
    c770:	bl	4340 <PyErr_SetString@plt>
    c774:	mov	x0, #0x0                   	// #0
    c778:	ldp	x29, x30, [sp], #48
    c77c:	ret
    c780:	stp	x29, x30, [sp, #-128]!
    c784:	mov	x29, sp
    c788:	str	x0, [sp, #24]
    c78c:	str	x1, [sp, #16]
    c790:	add	x0, sp, #0x30
    c794:	mov	x2, x0
    c798:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c79c:	add	x1, x0, #0xfc0
    c7a0:	ldr	x0, [sp, #16]
    c7a4:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c7a8:	cmp	w0, #0x0
    c7ac:	b.ne	c7b8 <PySequence_Fast@plt+0x7f28>  // b.any
    c7b0:	mov	x0, #0x0                   	// #0
    c7b4:	b	c818 <PySequence_Fast@plt+0x7f88>
    c7b8:	ldr	x0, [sp, #64]
    c7bc:	cmp	x0, #0x4
    c7c0:	b.eq	c7f0 <PySequence_Fast@plt+0x7f60>  // b.none
    c7c4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c7c8:	ldr	x0, [x0, #3984]
    c7cc:	ldr	x2, [x0]
    c7d0:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    c7d4:	add	x1, x0, #0xfd0
    c7d8:	mov	x0, x2
    c7dc:	bl	4340 <PyErr_SetString@plt>
    c7e0:	add	x0, sp, #0x30
    c7e4:	bl	4260 <PyBuffer_Release@plt>
    c7e8:	mov	x0, #0x0                   	// #0
    c7ec:	b	c818 <PySequence_Fast@plt+0x7f88>
    c7f0:	ldr	x1, [sp, #48]
    c7f4:	ldr	x0, [sp, #64]
    c7f8:	mov	x2, x0
    c7fc:	add	x0, sp, #0x28
    c800:	bl	40d0 <memcpy@plt>
    c804:	add	x0, sp, #0x30
    c808:	bl	4260 <PyBuffer_Release@plt>
    c80c:	ldr	w0, [sp, #40]
    c810:	bl	42b0 <inet_ntoa@plt>
    c814:	bl	46d0 <PyUnicode_FromString@plt>
    c818:	ldp	x29, x30, [sp], #128
    c81c:	ret
    c820:	stp	x29, x30, [sp, #-64]!
    c824:	mov	x29, sp
    c828:	str	x0, [sp, #24]
    c82c:	str	x1, [sp, #16]
    c830:	add	x1, sp, #0x30
    c834:	add	x0, sp, #0x38
    c838:	mov	x3, x1
    c83c:	mov	x2, x0
    c840:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    c844:	add	x1, x0, #0x98
    c848:	ldr	x0, [sp, #16]
    c84c:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c850:	cmp	w0, #0x0
    c854:	b.ne	c860 <PySequence_Fast@plt+0x7fd0>  // b.any
    c858:	mov	x0, #0x0                   	// #0
    c85c:	b	c920 <PySequence_Fast@plt+0x8090>
    c860:	ldr	w0, [sp, #56]
    c864:	ldr	x1, [sp, #48]
    c868:	add	x2, sp, #0x20
    c86c:	bl	45a0 <inet_pton@plt>
    c870:	str	w0, [sp, #60]
    c874:	ldr	w0, [sp, #60]
    c878:	cmp	w0, #0x0
    c87c:	b.ge	c898 <PySequence_Fast@plt+0x8008>  // b.tcont
    c880:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c884:	ldr	x0, [x0, #3984]
    c888:	ldr	x0, [x0]
    c88c:	bl	4230 <PyErr_SetFromErrno@plt>
    c890:	mov	x0, #0x0                   	// #0
    c894:	b	c920 <PySequence_Fast@plt+0x8090>
    c898:	ldr	w0, [sp, #60]
    c89c:	cmp	w0, #0x0
    c8a0:	b.ne	c8c8 <PySequence_Fast@plt+0x8038>  // b.any
    c8a4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c8a8:	ldr	x0, [x0, #3984]
    c8ac:	ldr	x2, [x0]
    c8b0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    c8b4:	add	x1, x0, #0xa8
    c8b8:	mov	x0, x2
    c8bc:	bl	4340 <PyErr_SetString@plt>
    c8c0:	mov	x0, #0x0                   	// #0
    c8c4:	b	c920 <PySequence_Fast@plt+0x8090>
    c8c8:	ldr	w0, [sp, #56]
    c8cc:	cmp	w0, #0x2
    c8d0:	b.ne	c8e4 <PySequence_Fast@plt+0x8054>  // b.any
    c8d4:	add	x0, sp, #0x20
    c8d8:	mov	x1, #0x4                   	// #4
    c8dc:	bl	4280 <PyBytes_FromStringAndSize@plt>
    c8e0:	b	c920 <PySequence_Fast@plt+0x8090>
    c8e4:	ldr	w0, [sp, #56]
    c8e8:	cmp	w0, #0xa
    c8ec:	b.ne	c900 <PySequence_Fast@plt+0x8070>  // b.any
    c8f0:	add	x0, sp, #0x20
    c8f4:	mov	x1, #0x10                  	// #16
    c8f8:	bl	4280 <PyBytes_FromStringAndSize@plt>
    c8fc:	b	c920 <PySequence_Fast@plt+0x8090>
    c900:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c904:	ldr	x0, [x0, #3984]
    c908:	ldr	x2, [x0]
    c90c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    c910:	add	x1, x0, #0xc70
    c914:	mov	x0, x2
    c918:	bl	4340 <PyErr_SetString@plt>
    c91c:	mov	x0, #0x0                   	// #0
    c920:	ldp	x29, x30, [sp], #64
    c924:	ret
    c928:	stp	x29, x30, [sp, #-176]!
    c92c:	mov	x29, sp
    c930:	str	x0, [sp, #24]
    c934:	str	x1, [sp, #16]
    c938:	add	x1, sp, #0x50
    c93c:	add	x0, sp, #0xa4
    c940:	mov	x3, x1
    c944:	mov	x2, x0
    c948:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    c94c:	add	x1, x0, #0x158
    c950:	ldr	x0, [sp, #16]
    c954:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    c958:	cmp	w0, #0x0
    c95c:	b.ne	c968 <PySequence_Fast@plt+0x80d8>  // b.any
    c960:	mov	x0, #0x0                   	// #0
    c964:	b	ca70 <PySequence_Fast@plt+0x81e0>
    c968:	ldr	w0, [sp, #164]
    c96c:	cmp	w0, #0x2
    c970:	b.ne	c9ac <PySequence_Fast@plt+0x811c>  // b.any
    c974:	ldr	x0, [sp, #96]
    c978:	cmp	x0, #0x4
    c97c:	b.eq	ca24 <PySequence_Fast@plt+0x8194>  // b.none
    c980:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c984:	ldr	x0, [x0, #3960]
    c988:	ldr	x2, [x0]
    c98c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    c990:	add	x1, x0, #0x168
    c994:	mov	x0, x2
    c998:	bl	4340 <PyErr_SetString@plt>
    c99c:	add	x0, sp, #0x50
    c9a0:	bl	4260 <PyBuffer_Release@plt>
    c9a4:	mov	x0, #0x0                   	// #0
    c9a8:	b	ca70 <PySequence_Fast@plt+0x81e0>
    c9ac:	ldr	w0, [sp, #164]
    c9b0:	cmp	w0, #0xa
    c9b4:	b.ne	c9f0 <PySequence_Fast@plt+0x8160>  // b.any
    c9b8:	ldr	x0, [sp, #96]
    c9bc:	cmp	x0, #0x10
    c9c0:	b.eq	ca24 <PySequence_Fast@plt+0x8194>  // b.none
    c9c4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c9c8:	ldr	x0, [x0, #3960]
    c9cc:	ldr	x2, [x0]
    c9d0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    c9d4:	add	x1, x0, #0x168
    c9d8:	mov	x0, x2
    c9dc:	bl	4340 <PyErr_SetString@plt>
    c9e0:	add	x0, sp, #0x50
    c9e4:	bl	4260 <PyBuffer_Release@plt>
    c9e8:	mov	x0, #0x0                   	// #0
    c9ec:	b	ca70 <PySequence_Fast@plt+0x81e0>
    c9f0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    c9f4:	ldr	x0, [x0, #3960]
    c9f8:	ldr	x3, [x0]
    c9fc:	ldr	w0, [sp, #164]
    ca00:	mov	w2, w0
    ca04:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    ca08:	add	x1, x0, #0x198
    ca0c:	mov	x0, x3
    ca10:	bl	47a0 <PyErr_Format@plt>
    ca14:	add	x0, sp, #0x50
    ca18:	bl	4260 <PyBuffer_Release@plt>
    ca1c:	mov	x0, #0x0                   	// #0
    ca20:	b	ca70 <PySequence_Fast@plt+0x81e0>
    ca24:	ldr	w0, [sp, #164]
    ca28:	ldr	x1, [sp, #80]
    ca2c:	add	x2, sp, #0x20
    ca30:	mov	w3, #0x2e                  	// #46
    ca34:	bl	4860 <inet_ntop@plt>
    ca38:	str	x0, [sp, #168]
    ca3c:	add	x0, sp, #0x50
    ca40:	bl	4260 <PyBuffer_Release@plt>
    ca44:	ldr	x0, [sp, #168]
    ca48:	cmp	x0, #0x0
    ca4c:	b.ne	ca68 <PySequence_Fast@plt+0x81d8>  // b.any
    ca50:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    ca54:	ldr	x0, [x0, #3984]
    ca58:	ldr	x0, [x0]
    ca5c:	bl	4230 <PyErr_SetFromErrno@plt>
    ca60:	mov	x0, #0x0                   	// #0
    ca64:	b	ca70 <PySequence_Fast@plt+0x81e0>
    ca68:	ldr	x0, [sp, #168]
    ca6c:	bl	46d0 <PyUnicode_FromString@plt>
    ca70:	ldp	x29, x30, [sp], #176
    ca74:	ret
    ca78:	sub	sp, sp, #0x110
    ca7c:	stp	x29, x30, [sp, #16]
    ca80:	add	x29, sp, #0x10
    ca84:	str	x0, [sp, #56]
    ca88:	str	x1, [sp, #48]
    ca8c:	str	x2, [sp, #40]
    ca90:	str	xzr, [sp, #136]
    ca94:	str	xzr, [sp, #128]
    ca98:	str	xzr, [sp, #120]
    ca9c:	str	xzr, [sp, #240]
    caa0:	str	xzr, [sp, #232]
    caa4:	str	wzr, [sp, #72]
    caa8:	ldr	w0, [sp, #72]
    caac:	str	w0, [sp, #76]
    cab0:	ldr	w0, [sp, #76]
    cab4:	str	w0, [sp, #80]
    cab8:	str	wzr, [sp, #84]
    cabc:	add	x4, sp, #0x50
    cac0:	add	x3, sp, #0x54
    cac4:	add	x2, sp, #0x78
    cac8:	add	x1, sp, #0x80
    cacc:	add	x0, sp, #0x48
    cad0:	str	x0, [sp, #8]
    cad4:	add	x0, sp, #0x4c
    cad8:	str	x0, [sp]
    cadc:	mov	x7, x4
    cae0:	mov	x6, x3
    cae4:	mov	x5, x2
    cae8:	mov	x4, x1
    caec:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    caf0:	add	x3, x0, #0xee8
    caf4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    caf8:	add	x2, x0, #0x1b8
    cafc:	ldr	x1, [sp, #40]
    cb00:	ldr	x0, [sp, #48]
    cb04:	bl	45c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    cb08:	cmp	w0, #0x0
    cb0c:	b.ne	cb18 <PySequence_Fast@plt+0x8288>  // b.any
    cb10:	mov	x0, #0x0                   	// #0
    cb14:	b	cf28 <PySequence_Fast@plt+0x8698>
    cb18:	ldr	x1, [sp, #128]
    cb1c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    cb20:	ldr	x0, [x0, #4024]
    cb24:	cmp	x1, x0
    cb28:	b.ne	cb34 <PySequence_Fast@plt+0x82a4>  // b.any
    cb2c:	str	xzr, [sp, #256]
    cb30:	b	cbd8 <PySequence_Fast@plt+0x8348>
    cb34:	ldr	x0, [sp, #128]
    cb38:	ldr	x0, [x0, #8]
    cb3c:	ldr	x0, [x0, #168]
    cb40:	and	x0, x0, #0x10000000
    cb44:	cmp	x0, #0x0
    cb48:	b.eq	cb8c <PySequence_Fast@plt+0x82fc>  // b.none
    cb4c:	ldr	x3, [sp, #128]
    cb50:	mov	x2, #0x0                   	// #0
    cb54:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    cb58:	add	x1, x0, #0xcf0
    cb5c:	mov	x0, x3
    cb60:	bl	4390 <PyUnicode_AsEncodedString@plt>
    cb64:	str	x0, [sp, #232]
    cb68:	ldr	x0, [sp, #232]
    cb6c:	cmp	x0, #0x0
    cb70:	b.ne	cb7c <PySequence_Fast@plt+0x82ec>  // b.any
    cb74:	mov	x0, #0x0                   	// #0
    cb78:	b	cf28 <PySequence_Fast@plt+0x8698>
    cb7c:	ldr	x0, [sp, #232]
    cb80:	add	x0, x0, #0x20
    cb84:	str	x0, [sp, #256]
    cb88:	b	cbd8 <PySequence_Fast@plt+0x8348>
    cb8c:	ldr	x0, [sp, #128]
    cb90:	ldr	x0, [x0, #8]
    cb94:	ldr	x0, [x0, #168]
    cb98:	and	x0, x0, #0x8000000
    cb9c:	cmp	x0, #0x0
    cba0:	b.eq	cbb4 <PySequence_Fast@plt+0x8324>  // b.none
    cba4:	ldr	x0, [sp, #128]
    cba8:	bl	4720 <PyBytes_AsString@plt>
    cbac:	str	x0, [sp, #256]
    cbb0:	b	cbd8 <PySequence_Fast@plt+0x8348>
    cbb4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    cbb8:	ldr	x0, [x0, #3976]
    cbbc:	ldr	x2, [x0]
    cbc0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cbc4:	add	x1, x0, #0x1d0
    cbc8:	mov	x0, x2
    cbcc:	bl	4340 <PyErr_SetString@plt>
    cbd0:	mov	x0, #0x0                   	// #0
    cbd4:	b	cf28 <PySequence_Fast@plt+0x8698>
    cbd8:	ldr	x0, [sp, #120]
    cbdc:	ldr	x1, [x0, #8]
    cbe0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    cbe4:	ldr	x0, [x0, #4040]
    cbe8:	cmp	x1, x0
    cbec:	b.ne	cc3c <PySequence_Fast@plt+0x83ac>  // b.any
    cbf0:	ldr	x0, [sp, #120]
    cbf4:	bl	4560 <PyLong_AsLong@plt>
    cbf8:	str	x0, [sp, #224]
    cbfc:	ldr	x0, [sp, #224]
    cc00:	cmn	x0, #0x1
    cc04:	b.ne	cc14 <PySequence_Fast@plt+0x8384>  // b.any
    cc08:	bl	4540 <PyErr_Occurred@plt>
    cc0c:	cmp	x0, #0x0
    cc10:	b.ne	cee4 <PySequence_Fast@plt+0x8654>  // b.any
    cc14:	add	x4, sp, #0x58
    cc18:	ldr	x3, [sp, #224]
    cc1c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cc20:	add	x2, x0, #0x200
    cc24:	mov	x1, #0x1e                  	// #30
    cc28:	mov	x0, x4
    cc2c:	bl	43f0 <PyOS_snprintf@plt>
    cc30:	add	x0, sp, #0x58
    cc34:	str	x0, [sp, #248]
    cc38:	b	ccd4 <PySequence_Fast@plt+0x8444>
    cc3c:	ldr	x0, [sp, #120]
    cc40:	ldr	x0, [x0, #8]
    cc44:	ldr	x0, [x0, #168]
    cc48:	and	x0, x0, #0x10000000
    cc4c:	cmp	x0, #0x0
    cc50:	b.eq	cc70 <PySequence_Fast@plt+0x83e0>  // b.none
    cc54:	ldr	x0, [sp, #120]
    cc58:	bl	4690 <PyUnicode_AsUTF8@plt>
    cc5c:	str	x0, [sp, #248]
    cc60:	ldr	x0, [sp, #248]
    cc64:	cmp	x0, #0x0
    cc68:	b.ne	ccd4 <PySequence_Fast@plt+0x8444>  // b.any
    cc6c:	b	cf00 <PySequence_Fast@plt+0x8670>
    cc70:	ldr	x0, [sp, #120]
    cc74:	ldr	x0, [x0, #8]
    cc78:	ldr	x0, [x0, #168]
    cc7c:	and	x0, x0, #0x8000000
    cc80:	cmp	x0, #0x0
    cc84:	b.eq	cc98 <PySequence_Fast@plt+0x8408>  // b.none
    cc88:	ldr	x0, [sp, #120]
    cc8c:	add	x0, x0, #0x20
    cc90:	str	x0, [sp, #248]
    cc94:	b	ccd4 <PySequence_Fast@plt+0x8444>
    cc98:	ldr	x1, [sp, #120]
    cc9c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    cca0:	ldr	x0, [x0, #4024]
    cca4:	cmp	x1, x0
    cca8:	b.ne	ccb4 <PySequence_Fast@plt+0x8424>  // b.any
    ccac:	str	xzr, [sp, #248]
    ccb0:	b	ccd4 <PySequence_Fast@plt+0x8444>
    ccb4:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    ccb8:	ldr	x0, [x0, #3984]
    ccbc:	ldr	x2, [x0]
    ccc0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    ccc4:	add	x1, x0, #0x208
    ccc8:	mov	x0, x2
    cccc:	bl	4340 <PyErr_SetString@plt>
    ccd0:	b	cf00 <PySequence_Fast@plt+0x8670>
    ccd4:	ldr	x0, [sp, #128]
    ccd8:	ldr	x1, [sp, #120]
    ccdc:	ldr	w2, [sp, #84]
    cce0:	ldr	w3, [sp, #80]
    cce4:	ldr	w4, [sp, #76]
    cce8:	mov	w6, w4
    ccec:	mov	w5, w3
    ccf0:	mov	w4, w2
    ccf4:	mov	x3, x1
    ccf8:	mov	x2, x0
    ccfc:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cd00:	add	x1, x0, #0x220
    cd04:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cd08:	add	x0, x0, #0x228
    cd0c:	bl	4620 <PySys_Audit@plt>
    cd10:	cmp	w0, #0x0
    cd14:	b.ge	cd20 <PySequence_Fast@plt+0x8490>  // b.tcont
    cd18:	mov	x0, #0x0                   	// #0
    cd1c:	b	cf28 <PySequence_Fast@plt+0x8698>
    cd20:	add	x0, sp, #0x90
    cd24:	mov	x2, #0x30                  	// #48
    cd28:	mov	w1, #0x0                   	// #0
    cd2c:	bl	43e0 <memset@plt>
    cd30:	ldr	w0, [sp, #84]
    cd34:	str	w0, [sp, #148]
    cd38:	ldr	w0, [sp, #80]
    cd3c:	str	w0, [sp, #152]
    cd40:	ldr	w0, [sp, #76]
    cd44:	str	w0, [sp, #156]
    cd48:	ldr	w0, [sp, #72]
    cd4c:	str	w0, [sp, #144]
    cd50:	bl	46f0 <PyEval_SaveThread@plt>
    cd54:	str	x0, [sp, #216]
    cd58:	add	x1, sp, #0x88
    cd5c:	add	x0, sp, #0x90
    cd60:	mov	x3, x1
    cd64:	mov	x2, x0
    cd68:	ldr	x1, [sp, #248]
    cd6c:	ldr	x0, [sp, #256]
    cd70:	bl	46e0 <getaddrinfo@plt>
    cd74:	str	w0, [sp, #212]
    cd78:	ldr	x0, [sp, #216]
    cd7c:	bl	4210 <PyEval_RestoreThread@plt>
    cd80:	ldr	w0, [sp, #212]
    cd84:	cmp	w0, #0x0
    cd88:	b.eq	cd98 <PySequence_Fast@plt+0x8508>  // b.none
    cd8c:	ldr	w0, [sp, #212]
    cd90:	bl	4bc4 <PySequence_Fast@plt+0x334>
    cd94:	b	cf00 <PySequence_Fast@plt+0x8670>
    cd98:	mov	x0, #0x0                   	// #0
    cd9c:	bl	4100 <PyList_New@plt>
    cda0:	str	x0, [sp, #240]
    cda4:	ldr	x0, [sp, #240]
    cda8:	cmp	x0, #0x0
    cdac:	b.eq	ceec <PySequence_Fast@plt+0x865c>  // b.none
    cdb0:	ldr	x0, [sp, #136]
    cdb4:	str	x0, [sp, #264]
    cdb8:	b	ceb4 <PySequence_Fast@plt+0x8624>
    cdbc:	ldr	x0, [sp, #264]
    cdc0:	ldr	x1, [x0, #24]
    cdc4:	ldr	x0, [sp, #264]
    cdc8:	ldr	w0, [x0, #16]
    cdcc:	mov	w0, w0
    cdd0:	ldr	w2, [sp, #76]
    cdd4:	mov	w3, w2
    cdd8:	mov	x2, x0
    cddc:	mov	w0, #0xffffffff            	// #-1
    cde0:	bl	5730 <PySequence_Fast@plt+0xea0>
    cde4:	str	x0, [sp, #200]
    cde8:	ldr	x0, [sp, #200]
    cdec:	cmp	x0, #0x0
    cdf0:	b.eq	cef4 <PySequence_Fast@plt+0x8664>  // b.none
    cdf4:	ldr	x0, [sp, #264]
    cdf8:	ldr	w1, [x0, #4]
    cdfc:	ldr	x0, [sp, #264]
    ce00:	ldr	w2, [x0, #8]
    ce04:	ldr	x0, [sp, #264]
    ce08:	ldr	w3, [x0, #12]
    ce0c:	ldr	x0, [sp, #264]
    ce10:	ldr	x0, [x0, #32]
    ce14:	cmp	x0, #0x0
    ce18:	b.eq	ce28 <PySequence_Fast@plt+0x8598>  // b.none
    ce1c:	ldr	x0, [sp, #264]
    ce20:	ldr	x0, [x0, #32]
    ce24:	b	ce30 <PySequence_Fast@plt+0x85a0>
    ce28:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    ce2c:	add	x0, x0, #0xca0
    ce30:	ldr	x5, [sp, #200]
    ce34:	mov	x4, x0
    ce38:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    ce3c:	add	x0, x0, #0x240
    ce40:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    ce44:	str	x0, [sp, #192]
    ce48:	ldr	x2, [sp, #200]
    ce4c:	mov	w1, #0x196e                	// #6510
    ce50:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    ce54:	add	x0, x0, #0xba0
    ce58:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    ce5c:	ldr	x0, [sp, #192]
    ce60:	cmp	x0, #0x0
    ce64:	b.eq	cefc <PySequence_Fast@plt+0x866c>  // b.none
    ce68:	ldr	x1, [sp, #192]
    ce6c:	ldr	x0, [sp, #240]
    ce70:	bl	44e0 <PyList_Append@plt>
    ce74:	cmp	w0, #0x0
    ce78:	b.eq	ce94 <PySequence_Fast@plt+0x8604>  // b.none
    ce7c:	ldr	x2, [sp, #192]
    ce80:	mov	w1, #0x1973                	// #6515
    ce84:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    ce88:	add	x0, x0, #0xba0
    ce8c:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    ce90:	b	cf00 <PySequence_Fast@plt+0x8670>
    ce94:	ldr	x2, [sp, #192]
    ce98:	mov	w1, #0x1976                	// #6518
    ce9c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    cea0:	add	x0, x0, #0xba0
    cea4:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    cea8:	ldr	x0, [sp, #264]
    ceac:	ldr	x0, [x0, #40]
    ceb0:	str	x0, [sp, #264]
    ceb4:	ldr	x0, [sp, #264]
    ceb8:	cmp	x0, #0x0
    cebc:	b.ne	cdbc <PySequence_Fast@plt+0x852c>  // b.any
    cec0:	ldr	x0, [sp, #232]
    cec4:	bl	4ad0 <PySequence_Fast@plt+0x240>
    cec8:	ldr	x0, [sp, #136]
    cecc:	cmp	x0, #0x0
    ced0:	b.eq	cedc <PySequence_Fast@plt+0x864c>  // b.none
    ced4:	ldr	x0, [sp, #136]
    ced8:	bl	4140 <freeaddrinfo@plt>
    cedc:	ldr	x0, [sp, #240]
    cee0:	b	cf28 <PySequence_Fast@plt+0x8698>
    cee4:	nop
    cee8:	b	cf00 <PySequence_Fast@plt+0x8670>
    ceec:	nop
    cef0:	b	cf00 <PySequence_Fast@plt+0x8670>
    cef4:	nop
    cef8:	b	cf00 <PySequence_Fast@plt+0x8670>
    cefc:	nop
    cf00:	ldr	x0, [sp, #240]
    cf04:	bl	4ad0 <PySequence_Fast@plt+0x240>
    cf08:	ldr	x0, [sp, #232]
    cf0c:	bl	4ad0 <PySequence_Fast@plt+0x240>
    cf10:	ldr	x0, [sp, #136]
    cf14:	cmp	x0, #0x0
    cf18:	b.eq	cf24 <PySequence_Fast@plt+0x8694>  // b.none
    cf1c:	ldr	x0, [sp, #136]
    cf20:	bl	4140 <freeaddrinfo@plt>
    cf24:	mov	x0, #0x0                   	// #0
    cf28:	ldp	x29, x30, [sp, #16]
    cf2c:	add	sp, sp, #0x110
    cf30:	ret
    cf34:	sub	sp, sp, #0x4d0
    cf38:	stp	x29, x30, [sp]
    cf3c:	mov	x29, sp
    cf40:	str	x0, [sp, #24]
    cf44:	str	x1, [sp, #16]
    cf48:	str	xzr, [sp, #1184]
    cf4c:	str	xzr, [sp, #40]
    cf50:	str	xzr, [sp, #1224]
    cf54:	str	wzr, [sp, #1156]
    cf58:	ldr	w0, [sp, #1156]
    cf5c:	str	w0, [sp, #1160]
    cf60:	ldr	w0, [sp, #1160]
    cf64:	str	w0, [sp, #1180]
    cf68:	add	x1, sp, #0x49c
    cf6c:	add	x0, sp, #0x4a0
    cf70:	mov	x3, x1
    cf74:	mov	x2, x0
    cf78:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cf7c:	add	x1, x0, #0x2e8
    cf80:	ldr	x0, [sp, #16]
    cf84:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    cf88:	cmp	w0, #0x0
    cf8c:	b.ne	cf98 <PySequence_Fast@plt+0x8708>  // b.any
    cf90:	mov	x0, #0x0                   	// #0
    cf94:	b	d258 <PySequence_Fast@plt+0x89c8>
    cf98:	ldr	x0, [sp, #1184]
    cf9c:	ldr	x0, [x0, #8]
    cfa0:	ldr	x0, [x0, #168]
    cfa4:	and	x0, x0, #0x4000000
    cfa8:	cmp	x0, #0x0
    cfac:	b.ne	cfd4 <PySequence_Fast@plt+0x8744>  // b.any
    cfb0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    cfb4:	ldr	x0, [x0, #3976]
    cfb8:	ldr	x2, [x0]
    cfbc:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cfc0:	add	x1, x0, #0x2f8
    cfc4:	mov	x0, x2
    cfc8:	bl	4340 <PyErr_SetString@plt>
    cfcc:	mov	x0, #0x0                   	// #0
    cfd0:	b	d258 <PySequence_Fast@plt+0x89c8>
    cfd4:	ldr	x6, [sp, #1184]
    cfd8:	add	x3, sp, #0x484
    cfdc:	add	x2, sp, #0x488
    cfe0:	add	x1, sp, #0x48c
    cfe4:	add	x0, sp, #0x490
    cfe8:	mov	x5, x3
    cfec:	mov	x4, x2
    cff0:	mov	x3, x1
    cff4:	mov	x2, x0
    cff8:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    cffc:	add	x1, x0, #0x328
    d000:	mov	x0, x6
    d004:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    d008:	cmp	w0, #0x0
    d00c:	b.ne	d018 <PySequence_Fast@plt+0x8788>  // b.any
    d010:	mov	x0, #0x0                   	// #0
    d014:	b	d258 <PySequence_Fast@plt+0x89c8>
    d018:	ldr	w1, [sp, #1160]
    d01c:	mov	w0, #0xfffff               	// #1048575
    d020:	cmp	w1, w0
    d024:	b.ls	d04c <PySequence_Fast@plt+0x87bc>  // b.plast
    d028:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d02c:	ldr	x0, [x0, #4008]
    d030:	ldr	x2, [x0]
    d034:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d038:	add	x1, x0, #0x358
    d03c:	mov	x0, x2
    d040:	bl	4340 <PyErr_SetString@plt>
    d044:	mov	x0, #0x0                   	// #0
    d048:	b	d258 <PySequence_Fast@plt+0x89c8>
    d04c:	ldr	x0, [sp, #1184]
    d050:	mov	x2, x0
    d054:	adrp	x0, 13000 <PyInit__socket@@Base+0x591c>
    d058:	add	x1, x0, #0x70
    d05c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d060:	add	x0, x0, #0x388
    d064:	bl	4620 <PySys_Audit@plt>
    d068:	cmp	w0, #0x0
    d06c:	b.ge	d078 <PySequence_Fast@plt+0x87e8>  // b.tcont
    d070:	mov	x0, #0x0                   	// #0
    d074:	b	d258 <PySequence_Fast@plt+0x89c8>
    d078:	ldr	w0, [sp, #1164]
    d07c:	add	x4, sp, #0x60
    d080:	mov	w3, w0
    d084:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d088:	add	x2, x0, #0x3a0
    d08c:	mov	x1, #0x20                  	// #32
    d090:	mov	x0, x4
    d094:	bl	43f0 <PyOS_snprintf@plt>
    d098:	add	x0, sp, #0x30
    d09c:	mov	x2, #0x30                  	// #48
    d0a0:	mov	w1, #0x0                   	// #0
    d0a4:	bl	43e0 <memset@plt>
    d0a8:	str	wzr, [sp, #52]
    d0ac:	mov	w0, #0x2                   	// #2
    d0b0:	str	w0, [sp, #56]
    d0b4:	mov	w0, #0x4                   	// #4
    d0b8:	str	w0, [sp, #48]
    d0bc:	bl	46f0 <PyEval_SaveThread@plt>
    d0c0:	str	x0, [sp, #1216]
    d0c4:	ldr	x0, [sp, #1168]
    d0c8:	add	x3, sp, #0x28
    d0cc:	add	x2, sp, #0x30
    d0d0:	add	x1, sp, #0x60
    d0d4:	bl	46e0 <getaddrinfo@plt>
    d0d8:	str	w0, [sp, #1212]
    d0dc:	ldr	x0, [sp, #1216]
    d0e0:	bl	4210 <PyEval_RestoreThread@plt>
    d0e4:	ldr	w0, [sp, #1212]
    d0e8:	cmp	w0, #0x0
    d0ec:	b.eq	d0fc <PySequence_Fast@plt+0x886c>  // b.none
    d0f0:	ldr	w0, [sp, #1212]
    d0f4:	bl	4bc4 <PySequence_Fast@plt+0x334>
    d0f8:	b	d240 <PySequence_Fast@plt+0x89b0>
    d0fc:	ldr	x0, [sp, #40]
    d100:	ldr	x0, [x0, #40]
    d104:	cmp	x0, #0x0
    d108:	b.eq	d12c <PySequence_Fast@plt+0x889c>  // b.none
    d10c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d110:	ldr	x0, [x0, #3984]
    d114:	ldr	x2, [x0]
    d118:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d11c:	add	x1, x0, #0x3a8
    d120:	mov	x0, x2
    d124:	bl	4340 <PyErr_SetString@plt>
    d128:	b	d240 <PySequence_Fast@plt+0x89b0>
    d12c:	ldr	x0, [sp, #40]
    d130:	ldr	w0, [x0, #4]
    d134:	cmp	w0, #0x2
    d138:	b.eq	d148 <PySequence_Fast@plt+0x88b8>  // b.none
    d13c:	cmp	w0, #0xa
    d140:	b.eq	d178 <PySequence_Fast@plt+0x88e8>  // b.none
    d144:	b	d1ac <PySequence_Fast@plt+0x891c>
    d148:	ldr	x0, [sp, #1184]
    d14c:	ldr	x0, [x0, #16]
    d150:	cmp	x0, #0x2
    d154:	b.eq	d1a8 <PySequence_Fast@plt+0x8918>  // b.none
    d158:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d15c:	ldr	x0, [x0, #3984]
    d160:	ldr	x2, [x0]
    d164:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d168:	add	x1, x0, #0x3d0
    d16c:	mov	x0, x2
    d170:	bl	4340 <PyErr_SetString@plt>
    d174:	b	d240 <PySequence_Fast@plt+0x89b0>
    d178:	ldr	x0, [sp, #40]
    d17c:	ldr	x0, [x0, #24]
    d180:	str	x0, [sp, #1200]
    d184:	ldr	w0, [sp, #1160]
    d188:	bl	41d0 <htonl@plt>
    d18c:	mov	w1, w0
    d190:	ldr	x0, [sp, #1200]
    d194:	str	w1, [x0, #4]
    d198:	ldr	w1, [sp, #1156]
    d19c:	ldr	x0, [sp, #1200]
    d1a0:	str	w1, [x0, #24]
    d1a4:	b	d1ac <PySequence_Fast@plt+0x891c>
    d1a8:	nop
    d1ac:	ldr	x0, [sp, #40]
    d1b0:	ldr	x7, [x0, #24]
    d1b4:	ldr	x0, [sp, #40]
    d1b8:	ldr	w0, [x0, #16]
    d1bc:	ldr	w3, [sp, #1180]
    d1c0:	add	x2, sp, #0x60
    d1c4:	add	x1, sp, #0x80
    d1c8:	mov	w6, w3
    d1cc:	mov	w5, #0x20                  	// #32
    d1d0:	mov	x4, x2
    d1d4:	mov	w3, #0x401                 	// #1025
    d1d8:	mov	x2, x1
    d1dc:	mov	w1, w0
    d1e0:	mov	x0, x7
    d1e4:	bl	41f0 <getnameinfo@plt>
    d1e8:	str	w0, [sp, #1212]
    d1ec:	ldr	w0, [sp, #1212]
    d1f0:	cmp	w0, #0x0
    d1f4:	b.eq	d204 <PySequence_Fast@plt+0x8974>  // b.none
    d1f8:	ldr	w0, [sp, #1212]
    d1fc:	bl	4bc4 <PySequence_Fast@plt+0x334>
    d200:	b	d240 <PySequence_Fast@plt+0x89b0>
    d204:	add	x0, sp, #0x80
    d208:	bl	b694 <PySequence_Fast@plt+0x6e04>
    d20c:	str	x0, [sp, #1192]
    d210:	ldr	x0, [sp, #1192]
    d214:	cmp	x0, #0x0
    d218:	b.eq	d23c <PySequence_Fast@plt+0x89ac>  // b.none
    d21c:	add	x0, sp, #0x60
    d220:	mov	x2, x0
    d224:	ldr	x1, [sp, #1192]
    d228:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d22c:	add	x0, x0, #0x3f0
    d230:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    d234:	str	x0, [sp, #1224]
    d238:	b	d240 <PySequence_Fast@plt+0x89b0>
    d23c:	nop
    d240:	ldr	x0, [sp, #40]
    d244:	cmp	x0, #0x0
    d248:	b.eq	d254 <PySequence_Fast@plt+0x89c4>  // b.none
    d24c:	ldr	x0, [sp, #40]
    d250:	bl	4140 <freeaddrinfo@plt>
    d254:	ldr	x0, [sp, #1224]
    d258:	ldp	x29, x30, [sp]
    d25c:	add	sp, sp, #0x4d0
    d260:	ret
    d264:	stp	x29, x30, [sp, #-48]!
    d268:	mov	x29, sp
    d26c:	str	x0, [sp, #24]
    d270:	str	x1, [sp, #16]
    d274:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d278:	add	x0, x0, #0x3f0
    d27c:	ldr	x0, [x0]
    d280:	cmp	x0, #0x0
    d284:	b.ge	d2a0 <PySequence_Fast@plt+0x8a10>  // b.tcont
    d288:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d28c:	ldr	x0, [x0, #4024]
    d290:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d294:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d298:	ldr	x0, [x0, #4024]
    d29c:	b	d2bc <PySequence_Fast@plt+0x8a2c>
    d2a0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d2a4:	add	x0, x0, #0x3f0
    d2a8:	ldr	x0, [x0]
    d2ac:	bl	4360 <_PyTime_AsSecondsDouble@plt>
    d2b0:	str	d0, [sp, #40]
    d2b4:	ldr	d0, [sp, #40]
    d2b8:	bl	4460 <PyFloat_FromDouble@plt>
    d2bc:	ldp	x29, x30, [sp], #48
    d2c0:	ret
    d2c4:	stp	x29, x30, [sp, #-48]!
    d2c8:	mov	x29, sp
    d2cc:	str	x0, [sp, #24]
    d2d0:	str	x1, [sp, #16]
    d2d4:	add	x0, sp, #0x28
    d2d8:	ldr	x1, [sp, #16]
    d2dc:	bl	797c <PySequence_Fast@plt+0x30ec>
    d2e0:	cmp	w0, #0x0
    d2e4:	b.ge	d2f0 <PySequence_Fast@plt+0x8a60>  // b.tcont
    d2e8:	mov	x0, #0x0                   	// #0
    d2ec:	b	d314 <PySequence_Fast@plt+0x8a84>
    d2f0:	ldr	x1, [sp, #40]
    d2f4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d2f8:	add	x0, x0, #0x3f0
    d2fc:	str	x1, [x0]
    d300:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d304:	ldr	x0, [x0, #4024]
    d308:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d30c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d310:	ldr	x0, [x0, #4024]
    d314:	ldp	x29, x30, [sp], #48
    d318:	ret
    d31c:	stp	x29, x30, [sp, #-64]!
    d320:	mov	x29, sp
    d324:	str	x0, [sp, #24]
    d328:	str	x1, [sp, #16]
    d32c:	mov	x0, #0x0                   	// #0
    d330:	bl	4100 <PyList_New@plt>
    d334:	str	x0, [sp, #48]
    d338:	ldr	x0, [sp, #48]
    d33c:	cmp	x0, #0x0
    d340:	b.ne	d34c <PySequence_Fast@plt+0x8abc>  // b.any
    d344:	mov	x0, #0x0                   	// #0
    d348:	b	d480 <PySequence_Fast@plt+0x8bf0>
    d34c:	bl	4830 <if_nameindex@plt>
    d350:	str	x0, [sp, #40]
    d354:	ldr	x0, [sp, #40]
    d358:	cmp	x0, #0x0
    d35c:	b.ne	d38c <PySequence_Fast@plt+0x8afc>  // b.any
    d360:	ldr	x2, [sp, #48]
    d364:	mov	w1, #0x1a48                	// #6728
    d368:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    d36c:	add	x0, x0, #0xba0
    d370:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    d374:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d378:	ldr	x0, [x0, #3984]
    d37c:	ldr	x0, [x0]
    d380:	bl	4230 <PyErr_SetFromErrno@plt>
    d384:	mov	x0, #0x0                   	// #0
    d388:	b	d480 <PySequence_Fast@plt+0x8bf0>
    d38c:	str	wzr, [sp, #60]
    d390:	b	d448 <PySequence_Fast@plt+0x8bb8>
    d394:	ldrsw	x0, [sp, #60]
    d398:	lsl	x0, x0, #4
    d39c:	ldr	x1, [sp, #40]
    d3a0:	add	x0, x1, x0
    d3a4:	ldr	w4, [x0]
    d3a8:	ldrsw	x0, [sp, #60]
    d3ac:	lsl	x0, x0, #4
    d3b0:	ldr	x1, [sp, #40]
    d3b4:	add	x0, x1, x0
    d3b8:	ldr	x0, [x0, #8]
    d3bc:	mov	x3, x0
    d3c0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d3c4:	ldr	x2, [x0, #4048]
    d3c8:	mov	w1, w4
    d3cc:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d3d0:	add	x0, x0, #0x628
    d3d4:	bl	47c0 <_Py_BuildValue_SizeT@plt>
    d3d8:	str	x0, [sp, #32]
    d3dc:	ldr	x0, [sp, #32]
    d3e0:	cmp	x0, #0x0
    d3e4:	b.eq	d3fc <PySequence_Fast@plt+0x8b6c>  // b.none
    d3e8:	ldr	x1, [sp, #32]
    d3ec:	ldr	x0, [sp, #48]
    d3f0:	bl	44e0 <PyList_Append@plt>
    d3f4:	cmn	w0, #0x1
    d3f8:	b.ne	d428 <PySequence_Fast@plt+0x8b98>  // b.any
    d3fc:	ldr	x0, [sp, #32]
    d400:	bl	4ad0 <PySequence_Fast@plt+0x240>
    d404:	ldr	x2, [sp, #48]
    d408:	mov	w1, #0x1a63                	// #6755
    d40c:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    d410:	add	x0, x0, #0xba0
    d414:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    d418:	ldr	x0, [sp, #40]
    d41c:	bl	4630 <if_freenameindex@plt>
    d420:	mov	x0, #0x0                   	// #0
    d424:	b	d480 <PySequence_Fast@plt+0x8bf0>
    d428:	ldr	x2, [sp, #32]
    d42c:	mov	w1, #0x1a67                	// #6759
    d430:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    d434:	add	x0, x0, #0xba0
    d438:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    d43c:	ldr	w0, [sp, #60]
    d440:	add	w0, w0, #0x1
    d444:	str	w0, [sp, #60]
    d448:	ldrsw	x0, [sp, #60]
    d44c:	lsl	x0, x0, #4
    d450:	ldr	x1, [sp, #40]
    d454:	add	x0, x1, x0
    d458:	ldr	w0, [x0]
    d45c:	cmp	w0, #0x0
    d460:	b.eq	d474 <PySequence_Fast@plt+0x8be4>  // b.none
    d464:	ldr	w1, [sp, #60]
    d468:	mov	w0, #0x7fffffff            	// #2147483647
    d46c:	cmp	w1, w0
    d470:	b.ne	d394 <PySequence_Fast@plt+0x8b04>  // b.any
    d474:	ldr	x0, [sp, #40]
    d478:	bl	4630 <if_freenameindex@plt>
    d47c:	ldr	x0, [sp, #48]
    d480:	ldp	x29, x30, [sp], #64
    d484:	ret
    d488:	stp	x29, x30, [sp, #-48]!
    d48c:	mov	x29, sp
    d490:	str	x0, [sp, #24]
    d494:	str	x1, [sp, #16]
    d498:	add	x0, sp, #0x20
    d49c:	mov	x3, x0
    d4a0:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d4a4:	ldr	x2, [x0, #3936]
    d4a8:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d4ac:	add	x1, x0, #0x688
    d4b0:	ldr	x0, [sp, #16]
    d4b4:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    d4b8:	cmp	w0, #0x0
    d4bc:	b.ne	d4c8 <PySequence_Fast@plt+0x8c38>  // b.any
    d4c0:	mov	x0, #0x0                   	// #0
    d4c4:	b	d52c <PySequence_Fast@plt+0x8c9c>
    d4c8:	ldr	x0, [sp, #32]
    d4cc:	add	x0, x0, #0x20
    d4d0:	bl	4740 <if_nametoindex@plt>
    d4d4:	mov	w0, w0
    d4d8:	str	x0, [sp, #40]
    d4dc:	ldr	x0, [sp, #32]
    d4e0:	mov	x2, x0
    d4e4:	mov	w1, #0x1a82                	// #6786
    d4e8:	adrp	x0, f000 <PyInit__socket@@Base+0x191c>
    d4ec:	add	x0, x0, #0xba0
    d4f0:	bl	4a58 <PySequence_Fast@plt+0x1c8>
    d4f4:	ldr	x0, [sp, #40]
    d4f8:	cmp	x0, #0x0
    d4fc:	b.ne	d524 <PySequence_Fast@plt+0x8c94>  // b.any
    d500:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d504:	ldr	x0, [x0, #3984]
    d508:	ldr	x2, [x0]
    d50c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d510:	add	x1, x0, #0x6a0
    d514:	mov	x0, x2
    d518:	bl	4340 <PyErr_SetString@plt>
    d51c:	mov	x0, #0x0                   	// #0
    d520:	b	d52c <PySequence_Fast@plt+0x8c9c>
    d524:	ldr	x0, [sp, #40]
    d528:	bl	4680 <PyLong_FromUnsignedLong@plt>
    d52c:	ldp	x29, x30, [sp], #48
    d530:	ret
    d534:	stp	x29, x30, [sp, #-64]!
    d538:	mov	x29, sp
    d53c:	str	x0, [sp, #24]
    d540:	str	x1, [sp, #16]
    d544:	ldr	x0, [sp, #16]
    d548:	bl	4660 <PyLong_AsUnsignedLong@plt>
    d54c:	str	x0, [sp, #56]
    d550:	ldr	x0, [sp, #56]
    d554:	cmn	x0, #0x1
    d558:	b.ne	d564 <PySequence_Fast@plt+0x8cd4>  // b.any
    d55c:	mov	x0, #0x0                   	// #0
    d560:	b	d5a4 <PySequence_Fast@plt+0x8d14>
    d564:	ldr	x0, [sp, #56]
    d568:	mov	w2, w0
    d56c:	add	x0, sp, #0x20
    d570:	mov	x1, x0
    d574:	mov	w0, w2
    d578:	bl	43d0 <if_indextoname@plt>
    d57c:	cmp	x0, #0x0
    d580:	b.ne	d59c <PySequence_Fast@plt+0x8d0c>  // b.any
    d584:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d588:	ldr	x0, [x0, #3984]
    d58c:	ldr	x0, [x0]
    d590:	bl	4230 <PyErr_SetFromErrno@plt>
    d594:	mov	x0, #0x0                   	// #0
    d598:	b	d5a4 <PySequence_Fast@plt+0x8d14>
    d59c:	add	x0, sp, #0x20
    d5a0:	bl	46a0 <PyUnicode_DecodeFSDefault@plt>
    d5a4:	ldp	x29, x30, [sp], #64
    d5a8:	ret
    d5ac:	stp	x29, x30, [sp, #-48]!
    d5b0:	mov	x29, sp
    d5b4:	str	x0, [sp, #24]
    d5b8:	str	x1, [sp, #16]
    d5bc:	add	x0, sp, #0x28
    d5c0:	mov	x2, x0
    d5c4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d5c8:	add	x1, x0, #0x790
    d5cc:	ldr	x0, [sp, #16]
    d5d0:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    d5d4:	cmp	w0, #0x0
    d5d8:	b.ne	d5e4 <PySequence_Fast@plt+0x8d54>  // b.any
    d5dc:	mov	x0, #0x0                   	// #0
    d5e0:	b	d63c <PySequence_Fast@plt+0x8dac>
    d5e4:	ldr	x0, [sp, #40]
    d5e8:	cmp	x0, #0x0
    d5ec:	b.lt	d610 <PySequence_Fast@plt+0x8d80>  // b.tstop
    d5f0:	ldr	x0, [sp, #40]
    d5f4:	mov	x2, x0
    d5f8:	add	x0, sp, #0x20
    d5fc:	mov	x1, x0
    d600:	mov	x0, x2
    d604:	bl	7320 <PySequence_Fast@plt+0x2a90>
    d608:	cmp	w0, #0x0
    d60c:	b.ne	d634 <PySequence_Fast@plt+0x8da4>  // b.any
    d610:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d614:	ldr	x0, [x0, #4008]
    d618:	ldr	x2, [x0]
    d61c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d620:	add	x1, x0, #0x7a0
    d624:	mov	x0, x2
    d628:	bl	47a0 <PyErr_Format@plt>
    d62c:	mov	x0, #0x0                   	// #0
    d630:	b	d63c <PySequence_Fast@plt+0x8dac>
    d634:	ldr	x0, [sp, #32]
    d638:	bl	4320 <PyLong_FromSize_t@plt>
    d63c:	ldp	x29, x30, [sp], #48
    d640:	ret
    d644:	stp	x29, x30, [sp, #-48]!
    d648:	mov	x29, sp
    d64c:	str	x0, [sp, #24]
    d650:	str	x1, [sp, #16]
    d654:	add	x0, sp, #0x28
    d658:	mov	x2, x0
    d65c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d660:	add	x1, x0, #0x9c0
    d664:	ldr	x0, [sp, #16]
    d668:	bl	4580 <_PyArg_ParseTuple_SizeT@plt>
    d66c:	cmp	w0, #0x0
    d670:	b.ne	d67c <PySequence_Fast@plt+0x8dec>  // b.any
    d674:	mov	x0, #0x0                   	// #0
    d678:	b	d6d4 <PySequence_Fast@plt+0x8e44>
    d67c:	ldr	x0, [sp, #40]
    d680:	cmp	x0, #0x0
    d684:	b.lt	d6a8 <PySequence_Fast@plt+0x8e18>  // b.tstop
    d688:	ldr	x0, [sp, #40]
    d68c:	mov	x2, x0
    d690:	add	x0, sp, #0x20
    d694:	mov	x1, x0
    d698:	mov	x0, x2
    d69c:	bl	7390 <PySequence_Fast@plt+0x2b00>
    d6a0:	cmp	w0, #0x0
    d6a4:	b.ne	d6cc <PySequence_Fast@plt+0x8e3c>  // b.any
    d6a8:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d6ac:	ldr	x0, [x0, #4008]
    d6b0:	ldr	x2, [x0]
    d6b4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d6b8:	add	x1, x0, #0x9d0
    d6bc:	mov	x0, x2
    d6c0:	bl	4340 <PyErr_SetString@plt>
    d6c4:	mov	x0, #0x0                   	// #0
    d6c8:	b	d6d4 <PySequence_Fast@plt+0x8e44>
    d6cc:	ldr	x0, [sp, #32]
    d6d0:	bl	4320 <PyLong_FromSize_t@plt>
    d6d4:	ldp	x29, x30, [sp], #48
    d6d8:	ret
    d6dc:	mov	w0, #0x1                   	// #1
    d6e0:	ret

000000000000d6e4 <PyInit__socket@@Base>:
    d6e4:	stp	x29, x30, [sp, #-32]!
    d6e8:	mov	x29, sp
    d6ec:	bl	d6dc <PySequence_Fast@plt+0x8e4c>
    d6f0:	cmp	w0, #0x0
    d6f4:	b.ne	d700 <PyInit__socket@@Base+0x1c>  // b.any
    d6f8:	mov	x0, #0x0                   	// #0
    d6fc:	b	f218 <PyInit__socket@@Base+0x1b34>
    d700:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d704:	add	x0, x0, #0x400
    d708:	adrp	x1, 27000 <PyInit__socket@@Base+0x1991c>
    d70c:	ldr	x1, [x1, #4016]
    d710:	str	x1, [x0, #8]
    d714:	mov	w1, #0x3f5                 	// #1013
    d718:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d71c:	add	x0, x0, #0xde8
    d720:	bl	4550 <PyModule_Create2@plt>
    d724:	str	x0, [sp, #24]
    d728:	ldr	x0, [sp, #24]
    d72c:	cmp	x0, #0x0
    d730:	b.ne	d73c <PyInit__socket@@Base+0x58>  // b.any
    d734:	mov	x0, #0x0                   	// #0
    d738:	b	f218 <PyInit__socket@@Base+0x1b34>
    d73c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d740:	ldr	x0, [x0, #3984]
    d744:	ldr	x0, [x0]
    d748:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d74c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d750:	ldr	x0, [x0, #3984]
    d754:	ldr	x1, [x0]
    d758:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d75c:	add	x0, x0, #0xdd0
    d760:	str	x1, [x0, #8]
    d764:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d768:	ldr	x0, [x0, #3984]
    d76c:	ldr	x0, [x0]
    d770:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d774:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d778:	ldr	x0, [x0, #3984]
    d77c:	ldr	x0, [x0]
    d780:	mov	x2, x0
    d784:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d788:	add	x1, x0, #0xd80
    d78c:	ldr	x0, [sp, #24]
    d790:	bl	4700 <PyModule_AddObject@plt>
    d794:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d798:	ldr	x0, [x0, #3984]
    d79c:	ldr	x0, [x0]
    d7a0:	mov	x2, #0x0                   	// #0
    d7a4:	mov	x1, x0
    d7a8:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d7ac:	add	x0, x0, #0xd88
    d7b0:	bl	44b0 <PyErr_NewException@plt>
    d7b4:	mov	x1, x0
    d7b8:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d7bc:	add	x0, x0, #0xf28
    d7c0:	str	x1, [x0]
    d7c4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d7c8:	add	x0, x0, #0xf28
    d7cc:	ldr	x0, [x0]
    d7d0:	cmp	x0, #0x0
    d7d4:	b.ne	d7e0 <PyInit__socket@@Base+0xfc>  // b.any
    d7d8:	mov	x0, #0x0                   	// #0
    d7dc:	b	f218 <PyInit__socket@@Base+0x1b34>
    d7e0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d7e4:	add	x0, x0, #0xf28
    d7e8:	ldr	x0, [x0]
    d7ec:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d7f0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d7f4:	add	x0, x0, #0xf28
    d7f8:	ldr	x0, [x0]
    d7fc:	mov	x2, x0
    d800:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d804:	add	x1, x0, #0xd98
    d808:	ldr	x0, [sp, #24]
    d80c:	bl	4700 <PyModule_AddObject@plt>
    d810:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d814:	ldr	x0, [x0, #3984]
    d818:	ldr	x0, [x0]
    d81c:	mov	x2, #0x0                   	// #0
    d820:	mov	x1, x0
    d824:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d828:	add	x0, x0, #0xda0
    d82c:	bl	44b0 <PyErr_NewException@plt>
    d830:	mov	x1, x0
    d834:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d838:	add	x0, x0, #0xf30
    d83c:	str	x1, [x0]
    d840:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d844:	add	x0, x0, #0xf30
    d848:	ldr	x0, [x0]
    d84c:	cmp	x0, #0x0
    d850:	b.ne	d85c <PyInit__socket@@Base+0x178>  // b.any
    d854:	mov	x0, #0x0                   	// #0
    d858:	b	f218 <PyInit__socket@@Base+0x1b34>
    d85c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d860:	add	x0, x0, #0xf30
    d864:	ldr	x0, [x0]
    d868:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d86c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d870:	add	x0, x0, #0xf30
    d874:	ldr	x0, [x0]
    d878:	mov	x2, x0
    d87c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d880:	add	x1, x0, #0xdb0
    d884:	ldr	x0, [sp, #24]
    d888:	bl	4700 <PyModule_AddObject@plt>
    d88c:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d890:	ldr	x0, [x0, #3984]
    d894:	ldr	x0, [x0]
    d898:	mov	x2, #0x0                   	// #0
    d89c:	mov	x1, x0
    d8a0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d8a4:	add	x0, x0, #0xdc0
    d8a8:	bl	44b0 <PyErr_NewException@plt>
    d8ac:	mov	x1, x0
    d8b0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d8b4:	add	x0, x0, #0xf38
    d8b8:	str	x1, [x0]
    d8bc:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d8c0:	add	x0, x0, #0xf38
    d8c4:	ldr	x0, [x0]
    d8c8:	cmp	x0, #0x0
    d8cc:	b.ne	d8d8 <PyInit__socket@@Base+0x1f4>  // b.any
    d8d0:	mov	x0, #0x0                   	// #0
    d8d4:	b	f218 <PyInit__socket@@Base+0x1b34>
    d8d8:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d8dc:	add	x0, x0, #0xf38
    d8e0:	ldr	x1, [x0]
    d8e4:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d8e8:	add	x0, x0, #0xdd0
    d8ec:	str	x1, [x0, #16]
    d8f0:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d8f4:	add	x0, x0, #0xf38
    d8f8:	ldr	x0, [x0]
    d8fc:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d900:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d904:	add	x0, x0, #0xf38
    d908:	ldr	x0, [x0]
    d90c:	mov	x2, x0
    d910:	adrp	x0, 12000 <PyInit__socket@@Base+0x491c>
    d914:	add	x1, x0, #0xef8
    d918:	ldr	x0, [sp, #24]
    d91c:	bl	4700 <PyModule_AddObject@plt>
    d920:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d924:	add	x0, x0, #0x400
    d928:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d92c:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d930:	add	x2, x0, #0x400
    d934:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d938:	add	x1, x0, #0xdd0
    d93c:	ldr	x0, [sp, #24]
    d940:	bl	4700 <PyModule_AddObject@plt>
    d944:	cmp	w0, #0x0
    d948:	b.eq	d954 <PyInit__socket@@Base+0x270>  // b.none
    d94c:	mov	x0, #0x0                   	// #0
    d950:	b	f218 <PyInit__socket@@Base+0x1b34>
    d954:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d958:	add	x0, x0, #0x400
    d95c:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d960:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d964:	add	x2, x0, #0x400
    d968:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d96c:	add	x1, x0, #0xde0
    d970:	ldr	x0, [sp, #24]
    d974:	bl	4700 <PyModule_AddObject@plt>
    d978:	cmp	w0, #0x0
    d97c:	b.eq	d988 <PyInit__socket@@Base+0x2a4>  // b.none
    d980:	mov	x0, #0x0                   	// #0
    d984:	b	f218 <PyInit__socket@@Base+0x1b34>
    d988:	adrp	x0, 27000 <PyInit__socket@@Base+0x1991c>
    d98c:	ldr	x0, [x0, #4032]
    d990:	str	x0, [sp, #16]
    d994:	ldr	x0, [sp, #16]
    d998:	bl	4a30 <PySequence_Fast@plt+0x1a0>
    d99c:	ldr	x2, [sp, #16]
    d9a0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d9a4:	add	x1, x0, #0xde8
    d9a8:	ldr	x0, [sp, #24]
    d9ac:	bl	4700 <PyModule_AddObject@plt>
    d9b0:	mov	x2, #0x0                   	// #0
    d9b4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d9b8:	add	x1, x0, #0xdf8
    d9bc:	adrp	x0, 28000 <PyInit__socket@@Base+0x1a91c>
    d9c0:	add	x0, x0, #0xdd0
    d9c4:	bl	4770 <PyCapsule_New@plt>
    d9c8:	mov	x2, x0
    d9cc:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d9d0:	add	x1, x0, #0xe08
    d9d4:	ldr	x0, [sp, #24]
    d9d8:	bl	4700 <PyModule_AddObject@plt>
    d9dc:	cmp	w0, #0x0
    d9e0:	b.eq	d9ec <PyInit__socket@@Base+0x308>  // b.none
    d9e4:	mov	x0, #0x0                   	// #0
    d9e8:	b	f218 <PyInit__socket@@Base+0x1b34>
    d9ec:	mov	x2, #0x0                   	// #0
    d9f0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    d9f4:	add	x1, x0, #0xe10
    d9f8:	ldr	x0, [sp, #24]
    d9fc:	bl	4180 <PyModule_AddIntConstant@plt>
    da00:	mov	x2, #0x2                   	// #2
    da04:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da08:	add	x1, x0, #0xe20
    da0c:	ldr	x0, [sp, #24]
    da10:	bl	4180 <PyModule_AddIntConstant@plt>
    da14:	mov	x2, #0x1                   	// #1
    da18:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da1c:	add	x1, x0, #0xe28
    da20:	ldr	x0, [sp, #24]
    da24:	bl	4180 <PyModule_AddIntConstant@plt>
    da28:	mov	x2, #0x3                   	// #3
    da2c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da30:	add	x1, x0, #0xe30
    da34:	ldr	x0, [sp, #24]
    da38:	bl	4180 <PyModule_AddIntConstant@plt>
    da3c:	mov	x2, #0x4                   	// #4
    da40:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da44:	add	x1, x0, #0xe38
    da48:	ldr	x0, [sp, #24]
    da4c:	bl	4180 <PyModule_AddIntConstant@plt>
    da50:	mov	x2, #0x5                   	// #5
    da54:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da58:	add	x1, x0, #0xe40
    da5c:	ldr	x0, [sp, #24]
    da60:	bl	4180 <PyModule_AddIntConstant@plt>
    da64:	mov	x2, #0x6                   	// #6
    da68:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da6c:	add	x1, x0, #0xe50
    da70:	ldr	x0, [sp, #24]
    da74:	bl	4180 <PyModule_AddIntConstant@plt>
    da78:	mov	x2, #0x7                   	// #7
    da7c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da80:	add	x1, x0, #0xe60
    da84:	ldr	x0, [sp, #24]
    da88:	bl	4180 <PyModule_AddIntConstant@plt>
    da8c:	mov	x2, #0x8                   	// #8
    da90:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    da94:	add	x1, x0, #0xe70
    da98:	ldr	x0, [sp, #24]
    da9c:	bl	4180 <PyModule_AddIntConstant@plt>
    daa0:	mov	x2, #0x26                  	// #38
    daa4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    daa8:	add	x1, x0, #0xe80
    daac:	ldr	x0, [sp, #24]
    dab0:	bl	4180 <PyModule_AddIntConstant@plt>
    dab4:	mov	x2, #0x9                   	// #9
    dab8:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dabc:	add	x1, x0, #0xe88
    dac0:	ldr	x0, [sp, #24]
    dac4:	bl	4180 <PyModule_AddIntConstant@plt>
    dac8:	mov	x2, #0xa                   	// #10
    dacc:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dad0:	add	x1, x0, #0xe90
    dad4:	ldr	x0, [sp, #24]
    dad8:	bl	4180 <PyModule_AddIntConstant@plt>
    dadc:	mov	x2, #0xb                   	// #11
    dae0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dae4:	add	x1, x0, #0xea0
    dae8:	ldr	x0, [sp, #24]
    daec:	bl	4180 <PyModule_AddIntConstant@plt>
    daf0:	mov	x2, #0xc                   	// #12
    daf4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    daf8:	add	x1, x0, #0xea8
    dafc:	ldr	x0, [sp, #24]
    db00:	bl	4180 <PyModule_AddIntConstant@plt>
    db04:	mov	x2, #0xd                   	// #13
    db08:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db0c:	add	x1, x0, #0xeb8
    db10:	ldr	x0, [sp, #24]
    db14:	bl	4180 <PyModule_AddIntConstant@plt>
    db18:	mov	x2, #0xe                   	// #14
    db1c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db20:	add	x1, x0, #0xec8
    db24:	ldr	x0, [sp, #24]
    db28:	bl	4180 <PyModule_AddIntConstant@plt>
    db2c:	mov	x2, #0xf                   	// #15
    db30:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db34:	add	x1, x0, #0xed8
    db38:	ldr	x0, [sp, #24]
    db3c:	bl	4180 <PyModule_AddIntConstant@plt>
    db40:	mov	x2, #0x10                  	// #16
    db44:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db48:	add	x1, x0, #0xee0
    db4c:	ldr	x0, [sp, #24]
    db50:	bl	4180 <PyModule_AddIntConstant@plt>
    db54:	mov	x2, #0x0                   	// #0
    db58:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db5c:	add	x1, x0, #0xef0
    db60:	ldr	x0, [sp, #24]
    db64:	bl	4180 <PyModule_AddIntConstant@plt>
    db68:	mov	x2, #0x2                   	// #2
    db6c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db70:	add	x1, x0, #0xf00
    db74:	ldr	x0, [sp, #24]
    db78:	bl	4180 <PyModule_AddIntConstant@plt>
    db7c:	mov	x2, #0x3                   	// #3
    db80:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db84:	add	x1, x0, #0xf18
    db88:	ldr	x0, [sp, #24]
    db8c:	bl	4180 <PyModule_AddIntConstant@plt>
    db90:	mov	x2, #0x5                   	// #5
    db94:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    db98:	add	x1, x0, #0xf30
    db9c:	ldr	x0, [sp, #24]
    dba0:	bl	4180 <PyModule_AddIntConstant@plt>
    dba4:	mov	x2, #0x6                   	// #6
    dba8:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dbac:	add	x1, x0, #0xf40
    dbb0:	ldr	x0, [sp, #24]
    dbb4:	bl	4180 <PyModule_AddIntConstant@plt>
    dbb8:	mov	x2, #0xd                   	// #13
    dbbc:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dbc0:	add	x1, x0, #0xf50
    dbc4:	ldr	x0, [sp, #24]
    dbc8:	bl	4180 <PyModule_AddIntConstant@plt>
    dbcc:	mov	x2, #0xe                   	// #14
    dbd0:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dbd4:	add	x1, x0, #0xf60
    dbd8:	ldr	x0, [sp, #24]
    dbdc:	bl	4180 <PyModule_AddIntConstant@plt>
    dbe0:	mov	x2, #0x15                  	// #21
    dbe4:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dbe8:	add	x1, x0, #0xf70
    dbec:	ldr	x0, [sp, #24]
    dbf0:	bl	4180 <PyModule_AddIntConstant@plt>
    dbf4:	mov	x2, #0x2a                  	// #42
    dbf8:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dbfc:	add	x1, x0, #0xf80
    dc00:	ldr	x0, [sp, #24]
    dc04:	bl	4180 <PyModule_AddIntConstant@plt>
    dc08:	mov	x2, #0x28                  	// #40
    dc0c:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dc10:	add	x1, x0, #0xf90
    dc14:	ldr	x0, [sp, #24]
    dc18:	bl	4180 <PyModule_AddIntConstant@plt>
    dc1c:	mov	x2, #0x0                   	// #0
    dc20:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dc24:	add	x1, x0, #0xfa0
    dc28:	ldr	x0, [sp, #24]
    dc2c:	bl	4180 <PyModule_AddIntConstant@plt>
    dc30:	mov	x2, #0x1                   	// #1
    dc34:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dc38:	add	x1, x0, #0xfc0
    dc3c:	ldr	x0, [sp, #24]
    dc40:	bl	4180 <PyModule_AddIntConstant@plt>
    dc44:	mov	x2, #0x2                   	// #2
    dc48:	adrp	x0, 14000 <PyInit__socket@@Base+0x691c>
    dc4c:	add	x1, x0, #0xfe0
    dc50:	ldr	x0, [sp, #24]
    dc54:	bl	4180 <PyModule_AddIntConstant@plt>
    dc58:	mov	x2, #0xffffffff            	// #4294967295
    dc5c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dc60:	add	x1, x0, #0x0
    dc64:	ldr	x0, [sp, #24]
    dc68:	bl	4180 <PyModule_AddIntConstant@plt>
    dc6c:	mov	x2, #0xffffffff            	// #4294967295
    dc70:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dc74:	add	x1, x0, #0x10
    dc78:	ldr	x0, [sp, #24]
    dc7c:	bl	4180 <PyModule_AddIntConstant@plt>
    dc80:	mov	x2, #0x2                   	// #2
    dc84:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dc88:	add	x1, x0, #0x20
    dc8c:	ldr	x0, [sp, #24]
    dc90:	bl	4180 <PyModule_AddIntConstant@plt>
    dc94:	mov	x2, #0xffffffff            	// #4294967295
    dc98:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dc9c:	add	x1, x0, #0x30
    dca0:	ldr	x0, [sp, #24]
    dca4:	bl	4180 <PyModule_AddIntConstant@plt>
    dca8:	mov	x2, #0x7b9                 	// #1977
    dcac:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dcb0:	add	x1, x0, #0x50
    dcb4:	ldr	x0, [sp, #24]
    dcb8:	bl	4180 <PyModule_AddIntConstant@plt>
    dcbc:	mov	x2, #0x10                  	// #16
    dcc0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dcc4:	add	x1, x0, #0x70
    dcc8:	ldr	x0, [sp, #24]
    dccc:	bl	4180 <PyModule_AddIntConstant@plt>
    dcd0:	mov	x2, #0x12                  	// #18
    dcd4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dcd8:	add	x1, x0, #0x80
    dcdc:	ldr	x0, [sp, #24]
    dce0:	bl	4180 <PyModule_AddIntConstant@plt>
    dce4:	mov	x2, #0x13                  	// #19
    dce8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dcec:	add	x1, x0, #0x88
    dcf0:	ldr	x0, [sp, #24]
    dcf4:	bl	4180 <PyModule_AddIntConstant@plt>
    dcf8:	mov	x2, #0x14                  	// #20
    dcfc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd00:	add	x1, x0, #0x98
    dd04:	ldr	x0, [sp, #24]
    dd08:	bl	4180 <PyModule_AddIntConstant@plt>
    dd0c:	mov	x2, #0x16                  	// #22
    dd10:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd14:	add	x1, x0, #0xa8
    dd18:	ldr	x0, [sp, #24]
    dd1c:	bl	4180 <PyModule_AddIntConstant@plt>
    dd20:	mov	x2, #0x17                  	// #23
    dd24:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd28:	add	x1, x0, #0xb0
    dd2c:	ldr	x0, [sp, #24]
    dd30:	bl	4180 <PyModule_AddIntConstant@plt>
    dd34:	mov	x2, #0x18                  	// #24
    dd38:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd3c:	add	x1, x0, #0xb8
    dd40:	ldr	x0, [sp, #24]
    dd44:	bl	4180 <PyModule_AddIntConstant@plt>
    dd48:	mov	x2, #0x19                  	// #25
    dd4c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd50:	add	x1, x0, #0xc8
    dd54:	ldr	x0, [sp, #24]
    dd58:	bl	4180 <PyModule_AddIntConstant@plt>
    dd5c:	mov	x2, #0x1a                  	// #26
    dd60:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd64:	add	x1, x0, #0xd8
    dd68:	ldr	x0, [sp, #24]
    dd6c:	bl	4180 <PyModule_AddIntConstant@plt>
    dd70:	mov	x2, #0x1d                  	// #29
    dd74:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd78:	add	x1, x0, #0xe0
    dd7c:	ldr	x0, [sp, #24]
    dd80:	bl	4180 <PyModule_AddIntConstant@plt>
    dd84:	mov	x2, #0x1d                  	// #29
    dd88:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dd8c:	add	x1, x0, #0xe8
    dd90:	ldr	x0, [sp, #24]
    dd94:	bl	4180 <PyModule_AddIntConstant@plt>
    dd98:	mov	x2, #0x15                  	// #21
    dd9c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dda0:	add	x1, x0, #0xf0
    dda4:	ldr	x0, [sp, #24]
    dda8:	bl	4180 <PyModule_AddIntConstant@plt>
    ddac:	mov	x2, #0x15                  	// #21
    ddb0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ddb4:	add	x1, x0, #0xf8
    ddb8:	ldr	x0, [sp, #24]
    ddbc:	bl	4180 <PyModule_AddIntConstant@plt>
    ddc0:	mov	x2, #0x11                  	// #17
    ddc4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ddc8:	add	x1, x0, #0x100
    ddcc:	ldr	x0, [sp, #24]
    ddd0:	bl	4180 <PyModule_AddIntConstant@plt>
    ddd4:	mov	x2, #0x11                  	// #17
    ddd8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dddc:	add	x1, x0, #0x110
    dde0:	ldr	x0, [sp, #24]
    dde4:	bl	4180 <PyModule_AddIntConstant@plt>
    dde8:	mov	x2, #0x0                   	// #0
    ddec:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ddf0:	add	x1, x0, #0x120
    ddf4:	ldr	x0, [sp, #24]
    ddf8:	bl	4180 <PyModule_AddIntConstant@plt>
    ddfc:	mov	x2, #0x1                   	// #1
    de00:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de04:	add	x1, x0, #0x130
    de08:	ldr	x0, [sp, #24]
    de0c:	bl	4180 <PyModule_AddIntConstant@plt>
    de10:	mov	x2, #0x2                   	// #2
    de14:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de18:	add	x1, x0, #0x148
    de1c:	ldr	x0, [sp, #24]
    de20:	bl	4180 <PyModule_AddIntConstant@plt>
    de24:	mov	x2, #0x3                   	// #3
    de28:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de2c:	add	x1, x0, #0x160
    de30:	ldr	x0, [sp, #24]
    de34:	bl	4180 <PyModule_AddIntConstant@plt>
    de38:	mov	x2, #0x4                   	// #4
    de3c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de40:	add	x1, x0, #0x178
    de44:	ldr	x0, [sp, #24]
    de48:	bl	4180 <PyModule_AddIntConstant@plt>
    de4c:	mov	x2, #0x5                   	// #5
    de50:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de54:	add	x1, x0, #0x188
    de58:	ldr	x0, [sp, #24]
    de5c:	bl	4180 <PyModule_AddIntConstant@plt>
    de60:	mov	x2, #0x6                   	// #6
    de64:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de68:	add	x1, x0, #0x198
    de6c:	ldr	x0, [sp, #24]
    de70:	bl	4180 <PyModule_AddIntConstant@plt>
    de74:	mov	x2, #0x1e                  	// #30
    de78:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de7c:	add	x1, x0, #0x1b0
    de80:	ldr	x0, [sp, #24]
    de84:	bl	4180 <PyModule_AddIntConstant@plt>
    de88:	mov	x2, #0x1                   	// #1
    de8c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    de90:	add	x1, x0, #0x1b8
    de94:	ldr	x0, [sp, #24]
    de98:	bl	4180 <PyModule_AddIntConstant@plt>
    de9c:	mov	x2, #0x2                   	// #2
    dea0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dea4:	add	x1, x0, #0x1d0
    dea8:	ldr	x0, [sp, #24]
    deac:	bl	4180 <PyModule_AddIntConstant@plt>
    deb0:	mov	x2, #0x3                   	// #3
    deb4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    deb8:	add	x1, x0, #0x1e0
    debc:	ldr	x0, [sp, #24]
    dec0:	bl	4180 <PyModule_AddIntConstant@plt>
    dec4:	mov	x2, #0x1                   	// #1
    dec8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    decc:	add	x1, x0, #0x1f0
    ded0:	ldr	x0, [sp, #24]
    ded4:	bl	4180 <PyModule_AddIntConstant@plt>
    ded8:	mov	x2, #0x2                   	// #2
    dedc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dee0:	add	x1, x0, #0x200
    dee4:	ldr	x0, [sp, #24]
    dee8:	bl	4180 <PyModule_AddIntConstant@plt>
    deec:	mov	x2, #0x3                   	// #3
    def0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    def4:	add	x1, x0, #0x218
    def8:	ldr	x0, [sp, #24]
    defc:	bl	4180 <PyModule_AddIntConstant@plt>
    df00:	mov	x2, #0x10f                 	// #271
    df04:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df08:	add	x1, x0, #0x228
    df0c:	ldr	x0, [sp, #24]
    df10:	bl	4180 <PyModule_AddIntConstant@plt>
    df14:	mov	x2, #0x7f                  	// #127
    df18:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df1c:	add	x1, x0, #0x238
    df20:	ldr	x0, [sp, #24]
    df24:	bl	4180 <PyModule_AddIntConstant@plt>
    df28:	mov	x2, #0x80                  	// #128
    df2c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df30:	add	x1, x0, #0x248
    df34:	ldr	x0, [sp, #24]
    df38:	bl	4180 <PyModule_AddIntConstant@plt>
    df3c:	mov	x2, #0x81                  	// #129
    df40:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df44:	add	x1, x0, #0x260
    df48:	ldr	x0, [sp, #24]
    df4c:	bl	4180 <PyModule_AddIntConstant@plt>
    df50:	mov	x2, #0x82                  	// #130
    df54:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df58:	add	x1, x0, #0x278
    df5c:	ldr	x0, [sp, #24]
    df60:	bl	4180 <PyModule_AddIntConstant@plt>
    df64:	mov	x2, #0x0                   	// #0
    df68:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df6c:	add	x1, x0, #0x290
    df70:	ldr	x0, [sp, #24]
    df74:	bl	4180 <PyModule_AddIntConstant@plt>
    df78:	mov	x2, #0x1                   	// #1
    df7c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df80:	add	x1, x0, #0x2a8
    df84:	ldr	x0, [sp, #24]
    df88:	bl	4180 <PyModule_AddIntConstant@plt>
    df8c:	mov	x2, #0x2                   	// #2
    df90:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    df94:	add	x1, x0, #0x2c0
    df98:	ldr	x0, [sp, #24]
    df9c:	bl	4180 <PyModule_AddIntConstant@plt>
    dfa0:	mov	x2, #0x3                   	// #3
    dfa4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dfa8:	add	x1, x0, #0x2d8
    dfac:	ldr	x0, [sp, #24]
    dfb0:	bl	4180 <PyModule_AddIntConstant@plt>
    dfb4:	mov	x2, #0x1                   	// #1
    dfb8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dfbc:	add	x1, x0, #0x2f8
    dfc0:	ldr	x0, [sp, #24]
    dfc4:	bl	4180 <PyModule_AddIntConstant@plt>
    dfc8:	mov	x2, #0x2                   	// #2
    dfcc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dfd0:	add	x1, x0, #0x308
    dfd4:	ldr	x0, [sp, #24]
    dfd8:	bl	4180 <PyModule_AddIntConstant@plt>
    dfdc:	mov	x2, #0x4                   	// #4
    dfe0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dfe4:	add	x1, x0, #0x320
    dfe8:	ldr	x0, [sp, #24]
    dfec:	bl	4180 <PyModule_AddIntConstant@plt>
    dff0:	mov	x2, #0xffffffffffffffff    	// #-1
    dff4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    dff8:	add	x1, x0, #0x330
    dffc:	ldr	x0, [sp, #24]
    e000:	bl	4180 <PyModule_AddIntConstant@plt>
    e004:	mov	x2, #0x1                   	// #1
    e008:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e00c:	add	x1, x0, #0x348
    e010:	ldr	x0, [sp, #24]
    e014:	bl	4180 <PyModule_AddIntConstant@plt>
    e018:	mov	x2, #0x2                   	// #2
    e01c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e020:	add	x1, x0, #0x358
    e024:	ldr	x0, [sp, #24]
    e028:	bl	4180 <PyModule_AddIntConstant@plt>
    e02c:	mov	x2, #0x3                   	// #3
    e030:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e034:	add	x1, x0, #0x368
    e038:	ldr	x0, [sp, #24]
    e03c:	bl	4180 <PyModule_AddIntConstant@plt>
    e040:	mov	x2, #0x0                   	// #0
    e044:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e048:	add	x1, x0, #0x380
    e04c:	ldr	x0, [sp, #24]
    e050:	bl	4180 <PyModule_AddIntConstant@plt>
    e054:	mov	x2, #0x1                   	// #1
    e058:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e05c:	add	x1, x0, #0x390
    e060:	ldr	x0, [sp, #24]
    e064:	bl	4180 <PyModule_AddIntConstant@plt>
    e068:	mov	x2, #0x1                   	// #1
    e06c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e070:	add	x1, x0, #0x3a0
    e074:	ldr	x0, [sp, #24]
    e078:	bl	4180 <PyModule_AddIntConstant@plt>
    e07c:	mov	x2, #0x2                   	// #2
    e080:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e084:	add	x1, x0, #0x3b0
    e088:	ldr	x0, [sp, #24]
    e08c:	bl	4180 <PyModule_AddIntConstant@plt>
    e090:	mov	x2, #0x3                   	// #3
    e094:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e098:	add	x1, x0, #0x3c0
    e09c:	ldr	x0, [sp, #24]
    e0a0:	bl	4180 <PyModule_AddIntConstant@plt>
    e0a4:	mov	x2, #0x4                   	// #4
    e0a8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e0ac:	add	x1, x0, #0x3d0
    e0b0:	ldr	x0, [sp, #24]
    e0b4:	bl	4180 <PyModule_AddIntConstant@plt>
    e0b8:	mov	x2, #0x5                   	// #5
    e0bc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e0c0:	add	x1, x0, #0x3e8
    e0c4:	ldr	x0, [sp, #24]
    e0c8:	bl	4180 <PyModule_AddIntConstant@plt>
    e0cc:	mov	x2, #0x6                   	// #6
    e0d0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e0d4:	add	x1, x0, #0x400
    e0d8:	ldr	x0, [sp, #24]
    e0dc:	bl	4180 <PyModule_AddIntConstant@plt>
    e0e0:	mov	x2, #0x0                   	// #0
    e0e4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e0e8:	add	x1, x0, #0x410
    e0ec:	ldr	x0, [sp, #24]
    e0f0:	bl	4180 <PyModule_AddIntConstant@plt>
    e0f4:	mov	x2, #0x1                   	// #1
    e0f8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e0fc:	add	x1, x0, #0x420
    e100:	ldr	x0, [sp, #24]
    e104:	bl	4180 <PyModule_AddIntConstant@plt>
    e108:	mov	x2, #0x2                   	// #2
    e10c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e110:	add	x1, x0, #0x430
    e114:	ldr	x0, [sp, #24]
    e118:	bl	4180 <PyModule_AddIntConstant@plt>
    e11c:	mov	x2, #0x3                   	// #3
    e120:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e124:	add	x1, x0, #0x440
    e128:	ldr	x0, [sp, #24]
    e12c:	bl	4180 <PyModule_AddIntConstant@plt>
    e130:	mov	x2, #0x1                   	// #1
    e134:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e138:	add	x1, x0, #0x450
    e13c:	ldr	x0, [sp, #24]
    e140:	bl	4180 <PyModule_AddIntConstant@plt>
    e144:	mov	x2, #0x2                   	// #2
    e148:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e14c:	add	x1, x0, #0x460
    e150:	ldr	x0, [sp, #24]
    e154:	bl	4180 <PyModule_AddIntConstant@plt>
    e158:	mov	x2, #0x3                   	// #3
    e15c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e160:	add	x1, x0, #0x470
    e164:	ldr	x0, [sp, #24]
    e168:	bl	4180 <PyModule_AddIntConstant@plt>
    e16c:	mov	x2, #0x5                   	// #5
    e170:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e174:	add	x1, x0, #0x480
    e178:	ldr	x0, [sp, #24]
    e17c:	bl	4180 <PyModule_AddIntConstant@plt>
    e180:	mov	x2, #0x4                   	// #4
    e184:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e188:	add	x1, x0, #0x490
    e18c:	ldr	x0, [sp, #24]
    e190:	bl	4180 <PyModule_AddIntConstant@plt>
    e194:	mov	x2, #0x80000               	// #524288
    e198:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e19c:	add	x1, x0, #0x4a0
    e1a0:	ldr	x0, [sp, #24]
    e1a4:	bl	4180 <PyModule_AddIntConstant@plt>
    e1a8:	mov	x2, #0x800                 	// #2048
    e1ac:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e1b0:	add	x1, x0, #0x4b0
    e1b4:	ldr	x0, [sp, #24]
    e1b8:	bl	4180 <PyModule_AddIntConstant@plt>
    e1bc:	mov	x2, #0x1                   	// #1
    e1c0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e1c4:	add	x1, x0, #0x4c0
    e1c8:	ldr	x0, [sp, #24]
    e1cc:	bl	4180 <PyModule_AddIntConstant@plt>
    e1d0:	mov	x2, #0x1e                  	// #30
    e1d4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e1d8:	add	x1, x0, #0x4d0
    e1dc:	ldr	x0, [sp, #24]
    e1e0:	bl	4180 <PyModule_AddIntConstant@plt>
    e1e4:	mov	x2, #0x2                   	// #2
    e1e8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e1ec:	add	x1, x0, #0x4e0
    e1f0:	ldr	x0, [sp, #24]
    e1f4:	bl	4180 <PyModule_AddIntConstant@plt>
    e1f8:	mov	x2, #0x9                   	// #9
    e1fc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e200:	add	x1, x0, #0x4f0
    e204:	ldr	x0, [sp, #24]
    e208:	bl	4180 <PyModule_AddIntConstant@plt>
    e20c:	mov	x2, #0x5                   	// #5
    e210:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e214:	add	x1, x0, #0x500
    e218:	ldr	x0, [sp, #24]
    e21c:	bl	4180 <PyModule_AddIntConstant@plt>
    e220:	mov	x2, #0x6                   	// #6
    e224:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e228:	add	x1, x0, #0x510
    e22c:	ldr	x0, [sp, #24]
    e230:	bl	4180 <PyModule_AddIntConstant@plt>
    e234:	mov	x2, #0xd                   	// #13
    e238:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e23c:	add	x1, x0, #0x520
    e240:	ldr	x0, [sp, #24]
    e244:	bl	4180 <PyModule_AddIntConstant@plt>
    e248:	mov	x2, #0xa                   	// #10
    e24c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e250:	add	x1, x0, #0x530
    e254:	ldr	x0, [sp, #24]
    e258:	bl	4180 <PyModule_AddIntConstant@plt>
    e25c:	mov	x2, #0xf                   	// #15
    e260:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e264:	add	x1, x0, #0x540
    e268:	ldr	x0, [sp, #24]
    e26c:	bl	4180 <PyModule_AddIntConstant@plt>
    e270:	mov	x2, #0x7                   	// #7
    e274:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e278:	add	x1, x0, #0x550
    e27c:	ldr	x0, [sp, #24]
    e280:	bl	4180 <PyModule_AddIntConstant@plt>
    e284:	mov	x2, #0x8                   	// #8
    e288:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e28c:	add	x1, x0, #0x560
    e290:	ldr	x0, [sp, #24]
    e294:	bl	4180 <PyModule_AddIntConstant@plt>
    e298:	mov	x2, #0x13                  	// #19
    e29c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e2a0:	add	x1, x0, #0x570
    e2a4:	ldr	x0, [sp, #24]
    e2a8:	bl	4180 <PyModule_AddIntConstant@plt>
    e2ac:	mov	x2, #0x12                  	// #18
    e2b0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e2b4:	add	x1, x0, #0x580
    e2b8:	ldr	x0, [sp, #24]
    e2bc:	bl	4180 <PyModule_AddIntConstant@plt>
    e2c0:	mov	x2, #0x15                  	// #21
    e2c4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e2c8:	add	x1, x0, #0x590
    e2cc:	ldr	x0, [sp, #24]
    e2d0:	bl	4180 <PyModule_AddIntConstant@plt>
    e2d4:	mov	x2, #0x14                  	// #20
    e2d8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e2dc:	add	x1, x0, #0x5a0
    e2e0:	ldr	x0, [sp, #24]
    e2e4:	bl	4180 <PyModule_AddIntConstant@plt>
    e2e8:	mov	x2, #0x4                   	// #4
    e2ec:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e2f0:	add	x1, x0, #0x5b0
    e2f4:	ldr	x0, [sp, #24]
    e2f8:	bl	4180 <PyModule_AddIntConstant@plt>
    e2fc:	mov	x2, #0x3                   	// #3
    e300:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e304:	add	x1, x0, #0x5c0
    e308:	ldr	x0, [sp, #24]
    e30c:	bl	4180 <PyModule_AddIntConstant@plt>
    e310:	mov	x2, #0x10                  	// #16
    e314:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e318:	add	x1, x0, #0x5c8
    e31c:	ldr	x0, [sp, #24]
    e320:	bl	4180 <PyModule_AddIntConstant@plt>
    e324:	mov	x2, #0x11                  	// #17
    e328:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e32c:	add	x1, x0, #0x5d8
    e330:	ldr	x0, [sp, #24]
    e334:	bl	4180 <PyModule_AddIntConstant@plt>
    e338:	mov	x2, #0x22                  	// #34
    e33c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e340:	add	x1, x0, #0x5e8
    e344:	ldr	x0, [sp, #24]
    e348:	bl	4180 <PyModule_AddIntConstant@plt>
    e34c:	mov	x2, #0x1f                  	// #31
    e350:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e354:	add	x1, x0, #0x5f8
    e358:	ldr	x0, [sp, #24]
    e35c:	bl	4180 <PyModule_AddIntConstant@plt>
    e360:	mov	x2, #0x19                  	// #25
    e364:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e368:	add	x1, x0, #0x608
    e36c:	ldr	x0, [sp, #24]
    e370:	bl	4180 <PyModule_AddIntConstant@plt>
    e374:	mov	x2, #0xc                   	// #12
    e378:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e37c:	add	x1, x0, #0x618
    e380:	ldr	x0, [sp, #24]
    e384:	bl	4180 <PyModule_AddIntConstant@plt>
    e388:	mov	x2, #0x24                  	// #36
    e38c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e390:	add	x1, x0, #0x628
    e394:	ldr	x0, [sp, #24]
    e398:	bl	4180 <PyModule_AddIntConstant@plt>
    e39c:	mov	x2, #0x27                  	// #39
    e3a0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e3a4:	add	x1, x0, #0x630
    e3a8:	ldr	x0, [sp, #24]
    e3ac:	bl	4180 <PyModule_AddIntConstant@plt>
    e3b0:	mov	x2, #0x26                  	// #38
    e3b4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e3b8:	add	x1, x0, #0x640
    e3bc:	ldr	x0, [sp, #24]
    e3c0:	bl	4180 <PyModule_AddIntConstant@plt>
    e3c4:	mov	x2, #0x1000                	// #4096
    e3c8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e3cc:	add	x1, x0, #0x650
    e3d0:	ldr	x0, [sp, #24]
    e3d4:	bl	4180 <PyModule_AddIntConstant@plt>
    e3d8:	mov	x2, #0x1                   	// #1
    e3dc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e3e0:	add	x1, x0, #0x660
    e3e4:	ldr	x0, [sp, #24]
    e3e8:	bl	4180 <PyModule_AddIntConstant@plt>
    e3ec:	mov	x2, #0x2                   	// #2
    e3f0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e3f4:	add	x1, x0, #0x670
    e3f8:	ldr	x0, [sp, #24]
    e3fc:	bl	4180 <PyModule_AddIntConstant@plt>
    e400:	mov	x2, #0x1                   	// #1
    e404:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e408:	add	x1, x0, #0x680
    e40c:	ldr	x0, [sp, #24]
    e410:	bl	4180 <PyModule_AddIntConstant@plt>
    e414:	mov	x2, #0x2                   	// #2
    e418:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e41c:	add	x1, x0, #0x688
    e420:	ldr	x0, [sp, #24]
    e424:	bl	4180 <PyModule_AddIntConstant@plt>
    e428:	mov	x2, #0x4                   	// #4
    e42c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e430:	add	x1, x0, #0x698
    e434:	ldr	x0, [sp, #24]
    e438:	bl	4180 <PyModule_AddIntConstant@plt>
    e43c:	mov	x2, #0x40                  	// #64
    e440:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e444:	add	x1, x0, #0x6a8
    e448:	ldr	x0, [sp, #24]
    e44c:	bl	4180 <PyModule_AddIntConstant@plt>
    e450:	mov	x2, #0x80                  	// #128
    e454:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e458:	add	x1, x0, #0x6b8
    e45c:	ldr	x0, [sp, #24]
    e460:	bl	4180 <PyModule_AddIntConstant@plt>
    e464:	mov	x2, #0x20                  	// #32
    e468:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e46c:	add	x1, x0, #0x6c0
    e470:	ldr	x0, [sp, #24]
    e474:	bl	4180 <PyModule_AddIntConstant@plt>
    e478:	mov	x2, #0x8                   	// #8
    e47c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e480:	add	x1, x0, #0x6d0
    e484:	ldr	x0, [sp, #24]
    e488:	bl	4180 <PyModule_AddIntConstant@plt>
    e48c:	mov	x2, #0x100                 	// #256
    e490:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e494:	add	x1, x0, #0x6e0
    e498:	ldr	x0, [sp, #24]
    e49c:	bl	4180 <PyModule_AddIntConstant@plt>
    e4a0:	mov	x2, #0x4000                	// #16384
    e4a4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e4a8:	add	x1, x0, #0x6f0
    e4ac:	ldr	x0, [sp, #24]
    e4b0:	bl	4180 <PyModule_AddIntConstant@plt>
    e4b4:	mov	x2, #0x40000000            	// #1073741824
    e4b8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e4bc:	add	x1, x0, #0x700
    e4c0:	ldr	x0, [sp, #24]
    e4c4:	bl	4180 <PyModule_AddIntConstant@plt>
    e4c8:	mov	x2, #0x2000                	// #8192
    e4cc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e4d0:	add	x1, x0, #0x718
    e4d4:	ldr	x0, [sp, #24]
    e4d8:	bl	4180 <PyModule_AddIntConstant@plt>
    e4dc:	mov	x2, #0x800                 	// #2048
    e4e0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e4e4:	add	x1, x0, #0x728
    e4e8:	ldr	x0, [sp, #24]
    e4ec:	bl	4180 <PyModule_AddIntConstant@plt>
    e4f0:	mov	x2, #0x8000                	// #32768
    e4f4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e4f8:	add	x1, x0, #0x738
    e4fc:	ldr	x0, [sp, #24]
    e500:	bl	4180 <PyModule_AddIntConstant@plt>
    e504:	mov	x2, #0x20000000            	// #536870912
    e508:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e50c:	add	x1, x0, #0x748
    e510:	ldr	x0, [sp, #24]
    e514:	bl	4180 <PyModule_AddIntConstant@plt>
    e518:	mov	x2, #0x1                   	// #1
    e51c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e520:	add	x1, x0, #0x758
    e524:	ldr	x0, [sp, #24]
    e528:	bl	4180 <PyModule_AddIntConstant@plt>
    e52c:	mov	x2, #0x0                   	// #0
    e530:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e534:	add	x1, x0, #0x768
    e538:	ldr	x0, [sp, #24]
    e53c:	bl	4180 <PyModule_AddIntConstant@plt>
    e540:	mov	x2, #0x6                   	// #6
    e544:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e548:	add	x1, x0, #0x770
    e54c:	ldr	x0, [sp, #24]
    e550:	bl	4180 <PyModule_AddIntConstant@plt>
    e554:	mov	x2, #0x11                  	// #17
    e558:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e55c:	add	x1, x0, #0x778
    e560:	ldr	x0, [sp, #24]
    e564:	bl	4180 <PyModule_AddIntConstant@plt>
    e568:	mov	x2, #0x64                  	// #100
    e56c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e570:	add	x1, x0, #0x780
    e574:	ldr	x0, [sp, #24]
    e578:	bl	4180 <PyModule_AddIntConstant@plt>
    e57c:	mov	x2, #0x65                  	// #101
    e580:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e584:	add	x1, x0, #0x790
    e588:	ldr	x0, [sp, #24]
    e58c:	bl	4180 <PyModule_AddIntConstant@plt>
    e590:	mov	x2, #0x1                   	// #1
    e594:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e598:	add	x1, x0, #0x7a0
    e59c:	ldr	x0, [sp, #24]
    e5a0:	bl	4180 <PyModule_AddIntConstant@plt>
    e5a4:	mov	x2, #0x80000000            	// #2147483648
    e5a8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e5ac:	add	x1, x0, #0x7a8
    e5b0:	ldr	x0, [sp, #24]
    e5b4:	bl	4180 <PyModule_AddIntConstant@plt>
    e5b8:	mov	x2, #0x40000000            	// #1073741824
    e5bc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e5c0:	add	x1, x0, #0x7b8
    e5c4:	ldr	x0, [sp, #24]
    e5c8:	bl	4180 <PyModule_AddIntConstant@plt>
    e5cc:	mov	x2, #0x20000000            	// #536870912
    e5d0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e5d4:	add	x1, x0, #0x7c8
    e5d8:	ldr	x0, [sp, #24]
    e5dc:	bl	4180 <PyModule_AddIntConstant@plt>
    e5e0:	mov	x2, #0x7ff                 	// #2047
    e5e4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e5e8:	add	x1, x0, #0x7d8
    e5ec:	ldr	x0, [sp, #24]
    e5f0:	bl	4180 <PyModule_AddIntConstant@plt>
    e5f4:	mov	x2, #0x1fffffff            	// #536870911
    e5f8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e5fc:	add	x1, x0, #0x7e8
    e600:	ldr	x0, [sp, #24]
    e604:	bl	4180 <PyModule_AddIntConstant@plt>
    e608:	mov	x2, #0x1fffffff            	// #536870911
    e60c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e610:	add	x1, x0, #0x7f8
    e614:	ldr	x0, [sp, #24]
    e618:	bl	4180 <PyModule_AddIntConstant@plt>
    e61c:	mov	x2, #0x6                   	// #6
    e620:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e624:	add	x1, x0, #0x808
    e628:	ldr	x0, [sp, #24]
    e62c:	bl	4180 <PyModule_AddIntConstant@plt>
    e630:	mov	x2, #0x1                   	// #1
    e634:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e638:	add	x1, x0, #0x818
    e63c:	ldr	x0, [sp, #24]
    e640:	bl	4180 <PyModule_AddIntConstant@plt>
    e644:	mov	x2, #0x2                   	// #2
    e648:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e64c:	add	x1, x0, #0x828
    e650:	ldr	x0, [sp, #24]
    e654:	bl	4180 <PyModule_AddIntConstant@plt>
    e658:	mov	x2, #0x3                   	// #3
    e65c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e660:	add	x1, x0, #0x840
    e664:	ldr	x0, [sp, #24]
    e668:	bl	4180 <PyModule_AddIntConstant@plt>
    e66c:	mov	x2, #0x4                   	// #4
    e670:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e674:	add	x1, x0, #0x858
    e678:	ldr	x0, [sp, #24]
    e67c:	bl	4180 <PyModule_AddIntConstant@plt>
    e680:	mov	x2, #0x5                   	// #5
    e684:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e688:	add	x1, x0, #0x870
    e68c:	ldr	x0, [sp, #24]
    e690:	bl	4180 <PyModule_AddIntConstant@plt>
    e694:	mov	x2, #0x2                   	// #2
    e698:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e69c:	add	x1, x0, #0x888
    e6a0:	ldr	x0, [sp, #24]
    e6a4:	bl	4180 <PyModule_AddIntConstant@plt>
    e6a8:	mov	x2, #0x1                   	// #1
    e6ac:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e6b0:	add	x1, x0, #0x890
    e6b4:	ldr	x0, [sp, #24]
    e6b8:	bl	4180 <PyModule_AddIntConstant@plt>
    e6bc:	mov	x2, #0x2                   	// #2
    e6c0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e6c4:	add	x1, x0, #0x8a8
    e6c8:	ldr	x0, [sp, #24]
    e6cc:	bl	4180 <PyModule_AddIntConstant@plt>
    e6d0:	mov	x2, #0x3                   	// #3
    e6d4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e6d8:	add	x1, x0, #0x8c0
    e6dc:	ldr	x0, [sp, #24]
    e6e0:	bl	4180 <PyModule_AddIntConstant@plt>
    e6e4:	mov	x2, #0x4                   	// #4
    e6e8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e6ec:	add	x1, x0, #0x8d0
    e6f0:	ldr	x0, [sp, #24]
    e6f4:	bl	4180 <PyModule_AddIntConstant@plt>
    e6f8:	mov	x2, #0x5                   	// #5
    e6fc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e700:	add	x1, x0, #0x8e0
    e704:	ldr	x0, [sp, #24]
    e708:	bl	4180 <PyModule_AddIntConstant@plt>
    e70c:	mov	x2, #0x6                   	// #6
    e710:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e714:	add	x1, x0, #0x8f8
    e718:	ldr	x0, [sp, #24]
    e71c:	bl	4180 <PyModule_AddIntConstant@plt>
    e720:	mov	x2, #0x7                   	// #7
    e724:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e728:	add	x1, x0, #0x910
    e72c:	ldr	x0, [sp, #24]
    e730:	bl	4180 <PyModule_AddIntConstant@plt>
    e734:	mov	x2, #0x8                   	// #8
    e738:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e73c:	add	x1, x0, #0x920
    e740:	ldr	x0, [sp, #24]
    e744:	bl	4180 <PyModule_AddIntConstant@plt>
    e748:	mov	x2, #0x9                   	// #9
    e74c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e750:	add	x1, x0, #0x938
    e754:	ldr	x0, [sp, #24]
    e758:	bl	4180 <PyModule_AddIntConstant@plt>
    e75c:	mov	x2, #0xa                   	// #10
    e760:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e764:	add	x1, x0, #0x950
    e768:	ldr	x0, [sp, #24]
    e76c:	bl	4180 <PyModule_AddIntConstant@plt>
    e770:	mov	x2, #0xb                   	// #11
    e774:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e778:	add	x1, x0, #0x968
    e77c:	ldr	x0, [sp, #24]
    e780:	bl	4180 <PyModule_AddIntConstant@plt>
    e784:	mov	x2, #0xc                   	// #12
    e788:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e78c:	add	x1, x0, #0x980
    e790:	ldr	x0, [sp, #24]
    e794:	bl	4180 <PyModule_AddIntConstant@plt>
    e798:	mov	x2, #0x1                   	// #1
    e79c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e7a0:	add	x1, x0, #0x998
    e7a4:	ldr	x0, [sp, #24]
    e7a8:	bl	4180 <PyModule_AddIntConstant@plt>
    e7ac:	mov	x2, #0x2                   	// #2
    e7b0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e7b4:	add	x1, x0, #0x9b0
    e7b8:	ldr	x0, [sp, #24]
    e7bc:	bl	4180 <PyModule_AddIntConstant@plt>
    e7c0:	mov	x2, #0x4                   	// #4
    e7c4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e7c8:	add	x1, x0, #0x9c8
    e7cc:	ldr	x0, [sp, #24]
    e7d0:	bl	4180 <PyModule_AddIntConstant@plt>
    e7d4:	mov	x2, #0x8                   	// #8
    e7d8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e7dc:	add	x1, x0, #0x9e0
    e7e0:	ldr	x0, [sp, #24]
    e7e4:	bl	4180 <PyModule_AddIntConstant@plt>
    e7e8:	mov	x2, #0x10                  	// #16
    e7ec:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e7f0:	add	x1, x0, #0x9f8
    e7f4:	ldr	x0, [sp, #24]
    e7f8:	bl	4180 <PyModule_AddIntConstant@plt>
    e7fc:	mov	x2, #0x20                  	// #32
    e800:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e804:	add	x1, x0, #0xa10
    e808:	ldr	x0, [sp, #24]
    e80c:	bl	4180 <PyModule_AddIntConstant@plt>
    e810:	mov	x2, #0x40                  	// #64
    e814:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e818:	add	x1, x0, #0xa28
    e81c:	ldr	x0, [sp, #24]
    e820:	bl	4180 <PyModule_AddIntConstant@plt>
    e824:	mov	x2, #0x80                  	// #128
    e828:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e82c:	add	x1, x0, #0xa40
    e830:	ldr	x0, [sp, #24]
    e834:	bl	4180 <PyModule_AddIntConstant@plt>
    e838:	mov	x2, #0x100                 	// #256
    e83c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e840:	add	x1, x0, #0xa58
    e844:	ldr	x0, [sp, #24]
    e848:	bl	4180 <PyModule_AddIntConstant@plt>
    e84c:	mov	x2, #0x200                 	// #512
    e850:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e854:	add	x1, x0, #0xa78
    e858:	ldr	x0, [sp, #24]
    e85c:	bl	4180 <PyModule_AddIntConstant@plt>
    e860:	mov	x2, #0x400                 	// #1024
    e864:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e868:	add	x1, x0, #0xa98
    e86c:	ldr	x0, [sp, #24]
    e870:	bl	4180 <PyModule_AddIntConstant@plt>
    e874:	mov	x2, #0x800                 	// #2048
    e878:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e87c:	add	x1, x0, #0xab0
    e880:	ldr	x0, [sp, #24]
    e884:	bl	4180 <PyModule_AddIntConstant@plt>
    e888:	mov	x2, #0x114                 	// #276
    e88c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e890:	add	x1, x0, #0xac8
    e894:	ldr	x0, [sp, #24]
    e898:	bl	4180 <PyModule_AddIntConstant@plt>
    e89c:	mov	x2, #0x117                 	// #279
    e8a0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e8a4:	add	x1, x0, #0xad0
    e8a8:	ldr	x0, [sp, #24]
    e8ac:	bl	4180 <PyModule_AddIntConstant@plt>
    e8b0:	mov	x2, #0x0                   	// #0
    e8b4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e8b8:	add	x1, x0, #0xad8
    e8bc:	ldr	x0, [sp, #24]
    e8c0:	bl	4180 <PyModule_AddIntConstant@plt>
    e8c4:	mov	x2, #0x0                   	// #0
    e8c8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e8cc:	add	x1, x0, #0xae8
    e8d0:	ldr	x0, [sp, #24]
    e8d4:	bl	4180 <PyModule_AddIntConstant@plt>
    e8d8:	mov	x2, #0x1                   	// #1
    e8dc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e8e0:	add	x1, x0, #0xaf8
    e8e4:	ldr	x0, [sp, #24]
    e8e8:	bl	4180 <PyModule_AddIntConstant@plt>
    e8ec:	mov	x2, #0x2                   	// #2
    e8f0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e8f4:	add	x1, x0, #0xb08
    e8f8:	ldr	x0, [sp, #24]
    e8fc:	bl	4180 <PyModule_AddIntConstant@plt>
    e900:	mov	x2, #0x29                  	// #41
    e904:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e908:	add	x1, x0, #0xb18
    e90c:	ldr	x0, [sp, #24]
    e910:	bl	4180 <PyModule_AddIntConstant@plt>
    e914:	mov	x2, #0x4                   	// #4
    e918:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e91c:	add	x1, x0, #0xb28
    e920:	ldr	x0, [sp, #24]
    e924:	bl	4180 <PyModule_AddIntConstant@plt>
    e928:	mov	x2, #0x6                   	// #6
    e92c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e930:	add	x1, x0, #0xb38
    e934:	ldr	x0, [sp, #24]
    e938:	bl	4180 <PyModule_AddIntConstant@plt>
    e93c:	mov	x2, #0x8                   	// #8
    e940:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e944:	add	x1, x0, #0xb48
    e948:	ldr	x0, [sp, #24]
    e94c:	bl	4180 <PyModule_AddIntConstant@plt>
    e950:	mov	x2, #0xc                   	// #12
    e954:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e958:	add	x1, x0, #0xb58
    e95c:	ldr	x0, [sp, #24]
    e960:	bl	4180 <PyModule_AddIntConstant@plt>
    e964:	mov	x2, #0x11                  	// #17
    e968:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e96c:	add	x1, x0, #0xb68
    e970:	ldr	x0, [sp, #24]
    e974:	bl	4180 <PyModule_AddIntConstant@plt>
    e978:	mov	x2, #0x16                  	// #22
    e97c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e980:	add	x1, x0, #0xb78
    e984:	ldr	x0, [sp, #24]
    e988:	bl	4180 <PyModule_AddIntConstant@plt>
    e98c:	mov	x2, #0x1d                  	// #29
    e990:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e994:	add	x1, x0, #0xb88
    e998:	ldr	x0, [sp, #24]
    e99c:	bl	4180 <PyModule_AddIntConstant@plt>
    e9a0:	mov	x2, #0x2b                  	// #43
    e9a4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e9a8:	add	x1, x0, #0xb98
    e9ac:	ldr	x0, [sp, #24]
    e9b0:	bl	4180 <PyModule_AddIntConstant@plt>
    e9b4:	mov	x2, #0x2c                  	// #44
    e9b8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e9bc:	add	x1, x0, #0xba8
    e9c0:	ldr	x0, [sp, #24]
    e9c4:	bl	4180 <PyModule_AddIntConstant@plt>
    e9c8:	mov	x2, #0x2e                  	// #46
    e9cc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e9d0:	add	x1, x0, #0xbc0
    e9d4:	ldr	x0, [sp, #24]
    e9d8:	bl	4180 <PyModule_AddIntConstant@plt>
    e9dc:	mov	x2, #0x2f                  	// #47
    e9e0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e9e4:	add	x1, x0, #0xbd0
    e9e8:	ldr	x0, [sp, #24]
    e9ec:	bl	4180 <PyModule_AddIntConstant@plt>
    e9f0:	mov	x2, #0x32                  	// #50
    e9f4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    e9f8:	add	x1, x0, #0xbe0
    e9fc:	ldr	x0, [sp, #24]
    ea00:	bl	4180 <PyModule_AddIntConstant@plt>
    ea04:	mov	x2, #0x33                  	// #51
    ea08:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea0c:	add	x1, x0, #0xbf0
    ea10:	ldr	x0, [sp, #24]
    ea14:	bl	4180 <PyModule_AddIntConstant@plt>
    ea18:	mov	x2, #0x3a                  	// #58
    ea1c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea20:	add	x1, x0, #0xc00
    ea24:	ldr	x0, [sp, #24]
    ea28:	bl	4180 <PyModule_AddIntConstant@plt>
    ea2c:	mov	x2, #0x3b                  	// #59
    ea30:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea34:	add	x1, x0, #0xc10
    ea38:	ldr	x0, [sp, #24]
    ea3c:	bl	4180 <PyModule_AddIntConstant@plt>
    ea40:	mov	x2, #0x3c                  	// #60
    ea44:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea48:	add	x1, x0, #0xc20
    ea4c:	ldr	x0, [sp, #24]
    ea50:	bl	4180 <PyModule_AddIntConstant@plt>
    ea54:	mov	x2, #0x67                  	// #103
    ea58:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea5c:	add	x1, x0, #0xc30
    ea60:	ldr	x0, [sp, #24]
    ea64:	bl	4180 <PyModule_AddIntConstant@plt>
    ea68:	mov	x2, #0x84                  	// #132
    ea6c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea70:	add	x1, x0, #0xc40
    ea74:	ldr	x0, [sp, #24]
    ea78:	bl	4180 <PyModule_AddIntConstant@plt>
    ea7c:	mov	x2, #0xff                  	// #255
    ea80:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea84:	add	x1, x0, #0xc50
    ea88:	ldr	x0, [sp, #24]
    ea8c:	bl	4180 <PyModule_AddIntConstant@plt>
    ea90:	mov	x2, #0x400                 	// #1024
    ea94:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ea98:	add	x1, x0, #0xc60
    ea9c:	ldr	x0, [sp, #24]
    eaa0:	bl	4180 <PyModule_AddIntConstant@plt>
    eaa4:	mov	x2, #0x1388                	// #5000
    eaa8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eaac:	add	x1, x0, #0xc70
    eab0:	ldr	x0, [sp, #24]
    eab4:	bl	4180 <PyModule_AddIntConstant@plt>
    eab8:	mov	x2, #0x0                   	// #0
    eabc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eac0:	add	x1, x0, #0xc88
    eac4:	ldr	x0, [sp, #24]
    eac8:	bl	4180 <PyModule_AddIntConstant@plt>
    eacc:	mov	x2, #0xffffffff            	// #4294967295
    ead0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ead4:	add	x1, x0, #0xc98
    ead8:	ldr	x0, [sp, #24]
    eadc:	bl	4180 <PyModule_AddIntConstant@plt>
    eae0:	mov	x2, #0x1                   	// #1
    eae4:	movk	x2, #0x7f00, lsl #16
    eae8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eaec:	add	x1, x0, #0xcb0
    eaf0:	ldr	x0, [sp, #24]
    eaf4:	bl	4180 <PyModule_AddIntConstant@plt>
    eaf8:	mov	x2, #0xe0000000            	// #3758096384
    eafc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb00:	add	x1, x0, #0xcc0
    eb04:	ldr	x0, [sp, #24]
    eb08:	bl	4180 <PyModule_AddIntConstant@plt>
    eb0c:	mov	w2, #0xe0000001            	// #-536870911
    eb10:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb14:	add	x1, x0, #0xcd8
    eb18:	ldr	x0, [sp, #24]
    eb1c:	bl	4180 <PyModule_AddIntConstant@plt>
    eb20:	mov	w2, #0xe00000ff            	// #-536870657
    eb24:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb28:	add	x1, x0, #0xcf0
    eb2c:	ldr	x0, [sp, #24]
    eb30:	bl	4180 <PyModule_AddIntConstant@plt>
    eb34:	mov	x2, #0xffffffff            	// #4294967295
    eb38:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb3c:	add	x1, x0, #0xd08
    eb40:	ldr	x0, [sp, #24]
    eb44:	bl	4180 <PyModule_AddIntConstant@plt>
    eb48:	mov	x2, #0x4                   	// #4
    eb4c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb50:	add	x1, x0, #0xd18
    eb54:	ldr	x0, [sp, #24]
    eb58:	bl	4180 <PyModule_AddIntConstant@plt>
    eb5c:	mov	x2, #0x3                   	// #3
    eb60:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb64:	add	x1, x0, #0xd28
    eb68:	ldr	x0, [sp, #24]
    eb6c:	bl	4180 <PyModule_AddIntConstant@plt>
    eb70:	mov	x2, #0x1                   	// #1
    eb74:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb78:	add	x1, x0, #0xd38
    eb7c:	ldr	x0, [sp, #24]
    eb80:	bl	4180 <PyModule_AddIntConstant@plt>
    eb84:	mov	x2, #0x2                   	// #2
    eb88:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eb8c:	add	x1, x0, #0xd40
    eb90:	ldr	x0, [sp, #24]
    eb94:	bl	4180 <PyModule_AddIntConstant@plt>
    eb98:	mov	x2, #0x6                   	// #6
    eb9c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eba0:	add	x1, x0, #0xd48
    eba4:	ldr	x0, [sp, #24]
    eba8:	bl	4180 <PyModule_AddIntConstant@plt>
    ebac:	mov	x2, #0x7                   	// #7
    ebb0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ebb4:	add	x1, x0, #0xd58
    ebb8:	ldr	x0, [sp, #24]
    ebbc:	bl	4180 <PyModule_AddIntConstant@plt>
    ebc0:	mov	x2, #0x7                   	// #7
    ebc4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ebc8:	add	x1, x0, #0xd68
    ebcc:	ldr	x0, [sp, #24]
    ebd0:	bl	4180 <PyModule_AddIntConstant@plt>
    ebd4:	mov	x2, #0x20                  	// #32
    ebd8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ebdc:	add	x1, x0, #0xd78
    ebe0:	ldr	x0, [sp, #24]
    ebe4:	bl	4180 <PyModule_AddIntConstant@plt>
    ebe8:	mov	x2, #0x21                  	// #33
    ebec:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ebf0:	add	x1, x0, #0xd88
    ebf4:	ldr	x0, [sp, #24]
    ebf8:	bl	4180 <PyModule_AddIntConstant@plt>
    ebfc:	mov	x2, #0x22                  	// #34
    ec00:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec04:	add	x1, x0, #0xda0
    ec08:	ldr	x0, [sp, #24]
    ec0c:	bl	4180 <PyModule_AddIntConstant@plt>
    ec10:	mov	x2, #0x23                  	// #35
    ec14:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec18:	add	x1, x0, #0xdb8
    ec1c:	ldr	x0, [sp, #24]
    ec20:	bl	4180 <PyModule_AddIntConstant@plt>
    ec24:	mov	x2, #0x24                  	// #36
    ec28:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec2c:	add	x1, x0, #0xdd0
    ec30:	ldr	x0, [sp, #24]
    ec34:	bl	4180 <PyModule_AddIntConstant@plt>
    ec38:	mov	x2, #0x1                   	// #1
    ec3c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec40:	add	x1, x0, #0xde8
    ec44:	ldr	x0, [sp, #24]
    ec48:	bl	4180 <PyModule_AddIntConstant@plt>
    ec4c:	mov	x2, #0x1                   	// #1
    ec50:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec54:	add	x1, x0, #0xe08
    ec58:	ldr	x0, [sp, #24]
    ec5c:	bl	4180 <PyModule_AddIntConstant@plt>
    ec60:	mov	x2, #0x14                  	// #20
    ec64:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec68:	add	x1, x0, #0xe28
    ec6c:	ldr	x0, [sp, #24]
    ec70:	bl	4180 <PyModule_AddIntConstant@plt>
    ec74:	mov	x2, #0x13                  	// #19
    ec78:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec7c:	add	x1, x0, #0xe40
    ec80:	ldr	x0, [sp, #24]
    ec84:	bl	4180 <PyModule_AddIntConstant@plt>
    ec88:	mov	x2, #0x14                  	// #20
    ec8c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ec90:	add	x1, x0, #0xe50
    ec94:	ldr	x0, [sp, #24]
    ec98:	bl	4180 <PyModule_AddIntConstant@plt>
    ec9c:	mov	x2, #0x15                  	// #21
    eca0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eca4:	add	x1, x0, #0xe60
    eca8:	ldr	x0, [sp, #24]
    ecac:	bl	4180 <PyModule_AddIntConstant@plt>
    ecb0:	mov	x2, #0x12                  	// #18
    ecb4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ecb8:	add	x1, x0, #0xe78
    ecbc:	ldr	x0, [sp, #24]
    ecc0:	bl	4180 <PyModule_AddIntConstant@plt>
    ecc4:	mov	x2, #0x11                  	// #17
    ecc8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eccc:	add	x1, x0, #0xe90
    ecd0:	ldr	x0, [sp, #24]
    ecd4:	bl	4180 <PyModule_AddIntConstant@plt>
    ecd8:	mov	x2, #0x13                  	// #19
    ecdc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ece0:	add	x1, x0, #0xea8
    ece4:	ldr	x0, [sp, #24]
    ece8:	bl	4180 <PyModule_AddIntConstant@plt>
    ecec:	mov	x2, #0x10                  	// #16
    ecf0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ecf4:	add	x1, x0, #0xec0
    ecf8:	ldr	x0, [sp, #24]
    ecfc:	bl	4180 <PyModule_AddIntConstant@plt>
    ed00:	mov	x2, #0x1a                  	// #26
    ed04:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed08:	add	x1, x0, #0xed8
    ed0c:	ldr	x0, [sp, #24]
    ed10:	bl	4180 <PyModule_AddIntConstant@plt>
    ed14:	mov	x2, #0x7                   	// #7
    ed18:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed1c:	add	x1, x0, #0xee8
    ed20:	ldr	x0, [sp, #24]
    ed24:	bl	4180 <PyModule_AddIntConstant@plt>
    ed28:	mov	x2, #0x3e                  	// #62
    ed2c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed30:	add	x1, x0, #0xef8
    ed34:	ldr	x0, [sp, #24]
    ed38:	bl	4180 <PyModule_AddIntConstant@plt>
    ed3c:	mov	x2, #0x3b                  	// #59
    ed40:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed44:	add	x1, x0, #0xf08
    ed48:	ldr	x0, [sp, #24]
    ed4c:	bl	4180 <PyModule_AddIntConstant@plt>
    ed50:	mov	x2, #0x34                  	// #52
    ed54:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed58:	add	x1, x0, #0xf18
    ed5c:	ldr	x0, [sp, #24]
    ed60:	bl	4180 <PyModule_AddIntConstant@plt>
    ed64:	mov	x2, #0x36                  	// #54
    ed68:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed6c:	add	x1, x0, #0xf28
    ed70:	ldr	x0, [sp, #24]
    ed74:	bl	4180 <PyModule_AddIntConstant@plt>
    ed78:	mov	x2, #0x9                   	// #9
    ed7c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed80:	add	x1, x0, #0xf38
    ed84:	ldr	x0, [sp, #24]
    ed88:	bl	4180 <PyModule_AddIntConstant@plt>
    ed8c:	mov	x2, #0x3d                  	// #61
    ed90:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ed94:	add	x1, x0, #0xf48
    ed98:	ldr	x0, [sp, #24]
    ed9c:	bl	4180 <PyModule_AddIntConstant@plt>
    eda0:	mov	x2, #0x32                  	// #50
    eda4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    eda8:	add	x1, x0, #0xf58
    edac:	ldr	x0, [sp, #24]
    edb0:	bl	4180 <PyModule_AddIntConstant@plt>
    edb4:	mov	x2, #0x3a                  	// #58
    edb8:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    edbc:	add	x1, x0, #0xf68
    edc0:	ldr	x0, [sp, #24]
    edc4:	bl	4180 <PyModule_AddIntConstant@plt>
    edc8:	mov	x2, #0x33                  	// #51
    edcc:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    edd0:	add	x1, x0, #0xf80
    edd4:	ldr	x0, [sp, #24]
    edd8:	bl	4180 <PyModule_AddIntConstant@plt>
    eddc:	mov	x2, #0x35                  	// #53
    ede0:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ede4:	add	x1, x0, #0xf98
    ede8:	ldr	x0, [sp, #24]
    edec:	bl	4180 <PyModule_AddIntConstant@plt>
    edf0:	mov	x2, #0x31                  	// #49
    edf4:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    edf8:	add	x1, x0, #0xfb0
    edfc:	ldr	x0, [sp, #24]
    ee00:	bl	4180 <PyModule_AddIntConstant@plt>
    ee04:	mov	x2, #0x38                  	// #56
    ee08:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ee0c:	add	x1, x0, #0xfc8
    ee10:	ldr	x0, [sp, #24]
    ee14:	bl	4180 <PyModule_AddIntConstant@plt>
    ee18:	mov	x2, #0x42                  	// #66
    ee1c:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ee20:	add	x1, x0, #0xfd8
    ee24:	ldr	x0, [sp, #24]
    ee28:	bl	4180 <PyModule_AddIntConstant@plt>
    ee2c:	mov	x2, #0x39                  	// #57
    ee30:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ee34:	add	x1, x0, #0xfe8
    ee38:	ldr	x0, [sp, #24]
    ee3c:	bl	4180 <PyModule_AddIntConstant@plt>
    ee40:	mov	x2, #0x37                  	// #55
    ee44:	adrp	x0, 15000 <PyInit__socket@@Base+0x791c>
    ee48:	add	x1, x0, #0xff8
    ee4c:	ldr	x0, [sp, #24]
    ee50:	bl	4180 <PyModule_AddIntConstant@plt>
    ee54:	mov	x2, #0x0                   	// #0
    ee58:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ee5c:	add	x1, x0, #0x10
    ee60:	ldr	x0, [sp, #24]
    ee64:	bl	4180 <PyModule_AddIntConstant@plt>
    ee68:	mov	x2, #0x3c                  	// #60
    ee6c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ee70:	add	x1, x0, #0x28
    ee74:	ldr	x0, [sp, #24]
    ee78:	bl	4180 <PyModule_AddIntConstant@plt>
    ee7c:	mov	x2, #0x43                  	// #67
    ee80:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ee84:	add	x1, x0, #0x40
    ee88:	ldr	x0, [sp, #24]
    ee8c:	bl	4180 <PyModule_AddIntConstant@plt>
    ee90:	mov	x2, #0x1                   	// #1
    ee94:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ee98:	add	x1, x0, #0x50
    ee9c:	ldr	x0, [sp, #24]
    eea0:	bl	4180 <PyModule_AddIntConstant@plt>
    eea4:	mov	x2, #0x2                   	// #2
    eea8:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    eeac:	add	x1, x0, #0x60
    eeb0:	ldr	x0, [sp, #24]
    eeb4:	bl	4180 <PyModule_AddIntConstant@plt>
    eeb8:	mov	x2, #0x3                   	// #3
    eebc:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    eec0:	add	x1, x0, #0x70
    eec4:	ldr	x0, [sp, #24]
    eec8:	bl	4180 <PyModule_AddIntConstant@plt>
    eecc:	mov	x2, #0x4                   	// #4
    eed0:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    eed4:	add	x1, x0, #0x80
    eed8:	ldr	x0, [sp, #24]
    eedc:	bl	4180 <PyModule_AddIntConstant@plt>
    eee0:	mov	x2, #0x5                   	// #5
    eee4:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    eee8:	add	x1, x0, #0x90
    eeec:	ldr	x0, [sp, #24]
    eef0:	bl	4180 <PyModule_AddIntConstant@plt>
    eef4:	mov	x2, #0x6                   	// #6
    eef8:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    eefc:	add	x1, x0, #0xa0
    ef00:	ldr	x0, [sp, #24]
    ef04:	bl	4180 <PyModule_AddIntConstant@plt>
    ef08:	mov	x2, #0x7                   	// #7
    ef0c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef10:	add	x1, x0, #0xb0
    ef14:	ldr	x0, [sp, #24]
    ef18:	bl	4180 <PyModule_AddIntConstant@plt>
    ef1c:	mov	x2, #0x8                   	// #8
    ef20:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef24:	add	x1, x0, #0xc0
    ef28:	ldr	x0, [sp, #24]
    ef2c:	bl	4180 <PyModule_AddIntConstant@plt>
    ef30:	mov	x2, #0x9                   	// #9
    ef34:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef38:	add	x1, x0, #0xd0
    ef3c:	ldr	x0, [sp, #24]
    ef40:	bl	4180 <PyModule_AddIntConstant@plt>
    ef44:	mov	x2, #0xa                   	// #10
    ef48:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef4c:	add	x1, x0, #0xe8
    ef50:	ldr	x0, [sp, #24]
    ef54:	bl	4180 <PyModule_AddIntConstant@plt>
    ef58:	mov	x2, #0xb                   	// #11
    ef5c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef60:	add	x1, x0, #0x100
    ef64:	ldr	x0, [sp, #24]
    ef68:	bl	4180 <PyModule_AddIntConstant@plt>
    ef6c:	mov	x2, #0xc                   	// #12
    ef70:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef74:	add	x1, x0, #0x110
    ef78:	ldr	x0, [sp, #24]
    ef7c:	bl	4180 <PyModule_AddIntConstant@plt>
    ef80:	mov	x2, #0x17                  	// #23
    ef84:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef88:	add	x1, x0, #0x120
    ef8c:	ldr	x0, [sp, #24]
    ef90:	bl	4180 <PyModule_AddIntConstant@plt>
    ef94:	mov	x2, #0xd                   	// #13
    ef98:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    ef9c:	add	x1, x0, #0x130
    efa0:	ldr	x0, [sp, #24]
    efa4:	bl	4180 <PyModule_AddIntConstant@plt>
    efa8:	mov	x2, #0x12                  	// #18
    efac:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    efb0:	add	x1, x0, #0x140
    efb4:	ldr	x0, [sp, #24]
    efb8:	bl	4180 <PyModule_AddIntConstant@plt>
    efbc:	mov	x2, #0x19                  	// #25
    efc0:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    efc4:	add	x1, x0, #0x158
    efc8:	ldr	x0, [sp, #24]
    efcc:	bl	4180 <PyModule_AddIntConstant@plt>
    efd0:	mov	x2, #0xfffffffffffffff7    	// #-9
    efd4:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    efd8:	add	x1, x0, #0x170
    efdc:	ldr	x0, [sp, #24]
    efe0:	bl	4180 <PyModule_AddIntConstant@plt>
    efe4:	mov	x2, #0xfffffffffffffffd    	// #-3
    efe8:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    efec:	add	x1, x0, #0x180
    eff0:	ldr	x0, [sp, #24]
    eff4:	bl	4180 <PyModule_AddIntConstant@plt>
    eff8:	mov	x2, #0xffffffffffffffff    	// #-1
    effc:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f000:	add	x1, x0, #0x190
    f004:	ldr	x0, [sp, #24]
    f008:	bl	4180 <PyModule_AddIntConstant@plt>
    f00c:	mov	x2, #0xfffffffffffffffc    	// #-4
    f010:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f014:	add	x1, x0, #0x1a0
    f018:	ldr	x0, [sp, #24]
    f01c:	bl	4180 <PyModule_AddIntConstant@plt>
    f020:	mov	x2, #0xfffffffffffffffa    	// #-6
    f024:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f028:	add	x1, x0, #0x1b0
    f02c:	ldr	x0, [sp, #24]
    f030:	bl	4180 <PyModule_AddIntConstant@plt>
    f034:	mov	x2, #0xfffffffffffffff6    	// #-10
    f038:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f03c:	add	x1, x0, #0x1c0
    f040:	ldr	x0, [sp, #24]
    f044:	bl	4180 <PyModule_AddIntConstant@plt>
    f048:	mov	x2, #0xfffffffffffffffb    	// #-5
    f04c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f050:	add	x1, x0, #0x1d0
    f054:	ldr	x0, [sp, #24]
    f058:	bl	4180 <PyModule_AddIntConstant@plt>
    f05c:	mov	x2, #0xfffffffffffffffe    	// #-2
    f060:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f064:	add	x1, x0, #0x1e0
    f068:	ldr	x0, [sp, #24]
    f06c:	bl	4180 <PyModule_AddIntConstant@plt>
    f070:	mov	x2, #0xfffffffffffffff4    	// #-12
    f074:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f078:	add	x1, x0, #0x1f0
    f07c:	ldr	x0, [sp, #24]
    f080:	bl	4180 <PyModule_AddIntConstant@plt>
    f084:	mov	x2, #0xfffffffffffffff8    	// #-8
    f088:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f08c:	add	x1, x0, #0x200
    f090:	ldr	x0, [sp, #24]
    f094:	bl	4180 <PyModule_AddIntConstant@plt>
    f098:	mov	x2, #0xfffffffffffffff9    	// #-7
    f09c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f0a0:	add	x1, x0, #0x210
    f0a4:	ldr	x0, [sp, #24]
    f0a8:	bl	4180 <PyModule_AddIntConstant@plt>
    f0ac:	mov	x2, #0xfffffffffffffff5    	// #-11
    f0b0:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f0b4:	add	x1, x0, #0x220
    f0b8:	ldr	x0, [sp, #24]
    f0bc:	bl	4180 <PyModule_AddIntConstant@plt>
    f0c0:	mov	x2, #0x1                   	// #1
    f0c4:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f0c8:	add	x1, x0, #0x230
    f0cc:	ldr	x0, [sp, #24]
    f0d0:	bl	4180 <PyModule_AddIntConstant@plt>
    f0d4:	mov	x2, #0x2                   	// #2
    f0d8:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f0dc:	add	x1, x0, #0x240
    f0e0:	ldr	x0, [sp, #24]
    f0e4:	bl	4180 <PyModule_AddIntConstant@plt>
    f0e8:	mov	x2, #0x4                   	// #4
    f0ec:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f0f0:	add	x1, x0, #0x250
    f0f4:	ldr	x0, [sp, #24]
    f0f8:	bl	4180 <PyModule_AddIntConstant@plt>
    f0fc:	mov	x2, #0x400                 	// #1024
    f100:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f104:	add	x1, x0, #0x260
    f108:	ldr	x0, [sp, #24]
    f10c:	bl	4180 <PyModule_AddIntConstant@plt>
    f110:	mov	x2, #0x10                  	// #16
    f114:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f118:	add	x1, x0, #0x270
    f11c:	ldr	x0, [sp, #24]
    f120:	bl	4180 <PyModule_AddIntConstant@plt>
    f124:	mov	x2, #0x20                  	// #32
    f128:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f12c:	add	x1, x0, #0x278
    f130:	ldr	x0, [sp, #24]
    f134:	bl	4180 <PyModule_AddIntConstant@plt>
    f138:	mov	x2, #0x8                   	// #8
    f13c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f140:	add	x1, x0, #0x288
    f144:	ldr	x0, [sp, #24]
    f148:	bl	4180 <PyModule_AddIntConstant@plt>
    f14c:	mov	x2, #0x401                 	// #1025
    f150:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f154:	add	x1, x0, #0x298
    f158:	ldr	x0, [sp, #24]
    f15c:	bl	4180 <PyModule_AddIntConstant@plt>
    f160:	mov	x2, #0x20                  	// #32
    f164:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f168:	add	x1, x0, #0x2a8
    f16c:	ldr	x0, [sp, #24]
    f170:	bl	4180 <PyModule_AddIntConstant@plt>
    f174:	mov	x2, #0x4                   	// #4
    f178:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f17c:	add	x1, x0, #0x2b8
    f180:	ldr	x0, [sp, #24]
    f184:	bl	4180 <PyModule_AddIntConstant@plt>
    f188:	mov	x2, #0x1                   	// #1
    f18c:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f190:	add	x1, x0, #0x2c8
    f194:	ldr	x0, [sp, #24]
    f198:	bl	4180 <PyModule_AddIntConstant@plt>
    f19c:	mov	x2, #0x8                   	// #8
    f1a0:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f1a4:	add	x1, x0, #0x2d8
    f1a8:	ldr	x0, [sp, #24]
    f1ac:	bl	4180 <PyModule_AddIntConstant@plt>
    f1b0:	mov	x2, #0x2                   	// #2
    f1b4:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f1b8:	add	x1, x0, #0x2e8
    f1bc:	ldr	x0, [sp, #24]
    f1c0:	bl	4180 <PyModule_AddIntConstant@plt>
    f1c4:	mov	x2, #0x10                  	// #16
    f1c8:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f1cc:	add	x1, x0, #0x2f8
    f1d0:	ldr	x0, [sp, #24]
    f1d4:	bl	4180 <PyModule_AddIntConstant@plt>
    f1d8:	mov	x2, #0x0                   	// #0
    f1dc:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f1e0:	add	x1, x0, #0x308
    f1e4:	ldr	x0, [sp, #24]
    f1e8:	bl	4180 <PyModule_AddIntConstant@plt>
    f1ec:	mov	x2, #0x1                   	// #1
    f1f0:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f1f4:	add	x1, x0, #0x310
    f1f8:	ldr	x0, [sp, #24]
    f1fc:	bl	4180 <PyModule_AddIntConstant@plt>
    f200:	mov	x2, #0x2                   	// #2
    f204:	adrp	x0, 16000 <PyInit__socket@@Base+0x891c>
    f208:	add	x1, x0, #0x318
    f20c:	ldr	x0, [sp, #24]
    f210:	bl	4180 <PyModule_AddIntConstant@plt>
    f214:	ldr	x0, [sp, #24]
    f218:	ldp	x29, x30, [sp], #32
    f21c:	ret

Disassembly of section .fini:

000000000000f220 <.fini>:
    f220:	stp	x29, x30, [sp, #-16]!
    f224:	mov	x29, sp
    f228:	ldp	x29, x30, [sp], #16
    f22c:	ret
