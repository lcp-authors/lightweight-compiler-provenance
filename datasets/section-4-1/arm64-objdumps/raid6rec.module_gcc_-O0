
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//raid6rec.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_memcpy>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x2, [sp, #24]
  18:	ldr	x1, [sp, #32]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <grub_memmove>
  24:	ldp	x29, x30, [sp], #48
  28:	ret

000000000000002c <grub_crypto_xor>:
  2c:	sub	sp, sp, #0x40
  30:	str	x0, [sp, #24]
  34:	str	x1, [sp, #16]
  38:	str	x2, [sp, #8]
  3c:	str	x3, [sp]
  40:	ldr	x0, [sp, #16]
  44:	str	x0, [sp, #56]
  48:	ldr	x0, [sp, #8]
  4c:	str	x0, [sp, #48]
  50:	ldr	x0, [sp, #24]
  54:	str	x0, [sp, #40]
  58:	b	ac <grub_crypto_xor+0x80>
  5c:	ldr	x0, [sp, #56]
  60:	ldrb	w1, [x0]
  64:	ldr	x0, [sp, #48]
  68:	ldrb	w0, [x0]
  6c:	eor	w0, w1, w0
  70:	and	w1, w0, #0xff
  74:	ldr	x0, [sp, #40]
  78:	strb	w1, [x0]
  7c:	ldr	x0, [sp, #56]
  80:	add	x0, x0, #0x1
  84:	str	x0, [sp, #56]
  88:	ldr	x0, [sp, #48]
  8c:	add	x0, x0, #0x1
  90:	str	x0, [sp, #48]
  94:	ldr	x0, [sp, #40]
  98:	add	x0, x0, #0x1
  9c:	str	x0, [sp, #40]
  a0:	ldr	x0, [sp]
  a4:	sub	x0, x0, #0x1
  a8:	str	x0, [sp]
  ac:	ldr	x0, [sp]
  b0:	cmp	x0, #0x0
  b4:	b.eq	138 <grub_crypto_xor+0x10c>  // b.none
  b8:	ldr	x0, [sp, #56]
  bc:	and	x0, x0, #0x7
  c0:	cmp	x0, #0x0
  c4:	b.ne	5c <grub_crypto_xor+0x30>  // b.any
  c8:	ldr	x0, [sp, #48]
  cc:	and	x0, x0, #0x7
  d0:	cmp	x0, #0x0
  d4:	b.ne	5c <grub_crypto_xor+0x30>  // b.any
  d8:	ldr	x0, [sp, #40]
  dc:	and	x0, x0, #0x7
  e0:	cmp	x0, #0x0
  e4:	b.ne	5c <grub_crypto_xor+0x30>  // b.any
  e8:	b	138 <grub_crypto_xor+0x10c>
  ec:	ldr	x0, [sp, #56]
  f0:	ldr	x1, [x0]
  f4:	ldr	x0, [sp, #48]
  f8:	ldr	x0, [x0]
  fc:	eor	x1, x1, x0
 100:	ldr	x0, [sp, #40]
 104:	str	x1, [x0]
 108:	ldr	x0, [sp, #56]
 10c:	add	x0, x0, #0x8
 110:	str	x0, [sp, #56]
 114:	ldr	x0, [sp, #48]
 118:	add	x0, x0, #0x8
 11c:	str	x0, [sp, #48]
 120:	ldr	x0, [sp, #40]
 124:	add	x0, x0, #0x8
 128:	str	x0, [sp, #40]
 12c:	ldr	x0, [sp]
 130:	sub	x0, x0, #0x8
 134:	str	x0, [sp]
 138:	ldr	x0, [sp]
 13c:	cmp	x0, #0x7
 140:	b.hi	ec <grub_crypto_xor+0xc0>  // b.pmore
 144:	b	198 <grub_crypto_xor+0x16c>
 148:	ldr	x0, [sp, #56]
 14c:	ldrb	w1, [x0]
 150:	ldr	x0, [sp, #48]
 154:	ldrb	w0, [x0]
 158:	eor	w0, w1, w0
 15c:	and	w1, w0, #0xff
 160:	ldr	x0, [sp, #40]
 164:	strb	w1, [x0]
 168:	ldr	x0, [sp, #56]
 16c:	add	x0, x0, #0x1
 170:	str	x0, [sp, #56]
 174:	ldr	x0, [sp, #48]
 178:	add	x0, x0, #0x1
 17c:	str	x0, [sp, #48]
 180:	ldr	x0, [sp, #40]
 184:	add	x0, x0, #0x1
 188:	str	x0, [sp, #40]
 18c:	ldr	x0, [sp]
 190:	sub	x0, x0, #0x1
 194:	str	x0, [sp]
 198:	ldr	x0, [sp]
 19c:	cmp	x0, #0x0
 1a0:	b.ne	148 <grub_crypto_xor+0x11c>  // b.any
 1a4:	nop
 1a8:	nop
 1ac:	add	sp, sp, #0x40
 1b0:	ret

00000000000001b4 <grub_raid_block_mulx>:
 1b4:	sub	sp, sp, #0x30
 1b8:	str	w0, [sp, #28]
 1bc:	str	x1, [sp, #16]
 1c0:	str	x2, [sp, #8]
 1c4:	ldr	x0, [sp, #16]
 1c8:	str	x0, [sp, #32]
 1cc:	str	xzr, [sp, #40]
 1d0:	b	240 <grub_raid_block_mulx+0x8c>
 1d4:	ldr	x0, [sp, #32]
 1d8:	ldrb	w0, [x0]
 1dc:	cmp	w0, #0x0
 1e0:	b.eq	228 <grub_raid_block_mulx+0x74>  // b.none
 1e4:	ldr	x0, [sp, #32]
 1e8:	ldrb	w0, [x0]
 1ec:	mov	w1, w0
 1f0:	adrp	x0, 0 <grub_memcpy>
 1f4:	add	x0, x0, #0x0
 1f8:	ldr	x0, [x0]
 1fc:	sxtw	x1, w1
 200:	ldr	w1, [x0, x1, lsl #2]
 204:	ldr	w0, [sp, #28]
 208:	add	w2, w1, w0
 20c:	adrp	x0, 0 <grub_memcpy>
 210:	add	x0, x0, #0x0
 214:	ldr	x1, [x0]
 218:	mov	w0, w2
 21c:	ldrb	w1, [x1, x0]
 220:	ldr	x0, [sp, #32]
 224:	strb	w1, [x0]
 228:	ldr	x0, [sp, #40]
 22c:	add	x0, x0, #0x1
 230:	str	x0, [sp, #40]
 234:	ldr	x0, [sp, #32]
 238:	add	x0, x0, #0x1
 23c:	str	x0, [sp, #32]
 240:	ldr	x1, [sp, #40]
 244:	ldr	x0, [sp, #8]
 248:	cmp	x1, x0
 24c:	b.cc	1d4 <grub_raid_block_mulx+0x20>  // b.lo, b.ul, b.last
 250:	nop
 254:	nop
 258:	add	sp, sp, #0x30
 25c:	ret
	...

0000000000000270 <grub_raid6_init_table>:
 270:	sub	sp, sp, #0x10
 274:	mov	w0, #0x1                   	// #1
 278:	strb	w0, [sp, #11]
 27c:	str	wzr, [sp, #12]
 280:	b	320 <grub_raid6_init_table+0xb0>
 284:	adrp	x0, 0 <grub_memcpy>
 288:	add	x0, x0, #0x0
 28c:	ldr	x1, [x0]
 290:	ldr	w0, [sp, #12]
 294:	ldrb	w2, [sp, #11]
 298:	strb	w2, [x1, x0]
 29c:	ldr	w0, [sp, #12]
 2a0:	add	w2, w0, #0xff
 2a4:	adrp	x0, 0 <grub_memcpy>
 2a8:	add	x0, x0, #0x0
 2ac:	ldr	x1, [x0]
 2b0:	mov	w0, w2
 2b4:	ldrb	w2, [sp, #11]
 2b8:	strb	w2, [x1, x0]
 2bc:	ldrb	w1, [sp, #11]
 2c0:	adrp	x0, 0 <grub_memcpy>
 2c4:	add	x0, x0, #0x0
 2c8:	ldr	x0, [x0]
 2cc:	sxtw	x1, w1
 2d0:	ldr	w2, [sp, #12]
 2d4:	str	w2, [x0, x1, lsl #2]
 2d8:	ldrsb	w0, [sp, #11]
 2dc:	cmp	w0, #0x0
 2e0:	b.ge	308 <grub_raid6_init_table+0x98>  // b.tcont
 2e4:	ldrb	w0, [sp, #11]
 2e8:	lsl	w0, w0, #1
 2ec:	sxtb	w1, w0
 2f0:	mov	w0, #0x1d                  	// #29
 2f4:	sxtb	w0, w0
 2f8:	eor	w0, w1, w0
 2fc:	sxtb	w0, w0
 300:	strb	w0, [sp, #11]
 304:	b	314 <grub_raid6_init_table+0xa4>
 308:	ldrb	w0, [sp, #11]
 30c:	ubfiz	w0, w0, #1, #7
 310:	strb	w0, [sp, #11]
 314:	ldr	w0, [sp, #12]
 318:	add	w0, w0, #0x1
 31c:	str	w0, [sp, #12]
 320:	ldr	w0, [sp, #12]
 324:	cmp	w0, #0xfe
 328:	b.ls	284 <grub_raid6_init_table+0x14>  // b.plast
 32c:	nop
 330:	nop
 334:	add	sp, sp, #0x10
 338:	ret
 33c:	nop
	...

0000000000000350 <mod_255>:
 350:	sub	sp, sp, #0x10
 354:	str	w0, [sp, #12]
 358:	b	374 <mod_255+0x24>
 35c:	ldr	w0, [sp, #12]
 360:	lsr	w1, w0, #8
 364:	ldr	w0, [sp, #12]
 368:	and	w0, w0, #0xff
 36c:	add	w0, w1, w0
 370:	str	w0, [sp, #12]
 374:	ldr	w0, [sp, #12]
 378:	cmp	w0, #0xff
 37c:	b.hi	35c <mod_255+0xc>  // b.pmore
 380:	ldr	w0, [sp, #12]
 384:	cmp	w0, #0xff
 388:	b.ne	394 <mod_255+0x44>  // b.any
 38c:	mov	w0, #0x0                   	// #0
 390:	b	398 <mod_255+0x48>
 394:	ldr	w0, [sp, #12]
 398:	add	sp, sp, #0x10
 39c:	ret

00000000000003a0 <raid6_recover_read_node>:
 3a0:	stp	x29, x30, [sp, #-80]!
 3a4:	mov	x29, sp
 3a8:	str	x0, [sp, #56]
 3ac:	str	w1, [sp, #52]
 3b0:	str	x2, [sp, #40]
 3b4:	str	x3, [sp, #32]
 3b8:	str	x4, [sp, #24]
 3bc:	ldr	x0, [sp, #56]
 3c0:	str	x0, [sp, #72]
 3c4:	ldr	x0, [sp, #72]
 3c8:	ldr	x1, [x0, #40]
 3cc:	ldrsw	x0, [sp, #52]
 3d0:	lsl	x0, x0, #5
 3d4:	add	x4, x1, x0
 3d8:	ldr	x0, [sp, #24]
 3dc:	lsr	x0, x0, #9
 3e0:	ldr	x3, [sp, #32]
 3e4:	mov	x2, x0
 3e8:	ldr	x1, [sp, #40]
 3ec:	mov	x0, x4
 3f0:	bl	0 <grub_diskfilter_read_node>
 3f4:	ldp	x29, x30, [sp], #80
 3f8:	ret

00000000000003fc <grub_raid6_recover_gen>:
 3fc:	stp	x29, x30, [sp, #-144]!
 400:	mov	x29, sp
 404:	str	x0, [sp, #72]
 408:	str	x1, [sp, #64]
 40c:	str	w2, [sp, #60]
 410:	str	w3, [sp, #56]
 414:	str	x4, [sp, #48]
 418:	str	x5, [sp, #40]
 41c:	str	x6, [sp, #32]
 420:	str	w7, [sp, #28]
 424:	mov	w0, #0xffffffff            	// #-1
 428:	str	w0, [sp, #128]
 42c:	mov	w0, #0xffffffff            	// #-1
 430:	str	w0, [sp, #124]
 434:	str	xzr, [sp, #96]
 438:	str	xzr, [sp, #112]
 43c:	ldr	x0, [sp, #32]
 440:	bl	0 <grub_zalloc>
 444:	str	x0, [sp, #96]
 448:	ldr	x0, [sp, #96]
 44c:	cmp	x0, #0x0
 450:	b.eq	7a8 <grub_raid6_recover_gen+0x3ac>  // b.none
 454:	ldr	x0, [sp, #32]
 458:	bl	0 <grub_zalloc>
 45c:	str	x0, [sp, #112]
 460:	ldr	x0, [sp, #112]
 464:	cmp	x0, #0x0
 468:	b.eq	7b0 <grub_raid6_recover_gen+0x3b4>  // b.none
 46c:	ldr	w0, [sp, #56]
 470:	add	w0, w0, #0x1
 474:	str	w0, [sp, #136]
 478:	ldr	x0, [sp, #64]
 47c:	mov	w1, w0
 480:	ldr	w0, [sp, #136]
 484:	cmp	w0, w1
 488:	b.ne	490 <grub_raid6_recover_gen+0x94>  // b.any
 48c:	str	wzr, [sp, #136]
 490:	ldr	w0, [sp, #136]
 494:	add	w0, w0, #0x1
 498:	str	w0, [sp, #132]
 49c:	ldr	x0, [sp, #64]
 4a0:	mov	w1, w0
 4a4:	ldr	w0, [sp, #132]
 4a8:	cmp	w0, w1
 4ac:	b.ne	4b4 <grub_raid6_recover_gen+0xb8>  // b.any
 4b0:	str	wzr, [sp, #132]
 4b4:	str	wzr, [sp, #140]
 4b8:	b	5b0 <grub_raid6_recover_gen+0x1b4>
 4bc:	ldr	w0, [sp, #28]
 4c0:	and	w0, w0, #0x4
 4c4:	cmp	w0, #0x0
 4c8:	b.eq	4d8 <grub_raid6_recover_gen+0xdc>  // b.none
 4cc:	ldr	w0, [sp, #132]
 4d0:	str	w0, [sp, #108]
 4d4:	b	4e0 <grub_raid6_recover_gen+0xe4>
 4d8:	ldr	w0, [sp, #140]
 4dc:	str	w0, [sp, #108]
 4e0:	ldr	w1, [sp, #132]
 4e4:	ldr	w0, [sp, #60]
 4e8:	cmp	w1, w0
 4ec:	b.ne	4fc <grub_raid6_recover_gen+0x100>  // b.any
 4f0:	ldr	w0, [sp, #108]
 4f4:	str	w0, [sp, #128]
 4f8:	b	580 <grub_raid6_recover_gen+0x184>
 4fc:	ldr	x5, [sp, #144]
 500:	ldr	x4, [sp, #32]
 504:	ldr	x3, [sp, #48]
 508:	ldr	x2, [sp, #40]
 50c:	ldr	w1, [sp, #132]
 510:	ldr	x0, [sp, #72]
 514:	blr	x5
 518:	cmp	w0, #0x0
 51c:	b.ne	55c <grub_raid6_recover_gen+0x160>  // b.any
 520:	ldr	x3, [sp, #32]
 524:	ldr	x2, [sp, #48]
 528:	ldr	x1, [sp, #96]
 52c:	ldr	x0, [sp, #96]
 530:	bl	2c <grub_crypto_xor>
 534:	ldr	w0, [sp, #108]
 538:	ldr	x2, [sp, #32]
 53c:	ldr	x1, [sp, #48]
 540:	bl	1b4 <grub_raid_block_mulx>
 544:	ldr	x3, [sp, #32]
 548:	ldr	x2, [sp, #48]
 54c:	ldr	x1, [sp, #112]
 550:	ldr	x0, [sp, #112]
 554:	bl	2c <grub_crypto_xor>
 558:	b	580 <grub_raid6_recover_gen+0x184>
 55c:	ldr	w0, [sp, #124]
 560:	cmp	w0, #0x0
 564:	b.ge	7b8 <grub_raid6_recover_gen+0x3bc>  // b.tcont
 568:	ldr	w0, [sp, #108]
 56c:	str	w0, [sp, #124]
 570:	adrp	x0, 0 <grub_memcpy>
 574:	add	x0, x0, #0x0
 578:	ldr	x0, [x0]
 57c:	str	wzr, [x0]
 580:	ldr	w0, [sp, #132]
 584:	add	w0, w0, #0x1
 588:	str	w0, [sp, #132]
 58c:	ldr	x0, [sp, #64]
 590:	mov	w1, w0
 594:	ldr	w0, [sp, #132]
 598:	cmp	w0, w1
 59c:	b.ne	5a4 <grub_raid6_recover_gen+0x1a8>  // b.any
 5a0:	str	wzr, [sp, #132]
 5a4:	ldr	w0, [sp, #140]
 5a8:	add	w0, w0, #0x1
 5ac:	str	w0, [sp, #140]
 5b0:	ldr	x0, [sp, #64]
 5b4:	sub	w0, w0, #0x2
 5b8:	ldr	w1, [sp, #140]
 5bc:	cmp	w1, w0
 5c0:	b.lt	4bc <grub_raid6_recover_gen+0xc0>  // b.tstop
 5c4:	ldr	w0, [sp, #128]
 5c8:	cmp	w0, #0x0
 5cc:	b.lt	7c0 <grub_raid6_recover_gen+0x3c4>  // b.tstop
 5d0:	ldr	w0, [sp, #124]
 5d4:	cmp	w0, #0x0
 5d8:	b.ge	67c <grub_raid6_recover_gen+0x280>  // b.tcont
 5dc:	ldr	x5, [sp, #144]
 5e0:	ldr	x4, [sp, #32]
 5e4:	ldr	x3, [sp, #48]
 5e8:	ldr	x2, [sp, #40]
 5ec:	ldr	w1, [sp, #56]
 5f0:	ldr	x0, [sp, #72]
 5f4:	blr	x5
 5f8:	cmp	w0, #0x0
 5fc:	b.ne	618 <grub_raid6_recover_gen+0x21c>  // b.any
 600:	ldr	x3, [sp, #32]
 604:	ldr	x2, [sp, #96]
 608:	ldr	x1, [sp, #48]
 60c:	ldr	x0, [sp, #48]
 610:	bl	2c <grub_crypto_xor>
 614:	b	7dc <grub_raid6_recover_gen+0x3e0>
 618:	adrp	x0, 0 <grub_memcpy>
 61c:	add	x0, x0, #0x0
 620:	ldr	x0, [x0]
 624:	str	wzr, [x0]
 628:	ldr	x5, [sp, #144]
 62c:	ldr	x4, [sp, #32]
 630:	ldr	x3, [sp, #48]
 634:	ldr	x2, [sp, #40]
 638:	ldr	w1, [sp, #136]
 63c:	ldr	x0, [sp, #72]
 640:	blr	x5
 644:	cmp	w0, #0x0
 648:	b.ne	7c8 <grub_raid6_recover_gen+0x3cc>  // b.any
 64c:	ldr	x3, [sp, #32]
 650:	ldr	x2, [sp, #112]
 654:	ldr	x1, [sp, #48]
 658:	ldr	x0, [sp, #48]
 65c:	bl	2c <grub_crypto_xor>
 660:	mov	w1, #0xff                  	// #255
 664:	ldr	w0, [sp, #128]
 668:	sub	w0, w1, w0
 66c:	ldr	x2, [sp, #32]
 670:	ldr	x1, [sp, #48]
 674:	bl	1b4 <grub_raid_block_mulx>
 678:	b	7dc <grub_raid6_recover_gen+0x3e0>
 67c:	ldr	x5, [sp, #144]
 680:	ldr	x4, [sp, #32]
 684:	ldr	x3, [sp, #48]
 688:	ldr	x2, [sp, #40]
 68c:	ldr	w1, [sp, #56]
 690:	ldr	x0, [sp, #72]
 694:	blr	x5
 698:	cmp	w0, #0x0
 69c:	b.ne	7d0 <grub_raid6_recover_gen+0x3d4>  // b.any
 6a0:	ldr	x3, [sp, #32]
 6a4:	ldr	x2, [sp, #48]
 6a8:	ldr	x1, [sp, #96]
 6ac:	ldr	x0, [sp, #96]
 6b0:	bl	2c <grub_crypto_xor>
 6b4:	ldr	x5, [sp, #144]
 6b8:	ldr	x4, [sp, #32]
 6bc:	ldr	x3, [sp, #48]
 6c0:	ldr	x2, [sp, #40]
 6c4:	ldr	w1, [sp, #136]
 6c8:	ldr	x0, [sp, #72]
 6cc:	blr	x5
 6d0:	cmp	w0, #0x0
 6d4:	b.ne	7d8 <grub_raid6_recover_gen+0x3dc>  // b.any
 6d8:	ldr	x3, [sp, #32]
 6dc:	ldr	x2, [sp, #48]
 6e0:	ldr	x1, [sp, #112]
 6e4:	ldr	x0, [sp, #112]
 6e8:	bl	2c <grub_crypto_xor>
 6ec:	ldr	w0, [sp, #128]
 6f0:	eor	w0, w0, #0xff
 6f4:	mov	w2, w0
 6f8:	ldr	w0, [sp, #128]
 6fc:	eor	w1, w0, #0xff
 700:	ldr	w0, [sp, #124]
 704:	add	w3, w1, w0
 708:	adrp	x0, 0 <grub_memcpy>
 70c:	add	x0, x0, #0x0
 710:	ldr	x1, [x0]
 714:	sxtw	x0, w3
 718:	ldrb	w0, [x1, x0]
 71c:	eor	w0, w0, #0x1
 720:	and	w0, w0, #0xff
 724:	mov	w1, w0
 728:	adrp	x0, 0 <grub_memcpy>
 72c:	add	x0, x0, #0x0
 730:	ldr	x0, [x0]
 734:	sxtw	x1, w1
 738:	ldr	w0, [x0, x1, lsl #2]
 73c:	eor	w0, w0, #0xff
 740:	add	w0, w2, w0
 744:	bl	350 <mod_255>
 748:	str	w0, [sp, #92]
 74c:	ldr	x2, [sp, #32]
 750:	ldr	x1, [sp, #112]
 754:	ldr	w0, [sp, #92]
 758:	bl	1b4 <grub_raid_block_mulx>
 75c:	ldr	w1, [sp, #124]
 760:	ldr	w0, [sp, #92]
 764:	add	w0, w1, w0
 768:	bl	350 <mod_255>
 76c:	str	w0, [sp, #92]
 770:	ldr	x2, [sp, #32]
 774:	ldr	x1, [sp, #96]
 778:	ldr	w0, [sp, #92]
 77c:	bl	1b4 <grub_raid_block_mulx>
 780:	ldr	x3, [sp, #32]
 784:	ldr	x2, [sp, #112]
 788:	ldr	x1, [sp, #96]
 78c:	ldr	x0, [sp, #96]
 790:	bl	2c <grub_crypto_xor>
 794:	ldr	x2, [sp, #32]
 798:	ldr	x1, [sp, #96]
 79c:	ldr	x0, [sp, #48]
 7a0:	bl	0 <grub_memcpy>
 7a4:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7a8:	nop
 7ac:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7b0:	nop
 7b4:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7b8:	nop
 7bc:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7c0:	nop
 7c4:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7c8:	nop
 7cc:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7d0:	nop
 7d4:	b	7dc <grub_raid6_recover_gen+0x3e0>
 7d8:	nop
 7dc:	ldr	x0, [sp, #96]
 7e0:	bl	0 <grub_free>
 7e4:	ldr	x0, [sp, #112]
 7e8:	bl	0 <grub_free>
 7ec:	adrp	x0, 0 <grub_memcpy>
 7f0:	add	x0, x0, #0x0
 7f4:	ldr	x0, [x0]
 7f8:	ldr	w0, [x0]
 7fc:	ldp	x29, x30, [sp], #144
 800:	ret
 804:	nop
	...

0000000000000820 <grub_raid6_recover>:
 820:	sub	sp, sp, #0x50
 824:	stp	x29, x30, [sp, #16]
 828:	add	x29, sp, #0x10
 82c:	str	x0, [sp, #72]
 830:	str	w1, [sp, #68]
 834:	str	w2, [sp, #64]
 838:	str	x3, [sp, #56]
 83c:	str	x4, [sp, #48]
 840:	str	x5, [sp, #40]
 844:	ldr	x0, [sp, #72]
 848:	ldr	w0, [x0, #32]
 84c:	mov	w1, w0
 850:	ldr	x0, [sp, #40]
 854:	lsl	x2, x0, #9
 858:	ldr	x0, [sp, #72]
 85c:	ldr	w3, [x0, #20]
 860:	adrp	x0, 0 <grub_memcpy>
 864:	add	x0, x0, #0x0
 868:	ldr	x0, [x0]
 86c:	str	x0, [sp]
 870:	mov	w7, w3
 874:	mov	x6, x2
 878:	ldr	x5, [sp, #48]
 87c:	ldr	x4, [sp, #56]
 880:	ldr	w3, [sp, #64]
 884:	ldr	w2, [sp, #68]
 888:	ldr	x0, [sp, #72]
 88c:	bl	3fc <grub_raid6_recover_gen>
 890:	ldp	x29, x30, [sp, #16]
 894:	add	sp, sp, #0x50
 898:	ret
 89c:	nop
	...

00000000000008a8 <grub_mod_init>:
 8a8:	stp	x29, x30, [sp, #-32]!
 8ac:	mov	x29, sp
 8b0:	str	x0, [sp, #24]
 8b4:	bl	270 <grub_raid6_init_table>
 8b8:	adrp	x0, 0 <grub_memcpy>
 8bc:	add	x0, x0, #0x0
 8c0:	ldr	x0, [x0]
 8c4:	adrp	x1, 0 <grub_memcpy>
 8c8:	add	x1, x1, #0x0
 8cc:	ldr	x1, [x1]
 8d0:	str	x1, [x0]
 8d4:	nop
 8d8:	ldp	x29, x30, [sp], #32
 8dc:	ret
	...

00000000000008f0 <grub_mod_fini>:
 8f0:	adrp	x0, 0 <grub_memcpy>
 8f4:	add	x0, x0, #0x0
 8f8:	ldr	x0, [x0]
 8fc:	str	xzr, [x0]
 900:	nop
 904:	ret
	...
