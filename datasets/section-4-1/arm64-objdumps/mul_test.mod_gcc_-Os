
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mul_test.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1d4>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x19, x20, [sp, #32]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	stp	x21, x22, [sp, #48]
  1c:	mul	x22, x0, x1
  20:	mov	x21, #0x0                   	// #0
  24:	mov	w0, #0x0                   	// #0
  28:	mov	x1, #0x1                   	// #1
  2c:	stp	x23, x24, [sp, #64]
  30:	str	x25, [sp, #80]
  34:	lsl	x2, x1, x0
  38:	tst	x2, x19
  3c:	b.eq	48 <grub_mod_init-0x18c>  // b.none
  40:	lsl	x2, x20, x0
  44:	add	x21, x21, x2
  48:	add	w0, w0, #0x1
  4c:	cmp	w0, #0x40
  50:	b.ne	34 <grub_mod_init-0x1a0>  // b.any
  54:	adrp	x0, 0 <grub_mod_init-0x1d4>
  58:	adrp	x24, 0 <grub_mod_init-0x1d4>
  5c:	cmp	x21, x22
  60:	stp	x21, x22, [sp]
  64:	cset	w23, eq  // eq = none
  68:	ldr	x25, [x0]
  6c:	adrp	x0, 0 <grub_mod_init-0x1d4>
  70:	ldr	x1, [x24]
  74:	mov	x7, x20
  78:	ldr	x5, [x0]
  7c:	adrp	x0, 0 <grub_mod_init-0x1d4>
  80:	mov	x6, x19
  84:	mov	x2, x25
  88:	ldr	x4, [x0]
  8c:	mov	w3, #0x2a                  	// #42
  90:	mov	w0, w23
  94:	bl	0 <grub_test_assert_helper>
  98:	stp	x21, x22, [sp]
  9c:	adrp	x0, 0 <grub_mod_init-0x1d4>
  a0:	ldr	x1, [x24]
  a4:	mov	x7, x20
  a8:	ldr	x5, [x0]
  ac:	adrp	x0, 0 <grub_mod_init-0x1d4>
  b0:	mov	x6, x19
  b4:	mov	x2, x25
  b8:	ldr	x4, [x0]
  bc:	mov	w3, #0x2d                  	// #45
  c0:	mov	w0, w23
  c4:	bl	0 <grub_test_assert_helper>
  c8:	ldp	x29, x30, [sp, #16]
  cc:	ldp	x19, x20, [sp, #32]
  d0:	ldp	x21, x22, [sp, #48]
  d4:	ldp	x23, x24, [sp, #64]
  d8:	ldr	x25, [sp, #80]
  dc:	add	sp, sp, #0x60
  e0:	ret
  e4:	nop
	...
 118:	stp	x29, x30, [sp, #-80]!
 11c:	mov	x1, #0x1                   	// #1
 120:	mov	x0, #0xffffffffffffffff    	// #-1
 124:	mov	x29, sp
 128:	stp	x19, x20, [sp, #16]
 12c:	mov	x20, #0x7                   	// #7
 130:	mov	x19, #0x194                 	// #404
 134:	stp	x21, x22, [sp, #32]
 138:	mov	x21, #0x9c40                	// #40000
 13c:	mov	x22, #0x1                   	// #1
 140:	stp	x23, x24, [sp, #48]
 144:	mov	x23, #0x1d                  	// #29
 148:	mov	x24, #0x17                  	// #23
 14c:	str	x25, [sp, #64]
 150:	bl	0 <grub_mod_init-0x1d4>
 154:	mov	x1, #0xffffffffffffffff    	// #-1
 158:	mov	x0, #0x1                   	// #1
 15c:	bl	0 <grub_mod_init-0x1d4>
 160:	mov	x25, #0xd                   	// #13
 164:	mov	x1, #0xffffffffffffffff    	// #-1
 168:	mov	x0, x1
 16c:	bl	0 <grub_mod_init-0x1d4>
 170:	mov	x1, #0x1                   	// #1
 174:	mov	x0, x1
 178:	bl	0 <grub_mod_init-0x1d4>
 17c:	mov	x1, #0x1                   	// #1
 180:	mov	x0, #0x2                   	// #2
 184:	bl	0 <grub_mod_init-0x1d4>
 188:	add	x19, x19, x19, lsl #4
 18c:	madd	x19, x20, x25, x19
 190:	mul	x1, x19, x24
 194:	madd	x20, x20, x23, x1
 198:	cmp	x20, #0x0
 19c:	csel	x20, x20, x22, ne  // ne = any
 1a0:	cmp	x19, #0x0
 1a4:	csel	x19, x19, x22, ne  // ne = any
 1a8:	mov	x1, x20
 1ac:	mov	x0, x19
 1b0:	bl	0 <grub_mod_init-0x1d4>
 1b4:	subs	x21, x21, #0x1
 1b8:	b.ne	188 <grub_mod_init-0x4c>  // b.any
 1bc:	ldp	x19, x20, [sp, #16]
 1c0:	ldp	x21, x22, [sp, #32]
 1c4:	ldp	x23, x24, [sp, #48]
 1c8:	ldr	x25, [sp, #64]
 1cc:	ldp	x29, x30, [sp], #80
 1d0:	ret

00000000000001d4 <grub_mod_init>:
 1d4:	adrp	x0, 0 <grub_mod_init-0x1d4>
 1d8:	ldr	x1, [x0]
 1dc:	adrp	x0, 0 <grub_mod_init-0x1d4>
 1e0:	ldr	x0, [x0]
 1e4:	b	0 <grub_test_register>
	...

00000000000001f8 <grub_mod_fini>:
 1f8:	adrp	x0, 0 <grub_mod_init-0x1d4>
 1fc:	ldr	x0, [x0]
 200:	b	0 <grub_test_unregister>
 204:	nop
	...
