
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix3.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xa28>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	mov	w1, w1
  28:	ldr	x5, [x0, #128]
  2c:	add	x4, sp, #0x1c
  30:	mov	x3, #0x4                   	// #4
  34:	ubfiz	x2, x2, #2, #32
  38:	mul	x1, x1, x5
  3c:	ldr	x0, [x0, #112]
  40:	bl	0 <grub_disk_read>
  44:	ldr	w0, [sp, #28]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	stp	x29, x30, [sp, #-128]!
  54:	mov	x29, sp
  58:	stp	x19, x20, [sp, #16]
  5c:	mov	x19, x0
  60:	str	x4, [sp, #104]
  64:	ldr	w0, [x0, #40]
  68:	cmp	x0, x3
  6c:	b.cc	104 <grub_mod_init-0x924>  // b.lo, b.ul, b.last
  70:	stp	x21, x22, [sp, #32]
  74:	stp	x27, x28, [sp, #80]
  78:	mov	x27, x1
  7c:	mov	x28, x2
  80:	mov	x22, x5
  84:	ldr	x4, [sp, #104]
  88:	add	x2, x3, x4
  8c:	sub	x1, x0, x3
  90:	cmp	x0, x2
  94:	csel	x0, x1, x4, cc  // cc = lo, ul, last
  98:	mov	x1, x0
  9c:	str	x0, [sp, #104]
  a0:	mov	x0, #0x0                   	// #0
  a4:	cbz	x1, 304 <grub_mod_init-0x724>
  a8:	stp	x25, x26, [sp, #64]
  ac:	add	x1, x1, x3
  b0:	ldr	x0, [x19, #128]
  b4:	sub	x26, x1, #0x1
  b8:	ubfx	x26, x26, #9, #32
  bc:	udiv	x26, x26, x0
  c0:	str	w26, [sp, #96]
  c4:	add	w26, w26, #0x1
  c8:	and	x3, x3, #0xffffffff
  cc:	lsl	x0, x0, #9
  d0:	udiv	x20, x3, x0
  d4:	str	w20, [sp, #100]
  d8:	msub	x0, x20, x0, x3
  dc:	str	x0, [sp, #112]
  e0:	cmp	w26, w20
  e4:	b.ls	2c0 <grub_mod_init-0x768>  // b.plast
  e8:	stp	x23, x24, [sp, #48]
  ec:	add	x24, x20, #0xe
  f0:	add	x24, x19, x24, lsl #2
  f4:	adrp	x25, 0 <grub_mod_init-0xa28>
  f8:	and	x0, x1, #0xffffffff
  fc:	str	x0, [sp, #120]
 100:	b	1a8 <grub_mod_init-0x880>
 104:	adrp	x0, 0 <grub_mod_init-0xa28>
 108:	ldr	x1, [x0]
 10c:	mov	w0, #0xb                   	// #11
 110:	bl	0 <grub_error>
 114:	mov	x0, #0xffffffffffffffff    	// #-1
 118:	b	30c <grub_mod_init-0x71c>
 11c:	ldr	w0, [x24]
 120:	ldr	x1, [x25]
 124:	ldr	w1, [x1]
 128:	cbnz	w1, 2d4 <grub_mod_init-0x754>
 12c:	ldr	w1, [sp, #96]
 130:	lsl	x3, x21, #9
 134:	cmp	w1, w20
 138:	b.eq	28c <grub_mod_init-0x79c>  // b.none
 13c:	mov	x23, #0x0                   	// #0
 140:	ldr	w1, [sp, #100]
 144:	cmp	w1, w20
 148:	b.eq	2ac <grub_mod_init-0x77c>  // b.none
 14c:	ldr	x1, [x19, #112]
 150:	str	x27, [x1, #48]
 154:	ldr	x1, [x19, #112]
 158:	str	x28, [x1, #56]
 15c:	mov	w0, w0
 160:	ldr	x1, [x19, #128]
 164:	mov	x4, x22
 168:	mov	x2, x23
 16c:	mul	x1, x0, x1
 170:	ldr	x0, [x19, #112]
 174:	bl	0 <grub_disk_read>
 178:	ldr	x0, [x19, #112]
 17c:	str	xzr, [x0, #48]
 180:	ldr	x0, [x25]
 184:	ldr	w0, [x0]
 188:	cbnz	w0, 2ec <grub_mod_init-0x73c>
 18c:	ldr	x5, [x19, #128]
 190:	add	x22, x22, x5, lsl #9
 194:	sub	x22, x22, x23
 198:	add	w20, w20, #0x1
 19c:	add	x24, x24, #0x4
 1a0:	cmp	w26, w20
 1a4:	b.ls	2bc <grub_mod_init-0x76c>  // b.plast
 1a8:	ldr	x21, [x19, #128]
 1ac:	cmp	w20, #0x6
 1b0:	b.ls	11c <grub_mod_init-0x90c>  // b.plast
 1b4:	sub	w2, w20, #0x7
 1b8:	ldr	w0, [x19, #96]
 1bc:	cmp	w0, w2
 1c0:	b.hi	204 <grub_mod_init-0x824>  // b.pmore
 1c4:	sub	w23, w2, w0
 1c8:	mov	w1, w0
 1cc:	umull	x3, w0, w0
 1d0:	sub	w2, w2, w0
 1d4:	cmp	x2, x3
 1d8:	b.cc	214 <grub_mod_init-0x814>  // b.lo, b.ul, b.last
 1dc:	msub	w23, w0, w0, w23
 1e0:	mul	x1, x1, x3
 1e4:	cmp	x1, w23, uxtw
 1e8:	b.hi	240 <grub_mod_init-0x7e8>  // b.pmore
 1ec:	adrp	x0, 0 <grub_mod_init-0xa28>
 1f0:	ldr	x1, [x0]
 1f4:	mov	w0, #0xb                   	// #11
 1f8:	bl	0 <grub_error>
 1fc:	mov	w0, #0x0                   	// #0
 200:	b	120 <grub_mod_init-0x908>
 204:	ldr	w1, [x19, #84]
 208:	mov	x0, x19
 20c:	bl	1c <grub_mod_init-0xa0c>
 210:	b	120 <grub_mod_init-0x908>
 214:	udiv	w2, w23, w0
 218:	ldr	w1, [x19, #88]
 21c:	mov	x0, x19
 220:	bl	1c <grub_mod_init-0xa0c>
 224:	ldr	w2, [x19, #96]
 228:	udiv	w1, w23, w2
 22c:	msub	w2, w1, w2, w23
 230:	mov	w1, w0
 234:	mov	x0, x19
 238:	bl	1c <grub_mod_init-0xa0c>
 23c:	b	120 <grub_mod_init-0x908>
 240:	udiv	w2, w23, w0
 244:	udiv	w2, w2, w0
 248:	ldr	w1, [x19, #92]
 24c:	mov	x0, x19
 250:	bl	1c <grub_mod_init-0xa0c>
 254:	ldr	w3, [x19, #96]
 258:	udiv	w2, w23, w3
 25c:	udiv	w1, w2, w3
 260:	msub	w2, w1, w3, w2
 264:	mov	w1, w0
 268:	mov	x0, x19
 26c:	bl	1c <grub_mod_init-0xa0c>
 270:	ldr	w2, [x19, #96]
 274:	udiv	w1, w23, w2
 278:	msub	w2, w1, w2, w23
 27c:	mov	w1, w0
 280:	mov	x0, x19
 284:	bl	1c <grub_mod_init-0xa0c>
 288:	b	120 <grub_mod_init-0x908>
 28c:	ldr	x1, [x19, #128]
 290:	lsl	x1, x1, #9
 294:	ldr	x2, [sp, #120]
 298:	udiv	x3, x2, x1
 29c:	msub	x3, x3, x1, x2
 2a0:	cmp	x3, #0x0
 2a4:	csel	x3, x3, x1, ne  // ne = any
 2a8:	b	13c <grub_mod_init-0x8ec>
 2ac:	ldr	x1, [sp, #112]
 2b0:	sub	x3, x3, x1
 2b4:	mov	x23, x1
 2b8:	b	14c <grub_mod_init-0x8dc>
 2bc:	ldp	x23, x24, [sp, #48]
 2c0:	ldr	x0, [sp, #104]
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	ldp	x25, x26, [sp, #64]
 2cc:	ldp	x27, x28, [sp, #80]
 2d0:	b	30c <grub_mod_init-0x71c>
 2d4:	mov	x0, #0xffffffffffffffff    	// #-1
 2d8:	ldp	x21, x22, [sp, #32]
 2dc:	ldp	x23, x24, [sp, #48]
 2e0:	ldp	x25, x26, [sp, #64]
 2e4:	ldp	x27, x28, [sp, #80]
 2e8:	b	30c <grub_mod_init-0x71c>
 2ec:	mov	x0, #0xffffffffffffffff    	// #-1
 2f0:	ldp	x21, x22, [sp, #32]
 2f4:	ldp	x23, x24, [sp, #48]
 2f8:	ldp	x25, x26, [sp, #64]
 2fc:	ldp	x27, x28, [sp, #80]
 300:	b	30c <grub_mod_init-0x71c>
 304:	ldp	x21, x22, [sp, #32]
 308:	ldp	x27, x28, [sp, #80]
 30c:	ldp	x19, x20, [sp, #16]
 310:	ldp	x29, x30, [sp], #128
 314:	ret
	...
 330:	stp	x29, x30, [sp, #-16]!
 334:	mov	x29, sp
 338:	mov	x5, x1
 33c:	mov	x4, x2
 340:	ldr	x3, [x0, #24]
 344:	ldr	x2, [x0, #96]
 348:	ldr	x1, [x0, #88]
 34c:	ldr	x0, [x0, #80]
 350:	bl	50 <grub_mod_init-0x9d8>
 354:	ldp	x29, x30, [sp], #16
 358:	ret
 35c:	stp	x29, x30, [sp, #-16]!
 360:	mov	x29, sp
 364:	str	w1, [x0, #100]
 368:	sub	w2, w1, #0x1
 36c:	ldrh	w5, [x0, #6]
 370:	add	w5, w5, #0x2
 374:	ldrh	w1, [x0, #8]
 378:	add	w5, w5, w1
 37c:	mov	w5, w5
 380:	ldr	x6, [x0, #128]
 384:	lsr	w1, w2, #3
 388:	add	x4, x0, #0x20
 38c:	mov	x3, #0x40                  	// #64
 390:	ubfiz	x2, x2, #6, #3
 394:	madd	x1, x5, x6, x1
 398:	ldr	x0, [x0, #112]
 39c:	bl	0 <grub_disk_read>
 3a0:	mov	w0, #0x0                   	// #0
 3a4:	ldp	x29, x30, [sp], #16
 3a8:	ret
 3ac:	stp	x29, x30, [sp, #-32]!
 3b0:	mov	x29, sp
 3b4:	stp	x19, x20, [sp, #16]
 3b8:	mov	x20, x0
 3bc:	mov	x0, #0x88                  	// #136
 3c0:	bl	0 <grub_malloc>
 3c4:	mov	x19, x0
 3c8:	cbz	x0, 47c <grub_mod_init-0x5ac>
 3cc:	mov	x4, x0
 3d0:	mov	x3, #0x20                  	// #32
 3d4:	mov	x2, #0x0                   	// #0
 3d8:	mov	x1, #0x2                   	// #2
 3dc:	mov	x0, x20
 3e0:	bl	0 <grub_disk_read>
 3e4:	adrp	x0, 0 <grub_mod_init-0xa28>
 3e8:	ldr	x0, [x0]
 3ec:	ldr	w0, [x0]
 3f0:	cbnz	w0, 460 <grub_mod_init-0x5c8>
 3f4:	ldrh	w1, [x19, #24]
 3f8:	mov	w0, #0x4d5a                	// #19802
 3fc:	cmp	w1, w0
 400:	b.ne	460 <grub_mod_init-0x5c8>  // b.any
 404:	mov	w0, #0x3c                  	// #60
 408:	str	w0, [x19, #120]
 40c:	ldrh	w0, [x19, #12]
 410:	cmp	w0, #0x13
 414:	b.hi	460 <grub_mod_init-0x5c8>  // b.pmore
 418:	str	x20, [x19, #112]
 41c:	str	wzr, [x19, #104]
 420:	ldrh	w1, [x19, #28]
 424:	mov	w2, #0xffff                	// #65535
 428:	cmp	w1, w2
 42c:	b.eq	48c <grub_mod_init-0x59c>  // b.none
 430:	and	w2, w1, #0xfffffdff
 434:	cbz	w2, 460 <grub_mod_init-0x5c8>
 438:	tst	x1, #0x1ff
 43c:	b.ne	460 <grub_mod_init-0x5c8>  // b.any
 440:	ubfx	x1, x1, #9, #7
 444:	str	x1, [x19, #128]
 448:	add	w1, w0, #0x9
 44c:	ldr	x0, [x19, #128]
 450:	lsl	x0, x0, x1
 454:	lsr	x0, x0, #2
 458:	str	w0, [x19, #96]
 45c:	cbnz	w0, 47c <grub_mod_init-0x5ac>
 460:	mov	x0, x19
 464:	bl	0 <grub_free>
 468:	adrp	x0, 0 <grub_mod_init-0xa28>
 46c:	ldr	x1, [x0]
 470:	mov	w0, #0x9                   	// #9
 474:	bl	0 <grub_error>
 478:	mov	x19, #0x0                   	// #0
 47c:	mov	x0, x19
 480:	ldp	x19, x20, [sp, #16]
 484:	ldp	x29, x30, [sp], #32
 488:	ret
 48c:	mov	x1, #0x2                   	// #2
 490:	str	x1, [x19, #128]
 494:	b	448 <grub_mod_init-0x5e0>
	...
 4a8:	stp	x29, x30, [sp, #-192]!
 4ac:	mov	x29, sp
 4b0:	stp	x19, x20, [sp, #16]
 4b4:	stp	x21, x22, [sp, #32]
 4b8:	stp	x23, x24, [sp, #48]
 4bc:	stp	x25, x26, [sp, #64]
 4c0:	stp	x27, x28, [sp, #80]
 4c4:	mov	x19, x0
 4c8:	str	x1, [sp, #104]
 4cc:	mov	x21, x1
 4d0:	mov	x27, #0x4                   	// #4
 4d4:	add	x25, sp, #0x80
 4d8:	mov	x23, x25
 4dc:	mov	w28, #0xffffa000            	// #-24576
 4e0:	ldrb	w0, [x21]
 4e4:	cmp	w0, #0x2f
 4e8:	b.ne	4f8 <grub_mod_init-0x530>  // b.any
 4ec:	ldrb	w0, [x21, #1]!
 4f0:	cmp	w0, #0x2f
 4f4:	b.eq	4ec <grub_mod_init-0x53c>  // b.none
 4f8:	cbz	w0, 6f0 <grub_mod_init-0x338>
 4fc:	ldrh	w0, [x19, #32]
 500:	tbz	w0, #14, 53c <grub_mod_init-0x4ec>
 504:	ldrb	w0, [x21]
 508:	cmp	w0, #0x2f
 50c:	mov	x24, x21
 510:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 514:	b.eq	528 <grub_mod_init-0x500>  // b.none
 518:	ldrb	w0, [x24, #1]!
 51c:	cmp	w0, #0x2f
 520:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 524:	b.ne	518 <grub_mod_init-0x510>  // b.any
 528:	ldr	w0, [x19, #40]
 52c:	cbz	w0, 550 <grub_mod_init-0x4d8>
 530:	mov	w20, #0x0                   	// #0
 534:	sub	x26, x24, x21
 538:	b	654 <grub_mod_init-0x3d4>
 53c:	adrp	x0, 0 <grub_mod_init-0xa28>
 540:	ldr	x1, [x0]
 544:	mov	w0, #0x4                   	// #4
 548:	bl	0 <grub_error>
 54c:	b	570 <grub_mod_init-0x4b8>
 550:	ldr	x2, [sp, #104]
 554:	adrp	x0, 0 <grub_mod_init-0xa28>
 558:	ldr	x1, [x0]
 55c:	mov	w0, #0x5                   	// #5
 560:	bl	0 <grub_error>
 564:	adrp	x0, 0 <grub_mod_init-0xa28>
 568:	ldr	x0, [x0]
 56c:	ldr	w0, [x0]
 570:	ldp	x19, x20, [sp, #16]
 574:	ldp	x21, x22, [sp, #32]
 578:	ldp	x23, x24, [sp, #48]
 57c:	ldp	x25, x26, [sp, #64]
 580:	ldp	x27, x28, [sp, #80]
 584:	ldp	x29, x30, [sp], #192
 588:	ret
 58c:	adrp	x0, 0 <grub_mod_init-0xa28>
 590:	ldr	x0, [x0]
 594:	ldr	w0, [x0]
 598:	b	570 <grub_mod_init-0x4b8>
 59c:	adrp	x0, 0 <grub_mod_init-0xa28>
 5a0:	ldr	x0, [x0]
 5a4:	ldr	w0, [x0]
 5a8:	b	570 <grub_mod_init-0x4b8>
 5ac:	ldr	w22, [x19, #40]
 5b0:	ldr	w0, [x19, #104]
 5b4:	add	w0, w0, #0x1
 5b8:	str	w0, [x19, #104]
 5bc:	cmp	w0, #0x8
 5c0:	b.gt	624 <grub_mod_init-0x404>
 5c4:	mov	w26, w22
 5c8:	add	x0, x26, #0x1
 5cc:	bl	0 <grub_malloc>
 5d0:	mov	x21, x0
 5d4:	cbz	x0, 634 <grub_mod_init-0x3f4>
 5d8:	mov	x5, x0
 5dc:	mov	x4, x26
 5e0:	mov	x3, #0x0                   	// #0
 5e4:	mov	x2, #0x0                   	// #0
 5e8:	mov	x1, #0x0                   	// #0
 5ec:	mov	x0, x19
 5f0:	bl	50 <grub_mod_init-0x9d8>
 5f4:	tbnz	x0, #63, 634 <grub_mod_init-0x3f4>
 5f8:	strb	wzr, [x21, w22, uxtw]
 5fc:	ldrb	w0, [x21]
 600:	cmp	w0, #0x2f
 604:	csinc	w1, w20, wzr, ne  // ne = any
 608:	mov	x0, x19
 60c:	bl	35c <grub_mod_init-0x6cc>
 610:	cbnz	w0, 634 <grub_mod_init-0x3f4>
 614:	mov	x1, x21
 618:	mov	x0, x19
 61c:	bl	4a8 <grub_mod_init-0x580>
 620:	b	634 <grub_mod_init-0x3f4>
 624:	adrp	x0, 0 <grub_mod_init-0xa28>
 628:	ldr	x1, [x0]
 62c:	mov	w0, #0x19                  	// #25
 630:	bl	0 <grub_error>
 634:	adrp	x0, 0 <grub_mod_init-0xa28>
 638:	ldr	x0, [x0]
 63c:	ldr	w0, [x0]
 640:	cbz	w0, 6e8 <grub_mod_init-0x340>
 644:	b	570 <grub_mod_init-0x4b8>
 648:	ldr	w0, [x19, #40]
 64c:	cmp	w0, w20
 650:	b.ls	550 <grub_mod_init-0x4d8>  // b.plast
 654:	mov	w22, w20
 658:	add	x5, sp, #0x7c
 65c:	mov	x4, x27
 660:	mov	x3, x22
 664:	mov	x2, #0x0                   	// #0
 668:	mov	x1, #0x0                   	// #0
 66c:	mov	x0, x19
 670:	bl	50 <grub_mod_init-0x9d8>
 674:	tbnz	x0, #63, 58c <grub_mod_init-0x49c>
 678:	mov	x5, x23
 67c:	ldrsw	x4, [x19, #120]
 680:	add	x3, x22, #0x4
 684:	mov	x2, #0x0                   	// #0
 688:	mov	x1, #0x0                   	// #0
 68c:	mov	x0, x19
 690:	bl	50 <grub_mod_init-0x9d8>
 694:	tbnz	x0, #63, 59c <grub_mod_init-0x48c>
 698:	ldr	w0, [x19, #120]
 69c:	add	w1, w0, #0x4
 6a0:	add	w20, w20, w1
 6a4:	strb	wzr, [x25, w0, sxtw]
 6a8:	mov	x2, x26
 6ac:	mov	x1, x23
 6b0:	mov	x0, x21
 6b4:	bl	0 <grub_strncmp>
 6b8:	cbnz	w0, 648 <grub_mod_init-0x3e0>
 6bc:	ldrb	w0, [x25, x26]
 6c0:	cbnz	w0, 648 <grub_mod_init-0x3e0>
 6c4:	ldr	w20, [x19, #100]
 6c8:	ldr	w1, [sp, #124]
 6cc:	mov	x0, x19
 6d0:	bl	35c <grub_mod_init-0x6cc>
 6d4:	ldrh	w0, [x19, #32]
 6d8:	and	w0, w0, w28
 6dc:	and	w0, w0, #0xffff
 6e0:	cmp	w0, #0xa, lsl #12
 6e4:	b.eq	5ac <grub_mod_init-0x47c>  // b.none
 6e8:	mov	x21, x24
 6ec:	b	4e0 <grub_mod_init-0x548>
 6f0:	mov	w0, #0x0                   	// #0
 6f4:	b	570 <grub_mod_init-0x4b8>
	...
 718:	stp	x29, x30, [sp, #-48]!
 71c:	mov	x29, sp
 720:	stp	x19, x20, [sp, #16]
 724:	str	x21, [sp, #32]
 728:	mov	x21, x0
 72c:	mov	x20, x1
 730:	ldr	x0, [x0, #8]
 734:	ldr	x0, [x0]
 738:	bl	3ac <grub_mod_init-0x67c>
 73c:	cbz	x0, 79c <grub_mod_init-0x28c>
 740:	mov	x19, x0
 744:	mov	w1, #0x1                   	// #1
 748:	bl	35c <grub_mod_init-0x6cc>
 74c:	adrp	x0, 0 <grub_mod_init-0xa28>
 750:	ldr	x0, [x0]
 754:	ldr	w0, [x0]
 758:	cbnz	w0, 7ac <grub_mod_init-0x27c>
 75c:	cbz	x20, 76c <grub_mod_init-0x2bc>
 760:	ldrb	w0, [x20]
 764:	cmp	w0, #0x2f
 768:	b.eq	7c4 <grub_mod_init-0x264>  // b.none
 76c:	mov	x2, x20
 770:	adrp	x0, 0 <grub_mod_init-0xa28>
 774:	ldr	x1, [x0]
 778:	mov	w0, #0x7                   	// #7
 77c:	bl	0 <grub_error>
 780:	adrp	x0, 0 <grub_mod_init-0xa28>
 784:	ldr	x0, [x0]
 788:	ldr	w0, [x0]
 78c:	ldp	x19, x20, [sp, #16]
 790:	ldr	x21, [sp, #32]
 794:	ldp	x29, x30, [sp], #48
 798:	ret
 79c:	adrp	x0, 0 <grub_mod_init-0xa28>
 7a0:	ldr	x0, [x0]
 7a4:	ldr	w0, [x0]
 7a8:	b	78c <grub_mod_init-0x29c>
 7ac:	mov	x0, x19
 7b0:	bl	0 <grub_free>
 7b4:	adrp	x0, 0 <grub_mod_init-0xa28>
 7b8:	ldr	x0, [x0]
 7bc:	ldr	w0, [x0]
 7c0:	b	78c <grub_mod_init-0x29c>
 7c4:	mov	x1, x20
 7c8:	mov	x0, x19
 7cc:	bl	4a8 <grub_mod_init-0x580>
 7d0:	adrp	x0, 0 <grub_mod_init-0xa28>
 7d4:	ldr	x0, [x0]
 7d8:	ldr	w0, [x0]
 7dc:	cbnz	w0, 7f0 <grub_mod_init-0x238>
 7e0:	str	x19, [x21, #80]
 7e4:	ldr	w1, [x19, #40]
 7e8:	str	x1, [x21, #64]
 7ec:	b	78c <grub_mod_init-0x29c>
 7f0:	mov	x0, x19
 7f4:	bl	0 <grub_free>
 7f8:	adrp	x0, 0 <grub_mod_init-0xa28>
 7fc:	ldr	x0, [x0]
 800:	ldr	w0, [x0]
 804:	b	78c <grub_mod_init-0x29c>
	...
 818:	stp	x29, x30, [sp, #-192]!
 81c:	mov	x29, sp
 820:	stp	x19, x20, [sp, #16]
 824:	stp	x23, x24, [sp, #48]
 828:	mov	x20, x1
 82c:	mov	x23, x2
 830:	mov	x24, x3
 834:	ldr	x0, [x0]
 838:	bl	3ac <grub_mod_init-0x67c>
 83c:	cbz	x0, 880 <grub_mod_init-0x1a8>
 840:	mov	x19, x0
 844:	mov	w1, #0x1                   	// #1
 848:	bl	35c <grub_mod_init-0x6cc>
 84c:	adrp	x0, 0 <grub_mod_init-0xa28>
 850:	ldr	x0, [x0]
 854:	ldr	w0, [x0]
 858:	cbz	w0, 890 <grub_mod_init-0x198>
 85c:	mov	x0, x19
 860:	bl	0 <grub_free>
 864:	adrp	x0, 0 <grub_mod_init-0xa28>
 868:	ldr	x0, [x0]
 86c:	ldr	w0, [x0]
 870:	ldp	x19, x20, [sp, #16]
 874:	ldp	x23, x24, [sp, #48]
 878:	ldp	x29, x30, [sp], #192
 87c:	ret
 880:	adrp	x0, 0 <grub_mod_init-0xa28>
 884:	ldr	x0, [x0]
 888:	ldr	w0, [x0]
 88c:	b	870 <grub_mod_init-0x1b8>
 890:	mov	x1, x20
 894:	mov	x0, x19
 898:	bl	4a8 <grub_mod_init-0x580>
 89c:	adrp	x0, 0 <grub_mod_init-0xa28>
 8a0:	ldr	x0, [x0]
 8a4:	ldr	w20, [x0]
 8a8:	cbnz	w20, 85c <grub_mod_init-0x1cc>
 8ac:	ldrh	w0, [x19, #32]
 8b0:	tbz	w0, #14, 8d8 <grub_mod_init-0x150>
 8b4:	ldr	w0, [x19, #40]
 8b8:	cbz	w0, 85c <grub_mod_init-0x1cc>
 8bc:	stp	x21, x22, [sp, #32]
 8c0:	stp	x25, x26, [sp, #64]
 8c4:	str	x27, [sp, #80]
 8c8:	mov	x26, #0x10                  	// #16
 8cc:	mov	x25, #0x4                   	// #4
 8d0:	add	x22, sp, #0x80
 8d4:	b	984 <grub_mod_init-0xa4>
 8d8:	adrp	x0, 0 <grub_mod_init-0xa28>
 8dc:	ldr	x1, [x0]
 8e0:	mov	w0, #0x4                   	// #4
 8e4:	bl	0 <grub_error>
 8e8:	b	85c <grub_mod_init-0x1cc>
 8ec:	adrp	x0, 0 <grub_mod_init-0xa28>
 8f0:	ldr	x0, [x0]
 8f4:	ldr	w0, [x0]
 8f8:	ldp	x21, x22, [sp, #32]
 8fc:	ldp	x25, x26, [sp, #64]
 900:	ldr	x27, [sp, #80]
 904:	b	870 <grub_mod_init-0x1b8>
 908:	adrp	x0, 0 <grub_mod_init-0xa28>
 90c:	ldr	x0, [x0]
 910:	ldr	w0, [x0]
 914:	ldp	x21, x22, [sp, #32]
 918:	ldp	x25, x26, [sp, #64]
 91c:	ldr	x27, [sp, #80]
 920:	b	870 <grub_mod_init-0x1b8>
 924:	mov	x0, x19
 928:	bl	35c <grub_mod_init-0x6cc>
 92c:	ldrh	w1, [x19, #32]
 930:	ubfx	x1, x1, #14, #1
 934:	ldrb	w0, [sp, #112]
 938:	bfxil	w0, w1, #0, #1
 93c:	orr	w0, w0, #0x2
 940:	strb	w0, [sp, #112]
 944:	ldr	w0, [x19, #48]
 948:	str	w0, [sp, #116]
 94c:	mov	x2, x24
 950:	add	x1, sp, #0x70
 954:	mov	x0, x22
 958:	blr	x23
 95c:	cbnz	w0, a08 <grub_mod_init-0x20>
 960:	mov	w1, w27
 964:	mov	x0, x19
 968:	bl	35c <grub_mod_init-0x6cc>
 96c:	ldr	w0, [x19, #120]
 970:	add	w0, w0, #0x4
 974:	add	w20, w20, w0
 978:	ldr	w0, [x19, #40]
 97c:	cmp	w20, w0
 980:	b.cs	9f8 <grub_mod_init-0x30>  // b.hs, b.nlast
 984:	ldr	w27, [x19, #100]
 988:	mov	x2, x26
 98c:	mov	w1, #0x0                   	// #0
 990:	add	x0, sp, #0x70
 994:	bl	0 <grub_memset>
 998:	mov	w21, w20
 99c:	add	x5, sp, #0x6c
 9a0:	mov	x4, x25
 9a4:	mov	x3, x21
 9a8:	mov	x2, #0x0                   	// #0
 9ac:	mov	x1, #0x0                   	// #0
 9b0:	mov	x0, x19
 9b4:	bl	50 <grub_mod_init-0x9d8>
 9b8:	tbnz	x0, #63, 8ec <grub_mod_init-0x13c>
 9bc:	mov	x5, x22
 9c0:	ldrsw	x4, [x19, #120]
 9c4:	add	x3, x21, #0x4
 9c8:	mov	x2, #0x0                   	// #0
 9cc:	mov	x1, #0x0                   	// #0
 9d0:	mov	x0, x19
 9d4:	bl	50 <grub_mod_init-0x9d8>
 9d8:	tbnz	x0, #63, 908 <grub_mod_init-0x120>
 9dc:	ldr	w0, [x19, #120]
 9e0:	strb	wzr, [x22, w0, sxtw]
 9e4:	ldr	w1, [sp, #108]
 9e8:	cbnz	w1, 924 <grub_mod_init-0x104>
 9ec:	add	w0, w0, #0x4
 9f0:	add	w20, w20, w0
 9f4:	b	978 <grub_mod_init-0xb0>
 9f8:	ldp	x21, x22, [sp, #32]
 9fc:	ldp	x25, x26, [sp, #64]
 a00:	ldr	x27, [sp, #80]
 a04:	b	85c <grub_mod_init-0x1cc>
 a08:	ldp	x21, x22, [sp, #32]
 a0c:	ldp	x25, x26, [sp, #64]
 a10:	ldr	x27, [sp, #80]
 a14:	b	85c <grub_mod_init-0x1cc>
	...

0000000000000a28 <grub_mod_init>:
 a28:	stp	x29, x30, [sp, #-16]!
 a2c:	mov	x29, sp
 a30:	adrp	x0, 0 <grub_mod_init-0xa28>
 a34:	ldr	x1, [x0]
 a38:	adrp	x0, 0 <grub_mod_init-0xa28>
 a3c:	ldr	x0, [x0]
 a40:	bl	0 <grub_list_push>
 a44:	ldp	x29, x30, [sp], #16
 a48:	ret
 a4c:	nop
	...

0000000000000a60 <grub_mod_fini>:
 a60:	stp	x29, x30, [sp, #-16]!
 a64:	mov	x29, sp
 a68:	adrp	x0, 0 <grub_mod_init-0xa28>
 a6c:	ldr	x0, [x0]
 a70:	bl	0 <grub_list_remove>
 a74:	ldp	x29, x30, [sp], #16
 a78:	ret
 a7c:	nop
	...
