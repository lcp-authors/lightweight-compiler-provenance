
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002368 <.init>:
    2368:	stp	x29, x30, [sp, #-16]!
    236c:	mov	x29, sp
    2370:	bl	2670 <adler32_z@plt+0x10>
    2374:	ldp	x29, x30, [sp], #16
    2378:	ret

Disassembly of section .plt:

0000000000002380 <memcpy@plt-0x20>:
    2380:	stp	x16, x30, [sp, #-16]!
    2384:	adrp	x16, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    2388:	ldr	x17, [x16, #4088]
    238c:	add	x16, x16, #0xff8
    2390:	br	x17
    2394:	nop
    2398:	nop
    239c:	nop

00000000000023a0 <memcpy@plt>:
    23a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16]
    23a8:	add	x16, x16, #0x0
    23ac:	br	x17

00000000000023b0 <crc32_z@plt>:
    23b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #8]
    23b8:	add	x16, x16, #0x8
    23bc:	br	x17

00000000000023c0 <gzvprintf@plt>:
    23c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #16]
    23c8:	add	x16, x16, #0x10
    23cc:	br	x17

00000000000023d0 <gzseek64@plt>:
    23d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #24]
    23d8:	add	x16, x16, #0x18
    23dc:	br	x17

00000000000023e0 <strlen@plt>:
    23e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #32]
    23e8:	add	x16, x16, #0x20
    23ec:	br	x17

00000000000023f0 <inflate@plt>:
    23f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #40]
    23f8:	add	x16, x16, #0x28
    23fc:	br	x17

0000000000002400 <gzclose_r@plt>:
    2400:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #48]
    2408:	add	x16, x16, #0x30
    240c:	br	x17

0000000000002410 <gzgetc@plt>:
    2410:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #56]
    2418:	add	x16, x16, #0x38
    241c:	br	x17

0000000000002420 <__cxa_finalize@plt>:
    2420:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #64]
    2428:	add	x16, x16, #0x40
    242c:	br	x17

0000000000002430 <crc32@plt>:
    2430:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #72]
    2438:	add	x16, x16, #0x48
    243c:	br	x17

0000000000002440 <inflateResetKeep@plt>:
    2440:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #80]
    2448:	add	x16, x16, #0x50
    244c:	br	x17

0000000000002450 <snprintf@plt>:
    2450:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #88]
    2458:	add	x16, x16, #0x58
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #96]
    2468:	add	x16, x16, #0x60
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #104]
    2478:	add	x16, x16, #0x68
    247c:	br	x17

0000000000002480 <deflateReset@plt>:
    2480:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #112]
    2488:	add	x16, x16, #0x70
    248c:	br	x17

0000000000002490 <deflate@plt>:
    2490:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #120]
    2498:	add	x16, x16, #0x78
    249c:	br	x17

00000000000024a0 <memset@plt>:
    24a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #128]
    24a8:	add	x16, x16, #0x80
    24ac:	br	x17

00000000000024b0 <lseek64@plt>:
    24b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #136]
    24b8:	add	x16, x16, #0x88
    24bc:	br	x17

00000000000024c0 <gztell64@plt>:
    24c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #144]
    24c8:	add	x16, x16, #0x90
    24cc:	br	x17

00000000000024d0 <deflateInit2_@plt>:
    24d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #152]
    24d8:	add	x16, x16, #0x98
    24dc:	br	x17

00000000000024e0 <deflateParams@plt>:
    24e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #160]
    24e8:	add	x16, x16, #0xa0
    24ec:	br	x17

00000000000024f0 <deflateInit_@plt>:
    24f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #168]
    24f8:	add	x16, x16, #0xa8
    24fc:	br	x17

0000000000002500 <strerror@plt>:
    2500:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #176]
    2508:	add	x16, x16, #0xb0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #184]
    2518:	add	x16, x16, #0xb8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #192]
    2528:	add	x16, x16, #0xc0
    252c:	br	x17

0000000000002530 <write@plt>:
    2530:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #200]
    2538:	add	x16, x16, #0xc8
    253c:	br	x17

0000000000002540 <uncompress2@plt>:
    2540:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #208]
    2548:	add	x16, x16, #0xd0
    254c:	br	x17

0000000000002550 <inflateEnd@plt>:
    2550:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #216]
    2558:	add	x16, x16, #0xd8
    255c:	br	x17

0000000000002560 <adler32@plt>:
    2560:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #224]
    2568:	add	x16, x16, #0xe0
    256c:	br	x17

0000000000002570 <free@plt>:
    2570:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #232]
    2578:	add	x16, x16, #0xe8
    257c:	br	x17

0000000000002580 <gzclose_w@plt>:
    2580:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #240]
    2588:	add	x16, x16, #0xf0
    258c:	br	x17

0000000000002590 <deflateEnd@plt>:
    2590:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #248]
    2598:	add	x16, x16, #0xf8
    259c:	br	x17

00000000000025a0 <gzrewind@plt>:
    25a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #256]
    25a8:	add	x16, x16, #0x100
    25ac:	br	x17

00000000000025b0 <gzoffset64@plt>:
    25b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #264]
    25b8:	add	x16, x16, #0x108
    25bc:	br	x17

00000000000025c0 <inflateInit_@plt>:
    25c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #272]
    25c8:	add	x16, x16, #0x110
    25cc:	br	x17

00000000000025d0 <compress2@plt>:
    25d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #280]
    25d8:	add	x16, x16, #0x118
    25dc:	br	x17

00000000000025e0 <read@plt>:
    25e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #288]
    25e8:	add	x16, x16, #0x120
    25ec:	br	x17

00000000000025f0 <memchr@plt>:
    25f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #296]
    25f8:	add	x16, x16, #0x128
    25fc:	br	x17

0000000000002600 <inflateInit2_@plt>:
    2600:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #304]
    2608:	add	x16, x16, #0x130
    260c:	br	x17

0000000000002610 <inflateReset@plt>:
    2610:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #312]
    2618:	add	x16, x16, #0x138
    261c:	br	x17

0000000000002620 <vsnprintf@plt>:
    2620:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #320]
    2628:	add	x16, x16, #0x140
    262c:	br	x17

0000000000002630 <deflateResetKeep@plt>:
    2630:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #328]
    2638:	add	x16, x16, #0x148
    263c:	br	x17

0000000000002640 <inflateReset2@plt>:
    2640:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #336]
    2648:	add	x16, x16, #0x150
    264c:	br	x17

0000000000002650 <__errno_location@plt>:
    2650:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #344]
    2658:	add	x16, x16, #0x158
    265c:	br	x17

0000000000002660 <adler32_z@plt>:
    2660:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #352]
    2668:	add	x16, x16, #0x160
    266c:	br	x17

Disassembly of section .text:

0000000000002670 <adler32_z@@ZLIB_1.2.9-0xd4>:
    2670:	adrp	x0, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    2674:	ldr	x0, [x0, #4048]
    2678:	cbz	x0, 2680 <adler32_z@plt+0x20>
    267c:	b	2520 <__gmon_start__@plt>
    2680:	ret
    2684:	nop
    2688:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x147e8>
    268c:	add	x0, x0, #0x170
    2690:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x147e8>
    2694:	add	x1, x1, #0x170
    2698:	cmp	x1, x0
    269c:	b.eq	26b4 <adler32_z@plt+0x54>  // b.none
    26a0:	adrp	x1, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    26a4:	ldr	x1, [x1, #4032]
    26a8:	cbz	x1, 26b4 <adler32_z@plt+0x54>
    26ac:	mov	x16, x1
    26b0:	br	x16
    26b4:	ret
    26b8:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x147e8>
    26bc:	add	x0, x0, #0x170
    26c0:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x147e8>
    26c4:	add	x1, x1, #0x170
    26c8:	sub	x1, x1, x0
    26cc:	lsr	x2, x1, #63
    26d0:	add	x1, x2, x1, asr #3
    26d4:	cmp	xzr, x1, asr #1
    26d8:	asr	x1, x1, #1
    26dc:	b.eq	26f4 <adler32_z@plt+0x94>  // b.none
    26e0:	adrp	x2, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    26e4:	ldr	x2, [x2, #4064]
    26e8:	cbz	x2, 26f4 <adler32_z@plt+0x94>
    26ec:	mov	x16, x2
    26f0:	br	x16
    26f4:	ret
    26f8:	stp	x29, x30, [sp, #-32]!
    26fc:	mov	x29, sp
    2700:	str	x19, [sp, #16]
    2704:	adrp	x19, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x147e8>
    2708:	ldrb	w0, [x19, #368]
    270c:	cbnz	w0, 2734 <adler32_z@plt+0xd4>
    2710:	adrp	x0, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    2714:	ldr	x0, [x0, #4040]
    2718:	cbz	x0, 2728 <adler32_z@plt+0xc8>
    271c:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x147e8>
    2720:	ldr	x0, [x0, #360]
    2724:	bl	2420 <__cxa_finalize@plt>
    2728:	bl	2688 <adler32_z@plt+0x28>
    272c:	mov	w0, #0x1                   	// #1
    2730:	strb	w0, [x19, #368]
    2734:	ldr	x19, [sp, #16]
    2738:	ldp	x29, x30, [sp], #32
    273c:	ret
    2740:	b	26b8 <adler32_z@plt+0x58>

0000000000002744 <adler32_z@@ZLIB_1.2.9>:
    2744:	ubfx	x8, x0, #16, #16
    2748:	cmp	x2, #0x1
    274c:	and	x9, x0, #0xffff
    2750:	b.ne	2794 <adler32_z@@ZLIB_1.2.9+0x50>  // b.any
    2754:	ldrb	w10, [x1]
    2758:	mov	x11, #0xffffffffffff000f    	// #-65521
    275c:	mov	w12, #0xfff0                	// #65520
    2760:	mov	x13, #0xffffffffffff0000    	// #-65536
    2764:	add	x9, x9, x10
    2768:	add	x10, x9, x11
    276c:	cmp	x9, x12
    2770:	csel	x9, x10, x9, hi  // hi = pmore
    2774:	add	x8, x9, x8
    2778:	movk	x13, #0xf, lsl #16
    277c:	lsl	x10, x8, #16
    2780:	add	x11, x10, x13
    2784:	cmp	x8, x12
    2788:	csel	x8, x11, x10, hi  // hi = pmore
    278c:	orr	x0, x8, x9
    2790:	ret
    2794:	cbz	x1, 27f4 <adler32_z@@ZLIB_1.2.9+0xb0>
    2798:	cmp	x2, #0x10
    279c:	b.cs	27fc <adler32_z@@ZLIB_1.2.9+0xb8>  // b.hs, b.nlast
    27a0:	cbz	x2, 27b8 <adler32_z@@ZLIB_1.2.9+0x74>
    27a4:	ldrb	w10, [x1], #1
    27a8:	subs	x2, x2, #0x1
    27ac:	add	x9, x9, x10
    27b0:	add	x8, x9, x8
    27b4:	b.ne	27a4 <adler32_z@@ZLIB_1.2.9+0x60>  // b.any
    27b8:	mov	x12, #0xc5cd                	// #50637
    27bc:	movk	x12, #0xd2f, lsl #16
    27c0:	movk	x12, #0xe1, lsl #32
    27c4:	mov	x10, #0xffffffffffff000f    	// #-65521
    27c8:	mov	w11, #0xfff0                	// #65520
    27cc:	movk	x12, #0xf, lsl #48
    27d0:	add	x10, x9, x10
    27d4:	cmp	x9, x11
    27d8:	umulh	x11, x8, x12
    27dc:	csel	x9, x10, x9, hi  // hi = pmore
    27e0:	sub	x10, x8, x11
    27e4:	add	x10, x11, x10, lsr #1
    27e8:	lsr	x10, x10, #15
    27ec:	mov	w11, #0xfff1                	// #65521
    27f0:	b	2a74 <adler32_z@@ZLIB_1.2.9+0x330>
    27f4:	mov	w0, #0x1                   	// #1
    27f8:	ret
    27fc:	lsr	x10, x2, #4
    2800:	cmp	x10, #0x15b
    2804:	b.cc	2934 <adler32_z@@ZLIB_1.2.9+0x1f0>  // b.lo, b.ul, b.last
    2808:	mov	x12, #0xc5cd                	// #50637
    280c:	movk	x12, #0xd2f, lsl #16
    2810:	movk	x12, #0xe1, lsl #32
    2814:	mov	x10, #0xffffffffffffea50    	// #-5552
    2818:	mov	w11, #0x15b0                	// #5552
    281c:	movk	x12, #0xf, lsl #48
    2820:	mov	w13, #0xfff1                	// #65521
    2824:	add	x2, x2, x10
    2828:	mov	w14, #0xfffffea5            	// #-347
    282c:	mov	x15, x1
    2830:	ldrb	w16, [x15]
    2834:	ldrb	w17, [x15, #1]
    2838:	adds	w14, w14, #0x1
    283c:	add	x9, x9, x16
    2840:	ldrb	w16, [x15, #2]
    2844:	add	x8, x9, x8
    2848:	add	x9, x9, x17
    284c:	ldrb	w17, [x15, #3]
    2850:	add	x8, x8, x9
    2854:	add	x9, x9, x16
    2858:	ldrb	w16, [x15, #4]
    285c:	add	x8, x8, x9
    2860:	add	x9, x9, x17
    2864:	ldrb	w17, [x15, #5]
    2868:	add	x8, x8, x9
    286c:	add	x9, x9, x16
    2870:	ldrb	w16, [x15, #6]
    2874:	add	x8, x8, x9
    2878:	add	x9, x9, x17
    287c:	ldrb	w17, [x15, #7]
    2880:	add	x8, x8, x9
    2884:	add	x9, x9, x16
    2888:	ldrb	w16, [x15, #8]
    288c:	add	x8, x8, x9
    2890:	add	x9, x9, x17
    2894:	ldrb	w17, [x15, #9]
    2898:	add	x8, x8, x9
    289c:	add	x9, x9, x16
    28a0:	ldrb	w16, [x15, #10]
    28a4:	add	x8, x8, x9
    28a8:	add	x9, x9, x17
    28ac:	ldrb	w17, [x15, #11]
    28b0:	add	x8, x8, x9
    28b4:	add	x9, x9, x16
    28b8:	ldrb	w16, [x15, #12]
    28bc:	add	x8, x8, x9
    28c0:	add	x9, x9, x17
    28c4:	ldrb	w17, [x15, #13]
    28c8:	add	x8, x8, x9
    28cc:	add	x9, x9, x16
    28d0:	ldrb	w16, [x15, #14]
    28d4:	add	x8, x8, x9
    28d8:	add	x9, x9, x17
    28dc:	ldrb	w17, [x15, #15]
    28e0:	add	x8, x8, x9
    28e4:	add	x9, x9, x16
    28e8:	add	x8, x8, x9
    28ec:	add	x9, x9, x17
    28f0:	add	x8, x8, x9
    28f4:	add	x15, x15, #0x10
    28f8:	b.cc	2830 <adler32_z@@ZLIB_1.2.9+0xec>  // b.lo, b.ul, b.last
    28fc:	umulh	x14, x9, x12
    2900:	umulh	x15, x8, x12
    2904:	sub	x17, x9, x14
    2908:	sub	x18, x8, x15
    290c:	add	x14, x14, x17, lsr #1
    2910:	add	x15, x15, x18, lsr #1
    2914:	lsr	x16, x2, #4
    2918:	lsr	x14, x14, #15
    291c:	lsr	x15, x15, #15
    2920:	add	x1, x1, x11
    2924:	cmp	x16, #0x15a
    2928:	msub	x9, x14, x13, x9
    292c:	msub	x8, x15, x13, x8
    2930:	b.hi	2824 <adler32_z@@ZLIB_1.2.9+0xe0>  // b.pmore
    2934:	cbz	x2, 2a78 <adler32_z@@ZLIB_1.2.9+0x334>
    2938:	subs	x10, x2, #0x10
    293c:	b.cc	2a24 <adler32_z@@ZLIB_1.2.9+0x2e0>  // b.lo, b.ul, b.last
    2940:	and	x12, x10, #0xfffffffffffffff0
    2944:	add	x11, x12, #0x10
    2948:	mov	x13, x1
    294c:	ldrb	w14, [x13]
    2950:	ldrb	w15, [x13, #1]
    2954:	sub	x2, x2, #0x10
    2958:	cmp	x2, #0xf
    295c:	add	x9, x9, x14
    2960:	ldrb	w14, [x13, #2]
    2964:	add	x8, x9, x8
    2968:	add	x9, x9, x15
    296c:	ldrb	w15, [x13, #3]
    2970:	add	x8, x8, x9
    2974:	add	x9, x9, x14
    2978:	ldrb	w14, [x13, #4]
    297c:	add	x8, x8, x9
    2980:	add	x9, x9, x15
    2984:	ldrb	w15, [x13, #5]
    2988:	add	x8, x8, x9
    298c:	add	x9, x9, x14
    2990:	ldrb	w14, [x13, #6]
    2994:	add	x8, x8, x9
    2998:	add	x9, x9, x15
    299c:	ldrb	w15, [x13, #7]
    29a0:	add	x8, x8, x9
    29a4:	add	x9, x9, x14
    29a8:	ldrb	w14, [x13, #8]
    29ac:	add	x8, x8, x9
    29b0:	add	x9, x9, x15
    29b4:	ldrb	w15, [x13, #9]
    29b8:	add	x8, x8, x9
    29bc:	add	x9, x9, x14
    29c0:	ldrb	w14, [x13, #10]
    29c4:	add	x8, x8, x9
    29c8:	add	x9, x9, x15
    29cc:	ldrb	w15, [x13, #11]
    29d0:	add	x8, x8, x9
    29d4:	add	x9, x9, x14
    29d8:	ldrb	w14, [x13, #12]
    29dc:	add	x8, x8, x9
    29e0:	add	x9, x9, x15
    29e4:	ldrb	w15, [x13, #13]
    29e8:	add	x8, x8, x9
    29ec:	add	x9, x9, x14
    29f0:	ldrb	w14, [x13, #14]
    29f4:	add	x8, x8, x9
    29f8:	add	x9, x9, x15
    29fc:	add	x8, x8, x9
    2a00:	add	x9, x9, x14
    2a04:	ldrb	w14, [x13, #15]
    2a08:	add	x8, x8, x9
    2a0c:	add	x13, x13, #0x10
    2a10:	add	x9, x9, x14
    2a14:	add	x8, x8, x9
    2a18:	b.hi	294c <adler32_z@@ZLIB_1.2.9+0x208>  // b.pmore
    2a1c:	sub	x2, x10, x12
    2a20:	add	x1, x1, x11
    2a24:	cbz	x2, 2a3c <adler32_z@@ZLIB_1.2.9+0x2f8>
    2a28:	ldrb	w10, [x1], #1
    2a2c:	subs	x2, x2, #0x1
    2a30:	add	x9, x9, x10
    2a34:	add	x8, x9, x8
    2a38:	b.ne	2a28 <adler32_z@@ZLIB_1.2.9+0x2e4>  // b.any
    2a3c:	mov	x10, #0xc5cd                	// #50637
    2a40:	movk	x10, #0xd2f, lsl #16
    2a44:	movk	x10, #0xe1, lsl #32
    2a48:	movk	x10, #0xf, lsl #48
    2a4c:	umulh	x12, x9, x10
    2a50:	umulh	x10, x8, x10
    2a54:	sub	x13, x9, x12
    2a58:	sub	x14, x8, x10
    2a5c:	add	x12, x12, x13, lsr #1
    2a60:	mov	w11, #0xfff1                	// #65521
    2a64:	add	x10, x10, x14, lsr #1
    2a68:	lsr	x12, x12, #15
    2a6c:	lsr	x10, x10, #15
    2a70:	msub	x9, x12, x11, x9
    2a74:	msub	x8, x10, x11, x8
    2a78:	orr	x0, x9, x8, lsl #16
    2a7c:	ret

0000000000002a80 <adler32@@Base>:
    2a80:	stp	x29, x30, [sp, #-16]!
    2a84:	mov	w2, w2
    2a88:	mov	x29, sp
    2a8c:	bl	2660 <adler32_z@plt>
    2a90:	ldp	x29, x30, [sp], #16
    2a94:	ret

0000000000002a98 <adler32_combine@@ZLIB_1.2.2>:
    2a98:	stp	x29, x30, [sp, #-16]!
    2a9c:	mov	x29, sp
    2aa0:	bl	2aac <adler32_combine@@ZLIB_1.2.2+0x14>
    2aa4:	ldp	x29, x30, [sp], #16
    2aa8:	ret
    2aac:	tbnz	x2, #63, 2b7c <adler32_combine@@ZLIB_1.2.2+0xe4>
    2ab0:	mov	x8, #0xe2e7                	// #58087
    2ab4:	movk	x8, #0x8697, lsl #16
    2ab8:	movk	x8, #0x8070, lsl #32
    2abc:	movk	x8, #0x8007, lsl #48
    2ac0:	smulh	x8, x2, x8
    2ac4:	and	x10, x0, #0xffff
    2ac8:	ubfx	x12, x0, #16, #16
    2acc:	lsr	x13, x1, #16
    2ad0:	add	x8, x8, x2
    2ad4:	mov	w11, #0xfff0                	// #65520
    2ad8:	add	x14, x10, w1, uxth
    2adc:	add	x12, x12, w13, uxth
    2ae0:	lsr	x13, x8, #63
    2ae4:	lsr	x8, x8, #15
    2ae8:	add	w8, w8, w13
    2aec:	add	x13, x14, x11
    2af0:	sub	x14, x14, #0x1
    2af4:	cmp	x13, x11
    2af8:	csel	x13, x14, x13, hi  // hi = pmore
    2afc:	mov	x14, #0xc5cd                	// #50637
    2b00:	mov	w9, #0xfff1                	// #65521
    2b04:	movk	x14, #0xd2f, lsl #16
    2b08:	movk	x14, #0xe1, lsl #32
    2b0c:	msub	w8, w8, w9, w2
    2b10:	mov	x15, #0xffffffffffff000f    	// #-65521
    2b14:	movk	x14, #0xf, lsl #48
    2b18:	mul	x10, x8, x10
    2b1c:	sub	x8, x12, x8
    2b20:	add	x12, x13, x15
    2b24:	cmp	x13, x11
    2b28:	csel	x12, x12, x13, hi  // hi = pmore
    2b2c:	umulh	x13, x10, x14
    2b30:	sub	x14, x10, x13
    2b34:	add	x13, x13, x14, lsr #1
    2b38:	lsr	x13, x13, #15
    2b3c:	msub	x10, x13, x9, x10
    2b40:	mov	w14, #0xffe1                	// #65505
    2b44:	add	x8, x8, x10
    2b48:	movk	w14, #0x1, lsl #16
    2b4c:	add	x9, x8, x9
    2b50:	add	x8, x8, x15
    2b54:	cmp	x9, x14
    2b58:	mov	x13, #0xffffffffffff0000    	// #-65536
    2b5c:	csel	x8, x8, x9, hi  // hi = pmore
    2b60:	movk	x13, #0xf, lsl #16
    2b64:	lsl	x9, x8, #16
    2b68:	add	x10, x9, x13
    2b6c:	cmp	x8, x11
    2b70:	csel	x8, x10, x9, hi  // hi = pmore
    2b74:	orr	x0, x8, x12
    2b78:	ret
    2b7c:	mov	w0, #0xffffffff            	// #-1
    2b80:	ret

0000000000002b84 <adler32_combine64@@ZLIB_1.2.3.3>:
    2b84:	stp	x29, x30, [sp, #-16]!
    2b88:	mov	x29, sp
    2b8c:	bl	2aac <adler32_combine@@ZLIB_1.2.2+0x14>
    2b90:	ldp	x29, x30, [sp], #16
    2b94:	ret

0000000000002b98 <get_crc_table@@Base>:
    2b98:	adrp	x0, d000 <gzfwrite@@ZLIB_1.2.9+0x14>
    2b9c:	add	x0, x0, #0x904
    2ba0:	ret

0000000000002ba4 <crc32_z@@ZLIB_1.2.9>:
    2ba4:	cbz	x1, 2bbc <crc32_z@@ZLIB_1.2.9+0x18>
    2ba8:	stp	x29, x30, [sp, #-16]!
    2bac:	mov	x29, sp
    2bb0:	bl	2bc4 <crc32_z@@ZLIB_1.2.9+0x20>
    2bb4:	ldp	x29, x30, [sp], #16
    2bb8:	ret
    2bbc:	mov	x0, xzr
    2bc0:	ret
    2bc4:	adrp	x8, d000 <gzfwrite@@ZLIB_1.2.9+0x14>
    2bc8:	mvn	w9, w0
    2bcc:	add	x8, x8, #0x904
    2bd0:	cbz	x2, 2bf8 <crc32_z@@ZLIB_1.2.9+0x54>
    2bd4:	and	x10, x1, #0x3
    2bd8:	cbz	x10, 2bf8 <crc32_z@@ZLIB_1.2.9+0x54>
    2bdc:	ldrb	w10, [x1], #1
    2be0:	and	w11, w9, #0xff
    2be4:	subs	x2, x2, #0x1
    2be8:	eor	w10, w11, w10
    2bec:	ldr	w10, [x8, w10, uxtw #2]
    2bf0:	eor	w9, w10, w9, lsr #8
    2bf4:	b.ne	2bd4 <crc32_z@@ZLIB_1.2.9+0x30>  // b.any
    2bf8:	subs	x10, x2, #0x20
    2bfc:	b.cs	2c30 <crc32_z@@ZLIB_1.2.9+0x8c>  // b.hs, b.nlast
    2c00:	subs	x10, x2, #0x4
    2c04:	b.cs	2df8 <crc32_z@@ZLIB_1.2.9+0x254>  // b.hs, b.nlast
    2c08:	cbz	x2, 2c28 <crc32_z@@ZLIB_1.2.9+0x84>
    2c0c:	ldrb	w10, [x1], #1
    2c10:	and	w11, w9, #0xff
    2c14:	subs	x2, x2, #0x1
    2c18:	eor	w10, w11, w10
    2c1c:	ldr	w10, [x8, w10, uxtw #2]
    2c20:	eor	w9, w10, w9, lsr #8
    2c24:	b.ne	2c0c <crc32_z@@ZLIB_1.2.9+0x68>  // b.any
    2c28:	mvn	w0, w9
    2c2c:	ret
    2c30:	and	x12, x10, #0xffffffffffffffe0
    2c34:	add	x11, x12, x1
    2c38:	add	x11, x11, #0x20
    2c3c:	ldp	w16, w17, [x1]
    2c40:	add	x13, x8, #0xc00
    2c44:	add	x14, x8, #0x800
    2c48:	add	x15, x8, #0x400
    2c4c:	eor	w9, w16, w9
    2c50:	and	w16, w9, #0xff
    2c54:	ubfx	w18, w9, #8, #8
    2c58:	ubfx	w0, w9, #16, #8
    2c5c:	ldr	w16, [x13, w16, uxtw #2]
    2c60:	ldr	w18, [x14, w18, uxtw #2]
    2c64:	lsr	w9, w9, #24
    2c68:	ldr	w0, [x15, w0, uxtw #2]
    2c6c:	ldr	w9, [x8, w9, uxtw #2]
    2c70:	eor	w16, w18, w16
    2c74:	sub	x2, x2, #0x20
    2c78:	eor	w16, w16, w0
    2c7c:	eor	w9, w16, w9
    2c80:	eor	w9, w9, w17
    2c84:	and	w16, w9, #0xff
    2c88:	ubfx	w17, w9, #8, #8
    2c8c:	ldr	w16, [x13, w16, uxtw #2]
    2c90:	ldr	w17, [x14, w17, uxtw #2]
    2c94:	ubfx	w18, w9, #16, #8
    2c98:	lsr	w9, w9, #24
    2c9c:	ldr	w18, [x15, w18, uxtw #2]
    2ca0:	ldr	w9, [x8, w9, uxtw #2]
    2ca4:	eor	w16, w17, w16
    2ca8:	ldp	w17, w0, [x1, #8]
    2cac:	eor	w16, w16, w18
    2cb0:	eor	w9, w16, w9
    2cb4:	cmp	x2, #0x1f
    2cb8:	eor	w9, w9, w17
    2cbc:	and	w16, w9, #0xff
    2cc0:	ubfx	w17, w9, #8, #8
    2cc4:	ubfx	w18, w9, #16, #8
    2cc8:	ldr	w16, [x13, w16, uxtw #2]
    2ccc:	ldr	w17, [x14, w17, uxtw #2]
    2cd0:	lsr	w9, w9, #24
    2cd4:	ldr	w18, [x15, w18, uxtw #2]
    2cd8:	ldr	w9, [x8, w9, uxtw #2]
    2cdc:	eor	w16, w17, w16
    2ce0:	eor	w16, w16, w18
    2ce4:	eor	w9, w16, w9
    2ce8:	eor	w9, w9, w0
    2cec:	and	w16, w9, #0xff
    2cf0:	ubfx	w17, w9, #8, #8
    2cf4:	ldr	w16, [x13, w16, uxtw #2]
    2cf8:	ldr	w17, [x14, w17, uxtw #2]
    2cfc:	ubfx	w18, w9, #16, #8
    2d00:	lsr	w9, w9, #24
    2d04:	ldr	w18, [x15, w18, uxtw #2]
    2d08:	ldr	w9, [x8, w9, uxtw #2]
    2d0c:	eor	w16, w17, w16
    2d10:	ldp	w17, w0, [x1, #16]
    2d14:	eor	w16, w16, w18
    2d18:	eor	w9, w16, w9
    2d1c:	eor	w9, w9, w17
    2d20:	and	w16, w9, #0xff
    2d24:	ubfx	w17, w9, #8, #8
    2d28:	ubfx	w18, w9, #16, #8
    2d2c:	ldr	w16, [x13, w16, uxtw #2]
    2d30:	ldr	w17, [x14, w17, uxtw #2]
    2d34:	lsr	w9, w9, #24
    2d38:	ldr	w18, [x15, w18, uxtw #2]
    2d3c:	ldr	w9, [x8, w9, uxtw #2]
    2d40:	eor	w16, w17, w16
    2d44:	eor	w16, w16, w18
    2d48:	eor	w9, w16, w9
    2d4c:	eor	w9, w9, w0
    2d50:	and	w16, w9, #0xff
    2d54:	ubfx	w17, w9, #8, #8
    2d58:	ldr	w16, [x13, w16, uxtw #2]
    2d5c:	ldr	w17, [x14, w17, uxtw #2]
    2d60:	ubfx	w18, w9, #16, #8
    2d64:	lsr	w9, w9, #24
    2d68:	ldr	w18, [x15, w18, uxtw #2]
    2d6c:	ldr	w9, [x8, w9, uxtw #2]
    2d70:	eor	w16, w17, w16
    2d74:	ldp	w17, w0, [x1, #24]
    2d78:	eor	w16, w16, w18
    2d7c:	eor	w9, w16, w9
    2d80:	add	x1, x1, #0x20
    2d84:	eor	w9, w9, w17
    2d88:	and	w16, w9, #0xff
    2d8c:	ubfx	w17, w9, #8, #8
    2d90:	ubfx	w18, w9, #16, #8
    2d94:	ldr	w16, [x13, w16, uxtw #2]
    2d98:	ldr	w17, [x14, w17, uxtw #2]
    2d9c:	ldr	w18, [x15, w18, uxtw #2]
    2da0:	lsr	w9, w9, #24
    2da4:	ldr	w9, [x8, w9, uxtw #2]
    2da8:	eor	w16, w17, w16
    2dac:	eor	w16, w16, w18
    2db0:	eor	w9, w16, w9
    2db4:	eor	w9, w9, w0
    2db8:	and	w16, w9, #0xff
    2dbc:	ubfx	w17, w9, #8, #8
    2dc0:	ldr	w13, [x13, w16, uxtw #2]
    2dc4:	ubfx	w16, w9, #16, #8
    2dc8:	ldr	w14, [x14, w17, uxtw #2]
    2dcc:	lsr	w9, w9, #24
    2dd0:	ldr	w15, [x15, w16, uxtw #2]
    2dd4:	ldr	w9, [x8, w9, uxtw #2]
    2dd8:	eor	w13, w14, w13
    2ddc:	eor	w13, w13, w15
    2de0:	eor	w9, w13, w9
    2de4:	b.hi	2c3c <crc32_z@@ZLIB_1.2.9+0x98>  // b.pmore
    2de8:	sub	x2, x10, x12
    2dec:	mov	x1, x11
    2df0:	subs	x10, x2, #0x4
    2df4:	b.cc	2c08 <crc32_z@@ZLIB_1.2.9+0x64>  // b.lo, b.ul, b.last
    2df8:	lsr	x11, x10, #2
    2dfc:	add	x11, x11, #0x1
    2e00:	mov	x12, x1
    2e04:	ldr	w13, [x12], #4
    2e08:	sub	x2, x2, #0x4
    2e0c:	cmp	x2, #0x3
    2e10:	eor	w9, w13, w9
    2e14:	and	w13, w9, #0xff
    2e18:	ubfx	w14, w9, #8, #8
    2e1c:	add	x13, x8, w13, uxtw #2
    2e20:	add	x14, x8, w14, uxtw #2
    2e24:	ldr	w13, [x13, #3072]
    2e28:	ldr	w14, [x14, #2048]
    2e2c:	eor	w13, w14, w13
    2e30:	ubfx	w14, w9, #16, #8
    2e34:	add	x14, x8, w14, uxtw #2
    2e38:	ldr	w14, [x14, #1024]
    2e3c:	lsr	w9, w9, #24
    2e40:	ldr	w9, [x8, w9, uxtw #2]
    2e44:	eor	w13, w13, w14
    2e48:	eor	w9, w13, w9
    2e4c:	b.hi	2e04 <crc32_z@@ZLIB_1.2.9+0x260>  // b.pmore
    2e50:	add	x1, x1, x11, lsl #2
    2e54:	and	x2, x10, #0x3
    2e58:	cbnz	x2, 2c0c <crc32_z@@ZLIB_1.2.9+0x68>
    2e5c:	b	2c28 <crc32_z@@ZLIB_1.2.9+0x84>

0000000000002e60 <crc32@@Base>:
    2e60:	stp	x29, x30, [sp, #-16]!
    2e64:	mov	w2, w2
    2e68:	mov	x29, sp
    2e6c:	bl	23b0 <crc32_z@plt>
    2e70:	ldp	x29, x30, [sp], #16
    2e74:	ret

0000000000002e78 <crc32_combine@@ZLIB_1.2.2>:
    2e78:	stp	x29, x30, [sp, #-16]!
    2e7c:	mov	x29, sp
    2e80:	bl	2e8c <crc32_combine@@ZLIB_1.2.2+0x14>
    2e84:	ldp	x29, x30, [sp], #16
    2e88:	ret
    2e8c:	stp	x29, x30, [sp, #-48]!
    2e90:	stp	x28, x21, [sp, #16]
    2e94:	stp	x20, x19, [sp, #32]
    2e98:	mov	x29, sp
    2e9c:	sub	sp, sp, #0x200
    2ea0:	cmp	x2, #0x1
    2ea4:	mov	x20, x0
    2ea8:	b.lt	2f54 <crc32_combine@@ZLIB_1.2.2+0xdc>  // b.tstop
    2eac:	mov	w10, #0x8320                	// #33568
    2eb0:	movk	w10, #0xedb8, lsl #16
    2eb4:	mov	x21, x2
    2eb8:	mov	x19, x1
    2ebc:	mov	w8, #0x1                   	// #1
    2ec0:	mov	w9, #0x8                   	// #8
    2ec4:	str	x10, [sp]
    2ec8:	mov	x10, sp
    2ecc:	str	x8, [x10, x9]
    2ed0:	add	x9, x9, #0x8
    2ed4:	cmp	x9, #0x100
    2ed8:	lsl	x8, x8, #1
    2edc:	b.ne	2ecc <crc32_combine@@ZLIB_1.2.2+0x54>  // b.any
    2ee0:	add	x0, sp, #0x100
    2ee4:	mov	x1, sp
    2ee8:	bl	2f80 <crc32_combine64@@ZLIB_1.2.3.3+0x14>
    2eec:	mov	x0, sp
    2ef0:	add	x1, sp, #0x100
    2ef4:	bl	2f80 <crc32_combine64@@ZLIB_1.2.3.3+0x14>
    2ef8:	b	2f04 <crc32_combine@@ZLIB_1.2.2+0x8c>
    2efc:	asr	x21, x21, #2
    2f00:	cbz	x21, 2f50 <crc32_combine@@ZLIB_1.2.2+0xd8>
    2f04:	add	x0, sp, #0x100
    2f08:	mov	x1, sp
    2f0c:	bl	2f80 <crc32_combine64@@ZLIB_1.2.3.3+0x14>
    2f10:	tbz	w21, #0, 2f24 <crc32_combine@@ZLIB_1.2.2+0xac>
    2f14:	add	x0, sp, #0x100
    2f18:	mov	x1, x20
    2f1c:	bl	2fc8 <crc32_combine64@@ZLIB_1.2.3.3+0x5c>
    2f20:	mov	x20, x0
    2f24:	cmp	x21, #0x2
    2f28:	b.cc	2f50 <crc32_combine@@ZLIB_1.2.2+0xd8>  // b.lo, b.ul, b.last
    2f2c:	mov	x0, sp
    2f30:	add	x1, sp, #0x100
    2f34:	bl	2f80 <crc32_combine64@@ZLIB_1.2.3.3+0x14>
    2f38:	tbz	w21, #1, 2efc <crc32_combine@@ZLIB_1.2.2+0x84>
    2f3c:	mov	x0, sp
    2f40:	mov	x1, x20
    2f44:	bl	2fc8 <crc32_combine64@@ZLIB_1.2.3.3+0x5c>
    2f48:	mov	x20, x0
    2f4c:	b	2efc <crc32_combine@@ZLIB_1.2.2+0x84>
    2f50:	eor	x20, x20, x19
    2f54:	mov	x0, x20
    2f58:	add	sp, sp, #0x200
    2f5c:	ldp	x20, x19, [sp, #32]
    2f60:	ldp	x28, x21, [sp, #16]
    2f64:	ldp	x29, x30, [sp], #48
    2f68:	ret

0000000000002f6c <crc32_combine64@@ZLIB_1.2.3.3>:
    2f6c:	stp	x29, x30, [sp, #-16]!
    2f70:	mov	x29, sp
    2f74:	bl	2e8c <crc32_combine@@ZLIB_1.2.2+0x14>
    2f78:	ldp	x29, x30, [sp], #16
    2f7c:	ret
    2f80:	stp	x29, x30, [sp, #-48]!
    2f84:	str	x21, [sp, #16]
    2f88:	stp	x20, x19, [sp, #32]
    2f8c:	mov	x19, x1
    2f90:	mov	x20, x0
    2f94:	mov	x21, xzr
    2f98:	mov	x29, sp
    2f9c:	ldr	x1, [x19, x21]
    2fa0:	mov	x0, x19
    2fa4:	bl	2fc8 <crc32_combine64@@ZLIB_1.2.3.3+0x5c>
    2fa8:	str	x0, [x20, x21]
    2fac:	add	x21, x21, #0x8
    2fb0:	cmp	x21, #0x100
    2fb4:	b.ne	2f9c <crc32_combine64@@ZLIB_1.2.3.3+0x30>  // b.any
    2fb8:	ldp	x20, x19, [sp, #32]
    2fbc:	ldr	x21, [sp, #16]
    2fc0:	ldp	x29, x30, [sp], #48
    2fc4:	ret
    2fc8:	mov	x8, xzr
    2fcc:	cbnz	x1, 2fe4 <crc32_combine64@@ZLIB_1.2.3.3+0x78>
    2fd0:	mov	x0, x8
    2fd4:	ret
    2fd8:	lsr	x1, x1, #1
    2fdc:	add	x0, x0, #0x8
    2fe0:	cbz	x1, 2fd0 <crc32_combine64@@ZLIB_1.2.3.3+0x64>
    2fe4:	tbz	w1, #0, 2fd8 <crc32_combine64@@ZLIB_1.2.3.3+0x6c>
    2fe8:	ldr	x9, [x0]
    2fec:	eor	x8, x9, x8
    2ff0:	b	2fd8 <crc32_combine64@@ZLIB_1.2.3.3+0x6c>

0000000000002ff4 <deflateInit_@@Base>:
    2ff4:	stp	x29, x30, [sp, #-16]!
    2ff8:	mov	w7, w3
    2ffc:	mov	x6, x2
    3000:	mov	w2, #0x8                   	// #8
    3004:	mov	w3, #0xf                   	// #15
    3008:	mov	w4, #0x8                   	// #8
    300c:	mov	w5, wzr
    3010:	mov	x29, sp
    3014:	bl	24d0 <deflateInit2_@plt>
    3018:	ldp	x29, x30, [sp], #16
    301c:	ret

0000000000003020 <deflateInit2_@@Base>:
    3020:	stp	x29, x30, [sp, #-96]!
    3024:	str	x27, [sp, #16]
    3028:	stp	x26, x25, [sp, #32]
    302c:	stp	x24, x23, [sp, #48]
    3030:	stp	x22, x21, [sp, #64]
    3034:	stp	x20, x19, [sp, #80]
    3038:	mov	x29, sp
    303c:	cbz	x6, 30a8 <deflateInit2_@@Base+0x88>
    3040:	mov	x19, x0
    3044:	cmp	w7, #0x70
    3048:	mov	w0, #0xfffffffa            	// #-6
    304c:	b.ne	3284 <deflateInit2_@@Base+0x264>  // b.any
    3050:	ldrb	w8, [x6]
    3054:	cmp	w8, #0x31
    3058:	b.ne	3284 <deflateInit2_@@Base+0x264>  // b.any
    305c:	cbz	x19, 3124 <deflateInit2_@@Base+0x104>
    3060:	ldr	x8, [x19, #64]
    3064:	mov	w20, w5
    3068:	mov	w22, w4
    306c:	mov	w21, w2
    3070:	str	xzr, [x19, #48]
    3074:	cbz	x8, 30b0 <deflateInit2_@@Base+0x90>
    3078:	ldr	x8, [x19, #72]
    307c:	cbz	x8, 30c8 <deflateInit2_@@Base+0xa8>
    3080:	cmn	w1, #0x1
    3084:	mov	w8, #0x6                   	// #6
    3088:	csel	w24, w8, w1, eq  // eq = none
    308c:	tbnz	w3, #31, 30d8 <deflateInit2_@@Base+0xb8>
    3090:	sub	w8, w3, #0x10
    3094:	cmp	w3, #0xf
    3098:	mov	w9, #0x1                   	// #1
    309c:	csel	w8, w8, w3, gt
    30a0:	cinc	w26, w9, gt
    30a4:	b	30e0 <deflateInit2_@@Base+0xc0>
    30a8:	mov	w0, #0xfffffffa            	// #-6
    30ac:	b	3284 <deflateInit2_@@Base+0x264>
    30b0:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x175c>
    30b4:	add	x8, x8, #0x6e0
    30b8:	str	x8, [x19, #64]
    30bc:	str	xzr, [x19, #80]
    30c0:	ldr	x8, [x19, #72]
    30c4:	cbnz	x8, 3080 <deflateInit2_@@Base+0x60>
    30c8:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x175c>
    30cc:	add	x8, x8, #0x6f8
    30d0:	str	x8, [x19, #72]
    30d4:	b	3080 <deflateInit2_@@Base+0x60>
    30d8:	mov	w26, wzr
    30dc:	neg	w8, w3
    30e0:	cmp	w20, #0x4
    30e4:	mov	w0, #0xfffffffe            	// #-2
    30e8:	b.hi	3284 <deflateInit2_@@Base+0x264>  // b.pmore
    30ec:	cmp	w24, #0x9
    30f0:	b.hi	3284 <deflateInit2_@@Base+0x264>  // b.pmore
    30f4:	cmp	w21, #0x8
    30f8:	b.ne	3284 <deflateInit2_@@Base+0x264>  // b.any
    30fc:	sub	w9, w22, #0x1
    3100:	cmp	w9, #0x8
    3104:	b.hi	3284 <deflateInit2_@@Base+0x264>  // b.pmore
    3108:	and	w9, w8, #0xfffffff8
    310c:	cmp	w9, #0x8
    3110:	b.ne	3284 <deflateInit2_@@Base+0x264>  // b.any
    3114:	cmp	w8, #0x8
    3118:	b.ne	312c <deflateInit2_@@Base+0x10c>  // b.any
    311c:	cmp	w26, #0x1
    3120:	b.eq	312c <deflateInit2_@@Base+0x10c>  // b.none
    3124:	mov	w0, #0xfffffffe            	// #-2
    3128:	b	3284 <deflateInit2_@@Base+0x264>
    312c:	ldr	x9, [x19, #64]
    3130:	ldr	x0, [x19, #80]
    3134:	cmp	w8, #0x8
    3138:	mov	w10, #0x9                   	// #9
    313c:	mov	w1, #0x1                   	// #1
    3140:	mov	w2, #0x1740                	// #5952
    3144:	csel	w27, w10, w8, eq  // eq = none
    3148:	mov	w25, #0x1                   	// #1
    314c:	blr	x9
    3150:	cbz	x0, 3280 <deflateInit2_@@Base+0x260>
    3154:	mov	w8, #0x2a                  	// #42
    3158:	str	x0, [x19, #56]
    315c:	str	w8, [x0, #8]
    3160:	mov	w8, #0xaaab                	// #43691
    3164:	lsl	w1, w25, w27
    3168:	add	w10, w22, #0x9
    316c:	movk	w8, #0xaaaa, lsl #16
    3170:	add	w9, w22, #0x7
    3174:	umull	x8, w10, w8
    3178:	sub	w10, w1, #0x1
    317c:	str	w10, [x0, #88]
    3180:	lsl	w10, w25, w9
    3184:	stp	w10, w9, [x0, #132]
    3188:	sub	w9, w10, #0x1
    318c:	lsr	x8, x8, #33
    3190:	str	x19, [x0]
    3194:	str	w26, [x0, #48]
    3198:	str	xzr, [x0, #56]
    319c:	stp	w1, w27, [x0, #80]
    31a0:	stp	w9, w8, [x0, #140]
    31a4:	mov	x23, x0
    31a8:	ldr	x8, [x19, #64]
    31ac:	ldr	x0, [x19, #80]
    31b0:	mov	w2, #0x2                   	// #2
    31b4:	blr	x8
    31b8:	str	x0, [x23, #96]
    31bc:	ldr	x8, [x19, #64]
    31c0:	ldr	x0, [x19, #80]
    31c4:	ldr	w1, [x23, #80]
    31c8:	mov	w2, #0x2                   	// #2
    31cc:	blr	x8
    31d0:	str	x0, [x23, #112]
    31d4:	ldr	x8, [x19, #64]
    31d8:	ldr	x0, [x19, #80]
    31dc:	ldr	w1, [x23, #132]
    31e0:	mov	w2, #0x2                   	// #2
    31e4:	blr	x8
    31e8:	add	w8, w22, #0x6
    31ec:	lsl	w1, w25, w8
    31f0:	str	x0, [x23, #120]
    31f4:	str	xzr, [x23, #5944]
    31f8:	str	w1, [x23, #5896]
    31fc:	ldr	x8, [x19, #64]
    3200:	ldr	x0, [x19, #80]
    3204:	mov	w2, #0x4                   	// #4
    3208:	blr	x8
    320c:	ldr	w8, [x23, #5896]
    3210:	ldr	x9, [x23, #96]
    3214:	lsl	x10, x8, #2
    3218:	stp	x0, x10, [x23, #16]
    321c:	cbz	x9, 3260 <deflateInit2_@@Base+0x240>
    3220:	ldr	x9, [x23, #112]
    3224:	cbz	x9, 3260 <deflateInit2_@@Base+0x240>
    3228:	cbz	x0, 3260 <deflateInit2_@@Base+0x240>
    322c:	ldr	x9, [x23, #120]
    3230:	cbz	x9, 3260 <deflateInit2_@@Base+0x240>
    3234:	and	w9, w8, #0xfffffffe
    3238:	add	x8, x8, x8, lsl #1
    323c:	add	x9, x0, x9
    3240:	add	x8, x0, x8
    3244:	mov	x0, x19
    3248:	stp	w24, w20, [x23, #196]
    324c:	str	x9, [x23, #5904]
    3250:	str	x8, [x23, #5888]
    3254:	strb	w21, [x23, #72]
    3258:	bl	2480 <deflateReset@plt>
    325c:	b	3284 <deflateInit2_@@Base+0x264>
    3260:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    3264:	ldr	x8, [x8, #4056]
    3268:	mov	w9, #0x29a                 	// #666
    326c:	mov	x0, x19
    3270:	str	w9, [x23, #8]
    3274:	ldr	x8, [x8, #48]
    3278:	str	x8, [x19, #48]
    327c:	bl	2590 <deflateEnd@plt>
    3280:	mov	w0, #0xfffffffc            	// #-4
    3284:	ldp	x20, x19, [sp, #80]
    3288:	ldp	x22, x21, [sp, #64]
    328c:	ldp	x24, x23, [sp, #48]
    3290:	ldp	x26, x25, [sp, #32]
    3294:	ldr	x27, [sp, #16]
    3298:	ldp	x29, x30, [sp], #96
    329c:	ret

00000000000032a0 <deflateEnd@@Base>:
    32a0:	stp	x29, x30, [sp, #-32]!
    32a4:	stp	x20, x19, [sp, #16]
    32a8:	mov	x29, sp
    32ac:	mov	x19, x0
    32b0:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    32b4:	cbz	w0, 32c0 <deflateEnd@@Base+0x20>
    32b8:	mov	w0, #0xfffffffe            	// #-2
    32bc:	b	3330 <deflateEnd@@Base+0x90>
    32c0:	ldr	x8, [x19, #56]
    32c4:	ldr	x1, [x8, #16]
    32c8:	ldr	w20, [x8, #8]
    32cc:	cbz	x1, 32d8 <deflateEnd@@Base+0x38>
    32d0:	ldp	x8, x0, [x19, #72]
    32d4:	blr	x8
    32d8:	ldr	x8, [x19, #56]
    32dc:	ldr	x1, [x8, #120]
    32e0:	cbz	x1, 32ec <deflateEnd@@Base+0x4c>
    32e4:	ldp	x8, x0, [x19, #72]
    32e8:	blr	x8
    32ec:	ldr	x8, [x19, #56]
    32f0:	ldr	x1, [x8, #112]
    32f4:	cbz	x1, 3300 <deflateEnd@@Base+0x60>
    32f8:	ldp	x8, x0, [x19, #72]
    32fc:	blr	x8
    3300:	ldr	x8, [x19, #56]
    3304:	ldr	x1, [x8, #96]
    3308:	cbz	x1, 3314 <deflateEnd@@Base+0x74>
    330c:	ldp	x8, x0, [x19, #72]
    3310:	blr	x8
    3314:	ldp	x8, x0, [x19, #72]
    3318:	ldr	x1, [x19, #56]
    331c:	blr	x8
    3320:	cmp	w20, #0x71
    3324:	mov	w8, #0xfffffffd            	// #-3
    3328:	csel	w0, w8, wzr, eq  // eq = none
    332c:	str	xzr, [x19, #56]
    3330:	ldp	x20, x19, [sp, #16]
    3334:	ldp	x29, x30, [sp], #32
    3338:	ret

000000000000333c <deflateReset@@Base>:
    333c:	stp	x29, x30, [sp, #-32]!
    3340:	stp	x20, x19, [sp, #16]
    3344:	mov	x29, sp
    3348:	mov	x20, x0
    334c:	bl	2630 <deflateResetKeep@plt>
    3350:	mov	w19, w0
    3354:	cbnz	w0, 3360 <deflateReset@@Base+0x24>
    3358:	ldr	x0, [x20, #56]
    335c:	bl	38d0 <deflateResetKeep@@ZLIB_1.2.5.2+0xac>
    3360:	mov	w0, w19
    3364:	ldp	x20, x19, [sp, #16]
    3368:	ldp	x29, x30, [sp], #32
    336c:	ret

0000000000003370 <deflateSetDictionary@@Base>:
    3370:	stp	x29, x30, [sp, #-80]!
    3374:	str	x25, [sp, #16]
    3378:	stp	x24, x23, [sp, #32]
    337c:	stp	x22, x21, [sp, #48]
    3380:	stp	x20, x19, [sp, #64]
    3384:	mov	x29, sp
    3388:	mov	w22, w2
    338c:	mov	x21, x1
    3390:	mov	x19, x0
    3394:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    3398:	mov	w8, w0
    339c:	mov	w0, #0xfffffffe            	// #-2
    33a0:	cbz	x21, 33d8 <deflateSetDictionary@@Base+0x68>
    33a4:	cbnz	w8, 33d8 <deflateSetDictionary@@Base+0x68>
    33a8:	ldr	x20, [x19, #56]
    33ac:	ldr	w23, [x20, #48]
    33b0:	cmp	w23, #0x2
    33b4:	b.eq	33d4 <deflateSetDictionary@@Base+0x64>  // b.none
    33b8:	cmp	w23, #0x1
    33bc:	b.ne	33cc <deflateSetDictionary@@Base+0x5c>  // b.any
    33c0:	ldr	w8, [x20, #8]
    33c4:	cmp	w8, #0x2a
    33c8:	b.ne	33d4 <deflateSetDictionary@@Base+0x64>  // b.any
    33cc:	ldr	w8, [x20, #180]
    33d0:	cbz	w8, 33f0 <deflateSetDictionary@@Base+0x80>
    33d4:	mov	w0, #0xfffffffe            	// #-2
    33d8:	ldp	x20, x19, [sp, #64]
    33dc:	ldp	x22, x21, [sp, #48]
    33e0:	ldp	x24, x23, [sp, #32]
    33e4:	ldr	x25, [sp, #16]
    33e8:	ldp	x29, x30, [sp], #80
    33ec:	ret
    33f0:	cmp	w23, #0x1
    33f4:	b.ne	340c <deflateSetDictionary@@Base+0x9c>  // b.any
    33f8:	ldr	x0, [x19, #96]
    33fc:	mov	x1, x21
    3400:	mov	w2, w22
    3404:	bl	2560 <adler32@plt>
    3408:	str	x0, [x19, #96]
    340c:	ldr	w8, [x20, #80]
    3410:	str	wzr, [x20, #48]
    3414:	cmp	w8, w22
    3418:	b.hi	345c <deflateSetDictionary@@Base+0xec>  // b.pmore
    341c:	cbnz	w23, 344c <deflateSetDictionary@@Base+0xdc>
    3420:	ldr	w8, [x20, #132]
    3424:	ldr	x9, [x20, #120]
    3428:	mov	w1, wzr
    342c:	sub	w8, w8, #0x1
    3430:	lsl	x2, x8, #1
    3434:	strh	wzr, [x9, x2]
    3438:	ldr	x0, [x20, #120]
    343c:	bl	24a0 <memset@plt>
    3440:	str	wzr, [x20, #172]
    3444:	str	xzr, [x20, #152]
    3448:	str	wzr, [x20, #5932]
    344c:	ldr	w8, [x20, #80]
    3450:	sub	w9, w22, w8
    3454:	add	x21, x21, x9
    3458:	mov	w22, w8
    345c:	ldr	w24, [x19, #8]
    3460:	ldr	x25, [x19]
    3464:	mov	x0, x20
    3468:	str	w22, [x19, #8]
    346c:	str	x21, [x19]
    3470:	bl	35ac <deflateSetDictionary@@Base+0x23c>
    3474:	ldr	w9, [x20, #180]
    3478:	ldr	w8, [x20, #172]
    347c:	cmp	w9, #0x3
    3480:	b.cc	34fc <deflateSetDictionary@@Base+0x18c>  // b.lo, b.ul, b.last
    3484:	mov	w21, #0x2                   	// #2
    3488:	ldr	x10, [x20, #96]
    348c:	ldp	w12, w11, [x20, #140]
    3490:	ldp	x14, x13, [x20, #112]
    3494:	ldr	w15, [x20, #88]
    3498:	sub	w9, w9, #0x2
    349c:	ldr	w16, [x20, #128]
    34a0:	add	w17, w8, #0x2
    34a4:	ldrb	w17, [x10, w17, uxtw]
    34a8:	mov	w18, w8
    34ac:	lsl	w16, w16, w11
    34b0:	and	x18, x15, x18
    34b4:	eor	w16, w16, w17
    34b8:	and	x16, x16, x12
    34bc:	str	w16, [x20, #128]
    34c0:	lsl	x16, x16, #1
    34c4:	ldrh	w17, [x13, x16]
    34c8:	subs	w9, w9, #0x1
    34cc:	strh	w17, [x14, x18, lsl #1]
    34d0:	strh	w8, [x13, x16]
    34d4:	add	w8, w8, #0x1
    34d8:	b.ne	349c <deflateSetDictionary@@Base+0x12c>  // b.any
    34dc:	mov	x0, x20
    34e0:	str	w8, [x20, #172]
    34e4:	str	w21, [x20, #180]
    34e8:	bl	35ac <deflateSetDictionary@@Base+0x23c>
    34ec:	ldr	w9, [x20, #180]
    34f0:	ldr	w8, [x20, #172]
    34f4:	cmp	w9, #0x2
    34f8:	b.hi	3488 <deflateSetDictionary@@Base+0x118>  // b.pmore
    34fc:	mov	w0, wzr
    3500:	add	w8, w8, w9
    3504:	str	w9, [x20, #5932]
    3508:	mov	x9, #0x200000000           	// #8589934592
    350c:	mov	w10, #0x2                   	// #2
    3510:	str	x8, [x20, #152]
    3514:	stur	x9, [x20, #180]
    3518:	str	w10, [x20, #160]
    351c:	stp	wzr, w8, [x20, #168]
    3520:	str	x25, [x19]
    3524:	str	w24, [x19, #8]
    3528:	str	w23, [x20, #48]
    352c:	b	33d8 <deflateSetDictionary@@Base+0x68>
    3530:	cbz	x0, 3558 <deflateSetDictionary@@Base+0x1e8>
    3534:	ldr	x8, [x0, #64]
    3538:	cbz	x8, 3558 <deflateSetDictionary@@Base+0x1e8>
    353c:	ldr	x8, [x0, #72]
    3540:	cbz	x8, 3558 <deflateSetDictionary@@Base+0x1e8>
    3544:	ldr	x8, [x0, #56]
    3548:	cbz	x8, 3558 <deflateSetDictionary@@Base+0x1e8>
    354c:	ldr	x9, [x8]
    3550:	cmp	x9, x0
    3554:	b.eq	3560 <deflateSetDictionary@@Base+0x1f0>  // b.none
    3558:	mov	w0, #0x1                   	// #1
    355c:	ret
    3560:	ldr	w8, [x8, #8]
    3564:	sub	w9, w8, #0x39
    3568:	cmp	w9, #0x38
    356c:	b.hi	3598 <deflateSetDictionary@@Base+0x228>  // b.pmore
    3570:	mov	w10, #0x1                   	// #1
    3574:	lsl	x9, x10, x9
    3578:	mov	x10, #0x1001                	// #4097
    357c:	movk	x10, #0x1, lsl #16
    3580:	movk	x10, #0x4004, lsl #32
    3584:	movk	x10, #0x100, lsl #48
    3588:	tst	x9, x10
    358c:	b.eq	3598 <deflateSetDictionary@@Base+0x228>  // b.none
    3590:	mov	w0, wzr
    3594:	ret
    3598:	cmp	w8, #0x29a
    359c:	b.eq	3590 <deflateSetDictionary@@Base+0x220>  // b.none
    35a0:	cmp	w8, #0x2a
    35a4:	b.ne	3558 <deflateSetDictionary@@Base+0x1e8>  // b.any
    35a8:	b	3590 <deflateSetDictionary@@Base+0x220>
    35ac:	stp	x29, x30, [sp, #-48]!
    35b0:	stp	x22, x21, [sp, #16]
    35b4:	stp	x20, x19, [sp, #32]
    35b8:	ldr	w21, [x0, #80]
    35bc:	mov	x19, x0
    35c0:	mov	x29, sp
    35c4:	sub	w22, w21, #0x106
    35c8:	ldr	w8, [x19, #104]
    35cc:	ldr	w9, [x19, #180]
    35d0:	ldr	w10, [x19, #80]
    35d4:	ldr	w11, [x19, #172]
    35d8:	sub	w8, w8, w9
    35dc:	add	w9, w22, w10
    35e0:	cmp	w11, w9
    35e4:	sub	w20, w8, w11
    35e8:	b.cc	3624 <deflateSetDictionary@@Base+0x2b4>  // b.lo, b.ul, b.last
    35ec:	ldr	x0, [x19, #96]
    35f0:	sub	w2, w21, w20
    35f4:	add	x1, x0, x21
    35f8:	bl	23a0 <memcpy@plt>
    35fc:	ldp	w9, w8, [x19, #172]
    3600:	ldr	x10, [x19, #152]
    3604:	mov	x0, x19
    3608:	sub	w8, w8, w21
    360c:	sub	w9, w9, w21
    3610:	sub	x10, x10, x21
    3614:	stp	w9, w8, [x19, #172]
    3618:	str	x10, [x19, #152]
    361c:	bl	4724 <deflate@@Base+0xb14>
    3620:	add	w20, w20, w21
    3624:	ldr	x0, [x19]
    3628:	ldr	w8, [x0, #8]
    362c:	cbz	w8, 3708 <deflateSetDictionary@@Base+0x398>
    3630:	ldr	x8, [x19, #96]
    3634:	ldr	w9, [x19, #172]
    3638:	ldr	w10, [x19, #180]
    363c:	mov	w2, w20
    3640:	add	x8, x8, x9
    3644:	add	x1, x8, x10
    3648:	bl	6024 <deflateCopy@@Base+0xc64>
    364c:	ldr	w8, [x19, #180]
    3650:	ldr	w10, [x19, #5932]
    3654:	add	w8, w8, w0
    3658:	add	w9, w10, w8
    365c:	cmp	w9, #0x3
    3660:	str	w8, [x19, #180]
    3664:	b.cc	36f4 <deflateSetDictionary@@Base+0x384>  // b.lo, b.ul, b.last
    3668:	ldr	w11, [x19, #172]
    366c:	ldr	x9, [x19, #96]
    3670:	sub	w10, w11, w10
    3674:	ldrb	w13, [x9, w10, uxtw]
    3678:	add	w12, w10, #0x1
    367c:	str	w13, [x19, #128]
    3680:	ldrb	w14, [x9, w12, uxtw]
    3684:	ldp	w12, w11, [x19, #140]
    3688:	lsl	w13, w13, w11
    368c:	eor	w13, w13, w14
    3690:	and	w13, w13, w12
    3694:	str	w13, [x19, #128]
    3698:	ldr	w13, [x19, #5932]
    369c:	cbz	w13, 36f4 <deflateSetDictionary@@Base+0x384>
    36a0:	ldr	w14, [x19, #128]
    36a4:	add	w15, w10, #0x2
    36a8:	ldrb	w15, [x9, w15, uxtw]
    36ac:	ldp	x17, x16, [x19, #112]
    36b0:	lsl	w14, w14, w11
    36b4:	ldr	w18, [x19, #88]
    36b8:	eor	w14, w14, w15
    36bc:	and	x14, x14, x12
    36c0:	str	w14, [x19, #128]
    36c4:	lsl	x14, x14, #1
    36c8:	sub	w13, w13, #0x1
    36cc:	ldrh	w15, [x16, x14]
    36d0:	add	w0, w13, w8
    36d4:	cmp	w0, #0x2
    36d8:	mov	w0, w10
    36dc:	and	x18, x18, x0
    36e0:	strh	w15, [x17, x18, lsl #1]
    36e4:	strh	w10, [x16, x14]
    36e8:	add	w10, w10, #0x1
    36ec:	str	w13, [x19, #5932]
    36f0:	b.hi	3698 <deflateSetDictionary@@Base+0x328>  // b.pmore
    36f4:	cmp	w8, #0x105
    36f8:	b.hi	3708 <deflateSetDictionary@@Base+0x398>  // b.pmore
    36fc:	ldr	x8, [x19]
    3700:	ldr	w8, [x8, #8]
    3704:	cbnz	w8, 35c8 <deflateSetDictionary@@Base+0x258>
    3708:	ldr	x8, [x19, #5944]
    370c:	ldr	x10, [x19, #104]
    3710:	subs	x9, x10, x8
    3714:	b.ls	378c <deflateSetDictionary@@Base+0x41c>  // b.plast
    3718:	ldr	w11, [x19, #172]
    371c:	ldr	w12, [x19, #180]
    3720:	add	x21, x12, x11
    3724:	cmp	x8, x21
    3728:	b.cs	3758 <deflateSetDictionary@@Base+0x3e8>  // b.hs, b.nlast
    372c:	ldr	x9, [x19, #96]
    3730:	sub	x8, x10, x21
    3734:	cmp	x8, #0x102
    3738:	mov	w10, #0x102                 	// #258
    373c:	csel	x20, x8, x10, cc  // cc = lo, ul, last
    3740:	add	x0, x9, x21
    3744:	mov	w1, wzr
    3748:	mov	x2, x20
    374c:	bl	24a0 <memset@plt>
    3750:	add	x8, x20, x21
    3754:	b	3788 <deflateSetDictionary@@Base+0x418>
    3758:	add	x10, x21, #0x102
    375c:	subs	x10, x10, x8
    3760:	b.ls	378c <deflateSetDictionary@@Base+0x41c>  // b.plast
    3764:	ldr	x11, [x19, #96]
    3768:	cmp	x10, x9
    376c:	csel	x20, x9, x10, hi  // hi = pmore
    3770:	and	x2, x20, #0xffffffff
    3774:	add	x0, x11, x8
    3778:	mov	w1, wzr
    377c:	bl	24a0 <memset@plt>
    3780:	ldr	x8, [x19, #5944]
    3784:	add	x8, x8, x20
    3788:	str	x8, [x19, #5944]
    378c:	ldp	x20, x19, [sp, #32]
    3790:	ldp	x22, x21, [sp, #16]
    3794:	ldp	x29, x30, [sp], #48
    3798:	ret

000000000000379c <deflateGetDictionary@@ZLIB_1.2.9>:
    379c:	stp	x29, x30, [sp, #-48]!
    37a0:	str	x21, [sp, #16]
    37a4:	stp	x20, x19, [sp, #32]
    37a8:	mov	x29, sp
    37ac:	mov	x19, x2
    37b0:	mov	x20, x1
    37b4:	mov	x21, x0
    37b8:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    37bc:	cbz	w0, 37c8 <deflateGetDictionary@@ZLIB_1.2.9+0x2c>
    37c0:	mov	w0, #0xfffffffe            	// #-2
    37c4:	b	3814 <deflateGetDictionary@@ZLIB_1.2.9+0x78>
    37c8:	ldr	x8, [x21, #56]
    37cc:	ldr	w9, [x8, #172]
    37d0:	ldr	w10, [x8, #180]
    37d4:	ldr	w11, [x8, #80]
    37d8:	add	w12, w10, w9
    37dc:	cmp	w12, w11
    37e0:	csel	w21, w11, w12, hi  // hi = pmore
    37e4:	cbz	x20, 3808 <deflateGetDictionary@@ZLIB_1.2.9+0x6c>
    37e8:	cbz	w21, 3808 <deflateGetDictionary@@ZLIB_1.2.9+0x6c>
    37ec:	ldr	x8, [x8, #96]
    37f0:	mov	w2, w21
    37f4:	mov	x0, x20
    37f8:	add	x8, x8, x9
    37fc:	add	x8, x8, x10
    3800:	sub	x1, x8, x2
    3804:	bl	23a0 <memcpy@plt>
    3808:	mov	w0, wzr
    380c:	cbz	x19, 3814 <deflateGetDictionary@@ZLIB_1.2.9+0x78>
    3810:	str	w21, [x19]
    3814:	ldp	x20, x19, [sp, #32]
    3818:	ldr	x21, [sp, #16]
    381c:	ldp	x29, x30, [sp], #48
    3820:	ret

0000000000003824 <deflateResetKeep@@ZLIB_1.2.5.2>:
    3824:	stp	x29, x30, [sp, #-32]!
    3828:	stp	x20, x19, [sp, #16]
    382c:	mov	x29, sp
    3830:	mov	x19, x0
    3834:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    3838:	cbz	w0, 3844 <deflateResetKeep@@ZLIB_1.2.5.2+0x20>
    383c:	mov	w0, #0xfffffffe            	// #-2
    3840:	b	38c4 <deflateResetKeep@@ZLIB_1.2.5.2+0xa0>
    3844:	ldr	x20, [x19, #56]
    3848:	mov	w8, #0x2                   	// #2
    384c:	str	xzr, [x19, #16]
    3850:	stp	xzr, xzr, [x19, #40]
    3854:	str	w8, [x19, #88]
    3858:	ldr	x9, [x20, #16]
    385c:	ldr	w8, [x20, #48]
    3860:	stp	x9, xzr, [x20, #32]
    3864:	tbz	w8, #31, 3870 <deflateResetKeep@@ZLIB_1.2.5.2+0x4c>
    3868:	neg	w8, w8
    386c:	str	w8, [x20, #48]
    3870:	ldr	w8, [x20, #48]
    3874:	mov	w9, #0x2a                  	// #42
    3878:	mov	w10, #0x71                  	// #113
    387c:	mov	x0, xzr
    3880:	cmp	w8, #0x0
    3884:	csel	w9, w10, w9, eq  // eq = none
    3888:	cmp	w8, #0x2
    388c:	mov	w8, #0x39                  	// #57
    3890:	csel	w8, w8, w9, eq  // eq = none
    3894:	mov	x1, xzr
    3898:	mov	w2, wzr
    389c:	str	w8, [x20, #8]
    38a0:	b.ne	38ac <deflateResetKeep@@ZLIB_1.2.5.2+0x88>  // b.any
    38a4:	bl	2430 <crc32@plt>
    38a8:	b	38b0 <deflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    38ac:	bl	2560 <adler32@plt>
    38b0:	str	x0, [x19, #96]
    38b4:	mov	x0, x20
    38b8:	str	wzr, [x20, #76]
    38bc:	bl	9d1c <inflateCodesUsed@@ZLIB_1.2.9+0x478>
    38c0:	mov	w0, wzr
    38c4:	ldp	x20, x19, [sp, #16]
    38c8:	ldp	x29, x30, [sp], #32
    38cc:	ret
    38d0:	stp	x29, x30, [sp, #-32]!
    38d4:	ldr	w9, [x0, #132]
    38d8:	ldr	w8, [x0, #80]
    38dc:	ldr	x10, [x0, #120]
    38e0:	str	x19, [sp, #16]
    38e4:	sub	w9, w9, #0x1
    38e8:	lsl	x8, x8, #1
    38ec:	lsl	x2, x9, #1
    38f0:	str	x8, [x0, #104]
    38f4:	strh	wzr, [x10, x2]
    38f8:	mov	x19, x0
    38fc:	ldr	x0, [x0, #120]
    3900:	mov	w1, wzr
    3904:	mov	x29, sp
    3908:	bl	24a0 <memset@plt>
    390c:	ldrsw	x8, [x19, #196]
    3910:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    3914:	add	x9, x9, #0xc68
    3918:	mov	x10, #0x200000000           	// #8589934592
    391c:	add	x8, x9, x8, lsl #4
    3920:	stur	x10, [x19, #180]
    3924:	ldrh	w9, [x8]
    3928:	ldrh	w10, [x8, #4]
    392c:	mov	w11, #0x2                   	// #2
    3930:	str	w11, [x19, #160]
    3934:	str	xzr, [x19, #152]
    3938:	stp	w9, w10, [x19, #204]
    393c:	ldrh	w9, [x8, #2]
    3940:	ldrh	w8, [x8, #6]
    3944:	str	wzr, [x19, #5932]
    3948:	str	xzr, [x19, #168]
    394c:	str	wzr, [x19, #128]
    3950:	stp	w8, w9, [x19, #188]
    3954:	ldr	x19, [sp, #16]
    3958:	ldp	x29, x30, [sp], #32
    395c:	ret

0000000000003960 <deflateSetHeader@@ZLIB_1.2.2>:
    3960:	stp	x29, x30, [sp, #-32]!
    3964:	stp	x20, x19, [sp, #16]
    3968:	mov	x29, sp
    396c:	mov	x19, x1
    3970:	mov	x20, x0
    3974:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    3978:	cbnz	w0, 3998 <deflateSetHeader@@ZLIB_1.2.2+0x38>
    397c:	ldr	x8, [x20, #56]
    3980:	ldr	w9, [x8, #48]
    3984:	cmp	w9, #0x2
    3988:	b.ne	3998 <deflateSetHeader@@ZLIB_1.2.2+0x38>  // b.any
    398c:	mov	w0, wzr
    3990:	str	x19, [x8, #56]
    3994:	b	399c <deflateSetHeader@@ZLIB_1.2.2+0x3c>
    3998:	mov	w0, #0xfffffffe            	// #-2
    399c:	ldp	x20, x19, [sp, #16]
    39a0:	ldp	x29, x30, [sp], #32
    39a4:	ret

00000000000039a8 <deflatePending@@ZLIB_1.2.5.1>:
    39a8:	stp	x29, x30, [sp, #-48]!
    39ac:	str	x21, [sp, #16]
    39b0:	stp	x20, x19, [sp, #32]
    39b4:	mov	x29, sp
    39b8:	mov	x19, x2
    39bc:	mov	x21, x1
    39c0:	mov	x20, x0
    39c4:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    39c8:	cbz	w0, 39d4 <deflatePending@@ZLIB_1.2.5.1+0x2c>
    39cc:	mov	w0, #0xfffffffe            	// #-2
    39d0:	b	39f8 <deflatePending@@ZLIB_1.2.5.1+0x50>
    39d4:	cbz	x21, 39e4 <deflatePending@@ZLIB_1.2.5.1+0x3c>
    39d8:	ldr	x8, [x20, #56]
    39dc:	ldr	x8, [x8, #40]
    39e0:	str	w8, [x21]
    39e4:	mov	w0, wzr
    39e8:	cbz	x19, 39f8 <deflatePending@@ZLIB_1.2.5.1+0x50>
    39ec:	ldr	x8, [x20, #56]
    39f0:	ldr	w8, [x8, #5940]
    39f4:	str	w8, [x19]
    39f8:	ldp	x20, x19, [sp, #32]
    39fc:	ldr	x21, [sp, #16]
    3a00:	ldp	x29, x30, [sp], #48
    3a04:	ret

0000000000003a08 <deflatePrime@@ZLIB_1.2.0.8>:
    3a08:	stp	x29, x30, [sp, #-64]!
    3a0c:	stp	x24, x23, [sp, #16]
    3a10:	stp	x22, x21, [sp, #32]
    3a14:	stp	x20, x19, [sp, #48]
    3a18:	mov	x29, sp
    3a1c:	mov	w19, w2
    3a20:	mov	w20, w1
    3a24:	mov	x21, x0
    3a28:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    3a2c:	cbz	w0, 3a38 <deflatePrime@@ZLIB_1.2.0.8+0x30>
    3a30:	mov	w0, #0xfffffffe            	// #-2
    3a34:	b	3aa8 <deflatePrime@@ZLIB_1.2.0.8+0xa0>
    3a38:	ldr	x21, [x21, #56]
    3a3c:	ldr	x8, [x21, #32]
    3a40:	ldr	x9, [x21, #5904]
    3a44:	add	x8, x8, #0x2
    3a48:	cmp	x9, x8
    3a4c:	b.cs	3a58 <deflatePrime@@ZLIB_1.2.0.8+0x50>  // b.hs, b.nlast
    3a50:	mov	w0, #0xfffffffb            	// #-5
    3a54:	b	3aa8 <deflatePrime@@ZLIB_1.2.0.8+0xa0>
    3a58:	mov	w22, #0x10                  	// #16
    3a5c:	mov	w23, #0xffffffff            	// #-1
    3a60:	ldr	w8, [x21, #5940]
    3a64:	ldrh	w9, [x21, #5936]
    3a68:	mov	x0, x21
    3a6c:	sub	w10, w22, w8
    3a70:	cmp	w10, w20
    3a74:	csel	w24, w20, w10, gt
    3a78:	lsl	w10, w23, w24
    3a7c:	bic	w10, w19, w10
    3a80:	add	w11, w24, w8
    3a84:	lsl	w8, w10, w8
    3a88:	orr	w8, w9, w8
    3a8c:	strh	w8, [x21, #5936]
    3a90:	str	w11, [x21, #5940]
    3a94:	bl	9f74 <inflateCodesUsed@@ZLIB_1.2.9+0x6d0>
    3a98:	subs	w20, w20, w24
    3a9c:	asr	w19, w19, w24
    3aa0:	b.ne	3a60 <deflatePrime@@ZLIB_1.2.0.8+0x58>  // b.any
    3aa4:	mov	w0, wzr
    3aa8:	ldp	x20, x19, [sp, #48]
    3aac:	ldp	x22, x21, [sp, #32]
    3ab0:	ldp	x24, x23, [sp, #16]
    3ab4:	ldp	x29, x30, [sp], #64
    3ab8:	ret

0000000000003abc <deflateParams@@Base>:
    3abc:	stp	x29, x30, [sp, #-48]!
    3ac0:	stp	x22, x21, [sp, #16]
    3ac4:	stp	x20, x19, [sp, #32]
    3ac8:	mov	x29, sp
    3acc:	mov	w19, w2
    3ad0:	mov	w20, w1
    3ad4:	mov	x21, x0
    3ad8:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    3adc:	cbz	w0, 3af4 <deflateParams@@Base+0x38>
    3ae0:	mov	w0, #0xfffffffe            	// #-2
    3ae4:	ldp	x20, x19, [sp, #32]
    3ae8:	ldp	x22, x21, [sp, #16]
    3aec:	ldp	x29, x30, [sp], #48
    3af0:	ret
    3af4:	cmn	w20, #0x1
    3af8:	mov	w8, #0x6                   	// #6
    3afc:	csel	w22, w8, w20, eq  // eq = none
    3b00:	cmp	w19, #0x4
    3b04:	mov	w0, #0xfffffffe            	// #-2
    3b08:	b.hi	3ae4 <deflateParams@@Base+0x28>  // b.pmore
    3b0c:	cmp	w22, #0x9
    3b10:	b.hi	3ae4 <deflateParams@@Base+0x28>  // b.pmore
    3b14:	ldr	x20, [x21, #56]
    3b18:	ldr	w8, [x20, #200]
    3b1c:	cmp	w8, w19
    3b20:	b.ne	3b48 <deflateParams@@Base+0x8c>  // b.any
    3b24:	ldrsw	x8, [x20, #196]
    3b28:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    3b2c:	add	x9, x9, #0xc68
    3b30:	add	x10, x9, w22, sxtw #4
    3b34:	add	x8, x9, x8, lsl #4
    3b38:	ldr	x8, [x8, #8]
    3b3c:	ldr	x9, [x10, #8]
    3b40:	cmp	x8, x9
    3b44:	b.eq	3b84 <deflateParams@@Base+0xc8>  // b.none
    3b48:	ldr	x8, [x20, #5944]
    3b4c:	cbz	x8, 3b84 <deflateParams@@Base+0xc8>
    3b50:	mov	w1, #0x5                   	// #5
    3b54:	mov	x0, x21
    3b58:	bl	2490 <deflate@plt>
    3b5c:	cmn	w0, #0x2
    3b60:	b.ne	3b70 <deflateParams@@Base+0xb4>  // b.any
    3b64:	mov	w8, wzr
    3b68:	cbz	w8, 3ae4 <deflateParams@@Base+0x28>
    3b6c:	b	3b84 <deflateParams@@Base+0xc8>
    3b70:	ldr	w8, [x21, #32]
    3b74:	mov	w0, #0xfffffffb            	// #-5
    3b78:	cmp	w8, #0x0
    3b7c:	cset	w8, ne  // ne = any
    3b80:	cbz	w8, 3ae4 <deflateParams@@Base+0x28>
    3b84:	ldr	w8, [x20, #196]
    3b88:	cmp	w8, w22
    3b8c:	b.eq	3c04 <deflateParams@@Base+0x148>  // b.none
    3b90:	cbnz	w8, 3bdc <deflateParams@@Base+0x120>
    3b94:	ldr	w8, [x20, #5928]
    3b98:	cbz	w8, 3bdc <deflateParams@@Base+0x120>
    3b9c:	cmp	w8, #0x1
    3ba0:	b.ne	3bb0 <deflateParams@@Base+0xf4>  // b.any
    3ba4:	mov	x0, x20
    3ba8:	bl	4724 <deflate@@Base+0xb14>
    3bac:	b	3bc0 <deflateParams@@Base+0x104>
    3bb0:	ldr	w8, [x20, #132]
    3bb4:	ldr	x9, [x20, #120]
    3bb8:	sub	w8, w8, #0x1
    3bbc:	strh	wzr, [x9, w8, uxtw #1]
    3bc0:	ldr	w8, [x20, #132]
    3bc4:	ldr	x0, [x20, #120]
    3bc8:	mov	w1, wzr
    3bcc:	sub	w8, w8, #0x1
    3bd0:	lsl	x2, x8, #1
    3bd4:	bl	24a0 <memset@plt>
    3bd8:	str	wzr, [x20, #5928]
    3bdc:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    3be0:	add	x8, x8, #0xc68
    3be4:	add	x8, x8, w22, sxtw #4
    3be8:	ldrh	w9, [x8]
    3bec:	ldrh	w10, [x8, #4]
    3bf0:	ldrh	w11, [x8, #2]
    3bf4:	ldrh	w8, [x8, #6]
    3bf8:	str	w22, [x20, #196]
    3bfc:	stp	w9, w10, [x20, #204]
    3c00:	stp	w8, w11, [x20, #188]
    3c04:	mov	w0, wzr
    3c08:	str	w19, [x20, #200]
    3c0c:	b	3ae4 <deflateParams@@Base+0x28>

0000000000003c10 <deflate@@Base>:
    3c10:	stp	x29, x30, [sp, #-80]!
    3c14:	stp	x26, x25, [sp, #16]
    3c18:	stp	x24, x23, [sp, #32]
    3c1c:	stp	x22, x21, [sp, #48]
    3c20:	stp	x20, x19, [sp, #64]
    3c24:	mov	x29, sp
    3c28:	mov	w21, w1
    3c2c:	mov	x19, x0
    3c30:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    3c34:	mov	w8, w0
    3c38:	cmp	w21, #0x5
    3c3c:	mov	w0, #0xfffffffe            	// #-2
    3c40:	b.hi	3c8c <deflate@@Base+0x7c>  // b.pmore
    3c44:	cbnz	w8, 3c8c <deflate@@Base+0x7c>
    3c48:	ldr	x8, [x19, #24]
    3c4c:	cbz	x8, 3c78 <deflate@@Base+0x68>
    3c50:	ldr	w8, [x19, #8]
    3c54:	ldr	x20, [x19, #56]
    3c58:	cbz	w8, 3c64 <deflate@@Base+0x54>
    3c5c:	ldr	x9, [x19]
    3c60:	cbz	x9, 3c78 <deflate@@Base+0x68>
    3c64:	cmp	w21, #0x4
    3c68:	b.eq	3ca4 <deflate@@Base+0x94>  // b.none
    3c6c:	ldr	w9, [x20, #8]
    3c70:	cmp	w9, #0x29a
    3c74:	b.ne	3ca4 <deflate@@Base+0x94>  // b.any
    3c78:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    3c7c:	ldr	x8, [x8, #4056]
    3c80:	mov	w0, #0xfffffffe            	// #-2
    3c84:	ldr	x8, [x8, #32]
    3c88:	str	x8, [x19, #48]
    3c8c:	ldp	x20, x19, [sp, #64]
    3c90:	ldp	x22, x21, [sp, #48]
    3c94:	ldp	x24, x23, [sp, #32]
    3c98:	ldp	x26, x25, [sp, #16]
    3c9c:	ldp	x29, x30, [sp], #80
    3ca0:	ret
    3ca4:	ldr	w9, [x19, #32]
    3ca8:	cbz	w9, 3f4c <deflate@@Base+0x33c>
    3cac:	ldr	x10, [x20, #40]
    3cb0:	ldr	w9, [x20, #76]
    3cb4:	str	w21, [x20, #76]
    3cb8:	cbz	x10, 3cd0 <deflate@@Base+0xc0>
    3cbc:	mov	x0, x19
    3cc0:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    3cc4:	ldr	w8, [x19, #32]
    3cc8:	cbnz	w8, 3cd4 <deflate@@Base+0xc4>
    3ccc:	b	45d8 <deflate@@Base+0x9c8>
    3cd0:	cbz	w8, 3f18 <deflate@@Base+0x308>
    3cd4:	ldr	w8, [x20, #8]
    3cd8:	cmp	w8, #0x2a
    3cdc:	b.eq	3cf8 <deflate@@Base+0xe8>  // b.none
    3ce0:	cmp	w8, #0x29a
    3ce4:	b.ne	3db8 <deflate@@Base+0x1a8>  // b.any
    3ce8:	ldr	w9, [x19, #8]
    3cec:	cbnz	w9, 3f4c <deflate@@Base+0x33c>
    3cf0:	cmp	w8, #0x2a
    3cf4:	b.ne	3db8 <deflate@@Base+0x1a8>  // b.any
    3cf8:	ldr	w8, [x20, #200]
    3cfc:	ldr	w9, [x20, #84]
    3d00:	mov	w10, #0xffff8800            	// #-30720
    3d04:	cmp	w8, #0x1
    3d08:	add	w8, w10, w9, lsl #12
    3d0c:	b.gt	3d1c <deflate@@Base+0x10c>
    3d10:	ldr	w9, [x20, #196]
    3d14:	cmp	w9, #0x2
    3d18:	b.ge	3fd8 <deflate@@Base+0x3c8>  // b.tcont
    3d1c:	mov	w9, wzr
    3d20:	ldr	w10, [x20, #172]
    3d24:	orr	w8, w9, w8
    3d28:	orr	w9, w8, #0x20
    3d2c:	mov	x0, x20
    3d30:	cmp	w10, #0x0
    3d34:	csel	w8, w8, w9, eq  // eq = none
    3d38:	mov	w9, #0x1085                	// #4229
    3d3c:	movk	w9, #0x842, lsl #16
    3d40:	umull	x9, w8, w9
    3d44:	lsr	x9, x9, #32
    3d48:	sub	w10, w8, w9
    3d4c:	add	w9, w9, w10, lsr #1
    3d50:	lsr	w9, w9, #4
    3d54:	sub	w9, w9, w9, lsl #5
    3d58:	add	w9, w8, w9
    3d5c:	orr	w8, w9, w8
    3d60:	eor	w1, w8, #0x1f
    3d64:	bl	49a4 <deflateBound@@ZLIB_1.2.0+0x1d0>
    3d68:	ldr	w8, [x20, #172]
    3d6c:	cbz	w8, 3d8c <deflate@@Base+0x17c>
    3d70:	ldr	x8, [x19, #96]
    3d74:	mov	x0, x20
    3d78:	lsr	x1, x8, #16
    3d7c:	bl	49a4 <deflateBound@@ZLIB_1.2.0+0x1d0>
    3d80:	ldrh	w1, [x19, #96]
    3d84:	mov	x0, x20
    3d88:	bl	49a4 <deflateBound@@ZLIB_1.2.0+0x1d0>
    3d8c:	mov	x0, xzr
    3d90:	mov	x1, xzr
    3d94:	mov	w2, wzr
    3d98:	bl	2560 <adler32@plt>
    3d9c:	str	x0, [x19, #96]
    3da0:	mov	w8, #0x71                  	// #113
    3da4:	mov	x0, x19
    3da8:	str	w8, [x20, #8]
    3dac:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    3db0:	ldr	x8, [x20, #40]
    3db4:	cbnz	x8, 45d8 <deflate@@Base+0x9c8>
    3db8:	ldr	w8, [x20, #8]
    3dbc:	cmp	w8, #0x39
    3dc0:	b.ne	409c <deflate@@Base+0x48c>  // b.any
    3dc4:	mov	x0, xzr
    3dc8:	mov	x1, xzr
    3dcc:	mov	w2, wzr
    3dd0:	bl	2430 <crc32@plt>
    3dd4:	str	x0, [x19, #96]
    3dd8:	ldr	x8, [x20, #40]
    3ddc:	ldr	x9, [x20, #16]
    3de0:	add	x10, x8, #0x1
    3de4:	str	x10, [x20, #40]
    3de8:	mov	w10, #0x1f                  	// #31
    3dec:	strb	w10, [x9, x8]
    3df0:	ldr	x8, [x20, #40]
    3df4:	ldr	x9, [x20, #16]
    3df8:	add	x10, x8, #0x1
    3dfc:	str	x10, [x20, #40]
    3e00:	mov	w10, #0x8b                  	// #139
    3e04:	strb	w10, [x9, x8]
    3e08:	ldr	x8, [x20, #40]
    3e0c:	ldr	x9, [x20, #16]
    3e10:	add	x10, x8, #0x1
    3e14:	str	x10, [x20, #40]
    3e18:	mov	w10, #0x8                   	// #8
    3e1c:	strb	w10, [x9, x8]
    3e20:	ldr	x8, [x20, #56]
    3e24:	cbz	x8, 3f60 <deflate@@Base+0x350>
    3e28:	ldr	w9, [x8]
    3e2c:	ldr	w10, [x8, #68]
    3e30:	ldr	x13, [x20, #40]
    3e34:	ldr	x11, [x8, #24]
    3e38:	ldr	x12, [x8, #40]
    3e3c:	ldr	x8, [x8, #56]
    3e40:	cmp	w9, #0x0
    3e44:	cset	w9, ne  // ne = any
    3e48:	cmp	w10, #0x0
    3e4c:	add	x10, x13, #0x1
    3e50:	str	x10, [x20, #40]
    3e54:	cset	w10, ne  // ne = any
    3e58:	cmp	x11, #0x0
    3e5c:	bfi	w9, w10, #1, #1
    3e60:	cset	w10, ne  // ne = any
    3e64:	cmp	x12, #0x0
    3e68:	bfi	w9, w10, #2, #1
    3e6c:	cset	w10, ne  // ne = any
    3e70:	cmp	x8, #0x0
    3e74:	ldr	x8, [x20, #16]
    3e78:	bfi	w9, w10, #3, #1
    3e7c:	cset	w10, ne  // ne = any
    3e80:	bfi	w9, w10, #4, #1
    3e84:	strb	w9, [x8, x13]
    3e88:	ldr	x8, [x20, #56]
    3e8c:	ldr	x9, [x20, #40]
    3e90:	ldr	x10, [x20, #16]
    3e94:	ldr	x8, [x8, #8]
    3e98:	add	x11, x9, #0x1
    3e9c:	str	x11, [x20, #40]
    3ea0:	strb	w8, [x10, x9]
    3ea4:	ldr	x8, [x20, #56]
    3ea8:	ldr	x9, [x20, #40]
    3eac:	ldr	x10, [x20, #16]
    3eb0:	ldr	x8, [x8, #8]
    3eb4:	add	x11, x9, #0x1
    3eb8:	str	x11, [x20, #40]
    3ebc:	lsr	x8, x8, #8
    3ec0:	strb	w8, [x10, x9]
    3ec4:	ldr	x8, [x20, #56]
    3ec8:	ldr	x9, [x20, #40]
    3ecc:	ldr	x10, [x20, #16]
    3ed0:	ldr	x8, [x8, #8]
    3ed4:	add	x11, x9, #0x1
    3ed8:	str	x11, [x20, #40]
    3edc:	lsr	x8, x8, #16
    3ee0:	strb	w8, [x10, x9]
    3ee4:	ldr	x8, [x20, #56]
    3ee8:	ldr	x9, [x20, #40]
    3eec:	ldr	x10, [x20, #16]
    3ef0:	ldr	x8, [x8, #8]
    3ef4:	add	x11, x9, #0x1
    3ef8:	str	x11, [x20, #40]
    3efc:	lsr	x8, x8, #24
    3f00:	strb	w8, [x10, x9]
    3f04:	ldr	w8, [x20, #196]
    3f08:	cmp	w8, #0x9
    3f0c:	b.ne	3fe8 <deflate@@Base+0x3d8>  // b.any
    3f10:	mov	w8, #0x2                   	// #2
    3f14:	b	3ffc <deflate@@Base+0x3ec>
    3f18:	cmp	w21, #0x4
    3f1c:	mov	w10, #0x9                   	// #9
    3f20:	csel	w8, w10, wzr, gt
    3f24:	cmp	w9, #0x4
    3f28:	csel	w10, w10, wzr, gt
    3f2c:	cmp	w21, #0x4
    3f30:	b.eq	3cd4 <deflate@@Base+0xc4>  // b.none
    3f34:	lsl	w11, w21, #1
    3f38:	lsl	w9, w9, #1
    3f3c:	sub	w8, w11, w8
    3f40:	sub	w9, w9, w10
    3f44:	cmp	w8, w9
    3f48:	b.gt	3cd4 <deflate@@Base+0xc4>
    3f4c:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    3f50:	ldr	x8, [x8, #4056]
    3f54:	mov	w0, #0xfffffffb            	// #-5
    3f58:	ldr	x8, [x8, #56]
    3f5c:	b	3c88 <deflate@@Base+0x78>
    3f60:	ldr	x8, [x20, #40]
    3f64:	ldr	x9, [x20, #16]
    3f68:	add	x10, x8, #0x1
    3f6c:	str	x10, [x20, #40]
    3f70:	strb	wzr, [x9, x8]
    3f74:	ldr	x8, [x20, #40]
    3f78:	ldr	x9, [x20, #16]
    3f7c:	add	x10, x8, #0x1
    3f80:	str	x10, [x20, #40]
    3f84:	strb	wzr, [x9, x8]
    3f88:	ldr	x8, [x20, #40]
    3f8c:	ldr	x9, [x20, #16]
    3f90:	add	x10, x8, #0x1
    3f94:	str	x10, [x20, #40]
    3f98:	strb	wzr, [x9, x8]
    3f9c:	ldr	x8, [x20, #40]
    3fa0:	ldr	x9, [x20, #16]
    3fa4:	add	x10, x8, #0x1
    3fa8:	str	x10, [x20, #40]
    3fac:	strb	wzr, [x9, x8]
    3fb0:	ldr	x8, [x20, #40]
    3fb4:	ldr	x9, [x20, #16]
    3fb8:	add	x10, x8, #0x1
    3fbc:	str	x10, [x20, #40]
    3fc0:	strb	wzr, [x9, x8]
    3fc4:	ldr	w8, [x20, #196]
    3fc8:	cmp	w8, #0x9
    3fcc:	b.ne	4474 <deflate@@Base+0x864>  // b.any
    3fd0:	mov	w8, #0x2                   	// #2
    3fd4:	b	4488 <deflate@@Base+0x878>
    3fd8:	cmp	w9, #0x6
    3fdc:	b.ge	44d0 <deflate@@Base+0x8c0>  // b.tcont
    3fe0:	mov	w9, #0x40                  	// #64
    3fe4:	b	3d20 <deflate@@Base+0x110>
    3fe8:	ldr	w9, [x20, #200]
    3fec:	cmp	w9, #0x1
    3ff0:	ccmp	w8, #0x2, #0x8, le
    3ff4:	mov	w8, #0x4                   	// #4
    3ff8:	csel	w8, w8, wzr, lt  // lt = tstop
    3ffc:	ldr	x9, [x20, #40]
    4000:	ldr	x10, [x20, #16]
    4004:	add	x11, x9, #0x1
    4008:	str	x11, [x20, #40]
    400c:	strb	w8, [x10, x9]
    4010:	ldr	x8, [x20, #56]
    4014:	ldr	x9, [x20, #40]
    4018:	ldr	x10, [x20, #16]
    401c:	ldr	w8, [x8, #20]
    4020:	add	x11, x9, #0x1
    4024:	str	x11, [x20, #40]
    4028:	strb	w8, [x10, x9]
    402c:	ldr	x8, [x20, #56]
    4030:	ldr	x9, [x8, #24]
    4034:	cbz	x9, 4070 <deflate@@Base+0x460>
    4038:	ldr	x9, [x20, #40]
    403c:	ldr	w8, [x8, #32]
    4040:	ldr	x10, [x20, #16]
    4044:	add	x11, x9, #0x1
    4048:	str	x11, [x20, #40]
    404c:	strb	w8, [x10, x9]
    4050:	ldr	x8, [x20, #56]
    4054:	ldr	x9, [x20, #40]
    4058:	ldr	x10, [x20, #16]
    405c:	ldr	w8, [x8, #32]
    4060:	add	x11, x9, #0x1
    4064:	str	x11, [x20, #40]
    4068:	lsr	w8, w8, #8
    406c:	strb	w8, [x10, x9]
    4070:	ldr	x8, [x20, #56]
    4074:	ldr	w8, [x8, #68]
    4078:	cbz	w8, 4090 <deflate@@Base+0x480>
    407c:	ldr	x0, [x19, #96]
    4080:	ldr	x1, [x20, #16]
    4084:	ldr	w2, [x20, #40]
    4088:	bl	2430 <crc32@plt>
    408c:	str	x0, [x19, #96]
    4090:	mov	w8, #0x45                  	// #69
    4094:	str	xzr, [x20, #64]
    4098:	str	w8, [x20, #8]
    409c:	ldr	w8, [x20, #8]
    40a0:	cmp	w8, #0x45
    40a4:	b.ne	41e0 <deflate@@Base+0x5d0>  // b.any
    40a8:	ldr	x8, [x20, #56]
    40ac:	ldr	x9, [x8, #24]
    40b0:	cbz	x9, 41d8 <deflate@@Base+0x5c8>
    40b4:	ldrh	w8, [x8, #32]
    40b8:	ldr	w9, [x20, #64]
    40bc:	ldr	x23, [x20, #40]
    40c0:	mov	w25, #0xffffffff            	// #-1
    40c4:	sub	w24, w8, w9
    40c8:	b	40e0 <deflate@@Base+0x4d0>
    40cc:	mov	x23, xzr
    40d0:	sub	w24, w24, w26
    40d4:	mov	w8, #0x1                   	// #1
    40d8:	mov	w0, wzr
    40dc:	tbz	w8, #0, 3c8c <deflate@@Base+0x7c>
    40e0:	ldr	x8, [x20, #40]
    40e4:	ldr	x9, [x20, #24]
    40e8:	add	x10, x8, w24, uxtw
    40ec:	cmp	x10, x9
    40f0:	b.ls	417c <deflate@@Base+0x56c>  // b.plast
    40f4:	ldp	x10, x12, [x20, #56]
    40f8:	ldr	x11, [x20, #16]
    40fc:	sub	x26, x9, x8
    4100:	and	x22, x26, #0xffffffff
    4104:	ldr	x10, [x10, #24]
    4108:	add	x0, x11, x8
    410c:	mov	x2, x22
    4110:	add	x1, x10, x12
    4114:	bl	23a0 <memcpy@plt>
    4118:	ldr	x8, [x20, #24]
    411c:	cmp	x8, x23
    4120:	str	x8, [x20, #40]
    4124:	b.ls	414c <deflate@@Base+0x53c>  // b.plast
    4128:	ldr	x9, [x20, #56]
    412c:	ldr	w9, [x9, #68]
    4130:	cbz	w9, 414c <deflate@@Base+0x53c>
    4134:	ldr	x9, [x20, #16]
    4138:	ldr	x0, [x19, #96]
    413c:	sub	w2, w8, w23
    4140:	add	x1, x9, x23
    4144:	bl	2430 <crc32@plt>
    4148:	str	x0, [x19, #96]
    414c:	ldr	x8, [x20, #64]
    4150:	mov	x0, x19
    4154:	add	x8, x8, x22
    4158:	str	x8, [x20, #64]
    415c:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4160:	ldr	x8, [x20, #40]
    4164:	cbz	x8, 40cc <deflate@@Base+0x4bc>
    4168:	mov	w8, wzr
    416c:	str	w25, [x20, #76]
    4170:	mov	w0, wzr
    4174:	tbnz	w8, #0, 40e0 <deflate@@Base+0x4d0>
    4178:	b	3c8c <deflate@@Base+0x7c>
    417c:	ldp	x9, x11, [x20, #56]
    4180:	ldr	x10, [x20, #16]
    4184:	mov	w22, w24
    4188:	mov	x2, x22
    418c:	ldr	x9, [x9, #24]
    4190:	add	x0, x10, x8
    4194:	add	x1, x9, x11
    4198:	bl	23a0 <memcpy@plt>
    419c:	ldr	x8, [x20, #40]
    41a0:	add	x8, x8, x22
    41a4:	cmp	x8, x23
    41a8:	str	x8, [x20, #40]
    41ac:	b.ls	41d4 <deflate@@Base+0x5c4>  // b.plast
    41b0:	ldr	x9, [x20, #56]
    41b4:	ldr	w9, [x9, #68]
    41b8:	cbz	w9, 41d4 <deflate@@Base+0x5c4>
    41bc:	ldr	x9, [x20, #16]
    41c0:	ldr	x0, [x19, #96]
    41c4:	sub	w2, w8, w23
    41c8:	add	x1, x9, x23
    41cc:	bl	2430 <crc32@plt>
    41d0:	str	x0, [x19, #96]
    41d4:	str	xzr, [x20, #64]
    41d8:	mov	w8, #0x49                  	// #73
    41dc:	str	w8, [x20, #8]
    41e0:	ldr	w8, [x20, #8]
    41e4:	cmp	w8, #0x49
    41e8:	b.ne	42b8 <deflate@@Base+0x6a8>  // b.any
    41ec:	ldr	x8, [x20, #56]
    41f0:	ldr	x8, [x8, #40]
    41f4:	cbz	x8, 42b0 <deflate@@Base+0x6a0>
    41f8:	ldr	x8, [x20, #40]
    41fc:	b	423c <deflate@@Base+0x62c>
    4200:	mov	x0, x19
    4204:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4208:	ldr	x8, [x20, #40]
    420c:	cbnz	x8, 45d8 <deflate@@Base+0x9c8>
    4210:	ldp	x9, x10, [x20, #56]
    4214:	ldr	x11, [x20, #40]
    4218:	ldr	x9, [x9, #40]
    421c:	add	x12, x10, #0x1
    4220:	str	x12, [x20, #64]
    4224:	add	x12, x11, #0x1
    4228:	ldrb	w9, [x9, x10]
    422c:	ldr	x10, [x20, #16]
    4230:	str	x12, [x20, #40]
    4234:	strb	w9, [x10, x11]
    4238:	cbz	w9, 427c <deflate@@Base+0x66c>
    423c:	ldr	x9, [x20, #40]
    4240:	ldr	x10, [x20, #24]
    4244:	cmp	x9, x10
    4248:	b.ne	4210 <deflate@@Base+0x600>  // b.any
    424c:	cmp	x9, x8
    4250:	b.ls	4200 <deflate@@Base+0x5f0>  // b.plast
    4254:	ldr	x10, [x20, #56]
    4258:	ldr	w10, [x10, #68]
    425c:	cbz	w10, 4200 <deflate@@Base+0x5f0>
    4260:	ldr	x10, [x20, #16]
    4264:	ldr	x0, [x19, #96]
    4268:	sub	w2, w9, w8
    426c:	add	x1, x10, x8
    4270:	bl	2430 <crc32@plt>
    4274:	str	x0, [x19, #96]
    4278:	b	4200 <deflate@@Base+0x5f0>
    427c:	ldr	x9, [x20, #56]
    4280:	ldr	w9, [x9, #68]
    4284:	cbz	w9, 42ac <deflate@@Base+0x69c>
    4288:	ldr	x9, [x20, #40]
    428c:	cmp	x9, x8
    4290:	b.ls	42ac <deflate@@Base+0x69c>  // b.plast
    4294:	ldr	x10, [x20, #16]
    4298:	ldr	x0, [x19, #96]
    429c:	sub	w2, w9, w8
    42a0:	add	x1, x10, x8
    42a4:	bl	2430 <crc32@plt>
    42a8:	str	x0, [x19, #96]
    42ac:	str	xzr, [x20, #64]
    42b0:	mov	w8, #0x5b                  	// #91
    42b4:	str	w8, [x20, #8]
    42b8:	ldr	w8, [x20, #8]
    42bc:	cmp	w8, #0x5b
    42c0:	b.ne	438c <deflate@@Base+0x77c>  // b.any
    42c4:	ldr	x8, [x20, #56]
    42c8:	ldr	x8, [x8, #56]
    42cc:	cbz	x8, 4384 <deflate@@Base+0x774>
    42d0:	ldr	x8, [x20, #40]
    42d4:	b	4314 <deflate@@Base+0x704>
    42d8:	mov	x0, x19
    42dc:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    42e0:	ldr	x8, [x20, #40]
    42e4:	cbnz	x8, 45d8 <deflate@@Base+0x9c8>
    42e8:	ldp	x9, x10, [x20, #56]
    42ec:	ldr	x11, [x20, #40]
    42f0:	ldr	x9, [x9, #56]
    42f4:	add	x12, x10, #0x1
    42f8:	str	x12, [x20, #64]
    42fc:	add	x12, x11, #0x1
    4300:	ldrb	w9, [x9, x10]
    4304:	ldr	x10, [x20, #16]
    4308:	str	x12, [x20, #40]
    430c:	strb	w9, [x10, x11]
    4310:	cbz	w9, 4354 <deflate@@Base+0x744>
    4314:	ldr	x9, [x20, #40]
    4318:	ldr	x10, [x20, #24]
    431c:	cmp	x9, x10
    4320:	b.ne	42e8 <deflate@@Base+0x6d8>  // b.any
    4324:	cmp	x9, x8
    4328:	b.ls	42d8 <deflate@@Base+0x6c8>  // b.plast
    432c:	ldr	x10, [x20, #56]
    4330:	ldr	w10, [x10, #68]
    4334:	cbz	w10, 42d8 <deflate@@Base+0x6c8>
    4338:	ldr	x10, [x20, #16]
    433c:	ldr	x0, [x19, #96]
    4340:	sub	w2, w9, w8
    4344:	add	x1, x10, x8
    4348:	bl	2430 <crc32@plt>
    434c:	str	x0, [x19, #96]
    4350:	b	42d8 <deflate@@Base+0x6c8>
    4354:	ldr	x9, [x20, #56]
    4358:	ldr	w9, [x9, #68]
    435c:	cbz	w9, 4384 <deflate@@Base+0x774>
    4360:	ldr	x9, [x20, #40]
    4364:	cmp	x9, x8
    4368:	b.ls	4384 <deflate@@Base+0x774>  // b.plast
    436c:	ldr	x10, [x20, #16]
    4370:	ldr	x0, [x19, #96]
    4374:	sub	w2, w9, w8
    4378:	add	x1, x10, x8
    437c:	bl	2430 <crc32@plt>
    4380:	str	x0, [x19, #96]
    4384:	mov	w8, #0x67                  	// #103
    4388:	str	w8, [x20, #8]
    438c:	ldr	w8, [x20, #8]
    4390:	cmp	w8, #0x67
    4394:	b.ne	4428 <deflate@@Base+0x818>  // b.any
    4398:	ldr	x8, [x20, #56]
    439c:	ldr	w8, [x8, #68]
    43a0:	cbz	w8, 4410 <deflate@@Base+0x800>
    43a4:	ldr	x8, [x20, #40]
    43a8:	ldr	x9, [x20, #24]
    43ac:	add	x8, x8, #0x2
    43b0:	cmp	x8, x9
    43b4:	b.ls	43c8 <deflate@@Base+0x7b8>  // b.plast
    43b8:	mov	x0, x19
    43bc:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    43c0:	ldr	x8, [x20, #40]
    43c4:	cbnz	x8, 45d8 <deflate@@Base+0x9c8>
    43c8:	ldr	x8, [x20, #40]
    43cc:	ldr	x9, [x19, #96]
    43d0:	ldr	x10, [x20, #16]
    43d4:	mov	x0, xzr
    43d8:	add	x11, x8, #0x1
    43dc:	str	x11, [x20, #40]
    43e0:	strb	w9, [x10, x8]
    43e4:	ldr	x8, [x19, #96]
    43e8:	ldr	x9, [x20, #40]
    43ec:	ldr	x10, [x20, #16]
    43f0:	mov	x1, xzr
    43f4:	lsr	x8, x8, #8
    43f8:	add	x11, x9, #0x1
    43fc:	mov	w2, wzr
    4400:	str	x11, [x20, #40]
    4404:	strb	w8, [x10, x9]
    4408:	bl	2430 <crc32@plt>
    440c:	str	x0, [x19, #96]
    4410:	mov	w8, #0x71                  	// #113
    4414:	mov	x0, x19
    4418:	str	w8, [x20, #8]
    441c:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4420:	ldr	x8, [x20, #40]
    4424:	cbnz	x8, 45d8 <deflate@@Base+0x9c8>
    4428:	ldr	w8, [x19, #8]
    442c:	cbnz	w8, 4438 <deflate@@Base+0x828>
    4430:	ldr	w8, [x20, #180]
    4434:	cbz	w8, 4558 <deflate@@Base+0x948>
    4438:	ldrsw	x8, [x20, #196]
    443c:	cbz	w8, 4464 <deflate@@Base+0x854>
    4440:	ldr	w9, [x20, #200]
    4444:	cmp	w9, #0x3
    4448:	b.eq	44e0 <deflate@@Base+0x8d0>  // b.none
    444c:	cmp	w9, #0x2
    4450:	b.ne	44f0 <deflate@@Base+0x8e0>  // b.any
    4454:	mov	x0, x20
    4458:	mov	w1, w21
    445c:	bl	4e70 <deflateBound@@ZLIB_1.2.0+0x69c>
    4460:	b	450c <deflate@@Base+0x8fc>
    4464:	mov	x0, x20
    4468:	mov	w1, w21
    446c:	bl	49d4 <deflateBound@@ZLIB_1.2.0+0x200>
    4470:	b	450c <deflate@@Base+0x8fc>
    4474:	ldr	w9, [x20, #200]
    4478:	cmp	w9, #0x1
    447c:	ccmp	w8, #0x2, #0x8, le
    4480:	mov	w8, #0x4                   	// #4
    4484:	csel	w8, w8, wzr, lt  // lt = tstop
    4488:	ldr	x9, [x20, #40]
    448c:	ldr	x10, [x20, #16]
    4490:	mov	x0, x19
    4494:	add	x11, x9, #0x1
    4498:	str	x11, [x20, #40]
    449c:	strb	w8, [x10, x9]
    44a0:	ldr	x8, [x20, #40]
    44a4:	ldr	x10, [x20, #16]
    44a8:	mov	w9, #0x3                   	// #3
    44ac:	mov	w11, #0x71                  	// #113
    44b0:	add	x12, x8, #0x1
    44b4:	str	x12, [x20, #40]
    44b8:	strb	w9, [x10, x8]
    44bc:	str	w11, [x20, #8]
    44c0:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    44c4:	ldr	x8, [x20, #40]
    44c8:	cbnz	x8, 45d8 <deflate@@Base+0x9c8>
    44cc:	b	409c <deflate@@Base+0x48c>
    44d0:	mov	w9, #0xc0                  	// #192
    44d4:	mov	w10, #0x80                  	// #128
    44d8:	csel	w9, w10, w9, eq  // eq = none
    44dc:	b	3d20 <deflate@@Base+0x110>
    44e0:	mov	x0, x20
    44e4:	mov	w1, w21
    44e8:	bl	501c <deflateBound@@ZLIB_1.2.0+0x848>
    44ec:	b	450c <deflate@@Base+0x8fc>
    44f0:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    44f4:	add	x9, x9, #0xc68
    44f8:	add	x8, x9, x8, lsl #4
    44fc:	ldr	x8, [x8, #8]
    4500:	mov	x0, x20
    4504:	mov	w1, w21
    4508:	blr	x8
    450c:	orr	w8, w0, #0x1
    4510:	cmp	w8, #0x3
    4514:	b.ne	4520 <deflate@@Base+0x910>  // b.any
    4518:	mov	w8, #0x29a                 	// #666
    451c:	str	w8, [x20, #8]
    4520:	tst	w0, #0xfffffffd
    4524:	b.eq	454c <deflate@@Base+0x93c>  // b.none
    4528:	cmp	w0, #0x1
    452c:	b.ne	45c8 <deflate@@Base+0x9b8>  // b.any
    4530:	cmp	w21, #0x5
    4534:	b.eq	45b8 <deflate@@Base+0x9a8>  // b.none
    4538:	mov	x0, x20
    453c:	cmp	w21, #0x1
    4540:	b.ne	456c <deflate@@Base+0x95c>  // b.any
    4544:	bl	a018 <inflateCodesUsed@@ZLIB_1.2.9+0x774>
    4548:	b	45b8 <deflate@@Base+0x9a8>
    454c:	ldr	w8, [x19, #32]
    4550:	cbnz	w8, 45d0 <deflate@@Base+0x9c0>
    4554:	b	45d8 <deflate@@Base+0x9c8>
    4558:	cbz	w21, 45c8 <deflate@@Base+0x9b8>
    455c:	ldr	w8, [x20, #8]
    4560:	cmp	w8, #0x29a
    4564:	b.ne	4438 <deflate@@Base+0x828>  // b.any
    4568:	b	45c8 <deflate@@Base+0x9b8>
    456c:	mov	x1, xzr
    4570:	mov	x2, xzr
    4574:	mov	w3, wzr
    4578:	bl	9dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x534>
    457c:	cmp	w21, #0x3
    4580:	b.ne	45b8 <deflate@@Base+0x9a8>  // b.any
    4584:	ldr	w8, [x20, #132]
    4588:	ldr	x9, [x20, #120]
    458c:	mov	w1, wzr
    4590:	sub	w8, w8, #0x1
    4594:	lsl	x2, x8, #1
    4598:	strh	wzr, [x9, x2]
    459c:	ldr	x0, [x20, #120]
    45a0:	bl	24a0 <memset@plt>
    45a4:	ldr	w8, [x20, #180]
    45a8:	cbnz	w8, 45b8 <deflate@@Base+0x9a8>
    45ac:	str	wzr, [x20, #172]
    45b0:	str	xzr, [x20, #152]
    45b4:	str	wzr, [x20, #5932]
    45b8:	mov	x0, x19
    45bc:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    45c0:	ldr	w8, [x19, #32]
    45c4:	cbz	w8, 45d8 <deflate@@Base+0x9c8>
    45c8:	cmp	w21, #0x4
    45cc:	b.eq	45e8 <deflate@@Base+0x9d8>  // b.none
    45d0:	mov	w0, wzr
    45d4:	b	3c8c <deflate@@Base+0x7c>
    45d8:	mov	w8, #0xffffffff            	// #-1
    45dc:	mov	w0, wzr
    45e0:	str	w8, [x20, #76]
    45e4:	b	3c8c <deflate@@Base+0x7c>
    45e8:	ldr	w9, [x20, #48]
    45ec:	cmp	w9, #0x1
    45f0:	b.lt	46d8 <deflate@@Base+0xac8>  // b.tstop
    45f4:	ldr	x8, [x19, #96]
    45f8:	cmp	w9, #0x2
    45fc:	b.ne	46e0 <deflate@@Base+0xad0>  // b.any
    4600:	ldr	x9, [x20, #40]
    4604:	ldr	x10, [x20, #16]
    4608:	add	x11, x9, #0x1
    460c:	str	x11, [x20, #40]
    4610:	strb	w8, [x10, x9]
    4614:	ldr	x8, [x19, #96]
    4618:	ldr	x9, [x20, #40]
    461c:	ldr	x10, [x20, #16]
    4620:	lsr	x8, x8, #8
    4624:	add	x11, x9, #0x1
    4628:	str	x11, [x20, #40]
    462c:	strb	w8, [x10, x9]
    4630:	ldr	x8, [x19, #96]
    4634:	ldr	x9, [x20, #40]
    4638:	ldr	x10, [x20, #16]
    463c:	lsr	x8, x8, #16
    4640:	add	x11, x9, #0x1
    4644:	str	x11, [x20, #40]
    4648:	strb	w8, [x10, x9]
    464c:	ldr	x8, [x19, #96]
    4650:	ldr	x9, [x20, #40]
    4654:	ldr	x10, [x20, #16]
    4658:	lsr	x8, x8, #24
    465c:	add	x11, x9, #0x1
    4660:	str	x11, [x20, #40]
    4664:	strb	w8, [x10, x9]
    4668:	ldr	x8, [x20, #40]
    466c:	ldr	x9, [x19, #16]
    4670:	ldr	x10, [x20, #16]
    4674:	add	x11, x8, #0x1
    4678:	str	x11, [x20, #40]
    467c:	strb	w9, [x10, x8]
    4680:	ldr	x8, [x19, #16]
    4684:	ldr	x9, [x20, #40]
    4688:	ldr	x10, [x20, #16]
    468c:	lsr	x8, x8, #8
    4690:	add	x11, x9, #0x1
    4694:	str	x11, [x20, #40]
    4698:	strb	w8, [x10, x9]
    469c:	ldr	x8, [x19, #16]
    46a0:	ldr	x9, [x20, #40]
    46a4:	ldr	x10, [x20, #16]
    46a8:	lsr	x8, x8, #16
    46ac:	add	x11, x9, #0x1
    46b0:	str	x11, [x20, #40]
    46b4:	strb	w8, [x10, x9]
    46b8:	ldr	x8, [x19, #16]
    46bc:	ldr	x9, [x20, #40]
    46c0:	ldr	x10, [x20, #16]
    46c4:	lsr	x8, x8, #24
    46c8:	add	x11, x9, #0x1
    46cc:	str	x11, [x20, #40]
    46d0:	strb	w8, [x10, x9]
    46d4:	b	46f8 <deflate@@Base+0xae8>
    46d8:	mov	w0, #0x1                   	// #1
    46dc:	b	3c8c <deflate@@Base+0x7c>
    46e0:	lsr	x1, x8, #16
    46e4:	mov	x0, x20
    46e8:	bl	49a4 <deflateBound@@ZLIB_1.2.0+0x1d0>
    46ec:	ldrh	w1, [x19, #96]
    46f0:	mov	x0, x20
    46f4:	bl	49a4 <deflateBound@@ZLIB_1.2.0+0x1d0>
    46f8:	mov	x0, x19
    46fc:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4700:	ldr	w8, [x20, #48]
    4704:	cmp	w8, #0x1
    4708:	b.lt	4714 <deflate@@Base+0xb04>  // b.tstop
    470c:	neg	w8, w8
    4710:	str	w8, [x20, #48]
    4714:	ldr	x8, [x20, #40]
    4718:	cmp	x8, #0x0
    471c:	cset	w0, eq  // eq = none
    4720:	b	3c8c <deflate@@Base+0x7c>
    4724:	ldr	x10, [x0, #120]
    4728:	ldr	w8, [x0, #80]
    472c:	ldr	w9, [x0, #132]
    4730:	sub	x10, x10, #0x2
    4734:	lsl	x11, x9, #1
    4738:	ldrh	w12, [x10, x11]
    473c:	sub	x9, x9, #0x1
    4740:	subs	w12, w12, w8
    4744:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    4748:	strh	w12, [x10, x11]
    474c:	cbnz	w9, 4734 <deflate@@Base+0xb24>
    4750:	ldr	x9, [x0, #112]
    4754:	mov	x10, x8
    4758:	sub	x9, x9, #0x2
    475c:	lsl	x11, x10, #1
    4760:	ldrh	w12, [x9, x11]
    4764:	sub	x10, x10, #0x1
    4768:	subs	w12, w12, w8
    476c:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    4770:	strh	w12, [x9, x11]
    4774:	cbnz	w10, 475c <deflate@@Base+0xb4c>
    4778:	ret

000000000000477c <deflateTune@@ZLIB_1.2.2.3>:
    477c:	stp	x29, x30, [sp, #-64]!
    4780:	str	x23, [sp, #16]
    4784:	stp	x22, x21, [sp, #32]
    4788:	stp	x20, x19, [sp, #48]
    478c:	mov	x29, sp
    4790:	mov	w19, w4
    4794:	mov	w20, w3
    4798:	mov	w21, w2
    479c:	mov	w22, w1
    47a0:	mov	x23, x0
    47a4:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    47a8:	cbz	w0, 47b4 <deflateTune@@ZLIB_1.2.2.3+0x38>
    47ac:	mov	w0, #0xfffffffe            	// #-2
    47b0:	b	47c0 <deflateTune@@ZLIB_1.2.2.3+0x44>
    47b4:	ldr	x8, [x23, #56]
    47b8:	stp	w22, w20, [x8, #204]
    47bc:	stp	w19, w21, [x8, #188]
    47c0:	ldp	x20, x19, [sp, #48]
    47c4:	ldp	x22, x21, [sp, #32]
    47c8:	ldr	x23, [sp, #16]
    47cc:	ldp	x29, x30, [sp], #64
    47d0:	ret

00000000000047d4 <deflateBound@@ZLIB_1.2.0>:
    47d4:	stp	x29, x30, [sp, #-48]!
    47d8:	add	x8, x1, #0x7
    47dc:	add	x8, x1, x8, lsr #3
    47e0:	add	x9, x1, #0x3f
    47e4:	str	x21, [sp, #16]
    47e8:	stp	x20, x19, [sp, #32]
    47ec:	mov	x29, sp
    47f0:	mov	x19, x1
    47f4:	mov	x20, x0
    47f8:	add	x21, x8, x9, lsr #6
    47fc:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    4800:	cbz	w0, 480c <deflateBound@@ZLIB_1.2.0+0x38>
    4804:	add	x0, x21, #0xb
    4808:	b	48e4 <deflateBound@@ZLIB_1.2.0+0x110>
    480c:	ldr	x8, [x20, #56]
    4810:	ldr	w9, [x8, #48]
    4814:	cbz	w9, 4840 <deflateBound@@ZLIB_1.2.0+0x6c>
    4818:	cmp	w9, #0x2
    481c:	b.eq	4848 <deflateBound@@ZLIB_1.2.0+0x74>  // b.none
    4820:	cmp	w9, #0x1
    4824:	b.ne	48a0 <deflateBound@@ZLIB_1.2.0+0xcc>  // b.any
    4828:	ldr	w9, [x8, #172]
    482c:	mov	w10, #0xa                   	// #10
    4830:	cmp	w9, #0x0
    4834:	mov	w9, #0x6                   	// #6
    4838:	csel	x9, x9, x10, eq  // eq = none
    483c:	b	48ac <deflateBound@@ZLIB_1.2.0+0xd8>
    4840:	mov	x9, xzr
    4844:	b	48ac <deflateBound@@ZLIB_1.2.0+0xd8>
    4848:	ldr	x9, [x8, #56]
    484c:	cbz	x9, 48a8 <deflateBound@@ZLIB_1.2.0+0xd4>
    4850:	ldr	x10, [x9, #24]
    4854:	cbz	x10, 48f4 <deflateBound@@ZLIB_1.2.0+0x120>
    4858:	ldr	w10, [x9, #32]
    485c:	add	w10, w10, #0x2
    4860:	add	x10, x10, #0x12
    4864:	ldr	x11, [x9, #40]
    4868:	cbz	x11, 4878 <deflateBound@@ZLIB_1.2.0+0xa4>
    486c:	ldrb	w12, [x11], #1
    4870:	add	x10, x10, #0x1
    4874:	cbnz	w12, 486c <deflateBound@@ZLIB_1.2.0+0x98>
    4878:	ldr	x11, [x9, #56]
    487c:	cbz	x11, 488c <deflateBound@@ZLIB_1.2.0+0xb8>
    4880:	ldrb	w12, [x11], #1
    4884:	add	x10, x10, #0x1
    4888:	cbnz	w12, 4880 <deflateBound@@ZLIB_1.2.0+0xac>
    488c:	ldr	w9, [x9, #68]
    4890:	add	x11, x10, #0x2
    4894:	cmp	w9, #0x0
    4898:	csel	x9, x10, x11, eq  // eq = none
    489c:	b	48ac <deflateBound@@ZLIB_1.2.0+0xd8>
    48a0:	mov	w9, #0x6                   	// #6
    48a4:	b	48ac <deflateBound@@ZLIB_1.2.0+0xd8>
    48a8:	mov	w9, #0x12                  	// #18
    48ac:	ldr	w10, [x8, #84]
    48b0:	cmp	w10, #0xf
    48b4:	b.ne	48dc <deflateBound@@ZLIB_1.2.0+0x108>  // b.any
    48b8:	ldr	w8, [x8, #136]
    48bc:	cmp	w8, #0xf
    48c0:	b.ne	48dc <deflateBound@@ZLIB_1.2.0+0x108>  // b.any
    48c4:	add	x8, x19, x19, lsr #12
    48c8:	add	x8, x8, x19, lsr #14
    48cc:	add	x8, x8, x19, lsr #25
    48d0:	add	x8, x8, x9
    48d4:	add	x0, x8, #0x7
    48d8:	b	48e4 <deflateBound@@ZLIB_1.2.0+0x110>
    48dc:	add	x8, x21, #0x5
    48e0:	add	x0, x8, x9
    48e4:	ldp	x20, x19, [sp, #32]
    48e8:	ldr	x21, [sp, #16]
    48ec:	ldp	x29, x30, [sp], #48
    48f0:	ret
    48f4:	mov	w10, #0x12                  	// #18
    48f8:	ldr	x11, [x9, #40]
    48fc:	cbnz	x11, 486c <deflateBound@@ZLIB_1.2.0+0x98>
    4900:	b	4878 <deflateBound@@ZLIB_1.2.0+0xa4>
    4904:	stp	x29, x30, [sp, #-48]!
    4908:	stp	x22, x21, [sp, #16]
    490c:	stp	x20, x19, [sp, #32]
    4910:	ldr	x19, [x0, #56]
    4914:	mov	x20, x0
    4918:	mov	x29, sp
    491c:	mov	x0, x19
    4920:	bl	9f74 <inflateCodesUsed@@ZLIB_1.2.9+0x6d0>
    4924:	ldr	w8, [x19, #40]
    4928:	ldr	w9, [x20, #32]
    492c:	cmp	w9, w8
    4930:	csel	w22, w9, w8, cc  // cc = lo, ul, last
    4934:	cbz	w22, 4994 <deflateBound@@ZLIB_1.2.0+0x1c0>
    4938:	ldr	x0, [x20, #24]
    493c:	ldr	x1, [x19, #32]
    4940:	mov	w21, w22
    4944:	mov	x2, x21
    4948:	bl	23a0 <memcpy@plt>
    494c:	ldr	x8, [x20, #24]
    4950:	add	x8, x8, x21
    4954:	str	x8, [x20, #24]
    4958:	ldr	x8, [x19, #32]
    495c:	add	x8, x8, x21
    4960:	str	x8, [x19, #32]
    4964:	ldr	x8, [x20, #40]
    4968:	ldr	w9, [x20, #32]
    496c:	add	x8, x8, x21
    4970:	sub	w9, w9, w22
    4974:	str	x8, [x20, #40]
    4978:	str	w9, [x20, #32]
    497c:	ldr	x8, [x19, #40]
    4980:	subs	x8, x8, x21
    4984:	str	x8, [x19, #40]
    4988:	b.ne	4994 <deflateBound@@ZLIB_1.2.0+0x1c0>  // b.any
    498c:	ldr	x8, [x19, #16]
    4990:	str	x8, [x19, #32]
    4994:	ldp	x20, x19, [sp, #32]
    4998:	ldp	x22, x21, [sp, #16]
    499c:	ldp	x29, x30, [sp], #48
    49a0:	ret
    49a4:	ldr	x8, [x0, #40]
    49a8:	ldr	x9, [x0, #16]
    49ac:	lsr	w10, w1, #8
    49b0:	add	x11, x8, #0x1
    49b4:	str	x11, [x0, #40]
    49b8:	strb	w10, [x9, x8]
    49bc:	ldr	x8, [x0, #40]
    49c0:	ldr	x9, [x0, #16]
    49c4:	add	x10, x8, #0x1
    49c8:	str	x10, [x0, #40]
    49cc:	strb	w1, [x9, x8]
    49d0:	ret
    49d4:	stp	x29, x30, [sp, #-80]!
    49d8:	stp	x26, x25, [sp, #16]
    49dc:	stp	x24, x23, [sp, #32]
    49e0:	stp	x22, x21, [sp, #48]
    49e4:	stp	x20, x19, [sp, #64]
    49e8:	ldr	x9, [x0]
    49ec:	ldr	x8, [x0, #24]
    49f0:	ldr	w10, [x0, #80]
    49f4:	mov	w20, w1
    49f8:	ldr	w24, [x9, #8]
    49fc:	sub	x8, x8, #0x5
    4a00:	cmp	x8, x10
    4a04:	mov	x19, x0
    4a08:	csel	w25, w10, w8, hi  // hi = pmore
    4a0c:	mov	w26, #0xffff                	// #65535
    4a10:	mov	x29, sp
    4a14:	b	4a1c <deflateBound@@ZLIB_1.2.0+0x248>
    4a18:	cbnz	w21, 4bb4 <deflateBound@@ZLIB_1.2.0+0x3e0>
    4a1c:	ldr	x8, [x19]
    4a20:	ldr	w9, [x19, #5940]
    4a24:	ldr	w10, [x8, #32]
    4a28:	add	w9, w9, #0x2a
    4a2c:	asr	w9, w9, #3
    4a30:	subs	w9, w10, w9
    4a34:	b.cc	4bb0 <deflateBound@@ZLIB_1.2.0+0x3dc>  // b.lo, b.ul, b.last
    4a38:	ldr	w10, [x19, #172]
    4a3c:	ldr	w11, [x19, #152]
    4a40:	ldr	w8, [x8, #8]
    4a44:	sub	w23, w10, w11
    4a48:	add	x10, x23, x8
    4a4c:	add	w8, w23, w8
    4a50:	cmp	x10, x26
    4a54:	csel	w10, w8, w26, cc  // cc = lo, ul, last
    4a58:	cmp	w10, w9
    4a5c:	csel	w22, w9, w10, hi  // hi = pmore
    4a60:	cmp	w22, w25
    4a64:	b.cs	4a90 <deflateBound@@ZLIB_1.2.0+0x2bc>  // b.hs, b.nlast
    4a68:	cmp	w20, #0x4
    4a6c:	cset	w9, ne  // ne = any
    4a70:	cmp	w22, #0x0
    4a74:	cset	w10, eq  // eq = none
    4a78:	cmp	w22, w8
    4a7c:	mov	w21, wzr
    4a80:	b.ne	4bb4 <deflateBound@@ZLIB_1.2.0+0x3e0>  // b.any
    4a84:	cbz	w20, 4bb4 <deflateBound@@ZLIB_1.2.0+0x3e0>
    4a88:	and	w9, w9, w10
    4a8c:	cbnz	w9, 4bb4 <deflateBound@@ZLIB_1.2.0+0x3e0>
    4a90:	cmp	w20, #0x4
    4a94:	cset	w9, eq  // eq = none
    4a98:	cmp	w22, w8
    4a9c:	cset	w8, eq  // eq = none
    4aa0:	and	w21, w9, w8
    4aa4:	mov	x0, x19
    4aa8:	mov	x1, xzr
    4aac:	mov	x2, xzr
    4ab0:	mov	w3, w21
    4ab4:	bl	9dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x534>
    4ab8:	ldr	x8, [x19, #16]
    4abc:	ldr	x9, [x19, #40]
    4ac0:	lsr	w10, w22, #8
    4ac4:	add	x8, x9, x8
    4ac8:	sturb	w22, [x8, #-4]
    4acc:	ldr	x8, [x19, #16]
    4ad0:	ldr	x9, [x19, #40]
    4ad4:	add	x8, x9, x8
    4ad8:	sturb	w10, [x8, #-3]
    4adc:	ldr	x8, [x19, #16]
    4ae0:	ldr	x9, [x19, #40]
    4ae4:	mvn	w10, w22
    4ae8:	add	x8, x9, x8
    4aec:	sturb	w10, [x8, #-2]
    4af0:	ldr	x8, [x19, #16]
    4af4:	ldr	x9, [x19, #40]
    4af8:	lsr	w10, w10, #8
    4afc:	add	x8, x9, x8
    4b00:	sturb	w10, [x8, #-1]
    4b04:	ldr	x0, [x19]
    4b08:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4b0c:	cbz	w23, 4b6c <deflateBound@@ZLIB_1.2.0+0x398>
    4b10:	ldr	x8, [x19]
    4b14:	ldr	x9, [x19, #96]
    4b18:	ldr	x10, [x19, #152]
    4b1c:	cmp	w23, w22
    4b20:	ldr	x0, [x8, #24]
    4b24:	csel	w23, w22, w23, hi  // hi = pmore
    4b28:	add	x1, x9, x10
    4b2c:	mov	x2, x23
    4b30:	bl	23a0 <memcpy@plt>
    4b34:	ldr	x8, [x19]
    4b38:	sub	w22, w22, w23
    4b3c:	ldr	x9, [x8, #24]
    4b40:	ldr	w10, [x8, #32]
    4b44:	ldr	x11, [x8, #40]
    4b48:	add	x9, x9, x23
    4b4c:	sub	w10, w10, w23
    4b50:	add	x11, x11, x23
    4b54:	str	x9, [x8, #24]
    4b58:	str	w10, [x8, #32]
    4b5c:	str	x11, [x8, #40]
    4b60:	ldr	x8, [x19, #152]
    4b64:	add	x8, x8, x23
    4b68:	str	x8, [x19, #152]
    4b6c:	cbz	w22, 4a18 <deflateBound@@ZLIB_1.2.0+0x244>
    4b70:	ldr	x0, [x19]
    4b74:	mov	w2, w22
    4b78:	ldr	x1, [x0, #24]
    4b7c:	bl	6024 <deflateCopy@@Base+0xc64>
    4b80:	ldr	x8, [x19]
    4b84:	mov	w12, w22
    4b88:	ldr	x9, [x8, #24]
    4b8c:	ldr	w10, [x8, #32]
    4b90:	ldr	x11, [x8, #40]
    4b94:	add	x9, x9, x12
    4b98:	sub	w10, w10, w22
    4b9c:	add	x11, x11, x12
    4ba0:	str	x9, [x8, #24]
    4ba4:	str	w10, [x8, #32]
    4ba8:	str	x11, [x8, #40]
    4bac:	b	4a18 <deflateBound@@ZLIB_1.2.0+0x244>
    4bb0:	mov	w21, wzr
    4bb4:	ldr	x8, [x19]
    4bb8:	ldr	w9, [x8, #8]
    4bbc:	subs	w23, w24, w9
    4bc0:	b.eq	4c84 <deflateBound@@ZLIB_1.2.0+0x4b0>  // b.none
    4bc4:	ldr	w2, [x19, #80]
    4bc8:	cmp	w23, w2
    4bcc:	b.cs	4c40 <deflateBound@@ZLIB_1.2.0+0x46c>  // b.hs, b.nlast
    4bd0:	ldr	x9, [x19, #104]
    4bd4:	ldr	w8, [x19, #172]
    4bd8:	mov	w22, w23
    4bdc:	sub	x9, x9, x8
    4be0:	cmp	x9, x22
    4be4:	b.hi	4c14 <deflateBound@@ZLIB_1.2.0+0x440>  // b.pmore
    4be8:	ldr	x0, [x19, #96]
    4bec:	sub	w8, w8, w2
    4bf0:	str	w8, [x19, #172]
    4bf4:	add	x1, x0, x2
    4bf8:	mov	x2, x8
    4bfc:	bl	23a0 <memcpy@plt>
    4c00:	ldr	w8, [x19, #5928]
    4c04:	cmp	w8, #0x1
    4c08:	b.hi	4c14 <deflateBound@@ZLIB_1.2.0+0x440>  // b.pmore
    4c0c:	add	w8, w8, #0x1
    4c10:	str	w8, [x19, #5928]
    4c14:	ldr	x8, [x19]
    4c18:	ldr	x9, [x19, #96]
    4c1c:	ldr	w10, [x19, #172]
    4c20:	mov	x2, x22
    4c24:	ldr	x8, [x8]
    4c28:	add	x0, x9, x10
    4c2c:	sub	x1, x8, x22
    4c30:	bl	23a0 <memcpy@plt>
    4c34:	ldr	w8, [x19, #172]
    4c38:	add	w8, w8, w23
    4c3c:	b	4c5c <deflateBound@@ZLIB_1.2.0+0x488>
    4c40:	mov	w9, #0x2                   	// #2
    4c44:	str	w9, [x19, #5928]
    4c48:	ldr	x8, [x8]
    4c4c:	ldr	x0, [x19, #96]
    4c50:	sub	x1, x8, x2
    4c54:	bl	23a0 <memcpy@plt>
    4c58:	ldr	w8, [x19, #80]
    4c5c:	ldr	w9, [x19, #80]
    4c60:	ldr	w10, [x19, #5932]
    4c64:	str	w8, [x19, #172]
    4c68:	mov	w8, w8
    4c6c:	str	x8, [x19, #152]
    4c70:	sub	w8, w9, w10
    4c74:	cmp	w23, w8
    4c78:	csel	w8, w8, w23, hi  // hi = pmore
    4c7c:	add	w8, w8, w10
    4c80:	str	w8, [x19, #5932]
    4c84:	ldr	x9, [x19, #5944]
    4c88:	ldr	w8, [x19, #172]
    4c8c:	cmp	x9, x8
    4c90:	b.cs	4c98 <deflateBound@@ZLIB_1.2.0+0x4c4>  // b.hs, b.nlast
    4c94:	str	x8, [x19, #5944]
    4c98:	cbz	w21, 4ca4 <deflateBound@@ZLIB_1.2.0+0x4d0>
    4c9c:	mov	w0, #0x3                   	// #3
    4ca0:	b	4e58 <deflateBound@@ZLIB_1.2.0+0x684>
    4ca4:	tst	w20, #0xfffffffb
    4ca8:	b.eq	4ccc <deflateBound@@ZLIB_1.2.0+0x4f8>  // b.none
    4cac:	ldr	x9, [x19]
    4cb0:	ldr	w9, [x9, #8]
    4cb4:	cbnz	w9, 4ccc <deflateBound@@ZLIB_1.2.0+0x4f8>
    4cb8:	ldr	x9, [x19, #152]
    4cbc:	cmp	x9, x8
    4cc0:	b.ne	4ccc <deflateBound@@ZLIB_1.2.0+0x4f8>  // b.any
    4cc4:	mov	w0, #0x1                   	// #1
    4cc8:	b	4e58 <deflateBound@@ZLIB_1.2.0+0x684>
    4ccc:	ldr	x9, [x19]
    4cd0:	ldr	w10, [x19, #104]
    4cd4:	mvn	w11, w8
    4cd8:	ldr	w9, [x9, #8]
    4cdc:	add	w21, w10, w11
    4ce0:	cmp	w9, w21
    4ce4:	b.ls	4d2c <deflateBound@@ZLIB_1.2.0+0x558>  // b.plast
    4ce8:	ldr	x10, [x19, #152]
    4cec:	ldr	w9, [x19, #80]
    4cf0:	subs	x10, x10, x9
    4cf4:	b.lt	4d2c <deflateBound@@ZLIB_1.2.0+0x558>  // b.tstop
    4cf8:	ldr	x0, [x19, #96]
    4cfc:	sub	w2, w8, w9
    4d00:	str	x10, [x19, #152]
    4d04:	str	w2, [x19, #172]
    4d08:	add	x1, x0, x9
    4d0c:	bl	23a0 <memcpy@plt>
    4d10:	ldr	w8, [x19, #5928]
    4d14:	cmp	w8, #0x1
    4d18:	b.hi	4d24 <deflateBound@@ZLIB_1.2.0+0x550>  // b.pmore
    4d1c:	add	w8, w8, #0x1
    4d20:	str	w8, [x19, #5928]
    4d24:	ldr	w8, [x19, #80]
    4d28:	add	w21, w8, w21
    4d2c:	ldr	x0, [x19]
    4d30:	ldr	w8, [x0, #8]
    4d34:	cmp	w21, w8
    4d38:	csel	w21, w8, w21, hi  // hi = pmore
    4d3c:	cbz	w21, 4d60 <deflateBound@@ZLIB_1.2.0+0x58c>
    4d40:	ldr	x8, [x19, #96]
    4d44:	ldr	w9, [x19, #172]
    4d48:	mov	w2, w21
    4d4c:	add	x1, x8, x9
    4d50:	bl	6024 <deflateCopy@@Base+0xc64>
    4d54:	ldr	w8, [x19, #172]
    4d58:	add	w8, w8, w21
    4d5c:	str	w8, [x19, #172]
    4d60:	ldr	x8, [x19, #5944]
    4d64:	ldr	w10, [x19, #172]
    4d68:	cmp	x8, x10
    4d6c:	b.cs	4d74 <deflateBound@@ZLIB_1.2.0+0x5a0>  // b.hs, b.nlast
    4d70:	str	x10, [x19, #5944]
    4d74:	ldr	w9, [x19, #5940]
    4d78:	ldr	x11, [x19, #24]
    4d7c:	ldr	w13, [x19, #80]
    4d80:	mov	w12, #0xffff                	// #65535
    4d84:	add	w9, w9, #0x2a
    4d88:	asr	w9, w9, #3
    4d8c:	ldr	x8, [x19, #152]
    4d90:	sub	x9, x11, x9
    4d94:	cmp	x9, x12
    4d98:	csel	w9, w9, w12, cc  // cc = lo, ul, last
    4d9c:	cmp	w13, w9
    4da0:	csel	w11, w13, w9, cc  // cc = lo, ul, last
    4da4:	sub	w10, w10, w8
    4da8:	cmp	w10, w11
    4dac:	b.cs	4de8 <deflateBound@@ZLIB_1.2.0+0x614>  // b.hs, b.nlast
    4db0:	cmp	w10, #0x0
    4db4:	cset	w11, ne  // ne = any
    4db8:	cmp	w20, #0x4
    4dbc:	mov	w21, wzr
    4dc0:	cset	w12, eq  // eq = none
    4dc4:	cbz	w20, 4e4c <deflateBound@@ZLIB_1.2.0+0x678>
    4dc8:	orr	w11, w12, w11
    4dcc:	cbz	w11, 4e4c <deflateBound@@ZLIB_1.2.0+0x678>
    4dd0:	cmp	w10, w9
    4dd4:	mov	w21, wzr
    4dd8:	b.hi	4e4c <deflateBound@@ZLIB_1.2.0+0x678>  // b.pmore
    4ddc:	ldr	x11, [x19]
    4de0:	ldr	w11, [x11, #8]
    4de4:	cbnz	w11, 4e4c <deflateBound@@ZLIB_1.2.0+0x678>
    4de8:	cmp	w10, w9
    4dec:	csel	w11, w9, w10, hi  // hi = pmore
    4df0:	cmp	w20, #0x4
    4df4:	b.ne	4e18 <deflateBound@@ZLIB_1.2.0+0x644>  // b.any
    4df8:	ldr	x12, [x19]
    4dfc:	ldr	w12, [x12, #8]
    4e00:	cmp	w12, #0x0
    4e04:	cset	w12, eq  // eq = none
    4e08:	cmp	w10, w9
    4e0c:	cset	w9, ls  // ls = plast
    4e10:	and	w21, w9, w12
    4e14:	b	4e1c <deflateBound@@ZLIB_1.2.0+0x648>
    4e18:	mov	w21, wzr
    4e1c:	ldr	x9, [x19, #96]
    4e20:	mov	w20, w11
    4e24:	mov	x0, x19
    4e28:	mov	x2, x20
    4e2c:	add	x1, x9, x8
    4e30:	mov	w3, w21
    4e34:	bl	9dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x534>
    4e38:	ldr	x8, [x19, #152]
    4e3c:	ldr	x0, [x19]
    4e40:	add	x8, x8, x20
    4e44:	str	x8, [x19, #152]
    4e48:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4e4c:	cmp	w21, #0x0
    4e50:	mov	w8, #0x2                   	// #2
    4e54:	csel	w0, w8, wzr, ne  // ne = any
    4e58:	ldp	x20, x19, [sp, #64]
    4e5c:	ldp	x22, x21, [sp, #48]
    4e60:	ldp	x24, x23, [sp, #32]
    4e64:	ldp	x26, x25, [sp, #16]
    4e68:	ldp	x29, x30, [sp], #80
    4e6c:	ret
    4e70:	stp	x29, x30, [sp, #-32]!
    4e74:	stp	x20, x19, [sp, #16]
    4e78:	mov	w20, w1
    4e7c:	mov	x19, x0
    4e80:	mov	x29, sp
    4e84:	b	4ebc <deflateBound@@ZLIB_1.2.0+0x6e8>
    4e88:	mov	x1, xzr
    4e8c:	mov	w8, w8
    4e90:	sub	x2, x8, x9
    4e94:	mov	x0, x19
    4e98:	mov	w3, wzr
    4e9c:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    4ea0:	ldr	w8, [x19, #172]
    4ea4:	ldr	x0, [x19]
    4ea8:	str	x8, [x19, #152]
    4eac:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4eb0:	ldr	x8, [x19]
    4eb4:	ldr	w8, [x8, #32]
    4eb8:	cbz	w8, 500c <deflateBound@@ZLIB_1.2.0+0x838>
    4ebc:	ldr	w8, [x19, #180]
    4ec0:	cbnz	w8, 4ed4 <deflateBound@@ZLIB_1.2.0+0x700>
    4ec4:	mov	x0, x19
    4ec8:	bl	35ac <deflateSetDictionary@@Base+0x23c>
    4ecc:	ldr	w8, [x19, #180]
    4ed0:	cbz	w8, 4f50 <deflateBound@@ZLIB_1.2.0+0x77c>
    4ed4:	ldr	x8, [x19, #96]
    4ed8:	ldr	w9, [x19, #172]
    4edc:	ldr	x10, [x19, #5904]
    4ee0:	ldr	w11, [x19, #5900]
    4ee4:	str	wzr, [x19, #160]
    4ee8:	ldrb	w8, [x8, x9]
    4eec:	strh	wzr, [x10, x11, lsl #1]
    4ef0:	ldr	x9, [x19, #5888]
    4ef4:	add	w10, w11, #0x1
    4ef8:	str	w10, [x19, #5900]
    4efc:	add	x10, x19, x8, lsl #2
    4f00:	strb	w8, [x9, x11]
    4f04:	ldrh	w8, [x10, #212]
    4f08:	add	w8, w8, #0x1
    4f0c:	strh	w8, [x10, #212]
    4f10:	ldr	w8, [x19, #5896]
    4f14:	ldr	w9, [x19, #180]
    4f18:	ldr	w10, [x19, #172]
    4f1c:	ldr	w11, [x19, #5900]
    4f20:	sub	w12, w8, #0x1
    4f24:	sub	w9, w9, #0x1
    4f28:	add	w8, w10, #0x1
    4f2c:	cmp	w11, w12
    4f30:	str	w9, [x19, #180]
    4f34:	str	w8, [x19, #172]
    4f38:	b.ne	4ebc <deflateBound@@ZLIB_1.2.0+0x6e8>  // b.any
    4f3c:	ldr	x9, [x19, #152]
    4f40:	tbnz	x9, #63, 4e88 <deflateBound@@ZLIB_1.2.0+0x6b4>
    4f44:	ldr	x10, [x19, #96]
    4f48:	add	x1, x10, w9, uxtw
    4f4c:	b	4e8c <deflateBound@@ZLIB_1.2.0+0x6b8>
    4f50:	cbz	w20, 500c <deflateBound@@ZLIB_1.2.0+0x838>
    4f54:	cmp	w20, #0x4
    4f58:	str	wzr, [x19, #5932]
    4f5c:	b.ne	4f74 <deflateBound@@ZLIB_1.2.0+0x7a0>  // b.any
    4f60:	ldr	x8, [x19, #152]
    4f64:	tbnz	x8, #63, 4f90 <deflateBound@@ZLIB_1.2.0+0x7bc>
    4f68:	ldr	x9, [x19, #96]
    4f6c:	add	x1, x9, w8, uxtw
    4f70:	b	4f94 <deflateBound@@ZLIB_1.2.0+0x7c0>
    4f74:	ldr	w8, [x19, #5900]
    4f78:	cbz	w8, 5004 <deflateBound@@ZLIB_1.2.0+0x830>
    4f7c:	ldr	x8, [x19, #152]
    4f80:	tbnz	x8, #63, 4fd0 <deflateBound@@ZLIB_1.2.0+0x7fc>
    4f84:	ldr	x9, [x19, #96]
    4f88:	add	x1, x9, w8, uxtw
    4f8c:	b	4fd4 <deflateBound@@ZLIB_1.2.0+0x800>
    4f90:	mov	x1, xzr
    4f94:	ldr	w9, [x19, #172]
    4f98:	mov	w3, #0x1                   	// #1
    4f9c:	mov	x0, x19
    4fa0:	sub	x2, x9, x8
    4fa4:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    4fa8:	ldr	w8, [x19, #172]
    4fac:	ldr	x0, [x19]
    4fb0:	str	x8, [x19, #152]
    4fb4:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4fb8:	ldr	x8, [x19]
    4fbc:	ldr	w8, [x8, #32]
    4fc0:	cmp	w8, #0x0
    4fc4:	mov	w8, #0x2                   	// #2
    4fc8:	cinc	w0, w8, ne  // ne = any
    4fcc:	b	5010 <deflateBound@@ZLIB_1.2.0+0x83c>
    4fd0:	mov	x1, xzr
    4fd4:	ldr	w9, [x19, #172]
    4fd8:	mov	x0, x19
    4fdc:	mov	w3, wzr
    4fe0:	sub	x2, x9, x8
    4fe4:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    4fe8:	ldr	w8, [x19, #172]
    4fec:	ldr	x0, [x19]
    4ff0:	str	x8, [x19, #152]
    4ff4:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    4ff8:	ldr	x8, [x19]
    4ffc:	ldr	w8, [x8, #32]
    5000:	cbz	w8, 500c <deflateBound@@ZLIB_1.2.0+0x838>
    5004:	mov	w0, #0x1                   	// #1
    5008:	b	5010 <deflateBound@@ZLIB_1.2.0+0x83c>
    500c:	mov	w0, wzr
    5010:	ldp	x20, x19, [sp, #16]
    5014:	ldp	x29, x30, [sp], #32
    5018:	ret
    501c:	stp	x29, x30, [sp, #-64]!
    5020:	stp	x22, x21, [sp, #32]
    5024:	adrp	x22, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    5028:	str	x23, [sp, #16]
    502c:	stp	x20, x19, [sp, #48]
    5030:	mov	w20, w1
    5034:	mov	x19, x0
    5038:	mov	w21, #0x1                   	// #1
    503c:	add	x22, x22, #0x0
    5040:	adrp	x23, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    5044:	mov	x29, sp
    5048:	b	508c <deflateBound@@ZLIB_1.2.0+0x8b8>
    504c:	ldr	x8, [x19, #152]
    5050:	tbnz	x8, #63, 5190 <deflateBound@@ZLIB_1.2.0+0x9bc>
    5054:	ldr	x9, [x19, #96]
    5058:	add	x1, x9, w8, uxtw
    505c:	ldr	w9, [x19, #172]
    5060:	mov	x0, x19
    5064:	mov	w3, wzr
    5068:	sub	x2, x9, x8
    506c:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5070:	ldr	w8, [x19, #172]
    5074:	ldr	x0, [x19]
    5078:	str	x8, [x19, #152]
    507c:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5080:	ldr	x8, [x19]
    5084:	ldr	w8, [x8, #32]
    5088:	cbz	w8, 53a8 <deflateBound@@ZLIB_1.2.0+0xbd4>
    508c:	ldr	w8, [x19, #180]
    5090:	cmp	w8, #0x102
    5094:	b.hi	50b4 <deflateBound@@ZLIB_1.2.0+0x8e0>  // b.pmore
    5098:	mov	x0, x19
    509c:	bl	35ac <deflateSetDictionary@@Base+0x23c>
    50a0:	ldr	w8, [x19, #180]
    50a4:	cbnz	w20, 50b0 <deflateBound@@ZLIB_1.2.0+0x8dc>
    50a8:	cmp	w8, #0x103
    50ac:	b.cc	53a8 <deflateBound@@ZLIB_1.2.0+0xbd4>  // b.lo, b.ul, b.last
    50b0:	cbz	w8, 52f0 <deflateBound@@ZLIB_1.2.0+0xb1c>
    50b4:	ldr	w8, [x19, #180]
    50b8:	str	wzr, [x19, #160]
    50bc:	cmp	w8, #0x3
    50c0:	b.cc	51ec <deflateBound@@ZLIB_1.2.0+0xa18>  // b.lo, b.ul, b.last
    50c4:	ldr	w9, [x19, #172]
    50c8:	cbz	w9, 51ec <deflateBound@@ZLIB_1.2.0+0xa18>
    50cc:	ldr	x10, [x19, #96]
    50d0:	add	x10, x10, x9
    50d4:	ldurb	w11, [x10, #-1]
    50d8:	ldrb	w9, [x10]
    50dc:	cmp	w11, w9
    50e0:	b.ne	51ec <deflateBound@@ZLIB_1.2.0+0xa18>  // b.any
    50e4:	ldrb	w9, [x10, #1]
    50e8:	cmp	w11, w9
    50ec:	b.ne	51ec <deflateBound@@ZLIB_1.2.0+0xa18>  // b.any
    50f0:	ldrb	w9, [x10, #2]
    50f4:	cmp	w11, w9
    50f8:	b.ne	51ec <deflateBound@@ZLIB_1.2.0+0xa18>  // b.any
    50fc:	mov	x12, xzr
    5100:	add	x9, x10, #0x102
    5104:	add	x13, x10, x12
    5108:	ldrb	w14, [x13, #3]
    510c:	cmp	w11, w14
    5110:	b.ne	5198 <deflateBound@@ZLIB_1.2.0+0x9c4>  // b.any
    5114:	ldrb	w13, [x13, #4]
    5118:	cmp	w11, w13
    511c:	b.ne	51a0 <deflateBound@@ZLIB_1.2.0+0x9cc>  // b.any
    5120:	add	x13, x10, x12
    5124:	ldrb	w14, [x13, #5]
    5128:	cmp	w11, w14
    512c:	b.ne	51ac <deflateBound@@ZLIB_1.2.0+0x9d8>  // b.any
    5130:	ldrb	w13, [x13, #6]
    5134:	cmp	w11, w13
    5138:	b.ne	51b4 <deflateBound@@ZLIB_1.2.0+0x9e0>  // b.any
    513c:	add	x13, x10, x12
    5140:	ldrb	w14, [x13, #7]
    5144:	cmp	w11, w14
    5148:	b.ne	51c0 <deflateBound@@ZLIB_1.2.0+0x9ec>  // b.any
    514c:	ldrb	w13, [x13, #8]
    5150:	cmp	w11, w13
    5154:	b.ne	51c8 <deflateBound@@ZLIB_1.2.0+0x9f4>  // b.any
    5158:	add	x13, x10, x12
    515c:	ldrb	w14, [x13, #9]
    5160:	cmp	w11, w14
    5164:	b.ne	51d4 <deflateBound@@ZLIB_1.2.0+0xa00>  // b.any
    5168:	add	x14, x12, #0x2
    516c:	cmp	x14, #0xf9
    5170:	add	x12, x12, #0x8
    5174:	b.hi	5184 <deflateBound@@ZLIB_1.2.0+0x9b0>  // b.pmore
    5178:	ldrb	w13, [x13, #10]
    517c:	cmp	w11, w13
    5180:	b.eq	5104 <deflateBound@@ZLIB_1.2.0+0x930>  // b.none
    5184:	add	x10, x10, x12
    5188:	add	x10, x10, #0x2
    518c:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    5190:	mov	x1, xzr
    5194:	b	505c <deflateBound@@ZLIB_1.2.0+0x888>
    5198:	add	x10, x13, #0x3
    519c:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    51a0:	add	x10, x10, x12
    51a4:	add	x10, x10, #0x4
    51a8:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    51ac:	add	x10, x13, #0x5
    51b0:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    51b4:	add	x10, x10, x12
    51b8:	add	x10, x10, #0x6
    51bc:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    51c0:	add	x10, x13, #0x7
    51c4:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    51c8:	add	x10, x10, x12
    51cc:	add	x10, x10, #0x8
    51d0:	b	51d8 <deflateBound@@ZLIB_1.2.0+0xa04>
    51d4:	add	x10, x13, #0x9
    51d8:	sub	w9, w10, w9
    51dc:	add	w9, w9, #0x102
    51e0:	cmp	w9, w8
    51e4:	csel	w8, w8, w9, hi  // hi = pmore
    51e8:	str	w8, [x19, #160]
    51ec:	ldr	w8, [x19, #160]
    51f0:	subs	w8, w8, #0x3
    51f4:	b.cc	5284 <deflateBound@@ZLIB_1.2.0+0xab0>  // b.lo, b.ul, b.last
    51f8:	ldr	x9, [x19, #5904]
    51fc:	ldr	w10, [x19, #5900]
    5200:	and	x11, x8, #0xff
    5204:	ldrb	w11, [x22, x11]
    5208:	mov	w12, #0x400                 	// #1024
    520c:	strh	w21, [x9, x10, lsl #1]
    5210:	add	w9, w10, #0x1
    5214:	str	w9, [x19, #5900]
    5218:	ldr	x9, [x19, #5888]
    521c:	bfi	x12, x11, #2, #8
    5220:	add	x12, x12, x19
    5224:	ldrb	w11, [x23, #3584]
    5228:	strb	w8, [x9, x10]
    522c:	ldrh	w8, [x12, #216]
    5230:	add	x9, x19, x11, lsl #2
    5234:	add	w8, w8, #0x1
    5238:	strh	w8, [x12, #216]
    523c:	ldrh	w8, [x9, #2504]
    5240:	add	w8, w8, #0x1
    5244:	strh	w8, [x9, #2504]
    5248:	ldr	w8, [x19, #160]
    524c:	ldr	w9, [x19, #180]
    5250:	ldr	w10, [x19, #172]
    5254:	ldr	w11, [x19, #5896]
    5258:	ldr	w12, [x19, #5900]
    525c:	sub	w9, w9, w8
    5260:	add	w8, w10, w8
    5264:	sub	w10, w11, #0x1
    5268:	cmp	w12, w10
    526c:	str	w9, [x19, #180]
    5270:	str	w8, [x19, #172]
    5274:	cset	w8, eq  // eq = none
    5278:	str	wzr, [x19, #160]
    527c:	cbz	w8, 508c <deflateBound@@ZLIB_1.2.0+0x8b8>
    5280:	b	504c <deflateBound@@ZLIB_1.2.0+0x878>
    5284:	ldr	x8, [x19, #96]
    5288:	ldr	w9, [x19, #172]
    528c:	ldr	x10, [x19, #5904]
    5290:	ldr	w11, [x19, #5900]
    5294:	ldrb	w8, [x8, x9]
    5298:	strh	wzr, [x10, x11, lsl #1]
    529c:	ldr	x9, [x19, #5888]
    52a0:	add	w10, w11, #0x1
    52a4:	str	w10, [x19, #5900]
    52a8:	add	x10, x19, x8, lsl #2
    52ac:	strb	w8, [x9, x11]
    52b0:	ldrh	w8, [x10, #212]
    52b4:	add	w8, w8, #0x1
    52b8:	strh	w8, [x10, #212]
    52bc:	ldr	w8, [x19, #5896]
    52c0:	ldr	w11, [x19, #5900]
    52c4:	ldr	w9, [x19, #180]
    52c8:	ldr	w10, [x19, #172]
    52cc:	sub	w8, w8, #0x1
    52d0:	cmp	w11, w8
    52d4:	sub	w9, w9, #0x1
    52d8:	add	w10, w10, #0x1
    52dc:	cset	w8, eq  // eq = none
    52e0:	str	w9, [x19, #180]
    52e4:	str	w10, [x19, #172]
    52e8:	cbz	w8, 508c <deflateBound@@ZLIB_1.2.0+0x8b8>
    52ec:	b	504c <deflateBound@@ZLIB_1.2.0+0x878>
    52f0:	cmp	w20, #0x4
    52f4:	str	wzr, [x19, #5932]
    52f8:	b.ne	5310 <deflateBound@@ZLIB_1.2.0+0xb3c>  // b.any
    52fc:	ldr	x8, [x19, #152]
    5300:	tbnz	x8, #63, 532c <deflateBound@@ZLIB_1.2.0+0xb58>
    5304:	ldr	x9, [x19, #96]
    5308:	add	x1, x9, w8, uxtw
    530c:	b	5330 <deflateBound@@ZLIB_1.2.0+0xb5c>
    5310:	ldr	w8, [x19, #5900]
    5314:	cbz	w8, 53a0 <deflateBound@@ZLIB_1.2.0+0xbcc>
    5318:	ldr	x8, [x19, #152]
    531c:	tbnz	x8, #63, 536c <deflateBound@@ZLIB_1.2.0+0xb98>
    5320:	ldr	x9, [x19, #96]
    5324:	add	x1, x9, w8, uxtw
    5328:	b	5370 <deflateBound@@ZLIB_1.2.0+0xb9c>
    532c:	mov	x1, xzr
    5330:	ldr	w9, [x19, #172]
    5334:	mov	w3, #0x1                   	// #1
    5338:	mov	x0, x19
    533c:	sub	x2, x9, x8
    5340:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5344:	ldr	w8, [x19, #172]
    5348:	ldr	x0, [x19]
    534c:	str	x8, [x19, #152]
    5350:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5354:	ldr	x8, [x19]
    5358:	ldr	w8, [x8, #32]
    535c:	cmp	w8, #0x0
    5360:	mov	w8, #0x2                   	// #2
    5364:	cinc	w0, w8, ne  // ne = any
    5368:	b	53ac <deflateBound@@ZLIB_1.2.0+0xbd8>
    536c:	mov	x1, xzr
    5370:	ldr	w9, [x19, #172]
    5374:	mov	x0, x19
    5378:	mov	w3, wzr
    537c:	sub	x2, x9, x8
    5380:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5384:	ldr	w8, [x19, #172]
    5388:	ldr	x0, [x19]
    538c:	str	x8, [x19, #152]
    5390:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5394:	ldr	x8, [x19]
    5398:	ldr	w8, [x8, #32]
    539c:	cbz	w8, 53a8 <deflateBound@@ZLIB_1.2.0+0xbd4>
    53a0:	mov	w0, #0x1                   	// #1
    53a4:	b	53ac <deflateBound@@ZLIB_1.2.0+0xbd8>
    53a8:	mov	w0, wzr
    53ac:	ldp	x20, x19, [sp, #48]
    53b0:	ldp	x22, x21, [sp, #32]
    53b4:	ldr	x23, [sp, #16]
    53b8:	ldp	x29, x30, [sp], #64
    53bc:	ret

00000000000053c0 <deflateCopy@@Base>:
    53c0:	stp	x29, x30, [sp, #-48]!
    53c4:	stp	x22, x21, [sp, #16]
    53c8:	mov	x21, x0
    53cc:	mov	x0, x1
    53d0:	stp	x20, x19, [sp, #32]
    53d4:	mov	x29, sp
    53d8:	mov	x20, x1
    53dc:	bl	3530 <deflateSetDictionary@@Base+0x1c0>
    53e0:	mov	w8, w0
    53e4:	mov	w0, #0xfffffffe            	// #-2
    53e8:	cbz	x21, 5574 <deflateCopy@@Base+0x1b4>
    53ec:	cbnz	w8, 5574 <deflateCopy@@Base+0x1b4>
    53f0:	ldp	q1, q0, [x20, #64]
    53f4:	ldr	x19, [x20, #56]
    53f8:	ldr	q2, [x20, #48]
    53fc:	ldr	q3, [x20, #96]
    5400:	stp	q1, q0, [x21, #64]
    5404:	ldp	q0, q1, [x20]
    5408:	ldr	q4, [x20, #32]
    540c:	ldr	x8, [x21, #64]
    5410:	ldr	x0, [x21, #80]
    5414:	mov	w1, #0x1                   	// #1
    5418:	mov	w2, #0x1740                	// #5952
    541c:	str	q3, [x21, #96]
    5420:	stp	q0, q1, [x21]
    5424:	stp	q4, q2, [x21, #32]
    5428:	blr	x8
    542c:	cbz	x0, 5570 <deflateCopy@@Base+0x1b0>
    5430:	mov	w2, #0x1740                	// #5952
    5434:	mov	x1, x19
    5438:	mov	x20, x0
    543c:	str	x0, [x21, #56]
    5440:	bl	23a0 <memcpy@plt>
    5444:	str	x21, [x20]
    5448:	ldr	x8, [x21, #64]
    544c:	ldr	x0, [x21, #80]
    5450:	ldr	w1, [x20, #80]
    5454:	mov	w2, #0x2                   	// #2
    5458:	blr	x8
    545c:	str	x0, [x20, #96]
    5460:	ldr	x8, [x21, #64]
    5464:	ldr	x0, [x21, #80]
    5468:	ldr	w1, [x20, #80]
    546c:	mov	w2, #0x2                   	// #2
    5470:	blr	x8
    5474:	str	x0, [x20, #112]
    5478:	ldr	x8, [x21, #64]
    547c:	ldr	x0, [x21, #80]
    5480:	ldr	w1, [x20, #132]
    5484:	mov	w2, #0x2                   	// #2
    5488:	blr	x8
    548c:	str	x0, [x20, #120]
    5490:	ldr	x8, [x21, #64]
    5494:	ldr	x0, [x21, #80]
    5498:	ldr	w1, [x20, #5896]
    549c:	mov	w2, #0x4                   	// #4
    54a0:	blr	x8
    54a4:	ldr	x8, [x20, #96]
    54a8:	str	x0, [x20, #16]
    54ac:	cbz	x8, 5568 <deflateCopy@@Base+0x1a8>
    54b0:	ldr	x9, [x20, #112]
    54b4:	cbz	x9, 5568 <deflateCopy@@Base+0x1a8>
    54b8:	mov	x22, x0
    54bc:	cbz	x0, 5568 <deflateCopy@@Base+0x1a8>
    54c0:	ldr	x9, [x20, #120]
    54c4:	cbz	x9, 5568 <deflateCopy@@Base+0x1a8>
    54c8:	ldr	w9, [x20, #80]
    54cc:	ldr	x1, [x19, #96]
    54d0:	mov	x0, x8
    54d4:	lsl	w2, w9, #1
    54d8:	bl	23a0 <memcpy@plt>
    54dc:	ldr	w8, [x20, #80]
    54e0:	ldr	x0, [x20, #112]
    54e4:	ldr	x1, [x19, #112]
    54e8:	lsl	x2, x8, #1
    54ec:	bl	23a0 <memcpy@plt>
    54f0:	ldr	w8, [x20, #132]
    54f4:	ldr	x0, [x20, #120]
    54f8:	ldr	x1, [x19, #120]
    54fc:	lsl	x2, x8, #1
    5500:	bl	23a0 <memcpy@plt>
    5504:	ldr	x0, [x20, #16]
    5508:	ldr	x1, [x19, #16]
    550c:	ldr	w2, [x20, #24]
    5510:	bl	23a0 <memcpy@plt>
    5514:	add	x11, x20, #0xd4
    5518:	ldr	x8, [x19, #32]
    551c:	ldr	x9, [x19, #16]
    5520:	str	x11, [x20, #2904]
    5524:	add	x11, x20, #0x9c8
    5528:	ldr	w10, [x20, #5896]
    552c:	str	x11, [x20, #2928]
    5530:	ldr	x11, [x20, #16]
    5534:	sub	x8, x8, x9
    5538:	and	x9, x10, #0xfffffffe
    553c:	add	x10, x10, x10, lsl #1
    5540:	add	x8, x11, x8
    5544:	mov	w0, wzr
    5548:	add	x9, x22, x9
    554c:	add	x10, x11, x10
    5550:	str	x8, [x20, #32]
    5554:	add	x8, x20, #0xabc
    5558:	str	x9, [x20, #5904]
    555c:	str	x10, [x20, #5888]
    5560:	str	x8, [x20, #2952]
    5564:	b	5574 <deflateCopy@@Base+0x1b4>
    5568:	mov	x0, x21
    556c:	bl	2590 <deflateEnd@plt>
    5570:	mov	w0, #0xfffffffc            	// #-4
    5574:	ldp	x20, x19, [sp, #32]
    5578:	ldp	x22, x21, [sp, #16]
    557c:	ldp	x29, x30, [sp], #48
    5580:	ret
    5584:	stp	x29, x30, [sp, #-48]!
    5588:	stp	x22, x21, [sp, #16]
    558c:	adrp	x21, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    5590:	adrp	x22, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    5594:	stp	x20, x19, [sp, #32]
    5598:	mov	w20, w1
    559c:	mov	x19, x0
    55a0:	add	x21, x21, #0x0
    55a4:	add	x22, x22, #0xe00
    55a8:	mov	x29, sp
    55ac:	b	55f0 <deflateCopy@@Base+0x230>
    55b0:	ldr	x8, [x19, #152]
    55b4:	tbnz	x8, #63, 5874 <deflateCopy@@Base+0x4b4>
    55b8:	ldr	x9, [x19, #96]
    55bc:	add	x1, x9, w8, uxtw
    55c0:	ldr	w9, [x19, #172]
    55c4:	mov	x0, x19
    55c8:	mov	w3, wzr
    55cc:	sub	x2, x9, x8
    55d0:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    55d4:	ldr	w8, [x19, #172]
    55d8:	ldr	x0, [x19]
    55dc:	str	x8, [x19, #152]
    55e0:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    55e4:	ldr	x8, [x19]
    55e8:	ldr	w8, [x8, #32]
    55ec:	cbz	w8, 593c <deflateCopy@@Base+0x57c>
    55f0:	ldr	w8, [x19, #180]
    55f4:	cmp	w8, #0x105
    55f8:	b.hi	5618 <deflateCopy@@Base+0x258>  // b.pmore
    55fc:	mov	x0, x19
    5600:	bl	35ac <deflateSetDictionary@@Base+0x23c>
    5604:	ldr	w8, [x19, #180]
    5608:	cbnz	w20, 5614 <deflateCopy@@Base+0x254>
    560c:	cmp	w8, #0x106
    5610:	b.cc	593c <deflateCopy@@Base+0x57c>  // b.lo, b.ul, b.last
    5614:	cbz	w8, 587c <deflateCopy@@Base+0x4bc>
    5618:	ldr	w8, [x19, #180]
    561c:	cmp	w8, #0x3
    5620:	b.cc	5670 <deflateCopy@@Base+0x2b0>  // b.lo, b.ul, b.last
    5624:	ldr	w9, [x19, #172]
    5628:	ldr	x10, [x19, #96]
    562c:	ldr	w8, [x19, #128]
    5630:	ldp	w12, w11, [x19, #140]
    5634:	add	w13, w9, #0x2
    5638:	ldrb	w10, [x10, w13, uxtw]
    563c:	lsl	w8, w8, w11
    5640:	ldp	x13, x11, [x19, #112]
    5644:	eor	w8, w8, w10
    5648:	and	x8, x8, x12
    564c:	ldr	w10, [x19, #88]
    5650:	str	w8, [x19, #128]
    5654:	lsl	x8, x8, #1
    5658:	ldrh	w1, [x11, x8]
    565c:	and	x10, x10, x9
    5660:	strh	w1, [x13, x10, lsl #1]
    5664:	strh	w9, [x11, x8]
    5668:	cbnz	w1, 5678 <deflateCopy@@Base+0x2b8>
    566c:	b	569c <deflateCopy@@Base+0x2dc>
    5670:	mov	w1, wzr
    5674:	cbz	w1, 569c <deflateCopy@@Base+0x2dc>
    5678:	ldr	w8, [x19, #172]
    567c:	ldr	w9, [x19, #80]
    5680:	sub	w8, w8, w1
    5684:	sub	w9, w9, #0x106
    5688:	cmp	w8, w9
    568c:	b.hi	569c <deflateCopy@@Base+0x2dc>  // b.pmore
    5690:	mov	x0, x19
    5694:	bl	5e04 <deflateCopy@@Base+0xa44>
    5698:	str	w0, [x19, #160]
    569c:	ldr	w8, [x19, #160]
    56a0:	subs	w8, w8, #0x3
    56a4:	b.cc	57c8 <deflateCopy@@Base+0x408>  // b.lo, b.ul, b.last
    56a8:	ldp	w9, w10, [x19, #172]
    56ac:	ldr	x11, [x19, #5904]
    56b0:	ldr	w12, [x19, #5900]
    56b4:	and	x13, x8, #0xff
    56b8:	ldrb	w13, [x21, x13]
    56bc:	sub	w9, w9, w10
    56c0:	mov	w10, #0x400                 	// #1024
    56c4:	strh	w9, [x11, x12, lsl #1]
    56c8:	add	w11, w12, #0x1
    56cc:	sub	w9, w9, #0x1
    56d0:	str	w11, [x19, #5900]
    56d4:	bfi	x10, x13, #2, #8
    56d8:	ldr	x11, [x19, #5888]
    56dc:	and	w13, w9, #0xffff
    56e0:	cmp	w13, #0x100
    56e4:	ubfx	w13, w9, #7, #9
    56e8:	add	w13, w13, #0x100
    56ec:	csel	w9, w9, w13, cc  // cc = lo, ul, last
    56f0:	add	x10, x10, x19
    56f4:	and	x9, x9, #0xffff
    56f8:	strb	w8, [x11, x12]
    56fc:	ldrb	w8, [x22, x9]
    5700:	ldrh	w9, [x10, #216]
    5704:	add	x8, x19, x8, lsl #2
    5708:	add	w9, w9, #0x1
    570c:	strh	w9, [x10, #216]
    5710:	ldrh	w9, [x8, #2504]
    5714:	add	w9, w9, #0x1
    5718:	strh	w9, [x8, #2504]
    571c:	ldr	w8, [x19, #5896]
    5720:	ldr	w12, [x19, #160]
    5724:	ldr	w9, [x19, #180]
    5728:	ldr	w10, [x19, #5900]
    572c:	sub	w8, w8, #0x1
    5730:	sub	w9, w9, w12
    5734:	cmp	w10, w8
    5738:	cset	w8, eq  // eq = none
    573c:	cmp	w9, #0x3
    5740:	str	w9, [x19, #180]
    5744:	b.cc	5834 <deflateCopy@@Base+0x474>  // b.lo, b.ul, b.last
    5748:	ldr	w9, [x19, #192]
    574c:	cmp	w12, w9
    5750:	b.hi	5834 <deflateCopy@@Base+0x474>  // b.pmore
    5754:	ldr	x9, [x19, #96]
    5758:	ldp	w11, w10, [x19, #140]
    575c:	ldp	x14, x13, [x19, #112]
    5760:	ldr	w15, [x19, #88]
    5764:	sub	w12, w12, #0x1
    5768:	str	w12, [x19, #160]
    576c:	ldr	w12, [x19, #172]
    5770:	ldr	w16, [x19, #128]
    5774:	add	w17, w12, #0x1
    5778:	add	w18, w12, #0x3
    577c:	str	w17, [x19, #172]
    5780:	ldrb	w18, [x9, w18, uxtw]
    5784:	lsl	w16, w16, w10
    5788:	and	x0, x15, x17
    578c:	eor	w16, w16, w18
    5790:	and	x16, x16, x11
    5794:	str	w16, [x19, #128]
    5798:	lsl	x16, x16, #1
    579c:	ldrh	w18, [x13, x16]
    57a0:	strh	w18, [x14, x0, lsl #1]
    57a4:	strh	w17, [x13, x16]
    57a8:	ldr	w16, [x19, #160]
    57ac:	subs	w16, w16, #0x1
    57b0:	str	w16, [x19, #160]
    57b4:	b.ne	576c <deflateCopy@@Base+0x3ac>  // b.any
    57b8:	add	w9, w12, #0x2
    57bc:	str	w9, [x19, #172]
    57c0:	cbz	w8, 55f0 <deflateCopy@@Base+0x230>
    57c4:	b	55b0 <deflateCopy@@Base+0x1f0>
    57c8:	ldr	x8, [x19, #96]
    57cc:	ldr	w9, [x19, #172]
    57d0:	ldr	x10, [x19, #5904]
    57d4:	ldr	w11, [x19, #5900]
    57d8:	ldrb	w8, [x8, x9]
    57dc:	strh	wzr, [x10, x11, lsl #1]
    57e0:	ldr	x9, [x19, #5888]
    57e4:	add	w10, w11, #0x1
    57e8:	str	w10, [x19, #5900]
    57ec:	add	x10, x19, x8, lsl #2
    57f0:	strb	w8, [x9, x11]
    57f4:	ldrh	w8, [x10, #212]
    57f8:	add	w8, w8, #0x1
    57fc:	strh	w8, [x10, #212]
    5800:	ldr	w8, [x19, #5896]
    5804:	ldr	w11, [x19, #5900]
    5808:	ldr	w9, [x19, #180]
    580c:	ldr	w10, [x19, #172]
    5810:	sub	w8, w8, #0x1
    5814:	cmp	w11, w8
    5818:	sub	w9, w9, #0x1
    581c:	add	w10, w10, #0x1
    5820:	cset	w8, eq  // eq = none
    5824:	str	w9, [x19, #180]
    5828:	str	w10, [x19, #172]
    582c:	cbz	w8, 55f0 <deflateCopy@@Base+0x230>
    5830:	b	55b0 <deflateCopy@@Base+0x1f0>
    5834:	ldr	w9, [x19, #172]
    5838:	ldr	x10, [x19, #96]
    583c:	str	wzr, [x19, #160]
    5840:	add	w9, w9, w12
    5844:	str	w9, [x19, #172]
    5848:	ldrb	w11, [x10, w9, uxtw]
    584c:	add	w9, w9, #0x1
    5850:	str	w11, [x19, #128]
    5854:	ldrb	w9, [x10, w9, uxtw]
    5858:	ldp	w10, w12, [x19, #140]
    585c:	lsl	w11, w11, w12
    5860:	eor	w9, w11, w9
    5864:	and	w9, w9, w10
    5868:	str	w9, [x19, #128]
    586c:	cbz	w8, 55f0 <deflateCopy@@Base+0x230>
    5870:	b	55b0 <deflateCopy@@Base+0x1f0>
    5874:	mov	x1, xzr
    5878:	b	55c0 <deflateCopy@@Base+0x200>
    587c:	ldr	w8, [x19, #172]
    5880:	mov	w9, #0x2                   	// #2
    5884:	cmp	w8, #0x2
    5888:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    588c:	cmp	w20, #0x4
    5890:	str	w9, [x19, #5932]
    5894:	b.ne	58ac <deflateCopy@@Base+0x4ec>  // b.any
    5898:	ldr	x9, [x19, #152]
    589c:	tbnz	x9, #63, 58c8 <deflateCopy@@Base+0x508>
    58a0:	ldr	x10, [x19, #96]
    58a4:	add	x1, x10, w9, uxtw
    58a8:	b	58cc <deflateCopy@@Base+0x50c>
    58ac:	ldr	w9, [x19, #5900]
    58b0:	cbz	w9, 5934 <deflateCopy@@Base+0x574>
    58b4:	ldr	x9, [x19, #152]
    58b8:	tbnz	x9, #63, 5904 <deflateCopy@@Base+0x544>
    58bc:	ldr	x10, [x19, #96]
    58c0:	add	x1, x10, w9, uxtw
    58c4:	b	5908 <deflateCopy@@Base+0x548>
    58c8:	mov	x1, xzr
    58cc:	sub	x2, x8, x9
    58d0:	mov	w3, #0x1                   	// #1
    58d4:	mov	x0, x19
    58d8:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    58dc:	ldr	w8, [x19, #172]
    58e0:	ldr	x0, [x19]
    58e4:	str	x8, [x19, #152]
    58e8:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    58ec:	ldr	x8, [x19]
    58f0:	ldr	w8, [x8, #32]
    58f4:	cmp	w8, #0x0
    58f8:	mov	w8, #0x2                   	// #2
    58fc:	cinc	w0, w8, ne  // ne = any
    5900:	b	5940 <deflateCopy@@Base+0x580>
    5904:	mov	x1, xzr
    5908:	sub	x2, x8, x9
    590c:	mov	x0, x19
    5910:	mov	w3, wzr
    5914:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5918:	ldr	w8, [x19, #172]
    591c:	ldr	x0, [x19]
    5920:	str	x8, [x19, #152]
    5924:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5928:	ldr	x8, [x19]
    592c:	ldr	w8, [x8, #32]
    5930:	cbz	w8, 593c <deflateCopy@@Base+0x57c>
    5934:	mov	w0, #0x1                   	// #1
    5938:	b	5940 <deflateCopy@@Base+0x580>
    593c:	mov	w0, wzr
    5940:	ldp	x20, x19, [sp, #32]
    5944:	ldp	x22, x21, [sp, #16]
    5948:	ldp	x29, x30, [sp], #48
    594c:	ret
    5950:	stp	x29, x30, [sp, #-64]!
    5954:	stp	x24, x23, [sp, #16]
    5958:	stp	x22, x21, [sp, #32]
    595c:	adrp	x22, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    5960:	adrp	x23, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    5964:	stp	x20, x19, [sp, #48]
    5968:	mov	w20, w1
    596c:	mov	x19, x0
    5970:	mov	w21, #0x2                   	// #2
    5974:	add	x22, x22, #0x0
    5978:	add	x23, x23, #0xe00
    597c:	mov	w24, #0x1                   	// #1
    5980:	mov	x29, sp
    5984:	b	59d8 <deflateCopy@@Base+0x618>
    5988:	ldr	x9, [x19, #96]
    598c:	add	x1, x9, w8, uxtw
    5990:	ldr	w9, [x19, #172]
    5994:	mov	x0, x19
    5998:	mov	w3, wzr
    599c:	sub	x2, x9, x8
    59a0:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    59a4:	ldr	w8, [x19, #172]
    59a8:	ldr	x0, [x19]
    59ac:	str	x8, [x19, #152]
    59b0:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    59b4:	ldr	w8, [x19, #172]
    59b8:	ldr	w9, [x19, #180]
    59bc:	ldr	x10, [x19]
    59c0:	add	w8, w8, #0x1
    59c4:	sub	w9, w9, #0x1
    59c8:	str	w8, [x19, #172]
    59cc:	str	w9, [x19, #180]
    59d0:	ldr	w8, [x10, #32]
    59d4:	cbz	w8, 5dec <deflateCopy@@Base+0xa2c>
    59d8:	ldr	w8, [x19, #180]
    59dc:	cmp	w8, #0x105
    59e0:	b.hi	5a00 <deflateCopy@@Base+0x640>  // b.pmore
    59e4:	mov	x0, x19
    59e8:	bl	35ac <deflateSetDictionary@@Base+0x23c>
    59ec:	ldr	w8, [x19, #180]
    59f0:	cbnz	w20, 59fc <deflateCopy@@Base+0x63c>
    59f4:	cmp	w8, #0x106
    59f8:	b.cc	5dec <deflateCopy@@Base+0xa2c>  // b.lo, b.ul, b.last
    59fc:	cbz	w8, 5ce4 <deflateCopy@@Base+0x924>
    5a00:	ldr	w8, [x19, #180]
    5a04:	cmp	w8, #0x3
    5a08:	b.cc	5a54 <deflateCopy@@Base+0x694>  // b.lo, b.ul, b.last
    5a0c:	ldr	w9, [x19, #172]
    5a10:	ldr	x10, [x19, #96]
    5a14:	ldr	w8, [x19, #128]
    5a18:	ldp	w12, w11, [x19, #140]
    5a1c:	add	w13, w9, #0x2
    5a20:	ldrb	w10, [x10, w13, uxtw]
    5a24:	lsl	w8, w8, w11
    5a28:	ldp	x13, x11, [x19, #112]
    5a2c:	eor	w8, w8, w10
    5a30:	and	x8, x8, x12
    5a34:	ldr	w10, [x19, #88]
    5a38:	str	w8, [x19, #128]
    5a3c:	lsl	x8, x8, #1
    5a40:	ldrh	w1, [x11, x8]
    5a44:	and	x10, x10, x9
    5a48:	strh	w1, [x13, x10, lsl #1]
    5a4c:	strh	w9, [x11, x8]
    5a50:	b	5a58 <deflateCopy@@Base+0x698>
    5a54:	mov	w1, wzr
    5a58:	ldr	w8, [x19, #160]
    5a5c:	ldr	w9, [x19, #176]
    5a60:	str	w8, [x19, #184]
    5a64:	stp	w21, w9, [x19, #160]
    5a68:	cbz	w1, 5ad0 <deflateCopy@@Base+0x710>
    5a6c:	ldr	w9, [x19, #192]
    5a70:	cmp	w8, w9
    5a74:	b.cs	5ad0 <deflateCopy@@Base+0x710>  // b.hs, b.nlast
    5a78:	ldr	w8, [x19, #172]
    5a7c:	ldr	w9, [x19, #80]
    5a80:	sub	w8, w8, w1
    5a84:	sub	w9, w9, #0x106
    5a88:	cmp	w8, w9
    5a8c:	b.hi	5ad0 <deflateCopy@@Base+0x710>  // b.pmore
    5a90:	mov	x0, x19
    5a94:	bl	5e04 <deflateCopy@@Base+0xa44>
    5a98:	cmp	w0, #0x5
    5a9c:	str	w0, [x19, #160]
    5aa0:	b.hi	5ad0 <deflateCopy@@Base+0x710>  // b.pmore
    5aa4:	ldr	w8, [x19, #200]
    5aa8:	cmp	w8, #0x1
    5aac:	b.ne	5ab8 <deflateCopy@@Base+0x6f8>  // b.any
    5ab0:	str	w21, [x19, #160]
    5ab4:	b	5ad0 <deflateCopy@@Base+0x710>
    5ab8:	cmp	w0, #0x3
    5abc:	b.ne	5ad0 <deflateCopy@@Base+0x710>  // b.any
    5ac0:	ldp	w8, w9, [x19, #172]
    5ac4:	sub	w8, w8, w9
    5ac8:	cmp	w8, #0x1, lsl #12
    5acc:	b.hi	5ab0 <deflateCopy@@Base+0x6f0>  // b.pmore
    5ad0:	ldr	w9, [x19, #184]
    5ad4:	subs	w8, w9, #0x3
    5ad8:	b.cc	5ae8 <deflateCopy@@Base+0x728>  // b.lo, b.ul, b.last
    5adc:	ldr	w10, [x19, #160]
    5ae0:	cmp	w10, w9
    5ae4:	b.ls	5b6c <deflateCopy@@Base+0x7ac>  // b.plast
    5ae8:	ldr	w8, [x19, #168]
    5aec:	cbz	w8, 5b50 <deflateCopy@@Base+0x790>
    5af0:	ldr	w9, [x19, #172]
    5af4:	ldr	x8, [x19, #96]
    5af8:	ldr	x10, [x19, #5904]
    5afc:	ldr	w11, [x19, #5900]
    5b00:	sub	w9, w9, #0x1
    5b04:	ldrb	w8, [x8, w9, uxtw]
    5b08:	strh	wzr, [x10, x11, lsl #1]
    5b0c:	ldr	x9, [x19, #5888]
    5b10:	add	w10, w11, #0x1
    5b14:	str	w10, [x19, #5900]
    5b18:	strb	w8, [x9, x11]
    5b1c:	add	x8, x19, x8, lsl #2
    5b20:	ldrh	w9, [x8, #212]
    5b24:	add	w9, w9, #0x1
    5b28:	strh	w9, [x8, #212]
    5b2c:	ldr	w8, [x19, #5896]
    5b30:	ldr	w9, [x19, #5900]
    5b34:	sub	w8, w8, #0x1
    5b38:	cmp	w9, w8
    5b3c:	b.ne	59b4 <deflateCopy@@Base+0x5f4>  // b.any
    5b40:	ldr	x8, [x19, #152]
    5b44:	tbz	x8, #63, 5988 <deflateCopy@@Base+0x5c8>
    5b48:	mov	x1, xzr
    5b4c:	b	5990 <deflateCopy@@Base+0x5d0>
    5b50:	ldr	w8, [x19, #172]
    5b54:	ldr	w9, [x19, #180]
    5b58:	add	w8, w8, #0x1
    5b5c:	sub	w9, w9, #0x1
    5b60:	stp	w24, w8, [x19, #168]
    5b64:	str	w9, [x19, #180]
    5b68:	b	59d8 <deflateCopy@@Base+0x618>
    5b6c:	ldr	w11, [x19, #164]
    5b70:	ldr	w9, [x19, #172]
    5b74:	ldr	x12, [x19, #5904]
    5b78:	ldr	w13, [x19, #5900]
    5b7c:	mvn	w11, w11
    5b80:	add	w11, w11, w9
    5b84:	ldr	w10, [x19, #180]
    5b88:	strh	w11, [x12, x13, lsl #1]
    5b8c:	and	x14, x8, #0xff
    5b90:	ldr	x12, [x19, #5888]
    5b94:	ldrb	w14, [x22, x14]
    5b98:	add	w15, w13, #0x1
    5b9c:	sub	w11, w11, #0x1
    5ba0:	str	w15, [x19, #5900]
    5ba4:	strb	w8, [x12, x13]
    5ba8:	mov	w8, #0x400                 	// #1024
    5bac:	and	w12, w11, #0xffff
    5bb0:	ubfx	w13, w11, #7, #9
    5bb4:	bfi	x8, x14, #2, #8
    5bb8:	add	w13, w13, #0x100
    5bbc:	cmp	w12, #0x100
    5bc0:	add	x8, x8, x19
    5bc4:	csel	w11, w11, w13, cc  // cc = lo, ul, last
    5bc8:	and	x11, x11, #0xffff
    5bcc:	ldrh	w12, [x8, #216]
    5bd0:	ldrb	w11, [x23, x11]
    5bd4:	add	w9, w9, w10
    5bd8:	sub	w10, w9, #0x3
    5bdc:	add	w12, w12, #0x1
    5be0:	add	x11, x19, x11, lsl #2
    5be4:	strh	w12, [x8, #216]
    5be8:	ldrh	w8, [x11, #2504]
    5bec:	add	w8, w8, #0x1
    5bf0:	strh	w8, [x11, #2504]
    5bf4:	ldr	w11, [x19, #5896]
    5bf8:	ldp	w13, w12, [x19, #180]
    5bfc:	ldr	w8, [x19, #5900]
    5c00:	sub	w9, w11, #0x1
    5c04:	sub	w11, w13, w12
    5c08:	sub	w12, w12, #0x2
    5c0c:	add	w11, w11, #0x1
    5c10:	stp	w11, w12, [x19, #180]
    5c14:	b	5c28 <deflateCopy@@Base+0x868>
    5c18:	ldr	w12, [x19, #184]
    5c1c:	subs	w12, w12, #0x1
    5c20:	str	w12, [x19, #184]
    5c24:	b.eq	5c84 <deflateCopy@@Base+0x8c4>  // b.none
    5c28:	ldr	w11, [x19, #172]
    5c2c:	add	w12, w11, #0x1
    5c30:	cmp	w12, w10
    5c34:	str	w12, [x19, #172]
    5c38:	b.hi	5c18 <deflateCopy@@Base+0x858>  // b.pmore
    5c3c:	ldr	x14, [x19, #96]
    5c40:	ldr	w13, [x19, #128]
    5c44:	add	w15, w11, #0x3
    5c48:	ldp	w17, w16, [x19, #140]
    5c4c:	ldrb	w14, [x14, w15, uxtw]
    5c50:	ldp	x18, x15, [x19, #112]
    5c54:	lsl	w13, w13, w16
    5c58:	eor	w13, w13, w14
    5c5c:	and	x13, x13, x17
    5c60:	ldr	w16, [x19, #88]
    5c64:	str	w13, [x19, #128]
    5c68:	lsl	x13, x13, #1
    5c6c:	ldrh	w14, [x15, x13]
    5c70:	mov	w17, w12
    5c74:	and	x16, x16, x17
    5c78:	strh	w14, [x18, x16, lsl #1]
    5c7c:	strh	w12, [x15, x13]
    5c80:	b	5c18 <deflateCopy@@Base+0x858>
    5c84:	add	w10, w11, #0x2
    5c88:	cmp	w8, w9
    5c8c:	str	w21, [x19, #160]
    5c90:	stp	wzr, w10, [x19, #168]
    5c94:	b.ne	59d8 <deflateCopy@@Base+0x618>  // b.any
    5c98:	ldr	x8, [x19, #152]
    5c9c:	tbnz	x8, #63, 5cac <deflateCopy@@Base+0x8ec>
    5ca0:	ldr	x9, [x19, #96]
    5ca4:	add	x1, x9, w8, uxtw
    5ca8:	b	5cb0 <deflateCopy@@Base+0x8f0>
    5cac:	mov	x1, xzr
    5cb0:	mov	w9, w10
    5cb4:	sub	x2, x9, x8
    5cb8:	mov	x0, x19
    5cbc:	mov	w3, wzr
    5cc0:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5cc4:	ldr	w8, [x19, #172]
    5cc8:	ldr	x0, [x19]
    5ccc:	str	x8, [x19, #152]
    5cd0:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5cd4:	ldr	x8, [x19]
    5cd8:	ldr	w8, [x8, #32]
    5cdc:	cbnz	w8, 59d8 <deflateCopy@@Base+0x618>
    5ce0:	b	5dec <deflateCopy@@Base+0xa2c>
    5ce4:	ldr	w8, [x19, #168]
    5ce8:	cbz	w8, 5d2c <deflateCopy@@Base+0x96c>
    5cec:	ldr	w9, [x19, #172]
    5cf0:	ldr	x8, [x19, #96]
    5cf4:	ldr	x10, [x19, #5904]
    5cf8:	ldr	w11, [x19, #5900]
    5cfc:	sub	w9, w9, #0x1
    5d00:	ldrb	w8, [x8, w9, uxtw]
    5d04:	strh	wzr, [x10, x11, lsl #1]
    5d08:	ldr	x9, [x19, #5888]
    5d0c:	add	w10, w11, #0x1
    5d10:	str	w10, [x19, #5900]
    5d14:	add	x10, x19, x8, lsl #2
    5d18:	strb	w8, [x9, x11]
    5d1c:	ldrh	w8, [x10, #212]
    5d20:	add	w8, w8, #0x1
    5d24:	strh	w8, [x10, #212]
    5d28:	str	wzr, [x19, #168]
    5d2c:	ldr	w8, [x19, #172]
    5d30:	mov	w9, #0x2                   	// #2
    5d34:	cmp	w8, #0x2
    5d38:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    5d3c:	cmp	w20, #0x4
    5d40:	str	w9, [x19, #5932]
    5d44:	b.ne	5d5c <deflateCopy@@Base+0x99c>  // b.any
    5d48:	ldr	x9, [x19, #152]
    5d4c:	tbnz	x9, #63, 5d78 <deflateCopy@@Base+0x9b8>
    5d50:	ldr	x10, [x19, #96]
    5d54:	add	x1, x10, w9, uxtw
    5d58:	b	5d7c <deflateCopy@@Base+0x9bc>
    5d5c:	ldr	w9, [x19, #5900]
    5d60:	cbz	w9, 5de4 <deflateCopy@@Base+0xa24>
    5d64:	ldr	x9, [x19, #152]
    5d68:	tbnz	x9, #63, 5db4 <deflateCopy@@Base+0x9f4>
    5d6c:	ldr	x10, [x19, #96]
    5d70:	add	x1, x10, w9, uxtw
    5d74:	b	5db8 <deflateCopy@@Base+0x9f8>
    5d78:	mov	x1, xzr
    5d7c:	sub	x2, x8, x9
    5d80:	mov	w3, #0x1                   	// #1
    5d84:	mov	x0, x19
    5d88:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5d8c:	ldr	w8, [x19, #172]
    5d90:	ldr	x0, [x19]
    5d94:	str	x8, [x19, #152]
    5d98:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5d9c:	ldr	x8, [x19]
    5da0:	ldr	w8, [x8, #32]
    5da4:	cmp	w8, #0x0
    5da8:	mov	w8, #0x2                   	// #2
    5dac:	cinc	w0, w8, ne  // ne = any
    5db0:	b	5df0 <deflateCopy@@Base+0xa30>
    5db4:	mov	x1, xzr
    5db8:	sub	x2, x8, x9
    5dbc:	mov	x0, x19
    5dc0:	mov	w3, wzr
    5dc4:	bl	a0fc <inflateCodesUsed@@ZLIB_1.2.9+0x858>
    5dc8:	ldr	w8, [x19, #172]
    5dcc:	ldr	x0, [x19]
    5dd0:	str	x8, [x19, #152]
    5dd4:	bl	4904 <deflateBound@@ZLIB_1.2.0+0x130>
    5dd8:	ldr	x8, [x19]
    5ddc:	ldr	w8, [x8, #32]
    5de0:	cbz	w8, 5dec <deflateCopy@@Base+0xa2c>
    5de4:	mov	w0, #0x1                   	// #1
    5de8:	b	5df0 <deflateCopy@@Base+0xa30>
    5dec:	mov	w0, wzr
    5df0:	ldp	x20, x19, [sp, #48]
    5df4:	ldp	x22, x21, [sp, #32]
    5df8:	ldp	x24, x23, [sp, #16]
    5dfc:	ldp	x29, x30, [sp], #64
    5e00:	ret
    5e04:	stp	x22, x21, [sp, #-32]!
    5e08:	stp	x20, x19, [sp, #16]
    5e0c:	ldr	x8, [x0, #96]
    5e10:	ldr	w15, [x0, #172]
    5e14:	ldr	w14, [x0, #80]
    5e18:	ldp	w12, w17, [x0, #184]
    5e1c:	ldp	w2, w18, [x0, #204]
    5e20:	sxtw	x12, w12
    5e24:	ldr	w11, [x0, #180]
    5e28:	add	x13, x8, x15
    5e2c:	sub	w16, w14, #0x106
    5e30:	add	x5, x13, x12
    5e34:	ldr	x9, [x0, #112]
    5e38:	ldr	w10, [x0, #88]
    5e3c:	subs	w16, w15, w16
    5e40:	ldurb	w4, [x5, #-1]
    5e44:	ldrb	w5, [x5]
    5e48:	lsr	w3, w17, #2
    5e4c:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    5e50:	cmp	w12, w2
    5e54:	csel	w17, w17, w3, cc  // cc = lo, ul, last
    5e58:	cmp	w18, w11
    5e5c:	add	x14, x8, #0x5
    5e60:	add	x15, x13, #0x102
    5e64:	csel	w18, w11, w18, hi  // hi = pmore
    5e68:	mov	w2, #0x102                 	// #258
    5e6c:	mov	x3, #0x10100000000         	// #1103806595072
    5e70:	mov	w6, w1
    5e74:	add	x7, x8, x6
    5e78:	sxtw	x19, w12
    5e7c:	ldrb	w20, [x7, x19]
    5e80:	cmp	w20, w5, uxtb
    5e84:	b.ne	5ff0 <deflateCopy@@Base+0xc30>  // b.any
    5e88:	add	x19, x19, x7
    5e8c:	ldurb	w19, [x19, #-1]
    5e90:	cmp	w19, w4, uxtb
    5e94:	b.ne	5ff0 <deflateCopy@@Base+0xc30>  // b.any
    5e98:	ldrb	w19, [x7]
    5e9c:	ldrb	w20, [x13]
    5ea0:	cmp	w19, w20
    5ea4:	b.ne	5ff0 <deflateCopy@@Base+0xc30>  // b.any
    5ea8:	ldrb	w7, [x7, #1]
    5eac:	ldrb	w19, [x13, #1]
    5eb0:	cmp	w7, w19
    5eb4:	b.ne	5ff0 <deflateCopy@@Base+0xc30>  // b.any
    5eb8:	mov	x7, xzr
    5ebc:	add	x6, x14, x6
    5ec0:	add	x19, x13, x7
    5ec4:	add	x20, x6, x7
    5ec8:	ldrb	w21, [x19, #3]
    5ecc:	ldurb	w22, [x20, #-2]
    5ed0:	cmp	w21, w22
    5ed4:	b.ne	5f80 <deflateCopy@@Base+0xbc0>  // b.any
    5ed8:	ldrb	w19, [x19, #4]
    5edc:	ldurb	w20, [x20, #-1]
    5ee0:	cmp	w19, w20
    5ee4:	b.ne	5f88 <deflateCopy@@Base+0xbc8>  // b.any
    5ee8:	add	x19, x13, x7
    5eec:	ldrb	w20, [x19, #5]
    5ef0:	ldrb	w21, [x6, x7]
    5ef4:	cmp	w20, w21
    5ef8:	b.ne	5f94 <deflateCopy@@Base+0xbd4>  // b.any
    5efc:	add	x20, x6, x7
    5f00:	ldrb	w19, [x19, #6]
    5f04:	ldrb	w21, [x20, #1]
    5f08:	cmp	w19, w21
    5f0c:	b.ne	5f9c <deflateCopy@@Base+0xbdc>  // b.any
    5f10:	add	x19, x13, x7
    5f14:	ldrb	w21, [x19, #7]
    5f18:	ldrb	w20, [x20, #2]
    5f1c:	cmp	w21, w20
    5f20:	b.ne	5fa8 <deflateCopy@@Base+0xbe8>  // b.any
    5f24:	add	x20, x6, x7
    5f28:	ldrb	w19, [x19, #8]
    5f2c:	ldrb	w21, [x20, #3]
    5f30:	cmp	w19, w21
    5f34:	b.ne	5fb0 <deflateCopy@@Base+0xbf0>  // b.any
    5f38:	add	x19, x13, x7
    5f3c:	ldrb	w21, [x19, #9]
    5f40:	ldrb	w20, [x20, #4]
    5f44:	cmp	w21, w20
    5f48:	b.ne	5fbc <deflateCopy@@Base+0xbfc>  // b.any
    5f4c:	add	x20, x7, #0x2
    5f50:	cmp	x20, #0xf9
    5f54:	add	x20, x7, #0x8
    5f58:	b.hi	5f74 <deflateCopy@@Base+0xbb4>  // b.pmore
    5f5c:	add	x7, x6, x7
    5f60:	ldrb	w19, [x19, #10]
    5f64:	ldrb	w7, [x7, #5]
    5f68:	cmp	w19, w7
    5f6c:	mov	x7, x20
    5f70:	b.eq	5ec0 <deflateCopy@@Base+0xb00>  // b.none
    5f74:	add	x6, x13, x20
    5f78:	add	x6, x6, #0x2
    5f7c:	b	5fc0 <deflateCopy@@Base+0xc00>
    5f80:	add	x6, x19, #0x3
    5f84:	b	5fc0 <deflateCopy@@Base+0xc00>
    5f88:	add	x6, x13, x7
    5f8c:	add	x6, x6, #0x4
    5f90:	b	5fc0 <deflateCopy@@Base+0xc00>
    5f94:	add	x6, x19, #0x5
    5f98:	b	5fc0 <deflateCopy@@Base+0xc00>
    5f9c:	add	x6, x13, x7
    5fa0:	add	x6, x6, #0x6
    5fa4:	b	5fc0 <deflateCopy@@Base+0xc00>
    5fa8:	add	x6, x19, #0x7
    5fac:	b	5fc0 <deflateCopy@@Base+0xc00>
    5fb0:	add	x6, x13, x7
    5fb4:	add	x6, x6, #0x8
    5fb8:	b	5fc0 <deflateCopy@@Base+0xc00>
    5fbc:	add	x6, x19, #0x9
    5fc0:	sub	x7, x15, x6
    5fc4:	sub	x6, x2, w7, sxtw
    5fc8:	cmp	w6, w12
    5fcc:	b.le	5ff0 <deflateCopy@@Base+0xc30>
    5fd0:	cmp	w6, w18
    5fd4:	str	w1, [x0, #176]
    5fd8:	b.ge	601c <deflateCopy@@Base+0xc5c>  // b.tcont
    5fdc:	sub	x12, x3, x7, lsl #32
    5fe0:	asr	x12, x12, #32
    5fe4:	ldrb	w4, [x13, x12]
    5fe8:	ldrb	w5, [x13, x6]
    5fec:	mov	w12, w6
    5ff0:	and	x1, x1, x10
    5ff4:	ldrh	w1, [x9, x1, lsl #1]
    5ff8:	cmp	w16, w1
    5ffc:	b.cs	6008 <deflateCopy@@Base+0xc48>  // b.hs, b.nlast
    6000:	subs	w17, w17, #0x1
    6004:	b.ne	5e70 <deflateCopy@@Base+0xab0>  // b.any
    6008:	ldp	x20, x19, [sp, #16]
    600c:	cmp	w12, w11
    6010:	csel	w0, w11, w12, hi  // hi = pmore
    6014:	ldp	x22, x21, [sp], #32
    6018:	ret
    601c:	mov	w12, w6
    6020:	b	6008 <deflateCopy@@Base+0xc48>
    6024:	stp	x29, x30, [sp, #-48]!
    6028:	stp	x22, x21, [sp, #16]
    602c:	stp	x20, x19, [sp, #32]
    6030:	ldr	w8, [x0, #8]
    6034:	mov	x29, sp
    6038:	cmp	w8, w2
    603c:	csel	w19, w2, w8, hi  // hi = pmore
    6040:	cbz	w19, 60c0 <deflateCopy@@Base+0xd00>
    6044:	mov	x22, x1
    6048:	ldr	x1, [x0]
    604c:	sub	w8, w8, w19
    6050:	mov	w21, w19
    6054:	mov	x20, x0
    6058:	str	w8, [x0, #8]
    605c:	mov	x0, x22
    6060:	mov	x2, x21
    6064:	bl	23a0 <memcpy@plt>
    6068:	ldr	x8, [x20, #56]
    606c:	ldr	w8, [x8, #48]
    6070:	cmp	w8, #0x2
    6074:	b.eq	6094 <deflateCopy@@Base+0xcd4>  // b.none
    6078:	cmp	w8, #0x1
    607c:	b.ne	60a8 <deflateCopy@@Base+0xce8>  // b.any
    6080:	ldr	x0, [x20, #96]
    6084:	mov	x1, x22
    6088:	mov	w2, w19
    608c:	bl	2560 <adler32@plt>
    6090:	b	60a4 <deflateCopy@@Base+0xce4>
    6094:	ldr	x0, [x20, #96]
    6098:	mov	x1, x22
    609c:	mov	w2, w19
    60a0:	bl	2430 <crc32@plt>
    60a4:	str	x0, [x20, #96]
    60a8:	ldr	x8, [x20]
    60ac:	ldr	x9, [x20, #16]
    60b0:	add	x8, x8, x21
    60b4:	add	x9, x9, x21
    60b8:	str	x8, [x20]
    60bc:	str	x9, [x20, #16]
    60c0:	mov	w0, w19
    60c4:	ldp	x20, x19, [sp, #32]
    60c8:	ldp	x22, x21, [sp, #16]
    60cc:	ldp	x29, x30, [sp], #48
    60d0:	ret

00000000000060d4 <inflateBackInit_@@ZLIB_1.2.0>:
    60d4:	stp	x29, x30, [sp, #-48]!
    60d8:	stp	x22, x21, [sp, #16]
    60dc:	stp	x20, x19, [sp, #32]
    60e0:	mov	x29, sp
    60e4:	cbz	x3, 6178 <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    60e8:	mov	x21, x0
    60ec:	cmp	w4, #0x70
    60f0:	mov	w0, #0xfffffffa            	// #-6
    60f4:	b.ne	617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>  // b.any
    60f8:	ldrb	w8, [x3]
    60fc:	cmp	w8, #0x31
    6100:	b.ne	617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>  // b.any
    6104:	and	w8, w1, #0xfffffff8
    6108:	mov	w20, w1
    610c:	cmp	w8, #0x8
    6110:	mov	w0, #0xfffffffe            	// #-2
    6114:	b.ne	617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>  // b.any
    6118:	cbz	x21, 617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>
    611c:	mov	x19, x2
    6120:	cbz	x2, 617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>
    6124:	ldr	x8, [x21, #64]
    6128:	str	xzr, [x21, #48]
    612c:	cbz	x8, 618c <inflateBackInit_@@ZLIB_1.2.0+0xb8>
    6130:	ldr	x8, [x21, #72]
    6134:	cbz	x8, 61a4 <inflateBackInit_@@ZLIB_1.2.0+0xd0>
    6138:	ldr	x8, [x21, #64]
    613c:	ldr	x0, [x21, #80]
    6140:	mov	w1, #0x1                   	// #1
    6144:	mov	w2, #0x1bf8                	// #7160
    6148:	mov	w22, #0x1                   	// #1
    614c:	blr	x8
    6150:	cbz	x0, 61b4 <inflateBackInit_@@ZLIB_1.2.0+0xe0>
    6154:	mov	x8, x0
    6158:	mov	w0, wzr
    615c:	mov	w9, #0x8000                	// #32768
    6160:	lsl	w10, w22, w20
    6164:	str	x8, [x21, #56]
    6168:	str	w9, [x8, #28]
    616c:	stp	w20, w10, [x8, #56]
    6170:	stp	xzr, x19, [x8, #64]
    6174:	b	617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>
    6178:	mov	w0, #0xfffffffa            	// #-6
    617c:	ldp	x20, x19, [sp, #32]
    6180:	ldp	x22, x21, [sp, #16]
    6184:	ldp	x29, x30, [sp], #48
    6188:	ret
    618c:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x175c>
    6190:	add	x8, x8, #0x6e0
    6194:	str	x8, [x21, #64]
    6198:	str	xzr, [x21, #80]
    619c:	ldr	x8, [x21, #72]
    61a0:	cbnz	x8, 6138 <inflateBackInit_@@ZLIB_1.2.0+0x64>
    61a4:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x175c>
    61a8:	add	x8, x8, #0x6f8
    61ac:	str	x8, [x21, #72]
    61b0:	b	6138 <inflateBackInit_@@ZLIB_1.2.0+0x64>
    61b4:	mov	w0, #0xfffffffc            	// #-4
    61b8:	b	617c <inflateBackInit_@@ZLIB_1.2.0+0xa8>

00000000000061bc <inflateBack@@ZLIB_1.2.0>:
    61bc:	sub	sp, sp, #0xc0
    61c0:	stp	x29, x30, [sp, #96]
    61c4:	add	x29, sp, #0x60
    61c8:	stp	x28, x27, [sp, #112]
    61cc:	stp	x26, x25, [sp, #128]
    61d0:	stp	x24, x23, [sp, #144]
    61d4:	stp	x22, x21, [sp, #160]
    61d8:	stp	x20, x19, [sp, #176]
    61dc:	stur	x2, [x29, #-16]
    61e0:	cbz	x0, 6220 <inflateBack@@ZLIB_1.2.0+0x64>
    61e4:	ldr	x23, [x0, #56]
    61e8:	mov	x24, x0
    61ec:	cbz	x23, 6220 <inflateBack@@ZLIB_1.2.0+0x64>
    61f0:	mov	w8, #0x3f3f                	// #16191
    61f4:	str	xzr, [x24, #48]
    61f8:	str	x8, [x23, #8]
    61fc:	str	wzr, [x23, #64]
    6200:	ldr	x8, [x24]
    6204:	mov	x21, x3
    6208:	mov	x25, x1
    620c:	stur	x4, [x29, #-32]
    6210:	stur	x8, [x29, #-8]
    6214:	cbz	x8, 6228 <inflateBack@@ZLIB_1.2.0+0x6c>
    6218:	ldr	w20, [x24, #8]
    621c:	b	622c <inflateBack@@ZLIB_1.2.0+0x70>
    6220:	mov	w0, #0xfffffffe            	// #-2
    6224:	b	6fd4 <inflateBack@@ZLIB_1.2.0+0xe18>
    6228:	mov	w20, wzr
    622c:	add	x8, x23, #0x558
    6230:	str	x8, [sp, #48]
    6234:	add	x8, x23, #0x90
    6238:	ldr	x26, [x23, #72]
    623c:	ldr	w28, [x23, #60]
    6240:	str	x8, [sp, #40]
    6244:	add	x8, x23, #0x78
    6248:	str	x8, [sp, #32]
    624c:	add	x8, x23, #0x98
    6250:	str	x8, [sp, #24]
    6254:	add	x8, x23, #0x318
    6258:	mov	x22, xzr
    625c:	mov	w27, wzr
    6260:	stur	x8, [x29, #-40]
    6264:	add	x8, x23, #0x7c
    6268:	str	x8, [sp, #16]
    626c:	mov	w19, #0xffffc0c1            	// #-16191
    6270:	ldr	w8, [x23, #8]
    6274:	add	w8, w8, w19
    6278:	cmp	w8, #0x12
    627c:	b.hi	6ff4 <inflateBack@@ZLIB_1.2.0+0xe38>  // b.pmore
    6280:	adrp	x11, f000 <gzclose_w@@ZLIB_1.2.3.5+0x17e8>
    6284:	add	x11, x11, #0x94a
    6288:	adr	x9, 629c <inflateBack@@ZLIB_1.2.0+0xe0>
    628c:	ldrh	w10, [x11, x8, lsl #1]
    6290:	add	x9, x9, x10, lsl #2
    6294:	mov	w0, #0xfffffffd            	// #-3
    6298:	br	x9
    629c:	ldr	w8, [x23, #12]
    62a0:	cbz	w8, 6390 <inflateBack@@ZLIB_1.2.0+0x1d4>
    62a4:	and	w8, w27, #0x7
    62a8:	lsr	x22, x22, x8
    62ac:	mov	w8, #0x3f50                	// #16208
    62b0:	and	w27, w27, #0xfffffff8
    62b4:	str	w8, [x23, #8]
    62b8:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    62bc:	and	w8, w27, #0x7
    62c0:	and	w27, w27, #0xfffffff8
    62c4:	cmp	w27, #0x1f
    62c8:	lsr	x22, x22, x8
    62cc:	b.hi	6410 <inflateBack@@ZLIB_1.2.0+0x254>  // b.pmore
    62d0:	mov	w8, #0x27                  	// #39
    62d4:	sub	w8, w8, w27
    62d8:	and	w8, w8, #0xfffffff8
    62dc:	mov	w19, w27
    62e0:	add	w27, w8, w27
    62e4:	b	6310 <inflateBack@@ZLIB_1.2.0+0x154>
    62e8:	ldur	x8, [x29, #-8]
    62ec:	sub	w20, w20, #0x1
    62f0:	cmp	x19, #0x18
    62f4:	add	x9, x8, #0x1
    62f8:	stur	x9, [x29, #-8]
    62fc:	ldrb	w8, [x8]
    6300:	lsl	x8, x8, x19
    6304:	add	x19, x19, #0x8
    6308:	add	x22, x8, x22
    630c:	b.cs	640c <inflateBack@@ZLIB_1.2.0+0x250>  // b.hs, b.nlast
    6310:	cbnz	w20, 62e8 <inflateBack@@ZLIB_1.2.0+0x12c>
    6314:	ldur	x0, [x29, #-16]
    6318:	sub	x1, x29, #0x8
    631c:	blr	x25
    6320:	mov	w20, w0
    6324:	cbnz	w0, 62e8 <inflateBack@@ZLIB_1.2.0+0x12c>
    6328:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    632c:	cmp	w27, #0xd
    6330:	b.hi	6430 <inflateBack@@ZLIB_1.2.0+0x274>  // b.pmore
    6334:	mov	w8, #0x15                  	// #21
    6338:	sub	w8, w8, w27
    633c:	and	w8, w8, #0xfffffff8
    6340:	mov	w19, w27
    6344:	add	w27, w8, w27
    6348:	b	6374 <inflateBack@@ZLIB_1.2.0+0x1b8>
    634c:	ldur	x8, [x29, #-8]
    6350:	sub	w20, w20, #0x1
    6354:	cmp	x19, #0x6
    6358:	add	x9, x8, #0x1
    635c:	stur	x9, [x29, #-8]
    6360:	ldrb	w8, [x8]
    6364:	lsl	x8, x8, x19
    6368:	add	x19, x19, #0x8
    636c:	add	x22, x8, x22
    6370:	b.cs	642c <inflateBack@@ZLIB_1.2.0+0x270>  // b.hs, b.nlast
    6374:	cbnz	w20, 634c <inflateBack@@ZLIB_1.2.0+0x190>
    6378:	ldur	x0, [x29, #-16]
    637c:	sub	x1, x29, #0x8
    6380:	blr	x25
    6384:	mov	w20, w0
    6388:	cbnz	w0, 634c <inflateBack@@ZLIB_1.2.0+0x190>
    638c:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    6390:	cmp	w27, #0x2
    6394:	b.hi	63d4 <inflateBack@@ZLIB_1.2.0+0x218>  // b.pmore
    6398:	cbnz	w20, 63b0 <inflateBack@@ZLIB_1.2.0+0x1f4>
    639c:	ldur	x0, [x29, #-16]
    63a0:	sub	x1, x29, #0x8
    63a4:	blr	x25
    63a8:	mov	w20, w0
    63ac:	cbz	w0, 6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    63b0:	ldur	x8, [x29, #-8]
    63b4:	sub	w20, w20, #0x1
    63b8:	add	x9, x8, #0x1
    63bc:	stur	x9, [x29, #-8]
    63c0:	ldrb	w8, [x8]
    63c4:	mov	w9, w27
    63c8:	add	w27, w27, #0x8
    63cc:	lsl	x8, x8, x9
    63d0:	add	x22, x8, x22
    63d4:	adrp	x11, f000 <gzclose_w@@ZLIB_1.2.3.5+0x17e8>
    63d8:	and	w8, w22, #0x1
    63dc:	ubfx	w9, w22, #1, #2
    63e0:	add	x11, x11, #0x970
    63e4:	str	w8, [x23, #12]
    63e8:	adr	x10, 63fc <inflateBack@@ZLIB_1.2.0+0x240>
    63ec:	ldrb	w8, [x11, x9]
    63f0:	add	x10, x10, x8, lsl #2
    63f4:	mov	w8, #0x3f41                	// #16193
    63f8:	br	x10
    63fc:	mov	x0, x23
    6400:	bl	702c <inflateBack@@ZLIB_1.2.0+0xe70>
    6404:	mov	w8, #0x3f48                	// #16200
    6408:	b	67d4 <inflateBack@@ZLIB_1.2.0+0x618>
    640c:	mov	w19, #0xffffc0c1            	// #-16191
    6410:	lsr	x8, x22, #16
    6414:	eor	x8, x8, #0xffff
    6418:	cmp	x8, w22, uxth
    641c:	b.eq	6ecc <inflateBack@@ZLIB_1.2.0+0xd10>  // b.none
    6420:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6424:	add	x8, x8, #0x22d
    6428:	b	6568 <inflateBack@@ZLIB_1.2.0+0x3ac>
    642c:	mov	w19, #0xffffc0c1            	// #-16191
    6430:	and	w9, w22, #0x1f
    6434:	ubfx	w8, w22, #5, #5
    6438:	ubfx	w10, w22, #10, #4
    643c:	lsr	x22, x22, #14
    6440:	add	w11, w9, #0x101
    6444:	add	w12, w8, #0x1
    6448:	add	w10, w10, #0x4
    644c:	cmp	w9, #0x1d
    6450:	sub	w27, w27, #0xe
    6454:	stp	w11, w12, [x23, #132]
    6458:	str	w10, [x23, #128]
    645c:	b.hi	6560 <inflateBack@@ZLIB_1.2.0+0x3a4>  // b.pmore
    6460:	cmp	w8, #0x1e
    6464:	b.cs	6560 <inflateBack@@ZLIB_1.2.0+0x3a4>  // b.hs, b.nlast
    6468:	ldr	w8, [x23, #128]
    646c:	adrp	x11, f000 <gzclose_w@@ZLIB_1.2.3.5+0x17e8>
    6470:	add	x11, x11, #0x974
    6474:	str	wzr, [x23, #140]
    6478:	cbnz	w8, 6534 <inflateBack@@ZLIB_1.2.0+0x378>
    647c:	ldr	w8, [x23, #140]
    6480:	cmp	w8, #0x12
    6484:	b.hi	64a4 <inflateBack@@ZLIB_1.2.0+0x2e8>  // b.pmore
    6488:	ldrh	w9, [x11, x8, lsl #1]
    648c:	add	x8, x8, #0x1
    6490:	cmp	x8, #0x13
    6494:	add	x9, x23, x9, lsl #1
    6498:	strh	wzr, [x9, #152]
    649c:	b.ne	6488 <inflateBack@@ZLIB_1.2.0+0x2cc>  // b.any
    64a0:	str	w8, [x23, #140]
    64a4:	ldp	x3, x8, [sp, #40]
    64a8:	ldur	x5, [x29, #-40]
    64ac:	mov	w2, #0x13                  	// #19
    64b0:	mov	w0, wzr
    64b4:	str	x8, [x23, #144]
    64b8:	str	x8, [x23, #104]
    64bc:	mov	w8, #0x7                   	// #7
    64c0:	str	w8, [x23, #120]
    64c4:	ldp	x1, x4, [sp, #24]
    64c8:	bl	98e4 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    64cc:	cbz	w0, 6578 <inflateBack@@ZLIB_1.2.0+0x3bc>
    64d0:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    64d4:	add	x8, x8, #0x26e
    64d8:	b	6568 <inflateBack@@ZLIB_1.2.0+0x3ac>
    64dc:	ldur	x8, [x29, #-8]
    64e0:	sub	w20, w20, #0x1
    64e4:	add	x9, x8, #0x1
    64e8:	stur	x9, [x29, #-8]
    64ec:	ldrb	w8, [x8]
    64f0:	mov	w9, w27
    64f4:	add	w27, w27, #0x8
    64f8:	lsl	x8, x8, x9
    64fc:	add	x22, x8, x22
    6500:	ldr	w8, [x23, #140]
    6504:	and	w10, w22, #0x7
    6508:	lsr	x22, x22, #3
    650c:	sub	w27, w27, #0x3
    6510:	ldrh	w9, [x11, x8, lsl #1]
    6514:	add	w8, w8, #0x1
    6518:	str	w8, [x23, #140]
    651c:	add	x8, x23, x9, lsl #1
    6520:	strh	w10, [x8, #152]
    6524:	ldr	w8, [x23, #140]
    6528:	ldr	w9, [x23, #128]
    652c:	cmp	w8, w9
    6530:	b.cs	647c <inflateBack@@ZLIB_1.2.0+0x2c0>  // b.hs, b.nlast
    6534:	cmp	w27, #0x2
    6538:	b.hi	6500 <inflateBack@@ZLIB_1.2.0+0x344>  // b.pmore
    653c:	cbnz	w20, 64dc <inflateBack@@ZLIB_1.2.0+0x320>
    6540:	ldur	x0, [x29, #-16]
    6544:	sub	x1, x29, #0x8
    6548:	blr	x25
    654c:	adrp	x11, f000 <gzclose_w@@ZLIB_1.2.3.5+0x17e8>
    6550:	add	x11, x11, #0x974
    6554:	mov	w20, w0
    6558:	cbnz	w0, 64dc <inflateBack@@ZLIB_1.2.0+0x320>
    655c:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    6560:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6564:	add	x8, x8, #0x24a
    6568:	str	x8, [x24, #48]
    656c:	mov	w8, #0x3f51                	// #16209
    6570:	str	w8, [x23, #8]
    6574:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    6578:	ldp	w8, w9, [x23, #132]
    657c:	str	wzr, [x23, #140]
    6580:	cmn	w9, w8
    6584:	b.ne	68f8 <inflateBack@@ZLIB_1.2.0+0x73c>  // b.any
    6588:	ldr	w8, [x23, #8]
    658c:	mov	w9, #0x3f51                	// #16209
    6590:	cmp	w8, w9
    6594:	b.eq	6270 <inflateBack@@ZLIB_1.2.0+0xb4>  // b.none
    6598:	ldrh	w8, [x23, #664]
    659c:	cbz	w8, 6d44 <inflateBack@@ZLIB_1.2.0+0xb88>
    65a0:	ldp	x19, x8, [sp, #40]
    65a4:	ldr	w2, [x23, #132]
    65a8:	ldur	x5, [x29, #-40]
    65ac:	mov	w0, #0x1                   	// #1
    65b0:	str	x8, [x23, #144]
    65b4:	str	x8, [x23, #104]
    65b8:	mov	w8, #0x9                   	// #9
    65bc:	str	w8, [x23, #120]
    65c0:	ldp	x1, x4, [sp, #24]
    65c4:	mov	x3, x19
    65c8:	bl	98e4 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    65cc:	cbnz	w0, 6f98 <inflateBack@@ZLIB_1.2.0+0xddc>
    65d0:	ldr	x8, [x23, #144]
    65d4:	ldp	w9, w2, [x23, #132]
    65d8:	ldr	x4, [sp, #16]
    65dc:	ldur	x5, [x29, #-40]
    65e0:	str	x8, [x23, #112]
    65e4:	add	x8, x23, x9, lsl #1
    65e8:	mov	w10, #0x6                   	// #6
    65ec:	add	x1, x8, #0x98
    65f0:	mov	w0, #0x2                   	// #2
    65f4:	mov	x3, x19
    65f8:	str	w10, [x23, #124]
    65fc:	bl	98e4 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6600:	cbnz	w0, 6fa4 <inflateBack@@ZLIB_1.2.0+0xde8>
    6604:	mov	w8, #0x3f48                	// #16200
    6608:	mov	w19, #0xffffc0c1            	// #-16191
    660c:	str	w8, [x23, #8]
    6610:	cmp	w28, #0x102
    6614:	b.cc	6678 <inflateBack@@ZLIB_1.2.0+0x4bc>  // b.lo, b.ul, b.last
    6618:	cmp	w20, #0x5
    661c:	b.ls	6678 <inflateBack@@ZLIB_1.2.0+0x4bc>  // b.plast
    6620:	str	x26, [x24, #24]
    6624:	str	w28, [x24, #32]
    6628:	ldur	x8, [x29, #-8]
    662c:	str	w20, [x24, #8]
    6630:	str	x8, [x24]
    6634:	ldp	w1, w8, [x23, #60]
    6638:	str	x22, [x23, #80]
    663c:	str	w27, [x23, #88]
    6640:	cmp	w8, w1
    6644:	b.cs	6650 <inflateBack@@ZLIB_1.2.0+0x494>  // b.hs, b.nlast
    6648:	sub	w8, w1, w28
    664c:	str	w8, [x23, #64]
    6650:	mov	x0, x24
    6654:	bl	7098 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    6658:	ldr	x8, [x24]
    665c:	ldr	x26, [x24, #24]
    6660:	ldr	w28, [x24, #32]
    6664:	stur	x8, [x29, #-8]
    6668:	ldr	w20, [x24, #8]
    666c:	ldr	x22, [x23, #80]
    6670:	ldr	w27, [x23, #88]
    6674:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    6678:	ldr	w8, [x23, #120]
    667c:	ldr	x9, [x23, #104]
    6680:	mov	w19, #0xffffffff            	// #-1
    6684:	stur	x21, [x29, #-24]
    6688:	lsl	w8, w19, w8
    668c:	bic	w8, w22, w8
    6690:	add	x8, x9, w8, uxtw #2
    6694:	ldrb	w21, [x8, #1]
    6698:	cmp	w27, w21
    669c:	b.cs	6708 <inflateBack@@ZLIB_1.2.0+0x54c>  // b.hs, b.nlast
    66a0:	mov	w27, w27
    66a4:	b	66e8 <inflateBack@@ZLIB_1.2.0+0x52c>
    66a8:	ldur	x8, [x29, #-8]
    66ac:	sub	w20, w20, #0x1
    66b0:	add	x9, x8, #0x1
    66b4:	stur	x9, [x29, #-8]
    66b8:	ldrb	w9, [x8]
    66bc:	ldr	w10, [x23, #120]
    66c0:	ldr	x8, [x23, #104]
    66c4:	lsl	x9, x9, x27
    66c8:	add	x22, x9, x22
    66cc:	lsl	w9, w19, w10
    66d0:	bic	w9, w22, w9
    66d4:	add	x10, x8, w9, uxtw #2
    66d8:	ldrb	w21, [x10, #1]
    66dc:	add	x27, x27, #0x8
    66e0:	cmp	x27, x21
    66e4:	b.cs	6704 <inflateBack@@ZLIB_1.2.0+0x548>  // b.hs, b.nlast
    66e8:	cbnz	w20, 66a8 <inflateBack@@ZLIB_1.2.0+0x4ec>
    66ec:	ldur	x0, [x29, #-16]
    66f0:	sub	x1, x29, #0x8
    66f4:	blr	x25
    66f8:	mov	w20, w0
    66fc:	cbnz	w0, 66a8 <inflateBack@@ZLIB_1.2.0+0x4ec>
    6700:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    6704:	add	x8, x8, x9, lsl #2
    6708:	add	x9, x8, #0x2
    670c:	ldrb	w8, [x8]
    6710:	ldrh	w19, [x9]
    6714:	cbz	w8, 6804 <inflateBack@@ZLIB_1.2.0+0x648>
    6718:	and	w9, w8, #0xf0
    671c:	cbnz	w9, 6804 <inflateBack@@ZLIB_1.2.0+0x648>
    6720:	add	w8, w21, w8
    6724:	mov	w10, #0xffffffff            	// #-1
    6728:	ldr	x9, [x23, #104]
    672c:	lsl	w11, w10, w8
    6730:	bic	w8, w22, w11
    6734:	lsr	w8, w8, w21
    6738:	add	w8, w8, w19
    673c:	add	x10, x9, w8, uxtw #2
    6740:	ldrb	w10, [x10, #1]
    6744:	add	w12, w21, w10
    6748:	cmp	w12, w27
    674c:	b.ls	67ec <inflateBack@@ZLIB_1.2.0+0x630>  // b.plast
    6750:	str	x24, [sp, #8]
    6754:	mvn	w24, w11
    6758:	b	67a0 <inflateBack@@ZLIB_1.2.0+0x5e4>
    675c:	ldur	x8, [x29, #-8]
    6760:	sub	w20, w20, #0x1
    6764:	add	x9, x8, #0x1
    6768:	stur	x9, [x29, #-8]
    676c:	ldrb	w8, [x8]
    6770:	ldr	x9, [x23, #104]
    6774:	lsl	x8, x8, x27
    6778:	add	x22, x8, x22
    677c:	and	w8, w22, w24
    6780:	lsr	w8, w8, w21
    6784:	add	w8, w8, w19
    6788:	add	x10, x9, w8, uxtw #2
    678c:	ldrb	w10, [x10, #1]
    6790:	add	w27, w27, #0x8
    6794:	add	w11, w21, w10
    6798:	cmp	w11, w27
    679c:	b.ls	67e4 <inflateBack@@ZLIB_1.2.0+0x628>  // b.plast
    67a0:	cbnz	w20, 675c <inflateBack@@ZLIB_1.2.0+0x5a0>
    67a4:	ldur	x0, [x29, #-16]
    67a8:	sub	x1, x29, #0x8
    67ac:	blr	x25
    67b0:	mov	w20, w0
    67b4:	cbnz	w0, 675c <inflateBack@@ZLIB_1.2.0+0x5a0>
    67b8:	b	6fbc <inflateBack@@ZLIB_1.2.0+0xe00>
    67bc:	mov	w8, #0x3f44                	// #16196
    67c0:	b	67d4 <inflateBack@@ZLIB_1.2.0+0x618>
    67c4:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    67c8:	add	x8, x8, #0x21a
    67cc:	str	x8, [x24, #48]
    67d0:	mov	w8, #0x3f51                	// #16209
    67d4:	str	w8, [x23, #8]
    67d8:	lsr	x22, x22, #3
    67dc:	sub	w27, w27, #0x3
    67e0:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    67e4:	ldr	x24, [sp, #8]
    67e8:	mov	w8, w8
    67ec:	add	x8, x9, x8, lsl #2
    67f0:	ldrh	w19, [x8, #2]
    67f4:	ldrb	w8, [x8]
    67f8:	lsr	x22, x22, x21
    67fc:	sub	w27, w27, w21
    6800:	mov	w21, w10
    6804:	lsr	x22, x22, x21
    6808:	sub	w27, w27, w21
    680c:	str	w19, [x23, #92]
    6810:	cbz	w8, 68a4 <inflateBack@@ZLIB_1.2.0+0x6e8>
    6814:	mov	w19, #0xffffc0c1            	// #-16191
    6818:	tbnz	w8, #5, 68e8 <inflateBack@@ZLIB_1.2.0+0x72c>
    681c:	tbnz	w8, #6, 6bec <inflateBack@@ZLIB_1.2.0+0xa30>
    6820:	ands	w8, w8, #0xf
    6824:	str	w8, [x23, #100]
    6828:	b.eq	6c08 <inflateBack@@ZLIB_1.2.0+0xa4c>  // b.none
    682c:	ldr	w8, [x23, #100]
    6830:	mov	w19, #0xffffffff            	// #-1
    6834:	cmp	w27, w8
    6838:	b.cc	6888 <inflateBack@@ZLIB_1.2.0+0x6cc>  // b.lo, b.ul, b.last
    683c:	ldr	w9, [x23, #92]
    6840:	lsl	w10, w19, w8
    6844:	bic	w10, w22, w10
    6848:	lsr	x22, x22, x8
    684c:	add	w9, w9, w10
    6850:	sub	w27, w27, w8
    6854:	str	w9, [x23, #92]
    6858:	b	6c0c <inflateBack@@ZLIB_1.2.0+0xa50>
    685c:	ldur	x8, [x29, #-8]
    6860:	sub	w20, w20, #0x1
    6864:	add	x9, x8, #0x1
    6868:	stur	x9, [x29, #-8]
    686c:	ldrb	w9, [x8]
    6870:	ldr	w8, [x23, #100]
    6874:	lsl	x9, x9, x27
    6878:	add	w27, w27, #0x8
    687c:	cmp	w27, w8
    6880:	add	x22, x9, x22
    6884:	b.cs	683c <inflateBack@@ZLIB_1.2.0+0x680>  // b.hs, b.nlast
    6888:	cbnz	w20, 685c <inflateBack@@ZLIB_1.2.0+0x6a0>
    688c:	ldur	x0, [x29, #-16]
    6890:	sub	x1, x29, #0x8
    6894:	blr	x25
    6898:	mov	w20, w0
    689c:	cbnz	w0, 685c <inflateBack@@ZLIB_1.2.0+0x6a0>
    68a0:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    68a4:	ldur	x21, [x29, #-24]
    68a8:	mov	w19, #0xffffc0c1            	// #-16191
    68ac:	cbnz	w28, 68d0 <inflateBack@@ZLIB_1.2.0+0x714>
    68b0:	ldr	w28, [x23, #60]
    68b4:	ldr	x26, [x23, #72]
    68b8:	ldur	x0, [x29, #-32]
    68bc:	mov	w2, w28
    68c0:	mov	x1, x26
    68c4:	str	w28, [x23, #64]
    68c8:	blr	x21
    68cc:	cbnz	w0, 6fc4 <inflateBack@@ZLIB_1.2.0+0xe08>
    68d0:	ldr	w8, [x23, #92]
    68d4:	sub	w28, w28, #0x1
    68d8:	strb	w8, [x26], #1
    68dc:	mov	w8, #0x3f48                	// #16200
    68e0:	str	w8, [x23, #8]
    68e4:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    68e8:	ldur	x21, [x29, #-24]
    68ec:	mov	w8, #0x3f3f                	// #16191
    68f0:	str	w8, [x23, #8]
    68f4:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    68f8:	str	x24, [sp, #8]
    68fc:	stur	x21, [x29, #-24]
    6900:	b	6938 <inflateBack@@ZLIB_1.2.0+0x77c>
    6904:	ldr	w9, [x23, #140]
    6908:	lsr	x22, x22, x21
    690c:	sub	w27, w27, w21
    6910:	ldur	x21, [x29, #-24]
    6914:	add	w10, w9, #0x1
    6918:	add	x9, x23, x9, lsl #1
    691c:	str	w10, [x23, #140]
    6920:	strh	w8, [x9, #152]
    6924:	ldp	w8, w9, [x23, #132]
    6928:	ldr	w10, [x23, #140]
    692c:	add	w8, w9, w8
    6930:	cmp	w10, w8
    6934:	b.cs	6588 <inflateBack@@ZLIB_1.2.0+0x3cc>  // b.hs, b.nlast
    6938:	ldr	w8, [x23, #120]
    693c:	ldr	x9, [x23, #104]
    6940:	mov	w10, #0xffffffff            	// #-1
    6944:	lsl	w8, w10, w8
    6948:	bic	w8, w22, w8
    694c:	add	x8, x9, w8, uxtw #2
    6950:	ldrb	w21, [x8, #1]
    6954:	cmp	w27, w21
    6958:	b.cs	69c8 <inflateBack@@ZLIB_1.2.0+0x80c>  // b.hs, b.nlast
    695c:	mov	w27, w27
    6960:	b	69a8 <inflateBack@@ZLIB_1.2.0+0x7ec>
    6964:	ldur	x8, [x29, #-8]
    6968:	sub	w20, w20, #0x1
    696c:	add	x9, x8, #0x1
    6970:	stur	x9, [x29, #-8]
    6974:	ldrb	w9, [x8]
    6978:	ldr	w10, [x23, #120]
    697c:	ldr	x8, [x23, #104]
    6980:	lsl	x9, x9, x27
    6984:	add	x22, x9, x22
    6988:	mov	w9, #0xffffffff            	// #-1
    698c:	lsl	w9, w9, w10
    6990:	bic	w9, w22, w9
    6994:	add	x10, x8, w9, uxtw #2
    6998:	ldrb	w21, [x10, #1]
    699c:	add	x27, x27, #0x8
    69a0:	cmp	x27, x21
    69a4:	b.cs	69c4 <inflateBack@@ZLIB_1.2.0+0x808>  // b.hs, b.nlast
    69a8:	cbnz	w20, 6964 <inflateBack@@ZLIB_1.2.0+0x7a8>
    69ac:	ldur	x0, [x29, #-16]
    69b0:	sub	x1, x29, #0x8
    69b4:	blr	x25
    69b8:	mov	w20, w0
    69bc:	cbnz	w0, 6964 <inflateBack@@ZLIB_1.2.0+0x7a8>
    69c0:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    69c4:	add	x8, x8, x9, lsl #2
    69c8:	add	x8, x8, #0x2
    69cc:	ldrh	w8, [x8]
    69d0:	cmp	w8, #0xf
    69d4:	b.ls	6904 <inflateBack@@ZLIB_1.2.0+0x748>  // b.plast
    69d8:	cmp	w8, #0x10
    69dc:	b.eq	6a54 <inflateBack@@ZLIB_1.2.0+0x898>  // b.none
    69e0:	cmp	w8, #0x11
    69e4:	b.ne	6ac0 <inflateBack@@ZLIB_1.2.0+0x904>  // b.any
    69e8:	add	w19, w21, #0x3
    69ec:	cmp	w27, w19
    69f0:	b.cs	6b30 <inflateBack@@ZLIB_1.2.0+0x974>  // b.hs, b.nlast
    69f4:	mvn	w8, w27
    69f8:	add	w8, w19, w8
    69fc:	add	w8, w8, #0x8
    6a00:	and	w8, w8, #0xfffffff8
    6a04:	mov	w24, w27
    6a08:	add	w27, w8, w27
    6a0c:	b	6a38 <inflateBack@@ZLIB_1.2.0+0x87c>
    6a10:	ldur	x8, [x29, #-8]
    6a14:	sub	w20, w20, #0x1
    6a18:	add	x9, x8, #0x1
    6a1c:	stur	x9, [x29, #-8]
    6a20:	ldrb	w8, [x8]
    6a24:	lsl	x8, x8, x24
    6a28:	add	x24, x24, #0x8
    6a2c:	cmp	x24, x19
    6a30:	add	x22, x8, x22
    6a34:	b.cs	6b2c <inflateBack@@ZLIB_1.2.0+0x970>  // b.hs, b.nlast
    6a38:	cbnz	w20, 6a10 <inflateBack@@ZLIB_1.2.0+0x854>
    6a3c:	ldur	x0, [x29, #-16]
    6a40:	sub	x1, x29, #0x8
    6a44:	blr	x25
    6a48:	mov	w20, w0
    6a4c:	cbnz	w0, 6a10 <inflateBack@@ZLIB_1.2.0+0x854>
    6a50:	b	6fbc <inflateBack@@ZLIB_1.2.0+0xe00>
    6a54:	add	w19, w21, #0x2
    6a58:	cmp	w27, w19
    6a5c:	b.cs	6b54 <inflateBack@@ZLIB_1.2.0+0x998>  // b.hs, b.nlast
    6a60:	mvn	w8, w27
    6a64:	add	w8, w19, w8
    6a68:	add	w8, w8, #0x8
    6a6c:	and	w8, w8, #0xfffffff8
    6a70:	mov	w24, w27
    6a74:	add	w27, w8, w27
    6a78:	b	6aa4 <inflateBack@@ZLIB_1.2.0+0x8e8>
    6a7c:	ldur	x8, [x29, #-8]
    6a80:	sub	w20, w20, #0x1
    6a84:	add	x9, x8, #0x1
    6a88:	stur	x9, [x29, #-8]
    6a8c:	ldrb	w8, [x8]
    6a90:	lsl	x8, x8, x24
    6a94:	add	x24, x24, #0x8
    6a98:	cmp	x24, x19
    6a9c:	add	x22, x8, x22
    6aa0:	b.cs	6b50 <inflateBack@@ZLIB_1.2.0+0x994>  // b.hs, b.nlast
    6aa4:	cbnz	w20, 6a7c <inflateBack@@ZLIB_1.2.0+0x8c0>
    6aa8:	ldur	x0, [x29, #-16]
    6aac:	sub	x1, x29, #0x8
    6ab0:	blr	x25
    6ab4:	mov	w20, w0
    6ab8:	cbnz	w0, 6a7c <inflateBack@@ZLIB_1.2.0+0x8c0>
    6abc:	b	6fbc <inflateBack@@ZLIB_1.2.0+0xe00>
    6ac0:	add	w19, w21, #0x7
    6ac4:	cmp	w27, w19
    6ac8:	b.cs	6b90 <inflateBack@@ZLIB_1.2.0+0x9d4>  // b.hs, b.nlast
    6acc:	mvn	w8, w27
    6ad0:	add	w8, w19, w8
    6ad4:	add	w8, w8, #0x8
    6ad8:	and	w8, w8, #0xfffffff8
    6adc:	mov	w24, w27
    6ae0:	add	w27, w8, w27
    6ae4:	b	6b10 <inflateBack@@ZLIB_1.2.0+0x954>
    6ae8:	ldur	x8, [x29, #-8]
    6aec:	sub	w20, w20, #0x1
    6af0:	add	x9, x8, #0x1
    6af4:	stur	x9, [x29, #-8]
    6af8:	ldrb	w8, [x8]
    6afc:	lsl	x8, x8, x24
    6b00:	add	x24, x24, #0x8
    6b04:	cmp	x24, x19
    6b08:	add	x22, x8, x22
    6b0c:	b.cs	6b8c <inflateBack@@ZLIB_1.2.0+0x9d0>  // b.hs, b.nlast
    6b10:	cbnz	w20, 6ae8 <inflateBack@@ZLIB_1.2.0+0x92c>
    6b14:	ldur	x0, [x29, #-16]
    6b18:	sub	x1, x29, #0x8
    6b1c:	blr	x25
    6b20:	mov	w20, w0
    6b24:	cbnz	w0, 6ae8 <inflateBack@@ZLIB_1.2.0+0x92c>
    6b28:	b	6fbc <inflateBack@@ZLIB_1.2.0+0xe00>
    6b2c:	ldr	x24, [sp, #8]
    6b30:	lsr	x9, x22, x21
    6b34:	sub	w10, w27, w21
    6b38:	and	w11, w9, #0x7
    6b3c:	mov	w8, wzr
    6b40:	lsr	x22, x9, #3
    6b44:	add	w9, w11, #0x3
    6b48:	sub	w27, w10, #0x3
    6b4c:	b	6bac <inflateBack@@ZLIB_1.2.0+0x9f0>
    6b50:	ldr	x24, [sp, #8]
    6b54:	ldr	w8, [x23, #140]
    6b58:	lsr	x22, x22, x21
    6b5c:	sub	w27, w27, w21
    6b60:	mov	w19, #0xffffc0c1            	// #-16191
    6b64:	cbz	w8, 6eb0 <inflateBack@@ZLIB_1.2.0+0xcf4>
    6b68:	sub	w8, w8, #0x1
    6b6c:	add	x8, x23, w8, uxtw #1
    6b70:	ldrh	w8, [x8, #152]
    6b74:	ldur	x21, [x29, #-24]
    6b78:	and	w9, w22, #0x3
    6b7c:	add	w9, w9, #0x3
    6b80:	lsr	x22, x22, #2
    6b84:	sub	w27, w27, #0x2
    6b88:	b	6bb4 <inflateBack@@ZLIB_1.2.0+0x9f8>
    6b8c:	ldr	x24, [sp, #8]
    6b90:	lsr	x9, x22, x21
    6b94:	sub	w10, w27, w21
    6b98:	and	w11, w9, #0x7f
    6b9c:	mov	w8, wzr
    6ba0:	lsr	x22, x9, #7
    6ba4:	add	w9, w11, #0xb
    6ba8:	sub	w27, w10, #0x7
    6bac:	ldur	x21, [x29, #-24]
    6bb0:	mov	w19, #0xffffc0c1            	// #-16191
    6bb4:	ldp	w12, w10, [x23, #136]
    6bb8:	ldr	w11, [x23, #132]
    6bbc:	add	w10, w10, w9
    6bc0:	add	w11, w12, w11
    6bc4:	cmp	w10, w11
    6bc8:	b.hi	6ea8 <inflateBack@@ZLIB_1.2.0+0xcec>  // b.pmore
    6bcc:	ldr	w10, [x23, #140]
    6bd0:	subs	w9, w9, #0x1
    6bd4:	add	x11, x23, w10, uxtw #1
    6bd8:	add	w10, w10, #0x1
    6bdc:	strh	w8, [x11, #152]
    6be0:	b.ne	6bd0 <inflateBack@@ZLIB_1.2.0+0xa14>  // b.any
    6be4:	str	w10, [x23, #140]
    6be8:	b	6924 <inflateBack@@ZLIB_1.2.0+0x768>
    6bec:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6bf0:	ldur	x21, [x29, #-24]
    6bf4:	add	x8, x8, #0x2f8
    6bf8:	str	x8, [x24, #48]
    6bfc:	mov	w8, #0x3f51                	// #16209
    6c00:	str	w8, [x23, #8]
    6c04:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    6c08:	mov	w19, #0xffffffff            	// #-1
    6c0c:	ldr	w8, [x23, #124]
    6c10:	ldr	x9, [x23, #112]
    6c14:	lsl	w8, w19, w8
    6c18:	bic	w8, w22, w8
    6c1c:	add	x8, x9, w8, uxtw #2
    6c20:	ldrb	w21, [x8, #1]
    6c24:	cmp	w27, w21
    6c28:	b.cs	6c94 <inflateBack@@ZLIB_1.2.0+0xad8>  // b.hs, b.nlast
    6c2c:	mov	w27, w27
    6c30:	b	6c74 <inflateBack@@ZLIB_1.2.0+0xab8>
    6c34:	ldur	x8, [x29, #-8]
    6c38:	sub	w20, w20, #0x1
    6c3c:	add	x9, x8, #0x1
    6c40:	stur	x9, [x29, #-8]
    6c44:	ldrb	w9, [x8]
    6c48:	ldr	w10, [x23, #124]
    6c4c:	ldr	x8, [x23, #112]
    6c50:	lsl	x9, x9, x27
    6c54:	add	x22, x9, x22
    6c58:	lsl	w9, w19, w10
    6c5c:	bic	w9, w22, w9
    6c60:	add	x10, x8, w9, uxtw #2
    6c64:	ldrb	w21, [x10, #1]
    6c68:	add	x27, x27, #0x8
    6c6c:	cmp	x27, x21
    6c70:	b.cs	6c90 <inflateBack@@ZLIB_1.2.0+0xad4>  // b.hs, b.nlast
    6c74:	cbnz	w20, 6c34 <inflateBack@@ZLIB_1.2.0+0xa78>
    6c78:	ldur	x0, [x29, #-16]
    6c7c:	sub	x1, x29, #0x8
    6c80:	blr	x25
    6c84:	mov	w20, w0
    6c88:	cbnz	w0, 6c34 <inflateBack@@ZLIB_1.2.0+0xa78>
    6c8c:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    6c90:	add	x8, x8, x9, lsl #2
    6c94:	add	x9, x8, #0x2
    6c98:	ldrb	w10, [x8]
    6c9c:	ldrh	w19, [x9]
    6ca0:	tst	w10, #0xf0
    6ca4:	b.ne	6d70 <inflateBack@@ZLIB_1.2.0+0xbb4>  // b.any
    6ca8:	add	w9, w21, w10
    6cac:	mov	w10, #0xffffffff            	// #-1
    6cb0:	ldr	x8, [x23, #112]
    6cb4:	lsl	w11, w10, w9
    6cb8:	bic	w9, w22, w11
    6cbc:	lsr	w9, w9, w21
    6cc0:	add	w10, w9, w19
    6cc4:	add	x9, x8, w10, uxtw #2
    6cc8:	ldrb	w9, [x9, #1]
    6ccc:	add	w12, w21, w9
    6cd0:	cmp	w12, w27
    6cd4:	b.ls	6d58 <inflateBack@@ZLIB_1.2.0+0xb9c>  // b.plast
    6cd8:	str	x24, [sp, #8]
    6cdc:	mvn	w24, w11
    6ce0:	b	6d28 <inflateBack@@ZLIB_1.2.0+0xb6c>
    6ce4:	ldur	x8, [x29, #-8]
    6ce8:	sub	w20, w20, #0x1
    6cec:	add	x9, x8, #0x1
    6cf0:	stur	x9, [x29, #-8]
    6cf4:	ldrb	w8, [x8]
    6cf8:	lsl	x8, x8, x27
    6cfc:	add	x22, x8, x22
    6d00:	ldr	x8, [x23, #112]
    6d04:	and	w9, w22, w24
    6d08:	lsr	w9, w9, w21
    6d0c:	add	w10, w9, w19
    6d10:	add	x9, x8, w10, uxtw #2
    6d14:	ldrb	w9, [x9, #1]
    6d18:	add	w27, w27, #0x8
    6d1c:	add	w11, w21, w9
    6d20:	cmp	w11, w27
    6d24:	b.ls	6d50 <inflateBack@@ZLIB_1.2.0+0xb94>  // b.plast
    6d28:	cbnz	w20, 6ce4 <inflateBack@@ZLIB_1.2.0+0xb28>
    6d2c:	ldur	x0, [x29, #-16]
    6d30:	sub	x1, x29, #0x8
    6d34:	blr	x25
    6d38:	mov	w20, w0
    6d3c:	cbnz	w0, 6ce4 <inflateBack@@ZLIB_1.2.0+0xb28>
    6d40:	b	6fbc <inflateBack@@ZLIB_1.2.0+0xe00>
    6d44:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6d48:	add	x8, x8, #0x2a1
    6d4c:	b	6568 <inflateBack@@ZLIB_1.2.0+0x3ac>
    6d50:	ldr	x24, [sp, #8]
    6d54:	mov	w10, w10
    6d58:	add	x8, x8, x10, lsl #2
    6d5c:	ldrh	w19, [x8, #2]
    6d60:	ldrb	w10, [x8]
    6d64:	lsr	x22, x22, x21
    6d68:	sub	w27, w27, w21
    6d6c:	mov	w21, w9
    6d70:	lsr	x22, x22, x21
    6d74:	sub	w27, w27, w21
    6d78:	tbnz	w10, #6, 6f7c <inflateBack@@ZLIB_1.2.0+0xdc0>
    6d7c:	ands	w8, w10, #0xf
    6d80:	stp	w19, w8, [x23, #96]
    6d84:	ldur	x21, [x29, #-24]
    6d88:	b.eq	6e08 <inflateBack@@ZLIB_1.2.0+0xc4c>  // b.none
    6d8c:	ldr	w8, [x23, #100]
    6d90:	mov	w19, #0xffffc0c1            	// #-16191
    6d94:	cmp	w27, w8
    6d98:	b.cc	6dec <inflateBack@@ZLIB_1.2.0+0xc30>  // b.lo, b.ul, b.last
    6d9c:	ldr	w9, [x23, #96]
    6da0:	mov	w10, #0xffffffff            	// #-1
    6da4:	lsl	w10, w10, w8
    6da8:	bic	w10, w22, w10
    6dac:	lsr	x22, x22, x8
    6db0:	add	w9, w9, w10
    6db4:	sub	w27, w27, w8
    6db8:	str	w9, [x23, #96]
    6dbc:	b	6e0c <inflateBack@@ZLIB_1.2.0+0xc50>
    6dc0:	ldur	x8, [x29, #-8]
    6dc4:	sub	w20, w20, #0x1
    6dc8:	add	x9, x8, #0x1
    6dcc:	stur	x9, [x29, #-8]
    6dd0:	ldrb	w9, [x8]
    6dd4:	ldr	w8, [x23, #100]
    6dd8:	lsl	x9, x9, x27
    6ddc:	add	w27, w27, #0x8
    6de0:	cmp	w27, w8
    6de4:	add	x22, x9, x22
    6de8:	b.cs	6d9c <inflateBack@@ZLIB_1.2.0+0xbe0>  // b.hs, b.nlast
    6dec:	cbnz	w20, 6dc0 <inflateBack@@ZLIB_1.2.0+0xc04>
    6df0:	ldur	x0, [x29, #-16]
    6df4:	sub	x1, x29, #0x8
    6df8:	blr	x25
    6dfc:	mov	w20, w0
    6e00:	cbnz	w0, 6dc0 <inflateBack@@ZLIB_1.2.0+0xc04>
    6e04:	b	6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    6e08:	mov	w19, #0xffffc0c1            	// #-16191
    6e0c:	ldp	w8, w9, [x23, #60]
    6e10:	ldr	w10, [x23, #96]
    6e14:	cmp	w9, w8
    6e18:	csel	w9, w28, wzr, cc  // cc = lo, ul, last
    6e1c:	sub	w8, w8, w9
    6e20:	cmp	w10, w8
    6e24:	b.ls	6e34 <inflateBack@@ZLIB_1.2.0+0xc78>  // b.plast
    6e28:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6e2c:	add	x8, x8, #0x32a
    6e30:	b	6568 <inflateBack@@ZLIB_1.2.0+0x3ac>
    6e34:	cbnz	w28, 6e58 <inflateBack@@ZLIB_1.2.0+0xc9c>
    6e38:	ldr	w28, [x23, #60]
    6e3c:	ldr	x26, [x23, #72]
    6e40:	ldur	x0, [x29, #-32]
    6e44:	mov	w2, w28
    6e48:	mov	x1, x26
    6e4c:	str	w28, [x23, #64]
    6e50:	blr	x21
    6e54:	cbnz	w0, 6fc4 <inflateBack@@ZLIB_1.2.0+0xe08>
    6e58:	ldr	w8, [x23, #60]
    6e5c:	ldp	w10, w9, [x23, #92]
    6e60:	sub	w8, w8, w9
    6e64:	cmp	w28, w8
    6e68:	csel	w11, w8, wzr, hi  // hi = pmore
    6e6c:	csneg	x9, x8, x9, hi  // hi = pmore
    6e70:	sub	w8, w28, w11
    6e74:	cmp	w8, w10
    6e78:	csel	w8, w10, w8, hi  // hi = pmore
    6e7c:	sub	w10, w10, w8
    6e80:	str	w10, [x23, #92]
    6e84:	mov	w10, w8
    6e88:	ldrb	w11, [x26, x9]
    6e8c:	subs	w10, w10, #0x1
    6e90:	strb	w11, [x26], #1
    6e94:	b.ne	6e88 <inflateBack@@ZLIB_1.2.0+0xccc>  // b.any
    6e98:	ldr	w9, [x23, #92]
    6e9c:	sub	w28, w28, w8
    6ea0:	cbnz	w9, 6e34 <inflateBack@@ZLIB_1.2.0+0xc78>
    6ea4:	b	6270 <inflateBack@@ZLIB_1.2.0+0xb4>
    6ea8:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6eac:	b	6eb8 <inflateBack@@ZLIB_1.2.0+0xcfc>
    6eb0:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6eb4:	ldur	x21, [x29, #-24]
    6eb8:	add	x8, x8, #0x287
    6ebc:	str	x8, [x24, #48]
    6ec0:	mov	w8, #0x3f51                	// #16209
    6ec4:	str	w8, [x23, #8]
    6ec8:	b	6588 <inflateBack@@ZLIB_1.2.0+0x3cc>
    6ecc:	ands	w19, w22, #0xffff
    6ed0:	str	w19, [x23, #92]
    6ed4:	b.eq	6f68 <inflateBack@@ZLIB_1.2.0+0xdac>  // b.none
    6ed8:	ldur	x22, [x29, #-32]
    6edc:	b	6f28 <inflateBack@@ZLIB_1.2.0+0xd6c>
    6ee0:	cmp	w19, w20
    6ee4:	ldur	x1, [x29, #-8]
    6ee8:	csel	w8, w20, w19, hi  // hi = pmore
    6eec:	cmp	w8, w28
    6ef0:	csel	w27, w28, w8, hi  // hi = pmore
    6ef4:	mov	x0, x26
    6ef8:	mov	x2, x27
    6efc:	bl	23a0 <memcpy@plt>
    6f00:	ldur	x8, [x29, #-8]
    6f04:	sub	w20, w20, w27
    6f08:	sub	w28, w28, w27
    6f0c:	add	x26, x26, x27
    6f10:	add	x8, x8, x27
    6f14:	stur	x8, [x29, #-8]
    6f18:	ldr	w8, [x23, #92]
    6f1c:	subs	w19, w8, w27
    6f20:	str	w19, [x23, #92]
    6f24:	b.eq	6f68 <inflateBack@@ZLIB_1.2.0+0xdac>  // b.none
    6f28:	cbnz	w20, 6f40 <inflateBack@@ZLIB_1.2.0+0xd84>
    6f2c:	ldur	x0, [x29, #-16]
    6f30:	sub	x1, x29, #0x8
    6f34:	blr	x25
    6f38:	mov	w20, w0
    6f3c:	cbz	w0, 6fc0 <inflateBack@@ZLIB_1.2.0+0xe04>
    6f40:	cbnz	w28, 6ee0 <inflateBack@@ZLIB_1.2.0+0xd24>
    6f44:	ldr	w28, [x23, #60]
    6f48:	ldr	x26, [x23, #72]
    6f4c:	mov	x0, x22
    6f50:	mov	w2, w28
    6f54:	mov	x1, x26
    6f58:	str	w28, [x23, #64]
    6f5c:	blr	x21
    6f60:	cbz	w0, 6ee0 <inflateBack@@ZLIB_1.2.0+0xd24>
    6f64:	b	6fc4 <inflateBack@@ZLIB_1.2.0+0xe08>
    6f68:	mov	w8, #0x3f3f                	// #16191
    6f6c:	mov	x22, xzr
    6f70:	mov	w27, wzr
    6f74:	str	w8, [x23, #8]
    6f78:	b	626c <inflateBack@@ZLIB_1.2.0+0xb0>
    6f7c:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6f80:	ldur	x21, [x29, #-24]
    6f84:	add	x8, x8, #0x314
    6f88:	str	x8, [x24, #48]
    6f8c:	mov	w8, #0x3f51                	// #16209
    6f90:	str	w8, [x23, #8]
    6f94:	b	626c <inflateBack@@ZLIB_1.2.0+0xb0>
    6f98:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6f9c:	add	x8, x8, #0x2c6
    6fa0:	b	6fac <inflateBack@@ZLIB_1.2.0+0xdf0>
    6fa4:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    6fa8:	add	x8, x8, #0x2e2
    6fac:	str	x8, [x24, #48]
    6fb0:	mov	w8, #0x3f51                	// #16209
    6fb4:	str	w8, [x23, #8]
    6fb8:	b	626c <inflateBack@@ZLIB_1.2.0+0xb0>
    6fbc:	ldr	x24, [sp, #8]
    6fc0:	stur	xzr, [x29, #-8]
    6fc4:	mov	w0, #0xfffffffb            	// #-5
    6fc8:	ldur	x8, [x29, #-8]
    6fcc:	str	w20, [x24, #8]
    6fd0:	str	x8, [x24]
    6fd4:	ldp	x20, x19, [sp, #176]
    6fd8:	ldp	x22, x21, [sp, #160]
    6fdc:	ldp	x24, x23, [sp, #144]
    6fe0:	ldp	x26, x25, [sp, #128]
    6fe4:	ldp	x28, x27, [sp, #112]
    6fe8:	ldp	x29, x30, [sp, #96]
    6fec:	add	sp, sp, #0xc0
    6ff0:	ret
    6ff4:	mov	w0, #0xfffffffe            	// #-2
    6ff8:	b	6fc8 <inflateBack@@ZLIB_1.2.0+0xe0c>
    6ffc:	ldr	w8, [x23, #60]
    7000:	subs	w2, w8, w28
    7004:	b.ls	7024 <inflateBack@@ZLIB_1.2.0+0xe68>  // b.plast
    7008:	ldr	x1, [x23, #72]
    700c:	ldur	x0, [x29, #-32]
    7010:	blr	x21
    7014:	cmp	w0, #0x0
    7018:	mov	w8, #0xfffffffb            	// #-5
    701c:	csinc	w0, w8, wzr, ne  // ne = any
    7020:	b	6fc8 <inflateBack@@ZLIB_1.2.0+0xe0c>
    7024:	mov	w0, #0x1                   	// #1
    7028:	b	6fc8 <inflateBack@@ZLIB_1.2.0+0xe0c>
    702c:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x17e8>
    7030:	mov	x9, #0x9                   	// #9
    7034:	adrp	x10, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7038:	add	x8, x8, #0x99a
    703c:	movk	x9, #0x5, lsl #32
    7040:	add	x10, x10, #0x19a
    7044:	stp	x10, x9, [x0, #112]
    7048:	str	x8, [x0, #104]
    704c:	ret

0000000000007050 <inflateBackEnd@@ZLIB_1.2.0>:
    7050:	stp	x29, x30, [sp, #-32]!
    7054:	str	x19, [sp, #16]
    7058:	mov	x29, sp
    705c:	cbz	x0, 7088 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    7060:	ldr	x1, [x0, #56]
    7064:	mov	x19, x0
    7068:	cbz	x1, 7088 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    706c:	ldr	x8, [x19, #72]
    7070:	cbz	x8, 7088 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    7074:	ldr	x0, [x19, #80]
    7078:	blr	x8
    707c:	mov	w0, wzr
    7080:	str	xzr, [x19, #56]
    7084:	b	708c <inflateBackEnd@@ZLIB_1.2.0+0x3c>
    7088:	mov	w0, #0xfffffffe            	// #-2
    708c:	ldr	x19, [sp, #16]
    7090:	ldp	x29, x30, [sp], #32
    7094:	ret
    7098:	stp	x28, x27, [sp, #-80]!
    709c:	stp	x26, x25, [sp, #16]
    70a0:	stp	x24, x23, [sp, #32]
    70a4:	stp	x22, x21, [sp, #48]
    70a8:	stp	x20, x19, [sp, #64]
    70ac:	ldr	x8, [x0, #56]
    70b0:	ldr	w12, [x0, #32]
    70b4:	ldr	w11, [x0, #8]
    70b8:	ldr	x9, [x0, #24]
    70bc:	ldp	w19, w20, [x8, #120]
    70c0:	ldr	x10, [x0]
    70c4:	sub	w15, w1, w12
    70c8:	ldp	w18, w1, [x8, #60]
    70cc:	ldr	w2, [x8, #68]
    70d0:	mov	w16, #0xffffffff            	// #-1
    70d4:	sub	w13, w11, #0x5
    70d8:	ldp	x3, x11, [x8, #72]
    70dc:	ldr	w14, [x8, #88]
    70e0:	ldp	x4, x5, [x8, #104]
    70e4:	sub	x6, x9, x15
    70e8:	lsl	w15, w16, w19
    70ec:	adrp	x17, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    70f0:	sub	w7, w12, #0x101
    70f4:	lsl	w20, w16, w20
    70f8:	mvn	w19, w15
    70fc:	adrp	x15, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7100:	add	x17, x17, #0x314
    7104:	add	x12, x10, x13
    7108:	add	x13, x9, x7
    710c:	add	w7, w2, w18
    7110:	mvn	w20, w20
    7114:	add	x15, x15, #0x32a
    7118:	cmp	w14, #0xe
    711c:	b.hi	7144 <inflateBackEnd@@ZLIB_1.2.0+0xf4>  // b.pmore
    7120:	ldrb	w21, [x10]
    7124:	ldrb	w22, [x10, #1]
    7128:	add	w23, w14, #0x8
    712c:	add	x10, x10, #0x2
    7130:	lsl	x21, x21, x14
    7134:	lsl	x22, x22, x23
    7138:	add	x11, x21, x11
    713c:	add	x11, x11, x22
    7140:	add	w14, w14, #0x10
    7144:	and	x21, x11, x19
    7148:	add	x21, x4, x21, lsl #2
    714c:	ldrb	w23, [x21, #1]
    7150:	ldrb	w22, [x21]
    7154:	ldrh	w21, [x21, #2]
    7158:	lsr	x11, x11, x23
    715c:	sub	w14, w14, w23
    7160:	cbz	w22, 7184 <inflateBackEnd@@ZLIB_1.2.0+0x134>
    7164:	and	w23, w22, #0xff
    7168:	tbnz	w22, #4, 719c <inflateBackEnd@@ZLIB_1.2.0+0x14c>
    716c:	tbnz	w23, #6, 74a8 <inflateBackEnd@@ZLIB_1.2.0+0x458>
    7170:	lsl	w22, w16, w23
    7174:	mvn	w22, w22
    7178:	and	x22, x11, x22
    717c:	add	x21, x22, w21, uxth
    7180:	b	7148 <inflateBackEnd@@ZLIB_1.2.0+0xf8>
    7184:	strb	w21, [x9], #1
    7188:	cmp	x9, x13
    718c:	b.cs	74d0 <inflateBackEnd@@ZLIB_1.2.0+0x480>  // b.hs, b.nlast
    7190:	cmp	x10, x12
    7194:	b.cc	7118 <inflateBackEnd@@ZLIB_1.2.0+0xc8>  // b.lo, b.ul, b.last
    7198:	b	74d0 <inflateBackEnd@@ZLIB_1.2.0+0x480>
    719c:	ands	w22, w23, #0xf
    71a0:	and	w21, w21, #0xffff
    71a4:	b.eq	71d4 <inflateBackEnd@@ZLIB_1.2.0+0x184>  // b.none
    71a8:	cmp	w14, w22
    71ac:	b.cs	71c0 <inflateBackEnd@@ZLIB_1.2.0+0x170>  // b.hs, b.nlast
    71b0:	ldrb	w23, [x10], #1
    71b4:	lsl	x23, x23, x14
    71b8:	add	x11, x23, x11
    71bc:	add	w14, w14, #0x8
    71c0:	lsl	w23, w16, w22
    71c4:	bic	w23, w11, w23
    71c8:	lsr	x11, x11, x22
    71cc:	add	w21, w23, w21
    71d0:	sub	w14, w14, w22
    71d4:	cmp	w14, #0xe
    71d8:	b.hi	7200 <inflateBackEnd@@ZLIB_1.2.0+0x1b0>  // b.pmore
    71dc:	ldrb	w22, [x10]
    71e0:	ldrb	w23, [x10, #1]
    71e4:	add	w24, w14, #0x8
    71e8:	add	x10, x10, #0x2
    71ec:	lsl	x22, x22, x14
    71f0:	lsl	x23, x23, x24
    71f4:	add	x11, x22, x11
    71f8:	add	x11, x11, x23
    71fc:	add	w14, w14, #0x10
    7200:	and	x22, x11, x20
    7204:	add	x22, x5, x22, lsl #2
    7208:	ldrb	w24, [x22, #1]
    720c:	ldrb	w23, [x22]
    7210:	ldrh	w22, [x22, #2]
    7214:	lsr	x11, x11, x24
    7218:	sub	w14, w14, w24
    721c:	tbnz	w23, #4, 7238 <inflateBackEnd@@ZLIB_1.2.0+0x1e8>
    7220:	tbnz	w23, #6, 74c0 <inflateBackEnd@@ZLIB_1.2.0+0x470>
    7224:	lsl	w23, w16, w23
    7228:	mvn	w23, w23
    722c:	and	x23, x11, x23
    7230:	add	x22, x23, w22, uxth
    7234:	b	7204 <inflateBackEnd@@ZLIB_1.2.0+0x1b4>
    7238:	and	w23, w23, #0xf
    723c:	cmp	w14, w23
    7240:	b.cs	7278 <inflateBackEnd@@ZLIB_1.2.0+0x228>  // b.hs, b.nlast
    7244:	mov	x24, x10
    7248:	ldrb	w26, [x24], #1
    724c:	add	w25, w14, #0x8
    7250:	cmp	w25, w23
    7254:	lsl	x26, x26, x14
    7258:	add	x11, x26, x11
    725c:	b.cs	7280 <inflateBackEnd@@ZLIB_1.2.0+0x230>  // b.hs, b.nlast
    7260:	ldrb	w24, [x10, #1]
    7264:	add	x10, x10, #0x2
    7268:	lsl	x24, x24, x25
    726c:	add	x11, x24, x11
    7270:	add	w25, w14, #0x10
    7274:	b	7284 <inflateBackEnd@@ZLIB_1.2.0+0x234>
    7278:	mov	w25, w14
    727c:	b	7284 <inflateBackEnd@@ZLIB_1.2.0+0x234>
    7280:	mov	x10, x24
    7284:	lsl	w14, w16, w23
    7288:	bic	w14, w11, w14
    728c:	add	w22, w14, w22
    7290:	sub	w14, w9, w6
    7294:	lsr	x11, x11, x23
    7298:	subs	w24, w22, w14
    729c:	sub	w14, w25, w23
    72a0:	b.ls	7324 <inflateBackEnd@@ZLIB_1.2.0+0x2d4>  // b.plast
    72a4:	cmp	w24, w1
    72a8:	b.ls	72b4 <inflateBackEnd@@ZLIB_1.2.0+0x264>  // b.plast
    72ac:	ldr	w23, [x8, #7144]
    72b0:	cbnz	w23, 74c4 <inflateBackEnd@@ZLIB_1.2.0+0x474>
    72b4:	cbz	w2, 73ac <inflateBackEnd@@ZLIB_1.2.0+0x35c>
    72b8:	cmp	w2, w24
    72bc:	b.cs	73d0 <inflateBackEnd@@ZLIB_1.2.0+0x380>  // b.hs, b.nlast
    72c0:	sub	w23, w24, w2
    72c4:	subs	w23, w21, w23
    72c8:	sub	w25, w7, w24
    72cc:	b.ls	7420 <inflateBackEnd@@ZLIB_1.2.0+0x3d0>  // b.plast
    72d0:	ldrb	w21, [x3, x25]
    72d4:	sub	w24, w24, #0x1
    72d8:	cmp	w2, w24
    72dc:	add	x25, x25, #0x1
    72e0:	strb	w21, [x9], #1
    72e4:	b.ne	72d0 <inflateBackEnd@@ZLIB_1.2.0+0x280>  // b.any
    72e8:	cmp	w23, w2
    72ec:	b.ls	7494 <inflateBackEnd@@ZLIB_1.2.0+0x444>  // b.plast
    72f0:	mov	x24, xzr
    72f4:	ldrb	w21, [x3, x24]
    72f8:	strb	w21, [x9, x24]
    72fc:	add	x24, x24, #0x1
    7300:	cmp	w2, w24
    7304:	b.ne	72f4 <inflateBackEnd@@ZLIB_1.2.0+0x2a4>  // b.any
    7308:	sub	x22, x9, w22, uxtw
    730c:	sub	w21, w23, w2
    7310:	add	x23, x22, x24
    7314:	add	x9, x9, x24
    7318:	cmp	w21, #0x3
    731c:	b.cs	742c <inflateBackEnd@@ZLIB_1.2.0+0x3dc>  // b.hs, b.nlast
    7320:	b	7468 <inflateBackEnd@@ZLIB_1.2.0+0x418>
    7324:	mov	w24, w22
    7328:	neg	x22, x24
    732c:	sub	x24, x9, x24
    7330:	mov	x23, xzr
    7334:	add	x24, x24, #0x1
    7338:	mov	w25, w21
    733c:	add	x26, x24, x23
    7340:	ldurb	w27, [x26, #-1]
    7344:	add	x28, x9, x23
    7348:	sub	w25, w25, #0x3
    734c:	cmp	w25, #0x2
    7350:	strb	w27, [x28]
    7354:	ldrb	w27, [x26]
    7358:	add	x23, x23, #0x3
    735c:	strb	w27, [x28, #1]
    7360:	ldrb	w26, [x26, #1]
    7364:	strb	w26, [x28, #2]
    7368:	b.hi	733c <inflateBackEnd@@ZLIB_1.2.0+0x2ec>  // b.pmore
    736c:	cmp	w21, w23
    7370:	add	x24, x9, x23
    7374:	b.ne	7380 <inflateBackEnd@@ZLIB_1.2.0+0x330>  // b.any
    7378:	mov	x9, x24
    737c:	b	7188 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    7380:	add	x25, x9, x22
    7384:	add	x25, x25, x23
    7388:	add	x25, x25, #0x1
    738c:	ldurb	w25, [x25, #-1]
    7390:	mov	w21, w21
    7394:	sub	x21, x21, #0x1
    7398:	cmp	w21, w23
    739c:	strb	w25, [x24]
    73a0:	b.ne	7404 <inflateBackEnd@@ZLIB_1.2.0+0x3b4>  // b.any
    73a4:	add	x9, x24, #0x1
    73a8:	b	7188 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    73ac:	sub	w23, w18, w24
    73b0:	subs	w25, w21, w24
    73b4:	add	x23, x3, x23
    73b8:	b.ls	7424 <inflateBackEnd@@ZLIB_1.2.0+0x3d4>  // b.plast
    73bc:	ldrb	w21, [x23], #1
    73c0:	subs	w24, w24, #0x1
    73c4:	strb	w21, [x9], #1
    73c8:	b.ne	73bc <inflateBackEnd@@ZLIB_1.2.0+0x36c>  // b.any
    73cc:	b	73f0 <inflateBackEnd@@ZLIB_1.2.0+0x3a0>
    73d0:	sub	w23, w2, w24
    73d4:	subs	w25, w21, w24
    73d8:	add	x23, x3, x23
    73dc:	b.ls	7424 <inflateBackEnd@@ZLIB_1.2.0+0x3d4>  // b.plast
    73e0:	ldrb	w21, [x23], #1
    73e4:	subs	w24, w24, #0x1
    73e8:	strb	w21, [x9], #1
    73ec:	b.ne	73e0 <inflateBackEnd@@ZLIB_1.2.0+0x390>  // b.any
    73f0:	sub	x23, x9, w22, uxtw
    73f4:	mov	w21, w25
    73f8:	cmp	w21, #0x3
    73fc:	b.cs	742c <inflateBackEnd@@ZLIB_1.2.0+0x3dc>  // b.hs, b.nlast
    7400:	b	7468 <inflateBackEnd@@ZLIB_1.2.0+0x418>
    7404:	add	x21, x9, x22
    7408:	add	x21, x21, x23
    740c:	ldrb	w21, [x21, #1]
    7410:	add	x9, x9, x23
    7414:	add	x9, x9, #0x2
    7418:	strb	w21, [x24, #1]
    741c:	b	7188 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    7420:	add	x23, x3, x25
    7424:	cmp	w21, #0x3
    7428:	b.cc	7468 <inflateBackEnd@@ZLIB_1.2.0+0x418>  // b.lo, b.ul, b.last
    742c:	ldrb	w22, [x23]
    7430:	add	x24, x9, #0x3
    7434:	sub	w21, w21, #0x3
    7438:	cmp	w21, #0x2
    743c:	strb	w22, [x9]
    7440:	ldrb	w22, [x23, #1]
    7444:	strb	w22, [x9, #1]
    7448:	add	x22, x23, #0x3
    744c:	ldrb	w23, [x23, #2]
    7450:	strb	w23, [x9, #2]
    7454:	mov	x23, x22
    7458:	mov	x9, x24
    745c:	b.hi	742c <inflateBackEnd@@ZLIB_1.2.0+0x3dc>  // b.pmore
    7460:	mov	x9, x24
    7464:	mov	x23, x22
    7468:	cbz	w21, 7188 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    746c:	ldrb	w24, [x23]
    7470:	mov	x22, x9
    7474:	cmp	w21, #0x1
    7478:	strb	w24, [x22], #1
    747c:	b.eq	748c <inflateBackEnd@@ZLIB_1.2.0+0x43c>  // b.none
    7480:	ldrb	w21, [x23, #1]
    7484:	add	x22, x9, #0x2
    7488:	strb	w21, [x9, #1]
    748c:	mov	x9, x22
    7490:	b	7188 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    7494:	mov	w21, w23
    7498:	mov	x23, x3
    749c:	cmp	w21, #0x3
    74a0:	b.cs	742c <inflateBackEnd@@ZLIB_1.2.0+0x3dc>  // b.hs, b.nlast
    74a4:	b	7468 <inflateBackEnd@@ZLIB_1.2.0+0x418>
    74a8:	tbnz	w23, #5, 74b8 <inflateBackEnd@@ZLIB_1.2.0+0x468>
    74ac:	adrp	x15, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    74b0:	add	x15, x15, #0x2f8
    74b4:	b	74c4 <inflateBackEnd@@ZLIB_1.2.0+0x474>
    74b8:	mov	w15, #0x3f3f                	// #16191
    74bc:	b	74cc <inflateBackEnd@@ZLIB_1.2.0+0x47c>
    74c0:	mov	x15, x17
    74c4:	str	x15, [x0, #48]
    74c8:	mov	w15, #0x3f51                	// #16209
    74cc:	str	w15, [x8, #8]
    74d0:	lsr	w15, w14, #3
    74d4:	and	w14, w14, #0x7
    74d8:	str	x9, [x0, #24]
    74dc:	sub	w9, w13, w9
    74e0:	mov	w13, #0xffffffff            	// #-1
    74e4:	sub	x10, x10, x15
    74e8:	lsl	w13, w13, w14
    74ec:	add	w9, w9, #0x101
    74f0:	mvn	w13, w13
    74f4:	str	x10, [x0]
    74f8:	sub	w10, w12, w10
    74fc:	str	w9, [x0, #32]
    7500:	and	x9, x11, x13
    7504:	add	w10, w10, #0x5
    7508:	str	w10, [x0, #8]
    750c:	str	x9, [x8, #80]
    7510:	str	w14, [x8, #88]
    7514:	ldp	x20, x19, [sp, #64]
    7518:	ldp	x22, x21, [sp, #48]
    751c:	ldp	x24, x23, [sp, #32]
    7520:	ldp	x26, x25, [sp, #16]
    7524:	ldp	x28, x27, [sp], #80
    7528:	ret

000000000000752c <inflateResetKeep@@ZLIB_1.2.5.2>:
    752c:	stp	x29, x30, [sp, #-32]!
    7530:	str	x19, [sp, #16]
    7534:	mov	x29, sp
    7538:	mov	x19, x0
    753c:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    7540:	cbz	w0, 754c <inflateResetKeep@@ZLIB_1.2.5.2+0x20>
    7544:	mov	w0, #0xfffffffe            	// #-2
    7548:	b	75a4 <inflateResetKeep@@ZLIB_1.2.5.2+0x78>
    754c:	ldr	x8, [x19, #56]
    7550:	str	xzr, [x8, #40]
    7554:	str	xzr, [x19, #16]
    7558:	stp	xzr, xzr, [x19, #40]
    755c:	ldr	w9, [x8, #16]
    7560:	cbz	w9, 756c <inflateResetKeep@@ZLIB_1.2.5.2+0x40>
    7564:	and	x9, x9, #0x1
    7568:	str	x9, [x19, #96]
    756c:	mov	w0, wzr
    7570:	mov	w9, #0x3f34                	// #16180
    7574:	mov	w10, #0x8000                	// #32768
    7578:	add	x11, x8, #0x558
    757c:	mov	x12, #0xffffffff00000001    	// #-4294967295
    7580:	str	wzr, [x8, #20]
    7584:	str	xzr, [x8, #48]
    7588:	str	xzr, [x8, #80]
    758c:	str	wzr, [x8, #88]
    7590:	str	x9, [x8, #8]
    7594:	str	w10, [x8, #28]
    7598:	str	x11, [x8, #144]
    759c:	stp	x11, x11, [x8, #104]
    75a0:	str	x12, [x8, #7144]
    75a4:	ldr	x19, [sp, #16]
    75a8:	ldp	x29, x30, [sp], #32
    75ac:	ret
    75b0:	cbz	x0, 75d8 <inflateResetKeep@@ZLIB_1.2.5.2+0xac>
    75b4:	ldr	x8, [x0, #64]
    75b8:	cbz	x8, 75d8 <inflateResetKeep@@ZLIB_1.2.5.2+0xac>
    75bc:	ldr	x8, [x0, #72]
    75c0:	cbz	x8, 75d8 <inflateResetKeep@@ZLIB_1.2.5.2+0xac>
    75c4:	ldr	x8, [x0, #56]
    75c8:	cbz	x8, 75d8 <inflateResetKeep@@ZLIB_1.2.5.2+0xac>
    75cc:	ldr	x9, [x8]
    75d0:	cmp	x9, x0
    75d4:	b.eq	75e0 <inflateResetKeep@@ZLIB_1.2.5.2+0xb4>  // b.none
    75d8:	mov	w0, #0x1                   	// #1
    75dc:	ret
    75e0:	ldr	w8, [x8, #8]
    75e4:	mov	w9, #0xffffc0cc            	// #-16180
    75e8:	add	w8, w8, w9
    75ec:	cmp	w8, #0x1f
    75f0:	cset	w0, hi  // hi = pmore
    75f4:	ret

00000000000075f8 <inflateReset@@Base>:
    75f8:	stp	x29, x30, [sp, #-32]!
    75fc:	str	x19, [sp, #16]
    7600:	mov	x29, sp
    7604:	mov	x19, x0
    7608:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    760c:	cbz	w0, 7618 <inflateReset@@Base+0x20>
    7610:	mov	w0, #0xfffffffe            	// #-2
    7614:	b	762c <inflateReset@@Base+0x34>
    7618:	ldr	x8, [x19, #56]
    761c:	mov	x0, x19
    7620:	stur	xzr, [x8, #60]
    7624:	str	wzr, [x8, #68]
    7628:	bl	2440 <inflateResetKeep@plt>
    762c:	ldr	x19, [sp, #16]
    7630:	ldp	x29, x30, [sp], #32
    7634:	ret

0000000000007638 <inflateReset2@@ZLIB_1.2.3.4>:
    7638:	stp	x29, x30, [sp, #-48]!
    763c:	stp	x22, x21, [sp, #16]
    7640:	stp	x20, x19, [sp, #32]
    7644:	mov	x29, sp
    7648:	mov	w20, w1
    764c:	mov	x19, x0
    7650:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    7654:	cbnz	w0, 7694 <inflateReset2@@ZLIB_1.2.3.4+0x5c>
    7658:	ldr	x21, [x19, #56]
    765c:	tbnz	w20, #31, 767c <inflateReset2@@ZLIB_1.2.3.4+0x44>
    7660:	asr	w8, w20, #4
    7664:	and	w9, w20, #0xf
    7668:	cmp	w20, #0x30
    766c:	add	w22, w8, #0x5
    7670:	csel	w20, w9, w20, lt  // lt = tstop
    7674:	cbnz	w20, 7688 <inflateReset2@@ZLIB_1.2.3.4+0x50>
    7678:	b	76a8 <inflateReset2@@ZLIB_1.2.3.4+0x70>
    767c:	mov	w22, wzr
    7680:	neg	w20, w20
    7684:	cbz	w20, 76a8 <inflateReset2@@ZLIB_1.2.3.4+0x70>
    7688:	and	w8, w20, #0xfffffff8
    768c:	cmp	w8, #0x8
    7690:	b.eq	76a8 <inflateReset2@@ZLIB_1.2.3.4+0x70>  // b.none
    7694:	mov	w0, #0xfffffffe            	// #-2
    7698:	ldp	x20, x19, [sp, #32]
    769c:	ldp	x22, x21, [sp, #16]
    76a0:	ldp	x29, x30, [sp], #48
    76a4:	ret
    76a8:	ldr	x1, [x21, #72]
    76ac:	cbz	x1, 76c8 <inflateReset2@@ZLIB_1.2.3.4+0x90>
    76b0:	ldr	w8, [x21, #56]
    76b4:	cmp	w8, w20
    76b8:	b.eq	76c8 <inflateReset2@@ZLIB_1.2.3.4+0x90>  // b.none
    76bc:	ldp	x8, x0, [x19, #72]
    76c0:	blr	x8
    76c4:	str	xzr, [x21, #72]
    76c8:	mov	x0, x19
    76cc:	str	w22, [x21, #16]
    76d0:	str	w20, [x21, #56]
    76d4:	bl	2610 <inflateReset@plt>
    76d8:	b	7698 <inflateReset2@@ZLIB_1.2.3.4+0x60>

00000000000076dc <inflateInit2_@@Base>:
    76dc:	stp	x29, x30, [sp, #-48]!
    76e0:	stp	x22, x21, [sp, #16]
    76e4:	stp	x20, x19, [sp, #32]
    76e8:	mov	x29, sp
    76ec:	cbz	x2, 7780 <inflateInit2_@@Base+0xa4>
    76f0:	cmp	w3, #0x70
    76f4:	mov	w21, #0xfffffffa            	// #-6
    76f8:	b.ne	77bc <inflateInit2_@@Base+0xe0>  // b.any
    76fc:	ldrb	w8, [x2]
    7700:	cmp	w8, #0x31
    7704:	b.ne	77bc <inflateInit2_@@Base+0xe0>  // b.any
    7708:	mov	x19, x0
    770c:	cbz	x0, 7788 <inflateInit2_@@Base+0xac>
    7710:	ldr	x8, [x19, #64]
    7714:	mov	w20, w1
    7718:	str	xzr, [x19, #48]
    771c:	cbz	x8, 7790 <inflateInit2_@@Base+0xb4>
    7720:	ldr	x8, [x19, #72]
    7724:	cbz	x8, 77a8 <inflateInit2_@@Base+0xcc>
    7728:	ldr	x8, [x19, #64]
    772c:	ldr	x0, [x19, #80]
    7730:	mov	w1, #0x1                   	// #1
    7734:	mov	w2, #0x1bf8                	// #7160
    7738:	blr	x8
    773c:	cbz	x0, 77b8 <inflateInit2_@@Base+0xdc>
    7740:	mov	w8, #0x3f34                	// #16180
    7744:	mov	x22, x0
    7748:	str	x0, [x19, #56]
    774c:	str	x19, [x0]
    7750:	str	xzr, [x0, #72]
    7754:	str	w8, [x0, #8]
    7758:	mov	x0, x19
    775c:	mov	w1, w20
    7760:	bl	2640 <inflateReset2@plt>
    7764:	mov	w21, w0
    7768:	cbz	w0, 77bc <inflateInit2_@@Base+0xe0>
    776c:	ldp	x8, x0, [x19, #72]
    7770:	mov	x1, x22
    7774:	blr	x8
    7778:	str	xzr, [x19, #56]
    777c:	b	77bc <inflateInit2_@@Base+0xe0>
    7780:	mov	w21, #0xfffffffa            	// #-6
    7784:	b	77bc <inflateInit2_@@Base+0xe0>
    7788:	mov	w21, #0xfffffffe            	// #-2
    778c:	b	77bc <inflateInit2_@@Base+0xe0>
    7790:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x175c>
    7794:	add	x8, x8, #0x6e0
    7798:	str	x8, [x19, #64]
    779c:	str	xzr, [x19, #80]
    77a0:	ldr	x8, [x19, #72]
    77a4:	cbnz	x8, 7728 <inflateInit2_@@Base+0x4c>
    77a8:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x175c>
    77ac:	add	x8, x8, #0x6f8
    77b0:	str	x8, [x19, #72]
    77b4:	b	7728 <inflateInit2_@@Base+0x4c>
    77b8:	mov	w21, #0xfffffffc            	// #-4
    77bc:	mov	w0, w21
    77c0:	ldp	x20, x19, [sp, #32]
    77c4:	ldp	x22, x21, [sp, #16]
    77c8:	ldp	x29, x30, [sp], #48
    77cc:	ret

00000000000077d0 <inflateInit_@@Base>:
    77d0:	stp	x29, x30, [sp, #-16]!
    77d4:	mov	w3, w2
    77d8:	mov	x2, x1
    77dc:	mov	w1, #0xf                   	// #15
    77e0:	mov	x29, sp
    77e4:	bl	2600 <inflateInit2_@plt>
    77e8:	ldp	x29, x30, [sp], #16
    77ec:	ret

00000000000077f0 <inflatePrime@@ZLIB_1.2.2.4>:
    77f0:	stp	x29, x30, [sp, #-48]!
    77f4:	str	x21, [sp, #16]
    77f8:	stp	x20, x19, [sp, #32]
    77fc:	mov	x29, sp
    7800:	mov	w19, w2
    7804:	mov	w20, w1
    7808:	mov	x21, x0
    780c:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    7810:	cbz	w0, 7828 <inflatePrime@@ZLIB_1.2.2.4+0x38>
    7814:	mov	w0, #0xfffffffe            	// #-2
    7818:	ldp	x20, x19, [sp, #32]
    781c:	ldr	x21, [sp, #16]
    7820:	ldp	x29, x30, [sp], #48
    7824:	ret
    7828:	ldr	x8, [x21, #56]
    782c:	tbnz	w20, #31, 7870 <inflatePrime@@ZLIB_1.2.2.4+0x80>
    7830:	cmp	w20, #0x10
    7834:	b.gt	7814 <inflatePrime@@ZLIB_1.2.2.4+0x24>
    7838:	ldr	w10, [x8, #88]
    783c:	add	w9, w10, w20
    7840:	cmp	w9, #0x20
    7844:	b.hi	7814 <inflatePrime@@ZLIB_1.2.2.4+0x24>  // b.pmore
    7848:	mov	x11, #0xffffffffffffffff    	// #-1
    784c:	ldr	x12, [x8, #80]
    7850:	lsl	x11, x11, x20
    7854:	bic	w11, w19, w11
    7858:	lsl	w10, w11, w10
    785c:	mov	w0, wzr
    7860:	add	x10, x12, x10
    7864:	str	x10, [x8, #80]
    7868:	str	w9, [x8, #88]
    786c:	b	7818 <inflatePrime@@ZLIB_1.2.2.4+0x28>
    7870:	mov	w0, wzr
    7874:	str	xzr, [x8, #80]
    7878:	str	wzr, [x8, #88]
    787c:	b	7818 <inflatePrime@@ZLIB_1.2.2.4+0x28>

0000000000007880 <inflate@@Base>:
    7880:	sub	sp, sp, #0xc0
    7884:	stp	x29, x30, [sp, #96]
    7888:	stp	x28, x27, [sp, #112]
    788c:	stp	x26, x25, [sp, #128]
    7890:	stp	x24, x23, [sp, #144]
    7894:	stp	x22, x21, [sp, #160]
    7898:	stp	x20, x19, [sp, #176]
    789c:	add	x29, sp, #0x60
    78a0:	mov	w24, w1
    78a4:	mov	x19, x0
    78a8:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    78ac:	cbz	w0, 78d4 <inflate@@Base+0x54>
    78b0:	mov	w0, #0xfffffffe            	// #-2
    78b4:	ldp	x20, x19, [sp, #176]
    78b8:	ldp	x22, x21, [sp, #160]
    78bc:	ldp	x24, x23, [sp, #144]
    78c0:	ldp	x26, x25, [sp, #128]
    78c4:	ldp	x28, x27, [sp, #112]
    78c8:	ldp	x29, x30, [sp, #96]
    78cc:	add	sp, sp, #0xc0
    78d0:	ret
    78d4:	ldr	x22, [x19, #24]
    78d8:	cbz	x22, 78b0 <inflate@@Base+0x30>
    78dc:	ldr	x23, [x19]
    78e0:	cbz	x23, 8f14 <inflate@@Base+0x1694>
    78e4:	ldr	x21, [x19, #56]
    78e8:	mov	w9, #0x3f3f                	// #16191
    78ec:	mov	x1, x21
    78f0:	ldr	w8, [x1, #8]!
    78f4:	cmp	w8, w9
    78f8:	b.ne	7904 <inflate@@Base+0x84>  // b.any
    78fc:	mov	w8, #0x3f40                	// #16192
    7900:	str	w8, [x1]
    7904:	ldr	w8, [x19, #8]
    7908:	add	x9, x21, #0x558
    790c:	ldr	w18, [x19, #32]
    7910:	ldr	x25, [x21, #80]
    7914:	ldr	w20, [x21, #88]
    7918:	str	x9, [sp, #40]
    791c:	add	x9, x21, #0x78
    7920:	str	x9, [sp, #32]
    7924:	add	x9, x21, #0x98
    7928:	str	x9, [sp, #24]
    792c:	add	x9, x21, #0x7c
    7930:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7934:	add	x3, x21, #0x90
    7938:	add	x26, x21, #0x318
    793c:	str	x9, [sp, #8]
    7940:	sub	w9, w24, #0x5
    7944:	mov	w0, #0xffffc0cc            	// #-16180
    7948:	add	x4, x4, #0x348
    794c:	mov	w27, w8
    7950:	stur	wzr, [x29, #-28]
    7954:	str	w9, [sp, #48]
    7958:	stur	w8, [x29, #-44]
    795c:	stur	w18, [x29, #-8]
    7960:	stp	x26, x3, [x29, #-24]
    7964:	ldr	w8, [x1]
    7968:	add	w8, w8, w0
    796c:	cmp	w8, #0x1e
    7970:	b.hi	78b0 <inflate@@Base+0x30>  // b.pmore
    7974:	adr	x9, 798c <inflate@@Base+0x10c>
    7978:	ldrh	w10, [x4, x8, lsl #1]
    797c:	add	x9, x9, x10, lsl #2
    7980:	mov	w28, #0xfffffffd            	// #-3
    7984:	mov	w8, #0x1                   	// #1
    7988:	br	x9
    798c:	ldr	w8, [x21, #16]
    7990:	cbz	w8, 811c <inflate@@Base+0x89c>
    7994:	cmp	w20, #0xf
    7998:	b.hi	79c4 <inflate@@Base+0x144>  // b.pmore
    799c:	mov	w9, w20
    79a0:	cbz	w27, 8f20 <inflate@@Base+0x16a0>
    79a4:	ldrb	w10, [x23], #1
    79a8:	add	x20, x9, #0x8
    79ac:	sub	w27, w27, #0x1
    79b0:	cmp	x9, #0x8
    79b4:	lsl	x10, x10, x9
    79b8:	add	x25, x10, x25
    79bc:	mov	x9, x20
    79c0:	b.cc	79a0 <inflate@@Base+0x120>  // b.lo, b.ul, b.last
    79c4:	tbz	w8, #1, 8164 <inflate@@Base+0x8e4>
    79c8:	mov	w9, #0x8b1f                	// #35615
    79cc:	cmp	x25, x9
    79d0:	b.ne	8164 <inflate@@Base+0x8e4>  // b.any
    79d4:	ldr	w8, [x21, #56]
    79d8:	mov	x26, x1
    79dc:	mov	w28, w18
    79e0:	cbnz	w8, 79ec <inflate@@Base+0x16c>
    79e4:	mov	w8, #0xf                   	// #15
    79e8:	str	w8, [x21, #56]
    79ec:	mov	x0, xzr
    79f0:	mov	x1, xzr
    79f4:	mov	w2, wzr
    79f8:	bl	2430 <crc32@plt>
    79fc:	mov	w8, #0x8b1f                	// #35615
    7a00:	sub	x1, x29, #0x4
    7a04:	mov	w2, #0x2                   	// #2
    7a08:	str	x0, [x21, #32]
    7a0c:	sturh	w8, [x29, #-4]
    7a10:	bl	2430 <crc32@plt>
    7a14:	mov	x25, xzr
    7a18:	mov	w20, wzr
    7a1c:	str	x0, [x21, #32]
    7a20:	mov	w8, #0x3f35                	// #16181
    7a24:	b	8708 <inflate@@Base+0xe88>
    7a28:	cmp	w20, #0xf
    7a2c:	b.hi	7a58 <inflate@@Base+0x1d8>  // b.pmore
    7a30:	mov	w8, w20
    7a34:	cbz	w27, 8f2c <inflate@@Base+0x16ac>
    7a38:	ldrb	w9, [x23], #1
    7a3c:	add	x20, x8, #0x8
    7a40:	sub	w27, w27, #0x1
    7a44:	cmp	x8, #0x8
    7a48:	lsl	x9, x9, x8
    7a4c:	add	x25, x9, x25
    7a50:	mov	x8, x20
    7a54:	b.cc	7a34 <inflate@@Base+0x1b4>  // b.lo, b.ul, b.last
    7a58:	and	w8, w25, #0xff
    7a5c:	cmp	w8, #0x8
    7a60:	str	w25, [x21, #24]
    7a64:	b.ne	886c <inflate@@Base+0xfec>  // b.any
    7a68:	tst	w25, #0xe000
    7a6c:	b.eq	81c0 <inflate@@Base+0x940>  // b.none
    7a70:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7a74:	add	x8, x8, #0xc7a
    7a78:	b	8e18 <inflate@@Base+0x1598>
    7a7c:	cmp	w20, #0x1f
    7a80:	b.hi	7aa8 <inflate@@Base+0x228>  // b.pmore
    7a84:	mov	w20, w20
    7a88:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    7a8c:	ldrb	w8, [x23], #1
    7a90:	sub	w27, w27, #0x1
    7a94:	cmp	x20, #0x18
    7a98:	lsl	x8, x8, x20
    7a9c:	add	x20, x20, #0x8
    7aa0:	add	x25, x8, x25
    7aa4:	b.cc	7a88 <inflate@@Base+0x208>  // b.lo, b.ul, b.last
    7aa8:	lsr	x8, x25, #8
    7aac:	lsl	w9, w25, #8
    7ab0:	and	x8, x8, #0xff00
    7ab4:	and	x9, x9, #0xff0000
    7ab8:	bfxil	x8, x25, #24, #8
    7abc:	lsl	w10, w25, #24
    7ac0:	orr	x8, x8, x9
    7ac4:	mov	w20, wzr
    7ac8:	mov	w11, #0x3f3e                	// #16190
    7acc:	orr	x8, x8, x10
    7ad0:	mov	x25, xzr
    7ad4:	str	x8, [x21, #32]
    7ad8:	str	x8, [x19, #96]
    7adc:	str	w11, [x21, #8]
    7ae0:	ldr	w8, [x21, #20]
    7ae4:	cbz	w8, 8f7c <inflate@@Base+0x16fc>
    7ae8:	mov	x0, xzr
    7aec:	mov	x28, x1
    7af0:	mov	x1, xzr
    7af4:	mov	w2, wzr
    7af8:	mov	w26, w24
    7afc:	mov	w24, w18
    7b00:	bl	2560 <adler32@plt>
    7b04:	mov	w18, w24
    7b08:	mov	w24, w26
    7b0c:	ldp	x26, x3, [x29, #-24]
    7b10:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7b14:	add	x4, x4, #0x348
    7b18:	mov	x1, x28
    7b1c:	str	x0, [x21, #32]
    7b20:	str	x0, [x19, #96]
    7b24:	mov	w0, #0xffffc0cc            	// #-16180
    7b28:	mov	w8, #0x3f3f                	// #16191
    7b2c:	str	w8, [x21, #8]
    7b30:	ldr	w8, [sp, #48]
    7b34:	cmp	w8, #0x2
    7b38:	b.cc	8f60 <inflate@@Base+0x16e0>  // b.lo, b.ul, b.last
    7b3c:	ldr	w8, [x21, #12]
    7b40:	cbz	w8, 7b5c <inflate@@Base+0x2dc>
    7b44:	and	w8, w20, #0x7
    7b48:	lsr	x25, x25, x8
    7b4c:	mov	w8, #0x3f4e                	// #16206
    7b50:	and	w20, w20, #0xfffffff8
    7b54:	str	w8, [x1]
    7b58:	b	7964 <inflate@@Base+0xe4>
    7b5c:	cmp	w20, #0x2
    7b60:	b.hi	7b80 <inflate@@Base+0x300>  // b.pmore
    7b64:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    7b68:	ldrb	w8, [x23], #1
    7b6c:	add	w9, w20, #0x8
    7b70:	sub	w27, w27, #0x1
    7b74:	lsl	x8, x8, x20
    7b78:	add	x25, x8, x25
    7b7c:	mov	w20, w9
    7b80:	adrp	x11, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7b84:	and	w9, w25, #0x1
    7b88:	ubfx	w10, w25, #1, #2
    7b8c:	add	x11, x11, #0x386
    7b90:	str	w9, [x21, #12]
    7b94:	adr	x9, 7bac <inflate@@Base+0x32c>
    7b98:	ldrh	w12, [x11, x10, lsl #1]
    7b9c:	add	x9, x9, x12, lsl #2
    7ba0:	mov	w8, #0x3f41                	// #16193
    7ba4:	lsr	x25, x25, #3
    7ba8:	br	x9
    7bac:	mov	x0, x21
    7bb0:	mov	w26, w24
    7bb4:	mov	w24, w18
    7bb8:	mov	x28, x1
    7bbc:	bl	9128 <inflate@@Base+0x18a8>
    7bc0:	mov	w18, w24
    7bc4:	mov	w24, w26
    7bc8:	ldp	x26, x3, [x29, #-24]
    7bcc:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7bd0:	add	x4, x4, #0x348
    7bd4:	mov	w0, #0xffffc0cc            	// #-16180
    7bd8:	mov	x1, x28
    7bdc:	mov	w8, #0x3f47                	// #16199
    7be0:	cmp	w24, #0x6
    7be4:	str	w8, [x21, #8]
    7be8:	b.ne	815c <inflate@@Base+0x8dc>  // b.any
    7bec:	b	911c <inflate@@Base+0x189c>
    7bf0:	and	w8, w20, #0x7
    7bf4:	and	w20, w20, #0xfffffff8
    7bf8:	cmp	w20, #0x1f
    7bfc:	lsr	x25, x25, x8
    7c00:	b.hi	7c2c <inflate@@Base+0x3ac>  // b.pmore
    7c04:	mov	w8, w20
    7c08:	cbz	w27, 8f2c <inflate@@Base+0x16ac>
    7c0c:	ldrb	w9, [x23], #1
    7c10:	add	x20, x8, #0x8
    7c14:	sub	w27, w27, #0x1
    7c18:	cmp	x8, #0x18
    7c1c:	lsl	x9, x9, x8
    7c20:	add	x25, x9, x25
    7c24:	mov	x8, x20
    7c28:	b.cc	7c08 <inflate@@Base+0x388>  // b.lo, b.ul, b.last
    7c2c:	lsr	x8, x25, #16
    7c30:	eor	x8, x8, #0xffff
    7c34:	cmp	x8, w25, uxth
    7c38:	b.ne	8128 <inflate@@Base+0x8a8>  // b.any
    7c3c:	mov	w20, wzr
    7c40:	and	w8, w25, #0xffff
    7c44:	mov	w9, #0x3f42                	// #16194
    7c48:	cmp	w24, #0x6
    7c4c:	mov	x25, xzr
    7c50:	str	w8, [x21, #92]
    7c54:	str	w9, [x21, #8]
    7c58:	b.eq	8f60 <inflate@@Base+0x16e0>  // b.none
    7c5c:	mov	w8, #0x3f43                	// #16195
    7c60:	str	w8, [x1]
    7c64:	ldr	w8, [x21, #92]
    7c68:	cbz	w8, 7ee4 <inflate@@Base+0x664>
    7c6c:	cmp	w8, w27
    7c70:	csel	w8, w27, w8, hi  // hi = pmore
    7c74:	cmp	w8, w18
    7c78:	mov	w26, w24
    7c7c:	csel	w24, w18, w8, hi  // hi = pmore
    7c80:	str	x19, [sp, #16]
    7c84:	stur	x1, [x29, #-40]
    7c88:	cbz	w24, 8f9c <inflate@@Base+0x171c>
    7c8c:	mov	w28, w24
    7c90:	mov	x0, x22
    7c94:	mov	x1, x23
    7c98:	mov	x2, x28
    7c9c:	mov	w19, w18
    7ca0:	bl	23a0 <memcpy@plt>
    7ca4:	ldr	w8, [x21, #92]
    7ca8:	mov	w18, w19
    7cac:	sub	w27, w27, w24
    7cb0:	sub	w18, w19, w24
    7cb4:	sub	w8, w8, w24
    7cb8:	str	w8, [x21, #92]
    7cbc:	mov	w24, w26
    7cc0:	ldur	x1, [x29, #-40]
    7cc4:	ldr	x19, [sp, #16]
    7cc8:	ldp	x26, x3, [x29, #-24]
    7ccc:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7cd0:	add	x4, x4, #0x348
    7cd4:	mov	w0, #0xffffc0cc            	// #-16180
    7cd8:	add	x23, x23, x28
    7cdc:	add	x22, x22, x28
    7ce0:	b	7964 <inflate@@Base+0xe4>
    7ce4:	cmp	w20, #0xd
    7ce8:	b.hi	7d14 <inflate@@Base+0x494>  // b.pmore
    7cec:	mov	w8, w20
    7cf0:	cbz	w27, 8f2c <inflate@@Base+0x16ac>
    7cf4:	ldrb	w9, [x23], #1
    7cf8:	add	x20, x8, #0x8
    7cfc:	sub	w27, w27, #0x1
    7d00:	cmp	x8, #0x6
    7d04:	lsl	x9, x9, x8
    7d08:	add	x25, x9, x25
    7d0c:	mov	x8, x20
    7d10:	b.cc	7cf0 <inflate@@Base+0x470>  // b.lo, b.ul, b.last
    7d14:	and	w9, w25, #0x1f
    7d18:	ubfx	w8, w25, #5, #5
    7d1c:	ubfx	w10, w25, #10, #4
    7d20:	lsr	x25, x25, #14
    7d24:	add	w11, w9, #0x101
    7d28:	add	w12, w8, #0x1
    7d2c:	add	w10, w10, #0x4
    7d30:	cmp	w9, #0x1d
    7d34:	sub	w20, w20, #0xe
    7d38:	stp	w11, w12, [x21, #132]
    7d3c:	str	w10, [x21, #128]
    7d40:	b.hi	8134 <inflate@@Base+0x8b4>  // b.pmore
    7d44:	cmp	w8, #0x1e
    7d48:	b.cs	8134 <inflate@@Base+0x8b4>  // b.hs, b.nlast
    7d4c:	mov	w8, #0x3f45                	// #16197
    7d50:	str	wzr, [x21, #140]
    7d54:	str	w8, [x21, #8]
    7d58:	ldr	w9, [x21, #140]
    7d5c:	ldr	w8, [x21, #128]
    7d60:	cmp	w9, w8
    7d64:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7d68:	add	x8, x8, #0x38e
    7d6c:	b.cc	7e20 <inflate@@Base+0x5a0>  // b.lo, b.ul, b.last
    7d70:	ldr	w9, [x21, #140]
    7d74:	mov	x26, x1
    7d78:	mov	w28, w18
    7d7c:	cmp	w9, #0x12
    7d80:	b.hi	7da0 <inflate@@Base+0x520>  // b.pmore
    7d84:	ldrh	w10, [x8, x9, lsl #1]
    7d88:	add	x9, x9, #0x1
    7d8c:	cmp	x9, #0x13
    7d90:	add	x10, x21, x10, lsl #1
    7d94:	strh	wzr, [x10, #152]
    7d98:	b.ne	7d84 <inflate@@Base+0x504>  // b.any
    7d9c:	str	w9, [x21, #140]
    7da0:	ldp	x4, x8, [sp, #32]
    7da4:	ldr	x1, [sp, #24]
    7da8:	ldur	x5, [x29, #-24]
    7dac:	mov	w2, #0x13                  	// #19
    7db0:	str	x8, [x21, #144]
    7db4:	str	x8, [x21, #104]
    7db8:	mov	w8, #0x7                   	// #7
    7dbc:	mov	w0, wzr
    7dc0:	str	w8, [x21, #120]
    7dc4:	bl	98e4 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    7dc8:	cbz	w0, 7ef0 <inflate@@Base+0x670>
    7dcc:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7dd0:	add	x8, x8, #0x26e
    7dd4:	mov	w9, #0x3f51                	// #16209
    7dd8:	stur	w0, [x29, #-28]
    7ddc:	str	x8, [x19, #48]
    7de0:	mov	x1, x26
    7de4:	str	w9, [x26]
    7de8:	mov	w18, w28
    7dec:	b	8714 <inflate@@Base+0xe94>
    7df0:	ldrh	w10, [x8, w9, uxtw #1]
    7df4:	add	w9, w9, #0x1
    7df8:	and	w11, w25, #0x7
    7dfc:	str	w9, [x21, #140]
    7e00:	add	x9, x21, x10, lsl #1
    7e04:	strh	w11, [x9, #152]
    7e08:	ldr	w9, [x21, #140]
    7e0c:	ldr	w10, [x21, #128]
    7e10:	lsr	x25, x25, #3
    7e14:	sub	w20, w20, #0x3
    7e18:	cmp	w9, w10
    7e1c:	b.cs	7d70 <inflate@@Base+0x4f0>  // b.hs, b.nlast
    7e20:	cmp	w20, #0x2
    7e24:	b.hi	7df0 <inflate@@Base+0x570>  // b.pmore
    7e28:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    7e2c:	ldrb	w10, [x23], #1
    7e30:	add	w11, w20, #0x8
    7e34:	sub	w27, w27, #0x1
    7e38:	lsl	x10, x10, x20
    7e3c:	add	x25, x10, x25
    7e40:	mov	w20, w11
    7e44:	b	7df0 <inflate@@Base+0x570>
    7e48:	cbz	w18, 8f60 <inflate@@Base+0x16e0>
    7e4c:	ldr	w8, [x21, #92]
    7e50:	mov	w9, #0x3f48                	// #16200
    7e54:	sub	w18, w18, #0x1
    7e58:	strb	w8, [x22], #1
    7e5c:	str	w9, [x21, #8]
    7e60:	b	7964 <inflate@@Base+0xe4>
    7e64:	ldr	w8, [x21, #16]
    7e68:	cbz	w8, 87a8 <inflate@@Base+0xf28>
    7e6c:	cmp	w20, #0x1f
    7e70:	b.hi	7e9c <inflate@@Base+0x61c>  // b.pmore
    7e74:	mov	w9, w20
    7e78:	cbz	w27, 8f20 <inflate@@Base+0x16a0>
    7e7c:	ldrb	w10, [x23], #1
    7e80:	add	x20, x9, #0x8
    7e84:	sub	w27, w27, #0x1
    7e88:	cmp	x9, #0x18
    7e8c:	lsl	x10, x10, x9
    7e90:	add	x25, x10, x25
    7e94:	mov	x9, x20
    7e98:	b.cc	7e78 <inflate@@Base+0x5f8>  // b.lo, b.ul, b.last
    7e9c:	ldur	w10, [x29, #-8]
    7ea0:	ldr	x9, [x19, #40]
    7ea4:	subs	w2, w10, w18
    7ea8:	add	x9, x9, x2
    7eac:	str	x9, [x19, #40]
    7eb0:	ldr	x9, [x21, #40]
    7eb4:	add	x9, x9, x2
    7eb8:	str	x9, [x21, #40]
    7ebc:	b.eq	8758 <inflate@@Base+0xed8>  // b.none
    7ec0:	tbz	w8, #2, 8758 <inflate@@Base+0xed8>
    7ec4:	ldr	w8, [x21, #24]
    7ec8:	ldr	x0, [x21, #32]
    7ecc:	mov	x26, x1
    7ed0:	mov	w28, w18
    7ed4:	sub	x1, x22, x2
    7ed8:	cbz	w8, 8734 <inflate@@Base+0xeb4>
    7edc:	bl	2430 <crc32@plt>
    7ee0:	b	8738 <inflate@@Base+0xeb8>
    7ee4:	mov	w8, #0x3f3f                	// #16191
    7ee8:	str	w8, [x1]
    7eec:	b	7964 <inflate@@Base+0xe4>
    7ef0:	mov	w8, #0x3f46                	// #16198
    7ef4:	str	wzr, [x21, #140]
    7ef8:	str	w8, [x21, #8]
    7efc:	mov	x1, x26
    7f00:	ldp	x26, x3, [x29, #-24]
    7f04:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    7f08:	mov	w18, w28
    7f0c:	mov	w0, #0xffffc0cc            	// #-16180
    7f10:	add	x4, x4, #0x348
    7f14:	stur	wzr, [x29, #-28]
    7f18:	ldp	w2, w8, [x21, #132]
    7f1c:	ldr	w10, [x21, #140]
    7f20:	add	w11, w8, w2
    7f24:	cmp	w10, w11
    7f28:	b.cs	888c <inflate@@Base+0x100c>  // b.hs, b.nlast
    7f2c:	ldr	w9, [x21, #120]
    7f30:	ldr	x8, [x21, #104]
    7f34:	mov	w12, #0xffffffff            	// #-1
    7f38:	lsl	w9, w12, w9
    7f3c:	mvn	w9, w9
    7f40:	and	w12, w9, w25
    7f44:	add	x13, x8, w12, uxtw #2
    7f48:	ldrb	w12, [x13, #1]
    7f4c:	cmp	w20, w12
    7f50:	b.cs	7fa8 <inflate@@Base+0x728>  // b.hs, b.nlast
    7f54:	mov	w13, w20
    7f58:	add	w20, w20, w27, lsl #3
    7f5c:	add	x14, x23, w27, uxtw
    7f60:	cbz	w27, 8f44 <inflate@@Base+0x16c4>
    7f64:	ldrb	w12, [x23], #1
    7f68:	ldr	w16, [x21, #120]
    7f6c:	ldr	x15, [x21, #104]
    7f70:	mov	w17, #0xffffffff            	// #-1
    7f74:	lsl	x12, x12, x13
    7f78:	add	x25, x12, x25
    7f7c:	lsl	w12, w17, w16
    7f80:	bic	w12, w25, w12
    7f84:	add	x15, x15, w12, uxtw #2
    7f88:	ldrb	w12, [x15, #1]
    7f8c:	add	x13, x13, #0x8
    7f90:	sub	w27, w27, #0x1
    7f94:	cmp	x13, x12
    7f98:	b.cc	7f60 <inflate@@Base+0x6e0>  // b.lo, b.ul, b.last
    7f9c:	add	x14, x15, #0x2
    7fa0:	mov	w20, w13
    7fa4:	b	7fac <inflate@@Base+0x72c>
    7fa8:	add	x14, x13, #0x2
    7fac:	ldrh	w13, [x14]
    7fb0:	cmp	w13, #0xf
    7fb4:	b.hi	7fd4 <inflate@@Base+0x754>  // b.pmore
    7fb8:	add	w11, w10, #0x1
    7fbc:	add	x10, x21, w10, uxtw #1
    7fc0:	lsr	x25, x25, x12
    7fc4:	sub	w20, w20, w12
    7fc8:	str	w11, [x21, #140]
    7fcc:	strh	w13, [x10, #152]
    7fd0:	b	8104 <inflate@@Base+0x884>
    7fd4:	cmp	w13, #0x10
    7fd8:	b.eq	8034 <inflate@@Base+0x7b4>  // b.none
    7fdc:	cmp	w13, #0x11
    7fe0:	b.ne	8090 <inflate@@Base+0x810>  // b.any
    7fe4:	add	w13, w12, #0x3
    7fe8:	cmp	w20, w13
    7fec:	b.cs	8014 <inflate@@Base+0x794>  // b.hs, b.nlast
    7ff0:	mov	w20, w20
    7ff4:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    7ff8:	ldrb	w14, [x23], #1
    7ffc:	sub	w27, w27, #0x1
    8000:	lsl	x14, x14, x20
    8004:	add	x20, x20, #0x8
    8008:	cmp	x20, x13
    800c:	add	x25, x14, x25
    8010:	b.cc	7ff4 <inflate@@Base+0x774>  // b.lo, b.ul, b.last
    8014:	lsr	x14, x25, x12
    8018:	sub	w15, w20, w12
    801c:	and	w12, w14, #0x7
    8020:	mov	w13, wzr
    8024:	lsr	x25, x14, #3
    8028:	add	w12, w12, #0x3
    802c:	sub	w20, w15, #0x3
    8030:	b	80dc <inflate@@Base+0x85c>
    8034:	add	w13, w12, #0x2
    8038:	cmp	w20, w13
    803c:	b.cs	8064 <inflate@@Base+0x7e4>  // b.hs, b.nlast
    8040:	mov	w20, w20
    8044:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    8048:	ldrb	w14, [x23], #1
    804c:	sub	w27, w27, #0x1
    8050:	lsl	x14, x14, x20
    8054:	add	x20, x20, #0x8
    8058:	cmp	x20, x13
    805c:	add	x25, x14, x25
    8060:	b.cc	8044 <inflate@@Base+0x7c4>  // b.lo, b.ul, b.last
    8064:	lsr	x25, x25, x12
    8068:	sub	w20, w20, w12
    806c:	cbz	w10, 8878 <inflate@@Base+0xff8>
    8070:	sub	w12, w10, #0x1
    8074:	add	x12, x21, w12, uxtw #1
    8078:	ldrh	w13, [x12, #152]
    807c:	and	w12, w25, #0x3
    8080:	add	w12, w12, #0x3
    8084:	lsr	x25, x25, #2
    8088:	sub	w20, w20, #0x2
    808c:	b	80dc <inflate@@Base+0x85c>
    8090:	add	w13, w12, #0x7
    8094:	cmp	w20, w13
    8098:	b.cs	80c0 <inflate@@Base+0x840>  // b.hs, b.nlast
    809c:	mov	w20, w20
    80a0:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    80a4:	ldrb	w14, [x23], #1
    80a8:	sub	w27, w27, #0x1
    80ac:	lsl	x14, x14, x20
    80b0:	add	x20, x20, #0x8
    80b4:	cmp	x20, x13
    80b8:	add	x25, x14, x25
    80bc:	b.cc	80a0 <inflate@@Base+0x820>  // b.lo, b.ul, b.last
    80c0:	lsr	x14, x25, x12
    80c4:	sub	w15, w20, w12
    80c8:	and	w12, w14, #0x7f
    80cc:	mov	w13, wzr
    80d0:	lsr	x25, x14, #7
    80d4:	add	w12, w12, #0xb
    80d8:	sub	w20, w15, #0x7
    80dc:	add	w10, w12, w10
    80e0:	cmp	w10, w11
    80e4:	b.hi	8878 <inflate@@Base+0xff8>  // b.pmore
    80e8:	ldr	w10, [x21, #140]
    80ec:	subs	w12, w12, #0x1
    80f0:	add	x11, x21, w10, uxtw #1
    80f4:	add	w10, w10, #0x1
    80f8:	strh	w13, [x11, #152]
    80fc:	b.ne	80ec <inflate@@Base+0x86c>  // b.any
    8100:	str	w10, [x21, #140]
    8104:	ldp	w2, w11, [x21, #132]
    8108:	ldr	w10, [x21, #140]
    810c:	add	w11, w11, w2
    8110:	cmp	w10, w11
    8114:	b.cc	7f40 <inflate@@Base+0x6c0>  // b.lo, b.ul, b.last
    8118:	b	888c <inflate@@Base+0x100c>
    811c:	mov	w8, #0x3f40                	// #16192
    8120:	str	w8, [x1]
    8124:	b	7964 <inflate@@Base+0xe4>
    8128:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    812c:	add	x8, x8, #0x22d
    8130:	b	8e18 <inflate@@Base+0x1598>
    8134:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8138:	add	x8, x8, #0x24a
    813c:	b	8e18 <inflate@@Base+0x1598>
    8140:	mov	w8, #0x3f44                	// #16196
    8144:	b	8158 <inflate@@Base+0x8d8>
    8148:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    814c:	add	x8, x8, #0x21a
    8150:	str	x8, [x19, #48]
    8154:	mov	w8, #0x3f51                	// #16209
    8158:	str	w8, [x1]
    815c:	sub	w20, w20, #0x3
    8160:	b	7964 <inflate@@Base+0xe4>
    8164:	ldr	x9, [x21, #48]
    8168:	str	wzr, [x21, #24]
    816c:	cbz	x9, 8178 <inflate@@Base+0x8f8>
    8170:	mov	w10, #0xffffffff            	// #-1
    8174:	str	w10, [x9, #72]
    8178:	tbz	w8, #0, 81b4 <inflate@@Base+0x934>
    817c:	mov	x9, #0x7bdf                	// #31711
    8180:	lsl	w8, w25, #8
    8184:	movk	x9, #0xbdef, lsl #16
    8188:	movk	x9, #0xdef7, lsl #32
    818c:	and	x8, x8, #0xff00
    8190:	movk	x9, #0xef7b, lsl #48
    8194:	add	x8, x8, x25, lsr #8
    8198:	mul	x8, x8, x9
    819c:	mov	x9, #0x4211                	// #16913
    81a0:	movk	x9, #0x2108, lsl #16
    81a4:	movk	x9, #0x1084, lsl #32
    81a8:	movk	x9, #0x842, lsl #48
    81ac:	cmp	x8, x9
    81b0:	b.cc	8824 <inflate@@Base+0xfa4>  // b.lo, b.ul, b.last
    81b4:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    81b8:	add	x8, x8, #0xc34
    81bc:	b	8e18 <inflate@@Base+0x1598>
    81c0:	ldr	x8, [x21, #48]
    81c4:	cbz	x8, 81d4 <inflate@@Base+0x954>
    81c8:	mov	w9, w25
    81cc:	ubfx	w9, w25, #8, #1
    81d0:	str	w9, [x8]
    81d4:	tbz	w25, #9, 8218 <inflate@@Base+0x998>
    81d8:	ldrb	w8, [x21, #16]
    81dc:	tbz	w8, #2, 8218 <inflate@@Base+0x998>
    81e0:	sturh	w25, [x29, #-4]
    81e4:	ldr	x0, [x21, #32]
    81e8:	mov	x25, x1
    81ec:	sub	x1, x29, #0x4
    81f0:	mov	w2, #0x2                   	// #2
    81f4:	mov	w20, w18
    81f8:	bl	2430 <crc32@plt>
    81fc:	ldur	x3, [x29, #-16]
    8200:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8204:	add	x4, x4, #0x348
    8208:	mov	x1, x25
    820c:	mov	w18, w20
    8210:	str	x0, [x21, #32]
    8214:	mov	w0, #0xffffc0cc            	// #-16180
    8218:	mov	x25, xzr
    821c:	mov	w20, wzr
    8220:	mov	w8, #0x3f36                	// #16182
    8224:	str	w8, [x1]
    8228:	cmp	w20, #0x1f
    822c:	b.hi	8254 <inflate@@Base+0x9d4>  // b.pmore
    8230:	mov	w20, w20
    8234:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    8238:	ldrb	w8, [x23], #1
    823c:	sub	w27, w27, #0x1
    8240:	cmp	x20, #0x18
    8244:	lsl	x8, x8, x20
    8248:	add	x20, x20, #0x8
    824c:	add	x25, x8, x25
    8250:	b.cc	8234 <inflate@@Base+0x9b4>  // b.lo, b.ul, b.last
    8254:	ldr	x8, [x21, #48]
    8258:	cbz	x8, 8260 <inflate@@Base+0x9e0>
    825c:	str	x25, [x8, #8]
    8260:	ldrb	w8, [x21, #25]
    8264:	tbz	w8, #1, 82a8 <inflate@@Base+0xa28>
    8268:	ldrb	w8, [x21, #16]
    826c:	tbz	w8, #2, 82a8 <inflate@@Base+0xa28>
    8270:	stur	w25, [x29, #-4]
    8274:	ldr	x0, [x21, #32]
    8278:	mov	x25, x1
    827c:	sub	x1, x29, #0x4
    8280:	mov	w2, #0x4                   	// #4
    8284:	mov	w20, w18
    8288:	bl	2430 <crc32@plt>
    828c:	ldur	x3, [x29, #-16]
    8290:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8294:	add	x4, x4, #0x348
    8298:	mov	x1, x25
    829c:	mov	w18, w20
    82a0:	str	x0, [x21, #32]
    82a4:	mov	w0, #0xffffc0cc            	// #-16180
    82a8:	mov	x25, xzr
    82ac:	mov	w20, wzr
    82b0:	mov	w8, #0x3f37                	// #16183
    82b4:	str	w8, [x1]
    82b8:	cmp	w20, #0xf
    82bc:	b.hi	82e4 <inflate@@Base+0xa64>  // b.pmore
    82c0:	mov	w20, w20
    82c4:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    82c8:	ldrb	w8, [x23], #1
    82cc:	sub	w27, w27, #0x1
    82d0:	cmp	x20, #0x8
    82d4:	lsl	x8, x8, x20
    82d8:	add	x20, x20, #0x8
    82dc:	add	x25, x8, x25
    82e0:	b.cc	82c4 <inflate@@Base+0xa44>  // b.lo, b.ul, b.last
    82e4:	ldr	x8, [x21, #48]
    82e8:	cbz	x8, 82fc <inflate@@Base+0xa7c>
    82ec:	mov	w9, w25
    82f0:	and	w9, w25, #0xff
    82f4:	lsr	x10, x25, #8
    82f8:	stp	w9, w10, [x8, #16]
    82fc:	ldrb	w8, [x21, #25]
    8300:	tbz	w8, #1, 8344 <inflate@@Base+0xac4>
    8304:	ldrb	w8, [x21, #16]
    8308:	tbz	w8, #2, 8344 <inflate@@Base+0xac4>
    830c:	sturh	w25, [x29, #-4]
    8310:	ldr	x0, [x21, #32]
    8314:	mov	x25, x1
    8318:	sub	x1, x29, #0x4
    831c:	mov	w2, #0x2                   	// #2
    8320:	mov	w20, w18
    8324:	bl	2430 <crc32@plt>
    8328:	ldur	x3, [x29, #-16]
    832c:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8330:	add	x4, x4, #0x348
    8334:	mov	x1, x25
    8338:	mov	w18, w20
    833c:	str	x0, [x21, #32]
    8340:	mov	w0, #0xffffc0cc            	// #-16180
    8344:	mov	x25, xzr
    8348:	mov	w20, wzr
    834c:	mov	w8, #0x3f38                	// #16184
    8350:	str	w8, [x1]
    8354:	ldr	w8, [x21, #24]
    8358:	tbnz	w8, #10, 836c <inflate@@Base+0xaec>
    835c:	ldr	x8, [x21, #48]
    8360:	cbz	x8, 8400 <inflate@@Base+0xb80>
    8364:	str	xzr, [x8, #24]
    8368:	b	8400 <inflate@@Base+0xb80>
    836c:	cmp	w20, #0xf
    8370:	b.hi	8398 <inflate@@Base+0xb18>  // b.pmore
    8374:	mov	w20, w20
    8378:	cbz	w27, 8f30 <inflate@@Base+0x16b0>
    837c:	ldrb	w9, [x23], #1
    8380:	sub	w27, w27, #0x1
    8384:	cmp	x20, #0x8
    8388:	lsl	x9, x9, x20
    838c:	add	x20, x20, #0x8
    8390:	add	x25, x9, x25
    8394:	b.cc	8378 <inflate@@Base+0xaf8>  // b.lo, b.ul, b.last
    8398:	ldr	x9, [x21, #48]
    839c:	str	w25, [x21, #92]
    83a0:	cbz	x9, 83a8 <inflate@@Base+0xb28>
    83a4:	str	w25, [x9, #32]
    83a8:	tbz	w8, #9, 83b4 <inflate@@Base+0xb34>
    83ac:	ldrb	w8, [x21, #16]
    83b0:	tbnz	w8, #2, 83c0 <inflate@@Base+0xb40>
    83b4:	mov	x25, xzr
    83b8:	mov	w20, wzr
    83bc:	b	8400 <inflate@@Base+0xb80>
    83c0:	sturh	w25, [x29, #-4]
    83c4:	ldr	x0, [x21, #32]
    83c8:	mov	x25, x1
    83cc:	sub	x1, x29, #0x4
    83d0:	mov	w2, #0x2                   	// #2
    83d4:	mov	w20, w18
    83d8:	bl	2430 <crc32@plt>
    83dc:	ldur	x3, [x29, #-16]
    83e0:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    83e4:	add	x4, x4, #0x348
    83e8:	mov	x1, x25
    83ec:	mov	w18, w20
    83f0:	mov	x25, xzr
    83f4:	mov	w20, wzr
    83f8:	str	x0, [x21, #32]
    83fc:	mov	w0, #0xffffc0cc            	// #-16180
    8400:	mov	w8, #0x3f39                	// #16185
    8404:	str	w8, [x1]
    8408:	ldrb	w8, [x21, #25]
    840c:	tbz	w8, #2, 84e4 <inflate@@Base+0xc64>
    8410:	ldr	w8, [x21, #92]
    8414:	cmp	w8, w27
    8418:	csel	w28, w27, w8, hi  // hi = pmore
    841c:	cbz	w28, 84dc <inflate@@Base+0xc5c>
    8420:	ldr	x9, [x21, #48]
    8424:	cbz	x9, 847c <inflate@@Base+0xbfc>
    8428:	ldr	x10, [x9, #24]
    842c:	cbz	x10, 847c <inflate@@Base+0xbfc>
    8430:	ldp	w11, w9, [x9, #32]
    8434:	stur	x1, [x29, #-40]
    8438:	mov	x1, x23
    843c:	mov	w26, w24
    8440:	sub	w8, w11, w8
    8444:	add	x0, x10, x8
    8448:	add	w10, w8, w28
    844c:	sub	w8, w9, w8
    8450:	cmp	w10, w9
    8454:	csel	w2, w8, w28, hi  // hi = pmore
    8458:	mov	w24, w18
    845c:	bl	23a0 <memcpy@plt>
    8460:	ldur	x1, [x29, #-40]
    8464:	mov	w18, w24
    8468:	mov	w24, w26
    846c:	ldp	x26, x3, [x29, #-24]
    8470:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8474:	add	x4, x4, #0x348
    8478:	mov	w0, #0xffffc0cc            	// #-16180
    847c:	ldrb	w8, [x21, #25]
    8480:	tbz	w8, #1, 84c8 <inflate@@Base+0xc48>
    8484:	ldrb	w8, [x21, #16]
    8488:	tbz	w8, #2, 84c8 <inflate@@Base+0xc48>
    848c:	ldr	x0, [x21, #32]
    8490:	stur	x1, [x29, #-40]
    8494:	mov	x1, x23
    8498:	mov	w2, w28
    849c:	mov	w26, w24
    84a0:	mov	w24, w18
    84a4:	bl	2430 <crc32@plt>
    84a8:	ldur	x1, [x29, #-40]
    84ac:	mov	w18, w24
    84b0:	mov	w24, w26
    84b4:	ldp	x26, x3, [x29, #-24]
    84b8:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    84bc:	add	x4, x4, #0x348
    84c0:	str	x0, [x21, #32]
    84c4:	mov	w0, #0xffffc0cc            	// #-16180
    84c8:	ldr	w8, [x21, #92]
    84cc:	sub	w27, w27, w28
    84d0:	add	x23, x23, w28, uxtw
    84d4:	sub	w8, w8, w28
    84d8:	str	w8, [x21, #92]
    84dc:	ldr	w8, [x21, #92]
    84e0:	cbnz	w8, 8f60 <inflate@@Base+0x16e0>
    84e4:	mov	w8, #0x3f3a                	// #16186
    84e8:	str	wzr, [x21, #92]
    84ec:	str	w8, [x21, #8]
    84f0:	ldrb	w8, [x21, #25]
    84f4:	tbnz	w8, #3, 8508 <inflate@@Base+0xc88>
    84f8:	ldr	x8, [x21, #48]
    84fc:	cbz	x8, 85ac <inflate@@Base+0xd2c>
    8500:	str	xzr, [x8, #40]
    8504:	b	85ac <inflate@@Base+0xd2c>
    8508:	cbz	w27, 8f60 <inflate@@Base+0x16e0>
    850c:	mov	x28, xzr
    8510:	stur	x1, [x29, #-40]
    8514:	str	w24, [sp, #16]
    8518:	ldr	x9, [x21, #48]
    851c:	ldrb	w24, [x23, x28]
    8520:	add	x28, x28, #0x1
    8524:	cbz	x9, 854c <inflate@@Base+0xccc>
    8528:	ldr	x8, [x9, #40]
    852c:	cbz	x8, 854c <inflate@@Base+0xccc>
    8530:	ldr	w10, [x21, #92]
    8534:	ldr	w9, [x9, #48]
    8538:	cmp	w10, w9
    853c:	b.cs	854c <inflate@@Base+0xccc>  // b.hs, b.nlast
    8540:	add	w9, w10, #0x1
    8544:	str	w9, [x21, #92]
    8548:	strb	w24, [x8, x10]
    854c:	cbz	w24, 8558 <inflate@@Base+0xcd8>
    8550:	cmp	w27, w28
    8554:	b.hi	8518 <inflate@@Base+0xc98>  // b.pmore
    8558:	ldrb	w8, [x21, #25]
    855c:	tbz	w8, #1, 8594 <inflate@@Base+0xd14>
    8560:	ldrb	w8, [x21, #16]
    8564:	tbz	w8, #2, 8594 <inflate@@Base+0xd14>
    8568:	ldr	x0, [x21, #32]
    856c:	mov	x1, x23
    8570:	mov	w2, w28
    8574:	mov	w26, w18
    8578:	bl	2430 <crc32@plt>
    857c:	mov	w18, w26
    8580:	ldp	x26, x3, [x29, #-24]
    8584:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8588:	add	x4, x4, #0x348
    858c:	str	x0, [x21, #32]
    8590:	mov	w0, #0xffffc0cc            	// #-16180
    8594:	add	x23, x23, x28
    8598:	cbnz	w24, 8f68 <inflate@@Base+0x16e8>
    859c:	ldr	w24, [sp, #16]
    85a0:	ldur	x1, [x29, #-40]
    85a4:	mov	w8, w27
    85a8:	sub	x27, x8, x28
    85ac:	mov	w8, #0x3f3b                	// #16187
    85b0:	str	wzr, [x21, #92]
    85b4:	str	w8, [x21, #8]
    85b8:	ldrb	w8, [x21, #25]
    85bc:	tbnz	w8, #4, 85d0 <inflate@@Base+0xd50>
    85c0:	ldr	x8, [x21, #48]
    85c4:	cbz	x8, 8674 <inflate@@Base+0xdf4>
    85c8:	str	xzr, [x8, #56]
    85cc:	b	8674 <inflate@@Base+0xdf4>
    85d0:	cbz	w27, 8f60 <inflate@@Base+0x16e0>
    85d4:	mov	x28, xzr
    85d8:	stur	x1, [x29, #-40]
    85dc:	str	w24, [sp, #16]
    85e0:	ldr	x9, [x21, #48]
    85e4:	ldrb	w24, [x23, x28]
    85e8:	add	x28, x28, #0x1
    85ec:	cbz	x9, 8614 <inflate@@Base+0xd94>
    85f0:	ldr	x8, [x9, #56]
    85f4:	cbz	x8, 8614 <inflate@@Base+0xd94>
    85f8:	ldr	w10, [x21, #92]
    85fc:	ldr	w9, [x9, #64]
    8600:	cmp	w10, w9
    8604:	b.cs	8614 <inflate@@Base+0xd94>  // b.hs, b.nlast
    8608:	add	w9, w10, #0x1
    860c:	str	w9, [x21, #92]
    8610:	strb	w24, [x8, x10]
    8614:	cbz	w24, 8620 <inflate@@Base+0xda0>
    8618:	cmp	w27, w28
    861c:	b.hi	85e0 <inflate@@Base+0xd60>  // b.pmore
    8620:	ldrb	w8, [x21, #25]
    8624:	tbz	w8, #1, 865c <inflate@@Base+0xddc>
    8628:	ldrb	w8, [x21, #16]
    862c:	tbz	w8, #2, 865c <inflate@@Base+0xddc>
    8630:	ldr	x0, [x21, #32]
    8634:	mov	x1, x23
    8638:	mov	w2, w28
    863c:	mov	w26, w18
    8640:	bl	2430 <crc32@plt>
    8644:	mov	w18, w26
    8648:	ldp	x26, x3, [x29, #-24]
    864c:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8650:	add	x4, x4, #0x348
    8654:	str	x0, [x21, #32]
    8658:	mov	w0, #0xffffc0cc            	// #-16180
    865c:	add	x23, x23, x28
    8660:	cbnz	w24, 8f68 <inflate@@Base+0x16e8>
    8664:	ldr	w24, [sp, #16]
    8668:	ldur	x1, [x29, #-40]
    866c:	mov	w8, w27
    8670:	sub	x27, x8, x28
    8674:	mov	w8, #0x3f3c                	// #16188
    8678:	str	w8, [x1]
    867c:	ldr	w8, [x21, #24]
    8680:	tbz	w8, #9, 86d0 <inflate@@Base+0xe50>
    8684:	cmp	w20, #0xf
    8688:	b.hi	86b4 <inflate@@Base+0xe34>  // b.pmore
    868c:	mov	w9, w20
    8690:	cbz	w27, 8f20 <inflate@@Base+0x16a0>
    8694:	ldrb	w10, [x23], #1
    8698:	add	x20, x9, #0x8
    869c:	sub	w27, w27, #0x1
    86a0:	cmp	x9, #0x8
    86a4:	lsl	x10, x10, x9
    86a8:	add	x25, x10, x25
    86ac:	mov	x9, x20
    86b0:	b.cc	8690 <inflate@@Base+0xe10>  // b.lo, b.ul, b.last
    86b4:	ldrb	w9, [x21, #16]
    86b8:	tbz	w9, #2, 86c8 <inflate@@Base+0xe48>
    86bc:	ldrh	w9, [x21, #32]
    86c0:	cmp	x25, x9
    86c4:	b.ne	8728 <inflate@@Base+0xea8>  // b.any
    86c8:	mov	x25, xzr
    86cc:	mov	w20, wzr
    86d0:	ldr	x9, [x21, #48]
    86d4:	mov	x26, x1
    86d8:	mov	w28, w18
    86dc:	cbz	x9, 86ec <inflate@@Base+0xe6c>
    86e0:	ubfx	w8, w8, #9, #1
    86e4:	mov	w10, #0x1                   	// #1
    86e8:	stp	w8, w10, [x9, #68]
    86ec:	mov	x0, xzr
    86f0:	mov	x1, xzr
    86f4:	mov	w2, wzr
    86f8:	bl	2430 <crc32@plt>
    86fc:	mov	w8, #0x3f3f                	// #16191
    8700:	str	x0, [x21, #32]
    8704:	str	x0, [x19, #96]
    8708:	mov	w18, w28
    870c:	mov	x1, x26
    8710:	str	w8, [x21, #8]
    8714:	ldp	x26, x3, [x29, #-24]
    8718:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    871c:	mov	w0, #0xffffc0cc            	// #-16180
    8720:	add	x4, x4, #0x348
    8724:	b	7964 <inflate@@Base+0xe4>
    8728:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    872c:	add	x8, x8, #0xc93
    8730:	b	8e18 <inflate@@Base+0x1598>
    8734:	bl	2560 <adler32@plt>
    8738:	str	x0, [x21, #32]
    873c:	str	x0, [x19, #96]
    8740:	mov	x1, x26
    8744:	ldp	x26, x3, [x29, #-24]
    8748:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    874c:	mov	w18, w28
    8750:	mov	w0, #0xffffc0cc            	// #-16180
    8754:	add	x4, x4, #0x348
    8758:	ldrb	w8, [x21, #16]
    875c:	tbz	w8, #2, 879c <inflate@@Base+0xf1c>
    8760:	ldr	w9, [x21, #24]
    8764:	mov	x8, x25
    8768:	cbnz	w9, 8790 <inflate@@Base+0xf10>
    876c:	lsr	x8, x25, #8
    8770:	lsl	w10, w25, #8
    8774:	and	x8, x8, #0xff00
    8778:	mov	w9, w25
    877c:	and	x10, x10, #0xff0000
    8780:	bfxil	x8, x25, #24, #8
    8784:	orr	x8, x8, x10
    8788:	lsl	w9, w25, #24
    878c:	orr	x8, x8, x9
    8790:	ldr	x9, [x21, #32]
    8794:	cmp	x8, x9
    8798:	b.ne	8808 <inflate@@Base+0xf88>  // b.any
    879c:	mov	x25, xzr
    87a0:	mov	w20, wzr
    87a4:	stur	w18, [x29, #-8]
    87a8:	mov	w8, #0x3f4f                	// #16207
    87ac:	str	w8, [x1]
    87b0:	ldr	w8, [x21, #16]
    87b4:	cbz	w8, 910c <inflate@@Base+0x188c>
    87b8:	ldr	w8, [x21, #24]
    87bc:	cbz	w8, 910c <inflate@@Base+0x188c>
    87c0:	cmp	w20, #0x1f
    87c4:	b.hi	87f0 <inflate@@Base+0xf70>  // b.pmore
    87c8:	mov	w8, w20
    87cc:	cbz	w27, 8f2c <inflate@@Base+0x16ac>
    87d0:	ldrb	w9, [x23], #1
    87d4:	add	x20, x8, #0x8
    87d8:	sub	w27, w27, #0x1
    87dc:	cmp	x8, #0x18
    87e0:	lsl	x9, x9, x8
    87e4:	add	x25, x9, x25
    87e8:	mov	x8, x20
    87ec:	b.cc	87cc <inflate@@Base+0xf4c>  // b.lo, b.ul, b.last
    87f0:	ldr	w8, [x21, #40]
    87f4:	cmp	x25, x8
    87f8:	b.eq	9104 <inflate@@Base+0x1884>  // b.none
    87fc:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8800:	add	x8, x8, #0xcbc
    8804:	b	8e18 <inflate@@Base+0x1598>
    8808:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    880c:	add	x8, x8, #0xca7
    8810:	mov	w9, #0x3f51                	// #16209
    8814:	str	x8, [x19, #48]
    8818:	str	w9, [x1]
    881c:	stur	w18, [x29, #-8]
    8820:	b	7964 <inflate@@Base+0xe4>
    8824:	and	x8, x25, #0xf
    8828:	cmp	x8, #0x8
    882c:	b.ne	886c <inflate@@Base+0xfec>  // b.any
    8830:	ldr	w10, [x21, #56]
    8834:	ubfx	x8, x25, #4, #4
    8838:	add	w9, w8, #0x8
    883c:	cbnz	w10, 8844 <inflate@@Base+0xfc4>
    8840:	str	w9, [x21, #56]
    8844:	cmp	w8, #0x7
    8848:	b.hi	8858 <inflate@@Base+0xfd8>  // b.pmore
    884c:	ldr	w10, [x21, #56]
    8850:	cmp	w9, w10
    8854:	b.ls	8eb0 <inflate@@Base+0x1630>  // b.plast
    8858:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    885c:	lsr	x25, x25, #4
    8860:	sub	w20, w20, #0x4
    8864:	add	x8, x8, #0xc66
    8868:	b	8e18 <inflate@@Base+0x1598>
    886c:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8870:	add	x8, x8, #0xc4b
    8874:	b	8e18 <inflate@@Base+0x1598>
    8878:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    887c:	add	x8, x8, #0x287
    8880:	mov	w9, #0x3f51                	// #16209
    8884:	str	x8, [x19, #48]
    8888:	str	w9, [x1]
    888c:	ldr	w8, [x1]
    8890:	mov	w9, #0x3f51                	// #16209
    8894:	cmp	w8, w9
    8898:	b.eq	7964 <inflate@@Base+0xe4>  // b.none
    889c:	ldrh	w8, [x21, #664]
    88a0:	cbz	w8, 8900 <inflate@@Base+0x1080>
    88a4:	ldp	x4, x8, [sp, #32]
    88a8:	stur	x1, [x29, #-40]
    88ac:	ldr	x1, [sp, #24]
    88b0:	mov	w0, #0x1                   	// #1
    88b4:	str	x8, [x21, #144]
    88b8:	str	x8, [x21, #104]
    88bc:	mov	w8, #0x9                   	// #9
    88c0:	mov	x5, x26
    88c4:	str	w18, [sp, #16]
    88c8:	str	w8, [x21, #120]
    88cc:	mov	x28, x3
    88d0:	bl	98e4 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    88d4:	cbz	w0, 890c <inflate@@Base+0x108c>
    88d8:	ldur	x1, [x29, #-40]
    88dc:	ldr	w18, [sp, #16]
    88e0:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    88e4:	add	x8, x8, #0x2c6
    88e8:	mov	w9, #0x3f51                	// #16209
    88ec:	stur	w0, [x29, #-28]
    88f0:	str	x8, [x19, #48]
    88f4:	str	w9, [x1]
    88f8:	mov	x3, x28
    88fc:	b	8718 <inflate@@Base+0xe98>
    8900:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8904:	add	x8, x8, #0x2a1
    8908:	b	8e18 <inflate@@Base+0x1598>
    890c:	ldr	x8, [x21, #144]
    8910:	ldp	w10, w2, [x21, #132]
    8914:	ldr	x4, [sp, #8]
    8918:	mov	w9, #0x6                   	// #6
    891c:	str	x8, [x21, #112]
    8920:	add	x8, x21, x10, lsl #1
    8924:	add	x1, x8, #0x98
    8928:	mov	w0, #0x2                   	// #2
    892c:	mov	x3, x28
    8930:	mov	x5, x26
    8934:	str	w9, [x21, #124]
    8938:	bl	98e4 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    893c:	cbz	w0, 8964 <inflate@@Base+0x10e4>
    8940:	ldur	x1, [x29, #-40]
    8944:	ldr	w18, [sp, #16]
    8948:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    894c:	add	x8, x8, #0x2e2
    8950:	mov	w9, #0x3f51                	// #16209
    8954:	stur	w0, [x29, #-28]
    8958:	str	x8, [x19, #48]
    895c:	str	w9, [x1]
    8960:	b	8714 <inflate@@Base+0xe94>
    8964:	ldur	x1, [x29, #-40]
    8968:	mov	w9, #0x3f47                	// #16199
    896c:	ldr	w18, [sp, #16]
    8970:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8974:	str	w9, [x1]
    8978:	ldp	x26, x3, [x29, #-24]
    897c:	mov	w8, wzr
    8980:	cmp	w24, #0x6
    8984:	mov	w0, #0xffffc0cc            	// #-16180
    8988:	add	x4, x4, #0x348
    898c:	stur	wzr, [x29, #-28]
    8990:	b.eq	8fac <inflate@@Base+0x172c>  // b.none
    8994:	mov	w8, #0x3f48                	// #16200
    8998:	str	w8, [x1]
    899c:	cmp	w18, #0x102
    89a0:	b.cc	8a1c <inflate@@Base+0x119c>  // b.lo, b.ul, b.last
    89a4:	cmp	w27, #0x6
    89a8:	b.cc	8a1c <inflate@@Base+0x119c>  // b.lo, b.ul, b.last
    89ac:	str	x22, [x19, #24]
    89b0:	str	w18, [x19, #32]
    89b4:	str	x23, [x19]
    89b8:	str	w27, [x19, #8]
    89bc:	str	w20, [x21, #88]
    89c0:	mov	x20, x1
    89c4:	ldur	w1, [x29, #-8]
    89c8:	mov	x0, x19
    89cc:	str	x25, [x21, #80]
    89d0:	bl	7098 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    89d4:	ldr	w8, [x21, #8]
    89d8:	ldur	x3, [x29, #-16]
    89dc:	mov	x1, x20
    89e0:	ldr	x22, [x19, #24]
    89e4:	ldr	w18, [x19, #32]
    89e8:	ldr	x23, [x19]
    89ec:	ldr	w27, [x19, #8]
    89f0:	ldr	x25, [x21, #80]
    89f4:	ldr	w20, [x21, #88]
    89f8:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    89fc:	mov	w9, #0x3f3f                	// #16191
    8a00:	add	x4, x4, #0x348
    8a04:	mov	w0, #0xffffc0cc            	// #-16180
    8a08:	cmp	w8, w9
    8a0c:	b.ne	7964 <inflate@@Base+0xe4>  // b.any
    8a10:	mov	w8, #0xffffffff            	// #-1
    8a14:	str	w8, [x21, #7148]
    8a18:	b	7964 <inflate@@Base+0xe4>
    8a1c:	ldr	w8, [x21, #120]
    8a20:	ldr	x9, [x21, #104]
    8a24:	mov	w10, #0xffffffff            	// #-1
    8a28:	str	wzr, [x21, #7148]
    8a2c:	lsl	w8, w10, w8
    8a30:	bic	w8, w25, w8
    8a34:	add	x10, x9, w8, uxtw #2
    8a38:	ldrb	w8, [x10, #1]
    8a3c:	cmp	w20, w8
    8a40:	b.cs	8a98 <inflate@@Base+0x1218>  // b.hs, b.nlast
    8a44:	mov	w11, w20
    8a48:	add	w20, w20, w27, lsl #3
    8a4c:	add	x12, x23, w27, uxtw
    8a50:	cbz	w27, 8f38 <inflate@@Base+0x16b8>
    8a54:	ldrb	w8, [x23], #1
    8a58:	ldr	w10, [x21, #120]
    8a5c:	ldr	x9, [x21, #104]
    8a60:	mov	w13, #0xffffffff            	// #-1
    8a64:	lsl	x8, x8, x11
    8a68:	add	x25, x8, x25
    8a6c:	lsl	w8, w13, w10
    8a70:	bic	w8, w25, w8
    8a74:	add	x10, x9, w8, uxtw #2
    8a78:	ldrb	w8, [x10, #1]
    8a7c:	add	x11, x11, #0x8
    8a80:	sub	w27, w27, #0x1
    8a84:	cmp	x11, x8
    8a88:	b.cc	8a50 <inflate@@Base+0x11d0>  // b.lo, b.ul, b.last
    8a8c:	add	x12, x10, #0x2
    8a90:	mov	w20, w11
    8a94:	b	8a9c <inflate@@Base+0x121c>
    8a98:	add	x12, x10, #0x2
    8a9c:	ldrb	w11, [x10]
    8aa0:	ldrh	w10, [x12]
    8aa4:	cbz	w11, 8b48 <inflate@@Base+0x12c8>
    8aa8:	and	w12, w11, #0xf0
    8aac:	cbnz	w12, 8b48 <inflate@@Base+0x12c8>
    8ab0:	add	w11, w8, w11
    8ab4:	mov	w12, #0xffffffff            	// #-1
    8ab8:	lsl	w11, w12, w11
    8abc:	bic	w12, w25, w11
    8ac0:	lsr	w12, w12, w8
    8ac4:	add	w13, w12, w10
    8ac8:	add	x12, x9, w13, uxtw #2
    8acc:	ldrb	w12, [x12, #1]
    8ad0:	add	w14, w8, w12
    8ad4:	cmp	w14, w20
    8ad8:	b.ls	8b2c <inflate@@Base+0x12ac>  // b.plast
    8adc:	mvn	w13, w11
    8ae0:	mov	w11, w20
    8ae4:	add	w20, w20, w27, lsl #3
    8ae8:	add	x14, x23, w27, uxtw
    8aec:	cbz	w27, 8f44 <inflate@@Base+0x16c4>
    8af0:	ldrb	w12, [x23], #1
    8af4:	sub	w27, w27, #0x1
    8af8:	lsl	x12, x12, x11
    8afc:	add	x25, x12, x25
    8b00:	and	w12, w25, w13
    8b04:	lsr	w12, w12, w8
    8b08:	add	w15, w12, w10
    8b0c:	add	x12, x9, w15, uxtw #2
    8b10:	ldrb	w12, [x12, #1]
    8b14:	add	x11, x11, #0x8
    8b18:	add	x16, x8, x12
    8b1c:	cmp	x11, x16
    8b20:	b.cc	8aec <inflate@@Base+0x126c>  // b.lo, b.ul, b.last
    8b24:	mov	w13, w15
    8b28:	mov	w20, w11
    8b2c:	add	x9, x9, x13, lsl #2
    8b30:	ldrh	w10, [x9, #2]
    8b34:	ldrb	w11, [x9]
    8b38:	lsr	x25, x25, x8
    8b3c:	sub	w20, w20, w8
    8b40:	str	w8, [x21, #7148]
    8b44:	mov	w8, w12
    8b48:	ldr	w9, [x21, #7148]
    8b4c:	lsr	x25, x25, x8
    8b50:	sub	w20, w20, w8
    8b54:	str	w10, [x21, #92]
    8b58:	add	w8, w9, w8
    8b5c:	str	w8, [x21, #7148]
    8b60:	cbz	w11, 8e84 <inflate@@Base+0x1604>
    8b64:	tbnz	w11, #5, 8e90 <inflate@@Base+0x1610>
    8b68:	tbnz	w11, #6, 8ea4 <inflate@@Base+0x1624>
    8b6c:	and	w8, w11, #0xf
    8b70:	mov	w9, #0x3f49                	// #16201
    8b74:	str	w8, [x21, #100]
    8b78:	str	w9, [x21, #8]
    8b7c:	ldr	w8, [x21, #100]
    8b80:	cbz	w8, 8be0 <inflate@@Base+0x1360>
    8b84:	cmp	w20, w8
    8b88:	b.cs	8bb4 <inflate@@Base+0x1334>  // b.hs, b.nlast
    8b8c:	add	w9, w20, w27, lsl #3
    8b90:	add	x10, x23, w27, uxtw
    8b94:	cbz	w27, 8f50 <inflate@@Base+0x16d0>
    8b98:	ldrb	w11, [x23], #1
    8b9c:	sub	w27, w27, #0x1
    8ba0:	lsl	x11, x11, x20
    8ba4:	add	w20, w20, #0x8
    8ba8:	cmp	w20, w8
    8bac:	add	x25, x11, x25
    8bb0:	b.cc	8b94 <inflate@@Base+0x1314>  // b.lo, b.ul, b.last
    8bb4:	ldr	w10, [x21, #92]
    8bb8:	ldr	w11, [x21, #7148]
    8bbc:	mov	w9, #0xffffffff            	// #-1
    8bc0:	lsl	w9, w9, w8
    8bc4:	bic	w9, w25, w9
    8bc8:	sub	w20, w20, w8
    8bcc:	lsr	x25, x25, x8
    8bd0:	add	w9, w10, w9
    8bd4:	add	w8, w11, w8
    8bd8:	str	w9, [x21, #92]
    8bdc:	str	w8, [x21, #7148]
    8be0:	ldr	w8, [x21, #92]
    8be4:	mov	w9, #0x3f4a                	// #16202
    8be8:	str	w9, [x21, #8]
    8bec:	str	w8, [x21, #7152]
    8bf0:	ldr	w8, [x21, #124]
    8bf4:	ldr	x9, [x21, #112]
    8bf8:	mov	w10, #0xffffffff            	// #-1
    8bfc:	lsl	w8, w10, w8
    8c00:	bic	w8, w25, w8
    8c04:	add	x10, x9, w8, uxtw #2
    8c08:	ldrb	w8, [x10, #1]
    8c0c:	cmp	w20, w8
    8c10:	b.cs	8c68 <inflate@@Base+0x13e8>  // b.hs, b.nlast
    8c14:	mov	w11, w20
    8c18:	add	w20, w20, w27, lsl #3
    8c1c:	add	x12, x23, w27, uxtw
    8c20:	cbz	w27, 8f38 <inflate@@Base+0x16b8>
    8c24:	ldrb	w8, [x23], #1
    8c28:	ldr	w10, [x21, #124]
    8c2c:	ldr	x9, [x21, #112]
    8c30:	mov	w13, #0xffffffff            	// #-1
    8c34:	lsl	x8, x8, x11
    8c38:	add	x25, x8, x25
    8c3c:	lsl	w8, w13, w10
    8c40:	bic	w8, w25, w8
    8c44:	add	x10, x9, w8, uxtw #2
    8c48:	ldrb	w8, [x10, #1]
    8c4c:	add	x11, x11, #0x8
    8c50:	sub	w27, w27, #0x1
    8c54:	cmp	x11, x8
    8c58:	b.cc	8c20 <inflate@@Base+0x13a0>  // b.lo, b.ul, b.last
    8c5c:	add	x13, x10, #0x2
    8c60:	mov	w20, w11
    8c64:	b	8c6c <inflate@@Base+0x13ec>
    8c68:	add	x13, x10, #0x2
    8c6c:	ldrb	w12, [x10]
    8c70:	ldrh	w10, [x13]
    8c74:	tst	w12, #0xf0
    8c78:	b.ne	8d1c <inflate@@Base+0x149c>  // b.any
    8c7c:	add	w11, w8, w12
    8c80:	mov	w12, #0xffffffff            	// #-1
    8c84:	lsl	w12, w12, w11
    8c88:	bic	w11, w25, w12
    8c8c:	lsr	w11, w11, w8
    8c90:	add	w13, w11, w10
    8c94:	add	x11, x9, w13, uxtw #2
    8c98:	ldrb	w11, [x11, #1]
    8c9c:	add	w14, w8, w11
    8ca0:	cmp	w14, w20
    8ca4:	b.ls	8cf8 <inflate@@Base+0x1478>  // b.plast
    8ca8:	mvn	w13, w12
    8cac:	mov	w12, w20
    8cb0:	add	w20, w20, w27, lsl #3
    8cb4:	add	x14, x23, w27, uxtw
    8cb8:	cbz	w27, 8f44 <inflate@@Base+0x16c4>
    8cbc:	ldrb	w11, [x23], #1
    8cc0:	sub	w27, w27, #0x1
    8cc4:	lsl	x11, x11, x12
    8cc8:	add	x25, x11, x25
    8ccc:	and	w11, w25, w13
    8cd0:	lsr	w11, w11, w8
    8cd4:	add	w15, w11, w10
    8cd8:	add	x11, x9, w15, uxtw #2
    8cdc:	ldrb	w11, [x11, #1]
    8ce0:	add	x12, x12, #0x8
    8ce4:	add	x16, x8, x11
    8ce8:	cmp	x12, x16
    8cec:	b.cc	8cb8 <inflate@@Base+0x1438>  // b.lo, b.ul, b.last
    8cf0:	mov	w13, w15
    8cf4:	mov	w20, w12
    8cf8:	add	x9, x9, x13, lsl #2
    8cfc:	ldr	w13, [x21, #7148]
    8d00:	ldrh	w10, [x9, #2]
    8d04:	ldrb	w12, [x9]
    8d08:	lsr	x25, x25, x8
    8d0c:	sub	w20, w20, w8
    8d10:	add	w8, w13, w8
    8d14:	str	w8, [x21, #7148]
    8d18:	mov	w8, w11
    8d1c:	ldr	w9, [x21, #7148]
    8d20:	lsr	x25, x25, x8
    8d24:	sub	w20, w20, w8
    8d28:	add	w8, w9, w8
    8d2c:	str	w8, [x21, #7148]
    8d30:	tbnz	w12, #6, 8e10 <inflate@@Base+0x1590>
    8d34:	and	w8, w12, #0xf
    8d38:	mov	w9, #0x3f4b                	// #16203
    8d3c:	stp	w10, w8, [x21, #96]
    8d40:	str	w9, [x21, #8]
    8d44:	ldr	w8, [x21, #100]
    8d48:	cbz	w8, 8da8 <inflate@@Base+0x1528>
    8d4c:	cmp	w20, w8
    8d50:	b.cs	8d7c <inflate@@Base+0x14fc>  // b.hs, b.nlast
    8d54:	add	w9, w20, w27, lsl #3
    8d58:	add	x10, x23, w27, uxtw
    8d5c:	cbz	w27, 8f50 <inflate@@Base+0x16d0>
    8d60:	ldrb	w11, [x23], #1
    8d64:	sub	w27, w27, #0x1
    8d68:	lsl	x11, x11, x20
    8d6c:	add	w20, w20, #0x8
    8d70:	cmp	w20, w8
    8d74:	add	x25, x11, x25
    8d78:	b.cc	8d5c <inflate@@Base+0x14dc>  // b.lo, b.ul, b.last
    8d7c:	ldr	w10, [x21, #96]
    8d80:	ldr	w11, [x21, #7148]
    8d84:	mov	w9, #0xffffffff            	// #-1
    8d88:	lsl	w9, w9, w8
    8d8c:	bic	w9, w25, w9
    8d90:	sub	w20, w20, w8
    8d94:	lsr	x25, x25, x8
    8d98:	add	w9, w10, w9
    8d9c:	add	w8, w11, w8
    8da0:	str	w9, [x21, #96]
    8da4:	str	w8, [x21, #7148]
    8da8:	mov	w8, #0x3f4c                	// #16204
    8dac:	str	w8, [x1]
    8db0:	cbz	w18, 8f60 <inflate@@Base+0x16e0>
    8db4:	ldur	w9, [x29, #-8]
    8db8:	ldr	w8, [x21, #96]
    8dbc:	sub	w9, w9, w18
    8dc0:	cmp	w8, w9
    8dc4:	b.ls	8dec <inflate@@Base+0x156c>  // b.plast
    8dc8:	ldr	w10, [x21, #64]
    8dcc:	sub	w8, w8, w9
    8dd0:	cmp	w8, w10
    8dd4:	b.ls	8df8 <inflate@@Base+0x1578>  // b.plast
    8dd8:	ldr	w9, [x21, #7144]
    8ddc:	cbz	w9, 8df8 <inflate@@Base+0x1578>
    8de0:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8de4:	add	x8, x8, #0x32a
    8de8:	b	8e18 <inflate@@Base+0x1598>
    8dec:	ldr	w9, [x21, #92]
    8df0:	sub	x8, x22, x8
    8df4:	b	8e44 <inflate@@Base+0x15c4>
    8df8:	ldr	w10, [x21, #68]
    8dfc:	subs	w9, w8, w10
    8e00:	b.ls	8e28 <inflate@@Base+0x15a8>  // b.plast
    8e04:	ldr	w8, [x21, #60]
    8e08:	sub	w10, w8, w9
    8e0c:	b	8e30 <inflate@@Base+0x15b0>
    8e10:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8e14:	add	x8, x8, #0x314
    8e18:	mov	w9, #0x3f51                	// #16209
    8e1c:	str	x8, [x19, #48]
    8e20:	str	w9, [x1]
    8e24:	b	7964 <inflate@@Base+0xe4>
    8e28:	sub	w10, w10, w8
    8e2c:	mov	w9, w8
    8e30:	ldr	w11, [x21, #92]
    8e34:	ldr	x8, [x21, #72]
    8e38:	cmp	w9, w11
    8e3c:	add	x8, x8, w10, uxtw
    8e40:	csel	w9, w11, w9, hi  // hi = pmore
    8e44:	ldr	w10, [x21, #92]
    8e48:	cmp	w9, w18
    8e4c:	csel	w9, w18, w9, hi  // hi = pmore
    8e50:	sub	w10, w10, w9
    8e54:	str	w10, [x21, #92]
    8e58:	mov	w10, w9
    8e5c:	ldrb	w11, [x8], #1
    8e60:	subs	w10, w10, #0x1
    8e64:	strb	w11, [x22], #1
    8e68:	b.ne	8e5c <inflate@@Base+0x15dc>  // b.any
    8e6c:	ldr	w8, [x21, #92]
    8e70:	sub	w18, w18, w9
    8e74:	cbnz	w8, 7964 <inflate@@Base+0xe4>
    8e78:	mov	w8, #0x3f48                	// #16200
    8e7c:	str	w8, [x1]
    8e80:	b	7964 <inflate@@Base+0xe4>
    8e84:	mov	w8, #0x3f4d                	// #16205
    8e88:	str	w8, [x1]
    8e8c:	b	7964 <inflate@@Base+0xe4>
    8e90:	mov	w8, #0xffffffff            	// #-1
    8e94:	mov	w9, #0x3f3f                	// #16191
    8e98:	str	w8, [x21, #7148]
    8e9c:	str	w9, [x21, #8]
    8ea0:	b	7964 <inflate@@Base+0xe4>
    8ea4:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8ea8:	add	x8, x8, #0x2f8
    8eac:	b	8e18 <inflate@@Base+0x1598>
    8eb0:	mov	w9, #0x100                 	// #256
    8eb4:	lsl	w8, w9, w8
    8eb8:	mov	x0, xzr
    8ebc:	mov	x26, x1
    8ec0:	mov	x1, xzr
    8ec4:	mov	w2, wzr
    8ec8:	str	w8, [x21, #28]
    8ecc:	mov	w20, w18
    8ed0:	bl	2560 <adler32@plt>
    8ed4:	mov	x1, x26
    8ed8:	ldp	x26, x3, [x29, #-24]
    8edc:	tst	x25, #0x2000
    8ee0:	mov	w8, #0x3f3d                	// #16189
    8ee4:	mov	w9, #0x3f3f                	// #16191
    8ee8:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    8eec:	csel	w8, w9, w8, eq  // eq = none
    8ef0:	add	x4, x4, #0x348
    8ef4:	mov	w18, w20
    8ef8:	mov	w20, wzr
    8efc:	str	x0, [x21, #32]
    8f00:	str	x0, [x19, #96]
    8f04:	mov	w0, #0xffffc0cc            	// #-16180
    8f08:	str	w8, [x21, #8]
    8f0c:	mov	x25, xzr
    8f10:	b	7964 <inflate@@Base+0xe4>
    8f14:	ldr	w8, [x19, #8]
    8f18:	cbnz	w8, 78b0 <inflate@@Base+0x30>
    8f1c:	b	78e4 <inflate@@Base+0x64>
    8f20:	ldur	w28, [x29, #-28]
    8f24:	mov	w20, w9
    8f28:	b	8fb0 <inflate@@Base+0x1730>
    8f2c:	mov	w20, w8
    8f30:	ldur	w28, [x29, #-28]
    8f34:	b	8fb0 <inflate@@Base+0x1730>
    8f38:	ldur	w28, [x29, #-28]
    8f3c:	mov	x23, x12
    8f40:	b	8fb0 <inflate@@Base+0x1730>
    8f44:	ldur	w28, [x29, #-28]
    8f48:	mov	x23, x14
    8f4c:	b	8fb0 <inflate@@Base+0x1730>
    8f50:	ldur	w28, [x29, #-28]
    8f54:	mov	x23, x10
    8f58:	mov	w20, w9
    8f5c:	b	8fb0 <inflate@@Base+0x1730>
    8f60:	ldur	w8, [x29, #-28]
    8f64:	b	8fac <inflate@@Base+0x172c>
    8f68:	ldur	w8, [x29, #-28]
    8f6c:	ldr	w24, [sp, #16]
    8f70:	ldur	x1, [x29, #-40]
    8f74:	sub	w27, w27, w28
    8f78:	b	8fac <inflate@@Base+0x172c>
    8f7c:	str	x22, [x19, #24]
    8f80:	str	w18, [x19, #32]
    8f84:	str	x23, [x19]
    8f88:	str	w27, [x19, #8]
    8f8c:	str	x25, [x21, #80]
    8f90:	str	w20, [x21, #88]
    8f94:	mov	w0, #0x2                   	// #2
    8f98:	b	78b4 <inflate@@Base+0x34>
    8f9c:	ldur	w8, [x29, #-28]
    8fa0:	ldur	x1, [x29, #-40]
    8fa4:	ldr	x19, [sp, #16]
    8fa8:	mov	w24, w26
    8fac:	mov	w28, w8
    8fb0:	str	x22, [x19, #24]
    8fb4:	str	w18, [x19, #32]
    8fb8:	str	x23, [x19]
    8fbc:	str	w27, [x19, #8]
    8fc0:	ldr	w8, [x21, #60]
    8fc4:	str	x25, [x21, #80]
    8fc8:	str	w20, [x21, #88]
    8fcc:	cbz	w8, 9000 <inflate@@Base+0x1780>
    8fd0:	ldur	w8, [x29, #-8]
    8fd4:	mov	x0, x19
    8fd8:	mov	x20, x1
    8fdc:	mov	x1, x22
    8fe0:	sub	w2, w8, w18
    8fe4:	bl	914c <inflate@@Base+0x18cc>
    8fe8:	cbz	w0, 9030 <inflate@@Base+0x17b0>
    8fec:	mov	w8, #0x3f52                	// #16210
    8ff0:	mov	x9, x20
    8ff4:	str	w8, [x20]
    8ff8:	mov	w0, #0xfffffffc            	// #-4
    8ffc:	b	78b4 <inflate@@Base+0x34>
    9000:	ldur	w8, [x29, #-8]
    9004:	cmp	w8, w18
    9008:	b.eq	9030 <inflate@@Base+0x17b0>  // b.none
    900c:	ldr	w8, [x1]
    9010:	mov	w9, #0x3f50                	// #16208
    9014:	cmp	w8, w9
    9018:	b.hi	9030 <inflate@@Base+0x17b0>  // b.pmore
    901c:	cmp	w24, #0x4
    9020:	b.ne	8fd0 <inflate@@Base+0x1750>  // b.any
    9024:	mov	w9, #0x3f4d                	// #16205
    9028:	cmp	w8, w9
    902c:	b.ls	8fd0 <inflate@@Base+0x1750>  // b.plast
    9030:	ldr	w8, [x19, #8]
    9034:	ldur	w12, [x29, #-44]
    9038:	ldr	w9, [x19, #32]
    903c:	ldr	x10, [x19, #16]
    9040:	ldr	x11, [x19, #40]
    9044:	sub	w20, w12, w8
    9048:	ldur	w8, [x29, #-8]
    904c:	subs	w22, w8, w9
    9050:	add	x8, x10, x20
    9054:	add	x9, x11, x22
    9058:	str	x8, [x19, #16]
    905c:	str	x9, [x19, #40]
    9060:	ldr	x8, [x21, #40]
    9064:	add	x8, x8, x22
    9068:	str	x8, [x21, #40]
    906c:	b.eq	90a4 <inflate@@Base+0x1824>  // b.none
    9070:	ldr	w8, [x21, #16]
    9074:	tbz	w8, #2, 90a4 <inflate@@Base+0x1824>
    9078:	ldr	x9, [x19, #24]
    907c:	ldr	w8, [x21, #24]
    9080:	ldr	x0, [x21, #32]
    9084:	mov	w2, w22
    9088:	sub	x1, x9, x22
    908c:	cbz	w8, 9098 <inflate@@Base+0x1818>
    9090:	bl	2430 <crc32@plt>
    9094:	b	909c <inflate@@Base+0x181c>
    9098:	bl	2560 <adler32@plt>
    909c:	str	x0, [x21, #32]
    90a0:	str	x0, [x19, #96]
    90a4:	ldp	w10, w9, [x21, #8]
    90a8:	ldr	w8, [x21, #88]
    90ac:	mov	w12, #0x3f3f                	// #16191
    90b0:	orr	w11, w22, w20
    90b4:	cmp	w9, #0x0
    90b8:	cset	w9, ne  // ne = any
    90bc:	cmp	w10, w12
    90c0:	mov	w12, #0x3f42                	// #16194
    90c4:	add	w8, w8, w9, lsl #6
    90c8:	cset	w9, eq  // eq = none
    90cc:	cmp	w10, w12
    90d0:	mov	w12, #0x3f47                	// #16199
    90d4:	add	w8, w8, w9, lsl #7
    90d8:	mov	w9, #0x100                 	// #256
    90dc:	ccmp	w10, w12, #0x4, ne  // ne = any
    90e0:	csel	w9, w9, wzr, eq  // eq = none
    90e4:	cmp	w11, #0x0
    90e8:	add	w8, w8, w9
    90ec:	ccmp	w24, #0x4, #0x4, ne  // ne = any
    90f0:	str	w8, [x19, #88]
    90f4:	ccmp	w28, #0x0, #0x0, eq  // eq = none
    90f8:	mov	w8, #0xfffffffb            	// #-5
    90fc:	csel	w0, w8, w28, eq  // eq = none
    9100:	b	78b4 <inflate@@Base+0x34>
    9104:	mov	x25, xzr
    9108:	mov	w20, wzr
    910c:	mov	w8, #0x3f50                	// #16208
    9110:	str	w8, [x1]
    9114:	mov	w28, #0x1                   	// #1
    9118:	b	8fb0 <inflate@@Base+0x1730>
    911c:	ldur	w28, [x29, #-28]
    9120:	sub	w20, w20, #0x3
    9124:	b	8fb0 <inflate@@Base+0x1730>
    9128:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    912c:	mov	x9, #0x9                   	// #9
    9130:	adrp	x10, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    9134:	add	x8, x8, #0x3b4
    9138:	movk	x9, #0x5, lsl #32
    913c:	add	x10, x10, #0xbb4
    9140:	stp	x10, x9, [x0, #112]
    9144:	str	x8, [x0, #104]
    9148:	ret
    914c:	stp	x29, x30, [sp, #-64]!
    9150:	stp	x22, x21, [sp, #32]
    9154:	stp	x20, x19, [sp, #48]
    9158:	str	x23, [sp, #16]
    915c:	ldr	x23, [x0, #56]
    9160:	mov	w20, w2
    9164:	mov	x19, x1
    9168:	mov	x29, sp
    916c:	ldr	x8, [x23, #72]
    9170:	cbnz	x8, 9198 <inflate@@Base+0x1918>
    9174:	ldr	w9, [x23, #56]
    9178:	ldr	x8, [x0, #64]
    917c:	ldr	x0, [x0, #80]
    9180:	mov	w21, #0x1                   	// #1
    9184:	lsl	w1, w21, w9
    9188:	mov	w2, #0x1                   	// #1
    918c:	blr	x8
    9190:	str	x0, [x23, #72]
    9194:	cbz	x0, 9228 <inflate@@Base+0x19a8>
    9198:	ldr	w8, [x23, #60]
    919c:	cbnz	w8, 91b4 <inflate@@Base+0x1934>
    91a0:	ldr	w8, [x23, #56]
    91a4:	mov	w9, #0x1                   	// #1
    91a8:	str	xzr, [x23, #64]
    91ac:	lsl	w8, w9, w8
    91b0:	str	w8, [x23, #60]
    91b4:	ldr	w2, [x23, #60]
    91b8:	cmp	w2, w20
    91bc:	b.ls	920c <inflate@@Base+0x198c>  // b.plast
    91c0:	ldr	w8, [x23, #68]
    91c4:	ldr	x9, [x23, #72]
    91c8:	sub	x1, x19, w20, uxtw
    91cc:	sub	w10, w2, w8
    91d0:	cmp	w10, w20
    91d4:	csel	w22, w20, w10, hi  // hi = pmore
    91d8:	add	x0, x9, x8
    91dc:	mov	x2, x22
    91e0:	bl	23a0 <memcpy@plt>
    91e4:	subs	w20, w20, w22
    91e8:	b.eq	9240 <inflate@@Base+0x19c0>  // b.none
    91ec:	ldr	x0, [x23, #72]
    91f0:	mov	w2, w20
    91f4:	sub	x1, x19, x2
    91f8:	bl	23a0 <memcpy@plt>
    91fc:	ldr	w8, [x23, #60]
    9200:	mov	w21, wzr
    9204:	str	w20, [x23, #68]
    9208:	b	9224 <inflate@@Base+0x19a4>
    920c:	ldr	x0, [x23, #72]
    9210:	sub	x1, x19, x2
    9214:	bl	23a0 <memcpy@plt>
    9218:	ldr	w8, [x23, #60]
    921c:	mov	w21, wzr
    9220:	str	wzr, [x23, #68]
    9224:	str	w8, [x23, #64]
    9228:	mov	w0, w21
    922c:	ldp	x20, x19, [sp, #48]
    9230:	ldp	x22, x21, [sp, #32]
    9234:	ldr	x23, [sp, #16]
    9238:	ldp	x29, x30, [sp], #64
    923c:	ret
    9240:	ldp	w8, w9, [x23, #64]
    9244:	ldr	w10, [x23, #60]
    9248:	mov	w21, wzr
    924c:	add	w9, w9, w22
    9250:	cmp	w9, w10
    9254:	csel	w9, wzr, w9, eq  // eq = none
    9258:	cmp	w8, w10
    925c:	str	w9, [x23, #68]
    9260:	b.cs	9228 <inflate@@Base+0x19a8>  // b.hs, b.nlast
    9264:	mov	w21, wzr
    9268:	add	w8, w8, w22
    926c:	b	9224 <inflate@@Base+0x19a4>

0000000000009270 <inflateEnd@@Base>:
    9270:	stp	x29, x30, [sp, #-32]!
    9274:	str	x19, [sp, #16]
    9278:	mov	x29, sp
    927c:	mov	x19, x0
    9280:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    9284:	cbz	w0, 9290 <inflateEnd@@Base+0x20>
    9288:	mov	w0, #0xfffffffe            	// #-2
    928c:	b	92b8 <inflateEnd@@Base+0x48>
    9290:	ldr	x8, [x19, #56]
    9294:	ldr	x1, [x8, #72]
    9298:	cbz	x1, 92a4 <inflateEnd@@Base+0x34>
    929c:	ldp	x8, x0, [x19, #72]
    92a0:	blr	x8
    92a4:	ldp	x8, x0, [x19, #72]
    92a8:	ldr	x1, [x19, #56]
    92ac:	blr	x8
    92b0:	mov	w0, wzr
    92b4:	str	xzr, [x19, #56]
    92b8:	ldr	x19, [sp, #16]
    92bc:	ldp	x29, x30, [sp], #32
    92c0:	ret

00000000000092c4 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    92c4:	stp	x29, x30, [sp, #-48]!
    92c8:	str	x21, [sp, #16]
    92cc:	stp	x20, x19, [sp, #32]
    92d0:	mov	x29, sp
    92d4:	mov	x19, x2
    92d8:	mov	x20, x1
    92dc:	mov	x21, x0
    92e0:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    92e4:	cbz	w0, 92f0 <inflateGetDictionary@@ZLIB_1.2.7.1+0x2c>
    92e8:	mov	w0, #0xfffffffe            	// #-2
    92ec:	b	933c <inflateGetDictionary@@ZLIB_1.2.7.1+0x78>
    92f0:	ldr	x21, [x21, #56]
    92f4:	cbz	x20, 932c <inflateGetDictionary@@ZLIB_1.2.7.1+0x68>
    92f8:	ldr	w8, [x21, #64]
    92fc:	cbz	w8, 932c <inflateGetDictionary@@ZLIB_1.2.7.1+0x68>
    9300:	ldr	x9, [x21, #72]
    9304:	ldr	w10, [x21, #68]
    9308:	mov	x0, x20
    930c:	add	x1, x9, x10
    9310:	sub	w2, w8, w10
    9314:	bl	23a0 <memcpy@plt>
    9318:	ldp	w8, w2, [x21, #64]
    931c:	ldr	x1, [x21, #72]
    9320:	add	x8, x20, x8
    9324:	sub	x0, x8, x2
    9328:	bl	23a0 <memcpy@plt>
    932c:	mov	w0, wzr
    9330:	cbz	x19, 933c <inflateGetDictionary@@ZLIB_1.2.7.1+0x78>
    9334:	ldr	w8, [x21, #64]
    9338:	str	w8, [x19]
    933c:	ldp	x20, x19, [sp, #32]
    9340:	ldr	x21, [sp, #16]
    9344:	ldp	x29, x30, [sp], #48
    9348:	ret

000000000000934c <inflateSetDictionary@@Base>:
    934c:	stp	x29, x30, [sp, #-48]!
    9350:	stp	x22, x21, [sp, #16]
    9354:	stp	x20, x19, [sp, #32]
    9358:	mov	x29, sp
    935c:	mov	w19, w2
    9360:	mov	x21, x1
    9364:	mov	x20, x0
    9368:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    936c:	cbz	w0, 9384 <inflateSetDictionary@@Base+0x38>
    9370:	mov	w0, #0xfffffffe            	// #-2
    9374:	ldp	x20, x19, [sp, #32]
    9378:	ldp	x22, x21, [sp, #16]
    937c:	ldp	x29, x30, [sp], #48
    9380:	ret
    9384:	ldr	x22, [x20, #56]
    9388:	ldr	w8, [x22, #16]
    938c:	cbz	w8, 93a0 <inflateSetDictionary@@Base+0x54>
    9390:	ldr	w8, [x22, #8]
    9394:	mov	w9, #0x3f3e                	// #16190
    9398:	cmp	w8, w9
    939c:	b.ne	9370 <inflateSetDictionary@@Base+0x24>  // b.any
    93a0:	ldr	w8, [x22, #8]
    93a4:	mov	w9, #0x3f3e                	// #16190
    93a8:	cmp	w8, w9
    93ac:	b.ne	93d8 <inflateSetDictionary@@Base+0x8c>  // b.any
    93b0:	mov	x0, xzr
    93b4:	mov	x1, xzr
    93b8:	mov	w2, wzr
    93bc:	bl	2560 <adler32@plt>
    93c0:	mov	x1, x21
    93c4:	mov	w2, w19
    93c8:	bl	2560 <adler32@plt>
    93cc:	ldr	x8, [x22, #32]
    93d0:	cmp	x0, x8
    93d4:	b.ne	93fc <inflateSetDictionary@@Base+0xb0>  // b.any
    93d8:	add	x1, x21, w19, uxtw
    93dc:	mov	x0, x20
    93e0:	mov	w2, w19
    93e4:	bl	914c <inflate@@Base+0x18cc>
    93e8:	cbz	w0, 9404 <inflateSetDictionary@@Base+0xb8>
    93ec:	mov	w8, #0x3f52                	// #16210
    93f0:	str	w8, [x22, #8]
    93f4:	mov	w0, #0xfffffffc            	// #-4
    93f8:	b	9374 <inflateSetDictionary@@Base+0x28>
    93fc:	mov	w0, #0xfffffffd            	// #-3
    9400:	b	9374 <inflateSetDictionary@@Base+0x28>
    9404:	mov	w8, #0x1                   	// #1
    9408:	str	w8, [x22, #20]
    940c:	b	9374 <inflateSetDictionary@@Base+0x28>

0000000000009410 <inflateGetHeader@@ZLIB_1.2.2>:
    9410:	stp	x29, x30, [sp, #-32]!
    9414:	stp	x20, x19, [sp, #16]
    9418:	mov	x29, sp
    941c:	mov	x19, x1
    9420:	mov	x20, x0
    9424:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    9428:	cbnz	w0, 9438 <inflateGetHeader@@ZLIB_1.2.2+0x28>
    942c:	ldr	x8, [x20, #56]
    9430:	ldrb	w9, [x8, #16]
    9434:	tbnz	w9, #1, 9440 <inflateGetHeader@@ZLIB_1.2.2+0x30>
    9438:	mov	w0, #0xfffffffe            	// #-2
    943c:	b	944c <inflateGetHeader@@ZLIB_1.2.2+0x3c>
    9440:	mov	w0, wzr
    9444:	str	x19, [x8, #48]
    9448:	str	wzr, [x19, #72]
    944c:	ldp	x20, x19, [sp, #16]
    9450:	ldp	x29, x30, [sp], #32
    9454:	ret

0000000000009458 <inflateSync@@Base>:
    9458:	sub	sp, sp, #0x40
    945c:	stp	x29, x30, [sp, #16]
    9460:	stp	x22, x21, [sp, #32]
    9464:	stp	x20, x19, [sp, #48]
    9468:	add	x29, sp, #0x10
    946c:	mov	x19, x0
    9470:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    9474:	cbz	w0, 9490 <inflateSync@@Base+0x38>
    9478:	mov	w0, #0xfffffffe            	// #-2
    947c:	ldp	x20, x19, [sp, #48]
    9480:	ldp	x22, x21, [sp, #32]
    9484:	ldp	x29, x30, [sp, #16]
    9488:	add	sp, sp, #0x40
    948c:	ret
    9490:	ldr	w8, [x19, #8]
    9494:	ldr	x20, [x19, #56]
    9498:	cbnz	w8, 94b0 <inflateSync@@Base+0x58>
    949c:	ldr	w8, [x20, #88]
    94a0:	cmp	w8, #0x8
    94a4:	b.cs	94b0 <inflateSync@@Base+0x58>  // b.hs, b.nlast
    94a8:	mov	w0, #0xfffffffb            	// #-5
    94ac:	b	947c <inflateSync@@Base+0x24>
    94b0:	ldr	w9, [x20, #8]
    94b4:	mov	w8, #0x3f53                	// #16211
    94b8:	cmp	w9, w8
    94bc:	b.eq	952c <inflateSync@@Base+0xd4>  // b.none
    94c0:	ldr	w9, [x20, #88]
    94c4:	ldr	x10, [x20, #80]
    94c8:	str	w8, [x20, #8]
    94cc:	and	x8, x9, #0x7
    94d0:	ands	w11, w9, #0xfffffff8
    94d4:	lsl	x8, x10, x8
    94d8:	str	x8, [x20, #80]
    94dc:	str	w11, [x20, #88]
    94e0:	b.eq	9518 <inflateSync@@Base+0xc0>  // b.none
    94e4:	ldr	x8, [x20, #80]
    94e8:	and	w9, w9, #0xfffffff8
    94ec:	mov	x2, xzr
    94f0:	neg	w9, w9
    94f4:	sub	x10, x29, #0x4
    94f8:	strb	w8, [x10, x2]
    94fc:	add	x2, x2, #0x1
    9500:	adds	w9, w9, #0x8
    9504:	lsr	x8, x8, #8
    9508:	b.ne	94f8 <inflateSync@@Base+0xa0>  // b.any
    950c:	str	x8, [x20, #80]
    9510:	str	wzr, [x20, #88]
    9514:	b	951c <inflateSync@@Base+0xc4>
    9518:	mov	w2, wzr
    951c:	mov	x0, x20
    9520:	str	wzr, [x0, #140]!
    9524:	sub	x1, x29, #0x4
    9528:	bl	959c <inflateSync@@Base+0x144>
    952c:	ldr	x1, [x19]
    9530:	ldr	w2, [x19, #8]
    9534:	add	x0, x20, #0x8c
    9538:	bl	959c <inflateSync@@Base+0x144>
    953c:	ldr	w8, [x19, #8]
    9540:	ldr	x9, [x19]
    9544:	ldr	x10, [x19, #16]
    9548:	mov	w11, w0
    954c:	sub	w8, w8, w0
    9550:	add	x9, x9, x11
    9554:	add	x21, x10, x11
    9558:	str	w8, [x19, #8]
    955c:	str	x9, [x19]
    9560:	str	x21, [x19, #16]
    9564:	ldr	w8, [x20, #140]
    9568:	cmp	w8, #0x4
    956c:	b.ne	9594 <inflateSync@@Base+0x13c>  // b.any
    9570:	ldr	x22, [x19, #40]
    9574:	mov	x0, x19
    9578:	bl	2610 <inflateReset@plt>
    957c:	mov	w0, wzr
    9580:	mov	w8, #0x3f3f                	// #16191
    9584:	str	x21, [x19, #16]
    9588:	str	x22, [x19, #40]
    958c:	str	w8, [x20, #8]
    9590:	b	947c <inflateSync@@Base+0x24>
    9594:	mov	w0, #0xfffffffd            	// #-3
    9598:	b	947c <inflateSync@@Base+0x24>
    959c:	ldr	w9, [x0]
    95a0:	mov	w8, wzr
    95a4:	cmp	w9, #0x3
    95a8:	b.hi	95f4 <inflateSync@@Base+0x19c>  // b.pmore
    95ac:	cbz	w2, 95f4 <inflateSync@@Base+0x19c>
    95b0:	mov	x8, xzr
    95b4:	mov	w10, w2
    95b8:	mov	w11, #0xff                  	// #255
    95bc:	mov	w12, #0x4                   	// #4
    95c0:	ldrb	w13, [x1, x8]
    95c4:	cmp	w9, #0x2
    95c8:	sub	w14, w12, w9
    95cc:	csel	w15, wzr, w11, cc  // cc = lo, ul, last
    95d0:	cmp	w13, #0x0
    95d4:	csel	w14, w14, wzr, eq  // eq = none
    95d8:	cmp	w15, w13
    95dc:	csinc	w9, w14, w9, ne  // ne = any
    95e0:	cmp	w9, #0x3
    95e4:	add	x8, x8, #0x1
    95e8:	b.hi	95f4 <inflateSync@@Base+0x19c>  // b.pmore
    95ec:	cmp	x8, x10
    95f0:	b.cc	95c0 <inflateSync@@Base+0x168>  // b.lo, b.ul, b.last
    95f4:	str	w9, [x0]
    95f8:	mov	w0, w8
    95fc:	ret

0000000000009600 <inflateSyncPoint@@Base>:
    9600:	stp	x29, x30, [sp, #-32]!
    9604:	str	x19, [sp, #16]
    9608:	mov	x29, sp
    960c:	mov	x19, x0
    9610:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    9614:	cbz	w0, 9620 <inflateSyncPoint@@Base+0x20>
    9618:	mov	w0, #0xfffffffe            	// #-2
    961c:	b	9648 <inflateSyncPoint@@Base+0x48>
    9620:	ldr	x8, [x19, #56]
    9624:	mov	w10, #0x3f41                	// #16193
    9628:	ldr	w9, [x8, #8]
    962c:	cmp	w9, w10
    9630:	b.ne	9644 <inflateSyncPoint@@Base+0x44>  // b.any
    9634:	ldr	w8, [x8, #88]
    9638:	cmp	w8, #0x0
    963c:	cset	w0, eq  // eq = none
    9640:	b	9648 <inflateSyncPoint@@Base+0x48>
    9644:	mov	w0, wzr
    9648:	ldr	x19, [sp, #16]
    964c:	ldp	x29, x30, [sp], #32
    9650:	ret

0000000000009654 <inflateCopy@@ZLIB_1.2.0>:
    9654:	stp	x29, x30, [sp, #-64]!
    9658:	stp	x20, x19, [sp, #48]
    965c:	mov	x19, x0
    9660:	mov	x0, x1
    9664:	str	x23, [sp, #16]
    9668:	stp	x22, x21, [sp, #32]
    966c:	mov	x29, sp
    9670:	mov	x23, x1
    9674:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    9678:	mov	w8, w0
    967c:	mov	w0, #0xfffffffe            	// #-2
    9680:	cbz	x19, 9794 <inflateCopy@@ZLIB_1.2.0+0x140>
    9684:	cbnz	w8, 9794 <inflateCopy@@ZLIB_1.2.0+0x140>
    9688:	ldp	x21, x8, [x23, #56]
    968c:	ldr	x0, [x23, #80]
    9690:	mov	w1, #0x1                   	// #1
    9694:	mov	w2, #0x1bf8                	// #7160
    9698:	blr	x8
    969c:	cbz	x0, 96dc <inflateCopy@@ZLIB_1.2.0+0x88>
    96a0:	ldr	x8, [x21, #72]
    96a4:	mov	x20, x0
    96a8:	cbz	x8, 96e4 <inflateCopy@@ZLIB_1.2.0+0x90>
    96ac:	ldr	w9, [x21, #56]
    96b0:	ldr	x8, [x23, #64]
    96b4:	ldr	x0, [x23, #80]
    96b8:	mov	w10, #0x1                   	// #1
    96bc:	lsl	w1, w10, w9
    96c0:	mov	w2, #0x1                   	// #1
    96c4:	blr	x8
    96c8:	mov	x22, x0
    96cc:	cbnz	x0, 96e8 <inflateCopy@@ZLIB_1.2.0+0x94>
    96d0:	ldp	x8, x0, [x23, #72]
    96d4:	mov	x1, x20
    96d8:	blr	x8
    96dc:	mov	w0, #0xfffffffc            	// #-4
    96e0:	b	9794 <inflateCopy@@ZLIB_1.2.0+0x140>
    96e4:	mov	x22, xzr
    96e8:	ldp	q1, q0, [x23, #16]
    96ec:	ldr	q2, [x23]
    96f0:	mov	w2, #0x1bf8                	// #7160
    96f4:	mov	x0, x20
    96f8:	stp	q1, q0, [x19, #16]
    96fc:	str	q2, [x19]
    9700:	ldp	q1, q0, [x23, #80]
    9704:	ldp	q3, q2, [x23, #48]
    9708:	mov	x1, x21
    970c:	stp	q1, q0, [x19, #80]
    9710:	stp	q3, q2, [x19, #48]
    9714:	bl	23a0 <memcpy@plt>
    9718:	str	x19, [x20]
    971c:	ldr	x10, [x21, #104]
    9720:	add	x8, x21, #0x558
    9724:	subs	x9, x10, x8
    9728:	b.cc	9758 <inflateCopy@@ZLIB_1.2.0+0x104>  // b.lo, b.ul, b.last
    972c:	mov	w11, #0x1be4                	// #7140
    9730:	add	x11, x21, x11
    9734:	cmp	x10, x11
    9738:	b.hi	9758 <inflateCopy@@ZLIB_1.2.0+0x104>  // b.pmore
    973c:	add	x10, x20, #0x558
    9740:	add	x9, x10, x9
    9744:	str	x9, [x20, #104]
    9748:	ldr	x9, [x21, #112]
    974c:	sub	x9, x9, x8
    9750:	add	x9, x10, x9
    9754:	str	x9, [x20, #112]
    9758:	ldr	x9, [x21, #144]
    975c:	sub	x8, x9, x8
    9760:	add	x8, x20, x8
    9764:	add	x8, x8, #0x558
    9768:	str	x8, [x20, #144]
    976c:	cbz	x22, 9788 <inflateCopy@@ZLIB_1.2.0+0x134>
    9770:	ldr	w8, [x21, #56]
    9774:	ldr	x1, [x21, #72]
    9778:	mov	w9, #0x1                   	// #1
    977c:	mov	x0, x22
    9780:	lsl	w2, w9, w8
    9784:	bl	23a0 <memcpy@plt>
    9788:	mov	w0, wzr
    978c:	str	x22, [x20, #72]
    9790:	str	x20, [x19, #56]
    9794:	ldp	x20, x19, [sp, #48]
    9798:	ldp	x22, x21, [sp, #32]
    979c:	ldr	x23, [sp, #16]
    97a0:	ldp	x29, x30, [sp], #64
    97a4:	ret

00000000000097a8 <inflateUndermine@@ZLIB_1.2.3.3>:
    97a8:	stp	x29, x30, [sp, #-32]!
    97ac:	str	x19, [sp, #16]
    97b0:	mov	x29, sp
    97b4:	mov	x19, x0
    97b8:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    97bc:	cbz	w0, 97c8 <inflateUndermine@@ZLIB_1.2.3.3+0x20>
    97c0:	mov	w0, #0xfffffffe            	// #-2
    97c4:	b	97d8 <inflateUndermine@@ZLIB_1.2.3.3+0x30>
    97c8:	ldr	x8, [x19, #56]
    97cc:	mov	w9, #0x1                   	// #1
    97d0:	mov	w0, #0xfffffffd            	// #-3
    97d4:	str	w9, [x8, #7144]
    97d8:	ldr	x19, [sp, #16]
    97dc:	ldp	x29, x30, [sp], #32
    97e0:	ret

00000000000097e4 <inflateValidate@@ZLIB_1.2.9>:
    97e4:	stp	x29, x30, [sp, #-32]!
    97e8:	stp	x20, x19, [sp, #16]
    97ec:	mov	x29, sp
    97f0:	mov	w19, w1
    97f4:	mov	x20, x0
    97f8:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    97fc:	cbz	w0, 9808 <inflateValidate@@ZLIB_1.2.9+0x24>
    9800:	mov	w0, #0xfffffffe            	// #-2
    9804:	b	9824 <inflateValidate@@ZLIB_1.2.9+0x40>
    9808:	ldr	x8, [x20, #56]
    980c:	cmp	w19, #0x0
    9810:	ldr	w9, [x8, #16]
    9814:	and	w10, w9, #0xfffffffb
    9818:	orr	w9, w9, #0x4
    981c:	csel	w9, w10, w9, eq  // eq = none
    9820:	str	w9, [x8, #16]
    9824:	ldp	x20, x19, [sp, #16]
    9828:	ldp	x29, x30, [sp], #32
    982c:	ret

0000000000009830 <inflateMark@@ZLIB_1.2.3.4>:
    9830:	stp	x29, x30, [sp, #-32]!
    9834:	str	x19, [sp, #16]
    9838:	mov	x29, sp
    983c:	mov	x19, x0
    9840:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    9844:	cbz	w0, 9850 <inflateMark@@ZLIB_1.2.3.4+0x20>
    9848:	mov	x0, #0xffffffffffff0000    	// #-65536
    984c:	b	9898 <inflateMark@@ZLIB_1.2.3.4+0x68>
    9850:	ldr	x9, [x19, #56]
    9854:	mov	w11, #0x3f4c                	// #16204
    9858:	ldr	w10, [x9, #8]
    985c:	ldrsw	x8, [x9, #7148]
    9860:	cmp	w10, w11
    9864:	lsl	x8, x8, #16
    9868:	b.eq	9880 <inflateMark@@ZLIB_1.2.3.4+0x50>  // b.none
    986c:	mov	w11, #0x3f43                	// #16195
    9870:	cmp	w10, w11
    9874:	b.ne	9890 <inflateMark@@ZLIB_1.2.3.4+0x60>  // b.any
    9878:	ldr	w9, [x9, #92]
    987c:	b	9894 <inflateMark@@ZLIB_1.2.3.4+0x64>
    9880:	ldr	w10, [x9, #7152]
    9884:	ldr	w9, [x9, #92]
    9888:	sub	w9, w10, w9
    988c:	b	9894 <inflateMark@@ZLIB_1.2.3.4+0x64>
    9890:	mov	w9, wzr
    9894:	add	x0, x8, w9, uxtw
    9898:	ldr	x19, [sp, #16]
    989c:	ldp	x29, x30, [sp], #32
    98a0:	ret

00000000000098a4 <inflateCodesUsed@@ZLIB_1.2.9>:
    98a4:	stp	x29, x30, [sp, #-32]!
    98a8:	str	x19, [sp, #16]
    98ac:	mov	x29, sp
    98b0:	mov	x19, x0
    98b4:	bl	75b0 <inflateResetKeep@@ZLIB_1.2.5.2+0x84>
    98b8:	cbz	w0, 98c4 <inflateCodesUsed@@ZLIB_1.2.9+0x20>
    98bc:	mov	x0, #0xffffffffffffffff    	// #-1
    98c0:	b	98d8 <inflateCodesUsed@@ZLIB_1.2.9+0x34>
    98c4:	ldr	x8, [x19, #56]
    98c8:	ldr	x9, [x8, #144]
    98cc:	sub	x8, x9, x8
    98d0:	sub	x8, x8, #0x558
    98d4:	asr	x0, x8, #2
    98d8:	ldr	x19, [sp, #16]
    98dc:	ldp	x29, x30, [sp], #32
    98e0:	ret
    98e4:	sub	sp, sp, #0x90
    98e8:	movi	v0.2d, #0x0
    98ec:	stp	x28, x27, [sp, #64]
    98f0:	stp	x26, x25, [sp, #80]
    98f4:	stp	x24, x23, [sp, #96]
    98f8:	stp	x22, x21, [sp, #112]
    98fc:	stp	x20, x19, [sp, #128]
    9900:	stp	q0, q0, [sp, #32]
    9904:	cbz	w2, 9930 <inflateCodesUsed@@ZLIB_1.2.9+0x8c>
    9908:	mov	w8, w2
    990c:	add	x9, sp, #0x20
    9910:	mov	x10, x1
    9914:	ldrh	w11, [x10], #2
    9918:	subs	x8, x8, #0x1
    991c:	lsl	x11, x11, #1
    9920:	ldrh	w12, [x9, x11]
    9924:	add	w12, w12, #0x1
    9928:	strh	w12, [x9, x11]
    992c:	b.ne	9914 <inflateCodesUsed@@ZLIB_1.2.9+0x70>  // b.any
    9930:	ldrh	w9, [sp, #62]
    9934:	ldr	w8, [x4]
    9938:	cbz	w9, 9948 <inflateCodesUsed@@ZLIB_1.2.9+0xa4>
    993c:	mov	w9, wzr
    9940:	mov	w10, #0xf                   	// #15
    9944:	b	996c <inflateCodesUsed@@ZLIB_1.2.9+0xc8>
    9948:	mov	w10, #0xe                   	// #14
    994c:	add	x11, sp, #0x20
    9950:	cmp	w10, #0x0
    9954:	cset	w9, eq  // eq = none
    9958:	cbz	w10, 996c <inflateCodesUsed@@ZLIB_1.2.9+0xc8>
    995c:	ldrh	w12, [x11, w10, uxtw #1]
    9960:	sub	w10, w10, #0x1
    9964:	cbz	w12, 9950 <inflateCodesUsed@@ZLIB_1.2.9+0xac>
    9968:	add	w10, w10, #0x1
    996c:	cmp	w8, w10
    9970:	csel	w8, w10, w8, hi  // hi = pmore
    9974:	tbz	w9, #0, 99ac <inflateCodesUsed@@ZLIB_1.2.9+0x108>
    9978:	ldr	x9, [x3]
    997c:	mov	w10, #0x140                 	// #320
    9980:	mov	w8, wzr
    9984:	add	x11, x9, #0x4
    9988:	str	x11, [x3]
    998c:	str	w10, [x9]
    9990:	ldr	x9, [x3]
    9994:	mov	w11, #0x1                   	// #1
    9998:	add	x12, x9, #0x4
    999c:	str	x12, [x3]
    99a0:	str	w10, [x9]
    99a4:	str	w11, [x4]
    99a8:	b	9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    99ac:	mov	w9, w10
    99b0:	mov	w10, #0x1                   	// #1
    99b4:	cmp	w9, #0x2
    99b8:	b.cc	99d8 <inflateCodesUsed@@ZLIB_1.2.9+0x134>  // b.lo, b.ul, b.last
    99bc:	add	x11, sp, #0x20
    99c0:	ldrh	w12, [x11, x10, lsl #1]
    99c4:	cbnz	w12, 99d8 <inflateCodesUsed@@ZLIB_1.2.9+0x134>
    99c8:	add	x10, x10, #0x1
    99cc:	cmp	w9, w10
    99d0:	b.ne	99c0 <inflateCodesUsed@@ZLIB_1.2.9+0x11c>  // b.any
    99d4:	mov	w10, w9
    99d8:	cmp	w8, w10
    99dc:	mov	w12, #0x1                   	// #1
    99e0:	mov	w13, #0x2                   	// #2
    99e4:	csel	w11, w10, w8, cc  // cc = lo, ul, last
    99e8:	add	x8, sp, #0x20
    99ec:	ldrh	w14, [x8, x13]
    99f0:	lsl	w12, w12, #1
    99f4:	subs	w12, w12, w14
    99f8:	b.mi	9a94 <inflateCodesUsed@@ZLIB_1.2.9+0x1f0>  // b.first
    99fc:	add	x13, x13, #0x2
    9a00:	cmp	w13, #0x20
    9a04:	b.ne	99ec <inflateCodesUsed@@ZLIB_1.2.9+0x148>  // b.any
    9a08:	cmp	w12, #0x1
    9a0c:	b.lt	9a20 <inflateCodesUsed@@ZLIB_1.2.9+0x17c>  // b.tstop
    9a10:	mov	w8, #0xffffffff            	// #-1
    9a14:	cbz	w0, 9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    9a18:	cmp	w9, #0x1
    9a1c:	b.ne	9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>  // b.any
    9a20:	add	x13, sp, #0x20
    9a24:	mov	x14, sp
    9a28:	mov	x8, xzr
    9a2c:	mov	w12, wzr
    9a30:	orr	x13, x13, #0x2
    9a34:	add	x14, x14, #0x4
    9a38:	strh	wzr, [sp, #2]
    9a3c:	ldrh	w15, [x13, x8]
    9a40:	add	w12, w15, w12
    9a44:	strh	w12, [x14, x8]
    9a48:	add	x8, x8, #0x2
    9a4c:	cmp	x8, #0x1c
    9a50:	b.ne	9a3c <inflateCodesUsed@@ZLIB_1.2.9+0x198>  // b.any
    9a54:	cbz	w2, 9a9c <inflateCodesUsed@@ZLIB_1.2.9+0x1f8>
    9a58:	mov	x8, xzr
    9a5c:	mov	w12, w2
    9a60:	mov	x13, sp
    9a64:	b	9a74 <inflateCodesUsed@@ZLIB_1.2.9+0x1d0>
    9a68:	add	x8, x8, #0x1
    9a6c:	cmp	x12, x8
    9a70:	b.eq	9a9c <inflateCodesUsed@@ZLIB_1.2.9+0x1f8>  // b.none
    9a74:	ldrh	w14, [x1, x8, lsl #1]
    9a78:	cbz	x14, 9a68 <inflateCodesUsed@@ZLIB_1.2.9+0x1c4>
    9a7c:	lsl	x14, x14, #1
    9a80:	ldrh	w15, [x13, x14]
    9a84:	add	w16, w15, #0x1
    9a88:	strh	w16, [x13, x14]
    9a8c:	strh	w8, [x5, x15, lsl #1]
    9a90:	b	9a68 <inflateCodesUsed@@ZLIB_1.2.9+0x1c4>
    9a94:	mov	w8, #0xffffffff            	// #-1
    9a98:	b	9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    9a9c:	cbz	w0, 9ac0 <inflateCodesUsed@@ZLIB_1.2.9+0x21c>
    9aa0:	cmp	w0, #0x1
    9aa4:	b.ne	9ad0 <inflateCodesUsed@@ZLIB_1.2.9+0x22c>  // b.any
    9aa8:	adrp	x13, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    9aac:	adrp	x14, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    9ab0:	mov	w12, #0x101                 	// #257
    9ab4:	add	x13, x13, #0xd42
    9ab8:	add	x14, x14, #0xd04
    9abc:	b	9ae4 <inflateCodesUsed@@ZLIB_1.2.9+0x240>
    9ac0:	mov	w12, #0x14                  	// #20
    9ac4:	mov	x14, x5
    9ac8:	mov	x13, x5
    9acc:	b	9ae4 <inflateCodesUsed@@ZLIB_1.2.9+0x240>
    9ad0:	adrp	x13, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    9ad4:	adrp	x14, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    9ad8:	mov	w12, wzr
    9adc:	add	x13, x13, #0xdc0
    9ae0:	add	x14, x14, #0xd80
    9ae4:	cmp	w0, #0x1
    9ae8:	mov	w15, #0x1                   	// #1
    9aec:	b.ne	9afc <inflateCodesUsed@@ZLIB_1.2.9+0x258>  // b.any
    9af0:	cmp	w11, #0x9
    9af4:	mov	w8, #0x1                   	// #1
    9af8:	b.hi	9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>  // b.pmore
    9afc:	cmp	w0, #0x2
    9b00:	mov	w16, #0x1                   	// #1
    9b04:	b.ne	9b34 <inflateCodesUsed@@ZLIB_1.2.9+0x290>  // b.any
    9b08:	cmp	w11, #0x9
    9b0c:	mov	w8, #0x1                   	// #1
    9b10:	b.ls	9b34 <inflateCodesUsed@@ZLIB_1.2.9+0x290>  // b.plast
    9b14:	ldp	x20, x19, [sp, #128]
    9b18:	ldp	x22, x21, [sp, #112]
    9b1c:	ldp	x24, x23, [sp, #96]
    9b20:	ldp	x26, x25, [sp, #80]
    9b24:	ldp	x28, x27, [sp, #64]
    9b28:	mov	w0, w8
    9b2c:	add	sp, sp, #0x90
    9b30:	ret
    9b34:	ldr	x17, [x3]
    9b38:	lsl	w15, w15, w11
    9b3c:	mov	w18, wzr
    9b40:	mov	w6, wzr
    9b44:	mov	w2, wzr
    9b48:	sub	w7, w15, #0x1
    9b4c:	mov	w8, #0xffffffff            	// #-1
    9b50:	add	x19, sp, #0x20
    9b54:	mov	w20, w11
    9b58:	ldrh	w23, [x5, w18, uxtw #1]
    9b5c:	sub	w22, w10, w6
    9b60:	add	w21, w23, #0x1
    9b64:	cmp	w21, w12
    9b68:	b.cs	9b74 <inflateCodesUsed@@ZLIB_1.2.9+0x2d0>  // b.hs, b.nlast
    9b6c:	mov	w24, wzr
    9b70:	b	9b98 <inflateCodesUsed@@ZLIB_1.2.9+0x2f4>
    9b74:	cmp	w12, w23
    9b78:	b.ls	9b88 <inflateCodesUsed@@ZLIB_1.2.9+0x2e4>  // b.plast
    9b7c:	mov	w23, wzr
    9b80:	mov	w24, #0x60                  	// #96
    9b84:	b	9b98 <inflateCodesUsed@@ZLIB_1.2.9+0x2f4>
    9b88:	sub	w21, w23, w12
    9b8c:	lsl	x21, x21, #1
    9b90:	ldrb	w24, [x13, x21]
    9b94:	ldrh	w23, [x14, x21]
    9b98:	lsl	w25, w16, w22
    9b9c:	lsl	w21, w16, w20
    9ba0:	lsr	w26, w2, w6
    9ba4:	sub	w26, w26, w25
    9ba8:	mov	w27, w21
    9bac:	add	w28, w26, w27
    9bb0:	subs	w27, w27, w25
    9bb4:	add	x28, x17, w28, uxtw #2
    9bb8:	strb	w24, [x28]
    9bbc:	strb	w22, [x28, #1]
    9bc0:	strh	w23, [x28, #2]
    9bc4:	b.ne	9bac <inflateCodesUsed@@ZLIB_1.2.9+0x308>  // b.any
    9bc8:	sub	w23, w10, #0x1
    9bcc:	lsl	w24, w16, w23
    9bd0:	mov	w23, w24
    9bd4:	tst	w24, w2
    9bd8:	lsr	w24, w24, #1
    9bdc:	b.ne	9bd0 <inflateCodesUsed@@ZLIB_1.2.9+0x32c>  // b.any
    9be0:	sub	w24, w23, #0x1
    9be4:	mov	w25, w10
    9be8:	and	w2, w24, w2
    9bec:	lsl	x24, x25, #1
    9bf0:	ldrh	w25, [x19, x24]
    9bf4:	add	w2, w2, w23
    9bf8:	cmp	w23, #0x0
    9bfc:	csel	w2, wzr, w2, eq  // eq = none
    9c00:	sub	w23, w25, #0x1
    9c04:	add	w18, w18, #0x1
    9c08:	tst	w23, #0xffff
    9c0c:	strh	w23, [x19, x24]
    9c10:	b.eq	9c20 <inflateCodesUsed@@ZLIB_1.2.9+0x37c>  // b.none
    9c14:	cmp	w10, w11
    9c18:	b.ls	9b58 <inflateCodesUsed@@ZLIB_1.2.9+0x2b4>  // b.plast
    9c1c:	b	9c38 <inflateCodesUsed@@ZLIB_1.2.9+0x394>
    9c20:	cmp	w10, w9
    9c24:	b.eq	9cf0 <inflateCodesUsed@@ZLIB_1.2.9+0x44c>  // b.none
    9c28:	ldrh	w10, [x5, w18, uxtw #1]
    9c2c:	ldrh	w10, [x1, x10, lsl #1]
    9c30:	cmp	w10, w11
    9c34:	b.ls	9b58 <inflateCodesUsed@@ZLIB_1.2.9+0x2b4>  // b.plast
    9c38:	and	w22, w2, w7
    9c3c:	cmp	w22, w8
    9c40:	b.eq	9b58 <inflateCodesUsed@@ZLIB_1.2.9+0x2b4>  // b.none
    9c44:	cmp	w6, #0x0
    9c48:	csel	w6, w11, w6, eq  // eq = none
    9c4c:	cmp	w10, w9
    9c50:	sub	w20, w10, w6
    9c54:	b.cs	9c8c <inflateCodesUsed@@ZLIB_1.2.9+0x3e8>  // b.hs, b.nlast
    9c58:	lsl	w23, w16, w20
    9c5c:	sub	w20, w9, w6
    9c60:	mov	w8, w10
    9c64:	ldrh	w24, [x19, x8, lsl #1]
    9c68:	sub	w23, w23, w24
    9c6c:	cmp	w23, #0x1
    9c70:	b.lt	9c88 <inflateCodesUsed@@ZLIB_1.2.9+0x3e4>  // b.tstop
    9c74:	add	x8, x8, #0x1
    9c78:	cmp	w8, w9
    9c7c:	lsl	w23, w23, #1
    9c80:	b.cc	9c64 <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>  // b.lo, b.ul, b.last
    9c84:	b	9c8c <inflateCodesUsed@@ZLIB_1.2.9+0x3e8>
    9c88:	sub	w20, w8, w6
    9c8c:	mov	w8, #0x1                   	// #1
    9c90:	cmp	w0, #0x2
    9c94:	lsl	w24, w8, w20
    9c98:	cset	w23, eq  // eq = none
    9c9c:	cmp	w0, #0x1
    9ca0:	add	w15, w24, w15
    9ca4:	cset	w25, eq  // eq = none
    9ca8:	cmp	w15, #0x354
    9cac:	cset	w24, hi  // hi = pmore
    9cb0:	cmp	w15, #0x250
    9cb4:	and	w25, w25, w24
    9cb8:	cset	w24, hi  // hi = pmore
    9cbc:	tbnz	w25, #0, 9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    9cc0:	and	w23, w23, w24
    9cc4:	tbnz	w23, #0, 9b14 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    9cc8:	ldr	x8, [x3]
    9ccc:	add	x17, x17, w21, uxtw #2
    9cd0:	add	x21, x8, w22, uxtw #2
    9cd4:	sub	w8, w17, w8
    9cd8:	lsr	w8, w8, #2
    9cdc:	strb	w20, [x21]
    9ce0:	strb	w11, [x21, #1]
    9ce4:	strh	w8, [x21, #2]
    9ce8:	mov	w8, w22
    9cec:	b	9b58 <inflateCodesUsed@@ZLIB_1.2.9+0x2b4>
    9cf0:	cbz	w2, 9d08 <inflateCodesUsed@@ZLIB_1.2.9+0x464>
    9cf4:	add	x8, x17, w2, uxtw #2
    9cf8:	mov	w9, #0x40                  	// #64
    9cfc:	strb	w9, [x8]
    9d00:	strb	w22, [x8, #1]
    9d04:	strh	wzr, [x8, #2]
    9d08:	ldr	x9, [x3]
    9d0c:	mov	w8, wzr
    9d10:	add	x9, x9, w15, uxtw #2
    9d14:	str	x9, [x3]
    9d18:	b	99a4 <inflateCodesUsed@@ZLIB_1.2.9+0x100>
    9d1c:	stp	x29, x30, [sp, #-16]!
    9d20:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    9d24:	adrp	x11, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    9d28:	adrp	x13, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    9d2c:	add	x8, x0, #0xd4
    9d30:	add	x9, x9, #0xd08
    9d34:	add	x10, x0, #0x9c8
    9d38:	add	x11, x11, #0xd28
    9d3c:	add	x12, x0, #0xabc
    9d40:	add	x13, x13, #0xd48
    9d44:	mov	x29, sp
    9d48:	strh	wzr, [x0, #5936]
    9d4c:	str	x8, [x0, #2904]
    9d50:	str	x9, [x0, #2920]
    9d54:	str	x10, [x0, #2928]
    9d58:	str	x11, [x0, #2944]
    9d5c:	str	x12, [x0, #2952]
    9d60:	str	x13, [x0, #2968]
    9d64:	str	wzr, [x0, #5940]
    9d68:	bl	9d74 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    9d6c:	ldp	x29, x30, [sp], #16
    9d70:	ret
    9d74:	mov	w8, #0xd4                  	// #212
    9d78:	strh	wzr, [x0, x8]
    9d7c:	add	x8, x8, #0x4
    9d80:	cmp	x8, #0x54c
    9d84:	b.ne	9d78 <inflateCodesUsed@@ZLIB_1.2.9+0x4d4>  // b.any
    9d88:	mov	x8, xzr
    9d8c:	add	x9, x0, #0x9c8
    9d90:	strh	wzr, [x9, x8]
    9d94:	add	x8, x8, #0x4
    9d98:	cmp	x8, #0x78
    9d9c:	b.ne	9d90 <inflateCodesUsed@@ZLIB_1.2.9+0x4ec>  // b.any
    9da0:	mov	x8, xzr
    9da4:	add	x9, x0, #0xabc
    9da8:	strh	wzr, [x9, x8]
    9dac:	add	x8, x8, #0x4
    9db0:	cmp	x8, #0x4c
    9db4:	b.ne	9da8 <inflateCodesUsed@@ZLIB_1.2.9+0x504>  // b.any
    9db8:	mov	w8, #0x1                   	// #1
    9dbc:	movi	v0.2d, #0x0
    9dc0:	mov	w9, #0x1718                	// #5912
    9dc4:	str	wzr, [x0, #5900]
    9dc8:	strh	w8, [x0, #1236]
    9dcc:	str	q0, [x0, x9]
    9dd0:	str	wzr, [x0, #5928]
    9dd4:	ret
    9dd8:	stp	x29, x30, [sp, #-48]!
    9ddc:	stp	x20, x19, [sp, #32]
    9de0:	ldr	w10, [x0, #5940]
    9de4:	ldrh	w9, [x0, #5936]
    9de8:	and	w8, w3, #0xffff
    9dec:	str	x21, [sp, #16]
    9df0:	lsl	w11, w8, w10
    9df4:	mov	x19, x2
    9df8:	mov	x21, x1
    9dfc:	mov	x20, x0
    9e00:	orr	w9, w9, w11
    9e04:	cmp	w10, #0xe
    9e08:	mov	x29, sp
    9e0c:	strh	w9, [x0, #5936]
    9e10:	b.lt	9e64 <inflateCodesUsed@@ZLIB_1.2.9+0x5c0>  // b.tstop
    9e14:	ldr	x10, [x20, #40]
    9e18:	ldr	x11, [x20, #16]
    9e1c:	add	x12, x10, #0x1
    9e20:	str	x12, [x20, #40]
    9e24:	mov	w12, #0x1730                	// #5936
    9e28:	strb	w9, [x11, x10]
    9e2c:	add	x12, x20, x12
    9e30:	ldr	x9, [x20, #40]
    9e34:	ldrb	w10, [x12, #1]
    9e38:	ldr	x11, [x20, #16]
    9e3c:	add	x12, x9, #0x1
    9e40:	str	x12, [x20, #40]
    9e44:	strb	w10, [x11, x9]
    9e48:	ldr	w9, [x20, #5940]
    9e4c:	mov	w10, #0x10                  	// #16
    9e50:	sub	w10, w10, w9
    9e54:	lsr	w8, w8, w10
    9e58:	strh	w8, [x20, #5936]
    9e5c:	sub	w8, w9, #0xd
    9e60:	b	9e68 <inflateCodesUsed@@ZLIB_1.2.9+0x5c4>
    9e64:	add	w8, w10, #0x3
    9e68:	mov	x0, x20
    9e6c:	str	w8, [x20, #5940]
    9e70:	bl	9f04 <inflateCodesUsed@@ZLIB_1.2.9+0x660>
    9e74:	ldr	x8, [x20, #40]
    9e78:	ldr	x9, [x20, #16]
    9e7c:	mov	x1, x21
    9e80:	mov	x2, x19
    9e84:	add	x10, x8, #0x1
    9e88:	str	x10, [x20, #40]
    9e8c:	strb	w19, [x9, x8]
    9e90:	ldr	x8, [x20, #40]
    9e94:	ldr	x9, [x20, #16]
    9e98:	ubfx	x10, x19, #8, #24
    9e9c:	add	x11, x8, #0x1
    9ea0:	str	x11, [x20, #40]
    9ea4:	strb	w10, [x9, x8]
    9ea8:	ldr	x8, [x20, #40]
    9eac:	ldr	x9, [x20, #16]
    9eb0:	mvn	w10, w19
    9eb4:	add	x11, x8, #0x1
    9eb8:	str	x11, [x20, #40]
    9ebc:	strb	w10, [x9, x8]
    9ec0:	ldr	x8, [x20, #40]
    9ec4:	ldr	x9, [x20, #16]
    9ec8:	lsr	w10, w10, #8
    9ecc:	add	x11, x8, #0x1
    9ed0:	str	x11, [x20, #40]
    9ed4:	strb	w10, [x9, x8]
    9ed8:	ldr	x8, [x20, #16]
    9edc:	ldr	x9, [x20, #40]
    9ee0:	add	x0, x8, x9
    9ee4:	bl	23a0 <memcpy@plt>
    9ee8:	ldr	x8, [x20, #40]
    9eec:	ldr	x21, [sp, #16]
    9ef0:	add	x8, x8, x19
    9ef4:	str	x8, [x20, #40]
    9ef8:	ldp	x20, x19, [sp, #32]
    9efc:	ldp	x29, x30, [sp], #48
    9f00:	ret
    9f04:	ldr	w8, [x0, #5940]
    9f08:	cmp	w8, #0x9
    9f0c:	b.lt	9f40 <inflateCodesUsed@@ZLIB_1.2.9+0x69c>  // b.tstop
    9f10:	mov	w8, #0x1730                	// #5936
    9f14:	ldr	x10, [x0, #40]
    9f18:	add	x8, x0, x8
    9f1c:	ldr	x9, [x0, #16]
    9f20:	ldrb	w11, [x8]
    9f24:	add	x12, x10, #0x1
    9f28:	str	x12, [x0, #40]
    9f2c:	strb	w11, [x9, x10]
    9f30:	ldr	x9, [x0, #40]
    9f34:	ldr	x10, [x0, #16]
    9f38:	ldrb	w8, [x8, #1]
    9f3c:	b	9f58 <inflateCodesUsed@@ZLIB_1.2.9+0x6b4>
    9f40:	cmp	w8, #0x1
    9f44:	b.lt	9f68 <inflateCodesUsed@@ZLIB_1.2.9+0x6c4>  // b.tstop
    9f48:	mov	w8, #0x1730                	// #5936
    9f4c:	ldr	x9, [x0, #40]
    9f50:	ldr	x10, [x0, #16]
    9f54:	ldrb	w8, [x0, x8]
    9f58:	add	x11, x9, #0x1
    9f5c:	add	x9, x10, x9
    9f60:	str	x11, [x0, #40]
    9f64:	strb	w8, [x9]
    9f68:	strh	wzr, [x0, #5936]
    9f6c:	str	wzr, [x0, #5940]
    9f70:	ret
    9f74:	stp	x29, x30, [sp, #-16]!
    9f78:	mov	x29, sp
    9f7c:	bl	9f88 <inflateCodesUsed@@ZLIB_1.2.9+0x6e4>
    9f80:	ldp	x29, x30, [sp], #16
    9f84:	ret
    9f88:	ldr	w8, [x0, #5940]
    9f8c:	cmp	w8, #0x10
    9f90:	b.ne	9fd8 <inflateCodesUsed@@ZLIB_1.2.9+0x734>  // b.any
    9f94:	mov	w9, #0x1730                	// #5936
    9f98:	ldr	x11, [x0, #40]
    9f9c:	add	x9, x0, x9
    9fa0:	ldr	x10, [x0, #16]
    9fa4:	ldrb	w12, [x9]
    9fa8:	add	x13, x11, #0x1
    9fac:	str	x13, [x0, #40]
    9fb0:	mov	w8, wzr
    9fb4:	strb	w12, [x10, x11]
    9fb8:	ldr	x10, [x0, #40]
    9fbc:	ldrb	w9, [x9, #1]
    9fc0:	ldr	x11, [x0, #16]
    9fc4:	add	x12, x10, #0x1
    9fc8:	str	x12, [x0, #40]
    9fcc:	strb	w9, [x11, x10]
    9fd0:	strh	wzr, [x0, #5936]
    9fd4:	b	a010 <inflateCodesUsed@@ZLIB_1.2.9+0x76c>
    9fd8:	cmp	w8, #0x8
    9fdc:	b.lt	a014 <inflateCodesUsed@@ZLIB_1.2.9+0x770>  // b.tstop
    9fe0:	mov	w8, #0x1730                	// #5936
    9fe4:	ldr	x10, [x0, #40]
    9fe8:	add	x8, x0, x8
    9fec:	ldr	x9, [x0, #16]
    9ff0:	ldrb	w11, [x8]
    9ff4:	add	x12, x10, #0x1
    9ff8:	str	x12, [x0, #40]
    9ffc:	strb	w11, [x9, x10]
    a000:	ldrb	w8, [x8, #1]
    a004:	ldr	w9, [x0, #5940]
    a008:	strh	w8, [x0, #5936]
    a00c:	sub	w8, w9, #0x8
    a010:	str	w8, [x0, #5940]
    a014:	ret
    a018:	stp	x29, x30, [sp, #-16]!
    a01c:	ldr	w10, [x0, #5940]
    a020:	ldrh	w9, [x0, #5936]
    a024:	mov	w8, #0x2                   	// #2
    a028:	mov	x29, sp
    a02c:	lsl	w11, w8, w10
    a030:	orr	w9, w9, w11
    a034:	cmp	w10, #0xe
    a038:	strh	w9, [x0, #5936]
    a03c:	b.lt	a090 <inflateCodesUsed@@ZLIB_1.2.9+0x7ec>  // b.tstop
    a040:	ldr	x10, [x0, #40]
    a044:	ldr	x11, [x0, #16]
    a048:	add	x12, x10, #0x1
    a04c:	str	x12, [x0, #40]
    a050:	mov	w12, #0x1730                	// #5936
    a054:	strb	w9, [x11, x10]
    a058:	add	x12, x0, x12
    a05c:	ldr	x9, [x0, #40]
    a060:	ldrb	w10, [x12, #1]
    a064:	ldr	x11, [x0, #16]
    a068:	add	x12, x9, #0x1
    a06c:	str	x12, [x0, #40]
    a070:	strb	w10, [x11, x9]
    a074:	ldr	w9, [x0, #5940]
    a078:	mov	w10, #0x10                  	// #16
    a07c:	sub	w10, w10, w9
    a080:	lsr	w8, w8, w10
    a084:	strh	w8, [x0, #5936]
    a088:	sub	w8, w9, #0xd
    a08c:	b	a094 <inflateCodesUsed@@ZLIB_1.2.9+0x7f0>
    a090:	add	w8, w10, #0x3
    a094:	cmp	w8, #0xa
    a098:	str	w8, [x0, #5940]
    a09c:	b.lt	a0e8 <inflateCodesUsed@@ZLIB_1.2.9+0x844>  // b.tstop
    a0a0:	mov	w8, #0x1730                	// #5936
    a0a4:	ldr	x10, [x0, #40]
    a0a8:	add	x8, x0, x8
    a0ac:	ldr	x9, [x0, #16]
    a0b0:	ldrb	w11, [x8]
    a0b4:	add	x12, x10, #0x1
    a0b8:	str	x12, [x0, #40]
    a0bc:	strb	w11, [x9, x10]
    a0c0:	ldr	x9, [x0, #40]
    a0c4:	ldrb	w8, [x8, #1]
    a0c8:	ldr	x10, [x0, #16]
    a0cc:	add	x11, x9, #0x1
    a0d0:	str	x11, [x0, #40]
    a0d4:	strb	w8, [x10, x9]
    a0d8:	ldr	w8, [x0, #5940]
    a0dc:	strh	wzr, [x0, #5936]
    a0e0:	sub	w8, w8, #0x9
    a0e4:	b	a0ec <inflateCodesUsed@@ZLIB_1.2.9+0x848>
    a0e8:	add	w8, w8, #0x7
    a0ec:	str	w8, [x0, #5940]
    a0f0:	bl	9f88 <inflateCodesUsed@@ZLIB_1.2.9+0x6e4>
    a0f4:	ldp	x29, x30, [sp], #16
    a0f8:	ret
    a0fc:	stp	x29, x30, [sp, #-64]!
    a100:	stp	x22, x21, [sp, #32]
    a104:	stp	x20, x19, [sp, #48]
    a108:	ldr	w8, [x0, #196]
    a10c:	mov	w20, w3
    a110:	mov	x21, x2
    a114:	mov	x19, x0
    a118:	cmp	w8, #0x1
    a11c:	mov	x22, x1
    a120:	str	x23, [sp, #16]
    a124:	mov	x29, sp
    a128:	b.lt	a194 <inflateCodesUsed@@ZLIB_1.2.9+0x8f0>  // b.tstop
    a12c:	ldr	x23, [x19]
    a130:	ldr	w8, [x23, #88]
    a134:	cmp	w8, #0x2
    a138:	b.ne	a148 <inflateCodesUsed@@ZLIB_1.2.9+0x8a4>  // b.any
    a13c:	mov	x0, x19
    a140:	bl	a334 <inflateCodesUsed@@ZLIB_1.2.9+0xa90>
    a144:	str	w0, [x23, #88]
    a148:	add	x1, x19, #0xb58
    a14c:	mov	x0, x19
    a150:	bl	a3b0 <inflateCodesUsed@@ZLIB_1.2.9+0xb0c>
    a154:	add	x1, x19, #0xb70
    a158:	mov	x0, x19
    a15c:	bl	a3b0 <inflateCodesUsed@@ZLIB_1.2.9+0xb0c>
    a160:	mov	x0, x19
    a164:	bl	a620 <inflateCodesUsed@@ZLIB_1.2.9+0xd7c>
    a168:	ldr	x8, [x19, #5912]
    a16c:	ldr	x9, [x19, #5920]
    a170:	add	w3, w0, #0x1
    a174:	add	x8, x8, #0xa
    a178:	add	x9, x9, #0xa
    a17c:	lsr	x8, x8, #3
    a180:	lsr	x9, x9, #3
    a184:	cmp	x9, x8
    a188:	csel	x10, x8, x9, hi  // hi = pmore
    a18c:	cbnz	x22, a1a4 <inflateCodesUsed@@ZLIB_1.2.9+0x900>
    a190:	b	a1c8 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    a194:	add	x9, x21, #0x5
    a198:	mov	w3, #0x1                   	// #1
    a19c:	mov	x10, x9
    a1a0:	cbz	x22, a1c8 <inflateCodesUsed@@ZLIB_1.2.9+0x924>
    a1a4:	add	x8, x21, #0x4
    a1a8:	cmp	x8, x10
    a1ac:	b.hi	a1c8 <inflateCodesUsed@@ZLIB_1.2.9+0x924>  // b.pmore
    a1b0:	mov	x0, x19
    a1b4:	mov	x1, x22
    a1b8:	mov	x2, x21
    a1bc:	mov	w3, w20
    a1c0:	bl	9dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x534>
    a1c4:	b	a30c <inflateCodesUsed@@ZLIB_1.2.9+0xa68>
    a1c8:	ldr	w8, [x19, #5940]
    a1cc:	cmp	x9, x10
    a1d0:	b.eq	a250 <inflateCodesUsed@@ZLIB_1.2.9+0x9ac>  // b.none
    a1d4:	ldr	w9, [x19, #200]
    a1d8:	cmp	w9, #0x4
    a1dc:	b.eq	a250 <inflateCodesUsed@@ZLIB_1.2.9+0x9ac>  // b.none
    a1e0:	ldrh	w10, [x19, #5936]
    a1e4:	add	w9, w20, #0x4
    a1e8:	and	w9, w9, #0xffff
    a1ec:	lsl	w11, w9, w8
    a1f0:	orr	w10, w10, w11
    a1f4:	cmp	w8, #0xe
    a1f8:	strh	w10, [x19, #5936]
    a1fc:	b.lt	a2c0 <inflateCodesUsed@@ZLIB_1.2.9+0xa1c>  // b.tstop
    a200:	ldr	x8, [x19, #40]
    a204:	ldr	x11, [x19, #16]
    a208:	add	x12, x8, #0x1
    a20c:	str	x12, [x19, #40]
    a210:	mov	w12, #0x1730                	// #5936
    a214:	strb	w10, [x11, x8]
    a218:	add	x12, x19, x12
    a21c:	ldr	x8, [x19, #40]
    a220:	ldrb	w10, [x12, #1]
    a224:	ldr	x11, [x19, #16]
    a228:	add	x12, x8, #0x1
    a22c:	str	x12, [x19, #40]
    a230:	strb	w10, [x11, x8]
    a234:	ldr	w8, [x19, #5940]
    a238:	mov	w10, #0x10                  	// #16
    a23c:	sub	w10, w10, w8
    a240:	lsr	w9, w9, w10
    a244:	strh	w9, [x19, #5936]
    a248:	sub	w8, w8, #0xd
    a24c:	b	a2c4 <inflateCodesUsed@@ZLIB_1.2.9+0xa20>
    a250:	ldrh	w10, [x19, #5936]
    a254:	add	w9, w20, #0x2
    a258:	and	w9, w9, #0xffff
    a25c:	lsl	w11, w9, w8
    a260:	orr	w10, w10, w11
    a264:	cmp	w8, #0xe
    a268:	strh	w10, [x19, #5936]
    a26c:	b.lt	a2ec <inflateCodesUsed@@ZLIB_1.2.9+0xa48>  // b.tstop
    a270:	ldr	x8, [x19, #40]
    a274:	ldr	x11, [x19, #16]
    a278:	add	x12, x8, #0x1
    a27c:	str	x12, [x19, #40]
    a280:	mov	w12, #0x1730                	// #5936
    a284:	strb	w10, [x11, x8]
    a288:	add	x12, x19, x12
    a28c:	ldr	x8, [x19, #40]
    a290:	ldrb	w10, [x12, #1]
    a294:	ldr	x11, [x19, #16]
    a298:	add	x12, x8, #0x1
    a29c:	str	x12, [x19, #40]
    a2a0:	strb	w10, [x11, x8]
    a2a4:	ldr	w8, [x19, #5940]
    a2a8:	mov	w10, #0x10                  	// #16
    a2ac:	sub	w10, w10, w8
    a2b0:	lsr	w9, w9, w10
    a2b4:	strh	w9, [x19, #5936]
    a2b8:	sub	w8, w8, #0xd
    a2bc:	b	a2f0 <inflateCodesUsed@@ZLIB_1.2.9+0xa4c>
    a2c0:	add	w8, w8, #0x3
    a2c4:	ldr	w9, [x19, #2912]
    a2c8:	ldr	w10, [x19, #2936]
    a2cc:	mov	x0, x19
    a2d0:	str	w8, [x19, #5940]
    a2d4:	add	w1, w9, #0x1
    a2d8:	add	w2, w10, #0x1
    a2dc:	bl	aa68 <inflateCodesUsed@@ZLIB_1.2.9+0x11c4>
    a2e0:	add	x1, x19, #0xd4
    a2e4:	add	x2, x19, #0x9c8
    a2e8:	b	a304 <inflateCodesUsed@@ZLIB_1.2.9+0xa60>
    a2ec:	add	w8, w8, #0x3
    a2f0:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a2f4:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a2f8:	str	w8, [x19, #5940]
    a2fc:	add	x1, x1, #0x100
    a300:	add	x2, x2, #0x580
    a304:	mov	x0, x19
    a308:	bl	a6a8 <inflateCodesUsed@@ZLIB_1.2.9+0xe04>
    a30c:	mov	x0, x19
    a310:	bl	9d74 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    a314:	cbz	w20, a320 <inflateCodesUsed@@ZLIB_1.2.9+0xa7c>
    a318:	mov	x0, x19
    a31c:	bl	9f04 <inflateCodesUsed@@ZLIB_1.2.9+0x660>
    a320:	ldp	x20, x19, [sp, #48]
    a324:	ldp	x22, x21, [sp, #32]
    a328:	ldr	x23, [sp, #16]
    a32c:	ldp	x29, x30, [sp], #64
    a330:	ret
    a334:	mov	w10, #0xc07f                	// #49279
    a338:	mov	x8, xzr
    a33c:	add	x9, x0, #0xd4
    a340:	movk	w10, #0xf3ff, lsl #16
    a344:	b	a358 <inflateCodesUsed@@ZLIB_1.2.9+0xab4>
    a348:	add	x8, x8, #0x4
    a34c:	cmp	x8, #0x80
    a350:	lsr	x10, x10, #1
    a354:	b.eq	a36c <inflateCodesUsed@@ZLIB_1.2.9+0xac8>  // b.none
    a358:	tbz	w10, #0, a348 <inflateCodesUsed@@ZLIB_1.2.9+0xaa4>
    a35c:	ldrh	w11, [x9, x8]
    a360:	cbz	w11, a348 <inflateCodesUsed@@ZLIB_1.2.9+0xaa4>
    a364:	mov	w0, wzr
    a368:	ret
    a36c:	ldrh	w8, [x0, #248]
    a370:	cbnz	w8, a384 <inflateCodesUsed@@ZLIB_1.2.9+0xae0>
    a374:	ldrh	w8, [x0, #252]
    a378:	cbnz	w8, a384 <inflateCodesUsed@@ZLIB_1.2.9+0xae0>
    a37c:	ldrh	w8, [x0, #264]
    a380:	cbz	w8, a38c <inflateCodesUsed@@ZLIB_1.2.9+0xae8>
    a384:	mov	w0, #0x1                   	// #1
    a388:	ret
    a38c:	mov	x8, xzr
    a390:	add	x9, x0, #0x154
    a394:	ldrh	w10, [x9, x8]
    a398:	cbnz	w10, a384 <inflateCodesUsed@@ZLIB_1.2.9+0xae0>
    a39c:	add	x8, x8, #0x4
    a3a0:	cmp	x8, #0x380
    a3a4:	mov	w0, wzr
    a3a8:	b.ne	a394 <inflateCodesUsed@@ZLIB_1.2.9+0xaf0>  // b.any
    a3ac:	b	a388 <inflateCodesUsed@@ZLIB_1.2.9+0xae4>
    a3b0:	stp	x29, x30, [sp, #-96]!
    a3b4:	stp	x28, x27, [sp, #16]
    a3b8:	stp	x26, x25, [sp, #32]
    a3bc:	stp	x24, x23, [sp, #48]
    a3c0:	stp	x22, x21, [sp, #64]
    a3c4:	stp	x20, x19, [sp, #80]
    a3c8:	ldr	x8, [x1, #16]
    a3cc:	ldr	x20, [x1]
    a3d0:	mov	x21, x1
    a3d4:	mov	x19, x0
    a3d8:	ldr	w24, [x8, #20]
    a3dc:	ldr	x8, [x8]
    a3e0:	mov	w9, #0x14b4                	// #5300
    a3e4:	mov	x10, #0x23d00000000         	// #2461016260608
    a3e8:	cmp	w24, #0x1
    a3ec:	mov	x29, sp
    a3f0:	str	x10, [x0, x9]
    a3f4:	b.lt	a44c <inflateCodesUsed@@ZLIB_1.2.9+0xba8>  // b.tstop
    a3f8:	mov	w9, #0x14bc                	// #5308
    a3fc:	mov	x10, xzr
    a400:	add	x11, x20, #0x2
    a404:	add	x12, x19, x9
    a408:	mov	w9, #0xffffffff            	// #-1
    a40c:	b	a424 <inflateCodesUsed@@ZLIB_1.2.9+0xb80>
    a410:	strh	wzr, [x11]
    a414:	add	x10, x10, #0x1
    a418:	cmp	x24, x10
    a41c:	add	x11, x11, #0x4
    a420:	b.eq	a450 <inflateCodesUsed@@ZLIB_1.2.9+0xbac>  // b.none
    a424:	ldurh	w13, [x11, #-2]
    a428:	cbz	w13, a410 <inflateCodesUsed@@ZLIB_1.2.9+0xb6c>
    a42c:	ldrsw	x9, [x19, #5300]
    a430:	add	x9, x9, #0x1
    a434:	str	w9, [x19, #5300]
    a438:	add	x9, x19, x9, lsl #2
    a43c:	str	w10, [x9, #3008]
    a440:	strb	wzr, [x12, x10]
    a444:	mov	w9, w10
    a448:	b	a414 <inflateCodesUsed@@ZLIB_1.2.9+0xb70>
    a44c:	mov	w9, #0xffffffff            	// #-1
    a450:	ldr	w12, [x19, #5300]
    a454:	cmp	w12, #0x1
    a458:	b.gt	a4d4 <inflateCodesUsed@@ZLIB_1.2.9+0xc30>
    a45c:	mov	w10, #0x1                   	// #1
    a460:	mov	w11, #0x14bc                	// #5308
    a464:	b	a478 <inflateCodesUsed@@ZLIB_1.2.9+0xbd4>
    a468:	ldr	w12, [x19, #5300]
    a46c:	mov	w9, w22
    a470:	cmp	w12, #0x2
    a474:	b.ge	a4d8 <inflateCodesUsed@@ZLIB_1.2.9+0xc34>  // b.tcont
    a478:	sxtw	x12, w12
    a47c:	cmp	w9, #0x2
    a480:	add	x12, x12, #0x1
    a484:	csinc	w13, wzr, w9, ge  // ge = tcont
    a488:	str	w12, [x19, #5300]
    a48c:	add	x12, x19, x12, lsl #2
    a490:	str	w13, [x12, #3008]
    a494:	sxtw	x12, w13
    a498:	sbfiz	x13, x13, #2, #32
    a49c:	strh	w10, [x20, x13]
    a4a0:	add	x13, x19, x12
    a4a4:	strb	wzr, [x13, x11]
    a4a8:	ldr	x13, [x19, #5912]
    a4ac:	cinc	w22, w9, lt  // lt = tstop
    a4b0:	sub	x9, x13, #0x1
    a4b4:	str	x9, [x19, #5912]
    a4b8:	cbz	x8, a468 <inflateCodesUsed@@ZLIB_1.2.9+0xbc4>
    a4bc:	add	x9, x8, x12, lsl #2
    a4c0:	ldrh	w9, [x9, #2]
    a4c4:	ldr	x12, [x19, #5920]
    a4c8:	sub	x9, x12, x9
    a4cc:	str	x9, [x19, #5920]
    a4d0:	b	a468 <inflateCodesUsed@@ZLIB_1.2.9+0xbc4>
    a4d4:	mov	w22, w9
    a4d8:	cmp	w12, #0x2
    a4dc:	str	w22, [x21, #8]
    a4e0:	b.lt	a508 <inflateCodesUsed@@ZLIB_1.2.9+0xc64>  // b.tstop
    a4e4:	cmp	w12, #0x0
    a4e8:	cinc	w8, w12, lt  // lt = tstop
    a4ec:	asr	w23, w8, #1
    a4f0:	mov	x0, x19
    a4f4:	mov	x1, x20
    a4f8:	mov	w2, w23
    a4fc:	bl	ad68 <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>
    a500:	subs	w23, w23, #0x1
    a504:	b.gt	a4f0 <inflateCodesUsed@@ZLIB_1.2.9+0xc4c>
    a508:	sxtw	x26, w24
    a50c:	mov	w23, #0x14bc                	// #5308
    a510:	lsl	x24, x26, #2
    a514:	add	x25, x19, x23
    a518:	ldrsw	x8, [x19, #5300]
    a51c:	add	x27, x19, #0xbc0
    a520:	ldrsw	x28, [x19, #3012]
    a524:	mov	w2, #0x1                   	// #1
    a528:	sub	w9, w8, #0x1
    a52c:	str	w9, [x19, #5300]
    a530:	ldr	w8, [x27, x8, lsl #2]
    a534:	mov	x0, x19
    a538:	mov	x1, x20
    a53c:	str	w8, [x19, #3012]
    a540:	bl	ad68 <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>
    a544:	ldrsw	x8, [x19, #5304]
    a548:	ldrsw	x9, [x19, #3012]
    a54c:	add	x10, x20, x28, lsl #2
    a550:	mov	w2, #0x1                   	// #1
    a554:	sub	x8, x8, #0x1
    a558:	str	w8, [x19, #5304]
    a55c:	str	w28, [x27, x8, lsl #2]
    a560:	ldrsw	x8, [x19, #5304]
    a564:	add	x11, x20, x9, lsl #2
    a568:	mov	x0, x19
    a56c:	mov	x1, x20
    a570:	sub	x8, x8, #0x1
    a574:	str	w8, [x19, #5304]
    a578:	str	w9, [x27, x8, lsl #2]
    a57c:	ldrh	w8, [x10]
    a580:	ldrh	w12, [x11]
    a584:	add	x27, x26, #0x1
    a588:	add	w8, w12, w8
    a58c:	add	x12, x19, x23
    a590:	strh	w8, [x20, x24]
    a594:	ldrb	w8, [x12, x28]
    a598:	ldrb	w9, [x12, x9]
    a59c:	cmp	w8, w9
    a5a0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
    a5a4:	add	w8, w8, #0x1
    a5a8:	strb	w8, [x25, x26]
    a5ac:	strh	w26, [x11, #2]
    a5b0:	strh	w26, [x10, #2]
    a5b4:	str	w26, [x19, #3012]
    a5b8:	bl	ad68 <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>
    a5bc:	ldr	w8, [x19, #5300]
    a5c0:	add	x24, x24, #0x4
    a5c4:	mov	x26, x27
    a5c8:	cmp	w8, #0x1
    a5cc:	b.gt	a518 <inflateCodesUsed@@ZLIB_1.2.9+0xc74>
    a5d0:	ldrsw	x8, [x19, #5304]
    a5d4:	ldr	w9, [x19, #3012]
    a5d8:	mov	x0, x19
    a5dc:	mov	x1, x21
    a5e0:	sub	x8, x8, #0x1
    a5e4:	add	x10, x19, x8, lsl #2
    a5e8:	str	w8, [x19, #5304]
    a5ec:	str	w9, [x10, #3008]
    a5f0:	bl	ae60 <inflateCodesUsed@@ZLIB_1.2.9+0x15bc>
    a5f4:	add	x2, x19, #0xba0
    a5f8:	mov	x0, x20
    a5fc:	mov	w1, w22
    a600:	bl	b028 <inflateCodesUsed@@ZLIB_1.2.9+0x1784>
    a604:	ldp	x20, x19, [sp, #80]
    a608:	ldp	x22, x21, [sp, #64]
    a60c:	ldp	x24, x23, [sp, #48]
    a610:	ldp	x26, x25, [sp, #32]
    a614:	ldp	x28, x27, [sp, #16]
    a618:	ldp	x29, x30, [sp], #96
    a61c:	ret
    a620:	stp	x29, x30, [sp, #-32]!
    a624:	ldr	w2, [x0, #2912]
    a628:	add	x1, x0, #0xd4
    a62c:	str	x19, [sp, #16]
    a630:	mov	x29, sp
    a634:	mov	x19, x0
    a638:	bl	b0ec <inflateCodesUsed@@ZLIB_1.2.9+0x1848>
    a63c:	ldr	w2, [x19, #2936]
    a640:	add	x1, x19, #0x9c8
    a644:	mov	x0, x19
    a648:	bl	b0ec <inflateCodesUsed@@ZLIB_1.2.9+0x1848>
    a64c:	add	x1, x19, #0xb88
    a650:	mov	x0, x19
    a654:	bl	a3b0 <inflateCodesUsed@@ZLIB_1.2.9+0xb0c>
    a658:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a65c:	mov	w0, #0x12                  	// #18
    a660:	add	x8, x8, #0x730
    a664:	ldrb	w9, [x8, x0]
    a668:	add	x9, x19, x9, lsl #2
    a66c:	ldrh	w9, [x9, #2750]
    a670:	cbnz	w9, a684 <inflateCodesUsed@@ZLIB_1.2.9+0xde0>
    a674:	cmp	x0, #0x3
    a678:	sub	x0, x0, #0x1
    a67c:	b.hi	a664 <inflateCodesUsed@@ZLIB_1.2.9+0xdc0>  // b.pmore
    a680:	mov	w0, #0x2                   	// #2
    a684:	ldr	x8, [x19, #5912]
    a688:	sxtw	x9, w0
    a68c:	add	x9, x9, w0, sxtw #1
    a690:	add	x8, x9, x8
    a694:	add	x8, x8, #0x11
    a698:	str	x8, [x19, #5912]
    a69c:	ldr	x19, [sp, #16]
    a6a0:	ldp	x29, x30, [sp], #32
    a6a4:	ret
    a6a8:	str	x21, [sp, #-32]!
    a6ac:	stp	x20, x19, [sp, #16]
    a6b0:	ldr	w8, [x0, #5900]
    a6b4:	cbz	w8, a9d8 <inflateCodesUsed@@ZLIB_1.2.9+0x1134>
    a6b8:	mov	w10, #0x1730                	// #5936
    a6bc:	adrp	x11, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a6c0:	adrp	x12, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a6c4:	adrp	x13, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a6c8:	adrp	x14, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    a6cc:	adrp	x15, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a6d0:	adrp	x17, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    a6d4:	mov	x8, xzr
    a6d8:	mov	w9, #0x10                  	// #16
    a6dc:	add	x11, x11, #0x0
    a6e0:	add	x12, x12, #0x5f8
    a6e4:	add	x13, x13, #0x744
    a6e8:	add	x14, x14, #0xe00
    a6ec:	add	x15, x15, #0x66c
    a6f0:	add	x16, x0, x10
    a6f4:	add	x17, x17, #0x7b8
    a6f8:	b	a710 <inflateCodesUsed@@ZLIB_1.2.9+0xe6c>
    a6fc:	add	w18, w4, w18
    a700:	str	w18, [x0, #5940]
    a704:	ldr	w18, [x0, #5900]
    a708:	cmp	x8, x18
    a70c:	b.cs	a9d8 <inflateCodesUsed@@ZLIB_1.2.9+0x1134>  // b.hs, b.nlast
    a710:	ldr	x18, [x0, #5904]
    a714:	ldr	x3, [x0, #5888]
    a718:	ldrh	w18, [x18, x8, lsl #1]
    a71c:	ldrb	w3, [x3, x8]
    a720:	add	x8, x8, #0x1
    a724:	cbz	w18, a7ac <inflateCodesUsed@@ZLIB_1.2.9+0xf08>
    a728:	ldrb	w4, [x11, x3]
    a72c:	mov	w5, #0x400                 	// #1024
    a730:	ldr	w19, [x0, #5940]
    a734:	ldrh	w7, [x0, #5936]
    a738:	bfi	x5, x4, #2, #8
    a73c:	add	x6, x5, x1
    a740:	ldrh	w5, [x6, #6]
    a744:	ldrh	w6, [x6, #4]
    a748:	sub	w20, w9, w5
    a74c:	lsl	w21, w6, w19
    a750:	orr	w7, w7, w21
    a754:	cmp	w19, w20
    a758:	strh	w7, [x0, #5936]
    a75c:	b.le	a820 <inflateCodesUsed@@ZLIB_1.2.9+0xf7c>
    a760:	ldr	x19, [x0, #40]
    a764:	ldr	x20, [x0, #16]
    a768:	add	x21, x19, #0x1
    a76c:	str	x21, [x0, #40]
    a770:	strb	w7, [x20, x19]
    a774:	add	x21, x0, x10
    a778:	ldr	x7, [x0, #40]
    a77c:	ldrb	w19, [x21, #1]
    a780:	ldr	x20, [x0, #16]
    a784:	add	x21, x7, #0x1
    a788:	str	x21, [x0, #40]
    a78c:	strb	w19, [x20, x7]
    a790:	ldr	w7, [x0, #5940]
    a794:	sub	w19, w9, w7
    a798:	add	w5, w5, w7
    a79c:	lsr	w6, w6, w19
    a7a0:	strh	w6, [x0, #5936]
    a7a4:	sub	w5, w5, #0x10
    a7a8:	b	a824 <inflateCodesUsed@@ZLIB_1.2.9+0xf80>
    a7ac:	add	x3, x1, x3, lsl #2
    a7b0:	ldr	w4, [x0, #5940]
    a7b4:	ldrh	w18, [x3, #2]
    a7b8:	ldrh	w3, [x3]
    a7bc:	ldrh	w5, [x0, #5936]
    a7c0:	sub	w6, w9, w18
    a7c4:	lsl	w7, w3, w4
    a7c8:	orr	w5, w5, w7
    a7cc:	cmp	w4, w6
    a7d0:	strh	w5, [x0, #5936]
    a7d4:	b.le	a6fc <inflateCodesUsed@@ZLIB_1.2.9+0xe58>
    a7d8:	ldr	x4, [x0, #40]
    a7dc:	ldr	x6, [x0, #16]
    a7e0:	add	x7, x4, #0x1
    a7e4:	str	x7, [x0, #40]
    a7e8:	strb	w5, [x6, x4]
    a7ec:	ldr	x4, [x0, #40]
    a7f0:	ldrb	w5, [x16, #1]
    a7f4:	ldr	x6, [x0, #16]
    a7f8:	add	x7, x4, #0x1
    a7fc:	str	x7, [x0, #40]
    a800:	strb	w5, [x6, x4]
    a804:	ldr	w4, [x0, #5940]
    a808:	sub	w5, w9, w4
    a80c:	add	w18, w18, w4
    a810:	lsr	w3, w3, w5
    a814:	sub	w18, w18, #0x10
    a818:	strh	w3, [x0, #5936]
    a81c:	b	a700 <inflateCodesUsed@@ZLIB_1.2.9+0xe5c>
    a820:	add	w5, w19, w5
    a824:	sub	x6, x4, #0x8
    a828:	cmp	x6, #0x13
    a82c:	str	w5, [x0, #5940]
    a830:	b.hi	a8b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1010>  // b.pmore
    a834:	ldr	w6, [x13, x4, lsl #2]
    a838:	ldr	w4, [x12, x4, lsl #2]
    a83c:	ldrh	w7, [x0, #5936]
    a840:	sub	w3, w3, w6
    a844:	and	w3, w3, #0xffff
    a848:	sub	w19, w9, w4
    a84c:	lsl	w6, w3, w5
    a850:	orr	w6, w7, w6
    a854:	cmp	w5, w19
    a858:	strh	w6, [x0, #5936]
    a85c:	b.le	a8ac <inflateCodesUsed@@ZLIB_1.2.9+0x1008>
    a860:	ldr	x5, [x0, #40]
    a864:	ldr	x7, [x0, #16]
    a868:	add	x19, x5, #0x1
    a86c:	str	x19, [x0, #40]
    a870:	strb	w6, [x7, x5]
    a874:	add	x19, x0, x10
    a878:	ldr	x5, [x0, #40]
    a87c:	ldrb	w6, [x19, #1]
    a880:	ldr	x7, [x0, #16]
    a884:	add	x19, x5, #0x1
    a888:	str	x19, [x0, #40]
    a88c:	strb	w6, [x7, x5]
    a890:	ldr	w5, [x0, #5940]
    a894:	sub	w6, w9, w5
    a898:	add	w4, w4, w5
    a89c:	lsr	w3, w3, w6
    a8a0:	strh	w3, [x0, #5936]
    a8a4:	sub	w3, w4, #0x10
    a8a8:	b	a8b0 <inflateCodesUsed@@ZLIB_1.2.9+0x100c>
    a8ac:	add	w3, w4, w5
    a8b0:	str	w3, [x0, #5940]
    a8b4:	sub	w18, w18, #0x1
    a8b8:	lsr	w3, w18, #7
    a8bc:	cmp	w18, #0x100
    a8c0:	add	w3, w3, #0x100
    a8c4:	csel	w3, w18, w3, cc  // cc = lo, ul, last
    a8c8:	ldrb	w3, [x14, w3, uxtw]
    a8cc:	ldr	w7, [x0, #5940]
    a8d0:	ldrh	w6, [x0, #5936]
    a8d4:	add	x5, x2, x3, lsl #2
    a8d8:	ldrh	w4, [x5, #2]
    a8dc:	ldrh	w5, [x5]
    a8e0:	sub	w19, w9, w4
    a8e4:	lsl	w20, w5, w7
    a8e8:	orr	w6, w6, w20
    a8ec:	cmp	w7, w19
    a8f0:	strh	w6, [x0, #5936]
    a8f4:	b.le	a944 <inflateCodesUsed@@ZLIB_1.2.9+0x10a0>
    a8f8:	ldr	x7, [x0, #40]
    a8fc:	ldr	x19, [x0, #16]
    a900:	add	x20, x7, #0x1
    a904:	str	x20, [x0, #40]
    a908:	strb	w6, [x19, x7]
    a90c:	add	x20, x0, x10
    a910:	ldr	x6, [x0, #40]
    a914:	ldrb	w7, [x20, #1]
    a918:	ldr	x19, [x0, #16]
    a91c:	add	x20, x6, #0x1
    a920:	str	x20, [x0, #40]
    a924:	strb	w7, [x19, x6]
    a928:	ldr	w6, [x0, #5940]
    a92c:	sub	w7, w9, w6
    a930:	add	w4, w4, w6
    a934:	lsr	w5, w5, w7
    a938:	strh	w5, [x0, #5936]
    a93c:	sub	w4, w4, #0x10
    a940:	b	a948 <inflateCodesUsed@@ZLIB_1.2.9+0x10a4>
    a944:	add	w4, w7, w4
    a948:	sub	x5, x3, #0x4
    a94c:	cmp	x5, #0x19
    a950:	str	w4, [x0, #5940]
    a954:	b.hi	a704 <inflateCodesUsed@@ZLIB_1.2.9+0xe60>  // b.pmore
    a958:	ldr	w5, [x17, x3, lsl #2]
    a95c:	ldr	w3, [x15, x3, lsl #2]
    a960:	ldrh	w6, [x0, #5936]
    a964:	sub	w18, w18, w5
    a968:	and	w18, w18, #0xffff
    a96c:	sub	w7, w9, w3
    a970:	lsl	w5, w18, w4
    a974:	orr	w5, w6, w5
    a978:	cmp	w4, w7
    a97c:	strh	w5, [x0, #5936]
    a980:	b.le	a9d0 <inflateCodesUsed@@ZLIB_1.2.9+0x112c>
    a984:	ldr	x4, [x0, #40]
    a988:	ldr	x6, [x0, #16]
    a98c:	add	x7, x4, #0x1
    a990:	str	x7, [x0, #40]
    a994:	strb	w5, [x6, x4]
    a998:	add	x7, x0, x10
    a99c:	ldr	x4, [x0, #40]
    a9a0:	ldrb	w5, [x7, #1]
    a9a4:	ldr	x6, [x0, #16]
    a9a8:	add	x7, x4, #0x1
    a9ac:	str	x7, [x0, #40]
    a9b0:	strb	w5, [x6, x4]
    a9b4:	ldr	w4, [x0, #5940]
    a9b8:	sub	w5, w9, w4
    a9bc:	add	w3, w3, w4
    a9c0:	lsr	w18, w18, w5
    a9c4:	strh	w18, [x0, #5936]
    a9c8:	sub	w18, w3, #0x10
    a9cc:	b	a700 <inflateCodesUsed@@ZLIB_1.2.9+0xe5c>
    a9d0:	add	w18, w3, w4
    a9d4:	b	a700 <inflateCodesUsed@@ZLIB_1.2.9+0xe5c>
    a9d8:	ldrh	w8, [x1, #1026]
    a9dc:	ldr	w11, [x0, #5940]
    a9e0:	ldrh	w9, [x1, #1024]
    a9e4:	ldrh	w12, [x0, #5936]
    a9e8:	mov	w10, #0x10                  	// #16
    a9ec:	sub	w13, w10, w8
    a9f0:	lsl	w14, w9, w11
    a9f4:	orr	w12, w12, w14
    a9f8:	cmp	w11, w13
    a9fc:	strh	w12, [x0, #5936]
    aa00:	b.le	aa54 <inflateCodesUsed@@ZLIB_1.2.9+0x11b0>
    aa04:	ldr	x11, [x0, #40]
    aa08:	ldr	x13, [x0, #16]
    aa0c:	add	x14, x11, #0x1
    aa10:	str	x14, [x0, #40]
    aa14:	mov	w14, #0x1730                	// #5936
    aa18:	strb	w12, [x13, x11]
    aa1c:	add	x14, x0, x14
    aa20:	ldr	x11, [x0, #40]
    aa24:	ldrb	w12, [x14, #1]
    aa28:	ldr	x13, [x0, #16]
    aa2c:	add	x14, x11, #0x1
    aa30:	str	x14, [x0, #40]
    aa34:	strb	w12, [x13, x11]
    aa38:	ldr	w11, [x0, #5940]
    aa3c:	sub	w10, w10, w11
    aa40:	add	w8, w8, w11
    aa44:	lsr	w9, w9, w10
    aa48:	strh	w9, [x0, #5936]
    aa4c:	sub	w8, w8, #0x10
    aa50:	b	aa58 <inflateCodesUsed@@ZLIB_1.2.9+0x11b4>
    aa54:	add	w8, w11, w8
    aa58:	str	w8, [x0, #5940]
    aa5c:	ldp	x20, x19, [sp, #16]
    aa60:	ldr	x21, [sp], #32
    aa64:	ret
    aa68:	stp	x29, x30, [sp, #-32]!
    aa6c:	stp	x20, x19, [sp, #16]
    aa70:	ldr	w9, [x0, #5940]
    aa74:	mov	w8, #0xfeff                	// #65279
    aa78:	ldrh	w10, [x0, #5936]
    aa7c:	add	w8, w1, w8
    aa80:	and	w8, w8, #0xffff
    aa84:	lsl	w11, w8, w9
    aa88:	mov	x19, x0
    aa8c:	orr	w10, w10, w11
    aa90:	cmp	w9, #0xc
    aa94:	mov	x29, sp
    aa98:	strh	w10, [x0, #5936]
    aa9c:	b.lt	aaf0 <inflateCodesUsed@@ZLIB_1.2.9+0x124c>  // b.tstop
    aaa0:	ldr	x9, [x19, #40]
    aaa4:	ldr	x11, [x19, #16]
    aaa8:	add	x12, x9, #0x1
    aaac:	str	x12, [x19, #40]
    aab0:	mov	w12, #0x1730                	// #5936
    aab4:	strb	w10, [x11, x9]
    aab8:	add	x12, x19, x12
    aabc:	ldr	x9, [x19, #40]
    aac0:	ldrb	w10, [x12, #1]
    aac4:	ldr	x11, [x19, #16]
    aac8:	add	x12, x9, #0x1
    aacc:	str	x12, [x19, #40]
    aad0:	strb	w10, [x11, x9]
    aad4:	ldr	w9, [x19, #5940]
    aad8:	mov	w10, #0x10                  	// #16
    aadc:	sub	w10, w10, w9
    aae0:	lsr	w8, w8, w10
    aae4:	strh	w8, [x19, #5936]
    aae8:	sub	w9, w9, #0xb
    aaec:	b	aaf4 <inflateCodesUsed@@ZLIB_1.2.9+0x1250>
    aaf0:	add	w9, w9, #0x5
    aaf4:	ldrh	w10, [x19, #5936]
    aaf8:	sub	w20, w2, #0x1
    aafc:	and	w8, w20, #0xffff
    ab00:	lsl	w11, w8, w9
    ab04:	orr	w10, w10, w11
    ab08:	cmp	w9, #0xc
    ab0c:	str	w9, [x19, #5940]
    ab10:	strh	w10, [x19, #5936]
    ab14:	b.lt	ab68 <inflateCodesUsed@@ZLIB_1.2.9+0x12c4>  // b.tstop
    ab18:	ldr	x9, [x19, #40]
    ab1c:	ldr	x11, [x19, #16]
    ab20:	add	x12, x9, #0x1
    ab24:	str	x12, [x19, #40]
    ab28:	mov	w12, #0x1730                	// #5936
    ab2c:	strb	w10, [x11, x9]
    ab30:	add	x12, x19, x12
    ab34:	ldr	x9, [x19, #40]
    ab38:	ldrb	w10, [x12, #1]
    ab3c:	ldr	x11, [x19, #16]
    ab40:	add	x12, x9, #0x1
    ab44:	str	x12, [x19, #40]
    ab48:	strb	w10, [x11, x9]
    ab4c:	ldr	w9, [x19, #5940]
    ab50:	mov	w10, #0x10                  	// #16
    ab54:	sub	w10, w10, w9
    ab58:	lsr	w8, w8, w10
    ab5c:	strh	w8, [x19, #5936]
    ab60:	sub	w9, w9, #0xb
    ab64:	b	ab6c <inflateCodesUsed@@ZLIB_1.2.9+0x12c8>
    ab68:	add	w9, w9, #0x5
    ab6c:	mov	w8, #0xfffc                	// #65532
    ab70:	ldrh	w10, [x19, #5936]
    ab74:	add	w8, w3, w8
    ab78:	and	w8, w8, #0xffff
    ab7c:	lsl	w11, w8, w9
    ab80:	orr	w10, w10, w11
    ab84:	cmp	w9, #0xd
    ab88:	str	w9, [x19, #5940]
    ab8c:	strh	w10, [x19, #5936]
    ab90:	b.lt	abe4 <inflateCodesUsed@@ZLIB_1.2.9+0x1340>  // b.tstop
    ab94:	ldr	x9, [x19, #40]
    ab98:	ldr	x11, [x19, #16]
    ab9c:	add	x12, x9, #0x1
    aba0:	str	x12, [x19, #40]
    aba4:	mov	w12, #0x1730                	// #5936
    aba8:	strb	w10, [x11, x9]
    abac:	add	x12, x19, x12
    abb0:	ldr	x9, [x19, #40]
    abb4:	ldrb	w10, [x12, #1]
    abb8:	ldr	x11, [x19, #16]
    abbc:	add	x12, x9, #0x1
    abc0:	str	x12, [x19, #40]
    abc4:	strb	w10, [x11, x9]
    abc8:	ldr	w9, [x19, #5940]
    abcc:	mov	w10, #0x10                  	// #16
    abd0:	sub	w10, w10, w9
    abd4:	lsr	w8, w8, w10
    abd8:	strh	w8, [x19, #5936]
    abdc:	sub	w8, w9, #0xc
    abe0:	b	abe8 <inflateCodesUsed@@ZLIB_1.2.9+0x1344>
    abe4:	add	w8, w9, #0x4
    abe8:	cmp	w3, #0x1
    abec:	str	w8, [x19, #5940]
    abf0:	b.lt	ac90 <inflateCodesUsed@@ZLIB_1.2.9+0x13ec>  // b.tstop
    abf4:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    abf8:	mov	w10, #0x1730                	// #5936
    abfc:	mov	w8, w3
    ac00:	add	x9, x9, #0x730
    ac04:	add	x10, x19, x10
    ac08:	mov	w11, #0x10                  	// #16
    ac0c:	b	ac24 <inflateCodesUsed@@ZLIB_1.2.9+0x1380>
    ac10:	add	w12, w13, #0x3
    ac14:	subs	x8, x8, #0x1
    ac18:	add	x9, x9, #0x1
    ac1c:	str	w12, [x19, #5940]
    ac20:	b.eq	ac90 <inflateCodesUsed@@ZLIB_1.2.9+0x13ec>  // b.none
    ac24:	ldrb	w12, [x9]
    ac28:	ldr	w13, [x19, #5940]
    ac2c:	ldrh	w14, [x19, #5936]
    ac30:	add	x12, x19, x12, lsl #2
    ac34:	ldrh	w12, [x12, #2750]
    ac38:	cmp	w13, #0xe
    ac3c:	lsl	w15, w12, w13
    ac40:	orr	w14, w14, w15
    ac44:	strh	w14, [x19, #5936]
    ac48:	b.lt	ac10 <inflateCodesUsed@@ZLIB_1.2.9+0x136c>  // b.tstop
    ac4c:	ldr	x13, [x19, #40]
    ac50:	ldr	x15, [x19, #16]
    ac54:	add	x16, x13, #0x1
    ac58:	str	x16, [x19, #40]
    ac5c:	strb	w14, [x15, x13]
    ac60:	ldr	x13, [x19, #40]
    ac64:	ldrb	w14, [x10, #1]
    ac68:	ldr	x15, [x19, #16]
    ac6c:	add	x16, x13, #0x1
    ac70:	str	x16, [x19, #40]
    ac74:	strb	w14, [x15, x13]
    ac78:	ldr	w13, [x19, #5940]
    ac7c:	sub	w14, w11, w13
    ac80:	lsr	w12, w12, w14
    ac84:	strh	w12, [x19, #5936]
    ac88:	sub	w12, w13, #0xd
    ac8c:	b	ac14 <inflateCodesUsed@@ZLIB_1.2.9+0x1370>
    ac90:	add	x8, x19, #0xd4
    ac94:	sub	w2, w1, #0x1
    ac98:	mov	x0, x19
    ac9c:	mov	x1, x8
    aca0:	bl	b200 <inflateCodesUsed@@ZLIB_1.2.9+0x195c>
    aca4:	add	x1, x19, #0x9c8
    aca8:	mov	x0, x19
    acac:	mov	w2, w20
    acb0:	bl	b200 <inflateCodesUsed@@ZLIB_1.2.9+0x195c>
    acb4:	ldp	x20, x19, [sp, #16]
    acb8:	ldp	x29, x30, [sp], #32
    acbc:	ret
    acc0:	ldr	x8, [x0, #5904]
    acc4:	ldr	w9, [x0, #5900]
    acc8:	strh	w1, [x8, x9, lsl #1]
    accc:	ldr	x8, [x0, #5888]
    acd0:	add	w10, w9, #0x1
    acd4:	str	w10, [x0, #5900]
    acd8:	strb	w2, [x8, x9]
    acdc:	cbz	w1, ad3c <inflateCodesUsed@@ZLIB_1.2.9+0x1498>
    ace0:	ldr	w8, [x0, #5928]
    ace4:	adrp	x10, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    ace8:	add	x10, x10, #0x0
    acec:	ldrb	w10, [x10, w2, uxtw]
    acf0:	sub	w9, w1, #0x1
    acf4:	lsr	w11, w9, #7
    acf8:	add	w8, w8, #0x1
    acfc:	cmp	w9, #0x100
    ad00:	add	w11, w11, #0x100
    ad04:	str	w8, [x0, #5928]
    ad08:	mov	w8, #0x400                 	// #1024
    ad0c:	csel	w9, w9, w11, cc  // cc = lo, ul, last
    ad10:	adrp	x11, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x27e8>
    ad14:	bfi	x8, x10, #2, #8
    ad18:	add	x11, x11, #0xe00
    ad1c:	add	x8, x8, x0
    ad20:	ldrb	w9, [x11, w9, uxtw]
    ad24:	ldrh	w10, [x8, #216]
    ad28:	add	x9, x0, x9, lsl #2
    ad2c:	add	w10, w10, #0x1
    ad30:	strh	w10, [x8, #216]
    ad34:	add	x8, x9, #0x9c8
    ad38:	b	ad44 <inflateCodesUsed@@ZLIB_1.2.9+0x14a0>
    ad3c:	add	x8, x0, w2, uxtw #2
    ad40:	add	x8, x8, #0xd4
    ad44:	ldrh	w9, [x8]
    ad48:	add	w9, w9, #0x1
    ad4c:	strh	w9, [x8]
    ad50:	ldr	w8, [x0, #5896]
    ad54:	ldr	w9, [x0, #5900]
    ad58:	sub	w8, w8, #0x1
    ad5c:	cmp	w9, w8
    ad60:	cset	w0, eq  // eq = none
    ad64:	ret
    ad68:	ldr	w15, [x0, #5300]
    ad6c:	add	x8, x0, w2, sxtw #2
    ad70:	ldr	w8, [x8, #3008]
    ad74:	lsl	w13, w2, #1
    ad78:	cmp	w13, w15
    ad7c:	b.le	ad90 <inflateCodesUsed@@ZLIB_1.2.9+0x14ec>
    ad80:	mov	w14, w2
    ad84:	add	x9, x0, w14, sxtw #2
    ad88:	str	w8, [x9, #3008]
    ad8c:	ret
    ad90:	sxtw	x10, w8
    ad94:	mov	w11, #0x14bc                	// #5308
    ad98:	mov	w9, #0x14bc                	// #5308
    ad9c:	add	x12, x0, x10
    ada0:	add	x10, x1, x10, lsl #2
    ada4:	add	x11, x12, x11
    ada8:	add	x12, x0, x9
    adac:	b	adcc <inflateCodesUsed@@ZLIB_1.2.9+0x1528>
    adb0:	add	x15, x0, w2, sxtw #2
    adb4:	str	w13, [x15, #3008]
    adb8:	ldr	w15, [x0, #5300]
    adbc:	lsl	w13, w14, #1
    adc0:	mov	w2, w14
    adc4:	cmp	w13, w15
    adc8:	b.gt	ad84 <inflateCodesUsed@@ZLIB_1.2.9+0x14e0>
    adcc:	cmp	w13, w15
    add0:	b.ge	ae20 <inflateCodesUsed@@ZLIB_1.2.9+0x157c>  // b.tcont
    add4:	sxtw	x14, w13
    add8:	add	x16, x0, #0xbc0
    addc:	orr	x15, x14, #0x1
    ade0:	ldrsw	x14, [x16, w13, sxtw #2]
    ade4:	ldrsw	x16, [x16, x15, lsl #2]
    ade8:	lsl	x17, x14, #2
    adec:	lsl	x18, x16, #2
    adf0:	ldrh	w18, [x1, x18]
    adf4:	ldrh	w17, [x1, x17]
    adf8:	cmp	w18, w17
    adfc:	b.cc	ae18 <inflateCodesUsed@@ZLIB_1.2.9+0x1574>  // b.lo, b.ul, b.last
    ae00:	b.ne	ae20 <inflateCodesUsed@@ZLIB_1.2.9+0x157c>  // b.any
    ae04:	ldrb	w16, [x12, x16]
    ae08:	ldrb	w14, [x12, x14]
    ae0c:	cmp	w16, w14
    ae10:	mov	w14, w13
    ae14:	b.hi	ae24 <inflateCodesUsed@@ZLIB_1.2.9+0x1580>  // b.pmore
    ae18:	mov	w14, w15
    ae1c:	b	ae24 <inflateCodesUsed@@ZLIB_1.2.9+0x1580>
    ae20:	mov	w14, w13
    ae24:	add	x13, x0, w14, sxtw #2
    ae28:	ldr	w13, [x13, #3008]
    ae2c:	ldrh	w15, [x10]
    ae30:	sbfiz	x16, x13, #2, #32
    ae34:	ldrh	w16, [x1, x16]
    ae38:	cmp	w15, w16
    ae3c:	b.cc	ad80 <inflateCodesUsed@@ZLIB_1.2.9+0x14dc>  // b.lo, b.ul, b.last
    ae40:	b.ne	adb0 <inflateCodesUsed@@ZLIB_1.2.9+0x150c>  // b.any
    ae44:	sxtw	x15, w13
    ae48:	add	x15, x0, x15
    ae4c:	ldrb	w16, [x11]
    ae50:	ldrb	w15, [x15, x9]
    ae54:	cmp	w16, w15
    ae58:	b.hi	adb0 <inflateCodesUsed@@ZLIB_1.2.9+0x150c>  // b.pmore
    ae5c:	b	ad80 <inflateCodesUsed@@ZLIB_1.2.9+0x14dc>
    ae60:	ldr	x10, [x1, #16]
    ae64:	ldrsw	x11, [x0, #5304]
    ae68:	movi	v0.2d, #0x0
    ae6c:	ldr	x8, [x1]
    ae70:	ldr	w9, [x1, #8]
    ae74:	ldp	x13, x14, [x10]
    ae78:	ldr	w15, [x10, #16]
    ae7c:	ldrsw	x10, [x10, #24]
    ae80:	str	q0, [x0, #2992]
    ae84:	str	q0, [x0, #2976]
    ae88:	add	x11, x0, x11, lsl #2
    ae8c:	ldrsw	x11, [x11, #3008]
    ae90:	add	x11, x8, x11, lsl #2
    ae94:	strh	wzr, [x11, #2]
    ae98:	ldrsw	x11, [x0, #5304]
    ae9c:	cmp	w11, #0x23b
    aea0:	b.gt	af54 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    aea4:	add	x16, x0, x11, lsl #2
    aea8:	mov	w12, wzr
    aeac:	add	x16, x16, #0xbc4
    aeb0:	add	w11, w11, #0x1
    aeb4:	b	aec8 <inflateCodesUsed@@ZLIB_1.2.9+0x1624>
    aeb8:	add	w11, w11, #0x1
    aebc:	cmp	w11, #0x23d
    aec0:	add	x16, x16, #0x4
    aec4:	b.eq	af5c <inflateCodesUsed@@ZLIB_1.2.9+0x16b8>  // b.none
    aec8:	ldrsw	x17, [x16]
    aecc:	add	x1, x8, x17, lsl #2
    aed0:	ldrh	w18, [x1, #2]
    aed4:	add	x18, x8, x18, lsl #2
    aed8:	ldrh	w18, [x18, #2]
    aedc:	cmp	w10, w18
    aee0:	csinc	w18, w10, w18, le
    aee4:	cinc	w12, w12, le
    aee8:	cmp	w17, w9
    aeec:	strh	w18, [x1, #2]
    aef0:	b.gt	aeb8 <inflateCodesUsed@@ZLIB_1.2.9+0x1614>
    aef4:	add	x1, x0, w18, sxtw #1
    aef8:	ldrh	w2, [x1, #2976]
    aefc:	cmp	w17, w15
    af00:	add	w2, w2, #0x1
    af04:	strh	w2, [x1, #2976]
    af08:	b.ge	af14 <inflateCodesUsed@@ZLIB_1.2.9+0x1670>  // b.tcont
    af0c:	mov	w1, wzr
    af10:	b	af1c <inflateCodesUsed@@ZLIB_1.2.9+0x1678>
    af14:	sub	w1, w17, w15
    af18:	ldr	w1, [x14, w1, sxtw #2]
    af1c:	lsl	x2, x17, #2
    af20:	ldrh	w2, [x8, x2]
    af24:	ldr	x3, [x0, #5912]
    af28:	add	w18, w1, w18
    af2c:	madd	x18, x2, x18, x3
    af30:	str	x18, [x0, #5912]
    af34:	cbz	x13, aeb8 <inflateCodesUsed@@ZLIB_1.2.9+0x1614>
    af38:	add	x17, x13, x17, lsl #2
    af3c:	ldrh	w17, [x17, #2]
    af40:	ldr	x18, [x0, #5920]
    af44:	add	w17, w1, w17
    af48:	madd	x17, x17, x2, x18
    af4c:	str	x17, [x0, #5920]
    af50:	b	aeb8 <inflateCodesUsed@@ZLIB_1.2.9+0x1614>
    af54:	mov	w12, wzr
    af58:	add	w11, w11, #0x1
    af5c:	cbz	w12, b024 <inflateCodesUsed@@ZLIB_1.2.9+0x1780>
    af60:	add	x13, x0, x10, lsl #1
    af64:	mov	x14, #0x100000000           	// #4294967296
    af68:	add	x13, x13, #0xba0
    af6c:	add	x14, x14, x10, lsl #32
    af70:	mov	x15, #0xffffffff00000000    	// #-4294967296
    af74:	mov	x16, x13
    af78:	mov	x17, x14
    af7c:	ldrh	w18, [x16, #-2]!
    af80:	add	x17, x17, x15
    af84:	cbz	w18, af7c <inflateCodesUsed@@ZLIB_1.2.9+0x16d8>
    af88:	sub	w18, w18, #0x1
    af8c:	add	x17, x0, x17, asr #31
    af90:	strh	w18, [x16]
    af94:	ldrh	w16, [x17, #2976]
    af98:	subs	w12, w12, #0x2
    af9c:	add	w16, w16, #0x2
    afa0:	strh	w16, [x17, #2976]
    afa4:	ldrh	w16, [x13]
    afa8:	sub	w16, w16, #0x1
    afac:	strh	w16, [x13]
    afb0:	b.gt	af74 <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>
    afb4:	cbz	w10, b024 <inflateCodesUsed@@ZLIB_1.2.9+0x1780>
    afb8:	add	x12, x0, #0xbbc
    afbc:	b	afc8 <inflateCodesUsed@@ZLIB_1.2.9+0x1724>
    afc0:	sub	x10, x10, #0x1
    afc4:	cbz	w10, b024 <inflateCodesUsed@@ZLIB_1.2.9+0x1780>
    afc8:	add	x13, x0, x10, lsl #1
    afcc:	ldrh	w13, [x13, #2976]
    afd0:	mov	x14, xzr
    afd4:	add	x16, x12, w11, sxtw #2
    afd8:	cbz	w13, afc0 <inflateCodesUsed@@ZLIB_1.2.9+0x171c>
    afdc:	ldrsw	x15, [x16, x14, lsl #2]
    afe0:	sub	x14, x14, #0x1
    afe4:	cmp	w15, w9
    afe8:	b.gt	afd8 <inflateCodesUsed@@ZLIB_1.2.9+0x1734>
    afec:	add	x16, x8, x15, lsl #2
    aff0:	ldrh	w17, [x16, #2]!
    aff4:	add	x11, x14, w11, uxtw
    aff8:	cmp	w10, w17
    affc:	b.eq	b01c <inflateCodesUsed@@ZLIB_1.2.9+0x1778>  // b.none
    b000:	lsl	x14, x15, #2
    b004:	ldr	x15, [x0, #5912]
    b008:	ldrh	w14, [x8, x14]
    b00c:	sub	x17, x10, x17
    b010:	madd	x14, x17, x14, x15
    b014:	str	x14, [x0, #5912]
    b018:	strh	w10, [x16]
    b01c:	sub	w13, w13, #0x1
    b020:	b	afd0 <inflateCodesUsed@@ZLIB_1.2.9+0x172c>
    b024:	ret
    b028:	sub	sp, sp, #0x50
    b02c:	mov	x10, sp
    b030:	mov	x8, xzr
    b034:	mov	w9, wzr
    b038:	orr	x10, x10, #0x2
    b03c:	stp	x29, x30, [sp, #32]
    b040:	str	x21, [sp, #48]
    b044:	stp	x20, x19, [sp, #64]
    b048:	add	x29, sp, #0x20
    b04c:	ldrh	w11, [x2, x8]
    b050:	add	w9, w9, w11
    b054:	lsl	w9, w9, #1
    b058:	strh	w9, [x10, x8]
    b05c:	add	x8, x8, #0x2
    b060:	cmp	x8, #0x1e
    b064:	b.ne	b04c <inflateCodesUsed@@ZLIB_1.2.9+0x17a8>  // b.any
    b068:	tbnz	w1, #31, b0ac <inflateCodesUsed@@ZLIB_1.2.9+0x1808>
    b06c:	add	w19, w1, #0x1
    b070:	add	x20, x0, #0x2
    b074:	mov	x21, sp
    b078:	b	b088 <inflateCodesUsed@@ZLIB_1.2.9+0x17e4>
    b07c:	subs	x19, x19, #0x1
    b080:	add	x20, x20, #0x4
    b084:	b.eq	b0ac <inflateCodesUsed@@ZLIB_1.2.9+0x1808>  // b.none
    b088:	ldrh	w1, [x20]
    b08c:	cbz	w1, b07c <inflateCodesUsed@@ZLIB_1.2.9+0x17d8>
    b090:	lsl	x8, x1, #1
    b094:	ldrh	w0, [x21, x8]
    b098:	add	w9, w0, #0x1
    b09c:	strh	w9, [x21, x8]
    b0a0:	bl	b0c0 <inflateCodesUsed@@ZLIB_1.2.9+0x181c>
    b0a4:	sturh	w0, [x20, #-2]
    b0a8:	b	b07c <inflateCodesUsed@@ZLIB_1.2.9+0x17d8>
    b0ac:	ldp	x20, x19, [sp, #64]
    b0b0:	ldr	x21, [sp, #48]
    b0b4:	ldp	x29, x30, [sp, #32]
    b0b8:	add	sp, sp, #0x50
    b0bc:	ret
    b0c0:	mov	w9, wzr
    b0c4:	add	w8, w1, #0x1
    b0c8:	and	w10, w0, #0x1
    b0cc:	sub	w8, w8, #0x1
    b0d0:	orr	w10, w9, w10
    b0d4:	lsr	w0, w0, #1
    b0d8:	cmp	w8, #0x1
    b0dc:	lsl	w9, w10, #1
    b0e0:	b.gt	b0c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1824>
    b0e4:	and	w0, w10, #0x7fffffff
    b0e8:	ret
    b0ec:	ldrh	w8, [x1, #2]
    b0f0:	add	x9, x1, w2, sxtw #2
    b0f4:	mov	w10, #0xffff                	// #65535
    b0f8:	strh	w10, [x9, #6]
    b0fc:	tbnz	w2, #31, b1fc <inflateCodesUsed@@ZLIB_1.2.9+0x1958>
    b100:	cmp	w8, #0x0
    b104:	mov	w9, #0x3                   	// #3
    b108:	mov	w15, #0x7                   	// #7
    b10c:	mov	w16, #0x8a                  	// #138
    b110:	mov	w3, wzr
    b114:	add	x10, x0, #0xafc
    b118:	add	x11, x0, #0xb04
    b11c:	add	x12, x0, #0xb00
    b120:	add	w13, w2, #0x1
    b124:	add	x14, x1, #0x6
    b128:	mov	w2, #0xffffffff            	// #-1
    b12c:	cinc	w17, w9, ne  // ne = any
    b130:	csel	w18, w16, w15, eq  // eq = none
    b134:	mov	w15, #0x6                   	// #6
    b138:	b	b154 <inflateCodesUsed@@ZLIB_1.2.9+0x18b0>
    b13c:	mov	w16, w2
    b140:	subs	x13, x13, #0x1
    b144:	add	x14, x14, #0x4
    b148:	mov	w3, w1
    b14c:	mov	w2, w16
    b150:	b.eq	b1fc <inflateCodesUsed@@ZLIB_1.2.9+0x1958>  // b.none
    b154:	mov	w16, w8
    b158:	ldrh	w8, [x14]
    b15c:	add	w1, w3, #0x1
    b160:	cmp	w1, w18
    b164:	b.ge	b170 <inflateCodesUsed@@ZLIB_1.2.9+0x18cc>  // b.tcont
    b168:	cmp	w16, w8
    b16c:	b.eq	b13c <inflateCodesUsed@@ZLIB_1.2.9+0x1898>  // b.none
    b170:	cmp	w1, w17
    b174:	b.ge	b18c <inflateCodesUsed@@ZLIB_1.2.9+0x18e8>  // b.tcont
    b178:	add	x17, x0, w16, uxtw #2
    b17c:	ldrh	w2, [x17, #2748]
    b180:	add	x18, x17, #0xabc
    b184:	add	w17, w2, w1
    b188:	b	b1d4 <inflateCodesUsed@@ZLIB_1.2.9+0x1930>
    b18c:	cbz	w16, b1b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1910>
    b190:	cmp	w16, w2
    b194:	b.eq	b1a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1904>  // b.none
    b198:	add	x17, x0, w16, uxtw #2
    b19c:	ldrh	w18, [x17, #2748]
    b1a0:	add	w18, w18, #0x1
    b1a4:	strh	w18, [x17, #2748]
    b1a8:	ldrh	w17, [x10]
    b1ac:	mov	x18, x10
    b1b0:	b	b1d0 <inflateCodesUsed@@ZLIB_1.2.9+0x192c>
    b1b4:	cmp	w3, #0x9
    b1b8:	b.gt	b1c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1924>
    b1bc:	ldrh	w17, [x12]
    b1c0:	mov	x18, x12
    b1c4:	b	b1d0 <inflateCodesUsed@@ZLIB_1.2.9+0x192c>
    b1c8:	ldrh	w17, [x11]
    b1cc:	mov	x18, x11
    b1d0:	add	w17, w17, #0x1
    b1d4:	mov	w1, wzr
    b1d8:	strh	w17, [x18]
    b1dc:	cbz	w8, b1f0 <inflateCodesUsed@@ZLIB_1.2.9+0x194c>
    b1e0:	cmp	w16, w8
    b1e4:	cinc	w18, w15, ne  // ne = any
    b1e8:	cinc	w17, w9, ne  // ne = any
    b1ec:	b	b140 <inflateCodesUsed@@ZLIB_1.2.9+0x189c>
    b1f0:	mov	w17, #0x3                   	// #3
    b1f4:	mov	w18, #0x8a                  	// #138
    b1f8:	b	b140 <inflateCodesUsed@@ZLIB_1.2.9+0x189c>
    b1fc:	ret
    b200:	stp	x22, x21, [sp, #-32]!
    b204:	stp	x20, x19, [sp, #16]
    b208:	tbnz	w2, #31, b6a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1e04>
    b20c:	ldrh	w9, [x1, #2]
    b210:	mov	w18, #0x7                   	// #7
    b214:	mov	w4, #0x8a                  	// #138
    b218:	mov	w10, #0x3                   	// #3
    b21c:	mov	w13, #0x1730                	// #5936
    b220:	cmp	w9, #0x0
    b224:	mov	x8, xzr
    b228:	mov	w3, wzr
    b22c:	add	w11, w2, #0x1
    b230:	mov	w7, #0xffffffff            	// #-1
    b234:	mov	w12, #0x10                  	// #16
    b238:	mov	w14, #0x6                   	// #6
    b23c:	mov	w15, #0xfffe                	// #65534
    b240:	mov	w16, #0xfff6                	// #65526
    b244:	add	x17, x0, x13
    b248:	csel	w6, w4, w18, eq  // eq = none
    b24c:	cinc	w5, w10, ne  // ne = any
    b250:	mov	w18, #0xfffd                	// #65533
    b254:	b	b26c <inflateCodesUsed@@ZLIB_1.2.9+0x19c8>
    b258:	mov	w2, w7
    b25c:	cmp	x8, x11
    b260:	mov	w7, w2
    b264:	mov	w3, w4
    b268:	b.eq	b6a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1e04>  // b.none
    b26c:	add	x8, x8, #0x1
    b270:	mov	w2, w9
    b274:	add	x9, x1, x8, lsl #2
    b278:	ldrh	w9, [x9, #2]
    b27c:	add	w4, w3, #0x1
    b280:	cmp	w4, w6
    b284:	b.ge	b290 <inflateCodesUsed@@ZLIB_1.2.9+0x19ec>  // b.tcont
    b288:	cmp	w2, w9
    b28c:	b.eq	b258 <inflateCodesUsed@@ZLIB_1.2.9+0x19b4>  // b.none
    b290:	cmp	w4, w5
    b294:	b.ge	b328 <inflateCodesUsed@@ZLIB_1.2.9+0x1a84>  // b.tcont
    b298:	add	x5, x0, w2, uxtw #2
    b29c:	add	x3, x5, #0xabe
    b2a0:	add	x5, x5, #0xabc
    b2a4:	b	b2b8 <inflateCodesUsed@@ZLIB_1.2.9+0x1a14>
    b2a8:	add	w6, w19, w6
    b2ac:	subs	w4, w4, #0x1
    b2b0:	str	w6, [x0, #5940]
    b2b4:	b.eq	b5fc <inflateCodesUsed@@ZLIB_1.2.9+0x1d58>  // b.none
    b2b8:	ldrh	w6, [x3]
    b2bc:	ldr	w19, [x0, #5940]
    b2c0:	ldrh	w7, [x5]
    b2c4:	ldrh	w20, [x0, #5936]
    b2c8:	sub	w21, w12, w6
    b2cc:	cmp	w19, w21
    b2d0:	lsl	w22, w7, w19
    b2d4:	orr	w20, w20, w22
    b2d8:	strh	w20, [x0, #5936]
    b2dc:	b.le	b2a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1a04>
    b2e0:	ldr	x19, [x0, #40]
    b2e4:	ldr	x21, [x0, #16]
    b2e8:	add	x22, x19, #0x1
    b2ec:	str	x22, [x0, #40]
    b2f0:	strb	w20, [x21, x19]
    b2f4:	ldr	x19, [x0, #40]
    b2f8:	ldrb	w20, [x17, #1]
    b2fc:	ldr	x21, [x0, #16]
    b300:	add	x22, x19, #0x1
    b304:	str	x22, [x0, #40]
    b308:	strb	w20, [x21, x19]
    b30c:	ldr	w19, [x0, #5940]
    b310:	sub	w20, w12, w19
    b314:	add	w6, w6, w19
    b318:	lsr	w7, w7, w20
    b31c:	strh	w7, [x0, #5936]
    b320:	sub	w6, w6, #0x10
    b324:	b	b2ac <inflateCodesUsed@@ZLIB_1.2.9+0x1a08>
    b328:	cbz	w2, b3ac <inflateCodesUsed@@ZLIB_1.2.9+0x1b08>
    b32c:	cmp	w2, w7
    b330:	b.eq	b4a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1c04>  // b.none
    b334:	add	x5, x0, w2, uxtw #2
    b338:	ldr	w7, [x0, #5940]
    b33c:	ldrh	w4, [x5, #2750]
    b340:	ldrh	w5, [x5, #2748]
    b344:	ldrh	w6, [x0, #5936]
    b348:	sub	w19, w12, w4
    b34c:	lsl	w20, w5, w7
    b350:	orr	w6, w6, w20
    b354:	cmp	w7, w19
    b358:	strh	w6, [x0, #5936]
    b35c:	b.le	b49c <inflateCodesUsed@@ZLIB_1.2.9+0x1bf8>
    b360:	ldr	x7, [x0, #40]
    b364:	ldr	x19, [x0, #16]
    b368:	add	x20, x7, #0x1
    b36c:	str	x20, [x0, #40]
    b370:	strb	w6, [x19, x7]
    b374:	add	x20, x0, x13
    b378:	ldr	x6, [x0, #40]
    b37c:	ldrb	w7, [x20, #1]
    b380:	ldr	x19, [x0, #16]
    b384:	add	x20, x6, #0x1
    b388:	str	x20, [x0, #40]
    b38c:	strb	w7, [x19, x6]
    b390:	ldr	w6, [x0, #5940]
    b394:	sub	w7, w12, w6
    b398:	add	w4, w4, w6
    b39c:	lsr	w5, w5, w7
    b3a0:	strh	w5, [x0, #5936]
    b3a4:	sub	w4, w4, #0x10
    b3a8:	b	b4a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1bfc>
    b3ac:	cmp	w3, #0x9
    b3b0:	b.gt	b428 <inflateCodesUsed@@ZLIB_1.2.9+0x1b84>
    b3b4:	ldrh	w4, [x0, #2818]
    b3b8:	ldr	w7, [x0, #5940]
    b3bc:	ldrh	w5, [x0, #2816]
    b3c0:	ldrh	w6, [x0, #5936]
    b3c4:	sub	w19, w12, w4
    b3c8:	cmp	w7, w19
    b3cc:	lsl	w20, w5, w7
    b3d0:	orr	w6, w6, w20
    b3d4:	strh	w6, [x0, #5936]
    b3d8:	b.le	b58c <inflateCodesUsed@@ZLIB_1.2.9+0x1ce8>
    b3dc:	ldr	x7, [x0, #40]
    b3e0:	ldr	x19, [x0, #16]
    b3e4:	add	x20, x7, #0x1
    b3e8:	str	x20, [x0, #40]
    b3ec:	strb	w6, [x19, x7]
    b3f0:	add	x20, x0, x13
    b3f4:	ldr	x6, [x0, #40]
    b3f8:	ldrb	w7, [x20, #1]
    b3fc:	ldr	x19, [x0, #16]
    b400:	add	x20, x6, #0x1
    b404:	str	x20, [x0, #40]
    b408:	strb	w7, [x19, x6]
    b40c:	ldr	w6, [x0, #5940]
    b410:	sub	w7, w12, w6
    b414:	add	w4, w4, w6
    b418:	lsr	w5, w5, w7
    b41c:	strh	w5, [x0, #5936]
    b420:	sub	w4, w4, #0x10
    b424:	b	b590 <inflateCodesUsed@@ZLIB_1.2.9+0x1cec>
    b428:	ldrh	w4, [x0, #2822]
    b42c:	ldr	w7, [x0, #5940]
    b430:	ldrh	w5, [x0, #2820]
    b434:	ldrh	w6, [x0, #5936]
    b438:	sub	w19, w12, w4
    b43c:	cmp	w7, w19
    b440:	lsl	w20, w5, w7
    b444:	orr	w6, w6, w20
    b448:	strh	w6, [x0, #5936]
    b44c:	b.le	b614 <inflateCodesUsed@@ZLIB_1.2.9+0x1d70>
    b450:	ldr	x7, [x0, #40]
    b454:	ldr	x19, [x0, #16]
    b458:	add	x20, x7, #0x1
    b45c:	str	x20, [x0, #40]
    b460:	strb	w6, [x19, x7]
    b464:	add	x20, x0, x13
    b468:	ldr	x6, [x0, #40]
    b46c:	ldrb	w7, [x20, #1]
    b470:	ldr	x19, [x0, #16]
    b474:	add	x20, x6, #0x1
    b478:	str	x20, [x0, #40]
    b47c:	strb	w7, [x19, x6]
    b480:	ldr	w6, [x0, #5940]
    b484:	sub	w7, w12, w6
    b488:	add	w4, w4, w6
    b48c:	lsr	w5, w5, w7
    b490:	strh	w5, [x0, #5936]
    b494:	sub	w4, w4, #0x10
    b498:	b	b618 <inflateCodesUsed@@ZLIB_1.2.9+0x1d74>
    b49c:	add	w4, w7, w4
    b4a0:	str	w4, [x0, #5940]
    b4a4:	mov	w4, w3
    b4a8:	ldrh	w3, [x0, #2814]
    b4ac:	ldr	w7, [x0, #5940]
    b4b0:	ldrh	w5, [x0, #2812]
    b4b4:	ldrh	w6, [x0, #5936]
    b4b8:	sub	w19, w12, w3
    b4bc:	cmp	w7, w19
    b4c0:	lsl	w20, w5, w7
    b4c4:	orr	w6, w6, w20
    b4c8:	strh	w6, [x0, #5936]
    b4cc:	b.le	b51c <inflateCodesUsed@@ZLIB_1.2.9+0x1c78>
    b4d0:	ldr	x7, [x0, #40]
    b4d4:	ldr	x19, [x0, #16]
    b4d8:	add	x20, x7, #0x1
    b4dc:	str	x20, [x0, #40]
    b4e0:	strb	w6, [x19, x7]
    b4e4:	add	x20, x0, x13
    b4e8:	ldr	x6, [x0, #40]
    b4ec:	ldrb	w7, [x20, #1]
    b4f0:	ldr	x19, [x0, #16]
    b4f4:	add	x20, x6, #0x1
    b4f8:	str	x20, [x0, #40]
    b4fc:	strb	w7, [x19, x6]
    b500:	ldr	w6, [x0, #5940]
    b504:	sub	w7, w12, w6
    b508:	add	w3, w3, w6
    b50c:	lsr	w5, w5, w7
    b510:	strh	w5, [x0, #5936]
    b514:	sub	w5, w3, #0x10
    b518:	b	b520 <inflateCodesUsed@@ZLIB_1.2.9+0x1c7c>
    b51c:	add	w5, w7, w3
    b520:	ldrh	w6, [x0, #5936]
    b524:	add	w3, w4, w18
    b528:	and	w3, w3, #0xffff
    b52c:	lsl	w4, w3, w5
    b530:	orr	w4, w6, w4
    b534:	cmp	w5, #0xf
    b538:	str	w5, [x0, #5940]
    b53c:	strh	w4, [x0, #5936]
    b540:	b.lt	b584 <inflateCodesUsed@@ZLIB_1.2.9+0x1ce0>  // b.tstop
    b544:	ldr	x5, [x0, #40]
    b548:	ldr	x6, [x0, #16]
    b54c:	add	x7, x5, #0x1
    b550:	str	x7, [x0, #40]
    b554:	strb	w4, [x6, x5]
    b558:	add	x7, x0, x13
    b55c:	ldr	x4, [x0, #40]
    b560:	ldrb	w5, [x7, #1]
    b564:	ldr	x6, [x0, #16]
    b568:	add	x7, x4, #0x1
    b56c:	str	x7, [x0, #40]
    b570:	strb	w5, [x6, x4]
    b574:	ldr	w4, [x0, #5940]
    b578:	sub	w5, w12, w4
    b57c:	sub	w4, w4, #0xe
    b580:	b	b5f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1d4c>
    b584:	add	w3, w5, #0x2
    b588:	b	b690 <inflateCodesUsed@@ZLIB_1.2.9+0x1dec>
    b58c:	add	w4, w7, w4
    b590:	ldrh	w5, [x0, #5936]
    b594:	add	w3, w3, w15
    b598:	and	w3, w3, #0xffff
    b59c:	lsl	w6, w3, w4
    b5a0:	orr	w5, w5, w6
    b5a4:	cmp	w4, #0xe
    b5a8:	str	w4, [x0, #5940]
    b5ac:	strh	w5, [x0, #5936]
    b5b0:	b.lt	b684 <inflateCodesUsed@@ZLIB_1.2.9+0x1de0>  // b.tstop
    b5b4:	ldr	x4, [x0, #40]
    b5b8:	ldr	x6, [x0, #16]
    b5bc:	add	x7, x4, #0x1
    b5c0:	str	x7, [x0, #40]
    b5c4:	strb	w5, [x6, x4]
    b5c8:	add	x7, x0, x13
    b5cc:	ldr	x4, [x0, #40]
    b5d0:	ldrb	w5, [x7, #1]
    b5d4:	ldr	x6, [x0, #16]
    b5d8:	add	x7, x4, #0x1
    b5dc:	str	x7, [x0, #40]
    b5e0:	strb	w5, [x6, x4]
    b5e4:	ldr	w4, [x0, #5940]
    b5e8:	sub	w5, w12, w4
    b5ec:	sub	w4, w4, #0xd
    b5f0:	lsr	w3, w3, w5
    b5f4:	strh	w3, [x0, #5936]
    b5f8:	str	w4, [x0, #5940]
    b5fc:	mov	w4, wzr
    b600:	cbz	w9, b69c <inflateCodesUsed@@ZLIB_1.2.9+0x1df8>
    b604:	cmp	w2, w9
    b608:	cinc	w5, w10, ne  // ne = any
    b60c:	cinc	w6, w14, ne  // ne = any
    b610:	b	b25c <inflateCodesUsed@@ZLIB_1.2.9+0x19b8>
    b614:	add	w4, w7, w4
    b618:	ldrh	w5, [x0, #5936]
    b61c:	add	w3, w3, w16
    b620:	and	w3, w3, #0xffff
    b624:	lsl	w6, w3, w4
    b628:	orr	w5, w5, w6
    b62c:	cmp	w4, #0xa
    b630:	str	w4, [x0, #5940]
    b634:	strh	w5, [x0, #5936]
    b638:	b.lt	b68c <inflateCodesUsed@@ZLIB_1.2.9+0x1de8>  // b.tstop
    b63c:	ldr	x4, [x0, #40]
    b640:	ldr	x6, [x0, #16]
    b644:	add	x7, x4, #0x1
    b648:	str	x7, [x0, #40]
    b64c:	strb	w5, [x6, x4]
    b650:	add	x7, x0, x13
    b654:	ldr	x4, [x0, #40]
    b658:	ldrb	w5, [x7, #1]
    b65c:	ldr	x6, [x0, #16]
    b660:	add	x7, x4, #0x1
    b664:	str	x7, [x0, #40]
    b668:	strb	w5, [x6, x4]
    b66c:	ldr	w4, [x0, #5940]
    b670:	sub	w5, w12, w4
    b674:	lsr	w3, w3, w5
    b678:	strh	w3, [x0, #5936]
    b67c:	sub	w3, w4, #0x9
    b680:	b	b690 <inflateCodesUsed@@ZLIB_1.2.9+0x1dec>
    b684:	add	w3, w4, #0x3
    b688:	b	b690 <inflateCodesUsed@@ZLIB_1.2.9+0x1dec>
    b68c:	add	w3, w4, #0x7
    b690:	str	w3, [x0, #5940]
    b694:	mov	w4, wzr
    b698:	cbnz	w9, b604 <inflateCodesUsed@@ZLIB_1.2.9+0x1d60>
    b69c:	mov	w6, #0x8a                  	// #138
    b6a0:	mov	w5, #0x3                   	// #3
    b6a4:	b	b25c <inflateCodesUsed@@ZLIB_1.2.9+0x19b8>
    b6a8:	ldp	x20, x19, [sp, #16]
    b6ac:	ldp	x22, x21, [sp], #32
    b6b0:	ret

000000000000b6b4 <zlibVersion@@Base>:
    b6b4:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    b6b8:	add	x0, x0, #0x899
    b6bc:	ret

000000000000b6c0 <zlibCompileFlags@@ZLIB_1.2.0.2>:
    b6c0:	mov	w0, #0xa9                  	// #169
    b6c4:	ret

000000000000b6c8 <zError@@Base>:
    b6c8:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x137e8>
    b6cc:	ldr	x9, [x9, #4056]
    b6d0:	mov	w8, #0x2                   	// #2
    b6d4:	sub	x8, x8, w0, sxtw
    b6d8:	ldr	x0, [x9, x8, lsl #3]
    b6dc:	ret
    b6e0:	stp	x29, x30, [sp, #-16]!
    b6e4:	mul	w0, w2, w1
    b6e8:	mov	x29, sp
    b6ec:	bl	2460 <malloc@plt>
    b6f0:	ldp	x29, x30, [sp], #16
    b6f4:	ret
    b6f8:	stp	x29, x30, [sp, #-16]!
    b6fc:	mov	x0, x1
    b700:	mov	x29, sp
    b704:	bl	2570 <free@plt>
    b708:	ldp	x29, x30, [sp], #16
    b70c:	ret

000000000000b710 <compress2@@Base>:
    b710:	sub	sp, sp, #0xb0
    b714:	stp	x29, x30, [sp, #112]
    b718:	stp	x22, x21, [sp, #144]
    b71c:	stp	x20, x19, [sp, #160]
    b720:	str	x23, [sp, #128]
    b724:	ldr	x23, [x1]
    b728:	mov	x21, x2
    b72c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    b730:	mov	x20, x3
    b734:	mov	x19, x1
    b738:	mov	x22, x0
    b73c:	str	xzr, [x1]
    b740:	add	x2, x2, #0x899
    b744:	mov	x0, sp
    b748:	mov	w3, #0x70                  	// #112
    b74c:	mov	w1, w4
    b750:	add	x29, sp, #0x70
    b754:	stp	xzr, xzr, [sp, #64]
    b758:	str	xzr, [sp, #80]
    b75c:	bl	24f0 <deflateInit_@plt>
    b760:	cbnz	w0, b7f0 <compress2@@Base+0xe0>
    b764:	str	x22, [sp, #24]
    b768:	mov	w22, #0xffffffff            	// #-1
    b76c:	str	wzr, [sp, #32]
    b770:	str	x21, [sp]
    b774:	str	wzr, [sp, #8]
    b778:	b	b794 <compress2@@Base+0x84>
    b77c:	cmp	x20, #0x0
    b780:	cset	w8, eq  // eq = none
    b784:	lsl	w1, w8, #2
    b788:	mov	x0, sp
    b78c:	bl	2490 <deflate@plt>
    b790:	cbnz	w0, b7d4 <compress2@@Base+0xc4>
    b794:	ldr	w8, [sp, #32]
    b798:	cbz	w8, b7a8 <compress2@@Base+0x98>
    b79c:	ldr	w8, [sp, #8]
    b7a0:	cbnz	w8, b77c <compress2@@Base+0x6c>
    b7a4:	b	b7c0 <compress2@@Base+0xb0>
    b7a8:	cmp	x23, x22
    b7ac:	csel	x8, x23, x22, cc  // cc = lo, ul, last
    b7b0:	sub	x23, x23, x8
    b7b4:	str	w8, [sp, #32]
    b7b8:	ldr	w8, [sp, #8]
    b7bc:	cbnz	w8, b77c <compress2@@Base+0x6c>
    b7c0:	cmp	x20, x22
    b7c4:	csel	x8, x20, x22, cc  // cc = lo, ul, last
    b7c8:	sub	x20, x20, x8
    b7cc:	str	w8, [sp, #8]
    b7d0:	b	b77c <compress2@@Base+0x6c>
    b7d4:	ldr	x8, [sp, #40]
    b7d8:	mov	w21, w0
    b7dc:	mov	x0, sp
    b7e0:	str	x8, [x19]
    b7e4:	bl	2590 <deflateEnd@plt>
    b7e8:	cmp	w21, #0x1
    b7ec:	csel	w0, wzr, w21, eq  // eq = none
    b7f0:	ldp	x20, x19, [sp, #160]
    b7f4:	ldp	x22, x21, [sp, #144]
    b7f8:	ldr	x23, [sp, #128]
    b7fc:	ldp	x29, x30, [sp, #112]
    b800:	add	sp, sp, #0xb0
    b804:	ret

000000000000b808 <compress@@Base>:
    b808:	stp	x29, x30, [sp, #-16]!
    b80c:	mov	w4, #0xffffffff            	// #-1
    b810:	mov	x29, sp
    b814:	bl	25d0 <compress2@plt>
    b818:	ldp	x29, x30, [sp], #16
    b81c:	ret

000000000000b820 <compressBound@@ZLIB_1.2.0>:
    b820:	add	x8, x0, x0, lsr #12
    b824:	add	x8, x8, x0, lsr #14
    b828:	add	x8, x8, x0, lsr #25
    b82c:	add	x0, x8, #0xd
    b830:	ret

000000000000b834 <uncompress2@@ZLIB_1.2.9>:
    b834:	sub	sp, sp, #0xc0
    b838:	stp	x29, x30, [sp, #112]
    b83c:	stp	x24, x23, [sp, #144]
    b840:	stp	x22, x21, [sp, #160]
    b844:	stp	x20, x19, [sp, #176]
    b848:	ldr	x23, [x1]
    b84c:	ldr	x24, [x3]
    b850:	mov	x20, x3
    b854:	mov	x19, x1
    b858:	str	x25, [sp, #128]
    b85c:	add	x29, sp, #0x70
    b860:	cbz	x23, b870 <uncompress2@@ZLIB_1.2.9+0x3c>
    b864:	mov	x21, x0
    b868:	str	xzr, [x19]
    b86c:	b	b878 <uncompress2@@ZLIB_1.2.9+0x44>
    b870:	add	x21, x29, #0x1c
    b874:	mov	w23, #0x1                   	// #1
    b878:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    b87c:	str	x2, [sp]
    b880:	add	x1, x1, #0x899
    b884:	mov	x0, sp
    b888:	mov	w2, #0x70                  	// #112
    b88c:	str	wzr, [sp, #8]
    b890:	stp	xzr, xzr, [sp, #72]
    b894:	str	xzr, [sp, #64]
    b898:	bl	25c0 <inflateInit_@plt>
    b89c:	mov	w22, w0
    b8a0:	cbz	w0, b8c4 <uncompress2@@ZLIB_1.2.9+0x90>
    b8a4:	mov	w0, w22
    b8a8:	ldp	x20, x19, [sp, #176]
    b8ac:	ldp	x22, x21, [sp, #160]
    b8b0:	ldp	x24, x23, [sp, #144]
    b8b4:	ldr	x25, [sp, #128]
    b8b8:	ldp	x29, x30, [sp, #112]
    b8bc:	add	sp, sp, #0xc0
    b8c0:	ret
    b8c4:	mov	w25, #0xffffffff            	// #-1
    b8c8:	str	x21, [sp, #24]
    b8cc:	str	wzr, [sp, #32]
    b8d0:	b	b8e4 <uncompress2@@ZLIB_1.2.9+0xb0>
    b8d4:	mov	x0, sp
    b8d8:	mov	w1, wzr
    b8dc:	bl	23f0 <inflate@plt>
    b8e0:	cbnz	w0, b924 <uncompress2@@ZLIB_1.2.9+0xf0>
    b8e4:	ldr	w8, [sp, #32]
    b8e8:	cbz	w8, b8f8 <uncompress2@@ZLIB_1.2.9+0xc4>
    b8ec:	ldr	w8, [sp, #8]
    b8f0:	cbnz	w8, b8d4 <uncompress2@@ZLIB_1.2.9+0xa0>
    b8f4:	b	b910 <uncompress2@@ZLIB_1.2.9+0xdc>
    b8f8:	cmp	x23, x25
    b8fc:	csel	x8, x23, x25, cc  // cc = lo, ul, last
    b900:	sub	x23, x23, x8
    b904:	str	w8, [sp, #32]
    b908:	ldr	w8, [sp, #8]
    b90c:	cbnz	w8, b8d4 <uncompress2@@ZLIB_1.2.9+0xa0>
    b910:	cmp	x24, x25
    b914:	csel	x8, x24, x25, cc  // cc = lo, ul, last
    b918:	sub	x24, x24, x8
    b91c:	str	w8, [sp, #8]
    b920:	b	b8d4 <uncompress2@@ZLIB_1.2.9+0xa0>
    b924:	ldr	w8, [sp, #8]
    b928:	ldr	x9, [x20]
    b92c:	mov	w22, w0
    b930:	add	x8, x24, x8
    b934:	sub	x8, x9, x8
    b938:	str	x8, [x20]
    b93c:	ldr	x8, [sp, #40]
    b940:	add	x9, x29, #0x1c
    b944:	cmp	x21, x9
    b948:	b.eq	b954 <uncompress2@@ZLIB_1.2.9+0x120>  // b.none
    b94c:	str	x8, [x19]
    b950:	b	b964 <uncompress2@@ZLIB_1.2.9+0x130>
    b954:	cmp	x8, #0x0
    b958:	mov	w8, #0xfffffffb            	// #-5
    b95c:	ccmp	w22, w8, #0x0, ne  // ne = any
    b960:	csinc	x23, x23, xzr, ne  // ne = any
    b964:	mov	x0, sp
    b968:	bl	2550 <inflateEnd@plt>
    b96c:	cmp	w22, #0x2
    b970:	b.eq	b990 <uncompress2@@ZLIB_1.2.9+0x15c>  // b.none
    b974:	cmp	w22, #0x1
    b978:	b.eq	b998 <uncompress2@@ZLIB_1.2.9+0x164>  // b.none
    b97c:	cmn	w22, #0x5
    b980:	b.ne	b8a4 <uncompress2@@ZLIB_1.2.9+0x70>  // b.any
    b984:	ldr	w8, [sp, #32]
    b988:	cmn	x23, x8
    b98c:	b.eq	b8a4 <uncompress2@@ZLIB_1.2.9+0x70>  // b.none
    b990:	mov	w22, #0xfffffffd            	// #-3
    b994:	b	b8a4 <uncompress2@@ZLIB_1.2.9+0x70>
    b998:	mov	w22, wzr
    b99c:	b	b8a4 <uncompress2@@ZLIB_1.2.9+0x70>

000000000000b9a0 <uncompress@@Base>:
    b9a0:	sub	sp, sp, #0x20
    b9a4:	str	x3, [sp, #8]
    b9a8:	add	x3, sp, #0x8
    b9ac:	stp	x29, x30, [sp, #16]
    b9b0:	add	x29, sp, #0x10
    b9b4:	bl	2540 <uncompress2@plt>
    b9b8:	ldp	x29, x30, [sp, #16]
    b9bc:	add	sp, sp, #0x20
    b9c0:	ret

000000000000b9c4 <gzclose@@Base>:
    b9c4:	stp	x29, x30, [sp, #-16]!
    b9c8:	mov	x29, sp
    b9cc:	cbz	x0, b9ec <gzclose@@Base+0x28>
    b9d0:	ldr	w8, [x0, #24]
    b9d4:	mov	w9, #0x1c4f                	// #7247
    b9d8:	cmp	w8, w9
    b9dc:	b.ne	b9f8 <gzclose@@Base+0x34>  // b.any
    b9e0:	bl	2400 <gzclose_r@plt>
    b9e4:	ldp	x29, x30, [sp], #16
    b9e8:	ret
    b9ec:	mov	w0, #0xfffffffe            	// #-2
    b9f0:	ldp	x29, x30, [sp], #16
    b9f4:	ret
    b9f8:	bl	2580 <gzclose_w@plt>
    b9fc:	ldp	x29, x30, [sp], #16
    ba00:	ret

000000000000ba04 <gzopen@@Base>:
    ba04:	stp	x29, x30, [sp, #-16]!
    ba08:	mov	x2, x1
    ba0c:	mov	w1, #0xffffffff            	// #-1
    ba10:	mov	x29, sp
    ba14:	bl	ba20 <gzopen@@Base+0x1c>
    ba18:	ldp	x29, x30, [sp], #16
    ba1c:	ret
    ba20:	stp	x29, x30, [sp, #-80]!
    ba24:	stp	x26, x25, [sp, #16]
    ba28:	stp	x24, x23, [sp, #32]
    ba2c:	stp	x22, x21, [sp, #48]
    ba30:	stp	x20, x19, [sp, #64]
    ba34:	mov	x29, sp
    ba38:	cbz	x0, bc78 <gzopen@@Base+0x274>
    ba3c:	mov	x21, x0
    ba40:	mov	w0, #0xe8                  	// #232
    ba44:	mov	x22, x2
    ba48:	mov	w20, w1
    ba4c:	bl	2460 <malloc@plt>
    ba50:	mov	x19, x0
    ba54:	cbz	x0, bc7c <gzopen@@Base+0x278>
    ba58:	mov	x8, #0x200000000000        	// #35184372088832
    ba5c:	mov	w9, #0xffffffff            	// #-1
    ba60:	str	xzr, [x19, #112]
    ba64:	str	wzr, [x19, #24]
    ba68:	str	x8, [x19, #40]
    ba6c:	str	x9, [x19, #88]
    ba70:	str	wzr, [x19, #64]
    ba74:	ldrb	w16, [x22]
    ba78:	cbz	w16, bb3c <gzopen@@Base+0x138>
    ba7c:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    ba80:	mov	w24, wzr
    ba84:	mov	w25, wzr
    ba88:	add	x8, x22, #0x1
    ba8c:	add	x9, x9, #0x8a0
    ba90:	mov	w10, #0x4                   	// #4
    ba94:	mov	w11, #0x3                   	// #3
    ba98:	mov	w12, #0x1                   	// #1
    ba9c:	mov	w13, #0x2                   	// #2
    baa0:	mov	w14, #0x1c4f                	// #7247
    baa4:	mov	w15, #0x79b1                	// #31153
    baa8:	b	babc <gzopen@@Base+0xb8>
    baac:	sub	w16, w16, #0x30
    bab0:	str	w16, [x19, #88]
    bab4:	ldrb	w16, [x8], #1
    bab8:	cbz	w16, bb44 <gzopen@@Base+0x140>
    babc:	sub	w17, w16, #0x30
    bac0:	and	w17, w17, #0xff
    bac4:	and	w16, w16, #0xff
    bac8:	cmp	w17, #0x9
    bacc:	b.ls	baac <gzopen@@Base+0xa8>  // b.plast
    bad0:	sub	w16, w16, #0x2b
    bad4:	cmp	w16, #0x4d
    bad8:	b.hi	bab4 <gzopen@@Base+0xb0>  // b.pmore
    badc:	adr	x17, bab4 <gzopen@@Base+0xb0>
    bae0:	ldrb	w18, [x9, x16]
    bae4:	add	x17, x17, x18, lsl #2
    bae8:	br	x17
    baec:	str	w10, [x19, #92]
    baf0:	b	bab4 <gzopen@@Base+0xb0>
    baf4:	str	w11, [x19, #92]
    baf8:	b	bab4 <gzopen@@Base+0xb0>
    bafc:	str	w12, [x19, #64]
    bb00:	b	bab4 <gzopen@@Base+0xb0>
    bb04:	str	w12, [x19, #24]
    bb08:	b	bab4 <gzopen@@Base+0xb0>
    bb0c:	mov	w25, #0x1                   	// #1
    bb10:	b	bab4 <gzopen@@Base+0xb0>
    bb14:	str	w12, [x19, #92]
    bb18:	b	bab4 <gzopen@@Base+0xb0>
    bb1c:	str	w13, [x19, #92]
    bb20:	b	bab4 <gzopen@@Base+0xb0>
    bb24:	str	w14, [x19, #24]
    bb28:	b	bab4 <gzopen@@Base+0xb0>
    bb2c:	str	w15, [x19, #24]
    bb30:	b	bab4 <gzopen@@Base+0xb0>
    bb34:	mov	w24, #0x1                   	// #1
    bb38:	b	bab4 <gzopen@@Base+0xb0>
    bb3c:	mov	w25, wzr
    bb40:	mov	w24, wzr
    bb44:	ldr	w26, [x19, #24]
    bb48:	mov	w8, #0x1c4f                	// #7247
    bb4c:	cmp	w26, w8
    bb50:	b.eq	bb5c <gzopen@@Base+0x158>  // b.none
    bb54:	cbz	w26, bc70 <gzopen@@Base+0x26c>
    bb58:	b	bb6c <gzopen@@Base+0x168>
    bb5c:	ldr	w8, [x19, #64]
    bb60:	cbnz	w8, bc70 <gzopen@@Base+0x26c>
    bb64:	mov	w8, #0x1                   	// #1
    bb68:	str	w8, [x19, #64]
    bb6c:	mov	x0, x21
    bb70:	bl	23e0 <strlen@plt>
    bb74:	add	x23, x0, #0x1
    bb78:	mov	x0, x23
    bb7c:	bl	2460 <malloc@plt>
    bb80:	str	x0, [x19, #32]
    bb84:	cbz	x0, bc70 <gzopen@@Base+0x26c>
    bb88:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    bb8c:	add	x2, x2, #0x908
    bb90:	mov	x1, x23
    bb94:	mov	x3, x21
    bb98:	mov	x22, x0
    bb9c:	bl	2450 <snprintf@plt>
    bba0:	cmp	w25, #0x0
    bba4:	mov	w9, #0x1c4f                	// #7247
    bba8:	cset	w8, ne  // ne = any
    bbac:	cmp	w26, w9
    bbb0:	b.ne	bbc0 <gzopen@@Base+0x1bc>  // b.any
    bbb4:	mov	w9, wzr
    bbb8:	tbz	w20, #31, bc04 <gzopen@@Base+0x200>
    bbbc:	b	bbec <gzopen@@Base+0x1e8>
    bbc0:	cmp	w24, #0x0
    bbc4:	mov	w9, #0xc1                  	// #193
    bbc8:	mov	w10, #0x41                  	// #65
    bbcc:	mov	w11, #0x79b1                	// #31153
    bbd0:	mov	w12, #0x400                 	// #1024
    bbd4:	csel	w9, w10, w9, eq  // eq = none
    bbd8:	cmp	w26, w11
    bbdc:	mov	w10, #0x200                 	// #512
    bbe0:	csel	w10, w10, w12, eq  // eq = none
    bbe4:	orr	w9, w10, w9
    bbe8:	tbz	w20, #31, bc04 <gzopen@@Base+0x200>
    bbec:	lsl	w8, w8, #19
    bbf0:	orr	w1, w9, w8
    bbf4:	mov	w2, #0x1b6                 	// #438
    bbf8:	mov	x0, x21
    bbfc:	bl	2470 <open@plt>
    bc00:	mov	w20, w0
    bc04:	cmn	w20, #0x1
    bc08:	str	w20, [x19, #28]
    bc0c:	b.eq	bc68 <gzopen@@Base+0x264>  // b.none
    bc10:	cmp	w26, #0x1
    bc14:	b.ne	bc30 <gzopen@@Base+0x22c>  // b.any
    bc18:	mov	w2, #0x2                   	// #2
    bc1c:	mov	w0, w20
    bc20:	mov	x1, xzr
    bc24:	bl	24b0 <lseek64@plt>
    bc28:	mov	w8, #0x79b1                	// #31153
    bc2c:	str	w8, [x19, #24]
    bc30:	ldr	w8, [x19, #24]
    bc34:	mov	w9, #0x1c4f                	// #7247
    bc38:	cmp	w8, w9
    bc3c:	b.ne	bc5c <gzopen@@Base+0x258>  // b.any
    bc40:	mov	w2, #0x1                   	// #1
    bc44:	mov	w0, w20
    bc48:	mov	x1, xzr
    bc4c:	bl	24b0 <lseek64@plt>
    bc50:	cmn	x0, #0x1
    bc54:	csel	x8, xzr, x0, eq  // eq = none
    bc58:	str	x8, [x19, #72]
    bc5c:	mov	x0, x19
    bc60:	bl	bdf4 <gzrewind@@Base+0x6c>
    bc64:	b	bc7c <gzopen@@Base+0x278>
    bc68:	mov	x0, x22
    bc6c:	bl	2570 <free@plt>
    bc70:	mov	x0, x19
    bc74:	bl	2570 <free@plt>
    bc78:	mov	x19, xzr
    bc7c:	mov	x0, x19
    bc80:	ldp	x20, x19, [sp, #64]
    bc84:	ldp	x22, x21, [sp, #48]
    bc88:	ldp	x24, x23, [sp, #32]
    bc8c:	ldp	x26, x25, [sp, #16]
    bc90:	ldp	x29, x30, [sp], #80
    bc94:	ret

000000000000bc98 <gzopen64@@ZLIB_1.2.3.3>:
    bc98:	stp	x29, x30, [sp, #-16]!
    bc9c:	mov	x2, x1
    bca0:	mov	w1, #0xffffffff            	// #-1
    bca4:	mov	x29, sp
    bca8:	bl	ba20 <gzopen@@Base+0x1c>
    bcac:	ldp	x29, x30, [sp], #16
    bcb0:	ret

000000000000bcb4 <gzdopen@@Base>:
    bcb4:	stp	x29, x30, [sp, #-48]!
    bcb8:	cmn	w0, #0x1
    bcbc:	str	x21, [sp, #16]
    bcc0:	stp	x20, x19, [sp, #32]
    bcc4:	mov	x29, sp
    bcc8:	b.eq	bd18 <gzdopen@@Base+0x64>  // b.none
    bccc:	mov	w19, w0
    bcd0:	mov	w0, #0x13                  	// #19
    bcd4:	mov	x20, x1
    bcd8:	bl	2460 <malloc@plt>
    bcdc:	cbz	x0, bd18 <gzdopen@@Base+0x64>
    bce0:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    bce4:	add	x2, x2, #0x8ee
    bce8:	mov	w1, #0x13                  	// #19
    bcec:	mov	w3, w19
    bcf0:	mov	x21, x0
    bcf4:	bl	2450 <snprintf@plt>
    bcf8:	mov	x0, x21
    bcfc:	mov	w1, w19
    bd00:	mov	x2, x20
    bd04:	bl	ba20 <gzopen@@Base+0x1c>
    bd08:	mov	x19, x0
    bd0c:	mov	x0, x21
    bd10:	bl	2570 <free@plt>
    bd14:	b	bd1c <gzdopen@@Base+0x68>
    bd18:	mov	x19, xzr
    bd1c:	mov	x0, x19
    bd20:	ldp	x20, x19, [sp, #32]
    bd24:	ldr	x21, [sp, #16]
    bd28:	ldp	x29, x30, [sp], #48
    bd2c:	ret

000000000000bd30 <gzbuffer@@ZLIB_1.2.3.5>:
    bd30:	cbz	x0, bd80 <gzbuffer@@ZLIB_1.2.3.5+0x50>
    bd34:	ldr	w9, [x0, #24]
    bd38:	mov	w10, #0x79b1                	// #31153
    bd3c:	mov	x8, x0
    bd40:	cmp	w9, w10
    bd44:	b.eq	bd54 <gzbuffer@@ZLIB_1.2.3.5+0x24>  // b.none
    bd48:	mov	w10, #0x1c4f                	// #7247
    bd4c:	cmp	w9, w10
    bd50:	b.ne	bd80 <gzbuffer@@ZLIB_1.2.3.5+0x50>  // b.any
    bd54:	cmp	w1, w1, lsl #1
    bd58:	mov	w0, #0xffffffff            	// #-1
    bd5c:	b.hi	bd7c <gzbuffer@@ZLIB_1.2.3.5+0x4c>  // b.pmore
    bd60:	ldr	w9, [x8, #40]
    bd64:	cbnz	w9, bd7c <gzbuffer@@ZLIB_1.2.3.5+0x4c>
    bd68:	cmp	w1, #0x2
    bd6c:	mov	w9, #0x2                   	// #2
    bd70:	mov	w0, wzr
    bd74:	csel	w9, w1, w9, hi  // hi = pmore
    bd78:	str	w9, [x8, #44]
    bd7c:	ret
    bd80:	mov	w0, #0xffffffff            	// #-1
    bd84:	ret

000000000000bd88 <gzrewind@@Base>:
    bd88:	stp	x29, x30, [sp, #-32]!
    bd8c:	str	x19, [sp, #16]
    bd90:	mov	x29, sp
    bd94:	cbz	x0, bde4 <gzrewind@@Base+0x5c>
    bd98:	ldr	w8, [x0, #24]
    bd9c:	mov	w9, #0x1c4f                	// #7247
    bda0:	mov	x19, x0
    bda4:	cmp	w8, w9
    bda8:	b.ne	bde4 <gzrewind@@Base+0x5c>  // b.any
    bdac:	ldr	w8, [x19, #108]
    bdb0:	cbz	w8, bdbc <gzrewind@@Base+0x34>
    bdb4:	cmn	w8, #0x5
    bdb8:	b.ne	bde4 <gzrewind@@Base+0x5c>  // b.any
    bdbc:	ldr	w0, [x19, #28]
    bdc0:	ldr	x1, [x19, #72]
    bdc4:	mov	w2, wzr
    bdc8:	bl	24b0 <lseek64@plt>
    bdcc:	cmn	x0, #0x1
    bdd0:	b.eq	bde8 <gzrewind@@Base+0x60>  // b.none
    bdd4:	mov	x0, x19
    bdd8:	bl	bdf4 <gzrewind@@Base+0x6c>
    bddc:	mov	w0, wzr
    bde0:	b	bde8 <gzrewind@@Base+0x60>
    bde4:	mov	w0, #0xffffffff            	// #-1
    bde8:	ldr	x19, [sp, #16]
    bdec:	ldp	x29, x30, [sp], #32
    bdf0:	ret
    bdf4:	stp	x29, x30, [sp, #-32]!
    bdf8:	ldr	w8, [x0, #24]
    bdfc:	mov	w9, #0x1c4f                	// #7247
    be00:	str	x19, [sp, #16]
    be04:	mov	x19, x0
    be08:	cmp	w8, w9
    be0c:	mov	x29, sp
    be10:	str	wzr, [x0]
    be14:	b.ne	be20 <gzrewind@@Base+0x98>  // b.any
    be18:	str	xzr, [x19, #80]
    be1c:	str	wzr, [x19, #68]
    be20:	mov	x0, x19
    be24:	mov	w1, wzr
    be28:	mov	x2, xzr
    be2c:	str	wzr, [x19, #104]
    be30:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    be34:	str	xzr, [x19, #16]
    be38:	str	wzr, [x19, #128]
    be3c:	ldr	x19, [sp, #16]
    be40:	ldp	x29, x30, [sp], #32
    be44:	ret

000000000000be48 <gzseek64@@ZLIB_1.2.3.3>:
    be48:	stp	x29, x30, [sp, #-32]!
    be4c:	stp	x20, x19, [sp, #16]
    be50:	mov	x29, sp
    be54:	cbz	x0, be94 <gzseek64@@ZLIB_1.2.3.3+0x4c>
    be58:	ldr	w8, [x0, #24]
    be5c:	mov	w9, #0x79b1                	// #31153
    be60:	mov	x19, x1
    be64:	mov	x20, x0
    be68:	cmp	w8, w9
    be6c:	b.eq	be7c <gzseek64@@ZLIB_1.2.3.3+0x34>  // b.none
    be70:	mov	w9, #0x1c4f                	// #7247
    be74:	cmp	w8, w9
    be78:	b.ne	be94 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    be7c:	ldr	w9, [x20, #108]
    be80:	cbz	w9, be8c <gzseek64@@ZLIB_1.2.3.3+0x44>
    be84:	cmn	w9, #0x5
    be88:	b.ne	be94 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    be8c:	cmp	w2, #0x1
    be90:	b.ls	bea4 <gzseek64@@ZLIB_1.2.3.3+0x5c>  // b.plast
    be94:	mov	x0, #0xffffffffffffffff    	// #-1
    be98:	ldp	x20, x19, [sp, #16]
    be9c:	ldp	x29, x30, [sp], #32
    bea0:	ret
    bea4:	cbz	w2, bebc <gzseek64@@ZLIB_1.2.3.3+0x74>
    bea8:	ldr	w9, [x20, #104]
    beac:	cbz	w9, bec4 <gzseek64@@ZLIB_1.2.3.3+0x7c>
    beb0:	ldr	x9, [x20, #96]
    beb4:	add	x19, x9, x19
    beb8:	b	bec4 <gzseek64@@ZLIB_1.2.3.3+0x7c>
    bebc:	ldr	x9, [x20, #16]
    bec0:	sub	x19, x19, x9
    bec4:	mov	w9, #0x1c4f                	// #7247
    bec8:	cmp	w8, w9
    becc:	str	wzr, [x20, #104]
    bed0:	b.ne	bf38 <gzseek64@@ZLIB_1.2.3.3+0xf0>  // b.any
    bed4:	ldr	w9, [x20, #68]
    bed8:	cmp	w9, #0x1
    bedc:	b.ne	bf38 <gzseek64@@ZLIB_1.2.3.3+0xf0>  // b.any
    bee0:	ldr	x9, [x20, #16]
    bee4:	cmn	x9, x19
    bee8:	b.mi	bf38 <gzseek64@@ZLIB_1.2.3.3+0xf0>  // b.first
    beec:	ldr	w8, [x20]
    bef0:	ldr	w0, [x20, #28]
    bef4:	mov	w2, #0x1                   	// #1
    bef8:	sub	x1, x19, x8
    befc:	bl	24b0 <lseek64@plt>
    bf00:	cmn	x0, #0x1
    bf04:	b.eq	be98 <gzseek64@@ZLIB_1.2.3.3+0x50>  // b.none
    bf08:	mov	x0, x20
    bf0c:	mov	w1, wzr
    bf10:	mov	x2, xzr
    bf14:	str	wzr, [x20]
    bf18:	str	xzr, [x20, #80]
    bf1c:	str	wzr, [x20, #104]
    bf20:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    bf24:	ldr	x8, [x20, #16]
    bf28:	str	wzr, [x20, #128]
    bf2c:	add	x0, x8, x19
    bf30:	str	x0, [x20, #16]
    bf34:	b	be98 <gzseek64@@ZLIB_1.2.3.3+0x50>
    bf38:	tbnz	x19, #63, bf90 <gzseek64@@ZLIB_1.2.3.3+0x148>
    bf3c:	ldr	w8, [x20, #24]
    bf40:	mov	w9, #0x1c4f                	// #7247
    bf44:	cmp	w8, w9
    bf48:	b.ne	bf74 <gzseek64@@ZLIB_1.2.3.3+0x12c>  // b.any
    bf4c:	ldr	w8, [x20]
    bf50:	ldp	x9, x10, [x20, #8]
    bf54:	cmp	x19, x8
    bf58:	csel	w11, w19, w8, lt  // lt = tstop
    bf5c:	sub	w8, w8, w11
    bf60:	add	x9, x9, x11
    bf64:	add	x10, x10, x11
    bf68:	sub	x19, x19, x11
    bf6c:	str	w8, [x20]
    bf70:	stp	x9, x10, [x20, #8]
    bf74:	cbz	x19, bf84 <gzseek64@@ZLIB_1.2.3.3+0x13c>
    bf78:	mov	w8, #0x1                   	// #1
    bf7c:	str	w8, [x20, #104]
    bf80:	str	x19, [x20, #96]
    bf84:	ldr	x8, [x20, #16]
    bf88:	add	x0, x8, x19
    bf8c:	b	be98 <gzseek64@@ZLIB_1.2.3.3+0x50>
    bf90:	mov	w9, #0x1c4f                	// #7247
    bf94:	cmp	w8, w9
    bf98:	b.ne	be94 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    bf9c:	ldr	x8, [x20, #16]
    bfa0:	adds	x19, x8, x19
    bfa4:	b.mi	be94 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.first
    bfa8:	mov	x0, x20
    bfac:	bl	25a0 <gzrewind@plt>
    bfb0:	cmn	w0, #0x1
    bfb4:	b.ne	bf3c <gzseek64@@ZLIB_1.2.3.3+0xf4>  // b.any
    bfb8:	b	be94 <gzseek64@@ZLIB_1.2.3.3+0x4c>
    bfbc:	stp	x29, x30, [sp, #-48]!
    bfc0:	stp	x22, x21, [sp, #16]
    bfc4:	stp	x20, x19, [sp, #32]
    bfc8:	mov	x20, x0
    bfcc:	ldr	x0, [x0, #112]
    bfd0:	mov	x19, x2
    bfd4:	mov	w21, w1
    bfd8:	mov	x29, sp
    bfdc:	cbz	x0, bff4 <gzseek64@@ZLIB_1.2.3.3+0x1ac>
    bfe0:	ldr	w8, [x20, #108]
    bfe4:	cmn	w8, #0x4
    bfe8:	b.eq	bff0 <gzseek64@@ZLIB_1.2.3.3+0x1a8>  // b.none
    bfec:	bl	2570 <free@plt>
    bff0:	str	xzr, [x20, #112]
    bff4:	cmn	w21, #0x5
    bff8:	b.eq	c004 <gzseek64@@ZLIB_1.2.3.3+0x1bc>  // b.none
    bffc:	cbz	w21, c004 <gzseek64@@ZLIB_1.2.3.3+0x1bc>
    c000:	str	wzr, [x20]
    c004:	cmn	w21, #0x4
    c008:	str	w21, [x20, #108]
    c00c:	b.eq	c08c <gzseek64@@ZLIB_1.2.3.3+0x244>  // b.none
    c010:	cbz	x19, c08c <gzseek64@@ZLIB_1.2.3.3+0x244>
    c014:	ldr	x21, [x20, #32]
    c018:	mov	x0, x21
    c01c:	bl	23e0 <strlen@plt>
    c020:	mov	x22, x0
    c024:	mov	x0, x19
    c028:	bl	23e0 <strlen@plt>
    c02c:	add	x8, x22, x0
    c030:	add	x0, x8, #0x3
    c034:	bl	2460 <malloc@plt>
    c038:	str	x0, [x20, #112]
    c03c:	cbz	x0, c084 <gzseek64@@ZLIB_1.2.3.3+0x23c>
    c040:	mov	x22, x0
    c044:	mov	x0, x21
    c048:	bl	23e0 <strlen@plt>
    c04c:	mov	x20, x0
    c050:	mov	x0, x19
    c054:	bl	23e0 <strlen@plt>
    c058:	add	x8, x20, x0
    c05c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c060:	adrp	x4, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c064:	add	x1, x8, #0x3
    c068:	add	x2, x2, #0x904
    c06c:	add	x4, x4, #0x90b
    c070:	mov	x0, x22
    c074:	mov	x3, x21
    c078:	mov	x5, x19
    c07c:	bl	2450 <snprintf@plt>
    c080:	b	c08c <gzseek64@@ZLIB_1.2.3.3+0x244>
    c084:	mov	w8, #0xfffffffc            	// #-4
    c088:	str	w8, [x20, #108]
    c08c:	ldp	x20, x19, [sp, #32]
    c090:	ldp	x22, x21, [sp, #16]
    c094:	ldp	x29, x30, [sp], #48
    c098:	ret

000000000000c09c <gzseek@@Base>:
    c09c:	stp	x29, x30, [sp, #-16]!
    c0a0:	mov	x29, sp
    c0a4:	bl	23d0 <gzseek64@plt>
    c0a8:	ldp	x29, x30, [sp], #16
    c0ac:	ret

000000000000c0b0 <gztell64@@ZLIB_1.2.3.3>:
    c0b0:	cbz	x0, c0e8 <gztell64@@ZLIB_1.2.3.3+0x38>
    c0b4:	ldr	w8, [x0, #24]
    c0b8:	mov	w9, #0x79b1                	// #31153
    c0bc:	cmp	w8, w9
    c0c0:	b.eq	c0d0 <gztell64@@ZLIB_1.2.3.3+0x20>  // b.none
    c0c4:	mov	w9, #0x1c4f                	// #7247
    c0c8:	cmp	w8, w9
    c0cc:	b.ne	c0e8 <gztell64@@ZLIB_1.2.3.3+0x38>  // b.any
    c0d0:	ldr	w9, [x0, #104]
    c0d4:	ldr	x8, [x0, #16]
    c0d8:	cbz	w9, c0f0 <gztell64@@ZLIB_1.2.3.3+0x40>
    c0dc:	ldr	x9, [x0, #96]
    c0e0:	add	x0, x9, x8
    c0e4:	ret
    c0e8:	mov	x0, #0xffffffffffffffff    	// #-1
    c0ec:	ret
    c0f0:	add	x0, xzr, x8
    c0f4:	ret

000000000000c0f8 <gztell@@Base>:
    c0f8:	stp	x29, x30, [sp, #-16]!
    c0fc:	mov	x29, sp
    c100:	bl	24c0 <gztell64@plt>
    c104:	ldp	x29, x30, [sp], #16
    c108:	ret

000000000000c10c <gzoffset64@@ZLIB_1.2.3.5>:
    c10c:	stp	x29, x30, [sp, #-32]!
    c110:	str	x19, [sp, #16]
    c114:	mov	x29, sp
    c118:	cbz	x0, c170 <gzoffset64@@ZLIB_1.2.3.5+0x64>
    c11c:	ldr	w8, [x0, #24]
    c120:	mov	w9, #0x79b1                	// #31153
    c124:	mov	x19, x0
    c128:	cmp	w8, w9
    c12c:	b.eq	c13c <gzoffset64@@ZLIB_1.2.3.5+0x30>  // b.none
    c130:	mov	w9, #0x1c4f                	// #7247
    c134:	cmp	w8, w9
    c138:	b.ne	c170 <gzoffset64@@ZLIB_1.2.3.5+0x64>  // b.any
    c13c:	ldr	w0, [x19, #28]
    c140:	mov	w2, #0x1                   	// #1
    c144:	mov	x1, xzr
    c148:	bl	24b0 <lseek64@plt>
    c14c:	cmn	x0, #0x1
    c150:	b.eq	c174 <gzoffset64@@ZLIB_1.2.3.5+0x68>  // b.none
    c154:	ldr	w8, [x19, #24]
    c158:	mov	w9, #0x1c4f                	// #7247
    c15c:	cmp	w8, w9
    c160:	b.ne	c174 <gzoffset64@@ZLIB_1.2.3.5+0x68>  // b.any
    c164:	ldr	w8, [x19, #128]
    c168:	sub	x0, x0, x8
    c16c:	b	c174 <gzoffset64@@ZLIB_1.2.3.5+0x68>
    c170:	mov	x0, #0xffffffffffffffff    	// #-1
    c174:	ldr	x19, [sp, #16]
    c178:	ldp	x29, x30, [sp], #32
    c17c:	ret

000000000000c180 <gzoffset@@ZLIB_1.2.3.5>:
    c180:	stp	x29, x30, [sp, #-16]!
    c184:	mov	x29, sp
    c188:	bl	25b0 <gzoffset64@plt>
    c18c:	ldp	x29, x30, [sp], #16
    c190:	ret

000000000000c194 <gzeof@@Base>:
    c194:	cbz	x0, c1ac <gzeof@@Base+0x18>
    c198:	ldr	w8, [x0, #24]
    c19c:	mov	w9, #0x1c4f                	// #7247
    c1a0:	cmp	w8, w9
    c1a4:	b.ne	c1b0 <gzeof@@Base+0x1c>  // b.any
    c1a8:	ldr	w0, [x0, #84]
    c1ac:	ret
    c1b0:	mov	w0, wzr
    c1b4:	ret

000000000000c1b8 <gzerror@@Base>:
    c1b8:	cbz	x0, c218 <gzerror@@Base+0x60>
    c1bc:	ldr	w8, [x0, #24]
    c1c0:	mov	w9, #0x79b1                	// #31153
    c1c4:	cmp	w8, w9
    c1c8:	b.eq	c1d8 <gzerror@@Base+0x20>  // b.none
    c1cc:	mov	w9, #0x1c4f                	// #7247
    c1d0:	cmp	w8, w9
    c1d4:	b.ne	c1fc <gzerror@@Base+0x44>  // b.any
    c1d8:	cbz	x1, c1e4 <gzerror@@Base+0x2c>
    c1dc:	ldr	w8, [x0, #108]
    c1e0:	str	w8, [x1]
    c1e4:	ldr	w8, [x0, #108]
    c1e8:	cmn	w8, #0x4
    c1ec:	b.ne	c204 <gzerror@@Base+0x4c>  // b.any
    c1f0:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c1f4:	add	x0, x0, #0x8f6
    c1f8:	ret
    c1fc:	mov	x0, xzr
    c200:	ret
    c204:	ldr	x8, [x0, #112]
    c208:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c20c:	add	x9, x9, #0x90d
    c210:	cmp	x8, #0x0
    c214:	csel	x0, x9, x8, eq  // eq = none
    c218:	ret

000000000000c21c <gzclearerr@@ZLIB_1.2.0.2>:
    c21c:	stp	x29, x30, [sp, #-16]!
    c220:	mov	x29, sp
    c224:	cbz	x0, c254 <gzclearerr@@ZLIB_1.2.0.2+0x38>
    c228:	ldr	w8, [x0, #24]
    c22c:	mov	w9, #0x79b1                	// #31153
    c230:	cmp	w8, w9
    c234:	b.eq	c248 <gzclearerr@@ZLIB_1.2.0.2+0x2c>  // b.none
    c238:	mov	w9, #0x1c4f                	// #7247
    c23c:	cmp	w8, w9
    c240:	b.ne	c254 <gzclearerr@@ZLIB_1.2.0.2+0x38>  // b.any
    c244:	str	xzr, [x0, #80]
    c248:	mov	w1, wzr
    c24c:	mov	x2, xzr
    c250:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    c254:	ldp	x29, x30, [sp], #16
    c258:	ret

000000000000c25c <gzread@@Base>:
    c25c:	stp	x29, x30, [sp, #-32]!
    c260:	str	x19, [sp, #16]
    c264:	mov	x29, sp
    c268:	cbz	x0, c2cc <gzread@@Base+0x70>
    c26c:	ldr	w8, [x0, #24]
    c270:	mov	w9, #0x1c4f                	// #7247
    c274:	mov	x19, x0
    c278:	cmp	w8, w9
    c27c:	b.ne	c2cc <gzread@@Base+0x70>  // b.any
    c280:	ldr	w8, [x19, #108]
    c284:	cbz	w8, c290 <gzread@@Base+0x34>
    c288:	cmn	w8, #0x5
    c28c:	b.ne	c2cc <gzread@@Base+0x70>  // b.any
    c290:	tbnz	w2, #31, c2b8 <gzread@@Base+0x5c>
    c294:	mov	w2, w2
    c298:	mov	x0, x19
    c29c:	bl	c2dc <gzread@@Base+0x80>
    c2a0:	cbnz	w0, c2d0 <gzread@@Base+0x74>
    c2a4:	ldr	w8, [x19, #108]
    c2a8:	cbz	w8, c2d0 <gzread@@Base+0x74>
    c2ac:	cmn	w8, #0x5
    c2b0:	b.eq	c2d0 <gzread@@Base+0x74>  // b.none
    c2b4:	b	c2cc <gzread@@Base+0x70>
    c2b8:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c2bc:	add	x2, x2, #0x915
    c2c0:	mov	w1, #0xfffffffe            	// #-2
    c2c4:	mov	x0, x19
    c2c8:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    c2cc:	mov	w0, #0xffffffff            	// #-1
    c2d0:	ldr	x19, [sp, #16]
    c2d4:	ldp	x29, x30, [sp], #32
    c2d8:	ret
    c2dc:	stp	x29, x30, [sp, #-64]!
    c2e0:	str	x23, [sp, #16]
    c2e4:	stp	x22, x21, [sp, #32]
    c2e8:	stp	x20, x19, [sp, #48]
    c2ec:	mov	x29, sp
    c2f0:	cbz	x2, c420 <gzread@@Base+0x1c4>
    c2f4:	ldr	w8, [x0, #104]
    c2f8:	mov	x20, x2
    c2fc:	mov	x21, x1
    c300:	mov	x19, x0
    c304:	cbz	w8, c320 <gzread@@Base+0xc4>
    c308:	ldr	x1, [x19, #96]
    c30c:	mov	x0, x19
    c310:	str	wzr, [x19, #104]
    c314:	bl	c6ac <gzungetc@@ZLIB_1.2.0.2+0x140>
    c318:	cmn	w0, #0x1
    c31c:	b.eq	c420 <gzread@@Base+0x1c4>  // b.none
    c320:	mov	x22, xzr
    c324:	mov	w23, #0xffffffff            	// #-1
    c328:	b	c340 <gzread@@Base+0xe4>
    c32c:	mov	x0, x19
    c330:	bl	c878 <gzgets@@Base+0x14c>
    c334:	cmn	w0, #0x1
    c338:	b.eq	c420 <gzread@@Base+0x1c4>  // b.none
    c33c:	cbz	x20, c424 <gzread@@Base+0x1c8>
    c340:	cmp	x20, x23
    c344:	csinv	w2, w20, wzr, cc  // cc = lo, ul, last
    c348:	str	w2, [x29, #28]
    c34c:	ldr	w8, [x19]
    c350:	cbz	w8, c3b0 <gzread@@Base+0x154>
    c354:	cmp	w8, w2
    c358:	b.cs	c360 <gzread@@Base+0x104>  // b.hs, b.nlast
    c35c:	str	w8, [x29, #28]
    c360:	ldr	x1, [x19, #8]
    c364:	ldr	w2, [x29, #28]
    c368:	mov	x0, x21
    c36c:	bl	23a0 <memcpy@plt>
    c370:	ldr	w8, [x29, #28]
    c374:	ldr	x9, [x19, #8]
    c378:	ldr	w10, [x19]
    c37c:	add	x9, x9, x8
    c380:	str	x9, [x19, #8]
    c384:	sub	w8, w10, w8
    c388:	str	w8, [x19]
    c38c:	ldr	w8, [x29, #28]
    c390:	ldr	x9, [x19, #16]
    c394:	sub	x20, x20, x8
    c398:	add	x21, x21, x8
    c39c:	add	x22, x22, x8
    c3a0:	add	x8, x9, x8
    c3a4:	str	x8, [x19, #16]
    c3a8:	cbnz	x20, c340 <gzread@@Base+0xe4>
    c3ac:	b	c424 <gzread@@Base+0x1c8>
    c3b0:	ldr	w8, [x19, #80]
    c3b4:	cbz	w8, c3c0 <gzread@@Base+0x164>
    c3b8:	ldr	w8, [x19, #128]
    c3bc:	cbz	w8, c43c <gzread@@Base+0x1e0>
    c3c0:	ldr	w8, [x19, #68]
    c3c4:	cbz	w8, c32c <gzread@@Base+0xd0>
    c3c8:	ldr	w9, [x19, #40]
    c3cc:	cmp	w2, w9, lsl #1
    c3d0:	b.cc	c32c <gzread@@Base+0xd0>  // b.lo, b.ul, b.last
    c3d4:	cmp	w8, #0x1
    c3d8:	b.ne	c3f8 <gzread@@Base+0x19c>  // b.any
    c3dc:	add	x3, x29, #0x1c
    c3e0:	mov	x0, x19
    c3e4:	mov	x1, x21
    c3e8:	bl	cba4 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    c3ec:	cmn	w0, #0x1
    c3f0:	b.ne	c38c <gzread@@Base+0x130>  // b.any
    c3f4:	b	c420 <gzread@@Base+0x1c4>
    c3f8:	mov	x0, x19
    c3fc:	str	w2, [x19, #152]
    c400:	str	x21, [x19, #144]
    c404:	bl	cc5c <gzclose_r@@ZLIB_1.2.3.5+0x158>
    c408:	cmn	w0, #0x1
    c40c:	b.eq	c420 <gzread@@Base+0x1c4>  // b.none
    c410:	ldr	w9, [x19]
    c414:	mov	w8, wzr
    c418:	str	w9, [x29, #28]
    c41c:	b	c388 <gzread@@Base+0x12c>
    c420:	mov	x22, xzr
    c424:	mov	x0, x22
    c428:	ldp	x20, x19, [sp, #48]
    c42c:	ldp	x22, x21, [sp, #32]
    c430:	ldr	x23, [sp, #16]
    c434:	ldp	x29, x30, [sp], #64
    c438:	ret
    c43c:	mov	w8, #0x1                   	// #1
    c440:	str	w8, [x19, #84]
    c444:	b	c424 <gzread@@Base+0x1c8>

000000000000c448 <gzfread@@ZLIB_1.2.9>:
    c448:	stp	x29, x30, [sp, #-32]!
    c44c:	str	x19, [sp, #16]
    c450:	mov	x29, sp
    c454:	cbz	x3, c4c4 <gzfread@@ZLIB_1.2.9+0x7c>
    c458:	ldr	w8, [x3, #24]
    c45c:	mov	w9, #0x1c4f                	// #7247
    c460:	cmp	w8, w9
    c464:	b.ne	c4c4 <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    c468:	ldr	w8, [x3, #108]
    c46c:	mov	x19, x1
    c470:	mov	x1, x0
    c474:	cbz	w8, c480 <gzfread@@ZLIB_1.2.9+0x38>
    c478:	cmn	w8, #0x5
    c47c:	b.ne	c4c4 <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    c480:	umulh	x8, x19, x2
    c484:	cmp	xzr, x8
    c488:	cset	w8, ne  // ne = any
    c48c:	cbz	x19, c4ac <gzfread@@ZLIB_1.2.9+0x64>
    c490:	cbz	w8, c4ac <gzfread@@ZLIB_1.2.9+0x64>
    c494:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c498:	add	x2, x2, #0x934
    c49c:	mov	w1, #0xfffffffe            	// #-2
    c4a0:	mov	x0, x3
    c4a4:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    c4a8:	b	c4c4 <gzfread@@ZLIB_1.2.9+0x7c>
    c4ac:	mul	x2, x19, x2
    c4b0:	cbz	x2, c4c4 <gzfread@@ZLIB_1.2.9+0x7c>
    c4b4:	mov	x0, x3
    c4b8:	bl	c2dc <gzread@@Base+0x80>
    c4bc:	udiv	x0, x0, x19
    c4c0:	b	c4c8 <gzfread@@ZLIB_1.2.9+0x80>
    c4c4:	mov	x0, xzr
    c4c8:	ldr	x19, [sp, #16]
    c4cc:	ldp	x29, x30, [sp], #32
    c4d0:	ret

000000000000c4d4 <gzgetc@@Base>:
    c4d4:	sub	sp, sp, #0x20
    c4d8:	stp	x29, x30, [sp, #16]
    c4dc:	add	x29, sp, #0x10
    c4e0:	cbz	x0, c52c <gzgetc@@Base+0x58>
    c4e4:	ldr	w8, [x0, #24]
    c4e8:	mov	w9, #0x1c4f                	// #7247
    c4ec:	cmp	w8, w9
    c4f0:	b.ne	c52c <gzgetc@@Base+0x58>  // b.any
    c4f4:	ldr	w8, [x0, #108]
    c4f8:	cbz	w8, c504 <gzgetc@@Base+0x30>
    c4fc:	cmn	w8, #0x5
    c500:	b.ne	c52c <gzgetc@@Base+0x58>  // b.any
    c504:	ldr	w8, [x0]
    c508:	cbz	w8, c53c <gzgetc@@Base+0x68>
    c50c:	ldp	x10, x9, [x0, #8]
    c510:	sub	w8, w8, #0x1
    c514:	str	w8, [x0]
    c518:	add	x8, x9, #0x1
    c51c:	add	x9, x10, #0x1
    c520:	stp	x9, x8, [x0, #8]
    c524:	ldrb	w0, [x10]
    c528:	b	c530 <gzgetc@@Base+0x5c>
    c52c:	mov	w0, #0xffffffff            	// #-1
    c530:	ldp	x29, x30, [sp, #16]
    c534:	add	sp, sp, #0x20
    c538:	ret
    c53c:	sub	x1, x29, #0x4
    c540:	mov	w2, #0x1                   	// #1
    c544:	bl	c2dc <gzread@@Base+0x80>
    c548:	ldurb	w8, [x29, #-4]
    c54c:	cmp	w0, #0x1
    c550:	csinv	w0, w8, wzr, ge  // ge = tcont
    c554:	b	c530 <gzgetc@@Base+0x5c>

000000000000c558 <gzgetc_@@ZLIB_1.2.5.2>:
    c558:	stp	x29, x30, [sp, #-16]!
    c55c:	mov	x29, sp
    c560:	bl	2410 <gzgetc@plt>
    c564:	ldp	x29, x30, [sp], #16
    c568:	ret

000000000000c56c <gzungetc@@ZLIB_1.2.0.2>:
    c56c:	stp	x29, x30, [sp, #-32]!
    c570:	stp	x20, x19, [sp, #16]
    c574:	mov	x29, sp
    c578:	cbz	x1, c604 <gzungetc@@ZLIB_1.2.0.2+0x98>
    c57c:	ldr	w8, [x1, #24]
    c580:	mov	w9, #0x1c4f                	// #7247
    c584:	mov	x19, x1
    c588:	cmp	w8, w9
    c58c:	b.ne	c604 <gzungetc@@ZLIB_1.2.0.2+0x98>  // b.any
    c590:	ldr	w8, [x19, #108]
    c594:	mov	w20, w0
    c598:	cbz	w8, c5a4 <gzungetc@@ZLIB_1.2.0.2+0x38>
    c59c:	cmn	w8, #0x5
    c5a0:	b.ne	c604 <gzungetc@@ZLIB_1.2.0.2+0x98>  // b.any
    c5a4:	ldr	w8, [x19, #104]
    c5a8:	cbz	w8, c5d4 <gzungetc@@ZLIB_1.2.0.2+0x68>
    c5ac:	ldr	x1, [x19, #96]
    c5b0:	mov	x0, x19
    c5b4:	str	wzr, [x19, #104]
    c5b8:	bl	c6ac <gzungetc@@ZLIB_1.2.0.2+0x140>
    c5bc:	mov	w8, w0
    c5c0:	mov	w0, #0xffffffff            	// #-1
    c5c4:	tbnz	w20, #31, c608 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    c5c8:	cmn	w8, #0x1
    c5cc:	b.ne	c5d8 <gzungetc@@ZLIB_1.2.0.2+0x6c>  // b.any
    c5d0:	b	c608 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    c5d4:	tbnz	w20, #31, c604 <gzungetc@@ZLIB_1.2.0.2+0x98>
    c5d8:	ldr	w8, [x19]
    c5dc:	cbz	w8, c614 <gzungetc@@ZLIB_1.2.0.2+0xa8>
    c5e0:	ldr	w9, [x19, #40]
    c5e4:	lsl	w10, w9, #1
    c5e8:	cmp	w8, w10
    c5ec:	b.ne	c63c <gzungetc@@ZLIB_1.2.0.2+0xd0>  // b.any
    c5f0:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    c5f4:	add	x2, x2, #0x955
    c5f8:	mov	w1, #0xfffffffd            	// #-3
    c5fc:	mov	x0, x19
    c600:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    c604:	mov	w0, #0xffffffff            	// #-1
    c608:	ldp	x20, x19, [sp, #16]
    c60c:	ldp	x29, x30, [sp], #32
    c610:	ret
    c614:	ldr	w8, [x19, #40]
    c618:	ldr	x9, [x19, #56]
    c61c:	mov	w10, #0x1                   	// #1
    c620:	str	w10, [x19]
    c624:	lsl	w8, w8, #1
    c628:	add	x8, x9, x8
    c62c:	sub	x9, x8, #0x1
    c630:	str	x9, [x19, #8]
    c634:	sturb	w20, [x8, #-1]
    c638:	b	c694 <gzungetc@@ZLIB_1.2.0.2+0x128>
    c63c:	ldr	x9, [x19, #8]
    c640:	ldr	x11, [x19, #56]
    c644:	cmp	x9, x11
    c648:	b.ne	c678 <gzungetc@@ZLIB_1.2.0.2+0x10c>  // b.any
    c64c:	ldr	x12, [x19, #56]
    c650:	add	x9, x11, x8
    c654:	add	x8, x11, w10, uxtw
    c658:	cmp	x9, x12
    c65c:	b.ls	c674 <gzungetc@@ZLIB_1.2.0.2+0x108>  // b.plast
    c660:	ldrb	w10, [x9, #-1]!
    c664:	strb	w10, [x8, #-1]!
    c668:	ldr	x10, [x19, #56]
    c66c:	cmp	x9, x10
    c670:	b.hi	c660 <gzungetc@@ZLIB_1.2.0.2+0xf4>  // b.pmore
    c674:	str	x8, [x19, #8]
    c678:	ldr	w8, [x19]
    c67c:	ldr	x9, [x19, #8]
    c680:	add	w8, w8, #0x1
    c684:	sub	x10, x9, #0x1
    c688:	str	w8, [x19]
    c68c:	str	x10, [x19, #8]
    c690:	sturb	w20, [x9, #-1]
    c694:	ldr	x8, [x19, #16]
    c698:	mov	w0, w20
    c69c:	str	wzr, [x19, #84]
    c6a0:	sub	x8, x8, #0x1
    c6a4:	str	x8, [x19, #16]
    c6a8:	b	c608 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    c6ac:	stp	x29, x30, [sp, #-32]!
    c6b0:	stp	x20, x19, [sp, #16]
    c6b4:	mov	x29, sp
    c6b8:	cbz	x1, c71c <gzungetc@@ZLIB_1.2.0.2+0x1b0>
    c6bc:	mov	x19, x1
    c6c0:	mov	x20, x0
    c6c4:	b	c6f0 <gzungetc@@ZLIB_1.2.0.2+0x184>
    c6c8:	ldp	x9, x10, [x20, #8]
    c6cc:	cmp	x19, x8
    c6d0:	csel	w11, w19, w8, lt  // lt = tstop
    c6d4:	sub	w8, w8, w11
    c6d8:	str	w8, [x20]
    c6dc:	add	x8, x9, x11
    c6e0:	add	x9, x10, x11
    c6e4:	stp	x8, x9, [x20, #8]
    c6e8:	sub	x19, x19, x11
    c6ec:	cbz	x19, c71c <gzungetc@@ZLIB_1.2.0.2+0x1b0>
    c6f0:	ldr	w8, [x20]
    c6f4:	cbnz	w8, c6c8 <gzungetc@@ZLIB_1.2.0.2+0x15c>
    c6f8:	ldr	w8, [x20, #80]
    c6fc:	cbz	w8, c708 <gzungetc@@ZLIB_1.2.0.2+0x19c>
    c700:	ldr	w8, [x20, #128]
    c704:	cbz	w8, c71c <gzungetc@@ZLIB_1.2.0.2+0x1b0>
    c708:	mov	x0, x20
    c70c:	bl	c878 <gzgets@@Base+0x14c>
    c710:	cmn	w0, #0x1
    c714:	b.ne	c6ec <gzungetc@@ZLIB_1.2.0.2+0x180>  // b.any
    c718:	b	c720 <gzungetc@@ZLIB_1.2.0.2+0x1b4>
    c71c:	mov	w0, wzr
    c720:	ldp	x20, x19, [sp, #16]
    c724:	ldp	x29, x30, [sp], #32
    c728:	ret

000000000000c72c <gzgets@@Base>:
    c72c:	stp	x29, x30, [sp, #-80]!
    c730:	stp	x20, x19, [sp, #64]
    c734:	mov	x20, x0
    c738:	mov	x0, xzr
    c73c:	str	x25, [sp, #16]
    c740:	stp	x24, x23, [sp, #32]
    c744:	stp	x22, x21, [sp, #48]
    c748:	mov	x29, sp
    c74c:	cbz	x20, c860 <gzgets@@Base+0x134>
    c750:	mov	x19, x1
    c754:	cbz	x1, c860 <gzgets@@Base+0x134>
    c758:	mov	w21, w2
    c75c:	cmp	w2, #0x1
    c760:	b.lt	c860 <gzgets@@Base+0x134>  // b.tstop
    c764:	ldr	w8, [x20, #24]
    c768:	mov	w9, #0x1c4f                	// #7247
    c76c:	cmp	w8, w9
    c770:	b.ne	c85c <gzgets@@Base+0x130>  // b.any
    c774:	ldr	w8, [x20, #108]
    c778:	cbz	w8, c784 <gzgets@@Base+0x58>
    c77c:	cmn	w8, #0x5
    c780:	b.ne	c85c <gzgets@@Base+0x130>  // b.any
    c784:	ldr	w8, [x20, #104]
    c788:	cbz	w8, c7a4 <gzgets@@Base+0x78>
    c78c:	ldr	x1, [x20, #96]
    c790:	mov	x0, x20
    c794:	str	wzr, [x20, #104]
    c798:	bl	c6ac <gzungetc@@ZLIB_1.2.0.2+0x140>
    c79c:	cmn	w0, #0x1
    c7a0:	b.eq	c85c <gzgets@@Base+0x130>  // b.none
    c7a4:	subs	w25, w21, #0x1
    c7a8:	mov	x21, x19
    c7ac:	b.eq	c848 <gzgets@@Base+0x11c>  // b.none
    c7b0:	mov	x21, x19
    c7b4:	ldr	w8, [x20]
    c7b8:	cbnz	w8, c7cc <gzgets@@Base+0xa0>
    c7bc:	mov	x0, x20
    c7c0:	bl	c878 <gzgets@@Base+0x14c>
    c7c4:	cmn	w0, #0x1
    c7c8:	b.eq	c85c <gzgets@@Base+0x130>  // b.none
    c7cc:	ldr	w8, [x20]
    c7d0:	cbz	w8, c840 <gzgets@@Base+0x114>
    c7d4:	ldr	x23, [x20, #8]
    c7d8:	cmp	w8, w25
    c7dc:	csel	w22, w25, w8, hi  // hi = pmore
    c7e0:	mov	w1, #0xa                   	// #10
    c7e4:	mov	x0, x23
    c7e8:	mov	x2, x22
    c7ec:	bl	25f0 <memchr@plt>
    c7f0:	mov	x24, x0
    c7f4:	sub	w8, w24, w23
    c7f8:	cmp	x0, #0x0
    c7fc:	csinc	w22, w22, w8, eq  // eq = none
    c800:	mov	x0, x21
    c804:	mov	x1, x23
    c808:	mov	x2, x22
    c80c:	bl	23a0 <memcpy@plt>
    c810:	ldr	w8, [x20]
    c814:	ldp	x9, x10, [x20, #8]
    c818:	add	x21, x21, x22
    c81c:	sub	w8, w8, w22
    c820:	add	x9, x9, x22
    c824:	add	x10, x10, x22
    c828:	str	w8, [x20]
    c82c:	stp	x9, x10, [x20, #8]
    c830:	cbnz	x24, c848 <gzgets@@Base+0x11c>
    c834:	sub	w25, w25, w22
    c838:	cbnz	w25, c7b4 <gzgets@@Base+0x88>
    c83c:	b	c848 <gzgets@@Base+0x11c>
    c840:	mov	w8, #0x1                   	// #1
    c844:	str	w8, [x20, #84]
    c848:	cmp	x21, x19
    c84c:	b.eq	c85c <gzgets@@Base+0x130>  // b.none
    c850:	mov	x0, x19
    c854:	strb	wzr, [x21]
    c858:	b	c860 <gzgets@@Base+0x134>
    c85c:	mov	x0, xzr
    c860:	ldp	x20, x19, [sp, #64]
    c864:	ldp	x22, x21, [sp, #48]
    c868:	ldp	x24, x23, [sp, #32]
    c86c:	ldr	x25, [sp, #16]
    c870:	ldp	x29, x30, [sp], #80
    c874:	ret
    c878:	stp	x29, x30, [sp, #-32]!
    c87c:	str	x19, [sp, #16]
    c880:	mov	x19, x0
    c884:	mov	x29, sp
    c888:	ldr	w8, [x19, #68]
    c88c:	cbz	w8, c8a4 <gzgets@@Base+0x178>
    c890:	cmp	w8, #0x2
    c894:	b.eq	c8c0 <gzgets@@Base+0x194>  // b.none
    c898:	cmp	w8, #0x1
    c89c:	b.ne	c8e4 <gzgets@@Base+0x1b8>  // b.any
    c8a0:	b	c904 <gzgets@@Base+0x1d8>
    c8a4:	mov	x0, x19
    c8a8:	bl	c988 <gzdirect@@ZLIB_1.2.2.3+0x4c>
    c8ac:	cmn	w0, #0x1
    c8b0:	b.eq	c930 <gzgets@@Base+0x204>  // b.none
    c8b4:	ldr	w8, [x19, #68]
    c8b8:	cbnz	w8, c8e4 <gzgets@@Base+0x1b8>
    c8bc:	b	c8fc <gzgets@@Base+0x1d0>
    c8c0:	ldr	w8, [x19, #40]
    c8c4:	ldr	x9, [x19, #56]
    c8c8:	mov	x0, x19
    c8cc:	lsl	w8, w8, #1
    c8d0:	str	w8, [x19, #152]
    c8d4:	str	x9, [x19, #144]
    c8d8:	bl	cc5c <gzclose_r@@ZLIB_1.2.3.5+0x158>
    c8dc:	cmn	w0, #0x1
    c8e0:	b.eq	c930 <gzgets@@Base+0x204>  // b.none
    c8e4:	ldr	w8, [x19]
    c8e8:	cbnz	w8, c8fc <gzgets@@Base+0x1d0>
    c8ec:	ldr	w8, [x19, #80]
    c8f0:	cbz	w8, c888 <gzgets@@Base+0x15c>
    c8f4:	ldr	w8, [x19, #128]
    c8f8:	cbnz	w8, c888 <gzgets@@Base+0x15c>
    c8fc:	mov	w0, wzr
    c900:	b	c930 <gzgets@@Base+0x204>
    c904:	ldr	w8, [x19, #40]
    c908:	ldr	x1, [x19, #56]
    c90c:	mov	x0, x19
    c910:	mov	x3, x19
    c914:	lsl	w2, w8, #1
    c918:	bl	cba4 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    c91c:	cmn	w0, #0x1
    c920:	b.eq	c930 <gzgets@@Base+0x204>  // b.none
    c924:	ldr	x8, [x19, #56]
    c928:	mov	w0, wzr
    c92c:	str	x8, [x19, #8]
    c930:	ldr	x19, [sp, #16]
    c934:	ldp	x29, x30, [sp], #32
    c938:	ret

000000000000c93c <gzdirect@@ZLIB_1.2.2.3>:
    c93c:	cbz	x0, c984 <gzdirect@@ZLIB_1.2.2.3+0x48>
    c940:	stp	x29, x30, [sp, #-32]!
    c944:	ldr	w8, [x0, #24]
    c948:	mov	w9, #0x1c4f                	// #7247
    c94c:	str	x19, [sp, #16]
    c950:	mov	x19, x0
    c954:	cmp	w8, w9
    c958:	mov	x29, sp
    c95c:	b.ne	c978 <gzdirect@@ZLIB_1.2.2.3+0x3c>  // b.any
    c960:	ldr	w8, [x19, #68]
    c964:	cbnz	w8, c978 <gzdirect@@ZLIB_1.2.2.3+0x3c>
    c968:	ldr	w8, [x19]
    c96c:	cbnz	w8, c978 <gzdirect@@ZLIB_1.2.2.3+0x3c>
    c970:	mov	x0, x19
    c974:	bl	c988 <gzdirect@@ZLIB_1.2.2.3+0x4c>
    c978:	ldr	w0, [x19, #64]
    c97c:	ldr	x19, [sp, #16]
    c980:	ldp	x29, x30, [sp], #32
    c984:	ret
    c988:	stp	x29, x30, [sp, #-48]!
    c98c:	stp	x22, x21, [sp, #16]
    c990:	stp	x20, x19, [sp, #32]
    c994:	ldr	w8, [x0, #40]
    c998:	mov	x19, x0
    c99c:	add	x20, x0, #0x78
    c9a0:	mov	x29, sp
    c9a4:	cbz	w8, ca40 <gzdirect@@ZLIB_1.2.2.3+0x104>
    c9a8:	ldr	w8, [x19, #128]
    c9ac:	cmp	w8, #0x1
    c9b0:	b.hi	c9cc <gzdirect@@ZLIB_1.2.2.3+0x90>  // b.pmore
    c9b4:	mov	x0, x19
    c9b8:	bl	cd80 <gzclose_r@@ZLIB_1.2.3.5+0x27c>
    c9bc:	cmn	w0, #0x1
    c9c0:	b.eq	caf4 <gzdirect@@ZLIB_1.2.2.3+0x1b8>  // b.none
    c9c4:	ldr	w8, [x19, #128]
    c9c8:	cbz	w8, caf0 <gzdirect@@ZLIB_1.2.2.3+0x1b4>
    c9cc:	ldr	w2, [x19, #128]
    c9d0:	cmp	w2, #0x2
    c9d4:	b.cc	ca08 <gzdirect@@ZLIB_1.2.2.3+0xcc>  // b.lo, b.ul, b.last
    c9d8:	ldr	x8, [x20]
    c9dc:	ldrb	w9, [x8]
    c9e0:	cmp	w9, #0x1f
    c9e4:	b.ne	ca08 <gzdirect@@ZLIB_1.2.2.3+0xcc>  // b.any
    c9e8:	ldrb	w8, [x8, #1]
    c9ec:	cmp	w8, #0x8b
    c9f0:	b.ne	ca08 <gzdirect@@ZLIB_1.2.2.3+0xcc>  // b.any
    c9f4:	mov	x0, x20
    c9f8:	bl	2610 <inflateReset@plt>
    c9fc:	mov	w0, wzr
    ca00:	mov	x8, #0x200000000           	// #8589934592
    ca04:	b	ca38 <gzdirect@@ZLIB_1.2.2.3+0xfc>
    ca08:	ldr	w8, [x19, #64]
    ca0c:	cbz	w8, cad8 <gzdirect@@ZLIB_1.2.2.3+0x19c>
    ca10:	ldr	x0, [x19, #56]
    ca14:	str	x0, [x19, #8]
    ca18:	cbz	w2, ca30 <gzdirect@@ZLIB_1.2.2.3+0xf4>
    ca1c:	ldr	x1, [x19, #120]
    ca20:	bl	23a0 <memcpy@plt>
    ca24:	ldr	w8, [x19, #128]
    ca28:	str	wzr, [x19, #128]
    ca2c:	str	w8, [x19]
    ca30:	mov	w0, wzr
    ca34:	mov	x8, #0x100000001           	// #4294967297
    ca38:	str	x8, [x19, #64]
    ca3c:	b	caf4 <gzdirect@@ZLIB_1.2.2.3+0x1b8>
    ca40:	ldr	w21, [x19, #44]
    ca44:	mov	x0, x21
    ca48:	bl	2460 <malloc@plt>
    ca4c:	mov	x22, x0
    ca50:	str	x0, [x19, #48]
    ca54:	lsl	w0, w21, #1
    ca58:	bl	2460 <malloc@plt>
    ca5c:	str	x0, [x19, #56]
    ca60:	cbz	x22, cab0 <gzdirect@@ZLIB_1.2.2.3+0x174>
    ca64:	cbz	x0, cab0 <gzdirect@@ZLIB_1.2.2.3+0x174>
    ca68:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    ca6c:	add	x2, x2, #0x899
    ca70:	mov	w1, #0x1f                  	// #31
    ca74:	mov	w3, #0x70                  	// #112
    ca78:	mov	x0, x20
    ca7c:	str	w21, [x19, #40]
    ca80:	str	wzr, [x19, #128]
    ca84:	str	xzr, [x19, #120]
    ca88:	stp	xzr, xzr, [x19, #192]
    ca8c:	str	xzr, [x19, #184]
    ca90:	bl	2600 <inflateInit2_@plt>
    ca94:	cbz	w0, c9a8 <gzdirect@@ZLIB_1.2.2.3+0x6c>
    ca98:	ldr	x0, [x19, #56]
    ca9c:	bl	2570 <free@plt>
    caa0:	ldr	x0, [x19, #48]
    caa4:	bl	2570 <free@plt>
    caa8:	str	wzr, [x19, #40]
    caac:	b	cabc <gzdirect@@ZLIB_1.2.2.3+0x180>
    cab0:	bl	2570 <free@plt>
    cab4:	ldr	x0, [x19, #48]
    cab8:	bl	2570 <free@plt>
    cabc:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    cac0:	add	x2, x2, #0x8f6
    cac4:	mov	w1, #0xfffffffc            	// #-4
    cac8:	mov	x0, x19
    cacc:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    cad0:	mov	w0, #0xffffffff            	// #-1
    cad4:	b	caf4 <gzdirect@@ZLIB_1.2.2.3+0x1b8>
    cad8:	mov	w8, #0x1                   	// #1
    cadc:	mov	w0, wzr
    cae0:	str	wzr, [x19, #128]
    cae4:	str	w8, [x19, #80]
    cae8:	str	wzr, [x19]
    caec:	b	caf4 <gzdirect@@ZLIB_1.2.2.3+0x1b8>
    caf0:	mov	w0, wzr
    caf4:	ldp	x20, x19, [sp, #32]
    caf8:	ldp	x22, x21, [sp, #16]
    cafc:	ldp	x29, x30, [sp], #48
    cb00:	ret

000000000000cb04 <gzclose_r@@ZLIB_1.2.3.5>:
    cb04:	stp	x29, x30, [sp, #-48]!
    cb08:	str	x21, [sp, #16]
    cb0c:	stp	x20, x19, [sp, #32]
    cb10:	mov	x29, sp
    cb14:	cbz	x0, cb90 <gzclose_r@@ZLIB_1.2.3.5+0x8c>
    cb18:	ldr	w8, [x0, #24]
    cb1c:	mov	w9, #0x1c4f                	// #7247
    cb20:	mov	x19, x0
    cb24:	cmp	w8, w9
    cb28:	b.ne	cb90 <gzclose_r@@ZLIB_1.2.3.5+0x8c>  // b.any
    cb2c:	ldr	w8, [x19, #40]
    cb30:	cbz	w8, cb4c <gzclose_r@@ZLIB_1.2.3.5+0x48>
    cb34:	add	x0, x19, #0x78
    cb38:	bl	2550 <inflateEnd@plt>
    cb3c:	ldr	x0, [x19, #56]
    cb40:	bl	2570 <free@plt>
    cb44:	ldr	x0, [x19, #48]
    cb48:	bl	2570 <free@plt>
    cb4c:	ldr	w8, [x19, #108]
    cb50:	mov	x0, x19
    cb54:	mov	w1, wzr
    cb58:	mov	x2, xzr
    cb5c:	cmn	w8, #0x5
    cb60:	csel	w21, w8, wzr, eq  // eq = none
    cb64:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    cb68:	ldr	x0, [x19, #32]
    cb6c:	bl	2570 <free@plt>
    cb70:	ldr	w0, [x19, #28]
    cb74:	bl	2510 <close@plt>
    cb78:	mov	w20, w0
    cb7c:	mov	x0, x19
    cb80:	bl	2570 <free@plt>
    cb84:	cmp	w20, #0x0
    cb88:	csinv	w0, w21, wzr, eq  // eq = none
    cb8c:	b	cb94 <gzclose_r@@ZLIB_1.2.3.5+0x90>
    cb90:	mov	w0, #0xfffffffe            	// #-2
    cb94:	ldp	x20, x19, [sp, #32]
    cb98:	ldr	x21, [sp, #16]
    cb9c:	ldp	x29, x30, [sp], #48
    cba0:	ret
    cba4:	stp	x29, x30, [sp, #-64]!
    cba8:	str	x23, [sp, #16]
    cbac:	stp	x22, x21, [sp, #32]
    cbb0:	stp	x20, x19, [sp, #48]
    cbb4:	mov	x20, x3
    cbb8:	mov	w21, w2
    cbbc:	mov	x22, x1
    cbc0:	mov	x19, x0
    cbc4:	mov	w23, #0x40000000            	// #1073741824
    cbc8:	mov	x29, sp
    cbcc:	str	wzr, [x3]
    cbd0:	ldr	w8, [x20]
    cbd4:	ldr	w0, [x19, #28]
    cbd8:	sub	w9, w21, w8
    cbdc:	lsr	w10, w9, #30
    cbe0:	cmp	w10, #0x0
    cbe4:	csel	w2, w9, w23, eq  // eq = none
    cbe8:	add	x1, x22, x8
    cbec:	bl	25e0 <read@plt>
    cbf0:	cmp	w0, #0x1
    cbf4:	b.lt	cc0c <gzclose_r@@ZLIB_1.2.3.5+0x108>  // b.tstop
    cbf8:	ldr	w8, [x20]
    cbfc:	add	w8, w8, w0
    cc00:	cmp	w8, w21
    cc04:	str	w8, [x20]
    cc08:	b.cc	cbd0 <gzclose_r@@ZLIB_1.2.3.5+0xcc>  // b.lo, b.ul, b.last
    cc0c:	tbnz	w0, #31, cc24 <gzclose_r@@ZLIB_1.2.3.5+0x120>
    cc10:	mov	w20, wzr
    cc14:	cbnz	w0, cc44 <gzclose_r@@ZLIB_1.2.3.5+0x140>
    cc18:	mov	w8, #0x1                   	// #1
    cc1c:	str	w8, [x19, #80]
    cc20:	b	cc44 <gzclose_r@@ZLIB_1.2.3.5+0x140>
    cc24:	bl	2650 <__errno_location@plt>
    cc28:	ldr	w0, [x0]
    cc2c:	bl	2500 <strerror@plt>
    cc30:	mov	x2, x0
    cc34:	mov	w1, #0xffffffff            	// #-1
    cc38:	mov	x0, x19
    cc3c:	mov	w20, #0xffffffff            	// #-1
    cc40:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    cc44:	mov	w0, w20
    cc48:	ldp	x20, x19, [sp, #48]
    cc4c:	ldp	x22, x21, [sp, #32]
    cc50:	ldr	x23, [sp, #16]
    cc54:	ldp	x29, x30, [sp], #64
    cc58:	ret
    cc5c:	stp	x29, x30, [sp, #-64]!
    cc60:	stp	x22, x21, [sp, #32]
    cc64:	stp	x20, x19, [sp, #48]
    cc68:	ldr	w22, [x0, #152]
    cc6c:	str	x23, [sp, #16]
    cc70:	adrp	x23, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    cc74:	mov	x19, x0
    cc78:	mov	w20, wzr
    cc7c:	add	x21, x0, #0x78
    cc80:	add	x23, x23, #0x90e
    cc84:	mov	x29, sp
    cc88:	ldr	w8, [x19, #128]
    cc8c:	cbnz	w8, cca0 <gzclose_r@@ZLIB_1.2.3.5+0x19c>
    cc90:	mov	x0, x19
    cc94:	bl	cd80 <gzclose_r@@ZLIB_1.2.3.5+0x27c>
    cc98:	cmn	w0, #0x1
    cc9c:	b.eq	cd6c <gzclose_r@@ZLIB_1.2.3.5+0x268>  // b.none
    cca0:	ldr	w8, [x19, #128]
    cca4:	cbz	w8, cce8 <gzclose_r@@ZLIB_1.2.3.5+0x1e4>
    cca8:	mov	x0, x21
    ccac:	mov	w1, wzr
    ccb0:	bl	23f0 <inflate@plt>
    ccb4:	add	w8, w0, #0x4
    ccb8:	mov	w20, w0
    ccbc:	cmp	w8, #0x6
    ccc0:	b.hi	ccd4 <gzclose_r@@ZLIB_1.2.3.5+0x1d0>  // b.pmore
    ccc4:	adr	x9, ccd4 <gzclose_r@@ZLIB_1.2.3.5+0x1d0>
    ccc8:	ldrb	w10, [x23, x8]
    cccc:	add	x9, x9, x10, lsl #2
    ccd0:	br	x9
    ccd4:	cmp	w20, #0x1
    ccd8:	b.eq	ccfc <gzclose_r@@ZLIB_1.2.3.5+0x1f8>  // b.none
    ccdc:	ldr	w8, [x19, #152]
    cce0:	cbnz	w8, cc88 <gzclose_r@@ZLIB_1.2.3.5+0x184>
    cce4:	b	ccfc <gzclose_r@@ZLIB_1.2.3.5+0x1f8>
    cce8:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    ccec:	add	x2, x2, #0x974
    ccf0:	mov	w1, #0xfffffffb            	// #-5
    ccf4:	mov	x0, x19
    ccf8:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    ccfc:	ldr	w8, [x19, #152]
    cd00:	ldr	x9, [x19, #144]
    cd04:	cmp	w20, #0x1
    cd08:	mov	w0, wzr
    cd0c:	sub	w8, w22, w8
    cd10:	str	w8, [x19]
    cd14:	sub	x8, x9, x8
    cd18:	str	x8, [x19, #8]
    cd1c:	b.ne	cd6c <gzclose_r@@ZLIB_1.2.3.5+0x268>  // b.any
    cd20:	str	wzr, [x19, #68]
    cd24:	b	cd6c <gzclose_r@@ZLIB_1.2.3.5+0x268>
    cd28:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    cd2c:	add	x2, x2, #0x98b
    cd30:	mov	w1, #0xfffffffe            	// #-2
    cd34:	b	cd60 <gzclose_r@@ZLIB_1.2.3.5+0x25c>
    cd38:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    cd3c:	add	x2, x2, #0x8f6
    cd40:	mov	w1, #0xfffffffc            	// #-4
    cd44:	b	cd60 <gzclose_r@@ZLIB_1.2.3.5+0x25c>
    cd48:	ldr	x8, [x19, #168]
    cd4c:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    cd50:	add	x9, x9, #0x9b2
    cd54:	mov	w1, #0xfffffffd            	// #-3
    cd58:	cmp	x8, #0x0
    cd5c:	csel	x2, x9, x8, eq  // eq = none
    cd60:	mov	x0, x19
    cd64:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    cd68:	mov	w0, #0xffffffff            	// #-1
    cd6c:	ldp	x20, x19, [sp, #48]
    cd70:	ldp	x22, x21, [sp, #32]
    cd74:	ldr	x23, [sp, #16]
    cd78:	ldp	x29, x30, [sp], #64
    cd7c:	ret
    cd80:	stp	x29, x30, [sp, #-32]!
    cd84:	ldr	w8, [x0, #108]
    cd88:	str	x19, [sp, #16]
    cd8c:	mov	x19, x0
    cd90:	mov	x29, sp
    cd94:	cbz	w8, cda0 <gzclose_r@@ZLIB_1.2.3.5+0x29c>
    cd98:	cmn	w8, #0x5
    cd9c:	b.ne	cdb0 <gzclose_r@@ZLIB_1.2.3.5+0x2ac>  // b.any
    cda0:	ldr	w8, [x19, #80]
    cda4:	cbz	w8, cdb8 <gzclose_r@@ZLIB_1.2.3.5+0x2b4>
    cda8:	mov	w0, wzr
    cdac:	b	ce1c <gzclose_r@@ZLIB_1.2.3.5+0x318>
    cdb0:	mov	w0, #0xffffffff            	// #-1
    cdb4:	b	ce1c <gzclose_r@@ZLIB_1.2.3.5+0x318>
    cdb8:	ldr	w8, [x19, #128]
    cdbc:	cbz	w8, cdd8 <gzclose_r@@ZLIB_1.2.3.5+0x2d4>
    cdc0:	ldr	x9, [x19, #48]
    cdc4:	ldr	x10, [x19, #120]
    cdc8:	ldrb	w11, [x10], #1
    cdcc:	subs	w8, w8, #0x1
    cdd0:	strb	w11, [x9], #1
    cdd4:	b.ne	cdc8 <gzclose_r@@ZLIB_1.2.3.5+0x2c4>  // b.any
    cdd8:	ldr	x8, [x19, #48]
    cddc:	ldr	w9, [x19, #128]
    cde0:	ldr	w10, [x19, #40]
    cde4:	add	x3, x29, #0x1c
    cde8:	mov	x0, x19
    cdec:	add	x1, x8, x9
    cdf0:	sub	w2, w10, w9
    cdf4:	bl	cba4 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    cdf8:	cmn	w0, #0x1
    cdfc:	b.eq	ce1c <gzclose_r@@ZLIB_1.2.3.5+0x318>  // b.none
    ce00:	ldr	w8, [x29, #28]
    ce04:	ldr	w9, [x19, #128]
    ce08:	ldr	x10, [x19, #48]
    ce0c:	mov	w0, wzr
    ce10:	add	w8, w9, w8
    ce14:	str	w8, [x19, #128]
    ce18:	str	x10, [x19, #120]
    ce1c:	ldr	x19, [sp, #16]
    ce20:	ldp	x29, x30, [sp], #32
    ce24:	ret

000000000000ce28 <gzwrite@@Base>:
    ce28:	stp	x29, x30, [sp, #-16]!
    ce2c:	mov	x29, sp
    ce30:	cbz	x0, ce50 <gzwrite@@Base+0x28>
    ce34:	ldr	w8, [x0, #24]
    ce38:	mov	w9, #0x79b1                	// #31153
    ce3c:	cmp	w8, w9
    ce40:	b.ne	ce4c <gzwrite@@Base+0x24>  // b.any
    ce44:	ldr	w8, [x0, #108]
    ce48:	cbz	w8, ce58 <gzwrite@@Base+0x30>
    ce4c:	mov	w0, wzr
    ce50:	ldp	x29, x30, [sp], #16
    ce54:	ret
    ce58:	tbnz	w2, #31, ce6c <gzwrite@@Base+0x44>
    ce5c:	mov	w2, w2
    ce60:	bl	ce80 <gzwrite@@Base+0x58>
    ce64:	ldp	x29, x30, [sp], #16
    ce68:	ret
    ce6c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    ce70:	add	x2, x2, #0x9c8
    ce74:	mov	w1, #0xfffffffd            	// #-3
    ce78:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    ce7c:	b	ce4c <gzwrite@@Base+0x24>
    ce80:	stp	x29, x30, [sp, #-64]!
    ce84:	stp	x20, x19, [sp, #48]
    ce88:	mov	x19, x2
    ce8c:	str	x23, [sp, #16]
    ce90:	stp	x22, x21, [sp, #32]
    ce94:	mov	x29, sp
    ce98:	cbz	x2, cfd4 <gzwrite@@Base+0x1ac>
    ce9c:	ldr	w8, [x0, #40]
    cea0:	mov	x21, x1
    cea4:	mov	x20, x0
    cea8:	cbnz	w8, cebc <gzwrite@@Base+0x94>
    ceac:	mov	x0, x20
    ceb0:	bl	d3cc <gzvprintf@@ZLIB_1.2.7.1+0x15c>
    ceb4:	cmn	w0, #0x1
    ceb8:	b.eq	cfd0 <gzwrite@@Base+0x1a8>  // b.none
    cebc:	ldr	w8, [x20, #104]
    cec0:	cbz	w8, cedc <gzwrite@@Base+0xb4>
    cec4:	ldr	x1, [x20, #96]
    cec8:	mov	x0, x20
    cecc:	str	wzr, [x20, #104]
    ced0:	bl	d150 <gzputc@@Base+0xe0>
    ced4:	cmn	w0, #0x1
    ced8:	b.eq	cfd0 <gzwrite@@Base+0x1a8>  // b.none
    cedc:	ldr	w8, [x20, #40]
    cee0:	cmp	x8, x19
    cee4:	b.ls	cf68 <gzwrite@@Base+0x140>  // b.plast
    cee8:	mov	x23, x19
    ceec:	ldr	w8, [x20, #128]
    cef0:	cbnz	w8, cefc <gzwrite@@Base+0xd4>
    cef4:	ldr	x9, [x20, #48]
    cef8:	str	x9, [x20, #120]
    cefc:	ldr	x9, [x20, #120]
    cf00:	ldr	x10, [x20, #48]
    cf04:	ldr	w11, [x20, #40]
    cf08:	mov	x1, x21
    cf0c:	add	x8, x9, x8
    cf10:	sub	x8, x8, x10
    cf14:	sub	w9, w11, w8
    cf18:	cmp	x23, x9
    cf1c:	csel	w22, w23, w9, cc  // cc = lo, ul, last
    cf20:	add	x0, x10, w8, uxtw
    cf24:	mov	x2, x22
    cf28:	bl	23a0 <memcpy@plt>
    cf2c:	ldr	w8, [x20, #128]
    cf30:	ldr	x9, [x20, #16]
    cf34:	subs	x23, x23, x22
    cf38:	add	w8, w22, w8
    cf3c:	add	x9, x9, x22
    cf40:	str	w8, [x20, #128]
    cf44:	str	x9, [x20, #16]
    cf48:	b.eq	cfd4 <gzwrite@@Base+0x1ac>  // b.none
    cf4c:	mov	x0, x20
    cf50:	mov	w1, wzr
    cf54:	add	x21, x21, x22
    cf58:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    cf5c:	cmn	w0, #0x1
    cf60:	b.ne	ceec <gzwrite@@Base+0xc4>  // b.any
    cf64:	b	cfd0 <gzwrite@@Base+0x1a8>
    cf68:	ldr	w8, [x20, #128]
    cf6c:	cbz	w8, cf84 <gzwrite@@Base+0x15c>
    cf70:	mov	x0, x20
    cf74:	mov	w1, wzr
    cf78:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    cf7c:	cmn	w0, #0x1
    cf80:	b.eq	cfd0 <gzwrite@@Base+0x1a8>  // b.none
    cf84:	str	x21, [x20, #120]
    cf88:	mov	w21, #0xffffffff            	// #-1
    cf8c:	mov	x22, x19
    cf90:	ldr	x8, [x20, #16]
    cf94:	cmp	x22, x21
    cf98:	csel	x23, x22, x21, cc  // cc = lo, ul, last
    cf9c:	mov	x0, x20
    cfa0:	add	x8, x8, x23
    cfa4:	mov	w1, wzr
    cfa8:	str	w23, [x20, #128]
    cfac:	str	x8, [x20, #16]
    cfb0:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    cfb4:	cmn	w0, #0x1
    cfb8:	csel	x8, xzr, x23, eq  // eq = none
    cfbc:	cmn	w0, #0x1
    cfc0:	b.eq	cfd0 <gzwrite@@Base+0x1a8>  // b.none
    cfc4:	sub	x22, x22, x8
    cfc8:	cbnz	x22, cf90 <gzwrite@@Base+0x168>
    cfcc:	b	cfd4 <gzwrite@@Base+0x1ac>
    cfd0:	mov	x19, xzr
    cfd4:	mov	x0, x19
    cfd8:	ldp	x20, x19, [sp, #48]
    cfdc:	ldp	x22, x21, [sp, #32]
    cfe0:	ldr	x23, [sp, #16]
    cfe4:	ldp	x29, x30, [sp], #64
    cfe8:	ret

000000000000cfec <gzfwrite@@ZLIB_1.2.9>:
    cfec:	stp	x29, x30, [sp, #-32]!
    cff0:	str	x19, [sp, #16]
    cff4:	mov	x29, sp
    cff8:	cbz	x3, d014 <gzfwrite@@ZLIB_1.2.9+0x28>
    cffc:	ldr	w8, [x3, #24]
    d000:	mov	w9, #0x79b1                	// #31153
    d004:	cmp	w8, w9
    d008:	b.ne	d014 <gzfwrite@@ZLIB_1.2.9+0x28>  // b.any
    d00c:	ldr	w8, [x3, #108]
    d010:	cbz	w8, d024 <gzfwrite@@ZLIB_1.2.9+0x38>
    d014:	mov	x0, xzr
    d018:	ldr	x19, [sp, #16]
    d01c:	ldp	x29, x30, [sp], #32
    d020:	ret
    d024:	mov	x19, x1
    d028:	umulh	x8, x19, x2
    d02c:	cmp	xzr, x8
    d030:	mov	x1, x0
    d034:	cset	w8, ne  // ne = any
    d038:	cbz	x19, d058 <gzfwrite@@ZLIB_1.2.9+0x6c>
    d03c:	cbz	w8, d058 <gzfwrite@@ZLIB_1.2.9+0x6c>
    d040:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    d044:	add	x2, x2, #0x934
    d048:	mov	w1, #0xfffffffe            	// #-2
    d04c:	mov	x0, x3
    d050:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    d054:	b	d014 <gzfwrite@@ZLIB_1.2.9+0x28>
    d058:	mul	x2, x19, x2
    d05c:	cbz	x2, d014 <gzfwrite@@ZLIB_1.2.9+0x28>
    d060:	mov	x0, x3
    d064:	bl	ce80 <gzwrite@@Base+0x58>
    d068:	udiv	x0, x0, x19
    d06c:	b	d018 <gzfwrite@@ZLIB_1.2.9+0x2c>

000000000000d070 <gzputc@@Base>:
    d070:	sub	sp, sp, #0x30
    d074:	stp	x29, x30, [sp, #16]
    d078:	stp	x20, x19, [sp, #32]
    d07c:	add	x29, sp, #0x10
    d080:	cbz	x0, d0a0 <gzputc@@Base+0x30>
    d084:	ldr	w8, [x0, #24]
    d088:	mov	w9, #0x79b1                	// #31153
    d08c:	mov	x20, x0
    d090:	cmp	w8, w9
    d094:	b.ne	d0a0 <gzputc@@Base+0x30>  // b.any
    d098:	ldr	w8, [x20, #108]
    d09c:	cbz	w8, d0b4 <gzputc@@Base+0x44>
    d0a0:	mov	w0, #0xffffffff            	// #-1
    d0a4:	ldp	x20, x19, [sp, #32]
    d0a8:	ldp	x29, x30, [sp, #16]
    d0ac:	add	sp, sp, #0x30
    d0b0:	ret
    d0b4:	ldr	w8, [x20, #104]
    d0b8:	mov	w19, w1
    d0bc:	cbz	w8, d0d8 <gzputc@@Base+0x68>
    d0c0:	ldr	x1, [x20, #96]
    d0c4:	mov	x0, x20
    d0c8:	str	wzr, [x20, #104]
    d0cc:	bl	d150 <gzputc@@Base+0xe0>
    d0d0:	cmn	w0, #0x1
    d0d4:	b.eq	d0a4 <gzputc@@Base+0x34>  // b.none
    d0d8:	ldr	w8, [x20, #40]
    d0dc:	cbz	w8, d12c <gzputc@@Base+0xbc>
    d0e0:	ldr	w9, [x20, #128]
    d0e4:	cbnz	w9, d0f0 <gzputc@@Base+0x80>
    d0e8:	ldr	x10, [x20, #48]
    d0ec:	str	x10, [x20, #120]
    d0f0:	ldr	x11, [x20, #120]
    d0f4:	ldr	x10, [x20, #48]
    d0f8:	add	x9, x11, x9
    d0fc:	sub	x9, x9, x10
    d100:	cmp	w8, w9
    d104:	b.ls	d12c <gzputc@@Base+0xbc>  // b.plast
    d108:	strb	w19, [x10, w9, uxtw]
    d10c:	ldr	w8, [x20, #128]
    d110:	ldr	x9, [x20, #16]
    d114:	and	w0, w19, #0xff
    d118:	add	w8, w8, #0x1
    d11c:	add	x9, x9, #0x1
    d120:	str	w8, [x20, #128]
    d124:	str	x9, [x20, #16]
    d128:	b	d0a4 <gzputc@@Base+0x34>
    d12c:	sub	x1, x29, #0x4
    d130:	mov	w2, #0x1                   	// #1
    d134:	mov	x0, x20
    d138:	sturb	w19, [x29, #-4]
    d13c:	bl	ce80 <gzwrite@@Base+0x58>
    d140:	and	w8, w19, #0xff
    d144:	cmp	x0, #0x1
    d148:	csinv	w0, w8, wzr, eq  // eq = none
    d14c:	b	d0a4 <gzputc@@Base+0x34>
    d150:	stp	x29, x30, [sp, #-48]!
    d154:	stp	x22, x21, [sp, #16]
    d158:	stp	x20, x19, [sp, #32]
    d15c:	ldr	w8, [x0, #128]
    d160:	mov	x19, x0
    d164:	mov	x20, x1
    d168:	mov	x29, sp
    d16c:	cbz	w8, d184 <gzputc@@Base+0x114>
    d170:	mov	x0, x19
    d174:	mov	w1, wzr
    d178:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    d17c:	cmn	w0, #0x1
    d180:	b.eq	d1ec <gzputc@@Base+0x17c>  // b.none
    d184:	cbz	x20, d1e8 <gzputc@@Base+0x178>
    d188:	mov	w21, #0x1                   	// #1
    d18c:	ldr	w8, [x19, #40]
    d190:	cmp	x20, x8
    d194:	csel	w22, w20, w8, lt  // lt = tstop
    d198:	cbz	w21, d1b0 <gzputc@@Base+0x140>
    d19c:	ldr	x0, [x19, #48]
    d1a0:	mov	w2, w22
    d1a4:	mov	w1, wzr
    d1a8:	bl	24a0 <memset@plt>
    d1ac:	mov	w21, wzr
    d1b0:	ldr	x8, [x19, #48]
    d1b4:	ldr	x9, [x19, #16]
    d1b8:	str	w22, [x19, #128]
    d1bc:	mov	w22, w22
    d1c0:	str	x8, [x19, #120]
    d1c4:	add	x8, x9, x22
    d1c8:	mov	x0, x19
    d1cc:	mov	w1, wzr
    d1d0:	str	x8, [x19, #16]
    d1d4:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    d1d8:	cmn	w0, #0x1
    d1dc:	b.eq	d1ec <gzputc@@Base+0x17c>  // b.none
    d1e0:	sub	x20, x20, x22
    d1e4:	cbnz	x20, d18c <gzputc@@Base+0x11c>
    d1e8:	mov	w0, wzr
    d1ec:	ldp	x20, x19, [sp, #32]
    d1f0:	ldp	x22, x21, [sp, #16]
    d1f4:	ldp	x29, x30, [sp], #48
    d1f8:	ret

000000000000d1fc <gzputs@@Base>:
    d1fc:	stp	x29, x30, [sp, #-48]!
    d200:	str	x21, [sp, #16]
    d204:	stp	x20, x19, [sp, #32]
    d208:	mov	x29, sp
    d20c:	cbz	x0, d22c <gzputs@@Base+0x30>
    d210:	ldr	w8, [x0, #24]
    d214:	mov	w9, #0x79b1                	// #31153
    d218:	mov	x20, x0
    d21c:	cmp	w8, w9
    d220:	b.ne	d22c <gzputs@@Base+0x30>  // b.any
    d224:	ldr	w8, [x20, #108]
    d228:	cbz	w8, d240 <gzputs@@Base+0x44>
    d22c:	mov	w0, #0xffffffff            	// #-1
    d230:	ldp	x20, x19, [sp, #32]
    d234:	ldr	x21, [sp, #16]
    d238:	ldp	x29, x30, [sp], #48
    d23c:	ret
    d240:	mov	x0, x1
    d244:	mov	x19, x1
    d248:	bl	23e0 <strlen@plt>
    d24c:	mov	x21, x0
    d250:	mov	x0, x20
    d254:	mov	x1, x19
    d258:	mov	x2, x21
    d25c:	bl	ce80 <gzwrite@@Base+0x58>
    d260:	cmp	w0, #0x0
    d264:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    d268:	csinv	w0, w0, wzr, eq  // eq = none
    d26c:	b	d230 <gzputs@@Base+0x34>

000000000000d270 <gzvprintf@@ZLIB_1.2.7.1>:
    d270:	sub	sp, sp, #0x50
    d274:	stp	x29, x30, [sp, #32]
    d278:	stp	x22, x21, [sp, #48]
    d27c:	stp	x20, x19, [sp, #64]
    d280:	add	x29, sp, #0x20
    d284:	cbz	x0, d2a4 <gzvprintf@@ZLIB_1.2.7.1+0x34>
    d288:	ldr	w8, [x0, #24]
    d28c:	mov	w9, #0x79b1                	// #31153
    d290:	mov	x19, x0
    d294:	cmp	w8, w9
    d298:	b.ne	d2a4 <gzvprintf@@ZLIB_1.2.7.1+0x34>  // b.any
    d29c:	ldr	w8, [x19, #108]
    d2a0:	cbz	w8, d2c0 <gzvprintf@@ZLIB_1.2.7.1+0x50>
    d2a4:	mov	w20, #0xfffffffe            	// #-2
    d2a8:	mov	w0, w20
    d2ac:	ldp	x20, x19, [sp, #64]
    d2b0:	ldp	x22, x21, [sp, #48]
    d2b4:	ldp	x29, x30, [sp, #32]
    d2b8:	add	sp, sp, #0x50
    d2bc:	ret
    d2c0:	ldr	w8, [x19, #40]
    d2c4:	mov	x21, x2
    d2c8:	mov	x20, x1
    d2cc:	cbnz	w8, d2e0 <gzvprintf@@ZLIB_1.2.7.1+0x70>
    d2d0:	mov	x0, x19
    d2d4:	bl	d3cc <gzvprintf@@ZLIB_1.2.7.1+0x15c>
    d2d8:	cmn	w0, #0x1
    d2dc:	b.eq	d3c4 <gzvprintf@@ZLIB_1.2.7.1+0x154>  // b.none
    d2e0:	ldr	w8, [x19, #104]
    d2e4:	cbz	w8, d300 <gzvprintf@@ZLIB_1.2.7.1+0x90>
    d2e8:	ldr	x1, [x19, #96]
    d2ec:	mov	x0, x19
    d2f0:	str	wzr, [x19, #104]
    d2f4:	bl	d150 <gzputc@@Base+0xe0>
    d2f8:	cmn	w0, #0x1
    d2fc:	b.eq	d3c4 <gzvprintf@@ZLIB_1.2.7.1+0x154>  // b.none
    d300:	ldr	w8, [x19, #128]
    d304:	cbnz	w8, d310 <gzvprintf@@ZLIB_1.2.7.1+0xa0>
    d308:	ldr	x9, [x19, #48]
    d30c:	str	x9, [x19, #120]
    d310:	ldr	x9, [x19, #120]
    d314:	ldr	w10, [x19, #40]
    d318:	mov	x3, sp
    d31c:	mov	x2, x20
    d320:	add	x22, x9, x8
    d324:	sub	w8, w10, #0x1
    d328:	strb	wzr, [x22, w8, uxtw]
    d32c:	ldp	q1, q0, [x21]
    d330:	ldr	w1, [x19, #40]
    d334:	mov	x0, x22
    d338:	stp	q1, q0, [sp]
    d33c:	bl	2620 <vsnprintf@plt>
    d340:	mov	w20, w0
    d344:	cbz	w0, d2a8 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d348:	ldr	w8, [x19, #40]
    d34c:	cmp	w20, w8
    d350:	b.cs	d360 <gzvprintf@@ZLIB_1.2.7.1+0xf0>  // b.hs, b.nlast
    d354:	sub	w9, w8, #0x1
    d358:	ldrb	w9, [x22, w9, uxtw]
    d35c:	cbz	w9, d368 <gzvprintf@@ZLIB_1.2.7.1+0xf8>
    d360:	mov	w20, wzr
    d364:	b	d2a8 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d368:	ldr	w9, [x19, #128]
    d36c:	ldr	x10, [x19, #16]
    d370:	add	w9, w9, w20
    d374:	add	x10, x10, w20, sxtw
    d378:	subs	w21, w9, w8
    d37c:	str	w9, [x19, #128]
    d380:	str	x10, [x19, #16]
    d384:	b.cc	d2a8 <gzvprintf@@ZLIB_1.2.7.1+0x38>  // b.lo, b.ul, b.last
    d388:	mov	x0, x19
    d38c:	mov	w1, wzr
    d390:	str	w8, [x19, #128]
    d394:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    d398:	cmn	w0, #0x1
    d39c:	b.eq	d3c4 <gzvprintf@@ZLIB_1.2.7.1+0x154>  // b.none
    d3a0:	ldr	x0, [x19, #48]
    d3a4:	ldr	w8, [x19, #40]
    d3a8:	mov	w2, w21
    d3ac:	add	x1, x0, x8
    d3b0:	bl	23a0 <memcpy@plt>
    d3b4:	ldr	x8, [x19, #48]
    d3b8:	str	w21, [x19, #128]
    d3bc:	str	x8, [x19, #120]
    d3c0:	b	d2a8 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d3c4:	ldr	w20, [x19, #108]
    d3c8:	b	d2a8 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d3cc:	stp	x29, x30, [sp, #-48]!
    d3d0:	stp	x20, x19, [sp, #32]
    d3d4:	str	x21, [sp, #16]
    d3d8:	ldr	w21, [x0, #44]
    d3dc:	mov	x19, x0
    d3e0:	mov	x29, sp
    d3e4:	lsl	w0, w21, #1
    d3e8:	bl	2460 <malloc@plt>
    d3ec:	str	x0, [x19, #48]
    d3f0:	cbz	x0, d484 <gzvprintf@@ZLIB_1.2.7.1+0x214>
    d3f4:	ldr	w8, [x19, #64]
    d3f8:	cbz	w8, d424 <gzvprintf@@ZLIB_1.2.7.1+0x1b4>
    d3fc:	ldr	w8, [x19, #44]
    d400:	ldr	w9, [x19, #64]
    d404:	mov	w0, wzr
    d408:	str	w8, [x19, #40]
    d40c:	cbnz	w9, d49c <gzvprintf@@ZLIB_1.2.7.1+0x22c>
    d410:	ldr	x9, [x19, #56]
    d414:	str	w8, [x19, #152]
    d418:	str	x9, [x19, #144]
    d41c:	str	x9, [x19, #8]
    d420:	b	d49c <gzvprintf@@ZLIB_1.2.7.1+0x22c>
    d424:	mov	x20, x0
    d428:	mov	x0, x21
    d42c:	bl	2460 <malloc@plt>
    d430:	str	x0, [x19, #56]
    d434:	cbz	x0, d47c <gzvprintf@@ZLIB_1.2.7.1+0x20c>
    d438:	ldp	w1, w5, [x19, #88]
    d43c:	add	x20, x19, #0x78
    d440:	adrp	x6, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    d444:	add	x6, x6, #0x899
    d448:	mov	w2, #0x8                   	// #8
    d44c:	mov	w3, #0x1f                  	// #31
    d450:	mov	w4, #0x8                   	// #8
    d454:	mov	w7, #0x70                  	// #112
    d458:	mov	x0, x20
    d45c:	stp	xzr, xzr, [x19, #184]
    d460:	str	xzr, [x19, #200]
    d464:	bl	24d0 <deflateInit2_@plt>
    d468:	cbz	w0, d4ac <gzvprintf@@ZLIB_1.2.7.1+0x23c>
    d46c:	ldr	x0, [x19, #56]
    d470:	bl	2570 <free@plt>
    d474:	ldr	x0, [x19, #48]
    d478:	b	d480 <gzvprintf@@ZLIB_1.2.7.1+0x210>
    d47c:	mov	x0, x20
    d480:	bl	2570 <free@plt>
    d484:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    d488:	add	x2, x2, #0x8f6
    d48c:	mov	w1, #0xfffffffc            	// #-4
    d490:	mov	x0, x19
    d494:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    d498:	mov	w0, #0xffffffff            	// #-1
    d49c:	ldp	x20, x19, [sp, #32]
    d4a0:	ldr	x21, [sp, #16]
    d4a4:	ldp	x29, x30, [sp], #48
    d4a8:	ret
    d4ac:	str	xzr, [x20]
    d4b0:	b	d3fc <gzvprintf@@ZLIB_1.2.7.1+0x18c>
    d4b4:	stp	x29, x30, [sp, #-64]!
    d4b8:	stp	x22, x21, [sp, #32]
    d4bc:	stp	x20, x19, [sp, #48]
    d4c0:	ldr	w8, [x0, #40]
    d4c4:	mov	x19, x0
    d4c8:	mov	w20, w1
    d4cc:	str	x23, [sp, #16]
    d4d0:	mov	x29, sp
    d4d4:	cbnz	w8, d4e8 <gzvprintf@@ZLIB_1.2.7.1+0x278>
    d4d8:	mov	x0, x19
    d4dc:	bl	d3cc <gzvprintf@@ZLIB_1.2.7.1+0x15c>
    d4e0:	cmn	w0, #0x1
    d4e4:	b.eq	d63c <gzvprintf@@ZLIB_1.2.7.1+0x3cc>  // b.none
    d4e8:	ldr	w8, [x19, #64]
    d4ec:	cbz	w8, d53c <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    d4f0:	ldr	w8, [x19, #128]
    d4f4:	cbz	w8, d534 <gzvprintf@@ZLIB_1.2.7.1+0x2c4>
    d4f8:	mov	w20, #0x40000000            	// #1073741824
    d4fc:	ldr	w0, [x19, #28]
    d500:	ldr	x1, [x19, #120]
    d504:	lsr	w9, w8, #30
    d508:	cmp	w9, #0x0
    d50c:	csel	w2, w8, w20, eq  // eq = none
    d510:	bl	2530 <write@plt>
    d514:	tbnz	w0, #31, d604 <gzvprintf@@ZLIB_1.2.7.1+0x394>
    d518:	ldr	w8, [x19, #128]
    d51c:	ldr	x9, [x19, #120]
    d520:	subs	w8, w8, w0
    d524:	add	x9, x9, w0, sxtw
    d528:	str	w8, [x19, #128]
    d52c:	str	x9, [x19, #120]
    d530:	b.ne	d4fc <gzvprintf@@ZLIB_1.2.7.1+0x28c>  // b.any
    d534:	mov	w20, wzr
    d538:	b	d640 <gzvprintf@@ZLIB_1.2.7.1+0x3d0>
    d53c:	mov	w0, wzr
    d540:	add	x21, x19, #0x78
    d544:	mov	w22, #0x40000000            	// #1073741824
    d548:	ldr	w8, [x19, #152]
    d54c:	cbz	w8, d56c <gzvprintf@@ZLIB_1.2.7.1+0x2fc>
    d550:	cmp	w20, #0x4
    d554:	cset	w8, ne  // ne = any
    d558:	cmp	w0, #0x1
    d55c:	cset	w9, eq  // eq = none
    d560:	cbz	w20, d5cc <gzvprintf@@ZLIB_1.2.7.1+0x35c>
    d564:	orr	w8, w8, w9
    d568:	cbz	w8, d5cc <gzvprintf@@ZLIB_1.2.7.1+0x35c>
    d56c:	ldr	x8, [x19, #144]
    d570:	ldr	x1, [x19, #8]
    d574:	cmp	x8, x1
    d578:	b.ls	d5b0 <gzvprintf@@ZLIB_1.2.7.1+0x340>  // b.plast
    d57c:	sub	x8, x8, x1
    d580:	ldr	w0, [x19, #28]
    d584:	cmp	x8, x22
    d588:	csel	x8, x8, x22, lt  // lt = tstop
    d58c:	and	x2, x8, #0xffffffff
    d590:	bl	2530 <write@plt>
    d594:	tbnz	w0, #31, d604 <gzvprintf@@ZLIB_1.2.7.1+0x394>
    d598:	ldr	x9, [x19, #8]
    d59c:	ldr	x8, [x19, #144]
    d5a0:	add	x1, x9, w0, sxtw
    d5a4:	cmp	x8, x1
    d5a8:	str	x1, [x19, #8]
    d5ac:	b.hi	d57c <gzvprintf@@ZLIB_1.2.7.1+0x30c>  // b.pmore
    d5b0:	ldr	w8, [x19, #152]
    d5b4:	cbnz	w8, d5cc <gzvprintf@@ZLIB_1.2.7.1+0x35c>
    d5b8:	ldr	w8, [x19, #40]
    d5bc:	ldr	x9, [x19, #56]
    d5c0:	str	w8, [x19, #152]
    d5c4:	str	x9, [x19, #144]
    d5c8:	str	x9, [x19, #8]
    d5cc:	ldr	w23, [x19, #152]
    d5d0:	mov	x0, x21
    d5d4:	mov	w1, w20
    d5d8:	bl	2490 <deflate@plt>
    d5dc:	cmn	w0, #0x2
    d5e0:	b.eq	d628 <gzvprintf@@ZLIB_1.2.7.1+0x3b8>  // b.none
    d5e4:	ldr	w8, [x19, #152]
    d5e8:	cmp	w23, w8
    d5ec:	b.ne	d548 <gzvprintf@@ZLIB_1.2.7.1+0x2d8>  // b.any
    d5f0:	cmp	w20, #0x4
    d5f4:	b.ne	d534 <gzvprintf@@ZLIB_1.2.7.1+0x2c4>  // b.any
    d5f8:	mov	x0, x21
    d5fc:	bl	2480 <deflateReset@plt>
    d600:	b	d534 <gzvprintf@@ZLIB_1.2.7.1+0x2c4>
    d604:	bl	2650 <__errno_location@plt>
    d608:	ldr	w0, [x0]
    d60c:	bl	2500 <strerror@plt>
    d610:	mov	x2, x0
    d614:	mov	w1, #0xffffffff            	// #-1
    d618:	mov	x0, x19
    d61c:	mov	w20, #0xffffffff            	// #-1
    d620:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    d624:	b	d640 <gzvprintf@@ZLIB_1.2.7.1+0x3d0>
    d628:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x37e8>
    d62c:	add	x2, x2, #0x9ed
    d630:	mov	w1, #0xfffffffe            	// #-2
    d634:	mov	x0, x19
    d638:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    d63c:	mov	w20, #0xffffffff            	// #-1
    d640:	mov	w0, w20
    d644:	ldp	x20, x19, [sp, #48]
    d648:	ldp	x22, x21, [sp, #32]
    d64c:	ldr	x23, [sp, #16]
    d650:	ldp	x29, x30, [sp], #64
    d654:	ret

000000000000d658 <gzprintf@@Base>:
    d658:	sub	sp, sp, #0x100
    d65c:	stp	x29, x30, [sp, #240]
    d660:	add	x29, sp, #0xf0
    d664:	mov	x8, #0xffffffffffffffd0    	// #-48
    d668:	mov	x9, sp
    d66c:	sub	x10, x29, #0x70
    d670:	movk	x8, #0xff80, lsl #32
    d674:	add	x11, x29, #0x10
    d678:	add	x9, x9, #0x80
    d67c:	add	x10, x10, #0x30
    d680:	stp	x9, x8, [x29, #-16]
    d684:	stp	x11, x10, [x29, #-32]
    d688:	stp	x2, x3, [x29, #-112]
    d68c:	stp	x4, x5, [x29, #-96]
    d690:	stp	x6, x7, [x29, #-80]
    d694:	stp	q1, q2, [sp, #16]
    d698:	str	q0, [sp]
    d69c:	ldp	q0, q1, [x29, #-32]
    d6a0:	sub	x2, x29, #0x40
    d6a4:	stp	q3, q4, [sp, #48]
    d6a8:	stp	q5, q6, [sp, #80]
    d6ac:	str	q7, [sp, #112]
    d6b0:	stp	q0, q1, [x29, #-64]
    d6b4:	bl	23c0 <gzvprintf@plt>
    d6b8:	ldp	x29, x30, [sp, #240]
    d6bc:	add	sp, sp, #0x100
    d6c0:	ret

000000000000d6c4 <gzflush@@Base>:
    d6c4:	stp	x29, x30, [sp, #-32]!
    d6c8:	stp	x20, x19, [sp, #16]
    d6cc:	mov	x29, sp
    d6d0:	cbz	x0, d734 <gzflush@@Base+0x70>
    d6d4:	ldr	w8, [x0, #24]
    d6d8:	mov	w9, #0x79b1                	// #31153
    d6dc:	mov	x19, x0
    d6e0:	cmp	w8, w9
    d6e4:	b.ne	d734 <gzflush@@Base+0x70>  // b.any
    d6e8:	mov	w20, w1
    d6ec:	cmp	w1, #0x4
    d6f0:	mov	w0, #0xfffffffe            	// #-2
    d6f4:	b.hi	d738 <gzflush@@Base+0x74>  // b.pmore
    d6f8:	ldr	w8, [x19, #108]
    d6fc:	cbnz	w8, d738 <gzflush@@Base+0x74>
    d700:	ldr	w8, [x19, #104]
    d704:	cbz	w8, d720 <gzflush@@Base+0x5c>
    d708:	ldr	x1, [x19, #96]
    d70c:	mov	x0, x19
    d710:	str	wzr, [x19, #104]
    d714:	bl	d150 <gzputc@@Base+0xe0>
    d718:	cmn	w0, #0x1
    d71c:	b.eq	d72c <gzflush@@Base+0x68>  // b.none
    d720:	mov	x0, x19
    d724:	mov	w1, w20
    d728:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    d72c:	ldr	w0, [x19, #108]
    d730:	b	d738 <gzflush@@Base+0x74>
    d734:	mov	w0, #0xfffffffe            	// #-2
    d738:	ldp	x20, x19, [sp, #16]
    d73c:	ldp	x29, x30, [sp], #32
    d740:	ret

000000000000d744 <gzsetparams@@Base>:
    d744:	stp	x29, x30, [sp, #-48]!
    d748:	str	x21, [sp, #16]
    d74c:	stp	x20, x19, [sp, #32]
    d750:	mov	x29, sp
    d754:	cbz	x0, d774 <gzsetparams@@Base+0x30>
    d758:	ldr	w8, [x0, #24]
    d75c:	mov	w9, #0x79b1                	// #31153
    d760:	mov	x19, x0
    d764:	cmp	w8, w9
    d768:	b.ne	d774 <gzsetparams@@Base+0x30>  // b.any
    d76c:	ldr	w8, [x19, #108]
    d770:	cbz	w8, d788 <gzsetparams@@Base+0x44>
    d774:	mov	w0, #0xfffffffe            	// #-2
    d778:	ldp	x20, x19, [sp, #32]
    d77c:	ldr	x21, [sp, #16]
    d780:	ldp	x29, x30, [sp], #48
    d784:	ret
    d788:	ldr	w8, [x19, #88]
    d78c:	mov	w20, w2
    d790:	mov	w21, w1
    d794:	cmp	w8, w1
    d798:	b.ne	d7b0 <gzsetparams@@Base+0x6c>  // b.any
    d79c:	ldr	w8, [x19, #92]
    d7a0:	cmp	w8, w20
    d7a4:	b.ne	d7b0 <gzsetparams@@Base+0x6c>  // b.any
    d7a8:	mov	w0, wzr
    d7ac:	b	d778 <gzsetparams@@Base+0x34>
    d7b0:	ldr	w8, [x19, #104]
    d7b4:	cbz	w8, d7d0 <gzsetparams@@Base+0x8c>
    d7b8:	ldr	x1, [x19, #96]
    d7bc:	mov	x0, x19
    d7c0:	str	wzr, [x19, #104]
    d7c4:	bl	d150 <gzputc@@Base+0xe0>
    d7c8:	cmn	w0, #0x1
    d7cc:	b.eq	d810 <gzsetparams@@Base+0xcc>  // b.none
    d7d0:	ldr	w8, [x19, #40]
    d7d4:	cbz	w8, d804 <gzsetparams@@Base+0xc0>
    d7d8:	ldr	w8, [x19, #128]
    d7dc:	cbz	w8, d7f4 <gzsetparams@@Base+0xb0>
    d7e0:	mov	w1, #0x5                   	// #5
    d7e4:	mov	x0, x19
    d7e8:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    d7ec:	cmn	w0, #0x1
    d7f0:	b.eq	d810 <gzsetparams@@Base+0xcc>  // b.none
    d7f4:	add	x0, x19, #0x78
    d7f8:	mov	w1, w21
    d7fc:	mov	w2, w20
    d800:	bl	24e0 <deflateParams@plt>
    d804:	mov	w0, wzr
    d808:	stp	w21, w20, [x19, #88]
    d80c:	b	d778 <gzsetparams@@Base+0x34>
    d810:	ldr	w0, [x19, #108]
    d814:	b	d778 <gzsetparams@@Base+0x34>

000000000000d818 <gzclose_w@@ZLIB_1.2.3.5>:
    d818:	stp	x29, x30, [sp, #-32]!
    d81c:	stp	x20, x19, [sp, #16]
    d820:	mov	x29, sp
    d824:	cbz	x0, d868 <gzclose_w@@ZLIB_1.2.3.5+0x50>
    d828:	ldr	w8, [x0, #24]
    d82c:	mov	w9, #0x79b1                	// #31153
    d830:	mov	x19, x0
    d834:	cmp	w8, w9
    d838:	b.ne	d868 <gzclose_w@@ZLIB_1.2.3.5+0x50>  // b.any
    d83c:	ldr	w8, [x19, #104]
    d840:	cbz	w8, d870 <gzclose_w@@ZLIB_1.2.3.5+0x58>
    d844:	ldr	x1, [x19, #96]
    d848:	mov	x0, x19
    d84c:	str	wzr, [x19, #104]
    d850:	bl	d150 <gzputc@@Base+0xe0>
    d854:	cmn	w0, #0x1
    d858:	mov	w20, wzr
    d85c:	b.ne	d874 <gzclose_w@@ZLIB_1.2.3.5+0x5c>  // b.any
    d860:	ldr	w20, [x19, #108]
    d864:	b	d874 <gzclose_w@@ZLIB_1.2.3.5+0x5c>
    d868:	mov	w20, #0xfffffffe            	// #-2
    d86c:	b	d8e4 <gzclose_w@@ZLIB_1.2.3.5+0xcc>
    d870:	mov	w20, wzr
    d874:	mov	w1, #0x4                   	// #4
    d878:	mov	x0, x19
    d87c:	bl	d4b4 <gzvprintf@@ZLIB_1.2.7.1+0x244>
    d880:	cmn	w0, #0x1
    d884:	b.ne	d88c <gzclose_w@@ZLIB_1.2.3.5+0x74>  // b.any
    d888:	ldr	w20, [x19, #108]
    d88c:	ldr	w8, [x19, #40]
    d890:	cbz	w8, d8b4 <gzclose_w@@ZLIB_1.2.3.5+0x9c>
    d894:	ldr	w8, [x19, #64]
    d898:	cbnz	w8, d8ac <gzclose_w@@ZLIB_1.2.3.5+0x94>
    d89c:	add	x0, x19, #0x78
    d8a0:	bl	2590 <deflateEnd@plt>
    d8a4:	ldr	x0, [x19, #56]
    d8a8:	bl	2570 <free@plt>
    d8ac:	ldr	x0, [x19, #48]
    d8b0:	bl	2570 <free@plt>
    d8b4:	mov	x0, x19
    d8b8:	mov	w1, wzr
    d8bc:	mov	x2, xzr
    d8c0:	bl	bfbc <gzseek64@@ZLIB_1.2.3.3+0x174>
    d8c4:	ldr	x0, [x19, #32]
    d8c8:	bl	2570 <free@plt>
    d8cc:	ldr	w0, [x19, #28]
    d8d0:	bl	2510 <close@plt>
    d8d4:	cmn	w0, #0x1
    d8d8:	mov	x0, x19
    d8dc:	csinv	w20, w20, wzr, ne  // ne = any
    d8e0:	bl	2570 <free@plt>
    d8e4:	mov	w0, w20
    d8e8:	ldp	x20, x19, [sp, #16]
    d8ec:	ldp	x29, x30, [sp], #32
    d8f0:	ret

Disassembly of section .fini:

000000000000d8f4 <.fini>:
    d8f4:	stp	x29, x30, [sp, #-16]!
    d8f8:	mov	x29, sp
    d8fc:	ldp	x29, x30, [sp], #16
    d900:	ret
