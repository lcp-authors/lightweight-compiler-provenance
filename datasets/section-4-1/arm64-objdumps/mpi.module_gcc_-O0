
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mpi.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_memcpy>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	ldr	x2, [sp, #24]
      18:	ldr	x1, [sp, #32]
      1c:	ldr	x0, [sp, #40]
      20:	bl	0 <grub_memmove>
      24:	ldp	x29, x30, [sp], #48
      28:	ret

000000000000002c <gpg_err_make>:
      2c:	sub	sp, sp, #0x10
      30:	str	w0, [sp, #12]
      34:	str	w1, [sp, #8]
      38:	ldr	w0, [sp, #8]
      3c:	add	sp, sp, #0x10
      40:	ret

0000000000000044 <gcry_err_make>:
      44:	stp	x29, x30, [sp, #-32]!
      48:	mov	x29, sp
      4c:	str	w0, [sp, #28]
      50:	str	w1, [sp, #24]
      54:	ldr	w1, [sp, #24]
      58:	ldr	w0, [sp, #28]
      5c:	bl	2c <gpg_err_make>
      60:	ldp	x29, x30, [sp], #32
      64:	ret

0000000000000068 <gcry_error>:
      68:	stp	x29, x30, [sp, #-32]!
      6c:	mov	x29, sp
      70:	str	w0, [sp, #28]
      74:	ldr	w1, [sp, #28]
      78:	mov	w0, #0x0                   	// #0
      7c:	bl	44 <gcry_err_make>
      80:	ldp	x29, x30, [sp], #32
      84:	ret

0000000000000088 <_gcry_mpi_alloc>:
      88:	stp	x29, x30, [sp, #-48]!
      8c:	mov	x29, sp
      90:	str	w0, [sp, #28]
      94:	mov	x0, #0x18                  	// #24
      98:	bl	bef8 <gcry_xmalloc>
      9c:	str	x0, [sp, #40]
      a0:	ldr	w0, [sp, #28]
      a4:	cmp	w0, #0x0
      a8:	b.eq	c0 <_gcry_mpi_alloc+0x38>  // b.none
      ac:	mov	w1, #0x0                   	// #0
      b0:	ldr	w0, [sp, #28]
      b4:	bl	1a0 <_gcry_mpi_alloc_limb_space>
      b8:	mov	x1, x0
      bc:	b	c4 <_gcry_mpi_alloc+0x3c>
      c0:	mov	x1, #0x0                   	// #0
      c4:	ldr	x0, [sp, #40]
      c8:	str	x1, [x0, #16]
      cc:	ldr	w1, [sp, #28]
      d0:	ldr	x0, [sp, #40]
      d4:	str	w1, [x0]
      d8:	ldr	x0, [sp, #40]
      dc:	str	wzr, [x0, #4]
      e0:	ldr	x0, [sp, #40]
      e4:	str	wzr, [x0, #8]
      e8:	ldr	x0, [sp, #40]
      ec:	str	wzr, [x0, #12]
      f0:	ldr	x0, [sp, #40]
      f4:	ldp	x29, x30, [sp], #48
      f8:	ret

00000000000000fc <_gcry_mpi_m_check>:
      fc:	stp	x29, x30, [sp, #-32]!
     100:	mov	x29, sp
     104:	str	x0, [sp, #24]
     108:	ldr	x0, [sp, #24]
     10c:	bl	bf90 <_gcry_check_heap>
     110:	ldr	x0, [sp, #24]
     114:	ldr	x0, [x0, #16]
     118:	bl	bf90 <_gcry_check_heap>
     11c:	nop
     120:	ldp	x29, x30, [sp], #32
     124:	ret

0000000000000128 <_gcry_mpi_alloc_secure>:
     128:	stp	x29, x30, [sp, #-48]!
     12c:	mov	x29, sp
     130:	str	w0, [sp, #28]
     134:	mov	x0, #0x18                  	// #24
     138:	bl	bef8 <gcry_xmalloc>
     13c:	str	x0, [sp, #40]
     140:	ldr	w0, [sp, #28]
     144:	cmp	w0, #0x0
     148:	b.eq	160 <_gcry_mpi_alloc_secure+0x38>  // b.none
     14c:	mov	w1, #0x1                   	// #1
     150:	ldr	w0, [sp, #28]
     154:	bl	1a0 <_gcry_mpi_alloc_limb_space>
     158:	mov	x1, x0
     15c:	b	164 <_gcry_mpi_alloc_secure+0x3c>
     160:	mov	x1, #0x0                   	// #0
     164:	ldr	x0, [sp, #40]
     168:	str	x1, [x0, #16]
     16c:	ldr	w1, [sp, #28]
     170:	ldr	x0, [sp, #40]
     174:	str	w1, [x0]
     178:	ldr	x0, [sp, #40]
     17c:	mov	w1, #0x1                   	// #1
     180:	str	w1, [x0, #12]
     184:	ldr	x0, [sp, #40]
     188:	str	wzr, [x0, #4]
     18c:	ldr	x0, [sp, #40]
     190:	str	wzr, [x0, #8]
     194:	ldr	x0, [sp, #40]
     198:	ldp	x29, x30, [sp], #48
     19c:	ret

00000000000001a0 <_gcry_mpi_alloc_limb_space>:
     1a0:	stp	x29, x30, [sp, #-48]!
     1a4:	mov	x29, sp
     1a8:	str	w0, [sp, #28]
     1ac:	str	w1, [sp, #24]
     1b0:	ldr	w0, [sp, #28]
     1b4:	cmp	w0, #0x0
     1b8:	b.eq	1c8 <_gcry_mpi_alloc_limb_space+0x28>  // b.none
     1bc:	ldr	w0, [sp, #28]
     1c0:	lsl	x0, x0, #3
     1c4:	b	1cc <_gcry_mpi_alloc_limb_space+0x2c>
     1c8:	mov	x0, #0x8                   	// #8
     1cc:	str	x0, [sp, #40]
     1d0:	ldr	w0, [sp, #24]
     1d4:	cmp	w0, #0x0
     1d8:	b.eq	1e8 <_gcry_mpi_alloc_limb_space+0x48>  // b.none
     1dc:	ldr	x0, [sp, #40]
     1e0:	bl	be58 <gcry_xmalloc_secure>
     1e4:	b	1f0 <_gcry_mpi_alloc_limb_space+0x50>
     1e8:	ldr	x0, [sp, #40]
     1ec:	bl	bef8 <gcry_xmalloc>
     1f0:	str	x0, [sp, #32]
     1f4:	ldr	w0, [sp, #28]
     1f8:	cmp	w0, #0x0
     1fc:	b.ne	208 <_gcry_mpi_alloc_limb_space+0x68>  // b.any
     200:	ldr	x0, [sp, #32]
     204:	str	xzr, [x0]
     208:	ldr	x0, [sp, #32]
     20c:	ldp	x29, x30, [sp], #48
     210:	ret

0000000000000214 <_gcry_mpi_free_limb_space>:
     214:	stp	x29, x30, [sp, #-64]!
     218:	mov	x29, sp
     21c:	str	x0, [sp, #24]
     220:	str	w1, [sp, #20]
     224:	ldr	x0, [sp, #24]
     228:	cmp	x0, #0x0
     22c:	b.eq	290 <_gcry_mpi_free_limb_space+0x7c>  // b.none
     230:	ldr	w0, [sp, #20]
     234:	lsl	x0, x0, #3
     238:	str	x0, [sp, #40]
     23c:	ldr	x0, [sp, #40]
     240:	cmp	x0, #0x0
     244:	b.eq	288 <_gcry_mpi_free_limb_space+0x74>  // b.none
     248:	ldr	x0, [sp, #24]
     24c:	str	x0, [sp, #56]
     250:	ldr	x0, [sp, #40]
     254:	str	x0, [sp, #48]
     258:	b	27c <_gcry_mpi_free_limb_space+0x68>
     25c:	ldr	x0, [sp, #56]
     260:	strb	wzr, [x0]
     264:	ldr	x0, [sp, #56]
     268:	add	x0, x0, #0x1
     26c:	str	x0, [sp, #56]
     270:	ldr	x0, [sp, #48]
     274:	sub	x0, x0, #0x1
     278:	str	x0, [sp, #48]
     27c:	ldr	x0, [sp, #48]
     280:	cmp	x0, #0x0
     284:	b.ne	25c <_gcry_mpi_free_limb_space+0x48>  // b.any
     288:	ldr	x0, [sp, #24]
     28c:	bl	bdd0 <gcry_free>
     290:	nop
     294:	ldp	x29, x30, [sp], #64
     298:	ret

000000000000029c <_gcry_mpi_assign_limb_space>:
     29c:	stp	x29, x30, [sp, #-48]!
     2a0:	mov	x29, sp
     2a4:	str	x0, [sp, #40]
     2a8:	str	x1, [sp, #32]
     2ac:	str	w2, [sp, #28]
     2b0:	ldr	x0, [sp, #40]
     2b4:	ldr	x2, [x0, #16]
     2b8:	ldr	x0, [sp, #40]
     2bc:	ldr	w0, [x0]
     2c0:	mov	w1, w0
     2c4:	mov	x0, x2
     2c8:	bl	214 <_gcry_mpi_free_limb_space>
     2cc:	ldr	x0, [sp, #40]
     2d0:	ldr	x1, [sp, #32]
     2d4:	str	x1, [x0, #16]
     2d8:	ldr	w1, [sp, #28]
     2dc:	ldr	x0, [sp, #40]
     2e0:	str	w1, [x0]
     2e4:	nop
     2e8:	ldp	x29, x30, [sp], #48
     2ec:	ret

00000000000002f0 <_gcry_mpi_resize>:
     2f0:	stp	x29, x30, [sp, #-48]!
     2f4:	mov	x29, sp
     2f8:	str	x0, [sp, #24]
     2fc:	str	w1, [sp, #20]
     300:	ldr	x0, [sp, #24]
     304:	ldr	w0, [x0]
     308:	mov	w1, w0
     30c:	ldr	w0, [sp, #20]
     310:	cmp	w0, w1
     314:	b.hi	36c <_gcry_mpi_resize+0x7c>  // b.pmore
     318:	ldr	x0, [sp, #24]
     31c:	ldr	w0, [x0, #4]
     320:	sxtw	x0, w0
     324:	str	x0, [sp, #40]
     328:	b	350 <_gcry_mpi_resize+0x60>
     32c:	ldr	x0, [sp, #24]
     330:	ldr	x1, [x0, #16]
     334:	ldr	x0, [sp, #40]
     338:	lsl	x0, x0, #3
     33c:	add	x0, x1, x0
     340:	str	xzr, [x0]
     344:	ldr	x0, [sp, #40]
     348:	add	x0, x0, #0x1
     34c:	str	x0, [sp, #40]
     350:	ldr	x0, [sp, #24]
     354:	ldr	w0, [x0]
     358:	sxtw	x0, w0
     35c:	ldr	x1, [sp, #40]
     360:	cmp	x1, x0
     364:	b.cc	32c <_gcry_mpi_resize+0x3c>  // b.lo, b.ul, b.last
     368:	b	444 <_gcry_mpi_resize+0x154>
     36c:	ldr	x0, [sp, #24]
     370:	ldr	x0, [x0, #16]
     374:	cmp	x0, #0x0
     378:	b.eq	3f0 <_gcry_mpi_resize+0x100>  // b.none
     37c:	ldr	x0, [sp, #24]
     380:	ldr	x2, [x0, #16]
     384:	ldr	w0, [sp, #20]
     388:	lsl	x0, x0, #3
     38c:	mov	x1, x0
     390:	mov	x0, x2
     394:	bl	bf40 <gcry_xrealloc>
     398:	mov	x1, x0
     39c:	ldr	x0, [sp, #24]
     3a0:	str	x1, [x0, #16]
     3a4:	ldr	x0, [sp, #24]
     3a8:	ldr	w0, [x0]
     3ac:	sxtw	x0, w0
     3b0:	str	x0, [sp, #40]
     3b4:	b	3dc <_gcry_mpi_resize+0xec>
     3b8:	ldr	x0, [sp, #24]
     3bc:	ldr	x1, [x0, #16]
     3c0:	ldr	x0, [sp, #40]
     3c4:	lsl	x0, x0, #3
     3c8:	add	x0, x1, x0
     3cc:	str	xzr, [x0]
     3d0:	ldr	x0, [sp, #40]
     3d4:	add	x0, x0, #0x1
     3d8:	str	x0, [sp, #40]
     3dc:	ldr	w0, [sp, #20]
     3e0:	ldr	x1, [sp, #40]
     3e4:	cmp	x1, x0
     3e8:	b.cc	3b8 <_gcry_mpi_resize+0xc8>  // b.lo, b.ul, b.last
     3ec:	b	438 <_gcry_mpi_resize+0x148>
     3f0:	ldr	x0, [sp, #24]
     3f4:	ldr	w0, [x0, #12]
     3f8:	and	w0, w0, #0x1
     3fc:	cmp	w0, #0x0
     400:	b.eq	420 <_gcry_mpi_resize+0x130>  // b.none
     404:	ldr	w0, [sp, #20]
     408:	mov	x1, #0x8                   	// #8
     40c:	bl	bea0 <gcry_xcalloc_secure>
     410:	mov	x1, x0
     414:	ldr	x0, [sp, #24]
     418:	str	x1, [x0, #16]
     41c:	b	438 <_gcry_mpi_resize+0x148>
     420:	ldr	w0, [sp, #20]
     424:	mov	x1, #0x8                   	// #8
     428:	bl	be04 <gcry_xcalloc>
     42c:	mov	x1, x0
     430:	ldr	x0, [sp, #24]
     434:	str	x1, [x0, #16]
     438:	ldr	w1, [sp, #20]
     43c:	ldr	x0, [sp, #24]
     440:	str	w1, [x0]
     444:	ldp	x29, x30, [sp], #48
     448:	ret

000000000000044c <_gcry_mpi_clear>:
     44c:	sub	sp, sp, #0x10
     450:	str	x0, [sp, #8]
     454:	ldr	x0, [sp, #8]
     458:	str	wzr, [x0, #4]
     45c:	ldr	x0, [sp, #8]
     460:	str	wzr, [x0, #12]
     464:	nop
     468:	add	sp, sp, #0x10
     46c:	ret

0000000000000470 <_gcry_mpi_free>:
     470:	stp	x29, x30, [sp, #-32]!
     474:	mov	x29, sp
     478:	str	x0, [sp, #24]
     47c:	ldr	x0, [sp, #24]
     480:	cmp	x0, #0x0
     484:	b.eq	4f8 <_gcry_mpi_free+0x88>  // b.none
     488:	ldr	x0, [sp, #24]
     48c:	ldr	w0, [x0, #12]
     490:	and	w0, w0, #0x4
     494:	cmp	w0, #0x0
     498:	b.eq	4ac <_gcry_mpi_free+0x3c>  // b.none
     49c:	ldr	x0, [sp, #24]
     4a0:	ldr	x0, [x0, #16]
     4a4:	bl	bdd0 <gcry_free>
     4a8:	b	4c8 <_gcry_mpi_free+0x58>
     4ac:	ldr	x0, [sp, #24]
     4b0:	ldr	x2, [x0, #16]
     4b4:	ldr	x0, [sp, #24]
     4b8:	ldr	w0, [x0]
     4bc:	mov	w1, w0
     4c0:	mov	x0, x2
     4c4:	bl	214 <_gcry_mpi_free_limb_space>
     4c8:	ldr	x0, [sp, #24]
     4cc:	ldr	w0, [x0, #12]
     4d0:	and	w0, w0, #0xfffffff8
     4d4:	cmp	w0, #0x0
     4d8:	b.eq	4ec <_gcry_mpi_free+0x7c>  // b.none
     4dc:	adrp	x0, 0 <grub_memcpy>
     4e0:	add	x0, x0, #0x0
     4e4:	ldr	x0, [x0]
     4e8:	bl	c0b8 <_gcry_log_bug>
     4ec:	ldr	x0, [sp, #24]
     4f0:	bl	bdd0 <gcry_free>
     4f4:	b	4fc <_gcry_mpi_free+0x8c>
     4f8:	nop
     4fc:	ldp	x29, x30, [sp], #32
     500:	ret
     504:	nop
	...

0000000000000510 <mpi_set_secure>:
     510:	stp	x29, x30, [sp, #-64]!
     514:	mov	x29, sp
     518:	str	x0, [sp, #24]
     51c:	ldr	x0, [sp, #24]
     520:	ldr	w0, [x0, #12]
     524:	and	w0, w0, #0x1
     528:	cmp	w0, #0x0
     52c:	b.ne	620 <mpi_set_secure+0x110>  // b.any
     530:	ldr	x0, [sp, #24]
     534:	ldr	w0, [x0, #12]
     538:	orr	w1, w0, #0x1
     53c:	ldr	x0, [sp, #24]
     540:	str	w1, [x0, #12]
     544:	ldr	x0, [sp, #24]
     548:	ldr	x0, [x0, #16]
     54c:	str	x0, [sp, #48]
     550:	ldr	x0, [sp, #24]
     554:	ldr	w0, [x0, #4]
     558:	cmp	w0, #0x0
     55c:	b.ne	598 <mpi_set_secure+0x88>  // b.any
     560:	ldr	x0, [sp, #48]
     564:	cmp	x0, #0x0
     568:	b.eq	628 <mpi_set_secure+0x118>  // b.none
     56c:	adrp	x0, 0 <grub_memcpy>
     570:	add	x0, x0, #0x0
     574:	ldr	x3, [x0]
     578:	mov	w2, #0xc1                  	// #193
     57c:	adrp	x0, 0 <grub_memcpy>
     580:	add	x0, x0, #0x0
     584:	ldr	x1, [x0]
     588:	adrp	x0, 0 <grub_memcpy>
     58c:	add	x0, x0, #0x0
     590:	ldr	x0, [x0]
     594:	bl	0 <_gcry_assert_failed>
     598:	ldr	x0, [sp, #24]
     59c:	ldr	w0, [x0, #4]
     5a0:	mov	w1, #0x1                   	// #1
     5a4:	bl	1a0 <_gcry_mpi_alloc_limb_space>
     5a8:	str	x0, [sp, #40]
     5ac:	str	wzr, [sp, #60]
     5b0:	b	5e8 <mpi_set_secure+0xd8>
     5b4:	ldrsw	x0, [sp, #60]
     5b8:	lsl	x0, x0, #3
     5bc:	ldr	x1, [sp, #48]
     5c0:	add	x1, x1, x0
     5c4:	ldrsw	x0, [sp, #60]
     5c8:	lsl	x0, x0, #3
     5cc:	ldr	x2, [sp, #40]
     5d0:	add	x0, x2, x0
     5d4:	ldr	x1, [x1]
     5d8:	str	x1, [x0]
     5dc:	ldr	w0, [sp, #60]
     5e0:	add	w0, w0, #0x1
     5e4:	str	w0, [sp, #60]
     5e8:	ldr	x0, [sp, #24]
     5ec:	ldr	w0, [x0, #4]
     5f0:	ldr	w1, [sp, #60]
     5f4:	cmp	w1, w0
     5f8:	b.lt	5b4 <mpi_set_secure+0xa4>  // b.tstop
     5fc:	ldr	x0, [sp, #24]
     600:	ldr	x1, [sp, #40]
     604:	str	x1, [x0, #16]
     608:	ldr	x0, [sp, #24]
     60c:	ldr	w0, [x0]
     610:	mov	w1, w0
     614:	ldr	x0, [sp, #48]
     618:	bl	214 <_gcry_mpi_free_limb_space>
     61c:	b	62c <mpi_set_secure+0x11c>
     620:	nop
     624:	b	62c <mpi_set_secure+0x11c>
     628:	nop
     62c:	ldp	x29, x30, [sp], #64
     630:	ret
     634:	nop
	...

0000000000000650 <gcry_mpi_set_opaque>:
     650:	stp	x29, x30, [sp, #-48]!
     654:	mov	x29, sp
     658:	str	x0, [sp, #40]
     65c:	str	x1, [sp, #32]
     660:	str	w2, [sp, #28]
     664:	ldr	x0, [sp, #40]
     668:	cmp	x0, #0x0
     66c:	b.ne	67c <gcry_mpi_set_opaque+0x2c>  // b.any
     670:	mov	w0, #0x0                   	// #0
     674:	bl	88 <_gcry_mpi_alloc>
     678:	str	x0, [sp, #40]
     67c:	ldr	x0, [sp, #40]
     680:	ldr	w0, [x0, #12]
     684:	and	w0, w0, #0x4
     688:	cmp	w0, #0x0
     68c:	b.eq	6a0 <gcry_mpi_set_opaque+0x50>  // b.none
     690:	ldr	x0, [sp, #40]
     694:	ldr	x0, [x0, #16]
     698:	bl	bdd0 <gcry_free>
     69c:	b	6bc <gcry_mpi_set_opaque+0x6c>
     6a0:	ldr	x0, [sp, #40]
     6a4:	ldr	x2, [x0, #16]
     6a8:	ldr	x0, [sp, #40]
     6ac:	ldr	w0, [x0]
     6b0:	mov	w1, w0
     6b4:	mov	x0, x2
     6b8:	bl	214 <_gcry_mpi_free_limb_space>
     6bc:	ldr	x0, [sp, #40]
     6c0:	ldr	x1, [sp, #32]
     6c4:	str	x1, [x0, #16]
     6c8:	ldr	x0, [sp, #40]
     6cc:	str	wzr, [x0]
     6d0:	ldr	x0, [sp, #40]
     6d4:	str	wzr, [x0, #4]
     6d8:	ldr	w1, [sp, #28]
     6dc:	ldr	x0, [sp, #40]
     6e0:	str	w1, [x0, #8]
     6e4:	ldr	x0, [sp, #40]
     6e8:	mov	w1, #0x4                   	// #4
     6ec:	str	w1, [x0, #12]
     6f0:	ldr	x0, [sp, #40]
     6f4:	ldp	x29, x30, [sp], #48
     6f8:	ret

00000000000006fc <gcry_mpi_get_opaque>:
     6fc:	stp	x29, x30, [sp, #-32]!
     700:	mov	x29, sp
     704:	str	x0, [sp, #24]
     708:	str	x1, [sp, #16]
     70c:	ldr	x0, [sp, #24]
     710:	ldr	w0, [x0, #12]
     714:	and	w0, w0, #0x4
     718:	cmp	w0, #0x0
     71c:	b.ne	730 <gcry_mpi_get_opaque+0x34>  // b.any
     720:	adrp	x0, 0 <grub_memcpy>
     724:	add	x0, x0, #0x0
     728:	ldr	x0, [x0]
     72c:	bl	c0b8 <_gcry_log_bug>
     730:	ldr	x0, [sp, #16]
     734:	cmp	x0, #0x0
     738:	b.eq	750 <gcry_mpi_get_opaque+0x54>  // b.none
     73c:	ldr	x0, [sp, #24]
     740:	ldr	w0, [x0, #8]
     744:	mov	w1, w0
     748:	ldr	x0, [sp, #16]
     74c:	str	w1, [x0]
     750:	ldr	x0, [sp, #24]
     754:	ldr	x0, [x0, #16]
     758:	ldp	x29, x30, [sp], #32
     75c:	ret
	...

0000000000000768 <_gcry_mpi_copy>:
     768:	stp	x29, x30, [sp, #-64]!
     76c:	mov	x29, sp
     770:	str	x0, [sp, #24]
     774:	ldr	x0, [sp, #24]
     778:	cmp	x0, #0x0
     77c:	b.eq	850 <_gcry_mpi_copy+0xe8>  // b.none
     780:	ldr	x0, [sp, #24]
     784:	ldr	w0, [x0, #12]
     788:	and	w0, w0, #0x4
     78c:	cmp	w0, #0x0
     790:	b.eq	850 <_gcry_mpi_copy+0xe8>  // b.none
     794:	ldr	x0, [sp, #24]
     798:	ldr	x0, [x0, #16]
     79c:	bl	bdf0 <gcry_is_secure>
     7a0:	cmp	w0, #0x0
     7a4:	b.eq	7d0 <_gcry_mpi_copy+0x68>  // b.none
     7a8:	ldr	x0, [sp, #24]
     7ac:	ldr	w0, [x0, #8]
     7b0:	add	w0, w0, #0x7
     7b4:	add	w1, w0, #0x7
     7b8:	cmp	w0, #0x0
     7bc:	csel	w0, w1, w0, lt  // lt = tstop
     7c0:	asr	w0, w0, #3
     7c4:	sxtw	x0, w0
     7c8:	bl	be58 <gcry_xmalloc_secure>
     7cc:	b	7f4 <_gcry_mpi_copy+0x8c>
     7d0:	ldr	x0, [sp, #24]
     7d4:	ldr	w0, [x0, #8]
     7d8:	add	w0, w0, #0x7
     7dc:	add	w1, w0, #0x7
     7e0:	cmp	w0, #0x0
     7e4:	csel	w0, w1, w0, lt  // lt = tstop
     7e8:	asr	w0, w0, #3
     7ec:	sxtw	x0, w0
     7f0:	bl	bef8 <gcry_xmalloc>
     7f4:	str	x0, [sp, #40]
     7f8:	ldr	x0, [sp, #24]
     7fc:	ldr	x3, [x0, #16]
     800:	ldr	x0, [sp, #24]
     804:	ldr	w0, [x0, #8]
     808:	add	w0, w0, #0x7
     80c:	add	w1, w0, #0x7
     810:	cmp	w0, #0x0
     814:	csel	w0, w1, w0, lt  // lt = tstop
     818:	asr	w0, w0, #3
     81c:	sxtw	x0, w0
     820:	mov	x2, x0
     824:	mov	x1, x3
     828:	ldr	x0, [sp, #40]
     82c:	bl	0 <grub_memcpy>
     830:	ldr	x0, [sp, #24]
     834:	ldr	w0, [x0, #8]
     838:	mov	w2, w0
     83c:	ldr	x1, [sp, #40]
     840:	mov	x0, #0x0                   	// #0
     844:	bl	650 <gcry_mpi_set_opaque>
     848:	str	x0, [sp, #48]
     84c:	b	92c <_gcry_mpi_copy+0x1c4>
     850:	ldr	x0, [sp, #24]
     854:	cmp	x0, #0x0
     858:	b.eq	928 <_gcry_mpi_copy+0x1c0>  // b.none
     85c:	ldr	x0, [sp, #24]
     860:	cmp	x0, #0x0
     864:	b.eq	88c <_gcry_mpi_copy+0x124>  // b.none
     868:	ldr	x0, [sp, #24]
     86c:	ldr	w0, [x0, #12]
     870:	and	w0, w0, #0x1
     874:	cmp	w0, #0x0
     878:	b.eq	88c <_gcry_mpi_copy+0x124>  // b.none
     87c:	ldr	x0, [sp, #24]
     880:	ldr	w0, [x0, #4]
     884:	bl	128 <_gcry_mpi_alloc_secure>
     888:	b	898 <_gcry_mpi_copy+0x130>
     88c:	ldr	x0, [sp, #24]
     890:	ldr	w0, [x0, #4]
     894:	bl	88 <_gcry_mpi_alloc>
     898:	str	x0, [sp, #48]
     89c:	ldr	x0, [sp, #24]
     8a0:	ldr	w1, [x0, #4]
     8a4:	ldr	x0, [sp, #48]
     8a8:	str	w1, [x0, #4]
     8ac:	ldr	x0, [sp, #24]
     8b0:	ldr	w1, [x0, #8]
     8b4:	ldr	x0, [sp, #48]
     8b8:	str	w1, [x0, #8]
     8bc:	ldr	x0, [sp, #24]
     8c0:	ldr	w1, [x0, #12]
     8c4:	ldr	x0, [sp, #48]
     8c8:	str	w1, [x0, #12]
     8cc:	str	wzr, [sp, #60]
     8d0:	b	910 <_gcry_mpi_copy+0x1a8>
     8d4:	ldr	x0, [sp, #24]
     8d8:	ldr	x1, [x0, #16]
     8dc:	ldrsw	x0, [sp, #60]
     8e0:	lsl	x0, x0, #3
     8e4:	add	x1, x1, x0
     8e8:	ldr	x0, [sp, #48]
     8ec:	ldr	x2, [x0, #16]
     8f0:	ldrsw	x0, [sp, #60]
     8f4:	lsl	x0, x0, #3
     8f8:	add	x0, x2, x0
     8fc:	ldr	x1, [x1]
     900:	str	x1, [x0]
     904:	ldr	w0, [sp, #60]
     908:	add	w0, w0, #0x1
     90c:	str	w0, [sp, #60]
     910:	ldr	x0, [sp, #48]
     914:	ldr	w0, [x0, #4]
     918:	ldr	w1, [sp, #60]
     91c:	cmp	w1, w0
     920:	b.lt	8d4 <_gcry_mpi_copy+0x16c>  // b.tstop
     924:	b	92c <_gcry_mpi_copy+0x1c4>
     928:	str	xzr, [sp, #48]
     92c:	ldr	x0, [sp, #48]
     930:	ldp	x29, x30, [sp], #64
     934:	ret

0000000000000938 <_gcry_mpi_alloc_like>:
     938:	stp	x29, x30, [sp, #-64]!
     93c:	mov	x29, sp
     940:	str	x0, [sp, #24]
     944:	ldr	x0, [sp, #24]
     948:	cmp	x0, #0x0
     94c:	b.eq	9ec <_gcry_mpi_alloc_like+0xb4>  // b.none
     950:	ldr	x0, [sp, #24]
     954:	ldr	w0, [x0, #12]
     958:	and	w0, w0, #0x4
     95c:	cmp	w0, #0x0
     960:	b.eq	9ec <_gcry_mpi_alloc_like+0xb4>  // b.none
     964:	ldr	x0, [sp, #24]
     968:	ldr	w0, [x0, #8]
     96c:	add	w0, w0, #0x7
     970:	add	w1, w0, #0x7
     974:	cmp	w0, #0x0
     978:	csel	w0, w1, w0, lt  // lt = tstop
     97c:	asr	w0, w0, #3
     980:	str	w0, [sp, #52]
     984:	ldr	x0, [sp, #24]
     988:	ldr	x0, [x0, #16]
     98c:	bl	bdf0 <gcry_is_secure>
     990:	cmp	w0, #0x0
     994:	b.eq	9a4 <_gcry_mpi_alloc_like+0x6c>  // b.none
     998:	ldrsw	x0, [sp, #52]
     99c:	bl	bdb4 <gcry_malloc_secure>
     9a0:	b	9ac <_gcry_mpi_alloc_like+0x74>
     9a4:	ldrsw	x0, [sp, #52]
     9a8:	bl	bd98 <gcry_malloc>
     9ac:	str	x0, [sp, #40]
     9b0:	ldr	x0, [sp, #24]
     9b4:	ldr	x0, [x0, #16]
     9b8:	ldrsw	x1, [sp, #52]
     9bc:	mov	x2, x1
     9c0:	mov	x1, x0
     9c4:	ldr	x0, [sp, #40]
     9c8:	bl	0 <grub_memcpy>
     9cc:	ldr	x0, [sp, #24]
     9d0:	ldr	w0, [x0, #8]
     9d4:	mov	w2, w0
     9d8:	ldr	x1, [sp, #40]
     9dc:	mov	x0, #0x0                   	// #0
     9e0:	bl	650 <gcry_mpi_set_opaque>
     9e4:	str	x0, [sp, #56]
     9e8:	b	a60 <_gcry_mpi_alloc_like+0x128>
     9ec:	ldr	x0, [sp, #24]
     9f0:	cmp	x0, #0x0
     9f4:	b.eq	a5c <_gcry_mpi_alloc_like+0x124>  // b.none
     9f8:	ldr	x0, [sp, #24]
     9fc:	cmp	x0, #0x0
     a00:	b.eq	a28 <_gcry_mpi_alloc_like+0xf0>  // b.none
     a04:	ldr	x0, [sp, #24]
     a08:	ldr	w0, [x0, #12]
     a0c:	and	w0, w0, #0x1
     a10:	cmp	w0, #0x0
     a14:	b.eq	a28 <_gcry_mpi_alloc_like+0xf0>  // b.none
     a18:	ldr	x0, [sp, #24]
     a1c:	ldr	w0, [x0, #4]
     a20:	bl	128 <_gcry_mpi_alloc_secure>
     a24:	b	a34 <_gcry_mpi_alloc_like+0xfc>
     a28:	ldr	x0, [sp, #24]
     a2c:	ldr	w0, [x0, #4]
     a30:	bl	88 <_gcry_mpi_alloc>
     a34:	str	x0, [sp, #56]
     a38:	ldr	x0, [sp, #56]
     a3c:	str	wzr, [x0, #4]
     a40:	ldr	x0, [sp, #56]
     a44:	str	wzr, [x0, #8]
     a48:	ldr	x0, [sp, #24]
     a4c:	ldr	w1, [x0, #12]
     a50:	ldr	x0, [sp, #56]
     a54:	str	w1, [x0, #12]
     a58:	b	a60 <_gcry_mpi_alloc_like+0x128>
     a5c:	str	xzr, [sp, #56]
     a60:	ldr	x0, [sp, #56]
     a64:	ldp	x29, x30, [sp], #64
     a68:	ret

0000000000000a6c <gcry_mpi_set>:
     a6c:	stp	x29, x30, [sp, #-64]!
     a70:	mov	x29, sp
     a74:	str	x0, [sp, #24]
     a78:	str	x1, [sp, #16]
     a7c:	ldr	x0, [sp, #16]
     a80:	ldr	w0, [x0, #4]
     a84:	str	w0, [sp, #56]
     a88:	ldr	x0, [sp, #16]
     a8c:	ldr	w0, [x0, #8]
     a90:	str	w0, [sp, #52]
     a94:	ldr	x0, [sp, #24]
     a98:	cmp	x0, #0x0
     a9c:	b.ne	ab0 <gcry_mpi_set+0x44>  // b.any
     aa0:	ldr	x0, [sp, #16]
     aa4:	ldr	w0, [x0, #4]
     aa8:	bl	88 <_gcry_mpi_alloc>
     aac:	str	x0, [sp, #24]
     ab0:	ldr	x0, [sp, #24]
     ab4:	ldr	w0, [x0]
     ab8:	ldr	w1, [sp, #56]
     abc:	cmp	w1, w0
     ac0:	b.le	ad4 <gcry_mpi_set+0x68>
     ac4:	ldr	w0, [sp, #56]
     ac8:	mov	w1, w0
     acc:	ldr	x0, [sp, #24]
     ad0:	bl	2f0 <_gcry_mpi_resize>
     ad4:	ldr	x0, [sp, #24]
     ad8:	ldr	x0, [x0, #16]
     adc:	str	x0, [sp, #40]
     ae0:	ldr	x0, [sp, #16]
     ae4:	ldr	x0, [x0, #16]
     ae8:	str	x0, [sp, #32]
     aec:	str	wzr, [sp, #60]
     af0:	b	b28 <gcry_mpi_set+0xbc>
     af4:	ldrsw	x0, [sp, #60]
     af8:	lsl	x0, x0, #3
     afc:	ldr	x1, [sp, #32]
     b00:	add	x1, x1, x0
     b04:	ldrsw	x0, [sp, #60]
     b08:	lsl	x0, x0, #3
     b0c:	ldr	x2, [sp, #40]
     b10:	add	x0, x2, x0
     b14:	ldr	x1, [x1]
     b18:	str	x1, [x0]
     b1c:	ldr	w0, [sp, #60]
     b20:	add	w0, w0, #0x1
     b24:	str	w0, [sp, #60]
     b28:	ldr	w1, [sp, #60]
     b2c:	ldr	w0, [sp, #56]
     b30:	cmp	w1, w0
     b34:	b.lt	af4 <gcry_mpi_set+0x88>  // b.tstop
     b38:	ldr	x0, [sp, #24]
     b3c:	ldr	w1, [sp, #56]
     b40:	str	w1, [x0, #4]
     b44:	ldr	x0, [sp, #16]
     b48:	ldr	w1, [x0, #12]
     b4c:	ldr	x0, [sp, #24]
     b50:	str	w1, [x0, #12]
     b54:	ldr	x0, [sp, #24]
     b58:	ldr	w1, [sp, #52]
     b5c:	str	w1, [x0, #8]
     b60:	ldr	x0, [sp, #24]
     b64:	ldp	x29, x30, [sp], #64
     b68:	ret

0000000000000b6c <gcry_mpi_set_ui>:
     b6c:	stp	x29, x30, [sp, #-32]!
     b70:	mov	x29, sp
     b74:	str	x0, [sp, #24]
     b78:	str	x1, [sp, #16]
     b7c:	ldr	x0, [sp, #24]
     b80:	cmp	x0, #0x0
     b84:	b.ne	b94 <gcry_mpi_set_ui+0x28>  // b.any
     b88:	mov	w0, #0x1                   	// #1
     b8c:	bl	88 <_gcry_mpi_alloc>
     b90:	str	x0, [sp, #24]
     b94:	ldr	x0, [sp, #24]
     b98:	ldr	w0, [x0]
     b9c:	cmp	w0, #0x0
     ba0:	b.gt	bb0 <gcry_mpi_set_ui+0x44>
     ba4:	mov	w1, #0x1                   	// #1
     ba8:	ldr	x0, [sp, #24]
     bac:	bl	2f0 <_gcry_mpi_resize>
     bb0:	ldr	x0, [sp, #24]
     bb4:	ldr	x0, [x0, #16]
     bb8:	ldr	x1, [sp, #16]
     bbc:	str	x1, [x0]
     bc0:	ldr	x0, [sp, #16]
     bc4:	cmp	x0, #0x0
     bc8:	cset	w0, ne  // ne = any
     bcc:	and	w0, w0, #0xff
     bd0:	mov	w1, w0
     bd4:	ldr	x0, [sp, #24]
     bd8:	str	w1, [x0, #4]
     bdc:	ldr	x0, [sp, #24]
     be0:	str	wzr, [x0, #8]
     be4:	ldr	x0, [sp, #24]
     be8:	str	wzr, [x0, #12]
     bec:	ldr	x0, [sp, #24]
     bf0:	ldp	x29, x30, [sp], #32
     bf4:	ret

0000000000000bf8 <_gcry_mpi_get_ui>:
     bf8:	sub	sp, sp, #0x20
     bfc:	str	x0, [sp, #8]
     c00:	str	x1, [sp]
     c04:	str	wzr, [sp, #28]
     c08:	str	xzr, [sp, #16]
     c0c:	ldr	x0, [sp, #8]
     c10:	ldr	w0, [x0, #4]
     c14:	cmp	w0, #0x1
     c18:	b.le	c28 <_gcry_mpi_get_ui+0x30>
     c1c:	mov	w0, #0x23                  	// #35
     c20:	str	w0, [sp, #28]
     c24:	b	c50 <_gcry_mpi_get_ui+0x58>
     c28:	ldr	x0, [sp, #8]
     c2c:	ldr	w0, [x0, #4]
     c30:	cmp	w0, #0x1
     c34:	b.ne	c4c <_gcry_mpi_get_ui+0x54>  // b.any
     c38:	ldr	x0, [sp, #8]
     c3c:	ldr	x0, [x0, #16]
     c40:	ldr	x0, [x0]
     c44:	str	x0, [sp, #16]
     c48:	b	c50 <_gcry_mpi_get_ui+0x58>
     c4c:	str	xzr, [sp, #16]
     c50:	ldr	w0, [sp, #28]
     c54:	cmp	w0, #0x0
     c58:	b.ne	c68 <_gcry_mpi_get_ui+0x70>  // b.any
     c5c:	ldr	x0, [sp]
     c60:	ldr	x1, [sp, #16]
     c64:	str	x1, [x0]
     c68:	ldr	w0, [sp, #28]
     c6c:	add	sp, sp, #0x20
     c70:	ret

0000000000000c74 <gcry_mpi_get_ui>:
     c74:	stp	x29, x30, [sp, #-48]!
     c78:	mov	x29, sp
     c7c:	str	x0, [sp, #24]
     c80:	str	x1, [sp, #16]
     c84:	str	wzr, [sp, #44]
     c88:	ldr	x1, [sp, #16]
     c8c:	ldr	x0, [sp, #24]
     c90:	bl	bf8 <_gcry_mpi_get_ui>
     c94:	str	w0, [sp, #44]
     c98:	ldr	w0, [sp, #44]
     c9c:	bl	68 <gcry_error>
     ca0:	ldp	x29, x30, [sp], #48
     ca4:	ret

0000000000000ca8 <_gcry_mpi_alloc_set_ui>:
     ca8:	stp	x29, x30, [sp, #-48]!
     cac:	mov	x29, sp
     cb0:	str	x0, [sp, #24]
     cb4:	mov	w0, #0x1                   	// #1
     cb8:	bl	88 <_gcry_mpi_alloc>
     cbc:	str	x0, [sp, #40]
     cc0:	ldr	x0, [sp, #40]
     cc4:	ldr	x0, [x0, #16]
     cc8:	ldr	x1, [sp, #24]
     ccc:	str	x1, [x0]
     cd0:	ldr	x0, [sp, #24]
     cd4:	cmp	x0, #0x0
     cd8:	cset	w0, ne  // ne = any
     cdc:	and	w0, w0, #0xff
     ce0:	mov	w1, w0
     ce4:	ldr	x0, [sp, #40]
     ce8:	str	w1, [x0, #4]
     cec:	ldr	x0, [sp, #40]
     cf0:	str	wzr, [x0, #8]
     cf4:	ldr	x0, [sp, #40]
     cf8:	ldp	x29, x30, [sp], #48
     cfc:	ret

0000000000000d00 <gcry_mpi_swap>:
     d00:	sub	sp, sp, #0x30
     d04:	str	x0, [sp, #8]
     d08:	str	x1, [sp]
     d0c:	ldr	x0, [sp, #8]
     d10:	add	x2, sp, #0x18
     d14:	mov	x3, x0
     d18:	ldp	x0, x1, [x3]
     d1c:	stp	x0, x1, [x2]
     d20:	ldr	x0, [x3, #16]
     d24:	str	x0, [x2, #16]
     d28:	ldr	x1, [sp, #8]
     d2c:	ldr	x0, [sp]
     d30:	mov	x2, x1
     d34:	mov	x3, x0
     d38:	ldp	x0, x1, [x3]
     d3c:	stp	x0, x1, [x2]
     d40:	ldr	x0, [x3, #16]
     d44:	str	x0, [x2, #16]
     d48:	ldr	x0, [sp]
     d4c:	mov	x3, x0
     d50:	add	x2, sp, #0x18
     d54:	ldp	x0, x1, [x2]
     d58:	stp	x0, x1, [x3]
     d5c:	ldr	x0, [x2, #16]
     d60:	str	x0, [x3, #16]
     d64:	nop
     d68:	add	sp, sp, #0x30
     d6c:	ret

0000000000000d70 <gcry_mpi_new>:
     d70:	stp	x29, x30, [sp, #-32]!
     d74:	mov	x29, sp
     d78:	str	w0, [sp, #28]
     d7c:	ldr	w0, [sp, #28]
     d80:	add	w0, w0, #0x3f
     d84:	lsr	w0, w0, #6
     d88:	bl	88 <_gcry_mpi_alloc>
     d8c:	ldp	x29, x30, [sp], #32
     d90:	ret

0000000000000d94 <gcry_mpi_snew>:
     d94:	stp	x29, x30, [sp, #-32]!
     d98:	mov	x29, sp
     d9c:	str	w0, [sp, #28]
     da0:	ldr	w0, [sp, #28]
     da4:	add	w0, w0, #0x3f
     da8:	lsr	w0, w0, #6
     dac:	bl	128 <_gcry_mpi_alloc_secure>
     db0:	ldp	x29, x30, [sp], #32
     db4:	ret

0000000000000db8 <gcry_mpi_release>:
     db8:	stp	x29, x30, [sp, #-32]!
     dbc:	mov	x29, sp
     dc0:	str	x0, [sp, #24]
     dc4:	ldr	x0, [sp, #24]
     dc8:	bl	470 <_gcry_mpi_free>
     dcc:	nop
     dd0:	ldp	x29, x30, [sp], #32
     dd4:	ret

0000000000000dd8 <gcry_mpi_set_flag>:
     dd8:	stp	x29, x30, [sp, #-32]!
     ddc:	mov	x29, sp
     de0:	str	x0, [sp, #24]
     de4:	str	w1, [sp, #20]
     de8:	ldr	w0, [sp, #20]
     dec:	cmp	w0, #0x1
     df0:	b.ne	e00 <gcry_mpi_set_flag+0x28>  // b.any
     df4:	ldr	x0, [sp, #24]
     df8:	bl	510 <mpi_set_secure>
     dfc:	b	e10 <gcry_mpi_set_flag+0x38>
     e00:	adrp	x0, 0 <grub_memcpy>
     e04:	add	x0, x0, #0x0
     e08:	ldr	x0, [x0]
     e0c:	bl	c0b8 <_gcry_log_bug>
     e10:	nop
     e14:	ldp	x29, x30, [sp], #32
     e18:	ret
     e1c:	nop
	...

0000000000000e28 <gcry_mpi_clear_flag>:
     e28:	stp	x29, x30, [sp, #-32]!
     e2c:	mov	x29, sp
     e30:	str	x0, [sp, #24]
     e34:	str	w1, [sp, #20]
     e38:	adrp	x0, 0 <grub_memcpy>
     e3c:	add	x0, x0, #0x0
     e40:	ldr	x0, [x0]
     e44:	bl	c0b8 <_gcry_log_bug>
	...

0000000000000e50 <gcry_mpi_get_flag>:
     e50:	stp	x29, x30, [sp, #-32]!
     e54:	mov	x29, sp
     e58:	str	x0, [sp, #24]
     e5c:	str	w1, [sp, #20]
     e60:	ldr	w0, [sp, #20]
     e64:	cmp	w0, #0x1
     e68:	b.eq	e7c <gcry_mpi_get_flag+0x2c>  // b.none
     e6c:	ldr	w0, [sp, #20]
     e70:	cmp	w0, #0x2
     e74:	b.eq	e8c <gcry_mpi_get_flag+0x3c>  // b.none
     e78:	b	e9c <gcry_mpi_get_flag+0x4c>
     e7c:	ldr	x0, [sp, #24]
     e80:	ldr	w0, [x0, #12]
     e84:	and	w0, w0, #0x1
     e88:	b	eac <gcry_mpi_get_flag+0x5c>
     e8c:	ldr	x0, [sp, #24]
     e90:	ldr	w0, [x0, #12]
     e94:	and	w0, w0, #0x4
     e98:	b	eac <gcry_mpi_get_flag+0x5c>
     e9c:	adrp	x0, 0 <grub_memcpy>
     ea0:	add	x0, x0, #0x0
     ea4:	ldr	x0, [x0]
     ea8:	bl	c0b8 <_gcry_log_bug>
     eac:	ldp	x29, x30, [sp], #32
     eb0:	ret
     eb4:	nop
	...

0000000000000ec0 <_gcry_mpi_normalize>:
     ec0:	sub	sp, sp, #0x10
     ec4:	str	x0, [sp, #8]
     ec8:	ldr	x0, [sp, #8]
     ecc:	cmp	x0, #0x0
     ed0:	b.eq	f00 <_gcry_mpi_normalize+0x40>  // b.none
     ed4:	ldr	x0, [sp, #8]
     ed8:	ldr	w0, [x0, #12]
     edc:	and	w0, w0, #0x4
     ee0:	cmp	w0, #0x0
     ee4:	b.ne	f40 <_gcry_mpi_normalize+0x80>  // b.any
     ee8:	b	f00 <_gcry_mpi_normalize+0x40>
     eec:	ldr	x0, [sp, #8]
     ef0:	ldr	w0, [x0, #4]
     ef4:	sub	w1, w0, #0x1
     ef8:	ldr	x0, [sp, #8]
     efc:	str	w1, [x0, #4]
     f00:	ldr	x0, [sp, #8]
     f04:	ldr	w0, [x0, #4]
     f08:	cmp	w0, #0x0
     f0c:	b.eq	f44 <_gcry_mpi_normalize+0x84>  // b.none
     f10:	ldr	x0, [sp, #8]
     f14:	ldr	x1, [x0, #16]
     f18:	ldr	x0, [sp, #8]
     f1c:	ldr	w0, [x0, #4]
     f20:	sxtw	x0, w0
     f24:	lsl	x0, x0, #3
     f28:	sub	x0, x0, #0x8
     f2c:	add	x0, x1, x0
     f30:	ldr	x0, [x0]
     f34:	cmp	x0, #0x0
     f38:	b.eq	eec <_gcry_mpi_normalize+0x2c>  // b.none
     f3c:	b	f44 <_gcry_mpi_normalize+0x84>
     f40:	nop
     f44:	add	sp, sp, #0x10
     f48:	ret

0000000000000f4c <gcry_mpi_get_nbits>:
     f4c:	stp	x29, x30, [sp, #-64]!
     f50:	mov	x29, sp
     f54:	str	x0, [sp, #24]
     f58:	ldr	x0, [sp, #24]
     f5c:	cmp	x0, #0x0
     f60:	b.eq	f84 <gcry_mpi_get_nbits+0x38>  // b.none
     f64:	ldr	x0, [sp, #24]
     f68:	ldr	w0, [x0, #12]
     f6c:	and	w0, w0, #0x4
     f70:	cmp	w0, #0x0
     f74:	b.eq	f84 <gcry_mpi_get_nbits+0x38>  // b.none
     f78:	ldr	x0, [sp, #24]
     f7c:	ldr	w0, [x0, #8]
     f80:	b	1094 <gcry_mpi_get_nbits+0x148>
     f84:	ldr	x0, [sp, #24]
     f88:	bl	ec0 <_gcry_mpi_normalize>
     f8c:	ldr	x0, [sp, #24]
     f90:	ldr	w0, [x0, #4]
     f94:	cmp	w0, #0x0
     f98:	b.eq	108c <gcry_mpi_get_nbits+0x140>  // b.none
     f9c:	ldr	x0, [sp, #24]
     fa0:	ldr	x1, [x0, #16]
     fa4:	ldr	x0, [sp, #24]
     fa8:	ldr	w0, [x0, #4]
     fac:	sxtw	x0, w0
     fb0:	lsl	x0, x0, #3
     fb4:	sub	x0, x0, #0x8
     fb8:	add	x0, x1, x0
     fbc:	ldr	x0, [x0]
     fc0:	str	x0, [sp, #40]
     fc4:	ldr	x0, [sp, #40]
     fc8:	cmp	x0, #0x0
     fcc:	b.eq	105c <gcry_mpi_get_nbits+0x110>  // b.none
     fd0:	ldr	x0, [sp, #40]
     fd4:	str	x0, [sp, #32]
     fd8:	mov	x0, #0x38                  	// #56
     fdc:	str	x0, [sp, #48]
     fe0:	b	100c <gcry_mpi_get_nbits+0xc0>
     fe4:	ldr	x0, [sp, #48]
     fe8:	mov	w1, w0
     fec:	ldr	x0, [sp, #32]
     ff0:	lsr	x0, x0, x1
     ff4:	and	x0, x0, #0xff
     ff8:	cmp	x0, #0x0
     ffc:	b.ne	101c <gcry_mpi_get_nbits+0xd0>  // b.any
    1000:	ldr	x0, [sp, #48]
    1004:	sub	x0, x0, #0x8
    1008:	str	x0, [sp, #48]
    100c:	ldr	x0, [sp, #48]
    1010:	cmp	x0, #0x0
    1014:	b.ne	fe4 <gcry_mpi_get_nbits+0x98>  // b.any
    1018:	b	1020 <gcry_mpi_get_nbits+0xd4>
    101c:	nop
    1020:	ldr	x0, [sp, #48]
    1024:	mov	w1, w0
    1028:	ldr	x0, [sp, #32]
    102c:	lsr	x0, x0, x1
    1030:	adrp	x1, 0 <grub_memcpy>
    1034:	add	x1, x1, #0x0
    1038:	ldr	x1, [x1]
    103c:	ldrb	w0, [x1, x0]
    1040:	mov	w1, w0
    1044:	ldr	x0, [sp, #48]
    1048:	add	w0, w1, w0
    104c:	mov	w1, #0x40                  	// #64
    1050:	sub	w0, w1, w0
    1054:	str	w0, [sp, #60]
    1058:	b	1064 <gcry_mpi_get_nbits+0x118>
    105c:	mov	w0, #0x40                  	// #64
    1060:	str	w0, [sp, #60]
    1064:	ldr	x0, [sp, #24]
    1068:	ldr	w0, [x0, #4]
    106c:	sub	w0, w0, #0x1
    1070:	lsl	w0, w0, #6
    1074:	mov	w1, w0
    1078:	ldr	w0, [sp, #60]
    107c:	sub	w0, w1, w0
    1080:	add	w0, w0, #0x40
    1084:	str	w0, [sp, #60]
    1088:	b	1090 <gcry_mpi_get_nbits+0x144>
    108c:	str	wzr, [sp, #60]
    1090:	ldr	w0, [sp, #60]
    1094:	ldp	x29, x30, [sp], #64
    1098:	ret
    109c:	nop
	...

00000000000010a8 <gcry_mpi_test_bit>:
    10a8:	sub	sp, sp, #0x20
    10ac:	str	x0, [sp, #8]
    10b0:	str	w1, [sp, #4]
    10b4:	ldr	w0, [sp, #4]
    10b8:	lsr	w0, w0, #6
    10bc:	str	w0, [sp, #28]
    10c0:	ldr	w0, [sp, #4]
    10c4:	and	w0, w0, #0x3f
    10c8:	str	w0, [sp, #24]
    10cc:	ldr	x0, [sp, #8]
    10d0:	ldr	w0, [x0, #4]
    10d4:	mov	w1, w0
    10d8:	ldr	w0, [sp, #28]
    10dc:	cmp	w0, w1
    10e0:	b.cc	10ec <gcry_mpi_test_bit+0x44>  // b.lo, b.ul, b.last
    10e4:	mov	w0, #0x0                   	// #0
    10e8:	b	1118 <gcry_mpi_test_bit+0x70>
    10ec:	ldr	x0, [sp, #8]
    10f0:	ldr	x1, [x0, #16]
    10f4:	ldr	w0, [sp, #28]
    10f8:	lsl	x0, x0, #3
    10fc:	add	x0, x1, x0
    1100:	ldr	x0, [x0]
    1104:	str	x0, [sp, #16]
    1108:	ldr	w0, [sp, #24]
    110c:	ldr	x1, [sp, #16]
    1110:	lsr	x0, x1, x0
    1114:	and	w0, w0, #0x1
    1118:	add	sp, sp, #0x20
    111c:	ret

0000000000001120 <gcry_mpi_set_bit>:
    1120:	stp	x29, x30, [sp, #-48]!
    1124:	mov	x29, sp
    1128:	str	x0, [sp, #24]
    112c:	str	w1, [sp, #20]
    1130:	ldr	w0, [sp, #20]
    1134:	lsr	w0, w0, #6
    1138:	str	w0, [sp, #44]
    113c:	ldr	w0, [sp, #20]
    1140:	and	w0, w0, #0x3f
    1144:	str	w0, [sp, #40]
    1148:	ldr	x0, [sp, #24]
    114c:	ldr	w0, [x0, #4]
    1150:	mov	w1, w0
    1154:	ldr	w0, [sp, #44]
    1158:	cmp	w0, w1
    115c:	b.cc	1188 <gcry_mpi_set_bit+0x68>  // b.lo, b.ul, b.last
    1160:	ldr	w0, [sp, #44]
    1164:	add	w0, w0, #0x1
    1168:	mov	w1, w0
    116c:	ldr	x0, [sp, #24]
    1170:	bl	2f0 <_gcry_mpi_resize>
    1174:	ldr	w0, [sp, #44]
    1178:	add	w0, w0, #0x1
    117c:	mov	w1, w0
    1180:	ldr	x0, [sp, #24]
    1184:	str	w1, [x0, #4]
    1188:	ldr	x0, [sp, #24]
    118c:	ldr	x1, [x0, #16]
    1190:	ldr	w0, [sp, #44]
    1194:	lsl	x0, x0, #3
    1198:	add	x0, x1, x0
    119c:	ldr	x2, [x0]
    11a0:	ldr	w0, [sp, #40]
    11a4:	mov	x1, #0x1                   	// #1
    11a8:	lsl	x1, x1, x0
    11ac:	ldr	x0, [sp, #24]
    11b0:	ldr	x3, [x0, #16]
    11b4:	ldr	w0, [sp, #44]
    11b8:	lsl	x0, x0, #3
    11bc:	add	x0, x3, x0
    11c0:	orr	x1, x2, x1
    11c4:	str	x1, [x0]
    11c8:	nop
    11cc:	ldp	x29, x30, [sp], #48
    11d0:	ret

00000000000011d4 <gcry_mpi_set_highbit>:
    11d4:	stp	x29, x30, [sp, #-48]!
    11d8:	mov	x29, sp
    11dc:	str	x0, [sp, #24]
    11e0:	str	w1, [sp, #20]
    11e4:	ldr	w0, [sp, #20]
    11e8:	lsr	w0, w0, #6
    11ec:	str	w0, [sp, #40]
    11f0:	ldr	w0, [sp, #20]
    11f4:	and	w0, w0, #0x3f
    11f8:	str	w0, [sp, #44]
    11fc:	ldr	x0, [sp, #24]
    1200:	ldr	w0, [x0, #4]
    1204:	mov	w1, w0
    1208:	ldr	w0, [sp, #40]
    120c:	cmp	w0, w1
    1210:	b.cc	123c <gcry_mpi_set_highbit+0x68>  // b.lo, b.ul, b.last
    1214:	ldr	w0, [sp, #40]
    1218:	add	w0, w0, #0x1
    121c:	mov	w1, w0
    1220:	ldr	x0, [sp, #24]
    1224:	bl	2f0 <_gcry_mpi_resize>
    1228:	ldr	w0, [sp, #40]
    122c:	add	w0, w0, #0x1
    1230:	mov	w1, w0
    1234:	ldr	x0, [sp, #24]
    1238:	str	w1, [x0, #4]
    123c:	ldr	x0, [sp, #24]
    1240:	ldr	x1, [x0, #16]
    1244:	ldr	w0, [sp, #40]
    1248:	lsl	x0, x0, #3
    124c:	add	x0, x1, x0
    1250:	ldr	x2, [x0]
    1254:	ldr	w0, [sp, #44]
    1258:	mov	x1, #0x1                   	// #1
    125c:	lsl	x1, x1, x0
    1260:	ldr	x0, [sp, #24]
    1264:	ldr	x3, [x0, #16]
    1268:	ldr	w0, [sp, #40]
    126c:	lsl	x0, x0, #3
    1270:	add	x0, x3, x0
    1274:	orr	x1, x2, x1
    1278:	str	x1, [x0]
    127c:	ldr	w0, [sp, #44]
    1280:	add	w0, w0, #0x1
    1284:	str	w0, [sp, #44]
    1288:	b	12dc <gcry_mpi_set_highbit+0x108>
    128c:	ldr	x0, [sp, #24]
    1290:	ldr	x1, [x0, #16]
    1294:	ldr	w0, [sp, #40]
    1298:	lsl	x0, x0, #3
    129c:	add	x0, x1, x0
    12a0:	ldr	x2, [x0]
    12a4:	ldr	w0, [sp, #44]
    12a8:	mov	x1, #0x1                   	// #1
    12ac:	lsl	x0, x1, x0
    12b0:	mvn	x1, x0
    12b4:	ldr	x0, [sp, #24]
    12b8:	ldr	x3, [x0, #16]
    12bc:	ldr	w0, [sp, #40]
    12c0:	lsl	x0, x0, #3
    12c4:	add	x0, x3, x0
    12c8:	and	x1, x2, x1
    12cc:	str	x1, [x0]
    12d0:	ldr	w0, [sp, #44]
    12d4:	add	w0, w0, #0x1
    12d8:	str	w0, [sp, #44]
    12dc:	ldr	w0, [sp, #44]
    12e0:	cmp	w0, #0x3f
    12e4:	b.ls	128c <gcry_mpi_set_highbit+0xb8>  // b.plast
    12e8:	ldr	w0, [sp, #40]
    12ec:	add	w0, w0, #0x1
    12f0:	mov	w1, w0
    12f4:	ldr	x0, [sp, #24]
    12f8:	str	w1, [x0, #4]
    12fc:	nop
    1300:	ldp	x29, x30, [sp], #48
    1304:	ret

0000000000001308 <gcry_mpi_clear_highbit>:
    1308:	sub	sp, sp, #0x20
    130c:	str	x0, [sp, #8]
    1310:	str	w1, [sp, #4]
    1314:	ldr	w0, [sp, #4]
    1318:	lsr	w0, w0, #6
    131c:	str	w0, [sp, #24]
    1320:	ldr	w0, [sp, #4]
    1324:	and	w0, w0, #0x3f
    1328:	str	w0, [sp, #28]
    132c:	ldr	x0, [sp, #8]
    1330:	ldr	w0, [x0, #4]
    1334:	mov	w1, w0
    1338:	ldr	w0, [sp, #24]
    133c:	cmp	w0, w1
    1340:	b.cs	13bc <gcry_mpi_clear_highbit+0xb4>  // b.hs, b.nlast
    1344:	b	1398 <gcry_mpi_clear_highbit+0x90>
    1348:	ldr	x0, [sp, #8]
    134c:	ldr	x1, [x0, #16]
    1350:	ldr	w0, [sp, #24]
    1354:	lsl	x0, x0, #3
    1358:	add	x0, x1, x0
    135c:	ldr	x2, [x0]
    1360:	ldr	w0, [sp, #28]
    1364:	mov	x1, #0x1                   	// #1
    1368:	lsl	x0, x1, x0
    136c:	mvn	x1, x0
    1370:	ldr	x0, [sp, #8]
    1374:	ldr	x3, [x0, #16]
    1378:	ldr	w0, [sp, #24]
    137c:	lsl	x0, x0, #3
    1380:	add	x0, x3, x0
    1384:	and	x1, x2, x1
    1388:	str	x1, [x0]
    138c:	ldr	w0, [sp, #28]
    1390:	add	w0, w0, #0x1
    1394:	str	w0, [sp, #28]
    1398:	ldr	w0, [sp, #28]
    139c:	cmp	w0, #0x3f
    13a0:	b.ls	1348 <gcry_mpi_clear_highbit+0x40>  // b.plast
    13a4:	ldr	w0, [sp, #24]
    13a8:	add	w0, w0, #0x1
    13ac:	mov	w1, w0
    13b0:	ldr	x0, [sp, #8]
    13b4:	str	w1, [x0, #4]
    13b8:	b	13c0 <gcry_mpi_clear_highbit+0xb8>
    13bc:	nop
    13c0:	add	sp, sp, #0x20
    13c4:	ret

00000000000013c8 <gcry_mpi_clear_bit>:
    13c8:	sub	sp, sp, #0x20
    13cc:	str	x0, [sp, #8]
    13d0:	str	w1, [sp, #4]
    13d4:	ldr	w0, [sp, #4]
    13d8:	lsr	w0, w0, #6
    13dc:	str	w0, [sp, #28]
    13e0:	ldr	w0, [sp, #4]
    13e4:	and	w0, w0, #0x3f
    13e8:	str	w0, [sp, #24]
    13ec:	ldr	x0, [sp, #8]
    13f0:	ldr	w0, [x0, #4]
    13f4:	mov	w1, w0
    13f8:	ldr	w0, [sp, #28]
    13fc:	cmp	w0, w1
    1400:	b.cs	144c <gcry_mpi_clear_bit+0x84>  // b.hs, b.nlast
    1404:	ldr	x0, [sp, #8]
    1408:	ldr	x1, [x0, #16]
    140c:	ldr	w0, [sp, #28]
    1410:	lsl	x0, x0, #3
    1414:	add	x0, x1, x0
    1418:	ldr	x2, [x0]
    141c:	ldr	w0, [sp, #24]
    1420:	mov	x1, #0x1                   	// #1
    1424:	lsl	x0, x1, x0
    1428:	mvn	x1, x0
    142c:	ldr	x0, [sp, #8]
    1430:	ldr	x3, [x0, #16]
    1434:	ldr	w0, [sp, #28]
    1438:	lsl	x0, x0, #3
    143c:	add	x0, x3, x0
    1440:	and	x1, x2, x1
    1444:	str	x1, [x0]
    1448:	b	1450 <gcry_mpi_clear_bit+0x88>
    144c:	nop
    1450:	add	sp, sp, #0x20
    1454:	ret

0000000000001458 <_gcry_mpi_rshift_limbs>:
    1458:	sub	sp, sp, #0x30
    145c:	str	x0, [sp, #8]
    1460:	str	w1, [sp, #4]
    1464:	ldr	x0, [sp, #8]
    1468:	ldr	x0, [x0, #16]
    146c:	str	x0, [sp, #32]
    1470:	ldr	x0, [sp, #8]
    1474:	ldr	w0, [x0, #4]
    1478:	str	w0, [sp, #28]
    147c:	ldr	w0, [sp, #28]
    1480:	ldr	w1, [sp, #4]
    1484:	cmp	w1, w0
    1488:	b.cc	1498 <_gcry_mpi_rshift_limbs+0x40>  // b.lo, b.ul, b.last
    148c:	ldr	x0, [sp, #8]
    1490:	str	wzr, [x0, #4]
    1494:	b	152c <_gcry_mpi_rshift_limbs+0xd4>
    1498:	str	wzr, [sp, #44]
    149c:	b	14e0 <_gcry_mpi_rshift_limbs+0x88>
    14a0:	ldr	w1, [sp, #44]
    14a4:	ldr	w0, [sp, #4]
    14a8:	add	w0, w1, w0
    14ac:	mov	w0, w0
    14b0:	lsl	x0, x0, #3
    14b4:	ldr	x1, [sp, #32]
    14b8:	add	x1, x1, x0
    14bc:	ldr	w0, [sp, #44]
    14c0:	lsl	x0, x0, #3
    14c4:	ldr	x2, [sp, #32]
    14c8:	add	x0, x2, x0
    14cc:	ldr	x1, [x1]
    14d0:	str	x1, [x0]
    14d4:	ldr	w0, [sp, #44]
    14d8:	add	w0, w0, #0x1
    14dc:	str	w0, [sp, #44]
    14e0:	ldr	w1, [sp, #28]
    14e4:	ldr	w0, [sp, #4]
    14e8:	sub	w0, w1, w0
    14ec:	ldr	w1, [sp, #44]
    14f0:	cmp	w1, w0
    14f4:	b.cc	14a0 <_gcry_mpi_rshift_limbs+0x48>  // b.lo, b.ul, b.last
    14f8:	ldr	w0, [sp, #44]
    14fc:	lsl	x0, x0, #3
    1500:	ldr	x1, [sp, #32]
    1504:	add	x0, x1, x0
    1508:	str	xzr, [x0]
    150c:	ldr	x0, [sp, #8]
    1510:	ldr	w0, [x0, #4]
    1514:	mov	w1, w0
    1518:	ldr	w0, [sp, #4]
    151c:	sub	w0, w1, w0
    1520:	mov	w1, w0
    1524:	ldr	x0, [sp, #8]
    1528:	str	w1, [x0, #4]
    152c:	add	sp, sp, #0x30
    1530:	ret

0000000000001534 <gcry_mpi_rshift>:
    1534:	stp	x29, x30, [sp, #-64]!
    1538:	mov	x29, sp
    153c:	str	x0, [sp, #40]
    1540:	str	x1, [sp, #32]
    1544:	str	w2, [sp, #28]
    1548:	ldr	w0, [sp, #28]
    154c:	lsr	w0, w0, #6
    1550:	str	w0, [sp, #56]
    1554:	ldr	w0, [sp, #28]
    1558:	and	w0, w0, #0x3f
    155c:	str	w0, [sp, #52]
    1560:	ldr	x1, [sp, #40]
    1564:	ldr	x0, [sp, #32]
    1568:	cmp	x1, x0
    156c:	b.ne	1690 <gcry_mpi_rshift+0x15c>  // b.any
    1570:	ldr	x0, [sp, #40]
    1574:	ldr	w0, [x0, #4]
    1578:	mov	w1, w0
    157c:	ldr	w0, [sp, #56]
    1580:	cmp	w0, w1
    1584:	b.cc	1594 <gcry_mpi_rshift+0x60>  // b.lo, b.ul, b.last
    1588:	ldr	x0, [sp, #40]
    158c:	str	wzr, [x0, #4]
    1590:	b	19b8 <gcry_mpi_rshift+0x484>
    1594:	ldr	w0, [sp, #56]
    1598:	cmp	w0, #0x0
    159c:	b.eq	1648 <gcry_mpi_rshift+0x114>  // b.none
    15a0:	str	wzr, [sp, #60]
    15a4:	b	15f0 <gcry_mpi_rshift+0xbc>
    15a8:	ldr	x0, [sp, #40]
    15ac:	ldr	x1, [x0, #16]
    15b0:	ldr	w2, [sp, #60]
    15b4:	ldr	w0, [sp, #56]
    15b8:	add	w0, w2, w0
    15bc:	mov	w0, w0
    15c0:	lsl	x0, x0, #3
    15c4:	add	x1, x1, x0
    15c8:	ldr	x0, [sp, #40]
    15cc:	ldr	x2, [x0, #16]
    15d0:	ldr	w0, [sp, #60]
    15d4:	lsl	x0, x0, #3
    15d8:	add	x0, x2, x0
    15dc:	ldr	x1, [x1]
    15e0:	str	x1, [x0]
    15e4:	ldr	w0, [sp, #60]
    15e8:	add	w0, w0, #0x1
    15ec:	str	w0, [sp, #60]
    15f0:	ldr	x0, [sp, #40]
    15f4:	ldr	w0, [x0, #4]
    15f8:	mov	w1, w0
    15fc:	ldr	w0, [sp, #56]
    1600:	sub	w0, w1, w0
    1604:	ldr	w1, [sp, #60]
    1608:	cmp	w1, w0
    160c:	b.cc	15a8 <gcry_mpi_rshift+0x74>  // b.lo, b.ul, b.last
    1610:	ldr	x0, [sp, #40]
    1614:	ldr	x1, [x0, #16]
    1618:	ldr	w0, [sp, #60]
    161c:	lsl	x0, x0, #3
    1620:	add	x0, x1, x0
    1624:	str	xzr, [x0]
    1628:	ldr	x0, [sp, #40]
    162c:	ldr	w0, [x0, #4]
    1630:	mov	w1, w0
    1634:	ldr	w0, [sp, #56]
    1638:	sub	w0, w1, w0
    163c:	mov	w1, w0
    1640:	ldr	x0, [sp, #40]
    1644:	str	w1, [x0, #4]
    1648:	ldr	x0, [sp, #40]
    164c:	ldr	w0, [x0, #4]
    1650:	cmp	w0, #0x0
    1654:	b.eq	19a0 <gcry_mpi_rshift+0x46c>  // b.none
    1658:	ldr	w0, [sp, #52]
    165c:	cmp	w0, #0x0
    1660:	b.eq	19a0 <gcry_mpi_rshift+0x46c>  // b.none
    1664:	ldr	x0, [sp, #40]
    1668:	ldr	x4, [x0, #16]
    166c:	ldr	x0, [sp, #40]
    1670:	ldr	x1, [x0, #16]
    1674:	ldr	x0, [sp, #40]
    1678:	ldr	w0, [x0, #4]
    167c:	ldr	w3, [sp, #52]
    1680:	mov	w2, w0
    1684:	mov	x0, x4
    1688:	bl	b848 <_gcry_mpih_rshift>
    168c:	b	19a0 <gcry_mpi_rshift+0x46c>
    1690:	ldr	w0, [sp, #56]
    1694:	cmp	w0, #0x0
    1698:	b.eq	1870 <gcry_mpi_rshift+0x33c>  // b.none
    169c:	ldr	x0, [sp, #32]
    16a0:	ldr	w0, [x0, #4]
    16a4:	str	w0, [sp, #48]
    16a8:	ldr	x0, [sp, #32]
    16ac:	ldr	w1, [x0, #8]
    16b0:	ldr	x0, [sp, #40]
    16b4:	str	w1, [x0, #8]
    16b8:	ldr	x0, [sp, #40]
    16bc:	ldr	w0, [x0]
    16c0:	ldr	w1, [sp, #48]
    16c4:	cmp	w1, w0
    16c8:	b.le	16dc <gcry_mpi_rshift+0x1a8>
    16cc:	ldr	w0, [sp, #48]
    16d0:	mov	w1, w0
    16d4:	ldr	x0, [sp, #40]
    16d8:	bl	2f0 <_gcry_mpi_resize>
    16dc:	ldr	x0, [sp, #40]
    16e0:	ldr	w1, [sp, #48]
    16e4:	str	w1, [x0, #4]
    16e8:	str	wzr, [sp, #60]
    16ec:	b	172c <gcry_mpi_rshift+0x1f8>
    16f0:	ldr	x0, [sp, #32]
    16f4:	ldr	x1, [x0, #16]
    16f8:	ldr	w0, [sp, #60]
    16fc:	lsl	x0, x0, #3
    1700:	add	x1, x1, x0
    1704:	ldr	x0, [sp, #40]
    1708:	ldr	x2, [x0, #16]
    170c:	ldr	w0, [sp, #60]
    1710:	lsl	x0, x0, #3
    1714:	add	x0, x2, x0
    1718:	ldr	x1, [x1]
    171c:	str	x1, [x0]
    1720:	ldr	w0, [sp, #60]
    1724:	add	w0, w0, #0x1
    1728:	str	w0, [sp, #60]
    172c:	ldr	x0, [sp, #32]
    1730:	ldr	w0, [x0, #4]
    1734:	mov	w1, w0
    1738:	ldr	w0, [sp, #60]
    173c:	cmp	w0, w1
    1740:	b.cc	16f0 <gcry_mpi_rshift+0x1bc>  // b.lo, b.ul, b.last
    1744:	ldr	w1, [sp, #60]
    1748:	ldr	x0, [sp, #40]
    174c:	str	w1, [x0, #4]
    1750:	ldr	x0, [sp, #40]
    1754:	ldr	w0, [x0, #4]
    1758:	mov	w1, w0
    175c:	ldr	w0, [sp, #56]
    1760:	cmp	w0, w1
    1764:	b.cc	1774 <gcry_mpi_rshift+0x240>  // b.lo, b.ul, b.last
    1768:	ldr	x0, [sp, #40]
    176c:	str	wzr, [x0, #4]
    1770:	b	19b8 <gcry_mpi_rshift+0x484>
    1774:	ldr	w0, [sp, #56]
    1778:	cmp	w0, #0x0
    177c:	b.eq	1828 <gcry_mpi_rshift+0x2f4>  // b.none
    1780:	str	wzr, [sp, #60]
    1784:	b	17d0 <gcry_mpi_rshift+0x29c>
    1788:	ldr	x0, [sp, #40]
    178c:	ldr	x1, [x0, #16]
    1790:	ldr	w2, [sp, #60]
    1794:	ldr	w0, [sp, #56]
    1798:	add	w0, w2, w0
    179c:	mov	w0, w0
    17a0:	lsl	x0, x0, #3
    17a4:	add	x1, x1, x0
    17a8:	ldr	x0, [sp, #40]
    17ac:	ldr	x2, [x0, #16]
    17b0:	ldr	w0, [sp, #60]
    17b4:	lsl	x0, x0, #3
    17b8:	add	x0, x2, x0
    17bc:	ldr	x1, [x1]
    17c0:	str	x1, [x0]
    17c4:	ldr	w0, [sp, #60]
    17c8:	add	w0, w0, #0x1
    17cc:	str	w0, [sp, #60]
    17d0:	ldr	x0, [sp, #40]
    17d4:	ldr	w0, [x0, #4]
    17d8:	mov	w1, w0
    17dc:	ldr	w0, [sp, #56]
    17e0:	sub	w0, w1, w0
    17e4:	ldr	w1, [sp, #60]
    17e8:	cmp	w1, w0
    17ec:	b.cc	1788 <gcry_mpi_rshift+0x254>  // b.lo, b.ul, b.last
    17f0:	ldr	x0, [sp, #40]
    17f4:	ldr	x1, [x0, #16]
    17f8:	ldr	w0, [sp, #60]
    17fc:	lsl	x0, x0, #3
    1800:	add	x0, x1, x0
    1804:	str	xzr, [x0]
    1808:	ldr	x0, [sp, #40]
    180c:	ldr	w0, [x0, #4]
    1810:	mov	w1, w0
    1814:	ldr	w0, [sp, #56]
    1818:	sub	w0, w1, w0
    181c:	mov	w1, w0
    1820:	ldr	x0, [sp, #40]
    1824:	str	w1, [x0, #4]
    1828:	ldr	x0, [sp, #40]
    182c:	ldr	w0, [x0, #4]
    1830:	cmp	w0, #0x0
    1834:	b.eq	19a0 <gcry_mpi_rshift+0x46c>  // b.none
    1838:	ldr	w0, [sp, #52]
    183c:	cmp	w0, #0x0
    1840:	b.eq	19a0 <gcry_mpi_rshift+0x46c>  // b.none
    1844:	ldr	x0, [sp, #40]
    1848:	ldr	x4, [x0, #16]
    184c:	ldr	x0, [sp, #40]
    1850:	ldr	x1, [x0, #16]
    1854:	ldr	x0, [sp, #40]
    1858:	ldr	w0, [x0, #4]
    185c:	ldr	w3, [sp, #52]
    1860:	mov	w2, w0
    1864:	mov	x0, x4
    1868:	bl	b848 <_gcry_mpih_rshift>
    186c:	b	19a0 <gcry_mpi_rshift+0x46c>
    1870:	ldr	x0, [sp, #32]
    1874:	ldr	w0, [x0, #4]
    1878:	str	w0, [sp, #48]
    187c:	ldr	x0, [sp, #32]
    1880:	ldr	w1, [x0, #8]
    1884:	ldr	x0, [sp, #40]
    1888:	str	w1, [x0, #8]
    188c:	ldr	x0, [sp, #40]
    1890:	ldr	w0, [x0]
    1894:	ldr	w1, [sp, #48]
    1898:	cmp	w1, w0
    189c:	b.le	18b0 <gcry_mpi_rshift+0x37c>
    18a0:	ldr	w0, [sp, #48]
    18a4:	mov	w1, w0
    18a8:	ldr	x0, [sp, #40]
    18ac:	bl	2f0 <_gcry_mpi_resize>
    18b0:	ldr	x0, [sp, #40]
    18b4:	ldr	w1, [sp, #48]
    18b8:	str	w1, [x0, #4]
    18bc:	ldr	w0, [sp, #48]
    18c0:	cmp	w0, #0x0
    18c4:	b.eq	19a0 <gcry_mpi_rshift+0x46c>  // b.none
    18c8:	ldr	w0, [sp, #52]
    18cc:	cmp	w0, #0x0
    18d0:	b.eq	1900 <gcry_mpi_rshift+0x3cc>  // b.none
    18d4:	ldr	x0, [sp, #40]
    18d8:	ldr	x4, [x0, #16]
    18dc:	ldr	x0, [sp, #32]
    18e0:	ldr	x1, [x0, #16]
    18e4:	ldr	x0, [sp, #40]
    18e8:	ldr	w0, [x0, #4]
    18ec:	ldr	w3, [sp, #52]
    18f0:	mov	w2, w0
    18f4:	mov	x0, x4
    18f8:	bl	b848 <_gcry_mpih_rshift>
    18fc:	b	19a0 <gcry_mpi_rshift+0x46c>
    1900:	str	wzr, [sp, #60]
    1904:	b	1944 <gcry_mpi_rshift+0x410>
    1908:	ldr	x0, [sp, #32]
    190c:	ldr	x1, [x0, #16]
    1910:	ldr	w0, [sp, #60]
    1914:	lsl	x0, x0, #3
    1918:	add	x1, x1, x0
    191c:	ldr	x0, [sp, #40]
    1920:	ldr	x2, [x0, #16]
    1924:	ldr	w0, [sp, #60]
    1928:	lsl	x0, x0, #3
    192c:	add	x0, x2, x0
    1930:	ldr	x1, [x1]
    1934:	str	x1, [x0]
    1938:	ldr	w0, [sp, #60]
    193c:	add	w0, w0, #0x1
    1940:	str	w0, [sp, #60]
    1944:	ldr	x0, [sp, #40]
    1948:	ldr	w0, [x0, #4]
    194c:	mov	w1, w0
    1950:	ldr	w0, [sp, #60]
    1954:	cmp	w0, w1
    1958:	b.cc	1908 <gcry_mpi_rshift+0x3d4>  // b.lo, b.ul, b.last
    195c:	b	19a0 <gcry_mpi_rshift+0x46c>
    1960:	ldr	x0, [sp, #40]
    1964:	ldr	x1, [x0, #16]
    1968:	ldr	x0, [sp, #40]
    196c:	ldr	w0, [x0, #4]
    1970:	sxtw	x0, w0
    1974:	lsl	x0, x0, #3
    1978:	sub	x0, x0, #0x8
    197c:	add	x0, x1, x0
    1980:	ldr	x0, [x0]
    1984:	cmp	x0, #0x0
    1988:	b.ne	19b4 <gcry_mpi_rshift+0x480>  // b.any
    198c:	ldr	x0, [sp, #40]
    1990:	ldr	w0, [x0, #4]
    1994:	sub	w1, w0, #0x1
    1998:	ldr	x0, [sp, #40]
    199c:	str	w1, [x0, #4]
    19a0:	ldr	x0, [sp, #40]
    19a4:	ldr	w0, [x0, #4]
    19a8:	cmp	w0, #0x0
    19ac:	b.gt	1960 <gcry_mpi_rshift+0x42c>
    19b0:	b	19b8 <gcry_mpi_rshift+0x484>
    19b4:	nop
    19b8:	ldp	x29, x30, [sp], #64
    19bc:	ret

00000000000019c0 <_gcry_mpi_lshift_limbs>:
    19c0:	stp	x29, x30, [sp, #-48]!
    19c4:	mov	x29, sp
    19c8:	str	x0, [sp, #24]
    19cc:	str	w1, [sp, #20]
    19d0:	ldr	x0, [sp, #24]
    19d4:	ldr	w0, [x0, #4]
    19d8:	str	w0, [sp, #40]
    19dc:	ldr	w0, [sp, #20]
    19e0:	cmp	w0, #0x0
    19e4:	b.eq	1af0 <_gcry_mpi_lshift_limbs+0x130>  // b.none
    19e8:	ldr	w0, [sp, #40]
    19ec:	cmp	w0, #0x0
    19f0:	b.eq	1af0 <_gcry_mpi_lshift_limbs+0x130>  // b.none
    19f4:	ldr	x0, [sp, #24]
    19f8:	ldr	w0, [x0]
    19fc:	mov	w2, w0
    1a00:	ldr	w1, [sp, #40]
    1a04:	ldr	w0, [sp, #20]
    1a08:	add	w0, w1, w0
    1a0c:	cmp	w2, w0
    1a10:	b.cs	1a2c <_gcry_mpi_lshift_limbs+0x6c>  // b.hs, b.nlast
    1a14:	ldr	w1, [sp, #40]
    1a18:	ldr	w0, [sp, #20]
    1a1c:	add	w0, w1, w0
    1a20:	mov	w1, w0
    1a24:	ldr	x0, [sp, #24]
    1a28:	bl	2f0 <_gcry_mpi_resize>
    1a2c:	ldr	x0, [sp, #24]
    1a30:	ldr	x0, [x0, #16]
    1a34:	str	x0, [sp, #32]
    1a38:	ldr	w0, [sp, #40]
    1a3c:	sub	w0, w0, #0x1
    1a40:	str	w0, [sp, #44]
    1a44:	b	1a88 <_gcry_mpi_lshift_limbs+0xc8>
    1a48:	ldrsw	x0, [sp, #44]
    1a4c:	lsl	x0, x0, #3
    1a50:	ldr	x1, [sp, #32]
    1a54:	add	x1, x1, x0
    1a58:	ldr	w2, [sp, #44]
    1a5c:	ldr	w0, [sp, #20]
    1a60:	add	w0, w2, w0
    1a64:	mov	w0, w0
    1a68:	lsl	x0, x0, #3
    1a6c:	ldr	x2, [sp, #32]
    1a70:	add	x0, x2, x0
    1a74:	ldr	x1, [x1]
    1a78:	str	x1, [x0]
    1a7c:	ldr	w0, [sp, #44]
    1a80:	sub	w0, w0, #0x1
    1a84:	str	w0, [sp, #44]
    1a88:	ldr	w0, [sp, #44]
    1a8c:	cmp	w0, #0x0
    1a90:	b.ge	1a48 <_gcry_mpi_lshift_limbs+0x88>  // b.tcont
    1a94:	str	wzr, [sp, #44]
    1a98:	b	1abc <_gcry_mpi_lshift_limbs+0xfc>
    1a9c:	ldrsw	x0, [sp, #44]
    1aa0:	lsl	x0, x0, #3
    1aa4:	ldr	x1, [sp, #32]
    1aa8:	add	x0, x1, x0
    1aac:	str	xzr, [x0]
    1ab0:	ldr	w0, [sp, #44]
    1ab4:	add	w0, w0, #0x1
    1ab8:	str	w0, [sp, #44]
    1abc:	ldr	w0, [sp, #44]
    1ac0:	ldr	w1, [sp, #20]
    1ac4:	cmp	w1, w0
    1ac8:	b.hi	1a9c <_gcry_mpi_lshift_limbs+0xdc>  // b.pmore
    1acc:	ldr	x0, [sp, #24]
    1ad0:	ldr	w0, [x0, #4]
    1ad4:	mov	w1, w0
    1ad8:	ldr	w0, [sp, #20]
    1adc:	add	w0, w1, w0
    1ae0:	mov	w1, w0
    1ae4:	ldr	x0, [sp, #24]
    1ae8:	str	w1, [x0, #4]
    1aec:	b	1af4 <_gcry_mpi_lshift_limbs+0x134>
    1af0:	nop
    1af4:	ldp	x29, x30, [sp], #48
    1af8:	ret

0000000000001afc <gcry_mpi_lshift>:
    1afc:	stp	x29, x30, [sp, #-96]!
    1b00:	mov	x29, sp
    1b04:	str	x0, [sp, #40]
    1b08:	str	x1, [sp, #32]
    1b0c:	str	w2, [sp, #28]
    1b10:	ldr	w0, [sp, #28]
    1b14:	lsr	w0, w0, #6
    1b18:	str	w0, [sp, #88]
    1b1c:	ldr	w0, [sp, #28]
    1b20:	and	w0, w0, #0x3f
    1b24:	str	w0, [sp, #84]
    1b28:	ldr	x1, [sp, #40]
    1b2c:	ldr	x0, [sp, #32]
    1b30:	cmp	x1, x0
    1b34:	b.ne	1b44 <gcry_mpi_lshift+0x48>  // b.any
    1b38:	ldr	w0, [sp, #28]
    1b3c:	cmp	w0, #0x0
    1b40:	b.eq	1cf4 <gcry_mpi_lshift+0x1f8>  // b.none
    1b44:	ldr	x1, [sp, #40]
    1b48:	ldr	x0, [sp, #32]
    1b4c:	cmp	x1, x0
    1b50:	b.eq	1c38 <gcry_mpi_lshift+0x13c>  // b.none
    1b54:	ldr	x0, [sp, #32]
    1b58:	ldr	w0, [x0, #4]
    1b5c:	str	w0, [sp, #80]
    1b60:	ldr	x0, [sp, #32]
    1b64:	ldr	w0, [x0, #8]
    1b68:	str	w0, [sp, #76]
    1b6c:	ldr	x0, [sp, #40]
    1b70:	ldr	w0, [x0]
    1b74:	mov	w2, w0
    1b78:	ldr	w1, [sp, #80]
    1b7c:	ldr	w0, [sp, #88]
    1b80:	add	w0, w1, w0
    1b84:	add	w0, w0, #0x1
    1b88:	cmp	w2, w0
    1b8c:	b.cs	1bac <gcry_mpi_lshift+0xb0>  // b.hs, b.nlast
    1b90:	ldr	w1, [sp, #80]
    1b94:	ldr	w0, [sp, #88]
    1b98:	add	w0, w1, w0
    1b9c:	add	w0, w0, #0x1
    1ba0:	mov	w1, w0
    1ba4:	ldr	x0, [sp, #40]
    1ba8:	bl	2f0 <_gcry_mpi_resize>
    1bac:	ldr	x0, [sp, #40]
    1bb0:	ldr	x0, [x0, #16]
    1bb4:	str	x0, [sp, #64]
    1bb8:	ldr	x0, [sp, #32]
    1bbc:	ldr	x0, [x0, #16]
    1bc0:	str	x0, [sp, #56]
    1bc4:	str	wzr, [sp, #92]
    1bc8:	b	1c00 <gcry_mpi_lshift+0x104>
    1bcc:	ldrsw	x0, [sp, #92]
    1bd0:	lsl	x0, x0, #3
    1bd4:	ldr	x1, [sp, #56]
    1bd8:	add	x1, x1, x0
    1bdc:	ldrsw	x0, [sp, #92]
    1be0:	lsl	x0, x0, #3
    1be4:	ldr	x2, [sp, #64]
    1be8:	add	x0, x2, x0
    1bec:	ldr	x1, [x1]
    1bf0:	str	x1, [x0]
    1bf4:	ldr	w0, [sp, #92]
    1bf8:	add	w0, w0, #0x1
    1bfc:	str	w0, [sp, #92]
    1c00:	ldr	w0, [sp, #92]
    1c04:	ldr	w1, [sp, #80]
    1c08:	cmp	w1, w0
    1c0c:	b.hi	1bcc <gcry_mpi_lshift+0xd0>  // b.pmore
    1c10:	ldr	w1, [sp, #80]
    1c14:	ldr	x0, [sp, #40]
    1c18:	str	w1, [x0, #4]
    1c1c:	ldr	x0, [sp, #32]
    1c20:	ldr	w1, [x0, #12]
    1c24:	ldr	x0, [sp, #40]
    1c28:	str	w1, [x0, #12]
    1c2c:	ldr	x0, [sp, #40]
    1c30:	ldr	w1, [sp, #76]
    1c34:	str	w1, [x0, #8]
    1c38:	ldr	w0, [sp, #88]
    1c3c:	cmp	w0, #0x0
    1c40:	b.eq	1c60 <gcry_mpi_lshift+0x164>  // b.none
    1c44:	ldr	w0, [sp, #84]
    1c48:	cmp	w0, #0x0
    1c4c:	b.ne	1c60 <gcry_mpi_lshift+0x164>  // b.any
    1c50:	ldr	w1, [sp, #88]
    1c54:	ldr	x0, [sp, #40]
    1c58:	bl	19c0 <_gcry_mpi_lshift_limbs>
    1c5c:	b	1c9c <gcry_mpi_lshift+0x1a0>
    1c60:	ldr	w0, [sp, #28]
    1c64:	cmp	w0, #0x0
    1c68:	b.eq	1ce0 <gcry_mpi_lshift+0x1e4>  // b.none
    1c6c:	ldr	w0, [sp, #88]
    1c70:	add	w0, w0, #0x1
    1c74:	mov	w1, w0
    1c78:	ldr	x0, [sp, #40]
    1c7c:	bl	19c0 <_gcry_mpi_lshift_limbs>
    1c80:	mov	w1, #0x40                  	// #64
    1c84:	ldr	w0, [sp, #84]
    1c88:	sub	w0, w1, w0
    1c8c:	mov	w2, w0
    1c90:	ldr	x1, [sp, #40]
    1c94:	ldr	x0, [sp, #40]
    1c98:	bl	1534 <gcry_mpi_rshift>
    1c9c:	b	1ce0 <gcry_mpi_lshift+0x1e4>
    1ca0:	ldr	x0, [sp, #40]
    1ca4:	ldr	x1, [x0, #16]
    1ca8:	ldr	x0, [sp, #40]
    1cac:	ldr	w0, [x0, #4]
    1cb0:	sxtw	x0, w0
    1cb4:	lsl	x0, x0, #3
    1cb8:	sub	x0, x0, #0x8
    1cbc:	add	x0, x1, x0
    1cc0:	ldr	x0, [x0]
    1cc4:	cmp	x0, #0x0
    1cc8:	b.ne	1cfc <gcry_mpi_lshift+0x200>  // b.any
    1ccc:	ldr	x0, [sp, #40]
    1cd0:	ldr	w0, [x0, #4]
    1cd4:	sub	w1, w0, #0x1
    1cd8:	ldr	x0, [sp, #40]
    1cdc:	str	w1, [x0, #4]
    1ce0:	ldr	x0, [sp, #40]
    1ce4:	ldr	w0, [x0, #4]
    1ce8:	cmp	w0, #0x0
    1cec:	b.gt	1ca0 <gcry_mpi_lshift+0x1a4>
    1cf0:	b	1d00 <gcry_mpi_lshift+0x204>
    1cf4:	nop
    1cf8:	b	1d00 <gcry_mpi_lshift+0x204>
    1cfc:	nop
    1d00:	ldp	x29, x30, [sp], #96
    1d04:	ret

0000000000001d08 <gcry_mpi_add_ui>:
    1d08:	stp	x29, x30, [sp, #-96]!
    1d0c:	mov	x29, sp
    1d10:	str	x0, [sp, #40]
    1d14:	str	x1, [sp, #32]
    1d18:	str	x2, [sp, #24]
    1d1c:	ldr	x0, [sp, #32]
    1d20:	ldr	w0, [x0, #4]
    1d24:	str	w0, [sp, #84]
    1d28:	ldr	x0, [sp, #32]
    1d2c:	ldr	w0, [x0, #8]
    1d30:	str	w0, [sp, #80]
    1d34:	str	wzr, [sp, #88]
    1d38:	ldr	w0, [sp, #84]
    1d3c:	add	w0, w0, #0x1
    1d40:	str	w0, [sp, #92]
    1d44:	ldr	x0, [sp, #40]
    1d48:	ldr	w0, [x0]
    1d4c:	ldr	w1, [sp, #92]
    1d50:	cmp	w1, w0
    1d54:	b.le	1d68 <gcry_mpi_add_ui+0x60>
    1d58:	ldr	w0, [sp, #92]
    1d5c:	mov	w1, w0
    1d60:	ldr	x0, [sp, #40]
    1d64:	bl	2f0 <_gcry_mpi_resize>
    1d68:	ldr	x0, [sp, #32]
    1d6c:	ldr	x0, [x0, #16]
    1d70:	str	x0, [sp, #72]
    1d74:	ldr	x0, [sp, #40]
    1d78:	ldr	x0, [x0, #16]
    1d7c:	str	x0, [sp, #64]
    1d80:	ldr	w0, [sp, #84]
    1d84:	cmp	w0, #0x0
    1d88:	b.ne	1db0 <gcry_mpi_add_ui+0xa8>  // b.any
    1d8c:	ldr	x0, [sp, #64]
    1d90:	ldr	x1, [sp, #24]
    1d94:	str	x1, [x0]
    1d98:	ldr	x0, [sp, #24]
    1d9c:	cmp	x0, #0x0
    1da0:	cset	w0, ne  // ne = any
    1da4:	and	w0, w0, #0xff
    1da8:	str	w0, [sp, #92]
    1dac:	b	1e98 <gcry_mpi_add_ui+0x190>
    1db0:	ldr	w0, [sp, #80]
    1db4:	cmp	w0, #0x0
    1db8:	b.ne	1e04 <gcry_mpi_add_ui+0xfc>  // b.any
    1dbc:	ldr	x3, [sp, #24]
    1dc0:	ldr	w2, [sp, #84]
    1dc4:	ldr	x1, [sp, #72]
    1dc8:	ldr	x0, [sp, #64]
    1dcc:	bl	b948 <_gcry_mpih_add_1>
    1dd0:	str	x0, [sp, #56]
    1dd4:	ldrsw	x0, [sp, #84]
    1dd8:	lsl	x0, x0, #3
    1ddc:	ldr	x1, [sp, #64]
    1de0:	add	x0, x1, x0
    1de4:	ldr	x1, [sp, #56]
    1de8:	str	x1, [x0]
    1dec:	ldr	x0, [sp, #56]
    1df0:	mov	w1, w0
    1df4:	ldr	w0, [sp, #84]
    1df8:	add	w0, w1, w0
    1dfc:	str	w0, [sp, #92]
    1e00:	b	1e98 <gcry_mpi_add_ui+0x190>
    1e04:	ldr	w0, [sp, #84]
    1e08:	cmp	w0, #0x1
    1e0c:	b.ne	1e48 <gcry_mpi_add_ui+0x140>  // b.any
    1e10:	ldr	x0, [sp, #72]
    1e14:	ldr	x0, [x0]
    1e18:	ldr	x1, [sp, #24]
    1e1c:	cmp	x1, x0
    1e20:	b.ls	1e48 <gcry_mpi_add_ui+0x140>  // b.plast
    1e24:	ldr	x0, [sp, #72]
    1e28:	ldr	x0, [x0]
    1e2c:	ldr	x1, [sp, #24]
    1e30:	sub	x1, x1, x0
    1e34:	ldr	x0, [sp, #64]
    1e38:	str	x1, [x0]
    1e3c:	mov	w0, #0x1                   	// #1
    1e40:	str	w0, [sp, #92]
    1e44:	b	1e98 <gcry_mpi_add_ui+0x190>
    1e48:	ldr	x3, [sp, #24]
    1e4c:	ldr	w2, [sp, #84]
    1e50:	ldr	x1, [sp, #72]
    1e54:	ldr	x0, [sp, #64]
    1e58:	bl	bb1c <_gcry_mpih_sub_1>
    1e5c:	ldrsw	x0, [sp, #84]
    1e60:	lsl	x0, x0, #3
    1e64:	sub	x0, x0, #0x8
    1e68:	ldr	x1, [sp, #64]
    1e6c:	add	x0, x1, x0
    1e70:	ldr	x0, [x0]
    1e74:	cmp	x0, #0x0
    1e78:	cset	w0, eq  // eq = none
    1e7c:	and	w0, w0, #0xff
    1e80:	mov	w1, w0
    1e84:	ldr	w0, [sp, #84]
    1e88:	sub	w0, w0, w1
    1e8c:	str	w0, [sp, #92]
    1e90:	mov	w0, #0x1                   	// #1
    1e94:	str	w0, [sp, #88]
    1e98:	ldr	x0, [sp, #40]
    1e9c:	ldr	w1, [sp, #92]
    1ea0:	str	w1, [x0, #4]
    1ea4:	ldr	x0, [sp, #40]
    1ea8:	ldr	w1, [sp, #88]
    1eac:	str	w1, [x0, #8]
    1eb0:	nop
    1eb4:	ldp	x29, x30, [sp], #96
    1eb8:	ret

0000000000001ebc <gcry_mpi_add>:
    1ebc:	stp	x29, x30, [sp, #-112]!
    1ec0:	mov	x29, sp
    1ec4:	str	x0, [sp, #40]
    1ec8:	str	x1, [sp, #32]
    1ecc:	str	x2, [sp, #24]
    1ed0:	ldr	x0, [sp, #32]
    1ed4:	ldr	w1, [x0, #4]
    1ed8:	ldr	x0, [sp, #24]
    1edc:	ldr	w0, [x0, #4]
    1ee0:	cmp	w1, w0
    1ee4:	b.ge	1f64 <gcry_mpi_add+0xa8>  // b.tcont
    1ee8:	ldr	x0, [sp, #24]
    1eec:	ldr	w0, [x0, #4]
    1ef0:	str	w0, [sp, #92]
    1ef4:	ldr	x0, [sp, #24]
    1ef8:	ldr	w0, [x0, #8]
    1efc:	str	w0, [sp, #80]
    1f00:	ldr	x0, [sp, #32]
    1f04:	ldr	w0, [x0, #4]
    1f08:	str	w0, [sp, #88]
    1f0c:	ldr	x0, [sp, #32]
    1f10:	ldr	w0, [x0, #8]
    1f14:	str	w0, [sp, #76]
    1f18:	ldr	w0, [sp, #92]
    1f1c:	add	w0, w0, #0x1
    1f20:	str	w0, [sp, #84]
    1f24:	ldr	x0, [sp, #40]
    1f28:	ldr	w0, [x0]
    1f2c:	ldr	w1, [sp, #84]
    1f30:	cmp	w1, w0
    1f34:	b.le	1f48 <gcry_mpi_add+0x8c>
    1f38:	ldr	w0, [sp, #84]
    1f3c:	mov	w1, w0
    1f40:	ldr	x0, [sp, #40]
    1f44:	bl	2f0 <_gcry_mpi_resize>
    1f48:	ldr	x0, [sp, #24]
    1f4c:	ldr	x0, [x0, #16]
    1f50:	str	x0, [sp, #104]
    1f54:	ldr	x0, [sp, #32]
    1f58:	ldr	x0, [x0, #16]
    1f5c:	str	x0, [sp, #96]
    1f60:	b	1fdc <gcry_mpi_add+0x120>
    1f64:	ldr	x0, [sp, #32]
    1f68:	ldr	w0, [x0, #4]
    1f6c:	str	w0, [sp, #92]
    1f70:	ldr	x0, [sp, #32]
    1f74:	ldr	w0, [x0, #8]
    1f78:	str	w0, [sp, #80]
    1f7c:	ldr	x0, [sp, #24]
    1f80:	ldr	w0, [x0, #4]
    1f84:	str	w0, [sp, #88]
    1f88:	ldr	x0, [sp, #24]
    1f8c:	ldr	w0, [x0, #8]
    1f90:	str	w0, [sp, #76]
    1f94:	ldr	w0, [sp, #92]
    1f98:	add	w0, w0, #0x1
    1f9c:	str	w0, [sp, #84]
    1fa0:	ldr	x0, [sp, #40]
    1fa4:	ldr	w0, [x0]
    1fa8:	ldr	w1, [sp, #84]
    1fac:	cmp	w1, w0
    1fb0:	b.le	1fc4 <gcry_mpi_add+0x108>
    1fb4:	ldr	w0, [sp, #84]
    1fb8:	mov	w1, w0
    1fbc:	ldr	x0, [sp, #40]
    1fc0:	bl	2f0 <_gcry_mpi_resize>
    1fc4:	ldr	x0, [sp, #32]
    1fc8:	ldr	x0, [x0, #16]
    1fcc:	str	x0, [sp, #104]
    1fd0:	ldr	x0, [sp, #24]
    1fd4:	ldr	x0, [x0, #16]
    1fd8:	str	x0, [sp, #96]
    1fdc:	ldr	x0, [sp, #40]
    1fe0:	ldr	x0, [x0, #16]
    1fe4:	str	x0, [sp, #56]
    1fe8:	str	wzr, [sp, #72]
    1fec:	ldr	w0, [sp, #88]
    1ff0:	cmp	w0, #0x0
    1ff4:	b.ne	2058 <gcry_mpi_add+0x19c>  // b.any
    1ff8:	str	wzr, [sp, #68]
    1ffc:	b	2034 <gcry_mpi_add+0x178>
    2000:	ldrsw	x0, [sp, #68]
    2004:	lsl	x0, x0, #3
    2008:	ldr	x1, [sp, #104]
    200c:	add	x1, x1, x0
    2010:	ldrsw	x0, [sp, #68]
    2014:	lsl	x0, x0, #3
    2018:	ldr	x2, [sp, #56]
    201c:	add	x0, x2, x0
    2020:	ldr	x1, [x1]
    2024:	str	x1, [x0]
    2028:	ldr	w0, [sp, #68]
    202c:	add	w0, w0, #0x1
    2030:	str	w0, [sp, #68]
    2034:	ldr	w1, [sp, #68]
    2038:	ldr	w0, [sp, #92]
    203c:	cmp	w1, w0
    2040:	b.lt	2000 <gcry_mpi_add+0x144>  // b.tstop
    2044:	ldr	w0, [sp, #92]
    2048:	str	w0, [sp, #84]
    204c:	ldr	w0, [sp, #80]
    2050:	str	w0, [sp, #72]
    2054:	b	224c <gcry_mpi_add+0x390>
    2058:	ldr	w1, [sp, #80]
    205c:	ldr	w0, [sp, #76]
    2060:	cmp	w1, w0
    2064:	b.eq	21f0 <gcry_mpi_add+0x334>  // b.none
    2068:	ldr	w1, [sp, #92]
    206c:	ldr	w0, [sp, #88]
    2070:	cmp	w1, w0
    2074:	b.eq	20e8 <gcry_mpi_add+0x22c>  // b.none
    2078:	ldr	w4, [sp, #88]
    207c:	ldr	x3, [sp, #96]
    2080:	ldr	w2, [sp, #92]
    2084:	ldr	x1, [sp, #104]
    2088:	ldr	x0, [sp, #56]
    208c:	bl	bc4c <_gcry_mpih_sub>
    2090:	ldr	w0, [sp, #92]
    2094:	str	w0, [sp, #84]
    2098:	b	20c8 <gcry_mpi_add+0x20c>
    209c:	ldrsw	x0, [sp, #84]
    20a0:	lsl	x0, x0, #3
    20a4:	sub	x0, x0, #0x8
    20a8:	ldr	x1, [sp, #56]
    20ac:	add	x0, x1, x0
    20b0:	ldr	x0, [x0]
    20b4:	cmp	x0, #0x0
    20b8:	b.ne	20d8 <gcry_mpi_add+0x21c>  // b.any
    20bc:	ldr	w0, [sp, #84]
    20c0:	sub	w0, w0, #0x1
    20c4:	str	w0, [sp, #84]
    20c8:	ldr	w0, [sp, #84]
    20cc:	cmp	w0, #0x0
    20d0:	b.gt	209c <gcry_mpi_add+0x1e0>
    20d4:	b	20dc <gcry_mpi_add+0x220>
    20d8:	nop
    20dc:	ldr	w0, [sp, #80]
    20e0:	str	w0, [sp, #72]
    20e4:	b	224c <gcry_mpi_add+0x390>
    20e8:	ldr	w2, [sp, #92]
    20ec:	ldr	x1, [sp, #96]
    20f0:	ldr	x0, [sp, #104]
    20f4:	bl	bcf0 <_gcry_mpih_cmp>
    20f8:	cmp	w0, #0x0
    20fc:	b.ge	2178 <gcry_mpi_add+0x2bc>  // b.tcont
    2100:	ldr	w3, [sp, #92]
    2104:	ldr	x2, [sp, #104]
    2108:	ldr	x1, [sp, #96]
    210c:	ldr	x0, [sp, #56]
    2110:	bl	7afc <_gcry_mpih_sub_n>
    2114:	ldr	w0, [sp, #92]
    2118:	str	w0, [sp, #84]
    211c:	b	214c <gcry_mpi_add+0x290>
    2120:	ldrsw	x0, [sp, #84]
    2124:	lsl	x0, x0, #3
    2128:	sub	x0, x0, #0x8
    212c:	ldr	x1, [sp, #56]
    2130:	add	x0, x1, x0
    2134:	ldr	x0, [x0]
    2138:	cmp	x0, #0x0
    213c:	b.ne	215c <gcry_mpi_add+0x2a0>  // b.any
    2140:	ldr	w0, [sp, #84]
    2144:	sub	w0, w0, #0x1
    2148:	str	w0, [sp, #84]
    214c:	ldr	w0, [sp, #84]
    2150:	cmp	w0, #0x0
    2154:	b.gt	2120 <gcry_mpi_add+0x264>
    2158:	b	2160 <gcry_mpi_add+0x2a4>
    215c:	nop
    2160:	ldr	w0, [sp, #80]
    2164:	cmp	w0, #0x0
    2168:	b.ne	224c <gcry_mpi_add+0x390>  // b.any
    216c:	mov	w0, #0x1                   	// #1
    2170:	str	w0, [sp, #72]
    2174:	b	224c <gcry_mpi_add+0x390>
    2178:	ldr	w3, [sp, #92]
    217c:	ldr	x2, [sp, #96]
    2180:	ldr	x1, [sp, #104]
    2184:	ldr	x0, [sp, #56]
    2188:	bl	7afc <_gcry_mpih_sub_n>
    218c:	ldr	w0, [sp, #92]
    2190:	str	w0, [sp, #84]
    2194:	b	21c4 <gcry_mpi_add+0x308>
    2198:	ldrsw	x0, [sp, #84]
    219c:	lsl	x0, x0, #3
    21a0:	sub	x0, x0, #0x8
    21a4:	ldr	x1, [sp, #56]
    21a8:	add	x0, x1, x0
    21ac:	ldr	x0, [x0]
    21b0:	cmp	x0, #0x0
    21b4:	b.ne	21d4 <gcry_mpi_add+0x318>  // b.any
    21b8:	ldr	w0, [sp, #84]
    21bc:	sub	w0, w0, #0x1
    21c0:	str	w0, [sp, #84]
    21c4:	ldr	w0, [sp, #84]
    21c8:	cmp	w0, #0x0
    21cc:	b.gt	2198 <gcry_mpi_add+0x2dc>
    21d0:	b	21d8 <gcry_mpi_add+0x31c>
    21d4:	nop
    21d8:	ldr	w0, [sp, #80]
    21dc:	cmp	w0, #0x0
    21e0:	b.eq	224c <gcry_mpi_add+0x390>  // b.none
    21e4:	mov	w0, #0x1                   	// #1
    21e8:	str	w0, [sp, #72]
    21ec:	b	224c <gcry_mpi_add+0x390>
    21f0:	ldr	w4, [sp, #88]
    21f4:	ldr	x3, [sp, #96]
    21f8:	ldr	w2, [sp, #92]
    21fc:	ldr	x1, [sp, #104]
    2200:	ldr	x0, [sp, #56]
    2204:	bl	ba78 <_gcry_mpih_add>
    2208:	str	x0, [sp, #48]
    220c:	ldrsw	x0, [sp, #92]
    2210:	lsl	x0, x0, #3
    2214:	ldr	x1, [sp, #56]
    2218:	add	x0, x1, x0
    221c:	ldr	x1, [sp, #48]
    2220:	str	x1, [x0]
    2224:	ldr	x0, [sp, #48]
    2228:	mov	w1, w0
    222c:	ldr	w0, [sp, #92]
    2230:	add	w0, w1, w0
    2234:	str	w0, [sp, #84]
    2238:	ldr	w0, [sp, #80]
    223c:	cmp	w0, #0x0
    2240:	b.eq	224c <gcry_mpi_add+0x390>  // b.none
    2244:	mov	w0, #0x1                   	// #1
    2248:	str	w0, [sp, #72]
    224c:	ldr	x0, [sp, #40]
    2250:	ldr	w1, [sp, #84]
    2254:	str	w1, [x0, #4]
    2258:	ldr	x0, [sp, #40]
    225c:	ldr	w1, [sp, #72]
    2260:	str	w1, [x0, #8]
    2264:	nop
    2268:	ldp	x29, x30, [sp], #112
    226c:	ret

0000000000002270 <gcry_mpi_sub_ui>:
    2270:	stp	x29, x30, [sp, #-96]!
    2274:	mov	x29, sp
    2278:	str	x0, [sp, #40]
    227c:	str	x1, [sp, #32]
    2280:	str	x2, [sp, #24]
    2284:	ldr	x0, [sp, #32]
    2288:	ldr	w0, [x0, #4]
    228c:	str	w0, [sp, #84]
    2290:	ldr	x0, [sp, #32]
    2294:	ldr	w0, [x0, #8]
    2298:	str	w0, [sp, #80]
    229c:	str	wzr, [sp, #88]
    22a0:	ldr	w0, [sp, #84]
    22a4:	add	w0, w0, #0x1
    22a8:	str	w0, [sp, #92]
    22ac:	ldr	x0, [sp, #40]
    22b0:	ldr	w0, [x0]
    22b4:	ldr	w1, [sp, #92]
    22b8:	cmp	w1, w0
    22bc:	b.le	22d0 <gcry_mpi_sub_ui+0x60>
    22c0:	ldr	w0, [sp, #92]
    22c4:	mov	w1, w0
    22c8:	ldr	x0, [sp, #40]
    22cc:	bl	2f0 <_gcry_mpi_resize>
    22d0:	ldr	x0, [sp, #32]
    22d4:	ldr	x0, [x0, #16]
    22d8:	str	x0, [sp, #72]
    22dc:	ldr	x0, [sp, #40]
    22e0:	ldr	x0, [x0, #16]
    22e4:	str	x0, [sp, #64]
    22e8:	ldr	w0, [sp, #84]
    22ec:	cmp	w0, #0x0
    22f0:	b.ne	2320 <gcry_mpi_sub_ui+0xb0>  // b.any
    22f4:	ldr	x0, [sp, #64]
    22f8:	ldr	x1, [sp, #24]
    22fc:	str	x1, [x0]
    2300:	ldr	x0, [sp, #24]
    2304:	cmp	x0, #0x0
    2308:	cset	w0, ne  // ne = any
    230c:	and	w0, w0, #0xff
    2310:	str	w0, [sp, #92]
    2314:	mov	w0, #0x1                   	// #1
    2318:	str	w0, [sp, #88]
    231c:	b	2408 <gcry_mpi_sub_ui+0x198>
    2320:	ldr	w0, [sp, #80]
    2324:	cmp	w0, #0x0
    2328:	b.eq	2374 <gcry_mpi_sub_ui+0x104>  // b.none
    232c:	ldr	x3, [sp, #24]
    2330:	ldr	w2, [sp, #84]
    2334:	ldr	x1, [sp, #72]
    2338:	ldr	x0, [sp, #64]
    233c:	bl	b948 <_gcry_mpih_add_1>
    2340:	str	x0, [sp, #56]
    2344:	ldrsw	x0, [sp, #84]
    2348:	lsl	x0, x0, #3
    234c:	ldr	x1, [sp, #64]
    2350:	add	x0, x1, x0
    2354:	ldr	x1, [sp, #56]
    2358:	str	x1, [x0]
    235c:	ldr	x0, [sp, #56]
    2360:	mov	w1, w0
    2364:	ldr	w0, [sp, #84]
    2368:	add	w0, w1, w0
    236c:	str	w0, [sp, #92]
    2370:	b	2408 <gcry_mpi_sub_ui+0x198>
    2374:	ldr	w0, [sp, #84]
    2378:	cmp	w0, #0x1
    237c:	b.ne	23c0 <gcry_mpi_sub_ui+0x150>  // b.any
    2380:	ldr	x0, [sp, #72]
    2384:	ldr	x0, [x0]
    2388:	ldr	x1, [sp, #24]
    238c:	cmp	x1, x0
    2390:	b.ls	23c0 <gcry_mpi_sub_ui+0x150>  // b.plast
    2394:	ldr	x0, [sp, #72]
    2398:	ldr	x0, [x0]
    239c:	ldr	x1, [sp, #24]
    23a0:	sub	x1, x1, x0
    23a4:	ldr	x0, [sp, #64]
    23a8:	str	x1, [x0]
    23ac:	mov	w0, #0x1                   	// #1
    23b0:	str	w0, [sp, #92]
    23b4:	mov	w0, #0x1                   	// #1
    23b8:	str	w0, [sp, #88]
    23bc:	b	2408 <gcry_mpi_sub_ui+0x198>
    23c0:	ldr	x3, [sp, #24]
    23c4:	ldr	w2, [sp, #84]
    23c8:	ldr	x1, [sp, #72]
    23cc:	ldr	x0, [sp, #64]
    23d0:	bl	bb1c <_gcry_mpih_sub_1>
    23d4:	ldrsw	x0, [sp, #84]
    23d8:	lsl	x0, x0, #3
    23dc:	sub	x0, x0, #0x8
    23e0:	ldr	x1, [sp, #64]
    23e4:	add	x0, x1, x0
    23e8:	ldr	x0, [x0]
    23ec:	cmp	x0, #0x0
    23f0:	cset	w0, eq  // eq = none
    23f4:	and	w0, w0, #0xff
    23f8:	mov	w1, w0
    23fc:	ldr	w0, [sp, #84]
    2400:	sub	w0, w0, w1
    2404:	str	w0, [sp, #92]
    2408:	ldr	x0, [sp, #40]
    240c:	ldr	w1, [sp, #92]
    2410:	str	w1, [x0, #4]
    2414:	ldr	x0, [sp, #40]
    2418:	ldr	w1, [sp, #88]
    241c:	str	w1, [x0, #8]
    2420:	nop
    2424:	ldp	x29, x30, [sp], #96
    2428:	ret

000000000000242c <gcry_mpi_sub>:
    242c:	stp	x29, x30, [sp, #-64]!
    2430:	mov	x29, sp
    2434:	str	x0, [sp, #40]
    2438:	str	x1, [sp, #32]
    243c:	str	x2, [sp, #24]
    2440:	ldr	x0, [sp, #24]
    2444:	bl	768 <_gcry_mpi_copy>
    2448:	str	x0, [sp, #56]
    244c:	ldr	x0, [sp, #56]
    2450:	ldr	w0, [x0, #8]
    2454:	cmp	w0, #0x0
    2458:	cset	w0, eq  // eq = none
    245c:	and	w0, w0, #0xff
    2460:	mov	w1, w0
    2464:	ldr	x0, [sp, #56]
    2468:	str	w1, [x0, #8]
    246c:	ldr	x2, [sp, #56]
    2470:	ldr	x1, [sp, #32]
    2474:	ldr	x0, [sp, #40]
    2478:	bl	1ebc <gcry_mpi_add>
    247c:	ldr	x0, [sp, #56]
    2480:	bl	470 <_gcry_mpi_free>
    2484:	nop
    2488:	ldp	x29, x30, [sp], #64
    248c:	ret

0000000000002490 <gcry_mpi_addm>:
    2490:	stp	x29, x30, [sp, #-48]!
    2494:	mov	x29, sp
    2498:	str	x0, [sp, #40]
    249c:	str	x1, [sp, #32]
    24a0:	str	x2, [sp, #24]
    24a4:	str	x3, [sp, #16]
    24a8:	ldr	x2, [sp, #24]
    24ac:	ldr	x1, [sp, #32]
    24b0:	ldr	x0, [sp, #40]
    24b4:	bl	1ebc <gcry_mpi_add>
    24b8:	ldr	x2, [sp, #16]
    24bc:	ldr	x1, [sp, #40]
    24c0:	ldr	x0, [sp, #40]
    24c4:	bl	3218 <_gcry_mpi_fdiv_r>
    24c8:	nop
    24cc:	ldp	x29, x30, [sp], #48
    24d0:	ret

00000000000024d4 <gcry_mpi_subm>:
    24d4:	stp	x29, x30, [sp, #-48]!
    24d8:	mov	x29, sp
    24dc:	str	x0, [sp, #40]
    24e0:	str	x1, [sp, #32]
    24e4:	str	x2, [sp, #24]
    24e8:	str	x3, [sp, #16]
    24ec:	ldr	x2, [sp, #24]
    24f0:	ldr	x1, [sp, #32]
    24f4:	ldr	x0, [sp, #40]
    24f8:	bl	242c <gcry_mpi_sub>
    24fc:	ldr	x2, [sp, #16]
    2500:	ldr	x1, [sp, #40]
    2504:	ldr	x0, [sp, #40]
    2508:	bl	3218 <_gcry_mpi_fdiv_r>
    250c:	nop
    2510:	ldp	x29, x30, [sp], #48
    2514:	ret

0000000000002518 <gcry_mpi_mul_ui>:
    2518:	stp	x29, x30, [sp, #-80]!
    251c:	mov	x29, sp
    2520:	str	x0, [sp, #40]
    2524:	str	x1, [sp, #32]
    2528:	str	x2, [sp, #24]
    252c:	ldr	x0, [sp, #32]
    2530:	ldr	w0, [x0, #4]
    2534:	str	w0, [sp, #76]
    2538:	ldr	x0, [sp, #32]
    253c:	ldr	w0, [x0, #8]
    2540:	str	w0, [sp, #72]
    2544:	ldr	w0, [sp, #76]
    2548:	cmp	w0, #0x0
    254c:	b.eq	255c <gcry_mpi_mul_ui+0x44>  // b.none
    2550:	ldr	x0, [sp, #24]
    2554:	cmp	x0, #0x0
    2558:	b.ne	2570 <gcry_mpi_mul_ui+0x58>  // b.any
    255c:	ldr	x0, [sp, #40]
    2560:	str	wzr, [x0, #4]
    2564:	ldr	x0, [sp, #40]
    2568:	str	wzr, [x0, #8]
    256c:	b	2614 <gcry_mpi_mul_ui+0xfc>
    2570:	ldr	w0, [sp, #76]
    2574:	add	w0, w0, #0x1
    2578:	str	w0, [sp, #68]
    257c:	ldr	x0, [sp, #40]
    2580:	ldr	w0, [x0]
    2584:	ldr	w1, [sp, #68]
    2588:	cmp	w1, w0
    258c:	b.le	25a0 <gcry_mpi_mul_ui+0x88>
    2590:	ldr	w0, [sp, #68]
    2594:	mov	w1, w0
    2598:	ldr	x0, [sp, #40]
    259c:	bl	2f0 <_gcry_mpi_resize>
    25a0:	ldr	x0, [sp, #40]
    25a4:	ldr	x0, [x0, #16]
    25a8:	str	x0, [sp, #56]
    25ac:	ldr	x0, [sp, #32]
    25b0:	ldr	x0, [x0, #16]
    25b4:	ldr	x3, [sp, #24]
    25b8:	ldr	w2, [sp, #76]
    25bc:	mov	x1, x0
    25c0:	ldr	x0, [sp, #56]
    25c4:	bl	73e4 <_gcry_mpih_mul_1>
    25c8:	str	x0, [sp, #48]
    25cc:	ldr	x0, [sp, #48]
    25d0:	cmp	x0, #0x0
    25d4:	b.eq	25fc <gcry_mpi_mul_ui+0xe4>  // b.none
    25d8:	ldr	w0, [sp, #76]
    25dc:	add	w1, w0, #0x1
    25e0:	str	w1, [sp, #76]
    25e4:	sxtw	x0, w0
    25e8:	lsl	x0, x0, #3
    25ec:	ldr	x1, [sp, #56]
    25f0:	add	x0, x1, x0
    25f4:	ldr	x1, [sp, #48]
    25f8:	str	x1, [x0]
    25fc:	ldr	x0, [sp, #40]
    2600:	ldr	w1, [sp, #76]
    2604:	str	w1, [x0, #4]
    2608:	ldr	x0, [sp, #40]
    260c:	ldr	w1, [sp, #72]
    2610:	str	w1, [x0, #8]
    2614:	ldp	x29, x30, [sp], #80
    2618:	ret

000000000000261c <gcry_mpi_mul_2exp>:
    261c:	stp	x29, x30, [sp, #-96]!
    2620:	mov	x29, sp
    2624:	str	x0, [sp, #40]
    2628:	str	x1, [sp, #32]
    262c:	str	x2, [sp, #24]
    2630:	ldr	x0, [sp, #32]
    2634:	ldr	w0, [x0, #4]
    2638:	str	w0, [sp, #80]
    263c:	ldr	x0, [sp, #32]
    2640:	ldr	w0, [x0, #8]
    2644:	str	w0, [sp, #76]
    2648:	ldr	w0, [sp, #80]
    264c:	cmp	w0, #0x0
    2650:	b.ne	2668 <gcry_mpi_mul_2exp+0x4c>  // b.any
    2654:	ldr	x0, [sp, #40]
    2658:	str	wzr, [x0, #4]
    265c:	ldr	x0, [sp, #40]
    2660:	str	wzr, [x0, #8]
    2664:	b	27fc <gcry_mpi_mul_2exp+0x1e0>
    2668:	ldr	x0, [sp, #24]
    266c:	lsr	x0, x0, #6
    2670:	str	w0, [sp, #72]
    2674:	ldr	w1, [sp, #80]
    2678:	ldr	w0, [sp, #72]
    267c:	add	w0, w1, w0
    2680:	add	w0, w0, #0x1
    2684:	str	w0, [sp, #92]
    2688:	ldr	x0, [sp, #40]
    268c:	ldr	w0, [x0]
    2690:	ldr	w1, [sp, #92]
    2694:	cmp	w1, w0
    2698:	b.le	26ac <gcry_mpi_mul_2exp+0x90>
    269c:	ldr	w0, [sp, #92]
    26a0:	mov	w1, w0
    26a4:	ldr	x0, [sp, #40]
    26a8:	bl	2f0 <_gcry_mpi_resize>
    26ac:	ldr	x0, [sp, #40]
    26b0:	ldr	x0, [x0, #16]
    26b4:	str	x0, [sp, #64]
    26b8:	ldr	w1, [sp, #80]
    26bc:	ldr	w0, [sp, #72]
    26c0:	add	w0, w1, w0
    26c4:	str	w0, [sp, #92]
    26c8:	ldr	w0, [sp, #76]
    26cc:	str	w0, [sp, #60]
    26d0:	ldr	x0, [sp, #24]
    26d4:	and	x0, x0, #0x3f
    26d8:	str	x0, [sp, #24]
    26dc:	ldr	x0, [sp, #24]
    26e0:	cmp	x0, #0x0
    26e4:	b.eq	2750 <gcry_mpi_mul_2exp+0x134>  // b.none
    26e8:	ldrsw	x0, [sp, #72]
    26ec:	lsl	x0, x0, #3
    26f0:	ldr	x1, [sp, #64]
    26f4:	add	x4, x1, x0
    26f8:	ldr	x0, [sp, #32]
    26fc:	ldr	x0, [x0, #16]
    2700:	ldr	x1, [sp, #24]
    2704:	mov	w3, w1
    2708:	ldr	w2, [sp, #80]
    270c:	mov	x1, x0
    2710:	mov	x0, x4
    2714:	bl	5b48 <_gcry_mpih_lshift>
    2718:	str	x0, [sp, #48]
    271c:	ldr	x0, [sp, #48]
    2720:	cmp	x0, #0x0
    2724:	b.eq	27ac <gcry_mpi_mul_2exp+0x190>  // b.none
    2728:	ldrsw	x0, [sp, #92]
    272c:	lsl	x0, x0, #3
    2730:	ldr	x1, [sp, #64]
    2734:	add	x0, x1, x0
    2738:	ldr	x1, [sp, #48]
    273c:	str	x1, [x0]
    2740:	ldr	w0, [sp, #92]
    2744:	add	w0, w0, #0x1
    2748:	str	w0, [sp, #92]
    274c:	b	27ac <gcry_mpi_mul_2exp+0x190>
    2750:	ldr	w0, [sp, #80]
    2754:	sub	w0, w0, #0x1
    2758:	str	w0, [sp, #88]
    275c:	b	27a0 <gcry_mpi_mul_2exp+0x184>
    2760:	ldr	x0, [sp, #32]
    2764:	ldr	x1, [x0, #16]
    2768:	ldrsw	x0, [sp, #88]
    276c:	lsl	x0, x0, #3
    2770:	add	x1, x1, x0
    2774:	ldrsw	x2, [sp, #72]
    2778:	ldrsw	x0, [sp, #88]
    277c:	add	x0, x2, x0
    2780:	lsl	x0, x0, #3
    2784:	ldr	x2, [sp, #64]
    2788:	add	x0, x2, x0
    278c:	ldr	x1, [x1]
    2790:	str	x1, [x0]
    2794:	ldr	w0, [sp, #88]
    2798:	sub	w0, w0, #0x1
    279c:	str	w0, [sp, #88]
    27a0:	ldr	w0, [sp, #88]
    27a4:	cmp	w0, #0x0
    27a8:	b.ge	2760 <gcry_mpi_mul_2exp+0x144>  // b.tcont
    27ac:	str	wzr, [sp, #84]
    27b0:	b	27d4 <gcry_mpi_mul_2exp+0x1b8>
    27b4:	ldrsw	x0, [sp, #84]
    27b8:	lsl	x0, x0, #3
    27bc:	ldr	x1, [sp, #64]
    27c0:	add	x0, x1, x0
    27c4:	str	xzr, [x0]
    27c8:	ldr	w0, [sp, #84]
    27cc:	add	w0, w0, #0x1
    27d0:	str	w0, [sp, #84]
    27d4:	ldr	w1, [sp, #84]
    27d8:	ldr	w0, [sp, #72]
    27dc:	cmp	w1, w0
    27e0:	b.lt	27b4 <gcry_mpi_mul_2exp+0x198>  // b.tstop
    27e4:	ldr	x0, [sp, #40]
    27e8:	ldr	w1, [sp, #92]
    27ec:	str	w1, [x0, #4]
    27f0:	ldr	x0, [sp, #40]
    27f4:	ldr	w1, [sp, #60]
    27f8:	str	w1, [x0, #8]
    27fc:	ldp	x29, x30, [sp], #96
    2800:	ret

0000000000002804 <gcry_mpi_mul>:
    2804:	stp	x29, x30, [sp, #-160]!
    2808:	mov	x29, sp
    280c:	str	x0, [sp, #40]
    2810:	str	x1, [sp, #32]
    2814:	str	x2, [sp, #24]
    2818:	str	wzr, [sp, #100]
    281c:	str	xzr, [sp, #88]
    2820:	str	wzr, [sp, #84]
    2824:	ldr	x0, [sp, #32]
    2828:	ldr	w1, [x0, #4]
    282c:	ldr	x0, [sp, #24]
    2830:	ldr	w0, [x0, #4]
    2834:	cmp	w1, w0
    2838:	b.ge	28e8 <gcry_mpi_mul+0xe4>  // b.tcont
    283c:	ldr	x0, [sp, #24]
    2840:	ldr	w0, [x0, #4]
    2844:	str	w0, [sp, #156]
    2848:	ldr	x0, [sp, #24]
    284c:	ldr	w0, [x0, #8]
    2850:	str	w0, [sp, #116]
    2854:	ldr	x0, [sp, #24]
    2858:	cmp	x0, #0x0
    285c:	b.eq	287c <gcry_mpi_mul+0x78>  // b.none
    2860:	ldr	x0, [sp, #24]
    2864:	ldr	w0, [x0, #12]
    2868:	and	w0, w0, #0x1
    286c:	cmp	w0, #0x0
    2870:	b.eq	287c <gcry_mpi_mul+0x78>  // b.none
    2874:	mov	w0, #0x1                   	// #1
    2878:	b	2880 <gcry_mpi_mul+0x7c>
    287c:	mov	w0, #0x0                   	// #0
    2880:	str	w0, [sp, #108]
    2884:	ldr	x0, [sp, #24]
    2888:	ldr	x0, [x0, #16]
    288c:	str	x0, [sp, #136]
    2890:	ldr	x0, [sp, #32]
    2894:	ldr	w0, [x0, #4]
    2898:	str	w0, [sp, #152]
    289c:	ldr	x0, [sp, #32]
    28a0:	ldr	w0, [x0, #8]
    28a4:	str	w0, [sp, #112]
    28a8:	ldr	x0, [sp, #32]
    28ac:	cmp	x0, #0x0
    28b0:	b.eq	28d0 <gcry_mpi_mul+0xcc>  // b.none
    28b4:	ldr	x0, [sp, #32]
    28b8:	ldr	w0, [x0, #12]
    28bc:	and	w0, w0, #0x1
    28c0:	cmp	w0, #0x0
    28c4:	b.eq	28d0 <gcry_mpi_mul+0xcc>  // b.none
    28c8:	mov	w0, #0x1                   	// #1
    28cc:	b	28d4 <gcry_mpi_mul+0xd0>
    28d0:	mov	w0, #0x0                   	// #0
    28d4:	str	w0, [sp, #104]
    28d8:	ldr	x0, [sp, #32]
    28dc:	ldr	x0, [x0, #16]
    28e0:	str	x0, [sp, #128]
    28e4:	b	2990 <gcry_mpi_mul+0x18c>
    28e8:	ldr	x0, [sp, #32]
    28ec:	ldr	w0, [x0, #4]
    28f0:	str	w0, [sp, #156]
    28f4:	ldr	x0, [sp, #32]
    28f8:	ldr	w0, [x0, #8]
    28fc:	str	w0, [sp, #116]
    2900:	ldr	x0, [sp, #32]
    2904:	cmp	x0, #0x0
    2908:	b.eq	2928 <gcry_mpi_mul+0x124>  // b.none
    290c:	ldr	x0, [sp, #32]
    2910:	ldr	w0, [x0, #12]
    2914:	and	w0, w0, #0x1
    2918:	cmp	w0, #0x0
    291c:	b.eq	2928 <gcry_mpi_mul+0x124>  // b.none
    2920:	mov	w0, #0x1                   	// #1
    2924:	b	292c <gcry_mpi_mul+0x128>
    2928:	mov	w0, #0x0                   	// #0
    292c:	str	w0, [sp, #108]
    2930:	ldr	x0, [sp, #32]
    2934:	ldr	x0, [x0, #16]
    2938:	str	x0, [sp, #136]
    293c:	ldr	x0, [sp, #24]
    2940:	ldr	w0, [x0, #4]
    2944:	str	w0, [sp, #152]
    2948:	ldr	x0, [sp, #24]
    294c:	ldr	w0, [x0, #8]
    2950:	str	w0, [sp, #112]
    2954:	ldr	x0, [sp, #24]
    2958:	cmp	x0, #0x0
    295c:	b.eq	297c <gcry_mpi_mul+0x178>  // b.none
    2960:	ldr	x0, [sp, #24]
    2964:	ldr	w0, [x0, #12]
    2968:	and	w0, w0, #0x1
    296c:	cmp	w0, #0x0
    2970:	b.eq	297c <gcry_mpi_mul+0x178>  // b.none
    2974:	mov	w0, #0x1                   	// #1
    2978:	b	2980 <gcry_mpi_mul+0x17c>
    297c:	mov	w0, #0x0                   	// #0
    2980:	str	w0, [sp, #104]
    2984:	ldr	x0, [sp, #24]
    2988:	ldr	x0, [x0, #16]
    298c:	str	x0, [sp, #128]
    2990:	ldr	w1, [sp, #116]
    2994:	ldr	w0, [sp, #112]
    2998:	eor	w0, w1, w0
    299c:	str	w0, [sp, #68]
    29a0:	ldr	x0, [sp, #40]
    29a4:	ldr	x0, [x0, #16]
    29a8:	str	x0, [sp, #120]
    29ac:	ldr	w1, [sp, #156]
    29b0:	ldr	w0, [sp, #152]
    29b4:	add	w0, w1, w0
    29b8:	str	w0, [sp, #148]
    29bc:	ldr	x0, [sp, #40]
    29c0:	cmp	x0, #0x0
    29c4:	b.eq	29dc <gcry_mpi_mul+0x1d8>  // b.none
    29c8:	ldr	x0, [sp, #40]
    29cc:	ldr	w0, [x0, #12]
    29d0:	and	w0, w0, #0x1
    29d4:	cmp	w0, #0x0
    29d8:	b.ne	2a38 <gcry_mpi_mul+0x234>  // b.any
    29dc:	ldr	x0, [sp, #32]
    29e0:	cmp	x0, #0x0
    29e4:	b.eq	29fc <gcry_mpi_mul+0x1f8>  // b.none
    29e8:	ldr	x0, [sp, #32]
    29ec:	ldr	w0, [x0, #12]
    29f0:	and	w0, w0, #0x1
    29f4:	cmp	w0, #0x0
    29f8:	b.ne	2a1c <gcry_mpi_mul+0x218>  // b.any
    29fc:	ldr	x0, [sp, #24]
    2a00:	cmp	x0, #0x0
    2a04:	b.eq	2a38 <gcry_mpi_mul+0x234>  // b.none
    2a08:	ldr	x0, [sp, #24]
    2a0c:	ldr	w0, [x0, #12]
    2a10:	and	w0, w0, #0x1
    2a14:	cmp	w0, #0x0
    2a18:	b.eq	2a38 <gcry_mpi_mul+0x234>  // b.none
    2a1c:	ldr	w0, [sp, #148]
    2a20:	mov	w1, #0x1                   	// #1
    2a24:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    2a28:	str	x0, [sp, #120]
    2a2c:	mov	w0, #0x2                   	// #2
    2a30:	str	w0, [sp, #100]
    2a34:	b	2bec <gcry_mpi_mul+0x3e8>
    2a38:	ldr	x0, [sp, #40]
    2a3c:	ldr	w0, [x0]
    2a40:	ldr	w1, [sp, #148]
    2a44:	cmp	w1, w0
    2a48:	b.le	2ad8 <gcry_mpi_mul+0x2d4>
    2a4c:	ldr	x1, [sp, #120]
    2a50:	ldr	x0, [sp, #136]
    2a54:	cmp	x1, x0
    2a58:	b.eq	2a6c <gcry_mpi_mul+0x268>  // b.none
    2a5c:	ldr	x1, [sp, #120]
    2a60:	ldr	x0, [sp, #128]
    2a64:	cmp	x1, x0
    2a68:	b.ne	2ab8 <gcry_mpi_mul+0x2b4>  // b.any
    2a6c:	ldr	w2, [sp, #148]
    2a70:	ldr	x0, [sp, #40]
    2a74:	cmp	x0, #0x0
    2a78:	b.eq	2a98 <gcry_mpi_mul+0x294>  // b.none
    2a7c:	ldr	x0, [sp, #40]
    2a80:	ldr	w0, [x0, #12]
    2a84:	and	w0, w0, #0x1
    2a88:	cmp	w0, #0x0
    2a8c:	b.eq	2a98 <gcry_mpi_mul+0x294>  // b.none
    2a90:	mov	w0, #0x1                   	// #1
    2a94:	b	2a9c <gcry_mpi_mul+0x298>
    2a98:	mov	w0, #0x0                   	// #0
    2a9c:	mov	w1, w0
    2aa0:	mov	w0, w2
    2aa4:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    2aa8:	str	x0, [sp, #120]
    2aac:	mov	w0, #0x1                   	// #1
    2ab0:	str	w0, [sp, #100]
    2ab4:	b	2bec <gcry_mpi_mul+0x3e8>
    2ab8:	ldr	w0, [sp, #148]
    2abc:	mov	w1, w0
    2ac0:	ldr	x0, [sp, #40]
    2ac4:	bl	2f0 <_gcry_mpi_resize>
    2ac8:	ldr	x0, [sp, #40]
    2acc:	ldr	x0, [x0, #16]
    2ad0:	str	x0, [sp, #120]
    2ad4:	b	2bec <gcry_mpi_mul+0x3e8>
    2ad8:	ldr	x1, [sp, #120]
    2adc:	ldr	x0, [sp, #136]
    2ae0:	cmp	x1, x0
    2ae4:	b.ne	2b70 <gcry_mpi_mul+0x36c>  // b.any
    2ae8:	ldr	w0, [sp, #156]
    2aec:	str	w0, [sp, #84]
    2af0:	ldr	w0, [sp, #156]
    2af4:	ldr	w1, [sp, #108]
    2af8:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    2afc:	str	x0, [sp, #88]
    2b00:	ldr	x0, [sp, #88]
    2b04:	str	x0, [sp, #136]
    2b08:	ldr	x1, [sp, #120]
    2b0c:	ldr	x0, [sp, #128]
    2b10:	cmp	x1, x0
    2b14:	b.ne	2b20 <gcry_mpi_mul+0x31c>  // b.any
    2b18:	ldr	x0, [sp, #136]
    2b1c:	str	x0, [sp, #128]
    2b20:	str	wzr, [sp, #80]
    2b24:	b	2b5c <gcry_mpi_mul+0x358>
    2b28:	ldrsw	x0, [sp, #80]
    2b2c:	lsl	x0, x0, #3
    2b30:	ldr	x1, [sp, #120]
    2b34:	add	x1, x1, x0
    2b38:	ldrsw	x0, [sp, #80]
    2b3c:	lsl	x0, x0, #3
    2b40:	ldr	x2, [sp, #136]
    2b44:	add	x0, x2, x0
    2b48:	ldr	x1, [x1]
    2b4c:	str	x1, [x0]
    2b50:	ldr	w0, [sp, #80]
    2b54:	add	w0, w0, #0x1
    2b58:	str	w0, [sp, #80]
    2b5c:	ldr	w1, [sp, #80]
    2b60:	ldr	w0, [sp, #156]
    2b64:	cmp	w1, w0
    2b68:	b.lt	2b28 <gcry_mpi_mul+0x324>  // b.tstop
    2b6c:	b	2bec <gcry_mpi_mul+0x3e8>
    2b70:	ldr	x1, [sp, #120]
    2b74:	ldr	x0, [sp, #128]
    2b78:	cmp	x1, x0
    2b7c:	b.ne	2bec <gcry_mpi_mul+0x3e8>  // b.any
    2b80:	ldr	w0, [sp, #152]
    2b84:	str	w0, [sp, #84]
    2b88:	ldr	w0, [sp, #152]
    2b8c:	ldr	w1, [sp, #104]
    2b90:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    2b94:	str	x0, [sp, #88]
    2b98:	ldr	x0, [sp, #88]
    2b9c:	str	x0, [sp, #128]
    2ba0:	str	wzr, [sp, #76]
    2ba4:	b	2bdc <gcry_mpi_mul+0x3d8>
    2ba8:	ldrsw	x0, [sp, #76]
    2bac:	lsl	x0, x0, #3
    2bb0:	ldr	x1, [sp, #120]
    2bb4:	add	x1, x1, x0
    2bb8:	ldrsw	x0, [sp, #76]
    2bbc:	lsl	x0, x0, #3
    2bc0:	ldr	x2, [sp, #128]
    2bc4:	add	x0, x2, x0
    2bc8:	ldr	x1, [x1]
    2bcc:	str	x1, [x0]
    2bd0:	ldr	w0, [sp, #76]
    2bd4:	add	w0, w0, #0x1
    2bd8:	str	w0, [sp, #76]
    2bdc:	ldr	w1, [sp, #76]
    2be0:	ldr	w0, [sp, #152]
    2be4:	cmp	w1, w0
    2be8:	b.lt	2ba8 <gcry_mpi_mul+0x3a4>  // b.tstop
    2bec:	ldr	w0, [sp, #152]
    2bf0:	cmp	w0, #0x0
    2bf4:	b.ne	2c00 <gcry_mpi_mul+0x3fc>  // b.any
    2bf8:	str	wzr, [sp, #148]
    2bfc:	b	2c3c <gcry_mpi_mul+0x438>
    2c00:	ldr	w4, [sp, #152]
    2c04:	ldr	x3, [sp, #128]
    2c08:	ldr	w2, [sp, #156]
    2c0c:	ldr	x1, [sp, #136]
    2c10:	ldr	x0, [sp, #120]
    2c14:	bl	7194 <_gcry_mpih_mul>
    2c18:	str	x0, [sp, #56]
    2c1c:	ldr	x0, [sp, #56]
    2c20:	cmp	x0, #0x0
    2c24:	cset	w0, eq  // eq = none
    2c28:	and	w0, w0, #0xff
    2c2c:	mov	w1, w0
    2c30:	ldr	w0, [sp, #148]
    2c34:	sub	w0, w0, w1
    2c38:	str	w0, [sp, #148]
    2c3c:	ldr	w0, [sp, #100]
    2c40:	cmp	w0, #0x0
    2c44:	b.eq	2cd8 <gcry_mpi_mul+0x4d4>  // b.none
    2c48:	ldr	w0, [sp, #100]
    2c4c:	cmp	w0, #0x2
    2c50:	b.ne	2cc4 <gcry_mpi_mul+0x4c0>  // b.any
    2c54:	ldr	w0, [sp, #148]
    2c58:	mov	w1, #0x0                   	// #0
    2c5c:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    2c60:	str	x0, [sp, #48]
    2c64:	str	wzr, [sp, #72]
    2c68:	b	2ca0 <gcry_mpi_mul+0x49c>
    2c6c:	ldrsw	x0, [sp, #72]
    2c70:	lsl	x0, x0, #3
    2c74:	ldr	x1, [sp, #120]
    2c78:	add	x1, x1, x0
    2c7c:	ldrsw	x0, [sp, #72]
    2c80:	lsl	x0, x0, #3
    2c84:	ldr	x2, [sp, #48]
    2c88:	add	x0, x2, x0
    2c8c:	ldr	x1, [x1]
    2c90:	str	x1, [x0]
    2c94:	ldr	w0, [sp, #72]
    2c98:	add	w0, w0, #0x1
    2c9c:	str	w0, [sp, #72]
    2ca0:	ldr	w1, [sp, #72]
    2ca4:	ldr	w0, [sp, #148]
    2ca8:	cmp	w1, w0
    2cac:	b.lt	2c6c <gcry_mpi_mul+0x468>  // b.tstop
    2cb0:	mov	w1, #0x0                   	// #0
    2cb4:	ldr	x0, [sp, #120]
    2cb8:	bl	214 <_gcry_mpi_free_limb_space>
    2cbc:	ldr	x0, [sp, #48]
    2cc0:	str	x0, [sp, #120]
    2cc4:	ldr	w0, [sp, #148]
    2cc8:	mov	w2, w0
    2ccc:	ldr	x1, [sp, #120]
    2cd0:	ldr	x0, [sp, #40]
    2cd4:	bl	29c <_gcry_mpi_assign_limb_space>
    2cd8:	ldr	x0, [sp, #40]
    2cdc:	ldr	w1, [sp, #148]
    2ce0:	str	w1, [x0, #4]
    2ce4:	ldr	x0, [sp, #40]
    2ce8:	ldr	w1, [sp, #68]
    2cec:	str	w1, [x0, #8]
    2cf0:	ldr	x0, [sp, #88]
    2cf4:	cmp	x0, #0x0
    2cf8:	b.eq	2d08 <gcry_mpi_mul+0x504>  // b.none
    2cfc:	ldr	w1, [sp, #84]
    2d00:	ldr	x0, [sp, #88]
    2d04:	bl	214 <_gcry_mpi_free_limb_space>
    2d08:	nop
    2d0c:	ldp	x29, x30, [sp], #160
    2d10:	ret

0000000000002d14 <gcry_mpi_mulm>:
    2d14:	stp	x29, x30, [sp, #-48]!
    2d18:	mov	x29, sp
    2d1c:	str	x0, [sp, #40]
    2d20:	str	x1, [sp, #32]
    2d24:	str	x2, [sp, #24]
    2d28:	str	x3, [sp, #16]
    2d2c:	ldr	x2, [sp, #24]
    2d30:	ldr	x1, [sp, #32]
    2d34:	ldr	x0, [sp, #40]
    2d38:	bl	2804 <gcry_mpi_mul>
    2d3c:	ldr	x2, [sp, #16]
    2d40:	ldr	x1, [sp, #40]
    2d44:	ldr	x0, [sp, #40]
    2d48:	bl	3218 <_gcry_mpi_fdiv_r>
    2d4c:	nop
    2d50:	ldp	x29, x30, [sp], #48
    2d54:	ret

0000000000002d58 <_gcry_mpi_mod>:
    2d58:	stp	x29, x30, [sp, #-48]!
    2d5c:	mov	x29, sp
    2d60:	str	x0, [sp, #40]
    2d64:	str	x1, [sp, #32]
    2d68:	str	x2, [sp, #24]
    2d6c:	ldr	x2, [sp, #24]
    2d70:	ldr	x1, [sp, #32]
    2d74:	ldr	x0, [sp, #40]
    2d78:	bl	3218 <_gcry_mpi_fdiv_r>
    2d7c:	ldr	x0, [sp, #40]
    2d80:	str	wzr, [x0, #8]
    2d84:	nop
    2d88:	ldp	x29, x30, [sp], #48
    2d8c:	ret

0000000000002d90 <_gcry_mpi_barrett_init>:
    2d90:	stp	x29, x30, [sp, #-48]!
    2d94:	mov	x29, sp
    2d98:	str	x0, [sp, #24]
    2d9c:	str	w1, [sp, #20]
    2da0:	ldr	x0, [sp, #24]
    2da4:	bl	ec0 <_gcry_mpi_normalize>
    2da8:	mov	x1, #0x30                  	// #48
    2dac:	mov	x0, #0x1                   	// #1
    2db0:	bl	be04 <gcry_xcalloc>
    2db4:	str	x0, [sp, #40]
    2db8:	ldr	w0, [sp, #20]
    2dbc:	cmp	w0, #0x0
    2dc0:	b.eq	2de8 <_gcry_mpi_barrett_init+0x58>  // b.none
    2dc4:	ldr	x0, [sp, #24]
    2dc8:	bl	768 <_gcry_mpi_copy>
    2dcc:	mov	x1, x0
    2dd0:	ldr	x0, [sp, #40]
    2dd4:	str	x1, [x0]
    2dd8:	ldr	x0, [sp, #40]
    2ddc:	mov	w1, #0x1                   	// #1
    2de0:	str	w1, [x0, #8]
    2de4:	b	2df4 <_gcry_mpi_barrett_init+0x64>
    2de8:	ldr	x0, [sp, #40]
    2dec:	ldr	x1, [sp, #24]
    2df0:	str	x1, [x0]
    2df4:	ldr	x0, [sp, #24]
    2df8:	ldr	w1, [x0, #4]
    2dfc:	ldr	x0, [sp, #40]
    2e00:	str	w1, [x0, #12]
    2e04:	ldr	x0, [sp, #40]
    2e08:	ldr	w0, [x0, #12]
    2e0c:	add	w0, w0, #0x1
    2e10:	bl	88 <_gcry_mpi_alloc>
    2e14:	str	x0, [sp, #32]
    2e18:	mov	x1, #0x1                   	// #1
    2e1c:	ldr	x0, [sp, #32]
    2e20:	bl	b6c <gcry_mpi_set_ui>
    2e24:	ldr	x0, [sp, #40]
    2e28:	ldr	w0, [x0, #12]
    2e2c:	lsl	w0, w0, #1
    2e30:	mov	w1, w0
    2e34:	ldr	x0, [sp, #32]
    2e38:	bl	19c0 <_gcry_mpi_lshift_limbs>
    2e3c:	ldr	x2, [sp, #24]
    2e40:	ldr	x1, [sp, #32]
    2e44:	ldr	x0, [sp, #32]
    2e48:	bl	338c <_gcry_mpi_fdiv_q>
    2e4c:	ldr	x0, [sp, #40]
    2e50:	ldr	x1, [sp, #32]
    2e54:	str	x1, [x0, #16]
    2e58:	ldr	x0, [sp, #40]
    2e5c:	ldr	w0, [x0, #12]
    2e60:	lsl	w0, w0, #1
    2e64:	add	w0, w0, #0x1
    2e68:	bl	88 <_gcry_mpi_alloc>
    2e6c:	mov	x1, x0
    2e70:	ldr	x0, [sp, #40]
    2e74:	str	x1, [x0, #24]
    2e78:	ldr	x0, [sp, #40]
    2e7c:	ldr	w0, [x0, #12]
    2e80:	lsl	w0, w0, #1
    2e84:	add	w0, w0, #0x1
    2e88:	bl	88 <_gcry_mpi_alloc>
    2e8c:	mov	x1, x0
    2e90:	ldr	x0, [sp, #40]
    2e94:	str	x1, [x0, #32]
    2e98:	ldr	x0, [sp, #40]
    2e9c:	ldp	x29, x30, [sp], #48
    2ea0:	ret

0000000000002ea4 <_gcry_mpi_barrett_free>:
    2ea4:	stp	x29, x30, [sp, #-32]!
    2ea8:	mov	x29, sp
    2eac:	str	x0, [sp, #24]
    2eb0:	ldr	x0, [sp, #24]
    2eb4:	cmp	x0, #0x0
    2eb8:	b.eq	2f20 <_gcry_mpi_barrett_free+0x7c>  // b.none
    2ebc:	ldr	x0, [sp, #24]
    2ec0:	ldr	x0, [x0, #16]
    2ec4:	bl	470 <_gcry_mpi_free>
    2ec8:	ldr	x0, [sp, #24]
    2ecc:	ldr	x0, [x0, #24]
    2ed0:	bl	470 <_gcry_mpi_free>
    2ed4:	ldr	x0, [sp, #24]
    2ed8:	ldr	x0, [x0, #32]
    2edc:	bl	470 <_gcry_mpi_free>
    2ee0:	ldr	x0, [sp, #24]
    2ee4:	ldr	x0, [x0, #40]
    2ee8:	cmp	x0, #0x0
    2eec:	b.eq	2efc <_gcry_mpi_barrett_free+0x58>  // b.none
    2ef0:	ldr	x0, [sp, #24]
    2ef4:	ldr	x0, [x0, #40]
    2ef8:	bl	470 <_gcry_mpi_free>
    2efc:	ldr	x0, [sp, #24]
    2f00:	ldr	w0, [x0, #8]
    2f04:	cmp	w0, #0x0
    2f08:	b.eq	2f18 <_gcry_mpi_barrett_free+0x74>  // b.none
    2f0c:	ldr	x0, [sp, #24]
    2f10:	ldr	x0, [x0]
    2f14:	bl	470 <_gcry_mpi_free>
    2f18:	ldr	x0, [sp, #24]
    2f1c:	bl	bdd0 <gcry_free>
    2f20:	nop
    2f24:	ldp	x29, x30, [sp], #32
    2f28:	ret

0000000000002f2c <_gcry_mpi_mod_barrett>:
    2f2c:	stp	x29, x30, [sp, #-96]!
    2f30:	mov	x29, sp
    2f34:	str	x0, [sp, #40]
    2f38:	str	x1, [sp, #32]
    2f3c:	str	x2, [sp, #24]
    2f40:	ldr	x0, [sp, #24]
    2f44:	ldr	x0, [x0]
    2f48:	str	x0, [sp, #88]
    2f4c:	ldr	x0, [sp, #24]
    2f50:	ldr	w0, [x0, #12]
    2f54:	str	w0, [sp, #84]
    2f58:	ldr	x0, [sp, #24]
    2f5c:	ldr	x0, [x0, #16]
    2f60:	str	x0, [sp, #72]
    2f64:	ldr	x0, [sp, #24]
    2f68:	ldr	x0, [x0, #24]
    2f6c:	str	x0, [sp, #64]
    2f70:	ldr	x0, [sp, #24]
    2f74:	ldr	x0, [x0, #32]
    2f78:	str	x0, [sp, #56]
    2f7c:	ldr	x0, [sp, #32]
    2f80:	bl	ec0 <_gcry_mpi_normalize>
    2f84:	ldr	x0, [sp, #32]
    2f88:	ldr	w1, [x0, #4]
    2f8c:	ldr	w0, [sp, #84]
    2f90:	lsl	w0, w0, #1
    2f94:	cmp	w1, w0
    2f98:	b.le	2fb0 <_gcry_mpi_mod_barrett+0x84>
    2f9c:	ldr	x2, [sp, #88]
    2fa0:	ldr	x1, [sp, #32]
    2fa4:	ldr	x0, [sp, #40]
    2fa8:	bl	2d58 <_gcry_mpi_mod>
    2fac:	b	3114 <_gcry_mpi_mod_barrett+0x1e8>
    2fb0:	ldr	x1, [sp, #32]
    2fb4:	ldr	x0, [sp, #56]
    2fb8:	bl	a6c <gcry_mpi_set>
    2fbc:	ldr	w0, [sp, #84]
    2fc0:	sub	w0, w0, #0x1
    2fc4:	mov	w1, w0
    2fc8:	ldr	x0, [sp, #56]
    2fcc:	bl	1458 <_gcry_mpi_rshift_limbs>
    2fd0:	ldr	x2, [sp, #72]
    2fd4:	ldr	x1, [sp, #56]
    2fd8:	ldr	x0, [sp, #56]
    2fdc:	bl	2804 <gcry_mpi_mul>
    2fe0:	ldr	w0, [sp, #84]
    2fe4:	add	w0, w0, #0x1
    2fe8:	mov	w1, w0
    2fec:	ldr	x0, [sp, #56]
    2ff0:	bl	1458 <_gcry_mpi_rshift_limbs>
    2ff4:	ldr	x1, [sp, #32]
    2ff8:	ldr	x0, [sp, #64]
    2ffc:	bl	a6c <gcry_mpi_set>
    3000:	ldr	x0, [sp, #64]
    3004:	ldr	w1, [x0, #4]
    3008:	ldr	w0, [sp, #84]
    300c:	add	w0, w0, #0x1
    3010:	cmp	w1, w0
    3014:	b.le	3028 <_gcry_mpi_mod_barrett+0xfc>
    3018:	ldr	w0, [sp, #84]
    301c:	add	w1, w0, #0x1
    3020:	ldr	x0, [sp, #64]
    3024:	str	w1, [x0, #4]
    3028:	ldr	x2, [sp, #88]
    302c:	ldr	x1, [sp, #56]
    3030:	ldr	x0, [sp, #56]
    3034:	bl	2804 <gcry_mpi_mul>
    3038:	ldr	x0, [sp, #56]
    303c:	ldr	w1, [x0, #4]
    3040:	ldr	w0, [sp, #84]
    3044:	add	w0, w0, #0x1
    3048:	cmp	w1, w0
    304c:	b.le	3060 <_gcry_mpi_mod_barrett+0x134>
    3050:	ldr	w0, [sp, #84]
    3054:	add	w1, w0, #0x1
    3058:	ldr	x0, [sp, #56]
    305c:	str	w1, [x0, #4]
    3060:	ldr	x2, [sp, #56]
    3064:	ldr	x1, [sp, #64]
    3068:	ldr	x0, [sp, #40]
    306c:	bl	242c <gcry_mpi_sub>
    3070:	ldr	x0, [sp, #40]
    3074:	ldr	w0, [x0, #8]
    3078:	cmp	w0, #0x0
    307c:	b.eq	3100 <_gcry_mpi_mod_barrett+0x1d4>  // b.none
    3080:	ldr	x0, [sp, #24]
    3084:	ldr	x0, [x0, #40]
    3088:	cmp	x0, #0x0
    308c:	b.ne	30d4 <_gcry_mpi_mod_barrett+0x1a8>  // b.any
    3090:	ldr	w0, [sp, #84]
    3094:	add	w0, w0, #0x2
    3098:	bl	88 <_gcry_mpi_alloc>
    309c:	mov	x1, x0
    30a0:	ldr	x0, [sp, #24]
    30a4:	str	x1, [x0, #40]
    30a8:	ldr	x0, [sp, #24]
    30ac:	ldr	x0, [x0, #40]
    30b0:	mov	x1, #0x1                   	// #1
    30b4:	bl	b6c <gcry_mpi_set_ui>
    30b8:	ldr	x0, [sp, #24]
    30bc:	ldr	x2, [x0, #40]
    30c0:	ldr	w0, [sp, #84]
    30c4:	add	w0, w0, #0x1
    30c8:	mov	w1, w0
    30cc:	mov	x0, x2
    30d0:	bl	19c0 <_gcry_mpi_lshift_limbs>
    30d4:	ldr	x0, [sp, #24]
    30d8:	ldr	x0, [x0, #40]
    30dc:	mov	x2, x0
    30e0:	ldr	x1, [sp, #40]
    30e4:	ldr	x0, [sp, #40]
    30e8:	bl	1ebc <gcry_mpi_add>
    30ec:	b	3100 <_gcry_mpi_mod_barrett+0x1d4>
    30f0:	ldr	x2, [sp, #88]
    30f4:	ldr	x1, [sp, #40]
    30f8:	ldr	x0, [sp, #40]
    30fc:	bl	242c <gcry_mpi_sub>
    3100:	ldr	x1, [sp, #88]
    3104:	ldr	x0, [sp, #40]
    3108:	bl	407c <gcry_mpi_cmp>
    310c:	cmp	w0, #0x0
    3110:	b.ge	30f0 <_gcry_mpi_mod_barrett+0x1c4>  // b.tcont
    3114:	ldp	x29, x30, [sp], #96
    3118:	ret

000000000000311c <_gcry_mpi_mul_barrett>:
    311c:	stp	x29, x30, [sp, #-48]!
    3120:	mov	x29, sp
    3124:	str	x0, [sp, #40]
    3128:	str	x1, [sp, #32]
    312c:	str	x2, [sp, #24]
    3130:	str	x3, [sp, #16]
    3134:	ldr	x2, [sp, #24]
    3138:	ldr	x1, [sp, #32]
    313c:	ldr	x0, [sp, #40]
    3140:	bl	2804 <gcry_mpi_mul>
    3144:	ldr	x2, [sp, #16]
    3148:	ldr	x1, [sp, #40]
    314c:	ldr	x0, [sp, #40]
    3150:	bl	2f2c <_gcry_mpi_mod_barrett>
    3154:	nop
    3158:	ldp	x29, x30, [sp], #48
    315c:	ret

0000000000003160 <gcry_mpi_gcd>:
    3160:	stp	x29, x30, [sp, #-64]!
    3164:	mov	x29, sp
    3168:	str	x0, [sp, #40]
    316c:	str	x1, [sp, #32]
    3170:	str	x2, [sp, #24]
    3174:	ldr	x0, [sp, #32]
    3178:	bl	768 <_gcry_mpi_copy>
    317c:	str	x0, [sp, #56]
    3180:	ldr	x0, [sp, #24]
    3184:	bl	768 <_gcry_mpi_copy>
    3188:	str	x0, [sp, #48]
    318c:	ldr	x0, [sp, #56]
    3190:	str	wzr, [x0, #8]
    3194:	ldr	x0, [sp, #48]
    3198:	str	wzr, [x0, #8]
    319c:	b	31c8 <gcry_mpi_gcd+0x68>
    31a0:	ldr	x2, [sp, #48]
    31a4:	ldr	x1, [sp, #56]
    31a8:	ldr	x0, [sp, #40]
    31ac:	bl	3218 <_gcry_mpi_fdiv_r>
    31b0:	ldr	x1, [sp, #48]
    31b4:	ldr	x0, [sp, #56]
    31b8:	bl	a6c <gcry_mpi_set>
    31bc:	ldr	x1, [sp, #40]
    31c0:	ldr	x0, [sp, #48]
    31c4:	bl	a6c <gcry_mpi_set>
    31c8:	mov	x1, #0x0                   	// #0
    31cc:	ldr	x0, [sp, #48]
    31d0:	bl	3fb8 <gcry_mpi_cmp_ui>
    31d4:	cmp	w0, #0x0
    31d8:	b.ne	31a0 <gcry_mpi_gcd+0x40>  // b.any
    31dc:	ldr	x1, [sp, #56]
    31e0:	ldr	x0, [sp, #40]
    31e4:	bl	a6c <gcry_mpi_set>
    31e8:	ldr	x0, [sp, #56]
    31ec:	bl	470 <_gcry_mpi_free>
    31f0:	ldr	x0, [sp, #48]
    31f4:	bl	470 <_gcry_mpi_free>
    31f8:	mov	x1, #0x1                   	// #1
    31fc:	ldr	x0, [sp, #40]
    3200:	bl	3fb8 <gcry_mpi_cmp_ui>
    3204:	cmp	w0, #0x0
    3208:	cset	w0, eq  // eq = none
    320c:	and	w0, w0, #0xff
    3210:	ldp	x29, x30, [sp], #64
    3214:	ret

0000000000003218 <_gcry_mpi_fdiv_r>:
    3218:	stp	x29, x30, [sp, #-64]!
    321c:	mov	x29, sp
    3220:	str	x0, [sp, #40]
    3224:	str	x1, [sp, #32]
    3228:	str	x2, [sp, #24]
    322c:	ldr	x0, [sp, #24]
    3230:	ldr	w0, [x0, #8]
    3234:	str	w0, [sp, #52]
    3238:	str	xzr, [sp, #56]
    323c:	ldr	x1, [sp, #40]
    3240:	ldr	x0, [sp, #24]
    3244:	cmp	x1, x0
    3248:	b.ne	3260 <_gcry_mpi_fdiv_r+0x48>  // b.any
    324c:	ldr	x0, [sp, #24]
    3250:	bl	768 <_gcry_mpi_copy>
    3254:	str	x0, [sp, #56]
    3258:	ldr	x0, [sp, #56]
    325c:	str	x0, [sp, #24]
    3260:	ldr	x2, [sp, #24]
    3264:	ldr	x1, [sp, #32]
    3268:	ldr	x0, [sp, #40]
    326c:	bl	34ac <_gcry_mpi_tdiv_r>
    3270:	ldr	w0, [sp, #52]
    3274:	cmp	w0, #0x0
    3278:	cset	w0, ne  // ne = any
    327c:	and	w1, w0, #0xff
    3280:	ldr	x0, [sp, #32]
    3284:	ldr	w0, [x0, #8]
    3288:	cmp	w0, #0x0
    328c:	cset	w0, ne  // ne = any
    3290:	and	w0, w0, #0xff
    3294:	eor	w0, w1, w0
    3298:	and	w0, w0, #0xff
    329c:	cmp	w0, #0x0
    32a0:	b.eq	32c4 <_gcry_mpi_fdiv_r+0xac>  // b.none
    32a4:	ldr	x0, [sp, #40]
    32a8:	ldr	w0, [x0, #4]
    32ac:	cmp	w0, #0x0
    32b0:	b.eq	32c4 <_gcry_mpi_fdiv_r+0xac>  // b.none
    32b4:	ldr	x2, [sp, #24]
    32b8:	ldr	x1, [sp, #40]
    32bc:	ldr	x0, [sp, #40]
    32c0:	bl	1ebc <gcry_mpi_add>
    32c4:	ldr	x0, [sp, #56]
    32c8:	cmp	x0, #0x0
    32cc:	b.eq	32d8 <_gcry_mpi_fdiv_r+0xc0>  // b.none
    32d0:	ldr	x0, [sp, #56]
    32d4:	bl	470 <_gcry_mpi_free>
    32d8:	nop
    32dc:	ldp	x29, x30, [sp], #64
    32e0:	ret

00000000000032e4 <_gcry_mpi_fdiv_r_ui>:
    32e4:	stp	x29, x30, [sp, #-64]!
    32e8:	mov	x29, sp
    32ec:	str	x0, [sp, #40]
    32f0:	str	x1, [sp, #32]
    32f4:	str	x2, [sp, #24]
    32f8:	ldr	x0, [sp, #32]
    32fc:	ldr	x3, [x0, #16]
    3300:	ldr	x0, [sp, #32]
    3304:	ldr	w0, [x0, #4]
    3308:	ldr	x2, [sp, #24]
    330c:	mov	w1, w0
    3310:	mov	x0, x3
    3314:	bl	7c38 <_gcry_mpih_mod_1>
    3318:	str	x0, [sp, #56]
    331c:	ldr	x0, [sp, #56]
    3320:	cmp	x0, #0x0
    3324:	b.eq	3348 <_gcry_mpi_fdiv_r_ui+0x64>  // b.none
    3328:	ldr	x0, [sp, #32]
    332c:	ldr	w0, [x0, #8]
    3330:	cmp	w0, #0x0
    3334:	b.eq	3348 <_gcry_mpi_fdiv_r_ui+0x64>  // b.none
    3338:	ldr	x1, [sp, #24]
    333c:	ldr	x0, [sp, #56]
    3340:	sub	x0, x1, x0
    3344:	str	x0, [sp, #56]
    3348:	ldr	x0, [sp, #40]
    334c:	cmp	x0, #0x0
    3350:	b.eq	3380 <_gcry_mpi_fdiv_r_ui+0x9c>  // b.none
    3354:	ldr	x0, [sp, #40]
    3358:	ldr	x0, [x0, #16]
    335c:	ldr	x1, [sp, #56]
    3360:	str	x1, [x0]
    3364:	ldr	x0, [sp, #56]
    3368:	cmp	x0, #0x0
    336c:	cset	w0, ne  // ne = any
    3370:	and	w0, w0, #0xff
    3374:	mov	w1, w0
    3378:	ldr	x0, [sp, #40]
    337c:	str	w1, [x0, #4]
    3380:	ldr	x0, [sp, #56]
    3384:	ldp	x29, x30, [sp], #64
    3388:	ret

000000000000338c <_gcry_mpi_fdiv_q>:
    338c:	stp	x29, x30, [sp, #-64]!
    3390:	mov	x29, sp
    3394:	str	x0, [sp, #40]
    3398:	str	x1, [sp, #32]
    339c:	str	x2, [sp, #24]
    33a0:	ldr	x0, [sp, #40]
    33a4:	ldr	w0, [x0, #4]
    33a8:	bl	88 <_gcry_mpi_alloc>
    33ac:	str	x0, [sp, #56]
    33b0:	ldr	x3, [sp, #24]
    33b4:	ldr	x2, [sp, #32]
    33b8:	ldr	x1, [sp, #56]
    33bc:	ldr	x0, [sp, #40]
    33c0:	bl	33d8 <_gcry_mpi_fdiv_qr>
    33c4:	ldr	x0, [sp, #56]
    33c8:	bl	470 <_gcry_mpi_free>
    33cc:	nop
    33d0:	ldp	x29, x30, [sp], #64
    33d4:	ret

00000000000033d8 <_gcry_mpi_fdiv_qr>:
    33d8:	stp	x29, x30, [sp, #-64]!
    33dc:	mov	x29, sp
    33e0:	str	x0, [sp, #40]
    33e4:	str	x1, [sp, #32]
    33e8:	str	x2, [sp, #24]
    33ec:	str	x3, [sp, #16]
    33f0:	ldr	x0, [sp, #16]
    33f4:	ldr	w0, [x0, #8]
    33f8:	str	w0, [sp, #52]
    33fc:	str	xzr, [sp, #56]
    3400:	ldr	x1, [sp, #40]
    3404:	ldr	x0, [sp, #16]
    3408:	cmp	x1, x0
    340c:	b.eq	3420 <_gcry_mpi_fdiv_qr+0x48>  // b.none
    3410:	ldr	x1, [sp, #32]
    3414:	ldr	x0, [sp, #16]
    3418:	cmp	x1, x0
    341c:	b.ne	3434 <_gcry_mpi_fdiv_qr+0x5c>  // b.any
    3420:	ldr	x0, [sp, #16]
    3424:	bl	768 <_gcry_mpi_copy>
    3428:	str	x0, [sp, #56]
    342c:	ldr	x0, [sp, #56]
    3430:	str	x0, [sp, #16]
    3434:	ldr	x3, [sp, #16]
    3438:	ldr	x2, [sp, #24]
    343c:	ldr	x1, [sp, #32]
    3440:	ldr	x0, [sp, #40]
    3444:	bl	34e0 <_gcry_mpi_tdiv_qr>
    3448:	ldr	x0, [sp, #24]
    344c:	ldr	w0, [x0, #8]
    3450:	ldr	w1, [sp, #52]
    3454:	cmp	w1, w0
    3458:	b.eq	348c <_gcry_mpi_fdiv_qr+0xb4>  // b.none
    345c:	ldr	x0, [sp, #32]
    3460:	ldr	w0, [x0, #4]
    3464:	cmp	w0, #0x0
    3468:	b.eq	348c <_gcry_mpi_fdiv_qr+0xb4>  // b.none
    346c:	mov	x2, #0x1                   	// #1
    3470:	ldr	x1, [sp, #40]
    3474:	ldr	x0, [sp, #40]
    3478:	bl	2270 <gcry_mpi_sub_ui>
    347c:	ldr	x2, [sp, #16]
    3480:	ldr	x1, [sp, #32]
    3484:	ldr	x0, [sp, #32]
    3488:	bl	1ebc <gcry_mpi_add>
    348c:	ldr	x0, [sp, #56]
    3490:	cmp	x0, #0x0
    3494:	b.eq	34a0 <_gcry_mpi_fdiv_qr+0xc8>  // b.none
    3498:	ldr	x0, [sp, #56]
    349c:	bl	470 <_gcry_mpi_free>
    34a0:	nop
    34a4:	ldp	x29, x30, [sp], #64
    34a8:	ret

00000000000034ac <_gcry_mpi_tdiv_r>:
    34ac:	stp	x29, x30, [sp, #-48]!
    34b0:	mov	x29, sp
    34b4:	str	x0, [sp, #40]
    34b8:	str	x1, [sp, #32]
    34bc:	str	x2, [sp, #24]
    34c0:	ldr	x3, [sp, #24]
    34c4:	ldr	x2, [sp, #32]
    34c8:	ldr	x1, [sp, #40]
    34cc:	mov	x0, #0x0                   	// #0
    34d0:	bl	34e0 <_gcry_mpi_tdiv_qr>
    34d4:	nop
    34d8:	ldp	x29, x30, [sp], #48
    34dc:	ret

00000000000034e0 <_gcry_mpi_tdiv_qr>:
    34e0:	stp	x29, x30, [sp, #-272]!
    34e4:	mov	x29, sp
    34e8:	str	x19, [sp, #16]
    34ec:	str	x0, [sp, #56]
    34f0:	str	x1, [sp, #48]
    34f4:	str	x2, [sp, #40]
    34f8:	str	x3, [sp, #32]
    34fc:	ldr	x0, [sp, #40]
    3500:	ldr	w0, [x0, #4]
    3504:	str	w0, [sp, #196]
    3508:	ldr	x0, [sp, #32]
    350c:	ldr	w0, [x0, #4]
    3510:	str	w0, [sp, #192]
    3514:	ldr	x0, [sp, #40]
    3518:	ldr	w0, [x0, #8]
    351c:	str	w0, [sp, #188]
    3520:	ldr	x0, [sp, #40]
    3524:	ldr	w1, [x0, #8]
    3528:	ldr	x0, [sp, #32]
    352c:	ldr	w0, [x0, #8]
    3530:	eor	w0, w1, w0
    3534:	str	w0, [sp, #184]
    3538:	str	wzr, [sp, #236]
    353c:	ldr	w0, [sp, #196]
    3540:	add	w0, w0, #0x1
    3544:	str	w0, [sp, #240]
    3548:	ldr	w0, [sp, #240]
    354c:	mov	w1, w0
    3550:	ldr	x0, [sp, #48]
    3554:	bl	2f0 <_gcry_mpi_resize>
    3558:	ldr	w1, [sp, #240]
    355c:	ldr	w0, [sp, #192]
    3560:	sub	w0, w1, w0
    3564:	str	w0, [sp, #244]
    3568:	ldr	w0, [sp, #244]
    356c:	cmp	w0, #0x0
    3570:	b.gt	3618 <_gcry_mpi_tdiv_qr+0x138>
    3574:	ldr	x1, [sp, #40]
    3578:	ldr	x0, [sp, #48]
    357c:	cmp	x1, x0
    3580:	b.eq	35f8 <_gcry_mpi_tdiv_qr+0x118>  // b.none
    3584:	ldr	x0, [sp, #40]
    3588:	ldr	w1, [x0, #4]
    358c:	ldr	x0, [sp, #48]
    3590:	str	w1, [x0, #4]
    3594:	ldr	x0, [sp, #40]
    3598:	ldr	w1, [x0, #8]
    359c:	ldr	x0, [sp, #48]
    35a0:	str	w1, [x0, #8]
    35a4:	str	wzr, [sp, #232]
    35a8:	b	35e8 <_gcry_mpi_tdiv_qr+0x108>
    35ac:	ldr	x0, [sp, #40]
    35b0:	ldr	x1, [x0, #16]
    35b4:	ldrsw	x0, [sp, #232]
    35b8:	lsl	x0, x0, #3
    35bc:	add	x1, x1, x0
    35c0:	ldr	x0, [sp, #48]
    35c4:	ldr	x2, [x0, #16]
    35c8:	ldrsw	x0, [sp, #232]
    35cc:	lsl	x0, x0, #3
    35d0:	add	x0, x2, x0
    35d4:	ldr	x1, [x1]
    35d8:	str	x1, [x0]
    35dc:	ldr	w0, [sp, #232]
    35e0:	add	w0, w0, #0x1
    35e4:	str	w0, [sp, #232]
    35e8:	ldr	w1, [sp, #232]
    35ec:	ldr	w0, [sp, #196]
    35f0:	cmp	w1, w0
    35f4:	b.lt	35ac <_gcry_mpi_tdiv_qr+0xcc>  // b.tstop
    35f8:	ldr	x0, [sp, #56]
    35fc:	cmp	x0, #0x0
    3600:	b.eq	3cf0 <_gcry_mpi_tdiv_qr+0x810>  // b.none
    3604:	ldr	x0, [sp, #56]
    3608:	str	wzr, [x0, #4]
    360c:	ldr	x0, [sp, #56]
    3610:	str	wzr, [x0, #8]
    3614:	b	3cf0 <_gcry_mpi_tdiv_qr+0x810>
    3618:	ldr	x0, [sp, #56]
    361c:	cmp	x0, #0x0
    3620:	b.eq	3634 <_gcry_mpi_tdiv_qr+0x154>  // b.none
    3624:	ldr	w0, [sp, #244]
    3628:	mov	w1, w0
    362c:	ldr	x0, [sp, #56]
    3630:	bl	2f0 <_gcry_mpi_resize>
    3634:	ldr	x0, [sp, #40]
    3638:	ldr	x0, [x0, #16]
    363c:	str	x0, [sp, #264]
    3640:	ldr	x0, [sp, #32]
    3644:	ldr	x0, [x0, #16]
    3648:	str	x0, [sp, #256]
    364c:	ldr	x0, [sp, #48]
    3650:	ldr	x0, [x0, #16]
    3654:	str	x0, [sp, #176]
    3658:	ldr	w0, [sp, #192]
    365c:	cmp	w0, #0x1
    3660:	b.ne	3744 <_gcry_mpi_tdiv_qr+0x264>  // b.any
    3664:	ldr	x0, [sp, #56]
    3668:	cmp	x0, #0x0
    366c:	b.eq	36ec <_gcry_mpi_tdiv_qr+0x20c>  // b.none
    3670:	ldr	x0, [sp, #56]
    3674:	ldr	x0, [x0, #16]
    3678:	str	x0, [sp, #248]
    367c:	ldr	x0, [sp, #256]
    3680:	ldr	x0, [x0]
    3684:	mov	x3, x0
    3688:	ldr	w2, [sp, #196]
    368c:	ldr	x1, [sp, #264]
    3690:	ldr	x0, [sp, #248]
    3694:	bl	9490 <_gcry_mpih_divmod_1>
    3698:	str	x0, [sp, #224]
    369c:	ldrsw	x0, [sp, #244]
    36a0:	lsl	x0, x0, #3
    36a4:	sub	x0, x0, #0x8
    36a8:	ldr	x1, [sp, #248]
    36ac:	add	x0, x1, x0
    36b0:	ldr	x0, [x0]
    36b4:	cmp	x0, #0x0
    36b8:	cset	w0, eq  // eq = none
    36bc:	and	w0, w0, #0xff
    36c0:	mov	w1, w0
    36c4:	ldr	w0, [sp, #244]
    36c8:	sub	w0, w0, w1
    36cc:	str	w0, [sp, #244]
    36d0:	ldr	x0, [sp, #56]
    36d4:	ldr	w1, [sp, #244]
    36d8:	str	w1, [x0, #4]
    36dc:	ldr	x0, [sp, #56]
    36e0:	ldr	w1, [sp, #184]
    36e4:	str	w1, [x0, #8]
    36e8:	b	3708 <_gcry_mpi_tdiv_qr+0x228>
    36ec:	ldr	x0, [sp, #256]
    36f0:	ldr	x0, [x0]
    36f4:	mov	x2, x0
    36f8:	ldr	w1, [sp, #196]
    36fc:	ldr	x0, [sp, #264]
    3700:	bl	7c38 <_gcry_mpih_mod_1>
    3704:	str	x0, [sp, #224]
    3708:	ldr	x0, [sp, #176]
    370c:	ldr	x1, [sp, #224]
    3710:	str	x1, [x0]
    3714:	ldr	x0, [sp, #224]
    3718:	cmp	x0, #0x0
    371c:	cset	w0, ne  // ne = any
    3720:	and	w0, w0, #0xff
    3724:	str	w0, [sp, #240]
    3728:	ldr	x0, [sp, #48]
    372c:	ldr	w1, [sp, #240]
    3730:	str	w1, [x0, #4]
    3734:	ldr	x0, [sp, #48]
    3738:	ldr	w1, [sp, #188]
    373c:	str	w1, [x0, #8]
    3740:	b	3cf4 <_gcry_mpi_tdiv_qr+0x814>
    3744:	ldr	x0, [sp, #56]
    3748:	cmp	x0, #0x0
    374c:	b.eq	3840 <_gcry_mpi_tdiv_qr+0x360>  // b.none
    3750:	ldr	x0, [sp, #56]
    3754:	ldr	x0, [x0, #16]
    3758:	str	x0, [sp, #248]
    375c:	ldr	x1, [sp, #248]
    3760:	ldr	x0, [sp, #264]
    3764:	cmp	x1, x0
    3768:	b.ne	3854 <_gcry_mpi_tdiv_qr+0x374>  // b.any
    376c:	ldr	w2, [sp, #196]
    3770:	ldrsw	x0, [sp, #236]
    3774:	lsl	x0, x0, #2
    3778:	add	x1, sp, #0x40
    377c:	str	w2, [x1, x0]
    3780:	ldr	w2, [sp, #196]
    3784:	ldr	x0, [sp, #56]
    3788:	cmp	x0, #0x0
    378c:	b.eq	37ac <_gcry_mpi_tdiv_qr+0x2cc>  // b.none
    3790:	ldr	x0, [sp, #56]
    3794:	ldr	w0, [x0, #12]
    3798:	and	w0, w0, #0x1
    379c:	cmp	w0, #0x0
    37a0:	b.eq	37ac <_gcry_mpi_tdiv_qr+0x2cc>  // b.none
    37a4:	mov	w0, #0x1                   	// #1
    37a8:	b	37b0 <_gcry_mpi_tdiv_qr+0x2d0>
    37ac:	mov	w0, #0x0                   	// #0
    37b0:	ldr	w19, [sp, #236]
    37b4:	add	w1, w19, #0x1
    37b8:	str	w1, [sp, #236]
    37bc:	mov	w1, w0
    37c0:	mov	w0, w2
    37c4:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    37c8:	mov	x2, x0
    37cc:	sxtw	x0, w19
    37d0:	lsl	x0, x0, #3
    37d4:	add	x1, sp, #0x58
    37d8:	str	x2, [x1, x0]
    37dc:	sxtw	x0, w19
    37e0:	lsl	x0, x0, #3
    37e4:	add	x1, sp, #0x58
    37e8:	ldr	x0, [x1, x0]
    37ec:	str	x0, [sp, #264]
    37f0:	str	wzr, [sp, #220]
    37f4:	b	382c <_gcry_mpi_tdiv_qr+0x34c>
    37f8:	ldrsw	x0, [sp, #220]
    37fc:	lsl	x0, x0, #3
    3800:	ldr	x1, [sp, #248]
    3804:	add	x1, x1, x0
    3808:	ldrsw	x0, [sp, #220]
    380c:	lsl	x0, x0, #3
    3810:	ldr	x2, [sp, #264]
    3814:	add	x0, x2, x0
    3818:	ldr	x1, [x1]
    381c:	str	x1, [x0]
    3820:	ldr	w0, [sp, #220]
    3824:	add	w0, w0, #0x1
    3828:	str	w0, [sp, #220]
    382c:	ldr	w1, [sp, #220]
    3830:	ldr	w0, [sp, #196]
    3834:	cmp	w1, w0
    3838:	b.lt	37f8 <_gcry_mpi_tdiv_qr+0x318>  // b.tstop
    383c:	b	3854 <_gcry_mpi_tdiv_qr+0x374>
    3840:	ldrsw	x0, [sp, #192]
    3844:	lsl	x0, x0, #3
    3848:	ldr	x1, [sp, #176]
    384c:	add	x0, x1, x0
    3850:	str	x0, [sp, #248]
    3854:	ldrsw	x0, [sp, #192]
    3858:	lsl	x0, x0, #3
    385c:	sub	x0, x0, #0x8
    3860:	ldr	x1, [sp, #256]
    3864:	add	x0, x1, x0
    3868:	ldr	x0, [x0]
    386c:	str	x0, [sp, #168]
    3870:	mov	x0, #0x38                  	// #56
    3874:	str	x0, [sp, #208]
    3878:	b	38a4 <_gcry_mpi_tdiv_qr+0x3c4>
    387c:	ldr	x0, [sp, #208]
    3880:	mov	w1, w0
    3884:	ldr	x0, [sp, #168]
    3888:	lsr	x0, x0, x1
    388c:	and	x0, x0, #0xff
    3890:	cmp	x0, #0x0
    3894:	b.ne	38b4 <_gcry_mpi_tdiv_qr+0x3d4>  // b.any
    3898:	ldr	x0, [sp, #208]
    389c:	sub	x0, x0, #0x8
    38a0:	str	x0, [sp, #208]
    38a4:	ldr	x0, [sp, #208]
    38a8:	cmp	x0, #0x0
    38ac:	b.ne	387c <_gcry_mpi_tdiv_qr+0x39c>  // b.any
    38b0:	b	38b8 <_gcry_mpi_tdiv_qr+0x3d8>
    38b4:	nop
    38b8:	ldr	x0, [sp, #208]
    38bc:	mov	w1, w0
    38c0:	ldr	x0, [sp, #168]
    38c4:	lsr	x0, x0, x1
    38c8:	adrp	x1, 0 <grub_memcpy>
    38cc:	add	x1, x1, #0x0
    38d0:	ldr	x1, [x1]
    38d4:	ldrb	w0, [x1, x0]
    38d8:	mov	w1, w0
    38dc:	ldr	x0, [sp, #208]
    38e0:	add	w0, w1, w0
    38e4:	mov	w1, #0x40                  	// #64
    38e8:	sub	w0, w1, w0
    38ec:	str	w0, [sp, #164]
    38f0:	ldr	w0, [sp, #164]
    38f4:	cmp	w0, #0x0
    38f8:	b.eq	39f4 <_gcry_mpi_tdiv_qr+0x514>  // b.none
    38fc:	ldr	w2, [sp, #192]
    3900:	ldrsw	x0, [sp, #236]
    3904:	lsl	x0, x0, #2
    3908:	add	x1, sp, #0x40
    390c:	str	w2, [x1, x0]
    3910:	ldr	w2, [sp, #192]
    3914:	ldr	x0, [sp, #32]
    3918:	cmp	x0, #0x0
    391c:	b.eq	393c <_gcry_mpi_tdiv_qr+0x45c>  // b.none
    3920:	ldr	x0, [sp, #32]
    3924:	ldr	w0, [x0, #12]
    3928:	and	w0, w0, #0x1
    392c:	cmp	w0, #0x0
    3930:	b.eq	393c <_gcry_mpi_tdiv_qr+0x45c>  // b.none
    3934:	mov	w0, #0x1                   	// #1
    3938:	b	3940 <_gcry_mpi_tdiv_qr+0x460>
    393c:	mov	w0, #0x0                   	// #0
    3940:	ldr	w19, [sp, #236]
    3944:	add	w1, w19, #0x1
    3948:	str	w1, [sp, #236]
    394c:	mov	w1, w0
    3950:	mov	w0, w2
    3954:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    3958:	mov	x2, x0
    395c:	sxtw	x0, w19
    3960:	lsl	x0, x0, #3
    3964:	add	x1, sp, #0x58
    3968:	str	x2, [x1, x0]
    396c:	sxtw	x0, w19
    3970:	lsl	x0, x0, #3
    3974:	add	x1, sp, #0x58
    3978:	ldr	x0, [x1, x0]
    397c:	str	x0, [sp, #144]
    3980:	ldr	w3, [sp, #164]
    3984:	ldr	w2, [sp, #192]
    3988:	ldr	x1, [sp, #256]
    398c:	ldr	x0, [sp, #144]
    3990:	bl	5b48 <_gcry_mpih_lshift>
    3994:	ldr	x0, [sp, #144]
    3998:	str	x0, [sp, #256]
    399c:	ldr	w3, [sp, #164]
    39a0:	ldr	w2, [sp, #196]
    39a4:	ldr	x1, [sp, #264]
    39a8:	ldr	x0, [sp, #176]
    39ac:	bl	5b48 <_gcry_mpih_lshift>
    39b0:	str	x0, [sp, #136]
    39b4:	ldr	x0, [sp, #136]
    39b8:	cmp	x0, #0x0
    39bc:	b.eq	39e8 <_gcry_mpi_tdiv_qr+0x508>  // b.none
    39c0:	ldrsw	x0, [sp, #196]
    39c4:	lsl	x0, x0, #3
    39c8:	ldr	x1, [sp, #176]
    39cc:	add	x0, x1, x0
    39d0:	ldr	x1, [sp, #136]
    39d4:	str	x1, [x0]
    39d8:	ldr	w0, [sp, #196]
    39dc:	add	w0, w0, #0x1
    39e0:	str	w0, [sp, #240]
    39e4:	b	3b5c <_gcry_mpi_tdiv_qr+0x67c>
    39e8:	ldr	w0, [sp, #196]
    39ec:	str	w0, [sp, #240]
    39f0:	b	3b5c <_gcry_mpi_tdiv_qr+0x67c>
    39f4:	ldr	x1, [sp, #256]
    39f8:	ldr	x0, [sp, #176]
    39fc:	cmp	x1, x0
    3a00:	b.eq	3a20 <_gcry_mpi_tdiv_qr+0x540>  // b.none
    3a04:	ldr	x0, [sp, #56]
    3a08:	cmp	x0, #0x0
    3a0c:	b.eq	3af8 <_gcry_mpi_tdiv_qr+0x618>  // b.none
    3a10:	ldr	x1, [sp, #256]
    3a14:	ldr	x0, [sp, #248]
    3a18:	cmp	x1, x0
    3a1c:	b.ne	3af8 <_gcry_mpi_tdiv_qr+0x618>  // b.any
    3a20:	ldr	w2, [sp, #192]
    3a24:	ldrsw	x0, [sp, #236]
    3a28:	lsl	x0, x0, #2
    3a2c:	add	x1, sp, #0x40
    3a30:	str	w2, [x1, x0]
    3a34:	ldr	w2, [sp, #192]
    3a38:	ldr	x0, [sp, #32]
    3a3c:	cmp	x0, #0x0
    3a40:	b.eq	3a60 <_gcry_mpi_tdiv_qr+0x580>  // b.none
    3a44:	ldr	x0, [sp, #32]
    3a48:	ldr	w0, [x0, #12]
    3a4c:	and	w0, w0, #0x1
    3a50:	cmp	w0, #0x0
    3a54:	b.eq	3a60 <_gcry_mpi_tdiv_qr+0x580>  // b.none
    3a58:	mov	w0, #0x1                   	// #1
    3a5c:	b	3a64 <_gcry_mpi_tdiv_qr+0x584>
    3a60:	mov	w0, #0x0                   	// #0
    3a64:	ldr	w19, [sp, #236]
    3a68:	add	w1, w19, #0x1
    3a6c:	str	w1, [sp, #236]
    3a70:	mov	w1, w0
    3a74:	mov	w0, w2
    3a78:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    3a7c:	mov	x2, x0
    3a80:	sxtw	x0, w19
    3a84:	lsl	x0, x0, #3
    3a88:	add	x1, sp, #0x58
    3a8c:	str	x2, [x1, x0]
    3a90:	sxtw	x0, w19
    3a94:	lsl	x0, x0, #3
    3a98:	add	x1, sp, #0x58
    3a9c:	ldr	x0, [x1, x0]
    3aa0:	str	x0, [sp, #152]
    3aa4:	str	wzr, [sp, #204]
    3aa8:	b	3ae0 <_gcry_mpi_tdiv_qr+0x600>
    3aac:	ldrsw	x0, [sp, #204]
    3ab0:	lsl	x0, x0, #3
    3ab4:	ldr	x1, [sp, #256]
    3ab8:	add	x1, x1, x0
    3abc:	ldrsw	x0, [sp, #204]
    3ac0:	lsl	x0, x0, #3
    3ac4:	ldr	x2, [sp, #152]
    3ac8:	add	x0, x2, x0
    3acc:	ldr	x1, [x1]
    3ad0:	str	x1, [x0]
    3ad4:	ldr	w0, [sp, #204]
    3ad8:	add	w0, w0, #0x1
    3adc:	str	w0, [sp, #204]
    3ae0:	ldr	w1, [sp, #204]
    3ae4:	ldr	w0, [sp, #192]
    3ae8:	cmp	w1, w0
    3aec:	b.lt	3aac <_gcry_mpi_tdiv_qr+0x5cc>  // b.tstop
    3af0:	ldr	x0, [sp, #152]
    3af4:	str	x0, [sp, #256]
    3af8:	ldr	x1, [sp, #176]
    3afc:	ldr	x0, [sp, #264]
    3b00:	cmp	x1, x0
    3b04:	b.eq	3b54 <_gcry_mpi_tdiv_qr+0x674>  // b.none
    3b08:	str	wzr, [sp, #200]
    3b0c:	b	3b44 <_gcry_mpi_tdiv_qr+0x664>
    3b10:	ldrsw	x0, [sp, #200]
    3b14:	lsl	x0, x0, #3
    3b18:	ldr	x1, [sp, #264]
    3b1c:	add	x1, x1, x0
    3b20:	ldrsw	x0, [sp, #200]
    3b24:	lsl	x0, x0, #3
    3b28:	ldr	x2, [sp, #176]
    3b2c:	add	x0, x2, x0
    3b30:	ldr	x1, [x1]
    3b34:	str	x1, [x0]
    3b38:	ldr	w0, [sp, #200]
    3b3c:	add	w0, w0, #0x1
    3b40:	str	w0, [sp, #200]
    3b44:	ldr	w1, [sp, #200]
    3b48:	ldr	w0, [sp, #196]
    3b4c:	cmp	w1, w0
    3b50:	b.lt	3b10 <_gcry_mpi_tdiv_qr+0x630>  // b.tstop
    3b54:	ldr	w0, [sp, #196]
    3b58:	str	w0, [sp, #240]
    3b5c:	ldr	w5, [sp, #192]
    3b60:	ldr	x4, [sp, #256]
    3b64:	ldr	w3, [sp, #240]
    3b68:	ldr	x2, [sp, #176]
    3b6c:	mov	w1, #0x0                   	// #0
    3b70:	ldr	x0, [sp, #248]
    3b74:	bl	83b0 <_gcry_mpih_divrem>
    3b78:	str	x0, [sp, #128]
    3b7c:	ldr	x0, [sp, #56]
    3b80:	cmp	x0, #0x0
    3b84:	b.eq	3be0 <_gcry_mpi_tdiv_qr+0x700>  // b.none
    3b88:	ldr	w1, [sp, #240]
    3b8c:	ldr	w0, [sp, #192]
    3b90:	sub	w0, w1, w0
    3b94:	str	w0, [sp, #244]
    3b98:	ldr	x0, [sp, #128]
    3b9c:	cmp	x0, #0x0
    3ba0:	b.eq	3bc8 <_gcry_mpi_tdiv_qr+0x6e8>  // b.none
    3ba4:	ldrsw	x0, [sp, #244]
    3ba8:	lsl	x0, x0, #3
    3bac:	ldr	x1, [sp, #248]
    3bb0:	add	x0, x1, x0
    3bb4:	ldr	x1, [sp, #128]
    3bb8:	str	x1, [x0]
    3bbc:	ldr	w0, [sp, #244]
    3bc0:	add	w0, w0, #0x1
    3bc4:	str	w0, [sp, #244]
    3bc8:	ldr	x0, [sp, #56]
    3bcc:	ldr	w1, [sp, #244]
    3bd0:	str	w1, [x0, #4]
    3bd4:	ldr	x0, [sp, #56]
    3bd8:	ldr	w1, [sp, #184]
    3bdc:	str	w1, [x0, #8]
    3be0:	ldr	w0, [sp, #192]
    3be4:	str	w0, [sp, #240]
    3be8:	b	3c18 <_gcry_mpi_tdiv_qr+0x738>
    3bec:	ldrsw	x0, [sp, #240]
    3bf0:	lsl	x0, x0, #3
    3bf4:	sub	x0, x0, #0x8
    3bf8:	ldr	x1, [sp, #176]
    3bfc:	add	x0, x1, x0
    3c00:	ldr	x0, [x0]
    3c04:	cmp	x0, #0x0
    3c08:	b.ne	3c28 <_gcry_mpi_tdiv_qr+0x748>  // b.any
    3c0c:	ldr	w0, [sp, #240]
    3c10:	sub	w0, w0, #0x1
    3c14:	str	w0, [sp, #240]
    3c18:	ldr	w0, [sp, #240]
    3c1c:	cmp	w0, #0x0
    3c20:	b.gt	3bec <_gcry_mpi_tdiv_qr+0x70c>
    3c24:	b	3c2c <_gcry_mpi_tdiv_qr+0x74c>
    3c28:	nop
    3c2c:	ldr	w0, [sp, #164]
    3c30:	cmp	w0, #0x0
    3c34:	b.eq	3c8c <_gcry_mpi_tdiv_qr+0x7ac>  // b.none
    3c38:	ldr	w0, [sp, #240]
    3c3c:	cmp	w0, #0x0
    3c40:	b.eq	3c8c <_gcry_mpi_tdiv_qr+0x7ac>  // b.none
    3c44:	ldr	w3, [sp, #164]
    3c48:	ldr	w2, [sp, #240]
    3c4c:	ldr	x1, [sp, #176]
    3c50:	ldr	x0, [sp, #176]
    3c54:	bl	b848 <_gcry_mpih_rshift>
    3c58:	ldrsw	x0, [sp, #240]
    3c5c:	lsl	x0, x0, #3
    3c60:	sub	x0, x0, #0x8
    3c64:	ldr	x1, [sp, #176]
    3c68:	add	x0, x1, x0
    3c6c:	ldr	x0, [x0]
    3c70:	cmp	x0, #0x0
    3c74:	cset	w0, eq  // eq = none
    3c78:	and	w0, w0, #0xff
    3c7c:	mov	w1, w0
    3c80:	ldr	w0, [sp, #240]
    3c84:	sub	w0, w0, w1
    3c88:	str	w0, [sp, #240]
    3c8c:	ldr	x0, [sp, #48]
    3c90:	ldr	w1, [sp, #240]
    3c94:	str	w1, [x0, #4]
    3c98:	ldr	x0, [sp, #48]
    3c9c:	ldr	w1, [sp, #188]
    3ca0:	str	w1, [x0, #8]
    3ca4:	b	3ce0 <_gcry_mpi_tdiv_qr+0x800>
    3ca8:	ldr	w0, [sp, #236]
    3cac:	sub	w0, w0, #0x1
    3cb0:	str	w0, [sp, #236]
    3cb4:	ldrsw	x0, [sp, #236]
    3cb8:	lsl	x0, x0, #3
    3cbc:	add	x1, sp, #0x58
    3cc0:	ldr	x2, [x1, x0]
    3cc4:	ldrsw	x0, [sp, #236]
    3cc8:	lsl	x0, x0, #2
    3ccc:	add	x1, sp, #0x40
    3cd0:	ldr	w0, [x1, x0]
    3cd4:	mov	w1, w0
    3cd8:	mov	x0, x2
    3cdc:	bl	214 <_gcry_mpi_free_limb_space>
    3ce0:	ldr	w0, [sp, #236]
    3ce4:	cmp	w0, #0x0
    3ce8:	b.ne	3ca8 <_gcry_mpi_tdiv_qr+0x7c8>  // b.any
    3cec:	b	3cf4 <_gcry_mpi_tdiv_qr+0x814>
    3cf0:	nop
    3cf4:	ldr	x19, [sp, #16]
    3cf8:	ldp	x29, x30, [sp], #272
    3cfc:	ret
	...

0000000000003d08 <_gcry_mpi_tdiv_q_2exp>:
    3d08:	stp	x29, x30, [sp, #-80]!
    3d0c:	mov	x29, sp
    3d10:	str	x0, [sp, #40]
    3d14:	str	x1, [sp, #32]
    3d18:	str	w2, [sp, #28]
    3d1c:	ldr	x0, [sp, #32]
    3d20:	ldr	w0, [x0, #4]
    3d24:	str	w0, [sp, #68]
    3d28:	ldr	w0, [sp, #28]
    3d2c:	lsr	w0, w0, #6
    3d30:	str	w0, [sp, #64]
    3d34:	ldr	w1, [sp, #68]
    3d38:	ldr	w0, [sp, #64]
    3d3c:	sub	w0, w1, w0
    3d40:	str	w0, [sp, #76]
    3d44:	ldr	w1, [sp, #64]
    3d48:	ldr	w0, [sp, #68]
    3d4c:	cmp	w1, w0
    3d50:	b.lt	3d60 <_gcry_mpi_tdiv_q_2exp+0x58>  // b.tstop
    3d54:	ldr	x0, [sp, #40]
    3d58:	str	wzr, [x0, #4]
    3d5c:	b	3e68 <_gcry_mpi_tdiv_q_2exp+0x160>
    3d60:	ldr	x0, [sp, #40]
    3d64:	ldr	w0, [x0]
    3d68:	ldr	w1, [sp, #76]
    3d6c:	cmp	w1, w0
    3d70:	b.le	3d84 <_gcry_mpi_tdiv_q_2exp+0x7c>
    3d74:	ldr	w0, [sp, #76]
    3d78:	mov	w1, w0
    3d7c:	ldr	x0, [sp, #40]
    3d80:	bl	2f0 <_gcry_mpi_resize>
    3d84:	ldr	x0, [sp, #40]
    3d88:	ldr	x0, [x0, #16]
    3d8c:	str	x0, [sp, #56]
    3d90:	ldr	x0, [sp, #32]
    3d94:	ldr	x0, [x0, #16]
    3d98:	str	x0, [sp, #48]
    3d9c:	ldr	w0, [sp, #28]
    3da0:	and	w0, w0, #0x3f
    3da4:	str	w0, [sp, #28]
    3da8:	ldr	w0, [sp, #28]
    3dac:	cmp	w0, #0x0
    3db0:	b.eq	3e10 <_gcry_mpi_tdiv_q_2exp+0x108>  // b.none
    3db4:	ldrsw	x0, [sp, #64]
    3db8:	lsl	x0, x0, #3
    3dbc:	ldr	x1, [sp, #48]
    3dc0:	add	x0, x1, x0
    3dc4:	ldr	w3, [sp, #28]
    3dc8:	ldr	w2, [sp, #76]
    3dcc:	mov	x1, x0
    3dd0:	ldr	x0, [sp, #56]
    3dd4:	bl	b848 <_gcry_mpih_rshift>
    3dd8:	ldrsw	x0, [sp, #76]
    3ddc:	lsl	x0, x0, #3
    3de0:	sub	x0, x0, #0x8
    3de4:	ldr	x1, [sp, #56]
    3de8:	add	x0, x1, x0
    3dec:	ldr	x0, [x0]
    3df0:	cmp	x0, #0x0
    3df4:	cset	w0, eq  // eq = none
    3df8:	and	w0, w0, #0xff
    3dfc:	mov	w1, w0
    3e00:	ldr	w0, [sp, #76]
    3e04:	sub	w0, w0, w1
    3e08:	str	w0, [sp, #76]
    3e0c:	b	3e5c <_gcry_mpi_tdiv_q_2exp+0x154>
    3e10:	str	wzr, [sp, #72]
    3e14:	b	3e4c <_gcry_mpi_tdiv_q_2exp+0x144>
    3e18:	ldrsw	x0, [sp, #72]
    3e1c:	lsl	x0, x0, #3
    3e20:	ldr	x1, [sp, #56]
    3e24:	add	x1, x1, x0
    3e28:	ldrsw	x0, [sp, #72]
    3e2c:	lsl	x0, x0, #3
    3e30:	ldr	x2, [sp, #56]
    3e34:	add	x0, x2, x0
    3e38:	ldr	x1, [x1]
    3e3c:	str	x1, [x0]
    3e40:	ldr	w0, [sp, #72]
    3e44:	add	w0, w0, #0x1
    3e48:	str	w0, [sp, #72]
    3e4c:	ldr	w1, [sp, #72]
    3e50:	ldr	w0, [sp, #76]
    3e54:	cmp	w1, w0
    3e58:	b.lt	3e18 <_gcry_mpi_tdiv_q_2exp+0x110>  // b.tstop
    3e5c:	ldr	x0, [sp, #40]
    3e60:	ldr	w1, [sp, #76]
    3e64:	str	w1, [x0, #4]
    3e68:	nop
    3e6c:	ldp	x29, x30, [sp], #80
    3e70:	ret

0000000000003e74 <_gcry_mpi_divisible_ui>:
    3e74:	stp	x29, x30, [sp, #-32]!
    3e78:	mov	x29, sp
    3e7c:	str	x0, [sp, #24]
    3e80:	str	x1, [sp, #16]
    3e84:	ldr	x0, [sp, #24]
    3e88:	ldr	x3, [x0, #16]
    3e8c:	ldr	x0, [sp, #24]
    3e90:	ldr	w0, [x0, #4]
    3e94:	ldr	x2, [sp, #16]
    3e98:	mov	w1, w0
    3e9c:	mov	x0, x3
    3ea0:	bl	7c38 <_gcry_mpih_mod_1>
    3ea4:	cmp	x0, #0x0
    3ea8:	cset	w0, eq  // eq = none
    3eac:	and	w0, w0, #0xff
    3eb0:	ldp	x29, x30, [sp], #32
    3eb4:	ret

0000000000003eb8 <gcry_mpi_div>:
    3eb8:	stp	x29, x30, [sp, #-80]!
    3ebc:	mov	x29, sp
    3ec0:	str	x0, [sp, #56]
    3ec4:	str	x1, [sp, #48]
    3ec8:	str	x2, [sp, #40]
    3ecc:	str	x3, [sp, #32]
    3ed0:	str	w4, [sp, #28]
    3ed4:	ldr	w0, [sp, #28]
    3ed8:	cmp	w0, #0x0
    3edc:	b.ne	3f34 <gcry_mpi_div+0x7c>  // b.any
    3ee0:	ldr	x0, [sp, #48]
    3ee4:	cmp	x0, #0x0
    3ee8:	b.ne	3f1c <gcry_mpi_div+0x64>  // b.any
    3eec:	ldr	x0, [sp, #56]
    3ef0:	ldr	w0, [x0, #4]
    3ef4:	bl	88 <_gcry_mpi_alloc>
    3ef8:	str	x0, [sp, #72]
    3efc:	ldr	x3, [sp, #32]
    3f00:	ldr	x2, [sp, #40]
    3f04:	ldr	x1, [sp, #72]
    3f08:	ldr	x0, [sp, #56]
    3f0c:	bl	34e0 <_gcry_mpi_tdiv_qr>
    3f10:	ldr	x0, [sp, #72]
    3f14:	bl	470 <_gcry_mpi_free>
    3f18:	b	3fa8 <gcry_mpi_div+0xf0>
    3f1c:	ldr	x3, [sp, #32]
    3f20:	ldr	x2, [sp, #40]
    3f24:	ldr	x1, [sp, #48]
    3f28:	ldr	x0, [sp, #56]
    3f2c:	bl	34e0 <_gcry_mpi_tdiv_qr>
    3f30:	b	3fa8 <gcry_mpi_div+0xf0>
    3f34:	ldr	w0, [sp, #28]
    3f38:	cmp	w0, #0x0
    3f3c:	b.ge	3f98 <gcry_mpi_div+0xe0>  // b.tcont
    3f40:	ldr	x0, [sp, #48]
    3f44:	cmp	x0, #0x0
    3f48:	b.ne	3f60 <gcry_mpi_div+0xa8>  // b.any
    3f4c:	ldr	x2, [sp, #32]
    3f50:	ldr	x1, [sp, #40]
    3f54:	ldr	x0, [sp, #56]
    3f58:	bl	338c <_gcry_mpi_fdiv_q>
    3f5c:	b	3fa8 <gcry_mpi_div+0xf0>
    3f60:	ldr	x0, [sp, #56]
    3f64:	cmp	x0, #0x0
    3f68:	b.ne	3f80 <gcry_mpi_div+0xc8>  // b.any
    3f6c:	ldr	x2, [sp, #32]
    3f70:	ldr	x1, [sp, #40]
    3f74:	ldr	x0, [sp, #48]
    3f78:	bl	3218 <_gcry_mpi_fdiv_r>
    3f7c:	b	3fa8 <gcry_mpi_div+0xf0>
    3f80:	ldr	x3, [sp, #32]
    3f84:	ldr	x2, [sp, #40]
    3f88:	ldr	x1, [sp, #48]
    3f8c:	ldr	x0, [sp, #56]
    3f90:	bl	33d8 <_gcry_mpi_fdiv_qr>
    3f94:	b	3fa8 <gcry_mpi_div+0xf0>
    3f98:	adrp	x0, 0 <grub_memcpy>
    3f9c:	add	x0, x0, #0x0
    3fa0:	ldr	x0, [x0]
    3fa4:	bl	c0b8 <_gcry_log_bug>
    3fa8:	ldp	x29, x30, [sp], #80
    3fac:	ret
	...

0000000000003fb8 <gcry_mpi_cmp_ui>:
    3fb8:	stp	x29, x30, [sp, #-48]!
    3fbc:	mov	x29, sp
    3fc0:	str	x0, [sp, #24]
    3fc4:	str	x1, [sp, #16]
    3fc8:	ldr	x0, [sp, #16]
    3fcc:	str	x0, [sp, #40]
    3fd0:	ldr	x0, [sp, #24]
    3fd4:	bl	ec0 <_gcry_mpi_normalize>
    3fd8:	ldr	x0, [sp, #24]
    3fdc:	ldr	w0, [x0, #4]
    3fe0:	cmp	w0, #0x0
    3fe4:	b.ne	4000 <gcry_mpi_cmp_ui+0x48>  // b.any
    3fe8:	ldr	x0, [sp, #40]
    3fec:	cmp	x0, #0x0
    3ff0:	cset	w0, ne  // ne = any
    3ff4:	and	w0, w0, #0xff
    3ff8:	neg	w0, w0
    3ffc:	b	4074 <gcry_mpi_cmp_ui+0xbc>
    4000:	ldr	x0, [sp, #24]
    4004:	ldr	w0, [x0, #8]
    4008:	cmp	w0, #0x0
    400c:	b.eq	4018 <gcry_mpi_cmp_ui+0x60>  // b.none
    4010:	mov	w0, #0xffffffff            	// #-1
    4014:	b	4074 <gcry_mpi_cmp_ui+0xbc>
    4018:	ldr	x0, [sp, #24]
    401c:	ldr	w0, [x0, #4]
    4020:	cmp	w0, #0x1
    4024:	b.ne	4070 <gcry_mpi_cmp_ui+0xb8>  // b.any
    4028:	ldr	x0, [sp, #24]
    402c:	ldr	x0, [x0, #16]
    4030:	ldr	x0, [x0]
    4034:	ldr	x1, [sp, #40]
    4038:	cmp	x1, x0
    403c:	b.cs	4048 <gcry_mpi_cmp_ui+0x90>  // b.hs, b.nlast
    4040:	mov	w0, #0x1                   	// #1
    4044:	b	4074 <gcry_mpi_cmp_ui+0xbc>
    4048:	ldr	x0, [sp, #24]
    404c:	ldr	x0, [x0, #16]
    4050:	ldr	x0, [x0]
    4054:	ldr	x1, [sp, #40]
    4058:	cmp	x1, x0
    405c:	b.ls	4068 <gcry_mpi_cmp_ui+0xb0>  // b.plast
    4060:	mov	w0, #0xffffffff            	// #-1
    4064:	b	4074 <gcry_mpi_cmp_ui+0xbc>
    4068:	mov	w0, #0x0                   	// #0
    406c:	b	4074 <gcry_mpi_cmp_ui+0xbc>
    4070:	mov	w0, #0x1                   	// #1
    4074:	ldp	x29, x30, [sp], #48
    4078:	ret

000000000000407c <gcry_mpi_cmp>:
    407c:	stp	x29, x30, [sp, #-48]!
    4080:	mov	x29, sp
    4084:	str	x0, [sp, #24]
    4088:	str	x1, [sp, #16]
    408c:	ldr	x0, [sp, #24]
    4090:	cmp	x0, #0x0
    4094:	b.eq	40ac <gcry_mpi_cmp+0x30>  // b.none
    4098:	ldr	x0, [sp, #24]
    409c:	ldr	w0, [x0, #12]
    40a0:	and	w0, w0, #0x4
    40a4:	cmp	w0, #0x0
    40a8:	b.ne	40cc <gcry_mpi_cmp+0x50>  // b.any
    40ac:	ldr	x0, [sp, #16]
    40b0:	cmp	x0, #0x0
    40b4:	b.eq	4208 <gcry_mpi_cmp+0x18c>  // b.none
    40b8:	ldr	x0, [sp, #16]
    40bc:	ldr	w0, [x0, #12]
    40c0:	and	w0, w0, #0x4
    40c4:	cmp	w0, #0x0
    40c8:	b.eq	4208 <gcry_mpi_cmp+0x18c>  // b.none
    40cc:	ldr	x0, [sp, #24]
    40d0:	cmp	x0, #0x0
    40d4:	b.eq	4114 <gcry_mpi_cmp+0x98>  // b.none
    40d8:	ldr	x0, [sp, #24]
    40dc:	ldr	w0, [x0, #12]
    40e0:	and	w0, w0, #0x4
    40e4:	cmp	w0, #0x0
    40e8:	b.eq	4114 <gcry_mpi_cmp+0x98>  // b.none
    40ec:	ldr	x0, [sp, #16]
    40f0:	cmp	x0, #0x0
    40f4:	b.eq	410c <gcry_mpi_cmp+0x90>  // b.none
    40f8:	ldr	x0, [sp, #16]
    40fc:	ldr	w0, [x0, #12]
    4100:	and	w0, w0, #0x4
    4104:	cmp	w0, #0x0
    4108:	b.ne	4114 <gcry_mpi_cmp+0x98>  // b.any
    410c:	mov	w0, #0xffffffff            	// #-1
    4110:	b	4380 <gcry_mpi_cmp+0x304>
    4114:	ldr	x0, [sp, #24]
    4118:	cmp	x0, #0x0
    411c:	b.eq	4134 <gcry_mpi_cmp+0xb8>  // b.none
    4120:	ldr	x0, [sp, #24]
    4124:	ldr	w0, [x0, #12]
    4128:	and	w0, w0, #0x4
    412c:	cmp	w0, #0x0
    4130:	b.ne	415c <gcry_mpi_cmp+0xe0>  // b.any
    4134:	ldr	x0, [sp, #16]
    4138:	cmp	x0, #0x0
    413c:	b.eq	415c <gcry_mpi_cmp+0xe0>  // b.none
    4140:	ldr	x0, [sp, #16]
    4144:	ldr	w0, [x0, #12]
    4148:	and	w0, w0, #0x4
    414c:	cmp	w0, #0x0
    4150:	b.eq	415c <gcry_mpi_cmp+0xe0>  // b.none
    4154:	mov	w0, #0x1                   	// #1
    4158:	b	4380 <gcry_mpi_cmp+0x304>
    415c:	ldr	x0, [sp, #24]
    4160:	ldr	w0, [x0, #8]
    4164:	cmp	w0, #0x0
    4168:	b.ne	4184 <gcry_mpi_cmp+0x108>  // b.any
    416c:	ldr	x0, [sp, #16]
    4170:	ldr	w0, [x0, #8]
    4174:	cmp	w0, #0x0
    4178:	b.ne	4184 <gcry_mpi_cmp+0x108>  // b.any
    417c:	mov	w0, #0x0                   	// #0
    4180:	b	4380 <gcry_mpi_cmp+0x304>
    4184:	ldr	x0, [sp, #24]
    4188:	ldr	w1, [x0, #8]
    418c:	ldr	x0, [sp, #16]
    4190:	ldr	w0, [x0, #8]
    4194:	cmp	w1, w0
    4198:	b.ge	41a4 <gcry_mpi_cmp+0x128>  // b.tcont
    419c:	mov	w0, #0xffffffff            	// #-1
    41a0:	b	4380 <gcry_mpi_cmp+0x304>
    41a4:	ldr	x0, [sp, #24]
    41a8:	ldr	w1, [x0, #8]
    41ac:	ldr	x0, [sp, #16]
    41b0:	ldr	w0, [x0, #8]
    41b4:	cmp	w1, w0
    41b8:	b.le	41c4 <gcry_mpi_cmp+0x148>
    41bc:	mov	w0, #0x1                   	// #1
    41c0:	b	4380 <gcry_mpi_cmp+0x304>
    41c4:	ldr	x0, [sp, #24]
    41c8:	ldr	x3, [x0, #16]
    41cc:	ldr	x0, [sp, #16]
    41d0:	ldr	x4, [x0, #16]
    41d4:	ldr	x0, [sp, #24]
    41d8:	ldr	w0, [x0, #8]
    41dc:	add	w0, w0, #0x7
    41e0:	add	w1, w0, #0x7
    41e4:	cmp	w0, #0x0
    41e8:	csel	w0, w1, w0, lt  // lt = tstop
    41ec:	asr	w0, w0, #3
    41f0:	sxtw	x0, w0
    41f4:	mov	x2, x0
    41f8:	mov	x1, x4
    41fc:	mov	x0, x3
    4200:	bl	0 <grub_memcmp>
    4204:	b	4380 <gcry_mpi_cmp+0x304>
    4208:	ldr	x0, [sp, #24]
    420c:	bl	ec0 <_gcry_mpi_normalize>
    4210:	ldr	x0, [sp, #16]
    4214:	bl	ec0 <_gcry_mpi_normalize>
    4218:	ldr	x0, [sp, #24]
    421c:	ldr	w0, [x0, #4]
    4220:	str	w0, [sp, #44]
    4224:	ldr	x0, [sp, #16]
    4228:	ldr	w0, [x0, #4]
    422c:	str	w0, [sp, #40]
    4230:	ldr	x0, [sp, #24]
    4234:	ldr	w0, [x0, #8]
    4238:	cmp	w0, #0x0
    423c:	b.ne	4258 <gcry_mpi_cmp+0x1dc>  // b.any
    4240:	ldr	x0, [sp, #16]
    4244:	ldr	w0, [x0, #8]
    4248:	cmp	w0, #0x0
    424c:	b.eq	4258 <gcry_mpi_cmp+0x1dc>  // b.none
    4250:	mov	w0, #0x1                   	// #1
    4254:	b	4380 <gcry_mpi_cmp+0x304>
    4258:	ldr	x0, [sp, #24]
    425c:	ldr	w0, [x0, #8]
    4260:	cmp	w0, #0x0
    4264:	b.eq	4280 <gcry_mpi_cmp+0x204>  // b.none
    4268:	ldr	x0, [sp, #16]
    426c:	ldr	w0, [x0, #8]
    4270:	cmp	w0, #0x0
    4274:	b.ne	4280 <gcry_mpi_cmp+0x204>  // b.any
    4278:	mov	w0, #0xffffffff            	// #-1
    427c:	b	4380 <gcry_mpi_cmp+0x304>
    4280:	ldr	w1, [sp, #44]
    4284:	ldr	w0, [sp, #40]
    4288:	cmp	w1, w0
    428c:	b.eq	42c0 <gcry_mpi_cmp+0x244>  // b.none
    4290:	ldr	x0, [sp, #24]
    4294:	ldr	w0, [x0, #8]
    4298:	cmp	w0, #0x0
    429c:	b.ne	42c0 <gcry_mpi_cmp+0x244>  // b.any
    42a0:	ldr	x0, [sp, #16]
    42a4:	ldr	w0, [x0, #8]
    42a8:	cmp	w0, #0x0
    42ac:	b.ne	42c0 <gcry_mpi_cmp+0x244>  // b.any
    42b0:	ldr	w1, [sp, #44]
    42b4:	ldr	w0, [sp, #40]
    42b8:	sub	w0, w1, w0
    42bc:	b	4380 <gcry_mpi_cmp+0x304>
    42c0:	ldr	w1, [sp, #44]
    42c4:	ldr	w0, [sp, #40]
    42c8:	cmp	w1, w0
    42cc:	b.eq	4300 <gcry_mpi_cmp+0x284>  // b.none
    42d0:	ldr	x0, [sp, #24]
    42d4:	ldr	w0, [x0, #8]
    42d8:	cmp	w0, #0x0
    42dc:	b.eq	4300 <gcry_mpi_cmp+0x284>  // b.none
    42e0:	ldr	x0, [sp, #16]
    42e4:	ldr	w0, [x0, #8]
    42e8:	cmp	w0, #0x0
    42ec:	b.eq	4300 <gcry_mpi_cmp+0x284>  // b.none
    42f0:	ldr	w1, [sp, #40]
    42f4:	ldr	w0, [sp, #44]
    42f8:	add	w0, w1, w0
    42fc:	b	4380 <gcry_mpi_cmp+0x304>
    4300:	ldr	w0, [sp, #44]
    4304:	cmp	w0, #0x0
    4308:	b.ne	4314 <gcry_mpi_cmp+0x298>  // b.any
    430c:	mov	w0, #0x0                   	// #0
    4310:	b	4380 <gcry_mpi_cmp+0x304>
    4314:	ldr	x0, [sp, #24]
    4318:	ldr	x3, [x0, #16]
    431c:	ldr	x0, [sp, #16]
    4320:	ldr	x0, [x0, #16]
    4324:	ldr	w2, [sp, #44]
    4328:	mov	x1, x0
    432c:	mov	x0, x3
    4330:	bl	bcf0 <_gcry_mpih_cmp>
    4334:	str	w0, [sp, #36]
    4338:	ldr	w0, [sp, #36]
    433c:	cmp	w0, #0x0
    4340:	b.ne	434c <gcry_mpi_cmp+0x2d0>  // b.any
    4344:	mov	w0, #0x0                   	// #0
    4348:	b	4380 <gcry_mpi_cmp+0x304>
    434c:	ldr	w0, [sp, #36]
    4350:	lsr	w0, w0, #31
    4354:	mov	w1, w0
    4358:	ldr	x0, [sp, #24]
    435c:	ldr	w0, [x0, #8]
    4360:	cmp	w0, #0x0
    4364:	cset	w0, ne  // ne = any
    4368:	and	w0, w0, #0xff
    436c:	cmp	w1, w0
    4370:	b.ne	437c <gcry_mpi_cmp+0x300>  // b.any
    4374:	mov	w0, #0x1                   	// #1
    4378:	b	4380 <gcry_mpi_cmp+0x304>
    437c:	mov	w0, #0xffffffff            	// #-1
    4380:	ldp	x29, x30, [sp], #48
    4384:	ret

0000000000004388 <gcry_mpi_invm>:
    4388:	stp	x29, x30, [sp, #-160]!
    438c:	mov	x29, sp
    4390:	str	x0, [sp, #40]
    4394:	str	x1, [sp, #32]
    4398:	str	x2, [sp, #24]
    439c:	str	xzr, [sp, #152]
    43a0:	str	xzr, [sp, #144]
    43a4:	str	xzr, [sp, #128]
    43a8:	ldr	x0, [sp, #32]
    43ac:	bl	768 <_gcry_mpi_copy>
    43b0:	str	x0, [sp, #104]
    43b4:	ldr	x0, [sp, #24]
    43b8:	bl	768 <_gcry_mpi_copy>
    43bc:	str	x0, [sp, #96]
    43c0:	str	wzr, [sp, #116]
    43c4:	b	43f4 <gcry_mpi_invm+0x6c>
    43c8:	mov	w2, #0x1                   	// #1
    43cc:	ldr	x1, [sp, #104]
    43d0:	ldr	x0, [sp, #104]
    43d4:	bl	1534 <gcry_mpi_rshift>
    43d8:	mov	w2, #0x1                   	// #1
    43dc:	ldr	x1, [sp, #96]
    43e0:	ldr	x0, [sp, #96]
    43e4:	bl	1534 <gcry_mpi_rshift>
    43e8:	ldr	w0, [sp, #116]
    43ec:	add	w0, w0, #0x1
    43f0:	str	w0, [sp, #116]
    43f4:	mov	w1, #0x0                   	// #0
    43f8:	ldr	x0, [sp, #104]
    43fc:	bl	10a8 <gcry_mpi_test_bit>
    4400:	cmp	w0, #0x0
    4404:	b.ne	441c <gcry_mpi_invm+0x94>  // b.any
    4408:	mov	w1, #0x0                   	// #0
    440c:	ldr	x0, [sp, #96]
    4410:	bl	10a8 <gcry_mpi_test_bit>
    4414:	cmp	w0, #0x0
    4418:	b.eq	43c8 <gcry_mpi_invm+0x40>  // b.none
    441c:	mov	w1, #0x0                   	// #0
    4420:	ldr	x0, [sp, #96]
    4424:	bl	10a8 <gcry_mpi_test_bit>
    4428:	str	w0, [sp, #92]
    442c:	mov	x0, #0x1                   	// #1
    4430:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    4434:	str	x0, [sp, #80]
    4438:	ldr	w0, [sp, #92]
    443c:	cmp	w0, #0x0
    4440:	b.ne	4450 <gcry_mpi_invm+0xc8>  // b.any
    4444:	mov	x0, #0x0                   	// #0
    4448:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    444c:	str	x0, [sp, #152]
    4450:	ldr	x0, [sp, #104]
    4454:	bl	768 <_gcry_mpi_copy>
    4458:	str	x0, [sp, #72]
    445c:	ldr	x0, [sp, #96]
    4460:	bl	768 <_gcry_mpi_copy>
    4464:	str	x0, [sp, #64]
    4468:	ldr	w0, [sp, #92]
    446c:	cmp	w0, #0x0
    4470:	b.ne	4494 <gcry_mpi_invm+0x10c>  // b.any
    4474:	ldr	x0, [sp, #104]
    4478:	ldr	w0, [x0, #4]
    447c:	bl	88 <_gcry_mpi_alloc>
    4480:	str	x0, [sp, #144]
    4484:	ldr	x2, [sp, #104]
    4488:	ldr	x1, [sp, #80]
    448c:	ldr	x0, [sp, #144]
    4490:	bl	242c <gcry_mpi_sub>
    4494:	ldr	x0, [sp, #96]
    4498:	bl	768 <_gcry_mpi_copy>
    449c:	str	x0, [sp, #56]
    44a0:	mov	w1, #0x0                   	// #0
    44a4:	ldr	x0, [sp, #104]
    44a8:	bl	10a8 <gcry_mpi_test_bit>
    44ac:	cmp	w0, #0x0
    44b0:	b.eq	4514 <gcry_mpi_invm+0x18c>  // b.none
    44b4:	mov	x0, #0x0                   	// #0
    44b8:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    44bc:	str	x0, [sp, #136]
    44c0:	ldr	w0, [sp, #92]
    44c4:	cmp	w0, #0x0
    44c8:	b.ne	44e4 <gcry_mpi_invm+0x15c>  // b.any
    44cc:	mov	x0, #0x1                   	// #1
    44d0:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    44d4:	str	x0, [sp, #128]
    44d8:	ldr	x0, [sp, #128]
    44dc:	mov	w1, #0x1                   	// #1
    44e0:	str	w1, [x0, #8]
    44e4:	ldr	x0, [sp, #96]
    44e8:	bl	768 <_gcry_mpi_copy>
    44ec:	str	x0, [sp, #120]
    44f0:	ldr	x0, [sp, #120]
    44f4:	ldr	w0, [x0, #8]
    44f8:	cmp	w0, #0x0
    44fc:	cset	w0, eq  // eq = none
    4500:	and	w0, w0, #0xff
    4504:	mov	w1, w0
    4508:	ldr	x0, [sp, #120]
    450c:	str	w1, [x0, #8]
    4510:	b	4610 <gcry_mpi_invm+0x288>
    4514:	mov	x0, #0x1                   	// #1
    4518:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    451c:	str	x0, [sp, #136]
    4520:	ldr	w0, [sp, #92]
    4524:	cmp	w0, #0x0
    4528:	b.ne	4538 <gcry_mpi_invm+0x1b0>  // b.any
    452c:	mov	x0, #0x0                   	// #0
    4530:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    4534:	str	x0, [sp, #128]
    4538:	ldr	x0, [sp, #104]
    453c:	bl	768 <_gcry_mpi_copy>
    4540:	str	x0, [sp, #120]
    4544:	ldr	w0, [sp, #92]
    4548:	cmp	w0, #0x0
    454c:	b.ne	45cc <gcry_mpi_invm+0x244>  // b.any
    4550:	mov	w1, #0x0                   	// #0
    4554:	ldr	x0, [sp, #136]
    4558:	bl	10a8 <gcry_mpi_test_bit>
    455c:	cmp	w0, #0x0
    4560:	b.ne	4578 <gcry_mpi_invm+0x1f0>  // b.any
    4564:	mov	w1, #0x0                   	// #0
    4568:	ldr	x0, [sp, #128]
    456c:	bl	10a8 <gcry_mpi_test_bit>
    4570:	cmp	w0, #0x0
    4574:	b.eq	4598 <gcry_mpi_invm+0x210>  // b.none
    4578:	ldr	x2, [sp, #96]
    457c:	ldr	x1, [sp, #136]
    4580:	ldr	x0, [sp, #136]
    4584:	bl	1ebc <gcry_mpi_add>
    4588:	ldr	x2, [sp, #104]
    458c:	ldr	x1, [sp, #128]
    4590:	ldr	x0, [sp, #128]
    4594:	bl	242c <gcry_mpi_sub>
    4598:	mov	w2, #0x1                   	// #1
    459c:	ldr	x1, [sp, #136]
    45a0:	ldr	x0, [sp, #136]
    45a4:	bl	1534 <gcry_mpi_rshift>
    45a8:	mov	w2, #0x1                   	// #1
    45ac:	ldr	x1, [sp, #128]
    45b0:	ldr	x0, [sp, #128]
    45b4:	bl	1534 <gcry_mpi_rshift>
    45b8:	mov	w2, #0x1                   	// #1
    45bc:	ldr	x1, [sp, #120]
    45c0:	ldr	x0, [sp, #120]
    45c4:	bl	1534 <gcry_mpi_rshift>
    45c8:	b	4610 <gcry_mpi_invm+0x288>
    45cc:	mov	w1, #0x0                   	// #0
    45d0:	ldr	x0, [sp, #136]
    45d4:	bl	10a8 <gcry_mpi_test_bit>
    45d8:	cmp	w0, #0x0
    45dc:	b.eq	45f0 <gcry_mpi_invm+0x268>  // b.none
    45e0:	ldr	x2, [sp, #96]
    45e4:	ldr	x1, [sp, #136]
    45e8:	ldr	x0, [sp, #136]
    45ec:	bl	1ebc <gcry_mpi_add>
    45f0:	mov	w2, #0x1                   	// #1
    45f4:	ldr	x1, [sp, #136]
    45f8:	ldr	x0, [sp, #136]
    45fc:	bl	1534 <gcry_mpi_rshift>
    4600:	mov	w2, #0x1                   	// #1
    4604:	ldr	x1, [sp, #120]
    4608:	ldr	x0, [sp, #120]
    460c:	bl	1534 <gcry_mpi_rshift>
    4610:	mov	w1, #0x0                   	// #0
    4614:	ldr	x0, [sp, #120]
    4618:	bl	10a8 <gcry_mpi_test_bit>
    461c:	cmp	w0, #0x0
    4620:	b.eq	4544 <gcry_mpi_invm+0x1bc>  // b.none
    4624:	ldr	x0, [sp, #120]
    4628:	ldr	w0, [x0, #8]
    462c:	cmp	w0, #0x0
    4630:	b.ne	4668 <gcry_mpi_invm+0x2e0>  // b.any
    4634:	ldr	x1, [sp, #136]
    4638:	ldr	x0, [sp, #80]
    463c:	bl	a6c <gcry_mpi_set>
    4640:	ldr	w0, [sp, #92]
    4644:	cmp	w0, #0x0
    4648:	b.ne	4658 <gcry_mpi_invm+0x2d0>  // b.any
    464c:	ldr	x1, [sp, #128]
    4650:	ldr	x0, [sp, #152]
    4654:	bl	a6c <gcry_mpi_set>
    4658:	ldr	x1, [sp, #120]
    465c:	ldr	x0, [sp, #72]
    4660:	bl	a6c <gcry_mpi_set>
    4664:	b	4710 <gcry_mpi_invm+0x388>
    4668:	ldr	x2, [sp, #136]
    466c:	ldr	x1, [sp, #96]
    4670:	ldr	x0, [sp, #64]
    4674:	bl	242c <gcry_mpi_sub>
    4678:	ldr	x0, [sp, #104]
    467c:	ldr	w0, [x0, #8]
    4680:	str	w0, [sp, #52]
    4684:	ldr	x0, [sp, #104]
    4688:	ldr	w0, [x0, #8]
    468c:	cmp	w0, #0x0
    4690:	cset	w0, eq  // eq = none
    4694:	and	w0, w0, #0xff
    4698:	mov	w1, w0
    469c:	ldr	x0, [sp, #104]
    46a0:	str	w1, [x0, #8]
    46a4:	ldr	w0, [sp, #92]
    46a8:	cmp	w0, #0x0
    46ac:	b.ne	46c0 <gcry_mpi_invm+0x338>  // b.any
    46b0:	ldr	x2, [sp, #128]
    46b4:	ldr	x1, [sp, #104]
    46b8:	ldr	x0, [sp, #144]
    46bc:	bl	242c <gcry_mpi_sub>
    46c0:	ldr	x0, [sp, #104]
    46c4:	ldr	w1, [sp, #52]
    46c8:	str	w1, [x0, #8]
    46cc:	ldr	x0, [sp, #120]
    46d0:	ldr	w0, [x0, #8]
    46d4:	str	w0, [sp, #52]
    46d8:	ldr	x0, [sp, #120]
    46dc:	ldr	w0, [x0, #8]
    46e0:	cmp	w0, #0x0
    46e4:	cset	w0, eq  // eq = none
    46e8:	and	w0, w0, #0xff
    46ec:	mov	w1, w0
    46f0:	ldr	x0, [sp, #120]
    46f4:	str	w1, [x0, #8]
    46f8:	ldr	x1, [sp, #120]
    46fc:	ldr	x0, [sp, #56]
    4700:	bl	a6c <gcry_mpi_set>
    4704:	ldr	x0, [sp, #120]
    4708:	ldr	w1, [sp, #52]
    470c:	str	w1, [x0, #8]
    4710:	ldr	x2, [sp, #64]
    4714:	ldr	x1, [sp, #80]
    4718:	ldr	x0, [sp, #136]
    471c:	bl	242c <gcry_mpi_sub>
    4720:	ldr	w0, [sp, #92]
    4724:	cmp	w0, #0x0
    4728:	b.ne	473c <gcry_mpi_invm+0x3b4>  // b.any
    472c:	ldr	x2, [sp, #144]
    4730:	ldr	x1, [sp, #152]
    4734:	ldr	x0, [sp, #128]
    4738:	bl	242c <gcry_mpi_sub>
    473c:	ldr	x2, [sp, #56]
    4740:	ldr	x1, [sp, #72]
    4744:	ldr	x0, [sp, #120]
    4748:	bl	242c <gcry_mpi_sub>
    474c:	ldr	x0, [sp, #136]
    4750:	ldr	w0, [x0, #8]
    4754:	cmp	w0, #0x0
    4758:	b.eq	4788 <gcry_mpi_invm+0x400>  // b.none
    475c:	ldr	x2, [sp, #96]
    4760:	ldr	x1, [sp, #136]
    4764:	ldr	x0, [sp, #136]
    4768:	bl	1ebc <gcry_mpi_add>
    476c:	ldr	w0, [sp, #92]
    4770:	cmp	w0, #0x0
    4774:	b.ne	4788 <gcry_mpi_invm+0x400>  // b.any
    4778:	ldr	x2, [sp, #104]
    477c:	ldr	x1, [sp, #128]
    4780:	ldr	x0, [sp, #128]
    4784:	bl	242c <gcry_mpi_sub>
    4788:	mov	x1, #0x0                   	// #0
    478c:	ldr	x0, [sp, #120]
    4790:	bl	3fb8 <gcry_mpi_cmp_ui>
    4794:	cmp	w0, #0x0
    4798:	b.ne	4544 <gcry_mpi_invm+0x1bc>  // b.any
    479c:	ldr	x1, [sp, #80]
    47a0:	ldr	x0, [sp, #40]
    47a4:	bl	a6c <gcry_mpi_set>
    47a8:	ldr	x0, [sp, #80]
    47ac:	bl	470 <_gcry_mpi_free>
    47b0:	ldr	x0, [sp, #64]
    47b4:	bl	470 <_gcry_mpi_free>
    47b8:	ldr	x0, [sp, #136]
    47bc:	bl	470 <_gcry_mpi_free>
    47c0:	ldr	w0, [sp, #92]
    47c4:	cmp	w0, #0x0
    47c8:	b.ne	47e4 <gcry_mpi_invm+0x45c>  // b.any
    47cc:	ldr	x0, [sp, #152]
    47d0:	bl	470 <_gcry_mpi_free>
    47d4:	ldr	x0, [sp, #144]
    47d8:	bl	470 <_gcry_mpi_free>
    47dc:	ldr	x0, [sp, #128]
    47e0:	bl	470 <_gcry_mpi_free>
    47e4:	ldr	x0, [sp, #72]
    47e8:	bl	470 <_gcry_mpi_free>
    47ec:	ldr	x0, [sp, #56]
    47f0:	bl	470 <_gcry_mpi_free>
    47f4:	ldr	x0, [sp, #120]
    47f8:	bl	470 <_gcry_mpi_free>
    47fc:	ldr	x0, [sp, #104]
    4800:	bl	470 <_gcry_mpi_free>
    4804:	ldr	x0, [sp, #96]
    4808:	bl	470 <_gcry_mpi_free>
    480c:	mov	w0, #0x1                   	// #1
    4810:	ldp	x29, x30, [sp], #160
    4814:	ret

0000000000004818 <gcry_mpi_powm>:
    4818:	stp	x29, x30, [sp, #-368]!
    481c:	mov	x29, sp
    4820:	str	x0, [sp, #40]
    4824:	str	x1, [sp, #32]
    4828:	str	x2, [sp, #24]
    482c:	str	x3, [sp, #16]
    4830:	str	xzr, [sp, #312]
    4834:	str	xzr, [sp, #304]
    4838:	str	xzr, [sp, #296]
    483c:	str	xzr, [sp, #288]
    4840:	str	wzr, [sp, #284]
    4844:	str	wzr, [sp, #280]
    4848:	str	wzr, [sp, #276]
    484c:	str	wzr, [sp, #272]
    4850:	str	xzr, [sp, #264]
    4854:	str	wzr, [sp, #260]
    4858:	ldr	x0, [sp, #24]
    485c:	ldr	w0, [x0, #4]
    4860:	str	w0, [sp, #172]
    4864:	ldr	x0, [sp, #16]
    4868:	ldr	w0, [x0, #4]
    486c:	str	w0, [sp, #168]
    4870:	ldr	w0, [sp, #168]
    4874:	lsl	w0, w0, #1
    4878:	str	w0, [sp, #164]
    487c:	ldr	x0, [sp, #16]
    4880:	ldr	w0, [x0, #8]
    4884:	str	w0, [sp, #160]
    4888:	ldr	x0, [sp, #24]
    488c:	cmp	x0, #0x0
    4890:	b.eq	48b0 <gcry_mpi_powm+0x98>  // b.none
    4894:	ldr	x0, [sp, #24]
    4898:	ldr	w0, [x0, #12]
    489c:	and	w0, w0, #0x1
    48a0:	cmp	w0, #0x0
    48a4:	b.eq	48b0 <gcry_mpi_powm+0x98>  // b.none
    48a8:	mov	w0, #0x1                   	// #1
    48ac:	b	48b4 <gcry_mpi_powm+0x9c>
    48b0:	mov	w0, #0x0                   	// #0
    48b4:	str	w0, [sp, #156]
    48b8:	ldr	x0, [sp, #16]
    48bc:	cmp	x0, #0x0
    48c0:	b.eq	48e0 <gcry_mpi_powm+0xc8>  // b.none
    48c4:	ldr	x0, [sp, #16]
    48c8:	ldr	w0, [x0, #12]
    48cc:	and	w0, w0, #0x1
    48d0:	cmp	w0, #0x0
    48d4:	b.eq	48e0 <gcry_mpi_powm+0xc8>  // b.none
    48d8:	mov	w0, #0x1                   	// #1
    48dc:	b	48e4 <gcry_mpi_powm+0xcc>
    48e0:	mov	w0, #0x0                   	// #0
    48e4:	str	w0, [sp, #152]
    48e8:	ldr	x0, [sp, #32]
    48ec:	cmp	x0, #0x0
    48f0:	b.eq	4910 <gcry_mpi_powm+0xf8>  // b.none
    48f4:	ldr	x0, [sp, #32]
    48f8:	ldr	w0, [x0, #12]
    48fc:	and	w0, w0, #0x1
    4900:	cmp	w0, #0x0
    4904:	b.eq	4910 <gcry_mpi_powm+0xf8>  // b.none
    4908:	mov	w0, #0x1                   	// #1
    490c:	b	4914 <gcry_mpi_powm+0xfc>
    4910:	mov	w0, #0x0                   	// #0
    4914:	str	w0, [sp, #148]
    4918:	ldr	x0, [sp, #40]
    491c:	ldr	x0, [x0, #16]
    4920:	str	x0, [sp, #360]
    4924:	ldr	x0, [sp, #24]
    4928:	ldr	x0, [x0, #16]
    492c:	str	x0, [sp, #352]
    4930:	ldr	w0, [sp, #168]
    4934:	cmp	w0, #0x0
    4938:	b.ne	494c <gcry_mpi_powm+0x134>  // b.any
    493c:	adrp	x0, 0 <grub_memcpy>
    4940:	add	x0, x0, #0x0
    4944:	ldr	x0, [x0]
    4948:	bl	0 <grub_fatal>
    494c:	ldr	w0, [sp, #172]
    4950:	cmp	w0, #0x0
    4954:	b.ne	49dc <gcry_mpi_powm+0x1c4>  // b.any
    4958:	ldr	w0, [sp, #168]
    495c:	cmp	w0, #0x1
    4960:	b.ne	4978 <gcry_mpi_powm+0x160>  // b.any
    4964:	ldr	x0, [sp, #16]
    4968:	ldr	x0, [x0, #16]
    496c:	ldr	x0, [x0]
    4970:	cmp	x0, #0x1
    4974:	b.eq	4980 <gcry_mpi_powm+0x168>  // b.none
    4978:	mov	w0, #0x1                   	// #1
    497c:	b	4984 <gcry_mpi_powm+0x16c>
    4980:	mov	w0, #0x0                   	// #0
    4984:	ldr	x1, [sp, #40]
    4988:	str	w0, [x1, #4]
    498c:	ldr	x0, [sp, #40]
    4990:	ldr	w0, [x0, #4]
    4994:	cmp	w0, #0x0
    4998:	b.eq	49d0 <gcry_mpi_powm+0x1b8>  // b.none
    499c:	ldr	x0, [sp, #40]
    49a0:	ldr	w0, [x0]
    49a4:	cmp	w0, #0x0
    49a8:	b.gt	49b8 <gcry_mpi_powm+0x1a0>
    49ac:	mov	w1, #0x1                   	// #1
    49b0:	ldr	x0, [sp, #40]
    49b4:	bl	2f0 <_gcry_mpi_resize>
    49b8:	ldr	x0, [sp, #40]
    49bc:	ldr	x0, [x0, #16]
    49c0:	str	x0, [sp, #360]
    49c4:	ldr	x0, [sp, #360]
    49c8:	mov	x1, #0x1                   	// #1
    49cc:	str	x1, [x0]
    49d0:	ldr	x0, [sp, #40]
    49d4:	str	wzr, [x0, #8]
    49d8:	b	5564 <gcry_mpi_powm+0xd4c>
    49dc:	ldr	w0, [sp, #152]
    49e0:	cmp	w0, #0x0
    49e4:	b.eq	49f0 <gcry_mpi_powm+0x1d8>  // b.none
    49e8:	ldr	w0, [sp, #168]
    49ec:	b	49f4 <gcry_mpi_powm+0x1dc>
    49f0:	mov	w0, #0x0                   	// #0
    49f4:	str	w0, [sp, #284]
    49f8:	ldr	w0, [sp, #168]
    49fc:	ldr	w1, [sp, #152]
    4a00:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    4a04:	str	x0, [sp, #312]
    4a08:	ldr	x0, [sp, #312]
    4a0c:	str	x0, [sp, #344]
    4a10:	ldr	x0, [sp, #16]
    4a14:	ldr	x1, [x0, #16]
    4a18:	ldrsw	x0, [sp, #168]
    4a1c:	lsl	x0, x0, #3
    4a20:	sub	x0, x0, #0x8
    4a24:	add	x0, x1, x0
    4a28:	ldr	x0, [x0]
    4a2c:	str	x0, [sp, #136]
    4a30:	mov	x0, #0x38                  	// #56
    4a34:	str	x0, [sp, #248]
    4a38:	b	4a64 <gcry_mpi_powm+0x24c>
    4a3c:	ldr	x0, [sp, #248]
    4a40:	mov	w1, w0
    4a44:	ldr	x0, [sp, #136]
    4a48:	lsr	x0, x0, x1
    4a4c:	and	x0, x0, #0xff
    4a50:	cmp	x0, #0x0
    4a54:	b.ne	4a74 <gcry_mpi_powm+0x25c>  // b.any
    4a58:	ldr	x0, [sp, #248]
    4a5c:	sub	x0, x0, #0x8
    4a60:	str	x0, [sp, #248]
    4a64:	ldr	x0, [sp, #248]
    4a68:	cmp	x0, #0x0
    4a6c:	b.ne	4a3c <gcry_mpi_powm+0x224>  // b.any
    4a70:	b	4a78 <gcry_mpi_powm+0x260>
    4a74:	nop
    4a78:	ldr	x0, [sp, #248]
    4a7c:	mov	w1, w0
    4a80:	ldr	x0, [sp, #136]
    4a84:	lsr	x0, x0, x1
    4a88:	adrp	x1, 0 <grub_memcpy>
    4a8c:	add	x1, x1, #0x0
    4a90:	ldr	x1, [x1]
    4a94:	ldrb	w0, [x1, x0]
    4a98:	mov	w1, w0
    4a9c:	ldr	x0, [sp, #248]
    4aa0:	add	w0, w1, w0
    4aa4:	mov	w1, #0x40                  	// #64
    4aa8:	sub	w0, w1, w0
    4aac:	str	w0, [sp, #132]
    4ab0:	ldr	w0, [sp, #132]
    4ab4:	cmp	w0, #0x0
    4ab8:	b.eq	4ae0 <gcry_mpi_powm+0x2c8>  // b.none
    4abc:	ldr	x0, [sp, #16]
    4ac0:	ldr	x0, [x0, #16]
    4ac4:	ldr	w1, [sp, #132]
    4ac8:	mov	w3, w1
    4acc:	ldr	w2, [sp, #168]
    4ad0:	mov	x1, x0
    4ad4:	ldr	x0, [sp, #344]
    4ad8:	bl	5b48 <_gcry_mpih_lshift>
    4adc:	b	4b30 <gcry_mpi_powm+0x318>
    4ae0:	str	wzr, [sp, #244]
    4ae4:	b	4b20 <gcry_mpi_powm+0x308>
    4ae8:	ldr	x0, [sp, #16]
    4aec:	ldr	x1, [x0, #16]
    4af0:	ldrsw	x0, [sp, #244]
    4af4:	lsl	x0, x0, #3
    4af8:	add	x1, x1, x0
    4afc:	ldrsw	x0, [sp, #244]
    4b00:	lsl	x0, x0, #3
    4b04:	ldr	x2, [sp, #344]
    4b08:	add	x0, x2, x0
    4b0c:	ldr	x1, [x1]
    4b10:	str	x1, [x0]
    4b14:	ldr	w0, [sp, #244]
    4b18:	add	w0, w0, #0x1
    4b1c:	str	w0, [sp, #244]
    4b20:	ldr	w1, [sp, #244]
    4b24:	ldr	w0, [sp, #168]
    4b28:	cmp	w1, w0
    4b2c:	b.lt	4ae8 <gcry_mpi_powm+0x2d0>  // b.tstop
    4b30:	ldr	x0, [sp, #32]
    4b34:	ldr	w0, [x0, #4]
    4b38:	str	w0, [sp, #332]
    4b3c:	ldr	x0, [sp, #32]
    4b40:	ldr	w0, [x0, #8]
    4b44:	str	w0, [sp, #128]
    4b48:	ldr	w1, [sp, #332]
    4b4c:	ldr	w0, [sp, #168]
    4b50:	cmp	w1, w0
    4b54:	b.le	4c54 <gcry_mpi_powm+0x43c>
    4b58:	ldr	w0, [sp, #148]
    4b5c:	cmp	w0, #0x0
    4b60:	b.eq	4b70 <gcry_mpi_powm+0x358>  // b.none
    4b64:	ldr	w0, [sp, #332]
    4b68:	add	w0, w0, #0x1
    4b6c:	b	4b74 <gcry_mpi_powm+0x35c>
    4b70:	mov	w0, #0x0                   	// #0
    4b74:	str	w0, [sp, #280]
    4b78:	ldr	w0, [sp, #332]
    4b7c:	add	w0, w0, #0x1
    4b80:	ldr	w1, [sp, #148]
    4b84:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    4b88:	str	x0, [sp, #304]
    4b8c:	ldr	x0, [sp, #304]
    4b90:	str	x0, [sp, #336]
    4b94:	str	wzr, [sp, #240]
    4b98:	b	4bd4 <gcry_mpi_powm+0x3bc>
    4b9c:	ldr	x0, [sp, #32]
    4ba0:	ldr	x1, [x0, #16]
    4ba4:	ldrsw	x0, [sp, #240]
    4ba8:	lsl	x0, x0, #3
    4bac:	add	x1, x1, x0
    4bb0:	ldrsw	x0, [sp, #240]
    4bb4:	lsl	x0, x0, #3
    4bb8:	ldr	x2, [sp, #336]
    4bbc:	add	x0, x2, x0
    4bc0:	ldr	x1, [x1]
    4bc4:	str	x1, [x0]
    4bc8:	ldr	w0, [sp, #240]
    4bcc:	add	w0, w0, #0x1
    4bd0:	str	w0, [sp, #240]
    4bd4:	ldr	w1, [sp, #240]
    4bd8:	ldr	w0, [sp, #332]
    4bdc:	cmp	w1, w0
    4be0:	b.lt	4b9c <gcry_mpi_powm+0x384>  // b.tstop
    4be4:	ldrsw	x0, [sp, #168]
    4be8:	lsl	x0, x0, #3
    4bec:	ldr	x1, [sp, #336]
    4bf0:	add	x0, x1, x0
    4bf4:	ldr	w5, [sp, #168]
    4bf8:	ldr	x4, [sp, #344]
    4bfc:	ldr	w3, [sp, #332]
    4c00:	ldr	x2, [sp, #336]
    4c04:	mov	w1, #0x0                   	// #0
    4c08:	bl	83b0 <_gcry_mpih_divrem>
    4c0c:	ldr	w0, [sp, #168]
    4c10:	str	w0, [sp, #332]
    4c14:	b	4c44 <gcry_mpi_powm+0x42c>
    4c18:	ldrsw	x0, [sp, #332]
    4c1c:	lsl	x0, x0, #3
    4c20:	sub	x0, x0, #0x8
    4c24:	ldr	x1, [sp, #336]
    4c28:	add	x0, x1, x0
    4c2c:	ldr	x0, [x0]
    4c30:	cmp	x0, #0x0
    4c34:	b.ne	4c64 <gcry_mpi_powm+0x44c>  // b.any
    4c38:	ldr	w0, [sp, #332]
    4c3c:	sub	w0, w0, #0x1
    4c40:	str	w0, [sp, #332]
    4c44:	ldr	w0, [sp, #332]
    4c48:	cmp	w0, #0x0
    4c4c:	b.gt	4c18 <gcry_mpi_powm+0x400>
    4c50:	b	4c68 <gcry_mpi_powm+0x450>
    4c54:	ldr	x0, [sp, #32]
    4c58:	ldr	x0, [x0, #16]
    4c5c:	str	x0, [sp, #336]
    4c60:	b	4c68 <gcry_mpi_powm+0x450>
    4c64:	nop
    4c68:	ldr	w0, [sp, #332]
    4c6c:	cmp	w0, #0x0
    4c70:	b.ne	4c88 <gcry_mpi_powm+0x470>  // b.any
    4c74:	ldr	x0, [sp, #40]
    4c78:	str	wzr, [x0, #4]
    4c7c:	ldr	x0, [sp, #40]
    4c80:	str	wzr, [x0, #8]
    4c84:	b	5564 <gcry_mpi_powm+0xd4c>
    4c88:	ldr	x1, [sp, #360]
    4c8c:	ldr	x0, [sp, #336]
    4c90:	cmp	x1, x0
    4c94:	b.ne	4d50 <gcry_mpi_powm+0x538>  // b.any
    4c98:	ldr	x0, [sp, #304]
    4c9c:	cmp	x0, #0x0
    4ca0:	b.eq	4cd0 <gcry_mpi_powm+0x4b8>  // b.none
    4ca4:	adrp	x0, 0 <grub_memcpy>
    4ca8:	add	x0, x0, #0x0
    4cac:	ldr	x3, [x0]
    4cb0:	mov	w2, #0x91                  	// #145
    4cb4:	adrp	x0, 0 <grub_memcpy>
    4cb8:	add	x0, x0, #0x0
    4cbc:	ldr	x1, [x0]
    4cc0:	adrp	x0, 0 <grub_memcpy>
    4cc4:	add	x0, x0, #0x0
    4cc8:	ldr	x0, [x0]
    4ccc:	bl	0 <_gcry_assert_failed>
    4cd0:	ldr	w0, [sp, #148]
    4cd4:	cmp	w0, #0x0
    4cd8:	b.eq	4ce4 <gcry_mpi_powm+0x4cc>  // b.none
    4cdc:	ldr	w0, [sp, #332]
    4ce0:	b	4ce8 <gcry_mpi_powm+0x4d0>
    4ce4:	mov	w0, #0x0                   	// #0
    4ce8:	str	w0, [sp, #280]
    4cec:	ldr	w0, [sp, #332]
    4cf0:	ldr	w1, [sp, #148]
    4cf4:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    4cf8:	str	x0, [sp, #304]
    4cfc:	ldr	x0, [sp, #304]
    4d00:	str	x0, [sp, #336]
    4d04:	str	wzr, [sp, #236]
    4d08:	b	4d40 <gcry_mpi_powm+0x528>
    4d0c:	ldrsw	x0, [sp, #236]
    4d10:	lsl	x0, x0, #3
    4d14:	ldr	x1, [sp, #360]
    4d18:	add	x1, x1, x0
    4d1c:	ldrsw	x0, [sp, #236]
    4d20:	lsl	x0, x0, #3
    4d24:	ldr	x2, [sp, #336]
    4d28:	add	x0, x2, x0
    4d2c:	ldr	x1, [x1]
    4d30:	str	x1, [x0]
    4d34:	ldr	w0, [sp, #236]
    4d38:	add	w0, w0, #0x1
    4d3c:	str	w0, [sp, #236]
    4d40:	ldr	w1, [sp, #236]
    4d44:	ldr	w0, [sp, #332]
    4d48:	cmp	w1, w0
    4d4c:	b.lt	4d0c <gcry_mpi_powm+0x4f4>  // b.tstop
    4d50:	ldr	x1, [sp, #360]
    4d54:	ldr	x0, [sp, #352]
    4d58:	cmp	x1, x0
    4d5c:	b.ne	4de0 <gcry_mpi_powm+0x5c8>  // b.any
    4d60:	ldr	w0, [sp, #156]
    4d64:	cmp	w0, #0x0
    4d68:	b.eq	4d74 <gcry_mpi_powm+0x55c>  // b.none
    4d6c:	ldr	w0, [sp, #172]
    4d70:	b	4d78 <gcry_mpi_powm+0x560>
    4d74:	mov	w0, #0x0                   	// #0
    4d78:	str	w0, [sp, #276]
    4d7c:	ldr	w0, [sp, #172]
    4d80:	ldr	w1, [sp, #156]
    4d84:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    4d88:	str	x0, [sp, #296]
    4d8c:	ldr	x0, [sp, #296]
    4d90:	str	x0, [sp, #352]
    4d94:	str	wzr, [sp, #232]
    4d98:	b	4dd0 <gcry_mpi_powm+0x5b8>
    4d9c:	ldrsw	x0, [sp, #232]
    4da0:	lsl	x0, x0, #3
    4da4:	ldr	x1, [sp, #360]
    4da8:	add	x1, x1, x0
    4dac:	ldrsw	x0, [sp, #232]
    4db0:	lsl	x0, x0, #3
    4db4:	ldr	x2, [sp, #352]
    4db8:	add	x0, x2, x0
    4dbc:	ldr	x1, [x1]
    4dc0:	str	x1, [x0]
    4dc4:	ldr	w0, [sp, #232]
    4dc8:	add	w0, w0, #0x1
    4dcc:	str	w0, [sp, #232]
    4dd0:	ldr	w1, [sp, #232]
    4dd4:	ldr	w0, [sp, #172]
    4dd8:	cmp	w1, w0
    4ddc:	b.lt	4d9c <gcry_mpi_powm+0x584>  // b.tstop
    4de0:	ldr	x1, [sp, #360]
    4de4:	ldr	x0, [sp, #344]
    4de8:	cmp	x1, x0
    4dec:	b.ne	4ea8 <gcry_mpi_powm+0x690>  // b.any
    4df0:	ldr	x0, [sp, #312]
    4df4:	cmp	x0, #0x0
    4df8:	b.eq	4e28 <gcry_mpi_powm+0x610>  // b.none
    4dfc:	adrp	x0, 0 <grub_memcpy>
    4e00:	add	x0, x0, #0x0
    4e04:	ldr	x3, [x0]
    4e08:	mov	w2, #0xa0                  	// #160
    4e0c:	adrp	x0, 0 <grub_memcpy>
    4e10:	add	x0, x0, #0x0
    4e14:	ldr	x1, [x0]
    4e18:	adrp	x0, 0 <grub_memcpy>
    4e1c:	add	x0, x0, #0x0
    4e20:	ldr	x0, [x0]
    4e24:	bl	0 <_gcry_assert_failed>
    4e28:	ldr	w0, [sp, #152]
    4e2c:	cmp	w0, #0x0
    4e30:	b.eq	4e3c <gcry_mpi_powm+0x624>  // b.none
    4e34:	ldr	w0, [sp, #168]
    4e38:	b	4e40 <gcry_mpi_powm+0x628>
    4e3c:	mov	w0, #0x0                   	// #0
    4e40:	str	w0, [sp, #284]
    4e44:	ldr	w0, [sp, #168]
    4e48:	ldr	w1, [sp, #152]
    4e4c:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    4e50:	str	x0, [sp, #312]
    4e54:	ldr	x0, [sp, #312]
    4e58:	str	x0, [sp, #344]
    4e5c:	str	wzr, [sp, #228]
    4e60:	b	4e98 <gcry_mpi_powm+0x680>
    4e64:	ldrsw	x0, [sp, #228]
    4e68:	lsl	x0, x0, #3
    4e6c:	ldr	x1, [sp, #360]
    4e70:	add	x1, x1, x0
    4e74:	ldrsw	x0, [sp, #228]
    4e78:	lsl	x0, x0, #3
    4e7c:	ldr	x2, [sp, #344]
    4e80:	add	x0, x2, x0
    4e84:	ldr	x1, [x1]
    4e88:	str	x1, [x0]
    4e8c:	ldr	w0, [sp, #228]
    4e90:	add	w0, w0, #0x1
    4e94:	str	w0, [sp, #228]
    4e98:	ldr	w1, [sp, #228]
    4e9c:	ldr	w0, [sp, #168]
    4ea0:	cmp	w1, w0
    4ea4:	b.lt	4e64 <gcry_mpi_powm+0x64c>  // b.tstop
    4ea8:	ldr	x0, [sp, #40]
    4eac:	ldr	w0, [x0]
    4eb0:	ldr	w1, [sp, #164]
    4eb4:	cmp	w1, w0
    4eb8:	b.le	4ed8 <gcry_mpi_powm+0x6c0>
    4ebc:	ldr	w0, [sp, #164]
    4ec0:	mov	w1, w0
    4ec4:	ldr	x0, [sp, #40]
    4ec8:	bl	2f0 <_gcry_mpi_resize>
    4ecc:	ldr	x0, [sp, #40]
    4ed0:	ldr	x0, [x0, #16]
    4ed4:	str	x0, [sp, #360]
    4ed8:	str	wzr, [sp, #224]
    4edc:	b	4f14 <gcry_mpi_powm+0x6fc>
    4ee0:	ldrsw	x0, [sp, #224]
    4ee4:	lsl	x0, x0, #3
    4ee8:	ldr	x1, [sp, #336]
    4eec:	add	x1, x1, x0
    4ef0:	ldrsw	x0, [sp, #224]
    4ef4:	lsl	x0, x0, #3
    4ef8:	ldr	x2, [sp, #360]
    4efc:	add	x0, x2, x0
    4f00:	ldr	x1, [x1]
    4f04:	str	x1, [x0]
    4f08:	ldr	w0, [sp, #224]
    4f0c:	add	w0, w0, #0x1
    4f10:	str	w0, [sp, #224]
    4f14:	ldr	w1, [sp, #224]
    4f18:	ldr	w0, [sp, #332]
    4f1c:	cmp	w1, w0
    4f20:	b.lt	4ee0 <gcry_mpi_powm+0x6c8>  // b.tstop
    4f24:	ldr	w0, [sp, #332]
    4f28:	str	w0, [sp, #328]
    4f2c:	ldr	w0, [sp, #128]
    4f30:	str	w0, [sp, #324]
    4f34:	ldr	w0, [sp, #152]
    4f38:	cmp	w0, #0x0
    4f3c:	b.eq	4f50 <gcry_mpi_powm+0x738>  // b.none
    4f40:	ldr	w0, [sp, #168]
    4f44:	add	w0, w0, #0x1
    4f48:	lsl	w0, w0, #1
    4f4c:	b	4f54 <gcry_mpi_powm+0x73c>
    4f50:	mov	w0, #0x0                   	// #0
    4f54:	str	w0, [sp, #272]
    4f58:	ldr	w0, [sp, #168]
    4f5c:	add	w0, w0, #0x1
    4f60:	lsl	w0, w0, #1
    4f64:	ldr	w1, [sp, #152]
    4f68:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    4f6c:	str	x0, [sp, #288]
    4f70:	ldr	x0, [sp, #288]
    4f74:	str	x0, [sp, #208]
    4f78:	add	x0, sp, #0x38
    4f7c:	mov	x2, #0x28                  	// #40
    4f80:	mov	w1, #0x0                   	// #0
    4f84:	bl	0 <grub_memset>
    4f88:	ldr	x0, [sp, #352]
    4f8c:	ldr	x0, [x0]
    4f90:	and	x0, x0, #0x1
    4f94:	cmp	x0, #0x0
    4f98:	b.eq	4fb4 <gcry_mpi_powm+0x79c>  // b.none
    4f9c:	ldr	x0, [sp, #32]
    4fa0:	ldr	w0, [x0, #8]
    4fa4:	cmp	w0, #0x0
    4fa8:	b.eq	4fb4 <gcry_mpi_powm+0x79c>  // b.none
    4fac:	mov	w0, #0x1                   	// #1
    4fb0:	b	4fb8 <gcry_mpi_powm+0x7a0>
    4fb4:	mov	w0, #0x0                   	// #0
    4fb8:	str	w0, [sp, #124]
    4fbc:	ldr	w0, [sp, #172]
    4fc0:	sub	w0, w0, #0x1
    4fc4:	str	w0, [sp, #220]
    4fc8:	ldrsw	x0, [sp, #220]
    4fcc:	lsl	x0, x0, #3
    4fd0:	ldr	x1, [sp, #352]
    4fd4:	add	x0, x1, x0
    4fd8:	ldr	x0, [x0]
    4fdc:	str	x0, [sp, #192]
    4fe0:	ldr	x0, [sp, #192]
    4fe4:	str	x0, [sp, #112]
    4fe8:	mov	x0, #0x38                  	// #56
    4fec:	str	x0, [sp, #184]
    4ff0:	b	501c <gcry_mpi_powm+0x804>
    4ff4:	ldr	x0, [sp, #184]
    4ff8:	mov	w1, w0
    4ffc:	ldr	x0, [sp, #112]
    5000:	lsr	x0, x0, x1
    5004:	and	x0, x0, #0xff
    5008:	cmp	x0, #0x0
    500c:	b.ne	502c <gcry_mpi_powm+0x814>  // b.any
    5010:	ldr	x0, [sp, #184]
    5014:	sub	x0, x0, #0x8
    5018:	str	x0, [sp, #184]
    501c:	ldr	x0, [sp, #184]
    5020:	cmp	x0, #0x0
    5024:	b.ne	4ff4 <gcry_mpi_powm+0x7dc>  // b.any
    5028:	b	5030 <gcry_mpi_powm+0x818>
    502c:	nop
    5030:	ldr	x0, [sp, #184]
    5034:	mov	w1, w0
    5038:	ldr	x0, [sp, #112]
    503c:	lsr	x0, x0, x1
    5040:	adrp	x1, 0 <grub_memcpy>
    5044:	add	x1, x1, #0x0
    5048:	ldr	x1, [x1]
    504c:	ldrb	w0, [x1, x0]
    5050:	mov	w1, w0
    5054:	ldr	x0, [sp, #184]
    5058:	add	w0, w1, w0
    505c:	mov	w1, #0x40                  	// #64
    5060:	sub	w0, w1, w0
    5064:	str	w0, [sp, #204]
    5068:	ldr	w0, [sp, #204]
    506c:	ldr	x1, [sp, #192]
    5070:	lsl	x0, x1, x0
    5074:	lsl	x0, x0, #1
    5078:	str	x0, [sp, #192]
    507c:	mov	w1, #0x3f                  	// #63
    5080:	ldr	w0, [sp, #204]
    5084:	sub	w0, w1, w0
    5088:	str	w0, [sp, #204]
    508c:	b	528c <gcry_mpi_powm+0xa74>
    5090:	ldr	w0, [sp, #328]
    5094:	cmp	w0, #0xf
    5098:	b.gt	50b0 <gcry_mpi_powm+0x898>
    509c:	ldr	w2, [sp, #328]
    50a0:	ldr	x1, [sp, #360]
    50a4:	ldr	x0, [sp, #208]
    50a8:	bl	647c <_gcry_mpih_sqr_n_basecase>
    50ac:	b	512c <gcry_mpi_powm+0x914>
    50b0:	ldr	x0, [sp, #264]
    50b4:	cmp	x0, #0x0
    50b8:	b.ne	50dc <gcry_mpi_powm+0x8c4>  // b.any
    50bc:	ldr	w0, [sp, #328]
    50c0:	lsl	w0, w0, #1
    50c4:	str	w0, [sp, #260]
    50c8:	ldr	w0, [sp, #260]
    50cc:	mov	w1, #0x0                   	// #0
    50d0:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    50d4:	str	x0, [sp, #264]
    50d8:	b	5118 <gcry_mpi_powm+0x900>
    50dc:	ldr	w0, [sp, #328]
    50e0:	lsl	w0, w0, #1
    50e4:	ldr	w1, [sp, #260]
    50e8:	cmp	w1, w0
    50ec:	b.ge	5118 <gcry_mpi_powm+0x900>  // b.tcont
    50f0:	mov	w1, #0x0                   	// #0
    50f4:	ldr	x0, [sp, #264]
    50f8:	bl	214 <_gcry_mpi_free_limb_space>
    50fc:	ldr	w0, [sp, #328]
    5100:	lsl	w0, w0, #1
    5104:	str	w0, [sp, #260]
    5108:	ldr	w0, [sp, #260]
    510c:	mov	w1, #0x0                   	// #0
    5110:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    5114:	str	x0, [sp, #264]
    5118:	ldr	x3, [sp, #264]
    511c:	ldr	w2, [sp, #328]
    5120:	ldr	x1, [sp, #360]
    5124:	ldr	x0, [sp, #208]
    5128:	bl	6644 <_gcry_mpih_sqr_n>
    512c:	ldr	w0, [sp, #328]
    5130:	lsl	w0, w0, #1
    5134:	str	w0, [sp, #180]
    5138:	ldr	w1, [sp, #180]
    513c:	ldr	w0, [sp, #168]
    5140:	cmp	w1, w0
    5144:	b.le	5178 <gcry_mpi_powm+0x960>
    5148:	ldrsw	x0, [sp, #168]
    514c:	lsl	x0, x0, #3
    5150:	ldr	x1, [sp, #208]
    5154:	add	x0, x1, x0
    5158:	ldr	w5, [sp, #168]
    515c:	ldr	x4, [sp, #344]
    5160:	ldr	w3, [sp, #180]
    5164:	ldr	x2, [sp, #208]
    5168:	mov	w1, #0x0                   	// #0
    516c:	bl	83b0 <_gcry_mpih_divrem>
    5170:	ldr	w0, [sp, #168]
    5174:	str	w0, [sp, #180]
    5178:	ldr	x0, [sp, #360]
    517c:	str	x0, [sp, #96]
    5180:	ldr	x0, [sp, #208]
    5184:	str	x0, [sp, #360]
    5188:	ldr	x0, [sp, #96]
    518c:	str	x0, [sp, #208]
    5190:	ldr	w0, [sp, #180]
    5194:	str	w0, [sp, #328]
    5198:	ldr	w0, [sp, #156]
    519c:	cmp	w0, #0x0
    51a0:	b.ne	51b0 <gcry_mpi_powm+0x998>  // b.any
    51a4:	ldr	x0, [sp, #192]
    51a8:	cmp	x0, #0x0
    51ac:	b.ge	5248 <gcry_mpi_powm+0xa30>  // b.tcont
    51b0:	ldr	w0, [sp, #332]
    51b4:	cmp	w0, #0xf
    51b8:	b.gt	51d8 <gcry_mpi_powm+0x9c0>
    51bc:	ldr	w4, [sp, #332]
    51c0:	ldr	x3, [sp, #336]
    51c4:	ldr	w2, [sp, #328]
    51c8:	ldr	x1, [sp, #360]
    51cc:	ldr	x0, [sp, #208]
    51d0:	bl	7194 <_gcry_mpih_mul>
    51d4:	b	51f8 <gcry_mpi_powm+0x9e0>
    51d8:	add	x0, sp, #0x38
    51dc:	mov	x5, x0
    51e0:	ldr	w4, [sp, #332]
    51e4:	ldr	x3, [sp, #336]
    51e8:	ldr	w2, [sp, #328]
    51ec:	ldr	x1, [sp, #360]
    51f0:	ldr	x0, [sp, #208]
    51f4:	bl	6c7c <_gcry_mpih_mul_karatsuba_case>
    51f8:	ldr	w1, [sp, #328]
    51fc:	ldr	w0, [sp, #332]
    5200:	add	w0, w1, w0
    5204:	str	w0, [sp, #180]
    5208:	ldr	w1, [sp, #180]
    520c:	ldr	w0, [sp, #168]
    5210:	cmp	w1, w0
    5214:	b.le	5248 <gcry_mpi_powm+0xa30>
    5218:	ldrsw	x0, [sp, #168]
    521c:	lsl	x0, x0, #3
    5220:	ldr	x1, [sp, #208]
    5224:	add	x0, x1, x0
    5228:	ldr	w5, [sp, #168]
    522c:	ldr	x4, [sp, #344]
    5230:	ldr	w3, [sp, #180]
    5234:	ldr	x2, [sp, #208]
    5238:	mov	w1, #0x0                   	// #0
    523c:	bl	83b0 <_gcry_mpih_divrem>
    5240:	ldr	w0, [sp, #168]
    5244:	str	w0, [sp, #180]
    5248:	ldr	x0, [sp, #192]
    524c:	cmp	x0, #0x0
    5250:	b.ge	5274 <gcry_mpi_powm+0xa5c>  // b.tcont
    5254:	ldr	x0, [sp, #360]
    5258:	str	x0, [sp, #96]
    525c:	ldr	x0, [sp, #208]
    5260:	str	x0, [sp, #360]
    5264:	ldr	x0, [sp, #96]
    5268:	str	x0, [sp, #208]
    526c:	ldr	w0, [sp, #180]
    5270:	str	w0, [sp, #328]
    5274:	ldr	x0, [sp, #192]
    5278:	lsl	x0, x0, #1
    527c:	str	x0, [sp, #192]
    5280:	ldr	w0, [sp, #204]
    5284:	sub	w0, w0, #0x1
    5288:	str	w0, [sp, #204]
    528c:	ldr	w0, [sp, #204]
    5290:	cmp	w0, #0x0
    5294:	b.ne	5090 <gcry_mpi_powm+0x878>  // b.any
    5298:	ldr	w0, [sp, #220]
    529c:	sub	w0, w0, #0x1
    52a0:	str	w0, [sp, #220]
    52a4:	ldr	w0, [sp, #220]
    52a8:	cmp	w0, #0x0
    52ac:	b.lt	52d4 <gcry_mpi_powm+0xabc>  // b.tstop
    52b0:	ldrsw	x0, [sp, #220]
    52b4:	lsl	x0, x0, #3
    52b8:	ldr	x1, [sp, #352]
    52bc:	add	x0, x1, x0
    52c0:	ldr	x0, [x0]
    52c4:	str	x0, [sp, #192]
    52c8:	mov	w0, #0x40                  	// #64
    52cc:	str	w0, [sp, #204]
    52d0:	b	528c <gcry_mpi_powm+0xa74>
    52d4:	nop
    52d8:	ldr	w0, [sp, #132]
    52dc:	cmp	w0, #0x0
    52e0:	b.eq	5344 <gcry_mpi_powm+0xb2c>  // b.none
    52e4:	ldr	x0, [sp, #40]
    52e8:	ldr	x0, [x0, #16]
    52ec:	ldr	w1, [sp, #132]
    52f0:	mov	w3, w1
    52f4:	ldr	w2, [sp, #328]
    52f8:	ldr	x1, [sp, #360]
    52fc:	bl	5b48 <_gcry_mpih_lshift>
    5300:	str	x0, [sp, #104]
    5304:	ldr	x0, [sp, #40]
    5308:	ldr	x0, [x0, #16]
    530c:	str	x0, [sp, #360]
    5310:	ldr	x0, [sp, #104]
    5314:	cmp	x0, #0x0
    5318:	b.eq	53b4 <gcry_mpi_powm+0xb9c>  // b.none
    531c:	ldrsw	x0, [sp, #328]
    5320:	lsl	x0, x0, #3
    5324:	ldr	x1, [sp, #360]
    5328:	add	x0, x1, x0
    532c:	ldr	x1, [sp, #104]
    5330:	str	x1, [x0]
    5334:	ldr	w0, [sp, #328]
    5338:	add	w0, w0, #0x1
    533c:	str	w0, [sp, #328]
    5340:	b	53b4 <gcry_mpi_powm+0xb9c>
    5344:	ldr	x0, [sp, #40]
    5348:	ldr	x0, [x0, #16]
    534c:	ldr	x1, [sp, #360]
    5350:	cmp	x1, x0
    5354:	b.eq	53b4 <gcry_mpi_powm+0xb9c>  // b.none
    5358:	str	wzr, [sp, #176]
    535c:	b	5398 <gcry_mpi_powm+0xb80>
    5360:	ldrsw	x0, [sp, #176]
    5364:	lsl	x0, x0, #3
    5368:	ldr	x1, [sp, #360]
    536c:	add	x1, x1, x0
    5370:	ldr	x0, [sp, #40]
    5374:	ldr	x2, [x0, #16]
    5378:	ldrsw	x0, [sp, #176]
    537c:	lsl	x0, x0, #3
    5380:	add	x0, x2, x0
    5384:	ldr	x1, [x1]
    5388:	str	x1, [x0]
    538c:	ldr	w0, [sp, #176]
    5390:	add	w0, w0, #0x1
    5394:	str	w0, [sp, #176]
    5398:	ldr	w1, [sp, #176]
    539c:	ldr	w0, [sp, #328]
    53a0:	cmp	w1, w0
    53a4:	b.lt	5360 <gcry_mpi_powm+0xb48>  // b.tstop
    53a8:	ldr	x0, [sp, #40]
    53ac:	ldr	x0, [x0, #16]
    53b0:	str	x0, [sp, #360]
    53b4:	ldr	w1, [sp, #328]
    53b8:	ldr	w0, [sp, #168]
    53bc:	cmp	w1, w0
    53c0:	b.lt	53f4 <gcry_mpi_powm+0xbdc>  // b.tstop
    53c4:	ldrsw	x0, [sp, #168]
    53c8:	lsl	x0, x0, #3
    53cc:	ldr	x1, [sp, #360]
    53d0:	add	x0, x1, x0
    53d4:	ldr	w5, [sp, #168]
    53d8:	ldr	x4, [sp, #344]
    53dc:	ldr	w3, [sp, #328]
    53e0:	ldr	x2, [sp, #360]
    53e4:	mov	w1, #0x0                   	// #0
    53e8:	bl	83b0 <_gcry_mpih_divrem>
    53ec:	ldr	w0, [sp, #168]
    53f0:	str	w0, [sp, #328]
    53f4:	ldr	w0, [sp, #132]
    53f8:	cmp	w0, #0x0
    53fc:	b.eq	5448 <gcry_mpi_powm+0xc30>  // b.none
    5400:	ldr	w0, [sp, #132]
    5404:	mov	w3, w0
    5408:	ldr	w2, [sp, #328]
    540c:	ldr	x1, [sp, #360]
    5410:	ldr	x0, [sp, #360]
    5414:	bl	b848 <_gcry_mpih_rshift>
    5418:	b	5448 <gcry_mpi_powm+0xc30>
    541c:	ldrsw	x0, [sp, #328]
    5420:	lsl	x0, x0, #3
    5424:	sub	x0, x0, #0x8
    5428:	ldr	x1, [sp, #360]
    542c:	add	x0, x1, x0
    5430:	ldr	x0, [x0]
    5434:	cmp	x0, #0x0
    5438:	b.ne	5458 <gcry_mpi_powm+0xc40>  // b.any
    543c:	ldr	w0, [sp, #328]
    5440:	sub	w0, w0, #0x1
    5444:	str	w0, [sp, #328]
    5448:	ldr	w0, [sp, #328]
    544c:	cmp	w0, #0x0
    5450:	b.gt	541c <gcry_mpi_powm+0xc04>
    5454:	b	545c <gcry_mpi_powm+0xc44>
    5458:	nop
    545c:	add	x0, sp, #0x38
    5460:	bl	7090 <_gcry_mpih_release_karatsuba_ctx>
    5464:	ldr	w0, [sp, #124]
    5468:	cmp	w0, #0x0
    546c:	b.eq	550c <gcry_mpi_powm+0xcf4>  // b.none
    5470:	ldr	w0, [sp, #328]
    5474:	cmp	w0, #0x0
    5478:	b.eq	550c <gcry_mpi_powm+0xcf4>  // b.none
    547c:	ldr	w0, [sp, #132]
    5480:	cmp	w0, #0x0
    5484:	b.eq	54a0 <gcry_mpi_powm+0xc88>  // b.none
    5488:	ldr	w0, [sp, #132]
    548c:	mov	w3, w0
    5490:	ldr	w2, [sp, #168]
    5494:	ldr	x1, [sp, #344]
    5498:	ldr	x0, [sp, #344]
    549c:	bl	b848 <_gcry_mpih_rshift>
    54a0:	ldr	w4, [sp, #328]
    54a4:	ldr	x3, [sp, #360]
    54a8:	ldr	w2, [sp, #168]
    54ac:	ldr	x1, [sp, #344]
    54b0:	ldr	x0, [sp, #360]
    54b4:	bl	bc4c <_gcry_mpih_sub>
    54b8:	ldr	w0, [sp, #168]
    54bc:	str	w0, [sp, #328]
    54c0:	ldr	w0, [sp, #160]
    54c4:	str	w0, [sp, #324]
    54c8:	b	54f8 <gcry_mpi_powm+0xce0>
    54cc:	ldrsw	x0, [sp, #328]
    54d0:	lsl	x0, x0, #3
    54d4:	sub	x0, x0, #0x8
    54d8:	ldr	x1, [sp, #360]
    54dc:	add	x0, x1, x0
    54e0:	ldr	x0, [x0]
    54e4:	cmp	x0, #0x0
    54e8:	b.ne	5508 <gcry_mpi_powm+0xcf0>  // b.any
    54ec:	ldr	w0, [sp, #328]
    54f0:	sub	w0, w0, #0x1
    54f4:	str	w0, [sp, #328]
    54f8:	ldr	w0, [sp, #328]
    54fc:	cmp	w0, #0x0
    5500:	b.gt	54cc <gcry_mpi_powm+0xcb4>
    5504:	b	550c <gcry_mpi_powm+0xcf4>
    5508:	nop
    550c:	ldr	x0, [sp, #40]
    5510:	ldr	x0, [x0, #16]
    5514:	ldr	x1, [sp, #360]
    5518:	cmp	x1, x0
    551c:	b.eq	554c <gcry_mpi_powm+0xd34>  // b.none
    5520:	adrp	x0, 0 <grub_memcpy>
    5524:	add	x0, x0, #0x0
    5528:	ldr	x3, [x0]
    552c:	mov	w2, #0x145                 	// #325
    5530:	adrp	x0, 0 <grub_memcpy>
    5534:	add	x0, x0, #0x0
    5538:	ldr	x1, [x0]
    553c:	adrp	x0, 0 <grub_memcpy>
    5540:	add	x0, x0, #0x0
    5544:	ldr	x0, [x0]
    5548:	bl	0 <_gcry_assert_failed>
    554c:	ldr	x0, [sp, #40]
    5550:	ldr	w1, [sp, #328]
    5554:	str	w1, [x0, #4]
    5558:	ldr	x0, [sp, #40]
    555c:	ldr	w1, [sp, #324]
    5560:	str	w1, [x0, #8]
    5564:	ldr	x0, [sp, #312]
    5568:	cmp	x0, #0x0
    556c:	b.eq	557c <gcry_mpi_powm+0xd64>  // b.none
    5570:	ldr	w1, [sp, #284]
    5574:	ldr	x0, [sp, #312]
    5578:	bl	214 <_gcry_mpi_free_limb_space>
    557c:	ldr	x0, [sp, #304]
    5580:	cmp	x0, #0x0
    5584:	b.eq	5594 <gcry_mpi_powm+0xd7c>  // b.none
    5588:	ldr	w1, [sp, #280]
    558c:	ldr	x0, [sp, #304]
    5590:	bl	214 <_gcry_mpi_free_limb_space>
    5594:	ldr	x0, [sp, #296]
    5598:	cmp	x0, #0x0
    559c:	b.eq	55ac <gcry_mpi_powm+0xd94>  // b.none
    55a0:	ldr	w1, [sp, #276]
    55a4:	ldr	x0, [sp, #296]
    55a8:	bl	214 <_gcry_mpi_free_limb_space>
    55ac:	ldr	x0, [sp, #288]
    55b0:	cmp	x0, #0x0
    55b4:	b.eq	55c4 <gcry_mpi_powm+0xdac>  // b.none
    55b8:	ldr	w1, [sp, #272]
    55bc:	ldr	x0, [sp, #288]
    55c0:	bl	214 <_gcry_mpi_free_limb_space>
    55c4:	ldr	x0, [sp, #264]
    55c8:	cmp	x0, #0x0
    55cc:	b.eq	55dc <gcry_mpi_powm+0xdc4>  // b.none
    55d0:	mov	w1, #0x0                   	// #0
    55d4:	ldr	x0, [sp, #264]
    55d8:	bl	214 <_gcry_mpi_free_limb_space>
    55dc:	nop
    55e0:	ldp	x29, x30, [sp], #368
    55e4:	ret
	...

0000000000005620 <build_index>:
    5620:	stp	x29, x30, [sp, #-64]!
    5624:	mov	x29, sp
    5628:	str	x0, [sp, #40]
    562c:	str	w1, [sp, #36]
    5630:	str	w2, [sp, #32]
    5634:	str	w3, [sp, #28]
    5638:	str	wzr, [sp, #56]
    563c:	ldr	w1, [sp, #28]
    5640:	ldr	w0, [sp, #32]
    5644:	sub	w0, w1, w0
    5648:	str	w0, [sp, #52]
    564c:	ldr	w0, [sp, #36]
    5650:	sub	w0, w0, #0x1
    5654:	str	w0, [sp, #60]
    5658:	b	56a4 <build_index+0x84>
    565c:	ldr	w0, [sp, #56]
    5660:	lsl	w0, w0, #1
    5664:	str	w0, [sp, #56]
    5668:	ldrsw	x0, [sp, #60]
    566c:	lsl	x0, x0, #3
    5670:	ldr	x1, [sp, #40]
    5674:	add	x0, x1, x0
    5678:	ldr	x0, [x0]
    567c:	ldr	w1, [sp, #52]
    5680:	bl	10a8 <gcry_mpi_test_bit>
    5684:	cmp	w0, #0x0
    5688:	b.eq	5698 <build_index+0x78>  // b.none
    568c:	ldr	w0, [sp, #56]
    5690:	orr	w0, w0, #0x1
    5694:	str	w0, [sp, #56]
    5698:	ldr	w0, [sp, #60]
    569c:	sub	w0, w0, #0x1
    56a0:	str	w0, [sp, #60]
    56a4:	ldr	w0, [sp, #60]
    56a8:	cmp	w0, #0x0
    56ac:	b.ge	565c <build_index+0x3c>  // b.tcont
    56b0:	ldr	w0, [sp, #56]
    56b4:	ldp	x29, x30, [sp], #64
    56b8:	ret

00000000000056bc <_gcry_mpi_mulpowm>:
    56bc:	stp	x29, x30, [sp, #-112]!
    56c0:	mov	x29, sp
    56c4:	str	x19, [sp, #16]
    56c8:	str	x0, [sp, #56]
    56cc:	str	x1, [sp, #48]
    56d0:	str	x2, [sp, #40]
    56d4:	str	x3, [sp, #32]
    56d8:	str	wzr, [sp, #108]
    56dc:	b	56ec <_gcry_mpi_mulpowm+0x30>
    56e0:	ldr	w0, [sp, #108]
    56e4:	add	w0, w0, #0x1
    56e8:	str	w0, [sp, #108]
    56ec:	ldrsw	x0, [sp, #108]
    56f0:	lsl	x0, x0, #3
    56f4:	ldr	x1, [sp, #48]
    56f8:	add	x0, x1, x0
    56fc:	ldr	x0, [x0]
    5700:	cmp	x0, #0x0
    5704:	b.ne	56e0 <_gcry_mpi_mulpowm+0x24>  // b.any
    5708:	ldr	w0, [sp, #108]
    570c:	cmp	w0, #0x0
    5710:	b.ne	5740 <_gcry_mpi_mulpowm+0x84>  // b.any
    5714:	adrp	x0, 0 <grub_memcpy>
    5718:	add	x0, x0, #0x0
    571c:	ldr	x3, [x0]
    5720:	mov	w2, #0x52                  	// #82
    5724:	adrp	x0, 0 <grub_memcpy>
    5728:	add	x0, x0, #0x0
    572c:	ldr	x1, [x0]
    5730:	adrp	x0, 0 <grub_memcpy>
    5734:	add	x0, x0, #0x0
    5738:	ldr	x0, [x0]
    573c:	bl	0 <_gcry_assert_failed>
    5740:	str	wzr, [sp, #104]
    5744:	str	wzr, [sp, #100]
    5748:	b	577c <_gcry_mpi_mulpowm+0xc0>
    574c:	ldr	x0, [sp, #88]
    5750:	bl	f4c <gcry_mpi_get_nbits>
    5754:	str	w0, [sp, #96]
    5758:	ldr	w1, [sp, #96]
    575c:	ldr	w0, [sp, #104]
    5760:	cmp	w1, w0
    5764:	b.le	5770 <_gcry_mpi_mulpowm+0xb4>
    5768:	ldr	w0, [sp, #96]
    576c:	str	w0, [sp, #104]
    5770:	ldr	w0, [sp, #100]
    5774:	add	w0, w0, #0x1
    5778:	str	w0, [sp, #100]
    577c:	ldrsw	x0, [sp, #100]
    5780:	lsl	x0, x0, #3
    5784:	ldr	x1, [sp, #40]
    5788:	add	x0, x1, x0
    578c:	ldr	x0, [x0]
    5790:	str	x0, [sp, #88]
    5794:	ldr	x0, [sp, #88]
    5798:	cmp	x0, #0x0
    579c:	b.ne	574c <_gcry_mpi_mulpowm+0x90>  // b.any
    57a0:	ldr	w1, [sp, #100]
    57a4:	ldr	w0, [sp, #108]
    57a8:	cmp	w1, w0
    57ac:	b.eq	57dc <_gcry_mpi_mulpowm+0x120>  // b.none
    57b0:	adrp	x0, 0 <grub_memcpy>
    57b4:	add	x0, x0, #0x0
    57b8:	ldr	x3, [x0]
    57bc:	mov	w2, #0x5a                  	// #90
    57c0:	adrp	x0, 0 <grub_memcpy>
    57c4:	add	x0, x0, #0x0
    57c8:	ldr	x1, [x0]
    57cc:	adrp	x0, 0 <grub_memcpy>
    57d0:	add	x0, x0, #0x0
    57d4:	ldr	x0, [x0]
    57d8:	bl	0 <_gcry_assert_failed>
    57dc:	ldr	w0, [sp, #104]
    57e0:	cmp	w0, #0x0
    57e4:	b.ne	5814 <_gcry_mpi_mulpowm+0x158>  // b.any
    57e8:	adrp	x0, 0 <grub_memcpy>
    57ec:	add	x0, x0, #0x0
    57f0:	ldr	x3, [x0]
    57f4:	mov	w2, #0x5b                  	// #91
    57f8:	adrp	x0, 0 <grub_memcpy>
    57fc:	add	x0, x0, #0x0
    5800:	ldr	x1, [x0]
    5804:	adrp	x0, 0 <grub_memcpy>
    5808:	add	x0, x0, #0x0
    580c:	ldr	x0, [x0]
    5810:	bl	0 <_gcry_assert_failed>
    5814:	ldr	w0, [sp, #108]
    5818:	cmp	w0, #0x9
    581c:	b.le	584c <_gcry_mpi_mulpowm+0x190>
    5820:	adrp	x0, 0 <grub_memcpy>
    5824:	add	x0, x0, #0x0
    5828:	ldr	x3, [x0]
    582c:	mov	w2, #0x5c                  	// #92
    5830:	adrp	x0, 0 <grub_memcpy>
    5834:	add	x0, x0, #0x0
    5838:	ldr	x1, [x0]
    583c:	adrp	x0, 0 <grub_memcpy>
    5840:	add	x0, x0, #0x0
    5844:	ldr	x0, [x0]
    5848:	bl	0 <_gcry_assert_failed>
    584c:	ldr	w0, [sp, #108]
    5850:	mov	w1, #0x1                   	// #1
    5854:	lsl	w0, w1, w0
    5858:	sxtw	x0, w0
    585c:	mov	x1, #0x8                   	// #8
    5860:	bl	be04 <gcry_xcalloc>
    5864:	str	x0, [sp, #80]
    5868:	ldr	x0, [sp, #32]
    586c:	ldr	w0, [x0, #4]
    5870:	add	w0, w0, #0x1
    5874:	bl	88 <_gcry_mpi_alloc>
    5878:	str	x0, [sp, #88]
    587c:	mov	x1, #0x1                   	// #1
    5880:	ldr	x0, [sp, #56]
    5884:	bl	b6c <gcry_mpi_set_ui>
    5888:	mov	w0, #0x1                   	// #1
    588c:	str	w0, [sp, #100]
    5890:	b	5a98 <_gcry_mpi_mulpowm+0x3dc>
    5894:	ldr	x3, [sp, #32]
    5898:	ldr	x2, [sp, #56]
    589c:	ldr	x1, [sp, #56]
    58a0:	ldr	x0, [sp, #88]
    58a4:	bl	2d14 <gcry_mpi_mulm>
    58a8:	ldr	w3, [sp, #104]
    58ac:	ldr	w2, [sp, #100]
    58b0:	ldr	w1, [sp, #108]
    58b4:	ldr	x0, [sp, #40]
    58b8:	bl	5620 <build_index>
    58bc:	str	w0, [sp, #76]
    58c0:	ldr	w0, [sp, #76]
    58c4:	cmp	w0, #0x0
    58c8:	b.lt	58e4 <_gcry_mpi_mulpowm+0x228>  // b.tstop
    58cc:	ldr	w0, [sp, #108]
    58d0:	mov	w1, #0x1                   	// #1
    58d4:	lsl	w0, w1, w0
    58d8:	ldr	w1, [sp, #76]
    58dc:	cmp	w1, w0
    58e0:	b.lt	5910 <_gcry_mpi_mulpowm+0x254>  // b.tstop
    58e4:	adrp	x0, 0 <grub_memcpy>
    58e8:	add	x0, x0, #0x0
    58ec:	ldr	x3, [x0]
    58f0:	mov	w2, #0x69                  	// #105
    58f4:	adrp	x0, 0 <grub_memcpy>
    58f8:	add	x0, x0, #0x0
    58fc:	ldr	x1, [x0]
    5900:	adrp	x0, 0 <grub_memcpy>
    5904:	add	x0, x0, #0x0
    5908:	ldr	x0, [x0]
    590c:	bl	0 <_gcry_assert_failed>
    5910:	ldrsw	x0, [sp, #76]
    5914:	lsl	x0, x0, #3
    5918:	ldr	x1, [sp, #80]
    591c:	add	x0, x1, x0
    5920:	ldr	x0, [x0]
    5924:	cmp	x0, #0x0
    5928:	b.ne	5a64 <_gcry_mpi_mulpowm+0x3a8>  // b.any
    592c:	ldr	w0, [sp, #76]
    5930:	cmp	w0, #0x0
    5934:	b.ne	5950 <_gcry_mpi_mulpowm+0x294>  // b.any
    5938:	mov	x0, #0x1                   	// #1
    593c:	bl	ca8 <_gcry_mpi_alloc_set_ui>
    5940:	mov	x1, x0
    5944:	ldr	x0, [sp, #80]
    5948:	str	x1, [x0]
    594c:	b	5a64 <_gcry_mpi_mulpowm+0x3a8>
    5950:	str	wzr, [sp, #96]
    5954:	b	5a1c <_gcry_mpi_mulpowm+0x360>
    5958:	ldr	w0, [sp, #96]
    595c:	ldr	w1, [sp, #76]
    5960:	asr	w0, w1, w0
    5964:	and	w0, w0, #0x1
    5968:	cmp	w0, #0x0
    596c:	b.eq	5a10 <_gcry_mpi_mulpowm+0x354>  // b.none
    5970:	ldrsw	x0, [sp, #76]
    5974:	lsl	x0, x0, #3
    5978:	ldr	x1, [sp, #80]
    597c:	add	x0, x1, x0
    5980:	ldr	x0, [x0]
    5984:	cmp	x0, #0x0
    5988:	b.ne	59c0 <_gcry_mpi_mulpowm+0x304>  // b.any
    598c:	ldrsw	x0, [sp, #96]
    5990:	lsl	x0, x0, #3
    5994:	ldr	x1, [sp, #48]
    5998:	add	x0, x1, x0
    599c:	ldr	x2, [x0]
    59a0:	ldrsw	x0, [sp, #76]
    59a4:	lsl	x0, x0, #3
    59a8:	ldr	x1, [sp, #80]
    59ac:	add	x19, x1, x0
    59b0:	mov	x0, x2
    59b4:	bl	768 <_gcry_mpi_copy>
    59b8:	str	x0, [x19]
    59bc:	b	5a10 <_gcry_mpi_mulpowm+0x354>
    59c0:	ldrsw	x0, [sp, #76]
    59c4:	lsl	x0, x0, #3
    59c8:	ldr	x1, [sp, #80]
    59cc:	add	x0, x1, x0
    59d0:	ldr	x4, [x0]
    59d4:	ldrsw	x0, [sp, #76]
    59d8:	lsl	x0, x0, #3
    59dc:	ldr	x1, [sp, #80]
    59e0:	add	x0, x1, x0
    59e4:	ldr	x5, [x0]
    59e8:	ldrsw	x0, [sp, #96]
    59ec:	lsl	x0, x0, #3
    59f0:	ldr	x1, [sp, #48]
    59f4:	add	x0, x1, x0
    59f8:	ldr	x0, [x0]
    59fc:	ldr	x3, [sp, #32]
    5a00:	mov	x2, x0
    5a04:	mov	x1, x5
    5a08:	mov	x0, x4
    5a0c:	bl	2d14 <gcry_mpi_mulm>
    5a10:	ldr	w0, [sp, #96]
    5a14:	add	w0, w0, #0x1
    5a18:	str	w0, [sp, #96]
    5a1c:	ldr	w1, [sp, #96]
    5a20:	ldr	w0, [sp, #108]
    5a24:	cmp	w1, w0
    5a28:	b.lt	5958 <_gcry_mpi_mulpowm+0x29c>  // b.tstop
    5a2c:	ldrsw	x0, [sp, #76]
    5a30:	lsl	x0, x0, #3
    5a34:	ldr	x1, [sp, #80]
    5a38:	add	x0, x1, x0
    5a3c:	ldr	x0, [x0]
    5a40:	cmp	x0, #0x0
    5a44:	b.ne	5a64 <_gcry_mpi_mulpowm+0x3a8>  // b.any
    5a48:	ldrsw	x0, [sp, #76]
    5a4c:	lsl	x0, x0, #3
    5a50:	ldr	x1, [sp, #80]
    5a54:	add	x19, x1, x0
    5a58:	mov	w0, #0x0                   	// #0
    5a5c:	bl	88 <_gcry_mpi_alloc>
    5a60:	str	x0, [x19]
    5a64:	ldrsw	x0, [sp, #76]
    5a68:	lsl	x0, x0, #3
    5a6c:	ldr	x1, [sp, #80]
    5a70:	add	x0, x1, x0
    5a74:	ldr	x0, [x0]
    5a78:	ldr	x3, [sp, #32]
    5a7c:	mov	x2, x0
    5a80:	ldr	x1, [sp, #88]
    5a84:	ldr	x0, [sp, #56]
    5a88:	bl	2d14 <gcry_mpi_mulm>
    5a8c:	ldr	w0, [sp, #100]
    5a90:	add	w0, w0, #0x1
    5a94:	str	w0, [sp, #100]
    5a98:	ldr	w1, [sp, #100]
    5a9c:	ldr	w0, [sp, #104]
    5aa0:	cmp	w1, w0
    5aa4:	b.le	5894 <_gcry_mpi_mulpowm+0x1d8>
    5aa8:	ldr	x0, [sp, #88]
    5aac:	bl	470 <_gcry_mpi_free>
    5ab0:	str	wzr, [sp, #100]
    5ab4:	b	5adc <_gcry_mpi_mulpowm+0x420>
    5ab8:	ldrsw	x0, [sp, #100]
    5abc:	lsl	x0, x0, #3
    5ac0:	ldr	x1, [sp, #80]
    5ac4:	add	x0, x1, x0
    5ac8:	ldr	x0, [x0]
    5acc:	bl	470 <_gcry_mpi_free>
    5ad0:	ldr	w0, [sp, #100]
    5ad4:	add	w0, w0, #0x1
    5ad8:	str	w0, [sp, #100]
    5adc:	ldr	w0, [sp, #108]
    5ae0:	mov	w1, #0x1                   	// #1
    5ae4:	lsl	w0, w1, w0
    5ae8:	ldr	w1, [sp, #100]
    5aec:	cmp	w1, w0
    5af0:	b.lt	5ab8 <_gcry_mpi_mulpowm+0x3fc>  // b.tstop
    5af4:	ldr	x0, [sp, #80]
    5af8:	bl	bdd0 <gcry_free>
    5afc:	nop
    5b00:	ldr	x19, [sp, #16]
    5b04:	ldp	x29, x30, [sp], #112
    5b08:	ret
    5b0c:	nop
	...

0000000000005b48 <_gcry_mpih_lshift>:
    5b48:	sub	sp, sp, #0x50
    5b4c:	str	x0, [sp, #24]
    5b50:	str	x1, [sp, #16]
    5b54:	str	w2, [sp, #12]
    5b58:	str	w3, [sp, #8]
    5b5c:	ldr	w0, [sp, #8]
    5b60:	str	w0, [sp, #64]
    5b64:	ldr	x0, [sp, #24]
    5b68:	add	x0, x0, #0x8
    5b6c:	str	x0, [sp, #24]
    5b70:	mov	w1, #0x40                  	// #64
    5b74:	ldr	w0, [sp, #64]
    5b78:	sub	w0, w1, w0
    5b7c:	str	w0, [sp, #60]
    5b80:	ldr	w0, [sp, #12]
    5b84:	sub	w0, w0, #0x1
    5b88:	str	w0, [sp, #68]
    5b8c:	ldrsw	x0, [sp, #68]
    5b90:	lsl	x0, x0, #3
    5b94:	ldr	x1, [sp, #16]
    5b98:	add	x0, x1, x0
    5b9c:	ldr	x0, [x0]
    5ba0:	str	x0, [sp, #48]
    5ba4:	ldr	w0, [sp, #60]
    5ba8:	ldr	x1, [sp, #48]
    5bac:	lsr	x0, x1, x0
    5bb0:	str	x0, [sp, #40]
    5bb4:	ldr	x0, [sp, #48]
    5bb8:	str	x0, [sp, #72]
    5bbc:	b	5c10 <_gcry_mpih_lshift+0xc8>
    5bc0:	ldrsw	x0, [sp, #68]
    5bc4:	lsl	x0, x0, #3
    5bc8:	ldr	x1, [sp, #16]
    5bcc:	add	x0, x1, x0
    5bd0:	ldr	x0, [x0]
    5bd4:	str	x0, [sp, #48]
    5bd8:	ldr	w0, [sp, #64]
    5bdc:	ldr	x1, [sp, #72]
    5be0:	lsl	x2, x1, x0
    5be4:	ldr	w0, [sp, #60]
    5be8:	ldr	x1, [sp, #48]
    5bec:	lsr	x1, x1, x0
    5bf0:	ldrsw	x0, [sp, #68]
    5bf4:	lsl	x0, x0, #3
    5bf8:	ldr	x3, [sp, #24]
    5bfc:	add	x0, x3, x0
    5c00:	orr	x1, x2, x1
    5c04:	str	x1, [x0]
    5c08:	ldr	x0, [sp, #48]
    5c0c:	str	x0, [sp, #72]
    5c10:	ldr	w0, [sp, #68]
    5c14:	sub	w0, w0, #0x1
    5c18:	str	w0, [sp, #68]
    5c1c:	ldr	w0, [sp, #68]
    5c20:	cmp	w0, #0x0
    5c24:	b.ge	5bc0 <_gcry_mpih_lshift+0x78>  // b.tcont
    5c28:	ldrsw	x0, [sp, #68]
    5c2c:	lsl	x0, x0, #3
    5c30:	ldr	x1, [sp, #24]
    5c34:	add	x0, x1, x0
    5c38:	ldr	w1, [sp, #64]
    5c3c:	ldr	x2, [sp, #72]
    5c40:	lsl	x1, x2, x1
    5c44:	str	x1, [x0]
    5c48:	ldr	x0, [sp, #40]
    5c4c:	add	sp, sp, #0x50
    5c50:	ret

0000000000005c54 <mul_n_basecase>:
    5c54:	stp	x29, x30, [sp, #-80]!
    5c58:	mov	x29, sp
    5c5c:	str	x0, [sp, #40]
    5c60:	str	x1, [sp, #32]
    5c64:	str	x2, [sp, #24]
    5c68:	str	w3, [sp, #20]
    5c6c:	ldr	x0, [sp, #24]
    5c70:	ldr	x0, [x0]
    5c74:	str	x0, [sp, #48]
    5c78:	ldr	x0, [sp, #48]
    5c7c:	cmp	x0, #0x1
    5c80:	b.hi	5d20 <mul_n_basecase+0xcc>  // b.pmore
    5c84:	ldr	x0, [sp, #48]
    5c88:	cmp	x0, #0x1
    5c8c:	b.ne	5ce0 <mul_n_basecase+0x8c>  // b.any
    5c90:	str	wzr, [sp, #60]
    5c94:	b	5ccc <mul_n_basecase+0x78>
    5c98:	ldrsw	x0, [sp, #60]
    5c9c:	lsl	x0, x0, #3
    5ca0:	ldr	x1, [sp, #32]
    5ca4:	add	x1, x1, x0
    5ca8:	ldrsw	x0, [sp, #60]
    5cac:	lsl	x0, x0, #3
    5cb0:	ldr	x2, [sp, #40]
    5cb4:	add	x0, x2, x0
    5cb8:	ldr	x1, [x1]
    5cbc:	str	x1, [x0]
    5cc0:	ldr	w0, [sp, #60]
    5cc4:	add	w0, w0, #0x1
    5cc8:	str	w0, [sp, #60]
    5ccc:	ldr	w1, [sp, #60]
    5cd0:	ldr	w0, [sp, #20]
    5cd4:	cmp	w1, w0
    5cd8:	b.lt	5c98 <mul_n_basecase+0x44>  // b.tstop
    5cdc:	b	5d18 <mul_n_basecase+0xc4>
    5ce0:	str	wzr, [sp, #56]
    5ce4:	b	5d08 <mul_n_basecase+0xb4>
    5ce8:	ldrsw	x0, [sp, #56]
    5cec:	lsl	x0, x0, #3
    5cf0:	ldr	x1, [sp, #40]
    5cf4:	add	x0, x1, x0
    5cf8:	str	xzr, [x0]
    5cfc:	ldr	w0, [sp, #56]
    5d00:	add	w0, w0, #0x1
    5d04:	str	w0, [sp, #56]
    5d08:	ldr	w1, [sp, #56]
    5d0c:	ldr	w0, [sp, #20]
    5d10:	cmp	w1, w0
    5d14:	b.lt	5ce8 <mul_n_basecase+0x94>  // b.tstop
    5d18:	str	xzr, [sp, #64]
    5d1c:	b	5d38 <mul_n_basecase+0xe4>
    5d20:	ldr	x3, [sp, #48]
    5d24:	ldr	w2, [sp, #20]
    5d28:	ldr	x1, [sp, #32]
    5d2c:	ldr	x0, [sp, #40]
    5d30:	bl	73e4 <_gcry_mpih_mul_1>
    5d34:	str	x0, [sp, #64]
    5d38:	ldrsw	x0, [sp, #20]
    5d3c:	lsl	x0, x0, #3
    5d40:	ldr	x1, [sp, #40]
    5d44:	add	x0, x1, x0
    5d48:	ldr	x1, [sp, #64]
    5d4c:	str	x1, [x0]
    5d50:	ldr	x0, [sp, #40]
    5d54:	add	x0, x0, #0x8
    5d58:	str	x0, [sp, #40]
    5d5c:	mov	w0, #0x1                   	// #1
    5d60:	str	w0, [sp, #76]
    5d64:	b	5e00 <mul_n_basecase+0x1ac>
    5d68:	ldrsw	x0, [sp, #76]
    5d6c:	lsl	x0, x0, #3
    5d70:	ldr	x1, [sp, #24]
    5d74:	add	x0, x1, x0
    5d78:	ldr	x0, [x0]
    5d7c:	str	x0, [sp, #48]
    5d80:	ldr	x0, [sp, #48]
    5d84:	cmp	x0, #0x1
    5d88:	b.hi	5db8 <mul_n_basecase+0x164>  // b.pmore
    5d8c:	str	xzr, [sp, #64]
    5d90:	ldr	x0, [sp, #48]
    5d94:	cmp	x0, #0x1
    5d98:	b.ne	5dd0 <mul_n_basecase+0x17c>  // b.any
    5d9c:	ldr	w3, [sp, #20]
    5da0:	ldr	x2, [sp, #32]
    5da4:	ldr	x1, [sp, #40]
    5da8:	ldr	x0, [sp, #40]
    5dac:	bl	79c4 <_gcry_mpih_add_n>
    5db0:	str	x0, [sp, #64]
    5db4:	b	5dd0 <mul_n_basecase+0x17c>
    5db8:	ldr	x3, [sp, #48]
    5dbc:	ldr	w2, [sp, #20]
    5dc0:	ldr	x1, [sp, #32]
    5dc4:	ldr	x0, [sp, #40]
    5dc8:	bl	75a4 <_gcry_mpih_addmul_1>
    5dcc:	str	x0, [sp, #64]
    5dd0:	ldrsw	x0, [sp, #20]
    5dd4:	lsl	x0, x0, #3
    5dd8:	ldr	x1, [sp, #40]
    5ddc:	add	x0, x1, x0
    5de0:	ldr	x1, [sp, #64]
    5de4:	str	x1, [x0]
    5de8:	ldr	x0, [sp, #40]
    5dec:	add	x0, x0, #0x8
    5df0:	str	x0, [sp, #40]
    5df4:	ldr	w0, [sp, #76]
    5df8:	add	w0, w0, #0x1
    5dfc:	str	w0, [sp, #76]
    5e00:	ldr	w1, [sp, #76]
    5e04:	ldr	w0, [sp, #20]
    5e08:	cmp	w1, w0
    5e0c:	b.lt	5d68 <mul_n_basecase+0x114>  // b.tstop
    5e10:	ldr	x0, [sp, #64]
    5e14:	ldp	x29, x30, [sp], #80
    5e18:	ret

0000000000005e1c <mul_n>:
    5e1c:	stp	x29, x30, [sp, #-112]!
    5e20:	mov	x29, sp
    5e24:	str	x0, [sp, #56]
    5e28:	str	x1, [sp, #48]
    5e2c:	str	x2, [sp, #40]
    5e30:	str	w3, [sp, #36]
    5e34:	str	x4, [sp, #24]
    5e38:	ldr	w0, [sp, #36]
    5e3c:	and	w0, w0, #0x1
    5e40:	cmp	w0, #0x0
    5e44:	b.eq	5f50 <mul_n+0x134>  // b.none
    5e48:	ldr	w0, [sp, #36]
    5e4c:	sub	w0, w0, #0x1
    5e50:	str	w0, [sp, #84]
    5e54:	ldr	w0, [sp, #84]
    5e58:	cmp	w0, #0xf
    5e5c:	b.gt	5e78 <mul_n+0x5c>
    5e60:	ldr	w3, [sp, #84]
    5e64:	ldr	x2, [sp, #40]
    5e68:	ldr	x1, [sp, #48]
    5e6c:	ldr	x0, [sp, #56]
    5e70:	bl	5c54 <mul_n_basecase>
    5e74:	b	5e90 <mul_n+0x74>
    5e78:	ldr	x4, [sp, #24]
    5e7c:	ldr	w3, [sp, #84]
    5e80:	ldr	x2, [sp, #40]
    5e84:	ldr	x1, [sp, #48]
    5e88:	ldr	x0, [sp, #56]
    5e8c:	bl	5e1c <mul_n>
    5e90:	ldrsw	x0, [sp, #84]
    5e94:	lsl	x0, x0, #3
    5e98:	ldr	x1, [sp, #56]
    5e9c:	add	x4, x1, x0
    5ea0:	ldrsw	x0, [sp, #84]
    5ea4:	lsl	x0, x0, #3
    5ea8:	ldr	x1, [sp, #40]
    5eac:	add	x0, x1, x0
    5eb0:	ldr	x0, [x0]
    5eb4:	mov	x3, x0
    5eb8:	ldr	w2, [sp, #84]
    5ebc:	ldr	x1, [sp, #48]
    5ec0:	mov	x0, x4
    5ec4:	bl	75a4 <_gcry_mpih_addmul_1>
    5ec8:	str	x0, [sp, #72]
    5ecc:	ldr	w0, [sp, #84]
    5ed0:	lsl	w0, w0, #1
    5ed4:	sxtw	x0, w0
    5ed8:	lsl	x0, x0, #3
    5edc:	ldr	x1, [sp, #56]
    5ee0:	add	x0, x1, x0
    5ee4:	ldr	x1, [sp, #72]
    5ee8:	str	x1, [x0]
    5eec:	ldrsw	x0, [sp, #84]
    5ef0:	lsl	x0, x0, #3
    5ef4:	ldr	x1, [sp, #56]
    5ef8:	add	x4, x1, x0
    5efc:	ldrsw	x0, [sp, #84]
    5f00:	lsl	x0, x0, #3
    5f04:	ldr	x1, [sp, #48]
    5f08:	add	x0, x1, x0
    5f0c:	ldr	x0, [x0]
    5f10:	mov	x3, x0
    5f14:	ldr	w2, [sp, #36]
    5f18:	ldr	x1, [sp, #40]
    5f1c:	mov	x0, x4
    5f20:	bl	75a4 <_gcry_mpih_addmul_1>
    5f24:	str	x0, [sp, #72]
    5f28:	ldr	w1, [sp, #84]
    5f2c:	ldr	w0, [sp, #36]
    5f30:	add	w0, w1, w0
    5f34:	sxtw	x0, w0
    5f38:	lsl	x0, x0, #3
    5f3c:	ldr	x1, [sp, #56]
    5f40:	add	x0, x1, x0
    5f44:	ldr	x1, [sp, #72]
    5f48:	str	x1, [x0]
    5f4c:	b	6470 <mul_n+0x654>
    5f50:	ldr	w0, [sp, #36]
    5f54:	asr	w0, w0, #1
    5f58:	str	w0, [sp, #88]
    5f5c:	ldr	w0, [sp, #88]
    5f60:	cmp	w0, #0xf
    5f64:	b.gt	5fb0 <mul_n+0x194>
    5f68:	ldrsw	x0, [sp, #36]
    5f6c:	lsl	x0, x0, #3
    5f70:	ldr	x1, [sp, #56]
    5f74:	add	x4, x1, x0
    5f78:	ldrsw	x0, [sp, #88]
    5f7c:	lsl	x0, x0, #3
    5f80:	ldr	x1, [sp, #48]
    5f84:	add	x5, x1, x0
    5f88:	ldrsw	x0, [sp, #88]
    5f8c:	lsl	x0, x0, #3
    5f90:	ldr	x1, [sp, #40]
    5f94:	add	x0, x1, x0
    5f98:	ldr	w3, [sp, #88]
    5f9c:	mov	x2, x0
    5fa0:	mov	x1, x5
    5fa4:	mov	x0, x4
    5fa8:	bl	5c54 <mul_n_basecase>
    5fac:	b	5ff8 <mul_n+0x1dc>
    5fb0:	ldrsw	x0, [sp, #36]
    5fb4:	lsl	x0, x0, #3
    5fb8:	ldr	x1, [sp, #56]
    5fbc:	add	x5, x1, x0
    5fc0:	ldrsw	x0, [sp, #88]
    5fc4:	lsl	x0, x0, #3
    5fc8:	ldr	x1, [sp, #48]
    5fcc:	add	x6, x1, x0
    5fd0:	ldrsw	x0, [sp, #88]
    5fd4:	lsl	x0, x0, #3
    5fd8:	ldr	x1, [sp, #40]
    5fdc:	add	x0, x1, x0
    5fe0:	ldr	x4, [sp, #24]
    5fe4:	ldr	w3, [sp, #88]
    5fe8:	mov	x2, x0
    5fec:	mov	x1, x6
    5ff0:	mov	x0, x5
    5ff4:	bl	5e1c <mul_n>
    5ff8:	ldrsw	x0, [sp, #88]
    5ffc:	lsl	x0, x0, #3
    6000:	ldr	x1, [sp, #48]
    6004:	add	x0, x1, x0
    6008:	ldr	w2, [sp, #88]
    600c:	ldr	x1, [sp, #48]
    6010:	bl	bcf0 <_gcry_mpih_cmp>
    6014:	cmp	w0, #0x0
    6018:	b.lt	6048 <mul_n+0x22c>  // b.tstop
    601c:	ldrsw	x0, [sp, #88]
    6020:	lsl	x0, x0, #3
    6024:	ldr	x1, [sp, #48]
    6028:	add	x0, x1, x0
    602c:	ldr	w3, [sp, #88]
    6030:	ldr	x2, [sp, #48]
    6034:	mov	x1, x0
    6038:	ldr	x0, [sp, #56]
    603c:	bl	7afc <_gcry_mpih_sub_n>
    6040:	str	wzr, [sp, #100]
    6044:	b	6074 <mul_n+0x258>
    6048:	ldrsw	x0, [sp, #88]
    604c:	lsl	x0, x0, #3
    6050:	ldr	x1, [sp, #48]
    6054:	add	x0, x1, x0
    6058:	ldr	w3, [sp, #88]
    605c:	mov	x2, x0
    6060:	ldr	x1, [sp, #48]
    6064:	ldr	x0, [sp, #56]
    6068:	bl	7afc <_gcry_mpih_sub_n>
    606c:	mov	w0, #0x1                   	// #1
    6070:	str	w0, [sp, #100]
    6074:	ldrsw	x0, [sp, #88]
    6078:	lsl	x0, x0, #3
    607c:	ldr	x1, [sp, #40]
    6080:	add	x0, x1, x0
    6084:	ldr	w2, [sp, #88]
    6088:	ldr	x1, [sp, #40]
    608c:	bl	bcf0 <_gcry_mpih_cmp>
    6090:	cmp	w0, #0x0
    6094:	b.lt	60dc <mul_n+0x2c0>  // b.tstop
    6098:	ldrsw	x0, [sp, #88]
    609c:	lsl	x0, x0, #3
    60a0:	ldr	x1, [sp, #56]
    60a4:	add	x4, x1, x0
    60a8:	ldrsw	x0, [sp, #88]
    60ac:	lsl	x0, x0, #3
    60b0:	ldr	x1, [sp, #40]
    60b4:	add	x0, x1, x0
    60b8:	ldr	w3, [sp, #88]
    60bc:	ldr	x2, [sp, #40]
    60c0:	mov	x1, x0
    60c4:	mov	x0, x4
    60c8:	bl	7afc <_gcry_mpih_sub_n>
    60cc:	ldr	w0, [sp, #100]
    60d0:	eor	w0, w0, #0x1
    60d4:	str	w0, [sp, #100]
    60d8:	b	6110 <mul_n+0x2f4>
    60dc:	ldrsw	x0, [sp, #88]
    60e0:	lsl	x0, x0, #3
    60e4:	ldr	x1, [sp, #56]
    60e8:	add	x4, x1, x0
    60ec:	ldrsw	x0, [sp, #88]
    60f0:	lsl	x0, x0, #3
    60f4:	ldr	x1, [sp, #40]
    60f8:	add	x0, x1, x0
    60fc:	ldr	w3, [sp, #88]
    6100:	mov	x2, x0
    6104:	ldr	x1, [sp, #40]
    6108:	mov	x0, x4
    610c:	bl	7afc <_gcry_mpih_sub_n>
    6110:	ldr	w0, [sp, #88]
    6114:	cmp	w0, #0xf
    6118:	b.gt	6144 <mul_n+0x328>
    611c:	ldrsw	x0, [sp, #88]
    6120:	lsl	x0, x0, #3
    6124:	ldr	x1, [sp, #56]
    6128:	add	x0, x1, x0
    612c:	ldr	w3, [sp, #88]
    6130:	mov	x2, x0
    6134:	ldr	x1, [sp, #56]
    6138:	ldr	x0, [sp, #24]
    613c:	bl	5c54 <mul_n_basecase>
    6140:	b	6178 <mul_n+0x35c>
    6144:	ldrsw	x0, [sp, #88]
    6148:	lsl	x0, x0, #3
    614c:	ldr	x1, [sp, #56]
    6150:	add	x2, x1, x0
    6154:	ldrsw	x0, [sp, #36]
    6158:	lsl	x0, x0, #3
    615c:	ldr	x1, [sp, #24]
    6160:	add	x0, x1, x0
    6164:	mov	x4, x0
    6168:	ldr	w3, [sp, #88]
    616c:	ldr	x1, [sp, #56]
    6170:	ldr	x0, [sp, #24]
    6174:	bl	5e1c <mul_n>
    6178:	str	wzr, [sp, #96]
    617c:	b	61c4 <mul_n+0x3a8>
    6180:	ldrsw	x1, [sp, #36]
    6184:	ldrsw	x0, [sp, #96]
    6188:	add	x0, x1, x0
    618c:	lsl	x0, x0, #3
    6190:	ldr	x1, [sp, #56]
    6194:	add	x1, x1, x0
    6198:	ldrsw	x2, [sp, #88]
    619c:	ldrsw	x0, [sp, #96]
    61a0:	add	x0, x2, x0
    61a4:	lsl	x0, x0, #3
    61a8:	ldr	x2, [sp, #56]
    61ac:	add	x0, x2, x0
    61b0:	ldr	x1, [x1]
    61b4:	str	x1, [x0]
    61b8:	ldr	w0, [sp, #96]
    61bc:	add	w0, w0, #0x1
    61c0:	str	w0, [sp, #96]
    61c4:	ldr	w1, [sp, #96]
    61c8:	ldr	w0, [sp, #88]
    61cc:	cmp	w1, w0
    61d0:	b.lt	6180 <mul_n+0x364>  // b.tstop
    61d4:	ldrsw	x0, [sp, #36]
    61d8:	lsl	x0, x0, #3
    61dc:	ldr	x1, [sp, #56]
    61e0:	add	x4, x1, x0
    61e4:	ldrsw	x0, [sp, #36]
    61e8:	lsl	x0, x0, #3
    61ec:	ldr	x1, [sp, #56]
    61f0:	add	x5, x1, x0
    61f4:	ldrsw	x1, [sp, #36]
    61f8:	ldrsw	x0, [sp, #88]
    61fc:	add	x0, x1, x0
    6200:	lsl	x0, x0, #3
    6204:	ldr	x1, [sp, #56]
    6208:	add	x0, x1, x0
    620c:	ldr	w3, [sp, #88]
    6210:	mov	x2, x0
    6214:	mov	x1, x5
    6218:	mov	x0, x4
    621c:	bl	79c4 <_gcry_mpih_add_n>
    6220:	str	x0, [sp, #104]
    6224:	ldr	w0, [sp, #100]
    6228:	cmp	w0, #0x0
    622c:	b.eq	6278 <mul_n+0x45c>  // b.none
    6230:	ldrsw	x0, [sp, #88]
    6234:	lsl	x0, x0, #3
    6238:	ldr	x1, [sp, #56]
    623c:	add	x4, x1, x0
    6240:	ldrsw	x0, [sp, #88]
    6244:	lsl	x0, x0, #3
    6248:	ldr	x1, [sp, #56]
    624c:	add	x0, x1, x0
    6250:	ldr	w3, [sp, #36]
    6254:	ldr	x2, [sp, #24]
    6258:	mov	x1, x0
    625c:	mov	x0, x4
    6260:	bl	7afc <_gcry_mpih_sub_n>
    6264:	mov	x1, x0
    6268:	ldr	x0, [sp, #104]
    626c:	sub	x0, x0, x1
    6270:	str	x0, [sp, #104]
    6274:	b	62bc <mul_n+0x4a0>
    6278:	ldrsw	x0, [sp, #88]
    627c:	lsl	x0, x0, #3
    6280:	ldr	x1, [sp, #56]
    6284:	add	x4, x1, x0
    6288:	ldrsw	x0, [sp, #88]
    628c:	lsl	x0, x0, #3
    6290:	ldr	x1, [sp, #56]
    6294:	add	x0, x1, x0
    6298:	ldr	w3, [sp, #36]
    629c:	ldr	x2, [sp, #24]
    62a0:	mov	x1, x0
    62a4:	mov	x0, x4
    62a8:	bl	79c4 <_gcry_mpih_add_n>
    62ac:	mov	x1, x0
    62b0:	ldr	x0, [sp, #104]
    62b4:	add	x0, x0, x1
    62b8:	str	x0, [sp, #104]
    62bc:	ldr	w0, [sp, #88]
    62c0:	cmp	w0, #0xf
    62c4:	b.gt	62e0 <mul_n+0x4c4>
    62c8:	ldr	w3, [sp, #88]
    62cc:	ldr	x2, [sp, #40]
    62d0:	ldr	x1, [sp, #48]
    62d4:	ldr	x0, [sp, #24]
    62d8:	bl	5c54 <mul_n_basecase>
    62dc:	b	6308 <mul_n+0x4ec>
    62e0:	ldrsw	x0, [sp, #36]
    62e4:	lsl	x0, x0, #3
    62e8:	ldr	x1, [sp, #24]
    62ec:	add	x0, x1, x0
    62f0:	mov	x4, x0
    62f4:	ldr	w3, [sp, #88]
    62f8:	ldr	x2, [sp, #40]
    62fc:	ldr	x1, [sp, #48]
    6300:	ldr	x0, [sp, #24]
    6304:	bl	5e1c <mul_n>
    6308:	ldrsw	x0, [sp, #88]
    630c:	lsl	x0, x0, #3
    6310:	ldr	x1, [sp, #56]
    6314:	add	x4, x1, x0
    6318:	ldrsw	x0, [sp, #88]
    631c:	lsl	x0, x0, #3
    6320:	ldr	x1, [sp, #56]
    6324:	add	x0, x1, x0
    6328:	ldr	w3, [sp, #36]
    632c:	ldr	x2, [sp, #24]
    6330:	mov	x1, x0
    6334:	mov	x0, x4
    6338:	bl	79c4 <_gcry_mpih_add_n>
    633c:	mov	x1, x0
    6340:	ldr	x0, [sp, #104]
    6344:	add	x0, x0, x1
    6348:	str	x0, [sp, #104]
    634c:	ldr	x0, [sp, #104]
    6350:	cmp	x0, #0x0
    6354:	b.eq	639c <mul_n+0x580>  // b.none
    6358:	ldrsw	x1, [sp, #88]
    635c:	ldrsw	x0, [sp, #36]
    6360:	add	x0, x1, x0
    6364:	lsl	x0, x0, #3
    6368:	ldr	x1, [sp, #56]
    636c:	add	x4, x1, x0
    6370:	ldrsw	x1, [sp, #88]
    6374:	ldrsw	x0, [sp, #36]
    6378:	add	x0, x1, x0
    637c:	lsl	x0, x0, #3
    6380:	ldr	x1, [sp, #56]
    6384:	add	x0, x1, x0
    6388:	ldr	x3, [sp, #104]
    638c:	ldr	w2, [sp, #88]
    6390:	mov	x1, x0
    6394:	mov	x0, x4
    6398:	bl	b948 <_gcry_mpih_add_1>
    639c:	str	wzr, [sp, #92]
    63a0:	b	63d8 <mul_n+0x5bc>
    63a4:	ldrsw	x0, [sp, #92]
    63a8:	lsl	x0, x0, #3
    63ac:	ldr	x1, [sp, #24]
    63b0:	add	x1, x1, x0
    63b4:	ldrsw	x0, [sp, #92]
    63b8:	lsl	x0, x0, #3
    63bc:	ldr	x2, [sp, #56]
    63c0:	add	x0, x2, x0
    63c4:	ldr	x1, [x1]
    63c8:	str	x1, [x0]
    63cc:	ldr	w0, [sp, #92]
    63d0:	add	w0, w0, #0x1
    63d4:	str	w0, [sp, #92]
    63d8:	ldr	w1, [sp, #92]
    63dc:	ldr	w0, [sp, #88]
    63e0:	cmp	w1, w0
    63e4:	b.lt	63a4 <mul_n+0x588>  // b.tstop
    63e8:	ldrsw	x0, [sp, #88]
    63ec:	lsl	x0, x0, #3
    63f0:	ldr	x1, [sp, #56]
    63f4:	add	x4, x1, x0
    63f8:	ldrsw	x0, [sp, #88]
    63fc:	lsl	x0, x0, #3
    6400:	ldr	x1, [sp, #56]
    6404:	add	x5, x1, x0
    6408:	ldrsw	x0, [sp, #88]
    640c:	lsl	x0, x0, #3
    6410:	ldr	x1, [sp, #24]
    6414:	add	x0, x1, x0
    6418:	ldr	w3, [sp, #88]
    641c:	mov	x2, x0
    6420:	mov	x1, x5
    6424:	mov	x0, x4
    6428:	bl	79c4 <_gcry_mpih_add_n>
    642c:	str	x0, [sp, #104]
    6430:	ldr	x0, [sp, #104]
    6434:	cmp	x0, #0x0
    6438:	b.eq	6470 <mul_n+0x654>  // b.none
    643c:	ldrsw	x0, [sp, #36]
    6440:	lsl	x0, x0, #3
    6444:	ldr	x1, [sp, #56]
    6448:	add	x4, x1, x0
    644c:	ldrsw	x0, [sp, #36]
    6450:	lsl	x0, x0, #3
    6454:	ldr	x1, [sp, #56]
    6458:	add	x0, x1, x0
    645c:	mov	x3, #0x1                   	// #1
    6460:	ldr	w2, [sp, #36]
    6464:	mov	x1, x0
    6468:	mov	x0, x4
    646c:	bl	b948 <_gcry_mpih_add_1>
    6470:	nop
    6474:	ldp	x29, x30, [sp], #112
    6478:	ret

000000000000647c <_gcry_mpih_sqr_n_basecase>:
    647c:	stp	x29, x30, [sp, #-80]!
    6480:	mov	x29, sp
    6484:	str	x0, [sp, #40]
    6488:	str	x1, [sp, #32]
    648c:	str	w2, [sp, #28]
    6490:	ldr	x0, [sp, #32]
    6494:	ldr	x0, [x0]
    6498:	str	x0, [sp, #48]
    649c:	ldr	x0, [sp, #48]
    64a0:	cmp	x0, #0x1
    64a4:	b.hi	6544 <_gcry_mpih_sqr_n_basecase+0xc8>  // b.pmore
    64a8:	ldr	x0, [sp, #48]
    64ac:	cmp	x0, #0x1
    64b0:	b.ne	6504 <_gcry_mpih_sqr_n_basecase+0x88>  // b.any
    64b4:	str	wzr, [sp, #60]
    64b8:	b	64f0 <_gcry_mpih_sqr_n_basecase+0x74>
    64bc:	ldrsw	x0, [sp, #60]
    64c0:	lsl	x0, x0, #3
    64c4:	ldr	x1, [sp, #32]
    64c8:	add	x1, x1, x0
    64cc:	ldrsw	x0, [sp, #60]
    64d0:	lsl	x0, x0, #3
    64d4:	ldr	x2, [sp, #40]
    64d8:	add	x0, x2, x0
    64dc:	ldr	x1, [x1]
    64e0:	str	x1, [x0]
    64e4:	ldr	w0, [sp, #60]
    64e8:	add	w0, w0, #0x1
    64ec:	str	w0, [sp, #60]
    64f0:	ldr	w1, [sp, #60]
    64f4:	ldr	w0, [sp, #28]
    64f8:	cmp	w1, w0
    64fc:	b.lt	64bc <_gcry_mpih_sqr_n_basecase+0x40>  // b.tstop
    6500:	b	653c <_gcry_mpih_sqr_n_basecase+0xc0>
    6504:	str	wzr, [sp, #56]
    6508:	b	652c <_gcry_mpih_sqr_n_basecase+0xb0>
    650c:	ldrsw	x0, [sp, #56]
    6510:	lsl	x0, x0, #3
    6514:	ldr	x1, [sp, #40]
    6518:	add	x0, x1, x0
    651c:	str	xzr, [x0]
    6520:	ldr	w0, [sp, #56]
    6524:	add	w0, w0, #0x1
    6528:	str	w0, [sp, #56]
    652c:	ldr	w1, [sp, #56]
    6530:	ldr	w0, [sp, #28]
    6534:	cmp	w1, w0
    6538:	b.lt	650c <_gcry_mpih_sqr_n_basecase+0x90>  // b.tstop
    653c:	str	xzr, [sp, #64]
    6540:	b	655c <_gcry_mpih_sqr_n_basecase+0xe0>
    6544:	ldr	x3, [sp, #48]
    6548:	ldr	w2, [sp, #28]
    654c:	ldr	x1, [sp, #32]
    6550:	ldr	x0, [sp, #40]
    6554:	bl	73e4 <_gcry_mpih_mul_1>
    6558:	str	x0, [sp, #64]
    655c:	ldrsw	x0, [sp, #28]
    6560:	lsl	x0, x0, #3
    6564:	ldr	x1, [sp, #40]
    6568:	add	x0, x1, x0
    656c:	ldr	x1, [sp, #64]
    6570:	str	x1, [x0]
    6574:	ldr	x0, [sp, #40]
    6578:	add	x0, x0, #0x8
    657c:	str	x0, [sp, #40]
    6580:	mov	w0, #0x1                   	// #1
    6584:	str	w0, [sp, #76]
    6588:	b	6624 <_gcry_mpih_sqr_n_basecase+0x1a8>
    658c:	ldrsw	x0, [sp, #76]
    6590:	lsl	x0, x0, #3
    6594:	ldr	x1, [sp, #32]
    6598:	add	x0, x1, x0
    659c:	ldr	x0, [x0]
    65a0:	str	x0, [sp, #48]
    65a4:	ldr	x0, [sp, #48]
    65a8:	cmp	x0, #0x1
    65ac:	b.hi	65dc <_gcry_mpih_sqr_n_basecase+0x160>  // b.pmore
    65b0:	str	xzr, [sp, #64]
    65b4:	ldr	x0, [sp, #48]
    65b8:	cmp	x0, #0x1
    65bc:	b.ne	65f4 <_gcry_mpih_sqr_n_basecase+0x178>  // b.any
    65c0:	ldr	w3, [sp, #28]
    65c4:	ldr	x2, [sp, #32]
    65c8:	ldr	x1, [sp, #40]
    65cc:	ldr	x0, [sp, #40]
    65d0:	bl	79c4 <_gcry_mpih_add_n>
    65d4:	str	x0, [sp, #64]
    65d8:	b	65f4 <_gcry_mpih_sqr_n_basecase+0x178>
    65dc:	ldr	x3, [sp, #48]
    65e0:	ldr	w2, [sp, #28]
    65e4:	ldr	x1, [sp, #32]
    65e8:	ldr	x0, [sp, #40]
    65ec:	bl	75a4 <_gcry_mpih_addmul_1>
    65f0:	str	x0, [sp, #64]
    65f4:	ldrsw	x0, [sp, #28]
    65f8:	lsl	x0, x0, #3
    65fc:	ldr	x1, [sp, #40]
    6600:	add	x0, x1, x0
    6604:	ldr	x1, [sp, #64]
    6608:	str	x1, [x0]
    660c:	ldr	x0, [sp, #40]
    6610:	add	x0, x0, #0x8
    6614:	str	x0, [sp, #40]
    6618:	ldr	w0, [sp, #76]
    661c:	add	w0, w0, #0x1
    6620:	str	w0, [sp, #76]
    6624:	ldr	w1, [sp, #76]
    6628:	ldr	w0, [sp, #28]
    662c:	cmp	w1, w0
    6630:	b.lt	658c <_gcry_mpih_sqr_n_basecase+0x110>  // b.tstop
    6634:	nop
    6638:	nop
    663c:	ldp	x29, x30, [sp], #80
    6640:	ret

0000000000006644 <_gcry_mpih_sqr_n>:
    6644:	stp	x29, x30, [sp, #-96]!
    6648:	mov	x29, sp
    664c:	str	x0, [sp, #40]
    6650:	str	x1, [sp, #32]
    6654:	str	w2, [sp, #28]
    6658:	str	x3, [sp, #16]
    665c:	ldr	w0, [sp, #28]
    6660:	and	w0, w0, #0x1
    6664:	cmp	w0, #0x0
    6668:	b.eq	676c <_gcry_mpih_sqr_n+0x128>  // b.none
    666c:	ldr	w0, [sp, #28]
    6670:	sub	w0, w0, #0x1
    6674:	str	w0, [sp, #68]
    6678:	ldr	w0, [sp, #68]
    667c:	cmp	w0, #0xf
    6680:	b.gt	6698 <_gcry_mpih_sqr_n+0x54>
    6684:	ldr	w2, [sp, #68]
    6688:	ldr	x1, [sp, #32]
    668c:	ldr	x0, [sp, #40]
    6690:	bl	647c <_gcry_mpih_sqr_n_basecase>
    6694:	b	66ac <_gcry_mpih_sqr_n+0x68>
    6698:	ldr	x3, [sp, #16]
    669c:	ldr	w2, [sp, #68]
    66a0:	ldr	x1, [sp, #32]
    66a4:	ldr	x0, [sp, #40]
    66a8:	bl	6644 <_gcry_mpih_sqr_n>
    66ac:	ldrsw	x0, [sp, #68]
    66b0:	lsl	x0, x0, #3
    66b4:	ldr	x1, [sp, #40]
    66b8:	add	x4, x1, x0
    66bc:	ldrsw	x0, [sp, #68]
    66c0:	lsl	x0, x0, #3
    66c4:	ldr	x1, [sp, #32]
    66c8:	add	x0, x1, x0
    66cc:	ldr	x0, [x0]
    66d0:	mov	x3, x0
    66d4:	ldr	w2, [sp, #68]
    66d8:	ldr	x1, [sp, #32]
    66dc:	mov	x0, x4
    66e0:	bl	75a4 <_gcry_mpih_addmul_1>
    66e4:	str	x0, [sp, #56]
    66e8:	ldr	w0, [sp, #68]
    66ec:	lsl	w0, w0, #1
    66f0:	sxtw	x0, w0
    66f4:	lsl	x0, x0, #3
    66f8:	ldr	x1, [sp, #40]
    66fc:	add	x0, x1, x0
    6700:	ldr	x1, [sp, #56]
    6704:	str	x1, [x0]
    6708:	ldrsw	x0, [sp, #68]
    670c:	lsl	x0, x0, #3
    6710:	ldr	x1, [sp, #40]
    6714:	add	x4, x1, x0
    6718:	ldrsw	x0, [sp, #68]
    671c:	lsl	x0, x0, #3
    6720:	ldr	x1, [sp, #32]
    6724:	add	x0, x1, x0
    6728:	ldr	x0, [x0]
    672c:	mov	x3, x0
    6730:	ldr	w2, [sp, #28]
    6734:	ldr	x1, [sp, #32]
    6738:	mov	x0, x4
    673c:	bl	75a4 <_gcry_mpih_addmul_1>
    6740:	str	x0, [sp, #56]
    6744:	ldr	w1, [sp, #68]
    6748:	ldr	w0, [sp, #28]
    674c:	add	w0, w1, w0
    6750:	sxtw	x0, w0
    6754:	lsl	x0, x0, #3
    6758:	ldr	x1, [sp, #40]
    675c:	add	x0, x1, x0
    6760:	ldr	x1, [sp, #56]
    6764:	str	x1, [x0]
    6768:	b	6b3c <_gcry_mpih_sqr_n+0x4f8>
    676c:	ldr	w0, [sp, #28]
    6770:	asr	w0, w0, #1
    6774:	str	w0, [sp, #84]
    6778:	ldr	w0, [sp, #84]
    677c:	cmp	w0, #0xf
    6780:	b.gt	67b8 <_gcry_mpih_sqr_n+0x174>
    6784:	ldrsw	x0, [sp, #28]
    6788:	lsl	x0, x0, #3
    678c:	ldr	x1, [sp, #40]
    6790:	add	x3, x1, x0
    6794:	ldrsw	x0, [sp, #84]
    6798:	lsl	x0, x0, #3
    679c:	ldr	x1, [sp, #32]
    67a0:	add	x0, x1, x0
    67a4:	ldr	w2, [sp, #84]
    67a8:	mov	x1, x0
    67ac:	mov	x0, x3
    67b0:	bl	647c <_gcry_mpih_sqr_n_basecase>
    67b4:	b	67ec <_gcry_mpih_sqr_n+0x1a8>
    67b8:	ldrsw	x0, [sp, #28]
    67bc:	lsl	x0, x0, #3
    67c0:	ldr	x1, [sp, #40]
    67c4:	add	x4, x1, x0
    67c8:	ldrsw	x0, [sp, #84]
    67cc:	lsl	x0, x0, #3
    67d0:	ldr	x1, [sp, #32]
    67d4:	add	x0, x1, x0
    67d8:	ldr	x3, [sp, #16]
    67dc:	ldr	w2, [sp, #84]
    67e0:	mov	x1, x0
    67e4:	mov	x0, x4
    67e8:	bl	6644 <_gcry_mpih_sqr_n>
    67ec:	ldrsw	x0, [sp, #84]
    67f0:	lsl	x0, x0, #3
    67f4:	ldr	x1, [sp, #32]
    67f8:	add	x0, x1, x0
    67fc:	ldr	w2, [sp, #84]
    6800:	ldr	x1, [sp, #32]
    6804:	bl	bcf0 <_gcry_mpih_cmp>
    6808:	cmp	w0, #0x0
    680c:	b.lt	6838 <_gcry_mpih_sqr_n+0x1f4>  // b.tstop
    6810:	ldrsw	x0, [sp, #84]
    6814:	lsl	x0, x0, #3
    6818:	ldr	x1, [sp, #32]
    681c:	add	x0, x1, x0
    6820:	ldr	w3, [sp, #84]
    6824:	ldr	x2, [sp, #32]
    6828:	mov	x1, x0
    682c:	ldr	x0, [sp, #40]
    6830:	bl	7afc <_gcry_mpih_sub_n>
    6834:	b	685c <_gcry_mpih_sqr_n+0x218>
    6838:	ldrsw	x0, [sp, #84]
    683c:	lsl	x0, x0, #3
    6840:	ldr	x1, [sp, #32]
    6844:	add	x0, x1, x0
    6848:	ldr	w3, [sp, #84]
    684c:	mov	x2, x0
    6850:	ldr	x1, [sp, #32]
    6854:	ldr	x0, [sp, #40]
    6858:	bl	7afc <_gcry_mpih_sub_n>
    685c:	ldr	w0, [sp, #84]
    6860:	cmp	w0, #0xf
    6864:	b.gt	687c <_gcry_mpih_sqr_n+0x238>
    6868:	ldr	w2, [sp, #84]
    686c:	ldr	x1, [sp, #40]
    6870:	ldr	x0, [sp, #16]
    6874:	bl	647c <_gcry_mpih_sqr_n_basecase>
    6878:	b	68a0 <_gcry_mpih_sqr_n+0x25c>
    687c:	ldrsw	x0, [sp, #28]
    6880:	lsl	x0, x0, #3
    6884:	ldr	x1, [sp, #16]
    6888:	add	x0, x1, x0
    688c:	mov	x3, x0
    6890:	ldr	w2, [sp, #84]
    6894:	ldr	x1, [sp, #40]
    6898:	ldr	x0, [sp, #16]
    689c:	bl	6644 <_gcry_mpih_sqr_n>
    68a0:	str	wzr, [sp, #92]
    68a4:	b	68ec <_gcry_mpih_sqr_n+0x2a8>
    68a8:	ldrsw	x1, [sp, #28]
    68ac:	ldrsw	x0, [sp, #92]
    68b0:	add	x0, x1, x0
    68b4:	lsl	x0, x0, #3
    68b8:	ldr	x1, [sp, #40]
    68bc:	add	x1, x1, x0
    68c0:	ldrsw	x2, [sp, #84]
    68c4:	ldrsw	x0, [sp, #92]
    68c8:	add	x0, x2, x0
    68cc:	lsl	x0, x0, #3
    68d0:	ldr	x2, [sp, #40]
    68d4:	add	x0, x2, x0
    68d8:	ldr	x1, [x1]
    68dc:	str	x1, [x0]
    68e0:	ldr	w0, [sp, #92]
    68e4:	add	w0, w0, #0x1
    68e8:	str	w0, [sp, #92]
    68ec:	ldr	w1, [sp, #92]
    68f0:	ldr	w0, [sp, #84]
    68f4:	cmp	w1, w0
    68f8:	b.lt	68a8 <_gcry_mpih_sqr_n+0x264>  // b.tstop
    68fc:	ldrsw	x0, [sp, #28]
    6900:	lsl	x0, x0, #3
    6904:	ldr	x1, [sp, #40]
    6908:	add	x4, x1, x0
    690c:	ldrsw	x0, [sp, #28]
    6910:	lsl	x0, x0, #3
    6914:	ldr	x1, [sp, #40]
    6918:	add	x5, x1, x0
    691c:	ldrsw	x1, [sp, #28]
    6920:	ldrsw	x0, [sp, #84]
    6924:	add	x0, x1, x0
    6928:	lsl	x0, x0, #3
    692c:	ldr	x1, [sp, #40]
    6930:	add	x0, x1, x0
    6934:	ldr	w3, [sp, #84]
    6938:	mov	x2, x0
    693c:	mov	x1, x5
    6940:	mov	x0, x4
    6944:	bl	79c4 <_gcry_mpih_add_n>
    6948:	str	x0, [sp, #72]
    694c:	ldrsw	x0, [sp, #84]
    6950:	lsl	x0, x0, #3
    6954:	ldr	x1, [sp, #40]
    6958:	add	x4, x1, x0
    695c:	ldrsw	x0, [sp, #84]
    6960:	lsl	x0, x0, #3
    6964:	ldr	x1, [sp, #40]
    6968:	add	x0, x1, x0
    696c:	ldr	w3, [sp, #28]
    6970:	ldr	x2, [sp, #16]
    6974:	mov	x1, x0
    6978:	mov	x0, x4
    697c:	bl	7afc <_gcry_mpih_sub_n>
    6980:	mov	x1, x0
    6984:	ldr	x0, [sp, #72]
    6988:	sub	x0, x0, x1
    698c:	str	x0, [sp, #72]
    6990:	ldr	w0, [sp, #84]
    6994:	cmp	w0, #0xf
    6998:	b.gt	69b0 <_gcry_mpih_sqr_n+0x36c>
    699c:	ldr	w2, [sp, #84]
    69a0:	ldr	x1, [sp, #32]
    69a4:	ldr	x0, [sp, #16]
    69a8:	bl	647c <_gcry_mpih_sqr_n_basecase>
    69ac:	b	69d4 <_gcry_mpih_sqr_n+0x390>
    69b0:	ldrsw	x0, [sp, #28]
    69b4:	lsl	x0, x0, #3
    69b8:	ldr	x1, [sp, #16]
    69bc:	add	x0, x1, x0
    69c0:	mov	x3, x0
    69c4:	ldr	w2, [sp, #84]
    69c8:	ldr	x1, [sp, #32]
    69cc:	ldr	x0, [sp, #16]
    69d0:	bl	6644 <_gcry_mpih_sqr_n>
    69d4:	ldrsw	x0, [sp, #84]
    69d8:	lsl	x0, x0, #3
    69dc:	ldr	x1, [sp, #40]
    69e0:	add	x4, x1, x0
    69e4:	ldrsw	x0, [sp, #84]
    69e8:	lsl	x0, x0, #3
    69ec:	ldr	x1, [sp, #40]
    69f0:	add	x0, x1, x0
    69f4:	ldr	w3, [sp, #28]
    69f8:	ldr	x2, [sp, #16]
    69fc:	mov	x1, x0
    6a00:	mov	x0, x4
    6a04:	bl	79c4 <_gcry_mpih_add_n>
    6a08:	mov	x1, x0
    6a0c:	ldr	x0, [sp, #72]
    6a10:	add	x0, x0, x1
    6a14:	str	x0, [sp, #72]
    6a18:	ldr	x0, [sp, #72]
    6a1c:	cmp	x0, #0x0
    6a20:	b.eq	6a68 <_gcry_mpih_sqr_n+0x424>  // b.none
    6a24:	ldrsw	x1, [sp, #84]
    6a28:	ldrsw	x0, [sp, #28]
    6a2c:	add	x0, x1, x0
    6a30:	lsl	x0, x0, #3
    6a34:	ldr	x1, [sp, #40]
    6a38:	add	x4, x1, x0
    6a3c:	ldrsw	x1, [sp, #84]
    6a40:	ldrsw	x0, [sp, #28]
    6a44:	add	x0, x1, x0
    6a48:	lsl	x0, x0, #3
    6a4c:	ldr	x1, [sp, #40]
    6a50:	add	x0, x1, x0
    6a54:	ldr	x3, [sp, #72]
    6a58:	ldr	w2, [sp, #84]
    6a5c:	mov	x1, x0
    6a60:	mov	x0, x4
    6a64:	bl	b948 <_gcry_mpih_add_1>
    6a68:	str	wzr, [sp, #88]
    6a6c:	b	6aa4 <_gcry_mpih_sqr_n+0x460>
    6a70:	ldrsw	x0, [sp, #88]
    6a74:	lsl	x0, x0, #3
    6a78:	ldr	x1, [sp, #16]
    6a7c:	add	x1, x1, x0
    6a80:	ldrsw	x0, [sp, #88]
    6a84:	lsl	x0, x0, #3
    6a88:	ldr	x2, [sp, #40]
    6a8c:	add	x0, x2, x0
    6a90:	ldr	x1, [x1]
    6a94:	str	x1, [x0]
    6a98:	ldr	w0, [sp, #88]
    6a9c:	add	w0, w0, #0x1
    6aa0:	str	w0, [sp, #88]
    6aa4:	ldr	w1, [sp, #88]
    6aa8:	ldr	w0, [sp, #84]
    6aac:	cmp	w1, w0
    6ab0:	b.lt	6a70 <_gcry_mpih_sqr_n+0x42c>  // b.tstop
    6ab4:	ldrsw	x0, [sp, #84]
    6ab8:	lsl	x0, x0, #3
    6abc:	ldr	x1, [sp, #40]
    6ac0:	add	x4, x1, x0
    6ac4:	ldrsw	x0, [sp, #84]
    6ac8:	lsl	x0, x0, #3
    6acc:	ldr	x1, [sp, #40]
    6ad0:	add	x5, x1, x0
    6ad4:	ldrsw	x0, [sp, #84]
    6ad8:	lsl	x0, x0, #3
    6adc:	ldr	x1, [sp, #16]
    6ae0:	add	x0, x1, x0
    6ae4:	ldr	w3, [sp, #84]
    6ae8:	mov	x2, x0
    6aec:	mov	x1, x5
    6af0:	mov	x0, x4
    6af4:	bl	79c4 <_gcry_mpih_add_n>
    6af8:	str	x0, [sp, #72]
    6afc:	ldr	x0, [sp, #72]
    6b00:	cmp	x0, #0x0
    6b04:	b.eq	6b3c <_gcry_mpih_sqr_n+0x4f8>  // b.none
    6b08:	ldrsw	x0, [sp, #28]
    6b0c:	lsl	x0, x0, #3
    6b10:	ldr	x1, [sp, #40]
    6b14:	add	x4, x1, x0
    6b18:	ldrsw	x0, [sp, #28]
    6b1c:	lsl	x0, x0, #3
    6b20:	ldr	x1, [sp, #40]
    6b24:	add	x0, x1, x0
    6b28:	mov	x3, #0x1                   	// #1
    6b2c:	ldr	w2, [sp, #28]
    6b30:	mov	x1, x0
    6b34:	mov	x0, x4
    6b38:	bl	b948 <_gcry_mpih_add_1>
    6b3c:	nop
    6b40:	ldp	x29, x30, [sp], #96
    6b44:	ret

0000000000006b48 <_gcry_mpih_mul_n>:
    6b48:	stp	x29, x30, [sp, #-80]!
    6b4c:	mov	x29, sp
    6b50:	str	x0, [sp, #40]
    6b54:	str	x1, [sp, #32]
    6b58:	str	x2, [sp, #24]
    6b5c:	str	w3, [sp, #20]
    6b60:	ldr	x1, [sp, #32]
    6b64:	ldr	x0, [sp, #24]
    6b68:	cmp	x1, x0
    6b6c:	b.ne	6bdc <_gcry_mpih_mul_n+0x94>  // b.any
    6b70:	ldr	w0, [sp, #20]
    6b74:	cmp	w0, #0xf
    6b78:	b.gt	6b90 <_gcry_mpih_mul_n+0x48>
    6b7c:	ldr	w2, [sp, #20]
    6b80:	ldr	x1, [sp, #32]
    6b84:	ldr	x0, [sp, #40]
    6b88:	bl	647c <_gcry_mpih_sqr_n_basecase>
    6b8c:	b	6c70 <_gcry_mpih_mul_n+0x128>
    6b90:	ldr	x0, [sp, #32]
    6b94:	bl	bdf0 <gcry_is_secure>
    6b98:	str	w0, [sp, #76]
    6b9c:	ldr	w0, [sp, #20]
    6ba0:	lsl	w0, w0, #1
    6ba4:	ldr	w1, [sp, #76]
    6ba8:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    6bac:	str	x0, [sp, #56]
    6bb0:	ldr	x3, [sp, #56]
    6bb4:	ldr	w2, [sp, #20]
    6bb8:	ldr	x1, [sp, #32]
    6bbc:	ldr	x0, [sp, #40]
    6bc0:	bl	6644 <_gcry_mpih_sqr_n>
    6bc4:	ldr	w0, [sp, #20]
    6bc8:	lsl	w0, w0, #1
    6bcc:	mov	w1, w0
    6bd0:	ldr	x0, [sp, #56]
    6bd4:	bl	214 <_gcry_mpi_free_limb_space>
    6bd8:	b	6c70 <_gcry_mpih_mul_n+0x128>
    6bdc:	ldr	w0, [sp, #20]
    6be0:	cmp	w0, #0xf
    6be4:	b.gt	6c00 <_gcry_mpih_mul_n+0xb8>
    6be8:	ldr	w3, [sp, #20]
    6bec:	ldr	x2, [sp, #24]
    6bf0:	ldr	x1, [sp, #32]
    6bf4:	ldr	x0, [sp, #40]
    6bf8:	bl	5c54 <mul_n_basecase>
    6bfc:	b	6c70 <_gcry_mpih_mul_n+0x128>
    6c00:	ldr	x0, [sp, #32]
    6c04:	bl	bdf0 <gcry_is_secure>
    6c08:	cmp	w0, #0x0
    6c0c:	b.ne	6c20 <_gcry_mpih_mul_n+0xd8>  // b.any
    6c10:	ldr	x0, [sp, #24]
    6c14:	bl	bdf0 <gcry_is_secure>
    6c18:	cmp	w0, #0x0
    6c1c:	b.eq	6c28 <_gcry_mpih_mul_n+0xe0>  // b.none
    6c20:	mov	w0, #0x1                   	// #1
    6c24:	b	6c2c <_gcry_mpih_mul_n+0xe4>
    6c28:	mov	w0, #0x0                   	// #0
    6c2c:	str	w0, [sp, #76]
    6c30:	ldr	w0, [sp, #20]
    6c34:	lsl	w0, w0, #1
    6c38:	ldr	w1, [sp, #76]
    6c3c:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    6c40:	str	x0, [sp, #64]
    6c44:	ldr	x4, [sp, #64]
    6c48:	ldr	w3, [sp, #20]
    6c4c:	ldr	x2, [sp, #24]
    6c50:	ldr	x1, [sp, #32]
    6c54:	ldr	x0, [sp, #40]
    6c58:	bl	5e1c <mul_n>
    6c5c:	ldr	w0, [sp, #20]
    6c60:	lsl	w0, w0, #1
    6c64:	mov	w1, w0
    6c68:	ldr	x0, [sp, #64]
    6c6c:	bl	214 <_gcry_mpi_free_limb_space>
    6c70:	nop
    6c74:	ldp	x29, x30, [sp], #80
    6c78:	ret

0000000000006c7c <_gcry_mpih_mul_karatsuba_case>:
    6c7c:	stp	x29, x30, [sp, #-96]!
    6c80:	mov	x29, sp
    6c84:	str	x19, [sp, #16]
    6c88:	str	x0, [sp, #72]
    6c8c:	str	x1, [sp, #64]
    6c90:	str	w2, [sp, #60]
    6c94:	str	x3, [sp, #48]
    6c98:	str	w4, [sp, #56]
    6c9c:	str	x5, [sp, #40]
    6ca0:	ldr	x0, [sp, #40]
    6ca4:	ldr	x0, [x0, #8]
    6ca8:	cmp	x0, #0x0
    6cac:	b.eq	6cc4 <_gcry_mpih_mul_karatsuba_case+0x48>  // b.none
    6cb0:	ldr	x0, [sp, #40]
    6cb4:	ldr	w0, [x0, #20]
    6cb8:	ldr	w1, [sp, #56]
    6cbc:	cmp	w1, w0
    6cc0:	b.le	6d60 <_gcry_mpih_mul_karatsuba_case+0xe4>
    6cc4:	ldr	x0, [sp, #40]
    6cc8:	ldr	x0, [x0, #8]
    6ccc:	cmp	x0, #0x0
    6cd0:	b.eq	6cf0 <_gcry_mpih_mul_karatsuba_case+0x74>  // b.none
    6cd4:	ldr	x0, [sp, #40]
    6cd8:	ldr	x2, [x0, #8]
    6cdc:	ldr	x0, [sp, #40]
    6ce0:	ldr	w0, [x0, #16]
    6ce4:	mov	w1, w0
    6ce8:	mov	x0, x2
    6cec:	bl	214 <_gcry_mpi_free_limb_space>
    6cf0:	ldr	w0, [sp, #56]
    6cf4:	lsl	w0, w0, #1
    6cf8:	mov	w1, w0
    6cfc:	ldr	x0, [sp, #40]
    6d00:	str	w1, [x0, #16]
    6d04:	ldr	w0, [sp, #56]
    6d08:	lsl	w0, w0, #1
    6d0c:	mov	w19, w0
    6d10:	ldr	x0, [sp, #64]
    6d14:	bl	bdf0 <gcry_is_secure>
    6d18:	cmp	w0, #0x0
    6d1c:	b.ne	6d30 <_gcry_mpih_mul_karatsuba_case+0xb4>  // b.any
    6d20:	ldr	x0, [sp, #48]
    6d24:	bl	bdf0 <gcry_is_secure>
    6d28:	cmp	w0, #0x0
    6d2c:	b.eq	6d38 <_gcry_mpih_mul_karatsuba_case+0xbc>  // b.none
    6d30:	mov	w0, #0x1                   	// #1
    6d34:	b	6d3c <_gcry_mpih_mul_karatsuba_case+0xc0>
    6d38:	mov	w0, #0x0                   	// #0
    6d3c:	mov	w1, w0
    6d40:	mov	w0, w19
    6d44:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    6d48:	mov	x1, x0
    6d4c:	ldr	x0, [sp, #40]
    6d50:	str	x1, [x0, #8]
    6d54:	ldr	x0, [sp, #40]
    6d58:	ldr	w1, [sp, #56]
    6d5c:	str	w1, [x0, #20]
    6d60:	ldr	w0, [sp, #56]
    6d64:	cmp	w0, #0xf
    6d68:	b.gt	6d84 <_gcry_mpih_mul_karatsuba_case+0x108>
    6d6c:	ldr	w3, [sp, #56]
    6d70:	ldr	x2, [sp, #48]
    6d74:	ldr	x1, [sp, #64]
    6d78:	ldr	x0, [sp, #72]
    6d7c:	bl	5c54 <mul_n_basecase>
    6d80:	b	6da4 <_gcry_mpih_mul_karatsuba_case+0x128>
    6d84:	ldr	x0, [sp, #40]
    6d88:	ldr	x0, [x0, #8]
    6d8c:	mov	x4, x0
    6d90:	ldr	w3, [sp, #56]
    6d94:	ldr	x2, [sp, #48]
    6d98:	ldr	x1, [sp, #64]
    6d9c:	ldr	x0, [sp, #72]
    6da0:	bl	5e1c <mul_n>
    6da4:	ldrsw	x0, [sp, #56]
    6da8:	lsl	x0, x0, #3
    6dac:	ldr	x1, [sp, #72]
    6db0:	add	x0, x1, x0
    6db4:	str	x0, [sp, #72]
    6db8:	ldrsw	x0, [sp, #56]
    6dbc:	lsl	x0, x0, #3
    6dc0:	ldr	x1, [sp, #64]
    6dc4:	add	x0, x1, x0
    6dc8:	str	x0, [sp, #64]
    6dcc:	ldr	w1, [sp, #60]
    6dd0:	ldr	w0, [sp, #56]
    6dd4:	sub	w0, w1, w0
    6dd8:	str	w0, [sp, #60]
    6ddc:	ldr	w1, [sp, #60]
    6de0:	ldr	w0, [sp, #56]
    6de4:	cmp	w1, w0
    6de8:	b.lt	6f9c <_gcry_mpih_mul_karatsuba_case+0x320>  // b.tstop
    6dec:	ldr	x0, [sp, #40]
    6df0:	ldr	x0, [x0, #24]
    6df4:	cmp	x0, #0x0
    6df8:	b.eq	6e10 <_gcry_mpih_mul_karatsuba_case+0x194>  // b.none
    6dfc:	ldr	x0, [sp, #40]
    6e00:	ldr	w0, [x0, #36]
    6e04:	ldr	w1, [sp, #56]
    6e08:	cmp	w1, w0
    6e0c:	b.le	6eac <_gcry_mpih_mul_karatsuba_case+0x230>
    6e10:	ldr	x0, [sp, #40]
    6e14:	ldr	x0, [x0, #24]
    6e18:	cmp	x0, #0x0
    6e1c:	b.eq	6e3c <_gcry_mpih_mul_karatsuba_case+0x1c0>  // b.none
    6e20:	ldr	x0, [sp, #40]
    6e24:	ldr	x2, [x0, #24]
    6e28:	ldr	x0, [sp, #40]
    6e2c:	ldr	w0, [x0, #32]
    6e30:	mov	w1, w0
    6e34:	mov	x0, x2
    6e38:	bl	214 <_gcry_mpi_free_limb_space>
    6e3c:	ldr	w0, [sp, #56]
    6e40:	lsl	w0, w0, #1
    6e44:	mov	w1, w0
    6e48:	ldr	x0, [sp, #40]
    6e4c:	str	w1, [x0, #32]
    6e50:	ldr	w0, [sp, #56]
    6e54:	lsl	w0, w0, #1
    6e58:	mov	w19, w0
    6e5c:	ldr	x0, [sp, #64]
    6e60:	bl	bdf0 <gcry_is_secure>
    6e64:	cmp	w0, #0x0
    6e68:	b.ne	6e7c <_gcry_mpih_mul_karatsuba_case+0x200>  // b.any
    6e6c:	ldr	x0, [sp, #48]
    6e70:	bl	bdf0 <gcry_is_secure>
    6e74:	cmp	w0, #0x0
    6e78:	b.eq	6e84 <_gcry_mpih_mul_karatsuba_case+0x208>  // b.none
    6e7c:	mov	w0, #0x1                   	// #1
    6e80:	b	6e88 <_gcry_mpih_mul_karatsuba_case+0x20c>
    6e84:	mov	w0, #0x0                   	// #0
    6e88:	mov	w1, w0
    6e8c:	mov	w0, w19
    6e90:	bl	1a0 <_gcry_mpi_alloc_limb_space>
    6e94:	mov	x1, x0
    6e98:	ldr	x0, [sp, #40]
    6e9c:	str	x1, [x0, #24]
    6ea0:	ldr	x0, [sp, #40]
    6ea4:	ldr	w1, [sp, #56]
    6ea8:	str	w1, [x0, #36]
    6eac:	ldr	w0, [sp, #56]
    6eb0:	cmp	w0, #0xf
    6eb4:	b.gt	6ed4 <_gcry_mpih_mul_karatsuba_case+0x258>
    6eb8:	ldr	x0, [sp, #40]
    6ebc:	ldr	x0, [x0, #24]
    6ec0:	ldr	w3, [sp, #56]
    6ec4:	ldr	x2, [sp, #48]
    6ec8:	ldr	x1, [sp, #64]
    6ecc:	bl	5c54 <mul_n_basecase>
    6ed0:	b	6efc <_gcry_mpih_mul_karatsuba_case+0x280>
    6ed4:	ldr	x0, [sp, #40]
    6ed8:	ldr	x5, [x0, #24]
    6edc:	ldr	x0, [sp, #40]
    6ee0:	ldr	x0, [x0, #8]
    6ee4:	mov	x4, x0
    6ee8:	ldr	w3, [sp, #56]
    6eec:	ldr	x2, [sp, #48]
    6ef0:	ldr	x1, [sp, #64]
    6ef4:	mov	x0, x5
    6ef8:	bl	5e1c <mul_n>
    6efc:	ldr	x0, [sp, #40]
    6f00:	ldr	x0, [x0, #24]
    6f04:	ldr	w3, [sp, #56]
    6f08:	mov	x2, x0
    6f0c:	ldr	x1, [sp, #72]
    6f10:	ldr	x0, [sp, #72]
    6f14:	bl	79c4 <_gcry_mpih_add_n>
    6f18:	str	x0, [sp, #88]
    6f1c:	ldrsw	x0, [sp, #56]
    6f20:	lsl	x0, x0, #3
    6f24:	ldr	x1, [sp, #72]
    6f28:	add	x4, x1, x0
    6f2c:	ldr	x0, [sp, #40]
    6f30:	ldr	x1, [x0, #24]
    6f34:	ldrsw	x0, [sp, #56]
    6f38:	lsl	x0, x0, #3
    6f3c:	add	x0, x1, x0
    6f40:	ldr	x3, [sp, #88]
    6f44:	ldr	w2, [sp, #56]
    6f48:	mov	x1, x0
    6f4c:	mov	x0, x4
    6f50:	bl	b948 <_gcry_mpih_add_1>
    6f54:	ldrsw	x0, [sp, #56]
    6f58:	lsl	x0, x0, #3
    6f5c:	ldr	x1, [sp, #72]
    6f60:	add	x0, x1, x0
    6f64:	str	x0, [sp, #72]
    6f68:	ldrsw	x0, [sp, #56]
    6f6c:	lsl	x0, x0, #3
    6f70:	ldr	x1, [sp, #64]
    6f74:	add	x0, x1, x0
    6f78:	str	x0, [sp, #64]
    6f7c:	ldr	w1, [sp, #60]
    6f80:	ldr	w0, [sp, #56]
    6f84:	sub	w0, w1, w0
    6f88:	str	w0, [sp, #60]
    6f8c:	ldr	w1, [sp, #60]
    6f90:	ldr	w0, [sp, #56]
    6f94:	cmp	w1, w0
    6f98:	b.ge	6eac <_gcry_mpih_mul_karatsuba_case+0x230>  // b.tcont
    6f9c:	ldr	w0, [sp, #60]
    6fa0:	cmp	w0, #0x0
    6fa4:	b.eq	7080 <_gcry_mpih_mul_karatsuba_case+0x404>  // b.none
    6fa8:	ldr	w0, [sp, #60]
    6fac:	cmp	w0, #0xf
    6fb0:	b.gt	6fd4 <_gcry_mpih_mul_karatsuba_case+0x358>
    6fb4:	ldr	x0, [sp, #40]
    6fb8:	ldr	x0, [x0, #8]
    6fbc:	ldr	w4, [sp, #60]
    6fc0:	ldr	x3, [sp, #64]
    6fc4:	ldr	w2, [sp, #56]
    6fc8:	ldr	x1, [sp, #48]
    6fcc:	bl	7194 <_gcry_mpih_mul>
    6fd0:	b	7028 <_gcry_mpih_mul_karatsuba_case+0x3ac>
    6fd4:	ldr	x0, [sp, #40]
    6fd8:	ldr	x0, [x0]
    6fdc:	cmp	x0, #0x0
    6fe0:	b.ne	6ffc <_gcry_mpih_mul_karatsuba_case+0x380>  // b.any
    6fe4:	mov	x1, #0x28                  	// #40
    6fe8:	mov	x0, #0x1                   	// #1
    6fec:	bl	be04 <gcry_xcalloc>
    6ff0:	mov	x1, x0
    6ff4:	ldr	x0, [sp, #40]
    6ff8:	str	x1, [x0]
    6ffc:	ldr	x0, [sp, #40]
    7000:	ldr	x6, [x0, #8]
    7004:	ldr	x0, [sp, #40]
    7008:	ldr	x0, [x0]
    700c:	mov	x5, x0
    7010:	ldr	w4, [sp, #60]
    7014:	ldr	x3, [sp, #64]
    7018:	ldr	w2, [sp, #56]
    701c:	ldr	x1, [sp, #48]
    7020:	mov	x0, x6
    7024:	bl	6c7c <_gcry_mpih_mul_karatsuba_case>
    7028:	ldr	x0, [sp, #40]
    702c:	ldr	x0, [x0, #8]
    7030:	ldr	w3, [sp, #56]
    7034:	mov	x2, x0
    7038:	ldr	x1, [sp, #72]
    703c:	ldr	x0, [sp, #72]
    7040:	bl	79c4 <_gcry_mpih_add_n>
    7044:	str	x0, [sp, #88]
    7048:	ldrsw	x0, [sp, #56]
    704c:	lsl	x0, x0, #3
    7050:	ldr	x1, [sp, #72]
    7054:	add	x4, x1, x0
    7058:	ldr	x0, [sp, #40]
    705c:	ldr	x1, [x0, #8]
    7060:	ldrsw	x0, [sp, #56]
    7064:	lsl	x0, x0, #3
    7068:	add	x0, x1, x0
    706c:	ldr	x3, [sp, #88]
    7070:	ldr	w2, [sp, #60]
    7074:	mov	x1, x0
    7078:	mov	x0, x4
    707c:	bl	b948 <_gcry_mpih_add_1>
    7080:	nop
    7084:	ldr	x19, [sp, #16]
    7088:	ldp	x29, x30, [sp], #96
    708c:	ret

0000000000007090 <_gcry_mpih_release_karatsuba_ctx>:
    7090:	stp	x29, x30, [sp, #-48]!
    7094:	mov	x29, sp
    7098:	str	x0, [sp, #24]
    709c:	ldr	x0, [sp, #24]
    70a0:	ldr	x0, [x0, #24]
    70a4:	cmp	x0, #0x0
    70a8:	b.eq	70c8 <_gcry_mpih_release_karatsuba_ctx+0x38>  // b.none
    70ac:	ldr	x0, [sp, #24]
    70b0:	ldr	x2, [x0, #24]
    70b4:	ldr	x0, [sp, #24]
    70b8:	ldr	w0, [x0, #32]
    70bc:	mov	w1, w0
    70c0:	mov	x0, x2
    70c4:	bl	214 <_gcry_mpi_free_limb_space>
    70c8:	ldr	x0, [sp, #24]
    70cc:	ldr	x0, [x0, #8]
    70d0:	cmp	x0, #0x0
    70d4:	b.eq	70f4 <_gcry_mpih_release_karatsuba_ctx+0x64>  // b.none
    70d8:	ldr	x0, [sp, #24]
    70dc:	ldr	x2, [x0, #8]
    70e0:	ldr	x0, [sp, #24]
    70e4:	ldr	w0, [x0, #16]
    70e8:	mov	w1, w0
    70ec:	mov	x0, x2
    70f0:	bl	214 <_gcry_mpi_free_limb_space>
    70f4:	ldr	x0, [sp, #24]
    70f8:	ldr	x0, [x0]
    70fc:	str	x0, [sp, #24]
    7100:	b	7178 <_gcry_mpih_release_karatsuba_ctx+0xe8>
    7104:	ldr	x0, [sp, #24]
    7108:	ldr	x0, [x0]
    710c:	str	x0, [sp, #40]
    7110:	ldr	x0, [sp, #24]
    7114:	ldr	x0, [x0, #24]
    7118:	cmp	x0, #0x0
    711c:	b.eq	713c <_gcry_mpih_release_karatsuba_ctx+0xac>  // b.none
    7120:	ldr	x0, [sp, #24]
    7124:	ldr	x2, [x0, #24]
    7128:	ldr	x0, [sp, #24]
    712c:	ldr	w0, [x0, #32]
    7130:	mov	w1, w0
    7134:	mov	x0, x2
    7138:	bl	214 <_gcry_mpi_free_limb_space>
    713c:	ldr	x0, [sp, #24]
    7140:	ldr	x0, [x0, #8]
    7144:	cmp	x0, #0x0
    7148:	b.eq	7168 <_gcry_mpih_release_karatsuba_ctx+0xd8>  // b.none
    714c:	ldr	x0, [sp, #24]
    7150:	ldr	x2, [x0, #8]
    7154:	ldr	x0, [sp, #24]
    7158:	ldr	w0, [x0, #16]
    715c:	mov	w1, w0
    7160:	mov	x0, x2
    7164:	bl	214 <_gcry_mpi_free_limb_space>
    7168:	ldr	x0, [sp, #24]
    716c:	bl	bdd0 <gcry_free>
    7170:	ldr	x0, [sp, #40]
    7174:	str	x0, [sp, #24]
    7178:	ldr	x0, [sp, #24]
    717c:	cmp	x0, #0x0
    7180:	b.ne	7104 <_gcry_mpih_release_karatsuba_ctx+0x74>  // b.any
    7184:	nop
    7188:	nop
    718c:	ldp	x29, x30, [sp], #48
    7190:	ret

0000000000007194 <_gcry_mpih_mul>:
    7194:	stp	x29, x30, [sp, #-128]!
    7198:	mov	x29, sp
    719c:	str	x0, [sp, #40]
    71a0:	str	x1, [sp, #32]
    71a4:	str	w2, [sp, #28]
    71a8:	str	x3, [sp, #16]
    71ac:	str	w4, [sp, #24]
    71b0:	ldrsw	x1, [sp, #28]
    71b4:	ldrsw	x0, [sp, #24]
    71b8:	add	x0, x1, x0
    71bc:	lsl	x0, x0, #3
    71c0:	sub	x0, x0, #0x8
    71c4:	ldr	x1, [sp, #40]
    71c8:	add	x0, x1, x0
    71cc:	str	x0, [sp, #96]
    71d0:	ldr	w0, [sp, #24]
    71d4:	cmp	w0, #0xf
    71d8:	b.gt	739c <_gcry_mpih_mul+0x208>
    71dc:	ldr	w0, [sp, #24]
    71e0:	cmp	w0, #0x0
    71e4:	b.ne	71f0 <_gcry_mpih_mul+0x5c>  // b.any
    71e8:	mov	x0, #0x0                   	// #0
    71ec:	b	73dc <_gcry_mpih_mul+0x248>
    71f0:	ldr	x0, [sp, #16]
    71f4:	ldr	x0, [x0]
    71f8:	str	x0, [sp, #88]
    71fc:	ldr	x0, [sp, #88]
    7200:	cmp	x0, #0x1
    7204:	b.hi	72a4 <_gcry_mpih_mul+0x110>  // b.pmore
    7208:	ldr	x0, [sp, #88]
    720c:	cmp	x0, #0x1
    7210:	b.ne	7264 <_gcry_mpih_mul+0xd0>  // b.any
    7214:	str	wzr, [sp, #112]
    7218:	b	7250 <_gcry_mpih_mul+0xbc>
    721c:	ldrsw	x0, [sp, #112]
    7220:	lsl	x0, x0, #3
    7224:	ldr	x1, [sp, #32]
    7228:	add	x1, x1, x0
    722c:	ldrsw	x0, [sp, #112]
    7230:	lsl	x0, x0, #3
    7234:	ldr	x2, [sp, #40]
    7238:	add	x0, x2, x0
    723c:	ldr	x1, [x1]
    7240:	str	x1, [x0]
    7244:	ldr	w0, [sp, #112]
    7248:	add	w0, w0, #0x1
    724c:	str	w0, [sp, #112]
    7250:	ldr	w1, [sp, #112]
    7254:	ldr	w0, [sp, #28]
    7258:	cmp	w1, w0
    725c:	b.lt	721c <_gcry_mpih_mul+0x88>  // b.tstop
    7260:	b	729c <_gcry_mpih_mul+0x108>
    7264:	str	wzr, [sp, #108]
    7268:	b	728c <_gcry_mpih_mul+0xf8>
    726c:	ldrsw	x0, [sp, #108]
    7270:	lsl	x0, x0, #3
    7274:	ldr	x1, [sp, #40]
    7278:	add	x0, x1, x0
    727c:	str	xzr, [x0]
    7280:	ldr	w0, [sp, #108]
    7284:	add	w0, w0, #0x1
    7288:	str	w0, [sp, #108]
    728c:	ldr	w1, [sp, #108]
    7290:	ldr	w0, [sp, #28]
    7294:	cmp	w1, w0
    7298:	b.lt	726c <_gcry_mpih_mul+0xd8>  // b.tstop
    729c:	str	xzr, [sp, #120]
    72a0:	b	72bc <_gcry_mpih_mul+0x128>
    72a4:	ldr	x3, [sp, #88]
    72a8:	ldr	w2, [sp, #28]
    72ac:	ldr	x1, [sp, #32]
    72b0:	ldr	x0, [sp, #40]
    72b4:	bl	73e4 <_gcry_mpih_mul_1>
    72b8:	str	x0, [sp, #120]
    72bc:	ldrsw	x0, [sp, #28]
    72c0:	lsl	x0, x0, #3
    72c4:	ldr	x1, [sp, #40]
    72c8:	add	x0, x1, x0
    72cc:	ldr	x1, [sp, #120]
    72d0:	str	x1, [x0]
    72d4:	ldr	x0, [sp, #40]
    72d8:	add	x0, x0, #0x8
    72dc:	str	x0, [sp, #40]
    72e0:	mov	w0, #0x1                   	// #1
    72e4:	str	w0, [sp, #116]
    72e8:	b	7384 <_gcry_mpih_mul+0x1f0>
    72ec:	ldrsw	x0, [sp, #116]
    72f0:	lsl	x0, x0, #3
    72f4:	ldr	x1, [sp, #16]
    72f8:	add	x0, x1, x0
    72fc:	ldr	x0, [x0]
    7300:	str	x0, [sp, #88]
    7304:	ldr	x0, [sp, #88]
    7308:	cmp	x0, #0x1
    730c:	b.hi	733c <_gcry_mpih_mul+0x1a8>  // b.pmore
    7310:	str	xzr, [sp, #120]
    7314:	ldr	x0, [sp, #88]
    7318:	cmp	x0, #0x1
    731c:	b.ne	7354 <_gcry_mpih_mul+0x1c0>  // b.any
    7320:	ldr	w3, [sp, #28]
    7324:	ldr	x2, [sp, #32]
    7328:	ldr	x1, [sp, #40]
    732c:	ldr	x0, [sp, #40]
    7330:	bl	79c4 <_gcry_mpih_add_n>
    7334:	str	x0, [sp, #120]
    7338:	b	7354 <_gcry_mpih_mul+0x1c0>
    733c:	ldr	x3, [sp, #88]
    7340:	ldr	w2, [sp, #28]
    7344:	ldr	x1, [sp, #32]
    7348:	ldr	x0, [sp, #40]
    734c:	bl	75a4 <_gcry_mpih_addmul_1>
    7350:	str	x0, [sp, #120]
    7354:	ldrsw	x0, [sp, #28]
    7358:	lsl	x0, x0, #3
    735c:	ldr	x1, [sp, #40]
    7360:	add	x0, x1, x0
    7364:	ldr	x1, [sp, #120]
    7368:	str	x1, [x0]
    736c:	ldr	x0, [sp, #40]
    7370:	add	x0, x0, #0x8
    7374:	str	x0, [sp, #40]
    7378:	ldr	w0, [sp, #116]
    737c:	add	w0, w0, #0x1
    7380:	str	w0, [sp, #116]
    7384:	ldr	w1, [sp, #116]
    7388:	ldr	w0, [sp, #24]
    738c:	cmp	w1, w0
    7390:	b.lt	72ec <_gcry_mpih_mul+0x158>  // b.tstop
    7394:	ldr	x0, [sp, #120]
    7398:	b	73dc <_gcry_mpih_mul+0x248>
    739c:	add	x0, sp, #0x30
    73a0:	mov	x2, #0x28                  	// #40
    73a4:	mov	w1, #0x0                   	// #0
    73a8:	bl	0 <grub_memset>
    73ac:	add	x0, sp, #0x30
    73b0:	mov	x5, x0
    73b4:	ldr	w4, [sp, #24]
    73b8:	ldr	x3, [sp, #16]
    73bc:	ldr	w2, [sp, #28]
    73c0:	ldr	x1, [sp, #32]
    73c4:	ldr	x0, [sp, #40]
    73c8:	bl	6c7c <_gcry_mpih_mul_karatsuba_case>
    73cc:	add	x0, sp, #0x30
    73d0:	bl	7090 <_gcry_mpih_release_karatsuba_ctx>
    73d4:	ldr	x0, [sp, #96]
    73d8:	ldr	x0, [x0]
    73dc:	ldp	x29, x30, [sp], #128
    73e0:	ret

00000000000073e4 <_gcry_mpih_mul_1>:
    73e4:	sub	sp, sp, #0x80
    73e8:	str	x0, [sp, #24]
    73ec:	str	x1, [sp, #16]
    73f0:	str	w2, [sp, #12]
    73f4:	str	x3, [sp]
    73f8:	ldr	w0, [sp, #12]
    73fc:	neg	w0, w0
    7400:	str	w0, [sp, #116]
    7404:	ldrsw	x0, [sp, #116]
    7408:	lsl	x0, x0, #3
    740c:	neg	x0, x0
    7410:	ldr	x1, [sp, #16]
    7414:	add	x0, x1, x0
    7418:	str	x0, [sp, #16]
    741c:	ldrsw	x0, [sp, #116]
    7420:	lsl	x0, x0, #3
    7424:	neg	x0, x0
    7428:	ldr	x1, [sp, #24]
    742c:	add	x0, x1, x0
    7430:	str	x0, [sp, #24]
    7434:	str	xzr, [sp, #120]
    7438:	ldrsw	x0, [sp, #116]
    743c:	lsl	x0, x0, #3
    7440:	ldr	x1, [sp, #16]
    7444:	add	x0, x1, x0
    7448:	ldr	x0, [x0]
    744c:	str	x0, [sp, #96]
    7450:	ldr	x0, [sp]
    7454:	str	x0, [sp, #88]
    7458:	ldr	x0, [sp, #96]
    745c:	str	w0, [sp, #84]
    7460:	ldr	x0, [sp, #96]
    7464:	lsr	x0, x0, #32
    7468:	str	w0, [sp, #80]
    746c:	ldr	x0, [sp, #88]
    7470:	str	w0, [sp, #76]
    7474:	ldr	x0, [sp, #88]
    7478:	lsr	x0, x0, #32
    747c:	str	w0, [sp, #72]
    7480:	ldr	w1, [sp, #84]
    7484:	ldr	w0, [sp, #76]
    7488:	mul	x0, x1, x0
    748c:	str	x0, [sp, #64]
    7490:	ldr	w1, [sp, #84]
    7494:	ldr	w0, [sp, #72]
    7498:	mul	x0, x1, x0
    749c:	str	x0, [sp, #56]
    74a0:	ldr	w1, [sp, #80]
    74a4:	ldr	w0, [sp, #76]
    74a8:	mul	x0, x1, x0
    74ac:	str	x0, [sp, #48]
    74b0:	ldr	w1, [sp, #80]
    74b4:	ldr	w0, [sp, #72]
    74b8:	mul	x0, x1, x0
    74bc:	str	x0, [sp, #104]
    74c0:	ldr	x0, [sp, #64]
    74c4:	lsr	x0, x0, #32
    74c8:	ldr	x1, [sp, #56]
    74cc:	add	x0, x1, x0
    74d0:	str	x0, [sp, #56]
    74d4:	ldr	x1, [sp, #56]
    74d8:	ldr	x0, [sp, #48]
    74dc:	add	x0, x1, x0
    74e0:	str	x0, [sp, #56]
    74e4:	ldr	x1, [sp, #56]
    74e8:	ldr	x0, [sp, #48]
    74ec:	cmp	x1, x0
    74f0:	b.cs	7504 <_gcry_mpih_mul_1+0x120>  // b.hs, b.nlast
    74f4:	ldr	x1, [sp, #104]
    74f8:	mov	x0, #0x100000000           	// #4294967296
    74fc:	add	x0, x1, x0
    7500:	str	x0, [sp, #104]
    7504:	ldr	x0, [sp, #56]
    7508:	lsr	x0, x0, #32
    750c:	ldr	x1, [sp, #104]
    7510:	add	x0, x1, x0
    7514:	str	x0, [sp, #40]
    7518:	ldr	x0, [sp, #56]
    751c:	lsl	x1, x0, #32
    7520:	ldr	x0, [sp, #64]
    7524:	and	x0, x0, #0xffffffff
    7528:	add	x0, x1, x0
    752c:	str	x0, [sp, #32]
    7530:	ldr	x1, [sp, #32]
    7534:	ldr	x0, [sp, #120]
    7538:	add	x0, x1, x0
    753c:	str	x0, [sp, #32]
    7540:	ldr	x1, [sp, #32]
    7544:	ldr	x0, [sp, #120]
    7548:	cmp	x1, x0
    754c:	b.cs	7558 <_gcry_mpih_mul_1+0x174>  // b.hs, b.nlast
    7550:	mov	x0, #0x1                   	// #1
    7554:	b	755c <_gcry_mpih_mul_1+0x178>
    7558:	mov	x0, #0x0                   	// #0
    755c:	ldr	x1, [sp, #40]
    7560:	add	x0, x0, x1
    7564:	str	x0, [sp, #120]
    7568:	ldrsw	x0, [sp, #116]
    756c:	lsl	x0, x0, #3
    7570:	ldr	x1, [sp, #24]
    7574:	add	x0, x1, x0
    7578:	ldr	x1, [sp, #32]
    757c:	str	x1, [x0]
    7580:	ldr	w0, [sp, #116]
    7584:	add	w0, w0, #0x1
    7588:	str	w0, [sp, #116]
    758c:	ldr	w0, [sp, #116]
    7590:	cmp	w0, #0x0
    7594:	b.ne	7438 <_gcry_mpih_mul_1+0x54>  // b.any
    7598:	ldr	x0, [sp, #120]
    759c:	add	sp, sp, #0x80
    75a0:	ret

00000000000075a4 <_gcry_mpih_addmul_1>:
    75a4:	sub	sp, sp, #0x90
    75a8:	str	x0, [sp, #24]
    75ac:	str	x1, [sp, #16]
    75b0:	str	w2, [sp, #12]
    75b4:	str	x3, [sp]
    75b8:	ldr	w0, [sp, #12]
    75bc:	neg	w0, w0
    75c0:	str	w0, [sp, #132]
    75c4:	ldrsw	x0, [sp, #132]
    75c8:	lsl	x0, x0, #3
    75cc:	neg	x0, x0
    75d0:	ldr	x1, [sp, #24]
    75d4:	add	x0, x1, x0
    75d8:	str	x0, [sp, #24]
    75dc:	ldrsw	x0, [sp, #132]
    75e0:	lsl	x0, x0, #3
    75e4:	neg	x0, x0
    75e8:	ldr	x1, [sp, #16]
    75ec:	add	x0, x1, x0
    75f0:	str	x0, [sp, #16]
    75f4:	str	xzr, [sp, #136]
    75f8:	ldrsw	x0, [sp, #132]
    75fc:	lsl	x0, x0, #3
    7600:	ldr	x1, [sp, #16]
    7604:	add	x0, x1, x0
    7608:	ldr	x0, [x0]
    760c:	str	x0, [sp, #112]
    7610:	ldr	x0, [sp]
    7614:	str	x0, [sp, #104]
    7618:	ldr	x0, [sp, #112]
    761c:	str	w0, [sp, #100]
    7620:	ldr	x0, [sp, #112]
    7624:	lsr	x0, x0, #32
    7628:	str	w0, [sp, #96]
    762c:	ldr	x0, [sp, #104]
    7630:	str	w0, [sp, #92]
    7634:	ldr	x0, [sp, #104]
    7638:	lsr	x0, x0, #32
    763c:	str	w0, [sp, #88]
    7640:	ldr	w1, [sp, #100]
    7644:	ldr	w0, [sp, #92]
    7648:	mul	x0, x1, x0
    764c:	str	x0, [sp, #80]
    7650:	ldr	w1, [sp, #100]
    7654:	ldr	w0, [sp, #88]
    7658:	mul	x0, x1, x0
    765c:	str	x0, [sp, #72]
    7660:	ldr	w1, [sp, #96]
    7664:	ldr	w0, [sp, #92]
    7668:	mul	x0, x1, x0
    766c:	str	x0, [sp, #64]
    7670:	ldr	w1, [sp, #96]
    7674:	ldr	w0, [sp, #88]
    7678:	mul	x0, x1, x0
    767c:	str	x0, [sp, #120]
    7680:	ldr	x0, [sp, #80]
    7684:	lsr	x0, x0, #32
    7688:	ldr	x1, [sp, #72]
    768c:	add	x0, x1, x0
    7690:	str	x0, [sp, #72]
    7694:	ldr	x1, [sp, #72]
    7698:	ldr	x0, [sp, #64]
    769c:	add	x0, x1, x0
    76a0:	str	x0, [sp, #72]
    76a4:	ldr	x1, [sp, #72]
    76a8:	ldr	x0, [sp, #64]
    76ac:	cmp	x1, x0
    76b0:	b.cs	76c4 <_gcry_mpih_addmul_1+0x120>  // b.hs, b.nlast
    76b4:	ldr	x1, [sp, #120]
    76b8:	mov	x0, #0x100000000           	// #4294967296
    76bc:	add	x0, x1, x0
    76c0:	str	x0, [sp, #120]
    76c4:	ldr	x0, [sp, #72]
    76c8:	lsr	x0, x0, #32
    76cc:	ldr	x1, [sp, #120]
    76d0:	add	x0, x1, x0
    76d4:	str	x0, [sp, #56]
    76d8:	ldr	x0, [sp, #72]
    76dc:	lsl	x1, x0, #32
    76e0:	ldr	x0, [sp, #80]
    76e4:	and	x0, x0, #0xffffffff
    76e8:	add	x0, x1, x0
    76ec:	str	x0, [sp, #48]
    76f0:	ldr	x1, [sp, #48]
    76f4:	ldr	x0, [sp, #136]
    76f8:	add	x0, x1, x0
    76fc:	str	x0, [sp, #48]
    7700:	ldr	x1, [sp, #48]
    7704:	ldr	x0, [sp, #136]
    7708:	cmp	x1, x0
    770c:	b.cs	7718 <_gcry_mpih_addmul_1+0x174>  // b.hs, b.nlast
    7710:	mov	x0, #0x1                   	// #1
    7714:	b	771c <_gcry_mpih_addmul_1+0x178>
    7718:	mov	x0, #0x0                   	// #0
    771c:	ldr	x1, [sp, #56]
    7720:	add	x0, x0, x1
    7724:	str	x0, [sp, #136]
    7728:	ldrsw	x0, [sp, #132]
    772c:	lsl	x0, x0, #3
    7730:	ldr	x1, [sp, #24]
    7734:	add	x0, x1, x0
    7738:	ldr	x0, [x0]
    773c:	str	x0, [sp, #40]
    7740:	ldr	x1, [sp, #48]
    7744:	ldr	x0, [sp, #40]
    7748:	add	x0, x1, x0
    774c:	str	x0, [sp, #48]
    7750:	ldr	x1, [sp, #48]
    7754:	ldr	x0, [sp, #40]
    7758:	cmp	x1, x0
    775c:	b.cs	7768 <_gcry_mpih_addmul_1+0x1c4>  // b.hs, b.nlast
    7760:	mov	x0, #0x1                   	// #1
    7764:	b	776c <_gcry_mpih_addmul_1+0x1c8>
    7768:	mov	x0, #0x0                   	// #0
    776c:	ldr	x1, [sp, #136]
    7770:	add	x0, x1, x0
    7774:	str	x0, [sp, #136]
    7778:	ldrsw	x0, [sp, #132]
    777c:	lsl	x0, x0, #3
    7780:	ldr	x1, [sp, #24]
    7784:	add	x0, x1, x0
    7788:	ldr	x1, [sp, #48]
    778c:	str	x1, [x0]
    7790:	ldr	w0, [sp, #132]
    7794:	add	w0, w0, #0x1
    7798:	str	w0, [sp, #132]
    779c:	ldr	w0, [sp, #132]
    77a0:	cmp	w0, #0x0
    77a4:	b.ne	75f8 <_gcry_mpih_addmul_1+0x54>  // b.any
    77a8:	ldr	x0, [sp, #136]
    77ac:	add	sp, sp, #0x90
    77b0:	ret

00000000000077b4 <_gcry_mpih_submul_1>:
    77b4:	sub	sp, sp, #0x90
    77b8:	str	x0, [sp, #24]
    77bc:	str	x1, [sp, #16]
    77c0:	str	w2, [sp, #12]
    77c4:	str	x3, [sp]
    77c8:	ldr	w0, [sp, #12]
    77cc:	neg	w0, w0
    77d0:	str	w0, [sp, #132]
    77d4:	ldrsw	x0, [sp, #132]
    77d8:	lsl	x0, x0, #3
    77dc:	neg	x0, x0
    77e0:	ldr	x1, [sp, #24]
    77e4:	add	x0, x1, x0
    77e8:	str	x0, [sp, #24]
    77ec:	ldrsw	x0, [sp, #132]
    77f0:	lsl	x0, x0, #3
    77f4:	neg	x0, x0
    77f8:	ldr	x1, [sp, #16]
    77fc:	add	x0, x1, x0
    7800:	str	x0, [sp, #16]
    7804:	str	xzr, [sp, #136]
    7808:	ldrsw	x0, [sp, #132]
    780c:	lsl	x0, x0, #3
    7810:	ldr	x1, [sp, #16]
    7814:	add	x0, x1, x0
    7818:	ldr	x0, [x0]
    781c:	str	x0, [sp, #112]
    7820:	ldr	x0, [sp]
    7824:	str	x0, [sp, #104]
    7828:	ldr	x0, [sp, #112]
    782c:	str	w0, [sp, #100]
    7830:	ldr	x0, [sp, #112]
    7834:	lsr	x0, x0, #32
    7838:	str	w0, [sp, #96]
    783c:	ldr	x0, [sp, #104]
    7840:	str	w0, [sp, #92]
    7844:	ldr	x0, [sp, #104]
    7848:	lsr	x0, x0, #32
    784c:	str	w0, [sp, #88]
    7850:	ldr	w1, [sp, #100]
    7854:	ldr	w0, [sp, #92]
    7858:	mul	x0, x1, x0
    785c:	str	x0, [sp, #80]
    7860:	ldr	w1, [sp, #100]
    7864:	ldr	w0, [sp, #88]
    7868:	mul	x0, x1, x0
    786c:	str	x0, [sp, #72]
    7870:	ldr	w1, [sp, #96]
    7874:	ldr	w0, [sp, #92]
    7878:	mul	x0, x1, x0
    787c:	str	x0, [sp, #64]
    7880:	ldr	w1, [sp, #96]
    7884:	ldr	w0, [sp, #88]
    7888:	mul	x0, x1, x0
    788c:	str	x0, [sp, #120]
    7890:	ldr	x0, [sp, #80]
    7894:	lsr	x0, x0, #32
    7898:	ldr	x1, [sp, #72]
    789c:	add	x0, x1, x0
    78a0:	str	x0, [sp, #72]
    78a4:	ldr	x1, [sp, #72]
    78a8:	ldr	x0, [sp, #64]
    78ac:	add	x0, x1, x0
    78b0:	str	x0, [sp, #72]
    78b4:	ldr	x1, [sp, #72]
    78b8:	ldr	x0, [sp, #64]
    78bc:	cmp	x1, x0
    78c0:	b.cs	78d4 <_gcry_mpih_submul_1+0x120>  // b.hs, b.nlast
    78c4:	ldr	x1, [sp, #120]
    78c8:	mov	x0, #0x100000000           	// #4294967296
    78cc:	add	x0, x1, x0
    78d0:	str	x0, [sp, #120]
    78d4:	ldr	x0, [sp, #72]
    78d8:	lsr	x0, x0, #32
    78dc:	ldr	x1, [sp, #120]
    78e0:	add	x0, x1, x0
    78e4:	str	x0, [sp, #56]
    78e8:	ldr	x0, [sp, #72]
    78ec:	lsl	x1, x0, #32
    78f0:	ldr	x0, [sp, #80]
    78f4:	and	x0, x0, #0xffffffff
    78f8:	add	x0, x1, x0
    78fc:	str	x0, [sp, #48]
    7900:	ldr	x1, [sp, #48]
    7904:	ldr	x0, [sp, #136]
    7908:	add	x0, x1, x0
    790c:	str	x0, [sp, #48]
    7910:	ldr	x1, [sp, #48]
    7914:	ldr	x0, [sp, #136]
    7918:	cmp	x1, x0
    791c:	b.cs	7928 <_gcry_mpih_submul_1+0x174>  // b.hs, b.nlast
    7920:	mov	x0, #0x1                   	// #1
    7924:	b	792c <_gcry_mpih_submul_1+0x178>
    7928:	mov	x0, #0x0                   	// #0
    792c:	ldr	x1, [sp, #56]
    7930:	add	x0, x0, x1
    7934:	str	x0, [sp, #136]
    7938:	ldrsw	x0, [sp, #132]
    793c:	lsl	x0, x0, #3
    7940:	ldr	x1, [sp, #24]
    7944:	add	x0, x1, x0
    7948:	ldr	x0, [x0]
    794c:	str	x0, [sp, #40]
    7950:	ldr	x1, [sp, #40]
    7954:	ldr	x0, [sp, #48]
    7958:	sub	x0, x1, x0
    795c:	str	x0, [sp, #48]
    7960:	ldr	x1, [sp, #48]
    7964:	ldr	x0, [sp, #40]
    7968:	cmp	x1, x0
    796c:	b.ls	7978 <_gcry_mpih_submul_1+0x1c4>  // b.plast
    7970:	mov	x0, #0x1                   	// #1
    7974:	b	797c <_gcry_mpih_submul_1+0x1c8>
    7978:	mov	x0, #0x0                   	// #0
    797c:	ldr	x1, [sp, #136]
    7980:	add	x0, x1, x0
    7984:	str	x0, [sp, #136]
    7988:	ldrsw	x0, [sp, #132]
    798c:	lsl	x0, x0, #3
    7990:	ldr	x1, [sp, #24]
    7994:	add	x0, x1, x0
    7998:	ldr	x1, [sp, #48]
    799c:	str	x1, [x0]
    79a0:	ldr	w0, [sp, #132]
    79a4:	add	w0, w0, #0x1
    79a8:	str	w0, [sp, #132]
    79ac:	ldr	w0, [sp, #132]
    79b0:	cmp	w0, #0x0
    79b4:	b.ne	7808 <_gcry_mpih_submul_1+0x54>  // b.any
    79b8:	ldr	x0, [sp, #136]
    79bc:	add	sp, sp, #0x90
    79c0:	ret

00000000000079c4 <_gcry_mpih_add_n>:
    79c4:	sub	sp, sp, #0x40
    79c8:	str	x0, [sp, #24]
    79cc:	str	x1, [sp, #16]
    79d0:	str	x2, [sp, #8]
    79d4:	str	w3, [sp, #4]
    79d8:	ldr	w0, [sp, #4]
    79dc:	neg	w0, w0
    79e0:	str	w0, [sp, #52]
    79e4:	ldrsw	x0, [sp, #52]
    79e8:	lsl	x0, x0, #3
    79ec:	neg	x0, x0
    79f0:	ldr	x1, [sp, #16]
    79f4:	add	x0, x1, x0
    79f8:	str	x0, [sp, #16]
    79fc:	ldrsw	x0, [sp, #52]
    7a00:	lsl	x0, x0, #3
    7a04:	neg	x0, x0
    7a08:	ldr	x1, [sp, #8]
    7a0c:	add	x0, x1, x0
    7a10:	str	x0, [sp, #8]
    7a14:	ldrsw	x0, [sp, #52]
    7a18:	lsl	x0, x0, #3
    7a1c:	neg	x0, x0
    7a20:	ldr	x1, [sp, #24]
    7a24:	add	x0, x1, x0
    7a28:	str	x0, [sp, #24]
    7a2c:	str	xzr, [sp, #56]
    7a30:	ldrsw	x0, [sp, #52]
    7a34:	lsl	x0, x0, #3
    7a38:	ldr	x1, [sp, #8]
    7a3c:	add	x0, x1, x0
    7a40:	ldr	x0, [x0]
    7a44:	str	x0, [sp, #40]
    7a48:	ldrsw	x0, [sp, #52]
    7a4c:	lsl	x0, x0, #3
    7a50:	ldr	x1, [sp, #16]
    7a54:	add	x0, x1, x0
    7a58:	ldr	x0, [x0]
    7a5c:	str	x0, [sp, #32]
    7a60:	ldr	x1, [sp, #40]
    7a64:	ldr	x0, [sp, #56]
    7a68:	add	x0, x1, x0
    7a6c:	str	x0, [sp, #40]
    7a70:	ldr	x1, [sp, #40]
    7a74:	ldr	x0, [sp, #56]
    7a78:	cmp	x1, x0
    7a7c:	cset	w0, cc  // cc = lo, ul, last
    7a80:	and	w0, w0, #0xff
    7a84:	and	x0, x0, #0xff
    7a88:	str	x0, [sp, #56]
    7a8c:	ldr	x1, [sp, #40]
    7a90:	ldr	x0, [sp, #32]
    7a94:	add	x0, x1, x0
    7a98:	str	x0, [sp, #40]
    7a9c:	ldr	x1, [sp, #40]
    7aa0:	ldr	x0, [sp, #32]
    7aa4:	cmp	x1, x0
    7aa8:	cset	w0, cc  // cc = lo, ul, last
    7aac:	and	w0, w0, #0xff
    7ab0:	and	x0, x0, #0xff
    7ab4:	ldr	x1, [sp, #56]
    7ab8:	add	x0, x1, x0
    7abc:	str	x0, [sp, #56]
    7ac0:	ldrsw	x0, [sp, #52]
    7ac4:	lsl	x0, x0, #3
    7ac8:	ldr	x1, [sp, #24]
    7acc:	add	x0, x1, x0
    7ad0:	ldr	x1, [sp, #40]
    7ad4:	str	x1, [x0]
    7ad8:	ldr	w0, [sp, #52]
    7adc:	add	w0, w0, #0x1
    7ae0:	str	w0, [sp, #52]
    7ae4:	ldr	w0, [sp, #52]
    7ae8:	cmp	w0, #0x0
    7aec:	b.ne	7a30 <_gcry_mpih_add_n+0x6c>  // b.any
    7af0:	ldr	x0, [sp, #56]
    7af4:	add	sp, sp, #0x40
    7af8:	ret

0000000000007afc <_gcry_mpih_sub_n>:
    7afc:	sub	sp, sp, #0x40
    7b00:	str	x0, [sp, #24]
    7b04:	str	x1, [sp, #16]
    7b08:	str	x2, [sp, #8]
    7b0c:	str	w3, [sp, #4]
    7b10:	ldr	w0, [sp, #4]
    7b14:	neg	w0, w0
    7b18:	str	w0, [sp, #52]
    7b1c:	ldrsw	x0, [sp, #52]
    7b20:	lsl	x0, x0, #3
    7b24:	neg	x0, x0
    7b28:	ldr	x1, [sp, #16]
    7b2c:	add	x0, x1, x0
    7b30:	str	x0, [sp, #16]
    7b34:	ldrsw	x0, [sp, #52]
    7b38:	lsl	x0, x0, #3
    7b3c:	neg	x0, x0
    7b40:	ldr	x1, [sp, #8]
    7b44:	add	x0, x1, x0
    7b48:	str	x0, [sp, #8]
    7b4c:	ldrsw	x0, [sp, #52]
    7b50:	lsl	x0, x0, #3
    7b54:	neg	x0, x0
    7b58:	ldr	x1, [sp, #24]
    7b5c:	add	x0, x1, x0
    7b60:	str	x0, [sp, #24]
    7b64:	str	xzr, [sp, #56]
    7b68:	ldrsw	x0, [sp, #52]
    7b6c:	lsl	x0, x0, #3
    7b70:	ldr	x1, [sp, #8]
    7b74:	add	x0, x1, x0
    7b78:	ldr	x0, [x0]
    7b7c:	str	x0, [sp, #40]
    7b80:	ldrsw	x0, [sp, #52]
    7b84:	lsl	x0, x0, #3
    7b88:	ldr	x1, [sp, #16]
    7b8c:	add	x0, x1, x0
    7b90:	ldr	x0, [x0]
    7b94:	str	x0, [sp, #32]
    7b98:	ldr	x1, [sp, #40]
    7b9c:	ldr	x0, [sp, #56]
    7ba0:	add	x0, x1, x0
    7ba4:	str	x0, [sp, #40]
    7ba8:	ldr	x1, [sp, #40]
    7bac:	ldr	x0, [sp, #56]
    7bb0:	cmp	x1, x0
    7bb4:	cset	w0, cc  // cc = lo, ul, last
    7bb8:	and	w0, w0, #0xff
    7bbc:	and	x0, x0, #0xff
    7bc0:	str	x0, [sp, #56]
    7bc4:	ldr	x1, [sp, #32]
    7bc8:	ldr	x0, [sp, #40]
    7bcc:	sub	x0, x1, x0
    7bd0:	str	x0, [sp, #40]
    7bd4:	ldr	x1, [sp, #40]
    7bd8:	ldr	x0, [sp, #32]
    7bdc:	cmp	x1, x0
    7be0:	cset	w0, hi  // hi = pmore
    7be4:	and	w0, w0, #0xff
    7be8:	and	x0, x0, #0xff
    7bec:	ldr	x1, [sp, #56]
    7bf0:	add	x0, x1, x0
    7bf4:	str	x0, [sp, #56]
    7bf8:	ldrsw	x0, [sp, #52]
    7bfc:	lsl	x0, x0, #3
    7c00:	ldr	x1, [sp, #24]
    7c04:	add	x0, x1, x0
    7c08:	ldr	x1, [sp, #40]
    7c0c:	str	x1, [x0]
    7c10:	ldr	w0, [sp, #52]
    7c14:	add	w0, w0, #0x1
    7c18:	str	w0, [sp, #52]
    7c1c:	ldr	w0, [sp, #52]
    7c20:	cmp	w0, #0x0
    7c24:	b.ne	7b68 <_gcry_mpih_sub_n+0x6c>  // b.any
    7c28:	ldr	x0, [sp, #56]
    7c2c:	add	sp, sp, #0x40
    7c30:	ret
    7c34:	nop

0000000000007c38 <_gcry_mpih_mod_1>:
    7c38:	sub	sp, sp, #0x110
    7c3c:	str	x0, [sp, #24]
    7c40:	str	w1, [sp, #20]
    7c44:	str	x2, [sp, #8]
    7c48:	ldr	w0, [sp, #20]
    7c4c:	cmp	w0, #0x0
    7c50:	b.ne	7c5c <_gcry_mpih_mod_1+0x24>  // b.any
    7c54:	mov	x0, #0x0                   	// #0
    7c58:	b	839c <_gcry_mpih_mod_1+0x764>
    7c5c:	ldr	x0, [sp, #8]
    7c60:	str	x0, [sp, #48]
    7c64:	mov	x0, #0x38                  	// #56
    7c68:	str	x0, [sp, #40]
    7c6c:	b	7c98 <_gcry_mpih_mod_1+0x60>
    7c70:	ldr	x0, [sp, #40]
    7c74:	mov	w1, w0
    7c78:	ldr	x0, [sp, #48]
    7c7c:	lsr	x0, x0, x1
    7c80:	and	x0, x0, #0xff
    7c84:	cmp	x0, #0x0
    7c88:	b.ne	7ca8 <_gcry_mpih_mod_1+0x70>  // b.any
    7c8c:	ldr	x0, [sp, #40]
    7c90:	sub	x0, x0, #0x8
    7c94:	str	x0, [sp, #40]
    7c98:	ldr	x0, [sp, #40]
    7c9c:	cmp	x0, #0x0
    7ca0:	b.ne	7c70 <_gcry_mpih_mod_1+0x38>  // b.any
    7ca4:	b	7cac <_gcry_mpih_mod_1+0x74>
    7ca8:	nop
    7cac:	ldr	x0, [sp, #40]
    7cb0:	mov	w1, w0
    7cb4:	ldr	x0, [sp, #48]
    7cb8:	lsr	x0, x0, x1
    7cbc:	adrp	x1, 0 <grub_memcpy>
    7cc0:	add	x1, x1, #0x0
    7cc4:	ldr	x1, [x1]
    7cc8:	ldrb	w0, [x1, x0]
    7ccc:	mov	w1, w0
    7cd0:	ldr	x0, [sp, #40]
    7cd4:	add	w0, w1, w0
    7cd8:	mov	w1, #0x40                  	// #64
    7cdc:	sub	w0, w1, w0
    7ce0:	str	w0, [sp, #76]
    7ce4:	ldr	w0, [sp, #76]
    7ce8:	cmp	w0, #0x0
    7cec:	b.eq	815c <_gcry_mpih_mod_1+0x524>  // b.none
    7cf0:	ldr	w0, [sp, #76]
    7cf4:	ldr	x1, [sp, #8]
    7cf8:	lsl	x0, x1, x0
    7cfc:	str	x0, [sp, #8]
    7d00:	ldrsw	x0, [sp, #20]
    7d04:	lsl	x0, x0, #3
    7d08:	sub	x0, x0, #0x8
    7d0c:	ldr	x1, [sp, #24]
    7d10:	add	x0, x1, x0
    7d14:	ldr	x0, [x0]
    7d18:	str	x0, [sp, #232]
    7d1c:	mov	w1, #0x40                  	// #64
    7d20:	ldr	w0, [sp, #76]
    7d24:	sub	w0, w1, w0
    7d28:	ldr	x1, [sp, #232]
    7d2c:	lsr	x0, x1, x0
    7d30:	str	x0, [sp, #240]
    7d34:	ldr	w0, [sp, #20]
    7d38:	sub	w0, w0, #0x2
    7d3c:	str	w0, [sp, #228]
    7d40:	b	7f70 <_gcry_mpih_mod_1+0x338>
    7d44:	ldrsw	x0, [sp, #228]
    7d48:	lsl	x0, x0, #3
    7d4c:	ldr	x1, [sp, #24]
    7d50:	add	x0, x1, x0
    7d54:	ldr	x0, [x0]
    7d58:	str	x0, [sp, #184]
    7d5c:	ldr	x0, [sp, #8]
    7d60:	lsr	x0, x0, #32
    7d64:	str	x0, [sp, #176]
    7d68:	ldr	x0, [sp, #8]
    7d6c:	and	x0, x0, #0xffffffff
    7d70:	str	x0, [sp, #192]
    7d74:	ldr	x0, [sp, #240]
    7d78:	ldr	x1, [sp, #176]
    7d7c:	udiv	x2, x0, x1
    7d80:	ldr	x1, [sp, #176]
    7d84:	mul	x1, x2, x1
    7d88:	sub	x0, x0, x1
    7d8c:	str	x0, [sp, #200]
    7d90:	ldr	x1, [sp, #240]
    7d94:	ldr	x0, [sp, #176]
    7d98:	udiv	x0, x1, x0
    7d9c:	str	x0, [sp, #216]
    7da0:	ldr	x1, [sp, #216]
    7da4:	ldr	x0, [sp, #192]
    7da8:	mul	x0, x1, x0
    7dac:	str	x0, [sp, #208]
    7db0:	ldr	x0, [sp, #200]
    7db4:	lsl	x1, x0, #32
    7db8:	ldr	w0, [sp, #76]
    7dbc:	ldr	x2, [sp, #232]
    7dc0:	lsl	x2, x2, x0
    7dc4:	mov	w3, #0x40                  	// #64
    7dc8:	ldr	w0, [sp, #76]
    7dcc:	sub	w0, w3, w0
    7dd0:	ldr	x3, [sp, #184]
    7dd4:	lsr	x0, x3, x0
    7dd8:	orr	x0, x2, x0
    7ddc:	lsr	x0, x0, #32
    7de0:	orr	x0, x1, x0
    7de4:	str	x0, [sp, #200]
    7de8:	ldr	x1, [sp, #200]
    7dec:	ldr	x0, [sp, #208]
    7df0:	cmp	x1, x0
    7df4:	b.cs	7e50 <_gcry_mpih_mod_1+0x218>  // b.hs, b.nlast
    7df8:	ldr	x0, [sp, #216]
    7dfc:	sub	x0, x0, #0x1
    7e00:	str	x0, [sp, #216]
    7e04:	ldr	x1, [sp, #200]
    7e08:	ldr	x0, [sp, #8]
    7e0c:	add	x0, x1, x0
    7e10:	str	x0, [sp, #200]
    7e14:	ldr	x1, [sp, #200]
    7e18:	ldr	x0, [sp, #8]
    7e1c:	cmp	x1, x0
    7e20:	b.cc	7e50 <_gcry_mpih_mod_1+0x218>  // b.lo, b.ul, b.last
    7e24:	ldr	x1, [sp, #200]
    7e28:	ldr	x0, [sp, #208]
    7e2c:	cmp	x1, x0
    7e30:	b.cs	7e50 <_gcry_mpih_mod_1+0x218>  // b.hs, b.nlast
    7e34:	ldr	x0, [sp, #216]
    7e38:	sub	x0, x0, #0x1
    7e3c:	str	x0, [sp, #216]
    7e40:	ldr	x1, [sp, #200]
    7e44:	ldr	x0, [sp, #8]
    7e48:	add	x0, x1, x0
    7e4c:	str	x0, [sp, #200]
    7e50:	ldr	x1, [sp, #200]
    7e54:	ldr	x0, [sp, #208]
    7e58:	sub	x0, x1, x0
    7e5c:	str	x0, [sp, #200]
    7e60:	ldr	x0, [sp, #200]
    7e64:	ldr	x1, [sp, #176]
    7e68:	udiv	x2, x0, x1
    7e6c:	ldr	x1, [sp, #176]
    7e70:	mul	x1, x2, x1
    7e74:	sub	x0, x0, x1
    7e78:	str	x0, [sp, #256]
    7e7c:	ldr	x1, [sp, #200]
    7e80:	ldr	x0, [sp, #176]
    7e84:	udiv	x0, x1, x0
    7e88:	str	x0, [sp, #264]
    7e8c:	ldr	x1, [sp, #264]
    7e90:	ldr	x0, [sp, #192]
    7e94:	mul	x0, x1, x0
    7e98:	str	x0, [sp, #208]
    7e9c:	ldr	x0, [sp, #256]
    7ea0:	lsl	x1, x0, #32
    7ea4:	ldr	w0, [sp, #76]
    7ea8:	ldr	x2, [sp, #232]
    7eac:	lsl	x2, x2, x0
    7eb0:	mov	w3, #0x40                  	// #64
    7eb4:	ldr	w0, [sp, #76]
    7eb8:	sub	w0, w3, w0
    7ebc:	ldr	x3, [sp, #184]
    7ec0:	lsr	x0, x3, x0
    7ec4:	orr	x0, x2, x0
    7ec8:	and	x0, x0, #0xffffffff
    7ecc:	orr	x0, x1, x0
    7ed0:	str	x0, [sp, #256]
    7ed4:	ldr	x1, [sp, #256]
    7ed8:	ldr	x0, [sp, #208]
    7edc:	cmp	x1, x0
    7ee0:	b.cs	7f3c <_gcry_mpih_mod_1+0x304>  // b.hs, b.nlast
    7ee4:	ldr	x0, [sp, #264]
    7ee8:	sub	x0, x0, #0x1
    7eec:	str	x0, [sp, #264]
    7ef0:	ldr	x1, [sp, #256]
    7ef4:	ldr	x0, [sp, #8]
    7ef8:	add	x0, x1, x0
    7efc:	str	x0, [sp, #256]
    7f00:	ldr	x1, [sp, #256]
    7f04:	ldr	x0, [sp, #8]
    7f08:	cmp	x1, x0
    7f0c:	b.cc	7f3c <_gcry_mpih_mod_1+0x304>  // b.lo, b.ul, b.last
    7f10:	ldr	x1, [sp, #256]
    7f14:	ldr	x0, [sp, #208]
    7f18:	cmp	x1, x0
    7f1c:	b.cs	7f3c <_gcry_mpih_mod_1+0x304>  // b.hs, b.nlast
    7f20:	ldr	x0, [sp, #264]
    7f24:	sub	x0, x0, #0x1
    7f28:	str	x0, [sp, #264]
    7f2c:	ldr	x1, [sp, #256]
    7f30:	ldr	x0, [sp, #8]
    7f34:	add	x0, x1, x0
    7f38:	str	x0, [sp, #256]
    7f3c:	ldr	x1, [sp, #256]
    7f40:	ldr	x0, [sp, #208]
    7f44:	sub	x0, x1, x0
    7f48:	str	x0, [sp, #256]
    7f4c:	ldr	x0, [sp, #264]
    7f50:	str	w0, [sp, #252]
    7f54:	ldr	x0, [sp, #256]
    7f58:	str	x0, [sp, #240]
    7f5c:	ldr	x0, [sp, #184]
    7f60:	str	x0, [sp, #232]
    7f64:	ldr	w0, [sp, #228]
    7f68:	sub	w0, w0, #0x1
    7f6c:	str	w0, [sp, #228]
    7f70:	ldr	w0, [sp, #228]
    7f74:	cmp	w0, #0x0
    7f78:	b.ge	7d44 <_gcry_mpih_mod_1+0x10c>  // b.tcont
    7f7c:	ldr	x0, [sp, #8]
    7f80:	lsr	x0, x0, #32
    7f84:	str	x0, [sp, #144]
    7f88:	ldr	x0, [sp, #8]
    7f8c:	and	x0, x0, #0xffffffff
    7f90:	str	x0, [sp, #136]
    7f94:	ldr	x0, [sp, #240]
    7f98:	ldr	x1, [sp, #144]
    7f9c:	udiv	x2, x0, x1
    7fa0:	ldr	x1, [sp, #144]
    7fa4:	mul	x1, x2, x1
    7fa8:	sub	x0, x0, x1
    7fac:	str	x0, [sp, #128]
    7fb0:	ldr	x1, [sp, #240]
    7fb4:	ldr	x0, [sp, #144]
    7fb8:	udiv	x0, x1, x0
    7fbc:	str	x0, [sp, #120]
    7fc0:	ldr	x1, [sp, #120]
    7fc4:	ldr	x0, [sp, #136]
    7fc8:	mul	x0, x1, x0
    7fcc:	str	x0, [sp, #160]
    7fd0:	ldr	x0, [sp, #128]
    7fd4:	lsl	x1, x0, #32
    7fd8:	ldr	w0, [sp, #76]
    7fdc:	ldr	x2, [sp, #232]
    7fe0:	lsl	x0, x2, x0
    7fe4:	lsr	x0, x0, #32
    7fe8:	orr	x0, x1, x0
    7fec:	str	x0, [sp, #128]
    7ff0:	ldr	x1, [sp, #128]
    7ff4:	ldr	x0, [sp, #160]
    7ff8:	cmp	x1, x0
    7ffc:	b.cs	8058 <_gcry_mpih_mod_1+0x420>  // b.hs, b.nlast
    8000:	ldr	x0, [sp, #120]
    8004:	sub	x0, x0, #0x1
    8008:	str	x0, [sp, #120]
    800c:	ldr	x1, [sp, #128]
    8010:	ldr	x0, [sp, #8]
    8014:	add	x0, x1, x0
    8018:	str	x0, [sp, #128]
    801c:	ldr	x1, [sp, #128]
    8020:	ldr	x0, [sp, #8]
    8024:	cmp	x1, x0
    8028:	b.cc	8058 <_gcry_mpih_mod_1+0x420>  // b.lo, b.ul, b.last
    802c:	ldr	x1, [sp, #128]
    8030:	ldr	x0, [sp, #160]
    8034:	cmp	x1, x0
    8038:	b.cs	8058 <_gcry_mpih_mod_1+0x420>  // b.hs, b.nlast
    803c:	ldr	x0, [sp, #120]
    8040:	sub	x0, x0, #0x1
    8044:	str	x0, [sp, #120]
    8048:	ldr	x1, [sp, #128]
    804c:	ldr	x0, [sp, #8]
    8050:	add	x0, x1, x0
    8054:	str	x0, [sp, #128]
    8058:	ldr	x1, [sp, #128]
    805c:	ldr	x0, [sp, #160]
    8060:	sub	x0, x1, x0
    8064:	str	x0, [sp, #128]
    8068:	ldr	x0, [sp, #128]
    806c:	ldr	x1, [sp, #144]
    8070:	udiv	x2, x0, x1
    8074:	ldr	x1, [sp, #144]
    8078:	mul	x1, x2, x1
    807c:	sub	x0, x0, x1
    8080:	str	x0, [sp, #152]
    8084:	ldr	x1, [sp, #128]
    8088:	ldr	x0, [sp, #144]
    808c:	udiv	x0, x1, x0
    8090:	str	x0, [sp, #168]
    8094:	ldr	x1, [sp, #168]
    8098:	ldr	x0, [sp, #136]
    809c:	mul	x0, x1, x0
    80a0:	str	x0, [sp, #160]
    80a4:	ldr	x0, [sp, #152]
    80a8:	lsl	x1, x0, #32
    80ac:	ldr	w0, [sp, #76]
    80b0:	ldr	x2, [sp, #232]
    80b4:	lsl	x0, x2, x0
    80b8:	and	x0, x0, #0xffffffff
    80bc:	orr	x0, x1, x0
    80c0:	str	x0, [sp, #152]
    80c4:	ldr	x1, [sp, #152]
    80c8:	ldr	x0, [sp, #160]
    80cc:	cmp	x1, x0
    80d0:	b.cs	812c <_gcry_mpih_mod_1+0x4f4>  // b.hs, b.nlast
    80d4:	ldr	x0, [sp, #168]
    80d8:	sub	x0, x0, #0x1
    80dc:	str	x0, [sp, #168]
    80e0:	ldr	x1, [sp, #152]
    80e4:	ldr	x0, [sp, #8]
    80e8:	add	x0, x1, x0
    80ec:	str	x0, [sp, #152]
    80f0:	ldr	x1, [sp, #152]
    80f4:	ldr	x0, [sp, #8]
    80f8:	cmp	x1, x0
    80fc:	b.cc	812c <_gcry_mpih_mod_1+0x4f4>  // b.lo, b.ul, b.last
    8100:	ldr	x1, [sp, #152]
    8104:	ldr	x0, [sp, #160]
    8108:	cmp	x1, x0
    810c:	b.cs	812c <_gcry_mpih_mod_1+0x4f4>  // b.hs, b.nlast
    8110:	ldr	x0, [sp, #168]
    8114:	sub	x0, x0, #0x1
    8118:	str	x0, [sp, #168]
    811c:	ldr	x1, [sp, #152]
    8120:	ldr	x0, [sp, #8]
    8124:	add	x0, x1, x0
    8128:	str	x0, [sp, #152]
    812c:	ldr	x1, [sp, #152]
    8130:	ldr	x0, [sp, #160]
    8134:	sub	x0, x1, x0
    8138:	str	x0, [sp, #152]
    813c:	ldr	x0, [sp, #168]
    8140:	str	w0, [sp, #252]
    8144:	ldr	x0, [sp, #152]
    8148:	str	x0, [sp, #240]
    814c:	ldr	w0, [sp, #76]
    8150:	ldr	x1, [sp, #240]
    8154:	lsr	x0, x1, x0
    8158:	b	839c <_gcry_mpih_mod_1+0x764>
    815c:	ldr	w0, [sp, #20]
    8160:	sub	w0, w0, #0x1
    8164:	str	w0, [sp, #228]
    8168:	ldrsw	x0, [sp, #228]
    816c:	lsl	x0, x0, #3
    8170:	ldr	x1, [sp, #24]
    8174:	add	x0, x1, x0
    8178:	ldr	x0, [x0]
    817c:	str	x0, [sp, #240]
    8180:	ldr	x1, [sp, #240]
    8184:	ldr	x0, [sp, #8]
    8188:	cmp	x1, x0
    818c:	b.cc	8198 <_gcry_mpih_mod_1+0x560>  // b.lo, b.ul, b.last
    8190:	str	xzr, [sp, #240]
    8194:	b	838c <_gcry_mpih_mod_1+0x754>
    8198:	ldr	w0, [sp, #228]
    819c:	sub	w0, w0, #0x1
    81a0:	str	w0, [sp, #228]
    81a4:	b	838c <_gcry_mpih_mod_1+0x754>
    81a8:	ldrsw	x0, [sp, #228]
    81ac:	lsl	x0, x0, #3
    81b0:	ldr	x1, [sp, #24]
    81b4:	add	x0, x1, x0
    81b8:	ldr	x0, [x0]
    81bc:	str	x0, [sp, #184]
    81c0:	ldr	x0, [sp, #8]
    81c4:	lsr	x0, x0, #32
    81c8:	str	x0, [sp, #64]
    81cc:	ldr	x0, [sp, #8]
    81d0:	and	x0, x0, #0xffffffff
    81d4:	str	x0, [sp, #56]
    81d8:	ldr	x0, [sp, #240]
    81dc:	ldr	x1, [sp, #64]
    81e0:	udiv	x2, x0, x1
    81e4:	ldr	x1, [sp, #64]
    81e8:	mul	x1, x2, x1
    81ec:	sub	x0, x0, x1
    81f0:	str	x0, [sp, #88]
    81f4:	ldr	x1, [sp, #240]
    81f8:	ldr	x0, [sp, #64]
    81fc:	udiv	x0, x1, x0
    8200:	str	x0, [sp, #80]
    8204:	ldr	x1, [sp, #80]
    8208:	ldr	x0, [sp, #56]
    820c:	mul	x0, x1, x0
    8210:	str	x0, [sp, #96]
    8214:	ldr	x0, [sp, #88]
    8218:	lsl	x1, x0, #32
    821c:	ldr	x0, [sp, #184]
    8220:	lsr	x0, x0, #32
    8224:	orr	x0, x1, x0
    8228:	str	x0, [sp, #88]
    822c:	ldr	x1, [sp, #88]
    8230:	ldr	x0, [sp, #96]
    8234:	cmp	x1, x0
    8238:	b.cs	8294 <_gcry_mpih_mod_1+0x65c>  // b.hs, b.nlast
    823c:	ldr	x0, [sp, #80]
    8240:	sub	x0, x0, #0x1
    8244:	str	x0, [sp, #80]
    8248:	ldr	x1, [sp, #88]
    824c:	ldr	x0, [sp, #8]
    8250:	add	x0, x1, x0
    8254:	str	x0, [sp, #88]
    8258:	ldr	x1, [sp, #88]
    825c:	ldr	x0, [sp, #8]
    8260:	cmp	x1, x0
    8264:	b.cc	8294 <_gcry_mpih_mod_1+0x65c>  // b.lo, b.ul, b.last
    8268:	ldr	x1, [sp, #88]
    826c:	ldr	x0, [sp, #96]
    8270:	cmp	x1, x0
    8274:	b.cs	8294 <_gcry_mpih_mod_1+0x65c>  // b.hs, b.nlast
    8278:	ldr	x0, [sp, #80]
    827c:	sub	x0, x0, #0x1
    8280:	str	x0, [sp, #80]
    8284:	ldr	x1, [sp, #88]
    8288:	ldr	x0, [sp, #8]
    828c:	add	x0, x1, x0
    8290:	str	x0, [sp, #88]
    8294:	ldr	x1, [sp, #88]
    8298:	ldr	x0, [sp, #96]
    829c:	sub	x0, x1, x0
    82a0:	str	x0, [sp, #88]
    82a4:	ldr	x0, [sp, #88]
    82a8:	ldr	x1, [sp, #64]
    82ac:	udiv	x2, x0, x1
    82b0:	ldr	x1, [sp, #64]
    82b4:	mul	x1, x2, x1
    82b8:	sub	x0, x0, x1
    82bc:	str	x0, [sp, #104]
    82c0:	ldr	x1, [sp, #88]
    82c4:	ldr	x0, [sp, #64]
    82c8:	udiv	x0, x1, x0
    82cc:	str	x0, [sp, #112]
    82d0:	ldr	x1, [sp, #112]
    82d4:	ldr	x0, [sp, #56]
    82d8:	mul	x0, x1, x0
    82dc:	str	x0, [sp, #96]
    82e0:	ldr	x0, [sp, #104]
    82e4:	lsl	x1, x0, #32
    82e8:	ldr	x0, [sp, #184]
    82ec:	and	x0, x0, #0xffffffff
    82f0:	orr	x0, x1, x0
    82f4:	str	x0, [sp, #104]
    82f8:	ldr	x1, [sp, #104]
    82fc:	ldr	x0, [sp, #96]
    8300:	cmp	x1, x0
    8304:	b.cs	8360 <_gcry_mpih_mod_1+0x728>  // b.hs, b.nlast
    8308:	ldr	x0, [sp, #112]
    830c:	sub	x0, x0, #0x1
    8310:	str	x0, [sp, #112]
    8314:	ldr	x1, [sp, #104]
    8318:	ldr	x0, [sp, #8]
    831c:	add	x0, x1, x0
    8320:	str	x0, [sp, #104]
    8324:	ldr	x1, [sp, #104]
    8328:	ldr	x0, [sp, #8]
    832c:	cmp	x1, x0
    8330:	b.cc	8360 <_gcry_mpih_mod_1+0x728>  // b.lo, b.ul, b.last
    8334:	ldr	x1, [sp, #104]
    8338:	ldr	x0, [sp, #96]
    833c:	cmp	x1, x0
    8340:	b.cs	8360 <_gcry_mpih_mod_1+0x728>  // b.hs, b.nlast
    8344:	ldr	x0, [sp, #112]
    8348:	sub	x0, x0, #0x1
    834c:	str	x0, [sp, #112]
    8350:	ldr	x1, [sp, #104]
    8354:	ldr	x0, [sp, #8]
    8358:	add	x0, x1, x0
    835c:	str	x0, [sp, #104]
    8360:	ldr	x1, [sp, #104]
    8364:	ldr	x0, [sp, #96]
    8368:	sub	x0, x1, x0
    836c:	str	x0, [sp, #104]
    8370:	ldr	x0, [sp, #112]
    8374:	str	w0, [sp, #252]
    8378:	ldr	x0, [sp, #104]
    837c:	str	x0, [sp, #240]
    8380:	ldr	w0, [sp, #228]
    8384:	sub	w0, w0, #0x1
    8388:	str	w0, [sp, #228]
    838c:	ldr	w0, [sp, #228]
    8390:	cmp	w0, #0x0
    8394:	b.ge	81a8 <_gcry_mpih_mod_1+0x570>  // b.tcont
    8398:	ldr	x0, [sp, #240]
    839c:	add	sp, sp, #0x110
    83a0:	ret
    83a4:	nop
	...

00000000000083b0 <_gcry_mpih_divrem>:
    83b0:	sub	sp, sp, #0x270
    83b4:	stp	x29, x30, [sp]
    83b8:	mov	x29, sp
    83bc:	str	x0, [sp, #56]
    83c0:	str	w1, [sp, #52]
    83c4:	str	x2, [sp, #40]
    83c8:	str	w3, [sp, #48]
    83cc:	str	x4, [sp, #32]
    83d0:	str	w5, [sp, #28]
    83d4:	str	xzr, [sp, #616]
    83d8:	ldr	w0, [sp, #28]
    83dc:	cmp	w0, #0x2
    83e0:	b.eq	88b8 <_gcry_mpih_divrem+0x508>  // b.none
    83e4:	ldr	w0, [sp, #28]
    83e8:	cmp	w0, #0x2
    83ec:	b.gt	8e80 <_gcry_mpih_divrem+0xad0>
    83f0:	ldr	w0, [sp, #28]
    83f4:	cmp	w0, #0x0
    83f8:	b.eq	840c <_gcry_mpih_divrem+0x5c>  // b.none
    83fc:	ldr	w0, [sp, #28]
    8400:	cmp	w0, #0x1
    8404:	b.eq	841c <_gcry_mpih_divrem+0x6c>  // b.none
    8408:	b	8e80 <_gcry_mpih_divrem+0xad0>
    840c:	adrp	x0, 0 <grub_memcpy>
    8410:	add	x0, x0, #0x0
    8414:	ldr	x0, [x0]
    8418:	bl	0 <grub_fatal>
    841c:	ldr	x0, [sp, #32]
    8420:	ldr	x0, [x0]
    8424:	str	x0, [sp, #216]
    8428:	ldrsw	x0, [sp, #48]
    842c:	lsl	x0, x0, #3
    8430:	sub	x0, x0, #0x8
    8434:	ldr	x1, [sp, #40]
    8438:	add	x0, x1, x0
    843c:	ldr	x0, [x0]
    8440:	str	x0, [sp, #600]
    8444:	ldr	x1, [sp, #600]
    8448:	ldr	x0, [sp, #216]
    844c:	cmp	x1, x0
    8450:	b.cc	846c <_gcry_mpih_divrem+0xbc>  // b.lo, b.ul, b.last
    8454:	ldr	x1, [sp, #600]
    8458:	ldr	x0, [sp, #216]
    845c:	sub	x0, x1, x0
    8460:	str	x0, [sp, #600]
    8464:	mov	x0, #0x1                   	// #1
    8468:	str	x0, [sp, #616]
    846c:	ldrsw	x0, [sp, #52]
    8470:	lsl	x0, x0, #3
    8474:	ldr	x1, [sp, #56]
    8478:	add	x0, x1, x0
    847c:	str	x0, [sp, #56]
    8480:	ldr	w0, [sp, #48]
    8484:	sub	w0, w0, #0x2
    8488:	str	w0, [sp, #612]
    848c:	b	8698 <_gcry_mpih_divrem+0x2e8>
    8490:	ldr	x0, [sp, #216]
    8494:	lsr	x0, x0, #32
    8498:	str	x0, [sp, #184]
    849c:	ldr	x0, [sp, #216]
    84a0:	and	x0, x0, #0xffffffff
    84a4:	str	x0, [sp, #176]
    84a8:	ldr	x0, [sp, #600]
    84ac:	ldr	x1, [sp, #184]
    84b0:	udiv	x2, x0, x1
    84b4:	ldr	x1, [sp, #184]
    84b8:	mul	x1, x2, x1
    84bc:	sub	x0, x0, x1
    84c0:	str	x0, [sp, #576]
    84c4:	ldr	x1, [sp, #600]
    84c8:	ldr	x0, [sp, #184]
    84cc:	udiv	x0, x1, x0
    84d0:	str	x0, [sp, #592]
    84d4:	ldr	x1, [sp, #592]
    84d8:	ldr	x0, [sp, #176]
    84dc:	mul	x0, x1, x0
    84e0:	str	x0, [sp, #168]
    84e4:	ldr	x0, [sp, #576]
    84e8:	lsl	x1, x0, #32
    84ec:	ldrsw	x0, [sp, #612]
    84f0:	lsl	x0, x0, #3
    84f4:	ldr	x2, [sp, #40]
    84f8:	add	x0, x2, x0
    84fc:	ldr	x0, [x0]
    8500:	lsr	x0, x0, #32
    8504:	orr	x0, x1, x0
    8508:	str	x0, [sp, #576]
    850c:	ldr	x1, [sp, #576]
    8510:	ldr	x0, [sp, #168]
    8514:	cmp	x1, x0
    8518:	b.cs	8574 <_gcry_mpih_divrem+0x1c4>  // b.hs, b.nlast
    851c:	ldr	x0, [sp, #592]
    8520:	sub	x0, x0, #0x1
    8524:	str	x0, [sp, #592]
    8528:	ldr	x1, [sp, #576]
    852c:	ldr	x0, [sp, #216]
    8530:	add	x0, x1, x0
    8534:	str	x0, [sp, #576]
    8538:	ldr	x1, [sp, #576]
    853c:	ldr	x0, [sp, #216]
    8540:	cmp	x1, x0
    8544:	b.cc	8574 <_gcry_mpih_divrem+0x1c4>  // b.lo, b.ul, b.last
    8548:	ldr	x1, [sp, #576]
    854c:	ldr	x0, [sp, #168]
    8550:	cmp	x1, x0
    8554:	b.cs	8574 <_gcry_mpih_divrem+0x1c4>  // b.hs, b.nlast
    8558:	ldr	x0, [sp, #592]
    855c:	sub	x0, x0, #0x1
    8560:	str	x0, [sp, #592]
    8564:	ldr	x1, [sp, #576]
    8568:	ldr	x0, [sp, #216]
    856c:	add	x0, x1, x0
    8570:	str	x0, [sp, #576]
    8574:	ldr	x1, [sp, #576]
    8578:	ldr	x0, [sp, #168]
    857c:	sub	x0, x1, x0
    8580:	str	x0, [sp, #576]
    8584:	ldr	x0, [sp, #576]
    8588:	ldr	x1, [sp, #184]
    858c:	udiv	x2, x0, x1
    8590:	ldr	x1, [sp, #184]
    8594:	mul	x1, x2, x1
    8598:	sub	x0, x0, x1
    859c:	str	x0, [sp, #568]
    85a0:	ldr	x1, [sp, #576]
    85a4:	ldr	x0, [sp, #184]
    85a8:	udiv	x0, x1, x0
    85ac:	str	x0, [sp, #584]
    85b0:	ldr	x1, [sp, #584]
    85b4:	ldr	x0, [sp, #176]
    85b8:	mul	x0, x1, x0
    85bc:	str	x0, [sp, #168]
    85c0:	ldr	x0, [sp, #568]
    85c4:	lsl	x1, x0, #32
    85c8:	ldrsw	x0, [sp, #612]
    85cc:	lsl	x0, x0, #3
    85d0:	ldr	x2, [sp, #40]
    85d4:	add	x0, x2, x0
    85d8:	ldr	x0, [x0]
    85dc:	and	x0, x0, #0xffffffff
    85e0:	orr	x0, x1, x0
    85e4:	str	x0, [sp, #568]
    85e8:	ldr	x1, [sp, #568]
    85ec:	ldr	x0, [sp, #168]
    85f0:	cmp	x1, x0
    85f4:	b.cs	8650 <_gcry_mpih_divrem+0x2a0>  // b.hs, b.nlast
    85f8:	ldr	x0, [sp, #584]
    85fc:	sub	x0, x0, #0x1
    8600:	str	x0, [sp, #584]
    8604:	ldr	x1, [sp, #568]
    8608:	ldr	x0, [sp, #216]
    860c:	add	x0, x1, x0
    8610:	str	x0, [sp, #568]
    8614:	ldr	x1, [sp, #568]
    8618:	ldr	x0, [sp, #216]
    861c:	cmp	x1, x0
    8620:	b.cc	8650 <_gcry_mpih_divrem+0x2a0>  // b.lo, b.ul, b.last
    8624:	ldr	x1, [sp, #568]
    8628:	ldr	x0, [sp, #168]
    862c:	cmp	x1, x0
    8630:	b.cs	8650 <_gcry_mpih_divrem+0x2a0>  // b.hs, b.nlast
    8634:	ldr	x0, [sp, #584]
    8638:	sub	x0, x0, #0x1
    863c:	str	x0, [sp, #584]
    8640:	ldr	x1, [sp, #568]
    8644:	ldr	x0, [sp, #216]
    8648:	add	x0, x1, x0
    864c:	str	x0, [sp, #568]
    8650:	ldr	x1, [sp, #568]
    8654:	ldr	x0, [sp, #168]
    8658:	sub	x0, x1, x0
    865c:	str	x0, [sp, #568]
    8660:	ldr	x0, [sp, #592]
    8664:	lsl	x2, x0, #32
    8668:	ldrsw	x0, [sp, #612]
    866c:	lsl	x0, x0, #3
    8670:	ldr	x1, [sp, #56]
    8674:	add	x0, x1, x0
    8678:	ldr	x1, [sp, #584]
    867c:	orr	x1, x2, x1
    8680:	str	x1, [x0]
    8684:	ldr	x0, [sp, #568]
    8688:	str	x0, [sp, #600]
    868c:	ldr	w0, [sp, #612]
    8690:	sub	w0, w0, #0x1
    8694:	str	w0, [sp, #612]
    8698:	ldr	w0, [sp, #612]
    869c:	cmp	w0, #0x0
    86a0:	b.ge	8490 <_gcry_mpih_divrem+0xe0>  // b.tcont
    86a4:	ldrsw	x0, [sp, #52]
    86a8:	lsl	x0, x0, #3
    86ac:	neg	x0, x0
    86b0:	ldr	x1, [sp, #56]
    86b4:	add	x0, x1, x0
    86b8:	str	x0, [sp, #56]
    86bc:	ldr	w0, [sp, #52]
    86c0:	sub	w0, w0, #0x1
    86c4:	str	w0, [sp, #612]
    86c8:	b	889c <_gcry_mpih_divrem+0x4ec>
    86cc:	ldr	x0, [sp, #216]
    86d0:	lsr	x0, x0, #32
    86d4:	str	x0, [sp, #208]
    86d8:	ldr	x0, [sp, #216]
    86dc:	and	x0, x0, #0xffffffff
    86e0:	str	x0, [sp, #200]
    86e4:	ldr	x0, [sp, #600]
    86e8:	ldr	x1, [sp, #208]
    86ec:	udiv	x2, x0, x1
    86f0:	ldr	x1, [sp, #208]
    86f4:	mul	x1, x2, x1
    86f8:	sub	x0, x0, x1
    86fc:	str	x0, [sp, #544]
    8700:	ldr	x1, [sp, #600]
    8704:	ldr	x0, [sp, #208]
    8708:	udiv	x0, x1, x0
    870c:	str	x0, [sp, #560]
    8710:	ldr	x1, [sp, #560]
    8714:	ldr	x0, [sp, #200]
    8718:	mul	x0, x1, x0
    871c:	str	x0, [sp, #192]
    8720:	ldr	x0, [sp, #544]
    8724:	lsl	x0, x0, #32
    8728:	str	x0, [sp, #544]
    872c:	ldr	x1, [sp, #544]
    8730:	ldr	x0, [sp, #192]
    8734:	cmp	x1, x0
    8738:	b.cs	8794 <_gcry_mpih_divrem+0x3e4>  // b.hs, b.nlast
    873c:	ldr	x0, [sp, #560]
    8740:	sub	x0, x0, #0x1
    8744:	str	x0, [sp, #560]
    8748:	ldr	x1, [sp, #544]
    874c:	ldr	x0, [sp, #216]
    8750:	add	x0, x1, x0
    8754:	str	x0, [sp, #544]
    8758:	ldr	x1, [sp, #544]
    875c:	ldr	x0, [sp, #216]
    8760:	cmp	x1, x0
    8764:	b.cc	8794 <_gcry_mpih_divrem+0x3e4>  // b.lo, b.ul, b.last
    8768:	ldr	x1, [sp, #544]
    876c:	ldr	x0, [sp, #192]
    8770:	cmp	x1, x0
    8774:	b.cs	8794 <_gcry_mpih_divrem+0x3e4>  // b.hs, b.nlast
    8778:	ldr	x0, [sp, #560]
    877c:	sub	x0, x0, #0x1
    8780:	str	x0, [sp, #560]
    8784:	ldr	x1, [sp, #544]
    8788:	ldr	x0, [sp, #216]
    878c:	add	x0, x1, x0
    8790:	str	x0, [sp, #544]
    8794:	ldr	x1, [sp, #544]
    8798:	ldr	x0, [sp, #192]
    879c:	sub	x0, x1, x0
    87a0:	str	x0, [sp, #544]
    87a4:	ldr	x0, [sp, #544]
    87a8:	ldr	x1, [sp, #208]
    87ac:	udiv	x2, x0, x1
    87b0:	ldr	x1, [sp, #208]
    87b4:	mul	x1, x2, x1
    87b8:	sub	x0, x0, x1
    87bc:	str	x0, [sp, #536]
    87c0:	ldr	x1, [sp, #544]
    87c4:	ldr	x0, [sp, #208]
    87c8:	udiv	x0, x1, x0
    87cc:	str	x0, [sp, #552]
    87d0:	ldr	x1, [sp, #552]
    87d4:	ldr	x0, [sp, #200]
    87d8:	mul	x0, x1, x0
    87dc:	str	x0, [sp, #192]
    87e0:	ldr	x0, [sp, #536]
    87e4:	lsl	x0, x0, #32
    87e8:	str	x0, [sp, #536]
    87ec:	ldr	x1, [sp, #536]
    87f0:	ldr	x0, [sp, #192]
    87f4:	cmp	x1, x0
    87f8:	b.cs	8854 <_gcry_mpih_divrem+0x4a4>  // b.hs, b.nlast
    87fc:	ldr	x0, [sp, #552]
    8800:	sub	x0, x0, #0x1
    8804:	str	x0, [sp, #552]
    8808:	ldr	x1, [sp, #536]
    880c:	ldr	x0, [sp, #216]
    8810:	add	x0, x1, x0
    8814:	str	x0, [sp, #536]
    8818:	ldr	x1, [sp, #536]
    881c:	ldr	x0, [sp, #216]
    8820:	cmp	x1, x0
    8824:	b.cc	8854 <_gcry_mpih_divrem+0x4a4>  // b.lo, b.ul, b.last
    8828:	ldr	x1, [sp, #536]
    882c:	ldr	x0, [sp, #192]
    8830:	cmp	x1, x0
    8834:	b.cs	8854 <_gcry_mpih_divrem+0x4a4>  // b.hs, b.nlast
    8838:	ldr	x0, [sp, #552]
    883c:	sub	x0, x0, #0x1
    8840:	str	x0, [sp, #552]
    8844:	ldr	x1, [sp, #536]
    8848:	ldr	x0, [sp, #216]
    884c:	add	x0, x1, x0
    8850:	str	x0, [sp, #536]
    8854:	ldr	x1, [sp, #536]
    8858:	ldr	x0, [sp, #192]
    885c:	sub	x0, x1, x0
    8860:	str	x0, [sp, #536]
    8864:	ldr	x0, [sp, #560]
    8868:	lsl	x2, x0, #32
    886c:	ldrsw	x0, [sp, #612]
    8870:	lsl	x0, x0, #3
    8874:	ldr	x1, [sp, #56]
    8878:	add	x0, x1, x0
    887c:	ldr	x1, [sp, #552]
    8880:	orr	x1, x2, x1
    8884:	str	x1, [x0]
    8888:	ldr	x0, [sp, #536]
    888c:	str	x0, [sp, #600]
    8890:	ldr	w0, [sp, #612]
    8894:	sub	w0, w0, #0x1
    8898:	str	w0, [sp, #612]
    889c:	ldr	w0, [sp, #612]
    88a0:	cmp	w0, #0x0
    88a4:	b.ge	86cc <_gcry_mpih_divrem+0x31c>  // b.tcont
    88a8:	ldr	x0, [sp, #40]
    88ac:	ldr	x1, [sp, #600]
    88b0:	str	x1, [x0]
    88b4:	b	9478 <_gcry_mpih_divrem+0x10c8>
    88b8:	ldrsw	x0, [sp, #48]
    88bc:	lsl	x0, x0, #3
    88c0:	sub	x0, x0, #0x10
    88c4:	ldr	x1, [sp, #40]
    88c8:	add	x0, x1, x0
    88cc:	str	x0, [sp, #40]
    88d0:	ldr	x0, [sp, #32]
    88d4:	ldr	x0, [x0, #8]
    88d8:	str	x0, [sp, #352]
    88dc:	ldr	x0, [sp, #32]
    88e0:	ldr	x0, [x0]
    88e4:	str	x0, [sp, #344]
    88e8:	ldr	x0, [sp, #40]
    88ec:	ldr	x0, [x0, #8]
    88f0:	str	x0, [sp, #520]
    88f4:	ldr	x0, [sp, #40]
    88f8:	ldr	x0, [x0]
    88fc:	str	x0, [sp, #512]
    8900:	ldr	x1, [sp, #520]
    8904:	ldr	x0, [sp, #352]
    8908:	cmp	x1, x0
    890c:	b.cc	897c <_gcry_mpih_divrem+0x5cc>  // b.lo, b.ul, b.last
    8910:	ldr	x1, [sp, #520]
    8914:	ldr	x0, [sp, #352]
    8918:	cmp	x1, x0
    891c:	b.hi	8930 <_gcry_mpih_divrem+0x580>  // b.pmore
    8920:	ldr	x1, [sp, #512]
    8924:	ldr	x0, [sp, #344]
    8928:	cmp	x1, x0
    892c:	b.cc	897c <_gcry_mpih_divrem+0x5cc>  // b.lo, b.ul, b.last
    8930:	ldr	x1, [sp, #512]
    8934:	ldr	x0, [sp, #344]
    8938:	sub	x0, x1, x0
    893c:	str	x0, [sp, #336]
    8940:	ldr	x1, [sp, #520]
    8944:	ldr	x0, [sp, #352]
    8948:	sub	x1, x1, x0
    894c:	ldr	x2, [sp, #336]
    8950:	ldr	x0, [sp, #512]
    8954:	cmp	x2, x0
    8958:	cset	w0, hi  // hi = pmore
    895c:	and	w0, w0, #0xff
    8960:	and	x0, x0, #0xff
    8964:	sub	x0, x1, x0
    8968:	str	x0, [sp, #520]
    896c:	ldr	x0, [sp, #336]
    8970:	str	x0, [sp, #512]
    8974:	mov	x0, #0x1                   	// #1
    8978:	str	x0, [sp, #616]
    897c:	ldr	w1, [sp, #52]
    8980:	ldr	w0, [sp, #48]
    8984:	add	w0, w1, w0
    8988:	sub	w0, w0, #0x3
    898c:	str	w0, [sp, #532]
    8990:	b	8e54 <_gcry_mpih_divrem+0xaa4>
    8994:	ldr	w1, [sp, #532]
    8998:	ldr	w0, [sp, #52]
    899c:	cmp	w1, w0
    89a0:	b.lt	89b4 <_gcry_mpih_divrem+0x604>  // b.tstop
    89a4:	ldr	x0, [sp, #40]
    89a8:	sub	x0, x0, #0x8
    89ac:	str	x0, [sp, #40]
    89b0:	b	89bc <_gcry_mpih_divrem+0x60c>
    89b4:	ldr	x0, [sp, #40]
    89b8:	str	xzr, [x0]
    89bc:	ldr	x1, [sp, #520]
    89c0:	ldr	x0, [sp, #352]
    89c4:	cmp	x1, x0
    89c8:	b.ne	8a90 <_gcry_mpih_divrem+0x6e0>  // b.any
    89cc:	mov	x0, #0xffffffffffffffff    	// #-1
    89d0:	str	x0, [sp, #504]
    89d4:	ldr	x1, [sp, #512]
    89d8:	ldr	x0, [sp, #352]
    89dc:	add	x0, x1, x0
    89e0:	str	x0, [sp, #496]
    89e4:	ldr	x1, [sp, #496]
    89e8:	ldr	x0, [sp, #352]
    89ec:	cmp	x1, x0
    89f0:	b.cs	8a5c <_gcry_mpih_divrem+0x6ac>  // b.hs, b.nlast
    89f4:	ldr	x0, [sp, #40]
    89f8:	ldr	x0, [x0]
    89fc:	ldr	x1, [sp, #344]
    8a00:	add	x0, x1, x0
    8a04:	str	x0, [sp, #248]
    8a08:	ldr	x1, [sp, #496]
    8a0c:	ldr	x0, [sp, #344]
    8a10:	sub	x1, x1, x0
    8a14:	ldr	x0, [sp, #40]
    8a18:	ldr	x0, [x0]
    8a1c:	ldr	x2, [sp, #248]
    8a20:	cmp	x2, x0
    8a24:	cset	w0, cc  // cc = lo, ul, last
    8a28:	and	w0, w0, #0xff
    8a2c:	and	x0, x0, #0xff
    8a30:	add	x0, x1, x0
    8a34:	str	x0, [sp, #520]
    8a38:	ldr	x0, [sp, #248]
    8a3c:	str	x0, [sp, #512]
    8a40:	ldrsw	x0, [sp, #532]
    8a44:	lsl	x0, x0, #3
    8a48:	ldr	x1, [sp, #56]
    8a4c:	add	x0, x1, x0
    8a50:	ldr	x1, [sp, #504]
    8a54:	str	x1, [x0]
    8a58:	b	8e48 <_gcry_mpih_divrem+0xa98>
    8a5c:	ldr	x0, [sp, #344]
    8a60:	cmp	x0, #0x0
    8a64:	b.eq	8a70 <_gcry_mpih_divrem+0x6c0>  // b.none
    8a68:	mov	x0, #0x1                   	// #1
    8a6c:	b	8a74 <_gcry_mpih_divrem+0x6c4>
    8a70:	mov	x0, #0x0                   	// #0
    8a74:	ldr	x1, [sp, #344]
    8a78:	sub	x0, x1, x0
    8a7c:	str	x0, [sp, #520]
    8a80:	ldr	x0, [sp, #344]
    8a84:	neg	x0, x0
    8a88:	str	x0, [sp, #512]
    8a8c:	b	8d44 <_gcry_mpih_divrem+0x994>
    8a90:	ldr	x0, [sp, #352]
    8a94:	lsr	x0, x0, #32
    8a98:	str	x0, [sp, #328]
    8a9c:	ldr	x0, [sp, #352]
    8aa0:	and	x0, x0, #0xffffffff
    8aa4:	str	x0, [sp, #320]
    8aa8:	ldr	x0, [sp, #520]
    8aac:	ldr	x1, [sp, #328]
    8ab0:	udiv	x2, x0, x1
    8ab4:	ldr	x1, [sp, #328]
    8ab8:	mul	x1, x2, x1
    8abc:	sub	x0, x0, x1
    8ac0:	str	x0, [sp, #472]
    8ac4:	ldr	x1, [sp, #520]
    8ac8:	ldr	x0, [sp, #328]
    8acc:	udiv	x0, x1, x0
    8ad0:	str	x0, [sp, #488]
    8ad4:	ldr	x1, [sp, #488]
    8ad8:	ldr	x0, [sp, #320]
    8adc:	mul	x0, x1, x0
    8ae0:	str	x0, [sp, #312]
    8ae4:	ldr	x0, [sp, #472]
    8ae8:	lsl	x1, x0, #32
    8aec:	ldr	x0, [sp, #512]
    8af0:	lsr	x0, x0, #32
    8af4:	orr	x0, x1, x0
    8af8:	str	x0, [sp, #472]
    8afc:	ldr	x1, [sp, #472]
    8b00:	ldr	x0, [sp, #312]
    8b04:	cmp	x1, x0
    8b08:	b.cs	8b64 <_gcry_mpih_divrem+0x7b4>  // b.hs, b.nlast
    8b0c:	ldr	x0, [sp, #488]
    8b10:	sub	x0, x0, #0x1
    8b14:	str	x0, [sp, #488]
    8b18:	ldr	x1, [sp, #472]
    8b1c:	ldr	x0, [sp, #352]
    8b20:	add	x0, x1, x0
    8b24:	str	x0, [sp, #472]
    8b28:	ldr	x1, [sp, #472]
    8b2c:	ldr	x0, [sp, #352]
    8b30:	cmp	x1, x0
    8b34:	b.cc	8b64 <_gcry_mpih_divrem+0x7b4>  // b.lo, b.ul, b.last
    8b38:	ldr	x1, [sp, #472]
    8b3c:	ldr	x0, [sp, #312]
    8b40:	cmp	x1, x0
    8b44:	b.cs	8b64 <_gcry_mpih_divrem+0x7b4>  // b.hs, b.nlast
    8b48:	ldr	x0, [sp, #488]
    8b4c:	sub	x0, x0, #0x1
    8b50:	str	x0, [sp, #488]
    8b54:	ldr	x1, [sp, #472]
    8b58:	ldr	x0, [sp, #352]
    8b5c:	add	x0, x1, x0
    8b60:	str	x0, [sp, #472]
    8b64:	ldr	x1, [sp, #472]
    8b68:	ldr	x0, [sp, #312]
    8b6c:	sub	x0, x1, x0
    8b70:	str	x0, [sp, #472]
    8b74:	ldr	x0, [sp, #472]
    8b78:	ldr	x1, [sp, #328]
    8b7c:	udiv	x2, x0, x1
    8b80:	ldr	x1, [sp, #328]
    8b84:	mul	x1, x2, x1
    8b88:	sub	x0, x0, x1
    8b8c:	str	x0, [sp, #464]
    8b90:	ldr	x1, [sp, #472]
    8b94:	ldr	x0, [sp, #328]
    8b98:	udiv	x0, x1, x0
    8b9c:	str	x0, [sp, #480]
    8ba0:	ldr	x1, [sp, #480]
    8ba4:	ldr	x0, [sp, #320]
    8ba8:	mul	x0, x1, x0
    8bac:	str	x0, [sp, #312]
    8bb0:	ldr	x0, [sp, #464]
    8bb4:	lsl	x1, x0, #32
    8bb8:	ldr	x0, [sp, #512]
    8bbc:	and	x0, x0, #0xffffffff
    8bc0:	orr	x0, x1, x0
    8bc4:	str	x0, [sp, #464]
    8bc8:	ldr	x1, [sp, #464]
    8bcc:	ldr	x0, [sp, #312]
    8bd0:	cmp	x1, x0
    8bd4:	b.cs	8c30 <_gcry_mpih_divrem+0x880>  // b.hs, b.nlast
    8bd8:	ldr	x0, [sp, #480]
    8bdc:	sub	x0, x0, #0x1
    8be0:	str	x0, [sp, #480]
    8be4:	ldr	x1, [sp, #464]
    8be8:	ldr	x0, [sp, #352]
    8bec:	add	x0, x1, x0
    8bf0:	str	x0, [sp, #464]
    8bf4:	ldr	x1, [sp, #464]
    8bf8:	ldr	x0, [sp, #352]
    8bfc:	cmp	x1, x0
    8c00:	b.cc	8c30 <_gcry_mpih_divrem+0x880>  // b.lo, b.ul, b.last
    8c04:	ldr	x1, [sp, #464]
    8c08:	ldr	x0, [sp, #312]
    8c0c:	cmp	x1, x0
    8c10:	b.cs	8c30 <_gcry_mpih_divrem+0x880>  // b.hs, b.nlast
    8c14:	ldr	x0, [sp, #480]
    8c18:	sub	x0, x0, #0x1
    8c1c:	str	x0, [sp, #480]
    8c20:	ldr	x1, [sp, #464]
    8c24:	ldr	x0, [sp, #352]
    8c28:	add	x0, x1, x0
    8c2c:	str	x0, [sp, #464]
    8c30:	ldr	x1, [sp, #464]
    8c34:	ldr	x0, [sp, #312]
    8c38:	sub	x0, x1, x0
    8c3c:	str	x0, [sp, #464]
    8c40:	ldr	x0, [sp, #488]
    8c44:	lsl	x0, x0, #32
    8c48:	ldr	x1, [sp, #480]
    8c4c:	orr	x0, x1, x0
    8c50:	str	x0, [sp, #504]
    8c54:	ldr	x0, [sp, #464]
    8c58:	str	x0, [sp, #496]
    8c5c:	ldr	x0, [sp, #344]
    8c60:	str	x0, [sp, #304]
    8c64:	ldr	x0, [sp, #504]
    8c68:	str	x0, [sp, #296]
    8c6c:	ldr	x0, [sp, #304]
    8c70:	str	w0, [sp, #292]
    8c74:	ldr	x0, [sp, #304]
    8c78:	lsr	x0, x0, #32
    8c7c:	str	w0, [sp, #288]
    8c80:	ldr	x0, [sp, #296]
    8c84:	str	w0, [sp, #284]
    8c88:	ldr	x0, [sp, #296]
    8c8c:	lsr	x0, x0, #32
    8c90:	str	w0, [sp, #280]
    8c94:	ldr	w1, [sp, #292]
    8c98:	ldr	w0, [sp, #284]
    8c9c:	mul	x0, x1, x0
    8ca0:	str	x0, [sp, #272]
    8ca4:	ldr	w1, [sp, #292]
    8ca8:	ldr	w0, [sp, #280]
    8cac:	mul	x0, x1, x0
    8cb0:	str	x0, [sp, #264]
    8cb4:	ldr	w1, [sp, #288]
    8cb8:	ldr	w0, [sp, #284]
    8cbc:	mul	x0, x1, x0
    8cc0:	str	x0, [sp, #256]
    8cc4:	ldr	w1, [sp, #288]
    8cc8:	ldr	w0, [sp, #280]
    8ccc:	mul	x0, x1, x0
    8cd0:	str	x0, [sp, #456]
    8cd4:	ldr	x0, [sp, #272]
    8cd8:	lsr	x0, x0, #32
    8cdc:	ldr	x1, [sp, #264]
    8ce0:	add	x0, x1, x0
    8ce4:	str	x0, [sp, #264]
    8ce8:	ldr	x1, [sp, #264]
    8cec:	ldr	x0, [sp, #256]
    8cf0:	add	x0, x1, x0
    8cf4:	str	x0, [sp, #264]
    8cf8:	ldr	x1, [sp, #264]
    8cfc:	ldr	x0, [sp, #256]
    8d00:	cmp	x1, x0
    8d04:	b.cs	8d18 <_gcry_mpih_divrem+0x968>  // b.hs, b.nlast
    8d08:	ldr	x1, [sp, #456]
    8d0c:	mov	x0, #0x100000000           	// #4294967296
    8d10:	add	x0, x1, x0
    8d14:	str	x0, [sp, #456]
    8d18:	ldr	x0, [sp, #264]
    8d1c:	lsr	x0, x0, #32
    8d20:	ldr	x1, [sp, #456]
    8d24:	add	x0, x1, x0
    8d28:	str	x0, [sp, #520]
    8d2c:	ldr	x0, [sp, #264]
    8d30:	lsl	x1, x0, #32
    8d34:	ldr	x0, [sp, #272]
    8d38:	and	x0, x0, #0xffffffff
    8d3c:	add	x0, x1, x0
    8d40:	str	x0, [sp, #512]
    8d44:	ldr	x0, [sp, #40]
    8d48:	ldr	x0, [x0]
    8d4c:	str	x0, [sp, #240]
    8d50:	ldr	x1, [sp, #520]
    8d54:	ldr	x0, [sp, #496]
    8d58:	cmp	x1, x0
    8d5c:	b.hi	8d80 <_gcry_mpih_divrem+0x9d0>  // b.pmore
    8d60:	ldr	x1, [sp, #520]
    8d64:	ldr	x0, [sp, #496]
    8d68:	cmp	x1, x0
    8d6c:	b.ne	8dec <_gcry_mpih_divrem+0xa3c>  // b.any
    8d70:	ldr	x1, [sp, #512]
    8d74:	ldr	x0, [sp, #240]
    8d78:	cmp	x1, x0
    8d7c:	b.ls	8dec <_gcry_mpih_divrem+0xa3c>  // b.plast
    8d80:	ldr	x0, [sp, #504]
    8d84:	sub	x0, x0, #0x1
    8d88:	str	x0, [sp, #504]
    8d8c:	ldr	x1, [sp, #512]
    8d90:	ldr	x0, [sp, #344]
    8d94:	sub	x0, x1, x0
    8d98:	str	x0, [sp, #232]
    8d9c:	ldr	x1, [sp, #232]
    8da0:	ldr	x0, [sp, #512]
    8da4:	cmp	x1, x0
    8da8:	cset	w0, hi  // hi = pmore
    8dac:	and	w0, w0, #0xff
    8db0:	and	x0, x0, #0xff
    8db4:	ldr	x1, [sp, #520]
    8db8:	sub	x0, x1, x0
    8dbc:	str	x0, [sp, #520]
    8dc0:	ldr	x0, [sp, #232]
    8dc4:	str	x0, [sp, #512]
    8dc8:	ldr	x1, [sp, #496]
    8dcc:	ldr	x0, [sp, #352]
    8dd0:	add	x0, x1, x0
    8dd4:	str	x0, [sp, #496]
    8dd8:	ldr	x1, [sp, #496]
    8ddc:	ldr	x0, [sp, #352]
    8de0:	cmp	x1, x0
    8de4:	b.cc	8dec <_gcry_mpih_divrem+0xa3c>  // b.lo, b.ul, b.last
    8de8:	b	8d50 <_gcry_mpih_divrem+0x9a0>
    8dec:	ldrsw	x0, [sp, #532]
    8df0:	lsl	x0, x0, #3
    8df4:	ldr	x1, [sp, #56]
    8df8:	add	x0, x1, x0
    8dfc:	ldr	x1, [sp, #504]
    8e00:	str	x1, [x0]
    8e04:	ldr	x1, [sp, #240]
    8e08:	ldr	x0, [sp, #512]
    8e0c:	sub	x0, x1, x0
    8e10:	str	x0, [sp, #224]
    8e14:	ldr	x1, [sp, #496]
    8e18:	ldr	x0, [sp, #520]
    8e1c:	sub	x1, x1, x0
    8e20:	ldr	x2, [sp, #224]
    8e24:	ldr	x0, [sp, #240]
    8e28:	cmp	x2, x0
    8e2c:	cset	w0, hi  // hi = pmore
    8e30:	and	w0, w0, #0xff
    8e34:	and	x0, x0, #0xff
    8e38:	sub	x0, x1, x0
    8e3c:	str	x0, [sp, #520]
    8e40:	ldr	x0, [sp, #224]
    8e44:	str	x0, [sp, #512]
    8e48:	ldr	w0, [sp, #532]
    8e4c:	sub	w0, w0, #0x1
    8e50:	str	w0, [sp, #532]
    8e54:	ldr	w0, [sp, #532]
    8e58:	cmp	w0, #0x0
    8e5c:	b.ge	8994 <_gcry_mpih_divrem+0x5e4>  // b.tcont
    8e60:	ldr	x0, [sp, #40]
    8e64:	add	x0, x0, #0x8
    8e68:	ldr	x1, [sp, #520]
    8e6c:	str	x1, [x0]
    8e70:	ldr	x0, [sp, #40]
    8e74:	ldr	x1, [sp, #512]
    8e78:	str	x1, [x0]
    8e7c:	b	9478 <_gcry_mpih_divrem+0x10c8>
    8e80:	ldr	w1, [sp, #48]
    8e84:	ldr	w0, [sp, #28]
    8e88:	sub	w0, w1, w0
    8e8c:	sxtw	x0, w0
    8e90:	lsl	x0, x0, #3
    8e94:	ldr	x1, [sp, #40]
    8e98:	add	x0, x1, x0
    8e9c:	str	x0, [sp, #40]
    8ea0:	ldrsw	x0, [sp, #28]
    8ea4:	lsl	x0, x0, #3
    8ea8:	sub	x0, x0, #0x8
    8eac:	ldr	x1, [sp, #32]
    8eb0:	add	x0, x1, x0
    8eb4:	ldr	x0, [x0]
    8eb8:	str	x0, [sp, #160]
    8ebc:	ldrsw	x0, [sp, #28]
    8ec0:	lsl	x0, x0, #3
    8ec4:	sub	x0, x0, #0x10
    8ec8:	ldr	x1, [sp, #32]
    8ecc:	add	x0, x1, x0
    8ed0:	ldr	x0, [x0]
    8ed4:	str	x0, [sp, #152]
    8ed8:	ldrsw	x0, [sp, #28]
    8edc:	lsl	x0, x0, #3
    8ee0:	sub	x0, x0, #0x8
    8ee4:	ldr	x1, [sp, #40]
    8ee8:	add	x0, x1, x0
    8eec:	ldr	x0, [x0]
    8ef0:	str	x0, [sp, #440]
    8ef4:	ldr	x1, [sp, #440]
    8ef8:	ldr	x0, [sp, #160]
    8efc:	cmp	x1, x0
    8f00:	b.cc	8f6c <_gcry_mpih_divrem+0xbbc>  // b.lo, b.ul, b.last
    8f04:	ldr	x1, [sp, #440]
    8f08:	ldr	x0, [sp, #160]
    8f0c:	cmp	x1, x0
    8f10:	b.hi	8f34 <_gcry_mpih_divrem+0xb84>  // b.pmore
    8f14:	ldr	w0, [sp, #28]
    8f18:	sub	w0, w0, #0x1
    8f1c:	mov	w2, w0
    8f20:	ldr	x1, [sp, #32]
    8f24:	ldr	x0, [sp, #40]
    8f28:	bl	bcf0 <_gcry_mpih_cmp>
    8f2c:	cmp	w0, #0x0
    8f30:	b.lt	8f6c <_gcry_mpih_divrem+0xbbc>  // b.tstop
    8f34:	ldr	w3, [sp, #28]
    8f38:	ldr	x2, [sp, #32]
    8f3c:	ldr	x1, [sp, #40]
    8f40:	ldr	x0, [sp, #40]
    8f44:	bl	7afc <_gcry_mpih_sub_n>
    8f48:	ldrsw	x0, [sp, #28]
    8f4c:	lsl	x0, x0, #3
    8f50:	sub	x0, x0, #0x8
    8f54:	ldr	x1, [sp, #40]
    8f58:	add	x0, x1, x0
    8f5c:	ldr	x0, [x0]
    8f60:	str	x0, [sp, #440]
    8f64:	mov	x0, #0x1                   	// #1
    8f68:	str	x0, [sp, #616]
    8f6c:	ldr	w1, [sp, #52]
    8f70:	ldr	w0, [sp, #48]
    8f74:	add	w1, w1, w0
    8f78:	ldr	w0, [sp, #28]
    8f7c:	sub	w0, w1, w0
    8f80:	sub	w0, w0, #0x1
    8f84:	str	w0, [sp, #452]
    8f88:	b	946c <_gcry_mpih_divrem+0x10bc>
    8f8c:	ldr	w1, [sp, #452]
    8f90:	ldr	w0, [sp, #52]
    8f94:	cmp	w1, w0
    8f98:	b.lt	8fc4 <_gcry_mpih_divrem+0xc14>  // b.tstop
    8f9c:	ldr	x0, [sp, #40]
    8fa0:	sub	x0, x0, #0x8
    8fa4:	str	x0, [sp, #40]
    8fa8:	ldrsw	x0, [sp, #28]
    8fac:	lsl	x0, x0, #3
    8fb0:	ldr	x1, [sp, #40]
    8fb4:	add	x0, x1, x0
    8fb8:	ldr	x0, [x0]
    8fbc:	str	x0, [sp, #416]
    8fc0:	b	903c <_gcry_mpih_divrem+0xc8c>
    8fc4:	ldrsw	x0, [sp, #28]
    8fc8:	lsl	x0, x0, #3
    8fcc:	sub	x0, x0, #0x8
    8fd0:	ldr	x1, [sp, #40]
    8fd4:	add	x0, x1, x0
    8fd8:	ldr	x0, [x0]
    8fdc:	str	x0, [sp, #416]
    8fe0:	ldr	w0, [sp, #28]
    8fe4:	sub	w0, w0, #0x2
    8fe8:	str	w0, [sp, #412]
    8fec:	b	9028 <_gcry_mpih_divrem+0xc78>
    8ff0:	ldrsw	x0, [sp, #412]
    8ff4:	lsl	x0, x0, #3
    8ff8:	ldr	x1, [sp, #40]
    8ffc:	add	x1, x1, x0
    9000:	ldrsw	x0, [sp, #412]
    9004:	add	x0, x0, #0x1
    9008:	lsl	x0, x0, #3
    900c:	ldr	x2, [sp, #40]
    9010:	add	x0, x2, x0
    9014:	ldr	x1, [x1]
    9018:	str	x1, [x0]
    901c:	ldr	w0, [sp, #412]
    9020:	sub	w0, w0, #0x1
    9024:	str	w0, [sp, #412]
    9028:	ldr	w0, [sp, #412]
    902c:	cmp	w0, #0x0
    9030:	b.ge	8ff0 <_gcry_mpih_divrem+0xc40>  // b.tcont
    9034:	ldr	x0, [sp, #40]
    9038:	str	xzr, [x0]
    903c:	ldr	x1, [sp, #440]
    9040:	ldr	x0, [sp, #160]
    9044:	cmp	x1, x0
    9048:	b.ne	9058 <_gcry_mpih_divrem+0xca8>  // b.any
    904c:	mov	x0, #0xffffffffffffffff    	// #-1
    9050:	str	x0, [sp, #432]
    9054:	b	93e4 <_gcry_mpih_divrem+0x1034>
    9058:	ldr	x0, [sp, #160]
    905c:	lsr	x0, x0, #32
    9060:	str	x0, [sp, #144]
    9064:	ldr	x0, [sp, #160]
    9068:	and	x0, x0, #0xffffffff
    906c:	str	x0, [sp, #136]
    9070:	ldr	x0, [sp, #440]
    9074:	ldr	x1, [sp, #144]
    9078:	udiv	x2, x0, x1
    907c:	ldr	x1, [sp, #144]
    9080:	mul	x1, x2, x1
    9084:	sub	x0, x0, x1
    9088:	str	x0, [sp, #376]
    908c:	ldr	x1, [sp, #440]
    9090:	ldr	x0, [sp, #144]
    9094:	udiv	x0, x1, x0
    9098:	str	x0, [sp, #392]
    909c:	ldr	x1, [sp, #392]
    90a0:	ldr	x0, [sp, #136]
    90a4:	mul	x0, x1, x0
    90a8:	str	x0, [sp, #128]
    90ac:	ldr	x0, [sp, #376]
    90b0:	lsl	x1, x0, #32
    90b4:	ldrsw	x0, [sp, #28]
    90b8:	lsl	x0, x0, #3
    90bc:	sub	x0, x0, #0x8
    90c0:	ldr	x2, [sp, #40]
    90c4:	add	x0, x2, x0
    90c8:	ldr	x0, [x0]
    90cc:	lsr	x0, x0, #32
    90d0:	orr	x0, x1, x0
    90d4:	str	x0, [sp, #376]
    90d8:	ldr	x1, [sp, #376]
    90dc:	ldr	x0, [sp, #128]
    90e0:	cmp	x1, x0
    90e4:	b.cs	9140 <_gcry_mpih_divrem+0xd90>  // b.hs, b.nlast
    90e8:	ldr	x0, [sp, #392]
    90ec:	sub	x0, x0, #0x1
    90f0:	str	x0, [sp, #392]
    90f4:	ldr	x1, [sp, #376]
    90f8:	ldr	x0, [sp, #160]
    90fc:	add	x0, x1, x0
    9100:	str	x0, [sp, #376]
    9104:	ldr	x1, [sp, #376]
    9108:	ldr	x0, [sp, #160]
    910c:	cmp	x1, x0
    9110:	b.cc	9140 <_gcry_mpih_divrem+0xd90>  // b.lo, b.ul, b.last
    9114:	ldr	x1, [sp, #376]
    9118:	ldr	x0, [sp, #128]
    911c:	cmp	x1, x0
    9120:	b.cs	9140 <_gcry_mpih_divrem+0xd90>  // b.hs, b.nlast
    9124:	ldr	x0, [sp, #392]
    9128:	sub	x0, x0, #0x1
    912c:	str	x0, [sp, #392]
    9130:	ldr	x1, [sp, #376]
    9134:	ldr	x0, [sp, #160]
    9138:	add	x0, x1, x0
    913c:	str	x0, [sp, #376]
    9140:	ldr	x1, [sp, #376]
    9144:	ldr	x0, [sp, #128]
    9148:	sub	x0, x1, x0
    914c:	str	x0, [sp, #376]
    9150:	ldr	x0, [sp, #376]
    9154:	ldr	x1, [sp, #144]
    9158:	udiv	x2, x0, x1
    915c:	ldr	x1, [sp, #144]
    9160:	mul	x1, x2, x1
    9164:	sub	x0, x0, x1
    9168:	str	x0, [sp, #368]
    916c:	ldr	x1, [sp, #376]
    9170:	ldr	x0, [sp, #144]
    9174:	udiv	x0, x1, x0
    9178:	str	x0, [sp, #384]
    917c:	ldr	x1, [sp, #384]
    9180:	ldr	x0, [sp, #136]
    9184:	mul	x0, x1, x0
    9188:	str	x0, [sp, #128]
    918c:	ldr	x0, [sp, #368]
    9190:	lsl	x1, x0, #32
    9194:	ldrsw	x0, [sp, #28]
    9198:	lsl	x0, x0, #3
    919c:	sub	x0, x0, #0x8
    91a0:	ldr	x2, [sp, #40]
    91a4:	add	x0, x2, x0
    91a8:	ldr	x0, [x0]
    91ac:	and	x0, x0, #0xffffffff
    91b0:	orr	x0, x1, x0
    91b4:	str	x0, [sp, #368]
    91b8:	ldr	x1, [sp, #368]
    91bc:	ldr	x0, [sp, #128]
    91c0:	cmp	x1, x0
    91c4:	b.cs	9220 <_gcry_mpih_divrem+0xe70>  // b.hs, b.nlast
    91c8:	ldr	x0, [sp, #384]
    91cc:	sub	x0, x0, #0x1
    91d0:	str	x0, [sp, #384]
    91d4:	ldr	x1, [sp, #368]
    91d8:	ldr	x0, [sp, #160]
    91dc:	add	x0, x1, x0
    91e0:	str	x0, [sp, #368]
    91e4:	ldr	x1, [sp, #368]
    91e8:	ldr	x0, [sp, #160]
    91ec:	cmp	x1, x0
    91f0:	b.cc	9220 <_gcry_mpih_divrem+0xe70>  // b.lo, b.ul, b.last
    91f4:	ldr	x1, [sp, #368]
    91f8:	ldr	x0, [sp, #128]
    91fc:	cmp	x1, x0
    9200:	b.cs	9220 <_gcry_mpih_divrem+0xe70>  // b.hs, b.nlast
    9204:	ldr	x0, [sp, #384]
    9208:	sub	x0, x0, #0x1
    920c:	str	x0, [sp, #384]
    9210:	ldr	x1, [sp, #368]
    9214:	ldr	x0, [sp, #160]
    9218:	add	x0, x1, x0
    921c:	str	x0, [sp, #368]
    9220:	ldr	x1, [sp, #368]
    9224:	ldr	x0, [sp, #128]
    9228:	sub	x0, x1, x0
    922c:	str	x0, [sp, #368]
    9230:	ldr	x0, [sp, #392]
    9234:	lsl	x0, x0, #32
    9238:	ldr	x1, [sp, #384]
    923c:	orr	x0, x1, x0
    9240:	str	x0, [sp, #432]
    9244:	ldr	x0, [sp, #368]
    9248:	str	x0, [sp, #400]
    924c:	ldr	x0, [sp, #152]
    9250:	str	x0, [sp, #120]
    9254:	ldr	x0, [sp, #432]
    9258:	str	x0, [sp, #112]
    925c:	ldr	x0, [sp, #120]
    9260:	str	w0, [sp, #108]
    9264:	ldr	x0, [sp, #120]
    9268:	lsr	x0, x0, #32
    926c:	str	w0, [sp, #104]
    9270:	ldr	x0, [sp, #112]
    9274:	str	w0, [sp, #100]
    9278:	ldr	x0, [sp, #112]
    927c:	lsr	x0, x0, #32
    9280:	str	w0, [sp, #96]
    9284:	ldr	w1, [sp, #108]
    9288:	ldr	w0, [sp, #100]
    928c:	mul	x0, x1, x0
    9290:	str	x0, [sp, #88]
    9294:	ldr	w1, [sp, #108]
    9298:	ldr	w0, [sp, #96]
    929c:	mul	x0, x1, x0
    92a0:	str	x0, [sp, #80]
    92a4:	ldr	w1, [sp, #104]
    92a8:	ldr	w0, [sp, #100]
    92ac:	mul	x0, x1, x0
    92b0:	str	x0, [sp, #72]
    92b4:	ldr	w1, [sp, #104]
    92b8:	ldr	w0, [sp, #96]
    92bc:	mul	x0, x1, x0
    92c0:	str	x0, [sp, #360]
    92c4:	ldr	x0, [sp, #88]
    92c8:	lsr	x0, x0, #32
    92cc:	ldr	x1, [sp, #80]
    92d0:	add	x0, x1, x0
    92d4:	str	x0, [sp, #80]
    92d8:	ldr	x1, [sp, #80]
    92dc:	ldr	x0, [sp, #72]
    92e0:	add	x0, x1, x0
    92e4:	str	x0, [sp, #80]
    92e8:	ldr	x1, [sp, #80]
    92ec:	ldr	x0, [sp, #72]
    92f0:	cmp	x1, x0
    92f4:	b.cs	9308 <_gcry_mpih_divrem+0xf58>  // b.hs, b.nlast
    92f8:	ldr	x1, [sp, #360]
    92fc:	mov	x0, #0x100000000           	// #4294967296
    9300:	add	x0, x1, x0
    9304:	str	x0, [sp, #360]
    9308:	ldr	x0, [sp, #80]
    930c:	lsr	x0, x0, #32
    9310:	ldr	x1, [sp, #360]
    9314:	add	x0, x1, x0
    9318:	str	x0, [sp, #424]
    931c:	ldr	x0, [sp, #80]
    9320:	lsl	x1, x0, #32
    9324:	ldr	x0, [sp, #88]
    9328:	and	x0, x0, #0xffffffff
    932c:	add	x0, x1, x0
    9330:	str	x0, [sp, #440]
    9334:	b	9398 <_gcry_mpih_divrem+0xfe8>
    9338:	ldr	x0, [sp, #432]
    933c:	sub	x0, x0, #0x1
    9340:	str	x0, [sp, #432]
    9344:	ldr	x1, [sp, #400]
    9348:	ldr	x0, [sp, #160]
    934c:	add	x0, x1, x0
    9350:	str	x0, [sp, #400]
    9354:	ldr	x1, [sp, #400]
    9358:	ldr	x0, [sp, #160]
    935c:	cmp	x1, x0
    9360:	b.cc	93e0 <_gcry_mpih_divrem+0x1030>  // b.lo, b.ul, b.last
    9364:	ldr	x1, [sp, #440]
    9368:	ldr	x0, [sp, #152]
    936c:	cmp	x1, x0
    9370:	cset	w0, cc  // cc = lo, ul, last
    9374:	and	w0, w0, #0xff
    9378:	and	x0, x0, #0xff
    937c:	ldr	x1, [sp, #424]
    9380:	sub	x0, x1, x0
    9384:	str	x0, [sp, #424]
    9388:	ldr	x1, [sp, #440]
    938c:	ldr	x0, [sp, #152]
    9390:	sub	x0, x1, x0
    9394:	str	x0, [sp, #440]
    9398:	ldr	x1, [sp, #424]
    939c:	ldr	x0, [sp, #400]
    93a0:	cmp	x1, x0
    93a4:	b.hi	9338 <_gcry_mpih_divrem+0xf88>  // b.pmore
    93a8:	ldr	x1, [sp, #424]
    93ac:	ldr	x0, [sp, #400]
    93b0:	cmp	x1, x0
    93b4:	b.ne	93e4 <_gcry_mpih_divrem+0x1034>  // b.any
    93b8:	ldrsw	x0, [sp, #28]
    93bc:	lsl	x0, x0, #3
    93c0:	sub	x0, x0, #0x10
    93c4:	ldr	x1, [sp, #40]
    93c8:	add	x0, x1, x0
    93cc:	ldr	x0, [x0]
    93d0:	ldr	x1, [sp, #440]
    93d4:	cmp	x1, x0
    93d8:	b.hi	9338 <_gcry_mpih_divrem+0xf88>  // b.pmore
    93dc:	b	93e4 <_gcry_mpih_divrem+0x1034>
    93e0:	nop
    93e4:	ldr	x3, [sp, #432]
    93e8:	ldr	w2, [sp, #28]
    93ec:	ldr	x1, [sp, #32]
    93f0:	ldr	x0, [sp, #40]
    93f4:	bl	77b4 <_gcry_mpih_submul_1>
    93f8:	str	x0, [sp, #64]
    93fc:	ldr	x1, [sp, #416]
    9400:	ldr	x0, [sp, #64]
    9404:	cmp	x1, x0
    9408:	b.eq	942c <_gcry_mpih_divrem+0x107c>  // b.none
    940c:	ldr	w3, [sp, #28]
    9410:	ldr	x2, [sp, #32]
    9414:	ldr	x1, [sp, #40]
    9418:	ldr	x0, [sp, #40]
    941c:	bl	79c4 <_gcry_mpih_add_n>
    9420:	ldr	x0, [sp, #432]
    9424:	sub	x0, x0, #0x1
    9428:	str	x0, [sp, #432]
    942c:	ldrsw	x0, [sp, #452]
    9430:	lsl	x0, x0, #3
    9434:	ldr	x1, [sp, #56]
    9438:	add	x0, x1, x0
    943c:	ldr	x1, [sp, #432]
    9440:	str	x1, [x0]
    9444:	ldrsw	x0, [sp, #28]
    9448:	lsl	x0, x0, #3
    944c:	sub	x0, x0, #0x8
    9450:	ldr	x1, [sp, #40]
    9454:	add	x0, x1, x0
    9458:	ldr	x0, [x0]
    945c:	str	x0, [sp, #440]
    9460:	ldr	w0, [sp, #452]
    9464:	sub	w0, w0, #0x1
    9468:	str	w0, [sp, #452]
    946c:	ldr	w0, [sp, #452]
    9470:	cmp	w0, #0x0
    9474:	b.ge	8f8c <_gcry_mpih_divrem+0xbdc>  // b.tcont
    9478:	ldr	x0, [sp, #616]
    947c:	ldp	x29, x30, [sp]
    9480:	add	sp, sp, #0x270
    9484:	ret
	...

0000000000009490 <_gcry_mpih_divmod_1>:
    9490:	sub	sp, sp, #0x100
    9494:	str	x0, [sp, #24]
    9498:	str	x1, [sp, #16]
    949c:	str	w2, [sp, #12]
    94a0:	str	x3, [sp]
    94a4:	ldr	w0, [sp, #12]
    94a8:	cmp	w0, #0x0
    94ac:	b.ne	94b8 <_gcry_mpih_divmod_1+0x28>  // b.any
    94b0:	mov	x0, #0x0                   	// #0
    94b4:	b	9c58 <_gcry_mpih_divmod_1+0x7c8>
    94b8:	ldr	x0, [sp]
    94bc:	str	x0, [sp, #48]
    94c0:	mov	x0, #0x38                  	// #56
    94c4:	str	x0, [sp, #40]
    94c8:	b	94f4 <_gcry_mpih_divmod_1+0x64>
    94cc:	ldr	x0, [sp, #40]
    94d0:	mov	w1, w0
    94d4:	ldr	x0, [sp, #48]
    94d8:	lsr	x0, x0, x1
    94dc:	and	x0, x0, #0xff
    94e0:	cmp	x0, #0x0
    94e4:	b.ne	9504 <_gcry_mpih_divmod_1+0x74>  // b.any
    94e8:	ldr	x0, [sp, #40]
    94ec:	sub	x0, x0, #0x8
    94f0:	str	x0, [sp, #40]
    94f4:	ldr	x0, [sp, #40]
    94f8:	cmp	x0, #0x0
    94fc:	b.ne	94cc <_gcry_mpih_divmod_1+0x3c>  // b.any
    9500:	b	9508 <_gcry_mpih_divmod_1+0x78>
    9504:	nop
    9508:	ldr	x0, [sp, #40]
    950c:	mov	w1, w0
    9510:	ldr	x0, [sp, #48]
    9514:	lsr	x0, x0, x1
    9518:	adrp	x1, 0 <grub_memcpy>
    951c:	add	x1, x1, #0x0
    9520:	ldr	x1, [x1]
    9524:	ldrb	w0, [x1, x0]
    9528:	mov	w1, w0
    952c:	ldr	x0, [sp, #40]
    9530:	add	w0, w1, w0
    9534:	mov	w1, #0x40                  	// #64
    9538:	sub	w0, w1, w0
    953c:	str	w0, [sp, #36]
    9540:	ldr	w0, [sp, #36]
    9544:	cmp	w0, #0x0
    9548:	b.eq	99e8 <_gcry_mpih_divmod_1+0x558>  // b.none
    954c:	ldr	w0, [sp, #36]
    9550:	ldr	x1, [sp]
    9554:	lsl	x0, x1, x0
    9558:	str	x0, [sp]
    955c:	ldrsw	x0, [sp, #12]
    9560:	lsl	x0, x0, #3
    9564:	sub	x0, x0, #0x8
    9568:	ldr	x1, [sp, #16]
    956c:	add	x0, x1, x0
    9570:	ldr	x0, [x0]
    9574:	str	x0, [sp, #232]
    9578:	mov	w1, #0x40                  	// #64
    957c:	ldr	w0, [sp, #36]
    9580:	sub	w0, w1, w0
    9584:	ldr	x1, [sp, #232]
    9588:	lsr	x0, x1, x0
    958c:	str	x0, [sp, #240]
    9590:	ldr	w0, [sp, #12]
    9594:	sub	w0, w0, #0x2
    9598:	str	w0, [sp, #228]
    959c:	b	97ec <_gcry_mpih_divmod_1+0x35c>
    95a0:	ldrsw	x0, [sp, #228]
    95a4:	lsl	x0, x0, #3
    95a8:	ldr	x1, [sp, #16]
    95ac:	add	x0, x1, x0
    95b0:	ldr	x0, [x0]
    95b4:	str	x0, [sp, #176]
    95b8:	ldr	x0, [sp]
    95bc:	lsr	x0, x0, #32
    95c0:	str	x0, [sp, #168]
    95c4:	ldr	x0, [sp]
    95c8:	and	x0, x0, #0xffffffff
    95cc:	str	x0, [sp, #184]
    95d0:	ldr	x0, [sp, #240]
    95d4:	ldr	x1, [sp, #168]
    95d8:	udiv	x2, x0, x1
    95dc:	ldr	x1, [sp, #168]
    95e0:	mul	x1, x2, x1
    95e4:	sub	x0, x0, x1
    95e8:	str	x0, [sp, #216]
    95ec:	ldr	x1, [sp, #240]
    95f0:	ldr	x0, [sp, #168]
    95f4:	udiv	x0, x1, x0
    95f8:	str	x0, [sp, #208]
    95fc:	ldr	x1, [sp, #208]
    9600:	ldr	x0, [sp, #184]
    9604:	mul	x0, x1, x0
    9608:	str	x0, [sp, #192]
    960c:	ldr	x0, [sp, #216]
    9610:	lsl	x1, x0, #32
    9614:	ldr	w0, [sp, #36]
    9618:	ldr	x2, [sp, #232]
    961c:	lsl	x2, x2, x0
    9620:	mov	w3, #0x40                  	// #64
    9624:	ldr	w0, [sp, #36]
    9628:	sub	w0, w3, w0
    962c:	ldr	x3, [sp, #176]
    9630:	lsr	x0, x3, x0
    9634:	orr	x0, x2, x0
    9638:	lsr	x0, x0, #32
    963c:	orr	x0, x1, x0
    9640:	str	x0, [sp, #216]
    9644:	ldr	x1, [sp, #216]
    9648:	ldr	x0, [sp, #192]
    964c:	cmp	x1, x0
    9650:	b.cs	96ac <_gcry_mpih_divmod_1+0x21c>  // b.hs, b.nlast
    9654:	ldr	x0, [sp, #208]
    9658:	sub	x0, x0, #0x1
    965c:	str	x0, [sp, #208]
    9660:	ldr	x1, [sp, #216]
    9664:	ldr	x0, [sp]
    9668:	add	x0, x1, x0
    966c:	str	x0, [sp, #216]
    9670:	ldr	x1, [sp, #216]
    9674:	ldr	x0, [sp]
    9678:	cmp	x1, x0
    967c:	b.cc	96ac <_gcry_mpih_divmod_1+0x21c>  // b.lo, b.ul, b.last
    9680:	ldr	x1, [sp, #216]
    9684:	ldr	x0, [sp, #192]
    9688:	cmp	x1, x0
    968c:	b.cs	96ac <_gcry_mpih_divmod_1+0x21c>  // b.hs, b.nlast
    9690:	ldr	x0, [sp, #208]
    9694:	sub	x0, x0, #0x1
    9698:	str	x0, [sp, #208]
    969c:	ldr	x1, [sp, #216]
    96a0:	ldr	x0, [sp]
    96a4:	add	x0, x1, x0
    96a8:	str	x0, [sp, #216]
    96ac:	ldr	x1, [sp, #216]
    96b0:	ldr	x0, [sp, #192]
    96b4:	sub	x0, x1, x0
    96b8:	str	x0, [sp, #216]
    96bc:	ldr	x0, [sp, #216]
    96c0:	ldr	x1, [sp, #168]
    96c4:	udiv	x2, x0, x1
    96c8:	ldr	x1, [sp, #168]
    96cc:	mul	x1, x2, x1
    96d0:	sub	x0, x0, x1
    96d4:	str	x0, [sp, #248]
    96d8:	ldr	x1, [sp, #216]
    96dc:	ldr	x0, [sp, #168]
    96e0:	udiv	x0, x1, x0
    96e4:	str	x0, [sp, #200]
    96e8:	ldr	x1, [sp, #200]
    96ec:	ldr	x0, [sp, #184]
    96f0:	mul	x0, x1, x0
    96f4:	str	x0, [sp, #192]
    96f8:	ldr	x0, [sp, #248]
    96fc:	lsl	x1, x0, #32
    9700:	ldr	w0, [sp, #36]
    9704:	ldr	x2, [sp, #232]
    9708:	lsl	x2, x2, x0
    970c:	mov	w3, #0x40                  	// #64
    9710:	ldr	w0, [sp, #36]
    9714:	sub	w0, w3, w0
    9718:	ldr	x3, [sp, #176]
    971c:	lsr	x0, x3, x0
    9720:	orr	x0, x2, x0
    9724:	and	x0, x0, #0xffffffff
    9728:	orr	x0, x1, x0
    972c:	str	x0, [sp, #248]
    9730:	ldr	x1, [sp, #248]
    9734:	ldr	x0, [sp, #192]
    9738:	cmp	x1, x0
    973c:	b.cs	9798 <_gcry_mpih_divmod_1+0x308>  // b.hs, b.nlast
    9740:	ldr	x0, [sp, #200]
    9744:	sub	x0, x0, #0x1
    9748:	str	x0, [sp, #200]
    974c:	ldr	x1, [sp, #248]
    9750:	ldr	x0, [sp]
    9754:	add	x0, x1, x0
    9758:	str	x0, [sp, #248]
    975c:	ldr	x1, [sp, #248]
    9760:	ldr	x0, [sp]
    9764:	cmp	x1, x0
    9768:	b.cc	9798 <_gcry_mpih_divmod_1+0x308>  // b.lo, b.ul, b.last
    976c:	ldr	x1, [sp, #248]
    9770:	ldr	x0, [sp, #192]
    9774:	cmp	x1, x0
    9778:	b.cs	9798 <_gcry_mpih_divmod_1+0x308>  // b.hs, b.nlast
    977c:	ldr	x0, [sp, #200]
    9780:	sub	x0, x0, #0x1
    9784:	str	x0, [sp, #200]
    9788:	ldr	x1, [sp, #248]
    978c:	ldr	x0, [sp]
    9790:	add	x0, x1, x0
    9794:	str	x0, [sp, #248]
    9798:	ldr	x1, [sp, #248]
    979c:	ldr	x0, [sp, #192]
    97a0:	sub	x0, x1, x0
    97a4:	str	x0, [sp, #248]
    97a8:	ldr	x0, [sp, #208]
    97ac:	lsl	x2, x0, #32
    97b0:	ldrsw	x0, [sp, #228]
    97b4:	add	x0, x0, #0x1
    97b8:	lsl	x0, x0, #3
    97bc:	ldr	x1, [sp, #24]
    97c0:	add	x0, x1, x0
    97c4:	ldr	x1, [sp, #200]
    97c8:	orr	x1, x2, x1
    97cc:	str	x1, [x0]
    97d0:	ldr	x0, [sp, #248]
    97d4:	str	x0, [sp, #240]
    97d8:	ldr	x0, [sp, #176]
    97dc:	str	x0, [sp, #232]
    97e0:	ldr	w0, [sp, #228]
    97e4:	sub	w0, w0, #0x1
    97e8:	str	w0, [sp, #228]
    97ec:	ldr	w0, [sp, #228]
    97f0:	cmp	w0, #0x0
    97f4:	b.ge	95a0 <_gcry_mpih_divmod_1+0x110>  // b.tcont
    97f8:	ldr	x0, [sp]
    97fc:	lsr	x0, x0, #32
    9800:	str	x0, [sp, #128]
    9804:	ldr	x0, [sp]
    9808:	and	x0, x0, #0xffffffff
    980c:	str	x0, [sp, #120]
    9810:	ldr	x0, [sp, #240]
    9814:	ldr	x1, [sp, #128]
    9818:	udiv	x2, x0, x1
    981c:	ldr	x1, [sp, #128]
    9820:	mul	x1, x2, x1
    9824:	sub	x0, x0, x1
    9828:	str	x0, [sp, #160]
    982c:	ldr	x1, [sp, #240]
    9830:	ldr	x0, [sp, #128]
    9834:	udiv	x0, x1, x0
    9838:	str	x0, [sp, #112]
    983c:	ldr	x1, [sp, #112]
    9840:	ldr	x0, [sp, #120]
    9844:	mul	x0, x1, x0
    9848:	str	x0, [sp, #136]
    984c:	ldr	x0, [sp, #160]
    9850:	lsl	x1, x0, #32
    9854:	ldr	w0, [sp, #36]
    9858:	ldr	x2, [sp, #232]
    985c:	lsl	x0, x2, x0
    9860:	lsr	x0, x0, #32
    9864:	orr	x0, x1, x0
    9868:	str	x0, [sp, #160]
    986c:	ldr	x1, [sp, #160]
    9870:	ldr	x0, [sp, #136]
    9874:	cmp	x1, x0
    9878:	b.cs	98d4 <_gcry_mpih_divmod_1+0x444>  // b.hs, b.nlast
    987c:	ldr	x0, [sp, #112]
    9880:	sub	x0, x0, #0x1
    9884:	str	x0, [sp, #112]
    9888:	ldr	x1, [sp, #160]
    988c:	ldr	x0, [sp]
    9890:	add	x0, x1, x0
    9894:	str	x0, [sp, #160]
    9898:	ldr	x1, [sp, #160]
    989c:	ldr	x0, [sp]
    98a0:	cmp	x1, x0
    98a4:	b.cc	98d4 <_gcry_mpih_divmod_1+0x444>  // b.lo, b.ul, b.last
    98a8:	ldr	x1, [sp, #160]
    98ac:	ldr	x0, [sp, #136]
    98b0:	cmp	x1, x0
    98b4:	b.cs	98d4 <_gcry_mpih_divmod_1+0x444>  // b.hs, b.nlast
    98b8:	ldr	x0, [sp, #112]
    98bc:	sub	x0, x0, #0x1
    98c0:	str	x0, [sp, #112]
    98c4:	ldr	x1, [sp, #160]
    98c8:	ldr	x0, [sp]
    98cc:	add	x0, x1, x0
    98d0:	str	x0, [sp, #160]
    98d4:	ldr	x1, [sp, #160]
    98d8:	ldr	x0, [sp, #136]
    98dc:	sub	x0, x1, x0
    98e0:	str	x0, [sp, #160]
    98e4:	ldr	x0, [sp, #160]
    98e8:	ldr	x1, [sp, #128]
    98ec:	udiv	x2, x0, x1
    98f0:	ldr	x1, [sp, #128]
    98f4:	mul	x1, x2, x1
    98f8:	sub	x0, x0, x1
    98fc:	str	x0, [sp, #152]
    9900:	ldr	x1, [sp, #160]
    9904:	ldr	x0, [sp, #128]
    9908:	udiv	x0, x1, x0
    990c:	str	x0, [sp, #144]
    9910:	ldr	x1, [sp, #144]
    9914:	ldr	x0, [sp, #120]
    9918:	mul	x0, x1, x0
    991c:	str	x0, [sp, #136]
    9920:	ldr	x0, [sp, #152]
    9924:	lsl	x1, x0, #32
    9928:	ldr	w0, [sp, #36]
    992c:	ldr	x2, [sp, #232]
    9930:	lsl	x0, x2, x0
    9934:	and	x0, x0, #0xffffffff
    9938:	orr	x0, x1, x0
    993c:	str	x0, [sp, #152]
    9940:	ldr	x1, [sp, #152]
    9944:	ldr	x0, [sp, #136]
    9948:	cmp	x1, x0
    994c:	b.cs	99a8 <_gcry_mpih_divmod_1+0x518>  // b.hs, b.nlast
    9950:	ldr	x0, [sp, #144]
    9954:	sub	x0, x0, #0x1
    9958:	str	x0, [sp, #144]
    995c:	ldr	x1, [sp, #152]
    9960:	ldr	x0, [sp]
    9964:	add	x0, x1, x0
    9968:	str	x0, [sp, #152]
    996c:	ldr	x1, [sp, #152]
    9970:	ldr	x0, [sp]
    9974:	cmp	x1, x0
    9978:	b.cc	99a8 <_gcry_mpih_divmod_1+0x518>  // b.lo, b.ul, b.last
    997c:	ldr	x1, [sp, #152]
    9980:	ldr	x0, [sp, #136]
    9984:	cmp	x1, x0
    9988:	b.cs	99a8 <_gcry_mpih_divmod_1+0x518>  // b.hs, b.nlast
    998c:	ldr	x0, [sp, #144]
    9990:	sub	x0, x0, #0x1
    9994:	str	x0, [sp, #144]
    9998:	ldr	x1, [sp, #152]
    999c:	ldr	x0, [sp]
    99a0:	add	x0, x1, x0
    99a4:	str	x0, [sp, #152]
    99a8:	ldr	x1, [sp, #152]
    99ac:	ldr	x0, [sp, #136]
    99b0:	sub	x0, x1, x0
    99b4:	str	x0, [sp, #152]
    99b8:	ldr	x0, [sp, #112]
    99bc:	lsl	x1, x0, #32
    99c0:	ldr	x0, [sp, #144]
    99c4:	orr	x1, x1, x0
    99c8:	ldr	x0, [sp, #24]
    99cc:	str	x1, [x0]
    99d0:	ldr	x0, [sp, #152]
    99d4:	str	x0, [sp, #240]
    99d8:	ldr	w0, [sp, #36]
    99dc:	ldr	x1, [sp, #240]
    99e0:	lsr	x0, x1, x0
    99e4:	b	9c58 <_gcry_mpih_divmod_1+0x7c8>
    99e8:	ldr	w0, [sp, #12]
    99ec:	sub	w0, w0, #0x1
    99f0:	str	w0, [sp, #228]
    99f4:	ldrsw	x0, [sp, #228]
    99f8:	lsl	x0, x0, #3
    99fc:	ldr	x1, [sp, #16]
    9a00:	add	x0, x1, x0
    9a04:	ldr	x0, [x0]
    9a08:	str	x0, [sp, #240]
    9a0c:	ldr	x1, [sp, #240]
    9a10:	ldr	x0, [sp]
    9a14:	cmp	x1, x0
    9a18:	b.cc	9a24 <_gcry_mpih_divmod_1+0x594>  // b.lo, b.ul, b.last
    9a1c:	str	xzr, [sp, #240]
    9a20:	b	9c48 <_gcry_mpih_divmod_1+0x7b8>
    9a24:	ldr	w0, [sp, #228]
    9a28:	sub	w1, w0, #0x1
    9a2c:	str	w1, [sp, #228]
    9a30:	sxtw	x0, w0
    9a34:	lsl	x0, x0, #3
    9a38:	ldr	x1, [sp, #24]
    9a3c:	add	x0, x1, x0
    9a40:	str	xzr, [x0]
    9a44:	b	9c48 <_gcry_mpih_divmod_1+0x7b8>
    9a48:	ldrsw	x0, [sp, #228]
    9a4c:	lsl	x0, x0, #3
    9a50:	ldr	x1, [sp, #16]
    9a54:	add	x0, x1, x0
    9a58:	ldr	x0, [x0]
    9a5c:	str	x0, [sp, #176]
    9a60:	ldr	x0, [sp]
    9a64:	lsr	x0, x0, #32
    9a68:	str	x0, [sp, #64]
    9a6c:	ldr	x0, [sp]
    9a70:	and	x0, x0, #0xffffffff
    9a74:	str	x0, [sp, #56]
    9a78:	ldr	x0, [sp, #240]
    9a7c:	ldr	x1, [sp, #64]
    9a80:	udiv	x2, x0, x1
    9a84:	ldr	x1, [sp, #64]
    9a88:	mul	x1, x2, x1
    9a8c:	sub	x0, x0, x1
    9a90:	str	x0, [sp, #80]
    9a94:	ldr	x1, [sp, #240]
    9a98:	ldr	x0, [sp, #64]
    9a9c:	udiv	x0, x1, x0
    9aa0:	str	x0, [sp, #72]
    9aa4:	ldr	x1, [sp, #72]
    9aa8:	ldr	x0, [sp, #56]
    9aac:	mul	x0, x1, x0
    9ab0:	str	x0, [sp, #88]
    9ab4:	ldr	x0, [sp, #80]
    9ab8:	lsl	x1, x0, #32
    9abc:	ldr	x0, [sp, #176]
    9ac0:	lsr	x0, x0, #32
    9ac4:	orr	x0, x1, x0
    9ac8:	str	x0, [sp, #80]
    9acc:	ldr	x1, [sp, #80]
    9ad0:	ldr	x0, [sp, #88]
    9ad4:	cmp	x1, x0
    9ad8:	b.cs	9b34 <_gcry_mpih_divmod_1+0x6a4>  // b.hs, b.nlast
    9adc:	ldr	x0, [sp, #72]
    9ae0:	sub	x0, x0, #0x1
    9ae4:	str	x0, [sp, #72]
    9ae8:	ldr	x1, [sp, #80]
    9aec:	ldr	x0, [sp]
    9af0:	add	x0, x1, x0
    9af4:	str	x0, [sp, #80]
    9af8:	ldr	x1, [sp, #80]
    9afc:	ldr	x0, [sp]
    9b00:	cmp	x1, x0
    9b04:	b.cc	9b34 <_gcry_mpih_divmod_1+0x6a4>  // b.lo, b.ul, b.last
    9b08:	ldr	x1, [sp, #80]
    9b0c:	ldr	x0, [sp, #88]
    9b10:	cmp	x1, x0
    9b14:	b.cs	9b34 <_gcry_mpih_divmod_1+0x6a4>  // b.hs, b.nlast
    9b18:	ldr	x0, [sp, #72]
    9b1c:	sub	x0, x0, #0x1
    9b20:	str	x0, [sp, #72]
    9b24:	ldr	x1, [sp, #80]
    9b28:	ldr	x0, [sp]
    9b2c:	add	x0, x1, x0
    9b30:	str	x0, [sp, #80]
    9b34:	ldr	x1, [sp, #80]
    9b38:	ldr	x0, [sp, #88]
    9b3c:	sub	x0, x1, x0
    9b40:	str	x0, [sp, #80]
    9b44:	ldr	x0, [sp, #80]
    9b48:	ldr	x1, [sp, #64]
    9b4c:	udiv	x2, x0, x1
    9b50:	ldr	x1, [sp, #64]
    9b54:	mul	x1, x2, x1
    9b58:	sub	x0, x0, x1
    9b5c:	str	x0, [sp, #96]
    9b60:	ldr	x1, [sp, #80]
    9b64:	ldr	x0, [sp, #64]
    9b68:	udiv	x0, x1, x0
    9b6c:	str	x0, [sp, #104]
    9b70:	ldr	x1, [sp, #104]
    9b74:	ldr	x0, [sp, #56]
    9b78:	mul	x0, x1, x0
    9b7c:	str	x0, [sp, #88]
    9b80:	ldr	x0, [sp, #96]
    9b84:	lsl	x1, x0, #32
    9b88:	ldr	x0, [sp, #176]
    9b8c:	and	x0, x0, #0xffffffff
    9b90:	orr	x0, x1, x0
    9b94:	str	x0, [sp, #96]
    9b98:	ldr	x1, [sp, #96]
    9b9c:	ldr	x0, [sp, #88]
    9ba0:	cmp	x1, x0
    9ba4:	b.cs	9c00 <_gcry_mpih_divmod_1+0x770>  // b.hs, b.nlast
    9ba8:	ldr	x0, [sp, #104]
    9bac:	sub	x0, x0, #0x1
    9bb0:	str	x0, [sp, #104]
    9bb4:	ldr	x1, [sp, #96]
    9bb8:	ldr	x0, [sp]
    9bbc:	add	x0, x1, x0
    9bc0:	str	x0, [sp, #96]
    9bc4:	ldr	x1, [sp, #96]
    9bc8:	ldr	x0, [sp]
    9bcc:	cmp	x1, x0
    9bd0:	b.cc	9c00 <_gcry_mpih_divmod_1+0x770>  // b.lo, b.ul, b.last
    9bd4:	ldr	x1, [sp, #96]
    9bd8:	ldr	x0, [sp, #88]
    9bdc:	cmp	x1, x0
    9be0:	b.cs	9c00 <_gcry_mpih_divmod_1+0x770>  // b.hs, b.nlast
    9be4:	ldr	x0, [sp, #104]
    9be8:	sub	x0, x0, #0x1
    9bec:	str	x0, [sp, #104]
    9bf0:	ldr	x1, [sp, #96]
    9bf4:	ldr	x0, [sp]
    9bf8:	add	x0, x1, x0
    9bfc:	str	x0, [sp, #96]
    9c00:	ldr	x1, [sp, #96]
    9c04:	ldr	x0, [sp, #88]
    9c08:	sub	x0, x1, x0
    9c0c:	str	x0, [sp, #96]
    9c10:	ldr	x0, [sp, #72]
    9c14:	lsl	x2, x0, #32
    9c18:	ldrsw	x0, [sp, #228]
    9c1c:	lsl	x0, x0, #3
    9c20:	ldr	x1, [sp, #24]
    9c24:	add	x0, x1, x0
    9c28:	ldr	x1, [sp, #104]
    9c2c:	orr	x1, x2, x1
    9c30:	str	x1, [x0]
    9c34:	ldr	x0, [sp, #96]
    9c38:	str	x0, [sp, #240]
    9c3c:	ldr	w0, [sp, #228]
    9c40:	sub	w0, w0, #0x1
    9c44:	str	w0, [sp, #228]
    9c48:	ldr	w0, [sp, #228]
    9c4c:	cmp	w0, #0x0
    9c50:	b.ge	9a48 <_gcry_mpih_divmod_1+0x5b8>  // b.tcont
    9c54:	ldr	x0, [sp, #240]
    9c58:	add	sp, sp, #0x100
    9c5c:	ret
	...

0000000000009c68 <grub_memcpy>:
    9c68:	stp	x29, x30, [sp, #-48]!
    9c6c:	mov	x29, sp
    9c70:	str	x0, [sp, #40]
    9c74:	str	x1, [sp, #32]
    9c78:	str	x2, [sp, #24]
    9c7c:	ldr	x2, [sp, #24]
    9c80:	ldr	x1, [sp, #32]
    9c84:	ldr	x0, [sp, #40]
    9c88:	bl	0 <grub_memmove>
    9c8c:	ldp	x29, x30, [sp], #48
    9c90:	ret

0000000000009c94 <strlen>:
    9c94:	stp	x29, x30, [sp, #-32]!
    9c98:	mov	x29, sp
    9c9c:	str	x0, [sp, #24]
    9ca0:	ldr	x0, [sp, #24]
    9ca4:	bl	0 <grub_strlen>
    9ca8:	ldp	x29, x30, [sp], #32
    9cac:	ret

0000000000009cb0 <gpg_err_make>:
    9cb0:	sub	sp, sp, #0x10
    9cb4:	str	w0, [sp, #12]
    9cb8:	str	w1, [sp, #8]
    9cbc:	ldr	w0, [sp, #8]
    9cc0:	add	sp, sp, #0x10
    9cc4:	ret

0000000000009cc8 <gcry_err_make>:
    9cc8:	stp	x29, x30, [sp, #-32]!
    9ccc:	mov	x29, sp
    9cd0:	str	w0, [sp, #28]
    9cd4:	str	w1, [sp, #24]
    9cd8:	ldr	w1, [sp, #24]
    9cdc:	ldr	w0, [sp, #28]
    9ce0:	bl	9cb0 <gpg_err_make>
    9ce4:	ldp	x29, x30, [sp], #32
    9ce8:	ret

0000000000009cec <gcry_error>:
    9cec:	stp	x29, x30, [sp, #-32]!
    9cf0:	mov	x29, sp
    9cf4:	str	w0, [sp, #28]
    9cf8:	ldr	w1, [sp, #28]
    9cfc:	mov	w0, #0x0                   	// #0
    9d00:	bl	9cc8 <gcry_err_make>
    9d04:	ldp	x29, x30, [sp], #32
    9d08:	ret

0000000000009d0c <mpi_read_from_buffer>:
    9d0c:	stp	x29, x30, [sp, #-96]!
    9d10:	mov	x29, sp
    9d14:	str	x0, [sp, #40]
    9d18:	str	x1, [sp, #32]
    9d1c:	str	w2, [sp, #28]
    9d20:	str	wzr, [sp, #84]
    9d24:	str	xzr, [sp, #64]
    9d28:	ldr	x0, [sp, #32]
    9d2c:	ldr	w0, [x0]
    9d30:	cmp	w0, #0x1
    9d34:	b.ls	9ec8 <mpi_read_from_buffer+0x1bc>  // b.plast
    9d38:	ldr	x0, [sp, #40]
    9d3c:	ldrb	w0, [x0]
    9d40:	lsl	w0, w0, #8
    9d44:	ldr	x1, [sp, #40]
    9d48:	add	x1, x1, #0x1
    9d4c:	ldrb	w1, [x1]
    9d50:	orr	w0, w0, w1
    9d54:	str	w0, [sp, #60]
    9d58:	ldr	w0, [sp, #60]
    9d5c:	cmp	w0, #0x4, lsl #12
    9d60:	b.hi	9ed0 <mpi_read_from_buffer+0x1c4>  // b.pmore
    9d64:	ldr	x0, [sp, #40]
    9d68:	add	x0, x0, #0x2
    9d6c:	str	x0, [sp, #40]
    9d70:	mov	w0, #0x2                   	// #2
    9d74:	str	w0, [sp, #84]
    9d78:	ldr	w0, [sp, #60]
    9d7c:	add	w0, w0, #0x7
    9d80:	lsr	w0, w0, #3
    9d84:	str	w0, [sp, #56]
    9d88:	ldr	w0, [sp, #56]
    9d8c:	add	w0, w0, #0x7
    9d90:	lsr	w0, w0, #3
    9d94:	str	w0, [sp, #52]
    9d98:	ldr	w0, [sp, #28]
    9d9c:	cmp	w0, #0x0
    9da0:	b.eq	9db0 <mpi_read_from_buffer+0xa4>  // b.none
    9da4:	ldr	w0, [sp, #52]
    9da8:	bl	128 <_gcry_mpi_alloc_secure>
    9dac:	b	9db8 <mpi_read_from_buffer+0xac>
    9db0:	ldr	w0, [sp, #52]
    9db4:	bl	88 <_gcry_mpi_alloc>
    9db8:	str	x0, [sp, #64]
    9dbc:	ldr	w0, [sp, #56]
    9dc0:	and	w0, w0, #0x7
    9dc4:	mov	w1, #0x8                   	// #8
    9dc8:	sub	w0, w1, w0
    9dcc:	str	w0, [sp, #92]
    9dd0:	ldr	w0, [sp, #92]
    9dd4:	negs	w1, w0
    9dd8:	and	w0, w0, #0x7
    9ddc:	and	w1, w1, #0x7
    9de0:	csneg	w0, w0, w1, mi  // mi = first
    9de4:	str	w0, [sp, #92]
    9de8:	ldr	w1, [sp, #52]
    9dec:	ldr	x0, [sp, #64]
    9df0:	str	w1, [x0, #4]
    9df4:	ldr	x0, [sp, #64]
    9df8:	ldr	w0, [x0, #4]
    9dfc:	str	w0, [sp, #88]
    9e00:	ldr	x0, [sp, #64]
    9e04:	str	wzr, [x0, #8]
    9e08:	b	9eb8 <mpi_read_from_buffer+0x1ac>
    9e0c:	str	xzr, [sp, #72]
    9e10:	b	9e7c <mpi_read_from_buffer+0x170>
    9e14:	ldr	w0, [sp, #84]
    9e18:	add	w0, w0, #0x1
    9e1c:	str	w0, [sp, #84]
    9e20:	ldr	x0, [sp, #32]
    9e24:	ldr	w0, [x0]
    9e28:	ldr	w1, [sp, #84]
    9e2c:	cmp	w1, w0
    9e30:	b.ls	9e44 <mpi_read_from_buffer+0x138>  // b.plast
    9e34:	ldr	x0, [sp, #64]
    9e38:	bl	470 <_gcry_mpi_free>
    9e3c:	str	xzr, [sp, #64]
    9e40:	b	9ed4 <mpi_read_from_buffer+0x1c8>
    9e44:	ldr	x0, [sp, #72]
    9e48:	lsl	x0, x0, #8
    9e4c:	str	x0, [sp, #72]
    9e50:	ldr	x0, [sp, #40]
    9e54:	add	x1, x0, #0x1
    9e58:	str	x1, [sp, #40]
    9e5c:	ldrb	w0, [x0]
    9e60:	and	x0, x0, #0xff
    9e64:	ldr	x1, [sp, #72]
    9e68:	orr	x0, x1, x0
    9e6c:	str	x0, [sp, #72]
    9e70:	ldr	w0, [sp, #92]
    9e74:	add	w0, w0, #0x1
    9e78:	str	w0, [sp, #92]
    9e7c:	ldr	w0, [sp, #92]
    9e80:	cmp	w0, #0x7
    9e84:	b.le	9e14 <mpi_read_from_buffer+0x108>
    9e88:	str	wzr, [sp, #92]
    9e8c:	ldr	x0, [sp, #64]
    9e90:	ldr	x1, [x0, #16]
    9e94:	ldrsw	x0, [sp, #88]
    9e98:	lsl	x0, x0, #3
    9e9c:	sub	x0, x0, #0x8
    9ea0:	add	x0, x1, x0
    9ea4:	ldr	x1, [sp, #72]
    9ea8:	str	x1, [x0]
    9eac:	ldr	w0, [sp, #88]
    9eb0:	sub	w0, w0, #0x1
    9eb4:	str	w0, [sp, #88]
    9eb8:	ldr	w0, [sp, #88]
    9ebc:	cmp	w0, #0x0
    9ec0:	b.gt	9e0c <mpi_read_from_buffer+0x100>
    9ec4:	b	9ed4 <mpi_read_from_buffer+0x1c8>
    9ec8:	nop
    9ecc:	b	9ed4 <mpi_read_from_buffer+0x1c8>
    9ed0:	nop
    9ed4:	ldr	x0, [sp, #32]
    9ed8:	ldr	w1, [sp, #84]
    9edc:	str	w1, [x0]
    9ee0:	ldr	x0, [sp, #64]
    9ee4:	ldp	x29, x30, [sp], #96
    9ee8:	ret

0000000000009eec <mpi_fromstr>:
    9eec:	stp	x29, x30, [sp, #-80]!
    9ef0:	mov	x29, sp
    9ef4:	str	x0, [sp, #24]
    9ef8:	str	x1, [sp, #16]
    9efc:	str	wzr, [sp, #76]
    9f00:	str	wzr, [sp, #72]
    9f04:	ldr	x0, [sp, #16]
    9f08:	ldrb	w0, [x0]
    9f0c:	cmp	w0, #0x2d
    9f10:	b.ne	9f28 <mpi_fromstr+0x3c>  // b.any
    9f14:	mov	w0, #0x1                   	// #1
    9f18:	str	w0, [sp, #76]
    9f1c:	ldr	x0, [sp, #16]
    9f20:	add	x0, x0, #0x1
    9f24:	str	x0, [sp, #16]
    9f28:	ldr	x0, [sp, #16]
    9f2c:	ldrb	w0, [x0]
    9f30:	cmp	w0, #0x30
    9f34:	b.ne	9f58 <mpi_fromstr+0x6c>  // b.any
    9f38:	ldr	x0, [sp, #16]
    9f3c:	add	x0, x0, #0x1
    9f40:	ldrb	w0, [x0]
    9f44:	cmp	w0, #0x78
    9f48:	b.ne	9f58 <mpi_fromstr+0x6c>  // b.any
    9f4c:	ldr	x0, [sp, #16]
    9f50:	add	x0, x0, #0x2
    9f54:	str	x0, [sp, #16]
    9f58:	ldr	x0, [sp, #16]
    9f5c:	bl	9c94 <strlen>
    9f60:	lsl	w0, w0, #2
    9f64:	str	w0, [sp, #44]
    9f68:	ldr	w0, [sp, #44]
    9f6c:	and	w0, w0, #0x7
    9f70:	cmp	w0, #0x0
    9f74:	b.eq	9f80 <mpi_fromstr+0x94>  // b.none
    9f78:	mov	w0, #0x1                   	// #1
    9f7c:	str	w0, [sp, #72]
    9f80:	ldr	w0, [sp, #44]
    9f84:	add	w0, w0, #0x7
    9f88:	lsr	w0, w0, #3
    9f8c:	str	w0, [sp, #40]
    9f90:	ldr	w0, [sp, #40]
    9f94:	add	w0, w0, #0x7
    9f98:	lsr	w0, w0, #3
    9f9c:	str	w0, [sp, #36]
    9fa0:	ldr	x0, [sp, #24]
    9fa4:	ldr	w0, [x0]
    9fa8:	mov	w1, w0
    9fac:	ldr	w0, [sp, #36]
    9fb0:	cmp	w0, w1
    9fb4:	b.ls	9fc4 <mpi_fromstr+0xd8>  // b.plast
    9fb8:	ldr	w1, [sp, #36]
    9fbc:	ldr	x0, [sp, #24]
    9fc0:	bl	2f0 <_gcry_mpi_resize>
    9fc4:	ldr	w0, [sp, #40]
    9fc8:	and	w0, w0, #0x7
    9fcc:	mov	w1, #0x8                   	// #8
    9fd0:	sub	w0, w1, w0
    9fd4:	str	w0, [sp, #68]
    9fd8:	ldr	w0, [sp, #68]
    9fdc:	negs	w1, w0
    9fe0:	and	w0, w0, #0x7
    9fe4:	and	w1, w1, #0x7
    9fe8:	csneg	w0, w0, w1, mi  // mi = first
    9fec:	str	w0, [sp, #68]
    9ff0:	ldr	w1, [sp, #36]
    9ff4:	ldr	x0, [sp, #24]
    9ff8:	str	w1, [x0, #4]
    9ffc:	ldr	x0, [sp, #24]
    a000:	ldr	w0, [x0, #4]
    a004:	str	w0, [sp, #64]
    a008:	ldr	x0, [sp, #24]
    a00c:	ldr	w1, [sp, #76]
    a010:	str	w1, [x0, #8]
    a014:	b	a234 <mpi_fromstr+0x348>
    a018:	str	xzr, [sp, #48]
    a01c:	b	a1f8 <mpi_fromstr+0x30c>
    a020:	ldr	w0, [sp, #72]
    a024:	cmp	w0, #0x0
    a028:	b.eq	a03c <mpi_fromstr+0x150>  // b.none
    a02c:	mov	w0, #0x30                  	// #48
    a030:	str	w0, [sp, #56]
    a034:	str	wzr, [sp, #72]
    a038:	b	a050 <mpi_fromstr+0x164>
    a03c:	ldr	x0, [sp, #16]
    a040:	add	x1, x0, #0x1
    a044:	str	x1, [sp, #16]
    a048:	ldrb	w0, [x0]
    a04c:	str	w0, [sp, #56]
    a050:	ldr	w0, [sp, #56]
    a054:	cmp	w0, #0x0
    a058:	b.ne	a06c <mpi_fromstr+0x180>  // b.any
    a05c:	ldr	x0, [sp, #24]
    a060:	bl	44c <_gcry_mpi_clear>
    a064:	mov	w0, #0x1                   	// #1
    a068:	b	a244 <mpi_fromstr+0x358>
    a06c:	ldr	x0, [sp, #16]
    a070:	add	x1, x0, #0x1
    a074:	str	x1, [sp, #16]
    a078:	ldrb	w0, [x0]
    a07c:	str	w0, [sp, #32]
    a080:	ldr	w0, [sp, #32]
    a084:	cmp	w0, #0x0
    a088:	b.ne	a09c <mpi_fromstr+0x1b0>  // b.any
    a08c:	ldr	x0, [sp, #24]
    a090:	bl	44c <_gcry_mpi_clear>
    a094:	mov	w0, #0x1                   	// #1
    a098:	b	a244 <mpi_fromstr+0x358>
    a09c:	ldr	w0, [sp, #56]
    a0a0:	cmp	w0, #0x2f
    a0a4:	b.le	a0c4 <mpi_fromstr+0x1d8>
    a0a8:	ldr	w0, [sp, #56]
    a0ac:	cmp	w0, #0x39
    a0b0:	b.gt	a0c4 <mpi_fromstr+0x1d8>
    a0b4:	ldr	w0, [sp, #56]
    a0b8:	sub	w0, w0, #0x30
    a0bc:	str	w0, [sp, #60]
    a0c0:	b	a124 <mpi_fromstr+0x238>
    a0c4:	ldr	w0, [sp, #56]
    a0c8:	cmp	w0, #0x60
    a0cc:	b.le	a0ec <mpi_fromstr+0x200>
    a0d0:	ldr	w0, [sp, #56]
    a0d4:	cmp	w0, #0x66
    a0d8:	b.gt	a0ec <mpi_fromstr+0x200>
    a0dc:	ldr	w0, [sp, #56]
    a0e0:	sub	w0, w0, #0x57
    a0e4:	str	w0, [sp, #60]
    a0e8:	b	a124 <mpi_fromstr+0x238>
    a0ec:	ldr	w0, [sp, #56]
    a0f0:	cmp	w0, #0x40
    a0f4:	b.le	a114 <mpi_fromstr+0x228>
    a0f8:	ldr	w0, [sp, #56]
    a0fc:	cmp	w0, #0x46
    a100:	b.gt	a114 <mpi_fromstr+0x228>
    a104:	ldr	w0, [sp, #56]
    a108:	sub	w0, w0, #0x37
    a10c:	str	w0, [sp, #60]
    a110:	b	a124 <mpi_fromstr+0x238>
    a114:	ldr	x0, [sp, #24]
    a118:	bl	44c <_gcry_mpi_clear>
    a11c:	mov	w0, #0x1                   	// #1
    a120:	b	a244 <mpi_fromstr+0x358>
    a124:	ldr	w0, [sp, #60]
    a128:	lsl	w0, w0, #4
    a12c:	str	w0, [sp, #60]
    a130:	ldr	w0, [sp, #32]
    a134:	cmp	w0, #0x2f
    a138:	b.le	a160 <mpi_fromstr+0x274>
    a13c:	ldr	w0, [sp, #32]
    a140:	cmp	w0, #0x39
    a144:	b.gt	a160 <mpi_fromstr+0x274>
    a148:	ldr	w0, [sp, #32]
    a14c:	sub	w0, w0, #0x30
    a150:	ldr	w1, [sp, #60]
    a154:	orr	w0, w1, w0
    a158:	str	w0, [sp, #60]
    a15c:	b	a1d0 <mpi_fromstr+0x2e4>
    a160:	ldr	w0, [sp, #32]
    a164:	cmp	w0, #0x60
    a168:	b.le	a190 <mpi_fromstr+0x2a4>
    a16c:	ldr	w0, [sp, #32]
    a170:	cmp	w0, #0x66
    a174:	b.gt	a190 <mpi_fromstr+0x2a4>
    a178:	ldr	w0, [sp, #32]
    a17c:	sub	w0, w0, #0x57
    a180:	ldr	w1, [sp, #60]
    a184:	orr	w0, w1, w0
    a188:	str	w0, [sp, #60]
    a18c:	b	a1d0 <mpi_fromstr+0x2e4>
    a190:	ldr	w0, [sp, #32]
    a194:	cmp	w0, #0x40
    a198:	b.le	a1c0 <mpi_fromstr+0x2d4>
    a19c:	ldr	w0, [sp, #32]
    a1a0:	cmp	w0, #0x46
    a1a4:	b.gt	a1c0 <mpi_fromstr+0x2d4>
    a1a8:	ldr	w0, [sp, #32]
    a1ac:	sub	w0, w0, #0x37
    a1b0:	ldr	w1, [sp, #60]
    a1b4:	orr	w0, w1, w0
    a1b8:	str	w0, [sp, #60]
    a1bc:	b	a1d0 <mpi_fromstr+0x2e4>
    a1c0:	ldr	x0, [sp, #24]
    a1c4:	bl	44c <_gcry_mpi_clear>
    a1c8:	mov	w0, #0x1                   	// #1
    a1cc:	b	a244 <mpi_fromstr+0x358>
    a1d0:	ldr	x0, [sp, #48]
    a1d4:	lsl	x0, x0, #8
    a1d8:	str	x0, [sp, #48]
    a1dc:	ldrsw	x0, [sp, #60]
    a1e0:	ldr	x1, [sp, #48]
    a1e4:	orr	x0, x1, x0
    a1e8:	str	x0, [sp, #48]
    a1ec:	ldr	w0, [sp, #68]
    a1f0:	add	w0, w0, #0x1
    a1f4:	str	w0, [sp, #68]
    a1f8:	ldr	w0, [sp, #68]
    a1fc:	cmp	w0, #0x7
    a200:	b.le	a020 <mpi_fromstr+0x134>
    a204:	str	wzr, [sp, #68]
    a208:	ldr	x0, [sp, #24]
    a20c:	ldr	x1, [x0, #16]
    a210:	ldrsw	x0, [sp, #64]
    a214:	lsl	x0, x0, #3
    a218:	sub	x0, x0, #0x8
    a21c:	add	x0, x1, x0
    a220:	ldr	x1, [sp, #48]
    a224:	str	x1, [x0]
    a228:	ldr	w0, [sp, #64]
    a22c:	sub	w0, w0, #0x1
    a230:	str	w0, [sp, #64]
    a234:	ldr	w0, [sp, #64]
    a238:	cmp	w0, #0x0
    a23c:	b.gt	a018 <mpi_fromstr+0x12c>
    a240:	mov	w0, #0x0                   	// #0
    a244:	ldp	x29, x30, [sp], #80
    a248:	ret

000000000000a24c <gcry_mpi_dump>:
    a24c:	stp	x29, x30, [sp, #-48]!
    a250:	mov	x29, sp
    a254:	str	x0, [sp, #24]
    a258:	adrp	x0, 0 <grub_memcpy>
    a25c:	add	x0, x0, #0x0
    a260:	ldr	x0, [x0]
    a264:	bl	bfa4 <_gcry_log_printf>
    a268:	ldr	x0, [sp, #24]
    a26c:	cmp	x0, #0x0
    a270:	b.ne	a288 <gcry_mpi_dump+0x3c>  // b.any
    a274:	adrp	x0, 0 <grub_memcpy>
    a278:	add	x0, x0, #0x0
    a27c:	ldr	x0, [x0]
    a280:	bl	bfa4 <_gcry_log_printf>
    a284:	b	a340 <gcry_mpi_dump+0xf4>
    a288:	ldr	x0, [sp, #24]
    a28c:	ldr	w0, [x0, #8]
    a290:	cmp	w0, #0x0
    a294:	b.eq	a2a8 <gcry_mpi_dump+0x5c>  // b.none
    a298:	adrp	x0, 0 <grub_memcpy>
    a29c:	add	x0, x0, #0x0
    a2a0:	ldr	x0, [x0]
    a2a4:	bl	bfa4 <_gcry_log_printf>
    a2a8:	ldr	x0, [sp, #24]
    a2ac:	ldr	w0, [x0, #4]
    a2b0:	str	w0, [sp, #44]
    a2b4:	b	a314 <gcry_mpi_dump+0xc8>
    a2b8:	ldr	x0, [sp, #24]
    a2bc:	ldr	w0, [x0, #4]
    a2c0:	ldr	w1, [sp, #44]
    a2c4:	cmp	w1, w0
    a2c8:	b.eq	a2dc <gcry_mpi_dump+0x90>  // b.none
    a2cc:	adrp	x0, 0 <grub_memcpy>
    a2d0:	add	x0, x0, #0x0
    a2d4:	ldr	x0, [x0]
    a2d8:	b	a2e8 <gcry_mpi_dump+0x9c>
    a2dc:	adrp	x0, 0 <grub_memcpy>
    a2e0:	add	x0, x0, #0x0
    a2e4:	ldr	x0, [x0]
    a2e8:	ldr	x1, [sp, #24]
    a2ec:	ldr	x2, [x1, #16]
    a2f0:	ldrsw	x1, [sp, #44]
    a2f4:	lsl	x1, x1, #3
    a2f8:	sub	x1, x1, #0x8
    a2fc:	add	x1, x2, x1
    a300:	ldr	x1, [x1]
    a304:	bl	bfa4 <_gcry_log_printf>
    a308:	ldr	w0, [sp, #44]
    a30c:	sub	w0, w0, #0x1
    a310:	str	w0, [sp, #44]
    a314:	ldr	w0, [sp, #44]
    a318:	cmp	w0, #0x0
    a31c:	b.gt	a2b8 <gcry_mpi_dump+0x6c>
    a320:	ldr	x0, [sp, #24]
    a324:	ldr	w0, [x0, #4]
    a328:	cmp	w0, #0x0
    a32c:	b.ne	a340 <gcry_mpi_dump+0xf4>  // b.any
    a330:	adrp	x0, 0 <grub_memcpy>
    a334:	add	x0, x0, #0x0
    a338:	ldr	x0, [x0]
    a33c:	bl	bfa4 <_gcry_log_printf>
    a340:	nop
    a344:	ldp	x29, x30, [sp], #48
    a348:	ret
    a34c:	nop
	...

000000000000a380 <_gcry_log_mpidump>:
    a380:	stp	x29, x30, [sp, #-32]!
    a384:	mov	x29, sp
    a388:	str	x0, [sp, #24]
    a38c:	str	x1, [sp, #16]
    a390:	ldr	x1, [sp, #24]
    a394:	adrp	x0, 0 <grub_memcpy>
    a398:	add	x0, x0, #0x0
    a39c:	ldr	x0, [x0]
    a3a0:	bl	bfa4 <_gcry_log_printf>
    a3a4:	ldr	x0, [sp, #16]
    a3a8:	bl	a24c <gcry_mpi_dump>
    a3ac:	adrp	x0, 0 <grub_memcpy>
    a3b0:	add	x0, x0, #0x0
    a3b4:	ldr	x0, [x0]
    a3b8:	bl	bfa4 <_gcry_log_printf>
    a3bc:	nop
    a3c0:	ldp	x29, x30, [sp], #32
    a3c4:	ret
	...

000000000000a3d8 <do_get_buffer>:
    a3d8:	stp	x29, x30, [sp, #-96]!
    a3dc:	mov	x29, sp
    a3e0:	str	x0, [sp, #40]
    a3e4:	str	x1, [sp, #32]
    a3e8:	str	x2, [sp, #24]
    a3ec:	str	w3, [sp, #20]
    a3f0:	ldr	x0, [sp, #24]
    a3f4:	cmp	x0, #0x0
    a3f8:	b.eq	a40c <do_get_buffer+0x34>  // b.none
    a3fc:	ldr	x0, [sp, #40]
    a400:	ldr	w1, [x0, #8]
    a404:	ldr	x0, [sp, #24]
    a408:	str	w1, [x0]
    a40c:	ldr	x0, [sp, #40]
    a410:	ldr	w0, [x0, #4]
    a414:	lsl	w0, w0, #3
    a418:	mov	w1, w0
    a41c:	ldr	x0, [sp, #32]
    a420:	str	w1, [x0]
    a424:	ldr	x0, [sp, #32]
    a428:	ldr	w0, [x0]
    a42c:	cmp	w0, #0x0
    a430:	b.eq	a444 <do_get_buffer+0x6c>  // b.none
    a434:	ldr	x0, [sp, #32]
    a438:	ldr	w0, [x0]
    a43c:	mov	w0, w0
    a440:	b	a448 <do_get_buffer+0x70>
    a444:	mov	x0, #0x1                   	// #1
    a448:	str	x0, [sp, #72]
    a44c:	ldr	w0, [sp, #20]
    a450:	cmp	w0, #0x0
    a454:	b.ne	a478 <do_get_buffer+0xa0>  // b.any
    a458:	ldr	x0, [sp, #40]
    a45c:	cmp	x0, #0x0
    a460:	b.eq	a484 <do_get_buffer+0xac>  // b.none
    a464:	ldr	x0, [sp, #40]
    a468:	ldr	w0, [x0, #12]
    a46c:	and	w0, w0, #0x1
    a470:	cmp	w0, #0x0
    a474:	b.eq	a484 <do_get_buffer+0xac>  // b.none
    a478:	ldr	x0, [sp, #72]
    a47c:	bl	bdb4 <gcry_malloc_secure>
    a480:	b	a48c <do_get_buffer+0xb4>
    a484:	ldr	x0, [sp, #72]
    a488:	bl	bd98 <gcry_malloc>
    a48c:	str	x0, [sp, #64]
    a490:	ldr	x0, [sp, #64]
    a494:	str	x0, [sp, #88]
    a498:	ldr	x0, [sp, #64]
    a49c:	cmp	x0, #0x0
    a4a0:	b.ne	a4ac <do_get_buffer+0xd4>  // b.any
    a4a4:	mov	x0, #0x0                   	// #0
    a4a8:	b	a64c <do_get_buffer+0x274>
    a4ac:	ldr	x0, [sp, #40]
    a4b0:	ldr	w0, [x0, #4]
    a4b4:	sub	w0, w0, #0x1
    a4b8:	str	w0, [sp, #84]
    a4bc:	b	a5c4 <do_get_buffer+0x1ec>
    a4c0:	ldr	x0, [sp, #40]
    a4c4:	ldr	x1, [x0, #16]
    a4c8:	ldrsw	x0, [sp, #84]
    a4cc:	lsl	x0, x0, #3
    a4d0:	add	x0, x1, x0
    a4d4:	ldr	x0, [x0]
    a4d8:	str	x0, [sp, #56]
    a4dc:	ldr	x0, [sp, #56]
    a4e0:	lsr	x2, x0, #56
    a4e4:	ldr	x0, [sp, #88]
    a4e8:	add	x1, x0, #0x1
    a4ec:	str	x1, [sp, #88]
    a4f0:	and	w1, w2, #0xff
    a4f4:	strb	w1, [x0]
    a4f8:	ldr	x0, [sp, #56]
    a4fc:	lsr	x2, x0, #48
    a500:	ldr	x0, [sp, #88]
    a504:	add	x1, x0, #0x1
    a508:	str	x1, [sp, #88]
    a50c:	and	w1, w2, #0xff
    a510:	strb	w1, [x0]
    a514:	ldr	x0, [sp, #56]
    a518:	lsr	x2, x0, #40
    a51c:	ldr	x0, [sp, #88]
    a520:	add	x1, x0, #0x1
    a524:	str	x1, [sp, #88]
    a528:	and	w1, w2, #0xff
    a52c:	strb	w1, [x0]
    a530:	ldr	x0, [sp, #56]
    a534:	lsr	x2, x0, #32
    a538:	ldr	x0, [sp, #88]
    a53c:	add	x1, x0, #0x1
    a540:	str	x1, [sp, #88]
    a544:	and	w1, w2, #0xff
    a548:	strb	w1, [x0]
    a54c:	ldr	x0, [sp, #56]
    a550:	lsr	x2, x0, #24
    a554:	ldr	x0, [sp, #88]
    a558:	add	x1, x0, #0x1
    a55c:	str	x1, [sp, #88]
    a560:	and	w1, w2, #0xff
    a564:	strb	w1, [x0]
    a568:	ldr	x0, [sp, #56]
    a56c:	lsr	x2, x0, #16
    a570:	ldr	x0, [sp, #88]
    a574:	add	x1, x0, #0x1
    a578:	str	x1, [sp, #88]
    a57c:	and	w1, w2, #0xff
    a580:	strb	w1, [x0]
    a584:	ldr	x0, [sp, #56]
    a588:	lsr	x2, x0, #8
    a58c:	ldr	x0, [sp, #88]
    a590:	add	x1, x0, #0x1
    a594:	str	x1, [sp, #88]
    a598:	and	w1, w2, #0xff
    a59c:	strb	w1, [x0]
    a5a0:	ldr	x0, [sp, #88]
    a5a4:	add	x1, x0, #0x1
    a5a8:	str	x1, [sp, #88]
    a5ac:	ldr	x1, [sp, #56]
    a5b0:	and	w1, w1, #0xff
    a5b4:	strb	w1, [x0]
    a5b8:	ldr	w0, [sp, #84]
    a5bc:	sub	w0, w0, #0x1
    a5c0:	str	w0, [sp, #84]
    a5c4:	ldr	w0, [sp, #84]
    a5c8:	cmp	w0, #0x0
    a5cc:	b.ge	a4c0 <do_get_buffer+0xe8>  // b.tcont
    a5d0:	ldr	x0, [sp, #64]
    a5d4:	str	x0, [sp, #88]
    a5d8:	b	a5fc <do_get_buffer+0x224>
    a5dc:	ldr	x0, [sp, #88]
    a5e0:	add	x0, x0, #0x1
    a5e4:	str	x0, [sp, #88]
    a5e8:	ldr	x0, [sp, #32]
    a5ec:	ldr	w0, [x0]
    a5f0:	sub	w1, w0, #0x1
    a5f4:	ldr	x0, [sp, #32]
    a5f8:	str	w1, [x0]
    a5fc:	ldr	x0, [sp, #32]
    a600:	ldr	w0, [x0]
    a604:	cmp	w0, #0x0
    a608:	b.eq	a61c <do_get_buffer+0x244>  // b.none
    a60c:	ldr	x0, [sp, #88]
    a610:	ldrb	w0, [x0]
    a614:	cmp	w0, #0x0
    a618:	b.eq	a5dc <do_get_buffer+0x204>  // b.none
    a61c:	ldr	x1, [sp, #88]
    a620:	ldr	x0, [sp, #64]
    a624:	cmp	x1, x0
    a628:	b.eq	a648 <do_get_buffer+0x270>  // b.none
    a62c:	ldr	x0, [sp, #32]
    a630:	ldr	w0, [x0]
    a634:	mov	w0, w0
    a638:	mov	x2, x0
    a63c:	ldr	x1, [sp, #88]
    a640:	ldr	x0, [sp, #64]
    a644:	bl	0 <grub_memmove>
    a648:	ldr	x0, [sp, #64]
    a64c:	ldp	x29, x30, [sp], #96
    a650:	ret

000000000000a654 <_gcry_mpi_get_buffer>:
    a654:	stp	x29, x30, [sp, #-48]!
    a658:	mov	x29, sp
    a65c:	str	x0, [sp, #40]
    a660:	str	x1, [sp, #32]
    a664:	str	x2, [sp, #24]
    a668:	mov	w3, #0x0                   	// #0
    a66c:	ldr	x2, [sp, #24]
    a670:	ldr	x1, [sp, #32]
    a674:	ldr	x0, [sp, #40]
    a678:	bl	a3d8 <do_get_buffer>
    a67c:	ldp	x29, x30, [sp], #48
    a680:	ret

000000000000a684 <_gcry_mpi_get_secure_buffer>:
    a684:	stp	x29, x30, [sp, #-48]!
    a688:	mov	x29, sp
    a68c:	str	x0, [sp, #40]
    a690:	str	x1, [sp, #32]
    a694:	str	x2, [sp, #24]
    a698:	mov	w3, #0x1                   	// #1
    a69c:	ldr	x2, [sp, #24]
    a6a0:	ldr	x1, [sp, #32]
    a6a4:	ldr	x0, [sp, #40]
    a6a8:	bl	a3d8 <do_get_buffer>
    a6ac:	ldp	x29, x30, [sp], #48
    a6b0:	ret

000000000000a6b4 <_gcry_mpi_set_buffer>:
    a6b4:	stp	x29, x30, [sp, #-96]!
    a6b8:	mov	x29, sp
    a6bc:	str	x0, [sp, #40]
    a6c0:	str	x1, [sp, #32]
    a6c4:	str	w2, [sp, #28]
    a6c8:	str	w3, [sp, #24]
    a6cc:	ldr	x0, [sp, #32]
    a6d0:	str	x0, [sp, #64]
    a6d4:	ldr	w0, [sp, #28]
    a6d8:	add	w0, w0, #0x7
    a6dc:	lsr	w0, w0, #3
    a6e0:	str	w0, [sp, #60]
    a6e4:	ldr	x0, [sp, #40]
    a6e8:	ldr	w0, [x0]
    a6ec:	ldr	w1, [sp, #60]
    a6f0:	cmp	w1, w0
    a6f4:	b.le	a708 <_gcry_mpi_set_buffer+0x54>
    a6f8:	ldr	w0, [sp, #60]
    a6fc:	mov	w1, w0
    a700:	ldr	x0, [sp, #40]
    a704:	bl	2f0 <_gcry_mpi_resize>
    a708:	ldr	x0, [sp, #40]
    a70c:	ldr	w1, [sp, #24]
    a710:	str	w1, [x0, #8]
    a714:	str	wzr, [sp, #76]
    a718:	ldr	w0, [sp, #28]
    a71c:	sub	x0, x0, #0x1
    a720:	ldr	x1, [sp, #64]
    a724:	add	x0, x1, x0
    a728:	str	x0, [sp, #88]
    a72c:	b	a86c <_gcry_mpi_set_buffer+0x1b8>
    a730:	ldr	x0, [sp, #88]
    a734:	sub	x1, x0, #0x1
    a738:	str	x1, [sp, #88]
    a73c:	ldrb	w0, [x0]
    a740:	and	x0, x0, #0xff
    a744:	str	x0, [sp, #80]
    a748:	ldr	x0, [sp, #88]
    a74c:	sub	x1, x0, #0x1
    a750:	str	x1, [sp, #88]
    a754:	ldrb	w0, [x0]
    a758:	and	x0, x0, #0xff
    a75c:	lsl	x0, x0, #8
    a760:	ldr	x1, [sp, #80]
    a764:	orr	x0, x1, x0
    a768:	str	x0, [sp, #80]
    a76c:	ldr	x0, [sp, #88]
    a770:	sub	x1, x0, #0x1
    a774:	str	x1, [sp, #88]
    a778:	ldrb	w0, [x0]
    a77c:	and	x0, x0, #0xff
    a780:	lsl	x0, x0, #16
    a784:	ldr	x1, [sp, #80]
    a788:	orr	x0, x1, x0
    a78c:	str	x0, [sp, #80]
    a790:	ldr	x0, [sp, #88]
    a794:	sub	x1, x0, #0x1
    a798:	str	x1, [sp, #88]
    a79c:	ldrb	w0, [x0]
    a7a0:	and	x0, x0, #0xff
    a7a4:	lsl	x0, x0, #24
    a7a8:	ldr	x1, [sp, #80]
    a7ac:	orr	x0, x1, x0
    a7b0:	str	x0, [sp, #80]
    a7b4:	ldr	x0, [sp, #88]
    a7b8:	sub	x1, x0, #0x1
    a7bc:	str	x1, [sp, #88]
    a7c0:	ldrb	w0, [x0]
    a7c4:	and	x0, x0, #0xff
    a7c8:	lsl	x0, x0, #32
    a7cc:	ldr	x1, [sp, #80]
    a7d0:	orr	x0, x1, x0
    a7d4:	str	x0, [sp, #80]
    a7d8:	ldr	x0, [sp, #88]
    a7dc:	sub	x1, x0, #0x1
    a7e0:	str	x1, [sp, #88]
    a7e4:	ldrb	w0, [x0]
    a7e8:	and	x0, x0, #0xff
    a7ec:	lsl	x0, x0, #40
    a7f0:	ldr	x1, [sp, #80]
    a7f4:	orr	x0, x1, x0
    a7f8:	str	x0, [sp, #80]
    a7fc:	ldr	x0, [sp, #88]
    a800:	sub	x1, x0, #0x1
    a804:	str	x1, [sp, #88]
    a808:	ldrb	w0, [x0]
    a80c:	and	x0, x0, #0xff
    a810:	lsl	x0, x0, #48
    a814:	ldr	x1, [sp, #80]
    a818:	orr	x0, x1, x0
    a81c:	str	x0, [sp, #80]
    a820:	ldr	x0, [sp, #88]
    a824:	sub	x1, x0, #0x1
    a828:	str	x1, [sp, #88]
    a82c:	ldrb	w0, [x0]
    a830:	and	x0, x0, #0xff
    a834:	lsl	x0, x0, #56
    a838:	ldr	x1, [sp, #80]
    a83c:	orr	x0, x1, x0
    a840:	str	x0, [sp, #80]
    a844:	ldr	x0, [sp, #40]
    a848:	ldr	x1, [x0, #16]
    a84c:	ldr	w0, [sp, #76]
    a850:	add	w2, w0, #0x1
    a854:	str	w2, [sp, #76]
    a858:	sxtw	x0, w0
    a85c:	lsl	x0, x0, #3
    a860:	add	x0, x1, x0
    a864:	ldr	x1, [sp, #80]
    a868:	str	x1, [x0]
    a86c:	ldr	x0, [sp, #64]
    a870:	add	x0, x0, #0x8
    a874:	ldr	x1, [sp, #88]
    a878:	cmp	x1, x0
    a87c:	b.cs	a730 <_gcry_mpi_set_buffer+0x7c>  // b.hs, b.nlast
    a880:	ldr	x1, [sp, #88]
    a884:	ldr	x0, [sp, #64]
    a888:	cmp	x1, x0
    a88c:	b.cc	aa3c <_gcry_mpi_set_buffer+0x388>  // b.lo, b.ul, b.last
    a890:	ldr	x0, [sp, #88]
    a894:	sub	x1, x0, #0x1
    a898:	str	x1, [sp, #88]
    a89c:	ldrb	w0, [x0]
    a8a0:	and	x0, x0, #0xff
    a8a4:	str	x0, [sp, #80]
    a8a8:	ldr	x1, [sp, #88]
    a8ac:	ldr	x0, [sp, #64]
    a8b0:	cmp	x1, x0
    a8b4:	b.cc	a8dc <_gcry_mpi_set_buffer+0x228>  // b.lo, b.ul, b.last
    a8b8:	ldr	x0, [sp, #88]
    a8bc:	sub	x1, x0, #0x1
    a8c0:	str	x1, [sp, #88]
    a8c4:	ldrb	w0, [x0]
    a8c8:	and	x0, x0, #0xff
    a8cc:	lsl	x0, x0, #8
    a8d0:	ldr	x1, [sp, #80]
    a8d4:	orr	x0, x1, x0
    a8d8:	str	x0, [sp, #80]
    a8dc:	ldr	x1, [sp, #88]
    a8e0:	ldr	x0, [sp, #64]
    a8e4:	cmp	x1, x0
    a8e8:	b.cc	a910 <_gcry_mpi_set_buffer+0x25c>  // b.lo, b.ul, b.last
    a8ec:	ldr	x0, [sp, #88]
    a8f0:	sub	x1, x0, #0x1
    a8f4:	str	x1, [sp, #88]
    a8f8:	ldrb	w0, [x0]
    a8fc:	and	x0, x0, #0xff
    a900:	lsl	x0, x0, #16
    a904:	ldr	x1, [sp, #80]
    a908:	orr	x0, x1, x0
    a90c:	str	x0, [sp, #80]
    a910:	ldr	x1, [sp, #88]
    a914:	ldr	x0, [sp, #64]
    a918:	cmp	x1, x0
    a91c:	b.cc	a944 <_gcry_mpi_set_buffer+0x290>  // b.lo, b.ul, b.last
    a920:	ldr	x0, [sp, #88]
    a924:	sub	x1, x0, #0x1
    a928:	str	x1, [sp, #88]
    a92c:	ldrb	w0, [x0]
    a930:	and	x0, x0, #0xff
    a934:	lsl	x0, x0, #24
    a938:	ldr	x1, [sp, #80]
    a93c:	orr	x0, x1, x0
    a940:	str	x0, [sp, #80]
    a944:	ldr	x1, [sp, #88]
    a948:	ldr	x0, [sp, #64]
    a94c:	cmp	x1, x0
    a950:	b.cc	a978 <_gcry_mpi_set_buffer+0x2c4>  // b.lo, b.ul, b.last
    a954:	ldr	x0, [sp, #88]
    a958:	sub	x1, x0, #0x1
    a95c:	str	x1, [sp, #88]
    a960:	ldrb	w0, [x0]
    a964:	and	x0, x0, #0xff
    a968:	lsl	x0, x0, #32
    a96c:	ldr	x1, [sp, #80]
    a970:	orr	x0, x1, x0
    a974:	str	x0, [sp, #80]
    a978:	ldr	x1, [sp, #88]
    a97c:	ldr	x0, [sp, #64]
    a980:	cmp	x1, x0
    a984:	b.cc	a9ac <_gcry_mpi_set_buffer+0x2f8>  // b.lo, b.ul, b.last
    a988:	ldr	x0, [sp, #88]
    a98c:	sub	x1, x0, #0x1
    a990:	str	x1, [sp, #88]
    a994:	ldrb	w0, [x0]
    a998:	and	x0, x0, #0xff
    a99c:	lsl	x0, x0, #40
    a9a0:	ldr	x1, [sp, #80]
    a9a4:	orr	x0, x1, x0
    a9a8:	str	x0, [sp, #80]
    a9ac:	ldr	x1, [sp, #88]
    a9b0:	ldr	x0, [sp, #64]
    a9b4:	cmp	x1, x0
    a9b8:	b.cc	a9e0 <_gcry_mpi_set_buffer+0x32c>  // b.lo, b.ul, b.last
    a9bc:	ldr	x0, [sp, #88]
    a9c0:	sub	x1, x0, #0x1
    a9c4:	str	x1, [sp, #88]
    a9c8:	ldrb	w0, [x0]
    a9cc:	and	x0, x0, #0xff
    a9d0:	lsl	x0, x0, #48
    a9d4:	ldr	x1, [sp, #80]
    a9d8:	orr	x0, x1, x0
    a9dc:	str	x0, [sp, #80]
    a9e0:	ldr	x1, [sp, #88]
    a9e4:	ldr	x0, [sp, #64]
    a9e8:	cmp	x1, x0
    a9ec:	b.cc	aa14 <_gcry_mpi_set_buffer+0x360>  // b.lo, b.ul, b.last
    a9f0:	ldr	x0, [sp, #88]
    a9f4:	sub	x1, x0, #0x1
    a9f8:	str	x1, [sp, #88]
    a9fc:	ldrb	w0, [x0]
    aa00:	and	x0, x0, #0xff
    aa04:	lsl	x0, x0, #56
    aa08:	ldr	x1, [sp, #80]
    aa0c:	orr	x0, x1, x0
    aa10:	str	x0, [sp, #80]
    aa14:	ldr	x0, [sp, #40]
    aa18:	ldr	x1, [x0, #16]
    aa1c:	ldr	w0, [sp, #76]
    aa20:	add	w2, w0, #0x1
    aa24:	str	w2, [sp, #76]
    aa28:	sxtw	x0, w0
    aa2c:	lsl	x0, x0, #3
    aa30:	add	x0, x1, x0
    aa34:	ldr	x1, [sp, #80]
    aa38:	str	x1, [x0]
    aa3c:	ldr	x0, [sp, #40]
    aa40:	ldr	w1, [sp, #76]
    aa44:	str	w1, [x0, #4]
    aa48:	ldr	w1, [sp, #76]
    aa4c:	ldr	w0, [sp, #60]
    aa50:	cmp	w1, w0
    aa54:	b.eq	aa84 <_gcry_mpi_set_buffer+0x3d0>  // b.none
    aa58:	adrp	x0, 0 <grub_memcpy>
    aa5c:	add	x0, x0, #0x0
    aa60:	ldr	x3, [x0]
    aa64:	mov	w2, #0x16f                 	// #367
    aa68:	adrp	x0, 0 <grub_memcpy>
    aa6c:	add	x0, x0, #0x0
    aa70:	ldr	x1, [x0]
    aa74:	adrp	x0, 0 <grub_memcpy>
    aa78:	add	x0, x0, #0x0
    aa7c:	ldr	x0, [x0]
    aa80:	bl	0 <_gcry_assert_failed>
    aa84:	nop
    aa88:	ldp	x29, x30, [sp], #96
    aa8c:	ret
	...

000000000000aaa8 <gcry_mpi_scan>:
    aaa8:	stp	x29, x30, [sp, #-128]!
    aaac:	mov	x29, sp
    aab0:	str	x0, [sp, #56]
    aab4:	str	w1, [sp, #52]
    aab8:	str	x2, [sp, #40]
    aabc:	str	x3, [sp, #32]
    aac0:	str	x4, [sp, #24]
    aac4:	ldr	x0, [sp, #40]
    aac8:	str	x0, [sp, #112]
    aacc:	str	xzr, [sp, #120]
    aad0:	ldr	x0, [sp, #112]
    aad4:	cmp	x0, #0x0
    aad8:	b.eq	aaf4 <gcry_mpi_scan+0x4c>  // b.none
    aadc:	ldr	x0, [sp, #112]
    aae0:	bl	bdf0 <gcry_is_secure>
    aae4:	cmp	w0, #0x0
    aae8:	b.eq	aaf4 <gcry_mpi_scan+0x4c>  // b.none
    aaec:	mov	w0, #0x1                   	// #1
    aaf0:	b	aaf8 <gcry_mpi_scan+0x50>
    aaf4:	mov	w0, #0x0                   	// #0
    aaf8:	str	w0, [sp, #108]
    aafc:	ldr	w0, [sp, #52]
    ab00:	cmp	w0, #0x3
    ab04:	b.ne	ab10 <gcry_mpi_scan+0x68>  // b.any
    ab08:	str	wzr, [sp, #76]
    ab0c:	b	ab18 <gcry_mpi_scan+0x70>
    ab10:	ldr	x0, [sp, #32]
    ab14:	str	w0, [sp, #76]
    ab18:	ldr	w0, [sp, #52]
    ab1c:	cmp	w0, #0x1
    ab20:	b.ne	ac00 <gcry_mpi_scan+0x158>  // b.any
    ab24:	ldr	x0, [sp, #112]
    ab28:	str	x0, [sp, #80]
    ab2c:	ldr	w0, [sp, #108]
    ab30:	cmp	w0, #0x0
    ab34:	b.eq	ab4c <gcry_mpi_scan+0xa4>  // b.none
    ab38:	ldr	w0, [sp, #76]
    ab3c:	add	w0, w0, #0x7
    ab40:	lsr	w0, w0, #3
    ab44:	bl	128 <_gcry_mpi_alloc_secure>
    ab48:	b	ab5c <gcry_mpi_scan+0xb4>
    ab4c:	ldr	w0, [sp, #76]
    ab50:	add	w0, w0, #0x7
    ab54:	lsr	w0, w0, #3
    ab58:	bl	88 <_gcry_mpi_alloc>
    ab5c:	str	x0, [sp, #120]
    ab60:	ldr	w0, [sp, #76]
    ab64:	cmp	w0, #0x0
    ab68:	b.eq	abcc <gcry_mpi_scan+0x124>  // b.none
    ab6c:	ldr	x0, [sp, #80]
    ab70:	ldrb	w0, [x0]
    ab74:	sxtb	w0, w0
    ab78:	and	w0, w0, #0xff
    ab7c:	lsr	w0, w0, #7
    ab80:	and	w0, w0, #0xff
    ab84:	mov	w1, w0
    ab88:	ldr	x0, [sp, #120]
    ab8c:	str	w1, [x0, #8]
    ab90:	ldr	x0, [sp, #120]
    ab94:	ldr	w0, [x0, #8]
    ab98:	cmp	w0, #0x0
    ab9c:	b.eq	abb4 <gcry_mpi_scan+0x10c>  // b.none
    aba0:	ldr	x0, [sp, #120]
    aba4:	bl	470 <_gcry_mpi_free>
    aba8:	mov	w0, #0x9                   	// #9
    abac:	bl	9cec <gcry_error>
    abb0:	b	afb0 <gcry_mpi_scan+0x508>
    abb4:	ldr	w0, [sp, #76]
    abb8:	mov	w3, #0x0                   	// #0
    abbc:	mov	w2, w0
    abc0:	ldr	x1, [sp, #80]
    abc4:	ldr	x0, [sp, #120]
    abc8:	bl	a6b4 <_gcry_mpi_set_buffer>
    abcc:	ldr	x0, [sp, #56]
    abd0:	cmp	x0, #0x0
    abd4:	b.eq	abf0 <gcry_mpi_scan+0x148>  // b.none
    abd8:	ldr	x0, [sp, #120]
    abdc:	bl	ec0 <_gcry_mpi_normalize>
    abe0:	ldr	x0, [sp, #56]
    abe4:	ldr	x1, [sp, #120]
    abe8:	str	x1, [x0]
    abec:	b	abf8 <gcry_mpi_scan+0x150>
    abf0:	ldr	x0, [sp, #120]
    abf4:	bl	470 <_gcry_mpi_free>
    abf8:	mov	w0, #0x0                   	// #0
    abfc:	b	afb0 <gcry_mpi_scan+0x508>
    ac00:	ldr	w0, [sp, #52]
    ac04:	cmp	w0, #0x5
    ac08:	b.ne	ac98 <gcry_mpi_scan+0x1f0>  // b.any
    ac0c:	ldr	w0, [sp, #108]
    ac10:	cmp	w0, #0x0
    ac14:	b.eq	ac2c <gcry_mpi_scan+0x184>  // b.none
    ac18:	ldr	w0, [sp, #76]
    ac1c:	add	w0, w0, #0x7
    ac20:	lsr	w0, w0, #3
    ac24:	bl	128 <_gcry_mpi_alloc_secure>
    ac28:	b	ac3c <gcry_mpi_scan+0x194>
    ac2c:	ldr	w0, [sp, #76]
    ac30:	add	w0, w0, #0x7
    ac34:	lsr	w0, w0, #3
    ac38:	bl	88 <_gcry_mpi_alloc>
    ac3c:	str	x0, [sp, #120]
    ac40:	ldr	w0, [sp, #76]
    ac44:	cmp	w0, #0x0
    ac48:	b.eq	ac64 <gcry_mpi_scan+0x1bc>  // b.none
    ac4c:	ldr	w0, [sp, #76]
    ac50:	mov	w3, #0x0                   	// #0
    ac54:	mov	w2, w0
    ac58:	ldr	x1, [sp, #112]
    ac5c:	ldr	x0, [sp, #120]
    ac60:	bl	a6b4 <_gcry_mpi_set_buffer>
    ac64:	ldr	x0, [sp, #56]
    ac68:	cmp	x0, #0x0
    ac6c:	b.eq	ac88 <gcry_mpi_scan+0x1e0>  // b.none
    ac70:	ldr	x0, [sp, #120]
    ac74:	bl	ec0 <_gcry_mpi_normalize>
    ac78:	ldr	x0, [sp, #56]
    ac7c:	ldr	x1, [sp, #120]
    ac80:	str	x1, [x0]
    ac84:	b	ac90 <gcry_mpi_scan+0x1e8>
    ac88:	ldr	x0, [sp, #120]
    ac8c:	bl	470 <_gcry_mpi_free>
    ac90:	mov	w0, #0x0                   	// #0
    ac94:	b	afb0 <gcry_mpi_scan+0x508>
    ac98:	ldr	w0, [sp, #52]
    ac9c:	cmp	w0, #0x2
    aca0:	b.ne	ad40 <gcry_mpi_scan+0x298>  // b.any
    aca4:	add	x0, sp, #0x4c
    aca8:	ldr	w2, [sp, #108]
    acac:	mov	x1, x0
    acb0:	ldr	x0, [sp, #112]
    acb4:	bl	9d0c <mpi_read_from_buffer>
    acb8:	str	x0, [sp, #120]
    acbc:	ldr	x0, [sp, #24]
    acc0:	cmp	x0, #0x0
    acc4:	b.eq	acd8 <gcry_mpi_scan+0x230>  // b.none
    acc8:	ldr	w0, [sp, #76]
    accc:	mov	w1, w0
    acd0:	ldr	x0, [sp, #24]
    acd4:	str	x1, [x0]
    acd8:	ldr	x0, [sp, #56]
    acdc:	cmp	x0, #0x0
    ace0:	b.eq	ad08 <gcry_mpi_scan+0x260>  // b.none
    ace4:	ldr	x0, [sp, #120]
    ace8:	cmp	x0, #0x0
    acec:	b.eq	ad08 <gcry_mpi_scan+0x260>  // b.none
    acf0:	ldr	x0, [sp, #120]
    acf4:	bl	ec0 <_gcry_mpi_normalize>
    acf8:	ldr	x0, [sp, #56]
    acfc:	ldr	x1, [sp, #120]
    ad00:	str	x1, [x0]
    ad04:	b	ad20 <gcry_mpi_scan+0x278>
    ad08:	ldr	x0, [sp, #120]
    ad0c:	cmp	x0, #0x0
    ad10:	b.eq	ad20 <gcry_mpi_scan+0x278>  // b.none
    ad14:	ldr	x0, [sp, #120]
    ad18:	bl	470 <_gcry_mpi_free>
    ad1c:	str	xzr, [sp, #120]
    ad20:	ldr	x0, [sp, #120]
    ad24:	cmp	x0, #0x0
    ad28:	b.ne	ad38 <gcry_mpi_scan+0x290>  // b.any
    ad2c:	mov	w0, #0xe                   	// #14
    ad30:	bl	9cec <gcry_error>
    ad34:	b	afb0 <gcry_mpi_scan+0x508>
    ad38:	mov	w0, #0x0                   	// #0
    ad3c:	b	afb0 <gcry_mpi_scan+0x508>
    ad40:	ldr	w0, [sp, #52]
    ad44:	cmp	w0, #0x3
    ad48:	b.ne	af04 <gcry_mpi_scan+0x45c>  // b.any
    ad4c:	ldr	x0, [sp, #112]
    ad50:	str	x0, [sp, #96]
    ad54:	ldr	w0, [sp, #76]
    ad58:	cmp	w0, #0x0
    ad5c:	b.eq	ad78 <gcry_mpi_scan+0x2d0>  // b.none
    ad60:	ldr	w0, [sp, #76]
    ad64:	cmp	w0, #0x3
    ad68:	b.hi	ad78 <gcry_mpi_scan+0x2d0>  // b.pmore
    ad6c:	mov	w0, #0x1d                  	// #29
    ad70:	bl	9cec <gcry_error>
    ad74:	b	afb0 <gcry_mpi_scan+0x508>
    ad78:	ldr	x0, [sp, #96]
    ad7c:	ldrb	w0, [x0]
    ad80:	lsl	w1, w0, #24
    ad84:	ldr	x0, [sp, #96]
    ad88:	add	x0, x0, #0x1
    ad8c:	ldrb	w0, [x0]
    ad90:	lsl	w0, w0, #16
    ad94:	orr	w1, w1, w0
    ad98:	ldr	x0, [sp, #96]
    ad9c:	add	x0, x0, #0x2
    ada0:	ldrb	w0, [x0]
    ada4:	lsl	w0, w0, #8
    ada8:	orr	w0, w1, w0
    adac:	ldr	x1, [sp, #96]
    adb0:	add	x1, x1, #0x3
    adb4:	ldrb	w1, [x1]
    adb8:	orr	w0, w0, w1
    adbc:	sxtw	x0, w0
    adc0:	str	x0, [sp, #88]
    adc4:	ldr	x0, [sp, #96]
    adc8:	add	x0, x0, #0x4
    adcc:	str	x0, [sp, #96]
    add0:	ldr	w0, [sp, #76]
    add4:	cmp	w0, #0x0
    add8:	b.eq	ade8 <gcry_mpi_scan+0x340>  // b.none
    addc:	ldr	w0, [sp, #76]
    ade0:	sub	w0, w0, #0x4
    ade4:	str	w0, [sp, #76]
    ade8:	ldr	w0, [sp, #76]
    adec:	cmp	w0, #0x0
    adf0:	b.eq	ae14 <gcry_mpi_scan+0x36c>  // b.none
    adf4:	ldr	w0, [sp, #76]
    adf8:	mov	w0, w0
    adfc:	ldr	x1, [sp, #88]
    ae00:	cmp	x1, x0
    ae04:	b.ls	ae14 <gcry_mpi_scan+0x36c>  // b.plast
    ae08:	mov	w0, #0x23                  	// #35
    ae0c:	bl	9cec <gcry_error>
    ae10:	b	afb0 <gcry_mpi_scan+0x508>
    ae14:	ldr	w0, [sp, #108]
    ae18:	cmp	w0, #0x0
    ae1c:	b.eq	ae34 <gcry_mpi_scan+0x38c>  // b.none
    ae20:	ldr	x0, [sp, #88]
    ae24:	add	x0, x0, #0x7
    ae28:	lsr	x0, x0, #3
    ae2c:	bl	128 <_gcry_mpi_alloc_secure>
    ae30:	b	ae44 <gcry_mpi_scan+0x39c>
    ae34:	ldr	x0, [sp, #88]
    ae38:	add	x0, x0, #0x7
    ae3c:	lsr	x0, x0, #3
    ae40:	bl	88 <_gcry_mpi_alloc>
    ae44:	str	x0, [sp, #120]
    ae48:	ldr	x0, [sp, #88]
    ae4c:	cmp	x0, #0x0
    ae50:	b.eq	aeb4 <gcry_mpi_scan+0x40c>  // b.none
    ae54:	ldr	x0, [sp, #96]
    ae58:	ldrb	w0, [x0]
    ae5c:	sxtb	w0, w0
    ae60:	and	w0, w0, #0xff
    ae64:	lsr	w0, w0, #7
    ae68:	and	w0, w0, #0xff
    ae6c:	mov	w1, w0
    ae70:	ldr	x0, [sp, #120]
    ae74:	str	w1, [x0, #8]
    ae78:	ldr	x0, [sp, #120]
    ae7c:	ldr	w0, [x0, #8]
    ae80:	cmp	w0, #0x0
    ae84:	b.eq	ae9c <gcry_mpi_scan+0x3f4>  // b.none
    ae88:	ldr	x0, [sp, #120]
    ae8c:	bl	470 <_gcry_mpi_free>
    ae90:	mov	w0, #0x9                   	// #9
    ae94:	bl	9cec <gcry_error>
    ae98:	b	afb0 <gcry_mpi_scan+0x508>
    ae9c:	ldr	x0, [sp, #88]
    aea0:	mov	w3, #0x0                   	// #0
    aea4:	mov	w2, w0
    aea8:	ldr	x1, [sp, #96]
    aeac:	ldr	x0, [sp, #120]
    aeb0:	bl	a6b4 <_gcry_mpi_set_buffer>
    aeb4:	ldr	x0, [sp, #24]
    aeb8:	cmp	x0, #0x0
    aebc:	b.eq	aed0 <gcry_mpi_scan+0x428>  // b.none
    aec0:	ldr	x0, [sp, #88]
    aec4:	add	x1, x0, #0x4
    aec8:	ldr	x0, [sp, #24]
    aecc:	str	x1, [x0]
    aed0:	ldr	x0, [sp, #56]
    aed4:	cmp	x0, #0x0
    aed8:	b.eq	aef4 <gcry_mpi_scan+0x44c>  // b.none
    aedc:	ldr	x0, [sp, #120]
    aee0:	bl	ec0 <_gcry_mpi_normalize>
    aee4:	ldr	x0, [sp, #56]
    aee8:	ldr	x1, [sp, #120]
    aeec:	str	x1, [x0]
    aef0:	b	aefc <gcry_mpi_scan+0x454>
    aef4:	ldr	x0, [sp, #120]
    aef8:	bl	470 <_gcry_mpi_free>
    aefc:	mov	w0, #0x0                   	// #0
    af00:	b	afb0 <gcry_mpi_scan+0x508>
    af04:	ldr	w0, [sp, #52]
    af08:	cmp	w0, #0x4
    af0c:	b.ne	afa8 <gcry_mpi_scan+0x500>  // b.any
    af10:	ldr	x0, [sp, #32]
    af14:	cmp	x0, #0x0
    af18:	b.eq	af28 <gcry_mpi_scan+0x480>  // b.none
    af1c:	mov	w0, #0xa                   	// #10
    af20:	bl	9cec <gcry_error>
    af24:	b	afb0 <gcry_mpi_scan+0x508>
    af28:	ldr	w0, [sp, #108]
    af2c:	cmp	w0, #0x0
    af30:	b.eq	af40 <gcry_mpi_scan+0x498>  // b.none
    af34:	mov	w0, #0x0                   	// #0
    af38:	bl	128 <_gcry_mpi_alloc_secure>
    af3c:	b	af48 <gcry_mpi_scan+0x4a0>
    af40:	mov	w0, #0x0                   	// #0
    af44:	bl	88 <_gcry_mpi_alloc>
    af48:	str	x0, [sp, #120]
    af4c:	ldr	x1, [sp, #112]
    af50:	ldr	x0, [sp, #120]
    af54:	bl	9eec <mpi_fromstr>
    af58:	cmp	w0, #0x0
    af5c:	b.eq	af74 <gcry_mpi_scan+0x4cc>  // b.none
    af60:	ldr	x0, [sp, #120]
    af64:	bl	470 <_gcry_mpi_free>
    af68:	mov	w0, #0xe                   	// #14
    af6c:	bl	9cec <gcry_error>
    af70:	b	afb0 <gcry_mpi_scan+0x508>
    af74:	ldr	x0, [sp, #56]
    af78:	cmp	x0, #0x0
    af7c:	b.eq	af98 <gcry_mpi_scan+0x4f0>  // b.none
    af80:	ldr	x0, [sp, #120]
    af84:	bl	ec0 <_gcry_mpi_normalize>
    af88:	ldr	x0, [sp, #56]
    af8c:	ldr	x1, [sp, #120]
    af90:	str	x1, [x0]
    af94:	b	afa0 <gcry_mpi_scan+0x4f8>
    af98:	ldr	x0, [sp, #120]
    af9c:	bl	470 <_gcry_mpi_free>
    afa0:	mov	w0, #0x0                   	// #0
    afa4:	b	afb0 <gcry_mpi_scan+0x508>
    afa8:	mov	w0, #0xa                   	// #10
    afac:	bl	9cec <gcry_error>
    afb0:	ldp	x29, x30, [sp], #128
    afb4:	ret

000000000000afb8 <gcry_mpi_print>:
    afb8:	stp	x29, x30, [sp, #-224]!
    afbc:	mov	x29, sp
    afc0:	str	w0, [sp, #60]
    afc4:	str	x1, [sp, #48]
    afc8:	str	x2, [sp, #40]
    afcc:	str	x3, [sp, #32]
    afd0:	str	x4, [sp, #24]
    afd4:	ldr	x0, [sp, #24]
    afd8:	bl	f4c <gcry_mpi_get_nbits>
    afdc:	str	w0, [sp, #172]
    afe0:	ldr	x0, [sp, #32]
    afe4:	cmp	x0, #0x0
    afe8:	b.ne	aff4 <gcry_mpi_print+0x3c>  // b.any
    afec:	add	x0, sp, #0x60
    aff0:	str	x0, [sp, #32]
    aff4:	ldr	x0, [sp, #40]
    aff8:	str	x0, [sp, #160]
    affc:	ldr	x0, [sp, #32]
    b000:	str	xzr, [x0]
    b004:	ldr	w0, [sp, #60]
    b008:	cmp	w0, #0x1
    b00c:	b.ne	b134 <gcry_mpi_print+0x17c>  // b.any
    b010:	str	wzr, [sp, #220]
    b014:	ldr	x0, [sp, #24]
    b018:	ldr	w0, [x0, #8]
    b01c:	cmp	w0, #0x0
    b020:	b.eq	b030 <gcry_mpi_print+0x78>  // b.none
    b024:	mov	w0, #0x9                   	// #9
    b028:	bl	9cec <gcry_error>
    b02c:	b	b71c <gcry_mpi_print+0x764>
    b030:	add	x0, sp, #0x5c
    b034:	mov	x2, #0x0                   	// #0
    b038:	mov	x1, x0
    b03c:	ldr	x0, [sp, #24]
    b040:	bl	a654 <_gcry_mpi_get_buffer>
    b044:	str	x0, [sp, #104]
    b048:	ldr	x0, [sp, #104]
    b04c:	cmp	x0, #0x0
    b050:	b.ne	b05c <gcry_mpi_print+0xa4>  // b.any
    b054:	bl	c160 <gpg_error_from_syserror>
    b058:	b	b71c <gcry_mpi_print+0x764>
    b05c:	ldr	w0, [sp, #92]
    b060:	cmp	w0, #0x0
    b064:	b.eq	b090 <gcry_mpi_print+0xd8>  // b.none
    b068:	ldr	x0, [sp, #104]
    b06c:	ldrb	w0, [x0]
    b070:	sxtb	w0, w0
    b074:	cmp	w0, #0x0
    b078:	b.ge	b090 <gcry_mpi_print+0xd8>  // b.tcont
    b07c:	ldr	w0, [sp, #92]
    b080:	add	w0, w0, #0x1
    b084:	str	w0, [sp, #92]
    b088:	mov	w0, #0x1                   	// #1
    b08c:	str	w0, [sp, #220]
    b090:	ldr	x0, [sp, #48]
    b094:	cmp	x0, #0x0
    b098:	b.eq	b0c4 <gcry_mpi_print+0x10c>  // b.none
    b09c:	ldr	w0, [sp, #92]
    b0a0:	mov	w0, w0
    b0a4:	ldr	x1, [sp, #160]
    b0a8:	cmp	x1, x0
    b0ac:	b.cs	b0c4 <gcry_mpi_print+0x10c>  // b.hs, b.nlast
    b0b0:	ldr	x0, [sp, #104]
    b0b4:	bl	bdd0 <gcry_free>
    b0b8:	mov	w0, #0x1d                  	// #29
    b0bc:	bl	9cec <gcry_error>
    b0c0:	b	b71c <gcry_mpi_print+0x764>
    b0c4:	ldr	x0, [sp, #48]
    b0c8:	cmp	x0, #0x0
    b0cc:	b.eq	b114 <gcry_mpi_print+0x15c>  // b.none
    b0d0:	ldr	x0, [sp, #48]
    b0d4:	str	x0, [sp, #208]
    b0d8:	ldr	w0, [sp, #220]
    b0dc:	cmp	w0, #0x0
    b0e0:	b.eq	b0f4 <gcry_mpi_print+0x13c>  // b.none
    b0e4:	ldr	x0, [sp, #208]
    b0e8:	add	x1, x0, #0x1
    b0ec:	str	x1, [sp, #208]
    b0f0:	strb	wzr, [x0]
    b0f4:	ldr	w1, [sp, #92]
    b0f8:	ldr	w0, [sp, #220]
    b0fc:	sub	w0, w1, w0
    b100:	mov	w0, w0
    b104:	mov	x2, x0
    b108:	ldr	x1, [sp, #104]
    b10c:	ldr	x0, [sp, #208]
    b110:	bl	9c68 <grub_memcpy>
    b114:	ldr	x0, [sp, #104]
    b118:	bl	bdd0 <gcry_free>
    b11c:	ldr	w0, [sp, #92]
    b120:	mov	w1, w0
    b124:	ldr	x0, [sp, #32]
    b128:	str	x1, [x0]
    b12c:	mov	w0, #0x0                   	// #0
    b130:	b	b71c <gcry_mpi_print+0x764>
    b134:	ldr	w0, [sp, #60]
    b138:	cmp	w0, #0x5
    b13c:	b.ne	b1ec <gcry_mpi_print+0x234>  // b.any
    b140:	ldr	w0, [sp, #172]
    b144:	add	w0, w0, #0x7
    b148:	lsr	w0, w0, #3
    b14c:	str	w0, [sp, #88]
    b150:	ldr	x0, [sp, #48]
    b154:	cmp	x0, #0x0
    b158:	b.eq	b17c <gcry_mpi_print+0x1c4>  // b.none
    b15c:	ldr	w0, [sp, #88]
    b160:	mov	w0, w0
    b164:	ldr	x1, [sp, #160]
    b168:	cmp	x1, x0
    b16c:	b.cs	b17c <gcry_mpi_print+0x1c4>  // b.hs, b.nlast
    b170:	mov	w0, #0x1d                  	// #29
    b174:	bl	9cec <gcry_error>
    b178:	b	b71c <gcry_mpi_print+0x764>
    b17c:	ldr	x0, [sp, #48]
    b180:	cmp	x0, #0x0
    b184:	b.eq	b1d4 <gcry_mpi_print+0x21c>  // b.none
    b188:	add	x0, sp, #0x58
    b18c:	mov	x2, #0x0                   	// #0
    b190:	mov	x1, x0
    b194:	ldr	x0, [sp, #24]
    b198:	bl	a654 <_gcry_mpi_get_buffer>
    b19c:	str	x0, [sp, #112]
    b1a0:	ldr	x0, [sp, #112]
    b1a4:	cmp	x0, #0x0
    b1a8:	b.ne	b1b4 <gcry_mpi_print+0x1fc>  // b.any
    b1ac:	bl	c160 <gpg_error_from_syserror>
    b1b0:	b	b71c <gcry_mpi_print+0x764>
    b1b4:	ldr	w0, [sp, #88]
    b1b8:	mov	w0, w0
    b1bc:	mov	x2, x0
    b1c0:	ldr	x1, [sp, #112]
    b1c4:	ldr	x0, [sp, #48]
    b1c8:	bl	9c68 <grub_memcpy>
    b1cc:	ldr	x0, [sp, #112]
    b1d0:	bl	bdd0 <gcry_free>
    b1d4:	ldr	w0, [sp, #88]
    b1d8:	mov	w1, w0
    b1dc:	ldr	x0, [sp, #32]
    b1e0:	str	x1, [x0]
    b1e4:	mov	w0, #0x0                   	// #0
    b1e8:	b	b71c <gcry_mpi_print+0x764>
    b1ec:	ldr	w0, [sp, #60]
    b1f0:	cmp	w0, #0x2
    b1f4:	b.ne	b2fc <gcry_mpi_print+0x344>  // b.any
    b1f8:	ldr	w0, [sp, #172]
    b1fc:	add	w0, w0, #0x7
    b200:	lsr	w0, w0, #3
    b204:	str	w0, [sp, #84]
    b208:	ldr	x0, [sp, #24]
    b20c:	ldr	w0, [x0, #8]
    b210:	cmp	w0, #0x0
    b214:	b.eq	b224 <gcry_mpi_print+0x26c>  // b.none
    b218:	mov	w0, #0xa                   	// #10
    b21c:	bl	9cec <gcry_error>
    b220:	b	b71c <gcry_mpi_print+0x764>
    b224:	ldr	x0, [sp, #48]
    b228:	cmp	x0, #0x0
    b22c:	b.eq	b254 <gcry_mpi_print+0x29c>  // b.none
    b230:	ldr	w0, [sp, #84]
    b234:	add	w0, w0, #0x2
    b238:	mov	w0, w0
    b23c:	ldr	x1, [sp, #160]
    b240:	cmp	x1, x0
    b244:	b.cs	b254 <gcry_mpi_print+0x29c>  // b.hs, b.nlast
    b248:	mov	w0, #0x1d                  	// #29
    b24c:	bl	9cec <gcry_error>
    b250:	b	b71c <gcry_mpi_print+0x764>
    b254:	ldr	x0, [sp, #48]
    b258:	cmp	x0, #0x0
    b25c:	b.eq	b2e0 <gcry_mpi_print+0x328>  // b.none
    b260:	ldr	x0, [sp, #48]
    b264:	str	x0, [sp, #128]
    b268:	ldr	w0, [sp, #172]
    b26c:	lsr	w0, w0, #8
    b270:	and	w1, w0, #0xff
    b274:	ldr	x0, [sp, #128]
    b278:	strb	w1, [x0]
    b27c:	ldr	x0, [sp, #128]
    b280:	add	x0, x0, #0x1
    b284:	ldr	w1, [sp, #172]
    b288:	and	w1, w1, #0xff
    b28c:	strb	w1, [x0]
    b290:	add	x0, sp, #0x54
    b294:	mov	x2, #0x0                   	// #0
    b298:	mov	x1, x0
    b29c:	ldr	x0, [sp, #24]
    b2a0:	bl	a654 <_gcry_mpi_get_buffer>
    b2a4:	str	x0, [sp, #120]
    b2a8:	ldr	x0, [sp, #120]
    b2ac:	cmp	x0, #0x0
    b2b0:	b.ne	b2bc <gcry_mpi_print+0x304>  // b.any
    b2b4:	bl	c160 <gpg_error_from_syserror>
    b2b8:	b	b71c <gcry_mpi_print+0x764>
    b2bc:	ldr	x0, [sp, #128]
    b2c0:	add	x0, x0, #0x2
    b2c4:	ldr	w1, [sp, #84]
    b2c8:	mov	w1, w1
    b2cc:	mov	x2, x1
    b2d0:	ldr	x1, [sp, #120]
    b2d4:	bl	9c68 <grub_memcpy>
    b2d8:	ldr	x0, [sp, #120]
    b2dc:	bl	bdd0 <gcry_free>
    b2e0:	ldr	w0, [sp, #84]
    b2e4:	add	w0, w0, #0x2
    b2e8:	mov	w1, w0
    b2ec:	ldr	x0, [sp, #32]
    b2f0:	str	x1, [x0]
    b2f4:	mov	w0, #0x0                   	// #0
    b2f8:	b	b71c <gcry_mpi_print+0x764>
    b2fc:	ldr	w0, [sp, #60]
    b300:	cmp	w0, #0x3
    b304:	b.ne	b4a0 <gcry_mpi_print+0x4e8>  // b.any
    b308:	str	wzr, [sp, #204]
    b30c:	ldr	x0, [sp, #24]
    b310:	ldr	w0, [x0, #8]
    b314:	cmp	w0, #0x0
    b318:	b.eq	b328 <gcry_mpi_print+0x370>  // b.none
    b31c:	mov	w0, #0x9                   	// #9
    b320:	bl	9cec <gcry_error>
    b324:	b	b71c <gcry_mpi_print+0x764>
    b328:	add	x0, sp, #0x50
    b32c:	mov	x2, #0x0                   	// #0
    b330:	mov	x1, x0
    b334:	ldr	x0, [sp, #24]
    b338:	bl	a654 <_gcry_mpi_get_buffer>
    b33c:	str	x0, [sp, #136]
    b340:	ldr	x0, [sp, #136]
    b344:	cmp	x0, #0x0
    b348:	b.ne	b354 <gcry_mpi_print+0x39c>  // b.any
    b34c:	bl	c160 <gpg_error_from_syserror>
    b350:	b	b71c <gcry_mpi_print+0x764>
    b354:	ldr	w0, [sp, #80]
    b358:	cmp	w0, #0x0
    b35c:	b.eq	b388 <gcry_mpi_print+0x3d0>  // b.none
    b360:	ldr	x0, [sp, #136]
    b364:	ldrb	w0, [x0]
    b368:	sxtb	w0, w0
    b36c:	cmp	w0, #0x0
    b370:	b.ge	b388 <gcry_mpi_print+0x3d0>  // b.tcont
    b374:	ldr	w0, [sp, #80]
    b378:	add	w0, w0, #0x1
    b37c:	str	w0, [sp, #80]
    b380:	mov	w0, #0x1                   	// #1
    b384:	str	w0, [sp, #204]
    b388:	ldr	x0, [sp, #48]
    b38c:	cmp	x0, #0x0
    b390:	b.eq	b3c0 <gcry_mpi_print+0x408>  // b.none
    b394:	ldr	w0, [sp, #80]
    b398:	add	w0, w0, #0x4
    b39c:	mov	w0, w0
    b3a0:	ldr	x1, [sp, #160]
    b3a4:	cmp	x1, x0
    b3a8:	b.cs	b3c0 <gcry_mpi_print+0x408>  // b.hs, b.nlast
    b3ac:	ldr	x0, [sp, #136]
    b3b0:	bl	bdd0 <gcry_free>
    b3b4:	mov	w0, #0x1d                  	// #29
    b3b8:	bl	9cec <gcry_error>
    b3bc:	b	b71c <gcry_mpi_print+0x764>
    b3c0:	ldr	x0, [sp, #48]
    b3c4:	cmp	x0, #0x0
    b3c8:	b.eq	b47c <gcry_mpi_print+0x4c4>  // b.none
    b3cc:	ldr	x0, [sp, #48]
    b3d0:	str	x0, [sp, #192]
    b3d4:	ldr	w0, [sp, #80]
    b3d8:	lsr	w2, w0, #24
    b3dc:	ldr	x0, [sp, #192]
    b3e0:	add	x1, x0, #0x1
    b3e4:	str	x1, [sp, #192]
    b3e8:	and	w1, w2, #0xff
    b3ec:	strb	w1, [x0]
    b3f0:	ldr	w0, [sp, #80]
    b3f4:	lsr	w2, w0, #16
    b3f8:	ldr	x0, [sp, #192]
    b3fc:	add	x1, x0, #0x1
    b400:	str	x1, [sp, #192]
    b404:	and	w1, w2, #0xff
    b408:	strb	w1, [x0]
    b40c:	ldr	w0, [sp, #80]
    b410:	lsr	w2, w0, #8
    b414:	ldr	x0, [sp, #192]
    b418:	add	x1, x0, #0x1
    b41c:	str	x1, [sp, #192]
    b420:	and	w1, w2, #0xff
    b424:	strb	w1, [x0]
    b428:	ldr	w2, [sp, #80]
    b42c:	ldr	x0, [sp, #192]
    b430:	add	x1, x0, #0x1
    b434:	str	x1, [sp, #192]
    b438:	and	w1, w2, #0xff
    b43c:	strb	w1, [x0]
    b440:	ldr	w0, [sp, #204]
    b444:	cmp	w0, #0x0
    b448:	b.eq	b45c <gcry_mpi_print+0x4a4>  // b.none
    b44c:	ldr	x0, [sp, #192]
    b450:	add	x1, x0, #0x1
    b454:	str	x1, [sp, #192]
    b458:	strb	wzr, [x0]
    b45c:	ldr	w1, [sp, #80]
    b460:	ldr	w0, [sp, #204]
    b464:	sub	w0, w1, w0
    b468:	mov	w0, w0
    b46c:	mov	x2, x0
    b470:	ldr	x1, [sp, #136]
    b474:	ldr	x0, [sp, #192]
    b478:	bl	9c68 <grub_memcpy>
    b47c:	ldr	x0, [sp, #136]
    b480:	bl	bdd0 <gcry_free>
    b484:	ldr	w0, [sp, #80]
    b488:	add	w0, w0, #0x4
    b48c:	mov	w1, w0
    b490:	ldr	x0, [sp, #32]
    b494:	str	x1, [x0]
    b498:	mov	w0, #0x0                   	// #0
    b49c:	b	b71c <gcry_mpi_print+0x764>
    b4a0:	ldr	w0, [sp, #60]
    b4a4:	cmp	w0, #0x4
    b4a8:	b.ne	b714 <gcry_mpi_print+0x75c>  // b.any
    b4ac:	str	wzr, [sp, #184]
    b4b0:	str	wzr, [sp, #76]
    b4b4:	add	x0, sp, #0x4c
    b4b8:	mov	x2, #0x0                   	// #0
    b4bc:	mov	x1, x0
    b4c0:	ldr	x0, [sp, #24]
    b4c4:	bl	a654 <_gcry_mpi_get_buffer>
    b4c8:	str	x0, [sp, #152]
    b4cc:	ldr	x0, [sp, #152]
    b4d0:	cmp	x0, #0x0
    b4d4:	b.ne	b4e0 <gcry_mpi_print+0x528>  // b.any
    b4d8:	bl	c160 <gpg_error_from_syserror>
    b4dc:	b	b71c <gcry_mpi_print+0x764>
    b4e0:	ldr	w0, [sp, #76]
    b4e4:	cmp	w0, #0x0
    b4e8:	b.eq	b500 <gcry_mpi_print+0x548>  // b.none
    b4ec:	ldr	x0, [sp, #152]
    b4f0:	ldrb	w0, [x0]
    b4f4:	sxtb	w0, w0
    b4f8:	cmp	w0, #0x0
    b4fc:	b.ge	b508 <gcry_mpi_print+0x550>  // b.tcont
    b500:	mov	w0, #0x2                   	// #2
    b504:	str	w0, [sp, #184]
    b508:	ldr	x0, [sp, #48]
    b50c:	cmp	x0, #0x0
    b510:	b.eq	b564 <gcry_mpi_print+0x5ac>  // b.none
    b514:	ldr	w0, [sp, #76]
    b518:	lsl	w1, w0, #1
    b51c:	ldr	w0, [sp, #184]
    b520:	add	w0, w1, w0
    b524:	ldr	x1, [sp, #24]
    b528:	ldr	w1, [x1, #8]
    b52c:	cmp	w1, #0x0
    b530:	cset	w1, ne  // ne = any
    b534:	and	w1, w1, #0xff
    b538:	add	w0, w0, w1
    b53c:	add	w0, w0, #0x1
    b540:	mov	w0, w0
    b544:	ldr	x1, [sp, #160]
    b548:	cmp	x1, x0
    b54c:	b.cs	b564 <gcry_mpi_print+0x5ac>  // b.hs, b.nlast
    b550:	ldr	x0, [sp, #152]
    b554:	bl	bdd0 <gcry_free>
    b558:	mov	w0, #0x1d                  	// #29
    b55c:	bl	9cec <gcry_error>
    b560:	b	b71c <gcry_mpi_print+0x764>
    b564:	ldr	x0, [sp, #48]
    b568:	cmp	x0, #0x0
    b56c:	b.eq	b6cc <gcry_mpi_print+0x714>  // b.none
    b570:	ldr	x0, [sp, #48]
    b574:	str	x0, [sp, #176]
    b578:	ldr	x0, [sp, #24]
    b57c:	ldr	w0, [x0, #8]
    b580:	cmp	w0, #0x0
    b584:	b.eq	b59c <gcry_mpi_print+0x5e4>  // b.none
    b588:	ldr	x0, [sp, #176]
    b58c:	add	x1, x0, #0x1
    b590:	str	x1, [sp, #176]
    b594:	mov	w1, #0x2d                  	// #45
    b598:	strb	w1, [x0]
    b59c:	ldr	w0, [sp, #184]
    b5a0:	cmp	w0, #0x0
    b5a4:	b.eq	b5d0 <gcry_mpi_print+0x618>  // b.none
    b5a8:	ldr	x0, [sp, #176]
    b5ac:	add	x1, x0, #0x1
    b5b0:	str	x1, [sp, #176]
    b5b4:	mov	w1, #0x30                  	// #48
    b5b8:	strb	w1, [x0]
    b5bc:	ldr	x0, [sp, #176]
    b5c0:	add	x1, x0, #0x1
    b5c4:	str	x1, [sp, #176]
    b5c8:	mov	w1, #0x30                  	// #48
    b5cc:	strb	w1, [x0]
    b5d0:	str	wzr, [sp, #188]
    b5d4:	b	b690 <gcry_mpi_print+0x6d8>
    b5d8:	ldrsw	x0, [sp, #188]
    b5dc:	ldr	x1, [sp, #152]
    b5e0:	add	x0, x1, x0
    b5e4:	ldrb	w0, [x0]
    b5e8:	str	w0, [sp, #148]
    b5ec:	ldr	w0, [sp, #148]
    b5f0:	lsr	w0, w0, #4
    b5f4:	cmp	w0, #0x9
    b5f8:	b.hi	b614 <gcry_mpi_print+0x65c>  // b.pmore
    b5fc:	ldr	w0, [sp, #148]
    b600:	lsr	w0, w0, #4
    b604:	and	w0, w0, #0xff
    b608:	add	w0, w0, #0x30
    b60c:	and	w1, w0, #0xff
    b610:	b	b628 <gcry_mpi_print+0x670>
    b614:	ldr	w0, [sp, #148]
    b618:	lsr	w0, w0, #4
    b61c:	and	w0, w0, #0xff
    b620:	add	w0, w0, #0x37
    b624:	and	w1, w0, #0xff
    b628:	ldr	x0, [sp, #176]
    b62c:	add	x2, x0, #0x1
    b630:	str	x2, [sp, #176]
    b634:	strb	w1, [x0]
    b638:	ldr	w0, [sp, #148]
    b63c:	and	w0, w0, #0xf
    b640:	str	w0, [sp, #148]
    b644:	ldr	w0, [sp, #148]
    b648:	cmp	w0, #0x9
    b64c:	b.hi	b664 <gcry_mpi_print+0x6ac>  // b.pmore
    b650:	ldr	w0, [sp, #148]
    b654:	and	w0, w0, #0xff
    b658:	add	w0, w0, #0x30
    b65c:	and	w1, w0, #0xff
    b660:	b	b674 <gcry_mpi_print+0x6bc>
    b664:	ldr	w0, [sp, #148]
    b668:	and	w0, w0, #0xff
    b66c:	add	w0, w0, #0x37
    b670:	and	w1, w0, #0xff
    b674:	ldr	x0, [sp, #176]
    b678:	add	x2, x0, #0x1
    b67c:	str	x2, [sp, #176]
    b680:	strb	w1, [x0]
    b684:	ldr	w0, [sp, #188]
    b688:	add	w0, w0, #0x1
    b68c:	str	w0, [sp, #188]
    b690:	ldr	w1, [sp, #188]
    b694:	ldr	w0, [sp, #76]
    b698:	cmp	w1, w0
    b69c:	b.cc	b5d8 <gcry_mpi_print+0x620>  // b.lo, b.ul, b.last
    b6a0:	ldr	x0, [sp, #176]
    b6a4:	add	x1, x0, #0x1
    b6a8:	str	x1, [sp, #176]
    b6ac:	strb	wzr, [x0]
    b6b0:	ldr	x1, [sp, #176]
    b6b4:	ldr	x0, [sp, #48]
    b6b8:	sub	x0, x1, x0
    b6bc:	mov	x1, x0
    b6c0:	ldr	x0, [sp, #32]
    b6c4:	str	x1, [x0]
    b6c8:	b	b704 <gcry_mpi_print+0x74c>
    b6cc:	ldr	w0, [sp, #76]
    b6d0:	lsl	w1, w0, #1
    b6d4:	ldr	w0, [sp, #184]
    b6d8:	add	w0, w1, w0
    b6dc:	ldr	x1, [sp, #24]
    b6e0:	ldr	w1, [x1, #8]
    b6e4:	cmp	w1, #0x0
    b6e8:	cset	w1, ne  // ne = any
    b6ec:	and	w1, w1, #0xff
    b6f0:	add	w0, w0, w1
    b6f4:	add	w0, w0, #0x1
    b6f8:	mov	w1, w0
    b6fc:	ldr	x0, [sp, #32]
    b700:	str	x1, [x0]
    b704:	ldr	x0, [sp, #152]
    b708:	bl	bdd0 <gcry_free>
    b70c:	mov	w0, #0x0                   	// #0
    b710:	b	b71c <gcry_mpi_print+0x764>
    b714:	mov	w0, #0xa                   	// #10
    b718:	bl	9cec <gcry_error>
    b71c:	ldp	x29, x30, [sp], #224
    b720:	ret

000000000000b724 <gcry_mpi_aprint>:
    b724:	stp	x29, x30, [sp, #-64]!
    b728:	mov	x29, sp
    b72c:	str	w0, [sp, #44]
    b730:	str	x1, [sp, #32]
    b734:	str	x2, [sp, #24]
    b738:	str	x3, [sp, #16]
    b73c:	ldr	x0, [sp, #32]
    b740:	str	xzr, [x0]
    b744:	add	x0, sp, #0x30
    b748:	ldr	x4, [sp, #16]
    b74c:	mov	x3, x0
    b750:	mov	x2, #0x0                   	// #0
    b754:	mov	x1, #0x0                   	// #0
    b758:	ldr	w0, [sp, #44]
    b75c:	bl	afb8 <gcry_mpi_print>
    b760:	str	w0, [sp, #60]
    b764:	ldr	w0, [sp, #60]
    b768:	cmp	w0, #0x0
    b76c:	b.eq	b778 <gcry_mpi_aprint+0x54>  // b.none
    b770:	ldr	w0, [sp, #60]
    b774:	b	b840 <gcry_mpi_aprint+0x11c>
    b778:	ldr	x0, [sp, #16]
    b77c:	cmp	x0, #0x0
    b780:	b.eq	b7a8 <gcry_mpi_aprint+0x84>  // b.none
    b784:	ldr	x0, [sp, #16]
    b788:	ldr	w0, [x0, #12]
    b78c:	and	w0, w0, #0x1
    b790:	cmp	w0, #0x0
    b794:	b.eq	b7a8 <gcry_mpi_aprint+0x84>  // b.none
    b798:	ldr	x0, [sp, #48]
    b79c:	bl	bdb4 <gcry_malloc_secure>
    b7a0:	mov	x1, x0
    b7a4:	b	b7b4 <gcry_mpi_aprint+0x90>
    b7a8:	ldr	x0, [sp, #48]
    b7ac:	bl	bd98 <gcry_malloc>
    b7b0:	mov	x1, x0
    b7b4:	ldr	x0, [sp, #32]
    b7b8:	str	x1, [x0]
    b7bc:	ldr	x0, [sp, #32]
    b7c0:	ldr	x0, [x0]
    b7c4:	cmp	x0, #0x0
    b7c8:	b.ne	b7d4 <gcry_mpi_aprint+0xb0>  // b.any
    b7cc:	bl	c160 <gpg_error_from_syserror>
    b7d0:	b	b840 <gcry_mpi_aprint+0x11c>
    b7d4:	ldr	x0, [sp, #32]
    b7d8:	ldr	x0, [x0]
    b7dc:	ldr	x1, [sp, #48]
    b7e0:	add	x2, sp, #0x30
    b7e4:	ldr	x4, [sp, #16]
    b7e8:	mov	x3, x2
    b7ec:	mov	x2, x1
    b7f0:	mov	x1, x0
    b7f4:	ldr	w0, [sp, #44]
    b7f8:	bl	afb8 <gcry_mpi_print>
    b7fc:	str	w0, [sp, #60]
    b800:	ldr	w0, [sp, #60]
    b804:	cmp	w0, #0x0
    b808:	b.eq	b824 <gcry_mpi_aprint+0x100>  // b.none
    b80c:	ldr	x0, [sp, #32]
    b810:	ldr	x0, [x0]
    b814:	bl	bdd0 <gcry_free>
    b818:	ldr	x0, [sp, #32]
    b81c:	str	xzr, [x0]
    b820:	b	b83c <gcry_mpi_aprint+0x118>
    b824:	ldr	x0, [sp, #24]
    b828:	cmp	x0, #0x0
    b82c:	b.eq	b83c <gcry_mpi_aprint+0x118>  // b.none
    b830:	ldr	x1, [sp, #48]
    b834:	ldr	x0, [sp, #24]
    b838:	str	x1, [x0]
    b83c:	ldr	w0, [sp, #60]
    b840:	ldp	x29, x30, [sp], #64
    b844:	ret

000000000000b848 <_gcry_mpih_rshift>:
    b848:	sub	sp, sp, #0x50
    b84c:	str	x0, [sp, #24]
    b850:	str	x1, [sp, #16]
    b854:	str	w2, [sp, #12]
    b858:	str	w3, [sp, #8]
    b85c:	ldr	w0, [sp, #8]
    b860:	str	w0, [sp, #64]
    b864:	ldr	x0, [sp, #24]
    b868:	sub	x0, x0, #0x8
    b86c:	str	x0, [sp, #24]
    b870:	mov	w1, #0x40                  	// #64
    b874:	ldr	w0, [sp, #64]
    b878:	sub	w0, w1, w0
    b87c:	str	w0, [sp, #60]
    b880:	ldr	x0, [sp, #16]
    b884:	ldr	x0, [x0]
    b888:	str	x0, [sp, #48]
    b88c:	ldr	w0, [sp, #60]
    b890:	ldr	x1, [sp, #48]
    b894:	lsl	x0, x1, x0
    b898:	str	x0, [sp, #40]
    b89c:	ldr	x0, [sp, #48]
    b8a0:	str	x0, [sp, #72]
    b8a4:	mov	w0, #0x1                   	// #1
    b8a8:	str	w0, [sp, #68]
    b8ac:	b	b90c <_gcry_mpih_rshift+0xc4>
    b8b0:	ldrsw	x0, [sp, #68]
    b8b4:	lsl	x0, x0, #3
    b8b8:	ldr	x1, [sp, #16]
    b8bc:	add	x0, x1, x0
    b8c0:	ldr	x0, [x0]
    b8c4:	str	x0, [sp, #48]
    b8c8:	ldr	w0, [sp, #64]
    b8cc:	ldr	x1, [sp, #72]
    b8d0:	lsr	x2, x1, x0
    b8d4:	ldr	w0, [sp, #60]
    b8d8:	ldr	x1, [sp, #48]
    b8dc:	lsl	x1, x1, x0
    b8e0:	ldrsw	x0, [sp, #68]
    b8e4:	lsl	x0, x0, #3
    b8e8:	ldr	x3, [sp, #24]
    b8ec:	add	x0, x3, x0
    b8f0:	orr	x1, x2, x1
    b8f4:	str	x1, [x0]
    b8f8:	ldr	x0, [sp, #48]
    b8fc:	str	x0, [sp, #72]
    b900:	ldr	w0, [sp, #68]
    b904:	add	w0, w0, #0x1
    b908:	str	w0, [sp, #68]
    b90c:	ldr	w1, [sp, #68]
    b910:	ldr	w0, [sp, #12]
    b914:	cmp	w1, w0
    b918:	b.lt	b8b0 <_gcry_mpih_rshift+0x68>  // b.tstop
    b91c:	ldrsw	x0, [sp, #68]
    b920:	lsl	x0, x0, #3
    b924:	ldr	x1, [sp, #24]
    b928:	add	x0, x1, x0
    b92c:	ldr	w1, [sp, #64]
    b930:	ldr	x2, [sp, #72]
    b934:	lsr	x1, x2, x1
    b938:	str	x1, [x0]
    b93c:	ldr	x0, [sp, #40]
    b940:	add	sp, sp, #0x50
    b944:	ret

000000000000b948 <_gcry_mpih_add_1>:
    b948:	sub	sp, sp, #0x30
    b94c:	str	x0, [sp, #24]
    b950:	str	x1, [sp, #16]
    b954:	str	w2, [sp, #12]
    b958:	str	x3, [sp]
    b95c:	ldr	x0, [sp, #16]
    b960:	add	x1, x0, #0x8
    b964:	str	x1, [sp, #16]
    b968:	ldr	x0, [x0]
    b96c:	str	x0, [sp, #32]
    b970:	ldr	x1, [sp]
    b974:	ldr	x0, [sp, #32]
    b978:	add	x0, x1, x0
    b97c:	str	x0, [sp]
    b980:	ldr	x0, [sp, #24]
    b984:	add	x1, x0, #0x8
    b988:	str	x1, [sp, #24]
    b98c:	ldr	x1, [sp]
    b990:	str	x1, [x0]
    b994:	ldr	x1, [sp]
    b998:	ldr	x0, [sp, #32]
    b99c:	cmp	x1, x0
    b9a0:	b.cs	ba00 <_gcry_mpih_add_1+0xb8>  // b.hs, b.nlast
    b9a4:	b	b9e0 <_gcry_mpih_add_1+0x98>
    b9a8:	ldr	x0, [sp, #16]
    b9ac:	add	x1, x0, #0x8
    b9b0:	str	x1, [sp, #16]
    b9b4:	ldr	x0, [x0]
    b9b8:	add	x0, x0, #0x1
    b9bc:	str	x0, [sp, #32]
    b9c0:	ldr	x0, [sp, #24]
    b9c4:	add	x1, x0, #0x8
    b9c8:	str	x1, [sp, #24]
    b9cc:	ldr	x1, [sp, #32]
    b9d0:	str	x1, [x0]
    b9d4:	ldr	x0, [sp, #32]
    b9d8:	cmp	x0, #0x0
    b9dc:	b.ne	ba08 <_gcry_mpih_add_1+0xc0>  // b.any
    b9e0:	ldr	w0, [sp, #12]
    b9e4:	sub	w0, w0, #0x1
    b9e8:	str	w0, [sp, #12]
    b9ec:	ldr	w0, [sp, #12]
    b9f0:	cmp	w0, #0x0
    b9f4:	b.ne	b9a8 <_gcry_mpih_add_1+0x60>  // b.any
    b9f8:	mov	x0, #0x1                   	// #1
    b9fc:	b	ba70 <_gcry_mpih_add_1+0x128>
    ba00:	nop
    ba04:	b	ba0c <_gcry_mpih_add_1+0xc4>
    ba08:	nop
    ba0c:	ldr	x1, [sp, #24]
    ba10:	ldr	x0, [sp, #16]
    ba14:	cmp	x1, x0
    ba18:	b.eq	ba6c <_gcry_mpih_add_1+0x124>  // b.none
    ba1c:	str	wzr, [sp, #44]
    ba20:	b	ba58 <_gcry_mpih_add_1+0x110>
    ba24:	ldrsw	x0, [sp, #44]
    ba28:	lsl	x0, x0, #3
    ba2c:	ldr	x1, [sp, #16]
    ba30:	add	x1, x1, x0
    ba34:	ldrsw	x0, [sp, #44]
    ba38:	lsl	x0, x0, #3
    ba3c:	ldr	x2, [sp, #24]
    ba40:	add	x0, x2, x0
    ba44:	ldr	x1, [x1]
    ba48:	str	x1, [x0]
    ba4c:	ldr	w0, [sp, #44]
    ba50:	add	w0, w0, #0x1
    ba54:	str	w0, [sp, #44]
    ba58:	ldr	w0, [sp, #12]
    ba5c:	sub	w0, w0, #0x1
    ba60:	ldr	w1, [sp, #44]
    ba64:	cmp	w1, w0
    ba68:	b.lt	ba24 <_gcry_mpih_add_1+0xdc>  // b.tstop
    ba6c:	mov	x0, #0x0                   	// #0
    ba70:	add	sp, sp, #0x30
    ba74:	ret

000000000000ba78 <_gcry_mpih_add>:
    ba78:	stp	x29, x30, [sp, #-64]!
    ba7c:	mov	x29, sp
    ba80:	str	x0, [sp, #40]
    ba84:	str	x1, [sp, #32]
    ba88:	str	w2, [sp, #28]
    ba8c:	str	x3, [sp, #16]
    ba90:	str	w4, [sp, #24]
    ba94:	str	xzr, [sp, #56]
    ba98:	ldr	w0, [sp, #24]
    ba9c:	cmp	w0, #0x0
    baa0:	b.eq	babc <_gcry_mpih_add+0x44>  // b.none
    baa4:	ldr	w3, [sp, #24]
    baa8:	ldr	x2, [sp, #16]
    baac:	ldr	x1, [sp, #32]
    bab0:	ldr	x0, [sp, #40]
    bab4:	bl	79c4 <_gcry_mpih_add_n>
    bab8:	str	x0, [sp, #56]
    babc:	ldr	w1, [sp, #28]
    bac0:	ldr	w0, [sp, #24]
    bac4:	cmp	w1, w0
    bac8:	b.eq	bb10 <_gcry_mpih_add+0x98>  // b.none
    bacc:	ldrsw	x0, [sp, #24]
    bad0:	lsl	x0, x0, #3
    bad4:	ldr	x1, [sp, #40]
    bad8:	add	x4, x1, x0
    badc:	ldrsw	x0, [sp, #24]
    bae0:	lsl	x0, x0, #3
    bae4:	ldr	x1, [sp, #32]
    bae8:	add	x5, x1, x0
    baec:	ldr	w1, [sp, #28]
    baf0:	ldr	w0, [sp, #24]
    baf4:	sub	w0, w1, w0
    baf8:	ldr	x3, [sp, #56]
    bafc:	mov	w2, w0
    bb00:	mov	x1, x5
    bb04:	mov	x0, x4
    bb08:	bl	b948 <_gcry_mpih_add_1>
    bb0c:	str	x0, [sp, #56]
    bb10:	ldr	x0, [sp, #56]
    bb14:	ldp	x29, x30, [sp], #64
    bb18:	ret

000000000000bb1c <_gcry_mpih_sub_1>:
    bb1c:	sub	sp, sp, #0x30
    bb20:	str	x0, [sp, #24]
    bb24:	str	x1, [sp, #16]
    bb28:	str	w2, [sp, #12]
    bb2c:	str	x3, [sp]
    bb30:	ldr	x0, [sp, #16]
    bb34:	add	x1, x0, #0x8
    bb38:	str	x1, [sp, #16]
    bb3c:	ldr	x0, [x0]
    bb40:	str	x0, [sp, #32]
    bb44:	ldr	x1, [sp, #32]
    bb48:	ldr	x0, [sp]
    bb4c:	sub	x0, x1, x0
    bb50:	str	x0, [sp]
    bb54:	ldr	x0, [sp, #24]
    bb58:	add	x1, x0, #0x8
    bb5c:	str	x1, [sp, #24]
    bb60:	ldr	x1, [sp]
    bb64:	str	x1, [x0]
    bb68:	ldr	x1, [sp]
    bb6c:	ldr	x0, [sp, #32]
    bb70:	cmp	x1, x0
    bb74:	b.ls	bbd4 <_gcry_mpih_sub_1+0xb8>  // b.plast
    bb78:	b	bbb4 <_gcry_mpih_sub_1+0x98>
    bb7c:	ldr	x0, [sp, #16]
    bb80:	add	x1, x0, #0x8
    bb84:	str	x1, [sp, #16]
    bb88:	ldr	x0, [x0]
    bb8c:	str	x0, [sp, #32]
    bb90:	ldr	x0, [sp, #24]
    bb94:	add	x1, x0, #0x8
    bb98:	str	x1, [sp, #24]
    bb9c:	ldr	x1, [sp, #32]
    bba0:	sub	x1, x1, #0x1
    bba4:	str	x1, [x0]
    bba8:	ldr	x0, [sp, #32]
    bbac:	cmp	x0, #0x0
    bbb0:	b.ne	bbdc <_gcry_mpih_sub_1+0xc0>  // b.any
    bbb4:	ldr	w0, [sp, #12]
    bbb8:	sub	w0, w0, #0x1
    bbbc:	str	w0, [sp, #12]
    bbc0:	ldr	w0, [sp, #12]
    bbc4:	cmp	w0, #0x0
    bbc8:	b.ne	bb7c <_gcry_mpih_sub_1+0x60>  // b.any
    bbcc:	mov	x0, #0x1                   	// #1
    bbd0:	b	bc44 <_gcry_mpih_sub_1+0x128>
    bbd4:	nop
    bbd8:	b	bbe0 <_gcry_mpih_sub_1+0xc4>
    bbdc:	nop
    bbe0:	ldr	x1, [sp, #24]
    bbe4:	ldr	x0, [sp, #16]
    bbe8:	cmp	x1, x0
    bbec:	b.eq	bc40 <_gcry_mpih_sub_1+0x124>  // b.none
    bbf0:	str	wzr, [sp, #44]
    bbf4:	b	bc2c <_gcry_mpih_sub_1+0x110>
    bbf8:	ldrsw	x0, [sp, #44]
    bbfc:	lsl	x0, x0, #3
    bc00:	ldr	x1, [sp, #16]
    bc04:	add	x1, x1, x0
    bc08:	ldrsw	x0, [sp, #44]
    bc0c:	lsl	x0, x0, #3
    bc10:	ldr	x2, [sp, #24]
    bc14:	add	x0, x2, x0
    bc18:	ldr	x1, [x1]
    bc1c:	str	x1, [x0]
    bc20:	ldr	w0, [sp, #44]
    bc24:	add	w0, w0, #0x1
    bc28:	str	w0, [sp, #44]
    bc2c:	ldr	w0, [sp, #12]
    bc30:	sub	w0, w0, #0x1
    bc34:	ldr	w1, [sp, #44]
    bc38:	cmp	w1, w0
    bc3c:	b.lt	bbf8 <_gcry_mpih_sub_1+0xdc>  // b.tstop
    bc40:	mov	x0, #0x0                   	// #0
    bc44:	add	sp, sp, #0x30
    bc48:	ret

000000000000bc4c <_gcry_mpih_sub>:
    bc4c:	stp	x29, x30, [sp, #-64]!
    bc50:	mov	x29, sp
    bc54:	str	x0, [sp, #40]
    bc58:	str	x1, [sp, #32]
    bc5c:	str	w2, [sp, #28]
    bc60:	str	x3, [sp, #16]
    bc64:	str	w4, [sp, #24]
    bc68:	str	xzr, [sp, #56]
    bc6c:	ldr	w0, [sp, #24]
    bc70:	cmp	w0, #0x0
    bc74:	b.eq	bc90 <_gcry_mpih_sub+0x44>  // b.none
    bc78:	ldr	w3, [sp, #24]
    bc7c:	ldr	x2, [sp, #16]
    bc80:	ldr	x1, [sp, #32]
    bc84:	ldr	x0, [sp, #40]
    bc88:	bl	7afc <_gcry_mpih_sub_n>
    bc8c:	str	x0, [sp, #56]
    bc90:	ldr	w1, [sp, #28]
    bc94:	ldr	w0, [sp, #24]
    bc98:	cmp	w1, w0
    bc9c:	b.eq	bce4 <_gcry_mpih_sub+0x98>  // b.none
    bca0:	ldrsw	x0, [sp, #24]
    bca4:	lsl	x0, x0, #3
    bca8:	ldr	x1, [sp, #40]
    bcac:	add	x4, x1, x0
    bcb0:	ldrsw	x0, [sp, #24]
    bcb4:	lsl	x0, x0, #3
    bcb8:	ldr	x1, [sp, #32]
    bcbc:	add	x5, x1, x0
    bcc0:	ldr	w1, [sp, #28]
    bcc4:	ldr	w0, [sp, #24]
    bcc8:	sub	w0, w1, w0
    bccc:	ldr	x3, [sp, #56]
    bcd0:	mov	w2, w0
    bcd4:	mov	x1, x5
    bcd8:	mov	x0, x4
    bcdc:	bl	bb1c <_gcry_mpih_sub_1>
    bce0:	str	x0, [sp, #56]
    bce4:	ldr	x0, [sp, #56]
    bce8:	ldp	x29, x30, [sp], #64
    bcec:	ret

000000000000bcf0 <_gcry_mpih_cmp>:
    bcf0:	sub	sp, sp, #0x40
    bcf4:	str	x0, [sp, #24]
    bcf8:	str	x1, [sp, #16]
    bcfc:	str	w2, [sp, #12]
    bd00:	ldr	w0, [sp, #12]
    bd04:	sub	w0, w0, #0x1
    bd08:	str	w0, [sp, #60]
    bd0c:	b	bd5c <_gcry_mpih_cmp+0x6c>
    bd10:	ldrsw	x0, [sp, #60]
    bd14:	lsl	x0, x0, #3
    bd18:	ldr	x1, [sp, #24]
    bd1c:	add	x0, x1, x0
    bd20:	ldr	x0, [x0]
    bd24:	str	x0, [sp, #48]
    bd28:	ldrsw	x0, [sp, #60]
    bd2c:	lsl	x0, x0, #3
    bd30:	ldr	x1, [sp, #16]
    bd34:	add	x0, x1, x0
    bd38:	ldr	x0, [x0]
    bd3c:	str	x0, [sp, #40]
    bd40:	ldr	x1, [sp, #48]
    bd44:	ldr	x0, [sp, #40]
    bd48:	cmp	x1, x0
    bd4c:	b.ne	bd70 <_gcry_mpih_cmp+0x80>  // b.any
    bd50:	ldr	w0, [sp, #60]
    bd54:	sub	w0, w0, #0x1
    bd58:	str	w0, [sp, #60]
    bd5c:	ldr	w0, [sp, #60]
    bd60:	cmp	w0, #0x0
    bd64:	b.ge	bd10 <_gcry_mpih_cmp+0x20>  // b.tcont
    bd68:	mov	w0, #0x0                   	// #0
    bd6c:	b	bd90 <_gcry_mpih_cmp+0xa0>
    bd70:	nop
    bd74:	ldr	x1, [sp, #48]
    bd78:	ldr	x0, [sp, #40]
    bd7c:	cmp	x1, x0
    bd80:	b.ls	bd8c <_gcry_mpih_cmp+0x9c>  // b.plast
    bd84:	mov	w0, #0x1                   	// #1
    bd88:	b	bd90 <_gcry_mpih_cmp+0xa0>
    bd8c:	mov	w0, #0xffffffff            	// #-1
    bd90:	add	sp, sp, #0x40
    bd94:	ret

000000000000bd98 <gcry_malloc>:
    bd98:	stp	x29, x30, [sp, #-32]!
    bd9c:	mov	x29, sp
    bda0:	str	x0, [sp, #24]
    bda4:	ldr	x0, [sp, #24]
    bda8:	bl	0 <grub_malloc>
    bdac:	ldp	x29, x30, [sp], #32
    bdb0:	ret

000000000000bdb4 <gcry_malloc_secure>:
    bdb4:	stp	x29, x30, [sp, #-32]!
    bdb8:	mov	x29, sp
    bdbc:	str	x0, [sp, #24]
    bdc0:	ldr	x0, [sp, #24]
    bdc4:	bl	0 <grub_malloc>
    bdc8:	ldp	x29, x30, [sp], #32
    bdcc:	ret

000000000000bdd0 <gcry_free>:
    bdd0:	stp	x29, x30, [sp, #-32]!
    bdd4:	mov	x29, sp
    bdd8:	str	x0, [sp, #24]
    bddc:	ldr	x0, [sp, #24]
    bde0:	bl	0 <grub_free>
    bde4:	nop
    bde8:	ldp	x29, x30, [sp], #32
    bdec:	ret

000000000000bdf0 <gcry_is_secure>:
    bdf0:	sub	sp, sp, #0x10
    bdf4:	str	x0, [sp, #8]
    bdf8:	mov	w0, #0x0                   	// #0
    bdfc:	add	sp, sp, #0x10
    be00:	ret

000000000000be04 <gcry_xcalloc>:
    be04:	stp	x29, x30, [sp, #-48]!
    be08:	mov	x29, sp
    be0c:	str	x0, [sp, #24]
    be10:	str	x1, [sp, #16]
    be14:	ldr	x1, [sp, #24]
    be18:	ldr	x0, [sp, #16]
    be1c:	mul	x0, x1, x0
    be20:	bl	0 <grub_zalloc>
    be24:	str	x0, [sp, #40]
    be28:	ldr	x0, [sp, #40]
    be2c:	cmp	x0, #0x0
    be30:	b.ne	be44 <gcry_xcalloc+0x40>  // b.any
    be34:	adrp	x0, 0 <grub_memcpy>
    be38:	add	x0, x0, #0x0
    be3c:	ldr	x0, [x0]
    be40:	bl	0 <grub_fatal>
    be44:	ldr	x0, [sp, #40]
    be48:	ldp	x29, x30, [sp], #48
    be4c:	ret
	...

000000000000be58 <gcry_xmalloc_secure>:
    be58:	stp	x29, x30, [sp, #-48]!
    be5c:	mov	x29, sp
    be60:	str	x0, [sp, #24]
    be64:	ldr	x0, [sp, #24]
    be68:	bl	0 <grub_malloc>
    be6c:	str	x0, [sp, #40]
    be70:	ldr	x0, [sp, #40]
    be74:	cmp	x0, #0x0
    be78:	b.ne	be8c <gcry_xmalloc_secure+0x34>  // b.any
    be7c:	adrp	x0, 0 <grub_memcpy>
    be80:	add	x0, x0, #0x0
    be84:	ldr	x0, [x0]
    be88:	bl	0 <grub_fatal>
    be8c:	ldr	x0, [sp, #40]
    be90:	ldp	x29, x30, [sp], #48
    be94:	ret
	...

000000000000bea0 <gcry_xcalloc_secure>:
    bea0:	stp	x29, x30, [sp, #-48]!
    bea4:	mov	x29, sp
    bea8:	str	x0, [sp, #24]
    beac:	str	x1, [sp, #16]
    beb0:	ldr	x1, [sp, #24]
    beb4:	ldr	x0, [sp, #16]
    beb8:	mul	x0, x1, x0
    bebc:	bl	0 <grub_zalloc>
    bec0:	str	x0, [sp, #40]
    bec4:	ldr	x0, [sp, #40]
    bec8:	cmp	x0, #0x0
    becc:	b.ne	bee0 <gcry_xcalloc_secure+0x40>  // b.any
    bed0:	adrp	x0, 0 <grub_memcpy>
    bed4:	add	x0, x0, #0x0
    bed8:	ldr	x0, [x0]
    bedc:	bl	0 <grub_fatal>
    bee0:	ldr	x0, [sp, #40]
    bee4:	ldp	x29, x30, [sp], #48
    bee8:	ret
    beec:	nop
	...

000000000000bef8 <gcry_xmalloc>:
    bef8:	stp	x29, x30, [sp, #-48]!
    befc:	mov	x29, sp
    bf00:	str	x0, [sp, #24]
    bf04:	ldr	x0, [sp, #24]
    bf08:	bl	0 <grub_malloc>
    bf0c:	str	x0, [sp, #40]
    bf10:	ldr	x0, [sp, #40]
    bf14:	cmp	x0, #0x0
    bf18:	b.ne	bf2c <gcry_xmalloc+0x34>  // b.any
    bf1c:	adrp	x0, 0 <grub_memcpy>
    bf20:	add	x0, x0, #0x0
    bf24:	ldr	x0, [x0]
    bf28:	bl	0 <grub_fatal>
    bf2c:	ldr	x0, [sp, #40]
    bf30:	ldp	x29, x30, [sp], #48
    bf34:	ret
	...

000000000000bf40 <gcry_xrealloc>:
    bf40:	stp	x29, x30, [sp, #-48]!
    bf44:	mov	x29, sp
    bf48:	str	x0, [sp, #24]
    bf4c:	str	x1, [sp, #16]
    bf50:	ldr	x1, [sp, #16]
    bf54:	ldr	x0, [sp, #24]
    bf58:	bl	0 <grub_realloc>
    bf5c:	str	x0, [sp, #40]
    bf60:	ldr	x0, [sp, #40]
    bf64:	cmp	x0, #0x0
    bf68:	b.ne	bf7c <gcry_xrealloc+0x3c>  // b.any
    bf6c:	adrp	x0, 0 <grub_memcpy>
    bf70:	add	x0, x0, #0x0
    bf74:	ldr	x0, [x0]
    bf78:	bl	0 <grub_fatal>
    bf7c:	ldr	x0, [sp, #40]
    bf80:	ldp	x29, x30, [sp], #48
    bf84:	ret
	...

000000000000bf90 <_gcry_check_heap>:
    bf90:	sub	sp, sp, #0x10
    bf94:	str	x0, [sp, #8]
    bf98:	nop
    bf9c:	add	sp, sp, #0x10
    bfa0:	ret

000000000000bfa4 <_gcry_log_printf>:
    bfa4:	stp	x29, x30, [sp, #-176]!
    bfa8:	mov	x29, sp
    bfac:	str	x0, [sp, #56]
    bfb0:	str	x1, [sp, #120]
    bfb4:	str	x2, [sp, #128]
    bfb8:	str	x3, [sp, #136]
    bfbc:	str	x4, [sp, #144]
    bfc0:	str	x5, [sp, #152]
    bfc4:	str	x6, [sp, #160]
    bfc8:	str	x7, [sp, #168]
    bfcc:	adrp	x0, 0 <grub_memcpy>
    bfd0:	add	x0, x0, #0x0
    bfd4:	ldr	x0, [x0]
    bfd8:	bl	0 <grub_env_get>
    bfdc:	str	x0, [sp, #104]
    bfe0:	ldr	x0, [sp, #104]
    bfe4:	cmp	x0, #0x0
    bfe8:	b.eq	c088 <_gcry_log_printf+0xe4>  // b.none
    bfec:	adrp	x0, 0 <grub_memcpy>
    bff0:	add	x0, x0, #0x0
    bff4:	ldr	x1, [x0]
    bff8:	ldr	x0, [sp, #104]
    bffc:	bl	0 <grub_strword>
    c000:	cmp	w0, #0x0
    c004:	b.ne	c024 <_gcry_log_printf+0x80>  // b.any
    c008:	adrp	x0, 0 <grub_memcpy>
    c00c:	add	x0, x0, #0x0
    c010:	ldr	x1, [x0]
    c014:	ldr	x0, [sp, #104]
    c018:	bl	0 <grub_strword>
    c01c:	cmp	w0, #0x0
    c020:	b.eq	c08c <_gcry_log_printf+0xe8>  // b.none
    c024:	adrp	x0, 0 <grub_memcpy>
    c028:	add	x0, x0, #0x0
    c02c:	ldr	x0, [x0]
    c030:	bl	0 <grub_printf>
    c034:	add	x0, sp, #0xb0
    c038:	str	x0, [sp, #72]
    c03c:	add	x0, sp, #0xb0
    c040:	str	x0, [sp, #80]
    c044:	add	x0, sp, #0x70
    c048:	str	x0, [sp, #88]
    c04c:	mov	w0, #0xffffffc8            	// #-56
    c050:	str	w0, [sp, #96]
    c054:	str	wzr, [sp, #100]
    c058:	add	x2, sp, #0x10
    c05c:	add	x3, sp, #0x48
    c060:	ldp	x0, x1, [x3]
    c064:	stp	x0, x1, [x2]
    c068:	ldp	x0, x1, [x3, #16]
    c06c:	stp	x0, x1, [x2, #16]
    c070:	add	x0, sp, #0x10
    c074:	mov	x1, x0
    c078:	ldr	x0, [sp, #56]
    c07c:	bl	0 <grub_vprintf>
    c080:	bl	0 <grub_refresh>
    c084:	b	c08c <_gcry_log_printf+0xe8>
    c088:	nop
    c08c:	ldp	x29, x30, [sp], #176
    c090:	ret
    c094:	nop
	...

000000000000c0b8 <_gcry_log_bug>:
    c0b8:	stp	x29, x30, [sp, #-160]!
    c0bc:	mov	x29, sp
    c0c0:	str	x0, [sp, #56]
    c0c4:	str	x1, [sp, #104]
    c0c8:	str	x2, [sp, #112]
    c0cc:	str	x3, [sp, #120]
    c0d0:	str	x4, [sp, #128]
    c0d4:	str	x5, [sp, #136]
    c0d8:	str	x6, [sp, #144]
    c0dc:	str	x7, [sp, #152]
    c0e0:	adrp	x0, 0 <grub_memcpy>
    c0e4:	add	x0, x0, #0x0
    c0e8:	ldr	x0, [x0]
    c0ec:	bl	0 <grub_printf>
    c0f0:	add	x0, sp, #0xa0
    c0f4:	str	x0, [sp, #64]
    c0f8:	add	x0, sp, #0xa0
    c0fc:	str	x0, [sp, #72]
    c100:	add	x0, sp, #0x60
    c104:	str	x0, [sp, #80]
    c108:	mov	w0, #0xffffffc8            	// #-56
    c10c:	str	w0, [sp, #88]
    c110:	str	wzr, [sp, #92]
    c114:	add	x2, sp, #0x10
    c118:	add	x3, sp, #0x40
    c11c:	ldp	x0, x1, [x3]
    c120:	stp	x0, x1, [x2]
    c124:	ldp	x0, x1, [x3, #16]
    c128:	stp	x0, x1, [x2, #16]
    c12c:	add	x0, sp, #0x10
    c130:	mov	x1, x0
    c134:	ldr	x0, [sp, #56]
    c138:	bl	0 <grub_vprintf>
    c13c:	bl	0 <grub_refresh>
    c140:	adrp	x0, 0 <grub_memcpy>
    c144:	add	x0, x0, #0x0
    c148:	ldr	x0, [x0]
    c14c:	bl	0 <grub_fatal>
	...

000000000000c160 <gpg_error_from_syserror>:
    c160:	adrp	x0, 0 <grub_memcpy>
    c164:	add	x0, x0, #0x0
    c168:	ldr	x0, [x0]
    c16c:	ldr	w0, [x0]
    c170:	cmp	w0, #0x0
    c174:	b.eq	c184 <gpg_error_from_syserror+0x24>  // b.none
    c178:	cmp	w0, #0x3
    c17c:	b.eq	c18c <gpg_error_from_syserror+0x2c>  // b.none
    c180:	b	c194 <gpg_error_from_syserror+0x34>
    c184:	mov	w0, #0x0                   	// #0
    c188:	b	c198 <gpg_error_from_syserror+0x38>
    c18c:	mov	w0, #0x22                  	// #34
    c190:	b	c198 <gpg_error_from_syserror+0x38>
    c194:	mov	w0, #0x8                   	// #8
    c198:	ret
    c19c:	nop
	...
