
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__sha1@@Base+0x105d0>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0xc10>:
     e20:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 13000 <PyInit__sha1@@Base+0x115d0>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 13000 <PyInit__sha1@@Base+0x115d0>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 12000 <PyInit__sha1@@Base+0x105d0>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 13000 <PyInit__sha1@@Base+0x115d0>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 13000 <PyInit__sha1@@Base+0x115d0>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 12000 <PyInit__sha1@@Base+0x105d0>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 13000 <PyInit__sha1@@Base+0x115d0>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 13000 <PyInit__sha1@@Base+0x115d0>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>
     ef4:	nop
     ef8:	sub	sp, sp, #0x140
     efc:	mov	x7, sp
     f00:	add	x8, x7, #0x40
     f04:	mov	x5, x7
     f08:	ldrb	w4, [x1, #1]
     f0c:	add	x1, x1, #0x4
     f10:	ldurb	w2, [x1, #-4]
     f14:	ldurb	w3, [x1, #-2]
     f18:	ldurb	w6, [x1, #-1]
     f1c:	lsl	w4, w4, #16
     f20:	orr	w2, w4, w2, lsl #24
     f24:	orr	w3, w6, w3, lsl #8
     f28:	orr	w2, w2, w3
     f2c:	str	w2, [x5], #4
     f30:	cmp	x8, x5
     f34:	b.ne	f08 <_Py_strhex@plt+0xf8>  // b.any
     f38:	ldp	w12, w11, [x0, #8]
     f3c:	add	x6, x7, #0x100
     f40:	ldp	w10, w9, [x0, #16]
     f44:	mov	x1, x7
     f48:	ldr	w8, [x0, #24]
     f4c:	nop
     f50:	ldr	w5, [x1]
     f54:	add	x1, x1, #0x4
     f58:	ldr	w2, [x1, #4]
     f5c:	ldr	w4, [x1, #28]
     f60:	ldr	w3, [x1, #48]
     f64:	eor	w2, w2, w5
     f68:	eor	w3, w3, w4
     f6c:	eor	w2, w2, w3
     f70:	ror	w2, w2, #31
     f74:	str	w2, [x1, #60]
     f78:	cmp	x6, x1
     f7c:	b.ne	f50 <_Py_strhex@plt+0x140>  // b.any
     f80:	mov	w15, #0x7999                	// #31129
     f84:	add	x13, x7, #0x50
     f88:	mov	x14, x7
     f8c:	mov	w5, w8
     f90:	mov	w3, w9
     f94:	mov	w4, w10
     f98:	mov	w2, w11
     f9c:	mov	w1, w12
     fa0:	movk	w15, #0x5a82, lsl #16
     fa4:	eor	w6, w4, w3
     fa8:	ldr	w18, [x14]
     fac:	and	w6, w6, w2
     fb0:	ror	w17, w2, #2
     fb4:	eor	w6, w6, w3
     fb8:	ror	w16, w1, #27
     fbc:	eor	w2, w17, w4
     fc0:	add	w16, w16, w15
     fc4:	add	w6, w6, w18
     fc8:	and	w2, w2, w1
     fcc:	ldr	w18, [x14, #4]
     fd0:	add	w6, w6, w16
     fd4:	add	w5, w6, w5
     fd8:	ror	w16, w1, #2
     fdc:	eor	w2, w2, w4
     fe0:	add	w1, w3, w15
     fe4:	eor	w6, w17, w16
     fe8:	add	w3, w2, w18
     fec:	and	w6, w6, w5
     ff0:	ldr	w2, [x14, #8]
     ff4:	add	w3, w3, w1
     ff8:	ror	w1, w5, #27
     ffc:	add	w3, w1, w3
    1000:	eor	w6, w6, w17
    1004:	add	w1, w4, w15
    1008:	add	w4, w6, w2
    100c:	add	w4, w4, w1
    1010:	ror	w5, w5, #2
    1014:	eor	w2, w16, w5
    1018:	ror	w6, w3, #27
    101c:	add	w4, w6, w4
    1020:	and	w2, w2, w3
    1024:	ldp	w1, w6, [x14, #12]
    1028:	eor	w2, w2, w16
    102c:	add	w17, w17, w15
    1030:	ror	w3, w3, #2
    1034:	add	w2, w2, w1
    1038:	eor	w1, w5, w3
    103c:	add	w2, w2, w17
    1040:	and	w1, w1, w4
    1044:	eor	w1, w1, w5
    1048:	ror	w17, w4, #27
    104c:	add	w2, w17, w2
    1050:	add	w1, w1, w6
    1054:	add	w16, w16, w15
    1058:	add	x14, x14, #0x14
    105c:	add	w1, w1, w16
    1060:	ror	w6, w2, #27
    1064:	cmp	x13, x14
    1068:	ror	w4, w4, #2
    106c:	add	w1, w6, w1
    1070:	b.ne	fa4 <_Py_strhex@plt+0x194>  // b.any
    1074:	mov	w15, #0xeba1                	// #60321
    1078:	mov	x14, x7
    107c:	movk	w15, #0x6ed9, lsl #16
    1080:	ldr	w17, [x14, #80]
    1084:	eor	w6, w2, w4
    1088:	eor	w6, w6, w3
    108c:	ror	w16, w1, #27
    1090:	add	w16, w16, w15
    1094:	add	w6, w6, w17
    1098:	add	w6, w6, w16
    109c:	ror	w17, w2, #2
    10a0:	eor	w16, w1, w4
    10a4:	ldr	w2, [x14, #84]
    10a8:	add	w5, w6, w5
    10ac:	eor	w6, w16, w17
    10b0:	add	w6, w6, w2
    10b4:	add	w3, w3, w15
    10b8:	add	w3, w6, w3
    10bc:	ror	w16, w1, #2
    10c0:	eor	w6, w17, w16
    10c4:	ror	w1, w5, #27
    10c8:	add	w3, w1, w3
    10cc:	eor	w6, w6, w5
    10d0:	ldp	w2, w1, [x14, #88]
    10d4:	ror	w5, w5, #2
    10d8:	add	w4, w4, w15
    10dc:	ror	w18, w3, #27
    10e0:	add	w6, w6, w2
    10e4:	eor	w2, w16, w5
    10e8:	add	w4, w6, w4
    10ec:	eor	w2, w2, w3
    10f0:	add	w4, w18, w4
    10f4:	add	w2, w2, w1
    10f8:	add	w17, w17, w15
    10fc:	ror	w3, w3, #2
    1100:	ldr	w6, [x14, #96]
    1104:	ror	w18, w4, #27
    1108:	add	w2, w2, w17
    110c:	eor	w1, w5, w3
    1110:	eor	w1, w1, w4
    1114:	add	w2, w18, w2
    1118:	add	w1, w1, w6
    111c:	add	w16, w16, w15
    1120:	add	x14, x14, #0x14
    1124:	add	w1, w1, w16
    1128:	ror	w6, w2, #27
    112c:	cmp	x13, x14
    1130:	ror	w4, w4, #2
    1134:	add	w1, w6, w1
    1138:	b.ne	1080 <_Py_strhex@plt+0x270>  // b.any
    113c:	mov	w15, #0xbcdc                	// #48348
    1140:	mov	x14, x7
    1144:	movk	w15, #0x8f1b, lsl #16
    1148:	orr	w6, w2, w4
    114c:	ldr	w18, [x14, #160]
    1150:	and	w16, w2, w4
    1154:	ror	w17, w2, #2
    1158:	and	w6, w6, w3
    115c:	orr	w2, w17, w1
    1160:	orr	w6, w6, w16
    1164:	ror	w16, w1, #27
    1168:	add	w16, w16, w15
    116c:	and	w2, w2, w4
    1170:	add	w6, w6, w18
    1174:	and	w18, w17, w1
    1178:	add	w6, w6, w16
    117c:	orr	w2, w2, w18
    1180:	ldp	w16, w18, [x14, #164]
    1184:	add	w5, w6, w5
    1188:	add	w6, w3, w15
    118c:	add	x14, x14, #0x14
    1190:	add	w3, w2, w16
    1194:	ror	w16, w1, #2
    1198:	add	w3, w3, w6
    119c:	ror	w1, w5, #27
    11a0:	add	w3, w1, w3
    11a4:	orr	w6, w5, w16
    11a8:	and	w1, w5, w16
    11ac:	and	w6, w6, w17
    11b0:	orr	w6, w6, w1
    11b4:	ror	w2, w3, #27
    11b8:	add	w1, w4, w15
    11bc:	ror	w5, w5, #2
    11c0:	add	w4, w6, w2
    11c4:	orr	w2, w3, w5
    11c8:	and	w6, w3, w5
    11cc:	add	w4, w4, w1
    11d0:	and	w2, w2, w16
    11d4:	ldr	w1, [x14, #152]
    11d8:	add	w4, w4, w18
    11dc:	orr	w2, w2, w6
    11e0:	add	w17, w17, w15
    11e4:	add	w2, w2, w1
    11e8:	add	w2, w2, w17
    11ec:	ror	w1, w4, #27
    11f0:	add	w2, w1, w2
    11f4:	ror	w3, w3, #2
    11f8:	orr	w1, w4, w3
    11fc:	and	w17, w4, w3
    1200:	and	w1, w1, w5
    1204:	ror	w6, w2, #27
    1208:	orr	w1, w1, w17
    120c:	add	w16, w16, w15
    1210:	add	w1, w1, w6
    1214:	ldr	w6, [x14, #156]
    1218:	add	w1, w1, w16
    121c:	ror	w4, w4, #2
    1220:	add	w1, w1, w6
    1224:	cmp	x13, x14
    1228:	b.ne	1148 <_Py_strhex@plt+0x338>  // b.any
    122c:	mov	w14, #0xc1d6                	// #49622
    1230:	movk	w14, #0xca62, lsl #16
    1234:	eor	w6, w2, w4
    1238:	ror	w17, w2, #2
    123c:	ldp	w16, w2, [x7, #240]
    1240:	eor	w6, w6, w3
    1244:	add	w3, w3, w14
    1248:	ror	w15, w1, #27
    124c:	add	w15, w15, w14
    1250:	add	w6, w6, w16
    1254:	add	w6, w6, w15
    1258:	eor	w15, w1, w4
    125c:	add	w5, w6, w5
    1260:	eor	w6, w15, w17
    1264:	add	w6, w6, w2
    1268:	ror	w16, w1, #2
    126c:	add	w3, w6, w3
    1270:	ror	w1, w5, #27
    1274:	add	w3, w1, w3
    1278:	eor	w6, w17, w16
    127c:	ldp	w2, w1, [x7, #248]
    1280:	eor	w6, w6, w5
    1284:	add	w4, w4, w14
    1288:	ror	w5, w5, #2
    128c:	add	w6, w6, w2
    1290:	ror	w15, w3, #27
    1294:	add	w4, w6, w4
    1298:	eor	w2, w16, w5
    129c:	add	w4, w15, w4
    12a0:	eor	w2, w2, w3
    12a4:	add	w2, w2, w1
    12a8:	add	w17, w17, w14
    12ac:	ldr	w6, [x7, #256]
    12b0:	ror	w3, w3, #2
    12b4:	add	w2, w2, w17
    12b8:	ror	w15, w4, #27
    12bc:	eor	w1, w5, w3
    12c0:	add	w2, w15, w2
    12c4:	eor	w1, w1, w4
    12c8:	add	w16, w16, w14
    12cc:	add	w1, w1, w6
    12d0:	add	x7, x7, #0x14
    12d4:	add	w1, w1, w16
    12d8:	ror	w6, w2, #27
    12dc:	cmp	x13, x7
    12e0:	ror	w4, w4, #2
    12e4:	add	w1, w6, w1
    12e8:	b.ne	1234 <_Py_strhex@plt+0x424>  // b.any
    12ec:	add	w1, w12, w1
    12f0:	add	w2, w11, w2
    12f4:	add	w4, w10, w4
    12f8:	add	w3, w9, w3
    12fc:	add	w5, w8, w5
    1300:	stp	w1, w2, [x0, #8]
    1304:	stp	w4, w3, [x0, #16]
    1308:	str	w5, [x0, #24]
    130c:	add	sp, sp, #0x140
    1310:	ret
    1314:	nop
    1318:	stp	x29, x30, [sp, #-32]!
    131c:	mov	w3, #0xffffff80            	// #-128
    1320:	mov	x29, sp
    1324:	ldr	w2, [x0, #28]
    1328:	ldr	x6, [x0]
    132c:	stp	x19, x20, [sp, #16]
    1330:	mov	x19, x1
    1334:	add	x1, x0, w2, uxtw
    1338:	lsl	w5, w2, #3
    133c:	add	w4, w2, #0x1
    1340:	add	x5, x5, x6
    1344:	str	x5, [x0]
    1348:	add	x20, x0, #0x20
    134c:	str	w4, [x0, #28]
    1350:	cmp	w4, #0x38
    1354:	strb	w3, [x1, #32]
    1358:	b.ls	1430 <_Py_strhex@plt+0x620>  // b.plast
    135c:	cmp	w4, #0x3f
    1360:	b.hi	1394 <_Py_strhex@plt+0x584>  // b.pmore
    1364:	mov	w3, #0x3e                  	// #62
    1368:	sub	w3, w3, w2
    136c:	add	x1, x0, #0x21
    1370:	add	x2, x4, #0x20
    1374:	add	x4, x3, x4
    1378:	add	x2, x0, x2
    137c:	add	x4, x4, x1
    1380:	strb	wzr, [x2], #1
    1384:	cmp	x4, x2
    1388:	b.ne	1380 <_Py_strhex@plt+0x570>  // b.any
    138c:	mov	w1, #0x40                  	// #64
    1390:	str	w1, [x0, #28]
    1394:	mov	x1, x20
    1398:	bl	ef8 <_Py_strhex@plt+0xe8>
    139c:	ldr	x5, [x0]
    13a0:	mov	w4, #0x0                   	// #0
    13a4:	mov	w2, w4
    13a8:	add	x3, x0, w2, uxtw
    13ac:	add	w2, w2, #0x1
    13b0:	cmp	w2, #0x38
    13b4:	strb	wzr, [x3, #32]
    13b8:	b.ne	13a8 <_Py_strhex@plt+0x598>  // b.any
    13bc:	add	w3, w4, #0x1
    13c0:	mov	w2, #0x37                  	// #55
    13c4:	cmp	w3, #0x38
    13c8:	sub	w4, w2, w4
    13cc:	csel	w4, w4, wzr, ls  // ls = plast
    13d0:	add	w4, w4, w3
    13d4:	str	w4, [x0, #28]
    13d8:	rev	x5, x5
    13dc:	str	x5, [x0, #88]
    13e0:	mov	x1, x20
    13e4:	bl	ef8 <_Py_strhex@plt+0xe8>
    13e8:	add	x0, x0, #0x8
    13ec:	mov	x1, x19
    13f0:	add	x3, x19, #0x14
    13f4:	ldrb	w2, [x0, #3]
    13f8:	add	x1, x1, #0x4
    13fc:	sturb	w2, [x1, #-4]
    1400:	ldrh	w2, [x0, #2]
    1404:	sturb	w2, [x1, #-3]
    1408:	ldr	w2, [x0]
    140c:	lsr	w2, w2, #8
    1410:	sturb	w2, [x1, #-2]
    1414:	ldr	w2, [x0], #4
    1418:	sturb	w2, [x1, #-1]
    141c:	cmp	x3, x1
    1420:	b.ne	13f4 <_Py_strhex@plt+0x5e4>  // b.any
    1424:	ldp	x19, x20, [sp, #16]
    1428:	ldp	x29, x30, [sp], #32
    142c:	ret
    1430:	b.ne	13a4 <_Py_strhex@plt+0x594>  // b.any
    1434:	b	13d8 <_Py_strhex@plt+0x5c8>
    1438:	stp	x29, x30, [sp, #-32]!
    143c:	adrp	x1, 13000 <PyInit__sha1@@Base+0x115d0>
    1440:	mov	x29, sp
    1444:	str	x19, [sp, #16]
    1448:	mov	x19, x0
    144c:	add	x0, x1, #0x98
    1450:	bl	de0 <_PyObject_New@plt>
    1454:	cbz	x0, 148c <_Py_strhex@plt+0x67c>
    1458:	add	x2, x19, #0x10
    145c:	ldp	x4, x5, [x19, #16]
    1460:	stp	x4, x5, [x0, #16]
    1464:	ldp	x4, x5, [x2, #16]
    1468:	stp	x4, x5, [x0, #32]
    146c:	ldp	x4, x5, [x2, #32]
    1470:	stp	x4, x5, [x0, #48]
    1474:	ldp	x4, x5, [x2, #48]
    1478:	stp	x4, x5, [x0, #64]
    147c:	ldp	x4, x5, [x2, #64]
    1480:	stp	x4, x5, [x0, #80]
    1484:	ldp	x2, x3, [x2, #80]
    1488:	stp	x2, x3, [x0, #96]
    148c:	ldr	x19, [sp, #16]
    1490:	ldp	x29, x30, [sp], #32
    1494:	ret
    1498:	cmp	x2, #0x0
    149c:	b.le	1574 <_Py_strhex@plt+0x764>
    14a0:	stp	x29, x30, [sp, #-64]!
    14a4:	mov	x29, sp
    14a8:	stp	x19, x20, [sp, #16]
    14ac:	mov	x20, x2
    14b0:	stp	x21, x22, [sp, #32]
    14b4:	mov	x21, x0
    14b8:	mov	x22, x1
    14bc:	stp	x23, x24, [sp, #48]
    14c0:	add	x23, x0, #0x20
    14c4:	mov	w24, #0x40                  	// #64
    14c8:	b	1500 <_Py_strhex@plt+0x6f0>
    14cc:	cmp	x19, x20
    14d0:	csel	x19, x19, x20, le
    14d4:	mov	x2, x19
    14d8:	add	x22, x22, x19
    14dc:	bl	d00 <memcpy@plt>
    14e0:	sub	x20, x20, x19
    14e4:	ldr	w2, [x21, #28]
    14e8:	add	w19, w2, w19
    14ec:	str	w19, [x21, #28]
    14f0:	cmp	w19, #0x40
    14f4:	b.eq	1554 <_Py_strhex@plt+0x744>  // b.none
    14f8:	cmp	x20, #0x0
    14fc:	b.le	1540 <_Py_strhex@plt+0x730>
    1500:	ldr	w0, [x21, #28]
    1504:	cmp	x20, #0x3f
    1508:	mov	x1, x22
    150c:	sub	w19, w24, w0
    1510:	ccmp	w0, #0x0, #0x0, gt
    1514:	add	x0, x23, w0, uxtw
    1518:	b.ne	14cc <_Py_strhex@plt+0x6bc>  // b.any
    151c:	mov	x0, x21
    1520:	bl	ef8 <_Py_strhex@plt+0xe8>
    1524:	ldr	x0, [x21]
    1528:	sub	x20, x20, #0x40
    152c:	add	x22, x22, #0x40
    1530:	cmp	x20, #0x0
    1534:	add	x0, x0, #0x200
    1538:	str	x0, [x21]
    153c:	b.gt	1500 <_Py_strhex@plt+0x6f0>
    1540:	ldp	x19, x20, [sp, #16]
    1544:	ldp	x21, x22, [sp, #32]
    1548:	ldp	x23, x24, [sp, #48]
    154c:	ldp	x29, x30, [sp], #64
    1550:	ret
    1554:	mov	x0, x21
    1558:	mov	x1, x23
    155c:	bl	ef8 <_Py_strhex@plt+0xe8>
    1560:	str	wzr, [x21, #28]
    1564:	ldr	x0, [x21]
    1568:	add	x0, x0, #0x200
    156c:	str	x0, [x21]
    1570:	b	14f8 <_Py_strhex@plt+0x6e8>
    1574:	ret
    1578:	stp	x29, x30, [sp, #-112]!
    157c:	mov	x29, sp
    1580:	stp	x19, x20, [sp, #16]
    1584:	mov	x19, x0
    1588:	ldr	x0, [x1, #8]
    158c:	ldr	x2, [x0, #168]
    1590:	tbnz	w2, #28, 1660 <_Py_strhex@plt+0x850>
    1594:	ldr	x0, [x0, #160]
    1598:	cbz	x0, 1608 <_Py_strhex@plt+0x7f8>
    159c:	ldr	x0, [x0]
    15a0:	cbz	x0, 1608 <_Py_strhex@plt+0x7f8>
    15a4:	add	x20, sp, #0x20
    15a8:	mov	x0, x1
    15ac:	mov	w2, #0x0                   	// #0
    15b0:	mov	x1, x20
    15b4:	bl	dd0 <PyObject_GetBuffer@plt>
    15b8:	cmn	w0, #0x1
    15bc:	b.eq	1680 <_Py_strhex@plt+0x870>  // b.none
    15c0:	ldr	w0, [sp, #68]
    15c4:	cmp	w0, #0x1
    15c8:	b.gt	1630 <_Py_strhex@plt+0x820>
    15cc:	ldr	x1, [sp, #32]
    15d0:	add	x0, x19, #0x10
    15d4:	ldr	x2, [sp, #48]
    15d8:	bl	1498 <_Py_strhex@plt+0x688>
    15dc:	mov	x0, x20
    15e0:	bl	d10 <PyBuffer_Release@plt>
    15e4:	adrp	x1, 12000 <PyInit__sha1@@Base+0x105d0>
    15e8:	ldr	x1, [x1, #4056]
    15ec:	mov	x0, x1
    15f0:	ldr	x2, [x1]
    15f4:	add	x2, x2, #0x1
    15f8:	str	x2, [x1]
    15fc:	ldp	x19, x20, [sp, #16]
    1600:	ldp	x29, x30, [sp], #112
    1604:	ret
    1608:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
    160c:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1610:	add	x1, x1, #0xae8
    1614:	ldr	x0, [x0, #4032]
    1618:	ldr	x0, [x0]
    161c:	bl	d60 <PyErr_SetString@plt>
    1620:	mov	x0, #0x0                   	// #0
    1624:	ldp	x19, x20, [sp, #16]
    1628:	ldp	x29, x30, [sp], #112
    162c:	ret
    1630:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
    1634:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1638:	add	x1, x1, #0xb18
    163c:	ldr	x0, [x0, #4024]
    1640:	ldr	x0, [x0]
    1644:	bl	d60 <PyErr_SetString@plt>
    1648:	mov	x0, x20
    164c:	bl	d10 <PyBuffer_Release@plt>
    1650:	mov	x0, #0x0                   	// #0
    1654:	ldp	x19, x20, [sp, #16]
    1658:	ldp	x29, x30, [sp], #112
    165c:	ret
    1660:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
    1664:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1668:	add	x1, x1, #0xab8
    166c:	ldr	x0, [x0, #4032]
    1670:	ldr	x0, [x0]
    1674:	bl	d60 <PyErr_SetString@plt>
    1678:	mov	x0, #0x0                   	// #0
    167c:	b	15fc <_Py_strhex@plt+0x7ec>
    1680:	mov	x0, #0x0                   	// #0
    1684:	b	15fc <_Py_strhex@plt+0x7ec>
    1688:	mov	x0, #0x14                  	// #20
    168c:	b	d90 <PyLong_FromLong@plt>
    1690:	mov	x0, #0x40                  	// #64
    1694:	b	d90 <PyLong_FromLong@plt>
    1698:	adrp	x0, 1000 <_Py_strhex@plt+0x1f0>
    169c:	mov	x1, #0x4                   	// #4
    16a0:	add	x0, x0, #0xb38
    16a4:	b	e00 <PyUnicode_FromStringAndSize@plt>
    16a8:	mov	x3, x0
    16ac:	stp	x29, x30, [sp, #-160]!
    16b0:	mov	x29, sp
    16b4:	ldp	x4, x5, [x3, #16]
    16b8:	stp	x4, x5, [sp, #64]
    16bc:	add	x0, sp, #0x40
    16c0:	ldp	x4, x5, [x3, #32]
    16c4:	stp	x4, x5, [sp, #80]
    16c8:	ldp	x4, x5, [x3, #48]
    16cc:	stp	x4, x5, [sp, #96]
    16d0:	ldp	x4, x5, [x3, #64]
    16d4:	stp	x4, x5, [sp, #112]
    16d8:	ldp	x4, x5, [x3, #80]
    16dc:	stp	x4, x5, [sp, #128]
    16e0:	ldp	x2, x3, [x3, #96]
    16e4:	str	x19, [sp, #16]
    16e8:	add	x19, sp, #0x28
    16ec:	stp	x2, x3, [sp, #144]
    16f0:	mov	x1, x19
    16f4:	bl	1318 <_Py_strhex@plt+0x508>
    16f8:	mov	x0, x19
    16fc:	mov	x1, #0x14                  	// #20
    1700:	bl	e10 <_Py_strhex@plt>
    1704:	ldr	x19, [sp, #16]
    1708:	ldp	x29, x30, [sp], #160
    170c:	ret
    1710:	mov	x3, x0
    1714:	stp	x29, x30, [sp, #-160]!
    1718:	mov	x29, sp
    171c:	ldp	x4, x5, [x3, #16]
    1720:	stp	x4, x5, [sp, #64]
    1724:	add	x0, sp, #0x40
    1728:	ldp	x4, x5, [x3, #32]
    172c:	stp	x4, x5, [sp, #80]
    1730:	ldp	x4, x5, [x3, #48]
    1734:	stp	x4, x5, [sp, #96]
    1738:	ldp	x4, x5, [x3, #64]
    173c:	stp	x4, x5, [sp, #112]
    1740:	ldp	x4, x5, [x3, #80]
    1744:	stp	x4, x5, [sp, #128]
    1748:	ldp	x2, x3, [x3, #96]
    174c:	str	x19, [sp, #16]
    1750:	add	x19, sp, #0x28
    1754:	stp	x2, x3, [sp, #144]
    1758:	mov	x1, x19
    175c:	bl	1318 <_Py_strhex@plt+0x508>
    1760:	mov	x0, x19
    1764:	mov	x1, #0x14                  	// #20
    1768:	bl	d30 <PyBytes_FromStringAndSize@plt>
    176c:	ldr	x19, [sp, #16]
    1770:	ldp	x29, x30, [sp], #160
    1774:	ret
    1778:	b	d70 <PyObject_Free@plt>
    177c:	nop
    1780:	sub	sp, sp, #0xa0
    1784:	mov	x0, x1
    1788:	mov	x1, x2
    178c:	mov	x2, x3
    1790:	stp	x29, x30, [sp, #16]
    1794:	add	x29, sp, #0x10
    1798:	stp	x19, x20, [sp, #32]
    179c:	cbz	x3, 18a8 <_Py_strhex@plt+0xa98>
    17a0:	ldr	x19, [x3, #16]
    17a4:	add	x19, x1, x19
    17a8:	add	x3, sp, #0x48
    17ac:	str	x3, [sp]
    17b0:	adrp	x4, 13000 <PyInit__sha1@@Base+0x115d0>
    17b4:	add	x4, x4, #0x98
    17b8:	mov	x3, x2
    17bc:	add	x4, x4, #0x1a0
    17c0:	mov	w7, #0x0                   	// #0
    17c4:	mov	w6, #0x1                   	// #1
    17c8:	mov	w5, #0x0                   	// #0
    17cc:	mov	x2, #0x0                   	// #0
    17d0:	bl	d50 <_PyArg_UnpackKeywords@plt>
    17d4:	cbz	x0, 1928 <_Py_strhex@plt+0xb18>
    17d8:	cbz	x19, 18c0 <_Py_strhex@plt+0xab0>
    17dc:	ldr	x0, [x0]
    17e0:	cbz	x0, 18c0 <_Py_strhex@plt+0xab0>
    17e4:	ldr	x1, [x0, #8]
    17e8:	ldr	x2, [x1, #168]
    17ec:	tbnz	w2, #28, 19cc <_Py_strhex@plt+0xbbc>
    17f0:	ldr	x1, [x1, #160]
    17f4:	cbz	x1, 199c <_Py_strhex@plt+0xb8c>
    17f8:	ldr	x1, [x1]
    17fc:	cbz	x1, 199c <_Py_strhex@plt+0xb8c>
    1800:	add	x20, sp, #0x50
    1804:	mov	w2, #0x0                   	// #0
    1808:	mov	x1, x20
    180c:	bl	dd0 <PyObject_GetBuffer@plt>
    1810:	cmn	w0, #0x1
    1814:	b.eq	1928 <_Py_strhex@plt+0xb18>  // b.none
    1818:	ldr	w0, [sp, #116]
    181c:	cmp	w0, #0x1
    1820:	b.gt	1940 <_Py_strhex@plt+0xb30>
    1824:	adrp	x0, 13000 <PyInit__sha1@@Base+0x115d0>
    1828:	add	x0, x0, #0x98
    182c:	bl	de0 <_PyObject_New@plt>
    1830:	mov	x19, x0
    1834:	cbz	x0, 197c <_Py_strhex@plt+0xb6c>
    1838:	mov	x2, #0x2301                	// #8961
    183c:	mov	x1, #0xdcfe                	// #56574
    1840:	movk	x2, #0x6745, lsl #16
    1844:	movk	x1, #0x98ba, lsl #16
    1848:	movk	x2, #0xab89, lsl #32
    184c:	movk	x1, #0x5476, lsl #32
    1850:	mov	x0, #0xe1f0                	// #57840
    1854:	str	x21, [sp, #48]
    1858:	movk	x2, #0xefcd, lsl #48
    185c:	movk	x1, #0x1032, lsl #48
    1860:	movk	x0, #0xc3d2, lsl #16
    1864:	stp	xzr, x2, [x19, #16]
    1868:	add	x21, x19, #0x10
    186c:	stp	x1, x0, [x19, #32]
    1870:	bl	db0 <PyErr_Occurred@plt>
    1874:	cbnz	x0, 1968 <_Py_strhex@plt+0xb58>
    1878:	ldr	x1, [sp, #80]
    187c:	mov	x0, x21
    1880:	ldr	x2, [sp, #96]
    1884:	bl	1498 <_Py_strhex@plt+0x688>
    1888:	mov	x0, x20
    188c:	bl	d10 <PyBuffer_Release@plt>
    1890:	mov	x0, x19
    1894:	ldp	x29, x30, [sp, #16]
    1898:	ldp	x19, x20, [sp, #32]
    189c:	ldr	x21, [sp, #48]
    18a0:	add	sp, sp, #0xa0
    18a4:	ret
    18a8:	tbnz	x1, #63, 19ec <_Py_strhex@plt+0xbdc>
    18ac:	cmp	x0, #0x0
    18b0:	mov	x19, x1
    18b4:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    18b8:	b.gt	17a8 <_Py_strhex@plt+0x998>
    18bc:	cbnz	x19, 17dc <_Py_strhex@plt+0x9cc>
    18c0:	adrp	x0, 13000 <PyInit__sha1@@Base+0x115d0>
    18c4:	add	x0, x0, #0x98
    18c8:	bl	de0 <_PyObject_New@plt>
    18cc:	mov	x19, x0
    18d0:	cbz	x0, 1928 <_Py_strhex@plt+0xb18>
    18d4:	mov	x2, #0x2301                	// #8961
    18d8:	mov	x1, #0xdcfe                	// #56574
    18dc:	movk	x2, #0x6745, lsl #16
    18e0:	movk	x1, #0x98ba, lsl #16
    18e4:	movk	x2, #0xab89, lsl #32
    18e8:	movk	x1, #0x5476, lsl #32
    18ec:	mov	x0, #0xe1f0                	// #57840
    18f0:	movk	x2, #0xefcd, lsl #48
    18f4:	movk	x1, #0x1032, lsl #48
    18f8:	movk	x0, #0xc3d2, lsl #16
    18fc:	stp	xzr, x2, [x19, #16]
    1900:	stp	x1, x0, [x19, #32]
    1904:	bl	db0 <PyErr_Occurred@plt>
    1908:	cbz	x0, 192c <_Py_strhex@plt+0xb1c>
    190c:	ldr	x0, [x19]
    1910:	sub	x0, x0, #0x1
    1914:	str	x0, [x19]
    1918:	cbnz	x0, 1928 <_Py_strhex@plt+0xb18>
    191c:	mov	x0, x19
    1920:	bl	d40 <_Py_Dealloc@plt>
    1924:	nop
    1928:	mov	x19, #0x0                   	// #0
    192c:	mov	x0, x19
    1930:	ldp	x29, x30, [sp, #16]
    1934:	ldp	x19, x20, [sp, #32]
    1938:	add	sp, sp, #0xa0
    193c:	ret
    1940:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
    1944:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1948:	add	x1, x1, #0xb18
    194c:	mov	x19, #0x0                   	// #0
    1950:	ldr	x0, [x0, #4024]
    1954:	ldr	x0, [x0]
    1958:	bl	d60 <PyErr_SetString@plt>
    195c:	mov	x0, x20
    1960:	bl	d10 <PyBuffer_Release@plt>
    1964:	b	192c <_Py_strhex@plt+0xb1c>
    1968:	ldr	x0, [x19]
    196c:	sub	x0, x0, #0x1
    1970:	str	x0, [x19]
    1974:	cbz	x0, 1a1c <_Py_strhex@plt+0xc0c>
    1978:	ldr	x21, [sp, #48]
    197c:	mov	x0, x20
    1980:	mov	x19, #0x0                   	// #0
    1984:	bl	d10 <PyBuffer_Release@plt>
    1988:	mov	x0, x19
    198c:	ldp	x29, x30, [sp, #16]
    1990:	ldp	x19, x20, [sp, #32]
    1994:	add	sp, sp, #0xa0
    1998:	ret
    199c:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
    19a0:	mov	x19, #0x0                   	// #0
    19a4:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    19a8:	add	x1, x1, #0xae8
    19ac:	ldr	x0, [x0, #4032]
    19b0:	ldr	x0, [x0]
    19b4:	bl	d60 <PyErr_SetString@plt>
    19b8:	mov	x0, x19
    19bc:	ldp	x29, x30, [sp, #16]
    19c0:	ldp	x19, x20, [sp, #32]
    19c4:	add	sp, sp, #0xa0
    19c8:	ret
    19cc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x105d0>
    19d0:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    19d4:	mov	x19, #0x0                   	// #0
    19d8:	add	x1, x1, #0xab8
    19dc:	ldr	x0, [x0, #4032]
    19e0:	ldr	x0, [x0]
    19e4:	bl	d60 <PyErr_SetString@plt>
    19e8:	b	192c <_Py_strhex@plt+0xb1c>
    19ec:	add	x2, sp, #0x48
    19f0:	str	x2, [sp]
    19f4:	adrp	x4, 13000 <PyInit__sha1@@Base+0x115d0>
    19f8:	add	x4, x4, #0x98
    19fc:	add	x4, x4, #0x1a0
    1a00:	mov	w7, #0x0                   	// #0
    1a04:	mov	w6, #0x1                   	// #1
    1a08:	mov	w5, #0x0                   	// #0
    1a0c:	mov	x2, #0x0                   	// #0
    1a10:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1a14:	cbnz	x0, 17dc <_Py_strhex@plt+0x9cc>
    1a18:	b	1928 <_Py_strhex@plt+0xb18>
    1a1c:	mov	x0, x19
    1a20:	bl	d40 <_Py_Dealloc@plt>
    1a24:	ldr	x21, [sp, #48]
    1a28:	b	197c <_Py_strhex@plt+0xb6c>
    1a2c:	nop

0000000000001a30 <PyInit__sha1@@Base>:
    1a30:	stp	x29, x30, [sp, #-48]!
    1a34:	adrp	x1, 12000 <PyInit__sha1@@Base+0x105d0>
    1a38:	mov	x29, sp
    1a3c:	ldr	x1, [x1, #4048]
    1a40:	stp	x19, x20, [sp, #16]
    1a44:	mov	x19, #0x0                   	// #0
    1a48:	str	x21, [sp, #32]
    1a4c:	adrp	x21, 13000 <PyInit__sha1@@Base+0x115d0>
    1a50:	add	x20, x21, #0x98
    1a54:	mov	x0, x20
    1a58:	str	x1, [x20, #8]
    1a5c:	bl	d80 <PyType_Ready@plt>
    1a60:	tbnz	w0, #31, 1a94 <PyInit__sha1@@Base+0x64>
    1a64:	add	x0, x20, #0x1e0
    1a68:	mov	w1, #0x3f5                 	// #1013
    1a6c:	bl	dc0 <PyModule_Create2@plt>
    1a70:	mov	x19, x0
    1a74:	cbz	x0, 1a94 <PyInit__sha1@@Base+0x64>
    1a78:	ldr	x3, [x21, #152]
    1a7c:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1a80:	mov	x2, x20
    1a84:	add	x1, x1, #0xb40
    1a88:	add	x3, x3, #0x1
    1a8c:	str	x3, [x21, #152]
    1a90:	bl	df0 <PyModule_AddObject@plt>
    1a94:	mov	x0, x19
    1a98:	ldp	x19, x20, [sp, #16]
    1a9c:	ldr	x21, [sp, #32]
    1aa0:	ldp	x29, x30, [sp], #48
    1aa4:	ret

Disassembly of section .fini:

0000000000001aa8 <.fini>:
    1aa8:	stp	x29, x30, [sp, #-16]!
    1aac:	mov	x29, sp
    1ab0:	ldp	x29, x30, [sp], #16
    1ab4:	ret
