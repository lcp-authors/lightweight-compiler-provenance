
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//30-systemd-environment-d-generator_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400a08 <_init>:
  400a08:	stp	x29, x30, [sp, #-16]!
  400a0c:	mov	x29, sp
  400a10:	bl	400bd0 <call_weak_fn>
  400a14:	ldp	x29, x30, [sp], #16
  400a18:	ret

Disassembly of section .plt:

0000000000400a20 <__libc_start_main@plt-0x20>:
  400a20:	stp	x16, x30, [sp, #-16]!
  400a24:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a28:	ldr	x17, [x16, #3928]
  400a2c:	add	x16, x16, #0xf58
  400a30:	br	x17
  400a34:	nop
  400a38:	nop
  400a3c:	nop

0000000000400a40 <__libc_start_main@plt>:
  400a40:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a44:	ldr	x17, [x16, #3936]
  400a48:	add	x16, x16, #0xf60
  400a4c:	br	x17

0000000000400a50 <abort@plt>:
  400a50:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a54:	ldr	x17, [x16, #3944]
  400a58:	add	x16, x16, #0xf68
  400a5c:	br	x17

0000000000400a60 <__gmon_start__@plt>:
  400a60:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a64:	ldr	x17, [x16, #3952]
  400a68:	add	x16, x16, #0xf70
  400a6c:	br	x17

0000000000400a70 <log_parse_environment_realm@plt>:
  400a70:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a74:	ldr	x17, [x16, #3960]
  400a78:	add	x16, x16, #0xf78
  400a7c:	br	x17

0000000000400a80 <log_open@plt>:
  400a80:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a84:	ldr	x17, [x16, #3968]
  400a88:	add	x16, x16, #0xf80
  400a8c:	br	x17

0000000000400a90 <log_get_max_level_realm@plt>:
  400a90:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400a94:	ldr	x17, [x16, #3976]
  400a98:	add	x16, x16, #0xf88
  400a9c:	br	x17

0000000000400aa0 <log_internal_realm@plt>:
  400aa0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400aa4:	ldr	x17, [x16, #3984]
  400aa8:	add	x16, x16, #0xf90
  400aac:	br	x17

0000000000400ab0 <strv_new_internal@plt>:
  400ab0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400ab4:	ldr	x17, [x16, #3992]
  400ab8:	add	x16, x16, #0xf98
  400abc:	br	x17

0000000000400ac0 <sd_path_home@plt>:
  400ac0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400ac4:	ldr	x17, [x16, #4000]
  400ac8:	add	x16, x16, #0xfa0
  400acc:	br	x17

0000000000400ad0 <strv_extend_front@plt>:
  400ad0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400ad4:	ldr	x17, [x16, #4008]
  400ad8:	add	x16, x16, #0xfa8
  400adc:	br	x17

0000000000400ae0 <free@plt>:
  400ae0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400ae4:	ldr	x17, [x16, #4016]
  400ae8:	add	x16, x16, #0xfb0
  400aec:	br	x17

0000000000400af0 <strv_free@plt>:
  400af0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400af4:	ldr	x17, [x16, #4024]
  400af8:	add	x16, x16, #0xfb8
  400afc:	br	x17

0000000000400b00 <conf_files_list_strv@plt>:
  400b00:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b04:	ldr	x17, [x16, #4032]
  400b08:	add	x16, x16, #0xfc0
  400b0c:	br	x17

0000000000400b10 <merge_env_file@plt>:
  400b10:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b14:	ldr	x17, [x16, #4040]
  400b18:	add	x16, x16, #0xfc8
  400b1c:	br	x17

0000000000400b20 <strchr@plt>:
  400b20:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b24:	ldr	x17, [x16, #4048]
  400b28:	add	x16, x16, #0xfd0
  400b2c:	br	x17

0000000000400b30 <shell_maybe_quote@plt>:
  400b30:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b34:	ldr	x17, [x16, #4056]
  400b38:	add	x16, x16, #0xfd8
  400b3c:	br	x17

0000000000400b40 <printf@plt>:
  400b40:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b44:	ldr	x17, [x16, #4064]
  400b48:	add	x16, x16, #0xfe0
  400b4c:	br	x17

0000000000400b50 <log_oom_internal@plt>:
  400b50:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b54:	ldr	x17, [x16, #4072]
  400b58:	add	x16, x16, #0xfe8
  400b5c:	br	x17

0000000000400b60 <strv_join_prefix@plt>:
  400b60:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b64:	ldr	x17, [x16, #4080]
  400b68:	add	x16, x16, #0xff0
  400b6c:	br	x17

0000000000400b70 <log_assert_failed_realm@plt>:
  400b70:	adrp	x16, 41f000 <__FRAME_END__+0x1dcd8>
  400b74:	ldr	x17, [x16, #4088]
  400b78:	add	x16, x16, #0xff8
  400b7c:	br	x17

Disassembly of section .text:

0000000000400b80 <_start>:
  400b80:	mov	x29, #0x0                   	// #0
  400b84:	mov	x30, #0x0                   	// #0
  400b88:	mov	x5, x0
  400b8c:	ldr	x1, [sp]
  400b90:	add	x2, sp, #0x8
  400b94:	mov	x6, sp
  400b98:	movz	x0, #0x0, lsl #48
  400b9c:	movk	x0, #0x0, lsl #32
  400ba0:	movk	x0, #0x40, lsl #16
  400ba4:	movk	x0, #0xc8c
  400ba8:	movz	x3, #0x0, lsl #48
  400bac:	movk	x3, #0x0, lsl #32
  400bb0:	movk	x3, #0x40, lsl #16
  400bb4:	movk	x3, #0x1020
  400bb8:	movz	x4, #0x0, lsl #48
  400bbc:	movk	x4, #0x0, lsl #32
  400bc0:	movk	x4, #0x40, lsl #16
  400bc4:	movk	x4, #0x10a0
  400bc8:	bl	400a40 <__libc_start_main@plt>
  400bcc:	bl	400a50 <abort@plt>

0000000000400bd0 <call_weak_fn>:
  400bd0:	adrp	x0, 41f000 <__FRAME_END__+0x1dcd8>
  400bd4:	ldr	x0, [x0, #3904]
  400bd8:	cbz	x0, 400be0 <call_weak_fn+0x10>
  400bdc:	b	400a60 <__gmon_start__@plt>
  400be0:	ret
  400be4:	udf	#0

0000000000400be8 <deregister_tm_clones>:
  400be8:	adrp	x0, 420000 <completed.8445>
  400bec:	add	x0, x0, #0x0
  400bf0:	adrp	x1, 420000 <completed.8445>
  400bf4:	add	x1, x1, #0x0
  400bf8:	cmp	x1, x0
  400bfc:	b.eq	400c14 <deregister_tm_clones+0x2c>  // b.none
  400c00:	adrp	x1, 401000 <main+0x374>
  400c04:	ldr	x1, [x1, #184]
  400c08:	cbz	x1, 400c14 <deregister_tm_clones+0x2c>
  400c0c:	mov	x16, x1
  400c10:	br	x16
  400c14:	ret

0000000000400c18 <register_tm_clones>:
  400c18:	adrp	x0, 420000 <completed.8445>
  400c1c:	add	x0, x0, #0x0
  400c20:	adrp	x1, 420000 <completed.8445>
  400c24:	add	x1, x1, #0x0
  400c28:	sub	x1, x1, x0
  400c2c:	lsr	x2, x1, #63
  400c30:	add	x1, x2, x1, asr #3
  400c34:	cmp	xzr, x1, asr #1
  400c38:	asr	x1, x1, #1
  400c3c:	b.eq	400c54 <register_tm_clones+0x3c>  // b.none
  400c40:	adrp	x2, 401000 <main+0x374>
  400c44:	ldr	x2, [x2, #192]
  400c48:	cbz	x2, 400c54 <register_tm_clones+0x3c>
  400c4c:	mov	x16, x2
  400c50:	br	x16
  400c54:	ret

0000000000400c58 <__do_global_dtors_aux>:
  400c58:	stp	x29, x30, [sp, #-32]!
  400c5c:	mov	x29, sp
  400c60:	str	x19, [sp, #16]
  400c64:	adrp	x19, 420000 <completed.8445>
  400c68:	ldrb	w0, [x19]
  400c6c:	cbnz	w0, 400c7c <__do_global_dtors_aux+0x24>
  400c70:	bl	400be8 <deregister_tm_clones>
  400c74:	mov	w0, #0x1                   	// #1
  400c78:	strb	w0, [x19]
  400c7c:	ldr	x19, [sp, #16]
  400c80:	ldp	x29, x30, [sp], #32
  400c84:	ret

0000000000400c88 <frame_dummy>:
  400c88:	b	400c18 <register_tm_clones>

0000000000400c8c <main>:
  400c8c:	sub	sp, sp, #0x60
  400c90:	stp	x20, x19, [sp, #80]
  400c94:	mov	w19, w0
  400c98:	mov	w0, wzr
  400c9c:	stp	x29, x30, [sp, #32]
  400ca0:	stp	x24, x23, [sp, #48]
  400ca4:	stp	x22, x21, [sp, #64]
  400ca8:	add	x29, sp, #0x20
  400cac:	bl	400a70 <log_parse_environment_realm@plt>
  400cb0:	bl	400a80 <log_open@plt>
  400cb4:	cmp	w19, #0x2
  400cb8:	b.lt	400cfc <main+0x70>  // b.tstop
  400cbc:	mov	w0, wzr
  400cc0:	bl	400a90 <log_get_max_level_realm@plt>
  400cc4:	cmp	w0, #0x3
  400cc8:	b.lt	400d90 <main+0x104>  // b.tstop
  400ccc:	adrp	x2, 401000 <main+0x374>
  400cd0:	adrp	x4, 401000 <main+0x374>
  400cd4:	adrp	x5, 401000 <main+0x374>
  400cd8:	add	x2, x2, #0xcb
  400cdc:	add	x4, x4, #0x101
  400ce0:	add	x5, x5, #0x106
  400ce4:	mov	w0, #0x3                   	// #3
  400ce8:	mov	w3, #0x5a                  	// #90
  400cec:	mov	w1, wzr
  400cf0:	bl	400aa0 <log_internal_realm@plt>
  400cf4:	mov	w0, #0x1                   	// #1
  400cf8:	b	400f7c <main+0x2f0>
  400cfc:	adrp	x0, 401000 <main+0x374>
  400d00:	adrp	x1, 401000 <main+0x374>
  400d04:	adrp	x2, 401000 <main+0x374>
  400d08:	adrp	x3, 401000 <main+0x374>
  400d0c:	add	x0, x0, #0x18f
  400d10:	add	x1, x1, #0x1a2
  400d14:	add	x2, x2, #0x1b5
  400d18:	add	x3, x3, #0x1d2
  400d1c:	mov	x4, xzr
  400d20:	mov	x5, xzr
  400d24:	stp	xzr, xzr, [sp]
  400d28:	str	xzr, [sp, #16]
  400d2c:	bl	400ab0 <strv_new_internal@plt>
  400d30:	stur	x0, [x29, #-8]
  400d34:	cbz	x0, 400ec8 <main+0x23c>
  400d38:	adrp	x1, 401000 <main+0x374>
  400d3c:	add	x1, x1, #0x1e9
  400d40:	add	x2, sp, #0x10
  400d44:	mov	w0, #0x14                  	// #20
  400d48:	bl	400ac0 <sd_path_home@plt>
  400d4c:	tbnz	w0, #31, 400d98 <main+0x10c>
  400d50:	ldr	x1, [sp, #16]
  400d54:	sub	x0, x29, #0x8
  400d58:	bl	400ad0 <strv_extend_front@plt>
  400d5c:	tbnz	w0, #31, 400d98 <main+0x10c>
  400d60:	mov	w0, wzr
  400d64:	bl	400a90 <log_get_max_level_realm@plt>
  400d68:	cmp	w0, #0x7
  400d6c:	b.ge	400f94 <main+0x308>  // b.tcont
  400d70:	ldur	x19, [x29, #-8]
  400d74:	mov	w20, wzr
  400d78:	stur	xzr, [x29, #-8]
  400d7c:	ldr	x0, [sp, #16]
  400d80:	bl	400ae0 <free@plt>
  400d84:	ldur	x0, [x29, #-8]
  400d88:	cbnz	x0, 400db0 <main+0x124>
  400d8c:	b	400db4 <main+0x128>
  400d90:	mov	w0, #0x1                   	// #1
  400d94:	b	400f7c <main+0x2f0>
  400d98:	mov	w20, w0
  400d9c:	mov	x19, xzr
  400da0:	ldr	x0, [sp, #16]
  400da4:	bl	400ae0 <free@plt>
  400da8:	ldur	x0, [x29, #-8]
  400dac:	cbz	x0, 400db4 <main+0x128>
  400db0:	bl	400af0 <strv_free@plt>
  400db4:	tbnz	w20, #31, 400f18 <main+0x28c>
  400db8:	adrp	x1, 401000 <main+0x374>
  400dbc:	add	x1, x1, #0x148
  400dc0:	add	x0, sp, #0x8
  400dc4:	mov	x2, xzr
  400dc8:	mov	w3, wzr
  400dcc:	mov	x4, x19
  400dd0:	bl	400b00 <conf_files_list_strv@plt>
  400dd4:	tbnz	w0, #31, 400f14 <main+0x288>
  400dd8:	ldr	x8, [sp, #8]
  400ddc:	cbz	x8, 400e58 <main+0x1cc>
  400de0:	ldr	x23, [x8]
  400de4:	cbz	x23, 400e58 <main+0x1cc>
  400de8:	adrp	x20, 401000 <main+0x374>
  400dec:	adrp	x21, 401000 <main+0x374>
  400df0:	adrp	x22, 401000 <main+0x374>
  400df4:	add	x24, x8, #0x8
  400df8:	add	x20, x20, #0xcb
  400dfc:	add	x21, x21, #0x14e
  400e00:	add	x22, x22, #0x15d
  400e04:	mov	w0, wzr
  400e08:	bl	400a90 <log_get_max_level_realm@plt>
  400e0c:	cmp	w0, #0x7
  400e10:	b.lt	400e38 <main+0x1ac>  // b.tstop
  400e14:	mov	w0, #0x7                   	// #7
  400e18:	mov	w3, #0x3b                  	// #59
  400e1c:	mov	w1, wzr
  400e20:	mov	x2, x20
  400e24:	mov	x4, x21
  400e28:	mov	x5, x22
  400e2c:	mov	x6, x23
  400e30:	bl	400aa0 <log_internal_realm@plt>
  400e34:	ldur	x23, [x24, #-8]
  400e38:	mov	x0, sp
  400e3c:	mov	x1, xzr
  400e40:	mov	x2, x23
  400e44:	bl	400b10 <merge_env_file@plt>
  400e48:	cmn	w0, #0xc
  400e4c:	b.eq	400eec <main+0x260>  // b.none
  400e50:	ldr	x23, [x24], #8
  400e54:	cbnz	x23, 400e04 <main+0x178>
  400e58:	ldr	x0, [sp]
  400e5c:	cbz	x0, 400ee4 <main+0x258>
  400e60:	ldr	x8, [x0]
  400e64:	cbz	x8, 400ef4 <main+0x268>
  400e68:	adrp	x20, 401000 <main+0x374>
  400e6c:	add	x23, x0, #0x8
  400e70:	add	x20, x20, #0x186
  400e74:	mov	w1, #0x3d                  	// #61
  400e78:	mov	x0, x8
  400e7c:	bl	400b20 <strchr@plt>
  400e80:	cbz	x0, 401000 <main+0x374>
  400e84:	mov	x21, x0
  400e88:	add	x0, x0, #0x1
  400e8c:	mov	w1, #0x1                   	// #1
  400e90:	bl	400b30 <shell_maybe_quote@plt>
  400e94:	cbz	x0, 400efc <main+0x270>
  400e98:	ldur	x2, [x23, #-8]
  400e9c:	mov	x22, x0
  400ea0:	mov	x0, x20
  400ea4:	mov	x3, x22
  400ea8:	sub	w1, w21, w2
  400eac:	bl	400b40 <printf@plt>
  400eb0:	mov	x0, x22
  400eb4:	bl	400ae0 <free@plt>
  400eb8:	ldr	x8, [x23], #8
  400ebc:	cbnz	x8, 400e74 <main+0x1e8>
  400ec0:	mov	w20, wzr
  400ec4:	b	400f18 <main+0x28c>
  400ec8:	mov	x19, xzr
  400ecc:	mov	w20, #0xfffffff4            	// #-12
  400ed0:	ldr	x0, [sp, #16]
  400ed4:	bl	400ae0 <free@plt>
  400ed8:	ldur	x0, [x29, #-8]
  400edc:	cbnz	x0, 400db0 <main+0x124>
  400ee0:	b	400db4 <main+0x128>
  400ee4:	mov	w20, wzr
  400ee8:	b	400f24 <main+0x298>
  400eec:	mov	w20, #0xfffffff4            	// #-12
  400ef0:	b	400f18 <main+0x28c>
  400ef4:	mov	w20, wzr
  400ef8:	b	400f20 <main+0x294>
  400efc:	adrp	x1, 401000 <main+0x374>
  400f00:	adrp	x3, 401000 <main+0x374>
  400f04:	add	x1, x1, #0xcb
  400f08:	add	x3, x3, #0x14e
  400f0c:	mov	w2, #0x4b                  	// #75
  400f10:	bl	400b50 <log_oom_internal@plt>
  400f14:	mov	w20, w0
  400f18:	ldr	x0, [sp]
  400f1c:	cbz	x0, 400f24 <main+0x298>
  400f20:	bl	400af0 <strv_free@plt>
  400f24:	ldr	x0, [sp, #8]
  400f28:	cbz	x0, 400f30 <main+0x2a4>
  400f2c:	bl	400af0 <strv_free@plt>
  400f30:	cbz	x19, 400f3c <main+0x2b0>
  400f34:	mov	x0, x19
  400f38:	bl	400af0 <strv_free@plt>
  400f3c:	tbz	w20, #31, 400f78 <main+0x2ec>
  400f40:	mov	w0, wzr
  400f44:	bl	400a90 <log_get_max_level_realm@plt>
  400f48:	cmp	w0, #0x3
  400f4c:	b.lt	400f78 <main+0x2ec>  // b.tstop
  400f50:	adrp	x2, 401000 <main+0x374>
  400f54:	adrp	x4, 401000 <main+0x374>
  400f58:	adrp	x5, 401000 <main+0x374>
  400f5c:	add	x2, x2, #0xcb
  400f60:	add	x4, x4, #0x101
  400f64:	add	x5, x5, #0x127
  400f68:	mov	w0, #0x3                   	// #3
  400f6c:	mov	w3, #0x60                  	// #96
  400f70:	mov	w1, w20
  400f74:	bl	400aa0 <log_internal_realm@plt>
  400f78:	lsr	w0, w20, #31
  400f7c:	ldp	x20, x19, [sp, #80]
  400f80:	ldp	x22, x21, [sp, #64]
  400f84:	ldp	x24, x23, [sp, #48]
  400f88:	ldp	x29, x30, [sp, #32]
  400f8c:	add	sp, sp, #0x60
  400f90:	ret
  400f94:	ldur	x0, [x29, #-8]
  400f98:	adrp	x1, 401000 <main+0x374>
  400f9c:	add	x1, x1, #0x1f7
  400fa0:	mov	x2, xzr
  400fa4:	bl	400b60 <strv_join_prefix@plt>
  400fa8:	mov	x19, x0
  400fac:	mov	w0, wzr
  400fb0:	bl	400a90 <log_get_max_level_realm@plt>
  400fb4:	cmp	w0, #0x7
  400fb8:	b.lt	400ff4 <main+0x368>  // b.tstop
  400fbc:	adrp	x8, 401000 <main+0x374>
  400fc0:	add	x8, x8, #0x24b
  400fc4:	cmp	x19, #0x0
  400fc8:	adrp	x2, 401000 <main+0x374>
  400fcc:	adrp	x4, 401000 <main+0x374>
  400fd0:	adrp	x5, 401000 <main+0x374>
  400fd4:	csel	x6, x8, x19, eq  // eq = none
  400fd8:	add	x2, x2, #0xcb
  400fdc:	add	x4, x4, #0x1fa
  400fe0:	add	x5, x5, #0x20b
  400fe4:	mov	w0, #0x7                   	// #7
  400fe8:	mov	w3, #0x23                  	// #35
  400fec:	mov	w1, wzr
  400ff0:	bl	400aa0 <log_internal_realm@plt>
  400ff4:	mov	x0, x19
  400ff8:	bl	400ae0 <free@plt>
  400ffc:	b	400d70 <main+0xe4>
  401000:	adrp	x1, 401000 <main+0x374>
  401004:	adrp	x2, 401000 <main+0x374>
  401008:	adrp	x4, 401000 <main+0x374>
  40100c:	add	x1, x1, #0x16b
  401010:	add	x2, x2, #0xcb
  401014:	add	x4, x4, #0x16d
  401018:	mov	w3, #0x47                  	// #71
  40101c:	bl	400b70 <log_assert_failed_realm@plt>

0000000000401020 <__libc_csu_init>:
  401020:	stp	x29, x30, [sp, #-64]!
  401024:	mov	x29, sp
  401028:	stp	x19, x20, [sp, #16]
  40102c:	adrp	x20, 41f000 <__FRAME_END__+0x1dcd8>
  401030:	add	x20, x20, #0xd18
  401034:	stp	x21, x22, [sp, #32]
  401038:	adrp	x21, 41f000 <__FRAME_END__+0x1dcd8>
  40103c:	add	x21, x21, #0xd10
  401040:	sub	x20, x20, x21
  401044:	mov	w22, w0
  401048:	stp	x23, x24, [sp, #48]
  40104c:	mov	x23, x1
  401050:	mov	x24, x2
  401054:	bl	400a08 <_init>
  401058:	cmp	xzr, x20, asr #3
  40105c:	b.eq	401088 <__libc_csu_init+0x68>  // b.none
  401060:	asr	x20, x20, #3
  401064:	mov	x19, #0x0                   	// #0
  401068:	ldr	x3, [x21, x19, lsl #3]
  40106c:	mov	x2, x24
  401070:	add	x19, x19, #0x1
  401074:	mov	x1, x23
  401078:	mov	w0, w22
  40107c:	blr	x3
  401080:	cmp	x20, x19
  401084:	b.ne	401068 <__libc_csu_init+0x48>  // b.any
  401088:	ldp	x19, x20, [sp, #16]
  40108c:	ldp	x21, x22, [sp, #32]
  401090:	ldp	x23, x24, [sp, #48]
  401094:	ldp	x29, x30, [sp], #64
  401098:	ret
  40109c:	nop

00000000004010a0 <__libc_csu_fini>:
  4010a0:	ret

Disassembly of section .fini:

00000000004010a4 <_fini>:
  4010a4:	stp	x29, x30, [sp, #-16]!
  4010a8:	mov	x29, sp
  4010ac:	ldp	x29, x30, [sp], #16
  4010b0:	ret
