
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpc.so.3.1.0_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004a20 <.init>:
    4a20:	stp	x29, x30, [sp, #-16]!
    4a24:	mov	x29, sp
    4a28:	bl	56d0 <mpfr_get_emin_min@plt+0x10>
    4a2c:	ldp	x29, x30, [sp], #16
    4a30:	ret

Disassembly of section .plt:

0000000000004a40 <mpfr_set_underflow@plt-0x20>:
    4a40:	stp	x16, x30, [sp, #-16]!
    4a44:	adrp	x16, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    4a48:	ldr	x17, [x16, #4088]
    4a4c:	add	x16, x16, #0xff8
    4a50:	br	x17
    4a54:	nop
    4a58:	nop
    4a5c:	nop

0000000000004a60 <mpfr_set_underflow@plt>:
    4a60:	adrp	x16, 2f000 <mpfr_set_underflow>
    4a64:	ldr	x17, [x16]
    4a68:	add	x16, x16, #0x0
    4a6c:	br	x17

0000000000004a70 <memcpy@plt>:
    4a70:	adrp	x16, 2f000 <mpfr_set_underflow>
    4a74:	ldr	x17, [x16, #8]
    4a78:	add	x16, x16, #0x8
    4a7c:	br	x17

0000000000004a80 <__gmpz_get_si@plt>:
    4a80:	adrp	x16, 2f000 <mpfr_set_underflow>
    4a84:	ldr	x17, [x16, #16]
    4a88:	add	x16, x16, #0x10
    4a8c:	br	x17

0000000000004a90 <mpfr_set_ld@plt>:
    4a90:	adrp	x16, 2f000 <mpfr_set_underflow>
    4a94:	ldr	x17, [x16, #24]
    4a98:	add	x16, x16, #0x18
    4a9c:	br	x17

0000000000004aa0 <mpfr_mul_ui@plt>:
    4aa0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4aa4:	ldr	x17, [x16, #32]
    4aa8:	add	x16, x16, #0x20
    4aac:	br	x17

0000000000004ab0 <mpfr_mul_q@plt>:
    4ab0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ab4:	ldr	x17, [x16, #40]
    4ab8:	add	x16, x16, #0x28
    4abc:	br	x17

0000000000004ac0 <mpfr_set_si_2exp@plt>:
    4ac0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ac4:	ldr	x17, [x16, #48]
    4ac8:	add	x16, x16, #0x30
    4acc:	br	x17

0000000000004ad0 <__gmpz_scan1@plt>:
    4ad0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ad4:	ldr	x17, [x16, #56]
    4ad8:	add	x16, x16, #0x38
    4adc:	br	x17

0000000000004ae0 <strlen@plt>:
    4ae0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ae4:	ldr	x17, [x16, #64]
    4ae8:	add	x16, x16, #0x40
    4aec:	br	x17

0000000000004af0 <mpc_clear@plt>:
    4af0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4af4:	ldr	x17, [x16, #72]
    4af8:	add	x16, x16, #0x48
    4afc:	br	x17

0000000000004b00 <mpfr_cosh@plt>:
    4b00:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b04:	ldr	x17, [x16, #80]
    4b08:	add	x16, x16, #0x50
    4b0c:	br	x17

0000000000004b10 <mpfr_tanh@plt>:
    4b10:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b14:	ldr	x17, [x16, #88]
    4b18:	add	x16, x16, #0x58
    4b1c:	br	x17

0000000000004b20 <mpfr_set_nan@plt>:
    4b20:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b24:	ldr	x17, [x16, #96]
    4b28:	add	x16, x16, #0x60
    4b2c:	br	x17

0000000000004b30 <mpfr_clear_overflow@plt>:
    4b30:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b34:	ldr	x17, [x16, #104]
    4b38:	add	x16, x16, #0x68
    4b3c:	br	x17

0000000000004b40 <mpfr_sub@plt>:
    4b40:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b44:	ldr	x17, [x16, #112]
    4b48:	add	x16, x16, #0x70
    4b4c:	br	x17

0000000000004b50 <mpfr_mul_2si@plt>:
    4b50:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b54:	ldr	x17, [x16, #120]
    4b58:	add	x16, x16, #0x78
    4b5c:	br	x17

0000000000004b60 <mpfr_const_pi@plt>:
    4b60:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b64:	ldr	x17, [x16, #128]
    4b68:	add	x16, x16, #0x80
    4b6c:	br	x17

0000000000004b70 <mpfr_fmms@plt>:
    4b70:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b74:	ldr	x17, [x16, #136]
    4b78:	add	x16, x16, #0x88
    4b7c:	br	x17

0000000000004b80 <mpfr_init@plt>:
    4b80:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b84:	ldr	x17, [x16, #144]
    4b88:	add	x16, x16, #0x90
    4b8c:	br	x17

0000000000004b90 <mpfr_tan@plt>:
    4b90:	adrp	x16, 2f000 <mpfr_set_underflow>
    4b94:	ldr	x17, [x16, #152]
    4b98:	add	x16, x16, #0x98
    4b9c:	br	x17

0000000000004ba0 <mpfr_strtofr@plt>:
    4ba0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ba4:	ldr	x17, [x16, #160]
    4ba8:	add	x16, x16, #0xa0
    4bac:	br	x17

0000000000004bb0 <__gmpz_sub_ui@plt>:
    4bb0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4bb4:	ldr	x17, [x16, #168]
    4bb8:	add	x16, x16, #0xa8
    4bbc:	br	x17

0000000000004bc0 <__gmp_get_memory_functions@plt>:
    4bc0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4bc4:	ldr	x17, [x16, #176]
    4bc8:	add	x16, x16, #0xb0
    4bcc:	br	x17

0000000000004bd0 <__gmpz_sqrt@plt>:
    4bd0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4bd4:	ldr	x17, [x16, #184]
    4bd8:	add	x16, x16, #0xb8
    4bdc:	br	x17

0000000000004be0 <mpfr_set_erangeflag@plt>:
    4be0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4be4:	ldr	x17, [x16, #192]
    4be8:	add	x16, x16, #0xc0
    4bec:	br	x17

0000000000004bf0 <__gmpz_set_ui@plt>:
    4bf0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4bf4:	ldr	x17, [x16, #200]
    4bf8:	add	x16, x16, #0xc8
    4bfc:	br	x17

0000000000004c00 <__cxa_finalize@plt>:
    4c00:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c04:	ldr	x17, [x16, #208]
    4c08:	add	x16, x16, #0xd0
    4c0c:	br	x17

0000000000004c10 <sprintf@plt>:
    4c10:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c14:	ldr	x17, [x16, #216]
    4c18:	add	x16, x16, #0xd8
    4c1c:	br	x17

0000000000004c20 <mpc_sqrt@plt>:
    4c20:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c24:	ldr	x17, [x16, #224]
    4c28:	add	x16, x16, #0xe0
    4c2c:	br	x17

0000000000004c30 <mpfr_get_d@plt>:
    4c30:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c34:	ldr	x17, [x16, #232]
    4c38:	add	x16, x16, #0xe8
    4c3c:	br	x17

0000000000004c40 <mpfr_set_f@plt>:
    4c40:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c44:	ldr	x17, [x16, #240]
    4c48:	add	x16, x16, #0xf0
    4c4c:	br	x17

0000000000004c50 <mpfr_mul@plt>:
    4c50:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c54:	ldr	x17, [x16, #248]
    4c58:	add	x16, x16, #0xf8
    4c5c:	br	x17

0000000000004c60 <mpfr_neg@plt>:
    4c60:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c64:	ldr	x17, [x16, #256]
    4c68:	add	x16, x16, #0x100
    4c6c:	br	x17

0000000000004c70 <mpfr_pow@plt>:
    4c70:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c74:	ldr	x17, [x16, #264]
    4c78:	add	x16, x16, #0x108
    4c7c:	br	x17

0000000000004c80 <mpfr_nextbelow@plt>:
    4c80:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c84:	ldr	x17, [x16, #272]
    4c88:	add	x16, x16, #0x110
    4c8c:	br	x17

0000000000004c90 <__gmpz_sub@plt>:
    4c90:	adrp	x16, 2f000 <mpfr_set_underflow>
    4c94:	ldr	x17, [x16, #280]
    4c98:	add	x16, x16, #0x118
    4c9c:	br	x17

0000000000004ca0 <mpfr_get_z@plt>:
    4ca0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ca4:	ldr	x17, [x16, #288]
    4ca8:	add	x16, x16, #0x120
    4cac:	br	x17

0000000000004cb0 <mpfr_sinh_cosh@plt>:
    4cb0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4cb4:	ldr	x17, [x16, #296]
    4cb8:	add	x16, x16, #0x128
    4cbc:	br	x17

0000000000004cc0 <mpc_alloc_str@plt>:
    4cc0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4cc4:	ldr	x17, [x16, #304]
    4cc8:	add	x16, x16, #0x130
    4ccc:	br	x17

0000000000004cd0 <mpc_set_prec@plt>:
    4cd0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4cd4:	ldr	x17, [x16, #312]
    4cd8:	add	x16, x16, #0x138
    4cdc:	br	x17

0000000000004ce0 <mpfr_set_exp@plt>:
    4ce0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ce4:	ldr	x17, [x16, #320]
    4ce8:	add	x16, x16, #0x140
    4cec:	br	x17

0000000000004cf0 <mpc_tan@plt>:
    4cf0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4cf4:	ldr	x17, [x16, #328]
    4cf8:	add	x16, x16, #0x148
    4cfc:	br	x17

0000000000004d00 <mpfr_set_d@plt>:
    4d00:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d04:	ldr	x17, [x16, #336]
    4d08:	add	x16, x16, #0x150
    4d0c:	br	x17

0000000000004d10 <__gmpz_divisible_2exp_p@plt>:
    4d10:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d14:	ldr	x17, [x16, #344]
    4d18:	add	x16, x16, #0x158
    4d1c:	br	x17

0000000000004d20 <__gmpz_fits_slong_p@plt>:
    4d20:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d24:	ldr	x17, [x16, #352]
    4d28:	add	x16, x16, #0x160
    4d2c:	br	x17

0000000000004d30 <localeconv@plt>:
    4d30:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d34:	ldr	x17, [x16, #360]
    4d38:	add	x16, x16, #0x168
    4d3c:	br	x17

0000000000004d40 <mpfr_set_prec@plt>:
    4d40:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d44:	ldr	x17, [x16, #368]
    4d48:	add	x16, x16, #0x170
    4d4c:	br	x17

0000000000004d50 <mpfr_fmma@plt>:
    4d50:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d54:	ldr	x17, [x16, #376]
    4d58:	add	x16, x16, #0x178
    4d5c:	br	x17

0000000000004d60 <mpfr_atan2@plt>:
    4d60:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d64:	ldr	x17, [x16, #384]
    4d68:	add	x16, x16, #0x180
    4d6c:	br	x17

0000000000004d70 <mpfr_cmp_ui_2exp@plt>:
    4d70:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d74:	ldr	x17, [x16, #392]
    4d78:	add	x16, x16, #0x188
    4d7c:	br	x17

0000000000004d80 <__gmpz_divexact@plt>:
    4d80:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d84:	ldr	x17, [x16, #400]
    4d88:	add	x16, x16, #0x190
    4d8c:	br	x17

0000000000004d90 <mpc_add@plt>:
    4d90:	adrp	x16, 2f000 <mpfr_set_underflow>
    4d94:	ldr	x17, [x16, #408]
    4d98:	add	x16, x16, #0x198
    4d9c:	br	x17

0000000000004da0 <mpc_set_ui@plt>:
    4da0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4da4:	ldr	x17, [x16, #416]
    4da8:	add	x16, x16, #0x1a0
    4dac:	br	x17

0000000000004db0 <mpc_init2@plt>:
    4db0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4db4:	ldr	x17, [x16, #424]
    4db8:	add	x16, x16, #0x1a8
    4dbc:	br	x17

0000000000004dc0 <__gmpz_set@plt>:
    4dc0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4dc4:	ldr	x17, [x16, #432]
    4dc8:	add	x16, x16, #0x1b0
    4dcc:	br	x17

0000000000004dd0 <mpfr_set_zero@plt>:
    4dd0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4dd4:	ldr	x17, [x16, #440]
    4dd8:	add	x16, x16, #0x1b8
    4ddc:	br	x17

0000000000004de0 <mpc_ceil_log2@plt>:
    4de0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4de4:	ldr	x17, [x16, #448]
    4de8:	add	x16, x16, #0x1c0
    4dec:	br	x17

0000000000004df0 <__gmpz_tstbit@plt>:
    4df0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4df4:	ldr	x17, [x16, #456]
    4df8:	add	x16, x16, #0x1c8
    4dfc:	br	x17

0000000000004e00 <__gmpz_mul@plt>:
    4e00:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e04:	ldr	x17, [x16, #464]
    4e08:	add	x16, x16, #0x1d0
    4e0c:	br	x17

0000000000004e10 <mpc_set_ld_ld@plt>:
    4e10:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e14:	ldr	x17, [x16, #472]
    4e18:	add	x16, x16, #0x1d8
    4e1c:	br	x17

0000000000004e20 <__gmpz_neg@plt>:
    4e20:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e24:	ldr	x17, [x16, #480]
    4e28:	add	x16, x16, #0x1e0
    4e2c:	br	x17

0000000000004e30 <mpfr_clear@plt>:
    4e30:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e34:	ldr	x17, [x16, #488]
    4e38:	add	x16, x16, #0x1e8
    4e3c:	br	x17

0000000000004e40 <__gmpz_perfect_square_p@plt>:
    4e40:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e44:	ldr	x17, [x16, #496]
    4e48:	add	x16, x16, #0x1f0
    4e4c:	br	x17

0000000000004e50 <__gmpfr_set_sj@plt>:
    4e50:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e54:	ldr	x17, [x16, #504]
    4e58:	add	x16, x16, #0x1f8
    4e5c:	br	x17

0000000000004e60 <mpfr_log@plt>:
    4e60:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e64:	ldr	x17, [x16, #512]
    4e68:	add	x16, x16, #0x200
    4e6c:	br	x17

0000000000004e70 <mpfr_atanh@plt>:
    4e70:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e74:	ldr	x17, [x16, #520]
    4e78:	add	x16, x16, #0x208
    4e7c:	br	x17

0000000000004e80 <__gmpz_swap@plt>:
    4e80:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e84:	ldr	x17, [x16, #528]
    4e88:	add	x16, x16, #0x210
    4e8c:	br	x17

0000000000004e90 <mpc_log@plt>:
    4e90:	adrp	x16, 2f000 <mpfr_set_underflow>
    4e94:	ldr	x17, [x16, #536]
    4e98:	add	x16, x16, #0x218
    4e9c:	br	x17

0000000000004ea0 <mpfr_asinh@plt>:
    4ea0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ea4:	ldr	x17, [x16, #544]
    4ea8:	add	x16, x16, #0x220
    4eac:	br	x17

0000000000004eb0 <mpc_fix_inf@plt>:
    4eb0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4eb4:	ldr	x17, [x16, #552]
    4eb8:	add	x16, x16, #0x228
    4ebc:	br	x17

0000000000004ec0 <strcat@plt>:
    4ec0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ec4:	ldr	x17, [x16, #560]
    4ec8:	add	x16, x16, #0x230
    4ecc:	br	x17

0000000000004ed0 <mpc_pow_usi@plt>:
    4ed0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ed4:	ldr	x17, [x16, #568]
    4ed8:	add	x16, x16, #0x238
    4edc:	br	x17

0000000000004ee0 <mpfr_nextabove@plt>:
    4ee0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ee4:	ldr	x17, [x16, #576]
    4ee8:	add	x16, x16, #0x240
    4eec:	br	x17

0000000000004ef0 <__gmpz_fdiv_q_2exp@plt>:
    4ef0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ef4:	ldr	x17, [x16, #584]
    4ef8:	add	x16, x16, #0x248
    4efc:	br	x17

0000000000004f00 <mpfr_clear_underflow@plt>:
    4f00:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f04:	ldr	x17, [x16, #592]
    4f08:	add	x16, x16, #0x250
    4f0c:	br	x17

0000000000004f10 <mpfr_integer_p@plt>:
    4f10:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f14:	ldr	x17, [x16, #600]
    4f18:	add	x16, x16, #0x258
    4f1c:	br	x17

0000000000004f20 <__gmpz_fits_ulong_p@plt>:
    4f20:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f24:	ldr	x17, [x16, #608]
    4f28:	add	x16, x16, #0x260
    4f2c:	br	x17

0000000000004f30 <mpfr_asin@plt>:
    4f30:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f34:	ldr	x17, [x16, #616]
    4f38:	add	x16, x16, #0x268
    4f3c:	br	x17

0000000000004f40 <mpc_set_ld@plt>:
    4f40:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f44:	ldr	x17, [x16, #624]
    4f48:	add	x16, x16, #0x270
    4f4c:	br	x17

0000000000004f50 <mpfr_add@plt>:
    4f50:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f54:	ldr	x17, [x16, #632]
    4f58:	add	x16, x16, #0x278
    4f5c:	br	x17

0000000000004f60 <mpfr_clears@plt>:
    4f60:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f64:	ldr	x17, [x16, #640]
    4f68:	add	x16, x16, #0x280
    4f6c:	br	x17

0000000000004f70 <mpfr_set@plt>:
    4f70:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f74:	ldr	x17, [x16, #648]
    4f78:	add	x16, x16, #0x288
    4f7c:	br	x17

0000000000004f80 <__gmpz_mul_2exp@plt>:
    4f80:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f84:	ldr	x17, [x16, #656]
    4f88:	add	x16, x16, #0x290
    4f8c:	br	x17

0000000000004f90 <mpc_norm@plt>:
    4f90:	adrp	x16, 2f000 <mpfr_set_underflow>
    4f94:	ldr	x17, [x16, #664]
    4f98:	add	x16, x16, #0x298
    4f9c:	br	x17

0000000000004fa0 <mpc_mul_naive@plt>:
    4fa0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4fa4:	ldr	x17, [x16, #672]
    4fa8:	add	x16, x16, #0x2a0
    4fac:	br	x17

0000000000004fb0 <mpfr_set_z@plt>:
    4fb0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4fb4:	ldr	x17, [x16, #680]
    4fb8:	add	x16, x16, #0x2a8
    4fbc:	br	x17

0000000000004fc0 <__gmpz_get_ui@plt>:
    4fc0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4fc4:	ldr	x17, [x16, #688]
    4fc8:	add	x16, x16, #0x2b0
    4fcc:	br	x17

0000000000004fd0 <mpc_mul@plt>:
    4fd0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4fd4:	ldr	x17, [x16, #696]
    4fd8:	add	x16, x16, #0x2b8
    4fdc:	br	x17

0000000000004fe0 <mpfr_add_ui@plt>:
    4fe0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4fe4:	ldr	x17, [x16, #704]
    4fe8:	add	x16, x16, #0x2c0
    4fec:	br	x17

0000000000004ff0 <mpc_set_nan@plt>:
    4ff0:	adrp	x16, 2f000 <mpfr_set_underflow>
    4ff4:	ldr	x17, [x16, #712]
    4ff8:	add	x16, x16, #0x2c8
    4ffc:	br	x17

0000000000005000 <mpc_strtoc@plt>:
    5000:	adrp	x16, 2f000 <mpfr_set_underflow>
    5004:	ldr	x17, [x16, #720]
    5008:	add	x16, x16, #0x2d0
    500c:	br	x17

0000000000005010 <__gmpz_addmul@plt>:
    5010:	adrp	x16, 2f000 <mpfr_set_underflow>
    5014:	ldr	x17, [x16, #728]
    5018:	add	x16, x16, #0x2d8
    501c:	br	x17

0000000000005020 <getc@plt>:
    5020:	adrp	x16, 2f000 <mpfr_set_underflow>
    5024:	ldr	x17, [x16, #736]
    5028:	add	x16, x16, #0x2e0
    502c:	br	x17

0000000000005030 <mpc_sqr@plt>:
    5030:	adrp	x16, 2f000 <mpfr_set_underflow>
    5034:	ldr	x17, [x16, #744]
    5038:	add	x16, x16, #0x2e8
    503c:	br	x17

0000000000005040 <mpfr_mul_2ui@plt>:
    5040:	adrp	x16, 2f000 <mpfr_set_underflow>
    5044:	ldr	x17, [x16, #752]
    5048:	add	x16, x16, #0x2f0
    504c:	br	x17

0000000000005050 <mpc_sin@plt>:
    5050:	adrp	x16, 2f000 <mpfr_set_underflow>
    5054:	ldr	x17, [x16, #760]
    5058:	add	x16, x16, #0x2f8
    505c:	br	x17

0000000000005060 <mpc_conj@plt>:
    5060:	adrp	x16, 2f000 <mpfr_set_underflow>
    5064:	ldr	x17, [x16, #768]
    5068:	add	x16, x16, #0x300
    506c:	br	x17

0000000000005070 <mpfr_ui_div@plt>:
    5070:	adrp	x16, 2f000 <mpfr_set_underflow>
    5074:	ldr	x17, [x16, #776]
    5078:	add	x16, x16, #0x308
    507c:	br	x17

0000000000005080 <mpfr_sinh@plt>:
    5080:	adrp	x16, 2f000 <mpfr_set_underflow>
    5084:	ldr	x17, [x16, #784]
    5088:	add	x16, x16, #0x310
    508c:	br	x17

0000000000005090 <mpc_set_d_d@plt>:
    5090:	adrp	x16, 2f000 <mpfr_set_underflow>
    5094:	ldr	x17, [x16, #792]
    5098:	add	x16, x16, #0x318
    509c:	br	x17

00000000000050a0 <__gmpz_add_ui@plt>:
    50a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    50a4:	ldr	x17, [x16, #800]
    50a8:	add	x16, x16, #0x320
    50ac:	br	x17

00000000000050b0 <__gmpq_clear@plt>:
    50b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    50b4:	ldr	x17, [x16, #808]
    50b8:	add	x16, x16, #0x328
    50bc:	br	x17

00000000000050c0 <__gmon_start__@plt>:
    50c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    50c4:	ldr	x17, [x16, #816]
    50c8:	add	x16, x16, #0x330
    50cc:	br	x17

00000000000050d0 <mpfr_acos@plt>:
    50d0:	adrp	x16, 2f000 <mpfr_set_underflow>
    50d4:	ldr	x17, [x16, #824]
    50d8:	add	x16, x16, #0x338
    50dc:	br	x17

00000000000050e0 <mpfr_cmp_si_2exp@plt>:
    50e0:	adrp	x16, 2f000 <mpfr_set_underflow>
    50e4:	ldr	x17, [x16, #832]
    50e8:	add	x16, x16, #0x340
    50ec:	br	x17

00000000000050f0 <mpc_free_str@plt>:
    50f0:	adrp	x16, 2f000 <mpfr_set_underflow>
    50f4:	ldr	x17, [x16, #840]
    50f8:	add	x16, x16, #0x348
    50fc:	br	x17

0000000000005100 <abort@plt>:
    5100:	adrp	x16, 2f000 <mpfr_set_underflow>
    5104:	ldr	x17, [x16, #848]
    5108:	add	x16, x16, #0x350
    510c:	br	x17

0000000000005110 <mpfr_sqr@plt>:
    5110:	adrp	x16, 2f000 <mpfr_set_underflow>
    5114:	ldr	x17, [x16, #856]
    5118:	add	x16, x16, #0x358
    511c:	br	x17

0000000000005120 <mpc_set_si@plt>:
    5120:	adrp	x16, 2f000 <mpfr_set_underflow>
    5124:	ldr	x17, [x16, #864]
    5128:	add	x16, x16, #0x360
    512c:	br	x17

0000000000005130 <mpfr_div_2si@plt>:
    5130:	adrp	x16, 2f000 <mpfr_set_underflow>
    5134:	ldr	x17, [x16, #872]
    5138:	add	x16, x16, #0x368
    513c:	br	x17

0000000000005140 <mpc_set_ui_ui@plt>:
    5140:	adrp	x16, 2f000 <mpfr_set_underflow>
    5144:	ldr	x17, [x16, #880]
    5148:	add	x16, x16, #0x370
    514c:	br	x17

0000000000005150 <mpfr_cos@plt>:
    5150:	adrp	x16, 2f000 <mpfr_set_underflow>
    5154:	ldr	x17, [x16, #888]
    5158:	add	x16, x16, #0x378
    515c:	br	x17

0000000000005160 <mpfr_get_emin@plt>:
    5160:	adrp	x16, 2f000 <mpfr_set_underflow>
    5164:	ldr	x17, [x16, #896]
    5168:	add	x16, x16, #0x380
    516c:	br	x17

0000000000005170 <mpc_acos@plt>:
    5170:	adrp	x16, 2f000 <mpfr_set_underflow>
    5174:	ldr	x17, [x16, #904]
    5178:	add	x16, x16, #0x388
    517c:	br	x17

0000000000005180 <mpfr_sin@plt>:
    5180:	adrp	x16, 2f000 <mpfr_set_underflow>
    5184:	ldr	x17, [x16, #912]
    5188:	add	x16, x16, #0x390
    518c:	br	x17

0000000000005190 <mpfr_swap@plt>:
    5190:	adrp	x16, 2f000 <mpfr_set_underflow>
    5194:	ldr	x17, [x16, #920]
    5198:	add	x16, x16, #0x398
    519c:	br	x17

00000000000051a0 <mpc_set_z@plt>:
    51a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    51a4:	ldr	x17, [x16, #928]
    51a8:	add	x16, x16, #0x3a0
    51ac:	br	x17

00000000000051b0 <__gmpz_ui_pow_ui@plt>:
    51b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    51b4:	ldr	x17, [x16, #936]
    51b8:	add	x16, x16, #0x3a8
    51bc:	br	x17

00000000000051c0 <mpfr_get_str@plt>:
    51c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    51c4:	ldr	x17, [x16, #944]
    51c8:	add	x16, x16, #0x3b0
    51cc:	br	x17

00000000000051d0 <mpc_fix_zero@plt>:
    51d0:	adrp	x16, 2f000 <mpfr_set_underflow>
    51d4:	ldr	x17, [x16, #952]
    51d8:	add	x16, x16, #0x3b8
    51dc:	br	x17

00000000000051e0 <mpfr_acosh@plt>:
    51e0:	adrp	x16, 2f000 <mpfr_set_underflow>
    51e4:	ldr	x17, [x16, #960]
    51e8:	add	x16, x16, #0x3c0
    51ec:	br	x17

00000000000051f0 <mpfr_sub_ui@plt>:
    51f0:	adrp	x16, 2f000 <mpfr_set_underflow>
    51f4:	ldr	x17, [x16, #968]
    51f8:	add	x16, x16, #0x3c8
    51fc:	br	x17

0000000000005200 <__gmpq_set_ui@plt>:
    5200:	adrp	x16, 2f000 <mpfr_set_underflow>
    5204:	ldr	x17, [x16, #976]
    5208:	add	x16, x16, #0x3d0
    520c:	br	x17

0000000000005210 <mpfr_get_ld@plt>:
    5210:	adrp	x16, 2f000 <mpfr_set_underflow>
    5214:	ldr	x17, [x16, #984]
    5218:	add	x16, x16, #0x3d8
    521c:	br	x17

0000000000005220 <mpfr_set_inf@plt>:
    5220:	adrp	x16, 2f000 <mpfr_set_underflow>
    5224:	ldr	x17, [x16, #992]
    5228:	add	x16, x16, #0x3e0
    522c:	br	x17

0000000000005230 <mpfr_set_ui_2exp@plt>:
    5230:	adrp	x16, 2f000 <mpfr_set_underflow>
    5234:	ldr	x17, [x16, #1000]
    5238:	add	x16, x16, #0x3e8
    523c:	br	x17

0000000000005240 <mpc_sin_cos@plt>:
    5240:	adrp	x16, 2f000 <mpfr_set_underflow>
    5244:	ldr	x17, [x16, #1008]
    5248:	add	x16, x16, #0x3f0
    524c:	br	x17

0000000000005250 <mpfr_div@plt>:
    5250:	adrp	x16, 2f000 <mpfr_set_underflow>
    5254:	ldr	x17, [x16, #1016]
    5258:	add	x16, x16, #0x3f8
    525c:	br	x17

0000000000005260 <mpc_mul_fr@plt>:
    5260:	adrp	x16, 2f000 <mpfr_set_underflow>
    5264:	ldr	x17, [x16, #1024]
    5268:	add	x16, x16, #0x400
    526c:	br	x17

0000000000005270 <__ctype_b_loc@plt>:
    5270:	adrp	x16, 2f000 <mpfr_set_underflow>
    5274:	ldr	x17, [x16, #1032]
    5278:	add	x16, x16, #0x408
    527c:	br	x17

0000000000005280 <__gmpz_clear@plt>:
    5280:	adrp	x16, 2f000 <mpfr_set_underflow>
    5284:	ldr	x17, [x16, #1040]
    5288:	add	x16, x16, #0x410
    528c:	br	x17

0000000000005290 <__gmpfr_out_str@plt>:
    5290:	adrp	x16, 2f000 <mpfr_set_underflow>
    5294:	ldr	x17, [x16, #1048]
    5298:	add	x16, x16, #0x418
    529c:	br	x17

00000000000052a0 <mpc_abs@plt>:
    52a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    52a4:	ldr	x17, [x16, #1056]
    52a8:	add	x16, x16, #0x420
    52ac:	br	x17

00000000000052b0 <mpfr_atan@plt>:
    52b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    52b4:	ldr	x17, [x16, #1064]
    52b8:	add	x16, x16, #0x428
    52bc:	br	x17

00000000000052c0 <mpfr_nexttoward@plt>:
    52c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    52c4:	ldr	x17, [x16, #1072]
    52c8:	add	x16, x16, #0x430
    52cc:	br	x17

00000000000052d0 <mpfr_set4@plt>:
    52d0:	adrp	x16, 2f000 <mpfr_set_underflow>
    52d4:	ldr	x17, [x16, #1080]
    52d8:	add	x16, x16, #0x438
    52dc:	br	x17

00000000000052e0 <mpfr_log1p@plt>:
    52e0:	adrp	x16, 2f000 <mpfr_set_underflow>
    52e4:	ldr	x17, [x16, #1088]
    52e8:	add	x16, x16, #0x440
    52ec:	br	x17

00000000000052f0 <mpfr_sgn@plt>:
    52f0:	adrp	x16, 2f000 <mpfr_set_underflow>
    52f4:	ldr	x17, [x16, #1096]
    52f8:	add	x16, x16, #0x448
    52fc:	br	x17

0000000000005300 <mpfr_get_emax@plt>:
    5300:	adrp	x16, 2f000 <mpfr_set_underflow>
    5304:	ldr	x17, [x16, #1104]
    5308:	add	x16, x16, #0x450
    530c:	br	x17

0000000000005310 <ungetc@plt>:
    5310:	adrp	x16, 2f000 <mpfr_set_underflow>
    5314:	ldr	x17, [x16, #1112]
    5318:	add	x16, x16, #0x458
    531c:	br	x17

0000000000005320 <__gmpz_tdiv_q_2exp@plt>:
    5320:	adrp	x16, 2f000 <mpfr_set_underflow>
    5324:	ldr	x17, [x16, #1120]
    5328:	add	x16, x16, #0x460
    532c:	br	x17

0000000000005330 <mpfr_exp@plt>:
    5330:	adrp	x16, 2f000 <mpfr_set_underflow>
    5334:	ldr	x17, [x16, #1128]
    5338:	add	x16, x16, #0x468
    533c:	br	x17

0000000000005340 <mpc_pow@plt>:
    5340:	adrp	x16, 2f000 <mpfr_set_underflow>
    5344:	ldr	x17, [x16, #1136]
    5348:	add	x16, x16, #0x470
    534c:	br	x17

0000000000005350 <mpc_div@plt>:
    5350:	adrp	x16, 2f000 <mpfr_set_underflow>
    5354:	ldr	x17, [x16, #1144]
    5358:	add	x16, x16, #0x478
    535c:	br	x17

0000000000005360 <mpfr_add_si@plt>:
    5360:	adrp	x16, 2f000 <mpfr_set_underflow>
    5364:	ldr	x17, [x16, #1152]
    5368:	add	x16, x16, #0x480
    536c:	br	x17

0000000000005370 <mpfr_set_si@plt>:
    5370:	adrp	x16, 2f000 <mpfr_set_underflow>
    5374:	ldr	x17, [x16, #1160]
    5378:	add	x16, x16, #0x488
    537c:	br	x17

0000000000005380 <mpfr_sqrt_ui@plt>:
    5380:	adrp	x16, 2f000 <mpfr_set_underflow>
    5384:	ldr	x17, [x16, #1168]
    5388:	add	x16, x16, #0x490
    538c:	br	x17

0000000000005390 <mpfr_set_q@plt>:
    5390:	adrp	x16, 2f000 <mpfr_set_underflow>
    5394:	ldr	x17, [x16, #1176]
    5398:	add	x16, x16, #0x498
    539c:	br	x17

00000000000053a0 <mpc_exp@plt>:
    53a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    53a4:	ldr	x17, [x16, #1184]
    53a8:	add	x16, x16, #0x4a0
    53ac:	br	x17

00000000000053b0 <__gmpq_init@plt>:
    53b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    53b4:	ldr	x17, [x16, #1192]
    53b8:	add	x16, x16, #0x4a8
    53bc:	br	x17

00000000000053c0 <mpc_set_si_si@plt>:
    53c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    53c4:	ldr	x17, [x16, #1200]
    53c8:	add	x16, x16, #0x4b0
    53cc:	br	x17

00000000000053d0 <__gmpz_submul@plt>:
    53d0:	adrp	x16, 2f000 <mpfr_set_underflow>
    53d4:	ldr	x17, [x16, #1208]
    53d8:	add	x16, x16, #0x4b8
    53dc:	br	x17

00000000000053e0 <mpfr_free_str@plt>:
    53e0:	adrp	x16, 2f000 <mpfr_set_underflow>
    53e4:	ldr	x17, [x16, #1216]
    53e8:	add	x16, x16, #0x4c0
    53ec:	br	x17

00000000000053f0 <mpfr_underflow_p@plt>:
    53f0:	adrp	x16, 2f000 <mpfr_set_underflow>
    53f4:	ldr	x17, [x16, #1224]
    53f8:	add	x16, x16, #0x4c8
    53fc:	br	x17

0000000000005400 <__gmpz_cmp@plt>:
    5400:	adrp	x16, 2f000 <mpfr_set_underflow>
    5404:	ldr	x17, [x16, #1232]
    5408:	add	x16, x16, #0x4d0
    540c:	br	x17

0000000000005410 <mpc_cmp_si_si@plt>:
    5410:	adrp	x16, 2f000 <mpfr_set_underflow>
    5414:	ldr	x17, [x16, #1240]
    5418:	add	x16, x16, #0x4d8
    541c:	br	x17

0000000000005420 <mpfr_div_2ui@plt>:
    5420:	adrp	x16, 2f000 <mpfr_set_underflow>
    5424:	ldr	x17, [x16, #1248]
    5428:	add	x16, x16, #0x4e0
    542c:	br	x17

0000000000005430 <mpc_realloc_str@plt>:
    5430:	adrp	x16, 2f000 <mpfr_set_underflow>
    5434:	ldr	x17, [x16, #1256]
    5438:	add	x16, x16, #0x4e8
    543c:	br	x17

0000000000005440 <strcpy@plt>:
    5440:	adrp	x16, 2f000 <mpfr_set_underflow>
    5444:	ldr	x17, [x16, #1264]
    5448:	add	x16, x16, #0x4f0
    544c:	br	x17

0000000000005450 <mpfr_sqrt@plt>:
    5450:	adrp	x16, 2f000 <mpfr_set_underflow>
    5454:	ldr	x17, [x16, #1272]
    5458:	add	x16, x16, #0x4f8
    545c:	br	x17

0000000000005460 <mpfr_mul_si@plt>:
    5460:	adrp	x16, 2f000 <mpfr_set_underflow>
    5464:	ldr	x17, [x16, #1280]
    5468:	add	x16, x16, #0x500
    546c:	br	x17

0000000000005470 <mpfr_prec_round@plt>:
    5470:	adrp	x16, 2f000 <mpfr_set_underflow>
    5474:	ldr	x17, [x16, #1288]
    5478:	add	x16, x16, #0x508
    547c:	br	x17

0000000000005480 <mpc_set_str@plt>:
    5480:	adrp	x16, 2f000 <mpfr_set_underflow>
    5484:	ldr	x17, [x16, #1296]
    5488:	add	x16, x16, #0x510
    548c:	br	x17

0000000000005490 <mpfr_min_prec@plt>:
    5490:	adrp	x16, 2f000 <mpfr_set_underflow>
    5494:	ldr	x17, [x16, #1304]
    5498:	add	x16, x16, #0x518
    549c:	br	x17

00000000000054a0 <mpfr_cmp3@plt>:
    54a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    54a4:	ldr	x17, [x16, #1312]
    54a8:	add	x16, x16, #0x520
    54ac:	br	x17

00000000000054b0 <mpfr_cmpabs@plt>:
    54b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    54b4:	ldr	x17, [x16, #1320]
    54b8:	add	x16, x16, #0x528
    54bc:	br	x17

00000000000054c0 <mpc_init3@plt>:
    54c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    54c4:	ldr	x17, [x16, #1328]
    54c8:	add	x16, x16, #0x530
    54cc:	br	x17

00000000000054d0 <__gmpz_add@plt>:
    54d0:	adrp	x16, 2f000 <mpfr_set_underflow>
    54d4:	ldr	x17, [x16, #1336]
    54d8:	add	x16, x16, #0x538
    54dc:	br	x17

00000000000054e0 <mpc_cos@plt>:
    54e0:	adrp	x16, 2f000 <mpfr_set_underflow>
    54e4:	ldr	x17, [x16, #1344]
    54e8:	add	x16, x16, #0x540
    54ec:	br	x17

00000000000054f0 <set_pi_over_2@plt>:
    54f0:	adrp	x16, 2f000 <mpfr_set_underflow>
    54f4:	ldr	x17, [x16, #1352]
    54f8:	add	x16, x16, #0x548
    54fc:	br	x17

0000000000005500 <__gmpfr_set_uj@plt>:
    5500:	adrp	x16, 2f000 <mpfr_set_underflow>
    5504:	ldr	x17, [x16, #1360]
    5508:	add	x16, x16, #0x550
    550c:	br	x17

0000000000005510 <mpc_atan@plt>:
    5510:	adrp	x16, 2f000 <mpfr_set_underflow>
    5514:	ldr	x17, [x16, #1368]
    5518:	add	x16, x16, #0x558
    551c:	br	x17

0000000000005520 <mpfr_ui_sub@plt>:
    5520:	adrp	x16, 2f000 <mpfr_set_underflow>
    5524:	ldr	x17, [x16, #1376]
    5528:	add	x16, x16, #0x560
    552c:	br	x17

0000000000005530 <mpfr_init2@plt>:
    5530:	adrp	x16, 2f000 <mpfr_set_underflow>
    5534:	ldr	x17, [x16, #1384]
    5538:	add	x16, x16, #0x568
    553c:	br	x17

0000000000005540 <mpfr_can_round@plt>:
    5540:	adrp	x16, 2f000 <mpfr_set_underflow>
    5544:	ldr	x17, [x16, #1392]
    5548:	add	x16, x16, #0x570
    554c:	br	x17

0000000000005550 <mpc_set_d@plt>:
    5550:	adrp	x16, 2f000 <mpfr_set_underflow>
    5554:	ldr	x17, [x16, #1400]
    5558:	add	x16, x16, #0x578
    555c:	br	x17

0000000000005560 <mpfr_get_z_2exp@plt>:
    5560:	adrp	x16, 2f000 <mpfr_set_underflow>
    5564:	ldr	x17, [x16, #1408]
    5568:	add	x16, x16, #0x580
    556c:	br	x17

0000000000005570 <mpc_asin@plt>:
    5570:	adrp	x16, 2f000 <mpfr_set_underflow>
    5574:	ldr	x17, [x16, #1416]
    5578:	add	x16, x16, #0x588
    557c:	br	x17

0000000000005580 <mpfr_set_overflow@plt>:
    5580:	adrp	x16, 2f000 <mpfr_set_underflow>
    5584:	ldr	x17, [x16, #1424]
    5588:	add	x16, x16, #0x590
    558c:	br	x17

0000000000005590 <__gmpz_init@plt>:
    5590:	adrp	x16, 2f000 <mpfr_set_underflow>
    5594:	ldr	x17, [x16, #1432]
    5598:	add	x16, x16, #0x598
    559c:	br	x17

00000000000055a0 <__gmpz_sizeinbase@plt>:
    55a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    55a4:	ldr	x17, [x16, #1440]
    55a8:	add	x16, x16, #0x5a0
    55ac:	br	x17

00000000000055b0 <__gmpz_set_si@plt>:
    55b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    55b4:	ldr	x17, [x16, #1448]
    55b8:	add	x16, x16, #0x5a8
    55bc:	br	x17

00000000000055c0 <mpfr_number_p@plt>:
    55c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    55c4:	ldr	x17, [x16, #1456]
    55c8:	add	x16, x16, #0x5b0
    55cc:	br	x17

00000000000055d0 <mpfr_overflow_p@plt>:
    55d0:	adrp	x16, 2f000 <mpfr_set_underflow>
    55d4:	ldr	x17, [x16, #1464]
    55d8:	add	x16, x16, #0x5b8
    55dc:	br	x17

00000000000055e0 <mpc_set_fr_fr@plt>:
    55e0:	adrp	x16, 2f000 <mpfr_set_underflow>
    55e4:	ldr	x17, [x16, #1472]
    55e8:	add	x16, x16, #0x5c0
    55ec:	br	x17

00000000000055f0 <tolower@plt>:
    55f0:	adrp	x16, 2f000 <mpfr_set_underflow>
    55f4:	ldr	x17, [x16, #1480]
    55f8:	add	x16, x16, #0x5c8
    55fc:	br	x17

0000000000005600 <mpfr_urandomb@plt>:
    5600:	adrp	x16, 2f000 <mpfr_set_underflow>
    5604:	ldr	x17, [x16, #1488]
    5608:	add	x16, x16, #0x5d0
    560c:	br	x17

0000000000005610 <mpfr_set_ui@plt>:
    5610:	adrp	x16, 2f000 <mpfr_set_underflow>
    5614:	ldr	x17, [x16, #1496]
    5618:	add	x16, x16, #0x5d8
    561c:	br	x17

0000000000005620 <mpfr_sin_cos@plt>:
    5620:	adrp	x16, 2f000 <mpfr_set_underflow>
    5624:	ldr	x17, [x16, #1504]
    5628:	add	x16, x16, #0x5e0
    562c:	br	x17

0000000000005630 <mpc_div_2ui@plt>:
    5630:	adrp	x16, 2f000 <mpfr_set_underflow>
    5634:	ldr	x17, [x16, #1512]
    5638:	add	x16, x16, #0x5e8
    563c:	br	x17

0000000000005640 <mpfr_inits2@plt>:
    5640:	adrp	x16, 2f000 <mpfr_set_underflow>
    5644:	ldr	x17, [x16, #1520]
    5648:	add	x16, x16, #0x5f0
    564c:	br	x17

0000000000005650 <mpfr_div_ui@plt>:
    5650:	adrp	x16, 2f000 <mpfr_set_underflow>
    5654:	ldr	x17, [x16, #1528]
    5658:	add	x16, x16, #0x5f8
    565c:	br	x17

0000000000005660 <mpc_fma_naive@plt>:
    5660:	adrp	x16, 2f000 <mpfr_set_underflow>
    5664:	ldr	x17, [x16, #1536]
    5668:	add	x16, x16, #0x600
    566c:	br	x17

0000000000005670 <__gmpq_mul_2exp@plt>:
    5670:	adrp	x16, 2f000 <mpfr_set_underflow>
    5674:	ldr	x17, [x16, #1544]
    5678:	add	x16, x16, #0x608
    567c:	br	x17

0000000000005680 <mpc_set@plt>:
    5680:	adrp	x16, 2f000 <mpfr_set_underflow>
    5684:	ldr	x17, [x16, #1552]
    5688:	add	x16, x16, #0x610
    568c:	br	x17

0000000000005690 <mpfr_hypot@plt>:
    5690:	adrp	x16, 2f000 <mpfr_set_underflow>
    5694:	ldr	x17, [x16, #1560]
    5698:	add	x16, x16, #0x618
    569c:	br	x17

00000000000056a0 <fprintf@plt>:
    56a0:	adrp	x16, 2f000 <mpfr_set_underflow>
    56a4:	ldr	x17, [x16, #1568]
    56a8:	add	x16, x16, #0x620
    56ac:	br	x17

00000000000056b0 <mpc_ui_div@plt>:
    56b0:	adrp	x16, 2f000 <mpfr_set_underflow>
    56b4:	ldr	x17, [x16, #1576]
    56b8:	add	x16, x16, #0x628
    56bc:	br	x17

00000000000056c0 <mpfr_get_emin_min@plt>:
    56c0:	adrp	x16, 2f000 <mpfr_set_underflow>
    56c4:	ldr	x17, [x16, #1584]
    56c8:	add	x16, x16, #0x630
    56cc:	br	x17

Disassembly of section .text:

00000000000056d0 <mpc_abs@@Base-0xd4>:
    56d0:	adrp	x0, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    56d4:	ldr	x0, [x0, #4048]
    56d8:	cbz	x0, 56e0 <mpfr_get_emin_min@plt+0x20>
    56dc:	b	50c0 <__gmon_start__@plt>
    56e0:	ret
    56e4:	nop
    56e8:	adrp	x0, 2f000 <mpc_ui_ui_sub@@Base+0x121e4>
    56ec:	add	x0, x0, #0x640
    56f0:	adrp	x1, 2f000 <mpc_ui_ui_sub@@Base+0x121e4>
    56f4:	add	x1, x1, #0x640
    56f8:	cmp	x1, x0
    56fc:	b.eq	5714 <mpfr_get_emin_min@plt+0x54>  // b.none
    5700:	adrp	x1, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    5704:	ldr	x1, [x1, #3992]
    5708:	cbz	x1, 5714 <mpfr_get_emin_min@plt+0x54>
    570c:	mov	x16, x1
    5710:	br	x16
    5714:	ret
    5718:	adrp	x0, 2f000 <mpc_ui_ui_sub@@Base+0x121e4>
    571c:	add	x0, x0, #0x640
    5720:	adrp	x1, 2f000 <mpc_ui_ui_sub@@Base+0x121e4>
    5724:	add	x1, x1, #0x640
    5728:	sub	x1, x1, x0
    572c:	lsr	x2, x1, #63
    5730:	add	x1, x2, x1, asr #3
    5734:	cmp	xzr, x1, asr #1
    5738:	asr	x1, x1, #1
    573c:	b.eq	5754 <mpfr_get_emin_min@plt+0x94>  // b.none
    5740:	adrp	x2, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    5744:	ldr	x2, [x2, #4064]
    5748:	cbz	x2, 5754 <mpfr_get_emin_min@plt+0x94>
    574c:	mov	x16, x2
    5750:	br	x16
    5754:	ret
    5758:	stp	x29, x30, [sp, #-32]!
    575c:	mov	x29, sp
    5760:	str	x19, [sp, #16]
    5764:	adrp	x19, 2f000 <mpc_ui_ui_sub@@Base+0x121e4>
    5768:	ldrb	w0, [x19, #1600]
    576c:	cbnz	w0, 5794 <mpfr_get_emin_min@plt+0xd4>
    5770:	adrp	x0, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    5774:	ldr	x0, [x0, #4000]
    5778:	cbz	x0, 5788 <mpfr_get_emin_min@plt+0xc8>
    577c:	adrp	x0, 2f000 <mpc_ui_ui_sub@@Base+0x121e4>
    5780:	ldr	x0, [x0, #1592]
    5784:	bl	4c00 <__cxa_finalize@plt>
    5788:	bl	56e8 <mpfr_get_emin_min@plt+0x28>
    578c:	mov	w0, #0x1                   	// #1
    5790:	strb	w0, [x19, #1600]
    5794:	ldr	x19, [sp, #16]
    5798:	ldp	x29, x30, [sp], #32
    579c:	ret
    57a0:	b	5718 <mpfr_get_emin_min@plt+0x58>

00000000000057a4 <mpc_abs@@Base>:
    57a4:	sub	sp, sp, #0x30
    57a8:	stp	x29, x30, [sp, #32]
    57ac:	add	x29, sp, #0x20
    57b0:	stur	x0, [x29, #-8]
    57b4:	str	x1, [sp, #16]
    57b8:	str	w2, [sp, #12]
    57bc:	ldur	x0, [x29, #-8]
    57c0:	ldr	x1, [sp, #16]
    57c4:	ldr	x8, [sp, #16]
    57c8:	add	x2, x8, #0x20
    57cc:	ldr	w3, [sp, #12]
    57d0:	bl	5690 <mpfr_hypot@plt>
    57d4:	ldp	x29, x30, [sp, #32]
    57d8:	add	sp, sp, #0x30
    57dc:	ret

00000000000057e0 <mpc_acos@@Base>:
    57e0:	stp	x29, x30, [sp, #-32]!
    57e4:	str	x28, [sp, #16]
    57e8:	mov	x29, sp
    57ec:	sub	sp, sp, #0x230
    57f0:	sub	x8, x29, #0xb8
    57f4:	mov	x9, #0x2                   	// #2
    57f8:	movk	x9, #0x8000, lsl #48
    57fc:	str	x0, [x8, #168]
    5800:	str	x1, [x8, #160]
    5804:	stur	w2, [x29, #-28]
    5808:	stur	wzr, [x29, #-44]
    580c:	stur	wzr, [x29, #-32]
    5810:	stur	wzr, [x29, #-36]
    5814:	ldr	x10, [x8, #160]
    5818:	ldr	x10, [x10, #16]
    581c:	cmp	x10, x9
    5820:	str	x8, [sp, #232]
    5824:	b.eq	5844 <mpc_acos@@Base+0x64>  // b.none
    5828:	ldr	x8, [sp, #232]
    582c:	ldr	x9, [x8, #160]
    5830:	ldr	x9, [x9, #48]
    5834:	mov	x10, #0x2                   	// #2
    5838:	movk	x10, #0x8000, lsl #48
    583c:	cmp	x9, x10
    5840:	b.ne	5950 <mpc_acos@@Base+0x170>  // b.any
    5844:	ldr	x8, [sp, #232]
    5848:	ldr	x9, [x8, #160]
    584c:	ldr	x9, [x9, #16]
    5850:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5854:	cmp	x9, x10
    5858:	b.eq	5874 <mpc_acos@@Base+0x94>  // b.none
    585c:	ldr	x8, [sp, #232]
    5860:	ldr	x9, [x8, #160]
    5864:	ldr	x9, [x9, #48]
    5868:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    586c:	cmp	x9, x10
    5870:	b.ne	58ac <mpc_acos@@Base+0xcc>  // b.any
    5874:	ldr	x8, [sp, #232]
    5878:	ldr	x9, [x8, #168]
    587c:	add	x0, x9, #0x20
    5880:	ldr	x9, [x8, #160]
    5884:	ldr	w10, [x9, #40]
    5888:	mov	w11, #0xffffffff            	// #-1
    588c:	mov	w12, #0x1                   	// #1
    5890:	cmp	w10, #0x0
    5894:	csel	w1, w12, w11, lt  // lt = tstop
    5898:	bl	5220 <mpfr_set_inf@plt>
    589c:	ldr	x8, [sp, #232]
    58a0:	ldr	x0, [x8, #168]
    58a4:	bl	4b20 <mpfr_set_nan@plt>
    58a8:	b	5910 <mpc_acos@@Base+0x130>
    58ac:	ldr	x8, [sp, #232]
    58b0:	ldr	x9, [x8, #160]
    58b4:	ldr	x9, [x9, #16]
    58b8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    58bc:	cmp	x9, x10
    58c0:	b.ne	58f4 <mpc_acos@@Base+0x114>  // b.any
    58c4:	ldr	x8, [sp, #232]
    58c8:	ldr	x0, [x8, #168]
    58cc:	ldur	w9, [x29, #-28]
    58d0:	and	w2, w9, #0xf
    58d4:	mov	w1, #0x1                   	// #1
    58d8:	bl	54f0 <set_pi_over_2@plt>
    58dc:	stur	w0, [x29, #-32]
    58e0:	ldr	x8, [sp, #232]
    58e4:	ldr	x10, [x8, #168]
    58e8:	add	x0, x10, #0x20
    58ec:	bl	4b20 <mpfr_set_nan@plt>
    58f0:	b	5910 <mpc_acos@@Base+0x130>
    58f4:	ldr	x8, [sp, #232]
    58f8:	ldr	x0, [x8, #168]
    58fc:	bl	4b20 <mpfr_set_nan@plt>
    5900:	ldr	x8, [sp, #232]
    5904:	ldr	x9, [x8, #168]
    5908:	add	x0, x9, #0x20
    590c:	bl	4b20 <mpfr_set_nan@plt>
    5910:	ldur	w8, [x29, #-32]
    5914:	cmp	w8, #0x0
    5918:	cset	w8, ge  // ge = tcont
    591c:	tbnz	w8, #0, 592c <mpc_acos@@Base+0x14c>
    5920:	mov	w8, #0x2                   	// #2
    5924:	str	w8, [sp, #228]
    5928:	b	5944 <mpc_acos@@Base+0x164>
    592c:	ldur	w8, [x29, #-32]
    5930:	mov	w9, wzr
    5934:	mov	w10, #0x1                   	// #1
    5938:	cmp	w8, #0x0
    593c:	csel	w8, w9, w10, eq  // eq = none
    5940:	str	w8, [sp, #228]
    5944:	ldr	w8, [sp, #228]
    5948:	stur	w8, [x29, #-4]
    594c:	b	663c <mpc_acos@@Base+0xe5c>
    5950:	ldr	x8, [sp, #232]
    5954:	ldr	x9, [x8, #160]
    5958:	ldr	x9, [x9, #16]
    595c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5960:	cmp	x9, x10
    5964:	b.eq	5980 <mpc_acos@@Base+0x1a0>  // b.none
    5968:	ldr	x8, [sp, #232]
    596c:	ldr	x9, [x8, #160]
    5970:	ldr	x9, [x9, #48]
    5974:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5978:	cmp	x9, x10
    597c:	b.ne	5c80 <mpc_acos@@Base+0x4a0>  // b.any
    5980:	ldr	x8, [sp, #232]
    5984:	ldr	x9, [x8, #160]
    5988:	ldr	x9, [x9, #16]
    598c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5990:	cmp	x9, x10
    5994:	b.ne	5bfc <mpc_acos@@Base+0x41c>  // b.any
    5998:	ldr	x8, [sp, #232]
    599c:	ldr	x9, [x8, #160]
    59a0:	ldr	x9, [x9, #48]
    59a4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    59a8:	cmp	x9, x10
    59ac:	b.ne	5b4c <mpc_acos@@Base+0x36c>  // b.any
    59b0:	ldr	x8, [sp, #232]
    59b4:	ldr	x9, [x8, #160]
    59b8:	ldr	x9, [x9, #16]
    59bc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    59c0:	cmp	x9, x10
    59c4:	b.ge	59f8 <mpc_acos@@Base+0x218>  // b.tcont
    59c8:	ldr	x8, [sp, #232]
    59cc:	ldr	x9, [x8, #160]
    59d0:	ldr	x9, [x9, #16]
    59d4:	mov	x10, #0x2                   	// #2
    59d8:	movk	x10, #0x8000, lsl #48
    59dc:	cmp	x9, x10
    59e0:	b.ne	59ec <mpc_acos@@Base+0x20c>  // b.any
    59e4:	bl	4be0 <mpfr_set_erangeflag@plt>
    59e8:	b	59ec <mpc_acos@@Base+0x20c>
    59ec:	mov	w8, wzr
    59f0:	str	w8, [sp, #224]
    59f4:	b	5a08 <mpc_acos@@Base+0x228>
    59f8:	ldr	x8, [sp, #232]
    59fc:	ldr	x9, [x8, #160]
    5a00:	ldr	w10, [x9, #8]
    5a04:	str	w10, [sp, #224]
    5a08:	ldr	w8, [sp, #224]
    5a0c:	cmp	w8, #0x0
    5a10:	cset	w8, le
    5a14:	tbnz	w8, #0, 5a54 <mpc_acos@@Base+0x274>
    5a18:	ldr	x8, [sp, #232]
    5a1c:	ldr	x0, [x8, #168]
    5a20:	ldur	w9, [x29, #-28]
    5a24:	and	w2, w9, #0xf
    5a28:	mov	w1, #0x1                   	// #1
    5a2c:	bl	54f0 <set_pi_over_2@plt>
    5a30:	stur	w0, [x29, #-32]
    5a34:	ldr	x8, [sp, #232]
    5a38:	ldr	x0, [x8, #168]
    5a3c:	ldr	x1, [x8, #168]
    5a40:	mov	x2, #0x1                   	// #1
    5a44:	mov	w9, wzr
    5a48:	mov	w3, w9
    5a4c:	bl	5420 <mpfr_div_2ui@plt>
    5a50:	b	5b48 <mpc_acos@@Base+0x368>
    5a54:	sub	x0, x29, #0xe0
    5a58:	bl	4b80 <mpfr_init@plt>
    5a5c:	ldr	x8, [sp, #232]
    5a60:	ldr	x9, [x8, #168]
    5a64:	ldr	x9, [x9]
    5a68:	stur	x9, [x29, #-232]
    5a6c:	ldur	x9, [x29, #-232]
    5a70:	str	x9, [x8, #112]
    5a74:	ldr	x8, [sp, #232]
    5a78:	ldr	x0, [x8, #112]
    5a7c:	bl	4de0 <mpc_ceil_log2@plt>
    5a80:	ldr	x8, [sp, #232]
    5a84:	ldr	x9, [x8, #112]
    5a88:	add	x9, x9, x0
    5a8c:	str	x9, [x8, #112]
    5a90:	ldr	x1, [x8, #112]
    5a94:	sub	x9, x29, #0xe0
    5a98:	mov	x0, x9
    5a9c:	str	x9, [sp, #216]
    5aa0:	bl	4d40 <mpfr_set_prec@plt>
    5aa4:	ldr	x0, [sp, #216]
    5aa8:	mov	w10, #0x3                   	// #3
    5aac:	mov	w1, w10
    5ab0:	str	w10, [sp, #212]
    5ab4:	bl	4b60 <mpfr_const_pi@plt>
    5ab8:	ldr	x8, [sp, #216]
    5abc:	mov	x0, x8
    5ac0:	mov	x1, x8
    5ac4:	mov	x2, #0x3                   	// #3
    5ac8:	ldr	w3, [sp, #212]
    5acc:	bl	4aa0 <mpfr_mul_ui@plt>
    5ad0:	ldr	x8, [sp, #232]
    5ad4:	ldr	x9, [x8, #112]
    5ad8:	subs	x1, x9, #0x1
    5adc:	ldur	w10, [x29, #-28]
    5ae0:	and	w3, w10, #0xf
    5ae4:	ldur	x9, [x29, #-232]
    5ae8:	ldur	w10, [x29, #-28]
    5aec:	tst	w10, #0xf
    5af0:	cset	w10, eq  // eq = none
    5af4:	and	w10, w10, #0x1
    5af8:	add	x4, x9, w10, sxtw
    5afc:	ldr	x9, [sp, #216]
    5b00:	mov	x0, x9
    5b04:	ldr	w2, [sp, #212]
    5b08:	bl	5540 <mpfr_can_round@plt>
    5b0c:	stur	w0, [x29, #-236]
    5b10:	ldur	w8, [x29, #-236]
    5b14:	cbz	w8, 5a74 <mpc_acos@@Base+0x294>
    5b18:	ldr	x8, [sp, #232]
    5b1c:	ldr	x0, [x8, #168]
    5b20:	ldur	w9, [x29, #-28]
    5b24:	and	w3, w9, #0xf
    5b28:	sub	x10, x29, #0xe0
    5b2c:	mov	x1, x10
    5b30:	mov	x2, #0x2                   	// #2
    5b34:	str	x10, [sp, #200]
    5b38:	bl	5420 <mpfr_div_2ui@plt>
    5b3c:	stur	w0, [x29, #-32]
    5b40:	ldr	x0, [sp, #200]
    5b44:	bl	4e30 <mpfr_clear@plt>
    5b48:	b	5bf8 <mpc_acos@@Base+0x418>
    5b4c:	ldr	x8, [sp, #232]
    5b50:	ldr	x9, [x8, #160]
    5b54:	ldr	x9, [x9, #16]
    5b58:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    5b5c:	cmp	x9, x10
    5b60:	b.ge	5b94 <mpc_acos@@Base+0x3b4>  // b.tcont
    5b64:	ldr	x8, [sp, #232]
    5b68:	ldr	x9, [x8, #160]
    5b6c:	ldr	x9, [x9, #16]
    5b70:	mov	x10, #0x2                   	// #2
    5b74:	movk	x10, #0x8000, lsl #48
    5b78:	cmp	x9, x10
    5b7c:	b.ne	5b88 <mpc_acos@@Base+0x3a8>  // b.any
    5b80:	bl	4be0 <mpfr_set_erangeflag@plt>
    5b84:	b	5b88 <mpc_acos@@Base+0x3a8>
    5b88:	mov	w8, wzr
    5b8c:	str	w8, [sp, #196]
    5b90:	b	5ba4 <mpc_acos@@Base+0x3c4>
    5b94:	ldr	x8, [sp, #232]
    5b98:	ldr	x9, [x8, #160]
    5b9c:	ldr	w10, [x9, #8]
    5ba0:	str	w10, [sp, #196]
    5ba4:	ldr	w8, [sp, #196]
    5ba8:	cmp	w8, #0x0
    5bac:	cset	w8, le
    5bb0:	tbnz	w8, #0, 5be0 <mpc_acos@@Base+0x400>
    5bb4:	ldr	x8, [sp, #232]
    5bb8:	ldr	x9, [x8, #168]
    5bbc:	stur	x9, [x29, #-248]
    5bc0:	ldur	x9, [x29, #-248]
    5bc4:	mov	w10, #0x1                   	// #1
    5bc8:	str	w10, [x9, #8]
    5bcc:	ldur	x9, [x29, #-248]
    5bd0:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    5bd4:	str	x11, [x9, #16]
    5bd8:	stur	wzr, [x29, #-252]
    5bdc:	b	5bf8 <mpc_acos@@Base+0x418>
    5be0:	ldr	x8, [sp, #232]
    5be4:	ldr	x0, [x8, #168]
    5be8:	ldur	w9, [x29, #-28]
    5bec:	and	w1, w9, #0xf
    5bf0:	bl	4b60 <mpfr_const_pi@plt>
    5bf4:	stur	w0, [x29, #-32]
    5bf8:	b	5c18 <mpc_acos@@Base+0x438>
    5bfc:	ldr	x8, [sp, #232]
    5c00:	ldr	x0, [x8, #168]
    5c04:	ldur	w9, [x29, #-28]
    5c08:	and	w2, w9, #0xf
    5c0c:	mov	w1, #0x1                   	// #1
    5c10:	bl	54f0 <set_pi_over_2@plt>
    5c14:	stur	w0, [x29, #-32]
    5c18:	ldr	x8, [sp, #232]
    5c1c:	ldr	x9, [x8, #168]
    5c20:	add	x0, x9, #0x20
    5c24:	ldr	x9, [x8, #160]
    5c28:	ldr	w10, [x9, #40]
    5c2c:	mov	w11, #0xffffffff            	// #-1
    5c30:	mov	w12, #0x1                   	// #1
    5c34:	cmp	w10, #0x0
    5c38:	csel	w1, w12, w11, lt  // lt = tstop
    5c3c:	bl	5220 <mpfr_set_inf@plt>
    5c40:	ldur	w10, [x29, #-32]
    5c44:	cmp	w10, #0x0
    5c48:	cset	w10, ge  // ge = tcont
    5c4c:	tbnz	w10, #0, 5c5c <mpc_acos@@Base+0x47c>
    5c50:	mov	w8, #0x2                   	// #2
    5c54:	str	w8, [sp, #192]
    5c58:	b	5c74 <mpc_acos@@Base+0x494>
    5c5c:	ldur	w8, [x29, #-32]
    5c60:	mov	w9, wzr
    5c64:	mov	w10, #0x1                   	// #1
    5c68:	cmp	w8, #0x0
    5c6c:	csel	w8, w9, w10, eq  // eq = none
    5c70:	str	w8, [sp, #192]
    5c74:	ldr	w8, [sp, #192]
    5c78:	stur	w8, [x29, #-4]
    5c7c:	b	663c <mpc_acos@@Base+0xe5c>
    5c80:	ldr	x8, [sp, #232]
    5c84:	ldr	x9, [x8, #160]
    5c88:	ldr	x9, [x9, #48]
    5c8c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    5c90:	cmp	x9, x10
    5c94:	b.ne	5fb4 <mpc_acos@@Base+0x7d4>  // b.any
    5c98:	ldr	x8, [sp, #232]
    5c9c:	ldr	x9, [x8, #160]
    5ca0:	ldr	w10, [x9, #40]
    5ca4:	cmp	w10, #0x0
    5ca8:	cset	w10, lt  // lt = tstop
    5cac:	and	w10, w10, #0x1
    5cb0:	stur	w10, [x29, #-256]
    5cb4:	ldr	x0, [x8, #160]
    5cb8:	mov	x1, #0x1                   	// #1
    5cbc:	mov	x9, xzr
    5cc0:	mov	x2, x9
    5cc4:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    5cc8:	cmp	w0, #0x0
    5ccc:	cset	w10, le
    5cd0:	tbnz	w10, #0, 5db0 <mpc_acos@@Base+0x5d0>
    5cd4:	ldur	w8, [x29, #-256]
    5cd8:	cbz	w8, 5d00 <mpc_acos@@Base+0x520>
    5cdc:	ldr	x8, [sp, #232]
    5ce0:	ldr	x9, [x8, #168]
    5ce4:	add	x0, x9, #0x20
    5ce8:	ldr	x1, [x8, #160]
    5cec:	ldur	w10, [x29, #-28]
    5cf0:	asr	w2, w10, #4
    5cf4:	bl	51e0 <mpfr_acosh@plt>
    5cf8:	stur	w0, [x29, #-36]
    5cfc:	b	5d84 <mpc_acos@@Base+0x5a4>
    5d00:	ldr	x8, [sp, #232]
    5d04:	ldr	x9, [x8, #168]
    5d08:	add	x0, x9, #0x20
    5d0c:	ldr	x1, [x8, #160]
    5d10:	ldur	w10, [x29, #-28]
    5d14:	asr	w10, w10, #4
    5d18:	cmp	w10, #0x2
    5d1c:	str	x0, [sp, #184]
    5d20:	str	x1, [sp, #176]
    5d24:	b.ne	5d34 <mpc_acos@@Base+0x554>  // b.any
    5d28:	mov	w8, #0x3                   	// #3
    5d2c:	str	w8, [sp, #172]
    5d30:	b	5d64 <mpc_acos@@Base+0x584>
    5d34:	ldur	w8, [x29, #-28]
    5d38:	asr	w8, w8, #4
    5d3c:	cmp	w8, #0x3
    5d40:	b.ne	5d50 <mpc_acos@@Base+0x570>  // b.any
    5d44:	mov	w8, #0x2                   	// #2
    5d48:	str	w8, [sp, #168]
    5d4c:	b	5d5c <mpc_acos@@Base+0x57c>
    5d50:	ldur	w8, [x29, #-28]
    5d54:	asr	w8, w8, #4
    5d58:	str	w8, [sp, #168]
    5d5c:	ldr	w8, [sp, #168]
    5d60:	str	w8, [sp, #172]
    5d64:	ldr	w8, [sp, #172]
    5d68:	ldr	x0, [sp, #184]
    5d6c:	ldr	x1, [sp, #176]
    5d70:	mov	w2, w8
    5d74:	bl	51e0 <mpfr_acosh@plt>
    5d78:	mov	w8, wzr
    5d7c:	subs	w8, w8, w0
    5d80:	stur	w8, [x29, #-36]
    5d84:	ldr	x8, [sp, #232]
    5d88:	ldr	x9, [x8, #168]
    5d8c:	str	x9, [sp, #296]
    5d90:	ldr	x9, [sp, #296]
    5d94:	mov	w10, #0x1                   	// #1
    5d98:	str	w10, [x9, #8]
    5d9c:	ldr	x9, [sp, #296]
    5da0:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    5da4:	str	x11, [x9, #16]
    5da8:	str	wzr, [sp, #292]
    5dac:	b	5f10 <mpc_acos@@Base+0x730>
    5db0:	ldr	x8, [sp, #232]
    5db4:	ldr	x0, [x8, #160]
    5db8:	mov	x1, #0xffffffffffffffff    	// #-1
    5dbc:	mov	x9, xzr
    5dc0:	mov	x2, x9
    5dc4:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    5dc8:	cmp	w0, #0x0
    5dcc:	cset	w10, ge  // ge = tcont
    5dd0:	tbnz	w10, #0, 5ec8 <mpc_acos@@Base+0x6e8>
    5dd4:	ldr	x8, [sp, #232]
    5dd8:	ldr	x9, [x8, #160]
    5ddc:	ldr	q0, [x9]
    5de0:	add	x10, sp, #0x100
    5de4:	str	q0, [sp, #256]
    5de8:	ldr	q0, [x9, #16]
    5dec:	str	q0, [sp, #272]
    5df0:	mov	x0, x10
    5df4:	mov	x1, x10
    5df8:	mov	w11, wzr
    5dfc:	mov	w2, w11
    5e00:	bl	4c60 <mpfr_neg@plt>
    5e04:	ldur	w11, [x29, #-256]
    5e08:	cbz	w11, 5e30 <mpc_acos@@Base+0x650>
    5e0c:	ldr	x8, [sp, #232]
    5e10:	ldr	x9, [x8, #168]
    5e14:	add	x0, x9, #0x20
    5e18:	ldur	w10, [x29, #-28]
    5e1c:	asr	w2, w10, #4
    5e20:	add	x1, sp, #0x100
    5e24:	bl	51e0 <mpfr_acosh@plt>
    5e28:	stur	w0, [x29, #-36]
    5e2c:	b	5eac <mpc_acos@@Base+0x6cc>
    5e30:	ldr	x8, [sp, #232]
    5e34:	ldr	x9, [x8, #168]
    5e38:	add	x0, x9, #0x20
    5e3c:	ldur	w10, [x29, #-28]
    5e40:	asr	w10, w10, #4
    5e44:	cmp	w10, #0x2
    5e48:	str	x0, [sp, #160]
    5e4c:	b.ne	5e5c <mpc_acos@@Base+0x67c>  // b.any
    5e50:	mov	w8, #0x3                   	// #3
    5e54:	str	w8, [sp, #156]
    5e58:	b	5e8c <mpc_acos@@Base+0x6ac>
    5e5c:	ldur	w8, [x29, #-28]
    5e60:	asr	w8, w8, #4
    5e64:	cmp	w8, #0x3
    5e68:	b.ne	5e78 <mpc_acos@@Base+0x698>  // b.any
    5e6c:	mov	w8, #0x2                   	// #2
    5e70:	str	w8, [sp, #152]
    5e74:	b	5e84 <mpc_acos@@Base+0x6a4>
    5e78:	ldur	w8, [x29, #-28]
    5e7c:	asr	w8, w8, #4
    5e80:	str	w8, [sp, #152]
    5e84:	ldr	w8, [sp, #152]
    5e88:	str	w8, [sp, #156]
    5e8c:	ldr	w8, [sp, #156]
    5e90:	ldr	x0, [sp, #160]
    5e94:	add	x1, sp, #0x100
    5e98:	mov	w2, w8
    5e9c:	bl	51e0 <mpfr_acosh@plt>
    5ea0:	mov	w8, wzr
    5ea4:	subs	w8, w8, w0
    5ea8:	stur	w8, [x29, #-36]
    5eac:	ldr	x8, [sp, #232]
    5eb0:	ldr	x0, [x8, #168]
    5eb4:	ldur	w9, [x29, #-28]
    5eb8:	and	w1, w9, #0xf
    5ebc:	bl	4b60 <mpfr_const_pi@plt>
    5ec0:	stur	w0, [x29, #-32]
    5ec4:	b	5f10 <mpc_acos@@Base+0x730>
    5ec8:	ldr	x8, [sp, #232]
    5ecc:	ldr	x0, [x8, #168]
    5ed0:	ldr	x1, [x8, #160]
    5ed4:	ldur	w9, [x29, #-28]
    5ed8:	and	w2, w9, #0xf
    5edc:	bl	50d0 <mpfr_acos@plt>
    5ee0:	stur	w0, [x29, #-32]
    5ee4:	ldr	x8, [sp, #232]
    5ee8:	ldr	x10, [x8, #168]
    5eec:	add	x10, x10, #0x20
    5ef0:	str	x10, [sp, #248]
    5ef4:	ldr	x10, [sp, #248]
    5ef8:	mov	w9, #0x1                   	// #1
    5efc:	str	w9, [x10, #8]
    5f00:	ldr	x10, [sp, #248]
    5f04:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    5f08:	str	x11, [x10, #16]
    5f0c:	str	wzr, [sp, #244]
    5f10:	ldur	w8, [x29, #-256]
    5f14:	cbnz	w8, 5f30 <mpc_acos@@Base+0x750>
    5f18:	ldr	x8, [sp, #232]
    5f1c:	ldr	x0, [x8, #168]
    5f20:	ldr	x1, [x8, #168]
    5f24:	mov	w9, wzr
    5f28:	mov	w2, w9
    5f2c:	bl	5060 <mpc_conj@plt>
    5f30:	ldur	w8, [x29, #-32]
    5f34:	cmp	w8, #0x0
    5f38:	cset	w8, ge  // ge = tcont
    5f3c:	tbnz	w8, #0, 5f4c <mpc_acos@@Base+0x76c>
    5f40:	mov	w8, #0x2                   	// #2
    5f44:	str	w8, [sp, #148]
    5f48:	b	5f64 <mpc_acos@@Base+0x784>
    5f4c:	ldur	w8, [x29, #-32]
    5f50:	mov	w9, wzr
    5f54:	mov	w10, #0x1                   	// #1
    5f58:	cmp	w8, #0x0
    5f5c:	csel	w8, w9, w10, eq  // eq = none
    5f60:	str	w8, [sp, #148]
    5f64:	ldr	w8, [sp, #148]
    5f68:	ldur	w9, [x29, #-36]
    5f6c:	cmp	w9, #0x0
    5f70:	cset	w9, ge  // ge = tcont
    5f74:	str	w8, [sp, #144]
    5f78:	tbnz	w9, #0, 5f88 <mpc_acos@@Base+0x7a8>
    5f7c:	mov	w8, #0x2                   	// #2
    5f80:	str	w8, [sp, #140]
    5f84:	b	5fa0 <mpc_acos@@Base+0x7c0>
    5f88:	ldur	w8, [x29, #-36]
    5f8c:	mov	w9, wzr
    5f90:	mov	w10, #0x1                   	// #1
    5f94:	cmp	w8, #0x0
    5f98:	csel	w8, w9, w10, eq  // eq = none
    5f9c:	str	w8, [sp, #140]
    5fa0:	ldr	w8, [sp, #140]
    5fa4:	ldr	w9, [sp, #144]
    5fa8:	orr	w8, w9, w8, lsl #2
    5fac:	stur	w8, [x29, #-4]
    5fb0:	b	663c <mpc_acos@@Base+0xe5c>
    5fb4:	ldr	x8, [sp, #232]
    5fb8:	ldr	x9, [x8, #160]
    5fbc:	ldr	x9, [x9, #16]
    5fc0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    5fc4:	cmp	x9, x10
    5fc8:	b.ne	6108 <mpc_acos@@Base+0x928>  // b.any
    5fcc:	ldr	x8, [sp, #232]
    5fd0:	ldr	x0, [x8, #168]
    5fd4:	ldur	w9, [x29, #-28]
    5fd8:	and	w2, w9, #0xf
    5fdc:	mov	w1, #0x1                   	// #1
    5fe0:	bl	54f0 <set_pi_over_2@plt>
    5fe4:	stur	w0, [x29, #-32]
    5fe8:	ldr	x8, [sp, #232]
    5fec:	ldr	x10, [x8, #168]
    5ff0:	add	x0, x10, #0x20
    5ff4:	ldr	x10, [x8, #160]
    5ff8:	add	x1, x10, #0x20
    5ffc:	ldur	w9, [x29, #-28]
    6000:	asr	w9, w9, #4
    6004:	cmp	w9, #0x2
    6008:	str	x0, [sp, #128]
    600c:	str	x1, [sp, #120]
    6010:	b.ne	6020 <mpc_acos@@Base+0x840>  // b.any
    6014:	mov	w8, #0x3                   	// #3
    6018:	str	w8, [sp, #116]
    601c:	b	6050 <mpc_acos@@Base+0x870>
    6020:	ldur	w8, [x29, #-28]
    6024:	asr	w8, w8, #4
    6028:	cmp	w8, #0x3
    602c:	b.ne	603c <mpc_acos@@Base+0x85c>  // b.any
    6030:	mov	w8, #0x2                   	// #2
    6034:	str	w8, [sp, #112]
    6038:	b	6048 <mpc_acos@@Base+0x868>
    603c:	ldur	w8, [x29, #-28]
    6040:	asr	w8, w8, #4
    6044:	str	w8, [sp, #112]
    6048:	ldr	w8, [sp, #112]
    604c:	str	w8, [sp, #116]
    6050:	ldr	w8, [sp, #116]
    6054:	ldr	x0, [sp, #128]
    6058:	ldr	x1, [sp, #120]
    605c:	mov	w2, w8
    6060:	bl	4ea0 <mpfr_asinh@plt>
    6064:	mov	w8, wzr
    6068:	subs	w9, w8, w0
    606c:	stur	w9, [x29, #-36]
    6070:	ldr	x10, [sp, #232]
    6074:	ldr	x0, [x10, #168]
    6078:	ldr	x1, [x10, #168]
    607c:	mov	w2, w8
    6080:	bl	5060 <mpc_conj@plt>
    6084:	ldur	w8, [x29, #-32]
    6088:	cmp	w8, #0x0
    608c:	cset	w8, ge  // ge = tcont
    6090:	tbnz	w8, #0, 60a0 <mpc_acos@@Base+0x8c0>
    6094:	mov	w8, #0x2                   	// #2
    6098:	str	w8, [sp, #108]
    609c:	b	60b8 <mpc_acos@@Base+0x8d8>
    60a0:	ldur	w8, [x29, #-32]
    60a4:	mov	w9, wzr
    60a8:	mov	w10, #0x1                   	// #1
    60ac:	cmp	w8, #0x0
    60b0:	csel	w8, w9, w10, eq  // eq = none
    60b4:	str	w8, [sp, #108]
    60b8:	ldr	w8, [sp, #108]
    60bc:	ldur	w9, [x29, #-36]
    60c0:	cmp	w9, #0x0
    60c4:	cset	w9, ge  // ge = tcont
    60c8:	str	w8, [sp, #104]
    60cc:	tbnz	w9, #0, 60dc <mpc_acos@@Base+0x8fc>
    60d0:	mov	w8, #0x2                   	// #2
    60d4:	str	w8, [sp, #100]
    60d8:	b	60f4 <mpc_acos@@Base+0x914>
    60dc:	ldur	w8, [x29, #-36]
    60e0:	mov	w9, wzr
    60e4:	mov	w10, #0x1                   	// #1
    60e8:	cmp	w8, #0x0
    60ec:	csel	w8, w9, w10, eq  // eq = none
    60f0:	str	w8, [sp, #100]
    60f4:	ldr	w8, [sp, #100]
    60f8:	ldr	w9, [sp, #104]
    60fc:	orr	w8, w9, w8, lsl #2
    6100:	stur	w8, [x29, #-4]
    6104:	b	663c <mpc_acos@@Base+0xe5c>
    6108:	ldr	x8, [sp, #232]
    610c:	ldr	x9, [x8, #168]
    6110:	ldr	x9, [x9]
    6114:	str	x9, [x8, #128]
    6118:	ldr	x9, [x8, #168]
    611c:	ldr	x9, [x9, #32]
    6120:	str	x9, [x8, #120]
    6124:	ldr	x9, [x8, #128]
    6128:	str	x9, [x8, #112]
    612c:	ldr	x1, [x8, #112]
    6130:	ldr	x2, [x8, #120]
    6134:	sub	x0, x29, #0x88
    6138:	bl	54c0 <mpc_init3@plt>
    613c:	ldur	w10, [x29, #-28]
    6140:	asr	w10, w10, #4
    6144:	stur	w10, [x29, #-188]
    6148:	ldur	w10, [x29, #-188]
    614c:	cmp	w10, #0x1
    6150:	b.ne	61c8 <mpc_acos@@Base+0x9e8>  // b.any
    6154:	ldr	x8, [sp, #232]
    6158:	ldr	x9, [x8, #160]
    615c:	ldr	x9, [x9, #48]
    6160:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    6164:	cmp	x9, x10
    6168:	b.ge	619c <mpc_acos@@Base+0x9bc>  // b.tcont
    616c:	ldr	x8, [sp, #232]
    6170:	ldr	x9, [x8, #160]
    6174:	ldr	x9, [x9, #48]
    6178:	mov	x10, #0x2                   	// #2
    617c:	movk	x10, #0x8000, lsl #48
    6180:	cmp	x9, x10
    6184:	b.ne	6190 <mpc_acos@@Base+0x9b0>  // b.any
    6188:	bl	4be0 <mpfr_set_erangeflag@plt>
    618c:	b	6190 <mpc_acos@@Base+0x9b0>
    6190:	mov	w8, wzr
    6194:	str	w8, [sp, #96]
    6198:	b	61ac <mpc_acos@@Base+0x9cc>
    619c:	ldr	x8, [sp, #232]
    61a0:	ldr	x9, [x8, #160]
    61a4:	ldr	w10, [x9, #40]
    61a8:	str	w10, [sp, #96]
    61ac:	ldr	w8, [sp, #96]
    61b0:	mov	w9, #0x3                   	// #3
    61b4:	mov	w10, #0x2                   	// #2
    61b8:	cmp	w8, #0x0
    61bc:	csel	w8, w9, w10, gt
    61c0:	stur	w8, [x29, #-188]
    61c4:	b	6210 <mpc_acos@@Base+0xa30>
    61c8:	ldur	w8, [x29, #-188]
    61cc:	cmp	w8, #0x2
    61d0:	b.ne	61e0 <mpc_acos@@Base+0xa00>  // b.any
    61d4:	mov	w8, #0x3                   	// #3
    61d8:	str	w8, [sp, #92]
    61dc:	b	6208 <mpc_acos@@Base+0xa28>
    61e0:	ldur	w8, [x29, #-188]
    61e4:	cmp	w8, #0x3
    61e8:	b.ne	61f8 <mpc_acos@@Base+0xa18>  // b.any
    61ec:	mov	w8, #0x2                   	// #2
    61f0:	str	w8, [sp, #88]
    61f4:	b	6200 <mpc_acos@@Base+0xa20>
    61f8:	ldur	w8, [x29, #-188]
    61fc:	str	w8, [sp, #88]
    6200:	ldr	w8, [sp, #88]
    6204:	str	w8, [sp, #92]
    6208:	ldr	w8, [sp, #92]
    620c:	stur	w8, [x29, #-188]
    6210:	ldur	w8, [x29, #-188]
    6214:	lsl	w8, w8, #4
    6218:	add	w8, w8, #0x0
    621c:	stur	w8, [x29, #-192]
    6220:	ldr	x9, [sp, #232]
    6224:	ldr	x1, [x9, #112]
    6228:	sub	x0, x29, #0xa8
    622c:	bl	5530 <mpfr_init2@plt>
    6230:	ldur	w8, [x29, #-44]
    6234:	add	w8, w8, #0x1
    6238:	stur	w8, [x29, #-44]
    623c:	ldur	w8, [x29, #-44]
    6240:	cmp	w8, #0x2
    6244:	b.gt	6260 <mpc_acos@@Base+0xa80>
    6248:	ldr	x8, [sp, #232]
    624c:	ldr	x0, [x8, #112]
    6250:	bl	4de0 <mpc_ceil_log2@plt>
    6254:	add	x8, x0, #0x3
    6258:	str	x8, [sp, #80]
    625c:	b	6274 <mpc_acos@@Base+0xa94>
    6260:	ldr	x8, [sp, #232]
    6264:	ldr	x9, [x8, #112]
    6268:	mov	x10, #0x2                   	// #2
    626c:	sdiv	x9, x9, x10
    6270:	str	x9, [sp, #80]
    6274:	ldr	x8, [sp, #80]
    6278:	ldr	x9, [sp, #232]
    627c:	ldr	x10, [x9, #112]
    6280:	add	x8, x10, x8
    6284:	str	x8, [x9, #112]
    6288:	ldr	x1, [x9, #112]
    628c:	sub	x8, x29, #0x88
    6290:	mov	x0, x8
    6294:	str	x8, [sp, #72]
    6298:	bl	4d40 <mpfr_set_prec@plt>
    629c:	ldr	x8, [sp, #232]
    62a0:	ldr	x1, [x8, #112]
    62a4:	sub	x9, x29, #0xa8
    62a8:	mov	x0, x9
    62ac:	str	x9, [sp, #64]
    62b0:	bl	4d40 <mpfr_set_prec@plt>
    62b4:	ldr	x0, [sp, #64]
    62b8:	mov	w1, #0x1                   	// #1
    62bc:	mov	w11, wzr
    62c0:	mov	w2, w11
    62c4:	bl	54f0 <set_pi_over_2@plt>
    62c8:	mov	x8, #0x1                   	// #1
    62cc:	ldr	x9, [sp, #232]
    62d0:	str	x8, [x9, #8]
    62d4:	ldr	x1, [x9, #160]
    62d8:	ldur	w2, [x29, #-192]
    62dc:	ldr	x8, [sp, #72]
    62e0:	mov	x0, x8
    62e4:	bl	5570 <mpc_asin@plt>
    62e8:	stur	w0, [x29, #-40]
    62ec:	ldr	x8, [sp, #232]
    62f0:	ldr	x9, [x8, #96]
    62f4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    62f8:	cmp	x9, x10
    62fc:	b.ge	632c <mpc_acos@@Base+0xb4c>  // b.tcont
    6300:	ldr	x8, [sp, #232]
    6304:	ldr	x9, [x8, #96]
    6308:	mov	x10, #0x2                   	// #2
    630c:	movk	x10, #0x8000, lsl #48
    6310:	cmp	x9, x10
    6314:	b.ne	6320 <mpc_acos@@Base+0xb40>  // b.any
    6318:	bl	4be0 <mpfr_set_erangeflag@plt>
    631c:	b	6320 <mpc_acos@@Base+0xb40>
    6320:	mov	w8, wzr
    6324:	str	w8, [sp, #60]
    6328:	b	6334 <mpc_acos@@Base+0xb54>
    632c:	ldur	w8, [x29, #-96]
    6330:	str	w8, [sp, #60]
    6334:	ldr	w8, [sp, #60]
    6338:	ldr	x9, [sp, #232]
    633c:	ldr	x10, [x9, #160]
    6340:	ldr	x10, [x10, #48]
    6344:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
    6348:	cmp	x10, x11
    634c:	str	w8, [sp, #56]
    6350:	b.ge	6384 <mpc_acos@@Base+0xba4>  // b.tcont
    6354:	ldr	x8, [sp, #232]
    6358:	ldr	x9, [x8, #160]
    635c:	ldr	x9, [x9, #48]
    6360:	mov	x10, #0x2                   	// #2
    6364:	movk	x10, #0x8000, lsl #48
    6368:	cmp	x9, x10
    636c:	b.ne	6378 <mpc_acos@@Base+0xb98>  // b.any
    6370:	bl	4be0 <mpfr_set_erangeflag@plt>
    6374:	b	6378 <mpc_acos@@Base+0xb98>
    6378:	mov	w8, wzr
    637c:	str	w8, [sp, #52]
    6380:	b	6394 <mpc_acos@@Base+0xbb4>
    6384:	ldr	x8, [sp, #232]
    6388:	ldr	x9, [x8, #160]
    638c:	ldr	w10, [x9, #40]
    6390:	str	w10, [sp, #52]
    6394:	ldr	w8, [sp, #52]
    6398:	ldr	w9, [sp, #56]
    639c:	mul	w8, w9, w8
    63a0:	cmp	w8, #0x0
    63a4:	cset	w8, gt
    63a8:	tbnz	w8, #0, 63dc <mpc_acos@@Base+0xbfc>
    63ac:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    63b0:	ldr	x8, [x8, #4008]
    63b4:	ldr	x0, [x8]
    63b8:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    63bc:	add	x1, x1, #0x2a0
    63c0:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    63c4:	add	x2, x2, #0x2c1
    63c8:	mov	w3, #0xca                  	// #202
    63cc:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    63d0:	add	x4, x4, #0x2c8
    63d4:	bl	56a0 <fprintf@plt>
    63d8:	bl	5100 <abort@plt>
    63dc:	ldur	w8, [x29, #-40]
    63e0:	asr	w8, w8, #2
    63e4:	cmp	w8, #0x2
    63e8:	b.ne	63f8 <mpc_acos@@Base+0xc18>  // b.any
    63ec:	mov	w8, #0xffffffff            	// #-1
    63f0:	str	w8, [sp, #48]
    63f4:	b	6414 <mpc_acos@@Base+0xc34>
    63f8:	ldur	w8, [x29, #-40]
    63fc:	asr	w8, w8, #2
    6400:	mov	w9, wzr
    6404:	mov	w10, #0x1                   	// #1
    6408:	cmp	w8, #0x0
    640c:	csel	w8, w9, w10, eq  // eq = none
    6410:	str	w8, [sp, #48]
    6414:	ldr	w8, [sp, #48]
    6418:	stur	w8, [x29, #-36]
    641c:	sub	x9, x29, #0x88
    6420:	ldr	x10, [sp, #232]
    6424:	ldr	x11, [x10, #64]
    6428:	str	x11, [x10]
    642c:	mov	x0, x9
    6430:	sub	x1, x29, #0xa8
    6434:	mov	x2, x9
    6438:	mov	w8, wzr
    643c:	mov	w3, w8
    6440:	bl	4b40 <mpfr_sub@plt>
    6444:	ldr	x9, [sp, #232]
    6448:	ldr	x10, [x9, #64]
    644c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    6450:	cmp	x10, x11
    6454:	b.eq	6554 <mpc_acos@@Base+0xd74>  // b.none
    6458:	ldr	x8, [sp, #232]
    645c:	ldr	x9, [x8, #8]
    6460:	ldr	x10, [x8]
    6464:	cmp	x9, x10
    6468:	b.lt	6480 <mpc_acos@@Base+0xca0>  // b.tstop
    646c:	ldr	x8, [sp, #232]
    6470:	ldr	x9, [x8, #8]
    6474:	add	x9, x9, #0x1
    6478:	str	x9, [sp, #40]
    647c:	b	6490 <mpc_acos@@Base+0xcb0>
    6480:	ldr	x8, [sp, #232]
    6484:	ldr	x9, [x8]
    6488:	add	x9, x9, #0x1
    648c:	str	x9, [sp, #40]
    6490:	ldr	x8, [sp, #40]
    6494:	ldr	x9, [sp, #232]
    6498:	str	x8, [x9, #8]
    649c:	ldr	x8, [x9, #64]
    64a0:	ldr	x10, [x9, #8]
    64a4:	subs	x8, x10, x8
    64a8:	str	x8, [x9, #8]
    64ac:	ldr	x8, [x9, #8]
    64b0:	cmp	x8, #0x0
    64b4:	cset	w11, gt
    64b8:	tbnz	w11, #0, 64c8 <mpc_acos@@Base+0xce8>
    64bc:	mov	x8, xzr
    64c0:	str	x8, [sp, #32]
    64c4:	b	64d4 <mpc_acos@@Base+0xcf4>
    64c8:	ldr	x8, [sp, #232]
    64cc:	ldr	x9, [x8, #8]
    64d0:	str	x9, [sp, #32]
    64d4:	ldr	x8, [sp, #32]
    64d8:	ldr	x9, [sp, #232]
    64dc:	str	x8, [x9, #8]
    64e0:	sub	x8, x29, #0x88
    64e4:	add	x0, x8, #0x20
    64e8:	add	x1, x8, #0x20
    64ec:	mov	w10, wzr
    64f0:	mov	w2, w10
    64f4:	str	x8, [sp, #24]
    64f8:	str	w10, [sp, #20]
    64fc:	bl	4c60 <mpfr_neg@plt>
    6500:	ldur	w10, [x29, #-36]
    6504:	ldr	w11, [sp, #20]
    6508:	subs	w10, w11, w10
    650c:	stur	w10, [x29, #-36]
    6510:	ldr	x8, [sp, #232]
    6514:	ldr	x9, [x8, #112]
    6518:	ldr	x12, [x8, #8]
    651c:	subs	x1, x9, x12
    6520:	ldr	x9, [x8, #128]
    6524:	ldur	w10, [x29, #-28]
    6528:	tst	w10, #0xf
    652c:	cset	w10, eq  // eq = none
    6530:	and	w10, w10, #0x1
    6534:	add	x4, x9, w10, sxtw
    6538:	ldr	x9, [sp, #24]
    653c:	mov	x0, x9
    6540:	mov	w2, w11
    6544:	mov	w3, #0x1                   	// #1
    6548:	bl	5540 <mpfr_can_round@plt>
    654c:	cbz	w0, 6554 <mpc_acos@@Base+0xd74>
    6550:	b	6558 <mpc_acos@@Base+0xd78>
    6554:	b	6230 <mpc_acos@@Base+0xa50>
    6558:	ldr	x8, [sp, #232]
    655c:	ldr	x0, [x8, #168]
    6560:	ldur	w2, [x29, #-28]
    6564:	sub	x1, x29, #0x88
    6568:	bl	5680 <mpc_set@plt>
    656c:	stur	w0, [x29, #-40]
    6570:	ldur	w9, [x29, #-40]
    6574:	and	w9, w9, #0x3
    6578:	cmp	w9, #0x2
    657c:	b.ne	658c <mpc_acos@@Base+0xdac>  // b.any
    6580:	mov	w8, #0xffffffff            	// #-1
    6584:	str	w8, [sp, #16]
    6588:	b	65a4 <mpc_acos@@Base+0xdc4>
    658c:	ldur	w8, [x29, #-40]
    6590:	mov	w9, wzr
    6594:	mov	w10, #0x1                   	// #1
    6598:	tst	w8, #0x3
    659c:	csel	w8, w9, w10, eq  // eq = none
    65a0:	str	w8, [sp, #16]
    65a4:	ldr	w8, [sp, #16]
    65a8:	stur	w8, [x29, #-32]
    65ac:	sub	x0, x29, #0x88
    65b0:	bl	4af0 <mpc_clear@plt>
    65b4:	sub	x0, x29, #0xa8
    65b8:	bl	4e30 <mpfr_clear@plt>
    65bc:	ldur	w8, [x29, #-32]
    65c0:	cmp	w8, #0x0
    65c4:	cset	w8, ge  // ge = tcont
    65c8:	tbnz	w8, #0, 65d8 <mpc_acos@@Base+0xdf8>
    65cc:	mov	w8, #0x2                   	// #2
    65d0:	str	w8, [sp, #12]
    65d4:	b	65f0 <mpc_acos@@Base+0xe10>
    65d8:	ldur	w8, [x29, #-32]
    65dc:	mov	w9, wzr
    65e0:	mov	w10, #0x1                   	// #1
    65e4:	cmp	w8, #0x0
    65e8:	csel	w8, w9, w10, eq  // eq = none
    65ec:	str	w8, [sp, #12]
    65f0:	ldr	w8, [sp, #12]
    65f4:	ldur	w9, [x29, #-36]
    65f8:	cmp	w9, #0x0
    65fc:	cset	w9, ge  // ge = tcont
    6600:	str	w8, [sp, #8]
    6604:	tbnz	w9, #0, 6614 <mpc_acos@@Base+0xe34>
    6608:	mov	w8, #0x2                   	// #2
    660c:	str	w8, [sp, #4]
    6610:	b	662c <mpc_acos@@Base+0xe4c>
    6614:	ldur	w8, [x29, #-36]
    6618:	mov	w9, wzr
    661c:	mov	w10, #0x1                   	// #1
    6620:	cmp	w8, #0x0
    6624:	csel	w8, w9, w10, eq  // eq = none
    6628:	str	w8, [sp, #4]
    662c:	ldr	w8, [sp, #4]
    6630:	ldr	w9, [sp, #8]
    6634:	orr	w8, w9, w8, lsl #2
    6638:	stur	w8, [x29, #-4]
    663c:	ldur	w0, [x29, #-4]
    6640:	add	sp, sp, #0x230
    6644:	ldr	x28, [sp, #16]
    6648:	ldp	x29, x30, [sp], #32
    664c:	ret

0000000000006650 <mpc_acosh@@Base>:
    6650:	sub	sp, sp, #0x130
    6654:	stp	x29, x30, [sp, #272]
    6658:	str	x28, [sp, #288]
    665c:	add	x29, sp, #0x110
    6660:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    6664:	stur	x0, [x29, #-16]
    6668:	stur	x1, [x29, #-24]
    666c:	stur	w2, [x29, #-28]
    6670:	ldur	x9, [x29, #-24]
    6674:	ldr	x9, [x9, #16]
    6678:	cmp	x9, x8
    667c:	b.ne	66b4 <mpc_acosh@@Base+0x64>  // b.any
    6680:	ldur	x8, [x29, #-24]
    6684:	ldr	x8, [x8, #48]
    6688:	mov	x9, #0x2                   	// #2
    668c:	movk	x9, #0x8000, lsl #48
    6690:	cmp	x8, x9
    6694:	b.ne	66b4 <mpc_acosh@@Base+0x64>  // b.any
    6698:	ldur	x0, [x29, #-16]
    669c:	bl	4b20 <mpfr_set_nan@plt>
    66a0:	ldur	x8, [x29, #-16]
    66a4:	add	x0, x8, #0x20
    66a8:	bl	4b20 <mpfr_set_nan@plt>
    66ac:	stur	wzr, [x29, #-4]
    66b0:	b	6b5c <mpc_acosh@@Base+0x50c>
    66b4:	ldur	x8, [x29, #-16]
    66b8:	ldr	x1, [x8, #32]
    66bc:	ldur	x8, [x29, #-16]
    66c0:	ldr	x2, [x8]
    66c4:	sub	x0, x29, #0x60
    66c8:	bl	54c0 <mpc_init3@plt>
    66cc:	ldur	x8, [x29, #-24]
    66d0:	ldr	w9, [x8, #40]
    66d4:	cmp	w9, #0x0
    66d8:	cset	w9, ge  // ge = tcont
    66dc:	tbnz	w9, #0, 6908 <mpc_acosh@@Base+0x2b8>
    66e0:	ldur	x1, [x29, #-24]
    66e4:	ldur	w8, [x29, #-28]
    66e8:	asr	w8, w8, #4
    66ec:	cmp	w8, #0x2
    66f0:	str	x1, [sp, #128]
    66f4:	b.ne	6704 <mpc_acosh@@Base+0xb4>  // b.any
    66f8:	mov	w8, #0x3                   	// #3
    66fc:	str	w8, [sp, #124]
    6700:	b	6734 <mpc_acosh@@Base+0xe4>
    6704:	ldur	w8, [x29, #-28]
    6708:	asr	w8, w8, #4
    670c:	cmp	w8, #0x3
    6710:	b.ne	6720 <mpc_acosh@@Base+0xd0>  // b.any
    6714:	mov	w8, #0x2                   	// #2
    6718:	str	w8, [sp, #120]
    671c:	b	672c <mpc_acosh@@Base+0xdc>
    6720:	ldur	w8, [x29, #-28]
    6724:	asr	w8, w8, #4
    6728:	str	w8, [sp, #120]
    672c:	ldr	w8, [sp, #120]
    6730:	str	w8, [sp, #124]
    6734:	ldr	w8, [sp, #124]
    6738:	ldur	w9, [x29, #-28]
    673c:	and	w9, w9, #0xf
    6740:	add	w2, w8, w9, lsl #4
    6744:	sub	x10, x29, #0x60
    6748:	mov	x0, x10
    674c:	ldr	x1, [sp, #128]
    6750:	str	x10, [sp, #112]
    6754:	bl	5170 <mpc_acos@plt>
    6758:	stur	w0, [x29, #-132]
    675c:	ldur	q0, [x29, #-96]
    6760:	stur	q0, [x29, #-128]
    6764:	ldur	q0, [x29, #-80]
    6768:	stur	q0, [x29, #-112]
    676c:	ldur	q0, [x29, #-64]
    6770:	stur	q0, [x29, #-96]
    6774:	ldur	q0, [x29, #-48]
    6778:	stur	q0, [x29, #-80]
    677c:	ldur	q0, [x29, #-128]
    6780:	stur	q0, [x29, #-64]
    6784:	ldur	q0, [x29, #-112]
    6788:	stur	q0, [x29, #-48]
    678c:	ldr	x10, [sp, #112]
    6790:	add	x0, x10, #0x20
    6794:	add	x1, x10, #0x20
    6798:	mov	w8, wzr
    679c:	mov	w2, w8
    67a0:	bl	4c60 <mpfr_neg@plt>
    67a4:	ldur	w8, [x29, #-132]
    67a8:	asr	w8, w8, #2
    67ac:	cmp	w8, #0x2
    67b0:	b.ne	67c0 <mpc_acosh@@Base+0x170>  // b.any
    67b4:	mov	w8, #0xffffffff            	// #-1
    67b8:	str	w8, [sp, #108]
    67bc:	b	67dc <mpc_acosh@@Base+0x18c>
    67c0:	ldur	w8, [x29, #-132]
    67c4:	asr	w8, w8, #2
    67c8:	mov	w9, wzr
    67cc:	mov	w10, #0x1                   	// #1
    67d0:	cmp	w8, #0x0
    67d4:	csel	w8, w9, w10, eq  // eq = none
    67d8:	str	w8, [sp, #108]
    67dc:	ldr	w8, [sp, #108]
    67e0:	cmp	w8, #0x0
    67e4:	cset	w8, ge  // ge = tcont
    67e8:	tbnz	w8, #0, 67f8 <mpc_acosh@@Base+0x1a8>
    67ec:	mov	w8, #0x2                   	// #2
    67f0:	str	w8, [sp, #104]
    67f4:	b	6848 <mpc_acosh@@Base+0x1f8>
    67f8:	ldur	w8, [x29, #-132]
    67fc:	asr	w8, w8, #2
    6800:	cmp	w8, #0x2
    6804:	b.ne	6814 <mpc_acosh@@Base+0x1c4>  // b.any
    6808:	mov	w8, #0xffffffff            	// #-1
    680c:	str	w8, [sp, #100]
    6810:	b	6830 <mpc_acosh@@Base+0x1e0>
    6814:	ldur	w8, [x29, #-132]
    6818:	asr	w8, w8, #2
    681c:	mov	w9, wzr
    6820:	mov	w10, #0x1                   	// #1
    6824:	cmp	w8, #0x0
    6828:	csel	w8, w9, w10, eq  // eq = none
    682c:	str	w8, [sp, #100]
    6830:	ldr	w8, [sp, #100]
    6834:	mov	w9, wzr
    6838:	mov	w10, #0x1                   	// #1
    683c:	cmp	w8, #0x0
    6840:	csel	w8, w9, w10, eq  // eq = none
    6844:	str	w8, [sp, #104]
    6848:	ldr	w8, [sp, #104]
    684c:	ldur	w9, [x29, #-132]
    6850:	and	w9, w9, #0x3
    6854:	cmp	w9, #0x2
    6858:	str	w8, [sp, #96]
    685c:	b.ne	686c <mpc_acosh@@Base+0x21c>  // b.any
    6860:	mov	w8, #0xffffffff            	// #-1
    6864:	str	w8, [sp, #92]
    6868:	b	6884 <mpc_acosh@@Base+0x234>
    686c:	ldur	w8, [x29, #-132]
    6870:	mov	w9, wzr
    6874:	mov	w10, #0x1                   	// #1
    6878:	tst	w8, #0x3
    687c:	csel	w8, w9, w10, eq  // eq = none
    6880:	str	w8, [sp, #92]
    6884:	ldr	w8, [sp, #92]
    6888:	mov	w9, wzr
    688c:	subs	w8, w9, w8
    6890:	cmp	w8, #0x0
    6894:	cset	w8, ge  // ge = tcont
    6898:	tbnz	w8, #0, 68a8 <mpc_acosh@@Base+0x258>
    689c:	mov	w8, #0x2                   	// #2
    68a0:	str	w8, [sp, #88]
    68a4:	b	68f4 <mpc_acosh@@Base+0x2a4>
    68a8:	ldur	w8, [x29, #-132]
    68ac:	and	w8, w8, #0x3
    68b0:	cmp	w8, #0x2
    68b4:	b.ne	68c4 <mpc_acosh@@Base+0x274>  // b.any
    68b8:	mov	w8, #0xffffffff            	// #-1
    68bc:	str	w8, [sp, #84]
    68c0:	b	68dc <mpc_acosh@@Base+0x28c>
    68c4:	ldur	w8, [x29, #-132]
    68c8:	mov	w9, wzr
    68cc:	mov	w10, #0x1                   	// #1
    68d0:	tst	w8, #0x3
    68d4:	csel	w8, w9, w10, eq  // eq = none
    68d8:	str	w8, [sp, #84]
    68dc:	ldr	w8, [sp, #84]
    68e0:	mov	w9, wzr
    68e4:	mov	w10, #0x1                   	// #1
    68e8:	cmn	w8, #0x0
    68ec:	csel	w8, w9, w10, eq  // eq = none
    68f0:	str	w8, [sp, #88]
    68f4:	ldr	w8, [sp, #88]
    68f8:	ldr	w9, [sp, #96]
    68fc:	orr	w8, w9, w8, lsl #2
    6900:	stur	w8, [x29, #-132]
    6904:	b	6b30 <mpc_acosh@@Base+0x4e0>
    6908:	ldur	x1, [x29, #-24]
    690c:	ldur	w8, [x29, #-28]
    6910:	ldur	w9, [x29, #-28]
    6914:	and	w9, w9, #0xf
    6918:	cmp	w9, #0x2
    691c:	str	x1, [sp, #72]
    6920:	str	w8, [sp, #68]
    6924:	b.ne	6934 <mpc_acosh@@Base+0x2e4>  // b.any
    6928:	mov	w8, #0x3                   	// #3
    692c:	str	w8, [sp, #64]
    6930:	b	6964 <mpc_acosh@@Base+0x314>
    6934:	ldur	w8, [x29, #-28]
    6938:	and	w8, w8, #0xf
    693c:	cmp	w8, #0x3
    6940:	b.ne	6950 <mpc_acosh@@Base+0x300>  // b.any
    6944:	mov	w8, #0x2                   	// #2
    6948:	str	w8, [sp, #60]
    694c:	b	695c <mpc_acosh@@Base+0x30c>
    6950:	ldur	w8, [x29, #-28]
    6954:	and	w8, w8, #0xf
    6958:	str	w8, [sp, #60]
    695c:	ldr	w8, [sp, #60]
    6960:	str	w8, [sp, #64]
    6964:	ldr	w8, [sp, #64]
    6968:	lsl	w8, w8, #4
    696c:	ldr	w9, [sp, #68]
    6970:	add	w2, w8, w9, asr #4
    6974:	sub	x10, x29, #0x60
    6978:	mov	x0, x10
    697c:	ldr	x1, [sp, #72]
    6980:	str	x10, [sp, #48]
    6984:	bl	5170 <mpc_acos@plt>
    6988:	stur	w0, [x29, #-132]
    698c:	ldur	q0, [x29, #-96]
    6990:	stur	q0, [x29, #-128]
    6994:	ldur	q0, [x29, #-80]
    6998:	stur	q0, [x29, #-112]
    699c:	ldur	q0, [x29, #-64]
    69a0:	stur	q0, [x29, #-96]
    69a4:	ldur	q0, [x29, #-48]
    69a8:	stur	q0, [x29, #-80]
    69ac:	ldur	q0, [x29, #-128]
    69b0:	stur	q0, [x29, #-64]
    69b4:	ldur	q0, [x29, #-112]
    69b8:	stur	q0, [x29, #-48]
    69bc:	ldr	x0, [sp, #48]
    69c0:	ldr	x1, [sp, #48]
    69c4:	mov	w8, wzr
    69c8:	mov	w2, w8
    69cc:	bl	4c60 <mpfr_neg@plt>
    69d0:	ldur	w8, [x29, #-132]
    69d4:	asr	w8, w8, #2
    69d8:	cmp	w8, #0x2
    69dc:	b.ne	69ec <mpc_acosh@@Base+0x39c>  // b.any
    69e0:	mov	w8, #0xffffffff            	// #-1
    69e4:	str	w8, [sp, #44]
    69e8:	b	6a08 <mpc_acosh@@Base+0x3b8>
    69ec:	ldur	w8, [x29, #-132]
    69f0:	asr	w8, w8, #2
    69f4:	mov	w9, wzr
    69f8:	mov	w10, #0x1                   	// #1
    69fc:	cmp	w8, #0x0
    6a00:	csel	w8, w9, w10, eq  // eq = none
    6a04:	str	w8, [sp, #44]
    6a08:	ldr	w8, [sp, #44]
    6a0c:	mov	w9, wzr
    6a10:	subs	w8, w9, w8
    6a14:	cmp	w8, #0x0
    6a18:	cset	w8, ge  // ge = tcont
    6a1c:	tbnz	w8, #0, 6a2c <mpc_acosh@@Base+0x3dc>
    6a20:	mov	w8, #0x2                   	// #2
    6a24:	str	w8, [sp, #40]
    6a28:	b	6a7c <mpc_acosh@@Base+0x42c>
    6a2c:	ldur	w8, [x29, #-132]
    6a30:	asr	w8, w8, #2
    6a34:	cmp	w8, #0x2
    6a38:	b.ne	6a48 <mpc_acosh@@Base+0x3f8>  // b.any
    6a3c:	mov	w8, #0xffffffff            	// #-1
    6a40:	str	w8, [sp, #36]
    6a44:	b	6a64 <mpc_acosh@@Base+0x414>
    6a48:	ldur	w8, [x29, #-132]
    6a4c:	asr	w8, w8, #2
    6a50:	mov	w9, wzr
    6a54:	mov	w10, #0x1                   	// #1
    6a58:	cmp	w8, #0x0
    6a5c:	csel	w8, w9, w10, eq  // eq = none
    6a60:	str	w8, [sp, #36]
    6a64:	ldr	w8, [sp, #36]
    6a68:	mov	w9, wzr
    6a6c:	mov	w10, #0x1                   	// #1
    6a70:	cmn	w8, #0x0
    6a74:	csel	w8, w9, w10, eq  // eq = none
    6a78:	str	w8, [sp, #40]
    6a7c:	ldr	w8, [sp, #40]
    6a80:	ldur	w9, [x29, #-132]
    6a84:	and	w9, w9, #0x3
    6a88:	cmp	w9, #0x2
    6a8c:	str	w8, [sp, #32]
    6a90:	b.ne	6aa0 <mpc_acosh@@Base+0x450>  // b.any
    6a94:	mov	w8, #0xffffffff            	// #-1
    6a98:	str	w8, [sp, #28]
    6a9c:	b	6ab8 <mpc_acosh@@Base+0x468>
    6aa0:	ldur	w8, [x29, #-132]
    6aa4:	mov	w9, wzr
    6aa8:	mov	w10, #0x1                   	// #1
    6aac:	tst	w8, #0x3
    6ab0:	csel	w8, w9, w10, eq  // eq = none
    6ab4:	str	w8, [sp, #28]
    6ab8:	ldr	w8, [sp, #28]
    6abc:	cmp	w8, #0x0
    6ac0:	cset	w8, ge  // ge = tcont
    6ac4:	tbnz	w8, #0, 6ad4 <mpc_acosh@@Base+0x484>
    6ac8:	mov	w8, #0x2                   	// #2
    6acc:	str	w8, [sp, #24]
    6ad0:	b	6b20 <mpc_acosh@@Base+0x4d0>
    6ad4:	ldur	w8, [x29, #-132]
    6ad8:	and	w8, w8, #0x3
    6adc:	cmp	w8, #0x2
    6ae0:	b.ne	6af0 <mpc_acosh@@Base+0x4a0>  // b.any
    6ae4:	mov	w8, #0xffffffff            	// #-1
    6ae8:	str	w8, [sp, #20]
    6aec:	b	6b08 <mpc_acosh@@Base+0x4b8>
    6af0:	ldur	w8, [x29, #-132]
    6af4:	mov	w9, wzr
    6af8:	mov	w10, #0x1                   	// #1
    6afc:	tst	w8, #0x3
    6b00:	csel	w8, w9, w10, eq  // eq = none
    6b04:	str	w8, [sp, #20]
    6b08:	ldr	w8, [sp, #20]
    6b0c:	mov	w9, wzr
    6b10:	mov	w10, #0x1                   	// #1
    6b14:	cmp	w8, #0x0
    6b18:	csel	w8, w9, w10, eq  // eq = none
    6b1c:	str	w8, [sp, #24]
    6b20:	ldr	w8, [sp, #24]
    6b24:	ldr	w9, [sp, #32]
    6b28:	orr	w8, w9, w8, lsl #2
    6b2c:	stur	w8, [x29, #-132]
    6b30:	ldur	x0, [x29, #-16]
    6b34:	ldur	w2, [x29, #-28]
    6b38:	sub	x8, x29, #0x60
    6b3c:	mov	x1, x8
    6b40:	str	x8, [sp, #8]
    6b44:	bl	5680 <mpc_set@plt>
    6b48:	ldr	x8, [sp, #8]
    6b4c:	mov	x0, x8
    6b50:	bl	4af0 <mpc_clear@plt>
    6b54:	ldur	w9, [x29, #-132]
    6b58:	stur	w9, [x29, #-4]
    6b5c:	ldur	w0, [x29, #-4]
    6b60:	ldr	x28, [sp, #288]
    6b64:	ldp	x29, x30, [sp, #272]
    6b68:	add	sp, sp, #0x130
    6b6c:	ret

0000000000006b70 <mpc_add@@Base>:
    6b70:	sub	sp, sp, #0x40
    6b74:	stp	x29, x30, [sp, #48]
    6b78:	add	x29, sp, #0x30
    6b7c:	stur	x0, [x29, #-8]
    6b80:	stur	x1, [x29, #-16]
    6b84:	str	x2, [sp, #24]
    6b88:	str	w3, [sp, #20]
    6b8c:	ldur	x0, [x29, #-8]
    6b90:	ldur	x1, [x29, #-16]
    6b94:	ldr	x2, [sp, #24]
    6b98:	ldr	w8, [sp, #20]
    6b9c:	and	w3, w8, #0xf
    6ba0:	bl	4f50 <mpfr_add@plt>
    6ba4:	str	w0, [sp, #16]
    6ba8:	ldur	x9, [x29, #-8]
    6bac:	add	x0, x9, #0x20
    6bb0:	ldur	x9, [x29, #-16]
    6bb4:	add	x1, x9, #0x20
    6bb8:	ldr	x9, [sp, #24]
    6bbc:	add	x2, x9, #0x20
    6bc0:	ldr	w8, [sp, #20]
    6bc4:	asr	w3, w8, #4
    6bc8:	bl	4f50 <mpfr_add@plt>
    6bcc:	str	w0, [sp, #12]
    6bd0:	ldr	w8, [sp, #16]
    6bd4:	cmp	w8, #0x0
    6bd8:	cset	w8, ge  // ge = tcont
    6bdc:	tbnz	w8, #0, 6bec <mpc_add@@Base+0x7c>
    6be0:	mov	w8, #0x2                   	// #2
    6be4:	str	w8, [sp, #8]
    6be8:	b	6c04 <mpc_add@@Base+0x94>
    6bec:	ldr	w8, [sp, #16]
    6bf0:	mov	w9, wzr
    6bf4:	mov	w10, #0x1                   	// #1
    6bf8:	cmp	w8, #0x0
    6bfc:	csel	w8, w9, w10, eq  // eq = none
    6c00:	str	w8, [sp, #8]
    6c04:	ldr	w8, [sp, #8]
    6c08:	ldr	w9, [sp, #12]
    6c0c:	cmp	w9, #0x0
    6c10:	cset	w9, ge  // ge = tcont
    6c14:	str	w8, [sp, #4]
    6c18:	tbnz	w9, #0, 6c28 <mpc_add@@Base+0xb8>
    6c1c:	mov	w8, #0x2                   	// #2
    6c20:	str	w8, [sp]
    6c24:	b	6c40 <mpc_add@@Base+0xd0>
    6c28:	ldr	w8, [sp, #12]
    6c2c:	mov	w9, wzr
    6c30:	mov	w10, #0x1                   	// #1
    6c34:	cmp	w8, #0x0
    6c38:	csel	w8, w9, w10, eq  // eq = none
    6c3c:	str	w8, [sp]
    6c40:	ldr	w8, [sp]
    6c44:	ldr	w9, [sp, #4]
    6c48:	orr	w0, w9, w8, lsl #2
    6c4c:	ldp	x29, x30, [sp, #48]
    6c50:	add	sp, sp, #0x40
    6c54:	ret

0000000000006c58 <mpc_add_fr@@Base>:
    6c58:	sub	sp, sp, #0x40
    6c5c:	stp	x29, x30, [sp, #48]
    6c60:	add	x29, sp, #0x30
    6c64:	stur	x0, [x29, #-8]
    6c68:	stur	x1, [x29, #-16]
    6c6c:	str	x2, [sp, #24]
    6c70:	str	w3, [sp, #20]
    6c74:	ldur	x0, [x29, #-8]
    6c78:	ldur	x1, [x29, #-16]
    6c7c:	ldr	x2, [sp, #24]
    6c80:	ldr	w8, [sp, #20]
    6c84:	and	w3, w8, #0xf
    6c88:	bl	4f50 <mpfr_add@plt>
    6c8c:	str	w0, [sp, #16]
    6c90:	ldur	x9, [x29, #-8]
    6c94:	add	x0, x9, #0x20
    6c98:	ldur	x9, [x29, #-16]
    6c9c:	add	x1, x9, #0x20
    6ca0:	ldr	w8, [sp, #20]
    6ca4:	asr	w2, w8, #4
    6ca8:	ldur	x9, [x29, #-16]
    6cac:	ldr	w3, [x9, #40]
    6cb0:	bl	52d0 <mpfr_set4@plt>
    6cb4:	str	w0, [sp, #12]
    6cb8:	ldr	w8, [sp, #16]
    6cbc:	cmp	w8, #0x0
    6cc0:	cset	w8, ge  // ge = tcont
    6cc4:	tbnz	w8, #0, 6cd4 <mpc_add_fr@@Base+0x7c>
    6cc8:	mov	w8, #0x2                   	// #2
    6ccc:	str	w8, [sp, #8]
    6cd0:	b	6cec <mpc_add_fr@@Base+0x94>
    6cd4:	ldr	w8, [sp, #16]
    6cd8:	mov	w9, wzr
    6cdc:	mov	w10, #0x1                   	// #1
    6ce0:	cmp	w8, #0x0
    6ce4:	csel	w8, w9, w10, eq  // eq = none
    6ce8:	str	w8, [sp, #8]
    6cec:	ldr	w8, [sp, #8]
    6cf0:	ldr	w9, [sp, #12]
    6cf4:	cmp	w9, #0x0
    6cf8:	cset	w9, ge  // ge = tcont
    6cfc:	str	w8, [sp, #4]
    6d00:	tbnz	w9, #0, 6d10 <mpc_add_fr@@Base+0xb8>
    6d04:	mov	w8, #0x2                   	// #2
    6d08:	str	w8, [sp]
    6d0c:	b	6d28 <mpc_add_fr@@Base+0xd0>
    6d10:	ldr	w8, [sp, #12]
    6d14:	mov	w9, wzr
    6d18:	mov	w10, #0x1                   	// #1
    6d1c:	cmp	w8, #0x0
    6d20:	csel	w8, w9, w10, eq  // eq = none
    6d24:	str	w8, [sp]
    6d28:	ldr	w8, [sp]
    6d2c:	ldr	w9, [sp, #4]
    6d30:	orr	w0, w9, w8, lsl #2
    6d34:	ldp	x29, x30, [sp, #48]
    6d38:	add	sp, sp, #0x40
    6d3c:	ret

0000000000006d40 <mpc_add_si@@Base>:
    6d40:	sub	sp, sp, #0x40
    6d44:	stp	x29, x30, [sp, #48]
    6d48:	add	x29, sp, #0x30
    6d4c:	stur	x0, [x29, #-8]
    6d50:	stur	x1, [x29, #-16]
    6d54:	str	x2, [sp, #24]
    6d58:	str	w3, [sp, #20]
    6d5c:	ldur	x0, [x29, #-8]
    6d60:	ldur	x1, [x29, #-16]
    6d64:	ldr	x2, [sp, #24]
    6d68:	ldr	w8, [sp, #20]
    6d6c:	and	w3, w8, #0xf
    6d70:	bl	5360 <mpfr_add_si@plt>
    6d74:	str	w0, [sp, #16]
    6d78:	ldur	x9, [x29, #-8]
    6d7c:	add	x0, x9, #0x20
    6d80:	ldur	x9, [x29, #-16]
    6d84:	add	x1, x9, #0x20
    6d88:	ldr	w8, [sp, #20]
    6d8c:	asr	w2, w8, #4
    6d90:	ldur	x9, [x29, #-16]
    6d94:	ldr	w3, [x9, #40]
    6d98:	bl	52d0 <mpfr_set4@plt>
    6d9c:	str	w0, [sp, #12]
    6da0:	ldr	w8, [sp, #16]
    6da4:	cmp	w8, #0x0
    6da8:	cset	w8, ge  // ge = tcont
    6dac:	tbnz	w8, #0, 6dbc <mpc_add_si@@Base+0x7c>
    6db0:	mov	w8, #0x2                   	// #2
    6db4:	str	w8, [sp, #8]
    6db8:	b	6dd4 <mpc_add_si@@Base+0x94>
    6dbc:	ldr	w8, [sp, #16]
    6dc0:	mov	w9, wzr
    6dc4:	mov	w10, #0x1                   	// #1
    6dc8:	cmp	w8, #0x0
    6dcc:	csel	w8, w9, w10, eq  // eq = none
    6dd0:	str	w8, [sp, #8]
    6dd4:	ldr	w8, [sp, #8]
    6dd8:	ldr	w9, [sp, #12]
    6ddc:	cmp	w9, #0x0
    6de0:	cset	w9, ge  // ge = tcont
    6de4:	str	w8, [sp, #4]
    6de8:	tbnz	w9, #0, 6df8 <mpc_add_si@@Base+0xb8>
    6dec:	mov	w8, #0x2                   	// #2
    6df0:	str	w8, [sp]
    6df4:	b	6e10 <mpc_add_si@@Base+0xd0>
    6df8:	ldr	w8, [sp, #12]
    6dfc:	mov	w9, wzr
    6e00:	mov	w10, #0x1                   	// #1
    6e04:	cmp	w8, #0x0
    6e08:	csel	w8, w9, w10, eq  // eq = none
    6e0c:	str	w8, [sp]
    6e10:	ldr	w8, [sp]
    6e14:	ldr	w9, [sp, #4]
    6e18:	orr	w0, w9, w8, lsl #2
    6e1c:	ldp	x29, x30, [sp, #48]
    6e20:	add	sp, sp, #0x40
    6e24:	ret

0000000000006e28 <mpc_add_ui@@Base>:
    6e28:	sub	sp, sp, #0x40
    6e2c:	stp	x29, x30, [sp, #48]
    6e30:	add	x29, sp, #0x30
    6e34:	stur	x0, [x29, #-8]
    6e38:	stur	x1, [x29, #-16]
    6e3c:	str	x2, [sp, #24]
    6e40:	str	w3, [sp, #20]
    6e44:	ldur	x0, [x29, #-8]
    6e48:	ldur	x1, [x29, #-16]
    6e4c:	ldr	x2, [sp, #24]
    6e50:	ldr	w8, [sp, #20]
    6e54:	and	w3, w8, #0xf
    6e58:	bl	4fe0 <mpfr_add_ui@plt>
    6e5c:	str	w0, [sp, #16]
    6e60:	ldur	x9, [x29, #-8]
    6e64:	add	x0, x9, #0x20
    6e68:	ldur	x9, [x29, #-16]
    6e6c:	add	x1, x9, #0x20
    6e70:	ldr	w8, [sp, #20]
    6e74:	asr	w2, w8, #4
    6e78:	ldur	x9, [x29, #-16]
    6e7c:	ldr	w3, [x9, #40]
    6e80:	bl	52d0 <mpfr_set4@plt>
    6e84:	str	w0, [sp, #12]
    6e88:	ldr	w8, [sp, #16]
    6e8c:	cmp	w8, #0x0
    6e90:	cset	w8, ge  // ge = tcont
    6e94:	tbnz	w8, #0, 6ea4 <mpc_add_ui@@Base+0x7c>
    6e98:	mov	w8, #0x2                   	// #2
    6e9c:	str	w8, [sp, #8]
    6ea0:	b	6ebc <mpc_add_ui@@Base+0x94>
    6ea4:	ldr	w8, [sp, #16]
    6ea8:	mov	w9, wzr
    6eac:	mov	w10, #0x1                   	// #1
    6eb0:	cmp	w8, #0x0
    6eb4:	csel	w8, w9, w10, eq  // eq = none
    6eb8:	str	w8, [sp, #8]
    6ebc:	ldr	w8, [sp, #8]
    6ec0:	ldr	w9, [sp, #12]
    6ec4:	cmp	w9, #0x0
    6ec8:	cset	w9, ge  // ge = tcont
    6ecc:	str	w8, [sp, #4]
    6ed0:	tbnz	w9, #0, 6ee0 <mpc_add_ui@@Base+0xb8>
    6ed4:	mov	w8, #0x2                   	// #2
    6ed8:	str	w8, [sp]
    6edc:	b	6ef8 <mpc_add_ui@@Base+0xd0>
    6ee0:	ldr	w8, [sp, #12]
    6ee4:	mov	w9, wzr
    6ee8:	mov	w10, #0x1                   	// #1
    6eec:	cmp	w8, #0x0
    6ef0:	csel	w8, w9, w10, eq  // eq = none
    6ef4:	str	w8, [sp]
    6ef8:	ldr	w8, [sp]
    6efc:	ldr	w9, [sp, #4]
    6f00:	orr	w0, w9, w8, lsl #2
    6f04:	ldp	x29, x30, [sp, #48]
    6f08:	add	sp, sp, #0x40
    6f0c:	ret

0000000000006f10 <mpc_arg@@Base>:
    6f10:	sub	sp, sp, #0x30
    6f14:	stp	x29, x30, [sp, #32]
    6f18:	add	x29, sp, #0x20
    6f1c:	stur	x0, [x29, #-8]
    6f20:	str	x1, [sp, #16]
    6f24:	str	w2, [sp, #12]
    6f28:	ldur	x0, [x29, #-8]
    6f2c:	ldr	x8, [sp, #16]
    6f30:	add	x1, x8, #0x20
    6f34:	ldr	x2, [sp, #16]
    6f38:	ldr	w3, [sp, #12]
    6f3c:	bl	4d60 <mpfr_atan2@plt>
    6f40:	ldp	x29, x30, [sp, #32]
    6f44:	add	sp, sp, #0x30
    6f48:	ret

0000000000006f4c <mpc_asin@@Base>:
    6f4c:	stp	x29, x30, [sp, #-32]!
    6f50:	str	x28, [sp, #16]
    6f54:	mov	x29, sp
    6f58:	sub	sp, sp, #0x1f0
    6f5c:	mov	x8, #0x2                   	// #2
    6f60:	movk	x8, #0x8000, lsl #48
    6f64:	stur	x0, [x29, #-16]
    6f68:	stur	x1, [x29, #-24]
    6f6c:	stur	w2, [x29, #-28]
    6f70:	stur	wzr, [x29, #-136]
    6f74:	ldur	x9, [x29, #-24]
    6f78:	ldr	x9, [x9, #16]
    6f7c:	cmp	x9, x8
    6f80:	b.eq	6f9c <mpc_asin@@Base+0x50>  // b.none
    6f84:	ldur	x8, [x29, #-24]
    6f88:	ldr	x8, [x8, #48]
    6f8c:	mov	x9, #0x2                   	// #2
    6f90:	movk	x9, #0x8000, lsl #48
    6f94:	cmp	x8, x9
    6f98:	b.ne	7054 <mpc_asin@@Base+0x108>  // b.any
    6f9c:	ldur	x8, [x29, #-24]
    6fa0:	ldr	x8, [x8, #16]
    6fa4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    6fa8:	cmp	x8, x9
    6fac:	b.eq	6fc4 <mpc_asin@@Base+0x78>  // b.none
    6fb0:	ldur	x8, [x29, #-24]
    6fb4:	ldr	x8, [x8, #48]
    6fb8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    6fbc:	cmp	x8, x9
    6fc0:	b.ne	6ff4 <mpc_asin@@Base+0xa8>  // b.any
    6fc4:	ldur	x0, [x29, #-16]
    6fc8:	bl	4b20 <mpfr_set_nan@plt>
    6fcc:	ldur	x8, [x29, #-16]
    6fd0:	add	x0, x8, #0x20
    6fd4:	ldur	x8, [x29, #-24]
    6fd8:	ldr	w9, [x8, #40]
    6fdc:	mov	w10, #0xffffffff            	// #-1
    6fe0:	mov	w11, #0x1                   	// #1
    6fe4:	cmp	w9, #0x0
    6fe8:	csel	w1, w10, w11, lt  // lt = tstop
    6fec:	bl	5220 <mpfr_set_inf@plt>
    6ff0:	b	704c <mpc_asin@@Base+0x100>
    6ff4:	ldur	x8, [x29, #-24]
    6ff8:	ldr	x8, [x8, #16]
    6ffc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    7000:	cmp	x8, x9
    7004:	b.ne	7038 <mpc_asin@@Base+0xec>  // b.any
    7008:	ldur	x0, [x29, #-16]
    700c:	ldur	x1, [x29, #-24]
    7010:	ldur	x8, [x29, #-24]
    7014:	ldr	w3, [x8, #8]
    7018:	mov	w9, wzr
    701c:	mov	w2, w9
    7020:	bl	52d0 <mpfr_set4@plt>
    7024:	ldur	x8, [x29, #-16]
    7028:	add	x8, x8, #0x20
    702c:	mov	x0, x8
    7030:	bl	4b20 <mpfr_set_nan@plt>
    7034:	b	704c <mpc_asin@@Base+0x100>
    7038:	ldur	x0, [x29, #-16]
    703c:	bl	4b20 <mpfr_set_nan@plt>
    7040:	ldur	x8, [x29, #-16]
    7044:	add	x0, x8, #0x20
    7048:	bl	4b20 <mpfr_set_nan@plt>
    704c:	stur	wzr, [x29, #-4]
    7050:	b	7ba4 <mpc_asin@@Base+0xc58>
    7054:	ldur	x8, [x29, #-24]
    7058:	ldr	x8, [x8, #16]
    705c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    7060:	cmp	x8, x9
    7064:	b.eq	707c <mpc_asin@@Base+0x130>  // b.none
    7068:	ldur	x8, [x29, #-24]
    706c:	ldr	x8, [x8, #48]
    7070:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    7074:	cmp	x8, x9
    7078:	b.ne	71b8 <mpc_asin@@Base+0x26c>  // b.any
    707c:	ldur	x8, [x29, #-24]
    7080:	ldr	x8, [x8, #16]
    7084:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    7088:	cmp	x8, x9
    708c:	b.ne	7128 <mpc_asin@@Base+0x1dc>  // b.any
    7090:	ldur	x8, [x29, #-24]
    7094:	ldr	x8, [x8, #48]
    7098:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    709c:	cmp	x8, x9
    70a0:	cset	w10, eq  // eq = none
    70a4:	and	w10, w10, #0x1
    70a8:	stur	w10, [x29, #-144]
    70ac:	ldur	x0, [x29, #-16]
    70b0:	ldur	x8, [x29, #-24]
    70b4:	ldr	w10, [x8, #8]
    70b8:	mov	w11, #0xffffffff            	// #-1
    70bc:	mov	w12, #0x1                   	// #1
    70c0:	cmp	w10, #0x0
    70c4:	csel	w1, w11, w12, lt  // lt = tstop
    70c8:	ldur	w10, [x29, #-28]
    70cc:	and	w2, w10, #0xf
    70d0:	str	w11, [sp, #236]
    70d4:	str	w12, [sp, #232]
    70d8:	bl	54f0 <set_pi_over_2@plt>
    70dc:	stur	w0, [x29, #-140]
    70e0:	ldur	x8, [x29, #-16]
    70e4:	add	x0, x8, #0x20
    70e8:	ldur	x8, [x29, #-24]
    70ec:	ldr	w10, [x8, #40]
    70f0:	cmp	w10, #0x0
    70f4:	ldr	w10, [sp, #236]
    70f8:	ldr	w11, [sp, #232]
    70fc:	csel	w1, w10, w11, lt  // lt = tstop
    7100:	bl	5220 <mpfr_set_inf@plt>
    7104:	ldur	w10, [x29, #-144]
    7108:	cbz	w10, 7124 <mpc_asin@@Base+0x1d8>
    710c:	ldur	x0, [x29, #-16]
    7110:	ldur	x1, [x29, #-16]
    7114:	mov	x2, #0x1                   	// #1
    7118:	mov	w8, wzr
    711c:	mov	w3, w8
    7120:	bl	5420 <mpfr_div_2ui@plt>
    7124:	b	7178 <mpc_asin@@Base+0x22c>
    7128:	ldur	x0, [x29, #-16]
    712c:	ldur	x8, [x29, #-24]
    7130:	ldr	w9, [x8, #8]
    7134:	mov	w10, #0xffffffff            	// #-1
    7138:	mov	w11, #0x1                   	// #1
    713c:	cmp	w9, #0x0
    7140:	csel	w1, w10, w11, lt  // lt = tstop
    7144:	str	w10, [sp, #228]
    7148:	str	w11, [sp, #224]
    714c:	bl	4dd0 <mpfr_set_zero@plt>
    7150:	stur	wzr, [x29, #-140]
    7154:	ldur	x8, [x29, #-16]
    7158:	add	x0, x8, #0x20
    715c:	ldur	x8, [x29, #-24]
    7160:	ldr	w9, [x8, #40]
    7164:	cmp	w9, #0x0
    7168:	ldr	w9, [sp, #228]
    716c:	ldr	w10, [sp, #224]
    7170:	csel	w1, w9, w10, lt  // lt = tstop
    7174:	bl	5220 <mpfr_set_inf@plt>
    7178:	ldur	w8, [x29, #-140]
    717c:	cmp	w8, #0x0
    7180:	cset	w8, ge  // ge = tcont
    7184:	tbnz	w8, #0, 7194 <mpc_asin@@Base+0x248>
    7188:	mov	w8, #0x2                   	// #2
    718c:	str	w8, [sp, #220]
    7190:	b	71ac <mpc_asin@@Base+0x260>
    7194:	ldur	w8, [x29, #-140]
    7198:	mov	w9, wzr
    719c:	mov	w10, #0x1                   	// #1
    71a0:	cmp	w8, #0x0
    71a4:	csel	w8, w9, w10, eq  // eq = none
    71a8:	str	w8, [sp, #220]
    71ac:	ldr	w8, [sp, #220]
    71b0:	stur	w8, [x29, #-4]
    71b4:	b	7ba4 <mpc_asin@@Base+0xc58>
    71b8:	ldur	x8, [x29, #-24]
    71bc:	ldr	x8, [x8, #48]
    71c0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    71c4:	cmp	x8, x9
    71c8:	b.ne	7520 <mpc_asin@@Base+0x5d4>  // b.any
    71cc:	ldur	x8, [x29, #-24]
    71d0:	ldr	w9, [x8, #40]
    71d4:	cmp	w9, #0x0
    71d8:	cset	w9, lt  // lt = tstop
    71dc:	and	w9, w9, #0x1
    71e0:	stur	w9, [x29, #-156]
    71e4:	ldur	x0, [x29, #-24]
    71e8:	mov	x1, #0x1                   	// #1
    71ec:	mov	x8, xzr
    71f0:	mov	x2, x8
    71f4:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    71f8:	cmp	w0, #0x0
    71fc:	cset	w9, le
    7200:	tbnz	w9, #0, 72f8 <mpc_asin@@Base+0x3ac>
    7204:	ldur	w8, [x29, #-156]
    7208:	cbz	w8, 7290 <mpc_asin@@Base+0x344>
    720c:	ldur	x8, [x29, #-16]
    7210:	add	x0, x8, #0x20
    7214:	ldur	x1, [x29, #-24]
    7218:	ldur	w9, [x29, #-28]
    721c:	asr	w9, w9, #4
    7220:	cmp	w9, #0x2
    7224:	str	x0, [sp, #208]
    7228:	str	x1, [sp, #200]
    722c:	b.ne	723c <mpc_asin@@Base+0x2f0>  // b.any
    7230:	mov	w8, #0x3                   	// #3
    7234:	str	w8, [sp, #196]
    7238:	b	726c <mpc_asin@@Base+0x320>
    723c:	ldur	w8, [x29, #-28]
    7240:	asr	w8, w8, #4
    7244:	cmp	w8, #0x3
    7248:	b.ne	7258 <mpc_asin@@Base+0x30c>  // b.any
    724c:	mov	w8, #0x2                   	// #2
    7250:	str	w8, [sp, #192]
    7254:	b	7264 <mpc_asin@@Base+0x318>
    7258:	ldur	w8, [x29, #-28]
    725c:	asr	w8, w8, #4
    7260:	str	w8, [sp, #192]
    7264:	ldr	w8, [sp, #192]
    7268:	str	w8, [sp, #196]
    726c:	ldr	w8, [sp, #196]
    7270:	ldr	x0, [sp, #208]
    7274:	ldr	x1, [sp, #200]
    7278:	mov	w2, w8
    727c:	bl	51e0 <mpfr_acosh@plt>
    7280:	mov	w8, wzr
    7284:	subs	w8, w8, w0
    7288:	stur	w8, [x29, #-152]
    728c:	b	72ac <mpc_asin@@Base+0x360>
    7290:	ldur	x8, [x29, #-16]
    7294:	add	x0, x8, #0x20
    7298:	ldur	x1, [x29, #-24]
    729c:	ldur	w9, [x29, #-28]
    72a0:	asr	w2, w9, #4
    72a4:	bl	51e0 <mpfr_acosh@plt>
    72a8:	stur	w0, [x29, #-152]
    72ac:	ldur	x0, [x29, #-16]
    72b0:	ldur	x8, [x29, #-24]
    72b4:	ldr	w9, [x8, #8]
    72b8:	mov	w10, #0xffffffff            	// #-1
    72bc:	mov	w11, #0x1                   	// #1
    72c0:	cmp	w9, #0x0
    72c4:	csel	w1, w10, w11, lt  // lt = tstop
    72c8:	ldur	w9, [x29, #-28]
    72cc:	and	w2, w9, #0xf
    72d0:	bl	54f0 <set_pi_over_2@plt>
    72d4:	stur	w0, [x29, #-148]
    72d8:	ldur	w9, [x29, #-156]
    72dc:	cbz	w9, 72f4 <mpc_asin@@Base+0x3a8>
    72e0:	ldur	x0, [x29, #-16]
    72e4:	ldur	x1, [x29, #-16]
    72e8:	mov	w8, wzr
    72ec:	mov	w2, w8
    72f0:	bl	5060 <mpc_conj@plt>
    72f4:	b	749c <mpc_asin@@Base+0x550>
    72f8:	ldur	x0, [x29, #-24]
    72fc:	mov	x1, #0xffffffffffffffff    	// #-1
    7300:	mov	x8, xzr
    7304:	mov	x2, x8
    7308:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    730c:	cmp	w0, #0x0
    7310:	cset	w9, ge  // ge = tcont
    7314:	tbnz	w9, #0, 7430 <mpc_asin@@Base+0x4e4>
    7318:	ldur	x8, [x29, #-24]
    731c:	ldr	q0, [x8]
    7320:	sub	x9, x29, #0xc0
    7324:	stur	q0, [x29, #-192]
    7328:	ldr	q0, [x8, #16]
    732c:	stur	q0, [x29, #-176]
    7330:	mov	x0, x9
    7334:	mov	x1, x9
    7338:	mov	w10, wzr
    733c:	mov	w2, w10
    7340:	bl	4c60 <mpfr_neg@plt>
    7344:	ldur	w10, [x29, #-156]
    7348:	cbz	w10, 73c8 <mpc_asin@@Base+0x47c>
    734c:	ldur	x8, [x29, #-16]
    7350:	add	x0, x8, #0x20
    7354:	ldur	w9, [x29, #-28]
    7358:	asr	w9, w9, #4
    735c:	cmp	w9, #0x2
    7360:	str	x0, [sp, #184]
    7364:	b.ne	7374 <mpc_asin@@Base+0x428>  // b.any
    7368:	mov	w8, #0x3                   	// #3
    736c:	str	w8, [sp, #180]
    7370:	b	73a4 <mpc_asin@@Base+0x458>
    7374:	ldur	w8, [x29, #-28]
    7378:	asr	w8, w8, #4
    737c:	cmp	w8, #0x3
    7380:	b.ne	7390 <mpc_asin@@Base+0x444>  // b.any
    7384:	mov	w8, #0x2                   	// #2
    7388:	str	w8, [sp, #176]
    738c:	b	739c <mpc_asin@@Base+0x450>
    7390:	ldur	w8, [x29, #-28]
    7394:	asr	w8, w8, #4
    7398:	str	w8, [sp, #176]
    739c:	ldr	w8, [sp, #176]
    73a0:	str	w8, [sp, #180]
    73a4:	ldr	w8, [sp, #180]
    73a8:	ldr	x0, [sp, #184]
    73ac:	sub	x1, x29, #0xc0
    73b0:	mov	w2, w8
    73b4:	bl	51e0 <mpfr_acosh@plt>
    73b8:	mov	w8, wzr
    73bc:	subs	w8, w8, w0
    73c0:	stur	w8, [x29, #-152]
    73c4:	b	73e4 <mpc_asin@@Base+0x498>
    73c8:	ldur	x8, [x29, #-16]
    73cc:	add	x0, x8, #0x20
    73d0:	ldur	w9, [x29, #-28]
    73d4:	asr	w2, w9, #4
    73d8:	sub	x1, x29, #0xc0
    73dc:	bl	51e0 <mpfr_acosh@plt>
    73e0:	stur	w0, [x29, #-152]
    73e4:	ldur	x0, [x29, #-16]
    73e8:	ldur	x8, [x29, #-24]
    73ec:	ldr	w9, [x8, #8]
    73f0:	mov	w10, #0xffffffff            	// #-1
    73f4:	mov	w11, #0x1                   	// #1
    73f8:	cmp	w9, #0x0
    73fc:	csel	w1, w10, w11, lt  // lt = tstop
    7400:	ldur	w9, [x29, #-28]
    7404:	and	w2, w9, #0xf
    7408:	bl	54f0 <set_pi_over_2@plt>
    740c:	stur	w0, [x29, #-148]
    7410:	ldur	w9, [x29, #-156]
    7414:	cbz	w9, 742c <mpc_asin@@Base+0x4e0>
    7418:	ldur	x0, [x29, #-16]
    741c:	ldur	x1, [x29, #-16]
    7420:	mov	w8, wzr
    7424:	mov	w2, w8
    7428:	bl	5060 <mpc_conj@plt>
    742c:	b	749c <mpc_asin@@Base+0x550>
    7430:	ldur	x8, [x29, #-16]
    7434:	add	x8, x8, #0x20
    7438:	stur	x8, [x29, #-200]
    743c:	ldur	x8, [x29, #-200]
    7440:	mov	w9, #0x1                   	// #1
    7444:	str	w9, [x8, #8]
    7448:	ldur	x8, [x29, #-200]
    744c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    7450:	str	x10, [x8, #16]
    7454:	stur	wzr, [x29, #-204]
    7458:	ldur	w9, [x29, #-204]
    745c:	stur	w9, [x29, #-152]
    7460:	ldur	w9, [x29, #-156]
    7464:	cbz	w9, 7484 <mpc_asin@@Base+0x538>
    7468:	ldur	x8, [x29, #-16]
    746c:	add	x0, x8, #0x20
    7470:	ldur	x8, [x29, #-16]
    7474:	add	x1, x8, #0x20
    7478:	mov	w9, wzr
    747c:	mov	w2, w9
    7480:	bl	4c60 <mpfr_neg@plt>
    7484:	ldur	x0, [x29, #-16]
    7488:	ldur	x1, [x29, #-24]
    748c:	ldur	w8, [x29, #-28]
    7490:	and	w2, w8, #0xf
    7494:	bl	4f30 <mpfr_asin@plt>
    7498:	stur	w0, [x29, #-148]
    749c:	ldur	w8, [x29, #-148]
    74a0:	cmp	w8, #0x0
    74a4:	cset	w8, ge  // ge = tcont
    74a8:	tbnz	w8, #0, 74b8 <mpc_asin@@Base+0x56c>
    74ac:	mov	w8, #0x2                   	// #2
    74b0:	str	w8, [sp, #172]
    74b4:	b	74d0 <mpc_asin@@Base+0x584>
    74b8:	ldur	w8, [x29, #-148]
    74bc:	mov	w9, wzr
    74c0:	mov	w10, #0x1                   	// #1
    74c4:	cmp	w8, #0x0
    74c8:	csel	w8, w9, w10, eq  // eq = none
    74cc:	str	w8, [sp, #172]
    74d0:	ldr	w8, [sp, #172]
    74d4:	ldur	w9, [x29, #-152]
    74d8:	cmp	w9, #0x0
    74dc:	cset	w9, ge  // ge = tcont
    74e0:	str	w8, [sp, #168]
    74e4:	tbnz	w9, #0, 74f4 <mpc_asin@@Base+0x5a8>
    74e8:	mov	w8, #0x2                   	// #2
    74ec:	str	w8, [sp, #164]
    74f0:	b	750c <mpc_asin@@Base+0x5c0>
    74f4:	ldur	w8, [x29, #-152]
    74f8:	mov	w9, wzr
    74fc:	mov	w10, #0x1                   	// #1
    7500:	cmp	w8, #0x0
    7504:	csel	w8, w9, w10, eq  // eq = none
    7508:	str	w8, [sp, #164]
    750c:	ldr	w8, [sp, #164]
    7510:	ldr	w9, [sp, #168]
    7514:	orr	w8, w9, w8, lsl #2
    7518:	stur	w8, [x29, #-4]
    751c:	b	7ba4 <mpc_asin@@Base+0xc58>
    7520:	ldur	x8, [x29, #-24]
    7524:	ldr	x8, [x8, #16]
    7528:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    752c:	cmp	x8, x9
    7530:	b.ne	75f4 <mpc_asin@@Base+0x6a8>  // b.any
    7534:	ldur	x8, [x29, #-24]
    7538:	ldr	w9, [x8, #8]
    753c:	cmp	w9, #0x0
    7540:	cset	w9, lt  // lt = tstop
    7544:	and	w9, w9, #0x1
    7548:	stur	w9, [x29, #-212]
    754c:	ldur	x8, [x29, #-16]
    7550:	stur	x8, [x29, #-224]
    7554:	ldur	x8, [x29, #-224]
    7558:	mov	w9, #0x1                   	// #1
    755c:	str	w9, [x8, #8]
    7560:	ldur	x8, [x29, #-224]
    7564:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    7568:	str	x10, [x8, #16]
    756c:	stur	wzr, [x29, #-228]
    7570:	ldur	w9, [x29, #-212]
    7574:	cbz	w9, 758c <mpc_asin@@Base+0x640>
    7578:	ldur	x0, [x29, #-16]
    757c:	ldur	x1, [x29, #-16]
    7580:	mov	w8, wzr
    7584:	mov	w2, w8
    7588:	bl	4c60 <mpfr_neg@plt>
    758c:	ldur	x8, [x29, #-16]
    7590:	add	x0, x8, #0x20
    7594:	ldur	x8, [x29, #-24]
    7598:	add	x1, x8, #0x20
    759c:	ldur	w9, [x29, #-28]
    75a0:	asr	w2, w9, #4
    75a4:	bl	4ea0 <mpfr_asinh@plt>
    75a8:	stur	w0, [x29, #-208]
    75ac:	ldur	w9, [x29, #-208]
    75b0:	cmp	w9, #0x0
    75b4:	cset	w9, ge  // ge = tcont
    75b8:	tbnz	w9, #0, 75c8 <mpc_asin@@Base+0x67c>
    75bc:	mov	w8, #0x2                   	// #2
    75c0:	str	w8, [sp, #160]
    75c4:	b	75e0 <mpc_asin@@Base+0x694>
    75c8:	ldur	w8, [x29, #-208]
    75cc:	mov	w9, wzr
    75d0:	mov	w10, #0x1                   	// #1
    75d4:	cmp	w8, #0x0
    75d8:	csel	w8, w9, w10, eq  // eq = none
    75dc:	str	w8, [sp, #160]
    75e0:	ldr	w8, [sp, #160]
    75e4:	mov	w9, wzr
    75e8:	orr	w8, w9, w8, lsl #2
    75ec:	stur	w8, [x29, #-4]
    75f0:	b	7ba4 <mpc_asin@@Base+0xc58>
    75f4:	ldur	x8, [x29, #-16]
    75f8:	ldr	x8, [x8]
    75fc:	stur	x8, [x29, #-48]
    7600:	ldur	x8, [x29, #-16]
    7604:	ldr	x8, [x8, #32]
    7608:	stur	x8, [x29, #-56]
    760c:	ldur	w9, [x29, #-28]
    7610:	and	w9, w9, #0xf
    7614:	stur	w9, [x29, #-60]
    7618:	ldur	w9, [x29, #-28]
    761c:	asr	w9, w9, #4
    7620:	stur	w9, [x29, #-64]
    7624:	ldur	x8, [x29, #-48]
    7628:	ldur	x10, [x29, #-56]
    762c:	cmp	x8, x10
    7630:	b.lt	7640 <mpc_asin@@Base+0x6f4>  // b.tstop
    7634:	ldur	x8, [x29, #-48]
    7638:	str	x8, [sp, #152]
    763c:	b	7648 <mpc_asin@@Base+0x6fc>
    7640:	ldur	x8, [x29, #-56]
    7644:	str	x8, [sp, #152]
    7648:	ldr	x8, [sp, #152]
    764c:	stur	x8, [x29, #-40]
    7650:	ldur	x1, [x29, #-40]
    7654:	sub	x0, x29, #0x80
    7658:	bl	4db0 <mpc_init2@plt>
    765c:	ldur	w8, [x29, #-136]
    7660:	add	w8, w8, #0x1
    7664:	stur	w8, [x29, #-136]
    7668:	ldur	w8, [x29, #-136]
    766c:	cmp	w8, #0x2
    7670:	b.gt	7688 <mpc_asin@@Base+0x73c>
    7674:	ldur	x0, [x29, #-40]
    7678:	bl	4de0 <mpc_ceil_log2@plt>
    767c:	add	x8, x0, #0x3
    7680:	str	x8, [sp, #144]
    7684:	b	7698 <mpc_asin@@Base+0x74c>
    7688:	ldur	x8, [x29, #-40]
    768c:	mov	x9, #0x2                   	// #2
    7690:	sdiv	x8, x8, x9
    7694:	str	x8, [sp, #144]
    7698:	ldr	x8, [sp, #144]
    769c:	ldur	x9, [x29, #-40]
    76a0:	add	x8, x9, x8
    76a4:	stur	x8, [x29, #-40]
    76a8:	ldur	x1, [x29, #-40]
    76ac:	sub	x8, x29, #0x80
    76b0:	mov	x0, x8
    76b4:	str	x8, [sp, #136]
    76b8:	bl	4d40 <mpfr_set_prec@plt>
    76bc:	ldr	x8, [sp, #136]
    76c0:	add	x0, x8, #0x20
    76c4:	ldur	x1, [x29, #-40]
    76c8:	bl	4d40 <mpfr_set_prec@plt>
    76cc:	ldur	w10, [x29, #-136]
    76d0:	cmp	w10, #0x1
    76d4:	b.ne	76f4 <mpc_asin@@Base+0x7a8>  // b.any
    76d8:	ldur	x0, [x29, #-16]
    76dc:	ldur	x1, [x29, #-24]
    76e0:	ldur	w2, [x29, #-28]
    76e4:	sub	x3, x29, #0x80
    76e8:	bl	7bb8 <mpc_asin@@Base+0xc6c>
    76ec:	cbz	w0, 76f4 <mpc_asin@@Base+0x7a8>
    76f0:	b	7b78 <mpc_asin@@Base+0xc2c>
    76f4:	ldur	x1, [x29, #-24]
    76f8:	sub	x8, x29, #0x80
    76fc:	mov	x0, x8
    7700:	mov	w9, wzr
    7704:	mov	w2, w9
    7708:	str	x8, [sp, #128]
    770c:	str	w9, [sp, #124]
    7710:	bl	5030 <mpc_sqr@plt>
    7714:	ldur	x8, [x29, #-112]
    7718:	stur	x8, [x29, #-240]
    771c:	ldr	x8, [sp, #128]
    7720:	mov	x0, x8
    7724:	mov	x1, #0x1                   	// #1
    7728:	mov	x2, x8
    772c:	ldr	w3, [sp, #124]
    7730:	bl	5520 <mpfr_ui_sub@plt>
    7734:	ldr	x8, [sp, #128]
    7738:	add	x10, x8, #0x20
    773c:	add	x1, x8, #0x20
    7740:	mov	x0, x10
    7744:	ldr	w2, [sp, #124]
    7748:	bl	4c60 <mpfr_neg@plt>
    774c:	ldur	x8, [x29, #-240]
    7750:	ldur	x10, [x29, #-112]
    7754:	subs	x8, x8, x10
    7758:	stur	x8, [x29, #-240]
    775c:	ldur	x8, [x29, #-240]
    7760:	cmp	x8, #0x0
    7764:	cset	w9, gt
    7768:	tbnz	w9, #0, 7778 <mpc_asin@@Base+0x82c>
    776c:	mov	x8, xzr
    7770:	str	x8, [sp, #112]
    7774:	b	7780 <mpc_asin@@Base+0x834>
    7778:	ldur	x8, [x29, #-240]
    777c:	str	x8, [sp, #112]
    7780:	ldr	x8, [sp, #112]
    7784:	stur	x8, [x29, #-240]
    7788:	ldur	x8, [x29, #-240]
    778c:	ldur	x9, [x29, #-112]
    7790:	add	x8, x8, x9
    7794:	ldur	x9, [x29, #-40]
    7798:	subs	x8, x8, x9
    779c:	stur	x8, [x29, #-240]
    77a0:	ldur	x8, [x29, #-80]
    77a4:	ldur	x9, [x29, #-40]
    77a8:	subs	x8, x8, x9
    77ac:	subs	x8, x8, #0x1
    77b0:	str	x8, [sp, #248]
    77b4:	ldur	x8, [x29, #-240]
    77b8:	ldr	x9, [sp, #248]
    77bc:	cmp	x8, x9
    77c0:	b.lt	77d0 <mpc_asin@@Base+0x884>  // b.tstop
    77c4:	ldur	x8, [x29, #-240]
    77c8:	str	x8, [sp, #104]
    77cc:	b	77d8 <mpc_asin@@Base+0x88c>
    77d0:	ldr	x8, [sp, #248]
    77d4:	str	x8, [sp, #104]
    77d8:	ldr	x8, [sp, #104]
    77dc:	stur	x8, [x29, #-240]
    77e0:	ldur	x8, [x29, #-112]
    77e4:	ldur	x9, [x29, #-80]
    77e8:	cmp	x8, x9
    77ec:	b.lt	77fc <mpc_asin@@Base+0x8b0>  // b.tstop
    77f0:	ldur	x8, [x29, #-112]
    77f4:	str	x8, [sp, #96]
    77f8:	b	7804 <mpc_asin@@Base+0x8b8>
    77fc:	ldur	x8, [x29, #-80]
    7800:	str	x8, [sp, #96]
    7804:	ldr	x8, [sp, #96]
    7808:	str	x8, [sp, #248]
    780c:	sub	x8, x29, #0x80
    7810:	mov	x0, x8
    7814:	mov	x1, x8
    7818:	mov	w9, wzr
    781c:	mov	w2, w9
    7820:	bl	4c20 <mpc_sqrt@plt>
    7824:	ldur	x8, [x29, #-240]
    7828:	mov	x10, #0x2                   	// #2
    782c:	mul	x8, x10, x8
    7830:	add	x8, x8, #0x1
    7834:	subs	x8, x8, #0x2
    7838:	ldr	x11, [sp, #248]
    783c:	subs	x11, x11, #0x1
    7840:	subs	x8, x8, x11
    7844:	stur	x8, [x29, #-240]
    7848:	ldur	x8, [x29, #-240]
    784c:	add	x8, x8, #0x1
    7850:	sdiv	x8, x8, x10
    7854:	stur	x8, [x29, #-240]
    7858:	ldur	x8, [x29, #-112]
    785c:	ldur	x10, [x29, #-80]
    7860:	cmp	x8, x10
    7864:	b.gt	7874 <mpc_asin@@Base+0x928>
    7868:	ldur	x8, [x29, #-112]
    786c:	str	x8, [sp, #88]
    7870:	b	787c <mpc_asin@@Base+0x930>
    7874:	ldur	x8, [x29, #-80]
    7878:	str	x8, [sp, #88]
    787c:	ldr	x8, [sp, #88]
    7880:	str	x8, [sp, #248]
    7884:	ldur	x8, [x29, #-240]
    7888:	ldr	x9, [sp, #248]
    788c:	subs	x8, x8, x9
    7890:	ldur	x9, [x29, #-40]
    7894:	add	x8, x8, x9
    7898:	stur	x8, [x29, #-240]
    789c:	ldur	x8, [x29, #-240]
    78a0:	cmp	x8, #0x0
    78a4:	cset	w10, gt
    78a8:	tbnz	w10, #0, 78b8 <mpc_asin@@Base+0x96c>
    78ac:	mov	x8, #0x1                   	// #1
    78b0:	str	x8, [sp, #80]
    78b4:	b	78c4 <mpc_asin@@Base+0x978>
    78b8:	ldur	x8, [x29, #-240]
    78bc:	add	x8, x8, #0x1
    78c0:	str	x8, [sp, #80]
    78c4:	ldr	x8, [sp, #80]
    78c8:	str	x8, [sp, #240]
    78cc:	sub	x8, x29, #0x80
    78d0:	ldur	x9, [x29, #-112]
    78d4:	stur	x9, [x29, #-240]
    78d8:	ldur	x9, [x29, #-80]
    78dc:	str	x9, [sp, #248]
    78e0:	ldur	x9, [x29, #-24]
    78e4:	add	x2, x9, #0x20
    78e8:	mov	x0, x8
    78ec:	mov	x1, x8
    78f0:	mov	w10, wzr
    78f4:	mov	w3, w10
    78f8:	str	x8, [sp, #72]
    78fc:	str	w10, [sp, #68]
    7900:	bl	4b40 <mpfr_sub@plt>
    7904:	ldr	x8, [sp, #72]
    7908:	add	x9, x8, #0x20
    790c:	add	x1, x8, #0x20
    7910:	ldur	x2, [x29, #-24]
    7914:	mov	x0, x9
    7918:	ldr	w3, [sp, #68]
    791c:	bl	4f50 <mpfr_add@plt>
    7920:	ldr	x8, [sp, #72]
    7924:	mov	x0, x8
    7928:	bl	52f0 <mpfr_sgn@plt>
    792c:	cbz	w0, 7940 <mpc_asin@@Base+0x9f4>
    7930:	sub	x8, x29, #0x80
    7934:	add	x0, x8, #0x20
    7938:	bl	52f0 <mpfr_sgn@plt>
    793c:	cbnz	w0, 7944 <mpc_asin@@Base+0x9f8>
    7940:	b	765c <mpc_asin@@Base+0x710>
    7944:	ldur	x8, [x29, #-112]
    7948:	ldur	x9, [x29, #-240]
    794c:	subs	x8, x9, x8
    7950:	stur	x8, [x29, #-240]
    7954:	ldur	x8, [x29, #-80]
    7958:	ldr	x9, [sp, #248]
    795c:	subs	x8, x9, x8
    7960:	str	x8, [sp, #248]
    7964:	ldur	x8, [x29, #-240]
    7968:	ldr	x9, [sp, #248]
    796c:	cmp	x8, x9
    7970:	b.lt	7980 <mpc_asin@@Base+0xa34>  // b.tstop
    7974:	ldur	x8, [x29, #-240]
    7978:	str	x8, [sp, #56]
    797c:	b	7988 <mpc_asin@@Base+0xa3c>
    7980:	ldr	x8, [sp, #248]
    7984:	str	x8, [sp, #56]
    7988:	ldr	x8, [sp, #56]
    798c:	stur	x8, [x29, #-240]
    7990:	ldur	x8, [x29, #-240]
    7994:	ldr	x9, [sp, #240]
    7998:	add	x8, x9, x8
    799c:	str	x8, [sp, #240]
    79a0:	ldr	x8, [sp, #240]
    79a4:	cmp	x8, #0x0
    79a8:	cset	w10, gt
    79ac:	tbnz	w10, #0, 79bc <mpc_asin@@Base+0xa70>
    79b0:	mov	x8, #0x1                   	// #1
    79b4:	str	x8, [sp, #48]
    79b8:	b	79c8 <mpc_asin@@Base+0xa7c>
    79bc:	ldr	x8, [sp, #240]
    79c0:	add	x8, x8, #0x1
    79c4:	str	x8, [sp, #48]
    79c8:	ldr	x8, [sp, #48]
    79cc:	str	x8, [sp, #240]
    79d0:	ldur	x8, [x29, #-112]
    79d4:	stur	x8, [x29, #-240]
    79d8:	ldur	x8, [x29, #-80]
    79dc:	str	x8, [sp, #248]
    79e0:	ldur	x8, [x29, #-240]
    79e4:	ldr	x9, [sp, #248]
    79e8:	cmp	x8, x9
    79ec:	b.lt	79fc <mpc_asin@@Base+0xab0>  // b.tstop
    79f0:	ldur	x8, [x29, #-240]
    79f4:	str	x8, [sp, #40]
    79f8:	b	7a04 <mpc_asin@@Base+0xab8>
    79fc:	ldr	x8, [sp, #248]
    7a00:	str	x8, [sp, #40]
    7a04:	ldr	x8, [sp, #40]
    7a08:	stur	x8, [x29, #-240]
    7a0c:	ldur	x8, [x29, #-240]
    7a10:	ldur	x9, [x29, #-40]
    7a14:	subs	x8, x8, x9
    7a18:	ldr	x9, [sp, #240]
    7a1c:	add	x8, x9, x8
    7a20:	str	x8, [sp, #240]
    7a24:	sub	x8, x29, #0x80
    7a28:	mov	x0, x8
    7a2c:	mov	x1, x8
    7a30:	mov	w10, wzr
    7a34:	mov	w2, w10
    7a38:	bl	4e90 <mpc_log@plt>
    7a3c:	ldur	x8, [x29, #-240]
    7a40:	subs	x8, x8, #0x1
    7a44:	ldr	x9, [sp, #240]
    7a48:	subs	x8, x9, x8
    7a4c:	str	x8, [sp, #240]
    7a50:	ldur	x8, [x29, #-112]
    7a54:	ldur	x9, [x29, #-80]
    7a58:	cmp	x8, x9
    7a5c:	b.gt	7a6c <mpc_asin@@Base+0xb20>
    7a60:	ldur	x8, [x29, #-112]
    7a64:	str	x8, [sp, #32]
    7a68:	b	7a74 <mpc_asin@@Base+0xb28>
    7a6c:	ldur	x8, [x29, #-80]
    7a70:	str	x8, [sp, #32]
    7a74:	ldr	x8, [sp, #32]
    7a78:	str	x8, [sp, #248]
    7a7c:	ldr	x8, [sp, #240]
    7a80:	ldr	x9, [sp, #248]
    7a84:	subs	x8, x8, x9
    7a88:	ldur	x9, [x29, #-40]
    7a8c:	add	x8, x8, x9
    7a90:	str	x8, [sp, #240]
    7a94:	ldr	x8, [sp, #240]
    7a98:	cmp	x8, #0x0
    7a9c:	cset	w10, gt
    7aa0:	tbnz	w10, #0, 7ab0 <mpc_asin@@Base+0xb64>
    7aa4:	mov	x8, #0x1                   	// #1
    7aa8:	str	x8, [sp, #24]
    7aac:	b	7abc <mpc_asin@@Base+0xb70>
    7ab0:	ldr	x8, [sp, #240]
    7ab4:	add	x8, x8, #0x1
    7ab8:	str	x8, [sp, #24]
    7abc:	ldr	x8, [sp, #24]
    7ac0:	str	x8, [sp, #240]
    7ac4:	sub	x8, x29, #0x80
    7ac8:	add	x1, x8, #0x20
    7acc:	mov	x0, x8
    7ad0:	str	x8, [sp, #16]
    7ad4:	bl	5190 <mpfr_swap@plt>
    7ad8:	ldr	x8, [sp, #16]
    7adc:	add	x0, x8, #0x20
    7ae0:	add	x1, x8, #0x20
    7ae4:	mov	w9, wzr
    7ae8:	mov	w2, w9
    7aec:	str	w9, [sp, #12]
    7af0:	bl	4c60 <mpfr_neg@plt>
    7af4:	ldur	x8, [x29, #-40]
    7af8:	ldr	x10, [sp, #240]
    7afc:	subs	x1, x8, x10
    7b00:	ldur	x8, [x29, #-48]
    7b04:	ldur	w9, [x29, #-60]
    7b08:	cmp	w9, #0x0
    7b0c:	cset	w9, eq  // eq = none
    7b10:	and	w9, w9, #0x1
    7b14:	add	x4, x8, w9, sxtw
    7b18:	ldr	x8, [sp, #16]
    7b1c:	mov	x0, x8
    7b20:	ldr	w2, [sp, #12]
    7b24:	mov	w3, #0x1                   	// #1
    7b28:	bl	5540 <mpfr_can_round@plt>
    7b2c:	cbz	w0, 7b74 <mpc_asin@@Base+0xc28>
    7b30:	sub	x8, x29, #0x80
    7b34:	add	x0, x8, #0x20
    7b38:	ldur	x8, [x29, #-40]
    7b3c:	ldr	x9, [sp, #240]
    7b40:	subs	x1, x8, x9
    7b44:	ldur	x8, [x29, #-56]
    7b48:	ldur	w10, [x29, #-64]
    7b4c:	mov	w11, wzr
    7b50:	cmp	w10, #0x0
    7b54:	cset	w10, eq  // eq = none
    7b58:	and	w10, w10, #0x1
    7b5c:	add	x4, x8, w10, sxtw
    7b60:	mov	w2, w11
    7b64:	mov	w3, #0x1                   	// #1
    7b68:	bl	5540 <mpfr_can_round@plt>
    7b6c:	cbz	w0, 7b74 <mpc_asin@@Base+0xc28>
    7b70:	b	7b78 <mpc_asin@@Base+0xc2c>
    7b74:	b	765c <mpc_asin@@Base+0x710>
    7b78:	ldur	x0, [x29, #-16]
    7b7c:	ldur	w2, [x29, #-28]
    7b80:	sub	x8, x29, #0x80
    7b84:	mov	x1, x8
    7b88:	str	x8, [sp]
    7b8c:	bl	5680 <mpc_set@plt>
    7b90:	stur	w0, [x29, #-132]
    7b94:	ldr	x0, [sp]
    7b98:	bl	4af0 <mpc_clear@plt>
    7b9c:	ldur	w9, [x29, #-132]
    7ba0:	stur	w9, [x29, #-4]
    7ba4:	ldur	w0, [x29, #-4]
    7ba8:	add	sp, sp, #0x1f0
    7bac:	ldr	x28, [sp, #16]
    7bb0:	ldp	x29, x30, [sp], #32
    7bb4:	ret
    7bb8:	sub	sp, sp, #0x70
    7bbc:	stp	x29, x30, [sp, #96]
    7bc0:	add	x29, sp, #0x60
    7bc4:	stur	x0, [x29, #-16]
    7bc8:	stur	x1, [x29, #-24]
    7bcc:	stur	w2, [x29, #-28]
    7bd0:	stur	x3, [x29, #-40]
    7bd4:	ldur	x8, [x29, #-24]
    7bd8:	ldr	x8, [x8, #48]
    7bdc:	str	x8, [sp, #48]
    7be0:	ldr	x8, [sp, #48]
    7be4:	cmp	x8, #0x0
    7be8:	cset	w9, ge  // ge = tcont
    7bec:	tbnz	w9, #0, 7c14 <mpc_asin@@Base+0xcc8>
    7bf0:	ldr	x8, [sp, #48]
    7bf4:	mov	x9, xzr
    7bf8:	subs	x8, x9, x8
    7bfc:	mov	x9, #0x2                   	// #2
    7c00:	sdiv	x8, x8, x9
    7c04:	ldur	x9, [x29, #-40]
    7c08:	ldr	x9, [x9]
    7c0c:	cmp	x8, x9
    7c10:	b.ge	7c1c <mpc_asin@@Base+0xcd0>  // b.tcont
    7c14:	stur	wzr, [x29, #-4]
    7c18:	b	7dc0 <mpc_asin@@Base+0xe74>
    7c1c:	ldur	x0, [x29, #-40]
    7c20:	mov	w8, wzr
    7c24:	mov	w1, w8
    7c28:	str	w8, [sp]
    7c2c:	bl	4b60 <mpfr_const_pi@plt>
    7c30:	ldur	x9, [x29, #-40]
    7c34:	ldur	x1, [x29, #-40]
    7c38:	mov	x0, x9
    7c3c:	mov	x2, #0x1                   	// #1
    7c40:	ldr	w3, [sp]
    7c44:	bl	5420 <mpfr_div_2ui@plt>
    7c48:	ldur	x9, [x29, #-40]
    7c4c:	ldr	x9, [x9]
    7c50:	str	x9, [sp, #8]
    7c54:	ldur	x9, [x29, #-40]
    7c58:	ldr	x1, [sp, #8]
    7c5c:	ldur	x10, [x29, #-16]
    7c60:	ldr	x10, [x10]
    7c64:	ldur	w8, [x29, #-28]
    7c68:	tst	w8, #0xf
    7c6c:	cset	w8, eq  // eq = none
    7c70:	and	w8, w8, #0x1
    7c74:	add	x4, x10, w8, sxtw
    7c78:	mov	x0, x9
    7c7c:	ldr	w2, [sp]
    7c80:	mov	w3, #0x1                   	// #1
    7c84:	bl	5540 <mpfr_can_round@plt>
    7c88:	cbnz	w0, 7c94 <mpc_asin@@Base+0xd48>
    7c8c:	stur	wzr, [x29, #-4]
    7c90:	b	7dc0 <mpc_asin@@Base+0xe74>
    7c94:	ldur	x8, [x29, #-24]
    7c98:	ldr	q0, [x8, #32]
    7c9c:	str	q0, [sp, #16]
    7ca0:	ldr	q0, [x8, #48]
    7ca4:	str	q0, [sp, #32]
    7ca8:	ldur	x8, [x29, #-24]
    7cac:	ldr	w9, [x8, #40]
    7cb0:	cmp	w9, #0x0
    7cb4:	cset	w9, ge  // ge = tcont
    7cb8:	tbnz	w9, #0, 7cd4 <mpc_asin@@Base+0xd88>
    7cbc:	add	x8, sp, #0x10
    7cc0:	mov	x0, x8
    7cc4:	mov	x1, x8
    7cc8:	mov	w9, wzr
    7ccc:	mov	w2, w9
    7cd0:	bl	4c60 <mpfr_neg@plt>
    7cd4:	ldur	x8, [x29, #-40]
    7cd8:	add	x0, x8, #0x20
    7cdc:	add	x1, sp, #0x10
    7ce0:	mov	w9, wzr
    7ce4:	mov	w2, w9
    7ce8:	bl	5450 <mpfr_sqrt@plt>
    7cec:	str	w0, [sp, #4]
    7cf0:	ldur	x8, [x29, #-24]
    7cf4:	ldr	w9, [x8, #40]
    7cf8:	cmp	w9, #0x0
    7cfc:	cset	w9, ge  // ge = tcont
    7d00:	tbnz	w9, #0, 7d20 <mpc_asin@@Base+0xdd4>
    7d04:	ldur	x8, [x29, #-40]
    7d08:	add	x0, x8, #0x20
    7d0c:	ldur	x8, [x29, #-40]
    7d10:	add	x1, x8, #0x20
    7d14:	mov	w9, wzr
    7d18:	mov	w2, w9
    7d1c:	bl	4c60 <mpfr_neg@plt>
    7d20:	ldr	w8, [sp, #4]
    7d24:	cbnz	w8, 7d64 <mpc_asin@@Base+0xe18>
    7d28:	ldur	x8, [x29, #-24]
    7d2c:	ldr	w9, [x8, #40]
    7d30:	cmp	w9, #0x0
    7d34:	cset	w9, ge  // ge = tcont
    7d38:	tbnz	w9, #0, 7d4c <mpc_asin@@Base+0xe00>
    7d3c:	ldur	x8, [x29, #-40]
    7d40:	add	x0, x8, #0x20
    7d44:	bl	4c80 <mpfr_nextbelow@plt>
    7d48:	b	7d58 <mpc_asin@@Base+0xe0c>
    7d4c:	ldur	x8, [x29, #-40]
    7d50:	add	x0, x8, #0x20
    7d54:	bl	4ee0 <mpfr_nextabove@plt>
    7d58:	mov	w8, #0x1                   	// #1
    7d5c:	stur	w8, [x29, #-4]
    7d60:	b	7dc0 <mpc_asin@@Base+0xe74>
    7d64:	ldur	x8, [x29, #-40]
    7d68:	ldr	x8, [x8, #32]
    7d6c:	str	x8, [sp, #8]
    7d70:	ldur	x8, [x29, #-40]
    7d74:	add	x0, x8, #0x20
    7d78:	ldr	x8, [sp, #8]
    7d7c:	subs	x1, x8, #0x1
    7d80:	ldur	x8, [x29, #-16]
    7d84:	ldr	x8, [x8, #32]
    7d88:	ldur	w9, [x29, #-28]
    7d8c:	asr	w9, w9, #4
    7d90:	cmp	w9, #0x0
    7d94:	cset	w9, eq  // eq = none
    7d98:	and	w9, w9, #0x1
    7d9c:	add	x4, x8, w9, sxtw
    7da0:	mov	w2, #0x4                   	// #4
    7da4:	mov	w3, #0x1                   	// #1
    7da8:	bl	5540 <mpfr_can_round@plt>
    7dac:	cbnz	w0, 7db8 <mpc_asin@@Base+0xe6c>
    7db0:	stur	wzr, [x29, #-4]
    7db4:	b	7dc0 <mpc_asin@@Base+0xe74>
    7db8:	mov	w8, #0x1                   	// #1
    7dbc:	stur	w8, [x29, #-4]
    7dc0:	ldur	w0, [x29, #-4]
    7dc4:	ldp	x29, x30, [sp, #96]
    7dc8:	add	sp, sp, #0x70
    7dcc:	ret

0000000000007dd0 <mpc_asinh@@Base>:
    7dd0:	sub	sp, sp, #0x120
    7dd4:	stp	x29, x30, [sp, #256]
    7dd8:	str	x28, [sp, #272]
    7ddc:	add	x29, sp, #0x100
    7de0:	mov	w8, wzr
    7de4:	sub	x9, x29, #0x60
    7de8:	add	x10, sp, #0x60
    7dec:	stur	x0, [x29, #-8]
    7df0:	stur	x1, [x29, #-16]
    7df4:	stur	w2, [x29, #-20]
    7df8:	ldur	x11, [x29, #-16]
    7dfc:	ldr	q0, [x11, #32]
    7e00:	stur	q0, [x29, #-96]
    7e04:	ldr	q0, [x11, #48]
    7e08:	stur	q0, [x29, #-80]
    7e0c:	ldur	x11, [x29, #-16]
    7e10:	ldr	q0, [x11]
    7e14:	stur	q0, [x29, #-64]
    7e18:	ldr	q0, [x11, #16]
    7e1c:	stur	q0, [x29, #-48]
    7e20:	mov	x0, x9
    7e24:	mov	x1, x9
    7e28:	mov	w2, w8
    7e2c:	str	x10, [sp, #56]
    7e30:	bl	4c60 <mpfr_neg@plt>
    7e34:	ldur	x9, [x29, #-8]
    7e38:	ldr	x1, [x9, #32]
    7e3c:	ldur	x9, [x29, #-8]
    7e40:	ldr	x2, [x9]
    7e44:	ldr	x9, [sp, #56]
    7e48:	mov	x0, x9
    7e4c:	bl	54c0 <mpc_init3@plt>
    7e50:	ldur	w8, [x29, #-20]
    7e54:	asr	w8, w8, #4
    7e58:	cmp	w8, #0x2
    7e5c:	b.ne	7e6c <mpc_asinh@@Base+0x9c>  // b.any
    7e60:	mov	w8, #0x3                   	// #3
    7e64:	str	w8, [sp, #52]
    7e68:	b	7e9c <mpc_asinh@@Base+0xcc>
    7e6c:	ldur	w8, [x29, #-20]
    7e70:	asr	w8, w8, #4
    7e74:	cmp	w8, #0x3
    7e78:	b.ne	7e88 <mpc_asinh@@Base+0xb8>  // b.any
    7e7c:	mov	w8, #0x2                   	// #2
    7e80:	str	w8, [sp, #48]
    7e84:	b	7e94 <mpc_asinh@@Base+0xc4>
    7e88:	ldur	w8, [x29, #-20]
    7e8c:	asr	w8, w8, #4
    7e90:	str	w8, [sp, #48]
    7e94:	ldr	w8, [sp, #48]
    7e98:	str	w8, [sp, #52]
    7e9c:	ldr	w8, [sp, #52]
    7ea0:	ldur	w9, [x29, #-20]
    7ea4:	and	w9, w9, #0xf
    7ea8:	add	w2, w8, w9, lsl #4
    7eac:	add	x10, sp, #0x60
    7eb0:	mov	x0, x10
    7eb4:	sub	x1, x29, #0x60
    7eb8:	str	x10, [sp, #40]
    7ebc:	bl	5570 <mpc_asin@plt>
    7ec0:	stur	w0, [x29, #-24]
    7ec4:	ldr	q0, [sp, #96]
    7ec8:	str	q0, [sp, #64]
    7ecc:	ldr	q0, [sp, #112]
    7ed0:	str	q0, [sp, #80]
    7ed4:	ldr	q0, [sp, #128]
    7ed8:	str	q0, [sp, #96]
    7edc:	ldr	q0, [sp, #144]
    7ee0:	str	q0, [sp, #112]
    7ee4:	ldr	q0, [sp, #64]
    7ee8:	str	q0, [sp, #128]
    7eec:	ldr	q0, [sp, #80]
    7ef0:	str	q0, [sp, #144]
    7ef4:	ldr	x10, [sp, #40]
    7ef8:	add	x0, x10, #0x20
    7efc:	add	x1, x10, #0x20
    7f00:	mov	w8, wzr
    7f04:	mov	w2, w8
    7f08:	str	w8, [sp, #36]
    7f0c:	bl	4c60 <mpfr_neg@plt>
    7f10:	ldur	x10, [x29, #-8]
    7f14:	mov	x0, x10
    7f18:	ldr	x1, [sp, #40]
    7f1c:	ldr	w2, [sp, #36]
    7f20:	bl	5680 <mpc_set@plt>
    7f24:	ldr	x10, [sp, #40]
    7f28:	mov	x0, x10
    7f2c:	bl	4af0 <mpc_clear@plt>
    7f30:	ldur	w8, [x29, #-24]
    7f34:	asr	w8, w8, #2
    7f38:	cmp	w8, #0x2
    7f3c:	b.ne	7f4c <mpc_asinh@@Base+0x17c>  // b.any
    7f40:	mov	w8, #0xffffffff            	// #-1
    7f44:	str	w8, [sp, #32]
    7f48:	b	7f68 <mpc_asinh@@Base+0x198>
    7f4c:	ldur	w8, [x29, #-24]
    7f50:	asr	w8, w8, #2
    7f54:	mov	w9, wzr
    7f58:	mov	w10, #0x1                   	// #1
    7f5c:	cmp	w8, #0x0
    7f60:	csel	w8, w9, w10, eq  // eq = none
    7f64:	str	w8, [sp, #32]
    7f68:	ldr	w8, [sp, #32]
    7f6c:	cmp	w8, #0x0
    7f70:	cset	w8, ge  // ge = tcont
    7f74:	tbnz	w8, #0, 7f84 <mpc_asinh@@Base+0x1b4>
    7f78:	mov	w8, #0x2                   	// #2
    7f7c:	str	w8, [sp, #28]
    7f80:	b	7fd4 <mpc_asinh@@Base+0x204>
    7f84:	ldur	w8, [x29, #-24]
    7f88:	asr	w8, w8, #2
    7f8c:	cmp	w8, #0x2
    7f90:	b.ne	7fa0 <mpc_asinh@@Base+0x1d0>  // b.any
    7f94:	mov	w8, #0xffffffff            	// #-1
    7f98:	str	w8, [sp, #24]
    7f9c:	b	7fbc <mpc_asinh@@Base+0x1ec>
    7fa0:	ldur	w8, [x29, #-24]
    7fa4:	asr	w8, w8, #2
    7fa8:	mov	w9, wzr
    7fac:	mov	w10, #0x1                   	// #1
    7fb0:	cmp	w8, #0x0
    7fb4:	csel	w8, w9, w10, eq  // eq = none
    7fb8:	str	w8, [sp, #24]
    7fbc:	ldr	w8, [sp, #24]
    7fc0:	mov	w9, wzr
    7fc4:	mov	w10, #0x1                   	// #1
    7fc8:	cmp	w8, #0x0
    7fcc:	csel	w8, w9, w10, eq  // eq = none
    7fd0:	str	w8, [sp, #28]
    7fd4:	ldr	w8, [sp, #28]
    7fd8:	ldur	w9, [x29, #-24]
    7fdc:	and	w9, w9, #0x3
    7fe0:	cmp	w9, #0x2
    7fe4:	str	w8, [sp, #20]
    7fe8:	b.ne	7ff8 <mpc_asinh@@Base+0x228>  // b.any
    7fec:	mov	w8, #0xffffffff            	// #-1
    7ff0:	str	w8, [sp, #16]
    7ff4:	b	8010 <mpc_asinh@@Base+0x240>
    7ff8:	ldur	w8, [x29, #-24]
    7ffc:	mov	w9, wzr
    8000:	mov	w10, #0x1                   	// #1
    8004:	tst	w8, #0x3
    8008:	csel	w8, w9, w10, eq  // eq = none
    800c:	str	w8, [sp, #16]
    8010:	ldr	w8, [sp, #16]
    8014:	mov	w9, wzr
    8018:	subs	w8, w9, w8
    801c:	cmp	w8, #0x0
    8020:	cset	w8, ge  // ge = tcont
    8024:	tbnz	w8, #0, 8034 <mpc_asinh@@Base+0x264>
    8028:	mov	w8, #0x2                   	// #2
    802c:	str	w8, [sp, #12]
    8030:	b	8080 <mpc_asinh@@Base+0x2b0>
    8034:	ldur	w8, [x29, #-24]
    8038:	and	w8, w8, #0x3
    803c:	cmp	w8, #0x2
    8040:	b.ne	8050 <mpc_asinh@@Base+0x280>  // b.any
    8044:	mov	w8, #0xffffffff            	// #-1
    8048:	str	w8, [sp, #8]
    804c:	b	8068 <mpc_asinh@@Base+0x298>
    8050:	ldur	w8, [x29, #-24]
    8054:	mov	w9, wzr
    8058:	mov	w10, #0x1                   	// #1
    805c:	tst	w8, #0x3
    8060:	csel	w8, w9, w10, eq  // eq = none
    8064:	str	w8, [sp, #8]
    8068:	ldr	w8, [sp, #8]
    806c:	mov	w9, wzr
    8070:	mov	w10, #0x1                   	// #1
    8074:	cmn	w8, #0x0
    8078:	csel	w8, w9, w10, eq  // eq = none
    807c:	str	w8, [sp, #12]
    8080:	ldr	w8, [sp, #12]
    8084:	ldr	w9, [sp, #20]
    8088:	orr	w0, w9, w8, lsl #2
    808c:	ldr	x28, [sp, #272]
    8090:	ldp	x29, x30, [sp, #256]
    8094:	add	sp, sp, #0x120
    8098:	ret

000000000000809c <set_pi_over_2@@Base>:
    809c:	sub	sp, sp, #0x40
    80a0:	stp	x29, x30, [sp, #48]
    80a4:	add	x29, sp, #0x30
    80a8:	stur	x0, [x29, #-8]
    80ac:	stur	w1, [x29, #-12]
    80b0:	stur	w2, [x29, #-16]
    80b4:	ldur	x0, [x29, #-8]
    80b8:	ldur	w8, [x29, #-12]
    80bc:	cmp	w8, #0x0
    80c0:	cset	w8, ge  // ge = tcont
    80c4:	str	x0, [sp, #16]
    80c8:	tbnz	w8, #0, 8118 <set_pi_over_2@@Base+0x7c>
    80cc:	ldur	w8, [x29, #-16]
    80d0:	cmp	w8, #0x2
    80d4:	b.ne	80e4 <set_pi_over_2@@Base+0x48>  // b.any
    80d8:	mov	w8, #0x3                   	// #3
    80dc:	str	w8, [sp, #12]
    80e0:	b	810c <set_pi_over_2@@Base+0x70>
    80e4:	ldur	w8, [x29, #-16]
    80e8:	cmp	w8, #0x3
    80ec:	b.ne	80fc <set_pi_over_2@@Base+0x60>  // b.any
    80f0:	mov	w8, #0x2                   	// #2
    80f4:	str	w8, [sp, #8]
    80f8:	b	8104 <set_pi_over_2@@Base+0x68>
    80fc:	ldur	w8, [x29, #-16]
    8100:	str	w8, [sp, #8]
    8104:	ldr	w8, [sp, #8]
    8108:	str	w8, [sp, #12]
    810c:	ldr	w8, [sp, #12]
    8110:	str	w8, [sp, #4]
    8114:	b	8120 <set_pi_over_2@@Base+0x84>
    8118:	ldur	w8, [x29, #-16]
    811c:	str	w8, [sp, #4]
    8120:	ldr	w8, [sp, #4]
    8124:	ldr	x0, [sp, #16]
    8128:	mov	w1, w8
    812c:	bl	4b60 <mpfr_const_pi@plt>
    8130:	stur	w0, [x29, #-20]
    8134:	ldur	x0, [x29, #-8]
    8138:	ldur	x1, [x29, #-8]
    813c:	mov	x2, #0x1                   	// #1
    8140:	mov	w8, wzr
    8144:	mov	w3, w8
    8148:	bl	5420 <mpfr_div_2ui@plt>
    814c:	ldur	w8, [x29, #-12]
    8150:	cmp	w8, #0x0
    8154:	cset	w8, ge  // ge = tcont
    8158:	tbnz	w8, #0, 817c <set_pi_over_2@@Base+0xe0>
    815c:	ldur	w8, [x29, #-20]
    8160:	mov	w9, wzr
    8164:	subs	w8, w9, w8
    8168:	stur	w8, [x29, #-20]
    816c:	ldur	x0, [x29, #-8]
    8170:	ldur	x1, [x29, #-8]
    8174:	mov	w2, w9
    8178:	bl	4c60 <mpfr_neg@plt>
    817c:	ldur	w0, [x29, #-20]
    8180:	ldp	x29, x30, [sp, #48]
    8184:	add	sp, sp, #0x40
    8188:	ret

000000000000818c <mpc_atan@@Base>:
    818c:	stp	x29, x30, [sp, #-32]!
    8190:	str	x28, [sp, #16]
    8194:	mov	x29, sp
    8198:	sub	sp, sp, #0x2f0
    819c:	mov	x8, #0x2                   	// #2
    81a0:	movk	x8, #0x8000, lsl #48
    81a4:	adrp	x9, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    81a8:	ldr	x9, [x9, #4008]
    81ac:	adrp	x10, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    81b0:	add	x10, x10, #0x2a0
    81b4:	adrp	x11, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    81b8:	add	x11, x11, #0x304
    81bc:	stur	x0, [x29, #-16]
    81c0:	stur	x1, [x29, #-24]
    81c4:	stur	w2, [x29, #-28]
    81c8:	stur	wzr, [x29, #-40]
    81cc:	stur	wzr, [x29, #-44]
    81d0:	ldur	x12, [x29, #-24]
    81d4:	ldr	w13, [x12, #8]
    81d8:	cmp	w13, #0x0
    81dc:	cset	w13, lt  // lt = tstop
    81e0:	and	w13, w13, #0x1
    81e4:	stur	w13, [x29, #-32]
    81e8:	ldur	x12, [x29, #-24]
    81ec:	ldr	w13, [x12, #40]
    81f0:	cmp	w13, #0x0
    81f4:	cset	w13, lt  // lt = tstop
    81f8:	and	w13, w13, #0x1
    81fc:	stur	w13, [x29, #-36]
    8200:	ldur	x12, [x29, #-24]
    8204:	ldr	x12, [x12, #16]
    8208:	cmp	x12, x8
    820c:	str	x9, [sp, #272]
    8210:	str	x10, [sp, #264]
    8214:	str	x11, [sp, #256]
    8218:	b.eq	8234 <mpc_atan@@Base+0xa8>  // b.none
    821c:	ldur	x8, [x29, #-24]
    8220:	ldr	x8, [x8, #48]
    8224:	mov	x9, #0x2                   	// #2
    8228:	movk	x9, #0x8000, lsl #48
    822c:	cmp	x8, x9
    8230:	b.ne	8388 <mpc_atan@@Base+0x1fc>  // b.any
    8234:	ldur	x8, [x29, #-24]
    8238:	ldr	x8, [x8, #16]
    823c:	mov	x9, #0x2                   	// #2
    8240:	movk	x9, #0x8000, lsl #48
    8244:	cmp	x8, x9
    8248:	b.ne	82d4 <mpc_atan@@Base+0x148>  // b.any
    824c:	ldur	x0, [x29, #-16]
    8250:	bl	4b20 <mpfr_set_nan@plt>
    8254:	ldur	x8, [x29, #-24]
    8258:	ldr	x8, [x8, #48]
    825c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    8260:	cmp	x8, x9
    8264:	b.eq	827c <mpc_atan@@Base+0xf0>  // b.none
    8268:	ldur	x8, [x29, #-24]
    826c:	ldr	x8, [x8, #48]
    8270:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8274:	cmp	x8, x9
    8278:	b.ne	82c4 <mpc_atan@@Base+0x138>  // b.any
    827c:	ldur	x8, [x29, #-16]
    8280:	add	x8, x8, #0x20
    8284:	stur	x8, [x29, #-56]
    8288:	ldur	x8, [x29, #-56]
    828c:	mov	w9, #0x1                   	// #1
    8290:	str	w9, [x8, #8]
    8294:	ldur	x8, [x29, #-56]
    8298:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    829c:	str	x10, [x8, #16]
    82a0:	stur	wzr, [x29, #-60]
    82a4:	ldur	w9, [x29, #-36]
    82a8:	cbz	w9, 82c0 <mpc_atan@@Base+0x134>
    82ac:	ldur	x0, [x29, #-16]
    82b0:	ldur	x1, [x29, #-16]
    82b4:	mov	w8, wzr
    82b8:	mov	w2, w8
    82bc:	bl	5060 <mpc_conj@plt>
    82c0:	b	82d0 <mpc_atan@@Base+0x144>
    82c4:	ldur	x8, [x29, #-16]
    82c8:	add	x0, x8, #0x20
    82cc:	bl	4b20 <mpfr_set_nan@plt>
    82d0:	b	8348 <mpc_atan@@Base+0x1bc>
    82d4:	ldur	x8, [x29, #-24]
    82d8:	ldr	x8, [x8, #16]
    82dc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    82e0:	cmp	x8, x9
    82e4:	b.ne	8334 <mpc_atan@@Base+0x1a8>  // b.any
    82e8:	ldur	x0, [x29, #-16]
    82ec:	ldur	w8, [x29, #-32]
    82f0:	mov	w9, wzr
    82f4:	subs	w1, w9, w8
    82f8:	ldur	w8, [x29, #-28]
    82fc:	and	w2, w8, #0xf
    8300:	bl	54f0 <set_pi_over_2@plt>
    8304:	stur	w0, [x29, #-40]
    8308:	ldur	x10, [x29, #-16]
    830c:	add	x10, x10, #0x20
    8310:	stur	x10, [x29, #-72]
    8314:	ldur	x10, [x29, #-72]
    8318:	mov	w8, #0x1                   	// #1
    831c:	str	w8, [x10, #8]
    8320:	ldur	x10, [x29, #-72]
    8324:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    8328:	str	x11, [x10, #16]
    832c:	stur	wzr, [x29, #-76]
    8330:	b	8348 <mpc_atan@@Base+0x1bc>
    8334:	ldur	x0, [x29, #-16]
    8338:	bl	4b20 <mpfr_set_nan@plt>
    833c:	ldur	x8, [x29, #-16]
    8340:	add	x0, x8, #0x20
    8344:	bl	4b20 <mpfr_set_nan@plt>
    8348:	ldur	w8, [x29, #-40]
    834c:	cmp	w8, #0x0
    8350:	cset	w8, ge  // ge = tcont
    8354:	tbnz	w8, #0, 8364 <mpc_atan@@Base+0x1d8>
    8358:	mov	w8, #0x2                   	// #2
    835c:	str	w8, [sp, #252]
    8360:	b	837c <mpc_atan@@Base+0x1f0>
    8364:	ldur	w8, [x29, #-40]
    8368:	mov	w9, wzr
    836c:	mov	w10, #0x1                   	// #1
    8370:	cmp	w8, #0x0
    8374:	csel	w8, w9, w10, eq  // eq = none
    8378:	str	w8, [sp, #252]
    837c:	ldr	w8, [sp, #252]
    8380:	stur	w8, [x29, #-4]
    8384:	b	90c0 <mpc_atan@@Base+0xf34>
    8388:	ldur	x8, [x29, #-24]
    838c:	ldr	x8, [x8, #16]
    8390:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8394:	cmp	x8, x9
    8398:	b.eq	83b0 <mpc_atan@@Base+0x224>  // b.none
    839c:	ldur	x8, [x29, #-24]
    83a0:	ldr	x8, [x8, #48]
    83a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    83a8:	cmp	x8, x9
    83ac:	b.ne	8454 <mpc_atan@@Base+0x2c8>  // b.any
    83b0:	ldur	x0, [x29, #-16]
    83b4:	ldur	w8, [x29, #-32]
    83b8:	mov	w9, wzr
    83bc:	subs	w1, w9, w8
    83c0:	ldur	w8, [x29, #-28]
    83c4:	and	w2, w8, #0xf
    83c8:	bl	54f0 <set_pi_over_2@plt>
    83cc:	stur	w0, [x29, #-40]
    83d0:	ldur	x10, [x29, #-16]
    83d4:	add	x10, x10, #0x20
    83d8:	stur	x10, [x29, #-88]
    83dc:	ldur	x10, [x29, #-88]
    83e0:	mov	w8, #0x1                   	// #1
    83e4:	str	w8, [x10, #8]
    83e8:	ldur	x10, [x29, #-88]
    83ec:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    83f0:	str	x11, [x10, #16]
    83f4:	stur	wzr, [x29, #-92]
    83f8:	ldur	w8, [x29, #-36]
    83fc:	cbz	w8, 8414 <mpc_atan@@Base+0x288>
    8400:	ldur	x0, [x29, #-16]
    8404:	ldur	x1, [x29, #-16]
    8408:	mov	w8, wzr
    840c:	mov	w2, w8
    8410:	bl	5060 <mpc_conj@plt>
    8414:	ldur	w8, [x29, #-40]
    8418:	cmp	w8, #0x0
    841c:	cset	w8, ge  // ge = tcont
    8420:	tbnz	w8, #0, 8430 <mpc_atan@@Base+0x2a4>
    8424:	mov	w8, #0x2                   	// #2
    8428:	str	w8, [sp, #248]
    842c:	b	8448 <mpc_atan@@Base+0x2bc>
    8430:	ldur	w8, [x29, #-40]
    8434:	mov	w9, wzr
    8438:	mov	w10, #0x1                   	// #1
    843c:	cmp	w8, #0x0
    8440:	csel	w8, w9, w10, eq  // eq = none
    8444:	str	w8, [sp, #248]
    8448:	ldr	w8, [sp, #248]
    844c:	stur	w8, [x29, #-4]
    8450:	b	90c0 <mpc_atan@@Base+0xf34>
    8454:	ldur	x8, [x29, #-24]
    8458:	ldr	x8, [x8, #48]
    845c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    8460:	cmp	x8, x9
    8464:	b.ne	8504 <mpc_atan@@Base+0x378>  // b.any
    8468:	ldur	x0, [x29, #-16]
    846c:	ldur	x1, [x29, #-24]
    8470:	ldur	w8, [x29, #-28]
    8474:	and	w2, w8, #0xf
    8478:	bl	52b0 <mpfr_atan@plt>
    847c:	stur	w0, [x29, #-40]
    8480:	ldur	x9, [x29, #-16]
    8484:	add	x9, x9, #0x20
    8488:	stur	x9, [x29, #-104]
    848c:	ldur	x9, [x29, #-104]
    8490:	mov	w8, #0x1                   	// #1
    8494:	str	w8, [x9, #8]
    8498:	ldur	x9, [x29, #-104]
    849c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    84a0:	str	x10, [x9, #16]
    84a4:	stur	wzr, [x29, #-108]
    84a8:	ldur	w8, [x29, #-36]
    84ac:	cbz	w8, 84c4 <mpc_atan@@Base+0x338>
    84b0:	ldur	x0, [x29, #-16]
    84b4:	ldur	x1, [x29, #-16]
    84b8:	mov	w8, wzr
    84bc:	mov	w2, w8
    84c0:	bl	5060 <mpc_conj@plt>
    84c4:	ldur	w8, [x29, #-40]
    84c8:	cmp	w8, #0x0
    84cc:	cset	w8, ge  // ge = tcont
    84d0:	tbnz	w8, #0, 84e0 <mpc_atan@@Base+0x354>
    84d4:	mov	w8, #0x2                   	// #2
    84d8:	str	w8, [sp, #244]
    84dc:	b	84f8 <mpc_atan@@Base+0x36c>
    84e0:	ldur	w8, [x29, #-40]
    84e4:	mov	w9, wzr
    84e8:	mov	w10, #0x1                   	// #1
    84ec:	cmp	w8, #0x0
    84f0:	csel	w8, w9, w10, eq  // eq = none
    84f4:	str	w8, [sp, #244]
    84f8:	ldr	w8, [sp, #244]
    84fc:	stur	w8, [x29, #-4]
    8500:	b	90c0 <mpc_atan@@Base+0xf34>
    8504:	ldur	x8, [x29, #-24]
    8508:	ldr	x8, [x8, #16]
    850c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    8510:	cmp	x8, x9
    8514:	b.ne	8900 <mpc_atan@@Base+0x774>  // b.any
    8518:	ldur	w8, [x29, #-36]
    851c:	cbz	w8, 8548 <mpc_atan@@Base+0x3bc>
    8520:	ldur	x8, [x29, #-24]
    8524:	add	x0, x8, #0x20
    8528:	mov	x1, #0xffffffffffffffff    	// #-1
    852c:	mov	x8, xzr
    8530:	mov	x2, x8
    8534:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    8538:	mov	w9, wzr
    853c:	subs	w9, w9, w0
    8540:	stur	w9, [x29, #-112]
    8544:	b	8564 <mpc_atan@@Base+0x3d8>
    8548:	ldur	x8, [x29, #-24]
    854c:	add	x0, x8, #0x20
    8550:	mov	x1, #0x1                   	// #1
    8554:	mov	x8, xzr
    8558:	mov	x2, x8
    855c:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    8560:	stur	w0, [x29, #-112]
    8564:	ldur	w8, [x29, #-112]
    8568:	cmp	w8, #0x0
    856c:	cset	w8, ge  // ge = tcont
    8570:	tbnz	w8, #0, 85d8 <mpc_atan@@Base+0x44c>
    8574:	ldur	x8, [x29, #-16]
    8578:	stur	x8, [x29, #-120]
    857c:	ldur	x8, [x29, #-120]
    8580:	mov	w9, #0x1                   	// #1
    8584:	str	w9, [x8, #8]
    8588:	ldur	x8, [x29, #-120]
    858c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    8590:	str	x10, [x8, #16]
    8594:	stur	wzr, [x29, #-124]
    8598:	ldur	w9, [x29, #-32]
    859c:	cbz	w9, 85b4 <mpc_atan@@Base+0x428>
    85a0:	ldur	x0, [x29, #-16]
    85a4:	ldur	x1, [x29, #-16]
    85a8:	mov	w8, wzr
    85ac:	mov	w2, w8
    85b0:	bl	4c60 <mpfr_neg@plt>
    85b4:	ldur	x8, [x29, #-16]
    85b8:	add	x0, x8, #0x20
    85bc:	ldur	x8, [x29, #-24]
    85c0:	add	x1, x8, #0x20
    85c4:	ldur	w9, [x29, #-28]
    85c8:	asr	w2, w9, #4
    85cc:	bl	4e70 <mpfr_atanh@plt>
    85d0:	stur	w0, [x29, #-44]
    85d4:	b	887c <mpc_atan@@Base+0x6f0>
    85d8:	ldur	w8, [x29, #-112]
    85dc:	cbnz	w8, 8628 <mpc_atan@@Base+0x49c>
    85e0:	ldur	x0, [x29, #-16]
    85e4:	ldur	w8, [x29, #-32]
    85e8:	mov	w9, #0xffffffff            	// #-1
    85ec:	mov	w10, #0x1                   	// #1
    85f0:	cmp	w8, #0x0
    85f4:	csel	w1, w9, w10, ne  // ne = any
    85f8:	str	w9, [sp, #240]
    85fc:	str	w10, [sp, #236]
    8600:	bl	4dd0 <mpfr_set_zero@plt>
    8604:	ldur	x11, [x29, #-16]
    8608:	add	x0, x11, #0x20
    860c:	ldur	w8, [x29, #-36]
    8610:	cmp	w8, #0x0
    8614:	ldr	w8, [sp, #240]
    8618:	ldr	w9, [sp, #236]
    861c:	csel	w1, w8, w9, ne  // ne = any
    8620:	bl	5220 <mpfr_set_inf@plt>
    8624:	b	887c <mpc_atan@@Base+0x6f0>
    8628:	ldur	w8, [x29, #-28]
    862c:	asr	w8, w8, #4
    8630:	stur	w8, [x29, #-128]
    8634:	sub	x0, x29, #0xa8
    8638:	bl	4b80 <mpfr_init@plt>
    863c:	sub	x0, x29, #0xc8
    8640:	bl	4b80 <mpfr_init@plt>
    8644:	ldur	x9, [x29, #-16]
    8648:	ldr	x9, [x9, #32]
    864c:	stur	x9, [x29, #-216]
    8650:	ldur	x9, [x29, #-216]
    8654:	stur	x9, [x29, #-208]
    8658:	ldur	x0, [x29, #-208]
    865c:	bl	4de0 <mpc_ceil_log2@plt>
    8660:	add	x8, x0, #0x2
    8664:	ldur	x9, [x29, #-208]
    8668:	add	x8, x9, x8
    866c:	stur	x8, [x29, #-208]
    8670:	ldur	x1, [x29, #-208]
    8674:	sub	x8, x29, #0xa8
    8678:	mov	x0, x8
    867c:	str	x8, [sp, #224]
    8680:	bl	4d40 <mpfr_set_prec@plt>
    8684:	ldur	x1, [x29, #-208]
    8688:	sub	x8, x29, #0xc8
    868c:	mov	x0, x8
    8690:	str	x8, [sp, #216]
    8694:	bl	4d40 <mpfr_set_prec@plt>
    8698:	ldur	w10, [x29, #-36]
    869c:	mov	w11, #0x2                   	// #2
    86a0:	mov	w12, #0x3                   	// #3
    86a4:	cmp	w10, #0x0
    86a8:	csel	w10, w11, w12, eq  // eq = none
    86ac:	stur	w10, [x29, #-132]
    86b0:	ldur	x8, [x29, #-24]
    86b4:	add	x2, x8, #0x20
    86b8:	ldur	w3, [x29, #-132]
    86bc:	ldr	x0, [sp, #224]
    86c0:	mov	x1, #0x1                   	// #1
    86c4:	str	w11, [sp, #212]
    86c8:	bl	5070 <mpfr_ui_div@plt>
    86cc:	stur	w0, [x29, #-44]
    86d0:	ldur	x8, [x29, #-152]
    86d4:	stur	x8, [x29, #-240]
    86d8:	ldr	x0, [sp, #216]
    86dc:	ldr	x1, [sp, #224]
    86e0:	ldr	w2, [sp, #212]
    86e4:	bl	5110 <mpfr_sqr@plt>
    86e8:	sub	x0, x29, #0xc8
    86ec:	mov	x1, #0x1                   	// #1
    86f0:	mov	x8, xzr
    86f4:	mov	x2, x8
    86f8:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    86fc:	cmp	w0, #0x0
    8700:	cset	w9, le
    8704:	tbnz	w9, #0, 872c <mpc_atan@@Base+0x5a0>
    8708:	ldr	x8, [sp, #272]
    870c:	ldr	x0, [x8]
    8710:	ldr	x1, [sp, #264]
    8714:	ldr	x2, [sp, #256]
    8718:	mov	w3, #0xba                  	// #186
    871c:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    8720:	add	x4, x4, #0x30b
    8724:	bl	56a0 <fprintf@plt>
    8728:	bl	5100 <abort@plt>
    872c:	sub	x0, x29, #0xc8
    8730:	mov	x1, #0x1                   	// #1
    8734:	mov	x8, xzr
    8738:	mov	x2, x8
    873c:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    8740:	cbnz	w0, 8748 <mpc_atan@@Base+0x5bc>
    8744:	b	8820 <mpc_atan@@Base+0x694>
    8748:	sub	x8, x29, #0xc8
    874c:	mov	x0, x8
    8750:	mov	x1, #0x1                   	// #1
    8754:	mov	x2, x8
    8758:	mov	w3, #0x1                   	// #1
    875c:	bl	5520 <mpfr_ui_sub@plt>
    8760:	ldur	w2, [x29, #-132]
    8764:	sub	x8, x29, #0xa8
    8768:	mov	x0, x8
    876c:	mov	x1, x8
    8770:	bl	4e70 <mpfr_atanh@plt>
    8774:	ldur	w9, [x29, #-44]
    8778:	orr	w9, w9, w0
    877c:	stur	w9, [x29, #-44]
    8780:	ldur	x8, [x29, #-240]
    8784:	ldur	x10, [x29, #-152]
    8788:	subs	x8, x8, x10
    878c:	add	x8, x8, #0x1
    8790:	ldur	x10, [x29, #-184]
    8794:	subs	x8, x8, x10
    8798:	stur	x8, [x29, #-232]
    879c:	ldur	x8, [x29, #-232]
    87a0:	cmp	x8, #0x0
    87a4:	cset	w9, lt  // lt = tstop
    87a8:	tbnz	w9, #0, 87bc <mpc_atan@@Base+0x630>
    87ac:	ldur	x8, [x29, #-232]
    87b0:	add	x8, x8, #0x1
    87b4:	stur	x8, [x29, #-232]
    87b8:	b	87c4 <mpc_atan@@Base+0x638>
    87bc:	mov	x8, #0x1                   	// #1
    87c0:	stur	x8, [x29, #-232]
    87c4:	ldur	w8, [x29, #-44]
    87c8:	mov	w9, #0x1                   	// #1
    87cc:	str	w9, [sp, #208]
    87d0:	cbz	w8, 8814 <mpc_atan@@Base+0x688>
    87d4:	ldur	x8, [x29, #-208]
    87d8:	ldur	x9, [x29, #-232]
    87dc:	subs	x1, x8, x9
    87e0:	ldur	w2, [x29, #-132]
    87e4:	ldur	x8, [x29, #-216]
    87e8:	ldur	w10, [x29, #-128]
    87ec:	cmp	w10, #0x0
    87f0:	cset	w10, eq  // eq = none
    87f4:	and	w10, w10, #0x1
    87f8:	add	x4, x8, w10, sxtw
    87fc:	sub	x0, x29, #0xa8
    8800:	mov	w3, #0x1                   	// #1
    8804:	bl	5540 <mpfr_can_round@plt>
    8808:	cmp	w0, #0x0
    880c:	cset	w10, ne  // ne = any
    8810:	str	w10, [sp, #208]
    8814:	ldr	w8, [sp, #208]
    8818:	and	w8, w8, #0x1
    881c:	stur	w8, [x29, #-220]
    8820:	ldur	w8, [x29, #-220]
    8824:	cbz	w8, 8658 <mpc_atan@@Base+0x4cc>
    8828:	ldur	x0, [x29, #-16]
    882c:	ldur	w8, [x29, #-32]
    8830:	mov	w9, wzr
    8834:	subs	w1, w9, w8
    8838:	ldur	w8, [x29, #-28]
    883c:	and	w2, w8, #0xf
    8840:	bl	54f0 <set_pi_over_2@plt>
    8844:	stur	w0, [x29, #-40]
    8848:	ldur	x10, [x29, #-16]
    884c:	add	x0, x10, #0x20
    8850:	ldur	w2, [x29, #-128]
    8854:	sub	x10, x29, #0xa8
    8858:	ldur	w3, [x29, #-160]
    885c:	mov	x1, x10
    8860:	str	x10, [sp, #200]
    8864:	bl	52d0 <mpfr_set4@plt>
    8868:	stur	w0, [x29, #-44]
    886c:	ldr	x0, [sp, #200]
    8870:	bl	4e30 <mpfr_clear@plt>
    8874:	sub	x0, x29, #0xc8
    8878:	bl	4e30 <mpfr_clear@plt>
    887c:	ldur	w8, [x29, #-40]
    8880:	cmp	w8, #0x0
    8884:	cset	w8, ge  // ge = tcont
    8888:	tbnz	w8, #0, 8898 <mpc_atan@@Base+0x70c>
    888c:	mov	w8, #0x2                   	// #2
    8890:	str	w8, [sp, #196]
    8894:	b	88b0 <mpc_atan@@Base+0x724>
    8898:	ldur	w8, [x29, #-40]
    889c:	mov	w9, wzr
    88a0:	mov	w10, #0x1                   	// #1
    88a4:	cmp	w8, #0x0
    88a8:	csel	w8, w9, w10, eq  // eq = none
    88ac:	str	w8, [sp, #196]
    88b0:	ldr	w8, [sp, #196]
    88b4:	ldur	w9, [x29, #-44]
    88b8:	cmp	w9, #0x0
    88bc:	cset	w9, ge  // ge = tcont
    88c0:	str	w8, [sp, #192]
    88c4:	tbnz	w9, #0, 88d4 <mpc_atan@@Base+0x748>
    88c8:	mov	w8, #0x2                   	// #2
    88cc:	str	w8, [sp, #188]
    88d0:	b	88ec <mpc_atan@@Base+0x760>
    88d4:	ldur	w8, [x29, #-44]
    88d8:	mov	w9, wzr
    88dc:	mov	w10, #0x1                   	// #1
    88e0:	cmp	w8, #0x0
    88e4:	csel	w8, w9, w10, eq  // eq = none
    88e8:	str	w8, [sp, #188]
    88ec:	ldr	w8, [sp, #188]
    88f0:	ldr	w9, [sp, #192]
    88f4:	orr	w8, w9, w8, lsl #2
    88f8:	stur	w8, [x29, #-4]
    88fc:	b	90c0 <mpc_atan@@Base+0xf34>
    8900:	mov	w8, wzr
    8904:	str	wzr, [sp, #348]
    8908:	mov	x0, #0x1                   	// #1
    890c:	add	x1, sp, #0x1e0
    8910:	add	x2, sp, #0x1c0
    8914:	add	x3, sp, #0x1a0
    8918:	add	x4, sp, #0x180
    891c:	mov	x9, xzr
    8920:	mov	x5, x9
    8924:	str	w8, [sp, #184]
    8928:	bl	5640 <mpfr_inits2@plt>
    892c:	ldur	x9, [x29, #-24]
    8930:	ldr	q0, [x9]
    8934:	add	x10, sp, #0x130
    8938:	str	q0, [sp, #304]
    893c:	ldr	q0, [x9, #16]
    8940:	str	q0, [sp, #320]
    8944:	mov	x0, x10
    8948:	mov	x1, x10
    894c:	ldr	w2, [sp, #184]
    8950:	bl	4c60 <mpfr_neg@plt>
    8954:	ldur	x9, [x29, #-24]
    8958:	ldr	x9, [x9, #16]
    895c:	str	x9, [sp, #296]
    8960:	ldur	x9, [x29, #-24]
    8964:	ldr	x9, [x9, #48]
    8968:	str	x9, [sp, #288]
    896c:	ldur	x9, [x29, #-16]
    8970:	ldr	x9, [x9]
    8974:	str	x9, [sp, #376]
    8978:	ldr	x9, [sp, #288]
    897c:	cmp	x9, #0x0
    8980:	cset	w8, gt
    8984:	tbnz	w8, #0, 89cc <mpc_atan@@Base+0x840>
    8988:	ldr	x8, [sp, #376]
    898c:	ldr	x9, [sp, #288]
    8990:	cmp	x9, #0x0
    8994:	cset	w10, lt  // lt = tstop
    8998:	str	x8, [sp, #176]
    899c:	tbnz	w10, #0, 89ac <mpc_atan@@Base+0x820>
    89a0:	ldr	x8, [sp, #288]
    89a4:	str	x8, [sp, #168]
    89a8:	b	89bc <mpc_atan@@Base+0x830>
    89ac:	ldr	x8, [sp, #288]
    89b0:	mov	x9, xzr
    89b4:	subs	x8, x9, x8
    89b8:	str	x8, [sp, #168]
    89bc:	ldr	x8, [sp, #168]
    89c0:	ldr	x9, [sp, #176]
    89c4:	cmp	x9, x8
    89c8:	b.le	89d8 <mpc_atan@@Base+0x84c>
    89cc:	ldr	x8, [sp, #376]
    89d0:	str	x8, [sp, #160]
    89d4:	b	89e8 <mpc_atan@@Base+0x85c>
    89d8:	ldr	x8, [sp, #376]
    89dc:	ldr	x9, [sp, #288]
    89e0:	subs	x8, x8, x9
    89e4:	str	x8, [sp, #160]
    89e8:	ldr	x8, [sp, #160]
    89ec:	str	x8, [sp, #368]
    89f0:	ldur	x8, [x29, #-24]
    89f4:	ldr	x8, [x8, #16]
    89f8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    89fc:	cmp	x8, x9
    8a00:	b.ge	8a30 <mpc_atan@@Base+0x8a4>  // b.tcont
    8a04:	ldur	x8, [x29, #-24]
    8a08:	ldr	x8, [x8, #16]
    8a0c:	mov	x9, #0x2                   	// #2
    8a10:	movk	x9, #0x8000, lsl #48
    8a14:	cmp	x8, x9
    8a18:	b.ne	8a24 <mpc_atan@@Base+0x898>  // b.any
    8a1c:	bl	4be0 <mpfr_set_erangeflag@plt>
    8a20:	b	8a24 <mpc_atan@@Base+0x898>
    8a24:	mov	w8, wzr
    8a28:	str	w8, [sp, #156]
    8a2c:	b	8a3c <mpc_atan@@Base+0x8b0>
    8a30:	ldur	x8, [x29, #-24]
    8a34:	ldr	w9, [x8, #8]
    8a38:	str	w9, [sp, #156]
    8a3c:	ldr	w8, [sp, #156]
    8a40:	mov	w9, #0x2                   	// #2
    8a44:	mov	w10, #0x3                   	// #3
    8a48:	cmp	w8, #0x0
    8a4c:	csel	w8, w10, w9, gt
    8a50:	str	w8, [sp, #284]
    8a54:	ldur	x11, [x29, #-24]
    8a58:	ldr	x11, [x11, #16]
    8a5c:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
    8a60:	cmp	x11, x12
    8a64:	b.ge	8a94 <mpc_atan@@Base+0x908>  // b.tcont
    8a68:	ldur	x8, [x29, #-24]
    8a6c:	ldr	x8, [x8, #16]
    8a70:	mov	x9, #0x2                   	// #2
    8a74:	movk	x9, #0x8000, lsl #48
    8a78:	cmp	x8, x9
    8a7c:	b.ne	8a88 <mpc_atan@@Base+0x8fc>  // b.any
    8a80:	bl	4be0 <mpfr_set_erangeflag@plt>
    8a84:	b	8a88 <mpc_atan@@Base+0x8fc>
    8a88:	mov	w8, wzr
    8a8c:	str	w8, [sp, #152]
    8a90:	b	8aa0 <mpc_atan@@Base+0x914>
    8a94:	ldur	x8, [x29, #-24]
    8a98:	ldr	w9, [x8, #8]
    8a9c:	str	w9, [sp, #152]
    8aa0:	ldr	w8, [sp, #152]
    8aa4:	mov	w9, #0x2                   	// #2
    8aa8:	mov	w10, #0x3                   	// #3
    8aac:	cmp	w8, #0x0
    8ab0:	csel	w8, w9, w10, lt  // lt = tstop
    8ab4:	str	w8, [sp, #280]
    8ab8:	ldr	x0, [sp, #368]
    8abc:	bl	4de0 <mpc_ceil_log2@plt>
    8ac0:	add	x8, x0, #0x2
    8ac4:	ldr	x9, [sp, #368]
    8ac8:	add	x8, x9, x8
    8acc:	str	x8, [sp, #368]
    8ad0:	ldr	x1, [sp, #368]
    8ad4:	add	x8, sp, #0x1e0
    8ad8:	mov	x0, x8
    8adc:	str	x8, [sp, #144]
    8ae0:	bl	4d40 <mpfr_set_prec@plt>
    8ae4:	ldr	x1, [sp, #368]
    8ae8:	add	x0, sp, #0x1c0
    8aec:	bl	4d40 <mpfr_set_prec@plt>
    8af0:	ldr	x1, [sp, #368]
    8af4:	add	x0, sp, #0x1a0
    8af8:	bl	4d40 <mpfr_set_prec@plt>
    8afc:	ldur	x8, [x29, #-24]
    8b00:	add	x2, x8, #0x20
    8b04:	ldr	w3, [sp, #284]
    8b08:	ldr	x0, [sp, #144]
    8b0c:	mov	x1, #0x1                   	// #1
    8b10:	bl	5520 <mpfr_ui_sub@plt>
    8b14:	ldr	x8, [sp, #496]
    8b18:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8b1c:	cmp	x8, x9
    8b20:	b.ge	8b4c <mpc_atan@@Base+0x9c0>  // b.tcont
    8b24:	ldr	x8, [sp, #496]
    8b28:	mov	x9, #0x2                   	// #2
    8b2c:	movk	x9, #0x8000, lsl #48
    8b30:	cmp	x8, x9
    8b34:	b.ne	8b40 <mpc_atan@@Base+0x9b4>  // b.any
    8b38:	bl	4be0 <mpfr_set_erangeflag@plt>
    8b3c:	b	8b40 <mpc_atan@@Base+0x9b4>
    8b40:	mov	w8, wzr
    8b44:	str	w8, [sp, #140]
    8b48:	b	8b54 <mpc_atan@@Base+0x9c8>
    8b4c:	ldr	w8, [sp, #488]
    8b50:	str	w8, [sp, #140]
    8b54:	ldr	w8, [sp, #140]
    8b58:	cbnz	w8, 8ba8 <mpc_atan@@Base+0xa1c>
    8b5c:	ldur	x8, [x29, #-24]
    8b60:	add	x0, x8, #0x20
    8b64:	mov	x1, #0x1                   	// #1
    8b68:	mov	x8, xzr
    8b6c:	mov	x2, x8
    8b70:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    8b74:	cbz	w0, 8b9c <mpc_atan@@Base+0xa10>
    8b78:	ldr	x8, [sp, #272]
    8b7c:	ldr	x0, [x8]
    8b80:	ldr	x1, [sp, #264]
    8b84:	ldr	x2, [sp, #256]
    8b88:	mov	w3, #0x113                 	// #275
    8b8c:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    8b90:	add	x4, x4, #0x323
    8b94:	bl	56a0 <fprintf@plt>
    8b98:	bl	5100 <abort@plt>
    8b9c:	mov	x8, #0x2                   	// #2
    8ba0:	str	x8, [sp, #360]
    8ba4:	b	8bb0 <mpc_atan@@Base+0xa24>
    8ba8:	ldr	x8, [sp, #496]
    8bac:	str	x8, [sp, #360]
    8bb0:	ldur	x1, [x29, #-24]
    8bb4:	add	x0, sp, #0x1a0
    8bb8:	add	x8, sp, #0x1e0
    8bbc:	mov	x2, x8
    8bc0:	mov	w3, #0x2                   	// #2
    8bc4:	str	x8, [sp, #128]
    8bc8:	bl	4d60 <mpfr_atan2@plt>
    8bcc:	ldur	x8, [x29, #-24]
    8bd0:	add	x1, x8, #0x20
    8bd4:	ldr	w3, [sp, #280]
    8bd8:	ldr	x8, [sp, #128]
    8bdc:	mov	x0, x8
    8be0:	mov	x2, #0x1                   	// #1
    8be4:	bl	4fe0 <mpfr_add_ui@plt>
    8be8:	ldr	x8, [sp, #496]
    8bec:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    8bf0:	cmp	x8, x9
    8bf4:	b.ge	8c20 <mpc_atan@@Base+0xa94>  // b.tcont
    8bf8:	ldr	x8, [sp, #496]
    8bfc:	mov	x9, #0x2                   	// #2
    8c00:	movk	x9, #0x8000, lsl #48
    8c04:	cmp	x8, x9
    8c08:	b.ne	8c14 <mpc_atan@@Base+0xa88>  // b.any
    8c0c:	bl	4be0 <mpfr_set_erangeflag@plt>
    8c10:	b	8c14 <mpc_atan@@Base+0xa88>
    8c14:	mov	w8, wzr
    8c18:	str	w8, [sp, #124]
    8c1c:	b	8c28 <mpc_atan@@Base+0xa9c>
    8c20:	ldr	w8, [sp, #488]
    8c24:	str	w8, [sp, #124]
    8c28:	ldr	w8, [sp, #124]
    8c2c:	cbnz	w8, 8c7c <mpc_atan@@Base+0xaf0>
    8c30:	ldur	x8, [x29, #-24]
    8c34:	add	x0, x8, #0x20
    8c38:	mov	x1, #0xffffffffffffffff    	// #-1
    8c3c:	mov	x8, xzr
    8c40:	mov	x2, x8
    8c44:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    8c48:	cbz	w0, 8c70 <mpc_atan@@Base+0xae4>
    8c4c:	ldr	x8, [sp, #272]
    8c50:	ldr	x0, [x8]
    8c54:	ldr	x1, [sp, #264]
    8c58:	ldr	x2, [sp, #256]
    8c5c:	mov	w3, #0x122                 	// #290
    8c60:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    8c64:	add	x4, x4, #0x349
    8c68:	bl	56a0 <fprintf@plt>
    8c6c:	bl	5100 <abort@plt>
    8c70:	ldr	x8, [sp, #360]
    8c74:	str	x8, [sp, #352]
    8c78:	b	8c84 <mpc_atan@@Base+0xaf8>
    8c7c:	ldr	x8, [sp, #496]
    8c80:	str	x8, [sp, #352]
    8c84:	add	x0, sp, #0x1c0
    8c88:	add	x1, sp, #0x130
    8c8c:	add	x2, sp, #0x1e0
    8c90:	mov	w3, #0x3                   	// #3
    8c94:	bl	4d60 <mpfr_atan2@plt>
    8c98:	ldr	x8, [sp, #360]
    8c9c:	ldr	x9, [sp, #352]
    8ca0:	cmp	x8, x9
    8ca4:	b.ge	8cb4 <mpc_atan@@Base+0xb28>  // b.tcont
    8ca8:	ldr	x8, [sp, #360]
    8cac:	str	x8, [sp, #112]
    8cb0:	b	8cbc <mpc_atan@@Base+0xb30>
    8cb4:	ldr	x8, [sp, #352]
    8cb8:	str	x8, [sp, #112]
    8cbc:	ldr	x8, [sp, #112]
    8cc0:	str	x8, [sp, #360]
    8cc4:	add	x8, sp, #0x1a0
    8cc8:	mov	x0, x8
    8ccc:	mov	x1, x8
    8cd0:	add	x2, sp, #0x1c0
    8cd4:	mov	w3, #0x2                   	// #2
    8cd8:	bl	4b40 <mpfr_sub@plt>
    8cdc:	ldr	x8, [sp, #296]
    8ce0:	add	x8, x8, #0x5
    8ce4:	ldr	x9, [sp, #360]
    8ce8:	subs	x8, x8, x9
    8cec:	ldr	x9, [sp, #432]
    8cf0:	subs	x8, x8, x9
    8cf4:	str	x8, [sp, #360]
    8cf8:	ldr	x8, [sp, #360]
    8cfc:	cmp	x8, #0x0
    8d00:	cset	w10, ge  // ge = tcont
    8d04:	tbnz	w10, #0, 8d14 <mpc_atan@@Base+0xb88>
    8d08:	mov	x8, #0x1                   	// #1
    8d0c:	str	x8, [sp, #104]
    8d10:	b	8d20 <mpc_atan@@Base+0xb94>
    8d14:	ldr	x8, [sp, #360]
    8d18:	add	x8, x8, #0x1
    8d1c:	str	x8, [sp, #104]
    8d20:	ldr	x8, [sp, #104]
    8d24:	str	x8, [sp, #360]
    8d28:	add	x8, sp, #0x1a0
    8d2c:	mov	x0, x8
    8d30:	mov	x1, x8
    8d34:	mov	x2, #0x1                   	// #1
    8d38:	mov	w9, #0x2                   	// #2
    8d3c:	mov	w3, w9
    8d40:	str	x8, [sp, #96]
    8d44:	str	w9, [sp, #92]
    8d48:	bl	5420 <mpfr_div_2ui@plt>
    8d4c:	ldr	x8, [sp, #368]
    8d50:	ldr	x10, [sp, #360]
    8d54:	subs	x1, x8, x10
    8d58:	ldr	x8, [sp, #376]
    8d5c:	ldur	w9, [x29, #-28]
    8d60:	tst	w9, #0xf
    8d64:	cset	w9, eq  // eq = none
    8d68:	and	w9, w9, #0x1
    8d6c:	add	x4, x8, w9, sxtw
    8d70:	ldr	x8, [sp, #96]
    8d74:	mov	x0, x8
    8d78:	ldr	w2, [sp, #92]
    8d7c:	mov	w3, #0x3                   	// #3
    8d80:	bl	5540 <mpfr_can_round@plt>
    8d84:	str	w0, [sp, #348]
    8d88:	ldr	w8, [sp, #348]
    8d8c:	cbz	w8, 8ab8 <mpc_atan@@Base+0x92c>
    8d90:	ldur	x8, [x29, #-16]
    8d94:	ldr	x8, [x8, #32]
    8d98:	str	x8, [sp, #376]
    8d9c:	mov	x8, #0x2                   	// #2
    8da0:	str	x8, [sp, #360]
    8da4:	ldr	x8, [sp, #376]
    8da8:	str	x8, [sp, #368]
    8dac:	ldr	x0, [sp, #368]
    8db0:	bl	4de0 <mpc_ceil_log2@plt>
    8db4:	ldr	x8, [sp, #360]
    8db8:	add	x8, x0, x8
    8dbc:	ldr	x9, [sp, #368]
    8dc0:	add	x8, x9, x8
    8dc4:	str	x8, [sp, #368]
    8dc8:	ldr	x1, [sp, #368]
    8dcc:	add	x8, sp, #0x1e0
    8dd0:	mov	x0, x8
    8dd4:	str	x8, [sp, #80]
    8dd8:	bl	4d40 <mpfr_set_prec@plt>
    8ddc:	ldr	x1, [sp, #368]
    8de0:	add	x8, sp, #0x1c0
    8de4:	mov	x0, x8
    8de8:	str	x8, [sp, #72]
    8dec:	bl	4d40 <mpfr_set_prec@plt>
    8df0:	ldr	x1, [sp, #368]
    8df4:	add	x8, sp, #0x180
    8df8:	mov	x0, x8
    8dfc:	str	x8, [sp, #64]
    8e00:	bl	4d40 <mpfr_set_prec@plt>
    8e04:	ldur	x8, [x29, #-24]
    8e08:	add	x1, x8, #0x20
    8e0c:	ldr	x0, [sp, #80]
    8e10:	mov	x8, #0x1                   	// #1
    8e14:	mov	x2, x8
    8e18:	mov	w3, #0x4                   	// #4
    8e1c:	str	x8, [sp, #56]
    8e20:	bl	4fe0 <mpfr_add_ui@plt>
    8e24:	ldr	x8, [sp, #80]
    8e28:	mov	x0, x8
    8e2c:	mov	x1, x8
    8e30:	mov	w10, #0x2                   	// #2
    8e34:	mov	w2, w10
    8e38:	str	w10, [sp, #52]
    8e3c:	bl	5110 <mpfr_sqr@plt>
    8e40:	ldur	x1, [x29, #-24]
    8e44:	ldr	x8, [sp, #64]
    8e48:	mov	x0, x8
    8e4c:	ldr	w2, [sp, #52]
    8e50:	bl	5110 <mpfr_sqr@plt>
    8e54:	ldr	x8, [sp, #80]
    8e58:	mov	x0, x8
    8e5c:	mov	x1, x8
    8e60:	ldr	x2, [sp, #64]
    8e64:	ldr	w3, [sp, #52]
    8e68:	bl	4f50 <mpfr_add@plt>
    8e6c:	ldr	x8, [sp, #80]
    8e70:	mov	x0, x8
    8e74:	mov	x1, x8
    8e78:	ldr	w2, [sp, #52]
    8e7c:	bl	4e60 <mpfr_log@plt>
    8e80:	ldur	x8, [x29, #-24]
    8e84:	add	x2, x8, #0x20
    8e88:	ldr	x8, [sp, #72]
    8e8c:	mov	x0, x8
    8e90:	ldr	x1, [sp, #56]
    8e94:	mov	w10, #0x1                   	// #1
    8e98:	mov	w3, w10
    8e9c:	str	w10, [sp, #48]
    8ea0:	bl	5520 <mpfr_ui_sub@plt>
    8ea4:	ldr	x8, [sp, #72]
    8ea8:	mov	x0, x8
    8eac:	mov	x1, x8
    8eb0:	ldr	w2, [sp, #48]
    8eb4:	bl	5110 <mpfr_sqr@plt>
    8eb8:	ldr	x8, [sp, #64]
    8ebc:	mov	x0, x8
    8ec0:	bl	4c80 <mpfr_nextbelow@plt>
    8ec4:	ldr	x0, [sp, #72]
    8ec8:	ldr	x1, [sp, #72]
    8ecc:	ldr	x2, [sp, #64]
    8ed0:	ldr	w3, [sp, #48]
    8ed4:	bl	4f50 <mpfr_add@plt>
    8ed8:	ldr	x8, [sp, #72]
    8edc:	mov	x0, x8
    8ee0:	mov	x1, x8
    8ee4:	ldr	w2, [sp, #48]
    8ee8:	bl	4e60 <mpfr_log@plt>
    8eec:	ldr	x8, [sp, #64]
    8ef0:	mov	x0, x8
    8ef4:	ldr	x1, [sp, #80]
    8ef8:	ldr	x2, [sp, #72]
    8efc:	ldr	w3, [sp, #52]
    8f00:	bl	4b40 <mpfr_sub@plt>
    8f04:	ldr	x8, [sp, #400]
    8f08:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    8f0c:	cmp	x8, x9
    8f10:	b.ne	8f1c <mpc_atan@@Base+0xd90>  // b.any
    8f14:	str	wzr, [sp, #348]
    8f18:	b	906c <mpc_atan@@Base+0xee0>
    8f1c:	ldr	x8, [sp, #496]
    8f20:	ldr	x9, [sp, #464]
    8f24:	cmp	x8, x9
    8f28:	b.le	8f38 <mpc_atan@@Base+0xdac>
    8f2c:	ldr	x8, [sp, #496]
    8f30:	str	x8, [sp, #40]
    8f34:	b	8f40 <mpc_atan@@Base+0xdb4>
    8f38:	ldr	x8, [sp, #464]
    8f3c:	str	x8, [sp, #40]
    8f40:	ldr	x8, [sp, #40]
    8f44:	str	x8, [sp, #352]
    8f48:	ldr	x8, [sp, #352]
    8f4c:	ldr	x9, [sp, #400]
    8f50:	subs	x8, x8, x9
    8f54:	add	x8, x8, #0x1
    8f58:	str	x8, [sp, #352]
    8f5c:	ldr	x8, [sp, #400]
    8f60:	mov	x9, #0x3                   	// #3
    8f64:	subs	x8, x9, x8
    8f68:	str	x8, [sp, #360]
    8f6c:	ldr	x8, [sp, #352]
    8f70:	ldr	x9, [sp, #360]
    8f74:	cmp	x8, x9
    8f78:	b.gt	8fb0 <mpc_atan@@Base+0xe24>
    8f7c:	ldr	x8, [sp, #360]
    8f80:	cmp	x8, #0x0
    8f84:	cset	w9, ge  // ge = tcont
    8f88:	tbnz	w9, #0, 8f98 <mpc_atan@@Base+0xe0c>
    8f8c:	mov	x8, #0x1                   	// #1
    8f90:	str	x8, [sp, #32]
    8f94:	b	8fa4 <mpc_atan@@Base+0xe18>
    8f98:	ldr	x8, [sp, #360]
    8f9c:	add	x8, x8, #0x2
    8fa0:	str	x8, [sp, #32]
    8fa4:	ldr	x8, [sp, #32]
    8fa8:	str	x8, [sp, #360]
    8fac:	b	8fe0 <mpc_atan@@Base+0xe54>
    8fb0:	ldr	x8, [sp, #352]
    8fb4:	cmp	x8, #0x0
    8fb8:	cset	w9, ge  // ge = tcont
    8fbc:	tbnz	w9, #0, 8fcc <mpc_atan@@Base+0xe40>
    8fc0:	mov	x8, #0x1                   	// #1
    8fc4:	str	x8, [sp, #24]
    8fc8:	b	8fd8 <mpc_atan@@Base+0xe4c>
    8fcc:	ldr	x8, [sp, #352]
    8fd0:	add	x8, x8, #0x2
    8fd4:	str	x8, [sp, #24]
    8fd8:	ldr	x8, [sp, #24]
    8fdc:	str	x8, [sp, #360]
    8fe0:	add	x8, sp, #0x180
    8fe4:	mov	x0, x8
    8fe8:	mov	x1, x8
    8fec:	mov	x2, #0x2                   	// #2
    8ff0:	mov	w9, wzr
    8ff4:	mov	w3, w9
    8ff8:	bl	5420 <mpfr_div_2ui@plt>
    8ffc:	ldr	x8, [sp, #400]
    9000:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    9004:	cmp	x8, x9
    9008:	b.ne	9030 <mpc_atan@@Base+0xea4>  // b.any
    900c:	ldr	x8, [sp, #272]
    9010:	ldr	x0, [x8]
    9014:	ldr	x1, [sp, #264]
    9018:	ldr	x2, [sp, #256]
    901c:	mov	w3, #0x17b                 	// #379
    9020:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    9024:	add	x4, x4, #0x370
    9028:	bl	56a0 <fprintf@plt>
    902c:	bl	5100 <abort@plt>
    9030:	ldr	x8, [sp, #368]
    9034:	ldr	x9, [sp, #360]
    9038:	subs	x1, x8, x9
    903c:	ldr	x8, [sp, #376]
    9040:	ldur	w10, [x29, #-28]
    9044:	asr	w10, w10, #4
    9048:	cmp	w10, #0x0
    904c:	cset	w10, eq  // eq = none
    9050:	and	w10, w10, #0x1
    9054:	add	x4, x8, w10, sxtw
    9058:	add	x0, sp, #0x180
    905c:	mov	w2, #0x2                   	// #2
    9060:	mov	w3, #0x3                   	// #3
    9064:	bl	5540 <mpfr_can_round@plt>
    9068:	str	w0, [sp, #348]
    906c:	ldr	w8, [sp, #348]
    9070:	cbz	w8, 8dac <mpc_atan@@Base+0xc20>
    9074:	ldur	x0, [x29, #-16]
    9078:	ldur	w3, [x29, #-28]
    907c:	add	x8, sp, #0x1a0
    9080:	mov	x1, x8
    9084:	add	x9, sp, #0x180
    9088:	mov	x2, x9
    908c:	str	x8, [sp, #16]
    9090:	str	x9, [sp, #8]
    9094:	bl	55e0 <mpc_set_fr_fr@plt>
    9098:	stur	w0, [x29, #-48]
    909c:	add	x0, sp, #0x1e0
    90a0:	add	x1, sp, #0x1c0
    90a4:	ldr	x2, [sp, #16]
    90a8:	ldr	x3, [sp, #8]
    90ac:	mov	x8, xzr
    90b0:	mov	x4, x8
    90b4:	bl	4f60 <mpfr_clears@plt>
    90b8:	ldur	w10, [x29, #-48]
    90bc:	stur	w10, [x29, #-4]
    90c0:	ldur	w0, [x29, #-4]
    90c4:	add	sp, sp, #0x2f0
    90c8:	ldr	x28, [sp, #16]
    90cc:	ldp	x29, x30, [sp], #32
    90d0:	ret

00000000000090d4 <mpc_atanh@@Base>:
    90d4:	sub	sp, sp, #0x120
    90d8:	stp	x29, x30, [sp, #256]
    90dc:	str	x28, [sp, #272]
    90e0:	add	x29, sp, #0x100
    90e4:	mov	w8, wzr
    90e8:	add	x9, sp, #0x80
    90ec:	add	x10, sp, #0x40
    90f0:	stur	x0, [x29, #-8]
    90f4:	stur	x1, [x29, #-16]
    90f8:	stur	w2, [x29, #-20]
    90fc:	ldur	x11, [x29, #-16]
    9100:	ldr	q0, [x11, #32]
    9104:	str	q0, [sp, #128]
    9108:	ldr	q0, [x11, #48]
    910c:	str	q0, [sp, #144]
    9110:	ldur	x11, [x29, #-16]
    9114:	ldr	q0, [x11]
    9118:	str	q0, [sp, #160]
    911c:	ldr	q0, [x11, #16]
    9120:	str	q0, [sp, #176]
    9124:	mov	x0, x9
    9128:	mov	x1, x9
    912c:	mov	w2, w8
    9130:	str	x10, [sp, #56]
    9134:	bl	4c60 <mpfr_neg@plt>
    9138:	ldur	x9, [x29, #-8]
    913c:	ldr	x1, [x9, #32]
    9140:	ldur	x9, [x29, #-8]
    9144:	ldr	x2, [x9]
    9148:	ldr	x9, [sp, #56]
    914c:	mov	x0, x9
    9150:	bl	54c0 <mpc_init3@plt>
    9154:	ldur	w8, [x29, #-20]
    9158:	asr	w8, w8, #4
    915c:	cmp	w8, #0x2
    9160:	b.ne	9170 <mpc_atanh@@Base+0x9c>  // b.any
    9164:	mov	w8, #0x3                   	// #3
    9168:	str	w8, [sp, #52]
    916c:	b	91a0 <mpc_atanh@@Base+0xcc>
    9170:	ldur	w8, [x29, #-20]
    9174:	asr	w8, w8, #4
    9178:	cmp	w8, #0x3
    917c:	b.ne	918c <mpc_atanh@@Base+0xb8>  // b.any
    9180:	mov	w8, #0x2                   	// #2
    9184:	str	w8, [sp, #48]
    9188:	b	9198 <mpc_atanh@@Base+0xc4>
    918c:	ldur	w8, [x29, #-20]
    9190:	asr	w8, w8, #4
    9194:	str	w8, [sp, #48]
    9198:	ldr	w8, [sp, #48]
    919c:	str	w8, [sp, #52]
    91a0:	ldr	w8, [sp, #52]
    91a4:	ldur	w9, [x29, #-20]
    91a8:	and	w9, w9, #0xf
    91ac:	add	w2, w8, w9, lsl #4
    91b0:	add	x10, sp, #0x40
    91b4:	mov	x0, x10
    91b8:	add	x1, sp, #0x80
    91bc:	str	x10, [sp, #40]
    91c0:	bl	5510 <mpc_atan@plt>
    91c4:	stur	w0, [x29, #-24]
    91c8:	ldr	q0, [sp, #64]
    91cc:	stur	q0, [x29, #-64]
    91d0:	ldr	q0, [sp, #80]
    91d4:	stur	q0, [x29, #-48]
    91d8:	ldr	q0, [sp, #96]
    91dc:	str	q0, [sp, #64]
    91e0:	ldr	q0, [sp, #112]
    91e4:	str	q0, [sp, #80]
    91e8:	ldur	q0, [x29, #-64]
    91ec:	str	q0, [sp, #96]
    91f0:	ldur	q0, [x29, #-48]
    91f4:	str	q0, [sp, #112]
    91f8:	ldr	x10, [sp, #40]
    91fc:	add	x0, x10, #0x20
    9200:	add	x1, x10, #0x20
    9204:	mov	w8, wzr
    9208:	mov	w2, w8
    920c:	bl	4c60 <mpfr_neg@plt>
    9210:	ldur	x10, [x29, #-8]
    9214:	ldur	w2, [x29, #-20]
    9218:	mov	x0, x10
    921c:	ldr	x1, [sp, #40]
    9220:	bl	5680 <mpc_set@plt>
    9224:	ldr	x10, [sp, #40]
    9228:	mov	x0, x10
    922c:	bl	4af0 <mpc_clear@plt>
    9230:	ldur	w8, [x29, #-24]
    9234:	asr	w8, w8, #2
    9238:	cmp	w8, #0x2
    923c:	b.ne	924c <mpc_atanh@@Base+0x178>  // b.any
    9240:	mov	w8, #0xffffffff            	// #-1
    9244:	str	w8, [sp, #36]
    9248:	b	9268 <mpc_atanh@@Base+0x194>
    924c:	ldur	w8, [x29, #-24]
    9250:	asr	w8, w8, #2
    9254:	mov	w9, wzr
    9258:	mov	w10, #0x1                   	// #1
    925c:	cmp	w8, #0x0
    9260:	csel	w8, w9, w10, eq  // eq = none
    9264:	str	w8, [sp, #36]
    9268:	ldr	w8, [sp, #36]
    926c:	cmp	w8, #0x0
    9270:	cset	w8, ge  // ge = tcont
    9274:	tbnz	w8, #0, 9284 <mpc_atanh@@Base+0x1b0>
    9278:	mov	w8, #0x2                   	// #2
    927c:	str	w8, [sp, #32]
    9280:	b	92d4 <mpc_atanh@@Base+0x200>
    9284:	ldur	w8, [x29, #-24]
    9288:	asr	w8, w8, #2
    928c:	cmp	w8, #0x2
    9290:	b.ne	92a0 <mpc_atanh@@Base+0x1cc>  // b.any
    9294:	mov	w8, #0xffffffff            	// #-1
    9298:	str	w8, [sp, #28]
    929c:	b	92bc <mpc_atanh@@Base+0x1e8>
    92a0:	ldur	w8, [x29, #-24]
    92a4:	asr	w8, w8, #2
    92a8:	mov	w9, wzr
    92ac:	mov	w10, #0x1                   	// #1
    92b0:	cmp	w8, #0x0
    92b4:	csel	w8, w9, w10, eq  // eq = none
    92b8:	str	w8, [sp, #28]
    92bc:	ldr	w8, [sp, #28]
    92c0:	mov	w9, wzr
    92c4:	mov	w10, #0x1                   	// #1
    92c8:	cmp	w8, #0x0
    92cc:	csel	w8, w9, w10, eq  // eq = none
    92d0:	str	w8, [sp, #32]
    92d4:	ldr	w8, [sp, #32]
    92d8:	ldur	w9, [x29, #-24]
    92dc:	and	w9, w9, #0x3
    92e0:	cmp	w9, #0x2
    92e4:	str	w8, [sp, #24]
    92e8:	b.ne	92f8 <mpc_atanh@@Base+0x224>  // b.any
    92ec:	mov	w8, #0xffffffff            	// #-1
    92f0:	str	w8, [sp, #20]
    92f4:	b	9310 <mpc_atanh@@Base+0x23c>
    92f8:	ldur	w8, [x29, #-24]
    92fc:	mov	w9, wzr
    9300:	mov	w10, #0x1                   	// #1
    9304:	tst	w8, #0x3
    9308:	csel	w8, w9, w10, eq  // eq = none
    930c:	str	w8, [sp, #20]
    9310:	ldr	w8, [sp, #20]
    9314:	mov	w9, wzr
    9318:	subs	w8, w9, w8
    931c:	cmp	w8, #0x0
    9320:	cset	w8, ge  // ge = tcont
    9324:	tbnz	w8, #0, 9334 <mpc_atanh@@Base+0x260>
    9328:	mov	w8, #0x2                   	// #2
    932c:	str	w8, [sp, #16]
    9330:	b	9380 <mpc_atanh@@Base+0x2ac>
    9334:	ldur	w8, [x29, #-24]
    9338:	and	w8, w8, #0x3
    933c:	cmp	w8, #0x2
    9340:	b.ne	9350 <mpc_atanh@@Base+0x27c>  // b.any
    9344:	mov	w8, #0xffffffff            	// #-1
    9348:	str	w8, [sp, #12]
    934c:	b	9368 <mpc_atanh@@Base+0x294>
    9350:	ldur	w8, [x29, #-24]
    9354:	mov	w9, wzr
    9358:	mov	w10, #0x1                   	// #1
    935c:	tst	w8, #0x3
    9360:	csel	w8, w9, w10, eq  // eq = none
    9364:	str	w8, [sp, #12]
    9368:	ldr	w8, [sp, #12]
    936c:	mov	w9, wzr
    9370:	mov	w10, #0x1                   	// #1
    9374:	cmn	w8, #0x0
    9378:	csel	w8, w9, w10, eq  // eq = none
    937c:	str	w8, [sp, #16]
    9380:	ldr	w8, [sp, #16]
    9384:	ldr	w9, [sp, #24]
    9388:	orr	w0, w9, w8, lsl #2
    938c:	ldr	x28, [sp, #272]
    9390:	ldp	x29, x30, [sp, #256]
    9394:	add	sp, sp, #0x120
    9398:	ret

000000000000939c <mpc_clear@@Base>:
    939c:	sub	sp, sp, #0x20
    93a0:	stp	x29, x30, [sp, #16]
    93a4:	add	x29, sp, #0x10
    93a8:	str	x0, [sp, #8]
    93ac:	ldr	x0, [sp, #8]
    93b0:	bl	4e30 <mpfr_clear@plt>
    93b4:	ldr	x8, [sp, #8]
    93b8:	add	x0, x8, #0x20
    93bc:	bl	4e30 <mpfr_clear@plt>
    93c0:	ldp	x29, x30, [sp, #16]
    93c4:	add	sp, sp, #0x20
    93c8:	ret

00000000000093cc <mpc_cmp@@Base>:
    93cc:	sub	sp, sp, #0x40
    93d0:	stp	x29, x30, [sp, #48]
    93d4:	add	x29, sp, #0x30
    93d8:	mov	w8, #0x1                   	// #1
    93dc:	stur	x0, [x29, #-8]
    93e0:	stur	x1, [x29, #-16]
    93e4:	ldur	x0, [x29, #-8]
    93e8:	ldur	x1, [x29, #-16]
    93ec:	mov	w2, w8
    93f0:	str	w8, [sp, #20]
    93f4:	bl	54a0 <mpfr_cmp3@plt>
    93f8:	stur	w0, [x29, #-20]
    93fc:	ldur	x9, [x29, #-8]
    9400:	add	x0, x9, #0x20
    9404:	ldur	x9, [x29, #-16]
    9408:	add	x1, x9, #0x20
    940c:	ldr	w2, [sp, #20]
    9410:	bl	54a0 <mpfr_cmp3@plt>
    9414:	str	w0, [sp, #24]
    9418:	ldur	w8, [x29, #-20]
    941c:	cmp	w8, #0x0
    9420:	cset	w8, ge  // ge = tcont
    9424:	tbnz	w8, #0, 9434 <mpc_cmp@@Base+0x68>
    9428:	mov	w8, #0x2                   	// #2
    942c:	str	w8, [sp, #16]
    9430:	b	944c <mpc_cmp@@Base+0x80>
    9434:	ldur	w8, [x29, #-20]
    9438:	mov	w9, wzr
    943c:	mov	w10, #0x1                   	// #1
    9440:	cmp	w8, #0x0
    9444:	csel	w8, w9, w10, eq  // eq = none
    9448:	str	w8, [sp, #16]
    944c:	ldr	w8, [sp, #16]
    9450:	ldr	w9, [sp, #24]
    9454:	cmp	w9, #0x0
    9458:	cset	w9, ge  // ge = tcont
    945c:	str	w8, [sp, #12]
    9460:	tbnz	w9, #0, 9470 <mpc_cmp@@Base+0xa4>
    9464:	mov	w8, #0x2                   	// #2
    9468:	str	w8, [sp, #8]
    946c:	b	9488 <mpc_cmp@@Base+0xbc>
    9470:	ldr	w8, [sp, #24]
    9474:	mov	w9, wzr
    9478:	mov	w10, #0x1                   	// #1
    947c:	cmp	w8, #0x0
    9480:	csel	w8, w9, w10, eq  // eq = none
    9484:	str	w8, [sp, #8]
    9488:	ldr	w8, [sp, #8]
    948c:	ldr	w9, [sp, #12]
    9490:	orr	w0, w9, w8, lsl #2
    9494:	ldp	x29, x30, [sp, #48]
    9498:	add	sp, sp, #0x40
    949c:	ret

00000000000094a0 <mpc_cmp_abs@@Base>:
    94a0:	sub	sp, sp, #0x1d0
    94a4:	stp	x29, x30, [sp, #432]
    94a8:	str	x28, [sp, #448]
    94ac:	add	x29, sp, #0x1b0
    94b0:	mov	x8, #0x2                   	// #2
    94b4:	movk	x8, #0x8000, lsl #48
    94b8:	mov	w9, #0x1                   	// #1
    94bc:	stur	x0, [x29, #-16]
    94c0:	stur	x1, [x29, #-24]
    94c4:	ldur	x10, [x29, #-16]
    94c8:	ldr	x10, [x10, #16]
    94cc:	cmp	x10, x8
    94d0:	str	w9, [sp, #156]
    94d4:	b.eq	9520 <mpc_cmp_abs@@Base+0x80>  // b.none
    94d8:	ldur	x8, [x29, #-16]
    94dc:	ldr	x8, [x8, #48]
    94e0:	mov	x9, #0x2                   	// #2
    94e4:	movk	x9, #0x8000, lsl #48
    94e8:	cmp	x8, x9
    94ec:	b.eq	9520 <mpc_cmp_abs@@Base+0x80>  // b.none
    94f0:	ldur	x8, [x29, #-24]
    94f4:	ldr	x8, [x8, #16]
    94f8:	mov	x9, #0x2                   	// #2
    94fc:	movk	x9, #0x8000, lsl #48
    9500:	cmp	x8, x9
    9504:	b.eq	9520 <mpc_cmp_abs@@Base+0x80>  // b.none
    9508:	ldur	x8, [x29, #-24]
    950c:	ldr	x8, [x8, #48]
    9510:	mov	x9, #0x2                   	// #2
    9514:	movk	x9, #0x8000, lsl #48
    9518:	cmp	x8, x9
    951c:	b.ne	9560 <mpc_cmp_abs@@Base+0xc0>  // b.any
    9520:	add	x8, sp, #0xa0
    9524:	mov	x0, x8
    9528:	str	x8, [sp, #144]
    952c:	bl	4b80 <mpfr_init@plt>
    9530:	ldr	x0, [sp, #144]
    9534:	bl	4b20 <mpfr_set_nan@plt>
    9538:	ldr	x0, [sp, #144]
    953c:	ldr	x1, [sp, #144]
    9540:	mov	w2, #0x1                   	// #1
    9544:	bl	54a0 <mpfr_cmp3@plt>
    9548:	str	w0, [sp, #196]
    954c:	ldr	x0, [sp, #144]
    9550:	bl	4e30 <mpfr_clear@plt>
    9554:	ldr	w9, [sp, #196]
    9558:	stur	w9, [x29, #-4]
    955c:	b	9a3c <mpc_cmp_abs@@Base+0x59c>
    9560:	ldur	x8, [x29, #-16]
    9564:	ldr	x8, [x8, #16]
    9568:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    956c:	cmp	x8, x9
    9570:	b.eq	9588 <mpc_cmp_abs@@Base+0xe8>  // b.none
    9574:	ldur	x8, [x29, #-16]
    9578:	ldr	x8, [x8, #48]
    957c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    9580:	cmp	x8, x9
    9584:	b.ne	95c4 <mpc_cmp_abs@@Base+0x124>  // b.any
    9588:	ldur	x8, [x29, #-24]
    958c:	ldr	x8, [x8, #16]
    9590:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    9594:	cmp	x8, x9
    9598:	b.eq	95b0 <mpc_cmp_abs@@Base+0x110>  // b.none
    959c:	ldur	x8, [x29, #-24]
    95a0:	ldr	x8, [x8, #48]
    95a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    95a8:	cmp	x8, x9
    95ac:	b.ne	95b8 <mpc_cmp_abs@@Base+0x118>  // b.any
    95b0:	stur	wzr, [x29, #-4]
    95b4:	b	9a3c <mpc_cmp_abs@@Base+0x59c>
    95b8:	mov	w8, #0x1                   	// #1
    95bc:	stur	w8, [x29, #-4]
    95c0:	b	9a3c <mpc_cmp_abs@@Base+0x59c>
    95c4:	ldur	x8, [x29, #-24]
    95c8:	ldr	x8, [x8, #16]
    95cc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    95d0:	cmp	x8, x9
    95d4:	b.eq	95ec <mpc_cmp_abs@@Base+0x14c>  // b.none
    95d8:	ldur	x8, [x29, #-24]
    95dc:	ldr	x8, [x8, #48]
    95e0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    95e4:	cmp	x8, x9
    95e8:	b.ne	95f8 <mpc_cmp_abs@@Base+0x158>  // b.any
    95ec:	mov	w8, #0xffffffff            	// #-1
    95f0:	stur	w8, [x29, #-4]
    95f4:	b	9a3c <mpc_cmp_abs@@Base+0x59c>
    95f8:	ldur	x1, [x29, #-16]
    95fc:	sub	x0, x29, #0x58
    9600:	mov	x8, #0x40                  	// #64
    9604:	mov	x2, x8
    9608:	str	x8, [sp, #136]
    960c:	bl	4a70 <memcpy@plt>
    9610:	ldur	x1, [x29, #-24]
    9614:	sub	x0, x29, #0x98
    9618:	ldr	x2, [sp, #136]
    961c:	bl	4a70 <memcpy@plt>
    9620:	ldur	x8, [x29, #-16]
    9624:	ldr	w9, [x8, #8]
    9628:	cmp	w9, #0x0
    962c:	cset	w9, ge  // ge = tcont
    9630:	tbnz	w9, #0, 964c <mpc_cmp_abs@@Base+0x1ac>
    9634:	sub	x8, x29, #0x58
    9638:	mov	x0, x8
    963c:	mov	x1, x8
    9640:	mov	w9, wzr
    9644:	mov	w2, w9
    9648:	bl	4c60 <mpfr_neg@plt>
    964c:	ldur	x8, [x29, #-16]
    9650:	ldr	w9, [x8, #40]
    9654:	cmp	w9, #0x0
    9658:	cset	w9, ge  // ge = tcont
    965c:	tbnz	w9, #0, 9678 <mpc_cmp_abs@@Base+0x1d8>
    9660:	sub	x8, x29, #0x58
    9664:	add	x0, x8, #0x20
    9668:	add	x1, x8, #0x20
    966c:	mov	w9, wzr
    9670:	mov	w2, w9
    9674:	bl	4c60 <mpfr_neg@plt>
    9678:	ldur	x8, [x29, #-24]
    967c:	ldr	w9, [x8, #8]
    9680:	cmp	w9, #0x0
    9684:	cset	w9, ge  // ge = tcont
    9688:	tbnz	w9, #0, 96a4 <mpc_cmp_abs@@Base+0x204>
    968c:	sub	x8, x29, #0x98
    9690:	mov	x0, x8
    9694:	mov	x1, x8
    9698:	mov	w9, wzr
    969c:	mov	w2, w9
    96a0:	bl	4c60 <mpfr_neg@plt>
    96a4:	ldur	x8, [x29, #-24]
    96a8:	ldr	w9, [x8, #40]
    96ac:	cmp	w9, #0x0
    96b0:	cset	w9, ge  // ge = tcont
    96b4:	tbnz	w9, #0, 96d0 <mpc_cmp_abs@@Base+0x230>
    96b8:	sub	x8, x29, #0x98
    96bc:	add	x0, x8, #0x20
    96c0:	add	x1, x8, #0x20
    96c4:	mov	w9, wzr
    96c8:	mov	w2, w9
    96cc:	bl	4c60 <mpfr_neg@plt>
    96d0:	sub	x8, x29, #0x58
    96d4:	add	x1, x8, #0x20
    96d8:	mov	x0, x8
    96dc:	mov	w2, #0x1                   	// #1
    96e0:	bl	54a0 <mpfr_cmp3@plt>
    96e4:	cmp	w0, #0x0
    96e8:	cset	w9, le
    96ec:	tbnz	w9, #0, 9700 <mpc_cmp_abs@@Base+0x260>
    96f0:	sub	x8, x29, #0x58
    96f4:	add	x1, x8, #0x20
    96f8:	mov	x0, x8
    96fc:	bl	5190 <mpfr_swap@plt>
    9700:	sub	x8, x29, #0x98
    9704:	add	x1, x8, #0x20
    9708:	mov	x0, x8
    970c:	mov	w2, #0x1                   	// #1
    9710:	bl	54a0 <mpfr_cmp3@plt>
    9714:	cmp	w0, #0x0
    9718:	cset	w9, le
    971c:	tbnz	w9, #0, 9730 <mpc_cmp_abs@@Base+0x290>
    9720:	sub	x8, x29, #0x98
    9724:	add	x1, x8, #0x20
    9728:	mov	x0, x8
    972c:	bl	5190 <mpfr_swap@plt>
    9730:	sub	x0, x29, #0x58
    9734:	sub	x1, x29, #0x98
    9738:	mov	w2, #0x1                   	// #1
    973c:	bl	54a0 <mpfr_cmp3@plt>
    9740:	cbnz	w0, 9764 <mpc_cmp_abs@@Base+0x2c4>
    9744:	sub	x8, x29, #0x58
    9748:	add	x0, x8, #0x20
    974c:	sub	x8, x29, #0x98
    9750:	add	x1, x8, #0x20
    9754:	mov	w2, #0x1                   	// #1
    9758:	bl	54a0 <mpfr_cmp3@plt>
    975c:	stur	w0, [x29, #-4]
    9760:	b	9a3c <mpc_cmp_abs@@Base+0x59c>
    9764:	sub	x8, x29, #0x58
    9768:	add	x0, x8, #0x20
    976c:	sub	x8, x29, #0x98
    9770:	add	x1, x8, #0x20
    9774:	mov	w2, #0x1                   	// #1
    9778:	bl	54a0 <mpfr_cmp3@plt>
    977c:	cbnz	w0, 9798 <mpc_cmp_abs@@Base+0x2f8>
    9780:	sub	x0, x29, #0x58
    9784:	sub	x1, x29, #0x98
    9788:	mov	w2, #0x1                   	// #1
    978c:	bl	54a0 <mpfr_cmp3@plt>
    9790:	stur	w0, [x29, #-4]
    9794:	b	9a3c <mpc_cmp_abs@@Base+0x59c>
    9798:	sub	x0, x29, #0xb8
    979c:	bl	4b80 <mpfr_init@plt>
    97a0:	add	x0, sp, #0xd8
    97a4:	bl	4b80 <mpfr_init@plt>
    97a8:	ldur	x8, [x29, #-88]
    97ac:	ldur	x9, [x29, #-56]
    97b0:	cmp	x8, x9
    97b4:	b.le	97c4 <mpc_cmp_abs@@Base+0x324>
    97b8:	ldur	x8, [x29, #-88]
    97bc:	str	x8, [sp, #128]
    97c0:	b	97cc <mpc_cmp_abs@@Base+0x32c>
    97c4:	ldur	x8, [x29, #-56]
    97c8:	str	x8, [sp, #128]
    97cc:	ldr	x8, [sp, #128]
    97d0:	ldur	x9, [x29, #-152]
    97d4:	ldur	x10, [x29, #-120]
    97d8:	cmp	x9, x10
    97dc:	str	x8, [sp, #120]
    97e0:	b.le	97f0 <mpc_cmp_abs@@Base+0x350>
    97e4:	ldur	x8, [x29, #-152]
    97e8:	str	x8, [sp, #112]
    97ec:	b	97f8 <mpc_cmp_abs@@Base+0x358>
    97f0:	ldur	x8, [x29, #-120]
    97f4:	str	x8, [sp, #112]
    97f8:	ldr	x8, [sp, #112]
    97fc:	ldr	x9, [sp, #120]
    9800:	cmp	x9, x8
    9804:	b.le	9838 <mpc_cmp_abs@@Base+0x398>
    9808:	ldur	x8, [x29, #-88]
    980c:	ldur	x9, [x29, #-56]
    9810:	cmp	x8, x9
    9814:	b.le	9824 <mpc_cmp_abs@@Base+0x384>
    9818:	ldur	x8, [x29, #-88]
    981c:	str	x8, [sp, #104]
    9820:	b	982c <mpc_cmp_abs@@Base+0x38c>
    9824:	ldur	x8, [x29, #-56]
    9828:	str	x8, [sp, #104]
    982c:	ldr	x8, [sp, #104]
    9830:	str	x8, [sp, #96]
    9834:	b	9864 <mpc_cmp_abs@@Base+0x3c4>
    9838:	ldur	x8, [x29, #-152]
    983c:	ldur	x9, [x29, #-120]
    9840:	cmp	x8, x9
    9844:	b.le	9854 <mpc_cmp_abs@@Base+0x3b4>
    9848:	ldur	x8, [x29, #-152]
    984c:	str	x8, [sp, #88]
    9850:	b	985c <mpc_cmp_abs@@Base+0x3bc>
    9854:	ldur	x8, [x29, #-120]
    9858:	str	x8, [sp, #88]
    985c:	ldr	x8, [sp, #88]
    9860:	str	x8, [sp, #96]
    9864:	ldr	x8, [sp, #96]
    9868:	mov	x9, #0x64                  	// #100
    986c:	sdiv	x8, x8, x9
    9870:	mov	x9, #0x32                  	// #50
    9874:	cmp	x9, x8
    9878:	b.le	9888 <mpc_cmp_abs@@Base+0x3e8>
    987c:	mov	x8, #0x32                  	// #50
    9880:	str	x8, [sp, #80]
    9884:	b	9954 <mpc_cmp_abs@@Base+0x4b4>
    9888:	ldur	x8, [x29, #-88]
    988c:	ldur	x9, [x29, #-56]
    9890:	cmp	x8, x9
    9894:	b.le	98a4 <mpc_cmp_abs@@Base+0x404>
    9898:	ldur	x8, [x29, #-88]
    989c:	str	x8, [sp, #72]
    98a0:	b	98ac <mpc_cmp_abs@@Base+0x40c>
    98a4:	ldur	x8, [x29, #-56]
    98a8:	str	x8, [sp, #72]
    98ac:	ldr	x8, [sp, #72]
    98b0:	ldur	x9, [x29, #-152]
    98b4:	ldur	x10, [x29, #-120]
    98b8:	cmp	x9, x10
    98bc:	str	x8, [sp, #64]
    98c0:	b.le	98d0 <mpc_cmp_abs@@Base+0x430>
    98c4:	ldur	x8, [x29, #-152]
    98c8:	str	x8, [sp, #56]
    98cc:	b	98d8 <mpc_cmp_abs@@Base+0x438>
    98d0:	ldur	x8, [x29, #-120]
    98d4:	str	x8, [sp, #56]
    98d8:	ldr	x8, [sp, #56]
    98dc:	ldr	x9, [sp, #64]
    98e0:	cmp	x9, x8
    98e4:	b.le	9918 <mpc_cmp_abs@@Base+0x478>
    98e8:	ldur	x8, [x29, #-88]
    98ec:	ldur	x9, [x29, #-56]
    98f0:	cmp	x8, x9
    98f4:	b.le	9904 <mpc_cmp_abs@@Base+0x464>
    98f8:	ldur	x8, [x29, #-88]
    98fc:	str	x8, [sp, #48]
    9900:	b	990c <mpc_cmp_abs@@Base+0x46c>
    9904:	ldur	x8, [x29, #-56]
    9908:	str	x8, [sp, #48]
    990c:	ldr	x8, [sp, #48]
    9910:	str	x8, [sp, #40]
    9914:	b	9944 <mpc_cmp_abs@@Base+0x4a4>
    9918:	ldur	x8, [x29, #-152]
    991c:	ldur	x9, [x29, #-120]
    9920:	cmp	x8, x9
    9924:	b.le	9934 <mpc_cmp_abs@@Base+0x494>
    9928:	ldur	x8, [x29, #-152]
    992c:	str	x8, [sp, #32]
    9930:	b	993c <mpc_cmp_abs@@Base+0x49c>
    9934:	ldur	x8, [x29, #-120]
    9938:	str	x8, [sp, #32]
    993c:	ldr	x8, [sp, #32]
    9940:	str	x8, [sp, #40]
    9944:	ldr	x8, [sp, #40]
    9948:	mov	x9, #0x64                  	// #100
    994c:	sdiv	x8, x8, x9
    9950:	str	x8, [sp, #80]
    9954:	ldr	x8, [sp, #80]
    9958:	str	x8, [sp, #208]
    995c:	ldr	x1, [sp, #208]
    9960:	sub	x8, x29, #0xb8
    9964:	mov	x0, x8
    9968:	str	x8, [sp, #24]
    996c:	bl	4d40 <mpfr_set_prec@plt>
    9970:	ldr	x1, [sp, #208]
    9974:	add	x8, sp, #0xd8
    9978:	mov	x0, x8
    997c:	str	x8, [sp, #16]
    9980:	bl	4d40 <mpfr_set_prec@plt>
    9984:	ldr	x0, [sp, #24]
    9988:	sub	x1, x29, #0x58
    998c:	mov	w9, #0x3                   	// #3
    9990:	mov	w2, w9
    9994:	str	w9, [sp, #12]
    9998:	bl	4f90 <mpc_norm@plt>
    999c:	str	w0, [sp, #204]
    99a0:	ldr	x0, [sp, #16]
    99a4:	sub	x1, x29, #0x98
    99a8:	ldr	w2, [sp, #12]
    99ac:	bl	4f90 <mpc_norm@plt>
    99b0:	str	w0, [sp, #200]
    99b4:	ldr	x0, [sp, #24]
    99b8:	ldr	x1, [sp, #16]
    99bc:	mov	w2, #0x1                   	// #1
    99c0:	bl	54a0 <mpfr_cmp3@plt>
    99c4:	str	w0, [sp, #196]
    99c8:	ldr	w9, [sp, #196]
    99cc:	cbz	w9, 99d4 <mpc_cmp_abs@@Base+0x534>
    99d0:	b	9a24 <mpc_cmp_abs@@Base+0x584>
    99d4:	ldr	w8, [sp, #204]
    99d8:	cbnz	w8, 99f8 <mpc_cmp_abs@@Base+0x558>
    99dc:	ldr	w8, [sp, #200]
    99e0:	cbz	w8, 99f0 <mpc_cmp_abs@@Base+0x550>
    99e4:	mov	w8, #0xffffffff            	// #-1
    99e8:	str	w8, [sp, #196]
    99ec:	b	9a24 <mpc_cmp_abs@@Base+0x584>
    99f0:	str	wzr, [sp, #196]
    99f4:	b	9a24 <mpc_cmp_abs@@Base+0x584>
    99f8:	ldr	w8, [sp, #200]
    99fc:	cbnz	w8, 9a0c <mpc_cmp_abs@@Base+0x56c>
    9a00:	mov	w8, #0x1                   	// #1
    9a04:	str	w8, [sp, #196]
    9a08:	b	9a24 <mpc_cmp_abs@@Base+0x584>
    9a0c:	ldr	x8, [sp, #208]
    9a10:	mov	x9, #0x2                   	// #2
    9a14:	mul	x8, x8, x9
    9a18:	str	x8, [sp, #208]
    9a1c:	ldr	w8, [sp, #156]
    9a20:	tbnz	w8, #0, 995c <mpc_cmp_abs@@Base+0x4bc>
    9a24:	sub	x0, x29, #0xb8
    9a28:	bl	4e30 <mpfr_clear@plt>
    9a2c:	add	x0, sp, #0xd8
    9a30:	bl	4e30 <mpfr_clear@plt>
    9a34:	ldr	w8, [sp, #196]
    9a38:	stur	w8, [x29, #-4]
    9a3c:	ldur	w0, [x29, #-4]
    9a40:	ldr	x28, [sp, #448]
    9a44:	ldp	x29, x30, [sp, #432]
    9a48:	add	sp, sp, #0x1d0
    9a4c:	ret

0000000000009a50 <mpc_cmp_si_si@@Base>:
    9a50:	sub	sp, sp, #0x50
    9a54:	stp	x29, x30, [sp, #64]
    9a58:	add	x29, sp, #0x40
    9a5c:	stur	x0, [x29, #-8]
    9a60:	stur	x1, [x29, #-16]
    9a64:	stur	x2, [x29, #-24]
    9a68:	ldur	x0, [x29, #-8]
    9a6c:	ldur	x1, [x29, #-16]
    9a70:	mov	x8, xzr
    9a74:	mov	x2, x8
    9a78:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    9a7c:	str	w0, [sp, #28]
    9a80:	ldr	w8, [sp, #28]
    9a84:	stur	w8, [x29, #-28]
    9a88:	ldur	x8, [x29, #-8]
    9a8c:	add	x0, x8, #0x20
    9a90:	ldur	x1, [x29, #-24]
    9a94:	mov	x8, xzr
    9a98:	mov	x2, x8
    9a9c:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    9aa0:	str	w0, [sp, #24]
    9aa4:	ldr	w8, [sp, #24]
    9aa8:	str	w8, [sp, #32]
    9aac:	ldur	w9, [x29, #-28]
    9ab0:	cmp	w9, #0x0
    9ab4:	cset	w9, ge  // ge = tcont
    9ab8:	tbnz	w9, #0, 9ac8 <mpc_cmp_si_si@@Base+0x78>
    9abc:	mov	w8, #0x2                   	// #2
    9ac0:	str	w8, [sp, #20]
    9ac4:	b	9ae0 <mpc_cmp_si_si@@Base+0x90>
    9ac8:	ldur	w8, [x29, #-28]
    9acc:	mov	w9, wzr
    9ad0:	mov	w10, #0x1                   	// #1
    9ad4:	cmp	w8, #0x0
    9ad8:	csel	w8, w9, w10, eq  // eq = none
    9adc:	str	w8, [sp, #20]
    9ae0:	ldr	w8, [sp, #20]
    9ae4:	ldr	w9, [sp, #32]
    9ae8:	cmp	w9, #0x0
    9aec:	cset	w9, ge  // ge = tcont
    9af0:	str	w8, [sp, #16]
    9af4:	tbnz	w9, #0, 9b04 <mpc_cmp_si_si@@Base+0xb4>
    9af8:	mov	w8, #0x2                   	// #2
    9afc:	str	w8, [sp, #12]
    9b00:	b	9b1c <mpc_cmp_si_si@@Base+0xcc>
    9b04:	ldr	w8, [sp, #32]
    9b08:	mov	w9, wzr
    9b0c:	mov	w10, #0x1                   	// #1
    9b10:	cmp	w8, #0x0
    9b14:	csel	w8, w9, w10, eq  // eq = none
    9b18:	str	w8, [sp, #12]
    9b1c:	ldr	w8, [sp, #12]
    9b20:	ldr	w9, [sp, #16]
    9b24:	orr	w0, w9, w8, lsl #2
    9b28:	ldp	x29, x30, [sp, #64]
    9b2c:	add	sp, sp, #0x50
    9b30:	ret

0000000000009b34 <mpc_conj@@Base>:
    9b34:	sub	sp, sp, #0x40
    9b38:	stp	x29, x30, [sp, #48]
    9b3c:	add	x29, sp, #0x30
    9b40:	stur	x0, [x29, #-8]
    9b44:	stur	x1, [x29, #-16]
    9b48:	stur	w2, [x29, #-20]
    9b4c:	ldur	x0, [x29, #-8]
    9b50:	ldur	x1, [x29, #-16]
    9b54:	ldur	w8, [x29, #-20]
    9b58:	and	w2, w8, #0xf
    9b5c:	ldur	x9, [x29, #-16]
    9b60:	ldr	w3, [x9, #8]
    9b64:	bl	52d0 <mpfr_set4@plt>
    9b68:	str	w0, [sp, #24]
    9b6c:	ldur	x9, [x29, #-8]
    9b70:	add	x0, x9, #0x20
    9b74:	ldur	x9, [x29, #-16]
    9b78:	add	x1, x9, #0x20
    9b7c:	ldur	w8, [x29, #-20]
    9b80:	asr	w2, w8, #4
    9b84:	bl	4c60 <mpfr_neg@plt>
    9b88:	str	w0, [sp, #20]
    9b8c:	ldr	w8, [sp, #24]
    9b90:	cmp	w8, #0x0
    9b94:	cset	w8, ge  // ge = tcont
    9b98:	tbnz	w8, #0, 9ba8 <mpc_conj@@Base+0x74>
    9b9c:	mov	w8, #0x2                   	// #2
    9ba0:	str	w8, [sp, #16]
    9ba4:	b	9bc0 <mpc_conj@@Base+0x8c>
    9ba8:	ldr	w8, [sp, #24]
    9bac:	mov	w9, wzr
    9bb0:	mov	w10, #0x1                   	// #1
    9bb4:	cmp	w8, #0x0
    9bb8:	csel	w8, w9, w10, eq  // eq = none
    9bbc:	str	w8, [sp, #16]
    9bc0:	ldr	w8, [sp, #16]
    9bc4:	ldr	w9, [sp, #20]
    9bc8:	cmp	w9, #0x0
    9bcc:	cset	w9, ge  // ge = tcont
    9bd0:	str	w8, [sp, #12]
    9bd4:	tbnz	w9, #0, 9be4 <mpc_conj@@Base+0xb0>
    9bd8:	mov	w8, #0x2                   	// #2
    9bdc:	str	w8, [sp, #8]
    9be0:	b	9bfc <mpc_conj@@Base+0xc8>
    9be4:	ldr	w8, [sp, #20]
    9be8:	mov	w9, wzr
    9bec:	mov	w10, #0x1                   	// #1
    9bf0:	cmp	w8, #0x0
    9bf4:	csel	w8, w9, w10, eq  // eq = none
    9bf8:	str	w8, [sp, #8]
    9bfc:	ldr	w8, [sp, #8]
    9c00:	ldr	w9, [sp, #12]
    9c04:	orr	w0, w9, w8, lsl #2
    9c08:	ldp	x29, x30, [sp, #48]
    9c0c:	add	sp, sp, #0x40
    9c10:	ret

0000000000009c14 <mpc_cos@@Base>:
    9c14:	sub	sp, sp, #0x30
    9c18:	stp	x29, x30, [sp, #32]
    9c1c:	add	x29, sp, #0x20
    9c20:	mov	x8, xzr
    9c24:	mov	w9, wzr
    9c28:	stur	x0, [x29, #-8]
    9c2c:	str	x1, [sp, #16]
    9c30:	str	w2, [sp, #12]
    9c34:	ldur	x1, [x29, #-8]
    9c38:	ldr	x2, [sp, #16]
    9c3c:	ldr	w4, [sp, #12]
    9c40:	mov	x0, x8
    9c44:	mov	w3, w9
    9c48:	bl	5240 <mpc_sin_cos@plt>
    9c4c:	asr	w0, w0, #4
    9c50:	ldp	x29, x30, [sp, #32]
    9c54:	add	sp, sp, #0x30
    9c58:	ret

0000000000009c5c <mpc_cosh@@Base>:
    9c5c:	sub	sp, sp, #0x80
    9c60:	stp	x29, x30, [sp, #112]
    9c64:	add	x29, sp, #0x70
    9c68:	mov	w8, wzr
    9c6c:	add	x9, sp, #0x10
    9c70:	stur	x0, [x29, #-8]
    9c74:	stur	x1, [x29, #-16]
    9c78:	stur	w2, [x29, #-20]
    9c7c:	ldur	x10, [x29, #-16]
    9c80:	ldr	q0, [x10, #32]
    9c84:	str	q0, [sp, #16]
    9c88:	ldr	q0, [x10, #48]
    9c8c:	str	q0, [sp, #32]
    9c90:	ldur	x10, [x29, #-16]
    9c94:	ldr	q0, [x10]
    9c98:	str	q0, [sp, #48]
    9c9c:	ldr	q0, [x10, #16]
    9ca0:	str	q0, [sp, #64]
    9ca4:	mov	x0, x9
    9ca8:	mov	x1, x9
    9cac:	mov	w2, w8
    9cb0:	str	x9, [sp, #8]
    9cb4:	bl	4c60 <mpfr_neg@plt>
    9cb8:	ldur	x9, [x29, #-8]
    9cbc:	ldur	w2, [x29, #-20]
    9cc0:	mov	x0, x9
    9cc4:	ldr	x1, [sp, #8]
    9cc8:	bl	54e0 <mpc_cos@plt>
    9ccc:	ldp	x29, x30, [sp, #112]
    9cd0:	add	sp, sp, #0x80
    9cd4:	ret

0000000000009cd8 <mpc_div_2si@@Base>:
    9cd8:	sub	sp, sp, #0x40
    9cdc:	stp	x29, x30, [sp, #48]
    9ce0:	add	x29, sp, #0x30
    9ce4:	stur	x0, [x29, #-8]
    9ce8:	stur	x1, [x29, #-16]
    9cec:	str	x2, [sp, #24]
    9cf0:	str	w3, [sp, #20]
    9cf4:	ldur	x0, [x29, #-8]
    9cf8:	ldur	x1, [x29, #-16]
    9cfc:	ldr	x2, [sp, #24]
    9d00:	ldr	w8, [sp, #20]
    9d04:	and	w3, w8, #0xf
    9d08:	bl	5130 <mpfr_div_2si@plt>
    9d0c:	str	w0, [sp, #16]
    9d10:	ldur	x9, [x29, #-8]
    9d14:	add	x0, x9, #0x20
    9d18:	ldur	x9, [x29, #-16]
    9d1c:	add	x1, x9, #0x20
    9d20:	ldr	x2, [sp, #24]
    9d24:	ldr	w8, [sp, #20]
    9d28:	asr	w3, w8, #4
    9d2c:	bl	5130 <mpfr_div_2si@plt>
    9d30:	str	w0, [sp, #12]
    9d34:	ldr	w8, [sp, #16]
    9d38:	cmp	w8, #0x0
    9d3c:	cset	w8, ge  // ge = tcont
    9d40:	tbnz	w8, #0, 9d50 <mpc_div_2si@@Base+0x78>
    9d44:	mov	w8, #0x2                   	// #2
    9d48:	str	w8, [sp, #8]
    9d4c:	b	9d68 <mpc_div_2si@@Base+0x90>
    9d50:	ldr	w8, [sp, #16]
    9d54:	mov	w9, wzr
    9d58:	mov	w10, #0x1                   	// #1
    9d5c:	cmp	w8, #0x0
    9d60:	csel	w8, w9, w10, eq  // eq = none
    9d64:	str	w8, [sp, #8]
    9d68:	ldr	w8, [sp, #8]
    9d6c:	ldr	w9, [sp, #12]
    9d70:	cmp	w9, #0x0
    9d74:	cset	w9, ge  // ge = tcont
    9d78:	str	w8, [sp, #4]
    9d7c:	tbnz	w9, #0, 9d8c <mpc_div_2si@@Base+0xb4>
    9d80:	mov	w8, #0x2                   	// #2
    9d84:	str	w8, [sp]
    9d88:	b	9da4 <mpc_div_2si@@Base+0xcc>
    9d8c:	ldr	w8, [sp, #12]
    9d90:	mov	w9, wzr
    9d94:	mov	w10, #0x1                   	// #1
    9d98:	cmp	w8, #0x0
    9d9c:	csel	w8, w9, w10, eq  // eq = none
    9da0:	str	w8, [sp]
    9da4:	ldr	w8, [sp]
    9da8:	ldr	w9, [sp, #4]
    9dac:	orr	w0, w9, w8, lsl #2
    9db0:	ldp	x29, x30, [sp, #48]
    9db4:	add	sp, sp, #0x40
    9db8:	ret

0000000000009dbc <mpc_div_2ui@@Base>:
    9dbc:	sub	sp, sp, #0x40
    9dc0:	stp	x29, x30, [sp, #48]
    9dc4:	add	x29, sp, #0x30
    9dc8:	stur	x0, [x29, #-8]
    9dcc:	stur	x1, [x29, #-16]
    9dd0:	str	x2, [sp, #24]
    9dd4:	str	w3, [sp, #20]
    9dd8:	ldur	x0, [x29, #-8]
    9ddc:	ldur	x1, [x29, #-16]
    9de0:	ldr	x2, [sp, #24]
    9de4:	ldr	w8, [sp, #20]
    9de8:	and	w3, w8, #0xf
    9dec:	bl	5420 <mpfr_div_2ui@plt>
    9df0:	str	w0, [sp, #16]
    9df4:	ldur	x9, [x29, #-8]
    9df8:	add	x0, x9, #0x20
    9dfc:	ldur	x9, [x29, #-16]
    9e00:	add	x1, x9, #0x20
    9e04:	ldr	x2, [sp, #24]
    9e08:	ldr	w8, [sp, #20]
    9e0c:	asr	w3, w8, #4
    9e10:	bl	5420 <mpfr_div_2ui@plt>
    9e14:	str	w0, [sp, #12]
    9e18:	ldr	w8, [sp, #16]
    9e1c:	cmp	w8, #0x0
    9e20:	cset	w8, ge  // ge = tcont
    9e24:	tbnz	w8, #0, 9e34 <mpc_div_2ui@@Base+0x78>
    9e28:	mov	w8, #0x2                   	// #2
    9e2c:	str	w8, [sp, #8]
    9e30:	b	9e4c <mpc_div_2ui@@Base+0x90>
    9e34:	ldr	w8, [sp, #16]
    9e38:	mov	w9, wzr
    9e3c:	mov	w10, #0x1                   	// #1
    9e40:	cmp	w8, #0x0
    9e44:	csel	w8, w9, w10, eq  // eq = none
    9e48:	str	w8, [sp, #8]
    9e4c:	ldr	w8, [sp, #8]
    9e50:	ldr	w9, [sp, #12]
    9e54:	cmp	w9, #0x0
    9e58:	cset	w9, ge  // ge = tcont
    9e5c:	str	w8, [sp, #4]
    9e60:	tbnz	w9, #0, 9e70 <mpc_div_2ui@@Base+0xb4>
    9e64:	mov	w8, #0x2                   	// #2
    9e68:	str	w8, [sp]
    9e6c:	b	9e88 <mpc_div_2ui@@Base+0xcc>
    9e70:	ldr	w8, [sp, #12]
    9e74:	mov	w9, wzr
    9e78:	mov	w10, #0x1                   	// #1
    9e7c:	cmp	w8, #0x0
    9e80:	csel	w8, w9, w10, eq  // eq = none
    9e84:	str	w8, [sp]
    9e88:	ldr	w8, [sp]
    9e8c:	ldr	w9, [sp, #4]
    9e90:	orr	w0, w9, w8, lsl #2
    9e94:	ldp	x29, x30, [sp, #48]
    9e98:	add	sp, sp, #0x40
    9e9c:	ret

0000000000009ea0 <mpc_div@@Base>:
    9ea0:	stp	x29, x30, [sp, #-32]!
    9ea4:	str	x28, [sp, #16]
    9ea8:	mov	x29, sp
    9eac:	sub	sp, sp, #0x1e0
    9eb0:	sub	x8, x29, #0xb0
    9eb4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    9eb8:	mov	x10, #0x4                   	// #4
    9ebc:	stur	x0, [x29, #-16]
    9ec0:	stur	x1, [x29, #-24]
    9ec4:	stur	x2, [x29, #-32]
    9ec8:	stur	w3, [x29, #-36]
    9ecc:	stur	wzr, [x29, #-40]
    9ed0:	stur	wzr, [x29, #-44]
    9ed4:	str	wzr, [sp, #240]
    9ed8:	str	wzr, [sp, #220]
    9edc:	str	wzr, [sp, #216]
    9ee0:	str	wzr, [sp, #212]
    9ee4:	str	wzr, [sp, #208]
    9ee8:	ldur	w11, [x29, #-36]
    9eec:	and	w11, w11, #0xf
    9ef0:	str	w11, [sp, #204]
    9ef4:	ldur	w11, [x29, #-36]
    9ef8:	asr	w10, w11, w10
    9efc:	str	w10, [sp, #200]
    9f00:	ldur	x12, [x29, #-32]
    9f04:	ldr	x12, [x12, #16]
    9f08:	cmp	x12, x9
    9f0c:	str	x8, [sp, #160]
    9f10:	b.ne	9f44 <mpc_div@@Base+0xa4>  // b.any
    9f14:	ldur	x8, [x29, #-32]
    9f18:	ldr	x8, [x8, #48]
    9f1c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    9f20:	cmp	x8, x9
    9f24:	b.ne	9f44 <mpc_div@@Base+0xa4>  // b.any
    9f28:	ldur	x0, [x29, #-16]
    9f2c:	ldur	x1, [x29, #-24]
    9f30:	ldur	x2, [x29, #-32]
    9f34:	ldur	w3, [x29, #-36]
    9f38:	bl	ac00 <mpc_div@@Base+0xd60>
    9f3c:	stur	w0, [x29, #-4]
    9f40:	b	abec <mpc_div@@Base+0xd4c>
    9f44:	ldur	x8, [x29, #-24]
    9f48:	ldr	x8, [x8, #16]
    9f4c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    9f50:	cmp	x8, x9
    9f54:	b.eq	9f6c <mpc_div@@Base+0xcc>  // b.none
    9f58:	ldur	x8, [x29, #-24]
    9f5c:	ldr	x8, [x8, #48]
    9f60:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    9f64:	cmp	x8, x9
    9f68:	b.ne	9fa0 <mpc_div@@Base+0x100>  // b.any
    9f6c:	ldur	x0, [x29, #-32]
    9f70:	bl	55c0 <mpfr_number_p@plt>
    9f74:	cbz	w0, 9fa0 <mpc_div@@Base+0x100>
    9f78:	ldur	x8, [x29, #-32]
    9f7c:	add	x0, x8, #0x20
    9f80:	bl	55c0 <mpfr_number_p@plt>
    9f84:	cbz	w0, 9fa0 <mpc_div@@Base+0x100>
    9f88:	ldur	x0, [x29, #-16]
    9f8c:	ldur	x1, [x29, #-24]
    9f90:	ldur	x2, [x29, #-32]
    9f94:	bl	acbc <mpc_div@@Base+0xe1c>
    9f98:	stur	w0, [x29, #-4]
    9f9c:	b	abec <mpc_div@@Base+0xd4c>
    9fa0:	ldur	x0, [x29, #-24]
    9fa4:	bl	55c0 <mpfr_number_p@plt>
    9fa8:	cbz	w0, 9ffc <mpc_div@@Base+0x15c>
    9fac:	ldur	x8, [x29, #-24]
    9fb0:	add	x0, x8, #0x20
    9fb4:	bl	55c0 <mpfr_number_p@plt>
    9fb8:	cbz	w0, 9ffc <mpc_div@@Base+0x15c>
    9fbc:	ldur	x8, [x29, #-32]
    9fc0:	ldr	x8, [x8, #16]
    9fc4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    9fc8:	cmp	x8, x9
    9fcc:	b.eq	9fe4 <mpc_div@@Base+0x144>  // b.none
    9fd0:	ldur	x8, [x29, #-32]
    9fd4:	ldr	x8, [x8, #48]
    9fd8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    9fdc:	cmp	x8, x9
    9fe0:	b.ne	9ffc <mpc_div@@Base+0x15c>  // b.any
    9fe4:	ldur	x0, [x29, #-16]
    9fe8:	ldur	x1, [x29, #-24]
    9fec:	ldur	x2, [x29, #-32]
    9ff0:	bl	b23c <mpc_div@@Base+0x139c>
    9ff4:	stur	w0, [x29, #-4]
    9ff8:	b	abec <mpc_div@@Base+0xd4c>
    9ffc:	ldur	x0, [x29, #-24]
    a000:	bl	55c0 <mpfr_number_p@plt>
    a004:	cbz	w0, a034 <mpc_div@@Base+0x194>
    a008:	ldur	x8, [x29, #-24]
    a00c:	add	x0, x8, #0x20
    a010:	bl	55c0 <mpfr_number_p@plt>
    a014:	cbz	w0, a034 <mpc_div@@Base+0x194>
    a018:	ldur	x0, [x29, #-32]
    a01c:	bl	55c0 <mpfr_number_p@plt>
    a020:	cbz	w0, a034 <mpc_div@@Base+0x194>
    a024:	ldur	x8, [x29, #-32]
    a028:	add	x0, x8, #0x20
    a02c:	bl	55c0 <mpfr_number_p@plt>
    a030:	cbnz	w0, a044 <mpc_div@@Base+0x1a4>
    a034:	ldur	x0, [x29, #-16]
    a038:	bl	4ff0 <mpc_set_nan@plt>
    a03c:	stur	wzr, [x29, #-4]
    a040:	b	abec <mpc_div@@Base+0xd4c>
    a044:	ldur	x8, [x29, #-32]
    a048:	ldr	x8, [x8, #48]
    a04c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    a050:	cmp	x8, x9
    a054:	b.ne	a074 <mpc_div@@Base+0x1d4>  // b.any
    a058:	ldur	x0, [x29, #-16]
    a05c:	ldur	x1, [x29, #-24]
    a060:	ldur	x2, [x29, #-32]
    a064:	ldur	w3, [x29, #-36]
    a068:	bl	b62c <mpc_div@@Base+0x178c>
    a06c:	stur	w0, [x29, #-4]
    a070:	b	abec <mpc_div@@Base+0xd4c>
    a074:	ldur	x8, [x29, #-32]
    a078:	ldr	x8, [x8, #16]
    a07c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    a080:	cmp	x8, x9
    a084:	b.ne	a0a4 <mpc_div@@Base+0x204>  // b.any
    a088:	ldur	x0, [x29, #-16]
    a08c:	ldur	x1, [x29, #-24]
    a090:	ldur	x2, [x29, #-32]
    a094:	ldur	w3, [x29, #-36]
    a098:	bl	b868 <mpc_div@@Base+0x19c8>
    a09c:	stur	w0, [x29, #-4]
    a0a0:	b	abec <mpc_div@@Base+0xd4c>
    a0a4:	ldur	x8, [x29, #-16]
    a0a8:	ldr	x8, [x8]
    a0ac:	ldur	x9, [x29, #-16]
    a0b0:	ldr	x9, [x9, #32]
    a0b4:	cmp	x8, x9
    a0b8:	b.le	a0cc <mpc_div@@Base+0x22c>
    a0bc:	ldur	x8, [x29, #-16]
    a0c0:	ldr	x8, [x8]
    a0c4:	str	x8, [sp, #152]
    a0c8:	b	a0d8 <mpc_div@@Base+0x238>
    a0cc:	ldur	x8, [x29, #-16]
    a0d0:	ldr	x8, [x8, #32]
    a0d4:	str	x8, [sp, #152]
    a0d8:	ldr	x8, [sp, #152]
    a0dc:	stur	x8, [x29, #-216]
    a0e0:	sub	x0, x29, #0x70
    a0e4:	mov	x1, #0x2                   	// #2
    a0e8:	bl	4db0 <mpc_init2@plt>
    a0ec:	sub	x0, x29, #0xd0
    a0f0:	bl	4b80 <mpfr_init@plt>
    a0f4:	ldur	x8, [x29, #-32]
    a0f8:	ldr	q0, [x8]
    a0fc:	sub	x9, x29, #0xb0
    a100:	ldr	x10, [sp, #160]
    a104:	str	q0, [x10]
    a108:	ldr	q0, [x8, #16]
    a10c:	str	q0, [x10, #16]
    a110:	ldur	x8, [x29, #-32]
    a114:	ldr	q0, [x8, #32]
    a118:	str	q0, [x10, #32]
    a11c:	ldr	q0, [x8, #48]
    a120:	str	q0, [x10, #48]
    a124:	add	x0, x9, #0x20
    a128:	add	x1, x9, #0x20
    a12c:	mov	w11, wzr
    a130:	mov	w2, w11
    a134:	bl	4c60 <mpfr_neg@plt>
    a138:	bl	53f0 <mpfr_underflow_p@plt>
    a13c:	str	w0, [sp, #196]
    a140:	bl	55d0 <mpfr_overflow_p@plt>
    a144:	str	w0, [sp, #192]
    a148:	ldr	w8, [sp, #240]
    a14c:	add	w8, w8, #0x1
    a150:	str	w8, [sp, #240]
    a154:	ldr	w8, [sp, #240]
    a158:	cmp	w8, #0x2
    a15c:	b.gt	a174 <mpc_div@@Base+0x2d4>
    a160:	ldur	x0, [x29, #-216]
    a164:	bl	4de0 <mpc_ceil_log2@plt>
    a168:	add	x8, x0, #0x5
    a16c:	str	x8, [sp, #144]
    a170:	b	a184 <mpc_div@@Base+0x2e4>
    a174:	ldur	x8, [x29, #-216]
    a178:	mov	x9, #0x2                   	// #2
    a17c:	sdiv	x8, x8, x9
    a180:	str	x8, [sp, #144]
    a184:	ldr	x8, [sp, #144]
    a188:	ldur	x9, [x29, #-216]
    a18c:	add	x8, x9, x8
    a190:	stur	x8, [x29, #-216]
    a194:	ldur	x1, [x29, #-216]
    a198:	sub	x0, x29, #0x70
    a19c:	bl	4cd0 <mpc_set_prec@plt>
    a1a0:	ldur	x1, [x29, #-216]
    a1a4:	sub	x8, x29, #0xd0
    a1a8:	mov	x0, x8
    a1ac:	str	x8, [sp, #136]
    a1b0:	bl	4d40 <mpfr_set_prec@plt>
    a1b4:	bl	4f00 <mpfr_clear_underflow@plt>
    a1b8:	bl	4b30 <mpfr_clear_overflow@plt>
    a1bc:	ldur	x1, [x29, #-32]
    a1c0:	ldr	x0, [sp, #136]
    a1c4:	mov	w2, #0x2                   	// #2
    a1c8:	bl	4f90 <mpc_norm@plt>
    a1cc:	stur	w0, [x29, #-228]
    a1d0:	bl	53f0 <mpfr_underflow_p@plt>
    a1d4:	str	w0, [sp, #236]
    a1d8:	bl	55d0 <mpfr_overflow_p@plt>
    a1dc:	str	w0, [sp, #232]
    a1e0:	ldr	w10, [sp, #236]
    a1e4:	cbz	w10, a20c <mpc_div@@Base+0x36c>
    a1e8:	sub	x8, x29, #0xd0
    a1ec:	str	x8, [sp, #176]
    a1f0:	ldr	x8, [sp, #176]
    a1f4:	mov	w9, #0x1                   	// #1
    a1f8:	str	w9, [x8, #8]
    a1fc:	ldr	x8, [sp, #176]
    a200:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    a204:	str	x10, [x8, #16]
    a208:	str	wzr, [sp, #172]
    a20c:	bl	4f00 <mpfr_clear_underflow@plt>
    a210:	bl	4b30 <mpfr_clear_overflow@plt>
    a214:	ldur	x1, [x29, #-24]
    a218:	sub	x0, x29, #0x70
    a21c:	sub	x2, x29, #0xb0
    a220:	mov	w3, #0x11                  	// #17
    a224:	bl	4fd0 <mpc_mul@plt>
    a228:	stur	w0, [x29, #-224]
    a22c:	ldur	w8, [x29, #-224]
    a230:	and	w8, w8, #0x3
    a234:	cmp	w8, #0x2
    a238:	b.ne	a248 <mpc_div@@Base+0x3a8>  // b.any
    a23c:	mov	w8, #0xffffffff            	// #-1
    a240:	str	w8, [sp, #132]
    a244:	b	a260 <mpc_div@@Base+0x3c0>
    a248:	ldur	w8, [x29, #-224]
    a24c:	mov	w9, wzr
    a250:	mov	w10, #0x1                   	// #1
    a254:	tst	w8, #0x3
    a258:	csel	w8, w9, w10, eq  // eq = none
    a25c:	str	w8, [sp, #132]
    a260:	ldr	w8, [sp, #132]
    a264:	stur	w8, [x29, #-232]
    a268:	ldur	w8, [x29, #-224]
    a26c:	asr	w8, w8, #2
    a270:	cmp	w8, #0x2
    a274:	b.ne	a284 <mpc_div@@Base+0x3e4>  // b.any
    a278:	mov	w8, #0xffffffff            	// #-1
    a27c:	str	w8, [sp, #128]
    a280:	b	a2a0 <mpc_div@@Base+0x400>
    a284:	ldur	w8, [x29, #-224]
    a288:	asr	w8, w8, #2
    a28c:	mov	w9, wzr
    a290:	mov	w10, #0x1                   	// #1
    a294:	cmp	w8, #0x0
    a298:	csel	w8, w9, w10, eq  // eq = none
    a29c:	str	w8, [sp, #128]
    a2a0:	ldr	w8, [sp, #128]
    a2a4:	stur	w8, [x29, #-236]
    a2a8:	bl	53f0 <mpfr_underflow_p@plt>
    a2ac:	str	w0, [sp, #228]
    a2b0:	bl	55d0 <mpfr_overflow_p@plt>
    a2b4:	str	w0, [sp, #224]
    a2b8:	ldr	w8, [sp, #224]
    a2bc:	cbz	w8, a4b8 <mpc_div@@Base+0x618>
    a2c0:	str	wzr, [sp, #168]
    a2c4:	ldur	x8, [x29, #-96]
    a2c8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a2cc:	cmp	x8, x9
    a2d0:	b.ge	a2fc <mpc_div@@Base+0x45c>  // b.tcont
    a2d4:	ldur	x8, [x29, #-96]
    a2d8:	mov	x9, #0x2                   	// #2
    a2dc:	movk	x9, #0x8000, lsl #48
    a2e0:	cmp	x8, x9
    a2e4:	b.ne	a2f0 <mpc_div@@Base+0x450>  // b.any
    a2e8:	bl	4be0 <mpfr_set_erangeflag@plt>
    a2ec:	b	a2f0 <mpc_div@@Base+0x450>
    a2f0:	mov	w8, wzr
    a2f4:	str	w8, [sp, #124]
    a2f8:	b	a304 <mpc_div@@Base+0x464>
    a2fc:	ldur	w8, [x29, #-104]
    a300:	str	w8, [sp, #124]
    a304:	ldr	w8, [sp, #124]
    a308:	str	w8, [sp, #188]
    a30c:	ldr	w8, [sp, #188]
    a310:	cmp	w8, #0x0
    a314:	cset	w8, le
    a318:	tbnz	w8, #0, a350 <mpc_div@@Base+0x4b0>
    a31c:	sub	x8, x29, #0x70
    a320:	mov	x0, x8
    a324:	str	x8, [sp, #112]
    a328:	bl	4ee0 <mpfr_nextabove@plt>
    a32c:	ldur	x8, [x29, #-96]
    a330:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a334:	cmp	x8, x9
    a338:	cset	w10, eq  // eq = none
    a33c:	and	w10, w10, #0x1
    a340:	str	w10, [sp, #168]
    a344:	ldr	x0, [sp, #112]
    a348:	bl	4c80 <mpfr_nextbelow@plt>
    a34c:	b	a390 <mpc_div@@Base+0x4f0>
    a350:	ldr	w8, [sp, #188]
    a354:	cmp	w8, #0x0
    a358:	cset	w8, ge  // ge = tcont
    a35c:	tbnz	w8, #0, a390 <mpc_div@@Base+0x4f0>
    a360:	sub	x8, x29, #0x70
    a364:	mov	x0, x8
    a368:	str	x8, [sp, #104]
    a36c:	bl	4c80 <mpfr_nextbelow@plt>
    a370:	ldur	x8, [x29, #-96]
    a374:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a378:	cmp	x8, x9
    a37c:	cset	w10, eq  // eq = none
    a380:	and	w10, w10, #0x1
    a384:	str	w10, [sp, #168]
    a388:	ldr	x0, [sp, #104]
    a38c:	bl	4ee0 <mpfr_nextabove@plt>
    a390:	ldr	w8, [sp, #168]
    a394:	cbz	w8, a3ac <mpc_div@@Base+0x50c>
    a398:	ldr	w1, [sp, #188]
    a39c:	sub	x0, x29, #0x70
    a3a0:	bl	5220 <mpfr_set_inf@plt>
    a3a4:	mov	w8, #0x1                   	// #1
    a3a8:	str	w8, [sp, #216]
    a3ac:	ldur	x8, [x29, #-64]
    a3b0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a3b4:	cmp	x8, x9
    a3b8:	b.ge	a3e4 <mpc_div@@Base+0x544>  // b.tcont
    a3bc:	ldur	x8, [x29, #-64]
    a3c0:	mov	x9, #0x2                   	// #2
    a3c4:	movk	x9, #0x8000, lsl #48
    a3c8:	cmp	x8, x9
    a3cc:	b.ne	a3d8 <mpc_div@@Base+0x538>  // b.any
    a3d0:	bl	4be0 <mpfr_set_erangeflag@plt>
    a3d4:	b	a3d8 <mpc_div@@Base+0x538>
    a3d8:	mov	w8, wzr
    a3dc:	str	w8, [sp, #100]
    a3e0:	b	a3ec <mpc_div@@Base+0x54c>
    a3e4:	ldur	w8, [x29, #-72]
    a3e8:	str	w8, [sp, #100]
    a3ec:	ldr	w8, [sp, #100]
    a3f0:	str	w8, [sp, #188]
    a3f4:	str	wzr, [sp, #168]
    a3f8:	ldr	w8, [sp, #188]
    a3fc:	cmp	w8, #0x0
    a400:	cset	w8, le
    a404:	tbnz	w8, #0, a440 <mpc_div@@Base+0x5a0>
    a408:	sub	x8, x29, #0x70
    a40c:	add	x0, x8, #0x20
    a410:	str	x8, [sp, #88]
    a414:	bl	4ee0 <mpfr_nextabove@plt>
    a418:	ldur	x8, [x29, #-64]
    a41c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a420:	cmp	x8, x9
    a424:	cset	w10, eq  // eq = none
    a428:	and	w10, w10, #0x1
    a42c:	str	w10, [sp, #168]
    a430:	ldr	x8, [sp, #88]
    a434:	add	x0, x8, #0x20
    a438:	bl	4c80 <mpfr_nextbelow@plt>
    a43c:	b	a484 <mpc_div@@Base+0x5e4>
    a440:	ldr	w8, [sp, #188]
    a444:	cmp	w8, #0x0
    a448:	cset	w8, ge  // ge = tcont
    a44c:	tbnz	w8, #0, a484 <mpc_div@@Base+0x5e4>
    a450:	sub	x8, x29, #0x70
    a454:	add	x0, x8, #0x20
    a458:	str	x8, [sp, #80]
    a45c:	bl	4c80 <mpfr_nextbelow@plt>
    a460:	ldur	x8, [x29, #-64]
    a464:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a468:	cmp	x8, x9
    a46c:	cset	w10, eq  // eq = none
    a470:	and	w10, w10, #0x1
    a474:	str	w10, [sp, #168]
    a478:	ldr	x8, [sp, #80]
    a47c:	add	x0, x8, #0x20
    a480:	bl	4ee0 <mpfr_nextabove@plt>
    a484:	ldr	w8, [sp, #168]
    a488:	cbz	w8, a4a4 <mpc_div@@Base+0x604>
    a48c:	sub	x8, x29, #0x70
    a490:	add	x0, x8, #0x20
    a494:	ldr	w1, [sp, #188]
    a498:	bl	5220 <mpfr_set_inf@plt>
    a49c:	mov	w9, #0x1                   	// #1
    a4a0:	str	w9, [sp, #208]
    a4a4:	ldur	x0, [x29, #-16]
    a4a8:	ldur	w2, [x29, #-36]
    a4ac:	sub	x1, x29, #0x70
    a4b0:	bl	5680 <mpc_set@plt>
    a4b4:	b	a93c <mpc_div@@Base+0xa9c>
    a4b8:	ldur	w8, [x29, #-228]
    a4bc:	cbnz	w8, a658 <mpc_div@@Base+0x7b8>
    a4c0:	ldur	w8, [x29, #-232]
    a4c4:	cbz	w8, a4d0 <mpc_div@@Base+0x630>
    a4c8:	ldur	w8, [x29, #-236]
    a4cc:	cbnz	w8, a658 <mpc_div@@Base+0x7b8>
    a4d0:	bl	4f00 <mpfr_clear_underflow@plt>
    a4d4:	bl	4b30 <mpfr_clear_overflow@plt>
    a4d8:	sub	x8, x29, #0x70
    a4dc:	mov	x0, x8
    a4e0:	mov	x1, x8
    a4e4:	sub	x2, x29, #0xd0
    a4e8:	mov	w3, #0x1                   	// #1
    a4ec:	bl	5250 <mpfr_div@plt>
    a4f0:	ldur	w9, [x29, #-232]
    a4f4:	orr	w9, w9, w0
    a4f8:	stur	w9, [x29, #-232]
    a4fc:	bl	53f0 <mpfr_underflow_p@plt>
    a500:	str	w0, [sp, #220]
    a504:	bl	55d0 <mpfr_overflow_p@plt>
    a508:	str	w0, [sp, #216]
    a50c:	ldur	w9, [x29, #-232]
    a510:	mov	w10, #0x1                   	// #1
    a514:	str	w10, [sp, #76]
    a518:	cbz	w9, a580 <mpc_div@@Base+0x6e0>
    a51c:	ldr	w8, [sp, #220]
    a520:	mov	w9, #0x1                   	// #1
    a524:	str	w9, [sp, #76]
    a528:	cbnz	w8, a580 <mpc_div@@Base+0x6e0>
    a52c:	ldr	w8, [sp, #216]
    a530:	mov	w9, #0x1                   	// #1
    a534:	str	w9, [sp, #76]
    a538:	cbnz	w8, a580 <mpc_div@@Base+0x6e0>
    a53c:	ldur	x8, [x29, #-216]
    a540:	subs	x1, x8, #0x4
    a544:	ldur	x8, [x29, #-16]
    a548:	ldr	x8, [x8]
    a54c:	ldr	w9, [sp, #204]
    a550:	mov	w10, wzr
    a554:	cmp	w9, #0x0
    a558:	cset	w9, eq  // eq = none
    a55c:	and	w9, w9, #0x1
    a560:	add	x4, x8, w9, sxtw
    a564:	sub	x0, x29, #0x70
    a568:	mov	w2, w10
    a56c:	mov	w3, #0x1                   	// #1
    a570:	bl	5540 <mpfr_can_round@plt>
    a574:	cmp	w0, #0x0
    a578:	cset	w9, ne  // ne = any
    a57c:	str	w9, [sp, #76]
    a580:	ldr	w8, [sp, #76]
    a584:	and	w8, w8, #0x1
    a588:	stur	w8, [x29, #-40]
    a58c:	ldur	w8, [x29, #-40]
    a590:	cbz	w8, a654 <mpc_div@@Base+0x7b4>
    a594:	bl	4f00 <mpfr_clear_underflow@plt>
    a598:	bl	4b30 <mpfr_clear_overflow@plt>
    a59c:	sub	x8, x29, #0x70
    a5a0:	add	x0, x8, #0x20
    a5a4:	add	x1, x8, #0x20
    a5a8:	sub	x2, x29, #0xd0
    a5ac:	mov	w3, #0x1                   	// #1
    a5b0:	bl	5250 <mpfr_div@plt>
    a5b4:	ldur	w9, [x29, #-236]
    a5b8:	orr	w9, w9, w0
    a5bc:	stur	w9, [x29, #-236]
    a5c0:	bl	53f0 <mpfr_underflow_p@plt>
    a5c4:	str	w0, [sp, #212]
    a5c8:	bl	55d0 <mpfr_overflow_p@plt>
    a5cc:	str	w0, [sp, #208]
    a5d0:	ldur	w9, [x29, #-236]
    a5d4:	mov	w10, #0x1                   	// #1
    a5d8:	str	w10, [sp, #72]
    a5dc:	cbz	w9, a648 <mpc_div@@Base+0x7a8>
    a5e0:	ldr	w8, [sp, #212]
    a5e4:	mov	w9, #0x1                   	// #1
    a5e8:	str	w9, [sp, #72]
    a5ec:	cbnz	w8, a648 <mpc_div@@Base+0x7a8>
    a5f0:	ldr	w8, [sp, #208]
    a5f4:	mov	w9, #0x1                   	// #1
    a5f8:	str	w9, [sp, #72]
    a5fc:	cbnz	w8, a648 <mpc_div@@Base+0x7a8>
    a600:	sub	x8, x29, #0x70
    a604:	add	x0, x8, #0x20
    a608:	ldur	x8, [x29, #-216]
    a60c:	subs	x1, x8, #0x4
    a610:	ldur	x8, [x29, #-16]
    a614:	ldr	x8, [x8, #32]
    a618:	ldr	w9, [sp, #200]
    a61c:	mov	w10, wzr
    a620:	cmp	w9, #0x0
    a624:	cset	w9, eq  // eq = none
    a628:	and	w9, w9, #0x1
    a62c:	add	x4, x8, w9, sxtw
    a630:	mov	w2, w10
    a634:	mov	w3, #0x1                   	// #1
    a638:	bl	5540 <mpfr_can_round@plt>
    a63c:	cmp	w0, #0x0
    a640:	cset	w9, ne  // ne = any
    a644:	str	w9, [sp, #72]
    a648:	ldr	w8, [sp, #72]
    a64c:	and	w8, w8, #0x1
    a650:	stur	w8, [x29, #-44]
    a654:	b	a848 <mpc_div@@Base+0x9a8>
    a658:	sub	x8, x29, #0xd0
    a65c:	mov	x0, x8
    a660:	mov	x1, #0x1                   	// #1
    a664:	mov	x2, x8
    a668:	mov	w3, #0x1                   	// #1
    a66c:	bl	5070 <mpfr_ui_div@plt>
    a670:	cbnz	w0, a67c <mpc_div@@Base+0x7dc>
    a674:	ldur	w8, [x29, #-228]
    a678:	cbz	w8, a6c4 <mpc_div@@Base+0x824>
    a67c:	ldur	x8, [x29, #-96]
    a680:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    a684:	cmp	x8, x9
    a688:	cset	w10, eq  // eq = none
    a68c:	mov	w11, #0x1                   	// #1
    a690:	eor	w10, w10, #0x1
    a694:	and	w10, w10, #0x1
    a698:	ldur	w12, [x29, #-232]
    a69c:	orr	w10, w12, w10
    a6a0:	stur	w10, [x29, #-232]
    a6a4:	ldur	x8, [x29, #-64]
    a6a8:	cmp	x8, x9
    a6ac:	cset	w10, eq  // eq = none
    a6b0:	eor	w10, w10, w11
    a6b4:	and	w10, w10, #0x1
    a6b8:	ldur	w11, [x29, #-236]
    a6bc:	orr	w10, w11, w10
    a6c0:	stur	w10, [x29, #-236]
    a6c4:	bl	4f00 <mpfr_clear_underflow@plt>
    a6c8:	bl	4b30 <mpfr_clear_overflow@plt>
    a6cc:	sub	x8, x29, #0x70
    a6d0:	mov	x0, x8
    a6d4:	mov	x1, x8
    a6d8:	sub	x2, x29, #0xd0
    a6dc:	mov	w3, #0x1                   	// #1
    a6e0:	bl	4c50 <mpfr_mul@plt>
    a6e4:	ldur	w9, [x29, #-232]
    a6e8:	orr	w9, w9, w0
    a6ec:	stur	w9, [x29, #-232]
    a6f0:	bl	53f0 <mpfr_underflow_p@plt>
    a6f4:	str	w0, [sp, #220]
    a6f8:	bl	55d0 <mpfr_overflow_p@plt>
    a6fc:	str	w0, [sp, #216]
    a700:	ldur	w9, [x29, #-232]
    a704:	mov	w10, #0x1                   	// #1
    a708:	str	w10, [sp, #68]
    a70c:	cbz	w9, a774 <mpc_div@@Base+0x8d4>
    a710:	ldr	w8, [sp, #220]
    a714:	mov	w9, #0x1                   	// #1
    a718:	str	w9, [sp, #68]
    a71c:	cbnz	w8, a774 <mpc_div@@Base+0x8d4>
    a720:	ldr	w8, [sp, #216]
    a724:	mov	w9, #0x1                   	// #1
    a728:	str	w9, [sp, #68]
    a72c:	cbnz	w8, a774 <mpc_div@@Base+0x8d4>
    a730:	ldur	x8, [x29, #-216]
    a734:	subs	x1, x8, #0x4
    a738:	ldur	x8, [x29, #-16]
    a73c:	ldr	x8, [x8]
    a740:	ldr	w9, [sp, #204]
    a744:	mov	w10, wzr
    a748:	cmp	w9, #0x0
    a74c:	cset	w9, eq  // eq = none
    a750:	and	w9, w9, #0x1
    a754:	add	x4, x8, w9, sxtw
    a758:	sub	x0, x29, #0x70
    a75c:	mov	w2, w10
    a760:	mov	w3, #0x1                   	// #1
    a764:	bl	5540 <mpfr_can_round@plt>
    a768:	cmp	w0, #0x0
    a76c:	cset	w9, ne  // ne = any
    a770:	str	w9, [sp, #68]
    a774:	ldr	w8, [sp, #68]
    a778:	and	w8, w8, #0x1
    a77c:	stur	w8, [x29, #-40]
    a780:	ldur	w8, [x29, #-40]
    a784:	cbz	w8, a848 <mpc_div@@Base+0x9a8>
    a788:	bl	4f00 <mpfr_clear_underflow@plt>
    a78c:	bl	4b30 <mpfr_clear_overflow@plt>
    a790:	sub	x8, x29, #0x70
    a794:	add	x0, x8, #0x20
    a798:	add	x1, x8, #0x20
    a79c:	sub	x2, x29, #0xd0
    a7a0:	mov	w3, #0x1                   	// #1
    a7a4:	bl	4c50 <mpfr_mul@plt>
    a7a8:	ldur	w9, [x29, #-236]
    a7ac:	orr	w9, w9, w0
    a7b0:	stur	w9, [x29, #-236]
    a7b4:	bl	53f0 <mpfr_underflow_p@plt>
    a7b8:	str	w0, [sp, #212]
    a7bc:	bl	55d0 <mpfr_overflow_p@plt>
    a7c0:	str	w0, [sp, #208]
    a7c4:	ldur	w9, [x29, #-236]
    a7c8:	mov	w10, #0x1                   	// #1
    a7cc:	str	w10, [sp, #64]
    a7d0:	cbz	w9, a83c <mpc_div@@Base+0x99c>
    a7d4:	ldr	w8, [sp, #212]
    a7d8:	mov	w9, #0x1                   	// #1
    a7dc:	str	w9, [sp, #64]
    a7e0:	cbnz	w8, a83c <mpc_div@@Base+0x99c>
    a7e4:	ldr	w8, [sp, #208]
    a7e8:	mov	w9, #0x1                   	// #1
    a7ec:	str	w9, [sp, #64]
    a7f0:	cbnz	w8, a83c <mpc_div@@Base+0x99c>
    a7f4:	sub	x8, x29, #0x70
    a7f8:	add	x0, x8, #0x20
    a7fc:	ldur	x8, [x29, #-216]
    a800:	subs	x1, x8, #0x4
    a804:	ldur	x8, [x29, #-16]
    a808:	ldr	x8, [x8, #32]
    a80c:	ldr	w9, [sp, #200]
    a810:	mov	w10, wzr
    a814:	cmp	w9, #0x0
    a818:	cset	w9, eq  // eq = none
    a81c:	and	w9, w9, #0x1
    a820:	add	x4, x8, w9, sxtw
    a824:	mov	w2, w10
    a828:	mov	w3, #0x1                   	// #1
    a82c:	bl	5540 <mpfr_can_round@plt>
    a830:	cmp	w0, #0x0
    a834:	cset	w9, ne  // ne = any
    a838:	str	w9, [sp, #64]
    a83c:	ldr	w8, [sp, #64]
    a840:	and	w8, w8, #0x1
    a844:	stur	w8, [x29, #-44]
    a848:	ldur	w8, [x29, #-40]
    a84c:	cbz	w8, a860 <mpc_div@@Base+0x9c0>
    a850:	ldur	w8, [x29, #-44]
    a854:	mov	w9, #0x0                   	// #0
    a858:	str	w9, [sp, #60]
    a85c:	cbnz	w8, a8a4 <mpc_div@@Base+0xa04>
    a860:	ldr	w8, [sp, #236]
    a864:	mov	w9, #0x0                   	// #0
    a868:	str	w9, [sp, #60]
    a86c:	cbnz	w8, a8a4 <mpc_div@@Base+0xa04>
    a870:	ldr	w8, [sp, #232]
    a874:	mov	w9, #0x0                   	// #0
    a878:	str	w9, [sp, #60]
    a87c:	cbnz	w8, a8a4 <mpc_div@@Base+0xa04>
    a880:	ldr	w8, [sp, #228]
    a884:	mov	w9, #0x0                   	// #0
    a888:	str	w9, [sp, #60]
    a88c:	cbnz	w8, a8a4 <mpc_div@@Base+0xa04>
    a890:	ldr	w8, [sp, #224]
    a894:	cmp	w8, #0x0
    a898:	cset	w8, ne  // ne = any
    a89c:	eor	w8, w8, #0x1
    a8a0:	str	w8, [sp, #60]
    a8a4:	ldr	w8, [sp, #60]
    a8a8:	tbnz	w8, #0, a148 <mpc_div@@Base+0x2a8>
    a8ac:	ldur	x0, [x29, #-16]
    a8b0:	ldur	w2, [x29, #-36]
    a8b4:	sub	x1, x29, #0x70
    a8b8:	bl	5680 <mpc_set@plt>
    a8bc:	stur	w0, [x29, #-220]
    a8c0:	ldur	w8, [x29, #-220]
    a8c4:	and	w8, w8, #0x3
    a8c8:	cmp	w8, #0x2
    a8cc:	b.ne	a8dc <mpc_div@@Base+0xa3c>  // b.any
    a8d0:	mov	w8, #0xffffffff            	// #-1
    a8d4:	str	w8, [sp, #56]
    a8d8:	b	a8f4 <mpc_div@@Base+0xa54>
    a8dc:	ldur	w8, [x29, #-220]
    a8e0:	mov	w9, wzr
    a8e4:	mov	w10, #0x1                   	// #1
    a8e8:	tst	w8, #0x3
    a8ec:	csel	w8, w9, w10, eq  // eq = none
    a8f0:	str	w8, [sp, #56]
    a8f4:	ldr	w8, [sp, #56]
    a8f8:	stur	w8, [x29, #-232]
    a8fc:	ldur	w8, [x29, #-220]
    a900:	asr	w8, w8, #2
    a904:	cmp	w8, #0x2
    a908:	b.ne	a918 <mpc_div@@Base+0xa78>  // b.any
    a90c:	mov	w8, #0xffffffff            	// #-1
    a910:	str	w8, [sp, #52]
    a914:	b	a934 <mpc_div@@Base+0xa94>
    a918:	ldur	w8, [x29, #-220]
    a91c:	asr	w8, w8, #2
    a920:	mov	w9, wzr
    a924:	mov	w10, #0x1                   	// #1
    a928:	cmp	w8, #0x0
    a92c:	csel	w8, w9, w10, eq  // eq = none
    a930:	str	w8, [sp, #52]
    a934:	ldr	w8, [sp, #52]
    a938:	stur	w8, [x29, #-236]
    a93c:	ldr	w8, [sp, #216]
    a940:	cbnz	w8, a954 <mpc_div@@Base+0xab4>
    a944:	ldr	w8, [sp, #236]
    a948:	cbz	w8, a9f8 <mpc_div@@Base+0xb58>
    a94c:	ldr	w8, [sp, #228]
    a950:	cbnz	w8, a9f8 <mpc_div@@Base+0xb58>
    a954:	ldur	x0, [x29, #-16]
    a958:	ldur	x8, [x29, #-96]
    a95c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    a960:	cmp	x8, x9
    a964:	str	x0, [sp, #40]
    a968:	b.ge	a994 <mpc_div@@Base+0xaf4>  // b.tcont
    a96c:	ldur	x8, [x29, #-96]
    a970:	mov	x9, #0x2                   	// #2
    a974:	movk	x9, #0x8000, lsl #48
    a978:	cmp	x8, x9
    a97c:	b.ne	a988 <mpc_div@@Base+0xae8>  // b.any
    a980:	bl	4be0 <mpfr_set_erangeflag@plt>
    a984:	b	a988 <mpc_div@@Base+0xae8>
    a988:	mov	w8, wzr
    a98c:	str	w8, [sp, #36]
    a990:	b	a99c <mpc_div@@Base+0xafc>
    a994:	ldur	w8, [x29, #-104]
    a998:	str	w8, [sp, #36]
    a99c:	ldr	w8, [sp, #36]
    a9a0:	ldr	x0, [sp, #40]
    a9a4:	mov	w1, w8
    a9a8:	bl	5220 <mpfr_set_inf@plt>
    a9ac:	ldur	x9, [x29, #-96]
    a9b0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    a9b4:	cmp	x9, x10
    a9b8:	b.ge	a9e4 <mpc_div@@Base+0xb44>  // b.tcont
    a9bc:	ldur	x8, [x29, #-96]
    a9c0:	mov	x9, #0x2                   	// #2
    a9c4:	movk	x9, #0x8000, lsl #48
    a9c8:	cmp	x8, x9
    a9cc:	b.ne	a9d8 <mpc_div@@Base+0xb38>  // b.any
    a9d0:	bl	4be0 <mpfr_set_erangeflag@plt>
    a9d4:	b	a9d8 <mpc_div@@Base+0xb38>
    a9d8:	mov	w8, wzr
    a9dc:	str	w8, [sp, #32]
    a9e0:	b	a9ec <mpc_div@@Base+0xb4c>
    a9e4:	ldur	w8, [x29, #-104]
    a9e8:	str	w8, [sp, #32]
    a9ec:	ldr	w8, [sp, #32]
    a9f0:	stur	w8, [x29, #-232]
    a9f4:	b	aa3c <mpc_div@@Base+0xb9c>
    a9f8:	ldr	w8, [sp, #220]
    a9fc:	cbnz	w8, aa10 <mpc_div@@Base+0xb70>
    aa00:	ldr	w8, [sp, #232]
    aa04:	cbz	w8, aa3c <mpc_div@@Base+0xb9c>
    aa08:	ldr	w8, [sp, #224]
    aa0c:	cbnz	w8, aa3c <mpc_div@@Base+0xb9c>
    aa10:	ldur	w8, [x29, #-104]
    aa14:	mov	w9, wzr
    aa18:	mov	w10, #0xffffffff            	// #-1
    aa1c:	mov	w11, #0x1                   	// #1
    aa20:	cmp	w8, #0x0
    aa24:	csel	w8, w11, w10, lt  // lt = tstop
    aa28:	stur	w8, [x29, #-232]
    aa2c:	ldur	x0, [x29, #-16]
    aa30:	ldur	w8, [x29, #-232]
    aa34:	subs	w1, w9, w8
    aa38:	bl	4dd0 <mpfr_set_zero@plt>
    aa3c:	ldr	w8, [sp, #208]
    aa40:	cbnz	w8, aa54 <mpc_div@@Base+0xbb4>
    aa44:	ldr	w8, [sp, #236]
    aa48:	cbz	w8, aafc <mpc_div@@Base+0xc5c>
    aa4c:	ldr	w8, [sp, #228]
    aa50:	cbnz	w8, aafc <mpc_div@@Base+0xc5c>
    aa54:	ldur	x8, [x29, #-16]
    aa58:	add	x0, x8, #0x20
    aa5c:	ldur	x8, [x29, #-64]
    aa60:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    aa64:	cmp	x8, x9
    aa68:	str	x0, [sp, #24]
    aa6c:	b.ge	aa98 <mpc_div@@Base+0xbf8>  // b.tcont
    aa70:	ldur	x8, [x29, #-64]
    aa74:	mov	x9, #0x2                   	// #2
    aa78:	movk	x9, #0x8000, lsl #48
    aa7c:	cmp	x8, x9
    aa80:	b.ne	aa8c <mpc_div@@Base+0xbec>  // b.any
    aa84:	bl	4be0 <mpfr_set_erangeflag@plt>
    aa88:	b	aa8c <mpc_div@@Base+0xbec>
    aa8c:	mov	w8, wzr
    aa90:	str	w8, [sp, #20]
    aa94:	b	aaa0 <mpc_div@@Base+0xc00>
    aa98:	ldur	w8, [x29, #-72]
    aa9c:	str	w8, [sp, #20]
    aaa0:	ldr	w8, [sp, #20]
    aaa4:	ldr	x0, [sp, #24]
    aaa8:	mov	w1, w8
    aaac:	bl	5220 <mpfr_set_inf@plt>
    aab0:	ldur	x9, [x29, #-64]
    aab4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    aab8:	cmp	x9, x10
    aabc:	b.ge	aae8 <mpc_div@@Base+0xc48>  // b.tcont
    aac0:	ldur	x8, [x29, #-64]
    aac4:	mov	x9, #0x2                   	// #2
    aac8:	movk	x9, #0x8000, lsl #48
    aacc:	cmp	x8, x9
    aad0:	b.ne	aadc <mpc_div@@Base+0xc3c>  // b.any
    aad4:	bl	4be0 <mpfr_set_erangeflag@plt>
    aad8:	b	aadc <mpc_div@@Base+0xc3c>
    aadc:	mov	w8, wzr
    aae0:	str	w8, [sp, #16]
    aae4:	b	aaf0 <mpc_div@@Base+0xc50>
    aae8:	ldur	w8, [x29, #-72]
    aaec:	str	w8, [sp, #16]
    aaf0:	ldr	w8, [sp, #16]
    aaf4:	stur	w8, [x29, #-236]
    aaf8:	b	ab44 <mpc_div@@Base+0xca4>
    aafc:	ldr	w8, [sp, #212]
    ab00:	cbnz	w8, ab14 <mpc_div@@Base+0xc74>
    ab04:	ldr	w8, [sp, #232]
    ab08:	cbz	w8, ab44 <mpc_div@@Base+0xca4>
    ab0c:	ldr	w8, [sp, #224]
    ab10:	cbnz	w8, ab44 <mpc_div@@Base+0xca4>
    ab14:	ldur	w8, [x29, #-72]
    ab18:	mov	w9, wzr
    ab1c:	mov	w10, #0xffffffff            	// #-1
    ab20:	mov	w11, #0x1                   	// #1
    ab24:	cmp	w8, #0x0
    ab28:	csel	w8, w11, w10, lt  // lt = tstop
    ab2c:	stur	w8, [x29, #-236]
    ab30:	ldur	x12, [x29, #-16]
    ab34:	add	x0, x12, #0x20
    ab38:	ldur	w8, [x29, #-236]
    ab3c:	subs	w1, w9, w8
    ab40:	bl	4dd0 <mpfr_set_zero@plt>
    ab44:	sub	x0, x29, #0x70
    ab48:	bl	4af0 <mpc_clear@plt>
    ab4c:	sub	x0, x29, #0xd0
    ab50:	bl	4e30 <mpfr_clear@plt>
    ab54:	ldr	w8, [sp, #196]
    ab58:	cbz	w8, ab60 <mpc_div@@Base+0xcc0>
    ab5c:	bl	4a60 <mpfr_set_underflow@plt>
    ab60:	ldr	w8, [sp, #192]
    ab64:	cbz	w8, ab6c <mpc_div@@Base+0xccc>
    ab68:	bl	5580 <mpfr_set_overflow@plt>
    ab6c:	ldur	w8, [x29, #-232]
    ab70:	cmp	w8, #0x0
    ab74:	cset	w8, ge  // ge = tcont
    ab78:	tbnz	w8, #0, ab88 <mpc_div@@Base+0xce8>
    ab7c:	mov	w8, #0x2                   	// #2
    ab80:	str	w8, [sp, #12]
    ab84:	b	aba0 <mpc_div@@Base+0xd00>
    ab88:	ldur	w8, [x29, #-232]
    ab8c:	mov	w9, wzr
    ab90:	mov	w10, #0x1                   	// #1
    ab94:	cmp	w8, #0x0
    ab98:	csel	w8, w9, w10, eq  // eq = none
    ab9c:	str	w8, [sp, #12]
    aba0:	ldr	w8, [sp, #12]
    aba4:	ldur	w9, [x29, #-236]
    aba8:	cmp	w9, #0x0
    abac:	cset	w9, ge  // ge = tcont
    abb0:	str	w8, [sp, #8]
    abb4:	tbnz	w9, #0, abc4 <mpc_div@@Base+0xd24>
    abb8:	mov	w8, #0x2                   	// #2
    abbc:	str	w8, [sp, #4]
    abc0:	b	abdc <mpc_div@@Base+0xd3c>
    abc4:	ldur	w8, [x29, #-236]
    abc8:	mov	w9, wzr
    abcc:	mov	w10, #0x1                   	// #1
    abd0:	cmp	w8, #0x0
    abd4:	csel	w8, w9, w10, eq  // eq = none
    abd8:	str	w8, [sp, #4]
    abdc:	ldr	w8, [sp, #4]
    abe0:	ldr	w9, [sp, #8]
    abe4:	orr	w8, w9, w8, lsl #2
    abe8:	stur	w8, [x29, #-4]
    abec:	ldur	w0, [x29, #-4]
    abf0:	add	sp, sp, #0x1e0
    abf4:	ldr	x28, [sp, #16]
    abf8:	ldp	x29, x30, [sp], #32
    abfc:	ret
    ac00:	sub	sp, sp, #0x60
    ac04:	stp	x29, x30, [sp, #80]
    ac08:	add	x29, sp, #0x50
    ac0c:	mov	w8, wzr
    ac10:	mov	w9, #0xffffffff            	// #-1
    ac14:	mov	w10, #0x1                   	// #1
    ac18:	mov	x11, #0x1                   	// #1
    ac1c:	add	x12, sp, #0x10
    ac20:	stur	x0, [x29, #-8]
    ac24:	stur	x1, [x29, #-16]
    ac28:	stur	x2, [x29, #-24]
    ac2c:	stur	w3, [x29, #-28]
    ac30:	ldur	x13, [x29, #-24]
    ac34:	ldr	w14, [x13, #8]
    ac38:	cmp	w14, #0x0
    ac3c:	csel	w9, w9, w10, lt  // lt = tstop
    ac40:	stur	w9, [x29, #-32]
    ac44:	mov	x0, x12
    ac48:	mov	x1, x11
    ac4c:	str	w8, [sp, #12]
    ac50:	str	x12, [sp]
    ac54:	bl	5530 <mpfr_init2@plt>
    ac58:	ldur	w1, [x29, #-32]
    ac5c:	ldr	x0, [sp]
    ac60:	bl	5220 <mpfr_set_inf@plt>
    ac64:	ldur	x0, [x29, #-8]
    ac68:	ldur	x2, [x29, #-16]
    ac6c:	ldur	w8, [x29, #-28]
    ac70:	and	w3, w8, #0xf
    ac74:	ldr	x1, [sp]
    ac78:	bl	4c50 <mpfr_mul@plt>
    ac7c:	ldur	x11, [x29, #-8]
    ac80:	add	x11, x11, #0x20
    ac84:	ldur	x12, [x29, #-16]
    ac88:	add	x2, x12, #0x20
    ac8c:	ldur	w8, [x29, #-28]
    ac90:	asr	w3, w8, #4
    ac94:	mov	x0, x11
    ac98:	ldr	x1, [sp]
    ac9c:	bl	4c50 <mpfr_mul@plt>
    aca0:	ldr	x11, [sp]
    aca4:	mov	x0, x11
    aca8:	bl	4e30 <mpfr_clear@plt>
    acac:	ldr	w0, [sp, #12]
    acb0:	ldp	x29, x30, [sp, #80]
    acb4:	add	sp, sp, #0x60
    acb8:	ret
    acbc:	sub	sp, sp, #0xb0
    acc0:	stp	x29, x30, [sp, #160]
    acc4:	add	x29, sp, #0xa0
    acc8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    accc:	stur	x0, [x29, #-8]
    acd0:	stur	x1, [x29, #-16]
    acd4:	stur	x2, [x29, #-24]
    acd8:	ldur	x9, [x29, #-16]
    acdc:	ldr	x9, [x9, #16]
    ace0:	cmp	x9, x8
    ace4:	b.ne	ad08 <mpc_div@@Base+0xe68>  // b.any
    ace8:	ldur	x8, [x29, #-16]
    acec:	ldr	w9, [x8, #8]
    acf0:	mov	w10, #0x1                   	// #1
    acf4:	mov	w11, #0xffffffff            	// #-1
    acf8:	cmp	w9, #0x0
    acfc:	csel	w9, w11, w10, lt  // lt = tstop
    ad00:	stur	w9, [x29, #-76]
    ad04:	b	ad10 <mpc_div@@Base+0xe70>
    ad08:	mov	w8, wzr
    ad0c:	stur	w8, [x29, #-76]
    ad10:	ldur	w8, [x29, #-76]
    ad14:	stur	w8, [x29, #-28]
    ad18:	ldur	x9, [x29, #-16]
    ad1c:	ldr	x9, [x9, #48]
    ad20:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    ad24:	cmp	x9, x10
    ad28:	b.ne	ad4c <mpc_div@@Base+0xeac>  // b.any
    ad2c:	ldur	x8, [x29, #-16]
    ad30:	ldr	w9, [x8, #40]
    ad34:	mov	w10, #0x1                   	// #1
    ad38:	mov	w11, #0xffffffff            	// #-1
    ad3c:	cmp	w9, #0x0
    ad40:	csel	w9, w11, w10, lt  // lt = tstop
    ad44:	str	w9, [sp, #80]
    ad48:	b	ad54 <mpc_div@@Base+0xeb4>
    ad4c:	mov	w8, wzr
    ad50:	str	w8, [sp, #80]
    ad54:	ldr	w8, [sp, #80]
    ad58:	stur	w8, [x29, #-32]
    ad5c:	ldur	w8, [x29, #-28]
    ad60:	cbz	w8, ad6c <mpc_div@@Base+0xecc>
    ad64:	ldur	w8, [x29, #-32]
    ad68:	cbnz	w8, aed0 <mpc_div@@Base+0x1030>
    ad6c:	ldur	w8, [x29, #-28]
    ad70:	ldur	x9, [x29, #-24]
    ad74:	ldr	x9, [x9, #16]
    ad78:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    ad7c:	cmp	x9, x10
    ad80:	str	w8, [sp, #76]
    ad84:	b.ne	ad94 <mpc_div@@Base+0xef4>  // b.any
    ad88:	mov	w8, wzr
    ad8c:	str	w8, [sp, #72]
    ad90:	b	adb0 <mpc_div@@Base+0xf10>
    ad94:	ldur	x8, [x29, #-24]
    ad98:	ldr	w9, [x8, #8]
    ad9c:	mov	w10, #0x1                   	// #1
    ada0:	mov	w11, #0xffffffff            	// #-1
    ada4:	cmp	w9, #0x0
    ada8:	csel	w9, w11, w10, lt  // lt = tstop
    adac:	str	w9, [sp, #72]
    adb0:	ldr	w8, [sp, #72]
    adb4:	ldr	w9, [sp, #76]
    adb8:	mul	w8, w9, w8
    adbc:	ldur	w10, [x29, #-32]
    adc0:	ldur	x11, [x29, #-24]
    adc4:	ldr	x11, [x11, #48]
    adc8:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    adcc:	cmp	x11, x12
    add0:	str	w8, [sp, #68]
    add4:	str	w10, [sp, #64]
    add8:	b.ne	ade8 <mpc_div@@Base+0xf48>  // b.any
    addc:	mov	w8, wzr
    ade0:	str	w8, [sp, #60]
    ade4:	b	ae04 <mpc_div@@Base+0xf64>
    ade8:	ldur	x8, [x29, #-24]
    adec:	ldr	w9, [x8, #40]
    adf0:	mov	w10, #0x1                   	// #1
    adf4:	mov	w11, #0xffffffff            	// #-1
    adf8:	cmp	w9, #0x0
    adfc:	csel	w9, w11, w10, lt  // lt = tstop
    ae00:	str	w9, [sp, #60]
    ae04:	ldr	w8, [sp, #60]
    ae08:	ldr	w9, [sp, #64]
    ae0c:	mul	w8, w9, w8
    ae10:	ldr	w10, [sp, #68]
    ae14:	add	w8, w10, w8
    ae18:	stur	w8, [x29, #-36]
    ae1c:	ldur	w8, [x29, #-32]
    ae20:	ldur	x11, [x29, #-24]
    ae24:	ldr	x11, [x11, #16]
    ae28:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    ae2c:	cmp	x11, x12
    ae30:	str	w8, [sp, #56]
    ae34:	b.ne	ae44 <mpc_div@@Base+0xfa4>  // b.any
    ae38:	mov	w8, wzr
    ae3c:	str	w8, [sp, #52]
    ae40:	b	ae60 <mpc_div@@Base+0xfc0>
    ae44:	ldur	x8, [x29, #-24]
    ae48:	ldr	w9, [x8, #8]
    ae4c:	mov	w10, #0x1                   	// #1
    ae50:	mov	w11, #0xffffffff            	// #-1
    ae54:	cmp	w9, #0x0
    ae58:	csel	w9, w11, w10, lt  // lt = tstop
    ae5c:	str	w9, [sp, #52]
    ae60:	ldr	w8, [sp, #52]
    ae64:	ldr	w9, [sp, #56]
    ae68:	mul	w8, w9, w8
    ae6c:	ldur	w10, [x29, #-28]
    ae70:	ldur	x11, [x29, #-24]
    ae74:	ldr	x11, [x11, #48]
    ae78:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    ae7c:	cmp	x11, x12
    ae80:	str	w8, [sp, #48]
    ae84:	str	w10, [sp, #44]
    ae88:	b.ne	ae98 <mpc_div@@Base+0xff8>  // b.any
    ae8c:	mov	w8, wzr
    ae90:	str	w8, [sp, #40]
    ae94:	b	aeb4 <mpc_div@@Base+0x1014>
    ae98:	ldur	x8, [x29, #-24]
    ae9c:	ldr	w9, [x8, #40]
    aea0:	mov	w10, #0x1                   	// #1
    aea4:	mov	w11, #0xffffffff            	// #-1
    aea8:	cmp	w9, #0x0
    aeac:	csel	w9, w11, w10, lt  // lt = tstop
    aeb0:	str	w9, [sp, #40]
    aeb4:	ldr	w8, [sp, #40]
    aeb8:	ldr	w9, [sp, #44]
    aebc:	mul	w8, w9, w8
    aec0:	ldr	w10, [sp, #48]
    aec4:	subs	w8, w10, w8
    aec8:	stur	w8, [x29, #-40]
    aecc:	b	b1e0 <mpc_div@@Base+0x1340>
    aed0:	sub	x0, x29, #0x48
    aed4:	mov	x1, #0x2                   	// #2
    aed8:	bl	5530 <mpfr_init2@plt>
    aedc:	ldur	w8, [x29, #-28]
    aee0:	cmp	w8, #0x1
    aee4:	b.ne	b064 <mpc_div@@Base+0x11c4>  // b.any
    aee8:	ldur	w8, [x29, #-32]
    aeec:	cmp	w8, #0x1
    aef0:	b.ne	afa8 <mpc_div@@Base+0x1108>  // b.any
    aef4:	ldur	x1, [x29, #-24]
    aef8:	ldur	x8, [x29, #-24]
    aefc:	add	x2, x8, #0x20
    af00:	sub	x0, x29, #0x48
    af04:	mov	w9, wzr
    af08:	mov	w3, w9
    af0c:	bl	4f50 <mpfr_add@plt>
    af10:	ldur	x8, [x29, #-56]
    af14:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    af18:	cmp	x8, x10
    af1c:	b.ne	af2c <mpc_div@@Base+0x108c>  // b.any
    af20:	mov	w8, wzr
    af24:	str	w8, [sp, #36]
    af28:	b	af44 <mpc_div@@Base+0x10a4>
    af2c:	ldur	w8, [x29, #-64]
    af30:	mov	w9, #0x1                   	// #1
    af34:	mov	w10, #0xffffffff            	// #-1
    af38:	cmp	w8, #0x0
    af3c:	csel	w8, w10, w9, lt  // lt = tstop
    af40:	str	w8, [sp, #36]
    af44:	ldr	w8, [sp, #36]
    af48:	stur	w8, [x29, #-36]
    af4c:	ldur	x1, [x29, #-24]
    af50:	ldur	x9, [x29, #-24]
    af54:	add	x2, x9, #0x20
    af58:	sub	x0, x29, #0x48
    af5c:	mov	w8, wzr
    af60:	mov	w3, w8
    af64:	bl	4b40 <mpfr_sub@plt>
    af68:	ldur	x9, [x29, #-56]
    af6c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    af70:	cmp	x9, x10
    af74:	b.ne	af84 <mpc_div@@Base+0x10e4>  // b.any
    af78:	mov	w8, wzr
    af7c:	str	w8, [sp, #32]
    af80:	b	af9c <mpc_div@@Base+0x10fc>
    af84:	ldur	w8, [x29, #-64]
    af88:	mov	w9, #0x1                   	// #1
    af8c:	mov	w10, #0xffffffff            	// #-1
    af90:	cmp	w8, #0x0
    af94:	csel	w8, w10, w9, lt  // lt = tstop
    af98:	str	w8, [sp, #32]
    af9c:	ldr	w8, [sp, #32]
    afa0:	stur	w8, [x29, #-40]
    afa4:	b	b060 <mpc_div@@Base+0x11c0>
    afa8:	ldur	x1, [x29, #-24]
    afac:	ldur	x8, [x29, #-24]
    afb0:	add	x2, x8, #0x20
    afb4:	sub	x0, x29, #0x48
    afb8:	mov	w9, wzr
    afbc:	mov	w3, w9
    afc0:	bl	4b40 <mpfr_sub@plt>
    afc4:	ldur	x8, [x29, #-56]
    afc8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    afcc:	cmp	x8, x10
    afd0:	b.ne	afe0 <mpc_div@@Base+0x1140>  // b.any
    afd4:	mov	w8, wzr
    afd8:	str	w8, [sp, #28]
    afdc:	b	aff8 <mpc_div@@Base+0x1158>
    afe0:	ldur	w8, [x29, #-64]
    afe4:	mov	w9, #0x1                   	// #1
    afe8:	mov	w10, #0xffffffff            	// #-1
    afec:	cmp	w8, #0x0
    aff0:	csel	w8, w10, w9, lt  // lt = tstop
    aff4:	str	w8, [sp, #28]
    aff8:	ldr	w8, [sp, #28]
    affc:	stur	w8, [x29, #-36]
    b000:	ldur	x1, [x29, #-24]
    b004:	ldur	x9, [x29, #-24]
    b008:	add	x2, x9, #0x20
    b00c:	sub	x0, x29, #0x48
    b010:	mov	w8, wzr
    b014:	mov	w3, w8
    b018:	bl	4f50 <mpfr_add@plt>
    b01c:	ldur	x9, [x29, #-56]
    b020:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    b024:	cmp	x9, x10
    b028:	b.ne	b038 <mpc_div@@Base+0x1198>  // b.any
    b02c:	mov	w8, wzr
    b030:	str	w8, [sp, #24]
    b034:	b	b050 <mpc_div@@Base+0x11b0>
    b038:	ldur	w8, [x29, #-64]
    b03c:	mov	w9, #0x1                   	// #1
    b040:	mov	w10, #0xffffffff            	// #-1
    b044:	cmp	w8, #0x0
    b048:	csel	w8, w10, w9, lt  // lt = tstop
    b04c:	str	w8, [sp, #24]
    b050:	ldr	w8, [sp, #24]
    b054:	mov	w9, wzr
    b058:	subs	w8, w9, w8
    b05c:	stur	w8, [x29, #-40]
    b060:	b	b1d8 <mpc_div@@Base+0x1338>
    b064:	ldur	w8, [x29, #-32]
    b068:	cmp	w8, #0x1
    b06c:	b.ne	b124 <mpc_div@@Base+0x1284>  // b.any
    b070:	ldur	x8, [x29, #-24]
    b074:	add	x1, x8, #0x20
    b078:	ldur	x2, [x29, #-24]
    b07c:	sub	x0, x29, #0x48
    b080:	mov	w9, wzr
    b084:	mov	w3, w9
    b088:	bl	4b40 <mpfr_sub@plt>
    b08c:	ldur	x8, [x29, #-56]
    b090:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    b094:	cmp	x8, x10
    b098:	b.ne	b0a8 <mpc_div@@Base+0x1208>  // b.any
    b09c:	mov	w8, wzr
    b0a0:	str	w8, [sp, #20]
    b0a4:	b	b0c0 <mpc_div@@Base+0x1220>
    b0a8:	ldur	w8, [x29, #-64]
    b0ac:	mov	w9, #0x1                   	// #1
    b0b0:	mov	w10, #0xffffffff            	// #-1
    b0b4:	cmp	w8, #0x0
    b0b8:	csel	w8, w10, w9, lt  // lt = tstop
    b0bc:	str	w8, [sp, #20]
    b0c0:	ldr	w8, [sp, #20]
    b0c4:	stur	w8, [x29, #-36]
    b0c8:	ldur	x1, [x29, #-24]
    b0cc:	ldur	x9, [x29, #-24]
    b0d0:	add	x2, x9, #0x20
    b0d4:	sub	x0, x29, #0x48
    b0d8:	mov	w8, wzr
    b0dc:	mov	w3, w8
    b0e0:	bl	4f50 <mpfr_add@plt>
    b0e4:	ldur	x9, [x29, #-56]
    b0e8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    b0ec:	cmp	x9, x10
    b0f0:	b.ne	b100 <mpc_div@@Base+0x1260>  // b.any
    b0f4:	mov	w8, wzr
    b0f8:	str	w8, [sp, #16]
    b0fc:	b	b118 <mpc_div@@Base+0x1278>
    b100:	ldur	w8, [x29, #-64]
    b104:	mov	w9, #0x1                   	// #1
    b108:	mov	w10, #0xffffffff            	// #-1
    b10c:	cmp	w8, #0x0
    b110:	csel	w8, w10, w9, lt  // lt = tstop
    b114:	str	w8, [sp, #16]
    b118:	ldr	w8, [sp, #16]
    b11c:	stur	w8, [x29, #-40]
    b120:	b	b1d8 <mpc_div@@Base+0x1338>
    b124:	ldur	x1, [x29, #-24]
    b128:	ldur	x8, [x29, #-24]
    b12c:	add	x2, x8, #0x20
    b130:	sub	x0, x29, #0x48
    b134:	mov	w9, wzr
    b138:	mov	w3, w9
    b13c:	bl	4f50 <mpfr_add@plt>
    b140:	ldur	x8, [x29, #-56]
    b144:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    b148:	cmp	x8, x10
    b14c:	b.ne	b15c <mpc_div@@Base+0x12bc>  // b.any
    b150:	mov	w8, wzr
    b154:	str	w8, [sp, #12]
    b158:	b	b174 <mpc_div@@Base+0x12d4>
    b15c:	ldur	w8, [x29, #-64]
    b160:	mov	w9, #0x1                   	// #1
    b164:	mov	w10, #0xffffffff            	// #-1
    b168:	cmp	w8, #0x0
    b16c:	csel	w8, w10, w9, lt  // lt = tstop
    b170:	str	w8, [sp, #12]
    b174:	ldr	w8, [sp, #12]
    b178:	mov	w9, wzr
    b17c:	subs	w8, w9, w8
    b180:	stur	w8, [x29, #-36]
    b184:	ldur	x10, [x29, #-24]
    b188:	add	x1, x10, #0x20
    b18c:	ldur	x2, [x29, #-24]
    b190:	sub	x0, x29, #0x48
    b194:	mov	w3, w9
    b198:	bl	4b40 <mpfr_sub@plt>
    b19c:	ldur	x10, [x29, #-56]
    b1a0:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    b1a4:	cmp	x10, x11
    b1a8:	b.ne	b1b8 <mpc_div@@Base+0x1318>  // b.any
    b1ac:	mov	w8, wzr
    b1b0:	str	w8, [sp, #8]
    b1b4:	b	b1d0 <mpc_div@@Base+0x1330>
    b1b8:	ldur	w8, [x29, #-64]
    b1bc:	mov	w9, #0x1                   	// #1
    b1c0:	mov	w10, #0xffffffff            	// #-1
    b1c4:	cmp	w8, #0x0
    b1c8:	csel	w8, w10, w9, lt  // lt = tstop
    b1cc:	str	w8, [sp, #8]
    b1d0:	ldr	w8, [sp, #8]
    b1d4:	stur	w8, [x29, #-40]
    b1d8:	sub	x0, x29, #0x48
    b1dc:	bl	4e30 <mpfr_clear@plt>
    b1e0:	ldur	w8, [x29, #-36]
    b1e4:	cbnz	w8, b1f4 <mpc_div@@Base+0x1354>
    b1e8:	ldur	x0, [x29, #-8]
    b1ec:	bl	4b20 <mpfr_set_nan@plt>
    b1f0:	b	b200 <mpc_div@@Base+0x1360>
    b1f4:	ldur	x0, [x29, #-8]
    b1f8:	ldur	w1, [x29, #-36]
    b1fc:	bl	5220 <mpfr_set_inf@plt>
    b200:	ldur	w8, [x29, #-40]
    b204:	cbnz	w8, b218 <mpc_div@@Base+0x1378>
    b208:	ldur	x8, [x29, #-8]
    b20c:	add	x0, x8, #0x20
    b210:	bl	4b20 <mpfr_set_nan@plt>
    b214:	b	b228 <mpc_div@@Base+0x1388>
    b218:	ldur	x8, [x29, #-8]
    b21c:	add	x0, x8, #0x20
    b220:	ldur	w1, [x29, #-40]
    b224:	bl	5220 <mpfr_set_inf@plt>
    b228:	mov	w8, wzr
    b22c:	mov	w0, w8
    b230:	ldp	x29, x30, [sp, #160]
    b234:	add	sp, sp, #0xb0
    b238:	ret
    b23c:	sub	sp, sp, #0x1c0
    b240:	stp	x29, x30, [sp, #416]
    b244:	str	x28, [sp, #432]
    b248:	add	x29, sp, #0x1a0
    b24c:	sub	x8, x29, #0x18
    b250:	mov	x9, #0x2                   	// #2
    b254:	mov	w10, #0x1                   	// #1
    b258:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    b25c:	sub	x12, x29, #0x38
    b260:	sub	x13, x29, #0x58
    b264:	sub	x14, x29, #0x78
    b268:	sub	x15, x29, #0x98
    b26c:	sub	x16, x29, #0xb8
    b270:	add	x17, sp, #0xc8
    b274:	add	x18, sp, #0xa8
    b278:	str	x0, [x8, #16]
    b27c:	str	x1, [x8, #8]
    b280:	str	x2, [x8]
    b284:	mov	x0, x12
    b288:	mov	x1, x9
    b28c:	str	x8, [sp, #112]
    b290:	str	x9, [sp, #104]
    b294:	str	w10, [sp, #100]
    b298:	str	x11, [sp, #88]
    b29c:	str	x13, [sp, #80]
    b2a0:	str	x14, [sp, #72]
    b2a4:	str	x15, [sp, #64]
    b2a8:	str	x16, [sp, #56]
    b2ac:	str	x17, [sp, #48]
    b2b0:	str	x18, [sp, #40]
    b2b4:	bl	5530 <mpfr_init2@plt>
    b2b8:	ldr	x0, [sp, #80]
    b2bc:	ldr	x1, [sp, #104]
    b2c0:	bl	5530 <mpfr_init2@plt>
    b2c4:	ldr	x0, [sp, #56]
    b2c8:	ldr	x1, [sp, #104]
    b2cc:	bl	5530 <mpfr_init2@plt>
    b2d0:	ldr	x0, [sp, #48]
    b2d4:	ldr	x1, [sp, #104]
    b2d8:	bl	5530 <mpfr_init2@plt>
    b2dc:	ldr	x0, [sp, #40]
    b2e0:	ldr	x1, [sp, #104]
    b2e4:	bl	5530 <mpfr_init2@plt>
    b2e8:	ldr	x8, [sp, #40]
    b2ec:	str	x8, [sp, #160]
    b2f0:	ldr	x9, [sp, #160]
    b2f4:	ldr	w10, [sp, #100]
    b2f8:	str	w10, [x9, #8]
    b2fc:	ldr	x9, [sp, #160]
    b300:	ldr	x11, [sp, #88]
    b304:	str	x11, [x9, #16]
    b308:	str	wzr, [sp, #156]
    b30c:	ldr	x9, [sp, #112]
    b310:	ldr	x12, [x9, #8]
    b314:	ldr	x1, [x12]
    b318:	ldr	x0, [sp, #72]
    b31c:	bl	5530 <mpfr_init2@plt>
    b320:	ldr	x8, [sp, #112]
    b324:	ldr	x9, [x8, #8]
    b328:	ldr	x1, [x9, #32]
    b32c:	ldr	x0, [sp, #64]
    b330:	bl	5530 <mpfr_init2@plt>
    b334:	ldr	x8, [sp, #112]
    b338:	ldr	x9, [x8]
    b33c:	ldr	x9, [x9, #16]
    b340:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    b344:	mov	w11, wzr
    b348:	mov	w12, #0x1                   	// #1
    b34c:	cmp	x9, x10
    b350:	csel	w12, w12, w11, eq  // eq = none
    b354:	mov	w0, w12
    b358:	sxtw	x1, w0
    b35c:	sub	x0, x29, #0x38
    b360:	mov	x9, xzr
    b364:	mov	x2, x9
    b368:	mov	w3, w11
    b36c:	bl	5230 <mpfr_set_ui_2exp@plt>
    b370:	ldr	x8, [sp, #112]
    b374:	ldr	x9, [x8]
    b378:	ldr	x9, [x9, #16]
    b37c:	mov	x10, #0x2                   	// #2
    b380:	movk	x10, #0x8000, lsl #48
    b384:	cmp	x9, x10
    b388:	b.ne	b3ac <mpc_div@@Base+0x150c>  // b.any
    b38c:	sub	x8, x29, #0x38
    b390:	mov	x0, x8
    b394:	mov	x1, x8
    b398:	mov	w9, wzr
    b39c:	mov	w2, w9
    b3a0:	mov	w3, #0x1                   	// #1
    b3a4:	bl	52d0 <mpfr_set4@plt>
    b3a8:	b	b3d0 <mpc_div@@Base+0x1530>
    b3ac:	ldr	x8, [sp, #112]
    b3b0:	ldr	x9, [x8]
    b3b4:	ldr	w3, [x9, #8]
    b3b8:	sub	x9, x29, #0x38
    b3bc:	mov	x0, x9
    b3c0:	mov	x1, x9
    b3c4:	mov	w10, wzr
    b3c8:	mov	w2, w10
    b3cc:	bl	52d0 <mpfr_set4@plt>
    b3d0:	ldr	x8, [sp, #112]
    b3d4:	ldr	x9, [x8]
    b3d8:	ldr	x9, [x9, #48]
    b3dc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    b3e0:	mov	w11, wzr
    b3e4:	mov	w12, #0x1                   	// #1
    b3e8:	cmp	x9, x10
    b3ec:	csel	w12, w12, w11, eq  // eq = none
    b3f0:	mov	w0, w12
    b3f4:	sxtw	x1, w0
    b3f8:	sub	x0, x29, #0x58
    b3fc:	mov	x9, xzr
    b400:	mov	x2, x9
    b404:	mov	w3, w11
    b408:	bl	5230 <mpfr_set_ui_2exp@plt>
    b40c:	ldr	x8, [sp, #112]
    b410:	ldr	x9, [x8]
    b414:	ldr	x9, [x9, #48]
    b418:	mov	x10, #0x2                   	// #2
    b41c:	movk	x10, #0x8000, lsl #48
    b420:	cmp	x9, x10
    b424:	b.ne	b448 <mpc_div@@Base+0x15a8>  // b.any
    b428:	sub	x8, x29, #0x58
    b42c:	mov	x0, x8
    b430:	mov	x1, x8
    b434:	mov	w9, wzr
    b438:	mov	w2, w9
    b43c:	mov	w3, #0x1                   	// #1
    b440:	bl	52d0 <mpfr_set4@plt>
    b444:	b	b46c <mpc_div@@Base+0x15cc>
    b448:	ldr	x8, [sp, #112]
    b44c:	ldr	x9, [x8]
    b450:	ldr	w3, [x9, #40]
    b454:	sub	x9, x29, #0x58
    b458:	mov	x0, x9
    b45c:	mov	x1, x9
    b460:	mov	w10, wzr
    b464:	mov	w2, w10
    b468:	bl	52d0 <mpfr_set4@plt>
    b46c:	ldr	x8, [sp, #112]
    b470:	ldr	x1, [x8, #8]
    b474:	sub	x9, x29, #0x78
    b478:	mov	x0, x9
    b47c:	sub	x10, x29, #0x38
    b480:	mov	x2, x10
    b484:	mov	w11, wzr
    b488:	mov	w3, w11
    b48c:	str	x9, [sp, #32]
    b490:	str	x10, [sp, #24]
    b494:	str	w11, [sp, #20]
    b498:	bl	4c50 <mpfr_mul@plt>
    b49c:	ldr	x8, [sp, #112]
    b4a0:	ldr	x9, [x8, #8]
    b4a4:	add	x1, x9, #0x20
    b4a8:	sub	x9, x29, #0x98
    b4ac:	mov	x0, x9
    b4b0:	sub	x10, x29, #0x58
    b4b4:	mov	x2, x10
    b4b8:	ldr	w3, [sp, #20]
    b4bc:	str	x9, [sp, #8]
    b4c0:	str	x10, [sp]
    b4c4:	bl	4c50 <mpfr_mul@plt>
    b4c8:	sub	x8, x29, #0xb8
    b4cc:	mov	x0, x8
    b4d0:	ldr	x1, [sp, #32]
    b4d4:	ldr	x2, [sp, #8]
    b4d8:	ldr	w3, [sp, #20]
    b4dc:	bl	4f50 <mpfr_add@plt>
    b4e0:	ldr	x8, [sp, #112]
    b4e4:	ldr	x9, [x8, #8]
    b4e8:	add	x1, x9, #0x20
    b4ec:	ldr	x9, [sp, #8]
    b4f0:	mov	x0, x9
    b4f4:	ldr	x2, [sp, #24]
    b4f8:	ldr	w3, [sp, #20]
    b4fc:	bl	4c50 <mpfr_mul@plt>
    b500:	ldr	x8, [sp, #112]
    b504:	ldr	x1, [x8, #8]
    b508:	ldr	x9, [sp, #32]
    b50c:	mov	x0, x9
    b510:	ldr	x2, [sp]
    b514:	ldr	w3, [sp, #20]
    b518:	bl	4c50 <mpfr_mul@plt>
    b51c:	add	x8, sp, #0xc8
    b520:	mov	x0, x8
    b524:	ldr	x1, [sp, #8]
    b528:	ldr	x2, [sp, #32]
    b52c:	ldr	w3, [sp, #20]
    b530:	bl	4b40 <mpfr_sub@plt>
    b534:	ldur	x8, [x29, #-168]
    b538:	mov	x9, #0x2                   	// #2
    b53c:	movk	x9, #0x8000, lsl #48
    b540:	cmp	x8, x9
    b544:	b.ne	b568 <mpc_div@@Base+0x16c8>  // b.any
    b548:	ldr	x8, [sp, #112]
    b54c:	ldr	x0, [x8, #16]
    b550:	add	x1, sp, #0xa8
    b554:	mov	w9, wzr
    b558:	mov	w2, w9
    b55c:	mov	w3, #0x1                   	// #1
    b560:	bl	52d0 <mpfr_set4@plt>
    b564:	b	b584 <mpc_div@@Base+0x16e4>
    b568:	ldr	x8, [sp, #112]
    b56c:	ldr	x0, [x8, #16]
    b570:	ldur	w3, [x29, #-176]
    b574:	add	x1, sp, #0xa8
    b578:	mov	w9, wzr
    b57c:	mov	w2, w9
    b580:	bl	52d0 <mpfr_set4@plt>
    b584:	ldr	x8, [sp, #216]
    b588:	mov	x9, #0x2                   	// #2
    b58c:	movk	x9, #0x8000, lsl #48
    b590:	cmp	x8, x9
    b594:	b.ne	b5bc <mpc_div@@Base+0x171c>  // b.any
    b598:	ldr	x8, [sp, #112]
    b59c:	ldr	x9, [x8, #16]
    b5a0:	add	x0, x9, #0x20
    b5a4:	add	x1, sp, #0xa8
    b5a8:	mov	w10, wzr
    b5ac:	mov	w2, w10
    b5b0:	mov	w3, #0x1                   	// #1
    b5b4:	bl	52d0 <mpfr_set4@plt>
    b5b8:	b	b5dc <mpc_div@@Base+0x173c>
    b5bc:	ldr	x8, [sp, #112]
    b5c0:	ldr	x9, [x8, #16]
    b5c4:	add	x0, x9, #0x20
    b5c8:	ldr	w3, [sp, #208]
    b5cc:	add	x1, sp, #0xa8
    b5d0:	mov	w10, wzr
    b5d4:	mov	w2, w10
    b5d8:	bl	52d0 <mpfr_set4@plt>
    b5dc:	sub	x0, x29, #0x38
    b5e0:	bl	4e30 <mpfr_clear@plt>
    b5e4:	sub	x0, x29, #0x58
    b5e8:	bl	4e30 <mpfr_clear@plt>
    b5ec:	sub	x0, x29, #0xb8
    b5f0:	bl	4e30 <mpfr_clear@plt>
    b5f4:	add	x0, sp, #0xc8
    b5f8:	bl	4e30 <mpfr_clear@plt>
    b5fc:	add	x0, sp, #0xa8
    b600:	bl	4e30 <mpfr_clear@plt>
    b604:	sub	x0, x29, #0x78
    b608:	bl	4e30 <mpfr_clear@plt>
    b60c:	sub	x0, x29, #0x98
    b610:	bl	4e30 <mpfr_clear@plt>
    b614:	mov	w8, wzr
    b618:	mov	w0, w8
    b61c:	ldr	x28, [sp, #432]
    b620:	ldp	x29, x30, [sp, #416]
    b624:	add	sp, sp, #0x1c0
    b628:	ret
    b62c:	sub	sp, sp, #0x90
    b630:	stp	x29, x30, [sp, #128]
    b634:	add	x29, sp, #0x80
    b638:	mov	w8, #0xffffffff            	// #-1
    b63c:	mov	w9, #0x1                   	// #1
    b640:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    b644:	stur	x0, [x29, #-8]
    b648:	stur	x1, [x29, #-16]
    b64c:	stur	x2, [x29, #-24]
    b650:	stur	w3, [x29, #-28]
    b654:	ldur	x11, [x29, #-16]
    b658:	ldr	w12, [x11, #8]
    b65c:	cmp	w12, #0x0
    b660:	csel	w12, w8, w9, lt  // lt = tstop
    b664:	stur	w12, [x29, #-40]
    b668:	ldur	x11, [x29, #-16]
    b66c:	ldr	w12, [x11, #40]
    b670:	cmp	w12, #0x0
    b674:	csel	w12, w8, w9, lt  // lt = tstop
    b678:	stur	w12, [x29, #-44]
    b67c:	ldur	x11, [x29, #-24]
    b680:	ldr	w12, [x11, #8]
    b684:	cmp	w12, #0x0
    b688:	csel	w12, w8, w9, lt  // lt = tstop
    b68c:	stur	w12, [x29, #-48]
    b690:	ldur	x11, [x29, #-24]
    b694:	ldr	w12, [x11, #40]
    b698:	cmp	w12, #0x0
    b69c:	csel	w8, w8, w9, lt  // lt = tstop
    b6a0:	stur	w8, [x29, #-52]
    b6a4:	ldur	x11, [x29, #-8]
    b6a8:	add	x0, x11, #0x20
    b6ac:	ldur	x11, [x29, #-16]
    b6b0:	add	x1, x11, #0x20
    b6b4:	ldur	x2, [x29, #-24]
    b6b8:	ldur	w8, [x29, #-28]
    b6bc:	asr	w3, w8, #4
    b6c0:	str	x10, [sp, #64]
    b6c4:	bl	5250 <mpfr_div@plt>
    b6c8:	stur	w0, [x29, #-36]
    b6cc:	ldur	x0, [x29, #-8]
    b6d0:	ldur	x1, [x29, #-16]
    b6d4:	ldur	x2, [x29, #-24]
    b6d8:	ldur	w8, [x29, #-28]
    b6dc:	and	w3, w8, #0xf
    b6e0:	bl	5250 <mpfr_div@plt>
    b6e4:	stur	w0, [x29, #-32]
    b6e8:	ldur	x10, [x29, #-8]
    b6ec:	ldr	x10, [x10, #16]
    b6f0:	ldr	x11, [sp, #64]
    b6f4:	cmp	x10, x11
    b6f8:	b.ne	b760 <mpc_div@@Base+0x18c0>  // b.any
    b6fc:	ldur	x0, [x29, #-8]
    b700:	ldur	x1, [x29, #-8]
    b704:	ldur	w8, [x29, #-40]
    b708:	ldur	w9, [x29, #-48]
    b70c:	mov	w10, #0x0                   	// #0
    b710:	cmp	w8, w9
    b714:	str	x0, [sp, #56]
    b718:	str	x1, [sp, #48]
    b71c:	str	w10, [sp, #44]
    b720:	b.eq	b738 <mpc_div@@Base+0x1898>  // b.none
    b724:	ldur	w8, [x29, #-44]
    b728:	ldur	w9, [x29, #-52]
    b72c:	cmp	w8, w9
    b730:	cset	w8, ne  // ne = any
    b734:	str	w8, [sp, #44]
    b738:	ldr	w8, [sp, #44]
    b73c:	mov	w9, #0x1                   	// #1
    b740:	mov	w10, #0xffffffff            	// #-1
    b744:	tst	w8, #0x1
    b748:	csel	w3, w10, w9, ne  // ne = any
    b74c:	ldr	x0, [sp, #56]
    b750:	ldr	x1, [sp, #48]
    b754:	mov	w8, wzr
    b758:	mov	w2, w8
    b75c:	bl	52d0 <mpfr_set4@plt>
    b760:	ldur	x8, [x29, #-8]
    b764:	ldr	x8, [x8, #48]
    b768:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    b76c:	cmp	x8, x9
    b770:	b.ne	b7e0 <mpc_div@@Base+0x1940>  // b.any
    b774:	ldur	x8, [x29, #-8]
    b778:	add	x0, x8, #0x20
    b77c:	ldur	x8, [x29, #-8]
    b780:	add	x1, x8, #0x20
    b784:	ldur	w9, [x29, #-44]
    b788:	ldur	w10, [x29, #-48]
    b78c:	mov	w11, #0x0                   	// #0
    b790:	cmp	w9, w10
    b794:	str	x0, [sp, #32]
    b798:	str	x1, [sp, #24]
    b79c:	str	w11, [sp, #20]
    b7a0:	b.eq	b7b8 <mpc_div@@Base+0x1918>  // b.none
    b7a4:	ldur	w8, [x29, #-40]
    b7a8:	ldur	w9, [x29, #-52]
    b7ac:	cmp	w8, w9
    b7b0:	cset	w8, eq  // eq = none
    b7b4:	str	w8, [sp, #20]
    b7b8:	ldr	w8, [sp, #20]
    b7bc:	mov	w9, #0x1                   	// #1
    b7c0:	mov	w10, #0xffffffff            	// #-1
    b7c4:	tst	w8, #0x1
    b7c8:	csel	w3, w10, w9, ne  // ne = any
    b7cc:	ldr	x0, [sp, #32]
    b7d0:	ldr	x1, [sp, #24]
    b7d4:	mov	w8, wzr
    b7d8:	mov	w2, w8
    b7dc:	bl	52d0 <mpfr_set4@plt>
    b7e0:	ldur	w8, [x29, #-32]
    b7e4:	cmp	w8, #0x0
    b7e8:	cset	w8, ge  // ge = tcont
    b7ec:	tbnz	w8, #0, b7fc <mpc_div@@Base+0x195c>
    b7f0:	mov	w8, #0x2                   	// #2
    b7f4:	str	w8, [sp, #16]
    b7f8:	b	b814 <mpc_div@@Base+0x1974>
    b7fc:	ldur	w8, [x29, #-32]
    b800:	mov	w9, wzr
    b804:	mov	w10, #0x1                   	// #1
    b808:	cmp	w8, #0x0
    b80c:	csel	w8, w9, w10, eq  // eq = none
    b810:	str	w8, [sp, #16]
    b814:	ldr	w8, [sp, #16]
    b818:	ldur	w9, [x29, #-36]
    b81c:	cmp	w9, #0x0
    b820:	cset	w9, ge  // ge = tcont
    b824:	str	w8, [sp, #12]
    b828:	tbnz	w9, #0, b838 <mpc_div@@Base+0x1998>
    b82c:	mov	w8, #0x2                   	// #2
    b830:	str	w8, [sp, #8]
    b834:	b	b850 <mpc_div@@Base+0x19b0>
    b838:	ldur	w8, [x29, #-36]
    b83c:	mov	w9, wzr
    b840:	mov	w10, #0x1                   	// #1
    b844:	cmp	w8, #0x0
    b848:	csel	w8, w9, w10, eq  // eq = none
    b84c:	str	w8, [sp, #8]
    b850:	ldr	w8, [sp, #8]
    b854:	ldr	w9, [sp, #12]
    b858:	orr	w0, w9, w8, lsl #2
    b85c:	ldp	x29, x30, [sp, #128]
    b860:	add	sp, sp, #0x90
    b864:	ret
    b868:	sub	sp, sp, #0x120
    b86c:	stp	x29, x30, [sp, #256]
    b870:	str	x28, [sp, #272]
    b874:	add	x29, sp, #0x100
    b878:	stur	x0, [x29, #-8]
    b87c:	stur	x1, [x29, #-16]
    b880:	stur	x2, [x29, #-24]
    b884:	stur	w3, [x29, #-28]
    b888:	ldur	x8, [x29, #-8]
    b88c:	ldur	x9, [x29, #-16]
    b890:	mov	w10, #0x1                   	// #1
    b894:	cmp	x8, x9
    b898:	str	w10, [sp, #84]
    b89c:	b.eq	b8b4 <mpc_div@@Base+0x1a14>  // b.none
    b8a0:	ldur	x8, [x29, #-8]
    b8a4:	ldur	x9, [x29, #-24]
    b8a8:	cmp	x8, x9
    b8ac:	cset	w10, eq  // eq = none
    b8b0:	str	w10, [sp, #84]
    b8b4:	ldr	w8, [sp, #84]
    b8b8:	and	w8, w8, #0x1
    b8bc:	stur	w8, [x29, #-40]
    b8c0:	ldur	x9, [x29, #-16]
    b8c4:	ldr	x9, [x9, #16]
    b8c8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    b8cc:	cmp	x9, x10
    b8d0:	cset	w8, eq  // eq = none
    b8d4:	and	w8, w8, #0x1
    b8d8:	stur	w8, [x29, #-44]
    b8dc:	ldur	w8, [x29, #-40]
    b8e0:	cbz	w8, b8f0 <mpc_div@@Base+0x1a50>
    b8e4:	add	x8, sp, #0x70
    b8e8:	str	x8, [sp, #72]
    b8ec:	b	b8f8 <mpc_div@@Base+0x1a58>
    b8f0:	ldur	x8, [x29, #-8]
    b8f4:	str	x8, [sp, #72]
    b8f8:	ldr	x8, [sp, #72]
    b8fc:	str	x8, [sp, #104]
    b900:	ldur	x8, [x29, #-16]
    b904:	ldr	w9, [x8, #8]
    b908:	mov	w10, #0x1                   	// #1
    b90c:	mov	w11, #0xffffffff            	// #-1
    b910:	cmp	w9, #0x0
    b914:	csel	w9, w11, w10, lt  // lt = tstop
    b918:	str	w9, [sp, #100]
    b91c:	ldur	x8, [x29, #-16]
    b920:	ldr	w9, [x8, #40]
    b924:	cmp	w9, #0x0
    b928:	csel	w9, w11, w10, lt  // lt = tstop
    b92c:	str	w9, [sp, #96]
    b930:	ldur	x8, [x29, #-24]
    b934:	ldr	w9, [x8, #8]
    b938:	cmp	w9, #0x0
    b93c:	csel	w9, w11, w10, lt  // lt = tstop
    b940:	str	w9, [sp, #92]
    b944:	ldur	x8, [x29, #-24]
    b948:	ldr	w9, [x8, #40]
    b94c:	cmp	w9, #0x0
    b950:	csel	w9, w11, w10, lt  // lt = tstop
    b954:	str	w9, [sp, #88]
    b958:	ldur	w9, [x29, #-40]
    b95c:	cbz	w9, b978 <mpc_div@@Base+0x1ad8>
    b960:	ldur	x8, [x29, #-8]
    b964:	ldr	x1, [x8]
    b968:	ldur	x8, [x29, #-8]
    b96c:	ldr	x2, [x8, #32]
    b970:	add	x0, sp, #0x70
    b974:	bl	54c0 <mpc_init3@plt>
    b978:	ldur	x8, [x29, #-24]
    b97c:	ldr	q0, [x8, #32]
    b980:	sub	x9, x29, #0x50
    b984:	stur	q0, [x29, #-80]
    b988:	ldr	q0, [x8, #48]
    b98c:	stur	q0, [x29, #-64]
    b990:	ldr	x0, [sp, #104]
    b994:	ldur	x8, [x29, #-16]
    b998:	add	x1, x8, #0x20
    b99c:	ldur	w10, [x29, #-28]
    b9a0:	and	w3, w10, #0xf
    b9a4:	mov	x2, x9
    b9a8:	str	x9, [sp, #64]
    b9ac:	bl	5250 <mpfr_div@plt>
    b9b0:	stur	w0, [x29, #-32]
    b9b4:	ldr	x0, [sp, #64]
    b9b8:	ldr	x1, [sp, #64]
    b9bc:	mov	w10, wzr
    b9c0:	mov	w2, w10
    b9c4:	bl	4c60 <mpfr_neg@plt>
    b9c8:	ldr	x8, [sp, #104]
    b9cc:	add	x8, x8, #0x20
    b9d0:	ldur	x1, [x29, #-16]
    b9d4:	ldur	w10, [x29, #-28]
    b9d8:	asr	w3, w10, #4
    b9dc:	mov	x0, x8
    b9e0:	ldr	x2, [sp, #64]
    b9e4:	bl	5250 <mpfr_div@plt>
    b9e8:	stur	w0, [x29, #-36]
    b9ec:	ldur	w10, [x29, #-40]
    b9f0:	cbz	w10, ba1c <mpc_div@@Base+0x1b7c>
    b9f4:	ldur	x0, [x29, #-8]
    b9f8:	add	x8, sp, #0x70
    b9fc:	mov	x1, x8
    ba00:	mov	w9, wzr
    ba04:	mov	w2, w9
    ba08:	str	x8, [sp, #56]
    ba0c:	bl	5680 <mpc_set@plt>
    ba10:	ldr	x8, [sp, #56]
    ba14:	mov	x0, x8
    ba18:	bl	4af0 <mpc_clear@plt>
    ba1c:	ldur	x8, [x29, #-8]
    ba20:	ldr	x8, [x8, #16]
    ba24:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    ba28:	cmp	x8, x9
    ba2c:	b.ne	ba94 <mpc_div@@Base+0x1bf4>  // b.any
    ba30:	ldur	x0, [x29, #-8]
    ba34:	ldur	x1, [x29, #-8]
    ba38:	ldr	w8, [sp, #100]
    ba3c:	ldr	w9, [sp, #92]
    ba40:	mov	w10, #0x0                   	// #0
    ba44:	cmp	w8, w9
    ba48:	str	x0, [sp, #48]
    ba4c:	str	x1, [sp, #40]
    ba50:	str	w10, [sp, #36]
    ba54:	b.eq	ba6c <mpc_div@@Base+0x1bcc>  // b.none
    ba58:	ldr	w8, [sp, #96]
    ba5c:	ldr	w9, [sp, #88]
    ba60:	cmp	w8, w9
    ba64:	cset	w8, ne  // ne = any
    ba68:	str	w8, [sp, #36]
    ba6c:	ldr	w8, [sp, #36]
    ba70:	mov	w9, #0x1                   	// #1
    ba74:	mov	w10, #0xffffffff            	// #-1
    ba78:	tst	w8, #0x1
    ba7c:	csel	w3, w10, w9, ne  // ne = any
    ba80:	ldr	x0, [sp, #48]
    ba84:	ldr	x1, [sp, #40]
    ba88:	mov	w8, wzr
    ba8c:	mov	w2, w8
    ba90:	bl	52d0 <mpfr_set4@plt>
    ba94:	ldur	w8, [x29, #-44]
    ba98:	cbz	w8, bb08 <mpc_div@@Base+0x1c68>
    ba9c:	ldur	x8, [x29, #-8]
    baa0:	add	x0, x8, #0x20
    baa4:	ldur	x8, [x29, #-8]
    baa8:	add	x1, x8, #0x20
    baac:	ldr	w9, [sp, #96]
    bab0:	ldr	w10, [sp, #92]
    bab4:	mov	w11, #0x0                   	// #0
    bab8:	cmp	w9, w10
    babc:	str	x0, [sp, #24]
    bac0:	str	x1, [sp, #16]
    bac4:	str	w11, [sp, #12]
    bac8:	b.eq	bae0 <mpc_div@@Base+0x1c40>  // b.none
    bacc:	ldr	w8, [sp, #100]
    bad0:	ldr	w9, [sp, #88]
    bad4:	cmp	w8, w9
    bad8:	cset	w8, eq  // eq = none
    badc:	str	w8, [sp, #12]
    bae0:	ldr	w8, [sp, #12]
    bae4:	mov	w9, #0x1                   	// #1
    bae8:	mov	w10, #0xffffffff            	// #-1
    baec:	tst	w8, #0x1
    baf0:	csel	w3, w10, w9, ne  // ne = any
    baf4:	ldr	x0, [sp, #24]
    baf8:	ldr	x1, [sp, #16]
    bafc:	mov	w8, wzr
    bb00:	mov	w2, w8
    bb04:	bl	52d0 <mpfr_set4@plt>
    bb08:	ldur	w8, [x29, #-32]
    bb0c:	cmp	w8, #0x0
    bb10:	cset	w8, ge  // ge = tcont
    bb14:	tbnz	w8, #0, bb24 <mpc_div@@Base+0x1c84>
    bb18:	mov	w8, #0x2                   	// #2
    bb1c:	str	w8, [sp, #8]
    bb20:	b	bb3c <mpc_div@@Base+0x1c9c>
    bb24:	ldur	w8, [x29, #-32]
    bb28:	mov	w9, wzr
    bb2c:	mov	w10, #0x1                   	// #1
    bb30:	cmp	w8, #0x0
    bb34:	csel	w8, w9, w10, eq  // eq = none
    bb38:	str	w8, [sp, #8]
    bb3c:	ldr	w8, [sp, #8]
    bb40:	ldur	w9, [x29, #-36]
    bb44:	cmp	w9, #0x0
    bb48:	cset	w9, ge  // ge = tcont
    bb4c:	str	w8, [sp, #4]
    bb50:	tbnz	w9, #0, bb60 <mpc_div@@Base+0x1cc0>
    bb54:	mov	w8, #0x2                   	// #2
    bb58:	str	w8, [sp]
    bb5c:	b	bb78 <mpc_div@@Base+0x1cd8>
    bb60:	ldur	w8, [x29, #-36]
    bb64:	mov	w9, wzr
    bb68:	mov	w10, #0x1                   	// #1
    bb6c:	cmp	w8, #0x0
    bb70:	csel	w8, w9, w10, eq  // eq = none
    bb74:	str	w8, [sp]
    bb78:	ldr	w8, [sp]
    bb7c:	ldr	w9, [sp, #4]
    bb80:	orr	w0, w9, w8, lsl #2
    bb84:	ldr	x28, [sp, #272]
    bb88:	ldp	x29, x30, [sp, #256]
    bb8c:	add	sp, sp, #0x120
    bb90:	ret

000000000000bb94 <mpc_div_fr@@Base>:
    bb94:	sub	sp, sp, #0x80
    bb98:	stp	x29, x30, [sp, #112]
    bb9c:	add	x29, sp, #0x70
    bba0:	mov	w8, wzr
    bba4:	add	x9, sp, #0x28
    bba8:	stur	x0, [x29, #-8]
    bbac:	stur	x1, [x29, #-16]
    bbb0:	stur	x2, [x29, #-24]
    bbb4:	stur	w3, [x29, #-28]
    bbb8:	ldur	x10, [x29, #-8]
    bbbc:	ldr	x1, [x10]
    bbc0:	mov	x0, x9
    bbc4:	str	w8, [sp, #36]
    bbc8:	str	x9, [sp, #24]
    bbcc:	bl	5530 <mpfr_init2@plt>
    bbd0:	ldur	x1, [x29, #-16]
    bbd4:	ldur	x2, [x29, #-24]
    bbd8:	ldur	w8, [x29, #-28]
    bbdc:	and	w3, w8, #0xf
    bbe0:	ldr	x0, [sp, #24]
    bbe4:	bl	5250 <mpfr_div@plt>
    bbe8:	stur	w0, [x29, #-32]
    bbec:	ldur	x9, [x29, #-8]
    bbf0:	add	x0, x9, #0x20
    bbf4:	ldur	x9, [x29, #-16]
    bbf8:	add	x1, x9, #0x20
    bbfc:	ldur	x2, [x29, #-24]
    bc00:	ldur	w8, [x29, #-28]
    bc04:	asr	w3, w8, #4
    bc08:	bl	5250 <mpfr_div@plt>
    bc0c:	stur	w0, [x29, #-36]
    bc10:	ldur	x0, [x29, #-8]
    bc14:	ldr	w3, [sp, #48]
    bc18:	ldr	x1, [sp, #24]
    bc1c:	ldr	w2, [sp, #36]
    bc20:	bl	52d0 <mpfr_set4@plt>
    bc24:	ldr	x9, [sp, #24]
    bc28:	mov	x0, x9
    bc2c:	bl	4e30 <mpfr_clear@plt>
    bc30:	ldur	w8, [x29, #-32]
    bc34:	cmp	w8, #0x0
    bc38:	cset	w8, ge  // ge = tcont
    bc3c:	tbnz	w8, #0, bc4c <mpc_div_fr@@Base+0xb8>
    bc40:	mov	w8, #0x2                   	// #2
    bc44:	str	w8, [sp, #20]
    bc48:	b	bc64 <mpc_div_fr@@Base+0xd0>
    bc4c:	ldur	w8, [x29, #-32]
    bc50:	mov	w9, wzr
    bc54:	mov	w10, #0x1                   	// #1
    bc58:	cmp	w8, #0x0
    bc5c:	csel	w8, w9, w10, eq  // eq = none
    bc60:	str	w8, [sp, #20]
    bc64:	ldr	w8, [sp, #20]
    bc68:	ldur	w9, [x29, #-36]
    bc6c:	cmp	w9, #0x0
    bc70:	cset	w9, ge  // ge = tcont
    bc74:	str	w8, [sp, #16]
    bc78:	tbnz	w9, #0, bc88 <mpc_div_fr@@Base+0xf4>
    bc7c:	mov	w8, #0x2                   	// #2
    bc80:	str	w8, [sp, #12]
    bc84:	b	bca0 <mpc_div_fr@@Base+0x10c>
    bc88:	ldur	w8, [x29, #-36]
    bc8c:	mov	w9, wzr
    bc90:	mov	w10, #0x1                   	// #1
    bc94:	cmp	w8, #0x0
    bc98:	csel	w8, w9, w10, eq  // eq = none
    bc9c:	str	w8, [sp, #12]
    bca0:	ldr	w8, [sp, #12]
    bca4:	ldr	w9, [sp, #16]
    bca8:	orr	w0, w9, w8, lsl #2
    bcac:	ldp	x29, x30, [sp, #112]
    bcb0:	add	sp, sp, #0x80
    bcb4:	ret

000000000000bcb8 <mpc_div_ui@@Base>:
    bcb8:	sub	sp, sp, #0x50
    bcbc:	stp	x29, x30, [sp, #64]
    bcc0:	add	x29, sp, #0x40
    bcc4:	stur	x0, [x29, #-8]
    bcc8:	stur	x1, [x29, #-16]
    bccc:	stur	x2, [x29, #-24]
    bcd0:	stur	w3, [x29, #-28]
    bcd4:	ldur	x0, [x29, #-8]
    bcd8:	ldur	x1, [x29, #-16]
    bcdc:	ldur	x2, [x29, #-24]
    bce0:	ldur	w8, [x29, #-28]
    bce4:	and	w3, w8, #0xf
    bce8:	bl	5650 <mpfr_div_ui@plt>
    bcec:	str	w0, [sp, #24]
    bcf0:	ldr	w8, [sp, #24]
    bcf4:	str	w8, [sp, #32]
    bcf8:	ldur	x8, [x29, #-8]
    bcfc:	add	x0, x8, #0x20
    bd00:	ldur	x8, [x29, #-16]
    bd04:	add	x1, x8, #0x20
    bd08:	ldur	x2, [x29, #-24]
    bd0c:	ldur	w9, [x29, #-28]
    bd10:	asr	w3, w9, #4
    bd14:	bl	5650 <mpfr_div_ui@plt>
    bd18:	str	w0, [sp, #20]
    bd1c:	ldr	w8, [sp, #20]
    bd20:	str	w8, [sp, #28]
    bd24:	ldr	w9, [sp, #32]
    bd28:	cmp	w9, #0x0
    bd2c:	cset	w9, ge  // ge = tcont
    bd30:	tbnz	w9, #0, bd40 <mpc_div_ui@@Base+0x88>
    bd34:	mov	w8, #0x2                   	// #2
    bd38:	str	w8, [sp, #16]
    bd3c:	b	bd58 <mpc_div_ui@@Base+0xa0>
    bd40:	ldr	w8, [sp, #32]
    bd44:	mov	w9, wzr
    bd48:	mov	w10, #0x1                   	// #1
    bd4c:	cmp	w8, #0x0
    bd50:	csel	w8, w9, w10, eq  // eq = none
    bd54:	str	w8, [sp, #16]
    bd58:	ldr	w8, [sp, #16]
    bd5c:	ldr	w9, [sp, #28]
    bd60:	cmp	w9, #0x0
    bd64:	cset	w9, ge  // ge = tcont
    bd68:	str	w8, [sp, #12]
    bd6c:	tbnz	w9, #0, bd7c <mpc_div_ui@@Base+0xc4>
    bd70:	mov	w8, #0x2                   	// #2
    bd74:	str	w8, [sp, #8]
    bd78:	b	bd94 <mpc_div_ui@@Base+0xdc>
    bd7c:	ldr	w8, [sp, #28]
    bd80:	mov	w9, wzr
    bd84:	mov	w10, #0x1                   	// #1
    bd88:	cmp	w8, #0x0
    bd8c:	csel	w8, w9, w10, eq  // eq = none
    bd90:	str	w8, [sp, #8]
    bd94:	ldr	w8, [sp, #8]
    bd98:	ldr	w9, [sp, #12]
    bd9c:	orr	w0, w9, w8, lsl #2
    bda0:	ldp	x29, x30, [sp, #64]
    bda4:	add	sp, sp, #0x50
    bda8:	ret

000000000000bdac <mpc_exp@@Base>:
    bdac:	sub	sp, sp, #0x1e0
    bdb0:	stp	x29, x30, [sp, #448]
    bdb4:	str	x28, [sp, #464]
    bdb8:	add	x29, sp, #0x1c0
    bdbc:	mov	x8, #0x2                   	// #2
    bdc0:	movk	x8, #0x8000, lsl #48
    bdc4:	stur	x0, [x29, #-16]
    bdc8:	stur	x1, [x29, #-24]
    bdcc:	stur	w2, [x29, #-28]
    bdd0:	stur	wzr, [x29, #-140]
    bdd4:	ldur	x9, [x29, #-24]
    bdd8:	ldr	x9, [x9, #16]
    bddc:	cmp	x9, x8
    bde0:	b.eq	bdfc <mpc_exp@@Base+0x50>  // b.none
    bde4:	ldur	x8, [x29, #-24]
    bde8:	ldr	x8, [x8, #48]
    bdec:	mov	x9, #0x2                   	// #2
    bdf0:	movk	x9, #0x8000, lsl #48
    bdf4:	cmp	x8, x9
    bdf8:	b.ne	beb4 <mpc_exp@@Base+0x108>  // b.any
    bdfc:	ldur	x8, [x29, #-24]
    be00:	ldr	x8, [x8, #48]
    be04:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    be08:	cmp	x8, x9
    be0c:	b.ne	be2c <mpc_exp@@Base+0x80>  // b.any
    be10:	ldur	x0, [x29, #-16]
    be14:	ldur	x1, [x29, #-24]
    be18:	mov	w8, wzr
    be1c:	mov	w2, w8
    be20:	bl	5680 <mpc_set@plt>
    be24:	stur	w0, [x29, #-4]
    be28:	b	c708 <mpc_exp@@Base+0x95c>
    be2c:	ldur	x8, [x29, #-24]
    be30:	ldr	x8, [x8, #16]
    be34:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    be38:	cmp	x8, x9
    be3c:	b.ne	be98 <mpc_exp@@Base+0xec>  // b.any
    be40:	ldur	x8, [x29, #-24]
    be44:	ldr	w9, [x8, #8]
    be48:	cmp	w9, #0x0
    be4c:	cset	w9, ge  // ge = tcont
    be50:	tbnz	w9, #0, be78 <mpc_exp@@Base+0xcc>
    be54:	ldur	x0, [x29, #-16]
    be58:	mov	x8, xzr
    be5c:	mov	x1, x8
    be60:	mov	x2, x8
    be64:	mov	w9, wzr
    be68:	mov	w3, w9
    be6c:	bl	5140 <mpc_set_ui_ui@plt>
    be70:	stur	w0, [x29, #-4]
    be74:	b	c708 <mpc_exp@@Base+0x95c>
    be78:	ldur	x0, [x29, #-16]
    be7c:	mov	w1, #0x1                   	// #1
    be80:	bl	5220 <mpfr_set_inf@plt>
    be84:	ldur	x8, [x29, #-16]
    be88:	add	x0, x8, #0x20
    be8c:	bl	4b20 <mpfr_set_nan@plt>
    be90:	stur	wzr, [x29, #-4]
    be94:	b	c708 <mpc_exp@@Base+0x95c>
    be98:	ldur	x0, [x29, #-16]
    be9c:	bl	4b20 <mpfr_set_nan@plt>
    bea0:	ldur	x8, [x29, #-16]
    bea4:	add	x0, x8, #0x20
    bea8:	bl	4b20 <mpfr_set_nan@plt>
    beac:	stur	wzr, [x29, #-4]
    beb0:	b	c708 <mpc_exp@@Base+0x95c>
    beb4:	ldur	x8, [x29, #-24]
    beb8:	ldr	x8, [x8, #48]
    bebc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    bec0:	cmp	x8, x9
    bec4:	b.ne	bf8c <mpc_exp@@Base+0x1e0>  // b.any
    bec8:	ldur	x0, [x29, #-16]
    becc:	ldur	x1, [x29, #-24]
    bed0:	ldur	w8, [x29, #-28]
    bed4:	and	w2, w8, #0xf
    bed8:	bl	5330 <mpfr_exp@plt>
    bedc:	stur	w0, [x29, #-144]
    bee0:	ldur	x9, [x29, #-16]
    bee4:	add	x0, x9, #0x20
    bee8:	ldur	x9, [x29, #-24]
    beec:	add	x1, x9, #0x20
    bef0:	ldur	w8, [x29, #-28]
    bef4:	asr	w2, w8, #4
    bef8:	ldur	x9, [x29, #-24]
    befc:	ldr	w3, [x9, #40]
    bf00:	bl	52d0 <mpfr_set4@plt>
    bf04:	stur	w0, [x29, #-148]
    bf08:	ldur	w8, [x29, #-144]
    bf0c:	cmp	w8, #0x0
    bf10:	cset	w8, ge  // ge = tcont
    bf14:	tbnz	w8, #0, bf24 <mpc_exp@@Base+0x178>
    bf18:	mov	w8, #0x2                   	// #2
    bf1c:	str	w8, [sp, #172]
    bf20:	b	bf3c <mpc_exp@@Base+0x190>
    bf24:	ldur	w8, [x29, #-144]
    bf28:	mov	w9, wzr
    bf2c:	mov	w10, #0x1                   	// #1
    bf30:	cmp	w8, #0x0
    bf34:	csel	w8, w9, w10, eq  // eq = none
    bf38:	str	w8, [sp, #172]
    bf3c:	ldr	w8, [sp, #172]
    bf40:	ldur	w9, [x29, #-148]
    bf44:	cmp	w9, #0x0
    bf48:	cset	w9, ge  // ge = tcont
    bf4c:	str	w8, [sp, #168]
    bf50:	tbnz	w9, #0, bf60 <mpc_exp@@Base+0x1b4>
    bf54:	mov	w8, #0x2                   	// #2
    bf58:	str	w8, [sp, #164]
    bf5c:	b	bf78 <mpc_exp@@Base+0x1cc>
    bf60:	ldur	w8, [x29, #-148]
    bf64:	mov	w9, wzr
    bf68:	mov	w10, #0x1                   	// #1
    bf6c:	cmp	w8, #0x0
    bf70:	csel	w8, w9, w10, eq  // eq = none
    bf74:	str	w8, [sp, #164]
    bf78:	ldr	w8, [sp, #164]
    bf7c:	ldr	w9, [sp, #168]
    bf80:	orr	w8, w9, w8, lsl #2
    bf84:	stur	w8, [x29, #-4]
    bf88:	b	c708 <mpc_exp@@Base+0x95c>
    bf8c:	ldur	x8, [x29, #-24]
    bf90:	ldr	x8, [x8, #16]
    bf94:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    bf98:	cmp	x8, x9
    bf9c:	b.ne	c060 <mpc_exp@@Base+0x2b4>  // b.any
    bfa0:	ldur	x0, [x29, #-16]
    bfa4:	ldur	x8, [x29, #-24]
    bfa8:	add	x1, x8, #0x20
    bfac:	ldur	w9, [x29, #-28]
    bfb0:	and	w2, w9, #0xf
    bfb4:	bl	5150 <mpfr_cos@plt>
    bfb8:	stur	w0, [x29, #-144]
    bfbc:	ldur	x8, [x29, #-16]
    bfc0:	add	x0, x8, #0x20
    bfc4:	ldur	x8, [x29, #-24]
    bfc8:	add	x1, x8, #0x20
    bfcc:	ldur	w9, [x29, #-28]
    bfd0:	asr	w2, w9, #4
    bfd4:	bl	5180 <mpfr_sin@plt>
    bfd8:	stur	w0, [x29, #-148]
    bfdc:	ldur	w9, [x29, #-144]
    bfe0:	cmp	w9, #0x0
    bfe4:	cset	w9, ge  // ge = tcont
    bfe8:	tbnz	w9, #0, bff8 <mpc_exp@@Base+0x24c>
    bfec:	mov	w8, #0x2                   	// #2
    bff0:	str	w8, [sp, #160]
    bff4:	b	c010 <mpc_exp@@Base+0x264>
    bff8:	ldur	w8, [x29, #-144]
    bffc:	mov	w9, wzr
    c000:	mov	w10, #0x1                   	// #1
    c004:	cmp	w8, #0x0
    c008:	csel	w8, w9, w10, eq  // eq = none
    c00c:	str	w8, [sp, #160]
    c010:	ldr	w8, [sp, #160]
    c014:	ldur	w9, [x29, #-148]
    c018:	cmp	w9, #0x0
    c01c:	cset	w9, ge  // ge = tcont
    c020:	str	w8, [sp, #156]
    c024:	tbnz	w9, #0, c034 <mpc_exp@@Base+0x288>
    c028:	mov	w8, #0x2                   	// #2
    c02c:	str	w8, [sp, #152]
    c030:	b	c04c <mpc_exp@@Base+0x2a0>
    c034:	ldur	w8, [x29, #-148]
    c038:	mov	w9, wzr
    c03c:	mov	w10, #0x1                   	// #1
    c040:	cmp	w8, #0x0
    c044:	csel	w8, w9, w10, eq  // eq = none
    c048:	str	w8, [sp, #152]
    c04c:	ldr	w8, [sp, #152]
    c050:	ldr	w9, [sp, #156]
    c054:	orr	w8, w9, w8, lsl #2
    c058:	stur	w8, [x29, #-4]
    c05c:	b	c708 <mpc_exp@@Base+0x95c>
    c060:	ldur	x8, [x29, #-24]
    c064:	ldr	x8, [x8, #16]
    c068:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    c06c:	cmp	x8, x9
    c070:	b.ne	c27c <mpc_exp@@Base+0x4d0>  // b.any
    c074:	sub	x0, x29, #0xc0
    c078:	mov	x1, #0x2                   	// #2
    c07c:	bl	5530 <mpfr_init2@plt>
    c080:	ldur	x8, [x29, #-24]
    c084:	ldr	w9, [x8, #8]
    c088:	cmp	w9, #0x0
    c08c:	cset	w9, ge  // ge = tcont
    c090:	tbnz	w9, #0, c0bc <mpc_exp@@Base+0x310>
    c094:	sub	x8, x29, #0xc0
    c098:	stur	x8, [x29, #-200]
    c09c:	ldur	x8, [x29, #-200]
    c0a0:	mov	w9, #0x1                   	// #1
    c0a4:	str	w9, [x8, #8]
    c0a8:	ldur	x8, [x29, #-200]
    c0ac:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    c0b0:	str	x10, [x8, #16]
    c0b4:	stur	wzr, [x29, #-204]
    c0b8:	b	c0c8 <mpc_exp@@Base+0x31c>
    c0bc:	sub	x0, x29, #0xc0
    c0c0:	mov	w1, #0x1                   	// #1
    c0c4:	bl	5220 <mpfr_set_inf@plt>
    c0c8:	ldur	x8, [x29, #-24]
    c0cc:	ldr	x8, [x8, #48]
    c0d0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    c0d4:	cmp	x8, x9
    c0d8:	b.ne	c150 <mpc_exp@@Base+0x3a4>  // b.any
    c0dc:	ldur	x8, [x29, #-24]
    c0e0:	ldr	w9, [x8, #8]
    c0e4:	mov	w10, wzr
    c0e8:	cmp	w9, #0x0
    c0ec:	cset	w9, lt  // lt = tstop
    c0f0:	and	w9, w9, #0x1
    c0f4:	stur	w9, [x29, #-208]
    c0f8:	ldur	x0, [x29, #-16]
    c0fc:	sub	x1, x29, #0xc0
    c100:	ldur	w3, [x29, #-184]
    c104:	mov	w2, w10
    c108:	bl	52d0 <mpfr_set4@plt>
    c10c:	stur	w0, [x29, #-144]
    c110:	ldur	w9, [x29, #-208]
    c114:	cbz	w9, c13c <mpc_exp@@Base+0x390>
    c118:	ldur	x8, [x29, #-16]
    c11c:	add	x0, x8, #0x20
    c120:	sub	x1, x29, #0xc0
    c124:	ldur	w3, [x29, #-184]
    c128:	mov	w9, wzr
    c12c:	mov	w2, w9
    c130:	bl	52d0 <mpfr_set4@plt>
    c134:	stur	w0, [x29, #-148]
    c138:	b	c14c <mpc_exp@@Base+0x3a0>
    c13c:	ldur	x8, [x29, #-16]
    c140:	add	x0, x8, #0x20
    c144:	bl	4b20 <mpfr_set_nan@plt>
    c148:	stur	wzr, [x29, #-148]
    c14c:	b	c1f0 <mpc_exp@@Base+0x444>
    c150:	add	x8, sp, #0xd0
    c154:	mov	x0, x8
    c158:	mov	x9, #0x2                   	// #2
    c15c:	mov	x1, x9
    c160:	str	x8, [sp, #144]
    c164:	str	x9, [sp, #136]
    c168:	bl	5530 <mpfr_init2@plt>
    c16c:	add	x8, sp, #0xb0
    c170:	mov	x0, x8
    c174:	ldr	x1, [sp, #136]
    c178:	str	x8, [sp, #128]
    c17c:	bl	5530 <mpfr_init2@plt>
    c180:	ldur	x8, [x29, #-24]
    c184:	add	x2, x8, #0x20
    c188:	ldr	x0, [sp, #128]
    c18c:	ldr	x1, [sp, #144]
    c190:	mov	w10, wzr
    c194:	mov	w3, w10
    c198:	str	w10, [sp, #124]
    c19c:	bl	5620 <mpfr_sin_cos@plt>
    c1a0:	ldur	x8, [x29, #-16]
    c1a4:	ldr	w3, [sp, #216]
    c1a8:	mov	x0, x8
    c1ac:	sub	x8, x29, #0xc0
    c1b0:	mov	x1, x8
    c1b4:	ldr	w2, [sp, #124]
    c1b8:	str	x8, [sp, #112]
    c1bc:	bl	52d0 <mpfr_set4@plt>
    c1c0:	stur	w0, [x29, #-144]
    c1c4:	ldur	x8, [x29, #-16]
    c1c8:	add	x0, x8, #0x20
    c1cc:	ldr	w3, [sp, #184]
    c1d0:	ldr	x1, [sp, #112]
    c1d4:	ldr	w2, [sp, #124]
    c1d8:	bl	52d0 <mpfr_set4@plt>
    c1dc:	stur	w0, [x29, #-148]
    c1e0:	ldr	x0, [sp, #128]
    c1e4:	bl	4e30 <mpfr_clear@plt>
    c1e8:	ldr	x0, [sp, #144]
    c1ec:	bl	4e30 <mpfr_clear@plt>
    c1f0:	sub	x0, x29, #0xc0
    c1f4:	bl	4e30 <mpfr_clear@plt>
    c1f8:	ldur	w8, [x29, #-144]
    c1fc:	cmp	w8, #0x0
    c200:	cset	w8, ge  // ge = tcont
    c204:	tbnz	w8, #0, c214 <mpc_exp@@Base+0x468>
    c208:	mov	w8, #0x2                   	// #2
    c20c:	str	w8, [sp, #108]
    c210:	b	c22c <mpc_exp@@Base+0x480>
    c214:	ldur	w8, [x29, #-144]
    c218:	mov	w9, wzr
    c21c:	mov	w10, #0x1                   	// #1
    c220:	cmp	w8, #0x0
    c224:	csel	w8, w9, w10, eq  // eq = none
    c228:	str	w8, [sp, #108]
    c22c:	ldr	w8, [sp, #108]
    c230:	ldur	w9, [x29, #-148]
    c234:	cmp	w9, #0x0
    c238:	cset	w9, ge  // ge = tcont
    c23c:	str	w8, [sp, #104]
    c240:	tbnz	w9, #0, c250 <mpc_exp@@Base+0x4a4>
    c244:	mov	w8, #0x2                   	// #2
    c248:	str	w8, [sp, #100]
    c24c:	b	c268 <mpc_exp@@Base+0x4bc>
    c250:	ldur	w8, [x29, #-148]
    c254:	mov	w9, wzr
    c258:	mov	w10, #0x1                   	// #1
    c25c:	cmp	w8, #0x0
    c260:	csel	w8, w9, w10, eq  // eq = none
    c264:	str	w8, [sp, #100]
    c268:	ldr	w8, [sp, #100]
    c26c:	ldr	w9, [sp, #104]
    c270:	orr	w8, w9, w8, lsl #2
    c274:	stur	w8, [x29, #-4]
    c278:	b	c708 <mpc_exp@@Base+0x95c>
    c27c:	ldur	x8, [x29, #-24]
    c280:	ldr	x8, [x8, #48]
    c284:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    c288:	cmp	x8, x9
    c28c:	b.ne	c2ac <mpc_exp@@Base+0x500>  // b.any
    c290:	ldur	x0, [x29, #-16]
    c294:	bl	4b20 <mpfr_set_nan@plt>
    c298:	ldur	x8, [x29, #-16]
    c29c:	add	x0, x8, #0x20
    c2a0:	bl	4b20 <mpfr_set_nan@plt>
    c2a4:	stur	wzr, [x29, #-4]
    c2a8:	b	c708 <mpc_exp@@Base+0x95c>
    c2ac:	ldur	x8, [x29, #-16]
    c2b0:	ldr	x8, [x8]
    c2b4:	ldur	x9, [x29, #-16]
    c2b8:	ldr	x9, [x9, #32]
    c2bc:	cmp	x8, x9
    c2c0:	b.le	c2d4 <mpc_exp@@Base+0x528>
    c2c4:	ldur	x8, [x29, #-16]
    c2c8:	ldr	x8, [x8]
    c2cc:	str	x8, [sp, #88]
    c2d0:	b	c2e0 <mpc_exp@@Base+0x534>
    c2d4:	ldur	x8, [x29, #-16]
    c2d8:	ldr	x8, [x8, #32]
    c2dc:	str	x8, [sp, #88]
    c2e0:	ldr	x8, [sp, #88]
    c2e4:	ldur	x9, [x29, #-24]
    c2e8:	ldr	x9, [x9, #16]
    c2ec:	mov	x10, xzr
    c2f0:	subs	x9, x10, x9
    c2f4:	cmp	x9, #0x0
    c2f8:	cset	w11, le
    c2fc:	str	x8, [sp, #80]
    c300:	tbnz	w11, #0, c31c <mpc_exp@@Base+0x570>
    c304:	ldur	x8, [x29, #-24]
    c308:	ldr	x8, [x8, #16]
    c30c:	mov	x9, xzr
    c310:	subs	x8, x9, x8
    c314:	str	x8, [sp, #72]
    c318:	b	c324 <mpc_exp@@Base+0x578>
    c31c:	mov	x8, xzr
    c320:	str	x8, [sp, #72]
    c324:	ldr	x8, [sp, #72]
    c328:	ldur	x9, [x29, #-24]
    c32c:	ldr	x9, [x9, #48]
    c330:	mov	x10, xzr
    c334:	subs	x9, x10, x9
    c338:	cmp	x8, x9
    c33c:	b.le	c388 <mpc_exp@@Base+0x5dc>
    c340:	ldur	x8, [x29, #-24]
    c344:	ldr	x8, [x8, #16]
    c348:	mov	x9, xzr
    c34c:	subs	x8, x9, x8
    c350:	cmp	x8, #0x0
    c354:	cset	w10, le
    c358:	tbnz	w10, #0, c374 <mpc_exp@@Base+0x5c8>
    c35c:	ldur	x8, [x29, #-24]
    c360:	ldr	x8, [x8, #16]
    c364:	mov	x9, xzr
    c368:	subs	x8, x9, x8
    c36c:	str	x8, [sp, #64]
    c370:	b	c37c <mpc_exp@@Base+0x5d0>
    c374:	mov	x8, xzr
    c378:	str	x8, [sp, #64]
    c37c:	ldr	x8, [sp, #64]
    c380:	str	x8, [sp, #56]
    c384:	b	c39c <mpc_exp@@Base+0x5f0>
    c388:	ldur	x8, [x29, #-24]
    c38c:	ldr	x8, [x8, #48]
    c390:	mov	x9, xzr
    c394:	subs	x8, x9, x8
    c398:	str	x8, [sp, #56]
    c39c:	ldr	x8, [sp, #56]
    c3a0:	ldr	x9, [sp, #80]
    c3a4:	add	x8, x9, x8
    c3a8:	stur	x8, [x29, #-136]
    c3ac:	sub	x0, x29, #0x40
    c3b0:	mov	x8, #0x2                   	// #2
    c3b4:	mov	x1, x8
    c3b8:	str	x8, [sp, #48]
    c3bc:	bl	5530 <mpfr_init2@plt>
    c3c0:	sub	x0, x29, #0x60
    c3c4:	ldr	x1, [sp, #48]
    c3c8:	bl	5530 <mpfr_init2@plt>
    c3cc:	sub	x0, x29, #0x80
    c3d0:	ldr	x1, [sp, #48]
    c3d4:	bl	5530 <mpfr_init2@plt>
    c3d8:	bl	53f0 <mpfr_underflow_p@plt>
    c3dc:	stur	w0, [x29, #-152]
    c3e0:	bl	55d0 <mpfr_overflow_p@plt>
    c3e4:	stur	w0, [x29, #-156]
    c3e8:	ldur	x0, [x29, #-136]
    c3ec:	bl	4de0 <mpc_ceil_log2@plt>
    c3f0:	add	x8, x0, #0x5
    c3f4:	ldur	x9, [x29, #-136]
    c3f8:	add	x8, x9, x8
    c3fc:	stur	x8, [x29, #-136]
    c400:	ldur	x1, [x29, #-136]
    c404:	sub	x8, x29, #0x40
    c408:	mov	x0, x8
    c40c:	str	x8, [sp, #40]
    c410:	bl	4d40 <mpfr_set_prec@plt>
    c414:	ldur	x1, [x29, #-136]
    c418:	sub	x8, x29, #0x60
    c41c:	mov	x0, x8
    c420:	str	x8, [sp, #32]
    c424:	bl	4d40 <mpfr_set_prec@plt>
    c428:	ldur	x1, [x29, #-136]
    c42c:	sub	x8, x29, #0x80
    c430:	mov	x0, x8
    c434:	str	x8, [sp, #24]
    c438:	bl	4d40 <mpfr_set_prec@plt>
    c43c:	bl	4b30 <mpfr_clear_overflow@plt>
    c440:	bl	4f00 <mpfr_clear_underflow@plt>
    c444:	ldur	x1, [x29, #-24]
    c448:	ldr	x0, [sp, #40]
    c44c:	mov	w10, wzr
    c450:	mov	w2, w10
    c454:	str	w10, [sp, #20]
    c458:	bl	5330 <mpfr_exp@plt>
    c45c:	ldur	x8, [x29, #-24]
    c460:	add	x2, x8, #0x20
    c464:	ldr	x8, [sp, #24]
    c468:	mov	x0, x8
    c46c:	ldr	x1, [sp, #32]
    c470:	ldr	w3, [sp, #20]
    c474:	bl	5620 <mpfr_sin_cos@plt>
    c478:	ldr	x8, [sp, #32]
    c47c:	mov	x0, x8
    c480:	mov	x1, x8
    c484:	ldr	x2, [sp, #40]
    c488:	ldr	w3, [sp, #20]
    c48c:	bl	4c50 <mpfr_mul@plt>
    c490:	bl	55d0 <mpfr_overflow_p@plt>
    c494:	mov	w10, #0x1                   	// #1
    c498:	str	w10, [sp, #16]
    c49c:	cbnz	w0, c4fc <mpc_exp@@Base+0x750>
    c4a0:	ldur	x8, [x29, #-48]
    c4a4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c4a8:	mov	w10, #0x1                   	// #1
    c4ac:	cmp	x8, x9
    c4b0:	str	w10, [sp, #16]
    c4b4:	b.eq	c4fc <mpc_exp@@Base+0x750>  // b.none
    c4b8:	ldur	x8, [x29, #-136]
    c4bc:	subs	x1, x8, #0x2
    c4c0:	ldur	x8, [x29, #-16]
    c4c4:	ldr	x8, [x8]
    c4c8:	ldur	w9, [x29, #-28]
    c4cc:	mov	w10, wzr
    c4d0:	tst	w9, #0xf
    c4d4:	cset	w9, eq  // eq = none
    c4d8:	and	w9, w9, #0x1
    c4dc:	add	x4, x8, w9, sxtw
    c4e0:	sub	x0, x29, #0x60
    c4e4:	mov	w2, w10
    c4e8:	mov	w3, #0x1                   	// #1
    c4ec:	bl	5540 <mpfr_can_round@plt>
    c4f0:	cmp	w0, #0x0
    c4f4:	cset	w9, ne  // ne = any
    c4f8:	str	w9, [sp, #16]
    c4fc:	ldr	w8, [sp, #16]
    c500:	and	w8, w8, #0x1
    c504:	stur	w8, [x29, #-140]
    c508:	ldur	w8, [x29, #-140]
    c50c:	cbz	w8, c5a8 <mpc_exp@@Base+0x7fc>
    c510:	sub	x8, x29, #0x80
    c514:	mov	x0, x8
    c518:	mov	x1, x8
    c51c:	sub	x2, x29, #0x40
    c520:	mov	w9, wzr
    c524:	mov	w3, w9
    c528:	bl	4c50 <mpfr_mul@plt>
    c52c:	bl	55d0 <mpfr_overflow_p@plt>
    c530:	mov	w9, #0x1                   	// #1
    c534:	str	w9, [sp, #12]
    c538:	cbnz	w0, c59c <mpc_exp@@Base+0x7f0>
    c53c:	ldur	x8, [x29, #-48]
    c540:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    c544:	mov	w10, #0x1                   	// #1
    c548:	cmp	x8, x9
    c54c:	str	w10, [sp, #12]
    c550:	b.eq	c59c <mpc_exp@@Base+0x7f0>  // b.none
    c554:	ldur	x8, [x29, #-136]
    c558:	subs	x1, x8, #0x2
    c55c:	ldur	x8, [x29, #-16]
    c560:	ldr	x8, [x8, #32]
    c564:	ldur	w9, [x29, #-28]
    c568:	asr	w9, w9, #4
    c56c:	mov	w10, wzr
    c570:	cmp	w9, #0x0
    c574:	cset	w9, eq  // eq = none
    c578:	and	w9, w9, #0x1
    c57c:	add	x4, x8, w9, sxtw
    c580:	sub	x0, x29, #0x80
    c584:	mov	w2, w10
    c588:	mov	w3, #0x1                   	// #1
    c58c:	bl	5540 <mpfr_can_round@plt>
    c590:	cmp	w0, #0x0
    c594:	cset	w9, ne  // ne = any
    c598:	str	w9, [sp, #12]
    c59c:	ldr	w8, [sp, #12]
    c5a0:	and	w8, w8, #0x1
    c5a4:	stur	w8, [x29, #-140]
    c5a8:	ldur	w8, [x29, #-140]
    c5ac:	cbz	w8, c3e8 <mpc_exp@@Base+0x63c>
    c5b0:	ldur	x0, [x29, #-16]
    c5b4:	ldur	w8, [x29, #-28]
    c5b8:	and	w2, w8, #0xf
    c5bc:	sub	x1, x29, #0x60
    c5c0:	ldur	w3, [x29, #-88]
    c5c4:	bl	52d0 <mpfr_set4@plt>
    c5c8:	stur	w0, [x29, #-144]
    c5cc:	ldur	x9, [x29, #-16]
    c5d0:	add	x0, x9, #0x20
    c5d4:	ldur	w8, [x29, #-28]
    c5d8:	asr	w2, w8, #4
    c5dc:	sub	x1, x29, #0x80
    c5e0:	ldur	w3, [x29, #-120]
    c5e4:	bl	52d0 <mpfr_set4@plt>
    c5e8:	stur	w0, [x29, #-148]
    c5ec:	bl	55d0 <mpfr_overflow_p@plt>
    c5f0:	cbz	w0, c624 <mpc_exp@@Base+0x878>
    c5f4:	ldur	x0, [x29, #-16]
    c5f8:	ldur	w8, [x29, #-28]
    c5fc:	and	w1, w8, #0xf
    c600:	bl	4eb0 <mpc_fix_inf@plt>
    c604:	stur	w0, [x29, #-144]
    c608:	ldur	x9, [x29, #-16]
    c60c:	add	x0, x9, #0x20
    c610:	ldur	w8, [x29, #-28]
    c614:	asr	w1, w8, #4
    c618:	bl	4eb0 <mpc_fix_inf@plt>
    c61c:	stur	w0, [x29, #-148]
    c620:	b	c658 <mpc_exp@@Base+0x8ac>
    c624:	bl	53f0 <mpfr_underflow_p@plt>
    c628:	cbz	w0, c658 <mpc_exp@@Base+0x8ac>
    c62c:	ldur	x0, [x29, #-16]
    c630:	ldur	w8, [x29, #-28]
    c634:	and	w1, w8, #0xf
    c638:	bl	51d0 <mpc_fix_zero@plt>
    c63c:	stur	w0, [x29, #-144]
    c640:	ldur	x9, [x29, #-16]
    c644:	add	x0, x9, #0x20
    c648:	ldur	w8, [x29, #-28]
    c64c:	asr	w1, w8, #4
    c650:	bl	51d0 <mpc_fix_zero@plt>
    c654:	stur	w0, [x29, #-148]
    c658:	sub	x0, x29, #0x40
    c65c:	bl	4e30 <mpfr_clear@plt>
    c660:	sub	x0, x29, #0x60
    c664:	bl	4e30 <mpfr_clear@plt>
    c668:	sub	x0, x29, #0x80
    c66c:	bl	4e30 <mpfr_clear@plt>
    c670:	ldur	w8, [x29, #-152]
    c674:	cbz	w8, c67c <mpc_exp@@Base+0x8d0>
    c678:	bl	4a60 <mpfr_set_underflow@plt>
    c67c:	ldur	w8, [x29, #-156]
    c680:	cbz	w8, c688 <mpc_exp@@Base+0x8dc>
    c684:	bl	5580 <mpfr_set_overflow@plt>
    c688:	ldur	w8, [x29, #-144]
    c68c:	cmp	w8, #0x0
    c690:	cset	w8, ge  // ge = tcont
    c694:	tbnz	w8, #0, c6a4 <mpc_exp@@Base+0x8f8>
    c698:	mov	w8, #0x2                   	// #2
    c69c:	str	w8, [sp, #8]
    c6a0:	b	c6bc <mpc_exp@@Base+0x910>
    c6a4:	ldur	w8, [x29, #-144]
    c6a8:	mov	w9, wzr
    c6ac:	mov	w10, #0x1                   	// #1
    c6b0:	cmp	w8, #0x0
    c6b4:	csel	w8, w9, w10, eq  // eq = none
    c6b8:	str	w8, [sp, #8]
    c6bc:	ldr	w8, [sp, #8]
    c6c0:	ldur	w9, [x29, #-148]
    c6c4:	cmp	w9, #0x0
    c6c8:	cset	w9, ge  // ge = tcont
    c6cc:	str	w8, [sp, #4]
    c6d0:	tbnz	w9, #0, c6e0 <mpc_exp@@Base+0x934>
    c6d4:	mov	w8, #0x2                   	// #2
    c6d8:	str	w8, [sp]
    c6dc:	b	c6f8 <mpc_exp@@Base+0x94c>
    c6e0:	ldur	w8, [x29, #-148]
    c6e4:	mov	w9, wzr
    c6e8:	mov	w10, #0x1                   	// #1
    c6ec:	cmp	w8, #0x0
    c6f0:	csel	w8, w9, w10, eq  // eq = none
    c6f4:	str	w8, [sp]
    c6f8:	ldr	w8, [sp]
    c6fc:	ldr	w9, [sp, #4]
    c700:	orr	w8, w9, w8, lsl #2
    c704:	stur	w8, [x29, #-4]
    c708:	ldur	w0, [x29, #-4]
    c70c:	ldr	x28, [sp, #464]
    c710:	ldp	x29, x30, [sp, #448]
    c714:	add	sp, sp, #0x1e0
    c718:	ret

000000000000c71c <mpc_fma_naive@@Base>:
    c71c:	sub	sp, sp, #0x1a0
    c720:	stp	x29, x30, [sp, #384]
    c724:	str	x28, [sp, #400]
    c728:	add	x29, sp, #0x180
    c72c:	mov	w8, #0x1                   	// #1
    c730:	sub	x9, x29, #0x48
    c734:	sub	x10, x29, #0x68
    c738:	sub	x11, x29, #0x88
    c73c:	sub	x12, x29, #0xa8
    c740:	stur	x0, [x29, #-8]
    c744:	stur	x1, [x29, #-16]
    c748:	stur	x2, [x29, #-24]
    c74c:	stur	x3, [x29, #-32]
    c750:	stur	w4, [x29, #-36]
    c754:	ldur	x13, [x29, #-16]
    c758:	ldr	x13, [x13]
    c75c:	ldur	x14, [x29, #-24]
    c760:	ldr	x14, [x14]
    c764:	add	x1, x13, x14
    c768:	mov	x0, x9
    c76c:	str	w8, [sp, #124]
    c770:	str	x9, [sp, #112]
    c774:	str	x10, [sp, #104]
    c778:	str	x11, [sp, #96]
    c77c:	str	x12, [sp, #88]
    c780:	bl	5530 <mpfr_init2@plt>
    c784:	ldur	x9, [x29, #-16]
    c788:	ldr	x9, [x9]
    c78c:	ldur	x10, [x29, #-24]
    c790:	ldr	x10, [x10, #32]
    c794:	add	x1, x9, x10
    c798:	ldr	x0, [sp, #104]
    c79c:	bl	5530 <mpfr_init2@plt>
    c7a0:	ldur	x9, [x29, #-16]
    c7a4:	ldr	x9, [x9, #32]
    c7a8:	ldur	x10, [x29, #-24]
    c7ac:	ldr	x10, [x10]
    c7b0:	add	x1, x9, x10
    c7b4:	ldr	x0, [sp, #96]
    c7b8:	bl	5530 <mpfr_init2@plt>
    c7bc:	ldur	x9, [x29, #-16]
    c7c0:	ldr	x9, [x9, #32]
    c7c4:	ldur	x10, [x29, #-24]
    c7c8:	ldr	x10, [x10, #32]
    c7cc:	add	x1, x9, x10
    c7d0:	ldr	x0, [sp, #88]
    c7d4:	bl	5530 <mpfr_init2@plt>
    c7d8:	ldur	x1, [x29, #-16]
    c7dc:	ldur	x2, [x29, #-24]
    c7e0:	ldr	x0, [sp, #112]
    c7e4:	ldr	w3, [sp, #124]
    c7e8:	bl	4c50 <mpfr_mul@plt>
    c7ec:	ldur	x1, [x29, #-16]
    c7f0:	ldur	x9, [x29, #-24]
    c7f4:	add	x2, x9, #0x20
    c7f8:	ldr	x9, [sp, #104]
    c7fc:	mov	x0, x9
    c800:	ldr	w3, [sp, #124]
    c804:	bl	4c50 <mpfr_mul@plt>
    c808:	ldur	x9, [x29, #-16]
    c80c:	add	x1, x9, #0x20
    c810:	ldur	x2, [x29, #-24]
    c814:	ldr	x9, [sp, #96]
    c818:	mov	x0, x9
    c81c:	ldr	w3, [sp, #124]
    c820:	bl	4c50 <mpfr_mul@plt>
    c824:	ldur	x9, [x29, #-16]
    c828:	add	x1, x9, #0x20
    c82c:	ldur	x9, [x29, #-24]
    c830:	add	x2, x9, #0x20
    c834:	ldr	x9, [sp, #88]
    c838:	mov	x0, x9
    c83c:	ldr	w3, [sp, #124]
    c840:	bl	4c50 <mpfr_mul@plt>
    c844:	ldr	x9, [sp, #112]
    c848:	mov	x0, x9
    c84c:	ldr	x1, [sp, #88]
    c850:	bl	cbac <mpc_fma_naive@@Base+0x490>
    c854:	str	x0, [sp, #176]
    c858:	ldur	x1, [x29, #-32]
    c85c:	ldr	x0, [sp, #112]
    c860:	bl	cbac <mpc_fma_naive@@Base+0x490>
    c864:	str	x0, [sp, #168]
    c868:	ldur	x1, [x29, #-32]
    c86c:	ldr	x0, [sp, #88]
    c870:	bl	cbac <mpc_fma_naive@@Base+0x490>
    c874:	str	x0, [sp, #160]
    c878:	ldr	x9, [sp, #176]
    c87c:	ldr	x10, [sp, #168]
    c880:	cmp	x9, x10
    c884:	b.gt	c8e4 <mpc_fma_naive@@Base+0x1c8>
    c888:	ldr	x8, [sp, #176]
    c88c:	ldr	x9, [sp, #160]
    c890:	cmp	x8, x9
    c894:	b.gt	c8e4 <mpc_fma_naive@@Base+0x1c8>
    c898:	ldr	x1, [sp, #176]
    c89c:	add	x8, sp, #0xb8
    c8a0:	mov	x0, x8
    c8a4:	str	x8, [sp, #80]
    c8a8:	bl	5530 <mpfr_init2@plt>
    c8ac:	ldr	x0, [sp, #80]
    c8b0:	sub	x1, x29, #0x48
    c8b4:	sub	x2, x29, #0xa8
    c8b8:	mov	w3, #0x1                   	// #1
    c8bc:	bl	4b40 <mpfr_sub@plt>
    c8c0:	ldur	x8, [x29, #-8]
    c8c4:	ldur	x2, [x29, #-32]
    c8c8:	ldur	w9, [x29, #-36]
    c8cc:	and	w3, w9, #0xf
    c8d0:	mov	x0, x8
    c8d4:	ldr	x1, [sp, #80]
    c8d8:	bl	4f50 <mpfr_add@plt>
    c8dc:	str	w0, [sp, #132]
    c8e0:	b	c988 <mpc_fma_naive@@Base+0x26c>
    c8e4:	ldr	x8, [sp, #168]
    c8e8:	ldr	x9, [sp, #160]
    c8ec:	cmp	x8, x9
    c8f0:	b.gt	c940 <mpc_fma_naive@@Base+0x224>
    c8f4:	ldr	x1, [sp, #168]
    c8f8:	add	x8, sp, #0xb8
    c8fc:	mov	x0, x8
    c900:	str	x8, [sp, #72]
    c904:	bl	5530 <mpfr_init2@plt>
    c908:	ldur	x2, [x29, #-32]
    c90c:	ldr	x0, [sp, #72]
    c910:	sub	x1, x29, #0x48
    c914:	mov	w3, #0x1                   	// #1
    c918:	bl	4f50 <mpfr_add@plt>
    c91c:	ldur	x8, [x29, #-8]
    c920:	ldur	w9, [x29, #-36]
    c924:	and	w3, w9, #0xf
    c928:	mov	x0, x8
    c92c:	ldr	x1, [sp, #72]
    c930:	sub	x2, x29, #0xa8
    c934:	bl	4b40 <mpfr_sub@plt>
    c938:	str	w0, [sp, #132]
    c93c:	b	c988 <mpc_fma_naive@@Base+0x26c>
    c940:	ldr	x1, [sp, #160]
    c944:	add	x8, sp, #0xb8
    c948:	mov	x0, x8
    c94c:	str	x8, [sp, #64]
    c950:	bl	5530 <mpfr_init2@plt>
    c954:	ldur	x1, [x29, #-32]
    c958:	ldr	x0, [sp, #64]
    c95c:	sub	x2, x29, #0xa8
    c960:	mov	w3, #0x1                   	// #1
    c964:	bl	4b40 <mpfr_sub@plt>
    c968:	ldur	x8, [x29, #-8]
    c96c:	ldur	w9, [x29, #-36]
    c970:	and	w3, w9, #0xf
    c974:	mov	x0, x8
    c978:	ldr	x1, [sp, #64]
    c97c:	sub	x2, x29, #0x48
    c980:	bl	4f50 <mpfr_add@plt>
    c984:	str	w0, [sp, #132]
    c988:	sub	x8, x29, #0x68
    c98c:	mov	x0, x8
    c990:	sub	x9, x29, #0x88
    c994:	mov	x1, x9
    c998:	str	x8, [sp, #56]
    c99c:	str	x9, [sp, #48]
    c9a0:	bl	cbac <mpc_fma_naive@@Base+0x490>
    c9a4:	str	x0, [sp, #152]
    c9a8:	ldur	x8, [x29, #-32]
    c9ac:	add	x1, x8, #0x20
    c9b0:	ldr	x0, [sp, #56]
    c9b4:	bl	cbac <mpc_fma_naive@@Base+0x490>
    c9b8:	str	x0, [sp, #144]
    c9bc:	ldur	x8, [x29, #-32]
    c9c0:	add	x1, x8, #0x20
    c9c4:	ldr	x0, [sp, #48]
    c9c8:	bl	cbac <mpc_fma_naive@@Base+0x490>
    c9cc:	str	x0, [sp, #136]
    c9d0:	ldr	x8, [sp, #152]
    c9d4:	ldr	x9, [sp, #144]
    c9d8:	cmp	x8, x9
    c9dc:	b.gt	ca44 <mpc_fma_naive@@Base+0x328>
    c9e0:	ldr	x8, [sp, #152]
    c9e4:	ldr	x9, [sp, #136]
    c9e8:	cmp	x8, x9
    c9ec:	b.gt	ca44 <mpc_fma_naive@@Base+0x328>
    c9f0:	ldr	x1, [sp, #152]
    c9f4:	add	x8, sp, #0xb8
    c9f8:	mov	x0, x8
    c9fc:	str	x8, [sp, #40]
    ca00:	bl	4d40 <mpfr_set_prec@plt>
    ca04:	ldr	x0, [sp, #40]
    ca08:	sub	x1, x29, #0x68
    ca0c:	sub	x2, x29, #0x88
    ca10:	mov	w3, #0x1                   	// #1
    ca14:	bl	4f50 <mpfr_add@plt>
    ca18:	ldur	x8, [x29, #-8]
    ca1c:	add	x8, x8, #0x20
    ca20:	ldur	x9, [x29, #-32]
    ca24:	add	x2, x9, #0x20
    ca28:	ldur	w10, [x29, #-36]
    ca2c:	asr	w3, w10, #4
    ca30:	mov	x0, x8
    ca34:	ldr	x1, [sp, #40]
    ca38:	bl	4f50 <mpfr_add@plt>
    ca3c:	str	w0, [sp, #128]
    ca40:	b	caf8 <mpc_fma_naive@@Base+0x3dc>
    ca44:	ldr	x8, [sp, #144]
    ca48:	ldr	x9, [sp, #136]
    ca4c:	cmp	x8, x9
    ca50:	b.gt	caa8 <mpc_fma_naive@@Base+0x38c>
    ca54:	ldr	x1, [sp, #144]
    ca58:	add	x8, sp, #0xb8
    ca5c:	mov	x0, x8
    ca60:	str	x8, [sp, #32]
    ca64:	bl	4d40 <mpfr_set_prec@plt>
    ca68:	ldur	x8, [x29, #-32]
    ca6c:	add	x2, x8, #0x20
    ca70:	ldr	x0, [sp, #32]
    ca74:	sub	x1, x29, #0x68
    ca78:	mov	w3, #0x1                   	// #1
    ca7c:	bl	4f50 <mpfr_add@plt>
    ca80:	ldur	x8, [x29, #-8]
    ca84:	add	x8, x8, #0x20
    ca88:	ldur	w9, [x29, #-36]
    ca8c:	asr	w3, w9, #4
    ca90:	mov	x0, x8
    ca94:	ldr	x1, [sp, #32]
    ca98:	sub	x2, x29, #0x88
    ca9c:	bl	4f50 <mpfr_add@plt>
    caa0:	str	w0, [sp, #128]
    caa4:	b	caf8 <mpc_fma_naive@@Base+0x3dc>
    caa8:	ldr	x1, [sp, #160]
    caac:	add	x8, sp, #0xb8
    cab0:	mov	x0, x8
    cab4:	str	x8, [sp, #24]
    cab8:	bl	4d40 <mpfr_set_prec@plt>
    cabc:	ldur	x8, [x29, #-32]
    cac0:	add	x1, x8, #0x20
    cac4:	ldr	x0, [sp, #24]
    cac8:	sub	x2, x29, #0x88
    cacc:	mov	w3, #0x1                   	// #1
    cad0:	bl	4f50 <mpfr_add@plt>
    cad4:	ldur	x8, [x29, #-8]
    cad8:	add	x8, x8, #0x20
    cadc:	ldur	w9, [x29, #-36]
    cae0:	asr	w3, w9, #4
    cae4:	mov	x0, x8
    cae8:	ldr	x1, [sp, #24]
    caec:	sub	x2, x29, #0x68
    caf0:	bl	4f50 <mpfr_add@plt>
    caf4:	str	w0, [sp, #128]
    caf8:	sub	x0, x29, #0x48
    cafc:	bl	4e30 <mpfr_clear@plt>
    cb00:	sub	x0, x29, #0x68
    cb04:	bl	4e30 <mpfr_clear@plt>
    cb08:	sub	x0, x29, #0x88
    cb0c:	bl	4e30 <mpfr_clear@plt>
    cb10:	sub	x0, x29, #0xa8
    cb14:	bl	4e30 <mpfr_clear@plt>
    cb18:	add	x0, sp, #0xb8
    cb1c:	bl	4e30 <mpfr_clear@plt>
    cb20:	ldr	w8, [sp, #132]
    cb24:	cmp	w8, #0x0
    cb28:	cset	w8, ge  // ge = tcont
    cb2c:	tbnz	w8, #0, cb3c <mpc_fma_naive@@Base+0x420>
    cb30:	mov	w8, #0x2                   	// #2
    cb34:	str	w8, [sp, #20]
    cb38:	b	cb54 <mpc_fma_naive@@Base+0x438>
    cb3c:	ldr	w8, [sp, #132]
    cb40:	mov	w9, wzr
    cb44:	mov	w10, #0x1                   	// #1
    cb48:	cmp	w8, #0x0
    cb4c:	csel	w8, w9, w10, eq  // eq = none
    cb50:	str	w8, [sp, #20]
    cb54:	ldr	w8, [sp, #20]
    cb58:	ldr	w9, [sp, #128]
    cb5c:	cmp	w9, #0x0
    cb60:	cset	w9, ge  // ge = tcont
    cb64:	str	w8, [sp, #16]
    cb68:	tbnz	w9, #0, cb78 <mpc_fma_naive@@Base+0x45c>
    cb6c:	mov	w8, #0x2                   	// #2
    cb70:	str	w8, [sp, #12]
    cb74:	b	cb90 <mpc_fma_naive@@Base+0x474>
    cb78:	ldr	w8, [sp, #128]
    cb7c:	mov	w9, wzr
    cb80:	mov	w10, #0x1                   	// #1
    cb84:	cmp	w8, #0x0
    cb88:	csel	w8, w9, w10, eq  // eq = none
    cb8c:	str	w8, [sp, #12]
    cb90:	ldr	w8, [sp, #12]
    cb94:	ldr	w9, [sp, #16]
    cb98:	orr	w0, w9, w8, lsl #2
    cb9c:	ldr	x28, [sp, #400]
    cba0:	ldp	x29, x30, [sp, #384]
    cba4:	add	sp, sp, #0x1a0
    cba8:	ret
    cbac:	sub	sp, sp, #0x50
    cbb0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    cbb4:	str	x0, [sp, #64]
    cbb8:	str	x1, [sp, #56]
    cbbc:	ldr	x9, [sp, #64]
    cbc0:	ldr	x9, [x9, #16]
    cbc4:	cmp	x9, x8
    cbc8:	b.gt	cbdc <mpc_fma_naive@@Base+0x4c0>
    cbcc:	ldr	x8, [sp, #56]
    cbd0:	ldr	x8, [x8]
    cbd4:	str	x8, [sp, #72]
    cbd8:	b	cca4 <mpc_fma_naive@@Base+0x588>
    cbdc:	ldr	x8, [sp, #56]
    cbe0:	ldr	x8, [x8, #16]
    cbe4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    cbe8:	cmp	x8, x9
    cbec:	b.gt	cc00 <mpc_fma_naive@@Base+0x4e4>
    cbf0:	ldr	x8, [sp, #64]
    cbf4:	ldr	x8, [x8]
    cbf8:	str	x8, [sp, #72]
    cbfc:	b	cca4 <mpc_fma_naive@@Base+0x588>
    cc00:	ldr	x8, [sp, #64]
    cc04:	ldr	x8, [x8, #16]
    cc08:	str	x8, [sp, #48]
    cc0c:	ldr	x8, [sp, #56]
    cc10:	ldr	x8, [x8, #16]
    cc14:	str	x8, [sp, #40]
    cc18:	ldr	x8, [sp, #48]
    cc1c:	ldr	x9, [sp, #64]
    cc20:	ldr	x9, [x9]
    cc24:	subs	x8, x8, x9
    cc28:	str	x8, [sp, #32]
    cc2c:	ldr	x8, [sp, #40]
    cc30:	ldr	x9, [sp, #56]
    cc34:	ldr	x9, [x9]
    cc38:	subs	x8, x8, x9
    cc3c:	str	x8, [sp, #24]
    cc40:	ldr	x8, [sp, #48]
    cc44:	ldr	x9, [sp, #40]
    cc48:	cmp	x8, x9
    cc4c:	b.lt	cc5c <mpc_fma_naive@@Base+0x540>  // b.tstop
    cc50:	ldr	x8, [sp, #48]
    cc54:	str	x8, [sp, #16]
    cc58:	b	cc64 <mpc_fma_naive@@Base+0x548>
    cc5c:	ldr	x8, [sp, #40]
    cc60:	str	x8, [sp, #16]
    cc64:	ldr	x8, [sp, #16]
    cc68:	add	x8, x8, #0x1
    cc6c:	ldr	x9, [sp, #32]
    cc70:	ldr	x10, [sp, #24]
    cc74:	cmp	x9, x10
    cc78:	str	x8, [sp, #8]
    cc7c:	b.gt	cc8c <mpc_fma_naive@@Base+0x570>
    cc80:	ldr	x8, [sp, #32]
    cc84:	str	x8, [sp]
    cc88:	b	cc94 <mpc_fma_naive@@Base+0x578>
    cc8c:	ldr	x8, [sp, #24]
    cc90:	str	x8, [sp]
    cc94:	ldr	x8, [sp]
    cc98:	ldr	x9, [sp, #8]
    cc9c:	subs	x8, x9, x8
    cca0:	str	x8, [sp, #72]
    cca4:	ldr	x0, [sp, #72]
    cca8:	add	sp, sp, #0x50
    ccac:	ret

000000000000ccb0 <mpc_fma@@Base>:
    ccb0:	sub	sp, sp, #0x120
    ccb4:	stp	x29, x30, [sp, #256]
    ccb8:	str	x28, [sp, #272]
    ccbc:	add	x29, sp, #0x100
    ccc0:	stur	x0, [x29, #-16]
    ccc4:	stur	x1, [x29, #-24]
    ccc8:	stur	x2, [x29, #-32]
    cccc:	stur	x3, [x29, #-40]
    ccd0:	stur	w4, [x29, #-44]
    ccd4:	str	wzr, [sp, #88]
    ccd8:	str	wzr, [sp, #84]
    ccdc:	str	wzr, [sp, #80]
    cce0:	ldur	x0, [x29, #-24]
    cce4:	bl	55c0 <mpfr_number_p@plt>
    cce8:	mov	w8, #0x0                   	// #0
    ccec:	str	w8, [sp, #76]
    ccf0:	cbz	w0, cd0c <mpc_fma@@Base+0x5c>
    ccf4:	ldur	x8, [x29, #-24]
    ccf8:	add	x0, x8, #0x20
    ccfc:	bl	55c0 <mpfr_number_p@plt>
    cd00:	cmp	w0, #0x0
    cd04:	cset	w9, ne  // ne = any
    cd08:	str	w9, [sp, #76]
    cd0c:	ldr	w8, [sp, #76]
    cd10:	and	w8, w8, #0x1
    cd14:	cbz	w8, cd88 <mpc_fma@@Base+0xd8>
    cd18:	ldur	x0, [x29, #-32]
    cd1c:	bl	55c0 <mpfr_number_p@plt>
    cd20:	mov	w8, #0x0                   	// #0
    cd24:	str	w8, [sp, #72]
    cd28:	cbz	w0, cd44 <mpc_fma@@Base+0x94>
    cd2c:	ldur	x8, [x29, #-32]
    cd30:	add	x0, x8, #0x20
    cd34:	bl	55c0 <mpfr_number_p@plt>
    cd38:	cmp	w0, #0x0
    cd3c:	cset	w9, ne  // ne = any
    cd40:	str	w9, [sp, #72]
    cd44:	ldr	w8, [sp, #72]
    cd48:	and	w8, w8, #0x1
    cd4c:	cbz	w8, cd88 <mpc_fma@@Base+0xd8>
    cd50:	ldur	x0, [x29, #-40]
    cd54:	bl	55c0 <mpfr_number_p@plt>
    cd58:	mov	w8, #0x0                   	// #0
    cd5c:	str	w8, [sp, #68]
    cd60:	cbz	w0, cd7c <mpc_fma@@Base+0xcc>
    cd64:	ldur	x8, [x29, #-40]
    cd68:	add	x0, x8, #0x20
    cd6c:	bl	55c0 <mpfr_number_p@plt>
    cd70:	cmp	w0, #0x0
    cd74:	cset	w9, ne  // ne = any
    cd78:	str	w9, [sp, #68]
    cd7c:	ldr	w8, [sp, #68]
    cd80:	and	w8, w8, #0x1
    cd84:	cbnz	w8, cda8 <mpc_fma@@Base+0xf8>
    cd88:	ldur	x0, [x29, #-16]
    cd8c:	ldur	x1, [x29, #-24]
    cd90:	ldur	x2, [x29, #-32]
    cd94:	ldur	x3, [x29, #-40]
    cd98:	ldur	w4, [x29, #-44]
    cd9c:	bl	5660 <mpc_fma_naive@plt>
    cda0:	stur	w0, [x29, #-4]
    cda4:	b	d0e8 <mpc_fma@@Base+0x438>
    cda8:	ldur	x8, [x29, #-16]
    cdac:	ldr	x8, [x8]
    cdb0:	stur	x8, [x29, #-120]
    cdb4:	ldur	x8, [x29, #-16]
    cdb8:	ldr	x8, [x8, #32]
    cdbc:	str	x8, [sp, #128]
    cdc0:	ldur	x8, [x29, #-120]
    cdc4:	ldur	x0, [x29, #-120]
    cdc8:	str	x8, [sp, #56]
    cdcc:	bl	4de0 <mpc_ceil_log2@plt>
    cdd0:	ldr	x8, [sp, #56]
    cdd4:	add	x9, x8, x0
    cdd8:	add	x9, x9, #0xa
    cddc:	str	x9, [sp, #120]
    cde0:	ldr	x9, [sp, #128]
    cde4:	ldr	x0, [sp, #128]
    cde8:	str	x9, [sp, #48]
    cdec:	bl	4de0 <mpc_ceil_log2@plt>
    cdf0:	ldr	x8, [sp, #48]
    cdf4:	add	x9, x8, x0
    cdf8:	add	x9, x9, #0xa
    cdfc:	str	x9, [sp, #112]
    ce00:	ldr	x1, [sp, #120]
    ce04:	ldr	x2, [sp, #112]
    ce08:	sub	x0, x29, #0x70
    ce0c:	bl	54c0 <mpc_init3@plt>
    ce10:	str	wzr, [sp, #92]
    ce14:	ldr	w8, [sp, #92]
    ce18:	cmp	w8, #0x2
    ce1c:	b.ge	d0a0 <mpc_fma@@Base+0x3f0>  // b.tcont
    ce20:	ldur	x1, [x29, #-24]
    ce24:	ldur	x2, [x29, #-32]
    ce28:	sub	x0, x29, #0x70
    ce2c:	mov	w3, #0x11                  	// #17
    ce30:	bl	4fd0 <mpc_mul@plt>
    ce34:	ldur	x8, [x29, #-96]
    ce38:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    ce3c:	cmp	x8, x9
    ce40:	b.eq	ce54 <mpc_fma@@Base+0x1a4>  // b.none
    ce44:	ldur	x8, [x29, #-64]
    ce48:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    ce4c:	cmp	x8, x9
    ce50:	b.ne	ce58 <mpc_fma@@Base+0x1a8>  // b.any
    ce54:	b	d0a0 <mpc_fma@@Base+0x3f0>
    ce58:	sub	x8, x29, #0x70
    ce5c:	ldur	x9, [x29, #-96]
    ce60:	str	x9, [sp, #104]
    ce64:	ldur	x9, [x29, #-64]
    ce68:	str	x9, [sp, #96]
    ce6c:	ldur	x2, [x29, #-40]
    ce70:	mov	x0, x8
    ce74:	mov	x1, x8
    ce78:	mov	w3, #0x11                  	// #17
    ce7c:	bl	4d90 <mpc_add@plt>
    ce80:	ldur	x8, [x29, #-96]
    ce84:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    ce88:	cmp	x8, x9
    ce8c:	b.eq	cea0 <mpc_fma@@Base+0x1f0>  // b.none
    ce90:	ldur	x8, [x29, #-64]
    ce94:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    ce98:	cmp	x8, x9
    ce9c:	b.ne	cea4 <mpc_fma@@Base+0x1f4>  // b.any
    cea0:	b	d0a0 <mpc_fma@@Base+0x3f0>
    cea4:	ldur	x8, [x29, #-96]
    cea8:	ldr	x9, [sp, #104]
    ceac:	subs	x8, x9, x8
    ceb0:	str	x8, [sp, #104]
    ceb4:	ldur	x8, [x29, #-64]
    ceb8:	ldr	x9, [sp, #96]
    cebc:	subs	x8, x9, x8
    cec0:	str	x8, [sp, #96]
    cec4:	ldr	x8, [sp, #104]
    cec8:	cmp	x8, #0x0
    cecc:	cset	w10, le
    ced0:	tbnz	w10, #0, cee4 <mpc_fma@@Base+0x234>
    ced4:	ldr	x8, [sp, #104]
    ced8:	add	x8, x8, #0x1
    cedc:	str	x8, [sp, #40]
    cee0:	b	ceec <mpc_fma@@Base+0x23c>
    cee4:	mov	x8, #0x1                   	// #1
    cee8:	str	x8, [sp, #40]
    ceec:	ldr	x8, [sp, #40]
    cef0:	str	x8, [sp, #104]
    cef4:	ldr	x8, [sp, #96]
    cef8:	cmp	x8, #0x0
    cefc:	cset	w9, le
    cf00:	tbnz	w9, #0, cf14 <mpc_fma@@Base+0x264>
    cf04:	ldr	x8, [sp, #96]
    cf08:	add	x8, x8, #0x1
    cf0c:	str	x8, [sp, #32]
    cf10:	b	cf1c <mpc_fma@@Base+0x26c>
    cf14:	mov	x8, #0x1                   	// #1
    cf18:	str	x8, [sp, #32]
    cf1c:	ldr	x8, [sp, #32]
    cf20:	str	x8, [sp, #96]
    cf24:	ldr	x8, [sp, #104]
    cf28:	ldr	x9, [sp, #120]
    cf2c:	cmp	x8, x9
    cf30:	b.le	cf40 <mpc_fma@@Base+0x290>
    cf34:	mov	w8, wzr
    cf38:	str	w8, [sp, #28]
    cf3c:	b	cf7c <mpc_fma@@Base+0x2cc>
    cf40:	ldr	x8, [sp, #120]
    cf44:	ldr	x9, [sp, #104]
    cf48:	subs	x1, x8, x9
    cf4c:	ldur	x8, [x29, #-120]
    cf50:	ldur	w10, [x29, #-44]
    cf54:	mov	w11, wzr
    cf58:	tst	w10, #0xf
    cf5c:	cset	w10, eq  // eq = none
    cf60:	and	w10, w10, #0x1
    cf64:	add	x4, x8, w10, sxtw
    cf68:	sub	x0, x29, #0x70
    cf6c:	mov	w2, w11
    cf70:	mov	w3, #0x1                   	// #1
    cf74:	bl	5540 <mpfr_can_round@plt>
    cf78:	str	w0, [sp, #28]
    cf7c:	ldr	w8, [sp, #28]
    cf80:	str	w8, [sp, #84]
    cf84:	ldr	x9, [sp, #96]
    cf88:	ldr	x10, [sp, #112]
    cf8c:	cmp	x9, x10
    cf90:	b.le	cfa0 <mpc_fma@@Base+0x2f0>
    cf94:	mov	w8, wzr
    cf98:	str	w8, [sp, #24]
    cf9c:	b	cfe4 <mpc_fma@@Base+0x334>
    cfa0:	sub	x8, x29, #0x70
    cfa4:	add	x0, x8, #0x20
    cfa8:	ldr	x8, [sp, #112]
    cfac:	ldr	x9, [sp, #96]
    cfb0:	subs	x1, x8, x9
    cfb4:	ldr	x8, [sp, #128]
    cfb8:	ldur	w10, [x29, #-44]
    cfbc:	asr	w10, w10, #4
    cfc0:	mov	w11, wzr
    cfc4:	cmp	w10, #0x0
    cfc8:	cset	w10, eq  // eq = none
    cfcc:	and	w10, w10, #0x1
    cfd0:	add	x4, x8, w10, sxtw
    cfd4:	mov	w2, w11
    cfd8:	mov	w3, #0x1                   	// #1
    cfdc:	bl	5540 <mpfr_can_round@plt>
    cfe0:	str	w0, [sp, #24]
    cfe4:	ldr	w8, [sp, #24]
    cfe8:	str	w8, [sp, #80]
    cfec:	ldr	w8, [sp, #84]
    cff0:	cbz	w8, d014 <mpc_fma@@Base+0x364>
    cff4:	ldr	w8, [sp, #80]
    cff8:	cbz	w8, d014 <mpc_fma@@Base+0x364>
    cffc:	ldur	x0, [x29, #-16]
    d000:	ldur	w2, [x29, #-44]
    d004:	sub	x1, x29, #0x70
    d008:	bl	5680 <mpc_set@plt>
    d00c:	str	w0, [sp, #88]
    d010:	b	d0a0 <mpc_fma@@Base+0x3f0>
    d014:	ldr	w8, [sp, #92]
    d018:	cmp	w8, #0x1
    d01c:	b.ne	d024 <mpc_fma@@Base+0x374>  // b.any
    d020:	b	d0a0 <mpc_fma@@Base+0x3f0>
    d024:	ldr	w8, [sp, #84]
    d028:	cbnz	w8, d048 <mpc_fma@@Base+0x398>
    d02c:	ldr	x8, [sp, #104]
    d030:	cmp	x8, #0x1
    d034:	b.le	d048 <mpc_fma@@Base+0x398>
    d038:	ldr	x8, [sp, #104]
    d03c:	ldr	x9, [sp, #120]
    d040:	add	x8, x9, x8
    d044:	str	x8, [sp, #120]
    d048:	ldr	w8, [sp, #80]
    d04c:	cbnz	w8, d06c <mpc_fma@@Base+0x3bc>
    d050:	ldr	x8, [sp, #96]
    d054:	cmp	x8, #0x1
    d058:	b.le	d06c <mpc_fma@@Base+0x3bc>
    d05c:	ldr	x8, [sp, #96]
    d060:	ldr	x9, [sp, #112]
    d064:	add	x8, x9, x8
    d068:	str	x8, [sp, #112]
    d06c:	ldr	x1, [sp, #120]
    d070:	sub	x8, x29, #0x70
    d074:	mov	x0, x8
    d078:	str	x8, [sp, #16]
    d07c:	bl	4d40 <mpfr_set_prec@plt>
    d080:	ldr	x8, [sp, #16]
    d084:	add	x0, x8, #0x20
    d088:	ldr	x1, [sp, #112]
    d08c:	bl	4d40 <mpfr_set_prec@plt>
    d090:	ldr	w8, [sp, #92]
    d094:	add	w8, w8, #0x1
    d098:	str	w8, [sp, #92]
    d09c:	b	ce14 <mpc_fma@@Base+0x164>
    d0a0:	sub	x0, x29, #0x70
    d0a4:	bl	4af0 <mpc_clear@plt>
    d0a8:	ldr	w8, [sp, #84]
    d0ac:	cbz	w8, d0c4 <mpc_fma@@Base+0x414>
    d0b0:	ldr	w8, [sp, #80]
    d0b4:	cbz	w8, d0c4 <mpc_fma@@Base+0x414>
    d0b8:	ldr	w8, [sp, #88]
    d0bc:	str	w8, [sp, #12]
    d0c0:	b	d0e0 <mpc_fma@@Base+0x430>
    d0c4:	ldur	x0, [x29, #-16]
    d0c8:	ldur	x1, [x29, #-24]
    d0cc:	ldur	x2, [x29, #-32]
    d0d0:	ldur	x3, [x29, #-40]
    d0d4:	ldur	w4, [x29, #-44]
    d0d8:	bl	5660 <mpc_fma_naive@plt>
    d0dc:	str	w0, [sp, #12]
    d0e0:	ldr	w8, [sp, #12]
    d0e4:	stur	w8, [x29, #-4]
    d0e8:	ldur	w0, [x29, #-4]
    d0ec:	ldr	x28, [sp, #272]
    d0f0:	ldp	x29, x30, [sp, #256]
    d0f4:	add	sp, sp, #0x120
    d0f8:	ret

000000000000d0fc <mpc_fr_div@@Base>:
    d0fc:	sub	sp, sp, #0xa0
    d100:	stp	x29, x30, [sp, #144]
    d104:	add	x29, sp, #0x90
    d108:	mov	w8, #0x1                   	// #1
    d10c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    d110:	add	x10, sp, #0x30
    d114:	stur	x0, [x29, #-8]
    d118:	stur	x1, [x29, #-16]
    d11c:	stur	x2, [x29, #-24]
    d120:	stur	w3, [x29, #-28]
    d124:	ldur	x11, [x29, #-16]
    d128:	ldr	q0, [x11]
    d12c:	str	q0, [sp, #48]
    d130:	ldr	q0, [x11, #16]
    d134:	str	q0, [sp, #64]
    d138:	add	x0, x10, #0x20
    d13c:	str	w8, [sp, #24]
    d140:	str	x9, [sp, #16]
    d144:	str	x10, [sp, #8]
    d148:	bl	4b80 <mpfr_init@plt>
    d14c:	ldr	x9, [sp, #8]
    d150:	add	x10, x9, #0x20
    d154:	str	x10, [sp, #32]
    d158:	ldr	x10, [sp, #32]
    d15c:	ldr	w8, [sp, #24]
    d160:	str	w8, [x10, #8]
    d164:	ldr	x10, [sp, #32]
    d168:	ldr	x11, [sp, #16]
    d16c:	str	x11, [x10, #16]
    d170:	str	wzr, [sp, #28]
    d174:	ldur	x0, [x29, #-8]
    d178:	ldur	x2, [x29, #-24]
    d17c:	ldur	w3, [x29, #-28]
    d180:	mov	x1, x9
    d184:	bl	5350 <mpc_div@plt>
    d188:	str	w0, [sp, #44]
    d18c:	ldr	x9, [sp, #8]
    d190:	add	x0, x9, #0x20
    d194:	bl	4e30 <mpfr_clear@plt>
    d198:	ldr	w0, [sp, #44]
    d19c:	ldp	x29, x30, [sp, #144]
    d1a0:	add	sp, sp, #0xa0
    d1a4:	ret

000000000000d1a8 <mpc_fr_sub@@Base>:
    d1a8:	sub	sp, sp, #0x40
    d1ac:	stp	x29, x30, [sp, #48]
    d1b0:	add	x29, sp, #0x30
    d1b4:	stur	x0, [x29, #-8]
    d1b8:	stur	x1, [x29, #-16]
    d1bc:	str	x2, [sp, #24]
    d1c0:	str	w3, [sp, #20]
    d1c4:	ldur	x0, [x29, #-8]
    d1c8:	ldur	x1, [x29, #-16]
    d1cc:	ldr	x2, [sp, #24]
    d1d0:	ldr	w8, [sp, #20]
    d1d4:	and	w3, w8, #0xf
    d1d8:	bl	4b40 <mpfr_sub@plt>
    d1dc:	str	w0, [sp, #16]
    d1e0:	ldur	x9, [x29, #-8]
    d1e4:	add	x0, x9, #0x20
    d1e8:	ldr	x9, [sp, #24]
    d1ec:	add	x1, x9, #0x20
    d1f0:	ldr	w8, [sp, #20]
    d1f4:	asr	w2, w8, #4
    d1f8:	bl	4c60 <mpfr_neg@plt>
    d1fc:	str	w0, [sp, #12]
    d200:	ldr	w8, [sp, #16]
    d204:	cmp	w8, #0x0
    d208:	cset	w8, ge  // ge = tcont
    d20c:	tbnz	w8, #0, d21c <mpc_fr_sub@@Base+0x74>
    d210:	mov	w8, #0x2                   	// #2
    d214:	str	w8, [sp, #8]
    d218:	b	d234 <mpc_fr_sub@@Base+0x8c>
    d21c:	ldr	w8, [sp, #16]
    d220:	mov	w9, wzr
    d224:	mov	w10, #0x1                   	// #1
    d228:	cmp	w8, #0x0
    d22c:	csel	w8, w9, w10, eq  // eq = none
    d230:	str	w8, [sp, #8]
    d234:	ldr	w8, [sp, #8]
    d238:	ldr	w9, [sp, #12]
    d23c:	cmp	w9, #0x0
    d240:	cset	w9, ge  // ge = tcont
    d244:	str	w8, [sp, #4]
    d248:	tbnz	w9, #0, d258 <mpc_fr_sub@@Base+0xb0>
    d24c:	mov	w8, #0x2                   	// #2
    d250:	str	w8, [sp]
    d254:	b	d270 <mpc_fr_sub@@Base+0xc8>
    d258:	ldr	w8, [sp, #12]
    d25c:	mov	w9, wzr
    d260:	mov	w10, #0x1                   	// #1
    d264:	cmp	w8, #0x0
    d268:	csel	w8, w9, w10, eq  // eq = none
    d26c:	str	w8, [sp]
    d270:	ldr	w8, [sp]
    d274:	ldr	w9, [sp, #4]
    d278:	orr	w0, w9, w8, lsl #2
    d27c:	ldp	x29, x30, [sp, #48]
    d280:	add	sp, sp, #0x40
    d284:	ret

000000000000d288 <mpc_get_prec2@@Base>:
    d288:	sub	sp, sp, #0x20
    d28c:	str	x0, [sp, #24]
    d290:	str	x1, [sp, #16]
    d294:	str	x2, [sp, #8]
    d298:	ldr	x8, [sp, #8]
    d29c:	ldr	x8, [x8]
    d2a0:	ldr	x9, [sp, #24]
    d2a4:	str	x8, [x9]
    d2a8:	ldr	x8, [sp, #8]
    d2ac:	ldr	x8, [x8, #32]
    d2b0:	ldr	x9, [sp, #16]
    d2b4:	str	x8, [x9]
    d2b8:	add	sp, sp, #0x20
    d2bc:	ret

000000000000d2c0 <mpc_get_prec@@Base>:
    d2c0:	sub	sp, sp, #0x20
    d2c4:	str	x0, [sp, #24]
    d2c8:	ldr	x8, [sp, #24]
    d2cc:	ldr	x8, [x8]
    d2d0:	str	x8, [sp, #16]
    d2d4:	ldr	x8, [sp, #24]
    d2d8:	ldr	x8, [x8, #32]
    d2dc:	ldr	x9, [sp, #16]
    d2e0:	cmp	x8, x9
    d2e4:	b.ne	d2f4 <mpc_get_prec@@Base+0x34>  // b.any
    d2e8:	ldr	x8, [sp, #16]
    d2ec:	str	x8, [sp, #8]
    d2f0:	b	d2fc <mpc_get_prec@@Base+0x3c>
    d2f4:	mov	x8, xzr
    d2f8:	str	x8, [sp, #8]
    d2fc:	ldr	x8, [sp, #8]
    d300:	mov	x0, x8
    d304:	add	sp, sp, #0x20
    d308:	ret

000000000000d30c <mpc_get_version@@Base>:
    d30c:	adrp	x0, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d310:	add	x0, x0, #0x381
    d314:	ret

000000000000d318 <mpc_get_dc@@Base>:
    d318:	sub	sp, sp, #0x50
    d31c:	stp	x29, x30, [sp, #64]
    d320:	add	x29, sp, #0x40
    d324:	fmov	d0, xzr
    d328:	fmov	d1, #1.000000000000000000e+00
    d32c:	stur	x0, [x29, #-24]
    d330:	stur	w1, [x29, #-28]
    d334:	ldur	x8, [x29, #-24]
    d338:	add	x0, x8, #0x20
    d33c:	ldur	w9, [x29, #-28]
    d340:	asr	w1, w9, #4
    d344:	str	d0, [sp, #24]
    d348:	str	d1, [sp, #16]
    d34c:	bl	4c30 <mpfr_get_d@plt>
    d350:	ldr	d1, [sp, #24]
    d354:	fmul	d2, d1, d0
    d358:	ldr	d3, [sp, #16]
    d35c:	fmul	d0, d3, d0
    d360:	ldur	x0, [x29, #-24]
    d364:	ldur	w9, [x29, #-28]
    d368:	and	w1, w9, #0xf
    d36c:	str	d2, [sp, #8]
    d370:	str	d0, [sp]
    d374:	bl	4c30 <mpfr_get_d@plt>
    d378:	ldr	d1, [sp, #8]
    d37c:	fadd	d0, d1, d0
    d380:	stur	d0, [x29, #-16]
    d384:	ldr	d0, [sp]
    d388:	stur	d0, [x29, #-8]
    d38c:	ldur	d0, [x29, #-16]
    d390:	ldur	d1, [x29, #-8]
    d394:	ldp	x29, x30, [sp, #64]
    d398:	add	sp, sp, #0x50
    d39c:	ret

000000000000d3a0 <mpc_get_ldc@@Base>:
    d3a0:	sub	sp, sp, #0x70
    d3a4:	stp	x29, x30, [sp, #96]
    d3a8:	add	x29, sp, #0x60
    d3ac:	stur	x0, [x29, #-40]
    d3b0:	stur	w1, [x29, #-44]
    d3b4:	ldur	x8, [x29, #-40]
    d3b8:	add	x0, x8, #0x20
    d3bc:	ldur	w9, [x29, #-44]
    d3c0:	asr	w1, w9, #4
    d3c4:	bl	5210 <mpfr_get_ld@plt>
    d3c8:	adrp	x8, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d3cc:	ldr	q1, [x8, #912]
    d3d0:	str	q0, [sp, #32]
    d3d4:	bl	1da30 <mpc_ui_ui_sub@@Base+0xc14>
    d3d8:	ldur	x0, [x29, #-40]
    d3dc:	ldur	w9, [x29, #-44]
    d3e0:	and	w1, w9, #0xf
    d3e4:	str	q0, [sp, #16]
    d3e8:	bl	5210 <mpfr_get_ld@plt>
    d3ec:	ldr	q1, [sp, #16]
    d3f0:	str	q0, [sp]
    d3f4:	mov	v0.16b, v1.16b
    d3f8:	ldr	q1, [sp]
    d3fc:	bl	1cf08 <mpc_ui_ui_sub@@Base+0xec>
    d400:	stur	q0, [x29, #-32]
    d404:	ldr	q0, [sp, #32]
    d408:	stur	q0, [x29, #-16]
    d40c:	ldur	q0, [x29, #-32]
    d410:	ldur	q1, [x29, #-16]
    d414:	ldp	x29, x30, [sp, #96]
    d418:	add	sp, sp, #0x70
    d41c:	ret

000000000000d420 <mpc_get_str@@Base>:
    d420:	sub	sp, sp, #0x60
    d424:	stp	x29, x30, [sp, #80]
    d428:	add	x29, sp, #0x50
    d42c:	mov	x8, xzr
    d430:	stur	w0, [x29, #-12]
    d434:	stur	x1, [x29, #-24]
    d438:	stur	x2, [x29, #-32]
    d43c:	stur	w3, [x29, #-36]
    d440:	str	x8, [sp, #8]
    d444:	ldur	w9, [x29, #-12]
    d448:	cmp	w9, #0x2
    d44c:	b.lt	d45c <mpc_get_str@@Base+0x3c>  // b.tstop
    d450:	ldur	w8, [x29, #-12]
    d454:	cmp	w8, #0x24
    d458:	b.le	d468 <mpc_get_str@@Base+0x48>
    d45c:	mov	x8, xzr
    d460:	stur	x8, [x29, #-8]
    d464:	b	d584 <mpc_get_str@@Base+0x164>
    d468:	ldur	w0, [x29, #-12]
    d46c:	ldur	x1, [x29, #-24]
    d470:	ldur	x2, [x29, #-32]
    d474:	ldur	w8, [x29, #-36]
    d478:	and	w3, w8, #0xf
    d47c:	bl	d594 <mpc_get_str@@Base+0x174>
    d480:	str	x0, [sp, #24]
    d484:	ldur	w0, [x29, #-12]
    d488:	ldur	x1, [x29, #-24]
    d48c:	ldur	x9, [x29, #-32]
    d490:	add	x2, x9, #0x20
    d494:	ldur	w8, [x29, #-36]
    d498:	asr	w3, w8, #4
    d49c:	bl	d594 <mpc_get_str@@Base+0x174>
    d4a0:	str	x0, [sp, #16]
    d4a4:	ldr	x0, [sp, #24]
    d4a8:	bl	4ae0 <strlen@plt>
    d4ac:	ldr	x9, [sp, #16]
    d4b0:	str	x0, [sp]
    d4b4:	mov	x0, x9
    d4b8:	bl	4ae0 <strlen@plt>
    d4bc:	ldr	x9, [sp]
    d4c0:	add	x10, x9, x0
    d4c4:	add	x10, x10, #0x4
    d4c8:	str	x10, [sp, #32]
    d4cc:	ldr	x0, [sp, #32]
    d4d0:	bl	4cc0 <mpc_alloc_str@plt>
    d4d4:	str	x0, [sp, #8]
    d4d8:	ldr	x8, [sp, #8]
    d4dc:	cbnz	x8, d510 <mpc_get_str@@Base+0xf0>
    d4e0:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    d4e4:	ldr	x8, [x8, #4008]
    d4e8:	ldr	x0, [x8]
    d4ec:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d4f0:	add	x1, x1, #0x2a0
    d4f4:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d4f8:	add	x2, x2, #0x3a0
    d4fc:	mov	w3, #0xe0                  	// #224
    d500:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d504:	add	x4, x4, #0x3a8
    d508:	bl	56a0 <fprintf@plt>
    d50c:	bl	5100 <abort@plt>
    d510:	ldr	x0, [sp, #8]
    d514:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d518:	add	x1, x1, #0x3bc
    d51c:	bl	5440 <strcpy@plt>
    d520:	ldr	x8, [sp, #8]
    d524:	ldr	x1, [sp, #24]
    d528:	mov	x0, x8
    d52c:	bl	4ec0 <strcat@plt>
    d530:	ldr	x8, [sp, #8]
    d534:	mov	x0, x8
    d538:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d53c:	add	x1, x1, #0x3be
    d540:	bl	4ec0 <strcat@plt>
    d544:	ldr	x8, [sp, #8]
    d548:	ldr	x1, [sp, #16]
    d54c:	mov	x0, x8
    d550:	bl	4ec0 <strcat@plt>
    d554:	ldr	x8, [sp, #8]
    d558:	mov	x0, x8
    d55c:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d560:	add	x1, x1, #0x5a9
    d564:	bl	4ec0 <strcat@plt>
    d568:	ldr	x8, [sp, #24]
    d56c:	mov	x0, x8
    d570:	bl	50f0 <mpc_free_str@plt>
    d574:	ldr	x0, [sp, #16]
    d578:	bl	50f0 <mpc_free_str@plt>
    d57c:	ldr	x8, [sp, #8]
    d580:	stur	x8, [x29, #-8]
    d584:	ldur	x0, [x29, #-8]
    d588:	ldp	x29, x30, [sp, #80]
    d58c:	add	sp, sp, #0x60
    d590:	ret
    d594:	sub	sp, sp, #0x70
    d598:	stp	x29, x30, [sp, #96]
    d59c:	add	x29, sp, #0x60
    d5a0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    d5a4:	stur	w0, [x29, #-12]
    d5a8:	stur	x1, [x29, #-24]
    d5ac:	stur	x2, [x29, #-32]
    d5b0:	stur	w3, [x29, #-36]
    d5b4:	ldur	x9, [x29, #-32]
    d5b8:	ldr	x9, [x9, #16]
    d5bc:	cmp	x9, x8
    d5c0:	b.ne	d5d4 <mpc_get_str@@Base+0x1b4>  // b.any
    d5c4:	ldur	x0, [x29, #-32]
    d5c8:	bl	d698 <mpc_get_str@@Base+0x278>
    d5cc:	stur	x0, [x29, #-8]
    d5d0:	b	d688 <mpc_get_str@@Base+0x268>
    d5d4:	ldur	w2, [x29, #-12]
    d5d8:	ldur	x3, [x29, #-24]
    d5dc:	ldur	x4, [x29, #-32]
    d5e0:	ldur	w5, [x29, #-36]
    d5e4:	mov	x8, xzr
    d5e8:	mov	x0, x8
    d5ec:	add	x1, sp, #0x30
    d5f0:	bl	51c0 <mpfr_get_str@plt>
    d5f4:	str	x0, [sp, #40]
    d5f8:	ldr	x8, [sp, #40]
    d5fc:	cbnz	x8, d630 <mpc_get_str@@Base+0x210>
    d600:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    d604:	ldr	x8, [x8, #4008]
    d608:	ldr	x0, [x8]
    d60c:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d610:	add	x1, x1, #0x2a0
    d614:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d618:	add	x2, x2, #0x3a0
    d61c:	mov	w3, #0xc8                  	// #200
    d620:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d624:	add	x4, x4, #0x3c0
    d628:	bl	56a0 <fprintf@plt>
    d62c:	bl	5100 <abort@plt>
    d630:	ldr	x0, [sp, #40]
    d634:	ldr	x1, [sp, #48]
    d638:	ldur	w2, [x29, #-12]
    d63c:	ldur	x8, [x29, #-32]
    d640:	str	x0, [sp, #24]
    d644:	mov	x0, x8
    d648:	str	x1, [sp, #16]
    d64c:	str	w2, [sp, #12]
    d650:	bl	55c0 <mpfr_number_p@plt>
    d654:	cmp	w0, #0x0
    d658:	cset	w9, ne  // ne = any
    d65c:	eor	w9, w9, #0x1
    d660:	and	w3, w9, #0x1
    d664:	ldr	x0, [sp, #24]
    d668:	ldr	x1, [sp, #16]
    d66c:	ldr	w2, [sp, #12]
    d670:	bl	d720 <mpc_get_str@@Base+0x300>
    d674:	str	x0, [sp, #32]
    d678:	ldr	x0, [sp, #40]
    d67c:	bl	53e0 <mpfr_free_str@plt>
    d680:	ldr	x8, [sp, #32]
    d684:	stur	x8, [x29, #-8]
    d688:	ldur	x0, [x29, #-8]
    d68c:	ldp	x29, x30, [sp, #96]
    d690:	add	sp, sp, #0x70
    d694:	ret
    d698:	sub	sp, sp, #0x30
    d69c:	stp	x29, x30, [sp, #32]
    d6a0:	add	x29, sp, #0x20
    d6a4:	mov	x8, #0x3                   	// #3
    d6a8:	mov	w9, #0x2d                  	// #45
    d6ac:	mov	w10, #0x2b                  	// #43
    d6b0:	mov	w11, #0x30                  	// #48
    d6b4:	mov	w12, #0x0                   	// #0
    d6b8:	stur	x0, [x29, #-8]
    d6bc:	mov	x0, x8
    d6c0:	str	w9, [sp, #12]
    d6c4:	str	w10, [sp, #8]
    d6c8:	str	w11, [sp, #4]
    d6cc:	str	w12, [sp]
    d6d0:	bl	4cc0 <mpc_alloc_str@plt>
    d6d4:	str	x0, [sp, #16]
    d6d8:	ldur	x8, [x29, #-8]
    d6dc:	ldr	w9, [x8, #8]
    d6e0:	cmp	w9, #0x0
    d6e4:	ldr	w9, [sp, #12]
    d6e8:	ldr	w10, [sp, #8]
    d6ec:	csel	w11, w9, w10, lt  // lt = tstop
    d6f0:	ldr	x8, [sp, #16]
    d6f4:	strb	w11, [x8]
    d6f8:	ldr	x8, [sp, #16]
    d6fc:	ldr	w11, [sp, #4]
    d700:	strb	w11, [x8, #1]
    d704:	ldr	x8, [sp, #16]
    d708:	ldr	w12, [sp]
    d70c:	strb	w12, [x8, #2]
    d710:	ldr	x0, [sp, #16]
    d714:	ldp	x29, x30, [sp, #32]
    d718:	add	sp, sp, #0x30
    d71c:	ret
    d720:	sub	sp, sp, #0x80
    d724:	stp	x29, x30, [sp, #112]
    d728:	add	x29, sp, #0x70
    d72c:	stur	x0, [x29, #-16]
    d730:	stur	x1, [x29, #-24]
    d734:	stur	w2, [x29, #-28]
    d738:	stur	w3, [x29, #-32]
    d73c:	ldur	x0, [x29, #-16]
    d740:	bl	4ae0 <strlen@plt>
    d744:	add	x8, x0, #0x1
    d748:	stur	x8, [x29, #-40]
    d74c:	ldur	w9, [x29, #-32]
    d750:	cbz	w9, d778 <mpc_get_str@@Base+0x358>
    d754:	ldur	x0, [x29, #-40]
    d758:	bl	4cc0 <mpc_alloc_str@plt>
    d75c:	stur	x0, [x29, #-48]
    d760:	ldur	x0, [x29, #-48]
    d764:	ldur	x1, [x29, #-16]
    d768:	bl	5440 <strcpy@plt>
    d76c:	ldur	x8, [x29, #-48]
    d770:	stur	x8, [x29, #-8]
    d774:	b	d9f0 <mpc_get_str@@Base+0x5d0>
    d778:	ldur	x8, [x29, #-16]
    d77c:	ldrb	w9, [x8]
    d780:	mov	w10, #0x1                   	// #1
    d784:	cmp	w9, #0x2d
    d788:	str	w10, [sp, #20]
    d78c:	b.eq	d7a4 <mpc_get_str@@Base+0x384>  // b.none
    d790:	ldur	x8, [x29, #-16]
    d794:	ldrb	w9, [x8]
    d798:	cmp	w9, #0x2b
    d79c:	cset	w9, eq  // eq = none
    d7a0:	str	w9, [sp, #20]
    d7a4:	ldr	w8, [sp, #20]
    d7a8:	and	w8, w8, #0x1
    d7ac:	str	w8, [sp, #36]
    d7b0:	ldur	x9, [x29, #-24]
    d7b4:	subs	x9, x9, #0x1
    d7b8:	str	x9, [sp, #40]
    d7bc:	ldur	w8, [x29, #-28]
    d7c0:	cmp	w8, #0x10
    d7c4:	b.ne	d7d4 <mpc_get_str@@Base+0x3b4>  // b.any
    d7c8:	ldr	x8, [sp, #40]
    d7cc:	lsl	x8, x8, #2
    d7d0:	str	x8, [sp, #40]
    d7d4:	ldur	x8, [x29, #-40]
    d7d8:	add	x8, x8, #0x1
    d7dc:	stur	x8, [x29, #-40]
    d7e0:	ldr	x8, [sp, #40]
    d7e4:	cbz	x8, d884 <mpc_get_str@@Base+0x464>
    d7e8:	ldur	x8, [x29, #-40]
    d7ec:	add	x8, x8, #0x3
    d7f0:	stur	x8, [x29, #-40]
    d7f4:	ldr	x8, [sp, #40]
    d7f8:	cmp	x8, #0x0
    d7fc:	cset	w9, ge  // ge = tcont
    d800:	tbnz	w9, #0, d850 <mpc_get_str@@Base+0x430>
    d804:	ldr	x8, [sp, #40]
    d808:	mov	x9, #0xfffffffffffffff6    	// #-10
    d80c:	cmp	x8, x9
    d810:	b.ge	d83c <mpc_get_str@@Base+0x41c>  // b.tcont
    d814:	ldr	x8, [sp, #40]
    d818:	mov	x9, #0xa                   	// #10
    d81c:	sdiv	x8, x8, x9
    d820:	mov	x9, xzr
    d824:	subs	x8, x9, x8
    d828:	str	x8, [sp, #24]
    d82c:	ldur	x8, [x29, #-40]
    d830:	add	x8, x8, #0x1
    d834:	stur	x8, [x29, #-40]
    d838:	b	d84c <mpc_get_str@@Base+0x42c>
    d83c:	ldr	x8, [sp, #40]
    d840:	mov	x9, xzr
    d844:	subs	x8, x9, x8
    d848:	str	x8, [sp, #24]
    d84c:	b	d858 <mpc_get_str@@Base+0x438>
    d850:	ldr	x8, [sp, #40]
    d854:	str	x8, [sp, #24]
    d858:	ldr	x8, [sp, #24]
    d85c:	cmp	x8, #0x9
    d860:	b.le	d884 <mpc_get_str@@Base+0x464>
    d864:	ldur	x8, [x29, #-40]
    d868:	add	x8, x8, #0x1
    d86c:	stur	x8, [x29, #-40]
    d870:	ldr	x8, [sp, #24]
    d874:	mov	x9, #0xa                   	// #10
    d878:	sdiv	x8, x8, x9
    d87c:	str	x8, [sp, #24]
    d880:	b	d858 <mpc_get_str@@Base+0x438>
    d884:	ldur	x0, [x29, #-40]
    d888:	bl	4cc0 <mpc_alloc_str@plt>
    d88c:	stur	x0, [x29, #-48]
    d890:	ldur	x8, [x29, #-48]
    d894:	str	x8, [sp, #56]
    d898:	ldur	x8, [x29, #-16]
    d89c:	str	x8, [sp, #48]
    d8a0:	ldr	x8, [sp, #48]
    d8a4:	add	x9, x8, #0x1
    d8a8:	str	x9, [sp, #48]
    d8ac:	ldrb	w10, [x8]
    d8b0:	ldr	x8, [sp, #56]
    d8b4:	add	x9, x8, #0x1
    d8b8:	str	x9, [sp, #56]
    d8bc:	strb	w10, [x8]
    d8c0:	ldr	w10, [sp, #36]
    d8c4:	cbz	w10, d8e8 <mpc_get_str@@Base+0x4c8>
    d8c8:	ldr	x8, [sp, #48]
    d8cc:	add	x9, x8, #0x1
    d8d0:	str	x9, [sp, #48]
    d8d4:	ldrb	w10, [x8]
    d8d8:	ldr	x8, [sp, #56]
    d8dc:	add	x9, x8, #0x1
    d8e0:	str	x9, [sp, #56]
    d8e4:	strb	w10, [x8]
    d8e8:	bl	4d30 <localeconv@plt>
    d8ec:	ldr	x8, [x0]
    d8f0:	ldrb	w9, [x8]
    d8f4:	ldr	x8, [sp, #56]
    d8f8:	add	x10, x8, #0x1
    d8fc:	str	x10, [sp, #56]
    d900:	strb	w9, [x8]
    d904:	ldr	x8, [sp, #56]
    d908:	mov	w9, #0x0                   	// #0
    d90c:	strb	w9, [x8]
    d910:	ldur	x0, [x29, #-48]
    d914:	ldr	x1, [sp, #48]
    d918:	bl	4ec0 <strcat@plt>
    d91c:	ldr	x8, [sp, #40]
    d920:	cbnz	x8, d930 <mpc_get_str@@Base+0x510>
    d924:	ldur	x8, [x29, #-48]
    d928:	stur	x8, [x29, #-8]
    d92c:	b	d9f0 <mpc_get_str@@Base+0x5d0>
    d930:	ldur	x8, [x29, #-48]
    d934:	ldur	x0, [x29, #-16]
    d938:	str	x8, [sp, #8]
    d93c:	bl	4ae0 <strlen@plt>
    d940:	ldr	x8, [sp, #8]
    d944:	add	x9, x8, x0
    d948:	add	x9, x9, #0x1
    d94c:	str	x9, [sp, #56]
    d950:	ldur	w10, [x29, #-28]
    d954:	cmp	w10, #0x2
    d958:	str	w10, [sp, #4]
    d95c:	b.eq	d99c <mpc_get_str@@Base+0x57c>  // b.none
    d960:	b	d964 <mpc_get_str@@Base+0x544>
    d964:	ldr	w8, [sp, #4]
    d968:	cmp	w8, #0xa
    d96c:	b.eq	d984 <mpc_get_str@@Base+0x564>  // b.none
    d970:	b	d974 <mpc_get_str@@Base+0x554>
    d974:	ldr	w8, [sp, #4]
    d978:	cmp	w8, #0x10
    d97c:	b.eq	d99c <mpc_get_str@@Base+0x57c>  // b.none
    d980:	b	d9b4 <mpc_get_str@@Base+0x594>
    d984:	ldr	x8, [sp, #56]
    d988:	add	x9, x8, #0x1
    d98c:	str	x9, [sp, #56]
    d990:	mov	w10, #0x65                  	// #101
    d994:	strb	w10, [x8]
    d998:	b	d9c8 <mpc_get_str@@Base+0x5a8>
    d99c:	ldr	x8, [sp, #56]
    d9a0:	add	x9, x8, #0x1
    d9a4:	str	x9, [sp, #56]
    d9a8:	mov	w10, #0x70                  	// #112
    d9ac:	strb	w10, [x8]
    d9b0:	b	d9c8 <mpc_get_str@@Base+0x5a8>
    d9b4:	ldr	x8, [sp, #56]
    d9b8:	add	x9, x8, #0x1
    d9bc:	str	x9, [sp, #56]
    d9c0:	mov	w10, #0x40                  	// #64
    d9c4:	strb	w10, [x8]
    d9c8:	ldr	x8, [sp, #56]
    d9cc:	mov	w9, #0x0                   	// #0
    d9d0:	strb	w9, [x8]
    d9d4:	ldr	x0, [sp, #56]
    d9d8:	ldr	x2, [sp, #40]
    d9dc:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    d9e0:	add	x1, x1, #0x3cd
    d9e4:	bl	4c10 <sprintf@plt>
    d9e8:	ldur	x8, [x29, #-48]
    d9ec:	stur	x8, [x29, #-8]
    d9f0:	ldur	x0, [x29, #-8]
    d9f4:	ldp	x29, x30, [sp, #112]
    d9f8:	add	sp, sp, #0x80
    d9fc:	ret

000000000000da00 <mpc_imag@@Base>:
    da00:	sub	sp, sp, #0x30
    da04:	stp	x29, x30, [sp, #32]
    da08:	add	x29, sp, #0x20
    da0c:	stur	x0, [x29, #-8]
    da10:	str	x1, [sp, #16]
    da14:	str	w2, [sp, #12]
    da18:	ldur	x0, [x29, #-8]
    da1c:	ldr	x8, [sp, #16]
    da20:	add	x1, x8, #0x20
    da24:	ldr	w2, [sp, #12]
    da28:	ldr	x8, [sp, #16]
    da2c:	ldr	w3, [x8, #40]
    da30:	bl	52d0 <mpfr_set4@plt>
    da34:	ldp	x29, x30, [sp, #32]
    da38:	add	sp, sp, #0x30
    da3c:	ret

000000000000da40 <mpc_init2@@Base>:
    da40:	sub	sp, sp, #0x20
    da44:	stp	x29, x30, [sp, #16]
    da48:	add	x29, sp, #0x10
    da4c:	str	x0, [sp, #8]
    da50:	str	x1, [sp]
    da54:	ldr	x0, [sp, #8]
    da58:	ldr	x1, [sp]
    da5c:	bl	5530 <mpfr_init2@plt>
    da60:	ldr	x8, [sp, #8]
    da64:	add	x0, x8, #0x20
    da68:	ldr	x1, [sp]
    da6c:	bl	5530 <mpfr_init2@plt>
    da70:	ldp	x29, x30, [sp, #16]
    da74:	add	sp, sp, #0x20
    da78:	ret

000000000000da7c <mpc_init3@@Base>:
    da7c:	sub	sp, sp, #0x30
    da80:	stp	x29, x30, [sp, #32]
    da84:	add	x29, sp, #0x20
    da88:	stur	x0, [x29, #-8]
    da8c:	str	x1, [sp, #16]
    da90:	str	x2, [sp, #8]
    da94:	ldur	x0, [x29, #-8]
    da98:	ldr	x1, [sp, #16]
    da9c:	bl	5530 <mpfr_init2@plt>
    daa0:	ldur	x8, [x29, #-8]
    daa4:	add	x0, x8, #0x20
    daa8:	ldr	x1, [sp, #8]
    daac:	bl	5530 <mpfr_init2@plt>
    dab0:	ldp	x29, x30, [sp, #32]
    dab4:	add	sp, sp, #0x30
    dab8:	ret

000000000000dabc <mpc_inp_str@@Base>:
    dabc:	sub	sp, sp, #0x70
    dac0:	stp	x29, x30, [sp, #96]
    dac4:	add	x29, sp, #0x60
    dac8:	mov	w8, #0xffffffff            	// #-1
    dacc:	stur	x0, [x29, #-8]
    dad0:	stur	x1, [x29, #-16]
    dad4:	stur	x2, [x29, #-24]
    dad8:	stur	w3, [x29, #-28]
    dadc:	stur	w4, [x29, #-32]
    dae0:	str	xzr, [sp, #48]
    dae4:	str	w8, [sp, #44]
    dae8:	ldur	x9, [x29, #-16]
    daec:	cbnz	x9, db00 <mpc_inp_str@@Base+0x44>
    daf0:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    daf4:	ldr	x8, [x8, #4040]
    daf8:	ldr	x8, [x8]
    dafc:	stur	x8, [x29, #-16]
    db00:	ldur	x0, [x29, #-16]
    db04:	bl	de14 <mpc_inp_str@@Base+0x358>
    db08:	stur	x0, [x29, #-40]
    db0c:	ldur	x0, [x29, #-16]
    db10:	bl	5020 <getc@plt>
    db14:	str	w0, [sp, #40]
    db18:	ldr	w8, [sp, #40]
    db1c:	mov	w9, #0xffffffff            	// #-1
    db20:	cmp	w8, w9
    db24:	b.eq	ddc4 <mpc_inp_str@@Base+0x308>  // b.none
    db28:	ldr	w8, [sp, #40]
    db2c:	cmp	w8, #0x28
    db30:	b.ne	dd68 <mpc_inp_str@@Base+0x2ac>  // b.any
    db34:	ldr	x8, [sp, #48]
    db38:	add	x8, x8, #0x1
    db3c:	str	x8, [sp, #48]
    db40:	ldur	x0, [x29, #-16]
    db44:	bl	de14 <mpc_inp_str@@Base+0x358>
    db48:	stur	x0, [x29, #-40]
    db4c:	ldur	x0, [x29, #-16]
    db50:	bl	dec0 <mpc_inp_str@@Base+0x404>
    db54:	str	x0, [sp, #24]
    db58:	ldr	x0, [sp, #24]
    db5c:	bl	4ae0 <strlen@plt>
    db60:	ldr	x8, [sp, #48]
    db64:	add	x8, x8, x0
    db68:	str	x8, [sp, #48]
    db6c:	ldur	x0, [x29, #-16]
    db70:	bl	5020 <getc@plt>
    db74:	str	w0, [sp, #40]
    db78:	bl	5270 <__ctype_b_loc@plt>
    db7c:	ldr	x8, [x0]
    db80:	ldrsw	x9, [sp, #40]
    db84:	ldrh	w10, [x8, x9, lsl #1]
    db88:	and	w10, w10, #0x2000
    db8c:	cbnz	w10, dbb8 <mpc_inp_str@@Base+0xfc>
    db90:	ldr	w8, [sp, #40]
    db94:	mov	w9, #0xffffffff            	// #-1
    db98:	cmp	w8, w9
    db9c:	b.eq	dbac <mpc_inp_str@@Base+0xf0>  // b.none
    dba0:	ldr	w0, [sp, #40]
    dba4:	ldur	x1, [x29, #-16]
    dba8:	bl	5310 <ungetc@plt>
    dbac:	ldr	x0, [sp, #24]
    dbb0:	bl	50f0 <mpc_free_str@plt>
    dbb4:	b	ddc4 <mpc_inp_str@@Base+0x308>
    dbb8:	ldr	w0, [sp, #40]
    dbbc:	ldur	x1, [x29, #-16]
    dbc0:	bl	5310 <ungetc@plt>
    dbc4:	ldur	x0, [x29, #-16]
    dbc8:	bl	de14 <mpc_inp_str@@Base+0x358>
    dbcc:	ldur	x8, [x29, #-40]
    dbd0:	add	x8, x8, x0
    dbd4:	stur	x8, [x29, #-40]
    dbd8:	ldur	x0, [x29, #-16]
    dbdc:	bl	dec0 <mpc_inp_str@@Base+0x404>
    dbe0:	str	x0, [sp, #16]
    dbe4:	ldr	x0, [sp, #16]
    dbe8:	bl	4ae0 <strlen@plt>
    dbec:	ldr	x8, [sp, #48]
    dbf0:	add	x8, x8, x0
    dbf4:	str	x8, [sp, #48]
    dbf8:	ldr	x8, [sp, #48]
    dbfc:	add	x0, x8, #0x2
    dc00:	bl	4cc0 <mpc_alloc_str@plt>
    dc04:	str	x0, [sp, #32]
    dc08:	ldr	x0, [sp, #32]
    dc0c:	ldr	x2, [sp, #24]
    dc10:	ldr	x3, [sp, #16]
    dc14:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dc18:	add	x1, x1, #0x3d2
    dc1c:	bl	4c10 <sprintf@plt>
    dc20:	str	w0, [sp, #4]
    dc24:	ldr	w8, [sp, #4]
    dc28:	cmp	w8, #0x0
    dc2c:	cset	w8, ge  // ge = tcont
    dc30:	tbnz	w8, #0, dc64 <mpc_inp_str@@Base+0x1a8>
    dc34:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    dc38:	ldr	x8, [x8, #4008]
    dc3c:	ldr	x0, [x8]
    dc40:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dc44:	add	x1, x1, #0x2a0
    dc48:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dc4c:	add	x2, x2, #0x3d9
    dc50:	mov	w3, #0xca                  	// #202
    dc54:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dc58:	add	x4, x4, #0x3e3
    dc5c:	bl	56a0 <fprintf@plt>
    dc60:	bl	5100 <abort@plt>
    dc64:	ldrsw	x8, [sp, #4]
    dc68:	str	x8, [sp, #8]
    dc6c:	ldr	x8, [sp, #8]
    dc70:	ldr	x9, [sp, #48]
    dc74:	add	x9, x9, #0x1
    dc78:	cmp	x8, x9
    dc7c:	b.eq	dcb0 <mpc_inp_str@@Base+0x1f4>  // b.none
    dc80:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    dc84:	ldr	x8, [x8, #4008]
    dc88:	ldr	x0, [x8]
    dc8c:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dc90:	add	x1, x1, #0x2a0
    dc94:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dc98:	add	x2, x2, #0x3d9
    dc9c:	mov	w3, #0xcc                  	// #204
    dca0:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    dca4:	add	x4, x4, #0x3ec
    dca8:	bl	56a0 <fprintf@plt>
    dcac:	bl	5100 <abort@plt>
    dcb0:	ldr	x0, [sp, #24]
    dcb4:	bl	50f0 <mpc_free_str@plt>
    dcb8:	ldr	x0, [sp, #16]
    dcbc:	bl	50f0 <mpc_free_str@plt>
    dcc0:	ldur	x0, [x29, #-16]
    dcc4:	bl	de14 <mpc_inp_str@@Base+0x358>
    dcc8:	ldur	x8, [x29, #-40]
    dccc:	add	x8, x8, x0
    dcd0:	stur	x8, [x29, #-40]
    dcd4:	ldur	x0, [x29, #-16]
    dcd8:	bl	5020 <getc@plt>
    dcdc:	str	w0, [sp, #40]
    dce0:	ldr	w9, [sp, #40]
    dce4:	cmp	w9, #0x29
    dce8:	b.ne	dd48 <mpc_inp_str@@Base+0x28c>  // b.any
    dcec:	ldr	x0, [sp, #32]
    dcf0:	ldr	x8, [sp, #48]
    dcf4:	add	x1, x8, #0x2
    dcf8:	ldr	x8, [sp, #48]
    dcfc:	add	x2, x8, #0x3
    dd00:	bl	5430 <mpc_realloc_str@plt>
    dd04:	str	x0, [sp, #32]
    dd08:	ldr	w9, [sp, #40]
    dd0c:	ldr	x8, [sp, #32]
    dd10:	ldr	x10, [sp, #48]
    dd14:	add	x10, x10, #0x1
    dd18:	add	x8, x8, x10
    dd1c:	strb	w9, [x8]
    dd20:	ldr	x8, [sp, #32]
    dd24:	ldr	x10, [sp, #48]
    dd28:	add	x10, x10, #0x2
    dd2c:	add	x8, x8, x10
    dd30:	mov	w9, #0x0                   	// #0
    dd34:	strb	w9, [x8]
    dd38:	ldr	x8, [sp, #48]
    dd3c:	add	x8, x8, #0x1
    dd40:	str	x8, [sp, #48]
    dd44:	b	dd64 <mpc_inp_str@@Base+0x2a8>
    dd48:	ldr	w8, [sp, #40]
    dd4c:	mov	w9, #0xffffffff            	// #-1
    dd50:	cmp	w8, w9
    dd54:	b.eq	dd64 <mpc_inp_str@@Base+0x2a8>  // b.none
    dd58:	ldr	w0, [sp, #40]
    dd5c:	ldur	x1, [x29, #-16]
    dd60:	bl	5310 <ungetc@plt>
    dd64:	b	dda4 <mpc_inp_str@@Base+0x2e8>
    dd68:	ldr	w8, [sp, #40]
    dd6c:	mov	w9, #0xffffffff            	// #-1
    dd70:	cmp	w8, w9
    dd74:	b.eq	dd84 <mpc_inp_str@@Base+0x2c8>  // b.none
    dd78:	ldr	w0, [sp, #40]
    dd7c:	ldur	x1, [x29, #-16]
    dd80:	bl	5310 <ungetc@plt>
    dd84:	ldur	x0, [x29, #-16]
    dd88:	bl	dec0 <mpc_inp_str@@Base+0x404>
    dd8c:	str	x0, [sp, #32]
    dd90:	ldr	x0, [sp, #32]
    dd94:	bl	4ae0 <strlen@plt>
    dd98:	ldr	x8, [sp, #48]
    dd9c:	add	x8, x8, x0
    dda0:	str	x8, [sp, #48]
    dda4:	ldur	x0, [x29, #-8]
    dda8:	ldr	x1, [sp, #32]
    ddac:	ldur	w2, [x29, #-28]
    ddb0:	ldur	w3, [x29, #-32]
    ddb4:	bl	5480 <mpc_set_str@plt>
    ddb8:	str	w0, [sp, #44]
    ddbc:	ldr	x0, [sp, #32]
    ddc0:	bl	50f0 <mpc_free_str@plt>
    ddc4:	ldr	w8, [sp, #44]
    ddc8:	mov	w9, #0xffffffff            	// #-1
    ddcc:	cmp	w8, w9
    ddd0:	b.ne	dde8 <mpc_inp_str@@Base+0x32c>  // b.any
    ddd4:	ldur	x0, [x29, #-8]
    ddd8:	bl	4b20 <mpfr_set_nan@plt>
    dddc:	ldur	x8, [x29, #-8]
    dde0:	add	x0, x8, #0x20
    dde4:	bl	4b20 <mpfr_set_nan@plt>
    dde8:	ldur	x8, [x29, #-24]
    ddec:	cbz	x8, de04 <mpc_inp_str@@Base+0x348>
    ddf0:	ldur	x8, [x29, #-40]
    ddf4:	ldr	x9, [sp, #48]
    ddf8:	add	x8, x8, x9
    ddfc:	ldur	x9, [x29, #-24]
    de00:	str	x8, [x9]
    de04:	ldr	w0, [sp, #44]
    de08:	ldp	x29, x30, [sp, #96]
    de0c:	add	sp, sp, #0x70
    de10:	ret
    de14:	sub	sp, sp, #0x30
    de18:	stp	x29, x30, [sp, #32]
    de1c:	add	x29, sp, #0x20
    de20:	stur	x0, [x29, #-8]
    de24:	ldur	x0, [x29, #-8]
    de28:	bl	5020 <getc@plt>
    de2c:	stur	w0, [x29, #-12]
    de30:	str	xzr, [sp, #8]
    de34:	ldur	w8, [x29, #-12]
    de38:	mov	w9, #0xffffffff            	// #-1
    de3c:	mov	w10, #0x0                   	// #0
    de40:	cmp	w8, w9
    de44:	str	w10, [sp, #4]
    de48:	b.eq	de6c <mpc_inp_str@@Base+0x3b0>  // b.none
    de4c:	bl	5270 <__ctype_b_loc@plt>
    de50:	ldr	x8, [x0]
    de54:	ldur	w9, [x29, #-12]
    de58:	and	w9, w9, #0xff
    de5c:	ldrh	w9, [x8, w9, sxtw #1]
    de60:	tst	w9, #0x2000
    de64:	cset	w9, ne  // ne = any
    de68:	str	w9, [sp, #4]
    de6c:	ldr	w8, [sp, #4]
    de70:	tbnz	w8, #0, de78 <mpc_inp_str@@Base+0x3bc>
    de74:	b	de94 <mpc_inp_str@@Base+0x3d8>
    de78:	ldur	x0, [x29, #-8]
    de7c:	bl	5020 <getc@plt>
    de80:	stur	w0, [x29, #-12]
    de84:	ldr	x8, [sp, #8]
    de88:	add	x8, x8, #0x1
    de8c:	str	x8, [sp, #8]
    de90:	b	de34 <mpc_inp_str@@Base+0x378>
    de94:	ldur	w8, [x29, #-12]
    de98:	mov	w9, #0xffffffff            	// #-1
    de9c:	cmp	w8, w9
    dea0:	b.eq	deb0 <mpc_inp_str@@Base+0x3f4>  // b.none
    dea4:	ldur	w0, [x29, #-12]
    dea8:	ldur	x1, [x29, #-8]
    deac:	bl	5310 <ungetc@plt>
    deb0:	ldr	x0, [sp, #8]
    deb4:	ldp	x29, x30, [sp, #32]
    deb8:	add	sp, sp, #0x30
    debc:	ret
    dec0:	sub	sp, sp, #0x70
    dec4:	stp	x29, x30, [sp, #96]
    dec8:	add	x29, sp, #0x60
    decc:	mov	x8, #0x64                  	// #100
    ded0:	stur	x0, [x29, #-16]
    ded4:	stur	xzr, [x29, #-32]
    ded8:	stur	x8, [x29, #-40]
    dedc:	ldur	x0, [x29, #-40]
    dee0:	bl	4cc0 <mpc_alloc_str@plt>
    dee4:	str	x0, [sp, #48]
    dee8:	ldur	x0, [x29, #-16]
    deec:	bl	5020 <getc@plt>
    def0:	stur	w0, [x29, #-20]
    def4:	ldur	w8, [x29, #-20]
    def8:	mov	w9, #0xffffffff            	// #-1
    defc:	mov	w10, #0x0                   	// #0
    df00:	cmp	w8, w9
    df04:	str	w10, [sp, #16]
    df08:	b.eq	df68 <mpc_inp_str@@Base+0x4ac>  // b.none
    df0c:	ldur	w8, [x29, #-20]
    df10:	mov	w9, #0x0                   	// #0
    df14:	cmp	w8, #0xa
    df18:	str	w9, [sp, #16]
    df1c:	b.eq	df68 <mpc_inp_str@@Base+0x4ac>  // b.none
    df20:	bl	5270 <__ctype_b_loc@plt>
    df24:	ldr	x8, [x0]
    df28:	ldur	w9, [x29, #-20]
    df2c:	and	w9, w9, #0xff
    df30:	ldrh	w9, [x8, w9, sxtw #1]
    df34:	and	w9, w9, #0x2000
    df38:	mov	w10, #0x0                   	// #0
    df3c:	str	w10, [sp, #16]
    df40:	cbnz	w9, df68 <mpc_inp_str@@Base+0x4ac>
    df44:	ldur	w8, [x29, #-20]
    df48:	mov	w9, #0x0                   	// #0
    df4c:	cmp	w8, #0x28
    df50:	str	w9, [sp, #16]
    df54:	b.eq	df68 <mpc_inp_str@@Base+0x4ac>  // b.none
    df58:	ldur	w8, [x29, #-20]
    df5c:	cmp	w8, #0x29
    df60:	cset	w8, ne  // ne = any
    df64:	str	w8, [sp, #16]
    df68:	ldr	w8, [sp, #16]
    df6c:	tbnz	w8, #0, df74 <mpc_inp_str@@Base+0x4b8>
    df70:	b	dfe4 <mpc_inp_str@@Base+0x528>
    df74:	ldur	w8, [x29, #-20]
    df78:	ldr	x9, [sp, #48]
    df7c:	ldur	x10, [x29, #-32]
    df80:	add	x9, x9, x10
    df84:	strb	w8, [x9]
    df88:	ldur	x9, [x29, #-32]
    df8c:	add	x9, x9, #0x1
    df90:	stur	x9, [x29, #-32]
    df94:	ldur	x9, [x29, #-32]
    df98:	ldur	x10, [x29, #-40]
    df9c:	cmp	x9, x10
    dfa0:	b.ne	dfd4 <mpc_inp_str@@Base+0x518>  // b.any
    dfa4:	ldr	x0, [sp, #48]
    dfa8:	ldur	x1, [x29, #-40]
    dfac:	ldur	x8, [x29, #-40]
    dfb0:	mov	x9, #0x2                   	// #2
    dfb4:	mul	x2, x9, x8
    dfb8:	str	x9, [sp, #8]
    dfbc:	bl	5430 <mpc_realloc_str@plt>
    dfc0:	str	x0, [sp, #48]
    dfc4:	ldur	x8, [x29, #-40]
    dfc8:	ldr	x9, [sp, #8]
    dfcc:	mul	x8, x8, x9
    dfd0:	stur	x8, [x29, #-40]
    dfd4:	ldur	x0, [x29, #-16]
    dfd8:	bl	5020 <getc@plt>
    dfdc:	stur	w0, [x29, #-20]
    dfe0:	b	def4 <mpc_inp_str@@Base+0x438>
    dfe4:	ldr	x0, [sp, #48]
    dfe8:	ldur	x1, [x29, #-40]
    dfec:	ldur	x8, [x29, #-32]
    dff0:	add	x2, x8, #0x1
    dff4:	bl	5430 <mpc_realloc_str@plt>
    dff8:	str	x0, [sp, #48]
    dffc:	ldur	x8, [x29, #-32]
    e000:	add	x8, x8, #0x1
    e004:	stur	x8, [x29, #-40]
    e008:	ldr	x8, [sp, #48]
    e00c:	ldur	x9, [x29, #-32]
    e010:	add	x8, x8, x9
    e014:	mov	w10, #0x0                   	// #0
    e018:	strb	w10, [x8]
    e01c:	ldur	x8, [x29, #-32]
    e020:	cbnz	x8, e030 <mpc_inp_str@@Base+0x574>
    e024:	ldr	x8, [sp, #48]
    e028:	stur	x8, [x29, #-8]
    e02c:	b	e2d8 <mpc_inp_str@@Base+0x81c>
    e030:	ldur	x8, [x29, #-32]
    e034:	str	x8, [sp, #40]
    e038:	ldur	w9, [x29, #-20]
    e03c:	cmp	w9, #0x28
    e040:	b.ne	e2b4 <mpc_inp_str@@Base+0x7f8>  // b.any
    e044:	ldur	x8, [x29, #-32]
    e048:	cmp	x8, #0x3
    e04c:	b.ne	e08c <mpc_inp_str@@Base+0x5d0>  // b.any
    e050:	ldr	x8, [sp, #48]
    e054:	ldrb	w0, [x8]
    e058:	bl	55f0 <tolower@plt>
    e05c:	cmp	w0, #0x6e
    e060:	b.ne	e08c <mpc_inp_str@@Base+0x5d0>  // b.any
    e064:	ldr	x8, [sp, #48]
    e068:	ldrb	w0, [x8, #1]
    e06c:	bl	55f0 <tolower@plt>
    e070:	cmp	w0, #0x61
    e074:	b.ne	e08c <mpc_inp_str@@Base+0x5d0>  // b.any
    e078:	ldr	x8, [sp, #48]
    e07c:	ldrb	w0, [x8, #2]
    e080:	bl	55f0 <tolower@plt>
    e084:	cmp	w0, #0x6e
    e088:	b.eq	e10c <mpc_inp_str@@Base+0x650>  // b.none
    e08c:	ldur	x8, [x29, #-32]
    e090:	cmp	x8, #0x5
    e094:	b.ne	e0f4 <mpc_inp_str@@Base+0x638>  // b.any
    e098:	ldr	x8, [sp, #48]
    e09c:	ldrb	w9, [x8]
    e0a0:	cmp	w9, #0x40
    e0a4:	b.ne	e0f4 <mpc_inp_str@@Base+0x638>  // b.any
    e0a8:	ldr	x8, [sp, #48]
    e0ac:	ldrb	w0, [x8, #1]
    e0b0:	bl	55f0 <tolower@plt>
    e0b4:	cmp	w0, #0x6e
    e0b8:	b.ne	e0f4 <mpc_inp_str@@Base+0x638>  // b.any
    e0bc:	ldr	x8, [sp, #48]
    e0c0:	ldrb	w0, [x8, #2]
    e0c4:	bl	55f0 <tolower@plt>
    e0c8:	cmp	w0, #0x61
    e0cc:	b.ne	e0f4 <mpc_inp_str@@Base+0x638>  // b.any
    e0d0:	ldr	x8, [sp, #48]
    e0d4:	ldrb	w0, [x8, #3]
    e0d8:	bl	55f0 <tolower@plt>
    e0dc:	cmp	w0, #0x6e
    e0e0:	b.ne	e0f4 <mpc_inp_str@@Base+0x638>  // b.any
    e0e4:	ldr	x8, [sp, #48]
    e0e8:	ldrb	w9, [x8, #4]
    e0ec:	cmp	w9, #0x40
    e0f0:	b.eq	e10c <mpc_inp_str@@Base+0x650>  // b.none
    e0f4:	ldur	w0, [x29, #-20]
    e0f8:	ldur	x1, [x29, #-16]
    e0fc:	bl	5310 <ungetc@plt>
    e100:	ldr	x8, [sp, #48]
    e104:	stur	x8, [x29, #-8]
    e108:	b	e2d8 <mpc_inp_str@@Base+0x81c>
    e10c:	ldur	x0, [x29, #-16]
    e110:	bl	e2e8 <mpc_inp_str@@Base+0x82c>
    e114:	str	x0, [sp, #24]
    e118:	ldr	x0, [sp, #24]
    e11c:	bl	4ae0 <strlen@plt>
    e120:	add	x8, x0, #0x1
    e124:	ldur	x9, [x29, #-32]
    e128:	add	x8, x9, x8
    e12c:	stur	x8, [x29, #-32]
    e130:	ldur	x8, [x29, #-32]
    e134:	ldur	x9, [x29, #-40]
    e138:	cmp	x8, x9
    e13c:	b.cc	e164 <mpc_inp_str@@Base+0x6a8>  // b.lo, b.ul, b.last
    e140:	ldr	x0, [sp, #48]
    e144:	ldur	x1, [x29, #-40]
    e148:	ldur	x8, [x29, #-32]
    e14c:	add	x2, x8, #0x1
    e150:	bl	5430 <mpc_realloc_str@plt>
    e154:	str	x0, [sp, #48]
    e158:	ldur	x8, [x29, #-32]
    e15c:	add	x8, x8, #0x1
    e160:	stur	x8, [x29, #-40]
    e164:	ldr	x8, [sp, #48]
    e168:	ldr	x9, [sp, #40]
    e16c:	add	x0, x8, x9
    e170:	ldr	x2, [sp, #24]
    e174:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e178:	add	x1, x1, #0x3fb
    e17c:	bl	4c10 <sprintf@plt>
    e180:	str	w0, [sp, #20]
    e184:	ldr	w8, [sp, #20]
    e188:	cmp	w8, #0x0
    e18c:	cset	w8, ge  // ge = tcont
    e190:	tbnz	w8, #0, e1c4 <mpc_inp_str@@Base+0x708>
    e194:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    e198:	ldr	x8, [x8, #4008]
    e19c:	ldr	x0, [x8]
    e1a0:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e1a4:	add	x1, x1, #0x2a0
    e1a8:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e1ac:	add	x2, x2, #0x3d9
    e1b0:	mov	w3, #0x88                  	// #136
    e1b4:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e1b8:	add	x4, x4, #0x3e3
    e1bc:	bl	56a0 <fprintf@plt>
    e1c0:	bl	5100 <abort@plt>
    e1c4:	ldr	x8, [sp, #40]
    e1c8:	ldrsw	x9, [sp, #20]
    e1cc:	add	x8, x8, x9
    e1d0:	str	x8, [sp, #32]
    e1d4:	ldr	x8, [sp, #32]
    e1d8:	ldur	x9, [x29, #-32]
    e1dc:	cmp	x8, x9
    e1e0:	b.eq	e214 <mpc_inp_str@@Base+0x758>  // b.none
    e1e4:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    e1e8:	ldr	x8, [x8, #4008]
    e1ec:	ldr	x0, [x8]
    e1f0:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e1f4:	add	x1, x1, #0x2a0
    e1f8:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e1fc:	add	x2, x2, #0x3d9
    e200:	mov	w3, #0x8a                  	// #138
    e204:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    e208:	add	x4, x4, #0x3ff
    e20c:	bl	56a0 <fprintf@plt>
    e210:	bl	5100 <abort@plt>
    e214:	ldur	x0, [x29, #-16]
    e218:	bl	5020 <getc@plt>
    e21c:	stur	w0, [x29, #-20]
    e220:	ldur	w8, [x29, #-20]
    e224:	cmp	w8, #0x29
    e228:	b.ne	e28c <mpc_inp_str@@Base+0x7d0>  // b.any
    e22c:	ldr	x0, [sp, #48]
    e230:	ldur	x1, [x29, #-40]
    e234:	ldur	x8, [x29, #-32]
    e238:	add	x2, x8, #0x2
    e23c:	bl	5430 <mpc_realloc_str@plt>
    e240:	str	x0, [sp, #48]
    e244:	ldur	x8, [x29, #-32]
    e248:	add	x8, x8, #0x2
    e24c:	stur	x8, [x29, #-40]
    e250:	ldur	w9, [x29, #-20]
    e254:	ldr	x8, [sp, #48]
    e258:	ldur	x10, [x29, #-32]
    e25c:	add	x8, x8, x10
    e260:	strb	w9, [x8]
    e264:	ldr	x8, [sp, #48]
    e268:	ldur	x10, [x29, #-32]
    e26c:	add	x10, x10, #0x1
    e270:	add	x8, x8, x10
    e274:	mov	w9, #0x0                   	// #0
    e278:	strb	w9, [x8]
    e27c:	ldur	x8, [x29, #-32]
    e280:	add	x8, x8, #0x1
    e284:	stur	x8, [x29, #-32]
    e288:	b	e2a8 <mpc_inp_str@@Base+0x7ec>
    e28c:	ldur	w8, [x29, #-20]
    e290:	mov	w9, #0xffffffff            	// #-1
    e294:	cmp	w8, w9
    e298:	b.eq	e2a8 <mpc_inp_str@@Base+0x7ec>  // b.none
    e29c:	ldur	w0, [x29, #-20]
    e2a0:	ldur	x1, [x29, #-16]
    e2a4:	bl	5310 <ungetc@plt>
    e2a8:	ldr	x0, [sp, #24]
    e2ac:	bl	50f0 <mpc_free_str@plt>
    e2b0:	b	e2d0 <mpc_inp_str@@Base+0x814>
    e2b4:	ldur	w8, [x29, #-20]
    e2b8:	mov	w9, #0xffffffff            	// #-1
    e2bc:	cmp	w8, w9
    e2c0:	b.eq	e2d0 <mpc_inp_str@@Base+0x814>  // b.none
    e2c4:	ldur	w0, [x29, #-20]
    e2c8:	ldur	x1, [x29, #-16]
    e2cc:	bl	5310 <ungetc@plt>
    e2d0:	ldr	x8, [sp, #48]
    e2d4:	stur	x8, [x29, #-8]
    e2d8:	ldur	x0, [x29, #-8]
    e2dc:	ldp	x29, x30, [sp, #96]
    e2e0:	add	sp, sp, #0x70
    e2e4:	ret
    e2e8:	sub	sp, sp, #0x50
    e2ec:	stp	x29, x30, [sp, #64]
    e2f0:	add	x29, sp, #0x40
    e2f4:	mov	x8, #0x64                  	// #100
    e2f8:	stur	x0, [x29, #-8]
    e2fc:	stur	xzr, [x29, #-24]
    e300:	str	x8, [sp, #32]
    e304:	ldr	x0, [sp, #32]
    e308:	bl	4cc0 <mpc_alloc_str@plt>
    e30c:	str	x0, [sp, #24]
    e310:	ldur	x0, [x29, #-8]
    e314:	bl	5020 <getc@plt>
    e318:	stur	w0, [x29, #-12]
    e31c:	bl	5270 <__ctype_b_loc@plt>
    e320:	ldr	x8, [x0]
    e324:	ldur	w9, [x29, #-12]
    e328:	and	w9, w9, #0xff
    e32c:	ldrh	w9, [x8, w9, sxtw #1]
    e330:	and	w9, w9, #0x8
    e334:	mov	w10, #0x1                   	// #1
    e338:	str	w10, [sp, #20]
    e33c:	cbnz	w9, e350 <mpc_inp_str@@Base+0x894>
    e340:	ldur	w8, [x29, #-12]
    e344:	cmp	w8, #0x5f
    e348:	cset	w8, eq  // eq = none
    e34c:	str	w8, [sp, #20]
    e350:	ldr	w8, [sp, #20]
    e354:	tbnz	w8, #0, e35c <mpc_inp_str@@Base+0x8a0>
    e358:	b	e3cc <mpc_inp_str@@Base+0x910>
    e35c:	ldur	w8, [x29, #-12]
    e360:	ldr	x9, [sp, #24]
    e364:	ldur	x10, [x29, #-24]
    e368:	add	x9, x9, x10
    e36c:	strb	w8, [x9]
    e370:	ldur	x9, [x29, #-24]
    e374:	add	x9, x9, #0x1
    e378:	stur	x9, [x29, #-24]
    e37c:	ldur	x9, [x29, #-24]
    e380:	ldr	x10, [sp, #32]
    e384:	cmp	x9, x10
    e388:	b.ne	e3bc <mpc_inp_str@@Base+0x900>  // b.any
    e38c:	ldr	x0, [sp, #24]
    e390:	ldr	x1, [sp, #32]
    e394:	ldr	x8, [sp, #32]
    e398:	mov	x9, #0x2                   	// #2
    e39c:	mul	x2, x9, x8
    e3a0:	str	x9, [sp, #8]
    e3a4:	bl	5430 <mpc_realloc_str@plt>
    e3a8:	str	x0, [sp, #24]
    e3ac:	ldr	x8, [sp, #32]
    e3b0:	ldr	x9, [sp, #8]
    e3b4:	mul	x8, x8, x9
    e3b8:	str	x8, [sp, #32]
    e3bc:	ldur	x0, [x29, #-8]
    e3c0:	bl	5020 <getc@plt>
    e3c4:	stur	w0, [x29, #-12]
    e3c8:	b	e31c <mpc_inp_str@@Base+0x860>
    e3cc:	ldr	x0, [sp, #24]
    e3d0:	ldr	x1, [sp, #32]
    e3d4:	ldur	x8, [x29, #-24]
    e3d8:	add	x2, x8, #0x1
    e3dc:	bl	5430 <mpc_realloc_str@plt>
    e3e0:	str	x0, [sp, #24]
    e3e4:	ldur	x8, [x29, #-24]
    e3e8:	add	x8, x8, #0x1
    e3ec:	str	x8, [sp, #32]
    e3f0:	ldr	x8, [sp, #24]
    e3f4:	ldur	x9, [x29, #-24]
    e3f8:	add	x8, x8, x9
    e3fc:	mov	w10, #0x0                   	// #0
    e400:	strb	w10, [x8]
    e404:	ldur	w10, [x29, #-12]
    e408:	mov	w11, #0xffffffff            	// #-1
    e40c:	cmp	w10, w11
    e410:	b.eq	e420 <mpc_inp_str@@Base+0x964>  // b.none
    e414:	ldur	w0, [x29, #-12]
    e418:	ldur	x1, [x29, #-8]
    e41c:	bl	5310 <ungetc@plt>
    e420:	ldr	x0, [sp, #24]
    e424:	ldp	x29, x30, [sp, #64]
    e428:	add	sp, sp, #0x50
    e42c:	ret

000000000000e430 <mpc_log@@Base>:
    e430:	sub	sp, sp, #0x190
    e434:	stp	x29, x30, [sp, #368]
    e438:	str	x28, [sp, #384]
    e43c:	add	x29, sp, #0x170
    e440:	sub	x8, x29, #0x30
    e444:	str	x0, [x8, #32]
    e448:	str	x1, [x8, #24]
    e44c:	stur	w2, [x29, #-28]
    e450:	stur	wzr, [x29, #-36]
    e454:	ldr	x0, [x8, #24]
    e458:	str	x8, [sp, #176]
    e45c:	bl	55c0 <mpfr_number_p@plt>
    e460:	cbz	w0, e478 <mpc_log@@Base+0x48>
    e464:	ldr	x8, [sp, #176]
    e468:	ldr	x9, [x8, #24]
    e46c:	add	x0, x9, #0x20
    e470:	bl	55c0 <mpfr_number_p@plt>
    e474:	cbnz	w0, e5d0 <mpc_log@@Base+0x1a0>
    e478:	ldr	x8, [sp, #176]
    e47c:	ldr	x9, [x8, #24]
    e480:	ldr	x9, [x9, #16]
    e484:	mov	x10, #0x2                   	// #2
    e488:	movk	x10, #0x8000, lsl #48
    e48c:	cmp	x9, x10
    e490:	b.ne	e4e4 <mpc_log@@Base+0xb4>  // b.any
    e494:	ldr	x8, [sp, #176]
    e498:	ldr	x9, [x8, #24]
    e49c:	ldr	x9, [x9, #48]
    e4a0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    e4a4:	cmp	x9, x10
    e4a8:	b.ne	e4c0 <mpc_log@@Base+0x90>  // b.any
    e4ac:	ldr	x8, [sp, #176]
    e4b0:	ldr	x0, [x8, #32]
    e4b4:	mov	w1, #0x1                   	// #1
    e4b8:	bl	5220 <mpfr_set_inf@plt>
    e4bc:	b	e4cc <mpc_log@@Base+0x9c>
    e4c0:	ldr	x8, [sp, #176]
    e4c4:	ldr	x0, [x8, #32]
    e4c8:	bl	4b20 <mpfr_set_nan@plt>
    e4cc:	ldr	x8, [sp, #176]
    e4d0:	ldr	x9, [x8, #32]
    e4d4:	add	x0, x9, #0x20
    e4d8:	bl	4b20 <mpfr_set_nan@plt>
    e4dc:	stur	wzr, [x29, #-156]
    e4e0:	b	e588 <mpc_log@@Base+0x158>
    e4e4:	ldr	x8, [sp, #176]
    e4e8:	ldr	x9, [x8, #24]
    e4ec:	ldr	x9, [x9, #48]
    e4f0:	mov	x10, #0x2                   	// #2
    e4f4:	movk	x10, #0x8000, lsl #48
    e4f8:	cmp	x9, x10
    e4fc:	b.ne	e550 <mpc_log@@Base+0x120>  // b.any
    e500:	ldr	x8, [sp, #176]
    e504:	ldr	x9, [x8, #24]
    e508:	ldr	x9, [x9, #16]
    e50c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    e510:	cmp	x9, x10
    e514:	b.ne	e52c <mpc_log@@Base+0xfc>  // b.any
    e518:	ldr	x8, [sp, #176]
    e51c:	ldr	x0, [x8, #32]
    e520:	mov	w1, #0x1                   	// #1
    e524:	bl	5220 <mpfr_set_inf@plt>
    e528:	b	e538 <mpc_log@@Base+0x108>
    e52c:	ldr	x8, [sp, #176]
    e530:	ldr	x0, [x8, #32]
    e534:	bl	4b20 <mpfr_set_nan@plt>
    e538:	ldr	x8, [sp, #176]
    e53c:	ldr	x9, [x8, #32]
    e540:	add	x0, x9, #0x20
    e544:	bl	4b20 <mpfr_set_nan@plt>
    e548:	stur	wzr, [x29, #-156]
    e54c:	b	e588 <mpc_log@@Base+0x158>
    e550:	ldr	x8, [sp, #176]
    e554:	ldr	x9, [x8, #32]
    e558:	add	x0, x9, #0x20
    e55c:	ldr	x9, [x8, #24]
    e560:	add	x1, x9, #0x20
    e564:	ldr	x2, [x8, #24]
    e568:	ldur	w10, [x29, #-28]
    e56c:	asr	w3, w10, #4
    e570:	bl	4d60 <mpfr_atan2@plt>
    e574:	stur	w0, [x29, #-156]
    e578:	ldr	x8, [sp, #176]
    e57c:	ldr	x0, [x8, #32]
    e580:	mov	w1, #0x1                   	// #1
    e584:	bl	5220 <mpfr_set_inf@plt>
    e588:	ldur	w8, [x29, #-156]
    e58c:	cmp	w8, #0x0
    e590:	cset	w8, ge  // ge = tcont
    e594:	tbnz	w8, #0, e5a4 <mpc_log@@Base+0x174>
    e598:	mov	w8, #0x2                   	// #2
    e59c:	str	w8, [sp, #172]
    e5a0:	b	e5bc <mpc_log@@Base+0x18c>
    e5a4:	ldur	w8, [x29, #-156]
    e5a8:	mov	w9, wzr
    e5ac:	mov	w10, #0x1                   	// #1
    e5b0:	cmp	w8, #0x0
    e5b4:	csel	w8, w9, w10, eq  // eq = none
    e5b8:	str	w8, [sp, #172]
    e5bc:	ldr	w8, [sp, #172]
    e5c0:	mov	w9, wzr
    e5c4:	orr	w8, w9, w8, lsl #2
    e5c8:	stur	w8, [x29, #-4]
    e5cc:	b	ef84 <mpc_log@@Base+0xb54>
    e5d0:	ldr	x8, [sp, #176]
    e5d4:	ldr	x0, [x8, #24]
    e5d8:	bl	52f0 <mpfr_sgn@plt>
    e5dc:	stur	w0, [x29, #-144]
    e5e0:	ldr	x8, [sp, #176]
    e5e4:	ldr	x9, [x8, #24]
    e5e8:	add	x0, x9, #0x20
    e5ec:	bl	52f0 <mpfr_sgn@plt>
    e5f0:	stur	w0, [x29, #-148]
    e5f4:	ldur	w10, [x29, #-148]
    e5f8:	cbnz	w10, e84c <mpc_log@@Base+0x41c>
    e5fc:	ldur	w8, [x29, #-144]
    e600:	cbnz	w8, e644 <mpc_log@@Base+0x214>
    e604:	ldr	x8, [sp, #176]
    e608:	ldr	x9, [x8, #32]
    e60c:	add	x0, x9, #0x20
    e610:	ldr	x9, [x8, #24]
    e614:	add	x1, x9, #0x20
    e618:	ldr	x2, [x8, #24]
    e61c:	ldur	w10, [x29, #-28]
    e620:	asr	w3, w10, #4
    e624:	bl	4d60 <mpfr_atan2@plt>
    e628:	stur	w0, [x29, #-156]
    e62c:	ldr	x8, [sp, #176]
    e630:	ldr	x0, [x8, #32]
    e634:	mov	w1, #0xffffffff            	// #-1
    e638:	bl	5220 <mpfr_set_inf@plt>
    e63c:	stur	wzr, [x29, #-152]
    e640:	b	e7c8 <mpc_log@@Base+0x398>
    e644:	ldur	w8, [x29, #-144]
    e648:	cmp	w8, #0x0
    e64c:	cset	w8, le
    e650:	tbnz	w8, #0, e6a0 <mpc_log@@Base+0x270>
    e654:	ldr	x8, [sp, #176]
    e658:	ldr	x0, [x8, #32]
    e65c:	ldr	x1, [x8, #24]
    e660:	ldur	w9, [x29, #-28]
    e664:	and	w2, w9, #0xf
    e668:	bl	4e60 <mpfr_log@plt>
    e66c:	stur	w0, [x29, #-152]
    e670:	ldr	x8, [sp, #176]
    e674:	ldr	x10, [x8, #32]
    e678:	add	x0, x10, #0x20
    e67c:	ldr	x10, [x8, #24]
    e680:	add	x1, x10, #0x20
    e684:	ldur	w9, [x29, #-28]
    e688:	asr	w2, w9, #4
    e68c:	ldr	x10, [x8, #24]
    e690:	ldr	w3, [x10, #40]
    e694:	bl	52d0 <mpfr_set4@plt>
    e698:	stur	w0, [x29, #-156]
    e69c:	b	e7c8 <mpc_log@@Base+0x398>
    e6a0:	ldr	x8, [sp, #176]
    e6a4:	ldr	x9, [x8, #24]
    e6a8:	ldr	w10, [x9, #40]
    e6ac:	cmp	w10, #0x0
    e6b0:	cset	w10, lt  // lt = tstop
    e6b4:	and	w10, w10, #0x1
    e6b8:	stur	w10, [x29, #-176]
    e6bc:	ldur	w10, [x29, #-176]
    e6c0:	cbz	w10, e71c <mpc_log@@Base+0x2ec>
    e6c4:	ldur	w8, [x29, #-28]
    e6c8:	asr	w8, w8, #4
    e6cc:	cmp	w8, #0x2
    e6d0:	b.ne	e6e0 <mpc_log@@Base+0x2b0>  // b.any
    e6d4:	mov	w8, #0x3                   	// #3
    e6d8:	str	w8, [sp, #168]
    e6dc:	b	e710 <mpc_log@@Base+0x2e0>
    e6e0:	ldur	w8, [x29, #-28]
    e6e4:	asr	w8, w8, #4
    e6e8:	cmp	w8, #0x3
    e6ec:	b.ne	e6fc <mpc_log@@Base+0x2cc>  // b.any
    e6f0:	mov	w8, #0x2                   	// #2
    e6f4:	str	w8, [sp, #164]
    e6f8:	b	e708 <mpc_log@@Base+0x2d8>
    e6fc:	ldur	w8, [x29, #-28]
    e700:	asr	w8, w8, #4
    e704:	str	w8, [sp, #164]
    e708:	ldr	w8, [sp, #164]
    e70c:	str	w8, [sp, #168]
    e710:	ldr	w8, [sp, #168]
    e714:	stur	w8, [x29, #-180]
    e718:	b	e728 <mpc_log@@Base+0x2f8>
    e71c:	ldur	w8, [x29, #-28]
    e720:	asr	w8, w8, #4
    e724:	stur	w8, [x29, #-180]
    e728:	ldr	x8, [sp, #176]
    e72c:	ldr	x9, [x8, #24]
    e730:	ldr	q0, [x9]
    e734:	sub	x10, x29, #0x80
    e738:	stur	q0, [x29, #-128]
    e73c:	ldr	q0, [x9, #16]
    e740:	stur	q0, [x29, #-112]
    e744:	mov	x0, x10
    e748:	mov	x1, x10
    e74c:	mov	w11, wzr
    e750:	mov	w2, w11
    e754:	str	x10, [sp, #152]
    e758:	bl	4c60 <mpfr_neg@plt>
    e75c:	ldr	x8, [sp, #176]
    e760:	ldr	x9, [x8, #32]
    e764:	ldur	w11, [x29, #-28]
    e768:	and	w2, w11, #0xf
    e76c:	mov	x0, x9
    e770:	ldr	x1, [sp, #152]
    e774:	bl	4e60 <mpfr_log@plt>
    e778:	stur	w0, [x29, #-152]
    e77c:	ldr	x8, [sp, #176]
    e780:	ldr	x9, [x8, #32]
    e784:	add	x0, x9, #0x20
    e788:	ldur	w1, [x29, #-180]
    e78c:	bl	4b60 <mpfr_const_pi@plt>
    e790:	stur	w0, [x29, #-156]
    e794:	ldur	w11, [x29, #-176]
    e798:	cbz	w11, e7c8 <mpc_log@@Base+0x398>
    e79c:	ldr	x8, [sp, #176]
    e7a0:	ldr	x0, [x8, #32]
    e7a4:	ldr	x1, [x8, #32]
    e7a8:	mov	w9, wzr
    e7ac:	mov	w2, w9
    e7b0:	str	w9, [sp, #148]
    e7b4:	bl	5060 <mpc_conj@plt>
    e7b8:	ldur	w9, [x29, #-156]
    e7bc:	ldr	w10, [sp, #148]
    e7c0:	subs	w9, w10, w9
    e7c4:	stur	w9, [x29, #-156]
    e7c8:	ldur	w8, [x29, #-152]
    e7cc:	cmp	w8, #0x0
    e7d0:	cset	w8, ge  // ge = tcont
    e7d4:	tbnz	w8, #0, e7e4 <mpc_log@@Base+0x3b4>
    e7d8:	mov	w8, #0x2                   	// #2
    e7dc:	str	w8, [sp, #144]
    e7e0:	b	e7fc <mpc_log@@Base+0x3cc>
    e7e4:	ldur	w8, [x29, #-152]
    e7e8:	mov	w9, wzr
    e7ec:	mov	w10, #0x1                   	// #1
    e7f0:	cmp	w8, #0x0
    e7f4:	csel	w8, w9, w10, eq  // eq = none
    e7f8:	str	w8, [sp, #144]
    e7fc:	ldr	w8, [sp, #144]
    e800:	ldur	w9, [x29, #-156]
    e804:	cmp	w9, #0x0
    e808:	cset	w9, ge  // ge = tcont
    e80c:	str	w8, [sp, #140]
    e810:	tbnz	w9, #0, e820 <mpc_log@@Base+0x3f0>
    e814:	mov	w8, #0x2                   	// #2
    e818:	str	w8, [sp, #136]
    e81c:	b	e838 <mpc_log@@Base+0x408>
    e820:	ldur	w8, [x29, #-156]
    e824:	mov	w9, wzr
    e828:	mov	w10, #0x1                   	// #1
    e82c:	cmp	w8, #0x0
    e830:	csel	w8, w9, w10, eq  // eq = none
    e834:	str	w8, [sp, #136]
    e838:	ldr	w8, [sp, #136]
    e83c:	ldr	w9, [sp, #140]
    e840:	orr	w8, w9, w8, lsl #2
    e844:	stur	w8, [x29, #-4]
    e848:	b	ef84 <mpc_log@@Base+0xb54>
    e84c:	ldur	w8, [x29, #-144]
    e850:	cbnz	w8, ea68 <mpc_log@@Base+0x638>
    e854:	ldur	w8, [x29, #-148]
    e858:	cmp	w8, #0x0
    e85c:	cset	w8, le
    e860:	tbnz	w8, #0, e8c8 <mpc_log@@Base+0x498>
    e864:	ldr	x8, [sp, #176]
    e868:	ldr	x0, [x8, #32]
    e86c:	ldr	x9, [x8, #24]
    e870:	add	x1, x9, #0x20
    e874:	ldur	w10, [x29, #-28]
    e878:	and	w2, w10, #0xf
    e87c:	bl	4e60 <mpfr_log@plt>
    e880:	stur	w0, [x29, #-152]
    e884:	ldr	x8, [sp, #176]
    e888:	ldr	x9, [x8, #32]
    e88c:	add	x0, x9, #0x20
    e890:	ldur	w10, [x29, #-28]
    e894:	asr	w1, w10, #4
    e898:	bl	4b60 <mpfr_const_pi@plt>
    e89c:	stur	w0, [x29, #-156]
    e8a0:	ldr	x8, [sp, #176]
    e8a4:	ldr	x9, [x8, #32]
    e8a8:	add	x0, x9, #0x20
    e8ac:	ldr	x9, [x8, #32]
    e8b0:	add	x1, x9, #0x20
    e8b4:	mov	x2, #0x1                   	// #1
    e8b8:	mov	w10, wzr
    e8bc:	mov	w3, w10
    e8c0:	bl	5420 <mpfr_div_2ui@plt>
    e8c4:	b	e9e4 <mpc_log@@Base+0x5b4>
    e8c8:	ldr	x8, [sp, #176]
    e8cc:	ldr	x9, [x8, #24]
    e8d0:	ldr	q0, [x9, #32]
    e8d4:	sub	x10, x29, #0x80
    e8d8:	stur	q0, [x29, #-128]
    e8dc:	ldr	q0, [x9, #48]
    e8e0:	stur	q0, [x29, #-112]
    e8e4:	mov	x0, x10
    e8e8:	mov	x1, x10
    e8ec:	mov	w11, wzr
    e8f0:	mov	w2, w11
    e8f4:	str	x10, [sp, #128]
    e8f8:	bl	4c60 <mpfr_neg@plt>
    e8fc:	ldr	x8, [sp, #176]
    e900:	ldr	x9, [x8, #32]
    e904:	ldur	w11, [x29, #-28]
    e908:	and	w2, w11, #0xf
    e90c:	mov	x0, x9
    e910:	ldr	x1, [sp, #128]
    e914:	bl	4e60 <mpfr_log@plt>
    e918:	stur	w0, [x29, #-152]
    e91c:	ldr	x8, [sp, #176]
    e920:	ldr	x9, [x8, #32]
    e924:	add	x0, x9, #0x20
    e928:	ldur	w11, [x29, #-28]
    e92c:	asr	w11, w11, #4
    e930:	cmp	w11, #0x2
    e934:	str	x0, [sp, #120]
    e938:	b.ne	e948 <mpc_log@@Base+0x518>  // b.any
    e93c:	mov	w8, #0x3                   	// #3
    e940:	str	w8, [sp, #116]
    e944:	b	e978 <mpc_log@@Base+0x548>
    e948:	ldur	w8, [x29, #-28]
    e94c:	asr	w8, w8, #4
    e950:	cmp	w8, #0x3
    e954:	b.ne	e964 <mpc_log@@Base+0x534>  // b.any
    e958:	mov	w8, #0x2                   	// #2
    e95c:	str	w8, [sp, #112]
    e960:	b	e970 <mpc_log@@Base+0x540>
    e964:	ldur	w8, [x29, #-28]
    e968:	asr	w8, w8, #4
    e96c:	str	w8, [sp, #112]
    e970:	ldr	w8, [sp, #112]
    e974:	str	w8, [sp, #116]
    e978:	ldr	w8, [sp, #116]
    e97c:	ldr	x0, [sp, #120]
    e980:	mov	w1, w8
    e984:	bl	4b60 <mpfr_const_pi@plt>
    e988:	stur	w0, [x29, #-156]
    e98c:	ldr	x9, [sp, #176]
    e990:	ldr	x10, [x9, #32]
    e994:	add	x0, x10, #0x20
    e998:	ldr	x10, [x9, #32]
    e99c:	add	x1, x10, #0x20
    e9a0:	mov	x2, #0x1                   	// #1
    e9a4:	mov	w8, wzr
    e9a8:	mov	w3, w8
    e9ac:	str	w8, [sp, #108]
    e9b0:	bl	5420 <mpfr_div_2ui@plt>
    e9b4:	ldr	x9, [sp, #176]
    e9b8:	ldr	x10, [x9, #32]
    e9bc:	add	x10, x10, #0x20
    e9c0:	ldr	x11, [x9, #32]
    e9c4:	add	x1, x11, #0x20
    e9c8:	mov	x0, x10
    e9cc:	ldr	w2, [sp, #108]
    e9d0:	bl	4c60 <mpfr_neg@plt>
    e9d4:	ldur	w8, [x29, #-156]
    e9d8:	ldr	w12, [sp, #108]
    e9dc:	subs	w8, w12, w8
    e9e0:	stur	w8, [x29, #-156]
    e9e4:	ldur	w8, [x29, #-152]
    e9e8:	cmp	w8, #0x0
    e9ec:	cset	w8, ge  // ge = tcont
    e9f0:	tbnz	w8, #0, ea00 <mpc_log@@Base+0x5d0>
    e9f4:	mov	w8, #0x2                   	// #2
    e9f8:	str	w8, [sp, #104]
    e9fc:	b	ea18 <mpc_log@@Base+0x5e8>
    ea00:	ldur	w8, [x29, #-152]
    ea04:	mov	w9, wzr
    ea08:	mov	w10, #0x1                   	// #1
    ea0c:	cmp	w8, #0x0
    ea10:	csel	w8, w9, w10, eq  // eq = none
    ea14:	str	w8, [sp, #104]
    ea18:	ldr	w8, [sp, #104]
    ea1c:	ldur	w9, [x29, #-156]
    ea20:	cmp	w9, #0x0
    ea24:	cset	w9, ge  // ge = tcont
    ea28:	str	w8, [sp, #100]
    ea2c:	tbnz	w9, #0, ea3c <mpc_log@@Base+0x60c>
    ea30:	mov	w8, #0x2                   	// #2
    ea34:	str	w8, [sp, #96]
    ea38:	b	ea54 <mpc_log@@Base+0x624>
    ea3c:	ldur	w8, [x29, #-156]
    ea40:	mov	w9, wzr
    ea44:	mov	w10, #0x1                   	// #1
    ea48:	cmp	w8, #0x0
    ea4c:	csel	w8, w9, w10, eq  // eq = none
    ea50:	str	w8, [sp, #96]
    ea54:	ldr	w8, [sp, #96]
    ea58:	ldr	w9, [sp, #100]
    ea5c:	orr	w8, w9, w8, lsl #2
    ea60:	stur	w8, [x29, #-4]
    ea64:	b	ef84 <mpc_log@@Base+0xb54>
    ea68:	ldr	x8, [sp, #176]
    ea6c:	ldr	x9, [x8, #32]
    ea70:	ldr	x9, [x9]
    ea74:	stur	x9, [x29, #-136]
    ea78:	sub	x0, x29, #0x80
    ea7c:	mov	x1, #0x2                   	// #2
    ea80:	bl	5530 <mpfr_init2@plt>
    ea84:	stur	wzr, [x29, #-32]
    ea88:	mov	w10, #0x1                   	// #1
    ea8c:	stur	w10, [x29, #-140]
    ea90:	ldur	w8, [x29, #-32]
    ea94:	mov	w9, #0x0                   	// #0
    ea98:	str	w9, [sp, #92]
    ea9c:	cbnz	w8, eab0 <mpc_log@@Base+0x680>
    eaa0:	ldur	w8, [x29, #-140]
    eaa4:	cmp	w8, #0x2
    eaa8:	cset	w8, le
    eaac:	str	w8, [sp, #92]
    eab0:	ldr	w8, [sp, #92]
    eab4:	tbnz	w8, #0, eabc <mpc_log@@Base+0x68c>
    eab8:	b	ebd4 <mpc_log@@Base+0x7a4>
    eabc:	ldur	x0, [x29, #-136]
    eac0:	bl	4de0 <mpc_ceil_log2@plt>
    eac4:	add	x8, x0, #0x4
    eac8:	ldur	x9, [x29, #-136]
    eacc:	add	x8, x9, x8
    ead0:	stur	x8, [x29, #-136]
    ead4:	ldur	x1, [x29, #-136]
    ead8:	sub	x8, x29, #0x80
    eadc:	mov	x0, x8
    eae0:	str	x8, [sp, #80]
    eae4:	bl	4d40 <mpfr_set_prec@plt>
    eae8:	ldr	x8, [sp, #176]
    eaec:	ldr	x1, [x8, #24]
    eaf0:	ldr	x0, [sp, #80]
    eaf4:	mov	w10, wzr
    eaf8:	mov	w2, w10
    eafc:	bl	52a0 <mpc_abs@plt>
    eb00:	ldur	x8, [x29, #-112]
    eb04:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    eb08:	cmp	x8, x9
    eb0c:	b.ne	eb14 <mpc_log@@Base+0x6e4>  // b.any
    eb10:	b	ebd4 <mpc_log@@Base+0x7a4>
    eb14:	sub	x8, x29, #0x80
    eb18:	mov	x0, x8
    eb1c:	mov	x1, x8
    eb20:	mov	w9, wzr
    eb24:	mov	w2, w9
    eb28:	bl	4e60 <mpfr_log@plt>
    eb2c:	ldur	x8, [x29, #-112]
    eb30:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    eb34:	cmp	x8, x10
    eb38:	b.ne	eb40 <mpc_log@@Base+0x710>  // b.any
    eb3c:	b	ebd4 <mpc_log@@Base+0x7a4>
    eb40:	ldur	x8, [x29, #-112]
    eb44:	mov	x9, xzr
    eb48:	subs	x8, x9, x8
    eb4c:	cmp	x8, #0x0
    eb50:	cset	w10, le
    eb54:	tbnz	w10, #0, eb6c <mpc_log@@Base+0x73c>
    eb58:	ldur	x8, [x29, #-112]
    eb5c:	mov	x9, xzr
    eb60:	subs	x8, x9, x8
    eb64:	str	x8, [sp, #72]
    eb68:	b	eb74 <mpc_log@@Base+0x744>
    eb6c:	mov	x8, xzr
    eb70:	str	x8, [sp, #72]
    eb74:	ldr	x8, [sp, #72]
    eb78:	add	x8, x8, #0x1
    eb7c:	stur	w8, [x29, #-160]
    eb80:	ldur	x9, [x29, #-136]
    eb84:	ldursw	x10, [x29, #-160]
    eb88:	subs	x1, x9, x10
    eb8c:	ldr	x9, [sp, #176]
    eb90:	ldr	x10, [x9, #32]
    eb94:	ldr	x10, [x10]
    eb98:	ldur	w8, [x29, #-28]
    eb9c:	mov	w11, wzr
    eba0:	tst	w8, #0xf
    eba4:	cset	w8, eq  // eq = none
    eba8:	and	w8, w8, #0x1
    ebac:	add	x4, x10, w8, sxtw
    ebb0:	sub	x0, x29, #0x80
    ebb4:	mov	w2, w11
    ebb8:	mov	w3, #0x1                   	// #1
    ebbc:	bl	5540 <mpfr_can_round@plt>
    ebc0:	stur	w0, [x29, #-32]
    ebc4:	ldur	w8, [x29, #-140]
    ebc8:	add	w8, w8, #0x1
    ebcc:	stur	w8, [x29, #-140]
    ebd0:	b	ea90 <mpc_log@@Base+0x660>
    ebd4:	ldur	w8, [x29, #-32]
    ebd8:	cbnz	w8, ee7c <mpc_log@@Base+0xa4c>
    ebdc:	ldr	x8, [sp, #176]
    ebe0:	ldr	x9, [x8, #32]
    ebe4:	ldr	x9, [x9]
    ebe8:	stur	x9, [x29, #-136]
    ebec:	sub	x0, x29, #0x58
    ebf0:	mov	x1, #0x2                   	// #2
    ebf4:	bl	5530 <mpfr_init2@plt>
    ebf8:	ldr	x8, [sp, #176]
    ebfc:	ldr	x0, [x8, #24]
    ec00:	ldr	x9, [x8, #24]
    ec04:	add	x1, x9, #0x20
    ec08:	bl	54b0 <mpfr_cmpabs@plt>
    ec0c:	cmp	w0, #0x0
    ec10:	cset	w10, lt  // lt = tstop
    ec14:	tbnz	w10, #0, ec34 <mpc_log@@Base+0x804>
    ec18:	ldr	x8, [sp, #176]
    ec1c:	ldr	x9, [x8, #24]
    ec20:	str	x9, [x8]
    ec24:	ldr	x9, [x8, #24]
    ec28:	add	x9, x9, #0x20
    ec2c:	stur	x9, [x29, #-56]
    ec30:	b	ec4c <mpc_log@@Base+0x81c>
    ec34:	ldr	x8, [sp, #176]
    ec38:	ldr	x9, [x8, #24]
    ec3c:	add	x9, x9, #0x20
    ec40:	str	x9, [x8]
    ec44:	ldr	x9, [x8, #24]
    ec48:	stur	x9, [x29, #-56]
    ec4c:	ldur	x0, [x29, #-136]
    ec50:	bl	4de0 <mpc_ceil_log2@plt>
    ec54:	add	x8, x0, #0x4
    ec58:	ldur	x9, [x29, #-136]
    ec5c:	add	x8, x9, x8
    ec60:	stur	x8, [x29, #-136]
    ec64:	ldur	x1, [x29, #-136]
    ec68:	sub	x8, x29, #0x58
    ec6c:	mov	x0, x8
    ec70:	str	x8, [sp, #64]
    ec74:	bl	4d40 <mpfr_set_prec@plt>
    ec78:	ldur	x1, [x29, #-136]
    ec7c:	sub	x8, x29, #0x80
    ec80:	mov	x0, x8
    ec84:	str	x8, [sp, #56]
    ec88:	bl	4d40 <mpfr_set_prec@plt>
    ec8c:	ldur	x1, [x29, #-56]
    ec90:	ldr	x8, [sp, #176]
    ec94:	ldr	x2, [x8]
    ec98:	ldr	x0, [sp, #64]
    ec9c:	mov	w10, #0x3                   	// #3
    eca0:	mov	w3, w10
    eca4:	str	w10, [sp, #52]
    eca8:	bl	5250 <mpfr_div@plt>
    ecac:	ldr	x8, [sp, #64]
    ecb0:	mov	x0, x8
    ecb4:	mov	x1, x8
    ecb8:	ldr	w2, [sp, #52]
    ecbc:	bl	5110 <mpfr_sqr@plt>
    ecc0:	ldr	x8, [sp, #64]
    ecc4:	mov	x0, x8
    ecc8:	mov	x1, x8
    eccc:	ldr	w2, [sp, #52]
    ecd0:	bl	52e0 <mpfr_log1p@plt>
    ecd4:	ldr	x8, [sp, #64]
    ecd8:	mov	x0, x8
    ecdc:	mov	x1, x8
    ece0:	mov	x2, #0x1                   	// #1
    ece4:	ldr	w3, [sp, #52]
    ece8:	bl	5420 <mpfr_div_2ui@plt>
    ecec:	ldr	x8, [sp, #176]
    ecf0:	ldr	x1, [x8]
    ecf4:	ldr	x9, [sp, #56]
    ecf8:	mov	x0, x9
    ecfc:	mov	w10, wzr
    ed00:	mov	w2, w10
    ed04:	mov	w3, #0x1                   	// #1
    ed08:	str	w10, [sp, #48]
    ed0c:	bl	52d0 <mpfr_set4@plt>
    ed10:	ldr	x8, [sp, #56]
    ed14:	mov	x0, x8
    ed18:	mov	x1, x8
    ed1c:	ldr	w2, [sp, #48]
    ed20:	bl	4e60 <mpfr_log@plt>
    ed24:	ldur	x8, [x29, #-112]
    ed28:	stur	x8, [x29, #-168]
    ed2c:	ldur	w10, [x29, #-120]
    ed30:	cmp	w10, #0x0
    ed34:	cset	w10, lt  // lt = tstop
    ed38:	and	w10, w10, #0x1
    ed3c:	stur	w10, [x29, #-172]
    ed40:	ldr	x8, [sp, #56]
    ed44:	mov	x0, x8
    ed48:	mov	x1, x8
    ed4c:	ldr	x2, [sp, #64]
    ed50:	ldr	w3, [sp, #48]
    ed54:	bl	4f50 <mpfr_add@plt>
    ed58:	ldur	w10, [x29, #-172]
    ed5c:	cbnz	w10, ed6c <mpc_log@@Base+0x93c>
    ed60:	mov	w8, #0x5                   	// #5
    ed64:	stur	w8, [x29, #-160]
    ed68:	b	edbc <mpc_log@@Base+0x98c>
    ed6c:	ldur	x8, [x29, #-72]
    ed70:	add	x8, x8, #0x5
    ed74:	ldur	x9, [x29, #-168]
    ed78:	subs	x9, x9, #0x1
    ed7c:	ldur	x10, [x29, #-112]
    ed80:	subs	x9, x9, x10
    ed84:	cmp	x8, x9
    ed88:	b.le	ed9c <mpc_log@@Base+0x96c>
    ed8c:	ldur	x8, [x29, #-72]
    ed90:	add	x8, x8, #0x5
    ed94:	str	x8, [sp, #40]
    ed98:	b	edb0 <mpc_log@@Base+0x980>
    ed9c:	ldur	x8, [x29, #-168]
    eda0:	subs	x8, x8, #0x1
    eda4:	ldur	x9, [x29, #-112]
    eda8:	subs	x8, x8, x9
    edac:	str	x8, [sp, #40]
    edb0:	ldr	x8, [sp, #40]
    edb4:	add	x8, x8, #0x2
    edb8:	stur	w8, [x29, #-160]
    edbc:	ldr	x8, [sp, #176]
    edc0:	ldr	x0, [x8]
    edc4:	mov	x1, #0xffffffffffffffff    	// #-1
    edc8:	mov	x9, xzr
    edcc:	mov	x2, x9
    edd0:	bl	50e0 <mpfr_cmp_si_2exp@plt>
    edd4:	cbz	w0, edf4 <mpc_log@@Base+0x9c4>
    edd8:	ldr	x8, [sp, #176]
    eddc:	ldr	x0, [x8]
    ede0:	mov	x1, #0x1                   	// #1
    ede4:	mov	x9, xzr
    ede8:	mov	x2, x9
    edec:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
    edf0:	cbnz	w0, ee0c <mpc_log@@Base+0x9dc>
    edf4:	ldur	x8, [x29, #-112]
    edf8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    edfc:	cmp	x8, x9
    ee00:	b.ne	ee0c <mpc_log@@Base+0x9dc>  // b.any
    ee04:	mov	w8, #0x1                   	// #1
    ee08:	stur	w8, [x29, #-36]
    ee0c:	ldur	w8, [x29, #-36]
    ee10:	mov	w9, #0x0                   	// #0
    ee14:	str	w9, [sp, #36]
    ee18:	cbnz	w8, ee6c <mpc_log@@Base+0xa3c>
    ee1c:	ldur	x8, [x29, #-136]
    ee20:	ldursw	x9, [x29, #-160]
    ee24:	subs	x1, x8, x9
    ee28:	ldr	x8, [sp, #176]
    ee2c:	ldr	x9, [x8, #32]
    ee30:	ldr	x9, [x9]
    ee34:	ldur	w10, [x29, #-28]
    ee38:	mov	w11, wzr
    ee3c:	tst	w10, #0xf
    ee40:	cset	w10, eq  // eq = none
    ee44:	and	w10, w10, #0x1
    ee48:	add	x4, x9, w10, sxtw
    ee4c:	sub	x0, x29, #0x80
    ee50:	mov	w2, w11
    ee54:	mov	w3, #0x1                   	// #1
    ee58:	bl	5540 <mpfr_can_round@plt>
    ee5c:	cmp	w0, #0x0
    ee60:	cset	w10, ne  // ne = any
    ee64:	eor	w10, w10, #0x1
    ee68:	str	w10, [sp, #36]
    ee6c:	ldr	w8, [sp, #36]
    ee70:	tbnz	w8, #0, ec4c <mpc_log@@Base+0x81c>
    ee74:	sub	x0, x29, #0x58
    ee78:	bl	4e30 <mpfr_clear@plt>
    ee7c:	ldr	x8, [sp, #176]
    ee80:	ldr	x9, [x8, #32]
    ee84:	add	x0, x9, #0x20
    ee88:	ldr	x9, [x8, #24]
    ee8c:	add	x1, x9, #0x20
    ee90:	ldr	x2, [x8, #24]
    ee94:	ldur	w10, [x29, #-28]
    ee98:	asr	w3, w10, #4
    ee9c:	bl	4d60 <mpfr_atan2@plt>
    eea0:	stur	w0, [x29, #-156]
    eea4:	ldur	w10, [x29, #-36]
    eea8:	cbz	w10, eedc <mpc_log@@Base+0xaac>
    eeac:	ldr	x8, [sp, #176]
    eeb0:	ldr	x0, [x8, #32]
    eeb4:	str	x0, [sp, #24]
    eeb8:	bl	56c0 <mpfr_get_emin_min@plt>
    eebc:	subs	x2, x0, #0x2
    eec0:	ldur	w9, [x29, #-28]
    eec4:	and	w3, w9, #0xf
    eec8:	ldr	x0, [sp, #24]
    eecc:	mov	x1, #0x1                   	// #1
    eed0:	bl	5230 <mpfr_set_ui_2exp@plt>
    eed4:	stur	w0, [x29, #-152]
    eed8:	b	eefc <mpc_log@@Base+0xacc>
    eedc:	ldr	x8, [sp, #176]
    eee0:	ldr	x0, [x8, #32]
    eee4:	ldur	w9, [x29, #-28]
    eee8:	and	w2, w9, #0xf
    eeec:	sub	x1, x29, #0x80
    eef0:	ldur	w3, [x29, #-120]
    eef4:	bl	52d0 <mpfr_set4@plt>
    eef8:	stur	w0, [x29, #-152]
    eefc:	sub	x0, x29, #0x80
    ef00:	bl	4e30 <mpfr_clear@plt>
    ef04:	ldur	w8, [x29, #-152]
    ef08:	cmp	w8, #0x0
    ef0c:	cset	w8, ge  // ge = tcont
    ef10:	tbnz	w8, #0, ef20 <mpc_log@@Base+0xaf0>
    ef14:	mov	w8, #0x2                   	// #2
    ef18:	str	w8, [sp, #20]
    ef1c:	b	ef38 <mpc_log@@Base+0xb08>
    ef20:	ldur	w8, [x29, #-152]
    ef24:	mov	w9, wzr
    ef28:	mov	w10, #0x1                   	// #1
    ef2c:	cmp	w8, #0x0
    ef30:	csel	w8, w9, w10, eq  // eq = none
    ef34:	str	w8, [sp, #20]
    ef38:	ldr	w8, [sp, #20]
    ef3c:	ldur	w9, [x29, #-156]
    ef40:	cmp	w9, #0x0
    ef44:	cset	w9, ge  // ge = tcont
    ef48:	str	w8, [sp, #16]
    ef4c:	tbnz	w9, #0, ef5c <mpc_log@@Base+0xb2c>
    ef50:	mov	w8, #0x2                   	// #2
    ef54:	str	w8, [sp, #12]
    ef58:	b	ef74 <mpc_log@@Base+0xb44>
    ef5c:	ldur	w8, [x29, #-156]
    ef60:	mov	w9, wzr
    ef64:	mov	w10, #0x1                   	// #1
    ef68:	cmp	w8, #0x0
    ef6c:	csel	w8, w9, w10, eq  // eq = none
    ef70:	str	w8, [sp, #12]
    ef74:	ldr	w8, [sp, #12]
    ef78:	ldr	w9, [sp, #16]
    ef7c:	orr	w8, w9, w8, lsl #2
    ef80:	stur	w8, [x29, #-4]
    ef84:	ldur	w0, [x29, #-4]
    ef88:	ldr	x28, [sp, #384]
    ef8c:	ldp	x29, x30, [sp, #368]
    ef90:	add	sp, sp, #0x190
    ef94:	ret

000000000000ef98 <mpc_log10@@Base>:
    ef98:	sub	sp, sp, #0x190
    ef9c:	stp	x29, x30, [sp, #368]
    efa0:	str	x28, [sp, #384]
    efa4:	add	x29, sp, #0x170
    efa8:	mov	x8, #0x2                   	// #2
    efac:	sub	x9, x29, #0x60
    efb0:	sub	x10, x29, #0xa0
    efb4:	stur	x0, [x29, #-8]
    efb8:	stur	x1, [x29, #-16]
    efbc:	stur	w2, [x29, #-20]
    efc0:	stur	wzr, [x29, #-24]
    efc4:	stur	wzr, [x29, #-28]
    efc8:	stur	wzr, [x29, #-32]
    efcc:	mov	x0, x9
    efd0:	mov	x1, x8
    efd4:	str	x8, [sp, #152]
    efd8:	str	x10, [sp, #144]
    efdc:	bl	5530 <mpfr_init2@plt>
    efe0:	ldr	x0, [sp, #144]
    efe4:	ldr	x1, [sp, #152]
    efe8:	bl	4db0 <mpc_init2@plt>
    efec:	ldur	x8, [x29, #-8]
    eff0:	ldr	x8, [x8]
    eff4:	ldur	x9, [x29, #-8]
    eff8:	ldr	x9, [x9, #32]
    effc:	cmp	x8, x9
    f000:	b.le	f014 <mpc_log10@@Base+0x7c>
    f004:	ldur	x8, [x29, #-8]
    f008:	ldr	x8, [x8]
    f00c:	str	x8, [sp, #136]
    f010:	b	f020 <mpc_log10@@Base+0x88>
    f014:	ldur	x8, [x29, #-8]
    f018:	ldr	x8, [x8, #32]
    f01c:	str	x8, [sp, #136]
    f020:	ldr	x8, [sp, #136]
    f024:	stur	x8, [x29, #-64]
    f028:	ldur	w8, [x29, #-24]
    f02c:	cbnz	w8, f38c <mpc_log10@@Base+0x3f4>
    f030:	ldur	w8, [x29, #-28]
    f034:	add	w8, w8, #0x1
    f038:	stur	w8, [x29, #-28]
    f03c:	ldur	w8, [x29, #-28]
    f040:	cmp	w8, #0x2
    f044:	b.gt	f05c <mpc_log10@@Base+0xc4>
    f048:	ldur	x0, [x29, #-64]
    f04c:	bl	4de0 <mpc_ceil_log2@plt>
    f050:	add	x8, x0, #0x4
    f054:	str	x8, [sp, #128]
    f058:	b	f06c <mpc_log10@@Base+0xd4>
    f05c:	ldur	x8, [x29, #-64]
    f060:	mov	x9, #0x2                   	// #2
    f064:	sdiv	x8, x8, x9
    f068:	str	x8, [sp, #128]
    f06c:	ldr	x8, [sp, #128]
    f070:	ldur	x9, [x29, #-64]
    f074:	add	x8, x9, x8
    f078:	stur	x8, [x29, #-64]
    f07c:	ldur	x1, [x29, #-64]
    f080:	sub	x0, x29, #0x60
    f084:	bl	4d40 <mpfr_set_prec@plt>
    f088:	ldur	x1, [x29, #-64]
    f08c:	sub	x8, x29, #0xa0
    f090:	mov	x0, x8
    f094:	str	x8, [sp, #120]
    f098:	bl	4cd0 <mpc_set_prec@plt>
    f09c:	ldur	x1, [x29, #-16]
    f0a0:	ldur	w2, [x29, #-20]
    f0a4:	ldr	x0, [sp, #120]
    f0a8:	bl	4e90 <mpc_log@plt>
    f0ac:	stur	w0, [x29, #-44]
    f0b0:	ldr	x8, [sp, #120]
    f0b4:	add	x0, x8, #0x20
    f0b8:	bl	55c0 <mpfr_number_p@plt>
    f0bc:	cbz	w0, f0d0 <mpc_log10@@Base+0x138>
    f0c0:	ldur	x8, [x29, #-112]
    f0c4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f0c8:	cmp	x8, x9
    f0cc:	b.ne	f0e0 <mpc_log10@@Base+0x148>  // b.any
    f0d0:	mov	w8, #0x1                   	// #1
    f0d4:	stur	w8, [x29, #-40]
    f0d8:	stur	w8, [x29, #-24]
    f0dc:	b	f15c <mpc_log10@@Base+0x1c4>
    f0e0:	mov	w8, wzr
    f0e4:	stur	wzr, [x29, #-40]
    f0e8:	sub	x9, x29, #0x60
    f0ec:	mov	x0, x9
    f0f0:	str	w8, [sp, #116]
    f0f4:	str	x9, [sp, #104]
    f0f8:	bl	f4f4 <mpc_log10@@Base+0x55c>
    f0fc:	sub	x9, x29, #0xa0
    f100:	add	x0, x9, #0x20
    f104:	add	x1, x9, #0x20
    f108:	ldr	x2, [sp, #104]
    f10c:	ldr	w3, [sp, #116]
    f110:	str	x9, [sp, #96]
    f114:	bl	5250 <mpfr_div@plt>
    f118:	ldr	x9, [sp, #96]
    f11c:	add	x10, x9, #0x20
    f120:	ldur	x11, [x29, #-64]
    f124:	subs	x1, x11, #0x2
    f128:	ldur	x11, [x29, #-8]
    f12c:	ldr	x11, [x11, #32]
    f130:	ldur	w8, [x29, #-20]
    f134:	asr	w8, w8, #4
    f138:	cmp	w8, #0x0
    f13c:	cset	w8, eq  // eq = none
    f140:	and	w8, w8, #0x1
    f144:	add	x4, x11, w8, sxtw
    f148:	mov	x0, x10
    f14c:	ldr	w2, [sp, #116]
    f150:	mov	w3, #0x1                   	// #1
    f154:	bl	5540 <mpfr_can_round@plt>
    f158:	stur	w0, [x29, #-24]
    f15c:	ldur	w8, [x29, #-24]
    f160:	cbz	w8, f388 <mpc_log10@@Base+0x3f0>
    f164:	sub	x0, x29, #0xa0
    f168:	bl	55c0 <mpfr_number_p@plt>
    f16c:	cbz	w0, f180 <mpc_log10@@Base+0x1e8>
    f170:	ldur	x8, [x29, #-144]
    f174:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f178:	cmp	x8, x9
    f17c:	b.ne	f18c <mpc_log10@@Base+0x1f4>  // b.any
    f180:	mov	w8, #0x1                   	// #1
    f184:	stur	w8, [x29, #-36]
    f188:	b	f200 <mpc_log10@@Base+0x268>
    f18c:	stur	wzr, [x29, #-36]
    f190:	ldur	w8, [x29, #-40]
    f194:	cbz	w8, f1a0 <mpc_log10@@Base+0x208>
    f198:	sub	x0, x29, #0x60
    f19c:	bl	f4f4 <mpc_log10@@Base+0x55c>
    f1a0:	sub	x8, x29, #0xa0
    f1a4:	mov	x0, x8
    f1a8:	mov	x1, x8
    f1ac:	sub	x2, x29, #0x60
    f1b0:	mov	w9, wzr
    f1b4:	mov	w3, w9
    f1b8:	str	x8, [sp, #88]
    f1bc:	str	w9, [sp, #84]
    f1c0:	bl	5250 <mpfr_div@plt>
    f1c4:	ldur	x8, [x29, #-64]
    f1c8:	subs	x1, x8, #0x2
    f1cc:	ldur	x8, [x29, #-8]
    f1d0:	ldr	x8, [x8]
    f1d4:	ldur	w9, [x29, #-20]
    f1d8:	tst	w9, #0xf
    f1dc:	cset	w9, eq  // eq = none
    f1e0:	and	w9, w9, #0x1
    f1e4:	add	x4, x8, w9, sxtw
    f1e8:	ldr	x8, [sp, #88]
    f1ec:	mov	x0, x8
    f1f0:	ldr	w2, [sp, #84]
    f1f4:	mov	w3, #0x1                   	// #1
    f1f8:	bl	5540 <mpfr_can_round@plt>
    f1fc:	stur	w0, [x29, #-24]
    f200:	ldur	w8, [x29, #-24]
    f204:	cbnz	w8, f388 <mpc_log10@@Base+0x3f0>
    f208:	ldur	w8, [x29, #-32]
    f20c:	cbnz	w8, f388 <mpc_log10@@Base+0x3f0>
    f210:	ldur	x0, [x29, #-16]
    f214:	bl	4f10 <mpfr_integer_p@plt>
    f218:	cbz	w0, f388 <mpc_log10@@Base+0x3f0>
    f21c:	ldur	x8, [x29, #-16]
    f220:	add	x0, x8, #0x20
    f224:	bl	4f10 <mpfr_integer_p@plt>
    f228:	cbz	w0, f388 <mpc_log10@@Base+0x3f0>
    f22c:	mov	w8, #0x1                   	// #1
    f230:	stur	w8, [x29, #-32]
    f234:	sub	x9, x29, #0xb0
    f238:	mov	x0, x9
    f23c:	str	x9, [sp, #72]
    f240:	bl	5590 <__gmpz_init@plt>
    f244:	add	x9, sp, #0xb0
    f248:	mov	x0, x9
    f24c:	str	x9, [sp, #64]
    f250:	bl	5590 <__gmpz_init@plt>
    f254:	ldur	x1, [x29, #-16]
    f258:	ldr	x0, [sp, #72]
    f25c:	mov	w8, wzr
    f260:	mov	w2, w8
    f264:	str	w8, [sp, #60]
    f268:	bl	4ca0 <mpfr_get_z@plt>
    f26c:	ldur	x9, [x29, #-16]
    f270:	add	x1, x9, #0x20
    f274:	ldr	x9, [sp, #64]
    f278:	mov	x0, x9
    f27c:	ldr	w2, [sp, #60]
    f280:	bl	4ca0 <mpfr_get_z@plt>
    f284:	ldr	x9, [sp, #72]
    f288:	mov	x0, x9
    f28c:	mov	x1, x9
    f290:	mov	x2, x9
    f294:	bl	4e00 <__gmpz_mul@plt>
    f298:	ldr	x0, [sp, #64]
    f29c:	ldr	x1, [sp, #64]
    f2a0:	ldr	x2, [sp, #64]
    f2a4:	bl	4e00 <__gmpz_mul@plt>
    f2a8:	ldr	x0, [sp, #72]
    f2ac:	ldr	x1, [sp, #72]
    f2b0:	ldr	x2, [sp, #64]
    f2b4:	bl	54d0 <__gmpz_add@plt>
    f2b8:	ldr	x0, [sp, #72]
    f2bc:	mov	x9, xzr
    f2c0:	mov	x1, x9
    f2c4:	bl	4ad0 <__gmpz_scan1@plt>
    f2c8:	str	x0, [sp, #160]
    f2cc:	ldr	x0, [sp, #72]
    f2d0:	mov	w1, #0xa                   	// #10
    f2d4:	bl	55a0 <__gmpz_sizeinbase@plt>
    f2d8:	str	x0, [sp, #168]
    f2dc:	ldr	x9, [sp, #168]
    f2e0:	ldr	x10, [sp, #160]
    f2e4:	add	x10, x10, #0x1
    f2e8:	cmp	x9, x10
    f2ec:	b.eq	f304 <mpc_log10@@Base+0x36c>  // b.none
    f2f0:	ldr	x8, [sp, #168]
    f2f4:	ldr	x9, [sp, #160]
    f2f8:	add	x9, x9, #0x2
    f2fc:	cmp	x8, x9
    f300:	b.ne	f378 <mpc_log10@@Base+0x3e0>  // b.any
    f304:	ldr	x2, [sp, #160]
    f308:	sub	x8, x29, #0xb0
    f30c:	mov	x0, x8
    f310:	mov	x1, x8
    f314:	str	x8, [sp, #48]
    f318:	bl	4ef0 <__gmpz_fdiv_q_2exp@plt>
    f31c:	ldr	x2, [sp, #160]
    f320:	add	x8, sp, #0xb0
    f324:	mov	x0, x8
    f328:	mov	x1, #0x5                   	// #5
    f32c:	str	x8, [sp, #40]
    f330:	bl	51b0 <__gmpz_ui_pow_ui@plt>
    f334:	ldr	x0, [sp, #40]
    f338:	ldr	x1, [sp, #48]
    f33c:	bl	5400 <__gmpz_cmp@plt>
    f340:	cbnz	w0, f378 <mpc_log10@@Base+0x3e0>
    f344:	sub	x8, x29, #0xa0
    f348:	mov	x0, x8
    f34c:	mov	x1, #0x40                  	// #64
    f350:	str	x8, [sp, #32]
    f354:	bl	4d40 <mpfr_set_prec@plt>
    f358:	ldr	x1, [sp, #160]
    f35c:	ldr	x0, [sp, #32]
    f360:	mov	x2, #0xffffffffffffffff    	// #-1
    f364:	mov	w9, wzr
    f368:	mov	w3, w9
    f36c:	bl	5230 <mpfr_set_ui_2exp@plt>
    f370:	mov	w9, #0x1                   	// #1
    f374:	stur	w9, [x29, #-24]
    f378:	sub	x0, x29, #0xb0
    f37c:	bl	5280 <__gmpz_clear@plt>
    f380:	add	x0, sp, #0xb0
    f384:	bl	5280 <__gmpz_clear@plt>
    f388:	b	f028 <mpc_log10@@Base+0x90>
    f38c:	ldur	x0, [x29, #-8]
    f390:	ldur	w8, [x29, #-20]
    f394:	and	w2, w8, #0xf
    f398:	sub	x1, x29, #0xa0
    f39c:	ldur	w3, [x29, #-152]
    f3a0:	bl	52d0 <mpfr_set4@plt>
    f3a4:	stur	w0, [x29, #-48]
    f3a8:	ldur	w8, [x29, #-36]
    f3ac:	cbz	w8, f3ec <mpc_log10@@Base+0x454>
    f3b0:	ldur	w8, [x29, #-44]
    f3b4:	and	w8, w8, #0x3
    f3b8:	cmp	w8, #0x2
    f3bc:	b.ne	f3cc <mpc_log10@@Base+0x434>  // b.any
    f3c0:	mov	w8, #0xffffffff            	// #-1
    f3c4:	str	w8, [sp, #28]
    f3c8:	b	f3e4 <mpc_log10@@Base+0x44c>
    f3cc:	ldur	w8, [x29, #-44]
    f3d0:	mov	w9, wzr
    f3d4:	mov	w10, #0x1                   	// #1
    f3d8:	tst	w8, #0x3
    f3dc:	csel	w8, w9, w10, eq  // eq = none
    f3e0:	str	w8, [sp, #28]
    f3e4:	ldr	w8, [sp, #28]
    f3e8:	stur	w8, [x29, #-48]
    f3ec:	ldur	x8, [x29, #-8]
    f3f0:	add	x0, x8, #0x20
    f3f4:	sub	x8, x29, #0xa0
    f3f8:	add	x1, x8, #0x20
    f3fc:	ldur	w9, [x29, #-20]
    f400:	asr	w2, w9, #4
    f404:	ldur	w3, [x29, #-120]
    f408:	bl	52d0 <mpfr_set4@plt>
    f40c:	stur	w0, [x29, #-52]
    f410:	ldur	w9, [x29, #-40]
    f414:	cbz	w9, f458 <mpc_log10@@Base+0x4c0>
    f418:	ldur	w8, [x29, #-44]
    f41c:	asr	w8, w8, #2
    f420:	cmp	w8, #0x2
    f424:	b.ne	f434 <mpc_log10@@Base+0x49c>  // b.any
    f428:	mov	w8, #0xffffffff            	// #-1
    f42c:	str	w8, [sp, #24]
    f430:	b	f450 <mpc_log10@@Base+0x4b8>
    f434:	ldur	w8, [x29, #-44]
    f438:	asr	w8, w8, #2
    f43c:	mov	w9, wzr
    f440:	mov	w10, #0x1                   	// #1
    f444:	cmp	w8, #0x0
    f448:	csel	w8, w9, w10, eq  // eq = none
    f44c:	str	w8, [sp, #24]
    f450:	ldr	w8, [sp, #24]
    f454:	stur	w8, [x29, #-52]
    f458:	sub	x0, x29, #0x60
    f45c:	bl	4e30 <mpfr_clear@plt>
    f460:	sub	x0, x29, #0xa0
    f464:	bl	4af0 <mpc_clear@plt>
    f468:	ldur	w8, [x29, #-48]
    f46c:	cmp	w8, #0x0
    f470:	cset	w8, ge  // ge = tcont
    f474:	tbnz	w8, #0, f484 <mpc_log10@@Base+0x4ec>
    f478:	mov	w8, #0x2                   	// #2
    f47c:	str	w8, [sp, #20]
    f480:	b	f49c <mpc_log10@@Base+0x504>
    f484:	ldur	w8, [x29, #-48]
    f488:	mov	w9, wzr
    f48c:	mov	w10, #0x1                   	// #1
    f490:	cmp	w8, #0x0
    f494:	csel	w8, w9, w10, eq  // eq = none
    f498:	str	w8, [sp, #20]
    f49c:	ldr	w8, [sp, #20]
    f4a0:	ldur	w9, [x29, #-52]
    f4a4:	cmp	w9, #0x0
    f4a8:	cset	w9, ge  // ge = tcont
    f4ac:	str	w8, [sp, #16]
    f4b0:	tbnz	w9, #0, f4c0 <mpc_log10@@Base+0x528>
    f4b4:	mov	w8, #0x2                   	// #2
    f4b8:	str	w8, [sp, #12]
    f4bc:	b	f4d8 <mpc_log10@@Base+0x540>
    f4c0:	ldur	w8, [x29, #-52]
    f4c4:	mov	w9, wzr
    f4c8:	mov	w10, #0x1                   	// #1
    f4cc:	cmp	w8, #0x0
    f4d0:	csel	w8, w9, w10, eq  // eq = none
    f4d4:	str	w8, [sp, #12]
    f4d8:	ldr	w8, [sp, #12]
    f4dc:	ldr	w9, [sp, #16]
    f4e0:	orr	w0, w9, w8, lsl #2
    f4e4:	ldr	x28, [sp, #384]
    f4e8:	ldp	x29, x30, [sp, #368]
    f4ec:	add	sp, sp, #0x190
    f4f0:	ret
    f4f4:	sub	sp, sp, #0x20
    f4f8:	stp	x29, x30, [sp, #16]
    f4fc:	add	x29, sp, #0x10
    f500:	mov	x1, #0xa                   	// #10
    f504:	mov	x8, xzr
    f508:	mov	w9, wzr
    f50c:	str	x0, [sp, #8]
    f510:	ldr	x0, [sp, #8]
    f514:	mov	x2, x8
    f518:	mov	w3, w9
    f51c:	str	w9, [sp, #4]
    f520:	bl	5230 <mpfr_set_ui_2exp@plt>
    f524:	ldr	x8, [sp, #8]
    f528:	ldr	x1, [sp, #8]
    f52c:	mov	x0, x8
    f530:	ldr	w2, [sp, #4]
    f534:	bl	4e60 <mpfr_log@plt>
    f538:	ldp	x29, x30, [sp, #16]
    f53c:	add	sp, sp, #0x20
    f540:	ret

000000000000f544 <mpc_alloc_str@@Base>:
    f544:	sub	sp, sp, #0x20
    f548:	stp	x29, x30, [sp, #16]
    f54c:	add	x29, sp, #0x10
    f550:	mov	x8, xzr
    f554:	mov	x1, x8
    f558:	mov	x9, sp
    f55c:	str	x0, [sp, #8]
    f560:	mov	x0, x9
    f564:	mov	x2, x8
    f568:	bl	4bc0 <__gmp_get_memory_functions@plt>
    f56c:	ldr	x8, [sp]
    f570:	ldr	x0, [sp, #8]
    f574:	blr	x8
    f578:	ldp	x29, x30, [sp, #16]
    f57c:	add	sp, sp, #0x20
    f580:	ret

000000000000f584 <mpc_realloc_str@@Base>:
    f584:	sub	sp, sp, #0x30
    f588:	stp	x29, x30, [sp, #32]
    f58c:	add	x29, sp, #0x20
    f590:	mov	x8, xzr
    f594:	mov	x3, x8
    f598:	mov	x9, sp
    f59c:	stur	x0, [x29, #-8]
    f5a0:	str	x1, [sp, #16]
    f5a4:	str	x2, [sp, #8]
    f5a8:	mov	x0, x3
    f5ac:	mov	x1, x9
    f5b0:	mov	x2, x8
    f5b4:	bl	4bc0 <__gmp_get_memory_functions@plt>
    f5b8:	ldr	x8, [sp]
    f5bc:	ldur	x0, [x29, #-8]
    f5c0:	ldr	x1, [sp, #16]
    f5c4:	ldr	x2, [sp, #8]
    f5c8:	blr	x8
    f5cc:	ldp	x29, x30, [sp, #32]
    f5d0:	add	sp, sp, #0x30
    f5d4:	ret

000000000000f5d8 <mpc_free_str@@Base>:
    f5d8:	sub	sp, sp, #0x30
    f5dc:	stp	x29, x30, [sp, #32]
    f5e0:	add	x29, sp, #0x20
    f5e4:	mov	x8, xzr
    f5e8:	mov	x1, x8
    f5ec:	add	x2, sp, #0x10
    f5f0:	stur	x0, [x29, #-8]
    f5f4:	mov	x0, x1
    f5f8:	mov	x1, x8
    f5fc:	bl	4bc0 <__gmp_get_memory_functions@plt>
    f600:	ldr	x8, [sp, #16]
    f604:	ldur	x0, [x29, #-8]
    f608:	ldur	x9, [x29, #-8]
    f60c:	str	x0, [sp, #8]
    f610:	mov	x0, x9
    f614:	str	x8, [sp]
    f618:	bl	4ae0 <strlen@plt>
    f61c:	add	x1, x0, #0x1
    f620:	ldr	x0, [sp, #8]
    f624:	ldr	x8, [sp]
    f628:	blr	x8
    f62c:	ldp	x29, x30, [sp, #32]
    f630:	add	sp, sp, #0x30
    f634:	ret

000000000000f638 <mpc_mul_2si@@Base>:
    f638:	sub	sp, sp, #0x40
    f63c:	stp	x29, x30, [sp, #48]
    f640:	add	x29, sp, #0x30
    f644:	stur	x0, [x29, #-8]
    f648:	stur	x1, [x29, #-16]
    f64c:	str	x2, [sp, #24]
    f650:	str	w3, [sp, #20]
    f654:	ldur	x0, [x29, #-8]
    f658:	ldur	x1, [x29, #-16]
    f65c:	ldr	x2, [sp, #24]
    f660:	ldr	w8, [sp, #20]
    f664:	and	w3, w8, #0xf
    f668:	bl	4b50 <mpfr_mul_2si@plt>
    f66c:	str	w0, [sp, #16]
    f670:	ldur	x9, [x29, #-8]
    f674:	add	x0, x9, #0x20
    f678:	ldur	x9, [x29, #-16]
    f67c:	add	x1, x9, #0x20
    f680:	ldr	x2, [sp, #24]
    f684:	ldr	w8, [sp, #20]
    f688:	asr	w3, w8, #4
    f68c:	bl	4b50 <mpfr_mul_2si@plt>
    f690:	str	w0, [sp, #12]
    f694:	ldr	w8, [sp, #16]
    f698:	cmp	w8, #0x0
    f69c:	cset	w8, ge  // ge = tcont
    f6a0:	tbnz	w8, #0, f6b0 <mpc_mul_2si@@Base+0x78>
    f6a4:	mov	w8, #0x2                   	// #2
    f6a8:	str	w8, [sp, #8]
    f6ac:	b	f6c8 <mpc_mul_2si@@Base+0x90>
    f6b0:	ldr	w8, [sp, #16]
    f6b4:	mov	w9, wzr
    f6b8:	mov	w10, #0x1                   	// #1
    f6bc:	cmp	w8, #0x0
    f6c0:	csel	w8, w9, w10, eq  // eq = none
    f6c4:	str	w8, [sp, #8]
    f6c8:	ldr	w8, [sp, #8]
    f6cc:	ldr	w9, [sp, #12]
    f6d0:	cmp	w9, #0x0
    f6d4:	cset	w9, ge  // ge = tcont
    f6d8:	str	w8, [sp, #4]
    f6dc:	tbnz	w9, #0, f6ec <mpc_mul_2si@@Base+0xb4>
    f6e0:	mov	w8, #0x2                   	// #2
    f6e4:	str	w8, [sp]
    f6e8:	b	f704 <mpc_mul_2si@@Base+0xcc>
    f6ec:	ldr	w8, [sp, #12]
    f6f0:	mov	w9, wzr
    f6f4:	mov	w10, #0x1                   	// #1
    f6f8:	cmp	w8, #0x0
    f6fc:	csel	w8, w9, w10, eq  // eq = none
    f700:	str	w8, [sp]
    f704:	ldr	w8, [sp]
    f708:	ldr	w9, [sp, #4]
    f70c:	orr	w0, w9, w8, lsl #2
    f710:	ldp	x29, x30, [sp, #48]
    f714:	add	sp, sp, #0x40
    f718:	ret

000000000000f71c <mpc_mul_2ui@@Base>:
    f71c:	sub	sp, sp, #0x40
    f720:	stp	x29, x30, [sp, #48]
    f724:	add	x29, sp, #0x30
    f728:	stur	x0, [x29, #-8]
    f72c:	stur	x1, [x29, #-16]
    f730:	str	x2, [sp, #24]
    f734:	str	w3, [sp, #20]
    f738:	ldur	x0, [x29, #-8]
    f73c:	ldur	x1, [x29, #-16]
    f740:	ldr	x2, [sp, #24]
    f744:	ldr	w8, [sp, #20]
    f748:	and	w3, w8, #0xf
    f74c:	bl	5040 <mpfr_mul_2ui@plt>
    f750:	str	w0, [sp, #16]
    f754:	ldur	x9, [x29, #-8]
    f758:	add	x0, x9, #0x20
    f75c:	ldur	x9, [x29, #-16]
    f760:	add	x1, x9, #0x20
    f764:	ldr	x2, [sp, #24]
    f768:	ldr	w8, [sp, #20]
    f76c:	asr	w3, w8, #4
    f770:	bl	5040 <mpfr_mul_2ui@plt>
    f774:	str	w0, [sp, #12]
    f778:	ldr	w8, [sp, #16]
    f77c:	cmp	w8, #0x0
    f780:	cset	w8, ge  // ge = tcont
    f784:	tbnz	w8, #0, f794 <mpc_mul_2ui@@Base+0x78>
    f788:	mov	w8, #0x2                   	// #2
    f78c:	str	w8, [sp, #8]
    f790:	b	f7ac <mpc_mul_2ui@@Base+0x90>
    f794:	ldr	w8, [sp, #16]
    f798:	mov	w9, wzr
    f79c:	mov	w10, #0x1                   	// #1
    f7a0:	cmp	w8, #0x0
    f7a4:	csel	w8, w9, w10, eq  // eq = none
    f7a8:	str	w8, [sp, #8]
    f7ac:	ldr	w8, [sp, #8]
    f7b0:	ldr	w9, [sp, #12]
    f7b4:	cmp	w9, #0x0
    f7b8:	cset	w9, ge  // ge = tcont
    f7bc:	str	w8, [sp, #4]
    f7c0:	tbnz	w9, #0, f7d0 <mpc_mul_2ui@@Base+0xb4>
    f7c4:	mov	w8, #0x2                   	// #2
    f7c8:	str	w8, [sp]
    f7cc:	b	f7e8 <mpc_mul_2ui@@Base+0xcc>
    f7d0:	ldr	w8, [sp, #12]
    f7d4:	mov	w9, wzr
    f7d8:	mov	w10, #0x1                   	// #1
    f7dc:	cmp	w8, #0x0
    f7e0:	csel	w8, w9, w10, eq  // eq = none
    f7e4:	str	w8, [sp]
    f7e8:	ldr	w8, [sp]
    f7ec:	ldr	w9, [sp, #4]
    f7f0:	orr	w0, w9, w8, lsl #2
    f7f4:	ldp	x29, x30, [sp, #48]
    f7f8:	add	sp, sp, #0x40
    f7fc:	ret

000000000000f800 <mpc_mul_naive@@Base>:
    f800:	sub	sp, sp, #0x90
    f804:	stp	x29, x30, [sp, #128]
    f808:	add	x29, sp, #0x80
    f80c:	stur	x0, [x29, #-8]
    f810:	stur	x1, [x29, #-16]
    f814:	stur	x2, [x29, #-24]
    f818:	stur	w3, [x29, #-28]
    f81c:	ldur	x8, [x29, #-16]
    f820:	ldr	x8, [x8, #16]
    f824:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f828:	cmp	x8, x9
    f82c:	b.le	f86c <mpc_mul_naive@@Base+0x6c>
    f830:	ldur	x8, [x29, #-16]
    f834:	ldr	x8, [x8, #48]
    f838:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f83c:	cmp	x8, x9
    f840:	b.le	f86c <mpc_mul_naive@@Base+0x6c>
    f844:	ldur	x8, [x29, #-24]
    f848:	ldr	x8, [x8, #16]
    f84c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f850:	cmp	x8, x9
    f854:	b.le	f86c <mpc_mul_naive@@Base+0x6c>
    f858:	ldur	x8, [x29, #-24]
    f85c:	ldr	x8, [x8, #48]
    f860:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f864:	cmp	x8, x9
    f868:	b.gt	f89c <mpc_mul_naive@@Base+0x9c>
    f86c:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
    f870:	ldr	x8, [x8, #4008]
    f874:	ldr	x0, [x8]
    f878:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    f87c:	add	x1, x1, #0x2a0
    f880:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    f884:	add	x2, x2, #0x40a
    f888:	mov	w3, #0x175                 	// #373
    f88c:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
    f890:	add	x4, x4, #0x410
    f894:	bl	56a0 <fprintf@plt>
    f898:	bl	5100 <abort@plt>
    f89c:	ldur	x8, [x29, #-8]
    f8a0:	ldur	x9, [x29, #-16]
    f8a4:	mov	w10, #0x1                   	// #1
    f8a8:	cmp	x8, x9
    f8ac:	str	w10, [sp, #20]
    f8b0:	b.eq	f8c8 <mpc_mul_naive@@Base+0xc8>  // b.none
    f8b4:	ldur	x8, [x29, #-8]
    f8b8:	ldur	x9, [x29, #-24]
    f8bc:	cmp	x8, x9
    f8c0:	cset	w10, eq  // eq = none
    f8c4:	str	w10, [sp, #20]
    f8c8:	ldr	w8, [sp, #20]
    f8cc:	and	w8, w8, #0x1
    f8d0:	stur	w8, [x29, #-32]
    f8d4:	ldur	w8, [x29, #-32]
    f8d8:	cbz	w8, f8f8 <mpc_mul_naive@@Base+0xf8>
    f8dc:	ldur	x8, [x29, #-8]
    f8e0:	ldr	x1, [x8]
    f8e4:	ldur	x8, [x29, #-8]
    f8e8:	ldr	x2, [x8, #32]
    f8ec:	add	x0, sp, #0x18
    f8f0:	bl	54c0 <mpc_init3@plt>
    f8f4:	b	f908 <mpc_mul_naive@@Base+0x108>
    f8f8:	ldur	x1, [x29, #-8]
    f8fc:	add	x0, sp, #0x18
    f900:	mov	x2, #0x40                  	// #64
    f904:	bl	4a70 <memcpy@plt>
    f908:	ldur	x1, [x29, #-16]
    f90c:	ldur	x2, [x29, #-24]
    f910:	ldur	x8, [x29, #-16]
    f914:	add	x3, x8, #0x20
    f918:	ldur	x8, [x29, #-24]
    f91c:	add	x4, x8, #0x20
    f920:	ldur	w9, [x29, #-28]
    f924:	and	w5, w9, #0xf
    f928:	add	x0, sp, #0x18
    f92c:	bl	4b70 <mpfr_fmms@plt>
    f930:	cmp	w0, #0x0
    f934:	cset	w9, ge  // ge = tcont
    f938:	tbnz	w9, #0, f948 <mpc_mul_naive@@Base+0x148>
    f93c:	mov	w8, #0x2                   	// #2
    f940:	str	w8, [sp, #16]
    f944:	b	f984 <mpc_mul_naive@@Base+0x184>
    f948:	ldur	x1, [x29, #-16]
    f94c:	ldur	x2, [x29, #-24]
    f950:	ldur	x8, [x29, #-16]
    f954:	add	x3, x8, #0x20
    f958:	ldur	x8, [x29, #-24]
    f95c:	add	x4, x8, #0x20
    f960:	ldur	w9, [x29, #-28]
    f964:	and	w5, w9, #0xf
    f968:	add	x0, sp, #0x18
    f96c:	bl	4b70 <mpfr_fmms@plt>
    f970:	mov	w9, wzr
    f974:	mov	w10, #0x1                   	// #1
    f978:	cmp	w0, #0x0
    f97c:	csel	w9, w9, w10, eq  // eq = none
    f980:	str	w9, [sp, #16]
    f984:	ldr	w8, [sp, #16]
    f988:	add	x9, sp, #0x18
    f98c:	add	x0, x9, #0x20
    f990:	ldur	x1, [x29, #-16]
    f994:	ldur	x9, [x29, #-24]
    f998:	add	x2, x9, #0x20
    f99c:	ldur	x9, [x29, #-16]
    f9a0:	add	x3, x9, #0x20
    f9a4:	ldur	x4, [x29, #-24]
    f9a8:	ldur	w10, [x29, #-28]
    f9ac:	asr	w5, w10, #4
    f9b0:	str	w8, [sp, #12]
    f9b4:	bl	4d50 <mpfr_fmma@plt>
    f9b8:	cmp	w0, #0x0
    f9bc:	cset	w8, ge  // ge = tcont
    f9c0:	tbnz	w8, #0, f9d0 <mpc_mul_naive@@Base+0x1d0>
    f9c4:	mov	w8, #0x2                   	// #2
    f9c8:	str	w8, [sp, #8]
    f9cc:	b	fa10 <mpc_mul_naive@@Base+0x210>
    f9d0:	add	x8, sp, #0x18
    f9d4:	add	x0, x8, #0x20
    f9d8:	ldur	x1, [x29, #-16]
    f9dc:	ldur	x8, [x29, #-24]
    f9e0:	add	x2, x8, #0x20
    f9e4:	ldur	x8, [x29, #-16]
    f9e8:	add	x3, x8, #0x20
    f9ec:	ldur	x4, [x29, #-24]
    f9f0:	ldur	w9, [x29, #-28]
    f9f4:	asr	w5, w9, #4
    f9f8:	bl	4d50 <mpfr_fmma@plt>
    f9fc:	mov	w9, wzr
    fa00:	mov	w10, #0x1                   	// #1
    fa04:	cmp	w0, #0x0
    fa08:	csel	w9, w9, w10, eq  // eq = none
    fa0c:	str	w9, [sp, #8]
    fa10:	ldr	w8, [sp, #8]
    fa14:	ldr	w9, [sp, #12]
    fa18:	orr	w8, w9, w8, lsl #2
    fa1c:	stur	w8, [x29, #-36]
    fa20:	ldur	x0, [x29, #-8]
    fa24:	add	x1, sp, #0x18
    fa28:	mov	w8, wzr
    fa2c:	mov	w2, w8
    fa30:	bl	5680 <mpc_set@plt>
    fa34:	ldur	w8, [x29, #-32]
    fa38:	cbz	w8, fa44 <mpc_mul_naive@@Base+0x244>
    fa3c:	add	x0, sp, #0x18
    fa40:	bl	4af0 <mpc_clear@plt>
    fa44:	ldur	w0, [x29, #-36]
    fa48:	ldp	x29, x30, [sp, #128]
    fa4c:	add	sp, sp, #0x90
    fa50:	ret

000000000000fa54 <mpc_mul_karatsuba@@Base>:
    fa54:	stp	x29, x30, [sp, #-32]!
    fa58:	str	x28, [sp, #16]
    fa5c:	mov	x29, sp
    fa60:	sub	sp, sp, #0x270
    fa64:	mov	w8, #0x1                   	// #1
    fa68:	stur	x0, [x29, #-16]
    fa6c:	stur	x1, [x29, #-24]
    fa70:	stur	x2, [x29, #-32]
    fa74:	stur	w3, [x29, #-36]
    fa78:	stur	wzr, [x29, #-96]
    fa7c:	stur	wzr, [x29, #-100]
    fa80:	str	w8, [sp, #256]
    fa84:	ldur	x9, [x29, #-16]
    fa88:	ldur	x10, [x29, #-24]
    fa8c:	mov	w8, #0x1                   	// #1
    fa90:	cmp	x9, x10
    fa94:	str	w8, [sp, #204]
    fa98:	b.eq	fab0 <mpc_mul_karatsuba@@Base+0x5c>  // b.none
    fa9c:	ldur	x8, [x29, #-16]
    faa0:	ldur	x9, [x29, #-32]
    faa4:	cmp	x8, x9
    faa8:	cset	w10, eq  // eq = none
    faac:	str	w10, [sp, #204]
    fab0:	ldr	w8, [sp, #204]
    fab4:	and	w8, w8, #0x1
    fab8:	str	w8, [sp, #332]
    fabc:	ldr	w8, [sp, #332]
    fac0:	cbz	w8, fae0 <mpc_mul_karatsuba@@Base+0x8c>
    fac4:	ldur	x8, [x29, #-16]
    fac8:	ldr	x1, [x8]
    facc:	ldur	x8, [x29, #-16]
    fad0:	ldr	x2, [x8, #32]
    fad4:	add	x0, sp, #0x108
    fad8:	bl	54c0 <mpc_init3@plt>
    fadc:	b	faf0 <mpc_mul_karatsuba@@Base+0x9c>
    fae0:	ldur	x1, [x29, #-16]
    fae4:	add	x0, sp, #0x108
    fae8:	mov	x2, #0x40                  	// #64
    faec:	bl	4a70 <memcpy@plt>
    faf0:	ldur	x8, [x29, #-24]
    faf4:	stur	x8, [x29, #-48]
    faf8:	ldur	x8, [x29, #-24]
    fafc:	add	x8, x8, #0x20
    fb00:	stur	x8, [x29, #-56]
    fb04:	ldur	x8, [x29, #-32]
    fb08:	stur	x8, [x29, #-64]
    fb0c:	ldur	x8, [x29, #-32]
    fb10:	add	x8, x8, #0x20
    fb14:	stur	x8, [x29, #-72]
    fb18:	stur	wzr, [x29, #-76]
    fb1c:	mov	w9, #0x1                   	// #1
    fb20:	stur	w9, [x29, #-88]
    fb24:	stur	w9, [x29, #-92]
    fb28:	ldur	x0, [x29, #-48]
    fb2c:	ldur	x1, [x29, #-56]
    fb30:	bl	54b0 <mpfr_cmpabs@plt>
    fb34:	cmp	w0, #0x0
    fb38:	cset	w9, ge  // ge = tcont
    fb3c:	tbnz	w9, #0, fb6c <mpc_mul_karatsuba@@Base+0x118>
    fb40:	ldur	x8, [x29, #-48]
    fb44:	str	x8, [sp, #248]
    fb48:	ldur	x8, [x29, #-56]
    fb4c:	stur	x8, [x29, #-48]
    fb50:	ldr	x8, [sp, #248]
    fb54:	stur	x8, [x29, #-56]
    fb58:	ldur	w8, [x29, #-76]
    fb5c:	add	w8, w8, #0x1
    fb60:	stur	w8, [x29, #-76]
    fb64:	mov	w8, #0xffffffff            	// #-1
    fb68:	stur	w8, [x29, #-88]
    fb6c:	ldur	x0, [x29, #-64]
    fb70:	ldur	x1, [x29, #-72]
    fb74:	bl	54b0 <mpfr_cmpabs@plt>
    fb78:	cmp	w0, #0x0
    fb7c:	cset	w8, ge  // ge = tcont
    fb80:	tbnz	w8, #0, fbb0 <mpc_mul_karatsuba@@Base+0x15c>
    fb84:	ldur	x8, [x29, #-64]
    fb88:	str	x8, [sp, #240]
    fb8c:	ldur	x8, [x29, #-72]
    fb90:	stur	x8, [x29, #-64]
    fb94:	ldr	x8, [sp, #240]
    fb98:	stur	x8, [x29, #-72]
    fb9c:	ldur	w8, [x29, #-76]
    fba0:	add	w8, w8, #0x1
    fba4:	stur	w8, [x29, #-76]
    fba8:	mov	w8, #0xffffffff            	// #-1
    fbac:	stur	w8, [x29, #-92]
    fbb0:	ldur	w8, [x29, #-76]
    fbb4:	mov	w9, #0x2                   	// #2
    fbb8:	sdiv	w10, w8, w9
    fbbc:	mul	w9, w10, w9
    fbc0:	subs	w8, w8, w9
    fbc4:	cbz	w8, fbe4 <mpc_mul_karatsuba@@Base+0x190>
    fbc8:	ldur	x8, [x29, #-16]
    fbcc:	ldr	x8, [x8, #32]
    fbd0:	stur	x8, [x29, #-256]
    fbd4:	ldur	w9, [x29, #-36]
    fbd8:	asr	w9, w9, #4
    fbdc:	str	w9, [sp, #340]
    fbe0:	b	fbfc <mpc_mul_karatsuba@@Base+0x1a8>
    fbe4:	ldur	x8, [x29, #-16]
    fbe8:	ldr	x8, [x8]
    fbec:	stur	x8, [x29, #-256]
    fbf0:	ldur	w9, [x29, #-36]
    fbf4:	and	w9, w9, #0xf
    fbf8:	str	w9, [sp, #340]
    fbfc:	ldur	w8, [x29, #-76]
    fc00:	cbz	w8, fc4c <mpc_mul_karatsuba@@Base+0x1f8>
    fc04:	ldr	w8, [sp, #340]
    fc08:	cmp	w8, #0x2
    fc0c:	b.ne	fc1c <mpc_mul_karatsuba@@Base+0x1c8>  // b.any
    fc10:	mov	w8, #0x3                   	// #3
    fc14:	str	w8, [sp, #200]
    fc18:	b	fc44 <mpc_mul_karatsuba@@Base+0x1f0>
    fc1c:	ldr	w8, [sp, #340]
    fc20:	cmp	w8, #0x3
    fc24:	b.ne	fc34 <mpc_mul_karatsuba@@Base+0x1e0>  // b.any
    fc28:	mov	w8, #0x2                   	// #2
    fc2c:	str	w8, [sp, #196]
    fc30:	b	fc3c <mpc_mul_karatsuba@@Base+0x1e8>
    fc34:	ldr	w8, [sp, #340]
    fc38:	str	w8, [sp, #196]
    fc3c:	ldr	w8, [sp, #196]
    fc40:	str	w8, [sp, #200]
    fc44:	ldr	w8, [sp, #200]
    fc48:	str	w8, [sp, #340]
    fc4c:	ldur	x8, [x29, #-16]
    fc50:	ldr	x8, [x8]
    fc54:	ldur	x9, [x29, #-16]
    fc58:	ldr	x9, [x9, #32]
    fc5c:	cmp	x8, x9
    fc60:	b.le	fc74 <mpc_mul_karatsuba@@Base+0x220>
    fc64:	ldur	x8, [x29, #-16]
    fc68:	ldr	x8, [x8]
    fc6c:	str	x8, [sp, #184]
    fc70:	b	fc80 <mpc_mul_karatsuba@@Base+0x22c>
    fc74:	ldur	x8, [x29, #-16]
    fc78:	ldr	x8, [x8, #32]
    fc7c:	str	x8, [sp, #184]
    fc80:	ldr	x8, [sp, #184]
    fc84:	stur	x8, [x29, #-248]
    fc88:	ldur	x8, [x29, #-48]
    fc8c:	ldr	x8, [x8]
    fc90:	ldur	x9, [x29, #-72]
    fc94:	ldr	x9, [x9]
    fc98:	add	x8, x8, x9
    fc9c:	str	x8, [sp, #352]
    fca0:	sub	x9, x29, #0xb0
    fca4:	mov	x0, x9
    fca8:	mov	x1, x8
    fcac:	str	x9, [sp, #176]
    fcb0:	bl	5530 <mpfr_init2@plt>
    fcb4:	ldur	x8, [x29, #-56]
    fcb8:	ldr	x8, [x8]
    fcbc:	ldur	x9, [x29, #-64]
    fcc0:	ldr	x9, [x9]
    fcc4:	add	x8, x8, x9
    fcc8:	str	x8, [sp, #344]
    fccc:	sub	x0, x29, #0xd0
    fcd0:	mov	x1, x8
    fcd4:	bl	5530 <mpfr_init2@plt>
    fcd8:	sub	x0, x29, #0x90
    fcdc:	mov	x8, #0x2                   	// #2
    fce0:	mov	x1, x8
    fce4:	str	x8, [sp, #168]
    fce8:	bl	5530 <mpfr_init2@plt>
    fcec:	sub	x0, x29, #0xf0
    fcf0:	ldr	x1, [sp, #168]
    fcf4:	bl	5530 <mpfr_init2@plt>
    fcf8:	ldur	x1, [x29, #-48]
    fcfc:	ldur	x2, [x29, #-72]
    fd00:	ldr	x0, [sp, #176]
    fd04:	mov	w10, wzr
    fd08:	mov	w3, w10
    fd0c:	bl	4c50 <mpfr_mul@plt>
    fd10:	stur	w0, [x29, #-84]
    fd14:	ldur	w10, [x29, #-84]
    fd18:	cbz	w10, fd24 <mpc_mul_karatsuba@@Base+0x2d0>
    fd1c:	stur	wzr, [x29, #-80]
    fd20:	b	10754 <mpc_mul_karatsuba@@Base+0xd00>
    fd24:	ldur	w8, [x29, #-88]
    fd28:	mov	w9, #0xffffffff            	// #-1
    fd2c:	cmp	w8, w9
    fd30:	b.ne	fd4c <mpc_mul_karatsuba@@Base+0x2f8>  // b.any
    fd34:	sub	x8, x29, #0xb0
    fd38:	mov	x0, x8
    fd3c:	mov	x1, x8
    fd40:	mov	w9, wzr
    fd44:	mov	w2, w9
    fd48:	bl	4c60 <mpfr_neg@plt>
    fd4c:	ldur	x1, [x29, #-56]
    fd50:	ldur	x2, [x29, #-64]
    fd54:	sub	x0, x29, #0xd0
    fd58:	mov	w8, wzr
    fd5c:	mov	w3, w8
    fd60:	bl	4c50 <mpfr_mul@plt>
    fd64:	stur	w0, [x29, #-84]
    fd68:	ldur	w8, [x29, #-84]
    fd6c:	cbz	w8, fd78 <mpc_mul_karatsuba@@Base+0x324>
    fd70:	stur	wzr, [x29, #-80]
    fd74:	b	10754 <mpc_mul_karatsuba@@Base+0xd00>
    fd78:	ldur	w8, [x29, #-92]
    fd7c:	mov	w9, #0xffffffff            	// #-1
    fd80:	cmp	w8, w9
    fd84:	b.ne	fda0 <mpc_mul_karatsuba@@Base+0x34c>  // b.any
    fd88:	sub	x8, x29, #0xd0
    fd8c:	mov	x0, x8
    fd90:	mov	x1, x8
    fd94:	mov	w9, wzr
    fd98:	mov	w2, w9
    fd9c:	bl	4c60 <mpfr_neg@plt>
    fda0:	sub	x0, x29, #0xb0
    fda4:	sub	x1, x29, #0xd0
    fda8:	bl	54b0 <mpfr_cmpabs@plt>
    fdac:	stur	w0, [x29, #-104]
    fdb0:	ldur	w8, [x29, #-104]
    fdb4:	cmp	w8, #0x0
    fdb8:	cset	w8, le
    fdbc:	tbnz	w8, #0, fe64 <mpc_mul_karatsuba@@Base+0x410>
    fdc0:	ldur	x8, [x29, #-160]
    fdc4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fdc8:	cmp	x8, x9
    fdcc:	b.ge	fdf8 <mpc_mul_karatsuba@@Base+0x3a4>  // b.tcont
    fdd0:	ldur	x8, [x29, #-160]
    fdd4:	mov	x9, #0x2                   	// #2
    fdd8:	movk	x9, #0x8000, lsl #48
    fddc:	cmp	x8, x9
    fde0:	b.ne	fdec <mpc_mul_karatsuba@@Base+0x398>  // b.any
    fde4:	bl	4be0 <mpfr_set_erangeflag@plt>
    fde8:	b	fdec <mpc_mul_karatsuba@@Base+0x398>
    fdec:	mov	w8, wzr
    fdf0:	str	w8, [sp, #164]
    fdf4:	b	fe00 <mpc_mul_karatsuba@@Base+0x3ac>
    fdf8:	ldur	w8, [x29, #-168]
    fdfc:	str	w8, [sp, #164]
    fe00:	ldr	w8, [sp, #164]
    fe04:	mov	w9, #0x2                   	// #2
    fe08:	mul	w8, w9, w8
    fe0c:	ldur	x10, [x29, #-192]
    fe10:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
    fe14:	cmp	x10, x11
    fe18:	str	w8, [sp, #160]
    fe1c:	b.ge	fe48 <mpc_mul_karatsuba@@Base+0x3f4>  // b.tcont
    fe20:	ldur	x8, [x29, #-192]
    fe24:	mov	x9, #0x2                   	// #2
    fe28:	movk	x9, #0x8000, lsl #48
    fe2c:	cmp	x8, x9
    fe30:	b.ne	fe3c <mpc_mul_karatsuba@@Base+0x3e8>  // b.any
    fe34:	bl	4be0 <mpfr_set_erangeflag@plt>
    fe38:	b	fe3c <mpc_mul_karatsuba@@Base+0x3e8>
    fe3c:	mov	w8, wzr
    fe40:	str	w8, [sp, #156]
    fe44:	b	fe50 <mpc_mul_karatsuba@@Base+0x3fc>
    fe48:	ldur	w8, [x29, #-200]
    fe4c:	str	w8, [sp, #156]
    fe50:	ldr	w8, [sp, #156]
    fe54:	ldr	w9, [sp, #160]
    fe58:	subs	w8, w9, w8
    fe5c:	stur	w8, [x29, #-104]
    fe60:	b	ffa8 <mpc_mul_karatsuba@@Base+0x554>
    fe64:	ldur	w8, [x29, #-104]
    fe68:	cbnz	w8, ff08 <mpc_mul_karatsuba@@Base+0x4b4>
    fe6c:	ldur	x8, [x29, #-160]
    fe70:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fe74:	cmp	x8, x9
    fe78:	b.ge	fea4 <mpc_mul_karatsuba@@Base+0x450>  // b.tcont
    fe7c:	ldur	x8, [x29, #-160]
    fe80:	mov	x9, #0x2                   	// #2
    fe84:	movk	x9, #0x8000, lsl #48
    fe88:	cmp	x8, x9
    fe8c:	b.ne	fe98 <mpc_mul_karatsuba@@Base+0x444>  // b.any
    fe90:	bl	4be0 <mpfr_set_erangeflag@plt>
    fe94:	b	fe98 <mpc_mul_karatsuba@@Base+0x444>
    fe98:	mov	w8, wzr
    fe9c:	str	w8, [sp, #152]
    fea0:	b	feac <mpc_mul_karatsuba@@Base+0x458>
    fea4:	ldur	w8, [x29, #-168]
    fea8:	str	w8, [sp, #152]
    feac:	ldr	w8, [sp, #152]
    feb0:	ldur	x9, [x29, #-192]
    feb4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    feb8:	cmp	x9, x10
    febc:	str	w8, [sp, #148]
    fec0:	b.ge	feec <mpc_mul_karatsuba@@Base+0x498>  // b.tcont
    fec4:	ldur	x8, [x29, #-192]
    fec8:	mov	x9, #0x2                   	// #2
    fecc:	movk	x9, #0x8000, lsl #48
    fed0:	cmp	x8, x9
    fed4:	b.ne	fee0 <mpc_mul_karatsuba@@Base+0x48c>  // b.any
    fed8:	bl	4be0 <mpfr_set_erangeflag@plt>
    fedc:	b	fee0 <mpc_mul_karatsuba@@Base+0x48c>
    fee0:	mov	w8, wzr
    fee4:	str	w8, [sp, #144]
    fee8:	b	fef4 <mpc_mul_karatsuba@@Base+0x4a0>
    feec:	ldur	w8, [x29, #-200]
    fef0:	str	w8, [sp, #144]
    fef4:	ldr	w8, [sp, #144]
    fef8:	ldr	w9, [sp, #148]
    fefc:	subs	w8, w9, w8
    ff00:	stur	w8, [x29, #-104]
    ff04:	b	ffa8 <mpc_mul_karatsuba@@Base+0x554>
    ff08:	ldur	x8, [x29, #-160]
    ff0c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    ff10:	cmp	x8, x9
    ff14:	b.ge	ff40 <mpc_mul_karatsuba@@Base+0x4ec>  // b.tcont
    ff18:	ldur	x8, [x29, #-160]
    ff1c:	mov	x9, #0x2                   	// #2
    ff20:	movk	x9, #0x8000, lsl #48
    ff24:	cmp	x8, x9
    ff28:	b.ne	ff34 <mpc_mul_karatsuba@@Base+0x4e0>  // b.any
    ff2c:	bl	4be0 <mpfr_set_erangeflag@plt>
    ff30:	b	ff34 <mpc_mul_karatsuba@@Base+0x4e0>
    ff34:	mov	w8, wzr
    ff38:	str	w8, [sp, #140]
    ff3c:	b	ff48 <mpc_mul_karatsuba@@Base+0x4f4>
    ff40:	ldur	w8, [x29, #-168]
    ff44:	str	w8, [sp, #140]
    ff48:	ldr	w8, [sp, #140]
    ff4c:	ldur	x9, [x29, #-192]
    ff50:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    ff54:	cmp	x9, x10
    ff58:	str	w8, [sp, #136]
    ff5c:	b.ge	ff88 <mpc_mul_karatsuba@@Base+0x534>  // b.tcont
    ff60:	ldur	x8, [x29, #-192]
    ff64:	mov	x9, #0x2                   	// #2
    ff68:	movk	x9, #0x8000, lsl #48
    ff6c:	cmp	x8, x9
    ff70:	b.ne	ff7c <mpc_mul_karatsuba@@Base+0x528>  // b.any
    ff74:	bl	4be0 <mpfr_set_erangeflag@plt>
    ff78:	b	ff7c <mpc_mul_karatsuba@@Base+0x528>
    ff7c:	mov	w8, wzr
    ff80:	str	w8, [sp, #132]
    ff84:	b	ff90 <mpc_mul_karatsuba@@Base+0x53c>
    ff88:	ldur	w8, [x29, #-200]
    ff8c:	str	w8, [sp, #132]
    ff90:	ldr	w8, [sp, #132]
    ff94:	mov	w9, #0x2                   	// #2
    ff98:	mul	w8, w9, w8
    ff9c:	ldr	w9, [sp, #136]
    ffa0:	subs	w8, w9, w8
    ffa4:	stur	w8, [x29, #-104]
    ffa8:	ldur	w8, [x29, #-88]
    ffac:	ldur	x9, [x29, #-48]
    ffb0:	ldr	x9, [x9, #16]
    ffb4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    ffb8:	cmp	x9, x10
    ffbc:	str	w8, [sp, #128]
    ffc0:	b.ge	fff0 <mpc_mul_karatsuba@@Base+0x59c>  // b.tcont
    ffc4:	ldur	x8, [x29, #-48]
    ffc8:	ldr	x8, [x8, #16]
    ffcc:	mov	x9, #0x2                   	// #2
    ffd0:	movk	x9, #0x8000, lsl #48
    ffd4:	cmp	x8, x9
    ffd8:	b.ne	ffe4 <mpc_mul_karatsuba@@Base+0x590>  // b.any
    ffdc:	bl	4be0 <mpfr_set_erangeflag@plt>
    ffe0:	b	ffe4 <mpc_mul_karatsuba@@Base+0x590>
    ffe4:	mov	w8, wzr
    ffe8:	str	w8, [sp, #124]
    ffec:	b	fffc <mpc_mul_karatsuba@@Base+0x5a8>
    fff0:	ldur	x8, [x29, #-48]
    fff4:	ldr	w9, [x8, #8]
    fff8:	str	w9, [sp, #124]
    fffc:	ldr	w8, [sp, #124]
   10000:	ldr	w9, [sp, #128]
   10004:	mul	w8, w9, w8
   10008:	ldur	w10, [x29, #-92]
   1000c:	mul	w8, w8, w10
   10010:	ldur	x11, [x29, #-64]
   10014:	ldr	x11, [x11, #16]
   10018:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   1001c:	cmp	x11, x12
   10020:	str	w8, [sp, #120]
   10024:	b.ge	10054 <mpc_mul_karatsuba@@Base+0x600>  // b.tcont
   10028:	ldur	x8, [x29, #-64]
   1002c:	ldr	x8, [x8, #16]
   10030:	mov	x9, #0x2                   	// #2
   10034:	movk	x9, #0x8000, lsl #48
   10038:	cmp	x8, x9
   1003c:	b.ne	10048 <mpc_mul_karatsuba@@Base+0x5f4>  // b.any
   10040:	bl	4be0 <mpfr_set_erangeflag@plt>
   10044:	b	10048 <mpc_mul_karatsuba@@Base+0x5f4>
   10048:	mov	w8, wzr
   1004c:	str	w8, [sp, #116]
   10050:	b	10060 <mpc_mul_karatsuba@@Base+0x60c>
   10054:	ldur	x8, [x29, #-64]
   10058:	ldr	w9, [x8, #8]
   1005c:	str	w9, [sp, #116]
   10060:	ldr	w8, [sp, #116]
   10064:	ldr	w9, [sp, #120]
   10068:	mul	w8, w9, w8
   1006c:	stur	w8, [x29, #-108]
   10070:	ldur	w8, [x29, #-104]
   10074:	ldur	w10, [x29, #-108]
   10078:	mul	w8, w8, w10
   1007c:	cmp	w8, #0x0
   10080:	cset	w8, ge  // ge = tcont
   10084:	tbnz	w8, #0, 100ec <mpc_mul_karatsuba@@Base+0x698>
   10088:	ldur	x8, [x29, #-48]
   1008c:	str	x8, [sp, #232]
   10090:	ldur	x8, [x29, #-64]
   10094:	stur	x8, [x29, #-48]
   10098:	ldr	x8, [sp, #232]
   1009c:	stur	x8, [x29, #-64]
   100a0:	ldur	x8, [x29, #-56]
   100a4:	str	x8, [sp, #224]
   100a8:	ldur	x8, [x29, #-72]
   100ac:	stur	x8, [x29, #-56]
   100b0:	ldr	x8, [sp, #224]
   100b4:	stur	x8, [x29, #-72]
   100b8:	sub	x0, x29, #0xb0
   100bc:	sub	x1, x29, #0xd0
   100c0:	bl	5190 <mpfr_swap@plt>
   100c4:	ldur	w8, [x29, #-88]
   100c8:	str	w8, [sp, #220]
   100cc:	ldur	w8, [x29, #-92]
   100d0:	stur	w8, [x29, #-88]
   100d4:	ldr	w8, [sp, #220]
   100d8:	stur	w8, [x29, #-92]
   100dc:	ldur	w8, [x29, #-104]
   100e0:	mov	w9, wzr
   100e4:	subs	w8, w9, w8
   100e8:	stur	w8, [x29, #-104]
   100ec:	str	wzr, [sp, #260]
   100f0:	ldr	w8, [sp, #260]
   100f4:	add	w8, w8, #0x1
   100f8:	str	w8, [sp, #260]
   100fc:	ldur	x0, [x29, #-248]
   10100:	bl	4de0 <mpc_ceil_log2@plt>
   10104:	add	x9, x0, #0x3
   10108:	ldur	x10, [x29, #-248]
   1010c:	add	x9, x10, x9
   10110:	stur	x9, [x29, #-248]
   10114:	ldur	x9, [x29, #-248]
   10118:	str	x9, [sp, #360]
   1011c:	sub	x0, x29, #0x90
   10120:	mov	x1, x9
   10124:	bl	4d40 <mpfr_set_prec@plt>
   10128:	ldur	x1, [x29, #-248]
   1012c:	sub	x0, x29, #0xf0
   10130:	bl	4d40 <mpfr_set_prec@plt>
   10134:	ldur	w8, [x29, #-88]
   10138:	mov	w11, #0xffffffff            	// #-1
   1013c:	cmp	w8, w11
   10140:	b.ne	10160 <mpc_mul_karatsuba@@Base+0x70c>  // b.any
   10144:	ldur	x1, [x29, #-56]
   10148:	ldur	x2, [x29, #-48]
   1014c:	sub	x0, x29, #0x90
   10150:	mov	w3, #0x4                   	// #4
   10154:	bl	4b40 <mpfr_sub@plt>
   10158:	str	w0, [sp, #112]
   1015c:	b	10178 <mpc_mul_karatsuba@@Base+0x724>
   10160:	ldur	x1, [x29, #-56]
   10164:	ldur	x2, [x29, #-48]
   10168:	sub	x0, x29, #0x90
   1016c:	mov	w3, #0x4                   	// #4
   10170:	bl	4f50 <mpfr_add@plt>
   10174:	str	w0, [sp, #112]
   10178:	ldr	w8, [sp, #112]
   1017c:	stur	w8, [x29, #-84]
   10180:	ldur	w8, [x29, #-92]
   10184:	mov	w9, #0xffffffff            	// #-1
   10188:	cmp	w8, w9
   1018c:	b.ne	101ac <mpc_mul_karatsuba@@Base+0x758>  // b.any
   10190:	ldur	x1, [x29, #-64]
   10194:	ldur	x2, [x29, #-72]
   10198:	sub	x0, x29, #0xf0
   1019c:	mov	w3, #0x4                   	// #4
   101a0:	bl	4f50 <mpfr_add@plt>
   101a4:	str	w0, [sp, #108]
   101a8:	b	101c4 <mpc_mul_karatsuba@@Base+0x770>
   101ac:	ldur	x1, [x29, #-64]
   101b0:	ldur	x2, [x29, #-72]
   101b4:	sub	x0, x29, #0xf0
   101b8:	mov	w3, #0x4                   	// #4
   101bc:	bl	4b40 <mpfr_sub@plt>
   101c0:	str	w0, [sp, #108]
   101c4:	ldr	w8, [sp, #108]
   101c8:	ldur	w9, [x29, #-84]
   101cc:	orr	w8, w9, w8
   101d0:	stur	w8, [x29, #-84]
   101d4:	ldur	w8, [x29, #-92]
   101d8:	mov	w9, #0xffffffff            	// #-1
   101dc:	cmp	w8, w9
   101e0:	b.ne	101fc <mpc_mul_karatsuba@@Base+0x7a8>  // b.any
   101e4:	sub	x8, x29, #0xf0
   101e8:	mov	x0, x8
   101ec:	mov	x1, x8
   101f0:	mov	w9, wzr
   101f4:	mov	w2, w9
   101f8:	bl	4c60 <mpfr_neg@plt>
   101fc:	ldur	w8, [x29, #-84]
   10200:	cbnz	w8, 10228 <mpc_mul_karatsuba@@Base+0x7d4>
   10204:	ldur	x8, [x29, #-248]
   10208:	mov	x9, #0x2                   	// #2
   1020c:	mul	x8, x9, x8
   10210:	str	x8, [sp, #360]
   10214:	sub	x0, x29, #0x90
   10218:	mov	x1, x8
   1021c:	mov	w10, wzr
   10220:	mov	w2, w10
   10224:	bl	5470 <mpfr_prec_round@plt>
   10228:	sub	x8, x29, #0x90
   1022c:	mov	x0, x8
   10230:	mov	x1, x8
   10234:	sub	x2, x29, #0xf0
   10238:	mov	w3, #0x4                   	// #4
   1023c:	bl	4c50 <mpfr_mul@plt>
   10240:	ldur	w9, [x29, #-84]
   10244:	orr	w9, w9, w0
   10248:	stur	w9, [x29, #-84]
   1024c:	ldur	w9, [x29, #-84]
   10250:	cbnz	w9, 10314 <mpc_mul_karatsuba@@Base+0x8c0>
   10254:	ldur	x8, [x29, #-160]
   10258:	ldur	x9, [x29, #-192]
   1025c:	subs	x8, x8, x9
   10260:	cmp	x8, #0x0
   10264:	cset	w10, lt  // lt = tstop
   10268:	tbnz	w10, #0, 10280 <mpc_mul_karatsuba@@Base+0x82c>
   1026c:	ldur	x8, [x29, #-160]
   10270:	ldur	x9, [x29, #-192]
   10274:	subs	x8, x8, x9
   10278:	str	x8, [sp, #96]
   1027c:	b	10298 <mpc_mul_karatsuba@@Base+0x844>
   10280:	ldur	x8, [x29, #-160]
   10284:	ldur	x9, [x29, #-192]
   10288:	subs	x8, x8, x9
   1028c:	mov	x9, xzr
   10290:	subs	x8, x9, x8
   10294:	str	x8, [sp, #96]
   10298:	ldr	x8, [sp, #96]
   1029c:	ldr	x9, [sp, #352]
   102a0:	ldr	x10, [sp, #344]
   102a4:	cmp	x9, x10
   102a8:	str	x8, [sp, #88]
   102ac:	b.le	102bc <mpc_mul_karatsuba@@Base+0x868>
   102b0:	ldr	x8, [sp, #352]
   102b4:	str	x8, [sp, #80]
   102b8:	b	102c4 <mpc_mul_karatsuba@@Base+0x870>
   102bc:	ldr	x8, [sp, #344]
   102c0:	str	x8, [sp, #80]
   102c4:	ldr	x8, [sp, #80]
   102c8:	ldr	x9, [sp, #88]
   102cc:	add	x8, x9, x8
   102d0:	add	x8, x8, #0x1
   102d4:	str	x8, [sp, #208]
   102d8:	ldr	x8, [sp, #208]
   102dc:	ldr	x10, [sp, #360]
   102e0:	cmp	x8, x10
   102e4:	b.le	102f0 <mpc_mul_karatsuba@@Base+0x89c>
   102e8:	ldr	x8, [sp, #360]
   102ec:	str	x8, [sp, #208]
   102f0:	ldr	x8, [sp, #208]
   102f4:	ldur	x9, [x29, #-248]
   102f8:	cmp	x8, x9
   102fc:	b.le	10314 <mpc_mul_karatsuba@@Base+0x8c0>
   10300:	ldr	x1, [sp, #208]
   10304:	sub	x0, x29, #0xf0
   10308:	mov	w8, wzr
   1030c:	mov	w2, w8
   10310:	bl	5470 <mpfr_prec_round@plt>
   10314:	ldur	w8, [x29, #-108]
   10318:	mov	w9, #0x3                   	// #3
   1031c:	mov	w10, #0x2                   	// #2
   10320:	cmp	w8, #0x0
   10324:	csel	w8, w10, w9, gt
   10328:	str	w8, [sp, #336]
   1032c:	ldr	w3, [sp, #336]
   10330:	sub	x0, x29, #0xf0
   10334:	sub	x1, x29, #0xb0
   10338:	sub	x2, x29, #0xd0
   1033c:	bl	4b40 <mpfr_sub@plt>
   10340:	ldur	w8, [x29, #-84]
   10344:	orr	w8, w8, w0
   10348:	stur	w8, [x29, #-84]
   1034c:	ldur	x11, [x29, #-128]
   10350:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   10354:	cmp	x11, x12
   10358:	b.ge	10384 <mpc_mul_karatsuba@@Base+0x930>  // b.tcont
   1035c:	ldur	x8, [x29, #-128]
   10360:	mov	x9, #0x2                   	// #2
   10364:	movk	x9, #0x8000, lsl #48
   10368:	cmp	x8, x9
   1036c:	b.ne	10378 <mpc_mul_karatsuba@@Base+0x924>  // b.any
   10370:	bl	4be0 <mpfr_set_erangeflag@plt>
   10374:	b	10378 <mpc_mul_karatsuba@@Base+0x924>
   10378:	mov	w8, wzr
   1037c:	str	w8, [sp, #76]
   10380:	b	1038c <mpc_mul_karatsuba@@Base+0x938>
   10384:	ldur	w8, [x29, #-136]
   10388:	str	w8, [sp, #76]
   1038c:	ldr	w8, [sp, #76]
   10390:	cbnz	w8, 103ec <mpc_mul_karatsuba@@Base+0x998>
   10394:	ldur	x8, [x29, #-224]
   10398:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1039c:	cmp	x8, x9
   103a0:	b.ge	103cc <mpc_mul_karatsuba@@Base+0x978>  // b.tcont
   103a4:	ldur	x8, [x29, #-224]
   103a8:	mov	x9, #0x2                   	// #2
   103ac:	movk	x9, #0x8000, lsl #48
   103b0:	cmp	x8, x9
   103b4:	b.ne	103c0 <mpc_mul_karatsuba@@Base+0x96c>  // b.any
   103b8:	bl	4be0 <mpfr_set_erangeflag@plt>
   103bc:	b	103c0 <mpc_mul_karatsuba@@Base+0x96c>
   103c0:	mov	w8, wzr
   103c4:	str	w8, [sp, #72]
   103c8:	b	103d4 <mpc_mul_karatsuba@@Base+0x980>
   103cc:	ldur	w8, [x29, #-232]
   103d0:	str	w8, [sp, #72]
   103d4:	ldr	w8, [sp, #72]
   103d8:	mov	w9, #0x3                   	// #3
   103dc:	mov	w10, #0x2                   	// #2
   103e0:	cmp	w8, #0x0
   103e4:	csel	w8, w10, w9, gt
   103e8:	str	w8, [sp, #336]
   103ec:	ldr	w3, [sp, #336]
   103f0:	sub	x8, x29, #0x90
   103f4:	mov	x0, x8
   103f8:	mov	x1, x8
   103fc:	sub	x2, x29, #0xf0
   10400:	bl	4f50 <mpfr_add@plt>
   10404:	ldur	w9, [x29, #-84]
   10408:	orr	w9, w9, w0
   1040c:	stur	w9, [x29, #-84]
   10410:	ldur	w9, [x29, #-84]
   10414:	mov	w10, #0x1                   	// #1
   10418:	str	w10, [sp, #68]
   1041c:	cbz	w9, 1045c <mpc_mul_karatsuba@@Base+0xa08>
   10420:	ldr	x8, [sp, #360]
   10424:	subs	x1, x8, #0x3
   10428:	ldr	w2, [sp, #336]
   1042c:	ldur	x8, [x29, #-256]
   10430:	ldr	w9, [sp, #340]
   10434:	cmp	w9, #0x0
   10438:	cset	w9, eq  // eq = none
   1043c:	and	w9, w9, #0x1
   10440:	add	x4, x8, w9, sxtw
   10444:	sub	x0, x29, #0x90
   10448:	mov	w3, #0x1                   	// #1
   1044c:	bl	5540 <mpfr_can_round@plt>
   10450:	cmp	w0, #0x0
   10454:	cset	w9, ne  // ne = any
   10458:	str	w9, [sp, #68]
   1045c:	ldr	w8, [sp, #68]
   10460:	and	w8, w8, #0x1
   10464:	stur	w8, [x29, #-80]
   10468:	ldur	w8, [x29, #-80]
   1046c:	mov	w9, #0x0                   	// #0
   10470:	str	w9, [sp, #64]
   10474:	cbnz	w8, 10488 <mpc_mul_karatsuba@@Base+0xa34>
   10478:	ldr	w8, [sp, #260]
   1047c:	cmp	w8, #0x1
   10480:	cset	w8, le
   10484:	str	w8, [sp, #64]
   10488:	ldr	w8, [sp, #64]
   1048c:	tbnz	w8, #0, 100f0 <mpc_mul_karatsuba@@Base+0x69c>
   10490:	ldur	w8, [x29, #-80]
   10494:	cbz	w8, 10754 <mpc_mul_karatsuba@@Base+0xd00>
   10498:	ldur	w8, [x29, #-84]
   1049c:	cbz	w8, 104e8 <mpc_mul_karatsuba@@Base+0xa94>
   104a0:	ldur	x8, [x29, #-128]
   104a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   104a8:	cmp	x8, x9
   104ac:	b.ge	104d8 <mpc_mul_karatsuba@@Base+0xa84>  // b.tcont
   104b0:	ldur	x8, [x29, #-128]
   104b4:	mov	x9, #0x2                   	// #2
   104b8:	movk	x9, #0x8000, lsl #48
   104bc:	cmp	x8, x9
   104c0:	b.ne	104cc <mpc_mul_karatsuba@@Base+0xa78>  // b.any
   104c4:	bl	4be0 <mpfr_set_erangeflag@plt>
   104c8:	b	104cc <mpc_mul_karatsuba@@Base+0xa78>
   104cc:	mov	w8, wzr
   104d0:	str	w8, [sp, #60]
   104d4:	b	104e0 <mpc_mul_karatsuba@@Base+0xa8c>
   104d8:	ldur	w8, [x29, #-136]
   104dc:	str	w8, [sp, #60]
   104e0:	ldr	w8, [sp, #60]
   104e4:	stur	w8, [x29, #-84]
   104e8:	ldur	w8, [x29, #-76]
   104ec:	cbnz	w8, 10564 <mpc_mul_karatsuba@@Base+0xb10>
   104f0:	ldur	w8, [x29, #-36]
   104f4:	and	w2, w8, #0xf
   104f8:	sub	x1, x29, #0x90
   104fc:	ldur	w3, [x29, #-136]
   10500:	add	x0, sp, #0x108
   10504:	bl	52d0 <mpfr_set4@plt>
   10508:	stur	w0, [x29, #-96]
   1050c:	ldur	w8, [x29, #-96]
   10510:	cbnz	w8, 10540 <mpc_mul_karatsuba@@Base+0xaec>
   10514:	ldur	w8, [x29, #-84]
   10518:	stur	w8, [x29, #-96]
   1051c:	add	x9, sp, #0x108
   10520:	add	x0, x9, #0x20
   10524:	ldur	w8, [x29, #-36]
   10528:	asr	w3, w8, #4
   1052c:	sub	x1, x29, #0xb0
   10530:	sub	x2, x29, #0xd0
   10534:	bl	4f50 <mpfr_add@plt>
   10538:	stur	w0, [x29, #-100]
   1053c:	b	10560 <mpc_mul_karatsuba@@Base+0xb0c>
   10540:	add	x8, sp, #0x108
   10544:	add	x0, x8, #0x20
   10548:	ldur	w9, [x29, #-36]
   1054c:	asr	w3, w9, #4
   10550:	sub	x1, x29, #0xb0
   10554:	sub	x2, x29, #0xd0
   10558:	bl	4f50 <mpfr_add@plt>
   1055c:	stur	w0, [x29, #-100]
   10560:	b	10740 <mpc_mul_karatsuba@@Base+0xcec>
   10564:	ldur	w8, [x29, #-76]
   10568:	cmp	w8, #0x1
   1056c:	b.ne	105e4 <mpc_mul_karatsuba@@Base+0xb90>  // b.any
   10570:	add	x8, sp, #0x108
   10574:	add	x0, x8, #0x20
   10578:	ldur	w9, [x29, #-36]
   1057c:	asr	w2, w9, #4
   10580:	sub	x1, x29, #0x90
   10584:	bl	4c60 <mpfr_neg@plt>
   10588:	stur	w0, [x29, #-100]
   1058c:	ldur	w9, [x29, #-100]
   10590:	cbnz	w9, 105c4 <mpc_mul_karatsuba@@Base+0xb70>
   10594:	ldur	w8, [x29, #-84]
   10598:	mov	w9, wzr
   1059c:	subs	w8, w9, w8
   105a0:	stur	w8, [x29, #-100]
   105a4:	ldur	w8, [x29, #-36]
   105a8:	and	w3, w8, #0xf
   105ac:	add	x0, sp, #0x108
   105b0:	sub	x1, x29, #0xb0
   105b4:	sub	x2, x29, #0xd0
   105b8:	bl	4f50 <mpfr_add@plt>
   105bc:	stur	w0, [x29, #-96]
   105c0:	b	105e0 <mpc_mul_karatsuba@@Base+0xb8c>
   105c4:	ldur	w8, [x29, #-36]
   105c8:	and	w3, w8, #0xf
   105cc:	add	x0, sp, #0x108
   105d0:	sub	x1, x29, #0xb0
   105d4:	sub	x2, x29, #0xd0
   105d8:	bl	4f50 <mpfr_add@plt>
   105dc:	stur	w0, [x29, #-96]
   105e0:	b	10740 <mpc_mul_karatsuba@@Base+0xcec>
   105e4:	ldur	w8, [x29, #-36]
   105e8:	and	w2, w8, #0xf
   105ec:	add	x0, sp, #0x108
   105f0:	sub	x1, x29, #0x90
   105f4:	bl	4c60 <mpfr_neg@plt>
   105f8:	stur	w0, [x29, #-96]
   105fc:	ldur	w8, [x29, #-96]
   10600:	cbnz	w8, 106ac <mpc_mul_karatsuba@@Base+0xc58>
   10604:	ldur	w8, [x29, #-84]
   10608:	mov	w9, wzr
   1060c:	subs	w8, w9, w8
   10610:	stur	w8, [x29, #-96]
   10614:	add	x10, sp, #0x108
   10618:	add	x0, x10, #0x20
   1061c:	ldur	w8, [x29, #-36]
   10620:	asr	w8, w8, #4
   10624:	cmp	w8, #0x2
   10628:	str	x0, [sp, #48]
   1062c:	b.ne	1063c <mpc_mul_karatsuba@@Base+0xbe8>  // b.any
   10630:	mov	w8, #0x3                   	// #3
   10634:	str	w8, [sp, #44]
   10638:	b	1066c <mpc_mul_karatsuba@@Base+0xc18>
   1063c:	ldur	w8, [x29, #-36]
   10640:	asr	w8, w8, #4
   10644:	cmp	w8, #0x3
   10648:	b.ne	10658 <mpc_mul_karatsuba@@Base+0xc04>  // b.any
   1064c:	mov	w8, #0x2                   	// #2
   10650:	str	w8, [sp, #40]
   10654:	b	10664 <mpc_mul_karatsuba@@Base+0xc10>
   10658:	ldur	w8, [x29, #-36]
   1065c:	asr	w8, w8, #4
   10660:	str	w8, [sp, #40]
   10664:	ldr	w8, [sp, #40]
   10668:	str	w8, [sp, #44]
   1066c:	ldr	w8, [sp, #44]
   10670:	ldr	x0, [sp, #48]
   10674:	sub	x1, x29, #0xb0
   10678:	sub	x2, x29, #0xd0
   1067c:	mov	w3, w8
   10680:	bl	4f50 <mpfr_add@plt>
   10684:	mov	w8, wzr
   10688:	subs	w8, w8, w0
   1068c:	stur	w8, [x29, #-100]
   10690:	add	x9, sp, #0x108
   10694:	add	x0, x9, #0x20
   10698:	add	x1, x9, #0x20
   1069c:	ldur	w8, [x29, #-36]
   106a0:	asr	w2, w8, #4
   106a4:	bl	4c60 <mpfr_neg@plt>
   106a8:	b	10740 <mpc_mul_karatsuba@@Base+0xcec>
   106ac:	add	x8, sp, #0x108
   106b0:	add	x0, x8, #0x20
   106b4:	ldur	w9, [x29, #-36]
   106b8:	asr	w9, w9, #4
   106bc:	cmp	w9, #0x2
   106c0:	str	x0, [sp, #32]
   106c4:	b.ne	106d4 <mpc_mul_karatsuba@@Base+0xc80>  // b.any
   106c8:	mov	w8, #0x3                   	// #3
   106cc:	str	w8, [sp, #28]
   106d0:	b	10704 <mpc_mul_karatsuba@@Base+0xcb0>
   106d4:	ldur	w8, [x29, #-36]
   106d8:	asr	w8, w8, #4
   106dc:	cmp	w8, #0x3
   106e0:	b.ne	106f0 <mpc_mul_karatsuba@@Base+0xc9c>  // b.any
   106e4:	mov	w8, #0x2                   	// #2
   106e8:	str	w8, [sp, #24]
   106ec:	b	106fc <mpc_mul_karatsuba@@Base+0xca8>
   106f0:	ldur	w8, [x29, #-36]
   106f4:	asr	w8, w8, #4
   106f8:	str	w8, [sp, #24]
   106fc:	ldr	w8, [sp, #24]
   10700:	str	w8, [sp, #28]
   10704:	ldr	w8, [sp, #28]
   10708:	ldr	x0, [sp, #32]
   1070c:	sub	x1, x29, #0xb0
   10710:	sub	x2, x29, #0xd0
   10714:	mov	w3, w8
   10718:	bl	4f50 <mpfr_add@plt>
   1071c:	mov	w8, wzr
   10720:	subs	w8, w8, w0
   10724:	stur	w8, [x29, #-100]
   10728:	add	x9, sp, #0x108
   1072c:	add	x0, x9, #0x20
   10730:	add	x1, x9, #0x20
   10734:	ldur	w8, [x29, #-36]
   10738:	asr	w2, w8, #4
   1073c:	bl	4c60 <mpfr_neg@plt>
   10740:	ldur	x0, [x29, #-16]
   10744:	add	x1, sp, #0x108
   10748:	mov	w8, wzr
   1074c:	mov	w2, w8
   10750:	bl	5680 <mpc_set@plt>
   10754:	sub	x0, x29, #0x90
   10758:	bl	4e30 <mpfr_clear@plt>
   1075c:	sub	x0, x29, #0xb0
   10760:	bl	4e30 <mpfr_clear@plt>
   10764:	sub	x0, x29, #0xd0
   10768:	bl	4e30 <mpfr_clear@plt>
   1076c:	sub	x0, x29, #0xf0
   10770:	bl	4e30 <mpfr_clear@plt>
   10774:	ldr	w8, [sp, #332]
   10778:	cbz	w8, 10784 <mpc_mul_karatsuba@@Base+0xd30>
   1077c:	add	x0, sp, #0x108
   10780:	bl	4af0 <mpc_clear@plt>
   10784:	ldur	w8, [x29, #-80]
   10788:	cbz	w8, 10810 <mpc_mul_karatsuba@@Base+0xdbc>
   1078c:	ldur	w8, [x29, #-96]
   10790:	cmp	w8, #0x0
   10794:	cset	w8, ge  // ge = tcont
   10798:	tbnz	w8, #0, 107a8 <mpc_mul_karatsuba@@Base+0xd54>
   1079c:	mov	w8, #0x2                   	// #2
   107a0:	str	w8, [sp, #20]
   107a4:	b	107c0 <mpc_mul_karatsuba@@Base+0xd6c>
   107a8:	ldur	w8, [x29, #-96]
   107ac:	mov	w9, wzr
   107b0:	mov	w10, #0x1                   	// #1
   107b4:	cmp	w8, #0x0
   107b8:	csel	w8, w9, w10, eq  // eq = none
   107bc:	str	w8, [sp, #20]
   107c0:	ldr	w8, [sp, #20]
   107c4:	ldur	w9, [x29, #-100]
   107c8:	cmp	w9, #0x0
   107cc:	cset	w9, ge  // ge = tcont
   107d0:	str	w8, [sp, #16]
   107d4:	tbnz	w9, #0, 107e4 <mpc_mul_karatsuba@@Base+0xd90>
   107d8:	mov	w8, #0x2                   	// #2
   107dc:	str	w8, [sp, #12]
   107e0:	b	107fc <mpc_mul_karatsuba@@Base+0xda8>
   107e4:	ldur	w8, [x29, #-100]
   107e8:	mov	w9, wzr
   107ec:	mov	w10, #0x1                   	// #1
   107f0:	cmp	w8, #0x0
   107f4:	csel	w8, w9, w10, eq  // eq = none
   107f8:	str	w8, [sp, #12]
   107fc:	ldr	w8, [sp, #12]
   10800:	ldr	w9, [sp, #16]
   10804:	orr	w8, w9, w8, lsl #2
   10808:	stur	w8, [x29, #-4]
   1080c:	b	10828 <mpc_mul_karatsuba@@Base+0xdd4>
   10810:	ldur	x0, [x29, #-16]
   10814:	ldur	x1, [x29, #-24]
   10818:	ldur	x2, [x29, #-32]
   1081c:	ldur	w3, [x29, #-36]
   10820:	bl	4fa0 <mpc_mul_naive@plt>
   10824:	stur	w0, [x29, #-4]
   10828:	ldur	w0, [x29, #-4]
   1082c:	add	sp, sp, #0x270
   10830:	ldr	x28, [sp, #16]
   10834:	ldp	x29, x30, [sp], #32
   10838:	ret

000000000001083c <mpc_mul@@Base>:
   1083c:	sub	sp, sp, #0x70
   10840:	stp	x29, x30, [sp, #96]
   10844:	add	x29, sp, #0x60
   10848:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1084c:	stur	x0, [x29, #-16]
   10850:	stur	x1, [x29, #-24]
   10854:	stur	x2, [x29, #-32]
   10858:	stur	w3, [x29, #-36]
   1085c:	ldur	x9, [x29, #-24]
   10860:	ldr	x9, [x9, #16]
   10864:	cmp	x9, x8
   10868:	b.eq	10880 <mpc_mul@@Base+0x44>  // b.none
   1086c:	ldur	x8, [x29, #-24]
   10870:	ldr	x8, [x8, #48]
   10874:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10878:	cmp	x8, x9
   1087c:	b.ne	10898 <mpc_mul@@Base+0x5c>  // b.any
   10880:	ldur	x0, [x29, #-16]
   10884:	ldur	x1, [x29, #-24]
   10888:	ldur	x2, [x29, #-32]
   1088c:	bl	10c1c <mpc_mul@@Base+0x3e0>
   10890:	stur	w0, [x29, #-4]
   10894:	b	10c0c <mpc_mul@@Base+0x3d0>
   10898:	ldur	x8, [x29, #-32]
   1089c:	ldr	x8, [x8, #16]
   108a0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   108a4:	cmp	x8, x9
   108a8:	b.eq	108c0 <mpc_mul@@Base+0x84>  // b.none
   108ac:	ldur	x8, [x29, #-32]
   108b0:	ldr	x8, [x8, #48]
   108b4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   108b8:	cmp	x8, x9
   108bc:	b.ne	108d8 <mpc_mul@@Base+0x9c>  // b.any
   108c0:	ldur	x0, [x29, #-16]
   108c4:	ldur	x1, [x29, #-32]
   108c8:	ldur	x2, [x29, #-24]
   108cc:	bl	10c1c <mpc_mul@@Base+0x3e0>
   108d0:	stur	w0, [x29, #-4]
   108d4:	b	10c0c <mpc_mul@@Base+0x3d0>
   108d8:	ldur	x8, [x29, #-24]
   108dc:	ldr	x8, [x8, #16]
   108e0:	mov	x9, #0x2                   	// #2
   108e4:	movk	x9, #0x8000, lsl #48
   108e8:	cmp	x8, x9
   108ec:	b.eq	10938 <mpc_mul@@Base+0xfc>  // b.none
   108f0:	ldur	x8, [x29, #-24]
   108f4:	ldr	x8, [x8, #48]
   108f8:	mov	x9, #0x2                   	// #2
   108fc:	movk	x9, #0x8000, lsl #48
   10900:	cmp	x8, x9
   10904:	b.eq	10938 <mpc_mul@@Base+0xfc>  // b.none
   10908:	ldur	x8, [x29, #-32]
   1090c:	ldr	x8, [x8, #16]
   10910:	mov	x9, #0x2                   	// #2
   10914:	movk	x9, #0x8000, lsl #48
   10918:	cmp	x8, x9
   1091c:	b.eq	10938 <mpc_mul@@Base+0xfc>  // b.none
   10920:	ldur	x8, [x29, #-32]
   10924:	ldr	x8, [x8, #48]
   10928:	mov	x9, #0x2                   	// #2
   1092c:	movk	x9, #0x8000, lsl #48
   10930:	cmp	x8, x9
   10934:	b.ne	10954 <mpc_mul@@Base+0x118>  // b.any
   10938:	ldur	x0, [x29, #-16]
   1093c:	bl	4b20 <mpfr_set_nan@plt>
   10940:	ldur	x8, [x29, #-16]
   10944:	add	x0, x8, #0x20
   10948:	bl	4b20 <mpfr_set_nan@plt>
   1094c:	stur	wzr, [x29, #-4]
   10950:	b	10c0c <mpc_mul@@Base+0x3d0>
   10954:	ldur	x8, [x29, #-24]
   10958:	ldr	x8, [x8, #48]
   1095c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10960:	cmp	x8, x9
   10964:	b.ne	10984 <mpc_mul@@Base+0x148>  // b.any
   10968:	ldur	x0, [x29, #-16]
   1096c:	ldur	x1, [x29, #-32]
   10970:	ldur	x2, [x29, #-24]
   10974:	ldur	w3, [x29, #-36]
   10978:	bl	11280 <mpc_mul@@Base+0xa44>
   1097c:	stur	w0, [x29, #-4]
   10980:	b	10c0c <mpc_mul@@Base+0x3d0>
   10984:	ldur	x8, [x29, #-32]
   10988:	ldr	x8, [x8, #48]
   1098c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10990:	cmp	x8, x9
   10994:	b.ne	109b4 <mpc_mul@@Base+0x178>  // b.any
   10998:	ldur	x0, [x29, #-16]
   1099c:	ldur	x1, [x29, #-24]
   109a0:	ldur	x2, [x29, #-32]
   109a4:	ldur	w3, [x29, #-36]
   109a8:	bl	11280 <mpc_mul@@Base+0xa44>
   109ac:	stur	w0, [x29, #-4]
   109b0:	b	10c0c <mpc_mul@@Base+0x3d0>
   109b4:	ldur	x8, [x29, #-24]
   109b8:	ldr	x8, [x8, #16]
   109bc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   109c0:	cmp	x8, x9
   109c4:	b.ne	109e4 <mpc_mul@@Base+0x1a8>  // b.any
   109c8:	ldur	x0, [x29, #-16]
   109cc:	ldur	x1, [x29, #-32]
   109d0:	ldur	x2, [x29, #-24]
   109d4:	ldur	w3, [x29, #-36]
   109d8:	bl	1145c <mpc_mul@@Base+0xc20>
   109dc:	stur	w0, [x29, #-4]
   109e0:	b	10c0c <mpc_mul@@Base+0x3d0>
   109e4:	ldur	x8, [x29, #-32]
   109e8:	ldr	x8, [x8, #16]
   109ec:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   109f0:	cmp	x8, x9
   109f4:	b.ne	10a14 <mpc_mul@@Base+0x1d8>  // b.any
   109f8:	ldur	x0, [x29, #-16]
   109fc:	ldur	x1, [x29, #-24]
   10a00:	ldur	x2, [x29, #-32]
   10a04:	ldur	w3, [x29, #-36]
   10a08:	bl	1145c <mpc_mul@@Base+0xc20>
   10a0c:	stur	w0, [x29, #-4]
   10a10:	b	10c0c <mpc_mul@@Base+0x3d0>
   10a14:	ldur	x8, [x29, #-24]
   10a18:	ldr	x8, [x8, #16]
   10a1c:	ldur	x9, [x29, #-24]
   10a20:	ldr	x9, [x9, #48]
   10a24:	subs	x8, x8, x9
   10a28:	cmp	x8, #0x0
   10a2c:	cset	w10, lt  // lt = tstop
   10a30:	tbnz	w10, #0, 10a50 <mpc_mul@@Base+0x214>
   10a34:	ldur	x8, [x29, #-24]
   10a38:	ldr	x8, [x8, #16]
   10a3c:	ldur	x9, [x29, #-24]
   10a40:	ldr	x9, [x9, #48]
   10a44:	subs	x8, x8, x9
   10a48:	str	x8, [sp, #48]
   10a4c:	b	10a70 <mpc_mul@@Base+0x234>
   10a50:	ldur	x8, [x29, #-24]
   10a54:	ldr	x8, [x8, #16]
   10a58:	ldur	x9, [x29, #-24]
   10a5c:	ldr	x9, [x9, #48]
   10a60:	subs	x8, x8, x9
   10a64:	mov	x9, xzr
   10a68:	subs	x8, x9, x8
   10a6c:	str	x8, [sp, #48]
   10a70:	ldr	x8, [sp, #48]
   10a74:	ldur	x9, [x29, #-24]
   10a78:	ldr	x9, [x9]
   10a7c:	ldur	x10, [x29, #-24]
   10a80:	ldr	x10, [x10, #32]
   10a84:	cmp	x9, x10
   10a88:	str	x8, [sp, #40]
   10a8c:	b.le	10aa0 <mpc_mul@@Base+0x264>
   10a90:	ldur	x8, [x29, #-24]
   10a94:	ldr	x8, [x8]
   10a98:	str	x8, [sp, #32]
   10a9c:	b	10aac <mpc_mul@@Base+0x270>
   10aa0:	ldur	x8, [x29, #-24]
   10aa4:	ldr	x8, [x8, #32]
   10aa8:	str	x8, [sp, #32]
   10aac:	ldr	x8, [sp, #32]
   10ab0:	mov	x9, #0x2                   	// #2
   10ab4:	sdiv	x8, x8, x9
   10ab8:	ldr	x9, [sp, #40]
   10abc:	cmp	x9, x8
   10ac0:	b.gt	10b74 <mpc_mul@@Base+0x338>
   10ac4:	ldur	x8, [x29, #-32]
   10ac8:	ldr	x8, [x8, #16]
   10acc:	ldur	x9, [x29, #-32]
   10ad0:	ldr	x9, [x9, #48]
   10ad4:	subs	x8, x8, x9
   10ad8:	cmp	x8, #0x0
   10adc:	cset	w10, lt  // lt = tstop
   10ae0:	tbnz	w10, #0, 10b00 <mpc_mul@@Base+0x2c4>
   10ae4:	ldur	x8, [x29, #-32]
   10ae8:	ldr	x8, [x8, #16]
   10aec:	ldur	x9, [x29, #-32]
   10af0:	ldr	x9, [x9, #48]
   10af4:	subs	x8, x8, x9
   10af8:	str	x8, [sp, #24]
   10afc:	b	10b20 <mpc_mul@@Base+0x2e4>
   10b00:	ldur	x8, [x29, #-32]
   10b04:	ldr	x8, [x8, #16]
   10b08:	ldur	x9, [x29, #-32]
   10b0c:	ldr	x9, [x9, #48]
   10b10:	subs	x8, x8, x9
   10b14:	mov	x9, xzr
   10b18:	subs	x8, x9, x8
   10b1c:	str	x8, [sp, #24]
   10b20:	ldr	x8, [sp, #24]
   10b24:	ldur	x9, [x29, #-32]
   10b28:	ldr	x9, [x9]
   10b2c:	ldur	x10, [x29, #-32]
   10b30:	ldr	x10, [x10, #32]
   10b34:	cmp	x9, x10
   10b38:	str	x8, [sp, #16]
   10b3c:	b.le	10b50 <mpc_mul@@Base+0x314>
   10b40:	ldur	x8, [x29, #-32]
   10b44:	ldr	x8, [x8]
   10b48:	str	x8, [sp, #8]
   10b4c:	b	10b5c <mpc_mul@@Base+0x320>
   10b50:	ldur	x8, [x29, #-32]
   10b54:	ldr	x8, [x8, #32]
   10b58:	str	x8, [sp, #8]
   10b5c:	ldr	x8, [sp, #8]
   10b60:	mov	x9, #0x2                   	// #2
   10b64:	sdiv	x8, x8, x9
   10b68:	ldr	x9, [sp, #16]
   10b6c:	cmp	x9, x8
   10b70:	b.le	10b90 <mpc_mul@@Base+0x354>
   10b74:	ldur	x0, [x29, #-16]
   10b78:	ldur	x1, [x29, #-24]
   10b7c:	ldur	x2, [x29, #-32]
   10b80:	ldur	w3, [x29, #-36]
   10b84:	bl	4fa0 <mpc_mul_naive@plt>
   10b88:	stur	w0, [x29, #-4]
   10b8c:	b	10c0c <mpc_mul@@Base+0x3d0>
   10b90:	ldur	x8, [x29, #-16]
   10b94:	ldr	x8, [x8]
   10b98:	ldur	x9, [x29, #-16]
   10b9c:	ldr	x9, [x9, #32]
   10ba0:	cmp	x8, x9
   10ba4:	b.le	10bb8 <mpc_mul@@Base+0x37c>
   10ba8:	ldur	x8, [x29, #-16]
   10bac:	ldr	x8, [x8]
   10bb0:	str	x8, [sp]
   10bb4:	b	10bc4 <mpc_mul@@Base+0x388>
   10bb8:	ldur	x8, [x29, #-16]
   10bbc:	ldr	x8, [x8, #32]
   10bc0:	str	x8, [sp]
   10bc4:	ldr	x8, [sp]
   10bc8:	adrp	x9, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   10bcc:	ldr	x9, [x9, #4056]
   10bd0:	ldrsw	x9, [x9]
   10bd4:	mov	x10, #0x17                  	// #23
   10bd8:	mul	x9, x10, x9
   10bdc:	adrp	x10, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   10be0:	ldr	x10, [x10, #4016]
   10be4:	adrp	x11, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   10be8:	ldr	x11, [x11, #4032]
   10bec:	cmp	x8, x9
   10bf0:	csel	x8, x11, x10, le
   10bf4:	ldur	x0, [x29, #-16]
   10bf8:	ldur	x1, [x29, #-24]
   10bfc:	ldur	x2, [x29, #-32]
   10c00:	ldur	w3, [x29, #-36]
   10c04:	blr	x8
   10c08:	stur	w0, [x29, #-4]
   10c0c:	ldur	w0, [x29, #-4]
   10c10:	ldp	x29, x30, [sp, #96]
   10c14:	add	sp, sp, #0x70
   10c18:	ret
   10c1c:	sub	sp, sp, #0x70
   10c20:	stp	x29, x30, [sp, #96]
   10c24:	add	x29, sp, #0x60
   10c28:	mov	w8, #0xffffffff            	// #-1
   10c2c:	mov	w9, #0x1                   	// #1
   10c30:	mov	x10, #0x2                   	// #2
   10c34:	movk	x10, #0x8000, lsl #48
   10c38:	stur	x0, [x29, #-8]
   10c3c:	stur	x1, [x29, #-16]
   10c40:	stur	x2, [x29, #-24]
   10c44:	ldur	x11, [x29, #-16]
   10c48:	ldr	w12, [x11, #8]
   10c4c:	cmp	w12, #0x0
   10c50:	csel	w12, w8, w9, lt  // lt = tstop
   10c54:	stur	w12, [x29, #-28]
   10c58:	ldur	x11, [x29, #-16]
   10c5c:	ldr	w12, [x11, #40]
   10c60:	cmp	w12, #0x0
   10c64:	csel	w12, w8, w9, lt  // lt = tstop
   10c68:	stur	w12, [x29, #-32]
   10c6c:	ldur	x11, [x29, #-24]
   10c70:	ldr	w12, [x11, #8]
   10c74:	cmp	w12, #0x0
   10c78:	csel	w12, w8, w9, lt  // lt = tstop
   10c7c:	stur	w12, [x29, #-36]
   10c80:	ldur	x11, [x29, #-24]
   10c84:	ldr	w12, [x11, #40]
   10c88:	cmp	w12, #0x0
   10c8c:	csel	w8, w8, w9, lt  // lt = tstop
   10c90:	stur	w8, [x29, #-40]
   10c94:	ldur	x11, [x29, #-16]
   10c98:	ldr	x11, [x11, #16]
   10c9c:	cmp	x11, x10
   10ca0:	b.eq	10cec <mpc_mul@@Base+0x4b0>  // b.none
   10ca4:	ldur	x8, [x29, #-16]
   10ca8:	ldr	x8, [x8, #48]
   10cac:	mov	x9, #0x2                   	// #2
   10cb0:	movk	x9, #0x8000, lsl #48
   10cb4:	cmp	x8, x9
   10cb8:	b.eq	10cec <mpc_mul@@Base+0x4b0>  // b.none
   10cbc:	ldur	x8, [x29, #-24]
   10cc0:	ldr	x8, [x8, #16]
   10cc4:	mov	x9, #0x2                   	// #2
   10cc8:	movk	x9, #0x8000, lsl #48
   10ccc:	cmp	x8, x9
   10cd0:	b.eq	10cec <mpc_mul@@Base+0x4b0>  // b.none
   10cd4:	ldur	x8, [x29, #-24]
   10cd8:	ldr	x8, [x8, #48]
   10cdc:	mov	x9, #0x2                   	// #2
   10ce0:	movk	x9, #0x8000, lsl #48
   10ce4:	cmp	x8, x9
   10ce8:	b.ne	10cf8 <mpc_mul@@Base+0x4bc>  // b.any
   10cec:	stur	wzr, [x29, #-44]
   10cf0:	str	wzr, [sp, #48]
   10cf4:	b	10fd8 <mpc_mul@@Base+0x79c>
   10cf8:	ldur	x8, [x29, #-16]
   10cfc:	ldr	x8, [x8, #16]
   10d00:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10d04:	cmp	x8, x9
   10d08:	b.ne	10eb0 <mpc_mul@@Base+0x674>  // b.any
   10d0c:	ldur	x8, [x29, #-24]
   10d10:	ldr	x8, [x8, #16]
   10d14:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10d18:	cmp	x8, x9
   10d1c:	b.eq	10db8 <mpc_mul@@Base+0x57c>  // b.none
   10d20:	ldur	x8, [x29, #-16]
   10d24:	ldr	x8, [x8, #48]
   10d28:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10d2c:	cmp	x8, x9
   10d30:	b.ne	10d48 <mpc_mul@@Base+0x50c>  // b.any
   10d34:	ldur	x8, [x29, #-24]
   10d38:	ldr	x8, [x8, #48]
   10d3c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10d40:	cmp	x8, x9
   10d44:	b.eq	10db8 <mpc_mul@@Base+0x57c>  // b.none
   10d48:	ldur	x8, [x29, #-16]
   10d4c:	ldr	x8, [x8, #48]
   10d50:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10d54:	cmp	x8, x9
   10d58:	b.ne	10d70 <mpc_mul@@Base+0x534>  // b.any
   10d5c:	ldur	x8, [x29, #-24]
   10d60:	ldr	x8, [x8, #48]
   10d64:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10d68:	cmp	x8, x9
   10d6c:	b.eq	10db8 <mpc_mul@@Base+0x57c>  // b.none
   10d70:	ldur	x8, [x29, #-16]
   10d74:	ldr	x8, [x8, #48]
   10d78:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10d7c:	cmp	x8, x9
   10d80:	b.eq	10d98 <mpc_mul@@Base+0x55c>  // b.none
   10d84:	ldur	x8, [x29, #-24]
   10d88:	ldr	x8, [x8, #48]
   10d8c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10d90:	cmp	x8, x9
   10d94:	b.ne	10dc4 <mpc_mul@@Base+0x588>  // b.any
   10d98:	ldur	w8, [x29, #-28]
   10d9c:	ldur	w9, [x29, #-36]
   10da0:	mul	w8, w8, w9
   10da4:	ldur	w9, [x29, #-32]
   10da8:	ldur	w10, [x29, #-40]
   10dac:	mul	w9, w9, w10
   10db0:	cmp	w8, w9
   10db4:	b.ne	10dc4 <mpc_mul@@Base+0x588>  // b.any
   10db8:	mov	w8, wzr
   10dbc:	str	w8, [sp, #28]
   10dc0:	b	10dd4 <mpc_mul@@Base+0x598>
   10dc4:	ldur	w8, [x29, #-28]
   10dc8:	ldur	w9, [x29, #-36]
   10dcc:	mul	w8, w8, w9
   10dd0:	str	w8, [sp, #28]
   10dd4:	ldr	w8, [sp, #28]
   10dd8:	stur	w8, [x29, #-44]
   10ddc:	ldur	x9, [x29, #-24]
   10de0:	ldr	x9, [x9, #48]
   10de4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   10de8:	cmp	x9, x10
   10dec:	b.eq	10e88 <mpc_mul@@Base+0x64c>  // b.none
   10df0:	ldur	x8, [x29, #-16]
   10df4:	ldr	x8, [x8, #48]
   10df8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10dfc:	cmp	x8, x9
   10e00:	b.ne	10e18 <mpc_mul@@Base+0x5dc>  // b.any
   10e04:	ldur	x8, [x29, #-24]
   10e08:	ldr	x8, [x8, #16]
   10e0c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10e10:	cmp	x8, x9
   10e14:	b.eq	10e88 <mpc_mul@@Base+0x64c>  // b.none
   10e18:	ldur	x8, [x29, #-16]
   10e1c:	ldr	x8, [x8, #48]
   10e20:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10e24:	cmp	x8, x9
   10e28:	b.ne	10e40 <mpc_mul@@Base+0x604>  // b.any
   10e2c:	ldur	x8, [x29, #-24]
   10e30:	ldr	x8, [x8, #16]
   10e34:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10e38:	cmp	x8, x9
   10e3c:	b.eq	10e88 <mpc_mul@@Base+0x64c>  // b.none
   10e40:	ldur	x8, [x29, #-16]
   10e44:	ldr	x8, [x8, #48]
   10e48:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10e4c:	cmp	x8, x9
   10e50:	b.eq	10e68 <mpc_mul@@Base+0x62c>  // b.none
   10e54:	ldur	x8, [x29, #-16]
   10e58:	ldr	x8, [x8, #48]
   10e5c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10e60:	cmp	x8, x9
   10e64:	b.ne	10e94 <mpc_mul@@Base+0x658>  // b.any
   10e68:	ldur	w8, [x29, #-28]
   10e6c:	ldur	w9, [x29, #-40]
   10e70:	mul	w8, w8, w9
   10e74:	ldur	w9, [x29, #-32]
   10e78:	ldur	w10, [x29, #-36]
   10e7c:	mul	w9, w9, w10
   10e80:	cmp	w8, w9
   10e84:	b.eq	10e94 <mpc_mul@@Base+0x658>  // b.none
   10e88:	mov	w8, wzr
   10e8c:	str	w8, [sp, #24]
   10e90:	b	10ea4 <mpc_mul@@Base+0x668>
   10e94:	ldur	w8, [x29, #-28]
   10e98:	ldur	w9, [x29, #-40]
   10e9c:	mul	w8, w8, w9
   10ea0:	str	w8, [sp, #24]
   10ea4:	ldr	w8, [sp, #24]
   10ea8:	str	w8, [sp, #48]
   10eac:	b	10fd8 <mpc_mul@@Base+0x79c>
   10eb0:	ldur	x8, [x29, #-24]
   10eb4:	ldr	x8, [x8, #48]
   10eb8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10ebc:	cmp	x8, x9
   10ec0:	b.eq	10f20 <mpc_mul@@Base+0x6e4>  // b.none
   10ec4:	ldur	x8, [x29, #-16]
   10ec8:	ldr	x8, [x8, #16]
   10ecc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10ed0:	cmp	x8, x9
   10ed4:	b.ne	10eec <mpc_mul@@Base+0x6b0>  // b.any
   10ed8:	ldur	x8, [x29, #-24]
   10edc:	ldr	x8, [x8, #16]
   10ee0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10ee4:	cmp	x8, x9
   10ee8:	b.eq	10f20 <mpc_mul@@Base+0x6e4>  // b.none
   10eec:	ldur	x8, [x29, #-24]
   10ef0:	ldr	x8, [x8, #16]
   10ef4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10ef8:	cmp	x8, x9
   10efc:	b.ne	10f2c <mpc_mul@@Base+0x6f0>  // b.any
   10f00:	ldur	w8, [x29, #-28]
   10f04:	ldur	w9, [x29, #-36]
   10f08:	mul	w8, w8, w9
   10f0c:	ldur	w9, [x29, #-32]
   10f10:	ldur	w10, [x29, #-40]
   10f14:	mul	w9, w9, w10
   10f18:	cmp	w8, w9
   10f1c:	b.ne	10f2c <mpc_mul@@Base+0x6f0>  // b.any
   10f20:	mov	w8, wzr
   10f24:	str	w8, [sp, #20]
   10f28:	b	10f3c <mpc_mul@@Base+0x700>
   10f2c:	ldur	w8, [x29, #-32]
   10f30:	ldur	w9, [x29, #-40]
   10f34:	mneg	w8, w8, w9
   10f38:	str	w8, [sp, #20]
   10f3c:	ldr	w8, [sp, #20]
   10f40:	stur	w8, [x29, #-44]
   10f44:	ldur	x9, [x29, #-24]
   10f48:	ldr	x9, [x9, #16]
   10f4c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   10f50:	cmp	x9, x10
   10f54:	b.eq	10fb4 <mpc_mul@@Base+0x778>  // b.none
   10f58:	ldur	x8, [x29, #-16]
   10f5c:	ldr	x8, [x8, #16]
   10f60:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10f64:	cmp	x8, x9
   10f68:	b.ne	10f80 <mpc_mul@@Base+0x744>  // b.any
   10f6c:	ldur	x8, [x29, #-24]
   10f70:	ldr	x8, [x8, #48]
   10f74:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10f78:	cmp	x8, x9
   10f7c:	b.eq	10fb4 <mpc_mul@@Base+0x778>  // b.none
   10f80:	ldur	x8, [x29, #-24]
   10f84:	ldr	x8, [x8, #48]
   10f88:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10f8c:	cmp	x8, x9
   10f90:	b.ne	10fc0 <mpc_mul@@Base+0x784>  // b.any
   10f94:	ldur	w8, [x29, #-28]
   10f98:	ldur	w9, [x29, #-40]
   10f9c:	mul	w8, w8, w9
   10fa0:	ldur	w9, [x29, #-32]
   10fa4:	ldur	w10, [x29, #-36]
   10fa8:	mul	w9, w9, w10
   10fac:	cmp	w8, w9
   10fb0:	b.eq	10fc0 <mpc_mul@@Base+0x784>  // b.none
   10fb4:	mov	w8, wzr
   10fb8:	str	w8, [sp, #16]
   10fbc:	b	10fd0 <mpc_mul@@Base+0x794>
   10fc0:	ldur	w8, [x29, #-32]
   10fc4:	ldur	w9, [x29, #-36]
   10fc8:	mul	w8, w8, w9
   10fcc:	str	w8, [sp, #16]
   10fd0:	ldr	w8, [sp, #16]
   10fd4:	str	w8, [sp, #48]
   10fd8:	ldur	w8, [x29, #-44]
   10fdc:	cbnz	w8, 11224 <mpc_mul@@Base+0x9e8>
   10fe0:	ldr	w8, [sp, #48]
   10fe4:	cbnz	w8, 11224 <mpc_mul@@Base+0x9e8>
   10fe8:	ldur	x8, [x29, #-16]
   10fec:	ldr	x8, [x8, #16]
   10ff0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10ff4:	cmp	x8, x9
   10ff8:	b.eq	11014 <mpc_mul@@Base+0x7d8>  // b.none
   10ffc:	ldur	x8, [x29, #-16]
   11000:	ldr	x8, [x8, #16]
   11004:	mov	x9, #0x2                   	// #2
   11008:	movk	x9, #0x8000, lsl #48
   1100c:	cmp	x8, x9
   11010:	b.ne	11020 <mpc_mul@@Base+0x7e4>  // b.any
   11014:	mov	w8, wzr
   11018:	str	w8, [sp, #12]
   1101c:	b	11040 <mpc_mul@@Base+0x804>
   11020:	ldur	x8, [x29, #-16]
   11024:	ldr	x8, [x8, #16]
   11028:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1102c:	mov	w10, #0x1                   	// #1
   11030:	mov	w11, wzr
   11034:	cmp	x8, x9
   11038:	csel	w10, w10, w11, eq  // eq = none
   1103c:	str	w10, [sp, #12]
   11040:	ldr	w8, [sp, #12]
   11044:	str	w8, [sp, #44]
   11048:	ldur	x9, [x29, #-16]
   1104c:	ldr	x9, [x9, #48]
   11050:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   11054:	cmp	x9, x10
   11058:	b.eq	11074 <mpc_mul@@Base+0x838>  // b.none
   1105c:	ldur	x8, [x29, #-16]
   11060:	ldr	x8, [x8, #48]
   11064:	mov	x9, #0x2                   	// #2
   11068:	movk	x9, #0x8000, lsl #48
   1106c:	cmp	x8, x9
   11070:	b.ne	11080 <mpc_mul@@Base+0x844>  // b.any
   11074:	mov	w8, wzr
   11078:	str	w8, [sp, #8]
   1107c:	b	110a0 <mpc_mul@@Base+0x864>
   11080:	ldur	x8, [x29, #-16]
   11084:	ldr	x8, [x8, #48]
   11088:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1108c:	mov	w10, #0x1                   	// #1
   11090:	mov	w11, wzr
   11094:	cmp	x8, x9
   11098:	csel	w10, w10, w11, eq  // eq = none
   1109c:	str	w10, [sp, #8]
   110a0:	ldr	w8, [sp, #8]
   110a4:	str	w8, [sp, #40]
   110a8:	ldur	x9, [x29, #-24]
   110ac:	ldr	x9, [x9, #16]
   110b0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   110b4:	mov	w8, #0x1                   	// #1
   110b8:	cmp	x9, x10
   110bc:	str	w8, [sp, #4]
   110c0:	b.eq	110e0 <mpc_mul@@Base+0x8a4>  // b.none
   110c4:	ldur	x8, [x29, #-24]
   110c8:	ldr	x8, [x8, #16]
   110cc:	mov	x9, #0x2                   	// #2
   110d0:	movk	x9, #0x8000, lsl #48
   110d4:	cmp	x8, x9
   110d8:	cset	w10, eq  // eq = none
   110dc:	str	w10, [sp, #4]
   110e0:	ldr	w8, [sp, #4]
   110e4:	mov	w9, #0x1                   	// #1
   110e8:	mov	w10, wzr
   110ec:	tst	w8, #0x1
   110f0:	csel	w8, w10, w9, ne  // ne = any
   110f4:	str	w8, [sp, #36]
   110f8:	ldur	x11, [x29, #-24]
   110fc:	ldr	x11, [x11, #48]
   11100:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   11104:	mov	w8, #0x1                   	// #1
   11108:	cmp	x11, x12
   1110c:	str	w8, [sp]
   11110:	b.eq	11130 <mpc_mul@@Base+0x8f4>  // b.none
   11114:	ldur	x8, [x29, #-24]
   11118:	ldr	x8, [x8, #48]
   1111c:	mov	x9, #0x2                   	// #2
   11120:	movk	x9, #0x8000, lsl #48
   11124:	cmp	x8, x9
   11128:	cset	w10, eq  // eq = none
   1112c:	str	w10, [sp]
   11130:	ldr	w8, [sp]
   11134:	mov	w9, #0x1                   	// #1
   11138:	mov	w10, wzr
   1113c:	tst	w8, #0x1
   11140:	csel	w8, w10, w9, ne  // ne = any
   11144:	str	w8, [sp, #32]
   11148:	ldur	x11, [x29, #-24]
   1114c:	ldr	x11, [x11, #16]
   11150:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   11154:	cmp	x11, x12
   11158:	b.eq	11170 <mpc_mul@@Base+0x934>  // b.none
   1115c:	ldur	x8, [x29, #-24]
   11160:	ldr	x8, [x8, #48]
   11164:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   11168:	cmp	x8, x9
   1116c:	b.ne	111a4 <mpc_mul@@Base+0x968>  // b.any
   11170:	ldur	x8, [x29, #-24]
   11174:	ldr	x8, [x8, #16]
   11178:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1117c:	mov	w10, #0x1                   	// #1
   11180:	mov	w11, wzr
   11184:	cmp	x8, x9
   11188:	csel	w12, w10, w11, eq  // eq = none
   1118c:	str	w12, [sp, #36]
   11190:	ldur	x8, [x29, #-24]
   11194:	ldr	x8, [x8, #48]
   11198:	cmp	x8, x9
   1119c:	csel	w10, w10, w11, eq  // eq = none
   111a0:	str	w10, [sp, #32]
   111a4:	ldur	w8, [x29, #-28]
   111a8:	ldr	w9, [sp, #44]
   111ac:	mul	w8, w8, w9
   111b0:	ldur	w9, [x29, #-36]
   111b4:	mul	w8, w8, w9
   111b8:	ldr	w9, [sp, #36]
   111bc:	mul	w8, w8, w9
   111c0:	ldur	w9, [x29, #-32]
   111c4:	ldr	w10, [sp, #40]
   111c8:	mul	w9, w9, w10
   111cc:	ldur	w10, [x29, #-40]
   111d0:	mul	w9, w9, w10
   111d4:	ldr	w10, [sp, #32]
   111d8:	mul	w9, w9, w10
   111dc:	subs	w8, w8, w9
   111e0:	stur	w8, [x29, #-44]
   111e4:	ldur	w8, [x29, #-28]
   111e8:	ldr	w9, [sp, #44]
   111ec:	mul	w8, w8, w9
   111f0:	ldur	w9, [x29, #-40]
   111f4:	mul	w8, w8, w9
   111f8:	ldr	w9, [sp, #32]
   111fc:	mul	w8, w8, w9
   11200:	ldur	w9, [x29, #-32]
   11204:	ldr	w10, [sp, #40]
   11208:	mul	w9, w9, w10
   1120c:	ldur	w10, [x29, #-36]
   11210:	mul	w9, w9, w10
   11214:	ldr	w10, [sp, #36]
   11218:	mul	w9, w9, w10
   1121c:	add	w8, w8, w9
   11220:	str	w8, [sp, #48]
   11224:	ldur	w8, [x29, #-44]
   11228:	cbnz	w8, 11238 <mpc_mul@@Base+0x9fc>
   1122c:	ldur	x0, [x29, #-8]
   11230:	bl	4b20 <mpfr_set_nan@plt>
   11234:	b	11244 <mpc_mul@@Base+0xa08>
   11238:	ldur	x0, [x29, #-8]
   1123c:	ldur	w1, [x29, #-44]
   11240:	bl	5220 <mpfr_set_inf@plt>
   11244:	ldr	w8, [sp, #48]
   11248:	cbnz	w8, 1125c <mpc_mul@@Base+0xa20>
   1124c:	ldur	x8, [x29, #-8]
   11250:	add	x0, x8, #0x20
   11254:	bl	4b20 <mpfr_set_nan@plt>
   11258:	b	1126c <mpc_mul@@Base+0xa30>
   1125c:	ldur	x8, [x29, #-8]
   11260:	add	x0, x8, #0x20
   11264:	ldr	w1, [sp, #48]
   11268:	bl	5220 <mpfr_set_inf@plt>
   1126c:	mov	w8, wzr
   11270:	mov	w0, w8
   11274:	ldp	x29, x30, [sp, #96]
   11278:	add	sp, sp, #0x70
   1127c:	ret
   11280:	sub	sp, sp, #0x80
   11284:	stp	x29, x30, [sp, #112]
   11288:	add	x29, sp, #0x70
   1128c:	mov	w8, #0xffffffff            	// #-1
   11290:	mov	w9, #0x1                   	// #1
   11294:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   11298:	stur	x0, [x29, #-8]
   1129c:	stur	x1, [x29, #-16]
   112a0:	stur	x2, [x29, #-24]
   112a4:	stur	w3, [x29, #-28]
   112a8:	ldur	x11, [x29, #-16]
   112ac:	ldr	w12, [x11, #8]
   112b0:	cmp	w12, #0x0
   112b4:	csel	w12, w8, w9, lt  // lt = tstop
   112b8:	stur	w12, [x29, #-32]
   112bc:	ldur	x11, [x29, #-16]
   112c0:	ldr	w12, [x11, #40]
   112c4:	cmp	w12, #0x0
   112c8:	csel	w12, w8, w9, lt  // lt = tstop
   112cc:	stur	w12, [x29, #-36]
   112d0:	ldur	x11, [x29, #-24]
   112d4:	ldr	w12, [x11, #8]
   112d8:	cmp	w12, #0x0
   112dc:	csel	w12, w8, w9, lt  // lt = tstop
   112e0:	stur	w12, [x29, #-40]
   112e4:	ldur	x11, [x29, #-24]
   112e8:	ldr	w12, [x11, #40]
   112ec:	cmp	w12, #0x0
   112f0:	csel	w8, w8, w9, lt  // lt = tstop
   112f4:	stur	w8, [x29, #-44]
   112f8:	ldur	x0, [x29, #-8]
   112fc:	ldur	x1, [x29, #-16]
   11300:	ldur	x2, [x29, #-24]
   11304:	ldur	w3, [x29, #-28]
   11308:	str	x10, [sp, #56]
   1130c:	bl	5260 <mpc_mul_fr@plt>
   11310:	stur	w0, [x29, #-48]
   11314:	ldur	x10, [x29, #-8]
   11318:	ldr	x10, [x10, #16]
   1131c:	ldr	x11, [sp, #56]
   11320:	cmp	x10, x11
   11324:	b.ne	113ac <mpc_mul@@Base+0xb70>  // b.any
   11328:	ldur	x0, [x29, #-8]
   1132c:	ldur	x1, [x29, #-8]
   11330:	ldur	w8, [x29, #-28]
   11334:	and	w8, w8, #0xf
   11338:	mov	w9, #0x1                   	// #1
   1133c:	cmp	w8, #0x3
   11340:	str	x0, [sp, #48]
   11344:	str	x1, [sp, #40]
   11348:	str	w9, [sp, #36]
   1134c:	b.eq	11384 <mpc_mul@@Base+0xb48>  // b.none
   11350:	ldur	w8, [x29, #-32]
   11354:	ldur	w9, [x29, #-40]
   11358:	mov	w10, #0x0                   	// #0
   1135c:	cmp	w8, w9
   11360:	str	w10, [sp, #32]
   11364:	b.eq	1137c <mpc_mul@@Base+0xb40>  // b.none
   11368:	ldur	w8, [x29, #-36]
   1136c:	ldur	w9, [x29, #-44]
   11370:	cmp	w8, w9
   11374:	cset	w8, eq  // eq = none
   11378:	str	w8, [sp, #32]
   1137c:	ldr	w8, [sp, #32]
   11380:	str	w8, [sp, #36]
   11384:	ldr	w8, [sp, #36]
   11388:	mov	w9, #0x1                   	// #1
   1138c:	mov	w10, #0xffffffff            	// #-1
   11390:	tst	w8, #0x1
   11394:	csel	w3, w10, w9, ne  // ne = any
   11398:	ldr	x0, [sp, #48]
   1139c:	ldr	x1, [sp, #40]
   113a0:	mov	w8, wzr
   113a4:	mov	w2, w8
   113a8:	bl	52d0 <mpfr_set4@plt>
   113ac:	ldur	x8, [x29, #-8]
   113b0:	ldr	x8, [x8, #48]
   113b4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   113b8:	cmp	x8, x9
   113bc:	b.ne	1144c <mpc_mul@@Base+0xc10>  // b.any
   113c0:	ldur	x8, [x29, #-8]
   113c4:	add	x0, x8, #0x20
   113c8:	ldur	x8, [x29, #-8]
   113cc:	add	x1, x8, #0x20
   113d0:	ldur	w9, [x29, #-28]
   113d4:	asr	w9, w9, #4
   113d8:	mov	w10, #0x1                   	// #1
   113dc:	cmp	w9, #0x3
   113e0:	str	x0, [sp, #24]
   113e4:	str	x1, [sp, #16]
   113e8:	str	w10, [sp, #12]
   113ec:	b.eq	11424 <mpc_mul@@Base+0xbe8>  // b.none
   113f0:	ldur	w8, [x29, #-32]
   113f4:	ldur	w9, [x29, #-44]
   113f8:	mov	w10, #0x0                   	// #0
   113fc:	cmp	w8, w9
   11400:	str	w10, [sp, #8]
   11404:	b.eq	1141c <mpc_mul@@Base+0xbe0>  // b.none
   11408:	ldur	w8, [x29, #-36]
   1140c:	ldur	w9, [x29, #-40]
   11410:	cmp	w8, w9
   11414:	cset	w8, ne  // ne = any
   11418:	str	w8, [sp, #8]
   1141c:	ldr	w8, [sp, #8]
   11420:	str	w8, [sp, #12]
   11424:	ldr	w8, [sp, #12]
   11428:	mov	w9, #0x1                   	// #1
   1142c:	mov	w10, #0xffffffff            	// #-1
   11430:	tst	w8, #0x1
   11434:	csel	w3, w10, w9, ne  // ne = any
   11438:	ldr	x0, [sp, #24]
   1143c:	ldr	x1, [sp, #16]
   11440:	mov	w8, wzr
   11444:	mov	w2, w8
   11448:	bl	52d0 <mpfr_set4@plt>
   1144c:	ldur	w0, [x29, #-48]
   11450:	ldp	x29, x30, [sp, #112]
   11454:	add	sp, sp, #0x80
   11458:	ret
   1145c:	sub	sp, sp, #0xd0
   11460:	stp	x29, x30, [sp, #192]
   11464:	add	x29, sp, #0xc0
   11468:	stur	x0, [x29, #-8]
   1146c:	stur	x1, [x29, #-16]
   11470:	stur	x2, [x29, #-24]
   11474:	stur	w3, [x29, #-28]
   11478:	ldur	x8, [x29, #-8]
   1147c:	ldur	x9, [x29, #-16]
   11480:	mov	w10, #0x1                   	// #1
   11484:	cmp	x8, x9
   11488:	str	w10, [sp, #76]
   1148c:	b.eq	114a4 <mpc_mul@@Base+0xc68>  // b.none
   11490:	ldur	x8, [x29, #-8]
   11494:	ldur	x9, [x29, #-24]
   11498:	cmp	x8, x9
   1149c:	cset	w10, eq  // eq = none
   114a0:	str	w10, [sp, #76]
   114a4:	ldr	w8, [sp, #76]
   114a8:	and	w8, w8, #0x1
   114ac:	stur	w8, [x29, #-44]
   114b0:	ldur	w8, [x29, #-44]
   114b4:	cbz	w8, 114d4 <mpc_mul@@Base+0xc98>
   114b8:	ldur	x8, [x29, #-8]
   114bc:	ldr	x1, [x8]
   114c0:	ldur	x8, [x29, #-8]
   114c4:	ldr	x2, [x8, #32]
   114c8:	add	x0, sp, #0x50
   114cc:	bl	54c0 <mpc_init3@plt>
   114d0:	b	114e4 <mpc_mul@@Base+0xca8>
   114d4:	ldur	x1, [x29, #-8]
   114d8:	add	x0, sp, #0x50
   114dc:	mov	x2, #0x40                  	// #64
   114e0:	bl	4a70 <memcpy@plt>
   114e4:	ldur	x8, [x29, #-24]
   114e8:	ldr	w9, [x8, #8]
   114ec:	mov	w10, #0x1                   	// #1
   114f0:	mov	w11, #0xffffffff            	// #-1
   114f4:	cmp	w9, #0x0
   114f8:	csel	w9, w11, w10, lt  // lt = tstop
   114fc:	ldur	x8, [x29, #-16]
   11500:	ldr	w12, [x8, #40]
   11504:	cmp	w12, #0x0
   11508:	csel	w10, w11, w10, lt  // lt = tstop
   1150c:	mov	w11, #0x0                   	// #0
   11510:	cmp	w9, w10
   11514:	str	w11, [sp, #72]
   11518:	b.eq	11550 <mpc_mul@@Base+0xd14>  // b.none
   1151c:	ldur	x8, [x29, #-24]
   11520:	ldr	w9, [x8, #40]
   11524:	mov	w10, #0x1                   	// #1
   11528:	mov	w11, #0xffffffff            	// #-1
   1152c:	cmp	w9, #0x0
   11530:	csel	w9, w11, w10, lt  // lt = tstop
   11534:	ldur	x8, [x29, #-16]
   11538:	ldr	w12, [x8, #8]
   1153c:	cmp	w12, #0x0
   11540:	csel	w10, w11, w10, lt  // lt = tstop
   11544:	cmp	w9, w10
   11548:	cset	w9, ne  // ne = any
   1154c:	str	w9, [sp, #72]
   11550:	ldr	w8, [sp, #72]
   11554:	and	w8, w8, #0x1
   11558:	stur	w8, [x29, #-32]
   1155c:	ldur	x9, [x29, #-16]
   11560:	add	x1, x9, #0x20
   11564:	ldur	x9, [x29, #-24]
   11568:	add	x2, x9, #0x20
   1156c:	ldur	w8, [x29, #-28]
   11570:	and	w8, w8, #0xf
   11574:	cmp	w8, #0x2
   11578:	str	x1, [sp, #64]
   1157c:	str	x2, [sp, #56]
   11580:	b.ne	11590 <mpc_mul@@Base+0xd54>  // b.any
   11584:	mov	w8, #0x3                   	// #3
   11588:	str	w8, [sp, #52]
   1158c:	b	115c0 <mpc_mul@@Base+0xd84>
   11590:	ldur	w8, [x29, #-28]
   11594:	and	w8, w8, #0xf
   11598:	cmp	w8, #0x3
   1159c:	b.ne	115ac <mpc_mul@@Base+0xd70>  // b.any
   115a0:	mov	w8, #0x2                   	// #2
   115a4:	str	w8, [sp, #48]
   115a8:	b	115b8 <mpc_mul@@Base+0xd7c>
   115ac:	ldur	w8, [x29, #-28]
   115b0:	and	w8, w8, #0xf
   115b4:	str	w8, [sp, #48]
   115b8:	ldr	w8, [sp, #48]
   115bc:	str	w8, [sp, #52]
   115c0:	ldr	w8, [sp, #52]
   115c4:	add	x9, sp, #0x50
   115c8:	mov	x0, x9
   115cc:	ldr	x1, [sp, #64]
   115d0:	ldr	x2, [sp, #56]
   115d4:	mov	w3, w8
   115d8:	str	x9, [sp, #40]
   115dc:	bl	4c50 <mpfr_mul@plt>
   115e0:	mov	w8, wzr
   115e4:	subs	w10, w8, w0
   115e8:	stur	w10, [x29, #-36]
   115ec:	ldr	x0, [sp, #40]
   115f0:	ldr	x1, [sp, #40]
   115f4:	mov	w2, w8
   115f8:	str	w8, [sp, #36]
   115fc:	bl	4c60 <mpfr_neg@plt>
   11600:	ldr	x9, [sp, #40]
   11604:	add	x11, x9, #0x20
   11608:	ldur	x1, [x29, #-16]
   1160c:	ldur	x12, [x29, #-24]
   11610:	add	x2, x12, #0x20
   11614:	ldur	w8, [x29, #-28]
   11618:	asr	w3, w8, #4
   1161c:	mov	x0, x11
   11620:	bl	4c50 <mpfr_mul@plt>
   11624:	stur	w0, [x29, #-40]
   11628:	ldur	x0, [x29, #-8]
   1162c:	ldr	x1, [sp, #40]
   11630:	ldr	w2, [sp, #36]
   11634:	bl	5680 <mpc_set@plt>
   11638:	ldur	x9, [x29, #-8]
   1163c:	ldr	x9, [x9, #48]
   11640:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   11644:	cmp	x9, x11
   11648:	b.ne	116b4 <mpc_mul@@Base+0xe78>  // b.any
   1164c:	ldur	x8, [x29, #-8]
   11650:	add	x0, x8, #0x20
   11654:	ldur	x8, [x29, #-8]
   11658:	add	x1, x8, #0x20
   1165c:	ldur	w9, [x29, #-28]
   11660:	asr	w9, w9, #4
   11664:	mov	w10, #0x1                   	// #1
   11668:	cmp	w9, #0x3
   1166c:	str	x0, [sp, #24]
   11670:	str	x1, [sp, #16]
   11674:	str	w10, [sp, #12]
   11678:	b.eq	1168c <mpc_mul@@Base+0xe50>  // b.none
   1167c:	ldur	w8, [x29, #-32]
   11680:	cmp	w8, #0x0
   11684:	cset	w8, ne  // ne = any
   11688:	str	w8, [sp, #12]
   1168c:	ldr	w8, [sp, #12]
   11690:	mov	w9, #0x1                   	// #1
   11694:	mov	w10, #0xffffffff            	// #-1
   11698:	tst	w8, #0x1
   1169c:	csel	w3, w10, w9, ne  // ne = any
   116a0:	ldr	x0, [sp, #24]
   116a4:	ldr	x1, [sp, #16]
   116a8:	mov	w8, wzr
   116ac:	mov	w2, w8
   116b0:	bl	52d0 <mpfr_set4@plt>
   116b4:	ldur	w8, [x29, #-44]
   116b8:	cbz	w8, 116c4 <mpc_mul@@Base+0xe88>
   116bc:	add	x0, sp, #0x50
   116c0:	bl	4af0 <mpc_clear@plt>
   116c4:	ldur	w8, [x29, #-36]
   116c8:	cmp	w8, #0x0
   116cc:	cset	w8, ge  // ge = tcont
   116d0:	tbnz	w8, #0, 116e0 <mpc_mul@@Base+0xea4>
   116d4:	mov	w8, #0x2                   	// #2
   116d8:	str	w8, [sp, #8]
   116dc:	b	116f8 <mpc_mul@@Base+0xebc>
   116e0:	ldur	w8, [x29, #-36]
   116e4:	mov	w9, wzr
   116e8:	mov	w10, #0x1                   	// #1
   116ec:	cmp	w8, #0x0
   116f0:	csel	w8, w9, w10, eq  // eq = none
   116f4:	str	w8, [sp, #8]
   116f8:	ldr	w8, [sp, #8]
   116fc:	ldur	w9, [x29, #-40]
   11700:	cmp	w9, #0x0
   11704:	cset	w9, ge  // ge = tcont
   11708:	str	w8, [sp, #4]
   1170c:	tbnz	w9, #0, 1171c <mpc_mul@@Base+0xee0>
   11710:	mov	w8, #0x2                   	// #2
   11714:	str	w8, [sp]
   11718:	b	11734 <mpc_mul@@Base+0xef8>
   1171c:	ldur	w8, [x29, #-40]
   11720:	mov	w9, wzr
   11724:	mov	w10, #0x1                   	// #1
   11728:	cmp	w8, #0x0
   1172c:	csel	w8, w9, w10, eq  // eq = none
   11730:	str	w8, [sp]
   11734:	ldr	w8, [sp]
   11738:	ldr	w9, [sp, #4]
   1173c:	orr	w0, w9, w8, lsl #2
   11740:	ldp	x29, x30, [sp, #192]
   11744:	add	sp, sp, #0xd0
   11748:	ret

000000000001174c <mpc_mul_fr@@Base>:
   1174c:	sub	sp, sp, #0x80
   11750:	stp	x29, x30, [sp, #112]
   11754:	add	x29, sp, #0x70
   11758:	stur	x0, [x29, #-8]
   1175c:	stur	x1, [x29, #-16]
   11760:	stur	x2, [x29, #-24]
   11764:	stur	w3, [x29, #-28]
   11768:	ldur	x8, [x29, #-24]
   1176c:	ldur	x9, [x29, #-8]
   11770:	cmp	x8, x9
   11774:	b.ne	1178c <mpc_mul_fr@@Base+0x40>  // b.any
   11778:	ldur	x8, [x29, #-8]
   1177c:	ldr	x1, [x8]
   11780:	add	x0, sp, #0x20
   11784:	bl	5530 <mpfr_init2@plt>
   11788:	b	117a0 <mpc_mul_fr@@Base+0x54>
   1178c:	ldur	x8, [x29, #-8]
   11790:	ldr	q0, [x8]
   11794:	str	q0, [sp, #32]
   11798:	ldr	q0, [x8, #16]
   1179c:	str	q0, [sp, #48]
   117a0:	ldur	x1, [x29, #-16]
   117a4:	ldur	x2, [x29, #-24]
   117a8:	ldur	w8, [x29, #-28]
   117ac:	and	w3, w8, #0xf
   117b0:	add	x9, sp, #0x20
   117b4:	mov	x0, x9
   117b8:	str	x9, [sp, #24]
   117bc:	bl	4c50 <mpfr_mul@plt>
   117c0:	stur	w0, [x29, #-32]
   117c4:	ldur	x9, [x29, #-8]
   117c8:	add	x0, x9, #0x20
   117cc:	ldur	x9, [x29, #-16]
   117d0:	add	x1, x9, #0x20
   117d4:	ldur	x2, [x29, #-24]
   117d8:	ldur	w8, [x29, #-28]
   117dc:	asr	w3, w8, #4
   117e0:	bl	4c50 <mpfr_mul@plt>
   117e4:	stur	w0, [x29, #-36]
   117e8:	ldur	x0, [x29, #-8]
   117ec:	ldr	w3, [sp, #40]
   117f0:	ldr	x1, [sp, #24]
   117f4:	mov	w8, wzr
   117f8:	mov	w2, w8
   117fc:	bl	52d0 <mpfr_set4@plt>
   11800:	ldur	x9, [x29, #-24]
   11804:	ldur	x10, [x29, #-8]
   11808:	cmp	x9, x10
   1180c:	b.ne	11818 <mpc_mul_fr@@Base+0xcc>  // b.any
   11810:	add	x0, sp, #0x20
   11814:	bl	4e30 <mpfr_clear@plt>
   11818:	ldur	w8, [x29, #-32]
   1181c:	cmp	w8, #0x0
   11820:	cset	w8, ge  // ge = tcont
   11824:	tbnz	w8, #0, 11834 <mpc_mul_fr@@Base+0xe8>
   11828:	mov	w8, #0x2                   	// #2
   1182c:	str	w8, [sp, #20]
   11830:	b	1184c <mpc_mul_fr@@Base+0x100>
   11834:	ldur	w8, [x29, #-32]
   11838:	mov	w9, wzr
   1183c:	mov	w10, #0x1                   	// #1
   11840:	cmp	w8, #0x0
   11844:	csel	w8, w9, w10, eq  // eq = none
   11848:	str	w8, [sp, #20]
   1184c:	ldr	w8, [sp, #20]
   11850:	ldur	w9, [x29, #-36]
   11854:	cmp	w9, #0x0
   11858:	cset	w9, ge  // ge = tcont
   1185c:	str	w8, [sp, #16]
   11860:	tbnz	w9, #0, 11870 <mpc_mul_fr@@Base+0x124>
   11864:	mov	w8, #0x2                   	// #2
   11868:	str	w8, [sp, #12]
   1186c:	b	11888 <mpc_mul_fr@@Base+0x13c>
   11870:	ldur	w8, [x29, #-36]
   11874:	mov	w9, wzr
   11878:	mov	w10, #0x1                   	// #1
   1187c:	cmp	w8, #0x0
   11880:	csel	w8, w9, w10, eq  // eq = none
   11884:	str	w8, [sp, #12]
   11888:	ldr	w8, [sp, #12]
   1188c:	ldr	w9, [sp, #16]
   11890:	orr	w0, w9, w8, lsl #2
   11894:	ldp	x29, x30, [sp, #112]
   11898:	add	sp, sp, #0x80
   1189c:	ret

00000000000118a0 <mpc_mul_i@@Base>:
   118a0:	sub	sp, sp, #0x60
   118a4:	stp	x29, x30, [sp, #80]
   118a8:	add	x29, sp, #0x50
   118ac:	stur	x0, [x29, #-8]
   118b0:	stur	x1, [x29, #-16]
   118b4:	stur	w2, [x29, #-20]
   118b8:	stur	w3, [x29, #-24]
   118bc:	ldur	x8, [x29, #-16]
   118c0:	ldr	x8, [x8]
   118c4:	ldur	x9, [x29, #-8]
   118c8:	ldr	x9, [x9, #32]
   118cc:	cmp	x8, x9
   118d0:	b.ne	119a4 <mpc_mul_i@@Base+0x104>  // b.any
   118d4:	ldur	x8, [x29, #-16]
   118d8:	ldr	x8, [x8, #32]
   118dc:	ldur	x9, [x29, #-8]
   118e0:	ldr	x9, [x9]
   118e4:	cmp	x8, x9
   118e8:	b.ne	119a4 <mpc_mul_i@@Base+0x104>  // b.any
   118ec:	ldur	x8, [x29, #-8]
   118f0:	ldur	x9, [x29, #-16]
   118f4:	cmp	x8, x9
   118f8:	b.ne	11910 <mpc_mul_i@@Base+0x70>  // b.any
   118fc:	ldur	x0, [x29, #-8]
   11900:	ldur	x8, [x29, #-8]
   11904:	add	x1, x8, #0x20
   11908:	bl	5190 <mpfr_swap@plt>
   1190c:	b	11954 <mpc_mul_i@@Base+0xb4>
   11910:	ldur	x0, [x29, #-8]
   11914:	ldur	x8, [x29, #-16]
   11918:	add	x1, x8, #0x20
   1191c:	ldur	x8, [x29, #-16]
   11920:	ldr	w3, [x8, #40]
   11924:	mov	w9, wzr
   11928:	mov	w2, w9
   1192c:	str	w9, [sp, #12]
   11930:	bl	52d0 <mpfr_set4@plt>
   11934:	ldur	x8, [x29, #-8]
   11938:	add	x8, x8, #0x20
   1193c:	ldur	x1, [x29, #-16]
   11940:	ldur	x10, [x29, #-16]
   11944:	ldr	w3, [x10, #8]
   11948:	mov	x0, x8
   1194c:	ldr	w2, [sp, #12]
   11950:	bl	52d0 <mpfr_set4@plt>
   11954:	ldur	w8, [x29, #-20]
   11958:	cmp	w8, #0x0
   1195c:	cset	w8, lt  // lt = tstop
   11960:	tbnz	w8, #0, 1197c <mpc_mul_i@@Base+0xdc>
   11964:	ldur	x0, [x29, #-8]
   11968:	ldur	x1, [x29, #-8]
   1196c:	mov	w8, wzr
   11970:	mov	w2, w8
   11974:	bl	4c60 <mpfr_neg@plt>
   11978:	b	11998 <mpc_mul_i@@Base+0xf8>
   1197c:	ldur	x8, [x29, #-8]
   11980:	add	x0, x8, #0x20
   11984:	ldur	x8, [x29, #-8]
   11988:	add	x1, x8, #0x20
   1198c:	mov	w9, wzr
   11990:	mov	w2, w9
   11994:	bl	4c60 <mpfr_neg@plt>
   11998:	stur	wzr, [x29, #-28]
   1199c:	stur	wzr, [x29, #-32]
   119a0:	b	11b0c <mpc_mul_i@@Base+0x26c>
   119a4:	ldur	x8, [x29, #-8]
   119a8:	ldur	x9, [x29, #-16]
   119ac:	cmp	x8, x9
   119b0:	b.ne	11a78 <mpc_mul_i@@Base+0x1d8>  // b.any
   119b4:	ldur	x8, [x29, #-8]
   119b8:	ldr	x1, [x8]
   119bc:	add	x0, sp, #0x10
   119c0:	bl	5530 <mpfr_init2@plt>
   119c4:	ldur	w9, [x29, #-20]
   119c8:	cmp	w9, #0x0
   119cc:	cset	w9, lt  // lt = tstop
   119d0:	tbnz	w9, #0, 11a18 <mpc_mul_i@@Base+0x178>
   119d4:	ldur	x8, [x29, #-16]
   119d8:	add	x1, x8, #0x20
   119dc:	ldur	w9, [x29, #-24]
   119e0:	and	w2, w9, #0xf
   119e4:	add	x0, sp, #0x10
   119e8:	bl	4c60 <mpfr_neg@plt>
   119ec:	stur	w0, [x29, #-28]
   119f0:	ldur	x8, [x29, #-8]
   119f4:	add	x0, x8, #0x20
   119f8:	ldur	x1, [x29, #-16]
   119fc:	ldur	w9, [x29, #-24]
   11a00:	asr	w2, w9, #4
   11a04:	ldur	x8, [x29, #-16]
   11a08:	ldr	w3, [x8, #8]
   11a0c:	bl	52d0 <mpfr_set4@plt>
   11a10:	stur	w0, [x29, #-32]
   11a14:	b	11a58 <mpc_mul_i@@Base+0x1b8>
   11a18:	ldur	x8, [x29, #-16]
   11a1c:	add	x1, x8, #0x20
   11a20:	ldur	w9, [x29, #-24]
   11a24:	and	w2, w9, #0xf
   11a28:	ldur	x8, [x29, #-16]
   11a2c:	ldr	w3, [x8, #40]
   11a30:	add	x0, sp, #0x10
   11a34:	bl	52d0 <mpfr_set4@plt>
   11a38:	stur	w0, [x29, #-28]
   11a3c:	ldur	x8, [x29, #-8]
   11a40:	add	x0, x8, #0x20
   11a44:	ldur	x1, [x29, #-16]
   11a48:	ldur	w9, [x29, #-24]
   11a4c:	asr	w2, w9, #4
   11a50:	bl	4c60 <mpfr_neg@plt>
   11a54:	stur	w0, [x29, #-32]
   11a58:	ldur	x0, [x29, #-8]
   11a5c:	bl	4e30 <mpfr_clear@plt>
   11a60:	ldur	x8, [x29, #-8]
   11a64:	ldr	q0, [sp, #16]
   11a68:	str	q0, [x8]
   11a6c:	ldr	q0, [sp, #32]
   11a70:	str	q0, [x8, #16]
   11a74:	b	11b0c <mpc_mul_i@@Base+0x26c>
   11a78:	ldur	w8, [x29, #-20]
   11a7c:	cmp	w8, #0x0
   11a80:	cset	w8, lt  // lt = tstop
   11a84:	tbnz	w8, #0, 11acc <mpc_mul_i@@Base+0x22c>
   11a88:	ldur	x0, [x29, #-8]
   11a8c:	ldur	x8, [x29, #-16]
   11a90:	add	x1, x8, #0x20
   11a94:	ldur	w9, [x29, #-24]
   11a98:	and	w2, w9, #0xf
   11a9c:	bl	4c60 <mpfr_neg@plt>
   11aa0:	stur	w0, [x29, #-28]
   11aa4:	ldur	x8, [x29, #-8]
   11aa8:	add	x0, x8, #0x20
   11aac:	ldur	x1, [x29, #-16]
   11ab0:	ldur	w9, [x29, #-24]
   11ab4:	asr	w2, w9, #4
   11ab8:	ldur	x8, [x29, #-16]
   11abc:	ldr	w3, [x8, #8]
   11ac0:	bl	52d0 <mpfr_set4@plt>
   11ac4:	stur	w0, [x29, #-32]
   11ac8:	b	11b0c <mpc_mul_i@@Base+0x26c>
   11acc:	ldur	x0, [x29, #-8]
   11ad0:	ldur	x8, [x29, #-16]
   11ad4:	add	x1, x8, #0x20
   11ad8:	ldur	w9, [x29, #-24]
   11adc:	and	w2, w9, #0xf
   11ae0:	ldur	x8, [x29, #-16]
   11ae4:	ldr	w3, [x8, #40]
   11ae8:	bl	52d0 <mpfr_set4@plt>
   11aec:	stur	w0, [x29, #-28]
   11af0:	ldur	x8, [x29, #-8]
   11af4:	add	x0, x8, #0x20
   11af8:	ldur	x1, [x29, #-16]
   11afc:	ldur	w9, [x29, #-24]
   11b00:	asr	w2, w9, #4
   11b04:	bl	4c60 <mpfr_neg@plt>
   11b08:	stur	w0, [x29, #-32]
   11b0c:	ldur	w8, [x29, #-28]
   11b10:	cmp	w8, #0x0
   11b14:	cset	w8, ge  // ge = tcont
   11b18:	tbnz	w8, #0, 11b28 <mpc_mul_i@@Base+0x288>
   11b1c:	mov	w8, #0x2                   	// #2
   11b20:	str	w8, [sp, #8]
   11b24:	b	11b40 <mpc_mul_i@@Base+0x2a0>
   11b28:	ldur	w8, [x29, #-28]
   11b2c:	mov	w9, wzr
   11b30:	mov	w10, #0x1                   	// #1
   11b34:	cmp	w8, #0x0
   11b38:	csel	w8, w9, w10, eq  // eq = none
   11b3c:	str	w8, [sp, #8]
   11b40:	ldr	w8, [sp, #8]
   11b44:	ldur	w9, [x29, #-32]
   11b48:	cmp	w9, #0x0
   11b4c:	cset	w9, ge  // ge = tcont
   11b50:	str	w8, [sp, #4]
   11b54:	tbnz	w9, #0, 11b64 <mpc_mul_i@@Base+0x2c4>
   11b58:	mov	w8, #0x2                   	// #2
   11b5c:	str	w8, [sp]
   11b60:	b	11b7c <mpc_mul_i@@Base+0x2dc>
   11b64:	ldur	w8, [x29, #-32]
   11b68:	mov	w9, wzr
   11b6c:	mov	w10, #0x1                   	// #1
   11b70:	cmp	w8, #0x0
   11b74:	csel	w8, w9, w10, eq  // eq = none
   11b78:	str	w8, [sp]
   11b7c:	ldr	w8, [sp]
   11b80:	ldr	w9, [sp, #4]
   11b84:	orr	w0, w9, w8, lsl #2
   11b88:	ldp	x29, x30, [sp, #80]
   11b8c:	add	sp, sp, #0x60
   11b90:	ret

0000000000011b94 <mpc_mul_si@@Base>:
   11b94:	sub	sp, sp, #0x50
   11b98:	stp	x29, x30, [sp, #64]
   11b9c:	add	x29, sp, #0x40
   11ba0:	stur	x0, [x29, #-8]
   11ba4:	stur	x1, [x29, #-16]
   11ba8:	stur	x2, [x29, #-24]
   11bac:	stur	w3, [x29, #-28]
   11bb0:	ldur	x0, [x29, #-8]
   11bb4:	ldur	x1, [x29, #-16]
   11bb8:	ldur	x2, [x29, #-24]
   11bbc:	ldur	w8, [x29, #-28]
   11bc0:	and	w3, w8, #0xf
   11bc4:	bl	5460 <mpfr_mul_si@plt>
   11bc8:	str	w0, [sp, #24]
   11bcc:	ldr	w8, [sp, #24]
   11bd0:	str	w8, [sp, #32]
   11bd4:	ldur	x8, [x29, #-8]
   11bd8:	add	x0, x8, #0x20
   11bdc:	ldur	x8, [x29, #-16]
   11be0:	add	x1, x8, #0x20
   11be4:	ldur	x2, [x29, #-24]
   11be8:	ldur	w9, [x29, #-28]
   11bec:	asr	w3, w9, #4
   11bf0:	bl	5460 <mpfr_mul_si@plt>
   11bf4:	str	w0, [sp, #20]
   11bf8:	ldr	w8, [sp, #20]
   11bfc:	str	w8, [sp, #28]
   11c00:	ldr	w9, [sp, #32]
   11c04:	cmp	w9, #0x0
   11c08:	cset	w9, ge  // ge = tcont
   11c0c:	tbnz	w9, #0, 11c1c <mpc_mul_si@@Base+0x88>
   11c10:	mov	w8, #0x2                   	// #2
   11c14:	str	w8, [sp, #16]
   11c18:	b	11c34 <mpc_mul_si@@Base+0xa0>
   11c1c:	ldr	w8, [sp, #32]
   11c20:	mov	w9, wzr
   11c24:	mov	w10, #0x1                   	// #1
   11c28:	cmp	w8, #0x0
   11c2c:	csel	w8, w9, w10, eq  // eq = none
   11c30:	str	w8, [sp, #16]
   11c34:	ldr	w8, [sp, #16]
   11c38:	ldr	w9, [sp, #28]
   11c3c:	cmp	w9, #0x0
   11c40:	cset	w9, ge  // ge = tcont
   11c44:	str	w8, [sp, #12]
   11c48:	tbnz	w9, #0, 11c58 <mpc_mul_si@@Base+0xc4>
   11c4c:	mov	w8, #0x2                   	// #2
   11c50:	str	w8, [sp, #8]
   11c54:	b	11c70 <mpc_mul_si@@Base+0xdc>
   11c58:	ldr	w8, [sp, #28]
   11c5c:	mov	w9, wzr
   11c60:	mov	w10, #0x1                   	// #1
   11c64:	cmp	w8, #0x0
   11c68:	csel	w8, w9, w10, eq  // eq = none
   11c6c:	str	w8, [sp, #8]
   11c70:	ldr	w8, [sp, #8]
   11c74:	ldr	w9, [sp, #12]
   11c78:	orr	w0, w9, w8, lsl #2
   11c7c:	ldp	x29, x30, [sp, #64]
   11c80:	add	sp, sp, #0x50
   11c84:	ret

0000000000011c88 <mpc_mul_ui@@Base>:
   11c88:	sub	sp, sp, #0x50
   11c8c:	stp	x29, x30, [sp, #64]
   11c90:	add	x29, sp, #0x40
   11c94:	stur	x0, [x29, #-8]
   11c98:	stur	x1, [x29, #-16]
   11c9c:	stur	x2, [x29, #-24]
   11ca0:	stur	w3, [x29, #-28]
   11ca4:	ldur	x0, [x29, #-8]
   11ca8:	ldur	x1, [x29, #-16]
   11cac:	ldur	x2, [x29, #-24]
   11cb0:	ldur	w8, [x29, #-28]
   11cb4:	and	w3, w8, #0xf
   11cb8:	bl	4aa0 <mpfr_mul_ui@plt>
   11cbc:	str	w0, [sp, #24]
   11cc0:	ldr	w8, [sp, #24]
   11cc4:	str	w8, [sp, #32]
   11cc8:	ldur	x8, [x29, #-8]
   11ccc:	add	x0, x8, #0x20
   11cd0:	ldur	x8, [x29, #-16]
   11cd4:	add	x1, x8, #0x20
   11cd8:	ldur	x2, [x29, #-24]
   11cdc:	ldur	w9, [x29, #-28]
   11ce0:	asr	w3, w9, #4
   11ce4:	bl	4aa0 <mpfr_mul_ui@plt>
   11ce8:	str	w0, [sp, #20]
   11cec:	ldr	w8, [sp, #20]
   11cf0:	str	w8, [sp, #28]
   11cf4:	ldr	w9, [sp, #32]
   11cf8:	cmp	w9, #0x0
   11cfc:	cset	w9, ge  // ge = tcont
   11d00:	tbnz	w9, #0, 11d10 <mpc_mul_ui@@Base+0x88>
   11d04:	mov	w8, #0x2                   	// #2
   11d08:	str	w8, [sp, #16]
   11d0c:	b	11d28 <mpc_mul_ui@@Base+0xa0>
   11d10:	ldr	w8, [sp, #32]
   11d14:	mov	w9, wzr
   11d18:	mov	w10, #0x1                   	// #1
   11d1c:	cmp	w8, #0x0
   11d20:	csel	w8, w9, w10, eq  // eq = none
   11d24:	str	w8, [sp, #16]
   11d28:	ldr	w8, [sp, #16]
   11d2c:	ldr	w9, [sp, #28]
   11d30:	cmp	w9, #0x0
   11d34:	cset	w9, ge  // ge = tcont
   11d38:	str	w8, [sp, #12]
   11d3c:	tbnz	w9, #0, 11d4c <mpc_mul_ui@@Base+0xc4>
   11d40:	mov	w8, #0x2                   	// #2
   11d44:	str	w8, [sp, #8]
   11d48:	b	11d64 <mpc_mul_ui@@Base+0xdc>
   11d4c:	ldr	w8, [sp, #28]
   11d50:	mov	w9, wzr
   11d54:	mov	w10, #0x1                   	// #1
   11d58:	cmp	w8, #0x0
   11d5c:	csel	w8, w9, w10, eq  // eq = none
   11d60:	str	w8, [sp, #8]
   11d64:	ldr	w8, [sp, #8]
   11d68:	ldr	w9, [sp, #12]
   11d6c:	orr	w0, w9, w8, lsl #2
   11d70:	ldp	x29, x30, [sp, #64]
   11d74:	add	sp, sp, #0x50
   11d78:	ret

0000000000011d7c <mpc_neg@@Base>:
   11d7c:	sub	sp, sp, #0x40
   11d80:	stp	x29, x30, [sp, #48]
   11d84:	add	x29, sp, #0x30
   11d88:	stur	x0, [x29, #-8]
   11d8c:	stur	x1, [x29, #-16]
   11d90:	stur	w2, [x29, #-20]
   11d94:	ldur	x0, [x29, #-8]
   11d98:	ldur	x1, [x29, #-16]
   11d9c:	ldur	w8, [x29, #-20]
   11da0:	and	w2, w8, #0xf
   11da4:	bl	4c60 <mpfr_neg@plt>
   11da8:	str	w0, [sp, #24]
   11dac:	ldur	x9, [x29, #-8]
   11db0:	add	x0, x9, #0x20
   11db4:	ldur	x9, [x29, #-16]
   11db8:	add	x1, x9, #0x20
   11dbc:	ldur	w8, [x29, #-20]
   11dc0:	asr	w2, w8, #4
   11dc4:	bl	4c60 <mpfr_neg@plt>
   11dc8:	str	w0, [sp, #20]
   11dcc:	ldr	w8, [sp, #24]
   11dd0:	cmp	w8, #0x0
   11dd4:	cset	w8, ge  // ge = tcont
   11dd8:	tbnz	w8, #0, 11de8 <mpc_neg@@Base+0x6c>
   11ddc:	mov	w8, #0x2                   	// #2
   11de0:	str	w8, [sp, #16]
   11de4:	b	11e00 <mpc_neg@@Base+0x84>
   11de8:	ldr	w8, [sp, #24]
   11dec:	mov	w9, wzr
   11df0:	mov	w10, #0x1                   	// #1
   11df4:	cmp	w8, #0x0
   11df8:	csel	w8, w9, w10, eq  // eq = none
   11dfc:	str	w8, [sp, #16]
   11e00:	ldr	w8, [sp, #16]
   11e04:	ldr	w9, [sp, #20]
   11e08:	cmp	w9, #0x0
   11e0c:	cset	w9, ge  // ge = tcont
   11e10:	str	w8, [sp, #12]
   11e14:	tbnz	w9, #0, 11e24 <mpc_neg@@Base+0xa8>
   11e18:	mov	w8, #0x2                   	// #2
   11e1c:	str	w8, [sp, #8]
   11e20:	b	11e3c <mpc_neg@@Base+0xc0>
   11e24:	ldr	w8, [sp, #20]
   11e28:	mov	w9, wzr
   11e2c:	mov	w10, #0x1                   	// #1
   11e30:	cmp	w8, #0x0
   11e34:	csel	w8, w9, w10, eq  // eq = none
   11e38:	str	w8, [sp, #8]
   11e3c:	ldr	w8, [sp, #8]
   11e40:	ldr	w9, [sp, #12]
   11e44:	orr	w0, w9, w8, lsl #2
   11e48:	ldp	x29, x30, [sp, #48]
   11e4c:	add	sp, sp, #0x40
   11e50:	ret

0000000000011e54 <mpc_norm@@Base>:
   11e54:	sub	sp, sp, #0x1a0
   11e58:	stp	x29, x30, [sp, #384]
   11e5c:	str	x28, [sp, #400]
   11e60:	add	x29, sp, #0x180
   11e64:	sub	x8, x29, #0x58
   11e68:	str	x0, [x8, #72]
   11e6c:	str	x1, [x8, #64]
   11e70:	stur	w2, [x29, #-28]
   11e74:	ldr	x0, [x8, #64]
   11e78:	str	x8, [sp, #152]
   11e7c:	bl	55c0 <mpfr_number_p@plt>
   11e80:	cbz	w0, 11e98 <mpc_norm@@Base+0x44>
   11e84:	ldr	x8, [sp, #152]
   11e88:	ldr	x9, [x8, #64]
   11e8c:	add	x0, x9, #0x20
   11e90:	bl	55c0 <mpfr_number_p@plt>
   11e94:	cbnz	w0, 11eb4 <mpc_norm@@Base+0x60>
   11e98:	ldr	x8, [sp, #152]
   11e9c:	ldr	x0, [x8, #72]
   11ea0:	ldr	x1, [x8, #64]
   11ea4:	ldur	w2, [x29, #-28]
   11ea8:	bl	52a0 <mpc_abs@plt>
   11eac:	stur	w0, [x29, #-4]
   11eb0:	b	1259c <mpc_norm@@Base+0x748>
   11eb4:	ldr	x8, [sp, #152]
   11eb8:	ldr	x9, [x8, #64]
   11ebc:	ldr	x9, [x9, #16]
   11ec0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   11ec4:	cmp	x9, x10
   11ec8:	b.ne	11f38 <mpc_norm@@Base+0xe4>  // b.any
   11ecc:	ldr	x8, [sp, #152]
   11ed0:	ldr	x9, [x8, #64]
   11ed4:	ldr	x9, [x9, #48]
   11ed8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   11edc:	cmp	x9, x10
   11ee0:	b.ne	11f18 <mpc_norm@@Base+0xc4>  // b.any
   11ee4:	ldr	x8, [sp, #152]
   11ee8:	ldr	x9, [x8, #72]
   11eec:	str	x9, [x8, #40]
   11ef0:	ldr	x9, [x8, #40]
   11ef4:	mov	w10, #0x1                   	// #1
   11ef8:	str	w10, [x9, #8]
   11efc:	ldr	x9, [x8, #40]
   11f00:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   11f04:	str	x11, [x9, #16]
   11f08:	stur	wzr, [x29, #-52]
   11f0c:	ldur	w10, [x29, #-52]
   11f10:	stur	w10, [x29, #-4]
   11f14:	b	1259c <mpc_norm@@Base+0x748>
   11f18:	ldr	x8, [sp, #152]
   11f1c:	ldr	x0, [x8, #72]
   11f20:	ldr	x9, [x8, #64]
   11f24:	add	x1, x9, #0x20
   11f28:	ldur	w2, [x29, #-28]
   11f2c:	bl	5110 <mpfr_sqr@plt>
   11f30:	stur	w0, [x29, #-4]
   11f34:	b	1259c <mpc_norm@@Base+0x748>
   11f38:	ldr	x8, [sp, #152]
   11f3c:	ldr	x9, [x8, #64]
   11f40:	ldr	x9, [x9, #48]
   11f44:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   11f48:	cmp	x9, x10
   11f4c:	b.ne	11f6c <mpc_norm@@Base+0x118>  // b.any
   11f50:	ldr	x8, [sp, #152]
   11f54:	ldr	x0, [x8, #72]
   11f58:	ldr	x1, [x8, #64]
   11f5c:	ldur	w2, [x29, #-28]
   11f60:	bl	5110 <mpfr_sqr@plt>
   11f64:	stur	w0, [x29, #-4]
   11f68:	b	1259c <mpc_norm@@Base+0x748>
   11f6c:	mov	w8, #0x2                   	// #2
   11f70:	stur	w8, [x29, #-184]
   11f74:	ldr	x9, [sp, #152]
   11f78:	ldr	x10, [x9, #72]
   11f7c:	ldr	x10, [x10]
   11f80:	stur	x10, [x29, #-160]
   11f84:	sub	x0, x29, #0x58
   11f88:	bl	4b80 <mpfr_init@plt>
   11f8c:	sub	x0, x29, #0x78
   11f90:	bl	4b80 <mpfr_init@plt>
   11f94:	sub	x0, x29, #0x98
   11f98:	bl	4b80 <mpfr_init@plt>
   11f9c:	bl	53f0 <mpfr_underflow_p@plt>
   11fa0:	stur	w0, [x29, #-36]
   11fa4:	bl	55d0 <mpfr_overflow_p@plt>
   11fa8:	stur	w0, [x29, #-40]
   11fac:	stur	wzr, [x29, #-180]
   11fb0:	bl	4f00 <mpfr_clear_underflow@plt>
   11fb4:	bl	4b30 <mpfr_clear_overflow@plt>
   11fb8:	ldur	w8, [x29, #-180]
   11fbc:	add	w8, w8, #0x1
   11fc0:	stur	w8, [x29, #-180]
   11fc4:	ldur	x0, [x29, #-160]
   11fc8:	bl	4de0 <mpc_ceil_log2@plt>
   11fcc:	add	x9, x0, #0x3
   11fd0:	ldur	x10, [x29, #-160]
   11fd4:	add	x9, x10, x9
   11fd8:	stur	x9, [x29, #-160]
   11fdc:	ldur	w8, [x29, #-180]
   11fe0:	cmp	w8, #0x2
   11fe4:	b.lt	12014 <mpc_norm@@Base+0x1c0>  // b.tstop
   11fe8:	ldr	x8, [sp, #152]
   11fec:	ldr	x9, [x8, #64]
   11ff0:	ldr	x9, [x9]
   11ff4:	mov	x10, #0x2                   	// #2
   11ff8:	mul	x9, x10, x9
   11ffc:	stur	x9, [x29, #-168]
   12000:	ldr	x9, [x8, #64]
   12004:	ldr	x9, [x9, #32]
   12008:	mul	x9, x10, x9
   1200c:	stur	x9, [x29, #-176]
   12010:	b	120ac <mpc_norm@@Base+0x258>
   12014:	ldur	x8, [x29, #-160]
   12018:	ldr	x9, [sp, #152]
   1201c:	ldr	x10, [x9, #64]
   12020:	ldr	x10, [x10]
   12024:	mov	x11, #0x2                   	// #2
   12028:	mul	x10, x11, x10
   1202c:	cmp	x8, x10
   12030:	b.ge	12040 <mpc_norm@@Base+0x1ec>  // b.tcont
   12034:	ldur	x8, [x29, #-160]
   12038:	str	x8, [sp, #144]
   1203c:	b	12058 <mpc_norm@@Base+0x204>
   12040:	ldr	x8, [sp, #152]
   12044:	ldr	x9, [x8, #64]
   12048:	ldr	x9, [x9]
   1204c:	mov	x10, #0x2                   	// #2
   12050:	mul	x9, x10, x9
   12054:	str	x9, [sp, #144]
   12058:	ldr	x8, [sp, #144]
   1205c:	stur	x8, [x29, #-168]
   12060:	ldur	x8, [x29, #-160]
   12064:	ldr	x9, [sp, #152]
   12068:	ldr	x10, [x9, #64]
   1206c:	ldr	x10, [x10, #32]
   12070:	mov	x11, #0x2                   	// #2
   12074:	mul	x10, x11, x10
   12078:	cmp	x8, x10
   1207c:	b.ge	1208c <mpc_norm@@Base+0x238>  // b.tcont
   12080:	ldur	x8, [x29, #-160]
   12084:	str	x8, [sp, #136]
   12088:	b	120a4 <mpc_norm@@Base+0x250>
   1208c:	ldr	x8, [sp, #152]
   12090:	ldr	x9, [x8, #64]
   12094:	ldr	x9, [x9, #32]
   12098:	mov	x10, #0x2                   	// #2
   1209c:	mul	x9, x10, x9
   120a0:	str	x9, [sp, #136]
   120a4:	ldr	x8, [sp, #136]
   120a8:	stur	x8, [x29, #-176]
   120ac:	ldur	x1, [x29, #-168]
   120b0:	sub	x8, x29, #0x58
   120b4:	mov	x0, x8
   120b8:	str	x8, [sp, #128]
   120bc:	bl	4d40 <mpfr_set_prec@plt>
   120c0:	ldur	x1, [x29, #-176]
   120c4:	sub	x8, x29, #0x78
   120c8:	mov	x0, x8
   120cc:	str	x8, [sp, #120]
   120d0:	bl	4d40 <mpfr_set_prec@plt>
   120d4:	ldr	x8, [sp, #152]
   120d8:	ldr	x1, [x8, #64]
   120dc:	ldr	x0, [sp, #128]
   120e0:	mov	w9, #0x3                   	// #3
   120e4:	mov	w2, w9
   120e8:	str	w9, [sp, #116]
   120ec:	bl	5110 <mpfr_sqr@plt>
   120f0:	stur	w0, [x29, #-32]
   120f4:	ldr	x8, [sp, #152]
   120f8:	ldr	x10, [x8, #64]
   120fc:	add	x1, x10, #0x20
   12100:	ldr	x0, [sp, #120]
   12104:	ldr	w2, [sp, #116]
   12108:	bl	5110 <mpfr_sqr@plt>
   1210c:	ldur	w9, [x29, #-32]
   12110:	orr	w9, w9, w0
   12114:	stur	w9, [x29, #-32]
   12118:	ldur	w9, [x29, #-32]
   1211c:	cbz	w9, 12148 <mpc_norm@@Base+0x2f4>
   12120:	ldur	x1, [x29, #-160]
   12124:	sub	x8, x29, #0x98
   12128:	mov	x0, x8
   1212c:	str	x8, [sp, #104]
   12130:	bl	4d40 <mpfr_set_prec@plt>
   12134:	ldr	x0, [sp, #104]
   12138:	sub	x1, x29, #0x58
   1213c:	sub	x2, x29, #0x78
   12140:	mov	w3, #0x3                   	// #3
   12144:	bl	4f50 <mpfr_add@plt>
   12148:	ldur	w8, [x29, #-180]
   1214c:	mov	w9, #0x0                   	// #0
   12150:	cmp	w8, #0x2
   12154:	str	w9, [sp, #100]
   12158:	b.ge	121b4 <mpc_norm@@Base+0x360>  // b.tcont
   1215c:	ldur	w8, [x29, #-32]
   12160:	mov	w9, #0x0                   	// #0
   12164:	str	w9, [sp, #100]
   12168:	cbz	w8, 121b4 <mpc_norm@@Base+0x360>
   1216c:	ldur	x8, [x29, #-160]
   12170:	subs	x1, x8, #0x2
   12174:	ldr	x8, [sp, #152]
   12178:	ldr	x9, [x8, #72]
   1217c:	ldr	x9, [x9]
   12180:	ldur	w10, [x29, #-28]
   12184:	cmp	w10, #0x0
   12188:	cset	w10, eq  // eq = none
   1218c:	and	w10, w10, #0x1
   12190:	add	x4, x9, w10, sxtw
   12194:	sub	x0, x29, #0x98
   12198:	mov	w2, #0x3                   	// #3
   1219c:	mov	w3, #0x2                   	// #2
   121a0:	bl	5540 <mpfr_can_round@plt>
   121a4:	cmp	w0, #0x0
   121a8:	cset	w10, ne  // ne = any
   121ac:	eor	w10, w10, #0x1
   121b0:	str	w10, [sp, #100]
   121b4:	ldr	w8, [sp, #100]
   121b8:	tbnz	w8, #0, 11fb8 <mpc_norm@@Base+0x164>
   121bc:	ldur	w8, [x29, #-32]
   121c0:	cbnz	w8, 121e4 <mpc_norm@@Base+0x390>
   121c4:	ldr	x8, [sp, #152]
   121c8:	ldr	x0, [x8, #72]
   121cc:	ldur	w3, [x29, #-28]
   121d0:	sub	x1, x29, #0x58
   121d4:	sub	x2, x29, #0x78
   121d8:	bl	4f50 <mpfr_add@plt>
   121dc:	stur	w0, [x29, #-32]
   121e0:	b	12564 <mpc_norm@@Base+0x710>
   121e4:	bl	55d0 <mpfr_overflow_p@plt>
   121e8:	cbz	w0, 12248 <mpc_norm@@Base+0x3f4>
   121ec:	ldr	x8, [sp, #152]
   121f0:	ldr	x0, [x8, #72]
   121f4:	mov	x1, #0x1                   	// #1
   121f8:	mov	x9, xzr
   121fc:	mov	x2, x9
   12200:	mov	w10, wzr
   12204:	mov	w3, w10
   12208:	bl	5230 <mpfr_set_ui_2exp@plt>
   1220c:	ldr	x8, [sp, #152]
   12210:	ldr	x9, [x8, #72]
   12214:	ldr	x1, [x8, #72]
   12218:	str	x9, [sp, #88]
   1221c:	str	x1, [sp, #80]
   12220:	bl	5300 <mpfr_get_emax@plt>
   12224:	ldur	w3, [x29, #-28]
   12228:	ldr	x8, [sp, #88]
   1222c:	str	x0, [sp, #72]
   12230:	mov	x0, x8
   12234:	ldr	x1, [sp, #80]
   12238:	ldr	x2, [sp, #72]
   1223c:	bl	5040 <mpfr_mul_2ui@plt>
   12240:	stur	w0, [x29, #-32]
   12244:	b	12564 <mpc_norm@@Base+0x710>
   12248:	bl	53f0 <mpfr_underflow_p@plt>
   1224c:	cbz	w0, 12548 <mpc_norm@@Base+0x6f4>
   12250:	bl	5160 <mpfr_get_emin@plt>
   12254:	str	x0, [sp, #192]
   12258:	ldr	x8, [sp, #152]
   1225c:	ldr	x9, [x8, #16]
   12260:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   12264:	cmp	x9, x10
   12268:	b.eq	122fc <mpc_norm@@Base+0x4a8>  // b.none
   1226c:	ldr	x8, [sp, #152]
   12270:	ldr	x9, [x8, #16]
   12274:	ldur	x10, [x29, #-168]
   12278:	mov	x11, #0x2                   	// #2
   1227c:	mul	x10, x11, x10
   12280:	subs	x9, x9, x10
   12284:	ldr	x10, [sp, #192]
   12288:	cmp	x9, x10
   1228c:	b.le	122fc <mpc_norm@@Base+0x4a8>
   12290:	ldr	x8, [sp, #152]
   12294:	ldr	x9, [x8, #16]
   12298:	mov	x10, #0xfffffffffffffff6    	// #-10
   1229c:	cmp	x9, x10
   122a0:	b.le	122fc <mpc_norm@@Base+0x4a8>
   122a4:	sub	x8, x29, #0x78
   122a8:	mov	x0, x8
   122ac:	mov	x9, #0x1                   	// #1
   122b0:	mov	x1, x9
   122b4:	str	x8, [sp, #64]
   122b8:	str	x9, [sp, #56]
   122bc:	bl	4d40 <mpfr_set_prec@plt>
   122c0:	ldr	x8, [sp, #192]
   122c4:	subs	x2, x8, #0x1
   122c8:	ldr	x0, [sp, #64]
   122cc:	ldr	x1, [sp, #56]
   122d0:	mov	w3, #0x1                   	// #1
   122d4:	bl	5230 <mpfr_set_ui_2exp@plt>
   122d8:	ldr	x8, [sp, #152]
   122dc:	ldr	x9, [x8, #72]
   122e0:	ldur	w3, [x29, #-28]
   122e4:	mov	x0, x9
   122e8:	sub	x1, x29, #0x58
   122ec:	ldr	x2, [sp, #64]
   122f0:	bl	4f50 <mpfr_add@plt>
   122f4:	stur	w0, [x29, #-32]
   122f8:	b	12544 <mpc_norm@@Base+0x6f0>
   122fc:	ldur	x8, [x29, #-104]
   12300:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   12304:	cmp	x8, x9
   12308:	b.eq	12394 <mpc_norm@@Base+0x540>  // b.none
   1230c:	ldur	x8, [x29, #-104]
   12310:	ldur	x9, [x29, #-176]
   12314:	mov	x10, #0x2                   	// #2
   12318:	mul	x9, x10, x9
   1231c:	subs	x8, x8, x9
   12320:	ldr	x9, [sp, #192]
   12324:	cmp	x8, x9
   12328:	b.le	12394 <mpc_norm@@Base+0x540>
   1232c:	ldur	x8, [x29, #-104]
   12330:	mov	x9, #0xfffffffffffffff6    	// #-10
   12334:	cmp	x8, x9
   12338:	b.le	12394 <mpc_norm@@Base+0x540>
   1233c:	sub	x8, x29, #0x58
   12340:	mov	x0, x8
   12344:	mov	x9, #0x1                   	// #1
   12348:	mov	x1, x9
   1234c:	str	x8, [sp, #48]
   12350:	str	x9, [sp, #40]
   12354:	bl	4d40 <mpfr_set_prec@plt>
   12358:	ldr	x8, [sp, #192]
   1235c:	subs	x2, x8, #0x1
   12360:	ldr	x0, [sp, #48]
   12364:	ldr	x1, [sp, #40]
   12368:	mov	w3, #0x1                   	// #1
   1236c:	bl	5230 <mpfr_set_ui_2exp@plt>
   12370:	ldr	x8, [sp, #152]
   12374:	ldr	x9, [x8, #72]
   12378:	ldur	w3, [x29, #-28]
   1237c:	mov	x0, x9
   12380:	ldr	x1, [sp, #48]
   12384:	sub	x2, x29, #0x78
   12388:	bl	4f50 <mpfr_add@plt>
   1238c:	stur	w0, [x29, #-32]
   12390:	b	12544 <mpc_norm@@Base+0x6f0>
   12394:	ldr	x8, [sp, #152]
   12398:	ldr	x9, [x8, #64]
   1239c:	ldr	x9, [x9, #16]
   123a0:	mov	x10, xzr
   123a4:	subs	x9, x10, x9
   123a8:	str	x9, [sp, #176]
   123ac:	ldr	x9, [x8, #64]
   123b0:	ldr	x9, [x9, #48]
   123b4:	subs	x9, x10, x9
   123b8:	str	x9, [sp, #168]
   123bc:	ldr	x9, [sp, #176]
   123c0:	mov	x10, #0x2                   	// #2
   123c4:	udiv	x9, x9, x10
   123c8:	ldr	x11, [sp, #168]
   123cc:	udiv	x11, x11, x10
   123d0:	add	x9, x9, x11
   123d4:	ldr	x11, [sp, #176]
   123d8:	udiv	x12, x11, x10
   123dc:	mul	x12, x12, x10
   123e0:	subs	x11, x11, x12
   123e4:	ldr	x12, [sp, #168]
   123e8:	udiv	x13, x12, x10
   123ec:	mul	x13, x13, x10
   123f0:	subs	x12, x12, x13
   123f4:	add	x11, x11, x12
   123f8:	udiv	x10, x11, x10
   123fc:	add	x9, x9, x10
   12400:	str	x9, [sp, #184]
   12404:	ldr	x9, [x8, #16]
   12408:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1240c:	cmp	x9, x10
   12410:	b.ne	12454 <mpc_norm@@Base+0x600>  // b.any
   12414:	ldr	x8, [sp, #152]
   12418:	ldr	x1, [x8, #64]
   1241c:	ldr	x2, [sp, #184]
   12420:	sub	x9, x29, #0x58
   12424:	mov	x0, x9
   12428:	mov	w10, wzr
   1242c:	mov	w3, w10
   12430:	str	x9, [sp, #32]
   12434:	str	w10, [sp, #28]
   12438:	bl	5040 <mpfr_mul_2ui@plt>
   1243c:	ldr	x8, [sp, #32]
   12440:	mov	x0, x8
   12444:	mov	x1, x8
   12448:	ldr	w2, [sp, #28]
   1244c:	bl	5110 <mpfr_sqr@plt>
   12450:	b	12478 <mpc_norm@@Base+0x624>
   12454:	ldr	x8, [sp, #184]
   12458:	mov	x9, #0x2                   	// #2
   1245c:	mul	x2, x9, x8
   12460:	sub	x8, x29, #0x58
   12464:	mov	x0, x8
   12468:	mov	x1, x8
   1246c:	mov	w10, wzr
   12470:	mov	w3, w10
   12474:	bl	5040 <mpfr_mul_2ui@plt>
   12478:	ldur	x8, [x29, #-104]
   1247c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   12480:	cmp	x8, x9
   12484:	b.ne	124cc <mpc_norm@@Base+0x678>  // b.any
   12488:	ldr	x8, [sp, #152]
   1248c:	ldr	x9, [x8, #64]
   12490:	add	x1, x9, #0x20
   12494:	ldr	x2, [sp, #184]
   12498:	sub	x9, x29, #0x78
   1249c:	mov	x0, x9
   124a0:	mov	w10, wzr
   124a4:	mov	w3, w10
   124a8:	str	x9, [sp, #16]
   124ac:	str	w10, [sp, #12]
   124b0:	bl	5040 <mpfr_mul_2ui@plt>
   124b4:	ldr	x8, [sp, #16]
   124b8:	mov	x0, x8
   124bc:	mov	x1, x8
   124c0:	ldr	w2, [sp, #12]
   124c4:	bl	5110 <mpfr_sqr@plt>
   124c8:	b	124f0 <mpc_norm@@Base+0x69c>
   124cc:	ldr	x8, [sp, #184]
   124d0:	mov	x9, #0x2                   	// #2
   124d4:	mul	x2, x9, x8
   124d8:	sub	x8, x29, #0x78
   124dc:	mov	x0, x8
   124e0:	mov	x1, x8
   124e4:	mov	w10, wzr
   124e8:	mov	w3, w10
   124ec:	bl	5040 <mpfr_mul_2ui@plt>
   124f0:	ldr	x8, [sp, #152]
   124f4:	ldr	x0, [x8, #72]
   124f8:	ldur	w3, [x29, #-28]
   124fc:	sub	x1, x29, #0x58
   12500:	sub	x2, x29, #0x78
   12504:	bl	4f50 <mpfr_add@plt>
   12508:	stur	w0, [x29, #-32]
   1250c:	bl	4f00 <mpfr_clear_underflow@plt>
   12510:	ldr	x8, [sp, #152]
   12514:	ldr	x0, [x8, #72]
   12518:	ldr	x1, [x8, #72]
   1251c:	ldr	x9, [sp, #184]
   12520:	mov	x10, #0x2                   	// #2
   12524:	mul	x2, x10, x9
   12528:	ldur	w3, [x29, #-28]
   1252c:	bl	5420 <mpfr_div_2ui@plt>
   12530:	str	w0, [sp, #164]
   12534:	bl	53f0 <mpfr_underflow_p@plt>
   12538:	cbz	w0, 12544 <mpc_norm@@Base+0x6f0>
   1253c:	ldr	w8, [sp, #164]
   12540:	stur	w8, [x29, #-32]
   12544:	b	12564 <mpc_norm@@Base+0x710>
   12548:	ldr	x8, [sp, #152]
   1254c:	ldr	x0, [x8, #72]
   12550:	ldur	w2, [x29, #-28]
   12554:	sub	x1, x29, #0x98
   12558:	ldur	w3, [x29, #-144]
   1255c:	bl	52d0 <mpfr_set4@plt>
   12560:	stur	w0, [x29, #-32]
   12564:	ldur	w8, [x29, #-36]
   12568:	cbz	w8, 12570 <mpc_norm@@Base+0x71c>
   1256c:	bl	4a60 <mpfr_set_underflow@plt>
   12570:	ldur	w8, [x29, #-40]
   12574:	cbz	w8, 1257c <mpc_norm@@Base+0x728>
   12578:	bl	5580 <mpfr_set_overflow@plt>
   1257c:	sub	x0, x29, #0x58
   12580:	bl	4e30 <mpfr_clear@plt>
   12584:	sub	x0, x29, #0x78
   12588:	bl	4e30 <mpfr_clear@plt>
   1258c:	sub	x0, x29, #0x98
   12590:	bl	4e30 <mpfr_clear@plt>
   12594:	ldur	w8, [x29, #-32]
   12598:	stur	w8, [x29, #-4]
   1259c:	ldur	w0, [x29, #-4]
   125a0:	ldr	x28, [sp, #400]
   125a4:	ldp	x29, x30, [sp, #384]
   125a8:	add	sp, sp, #0x1a0
   125ac:	ret

00000000000125b0 <mpc_out_str@@Base>:
   125b0:	sub	sp, sp, #0x40
   125b4:	stp	x29, x30, [sp, #48]
   125b8:	add	x29, sp, #0x30
   125bc:	mov	x8, #0x3                   	// #3
   125c0:	stur	x0, [x29, #-8]
   125c4:	stur	w1, [x29, #-12]
   125c8:	str	x2, [sp, #24]
   125cc:	str	x3, [sp, #16]
   125d0:	str	w4, [sp, #12]
   125d4:	str	x8, [sp]
   125d8:	ldur	x8, [x29, #-8]
   125dc:	cbnz	x8, 125f0 <mpc_out_str@@Base+0x40>
   125e0:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   125e4:	ldr	x8, [x8, #4024]
   125e8:	ldr	x8, [x8]
   125ec:	stur	x8, [x29, #-8]
   125f0:	ldur	x0, [x29, #-8]
   125f4:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   125f8:	add	x1, x1, #0x3bc
   125fc:	bl	56a0 <fprintf@plt>
   12600:	ldur	x8, [x29, #-8]
   12604:	ldur	w1, [x29, #-12]
   12608:	ldr	x2, [sp, #24]
   1260c:	ldr	x3, [sp, #16]
   12610:	ldr	w9, [sp, #12]
   12614:	and	w4, w9, #0xf
   12618:	mov	x0, x8
   1261c:	bl	5290 <__gmpfr_out_str@plt>
   12620:	ldr	x8, [sp]
   12624:	add	x8, x8, x0
   12628:	str	x8, [sp]
   1262c:	ldur	x0, [x29, #-8]
   12630:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   12634:	add	x1, x1, #0x3be
   12638:	bl	56a0 <fprintf@plt>
   1263c:	ldur	x8, [x29, #-8]
   12640:	ldur	w1, [x29, #-12]
   12644:	ldr	x2, [sp, #24]
   12648:	ldr	x10, [sp, #16]
   1264c:	add	x3, x10, #0x20
   12650:	ldr	w9, [sp, #12]
   12654:	and	w4, w9, #0xf
   12658:	mov	x0, x8
   1265c:	bl	5290 <__gmpfr_out_str@plt>
   12660:	ldr	x8, [sp]
   12664:	add	x8, x8, x0
   12668:	str	x8, [sp]
   1266c:	ldur	x0, [x29, #-8]
   12670:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   12674:	add	x1, x1, #0x5a9
   12678:	bl	56a0 <fprintf@plt>
   1267c:	ldr	x8, [sp]
   12680:	mov	x0, x8
   12684:	ldp	x29, x30, [sp, #48]
   12688:	add	sp, sp, #0x40
   1268c:	ret

0000000000012690 <mpc_pow@@Base>:
   12690:	stp	x29, x30, [sp, #-32]!
   12694:	str	x28, [sp, #16]
   12698:	mov	x29, sp
   1269c:	sub	sp, sp, #0x2e0
   126a0:	add	x8, sp, #0x180
   126a4:	mov	w9, #0xfffffffe            	// #-2
   126a8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   126ac:	str	x0, [x8, #336]
   126b0:	str	x1, [x8, #328]
   126b4:	str	x2, [x8, #320]
   126b8:	stur	w3, [x29, #-36]
   126bc:	stur	w9, [x29, #-40]
   126c0:	stur	wzr, [x29, #-60]
   126c4:	stur	wzr, [x29, #-64]
   126c8:	str	x8, [sp, #216]
   126cc:	str	x10, [sp, #208]
   126d0:	bl	53f0 <mpfr_underflow_p@plt>
   126d4:	stur	w0, [x29, #-228]
   126d8:	bl	55d0 <mpfr_overflow_p@plt>
   126dc:	stur	w0, [x29, #-232]
   126e0:	ldr	x8, [sp, #216]
   126e4:	ldr	x10, [x8, #328]
   126e8:	ldr	x10, [x10, #48]
   126ec:	ldr	x11, [sp, #208]
   126f0:	cmp	x10, x11
   126f4:	cset	w9, eq  // eq = none
   126f8:	and	w9, w9, #0x1
   126fc:	stur	w9, [x29, #-48]
   12700:	ldr	x10, [x8, #320]
   12704:	ldr	x10, [x10, #48]
   12708:	cmp	x10, x11
   1270c:	cset	w9, eq  // eq = none
   12710:	and	w9, w9, #0x1
   12714:	stur	w9, [x29, #-56]
   12718:	ldur	w9, [x29, #-56]
   1271c:	cbz	w9, 12904 <mpc_pow@@Base+0x274>
   12720:	ldr	x8, [sp, #216]
   12724:	ldr	x9, [x8, #320]
   12728:	ldr	x9, [x9, #16]
   1272c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   12730:	cmp	x9, x10
   12734:	b.ne	12904 <mpc_pow@@Base+0x274>  // b.any
   12738:	ldur	w8, [x29, #-48]
   1273c:	cbz	w8, 12780 <mpc_pow@@Base+0xf0>
   12740:	ldr	x8, [sp, #216]
   12744:	ldr	x9, [x8, #328]
   12748:	ldr	x9, [x9, #16]
   1274c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   12750:	cmp	x9, x10
   12754:	b.ne	12780 <mpc_pow@@Base+0xf0>  // b.any
   12758:	ldr	x8, [sp, #216]
   1275c:	ldr	x0, [x8, #336]
   12760:	mov	x1, #0x1                   	// #1
   12764:	mov	x9, xzr
   12768:	mov	x2, x9
   1276c:	mov	w10, wzr
   12770:	mov	w3, w10
   12774:	bl	5140 <mpc_set_ui_ui@plt>
   12778:	stur	wzr, [x29, #-4]
   1277c:	b	13a04 <mpc_pow@@Base+0x1374>
   12780:	add	x8, sp, #0x1d8
   12784:	mov	x0, x8
   12788:	str	x8, [sp, #200]
   1278c:	bl	4b80 <mpfr_init@plt>
   12790:	ldr	x8, [sp, #216]
   12794:	ldr	x1, [x8, #328]
   12798:	ldr	x0, [sp, #200]
   1279c:	mov	w9, wzr
   127a0:	mov	w2, w9
   127a4:	bl	4f90 <mpc_norm@plt>
   127a8:	str	w0, [sp, #468]
   127ac:	ldr	x0, [sp, #200]
   127b0:	mov	x1, #0x1                   	// #1
   127b4:	mov	x8, xzr
   127b8:	mov	x2, x8
   127bc:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
   127c0:	str	w0, [sp, #464]
   127c4:	ldr	w9, [sp, #464]
   127c8:	cbnz	w9, 127e4 <mpc_pow@@Base+0x154>
   127cc:	ldr	w8, [sp, #468]
   127d0:	cbz	w8, 127e4 <mpc_pow@@Base+0x154>
   127d4:	ldr	w8, [sp, #468]
   127d8:	mov	w9, wzr
   127dc:	subs	w8, w9, w8
   127e0:	str	w8, [sp, #464]
   127e4:	ldr	w8, [sp, #464]
   127e8:	cmp	w8, #0x0
   127ec:	cset	w8, ge  // ge = tcont
   127f0:	tbnz	w8, #0, 12818 <mpc_pow@@Base+0x188>
   127f4:	ldr	x8, [sp, #216]
   127f8:	ldr	x9, [x8, #320]
   127fc:	ldr	w10, [x9, #40]
   12800:	cmp	w10, #0x0
   12804:	cset	w10, lt  // lt = tstop
   12808:	and	w10, w10, #0x1
   1280c:	mov	w11, #0x1                   	// #1
   12810:	str	w11, [sp, #196]
   12814:	cbz	w10, 12894 <mpc_pow@@Base+0x204>
   12818:	ldr	w8, [sp, #464]
   1281c:	cbnz	w8, 1285c <mpc_pow@@Base+0x1cc>
   12820:	ldr	x8, [sp, #216]
   12824:	ldr	x9, [x8, #328]
   12828:	ldr	w10, [x9, #40]
   1282c:	cmp	w10, #0x0
   12830:	cset	w10, lt  // lt = tstop
   12834:	and	w10, w10, #0x1
   12838:	ldr	x9, [x8, #320]
   1283c:	ldr	w11, [x9, #8]
   12840:	cmp	w11, #0x0
   12844:	cset	w11, lt  // lt = tstop
   12848:	and	w11, w11, #0x1
   1284c:	mov	w12, #0x1                   	// #1
   12850:	cmp	w10, w11
   12854:	str	w12, [sp, #196]
   12858:	b.ne	12894 <mpc_pow@@Base+0x204>  // b.any
   1285c:	ldr	w8, [sp, #464]
   12860:	cmp	w8, #0x0
   12864:	cset	w8, le
   12868:	mov	w9, #0x0                   	// #0
   1286c:	str	w9, [sp, #192]
   12870:	tbnz	w8, #0, 1288c <mpc_pow@@Base+0x1fc>
   12874:	ldr	x8, [sp, #216]
   12878:	ldr	x9, [x8, #320]
   1287c:	ldr	w10, [x9, #40]
   12880:	cmp	w10, #0x0
   12884:	cset	w10, lt  // lt = tstop
   12888:	str	w10, [sp, #192]
   1288c:	ldr	w8, [sp, #192]
   12890:	str	w8, [sp, #196]
   12894:	ldr	w8, [sp, #196]
   12898:	and	w8, w8, #0x1
   1289c:	str	w8, [sp, #460]
   128a0:	ldr	x9, [sp, #216]
   128a4:	ldr	x0, [x9, #336]
   128a8:	ldur	w3, [x29, #-36]
   128ac:	mov	x1, #0x1                   	// #1
   128b0:	mov	x10, xzr
   128b4:	mov	x2, x10
   128b8:	bl	5140 <mpc_set_ui_ui@plt>
   128bc:	stur	w0, [x29, #-40]
   128c0:	ldur	w8, [x29, #-36]
   128c4:	asr	w8, w8, #4
   128c8:	cmp	w8, #0x3
   128cc:	b.eq	128d8 <mpc_pow@@Base+0x248>  // b.none
   128d0:	ldr	w8, [sp, #460]
   128d4:	cbz	w8, 128f0 <mpc_pow@@Base+0x260>
   128d8:	ldr	x8, [sp, #216]
   128dc:	ldr	x0, [x8, #336]
   128e0:	ldr	x1, [x8, #336]
   128e4:	mov	w9, wzr
   128e8:	mov	w2, w9
   128ec:	bl	5060 <mpc_conj@plt>
   128f0:	add	x0, sp, #0x1d8
   128f4:	bl	4e30 <mpfr_clear@plt>
   128f8:	ldur	w8, [x29, #-40]
   128fc:	stur	w8, [x29, #-4]
   12900:	b	13a04 <mpc_pow@@Base+0x1374>
   12904:	ldr	x8, [sp, #216]
   12908:	ldr	x0, [x8, #328]
   1290c:	bl	55c0 <mpfr_number_p@plt>
   12910:	cbz	w0, 1294c <mpc_pow@@Base+0x2bc>
   12914:	ldr	x8, [sp, #216]
   12918:	ldr	x9, [x8, #328]
   1291c:	add	x0, x9, #0x20
   12920:	bl	55c0 <mpfr_number_p@plt>
   12924:	cbz	w0, 1294c <mpc_pow@@Base+0x2bc>
   12928:	ldr	x8, [sp, #216]
   1292c:	ldr	x0, [x8, #320]
   12930:	bl	55c0 <mpfr_number_p@plt>
   12934:	cbz	w0, 1294c <mpc_pow@@Base+0x2bc>
   12938:	ldr	x8, [sp, #216]
   1293c:	ldr	x9, [x8, #320]
   12940:	add	x0, x9, #0x20
   12944:	bl	55c0 <mpfr_number_p@plt>
   12948:	cbnz	w0, 129c0 <mpc_pow@@Base+0x330>
   1294c:	sub	x8, x29, #0xc0
   12950:	mov	x0, x8
   12954:	mov	x1, #0x2                   	// #2
   12958:	str	x8, [sp, #184]
   1295c:	bl	4db0 <mpc_init2@plt>
   12960:	ldr	x8, [sp, #216]
   12964:	ldr	x1, [x8, #328]
   12968:	ldr	x0, [sp, #184]
   1296c:	mov	w9, wzr
   12970:	mov	w2, w9
   12974:	str	w9, [sp, #180]
   12978:	bl	4e90 <mpc_log@plt>
   1297c:	ldr	x8, [sp, #216]
   12980:	ldr	x2, [x8, #320]
   12984:	ldr	x10, [sp, #184]
   12988:	mov	x0, x10
   1298c:	mov	x1, x10
   12990:	ldr	w3, [sp, #180]
   12994:	bl	4fd0 <mpc_mul@plt>
   12998:	ldr	x8, [sp, #216]
   1299c:	ldr	x10, [x8, #336]
   129a0:	ldur	w2, [x29, #-36]
   129a4:	mov	x0, x10
   129a8:	ldr	x1, [sp, #184]
   129ac:	bl	53a0 <mpc_exp@plt>
   129b0:	stur	w0, [x29, #-40]
   129b4:	ldr	x0, [sp, #184]
   129b8:	bl	4af0 <mpc_clear@plt>
   129bc:	b	139fc <mpc_pow@@Base+0x136c>
   129c0:	ldur	w8, [x29, #-48]
   129c4:	cbz	w8, 12d1c <mpc_pow@@Base+0x68c>
   129c8:	ldr	x8, [sp, #216]
   129cc:	ldr	x9, [x8, #328]
   129d0:	ldr	x9, [x9, #16]
   129d4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   129d8:	cmp	x9, x10
   129dc:	b.ne	12a54 <mpc_pow@@Base+0x3c4>  // b.any
   129e0:	sub	x8, x29, #0xc0
   129e4:	mov	x0, x8
   129e8:	mov	x1, #0x2                   	// #2
   129ec:	str	x8, [sp, #168]
   129f0:	bl	4db0 <mpc_init2@plt>
   129f4:	ldr	x8, [sp, #216]
   129f8:	ldr	x1, [x8, #328]
   129fc:	ldr	x0, [sp, #168]
   12a00:	mov	w9, wzr
   12a04:	mov	w2, w9
   12a08:	str	w9, [sp, #164]
   12a0c:	bl	4e90 <mpc_log@plt>
   12a10:	ldr	x8, [sp, #216]
   12a14:	ldr	x2, [x8, #320]
   12a18:	ldr	x10, [sp, #168]
   12a1c:	mov	x0, x10
   12a20:	mov	x1, x10
   12a24:	ldr	w3, [sp, #164]
   12a28:	bl	4fd0 <mpc_mul@plt>
   12a2c:	ldr	x8, [sp, #216]
   12a30:	ldr	x10, [x8, #336]
   12a34:	ldur	w2, [x29, #-36]
   12a38:	mov	x0, x10
   12a3c:	ldr	x1, [sp, #168]
   12a40:	bl	53a0 <mpc_exp@plt>
   12a44:	stur	w0, [x29, #-40]
   12a48:	ldr	x0, [sp, #168]
   12a4c:	bl	4af0 <mpc_clear@plt>
   12a50:	b	139fc <mpc_pow@@Base+0x136c>
   12a54:	ldr	x8, [sp, #216]
   12a58:	ldr	x0, [x8, #328]
   12a5c:	mov	x1, #0x1                   	// #1
   12a60:	mov	x9, xzr
   12a64:	mov	x2, x9
   12a68:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
   12a6c:	cbnz	w0, 12af4 <mpc_pow@@Base+0x464>
   12a70:	ldr	x8, [sp, #216]
   12a74:	ldr	x9, [x8, #320]
   12a78:	ldr	w10, [x9, #8]
   12a7c:	cmp	w10, #0x0
   12a80:	cset	w10, lt  // lt = tstop
   12a84:	and	w10, w10, #0x1
   12a88:	str	w10, [sp, #456]
   12a8c:	ldr	x9, [x8, #328]
   12a90:	ldr	w10, [x9, #40]
   12a94:	cmp	w10, #0x0
   12a98:	cset	w10, lt  // lt = tstop
   12a9c:	and	w10, w10, #0x1
   12aa0:	str	w10, [sp, #452]
   12aa4:	ldr	x0, [x8, #336]
   12aa8:	ldur	w2, [x29, #-36]
   12aac:	mov	x1, #0x1                   	// #1
   12ab0:	bl	4da0 <mpc_set_ui@plt>
   12ab4:	stur	w0, [x29, #-40]
   12ab8:	ldur	w10, [x29, #-36]
   12abc:	asr	w10, w10, #4
   12ac0:	cmp	w10, #0x3
   12ac4:	b.eq	12ad8 <mpc_pow@@Base+0x448>  // b.none
   12ac8:	ldr	w8, [sp, #456]
   12acc:	ldr	w9, [sp, #452]
   12ad0:	cmp	w8, w9
   12ad4:	b.eq	12af0 <mpc_pow@@Base+0x460>  // b.none
   12ad8:	ldr	x8, [sp, #216]
   12adc:	ldr	x0, [x8, #336]
   12ae0:	ldr	x1, [x8, #336]
   12ae4:	mov	w9, wzr
   12ae8:	mov	w2, w9
   12aec:	bl	5060 <mpc_conj@plt>
   12af0:	b	139fc <mpc_pow@@Base+0x136c>
   12af4:	ldur	w8, [x29, #-56]
   12af8:	cbz	w8, 12c8c <mpc_pow@@Base+0x5fc>
   12afc:	ldr	x8, [sp, #216]
   12b00:	ldr	x0, [x8, #320]
   12b04:	bl	4f10 <mpfr_integer_p@plt>
   12b08:	cbnz	w0, 12b24 <mpc_pow@@Base+0x494>
   12b0c:	ldr	x8, [sp, #216]
   12b10:	ldr	x0, [x8, #328]
   12b14:	bl	52f0 <mpfr_sgn@plt>
   12b18:	cmp	w0, #0x0
   12b1c:	cset	w9, lt  // lt = tstop
   12b20:	tbnz	w9, #0, 12c8c <mpc_pow@@Base+0x5fc>
   12b24:	ldr	x8, [sp, #216]
   12b28:	ldr	x9, [x8, #320]
   12b2c:	ldr	w10, [x9, #8]
   12b30:	cmp	w10, #0x0
   12b34:	cset	w10, lt  // lt = tstop
   12b38:	and	w10, w10, #0x1
   12b3c:	str	w10, [sp, #448]
   12b40:	ldr	x9, [x8, #328]
   12b44:	ldr	w10, [x9, #40]
   12b48:	cmp	w10, #0x0
   12b4c:	cset	w10, lt  // lt = tstop
   12b50:	and	w10, w10, #0x1
   12b54:	str	w10, [sp, #444]
   12b58:	ldr	x0, [x8, #336]
   12b5c:	ldr	x1, [x8, #328]
   12b60:	ldr	x2, [x8, #320]
   12b64:	ldur	w10, [x29, #-36]
   12b68:	and	w3, w10, #0xf
   12b6c:	bl	4c70 <mpfr_pow@plt>
   12b70:	stur	w0, [x29, #-40]
   12b74:	ldur	w10, [x29, #-40]
   12b78:	cmp	w10, #0x0
   12b7c:	cset	w10, ge  // ge = tcont
   12b80:	tbnz	w10, #0, 12b90 <mpc_pow@@Base+0x500>
   12b84:	mov	w8, #0x2                   	// #2
   12b88:	str	w8, [sp, #160]
   12b8c:	b	12ba8 <mpc_pow@@Base+0x518>
   12b90:	ldur	w8, [x29, #-40]
   12b94:	mov	w9, wzr
   12b98:	mov	w10, #0x1                   	// #1
   12b9c:	cmp	w8, #0x0
   12ba0:	csel	w8, w9, w10, eq  // eq = none
   12ba4:	str	w8, [sp, #160]
   12ba8:	ldr	w8, [sp, #160]
   12bac:	ldr	x9, [sp, #216]
   12bb0:	ldr	x10, [x9, #336]
   12bb4:	add	x10, x10, #0x20
   12bb8:	str	x10, [x9, #48]
   12bbc:	ldr	x10, [x9, #48]
   12bc0:	mov	w11, #0x1                   	// #1
   12bc4:	str	w11, [x10, #8]
   12bc8:	ldr	x10, [x9, #48]
   12bcc:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   12bd0:	str	x12, [x10, #16]
   12bd4:	str	wzr, [sp, #428]
   12bd8:	ldr	w11, [sp, #428]
   12bdc:	cmp	w11, #0x0
   12be0:	cset	w11, ge  // ge = tcont
   12be4:	str	w8, [sp, #156]
   12be8:	tbnz	w11, #0, 12bf8 <mpc_pow@@Base+0x568>
   12bec:	mov	w8, #0x2                   	// #2
   12bf0:	str	w8, [sp, #152]
   12bf4:	b	12c38 <mpc_pow@@Base+0x5a8>
   12bf8:	ldr	x8, [sp, #216]
   12bfc:	ldr	x9, [x8, #336]
   12c00:	add	x9, x9, #0x20
   12c04:	str	x9, [x8, #32]
   12c08:	ldr	x9, [x8, #32]
   12c0c:	mov	w10, #0x1                   	// #1
   12c10:	str	w10, [x9, #8]
   12c14:	ldr	x9, [x8, #32]
   12c18:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   12c1c:	str	x11, [x9, #16]
   12c20:	mov	w12, wzr
   12c24:	str	wzr, [sp, #412]
   12c28:	ldr	w13, [sp, #412]
   12c2c:	cmp	w13, #0x0
   12c30:	csel	w10, w12, w10, eq  // eq = none
   12c34:	str	w10, [sp, #152]
   12c38:	ldr	w8, [sp, #152]
   12c3c:	ldr	w9, [sp, #156]
   12c40:	orr	w8, w9, w8, lsl #2
   12c44:	stur	w8, [x29, #-40]
   12c48:	ldur	w8, [x29, #-36]
   12c4c:	asr	w8, w8, #4
   12c50:	cmp	w8, #0x3
   12c54:	b.eq	12c68 <mpc_pow@@Base+0x5d8>  // b.none
   12c58:	ldr	w8, [sp, #448]
   12c5c:	ldr	w9, [sp, #444]
   12c60:	cmp	w8, w9
   12c64:	b.eq	12c88 <mpc_pow@@Base+0x5f8>  // b.none
   12c68:	ldr	x8, [sp, #216]
   12c6c:	ldr	x9, [x8, #336]
   12c70:	add	x0, x9, #0x20
   12c74:	ldr	x9, [x8, #336]
   12c78:	add	x1, x9, #0x20
   12c7c:	ldur	w10, [x29, #-36]
   12c80:	asr	w2, w10, #4
   12c84:	bl	4c60 <mpfr_neg@plt>
   12c88:	b	139fc <mpc_pow@@Base+0x136c>
   12c8c:	ldr	x8, [sp, #216]
   12c90:	ldr	x0, [x8, #328]
   12c94:	mov	x1, #0xffffffffffffffff    	// #-1
   12c98:	mov	x9, xzr
   12c9c:	mov	x2, x9
   12ca0:	bl	50e0 <mpfr_cmp_si_2exp@plt>
   12ca4:	cbnz	w0, 12cc0 <mpc_pow@@Base+0x630>
   12ca8:	ldr	x8, [sp, #216]
   12cac:	ldr	x0, [x8, #320]
   12cb0:	bl	4f10 <mpfr_integer_p@plt>
   12cb4:	cbz	w0, 12cc0 <mpc_pow@@Base+0x630>
   12cb8:	mov	w8, #0x1                   	// #1
   12cbc:	stur	w8, [x29, #-60]
   12cc0:	ldr	x8, [sp, #216]
   12cc4:	ldr	x0, [x8, #328]
   12cc8:	bl	52f0 <mpfr_sgn@plt>
   12ccc:	cmp	w0, #0x0
   12cd0:	cset	w9, ge  // ge = tcont
   12cd4:	tbnz	w9, #0, 12d18 <mpc_pow@@Base+0x688>
   12cd8:	ldr	x8, [sp, #216]
   12cdc:	ldr	x0, [x8, #320]
   12ce0:	mov	x1, #0x1                   	// #1
   12ce4:	bl	13a18 <mpc_pow@@Base+0x1388>
   12ce8:	cbz	w0, 12d18 <mpc_pow@@Base+0x688>
   12cec:	ldur	w8, [x29, #-56]
   12cf0:	cbnz	w8, 12d10 <mpc_pow@@Base+0x680>
   12cf4:	ldr	x8, [sp, #216]
   12cf8:	ldr	x0, [x8, #328]
   12cfc:	mov	x1, #0xffffffffffffffff    	// #-1
   12d00:	mov	x9, xzr
   12d04:	mov	x2, x9
   12d08:	bl	50e0 <mpfr_cmp_si_2exp@plt>
   12d0c:	cbnz	w0, 12d18 <mpc_pow@@Base+0x688>
   12d10:	mov	w8, #0x1                   	// #1
   12d14:	stur	w8, [x29, #-64]
   12d18:	b	12e1c <mpc_pow@@Base+0x78c>
   12d1c:	ldr	x8, [sp, #216]
   12d20:	ldr	x0, [x8, #328]
   12d24:	mov	x9, xzr
   12d28:	mov	x1, x9
   12d2c:	mov	x2, #0x1                   	// #1
   12d30:	bl	5410 <mpc_cmp_si_si@plt>
   12d34:	cbz	w0, 12d6c <mpc_pow@@Base+0x6dc>
   12d38:	ldr	x8, [sp, #216]
   12d3c:	ldr	x0, [x8, #328]
   12d40:	mov	x9, xzr
   12d44:	mov	x1, x9
   12d48:	mov	x2, #0xffffffffffffffff    	// #-1
   12d4c:	bl	5410 <mpc_cmp_si_si@plt>
   12d50:	cbz	w0, 12d6c <mpc_pow@@Base+0x6dc>
   12d54:	ldr	x8, [sp, #216]
   12d58:	ldr	x0, [x8, #328]
   12d5c:	bl	52f0 <mpfr_sgn@plt>
   12d60:	cbnz	w0, 12dac <mpc_pow@@Base+0x71c>
   12d64:	ldur	w8, [x29, #-56]
   12d68:	cbz	w8, 12dac <mpc_pow@@Base+0x71c>
   12d6c:	ldr	x8, [sp, #216]
   12d70:	ldr	x0, [x8, #320]
   12d74:	bl	4f10 <mpfr_integer_p@plt>
   12d78:	cbz	w0, 12dac <mpc_pow@@Base+0x71c>
   12d7c:	ldr	x8, [sp, #216]
   12d80:	ldr	x0, [x8, #320]
   12d84:	mov	x9, xzr
   12d88:	mov	x1, x9
   12d8c:	bl	13a18 <mpc_pow@@Base+0x1388>
   12d90:	cbz	w0, 12da0 <mpc_pow@@Base+0x710>
   12d94:	mov	w8, #0x1                   	// #1
   12d98:	stur	w8, [x29, #-64]
   12d9c:	b	12da8 <mpc_pow@@Base+0x718>
   12da0:	mov	w8, #0x1                   	// #1
   12da4:	stur	w8, [x29, #-60]
   12da8:	b	12e1c <mpc_pow@@Base+0x78c>
   12dac:	ldr	x8, [sp, #216]
   12db0:	ldr	x0, [x8, #328]
   12db4:	ldr	x9, [x8, #328]
   12db8:	add	x1, x9, #0x20
   12dbc:	bl	54b0 <mpfr_cmpabs@plt>
   12dc0:	cbnz	w0, 12e1c <mpc_pow@@Base+0x78c>
   12dc4:	ldur	w8, [x29, #-56]
   12dc8:	cbz	w8, 12e1c <mpc_pow@@Base+0x78c>
   12dcc:	ldr	x8, [sp, #216]
   12dd0:	ldr	x0, [x8, #320]
   12dd4:	bl	4f10 <mpfr_integer_p@plt>
   12dd8:	cbz	w0, 12e1c <mpc_pow@@Base+0x78c>
   12ddc:	ldr	x8, [sp, #216]
   12de0:	ldr	x0, [x8, #320]
   12de4:	mov	x9, xzr
   12de8:	mov	x1, x9
   12dec:	bl	13a18 <mpc_pow@@Base+0x1388>
   12df0:	cbnz	w0, 12e1c <mpc_pow@@Base+0x78c>
   12df4:	ldr	x8, [sp, #216]
   12df8:	ldr	x0, [x8, #320]
   12dfc:	mov	x1, #0xffffffffffffffff    	// #-1
   12e00:	bl	13a18 <mpc_pow@@Base+0x1388>
   12e04:	cbz	w0, 12e14 <mpc_pow@@Base+0x784>
   12e08:	mov	w8, #0x1                   	// #1
   12e0c:	stur	w8, [x29, #-64]
   12e10:	b	12e1c <mpc_pow@@Base+0x78c>
   12e14:	mov	w8, #0x1                   	// #1
   12e18:	stur	w8, [x29, #-60]
   12e1c:	ldr	x8, [sp, #216]
   12e20:	ldr	x9, [x8, #336]
   12e24:	ldr	x9, [x9]
   12e28:	str	x9, [x8, #144]
   12e2c:	ldr	x9, [x8, #336]
   12e30:	ldr	x9, [x9, #32]
   12e34:	str	x9, [x8, #136]
   12e38:	ldr	x9, [x8, #144]
   12e3c:	ldr	x10, [x8, #136]
   12e40:	cmp	x9, x10
   12e44:	b.le	12e58 <mpc_pow@@Base+0x7c8>
   12e48:	ldr	x8, [sp, #216]
   12e4c:	ldr	x9, [x8, #144]
   12e50:	str	x9, [sp, #144]
   12e54:	b	12e64 <mpc_pow@@Base+0x7d4>
   12e58:	ldr	x8, [sp, #216]
   12e5c:	ldr	x9, [x8, #136]
   12e60:	str	x9, [sp, #144]
   12e64:	ldr	x8, [sp, #144]
   12e68:	ldr	x9, [sp, #216]
   12e6c:	str	x8, [x9, #152]
   12e70:	ldr	x8, [x9, #152]
   12e74:	add	x8, x8, #0xc
   12e78:	str	x8, [x9, #152]
   12e7c:	ldr	x8, [x9, #152]
   12e80:	cmp	x8, #0x40
   12e84:	b.ge	12e94 <mpc_pow@@Base+0x804>  // b.tcont
   12e88:	mov	x8, #0x40                  	// #64
   12e8c:	ldr	x9, [sp, #216]
   12e90:	str	x8, [x9, #152]
   12e94:	ldr	x8, [sp, #216]
   12e98:	ldr	x1, [x8, #152]
   12e9c:	sub	x0, x29, #0xc0
   12ea0:	bl	4db0 <mpc_init2@plt>
   12ea4:	ldr	x8, [sp, #216]
   12ea8:	ldr	x1, [x8, #152]
   12eac:	sub	x0, x29, #0x80
   12eb0:	bl	4db0 <mpc_init2@plt>
   12eb4:	ldur	w9, [x29, #-36]
   12eb8:	tst	w9, #0xf
   12ebc:	cset	w9, eq  // eq = none
   12ec0:	and	w9, w9, #0x1
   12ec4:	ldr	x8, [sp, #216]
   12ec8:	ldr	x10, [x8, #144]
   12ecc:	add	x10, x10, w9, sxtw
   12ed0:	str	x10, [x8, #144]
   12ed4:	ldur	w9, [x29, #-36]
   12ed8:	asr	w9, w9, #4
   12edc:	cmp	w9, #0x0
   12ee0:	cset	w9, eq  // eq = none
   12ee4:	and	w9, w9, #0x1
   12ee8:	ldr	x10, [x8, #136]
   12eec:	add	x10, x10, w9, sxtw
   12ef0:	str	x10, [x8, #136]
   12ef4:	ldr	x10, [x8, #336]
   12ef8:	ldr	x10, [x10]
   12efc:	ldr	x11, [x8, #336]
   12f00:	ldr	x11, [x11, #32]
   12f04:	cmp	x10, x11
   12f08:	b.le	12f20 <mpc_pow@@Base+0x890>
   12f0c:	ldr	x8, [sp, #216]
   12f10:	ldr	x9, [x8, #336]
   12f14:	ldr	x9, [x9]
   12f18:	str	x9, [sp, #136]
   12f1c:	b	12f30 <mpc_pow@@Base+0x8a0>
   12f20:	ldr	x8, [sp, #216]
   12f24:	ldr	x9, [x8, #336]
   12f28:	ldr	x9, [x9, #32]
   12f2c:	str	x9, [sp, #136]
   12f30:	ldr	x8, [sp, #136]
   12f34:	ldr	x9, [sp, #216]
   12f38:	str	x8, [x9, #128]
   12f3c:	ldr	x8, [x9, #328]
   12f40:	ldr	x8, [x8, #16]
   12f44:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   12f48:	cmp	x8, x10
   12f4c:	cset	w11, eq  // eq = none
   12f50:	and	w11, w11, #0x1
   12f54:	stur	w11, [x29, #-52]
   12f58:	stur	wzr, [x29, #-44]
   12f5c:	ldr	x8, [sp, #216]
   12f60:	ldr	x1, [x8, #328]
   12f64:	sub	x9, x29, #0x80
   12f68:	mov	x0, x9
   12f6c:	mov	w10, wzr
   12f70:	mov	w2, w10
   12f74:	str	x9, [sp, #128]
   12f78:	str	w10, [sp, #124]
   12f7c:	bl	4e90 <mpc_log@plt>
   12f80:	ldr	x8, [sp, #216]
   12f84:	ldr	x2, [x8, #320]
   12f88:	ldr	x9, [sp, #128]
   12f8c:	mov	x0, x9
   12f90:	mov	x1, x9
   12f94:	ldr	w3, [sp, #124]
   12f98:	bl	4fd0 <mpc_mul@plt>
   12f9c:	ldr	x8, [sp, #216]
   12fa0:	ldr	x9, [x8, #240]
   12fa4:	cmp	x9, #0x0
   12fa8:	cset	w10, le
   12fac:	tbnz	w10, #0, 12fc0 <mpc_pow@@Base+0x930>
   12fb0:	ldr	x8, [sp, #216]
   12fb4:	ldr	x9, [x8, #240]
   12fb8:	str	x9, [sp, #112]
   12fbc:	b	12fc8 <mpc_pow@@Base+0x938>
   12fc0:	mov	x8, xzr
   12fc4:	str	x8, [sp, #112]
   12fc8:	ldr	x8, [sp, #112]
   12fcc:	ldr	x9, [sp, #216]
   12fd0:	str	x8, [x9]
   12fd4:	ldr	x8, [x9, #272]
   12fd8:	ldr	x10, [x9]
   12fdc:	cmp	x8, x10
   12fe0:	b.le	12ff0 <mpc_pow@@Base+0x960>
   12fe4:	ldr	x8, [sp, #216]
   12fe8:	ldr	x9, [x8, #272]
   12fec:	str	x9, [x8]
   12ff0:	ldr	x8, [sp, #216]
   12ff4:	ldr	x9, [x8]
   12ff8:	ldr	x10, [x8, #152]
   12ffc:	cmp	x9, x10
   13000:	b.lt	13018 <mpc_pow@@Base+0x988>  // b.tstop
   13004:	ldr	x8, [sp, #216]
   13008:	ldr	x9, [x8, #152]
   1300c:	add	x9, x9, #0x40
   13010:	str	x9, [x8, #152]
   13014:	b	13484 <mpc_pow@@Base+0xdf4>
   13018:	bl	4b30 <mpfr_clear_overflow@plt>
   1301c:	bl	4f00 <mpfr_clear_underflow@plt>
   13020:	sub	x0, x29, #0xc0
   13024:	sub	x1, x29, #0x80
   13028:	mov	w8, wzr
   1302c:	mov	w2, w8
   13030:	bl	53a0 <mpc_exp@plt>
   13034:	str	w0, [sp, #408]
   13038:	bl	53f0 <mpfr_underflow_p@plt>
   1303c:	cbnz	w0, 13048 <mpc_pow@@Base+0x9b8>
   13040:	bl	55d0 <mpfr_overflow_p@plt>
   13044:	cbz	w0, 131cc <mpc_pow@@Base+0xb3c>
   13048:	ldr	x8, [sp, #216]
   1304c:	ldr	x0, [x8, #336]
   13050:	sub	x1, x29, #0xc0
   13054:	mov	w9, wzr
   13058:	mov	w2, w9
   1305c:	bl	5680 <mpc_set@plt>
   13060:	ldr	w9, [sp, #408]
   13064:	stur	w9, [x29, #-40]
   13068:	ldr	w9, [sp, #408]
   1306c:	and	w9, w9, #0x3
   13070:	cmp	w9, #0x2
   13074:	b.ne	13084 <mpc_pow@@Base+0x9f4>  // b.any
   13078:	mov	w8, #0xffffffff            	// #-1
   1307c:	str	w8, [sp, #108]
   13080:	b	1309c <mpc_pow@@Base+0xa0c>
   13084:	ldr	w8, [sp, #408]
   13088:	mov	w9, wzr
   1308c:	mov	w10, #0x1                   	// #1
   13090:	tst	w8, #0x3
   13094:	csel	w8, w9, w10, eq  // eq = none
   13098:	str	w8, [sp, #108]
   1309c:	ldr	w8, [sp, #108]
   130a0:	str	w8, [sp, #380]
   130a4:	ldr	w8, [sp, #408]
   130a8:	asr	w8, w8, #2
   130ac:	cmp	w8, #0x2
   130b0:	b.ne	130c0 <mpc_pow@@Base+0xa30>  // b.any
   130b4:	mov	w8, #0xffffffff            	// #-1
   130b8:	str	w8, [sp, #104]
   130bc:	b	130dc <mpc_pow@@Base+0xa4c>
   130c0:	ldr	w8, [sp, #408]
   130c4:	asr	w8, w8, #2
   130c8:	mov	w9, wzr
   130cc:	mov	w10, #0x1                   	// #1
   130d0:	cmp	w8, #0x0
   130d4:	csel	w8, w9, w10, eq  // eq = none
   130d8:	str	w8, [sp, #104]
   130dc:	ldr	w8, [sp, #104]
   130e0:	str	w8, [sp, #376]
   130e4:	ldr	x9, [sp, #216]
   130e8:	ldr	x10, [x9, #336]
   130ec:	ldr	x10, [x10, #16]
   130f0:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   130f4:	cmp	x10, x11
   130f8:	b.ne	13114 <mpc_pow@@Base+0xa84>  // b.any
   130fc:	ldr	x8, [sp, #216]
   13100:	ldr	x0, [x8, #336]
   13104:	ldur	w9, [x29, #-36]
   13108:	and	w1, w9, #0xf
   1310c:	bl	4eb0 <mpc_fix_inf@plt>
   13110:	str	w0, [sp, #380]
   13114:	ldr	x8, [sp, #216]
   13118:	ldr	x9, [x8, #336]
   1311c:	ldr	x9, [x9, #48]
   13120:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   13124:	cmp	x9, x10
   13128:	b.ne	13148 <mpc_pow@@Base+0xab8>  // b.any
   1312c:	ldr	x8, [sp, #216]
   13130:	ldr	x9, [x8, #336]
   13134:	add	x0, x9, #0x20
   13138:	ldur	w10, [x29, #-36]
   1313c:	asr	w1, w10, #4
   13140:	bl	4eb0 <mpc_fix_inf@plt>
   13144:	str	w0, [sp, #376]
   13148:	ldr	w8, [sp, #380]
   1314c:	cmp	w8, #0x0
   13150:	cset	w8, ge  // ge = tcont
   13154:	tbnz	w8, #0, 13164 <mpc_pow@@Base+0xad4>
   13158:	mov	w8, #0x2                   	// #2
   1315c:	str	w8, [sp, #100]
   13160:	b	1317c <mpc_pow@@Base+0xaec>
   13164:	ldr	w8, [sp, #380]
   13168:	mov	w9, wzr
   1316c:	mov	w10, #0x1                   	// #1
   13170:	cmp	w8, #0x0
   13174:	csel	w8, w9, w10, eq  // eq = none
   13178:	str	w8, [sp, #100]
   1317c:	ldr	w8, [sp, #100]
   13180:	ldr	w9, [sp, #376]
   13184:	cmp	w9, #0x0
   13188:	cset	w9, ge  // ge = tcont
   1318c:	str	w8, [sp, #96]
   13190:	tbnz	w9, #0, 131a0 <mpc_pow@@Base+0xb10>
   13194:	mov	w8, #0x2                   	// #2
   13198:	str	w8, [sp, #92]
   1319c:	b	131b8 <mpc_pow@@Base+0xb28>
   131a0:	ldr	w8, [sp, #376]
   131a4:	mov	w9, wzr
   131a8:	mov	w10, #0x1                   	// #1
   131ac:	cmp	w8, #0x0
   131b0:	csel	w8, w9, w10, eq  // eq = none
   131b4:	str	w8, [sp, #92]
   131b8:	ldr	w8, [sp, #92]
   131bc:	ldr	w9, [sp, #96]
   131c0:	orr	w8, w9, w8, lsl #2
   131c4:	stur	w8, [x29, #-40]
   131c8:	b	139d4 <mpc_pow@@Base+0x1344>
   131cc:	ldr	x8, [sp, #216]
   131d0:	ldr	x9, [x8, #176]
   131d4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   131d8:	cmp	x9, x10
   131dc:	b.ne	131f0 <mpc_pow@@Base+0xb60>  // b.any
   131e0:	ldr	x8, [sp, #216]
   131e4:	ldr	x9, [x8, #208]
   131e8:	str	x9, [sp, #80]
   131ec:	b	131fc <mpc_pow@@Base+0xb6c>
   131f0:	ldr	x8, [sp, #216]
   131f4:	ldr	x9, [x8, #176]
   131f8:	str	x9, [sp, #80]
   131fc:	ldr	x8, [sp, #80]
   13200:	ldr	x9, [sp, #216]
   13204:	str	x8, [x9, #16]
   13208:	ldr	x8, [x9, #208]
   1320c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   13210:	cmp	x8, x10
   13214:	b.ne	13228 <mpc_pow@@Base+0xb98>  // b.any
   13218:	ldr	x8, [sp, #216]
   1321c:	ldr	x9, [x8, #16]
   13220:	str	x9, [sp, #72]
   13224:	b	13234 <mpc_pow@@Base+0xba4>
   13228:	ldr	x8, [sp, #216]
   1322c:	ldr	x9, [x8, #208]
   13230:	str	x9, [sp, #72]
   13234:	ldr	x8, [sp, #72]
   13238:	ldr	x9, [sp, #216]
   1323c:	str	x8, [x9, #8]
   13240:	ldr	x8, [x9, #16]
   13244:	ldr	x10, [x9, #8]
   13248:	cmp	x8, x10
   1324c:	b.le	1326c <mpc_pow@@Base+0xbdc>
   13250:	ldr	x8, [sp, #216]
   13254:	ldr	x9, [x8, #16]
   13258:	ldr	x10, [x8, #8]
   1325c:	subs	x9, x9, x10
   13260:	str	x9, [x8, #8]
   13264:	str	xzr, [x8, #16]
   13268:	b	13284 <mpc_pow@@Base+0xbf4>
   1326c:	ldr	x8, [sp, #216]
   13270:	ldr	x9, [x8, #8]
   13274:	ldr	x10, [x8, #16]
   13278:	subs	x9, x9, x10
   1327c:	str	x9, [x8, #16]
   13280:	str	xzr, [x8, #8]
   13284:	ldur	w8, [x29, #-64]
   13288:	cbnz	w8, 132e4 <mpc_pow@@Base+0xc54>
   1328c:	ldr	x8, [sp, #216]
   13290:	ldr	x9, [x8, #152]
   13294:	ldr	x10, [x8]
   13298:	add	x10, x10, #0x3
   1329c:	ldr	x11, [x8, #16]
   132a0:	add	x10, x10, x11
   132a4:	cmp	x9, x10
   132a8:	b.le	1334c <mpc_pow@@Base+0xcbc>
   132ac:	ldr	x8, [sp, #216]
   132b0:	ldr	x9, [x8, #152]
   132b4:	ldr	x10, [x8]
   132b8:	subs	x9, x9, x10
   132bc:	subs	x9, x9, #0x3
   132c0:	ldr	x10, [x8, #16]
   132c4:	subs	x1, x9, x10
   132c8:	ldr	x4, [x8, #144]
   132cc:	sub	x0, x29, #0xc0
   132d0:	mov	w11, wzr
   132d4:	mov	w2, w11
   132d8:	mov	w3, #0x1                   	// #1
   132dc:	bl	5540 <mpfr_can_round@plt>
   132e0:	cbz	w0, 1334c <mpc_pow@@Base+0xcbc>
   132e4:	ldur	w8, [x29, #-60]
   132e8:	cbnz	w8, 13348 <mpc_pow@@Base+0xcb8>
   132ec:	ldr	x8, [sp, #216]
   132f0:	ldr	x9, [x8, #152]
   132f4:	ldr	x10, [x8]
   132f8:	add	x10, x10, #0x3
   132fc:	ldr	x11, [x8, #8]
   13300:	add	x10, x10, x11
   13304:	cmp	x9, x10
   13308:	b.le	1334c <mpc_pow@@Base+0xcbc>
   1330c:	sub	x8, x29, #0xc0
   13310:	add	x0, x8, #0x20
   13314:	ldr	x8, [sp, #216]
   13318:	ldr	x9, [x8, #152]
   1331c:	ldr	x10, [x8]
   13320:	subs	x9, x9, x10
   13324:	subs	x9, x9, #0x3
   13328:	ldr	x10, [x8, #8]
   1332c:	subs	x1, x9, x10
   13330:	ldr	x4, [x8, #136]
   13334:	mov	w11, wzr
   13338:	mov	w2, w11
   1333c:	mov	w3, #0x1                   	// #1
   13340:	bl	5540 <mpfr_can_round@plt>
   13344:	cbz	w0, 1334c <mpc_pow@@Base+0xcbc>
   13348:	b	134b4 <mpc_pow@@Base+0xe24>
   1334c:	ldur	w8, [x29, #-64]
   13350:	cbnz	w8, 13390 <mpc_pow@@Base+0xd00>
   13354:	sub	x0, x29, #0xc0
   13358:	bl	55c0 <mpfr_number_p@plt>
   1335c:	cbnz	w0, 13390 <mpc_pow@@Base+0xd00>
   13360:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   13364:	ldr	x8, [x8, #4008]
   13368:	ldr	x0, [x8]
   1336c:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   13370:	add	x1, x1, #0x2a0
   13374:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   13378:	add	x2, x2, #0x49d
   1337c:	mov	w3, #0x2d6                 	// #726
   13380:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   13384:	add	x4, x4, #0x4a3
   13388:	bl	56a0 <fprintf@plt>
   1338c:	bl	5100 <abort@plt>
   13390:	ldur	w8, [x29, #-60]
   13394:	cbnz	w8, 133d8 <mpc_pow@@Base+0xd48>
   13398:	sub	x8, x29, #0xc0
   1339c:	add	x0, x8, #0x20
   133a0:	bl	55c0 <mpfr_number_p@plt>
   133a4:	cbnz	w0, 133d8 <mpc_pow@@Base+0xd48>
   133a8:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   133ac:	ldr	x8, [x8, #4008]
   133b0:	ldr	x0, [x8]
   133b4:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   133b8:	add	x1, x1, #0x2a0
   133bc:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   133c0:	add	x2, x2, #0x49d
   133c4:	mov	w3, #0x2d8                 	// #728
   133c8:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   133cc:	add	x4, x4, #0x4cc
   133d0:	bl	56a0 <fprintf@plt>
   133d4:	bl	5100 <abort@plt>
   133d8:	ldur	w8, [x29, #-40]
   133dc:	mov	w9, #0xfffffffe            	// #-2
   133e0:	cmp	w8, w9
   133e4:	b.ne	13468 <mpc_pow@@Base+0xdd8>  // b.any
   133e8:	ldur	w8, [x29, #-56]
   133ec:	cbz	w8, 13444 <mpc_pow@@Base+0xdb4>
   133f0:	ldr	x8, [sp, #216]
   133f4:	ldr	x9, [x8, #128]
   133f8:	mov	x10, #0x2                   	// #2
   133fc:	mul	x9, x9, x10
   13400:	str	x9, [x8, #128]
   13404:	ldr	x0, [x8, #336]
   13408:	ldr	x1, [x8, #328]
   1340c:	ldr	x2, [x8, #320]
   13410:	ldur	w3, [x29, #-36]
   13414:	ldr	x4, [x8, #128]
   13418:	bl	13b90 <mpc_pow@@Base+0x1500>
   1341c:	stur	w0, [x29, #-40]
   13420:	ldur	w11, [x29, #-40]
   13424:	mov	w12, #0xffffffff            	// #-1
   13428:	cmp	w11, w12
   1342c:	b.eq	13444 <mpc_pow@@Base+0xdb4>  // b.none
   13430:	ldur	w8, [x29, #-40]
   13434:	mov	w9, #0xfffffffe            	// #-2
   13438:	cmp	w8, w9
   1343c:	b.eq	13444 <mpc_pow@@Base+0xdb4>  // b.none
   13440:	b	139d4 <mpc_pow@@Base+0x1344>
   13444:	ldr	x8, [sp, #216]
   13448:	ldr	x9, [x8, #16]
   1344c:	ldr	x10, [x8, #8]
   13450:	add	x9, x9, x10
   13454:	add	x9, x9, #0x40
   13458:	ldr	x10, [x8, #152]
   1345c:	add	x9, x10, x9
   13460:	str	x9, [x8, #152]
   13464:	b	13484 <mpc_pow@@Base+0xdf4>
   13468:	ldr	x8, [sp, #216]
   1346c:	ldr	x9, [x8, #152]
   13470:	mov	x10, #0x2                   	// #2
   13474:	sdiv	x9, x9, x10
   13478:	ldr	x10, [x8, #152]
   1347c:	add	x9, x10, x9
   13480:	str	x9, [x8, #152]
   13484:	ldr	x8, [sp, #216]
   13488:	ldr	x1, [x8, #152]
   1348c:	sub	x0, x29, #0x80
   13490:	bl	4cd0 <mpc_set_prec@plt>
   13494:	ldr	x8, [sp, #216]
   13498:	ldr	x1, [x8, #152]
   1349c:	sub	x0, x29, #0xc0
   134a0:	bl	4cd0 <mpc_set_prec@plt>
   134a4:	ldur	w8, [x29, #-44]
   134a8:	add	w8, w8, #0x1
   134ac:	stur	w8, [x29, #-44]
   134b0:	b	12f5c <mpc_pow@@Base+0x8cc>
   134b4:	ldur	w8, [x29, #-60]
   134b8:	cbz	w8, 1380c <mpc_pow@@Base+0x117c>
   134bc:	ldr	x8, [sp, #216]
   134c0:	ldr	x9, [x8, #328]
   134c4:	ldr	w10, [x9, #8]
   134c8:	mov	w11, wzr
   134cc:	cmp	w10, #0x0
   134d0:	cset	w10, lt  // lt = tstop
   134d4:	and	w10, w10, #0x1
   134d8:	str	w10, [sp, #328]
   134dc:	ldr	x9, [x8, #328]
   134e0:	ldr	w10, [x9, #40]
   134e4:	cmp	w10, #0x0
   134e8:	cset	w10, lt  // lt = tstop
   134ec:	and	w10, w10, #0x1
   134f0:	str	w10, [sp, #324]
   134f4:	add	x9, sp, #0x158
   134f8:	mov	x0, x9
   134fc:	str	w11, [sp, #68]
   13500:	str	x9, [sp, #56]
   13504:	bl	4b80 <mpfr_init@plt>
   13508:	ldr	x8, [sp, #216]
   1350c:	ldr	x1, [x8, #328]
   13510:	ldr	x0, [sp, #56]
   13514:	ldr	w2, [sp, #68]
   13518:	bl	4f90 <mpc_norm@plt>
   1351c:	str	w0, [sp, #340]
   13520:	ldr	x0, [sp, #56]
   13524:	mov	x1, #0x1                   	// #1
   13528:	mov	x8, xzr
   1352c:	mov	x2, x8
   13530:	bl	4d70 <mpfr_cmp_ui_2exp@plt>
   13534:	str	w0, [sp, #336]
   13538:	ldr	w10, [sp, #336]
   1353c:	cbnz	w10, 13558 <mpc_pow@@Base+0xec8>
   13540:	ldr	w8, [sp, #340]
   13544:	cbz	w8, 13558 <mpc_pow@@Base+0xec8>
   13548:	ldr	w8, [sp, #340]
   1354c:	mov	w9, wzr
   13550:	subs	w8, w9, w8
   13554:	str	w8, [sp, #336]
   13558:	ldr	w8, [sp, #336]
   1355c:	cmp	w8, #0x0
   13560:	cset	w8, ge  // ge = tcont
   13564:	tbnz	w8, #0, 1358c <mpc_pow@@Base+0xefc>
   13568:	ldr	x8, [sp, #216]
   1356c:	ldr	x9, [x8, #320]
   13570:	ldr	w10, [x9, #40]
   13574:	cmp	w10, #0x0
   13578:	cset	w10, lt  // lt = tstop
   1357c:	and	w10, w10, #0x1
   13580:	mov	w11, #0x1                   	// #1
   13584:	str	w11, [sp, #52]
   13588:	cbz	w10, 135f8 <mpc_pow@@Base+0xf68>
   1358c:	ldr	w8, [sp, #336]
   13590:	cbnz	w8, 135c0 <mpc_pow@@Base+0xf30>
   13594:	ldr	w8, [sp, #324]
   13598:	ldr	x9, [sp, #216]
   1359c:	ldr	x10, [x9, #320]
   135a0:	ldr	w11, [x10, #8]
   135a4:	cmp	w11, #0x0
   135a8:	cset	w11, lt  // lt = tstop
   135ac:	and	w11, w11, #0x1
   135b0:	mov	w12, #0x1                   	// #1
   135b4:	cmp	w8, w11
   135b8:	str	w12, [sp, #52]
   135bc:	b.ne	135f8 <mpc_pow@@Base+0xf68>  // b.any
   135c0:	ldr	w8, [sp, #336]
   135c4:	cmp	w8, #0x0
   135c8:	cset	w8, le
   135cc:	mov	w9, #0x0                   	// #0
   135d0:	str	w9, [sp, #48]
   135d4:	tbnz	w8, #0, 135f0 <mpc_pow@@Base+0xf60>
   135d8:	ldr	x8, [sp, #216]
   135dc:	ldr	x9, [x8, #320]
   135e0:	ldr	w10, [x9, #40]
   135e4:	cmp	w10, #0x0
   135e8:	cset	w10, lt  // lt = tstop
   135ec:	str	w10, [sp, #48]
   135f0:	ldr	w8, [sp, #48]
   135f4:	str	w8, [sp, #52]
   135f8:	ldr	w8, [sp, #52]
   135fc:	and	w8, w8, #0x1
   13600:	str	w8, [sp, #332]
   13604:	ldr	x9, [sp, #216]
   13608:	ldr	x10, [x9, #320]
   1360c:	ldr	x1, [x10]
   13610:	add	x10, sp, #0x158
   13614:	mov	x0, x10
   13618:	str	x10, [sp, #40]
   1361c:	bl	4d40 <mpfr_set_prec@plt>
   13620:	ldr	x9, [sp, #216]
   13624:	ldr	x1, [x9, #320]
   13628:	ldr	x10, [x9, #320]
   1362c:	ldr	w3, [x10, #8]
   13630:	ldr	x0, [sp, #40]
   13634:	mov	w8, wzr
   13638:	mov	w2, w8
   1363c:	bl	52d0 <mpfr_set4@plt>
   13640:	ldr	x9, [sp, #216]
   13644:	ldr	x10, [x9, #336]
   13648:	ldur	w8, [x29, #-36]
   1364c:	and	w2, w8, #0xf
   13650:	sub	x1, x29, #0xc0
   13654:	ldur	w3, [x29, #-184]
   13658:	mov	x0, x10
   1365c:	bl	52d0 <mpfr_set4@plt>
   13660:	stur	w0, [x29, #-40]
   13664:	ldur	w8, [x29, #-56]
   13668:	cbz	w8, 136fc <mpc_pow@@Base+0x106c>
   1366c:	ldur	w8, [x29, #-48]
   13670:	cbnz	w8, 1367c <mpc_pow@@Base+0xfec>
   13674:	ldur	w8, [x29, #-52]
   13678:	cbz	w8, 136fc <mpc_pow@@Base+0x106c>
   1367c:	ldr	x8, [sp, #216]
   13680:	ldr	x9, [x8, #336]
   13684:	add	x9, x9, #0x20
   13688:	str	x9, [sp, #312]
   1368c:	ldr	x9, [sp, #312]
   13690:	mov	w10, #0x1                   	// #1
   13694:	str	w10, [x9, #8]
   13698:	ldr	x9, [sp, #312]
   1369c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   136a0:	str	x11, [x9, #16]
   136a4:	str	wzr, [sp, #308]
   136a8:	ldr	x0, [x8, #336]
   136ac:	ldr	w1, [sp, #328]
   136b0:	ldr	w2, [sp, #324]
   136b4:	add	x3, sp, #0x158
   136b8:	bl	14708 <mpc_pow@@Base+0x2078>
   136bc:	ldur	w10, [x29, #-40]
   136c0:	cmp	w10, #0x0
   136c4:	cset	w10, ge  // ge = tcont
   136c8:	tbnz	w10, #0, 136d8 <mpc_pow@@Base+0x1048>
   136cc:	mov	w8, #0x2                   	// #2
   136d0:	str	w8, [sp, #36]
   136d4:	b	136f0 <mpc_pow@@Base+0x1060>
   136d8:	ldur	w8, [x29, #-40]
   136dc:	mov	w9, wzr
   136e0:	mov	w10, #0x1                   	// #1
   136e4:	cmp	w8, #0x0
   136e8:	csel	w8, w9, w10, eq  // eq = none
   136ec:	str	w8, [sp, #36]
   136f0:	ldr	w8, [sp, #36]
   136f4:	stur	w8, [x29, #-40]
   136f8:	b	13800 <mpc_pow@@Base+0x1170>
   136fc:	ldur	w8, [x29, #-40]
   13700:	cmp	w8, #0x0
   13704:	cset	w8, ge  // ge = tcont
   13708:	tbnz	w8, #0, 13718 <mpc_pow@@Base+0x1088>
   1370c:	mov	w8, #0x2                   	// #2
   13710:	str	w8, [sp, #32]
   13714:	b	13730 <mpc_pow@@Base+0x10a0>
   13718:	ldur	w8, [x29, #-40]
   1371c:	mov	w9, wzr
   13720:	mov	w10, #0x1                   	// #1
   13724:	cmp	w8, #0x0
   13728:	csel	w8, w9, w10, eq  // eq = none
   1372c:	str	w8, [sp, #32]
   13730:	ldr	w8, [sp, #32]
   13734:	ldr	x9, [sp, #216]
   13738:	ldr	x10, [x9, #336]
   1373c:	add	x10, x10, #0x20
   13740:	str	x10, [sp, #296]
   13744:	ldr	x10, [sp, #296]
   13748:	mov	w11, #0x1                   	// #1
   1374c:	str	w11, [x10, #8]
   13750:	ldr	x10, [sp, #296]
   13754:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   13758:	str	x12, [x10, #16]
   1375c:	str	wzr, [sp, #292]
   13760:	ldr	w11, [sp, #292]
   13764:	cmp	w11, #0x0
   13768:	cset	w11, ge  // ge = tcont
   1376c:	str	w8, [sp, #28]
   13770:	tbnz	w11, #0, 13780 <mpc_pow@@Base+0x10f0>
   13774:	mov	w8, #0x2                   	// #2
   13778:	str	w8, [sp, #24]
   1377c:	b	137c0 <mpc_pow@@Base+0x1130>
   13780:	ldr	x8, [sp, #216]
   13784:	ldr	x9, [x8, #336]
   13788:	add	x9, x9, #0x20
   1378c:	str	x9, [sp, #280]
   13790:	ldr	x9, [sp, #280]
   13794:	mov	w10, #0x1                   	// #1
   13798:	str	w10, [x9, #8]
   1379c:	ldr	x9, [sp, #280]
   137a0:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   137a4:	str	x11, [x9, #16]
   137a8:	mov	w12, wzr
   137ac:	str	wzr, [sp, #276]
   137b0:	ldr	w13, [sp, #276]
   137b4:	cmp	w13, #0x0
   137b8:	csel	w10, w12, w10, eq  // eq = none
   137bc:	str	w10, [sp, #24]
   137c0:	ldr	w8, [sp, #24]
   137c4:	ldr	w9, [sp, #28]
   137c8:	orr	w8, w9, w8, lsl #2
   137cc:	stur	w8, [x29, #-40]
   137d0:	ldur	w8, [x29, #-36]
   137d4:	asr	w8, w8, #4
   137d8:	cmp	w8, #0x3
   137dc:	b.eq	137e8 <mpc_pow@@Base+0x1158>  // b.none
   137e0:	ldr	w8, [sp, #332]
   137e4:	cbz	w8, 13800 <mpc_pow@@Base+0x1170>
   137e8:	ldr	x8, [sp, #216]
   137ec:	ldr	x0, [x8, #336]
   137f0:	ldr	x1, [x8, #336]
   137f4:	mov	w9, wzr
   137f8:	mov	w2, w9
   137fc:	bl	5060 <mpc_conj@plt>
   13800:	add	x0, sp, #0x158
   13804:	bl	4e30 <mpfr_clear@plt>
   13808:	b	139d4 <mpc_pow@@Base+0x1344>
   1380c:	ldur	w8, [x29, #-64]
   13810:	cbz	w8, 139bc <mpc_pow@@Base+0x132c>
   13814:	ldr	x8, [sp, #216]
   13818:	ldr	x9, [x8, #336]
   1381c:	add	x0, x9, #0x20
   13820:	sub	x9, x29, #0xc0
   13824:	add	x1, x9, #0x20
   13828:	ldur	w10, [x29, #-36]
   1382c:	asr	w2, w10, #4
   13830:	ldur	w3, [x29, #-152]
   13834:	bl	52d0 <mpfr_set4@plt>
   13838:	stur	w0, [x29, #-40]
   1383c:	ldur	w10, [x29, #-56]
   13840:	cbz	w10, 138ec <mpc_pow@@Base+0x125c>
   13844:	ldur	w8, [x29, #-52]
   13848:	cbz	w8, 138ec <mpc_pow@@Base+0x125c>
   1384c:	ldr	x8, [sp, #216]
   13850:	ldr	x9, [x8, #328]
   13854:	ldr	w10, [x9, #8]
   13858:	mov	w11, wzr
   1385c:	cmp	w10, #0x0
   13860:	cset	w10, lt  // lt = tstop
   13864:	and	w10, w10, #0x1
   13868:	str	w10, [sp, #272]
   1386c:	ldr	x9, [x8, #336]
   13870:	str	x9, [sp, #264]
   13874:	ldr	x9, [sp, #264]
   13878:	mov	w10, #0x1                   	// #1
   1387c:	str	w10, [x9, #8]
   13880:	ldr	x9, [sp, #264]
   13884:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   13888:	str	x12, [x9, #16]
   1388c:	str	wzr, [sp, #260]
   13890:	ldr	x0, [x8, #336]
   13894:	ldr	w1, [sp, #272]
   13898:	ldr	x3, [x8, #320]
   1389c:	mov	w2, w11
   138a0:	bl	14708 <mpc_pow@@Base+0x2078>
   138a4:	ldur	w10, [x29, #-40]
   138a8:	cmp	w10, #0x0
   138ac:	cset	w10, ge  // ge = tcont
   138b0:	tbnz	w10, #0, 138c0 <mpc_pow@@Base+0x1230>
   138b4:	mov	w8, #0x2                   	// #2
   138b8:	str	w8, [sp, #20]
   138bc:	b	138d8 <mpc_pow@@Base+0x1248>
   138c0:	ldur	w8, [x29, #-40]
   138c4:	mov	w9, wzr
   138c8:	mov	w10, #0x1                   	// #1
   138cc:	cmp	w8, #0x0
   138d0:	csel	w8, w9, w10, eq  // eq = none
   138d4:	str	w8, [sp, #20]
   138d8:	ldr	w8, [sp, #20]
   138dc:	mov	w9, wzr
   138e0:	orr	w8, w9, w8, lsl #2
   138e4:	stur	w8, [x29, #-40]
   138e8:	b	139b8 <mpc_pow@@Base+0x1328>
   138ec:	ldr	x8, [sp, #216]
   138f0:	ldr	x9, [x8, #336]
   138f4:	str	x9, [sp, #248]
   138f8:	ldr	x9, [sp, #248]
   138fc:	mov	w10, #0x1                   	// #1
   13900:	str	w10, [x9, #8]
   13904:	ldr	x9, [sp, #248]
   13908:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   1390c:	str	x11, [x9, #16]
   13910:	str	wzr, [sp, #244]
   13914:	ldr	w10, [sp, #244]
   13918:	cmp	w10, #0x0
   1391c:	cset	w10, ge  // ge = tcont
   13920:	tbnz	w10, #0, 13930 <mpc_pow@@Base+0x12a0>
   13924:	mov	w8, #0x2                   	// #2
   13928:	str	w8, [sp, #16]
   1392c:	b	1396c <mpc_pow@@Base+0x12dc>
   13930:	ldr	x8, [sp, #216]
   13934:	ldr	x9, [x8, #336]
   13938:	str	x9, [sp, #232]
   1393c:	ldr	x9, [sp, #232]
   13940:	mov	w10, #0x1                   	// #1
   13944:	str	w10, [x9, #8]
   13948:	ldr	x9, [sp, #232]
   1394c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   13950:	str	x11, [x9, #16]
   13954:	mov	w12, wzr
   13958:	str	wzr, [sp, #228]
   1395c:	ldr	w13, [sp, #228]
   13960:	cmp	w13, #0x0
   13964:	csel	w10, w12, w10, eq  // eq = none
   13968:	str	w10, [sp, #16]
   1396c:	ldr	w8, [sp, #16]
   13970:	ldur	w9, [x29, #-40]
   13974:	cmp	w9, #0x0
   13978:	cset	w9, ge  // ge = tcont
   1397c:	str	w8, [sp, #12]
   13980:	tbnz	w9, #0, 13990 <mpc_pow@@Base+0x1300>
   13984:	mov	w8, #0x2                   	// #2
   13988:	str	w8, [sp, #8]
   1398c:	b	139a8 <mpc_pow@@Base+0x1318>
   13990:	ldur	w8, [x29, #-40]
   13994:	mov	w9, wzr
   13998:	mov	w10, #0x1                   	// #1
   1399c:	cmp	w8, #0x0
   139a0:	csel	w8, w9, w10, eq  // eq = none
   139a4:	str	w8, [sp, #8]
   139a8:	ldr	w8, [sp, #8]
   139ac:	ldr	w9, [sp, #12]
   139b0:	orr	w8, w9, w8, lsl #2
   139b4:	stur	w8, [x29, #-40]
   139b8:	b	139d4 <mpc_pow@@Base+0x1344>
   139bc:	ldr	x8, [sp, #216]
   139c0:	ldr	x0, [x8, #336]
   139c4:	ldur	w2, [x29, #-36]
   139c8:	sub	x1, x29, #0xc0
   139cc:	bl	5680 <mpc_set@plt>
   139d0:	stur	w0, [x29, #-40]
   139d4:	sub	x0, x29, #0x80
   139d8:	bl	4af0 <mpc_clear@plt>
   139dc:	sub	x0, x29, #0xc0
   139e0:	bl	4af0 <mpc_clear@plt>
   139e4:	ldur	w8, [x29, #-228]
   139e8:	cbz	w8, 139f0 <mpc_pow@@Base+0x1360>
   139ec:	bl	4a60 <mpfr_set_underflow@plt>
   139f0:	ldur	w8, [x29, #-232]
   139f4:	cbz	w8, 139fc <mpc_pow@@Base+0x136c>
   139f8:	bl	5580 <mpfr_set_overflow@plt>
   139fc:	ldur	w8, [x29, #-40]
   13a00:	stur	w8, [x29, #-4]
   13a04:	ldur	w0, [x29, #-4]
   13a08:	add	sp, sp, #0x2e0
   13a0c:	ldr	x28, [sp, #16]
   13a10:	ldp	x29, x30, [sp], #32
   13a14:	ret
   13a18:	sub	sp, sp, #0x40
   13a1c:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   13a20:	ldr	x8, [x8, #4056]
   13a24:	str	x0, [sp, #48]
   13a28:	str	x1, [sp, #40]
   13a2c:	ldr	x9, [sp, #48]
   13a30:	ldr	x9, [x9, #16]
   13a34:	ldr	x10, [sp, #40]
   13a38:	add	x9, x9, x10
   13a3c:	str	x9, [sp, #32]
   13a40:	ldr	x9, [sp, #32]
   13a44:	cmp	x9, #0x0
   13a48:	cset	w11, gt
   13a4c:	str	x8, [sp]
   13a50:	tbnz	w11, #0, 13a5c <mpc_pow@@Base+0x13cc>
   13a54:	str	wzr, [sp, #60]
   13a58:	b	13b84 <mpc_pow@@Base+0x14f4>
   13a5c:	ldr	x8, [sp, #48]
   13a60:	ldr	x8, [x8]
   13a64:	str	x8, [sp, #24]
   13a68:	ldr	x8, [sp, #32]
   13a6c:	ldr	x9, [sp, #24]
   13a70:	cmp	x8, x9
   13a74:	b.le	13a80 <mpc_pow@@Base+0x13f0>
   13a78:	str	wzr, [sp, #60]
   13a7c:	b	13b84 <mpc_pow@@Base+0x14f4>
   13a80:	ldr	x8, [sp, #24]
   13a84:	subs	x8, x8, #0x1
   13a88:	ldr	x9, [sp]
   13a8c:	ldrsw	x10, [x9]
   13a90:	sdiv	x8, x8, x10
   13a94:	add	x8, x8, #0x1
   13a98:	ldrsw	x10, [x9]
   13a9c:	mul	x8, x8, x10
   13aa0:	ldr	x10, [sp, #32]
   13aa4:	subs	x8, x8, x10
   13aa8:	str	x8, [sp, #24]
   13aac:	ldr	x8, [sp, #24]
   13ab0:	ldrsw	x10, [x9]
   13ab4:	sdiv	x8, x8, x10
   13ab8:	str	x8, [sp, #16]
   13abc:	ldr	x8, [sp, #48]
   13ac0:	ldr	x8, [x8, #24]
   13ac4:	str	x8, [sp, #8]
   13ac8:	ldr	x8, [sp, #32]
   13acc:	ldrsw	x10, [x9]
   13ad0:	sdiv	x11, x8, x10
   13ad4:	mul	x10, x11, x10
   13ad8:	subs	x8, x8, x10
   13adc:	cbnz	x8, 13af8 <mpc_pow@@Base+0x1468>
   13ae0:	ldr	x8, [sp, #8]
   13ae4:	ldr	x9, [sp, #16]
   13ae8:	ldr	x8, [x8, x9, lsl #3]
   13aec:	and	x8, x8, #0x1
   13af0:	cbz	x8, 13b40 <mpc_pow@@Base+0x14b0>
   13af4:	b	13b48 <mpc_pow@@Base+0x14b8>
   13af8:	ldr	x8, [sp, #8]
   13afc:	ldr	x9, [sp, #16]
   13b00:	ldr	x8, [x8, x9, lsl #3]
   13b04:	ldr	x9, [sp, #32]
   13b08:	ldr	x10, [sp]
   13b0c:	ldrsw	x11, [x10]
   13b10:	sdiv	x12, x9, x11
   13b14:	mul	x11, x12, x11
   13b18:	subs	x9, x9, x11
   13b1c:	mov	x11, #0x1                   	// #1
   13b20:	subs	x9, x9, #0x1
   13b24:	lsl	x8, x8, x9
   13b28:	ldr	w13, [x10]
   13b2c:	subs	w13, w13, #0x1
   13b30:	mov	w9, w13
   13b34:	lsl	x9, x11, x9
   13b38:	cmp	x8, x9
   13b3c:	b.eq	13b48 <mpc_pow@@Base+0x14b8>  // b.none
   13b40:	str	wzr, [sp, #60]
   13b44:	b	13b84 <mpc_pow@@Base+0x14f4>
   13b48:	ldr	x8, [sp, #16]
   13b4c:	subs	x8, x8, #0x1
   13b50:	str	x8, [sp, #16]
   13b54:	cmp	x8, #0x0
   13b58:	cset	w9, lt  // lt = tstop
   13b5c:	tbnz	w9, #0, 13b7c <mpc_pow@@Base+0x14ec>
   13b60:	ldr	x8, [sp, #8]
   13b64:	ldr	x9, [sp, #16]
   13b68:	ldr	x8, [x8, x9, lsl #3]
   13b6c:	cbz	x8, 13b78 <mpc_pow@@Base+0x14e8>
   13b70:	str	wzr, [sp, #60]
   13b74:	b	13b84 <mpc_pow@@Base+0x14f4>
   13b78:	b	13b48 <mpc_pow@@Base+0x14b8>
   13b7c:	mov	w8, #0x1                   	// #1
   13b80:	str	w8, [sp, #60]
   13b84:	ldr	w0, [sp, #60]
   13b88:	add	sp, sp, #0x40
   13b8c:	ret
   13b90:	stp	x29, x30, [sp, #-32]!
   13b94:	str	x28, [sp, #16]
   13b98:	mov	x29, sp
   13b9c:	sub	sp, sp, #0x230
   13ba0:	mov	w8, #0xfffffffe            	// #-2
   13ba4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   13ba8:	stur	x0, [x29, #-8]
   13bac:	stur	x1, [x29, #-16]
   13bb0:	stur	x2, [x29, #-24]
   13bb4:	stur	w3, [x29, #-28]
   13bb8:	stur	x4, [x29, #-40]
   13bbc:	stur	w8, [x29, #-172]
   13bc0:	ldur	x10, [x29, #-16]
   13bc4:	ldr	w8, [x10, #8]
   13bc8:	cmp	w8, #0x0
   13bcc:	cset	w8, lt  // lt = tstop
   13bd0:	and	w8, w8, #0x1
   13bd4:	stur	w8, [x29, #-176]
   13bd8:	ldur	x10, [x29, #-16]
   13bdc:	ldr	w8, [x10, #40]
   13be0:	cmp	w8, #0x0
   13be4:	cset	w8, lt  // lt = tstop
   13be8:	and	w8, w8, #0x1
   13bec:	stur	w8, [x29, #-180]
   13bf0:	ldur	x10, [x29, #-16]
   13bf4:	ldr	x10, [x10, #16]
   13bf8:	cmp	x10, x9
   13bfc:	cset	w8, eq  // eq = none
   13c00:	and	w8, w8, #0x1
   13c04:	stur	w8, [x29, #-184]
   13c08:	stur	wzr, [x29, #-188]
   13c0c:	ldur	x9, [x29, #-8]
   13c10:	ldur	x10, [x29, #-24]
   13c14:	cmp	x9, x10
   13c18:	b.eq	13c30 <mpc_pow@@Base+0x15a0>  // b.none
   13c1c:	ldur	x8, [x29, #-8]
   13c20:	add	x8, x8, #0x20
   13c24:	ldur	x9, [x29, #-24]
   13c28:	cmp	x8, x9
   13c2c:	b.ne	13c6c <mpc_pow@@Base+0x15dc>  // b.any
   13c30:	mov	w8, #0x1                   	// #1
   13c34:	stur	w8, [x29, #-188]
   13c38:	ldur	x9, [x29, #-24]
   13c3c:	ldr	x1, [x9]
   13c40:	sub	x9, x29, #0xe0
   13c44:	mov	x0, x9
   13c48:	str	x9, [sp, #288]
   13c4c:	bl	5530 <mpfr_init2@plt>
   13c50:	ldur	x1, [x29, #-24]
   13c54:	ldur	x9, [x29, #-24]
   13c58:	ldr	w3, [x9, #8]
   13c5c:	ldr	x0, [sp, #288]
   13c60:	mov	w8, wzr
   13c64:	mov	w2, w8
   13c68:	bl	52d0 <mpfr_set4@plt>
   13c6c:	sub	x8, x29, #0x50
   13c70:	mov	x0, x8
   13c74:	str	x8, [sp, #280]
   13c78:	bl	5590 <__gmpz_init@plt>
   13c7c:	sub	x0, x29, #0x60
   13c80:	bl	5590 <__gmpz_init@plt>
   13c84:	sub	x0, x29, #0x70
   13c88:	bl	5590 <__gmpz_init@plt>
   13c8c:	sub	x0, x29, #0x80
   13c90:	bl	5590 <__gmpz_init@plt>
   13c94:	sub	x0, x29, #0x90
   13c98:	bl	5590 <__gmpz_init@plt>
   13c9c:	sub	x0, x29, #0xa0
   13ca0:	bl	5590 <__gmpz_init@plt>
   13ca4:	ldur	x1, [x29, #-24]
   13ca8:	ldr	x0, [sp, #280]
   13cac:	bl	5560 <mpfr_get_z_2exp@plt>
   13cb0:	stur	x0, [x29, #-64]
   13cb4:	ldr	x0, [sp, #280]
   13cb8:	mov	x8, xzr
   13cbc:	mov	x1, x8
   13cc0:	bl	4ad0 <__gmpz_scan1@plt>
   13cc4:	stur	x0, [x29, #-168]
   13cc8:	ldur	x8, [x29, #-168]
   13ccc:	ldur	x9, [x29, #-64]
   13cd0:	add	x8, x9, x8
   13cd4:	stur	x8, [x29, #-64]
   13cd8:	ldur	x2, [x29, #-168]
   13cdc:	ldr	x0, [sp, #280]
   13ce0:	ldr	x1, [sp, #280]
   13ce4:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   13ce8:	ldur	w10, [x29, #-184]
   13cec:	cbz	w10, 13d08 <mpc_pow@@Base+0x1678>
   13cf0:	sub	x0, x29, #0x80
   13cf4:	mov	x8, xzr
   13cf8:	mov	x1, x8
   13cfc:	bl	4bf0 <__gmpz_set_ui@plt>
   13d00:	stur	xzr, [x29, #-48]
   13d04:	b	13d18 <mpc_pow@@Base+0x1688>
   13d08:	ldur	x1, [x29, #-16]
   13d0c:	sub	x0, x29, #0x80
   13d10:	bl	5560 <mpfr_get_z_2exp@plt>
   13d14:	stur	x0, [x29, #-48]
   13d18:	ldur	x8, [x29, #-16]
   13d1c:	ldr	x8, [x8, #48]
   13d20:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   13d24:	cmp	x8, x9
   13d28:	b.ne	13d48 <mpc_pow@@Base+0x16b8>  // b.any
   13d2c:	sub	x0, x29, #0x90
   13d30:	mov	x8, xzr
   13d34:	mov	x1, x8
   13d38:	bl	4bf0 <__gmpz_set_ui@plt>
   13d3c:	ldur	x8, [x29, #-48]
   13d40:	stur	x8, [x29, #-56]
   13d44:	b	13d6c <mpc_pow@@Base+0x16dc>
   13d48:	ldur	x8, [x29, #-16]
   13d4c:	add	x1, x8, #0x20
   13d50:	sub	x0, x29, #0x90
   13d54:	bl	5560 <mpfr_get_z_2exp@plt>
   13d58:	stur	x0, [x29, #-56]
   13d5c:	ldur	w9, [x29, #-184]
   13d60:	cbz	w9, 13d6c <mpc_pow@@Base+0x16dc>
   13d64:	ldur	x8, [x29, #-56]
   13d68:	stur	x8, [x29, #-48]
   13d6c:	ldur	x8, [x29, #-48]
   13d70:	ldur	x9, [x29, #-56]
   13d74:	cmp	x8, x9
   13d78:	b.ge	13dbc <mpc_pow@@Base+0x172c>  // b.tcont
   13d7c:	ldur	x8, [x29, #-56]
   13d80:	ldur	x9, [x29, #-48]
   13d84:	subs	x2, x8, x9
   13d88:	sub	x8, x29, #0x90
   13d8c:	mov	x0, x8
   13d90:	mov	x1, x8
   13d94:	str	x8, [sp, #272]
   13d98:	bl	4f80 <__gmpz_mul_2exp@plt>
   13d9c:	ldr	x0, [sp, #272]
   13da0:	mov	w1, #0x2                   	// #2
   13da4:	bl	55a0 <__gmpz_sizeinbase@plt>
   13da8:	ldur	x8, [x29, #-40]
   13dac:	cmp	x0, x8
   13db0:	b.le	13db8 <mpc_pow@@Base+0x1728>
   13db4:	b	14650 <mpc_pow@@Base+0x1fc0>
   13db8:	b	13e10 <mpc_pow@@Base+0x1780>
   13dbc:	ldur	x8, [x29, #-56]
   13dc0:	ldur	x9, [x29, #-48]
   13dc4:	cmp	x8, x9
   13dc8:	b.ge	13e10 <mpc_pow@@Base+0x1780>  // b.tcont
   13dcc:	ldur	x8, [x29, #-48]
   13dd0:	ldur	x9, [x29, #-56]
   13dd4:	subs	x2, x8, x9
   13dd8:	sub	x8, x29, #0x80
   13ddc:	mov	x0, x8
   13de0:	mov	x1, x8
   13de4:	str	x8, [sp, #264]
   13de8:	bl	4f80 <__gmpz_mul_2exp@plt>
   13dec:	ldr	x0, [sp, #264]
   13df0:	mov	w1, #0x2                   	// #2
   13df4:	bl	55a0 <__gmpz_sizeinbase@plt>
   13df8:	ldur	x8, [x29, #-40]
   13dfc:	cmp	x0, x8
   13e00:	b.le	13e08 <mpc_pow@@Base+0x1778>
   13e04:	b	14650 <mpc_pow@@Base+0x1fc0>
   13e08:	ldur	x8, [x29, #-56]
   13e0c:	stur	x8, [x29, #-48]
   13e10:	ldur	w8, [x29, #-124]
   13e14:	cmp	w8, #0x0
   13e18:	cset	w8, ge  // ge = tcont
   13e1c:	tbnz	w8, #0, 13e2c <mpc_pow@@Base+0x179c>
   13e20:	mov	w8, #0xffffffff            	// #-1
   13e24:	str	w8, [sp, #260]
   13e28:	b	13e40 <mpc_pow@@Base+0x17b0>
   13e2c:	ldur	w8, [x29, #-124]
   13e30:	cmp	w8, #0x0
   13e34:	cset	w8, gt
   13e38:	and	w8, w8, #0x1
   13e3c:	str	w8, [sp, #260]
   13e40:	ldr	w8, [sp, #260]
   13e44:	cbnz	w8, 13e88 <mpc_pow@@Base+0x17f8>
   13e48:	sub	x8, x29, #0x90
   13e4c:	mov	x0, x8
   13e50:	mov	x9, xzr
   13e54:	mov	x1, x9
   13e58:	str	x8, [sp, #248]
   13e5c:	bl	4ad0 <__gmpz_scan1@plt>
   13e60:	stur	x0, [x29, #-168]
   13e64:	ldur	x2, [x29, #-168]
   13e68:	ldr	x0, [sp, #248]
   13e6c:	ldr	x1, [sp, #248]
   13e70:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   13e74:	ldur	x8, [x29, #-168]
   13e78:	ldur	x9, [x29, #-48]
   13e7c:	add	x8, x9, x8
   13e80:	stur	x8, [x29, #-48]
   13e84:	b	13f78 <mpc_pow@@Base+0x18e8>
   13e88:	ldur	w8, [x29, #-140]
   13e8c:	cmp	w8, #0x0
   13e90:	cset	w8, ge  // ge = tcont
   13e94:	tbnz	w8, #0, 13ea4 <mpc_pow@@Base+0x1814>
   13e98:	mov	w8, #0xffffffff            	// #-1
   13e9c:	str	w8, [sp, #244]
   13ea0:	b	13eb8 <mpc_pow@@Base+0x1828>
   13ea4:	ldur	w8, [x29, #-140]
   13ea8:	cmp	w8, #0x0
   13eac:	cset	w8, gt
   13eb0:	and	w8, w8, #0x1
   13eb4:	str	w8, [sp, #244]
   13eb8:	ldr	w8, [sp, #244]
   13ebc:	cbnz	w8, 13f00 <mpc_pow@@Base+0x1870>
   13ec0:	sub	x8, x29, #0x80
   13ec4:	mov	x0, x8
   13ec8:	mov	x9, xzr
   13ecc:	mov	x1, x9
   13ed0:	str	x8, [sp, #232]
   13ed4:	bl	4ad0 <__gmpz_scan1@plt>
   13ed8:	stur	x0, [x29, #-168]
   13edc:	ldur	x2, [x29, #-168]
   13ee0:	ldr	x0, [sp, #232]
   13ee4:	ldr	x1, [sp, #232]
   13ee8:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   13eec:	ldur	x8, [x29, #-168]
   13ef0:	ldur	x9, [x29, #-48]
   13ef4:	add	x8, x9, x8
   13ef8:	stur	x8, [x29, #-48]
   13efc:	b	13f78 <mpc_pow@@Base+0x18e8>
   13f00:	sub	x0, x29, #0x80
   13f04:	mov	x8, xzr
   13f08:	mov	x1, x8
   13f0c:	str	x8, [sp, #224]
   13f10:	bl	4ad0 <__gmpz_scan1@plt>
   13f14:	stur	x0, [x29, #-168]
   13f18:	sub	x0, x29, #0x90
   13f1c:	ldr	x1, [sp, #224]
   13f20:	bl	4ad0 <__gmpz_scan1@plt>
   13f24:	stur	x0, [x29, #-232]
   13f28:	ldur	x8, [x29, #-232]
   13f2c:	ldur	x9, [x29, #-168]
   13f30:	cmp	x8, x9
   13f34:	b.cs	13f40 <mpc_pow@@Base+0x18b0>  // b.hs, b.nlast
   13f38:	ldur	x8, [x29, #-232]
   13f3c:	stur	x8, [x29, #-168]
   13f40:	ldur	x2, [x29, #-168]
   13f44:	sub	x8, x29, #0x80
   13f48:	mov	x0, x8
   13f4c:	mov	x1, x8
   13f50:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   13f54:	ldur	x2, [x29, #-168]
   13f58:	sub	x8, x29, #0x90
   13f5c:	mov	x0, x8
   13f60:	mov	x1, x8
   13f64:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   13f68:	ldur	x8, [x29, #-168]
   13f6c:	ldur	x9, [x29, #-48]
   13f70:	add	x8, x9, x8
   13f74:	stur	x8, [x29, #-48]
   13f78:	ldur	x8, [x29, #-64]
   13f7c:	cmp	x8, #0x0
   13f80:	cset	w9, ge  // ge = tcont
   13f84:	tbnz	w9, #0, 14024 <mpc_pow@@Base+0x1994>
   13f88:	ldur	x8, [x29, #-48]
   13f8c:	and	x8, x8, #0x1
   13f90:	cbz	x8, 13fd0 <mpc_pow@@Base+0x1940>
   13f94:	sub	x8, x29, #0x80
   13f98:	mov	x0, x8
   13f9c:	mov	x1, x8
   13fa0:	mov	x8, #0x1                   	// #1
   13fa4:	mov	x2, x8
   13fa8:	str	x8, [sp, #216]
   13fac:	bl	4f80 <__gmpz_mul_2exp@plt>
   13fb0:	sub	x8, x29, #0x90
   13fb4:	mov	x0, x8
   13fb8:	mov	x1, x8
   13fbc:	ldr	x2, [sp, #216]
   13fc0:	bl	4f80 <__gmpz_mul_2exp@plt>
   13fc4:	ldur	x8, [x29, #-48]
   13fc8:	subs	x8, x8, #0x1
   13fcc:	stur	x8, [x29, #-48]
   13fd0:	sub	x0, x29, #0x60
   13fd4:	sub	x1, x29, #0x70
   13fd8:	sub	x2, x29, #0x80
   13fdc:	sub	x3, x29, #0x90
   13fe0:	bl	149b4 <mpc_pow@@Base+0x2324>
   13fe4:	cbnz	w0, 13fec <mpc_pow@@Base+0x195c>
   13fe8:	b	14024 <mpc_pow@@Base+0x1994>
   13fec:	sub	x0, x29, #0x60
   13ff0:	sub	x1, x29, #0x80
   13ff4:	bl	4e80 <__gmpz_swap@plt>
   13ff8:	sub	x0, x29, #0x70
   13ffc:	sub	x1, x29, #0x90
   14000:	bl	4e80 <__gmpz_swap@plt>
   14004:	ldur	x8, [x29, #-48]
   14008:	mov	x9, #0x2                   	// #2
   1400c:	sdiv	x8, x8, x9
   14010:	stur	x8, [x29, #-48]
   14014:	ldur	x8, [x29, #-64]
   14018:	add	x8, x8, #0x1
   1401c:	stur	x8, [x29, #-64]
   14020:	b	13f78 <mpc_pow@@Base+0x18e8>
   14024:	ldur	x8, [x29, #-64]
   14028:	cmp	x8, #0x0
   1402c:	cset	w9, ge  // ge = tcont
   14030:	tbnz	w9, #0, 14040 <mpc_pow@@Base+0x19b0>
   14034:	mov	w8, #0xffffffff            	// #-1
   14038:	stur	w8, [x29, #-172]
   1403c:	b	14650 <mpc_pow@@Base+0x1fc0>
   14040:	ldur	w8, [x29, #-76]
   14044:	cmp	w8, #0x0
   14048:	cset	w8, ge  // ge = tcont
   1404c:	tbnz	w8, #0, 1405c <mpc_pow@@Base+0x19cc>
   14050:	mov	w8, #0xffffffff            	// #-1
   14054:	str	w8, [sp, #212]
   14058:	b	14070 <mpc_pow@@Base+0x19e0>
   1405c:	ldur	w8, [x29, #-76]
   14060:	cmp	w8, #0x0
   14064:	cset	w8, gt
   14068:	and	w8, w8, #0x1
   1406c:	str	w8, [sp, #212]
   14070:	ldr	w8, [sp, #212]
   14074:	cmp	w8, #0x0
   14078:	cset	w8, ge  // ge = tcont
   1407c:	tbnz	w8, #0, 14124 <mpc_pow@@Base+0x1a94>
   14080:	sub	x8, x29, #0x60
   14084:	mov	x0, x8
   14088:	sub	x9, x29, #0x80
   1408c:	mov	x1, x9
   14090:	mov	x2, x9
   14094:	str	x8, [sp, #200]
   14098:	bl	4e00 <__gmpz_mul@plt>
   1409c:	ldr	x0, [sp, #200]
   140a0:	sub	x8, x29, #0x90
   140a4:	mov	x1, x8
   140a8:	mov	x2, x8
   140ac:	bl	5010 <__gmpz_addmul@plt>
   140b0:	ldr	x0, [sp, #200]
   140b4:	mov	x8, xzr
   140b8:	mov	x1, x8
   140bc:	bl	4ad0 <__gmpz_scan1@plt>
   140c0:	stur	x0, [x29, #-168]
   140c4:	ldr	x0, [sp, #200]
   140c8:	mov	w1, #0x2                   	// #2
   140cc:	bl	55a0 <__gmpz_sizeinbase@plt>
   140d0:	ldur	x8, [x29, #-168]
   140d4:	add	x8, x8, #0x1
   140d8:	cmp	x0, x8
   140dc:	b.eq	140ec <mpc_pow@@Base+0x1a5c>  // b.none
   140e0:	mov	w8, #0xffffffff            	// #-1
   140e4:	stur	w8, [x29, #-172]
   140e8:	b	14650 <mpc_pow@@Base+0x1fc0>
   140ec:	sub	x8, x29, #0x90
   140f0:	mov	x0, x8
   140f4:	mov	x1, x8
   140f8:	bl	4e20 <__gmpz_neg@plt>
   140fc:	ldur	x8, [x29, #-48]
   14100:	mov	x9, xzr
   14104:	subs	x8, x9, x8
   14108:	ldur	x9, [x29, #-168]
   1410c:	subs	x8, x8, x9
   14110:	stur	x8, [x29, #-48]
   14114:	sub	x8, x29, #0x50
   14118:	mov	x0, x8
   1411c:	mov	x1, x8
   14120:	bl	4e20 <__gmpz_neg@plt>
   14124:	sub	x0, x29, #0x50
   14128:	mov	w1, #0x2                   	// #2
   1412c:	bl	55a0 <__gmpz_sizeinbase@plt>
   14130:	subs	x8, x0, #0x1
   14134:	stur	x8, [x29, #-168]
   14138:	sub	x0, x29, #0x60
   1413c:	sub	x1, x29, #0x80
   14140:	bl	4dc0 <__gmpz_set@plt>
   14144:	sub	x0, x29, #0x70
   14148:	sub	x1, x29, #0x90
   1414c:	bl	4dc0 <__gmpz_set@plt>
   14150:	ldur	x8, [x29, #-48]
   14154:	stur	x8, [x29, #-56]
   14158:	ldur	x8, [x29, #-168]
   1415c:	subs	x9, x8, #0x1
   14160:	stur	x9, [x29, #-168]
   14164:	cmp	x8, #0x0
   14168:	cset	w10, ls  // ls = plast
   1416c:	tbnz	w10, #0, 1440c <mpc_pow@@Base+0x1d7c>
   14170:	sub	x8, x29, #0xa0
   14174:	mov	x0, x8
   14178:	sub	x9, x29, #0x60
   1417c:	mov	x1, x9
   14180:	sub	x10, x29, #0x70
   14184:	mov	x2, x10
   14188:	str	x8, [sp, #192]
   1418c:	str	x9, [sp, #184]
   14190:	str	x10, [sp, #176]
   14194:	bl	4e00 <__gmpz_mul@plt>
   14198:	ldr	x0, [sp, #184]
   1419c:	ldr	x1, [sp, #184]
   141a0:	ldr	x2, [sp, #184]
   141a4:	bl	4e00 <__gmpz_mul@plt>
   141a8:	ldr	x0, [sp, #184]
   141ac:	ldr	x1, [sp, #176]
   141b0:	ldr	x2, [sp, #176]
   141b4:	bl	53d0 <__gmpz_submul@plt>
   141b8:	ldr	x0, [sp, #176]
   141bc:	ldr	x1, [sp, #192]
   141c0:	mov	x2, #0x1                   	// #1
   141c4:	bl	4f80 <__gmpz_mul_2exp@plt>
   141c8:	ldur	x8, [x29, #-56]
   141cc:	mov	x9, #0x2                   	// #2
   141d0:	mul	x8, x8, x9
   141d4:	stur	x8, [x29, #-56]
   141d8:	ldur	x1, [x29, #-168]
   141dc:	sub	x0, x29, #0x50
   141e0:	bl	4df0 <__gmpz_tstbit@plt>
   141e4:	cbz	w0, 1426c <mpc_pow@@Base+0x1bdc>
   141e8:	sub	x8, x29, #0xa0
   141ec:	mov	x0, x8
   141f0:	sub	x9, x29, #0x60
   141f4:	mov	x1, x9
   141f8:	sub	x10, x29, #0x80
   141fc:	mov	x2, x10
   14200:	str	x8, [sp, #168]
   14204:	str	x9, [sp, #160]
   14208:	str	x10, [sp, #152]
   1420c:	bl	4e00 <__gmpz_mul@plt>
   14210:	ldr	x0, [sp, #168]
   14214:	sub	x8, x29, #0x70
   14218:	mov	x1, x8
   1421c:	sub	x9, x29, #0x90
   14220:	mov	x2, x9
   14224:	str	x8, [sp, #144]
   14228:	str	x9, [sp, #136]
   1422c:	bl	53d0 <__gmpz_submul@plt>
   14230:	ldr	x0, [sp, #144]
   14234:	ldr	x1, [sp, #144]
   14238:	ldr	x2, [sp, #152]
   1423c:	bl	4e00 <__gmpz_mul@plt>
   14240:	ldr	x0, [sp, #144]
   14244:	ldr	x1, [sp, #160]
   14248:	ldr	x2, [sp, #136]
   1424c:	bl	5010 <__gmpz_addmul@plt>
   14250:	ldr	x0, [sp, #160]
   14254:	ldr	x1, [sp, #168]
   14258:	bl	4e80 <__gmpz_swap@plt>
   1425c:	ldur	x8, [x29, #-48]
   14260:	ldur	x9, [x29, #-56]
   14264:	add	x8, x9, x8
   14268:	stur	x8, [x29, #-56]
   1426c:	ldur	w8, [x29, #-92]
   14270:	cmp	w8, #0x0
   14274:	cset	w8, ge  // ge = tcont
   14278:	tbnz	w8, #0, 14288 <mpc_pow@@Base+0x1bf8>
   1427c:	mov	w8, #0xffffffff            	// #-1
   14280:	str	w8, [sp, #132]
   14284:	b	1429c <mpc_pow@@Base+0x1c0c>
   14288:	ldur	w8, [x29, #-92]
   1428c:	cmp	w8, #0x0
   14290:	cset	w8, gt
   14294:	and	w8, w8, #0x1
   14298:	str	w8, [sp, #132]
   1429c:	ldr	w8, [sp, #132]
   142a0:	cbnz	w8, 142e4 <mpc_pow@@Base+0x1c54>
   142a4:	sub	x8, x29, #0x70
   142a8:	mov	x0, x8
   142ac:	mov	x9, xzr
   142b0:	mov	x1, x9
   142b4:	str	x8, [sp, #120]
   142b8:	bl	4ad0 <__gmpz_scan1@plt>
   142bc:	stur	x0, [x29, #-248]
   142c0:	ldur	x2, [x29, #-248]
   142c4:	ldr	x0, [sp, #120]
   142c8:	ldr	x1, [sp, #120]
   142cc:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   142d0:	ldur	x8, [x29, #-248]
   142d4:	ldur	x9, [x29, #-56]
   142d8:	add	x8, x9, x8
   142dc:	stur	x8, [x29, #-56]
   142e0:	b	143d4 <mpc_pow@@Base+0x1d44>
   142e4:	ldur	w8, [x29, #-108]
   142e8:	cmp	w8, #0x0
   142ec:	cset	w8, ge  // ge = tcont
   142f0:	tbnz	w8, #0, 14300 <mpc_pow@@Base+0x1c70>
   142f4:	mov	w8, #0xffffffff            	// #-1
   142f8:	str	w8, [sp, #116]
   142fc:	b	14314 <mpc_pow@@Base+0x1c84>
   14300:	ldur	w8, [x29, #-108]
   14304:	cmp	w8, #0x0
   14308:	cset	w8, gt
   1430c:	and	w8, w8, #0x1
   14310:	str	w8, [sp, #116]
   14314:	ldr	w8, [sp, #116]
   14318:	cbnz	w8, 1435c <mpc_pow@@Base+0x1ccc>
   1431c:	sub	x8, x29, #0x60
   14320:	mov	x0, x8
   14324:	mov	x9, xzr
   14328:	mov	x1, x9
   1432c:	str	x8, [sp, #104]
   14330:	bl	4ad0 <__gmpz_scan1@plt>
   14334:	stur	x0, [x29, #-248]
   14338:	ldur	x2, [x29, #-248]
   1433c:	ldr	x0, [sp, #104]
   14340:	ldr	x1, [sp, #104]
   14344:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   14348:	ldur	x8, [x29, #-248]
   1434c:	ldur	x9, [x29, #-56]
   14350:	add	x8, x9, x8
   14354:	stur	x8, [x29, #-56]
   14358:	b	143d4 <mpc_pow@@Base+0x1d44>
   1435c:	sub	x0, x29, #0x60
   14360:	mov	x8, xzr
   14364:	mov	x1, x8
   14368:	str	x8, [sp, #96]
   1436c:	bl	4ad0 <__gmpz_scan1@plt>
   14370:	stur	x0, [x29, #-248]
   14374:	sub	x0, x29, #0x70
   14378:	ldr	x1, [sp, #96]
   1437c:	bl	4ad0 <__gmpz_scan1@plt>
   14380:	stur	x0, [x29, #-240]
   14384:	ldur	x8, [x29, #-240]
   14388:	ldur	x9, [x29, #-248]
   1438c:	cmp	x8, x9
   14390:	b.cs	1439c <mpc_pow@@Base+0x1d0c>  // b.hs, b.nlast
   14394:	ldur	x8, [x29, #-240]
   14398:	stur	x8, [x29, #-248]
   1439c:	ldur	x2, [x29, #-248]
   143a0:	sub	x8, x29, #0x60
   143a4:	mov	x0, x8
   143a8:	mov	x1, x8
   143ac:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   143b0:	ldur	x2, [x29, #-248]
   143b4:	sub	x8, x29, #0x70
   143b8:	mov	x0, x8
   143bc:	mov	x1, x8
   143c0:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   143c4:	ldur	x8, [x29, #-248]
   143c8:	ldur	x9, [x29, #-56]
   143cc:	add	x8, x9, x8
   143d0:	stur	x8, [x29, #-56]
   143d4:	sub	x0, x29, #0x60
   143d8:	mov	w1, #0x2                   	// #2
   143dc:	bl	55a0 <__gmpz_sizeinbase@plt>
   143e0:	ldur	x8, [x29, #-40]
   143e4:	cmp	x0, x8
   143e8:	b.gt	14404 <mpc_pow@@Base+0x1d74>
   143ec:	sub	x0, x29, #0x70
   143f0:	mov	w1, #0x2                   	// #2
   143f4:	bl	55a0 <__gmpz_sizeinbase@plt>
   143f8:	ldur	x8, [x29, #-40]
   143fc:	cmp	x0, x8
   14400:	b.le	14408 <mpc_pow@@Base+0x1d78>
   14404:	b	14650 <mpc_pow@@Base+0x1fc0>
   14408:	b	14158 <mpc_pow@@Base+0x1ac8>
   1440c:	ldur	x8, [x29, #-64]
   14410:	subs	x9, x8, #0x1
   14414:	stur	x9, [x29, #-64]
   14418:	cmp	x8, #0x0
   1441c:	cset	w10, le
   14420:	tbnz	w10, #0, 14554 <mpc_pow@@Base+0x1ec4>
   14424:	sub	x8, x29, #0xa0
   14428:	mov	x0, x8
   1442c:	sub	x9, x29, #0x60
   14430:	mov	x1, x9
   14434:	sub	x10, x29, #0x70
   14438:	mov	x2, x10
   1443c:	str	x8, [sp, #88]
   14440:	str	x9, [sp, #80]
   14444:	str	x10, [sp, #72]
   14448:	bl	4e00 <__gmpz_mul@plt>
   1444c:	ldr	x0, [sp, #80]
   14450:	ldr	x1, [sp, #80]
   14454:	ldr	x2, [sp, #80]
   14458:	bl	4e00 <__gmpz_mul@plt>
   1445c:	ldr	x0, [sp, #80]
   14460:	ldr	x1, [sp, #72]
   14464:	ldr	x2, [sp, #72]
   14468:	bl	53d0 <__gmpz_submul@plt>
   1446c:	ldr	x0, [sp, #72]
   14470:	ldr	x1, [sp, #88]
   14474:	mov	x2, #0x1                   	// #1
   14478:	bl	4f80 <__gmpz_mul_2exp@plt>
   1447c:	ldur	x8, [x29, #-56]
   14480:	mov	x9, #0x2                   	// #2
   14484:	mul	x8, x8, x9
   14488:	stur	x8, [x29, #-56]
   1448c:	ldr	x0, [sp, #80]
   14490:	mov	x8, xzr
   14494:	mov	x1, x8
   14498:	str	x8, [sp, #64]
   1449c:	bl	4ad0 <__gmpz_scan1@plt>
   144a0:	stur	x0, [x29, #-256]
   144a4:	ldr	x0, [sp, #72]
   144a8:	ldr	x1, [sp, #64]
   144ac:	bl	4ad0 <__gmpz_scan1@plt>
   144b0:	str	x0, [sp, #296]
   144b4:	ldur	x8, [x29, #-256]
   144b8:	ldr	x9, [sp, #296]
   144bc:	cmp	x8, x9
   144c0:	b.hi	144d0 <mpc_pow@@Base+0x1e40>  // b.pmore
   144c4:	ldur	x8, [x29, #-256]
   144c8:	str	x8, [sp, #56]
   144cc:	b	144d8 <mpc_pow@@Base+0x1e48>
   144d0:	ldr	x8, [sp, #296]
   144d4:	str	x8, [sp, #56]
   144d8:	ldr	x8, [sp, #56]
   144dc:	stur	x8, [x29, #-256]
   144e0:	ldur	x2, [x29, #-256]
   144e4:	sub	x8, x29, #0x60
   144e8:	mov	x0, x8
   144ec:	mov	x1, x8
   144f0:	str	x8, [sp, #48]
   144f4:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   144f8:	ldur	x2, [x29, #-256]
   144fc:	sub	x8, x29, #0x70
   14500:	mov	x0, x8
   14504:	mov	x1, x8
   14508:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   1450c:	ldur	x8, [x29, #-256]
   14510:	ldur	x9, [x29, #-56]
   14514:	add	x8, x9, x8
   14518:	stur	x8, [x29, #-56]
   1451c:	ldr	x0, [sp, #48]
   14520:	mov	w1, #0x2                   	// #2
   14524:	bl	55a0 <__gmpz_sizeinbase@plt>
   14528:	ldur	x8, [x29, #-40]
   1452c:	cmp	x0, x8
   14530:	b.gt	1454c <mpc_pow@@Base+0x1ebc>
   14534:	sub	x0, x29, #0x70
   14538:	mov	w1, #0x2                   	// #2
   1453c:	bl	55a0 <__gmpz_sizeinbase@plt>
   14540:	ldur	x8, [x29, #-40]
   14544:	cmp	x0, x8
   14548:	b.le	14550 <mpc_pow@@Base+0x1ec0>
   1454c:	b	14650 <mpc_pow@@Base+0x1fc0>
   14550:	b	1440c <mpc_pow@@Base+0x1d7c>
   14554:	ldur	x0, [x29, #-8]
   14558:	ldur	w8, [x29, #-28]
   1455c:	and	w2, w8, #0xf
   14560:	sub	x1, x29, #0x60
   14564:	bl	4fb0 <mpfr_set_z@plt>
   14568:	stur	w0, [x29, #-172]
   1456c:	ldur	w8, [x29, #-172]
   14570:	cmp	w8, #0x0
   14574:	cset	w8, ge  // ge = tcont
   14578:	tbnz	w8, #0, 14588 <mpc_pow@@Base+0x1ef8>
   1457c:	mov	w8, #0x2                   	// #2
   14580:	str	w8, [sp, #44]
   14584:	b	145a0 <mpc_pow@@Base+0x1f10>
   14588:	ldur	w8, [x29, #-172]
   1458c:	mov	w9, wzr
   14590:	mov	w10, #0x1                   	// #1
   14594:	cmp	w8, #0x0
   14598:	csel	w8, w9, w10, eq  // eq = none
   1459c:	str	w8, [sp, #44]
   145a0:	ldr	w8, [sp, #44]
   145a4:	ldur	x9, [x29, #-8]
   145a8:	add	x0, x9, #0x20
   145ac:	ldur	w10, [x29, #-28]
   145b0:	asr	w2, w10, #4
   145b4:	sub	x1, x29, #0x70
   145b8:	str	w8, [sp, #40]
   145bc:	bl	4fb0 <mpfr_set_z@plt>
   145c0:	cmp	w0, #0x0
   145c4:	cset	w8, ge  // ge = tcont
   145c8:	tbnz	w8, #0, 145d8 <mpc_pow@@Base+0x1f48>
   145cc:	mov	w8, #0x2                   	// #2
   145d0:	str	w8, [sp, #36]
   145d4:	b	14604 <mpc_pow@@Base+0x1f74>
   145d8:	ldur	x8, [x29, #-8]
   145dc:	add	x0, x8, #0x20
   145e0:	ldur	w9, [x29, #-28]
   145e4:	asr	w2, w9, #4
   145e8:	sub	x1, x29, #0x70
   145ec:	bl	4fb0 <mpfr_set_z@plt>
   145f0:	mov	w9, wzr
   145f4:	mov	w10, #0x1                   	// #1
   145f8:	cmp	w0, #0x0
   145fc:	csel	w9, w9, w10, eq  // eq = none
   14600:	str	w9, [sp, #36]
   14604:	ldr	w8, [sp, #36]
   14608:	ldr	w9, [sp, #40]
   1460c:	orr	w8, w9, w8, lsl #2
   14610:	stur	w8, [x29, #-172]
   14614:	ldur	x0, [x29, #-8]
   14618:	ldur	x1, [x29, #-8]
   1461c:	ldur	x2, [x29, #-56]
   14620:	ldur	w8, [x29, #-28]
   14624:	and	w3, w8, #0xf
   14628:	bl	4b50 <mpfr_mul_2si@plt>
   1462c:	ldur	x10, [x29, #-8]
   14630:	add	x10, x10, #0x20
   14634:	ldur	x11, [x29, #-8]
   14638:	add	x1, x11, #0x20
   1463c:	ldur	x2, [x29, #-56]
   14640:	ldur	w8, [x29, #-28]
   14644:	asr	w3, w8, #4
   14648:	mov	x0, x10
   1464c:	bl	4b50 <mpfr_mul_2si@plt>
   14650:	sub	x0, x29, #0x50
   14654:	bl	5280 <__gmpz_clear@plt>
   14658:	sub	x0, x29, #0x60
   1465c:	bl	5280 <__gmpz_clear@plt>
   14660:	sub	x0, x29, #0x70
   14664:	bl	5280 <__gmpz_clear@plt>
   14668:	sub	x0, x29, #0x80
   1466c:	bl	5280 <__gmpz_clear@plt>
   14670:	sub	x0, x29, #0x90
   14674:	bl	5280 <__gmpz_clear@plt>
   14678:	sub	x0, x29, #0xa0
   1467c:	bl	5280 <__gmpz_clear@plt>
   14680:	ldur	w8, [x29, #-172]
   14684:	cmp	w8, #0x0
   14688:	cset	w8, lt  // lt = tstop
   1468c:	tbnz	w8, #0, 146e4 <mpc_pow@@Base+0x2054>
   14690:	ldur	w8, [x29, #-184]
   14694:	cbz	w8, 146e4 <mpc_pow@@Base+0x2054>
   14698:	ldur	x0, [x29, #-8]
   1469c:	ldur	w1, [x29, #-176]
   146a0:	ldur	w2, [x29, #-180]
   146a4:	ldur	w8, [x29, #-188]
   146a8:	str	x0, [sp, #24]
   146ac:	str	w1, [sp, #20]
   146b0:	str	w2, [sp, #16]
   146b4:	cbz	w8, 146c4 <mpc_pow@@Base+0x2034>
   146b8:	sub	x8, x29, #0xe0
   146bc:	str	x8, [sp, #8]
   146c0:	b	146cc <mpc_pow@@Base+0x203c>
   146c4:	ldur	x8, [x29, #-24]
   146c8:	str	x8, [sp, #8]
   146cc:	ldr	x8, [sp, #8]
   146d0:	ldr	x0, [sp, #24]
   146d4:	ldr	w1, [sp, #20]
   146d8:	ldr	w2, [sp, #16]
   146dc:	mov	x3, x8
   146e0:	bl	14708 <mpc_pow@@Base+0x2078>
   146e4:	ldur	w8, [x29, #-188]
   146e8:	cbz	w8, 146f4 <mpc_pow@@Base+0x2064>
   146ec:	sub	x0, x29, #0xe0
   146f0:	bl	4e30 <mpfr_clear@plt>
   146f4:	ldur	w0, [x29, #-172]
   146f8:	add	sp, sp, #0x230
   146fc:	ldr	x28, [sp, #16]
   14700:	ldp	x29, x30, [sp], #32
   14704:	ret
   14708:	sub	sp, sp, #0x70
   1470c:	stp	x29, x30, [sp, #96]
   14710:	add	x29, sp, #0x60
   14714:	mov	w8, #0xffffffff            	// #-1
   14718:	mov	x9, xzr
   1471c:	add	x10, sp, #0x28
   14720:	stur	x0, [x29, #-8]
   14724:	stur	w1, [x29, #-12]
   14728:	stur	w2, [x29, #-16]
   1472c:	stur	x3, [x29, #-24]
   14730:	stur	w8, [x29, #-28]
   14734:	mov	x0, x10
   14738:	str	x9, [sp, #24]
   1473c:	str	x10, [sp, #16]
   14740:	bl	5590 <__gmpz_init@plt>
   14744:	ldur	x1, [x29, #-24]
   14748:	ldr	x0, [sp, #16]
   1474c:	bl	5560 <mpfr_get_z_2exp@plt>
   14750:	stur	x0, [x29, #-40]
   14754:	ldr	x0, [sp, #16]
   14758:	ldr	x1, [sp, #24]
   1475c:	bl	4ad0 <__gmpz_scan1@plt>
   14760:	str	x0, [sp, #32]
   14764:	ldr	x9, [sp, #32]
   14768:	ldur	x10, [x29, #-40]
   1476c:	add	x9, x10, x9
   14770:	stur	x9, [x29, #-40]
   14774:	ldr	x2, [sp, #32]
   14778:	ldr	x0, [sp, #16]
   1477c:	ldr	x1, [sp, #16]
   14780:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   14784:	ldur	x9, [x29, #-40]
   14788:	cmp	x9, #0x2
   1478c:	b.lt	14798 <mpc_pow@@Base+0x2108>  // b.tstop
   14790:	stur	wzr, [x29, #-28]
   14794:	b	14860 <mpc_pow@@Base+0x21d0>
   14798:	ldur	x8, [x29, #-40]
   1479c:	cmp	x8, #0x1
   147a0:	b.ne	147c4 <mpc_pow@@Base+0x2134>  // b.any
   147a4:	add	x0, sp, #0x28
   147a8:	mov	x8, xzr
   147ac:	mov	x1, x8
   147b0:	bl	4df0 <__gmpz_tstbit@plt>
   147b4:	mov	w9, #0x2                   	// #2
   147b8:	mul	w9, w0, w9
   147bc:	stur	w9, [x29, #-28]
   147c0:	b	14860 <mpc_pow@@Base+0x21d0>
   147c4:	ldur	x8, [x29, #-40]
   147c8:	cbnz	x8, 1485c <mpc_pow@@Base+0x21cc>
   147cc:	add	x8, sp, #0x28
   147d0:	mov	x0, x8
   147d4:	mov	x1, #0x1                   	// #1
   147d8:	str	x8, [sp, #8]
   147dc:	bl	4df0 <__gmpz_tstbit@plt>
   147e0:	mov	w9, #0x2                   	// #2
   147e4:	mul	w9, w0, w9
   147e8:	ldr	x0, [sp, #8]
   147ec:	mov	x8, xzr
   147f0:	mov	x1, x8
   147f4:	str	w9, [sp, #4]
   147f8:	bl	4df0 <__gmpz_tstbit@plt>
   147fc:	ldr	w9, [sp, #4]
   14800:	add	w10, w9, w0
   14804:	stur	w10, [x29, #-28]
   14808:	ldr	w10, [sp, #44]
   1480c:	cmp	w10, #0x0
   14810:	cset	w10, ge  // ge = tcont
   14814:	tbnz	w10, #0, 14824 <mpc_pow@@Base+0x2194>
   14818:	mov	w8, #0xffffffff            	// #-1
   1481c:	str	w8, [sp]
   14820:	b	14838 <mpc_pow@@Base+0x21a8>
   14824:	ldr	w8, [sp, #44]
   14828:	cmp	w8, #0x0
   1482c:	cset	w8, gt
   14830:	and	w8, w8, #0x1
   14834:	str	w8, [sp]
   14838:	ldr	w8, [sp]
   1483c:	cmp	w8, #0x0
   14840:	cset	w8, ge  // ge = tcont
   14844:	tbnz	w8, #0, 14858 <mpc_pow@@Base+0x21c8>
   14848:	ldur	w8, [x29, #-28]
   1484c:	mov	w9, #0x4                   	// #4
   14850:	subs	w8, w9, w8
   14854:	stur	w8, [x29, #-28]
   14858:	b	14860 <mpc_pow@@Base+0x21d0>
   1485c:	b	149a0 <mpc_pow@@Base+0x2310>
   14860:	ldur	x8, [x29, #-8]
   14864:	ldr	x8, [x8, #16]
   14868:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1486c:	cmp	x8, x9
   14870:	b.ne	148fc <mpc_pow@@Base+0x226c>  // b.any
   14874:	ldur	w8, [x29, #-28]
   14878:	cmp	w8, #0x1
   1487c:	b.eq	148bc <mpc_pow@@Base+0x222c>  // b.none
   14880:	ldur	w8, [x29, #-28]
   14884:	cmp	w8, #0x3
   14888:	b.eq	148bc <mpc_pow@@Base+0x222c>  // b.none
   1488c:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   14890:	ldr	x8, [x8, #4008]
   14894:	ldr	x0, [x8]
   14898:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1489c:	add	x1, x1, #0x2a0
   148a0:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   148a4:	add	x2, x2, #0x49d
   148a8:	mov	w3, #0x89                  	// #137
   148ac:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   148b0:	add	x4, x4, #0x50b
   148b4:	bl	56a0 <fprintf@plt>
   148b8:	bl	5100 <abort@plt>
   148bc:	ldur	w8, [x29, #-28]
   148c0:	cmp	w8, #0x3
   148c4:	b.ne	148d0 <mpc_pow@@Base+0x2240>  // b.any
   148c8:	ldur	w8, [x29, #-12]
   148cc:	cbz	w8, 148e8 <mpc_pow@@Base+0x2258>
   148d0:	ldur	w8, [x29, #-28]
   148d4:	cmp	w8, #0x1
   148d8:	b.ne	148f8 <mpc_pow@@Base+0x2268>  // b.any
   148dc:	ldur	w8, [x29, #-12]
   148e0:	cmp	w8, #0x1
   148e4:	b.ne	148f8 <mpc_pow@@Base+0x2268>  // b.any
   148e8:	ldur	x0, [x29, #-8]
   148ec:	ldur	x1, [x29, #-8]
   148f0:	mov	w2, #0x1                   	// #1
   148f4:	bl	4c60 <mpfr_neg@plt>
   148f8:	b	149a0 <mpc_pow@@Base+0x2310>
   148fc:	ldur	x8, [x29, #-8]
   14900:	ldr	x8, [x8, #48]
   14904:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   14908:	cmp	x8, x9
   1490c:	b.ne	149a0 <mpc_pow@@Base+0x2310>  // b.any
   14910:	ldur	w8, [x29, #-28]
   14914:	cbz	w8, 14954 <mpc_pow@@Base+0x22c4>
   14918:	ldur	w8, [x29, #-28]
   1491c:	cmp	w8, #0x2
   14920:	b.eq	14954 <mpc_pow@@Base+0x22c4>  // b.none
   14924:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   14928:	ldr	x8, [x8, #4008]
   1492c:	ldr	x0, [x8]
   14930:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   14934:	add	x1, x1, #0x2a0
   14938:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1493c:	add	x2, x2, #0x49d
   14940:	mov	w3, #0x93                  	// #147
   14944:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   14948:	add	x4, x4, #0x524
   1494c:	bl	56a0 <fprintf@plt>
   14950:	bl	5100 <abort@plt>
   14954:	ldur	w8, [x29, #-28]
   14958:	cbnz	w8, 1496c <mpc_pow@@Base+0x22dc>
   1495c:	ldur	w8, [x29, #-16]
   14960:	ldur	w9, [x29, #-12]
   14964:	cmp	w8, w9
   14968:	b.eq	14988 <mpc_pow@@Base+0x22f8>  // b.none
   1496c:	ldur	w8, [x29, #-28]
   14970:	cmp	w8, #0x2
   14974:	b.ne	149a0 <mpc_pow@@Base+0x2310>  // b.any
   14978:	ldur	w8, [x29, #-16]
   1497c:	ldur	w9, [x29, #-12]
   14980:	cmp	w8, w9
   14984:	b.eq	149a0 <mpc_pow@@Base+0x2310>  // b.none
   14988:	ldur	x8, [x29, #-8]
   1498c:	add	x0, x8, #0x20
   14990:	ldur	x8, [x29, #-8]
   14994:	add	x1, x8, #0x20
   14998:	mov	w2, #0x1                   	// #1
   1499c:	bl	4c60 <mpfr_neg@plt>
   149a0:	add	x0, sp, #0x28
   149a4:	bl	5280 <__gmpz_clear@plt>
   149a8:	ldp	x29, x30, [sp, #96]
   149ac:	add	sp, sp, #0x70
   149b0:	ret
   149b4:	sub	sp, sp, #0x40
   149b8:	stp	x29, x30, [sp, #48]
   149bc:	add	x29, sp, #0x30
   149c0:	stur	x0, [x29, #-16]
   149c4:	str	x1, [sp, #24]
   149c8:	str	x2, [sp, #16]
   149cc:	str	x3, [sp, #8]
   149d0:	ldr	x8, [sp, #8]
   149d4:	ldr	w9, [x8, #4]
   149d8:	cmp	w9, #0x0
   149dc:	cset	w9, ge  // ge = tcont
   149e0:	tbnz	w9, #0, 149f0 <mpc_pow@@Base+0x2360>
   149e4:	mov	w8, #0xffffffff            	// #-1
   149e8:	str	w8, [sp, #4]
   149ec:	b	14a08 <mpc_pow@@Base+0x2378>
   149f0:	ldr	x8, [sp, #8]
   149f4:	ldr	w9, [x8, #4]
   149f8:	cmp	w9, #0x0
   149fc:	cset	w9, gt
   14a00:	and	w9, w9, #0x1
   14a04:	str	w9, [sp, #4]
   14a08:	ldr	w8, [sp, #4]
   14a0c:	cbnz	w8, 14acc <mpc_pow@@Base+0x243c>
   14a10:	ldr	x8, [sp, #16]
   14a14:	ldr	w9, [x8, #4]
   14a18:	cmp	w9, #0x0
   14a1c:	cset	w9, ge  // ge = tcont
   14a20:	tbnz	w9, #0, 14a30 <mpc_pow@@Base+0x23a0>
   14a24:	mov	w8, #0xffffffff            	// #-1
   14a28:	str	w8, [sp]
   14a2c:	b	14a48 <mpc_pow@@Base+0x23b8>
   14a30:	ldr	x8, [sp, #16]
   14a34:	ldr	w9, [x8, #4]
   14a38:	cmp	w9, #0x0
   14a3c:	cset	w9, gt
   14a40:	and	w9, w9, #0x1
   14a44:	str	w9, [sp]
   14a48:	ldr	w8, [sp]
   14a4c:	cmp	w8, #0x0
   14a50:	cset	w8, lt  // lt = tstop
   14a54:	tbnz	w8, #0, 14a88 <mpc_pow@@Base+0x23f8>
   14a58:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   14a5c:	ldr	x8, [x8, #4008]
   14a60:	ldr	x0, [x8]
   14a64:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   14a68:	add	x1, x1, #0x2a0
   14a6c:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   14a70:	add	x2, x2, #0x49d
   14a74:	mov	w3, #0x3c                  	// #60
   14a78:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   14a7c:	add	x4, x4, #0x4f5
   14a80:	bl	56a0 <fprintf@plt>
   14a84:	bl	5100 <abort@plt>
   14a88:	ldr	x0, [sp, #24]
   14a8c:	ldr	x1, [sp, #16]
   14a90:	bl	4e20 <__gmpz_neg@plt>
   14a94:	ldr	x0, [sp, #24]
   14a98:	bl	4e40 <__gmpz_perfect_square_p@plt>
   14a9c:	cbz	w0, 14ac8 <mpc_pow@@Base+0x2438>
   14aa0:	ldr	x0, [sp, #24]
   14aa4:	ldr	x1, [sp, #24]
   14aa8:	bl	4bd0 <__gmpz_sqrt@plt>
   14aac:	ldur	x0, [x29, #-16]
   14ab0:	mov	x8, xzr
   14ab4:	mov	x1, x8
   14ab8:	bl	4bf0 <__gmpz_set_ui@plt>
   14abc:	mov	w9, #0x1                   	// #1
   14ac0:	stur	w9, [x29, #-4]
   14ac4:	b	14b94 <mpc_pow@@Base+0x2504>
   14ac8:	b	14b90 <mpc_pow@@Base+0x2500>
   14acc:	ldr	x0, [sp, #8]
   14ad0:	mov	x1, #0x1                   	// #1
   14ad4:	bl	4d10 <__gmpz_divisible_2exp_p@plt>
   14ad8:	cbnz	w0, 14ae4 <mpc_pow@@Base+0x2454>
   14adc:	stur	wzr, [x29, #-4]
   14ae0:	b	14b94 <mpc_pow@@Base+0x2504>
   14ae4:	ldur	x0, [x29, #-16]
   14ae8:	ldr	x1, [sp, #16]
   14aec:	ldr	x2, [sp, #16]
   14af0:	bl	4e00 <__gmpz_mul@plt>
   14af4:	ldur	x0, [x29, #-16]
   14af8:	ldr	x1, [sp, #8]
   14afc:	ldr	x2, [sp, #8]
   14b00:	bl	5010 <__gmpz_addmul@plt>
   14b04:	ldur	x0, [x29, #-16]
   14b08:	bl	4e40 <__gmpz_perfect_square_p@plt>
   14b0c:	cbz	w0, 14b90 <mpc_pow@@Base+0x2500>
   14b10:	ldur	x0, [x29, #-16]
   14b14:	ldur	x1, [x29, #-16]
   14b18:	bl	4bd0 <__gmpz_sqrt@plt>
   14b1c:	ldur	x0, [x29, #-16]
   14b20:	ldr	x1, [sp, #16]
   14b24:	ldur	x2, [x29, #-16]
   14b28:	bl	54d0 <__gmpz_add@plt>
   14b2c:	ldur	x0, [x29, #-16]
   14b30:	mov	x1, #0x1                   	// #1
   14b34:	bl	4d10 <__gmpz_divisible_2exp_p@plt>
   14b38:	cbz	w0, 14b90 <mpc_pow@@Base+0x2500>
   14b3c:	ldur	x0, [x29, #-16]
   14b40:	ldur	x1, [x29, #-16]
   14b44:	mov	x2, #0x1                   	// #1
   14b48:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   14b4c:	ldur	x0, [x29, #-16]
   14b50:	bl	4e40 <__gmpz_perfect_square_p@plt>
   14b54:	cbz	w0, 14b90 <mpc_pow@@Base+0x2500>
   14b58:	ldur	x0, [x29, #-16]
   14b5c:	ldur	x1, [x29, #-16]
   14b60:	bl	4bd0 <__gmpz_sqrt@plt>
   14b64:	ldr	x0, [sp, #24]
   14b68:	ldr	x1, [sp, #8]
   14b6c:	mov	x2, #0x1                   	// #1
   14b70:	bl	5320 <__gmpz_tdiv_q_2exp@plt>
   14b74:	ldr	x0, [sp, #24]
   14b78:	ldr	x1, [sp, #24]
   14b7c:	ldur	x2, [x29, #-16]
   14b80:	bl	4d80 <__gmpz_divexact@plt>
   14b84:	mov	w8, #0x1                   	// #1
   14b88:	stur	w8, [x29, #-4]
   14b8c:	b	14b94 <mpc_pow@@Base+0x2504>
   14b90:	stur	wzr, [x29, #-4]
   14b94:	ldur	w0, [x29, #-4]
   14b98:	ldp	x29, x30, [sp, #48]
   14b9c:	add	sp, sp, #0x40
   14ba0:	ret

0000000000014ba4 <mpc_pow_fr@@Base>:
   14ba4:	sub	sp, sp, #0xa0
   14ba8:	stp	x29, x30, [sp, #144]
   14bac:	add	x29, sp, #0x90
   14bb0:	mov	x8, #0x1                   	// #1
   14bb4:	mov	w9, #0x1                   	// #1
   14bb8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   14bbc:	add	x11, sp, #0x30
   14bc0:	stur	x0, [x29, #-8]
   14bc4:	stur	x1, [x29, #-16]
   14bc8:	stur	x2, [x29, #-24]
   14bcc:	stur	w3, [x29, #-28]
   14bd0:	ldur	x12, [x29, #-24]
   14bd4:	ldr	q0, [x12]
   14bd8:	str	q0, [sp, #48]
   14bdc:	ldr	q0, [x12, #16]
   14be0:	str	q0, [sp, #64]
   14be4:	add	x0, x11, #0x20
   14be8:	mov	x1, x8
   14bec:	str	w9, [sp, #24]
   14bf0:	str	x10, [sp, #16]
   14bf4:	str	x11, [sp, #8]
   14bf8:	bl	5530 <mpfr_init2@plt>
   14bfc:	ldr	x8, [sp, #8]
   14c00:	add	x10, x8, #0x20
   14c04:	str	x10, [sp, #32]
   14c08:	ldr	x10, [sp, #32]
   14c0c:	ldr	w9, [sp, #24]
   14c10:	str	w9, [x10, #8]
   14c14:	ldr	x10, [sp, #32]
   14c18:	ldr	x11, [sp, #16]
   14c1c:	str	x11, [x10, #16]
   14c20:	str	wzr, [sp, #28]
   14c24:	ldur	x0, [x29, #-8]
   14c28:	ldur	x1, [x29, #-16]
   14c2c:	ldur	w3, [x29, #-28]
   14c30:	mov	x2, x8
   14c34:	bl	5340 <mpc_pow@plt>
   14c38:	str	w0, [sp, #44]
   14c3c:	ldr	x8, [sp, #8]
   14c40:	add	x0, x8, #0x20
   14c44:	bl	4e30 <mpfr_clear@plt>
   14c48:	ldr	w0, [sp, #44]
   14c4c:	ldp	x29, x30, [sp, #144]
   14c50:	add	sp, sp, #0xa0
   14c54:	ret

0000000000014c58 <mpc_pow_ld@@Base>:
   14c58:	sub	sp, sp, #0x90
   14c5c:	stp	x29, x30, [sp, #128]
   14c60:	add	x29, sp, #0x80
   14c64:	stur	x0, [x29, #-8]
   14c68:	stur	x1, [x29, #-16]
   14c6c:	stur	q0, [x29, #-32]
   14c70:	stur	w2, [x29, #-36]
   14c74:	add	x8, sp, #0x18
   14c78:	mov	x0, x8
   14c7c:	mov	x1, #0x71                  	// #113
   14c80:	mov	x2, #0x1                   	// #1
   14c84:	str	x8, [sp, #8]
   14c88:	bl	54c0 <mpc_init3@plt>
   14c8c:	ldur	q0, [x29, #-32]
   14c90:	ldr	x0, [sp, #8]
   14c94:	mov	w9, wzr
   14c98:	mov	w1, w9
   14c9c:	bl	4f40 <mpc_set_ld@plt>
   14ca0:	ldur	x8, [x29, #-8]
   14ca4:	ldur	x1, [x29, #-16]
   14ca8:	ldur	w3, [x29, #-36]
   14cac:	mov	x0, x8
   14cb0:	ldr	x2, [sp, #8]
   14cb4:	bl	5340 <mpc_pow@plt>
   14cb8:	str	w0, [sp, #20]
   14cbc:	ldr	x0, [sp, #8]
   14cc0:	bl	4af0 <mpc_clear@plt>
   14cc4:	ldr	w0, [sp, #20]
   14cc8:	ldp	x29, x30, [sp, #128]
   14ccc:	add	sp, sp, #0x90
   14cd0:	ret

0000000000014cd4 <mpc_pow_d@@Base>:
   14cd4:	sub	sp, sp, #0x80
   14cd8:	stp	x29, x30, [sp, #112]
   14cdc:	add	x29, sp, #0x70
   14ce0:	stur	x0, [x29, #-8]
   14ce4:	stur	x1, [x29, #-16]
   14ce8:	stur	d0, [x29, #-24]
   14cec:	stur	w2, [x29, #-28]
   14cf0:	add	x8, sp, #0x10
   14cf4:	mov	x0, x8
   14cf8:	mov	x1, #0x35                  	// #53
   14cfc:	mov	x2, #0x1                   	// #1
   14d00:	str	x8, [sp]
   14d04:	bl	54c0 <mpc_init3@plt>
   14d08:	ldur	d0, [x29, #-24]
   14d0c:	ldr	x0, [sp]
   14d10:	mov	w9, wzr
   14d14:	mov	w1, w9
   14d18:	bl	5550 <mpc_set_d@plt>
   14d1c:	ldur	x8, [x29, #-8]
   14d20:	ldur	x1, [x29, #-16]
   14d24:	ldur	w3, [x29, #-28]
   14d28:	mov	x0, x8
   14d2c:	ldr	x2, [sp]
   14d30:	bl	5340 <mpc_pow@plt>
   14d34:	str	w0, [sp, #12]
   14d38:	ldr	x0, [sp]
   14d3c:	bl	4af0 <mpc_clear@plt>
   14d40:	ldr	w0, [sp, #12]
   14d44:	ldp	x29, x30, [sp, #112]
   14d48:	add	sp, sp, #0x80
   14d4c:	ret

0000000000014d50 <mpc_pow_si@@Base>:
   14d50:	sub	sp, sp, #0x40
   14d54:	stp	x29, x30, [sp, #48]
   14d58:	add	x29, sp, #0x30
   14d5c:	stur	x0, [x29, #-16]
   14d60:	str	x1, [sp, #24]
   14d64:	str	x2, [sp, #16]
   14d68:	str	w3, [sp, #12]
   14d6c:	ldr	x8, [sp, #16]
   14d70:	cmp	x8, #0x0
   14d74:	cset	w9, lt  // lt = tstop
   14d78:	tbnz	w9, #0, 14d9c <mpc_pow_si@@Base+0x4c>
   14d7c:	ldur	x0, [x29, #-16]
   14d80:	ldr	x1, [sp, #24]
   14d84:	ldr	x2, [sp, #16]
   14d88:	ldr	w4, [sp, #12]
   14d8c:	mov	w3, #0x1                   	// #1
   14d90:	bl	4ed0 <mpc_pow_usi@plt>
   14d94:	stur	w0, [x29, #-4]
   14d98:	b	14dc0 <mpc_pow_si@@Base+0x70>
   14d9c:	ldur	x0, [x29, #-16]
   14da0:	ldr	x1, [sp, #24]
   14da4:	ldr	x8, [sp, #16]
   14da8:	mov	x9, xzr
   14dac:	subs	x2, x9, x8
   14db0:	ldr	w4, [sp, #12]
   14db4:	mov	w3, #0xffffffff            	// #-1
   14db8:	bl	4ed0 <mpc_pow_usi@plt>
   14dbc:	stur	w0, [x29, #-4]
   14dc0:	ldur	w0, [x29, #-4]
   14dc4:	ldp	x29, x30, [sp, #48]
   14dc8:	add	sp, sp, #0x40
   14dcc:	ret

0000000000014dd0 <mpc_pow_usi@@Base>:
   14dd0:	sub	sp, sp, #0x190
   14dd4:	stp	x29, x30, [sp, #368]
   14dd8:	str	x28, [sp, #384]
   14ddc:	add	x29, sp, #0x170
   14de0:	stur	x0, [x29, #-16]
   14de4:	stur	x1, [x29, #-24]
   14de8:	stur	x2, [x29, #-32]
   14dec:	stur	w3, [x29, #-36]
   14df0:	stur	w4, [x29, #-40]
   14df4:	ldur	x0, [x29, #-24]
   14df8:	bl	55c0 <mpfr_number_p@plt>
   14dfc:	cbz	w0, 14e40 <mpc_pow_usi@@Base+0x70>
   14e00:	ldur	x8, [x29, #-24]
   14e04:	add	x0, x8, #0x20
   14e08:	bl	55c0 <mpfr_number_p@plt>
   14e0c:	cbz	w0, 14e40 <mpc_pow_usi@@Base+0x70>
   14e10:	ldur	x8, [x29, #-24]
   14e14:	ldr	x8, [x8, #16]
   14e18:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   14e1c:	cmp	x8, x9
   14e20:	b.eq	14e40 <mpc_pow_usi@@Base+0x70>  // b.none
   14e24:	ldur	x8, [x29, #-24]
   14e28:	ldr	x8, [x8, #48]
   14e2c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   14e30:	cmp	x8, x9
   14e34:	b.eq	14e40 <mpc_pow_usi@@Base+0x70>  // b.none
   14e38:	ldur	x8, [x29, #-32]
   14e3c:	cbnz	x8, 14e60 <mpc_pow_usi@@Base+0x90>
   14e40:	ldur	x0, [x29, #-16]
   14e44:	ldur	x1, [x29, #-24]
   14e48:	ldur	x2, [x29, #-32]
   14e4c:	ldur	w3, [x29, #-36]
   14e50:	ldur	w4, [x29, #-40]
   14e54:	bl	154e4 <mpc_pow_usi@@Base+0x714>
   14e58:	stur	w0, [x29, #-4]
   14e5c:	b	154d0 <mpc_pow_usi@@Base+0x700>
   14e60:	ldur	x8, [x29, #-32]
   14e64:	cmp	x8, #0x1
   14e68:	b.ne	14eb0 <mpc_pow_usi@@Base+0xe0>  // b.any
   14e6c:	ldur	w8, [x29, #-36]
   14e70:	cmp	w8, #0x0
   14e74:	cset	w8, le
   14e78:	tbnz	w8, #0, 14e94 <mpc_pow_usi@@Base+0xc4>
   14e7c:	ldur	x0, [x29, #-16]
   14e80:	ldur	x1, [x29, #-24]
   14e84:	ldur	w2, [x29, #-40]
   14e88:	bl	5680 <mpc_set@plt>
   14e8c:	stur	w0, [x29, #-4]
   14e90:	b	154d0 <mpc_pow_usi@@Base+0x700>
   14e94:	ldur	x0, [x29, #-16]
   14e98:	ldur	x2, [x29, #-24]
   14e9c:	ldur	w3, [x29, #-40]
   14ea0:	mov	x1, #0x1                   	// #1
   14ea4:	bl	56b0 <mpc_ui_div@plt>
   14ea8:	stur	w0, [x29, #-4]
   14eac:	b	154d0 <mpc_pow_usi@@Base+0x700>
   14eb0:	ldur	x8, [x29, #-32]
   14eb4:	cmp	x8, #0x2
   14eb8:	b.ne	14ee4 <mpc_pow_usi@@Base+0x114>  // b.any
   14ebc:	ldur	w8, [x29, #-36]
   14ec0:	cmp	w8, #0x0
   14ec4:	cset	w8, le
   14ec8:	tbnz	w8, #0, 14ee4 <mpc_pow_usi@@Base+0x114>
   14ecc:	ldur	x0, [x29, #-16]
   14ed0:	ldur	x1, [x29, #-24]
   14ed4:	ldur	w2, [x29, #-40]
   14ed8:	bl	5030 <mpc_sqr@plt>
   14edc:	stur	w0, [x29, #-4]
   14ee0:	b	154d0 <mpc_pow_usi@@Base+0x700>
   14ee4:	ldur	x8, [x29, #-24]
   14ee8:	ldr	x8, [x8, #16]
   14eec:	str	x8, [sp, #136]
   14ef0:	ldur	x8, [x29, #-24]
   14ef4:	ldr	x8, [x8, #48]
   14ef8:	str	x8, [sp, #128]
   14efc:	ldr	x8, [sp, #136]
   14f00:	ldr	x9, [sp, #128]
   14f04:	cmp	x8, x9
   14f08:	b.le	14f18 <mpc_pow_usi@@Base+0x148>
   14f0c:	ldr	x8, [sp, #136]
   14f10:	str	x8, [sp, #96]
   14f14:	b	14f20 <mpc_pow_usi@@Base+0x150>
   14f18:	ldr	x8, [sp, #128]
   14f1c:	str	x8, [sp, #96]
   14f20:	ldr	x8, [sp, #96]
   14f24:	str	x8, [sp, #88]
   14f28:	bl	5300 <mpfr_get_emax@plt>
   14f2c:	ldur	x8, [x29, #-32]
   14f30:	sdiv	x8, x0, x8
   14f34:	ldr	x9, [sp, #88]
   14f38:	cmp	x9, x8
   14f3c:	b.gt	14fa8 <mpc_pow_usi@@Base+0x1d8>
   14f40:	ldr	x8, [sp, #136]
   14f44:	mov	x9, xzr
   14f48:	subs	x8, x9, x8
   14f4c:	ldr	x10, [sp, #128]
   14f50:	subs	x9, x9, x10
   14f54:	cmp	x8, x9
   14f58:	b.le	14f70 <mpc_pow_usi@@Base+0x1a0>
   14f5c:	ldr	x8, [sp, #136]
   14f60:	mov	x9, xzr
   14f64:	subs	x8, x9, x8
   14f68:	str	x8, [sp, #80]
   14f6c:	b	14f80 <mpc_pow_usi@@Base+0x1b0>
   14f70:	ldr	x8, [sp, #128]
   14f74:	mov	x9, xzr
   14f78:	subs	x8, x9, x8
   14f7c:	str	x8, [sp, #80]
   14f80:	ldr	x8, [sp, #80]
   14f84:	str	x8, [sp, #72]
   14f88:	bl	5160 <mpfr_get_emin@plt>
   14f8c:	mov	x8, xzr
   14f90:	subs	x8, x8, x0
   14f94:	ldur	x9, [x29, #-32]
   14f98:	sdiv	x8, x8, x9
   14f9c:	ldr	x9, [sp, #72]
   14fa0:	cmp	x9, x8
   14fa4:	b.le	14fc8 <mpc_pow_usi@@Base+0x1f8>
   14fa8:	ldur	x0, [x29, #-16]
   14fac:	ldur	x1, [x29, #-24]
   14fb0:	ldur	x2, [x29, #-32]
   14fb4:	ldur	w3, [x29, #-36]
   14fb8:	ldur	w4, [x29, #-40]
   14fbc:	bl	154e4 <mpc_pow_usi@@Base+0x714>
   14fc0:	stur	w0, [x29, #-4]
   14fc4:	b	154d0 <mpc_pow_usi@@Base+0x700>
   14fc8:	ldur	x8, [x29, #-32]
   14fcc:	ldur	x9, [x29, #-32]
   14fd0:	lsr	x9, x9, #1
   14fd4:	tst	x8, x9
   14fd8:	cset	w10, ne  // ne = any
   14fdc:	and	w10, w10, #0x1
   14fe0:	str	w10, [sp, #156]
   14fe4:	str	xzr, [sp, #176]
   14fe8:	ldur	x8, [x29, #-32]
   14fec:	str	x8, [sp, #160]
   14ff0:	ldr	x8, [sp, #160]
   14ff4:	cmp	x8, #0x3
   14ff8:	b.ls	15018 <mpc_pow_usi@@Base+0x248>  // b.plast
   14ffc:	ldr	x8, [sp, #176]
   15000:	add	x8, x8, #0x1
   15004:	str	x8, [sp, #176]
   15008:	ldr	x8, [sp, #160]
   1500c:	lsr	x8, x8, #1
   15010:	str	x8, [sp, #160]
   15014:	b	14ff0 <mpc_pow_usi@@Base+0x220>
   15018:	ldr	x8, [sp, #176]
   1501c:	add	x8, x8, #0x2
   15020:	str	x8, [sp, #168]
   15024:	ldur	x8, [x29, #-16]
   15028:	ldr	x8, [x8]
   1502c:	ldur	x9, [x29, #-16]
   15030:	ldr	x9, [x9, #32]
   15034:	cmp	x8, x9
   15038:	b.le	1504c <mpc_pow_usi@@Base+0x27c>
   1503c:	ldur	x8, [x29, #-16]
   15040:	ldr	x8, [x8]
   15044:	str	x8, [sp, #64]
   15048:	b	15058 <mpc_pow_usi@@Base+0x288>
   1504c:	ldur	x8, [x29, #-16]
   15050:	ldr	x8, [x8, #32]
   15054:	str	x8, [sp, #64]
   15058:	ldr	x8, [sp, #64]
   1505c:	ldr	x9, [sp, #168]
   15060:	add	x8, x8, x9
   15064:	add	x8, x8, #0x20
   15068:	str	x8, [sp, #184]
   1506c:	ldr	x1, [sp, #184]
   15070:	sub	x0, x29, #0x70
   15074:	bl	4db0 <mpc_init2@plt>
   15078:	ldr	w10, [sp, #156]
   1507c:	cbz	w10, 1508c <mpc_pow_usi@@Base+0x2bc>
   15080:	ldr	x1, [sp, #184]
   15084:	sub	x0, x29, #0xb0
   15088:	bl	4db0 <mpc_init2@plt>
   1508c:	str	wzr, [sp, #152]
   15090:	str	wzr, [sp, #148]
   15094:	ldr	w8, [sp, #148]
   15098:	cmp	w8, #0x0
   1509c:	cset	w8, ne  // ne = any
   150a0:	eor	w8, w8, #0x1
   150a4:	tbnz	w8, #0, 150ac <mpc_pow_usi@@Base+0x2dc>
   150a8:	b	154b0 <mpc_pow_usi@@Base+0x6e0>
   150ac:	ldr	w8, [sp, #152]
   150b0:	add	w8, w8, #0x1
   150b4:	str	w8, [sp, #152]
   150b8:	ldur	x1, [x29, #-24]
   150bc:	sub	x0, x29, #0x70
   150c0:	mov	w8, wzr
   150c4:	mov	w2, w8
   150c8:	bl	5030 <mpc_sqr@plt>
   150cc:	ldr	w8, [sp, #156]
   150d0:	cbz	w8, 15114 <mpc_pow_usi@@Base+0x344>
   150d4:	ldur	x2, [x29, #-24]
   150d8:	sub	x0, x29, #0xb0
   150dc:	sub	x1, x29, #0x70
   150e0:	mov	w8, wzr
   150e4:	mov	w3, w8
   150e8:	bl	4fd0 <mpc_mul@plt>
   150ec:	ldur	x9, [x29, #-32]
   150f0:	ldr	x10, [sp, #176]
   150f4:	lsr	x9, x9, x10
   150f8:	and	x9, x9, #0x1
   150fc:	cbz	x9, 15114 <mpc_pow_usi@@Base+0x344>
   15100:	sub	x0, x29, #0x70
   15104:	sub	x1, x29, #0xb0
   15108:	mov	w8, wzr
   1510c:	mov	w2, w8
   15110:	bl	5680 <mpc_set@plt>
   15114:	ldr	x8, [sp, #176]
   15118:	subs	x9, x8, #0x1
   1511c:	str	x9, [sp, #176]
   15120:	cmp	x8, #0x0
   15124:	cset	w10, le
   15128:	tbnz	w10, #0, 151e8 <mpc_pow_usi@@Base+0x418>
   1512c:	sub	x8, x29, #0x70
   15130:	mov	x0, x8
   15134:	mov	x1, x8
   15138:	mov	w9, wzr
   1513c:	mov	w2, w9
   15140:	bl	5030 <mpc_sqr@plt>
   15144:	ldur	x8, [x29, #-32]
   15148:	ldr	x10, [sp, #176]
   1514c:	lsr	x8, x8, x10
   15150:	and	x8, x8, #0x1
   15154:	cbz	x8, 151e4 <mpc_pow_usi@@Base+0x414>
   15158:	ldr	x8, [sp, #176]
   1515c:	cmp	x8, #0x0
   15160:	cset	w9, le
   15164:	tbnz	w9, #0, 151c8 <mpc_pow_usi@@Base+0x3f8>
   15168:	ldur	x8, [x29, #-32]
   1516c:	ldr	x9, [sp, #176]
   15170:	subs	x9, x9, #0x1
   15174:	lsr	x8, x8, x9
   15178:	and	x8, x8, #0x1
   1517c:	cbz	x8, 151c8 <mpc_pow_usi@@Base+0x3f8>
   15180:	ldr	x8, [sp, #176]
   15184:	subs	x8, x8, #0x1
   15188:	str	x8, [sp, #176]
   1518c:	sub	x8, x29, #0x70
   15190:	mov	x0, x8
   15194:	mov	x1, x8
   15198:	mov	w9, wzr
   1519c:	mov	w2, w9
   151a0:	str	x8, [sp, #56]
   151a4:	str	w9, [sp, #52]
   151a8:	bl	5030 <mpc_sqr@plt>
   151ac:	ldr	x8, [sp, #56]
   151b0:	mov	x0, x8
   151b4:	mov	x1, x8
   151b8:	sub	x2, x29, #0xb0
   151bc:	ldr	w3, [sp, #52]
   151c0:	bl	4fd0 <mpc_mul@plt>
   151c4:	b	151e4 <mpc_pow_usi@@Base+0x414>
   151c8:	ldur	x2, [x29, #-24]
   151cc:	sub	x8, x29, #0x70
   151d0:	mov	x0, x8
   151d4:	mov	x1, x8
   151d8:	mov	w9, wzr
   151dc:	mov	w3, w9
   151e0:	bl	4fd0 <mpc_mul@plt>
   151e4:	b	15114 <mpc_pow_usi@@Base+0x344>
   151e8:	ldur	w8, [x29, #-36]
   151ec:	cmp	w8, #0x0
   151f0:	cset	w8, ge  // ge = tcont
   151f4:	tbnz	w8, #0, 15214 <mpc_pow_usi@@Base+0x444>
   151f8:	sub	x8, x29, #0x70
   151fc:	mov	x0, x8
   15200:	mov	x1, #0x1                   	// #1
   15204:	mov	x2, x8
   15208:	mov	w9, wzr
   1520c:	mov	w3, w9
   15210:	bl	56b0 <mpc_ui_div@plt>
   15214:	ldur	x8, [x29, #-96]
   15218:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1521c:	cmp	x8, x9
   15220:	b.eq	15234 <mpc_pow_usi@@Base+0x464>  // b.none
   15224:	ldur	x8, [x29, #-64]
   15228:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1522c:	cmp	x8, x9
   15230:	b.ne	1525c <mpc_pow_usi@@Base+0x48c>  // b.any
   15234:	ldur	x0, [x29, #-16]
   15238:	ldur	x1, [x29, #-24]
   1523c:	ldur	x2, [x29, #-32]
   15240:	ldur	w3, [x29, #-36]
   15244:	ldur	w4, [x29, #-40]
   15248:	bl	154e4 <mpc_pow_usi@@Base+0x714>
   1524c:	stur	w0, [x29, #-44]
   15250:	mov	w8, #0x1                   	// #1
   15254:	str	w8, [sp, #148]
   15258:	b	154ac <mpc_pow_usi@@Base+0x6dc>
   1525c:	ldur	x8, [x29, #-96]
   15260:	ldur	x9, [x29, #-64]
   15264:	subs	x8, x8, x9
   15268:	str	x8, [sp, #120]
   1526c:	ldr	x8, [sp, #120]
   15270:	cmp	x8, #0x1
   15274:	b.lt	15288 <mpc_pow_usi@@Base+0x4b8>  // b.tstop
   15278:	ldr	x8, [sp, #168]
   1527c:	add	x8, x8, #0x3
   15280:	str	x8, [sp, #40]
   15284:	b	152a4 <mpc_pow_usi@@Base+0x4d4>
   15288:	ldr	x8, [sp, #168]
   1528c:	ldr	x9, [sp, #120]
   15290:	mov	x10, xzr
   15294:	subs	x9, x10, x9
   15298:	add	x8, x8, x9
   1529c:	add	x8, x8, #0x3
   152a0:	str	x8, [sp, #40]
   152a4:	ldr	x8, [sp, #40]
   152a8:	str	x8, [sp, #112]
   152ac:	ldr	x8, [sp, #120]
   152b0:	mov	x9, #0xffffffffffffffff    	// #-1
   152b4:	cmp	x8, x9
   152b8:	b.gt	152cc <mpc_pow_usi@@Base+0x4fc>
   152bc:	ldr	x8, [sp, #168]
   152c0:	add	x8, x8, #0x3
   152c4:	str	x8, [sp, #32]
   152c8:	b	152e0 <mpc_pow_usi@@Base+0x510>
   152cc:	ldr	x8, [sp, #168]
   152d0:	ldr	x9, [sp, #120]
   152d4:	add	x8, x8, x9
   152d8:	add	x8, x8, #0x3
   152dc:	str	x8, [sp, #32]
   152e0:	ldr	x8, [sp, #32]
   152e4:	str	x8, [sp, #104]
   152e8:	ldr	x8, [sp, #184]
   152ec:	ldr	x9, [sp, #112]
   152f0:	subs	x1, x8, x9
   152f4:	ldur	x8, [x29, #-16]
   152f8:	ldr	x8, [x8]
   152fc:	ldur	w10, [x29, #-40]
   15300:	mov	w11, wzr
   15304:	tst	w10, #0xf
   15308:	cset	w10, eq  // eq = none
   1530c:	and	w10, w10, #0x1
   15310:	add	x4, x8, w10, sxtw
   15314:	sub	x0, x29, #0x70
   15318:	mov	w2, w11
   1531c:	mov	w3, #0x1                   	// #1
   15320:	bl	5540 <mpfr_can_round@plt>
   15324:	cbz	w0, 15390 <mpc_pow_usi@@Base+0x5c0>
   15328:	sub	x8, x29, #0x70
   1532c:	add	x0, x8, #0x20
   15330:	ldr	x8, [sp, #184]
   15334:	ldr	x9, [sp, #104]
   15338:	subs	x1, x8, x9
   1533c:	ldur	x8, [x29, #-16]
   15340:	ldr	x8, [x8, #32]
   15344:	ldur	w10, [x29, #-40]
   15348:	asr	w10, w10, #4
   1534c:	mov	w11, wzr
   15350:	cmp	w10, #0x0
   15354:	cset	w10, eq  // eq = none
   15358:	and	w10, w10, #0x1
   1535c:	add	x4, x8, w10, sxtw
   15360:	mov	w2, w11
   15364:	mov	w3, #0x1                   	// #1
   15368:	bl	5540 <mpfr_can_round@plt>
   1536c:	cbz	w0, 15390 <mpc_pow_usi@@Base+0x5c0>
   15370:	ldur	x0, [x29, #-16]
   15374:	ldur	w2, [x29, #-40]
   15378:	sub	x1, x29, #0x70
   1537c:	bl	5680 <mpc_set@plt>
   15380:	stur	w0, [x29, #-44]
   15384:	mov	w8, #0x1                   	// #1
   15388:	str	w8, [sp, #148]
   1538c:	b	154ac <mpc_pow_usi@@Base+0x6dc>
   15390:	ldr	w8, [sp, #152]
   15394:	cmp	w8, #0x1
   15398:	b.ne	15488 <mpc_pow_usi@@Base+0x6b8>  // b.any
   1539c:	ldr	x8, [sp, #120]
   153a0:	cmp	x8, #0x0
   153a4:	cset	w9, lt  // lt = tstop
   153a8:	tbnz	w9, #0, 153b8 <mpc_pow_usi@@Base+0x5e8>
   153ac:	ldr	x8, [sp, #120]
   153b0:	str	x8, [sp, #24]
   153b4:	b	153c8 <mpc_pow_usi@@Base+0x5f8>
   153b8:	ldr	x8, [sp, #120]
   153bc:	mov	x9, xzr
   153c0:	subs	x8, x9, x8
   153c4:	str	x8, [sp, #24]
   153c8:	ldr	x8, [sp, #24]
   153cc:	ldur	x9, [x29, #-16]
   153d0:	ldr	x9, [x9]
   153d4:	ldur	x10, [x29, #-16]
   153d8:	ldr	x10, [x10, #32]
   153dc:	cmp	x9, x10
   153e0:	str	x8, [sp, #16]
   153e4:	b.le	153f8 <mpc_pow_usi@@Base+0x628>
   153e8:	ldur	x8, [x29, #-16]
   153ec:	ldr	x8, [x8]
   153f0:	str	x8, [sp, #8]
   153f4:	b	15404 <mpc_pow_usi@@Base+0x634>
   153f8:	ldur	x8, [x29, #-16]
   153fc:	ldr	x8, [x8, #32]
   15400:	str	x8, [sp, #8]
   15404:	ldr	x8, [sp, #8]
   15408:	ldr	x9, [sp, #16]
   1540c:	cmp	x9, x8
   15410:	b.ge	15488 <mpc_pow_usi@@Base+0x6b8>  // b.tcont
   15414:	ldur	x8, [x29, #-24]
   15418:	ldr	x8, [x8]
   1541c:	ldur	x9, [x29, #-24]
   15420:	ldr	x9, [x9, #32]
   15424:	cmp	x8, x9
   15428:	b.le	1543c <mpc_pow_usi@@Base+0x66c>
   1542c:	ldur	x8, [x29, #-24]
   15430:	ldr	x8, [x8]
   15434:	str	x8, [sp]
   15438:	b	15448 <mpc_pow_usi@@Base+0x678>
   1543c:	ldur	x8, [x29, #-24]
   15440:	ldr	x8, [x8, #32]
   15444:	str	x8, [sp]
   15448:	ldr	x8, [sp]
   1544c:	ldr	x9, [sp, #184]
   15450:	add	x8, x9, x8
   15454:	str	x8, [sp, #184]
   15458:	ldr	x1, [sp, #184]
   1545c:	sub	x0, x29, #0x70
   15460:	bl	4cd0 <mpc_set_prec@plt>
   15464:	ldr	w10, [sp, #156]
   15468:	cbz	w10, 15478 <mpc_pow_usi@@Base+0x6a8>
   1546c:	ldr	x1, [sp, #184]
   15470:	sub	x0, x29, #0xb0
   15474:	bl	4cd0 <mpc_set_prec@plt>
   15478:	ldr	x8, [sp, #168]
   1547c:	subs	x8, x8, #0x2
   15480:	str	x8, [sp, #176]
   15484:	b	154ac <mpc_pow_usi@@Base+0x6dc>
   15488:	ldur	x0, [x29, #-16]
   1548c:	ldur	x1, [x29, #-24]
   15490:	ldur	x2, [x29, #-32]
   15494:	ldur	w3, [x29, #-36]
   15498:	ldur	w4, [x29, #-40]
   1549c:	bl	154e4 <mpc_pow_usi@@Base+0x714>
   154a0:	stur	w0, [x29, #-44]
   154a4:	mov	w8, #0x1                   	// #1
   154a8:	str	w8, [sp, #148]
   154ac:	b	15094 <mpc_pow_usi@@Base+0x2c4>
   154b0:	sub	x0, x29, #0x70
   154b4:	bl	4af0 <mpc_clear@plt>
   154b8:	ldr	w8, [sp, #156]
   154bc:	cbz	w8, 154c8 <mpc_pow_usi@@Base+0x6f8>
   154c0:	sub	x0, x29, #0xb0
   154c4:	bl	4af0 <mpc_clear@plt>
   154c8:	ldur	w8, [x29, #-44]
   154cc:	stur	w8, [x29, #-4]
   154d0:	ldur	w0, [x29, #-4]
   154d4:	ldr	x28, [sp, #384]
   154d8:	ldp	x29, x30, [sp, #368]
   154dc:	add	sp, sp, #0x190
   154e0:	ret
   154e4:	sub	sp, sp, #0x80
   154e8:	stp	x29, x30, [sp, #112]
   154ec:	add	x29, sp, #0x70
   154f0:	mov	x8, #0x40                  	// #64
   154f4:	mov	x9, #0x1                   	// #1
   154f8:	add	x10, sp, #0x8
   154fc:	stur	x0, [x29, #-8]
   15500:	stur	x1, [x29, #-16]
   15504:	stur	x2, [x29, #-24]
   15508:	stur	w3, [x29, #-28]
   1550c:	stur	w4, [x29, #-32]
   15510:	mov	x0, x10
   15514:	mov	x1, x8
   15518:	mov	x2, x9
   1551c:	bl	54c0 <mpc_init3@plt>
   15520:	ldur	w11, [x29, #-28]
   15524:	cmp	w11, #0x0
   15528:	cset	w11, le
   1552c:	tbnz	w11, #0, 15548 <mpc_pow_usi@@Base+0x778>
   15530:	ldur	x1, [x29, #-24]
   15534:	add	x0, sp, #0x8
   15538:	mov	w8, wzr
   1553c:	mov	w2, w8
   15540:	bl	4da0 <mpc_set_ui@plt>
   15544:	b	15564 <mpc_pow_usi@@Base+0x794>
   15548:	ldur	x8, [x29, #-24]
   1554c:	mov	x9, xzr
   15550:	subs	x1, x9, x8
   15554:	add	x0, sp, #0x8
   15558:	mov	w10, wzr
   1555c:	mov	w2, w10
   15560:	bl	5120 <mpc_set_si@plt>
   15564:	ldur	x0, [x29, #-8]
   15568:	ldur	x1, [x29, #-16]
   1556c:	ldur	w3, [x29, #-32]
   15570:	add	x8, sp, #0x8
   15574:	mov	x2, x8
   15578:	str	x8, [sp]
   1557c:	bl	5340 <mpc_pow@plt>
   15580:	stur	w0, [x29, #-36]
   15584:	ldr	x0, [sp]
   15588:	bl	4af0 <mpc_clear@plt>
   1558c:	ldur	w0, [x29, #-36]
   15590:	ldp	x29, x30, [sp, #112]
   15594:	add	sp, sp, #0x80
   15598:	ret

000000000001559c <mpc_pow_ui@@Base>:
   1559c:	sub	sp, sp, #0x30
   155a0:	stp	x29, x30, [sp, #32]
   155a4:	add	x29, sp, #0x20
   155a8:	mov	w8, #0x1                   	// #1
   155ac:	stur	x0, [x29, #-8]
   155b0:	str	x1, [sp, #16]
   155b4:	str	x2, [sp, #8]
   155b8:	str	w3, [sp, #4]
   155bc:	ldur	x0, [x29, #-8]
   155c0:	ldr	x1, [sp, #16]
   155c4:	ldr	x2, [sp, #8]
   155c8:	ldr	w4, [sp, #4]
   155cc:	mov	w3, w8
   155d0:	bl	4ed0 <mpc_pow_usi@plt>
   155d4:	ldp	x29, x30, [sp, #32]
   155d8:	add	sp, sp, #0x30
   155dc:	ret

00000000000155e0 <mpc_pow_z@@Base>:
   155e0:	sub	sp, sp, #0xd0
   155e4:	stp	x29, x30, [sp, #192]
   155e8:	add	x29, sp, #0xc0
   155ec:	mov	w8, #0x2                   	// #2
   155f0:	stur	x0, [x29, #-16]
   155f4:	stur	x1, [x29, #-24]
   155f8:	stur	x2, [x29, #-32]
   155fc:	stur	w3, [x29, #-36]
   15600:	ldur	x0, [x29, #-32]
   15604:	mov	w1, w8
   15608:	bl	55a0 <__gmpz_sizeinbase@plt>
   1560c:	str	x0, [sp, #72]
   15610:	ldur	x9, [x29, #-32]
   15614:	ldr	w8, [x9, #4]
   15618:	cmp	w8, #0x0
   1561c:	cset	w8, ge  // ge = tcont
   15620:	tbnz	w8, #0, 15630 <mpc_pow_z@@Base+0x50>
   15624:	mov	w8, #0xffffffff            	// #-1
   15628:	str	w8, [sp, #68]
   1562c:	b	15648 <mpc_pow_z@@Base+0x68>
   15630:	ldur	x8, [x29, #-32]
   15634:	ldr	w9, [x8, #4]
   15638:	cmp	w9, #0x0
   1563c:	cset	w9, gt
   15640:	and	w9, w9, #0x1
   15644:	str	w9, [sp, #68]
   15648:	ldr	w8, [sp, #68]
   1564c:	cmp	w8, #0x0
   15650:	cset	w8, lt  // lt = tstop
   15654:	tbnz	w8, #0, 156ac <mpc_pow_z@@Base+0xcc>
   15658:	ldur	x0, [x29, #-32]
   1565c:	bl	4f20 <__gmpz_fits_ulong_p@plt>
   15660:	cbz	w0, 156a8 <mpc_pow_z@@Base+0xc8>
   15664:	ldur	x0, [x29, #-16]
   15668:	ldur	x1, [x29, #-24]
   1566c:	ldur	x8, [x29, #-32]
   15670:	str	x0, [sp, #56]
   15674:	mov	x0, x8
   15678:	str	x1, [sp, #48]
   1567c:	bl	4fc0 <__gmpz_get_ui@plt>
   15680:	ldur	w4, [x29, #-36]
   15684:	ldr	x8, [sp, #56]
   15688:	str	x0, [sp, #40]
   1568c:	mov	x0, x8
   15690:	ldr	x1, [sp, #48]
   15694:	ldr	x2, [sp, #40]
   15698:	mov	w3, #0x1                   	// #1
   1569c:	bl	4ed0 <mpc_pow_usi@plt>
   156a0:	stur	w0, [x29, #-4]
   156a4:	b	15774 <mpc_pow_z@@Base+0x194>
   156a8:	b	156f8 <mpc_pow_z@@Base+0x118>
   156ac:	ldur	x0, [x29, #-32]
   156b0:	bl	4d20 <__gmpz_fits_slong_p@plt>
   156b4:	cbz	w0, 156f8 <mpc_pow_z@@Base+0x118>
   156b8:	ldur	x0, [x29, #-16]
   156bc:	ldur	x1, [x29, #-24]
   156c0:	ldur	x8, [x29, #-32]
   156c4:	str	x0, [sp, #32]
   156c8:	mov	x0, x8
   156cc:	str	x1, [sp, #24]
   156d0:	bl	4a80 <__gmpz_get_si@plt>
   156d4:	mov	x8, xzr
   156d8:	subs	x2, x8, x0
   156dc:	ldur	w4, [x29, #-36]
   156e0:	ldr	x0, [sp, #32]
   156e4:	ldr	x1, [sp, #24]
   156e8:	mov	w3, #0xffffffff            	// #-1
   156ec:	bl	4ed0 <mpc_pow_usi@plt>
   156f0:	stur	w0, [x29, #-4]
   156f4:	b	15774 <mpc_pow_z@@Base+0x194>
   156f8:	ldr	x8, [sp, #72]
   156fc:	cmp	x8, #0x1
   15700:	b.ge	15710 <mpc_pow_z@@Base+0x130>  // b.tcont
   15704:	mov	x8, #0x1                   	// #1
   15708:	str	x8, [sp, #16]
   1570c:	b	15718 <mpc_pow_z@@Base+0x138>
   15710:	ldr	x8, [sp, #72]
   15714:	str	x8, [sp, #16]
   15718:	ldr	x8, [sp, #16]
   1571c:	add	x9, sp, #0x58
   15720:	mov	x0, x9
   15724:	mov	x1, x8
   15728:	mov	x2, #0x1                   	// #1
   1572c:	str	x9, [sp, #8]
   15730:	bl	54c0 <mpc_init3@plt>
   15734:	ldur	x1, [x29, #-32]
   15738:	ldr	x0, [sp, #8]
   1573c:	mov	w10, wzr
   15740:	mov	w2, w10
   15744:	bl	51a0 <mpc_set_z@plt>
   15748:	ldur	x8, [x29, #-16]
   1574c:	ldur	x1, [x29, #-24]
   15750:	ldur	w3, [x29, #-36]
   15754:	mov	x0, x8
   15758:	ldr	x2, [sp, #8]
   1575c:	bl	5340 <mpc_pow@plt>
   15760:	str	w0, [sp, #84]
   15764:	ldr	x0, [sp, #8]
   15768:	bl	4af0 <mpc_clear@plt>
   1576c:	ldr	w10, [sp, #84]
   15770:	stur	w10, [x29, #-4]
   15774:	ldur	w0, [x29, #-4]
   15778:	ldp	x29, x30, [sp, #192]
   1577c:	add	sp, sp, #0xd0
   15780:	ret

0000000000015784 <mpc_proj@@Base>:
   15784:	sub	sp, sp, #0x30
   15788:	stp	x29, x30, [sp, #32]
   1578c:	add	x29, sp, #0x20
   15790:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   15794:	str	x0, [sp, #16]
   15798:	str	x1, [sp, #8]
   1579c:	str	w2, [sp, #4]
   157a0:	ldr	x9, [sp, #8]
   157a4:	ldr	x9, [x9, #16]
   157a8:	cmp	x9, x8
   157ac:	b.eq	157c4 <mpc_proj@@Base+0x40>  // b.none
   157b0:	ldr	x8, [sp, #8]
   157b4:	ldr	x8, [x8, #48]
   157b8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   157bc:	cmp	x8, x9
   157c0:	b.ne	15804 <mpc_proj@@Base+0x80>  // b.any
   157c4:	ldr	x0, [sp, #16]
   157c8:	mov	w8, #0x1                   	// #1
   157cc:	mov	w1, w8
   157d0:	str	w8, [sp]
   157d4:	bl	5220 <mpfr_set_inf@plt>
   157d8:	ldr	x9, [sp, #16]
   157dc:	add	x0, x9, #0x20
   157e0:	ldr	x9, [sp, #8]
   157e4:	ldr	w8, [x9, #40]
   157e8:	mov	w10, #0xffffffff            	// #-1
   157ec:	cmp	w8, #0x0
   157f0:	ldr	w8, [sp]
   157f4:	csel	w1, w10, w8, lt  // lt = tstop
   157f8:	bl	4dd0 <mpfr_set_zero@plt>
   157fc:	stur	wzr, [x29, #-4]
   15800:	b	15818 <mpc_proj@@Base+0x94>
   15804:	ldr	x0, [sp, #16]
   15808:	ldr	x1, [sp, #8]
   1580c:	ldr	w2, [sp, #4]
   15810:	bl	5680 <mpc_set@plt>
   15814:	stur	w0, [x29, #-4]
   15818:	ldur	w0, [x29, #-4]
   1581c:	ldp	x29, x30, [sp, #32]
   15820:	add	sp, sp, #0x30
   15824:	ret

0000000000015828 <mpc_real@@Base>:
   15828:	sub	sp, sp, #0x30
   1582c:	stp	x29, x30, [sp, #32]
   15830:	add	x29, sp, #0x20
   15834:	stur	x0, [x29, #-8]
   15838:	str	x1, [sp, #16]
   1583c:	str	w2, [sp, #12]
   15840:	ldur	x0, [x29, #-8]
   15844:	ldr	x1, [sp, #16]
   15848:	ldr	w2, [sp, #12]
   1584c:	ldr	x8, [sp, #16]
   15850:	ldr	w3, [x8, #8]
   15854:	bl	52d0 <mpfr_set4@plt>
   15858:	ldp	x29, x30, [sp, #32]
   1585c:	add	sp, sp, #0x30
   15860:	ret

0000000000015864 <mpc_rootofunity@@Base>:
   15864:	sub	sp, sp, #0x1f0
   15868:	stp	x29, x30, [sp, #464]
   1586c:	str	x28, [sp, #480]
   15870:	add	x29, sp, #0x1d0
   15874:	sub	x8, x29, #0x30
   15878:	adrp	x9, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   1587c:	ldr	x9, [x9, #4008]
   15880:	adrp	x10, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   15884:	add	x10, x10, #0x2a0
   15888:	adrp	x11, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1588c:	add	x11, x11, #0x53d
   15890:	str	x0, [x8, #32]
   15894:	str	x1, [x8, #24]
   15898:	str	x2, [x8, #16]
   1589c:	stur	w3, [x29, #-36]
   158a0:	ldr	x12, [x8, #24]
   158a4:	str	x8, [sp, #224]
   158a8:	str	x9, [sp, #216]
   158ac:	str	x10, [sp, #208]
   158b0:	str	x11, [sp, #200]
   158b4:	cbnz	x12, 158dc <mpc_rootofunity@@Base+0x78>
   158b8:	ldr	x8, [sp, #224]
   158bc:	ldr	x0, [x8, #32]
   158c0:	bl	4b20 <mpfr_set_nan@plt>
   158c4:	ldr	x8, [sp, #224]
   158c8:	ldr	x9, [x8, #32]
   158cc:	add	x0, x9, #0x20
   158d0:	bl	4b20 <mpfr_set_nan@plt>
   158d4:	stur	wzr, [x29, #-4]
   158d8:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   158dc:	ldr	x8, [sp, #224]
   158e0:	ldr	x9, [x8, #24]
   158e4:	ldr	x10, [x8, #16]
   158e8:	udiv	x11, x10, x9
   158ec:	mul	x9, x11, x9
   158f0:	subs	x9, x10, x9
   158f4:	str	x9, [x8, #16]
   158f8:	ldr	x0, [x8, #16]
   158fc:	ldr	x1, [x8, #24]
   15900:	bl	164d8 <mpc_rootofunity@@Base+0xc74>
   15904:	ldr	x8, [sp, #224]
   15908:	str	x0, [x8]
   1590c:	ldr	x9, [x8]
   15910:	ldr	x10, [x8, #16]
   15914:	udiv	x9, x10, x9
   15918:	str	x9, [x8, #16]
   1591c:	ldr	x9, [x8]
   15920:	ldr	x10, [x8, #24]
   15924:	udiv	x9, x10, x9
   15928:	str	x9, [x8, #24]
   1592c:	ldr	x9, [x8, #24]
   15930:	cmp	x9, #0x1
   15934:	b.ne	1598c <mpc_rootofunity@@Base+0x128>  // b.any
   15938:	ldr	x8, [sp, #224]
   1593c:	ldr	x9, [x8, #16]
   15940:	cbz	x9, 15968 <mpc_rootofunity@@Base+0x104>
   15944:	ldr	x8, [sp, #216]
   15948:	ldr	x0, [x8]
   1594c:	ldr	x1, [sp, #208]
   15950:	ldr	x2, [sp, #200]
   15954:	mov	w3, #0x40                  	// #64
   15958:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1595c:	add	x4, x4, #0x54b
   15960:	bl	56a0 <fprintf@plt>
   15964:	bl	5100 <abort@plt>
   15968:	ldr	x8, [sp, #224]
   1596c:	ldr	x0, [x8, #32]
   15970:	ldur	w3, [x29, #-36]
   15974:	mov	x1, #0x1                   	// #1
   15978:	mov	x9, xzr
   1597c:	mov	x2, x9
   15980:	bl	5140 <mpc_set_ui_ui@plt>
   15984:	stur	w0, [x29, #-4]
   15988:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   1598c:	ldr	x8, [sp, #224]
   15990:	ldr	x9, [x8, #24]
   15994:	cmp	x9, #0x2
   15998:	b.ne	159f4 <mpc_rootofunity@@Base+0x190>  // b.any
   1599c:	ldr	x8, [sp, #224]
   159a0:	ldr	x9, [x8, #16]
   159a4:	cmp	x9, #0x1
   159a8:	b.eq	159d0 <mpc_rootofunity@@Base+0x16c>  // b.none
   159ac:	ldr	x8, [sp, #216]
   159b0:	ldr	x0, [x8]
   159b4:	ldr	x1, [sp, #208]
   159b8:	ldr	x2, [sp, #200]
   159bc:	mov	w3, #0x46                  	// #70
   159c0:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   159c4:	add	x4, x4, #0x552
   159c8:	bl	56a0 <fprintf@plt>
   159cc:	bl	5100 <abort@plt>
   159d0:	ldr	x8, [sp, #224]
   159d4:	ldr	x0, [x8, #32]
   159d8:	ldur	w3, [x29, #-36]
   159dc:	mov	x1, #0xffffffffffffffff    	// #-1
   159e0:	mov	x9, xzr
   159e4:	mov	x2, x9
   159e8:	bl	53c0 <mpc_set_si_si@plt>
   159ec:	stur	w0, [x29, #-4]
   159f0:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   159f4:	ldr	x8, [sp, #224]
   159f8:	ldr	x9, [x8, #24]
   159fc:	cmp	x9, #0x4
   15a00:	b.ne	15aa0 <mpc_rootofunity@@Base+0x23c>  // b.any
   15a04:	ldr	x8, [sp, #224]
   15a08:	ldr	x9, [x8, #16]
   15a0c:	cmp	x9, #0x1
   15a10:	b.eq	15a48 <mpc_rootofunity@@Base+0x1e4>  // b.none
   15a14:	ldr	x8, [sp, #224]
   15a18:	ldr	x9, [x8, #16]
   15a1c:	cmp	x9, #0x3
   15a20:	b.eq	15a48 <mpc_rootofunity@@Base+0x1e4>  // b.none
   15a24:	ldr	x8, [sp, #216]
   15a28:	ldr	x0, [x8]
   15a2c:	ldr	x1, [sp, #208]
   15a30:	ldr	x2, [sp, #200]
   15a34:	mov	w3, #0x4d                  	// #77
   15a38:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   15a3c:	add	x4, x4, #0x559
   15a40:	bl	56a0 <fprintf@plt>
   15a44:	bl	5100 <abort@plt>
   15a48:	ldr	x8, [sp, #224]
   15a4c:	ldr	x9, [x8, #16]
   15a50:	cmp	x9, #0x1
   15a54:	b.ne	15a7c <mpc_rootofunity@@Base+0x218>  // b.any
   15a58:	ldr	x8, [sp, #224]
   15a5c:	ldr	x0, [x8, #32]
   15a60:	ldur	w3, [x29, #-36]
   15a64:	mov	x9, xzr
   15a68:	mov	x1, x9
   15a6c:	mov	x2, #0x1                   	// #1
   15a70:	bl	5140 <mpc_set_ui_ui@plt>
   15a74:	stur	w0, [x29, #-4]
   15a78:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   15a7c:	ldr	x8, [sp, #224]
   15a80:	ldr	x0, [x8, #32]
   15a84:	ldur	w3, [x29, #-36]
   15a88:	mov	x9, xzr
   15a8c:	mov	x1, x9
   15a90:	mov	x2, #0xffffffffffffffff    	// #-1
   15a94:	bl	53c0 <mpc_set_si_si@plt>
   15a98:	stur	w0, [x29, #-4]
   15a9c:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   15aa0:	ldr	x8, [sp, #224]
   15aa4:	ldr	x9, [x8, #24]
   15aa8:	cmp	x9, #0x3
   15aac:	b.eq	15ac0 <mpc_rootofunity@@Base+0x25c>  // b.none
   15ab0:	ldr	x8, [sp, #224]
   15ab4:	ldr	x9, [x8, #24]
   15ab8:	cmp	x9, #0x6
   15abc:	b.ne	15cec <mpc_rootofunity@@Base+0x488>  // b.any
   15ac0:	ldr	x8, [sp, #224]
   15ac4:	ldr	x9, [x8, #24]
   15ac8:	cmp	x9, #0x3
   15acc:	b.ne	15af0 <mpc_rootofunity@@Base+0x28c>  // b.any
   15ad0:	ldr	x8, [sp, #224]
   15ad4:	ldr	x9, [x8, #16]
   15ad8:	cmp	x9, #0x1
   15adc:	b.eq	15b44 <mpc_rootofunity@@Base+0x2e0>  // b.none
   15ae0:	ldr	x8, [sp, #224]
   15ae4:	ldr	x9, [x8, #16]
   15ae8:	cmp	x9, #0x2
   15aec:	b.eq	15b44 <mpc_rootofunity@@Base+0x2e0>  // b.none
   15af0:	ldr	x8, [sp, #224]
   15af4:	ldr	x9, [x8, #24]
   15af8:	cmp	x9, #0x6
   15afc:	b.ne	15b20 <mpc_rootofunity@@Base+0x2bc>  // b.any
   15b00:	ldr	x8, [sp, #224]
   15b04:	ldr	x9, [x8, #16]
   15b08:	cmp	x9, #0x1
   15b0c:	b.eq	15b44 <mpc_rootofunity@@Base+0x2e0>  // b.none
   15b10:	ldr	x8, [sp, #224]
   15b14:	ldr	x9, [x8, #16]
   15b18:	cmp	x9, #0x5
   15b1c:	b.eq	15b44 <mpc_rootofunity@@Base+0x2e0>  // b.none
   15b20:	ldr	x8, [sp, #216]
   15b24:	ldr	x0, [x8]
   15b28:	ldr	x1, [sp, #208]
   15b2c:	ldr	x2, [sp, #200]
   15b30:	mov	w3, #0x56                  	// #86
   15b34:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   15b38:	add	x4, x4, #0x56a
   15b3c:	bl	56a0 <fprintf@plt>
   15b40:	bl	5100 <abort@plt>
   15b44:	ldr	x8, [sp, #224]
   15b48:	ldr	x0, [x8, #32]
   15b4c:	ldr	x9, [x8, #24]
   15b50:	mov	w10, #0xffffffff            	// #-1
   15b54:	mov	w11, #0x1                   	// #1
   15b58:	cmp	x9, #0x3
   15b5c:	csel	w10, w10, w11, eq  // eq = none
   15b60:	mov	w1, w10
   15b64:	sxtw	x1, w1
   15b68:	ldur	w10, [x29, #-36]
   15b6c:	and	w3, w10, #0xf
   15b70:	mov	x9, xzr
   15b74:	mov	x2, x9
   15b78:	bl	4ac0 <mpfr_set_si_2exp@plt>
   15b7c:	str	w0, [sp, #196]
   15b80:	ldr	w8, [sp, #196]
   15b84:	stur	w8, [x29, #-188]
   15b88:	ldur	w9, [x29, #-36]
   15b8c:	asr	w9, w9, #4
   15b90:	stur	w9, [x29, #-200]
   15b94:	ldr	x10, [sp, #224]
   15b98:	ldr	x11, [x10, #16]
   15b9c:	cmp	x11, #0x1
   15ba0:	b.eq	15bec <mpc_rootofunity@@Base+0x388>  // b.none
   15ba4:	ldur	w8, [x29, #-200]
   15ba8:	cmp	w8, #0x2
   15bac:	b.ne	15bbc <mpc_rootofunity@@Base+0x358>  // b.any
   15bb0:	mov	w8, #0x3                   	// #3
   15bb4:	str	w8, [sp, #192]
   15bb8:	b	15be4 <mpc_rootofunity@@Base+0x380>
   15bbc:	ldur	w8, [x29, #-200]
   15bc0:	cmp	w8, #0x3
   15bc4:	b.ne	15bd4 <mpc_rootofunity@@Base+0x370>  // b.any
   15bc8:	mov	w8, #0x2                   	// #2
   15bcc:	str	w8, [sp, #188]
   15bd0:	b	15bdc <mpc_rootofunity@@Base+0x378>
   15bd4:	ldur	w8, [x29, #-200]
   15bd8:	str	w8, [sp, #188]
   15bdc:	ldr	w8, [sp, #188]
   15be0:	str	w8, [sp, #192]
   15be4:	ldr	w8, [sp, #192]
   15be8:	stur	w8, [x29, #-200]
   15bec:	ldr	x8, [sp, #224]
   15bf0:	ldr	x9, [x8, #32]
   15bf4:	add	x0, x9, #0x20
   15bf8:	ldur	w2, [x29, #-200]
   15bfc:	mov	x1, #0x3                   	// #3
   15c00:	bl	5380 <mpfr_sqrt_ui@plt>
   15c04:	stur	w0, [x29, #-192]
   15c08:	ldr	x8, [sp, #224]
   15c0c:	ldr	x0, [x8, #32]
   15c10:	ldr	x1, [x8, #32]
   15c14:	mov	x2, #0x1                   	// #1
   15c18:	mov	w10, wzr
   15c1c:	mov	w3, w10
   15c20:	bl	5630 <mpc_div_2ui@plt>
   15c24:	ldr	x8, [sp, #224]
   15c28:	ldr	x9, [x8, #16]
   15c2c:	cmp	x9, #0x1
   15c30:	b.eq	15c68 <mpc_rootofunity@@Base+0x404>  // b.none
   15c34:	ldr	x8, [sp, #224]
   15c38:	ldr	x9, [x8, #32]
   15c3c:	add	x0, x9, #0x20
   15c40:	ldr	x9, [x8, #32]
   15c44:	add	x1, x9, #0x20
   15c48:	mov	w10, wzr
   15c4c:	mov	w2, w10
   15c50:	str	w10, [sp, #184]
   15c54:	bl	4c60 <mpfr_neg@plt>
   15c58:	ldur	w10, [x29, #-192]
   15c5c:	ldr	w11, [sp, #184]
   15c60:	subs	w10, w11, w10
   15c64:	stur	w10, [x29, #-192]
   15c68:	ldur	w8, [x29, #-188]
   15c6c:	cmp	w8, #0x0
   15c70:	cset	w8, ge  // ge = tcont
   15c74:	tbnz	w8, #0, 15c84 <mpc_rootofunity@@Base+0x420>
   15c78:	mov	w8, #0x2                   	// #2
   15c7c:	str	w8, [sp, #180]
   15c80:	b	15c9c <mpc_rootofunity@@Base+0x438>
   15c84:	ldur	w8, [x29, #-188]
   15c88:	mov	w9, wzr
   15c8c:	mov	w10, #0x1                   	// #1
   15c90:	cmp	w8, #0x0
   15c94:	csel	w8, w9, w10, eq  // eq = none
   15c98:	str	w8, [sp, #180]
   15c9c:	ldr	w8, [sp, #180]
   15ca0:	ldur	w9, [x29, #-192]
   15ca4:	cmp	w9, #0x0
   15ca8:	cset	w9, ge  // ge = tcont
   15cac:	str	w8, [sp, #176]
   15cb0:	tbnz	w9, #0, 15cc0 <mpc_rootofunity@@Base+0x45c>
   15cb4:	mov	w8, #0x2                   	// #2
   15cb8:	str	w8, [sp, #172]
   15cbc:	b	15cd8 <mpc_rootofunity@@Base+0x474>
   15cc0:	ldur	w8, [x29, #-192]
   15cc4:	mov	w9, wzr
   15cc8:	mov	w10, #0x1                   	// #1
   15ccc:	cmp	w8, #0x0
   15cd0:	csel	w8, w9, w10, eq  // eq = none
   15cd4:	str	w8, [sp, #172]
   15cd8:	ldr	w8, [sp, #172]
   15cdc:	ldr	w9, [sp, #176]
   15ce0:	orr	w8, w9, w8, lsl #2
   15ce4:	stur	w8, [x29, #-4]
   15ce8:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   15cec:	ldr	x8, [sp, #224]
   15cf0:	ldr	x9, [x8, #24]
   15cf4:	cmp	x9, #0xc
   15cf8:	b.ne	15f20 <mpc_rootofunity@@Base+0x6bc>  // b.any
   15cfc:	ldr	x8, [sp, #224]
   15d00:	ldr	x9, [x8, #16]
   15d04:	cmp	x9, #0x1
   15d08:	b.eq	15d60 <mpc_rootofunity@@Base+0x4fc>  // b.none
   15d0c:	ldr	x8, [sp, #224]
   15d10:	ldr	x9, [x8, #16]
   15d14:	cmp	x9, #0x5
   15d18:	b.eq	15d60 <mpc_rootofunity@@Base+0x4fc>  // b.none
   15d1c:	ldr	x8, [sp, #224]
   15d20:	ldr	x9, [x8, #16]
   15d24:	cmp	x9, #0x7
   15d28:	b.eq	15d60 <mpc_rootofunity@@Base+0x4fc>  // b.none
   15d2c:	ldr	x8, [sp, #224]
   15d30:	ldr	x9, [x8, #16]
   15d34:	cmp	x9, #0xb
   15d38:	b.eq	15d60 <mpc_rootofunity@@Base+0x4fc>  // b.none
   15d3c:	ldr	x8, [sp, #216]
   15d40:	ldr	x0, [x8]
   15d44:	ldr	x1, [sp, #208]
   15d48:	ldr	x2, [sp, #200]
   15d4c:	mov	w3, #0x6f                  	// #111
   15d50:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   15d54:	add	x4, x4, #0x5ab
   15d58:	bl	56a0 <fprintf@plt>
   15d5c:	bl	5100 <abort@plt>
   15d60:	ldur	w8, [x29, #-36]
   15d64:	and	w8, w8, #0xf
   15d68:	stur	w8, [x29, #-196]
   15d6c:	ldr	x9, [sp, #224]
   15d70:	ldr	x10, [x9, #16]
   15d74:	cmp	x10, #0x5
   15d78:	b.eq	15d8c <mpc_rootofunity@@Base+0x528>  // b.none
   15d7c:	ldr	x8, [sp, #224]
   15d80:	ldr	x9, [x8, #16]
   15d84:	cmp	x9, #0x7
   15d88:	b.ne	15dd4 <mpc_rootofunity@@Base+0x570>  // b.any
   15d8c:	ldur	w8, [x29, #-196]
   15d90:	cmp	w8, #0x2
   15d94:	b.ne	15da4 <mpc_rootofunity@@Base+0x540>  // b.any
   15d98:	mov	w8, #0x3                   	// #3
   15d9c:	str	w8, [sp, #168]
   15da0:	b	15dcc <mpc_rootofunity@@Base+0x568>
   15da4:	ldur	w8, [x29, #-196]
   15da8:	cmp	w8, #0x3
   15dac:	b.ne	15dbc <mpc_rootofunity@@Base+0x558>  // b.any
   15db0:	mov	w8, #0x2                   	// #2
   15db4:	str	w8, [sp, #164]
   15db8:	b	15dc4 <mpc_rootofunity@@Base+0x560>
   15dbc:	ldur	w8, [x29, #-196]
   15dc0:	str	w8, [sp, #164]
   15dc4:	ldr	w8, [sp, #164]
   15dc8:	str	w8, [sp, #168]
   15dcc:	ldr	w8, [sp, #168]
   15dd0:	stur	w8, [x29, #-196]
   15dd4:	ldr	x8, [sp, #224]
   15dd8:	ldr	x0, [x8, #32]
   15ddc:	ldur	w2, [x29, #-196]
   15de0:	mov	x1, #0x3                   	// #3
   15de4:	bl	5380 <mpfr_sqrt_ui@plt>
   15de8:	stur	w0, [x29, #-188]
   15dec:	ldr	x8, [sp, #224]
   15df0:	ldr	x9, [x8, #32]
   15df4:	add	x0, x9, #0x20
   15df8:	ldr	x9, [x8, #16]
   15dfc:	mov	w10, #0xffffffff            	// #-1
   15e00:	mov	w11, #0x1                   	// #1
   15e04:	cmp	x9, #0x6
   15e08:	csel	w10, w11, w10, cc  // cc = lo, ul, last
   15e0c:	mov	w1, w10
   15e10:	sxtw	x1, w1
   15e14:	ldur	w10, [x29, #-36]
   15e18:	asr	w3, w10, #4
   15e1c:	mov	x9, xzr
   15e20:	mov	x2, x9
   15e24:	bl	4ac0 <mpfr_set_si_2exp@plt>
   15e28:	str	w0, [sp, #160]
   15e2c:	ldr	w8, [sp, #160]
   15e30:	stur	w8, [x29, #-192]
   15e34:	ldr	x9, [sp, #224]
   15e38:	ldr	x0, [x9, #32]
   15e3c:	ldr	x1, [x9, #32]
   15e40:	mov	x2, #0x1                   	// #1
   15e44:	mov	w10, wzr
   15e48:	mov	w3, w10
   15e4c:	bl	5630 <mpc_div_2ui@plt>
   15e50:	ldr	x9, [sp, #224]
   15e54:	ldr	x11, [x9, #16]
   15e58:	cmp	x11, #0x5
   15e5c:	b.eq	15e70 <mpc_rootofunity@@Base+0x60c>  // b.none
   15e60:	ldr	x8, [sp, #224]
   15e64:	ldr	x9, [x8, #16]
   15e68:	cmp	x9, #0x7
   15e6c:	b.ne	15e9c <mpc_rootofunity@@Base+0x638>  // b.any
   15e70:	ldr	x8, [sp, #224]
   15e74:	ldr	x0, [x8, #32]
   15e78:	ldr	x1, [x8, #32]
   15e7c:	mov	w9, wzr
   15e80:	mov	w2, w9
   15e84:	str	w9, [sp, #156]
   15e88:	bl	4c60 <mpfr_neg@plt>
   15e8c:	ldur	w9, [x29, #-188]
   15e90:	ldr	w10, [sp, #156]
   15e94:	subs	w9, w10, w9
   15e98:	stur	w9, [x29, #-188]
   15e9c:	ldur	w8, [x29, #-188]
   15ea0:	cmp	w8, #0x0
   15ea4:	cset	w8, ge  // ge = tcont
   15ea8:	tbnz	w8, #0, 15eb8 <mpc_rootofunity@@Base+0x654>
   15eac:	mov	w8, #0x2                   	// #2
   15eb0:	str	w8, [sp, #152]
   15eb4:	b	15ed0 <mpc_rootofunity@@Base+0x66c>
   15eb8:	ldur	w8, [x29, #-188]
   15ebc:	mov	w9, wzr
   15ec0:	mov	w10, #0x1                   	// #1
   15ec4:	cmp	w8, #0x0
   15ec8:	csel	w8, w9, w10, eq  // eq = none
   15ecc:	str	w8, [sp, #152]
   15ed0:	ldr	w8, [sp, #152]
   15ed4:	ldur	w9, [x29, #-192]
   15ed8:	cmp	w9, #0x0
   15edc:	cset	w9, ge  // ge = tcont
   15ee0:	str	w8, [sp, #148]
   15ee4:	tbnz	w9, #0, 15ef4 <mpc_rootofunity@@Base+0x690>
   15ee8:	mov	w8, #0x2                   	// #2
   15eec:	str	w8, [sp, #144]
   15ef0:	b	15f0c <mpc_rootofunity@@Base+0x6a8>
   15ef4:	ldur	w8, [x29, #-192]
   15ef8:	mov	w9, wzr
   15efc:	mov	w10, #0x1                   	// #1
   15f00:	cmp	w8, #0x0
   15f04:	csel	w8, w9, w10, eq  // eq = none
   15f08:	str	w8, [sp, #144]
   15f0c:	ldr	w8, [sp, #144]
   15f10:	ldr	w9, [sp, #148]
   15f14:	orr	w8, w9, w8, lsl #2
   15f18:	stur	w8, [x29, #-4]
   15f1c:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   15f20:	ldr	x8, [sp, #224]
   15f24:	ldr	x9, [x8, #24]
   15f28:	cmp	x9, #0x8
   15f2c:	b.ne	161d8 <mpc_rootofunity@@Base+0x974>  // b.any
   15f30:	ldr	x8, [sp, #224]
   15f34:	ldr	x9, [x8, #16]
   15f38:	cmp	x9, #0x1
   15f3c:	b.eq	15f94 <mpc_rootofunity@@Base+0x730>  // b.none
   15f40:	ldr	x8, [sp, #224]
   15f44:	ldr	x9, [x8, #16]
   15f48:	cmp	x9, #0x3
   15f4c:	b.eq	15f94 <mpc_rootofunity@@Base+0x730>  // b.none
   15f50:	ldr	x8, [sp, #224]
   15f54:	ldr	x9, [x8, #16]
   15f58:	cmp	x9, #0x5
   15f5c:	b.eq	15f94 <mpc_rootofunity@@Base+0x730>  // b.none
   15f60:	ldr	x8, [sp, #224]
   15f64:	ldr	x9, [x8, #16]
   15f68:	cmp	x9, #0x7
   15f6c:	b.eq	15f94 <mpc_rootofunity@@Base+0x730>  // b.none
   15f70:	ldr	x8, [sp, #216]
   15f74:	ldr	x0, [x8]
   15f78:	ldr	x1, [sp, #208]
   15f7c:	ldr	x2, [sp, #200]
   15f80:	mov	w3, #0x86                  	// #134
   15f84:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   15f88:	add	x4, x4, #0x5d1
   15f8c:	bl	56a0 <fprintf@plt>
   15f90:	bl	5100 <abort@plt>
   15f94:	ldur	w8, [x29, #-36]
   15f98:	and	w8, w8, #0xf
   15f9c:	stur	w8, [x29, #-196]
   15fa0:	ldr	x9, [sp, #224]
   15fa4:	ldr	x10, [x9, #16]
   15fa8:	cmp	x10, #0x3
   15fac:	b.eq	15fc0 <mpc_rootofunity@@Base+0x75c>  // b.none
   15fb0:	ldr	x8, [sp, #224]
   15fb4:	ldr	x9, [x8, #16]
   15fb8:	cmp	x9, #0x5
   15fbc:	b.ne	16008 <mpc_rootofunity@@Base+0x7a4>  // b.any
   15fc0:	ldur	w8, [x29, #-196]
   15fc4:	cmp	w8, #0x2
   15fc8:	b.ne	15fd8 <mpc_rootofunity@@Base+0x774>  // b.any
   15fcc:	mov	w8, #0x3                   	// #3
   15fd0:	str	w8, [sp, #140]
   15fd4:	b	16000 <mpc_rootofunity@@Base+0x79c>
   15fd8:	ldur	w8, [x29, #-196]
   15fdc:	cmp	w8, #0x3
   15fe0:	b.ne	15ff0 <mpc_rootofunity@@Base+0x78c>  // b.any
   15fe4:	mov	w8, #0x2                   	// #2
   15fe8:	str	w8, [sp, #136]
   15fec:	b	15ff8 <mpc_rootofunity@@Base+0x794>
   15ff0:	ldur	w8, [x29, #-196]
   15ff4:	str	w8, [sp, #136]
   15ff8:	ldr	w8, [sp, #136]
   15ffc:	str	w8, [sp, #140]
   16000:	ldr	w8, [sp, #140]
   16004:	stur	w8, [x29, #-196]
   16008:	ldur	w8, [x29, #-36]
   1600c:	asr	w8, w8, #4
   16010:	stur	w8, [x29, #-200]
   16014:	ldr	x9, [sp, #224]
   16018:	ldr	x10, [x9, #16]
   1601c:	cmp	x10, #0x4
   16020:	b.ls	1606c <mpc_rootofunity@@Base+0x808>  // b.plast
   16024:	ldur	w8, [x29, #-200]
   16028:	cmp	w8, #0x2
   1602c:	b.ne	1603c <mpc_rootofunity@@Base+0x7d8>  // b.any
   16030:	mov	w8, #0x3                   	// #3
   16034:	str	w8, [sp, #132]
   16038:	b	16064 <mpc_rootofunity@@Base+0x800>
   1603c:	ldur	w8, [x29, #-200]
   16040:	cmp	w8, #0x3
   16044:	b.ne	16054 <mpc_rootofunity@@Base+0x7f0>  // b.any
   16048:	mov	w8, #0x2                   	// #2
   1604c:	str	w8, [sp, #128]
   16050:	b	1605c <mpc_rootofunity@@Base+0x7f8>
   16054:	ldur	w8, [x29, #-200]
   16058:	str	w8, [sp, #128]
   1605c:	ldr	w8, [sp, #128]
   16060:	str	w8, [sp, #132]
   16064:	ldr	w8, [sp, #132]
   16068:	stur	w8, [x29, #-200]
   1606c:	ldr	x8, [sp, #224]
   16070:	ldr	x0, [x8, #32]
   16074:	ldur	w2, [x29, #-196]
   16078:	mov	x9, #0x2                   	// #2
   1607c:	mov	x1, x9
   16080:	str	x9, [sp, #120]
   16084:	bl	5380 <mpfr_sqrt_ui@plt>
   16088:	stur	w0, [x29, #-188]
   1608c:	ldr	x8, [sp, #224]
   16090:	ldr	x9, [x8, #32]
   16094:	add	x0, x9, #0x20
   16098:	ldur	w2, [x29, #-200]
   1609c:	ldr	x1, [sp, #120]
   160a0:	bl	5380 <mpfr_sqrt_ui@plt>
   160a4:	stur	w0, [x29, #-192]
   160a8:	ldr	x8, [sp, #224]
   160ac:	ldr	x0, [x8, #32]
   160b0:	ldr	x1, [x8, #32]
   160b4:	mov	x2, #0x1                   	// #1
   160b8:	mov	w10, wzr
   160bc:	mov	w3, w10
   160c0:	bl	5630 <mpc_div_2ui@plt>
   160c4:	ldr	x8, [sp, #224]
   160c8:	ldr	x9, [x8, #16]
   160cc:	cmp	x9, #0x3
   160d0:	b.eq	160e4 <mpc_rootofunity@@Base+0x880>  // b.none
   160d4:	ldr	x8, [sp, #224]
   160d8:	ldr	x9, [x8, #16]
   160dc:	cmp	x9, #0x5
   160e0:	b.ne	16110 <mpc_rootofunity@@Base+0x8ac>  // b.any
   160e4:	ldr	x8, [sp, #224]
   160e8:	ldr	x0, [x8, #32]
   160ec:	ldr	x1, [x8, #32]
   160f0:	mov	w9, wzr
   160f4:	mov	w2, w9
   160f8:	str	w9, [sp, #116]
   160fc:	bl	4c60 <mpfr_neg@plt>
   16100:	ldur	w9, [x29, #-188]
   16104:	ldr	w10, [sp, #116]
   16108:	subs	w9, w10, w9
   1610c:	stur	w9, [x29, #-188]
   16110:	ldr	x8, [sp, #224]
   16114:	ldr	x9, [x8, #16]
   16118:	cmp	x9, #0x4
   1611c:	b.ls	16154 <mpc_rootofunity@@Base+0x8f0>  // b.plast
   16120:	ldr	x8, [sp, #224]
   16124:	ldr	x9, [x8, #32]
   16128:	add	x0, x9, #0x20
   1612c:	ldr	x9, [x8, #32]
   16130:	add	x1, x9, #0x20
   16134:	mov	w10, wzr
   16138:	mov	w2, w10
   1613c:	str	w10, [sp, #112]
   16140:	bl	4c60 <mpfr_neg@plt>
   16144:	ldur	w10, [x29, #-192]
   16148:	ldr	w11, [sp, #112]
   1614c:	subs	w10, w11, w10
   16150:	stur	w10, [x29, #-192]
   16154:	ldur	w8, [x29, #-188]
   16158:	cmp	w8, #0x0
   1615c:	cset	w8, ge  // ge = tcont
   16160:	tbnz	w8, #0, 16170 <mpc_rootofunity@@Base+0x90c>
   16164:	mov	w8, #0x2                   	// #2
   16168:	str	w8, [sp, #108]
   1616c:	b	16188 <mpc_rootofunity@@Base+0x924>
   16170:	ldur	w8, [x29, #-188]
   16174:	mov	w9, wzr
   16178:	mov	w10, #0x1                   	// #1
   1617c:	cmp	w8, #0x0
   16180:	csel	w8, w9, w10, eq  // eq = none
   16184:	str	w8, [sp, #108]
   16188:	ldr	w8, [sp, #108]
   1618c:	ldur	w9, [x29, #-192]
   16190:	cmp	w9, #0x0
   16194:	cset	w9, ge  // ge = tcont
   16198:	str	w8, [sp, #104]
   1619c:	tbnz	w9, #0, 161ac <mpc_rootofunity@@Base+0x948>
   161a0:	mov	w8, #0x2                   	// #2
   161a4:	str	w8, [sp, #100]
   161a8:	b	161c4 <mpc_rootofunity@@Base+0x960>
   161ac:	ldur	w8, [x29, #-192]
   161b0:	mov	w9, wzr
   161b4:	mov	w10, #0x1                   	// #1
   161b8:	cmp	w8, #0x0
   161bc:	csel	w8, w9, w10, eq  // eq = none
   161c0:	str	w8, [sp, #100]
   161c4:	ldr	w8, [sp, #100]
   161c8:	ldr	w9, [sp, #104]
   161cc:	orr	w8, w9, w8, lsl #2
   161d0:	stur	w8, [x29, #-4]
   161d4:	b	164c4 <mpc_rootofunity@@Base+0xc60>
   161d8:	ldr	x8, [sp, #224]
   161dc:	ldr	x9, [x8, #32]
   161e0:	ldr	x9, [x9]
   161e4:	ldr	x10, [x8, #32]
   161e8:	ldr	x10, [x10, #32]
   161ec:	cmp	x9, x10
   161f0:	b.le	16208 <mpc_rootofunity@@Base+0x9a4>
   161f4:	ldr	x8, [sp, #224]
   161f8:	ldr	x9, [x8, #32]
   161fc:	ldr	x9, [x9]
   16200:	str	x9, [sp, #88]
   16204:	b	16218 <mpc_rootofunity@@Base+0x9b4>
   16208:	ldr	x8, [sp, #224]
   1620c:	ldr	x9, [x8, #32]
   16210:	ldr	x9, [x9, #32]
   16214:	str	x9, [sp, #88]
   16218:	ldr	x8, [sp, #88]
   1621c:	stur	x8, [x29, #-184]
   16220:	sub	x0, x29, #0x70
   16224:	mov	x8, #0x43                  	// #67
   16228:	mov	x1, x8
   1622c:	str	x8, [sp, #80]
   16230:	bl	5530 <mpfr_init2@plt>
   16234:	sub	x0, x29, #0x90
   16238:	ldr	x1, [sp, #80]
   1623c:	bl	5530 <mpfr_init2@plt>
   16240:	sub	x0, x29, #0xb0
   16244:	ldr	x1, [sp, #80]
   16248:	bl	5530 <mpfr_init2@plt>
   1624c:	sub	x8, x29, #0x50
   16250:	mov	x0, x8
   16254:	str	x8, [sp, #72]
   16258:	bl	53b0 <__gmpq_init@plt>
   1625c:	ldr	x8, [sp, #224]
   16260:	ldr	x1, [x8, #16]
   16264:	ldr	x2, [x8, #24]
   16268:	ldr	x0, [sp, #72]
   1626c:	bl	5200 <__gmpq_set_ui@plt>
   16270:	ldr	x0, [sp, #72]
   16274:	ldr	x1, [sp, #72]
   16278:	mov	x2, #0x1                   	// #1
   1627c:	bl	5670 <__gmpq_mul_2exp@plt>
   16280:	ldur	x0, [x29, #-184]
   16284:	bl	4de0 <mpc_ceil_log2@plt>
   16288:	add	x8, x0, #0x5
   1628c:	ldur	x9, [x29, #-184]
   16290:	add	x8, x9, x8
   16294:	stur	x8, [x29, #-184]
   16298:	ldur	x1, [x29, #-184]
   1629c:	sub	x8, x29, #0x70
   162a0:	mov	x0, x8
   162a4:	str	x8, [sp, #64]
   162a8:	bl	4d40 <mpfr_set_prec@plt>
   162ac:	ldur	x1, [x29, #-184]
   162b0:	sub	x8, x29, #0x90
   162b4:	mov	x0, x8
   162b8:	str	x8, [sp, #56]
   162bc:	bl	4d40 <mpfr_set_prec@plt>
   162c0:	ldur	x1, [x29, #-184]
   162c4:	sub	x8, x29, #0xb0
   162c8:	mov	x0, x8
   162cc:	str	x8, [sp, #48]
   162d0:	bl	4d40 <mpfr_set_prec@plt>
   162d4:	ldr	x0, [sp, #64]
   162d8:	mov	w10, wzr
   162dc:	mov	w1, w10
   162e0:	str	w10, [sp, #44]
   162e4:	bl	4b60 <mpfr_const_pi@plt>
   162e8:	ldr	x8, [sp, #64]
   162ec:	mov	x0, x8
   162f0:	mov	x1, x8
   162f4:	sub	x2, x29, #0x50
   162f8:	ldr	w3, [sp, #44]
   162fc:	bl	4ab0 <mpfr_mul_q@plt>
   16300:	ldr	x8, [sp, #56]
   16304:	mov	x0, x8
   16308:	ldr	x1, [sp, #48]
   1630c:	ldr	x2, [sp, #64]
   16310:	ldr	w3, [sp, #44]
   16314:	bl	5620 <mpfr_sin_cos@plt>
   16318:	ldur	x8, [x29, #-184]
   1631c:	sub	x0, x29, #0xb0
   16320:	ldur	x9, [x29, #-160]
   16324:	mov	x10, #0x4                   	// #4
   16328:	subs	x9, x10, x9
   1632c:	subs	x1, x8, x9
   16330:	ldr	x8, [sp, #224]
   16334:	ldr	x9, [x8, #32]
   16338:	ldr	x9, [x9]
   1633c:	ldur	w11, [x29, #-36]
   16340:	mov	w12, wzr
   16344:	tst	w11, #0xf
   16348:	cset	w11, eq  // eq = none
   1634c:	and	w11, w11, #0x1
   16350:	add	x4, x9, w11, sxtw
   16354:	mov	w2, w12
   16358:	mov	w3, #0x1                   	// #1
   1635c:	bl	5540 <mpfr_can_round@plt>
   16360:	mov	w11, #0x1                   	// #1
   16364:	str	w11, [sp, #40]
   16368:	cbz	w0, 163c8 <mpc_rootofunity@@Base+0xb64>
   1636c:	ldur	x8, [x29, #-184]
   16370:	sub	x0, x29, #0x90
   16374:	ldur	x9, [x29, #-128]
   16378:	mov	x10, #0x4                   	// #4
   1637c:	subs	x9, x10, x9
   16380:	subs	x1, x8, x9
   16384:	ldr	x8, [sp, #224]
   16388:	ldr	x9, [x8, #32]
   1638c:	ldr	x9, [x9, #32]
   16390:	ldur	w11, [x29, #-36]
   16394:	asr	w11, w11, #4
   16398:	mov	w12, wzr
   1639c:	cmp	w11, #0x0
   163a0:	cset	w11, eq  // eq = none
   163a4:	and	w11, w11, #0x1
   163a8:	add	x4, x9, w11, sxtw
   163ac:	mov	w2, w12
   163b0:	mov	w3, #0x1                   	// #1
   163b4:	bl	5540 <mpfr_can_round@plt>
   163b8:	cmp	w0, #0x0
   163bc:	cset	w11, ne  // ne = any
   163c0:	eor	w11, w11, #0x1
   163c4:	str	w11, [sp, #40]
   163c8:	ldr	w8, [sp, #40]
   163cc:	tbnz	w8, #0, 16280 <mpc_rootofunity@@Base+0xa1c>
   163d0:	ldr	x8, [sp, #224]
   163d4:	ldr	x0, [x8, #32]
   163d8:	ldur	w9, [x29, #-36]
   163dc:	and	w2, w9, #0xf
   163e0:	sub	x10, x29, #0xb0
   163e4:	ldur	w3, [x29, #-168]
   163e8:	mov	x1, x10
   163ec:	str	x10, [sp, #32]
   163f0:	bl	52d0 <mpfr_set4@plt>
   163f4:	stur	w0, [x29, #-188]
   163f8:	ldr	x8, [sp, #224]
   163fc:	ldr	x10, [x8, #32]
   16400:	add	x0, x10, #0x20
   16404:	ldur	w9, [x29, #-36]
   16408:	asr	w2, w9, #4
   1640c:	sub	x10, x29, #0x90
   16410:	ldur	w3, [x29, #-136]
   16414:	mov	x1, x10
   16418:	str	x10, [sp, #24]
   1641c:	bl	52d0 <mpfr_set4@plt>
   16420:	stur	w0, [x29, #-192]
   16424:	sub	x0, x29, #0x70
   16428:	bl	4e30 <mpfr_clear@plt>
   1642c:	ldr	x0, [sp, #24]
   16430:	bl	4e30 <mpfr_clear@plt>
   16434:	ldr	x0, [sp, #32]
   16438:	bl	4e30 <mpfr_clear@plt>
   1643c:	sub	x0, x29, #0x50
   16440:	bl	50b0 <__gmpq_clear@plt>
   16444:	ldur	w9, [x29, #-188]
   16448:	cmp	w9, #0x0
   1644c:	cset	w9, ge  // ge = tcont
   16450:	tbnz	w9, #0, 16460 <mpc_rootofunity@@Base+0xbfc>
   16454:	mov	w8, #0x2                   	// #2
   16458:	str	w8, [sp, #20]
   1645c:	b	16478 <mpc_rootofunity@@Base+0xc14>
   16460:	ldur	w8, [x29, #-188]
   16464:	mov	w9, wzr
   16468:	mov	w10, #0x1                   	// #1
   1646c:	cmp	w8, #0x0
   16470:	csel	w8, w9, w10, eq  // eq = none
   16474:	str	w8, [sp, #20]
   16478:	ldr	w8, [sp, #20]
   1647c:	ldur	w9, [x29, #-192]
   16480:	cmp	w9, #0x0
   16484:	cset	w9, ge  // ge = tcont
   16488:	str	w8, [sp, #16]
   1648c:	tbnz	w9, #0, 1649c <mpc_rootofunity@@Base+0xc38>
   16490:	mov	w8, #0x2                   	// #2
   16494:	str	w8, [sp, #12]
   16498:	b	164b4 <mpc_rootofunity@@Base+0xc50>
   1649c:	ldur	w8, [x29, #-192]
   164a0:	mov	w9, wzr
   164a4:	mov	w10, #0x1                   	// #1
   164a8:	cmp	w8, #0x0
   164ac:	csel	w8, w9, w10, eq  // eq = none
   164b0:	str	w8, [sp, #12]
   164b4:	ldr	w8, [sp, #12]
   164b8:	ldr	w9, [sp, #16]
   164bc:	orr	w8, w9, w8, lsl #2
   164c0:	stur	w8, [x29, #-4]
   164c4:	ldur	w0, [x29, #-4]
   164c8:	ldr	x28, [sp, #480]
   164cc:	ldp	x29, x30, [sp, #464]
   164d0:	add	sp, sp, #0x1f0
   164d4:	ret
   164d8:	sub	sp, sp, #0x30
   164dc:	stp	x29, x30, [sp, #32]
   164e0:	add	x29, sp, #0x20
   164e4:	str	x0, [sp, #16]
   164e8:	str	x1, [sp, #8]
   164ec:	ldr	x8, [sp, #8]
   164f0:	cbnz	x8, 16500 <mpc_rootofunity@@Base+0xc9c>
   164f4:	ldr	x8, [sp, #16]
   164f8:	stur	x8, [x29, #-8]
   164fc:	b	16520 <mpc_rootofunity@@Base+0xcbc>
   16500:	ldr	x0, [sp, #8]
   16504:	ldr	x8, [sp, #16]
   16508:	ldr	x9, [sp, #8]
   1650c:	udiv	x10, x8, x9
   16510:	mul	x9, x10, x9
   16514:	subs	x1, x8, x9
   16518:	bl	164d8 <mpc_rootofunity@@Base+0xc74>
   1651c:	stur	x0, [x29, #-8]
   16520:	ldur	x0, [x29, #-8]
   16524:	ldp	x29, x30, [sp, #32]
   16528:	add	sp, sp, #0x30
   1652c:	ret

0000000000016530 <mpc_urandom@@Base>:
   16530:	sub	sp, sp, #0x30
   16534:	stp	x29, x30, [sp, #32]
   16538:	add	x29, sp, #0x20
   1653c:	stur	x0, [x29, #-8]
   16540:	str	x1, [sp, #16]
   16544:	ldur	x0, [x29, #-8]
   16548:	ldr	x1, [sp, #16]
   1654c:	bl	5600 <mpfr_urandomb@plt>
   16550:	str	w0, [sp, #12]
   16554:	ldur	x8, [x29, #-8]
   16558:	add	x0, x8, #0x20
   1655c:	ldr	x1, [sp, #16]
   16560:	bl	5600 <mpfr_urandomb@plt>
   16564:	str	w0, [sp, #8]
   16568:	ldr	w9, [sp, #12]
   1656c:	mov	w10, #0x0                   	// #0
   16570:	str	w10, [sp, #4]
   16574:	cbz	w9, 16588 <mpc_urandom@@Base+0x58>
   16578:	ldr	w8, [sp, #8]
   1657c:	cmp	w8, #0x0
   16580:	cset	w8, ne  // ne = any
   16584:	str	w8, [sp, #4]
   16588:	ldr	w8, [sp, #4]
   1658c:	and	w0, w8, #0x1
   16590:	ldp	x29, x30, [sp, #32]
   16594:	add	sp, sp, #0x30
   16598:	ret

000000000001659c <mpc_set@@Base>:
   1659c:	sub	sp, sp, #0x40
   165a0:	stp	x29, x30, [sp, #48]
   165a4:	add	x29, sp, #0x30
   165a8:	stur	x0, [x29, #-8]
   165ac:	stur	x1, [x29, #-16]
   165b0:	stur	w2, [x29, #-20]
   165b4:	ldur	x0, [x29, #-8]
   165b8:	ldur	x1, [x29, #-16]
   165bc:	ldur	w8, [x29, #-20]
   165c0:	and	w2, w8, #0xf
   165c4:	ldur	x9, [x29, #-16]
   165c8:	ldr	w3, [x9, #8]
   165cc:	bl	52d0 <mpfr_set4@plt>
   165d0:	str	w0, [sp, #24]
   165d4:	ldur	x9, [x29, #-8]
   165d8:	add	x0, x9, #0x20
   165dc:	ldur	x9, [x29, #-16]
   165e0:	add	x1, x9, #0x20
   165e4:	ldur	w8, [x29, #-20]
   165e8:	asr	w2, w8, #4
   165ec:	ldur	x9, [x29, #-16]
   165f0:	ldr	w3, [x9, #40]
   165f4:	bl	52d0 <mpfr_set4@plt>
   165f8:	str	w0, [sp, #20]
   165fc:	ldr	w8, [sp, #24]
   16600:	cmp	w8, #0x0
   16604:	cset	w8, ge  // ge = tcont
   16608:	tbnz	w8, #0, 16618 <mpc_set@@Base+0x7c>
   1660c:	mov	w8, #0x2                   	// #2
   16610:	str	w8, [sp, #16]
   16614:	b	16630 <mpc_set@@Base+0x94>
   16618:	ldr	w8, [sp, #24]
   1661c:	mov	w9, wzr
   16620:	mov	w10, #0x1                   	// #1
   16624:	cmp	w8, #0x0
   16628:	csel	w8, w9, w10, eq  // eq = none
   1662c:	str	w8, [sp, #16]
   16630:	ldr	w8, [sp, #16]
   16634:	ldr	w9, [sp, #20]
   16638:	cmp	w9, #0x0
   1663c:	cset	w9, ge  // ge = tcont
   16640:	str	w8, [sp, #12]
   16644:	tbnz	w9, #0, 16654 <mpc_set@@Base+0xb8>
   16648:	mov	w8, #0x2                   	// #2
   1664c:	str	w8, [sp, #8]
   16650:	b	1666c <mpc_set@@Base+0xd0>
   16654:	ldr	w8, [sp, #20]
   16658:	mov	w9, wzr
   1665c:	mov	w10, #0x1                   	// #1
   16660:	cmp	w8, #0x0
   16664:	csel	w8, w9, w10, eq  // eq = none
   16668:	str	w8, [sp, #8]
   1666c:	ldr	w8, [sp, #8]
   16670:	ldr	w9, [sp, #12]
   16674:	orr	w0, w9, w8, lsl #2
   16678:	ldp	x29, x30, [sp, #48]
   1667c:	add	sp, sp, #0x40
   16680:	ret

0000000000016684 <mpc_set_prec@@Base>:
   16684:	sub	sp, sp, #0x20
   16688:	stp	x29, x30, [sp, #16]
   1668c:	add	x29, sp, #0x10
   16690:	str	x0, [sp, #8]
   16694:	str	x1, [sp]
   16698:	ldr	x0, [sp, #8]
   1669c:	ldr	x1, [sp]
   166a0:	bl	4d40 <mpfr_set_prec@plt>
   166a4:	ldr	x8, [sp, #8]
   166a8:	add	x0, x8, #0x20
   166ac:	ldr	x1, [sp]
   166b0:	bl	4d40 <mpfr_set_prec@plt>
   166b4:	ldp	x29, x30, [sp, #16]
   166b8:	add	sp, sp, #0x20
   166bc:	ret

00000000000166c0 <mpc_set_str@@Base>:
   166c0:	sub	sp, sp, #0x40
   166c4:	stp	x29, x30, [sp, #48]
   166c8:	add	x29, sp, #0x30
   166cc:	mov	w8, #0xffffffff            	// #-1
   166d0:	add	x9, sp, #0x8
   166d4:	stur	x0, [x29, #-16]
   166d8:	str	x1, [sp, #24]
   166dc:	str	w2, [sp, #20]
   166e0:	str	w3, [sp, #16]
   166e4:	ldur	x0, [x29, #-16]
   166e8:	ldr	x1, [sp, #24]
   166ec:	ldr	w3, [sp, #20]
   166f0:	ldr	w4, [sp, #16]
   166f4:	mov	x2, x9
   166f8:	str	w8, [sp]
   166fc:	bl	5000 <mpc_strtoc@plt>
   16700:	str	w0, [sp, #4]
   16704:	ldr	w8, [sp, #4]
   16708:	ldr	w10, [sp]
   1670c:	cmp	w8, w10
   16710:	b.eq	16758 <mpc_set_str@@Base+0x98>  // b.none
   16714:	bl	5270 <__ctype_b_loc@plt>
   16718:	ldr	x8, [x0]
   1671c:	ldr	x9, [sp, #8]
   16720:	ldrb	w10, [x9]
   16724:	ldrh	w10, [x8, w10, sxtw #1]
   16728:	and	w10, w10, #0x2000
   1672c:	cbz	w10, 16740 <mpc_set_str@@Base+0x80>
   16730:	ldr	x8, [sp, #8]
   16734:	add	x8, x8, #0x1
   16738:	str	x8, [sp, #8]
   1673c:	b	16714 <mpc_set_str@@Base+0x54>
   16740:	ldr	x8, [sp, #8]
   16744:	ldrb	w9, [x8]
   16748:	cbnz	w9, 16758 <mpc_set_str@@Base+0x98>
   1674c:	ldr	w8, [sp, #4]
   16750:	stur	w8, [x29, #-4]
   16754:	b	16774 <mpc_set_str@@Base+0xb4>
   16758:	ldur	x0, [x29, #-16]
   1675c:	bl	4b20 <mpfr_set_nan@plt>
   16760:	ldur	x8, [x29, #-16]
   16764:	add	x0, x8, #0x20
   16768:	bl	4b20 <mpfr_set_nan@plt>
   1676c:	mov	w9, #0xffffffff            	// #-1
   16770:	stur	w9, [x29, #-4]
   16774:	ldur	w0, [x29, #-4]
   16778:	ldp	x29, x30, [sp, #48]
   1677c:	add	sp, sp, #0x40
   16780:	ret

0000000000016784 <mpc_set_fr@@Base>:
   16784:	sub	sp, sp, #0x60
   16788:	stp	x29, x30, [sp, #80]
   1678c:	add	x29, sp, #0x50
   16790:	mov	w8, #0x1                   	// #1
   16794:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16798:	stur	x0, [x29, #-8]
   1679c:	stur	x1, [x29, #-16]
   167a0:	stur	w2, [x29, #-20]
   167a4:	ldur	x0, [x29, #-8]
   167a8:	ldur	x1, [x29, #-16]
   167ac:	ldur	w10, [x29, #-20]
   167b0:	and	w2, w10, #0xf
   167b4:	str	w8, [sp, #32]
   167b8:	str	x9, [sp, #24]
   167bc:	bl	4f70 <mpfr_set@plt>
   167c0:	stur	w0, [x29, #-24]
   167c4:	ldur	x9, [x29, #-8]
   167c8:	add	x9, x9, #0x20
   167cc:	str	x9, [sp, #40]
   167d0:	ldr	x9, [sp, #40]
   167d4:	ldr	w8, [sp, #32]
   167d8:	str	w8, [x9, #8]
   167dc:	ldr	x9, [sp, #40]
   167e0:	ldr	x11, [sp, #24]
   167e4:	str	x11, [x9, #16]
   167e8:	str	wzr, [sp, #36]
   167ec:	ldr	w10, [sp, #36]
   167f0:	stur	w10, [x29, #-28]
   167f4:	ldur	w10, [x29, #-24]
   167f8:	cmp	w10, #0x0
   167fc:	cset	w10, ge  // ge = tcont
   16800:	tbnz	w10, #0, 16810 <mpc_set_fr@@Base+0x8c>
   16804:	mov	w8, #0x2                   	// #2
   16808:	str	w8, [sp, #20]
   1680c:	b	16828 <mpc_set_fr@@Base+0xa4>
   16810:	ldur	w8, [x29, #-24]
   16814:	mov	w9, wzr
   16818:	mov	w10, #0x1                   	// #1
   1681c:	cmp	w8, #0x0
   16820:	csel	w8, w9, w10, eq  // eq = none
   16824:	str	w8, [sp, #20]
   16828:	ldr	w8, [sp, #20]
   1682c:	ldur	w9, [x29, #-28]
   16830:	cmp	w9, #0x0
   16834:	cset	w9, ge  // ge = tcont
   16838:	str	w8, [sp, #16]
   1683c:	tbnz	w9, #0, 1684c <mpc_set_fr@@Base+0xc8>
   16840:	mov	w8, #0x2                   	// #2
   16844:	str	w8, [sp, #12]
   16848:	b	16864 <mpc_set_fr@@Base+0xe0>
   1684c:	ldur	w8, [x29, #-28]
   16850:	mov	w9, wzr
   16854:	mov	w10, #0x1                   	// #1
   16858:	cmp	w8, #0x0
   1685c:	csel	w8, w9, w10, eq  // eq = none
   16860:	str	w8, [sp, #12]
   16864:	ldr	w8, [sp, #12]
   16868:	ldr	w9, [sp, #16]
   1686c:	orr	w0, w9, w8, lsl #2
   16870:	ldp	x29, x30, [sp, #80]
   16874:	add	sp, sp, #0x60
   16878:	ret

000000000001687c <mpc_set_d@@Base>:
   1687c:	sub	sp, sp, #0x60
   16880:	stp	x29, x30, [sp, #80]
   16884:	add	x29, sp, #0x50
   16888:	mov	w8, #0x1                   	// #1
   1688c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16890:	stur	x0, [x29, #-8]
   16894:	stur	d0, [x29, #-16]
   16898:	stur	w1, [x29, #-20]
   1689c:	ldur	x0, [x29, #-8]
   168a0:	ldur	d0, [x29, #-16]
   168a4:	ldur	w10, [x29, #-20]
   168a8:	and	w1, w10, #0xf
   168ac:	str	w8, [sp, #32]
   168b0:	str	x9, [sp, #24]
   168b4:	bl	4d00 <mpfr_set_d@plt>
   168b8:	stur	w0, [x29, #-24]
   168bc:	ldur	x9, [x29, #-8]
   168c0:	add	x9, x9, #0x20
   168c4:	str	x9, [sp, #40]
   168c8:	ldr	x9, [sp, #40]
   168cc:	ldr	w8, [sp, #32]
   168d0:	str	w8, [x9, #8]
   168d4:	ldr	x9, [sp, #40]
   168d8:	ldr	x11, [sp, #24]
   168dc:	str	x11, [x9, #16]
   168e0:	str	wzr, [sp, #36]
   168e4:	ldr	w10, [sp, #36]
   168e8:	stur	w10, [x29, #-28]
   168ec:	ldur	w10, [x29, #-24]
   168f0:	cmp	w10, #0x0
   168f4:	cset	w10, ge  // ge = tcont
   168f8:	tbnz	w10, #0, 16908 <mpc_set_d@@Base+0x8c>
   168fc:	mov	w8, #0x2                   	// #2
   16900:	str	w8, [sp, #20]
   16904:	b	16920 <mpc_set_d@@Base+0xa4>
   16908:	ldur	w8, [x29, #-24]
   1690c:	mov	w9, wzr
   16910:	mov	w10, #0x1                   	// #1
   16914:	cmp	w8, #0x0
   16918:	csel	w8, w9, w10, eq  // eq = none
   1691c:	str	w8, [sp, #20]
   16920:	ldr	w8, [sp, #20]
   16924:	ldur	w9, [x29, #-28]
   16928:	cmp	w9, #0x0
   1692c:	cset	w9, ge  // ge = tcont
   16930:	str	w8, [sp, #16]
   16934:	tbnz	w9, #0, 16944 <mpc_set_d@@Base+0xc8>
   16938:	mov	w8, #0x2                   	// #2
   1693c:	str	w8, [sp, #12]
   16940:	b	1695c <mpc_set_d@@Base+0xe0>
   16944:	ldur	w8, [x29, #-28]
   16948:	mov	w9, wzr
   1694c:	mov	w10, #0x1                   	// #1
   16950:	cmp	w8, #0x0
   16954:	csel	w8, w9, w10, eq  // eq = none
   16958:	str	w8, [sp, #12]
   1695c:	ldr	w8, [sp, #12]
   16960:	ldr	w9, [sp, #16]
   16964:	orr	w0, w9, w8, lsl #2
   16968:	ldp	x29, x30, [sp, #80]
   1696c:	add	sp, sp, #0x60
   16970:	ret

0000000000016974 <mpc_set_ld@@Base>:
   16974:	sub	sp, sp, #0x70
   16978:	stp	x29, x30, [sp, #96]
   1697c:	add	x29, sp, #0x60
   16980:	mov	w8, #0x1                   	// #1
   16984:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16988:	stur	x0, [x29, #-8]
   1698c:	stur	q0, [x29, #-32]
   16990:	stur	w1, [x29, #-36]
   16994:	ldur	x0, [x29, #-8]
   16998:	ldur	q0, [x29, #-32]
   1699c:	ldur	w10, [x29, #-36]
   169a0:	and	w1, w10, #0xf
   169a4:	str	w8, [sp, #32]
   169a8:	str	x9, [sp, #24]
   169ac:	bl	4a90 <mpfr_set_ld@plt>
   169b0:	stur	w0, [x29, #-40]
   169b4:	ldur	x9, [x29, #-8]
   169b8:	add	x9, x9, #0x20
   169bc:	str	x9, [sp, #40]
   169c0:	ldr	x9, [sp, #40]
   169c4:	ldr	w8, [sp, #32]
   169c8:	str	w8, [x9, #8]
   169cc:	ldr	x9, [sp, #40]
   169d0:	ldr	x11, [sp, #24]
   169d4:	str	x11, [x9, #16]
   169d8:	str	wzr, [sp, #36]
   169dc:	ldr	w10, [sp, #36]
   169e0:	stur	w10, [x29, #-44]
   169e4:	ldur	w10, [x29, #-40]
   169e8:	cmp	w10, #0x0
   169ec:	cset	w10, ge  // ge = tcont
   169f0:	tbnz	w10, #0, 16a00 <mpc_set_ld@@Base+0x8c>
   169f4:	mov	w8, #0x2                   	// #2
   169f8:	str	w8, [sp, #20]
   169fc:	b	16a18 <mpc_set_ld@@Base+0xa4>
   16a00:	ldur	w8, [x29, #-40]
   16a04:	mov	w9, wzr
   16a08:	mov	w10, #0x1                   	// #1
   16a0c:	cmp	w8, #0x0
   16a10:	csel	w8, w9, w10, eq  // eq = none
   16a14:	str	w8, [sp, #20]
   16a18:	ldr	w8, [sp, #20]
   16a1c:	ldur	w9, [x29, #-44]
   16a20:	cmp	w9, #0x0
   16a24:	cset	w9, ge  // ge = tcont
   16a28:	str	w8, [sp, #16]
   16a2c:	tbnz	w9, #0, 16a3c <mpc_set_ld@@Base+0xc8>
   16a30:	mov	w8, #0x2                   	// #2
   16a34:	str	w8, [sp, #12]
   16a38:	b	16a54 <mpc_set_ld@@Base+0xe0>
   16a3c:	ldur	w8, [x29, #-44]
   16a40:	mov	w9, wzr
   16a44:	mov	w10, #0x1                   	// #1
   16a48:	cmp	w8, #0x0
   16a4c:	csel	w8, w9, w10, eq  // eq = none
   16a50:	str	w8, [sp, #12]
   16a54:	ldr	w8, [sp, #12]
   16a58:	ldr	w9, [sp, #16]
   16a5c:	orr	w0, w9, w8, lsl #2
   16a60:	ldp	x29, x30, [sp, #96]
   16a64:	add	sp, sp, #0x70
   16a68:	ret

0000000000016a6c <mpc_set_ui@@Base>:
   16a6c:	sub	sp, sp, #0x60
   16a70:	stp	x29, x30, [sp, #80]
   16a74:	add	x29, sp, #0x50
   16a78:	mov	w8, #0x1                   	// #1
   16a7c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16a80:	stur	x0, [x29, #-8]
   16a84:	stur	x1, [x29, #-16]
   16a88:	stur	w2, [x29, #-20]
   16a8c:	ldur	x0, [x29, #-8]
   16a90:	ldur	x1, [x29, #-16]
   16a94:	ldur	w10, [x29, #-20]
   16a98:	and	w2, w10, #0xf
   16a9c:	str	w8, [sp, #32]
   16aa0:	str	x9, [sp, #24]
   16aa4:	bl	5610 <mpfr_set_ui@plt>
   16aa8:	stur	w0, [x29, #-24]
   16aac:	ldur	x9, [x29, #-8]
   16ab0:	add	x9, x9, #0x20
   16ab4:	str	x9, [sp, #40]
   16ab8:	ldr	x9, [sp, #40]
   16abc:	ldr	w8, [sp, #32]
   16ac0:	str	w8, [x9, #8]
   16ac4:	ldr	x9, [sp, #40]
   16ac8:	ldr	x11, [sp, #24]
   16acc:	str	x11, [x9, #16]
   16ad0:	str	wzr, [sp, #36]
   16ad4:	ldr	w10, [sp, #36]
   16ad8:	stur	w10, [x29, #-28]
   16adc:	ldur	w10, [x29, #-24]
   16ae0:	cmp	w10, #0x0
   16ae4:	cset	w10, ge  // ge = tcont
   16ae8:	tbnz	w10, #0, 16af8 <mpc_set_ui@@Base+0x8c>
   16aec:	mov	w8, #0x2                   	// #2
   16af0:	str	w8, [sp, #20]
   16af4:	b	16b10 <mpc_set_ui@@Base+0xa4>
   16af8:	ldur	w8, [x29, #-24]
   16afc:	mov	w9, wzr
   16b00:	mov	w10, #0x1                   	// #1
   16b04:	cmp	w8, #0x0
   16b08:	csel	w8, w9, w10, eq  // eq = none
   16b0c:	str	w8, [sp, #20]
   16b10:	ldr	w8, [sp, #20]
   16b14:	ldur	w9, [x29, #-28]
   16b18:	cmp	w9, #0x0
   16b1c:	cset	w9, ge  // ge = tcont
   16b20:	str	w8, [sp, #16]
   16b24:	tbnz	w9, #0, 16b34 <mpc_set_ui@@Base+0xc8>
   16b28:	mov	w8, #0x2                   	// #2
   16b2c:	str	w8, [sp, #12]
   16b30:	b	16b4c <mpc_set_ui@@Base+0xe0>
   16b34:	ldur	w8, [x29, #-28]
   16b38:	mov	w9, wzr
   16b3c:	mov	w10, #0x1                   	// #1
   16b40:	cmp	w8, #0x0
   16b44:	csel	w8, w9, w10, eq  // eq = none
   16b48:	str	w8, [sp, #12]
   16b4c:	ldr	w8, [sp, #12]
   16b50:	ldr	w9, [sp, #16]
   16b54:	orr	w0, w9, w8, lsl #2
   16b58:	ldp	x29, x30, [sp, #80]
   16b5c:	add	sp, sp, #0x60
   16b60:	ret

0000000000016b64 <mpc_set_si@@Base>:
   16b64:	sub	sp, sp, #0x60
   16b68:	stp	x29, x30, [sp, #80]
   16b6c:	add	x29, sp, #0x50
   16b70:	mov	w8, #0x1                   	// #1
   16b74:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16b78:	stur	x0, [x29, #-8]
   16b7c:	stur	x1, [x29, #-16]
   16b80:	stur	w2, [x29, #-20]
   16b84:	ldur	x0, [x29, #-8]
   16b88:	ldur	x1, [x29, #-16]
   16b8c:	ldur	w10, [x29, #-20]
   16b90:	and	w2, w10, #0xf
   16b94:	str	w8, [sp, #32]
   16b98:	str	x9, [sp, #24]
   16b9c:	bl	5370 <mpfr_set_si@plt>
   16ba0:	stur	w0, [x29, #-24]
   16ba4:	ldur	x9, [x29, #-8]
   16ba8:	add	x9, x9, #0x20
   16bac:	str	x9, [sp, #40]
   16bb0:	ldr	x9, [sp, #40]
   16bb4:	ldr	w8, [sp, #32]
   16bb8:	str	w8, [x9, #8]
   16bbc:	ldr	x9, [sp, #40]
   16bc0:	ldr	x11, [sp, #24]
   16bc4:	str	x11, [x9, #16]
   16bc8:	str	wzr, [sp, #36]
   16bcc:	ldr	w10, [sp, #36]
   16bd0:	stur	w10, [x29, #-28]
   16bd4:	ldur	w10, [x29, #-24]
   16bd8:	cmp	w10, #0x0
   16bdc:	cset	w10, ge  // ge = tcont
   16be0:	tbnz	w10, #0, 16bf0 <mpc_set_si@@Base+0x8c>
   16be4:	mov	w8, #0x2                   	// #2
   16be8:	str	w8, [sp, #20]
   16bec:	b	16c08 <mpc_set_si@@Base+0xa4>
   16bf0:	ldur	w8, [x29, #-24]
   16bf4:	mov	w9, wzr
   16bf8:	mov	w10, #0x1                   	// #1
   16bfc:	cmp	w8, #0x0
   16c00:	csel	w8, w9, w10, eq  // eq = none
   16c04:	str	w8, [sp, #20]
   16c08:	ldr	w8, [sp, #20]
   16c0c:	ldur	w9, [x29, #-28]
   16c10:	cmp	w9, #0x0
   16c14:	cset	w9, ge  // ge = tcont
   16c18:	str	w8, [sp, #16]
   16c1c:	tbnz	w9, #0, 16c2c <mpc_set_si@@Base+0xc8>
   16c20:	mov	w8, #0x2                   	// #2
   16c24:	str	w8, [sp, #12]
   16c28:	b	16c44 <mpc_set_si@@Base+0xe0>
   16c2c:	ldur	w8, [x29, #-28]
   16c30:	mov	w9, wzr
   16c34:	mov	w10, #0x1                   	// #1
   16c38:	cmp	w8, #0x0
   16c3c:	csel	w8, w9, w10, eq  // eq = none
   16c40:	str	w8, [sp, #12]
   16c44:	ldr	w8, [sp, #12]
   16c48:	ldr	w9, [sp, #16]
   16c4c:	orr	w0, w9, w8, lsl #2
   16c50:	ldp	x29, x30, [sp, #80]
   16c54:	add	sp, sp, #0x60
   16c58:	ret

0000000000016c5c <mpc_set_z@@Base>:
   16c5c:	sub	sp, sp, #0x60
   16c60:	stp	x29, x30, [sp, #80]
   16c64:	add	x29, sp, #0x50
   16c68:	mov	w8, #0x1                   	// #1
   16c6c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16c70:	stur	x0, [x29, #-8]
   16c74:	stur	x1, [x29, #-16]
   16c78:	stur	w2, [x29, #-20]
   16c7c:	ldur	x0, [x29, #-8]
   16c80:	ldur	x1, [x29, #-16]
   16c84:	ldur	w10, [x29, #-20]
   16c88:	and	w2, w10, #0xf
   16c8c:	str	w8, [sp, #32]
   16c90:	str	x9, [sp, #24]
   16c94:	bl	4fb0 <mpfr_set_z@plt>
   16c98:	stur	w0, [x29, #-24]
   16c9c:	ldur	x9, [x29, #-8]
   16ca0:	add	x9, x9, #0x20
   16ca4:	str	x9, [sp, #40]
   16ca8:	ldr	x9, [sp, #40]
   16cac:	ldr	w8, [sp, #32]
   16cb0:	str	w8, [x9, #8]
   16cb4:	ldr	x9, [sp, #40]
   16cb8:	ldr	x11, [sp, #24]
   16cbc:	str	x11, [x9, #16]
   16cc0:	str	wzr, [sp, #36]
   16cc4:	ldr	w10, [sp, #36]
   16cc8:	stur	w10, [x29, #-28]
   16ccc:	ldur	w10, [x29, #-24]
   16cd0:	cmp	w10, #0x0
   16cd4:	cset	w10, ge  // ge = tcont
   16cd8:	tbnz	w10, #0, 16ce8 <mpc_set_z@@Base+0x8c>
   16cdc:	mov	w8, #0x2                   	// #2
   16ce0:	str	w8, [sp, #20]
   16ce4:	b	16d00 <mpc_set_z@@Base+0xa4>
   16ce8:	ldur	w8, [x29, #-24]
   16cec:	mov	w9, wzr
   16cf0:	mov	w10, #0x1                   	// #1
   16cf4:	cmp	w8, #0x0
   16cf8:	csel	w8, w9, w10, eq  // eq = none
   16cfc:	str	w8, [sp, #20]
   16d00:	ldr	w8, [sp, #20]
   16d04:	ldur	w9, [x29, #-28]
   16d08:	cmp	w9, #0x0
   16d0c:	cset	w9, ge  // ge = tcont
   16d10:	str	w8, [sp, #16]
   16d14:	tbnz	w9, #0, 16d24 <mpc_set_z@@Base+0xc8>
   16d18:	mov	w8, #0x2                   	// #2
   16d1c:	str	w8, [sp, #12]
   16d20:	b	16d3c <mpc_set_z@@Base+0xe0>
   16d24:	ldur	w8, [x29, #-28]
   16d28:	mov	w9, wzr
   16d2c:	mov	w10, #0x1                   	// #1
   16d30:	cmp	w8, #0x0
   16d34:	csel	w8, w9, w10, eq  // eq = none
   16d38:	str	w8, [sp, #12]
   16d3c:	ldr	w8, [sp, #12]
   16d40:	ldr	w9, [sp, #16]
   16d44:	orr	w0, w9, w8, lsl #2
   16d48:	ldp	x29, x30, [sp, #80]
   16d4c:	add	sp, sp, #0x60
   16d50:	ret

0000000000016d54 <mpc_set_q@@Base>:
   16d54:	sub	sp, sp, #0x60
   16d58:	stp	x29, x30, [sp, #80]
   16d5c:	add	x29, sp, #0x50
   16d60:	mov	w8, #0x1                   	// #1
   16d64:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16d68:	stur	x0, [x29, #-8]
   16d6c:	stur	x1, [x29, #-16]
   16d70:	stur	w2, [x29, #-20]
   16d74:	ldur	x0, [x29, #-8]
   16d78:	ldur	x1, [x29, #-16]
   16d7c:	ldur	w10, [x29, #-20]
   16d80:	and	w2, w10, #0xf
   16d84:	str	w8, [sp, #32]
   16d88:	str	x9, [sp, #24]
   16d8c:	bl	5390 <mpfr_set_q@plt>
   16d90:	stur	w0, [x29, #-24]
   16d94:	ldur	x9, [x29, #-8]
   16d98:	add	x9, x9, #0x20
   16d9c:	str	x9, [sp, #40]
   16da0:	ldr	x9, [sp, #40]
   16da4:	ldr	w8, [sp, #32]
   16da8:	str	w8, [x9, #8]
   16dac:	ldr	x9, [sp, #40]
   16db0:	ldr	x11, [sp, #24]
   16db4:	str	x11, [x9, #16]
   16db8:	str	wzr, [sp, #36]
   16dbc:	ldr	w10, [sp, #36]
   16dc0:	stur	w10, [x29, #-28]
   16dc4:	ldur	w10, [x29, #-24]
   16dc8:	cmp	w10, #0x0
   16dcc:	cset	w10, ge  // ge = tcont
   16dd0:	tbnz	w10, #0, 16de0 <mpc_set_q@@Base+0x8c>
   16dd4:	mov	w8, #0x2                   	// #2
   16dd8:	str	w8, [sp, #20]
   16ddc:	b	16df8 <mpc_set_q@@Base+0xa4>
   16de0:	ldur	w8, [x29, #-24]
   16de4:	mov	w9, wzr
   16de8:	mov	w10, #0x1                   	// #1
   16dec:	cmp	w8, #0x0
   16df0:	csel	w8, w9, w10, eq  // eq = none
   16df4:	str	w8, [sp, #20]
   16df8:	ldr	w8, [sp, #20]
   16dfc:	ldur	w9, [x29, #-28]
   16e00:	cmp	w9, #0x0
   16e04:	cset	w9, ge  // ge = tcont
   16e08:	str	w8, [sp, #16]
   16e0c:	tbnz	w9, #0, 16e1c <mpc_set_q@@Base+0xc8>
   16e10:	mov	w8, #0x2                   	// #2
   16e14:	str	w8, [sp, #12]
   16e18:	b	16e34 <mpc_set_q@@Base+0xe0>
   16e1c:	ldur	w8, [x29, #-28]
   16e20:	mov	w9, wzr
   16e24:	mov	w10, #0x1                   	// #1
   16e28:	cmp	w8, #0x0
   16e2c:	csel	w8, w9, w10, eq  // eq = none
   16e30:	str	w8, [sp, #12]
   16e34:	ldr	w8, [sp, #12]
   16e38:	ldr	w9, [sp, #16]
   16e3c:	orr	w0, w9, w8, lsl #2
   16e40:	ldp	x29, x30, [sp, #80]
   16e44:	add	sp, sp, #0x60
   16e48:	ret

0000000000016e4c <mpc_set_f@@Base>:
   16e4c:	sub	sp, sp, #0x60
   16e50:	stp	x29, x30, [sp, #80]
   16e54:	add	x29, sp, #0x50
   16e58:	mov	w8, #0x1                   	// #1
   16e5c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16e60:	stur	x0, [x29, #-8]
   16e64:	stur	x1, [x29, #-16]
   16e68:	stur	w2, [x29, #-20]
   16e6c:	ldur	x0, [x29, #-8]
   16e70:	ldur	x1, [x29, #-16]
   16e74:	ldur	w10, [x29, #-20]
   16e78:	and	w2, w10, #0xf
   16e7c:	str	w8, [sp, #32]
   16e80:	str	x9, [sp, #24]
   16e84:	bl	4c40 <mpfr_set_f@plt>
   16e88:	stur	w0, [x29, #-24]
   16e8c:	ldur	x9, [x29, #-8]
   16e90:	add	x9, x9, #0x20
   16e94:	str	x9, [sp, #40]
   16e98:	ldr	x9, [sp, #40]
   16e9c:	ldr	w8, [sp, #32]
   16ea0:	str	w8, [x9, #8]
   16ea4:	ldr	x9, [sp, #40]
   16ea8:	ldr	x11, [sp, #24]
   16eac:	str	x11, [x9, #16]
   16eb0:	str	wzr, [sp, #36]
   16eb4:	ldr	w10, [sp, #36]
   16eb8:	stur	w10, [x29, #-28]
   16ebc:	ldur	w10, [x29, #-24]
   16ec0:	cmp	w10, #0x0
   16ec4:	cset	w10, ge  // ge = tcont
   16ec8:	tbnz	w10, #0, 16ed8 <mpc_set_f@@Base+0x8c>
   16ecc:	mov	w8, #0x2                   	// #2
   16ed0:	str	w8, [sp, #20]
   16ed4:	b	16ef0 <mpc_set_f@@Base+0xa4>
   16ed8:	ldur	w8, [x29, #-24]
   16edc:	mov	w9, wzr
   16ee0:	mov	w10, #0x1                   	// #1
   16ee4:	cmp	w8, #0x0
   16ee8:	csel	w8, w9, w10, eq  // eq = none
   16eec:	str	w8, [sp, #20]
   16ef0:	ldr	w8, [sp, #20]
   16ef4:	ldur	w9, [x29, #-28]
   16ef8:	cmp	w9, #0x0
   16efc:	cset	w9, ge  // ge = tcont
   16f00:	str	w8, [sp, #16]
   16f04:	tbnz	w9, #0, 16f14 <mpc_set_f@@Base+0xc8>
   16f08:	mov	w8, #0x2                   	// #2
   16f0c:	str	w8, [sp, #12]
   16f10:	b	16f2c <mpc_set_f@@Base+0xe0>
   16f14:	ldur	w8, [x29, #-28]
   16f18:	mov	w9, wzr
   16f1c:	mov	w10, #0x1                   	// #1
   16f20:	cmp	w8, #0x0
   16f24:	csel	w8, w9, w10, eq  // eq = none
   16f28:	str	w8, [sp, #12]
   16f2c:	ldr	w8, [sp, #12]
   16f30:	ldr	w9, [sp, #16]
   16f34:	orr	w0, w9, w8, lsl #2
   16f38:	ldp	x29, x30, [sp, #80]
   16f3c:	add	sp, sp, #0x60
   16f40:	ret

0000000000016f44 <mpc_set_uj@@Base>:
   16f44:	sub	sp, sp, #0x60
   16f48:	stp	x29, x30, [sp, #80]
   16f4c:	add	x29, sp, #0x50
   16f50:	mov	w8, #0x1                   	// #1
   16f54:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16f58:	stur	x0, [x29, #-8]
   16f5c:	stur	x1, [x29, #-16]
   16f60:	stur	w2, [x29, #-20]
   16f64:	ldur	x0, [x29, #-8]
   16f68:	ldur	x1, [x29, #-16]
   16f6c:	ldur	w10, [x29, #-20]
   16f70:	and	w2, w10, #0xf
   16f74:	str	w8, [sp, #32]
   16f78:	str	x9, [sp, #24]
   16f7c:	bl	5500 <__gmpfr_set_uj@plt>
   16f80:	stur	w0, [x29, #-24]
   16f84:	ldur	x9, [x29, #-8]
   16f88:	add	x9, x9, #0x20
   16f8c:	str	x9, [sp, #40]
   16f90:	ldr	x9, [sp, #40]
   16f94:	ldr	w8, [sp, #32]
   16f98:	str	w8, [x9, #8]
   16f9c:	ldr	x9, [sp, #40]
   16fa0:	ldr	x11, [sp, #24]
   16fa4:	str	x11, [x9, #16]
   16fa8:	str	wzr, [sp, #36]
   16fac:	ldr	w10, [sp, #36]
   16fb0:	stur	w10, [x29, #-28]
   16fb4:	ldur	w10, [x29, #-24]
   16fb8:	cmp	w10, #0x0
   16fbc:	cset	w10, ge  // ge = tcont
   16fc0:	tbnz	w10, #0, 16fd0 <mpc_set_uj@@Base+0x8c>
   16fc4:	mov	w8, #0x2                   	// #2
   16fc8:	str	w8, [sp, #20]
   16fcc:	b	16fe8 <mpc_set_uj@@Base+0xa4>
   16fd0:	ldur	w8, [x29, #-24]
   16fd4:	mov	w9, wzr
   16fd8:	mov	w10, #0x1                   	// #1
   16fdc:	cmp	w8, #0x0
   16fe0:	csel	w8, w9, w10, eq  // eq = none
   16fe4:	str	w8, [sp, #20]
   16fe8:	ldr	w8, [sp, #20]
   16fec:	ldur	w9, [x29, #-28]
   16ff0:	cmp	w9, #0x0
   16ff4:	cset	w9, ge  // ge = tcont
   16ff8:	str	w8, [sp, #16]
   16ffc:	tbnz	w9, #0, 1700c <mpc_set_uj@@Base+0xc8>
   17000:	mov	w8, #0x2                   	// #2
   17004:	str	w8, [sp, #12]
   17008:	b	17024 <mpc_set_uj@@Base+0xe0>
   1700c:	ldur	w8, [x29, #-28]
   17010:	mov	w9, wzr
   17014:	mov	w10, #0x1                   	// #1
   17018:	cmp	w8, #0x0
   1701c:	csel	w8, w9, w10, eq  // eq = none
   17020:	str	w8, [sp, #12]
   17024:	ldr	w8, [sp, #12]
   17028:	ldr	w9, [sp, #16]
   1702c:	orr	w0, w9, w8, lsl #2
   17030:	ldp	x29, x30, [sp, #80]
   17034:	add	sp, sp, #0x60
   17038:	ret

000000000001703c <mpc_set_sj@@Base>:
   1703c:	sub	sp, sp, #0x60
   17040:	stp	x29, x30, [sp, #80]
   17044:	add	x29, sp, #0x50
   17048:	mov	w8, #0x1                   	// #1
   1704c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   17050:	stur	x0, [x29, #-8]
   17054:	stur	x1, [x29, #-16]
   17058:	stur	w2, [x29, #-20]
   1705c:	ldur	x0, [x29, #-8]
   17060:	ldur	x1, [x29, #-16]
   17064:	ldur	w10, [x29, #-20]
   17068:	and	w2, w10, #0xf
   1706c:	str	w8, [sp, #32]
   17070:	str	x9, [sp, #24]
   17074:	bl	4e50 <__gmpfr_set_sj@plt>
   17078:	stur	w0, [x29, #-24]
   1707c:	ldur	x9, [x29, #-8]
   17080:	add	x9, x9, #0x20
   17084:	str	x9, [sp, #40]
   17088:	ldr	x9, [sp, #40]
   1708c:	ldr	w8, [sp, #32]
   17090:	str	w8, [x9, #8]
   17094:	ldr	x9, [sp, #40]
   17098:	ldr	x11, [sp, #24]
   1709c:	str	x11, [x9, #16]
   170a0:	str	wzr, [sp, #36]
   170a4:	ldr	w10, [sp, #36]
   170a8:	stur	w10, [x29, #-28]
   170ac:	ldur	w10, [x29, #-24]
   170b0:	cmp	w10, #0x0
   170b4:	cset	w10, ge  // ge = tcont
   170b8:	tbnz	w10, #0, 170c8 <mpc_set_sj@@Base+0x8c>
   170bc:	mov	w8, #0x2                   	// #2
   170c0:	str	w8, [sp, #20]
   170c4:	b	170e0 <mpc_set_sj@@Base+0xa4>
   170c8:	ldur	w8, [x29, #-24]
   170cc:	mov	w9, wzr
   170d0:	mov	w10, #0x1                   	// #1
   170d4:	cmp	w8, #0x0
   170d8:	csel	w8, w9, w10, eq  // eq = none
   170dc:	str	w8, [sp, #20]
   170e0:	ldr	w8, [sp, #20]
   170e4:	ldur	w9, [x29, #-28]
   170e8:	cmp	w9, #0x0
   170ec:	cset	w9, ge  // ge = tcont
   170f0:	str	w8, [sp, #16]
   170f4:	tbnz	w9, #0, 17104 <mpc_set_sj@@Base+0xc8>
   170f8:	mov	w8, #0x2                   	// #2
   170fc:	str	w8, [sp, #12]
   17100:	b	1711c <mpc_set_sj@@Base+0xe0>
   17104:	ldur	w8, [x29, #-28]
   17108:	mov	w9, wzr
   1710c:	mov	w10, #0x1                   	// #1
   17110:	cmp	w8, #0x0
   17114:	csel	w8, w9, w10, eq  // eq = none
   17118:	str	w8, [sp, #12]
   1711c:	ldr	w8, [sp, #12]
   17120:	ldr	w9, [sp, #16]
   17124:	orr	w0, w9, w8, lsl #2
   17128:	ldp	x29, x30, [sp, #80]
   1712c:	add	sp, sp, #0x60
   17130:	ret

0000000000017134 <mpc_set_dc@@Base>:
   17134:	sub	sp, sp, #0x30
   17138:	stp	x29, x30, [sp, #32]
   1713c:	add	x29, sp, #0x20
   17140:	str	d0, [sp, #16]
   17144:	str	d1, [sp, #24]
   17148:	str	x0, [sp, #8]
   1714c:	str	w1, [sp, #4]
   17150:	ldr	x0, [sp, #8]
   17154:	ldr	d0, [sp, #16]
   17158:	ldr	d1, [sp, #24]
   1715c:	ldr	w1, [sp, #4]
   17160:	bl	5090 <mpc_set_d_d@plt>
   17164:	ldp	x29, x30, [sp, #32]
   17168:	add	sp, sp, #0x30
   1716c:	ret

0000000000017170 <mpc_set_ldc@@Base>:
   17170:	sub	sp, sp, #0x40
   17174:	stp	x29, x30, [sp, #48]
   17178:	add	x29, sp, #0x30
   1717c:	str	q0, [sp, #16]
   17180:	str	q1, [sp, #32]
   17184:	str	x0, [sp, #8]
   17188:	str	w1, [sp, #4]
   1718c:	ldr	x0, [sp, #8]
   17190:	ldr	q0, [sp, #16]
   17194:	ldr	q1, [sp, #32]
   17198:	ldr	w1, [sp, #4]
   1719c:	bl	4e10 <mpc_set_ld_ld@plt>
   171a0:	ldp	x29, x30, [sp, #48]
   171a4:	add	sp, sp, #0x40
   171a8:	ret

00000000000171ac <mpc_set_nan@@Base>:
   171ac:	sub	sp, sp, #0x20
   171b0:	stp	x29, x30, [sp, #16]
   171b4:	add	x29, sp, #0x10
   171b8:	str	x0, [sp, #8]
   171bc:	ldr	x0, [sp, #8]
   171c0:	bl	4b20 <mpfr_set_nan@plt>
   171c4:	ldr	x8, [sp, #8]
   171c8:	add	x0, x8, #0x20
   171cc:	bl	4b20 <mpfr_set_nan@plt>
   171d0:	ldp	x29, x30, [sp, #16]
   171d4:	add	sp, sp, #0x20
   171d8:	ret

00000000000171dc <mpc_set_d_d@@Base>:
   171dc:	sub	sp, sp, #0x40
   171e0:	stp	x29, x30, [sp, #48]
   171e4:	add	x29, sp, #0x30
   171e8:	stur	x0, [x29, #-8]
   171ec:	stur	d0, [x29, #-16]
   171f0:	str	d1, [sp, #24]
   171f4:	str	w1, [sp, #20]
   171f8:	ldur	x0, [x29, #-8]
   171fc:	ldur	d0, [x29, #-16]
   17200:	ldr	w8, [sp, #20]
   17204:	and	w1, w8, #0xf
   17208:	bl	4d00 <mpfr_set_d@plt>
   1720c:	str	w0, [sp, #16]
   17210:	ldur	x9, [x29, #-8]
   17214:	add	x0, x9, #0x20
   17218:	ldr	d0, [sp, #24]
   1721c:	ldr	w8, [sp, #20]
   17220:	asr	w1, w8, #4
   17224:	bl	4d00 <mpfr_set_d@plt>
   17228:	str	w0, [sp, #12]
   1722c:	ldr	w8, [sp, #16]
   17230:	cmp	w8, #0x0
   17234:	cset	w8, ge  // ge = tcont
   17238:	tbnz	w8, #0, 17248 <mpc_set_d_d@@Base+0x6c>
   1723c:	mov	w8, #0x2                   	// #2
   17240:	str	w8, [sp, #8]
   17244:	b	17260 <mpc_set_d_d@@Base+0x84>
   17248:	ldr	w8, [sp, #16]
   1724c:	mov	w9, wzr
   17250:	mov	w10, #0x1                   	// #1
   17254:	cmp	w8, #0x0
   17258:	csel	w8, w9, w10, eq  // eq = none
   1725c:	str	w8, [sp, #8]
   17260:	ldr	w8, [sp, #8]
   17264:	ldr	w9, [sp, #12]
   17268:	cmp	w9, #0x0
   1726c:	cset	w9, ge  // ge = tcont
   17270:	str	w8, [sp, #4]
   17274:	tbnz	w9, #0, 17284 <mpc_set_d_d@@Base+0xa8>
   17278:	mov	w8, #0x2                   	// #2
   1727c:	str	w8, [sp]
   17280:	b	1729c <mpc_set_d_d@@Base+0xc0>
   17284:	ldr	w8, [sp, #12]
   17288:	mov	w9, wzr
   1728c:	mov	w10, #0x1                   	// #1
   17290:	cmp	w8, #0x0
   17294:	csel	w8, w9, w10, eq  // eq = none
   17298:	str	w8, [sp]
   1729c:	ldr	w8, [sp]
   172a0:	ldr	w9, [sp, #4]
   172a4:	orr	w0, w9, w8, lsl #2
   172a8:	ldp	x29, x30, [sp, #48]
   172ac:	add	sp, sp, #0x40
   172b0:	ret

00000000000172b4 <mpc_set_f_f@@Base>:
   172b4:	sub	sp, sp, #0x40
   172b8:	stp	x29, x30, [sp, #48]
   172bc:	add	x29, sp, #0x30
   172c0:	stur	x0, [x29, #-8]
   172c4:	stur	x1, [x29, #-16]
   172c8:	str	x2, [sp, #24]
   172cc:	str	w3, [sp, #20]
   172d0:	ldur	x0, [x29, #-8]
   172d4:	ldur	x1, [x29, #-16]
   172d8:	ldr	w8, [sp, #20]
   172dc:	and	w2, w8, #0xf
   172e0:	bl	4c40 <mpfr_set_f@plt>
   172e4:	str	w0, [sp, #16]
   172e8:	ldur	x9, [x29, #-8]
   172ec:	add	x0, x9, #0x20
   172f0:	ldr	x1, [sp, #24]
   172f4:	ldr	w8, [sp, #20]
   172f8:	asr	w2, w8, #4
   172fc:	bl	4c40 <mpfr_set_f@plt>
   17300:	str	w0, [sp, #12]
   17304:	ldr	w8, [sp, #16]
   17308:	cmp	w8, #0x0
   1730c:	cset	w8, ge  // ge = tcont
   17310:	tbnz	w8, #0, 17320 <mpc_set_f_f@@Base+0x6c>
   17314:	mov	w8, #0x2                   	// #2
   17318:	str	w8, [sp, #8]
   1731c:	b	17338 <mpc_set_f_f@@Base+0x84>
   17320:	ldr	w8, [sp, #16]
   17324:	mov	w9, wzr
   17328:	mov	w10, #0x1                   	// #1
   1732c:	cmp	w8, #0x0
   17330:	csel	w8, w9, w10, eq  // eq = none
   17334:	str	w8, [sp, #8]
   17338:	ldr	w8, [sp, #8]
   1733c:	ldr	w9, [sp, #12]
   17340:	cmp	w9, #0x0
   17344:	cset	w9, ge  // ge = tcont
   17348:	str	w8, [sp, #4]
   1734c:	tbnz	w9, #0, 1735c <mpc_set_f_f@@Base+0xa8>
   17350:	mov	w8, #0x2                   	// #2
   17354:	str	w8, [sp]
   17358:	b	17374 <mpc_set_f_f@@Base+0xc0>
   1735c:	ldr	w8, [sp, #12]
   17360:	mov	w9, wzr
   17364:	mov	w10, #0x1                   	// #1
   17368:	cmp	w8, #0x0
   1736c:	csel	w8, w9, w10, eq  // eq = none
   17370:	str	w8, [sp]
   17374:	ldr	w8, [sp]
   17378:	ldr	w9, [sp, #4]
   1737c:	orr	w0, w9, w8, lsl #2
   17380:	ldp	x29, x30, [sp, #48]
   17384:	add	sp, sp, #0x40
   17388:	ret

000000000001738c <mpc_set_fr_fr@@Base>:
   1738c:	sub	sp, sp, #0x40
   17390:	stp	x29, x30, [sp, #48]
   17394:	add	x29, sp, #0x30
   17398:	stur	x0, [x29, #-8]
   1739c:	stur	x1, [x29, #-16]
   173a0:	str	x2, [sp, #24]
   173a4:	str	w3, [sp, #20]
   173a8:	ldur	x0, [x29, #-8]
   173ac:	ldur	x1, [x29, #-16]
   173b0:	ldr	w8, [sp, #20]
   173b4:	and	w2, w8, #0xf
   173b8:	bl	4f70 <mpfr_set@plt>
   173bc:	str	w0, [sp, #16]
   173c0:	ldur	x9, [x29, #-8]
   173c4:	add	x0, x9, #0x20
   173c8:	ldr	x1, [sp, #24]
   173cc:	ldr	w8, [sp, #20]
   173d0:	asr	w2, w8, #4
   173d4:	bl	4f70 <mpfr_set@plt>
   173d8:	str	w0, [sp, #12]
   173dc:	ldr	w8, [sp, #16]
   173e0:	cmp	w8, #0x0
   173e4:	cset	w8, ge  // ge = tcont
   173e8:	tbnz	w8, #0, 173f8 <mpc_set_fr_fr@@Base+0x6c>
   173ec:	mov	w8, #0x2                   	// #2
   173f0:	str	w8, [sp, #8]
   173f4:	b	17410 <mpc_set_fr_fr@@Base+0x84>
   173f8:	ldr	w8, [sp, #16]
   173fc:	mov	w9, wzr
   17400:	mov	w10, #0x1                   	// #1
   17404:	cmp	w8, #0x0
   17408:	csel	w8, w9, w10, eq  // eq = none
   1740c:	str	w8, [sp, #8]
   17410:	ldr	w8, [sp, #8]
   17414:	ldr	w9, [sp, #12]
   17418:	cmp	w9, #0x0
   1741c:	cset	w9, ge  // ge = tcont
   17420:	str	w8, [sp, #4]
   17424:	tbnz	w9, #0, 17434 <mpc_set_fr_fr@@Base+0xa8>
   17428:	mov	w8, #0x2                   	// #2
   1742c:	str	w8, [sp]
   17430:	b	1744c <mpc_set_fr_fr@@Base+0xc0>
   17434:	ldr	w8, [sp, #12]
   17438:	mov	w9, wzr
   1743c:	mov	w10, #0x1                   	// #1
   17440:	cmp	w8, #0x0
   17444:	csel	w8, w9, w10, eq  // eq = none
   17448:	str	w8, [sp]
   1744c:	ldr	w8, [sp]
   17450:	ldr	w9, [sp, #4]
   17454:	orr	w0, w9, w8, lsl #2
   17458:	ldp	x29, x30, [sp, #48]
   1745c:	add	sp, sp, #0x40
   17460:	ret

0000000000017464 <mpc_set_ld_ld@@Base>:
   17464:	sub	sp, sp, #0x60
   17468:	stp	x29, x30, [sp, #80]
   1746c:	add	x29, sp, #0x50
   17470:	stur	x0, [x29, #-8]
   17474:	stur	q0, [x29, #-32]
   17478:	str	q1, [sp, #32]
   1747c:	str	w1, [sp, #28]
   17480:	ldur	x0, [x29, #-8]
   17484:	ldur	q0, [x29, #-32]
   17488:	ldr	w8, [sp, #28]
   1748c:	and	w1, w8, #0xf
   17490:	bl	4a90 <mpfr_set_ld@plt>
   17494:	str	w0, [sp, #24]
   17498:	ldur	x9, [x29, #-8]
   1749c:	add	x0, x9, #0x20
   174a0:	ldr	q0, [sp, #32]
   174a4:	ldr	w8, [sp, #28]
   174a8:	asr	w1, w8, #4
   174ac:	bl	4a90 <mpfr_set_ld@plt>
   174b0:	str	w0, [sp, #20]
   174b4:	ldr	w8, [sp, #24]
   174b8:	cmp	w8, #0x0
   174bc:	cset	w8, ge  // ge = tcont
   174c0:	tbnz	w8, #0, 174d0 <mpc_set_ld_ld@@Base+0x6c>
   174c4:	mov	w8, #0x2                   	// #2
   174c8:	str	w8, [sp, #16]
   174cc:	b	174e8 <mpc_set_ld_ld@@Base+0x84>
   174d0:	ldr	w8, [sp, #24]
   174d4:	mov	w9, wzr
   174d8:	mov	w10, #0x1                   	// #1
   174dc:	cmp	w8, #0x0
   174e0:	csel	w8, w9, w10, eq  // eq = none
   174e4:	str	w8, [sp, #16]
   174e8:	ldr	w8, [sp, #16]
   174ec:	ldr	w9, [sp, #20]
   174f0:	cmp	w9, #0x0
   174f4:	cset	w9, ge  // ge = tcont
   174f8:	str	w8, [sp, #12]
   174fc:	tbnz	w9, #0, 1750c <mpc_set_ld_ld@@Base+0xa8>
   17500:	mov	w8, #0x2                   	// #2
   17504:	str	w8, [sp, #8]
   17508:	b	17524 <mpc_set_ld_ld@@Base+0xc0>
   1750c:	ldr	w8, [sp, #20]
   17510:	mov	w9, wzr
   17514:	mov	w10, #0x1                   	// #1
   17518:	cmp	w8, #0x0
   1751c:	csel	w8, w9, w10, eq  // eq = none
   17520:	str	w8, [sp, #8]
   17524:	ldr	w8, [sp, #8]
   17528:	ldr	w9, [sp, #12]
   1752c:	orr	w0, w9, w8, lsl #2
   17530:	ldp	x29, x30, [sp, #80]
   17534:	add	sp, sp, #0x60
   17538:	ret

000000000001753c <mpc_set_q_q@@Base>:
   1753c:	sub	sp, sp, #0x40
   17540:	stp	x29, x30, [sp, #48]
   17544:	add	x29, sp, #0x30
   17548:	stur	x0, [x29, #-8]
   1754c:	stur	x1, [x29, #-16]
   17550:	str	x2, [sp, #24]
   17554:	str	w3, [sp, #20]
   17558:	ldur	x0, [x29, #-8]
   1755c:	ldur	x1, [x29, #-16]
   17560:	ldr	w8, [sp, #20]
   17564:	and	w2, w8, #0xf
   17568:	bl	5390 <mpfr_set_q@plt>
   1756c:	str	w0, [sp, #16]
   17570:	ldur	x9, [x29, #-8]
   17574:	add	x0, x9, #0x20
   17578:	ldr	x1, [sp, #24]
   1757c:	ldr	w8, [sp, #20]
   17580:	asr	w2, w8, #4
   17584:	bl	5390 <mpfr_set_q@plt>
   17588:	str	w0, [sp, #12]
   1758c:	ldr	w8, [sp, #16]
   17590:	cmp	w8, #0x0
   17594:	cset	w8, ge  // ge = tcont
   17598:	tbnz	w8, #0, 175a8 <mpc_set_q_q@@Base+0x6c>
   1759c:	mov	w8, #0x2                   	// #2
   175a0:	str	w8, [sp, #8]
   175a4:	b	175c0 <mpc_set_q_q@@Base+0x84>
   175a8:	ldr	w8, [sp, #16]
   175ac:	mov	w9, wzr
   175b0:	mov	w10, #0x1                   	// #1
   175b4:	cmp	w8, #0x0
   175b8:	csel	w8, w9, w10, eq  // eq = none
   175bc:	str	w8, [sp, #8]
   175c0:	ldr	w8, [sp, #8]
   175c4:	ldr	w9, [sp, #12]
   175c8:	cmp	w9, #0x0
   175cc:	cset	w9, ge  // ge = tcont
   175d0:	str	w8, [sp, #4]
   175d4:	tbnz	w9, #0, 175e4 <mpc_set_q_q@@Base+0xa8>
   175d8:	mov	w8, #0x2                   	// #2
   175dc:	str	w8, [sp]
   175e0:	b	175fc <mpc_set_q_q@@Base+0xc0>
   175e4:	ldr	w8, [sp, #12]
   175e8:	mov	w9, wzr
   175ec:	mov	w10, #0x1                   	// #1
   175f0:	cmp	w8, #0x0
   175f4:	csel	w8, w9, w10, eq  // eq = none
   175f8:	str	w8, [sp]
   175fc:	ldr	w8, [sp]
   17600:	ldr	w9, [sp, #4]
   17604:	orr	w0, w9, w8, lsl #2
   17608:	ldp	x29, x30, [sp, #48]
   1760c:	add	sp, sp, #0x40
   17610:	ret

0000000000017614 <mpc_set_si_si@@Base>:
   17614:	sub	sp, sp, #0x40
   17618:	stp	x29, x30, [sp, #48]
   1761c:	add	x29, sp, #0x30
   17620:	stur	x0, [x29, #-8]
   17624:	stur	x1, [x29, #-16]
   17628:	str	x2, [sp, #24]
   1762c:	str	w3, [sp, #20]
   17630:	ldur	x0, [x29, #-8]
   17634:	ldur	x1, [x29, #-16]
   17638:	ldr	w8, [sp, #20]
   1763c:	and	w2, w8, #0xf
   17640:	bl	5370 <mpfr_set_si@plt>
   17644:	str	w0, [sp, #16]
   17648:	ldur	x9, [x29, #-8]
   1764c:	add	x0, x9, #0x20
   17650:	ldr	x1, [sp, #24]
   17654:	ldr	w8, [sp, #20]
   17658:	asr	w2, w8, #4
   1765c:	bl	5370 <mpfr_set_si@plt>
   17660:	str	w0, [sp, #12]
   17664:	ldr	w8, [sp, #16]
   17668:	cmp	w8, #0x0
   1766c:	cset	w8, ge  // ge = tcont
   17670:	tbnz	w8, #0, 17680 <mpc_set_si_si@@Base+0x6c>
   17674:	mov	w8, #0x2                   	// #2
   17678:	str	w8, [sp, #8]
   1767c:	b	17698 <mpc_set_si_si@@Base+0x84>
   17680:	ldr	w8, [sp, #16]
   17684:	mov	w9, wzr
   17688:	mov	w10, #0x1                   	// #1
   1768c:	cmp	w8, #0x0
   17690:	csel	w8, w9, w10, eq  // eq = none
   17694:	str	w8, [sp, #8]
   17698:	ldr	w8, [sp, #8]
   1769c:	ldr	w9, [sp, #12]
   176a0:	cmp	w9, #0x0
   176a4:	cset	w9, ge  // ge = tcont
   176a8:	str	w8, [sp, #4]
   176ac:	tbnz	w9, #0, 176bc <mpc_set_si_si@@Base+0xa8>
   176b0:	mov	w8, #0x2                   	// #2
   176b4:	str	w8, [sp]
   176b8:	b	176d4 <mpc_set_si_si@@Base+0xc0>
   176bc:	ldr	w8, [sp, #12]
   176c0:	mov	w9, wzr
   176c4:	mov	w10, #0x1                   	// #1
   176c8:	cmp	w8, #0x0
   176cc:	csel	w8, w9, w10, eq  // eq = none
   176d0:	str	w8, [sp]
   176d4:	ldr	w8, [sp]
   176d8:	ldr	w9, [sp, #4]
   176dc:	orr	w0, w9, w8, lsl #2
   176e0:	ldp	x29, x30, [sp, #48]
   176e4:	add	sp, sp, #0x40
   176e8:	ret

00000000000176ec <mpc_set_ui_ui@@Base>:
   176ec:	sub	sp, sp, #0x40
   176f0:	stp	x29, x30, [sp, #48]
   176f4:	add	x29, sp, #0x30
   176f8:	stur	x0, [x29, #-8]
   176fc:	stur	x1, [x29, #-16]
   17700:	str	x2, [sp, #24]
   17704:	str	w3, [sp, #20]
   17708:	ldur	x0, [x29, #-8]
   1770c:	ldur	x1, [x29, #-16]
   17710:	ldr	w8, [sp, #20]
   17714:	and	w2, w8, #0xf
   17718:	bl	5610 <mpfr_set_ui@plt>
   1771c:	str	w0, [sp, #16]
   17720:	ldur	x9, [x29, #-8]
   17724:	add	x0, x9, #0x20
   17728:	ldr	x1, [sp, #24]
   1772c:	ldr	w8, [sp, #20]
   17730:	asr	w2, w8, #4
   17734:	bl	5610 <mpfr_set_ui@plt>
   17738:	str	w0, [sp, #12]
   1773c:	ldr	w8, [sp, #16]
   17740:	cmp	w8, #0x0
   17744:	cset	w8, ge  // ge = tcont
   17748:	tbnz	w8, #0, 17758 <mpc_set_ui_ui@@Base+0x6c>
   1774c:	mov	w8, #0x2                   	// #2
   17750:	str	w8, [sp, #8]
   17754:	b	17770 <mpc_set_ui_ui@@Base+0x84>
   17758:	ldr	w8, [sp, #16]
   1775c:	mov	w9, wzr
   17760:	mov	w10, #0x1                   	// #1
   17764:	cmp	w8, #0x0
   17768:	csel	w8, w9, w10, eq  // eq = none
   1776c:	str	w8, [sp, #8]
   17770:	ldr	w8, [sp, #8]
   17774:	ldr	w9, [sp, #12]
   17778:	cmp	w9, #0x0
   1777c:	cset	w9, ge  // ge = tcont
   17780:	str	w8, [sp, #4]
   17784:	tbnz	w9, #0, 17794 <mpc_set_ui_ui@@Base+0xa8>
   17788:	mov	w8, #0x2                   	// #2
   1778c:	str	w8, [sp]
   17790:	b	177ac <mpc_set_ui_ui@@Base+0xc0>
   17794:	ldr	w8, [sp, #12]
   17798:	mov	w9, wzr
   1779c:	mov	w10, #0x1                   	// #1
   177a0:	cmp	w8, #0x0
   177a4:	csel	w8, w9, w10, eq  // eq = none
   177a8:	str	w8, [sp]
   177ac:	ldr	w8, [sp]
   177b0:	ldr	w9, [sp, #4]
   177b4:	orr	w0, w9, w8, lsl #2
   177b8:	ldp	x29, x30, [sp, #48]
   177bc:	add	sp, sp, #0x40
   177c0:	ret

00000000000177c4 <mpc_set_z_z@@Base>:
   177c4:	sub	sp, sp, #0x40
   177c8:	stp	x29, x30, [sp, #48]
   177cc:	add	x29, sp, #0x30
   177d0:	stur	x0, [x29, #-8]
   177d4:	stur	x1, [x29, #-16]
   177d8:	str	x2, [sp, #24]
   177dc:	str	w3, [sp, #20]
   177e0:	ldur	x0, [x29, #-8]
   177e4:	ldur	x1, [x29, #-16]
   177e8:	ldr	w8, [sp, #20]
   177ec:	and	w2, w8, #0xf
   177f0:	bl	4fb0 <mpfr_set_z@plt>
   177f4:	str	w0, [sp, #16]
   177f8:	ldur	x9, [x29, #-8]
   177fc:	add	x0, x9, #0x20
   17800:	ldr	x1, [sp, #24]
   17804:	ldr	w8, [sp, #20]
   17808:	asr	w2, w8, #4
   1780c:	bl	4fb0 <mpfr_set_z@plt>
   17810:	str	w0, [sp, #12]
   17814:	ldr	w8, [sp, #16]
   17818:	cmp	w8, #0x0
   1781c:	cset	w8, ge  // ge = tcont
   17820:	tbnz	w8, #0, 17830 <mpc_set_z_z@@Base+0x6c>
   17824:	mov	w8, #0x2                   	// #2
   17828:	str	w8, [sp, #8]
   1782c:	b	17848 <mpc_set_z_z@@Base+0x84>
   17830:	ldr	w8, [sp, #16]
   17834:	mov	w9, wzr
   17838:	mov	w10, #0x1                   	// #1
   1783c:	cmp	w8, #0x0
   17840:	csel	w8, w9, w10, eq  // eq = none
   17844:	str	w8, [sp, #8]
   17848:	ldr	w8, [sp, #8]
   1784c:	ldr	w9, [sp, #12]
   17850:	cmp	w9, #0x0
   17854:	cset	w9, ge  // ge = tcont
   17858:	str	w8, [sp, #4]
   1785c:	tbnz	w9, #0, 1786c <mpc_set_z_z@@Base+0xa8>
   17860:	mov	w8, #0x2                   	// #2
   17864:	str	w8, [sp]
   17868:	b	17884 <mpc_set_z_z@@Base+0xc0>
   1786c:	ldr	w8, [sp, #12]
   17870:	mov	w9, wzr
   17874:	mov	w10, #0x1                   	// #1
   17878:	cmp	w8, #0x0
   1787c:	csel	w8, w9, w10, eq  // eq = none
   17880:	str	w8, [sp]
   17884:	ldr	w8, [sp]
   17888:	ldr	w9, [sp, #4]
   1788c:	orr	w0, w9, w8, lsl #2
   17890:	ldp	x29, x30, [sp, #48]
   17894:	add	sp, sp, #0x40
   17898:	ret

000000000001789c <mpc_set_uj_uj@@Base>:
   1789c:	sub	sp, sp, #0x40
   178a0:	stp	x29, x30, [sp, #48]
   178a4:	add	x29, sp, #0x30
   178a8:	stur	x0, [x29, #-8]
   178ac:	stur	x1, [x29, #-16]
   178b0:	str	x2, [sp, #24]
   178b4:	str	w3, [sp, #20]
   178b8:	ldur	x0, [x29, #-8]
   178bc:	ldur	x1, [x29, #-16]
   178c0:	ldr	w8, [sp, #20]
   178c4:	and	w2, w8, #0xf
   178c8:	bl	5500 <__gmpfr_set_uj@plt>
   178cc:	str	w0, [sp, #16]
   178d0:	ldur	x9, [x29, #-8]
   178d4:	add	x0, x9, #0x20
   178d8:	ldr	x1, [sp, #24]
   178dc:	ldr	w8, [sp, #20]
   178e0:	asr	w2, w8, #4
   178e4:	bl	5500 <__gmpfr_set_uj@plt>
   178e8:	str	w0, [sp, #12]
   178ec:	ldr	w8, [sp, #16]
   178f0:	cmp	w8, #0x0
   178f4:	cset	w8, ge  // ge = tcont
   178f8:	tbnz	w8, #0, 17908 <mpc_set_uj_uj@@Base+0x6c>
   178fc:	mov	w8, #0x2                   	// #2
   17900:	str	w8, [sp, #8]
   17904:	b	17920 <mpc_set_uj_uj@@Base+0x84>
   17908:	ldr	w8, [sp, #16]
   1790c:	mov	w9, wzr
   17910:	mov	w10, #0x1                   	// #1
   17914:	cmp	w8, #0x0
   17918:	csel	w8, w9, w10, eq  // eq = none
   1791c:	str	w8, [sp, #8]
   17920:	ldr	w8, [sp, #8]
   17924:	ldr	w9, [sp, #12]
   17928:	cmp	w9, #0x0
   1792c:	cset	w9, ge  // ge = tcont
   17930:	str	w8, [sp, #4]
   17934:	tbnz	w9, #0, 17944 <mpc_set_uj_uj@@Base+0xa8>
   17938:	mov	w8, #0x2                   	// #2
   1793c:	str	w8, [sp]
   17940:	b	1795c <mpc_set_uj_uj@@Base+0xc0>
   17944:	ldr	w8, [sp, #12]
   17948:	mov	w9, wzr
   1794c:	mov	w10, #0x1                   	// #1
   17950:	cmp	w8, #0x0
   17954:	csel	w8, w9, w10, eq  // eq = none
   17958:	str	w8, [sp]
   1795c:	ldr	w8, [sp]
   17960:	ldr	w9, [sp, #4]
   17964:	orr	w0, w9, w8, lsl #2
   17968:	ldp	x29, x30, [sp, #48]
   1796c:	add	sp, sp, #0x40
   17970:	ret

0000000000017974 <mpc_set_sj_sj@@Base>:
   17974:	sub	sp, sp, #0x40
   17978:	stp	x29, x30, [sp, #48]
   1797c:	add	x29, sp, #0x30
   17980:	stur	x0, [x29, #-8]
   17984:	stur	x1, [x29, #-16]
   17988:	str	x2, [sp, #24]
   1798c:	str	w3, [sp, #20]
   17990:	ldur	x0, [x29, #-8]
   17994:	ldur	x1, [x29, #-16]
   17998:	ldr	w8, [sp, #20]
   1799c:	and	w2, w8, #0xf
   179a0:	bl	4e50 <__gmpfr_set_sj@plt>
   179a4:	str	w0, [sp, #16]
   179a8:	ldur	x9, [x29, #-8]
   179ac:	add	x0, x9, #0x20
   179b0:	ldr	x1, [sp, #24]
   179b4:	ldr	w8, [sp, #20]
   179b8:	asr	w2, w8, #4
   179bc:	bl	4e50 <__gmpfr_set_sj@plt>
   179c0:	str	w0, [sp, #12]
   179c4:	ldr	w8, [sp, #16]
   179c8:	cmp	w8, #0x0
   179cc:	cset	w8, ge  // ge = tcont
   179d0:	tbnz	w8, #0, 179e0 <mpc_set_sj_sj@@Base+0x6c>
   179d4:	mov	w8, #0x2                   	// #2
   179d8:	str	w8, [sp, #8]
   179dc:	b	179f8 <mpc_set_sj_sj@@Base+0x84>
   179e0:	ldr	w8, [sp, #16]
   179e4:	mov	w9, wzr
   179e8:	mov	w10, #0x1                   	// #1
   179ec:	cmp	w8, #0x0
   179f0:	csel	w8, w9, w10, eq  // eq = none
   179f4:	str	w8, [sp, #8]
   179f8:	ldr	w8, [sp, #8]
   179fc:	ldr	w9, [sp, #12]
   17a00:	cmp	w9, #0x0
   17a04:	cset	w9, ge  // ge = tcont
   17a08:	str	w8, [sp, #4]
   17a0c:	tbnz	w9, #0, 17a1c <mpc_set_sj_sj@@Base+0xa8>
   17a10:	mov	w8, #0x2                   	// #2
   17a14:	str	w8, [sp]
   17a18:	b	17a34 <mpc_set_sj_sj@@Base+0xc0>
   17a1c:	ldr	w8, [sp, #12]
   17a20:	mov	w9, wzr
   17a24:	mov	w10, #0x1                   	// #1
   17a28:	cmp	w8, #0x0
   17a2c:	csel	w8, w9, w10, eq  // eq = none
   17a30:	str	w8, [sp]
   17a34:	ldr	w8, [sp]
   17a38:	ldr	w9, [sp, #4]
   17a3c:	orr	w0, w9, w8, lsl #2
   17a40:	ldp	x29, x30, [sp, #48]
   17a44:	add	sp, sp, #0x40
   17a48:	ret

0000000000017a4c <mpc_sin@@Base>:
   17a4c:	sub	sp, sp, #0x30
   17a50:	stp	x29, x30, [sp, #32]
   17a54:	add	x29, sp, #0x20
   17a58:	mov	x8, xzr
   17a5c:	mov	w9, wzr
   17a60:	stur	x0, [x29, #-8]
   17a64:	str	x1, [sp, #16]
   17a68:	str	w2, [sp, #12]
   17a6c:	ldur	x0, [x29, #-8]
   17a70:	ldr	x2, [sp, #16]
   17a74:	ldr	w3, [sp, #12]
   17a78:	mov	x1, x8
   17a7c:	mov	w4, w9
   17a80:	bl	5240 <mpc_sin_cos@plt>
   17a84:	and	w0, w0, #0xf
   17a88:	ldp	x29, x30, [sp, #32]
   17a8c:	add	sp, sp, #0x30
   17a90:	ret

0000000000017a94 <mpc_fix_inf@@Base>:
   17a94:	sub	sp, sp, #0x30
   17a98:	stp	x29, x30, [sp, #32]
   17a9c:	add	x29, sp, #0x20
   17aa0:	str	x0, [sp, #16]
   17aa4:	str	w1, [sp, #12]
   17aa8:	ldr	x8, [sp, #16]
   17aac:	ldr	x8, [x8, #16]
   17ab0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17ab4:	cmp	x8, x9
   17ab8:	b.eq	17aec <mpc_fix_inf@@Base+0x58>  // b.none
   17abc:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   17ac0:	ldr	x8, [x8, #4008]
   17ac4:	ldr	x0, [x8]
   17ac8:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   17acc:	add	x1, x1, #0x2a0
   17ad0:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   17ad4:	add	x2, x2, #0x5f6
   17ad8:	mov	w3, #0x115                 	// #277
   17adc:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   17ae0:	add	x4, x4, #0x600
   17ae4:	bl	56a0 <fprintf@plt>
   17ae8:	bl	5100 <abort@plt>
   17aec:	ldr	w8, [sp, #12]
   17af0:	cmp	w8, #0x1
   17af4:	b.eq	17bb0 <mpc_fix_inf@@Base+0x11c>  // b.none
   17af8:	ldr	x8, [sp, #16]
   17afc:	ldr	w9, [x8, #8]
   17b00:	mov	w10, #0xffffffff            	// #-1
   17b04:	mov	w11, #0x1                   	// #1
   17b08:	cmp	w9, #0x0
   17b0c:	csel	w9, w10, w11, lt  // lt = tstop
   17b10:	cmp	w9, #0x0
   17b14:	cset	w9, ge  // ge = tcont
   17b18:	tbnz	w9, #0, 17b28 <mpc_fix_inf@@Base+0x94>
   17b1c:	ldr	w8, [sp, #12]
   17b20:	cmp	w8, #0x2
   17b24:	b.eq	17bb0 <mpc_fix_inf@@Base+0x11c>  // b.none
   17b28:	ldr	x8, [sp, #16]
   17b2c:	ldr	w9, [x8, #8]
   17b30:	mov	w10, #0xffffffff            	// #-1
   17b34:	mov	w11, #0x1                   	// #1
   17b38:	cmp	w9, #0x0
   17b3c:	csel	w9, w10, w11, lt  // lt = tstop
   17b40:	cmp	w9, #0x0
   17b44:	cset	w9, le
   17b48:	tbnz	w9, #0, 17b58 <mpc_fix_inf@@Base+0xc4>
   17b4c:	ldr	w8, [sp, #12]
   17b50:	cmp	w8, #0x3
   17b54:	b.eq	17bb0 <mpc_fix_inf@@Base+0x11c>  // b.none
   17b58:	ldr	x8, [sp, #16]
   17b5c:	ldr	x8, [x8, #16]
   17b60:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17b64:	cmp	x8, x9
   17b68:	b.ge	17b98 <mpc_fix_inf@@Base+0x104>  // b.tcont
   17b6c:	ldr	x8, [sp, #16]
   17b70:	ldr	x8, [x8, #16]
   17b74:	mov	x9, #0x2                   	// #2
   17b78:	movk	x9, #0x8000, lsl #48
   17b7c:	cmp	x8, x9
   17b80:	b.ne	17b8c <mpc_fix_inf@@Base+0xf8>  // b.any
   17b84:	bl	4be0 <mpfr_set_erangeflag@plt>
   17b88:	b	17b8c <mpc_fix_inf@@Base+0xf8>
   17b8c:	mov	w8, wzr
   17b90:	str	w8, [sp, #8]
   17b94:	b	17ba4 <mpc_fix_inf@@Base+0x110>
   17b98:	ldr	x8, [sp, #16]
   17b9c:	ldr	w9, [x8, #8]
   17ba0:	str	w9, [sp, #8]
   17ba4:	ldr	w8, [sp, #8]
   17ba8:	stur	w8, [x29, #-4]
   17bac:	b	17c7c <mpc_fix_inf@@Base+0x1e8>
   17bb0:	ldr	x8, [sp, #16]
   17bb4:	ldr	x8, [x8, #16]
   17bb8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17bbc:	cmp	x8, x9
   17bc0:	b.ge	17bf0 <mpc_fix_inf@@Base+0x15c>  // b.tcont
   17bc4:	ldr	x8, [sp, #16]
   17bc8:	ldr	x8, [x8, #16]
   17bcc:	mov	x9, #0x2                   	// #2
   17bd0:	movk	x9, #0x8000, lsl #48
   17bd4:	cmp	x8, x9
   17bd8:	b.ne	17be4 <mpc_fix_inf@@Base+0x150>  // b.any
   17bdc:	bl	4be0 <mpfr_set_erangeflag@plt>
   17be0:	b	17be4 <mpc_fix_inf@@Base+0x150>
   17be4:	mov	w8, wzr
   17be8:	str	w8, [sp, #4]
   17bec:	b	17bfc <mpc_fix_inf@@Base+0x168>
   17bf0:	ldr	x8, [sp, #16]
   17bf4:	ldr	w9, [x8, #8]
   17bf8:	str	w9, [sp, #4]
   17bfc:	ldr	w8, [sp, #4]
   17c00:	cmp	w8, #0x0
   17c04:	cset	w8, ge  // ge = tcont
   17c08:	tbnz	w8, #0, 17c18 <mpc_fix_inf@@Base+0x184>
   17c0c:	ldr	x0, [sp, #16]
   17c10:	bl	4ee0 <mpfr_nextabove@plt>
   17c14:	b	17c20 <mpc_fix_inf@@Base+0x18c>
   17c18:	ldr	x0, [sp, #16]
   17c1c:	bl	4c80 <mpfr_nextbelow@plt>
   17c20:	ldr	x8, [sp, #16]
   17c24:	ldr	x8, [x8, #16]
   17c28:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17c2c:	cmp	x8, x9
   17c30:	b.ge	17c60 <mpc_fix_inf@@Base+0x1cc>  // b.tcont
   17c34:	ldr	x8, [sp, #16]
   17c38:	ldr	x8, [x8, #16]
   17c3c:	mov	x9, #0x2                   	// #2
   17c40:	movk	x9, #0x8000, lsl #48
   17c44:	cmp	x8, x9
   17c48:	b.ne	17c54 <mpc_fix_inf@@Base+0x1c0>  // b.any
   17c4c:	bl	4be0 <mpfr_set_erangeflag@plt>
   17c50:	b	17c54 <mpc_fix_inf@@Base+0x1c0>
   17c54:	mov	w8, wzr
   17c58:	str	w8, [sp]
   17c5c:	b	17c6c <mpc_fix_inf@@Base+0x1d8>
   17c60:	ldr	x8, [sp, #16]
   17c64:	ldr	w9, [x8, #8]
   17c68:	str	w9, [sp]
   17c6c:	ldr	w8, [sp]
   17c70:	mov	w9, wzr
   17c74:	subs	w8, w9, w8
   17c78:	stur	w8, [x29, #-4]
   17c7c:	ldur	w0, [x29, #-4]
   17c80:	ldp	x29, x30, [sp, #32]
   17c84:	add	sp, sp, #0x30
   17c88:	ret

0000000000017c8c <mpc_fix_zero@@Base>:
   17c8c:	sub	sp, sp, #0x30
   17c90:	stp	x29, x30, [sp, #32]
   17c94:	add	x29, sp, #0x20
   17c98:	mov	w8, #0xffffffff            	// #-1
   17c9c:	mov	w9, #0x1                   	// #1
   17ca0:	str	x0, [sp, #16]
   17ca4:	str	w1, [sp, #12]
   17ca8:	ldr	x10, [sp, #16]
   17cac:	ldr	w11, [x10, #8]
   17cb0:	cmp	w11, #0x0
   17cb4:	csel	w8, w8, w9, lt  // lt = tstop
   17cb8:	cmp	w8, #0x0
   17cbc:	cset	w8, ge  // ge = tcont
   17cc0:	tbnz	w8, #0, 17cd0 <mpc_fix_zero@@Base+0x44>
   17cc4:	ldr	w8, [sp, #12]
   17cc8:	cmp	w8, #0x3
   17ccc:	b.eq	17d28 <mpc_fix_zero@@Base+0x9c>  // b.none
   17cd0:	ldr	x8, [sp, #16]
   17cd4:	ldr	w9, [x8, #8]
   17cd8:	mov	w10, #0x1                   	// #1
   17cdc:	mov	w11, #0xffffffff            	// #-1
   17ce0:	cmp	w9, #0x0
   17ce4:	csel	w9, w11, w10, lt  // lt = tstop
   17ce8:	cmp	w9, #0x0
   17cec:	cset	w9, le
   17cf0:	tbnz	w9, #0, 17d00 <mpc_fix_zero@@Base+0x74>
   17cf4:	ldr	w8, [sp, #12]
   17cf8:	cmp	w8, #0x2
   17cfc:	b.eq	17d28 <mpc_fix_zero@@Base+0x9c>  // b.none
   17d00:	ldr	x8, [sp, #16]
   17d04:	ldr	w9, [x8, #8]
   17d08:	cmp	w9, #0x0
   17d0c:	cset	w9, lt  // lt = tstop
   17d10:	mov	w10, #0x1                   	// #1
   17d14:	mov	w11, #0xffffffff            	// #-1
   17d18:	tst	w9, #0x1
   17d1c:	csel	w9, w11, w10, eq  // eq = none
   17d20:	stur	w9, [x29, #-4]
   17d24:	b	17d64 <mpc_fix_zero@@Base+0xd8>
   17d28:	ldr	x8, [sp, #16]
   17d2c:	ldr	w9, [x8, #8]
   17d30:	cmp	w9, #0x0
   17d34:	cset	w9, lt  // lt = tstop
   17d38:	and	w9, w9, #0x1
   17d3c:	cbnz	w9, 17d54 <mpc_fix_zero@@Base+0xc8>
   17d40:	ldr	x0, [sp, #16]
   17d44:	bl	4ee0 <mpfr_nextabove@plt>
   17d48:	mov	w8, #0x1                   	// #1
   17d4c:	stur	w8, [x29, #-4]
   17d50:	b	17d64 <mpc_fix_zero@@Base+0xd8>
   17d54:	ldr	x0, [sp, #16]
   17d58:	bl	4c80 <mpfr_nextbelow@plt>
   17d5c:	mov	w8, #0xffffffff            	// #-1
   17d60:	stur	w8, [x29, #-4]
   17d64:	ldur	w0, [x29, #-4]
   17d68:	ldp	x29, x30, [sp, #32]
   17d6c:	add	sp, sp, #0x30
   17d70:	ret

0000000000017d74 <mpc_sin_cos@@Base>:
   17d74:	stp	x29, x30, [sp, #-32]!
   17d78:	str	x28, [sp, #16]
   17d7c:	mov	x29, sp
   17d80:	sub	sp, sp, #0x200
   17d84:	stur	x0, [x29, #-16]
   17d88:	stur	x1, [x29, #-24]
   17d8c:	stur	x2, [x29, #-32]
   17d90:	stur	w3, [x29, #-36]
   17d94:	stur	w4, [x29, #-40]
   17d98:	ldur	x0, [x29, #-32]
   17d9c:	bl	55c0 <mpfr_number_p@plt>
   17da0:	cbz	w0, 17db4 <mpc_sin_cos@@Base+0x40>
   17da4:	ldur	x8, [x29, #-32]
   17da8:	add	x0, x8, #0x20
   17dac:	bl	55c0 <mpfr_number_p@plt>
   17db0:	cbnz	w0, 17dd4 <mpc_sin_cos@@Base+0x60>
   17db4:	ldur	x0, [x29, #-16]
   17db8:	ldur	x1, [x29, #-24]
   17dbc:	ldur	x2, [x29, #-32]
   17dc0:	ldur	w3, [x29, #-36]
   17dc4:	ldur	w4, [x29, #-40]
   17dc8:	bl	18690 <mpc_sin_cos@@Base+0x91c>
   17dcc:	stur	w0, [x29, #-4]
   17dd0:	b	1867c <mpc_sin_cos@@Base+0x908>
   17dd4:	ldur	x8, [x29, #-32]
   17dd8:	ldr	x8, [x8, #48]
   17ddc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   17de0:	cmp	x8, x9
   17de4:	b.ne	17e08 <mpc_sin_cos@@Base+0x94>  // b.any
   17de8:	ldur	x0, [x29, #-16]
   17dec:	ldur	x1, [x29, #-24]
   17df0:	ldur	x2, [x29, #-32]
   17df4:	ldur	w3, [x29, #-36]
   17df8:	ldur	w4, [x29, #-40]
   17dfc:	bl	18ca8 <mpc_sin_cos@@Base+0xf34>
   17e00:	stur	w0, [x29, #-4]
   17e04:	b	1867c <mpc_sin_cos@@Base+0x908>
   17e08:	ldur	x8, [x29, #-32]
   17e0c:	ldr	x8, [x8, #16]
   17e10:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   17e14:	cmp	x8, x9
   17e18:	b.ne	17e3c <mpc_sin_cos@@Base+0xc8>  // b.any
   17e1c:	ldur	x0, [x29, #-16]
   17e20:	ldur	x1, [x29, #-24]
   17e24:	ldur	x2, [x29, #-32]
   17e28:	ldur	w3, [x29, #-36]
   17e2c:	ldur	w4, [x29, #-40]
   17e30:	bl	18f34 <mpc_sin_cos@@Base+0x11c0>
   17e34:	stur	w0, [x29, #-4]
   17e38:	b	1867c <mpc_sin_cos@@Base+0x908>
   17e3c:	str	wzr, [sp, #248]
   17e40:	mov	x8, #0x2                   	// #2
   17e44:	stur	x8, [x29, #-240]
   17e48:	ldur	x8, [x29, #-16]
   17e4c:	cbz	x8, 17fb4 <mpc_sin_cos@@Base+0x240>
   17e50:	ldur	x8, [x29, #-240]
   17e54:	ldur	x9, [x29, #-16]
   17e58:	ldr	x9, [x9]
   17e5c:	ldur	x10, [x29, #-16]
   17e60:	ldr	x10, [x10, #32]
   17e64:	cmp	x9, x10
   17e68:	str	x8, [sp, #224]
   17e6c:	b.le	17e80 <mpc_sin_cos@@Base+0x10c>
   17e70:	ldur	x8, [x29, #-16]
   17e74:	ldr	x8, [x8]
   17e78:	str	x8, [sp, #216]
   17e7c:	b	17e8c <mpc_sin_cos@@Base+0x118>
   17e80:	ldur	x8, [x29, #-16]
   17e84:	ldr	x8, [x8, #32]
   17e88:	str	x8, [sp, #216]
   17e8c:	ldr	x8, [sp, #216]
   17e90:	ldr	x9, [sp, #224]
   17e94:	cmp	x9, x8
   17e98:	b.le	17ea8 <mpc_sin_cos@@Base+0x134>
   17e9c:	ldur	x8, [x29, #-240]
   17ea0:	str	x8, [sp, #208]
   17ea4:	b	17ee4 <mpc_sin_cos@@Base+0x170>
   17ea8:	ldur	x8, [x29, #-16]
   17eac:	ldr	x8, [x8]
   17eb0:	ldur	x9, [x29, #-16]
   17eb4:	ldr	x9, [x9, #32]
   17eb8:	cmp	x8, x9
   17ebc:	b.le	17ed0 <mpc_sin_cos@@Base+0x15c>
   17ec0:	ldur	x8, [x29, #-16]
   17ec4:	ldr	x8, [x8]
   17ec8:	str	x8, [sp, #200]
   17ecc:	b	17edc <mpc_sin_cos@@Base+0x168>
   17ed0:	ldur	x8, [x29, #-16]
   17ed4:	ldr	x8, [x8, #32]
   17ed8:	str	x8, [sp, #200]
   17edc:	ldr	x8, [sp, #200]
   17ee0:	str	x8, [sp, #208]
   17ee4:	ldr	x8, [sp, #208]
   17ee8:	stur	x8, [x29, #-240]
   17eec:	ldur	x8, [x29, #-32]
   17ef0:	ldr	x8, [x8]
   17ef4:	ldur	x9, [x29, #-32]
   17ef8:	ldr	x9, [x9, #32]
   17efc:	cmp	x8, x9
   17f00:	b.le	17f14 <mpc_sin_cos@@Base+0x1a0>
   17f04:	ldur	x8, [x29, #-32]
   17f08:	ldr	x8, [x8]
   17f0c:	str	x8, [sp, #192]
   17f10:	b	17f20 <mpc_sin_cos@@Base+0x1ac>
   17f14:	ldur	x8, [x29, #-32]
   17f18:	ldr	x8, [x8, #32]
   17f1c:	str	x8, [sp, #192]
   17f20:	ldr	x8, [sp, #192]
   17f24:	ldur	x9, [x29, #-240]
   17f28:	cmp	x8, x9
   17f2c:	b.gt	17fb4 <mpc_sin_cos@@Base+0x240>
   17f30:	ldur	x8, [x29, #-32]
   17f34:	ldr	x8, [x8, #16]
   17f38:	str	x8, [sp, #240]
   17f3c:	ldur	x8, [x29, #-32]
   17f40:	ldr	x8, [x8, #48]
   17f44:	str	x8, [sp, #232]
   17f48:	ldr	x8, [sp, #240]
   17f4c:	ldr	x9, [sp, #232]
   17f50:	cmp	x8, x9
   17f54:	b.ge	17f64 <mpc_sin_cos@@Base+0x1f0>  // b.tcont
   17f58:	ldr	x8, [sp, #232]
   17f5c:	str	x8, [sp, #184]
   17f60:	b	17f6c <mpc_sin_cos@@Base+0x1f8>
   17f64:	ldr	x8, [sp, #240]
   17f68:	str	x8, [sp, #184]
   17f6c:	ldr	x8, [sp, #184]
   17f70:	str	x8, [sp, #240]
   17f74:	ldr	x8, [sp, #240]
   17f78:	cmp	x8, #0x0
   17f7c:	cset	w9, ge  // ge = tcont
   17f80:	tbnz	w9, #0, 17fb4 <mpc_sin_cos@@Base+0x240>
   17f84:	ldur	x8, [x29, #-240]
   17f88:	ldr	x9, [sp, #240]
   17f8c:	mov	x10, #0x2                   	// #2
   17f90:	mneg	x9, x9, x10
   17f94:	add	x9, x9, #0x3
   17f98:	cmp	x8, x9
   17f9c:	b.ge	17fb4 <mpc_sin_cos@@Base+0x240>  // b.tcont
   17fa0:	ldr	x8, [sp, #240]
   17fa4:	mov	x9, #0x2                   	// #2
   17fa8:	mneg	x8, x8, x9
   17fac:	add	x8, x8, #0x3
   17fb0:	stur	x8, [x29, #-240]
   17fb4:	ldur	x8, [x29, #-24]
   17fb8:	cbz	x8, 18058 <mpc_sin_cos@@Base+0x2e4>
   17fbc:	ldur	x8, [x29, #-240]
   17fc0:	ldur	x9, [x29, #-24]
   17fc4:	ldr	x9, [x9]
   17fc8:	ldur	x10, [x29, #-24]
   17fcc:	ldr	x10, [x10, #32]
   17fd0:	cmp	x9, x10
   17fd4:	str	x8, [sp, #176]
   17fd8:	b.le	17fec <mpc_sin_cos@@Base+0x278>
   17fdc:	ldur	x8, [x29, #-24]
   17fe0:	ldr	x8, [x8]
   17fe4:	str	x8, [sp, #168]
   17fe8:	b	17ff8 <mpc_sin_cos@@Base+0x284>
   17fec:	ldur	x8, [x29, #-24]
   17ff0:	ldr	x8, [x8, #32]
   17ff4:	str	x8, [sp, #168]
   17ff8:	ldr	x8, [sp, #168]
   17ffc:	ldr	x9, [sp, #176]
   18000:	cmp	x9, x8
   18004:	b.le	18014 <mpc_sin_cos@@Base+0x2a0>
   18008:	ldur	x8, [x29, #-240]
   1800c:	str	x8, [sp, #160]
   18010:	b	18050 <mpc_sin_cos@@Base+0x2dc>
   18014:	ldur	x8, [x29, #-24]
   18018:	ldr	x8, [x8]
   1801c:	ldur	x9, [x29, #-24]
   18020:	ldr	x9, [x9, #32]
   18024:	cmp	x8, x9
   18028:	b.le	1803c <mpc_sin_cos@@Base+0x2c8>
   1802c:	ldur	x8, [x29, #-24]
   18030:	ldr	x8, [x8]
   18034:	str	x8, [sp, #152]
   18038:	b	18048 <mpc_sin_cos@@Base+0x2d4>
   1803c:	ldur	x8, [x29, #-24]
   18040:	ldr	x8, [x8, #32]
   18044:	str	x8, [sp, #152]
   18048:	ldr	x8, [sp, #152]
   1804c:	str	x8, [sp, #160]
   18050:	ldr	x8, [sp, #160]
   18054:	stur	x8, [x29, #-240]
   18058:	sub	x0, x29, #0x48
   1805c:	mov	x8, #0x2                   	// #2
   18060:	mov	x1, x8
   18064:	str	x8, [sp, #144]
   18068:	bl	5530 <mpfr_init2@plt>
   1806c:	sub	x0, x29, #0x68
   18070:	ldr	x1, [sp, #144]
   18074:	bl	5530 <mpfr_init2@plt>
   18078:	sub	x0, x29, #0x88
   1807c:	ldr	x1, [sp, #144]
   18080:	bl	5530 <mpfr_init2@plt>
   18084:	sub	x0, x29, #0xa8
   18088:	ldr	x1, [sp, #144]
   1808c:	bl	5530 <mpfr_init2@plt>
   18090:	sub	x0, x29, #0xc8
   18094:	ldr	x1, [sp, #144]
   18098:	bl	5530 <mpfr_init2@plt>
   1809c:	sub	x0, x29, #0xe8
   180a0:	ldr	x1, [sp, #144]
   180a4:	bl	5530 <mpfr_init2@plt>
   180a8:	ldr	w8, [sp, #248]
   180ac:	mov	w9, #0x1                   	// #1
   180b0:	add	w8, w8, #0x1
   180b4:	str	w8, [sp, #248]
   180b8:	stur	w9, [x29, #-244]
   180bc:	ldr	w8, [sp, #248]
   180c0:	cmp	w8, #0x2
   180c4:	b.gt	180dc <mpc_sin_cos@@Base+0x368>
   180c8:	ldur	x0, [x29, #-240]
   180cc:	bl	4de0 <mpc_ceil_log2@plt>
   180d0:	add	x8, x0, #0x5
   180d4:	str	x8, [sp, #136]
   180d8:	b	180ec <mpc_sin_cos@@Base+0x378>
   180dc:	ldur	x8, [x29, #-240]
   180e0:	mov	x9, #0x2                   	// #2
   180e4:	sdiv	x8, x8, x9
   180e8:	str	x8, [sp, #136]
   180ec:	ldr	x8, [sp, #136]
   180f0:	ldur	x9, [x29, #-240]
   180f4:	add	x8, x9, x8
   180f8:	stur	x8, [x29, #-240]
   180fc:	ldur	x1, [x29, #-240]
   18100:	sub	x8, x29, #0x48
   18104:	mov	x0, x8
   18108:	str	x8, [sp, #128]
   1810c:	bl	4d40 <mpfr_set_prec@plt>
   18110:	ldur	x1, [x29, #-240]
   18114:	sub	x8, x29, #0x68
   18118:	mov	x0, x8
   1811c:	str	x8, [sp, #120]
   18120:	bl	4d40 <mpfr_set_prec@plt>
   18124:	ldur	x1, [x29, #-240]
   18128:	sub	x8, x29, #0x88
   1812c:	mov	x0, x8
   18130:	str	x8, [sp, #112]
   18134:	bl	4d40 <mpfr_set_prec@plt>
   18138:	ldur	x1, [x29, #-240]
   1813c:	sub	x8, x29, #0xa8
   18140:	mov	x0, x8
   18144:	str	x8, [sp, #104]
   18148:	bl	4d40 <mpfr_set_prec@plt>
   1814c:	ldur	x1, [x29, #-240]
   18150:	sub	x0, x29, #0xc8
   18154:	bl	4d40 <mpfr_set_prec@plt>
   18158:	ldur	x1, [x29, #-240]
   1815c:	sub	x0, x29, #0xe8
   18160:	bl	4d40 <mpfr_set_prec@plt>
   18164:	ldur	x2, [x29, #-32]
   18168:	ldr	x0, [sp, #128]
   1816c:	ldr	x1, [sp, #120]
   18170:	mov	w10, wzr
   18174:	mov	w3, w10
   18178:	str	w10, [sp, #100]
   1817c:	bl	5620 <mpfr_sin_cos@plt>
   18180:	ldur	x8, [x29, #-32]
   18184:	add	x2, x8, #0x20
   18188:	ldr	x8, [sp, #112]
   1818c:	mov	x0, x8
   18190:	ldr	x1, [sp, #104]
   18194:	ldr	w3, [sp, #100]
   18198:	bl	4cb0 <mpfr_sinh_cosh@plt>
   1819c:	ldur	x8, [x29, #-16]
   181a0:	cbz	x8, 182c0 <mpc_sin_cos@@Base+0x54c>
   181a4:	sub	x8, x29, #0xc8
   181a8:	mov	x0, x8
   181ac:	sub	x1, x29, #0x48
   181b0:	sub	x2, x29, #0xa8
   181b4:	mov	w9, wzr
   181b8:	mov	w3, w9
   181bc:	str	x8, [sp, #88]
   181c0:	bl	4c50 <mpfr_mul@plt>
   181c4:	ldr	x8, [sp, #88]
   181c8:	mov	x0, x8
   181cc:	bl	55c0 <mpfr_number_p@plt>
   181d0:	mov	w9, #0x1                   	// #1
   181d4:	str	w9, [sp, #84]
   181d8:	cbz	w0, 18220 <mpc_sin_cos@@Base+0x4ac>
   181dc:	ldur	x8, [x29, #-240]
   181e0:	subs	x1, x8, #0x2
   181e4:	ldur	x8, [x29, #-16]
   181e8:	ldr	x8, [x8]
   181ec:	ldur	w9, [x29, #-36]
   181f0:	mov	w10, wzr
   181f4:	tst	w9, #0xf
   181f8:	cset	w9, eq  // eq = none
   181fc:	and	w9, w9, #0x1
   18200:	add	x4, x8, w9, sxtw
   18204:	sub	x0, x29, #0xc8
   18208:	mov	w2, w10
   1820c:	mov	w3, #0x1                   	// #1
   18210:	bl	5540 <mpfr_can_round@plt>
   18214:	cmp	w0, #0x0
   18218:	cset	w9, ne  // ne = any
   1821c:	str	w9, [sp, #84]
   18220:	ldr	w8, [sp, #84]
   18224:	and	w8, w8, #0x1
   18228:	stur	w8, [x29, #-244]
   1822c:	ldur	w8, [x29, #-244]
   18230:	cbz	w8, 182c0 <mpc_sin_cos@@Base+0x54c>
   18234:	sub	x8, x29, #0xe8
   18238:	mov	x0, x8
   1823c:	sub	x1, x29, #0x68
   18240:	sub	x2, x29, #0x88
   18244:	mov	w9, wzr
   18248:	mov	w3, w9
   1824c:	str	x8, [sp, #72]
   18250:	bl	4c50 <mpfr_mul@plt>
   18254:	ldr	x8, [sp, #72]
   18258:	mov	x0, x8
   1825c:	bl	55c0 <mpfr_number_p@plt>
   18260:	mov	w9, #0x1                   	// #1
   18264:	str	w9, [sp, #68]
   18268:	cbz	w0, 182b4 <mpc_sin_cos@@Base+0x540>
   1826c:	ldur	x8, [x29, #-240]
   18270:	subs	x1, x8, #0x2
   18274:	ldur	x8, [x29, #-16]
   18278:	ldr	x8, [x8, #32]
   1827c:	ldur	w9, [x29, #-36]
   18280:	asr	w9, w9, #4
   18284:	mov	w10, wzr
   18288:	cmp	w9, #0x0
   1828c:	cset	w9, eq  // eq = none
   18290:	and	w9, w9, #0x1
   18294:	add	x4, x8, w9, sxtw
   18298:	sub	x0, x29, #0xe8
   1829c:	mov	w2, w10
   182a0:	mov	w3, #0x1                   	// #1
   182a4:	bl	5540 <mpfr_can_round@plt>
   182a8:	cmp	w0, #0x0
   182ac:	cset	w9, ne  // ne = any
   182b0:	str	w9, [sp, #68]
   182b4:	ldr	w8, [sp, #68]
   182b8:	and	w8, w8, #0x1
   182bc:	stur	w8, [x29, #-244]
   182c0:	ldur	x8, [x29, #-24]
   182c4:	cbz	x8, 18404 <mpc_sin_cos@@Base+0x690>
   182c8:	ldur	w8, [x29, #-244]
   182cc:	cbz	w8, 18404 <mpc_sin_cos@@Base+0x690>
   182d0:	sub	x8, x29, #0x68
   182d4:	mov	x0, x8
   182d8:	mov	x1, x8
   182dc:	sub	x2, x29, #0xa8
   182e0:	mov	w9, wzr
   182e4:	mov	w3, w9
   182e8:	str	x8, [sp, #56]
   182ec:	bl	4c50 <mpfr_mul@plt>
   182f0:	ldr	x8, [sp, #56]
   182f4:	mov	x0, x8
   182f8:	bl	55c0 <mpfr_number_p@plt>
   182fc:	mov	w9, #0x1                   	// #1
   18300:	str	w9, [sp, #52]
   18304:	cbz	w0, 1834c <mpc_sin_cos@@Base+0x5d8>
   18308:	ldur	x8, [x29, #-240]
   1830c:	subs	x1, x8, #0x2
   18310:	ldur	x8, [x29, #-24]
   18314:	ldr	x8, [x8]
   18318:	ldur	w9, [x29, #-40]
   1831c:	mov	w10, wzr
   18320:	tst	w9, #0xf
   18324:	cset	w9, eq  // eq = none
   18328:	and	w9, w9, #0x1
   1832c:	add	x4, x8, w9, sxtw
   18330:	sub	x0, x29, #0x68
   18334:	mov	w2, w10
   18338:	mov	w3, #0x1                   	// #1
   1833c:	bl	5540 <mpfr_can_round@plt>
   18340:	cmp	w0, #0x0
   18344:	cset	w9, ne  // ne = any
   18348:	str	w9, [sp, #52]
   1834c:	ldr	w8, [sp, #52]
   18350:	and	w8, w8, #0x1
   18354:	stur	w8, [x29, #-244]
   18358:	ldur	w8, [x29, #-244]
   1835c:	cbz	w8, 18404 <mpc_sin_cos@@Base+0x690>
   18360:	sub	x8, x29, #0x48
   18364:	mov	x0, x8
   18368:	mov	x1, x8
   1836c:	sub	x2, x29, #0x88
   18370:	mov	w9, wzr
   18374:	mov	w3, w9
   18378:	str	x8, [sp, #40]
   1837c:	str	w9, [sp, #36]
   18380:	bl	4c50 <mpfr_mul@plt>
   18384:	ldr	x8, [sp, #40]
   18388:	mov	x0, x8
   1838c:	mov	x1, x8
   18390:	ldr	w2, [sp, #36]
   18394:	bl	4c60 <mpfr_neg@plt>
   18398:	ldr	x8, [sp, #40]
   1839c:	mov	x0, x8
   183a0:	bl	55c0 <mpfr_number_p@plt>
   183a4:	mov	w9, #0x1                   	// #1
   183a8:	str	w9, [sp, #32]
   183ac:	cbz	w0, 183f8 <mpc_sin_cos@@Base+0x684>
   183b0:	ldur	x8, [x29, #-240]
   183b4:	subs	x1, x8, #0x2
   183b8:	ldur	x8, [x29, #-24]
   183bc:	ldr	x8, [x8, #32]
   183c0:	ldur	w9, [x29, #-40]
   183c4:	asr	w9, w9, #4
   183c8:	mov	w10, wzr
   183cc:	cmp	w9, #0x0
   183d0:	cset	w9, eq  // eq = none
   183d4:	and	w9, w9, #0x1
   183d8:	add	x4, x8, w9, sxtw
   183dc:	sub	x0, x29, #0x48
   183e0:	mov	w2, w10
   183e4:	mov	w3, #0x1                   	// #1
   183e8:	bl	5540 <mpfr_can_round@plt>
   183ec:	cmp	w0, #0x0
   183f0:	cset	w9, ne  // ne = any
   183f4:	str	w9, [sp, #32]
   183f8:	ldr	w8, [sp, #32]
   183fc:	and	w8, w8, #0x1
   18400:	stur	w8, [x29, #-244]
   18404:	ldur	w8, [x29, #-244]
   18408:	cbz	w8, 180a8 <mpc_sin_cos@@Base+0x334>
   1840c:	ldur	x8, [x29, #-16]
   18410:	cbz	x8, 18520 <mpc_sin_cos@@Base+0x7ac>
   18414:	ldur	x0, [x29, #-16]
   18418:	ldur	w8, [x29, #-36]
   1841c:	and	w2, w8, #0xf
   18420:	sub	x1, x29, #0xc8
   18424:	ldur	w3, [x29, #-192]
   18428:	bl	52d0 <mpfr_set4@plt>
   1842c:	stur	w0, [x29, #-248]
   18430:	ldur	x9, [x29, #-184]
   18434:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18438:	cmp	x9, x10
   1843c:	b.ne	18454 <mpc_sin_cos@@Base+0x6e0>  // b.any
   18440:	ldur	x0, [x29, #-16]
   18444:	ldur	w8, [x29, #-36]
   18448:	and	w1, w8, #0xf
   1844c:	bl	4eb0 <mpc_fix_inf@plt>
   18450:	stur	w0, [x29, #-248]
   18454:	ldur	x8, [x29, #-16]
   18458:	add	x0, x8, #0x20
   1845c:	ldur	w9, [x29, #-36]
   18460:	asr	w2, w9, #4
   18464:	sub	x1, x29, #0xe8
   18468:	ldur	w3, [x29, #-224]
   1846c:	bl	52d0 <mpfr_set4@plt>
   18470:	stur	w0, [x29, #-252]
   18474:	ldur	x8, [x29, #-216]
   18478:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1847c:	cmp	x8, x10
   18480:	b.ne	1849c <mpc_sin_cos@@Base+0x728>  // b.any
   18484:	ldur	x8, [x29, #-16]
   18488:	add	x0, x8, #0x20
   1848c:	ldur	w9, [x29, #-36]
   18490:	asr	w1, w9, #4
   18494:	bl	4eb0 <mpc_fix_inf@plt>
   18498:	stur	w0, [x29, #-252]
   1849c:	ldur	w8, [x29, #-248]
   184a0:	cmp	w8, #0x0
   184a4:	cset	w8, ge  // ge = tcont
   184a8:	tbnz	w8, #0, 184b8 <mpc_sin_cos@@Base+0x744>
   184ac:	mov	w8, #0x2                   	// #2
   184b0:	str	w8, [sp, #28]
   184b4:	b	184d0 <mpc_sin_cos@@Base+0x75c>
   184b8:	ldur	w8, [x29, #-248]
   184bc:	mov	w9, wzr
   184c0:	mov	w10, #0x1                   	// #1
   184c4:	cmp	w8, #0x0
   184c8:	csel	w8, w9, w10, eq  // eq = none
   184cc:	str	w8, [sp, #28]
   184d0:	ldr	w8, [sp, #28]
   184d4:	ldur	w9, [x29, #-252]
   184d8:	cmp	w9, #0x0
   184dc:	cset	w9, ge  // ge = tcont
   184e0:	str	w8, [sp, #24]
   184e4:	tbnz	w9, #0, 184f4 <mpc_sin_cos@@Base+0x780>
   184e8:	mov	w8, #0x2                   	// #2
   184ec:	str	w8, [sp, #20]
   184f0:	b	1850c <mpc_sin_cos@@Base+0x798>
   184f4:	ldur	w8, [x29, #-252]
   184f8:	mov	w9, wzr
   184fc:	mov	w10, #0x1                   	// #1
   18500:	cmp	w8, #0x0
   18504:	csel	w8, w9, w10, eq  // eq = none
   18508:	str	w8, [sp, #20]
   1850c:	ldr	w8, [sp, #20]
   18510:	ldr	w9, [sp, #24]
   18514:	orr	w8, w9, w8, lsl #2
   18518:	str	w8, [sp, #256]
   1851c:	b	18524 <mpc_sin_cos@@Base+0x7b0>
   18520:	str	wzr, [sp, #256]
   18524:	ldur	x8, [x29, #-24]
   18528:	cbz	x8, 18638 <mpc_sin_cos@@Base+0x8c4>
   1852c:	ldur	x0, [x29, #-24]
   18530:	ldur	w8, [x29, #-40]
   18534:	and	w2, w8, #0xf
   18538:	sub	x1, x29, #0x68
   1853c:	ldur	w3, [x29, #-96]
   18540:	bl	52d0 <mpfr_set4@plt>
   18544:	stur	w0, [x29, #-248]
   18548:	ldur	x9, [x29, #-88]
   1854c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18550:	cmp	x9, x10
   18554:	b.ne	1856c <mpc_sin_cos@@Base+0x7f8>  // b.any
   18558:	ldur	x0, [x29, #-24]
   1855c:	ldur	w8, [x29, #-40]
   18560:	and	w1, w8, #0xf
   18564:	bl	4eb0 <mpc_fix_inf@plt>
   18568:	stur	w0, [x29, #-248]
   1856c:	ldur	x8, [x29, #-24]
   18570:	add	x0, x8, #0x20
   18574:	ldur	w9, [x29, #-40]
   18578:	asr	w2, w9, #4
   1857c:	sub	x1, x29, #0x48
   18580:	ldur	w3, [x29, #-64]
   18584:	bl	52d0 <mpfr_set4@plt>
   18588:	stur	w0, [x29, #-252]
   1858c:	ldur	x8, [x29, #-56]
   18590:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18594:	cmp	x8, x10
   18598:	b.ne	185b4 <mpc_sin_cos@@Base+0x840>  // b.any
   1859c:	ldur	x8, [x29, #-24]
   185a0:	add	x0, x8, #0x20
   185a4:	ldur	w9, [x29, #-40]
   185a8:	asr	w1, w9, #4
   185ac:	bl	4eb0 <mpc_fix_inf@plt>
   185b0:	stur	w0, [x29, #-252]
   185b4:	ldur	w8, [x29, #-248]
   185b8:	cmp	w8, #0x0
   185bc:	cset	w8, ge  // ge = tcont
   185c0:	tbnz	w8, #0, 185d0 <mpc_sin_cos@@Base+0x85c>
   185c4:	mov	w8, #0x2                   	// #2
   185c8:	str	w8, [sp, #16]
   185cc:	b	185e8 <mpc_sin_cos@@Base+0x874>
   185d0:	ldur	w8, [x29, #-248]
   185d4:	mov	w9, wzr
   185d8:	mov	w10, #0x1                   	// #1
   185dc:	cmp	w8, #0x0
   185e0:	csel	w8, w9, w10, eq  // eq = none
   185e4:	str	w8, [sp, #16]
   185e8:	ldr	w8, [sp, #16]
   185ec:	ldur	w9, [x29, #-252]
   185f0:	cmp	w9, #0x0
   185f4:	cset	w9, ge  // ge = tcont
   185f8:	str	w8, [sp, #12]
   185fc:	tbnz	w9, #0, 1860c <mpc_sin_cos@@Base+0x898>
   18600:	mov	w8, #0x2                   	// #2
   18604:	str	w8, [sp, #8]
   18608:	b	18624 <mpc_sin_cos@@Base+0x8b0>
   1860c:	ldur	w8, [x29, #-252]
   18610:	mov	w9, wzr
   18614:	mov	w10, #0x1                   	// #1
   18618:	cmp	w8, #0x0
   1861c:	csel	w8, w9, w10, eq  // eq = none
   18620:	str	w8, [sp, #8]
   18624:	ldr	w8, [sp, #8]
   18628:	ldr	w9, [sp, #12]
   1862c:	orr	w8, w9, w8, lsl #2
   18630:	str	w8, [sp, #252]
   18634:	b	1863c <mpc_sin_cos@@Base+0x8c8>
   18638:	str	wzr, [sp, #252]
   1863c:	sub	x0, x29, #0x48
   18640:	bl	4e30 <mpfr_clear@plt>
   18644:	sub	x0, x29, #0x68
   18648:	bl	4e30 <mpfr_clear@plt>
   1864c:	sub	x0, x29, #0x88
   18650:	bl	4e30 <mpfr_clear@plt>
   18654:	sub	x0, x29, #0xa8
   18658:	bl	4e30 <mpfr_clear@plt>
   1865c:	sub	x0, x29, #0xc8
   18660:	bl	4e30 <mpfr_clear@plt>
   18664:	sub	x0, x29, #0xe8
   18668:	bl	4e30 <mpfr_clear@plt>
   1866c:	ldr	w8, [sp, #256]
   18670:	ldr	w9, [sp, #252]
   18674:	orr	w8, w8, w9, lsl #4
   18678:	stur	w8, [x29, #-4]
   1867c:	ldur	w0, [x29, #-4]
   18680:	add	sp, sp, #0x200
   18684:	ldr	x28, [sp, #16]
   18688:	ldp	x29, x30, [sp], #32
   1868c:	ret
   18690:	sub	sp, sp, #0x180
   18694:	stp	x29, x30, [sp, #352]
   18698:	str	x28, [sp, #368]
   1869c:	add	x29, sp, #0x160
   186a0:	stur	x0, [x29, #-8]
   186a4:	stur	x1, [x29, #-16]
   186a8:	stur	x2, [x29, #-24]
   186ac:	stur	w3, [x29, #-28]
   186b0:	stur	w4, [x29, #-32]
   186b4:	ldur	x8, [x29, #-8]
   186b8:	ldur	x9, [x29, #-24]
   186bc:	mov	w10, #0x1                   	// #1
   186c0:	cmp	x8, x9
   186c4:	str	w10, [sp, #108]
   186c8:	b.eq	186e0 <mpc_sin_cos@@Base+0x96c>  // b.none
   186cc:	ldur	x8, [x29, #-16]
   186d0:	ldur	x9, [x29, #-24]
   186d4:	cmp	x8, x9
   186d8:	cset	w10, eq  // eq = none
   186dc:	str	w10, [sp, #108]
   186e0:	ldr	w8, [sp, #108]
   186e4:	and	w8, w8, #0x1
   186e8:	stur	w8, [x29, #-36]
   186ec:	ldur	w8, [x29, #-36]
   186f0:	cbz	w8, 1872c <mpc_sin_cos@@Base+0x9b8>
   186f4:	ldur	x8, [x29, #-24]
   186f8:	ldr	x1, [x8]
   186fc:	ldur	x8, [x29, #-24]
   18700:	ldr	x2, [x8, #32]
   18704:	sub	x8, x29, #0x68
   18708:	mov	x0, x8
   1870c:	str	x8, [sp, #96]
   18710:	bl	54c0 <mpc_init3@plt>
   18714:	ldur	x1, [x29, #-24]
   18718:	ldr	x0, [sp, #96]
   1871c:	mov	w9, wzr
   18720:	mov	w2, w9
   18724:	bl	5680 <mpc_set@plt>
   18728:	b	1873c <mpc_sin_cos@@Base+0x9c8>
   1872c:	ldur	x1, [x29, #-24]
   18730:	sub	x0, x29, #0x68
   18734:	mov	x2, #0x40                  	// #64
   18738:	bl	4a70 <memcpy@plt>
   1873c:	ldur	x8, [x29, #-8]
   18740:	cbz	x8, 188e8 <mpc_sin_cos@@Base+0xb74>
   18744:	ldur	x8, [x29, #-88]
   18748:	mov	x9, #0x2                   	// #2
   1874c:	movk	x9, #0x8000, lsl #48
   18750:	cmp	x8, x9
   18754:	b.eq	1876c <mpc_sin_cos@@Base+0x9f8>  // b.none
   18758:	ldur	x8, [x29, #-56]
   1875c:	mov	x9, #0x2                   	// #2
   18760:	movk	x9, #0x8000, lsl #48
   18764:	cmp	x8, x9
   18768:	b.ne	187dc <mpc_sin_cos@@Base+0xa68>  // b.any
   1876c:	ldur	x0, [x29, #-8]
   18770:	ldur	w2, [x29, #-28]
   18774:	sub	x1, x29, #0x68
   18778:	bl	5680 <mpc_set@plt>
   1877c:	ldur	x8, [x29, #-56]
   18780:	mov	x9, #0x2                   	// #2
   18784:	movk	x9, #0x8000, lsl #48
   18788:	cmp	x8, x9
   1878c:	b.ne	187ac <mpc_sin_cos@@Base+0xa38>  // b.any
   18790:	ldur	x8, [x29, #-88]
   18794:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   18798:	cmp	x8, x9
   1879c:	b.eq	187a8 <mpc_sin_cos@@Base+0xa34>  // b.none
   187a0:	ldur	x0, [x29, #-8]
   187a4:	bl	4b20 <mpfr_set_nan@plt>
   187a8:	b	187d8 <mpc_sin_cos@@Base+0xa64>
   187ac:	ldur	x8, [x29, #-56]
   187b0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   187b4:	cmp	x8, x9
   187b8:	b.eq	187d8 <mpc_sin_cos@@Base+0xa64>  // b.none
   187bc:	ldur	x8, [x29, #-56]
   187c0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   187c4:	cmp	x8, x9
   187c8:	b.eq	187d8 <mpc_sin_cos@@Base+0xa64>  // b.none
   187cc:	ldur	x8, [x29, #-8]
   187d0:	add	x0, x8, #0x20
   187d4:	bl	4b20 <mpfr_set_nan@plt>
   187d8:	b	188e8 <mpc_sin_cos@@Base+0xb74>
   187dc:	ldur	x8, [x29, #-88]
   187e0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   187e4:	cmp	x8, x9
   187e8:	b.ne	18848 <mpc_sin_cos@@Base+0xad4>  // b.any
   187ec:	ldur	x0, [x29, #-8]
   187f0:	bl	4b20 <mpfr_set_nan@plt>
   187f4:	ldur	x8, [x29, #-56]
   187f8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   187fc:	cmp	x8, x9
   18800:	b.eq	18824 <mpc_sin_cos@@Base+0xab0>  // b.none
   18804:	ldur	x8, [x29, #-56]
   18808:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1880c:	cmp	x8, x9
   18810:	b.eq	18824 <mpc_sin_cos@@Base+0xab0>  // b.none
   18814:	ldur	x8, [x29, #-8]
   18818:	add	x0, x8, #0x20
   1881c:	bl	4b20 <mpfr_set_nan@plt>
   18820:	b	18844 <mpc_sin_cos@@Base+0xad0>
   18824:	ldur	x8, [x29, #-8]
   18828:	add	x0, x8, #0x20
   1882c:	sub	x8, x29, #0x68
   18830:	add	x1, x8, #0x20
   18834:	ldur	w9, [x29, #-28]
   18838:	asr	w2, w9, #4
   1883c:	ldur	w3, [x29, #-64]
   18840:	bl	52d0 <mpfr_set4@plt>
   18844:	b	188e8 <mpc_sin_cos@@Base+0xb74>
   18848:	ldur	x8, [x29, #-88]
   1884c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   18850:	cmp	x8, x9
   18854:	b.ne	1886c <mpc_sin_cos@@Base+0xaf8>  // b.any
   18858:	ldur	x0, [x29, #-8]
   1885c:	ldur	w2, [x29, #-28]
   18860:	sub	x1, x29, #0x68
   18864:	bl	5680 <mpc_set@plt>
   18868:	b	188e8 <mpc_sin_cos@@Base+0xb74>
   1886c:	sub	x8, x29, #0x88
   18870:	mov	x0, x8
   18874:	mov	x9, #0x2                   	// #2
   18878:	mov	x1, x9
   1887c:	str	x8, [sp, #88]
   18880:	str	x9, [sp, #80]
   18884:	bl	5530 <mpfr_init2@plt>
   18888:	sub	x8, x29, #0xa8
   1888c:	mov	x0, x8
   18890:	ldr	x1, [sp, #80]
   18894:	str	x8, [sp, #72]
   18898:	bl	5530 <mpfr_init2@plt>
   1889c:	ldr	x0, [sp, #88]
   188a0:	ldr	x1, [sp, #72]
   188a4:	sub	x2, x29, #0x68
   188a8:	mov	w3, #0x1                   	// #1
   188ac:	bl	5620 <mpfr_sin_cos@plt>
   188b0:	ldur	x8, [x29, #-8]
   188b4:	ldur	w1, [x29, #-128]
   188b8:	mov	x0, x8
   188bc:	bl	5220 <mpfr_set_inf@plt>
   188c0:	ldur	x8, [x29, #-8]
   188c4:	add	x0, x8, #0x20
   188c8:	ldur	w10, [x29, #-160]
   188cc:	ldur	w11, [x29, #-64]
   188d0:	mul	w1, w10, w11
   188d4:	bl	5220 <mpfr_set_inf@plt>
   188d8:	ldr	x0, [sp, #88]
   188dc:	bl	4e30 <mpfr_clear@plt>
   188e0:	ldr	x0, [sp, #72]
   188e4:	bl	4e30 <mpfr_clear@plt>
   188e8:	ldur	x8, [x29, #-16]
   188ec:	cbz	x8, 18c80 <mpc_sin_cos@@Base+0xf0c>
   188f0:	ldur	x8, [x29, #-88]
   188f4:	mov	x9, #0x2                   	// #2
   188f8:	movk	x9, #0x8000, lsl #48
   188fc:	cmp	x8, x9
   18900:	b.ne	18970 <mpc_sin_cos@@Base+0xbfc>  // b.any
   18904:	ldur	x8, [x29, #-56]
   18908:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1890c:	cmp	x8, x9
   18910:	b.ne	18924 <mpc_sin_cos@@Base+0xbb0>  // b.any
   18914:	ldur	x0, [x29, #-16]
   18918:	mov	w1, #0x1                   	// #1
   1891c:	bl	5220 <mpfr_set_inf@plt>
   18920:	b	1892c <mpc_sin_cos@@Base+0xbb8>
   18924:	ldur	x0, [x29, #-16]
   18928:	bl	4b20 <mpfr_set_nan@plt>
   1892c:	ldur	x8, [x29, #-56]
   18930:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   18934:	cmp	x8, x9
   18938:	b.ne	18960 <mpc_sin_cos@@Base+0xbec>  // b.any
   1893c:	ldur	x8, [x29, #-16]
   18940:	add	x0, x8, #0x20
   18944:	sub	x8, x29, #0x68
   18948:	add	x1, x8, #0x20
   1894c:	ldur	w9, [x29, #-32]
   18950:	asr	w2, w9, #4
   18954:	ldur	w3, [x29, #-64]
   18958:	bl	52d0 <mpfr_set4@plt>
   1895c:	b	1896c <mpc_sin_cos@@Base+0xbf8>
   18960:	ldur	x8, [x29, #-16]
   18964:	add	x0, x8, #0x20
   18968:	bl	4b20 <mpfr_set_nan@plt>
   1896c:	b	18c80 <mpc_sin_cos@@Base+0xf0c>
   18970:	ldur	x8, [x29, #-56]
   18974:	mov	x9, #0x2                   	// #2
   18978:	movk	x9, #0x8000, lsl #48
   1897c:	cmp	x8, x9
   18980:	b.ne	189cc <mpc_sin_cos@@Base+0xc58>  // b.any
   18984:	ldur	x8, [x29, #-88]
   18988:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1898c:	cmp	x8, x9
   18990:	b.ne	189b4 <mpc_sin_cos@@Base+0xc40>  // b.any
   18994:	ldur	x8, [x29, #-16]
   18998:	add	x0, x8, #0x20
   1899c:	ldur	w9, [x29, #-32]
   189a0:	asr	w2, w9, #4
   189a4:	sub	x1, x29, #0x68
   189a8:	ldur	w3, [x29, #-96]
   189ac:	bl	52d0 <mpfr_set4@plt>
   189b0:	b	189c0 <mpc_sin_cos@@Base+0xc4c>
   189b4:	ldur	x8, [x29, #-16]
   189b8:	add	x0, x8, #0x20
   189bc:	bl	4b20 <mpfr_set_nan@plt>
   189c0:	ldur	x0, [x29, #-16]
   189c4:	bl	4b20 <mpfr_set_nan@plt>
   189c8:	b	18c80 <mpc_sin_cos@@Base+0xf0c>
   189cc:	ldur	x8, [x29, #-88]
   189d0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   189d4:	cmp	x8, x9
   189d8:	b.ne	18a98 <mpc_sin_cos@@Base+0xd24>  // b.any
   189dc:	ldur	w8, [x29, #-96]
   189e0:	cmp	w8, #0x0
   189e4:	cset	w8, lt  // lt = tstop
   189e8:	and	w8, w8, #0x1
   189ec:	ldur	w9, [x29, #-64]
   189f0:	cmp	w9, #0x0
   189f4:	cset	w9, lt  // lt = tstop
   189f8:	and	w9, w9, #0x1
   189fc:	cmp	w8, w9
   18a00:	cset	w8, eq  // eq = none
   18a04:	and	w8, w8, #0x1
   18a08:	stur	w8, [x29, #-172]
   18a0c:	ldur	x10, [x29, #-56]
   18a10:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   18a14:	cmp	x10, x11
   18a18:	b.ne	18a3c <mpc_sin_cos@@Base+0xcc8>  // b.any
   18a1c:	ldur	x0, [x29, #-16]
   18a20:	ldur	w8, [x29, #-172]
   18a24:	mov	w9, #0xffffffff            	// #-1
   18a28:	mov	w10, #0x1                   	// #1
   18a2c:	cmp	w8, #0x0
   18a30:	csel	w1, w9, w10, ne  // ne = any
   18a34:	bl	5220 <mpfr_set_inf@plt>
   18a38:	b	18a44 <mpc_sin_cos@@Base+0xcd0>
   18a3c:	ldur	x0, [x29, #-16]
   18a40:	bl	4b20 <mpfr_set_nan@plt>
   18a44:	ldur	x8, [x29, #-56]
   18a48:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   18a4c:	cmp	x8, x9
   18a50:	b.ne	18a88 <mpc_sin_cos@@Base+0xd14>  // b.any
   18a54:	ldur	x8, [x29, #-16]
   18a58:	add	x0, x8, #0x20
   18a5c:	sub	x8, x29, #0x68
   18a60:	add	x1, x8, #0x20
   18a64:	ldur	w9, [x29, #-32]
   18a68:	asr	w2, w9, #4
   18a6c:	ldur	w9, [x29, #-172]
   18a70:	mov	w10, #0xffffffff            	// #-1
   18a74:	mov	w11, #0x1                   	// #1
   18a78:	cmp	w9, #0x0
   18a7c:	csel	w3, w10, w11, ne  // ne = any
   18a80:	bl	52d0 <mpfr_set4@plt>
   18a84:	b	18a94 <mpc_sin_cos@@Base+0xd20>
   18a88:	ldur	x8, [x29, #-16]
   18a8c:	add	x0, x8, #0x20
   18a90:	bl	4b20 <mpfr_set_nan@plt>
   18a94:	b	18c80 <mpc_sin_cos@@Base+0xf0c>
   18a98:	ldur	x8, [x29, #-88]
   18a9c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   18aa0:	cmp	x8, x9
   18aa4:	b.ne	18b1c <mpc_sin_cos@@Base+0xda8>  // b.any
   18aa8:	sub	x1, x29, #0x68
   18aac:	ldur	w8, [x29, #-96]
   18ab0:	cmp	w8, #0x0
   18ab4:	cset	w8, lt  // lt = tstop
   18ab8:	and	w8, w8, #0x1
   18abc:	ldur	w9, [x29, #-64]
   18ac0:	cmp	w9, #0x0
   18ac4:	cset	w9, lt  // lt = tstop
   18ac8:	and	w9, w9, #0x1
   18acc:	cmp	w8, w9
   18ad0:	cset	w8, eq  // eq = none
   18ad4:	and	w8, w8, #0x1
   18ad8:	str	w8, [sp, #176]
   18adc:	ldur	x10, [x29, #-16]
   18ae0:	add	x0, x10, #0x20
   18ae4:	ldur	w8, [x29, #-32]
   18ae8:	asr	w2, w8, #4
   18aec:	ldr	w8, [sp, #176]
   18af0:	mov	w9, #0xffffffff            	// #-1
   18af4:	mov	w11, #0x1                   	// #1
   18af8:	cmp	w8, #0x0
   18afc:	csel	w3, w9, w11, ne  // ne = any
   18b00:	str	w11, [sp, #68]
   18b04:	bl	52d0 <mpfr_set4@plt>
   18b08:	ldur	x10, [x29, #-16]
   18b0c:	mov	x0, x10
   18b10:	ldr	w1, [sp, #68]
   18b14:	bl	5220 <mpfr_set_inf@plt>
   18b18:	b	18c80 <mpc_sin_cos@@Base+0xf0c>
   18b1c:	add	x8, sp, #0x70
   18b20:	mov	x0, x8
   18b24:	mov	x9, #0x2                   	// #2
   18b28:	mov	x1, x9
   18b2c:	str	x8, [sp, #56]
   18b30:	str	x9, [sp, #48]
   18b34:	bl	5530 <mpfr_init2@plt>
   18b38:	add	x8, sp, #0x90
   18b3c:	mov	x0, x8
   18b40:	ldr	x1, [sp, #48]
   18b44:	str	x8, [sp, #40]
   18b48:	bl	5530 <mpfr_init2@plt>
   18b4c:	ldr	x0, [sp, #40]
   18b50:	ldr	x1, [sp, #56]
   18b54:	sub	x2, x29, #0x68
   18b58:	mov	w10, wzr
   18b5c:	mov	w3, w10
   18b60:	bl	5620 <mpfr_sin_cos@plt>
   18b64:	ldur	x8, [x29, #-16]
   18b68:	ldr	x9, [sp, #128]
   18b6c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   18b70:	cmp	x9, x11
   18b74:	str	x8, [sp, #32]
   18b78:	b.ge	18ba4 <mpc_sin_cos@@Base+0xe30>  // b.tcont
   18b7c:	ldr	x8, [sp, #128]
   18b80:	mov	x9, #0x2                   	// #2
   18b84:	movk	x9, #0x8000, lsl #48
   18b88:	cmp	x8, x9
   18b8c:	b.ne	18b98 <mpc_sin_cos@@Base+0xe24>  // b.any
   18b90:	bl	4be0 <mpfr_set_erangeflag@plt>
   18b94:	b	18b98 <mpc_sin_cos@@Base+0xe24>
   18b98:	mov	w8, wzr
   18b9c:	str	w8, [sp, #28]
   18ba0:	b	18bac <mpc_sin_cos@@Base+0xe38>
   18ba4:	ldr	w8, [sp, #120]
   18ba8:	str	w8, [sp, #28]
   18bac:	ldr	w8, [sp, #28]
   18bb0:	ldr	x0, [sp, #32]
   18bb4:	mov	w1, w8
   18bb8:	bl	5220 <mpfr_set_inf@plt>
   18bbc:	ldur	x9, [x29, #-16]
   18bc0:	add	x0, x9, #0x20
   18bc4:	ldur	x9, [x29, #-56]
   18bc8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18bcc:	cmp	x9, x10
   18bd0:	str	x0, [sp, #16]
   18bd4:	b.ge	18c00 <mpc_sin_cos@@Base+0xe8c>  // b.tcont
   18bd8:	ldur	x8, [x29, #-56]
   18bdc:	mov	x9, #0x2                   	// #2
   18be0:	movk	x9, #0x8000, lsl #48
   18be4:	cmp	x8, x9
   18be8:	b.ne	18bf4 <mpc_sin_cos@@Base+0xe80>  // b.any
   18bec:	bl	4be0 <mpfr_set_erangeflag@plt>
   18bf0:	b	18bf4 <mpc_sin_cos@@Base+0xe80>
   18bf4:	mov	w8, wzr
   18bf8:	str	w8, [sp, #12]
   18bfc:	b	18c08 <mpc_sin_cos@@Base+0xe94>
   18c00:	ldur	w8, [x29, #-64]
   18c04:	str	w8, [sp, #12]
   18c08:	ldr	w8, [sp, #12]
   18c0c:	ldr	x9, [sp, #160]
   18c10:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18c14:	cmp	x9, x10
   18c18:	str	w8, [sp, #8]
   18c1c:	b.ge	18c48 <mpc_sin_cos@@Base+0xed4>  // b.tcont
   18c20:	ldr	x8, [sp, #160]
   18c24:	mov	x9, #0x2                   	// #2
   18c28:	movk	x9, #0x8000, lsl #48
   18c2c:	cmp	x8, x9
   18c30:	b.ne	18c3c <mpc_sin_cos@@Base+0xec8>  // b.any
   18c34:	bl	4be0 <mpfr_set_erangeflag@plt>
   18c38:	b	18c3c <mpc_sin_cos@@Base+0xec8>
   18c3c:	mov	w8, wzr
   18c40:	str	w8, [sp, #4]
   18c44:	b	18c50 <mpc_sin_cos@@Base+0xedc>
   18c48:	ldr	w8, [sp, #152]
   18c4c:	str	w8, [sp, #4]
   18c50:	ldr	w8, [sp, #4]
   18c54:	mov	w9, #0xffffffff            	// #-1
   18c58:	mov	w10, #0x1                   	// #1
   18c5c:	ldr	w11, [sp, #8]
   18c60:	cmp	w11, w8
   18c64:	csel	w1, w9, w10, eq  // eq = none
   18c68:	ldr	x0, [sp, #16]
   18c6c:	bl	5220 <mpfr_set_inf@plt>
   18c70:	add	x0, sp, #0x90
   18c74:	bl	4e30 <mpfr_clear@plt>
   18c78:	add	x0, sp, #0x70
   18c7c:	bl	4e30 <mpfr_clear@plt>
   18c80:	ldur	w8, [x29, #-36]
   18c84:	cbz	w8, 18c90 <mpc_sin_cos@@Base+0xf1c>
   18c88:	sub	x0, x29, #0x68
   18c8c:	bl	4af0 <mpc_clear@plt>
   18c90:	mov	w8, wzr
   18c94:	mov	w0, w8
   18c98:	ldr	x28, [sp, #368]
   18c9c:	ldp	x29, x30, [sp, #352]
   18ca0:	add	sp, sp, #0x180
   18ca4:	ret
   18ca8:	sub	sp, sp, #0xc0
   18cac:	stp	x29, x30, [sp, #176]
   18cb0:	add	x29, sp, #0xb0
   18cb4:	stur	x0, [x29, #-8]
   18cb8:	stur	x1, [x29, #-16]
   18cbc:	stur	x2, [x29, #-24]
   18cc0:	stur	w3, [x29, #-28]
   18cc4:	stur	w4, [x29, #-32]
   18cc8:	stur	wzr, [x29, #-36]
   18ccc:	stur	wzr, [x29, #-40]
   18cd0:	ldur	x8, [x29, #-24]
   18cd4:	ldr	w9, [x8, #40]
   18cd8:	cmp	w9, #0x0
   18cdc:	cset	w9, lt  // lt = tstop
   18ce0:	and	w9, w9, #0x1
   18ce4:	str	w9, [sp, #60]
   18ce8:	ldur	x8, [x29, #-8]
   18cec:	cbz	x8, 18d04 <mpc_sin_cos@@Base+0xf90>
   18cf0:	ldur	x8, [x29, #-8]
   18cf4:	ldr	x1, [x8]
   18cf8:	sub	x0, x29, #0x48
   18cfc:	bl	5530 <mpfr_init2@plt>
   18d00:	b	18d10 <mpc_sin_cos@@Base+0xf9c>
   18d04:	sub	x0, x29, #0x48
   18d08:	mov	x1, #0x2                   	// #2
   18d0c:	bl	5530 <mpfr_init2@plt>
   18d10:	ldur	x8, [x29, #-16]
   18d14:	cbz	x8, 18d2c <mpc_sin_cos@@Base+0xfb8>
   18d18:	ldur	x8, [x29, #-16]
   18d1c:	ldr	x1, [x8]
   18d20:	add	x0, sp, #0x48
   18d24:	bl	5530 <mpfr_init2@plt>
   18d28:	b	18d38 <mpc_sin_cos@@Base+0xfc4>
   18d2c:	add	x0, sp, #0x48
   18d30:	mov	x1, #0x2                   	// #2
   18d34:	bl	5530 <mpfr_init2@plt>
   18d38:	ldur	x1, [x29, #-24]
   18d3c:	ldur	w8, [x29, #-28]
   18d40:	and	w2, w8, #0xf
   18d44:	sub	x0, x29, #0x48
   18d48:	bl	5180 <mpfr_sin@plt>
   18d4c:	str	w0, [sp, #68]
   18d50:	ldur	x1, [x29, #-24]
   18d54:	ldur	w8, [x29, #-32]
   18d58:	and	w2, w8, #0xf
   18d5c:	add	x0, sp, #0x48
   18d60:	bl	5150 <mpfr_cos@plt>
   18d64:	str	w0, [sp, #64]
   18d68:	ldur	x9, [x29, #-8]
   18d6c:	cbz	x9, 18e00 <mpc_sin_cos@@Base+0x108c>
   18d70:	ldur	x0, [x29, #-8]
   18d74:	sub	x1, x29, #0x48
   18d78:	ldur	w3, [x29, #-64]
   18d7c:	mov	w8, wzr
   18d80:	mov	w2, w8
   18d84:	bl	52d0 <mpfr_set4@plt>
   18d88:	ldr	w8, [sp, #68]
   18d8c:	stur	w8, [x29, #-36]
   18d90:	ldur	x9, [x29, #-8]
   18d94:	add	x9, x9, #0x20
   18d98:	ldr	w8, [sp, #60]
   18d9c:	str	x9, [sp, #48]
   18da0:	cbz	w8, 18dbc <mpc_sin_cos@@Base+0x1048>
   18da4:	ldr	w8, [sp, #80]
   18da8:	cmp	w8, #0x0
   18dac:	cset	w8, ge  // ge = tcont
   18db0:	mov	w9, #0x1                   	// #1
   18db4:	str	w9, [sp, #44]
   18db8:	tbnz	w8, #0, 18de4 <mpc_sin_cos@@Base+0x1070>
   18dbc:	ldr	w8, [sp, #60]
   18dc0:	mov	w9, #0x0                   	// #0
   18dc4:	str	w9, [sp, #40]
   18dc8:	cbnz	w8, 18ddc <mpc_sin_cos@@Base+0x1068>
   18dcc:	ldr	w8, [sp, #80]
   18dd0:	cmp	w8, #0x0
   18dd4:	cset	w8, lt  // lt = tstop
   18dd8:	str	w8, [sp, #40]
   18ddc:	ldr	w8, [sp, #40]
   18de0:	str	w8, [sp, #44]
   18de4:	ldr	w8, [sp, #44]
   18de8:	mov	w9, #0x1                   	// #1
   18dec:	mov	w10, #0xffffffff            	// #-1
   18df0:	tst	w8, #0x1
   18df4:	csel	w1, w10, w9, ne  // ne = any
   18df8:	ldr	x0, [sp, #48]
   18dfc:	bl	4dd0 <mpfr_set_zero@plt>
   18e00:	ldur	x8, [x29, #-16]
   18e04:	cbz	x8, 18e9c <mpc_sin_cos@@Base+0x1128>
   18e08:	ldur	x0, [x29, #-16]
   18e0c:	add	x1, sp, #0x48
   18e10:	ldr	w3, [sp, #80]
   18e14:	mov	w8, wzr
   18e18:	mov	w2, w8
   18e1c:	bl	52d0 <mpfr_set4@plt>
   18e20:	ldr	w8, [sp, #64]
   18e24:	stur	w8, [x29, #-40]
   18e28:	ldur	x9, [x29, #-16]
   18e2c:	add	x9, x9, #0x20
   18e30:	ldr	w8, [sp, #60]
   18e34:	str	x9, [sp, #32]
   18e38:	cbz	w8, 18e54 <mpc_sin_cos@@Base+0x10e0>
   18e3c:	ldur	w8, [x29, #-64]
   18e40:	cmp	w8, #0x0
   18e44:	cset	w8, lt  // lt = tstop
   18e48:	mov	w9, #0x1                   	// #1
   18e4c:	str	w9, [sp, #28]
   18e50:	tbnz	w8, #0, 18e80 <mpc_sin_cos@@Base+0x110c>
   18e54:	ldr	w8, [sp, #60]
   18e58:	mov	w9, #0x0                   	// #0
   18e5c:	str	w9, [sp, #24]
   18e60:	cbnz	w8, 18e78 <mpc_sin_cos@@Base+0x1104>
   18e64:	ldur	w8, [x29, #-64]
   18e68:	cmp	w8, #0x0
   18e6c:	cset	w8, lt  // lt = tstop
   18e70:	eor	w8, w8, #0x1
   18e74:	str	w8, [sp, #24]
   18e78:	ldr	w8, [sp, #24]
   18e7c:	str	w8, [sp, #28]
   18e80:	ldr	w8, [sp, #28]
   18e84:	mov	w9, #0x1                   	// #1
   18e88:	mov	w10, #0xffffffff            	// #-1
   18e8c:	tst	w8, #0x1
   18e90:	csel	w1, w10, w9, ne  // ne = any
   18e94:	ldr	x0, [sp, #32]
   18e98:	bl	4dd0 <mpfr_set_zero@plt>
   18e9c:	sub	x0, x29, #0x48
   18ea0:	bl	4e30 <mpfr_clear@plt>
   18ea4:	add	x0, sp, #0x48
   18ea8:	bl	4e30 <mpfr_clear@plt>
   18eac:	ldur	w8, [x29, #-36]
   18eb0:	cmp	w8, #0x0
   18eb4:	cset	w8, ge  // ge = tcont
   18eb8:	tbnz	w8, #0, 18ec8 <mpc_sin_cos@@Base+0x1154>
   18ebc:	mov	w8, #0x2                   	// #2
   18ec0:	str	w8, [sp, #20]
   18ec4:	b	18ee0 <mpc_sin_cos@@Base+0x116c>
   18ec8:	ldur	w8, [x29, #-36]
   18ecc:	mov	w9, wzr
   18ed0:	mov	w10, #0x1                   	// #1
   18ed4:	cmp	w8, #0x0
   18ed8:	csel	w8, w9, w10, eq  // eq = none
   18edc:	str	w8, [sp, #20]
   18ee0:	ldr	w8, [sp, #20]
   18ee4:	ldur	w9, [x29, #-40]
   18ee8:	cmp	w9, #0x0
   18eec:	cset	w9, ge  // ge = tcont
   18ef0:	str	w8, [sp, #16]
   18ef4:	tbnz	w9, #0, 18f04 <mpc_sin_cos@@Base+0x1190>
   18ef8:	mov	w8, #0x2                   	// #2
   18efc:	str	w8, [sp, #12]
   18f00:	b	18f1c <mpc_sin_cos@@Base+0x11a8>
   18f04:	ldur	w8, [x29, #-40]
   18f08:	mov	w9, wzr
   18f0c:	mov	w10, #0x1                   	// #1
   18f10:	cmp	w8, #0x0
   18f14:	csel	w8, w9, w10, eq  // eq = none
   18f18:	str	w8, [sp, #12]
   18f1c:	ldr	w8, [sp, #12]
   18f20:	ldr	w9, [sp, #16]
   18f24:	orr	w0, w9, w8, lsl #4
   18f28:	ldp	x29, x30, [sp, #176]
   18f2c:	add	sp, sp, #0xc0
   18f30:	ret
   18f34:	sub	sp, sp, #0xb0
   18f38:	stp	x29, x30, [sp, #160]
   18f3c:	add	x29, sp, #0xa0
   18f40:	stur	x0, [x29, #-8]
   18f44:	stur	x1, [x29, #-16]
   18f48:	stur	x2, [x29, #-24]
   18f4c:	stur	w3, [x29, #-28]
   18f50:	stur	w4, [x29, #-32]
   18f54:	stur	wzr, [x29, #-36]
   18f58:	stur	wzr, [x29, #-40]
   18f5c:	ldur	x8, [x29, #-8]
   18f60:	ldur	x9, [x29, #-24]
   18f64:	mov	w10, #0x1                   	// #1
   18f68:	cmp	x8, x9
   18f6c:	str	w10, [sp, #32]
   18f70:	b.eq	18f88 <mpc_sin_cos@@Base+0x1214>  // b.none
   18f74:	ldur	x8, [x29, #-16]
   18f78:	ldur	x9, [x29, #-24]
   18f7c:	cmp	x8, x9
   18f80:	cset	w10, eq  // eq = none
   18f84:	str	w10, [sp, #32]
   18f88:	ldr	w8, [sp, #32]
   18f8c:	and	w8, w8, #0x1
   18f90:	stur	w8, [x29, #-44]
   18f94:	ldur	w8, [x29, #-44]
   18f98:	cbz	w8, 18fd4 <mpc_sin_cos@@Base+0x1260>
   18f9c:	ldur	x8, [x29, #-24]
   18fa0:	ldr	x1, [x8]
   18fa4:	ldur	x8, [x29, #-24]
   18fa8:	ldr	x2, [x8, #32]
   18fac:	add	x8, sp, #0x30
   18fb0:	mov	x0, x8
   18fb4:	str	x8, [sp, #24]
   18fb8:	bl	54c0 <mpc_init3@plt>
   18fbc:	ldur	x1, [x29, #-24]
   18fc0:	ldr	x0, [sp, #24]
   18fc4:	mov	w9, wzr
   18fc8:	mov	w2, w9
   18fcc:	bl	5680 <mpc_set@plt>
   18fd0:	b	18fe4 <mpc_sin_cos@@Base+0x1270>
   18fd4:	ldur	x1, [x29, #-24]
   18fd8:	add	x0, sp, #0x30
   18fdc:	mov	x2, #0x40                  	// #64
   18fe0:	bl	4a70 <memcpy@plt>
   18fe4:	ldur	x8, [x29, #-8]
   18fe8:	cbz	x8, 19030 <mpc_sin_cos@@Base+0x12bc>
   18fec:	ldur	x0, [x29, #-8]
   18ff0:	add	x8, sp, #0x30
   18ff4:	ldr	w3, [sp, #56]
   18ff8:	mov	x1, x8
   18ffc:	mov	w9, wzr
   19000:	mov	w2, w9
   19004:	str	x8, [sp, #16]
   19008:	bl	52d0 <mpfr_set4@plt>
   1900c:	ldur	x8, [x29, #-8]
   19010:	add	x8, x8, #0x20
   19014:	ldr	x10, [sp, #16]
   19018:	add	x1, x10, #0x20
   1901c:	ldur	w9, [x29, #-28]
   19020:	asr	w2, w9, #4
   19024:	mov	x0, x8
   19028:	bl	5080 <mpfr_sinh@plt>
   1902c:	stur	w0, [x29, #-36]
   19030:	ldur	x8, [x29, #-16]
   19034:	cbz	x8, 190c0 <mpc_sin_cos@@Base+0x134c>
   19038:	ldur	x0, [x29, #-16]
   1903c:	add	x8, sp, #0x30
   19040:	add	x1, x8, #0x20
   19044:	ldur	w9, [x29, #-32]
   19048:	and	w2, w9, #0xf
   1904c:	bl	4b00 <mpfr_cosh@plt>
   19050:	stur	w0, [x29, #-40]
   19054:	ldur	x8, [x29, #-16]
   19058:	add	x8, x8, #0x20
   1905c:	str	x8, [sp, #40]
   19060:	ldr	x8, [sp, #40]
   19064:	mov	w9, #0x1                   	// #1
   19068:	str	w9, [x8, #8]
   1906c:	ldr	x8, [sp, #40]
   19070:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   19074:	str	x10, [x8, #16]
   19078:	str	wzr, [sp, #36]
   1907c:	ldr	w9, [sp, #56]
   19080:	cmp	w9, #0x0
   19084:	cset	w9, lt  // lt = tstop
   19088:	and	w9, w9, #0x1
   1908c:	ldr	w11, [sp, #88]
   19090:	cmp	w11, #0x0
   19094:	cset	w11, lt  // lt = tstop
   19098:	and	w11, w11, #0x1
   1909c:	cmp	w9, w11
   190a0:	b.ne	190c0 <mpc_sin_cos@@Base+0x134c>  // b.any
   190a4:	ldur	x8, [x29, #-16]
   190a8:	add	x0, x8, #0x20
   190ac:	ldur	x8, [x29, #-16]
   190b0:	add	x1, x8, #0x20
   190b4:	mov	w9, wzr
   190b8:	mov	w2, w9
   190bc:	bl	4c60 <mpfr_neg@plt>
   190c0:	ldur	w8, [x29, #-44]
   190c4:	cbz	w8, 190d0 <mpc_sin_cos@@Base+0x135c>
   190c8:	add	x0, sp, #0x30
   190cc:	bl	4af0 <mpc_clear@plt>
   190d0:	ldur	w8, [x29, #-36]
   190d4:	cmp	w8, #0x0
   190d8:	cset	w8, ge  // ge = tcont
   190dc:	tbnz	w8, #0, 190ec <mpc_sin_cos@@Base+0x1378>
   190e0:	mov	w8, #0x2                   	// #2
   190e4:	str	w8, [sp, #12]
   190e8:	b	19104 <mpc_sin_cos@@Base+0x1390>
   190ec:	ldur	w8, [x29, #-36]
   190f0:	mov	w9, wzr
   190f4:	mov	w10, #0x1                   	// #1
   190f8:	cmp	w8, #0x0
   190fc:	csel	w8, w9, w10, eq  // eq = none
   19100:	str	w8, [sp, #12]
   19104:	ldr	w8, [sp, #12]
   19108:	mov	w9, wzr
   1910c:	orr	w8, w9, w8, lsl #2
   19110:	ldur	w9, [x29, #-40]
   19114:	cmp	w9, #0x0
   19118:	cset	w9, ge  // ge = tcont
   1911c:	str	w8, [sp, #8]
   19120:	tbnz	w9, #0, 19130 <mpc_sin_cos@@Base+0x13bc>
   19124:	mov	w8, #0x2                   	// #2
   19128:	str	w8, [sp, #4]
   1912c:	b	19148 <mpc_sin_cos@@Base+0x13d4>
   19130:	ldur	w8, [x29, #-40]
   19134:	mov	w9, wzr
   19138:	mov	w10, #0x1                   	// #1
   1913c:	cmp	w8, #0x0
   19140:	csel	w8, w9, w10, eq  // eq = none
   19144:	str	w8, [sp, #4]
   19148:	ldr	w8, [sp, #4]
   1914c:	ldr	w9, [sp, #8]
   19150:	orr	w0, w9, w8, lsl #4
   19154:	ldp	x29, x30, [sp, #160]
   19158:	add	sp, sp, #0xb0
   1915c:	ret

0000000000019160 <mpc_sinh@@Base>:
   19160:	sub	sp, sp, #0xe0
   19164:	stp	x29, x30, [sp, #208]
   19168:	add	x29, sp, #0xd0
   1916c:	sub	x8, x29, #0x10
   19170:	sub	x9, x29, #0x60
   19174:	add	x10, sp, #0x30
   19178:	str	x0, [x8, #8]
   1917c:	str	x1, [x8]
   19180:	stur	w2, [x29, #-20]
   19184:	ldr	x11, [x8]
   19188:	ldr	q0, [x11, #32]
   1918c:	stur	q0, [x29, #-96]
   19190:	ldr	q0, [x11, #48]
   19194:	stur	q0, [x29, #-80]
   19198:	ldr	x11, [x8]
   1919c:	ldr	q0, [x11]
   191a0:	stur	q0, [x29, #-64]
   191a4:	ldr	q0, [x11, #16]
   191a8:	stur	q0, [x29, #-48]
   191ac:	ldr	x11, [x8, #8]
   191b0:	ldr	q0, [x11, #32]
   191b4:	str	q0, [sp, #48]
   191b8:	ldr	q0, [x11, #48]
   191bc:	str	q0, [sp, #64]
   191c0:	ldr	x11, [x8, #8]
   191c4:	ldr	q0, [x11]
   191c8:	str	q0, [sp, #80]
   191cc:	ldr	q0, [x11, #16]
   191d0:	str	q0, [sp, #96]
   191d4:	ldur	w12, [x29, #-20]
   191d8:	ldur	w13, [x29, #-20]
   191dc:	and	w13, w13, #0xf
   191e0:	lsl	w13, w13, #4
   191e4:	add	w2, w13, w12, asr #4
   191e8:	mov	x0, x10
   191ec:	mov	x1, x9
   191f0:	str	x8, [sp, #32]
   191f4:	bl	5050 <mpc_sin@plt>
   191f8:	str	w0, [sp, #44]
   191fc:	ldr	x8, [sp, #32]
   19200:	ldr	x9, [x8, #8]
   19204:	ldr	q0, [sp, #80]
   19208:	str	q0, [x9]
   1920c:	ldr	q0, [sp, #96]
   19210:	str	q0, [x9, #16]
   19214:	ldr	x9, [x8, #8]
   19218:	ldr	q0, [sp, #48]
   1921c:	str	q0, [x9, #32]
   19220:	ldr	q0, [sp, #64]
   19224:	str	q0, [x9, #48]
   19228:	ldr	w12, [sp, #44]
   1922c:	asr	w12, w12, #2
   19230:	cmp	w12, #0x2
   19234:	b.ne	19244 <mpc_sinh@@Base+0xe4>  // b.any
   19238:	mov	w8, #0xffffffff            	// #-1
   1923c:	str	w8, [sp, #28]
   19240:	b	19260 <mpc_sinh@@Base+0x100>
   19244:	ldr	w8, [sp, #44]
   19248:	asr	w8, w8, #2
   1924c:	mov	w9, wzr
   19250:	mov	w10, #0x1                   	// #1
   19254:	cmp	w8, #0x0
   19258:	csel	w8, w9, w10, eq  // eq = none
   1925c:	str	w8, [sp, #28]
   19260:	ldr	w8, [sp, #28]
   19264:	cmp	w8, #0x0
   19268:	cset	w8, ge  // ge = tcont
   1926c:	tbnz	w8, #0, 1927c <mpc_sinh@@Base+0x11c>
   19270:	mov	w8, #0x2                   	// #2
   19274:	str	w8, [sp, #24]
   19278:	b	192cc <mpc_sinh@@Base+0x16c>
   1927c:	ldr	w8, [sp, #44]
   19280:	asr	w8, w8, #2
   19284:	cmp	w8, #0x2
   19288:	b.ne	19298 <mpc_sinh@@Base+0x138>  // b.any
   1928c:	mov	w8, #0xffffffff            	// #-1
   19290:	str	w8, [sp, #20]
   19294:	b	192b4 <mpc_sinh@@Base+0x154>
   19298:	ldr	w8, [sp, #44]
   1929c:	asr	w8, w8, #2
   192a0:	mov	w9, wzr
   192a4:	mov	w10, #0x1                   	// #1
   192a8:	cmp	w8, #0x0
   192ac:	csel	w8, w9, w10, eq  // eq = none
   192b0:	str	w8, [sp, #20]
   192b4:	ldr	w8, [sp, #20]
   192b8:	mov	w9, wzr
   192bc:	mov	w10, #0x1                   	// #1
   192c0:	cmp	w8, #0x0
   192c4:	csel	w8, w9, w10, eq  // eq = none
   192c8:	str	w8, [sp, #24]
   192cc:	ldr	w8, [sp, #24]
   192d0:	ldr	w9, [sp, #44]
   192d4:	and	w9, w9, #0x3
   192d8:	cmp	w9, #0x2
   192dc:	str	w8, [sp, #16]
   192e0:	b.ne	192f0 <mpc_sinh@@Base+0x190>  // b.any
   192e4:	mov	w8, #0xffffffff            	// #-1
   192e8:	str	w8, [sp, #12]
   192ec:	b	19308 <mpc_sinh@@Base+0x1a8>
   192f0:	ldr	w8, [sp, #44]
   192f4:	mov	w9, wzr
   192f8:	mov	w10, #0x1                   	// #1
   192fc:	tst	w8, #0x3
   19300:	csel	w8, w9, w10, eq  // eq = none
   19304:	str	w8, [sp, #12]
   19308:	ldr	w8, [sp, #12]
   1930c:	cmp	w8, #0x0
   19310:	cset	w8, ge  // ge = tcont
   19314:	tbnz	w8, #0, 19324 <mpc_sinh@@Base+0x1c4>
   19318:	mov	w8, #0x2                   	// #2
   1931c:	str	w8, [sp, #8]
   19320:	b	19370 <mpc_sinh@@Base+0x210>
   19324:	ldr	w8, [sp, #44]
   19328:	and	w8, w8, #0x3
   1932c:	cmp	w8, #0x2
   19330:	b.ne	19340 <mpc_sinh@@Base+0x1e0>  // b.any
   19334:	mov	w8, #0xffffffff            	// #-1
   19338:	str	w8, [sp, #4]
   1933c:	b	19358 <mpc_sinh@@Base+0x1f8>
   19340:	ldr	w8, [sp, #44]
   19344:	mov	w9, wzr
   19348:	mov	w10, #0x1                   	// #1
   1934c:	tst	w8, #0x3
   19350:	csel	w8, w9, w10, eq  // eq = none
   19354:	str	w8, [sp, #4]
   19358:	ldr	w8, [sp, #4]
   1935c:	mov	w9, wzr
   19360:	mov	w10, #0x1                   	// #1
   19364:	cmp	w8, #0x0
   19368:	csel	w8, w9, w10, eq  // eq = none
   1936c:	str	w8, [sp, #8]
   19370:	ldr	w8, [sp, #8]
   19374:	ldr	w9, [sp, #16]
   19378:	orr	w0, w9, w8, lsl #2
   1937c:	ldp	x29, x30, [sp, #208]
   19380:	add	sp, sp, #0xe0
   19384:	ret

0000000000019388 <mpc_sqr@@Base>:
   19388:	sub	sp, sp, #0x1a0
   1938c:	stp	x29, x30, [sp, #384]
   19390:	str	x28, [sp, #400]
   19394:	add	x29, sp, #0x180
   19398:	sub	x8, x29, #0x60
   1939c:	str	x0, [x8, #80]
   193a0:	str	x1, [x8, #72]
   193a4:	stur	w2, [x29, #-28]
   193a8:	ldr	x0, [x8, #72]
   193ac:	str	x8, [sp, #160]
   193b0:	bl	55c0 <mpfr_number_p@plt>
   193b4:	cbz	w0, 193cc <mpc_sqr@@Base+0x44>
   193b8:	ldr	x8, [sp, #160]
   193bc:	ldr	x9, [x8, #72]
   193c0:	add	x0, x9, #0x20
   193c4:	bl	55c0 <mpfr_number_p@plt>
   193c8:	cbnz	w0, 19554 <mpc_sqr@@Base+0x1cc>
   193cc:	ldr	x8, [sp, #160]
   193d0:	ldr	x9, [x8, #72]
   193d4:	ldr	x9, [x9, #16]
   193d8:	mov	x10, #0x2                   	// #2
   193dc:	movk	x10, #0x8000, lsl #48
   193e0:	cmp	x9, x10
   193e4:	b.eq	19404 <mpc_sqr@@Base+0x7c>  // b.none
   193e8:	ldr	x8, [sp, #160]
   193ec:	ldr	x9, [x8, #72]
   193f0:	ldr	x9, [x9, #48]
   193f4:	mov	x10, #0x2                   	// #2
   193f8:	movk	x10, #0x8000, lsl #48
   193fc:	cmp	x9, x10
   19400:	b.ne	19424 <mpc_sqr@@Base+0x9c>  // b.any
   19404:	ldr	x8, [sp, #160]
   19408:	ldr	x0, [x8, #80]
   1940c:	bl	4b20 <mpfr_set_nan@plt>
   19410:	ldr	x8, [sp, #160]
   19414:	ldr	x9, [x8, #80]
   19418:	add	x0, x9, #0x20
   1941c:	bl	4b20 <mpfr_set_nan@plt>
   19420:	b	1954c <mpc_sqr@@Base+0x1c4>
   19424:	ldr	x8, [sp, #160]
   19428:	ldr	x9, [x8, #72]
   1942c:	ldr	x9, [x9, #16]
   19430:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19434:	cmp	x9, x10
   19438:	b.ne	194ec <mpc_sqr@@Base+0x164>  // b.any
   1943c:	ldr	x8, [sp, #160]
   19440:	ldr	x9, [x8, #72]
   19444:	ldr	x9, [x9, #48]
   19448:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1944c:	cmp	x9, x10
   19450:	b.ne	19488 <mpc_sqr@@Base+0x100>  // b.any
   19454:	ldr	x8, [sp, #160]
   19458:	ldr	x9, [x8, #80]
   1945c:	add	x0, x9, #0x20
   19460:	ldr	x9, [x8, #72]
   19464:	ldr	w10, [x9, #8]
   19468:	ldr	x9, [x8, #72]
   1946c:	ldr	w11, [x9, #40]
   19470:	mul	w1, w10, w11
   19474:	bl	5220 <mpfr_set_inf@plt>
   19478:	ldr	x8, [sp, #160]
   1947c:	ldr	x0, [x8, #80]
   19480:	bl	4b20 <mpfr_set_nan@plt>
   19484:	b	194e8 <mpc_sqr@@Base+0x160>
   19488:	ldr	x8, [sp, #160]
   1948c:	ldr	x9, [x8, #72]
   19490:	ldr	x9, [x9, #48]
   19494:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   19498:	cmp	x9, x10
   1949c:	b.ne	194b4 <mpc_sqr@@Base+0x12c>  // b.any
   194a0:	ldr	x8, [sp, #160]
   194a4:	ldr	x9, [x8, #80]
   194a8:	add	x0, x9, #0x20
   194ac:	bl	4b20 <mpfr_set_nan@plt>
   194b0:	b	194d8 <mpc_sqr@@Base+0x150>
   194b4:	ldr	x8, [sp, #160]
   194b8:	ldr	x9, [x8, #80]
   194bc:	add	x0, x9, #0x20
   194c0:	ldr	x9, [x8, #72]
   194c4:	ldr	w10, [x9, #8]
   194c8:	ldr	x9, [x8, #72]
   194cc:	ldr	w11, [x9, #40]
   194d0:	mul	w1, w10, w11
   194d4:	bl	5220 <mpfr_set_inf@plt>
   194d8:	ldr	x8, [sp, #160]
   194dc:	ldr	x0, [x8, #80]
   194e0:	mov	w1, #0x1                   	// #1
   194e4:	bl	5220 <mpfr_set_inf@plt>
   194e8:	b	1954c <mpc_sqr@@Base+0x1c4>
   194ec:	ldr	x8, [sp, #160]
   194f0:	ldr	x9, [x8, #72]
   194f4:	ldr	x9, [x9, #16]
   194f8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   194fc:	cmp	x9, x10
   19500:	b.ne	19518 <mpc_sqr@@Base+0x190>  // b.any
   19504:	ldr	x8, [sp, #160]
   19508:	ldr	x9, [x8, #80]
   1950c:	add	x0, x9, #0x20
   19510:	bl	4b20 <mpfr_set_nan@plt>
   19514:	b	1953c <mpc_sqr@@Base+0x1b4>
   19518:	ldr	x8, [sp, #160]
   1951c:	ldr	x9, [x8, #80]
   19520:	add	x0, x9, #0x20
   19524:	ldr	x9, [x8, #72]
   19528:	ldr	w10, [x9, #8]
   1952c:	ldr	x9, [x8, #72]
   19530:	ldr	w11, [x9, #40]
   19534:	mul	w1, w10, w11
   19538:	bl	5220 <mpfr_set_inf@plt>
   1953c:	ldr	x8, [sp, #160]
   19540:	ldr	x0, [x8, #80]
   19544:	mov	w1, #0xffffffff            	// #-1
   19548:	bl	5220 <mpfr_set_inf@plt>
   1954c:	stur	wzr, [x29, #-4]
   19550:	b	19dcc <mpc_sqr@@Base+0xa44>
   19554:	ldr	x8, [sp, #160]
   19558:	ldr	x9, [x8, #80]
   1955c:	ldr	x9, [x9]
   19560:	ldr	x10, [x8, #80]
   19564:	ldr	x10, [x10, #32]
   19568:	cmp	x9, x10
   1956c:	b.le	19584 <mpc_sqr@@Base+0x1fc>
   19570:	ldr	x8, [sp, #160]
   19574:	ldr	x9, [x8, #80]
   19578:	ldr	x9, [x9]
   1957c:	str	x9, [sp, #152]
   19580:	b	19594 <mpc_sqr@@Base+0x20c>
   19584:	ldr	x8, [sp, #160]
   19588:	ldr	x9, [x8, #80]
   1958c:	ldr	x9, [x9, #32]
   19590:	str	x9, [sp, #152]
   19594:	ldr	x8, [sp, #152]
   19598:	stur	x8, [x29, #-136]
   1959c:	ldr	x8, [sp, #160]
   195a0:	ldr	x9, [x8, #72]
   195a4:	ldr	x9, [x9, #48]
   195a8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   195ac:	cmp	x9, x10
   195b0:	b.ne	196e0 <mpc_sqr@@Base+0x358>  // b.any
   195b4:	ldr	x8, [sp, #160]
   195b8:	ldr	x9, [x8, #72]
   195bc:	ldr	w10, [x9, #8]
   195c0:	cmp	w10, #0x0
   195c4:	cset	w10, lt  // lt = tstop
   195c8:	and	w10, w10, #0x1
   195cc:	ldr	x9, [x8, #72]
   195d0:	ldr	w11, [x9, #40]
   195d4:	cmp	w11, #0x0
   195d8:	cset	w11, lt  // lt = tstop
   195dc:	and	w11, w11, #0x1
   195e0:	cmp	w10, w11
   195e4:	cset	w10, eq  // eq = none
   195e8:	and	w10, w10, #0x1
   195ec:	stur	w10, [x29, #-168]
   195f0:	ldr	x0, [x8, #80]
   195f4:	ldr	x1, [x8, #72]
   195f8:	ldur	w10, [x29, #-28]
   195fc:	and	w2, w10, #0xf
   19600:	bl	5110 <mpfr_sqr@plt>
   19604:	stur	w0, [x29, #-140]
   19608:	ldr	x8, [sp, #160]
   1960c:	ldr	x9, [x8, #80]
   19610:	add	x9, x9, #0x20
   19614:	stur	x9, [x29, #-176]
   19618:	ldur	x9, [x29, #-176]
   1961c:	mov	w10, #0x1                   	// #1
   19620:	str	w10, [x9, #8]
   19624:	ldur	x9, [x29, #-176]
   19628:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   1962c:	str	x12, [x9, #16]
   19630:	stur	wzr, [x29, #-180]
   19634:	ldur	w10, [x29, #-180]
   19638:	stur	w10, [x29, #-144]
   1963c:	ldur	w10, [x29, #-168]
   19640:	cbnz	w10, 1965c <mpc_sqr@@Base+0x2d4>
   19644:	ldr	x8, [sp, #160]
   19648:	ldr	x0, [x8, #80]
   1964c:	ldr	x1, [x8, #80]
   19650:	mov	w9, wzr
   19654:	mov	w2, w9
   19658:	bl	5060 <mpc_conj@plt>
   1965c:	ldur	w8, [x29, #-140]
   19660:	cmp	w8, #0x0
   19664:	cset	w8, ge  // ge = tcont
   19668:	tbnz	w8, #0, 19678 <mpc_sqr@@Base+0x2f0>
   1966c:	mov	w8, #0x2                   	// #2
   19670:	str	w8, [sp, #148]
   19674:	b	19690 <mpc_sqr@@Base+0x308>
   19678:	ldur	w8, [x29, #-140]
   1967c:	mov	w9, wzr
   19680:	mov	w10, #0x1                   	// #1
   19684:	cmp	w8, #0x0
   19688:	csel	w8, w9, w10, eq  // eq = none
   1968c:	str	w8, [sp, #148]
   19690:	ldr	w8, [sp, #148]
   19694:	ldur	w9, [x29, #-144]
   19698:	cmp	w9, #0x0
   1969c:	cset	w9, ge  // ge = tcont
   196a0:	str	w8, [sp, #144]
   196a4:	tbnz	w9, #0, 196b4 <mpc_sqr@@Base+0x32c>
   196a8:	mov	w8, #0x2                   	// #2
   196ac:	str	w8, [sp, #140]
   196b0:	b	196cc <mpc_sqr@@Base+0x344>
   196b4:	ldur	w8, [x29, #-144]
   196b8:	mov	w9, wzr
   196bc:	mov	w10, #0x1                   	// #1
   196c0:	cmp	w8, #0x0
   196c4:	csel	w8, w9, w10, eq  // eq = none
   196c8:	str	w8, [sp, #140]
   196cc:	ldr	w8, [sp, #140]
   196d0:	ldr	w9, [sp, #144]
   196d4:	orr	w8, w9, w8, lsl #2
   196d8:	stur	w8, [x29, #-4]
   196dc:	b	19dcc <mpc_sqr@@Base+0xa44>
   196e0:	ldr	x8, [sp, #160]
   196e4:	ldr	x9, [x8, #72]
   196e8:	ldr	x9, [x9, #16]
   196ec:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   196f0:	cmp	x9, x10
   196f4:	b.ne	198a0 <mpc_sqr@@Base+0x518>  // b.any
   196f8:	ldr	x8, [sp, #160]
   196fc:	ldr	x9, [x8, #72]
   19700:	ldr	w10, [x9, #8]
   19704:	cmp	w10, #0x0
   19708:	cset	w10, lt  // lt = tstop
   1970c:	and	w10, w10, #0x1
   19710:	ldr	x9, [x8, #72]
   19714:	ldr	w11, [x9, #40]
   19718:	cmp	w11, #0x0
   1971c:	cset	w11, lt  // lt = tstop
   19720:	and	w11, w11, #0x1
   19724:	cmp	w10, w11
   19728:	cset	w10, eq  // eq = none
   1972c:	and	w10, w10, #0x1
   19730:	stur	w10, [x29, #-184]
   19734:	ldr	x0, [x8, #80]
   19738:	ldr	x9, [x8, #72]
   1973c:	add	x1, x9, #0x20
   19740:	ldur	w10, [x29, #-28]
   19744:	and	w10, w10, #0xf
   19748:	cmp	w10, #0x2
   1974c:	str	x0, [sp, #128]
   19750:	str	x1, [sp, #120]
   19754:	b.ne	19764 <mpc_sqr@@Base+0x3dc>  // b.any
   19758:	mov	w8, #0x3                   	// #3
   1975c:	str	w8, [sp, #116]
   19760:	b	19794 <mpc_sqr@@Base+0x40c>
   19764:	ldur	w8, [x29, #-28]
   19768:	and	w8, w8, #0xf
   1976c:	cmp	w8, #0x3
   19770:	b.ne	19780 <mpc_sqr@@Base+0x3f8>  // b.any
   19774:	mov	w8, #0x2                   	// #2
   19778:	str	w8, [sp, #112]
   1977c:	b	1978c <mpc_sqr@@Base+0x404>
   19780:	ldur	w8, [x29, #-28]
   19784:	and	w8, w8, #0xf
   19788:	str	w8, [sp, #112]
   1978c:	ldr	w8, [sp, #112]
   19790:	str	w8, [sp, #116]
   19794:	ldr	w8, [sp, #116]
   19798:	ldr	x0, [sp, #128]
   1979c:	ldr	x1, [sp, #120]
   197a0:	mov	w2, w8
   197a4:	bl	5110 <mpfr_sqr@plt>
   197a8:	mov	w8, wzr
   197ac:	subs	w9, w8, w0
   197b0:	stur	w9, [x29, #-140]
   197b4:	ldr	x10, [sp, #160]
   197b8:	ldr	x0, [x10, #80]
   197bc:	ldr	x1, [x10, #80]
   197c0:	mov	w2, w8
   197c4:	bl	4c60 <mpfr_neg@plt>
   197c8:	ldr	x10, [sp, #160]
   197cc:	ldr	x11, [x10, #80]
   197d0:	add	x11, x11, #0x20
   197d4:	str	x11, [sp, #192]
   197d8:	ldr	x11, [sp, #192]
   197dc:	mov	w8, #0x1                   	// #1
   197e0:	str	w8, [x11, #8]
   197e4:	ldr	x11, [sp, #192]
   197e8:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   197ec:	str	x12, [x11, #16]
   197f0:	str	wzr, [sp, #188]
   197f4:	ldr	w8, [sp, #188]
   197f8:	stur	w8, [x29, #-144]
   197fc:	ldur	w8, [x29, #-184]
   19800:	cbnz	w8, 1981c <mpc_sqr@@Base+0x494>
   19804:	ldr	x8, [sp, #160]
   19808:	ldr	x0, [x8, #80]
   1980c:	ldr	x1, [x8, #80]
   19810:	mov	w9, wzr
   19814:	mov	w2, w9
   19818:	bl	5060 <mpc_conj@plt>
   1981c:	ldur	w8, [x29, #-140]
   19820:	cmp	w8, #0x0
   19824:	cset	w8, ge  // ge = tcont
   19828:	tbnz	w8, #0, 19838 <mpc_sqr@@Base+0x4b0>
   1982c:	mov	w8, #0x2                   	// #2
   19830:	str	w8, [sp, #108]
   19834:	b	19850 <mpc_sqr@@Base+0x4c8>
   19838:	ldur	w8, [x29, #-140]
   1983c:	mov	w9, wzr
   19840:	mov	w10, #0x1                   	// #1
   19844:	cmp	w8, #0x0
   19848:	csel	w8, w9, w10, eq  // eq = none
   1984c:	str	w8, [sp, #108]
   19850:	ldr	w8, [sp, #108]
   19854:	ldur	w9, [x29, #-144]
   19858:	cmp	w9, #0x0
   1985c:	cset	w9, ge  // ge = tcont
   19860:	str	w8, [sp, #104]
   19864:	tbnz	w9, #0, 19874 <mpc_sqr@@Base+0x4ec>
   19868:	mov	w8, #0x2                   	// #2
   1986c:	str	w8, [sp, #100]
   19870:	b	1988c <mpc_sqr@@Base+0x504>
   19874:	ldur	w8, [x29, #-144]
   19878:	mov	w9, wzr
   1987c:	mov	w10, #0x1                   	// #1
   19880:	cmp	w8, #0x0
   19884:	csel	w8, w9, w10, eq  // eq = none
   19888:	str	w8, [sp, #100]
   1988c:	ldr	w8, [sp, #100]
   19890:	ldr	w9, [sp, #104]
   19894:	orr	w8, w9, w8, lsl #2
   19898:	stur	w8, [x29, #-4]
   1989c:	b	19dcc <mpc_sqr@@Base+0xa44>
   198a0:	ldr	x8, [sp, #160]
   198a4:	ldr	x9, [x8, #80]
   198a8:	ldr	x10, [x8, #72]
   198ac:	cmp	x9, x10
   198b0:	b.ne	198f4 <mpc_sqr@@Base+0x56c>  // b.any
   198b4:	ldr	x8, [sp, #160]
   198b8:	ldr	x9, [x8, #72]
   198bc:	ldr	x1, [x9]
   198c0:	sub	x9, x29, #0x80
   198c4:	mov	x0, x9
   198c8:	str	x9, [sp, #88]
   198cc:	bl	5530 <mpfr_init2@plt>
   198d0:	ldr	x8, [sp, #160]
   198d4:	ldr	x1, [x8, #72]
   198d8:	ldr	x9, [x8, #72]
   198dc:	ldr	w3, [x9, #8]
   198e0:	ldr	x0, [sp, #88]
   198e4:	mov	w10, wzr
   198e8:	mov	w2, w10
   198ec:	bl	52d0 <mpfr_set4@plt>
   198f0:	b	1990c <mpc_sqr@@Base+0x584>
   198f4:	ldr	x8, [sp, #160]
   198f8:	ldr	x9, [x8, #72]
   198fc:	ldr	q0, [x9]
   19900:	stur	q0, [x29, #-128]
   19904:	ldr	q0, [x9, #16]
   19908:	stur	q0, [x29, #-112]
   1990c:	ldr	x8, [sp, #160]
   19910:	ldr	x9, [x8, #72]
   19914:	ldr	x9, [x9, #16]
   19918:	ldr	x10, [x8, #72]
   1991c:	ldr	x10, [x10, #48]
   19920:	subs	x9, x9, x10
   19924:	cmp	x9, #0x0
   19928:	cset	w11, lt  // lt = tstop
   1992c:	tbnz	w11, #0, 19950 <mpc_sqr@@Base+0x5c8>
   19930:	ldr	x8, [sp, #160]
   19934:	ldr	x9, [x8, #72]
   19938:	ldr	x9, [x9, #16]
   1993c:	ldr	x10, [x8, #72]
   19940:	ldr	x10, [x10, #48]
   19944:	subs	x9, x9, x10
   19948:	str	x9, [sp, #80]
   1994c:	b	19974 <mpc_sqr@@Base+0x5ec>
   19950:	ldr	x8, [sp, #160]
   19954:	ldr	x9, [x8, #72]
   19958:	ldr	x9, [x9, #16]
   1995c:	ldr	x10, [x8, #72]
   19960:	ldr	x10, [x10, #48]
   19964:	subs	x9, x9, x10
   19968:	mov	x10, xzr
   1996c:	subs	x9, x10, x9
   19970:	str	x9, [sp, #80]
   19974:	ldr	x8, [sp, #80]
   19978:	ldr	x9, [sp, #160]
   1997c:	ldr	x10, [x9, #72]
   19980:	ldr	x10, [x10]
   19984:	ldr	x11, [x9, #72]
   19988:	ldr	x11, [x11, #32]
   1998c:	cmp	x10, x11
   19990:	str	x8, [sp, #72]
   19994:	b.le	199ac <mpc_sqr@@Base+0x624>
   19998:	ldr	x8, [sp, #160]
   1999c:	ldr	x9, [x8, #72]
   199a0:	ldr	x9, [x9]
   199a4:	str	x9, [sp, #64]
   199a8:	b	199bc <mpc_sqr@@Base+0x634>
   199ac:	ldr	x8, [sp, #160]
   199b0:	ldr	x9, [x8, #72]
   199b4:	ldr	x9, [x9, #32]
   199b8:	str	x9, [sp, #64]
   199bc:	ldr	x8, [sp, #64]
   199c0:	mov	x9, #0x2                   	// #2
   199c4:	sdiv	x8, x8, x9
   199c8:	ldr	x9, [sp, #72]
   199cc:	cmp	x9, x8
   199d0:	b.le	199fc <mpc_sqr@@Base+0x674>
   199d4:	ldr	x8, [sp, #160]
   199d8:	ldr	x0, [x8, #80]
   199dc:	ldr	x9, [x8, #72]
   199e0:	add	x2, x9, #0x20
   199e4:	ldur	w10, [x29, #-28]
   199e8:	and	w3, w10, #0xf
   199ec:	sub	x1, x29, #0x80
   199f0:	bl	19de0 <mpc_sqr@@Base+0xa58>
   199f4:	stur	w0, [x29, #-140]
   199f8:	b	19cb8 <mpc_sqr@@Base+0x930>
   199fc:	sub	x0, x29, #0x40
   19a00:	bl	4b80 <mpfr_init@plt>
   19a04:	sub	x0, x29, #0x60
   19a08:	bl	4b80 <mpfr_init@plt>
   19a0c:	bl	5160 <mpfr_get_emin@plt>
   19a10:	stur	x0, [x29, #-160]
   19a14:	ldur	x0, [x29, #-136]
   19a18:	bl	4de0 <mpc_ceil_log2@plt>
   19a1c:	add	x8, x0, #0x5
   19a20:	ldur	x9, [x29, #-136]
   19a24:	add	x8, x9, x8
   19a28:	stur	x8, [x29, #-136]
   19a2c:	ldur	x1, [x29, #-136]
   19a30:	sub	x8, x29, #0x40
   19a34:	mov	x0, x8
   19a38:	str	x8, [sp, #56]
   19a3c:	bl	4d40 <mpfr_set_prec@plt>
   19a40:	ldur	x1, [x29, #-136]
   19a44:	sub	x8, x29, #0x60
   19a48:	mov	x0, x8
   19a4c:	str	x8, [sp, #48]
   19a50:	bl	4d40 <mpfr_set_prec@plt>
   19a54:	ldr	x8, [sp, #160]
   19a58:	ldr	x9, [x8, #72]
   19a5c:	add	x2, x9, #0x20
   19a60:	ldr	x0, [sp, #56]
   19a64:	sub	x9, x29, #0x80
   19a68:	mov	x1, x9
   19a6c:	mov	w10, #0x4                   	// #4
   19a70:	mov	w3, w10
   19a74:	str	x9, [sp, #40]
   19a78:	str	w10, [sp, #36]
   19a7c:	bl	4f50 <mpfr_add@plt>
   19a80:	ldr	x8, [sp, #160]
   19a84:	ldr	x9, [x8, #72]
   19a88:	add	x2, x9, #0x20
   19a8c:	ldr	x9, [sp, #48]
   19a90:	str	w0, [sp, #32]
   19a94:	mov	x0, x9
   19a98:	ldr	x1, [sp, #40]
   19a9c:	ldr	w3, [sp, #36]
   19aa0:	bl	4b40 <mpfr_sub@plt>
   19aa4:	ldr	w10, [sp, #32]
   19aa8:	orr	w11, w10, w0
   19aac:	stur	w11, [x29, #-148]
   19ab0:	ldr	x8, [sp, #160]
   19ab4:	ldr	x9, [x8, #48]
   19ab8:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   19abc:	cmp	x9, x12
   19ac0:	b.ge	19af0 <mpc_sqr@@Base+0x768>  // b.tcont
   19ac4:	ldr	x8, [sp, #160]
   19ac8:	ldr	x9, [x8, #48]
   19acc:	mov	x10, #0x2                   	// #2
   19ad0:	movk	x10, #0x8000, lsl #48
   19ad4:	cmp	x9, x10
   19ad8:	b.ne	19ae4 <mpc_sqr@@Base+0x75c>  // b.any
   19adc:	bl	4be0 <mpfr_set_erangeflag@plt>
   19ae0:	b	19ae4 <mpc_sqr@@Base+0x75c>
   19ae4:	mov	w8, wzr
   19ae8:	str	w8, [sp, #28]
   19aec:	b	19af8 <mpc_sqr@@Base+0x770>
   19af0:	ldur	w8, [x29, #-56]
   19af4:	str	w8, [sp, #28]
   19af8:	ldr	w8, [sp, #28]
   19afc:	cbz	w8, 19b50 <mpc_sqr@@Base+0x7c8>
   19b00:	ldr	x8, [sp, #160]
   19b04:	ldr	x9, [x8, #16]
   19b08:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19b0c:	cmp	x9, x10
   19b10:	b.ge	19b40 <mpc_sqr@@Base+0x7b8>  // b.tcont
   19b14:	ldr	x8, [sp, #160]
   19b18:	ldr	x9, [x8, #16]
   19b1c:	mov	x10, #0x2                   	// #2
   19b20:	movk	x10, #0x8000, lsl #48
   19b24:	cmp	x9, x10
   19b28:	b.ne	19b34 <mpc_sqr@@Base+0x7ac>  // b.any
   19b2c:	bl	4be0 <mpfr_set_erangeflag@plt>
   19b30:	b	19b34 <mpc_sqr@@Base+0x7ac>
   19b34:	mov	w8, wzr
   19b38:	str	w8, [sp, #24]
   19b3c:	b	19b48 <mpc_sqr@@Base+0x7c0>
   19b40:	ldur	w8, [x29, #-88]
   19b44:	str	w8, [sp, #24]
   19b48:	ldr	w8, [sp, #24]
   19b4c:	cbnz	w8, 19b84 <mpc_sqr@@Base+0x7fc>
   19b50:	ldr	x8, [sp, #160]
   19b54:	ldr	x9, [x8, #80]
   19b58:	str	x9, [sp, #176]
   19b5c:	ldr	x9, [sp, #176]
   19b60:	mov	w10, #0x1                   	// #1
   19b64:	str	w10, [x9, #8]
   19b68:	ldr	x9, [sp, #176]
   19b6c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   19b70:	str	x11, [x9, #16]
   19b74:	str	wzr, [sp, #172]
   19b78:	stur	wzr, [x29, #-140]
   19b7c:	stur	w10, [x29, #-32]
   19b80:	b	19c94 <mpc_sqr@@Base+0x90c>
   19b84:	sub	x8, x29, #0x40
   19b88:	mov	x0, x8
   19b8c:	mov	x1, x8
   19b90:	sub	x2, x29, #0x60
   19b94:	mov	w3, #0x4                   	// #4
   19b98:	bl	4c50 <mpfr_mul@plt>
   19b9c:	ldur	w9, [x29, #-148]
   19ba0:	orr	w9, w9, w0
   19ba4:	stur	w9, [x29, #-148]
   19ba8:	ldr	x8, [sp, #160]
   19bac:	ldr	x10, [x8, #48]
   19bb0:	ldur	x11, [x29, #-160]
   19bb4:	cmp	x10, x11
   19bb8:	b.eq	19bd0 <mpc_sqr@@Base+0x848>  // b.none
   19bbc:	ldr	x8, [sp, #160]
   19bc0:	ldr	x9, [x8, #48]
   19bc4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19bc8:	cmp	x9, x10
   19bcc:	b.ne	19c00 <mpc_sqr@@Base+0x878>  // b.any
   19bd0:	ldr	x8, [sp, #160]
   19bd4:	ldr	x0, [x8, #80]
   19bd8:	ldr	x9, [x8, #72]
   19bdc:	add	x2, x9, #0x20
   19be0:	ldur	w10, [x29, #-28]
   19be4:	and	w3, w10, #0xf
   19be8:	sub	x1, x29, #0x80
   19bec:	bl	19de0 <mpc_sqr@@Base+0xa58>
   19bf0:	stur	w0, [x29, #-140]
   19bf4:	mov	w10, #0x1                   	// #1
   19bf8:	stur	w10, [x29, #-32]
   19bfc:	b	19c94 <mpc_sqr@@Base+0x90c>
   19c00:	ldur	w8, [x29, #-148]
   19c04:	cmp	w8, #0x0
   19c08:	cset	w8, ne  // ne = any
   19c0c:	eor	w8, w8, #0x1
   19c10:	and	w8, w8, #0x1
   19c14:	ldur	x9, [x29, #-136]
   19c18:	subs	x1, x9, #0x3
   19c1c:	ldr	x9, [sp, #160]
   19c20:	ldr	x10, [x9, #80]
   19c24:	ldr	x10, [x10]
   19c28:	ldur	w11, [x29, #-28]
   19c2c:	tst	w11, #0xf
   19c30:	cset	w11, eq  // eq = none
   19c34:	and	w11, w11, #0x1
   19c38:	add	x4, x10, w11, sxtw
   19c3c:	sub	x0, x29, #0x40
   19c40:	mov	w2, #0x4                   	// #4
   19c44:	mov	w3, #0x1                   	// #1
   19c48:	str	w8, [sp, #20]
   19c4c:	bl	5540 <mpfr_can_round@plt>
   19c50:	ldr	w8, [sp, #20]
   19c54:	orr	w11, w8, w0
   19c58:	stur	w11, [x29, #-32]
   19c5c:	ldur	w11, [x29, #-32]
   19c60:	cbz	w11, 19c94 <mpc_sqr@@Base+0x90c>
   19c64:	ldr	x8, [sp, #160]
   19c68:	ldr	x0, [x8, #80]
   19c6c:	ldur	w9, [x29, #-28]
   19c70:	and	w2, w9, #0xf
   19c74:	sub	x1, x29, #0x40
   19c78:	ldur	w3, [x29, #-56]
   19c7c:	bl	52d0 <mpfr_set4@plt>
   19c80:	stur	w0, [x29, #-140]
   19c84:	ldur	w9, [x29, #-140]
   19c88:	cbnz	w9, 19c94 <mpc_sqr@@Base+0x90c>
   19c8c:	ldur	w8, [x29, #-148]
   19c90:	stur	w8, [x29, #-140]
   19c94:	ldur	w8, [x29, #-32]
   19c98:	cmp	w8, #0x0
   19c9c:	cset	w8, ne  // ne = any
   19ca0:	eor	w8, w8, #0x1
   19ca4:	tbnz	w8, #0, 19a14 <mpc_sqr@@Base+0x68c>
   19ca8:	sub	x0, x29, #0x40
   19cac:	bl	4e30 <mpfr_clear@plt>
   19cb0:	sub	x0, x29, #0x60
   19cb4:	bl	4e30 <mpfr_clear@plt>
   19cb8:	bl	53f0 <mpfr_underflow_p@plt>
   19cbc:	stur	w0, [x29, #-164]
   19cc0:	bl	4f00 <mpfr_clear_underflow@plt>
   19cc4:	ldr	x8, [sp, #160]
   19cc8:	ldr	x9, [x8, #80]
   19ccc:	add	x0, x9, #0x20
   19cd0:	ldr	x9, [x8, #72]
   19cd4:	add	x2, x9, #0x20
   19cd8:	ldur	w10, [x29, #-28]
   19cdc:	asr	w3, w10, #4
   19ce0:	sub	x1, x29, #0x80
   19ce4:	bl	4c50 <mpfr_mul@plt>
   19ce8:	stur	w0, [x29, #-144]
   19cec:	bl	53f0 <mpfr_underflow_p@plt>
   19cf0:	cbnz	w0, 19d24 <mpc_sqr@@Base+0x99c>
   19cf4:	ldr	x8, [sp, #160]
   19cf8:	ldr	x9, [x8, #80]
   19cfc:	add	x0, x9, #0x20
   19d00:	ldr	x9, [x8, #80]
   19d04:	add	x1, x9, #0x20
   19d08:	ldur	w10, [x29, #-28]
   19d0c:	asr	w3, w10, #4
   19d10:	mov	x2, #0x1                   	// #1
   19d14:	bl	5040 <mpfr_mul_2ui@plt>
   19d18:	ldur	w10, [x29, #-144]
   19d1c:	orr	w10, w10, w0
   19d20:	stur	w10, [x29, #-144]
   19d24:	ldur	w8, [x29, #-164]
   19d28:	cbz	w8, 19d30 <mpc_sqr@@Base+0x9a8>
   19d2c:	bl	4a60 <mpfr_set_underflow@plt>
   19d30:	ldr	x8, [sp, #160]
   19d34:	ldr	x9, [x8, #80]
   19d38:	ldr	x10, [x8, #72]
   19d3c:	cmp	x9, x10
   19d40:	b.ne	19d4c <mpc_sqr@@Base+0x9c4>  // b.any
   19d44:	sub	x0, x29, #0x80
   19d48:	bl	4e30 <mpfr_clear@plt>
   19d4c:	ldur	w8, [x29, #-140]
   19d50:	cmp	w8, #0x0
   19d54:	cset	w8, ge  // ge = tcont
   19d58:	tbnz	w8, #0, 19d68 <mpc_sqr@@Base+0x9e0>
   19d5c:	mov	w8, #0x2                   	// #2
   19d60:	str	w8, [sp, #16]
   19d64:	b	19d80 <mpc_sqr@@Base+0x9f8>
   19d68:	ldur	w8, [x29, #-140]
   19d6c:	mov	w9, wzr
   19d70:	mov	w10, #0x1                   	// #1
   19d74:	cmp	w8, #0x0
   19d78:	csel	w8, w9, w10, eq  // eq = none
   19d7c:	str	w8, [sp, #16]
   19d80:	ldr	w8, [sp, #16]
   19d84:	ldur	w9, [x29, #-144]
   19d88:	cmp	w9, #0x0
   19d8c:	cset	w9, ge  // ge = tcont
   19d90:	str	w8, [sp, #12]
   19d94:	tbnz	w9, #0, 19da4 <mpc_sqr@@Base+0xa1c>
   19d98:	mov	w8, #0x2                   	// #2
   19d9c:	str	w8, [sp, #8]
   19da0:	b	19dbc <mpc_sqr@@Base+0xa34>
   19da4:	ldur	w8, [x29, #-144]
   19da8:	mov	w9, wzr
   19dac:	mov	w10, #0x1                   	// #1
   19db0:	cmp	w8, #0x0
   19db4:	csel	w8, w9, w10, eq  // eq = none
   19db8:	str	w8, [sp, #8]
   19dbc:	ldr	w8, [sp, #8]
   19dc0:	ldr	w9, [sp, #12]
   19dc4:	orr	w8, w9, w8, lsl #2
   19dc8:	stur	w8, [x29, #-4]
   19dcc:	ldur	w0, [x29, #-4]
   19dd0:	ldr	x28, [sp, #400]
   19dd4:	ldp	x29, x30, [sp, #384]
   19dd8:	add	sp, sp, #0x1a0
   19ddc:	ret
   19de0:	sub	sp, sp, #0x1f0
   19de4:	stp	x29, x30, [sp, #464]
   19de8:	str	x28, [sp, #480]
   19dec:	add	x29, sp, #0x1d0
   19df0:	mov	x8, #0x2                   	// #2
   19df4:	mov	w9, wzr
   19df8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19dfc:	sub	x11, x29, #0x40
   19e00:	sub	x12, x29, #0x60
   19e04:	stur	x0, [x29, #-8]
   19e08:	stur	x1, [x29, #-16]
   19e0c:	stur	x2, [x29, #-24]
   19e10:	stur	w3, [x29, #-28]
   19e14:	ldur	x13, [x29, #-16]
   19e18:	ldr	x13, [x13]
   19e1c:	mul	x1, x8, x13
   19e20:	mov	x0, x11
   19e24:	stur	x8, [x29, #-192]
   19e28:	stur	w9, [x29, #-196]
   19e2c:	stur	x10, [x29, #-208]
   19e30:	stur	x11, [x29, #-216]
   19e34:	stur	x12, [x29, #-224]
   19e38:	bl	5530 <mpfr_init2@plt>
   19e3c:	ldur	x8, [x29, #-24]
   19e40:	ldr	x8, [x8]
   19e44:	ldur	x10, [x29, #-192]
   19e48:	mul	x1, x10, x8
   19e4c:	ldur	x0, [x29, #-224]
   19e50:	bl	5530 <mpfr_init2@plt>
   19e54:	ldur	x1, [x29, #-16]
   19e58:	ldur	x0, [x29, #-216]
   19e5c:	ldur	w2, [x29, #-196]
   19e60:	bl	5110 <mpfr_sqr@plt>
   19e64:	ldur	x1, [x29, #-24]
   19e68:	ldur	x8, [x29, #-224]
   19e6c:	mov	x0, x8
   19e70:	ldur	w2, [x29, #-196]
   19e74:	bl	5110 <mpfr_sqr@plt>
   19e78:	ldur	x8, [x29, #-8]
   19e7c:	ldur	w3, [x29, #-28]
   19e80:	mov	x0, x8
   19e84:	ldur	x1, [x29, #-216]
   19e88:	ldur	x2, [x29, #-224]
   19e8c:	bl	4b40 <mpfr_sub@plt>
   19e90:	stur	w0, [x29, #-32]
   19e94:	ldur	x8, [x29, #-8]
   19e98:	ldr	x8, [x8, #16]
   19e9c:	ldur	x10, [x29, #-208]
   19ea0:	cmp	x8, x10
   19ea4:	b.ne	19f18 <mpc_sqr@@Base+0xb90>  // b.any
   19ea8:	ldur	x0, [x29, #-8]
   19eac:	ldur	x8, [x29, #-8]
   19eb0:	ldr	w9, [x8, #8]
   19eb4:	mov	w10, wzr
   19eb8:	mov	w11, #0xffffffff            	// #-1
   19ebc:	mov	w12, #0x1                   	// #1
   19ec0:	cmp	w9, #0x0
   19ec4:	csel	w9, w11, w12, lt  // lt = tstop
   19ec8:	mov	w1, w9
   19ecc:	sxtw	x1, w1
   19ed0:	mov	x8, xzr
   19ed4:	mov	x2, x8
   19ed8:	mov	w3, w10
   19edc:	bl	4ac0 <mpfr_set_si_2exp@plt>
   19ee0:	ldur	x0, [x29, #-8]
   19ee4:	ldur	x1, [x29, #-8]
   19ee8:	str	x0, [sp, #232]
   19eec:	str	x1, [sp, #224]
   19ef0:	bl	5300 <mpfr_get_emax@plt>
   19ef4:	ldur	w3, [x29, #-28]
   19ef8:	ldr	x8, [sp, #232]
   19efc:	str	x0, [sp, #216]
   19f00:	mov	x0, x8
   19f04:	ldr	x1, [sp, #224]
   19f08:	ldr	x2, [sp, #216]
   19f0c:	bl	5040 <mpfr_mul_2ui@plt>
   19f10:	stur	w0, [x29, #-32]
   19f14:	b	1a3e8 <mpc_sqr@@Base+0x1060>
   19f18:	ldur	x8, [x29, #-48]
   19f1c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   19f20:	cmp	x8, x9
   19f24:	b.ne	19f54 <mpc_sqr@@Base+0xbcc>  // b.any
   19f28:	ldur	x8, [x29, #-80]
   19f2c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   19f30:	cmp	x8, x9
   19f34:	b.eq	19f54 <mpc_sqr@@Base+0xbcc>  // b.none
   19f38:	ldur	w8, [x29, #-56]
   19f3c:	mov	w9, #0xffffffff            	// #-1
   19f40:	mov	w10, #0x1                   	// #1
   19f44:	cmp	w8, #0x0
   19f48:	csel	w8, w10, w9, lt  // lt = tstop
   19f4c:	stur	w8, [x29, #-32]
   19f50:	b	1a3e8 <mpc_sqr@@Base+0x1060>
   19f54:	ldur	x8, [x29, #-80]
   19f58:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   19f5c:	cmp	x8, x9
   19f60:	b.ne	19f90 <mpc_sqr@@Base+0xc08>  // b.any
   19f64:	ldur	x8, [x29, #-48]
   19f68:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   19f6c:	cmp	x8, x9
   19f70:	b.eq	19f90 <mpc_sqr@@Base+0xc08>  // b.none
   19f74:	ldur	w8, [x29, #-88]
   19f78:	mov	w9, #0xffffffff            	// #-1
   19f7c:	mov	w10, #0x1                   	// #1
   19f80:	cmp	w8, #0x0
   19f84:	csel	w8, w9, w10, lt  // lt = tstop
   19f88:	stur	w8, [x29, #-32]
   19f8c:	b	1a3e8 <mpc_sqr@@Base+0x1060>
   19f90:	ldur	x8, [x29, #-8]
   19f94:	ldr	x8, [x8, #16]
   19f98:	mov	x9, #0x2                   	// #2
   19f9c:	movk	x9, #0x8000, lsl #48
   19fa0:	cmp	x8, x9
   19fa4:	b.eq	19fc8 <mpc_sqr@@Base+0xc40>  // b.none
   19fa8:	ldur	x8, [x29, #-48]
   19fac:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   19fb0:	cmp	x8, x9
   19fb4:	b.ne	1a3e8 <mpc_sqr@@Base+0x1060>  // b.any
   19fb8:	ldur	x8, [x29, #-80]
   19fbc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   19fc0:	cmp	x8, x9
   19fc4:	b.ne	1a3e8 <mpc_sqr@@Base+0x1060>  // b.any
   19fc8:	ldur	x8, [x29, #-16]
   19fcc:	ldr	x8, [x8, #16]
   19fd0:	stur	x8, [x29, #-120]
   19fd4:	ldur	x8, [x29, #-24]
   19fd8:	ldr	x8, [x8, #16]
   19fdc:	stur	x8, [x29, #-128]
   19fe0:	ldur	x0, [x29, #-16]
   19fe4:	mov	x8, xzr
   19fe8:	mov	x1, x8
   19fec:	str	x8, [sp, #208]
   19ff0:	bl	4ce0 <mpfr_set_exp@plt>
   19ff4:	ldur	x8, [x29, #-24]
   19ff8:	mov	x0, x8
   19ffc:	ldr	x1, [sp, #208]
   1a000:	bl	4ce0 <mpfr_set_exp@plt>
   1a004:	sub	x8, x29, #0x90
   1a008:	mov	x0, x8
   1a00c:	str	x8, [sp, #200]
   1a010:	bl	5590 <__gmpz_init@plt>
   1a014:	sub	x8, x29, #0xa0
   1a018:	mov	x0, x8
   1a01c:	str	x8, [sp, #192]
   1a020:	bl	5590 <__gmpz_init@plt>
   1a024:	ldur	x1, [x29, #-120]
   1a028:	ldr	x0, [sp, #200]
   1a02c:	bl	55b0 <__gmpz_set_si@plt>
   1a030:	ldr	x0, [sp, #200]
   1a034:	ldr	x1, [sp, #200]
   1a038:	mov	x8, #0x1                   	// #1
   1a03c:	mov	x2, x8
   1a040:	str	x8, [sp, #184]
   1a044:	bl	4f80 <__gmpz_mul_2exp@plt>
   1a048:	ldur	x1, [x29, #-128]
   1a04c:	ldr	x0, [sp, #192]
   1a050:	bl	55b0 <__gmpz_set_si@plt>
   1a054:	ldr	x0, [sp, #192]
   1a058:	ldr	x1, [sp, #192]
   1a05c:	ldr	x2, [sp, #184]
   1a060:	bl	4f80 <__gmpz_mul_2exp@plt>
   1a064:	ldur	x1, [x29, #-16]
   1a068:	sub	x8, x29, #0x40
   1a06c:	mov	x0, x8
   1a070:	mov	w9, wzr
   1a074:	mov	w2, w9
   1a078:	str	x8, [sp, #176]
   1a07c:	str	w9, [sp, #172]
   1a080:	bl	5110 <mpfr_sqr@plt>
   1a084:	ldur	x8, [x29, #-48]
   1a088:	ldr	x10, [sp, #208]
   1a08c:	subs	x2, x10, x8
   1a090:	ldr	x8, [sp, #200]
   1a094:	mov	x0, x8
   1a098:	mov	x1, x8
   1a09c:	bl	4bb0 <__gmpz_sub_ui@plt>
   1a0a0:	ldr	x0, [sp, #176]
   1a0a4:	ldr	x1, [sp, #208]
   1a0a8:	bl	4ce0 <mpfr_set_exp@plt>
   1a0ac:	ldur	x1, [x29, #-24]
   1a0b0:	sub	x8, x29, #0x60
   1a0b4:	mov	x0, x8
   1a0b8:	ldr	w2, [sp, #172]
   1a0bc:	str	x8, [sp, #160]
   1a0c0:	bl	5110 <mpfr_sqr@plt>
   1a0c4:	ldur	x8, [x29, #-80]
   1a0c8:	ldr	x10, [sp, #208]
   1a0cc:	subs	x2, x10, x8
   1a0d0:	ldr	x8, [sp, #192]
   1a0d4:	mov	x0, x8
   1a0d8:	mov	x1, x8
   1a0dc:	bl	4bb0 <__gmpz_sub_ui@plt>
   1a0e0:	ldr	x0, [sp, #160]
   1a0e4:	ldr	x1, [sp, #208]
   1a0e8:	bl	4ce0 <mpfr_set_exp@plt>
   1a0ec:	ldur	x8, [x29, #-8]
   1a0f0:	ldr	x8, [x8, #16]
   1a0f4:	mov	x10, #0x2                   	// #2
   1a0f8:	movk	x10, #0x8000, lsl #48
   1a0fc:	cmp	x8, x10
   1a100:	b.ne	1a250 <mpc_sqr@@Base+0xec8>  // b.any
   1a104:	bl	5300 <mpfr_get_emax@plt>
   1a108:	stur	x0, [x29, #-168]
   1a10c:	sub	x0, x29, #0x90
   1a110:	sub	x1, x29, #0xa0
   1a114:	bl	5400 <__gmpz_cmp@plt>
   1a118:	cmp	w0, #0x0
   1a11c:	cset	w8, lt  // lt = tstop
   1a120:	tbnz	w8, #0, 1a180 <mpc_sqr@@Base+0xdf8>
   1a124:	ldur	x1, [x29, #-168]
   1a128:	sub	x0, x29, #0x40
   1a12c:	bl	4ce0 <mpfr_set_exp@plt>
   1a130:	ldur	x2, [x29, #-168]
   1a134:	sub	x8, x29, #0x90
   1a138:	mov	x0, x8
   1a13c:	mov	x1, x8
   1a140:	str	x8, [sp, #152]
   1a144:	bl	4bb0 <__gmpz_sub_ui@plt>
   1a148:	sub	x8, x29, #0xa0
   1a14c:	mov	x0, x8
   1a150:	mov	x1, x8
   1a154:	ldr	x2, [sp, #152]
   1a158:	str	x8, [sp, #144]
   1a15c:	bl	4c90 <__gmpz_sub@plt>
   1a160:	ldr	x0, [sp, #144]
   1a164:	bl	4fc0 <__gmpz_get_ui@plt>
   1a168:	sub	x8, x29, #0x60
   1a16c:	str	x0, [sp, #136]
   1a170:	mov	x0, x8
   1a174:	ldr	x1, [sp, #136]
   1a178:	bl	4ce0 <mpfr_set_exp@plt>
   1a17c:	b	1a1e8 <mpc_sqr@@Base+0xe60>
   1a180:	ldur	x1, [x29, #-168]
   1a184:	sub	x0, x29, #0x60
   1a188:	bl	4ce0 <mpfr_set_exp@plt>
   1a18c:	ldur	x2, [x29, #-168]
   1a190:	sub	x8, x29, #0xa0
   1a194:	mov	x0, x8
   1a198:	mov	x1, x8
   1a19c:	str	x8, [sp, #128]
   1a1a0:	bl	4bb0 <__gmpz_sub_ui@plt>
   1a1a4:	sub	x8, x29, #0x90
   1a1a8:	mov	x0, x8
   1a1ac:	mov	x1, x8
   1a1b0:	ldr	x2, [sp, #128]
   1a1b4:	str	x8, [sp, #120]
   1a1b8:	bl	4c90 <__gmpz_sub@plt>
   1a1bc:	ldr	x0, [sp, #120]
   1a1c0:	bl	4fc0 <__gmpz_get_ui@plt>
   1a1c4:	sub	x8, x29, #0x40
   1a1c8:	str	x0, [sp, #112]
   1a1cc:	mov	x0, x8
   1a1d0:	ldr	x1, [sp, #112]
   1a1d4:	bl	4ce0 <mpfr_set_exp@plt>
   1a1d8:	ldr	x8, [sp, #120]
   1a1dc:	mov	x0, x8
   1a1e0:	ldr	x1, [sp, #128]
   1a1e4:	bl	4dc0 <__gmpz_set@plt>
   1a1e8:	ldur	x0, [x29, #-8]
   1a1ec:	ldur	w3, [x29, #-28]
   1a1f0:	sub	x1, x29, #0x40
   1a1f4:	sub	x2, x29, #0x60
   1a1f8:	bl	4b40 <mpfr_sub@plt>
   1a1fc:	stur	w0, [x29, #-32]
   1a200:	ldur	x0, [x29, #-8]
   1a204:	ldur	x1, [x29, #-8]
   1a208:	sub	x8, x29, #0x90
   1a20c:	str	x0, [sp, #104]
   1a210:	mov	x0, x8
   1a214:	str	x1, [sp, #96]
   1a218:	bl	4fc0 <__gmpz_get_ui@plt>
   1a21c:	ldur	w3, [x29, #-28]
   1a220:	ldr	x8, [sp, #104]
   1a224:	str	x0, [sp, #88]
   1a228:	mov	x0, x8
   1a22c:	ldr	x1, [sp, #96]
   1a230:	ldr	x2, [sp, #88]
   1a234:	bl	5040 <mpfr_mul_2ui@plt>
   1a238:	stur	w0, [x29, #-172]
   1a23c:	ldur	w9, [x29, #-172]
   1a240:	cbz	w9, 1a24c <mpc_sqr@@Base+0xec4>
   1a244:	ldur	w8, [x29, #-172]
   1a248:	stur	w8, [x29, #-32]
   1a24c:	b	1a3bc <mpc_sqr@@Base+0x1034>
   1a250:	bl	5160 <mpfr_get_emin@plt>
   1a254:	stur	x0, [x29, #-184]
   1a258:	sub	x0, x29, #0x90
   1a25c:	sub	x1, x29, #0xa0
   1a260:	bl	5400 <__gmpz_cmp@plt>
   1a264:	cmp	w0, #0x0
   1a268:	cset	w8, gt
   1a26c:	tbnz	w8, #0, 1a2d4 <mpc_sqr@@Base+0xf4c>
   1a270:	ldur	x1, [x29, #-184]
   1a274:	sub	x0, x29, #0x40
   1a278:	bl	4ce0 <mpfr_set_exp@plt>
   1a27c:	ldur	x8, [x29, #-184]
   1a280:	mov	x9, xzr
   1a284:	subs	x2, x9, x8
   1a288:	sub	x8, x29, #0x90
   1a28c:	mov	x0, x8
   1a290:	mov	x1, x8
   1a294:	str	x8, [sp, #80]
   1a298:	bl	50a0 <__gmpz_add_ui@plt>
   1a29c:	sub	x8, x29, #0xa0
   1a2a0:	mov	x0, x8
   1a2a4:	mov	x1, x8
   1a2a8:	ldr	x2, [sp, #80]
   1a2ac:	str	x8, [sp, #72]
   1a2b0:	bl	4c90 <__gmpz_sub@plt>
   1a2b4:	ldr	x0, [sp, #72]
   1a2b8:	bl	4a80 <__gmpz_get_si@plt>
   1a2bc:	sub	x8, x29, #0x60
   1a2c0:	str	x0, [sp, #64]
   1a2c4:	mov	x0, x8
   1a2c8:	ldr	x1, [sp, #64]
   1a2cc:	bl	4ce0 <mpfr_set_exp@plt>
   1a2d0:	b	1a344 <mpc_sqr@@Base+0xfbc>
   1a2d4:	ldur	x1, [x29, #-184]
   1a2d8:	sub	x0, x29, #0x60
   1a2dc:	bl	4ce0 <mpfr_set_exp@plt>
   1a2e0:	ldur	x8, [x29, #-184]
   1a2e4:	mov	x9, xzr
   1a2e8:	subs	x2, x9, x8
   1a2ec:	sub	x8, x29, #0xa0
   1a2f0:	mov	x0, x8
   1a2f4:	mov	x1, x8
   1a2f8:	str	x8, [sp, #56]
   1a2fc:	bl	50a0 <__gmpz_add_ui@plt>
   1a300:	sub	x8, x29, #0x90
   1a304:	mov	x0, x8
   1a308:	mov	x1, x8
   1a30c:	ldr	x2, [sp, #56]
   1a310:	str	x8, [sp, #48]
   1a314:	bl	4c90 <__gmpz_sub@plt>
   1a318:	ldr	x0, [sp, #48]
   1a31c:	bl	4a80 <__gmpz_get_si@plt>
   1a320:	sub	x8, x29, #0x40
   1a324:	str	x0, [sp, #40]
   1a328:	mov	x0, x8
   1a32c:	ldr	x1, [sp, #40]
   1a330:	bl	4ce0 <mpfr_set_exp@plt>
   1a334:	ldr	x8, [sp, #48]
   1a338:	mov	x0, x8
   1a33c:	ldr	x1, [sp, #56]
   1a340:	bl	4dc0 <__gmpz_set@plt>
   1a344:	ldur	x0, [x29, #-8]
   1a348:	ldur	w3, [x29, #-28]
   1a34c:	sub	x1, x29, #0x40
   1a350:	sub	x2, x29, #0x60
   1a354:	bl	4b40 <mpfr_sub@plt>
   1a358:	stur	w0, [x29, #-32]
   1a35c:	sub	x8, x29, #0x90
   1a360:	mov	x0, x8
   1a364:	mov	x1, x8
   1a368:	str	x8, [sp, #32]
   1a36c:	bl	4e20 <__gmpz_neg@plt>
   1a370:	ldur	x0, [x29, #-8]
   1a374:	ldur	x1, [x29, #-8]
   1a378:	ldr	x8, [sp, #32]
   1a37c:	str	x0, [sp, #24]
   1a380:	mov	x0, x8
   1a384:	str	x1, [sp, #16]
   1a388:	bl	4fc0 <__gmpz_get_ui@plt>
   1a38c:	ldur	w3, [x29, #-28]
   1a390:	ldr	x8, [sp, #24]
   1a394:	str	x0, [sp, #8]
   1a398:	mov	x0, x8
   1a39c:	ldr	x1, [sp, #16]
   1a3a0:	ldr	x2, [sp, #8]
   1a3a4:	bl	5420 <mpfr_div_2ui@plt>
   1a3a8:	stur	w0, [x29, #-176]
   1a3ac:	ldur	w9, [x29, #-176]
   1a3b0:	cbz	w9, 1a3bc <mpc_sqr@@Base+0x1034>
   1a3b4:	ldur	w8, [x29, #-176]
   1a3b8:	stur	w8, [x29, #-32]
   1a3bc:	sub	x0, x29, #0x90
   1a3c0:	bl	5280 <__gmpz_clear@plt>
   1a3c4:	sub	x0, x29, #0xa0
   1a3c8:	bl	5280 <__gmpz_clear@plt>
   1a3cc:	ldur	x0, [x29, #-16]
   1a3d0:	ldur	x1, [x29, #-120]
   1a3d4:	bl	4ce0 <mpfr_set_exp@plt>
   1a3d8:	ldur	x8, [x29, #-24]
   1a3dc:	ldur	x1, [x29, #-128]
   1a3e0:	mov	x0, x8
   1a3e4:	bl	4ce0 <mpfr_set_exp@plt>
   1a3e8:	sub	x0, x29, #0x40
   1a3ec:	bl	4e30 <mpfr_clear@plt>
   1a3f0:	sub	x0, x29, #0x60
   1a3f4:	bl	4e30 <mpfr_clear@plt>
   1a3f8:	ldur	w0, [x29, #-32]
   1a3fc:	ldr	x28, [sp, #480]
   1a400:	ldp	x29, x30, [sp, #464]
   1a404:	add	sp, sp, #0x1f0
   1a408:	ret

000000000001a40c <mpc_sqrt@@Base>:
   1a40c:	stp	x29, x30, [sp, #-32]!
   1a410:	str	x28, [sp, #16]
   1a414:	mov	x29, sp
   1a418:	sub	sp, sp, #0x200
   1a41c:	mov	w8, wzr
   1a420:	mov	w9, #0x1                   	// #1
   1a424:	mov	w10, #0xffffffff            	// #-1
   1a428:	mov	w11, #0x3                   	// #3
   1a42c:	mov	w12, #0x2                   	// #2
   1a430:	stur	x0, [x29, #-16]
   1a434:	stur	x1, [x29, #-24]
   1a438:	stur	w2, [x29, #-28]
   1a43c:	stur	wzr, [x29, #-36]
   1a440:	stur	w9, [x29, #-144]
   1a444:	stur	wzr, [x29, #-156]
   1a448:	ldur	x0, [x29, #-24]
   1a44c:	str	w8, [sp, #220]
   1a450:	str	w10, [sp, #216]
   1a454:	str	w11, [sp, #212]
   1a458:	str	w12, [sp, #208]
   1a45c:	bl	52f0 <mpfr_sgn@plt>
   1a460:	stur	w0, [x29, #-160]
   1a464:	ldur	x13, [x29, #-24]
   1a468:	add	x0, x13, #0x20
   1a46c:	bl	52f0 <mpfr_sgn@plt>
   1a470:	stur	w0, [x29, #-164]
   1a474:	stur	wzr, [x29, #-172]
   1a478:	ldur	x13, [x29, #-24]
   1a47c:	ldr	w8, [x13, #40]
   1a480:	cmp	w8, #0x0
   1a484:	cset	w8, lt  // lt = tstop
   1a488:	tst	w8, #0x1
   1a48c:	ldr	w8, [sp, #220]
   1a490:	ldr	w9, [sp, #216]
   1a494:	csel	w10, w8, w9, eq  // eq = none
   1a498:	stur	w10, [x29, #-176]
   1a49c:	ldur	w10, [x29, #-176]
   1a4a0:	cmp	w10, #0x0
   1a4a4:	ldr	w10, [sp, #212]
   1a4a8:	ldr	w11, [sp, #208]
   1a4ac:	csel	w12, w10, w11, ne  // ne = any
   1a4b0:	stur	w12, [x29, #-180]
   1a4b4:	ldur	x0, [x29, #-24]
   1a4b8:	bl	55c0 <mpfr_number_p@plt>
   1a4bc:	cbz	w0, 1a4d0 <mpc_sqrt@@Base+0xc4>
   1a4c0:	ldur	x8, [x29, #-24]
   1a4c4:	add	x0, x8, #0x20
   1a4c8:	bl	55c0 <mpfr_number_p@plt>
   1a4cc:	cbnz	w0, 1a670 <mpc_sqrt@@Base+0x264>
   1a4d0:	ldur	x8, [x29, #-24]
   1a4d4:	ldr	x8, [x8, #48]
   1a4d8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a4dc:	cmp	x8, x9
   1a4e0:	b.ne	1a508 <mpc_sqrt@@Base+0xfc>  // b.any
   1a4e4:	ldur	x0, [x29, #-16]
   1a4e8:	mov	w1, #0x1                   	// #1
   1a4ec:	bl	5220 <mpfr_set_inf@plt>
   1a4f0:	ldur	x8, [x29, #-16]
   1a4f4:	add	x0, x8, #0x20
   1a4f8:	ldur	w1, [x29, #-176]
   1a4fc:	bl	5220 <mpfr_set_inf@plt>
   1a500:	stur	wzr, [x29, #-4]
   1a504:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a508:	ldur	x8, [x29, #-24]
   1a50c:	ldr	x8, [x8, #16]
   1a510:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a514:	cmp	x8, x9
   1a518:	b.ne	1a624 <mpc_sqrt@@Base+0x218>  // b.any
   1a51c:	ldur	x8, [x29, #-24]
   1a520:	ldr	w9, [x8, #8]
   1a524:	cmp	w9, #0x0
   1a528:	cset	w9, ge  // ge = tcont
   1a52c:	tbnz	w9, #0, 1a59c <mpc_sqrt@@Base+0x190>
   1a530:	ldur	x8, [x29, #-24]
   1a534:	add	x0, x8, #0x20
   1a538:	bl	55c0 <mpfr_number_p@plt>
   1a53c:	cbz	w0, 1a57c <mpc_sqrt@@Base+0x170>
   1a540:	ldur	x8, [x29, #-16]
   1a544:	stur	x8, [x29, #-192]
   1a548:	ldur	x8, [x29, #-192]
   1a54c:	mov	w9, #0x1                   	// #1
   1a550:	str	w9, [x8, #8]
   1a554:	ldur	x8, [x29, #-192]
   1a558:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a55c:	str	x10, [x8, #16]
   1a560:	stur	wzr, [x29, #-196]
   1a564:	ldur	x8, [x29, #-16]
   1a568:	add	x0, x8, #0x20
   1a56c:	ldur	w1, [x29, #-176]
   1a570:	bl	5220 <mpfr_set_inf@plt>
   1a574:	stur	wzr, [x29, #-4]
   1a578:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a57c:	ldur	x0, [x29, #-16]
   1a580:	bl	4b20 <mpfr_set_nan@plt>
   1a584:	ldur	x8, [x29, #-16]
   1a588:	add	x0, x8, #0x20
   1a58c:	ldur	w1, [x29, #-176]
   1a590:	bl	5220 <mpfr_set_inf@plt>
   1a594:	stur	wzr, [x29, #-4]
   1a598:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a59c:	ldur	x8, [x29, #-24]
   1a5a0:	add	x0, x8, #0x20
   1a5a4:	bl	55c0 <mpfr_number_p@plt>
   1a5a8:	cbz	w0, 1a60c <mpc_sqrt@@Base+0x200>
   1a5ac:	ldur	x0, [x29, #-16]
   1a5b0:	mov	w8, #0x1                   	// #1
   1a5b4:	mov	w1, w8
   1a5b8:	str	w8, [sp, #204]
   1a5bc:	bl	5220 <mpfr_set_inf@plt>
   1a5c0:	ldur	x9, [x29, #-16]
   1a5c4:	add	x9, x9, #0x20
   1a5c8:	stur	x9, [x29, #-208]
   1a5cc:	ldur	x9, [x29, #-208]
   1a5d0:	ldr	w8, [sp, #204]
   1a5d4:	str	w8, [x9, #8]
   1a5d8:	ldur	x9, [x29, #-208]
   1a5dc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a5e0:	str	x10, [x9, #16]
   1a5e4:	stur	wzr, [x29, #-212]
   1a5e8:	ldur	w11, [x29, #-176]
   1a5ec:	cbz	w11, 1a604 <mpc_sqrt@@Base+0x1f8>
   1a5f0:	ldur	x0, [x29, #-16]
   1a5f4:	ldur	x1, [x29, #-16]
   1a5f8:	mov	w8, wzr
   1a5fc:	mov	w2, w8
   1a600:	bl	5060 <mpc_conj@plt>
   1a604:	stur	wzr, [x29, #-4]
   1a608:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a60c:	ldur	x0, [x29, #-16]
   1a610:	ldur	x1, [x29, #-24]
   1a614:	ldur	w2, [x29, #-28]
   1a618:	bl	5680 <mpc_set@plt>
   1a61c:	stur	w0, [x29, #-4]
   1a620:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a624:	ldur	x8, [x29, #-24]
   1a628:	ldr	x8, [x8, #16]
   1a62c:	mov	x9, #0x2                   	// #2
   1a630:	movk	x9, #0x8000, lsl #48
   1a634:	cmp	x8, x9
   1a638:	b.eq	1a654 <mpc_sqrt@@Base+0x248>  // b.none
   1a63c:	ldur	x8, [x29, #-24]
   1a640:	ldr	x8, [x8, #48]
   1a644:	mov	x9, #0x2                   	// #2
   1a648:	movk	x9, #0x8000, lsl #48
   1a64c:	cmp	x8, x9
   1a650:	b.ne	1a670 <mpc_sqrt@@Base+0x264>  // b.any
   1a654:	ldur	x0, [x29, #-16]
   1a658:	bl	4b20 <mpfr_set_nan@plt>
   1a65c:	ldur	x8, [x29, #-16]
   1a660:	add	x0, x8, #0x20
   1a664:	bl	4b20 <mpfr_set_nan@plt>
   1a668:	stur	wzr, [x29, #-4]
   1a66c:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a670:	ldur	w8, [x29, #-164]
   1a674:	cbnz	w8, 1a8c4 <mpc_sqrt@@Base+0x4b8>
   1a678:	ldur	w8, [x29, #-160]
   1a67c:	cbnz	w8, 1a6c0 <mpc_sqrt@@Base+0x2b4>
   1a680:	ldur	x0, [x29, #-16]
   1a684:	mov	x8, xzr
   1a688:	mov	x1, x8
   1a68c:	mov	x2, x8
   1a690:	mov	w9, wzr
   1a694:	mov	w3, w9
   1a698:	bl	5140 <mpc_set_ui_ui@plt>
   1a69c:	ldur	w9, [x29, #-176]
   1a6a0:	cbz	w9, 1a6b8 <mpc_sqrt@@Base+0x2ac>
   1a6a4:	ldur	x0, [x29, #-16]
   1a6a8:	ldur	x1, [x29, #-16]
   1a6ac:	mov	w8, wzr
   1a6b0:	mov	w2, w8
   1a6b4:	bl	5060 <mpc_conj@plt>
   1a6b8:	stur	wzr, [x29, #-4]
   1a6bc:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a6c0:	ldur	w8, [x29, #-160]
   1a6c4:	cmp	w8, #0x0
   1a6c8:	cset	w8, le
   1a6cc:	tbnz	w8, #0, 1a76c <mpc_sqrt@@Base+0x360>
   1a6d0:	ldur	x0, [x29, #-16]
   1a6d4:	ldur	x1, [x29, #-24]
   1a6d8:	ldur	w8, [x29, #-28]
   1a6dc:	and	w2, w8, #0xf
   1a6e0:	bl	5450 <mpfr_sqrt@plt>
   1a6e4:	stur	w0, [x29, #-140]
   1a6e8:	ldur	x9, [x29, #-16]
   1a6ec:	add	x9, x9, #0x20
   1a6f0:	stur	x9, [x29, #-224]
   1a6f4:	ldur	x9, [x29, #-224]
   1a6f8:	mov	w8, #0x1                   	// #1
   1a6fc:	str	w8, [x9, #8]
   1a700:	ldur	x9, [x29, #-224]
   1a704:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a708:	str	x10, [x9, #16]
   1a70c:	stur	wzr, [x29, #-228]
   1a710:	ldur	w8, [x29, #-176]
   1a714:	cbz	w8, 1a72c <mpc_sqrt@@Base+0x320>
   1a718:	ldur	x0, [x29, #-16]
   1a71c:	ldur	x1, [x29, #-16]
   1a720:	mov	w8, wzr
   1a724:	mov	w2, w8
   1a728:	bl	5060 <mpc_conj@plt>
   1a72c:	ldur	w8, [x29, #-140]
   1a730:	cmp	w8, #0x0
   1a734:	cset	w8, ge  // ge = tcont
   1a738:	tbnz	w8, #0, 1a748 <mpc_sqrt@@Base+0x33c>
   1a73c:	mov	w8, #0x2                   	// #2
   1a740:	str	w8, [sp, #200]
   1a744:	b	1a760 <mpc_sqrt@@Base+0x354>
   1a748:	ldur	w8, [x29, #-140]
   1a74c:	mov	w9, wzr
   1a750:	mov	w10, #0x1                   	// #1
   1a754:	cmp	w8, #0x0
   1a758:	csel	w8, w9, w10, eq  // eq = none
   1a75c:	str	w8, [sp, #200]
   1a760:	ldr	w8, [sp, #200]
   1a764:	stur	w8, [x29, #-4]
   1a768:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a76c:	ldur	x8, [x29, #-24]
   1a770:	ldr	x1, [x8]
   1a774:	sub	x8, x29, #0x48
   1a778:	mov	x0, x8
   1a77c:	str	x8, [sp, #192]
   1a780:	bl	5530 <mpfr_init2@plt>
   1a784:	ldur	x1, [x29, #-24]
   1a788:	ldr	x0, [sp, #192]
   1a78c:	mov	w9, wzr
   1a790:	mov	w2, w9
   1a794:	bl	4c60 <mpfr_neg@plt>
   1a798:	ldur	w9, [x29, #-176]
   1a79c:	cbz	w9, 1a834 <mpc_sqrt@@Base+0x428>
   1a7a0:	ldur	x8, [x29, #-16]
   1a7a4:	add	x0, x8, #0x20
   1a7a8:	ldur	w9, [x29, #-28]
   1a7ac:	asr	w9, w9, #4
   1a7b0:	cmp	w9, #0x2
   1a7b4:	str	x0, [sp, #184]
   1a7b8:	b.ne	1a7c8 <mpc_sqrt@@Base+0x3bc>  // b.any
   1a7bc:	mov	w8, #0x3                   	// #3
   1a7c0:	str	w8, [sp, #180]
   1a7c4:	b	1a7f8 <mpc_sqrt@@Base+0x3ec>
   1a7c8:	ldur	w8, [x29, #-28]
   1a7cc:	asr	w8, w8, #4
   1a7d0:	cmp	w8, #0x3
   1a7d4:	b.ne	1a7e4 <mpc_sqrt@@Base+0x3d8>  // b.any
   1a7d8:	mov	w8, #0x2                   	// #2
   1a7dc:	str	w8, [sp, #176]
   1a7e0:	b	1a7f0 <mpc_sqrt@@Base+0x3e4>
   1a7e4:	ldur	w8, [x29, #-28]
   1a7e8:	asr	w8, w8, #4
   1a7ec:	str	w8, [sp, #176]
   1a7f0:	ldr	w8, [sp, #176]
   1a7f4:	str	w8, [sp, #180]
   1a7f8:	ldr	w8, [sp, #180]
   1a7fc:	ldr	x0, [sp, #184]
   1a800:	sub	x1, x29, #0x48
   1a804:	mov	w2, w8
   1a808:	bl	5450 <mpfr_sqrt@plt>
   1a80c:	mov	w8, wzr
   1a810:	subs	w9, w8, w0
   1a814:	stur	w9, [x29, #-140]
   1a818:	ldur	x10, [x29, #-16]
   1a81c:	add	x0, x10, #0x20
   1a820:	ldur	x10, [x29, #-16]
   1a824:	add	x1, x10, #0x20
   1a828:	mov	w2, w8
   1a82c:	bl	4c60 <mpfr_neg@plt>
   1a830:	b	1a850 <mpc_sqrt@@Base+0x444>
   1a834:	ldur	x8, [x29, #-16]
   1a838:	add	x0, x8, #0x20
   1a83c:	ldur	w9, [x29, #-28]
   1a840:	asr	w2, w9, #4
   1a844:	sub	x1, x29, #0x48
   1a848:	bl	5450 <mpfr_sqrt@plt>
   1a84c:	stur	w0, [x29, #-140]
   1a850:	ldur	x8, [x29, #-16]
   1a854:	stur	x8, [x29, #-240]
   1a858:	ldur	x8, [x29, #-240]
   1a85c:	mov	w9, #0x1                   	// #1
   1a860:	str	w9, [x8, #8]
   1a864:	ldur	x8, [x29, #-240]
   1a868:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a86c:	str	x10, [x8, #16]
   1a870:	stur	wzr, [x29, #-244]
   1a874:	sub	x0, x29, #0x48
   1a878:	bl	4e30 <mpfr_clear@plt>
   1a87c:	ldur	w9, [x29, #-140]
   1a880:	cmp	w9, #0x0
   1a884:	cset	w9, ge  // ge = tcont
   1a888:	tbnz	w9, #0, 1a898 <mpc_sqrt@@Base+0x48c>
   1a88c:	mov	w8, #0x2                   	// #2
   1a890:	str	w8, [sp, #172]
   1a894:	b	1a8b0 <mpc_sqrt@@Base+0x4a4>
   1a898:	ldur	w8, [x29, #-140]
   1a89c:	mov	w9, wzr
   1a8a0:	mov	w10, #0x1                   	// #1
   1a8a4:	cmp	w8, #0x0
   1a8a8:	csel	w8, w9, w10, eq  // eq = none
   1a8ac:	str	w8, [sp, #172]
   1a8b0:	ldr	w8, [sp, #172]
   1a8b4:	mov	w9, wzr
   1a8b8:	orr	w8, w9, w8, lsl #2
   1a8bc:	stur	w8, [x29, #-4]
   1a8c0:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1a8c4:	ldur	w8, [x29, #-160]
   1a8c8:	cbnz	w8, 1aa98 <mpc_sqrt@@Base+0x68c>
   1a8cc:	ldur	x8, [x29, #-24]
   1a8d0:	ldr	q0, [x8, #32]
   1a8d4:	add	x9, sp, #0xe0
   1a8d8:	str	q0, [sp, #224]
   1a8dc:	ldr	q0, [x8, #48]
   1a8e0:	str	q0, [sp, #240]
   1a8e4:	mov	x0, x9
   1a8e8:	mov	x1, x9
   1a8ec:	mov	x2, #0x1                   	// #1
   1a8f0:	mov	w10, wzr
   1a8f4:	mov	w3, w10
   1a8f8:	bl	5420 <mpfr_div_2ui@plt>
   1a8fc:	ldur	w10, [x29, #-164]
   1a900:	cmp	w10, #0x0
   1a904:	cset	w10, le
   1a908:	tbnz	w10, #0, 1a94c <mpc_sqrt@@Base+0x540>
   1a90c:	ldur	x0, [x29, #-16]
   1a910:	ldur	w8, [x29, #-28]
   1a914:	and	w2, w8, #0xf
   1a918:	add	x9, sp, #0xe0
   1a91c:	mov	x1, x9
   1a920:	str	x9, [sp, #160]
   1a924:	bl	5450 <mpfr_sqrt@plt>
   1a928:	stur	w0, [x29, #-140]
   1a92c:	ldur	x9, [x29, #-16]
   1a930:	add	x0, x9, #0x20
   1a934:	ldur	w8, [x29, #-28]
   1a938:	asr	w2, w8, #4
   1a93c:	ldr	x1, [sp, #160]
   1a940:	bl	5450 <mpfr_sqrt@plt>
   1a944:	stur	w0, [x29, #-144]
   1a948:	b	1aa14 <mpc_sqrt@@Base+0x608>
   1a94c:	add	x8, sp, #0xe0
   1a950:	mov	x0, x8
   1a954:	mov	x1, x8
   1a958:	mov	w9, wzr
   1a95c:	mov	w2, w9
   1a960:	str	x8, [sp, #152]
   1a964:	bl	4c60 <mpfr_neg@plt>
   1a968:	ldur	x8, [x29, #-16]
   1a96c:	ldur	w9, [x29, #-28]
   1a970:	and	w2, w9, #0xf
   1a974:	mov	x0, x8
   1a978:	ldr	x1, [sp, #152]
   1a97c:	bl	5450 <mpfr_sqrt@plt>
   1a980:	stur	w0, [x29, #-140]
   1a984:	ldur	x8, [x29, #-16]
   1a988:	add	x0, x8, #0x20
   1a98c:	ldur	w9, [x29, #-28]
   1a990:	asr	w9, w9, #4
   1a994:	cmp	w9, #0x2
   1a998:	str	x0, [sp, #144]
   1a99c:	b.ne	1a9ac <mpc_sqrt@@Base+0x5a0>  // b.any
   1a9a0:	mov	w8, #0x3                   	// #3
   1a9a4:	str	w8, [sp, #140]
   1a9a8:	b	1a9dc <mpc_sqrt@@Base+0x5d0>
   1a9ac:	ldur	w8, [x29, #-28]
   1a9b0:	asr	w8, w8, #4
   1a9b4:	cmp	w8, #0x3
   1a9b8:	b.ne	1a9c8 <mpc_sqrt@@Base+0x5bc>  // b.any
   1a9bc:	mov	w8, #0x2                   	// #2
   1a9c0:	str	w8, [sp, #136]
   1a9c4:	b	1a9d4 <mpc_sqrt@@Base+0x5c8>
   1a9c8:	ldur	w8, [x29, #-28]
   1a9cc:	asr	w8, w8, #4
   1a9d0:	str	w8, [sp, #136]
   1a9d4:	ldr	w8, [sp, #136]
   1a9d8:	str	w8, [sp, #140]
   1a9dc:	ldr	w8, [sp, #140]
   1a9e0:	ldr	x0, [sp, #144]
   1a9e4:	add	x1, sp, #0xe0
   1a9e8:	mov	w2, w8
   1a9ec:	bl	5450 <mpfr_sqrt@plt>
   1a9f0:	mov	w8, wzr
   1a9f4:	subs	w9, w8, w0
   1a9f8:	stur	w9, [x29, #-144]
   1a9fc:	ldur	x10, [x29, #-16]
   1aa00:	add	x0, x10, #0x20
   1aa04:	ldur	x10, [x29, #-16]
   1aa08:	add	x1, x10, #0x20
   1aa0c:	mov	w2, w8
   1aa10:	bl	4c60 <mpfr_neg@plt>
   1aa14:	ldur	w8, [x29, #-140]
   1aa18:	cmp	w8, #0x0
   1aa1c:	cset	w8, ge  // ge = tcont
   1aa20:	tbnz	w8, #0, 1aa30 <mpc_sqrt@@Base+0x624>
   1aa24:	mov	w8, #0x2                   	// #2
   1aa28:	str	w8, [sp, #132]
   1aa2c:	b	1aa48 <mpc_sqrt@@Base+0x63c>
   1aa30:	ldur	w8, [x29, #-140]
   1aa34:	mov	w9, wzr
   1aa38:	mov	w10, #0x1                   	// #1
   1aa3c:	cmp	w8, #0x0
   1aa40:	csel	w8, w9, w10, eq  // eq = none
   1aa44:	str	w8, [sp, #132]
   1aa48:	ldr	w8, [sp, #132]
   1aa4c:	ldur	w9, [x29, #-144]
   1aa50:	cmp	w9, #0x0
   1aa54:	cset	w9, ge  // ge = tcont
   1aa58:	str	w8, [sp, #128]
   1aa5c:	tbnz	w9, #0, 1aa6c <mpc_sqrt@@Base+0x660>
   1aa60:	mov	w8, #0x2                   	// #2
   1aa64:	str	w8, [sp, #124]
   1aa68:	b	1aa84 <mpc_sqrt@@Base+0x678>
   1aa6c:	ldur	w8, [x29, #-144]
   1aa70:	mov	w9, wzr
   1aa74:	mov	w10, #0x1                   	// #1
   1aa78:	cmp	w8, #0x0
   1aa7c:	csel	w8, w9, w10, eq  // eq = none
   1aa80:	str	w8, [sp, #124]
   1aa84:	ldr	w8, [sp, #124]
   1aa88:	ldr	w9, [sp, #128]
   1aa8c:	orr	w8, w9, w8, lsl #2
   1aa90:	stur	w8, [x29, #-4]
   1aa94:	b	1b5c4 <mpc_sqrt@@Base+0x11b8>
   1aa98:	ldur	x8, [x29, #-16]
   1aa9c:	ldr	x8, [x8]
   1aaa0:	ldur	x9, [x29, #-16]
   1aaa4:	ldr	x9, [x9, #32]
   1aaa8:	cmp	x8, x9
   1aaac:	b.le	1aac0 <mpc_sqrt@@Base+0x6b4>
   1aab0:	ldur	x8, [x29, #-16]
   1aab4:	ldr	x8, [x8]
   1aab8:	str	x8, [sp, #112]
   1aabc:	b	1aacc <mpc_sqrt@@Base+0x6c0>
   1aac0:	ldur	x8, [x29, #-16]
   1aac4:	ldr	x8, [x8, #32]
   1aac8:	str	x8, [sp, #112]
   1aacc:	ldr	x8, [sp, #112]
   1aad0:	stur	x8, [x29, #-136]
   1aad4:	sub	x0, x29, #0x48
   1aad8:	bl	4b80 <mpfr_init@plt>
   1aadc:	sub	x0, x29, #0x68
   1aae0:	bl	4b80 <mpfr_init@plt>
   1aae4:	ldur	w9, [x29, #-160]
   1aae8:	cmp	w9, #0x0
   1aaec:	cset	w9, le
   1aaf0:	tbnz	w9, #0, 1ab4c <mpc_sqrt@@Base+0x740>
   1aaf4:	ldur	w8, [x29, #-28]
   1aaf8:	and	w8, w8, #0xf
   1aafc:	stur	w8, [x29, #-108]
   1ab00:	ldur	x9, [x29, #-16]
   1ab04:	ldr	x9, [x9]
   1ab08:	stur	x9, [x29, #-120]
   1ab0c:	ldur	w8, [x29, #-28]
   1ab10:	asr	w8, w8, #4
   1ab14:	stur	w8, [x29, #-112]
   1ab18:	ldur	w8, [x29, #-112]
   1ab1c:	cmp	w8, #0x1
   1ab20:	b.ne	1ab3c <mpc_sqrt@@Base+0x730>  // b.any
   1ab24:	ldur	w8, [x29, #-164]
   1ab28:	mov	w9, #0x2                   	// #2
   1ab2c:	mov	w10, #0x3                   	// #3
   1ab30:	cmp	w8, #0x0
   1ab34:	csel	w8, w10, w9, gt
   1ab38:	stur	w8, [x29, #-112]
   1ab3c:	ldur	x8, [x29, #-16]
   1ab40:	ldr	x8, [x8, #32]
   1ab44:	stur	x8, [x29, #-128]
   1ab48:	b	1ac60 <mpc_sqrt@@Base+0x854>
   1ab4c:	ldur	x8, [x29, #-16]
   1ab50:	ldr	x8, [x8, #32]
   1ab54:	stur	x8, [x29, #-120]
   1ab58:	ldur	x8, [x29, #-16]
   1ab5c:	ldr	x8, [x8]
   1ab60:	stur	x8, [x29, #-128]
   1ab64:	ldur	w9, [x29, #-164]
   1ab68:	cmp	w9, #0x0
   1ab6c:	cset	w9, le
   1ab70:	tbnz	w9, #0, 1aba4 <mpc_sqrt@@Base+0x798>
   1ab74:	ldur	w8, [x29, #-28]
   1ab78:	asr	w8, w8, #4
   1ab7c:	stur	w8, [x29, #-108]
   1ab80:	ldur	w8, [x29, #-28]
   1ab84:	and	w8, w8, #0xf
   1ab88:	stur	w8, [x29, #-112]
   1ab8c:	ldur	w8, [x29, #-112]
   1ab90:	cmp	w8, #0x1
   1ab94:	b.ne	1aba0 <mpc_sqrt@@Base+0x794>  // b.any
   1ab98:	mov	w8, #0x3                   	// #3
   1ab9c:	stur	w8, [x29, #-112]
   1aba0:	b	1ac60 <mpc_sqrt@@Base+0x854>
   1aba4:	ldur	w8, [x29, #-28]
   1aba8:	asr	w8, w8, #4
   1abac:	cmp	w8, #0x2
   1abb0:	b.ne	1abc0 <mpc_sqrt@@Base+0x7b4>  // b.any
   1abb4:	mov	w8, #0x3                   	// #3
   1abb8:	str	w8, [sp, #108]
   1abbc:	b	1abf0 <mpc_sqrt@@Base+0x7e4>
   1abc0:	ldur	w8, [x29, #-28]
   1abc4:	asr	w8, w8, #4
   1abc8:	cmp	w8, #0x3
   1abcc:	b.ne	1abdc <mpc_sqrt@@Base+0x7d0>  // b.any
   1abd0:	mov	w8, #0x2                   	// #2
   1abd4:	str	w8, [sp, #104]
   1abd8:	b	1abe8 <mpc_sqrt@@Base+0x7dc>
   1abdc:	ldur	w8, [x29, #-28]
   1abe0:	asr	w8, w8, #4
   1abe4:	str	w8, [sp, #104]
   1abe8:	ldr	w8, [sp, #104]
   1abec:	str	w8, [sp, #108]
   1abf0:	ldr	w8, [sp, #108]
   1abf4:	stur	w8, [x29, #-108]
   1abf8:	ldur	w8, [x29, #-28]
   1abfc:	and	w8, w8, #0xf
   1ac00:	cmp	w8, #0x2
   1ac04:	b.ne	1ac14 <mpc_sqrt@@Base+0x808>  // b.any
   1ac08:	mov	w8, #0x3                   	// #3
   1ac0c:	str	w8, [sp, #100]
   1ac10:	b	1ac44 <mpc_sqrt@@Base+0x838>
   1ac14:	ldur	w8, [x29, #-28]
   1ac18:	and	w8, w8, #0xf
   1ac1c:	cmp	w8, #0x3
   1ac20:	b.ne	1ac30 <mpc_sqrt@@Base+0x824>  // b.any
   1ac24:	mov	w8, #0x2                   	// #2
   1ac28:	str	w8, [sp, #96]
   1ac2c:	b	1ac3c <mpc_sqrt@@Base+0x830>
   1ac30:	ldur	w8, [x29, #-28]
   1ac34:	and	w8, w8, #0xf
   1ac38:	str	w8, [sp, #96]
   1ac3c:	ldr	w8, [sp, #96]
   1ac40:	str	w8, [sp, #100]
   1ac44:	ldr	w8, [sp, #100]
   1ac48:	stur	w8, [x29, #-112]
   1ac4c:	ldur	w8, [x29, #-112]
   1ac50:	cmp	w8, #0x1
   1ac54:	b.ne	1ac60 <mpc_sqrt@@Base+0x854>  // b.any
   1ac58:	mov	w8, #0x2                   	// #2
   1ac5c:	stur	w8, [x29, #-112]
   1ac60:	ldur	w8, [x29, #-156]
   1ac64:	add	w8, w8, #0x1
   1ac68:	stur	w8, [x29, #-156]
   1ac6c:	ldur	w8, [x29, #-156]
   1ac70:	cmp	w8, #0x2
   1ac74:	b.gt	1ac8c <mpc_sqrt@@Base+0x880>
   1ac78:	ldur	x0, [x29, #-136]
   1ac7c:	bl	4de0 <mpc_ceil_log2@plt>
   1ac80:	add	x8, x0, #0x4
   1ac84:	str	x8, [sp, #88]
   1ac88:	b	1ac9c <mpc_sqrt@@Base+0x890>
   1ac8c:	ldur	x8, [x29, #-136]
   1ac90:	mov	x9, #0x2                   	// #2
   1ac94:	sdiv	x8, x8, x9
   1ac98:	str	x8, [sp, #88]
   1ac9c:	ldr	x8, [sp, #88]
   1aca0:	ldur	x9, [x29, #-136]
   1aca4:	add	x8, x9, x8
   1aca8:	stur	x8, [x29, #-136]
   1acac:	ldur	x1, [x29, #-136]
   1acb0:	sub	x8, x29, #0x48
   1acb4:	mov	x0, x8
   1acb8:	str	x8, [sp, #80]
   1acbc:	bl	4d40 <mpfr_set_prec@plt>
   1acc0:	ldur	x1, [x29, #-136]
   1acc4:	sub	x0, x29, #0x68
   1acc8:	bl	4d40 <mpfr_set_prec@plt>
   1accc:	ldur	x1, [x29, #-24]
   1acd0:	ldr	x0, [sp, #80]
   1acd4:	mov	w2, #0x3                   	// #3
   1acd8:	bl	52a0 <mpc_abs@plt>
   1acdc:	stur	w0, [x29, #-140]
   1ace0:	ldur	w10, [x29, #-160]
   1ace4:	cmp	w10, #0x0
   1ace8:	cset	w10, ge  // ge = tcont
   1acec:	tbnz	w10, #0, 1ad18 <mpc_sqrt@@Base+0x90c>
   1acf0:	ldur	x2, [x29, #-24]
   1acf4:	sub	x8, x29, #0x48
   1acf8:	mov	x0, x8
   1acfc:	mov	x1, x8
   1ad00:	mov	w3, #0x3                   	// #3
   1ad04:	bl	4b40 <mpfr_sub@plt>
   1ad08:	ldur	w9, [x29, #-140]
   1ad0c:	orr	w9, w9, w0
   1ad10:	stur	w9, [x29, #-140]
   1ad14:	b	1ad3c <mpc_sqrt@@Base+0x930>
   1ad18:	ldur	x2, [x29, #-24]
   1ad1c:	sub	x8, x29, #0x48
   1ad20:	mov	x0, x8
   1ad24:	mov	x1, x8
   1ad28:	mov	w3, #0x3                   	// #3
   1ad2c:	bl	4f50 <mpfr_add@plt>
   1ad30:	ldur	w9, [x29, #-140]
   1ad34:	orr	w9, w9, w0
   1ad38:	stur	w9, [x29, #-140]
   1ad3c:	sub	x8, x29, #0x48
   1ad40:	mov	x0, x8
   1ad44:	mov	x1, x8
   1ad48:	mov	x2, #0x1                   	// #1
   1ad4c:	mov	w9, #0x3                   	// #3
   1ad50:	mov	w3, w9
   1ad54:	str	x8, [sp, #72]
   1ad58:	str	w9, [sp, #68]
   1ad5c:	bl	5420 <mpfr_div_2ui@plt>
   1ad60:	ldur	w9, [x29, #-140]
   1ad64:	orr	w9, w9, w0
   1ad68:	stur	w9, [x29, #-140]
   1ad6c:	ldr	x0, [sp, #72]
   1ad70:	ldr	x1, [sp, #72]
   1ad74:	ldr	w2, [sp, #68]
   1ad78:	bl	5450 <mpfr_sqrt@plt>
   1ad7c:	ldur	w9, [x29, #-140]
   1ad80:	orr	w9, w9, w0
   1ad84:	stur	w9, [x29, #-140]
   1ad88:	ldr	x0, [sp, #72]
   1ad8c:	bl	5490 <mpfr_min_prec@plt>
   1ad90:	ldur	x8, [x29, #-120]
   1ad94:	cmp	x0, x8
   1ad98:	cset	w9, le
   1ad9c:	and	w9, w9, #0x1
   1ada0:	stur	w9, [x29, #-168]
   1ada4:	ldur	w9, [x29, #-168]
   1ada8:	cbnz	w9, 1ade4 <mpc_sqrt@@Base+0x9d8>
   1adac:	ldur	x8, [x29, #-136]
   1adb0:	subs	x1, x8, #0x2
   1adb4:	ldur	x8, [x29, #-120]
   1adb8:	ldur	w9, [x29, #-108]
   1adbc:	cmp	w9, #0x0
   1adc0:	cset	w9, eq  // eq = none
   1adc4:	and	w9, w9, #0x1
   1adc8:	add	x4, x8, w9, sxtw
   1adcc:	sub	x0, x29, #0x48
   1add0:	mov	w2, #0x3                   	// #3
   1add4:	mov	w3, #0x2                   	// #2
   1add8:	bl	5540 <mpfr_can_round@plt>
   1addc:	stur	w0, [x29, #-32]
   1ade0:	b	1ae38 <mpc_sqrt@@Base+0xa2c>
   1ade4:	ldur	w8, [x29, #-108]
   1ade8:	cbnz	w8, 1ae14 <mpc_sqrt@@Base+0xa08>
   1adec:	ldur	x8, [x29, #-136]
   1adf0:	subs	x1, x8, #0x2
   1adf4:	ldur	x4, [x29, #-120]
   1adf8:	sub	x0, x29, #0x48
   1adfc:	mov	w2, #0x3                   	// #3
   1ae00:	mov	w9, wzr
   1ae04:	mov	w3, w9
   1ae08:	bl	5540 <mpfr_can_round@plt>
   1ae0c:	stur	w0, [x29, #-32]
   1ae10:	b	1ae38 <mpc_sqrt@@Base+0xa2c>
   1ae14:	ldur	x8, [x29, #-136]
   1ae18:	subs	x1, x8, #0x2
   1ae1c:	ldur	x4, [x29, #-120]
   1ae20:	sub	x0, x29, #0x48
   1ae24:	mov	w9, #0x3                   	// #3
   1ae28:	mov	w2, w9
   1ae2c:	mov	w3, w9
   1ae30:	bl	5540 <mpfr_can_round@plt>
   1ae34:	stur	w0, [x29, #-32]
   1ae38:	ldur	w8, [x29, #-140]
   1ae3c:	cbz	w8, 1ae48 <mpc_sqrt@@Base+0xa3c>
   1ae40:	ldur	w8, [x29, #-32]
   1ae44:	cbz	w8, 1af60 <mpc_sqrt@@Base+0xb54>
   1ae48:	ldur	x8, [x29, #-24]
   1ae4c:	add	x1, x8, #0x20
   1ae50:	ldur	w3, [x29, #-180]
   1ae54:	sub	x0, x29, #0x68
   1ae58:	sub	x2, x29, #0x48
   1ae5c:	bl	5250 <mpfr_div@plt>
   1ae60:	stur	w0, [x29, #-144]
   1ae64:	ldur	w9, [x29, #-144]
   1ae68:	cbnz	w9, 1ae8c <mpc_sqrt@@Base+0xa80>
   1ae6c:	ldur	w8, [x29, #-140]
   1ae70:	cbz	w8, 1ae8c <mpc_sqrt@@Base+0xa80>
   1ae74:	ldur	w8, [x29, #-176]
   1ae78:	mov	w9, #0xffffffff            	// #-1
   1ae7c:	mov	w10, #0x1                   	// #1
   1ae80:	cmp	w8, #0x0
   1ae84:	csel	w8, w9, w10, ne  // ne = any
   1ae88:	stur	w8, [x29, #-144]
   1ae8c:	ldur	w3, [x29, #-180]
   1ae90:	sub	x8, x29, #0x68
   1ae94:	mov	x0, x8
   1ae98:	mov	x1, x8
   1ae9c:	mov	x2, #0x1                   	// #1
   1aea0:	str	x8, [sp, #56]
   1aea4:	bl	5420 <mpfr_div_2ui@plt>
   1aea8:	ldur	w9, [x29, #-144]
   1aeac:	orr	w9, w9, w0
   1aeb0:	stur	w9, [x29, #-144]
   1aeb4:	ldr	x0, [sp, #56]
   1aeb8:	bl	5490 <mpfr_min_prec@plt>
   1aebc:	ldur	x8, [x29, #-128]
   1aec0:	cmp	x0, x8
   1aec4:	cset	w9, le
   1aec8:	and	w9, w9, #0x1
   1aecc:	stur	w9, [x29, #-172]
   1aed0:	ldur	w9, [x29, #-172]
   1aed4:	cbnz	w9, 1af10 <mpc_sqrt@@Base+0xb04>
   1aed8:	ldur	x8, [x29, #-136]
   1aedc:	subs	x1, x8, #0x3
   1aee0:	ldur	w2, [x29, #-180]
   1aee4:	ldur	x8, [x29, #-128]
   1aee8:	ldur	w9, [x29, #-112]
   1aeec:	cmp	w9, #0x0
   1aef0:	cset	w9, eq  // eq = none
   1aef4:	and	w9, w9, #0x1
   1aef8:	add	x4, x8, w9, sxtw
   1aefc:	sub	x0, x29, #0x68
   1af00:	mov	w3, #0x1                   	// #1
   1af04:	bl	5540 <mpfr_can_round@plt>
   1af08:	stur	w0, [x29, #-36]
   1af0c:	b	1af60 <mpc_sqrt@@Base+0xb54>
   1af10:	ldur	w8, [x29, #-112]
   1af14:	cbnz	w8, 1af40 <mpc_sqrt@@Base+0xb34>
   1af18:	ldur	x8, [x29, #-136]
   1af1c:	subs	x1, x8, #0x3
   1af20:	ldur	w2, [x29, #-180]
   1af24:	ldur	x4, [x29, #-128]
   1af28:	sub	x0, x29, #0x68
   1af2c:	mov	w9, wzr
   1af30:	mov	w3, w9
   1af34:	bl	5540 <mpfr_can_round@plt>
   1af38:	stur	w0, [x29, #-36]
   1af3c:	b	1af60 <mpc_sqrt@@Base+0xb54>
   1af40:	ldur	x8, [x29, #-136]
   1af44:	subs	x1, x8, #0x3
   1af48:	ldur	w2, [x29, #-180]
   1af4c:	ldur	w3, [x29, #-180]
   1af50:	ldur	x4, [x29, #-128]
   1af54:	sub	x0, x29, #0x68
   1af58:	bl	5540 <mpfr_can_round@plt>
   1af5c:	stur	w0, [x29, #-36]
   1af60:	ldur	w8, [x29, #-140]
   1af64:	cbz	w8, 1af78 <mpc_sqrt@@Base+0xb6c>
   1af68:	ldur	w8, [x29, #-32]
   1af6c:	mov	w9, #0x1                   	// #1
   1af70:	str	w9, [sp, #52]
   1af74:	cbz	w8, 1afa4 <mpc_sqrt@@Base+0xb98>
   1af78:	ldur	w8, [x29, #-144]
   1af7c:	mov	w9, #0x0                   	// #0
   1af80:	str	w9, [sp, #48]
   1af84:	cbz	w8, 1af9c <mpc_sqrt@@Base+0xb90>
   1af88:	ldur	w8, [x29, #-36]
   1af8c:	cmp	w8, #0x0
   1af90:	cset	w8, ne  // ne = any
   1af94:	eor	w8, w8, #0x1
   1af98:	str	w8, [sp, #48]
   1af9c:	ldr	w8, [sp, #48]
   1afa0:	str	w8, [sp, #52]
   1afa4:	ldr	w8, [sp, #52]
   1afa8:	tbnz	w8, #0, 1ac60 <mpc_sqrt@@Base+0x854>
   1afac:	ldur	w8, [x29, #-160]
   1afb0:	cmp	w8, #0x0
   1afb4:	cset	w8, le
   1afb8:	tbnz	w8, #0, 1affc <mpc_sqrt@@Base+0xbf0>
   1afbc:	ldur	x0, [x29, #-16]
   1afc0:	ldur	w8, [x29, #-28]
   1afc4:	and	w2, w8, #0xf
   1afc8:	sub	x1, x29, #0x48
   1afcc:	ldur	w3, [x29, #-64]
   1afd0:	bl	52d0 <mpfr_set4@plt>
   1afd4:	stur	w0, [x29, #-148]
   1afd8:	ldur	x9, [x29, #-16]
   1afdc:	add	x0, x9, #0x20
   1afe0:	ldur	w8, [x29, #-28]
   1afe4:	asr	w2, w8, #4
   1afe8:	sub	x1, x29, #0x68
   1afec:	ldur	w3, [x29, #-96]
   1aff0:	bl	52d0 <mpfr_set4@plt>
   1aff4:	stur	w0, [x29, #-152]
   1aff8:	b	1b080 <mpc_sqrt@@Base+0xc74>
   1affc:	ldur	w8, [x29, #-164]
   1b000:	cmp	w8, #0x0
   1b004:	cset	w8, le
   1b008:	tbnz	w8, #0, 1b04c <mpc_sqrt@@Base+0xc40>
   1b00c:	ldur	x0, [x29, #-16]
   1b010:	ldur	w8, [x29, #-28]
   1b014:	and	w2, w8, #0xf
   1b018:	sub	x1, x29, #0x68
   1b01c:	ldur	w3, [x29, #-96]
   1b020:	bl	52d0 <mpfr_set4@plt>
   1b024:	stur	w0, [x29, #-148]
   1b028:	ldur	x9, [x29, #-16]
   1b02c:	add	x0, x9, #0x20
   1b030:	ldur	w8, [x29, #-28]
   1b034:	asr	w2, w8, #4
   1b038:	sub	x1, x29, #0x48
   1b03c:	ldur	w3, [x29, #-64]
   1b040:	bl	52d0 <mpfr_set4@plt>
   1b044:	stur	w0, [x29, #-152]
   1b048:	b	1b080 <mpc_sqrt@@Base+0xc74>
   1b04c:	ldur	x0, [x29, #-16]
   1b050:	ldur	w8, [x29, #-28]
   1b054:	and	w2, w8, #0xf
   1b058:	sub	x1, x29, #0x68
   1b05c:	bl	4c60 <mpfr_neg@plt>
   1b060:	stur	w0, [x29, #-148]
   1b064:	ldur	x9, [x29, #-16]
   1b068:	add	x0, x9, #0x20
   1b06c:	ldur	w8, [x29, #-28]
   1b070:	asr	w2, w8, #4
   1b074:	sub	x1, x29, #0x48
   1b078:	bl	4c60 <mpfr_neg@plt>
   1b07c:	stur	w0, [x29, #-152]
   1b080:	ldur	w8, [x29, #-168]
   1b084:	cbz	w8, 1b2cc <mpc_sqrt@@Base+0xec0>
   1b088:	ldur	w8, [x29, #-140]
   1b08c:	cbz	w8, 1b2cc <mpc_sqrt@@Base+0xec0>
   1b090:	ldur	w8, [x29, #-108]
   1b094:	cbnz	w8, 1b0e4 <mpc_sqrt@@Base+0xcd8>
   1b098:	ldur	w8, [x29, #-160]
   1b09c:	cmp	w8, #0x0
   1b0a0:	cset	w8, le
   1b0a4:	tbnz	w8, #0, 1b0b4 <mpc_sqrt@@Base+0xca8>
   1b0a8:	ldur	w8, [x29, #-140]
   1b0ac:	stur	w8, [x29, #-148]
   1b0b0:	b	1b0e0 <mpc_sqrt@@Base+0xcd4>
   1b0b4:	ldur	w8, [x29, #-164]
   1b0b8:	cmp	w8, #0x0
   1b0bc:	cset	w8, le
   1b0c0:	tbnz	w8, #0, 1b0d0 <mpc_sqrt@@Base+0xcc4>
   1b0c4:	ldur	w8, [x29, #-140]
   1b0c8:	stur	w8, [x29, #-152]
   1b0cc:	b	1b0e0 <mpc_sqrt@@Base+0xcd4>
   1b0d0:	ldur	w8, [x29, #-140]
   1b0d4:	mov	w9, wzr
   1b0d8:	subs	w8, w9, w8
   1b0dc:	stur	w8, [x29, #-152]
   1b0e0:	b	1b2cc <mpc_sqrt@@Base+0xec0>
   1b0e4:	ldur	w8, [x29, #-160]
   1b0e8:	cmp	w8, #0x0
   1b0ec:	cset	w8, le
   1b0f0:	tbnz	w8, #0, 1b188 <mpc_sqrt@@Base+0xd7c>
   1b0f4:	ldur	w8, [x29, #-108]
   1b0f8:	cmp	w8, #0x2
   1b0fc:	b.ne	1b17c <mpc_sqrt@@Base+0xd70>  // b.any
   1b100:	ldur	x8, [x29, #-16]
   1b104:	ldr	x8, [x8, #16]
   1b108:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1b10c:	cmp	x8, x9
   1b110:	b.ge	1b140 <mpc_sqrt@@Base+0xd34>  // b.tcont
   1b114:	ldur	x8, [x29, #-16]
   1b118:	ldr	x8, [x8, #16]
   1b11c:	mov	x9, #0x2                   	// #2
   1b120:	movk	x9, #0x8000, lsl #48
   1b124:	cmp	x8, x9
   1b128:	b.ne	1b134 <mpc_sqrt@@Base+0xd28>  // b.any
   1b12c:	bl	4be0 <mpfr_set_erangeflag@plt>
   1b130:	b	1b134 <mpc_sqrt@@Base+0xd28>
   1b134:	mov	w8, wzr
   1b138:	str	w8, [sp, #44]
   1b13c:	b	1b14c <mpc_sqrt@@Base+0xd40>
   1b140:	ldur	x8, [x29, #-16]
   1b144:	ldr	w9, [x8, #8]
   1b148:	str	w9, [sp, #44]
   1b14c:	ldr	w8, [sp, #44]
   1b150:	cmp	w8, #0x0
   1b154:	cset	w8, le
   1b158:	tbnz	w8, #0, 1b168 <mpc_sqrt@@Base+0xd5c>
   1b15c:	ldur	x0, [x29, #-16]
   1b160:	bl	4ee0 <mpfr_nextabove@plt>
   1b164:	b	1b170 <mpc_sqrt@@Base+0xd64>
   1b168:	ldur	x0, [x29, #-16]
   1b16c:	bl	4c80 <mpfr_nextbelow@plt>
   1b170:	mov	w8, #0x1                   	// #1
   1b174:	stur	w8, [x29, #-148]
   1b178:	b	1b184 <mpc_sqrt@@Base+0xd78>
   1b17c:	mov	w8, #0xffffffff            	// #-1
   1b180:	stur	w8, [x29, #-148]
   1b184:	b	1b2cc <mpc_sqrt@@Base+0xec0>
   1b188:	ldur	w8, [x29, #-164]
   1b18c:	cmp	w8, #0x0
   1b190:	cset	w8, le
   1b194:	tbnz	w8, #0, 1b234 <mpc_sqrt@@Base+0xe28>
   1b198:	ldur	w8, [x29, #-108]
   1b19c:	cmp	w8, #0x2
   1b1a0:	b.ne	1b228 <mpc_sqrt@@Base+0xe1c>  // b.any
   1b1a4:	ldur	x8, [x29, #-16]
   1b1a8:	ldr	x8, [x8, #48]
   1b1ac:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1b1b0:	cmp	x8, x9
   1b1b4:	b.ge	1b1e4 <mpc_sqrt@@Base+0xdd8>  // b.tcont
   1b1b8:	ldur	x8, [x29, #-16]
   1b1bc:	ldr	x8, [x8, #48]
   1b1c0:	mov	x9, #0x2                   	// #2
   1b1c4:	movk	x9, #0x8000, lsl #48
   1b1c8:	cmp	x8, x9
   1b1cc:	b.ne	1b1d8 <mpc_sqrt@@Base+0xdcc>  // b.any
   1b1d0:	bl	4be0 <mpfr_set_erangeflag@plt>
   1b1d4:	b	1b1d8 <mpc_sqrt@@Base+0xdcc>
   1b1d8:	mov	w8, wzr
   1b1dc:	str	w8, [sp, #40]
   1b1e0:	b	1b1f0 <mpc_sqrt@@Base+0xde4>
   1b1e4:	ldur	x8, [x29, #-16]
   1b1e8:	ldr	w9, [x8, #40]
   1b1ec:	str	w9, [sp, #40]
   1b1f0:	ldr	w8, [sp, #40]
   1b1f4:	cmp	w8, #0x0
   1b1f8:	cset	w8, le
   1b1fc:	tbnz	w8, #0, 1b210 <mpc_sqrt@@Base+0xe04>
   1b200:	ldur	x8, [x29, #-16]
   1b204:	add	x0, x8, #0x20
   1b208:	bl	4ee0 <mpfr_nextabove@plt>
   1b20c:	b	1b21c <mpc_sqrt@@Base+0xe10>
   1b210:	ldur	x8, [x29, #-16]
   1b214:	add	x0, x8, #0x20
   1b218:	bl	4c80 <mpfr_nextbelow@plt>
   1b21c:	mov	w8, #0x1                   	// #1
   1b220:	stur	w8, [x29, #-152]
   1b224:	b	1b230 <mpc_sqrt@@Base+0xe24>
   1b228:	mov	w8, #0xffffffff            	// #-1
   1b22c:	stur	w8, [x29, #-152]
   1b230:	b	1b2cc <mpc_sqrt@@Base+0xec0>
   1b234:	ldur	w8, [x29, #-108]
   1b238:	cmp	w8, #0x2
   1b23c:	b.ne	1b2c4 <mpc_sqrt@@Base+0xeb8>  // b.any
   1b240:	ldur	x8, [x29, #-16]
   1b244:	ldr	x8, [x8, #48]
   1b248:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1b24c:	cmp	x8, x9
   1b250:	b.ge	1b280 <mpc_sqrt@@Base+0xe74>  // b.tcont
   1b254:	ldur	x8, [x29, #-16]
   1b258:	ldr	x8, [x8, #48]
   1b25c:	mov	x9, #0x2                   	// #2
   1b260:	movk	x9, #0x8000, lsl #48
   1b264:	cmp	x8, x9
   1b268:	b.ne	1b274 <mpc_sqrt@@Base+0xe68>  // b.any
   1b26c:	bl	4be0 <mpfr_set_erangeflag@plt>
   1b270:	b	1b274 <mpc_sqrt@@Base+0xe68>
   1b274:	mov	w8, wzr
   1b278:	str	w8, [sp, #36]
   1b27c:	b	1b28c <mpc_sqrt@@Base+0xe80>
   1b280:	ldur	x8, [x29, #-16]
   1b284:	ldr	w9, [x8, #40]
   1b288:	str	w9, [sp, #36]
   1b28c:	ldr	w8, [sp, #36]
   1b290:	cmp	w8, #0x0
   1b294:	cset	w8, le
   1b298:	tbnz	w8, #0, 1b2ac <mpc_sqrt@@Base+0xea0>
   1b29c:	ldur	x8, [x29, #-16]
   1b2a0:	add	x0, x8, #0x20
   1b2a4:	bl	4ee0 <mpfr_nextabove@plt>
   1b2a8:	b	1b2b8 <mpc_sqrt@@Base+0xeac>
   1b2ac:	ldur	x8, [x29, #-16]
   1b2b0:	add	x0, x8, #0x20
   1b2b4:	bl	4c80 <mpfr_nextbelow@plt>
   1b2b8:	mov	w8, #0xffffffff            	// #-1
   1b2bc:	stur	w8, [x29, #-152]
   1b2c0:	b	1b2cc <mpc_sqrt@@Base+0xec0>
   1b2c4:	mov	w8, #0x1                   	// #1
   1b2c8:	stur	w8, [x29, #-152]
   1b2cc:	ldur	w8, [x29, #-172]
   1b2d0:	cbz	w8, 1b534 <mpc_sqrt@@Base+0x1128>
   1b2d4:	ldur	w8, [x29, #-144]
   1b2d8:	cbz	w8, 1b534 <mpc_sqrt@@Base+0x1128>
   1b2dc:	ldur	w8, [x29, #-112]
   1b2e0:	cbnz	w8, 1b330 <mpc_sqrt@@Base+0xf24>
   1b2e4:	ldur	w8, [x29, #-160]
   1b2e8:	cmp	w8, #0x0
   1b2ec:	cset	w8, le
   1b2f0:	tbnz	w8, #0, 1b300 <mpc_sqrt@@Base+0xef4>
   1b2f4:	ldur	w8, [x29, #-144]
   1b2f8:	stur	w8, [x29, #-152]
   1b2fc:	b	1b32c <mpc_sqrt@@Base+0xf20>
   1b300:	ldur	w8, [x29, #-164]
   1b304:	cmp	w8, #0x0
   1b308:	cset	w8, le
   1b30c:	tbnz	w8, #0, 1b31c <mpc_sqrt@@Base+0xf10>
   1b310:	ldur	w8, [x29, #-144]
   1b314:	stur	w8, [x29, #-148]
   1b318:	b	1b32c <mpc_sqrt@@Base+0xf20>
   1b31c:	ldur	w8, [x29, #-144]
   1b320:	mov	w9, wzr
   1b324:	subs	w8, w9, w8
   1b328:	stur	w8, [x29, #-148]
   1b32c:	b	1b534 <mpc_sqrt@@Base+0x1128>
   1b330:	ldur	w8, [x29, #-160]
   1b334:	cmp	w8, #0x0
   1b338:	cset	w8, le
   1b33c:	tbnz	w8, #0, 1b3e8 <mpc_sqrt@@Base+0xfdc>
   1b340:	ldur	w8, [x29, #-112]
   1b344:	ldur	w9, [x29, #-180]
   1b348:	cmp	w8, w9
   1b34c:	b.ne	1b35c <mpc_sqrt@@Base+0xf50>  // b.any
   1b350:	ldur	w8, [x29, #-144]
   1b354:	stur	w8, [x29, #-152]
   1b358:	b	1b3e4 <mpc_sqrt@@Base+0xfd8>
   1b35c:	ldur	w8, [x29, #-144]
   1b360:	mov	w9, wzr
   1b364:	subs	w8, w9, w8
   1b368:	stur	w8, [x29, #-152]
   1b36c:	ldur	x10, [x29, #-16]
   1b370:	ldr	x10, [x10, #48]
   1b374:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   1b378:	cmp	x10, x11
   1b37c:	b.ge	1b3ac <mpc_sqrt@@Base+0xfa0>  // b.tcont
   1b380:	ldur	x8, [x29, #-16]
   1b384:	ldr	x8, [x8, #48]
   1b388:	mov	x9, #0x2                   	// #2
   1b38c:	movk	x9, #0x8000, lsl #48
   1b390:	cmp	x8, x9
   1b394:	b.ne	1b3a0 <mpc_sqrt@@Base+0xf94>  // b.any
   1b398:	bl	4be0 <mpfr_set_erangeflag@plt>
   1b39c:	b	1b3a0 <mpc_sqrt@@Base+0xf94>
   1b3a0:	mov	w8, wzr
   1b3a4:	str	w8, [sp, #32]
   1b3a8:	b	1b3b8 <mpc_sqrt@@Base+0xfac>
   1b3ac:	ldur	x8, [x29, #-16]
   1b3b0:	ldr	w9, [x8, #40]
   1b3b4:	str	w9, [sp, #32]
   1b3b8:	ldr	w8, [sp, #32]
   1b3bc:	cmp	w8, #0x0
   1b3c0:	cset	w8, le
   1b3c4:	tbnz	w8, #0, 1b3d8 <mpc_sqrt@@Base+0xfcc>
   1b3c8:	ldur	x8, [x29, #-16]
   1b3cc:	add	x0, x8, #0x20
   1b3d0:	bl	4c80 <mpfr_nextbelow@plt>
   1b3d4:	b	1b3e4 <mpc_sqrt@@Base+0xfd8>
   1b3d8:	ldur	x8, [x29, #-16]
   1b3dc:	add	x0, x8, #0x20
   1b3e0:	bl	4ee0 <mpfr_nextabove@plt>
   1b3e4:	b	1b534 <mpc_sqrt@@Base+0x1128>
   1b3e8:	ldur	w8, [x29, #-164]
   1b3ec:	cmp	w8, #0x0
   1b3f0:	cset	w8, le
   1b3f4:	tbnz	w8, #0, 1b498 <mpc_sqrt@@Base+0x108c>
   1b3f8:	ldur	w8, [x29, #-112]
   1b3fc:	ldur	w9, [x29, #-180]
   1b400:	cmp	w8, w9
   1b404:	b.ne	1b414 <mpc_sqrt@@Base+0x1008>  // b.any
   1b408:	ldur	w8, [x29, #-144]
   1b40c:	stur	w8, [x29, #-148]
   1b410:	b	1b494 <mpc_sqrt@@Base+0x1088>
   1b414:	ldur	w8, [x29, #-144]
   1b418:	mov	w9, wzr
   1b41c:	subs	w8, w9, w8
   1b420:	stur	w8, [x29, #-148]
   1b424:	ldur	x10, [x29, #-16]
   1b428:	ldr	x10, [x10, #16]
   1b42c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   1b430:	cmp	x10, x11
   1b434:	b.ge	1b464 <mpc_sqrt@@Base+0x1058>  // b.tcont
   1b438:	ldur	x8, [x29, #-16]
   1b43c:	ldr	x8, [x8, #16]
   1b440:	mov	x9, #0x2                   	// #2
   1b444:	movk	x9, #0x8000, lsl #48
   1b448:	cmp	x8, x9
   1b44c:	b.ne	1b458 <mpc_sqrt@@Base+0x104c>  // b.any
   1b450:	bl	4be0 <mpfr_set_erangeflag@plt>
   1b454:	b	1b458 <mpc_sqrt@@Base+0x104c>
   1b458:	mov	w8, wzr
   1b45c:	str	w8, [sp, #28]
   1b460:	b	1b470 <mpc_sqrt@@Base+0x1064>
   1b464:	ldur	x8, [x29, #-16]
   1b468:	ldr	w9, [x8, #8]
   1b46c:	str	w9, [sp, #28]
   1b470:	ldr	w8, [sp, #28]
   1b474:	cmp	w8, #0x0
   1b478:	cset	w8, le
   1b47c:	tbnz	w8, #0, 1b48c <mpc_sqrt@@Base+0x1080>
   1b480:	ldur	x0, [x29, #-16]
   1b484:	bl	4c80 <mpfr_nextbelow@plt>
   1b488:	b	1b494 <mpc_sqrt@@Base+0x1088>
   1b48c:	ldur	x0, [x29, #-16]
   1b490:	bl	4ee0 <mpfr_nextabove@plt>
   1b494:	b	1b534 <mpc_sqrt@@Base+0x1128>
   1b498:	ldur	w8, [x29, #-112]
   1b49c:	ldur	w9, [x29, #-180]
   1b4a0:	cmp	w8, w9
   1b4a4:	b.ne	1b4bc <mpc_sqrt@@Base+0x10b0>  // b.any
   1b4a8:	ldur	w8, [x29, #-144]
   1b4ac:	mov	w9, wzr
   1b4b0:	subs	w8, w9, w8
   1b4b4:	stur	w8, [x29, #-148]
   1b4b8:	b	1b534 <mpc_sqrt@@Base+0x1128>
   1b4bc:	ldur	w8, [x29, #-144]
   1b4c0:	stur	w8, [x29, #-148]
   1b4c4:	ldur	x9, [x29, #-16]
   1b4c8:	ldr	x9, [x9, #16]
   1b4cc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1b4d0:	cmp	x9, x10
   1b4d4:	b.ge	1b504 <mpc_sqrt@@Base+0x10f8>  // b.tcont
   1b4d8:	ldur	x8, [x29, #-16]
   1b4dc:	ldr	x8, [x8, #16]
   1b4e0:	mov	x9, #0x2                   	// #2
   1b4e4:	movk	x9, #0x8000, lsl #48
   1b4e8:	cmp	x8, x9
   1b4ec:	b.ne	1b4f8 <mpc_sqrt@@Base+0x10ec>  // b.any
   1b4f0:	bl	4be0 <mpfr_set_erangeflag@plt>
   1b4f4:	b	1b4f8 <mpc_sqrt@@Base+0x10ec>
   1b4f8:	mov	w8, wzr
   1b4fc:	str	w8, [sp, #24]
   1b500:	b	1b510 <mpc_sqrt@@Base+0x1104>
   1b504:	ldur	x8, [x29, #-16]
   1b508:	ldr	w9, [x8, #8]
   1b50c:	str	w9, [sp, #24]
   1b510:	ldr	w8, [sp, #24]
   1b514:	cmp	w8, #0x0
   1b518:	cset	w8, le
   1b51c:	tbnz	w8, #0, 1b52c <mpc_sqrt@@Base+0x1120>
   1b520:	ldur	x0, [x29, #-16]
   1b524:	bl	4c80 <mpfr_nextbelow@plt>
   1b528:	b	1b534 <mpc_sqrt@@Base+0x1128>
   1b52c:	ldur	x0, [x29, #-16]
   1b530:	bl	4ee0 <mpfr_nextabove@plt>
   1b534:	sub	x0, x29, #0x48
   1b538:	bl	4e30 <mpfr_clear@plt>
   1b53c:	sub	x0, x29, #0x68
   1b540:	bl	4e30 <mpfr_clear@plt>
   1b544:	ldur	w8, [x29, #-148]
   1b548:	cmp	w8, #0x0
   1b54c:	cset	w8, ge  // ge = tcont
   1b550:	tbnz	w8, #0, 1b560 <mpc_sqrt@@Base+0x1154>
   1b554:	mov	w8, #0x2                   	// #2
   1b558:	str	w8, [sp, #20]
   1b55c:	b	1b578 <mpc_sqrt@@Base+0x116c>
   1b560:	ldur	w8, [x29, #-148]
   1b564:	mov	w9, wzr
   1b568:	mov	w10, #0x1                   	// #1
   1b56c:	cmp	w8, #0x0
   1b570:	csel	w8, w9, w10, eq  // eq = none
   1b574:	str	w8, [sp, #20]
   1b578:	ldr	w8, [sp, #20]
   1b57c:	ldur	w9, [x29, #-152]
   1b580:	cmp	w9, #0x0
   1b584:	cset	w9, ge  // ge = tcont
   1b588:	str	w8, [sp, #16]
   1b58c:	tbnz	w9, #0, 1b59c <mpc_sqrt@@Base+0x1190>
   1b590:	mov	w8, #0x2                   	// #2
   1b594:	str	w8, [sp, #12]
   1b598:	b	1b5b4 <mpc_sqrt@@Base+0x11a8>
   1b59c:	ldur	w8, [x29, #-152]
   1b5a0:	mov	w9, wzr
   1b5a4:	mov	w10, #0x1                   	// #1
   1b5a8:	cmp	w8, #0x0
   1b5ac:	csel	w8, w9, w10, eq  // eq = none
   1b5b0:	str	w8, [sp, #12]
   1b5b4:	ldr	w8, [sp, #12]
   1b5b8:	ldr	w9, [sp, #16]
   1b5bc:	orr	w8, w9, w8, lsl #2
   1b5c0:	stur	w8, [x29, #-4]
   1b5c4:	ldur	w0, [x29, #-4]
   1b5c8:	add	sp, sp, #0x200
   1b5cc:	ldr	x28, [sp, #16]
   1b5d0:	ldp	x29, x30, [sp], #32
   1b5d4:	ret

000000000001b5d8 <mpc_strtoc@@Base>:
   1b5d8:	sub	sp, sp, #0x70
   1b5dc:	stp	x29, x30, [sp, #96]
   1b5e0:	add	x29, sp, #0x60
   1b5e4:	stur	x0, [x29, #-16]
   1b5e8:	stur	x1, [x29, #-24]
   1b5ec:	stur	x2, [x29, #-32]
   1b5f0:	stur	w3, [x29, #-36]
   1b5f4:	stur	w4, [x29, #-40]
   1b5f8:	str	wzr, [sp, #36]
   1b5fc:	str	wzr, [sp, #32]
   1b600:	str	wzr, [sp, #28]
   1b604:	ldur	x8, [x29, #-24]
   1b608:	cbz	x8, 1b624 <mpc_strtoc@@Base+0x4c>
   1b60c:	ldur	w8, [x29, #-36]
   1b610:	cmp	w8, #0x24
   1b614:	b.gt	1b624 <mpc_strtoc@@Base+0x4c>
   1b618:	ldur	w8, [x29, #-36]
   1b61c:	cmp	w8, #0x1
   1b620:	b.ne	1b628 <mpc_strtoc@@Base+0x50>  // b.any
   1b624:	b	1b7fc <mpc_strtoc@@Base+0x224>
   1b628:	ldur	x8, [x29, #-24]
   1b62c:	add	x0, sp, #0x30
   1b630:	str	x8, [sp, #48]
   1b634:	bl	1b83c <mpc_strtoc@@Base+0x264>
   1b638:	ldr	x8, [sp, #48]
   1b63c:	ldrb	w9, [x8]
   1b640:	cmp	w9, #0x28
   1b644:	b.ne	1b65c <mpc_strtoc@@Base+0x84>  // b.any
   1b648:	mov	w8, #0x1                   	// #1
   1b64c:	str	w8, [sp, #36]
   1b650:	ldr	x9, [sp, #48]
   1b654:	add	x9, x9, #0x1
   1b658:	str	x9, [sp, #48]
   1b65c:	ldur	x0, [x29, #-16]
   1b660:	ldr	x1, [sp, #48]
   1b664:	ldur	w3, [x29, #-36]
   1b668:	ldur	w8, [x29, #-40]
   1b66c:	and	w4, w8, #0xf
   1b670:	add	x2, sp, #0x28
   1b674:	bl	4ba0 <mpfr_strtofr@plt>
   1b678:	str	w0, [sp, #32]
   1b67c:	ldr	x9, [sp, #40]
   1b680:	ldr	x10, [sp, #48]
   1b684:	cmp	x9, x10
   1b688:	b.ne	1b690 <mpc_strtoc@@Base+0xb8>  // b.any
   1b68c:	b	1b7fc <mpc_strtoc@@Base+0x224>
   1b690:	ldr	x8, [sp, #40]
   1b694:	str	x8, [sp, #48]
   1b698:	ldr	w9, [sp, #36]
   1b69c:	cbnz	w9, 1b6d4 <mpc_strtoc@@Base+0xfc>
   1b6a0:	ldur	x8, [x29, #-16]
   1b6a4:	add	x8, x8, #0x20
   1b6a8:	str	x8, [sp, #16]
   1b6ac:	ldr	x8, [sp, #16]
   1b6b0:	mov	w9, #0x1                   	// #1
   1b6b4:	str	w9, [x8, #8]
   1b6b8:	ldr	x8, [sp, #16]
   1b6bc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1b6c0:	str	x10, [x8, #16]
   1b6c4:	str	wzr, [sp, #12]
   1b6c8:	ldr	w9, [sp, #12]
   1b6cc:	str	w9, [sp, #28]
   1b6d0:	b	1b764 <mpc_strtoc@@Base+0x18c>
   1b6d4:	bl	5270 <__ctype_b_loc@plt>
   1b6d8:	ldr	x8, [x0]
   1b6dc:	ldr	x9, [sp, #48]
   1b6e0:	ldrb	w10, [x9]
   1b6e4:	ldrh	w10, [x8, w10, sxtw #1]
   1b6e8:	and	w10, w10, #0x2000
   1b6ec:	cbnz	w10, 1b6f4 <mpc_strtoc@@Base+0x11c>
   1b6f0:	b	1b7fc <mpc_strtoc@@Base+0x224>
   1b6f4:	add	x0, sp, #0x30
   1b6f8:	bl	1b83c <mpc_strtoc@@Base+0x264>
   1b6fc:	ldur	x8, [x29, #-16]
   1b700:	add	x0, x8, #0x20
   1b704:	ldr	x1, [sp, #48]
   1b708:	ldur	w3, [x29, #-36]
   1b70c:	ldur	w9, [x29, #-40]
   1b710:	asr	w4, w9, #4
   1b714:	add	x2, sp, #0x28
   1b718:	bl	4ba0 <mpfr_strtofr@plt>
   1b71c:	str	w0, [sp, #28]
   1b720:	ldr	x8, [sp, #40]
   1b724:	ldr	x10, [sp, #48]
   1b728:	cmp	x8, x10
   1b72c:	b.ne	1b734 <mpc_strtoc@@Base+0x15c>  // b.any
   1b730:	b	1b7fc <mpc_strtoc@@Base+0x224>
   1b734:	ldr	x8, [sp, #40]
   1b738:	add	x0, sp, #0x30
   1b73c:	str	x8, [sp, #48]
   1b740:	bl	1b83c <mpc_strtoc@@Base+0x264>
   1b744:	ldr	x8, [sp, #48]
   1b748:	ldrb	w9, [x8]
   1b74c:	cmp	w9, #0x29
   1b750:	b.eq	1b758 <mpc_strtoc@@Base+0x180>  // b.none
   1b754:	b	1b7fc <mpc_strtoc@@Base+0x224>
   1b758:	ldr	x8, [sp, #48]
   1b75c:	add	x8, x8, #0x1
   1b760:	str	x8, [sp, #48]
   1b764:	ldur	x8, [x29, #-32]
   1b768:	cbz	x8, 1b778 <mpc_strtoc@@Base+0x1a0>
   1b76c:	ldr	x8, [sp, #48]
   1b770:	ldur	x9, [x29, #-32]
   1b774:	str	x8, [x9]
   1b778:	ldr	w8, [sp, #32]
   1b77c:	cmp	w8, #0x0
   1b780:	cset	w8, ge  // ge = tcont
   1b784:	tbnz	w8, #0, 1b794 <mpc_strtoc@@Base+0x1bc>
   1b788:	mov	w8, #0x2                   	// #2
   1b78c:	str	w8, [sp, #8]
   1b790:	b	1b7ac <mpc_strtoc@@Base+0x1d4>
   1b794:	ldr	w8, [sp, #32]
   1b798:	mov	w9, wzr
   1b79c:	mov	w10, #0x1                   	// #1
   1b7a0:	cmp	w8, #0x0
   1b7a4:	csel	w8, w9, w10, eq  // eq = none
   1b7a8:	str	w8, [sp, #8]
   1b7ac:	ldr	w8, [sp, #8]
   1b7b0:	ldr	w9, [sp, #28]
   1b7b4:	cmp	w9, #0x0
   1b7b8:	cset	w9, ge  // ge = tcont
   1b7bc:	str	w8, [sp, #4]
   1b7c0:	tbnz	w9, #0, 1b7d0 <mpc_strtoc@@Base+0x1f8>
   1b7c4:	mov	w8, #0x2                   	// #2
   1b7c8:	str	w8, [sp]
   1b7cc:	b	1b7e8 <mpc_strtoc@@Base+0x210>
   1b7d0:	ldr	w8, [sp, #28]
   1b7d4:	mov	w9, wzr
   1b7d8:	mov	w10, #0x1                   	// #1
   1b7dc:	cmp	w8, #0x0
   1b7e0:	csel	w8, w9, w10, eq  // eq = none
   1b7e4:	str	w8, [sp]
   1b7e8:	ldr	w8, [sp]
   1b7ec:	ldr	w9, [sp, #4]
   1b7f0:	orr	w8, w9, w8, lsl #2
   1b7f4:	stur	w8, [x29, #-4]
   1b7f8:	b	1b82c <mpc_strtoc@@Base+0x254>
   1b7fc:	ldur	x8, [x29, #-32]
   1b800:	cbz	x8, 1b810 <mpc_strtoc@@Base+0x238>
   1b804:	ldur	x8, [x29, #-24]
   1b808:	ldur	x9, [x29, #-32]
   1b80c:	str	x8, [x9]
   1b810:	ldur	x0, [x29, #-16]
   1b814:	bl	4b20 <mpfr_set_nan@plt>
   1b818:	ldur	x8, [x29, #-16]
   1b81c:	add	x0, x8, #0x20
   1b820:	bl	4b20 <mpfr_set_nan@plt>
   1b824:	mov	w9, #0xffffffff            	// #-1
   1b828:	stur	w9, [x29, #-4]
   1b82c:	ldur	w0, [x29, #-4]
   1b830:	ldp	x29, x30, [sp, #96]
   1b834:	add	sp, sp, #0x70
   1b838:	ret
   1b83c:	sub	sp, sp, #0x20
   1b840:	stp	x29, x30, [sp, #16]
   1b844:	add	x29, sp, #0x10
   1b848:	str	x0, [sp, #8]
   1b84c:	bl	5270 <__ctype_b_loc@plt>
   1b850:	ldr	x8, [x0]
   1b854:	ldr	x9, [sp, #8]
   1b858:	ldr	x9, [x9]
   1b85c:	ldrb	w10, [x9]
   1b860:	ldrh	w10, [x8, w10, sxtw #1]
   1b864:	and	w10, w10, #0x2000
   1b868:	cbz	w10, 1b880 <mpc_strtoc@@Base+0x2a8>
   1b86c:	ldr	x8, [sp, #8]
   1b870:	ldr	x9, [x8]
   1b874:	add	x9, x9, #0x1
   1b878:	str	x9, [x8]
   1b87c:	b	1b84c <mpc_strtoc@@Base+0x274>
   1b880:	ldp	x29, x30, [sp, #16]
   1b884:	add	sp, sp, #0x20
   1b888:	ret

000000000001b88c <mpc_sub@@Base>:
   1b88c:	sub	sp, sp, #0x40
   1b890:	stp	x29, x30, [sp, #48]
   1b894:	add	x29, sp, #0x30
   1b898:	stur	x0, [x29, #-8]
   1b89c:	stur	x1, [x29, #-16]
   1b8a0:	str	x2, [sp, #24]
   1b8a4:	str	w3, [sp, #20]
   1b8a8:	ldur	x0, [x29, #-8]
   1b8ac:	ldur	x1, [x29, #-16]
   1b8b0:	ldr	x2, [sp, #24]
   1b8b4:	ldr	w8, [sp, #20]
   1b8b8:	and	w3, w8, #0xf
   1b8bc:	bl	4b40 <mpfr_sub@plt>
   1b8c0:	str	w0, [sp, #16]
   1b8c4:	ldur	x9, [x29, #-8]
   1b8c8:	add	x0, x9, #0x20
   1b8cc:	ldur	x9, [x29, #-16]
   1b8d0:	add	x1, x9, #0x20
   1b8d4:	ldr	x9, [sp, #24]
   1b8d8:	add	x2, x9, #0x20
   1b8dc:	ldr	w8, [sp, #20]
   1b8e0:	asr	w3, w8, #4
   1b8e4:	bl	4b40 <mpfr_sub@plt>
   1b8e8:	str	w0, [sp, #12]
   1b8ec:	ldr	w8, [sp, #16]
   1b8f0:	cmp	w8, #0x0
   1b8f4:	cset	w8, ge  // ge = tcont
   1b8f8:	tbnz	w8, #0, 1b908 <mpc_sub@@Base+0x7c>
   1b8fc:	mov	w8, #0x2                   	// #2
   1b900:	str	w8, [sp, #8]
   1b904:	b	1b920 <mpc_sub@@Base+0x94>
   1b908:	ldr	w8, [sp, #16]
   1b90c:	mov	w9, wzr
   1b910:	mov	w10, #0x1                   	// #1
   1b914:	cmp	w8, #0x0
   1b918:	csel	w8, w9, w10, eq  // eq = none
   1b91c:	str	w8, [sp, #8]
   1b920:	ldr	w8, [sp, #8]
   1b924:	ldr	w9, [sp, #12]
   1b928:	cmp	w9, #0x0
   1b92c:	cset	w9, ge  // ge = tcont
   1b930:	str	w8, [sp, #4]
   1b934:	tbnz	w9, #0, 1b944 <mpc_sub@@Base+0xb8>
   1b938:	mov	w8, #0x2                   	// #2
   1b93c:	str	w8, [sp]
   1b940:	b	1b95c <mpc_sub@@Base+0xd0>
   1b944:	ldr	w8, [sp, #12]
   1b948:	mov	w9, wzr
   1b94c:	mov	w10, #0x1                   	// #1
   1b950:	cmp	w8, #0x0
   1b954:	csel	w8, w9, w10, eq  // eq = none
   1b958:	str	w8, [sp]
   1b95c:	ldr	w8, [sp]
   1b960:	ldr	w9, [sp, #4]
   1b964:	orr	w0, w9, w8, lsl #2
   1b968:	ldp	x29, x30, [sp, #48]
   1b96c:	add	sp, sp, #0x40
   1b970:	ret

000000000001b974 <mpc_sub_fr@@Base>:
   1b974:	sub	sp, sp, #0x40
   1b978:	stp	x29, x30, [sp, #48]
   1b97c:	add	x29, sp, #0x30
   1b980:	stur	x0, [x29, #-8]
   1b984:	stur	x1, [x29, #-16]
   1b988:	str	x2, [sp, #24]
   1b98c:	str	w3, [sp, #20]
   1b990:	ldur	x0, [x29, #-8]
   1b994:	ldur	x1, [x29, #-16]
   1b998:	ldr	x2, [sp, #24]
   1b99c:	ldr	w8, [sp, #20]
   1b9a0:	and	w3, w8, #0xf
   1b9a4:	bl	4b40 <mpfr_sub@plt>
   1b9a8:	str	w0, [sp, #16]
   1b9ac:	ldur	x9, [x29, #-8]
   1b9b0:	add	x0, x9, #0x20
   1b9b4:	ldur	x9, [x29, #-16]
   1b9b8:	add	x1, x9, #0x20
   1b9bc:	ldr	w8, [sp, #20]
   1b9c0:	asr	w2, w8, #4
   1b9c4:	ldur	x9, [x29, #-16]
   1b9c8:	ldr	w3, [x9, #40]
   1b9cc:	bl	52d0 <mpfr_set4@plt>
   1b9d0:	str	w0, [sp, #12]
   1b9d4:	ldr	w8, [sp, #16]
   1b9d8:	cmp	w8, #0x0
   1b9dc:	cset	w8, ge  // ge = tcont
   1b9e0:	tbnz	w8, #0, 1b9f0 <mpc_sub_fr@@Base+0x7c>
   1b9e4:	mov	w8, #0x2                   	// #2
   1b9e8:	str	w8, [sp, #8]
   1b9ec:	b	1ba08 <mpc_sub_fr@@Base+0x94>
   1b9f0:	ldr	w8, [sp, #16]
   1b9f4:	mov	w9, wzr
   1b9f8:	mov	w10, #0x1                   	// #1
   1b9fc:	cmp	w8, #0x0
   1ba00:	csel	w8, w9, w10, eq  // eq = none
   1ba04:	str	w8, [sp, #8]
   1ba08:	ldr	w8, [sp, #8]
   1ba0c:	ldr	w9, [sp, #12]
   1ba10:	cmp	w9, #0x0
   1ba14:	cset	w9, ge  // ge = tcont
   1ba18:	str	w8, [sp, #4]
   1ba1c:	tbnz	w9, #0, 1ba2c <mpc_sub_fr@@Base+0xb8>
   1ba20:	mov	w8, #0x2                   	// #2
   1ba24:	str	w8, [sp]
   1ba28:	b	1ba44 <mpc_sub_fr@@Base+0xd0>
   1ba2c:	ldr	w8, [sp, #12]
   1ba30:	mov	w9, wzr
   1ba34:	mov	w10, #0x1                   	// #1
   1ba38:	cmp	w8, #0x0
   1ba3c:	csel	w8, w9, w10, eq  // eq = none
   1ba40:	str	w8, [sp]
   1ba44:	ldr	w8, [sp]
   1ba48:	ldr	w9, [sp, #4]
   1ba4c:	orr	w0, w9, w8, lsl #2
   1ba50:	ldp	x29, x30, [sp, #48]
   1ba54:	add	sp, sp, #0x40
   1ba58:	ret

000000000001ba5c <mpc_sub_ui@@Base>:
   1ba5c:	sub	sp, sp, #0x40
   1ba60:	stp	x29, x30, [sp, #48]
   1ba64:	add	x29, sp, #0x30
   1ba68:	stur	x0, [x29, #-8]
   1ba6c:	stur	x1, [x29, #-16]
   1ba70:	str	x2, [sp, #24]
   1ba74:	str	w3, [sp, #20]
   1ba78:	ldur	x0, [x29, #-8]
   1ba7c:	ldur	x1, [x29, #-16]
   1ba80:	ldr	x2, [sp, #24]
   1ba84:	ldr	w8, [sp, #20]
   1ba88:	and	w3, w8, #0xf
   1ba8c:	bl	51f0 <mpfr_sub_ui@plt>
   1ba90:	str	w0, [sp, #16]
   1ba94:	ldur	x9, [x29, #-8]
   1ba98:	add	x0, x9, #0x20
   1ba9c:	ldur	x9, [x29, #-16]
   1baa0:	add	x1, x9, #0x20
   1baa4:	ldr	w8, [sp, #20]
   1baa8:	asr	w2, w8, #4
   1baac:	ldur	x9, [x29, #-16]
   1bab0:	ldr	w3, [x9, #40]
   1bab4:	bl	52d0 <mpfr_set4@plt>
   1bab8:	str	w0, [sp, #12]
   1babc:	ldr	w8, [sp, #16]
   1bac0:	cmp	w8, #0x0
   1bac4:	cset	w8, ge  // ge = tcont
   1bac8:	tbnz	w8, #0, 1bad8 <mpc_sub_ui@@Base+0x7c>
   1bacc:	mov	w8, #0x2                   	// #2
   1bad0:	str	w8, [sp, #8]
   1bad4:	b	1baf0 <mpc_sub_ui@@Base+0x94>
   1bad8:	ldr	w8, [sp, #16]
   1badc:	mov	w9, wzr
   1bae0:	mov	w10, #0x1                   	// #1
   1bae4:	cmp	w8, #0x0
   1bae8:	csel	w8, w9, w10, eq  // eq = none
   1baec:	str	w8, [sp, #8]
   1baf0:	ldr	w8, [sp, #8]
   1baf4:	ldr	w9, [sp, #12]
   1baf8:	cmp	w9, #0x0
   1bafc:	cset	w9, ge  // ge = tcont
   1bb00:	str	w8, [sp, #4]
   1bb04:	tbnz	w9, #0, 1bb14 <mpc_sub_ui@@Base+0xb8>
   1bb08:	mov	w8, #0x2                   	// #2
   1bb0c:	str	w8, [sp]
   1bb10:	b	1bb2c <mpc_sub_ui@@Base+0xd0>
   1bb14:	ldr	w8, [sp, #12]
   1bb18:	mov	w9, wzr
   1bb1c:	mov	w10, #0x1                   	// #1
   1bb20:	cmp	w8, #0x0
   1bb24:	csel	w8, w9, w10, eq  // eq = none
   1bb28:	str	w8, [sp]
   1bb2c:	ldr	w8, [sp]
   1bb30:	ldr	w9, [sp, #4]
   1bb34:	orr	w0, w9, w8, lsl #2
   1bb38:	ldp	x29, x30, [sp, #48]
   1bb3c:	add	sp, sp, #0x40
   1bb40:	ret

000000000001bb44 <mpc_swap@@Base>:
   1bb44:	sub	sp, sp, #0x20
   1bb48:	stp	x29, x30, [sp, #16]
   1bb4c:	add	x29, sp, #0x10
   1bb50:	str	x0, [sp, #8]
   1bb54:	str	x1, [sp]
   1bb58:	ldr	x0, [sp, #8]
   1bb5c:	ldr	x1, [sp]
   1bb60:	bl	5190 <mpfr_swap@plt>
   1bb64:	ldr	x8, [sp, #8]
   1bb68:	add	x0, x8, #0x20
   1bb6c:	ldr	x8, [sp]
   1bb70:	add	x1, x8, #0x20
   1bb74:	bl	5190 <mpfr_swap@plt>
   1bb78:	ldp	x29, x30, [sp, #16]
   1bb7c:	add	sp, sp, #0x20
   1bb80:	ret

000000000001bb84 <mpc_tan@@Base>:
   1bb84:	stp	x29, x30, [sp, #-32]!
   1bb88:	str	x28, [sp, #16]
   1bb8c:	mov	x29, sp
   1bb90:	sub	sp, sp, #0x250
   1bb94:	sub	x8, x29, #0xc8
   1bb98:	str	x0, [x8, #184]
   1bb9c:	str	x1, [x8, #176]
   1bba0:	stur	w2, [x29, #-28]
   1bba4:	stur	wzr, [x29, #-180]
   1bba8:	ldr	x0, [x8, #176]
   1bbac:	str	x8, [sp, #184]
   1bbb0:	bl	55c0 <mpfr_number_p@plt>
   1bbb4:	cbz	w0, 1bbcc <mpc_tan@@Base+0x48>
   1bbb8:	ldr	x8, [sp, #184]
   1bbbc:	ldr	x9, [x8, #176]
   1bbc0:	add	x0, x9, #0x20
   1bbc4:	bl	55c0 <mpfr_number_p@plt>
   1bbc8:	cbnz	w0, 1bf70 <mpc_tan@@Base+0x3ec>
   1bbcc:	ldr	x8, [sp, #184]
   1bbd0:	ldr	x9, [x8, #176]
   1bbd4:	ldr	x9, [x9, #16]
   1bbd8:	mov	x10, #0x2                   	// #2
   1bbdc:	movk	x10, #0x8000, lsl #48
   1bbe0:	cmp	x9, x10
   1bbe4:	b.ne	1bc64 <mpc_tan@@Base+0xe0>  // b.any
   1bbe8:	ldr	x8, [sp, #184]
   1bbec:	ldr	x9, [x8, #176]
   1bbf0:	ldr	x9, [x9, #48]
   1bbf4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1bbf8:	cmp	x9, x10
   1bbfc:	b.ne	1bc40 <mpc_tan@@Base+0xbc>  // b.any
   1bc00:	ldr	x8, [sp, #184]
   1bc04:	ldr	x0, [x8, #184]
   1bc08:	ldr	x9, [x8, #176]
   1bc0c:	ldr	w10, [x9, #40]
   1bc10:	mov	w11, #0xffffffff            	// #-1
   1bc14:	mov	w12, #0x1                   	// #1
   1bc18:	cmp	w10, #0x0
   1bc1c:	csel	w10, w11, w12, lt  // lt = tstop
   1bc20:	mov	w1, w10
   1bc24:	sxtw	x2, w1
   1bc28:	ldur	w3, [x29, #-28]
   1bc2c:	mov	x9, xzr
   1bc30:	mov	x1, x9
   1bc34:	bl	53c0 <mpc_set_si_si@plt>
   1bc38:	stur	w0, [x29, #-184]
   1bc3c:	b	1bc60 <mpc_tan@@Base+0xdc>
   1bc40:	ldr	x8, [sp, #184]
   1bc44:	ldr	x0, [x8, #184]
   1bc48:	bl	4b20 <mpfr_set_nan@plt>
   1bc4c:	ldr	x8, [sp, #184]
   1bc50:	ldr	x9, [x8, #184]
   1bc54:	add	x0, x9, #0x20
   1bc58:	bl	4b20 <mpfr_set_nan@plt>
   1bc5c:	stur	wzr, [x29, #-184]
   1bc60:	b	1bf64 <mpc_tan@@Base+0x3e0>
   1bc64:	ldr	x8, [sp, #184]
   1bc68:	ldr	x9, [x8, #176]
   1bc6c:	ldr	x9, [x9, #48]
   1bc70:	mov	x10, #0x2                   	// #2
   1bc74:	movk	x10, #0x8000, lsl #48
   1bc78:	cmp	x9, x10
   1bc7c:	b.ne	1bcd0 <mpc_tan@@Base+0x14c>  // b.any
   1bc80:	ldr	x8, [sp, #184]
   1bc84:	ldr	x0, [x8, #176]
   1bc88:	bl	52f0 <mpfr_sgn@plt>
   1bc8c:	cbnz	w0, 1bcac <mpc_tan@@Base+0x128>
   1bc90:	ldr	x8, [sp, #184]
   1bc94:	ldr	x0, [x8, #184]
   1bc98:	ldr	x1, [x8, #176]
   1bc9c:	ldur	w2, [x29, #-28]
   1bca0:	bl	5680 <mpc_set@plt>
   1bca4:	stur	wzr, [x29, #-184]
   1bca8:	b	1bccc <mpc_tan@@Base+0x148>
   1bcac:	ldr	x8, [sp, #184]
   1bcb0:	ldr	x0, [x8, #184]
   1bcb4:	bl	4b20 <mpfr_set_nan@plt>
   1bcb8:	ldr	x8, [sp, #184]
   1bcbc:	ldr	x9, [x8, #184]
   1bcc0:	add	x0, x9, #0x20
   1bcc4:	bl	4b20 <mpfr_set_nan@plt>
   1bcc8:	stur	wzr, [x29, #-184]
   1bccc:	b	1bf64 <mpc_tan@@Base+0x3e0>
   1bcd0:	ldr	x8, [sp, #184]
   1bcd4:	ldr	x9, [x8, #176]
   1bcd8:	ldr	x9, [x9, #16]
   1bcdc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1bce0:	cmp	x9, x10
   1bce4:	b.ne	1be1c <mpc_tan@@Base+0x298>  // b.any
   1bce8:	ldr	x8, [sp, #184]
   1bcec:	ldr	x9, [x8, #176]
   1bcf0:	ldr	x9, [x9, #48]
   1bcf4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1bcf8:	cmp	x9, x10
   1bcfc:	b.ne	1bdf8 <mpc_tan@@Base+0x274>  // b.any
   1bd00:	ldr	x8, [sp, #184]
   1bd04:	ldr	x9, [x8, #176]
   1bd08:	ldr	w10, [x9, #8]
   1bd0c:	mov	w11, wzr
   1bd10:	cmp	w10, #0x0
   1bd14:	cset	w10, lt  // lt = tstop
   1bd18:	and	w10, w10, #0x1
   1bd1c:	stur	w10, [x29, #-188]
   1bd20:	ldr	x9, [x8, #184]
   1bd24:	str	x9, [x8]
   1bd28:	ldr	x9, [x8]
   1bd2c:	mov	w10, #0x1                   	// #1
   1bd30:	str	w10, [x9, #8]
   1bd34:	ldr	x9, [x8]
   1bd38:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   1bd3c:	str	x12, [x9, #16]
   1bd40:	stur	wzr, [x29, #-204]
   1bd44:	ldr	x0, [x8, #184]
   1bd48:	ldr	x1, [x8, #184]
   1bd4c:	ldur	w13, [x29, #-188]
   1bd50:	mov	w14, #0xffffffff            	// #-1
   1bd54:	cmp	w13, #0x0
   1bd58:	csel	w3, w14, w10, ne  // ne = any
   1bd5c:	mov	w2, w11
   1bd60:	bl	52d0 <mpfr_set4@plt>
   1bd64:	ldr	x8, [sp, #184]
   1bd68:	ldr	x9, [x8, #184]
   1bd6c:	add	x0, x9, #0x20
   1bd70:	ldr	x9, [x8, #176]
   1bd74:	ldr	w10, [x9, #40]
   1bd78:	mov	w11, #0xffffffff            	// #-1
   1bd7c:	mov	w12, #0x1                   	// #1
   1bd80:	cmp	w10, #0x0
   1bd84:	csel	w10, w11, w12, lt  // lt = tstop
   1bd88:	mov	w1, w10
   1bd8c:	sxtw	x1, w1
   1bd90:	ldur	w10, [x29, #-28]
   1bd94:	asr	w3, w10, #4
   1bd98:	mov	x9, xzr
   1bd9c:	mov	x2, x9
   1bda0:	bl	4ac0 <mpfr_set_si_2exp@plt>
   1bda4:	str	w0, [sp, #180]
   1bda8:	ldr	w8, [sp, #180]
   1bdac:	stur	w8, [x29, #-192]
   1bdb0:	ldur	w9, [x29, #-192]
   1bdb4:	cmp	w9, #0x0
   1bdb8:	cset	w9, ge  // ge = tcont
   1bdbc:	tbnz	w9, #0, 1bdcc <mpc_tan@@Base+0x248>
   1bdc0:	mov	w8, #0x2                   	// #2
   1bdc4:	str	w8, [sp, #176]
   1bdc8:	b	1bde4 <mpc_tan@@Base+0x260>
   1bdcc:	ldur	w8, [x29, #-192]
   1bdd0:	mov	w9, wzr
   1bdd4:	mov	w10, #0x1                   	// #1
   1bdd8:	cmp	w8, #0x0
   1bddc:	csel	w8, w9, w10, eq  // eq = none
   1bde0:	str	w8, [sp, #176]
   1bde4:	ldr	w8, [sp, #176]
   1bde8:	mov	w9, wzr
   1bdec:	orr	w8, w9, w8, lsl #2
   1bdf0:	stur	w8, [x29, #-184]
   1bdf4:	b	1be18 <mpc_tan@@Base+0x294>
   1bdf8:	ldr	x8, [sp, #184]
   1bdfc:	ldr	x0, [x8, #184]
   1be00:	bl	4b20 <mpfr_set_nan@plt>
   1be04:	ldr	x8, [sp, #184]
   1be08:	ldr	x9, [x8, #184]
   1be0c:	add	x0, x9, #0x20
   1be10:	bl	4b20 <mpfr_set_nan@plt>
   1be14:	stur	wzr, [x29, #-184]
   1be18:	b	1bf64 <mpc_tan@@Base+0x3e0>
   1be1c:	sub	x8, x29, #0x100
   1be20:	mov	x0, x8
   1be24:	str	x8, [sp, #168]
   1be28:	bl	4b80 <mpfr_init@plt>
   1be2c:	add	x8, sp, #0x130
   1be30:	mov	x0, x8
   1be34:	str	x8, [sp, #160]
   1be38:	bl	4b80 <mpfr_init@plt>
   1be3c:	ldr	x8, [sp, #184]
   1be40:	ldr	x2, [x8, #176]
   1be44:	ldr	x0, [sp, #160]
   1be48:	ldr	x1, [sp, #168]
   1be4c:	mov	w9, wzr
   1be50:	mov	w3, w9
   1be54:	str	w9, [sp, #156]
   1be58:	bl	5620 <mpfr_sin_cos@plt>
   1be5c:	ldr	x8, [sp, #184]
   1be60:	ldr	x10, [x8, #184]
   1be64:	str	x10, [sp, #288]
   1be68:	ldr	x10, [sp, #288]
   1be6c:	mov	w9, #0x1                   	// #1
   1be70:	str	w9, [x10, #8]
   1be74:	ldr	x10, [sp, #288]
   1be78:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   1be7c:	str	x11, [x10, #16]
   1be80:	str	wzr, [sp, #284]
   1be84:	ldr	x10, [x8, #184]
   1be88:	ldr	x1, [x8, #184]
   1be8c:	ldur	w12, [x29, #-248]
   1be90:	cmp	w12, #0x0
   1be94:	cset	w12, lt  // lt = tstop
   1be98:	and	w12, w12, #0x1
   1be9c:	ldr	w13, [sp, #312]
   1bea0:	cmp	w13, #0x0
   1bea4:	cset	w13, lt  // lt = tstop
   1bea8:	and	w13, w13, #0x1
   1beac:	mov	w14, #0xffffffff            	// #-1
   1beb0:	cmp	w12, w13
   1beb4:	csel	w3, w14, w9, ne  // ne = any
   1beb8:	mov	x0, x10
   1bebc:	ldr	w2, [sp, #156]
   1bec0:	bl	52d0 <mpfr_set4@plt>
   1bec4:	ldr	x8, [sp, #184]
   1bec8:	ldr	x9, [x8, #184]
   1becc:	add	x0, x9, #0x20
   1bed0:	ldr	x9, [x8, #176]
   1bed4:	ldr	w10, [x9, #40]
   1bed8:	mov	w11, #0xffffffff            	// #-1
   1bedc:	mov	w12, #0x1                   	// #1
   1bee0:	cmp	w10, #0x0
   1bee4:	csel	w10, w11, w12, lt  // lt = tstop
   1bee8:	mov	w1, w10
   1beec:	sxtw	x1, w1
   1bef0:	ldur	w10, [x29, #-28]
   1bef4:	asr	w3, w10, #4
   1bef8:	mov	x9, xzr
   1befc:	mov	x2, x9
   1bf00:	bl	4ac0 <mpfr_set_si_2exp@plt>
   1bf04:	str	w0, [sp, #152]
   1bf08:	ldr	w8, [sp, #152]
   1bf0c:	str	w8, [sp, #300]
   1bf10:	ldr	w9, [sp, #300]
   1bf14:	cmp	w9, #0x0
   1bf18:	cset	w9, ge  // ge = tcont
   1bf1c:	tbnz	w9, #0, 1bf2c <mpc_tan@@Base+0x3a8>
   1bf20:	mov	w8, #0x2                   	// #2
   1bf24:	str	w8, [sp, #148]
   1bf28:	b	1bf44 <mpc_tan@@Base+0x3c0>
   1bf2c:	ldr	w8, [sp, #300]
   1bf30:	mov	w9, wzr
   1bf34:	mov	w10, #0x1                   	// #1
   1bf38:	cmp	w8, #0x0
   1bf3c:	csel	w8, w9, w10, eq  // eq = none
   1bf40:	str	w8, [sp, #148]
   1bf44:	ldr	w8, [sp, #148]
   1bf48:	mov	w9, wzr
   1bf4c:	orr	w8, w9, w8, lsl #2
   1bf50:	stur	w8, [x29, #-184]
   1bf54:	add	x0, sp, #0x130
   1bf58:	bl	4e30 <mpfr_clear@plt>
   1bf5c:	sub	x0, x29, #0x100
   1bf60:	bl	4e30 <mpfr_clear@plt>
   1bf64:	ldur	w8, [x29, #-184]
   1bf68:	stur	w8, [x29, #-4]
   1bf6c:	b	1cb20 <mpc_tan@@Base+0xf9c>
   1bf70:	ldr	x8, [sp, #184]
   1bf74:	ldr	x9, [x8, #176]
   1bf78:	ldr	x9, [x9, #16]
   1bf7c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1bf80:	cmp	x9, x10
   1bf84:	b.ne	1c018 <mpc_tan@@Base+0x494>  // b.any
   1bf88:	ldr	x8, [sp, #184]
   1bf8c:	ldr	x0, [x8, #184]
   1bf90:	ldr	x1, [x8, #176]
   1bf94:	ldur	w9, [x29, #-28]
   1bf98:	and	w2, w9, #0xf
   1bf9c:	ldr	x10, [x8, #176]
   1bfa0:	ldr	w3, [x10, #8]
   1bfa4:	bl	52d0 <mpfr_set4@plt>
   1bfa8:	ldr	x8, [sp, #184]
   1bfac:	ldr	x10, [x8, #184]
   1bfb0:	add	x10, x10, #0x20
   1bfb4:	ldr	x11, [x8, #176]
   1bfb8:	add	x1, x11, #0x20
   1bfbc:	ldur	w9, [x29, #-28]
   1bfc0:	asr	w2, w9, #4
   1bfc4:	mov	x0, x10
   1bfc8:	bl	4b10 <mpfr_tanh@plt>
   1bfcc:	str	w0, [sp, #264]
   1bfd0:	ldr	w9, [sp, #264]
   1bfd4:	cmp	w9, #0x0
   1bfd8:	cset	w9, ge  // ge = tcont
   1bfdc:	tbnz	w9, #0, 1bfec <mpc_tan@@Base+0x468>
   1bfe0:	mov	w8, #0x2                   	// #2
   1bfe4:	str	w8, [sp, #144]
   1bfe8:	b	1c004 <mpc_tan@@Base+0x480>
   1bfec:	ldr	w8, [sp, #264]
   1bff0:	mov	w9, wzr
   1bff4:	mov	w10, #0x1                   	// #1
   1bff8:	cmp	w8, #0x0
   1bffc:	csel	w8, w9, w10, eq  // eq = none
   1c000:	str	w8, [sp, #144]
   1c004:	ldr	w8, [sp, #144]
   1c008:	mov	w9, wzr
   1c00c:	orr	w8, w9, w8, lsl #2
   1c010:	stur	w8, [x29, #-4]
   1c014:	b	1cb20 <mpc_tan@@Base+0xf9c>
   1c018:	ldr	x8, [sp, #184]
   1c01c:	ldr	x9, [x8, #176]
   1c020:	ldr	x9, [x9, #48]
   1c024:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c028:	cmp	x9, x10
   1c02c:	b.ne	1c0b4 <mpc_tan@@Base+0x530>  // b.any
   1c030:	ldr	x8, [sp, #184]
   1c034:	ldr	x0, [x8, #184]
   1c038:	ldr	x1, [x8, #176]
   1c03c:	ldur	w9, [x29, #-28]
   1c040:	and	w2, w9, #0xf
   1c044:	bl	4b90 <mpfr_tan@plt>
   1c048:	str	w0, [sp, #260]
   1c04c:	ldr	x8, [sp, #184]
   1c050:	ldr	x10, [x8, #184]
   1c054:	add	x0, x10, #0x20
   1c058:	ldr	x10, [x8, #176]
   1c05c:	add	x1, x10, #0x20
   1c060:	ldur	w9, [x29, #-28]
   1c064:	asr	w2, w9, #4
   1c068:	ldr	x10, [x8, #176]
   1c06c:	ldr	w3, [x10, #40]
   1c070:	bl	52d0 <mpfr_set4@plt>
   1c074:	ldr	w9, [sp, #260]
   1c078:	cmp	w9, #0x0
   1c07c:	cset	w9, ge  // ge = tcont
   1c080:	tbnz	w9, #0, 1c090 <mpc_tan@@Base+0x50c>
   1c084:	mov	w8, #0x2                   	// #2
   1c088:	str	w8, [sp, #140]
   1c08c:	b	1c0a8 <mpc_tan@@Base+0x524>
   1c090:	ldr	w8, [sp, #260]
   1c094:	mov	w9, wzr
   1c098:	mov	w10, #0x1                   	// #1
   1c09c:	cmp	w8, #0x0
   1c0a0:	csel	w8, w9, w10, eq  // eq = none
   1c0a4:	str	w8, [sp, #140]
   1c0a8:	ldr	w8, [sp, #140]
   1c0ac:	stur	w8, [x29, #-4]
   1c0b0:	b	1cb20 <mpc_tan@@Base+0xf9c>
   1c0b4:	ldr	x8, [sp, #184]
   1c0b8:	ldr	x9, [x8, #184]
   1c0bc:	ldr	x9, [x9]
   1c0c0:	ldr	x10, [x8, #184]
   1c0c4:	ldr	x10, [x10, #32]
   1c0c8:	cmp	x9, x10
   1c0cc:	b.le	1c0e4 <mpc_tan@@Base+0x560>
   1c0d0:	ldr	x8, [sp, #184]
   1c0d4:	ldr	x9, [x8, #184]
   1c0d8:	ldr	x9, [x9]
   1c0dc:	str	x9, [sp, #128]
   1c0e0:	b	1c0f4 <mpc_tan@@Base+0x570>
   1c0e4:	ldr	x8, [sp, #184]
   1c0e8:	ldr	x9, [x8, #184]
   1c0ec:	ldr	x9, [x9, #32]
   1c0f0:	str	x9, [sp, #128]
   1c0f4:	ldr	x8, [sp, #128]
   1c0f8:	ldr	x9, [sp, #184]
   1c0fc:	str	x8, [x9, #32]
   1c100:	sub	x0, x29, #0x60
   1c104:	mov	x8, #0x2                   	// #2
   1c108:	mov	x1, x8
   1c10c:	str	x8, [sp, #120]
   1c110:	bl	4db0 <mpc_init2@plt>
   1c114:	sub	x0, x29, #0xa0
   1c118:	ldr	x1, [sp, #120]
   1c11c:	bl	4db0 <mpc_init2@plt>
   1c120:	mov	x8, #0x7                   	// #7
   1c124:	ldr	x9, [sp, #184]
   1c128:	str	x8, [x9, #24]
   1c12c:	stur	wzr, [x29, #-180]
   1c130:	ldr	x8, [sp, #184]
   1c134:	ldr	x0, [x8, #32]
   1c138:	bl	4de0 <mpc_ceil_log2@plt>
   1c13c:	ldr	x8, [sp, #184]
   1c140:	ldr	x9, [x8, #24]
   1c144:	add	x9, x0, x9
   1c148:	ldr	x10, [x8, #32]
   1c14c:	add	x9, x10, x9
   1c150:	str	x9, [x8, #32]
   1c154:	ldr	x1, [x8, #32]
   1c158:	sub	x9, x29, #0x60
   1c15c:	mov	x0, x9
   1c160:	str	x9, [sp, #112]
   1c164:	bl	4cd0 <mpc_set_prec@plt>
   1c168:	ldr	x8, [sp, #184]
   1c16c:	ldr	x1, [x8, #32]
   1c170:	sub	x9, x29, #0xa0
   1c174:	mov	x0, x9
   1c178:	str	x9, [sp, #104]
   1c17c:	bl	4cd0 <mpc_set_prec@plt>
   1c180:	ldr	x8, [sp, #184]
   1c184:	ldr	x2, [x8, #176]
   1c188:	ldr	x0, [sp, #112]
   1c18c:	ldr	x1, [sp, #104]
   1c190:	mov	w11, #0x11                  	// #17
   1c194:	mov	w3, w11
   1c198:	mov	w4, w11
   1c19c:	bl	5240 <mpc_sin_cos@plt>
   1c1a0:	ldr	x8, [sp, #184]
   1c1a4:	ldr	x9, [x8, #120]
   1c1a8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c1ac:	cmp	x9, x10
   1c1b0:	b.ge	1c1e0 <mpc_tan@@Base+0x65c>  // b.tcont
   1c1b4:	ldr	x8, [sp, #184]
   1c1b8:	ldr	x9, [x8, #120]
   1c1bc:	mov	x10, #0x2                   	// #2
   1c1c0:	movk	x10, #0x8000, lsl #48
   1c1c4:	cmp	x9, x10
   1c1c8:	b.ne	1c1d4 <mpc_tan@@Base+0x650>  // b.any
   1c1cc:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c1d0:	b	1c1d4 <mpc_tan@@Base+0x650>
   1c1d4:	mov	w8, wzr
   1c1d8:	str	w8, [sp, #100]
   1c1dc:	b	1c1e8 <mpc_tan@@Base+0x664>
   1c1e0:	ldur	w8, [x29, #-88]
   1c1e4:	str	w8, [sp, #100]
   1c1e8:	ldr	w8, [sp, #100]
   1c1ec:	cmp	w8, #0x0
   1c1f0:	cset	w8, le
   1c1f4:	tbnz	w8, #0, 1c204 <mpc_tan@@Base+0x680>
   1c1f8:	sub	x0, x29, #0x60
   1c1fc:	bl	4ee0 <mpfr_nextabove@plt>
   1c200:	b	1c20c <mpc_tan@@Base+0x688>
   1c204:	sub	x0, x29, #0x60
   1c208:	bl	4c80 <mpfr_nextbelow@plt>
   1c20c:	ldr	x8, [sp, #184]
   1c210:	ldr	x9, [x8, #152]
   1c214:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c218:	cmp	x9, x10
   1c21c:	b.ge	1c24c <mpc_tan@@Base+0x6c8>  // b.tcont
   1c220:	ldr	x8, [sp, #184]
   1c224:	ldr	x9, [x8, #152]
   1c228:	mov	x10, #0x2                   	// #2
   1c22c:	movk	x10, #0x8000, lsl #48
   1c230:	cmp	x9, x10
   1c234:	b.ne	1c240 <mpc_tan@@Base+0x6bc>  // b.any
   1c238:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c23c:	b	1c240 <mpc_tan@@Base+0x6bc>
   1c240:	mov	w8, wzr
   1c244:	str	w8, [sp, #96]
   1c248:	b	1c254 <mpc_tan@@Base+0x6d0>
   1c24c:	ldur	w8, [x29, #-56]
   1c250:	str	w8, [sp, #96]
   1c254:	ldr	w8, [sp, #96]
   1c258:	cmp	w8, #0x0
   1c25c:	cset	w8, le
   1c260:	tbnz	w8, #0, 1c274 <mpc_tan@@Base+0x6f0>
   1c264:	sub	x8, x29, #0x60
   1c268:	add	x0, x8, #0x20
   1c26c:	bl	4ee0 <mpfr_nextabove@plt>
   1c270:	b	1c280 <mpc_tan@@Base+0x6fc>
   1c274:	sub	x8, x29, #0x60
   1c278:	add	x0, x8, #0x20
   1c27c:	bl	4c80 <mpfr_nextbelow@plt>
   1c280:	ldr	x8, [sp, #184]
   1c284:	ldr	x9, [x8, #56]
   1c288:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c28c:	cmp	x9, x10
   1c290:	b.ge	1c2c0 <mpc_tan@@Base+0x73c>  // b.tcont
   1c294:	ldr	x8, [sp, #184]
   1c298:	ldr	x9, [x8, #56]
   1c29c:	mov	x10, #0x2                   	// #2
   1c2a0:	movk	x10, #0x8000, lsl #48
   1c2a4:	cmp	x9, x10
   1c2a8:	b.ne	1c2b4 <mpc_tan@@Base+0x730>  // b.any
   1c2ac:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c2b0:	b	1c2b4 <mpc_tan@@Base+0x730>
   1c2b4:	mov	w8, wzr
   1c2b8:	str	w8, [sp, #92]
   1c2bc:	b	1c2c8 <mpc_tan@@Base+0x744>
   1c2c0:	ldur	w8, [x29, #-152]
   1c2c4:	str	w8, [sp, #92]
   1c2c8:	ldr	w8, [sp, #92]
   1c2cc:	cmp	w8, #0x0
   1c2d0:	cset	w8, le
   1c2d4:	tbnz	w8, #0, 1c2e4 <mpc_tan@@Base+0x760>
   1c2d8:	sub	x0, x29, #0xa0
   1c2dc:	bl	4ee0 <mpfr_nextabove@plt>
   1c2e0:	b	1c2ec <mpc_tan@@Base+0x768>
   1c2e4:	sub	x0, x29, #0xa0
   1c2e8:	bl	4c80 <mpfr_nextbelow@plt>
   1c2ec:	ldr	x8, [sp, #184]
   1c2f0:	ldr	x9, [x8, #88]
   1c2f4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c2f8:	cmp	x9, x10
   1c2fc:	b.ge	1c32c <mpc_tan@@Base+0x7a8>  // b.tcont
   1c300:	ldr	x8, [sp, #184]
   1c304:	ldr	x9, [x8, #88]
   1c308:	mov	x10, #0x2                   	// #2
   1c30c:	movk	x10, #0x8000, lsl #48
   1c310:	cmp	x9, x10
   1c314:	b.ne	1c320 <mpc_tan@@Base+0x79c>  // b.any
   1c318:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c31c:	b	1c320 <mpc_tan@@Base+0x79c>
   1c320:	mov	w8, wzr
   1c324:	str	w8, [sp, #88]
   1c328:	b	1c334 <mpc_tan@@Base+0x7b0>
   1c32c:	ldur	w8, [x29, #-120]
   1c330:	str	w8, [sp, #88]
   1c334:	ldr	w8, [sp, #88]
   1c338:	cmp	w8, #0x0
   1c33c:	cset	w8, le
   1c340:	tbnz	w8, #0, 1c354 <mpc_tan@@Base+0x7d0>
   1c344:	sub	x8, x29, #0xa0
   1c348:	add	x0, x8, #0x20
   1c34c:	bl	4ee0 <mpfr_nextabove@plt>
   1c350:	b	1c360 <mpc_tan@@Base+0x7dc>
   1c354:	sub	x8, x29, #0xa0
   1c358:	add	x0, x8, #0x20
   1c35c:	bl	4c80 <mpfr_nextbelow@plt>
   1c360:	ldr	x8, [sp, #184]
   1c364:	ldr	x9, [x8, #120]
   1c368:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c36c:	cmp	x9, x10
   1c370:	cset	w11, eq  // eq = none
   1c374:	and	w11, w11, #0x1
   1c378:	cbz	w11, 1c3ac <mpc_tan@@Base+0x828>
   1c37c:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   1c380:	ldr	x8, [x8, #4008]
   1c384:	ldr	x0, [x8]
   1c388:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1c38c:	add	x1, x1, #0x2a0
   1c390:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1c394:	add	x2, x2, #0x305
   1c398:	mov	w3, #0xc9                  	// #201
   1c39c:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1c3a0:	add	x4, x4, #0x60f
   1c3a4:	bl	56a0 <fprintf@plt>
   1c3a8:	bl	5100 <abort@plt>
   1c3ac:	ldr	x8, [sp, #184]
   1c3b0:	ldr	x9, [x8, #120]
   1c3b4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c3b8:	cmp	x9, x10
   1c3bc:	b.eq	1c3fc <mpc_tan@@Base+0x878>  // b.none
   1c3c0:	ldr	x8, [sp, #184]
   1c3c4:	ldr	x9, [x8, #152]
   1c3c8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c3cc:	cmp	x9, x10
   1c3d0:	b.eq	1c3fc <mpc_tan@@Base+0x878>  // b.none
   1c3d4:	ldr	x8, [sp, #184]
   1c3d8:	ldr	x9, [x8, #56]
   1c3dc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c3e0:	cmp	x9, x10
   1c3e4:	b.eq	1c3fc <mpc_tan@@Base+0x878>  // b.none
   1c3e8:	ldr	x8, [sp, #184]
   1c3ec:	ldr	x9, [x8, #88]
   1c3f0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c3f4:	cmp	x9, x10
   1c3f8:	b.ne	1c74c <mpc_tan@@Base+0xbc8>  // b.any
   1c3fc:	ldr	x8, [sp, #184]
   1c400:	ldr	x9, [x8, #184]
   1c404:	str	x9, [sp, #200]
   1c408:	ldr	x9, [sp, #200]
   1c40c:	mov	w10, #0x1                   	// #1
   1c410:	str	w10, [x9, #8]
   1c414:	ldr	x9, [sp, #200]
   1c418:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   1c41c:	str	x11, [x9, #16]
   1c420:	str	wzr, [sp, #196]
   1c424:	ldr	x9, [x8, #120]
   1c428:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   1c42c:	cmp	x9, x11
   1c430:	b.ge	1c460 <mpc_tan@@Base+0x8dc>  // b.tcont
   1c434:	ldr	x8, [sp, #184]
   1c438:	ldr	x9, [x8, #120]
   1c43c:	mov	x10, #0x2                   	// #2
   1c440:	movk	x10, #0x8000, lsl #48
   1c444:	cmp	x9, x10
   1c448:	b.ne	1c454 <mpc_tan@@Base+0x8d0>  // b.any
   1c44c:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c450:	b	1c454 <mpc_tan@@Base+0x8d0>
   1c454:	mov	w8, wzr
   1c458:	str	w8, [sp, #84]
   1c45c:	b	1c468 <mpc_tan@@Base+0x8e4>
   1c460:	ldur	w8, [x29, #-88]
   1c464:	str	w8, [sp, #84]
   1c468:	ldr	w8, [sp, #84]
   1c46c:	ldr	x9, [sp, #184]
   1c470:	ldr	x10, [x9, #56]
   1c474:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   1c478:	cmp	x10, x11
   1c47c:	str	w8, [sp, #80]
   1c480:	b.ge	1c4b0 <mpc_tan@@Base+0x92c>  // b.tcont
   1c484:	ldr	x8, [sp, #184]
   1c488:	ldr	x9, [x8, #56]
   1c48c:	mov	x10, #0x2                   	// #2
   1c490:	movk	x10, #0x8000, lsl #48
   1c494:	cmp	x9, x10
   1c498:	b.ne	1c4a4 <mpc_tan@@Base+0x920>  // b.any
   1c49c:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c4a0:	b	1c4a4 <mpc_tan@@Base+0x920>
   1c4a4:	mov	w8, wzr
   1c4a8:	str	w8, [sp, #76]
   1c4ac:	b	1c4b8 <mpc_tan@@Base+0x934>
   1c4b0:	ldur	w8, [x29, #-152]
   1c4b4:	str	w8, [sp, #76]
   1c4b8:	ldr	w8, [sp, #76]
   1c4bc:	ldr	w9, [sp, #80]
   1c4c0:	mul	w8, w9, w8
   1c4c4:	cmp	w8, #0x0
   1c4c8:	cset	w8, ge  // ge = tcont
   1c4cc:	tbnz	w8, #0, 1c4f4 <mpc_tan@@Base+0x970>
   1c4d0:	ldr	x8, [sp, #184]
   1c4d4:	ldr	x0, [x8, #184]
   1c4d8:	ldr	x1, [x8, #184]
   1c4dc:	mov	w9, wzr
   1c4e0:	mov	w2, w9
   1c4e4:	bl	4c60 <mpfr_neg@plt>
   1c4e8:	mov	w9, #0x1                   	// #1
   1c4ec:	str	w9, [sp, #212]
   1c4f0:	b	1c4fc <mpc_tan@@Base+0x978>
   1c4f4:	mov	w8, #0xffffffff            	// #-1
   1c4f8:	str	w8, [sp, #212]
   1c4fc:	ldr	x8, [sp, #184]
   1c500:	ldr	x9, [x8, #176]
   1c504:	ldr	x9, [x9, #48]
   1c508:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c50c:	cmp	x9, x10
   1c510:	b.ge	1c544 <mpc_tan@@Base+0x9c0>  // b.tcont
   1c514:	ldr	x8, [sp, #184]
   1c518:	ldr	x9, [x8, #176]
   1c51c:	ldr	x9, [x9, #48]
   1c520:	mov	x10, #0x2                   	// #2
   1c524:	movk	x10, #0x8000, lsl #48
   1c528:	cmp	x9, x10
   1c52c:	b.ne	1c538 <mpc_tan@@Base+0x9b4>  // b.any
   1c530:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c534:	b	1c538 <mpc_tan@@Base+0x9b4>
   1c538:	mov	w8, wzr
   1c53c:	str	w8, [sp, #72]
   1c540:	b	1c554 <mpc_tan@@Base+0x9d0>
   1c544:	ldr	x8, [sp, #184]
   1c548:	ldr	x9, [x8, #176]
   1c54c:	ldr	w10, [x9, #40]
   1c550:	str	w10, [sp, #72]
   1c554:	ldr	w8, [sp, #72]
   1c558:	cmp	w8, #0x0
   1c55c:	cset	w8, le
   1c560:	tbnz	w8, #0, 1c594 <mpc_tan@@Base+0xa10>
   1c564:	ldr	x8, [sp, #184]
   1c568:	ldr	x9, [x8, #184]
   1c56c:	add	x0, x9, #0x20
   1c570:	mov	x1, #0x1                   	// #1
   1c574:	mov	x9, xzr
   1c578:	mov	x2, x9
   1c57c:	mov	w10, wzr
   1c580:	mov	w3, w10
   1c584:	bl	5230 <mpfr_set_ui_2exp@plt>
   1c588:	mov	w10, #0x1                   	// #1
   1c58c:	str	w10, [sp, #208]
   1c590:	b	1c5c0 <mpc_tan@@Base+0xa3c>
   1c594:	ldr	x8, [sp, #184]
   1c598:	ldr	x9, [x8, #184]
   1c59c:	add	x0, x9, #0x20
   1c5a0:	mov	x1, #0xffffffffffffffff    	// #-1
   1c5a4:	mov	x9, xzr
   1c5a8:	mov	x2, x9
   1c5ac:	mov	w10, wzr
   1c5b0:	mov	w3, w10
   1c5b4:	bl	4ac0 <mpfr_set_si_2exp@plt>
   1c5b8:	mov	w10, #0xffffffff            	// #-1
   1c5bc:	str	w10, [sp, #208]
   1c5c0:	ldur	w8, [x29, #-28]
   1c5c4:	asr	w8, w8, #4
   1c5c8:	cmp	w8, #0x1
   1c5cc:	b.eq	1c640 <mpc_tan@@Base+0xabc>  // b.none
   1c5d0:	ldr	x8, [sp, #184]
   1c5d4:	ldr	x9, [x8, #184]
   1c5d8:	ldr	w10, [x9, #40]
   1c5dc:	mov	w11, #0xffffffff            	// #-1
   1c5e0:	mov	w12, #0x1                   	// #1
   1c5e4:	cmp	w10, #0x0
   1c5e8:	csel	w10, w11, w12, lt  // lt = tstop
   1c5ec:	cmp	w10, #0x0
   1c5f0:	cset	w10, ge  // ge = tcont
   1c5f4:	tbnz	w10, #0, 1c608 <mpc_tan@@Base+0xa84>
   1c5f8:	ldur	w8, [x29, #-28]
   1c5fc:	asr	w8, w8, #4
   1c600:	cmp	w8, #0x2
   1c604:	b.eq	1c640 <mpc_tan@@Base+0xabc>  // b.none
   1c608:	ldr	x8, [sp, #184]
   1c60c:	ldr	x9, [x8, #184]
   1c610:	ldr	w10, [x9, #40]
   1c614:	mov	w11, #0xffffffff            	// #-1
   1c618:	mov	w12, #0x1                   	// #1
   1c61c:	cmp	w10, #0x0
   1c620:	csel	w10, w11, w12, lt  // lt = tstop
   1c624:	cmp	w10, #0x0
   1c628:	cset	w10, le
   1c62c:	tbnz	w10, #0, 1c664 <mpc_tan@@Base+0xae0>
   1c630:	ldur	w8, [x29, #-28]
   1c634:	asr	w8, w8, #4
   1c638:	cmp	w8, #0x3
   1c63c:	b.ne	1c664 <mpc_tan@@Base+0xae0>  // b.any
   1c640:	ldr	x8, [sp, #184]
   1c644:	ldr	x9, [x8, #184]
   1c648:	add	x0, x9, #0x20
   1c64c:	ldr	x1, [x8, #184]
   1c650:	bl	52c0 <mpfr_nexttoward@plt>
   1c654:	ldr	w10, [sp, #208]
   1c658:	mov	w11, wzr
   1c65c:	subs	w10, w11, w10
   1c660:	str	w10, [sp, #208]
   1c664:	ldr	x8, [sp, #184]
   1c668:	ldr	x9, [x8, #184]
   1c66c:	ldr	x9, [x9, #16]
   1c670:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c674:	cmp	x9, x10
   1c678:	b.ne	1c694 <mpc_tan@@Base+0xb10>  // b.any
   1c67c:	ldr	x8, [sp, #184]
   1c680:	ldr	x0, [x8, #184]
   1c684:	ldur	w9, [x29, #-28]
   1c688:	and	w1, w9, #0xf
   1c68c:	bl	51d0 <mpc_fix_zero@plt>
   1c690:	str	w0, [sp, #212]
   1c694:	ldr	x8, [sp, #184]
   1c698:	ldr	x9, [x8, #184]
   1c69c:	ldr	x9, [x9, #48]
   1c6a0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c6a4:	cmp	x9, x10
   1c6a8:	b.ne	1c6c8 <mpc_tan@@Base+0xb44>  // b.any
   1c6ac:	ldr	x8, [sp, #184]
   1c6b0:	ldr	x9, [x8, #184]
   1c6b4:	add	x0, x9, #0x20
   1c6b8:	ldur	w10, [x29, #-28]
   1c6bc:	asr	w1, w10, #4
   1c6c0:	bl	51d0 <mpc_fix_zero@plt>
   1c6c4:	str	w0, [sp, #208]
   1c6c8:	ldr	w8, [sp, #212]
   1c6cc:	cmp	w8, #0x0
   1c6d0:	cset	w8, ge  // ge = tcont
   1c6d4:	tbnz	w8, #0, 1c6e4 <mpc_tan@@Base+0xb60>
   1c6d8:	mov	w8, #0x2                   	// #2
   1c6dc:	str	w8, [sp, #68]
   1c6e0:	b	1c6fc <mpc_tan@@Base+0xb78>
   1c6e4:	ldr	w8, [sp, #212]
   1c6e8:	mov	w9, wzr
   1c6ec:	mov	w10, #0x1                   	// #1
   1c6f0:	cmp	w8, #0x0
   1c6f4:	csel	w8, w9, w10, eq  // eq = none
   1c6f8:	str	w8, [sp, #68]
   1c6fc:	ldr	w8, [sp, #68]
   1c700:	ldr	w9, [sp, #208]
   1c704:	cmp	w9, #0x0
   1c708:	cset	w9, ge  // ge = tcont
   1c70c:	str	w8, [sp, #64]
   1c710:	tbnz	w9, #0, 1c720 <mpc_tan@@Base+0xb9c>
   1c714:	mov	w8, #0x2                   	// #2
   1c718:	str	w8, [sp, #60]
   1c71c:	b	1c738 <mpc_tan@@Base+0xbb4>
   1c720:	ldr	w8, [sp, #208]
   1c724:	mov	w9, wzr
   1c728:	mov	w10, #0x1                   	// #1
   1c72c:	cmp	w8, #0x0
   1c730:	csel	w8, w9, w10, eq  // eq = none
   1c734:	str	w8, [sp, #60]
   1c738:	ldr	w8, [sp, #60]
   1c73c:	ldr	w9, [sp, #64]
   1c740:	orr	w8, w9, w8, lsl #2
   1c744:	stur	w8, [x29, #-184]
   1c748:	b	1cb08 <mpc_tan@@Base+0xf84>
   1c74c:	sub	x8, x29, #0x60
   1c750:	ldr	x9, [sp, #184]
   1c754:	ldr	x10, [x9, #120]
   1c758:	str	x10, [sp, #240]
   1c75c:	sub	x2, x29, #0xa0
   1c760:	ldr	x10, [x9, #56]
   1c764:	str	x10, [sp, #232]
   1c768:	ldr	x10, [x9, #88]
   1c76c:	str	x10, [sp, #224]
   1c770:	mov	x0, x8
   1c774:	mov	x1, x8
   1c778:	mov	w3, #0x11                  	// #17
   1c77c:	bl	5350 <mpc_div@plt>
   1c780:	stur	w0, [x29, #-184]
   1c784:	ldr	x8, [sp, #184]
   1c788:	ldr	x9, [x8, #120]
   1c78c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c790:	cmp	x9, x10
   1c794:	b.eq	1c7ac <mpc_tan@@Base+0xc28>  // b.none
   1c798:	ldr	x8, [sp, #184]
   1c79c:	ldr	x9, [x8, #152]
   1c7a0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c7a4:	cmp	x9, x10
   1c7a8:	b.ne	1c7bc <mpc_tan@@Base+0xc38>  // b.any
   1c7ac:	ldr	x8, [sp, #184]
   1c7b0:	ldr	x9, [x8, #32]
   1c7b4:	str	x9, [x8, #24]
   1c7b8:	b	1cae8 <mpc_tan@@Base+0xf64>
   1c7bc:	ldur	w8, [x29, #-184]
   1c7c0:	and	w8, w8, #0x3
   1c7c4:	cmp	w8, #0x2
   1c7c8:	b.ne	1c7d0 <mpc_tan@@Base+0xc4c>  // b.any
   1c7cc:	b	1c7e0 <mpc_tan@@Base+0xc5c>
   1c7d0:	ldur	w8, [x29, #-184]
   1c7d4:	and	w8, w8, #0x3
   1c7d8:	cbnz	w8, 1c7e0 <mpc_tan@@Base+0xc5c>
   1c7dc:	b	1c84c <mpc_tan@@Base+0xcc8>
   1c7e0:	ldr	x8, [sp, #184]
   1c7e4:	ldr	x9, [x8, #120]
   1c7e8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c7ec:	cmp	x9, x10
   1c7f0:	b.ge	1c820 <mpc_tan@@Base+0xc9c>  // b.tcont
   1c7f4:	ldr	x8, [sp, #184]
   1c7f8:	ldr	x9, [x8, #120]
   1c7fc:	mov	x10, #0x2                   	// #2
   1c800:	movk	x10, #0x8000, lsl #48
   1c804:	cmp	x9, x10
   1c808:	b.ne	1c814 <mpc_tan@@Base+0xc90>  // b.any
   1c80c:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c810:	b	1c814 <mpc_tan@@Base+0xc90>
   1c814:	mov	w8, wzr
   1c818:	str	w8, [sp, #56]
   1c81c:	b	1c828 <mpc_tan@@Base+0xca4>
   1c820:	ldur	w8, [x29, #-88]
   1c824:	str	w8, [sp, #56]
   1c828:	ldr	w8, [sp, #56]
   1c82c:	cmp	w8, #0x0
   1c830:	cset	w8, le
   1c834:	tbnz	w8, #0, 1c844 <mpc_tan@@Base+0xcc0>
   1c838:	sub	x0, x29, #0x60
   1c83c:	bl	4ee0 <mpfr_nextabove@plt>
   1c840:	b	1c84c <mpc_tan@@Base+0xcc8>
   1c844:	sub	x0, x29, #0x60
   1c848:	bl	4c80 <mpfr_nextbelow@plt>
   1c84c:	ldur	w8, [x29, #-184]
   1c850:	asr	w8, w8, #2
   1c854:	cmp	w8, #0x2
   1c858:	b.ne	1c860 <mpc_tan@@Base+0xcdc>  // b.any
   1c85c:	b	1c870 <mpc_tan@@Base+0xcec>
   1c860:	ldur	w8, [x29, #-184]
   1c864:	asr	w8, w8, #2
   1c868:	cbnz	w8, 1c870 <mpc_tan@@Base+0xcec>
   1c86c:	b	1c8e4 <mpc_tan@@Base+0xd60>
   1c870:	ldr	x8, [sp, #184]
   1c874:	ldr	x9, [x8, #152]
   1c878:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1c87c:	cmp	x9, x10
   1c880:	b.ge	1c8b0 <mpc_tan@@Base+0xd2c>  // b.tcont
   1c884:	ldr	x8, [sp, #184]
   1c888:	ldr	x9, [x8, #152]
   1c88c:	mov	x10, #0x2                   	// #2
   1c890:	movk	x10, #0x8000, lsl #48
   1c894:	cmp	x9, x10
   1c898:	b.ne	1c8a4 <mpc_tan@@Base+0xd20>  // b.any
   1c89c:	bl	4be0 <mpfr_set_erangeflag@plt>
   1c8a0:	b	1c8a4 <mpc_tan@@Base+0xd20>
   1c8a4:	mov	w8, wzr
   1c8a8:	str	w8, [sp, #52]
   1c8ac:	b	1c8b8 <mpc_tan@@Base+0xd34>
   1c8b0:	ldur	w8, [x29, #-56]
   1c8b4:	str	w8, [sp, #52]
   1c8b8:	ldr	w8, [sp, #52]
   1c8bc:	cmp	w8, #0x0
   1c8c0:	cset	w8, le
   1c8c4:	tbnz	w8, #0, 1c8d8 <mpc_tan@@Base+0xd54>
   1c8c8:	sub	x8, x29, #0x60
   1c8cc:	add	x0, x8, #0x20
   1c8d0:	bl	4ee0 <mpfr_nextabove@plt>
   1c8d4:	b	1c8e4 <mpc_tan@@Base+0xd60>
   1c8d8:	sub	x8, x29, #0x60
   1c8dc:	add	x0, x8, #0x20
   1c8e0:	bl	4c80 <mpfr_nextbelow@plt>
   1c8e4:	ldr	x8, [sp, #184]
   1c8e8:	ldr	x9, [x8, #120]
   1c8ec:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1c8f0:	cmp	x9, x10
   1c8f4:	cset	w11, eq  // eq = none
   1c8f8:	and	w11, w11, #0x1
   1c8fc:	cbz	w11, 1c930 <mpc_tan@@Base+0xdac>
   1c900:	adrp	x8, 2e000 <mpc_ui_ui_sub@@Base+0x111e4>
   1c904:	ldr	x8, [x8, #4008]
   1c908:	ldr	x0, [x8]
   1c90c:	adrp	x1, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1c910:	add	x1, x1, #0x2a0
   1c914:	adrp	x2, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1c918:	add	x2, x2, #0x305
   1c91c:	mov	w3, #0x107                 	// #263
   1c920:	adrp	x4, 1e000 <mpc_ui_ui_sub@@Base+0x11e4>
   1c924:	add	x4, x4, #0x60f
   1c928:	bl	56a0 <fprintf@plt>
   1c92c:	bl	5100 <abort@plt>
   1c930:	ldr	x8, [sp, #184]
   1c934:	ldr	x9, [x8, #120]
   1c938:	str	x9, [sp, #216]
   1c93c:	ldr	x9, [sp, #240]
   1c940:	ldr	x10, [sp, #216]
   1c944:	subs	x9, x9, x10
   1c948:	ldr	x10, [sp, #232]
   1c94c:	mov	x11, xzr
   1c950:	subs	x10, x11, x10
   1c954:	ldr	x11, [sp, #232]
   1c958:	ldr	x12, [sp, #224]
   1c95c:	mov	x13, #0x2                   	// #2
   1c960:	mul	x12, x13, x12
   1c964:	subs	x11, x11, x12
   1c968:	cmp	x10, x11
   1c96c:	str	x9, [sp, #40]
   1c970:	b.le	1c988 <mpc_tan@@Base+0xe04>
   1c974:	ldr	x8, [sp, #232]
   1c978:	mov	x9, xzr
   1c97c:	subs	x8, x9, x8
   1c980:	str	x8, [sp, #32]
   1c984:	b	1c9a0 <mpc_tan@@Base+0xe1c>
   1c988:	ldr	x8, [sp, #232]
   1c98c:	ldr	x9, [sp, #224]
   1c990:	mov	x10, #0x2                   	// #2
   1c994:	mul	x9, x10, x9
   1c998:	subs	x8, x8, x9
   1c99c:	str	x8, [sp, #32]
   1c9a0:	ldr	x8, [sp, #32]
   1c9a4:	ldr	x9, [sp, #40]
   1c9a8:	add	x8, x9, x8
   1c9ac:	str	x8, [sp, #248]
   1c9b0:	ldr	x8, [sp, #248]
   1c9b4:	cmp	x8, #0x2
   1c9b8:	b.ge	1c9c8 <mpc_tan@@Base+0xe44>  // b.tcont
   1c9bc:	mov	x8, #0x7                   	// #7
   1c9c0:	str	x8, [sp, #24]
   1c9c4:	b	1c9f4 <mpc_tan@@Base+0xe70>
   1c9c8:	ldr	x8, [sp, #248]
   1c9cc:	cmp	x8, #0x2
   1c9d0:	b.ne	1c9e0 <mpc_tan@@Base+0xe5c>  // b.any
   1c9d4:	mov	x8, #0x8                   	// #8
   1c9d8:	str	x8, [sp, #16]
   1c9dc:	b	1c9ec <mpc_tan@@Base+0xe68>
   1c9e0:	ldr	x8, [sp, #248]
   1c9e4:	add	x8, x8, #0x5
   1c9e8:	str	x8, [sp, #16]
   1c9ec:	ldr	x8, [sp, #16]
   1c9f0:	str	x8, [sp, #24]
   1c9f4:	ldr	x8, [sp, #24]
   1c9f8:	ldr	x9, [sp, #184]
   1c9fc:	str	x8, [x9, #24]
   1ca00:	sub	x0, x29, #0x60
   1ca04:	bl	55c0 <mpfr_number_p@plt>
   1ca08:	mov	w10, #0x1                   	// #1
   1ca0c:	str	w10, [sp, #12]
   1ca10:	cbz	w0, 1ca60 <mpc_tan@@Base+0xedc>
   1ca14:	ldr	x8, [sp, #184]
   1ca18:	ldr	x9, [x8, #32]
   1ca1c:	ldr	x10, [x8, #24]
   1ca20:	subs	x1, x9, x10
   1ca24:	ldr	x9, [x8, #184]
   1ca28:	ldr	x9, [x9]
   1ca2c:	ldur	w11, [x29, #-28]
   1ca30:	mov	w12, wzr
   1ca34:	tst	w11, #0xf
   1ca38:	cset	w11, eq  // eq = none
   1ca3c:	and	w11, w11, #0x1
   1ca40:	add	x4, x9, w11, sxtw
   1ca44:	sub	x0, x29, #0x60
   1ca48:	mov	w2, w12
   1ca4c:	mov	w3, #0x1                   	// #1
   1ca50:	bl	5540 <mpfr_can_round@plt>
   1ca54:	cmp	w0, #0x0
   1ca58:	cset	w11, ne  // ne = any
   1ca5c:	str	w11, [sp, #12]
   1ca60:	ldr	w8, [sp, #12]
   1ca64:	and	w8, w8, #0x1
   1ca68:	stur	w8, [x29, #-180]
   1ca6c:	ldur	w8, [x29, #-180]
   1ca70:	cbz	w8, 1cae8 <mpc_tan@@Base+0xf64>
   1ca74:	sub	x8, x29, #0x60
   1ca78:	add	x0, x8, #0x20
   1ca7c:	bl	55c0 <mpfr_number_p@plt>
   1ca80:	mov	w9, #0x1                   	// #1
   1ca84:	str	w9, [sp, #8]
   1ca88:	cbz	w0, 1cadc <mpc_tan@@Base+0xf58>
   1ca8c:	sub	x8, x29, #0x60
   1ca90:	add	x0, x8, #0x20
   1ca94:	ldr	x8, [sp, #184]
   1ca98:	ldr	x9, [x8, #32]
   1ca9c:	subs	x1, x9, #0x6
   1caa0:	ldr	x9, [x8, #184]
   1caa4:	ldr	x9, [x9, #32]
   1caa8:	ldur	w10, [x29, #-28]
   1caac:	asr	w10, w10, #4
   1cab0:	mov	w11, wzr
   1cab4:	cmp	w10, #0x0
   1cab8:	cset	w10, eq  // eq = none
   1cabc:	and	w10, w10, #0x1
   1cac0:	add	x4, x9, w10, sxtw
   1cac4:	mov	w2, w11
   1cac8:	mov	w3, #0x1                   	// #1
   1cacc:	bl	5540 <mpfr_can_round@plt>
   1cad0:	cmp	w0, #0x0
   1cad4:	cset	w10, ne  // ne = any
   1cad8:	str	w10, [sp, #8]
   1cadc:	ldr	w8, [sp, #8]
   1cae0:	and	w8, w8, #0x1
   1cae4:	stur	w8, [x29, #-180]
   1cae8:	ldur	w8, [x29, #-180]
   1caec:	cbz	w8, 1c12c <mpc_tan@@Base+0x5a8>
   1caf0:	ldr	x8, [sp, #184]
   1caf4:	ldr	x0, [x8, #184]
   1caf8:	ldur	w2, [x29, #-28]
   1cafc:	sub	x1, x29, #0x60
   1cb00:	bl	5680 <mpc_set@plt>
   1cb04:	stur	w0, [x29, #-184]
   1cb08:	sub	x0, x29, #0x60
   1cb0c:	bl	4af0 <mpc_clear@plt>
   1cb10:	sub	x0, x29, #0xa0
   1cb14:	bl	4af0 <mpc_clear@plt>
   1cb18:	ldur	w8, [x29, #-184]
   1cb1c:	stur	w8, [x29, #-4]
   1cb20:	ldur	w0, [x29, #-4]
   1cb24:	add	sp, sp, #0x250
   1cb28:	ldr	x28, [sp, #16]
   1cb2c:	ldp	x29, x30, [sp], #32
   1cb30:	ret

000000000001cb34 <mpc_tanh@@Base>:
   1cb34:	sub	sp, sp, #0xe0
   1cb38:	stp	x29, x30, [sp, #208]
   1cb3c:	add	x29, sp, #0xd0
   1cb40:	sub	x8, x29, #0x10
   1cb44:	sub	x9, x29, #0x60
   1cb48:	add	x10, sp, #0x30
   1cb4c:	str	x0, [x8, #8]
   1cb50:	str	x1, [x8]
   1cb54:	stur	w2, [x29, #-20]
   1cb58:	ldr	x11, [x8]
   1cb5c:	ldr	q0, [x11, #32]
   1cb60:	stur	q0, [x29, #-96]
   1cb64:	ldr	q0, [x11, #48]
   1cb68:	stur	q0, [x29, #-80]
   1cb6c:	ldr	x11, [x8]
   1cb70:	ldr	q0, [x11]
   1cb74:	stur	q0, [x29, #-64]
   1cb78:	ldr	q0, [x11, #16]
   1cb7c:	stur	q0, [x29, #-48]
   1cb80:	ldr	x11, [x8, #8]
   1cb84:	ldr	q0, [x11, #32]
   1cb88:	str	q0, [sp, #48]
   1cb8c:	ldr	q0, [x11, #48]
   1cb90:	str	q0, [sp, #64]
   1cb94:	ldr	x11, [x8, #8]
   1cb98:	ldr	q0, [x11]
   1cb9c:	str	q0, [sp, #80]
   1cba0:	ldr	q0, [x11, #16]
   1cba4:	str	q0, [sp, #96]
   1cba8:	ldur	w12, [x29, #-20]
   1cbac:	ldur	w13, [x29, #-20]
   1cbb0:	and	w13, w13, #0xf
   1cbb4:	lsl	w13, w13, #4
   1cbb8:	add	w2, w13, w12, asr #4
   1cbbc:	mov	x0, x10
   1cbc0:	mov	x1, x9
   1cbc4:	str	x8, [sp, #32]
   1cbc8:	bl	4cf0 <mpc_tan@plt>
   1cbcc:	str	w0, [sp, #44]
   1cbd0:	ldr	x8, [sp, #32]
   1cbd4:	ldr	x9, [x8, #8]
   1cbd8:	ldr	q0, [sp, #80]
   1cbdc:	str	q0, [x9]
   1cbe0:	ldr	q0, [sp, #96]
   1cbe4:	str	q0, [x9, #16]
   1cbe8:	ldr	x9, [x8, #8]
   1cbec:	ldr	q0, [sp, #48]
   1cbf0:	str	q0, [x9, #32]
   1cbf4:	ldr	q0, [sp, #64]
   1cbf8:	str	q0, [x9, #48]
   1cbfc:	ldr	w12, [sp, #44]
   1cc00:	asr	w12, w12, #2
   1cc04:	cmp	w12, #0x2
   1cc08:	b.ne	1cc18 <mpc_tanh@@Base+0xe4>  // b.any
   1cc0c:	mov	w8, #0xffffffff            	// #-1
   1cc10:	str	w8, [sp, #28]
   1cc14:	b	1cc34 <mpc_tanh@@Base+0x100>
   1cc18:	ldr	w8, [sp, #44]
   1cc1c:	asr	w8, w8, #2
   1cc20:	mov	w9, wzr
   1cc24:	mov	w10, #0x1                   	// #1
   1cc28:	cmp	w8, #0x0
   1cc2c:	csel	w8, w9, w10, eq  // eq = none
   1cc30:	str	w8, [sp, #28]
   1cc34:	ldr	w8, [sp, #28]
   1cc38:	cmp	w8, #0x0
   1cc3c:	cset	w8, ge  // ge = tcont
   1cc40:	tbnz	w8, #0, 1cc50 <mpc_tanh@@Base+0x11c>
   1cc44:	mov	w8, #0x2                   	// #2
   1cc48:	str	w8, [sp, #24]
   1cc4c:	b	1cca0 <mpc_tanh@@Base+0x16c>
   1cc50:	ldr	w8, [sp, #44]
   1cc54:	asr	w8, w8, #2
   1cc58:	cmp	w8, #0x2
   1cc5c:	b.ne	1cc6c <mpc_tanh@@Base+0x138>  // b.any
   1cc60:	mov	w8, #0xffffffff            	// #-1
   1cc64:	str	w8, [sp, #20]
   1cc68:	b	1cc88 <mpc_tanh@@Base+0x154>
   1cc6c:	ldr	w8, [sp, #44]
   1cc70:	asr	w8, w8, #2
   1cc74:	mov	w9, wzr
   1cc78:	mov	w10, #0x1                   	// #1
   1cc7c:	cmp	w8, #0x0
   1cc80:	csel	w8, w9, w10, eq  // eq = none
   1cc84:	str	w8, [sp, #20]
   1cc88:	ldr	w8, [sp, #20]
   1cc8c:	mov	w9, wzr
   1cc90:	mov	w10, #0x1                   	// #1
   1cc94:	cmp	w8, #0x0
   1cc98:	csel	w8, w9, w10, eq  // eq = none
   1cc9c:	str	w8, [sp, #24]
   1cca0:	ldr	w8, [sp, #24]
   1cca4:	ldr	w9, [sp, #44]
   1cca8:	and	w9, w9, #0x3
   1ccac:	cmp	w9, #0x2
   1ccb0:	str	w8, [sp, #16]
   1ccb4:	b.ne	1ccc4 <mpc_tanh@@Base+0x190>  // b.any
   1ccb8:	mov	w8, #0xffffffff            	// #-1
   1ccbc:	str	w8, [sp, #12]
   1ccc0:	b	1ccdc <mpc_tanh@@Base+0x1a8>
   1ccc4:	ldr	w8, [sp, #44]
   1ccc8:	mov	w9, wzr
   1cccc:	mov	w10, #0x1                   	// #1
   1ccd0:	tst	w8, #0x3
   1ccd4:	csel	w8, w9, w10, eq  // eq = none
   1ccd8:	str	w8, [sp, #12]
   1ccdc:	ldr	w8, [sp, #12]
   1cce0:	cmp	w8, #0x0
   1cce4:	cset	w8, ge  // ge = tcont
   1cce8:	tbnz	w8, #0, 1ccf8 <mpc_tanh@@Base+0x1c4>
   1ccec:	mov	w8, #0x2                   	// #2
   1ccf0:	str	w8, [sp, #8]
   1ccf4:	b	1cd44 <mpc_tanh@@Base+0x210>
   1ccf8:	ldr	w8, [sp, #44]
   1ccfc:	and	w8, w8, #0x3
   1cd00:	cmp	w8, #0x2
   1cd04:	b.ne	1cd14 <mpc_tanh@@Base+0x1e0>  // b.any
   1cd08:	mov	w8, #0xffffffff            	// #-1
   1cd0c:	str	w8, [sp, #4]
   1cd10:	b	1cd2c <mpc_tanh@@Base+0x1f8>
   1cd14:	ldr	w8, [sp, #44]
   1cd18:	mov	w9, wzr
   1cd1c:	mov	w10, #0x1                   	// #1
   1cd20:	tst	w8, #0x3
   1cd24:	csel	w8, w9, w10, eq  // eq = none
   1cd28:	str	w8, [sp, #4]
   1cd2c:	ldr	w8, [sp, #4]
   1cd30:	mov	w9, wzr
   1cd34:	mov	w10, #0x1                   	// #1
   1cd38:	cmp	w8, #0x0
   1cd3c:	csel	w8, w9, w10, eq  // eq = none
   1cd40:	str	w8, [sp, #8]
   1cd44:	ldr	w8, [sp, #8]
   1cd48:	ldr	w9, [sp, #16]
   1cd4c:	orr	w0, w9, w8, lsl #2
   1cd50:	ldp	x29, x30, [sp, #208]
   1cd54:	add	sp, sp, #0xe0
   1cd58:	ret

000000000001cd5c <mpc_ceil_log2@@Base>:
   1cd5c:	sub	sp, sp, #0x10
   1cd60:	str	x0, [sp, #8]
   1cd64:	str	xzr, [sp]
   1cd68:	ldr	x8, [sp, #8]
   1cd6c:	cmp	x8, #0x1
   1cd70:	b.le	1cd98 <mpc_ceil_log2@@Base+0x3c>
   1cd74:	ldr	x8, [sp]
   1cd78:	add	x8, x8, #0x1
   1cd7c:	str	x8, [sp]
   1cd80:	ldr	x8, [sp, #8]
   1cd84:	add	x8, x8, #0x1
   1cd88:	mov	x9, #0x2                   	// #2
   1cd8c:	sdiv	x8, x8, x9
   1cd90:	str	x8, [sp, #8]
   1cd94:	b	1cd68 <mpc_ceil_log2@@Base+0xc>
   1cd98:	ldr	x0, [sp]
   1cd9c:	add	sp, sp, #0x10
   1cda0:	ret

000000000001cda4 <mpc_ui_div@@Base>:
   1cda4:	sub	sp, sp, #0x80
   1cda8:	stp	x29, x30, [sp, #112]
   1cdac:	add	x29, sp, #0x70
   1cdb0:	mov	x8, #0x40                  	// #64
   1cdb4:	add	x9, sp, #0x10
   1cdb8:	stur	x0, [x29, #-8]
   1cdbc:	stur	x1, [x29, #-16]
   1cdc0:	stur	x2, [x29, #-24]
   1cdc4:	stur	w3, [x29, #-28]
   1cdc8:	mov	x0, x9
   1cdcc:	mov	x1, x8
   1cdd0:	str	x9, [sp, #8]
   1cdd4:	bl	4db0 <mpc_init2@plt>
   1cdd8:	ldur	x1, [x29, #-16]
   1cddc:	ldur	w2, [x29, #-28]
   1cde0:	ldr	x0, [sp, #8]
   1cde4:	bl	4da0 <mpc_set_ui@plt>
   1cde8:	ldur	x8, [x29, #-8]
   1cdec:	ldur	x2, [x29, #-24]
   1cdf0:	ldur	w3, [x29, #-28]
   1cdf4:	mov	x0, x8
   1cdf8:	ldr	x1, [sp, #8]
   1cdfc:	bl	5350 <mpc_div@plt>
   1ce00:	stur	w0, [x29, #-32]
   1ce04:	ldr	x0, [sp, #8]
   1ce08:	bl	4af0 <mpc_clear@plt>
   1ce0c:	ldur	w0, [x29, #-32]
   1ce10:	ldp	x29, x30, [sp, #112]
   1ce14:	add	sp, sp, #0x80
   1ce18:	ret

000000000001ce1c <mpc_ui_ui_sub@@Base>:
   1ce1c:	sub	sp, sp, #0x50
   1ce20:	stp	x29, x30, [sp, #64]
   1ce24:	add	x29, sp, #0x40
   1ce28:	stur	x0, [x29, #-8]
   1ce2c:	stur	x1, [x29, #-16]
   1ce30:	stur	x2, [x29, #-24]
   1ce34:	str	x3, [sp, #32]
   1ce38:	str	w4, [sp, #28]
   1ce3c:	ldur	x0, [x29, #-8]
   1ce40:	ldur	x1, [x29, #-16]
   1ce44:	ldr	x2, [sp, #32]
   1ce48:	ldr	w8, [sp, #28]
   1ce4c:	and	w3, w8, #0xf
   1ce50:	bl	5520 <mpfr_ui_sub@plt>
   1ce54:	str	w0, [sp, #24]
   1ce58:	ldur	x9, [x29, #-8]
   1ce5c:	add	x0, x9, #0x20
   1ce60:	ldur	x1, [x29, #-24]
   1ce64:	ldr	x9, [sp, #32]
   1ce68:	add	x2, x9, #0x20
   1ce6c:	ldr	w8, [sp, #28]
   1ce70:	asr	w3, w8, #4
   1ce74:	bl	5520 <mpfr_ui_sub@plt>
   1ce78:	str	w0, [sp, #20]
   1ce7c:	ldr	w8, [sp, #24]
   1ce80:	cmp	w8, #0x0
   1ce84:	cset	w8, ge  // ge = tcont
   1ce88:	tbnz	w8, #0, 1ce98 <mpc_ui_ui_sub@@Base+0x7c>
   1ce8c:	mov	w8, #0x2                   	// #2
   1ce90:	str	w8, [sp, #16]
   1ce94:	b	1ceb0 <mpc_ui_ui_sub@@Base+0x94>
   1ce98:	ldr	w8, [sp, #24]
   1ce9c:	mov	w9, wzr
   1cea0:	mov	w10, #0x1                   	// #1
   1cea4:	cmp	w8, #0x0
   1cea8:	csel	w8, w9, w10, eq  // eq = none
   1ceac:	str	w8, [sp, #16]
   1ceb0:	ldr	w8, [sp, #16]
   1ceb4:	ldr	w9, [sp, #20]
   1ceb8:	cmp	w9, #0x0
   1cebc:	cset	w9, ge  // ge = tcont
   1cec0:	str	w8, [sp, #12]
   1cec4:	tbnz	w9, #0, 1ced4 <mpc_ui_ui_sub@@Base+0xb8>
   1cec8:	mov	w8, #0x2                   	// #2
   1cecc:	str	w8, [sp, #8]
   1ced0:	b	1ceec <mpc_ui_ui_sub@@Base+0xd0>
   1ced4:	ldr	w8, [sp, #20]
   1ced8:	mov	w9, wzr
   1cedc:	mov	w10, #0x1                   	// #1
   1cee0:	cmp	w8, #0x0
   1cee4:	csel	w8, w9, w10, eq  // eq = none
   1cee8:	str	w8, [sp, #8]
   1ceec:	ldr	w8, [sp, #8]
   1cef0:	ldr	w9, [sp, #12]
   1cef4:	orr	w0, w9, w8, lsl #2
   1cef8:	ldp	x29, x30, [sp, #64]
   1cefc:	add	sp, sp, #0x50
   1cf00:	ret
   1cf04:	nop
   1cf08:	stp	x29, x30, [sp, #-48]!
   1cf0c:	mov	x29, sp
   1cf10:	str	q0, [sp, #16]
   1cf14:	str	q1, [sp, #32]
   1cf18:	ldp	x6, x1, [sp, #16]
   1cf1c:	ldp	x0, x3, [sp, #32]
   1cf20:	mrs	x15, fpcr
   1cf24:	lsr	x7, x1, #63
   1cf28:	mov	x10, x0
   1cf2c:	ubfiz	x4, x3, #3, #48
   1cf30:	lsr	x5, x3, #63
   1cf34:	mov	x12, x7
   1cf38:	ubfiz	x2, x1, #3, #48
   1cf3c:	orr	x4, x4, x0, lsr #61
   1cf40:	ubfx	x8, x1, #48, #15
   1cf44:	ubfx	x0, x3, #48, #15
   1cf48:	and	w7, w7, #0xff
   1cf4c:	mov	x16, x12
   1cf50:	cmp	x12, x5
   1cf54:	and	w11, w5, #0xff
   1cf58:	orr	x2, x2, x6, lsr #61
   1cf5c:	mov	x1, x8
   1cf60:	lsl	x9, x6, #3
   1cf64:	mov	x3, x0
   1cf68:	lsl	x13, x10, #3
   1cf6c:	b.eq	1d118 <mpc_ui_ui_sub@@Base+0x2fc>  // b.none
   1cf70:	sub	w0, w8, w0
   1cf74:	cmp	w0, #0x0
   1cf78:	b.le	1d0c4 <mpc_ui_ui_sub@@Base+0x2a8>
   1cf7c:	cbz	x3, 1d178 <mpc_ui_ui_sub@@Base+0x35c>
   1cf80:	orr	x4, x4, #0x8000000000000
   1cf84:	mov	x3, #0x7fff                	// #32767
   1cf88:	cmp	x1, x3
   1cf8c:	b.eq	1d37c <mpc_ui_ui_sub@@Base+0x560>  // b.none
   1cf90:	cmp	w0, #0x74
   1cf94:	b.gt	1d400 <mpc_ui_ui_sub@@Base+0x5e4>
   1cf98:	cmp	w0, #0x3f
   1cf9c:	b.gt	1d560 <mpc_ui_ui_sub@@Base+0x744>
   1cfa0:	mov	w3, #0x40                  	// #64
   1cfa4:	sub	w3, w3, w0
   1cfa8:	lsr	x6, x13, x0
   1cfac:	lsl	x13, x13, x3
   1cfb0:	cmp	x13, #0x0
   1cfb4:	cset	x5, ne  // ne = any
   1cfb8:	lsl	x3, x4, x3
   1cfbc:	orr	x3, x3, x6
   1cfc0:	lsr	x0, x4, x0
   1cfc4:	orr	x3, x3, x5
   1cfc8:	sub	x2, x2, x0
   1cfcc:	subs	x9, x9, x3
   1cfd0:	sbc	x2, x2, xzr
   1cfd4:	and	x3, x2, #0x7ffffffffffff
   1cfd8:	tbz	x2, #51, 1d1b8 <mpc_ui_ui_sub@@Base+0x39c>
   1cfdc:	cbz	x3, 1d3e4 <mpc_ui_ui_sub@@Base+0x5c8>
   1cfe0:	clz	x0, x3
   1cfe4:	sub	w0, w0, #0xc
   1cfe8:	neg	w2, w0
   1cfec:	lsl	x4, x3, x0
   1cff0:	lsl	x3, x9, x0
   1cff4:	lsr	x9, x9, x2
   1cff8:	orr	x2, x9, x4
   1cffc:	cmp	x1, w0, sxtw
   1d000:	sxtw	x4, w0
   1d004:	b.gt	1d3c4 <mpc_ui_ui_sub@@Base+0x5a8>
   1d008:	sub	w1, w0, w1
   1d00c:	add	w0, w1, #0x1
   1d010:	cmp	w0, #0x3f
   1d014:	b.gt	1d528 <mpc_ui_ui_sub@@Base+0x70c>
   1d018:	mov	w1, #0x40                  	// #64
   1d01c:	sub	w1, w1, w0
   1d020:	lsr	x4, x3, x0
   1d024:	lsl	x3, x3, x1
   1d028:	cmp	x3, #0x0
   1d02c:	lsl	x9, x2, x1
   1d030:	cset	x1, ne  // ne = any
   1d034:	orr	x9, x9, x4
   1d038:	lsr	x2, x2, x0
   1d03c:	orr	x9, x9, x1
   1d040:	orr	x8, x9, x2
   1d044:	cbz	x8, 1d1cc <mpc_ui_ui_sub@@Base+0x3b0>
   1d048:	and	x0, x9, #0x7
   1d04c:	mov	x1, #0x0                   	// #0
   1d050:	mov	w5, #0x1                   	// #1
   1d054:	cbz	x0, 1d410 <mpc_ui_ui_sub@@Base+0x5f4>
   1d058:	and	x3, x15, #0xc00000
   1d05c:	cmp	x3, #0x400, lsl #12
   1d060:	b.eq	1d354 <mpc_ui_ui_sub@@Base+0x538>  // b.none
   1d064:	cmp	x3, #0x800, lsl #12
   1d068:	b.eq	1d334 <mpc_ui_ui_sub@@Base+0x518>  // b.none
   1d06c:	cbz	x3, 1d360 <mpc_ui_ui_sub@@Base+0x544>
   1d070:	and	x3, x2, #0x8000000000000
   1d074:	mov	w0, #0x10                  	// #16
   1d078:	cbz	w5, 1d080 <mpc_ui_ui_sub@@Base+0x264>
   1d07c:	orr	w0, w0, #0x8
   1d080:	cbz	x3, 1d398 <mpc_ui_ui_sub@@Base+0x57c>
   1d084:	add	x1, x1, #0x1
   1d088:	mov	x3, #0x7fff                	// #32767
   1d08c:	cmp	x1, x3
   1d090:	b.eq	1d27c <mpc_ui_ui_sub@@Base+0x460>  // b.none
   1d094:	and	w1, w1, #0x7fff
   1d098:	extr	x8, x2, x9, #3
   1d09c:	ubfx	x2, x2, #3, #48
   1d0a0:	mov	x5, #0x0                   	// #0
   1d0a4:	orr	w1, w1, w7, lsl #15
   1d0a8:	bfxil	x5, x2, #0, #48
   1d0ac:	fmov	d0, x8
   1d0b0:	bfi	x5, x1, #48, #16
   1d0b4:	fmov	v0.d[1], x5
   1d0b8:	cbnz	w0, 1d2d8 <mpc_ui_ui_sub@@Base+0x4bc>
   1d0bc:	ldp	x29, x30, [sp], #48
   1d0c0:	ret
   1d0c4:	mov	x14, x5
   1d0c8:	b.eq	1d1e4 <mpc_ui_ui_sub@@Base+0x3c8>  // b.none
   1d0cc:	cbnz	x8, 1d468 <mpc_ui_ui_sub@@Base+0x64c>
   1d0d0:	orr	x1, x2, x9
   1d0d4:	cbz	x1, 1d194 <mpc_ui_ui_sub@@Base+0x378>
   1d0d8:	cmn	w0, #0x1
   1d0dc:	b.eq	1d884 <mpc_ui_ui_sub@@Base+0xa68>  // b.none
   1d0e0:	mov	x1, #0x7fff                	// #32767
   1d0e4:	mvn	w0, w0
   1d0e8:	cmp	x3, x1
   1d0ec:	b.ne	1d47c <mpc_ui_ui_sub@@Base+0x660>  // b.any
   1d0f0:	orr	x0, x4, x13
   1d0f4:	cbnz	x0, 1d7dc <mpc_ui_ui_sub@@Base+0x9c0>
   1d0f8:	mov	x16, x14
   1d0fc:	nop
   1d100:	mov	x4, #0x0                   	// #0
   1d104:	fmov	d0, x4
   1d108:	lsl	x16, x16, #63
   1d10c:	orr	x5, x16, #0x7fff000000000000
   1d110:	fmov	v0.d[1], x5
   1d114:	b	1d0bc <mpc_ui_ui_sub@@Base+0x2a0>
   1d118:	sub	w5, w8, w0
   1d11c:	cmp	w5, #0x0
   1d120:	b.le	1d2ec <mpc_ui_ui_sub@@Base+0x4d0>
   1d124:	cbz	x0, 1d22c <mpc_ui_ui_sub@@Base+0x410>
   1d128:	orr	x4, x4, #0x8000000000000
   1d12c:	mov	x0, #0x7fff                	// #32767
   1d130:	cmp	x1, x0
   1d134:	b.eq	1d37c <mpc_ui_ui_sub@@Base+0x560>  // b.none
   1d138:	cmp	w5, #0x74
   1d13c:	b.gt	1d510 <mpc_ui_ui_sub@@Base+0x6f4>
   1d140:	cmp	w5, #0x3f
   1d144:	b.gt	1d610 <mpc_ui_ui_sub@@Base+0x7f4>
   1d148:	mov	w0, #0x40                  	// #64
   1d14c:	sub	w0, w0, w5
   1d150:	lsr	x6, x13, x5
   1d154:	lsl	x13, x13, x0
   1d158:	cmp	x13, #0x0
   1d15c:	lsl	x0, x4, x0
   1d160:	cset	x3, ne  // ne = any
   1d164:	orr	x0, x0, x6
   1d168:	lsr	x4, x4, x5
   1d16c:	orr	x0, x0, x3
   1d170:	add	x2, x2, x4
   1d174:	b	1d51c <mpc_ui_ui_sub@@Base+0x700>
   1d178:	orr	x3, x4, x13
   1d17c:	cbz	x3, 1d4ec <mpc_ui_ui_sub@@Base+0x6d0>
   1d180:	subs	w0, w0, #0x1
   1d184:	b.ne	1cf84 <mpc_ui_ui_sub@@Base+0x168>  // b.any
   1d188:	subs	x9, x9, x13
   1d18c:	sbc	x2, x2, x4
   1d190:	b	1cfd4 <mpc_ui_ui_sub@@Base+0x1b8>
   1d194:	mov	x0, #0x7fff                	// #32767
   1d198:	cmp	x3, x0
   1d19c:	b.eq	1d8d0 <mpc_ui_ui_sub@@Base+0xab4>  // b.none
   1d1a0:	mov	w7, w11
   1d1a4:	mov	x2, x4
   1d1a8:	mov	x9, x13
   1d1ac:	mov	x1, x3
   1d1b0:	mov	x12, x5
   1d1b4:	nop
   1d1b8:	orr	x8, x9, x2
   1d1bc:	and	x0, x9, #0x7
   1d1c0:	mov	w5, #0x0                   	// #0
   1d1c4:	cbnz	x1, 1d054 <mpc_ui_ui_sub@@Base+0x238>
   1d1c8:	cbnz	x8, 1d048 <mpc_ui_ui_sub@@Base+0x22c>
   1d1cc:	mov	x2, #0x0                   	// #0
   1d1d0:	mov	x1, #0x0                   	// #0
   1d1d4:	mov	w0, #0x0                   	// #0
   1d1d8:	and	x2, x2, #0xffffffffffff
   1d1dc:	and	w1, w1, #0x7fff
   1d1e0:	b	1d0a0 <mpc_ui_ui_sub@@Base+0x284>
   1d1e4:	add	x5, x8, #0x1
   1d1e8:	tst	x5, #0x7ffe
   1d1ec:	b.ne	1d4bc <mpc_ui_ui_sub@@Base+0x6a0>  // b.any
   1d1f0:	orr	x5, x2, x9
   1d1f4:	orr	x8, x4, x13
   1d1f8:	cbnz	x1, 1d67c <mpc_ui_ui_sub@@Base+0x860>
   1d1fc:	cbz	x5, 1d724 <mpc_ui_ui_sub@@Base+0x908>
   1d200:	cbz	x8, 1d738 <mpc_ui_ui_sub@@Base+0x91c>
   1d204:	subs	x5, x9, x13
   1d208:	cmp	x9, x13
   1d20c:	sbc	x3, x2, x4
   1d210:	tbz	x3, #51, 1d904 <mpc_ui_ui_sub@@Base+0xae8>
   1d214:	subs	x9, x13, x9
   1d218:	mov	w7, w11
   1d21c:	sbc	x2, x4, x2
   1d220:	mov	x12, x14
   1d224:	orr	x8, x9, x2
   1d228:	b	1d044 <mpc_ui_ui_sub@@Base+0x228>
   1d22c:	orr	x0, x4, x13
   1d230:	cbz	x0, 1d704 <mpc_ui_ui_sub@@Base+0x8e8>
   1d234:	subs	w5, w5, #0x1
   1d238:	b.ne	1d12c <mpc_ui_ui_sub@@Base+0x310>  // b.any
   1d23c:	adds	x9, x9, x13
   1d240:	adc	x2, x4, x2
   1d244:	nop
   1d248:	tbz	x2, #51, 1d1b8 <mpc_ui_ui_sub@@Base+0x39c>
   1d24c:	add	x1, x1, #0x1
   1d250:	mov	x0, #0x7fff                	// #32767
   1d254:	cmp	x1, x0
   1d258:	b.eq	1d744 <mpc_ui_ui_sub@@Base+0x928>  // b.none
   1d25c:	and	x0, x9, #0x1
   1d260:	and	x3, x2, #0xfff7ffffffffffff
   1d264:	orr	x9, x0, x9, lsr #1
   1d268:	mov	w5, #0x0                   	// #0
   1d26c:	orr	x9, x9, x2, lsl #63
   1d270:	lsr	x2, x3, #1
   1d274:	and	x0, x9, #0x7
   1d278:	b	1d054 <mpc_ui_ui_sub@@Base+0x238>
   1d27c:	and	x3, x15, #0xc00000
   1d280:	cbz	x3, 1d2b8 <mpc_ui_ui_sub@@Base+0x49c>
   1d284:	cmp	x3, #0x400, lsl #12
   1d288:	b.eq	1d2b0 <mpc_ui_ui_sub@@Base+0x494>  // b.none
   1d28c:	cmp	x3, #0x800, lsl #12
   1d290:	csel	w12, w12, wzr, eq  // eq = none
   1d294:	cbnz	w12, 1d2b8 <mpc_ui_ui_sub@@Base+0x49c>
   1d298:	mov	w1, #0x14                  	// #20
   1d29c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   1d2a0:	orr	w0, w0, w1
   1d2a4:	mov	x8, #0xffffffffffffffff    	// #-1
   1d2a8:	mov	x1, #0x7ffe                	// #32766
   1d2ac:	b	1d1d8 <mpc_ui_ui_sub@@Base+0x3bc>
   1d2b0:	cbnz	x12, 1d298 <mpc_ui_ui_sub@@Base+0x47c>
   1d2b4:	nop
   1d2b8:	mov	w1, #0x14                  	// #20
   1d2bc:	and	x16, x7, #0xff
   1d2c0:	orr	w0, w0, w1
   1d2c4:	mov	x4, #0x0                   	// #0
   1d2c8:	fmov	d0, x4
   1d2cc:	lsl	x16, x16, #63
   1d2d0:	orr	x5, x16, #0x7fff000000000000
   1d2d4:	fmov	v0.d[1], x5
   1d2d8:	str	q0, [sp, #16]
   1d2dc:	bl	1e218 <mpc_ui_ui_sub@@Base+0x13fc>
   1d2e0:	ldr	q0, [sp, #16]
   1d2e4:	ldp	x29, x30, [sp], #48
   1d2e8:	ret
   1d2ec:	b.eq	1d42c <mpc_ui_ui_sub@@Base+0x610>  // b.none
   1d2f0:	cbnz	x8, 1d5b0 <mpc_ui_ui_sub@@Base+0x794>
   1d2f4:	orr	x0, x2, x9
   1d2f8:	cbz	x0, 1d81c <mpc_ui_ui_sub@@Base+0xa00>
   1d2fc:	cmn	w5, #0x1
   1d300:	b.eq	1d97c <mpc_ui_ui_sub@@Base+0xb60>  // b.none
   1d304:	mov	x0, #0x7fff                	// #32767
   1d308:	mvn	w5, w5
   1d30c:	cmp	x3, x0
   1d310:	b.ne	1d5c4 <mpc_ui_ui_sub@@Base+0x7a8>  // b.any
   1d314:	orr	x0, x4, x13
   1d318:	cbz	x0, 1d100 <mpc_ui_ui_sub@@Base+0x2e4>
   1d31c:	lsr	x5, x4, #50
   1d320:	mov	x9, x13
   1d324:	eor	x5, x5, #0x1
   1d328:	mov	x2, x4
   1d32c:	and	w5, w5, #0x1
   1d330:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d334:	mov	w0, #0x10                  	// #16
   1d338:	cbz	x12, 1d344 <mpc_ui_ui_sub@@Base+0x528>
   1d33c:	adds	x9, x9, #0x8
   1d340:	cinc	x2, x2, cs  // cs = hs, nlast
   1d344:	and	x3, x2, #0x8000000000000
   1d348:	cbz	w5, 1d080 <mpc_ui_ui_sub@@Base+0x264>
   1d34c:	orr	w0, w0, #0x8
   1d350:	b	1d080 <mpc_ui_ui_sub@@Base+0x264>
   1d354:	mov	w0, #0x10                  	// #16
   1d358:	cbnz	x12, 1d344 <mpc_ui_ui_sub@@Base+0x528>
   1d35c:	b	1d33c <mpc_ui_ui_sub@@Base+0x520>
   1d360:	and	x3, x9, #0xf
   1d364:	mov	w0, #0x10                  	// #16
   1d368:	cmp	x3, #0x4
   1d36c:	b.eq	1d344 <mpc_ui_ui_sub@@Base+0x528>  // b.none
   1d370:	adds	x9, x9, #0x4
   1d374:	cinc	x2, x2, cs  // cs = hs, nlast
   1d378:	b	1d344 <mpc_ui_ui_sub@@Base+0x528>
   1d37c:	orr	x0, x2, x9
   1d380:	cbz	x0, 1d100 <mpc_ui_ui_sub@@Base+0x2e4>
   1d384:	lsr	x5, x2, #50
   1d388:	eor	x5, x5, #0x1
   1d38c:	and	w5, w5, #0x1
   1d390:	mov	w0, w5
   1d394:	mov	x1, #0x7fff                	// #32767
   1d398:	mov	x3, #0x7fff                	// #32767
   1d39c:	extr	x8, x2, x9, #3
   1d3a0:	cmp	x1, x3
   1d3a4:	lsr	x2, x2, #3
   1d3a8:	b.ne	1d1d8 <mpc_ui_ui_sub@@Base+0x3bc>  // b.any
   1d3ac:	orr	x1, x8, x2
   1d3b0:	cbz	x1, 1da1c <mpc_ui_ui_sub@@Base+0xc00>
   1d3b4:	orr	x2, x2, #0x800000000000
   1d3b8:	mov	w1, #0x7fff                	// #32767
   1d3bc:	and	x2, x2, #0xffffffffffff
   1d3c0:	b	1d0a0 <mpc_ui_ui_sub@@Base+0x284>
   1d3c4:	mov	x9, x3
   1d3c8:	and	x2, x2, #0xfff7ffffffffffff
   1d3cc:	sub	x1, x1, x4
   1d3d0:	orr	x8, x9, x2
   1d3d4:	and	x0, x9, #0x7
   1d3d8:	mov	w5, #0x0                   	// #0
   1d3dc:	cbz	x1, 1d1c8 <mpc_ui_ui_sub@@Base+0x3ac>
   1d3e0:	b	1d054 <mpc_ui_ui_sub@@Base+0x238>
   1d3e4:	clz	x2, x9
   1d3e8:	add	w0, w2, #0x34
   1d3ec:	cmp	w0, #0x3f
   1d3f0:	b.le	1cfe8 <mpc_ui_ui_sub@@Base+0x1cc>
   1d3f4:	sub	w2, w2, #0xc
   1d3f8:	lsl	x2, x9, x2
   1d3fc:	b	1cffc <mpc_ui_ui_sub@@Base+0x1e0>
   1d400:	orr	x4, x4, x13
   1d404:	cmp	x4, #0x0
   1d408:	cset	x3, ne  // ne = any
   1d40c:	b	1cfcc <mpc_ui_ui_sub@@Base+0x1b0>
   1d410:	and	x3, x2, #0x8000000000000
   1d414:	mov	w0, #0x0                   	// #0
   1d418:	cbz	w5, 1d080 <mpc_ui_ui_sub@@Base+0x264>
   1d41c:	mov	w0, #0x0                   	// #0
   1d420:	tbz	w15, #11, 1d080 <mpc_ui_ui_sub@@Base+0x264>
   1d424:	orr	w0, w0, #0x8
   1d428:	b	1d080 <mpc_ui_ui_sub@@Base+0x264>
   1d42c:	add	x0, x8, #0x1
   1d430:	tst	x0, #0x7ffe
   1d434:	b.ne	1d63c <mpc_ui_ui_sub@@Base+0x820>  // b.any
   1d438:	orr	x0, x2, x9
   1d43c:	cbnz	x8, 1d7f8 <mpc_ui_ui_sub@@Base+0x9dc>
   1d440:	orr	x8, x4, x13
   1d444:	cbz	x0, 1d84c <mpc_ui_ui_sub@@Base+0xa30>
   1d448:	cbz	x8, 1d738 <mpc_ui_ui_sub@@Base+0x91c>
   1d44c:	adds	x9, x9, x13
   1d450:	adc	x2, x4, x2
   1d454:	tbz	x2, #51, 1d224 <mpc_ui_ui_sub@@Base+0x408>
   1d458:	and	x2, x2, #0xfff7ffffffffffff
   1d45c:	and	x0, x9, #0x7
   1d460:	mov	x1, #0x1                   	// #1
   1d464:	b	1d054 <mpc_ui_ui_sub@@Base+0x238>
   1d468:	mov	x1, #0x7fff                	// #32767
   1d46c:	neg	w0, w0
   1d470:	orr	x2, x2, #0x8000000000000
   1d474:	cmp	x3, x1
   1d478:	b.eq	1d0f0 <mpc_ui_ui_sub@@Base+0x2d4>  // b.none
   1d47c:	cmp	w0, #0x74
   1d480:	b.gt	1d58c <mpc_ui_ui_sub@@Base+0x770>
   1d484:	cmp	w0, #0x3f
   1d488:	b.gt	1d7a8 <mpc_ui_ui_sub@@Base+0x98c>
   1d48c:	mov	w1, #0x40                  	// #64
   1d490:	sub	w1, w1, w0
   1d494:	lsr	x5, x9, x0
   1d498:	lsl	x9, x9, x1
   1d49c:	cmp	x9, #0x0
   1d4a0:	lsl	x9, x2, x1
   1d4a4:	cset	x1, ne  // ne = any
   1d4a8:	orr	x9, x9, x5
   1d4ac:	lsr	x0, x2, x0
   1d4b0:	orr	x9, x9, x1
   1d4b4:	sub	x4, x4, x0
   1d4b8:	b	1d598 <mpc_ui_ui_sub@@Base+0x77c>
   1d4bc:	subs	x5, x9, x13
   1d4c0:	cmp	x9, x13
   1d4c4:	sbc	x3, x2, x4
   1d4c8:	tbnz	x3, #51, 1d664 <mpc_ui_ui_sub@@Base+0x848>
   1d4cc:	orr	x8, x5, x3
   1d4d0:	cbnz	x8, 1d790 <mpc_ui_ui_sub@@Base+0x974>
   1d4d4:	and	x15, x15, #0xc00000
   1d4d8:	mov	x2, #0x0                   	// #0
   1d4dc:	cmp	x15, #0x800, lsl #12
   1d4e0:	mov	x1, #0x0                   	// #0
   1d4e4:	cset	w7, eq  // eq = none
   1d4e8:	b	1d1d8 <mpc_ui_ui_sub@@Base+0x3bc>
   1d4ec:	mov	x0, #0x7fff                	// #32767
   1d4f0:	cmp	x8, x0
   1d4f4:	b.ne	1d1b8 <mpc_ui_ui_sub@@Base+0x39c>  // b.any
   1d4f8:	orr	x0, x2, x9
   1d4fc:	cbnz	x0, 1d384 <mpc_ui_ui_sub@@Base+0x568>
   1d500:	mov	x2, #0x0                   	// #0
   1d504:	mov	x8, #0x0                   	// #0
   1d508:	mov	w0, #0x0                   	// #0
   1d50c:	b	1d3ac <mpc_ui_ui_sub@@Base+0x590>
   1d510:	orr	x4, x4, x13
   1d514:	cmp	x4, #0x0
   1d518:	cset	x0, ne  // ne = any
   1d51c:	adds	x9, x0, x9
   1d520:	cinc	x2, x2, cs  // cs = hs, nlast
   1d524:	b	1d248 <mpc_ui_ui_sub@@Base+0x42c>
   1d528:	mov	w4, #0x80                  	// #128
   1d52c:	sub	w4, w4, w0
   1d530:	cmp	w0, #0x40
   1d534:	sub	w9, w1, #0x3f
   1d538:	lsl	x0, x2, x4
   1d53c:	orr	x0, x3, x0
   1d540:	csel	x3, x0, x3, ne  // ne = any
   1d544:	lsr	x9, x2, x9
   1d548:	cmp	x3, #0x0
   1d54c:	mov	x2, #0x0                   	// #0
   1d550:	cset	x0, ne  // ne = any
   1d554:	orr	x9, x0, x9
   1d558:	mov	x8, x9
   1d55c:	b	1d044 <mpc_ui_ui_sub@@Base+0x228>
   1d560:	mov	w5, #0x80                  	// #128
   1d564:	sub	w5, w5, w0
   1d568:	subs	w0, w0, #0x40
   1d56c:	lsl	x5, x4, x5
   1d570:	orr	x5, x13, x5
   1d574:	csel	x13, x5, x13, ne  // ne = any
   1d578:	lsr	x4, x4, x0
   1d57c:	cmp	x13, #0x0
   1d580:	cset	x3, ne  // ne = any
   1d584:	orr	x3, x3, x4
   1d588:	b	1cfcc <mpc_ui_ui_sub@@Base+0x1b0>
   1d58c:	orr	x2, x2, x9
   1d590:	cmp	x2, #0x0
   1d594:	cset	x9, ne  // ne = any
   1d598:	subs	x9, x13, x9
   1d59c:	mov	w7, w11
   1d5a0:	sbc	x2, x4, xzr
   1d5a4:	mov	x1, x3
   1d5a8:	mov	x12, x14
   1d5ac:	b	1cfd4 <mpc_ui_ui_sub@@Base+0x1b8>
   1d5b0:	mov	x0, #0x7fff                	// #32767
   1d5b4:	neg	w5, w5
   1d5b8:	orr	x2, x2, #0x8000000000000
   1d5bc:	cmp	x3, x0
   1d5c0:	b.eq	1d314 <mpc_ui_ui_sub@@Base+0x4f8>  // b.none
   1d5c4:	cmp	w5, #0x74
   1d5c8:	b.gt	1d798 <mpc_ui_ui_sub@@Base+0x97c>
   1d5cc:	cmp	w5, #0x3f
   1d5d0:	b.gt	1d858 <mpc_ui_ui_sub@@Base+0xa3c>
   1d5d4:	mov	w1, #0x40                  	// #64
   1d5d8:	sub	w1, w1, w5
   1d5dc:	lsr	x6, x9, x5
   1d5e0:	lsl	x9, x9, x1
   1d5e4:	cmp	x9, #0x0
   1d5e8:	cset	x0, ne  // ne = any
   1d5ec:	lsl	x9, x2, x1
   1d5f0:	orr	x9, x9, x6
   1d5f4:	lsr	x5, x2, x5
   1d5f8:	orr	x9, x9, x0
   1d5fc:	add	x4, x4, x5
   1d600:	adds	x9, x9, x13
   1d604:	mov	x1, x3
   1d608:	cinc	x2, x4, cs  // cs = hs, nlast
   1d60c:	b	1d248 <mpc_ui_ui_sub@@Base+0x42c>
   1d610:	mov	w0, #0x80                  	// #128
   1d614:	sub	w0, w0, w5
   1d618:	subs	w5, w5, #0x40
   1d61c:	lsl	x0, x4, x0
   1d620:	orr	x0, x13, x0
   1d624:	csel	x13, x0, x13, ne  // ne = any
   1d628:	lsr	x4, x4, x5
   1d62c:	cmp	x13, #0x0
   1d630:	cset	x0, ne  // ne = any
   1d634:	orr	x0, x0, x4
   1d638:	b	1d51c <mpc_ui_ui_sub@@Base+0x700>
   1d63c:	mov	x1, #0x7fff                	// #32767
   1d640:	cmp	x0, x1
   1d644:	b.eq	1d8a0 <mpc_ui_ui_sub@@Base+0xa84>  // b.none
   1d648:	adds	x9, x9, x13
   1d64c:	mov	x1, x0
   1d650:	adc	x2, x4, x2
   1d654:	ubfx	x0, x9, #1, #3
   1d658:	extr	x9, x2, x9, #1
   1d65c:	lsr	x2, x2, #1
   1d660:	b	1d054 <mpc_ui_ui_sub@@Base+0x238>
   1d664:	cmp	x13, x9
   1d668:	mov	w7, w11
   1d66c:	sbc	x3, x4, x2
   1d670:	sub	x9, x13, x9
   1d674:	mov	x12, x14
   1d678:	b	1cfdc <mpc_ui_ui_sub@@Base+0x1c0>
   1d67c:	mov	x12, #0x7fff                	// #32767
   1d680:	cmp	x1, x12
   1d684:	b.eq	1d6b0 <mpc_ui_ui_sub@@Base+0x894>  // b.none
   1d688:	cmp	x3, x12
   1d68c:	b.eq	1d8e0 <mpc_ui_ui_sub@@Base+0xac4>  // b.none
   1d690:	cbnz	x5, 1d6c8 <mpc_ui_ui_sub@@Base+0x8ac>
   1d694:	mov	w5, w0
   1d698:	cbnz	x8, 1d9c0 <mpc_ui_ui_sub@@Base+0xba4>
   1d69c:	mov	w7, #0x0                   	// #0
   1d6a0:	mov	x2, #0xffffffffffff        	// #281474976710655
   1d6a4:	mov	w0, #0x1                   	// #1
   1d6a8:	mov	x8, #0xffffffffffffffff    	// #-1
   1d6ac:	b	1d3b4 <mpc_ui_ui_sub@@Base+0x598>
   1d6b0:	cbz	x5, 1d9dc <mpc_ui_ui_sub@@Base+0xbc0>
   1d6b4:	lsr	x0, x2, #50
   1d6b8:	cmp	x3, x1
   1d6bc:	eor	x0, x0, #0x1
   1d6c0:	and	w0, w0, #0x1
   1d6c4:	b.eq	1d8e0 <mpc_ui_ui_sub@@Base+0xac4>  // b.none
   1d6c8:	cbz	x8, 1d8fc <mpc_ui_ui_sub@@Base+0xae0>
   1d6cc:	bfi	x6, x2, #61, #3
   1d6d0:	lsr	x3, x2, #3
   1d6d4:	tbz	x2, #50, 1d6f0 <mpc_ui_ui_sub@@Base+0x8d4>
   1d6d8:	lsr	x1, x4, #3
   1d6dc:	tbnz	x4, #50, 1d6f0 <mpc_ui_ui_sub@@Base+0x8d4>
   1d6e0:	mov	x6, x10
   1d6e4:	mov	w7, w11
   1d6e8:	bfi	x6, x4, #61, #3
   1d6ec:	mov	x3, x1
   1d6f0:	extr	x2, x3, x6, #61
   1d6f4:	bfi	x6, x2, #61, #3
   1d6f8:	lsr	x2, x2, #3
   1d6fc:	mov	x8, x6
   1d700:	b	1d3ac <mpc_ui_ui_sub@@Base+0x590>
   1d704:	mov	x0, #0x7fff                	// #32767
   1d708:	cmp	x8, x0
   1d70c:	b.ne	1d1b8 <mpc_ui_ui_sub@@Base+0x39c>  // b.any
   1d710:	orr	x0, x2, x9
   1d714:	cbz	x0, 1d500 <mpc_ui_ui_sub@@Base+0x6e4>
   1d718:	lsr	x5, x2, #50
   1d71c:	eor	w5, w5, #0x1
   1d720:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d724:	cbz	x8, 1d838 <mpc_ui_ui_sub@@Base+0xa1c>
   1d728:	mov	w7, w11
   1d72c:	mov	x2, x4
   1d730:	mov	x9, x13
   1d734:	mov	x12, x14
   1d738:	mov	x1, #0x0                   	// #0
   1d73c:	mov	x3, #0x0                   	// #0
   1d740:	b	1d41c <mpc_ui_ui_sub@@Base+0x600>
   1d744:	ands	x3, x15, #0xc00000
   1d748:	b.eq	1d7d4 <mpc_ui_ui_sub@@Base+0x9b8>  // b.none
   1d74c:	cmp	x3, #0x400, lsl #12
   1d750:	eor	w0, w7, #0x1
   1d754:	cset	w1, eq  // eq = none
   1d758:	tst	w1, w0
   1d75c:	b.ne	1d9f8 <mpc_ui_ui_sub@@Base+0xbdc>  // b.any
   1d760:	cmp	x3, #0x800, lsl #12
   1d764:	b.eq	1d9a4 <mpc_ui_ui_sub@@Base+0xb88>  // b.none
   1d768:	cmp	x3, #0x400, lsl #12
   1d76c:	mov	w0, #0x14                  	// #20
   1d770:	b.ne	1d280 <mpc_ui_ui_sub@@Base+0x464>  // b.any
   1d774:	mov	x2, #0xffffffffffffffff    	// #-1
   1d778:	mov	x1, #0x7ffe                	// #32766
   1d77c:	mov	x9, x2
   1d780:	mov	w5, #0x0                   	// #0
   1d784:	mov	w0, #0x14                  	// #20
   1d788:	cbnz	x12, 1d344 <mpc_ui_ui_sub@@Base+0x528>
   1d78c:	b	1d33c <mpc_ui_ui_sub@@Base+0x520>
   1d790:	mov	x9, x5
   1d794:	b	1cfdc <mpc_ui_ui_sub@@Base+0x1c0>
   1d798:	orr	x2, x2, x9
   1d79c:	cmp	x2, #0x0
   1d7a0:	cset	x9, ne  // ne = any
   1d7a4:	b	1d600 <mpc_ui_ui_sub@@Base+0x7e4>
   1d7a8:	mov	w1, #0x80                  	// #128
   1d7ac:	sub	w1, w1, w0
   1d7b0:	subs	w0, w0, #0x40
   1d7b4:	lsl	x1, x2, x1
   1d7b8:	orr	x1, x9, x1
   1d7bc:	csel	x9, x1, x9, ne  // ne = any
   1d7c0:	lsr	x2, x2, x0
   1d7c4:	cmp	x9, #0x0
   1d7c8:	cset	x9, ne  // ne = any
   1d7cc:	orr	x9, x9, x2
   1d7d0:	b	1d598 <mpc_ui_ui_sub@@Base+0x77c>
   1d7d4:	mov	w0, #0x14                  	// #20
   1d7d8:	b	1d2c4 <mpc_ui_ui_sub@@Base+0x4a8>
   1d7dc:	lsr	x5, x4, #50
   1d7e0:	mov	w7, w11
   1d7e4:	eor	x5, x5, #0x1
   1d7e8:	mov	x9, x13
   1d7ec:	and	w5, w5, #0x1
   1d7f0:	mov	x2, x4
   1d7f4:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d7f8:	mov	x8, #0x7fff                	// #32767
   1d7fc:	cmp	x1, x8
   1d800:	b.eq	1d920 <mpc_ui_ui_sub@@Base+0xb04>  // b.none
   1d804:	cmp	x3, x8
   1d808:	b.eq	1d994 <mpc_ui_ui_sub@@Base+0xb78>  // b.none
   1d80c:	cbnz	x0, 1d938 <mpc_ui_ui_sub@@Base+0xb1c>
   1d810:	mov	x2, x4
   1d814:	mov	x9, x13
   1d818:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d81c:	mov	x0, #0x7fff                	// #32767
   1d820:	cmp	x3, x0
   1d824:	b.eq	1d9d0 <mpc_ui_ui_sub@@Base+0xbb4>  // b.none
   1d828:	mov	x2, x4
   1d82c:	mov	x9, x13
   1d830:	mov	x1, x3
   1d834:	b	1d1b8 <mpc_ui_ui_sub@@Base+0x39c>
   1d838:	and	x15, x15, #0xc00000
   1d83c:	mov	x2, #0x0                   	// #0
   1d840:	cmp	x15, #0x800, lsl #12
   1d844:	cset	w7, eq  // eq = none
   1d848:	b	1d1d8 <mpc_ui_ui_sub@@Base+0x3bc>
   1d84c:	mov	x2, x4
   1d850:	mov	x9, x13
   1d854:	b	1d044 <mpc_ui_ui_sub@@Base+0x228>
   1d858:	mov	w0, #0x80                  	// #128
   1d85c:	sub	w0, w0, w5
   1d860:	subs	w5, w5, #0x40
   1d864:	lsl	x0, x2, x0
   1d868:	orr	x0, x9, x0
   1d86c:	csel	x9, x0, x9, ne  // ne = any
   1d870:	lsr	x2, x2, x5
   1d874:	cmp	x9, #0x0
   1d878:	cset	x9, ne  // ne = any
   1d87c:	orr	x9, x9, x2
   1d880:	b	1d600 <mpc_ui_ui_sub@@Base+0x7e4>
   1d884:	cmp	x13, x9
   1d888:	mov	w7, w11
   1d88c:	sbc	x2, x4, x2
   1d890:	sub	x9, x13, x9
   1d894:	mov	x1, x3
   1d898:	mov	x12, x5
   1d89c:	b	1cfd4 <mpc_ui_ui_sub@@Base+0x1b8>
   1d8a0:	ands	x3, x15, #0xc00000
   1d8a4:	b.eq	1d7d4 <mpc_ui_ui_sub@@Base+0x9b8>  // b.none
   1d8a8:	cmp	x3, #0x400, lsl #12
   1d8ac:	eor	w0, w7, #0x1
   1d8b0:	csel	w0, w0, wzr, eq  // eq = none
   1d8b4:	cbnz	w0, 1d9f8 <mpc_ui_ui_sub@@Base+0xbdc>
   1d8b8:	cmp	x3, #0x800, lsl #12
   1d8bc:	b.ne	1d768 <mpc_ui_ui_sub@@Base+0x94c>  // b.any
   1d8c0:	cbz	x12, 1d9a8 <mpc_ui_ui_sub@@Base+0xb8c>
   1d8c4:	mov	w0, #0x14                  	// #20
   1d8c8:	mov	x16, #0x1                   	// #1
   1d8cc:	b	1d2c4 <mpc_ui_ui_sub@@Base+0x4a8>
   1d8d0:	orr	x0, x4, x13
   1d8d4:	cbnz	x0, 1d7dc <mpc_ui_ui_sub@@Base+0x9c0>
   1d8d8:	mov	w7, w11
   1d8dc:	b	1d500 <mpc_ui_ui_sub@@Base+0x6e4>
   1d8e0:	cbz	x8, 1d9ec <mpc_ui_ui_sub@@Base+0xbd0>
   1d8e4:	tst	x4, #0x4000000000000
   1d8e8:	csinc	w0, w0, wzr, ne  // ne = any
   1d8ec:	cbnz	x5, 1d6cc <mpc_ui_ui_sub@@Base+0x8b0>
   1d8f0:	mov	w7, w11
   1d8f4:	mov	x2, x4
   1d8f8:	mov	x9, x13
   1d8fc:	mov	w5, w0
   1d900:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d904:	orr	x8, x5, x3
   1d908:	cbz	x8, 1d838 <mpc_ui_ui_sub@@Base+0xa1c>
   1d90c:	and	x0, x5, #0x7
   1d910:	mov	x9, x5
   1d914:	mov	x2, x3
   1d918:	mov	w5, #0x1                   	// #1
   1d91c:	b	1d054 <mpc_ui_ui_sub@@Base+0x238>
   1d920:	cbz	x0, 1d98c <mpc_ui_ui_sub@@Base+0xb70>
   1d924:	lsr	x5, x2, #50
   1d928:	cmp	x3, x1
   1d92c:	eor	x5, x5, #0x1
   1d930:	and	w5, w5, #0x1
   1d934:	b.eq	1da04 <mpc_ui_ui_sub@@Base+0xbe8>  // b.none
   1d938:	orr	x13, x4, x13
   1d93c:	cbz	x13, 1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d940:	bfi	x6, x2, #61, #3
   1d944:	lsr	x0, x2, #3
   1d948:	tbz	x2, #50, 1d964 <mpc_ui_ui_sub@@Base+0xb48>
   1d94c:	lsr	x1, x4, #3
   1d950:	tbnz	x4, #50, 1d964 <mpc_ui_ui_sub@@Base+0xb48>
   1d954:	and	x6, x10, #0x1fffffffffffffff
   1d958:	mov	w7, w11
   1d95c:	orr	x6, x6, x4, lsl #61
   1d960:	mov	x0, x1
   1d964:	extr	x2, x0, x6, #61
   1d968:	mov	w0, w5
   1d96c:	bfi	x6, x2, #61, #3
   1d970:	lsr	x2, x2, #3
   1d974:	mov	x8, x6
   1d978:	b	1d3ac <mpc_ui_ui_sub@@Base+0x590>
   1d97c:	adds	x9, x9, x13
   1d980:	mov	x1, x3
   1d984:	adc	x2, x4, x2
   1d988:	b	1d248 <mpc_ui_ui_sub@@Base+0x42c>
   1d98c:	cmp	x3, x1
   1d990:	b.ne	1d810 <mpc_ui_ui_sub@@Base+0x9f4>  // b.any
   1d994:	orr	x1, x4, x13
   1d998:	cbnz	x1, 1da0c <mpc_ui_ui_sub@@Base+0xbf0>
   1d99c:	cbz	x0, 1d500 <mpc_ui_ui_sub@@Base+0x6e4>
   1d9a0:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d9a4:	cbnz	x16, 1d8c4 <mpc_ui_ui_sub@@Base+0xaa8>
   1d9a8:	mov	x2, #0xffffffffffffffff    	// #-1
   1d9ac:	mov	w7, #0x0                   	// #0
   1d9b0:	mov	x9, x2
   1d9b4:	mov	x1, #0x7ffe                	// #32766
   1d9b8:	mov	w0, #0x14                  	// #20
   1d9bc:	b	1d084 <mpc_ui_ui_sub@@Base+0x268>
   1d9c0:	mov	w7, w11
   1d9c4:	mov	x2, x4
   1d9c8:	mov	x9, x13
   1d9cc:	b	1d390 <mpc_ui_ui_sub@@Base+0x574>
   1d9d0:	orr	x0, x4, x13
   1d9d4:	cbz	x0, 1d500 <mpc_ui_ui_sub@@Base+0x6e4>
   1d9d8:	b	1d31c <mpc_ui_ui_sub@@Base+0x500>
   1d9dc:	cmp	x3, x1
   1d9e0:	b.eq	1d8e0 <mpc_ui_ui_sub@@Base+0xac4>  // b.none
   1d9e4:	mov	w5, #0x0                   	// #0
   1d9e8:	b	1d698 <mpc_ui_ui_sub@@Base+0x87c>
   1d9ec:	cbnz	x5, 1d8fc <mpc_ui_ui_sub@@Base+0xae0>
   1d9f0:	mov	w5, w0
   1d9f4:	b	1d698 <mpc_ui_ui_sub@@Base+0x87c>
   1d9f8:	mov	w0, #0x14                  	// #20
   1d9fc:	mov	x16, #0x0                   	// #0
   1da00:	b	1d2c4 <mpc_ui_ui_sub@@Base+0x4a8>
   1da04:	orr	x1, x4, x13
   1da08:	cbz	x1, 1d390 <mpc_ui_ui_sub@@Base+0x574>
   1da0c:	tst	x4, #0x4000000000000
   1da10:	csinc	w5, w5, wzr, ne  // ne = any
   1da14:	cbnz	x0, 1d940 <mpc_ui_ui_sub@@Base+0xb24>
   1da18:	b	1d810 <mpc_ui_ui_sub@@Base+0x9f4>
   1da1c:	mov	x8, #0x0                   	// #0
   1da20:	mov	w1, #0x7fff                	// #32767
   1da24:	mov	x2, #0x0                   	// #0
   1da28:	b	1d0a0 <mpc_ui_ui_sub@@Base+0x284>
   1da2c:	nop
   1da30:	stp	x29, x30, [sp, #-80]!
   1da34:	mov	x29, sp
   1da38:	str	q0, [sp, #48]
   1da3c:	str	q1, [sp, #64]
   1da40:	ldp	x1, x0, [sp, #48]
   1da44:	ldp	x6, x2, [sp, #64]
   1da48:	mrs	x11, fpcr
   1da4c:	lsr	x3, x0, #63
   1da50:	ubfx	x7, x0, #0, #48
   1da54:	and	w12, w3, #0xff
   1da58:	mov	x14, x3
   1da5c:	ubfx	x3, x0, #48, #15
   1da60:	cbz	w3, 1de08 <mpc_ui_ui_sub@@Base+0xfec>
   1da64:	mov	w4, #0x7fff                	// #32767
   1da68:	cmp	w3, w4
   1da6c:	b.eq	1deac <mpc_ui_ui_sub@@Base+0x1090>  // b.none
   1da70:	and	x3, x3, #0xffff
   1da74:	extr	x4, x7, x1, #61
   1da78:	mov	x18, #0xffffffffffffc001    	// #-16383
   1da7c:	orr	x7, x4, #0x8000000000000
   1da80:	add	x3, x3, x18
   1da84:	lsl	x5, x1, #3
   1da88:	mov	x16, #0x0                   	// #0
   1da8c:	mov	x1, #0x0                   	// #0
   1da90:	mov	w0, #0x0                   	// #0
   1da94:	lsr	x8, x2, #63
   1da98:	ubfx	x4, x2, #0, #48
   1da9c:	and	w15, w8, #0xff
   1daa0:	mov	x13, x8
   1daa4:	ubfx	x9, x2, #48, #15
   1daa8:	cbz	w9, 1de68 <mpc_ui_ui_sub@@Base+0x104c>
   1daac:	mov	w8, #0x7fff                	// #32767
   1dab0:	cmp	w9, w8
   1dab4:	b.eq	1db38 <mpc_ui_ui_sub@@Base+0xd1c>  // b.none
   1dab8:	and	x9, x9, #0xffff
   1dabc:	mov	x17, #0xffffffffffffc001    	// #-16383
   1dac0:	add	x9, x9, x17
   1dac4:	extr	x2, x4, x6, #61
   1dac8:	add	x9, x9, x3
   1dacc:	lsl	x6, x6, #3
   1dad0:	orr	x4, x2, #0x8000000000000
   1dad4:	mov	x2, #0x0                   	// #0
   1dad8:	eor	w8, w12, w15
   1dadc:	cmp	x1, #0xa
   1dae0:	and	w10, w8, #0xff
   1dae4:	add	x3, x9, #0x1
   1dae8:	and	x8, x8, #0xff
   1daec:	b.le	1db70 <mpc_ui_ui_sub@@Base+0xd54>
   1daf0:	cmp	x1, #0xb
   1daf4:	b.eq	1e208 <mpc_ui_ui_sub@@Base+0x13ec>  // b.none
   1daf8:	mov	w15, w12
   1dafc:	mov	x13, x14
   1db00:	mov	w10, w15
   1db04:	cmp	x16, #0x2
   1db08:	b.eq	1decc <mpc_ui_ui_sub@@Base+0x10b0>  // b.none
   1db0c:	mov	x4, x7
   1db10:	mov	x6, x5
   1db14:	mov	x2, x16
   1db18:	mov	x8, x13
   1db1c:	cmp	x2, #0x3
   1db20:	b.ne	1db8c <mpc_ui_ui_sub@@Base+0xd70>  // b.any
   1db24:	orr	x4, x4, #0x800000000000
   1db28:	mov	x5, x6
   1db2c:	and	x4, x4, #0xffffffffffff
   1db30:	mov	w1, #0x7fff                	// #32767
   1db34:	b	1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1db38:	mov	x8, #0x7fff                	// #32767
   1db3c:	orr	x2, x4, x6
   1db40:	add	x9, x3, x8
   1db44:	cbnz	x2, 1dbc4 <mpc_ui_ui_sub@@Base+0xda8>
   1db48:	eor	w8, w12, w15
   1db4c:	orr	x1, x1, #0x2
   1db50:	and	w10, w8, #0xff
   1db54:	cmp	x1, #0xa
   1db58:	add	x3, x3, #0x8, lsl #12
   1db5c:	and	x8, x8, #0xff
   1db60:	mov	x6, #0x0                   	// #0
   1db64:	b.gt	1e17c <mpc_ui_ui_sub@@Base+0x1360>
   1db68:	mov	x4, #0x0                   	// #0
   1db6c:	mov	x2, #0x2                   	// #2
   1db70:	cmp	x1, #0x2
   1db74:	b.gt	1dbec <mpc_ui_ui_sub@@Base+0xdd0>
   1db78:	sub	x1, x1, #0x1
   1db7c:	cmp	x1, #0x1
   1db80:	b.hi	1dc28 <mpc_ui_ui_sub@@Base+0xe0c>  // b.pmore
   1db84:	cmp	x2, #0x2
   1db88:	b.eq	1decc <mpc_ui_ui_sub@@Base+0x10b0>  // b.none
   1db8c:	cmp	x2, #0x1
   1db90:	b.ne	1dd88 <mpc_ui_ui_sub@@Base+0xf6c>  // b.any
   1db94:	mov	w1, #0x0                   	// #0
   1db98:	mov	x4, #0x0                   	// #0
   1db9c:	mov	x5, #0x0                   	// #0
   1dba0:	mov	x3, #0x0                   	// #0
   1dba4:	orr	w1, w1, w10, lsl #15
   1dba8:	bfxil	x3, x4, #0, #48
   1dbac:	fmov	d0, x5
   1dbb0:	bfi	x3, x1, #48, #16
   1dbb4:	fmov	v0.d[1], x3
   1dbb8:	cbnz	w0, 1dff8 <mpc_ui_ui_sub@@Base+0x11dc>
   1dbbc:	ldp	x29, x30, [sp], #80
   1dbc0:	ret
   1dbc4:	tst	x4, #0x800000000000
   1dbc8:	eor	w8, w12, w15
   1dbcc:	orr	x1, x1, #0x3
   1dbd0:	csinc	w0, w0, wzr, ne  // ne = any
   1dbd4:	and	w10, w8, #0xff
   1dbd8:	add	x3, x3, #0x8, lsl #12
   1dbdc:	cmp	x1, #0xa
   1dbe0:	and	x8, x8, #0xff
   1dbe4:	mov	x2, #0x3                   	// #3
   1dbe8:	b.gt	1e1fc <mpc_ui_ui_sub@@Base+0x13e0>
   1dbec:	mov	x12, #0x1                   	// #1
   1dbf0:	mov	x14, #0x530                 	// #1328
   1dbf4:	lsl	x1, x12, x1
   1dbf8:	tst	x1, x14
   1dbfc:	b.ne	1ddfc <mpc_ui_ui_sub@@Base+0xfe0>  // b.any
   1dc00:	mov	x14, #0x240                 	// #576
   1dc04:	tst	x1, x14
   1dc08:	b.ne	1dde4 <mpc_ui_ui_sub@@Base+0xfc8>  // b.any
   1dc0c:	mov	x12, #0x88                  	// #136
   1dc10:	tst	x1, x12
   1dc14:	b.eq	1dc28 <mpc_ui_ui_sub@@Base+0xe0c>  // b.none
   1dc18:	mov	x7, x4
   1dc1c:	mov	x5, x6
   1dc20:	mov	x16, x2
   1dc24:	b	1db00 <mpc_ui_ui_sub@@Base+0xce4>
   1dc28:	lsr	x13, x5, #32
   1dc2c:	and	x12, x6, #0xffffffff
   1dc30:	and	x15, x5, #0xffffffff
   1dc34:	lsr	x6, x6, #32
   1dc38:	and	x18, x4, #0xffffffff
   1dc3c:	lsr	x2, x4, #32
   1dc40:	mul	x4, x13, x12
   1dc44:	stp	x21, x22, [sp, #32]
   1dc48:	lsr	x22, x7, #32
   1dc4c:	and	x5, x7, #0xffffffff
   1dc50:	mul	x16, x12, x15
   1dc54:	madd	x7, x6, x15, x4
   1dc58:	stp	x19, x20, [sp, #16]
   1dc5c:	mul	x1, x13, x18
   1dc60:	mul	x17, x15, x18
   1dc64:	and	x30, x16, #0xffffffff
   1dc68:	madd	x15, x2, x15, x1
   1dc6c:	add	x16, x7, x16, lsr #32
   1dc70:	mul	x21, x22, x12
   1dc74:	cmp	x4, x16
   1dc78:	mul	x20, x22, x18
   1dc7c:	mov	x14, #0x100000000           	// #4294967296
   1dc80:	mul	x19, x13, x6
   1dc84:	add	x15, x15, x17, lsr #32
   1dc88:	mul	x12, x12, x5
   1dc8c:	and	x17, x17, #0xffffffff
   1dc90:	mul	x18, x5, x18
   1dc94:	add	x4, x19, x14
   1dc98:	madd	x7, x6, x5, x21
   1dc9c:	csel	x19, x4, x19, hi  // hi = pmore
   1dca0:	madd	x5, x2, x5, x20
   1dca4:	cmp	x1, x15
   1dca8:	mul	x13, x13, x2
   1dcac:	add	x17, x17, x15, lsl #32
   1dcb0:	mul	x6, x6, x22
   1dcb4:	add	x7, x7, x12, lsr #32
   1dcb8:	add	x5, x5, x18, lsr #32
   1dcbc:	add	x4, x13, x14
   1dcc0:	mul	x2, x2, x22
   1dcc4:	csel	x13, x4, x13, hi  // hi = pmore
   1dcc8:	and	x1, x18, #0xffffffff
   1dccc:	cmp	x21, x7
   1dcd0:	add	x4, x6, x14
   1dcd4:	add	x30, x30, x16, lsl #32
   1dcd8:	csel	x6, x4, x6, hi  // hi = pmore
   1dcdc:	add	x13, x13, x15, lsr #32
   1dce0:	cmp	x20, x5
   1dce4:	add	x1, x1, x5, lsl #32
   1dce8:	add	x16, x17, x16, lsr #32
   1dcec:	add	x14, x2, x14
   1dcf0:	csel	x2, x14, x2, hi  // hi = pmore
   1dcf4:	add	x16, x19, x16
   1dcf8:	adds	x1, x1, x13
   1dcfc:	and	x12, x12, #0xffffffff
   1dd00:	cset	x13, cs  // cs = hs, nlast
   1dd04:	cmp	x16, x17
   1dd08:	cset	x4, cc  // cc = lo, ul, last
   1dd0c:	add	x12, x12, x7, lsl #32
   1dd10:	adds	x1, x1, x4
   1dd14:	lsr	x5, x5, #32
   1dd18:	cset	x4, cs  // cs = hs, nlast
   1dd1c:	cmp	x13, #0x0
   1dd20:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   1dd24:	add	x7, x6, x7, lsr #32
   1dd28:	cinc	x5, x5, ne  // ne = any
   1dd2c:	adds	x6, x16, x12
   1dd30:	cset	x4, cs  // cs = hs, nlast
   1dd34:	adds	x1, x1, x7
   1dd38:	cset	x7, cs  // cs = hs, nlast
   1dd3c:	adds	x4, x1, x4
   1dd40:	cset	x1, cs  // cs = hs, nlast
   1dd44:	cmp	x7, #0x0
   1dd48:	orr	x30, x30, x6, lsl #13
   1dd4c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   1dd50:	cinc	x1, x2, ne  // ne = any
   1dd54:	cmp	x30, #0x0
   1dd58:	add	x1, x1, x5
   1dd5c:	cset	x2, ne  // ne = any
   1dd60:	orr	x6, x2, x6, lsr #51
   1dd64:	orr	x6, x6, x4, lsl #13
   1dd68:	extr	x4, x1, x4, #51
   1dd6c:	tbz	x1, #39, 1e080 <mpc_ui_ui_sub@@Base+0x1264>
   1dd70:	ldp	x19, x20, [sp, #16]
   1dd74:	and	x1, x6, #0x1
   1dd78:	ldp	x21, x22, [sp, #32]
   1dd7c:	orr	x6, x1, x6, lsr #1
   1dd80:	orr	x6, x6, x4, lsl #63
   1dd84:	lsr	x4, x4, #1
   1dd88:	mov	x1, #0x3fff                	// #16383
   1dd8c:	add	x2, x3, x1
   1dd90:	cmp	x2, #0x0
   1dd94:	b.le	1df2c <mpc_ui_ui_sub@@Base+0x1110>
   1dd98:	tst	x6, #0x7
   1dd9c:	b.eq	1ddbc <mpc_ui_ui_sub@@Base+0xfa0>  // b.none
   1dda0:	and	x1, x11, #0xc00000
   1dda4:	orr	w0, w0, #0x10
   1dda8:	cmp	x1, #0x400, lsl #12
   1ddac:	b.eq	1e174 <mpc_ui_ui_sub@@Base+0x1358>  // b.none
   1ddb0:	cmp	x1, #0x800, lsl #12
   1ddb4:	b.eq	1e11c <mpc_ui_ui_sub@@Base+0x1300>  // b.none
   1ddb8:	cbz	x1, 1e104 <mpc_ui_ui_sub@@Base+0x12e8>
   1ddbc:	tbz	x4, #52, 1ddc8 <mpc_ui_ui_sub@@Base+0xfac>
   1ddc0:	and	x4, x4, #0xffefffffffffffff
   1ddc4:	add	x2, x3, #0x4, lsl #12
   1ddc8:	mov	x1, #0x7ffe                	// #32766
   1ddcc:	cmp	x2, x1
   1ddd0:	b.gt	1e054 <mpc_ui_ui_sub@@Base+0x1238>
   1ddd4:	and	w1, w2, #0x7fff
   1ddd8:	extr	x5, x4, x6, #3
   1dddc:	ubfx	x4, x4, #3, #48
   1dde0:	b	1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1dde4:	mov	w0, w12
   1dde8:	mov	w10, #0x0                   	// #0
   1ddec:	mov	x4, #0xffffffffffff        	// #281474976710655
   1ddf0:	mov	x5, #0xffffffffffffffff    	// #-1
   1ddf4:	mov	w1, #0x7fff                	// #32767
   1ddf8:	b	1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1ddfc:	mov	w15, w10
   1de00:	mov	x13, x8
   1de04:	b	1db00 <mpc_ui_ui_sub@@Base+0xce4>
   1de08:	orr	x5, x7, x1
   1de0c:	cbz	x5, 1df14 <mpc_ui_ui_sub@@Base+0x10f8>
   1de10:	cbz	x7, 1e030 <mpc_ui_ui_sub@@Base+0x1214>
   1de14:	clz	x0, x7
   1de18:	sub	x4, x0, #0xf
   1de1c:	add	w5, w4, #0x3
   1de20:	mov	w3, #0x3d                  	// #61
   1de24:	sub	w3, w3, w4
   1de28:	lsl	x4, x7, x5
   1de2c:	lsr	x3, x1, x3
   1de30:	orr	x7, x3, x4
   1de34:	lsl	x5, x1, x5
   1de38:	lsr	x8, x2, #63
   1de3c:	mov	x3, #0xffffffffffffc011    	// #-16367
   1de40:	ubfx	x4, x2, #0, #48
   1de44:	sub	x3, x3, x0
   1de48:	and	w15, w8, #0xff
   1de4c:	mov	x13, x8
   1de50:	ubfx	x9, x2, #48, #15
   1de54:	mov	x1, #0x0                   	// #0
   1de58:	mov	x16, #0x0                   	// #0
   1de5c:	mov	w0, #0x0                   	// #0
   1de60:	cbnz	w9, 1daac <mpc_ui_ui_sub@@Base+0xc90>
   1de64:	nop
   1de68:	orr	x2, x4, x6
   1de6c:	cbz	x2, 1dedc <mpc_ui_ui_sub@@Base+0x10c0>
   1de70:	cbz	x4, 1e00c <mpc_ui_ui_sub@@Base+0x11f0>
   1de74:	clz	x9, x4
   1de78:	sub	x2, x9, #0xf
   1de7c:	add	w10, w2, #0x3
   1de80:	mov	w8, #0x3d                  	// #61
   1de84:	sub	w8, w8, w2
   1de88:	lsl	x2, x4, x10
   1de8c:	lsr	x8, x6, x8
   1de90:	orr	x4, x8, x2
   1de94:	lsl	x6, x6, x10
   1de98:	sub	x9, x3, x9
   1de9c:	mov	x10, #0xffffffffffffc011    	// #-16367
   1dea0:	mov	x2, #0x0                   	// #0
   1dea4:	add	x9, x9, x10
   1dea8:	b	1dad8 <mpc_ui_ui_sub@@Base+0xcbc>
   1deac:	orr	x5, x7, x1
   1deb0:	cbnz	x5, 1def4 <mpc_ui_ui_sub@@Base+0x10d8>
   1deb4:	mov	x7, #0x0                   	// #0
   1deb8:	mov	x1, #0x8                   	// #8
   1debc:	mov	x3, #0x7fff                	// #32767
   1dec0:	mov	x16, #0x2                   	// #2
   1dec4:	mov	w0, #0x0                   	// #0
   1dec8:	b	1da94 <mpc_ui_ui_sub@@Base+0xc78>
   1decc:	mov	w1, #0x7fff                	// #32767
   1ded0:	mov	x4, #0x0                   	// #0
   1ded4:	mov	x5, #0x0                   	// #0
   1ded8:	b	1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1dedc:	orr	x1, x1, #0x1
   1dee0:	mov	x9, x3
   1dee4:	mov	x4, #0x0                   	// #0
   1dee8:	mov	x6, #0x0                   	// #0
   1deec:	mov	x2, #0x1                   	// #1
   1def0:	b	1dad8 <mpc_ui_ui_sub@@Base+0xcbc>
   1def4:	lsr	x0, x7, #47
   1def8:	mov	x5, x1
   1defc:	eor	x0, x0, #0x1
   1df00:	mov	x1, #0xc                   	// #12
   1df04:	and	w0, w0, #0x1
   1df08:	mov	x3, #0x7fff                	// #32767
   1df0c:	mov	x16, #0x3                   	// #3
   1df10:	b	1da94 <mpc_ui_ui_sub@@Base+0xc78>
   1df14:	mov	x7, #0x0                   	// #0
   1df18:	mov	x1, #0x4                   	// #4
   1df1c:	mov	x3, #0x0                   	// #0
   1df20:	mov	x16, #0x1                   	// #1
   1df24:	mov	w0, #0x0                   	// #0
   1df28:	b	1da94 <mpc_ui_ui_sub@@Base+0xc78>
   1df2c:	mov	x1, #0x1                   	// #1
   1df30:	sub	x2, x1, x2
   1df34:	cmp	x2, #0x74
   1df38:	b.gt	1dfb0 <mpc_ui_ui_sub@@Base+0x1194>
   1df3c:	cmp	x2, #0x3f
   1df40:	b.le	1e090 <mpc_ui_ui_sub@@Base+0x1274>
   1df44:	mov	w1, #0x80                  	// #128
   1df48:	sub	w1, w1, w2
   1df4c:	cmp	x2, #0x40
   1df50:	sub	w2, w2, #0x40
   1df54:	lsl	x1, x4, x1
   1df58:	orr	x1, x6, x1
   1df5c:	csel	x6, x1, x6, ne  // ne = any
   1df60:	lsr	x2, x4, x2
   1df64:	cmp	x6, #0x0
   1df68:	cset	x5, ne  // ne = any
   1df6c:	orr	x5, x5, x2
   1df70:	ands	x2, x5, #0x7
   1df74:	b.eq	1e0c4 <mpc_ui_ui_sub@@Base+0x12a8>  // b.none
   1df78:	mov	x2, #0x0                   	// #0
   1df7c:	and	x11, x11, #0xc00000
   1df80:	orr	w0, w0, #0x10
   1df84:	cmp	x11, #0x400, lsl #12
   1df88:	b.eq	1e1d4 <mpc_ui_ui_sub@@Base+0x13b8>  // b.none
   1df8c:	cmp	x11, #0x800, lsl #12
   1df90:	b.eq	1e1e8 <mpc_ui_ui_sub@@Base+0x13cc>  // b.none
   1df94:	cbz	x11, 1e12c <mpc_ui_ui_sub@@Base+0x1310>
   1df98:	tbnz	x2, #51, 1e144 <mpc_ui_ui_sub@@Base+0x1328>
   1df9c:	ubfx	x4, x2, #3, #48
   1dfa0:	extr	x5, x2, x5, #3
   1dfa4:	orr	w0, w0, #0x8
   1dfa8:	mov	w1, #0x0                   	// #0
   1dfac:	b	1dfe0 <mpc_ui_ui_sub@@Base+0x11c4>
   1dfb0:	orr	x5, x6, x4
   1dfb4:	cbz	x5, 1dfd4 <mpc_ui_ui_sub@@Base+0x11b8>
   1dfb8:	and	x11, x11, #0xc00000
   1dfbc:	orr	w0, w0, #0x10
   1dfc0:	cmp	x11, #0x400, lsl #12
   1dfc4:	sub	x5, x1, x8
   1dfc8:	b.eq	1dfd4 <mpc_ui_ui_sub@@Base+0x11b8>  // b.none
   1dfcc:	cmp	x11, #0x800, lsl #12
   1dfd0:	csel	x5, x8, xzr, eq  // eq = none
   1dfd4:	orr	w0, w0, #0x8
   1dfd8:	mov	w1, #0x0                   	// #0
   1dfdc:	mov	x4, #0x0                   	// #0
   1dfe0:	mov	x3, #0x0                   	// #0
   1dfe4:	fmov	d0, x5
   1dfe8:	bfxil	x3, x4, #0, #48
   1dfec:	bfi	x3, x1, #48, #15
   1dff0:	bfi	x3, x10, #63, #1
   1dff4:	fmov	v0.d[1], x3
   1dff8:	str	q0, [sp, #48]
   1dffc:	bl	1e218 <mpc_ui_ui_sub@@Base+0x13fc>
   1e000:	ldr	q0, [sp, #48]
   1e004:	ldp	x29, x30, [sp], #80
   1e008:	ret
   1e00c:	clz	x9, x6
   1e010:	add	x2, x9, #0x31
   1e014:	add	x9, x9, #0x40
   1e018:	cmp	x2, #0x3c
   1e01c:	b.le	1de7c <mpc_ui_ui_sub@@Base+0x1060>
   1e020:	sub	w2, w2, #0x3d
   1e024:	lsl	x4, x6, x2
   1e028:	mov	x6, #0x0                   	// #0
   1e02c:	b	1de98 <mpc_ui_ui_sub@@Base+0x107c>
   1e030:	clz	x3, x1
   1e034:	add	x4, x3, #0x31
   1e038:	add	x0, x3, #0x40
   1e03c:	cmp	x4, #0x3c
   1e040:	b.le	1de1c <mpc_ui_ui_sub@@Base+0x1000>
   1e044:	sub	w4, w4, #0x3d
   1e048:	mov	x5, #0x0                   	// #0
   1e04c:	lsl	x7, x1, x4
   1e050:	b	1de38 <mpc_ui_ui_sub@@Base+0x101c>
   1e054:	and	x5, x11, #0xc00000
   1e058:	cmp	x5, #0x400, lsl #12
   1e05c:	b.eq	1e158 <mpc_ui_ui_sub@@Base+0x133c>  // b.none
   1e060:	cmp	x5, #0x800, lsl #12
   1e064:	b.eq	1e0e8 <mpc_ui_ui_sub@@Base+0x12cc>  // b.none
   1e068:	cbz	x5, 1e0dc <mpc_ui_ui_sub@@Base+0x12c0>
   1e06c:	mov	x4, #0xffffffffffff        	// #281474976710655
   1e070:	mov	x5, #0xffffffffffffffff    	// #-1
   1e074:	mov	w2, #0x14                  	// #20
   1e078:	orr	w0, w0, w2
   1e07c:	b	1dfe0 <mpc_ui_ui_sub@@Base+0x11c4>
   1e080:	mov	x3, x9
   1e084:	ldp	x19, x20, [sp, #16]
   1e088:	ldp	x21, x22, [sp, #32]
   1e08c:	b	1dd88 <mpc_ui_ui_sub@@Base+0xf6c>
   1e090:	mov	w1, #0x40                  	// #64
   1e094:	sub	w1, w1, w2
   1e098:	lsr	x3, x6, x2
   1e09c:	lsl	x6, x6, x1
   1e0a0:	cmp	x6, #0x0
   1e0a4:	lsl	x5, x4, x1
   1e0a8:	cset	x1, ne  // ne = any
   1e0ac:	orr	x5, x5, x3
   1e0b0:	lsr	x2, x4, x2
   1e0b4:	orr	x5, x5, x1
   1e0b8:	tst	x5, #0x7
   1e0bc:	b.ne	1df7c <mpc_ui_ui_sub@@Base+0x1160>  // b.any
   1e0c0:	tbnz	x2, #51, 1e1f4 <mpc_ui_ui_sub@@Base+0x13d8>
   1e0c4:	ubfx	x4, x2, #3, #48
   1e0c8:	extr	x5, x2, x5, #3
   1e0cc:	mov	w1, #0x0                   	// #0
   1e0d0:	tbz	w11, #11, 1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1e0d4:	orr	w0, w0, #0x8
   1e0d8:	b	1dfe0 <mpc_ui_ui_sub@@Base+0x11c4>
   1e0dc:	mov	w1, #0x7fff                	// #32767
   1e0e0:	mov	x4, #0x0                   	// #0
   1e0e4:	b	1e074 <mpc_ui_ui_sub@@Base+0x1258>
   1e0e8:	cmp	x8, #0x0
   1e0ec:	mov	w2, #0x7fff                	// #32767
   1e0f0:	mov	x4, #0xffffffffffff        	// #281474976710655
   1e0f4:	csel	w1, w1, w2, eq  // eq = none
   1e0f8:	csel	x4, x4, xzr, eq  // eq = none
   1e0fc:	csetm	x5, eq  // eq = none
   1e100:	b	1e074 <mpc_ui_ui_sub@@Base+0x1258>
   1e104:	and	x1, x6, #0xf
   1e108:	cmp	x1, #0x4
   1e10c:	b.eq	1ddbc <mpc_ui_ui_sub@@Base+0xfa0>  // b.none
   1e110:	adds	x6, x6, #0x4
   1e114:	cinc	x4, x4, cs  // cs = hs, nlast
   1e118:	b	1ddbc <mpc_ui_ui_sub@@Base+0xfa0>
   1e11c:	cbz	x8, 1ddbc <mpc_ui_ui_sub@@Base+0xfa0>
   1e120:	adds	x6, x6, #0x8
   1e124:	cinc	x4, x4, cs  // cs = hs, nlast
   1e128:	b	1ddbc <mpc_ui_ui_sub@@Base+0xfa0>
   1e12c:	and	x1, x5, #0xf
   1e130:	cmp	x1, #0x4
   1e134:	b.eq	1e140 <mpc_ui_ui_sub@@Base+0x1324>  // b.none
   1e138:	adds	x5, x5, #0x4
   1e13c:	cinc	x2, x2, cs  // cs = hs, nlast
   1e140:	tbz	x2, #51, 1df9c <mpc_ui_ui_sub@@Base+0x1180>
   1e144:	orr	w0, w0, #0x8
   1e148:	mov	w1, #0x1                   	// #1
   1e14c:	mov	x4, #0x0                   	// #0
   1e150:	mov	x5, #0x0                   	// #0
   1e154:	b	1dfe0 <mpc_ui_ui_sub@@Base+0x11c4>
   1e158:	cmp	x8, #0x0
   1e15c:	mov	w2, #0x7fff                	// #32767
   1e160:	mov	x4, #0xffffffffffff        	// #281474976710655
   1e164:	csel	w1, w1, w2, ne  // ne = any
   1e168:	csel	x4, x4, xzr, ne  // ne = any
   1e16c:	csetm	x5, ne  // ne = any
   1e170:	b	1e074 <mpc_ui_ui_sub@@Base+0x1258>
   1e174:	cbnz	x8, 1ddbc <mpc_ui_ui_sub@@Base+0xfa0>
   1e178:	b	1e120 <mpc_ui_ui_sub@@Base+0x1304>
   1e17c:	mov	x4, #0x2                   	// #2
   1e180:	cmp	x1, #0xf
   1e184:	b.ne	1e1a8 <mpc_ui_ui_sub@@Base+0x138c>  // b.any
   1e188:	tbz	x7, #47, 1e1c0 <mpc_ui_ui_sub@@Base+0x13a4>
   1e18c:	tbnz	x2, #47, 1e1c0 <mpc_ui_ui_sub@@Base+0x13a4>
   1e190:	orr	x4, x2, #0x800000000000
   1e194:	mov	w10, w15
   1e198:	and	x4, x4, #0xffffffffffff
   1e19c:	mov	x5, x6
   1e1a0:	mov	w1, #0x7fff                	// #32767
   1e1a4:	b	1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1e1a8:	cmp	x1, #0xb
   1e1ac:	b.ne	1daf8 <mpc_ui_ui_sub@@Base+0xcdc>  // b.any
   1e1b0:	mov	x7, x2
   1e1b4:	mov	x5, x6
   1e1b8:	mov	x16, x4
   1e1bc:	b	1db00 <mpc_ui_ui_sub@@Base+0xce4>
   1e1c0:	orr	x4, x7, #0x800000000000
   1e1c4:	mov	w10, w12
   1e1c8:	and	x4, x4, #0xffffffffffff
   1e1cc:	mov	w1, #0x7fff                	// #32767
   1e1d0:	b	1dba0 <mpc_ui_ui_sub@@Base+0xd84>
   1e1d4:	cbnz	x8, 1e140 <mpc_ui_ui_sub@@Base+0x1324>
   1e1d8:	adds	x5, x5, #0x8
   1e1dc:	cinc	x2, x2, cs  // cs = hs, nlast
   1e1e0:	tbnz	x2, #51, 1e144 <mpc_ui_ui_sub@@Base+0x1328>
   1e1e4:	b	1df9c <mpc_ui_ui_sub@@Base+0x1180>
   1e1e8:	cbnz	x8, 1e1d8 <mpc_ui_ui_sub@@Base+0x13bc>
   1e1ec:	tbnz	x2, #51, 1e144 <mpc_ui_ui_sub@@Base+0x1328>
   1e1f0:	b	1df9c <mpc_ui_ui_sub@@Base+0x1180>
   1e1f4:	orr	w0, w0, #0x10
   1e1f8:	b	1e144 <mpc_ui_ui_sub@@Base+0x1328>
   1e1fc:	mov	x2, x4
   1e200:	mov	x4, #0x3                   	// #3
   1e204:	b	1e180 <mpc_ui_ui_sub@@Base+0x1364>
   1e208:	mov	w10, w15
   1e20c:	mov	x8, x13
   1e210:	b	1db1c <mpc_ui_ui_sub@@Base+0xd00>
   1e214:	nop
   1e218:	tbz	w0, #0, 1e228 <mpc_ui_ui_sub@@Base+0x140c>
   1e21c:	movi	v1.2s, #0x0
   1e220:	fdiv	s0, s1, s1
   1e224:	mrs	x1, fpsr
   1e228:	tbz	w0, #1, 1e23c <mpc_ui_ui_sub@@Base+0x1420>
   1e22c:	fmov	s1, #1.000000000000000000e+00
   1e230:	movi	v2.2s, #0x0
   1e234:	fdiv	s0, s1, s2
   1e238:	mrs	x1, fpsr
   1e23c:	tbz	w0, #2, 1e25c <mpc_ui_ui_sub@@Base+0x1440>
   1e240:	mov	w2, #0xc5ae                	// #50606
   1e244:	mov	w1, #0x7f7fffff            	// #2139095039
   1e248:	movk	w2, #0x749d, lsl #16
   1e24c:	fmov	s1, w1
   1e250:	fmov	s2, w2
   1e254:	fadd	s0, s1, s2
   1e258:	mrs	x1, fpsr
   1e25c:	tbz	w0, #3, 1e26c <mpc_ui_ui_sub@@Base+0x1450>
   1e260:	movi	v1.2s, #0x80, lsl #16
   1e264:	fmul	s0, s1, s1
   1e268:	mrs	x1, fpsr
   1e26c:	tbz	w0, #4, 1e284 <mpc_ui_ui_sub@@Base+0x1468>
   1e270:	mov	w0, #0x7f7fffff            	// #2139095039
   1e274:	fmov	s2, #1.000000000000000000e+00
   1e278:	fmov	s1, w0
   1e27c:	fsub	s0, s1, s2
   1e280:	mrs	x0, fpsr
   1e284:	ret

Disassembly of section .fini:

000000000001e288 <.fini>:
   1e288:	stp	x29, x30, [sp, #-16]!
   1e28c:	mov	x29, sp
   1e290:	ldp	x29, x30, [sp], #16
   1e294:	ret
