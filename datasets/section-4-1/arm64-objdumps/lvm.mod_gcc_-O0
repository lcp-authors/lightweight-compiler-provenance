
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lvm.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1ca8>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	ldr	x2, [sp, #24]
      18:	ldr	x1, [sp, #32]
      1c:	ldr	x0, [sp, #40]
      20:	bl	0 <grub_memmove>
      24:	ldp	x29, x30, [sp], #48
      28:	ret
      2c:	sub	sp, sp, #0x30
      30:	str	x0, [sp, #8]
      34:	str	x1, [sp]
      38:	ldr	x0, [sp]
      3c:	ldrb	w0, [x0]
      40:	cmp	w0, #0x0
      44:	b.eq	114 <grub_mod_init-0x1b94>  // b.none
      48:	ldr	x0, [sp]
      4c:	add	x1, x0, #0x1
      50:	str	x1, [sp]
      54:	ldrb	w0, [x0]
      58:	strb	w0, [sp, #31]
      5c:	ldr	x0, [sp, #8]
      60:	ldrb	w0, [x0]
      64:	cmp	w0, #0x0
      68:	b.ne	74 <grub_mod_init-0x1c34>  // b.any
      6c:	mov	x0, #0x0                   	// #0
      70:	b	118 <grub_mod_init-0x1b90>
      74:	ldr	x0, [sp, #8]
      78:	ldrb	w0, [x0]
      7c:	ldrb	w1, [sp, #31]
      80:	cmp	w1, w0
      84:	b.ne	104 <grub_mod_init-0x1ba4>  // b.any
      88:	ldr	x0, [sp, #8]
      8c:	add	x0, x0, #0x1
      90:	str	x0, [sp, #40]
      94:	ldr	x0, [sp]
      98:	str	x0, [sp, #32]
      9c:	ldr	x0, [sp, #32]
      a0:	ldrb	w0, [x0]
      a4:	cmp	w0, #0x0
      a8:	b.ne	b4 <grub_mod_init-0x1bf4>  // b.any
      ac:	ldr	x0, [sp, #8]
      b0:	b	118 <grub_mod_init-0x1b90>
      b4:	ldr	x0, [sp, #40]
      b8:	ldrb	w0, [x0]
      bc:	cmp	w0, #0x0
      c0:	b.ne	cc <grub_mod_init-0x1bdc>  // b.any
      c4:	mov	x0, #0x0                   	// #0
      c8:	b	118 <grub_mod_init-0x1b90>
      cc:	ldr	x0, [sp, #40]
      d0:	ldrb	w1, [x0]
      d4:	ldr	x0, [sp, #32]
      d8:	ldrb	w0, [x0]
      dc:	cmp	w1, w0
      e0:	b.ne	100 <grub_mod_init-0x1ba8>  // b.any
      e4:	ldr	x0, [sp, #40]
      e8:	add	x0, x0, #0x1
      ec:	str	x0, [sp, #40]
      f0:	ldr	x0, [sp, #32]
      f4:	add	x0, x0, #0x1
      f8:	str	x0, [sp, #32]
      fc:	b	9c <grub_mod_init-0x1c0c>
     100:	nop
     104:	ldr	x0, [sp, #8]
     108:	add	x0, x0, #0x1
     10c:	str	x0, [sp, #8]
     110:	b	5c <grub_mod_init-0x1c4c>
     114:	ldr	x0, [sp, #8]
     118:	add	sp, sp, #0x30
     11c:	ret
     120:	sub	sp, sp, #0x20
     124:	str	x0, [sp, #8]
     128:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     12c:	add	x0, x0, #0x0
     130:	ldr	x0, [x0]
     134:	str	x0, [sp, #16]
     138:	ldr	x0, [sp, #16]
     13c:	ldr	x0, [x0]
     140:	str	x0, [sp, #24]
     144:	b	15c <grub_mod_init-0x1b4c>
     148:	ldr	x0, [sp, #24]
     14c:	str	x0, [sp, #16]
     150:	ldr	x0, [sp, #16]
     154:	ldr	x0, [x0]
     158:	str	x0, [sp, #24]
     15c:	ldr	x0, [sp, #24]
     160:	cmp	x0, #0x0
     164:	b.ne	148 <grub_mod_init-0x1b60>  // b.any
     168:	ldr	x0, [sp, #8]
     16c:	str	xzr, [x0]
     170:	ldr	x0, [sp, #8]
     174:	ldr	x1, [sp, #16]
     178:	str	x1, [x0, #8]
     17c:	ldr	x0, [sp, #16]
     180:	ldr	x1, [sp, #8]
     184:	str	x1, [x0]
     188:	nop
     18c:	add	sp, sp, #0x20
     190:	ret
     194:	nop
	...
     1a0:	stp	x29, x30, [sp, #-32]!
     1a4:	mov	x29, sp
     1a8:	str	x0, [sp, #24]
     1ac:	ldr	x0, [sp, #24]
     1b0:	bl	0 <grub_list_remove>
     1b4:	nop
     1b8:	ldp	x29, x30, [sp], #32
     1bc:	ret
     1c0:	stp	x29, x30, [sp, #-32]!
     1c4:	mov	x29, sp
     1c8:	str	x0, [sp, #24]
     1cc:	str	x1, [sp, #16]
     1d0:	ldr	x0, [sp, #24]
     1d4:	ldr	x0, [x0]
     1d8:	ldr	x1, [sp, #16]
     1dc:	bl	2c <grub_mod_init-0x1c7c>
     1e0:	mov	x1, x0
     1e4:	ldr	x0, [sp, #24]
     1e8:	str	x1, [x0]
     1ec:	ldr	x0, [sp, #24]
     1f0:	ldr	x0, [x0]
     1f4:	cmp	x0, #0x0
     1f8:	b.ne	204 <grub_mod_init-0x1aa4>  // b.any
     1fc:	mov	x0, #0x0                   	// #0
     200:	b	238 <grub_mod_init-0x1a70>
     204:	ldr	x0, [sp, #16]
     208:	bl	0 <grub_strlen>
     20c:	mov	x1, x0
     210:	ldr	x0, [sp, #24]
     214:	ldr	x0, [x0]
     218:	add	x1, x0, x1
     21c:	ldr	x0, [sp, #24]
     220:	str	x1, [x0]
     224:	ldr	x0, [sp, #24]
     228:	ldr	x0, [x0]
     22c:	mov	w2, #0xa                   	// #10
     230:	ldr	x1, [sp, #24]
     234:	bl	0 <grub_strtoull>
     238:	ldp	x29, x30, [sp], #32
     23c:	ret
     240:	stp	x29, x30, [sp, #-80]!
     244:	mov	x29, sp
     248:	str	x0, [sp, #40]
     24c:	str	x1, [sp, #32]
     250:	str	x2, [sp, #24]
     254:	ldr	x0, [sp, #32]
     258:	bl	0 <grub_strlen>
     25c:	str	x0, [sp, #64]
     260:	ldr	x0, [sp, #24]
     264:	bl	0 <grub_strlen>
     268:	str	x0, [sp, #56]
     26c:	ldr	x1, [sp, #32]
     270:	ldr	x0, [sp, #40]
     274:	bl	2c <grub_mod_init-0x1c7c>
     278:	str	x0, [sp, #40]
     27c:	ldr	x0, [sp, #40]
     280:	cmp	x0, #0x0
     284:	b.ne	290 <grub_mod_init-0x1a18>  // b.any
     288:	mov	w0, #0x0                   	// #0
     28c:	b	3a0 <grub_mod_init-0x1908>
     290:	ldr	x1, [sp, #40]
     294:	ldr	x0, [sp, #64]
     298:	add	x0, x1, x0
     29c:	str	x0, [sp, #40]
     2a0:	mov	x2, #0x4                   	// #4
     2a4:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     2a8:	add	x0, x0, #0x0
     2ac:	ldr	x1, [x0]
     2b0:	ldr	x0, [sp, #40]
     2b4:	bl	0 <grub_memcmp>
     2b8:	cmp	w0, #0x0
     2bc:	b.eq	2c4 <grub_mod_init-0x19e4>  // b.none
     2c0:	b	26c <grub_mod_init-0x1a3c>
     2c4:	ldr	x0, [sp, #40]
     2c8:	add	x0, x0, #0x4
     2cc:	str	x0, [sp, #72]
     2d0:	b	2e0 <grub_mod_init-0x19c8>
     2d4:	ldr	x0, [sp, #72]
     2d8:	add	x0, x0, #0x1
     2dc:	str	x0, [sp, #72]
     2e0:	ldr	x0, [sp, #72]
     2e4:	ldrb	w0, [x0]
     2e8:	bl	0 <grub_isspace>
     2ec:	cmp	w0, #0x0
     2f0:	b.ne	2d4 <grub_mod_init-0x19d4>  // b.any
     2f4:	ldr	x0, [sp, #72]
     2f8:	ldrb	w0, [x0]
     2fc:	cmp	w0, #0x22
     300:	b.eq	30c <grub_mod_init-0x199c>  // b.none
     304:	mov	w0, #0x0                   	// #0
     308:	b	3a0 <grub_mod_init-0x1908>
     30c:	ldr	x0, [sp, #72]
     310:	add	x0, x0, #0x1
     314:	str	x0, [sp, #72]
     318:	ldr	x2, [sp, #56]
     31c:	ldr	x1, [sp, #24]
     320:	ldr	x0, [sp, #72]
     324:	bl	0 <grub_memcmp>
     328:	cmp	w0, #0x0
     32c:	b.ne	35c <grub_mod_init-0x194c>  // b.any
     330:	ldr	x1, [sp, #72]
     334:	ldr	x0, [sp, #56]
     338:	add	x0, x1, x0
     33c:	ldrb	w0, [x0]
     340:	cmp	w0, #0x22
     344:	b.ne	35c <grub_mod_init-0x194c>  // b.any
     348:	mov	w0, #0x1                   	// #1
     34c:	b	3a0 <grub_mod_init-0x1908>
     350:	ldr	x0, [sp, #72]
     354:	add	x0, x0, #0x1
     358:	str	x0, [sp, #72]
     35c:	ldr	x0, [sp, #72]
     360:	ldrb	w0, [x0]
     364:	cmp	w0, #0x22
     368:	b.ne	350 <grub_mod_init-0x1958>  // b.any
     36c:	ldr	x0, [sp, #72]
     370:	add	x0, x0, #0x1
     374:	str	x0, [sp, #72]
     378:	ldr	x0, [sp, #72]
     37c:	ldrb	w0, [x0]
     380:	cmp	w0, #0x5d
     384:	b.ne	390 <grub_mod_init-0x1918>  // b.any
     388:	mov	w0, #0x0                   	// #0
     38c:	b	3a0 <grub_mod_init-0x1908>
     390:	ldr	x0, [sp, #72]
     394:	add	x0, x0, #0x1
     398:	str	x0, [sp, #72]
     39c:	b	2e0 <grub_mod_init-0x19c8>
     3a0:	ldp	x29, x30, [sp], #80
     3a4:	ret
	...
     3b0:	sub	sp, sp, #0x370
     3b4:	stp	x29, x30, [sp]
     3b8:	mov	x29, sp
     3bc:	str	x0, [sp, #40]
     3c0:	str	x1, [sp, #32]
     3c4:	str	x2, [sp, #24]
     3c8:	add	x0, sp, #0x88
     3cc:	str	x0, [sp, #784]
     3d0:	str	wzr, [sp, #868]
     3d4:	b	460 <grub_mod_init-0x1848>
     3d8:	ldr	w0, [sp, #868]
     3dc:	add	x1, sp, #0x88
     3e0:	mov	x4, x1
     3e4:	mov	x3, #0x200                 	// #512
     3e8:	mov	x2, #0x0                   	// #0
     3ec:	mov	x1, x0
     3f0:	ldr	x0, [sp, #40]
     3f4:	bl	0 <grub_disk_read>
     3f8:	str	w0, [sp, #780]
     3fc:	ldr	w0, [sp, #780]
     400:	cmp	w0, #0x0
     404:	b.ne	1b88 <grub_mod_init-0x120>  // b.any
     408:	ldr	x3, [sp, #784]
     40c:	mov	x2, #0x8                   	// #8
     410:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     414:	add	x0, x0, #0x0
     418:	ldr	x1, [x0]
     41c:	mov	x0, x3
     420:	bl	0 <grub_strncmp>
     424:	cmp	w0, #0x0
     428:	b.ne	454 <grub_mod_init-0x1854>  // b.any
     42c:	ldr	x0, [sp, #784]
     430:	add	x3, x0, #0x18
     434:	mov	x2, #0x8                   	// #8
     438:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     43c:	add	x0, x0, #0x0
     440:	ldr	x1, [x0]
     444:	mov	x0, x3
     448:	bl	0 <grub_strncmp>
     44c:	cmp	w0, #0x0
     450:	b.eq	470 <grub_mod_init-0x1838>  // b.none
     454:	ldr	w0, [sp, #868]
     458:	add	w0, w0, #0x1
     45c:	str	w0, [sp, #868]
     460:	ldr	w0, [sp, #868]
     464:	cmp	w0, #0x3
     468:	b.ls	3d8 <grub_mod_init-0x18d0>  // b.plast
     46c:	b	474 <grub_mod_init-0x1834>
     470:	nop
     474:	ldr	w0, [sp, #868]
     478:	cmp	w0, #0x4
     47c:	b.eq	1b90 <grub_mod_init-0x118>  // b.none
     480:	ldr	x0, [sp, #784]
     484:	ldr	w0, [x0, #20]
     488:	mov	w0, w0
     48c:	add	x1, sp, #0x88
     490:	add	x0, x1, x0
     494:	str	x0, [sp, #768]
     498:	str	wzr, [sp, #868]
     49c:	str	wzr, [sp, #864]
     4a0:	b	51c <grub_mod_init-0x178c>
     4a4:	ldr	x1, [sp, #768]
     4a8:	ldr	w0, [sp, #868]
     4ac:	ldrsb	w2, [x1, x0]
     4b0:	ldr	w0, [sp, #864]
     4b4:	add	w1, w0, #0x1
     4b8:	str	w1, [sp, #864]
     4bc:	and	w2, w2, #0xff
     4c0:	mov	w0, w0
     4c4:	add	x1, sp, #0x38
     4c8:	strb	w2, [x1, x0]
     4cc:	ldr	w0, [sp, #868]
     4d0:	cmp	w0, #0x1
     4d4:	b.eq	510 <grub_mod_init-0x1798>  // b.none
     4d8:	ldr	w0, [sp, #868]
     4dc:	cmp	w0, #0x1d
     4e0:	b.eq	510 <grub_mod_init-0x1798>  // b.none
     4e4:	ldr	w0, [sp, #868]
     4e8:	and	w0, w0, #0x3
     4ec:	cmp	w0, #0x1
     4f0:	b.ne	510 <grub_mod_init-0x1798>  // b.any
     4f4:	ldr	w0, [sp, #864]
     4f8:	add	w1, w0, #0x1
     4fc:	str	w1, [sp, #864]
     500:	mov	w0, w0
     504:	add	x1, sp, #0x38
     508:	mov	w2, #0x2d                  	// #45
     50c:	strb	w2, [x1, x0]
     510:	ldr	w0, [sp, #868]
     514:	add	w0, w0, #0x1
     518:	str	w0, [sp, #868]
     51c:	ldr	w0, [sp, #868]
     520:	cmp	w0, #0x1f
     524:	b.ls	4a4 <grub_mod_init-0x1804>  // b.plast
     528:	ldr	w0, [sp, #864]
     52c:	add	x1, sp, #0x38
     530:	strb	wzr, [x1, x0]
     534:	ldr	x0, [sp, #768]
     538:	add	x0, x0, #0x28
     53c:	str	x0, [sp, #760]
     540:	ldr	x0, [sp, #760]
     544:	add	x0, x0, #0x10
     548:	str	x0, [sp, #760]
     54c:	ldr	x0, [sp, #760]
     550:	ldr	x0, [x0]
     554:	cmp	x0, #0x0
     558:	b.eq	574 <grub_mod_init-0x1734>  // b.none
     55c:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     560:	add	x0, x0, #0x0
     564:	ldr	x1, [x0]
     568:	mov	w0, #0x18                  	// #24
     56c:	bl	0 <grub_error>
     570:	b	1b9c <grub_mod_init-0x10c>
     574:	ldr	x0, [sp, #760]
     578:	add	x0, x0, #0x10
     57c:	str	x0, [sp, #760]
     580:	ldr	x0, [sp, #760]
     584:	ldr	x0, [x0]
     588:	str	x0, [sp, #752]
     58c:	ldr	x0, [sp, #760]
     590:	ldr	x0, [x0, #8]
     594:	str	x0, [sp, #744]
     598:	ldr	x0, [sp, #744]
     59c:	lsl	x0, x0, #1
     5a0:	bl	0 <grub_malloc>
     5a4:	str	x0, [sp, #736]
     5a8:	ldr	x0, [sp, #736]
     5ac:	cmp	x0, #0x0
     5b0:	b.eq	1b98 <grub_mod_init-0x110>  // b.none
     5b4:	ldr	x4, [sp, #736]
     5b8:	ldr	x3, [sp, #744]
     5bc:	ldr	x2, [sp, #752]
     5c0:	mov	x1, #0x0                   	// #0
     5c4:	ldr	x0, [sp, #40]
     5c8:	bl	0 <grub_disk_read>
     5cc:	str	w0, [sp, #780]
     5d0:	ldr	w0, [sp, #780]
     5d4:	cmp	w0, #0x0
     5d8:	b.ne	1b68 <grub_mod_init-0x140>  // b.any
     5dc:	ldr	x0, [sp, #736]
     5e0:	str	x0, [sp, #728]
     5e4:	ldr	x0, [sp, #728]
     5e8:	add	x3, x0, #0x4
     5ec:	mov	x2, #0x10                  	// #16
     5f0:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     5f4:	add	x0, x0, #0x0
     5f8:	ldr	x1, [x0]
     5fc:	mov	x0, x3
     600:	bl	0 <grub_strncmp>
     604:	cmp	w0, #0x0
     608:	b.ne	61c <grub_mod_init-0x168c>  // b.any
     60c:	ldr	x0, [sp, #728]
     610:	ldr	w0, [x0, #20]
     614:	cmp	w0, #0x1
     618:	b.eq	634 <grub_mod_init-0x1674>  // b.none
     61c:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     620:	add	x0, x0, #0x0
     624:	ldr	x1, [x0]
     628:	mov	w0, #0x18                  	// #24
     62c:	bl	0 <grub_error>
     630:	b	1b7c <grub_mod_init-0x12c>
     634:	ldr	x0, [sp, #728]
     638:	add	x0, x0, #0x28
     63c:	str	x0, [sp, #720]
     640:	ldr	x0, [sp, #720]
     644:	ldr	x1, [x0]
     648:	ldr	x0, [sp, #720]
     64c:	ldr	x0, [x0, #8]
     650:	add	x1, x1, x0
     654:	ldr	x0, [sp, #728]
     658:	ldr	x0, [x0, #32]
     65c:	cmp	x1, x0
     660:	b.ls	6a8 <grub_mod_init-0x1600>  // b.plast
     664:	ldr	x1, [sp, #736]
     668:	ldr	x0, [sp, #744]
     66c:	add	x3, x1, x0
     670:	ldr	x0, [sp, #736]
     674:	add	x4, x0, #0x200
     678:	ldr	x0, [sp, #720]
     67c:	ldr	x1, [x0]
     680:	ldr	x0, [sp, #720]
     684:	ldr	x0, [x0, #8]
     688:	add	x1, x1, x0
     68c:	ldr	x0, [sp, #728]
     690:	ldr	x0, [x0, #32]
     694:	sub	x0, x1, x0
     698:	mov	x2, x0
     69c:	mov	x1, x4
     6a0:	mov	x0, x3
     6a4:	bl	0 <grub_mod_init-0x1ca8>
     6a8:	ldr	x0, [sp, #720]
     6ac:	ldr	x0, [x0]
     6b0:	ldr	x1, [sp, #736]
     6b4:	add	x0, x1, x0
     6b8:	str	x0, [sp, #872]
     6bc:	ldr	x0, [sp, #872]
     6c0:	str	x0, [sp, #48]
     6c4:	b	6d4 <grub_mod_init-0x15d4>
     6c8:	ldr	x0, [sp, #872]
     6cc:	add	x0, x0, #0x1
     6d0:	str	x0, [sp, #872]
     6d4:	ldr	x0, [sp, #872]
     6d8:	ldrb	w0, [x0]
     6dc:	cmp	w0, #0x20
     6e0:	b.eq	6fc <grub_mod_init-0x15ac>  // b.none
     6e4:	ldr	x1, [sp, #736]
     6e8:	ldr	x0, [sp, #744]
     6ec:	add	x0, x1, x0
     6f0:	ldr	x1, [sp, #872]
     6f4:	cmp	x1, x0
     6f8:	b.cc	6c8 <grub_mod_init-0x15e0>  // b.lo, b.ul, b.last
     6fc:	ldr	x1, [sp, #736]
     700:	ldr	x0, [sp, #744]
     704:	add	x0, x1, x0
     708:	ldr	x1, [sp, #872]
     70c:	cmp	x1, x0
     710:	b.eq	1b70 <grub_mod_init-0x138>  // b.none
     714:	ldr	x0, [sp, #48]
     718:	ldr	x1, [sp, #872]
     71c:	sub	x0, x1, x0
     720:	str	x0, [sp, #712]
     724:	ldr	x0, [sp, #712]
     728:	add	x0, x0, #0x1
     72c:	bl	0 <grub_malloc>
     730:	str	x0, [sp, #704]
     734:	ldr	x0, [sp, #704]
     738:	cmp	x0, #0x0
     73c:	b.eq	1b78 <grub_mod_init-0x130>  // b.none
     740:	ldr	x0, [sp, #48]
     744:	ldr	x2, [sp, #712]
     748:	mov	x1, x0
     74c:	ldr	x0, [sp, #704]
     750:	bl	0 <grub_mod_init-0x1ca8>
     754:	ldr	x1, [sp, #704]
     758:	ldr	x0, [sp, #712]
     75c:	add	x0, x1, x0
     760:	strb	wzr, [x0]
     764:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     768:	add	x0, x0, #0x0
     76c:	ldr	x1, [x0]
     770:	ldr	x0, [sp, #872]
     774:	bl	2c <grub_mod_init-0x1c7c>
     778:	str	x0, [sp, #48]
     77c:	ldr	x0, [sp, #48]
     780:	cmp	x0, #0x0
     784:	b.eq	1b48 <grub_mod_init-0x160>  // b.none
     788:	ldr	x0, [sp, #48]
     78c:	add	x0, x0, #0x6
     790:	str	x0, [sp, #48]
     794:	ldr	x1, [sp, #48]
     798:	add	x0, sp, #0x60
     79c:	mov	x2, #0x26                  	// #38
     7a0:	bl	0 <grub_mod_init-0x1ca8>
     7a4:	strb	wzr, [sp, #134]
     7a8:	add	x0, sp, #0x60
     7ac:	mov	x1, x0
     7b0:	mov	x0, #0x26                  	// #38
     7b4:	bl	0 <grub_diskfilter_get_vg_by_uuid>
     7b8:	str	x0, [sp, #856]
     7bc:	ldr	x0, [sp, #856]
     7c0:	cmp	x0, #0x0
     7c4:	b.ne	1ac8 <grub_mod_init-0x1e0>  // b.any
     7c8:	mov	x0, #0x38                  	// #56
     7cc:	bl	0 <grub_malloc>
     7d0:	str	x0, [sp, #856]
     7d4:	ldr	x0, [sp, #856]
     7d8:	cmp	x0, #0x0
     7dc:	b.eq	1b50 <grub_mod_init-0x158>  // b.none
     7e0:	ldr	x0, [sp, #856]
     7e4:	ldr	x1, [sp, #704]
     7e8:	str	x1, [x0, #16]
     7ec:	mov	x0, #0x26                  	// #38
     7f0:	bl	0 <grub_malloc>
     7f4:	mov	x1, x0
     7f8:	ldr	x0, [sp, #856]
     7fc:	str	x1, [x0]
     800:	ldr	x0, [sp, #856]
     804:	ldr	x0, [x0]
     808:	cmp	x0, #0x0
     80c:	b.eq	1b58 <grub_mod_init-0x150>  // b.none
     810:	ldr	x0, [sp, #856]
     814:	ldr	x0, [x0]
     818:	add	x1, sp, #0x60
     81c:	mov	x2, #0x26                  	// #38
     820:	bl	0 <grub_mod_init-0x1ca8>
     824:	ldr	x0, [sp, #856]
     828:	mov	x1, #0x26                  	// #38
     82c:	str	x1, [x0, #8]
     830:	add	x2, sp, #0x30
     834:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     838:	add	x0, x0, #0x0
     83c:	ldr	x1, [x0]
     840:	mov	x0, x2
     844:	bl	1c0 <grub_mod_init-0x1ae8>
     848:	mov	x1, x0
     84c:	ldr	x0, [sp, #856]
     850:	str	x1, [x0, #24]
     854:	ldr	x0, [sp, #48]
     858:	cmp	x0, #0x0
     85c:	b.eq	1b30 <grub_mod_init-0x178>  // b.none
     860:	ldr	x0, [sp, #856]
     864:	str	xzr, [x0, #40]
     868:	ldr	x0, [sp, #856]
     86c:	str	xzr, [x0, #32]
     870:	ldr	x2, [sp, #48]
     874:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     878:	add	x0, x0, #0x0
     87c:	ldr	x1, [x0]
     880:	mov	x0, x2
     884:	bl	2c <grub_mod_init-0x1c7c>
     888:	str	x0, [sp, #48]
     88c:	ldr	x0, [sp, #48]
     890:	cmp	x0, #0x0
     894:	b.eq	a8c <grub_mod_init-0x121c>  // b.none
     898:	ldr	x0, [sp, #48]
     89c:	add	x0, x0, #0x12
     8a0:	str	x0, [sp, #48]
     8a4:	b	8b4 <grub_mod_init-0x13f4>
     8a8:	ldr	x0, [sp, #48]
     8ac:	add	x0, x0, #0x1
     8b0:	str	x0, [sp, #48]
     8b4:	ldr	x0, [sp, #48]
     8b8:	ldrb	w0, [x0]
     8bc:	bl	0 <grub_isspace>
     8c0:	cmp	w0, #0x0
     8c4:	b.ne	8a8 <grub_mod_init-0x1400>  // b.any
     8c8:	ldr	x0, [sp, #48]
     8cc:	ldrb	w0, [x0]
     8d0:	cmp	w0, #0x7d
     8d4:	b.eq	a88 <grub_mod_init-0x1220>  // b.none
     8d8:	mov	x0, #0x48                  	// #72
     8dc:	bl	0 <grub_zalloc>
     8e0:	str	x0, [sp, #848]
     8e4:	ldr	x0, [sp, #48]
     8e8:	str	x0, [sp, #872]
     8ec:	b	8fc <grub_mod_init-0x13ac>
     8f0:	ldr	x0, [sp, #872]
     8f4:	add	x0, x0, #0x1
     8f8:	str	x0, [sp, #872]
     8fc:	ldr	x0, [sp, #872]
     900:	ldrb	w0, [x0]
     904:	cmp	w0, #0x20
     908:	b.ne	8f0 <grub_mod_init-0x13b8>  // b.any
     90c:	ldr	x0, [sp, #48]
     910:	ldr	x1, [sp, #872]
     914:	sub	x0, x1, x0
     918:	str	x0, [sp, #696]
     91c:	ldr	x0, [sp, #696]
     920:	add	x0, x0, #0x1
     924:	bl	0 <grub_malloc>
     928:	mov	x1, x0
     92c:	ldr	x0, [sp, #848]
     930:	str	x1, [x0, #16]
     934:	ldr	x0, [sp, #848]
     938:	ldr	x0, [x0, #16]
     93c:	ldr	x1, [sp, #48]
     940:	ldr	x2, [sp, #696]
     944:	bl	0 <grub_mod_init-0x1ca8>
     948:	ldr	x0, [sp, #848]
     94c:	ldr	x1, [x0, #16]
     950:	ldr	x0, [sp, #696]
     954:	add	x0, x1, x0
     958:	strb	wzr, [x0]
     95c:	ldr	x2, [sp, #48]
     960:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     964:	add	x0, x0, #0x0
     968:	ldr	x1, [x0]
     96c:	mov	x0, x2
     970:	bl	2c <grub_mod_init-0x1c7c>
     974:	str	x0, [sp, #48]
     978:	ldr	x0, [sp, #48]
     97c:	cmp	x0, #0x0
     980:	b.eq	a54 <grub_mod_init-0x1254>  // b.none
     984:	ldr	x0, [sp, #48]
     988:	add	x0, x0, #0x6
     98c:	str	x0, [sp, #48]
     990:	mov	x0, #0x26                  	// #38
     994:	bl	0 <grub_malloc>
     998:	mov	x1, x0
     99c:	ldr	x0, [sp, #848]
     9a0:	str	x1, [x0]
     9a4:	ldr	x0, [sp, #848]
     9a8:	ldr	x0, [x0]
     9ac:	cmp	x0, #0x0
     9b0:	b.eq	a5c <grub_mod_init-0x124c>  // b.none
     9b4:	ldr	x0, [sp, #848]
     9b8:	ldr	x0, [x0]
     9bc:	ldr	x1, [sp, #48]
     9c0:	mov	x2, #0x26                  	// #38
     9c4:	bl	0 <grub_mod_init-0x1ca8>
     9c8:	ldr	x0, [sp, #848]
     9cc:	mov	x1, #0x26                  	// #38
     9d0:	str	x1, [x0, #8]
     9d4:	add	x2, sp, #0x30
     9d8:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     9dc:	add	x0, x0, #0x0
     9e0:	ldr	x1, [x0]
     9e4:	mov	x0, x2
     9e8:	bl	1c0 <grub_mod_init-0x1ae8>
     9ec:	mov	x1, x0
     9f0:	ldr	x0, [sp, #848]
     9f4:	str	x1, [x0, #48]
     9f8:	ldr	x0, [sp, #48]
     9fc:	cmp	x0, #0x0
     a00:	b.eq	a64 <grub_mod_init-0x1244>  // b.none
     a04:	ldr	x0, [sp, #48]
     a08:	mov	w1, #0x7d                  	// #125
     a0c:	bl	0 <grub_strchr>
     a10:	str	x0, [sp, #48]
     a14:	ldr	x0, [sp, #48]
     a18:	cmp	x0, #0x0
     a1c:	b.eq	a6c <grub_mod_init-0x123c>  // b.none
     a20:	ldr	x0, [sp, #48]
     a24:	add	x0, x0, #0x1
     a28:	str	x0, [sp, #48]
     a2c:	ldr	x0, [sp, #848]
     a30:	str	xzr, [x0, #24]
     a34:	ldr	x0, [sp, #856]
     a38:	ldr	x1, [x0, #32]
     a3c:	ldr	x0, [sp, #848]
     a40:	str	x1, [x0, #56]
     a44:	ldr	x0, [sp, #856]
     a48:	ldr	x1, [sp, #848]
     a4c:	str	x1, [x0, #32]
     a50:	b	8a4 <grub_mod_init-0x1404>
     a54:	nop
     a58:	b	a70 <grub_mod_init-0x1238>
     a5c:	nop
     a60:	b	a70 <grub_mod_init-0x1238>
     a64:	nop
     a68:	b	a70 <grub_mod_init-0x1238>
     a6c:	nop
     a70:	ldr	x0, [sp, #848]
     a74:	ldr	x0, [x0, #16]
     a78:	bl	0 <grub_free>
     a7c:	ldr	x0, [sp, #848]
     a80:	bl	0 <grub_free>
     a84:	b	1b3c <grub_mod_init-0x16c>
     a88:	nop
     a8c:	ldr	x2, [sp, #48]
     a90:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     a94:	add	x0, x0, #0x0
     a98:	ldr	x1, [x0]
     a9c:	mov	x0, x2
     aa0:	bl	2c <grub_mod_init-0x1c7c>
     aa4:	str	x0, [sp, #48]
     aa8:	ldr	x0, [sp, #48]
     aac:	cmp	x0, #0x0
     ab0:	b.eq	1870 <grub_mod_init-0x438>  // b.none
     ab4:	ldr	x0, [sp, #48]
     ab8:	add	x0, x0, #0x11
     abc:	str	x0, [sp, #48]
     ac0:	str	wzr, [sp, #844]
     ac4:	b	ad4 <grub_mod_init-0x11d4>
     ac8:	ldr	x0, [sp, #48]
     acc:	add	x0, x0, #0x1
     ad0:	str	x0, [sp, #48]
     ad4:	ldr	x0, [sp, #48]
     ad8:	ldrb	w0, [x0]
     adc:	bl	0 <grub_isspace>
     ae0:	cmp	w0, #0x0
     ae4:	b.ne	ac8 <grub_mod_init-0x11e0>  // b.any
     ae8:	ldr	x0, [sp, #48]
     aec:	ldrb	w0, [x0]
     af0:	cmp	w0, #0x7d
     af4:	b.eq	186c <grub_mod_init-0x43c>  // b.none
     af8:	mov	x0, #0x60                  	// #96
     afc:	bl	0 <grub_zalloc>
     b00:	str	x0, [sp, #688]
     b04:	ldr	x0, [sp, #48]
     b08:	str	x0, [sp, #872]
     b0c:	b	b1c <grub_mod_init-0x118c>
     b10:	ldr	x0, [sp, #872]
     b14:	add	x0, x0, #0x1
     b18:	str	x0, [sp, #872]
     b1c:	ldr	x0, [sp, #872]
     b20:	ldrb	w0, [x0]
     b24:	cmp	w0, #0x20
     b28:	b.ne	b10 <grub_mod_init-0x1198>  // b.any
     b2c:	ldr	x0, [sp, #48]
     b30:	ldr	x1, [sp, #872]
     b34:	sub	x0, x1, x0
     b38:	str	x0, [sp, #680]
     b3c:	ldr	x0, [sp, #48]
     b40:	ldr	x1, [sp, #680]
     b44:	bl	0 <grub_strndup>
     b48:	mov	x1, x0
     b4c:	ldr	x0, [sp, #688]
     b50:	str	x1, [x0, #16]
     b54:	ldr	x0, [sp, #688]
     b58:	ldr	x0, [x0, #16]
     b5c:	cmp	x0, #0x0
     b60:	b.eq	1824 <grub_mod_init-0x484>  // b.none
     b64:	ldr	x0, [sp, #712]
     b68:	add	x0, x0, #0x2
     b6c:	lsl	x0, x0, #1
     b70:	ldr	x1, [sp, #680]
     b74:	lsl	x1, x1, #1
     b78:	add	x0, x0, x1
     b7c:	add	x0, x0, #0x2
     b80:	bl	0 <grub_malloc>
     b84:	mov	x1, x0
     b88:	ldr	x0, [sp, #688]
     b8c:	str	x1, [x0]
     b90:	ldr	x0, [sp, #688]
     b94:	ldr	x0, [x0]
     b98:	cmp	x0, #0x0
     b9c:	b.eq	182c <grub_mod_init-0x47c>  // b.none
     ba0:	ldr	x0, [sp, #688]
     ba4:	ldr	x3, [x0]
     ba8:	mov	x2, #0x4                   	// #4
     bac:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     bb0:	add	x0, x0, #0x0
     bb4:	ldr	x1, [x0]
     bb8:	mov	x0, x3
     bbc:	bl	0 <grub_mod_init-0x1ca8>
     bc0:	ldr	x0, [sp, #688]
     bc4:	ldr	x0, [x0]
     bc8:	add	x0, x0, #0x4
     bcc:	str	x0, [sp, #816]
     bd0:	ldr	x0, [sp, #704]
     bd4:	str	x0, [sp, #824]
     bd8:	b	c24 <grub_mod_init-0x1084>
     bdc:	ldr	x0, [sp, #816]
     be0:	add	x1, x0, #0x1
     be4:	str	x1, [sp, #816]
     be8:	ldr	x1, [sp, #824]
     bec:	ldrb	w1, [x1]
     bf0:	strb	w1, [x0]
     bf4:	ldr	x0, [sp, #824]
     bf8:	ldrb	w0, [x0]
     bfc:	cmp	w0, #0x2d
     c00:	b.ne	c18 <grub_mod_init-0x1090>  // b.any
     c04:	ldr	x0, [sp, #816]
     c08:	add	x1, x0, #0x1
     c0c:	str	x1, [sp, #816]
     c10:	mov	w1, #0x2d                  	// #45
     c14:	strb	w1, [x0]
     c18:	ldr	x0, [sp, #824]
     c1c:	add	x0, x0, #0x1
     c20:	str	x0, [sp, #824]
     c24:	ldr	x1, [sp, #704]
     c28:	ldr	x0, [sp, #712]
     c2c:	add	x0, x1, x0
     c30:	ldr	x1, [sp, #824]
     c34:	cmp	x1, x0
     c38:	b.cc	bdc <grub_mod_init-0x10cc>  // b.lo, b.ul, b.last
     c3c:	ldr	x0, [sp, #816]
     c40:	add	x1, x0, #0x1
     c44:	str	x1, [sp, #816]
     c48:	mov	w1, #0x2d                  	// #45
     c4c:	strb	w1, [x0]
     c50:	ldr	x0, [sp, #48]
     c54:	str	x0, [sp, #824]
     c58:	b	ca4 <grub_mod_init-0x1004>
     c5c:	ldr	x0, [sp, #816]
     c60:	add	x1, x0, #0x1
     c64:	str	x1, [sp, #816]
     c68:	ldr	x1, [sp, #824]
     c6c:	ldrb	w1, [x1]
     c70:	strb	w1, [x0]
     c74:	ldr	x0, [sp, #824]
     c78:	ldrb	w0, [x0]
     c7c:	cmp	w0, #0x2d
     c80:	b.ne	c98 <grub_mod_init-0x1010>  // b.any
     c84:	ldr	x0, [sp, #816]
     c88:	add	x1, x0, #0x1
     c8c:	str	x1, [sp, #816]
     c90:	mov	w1, #0x2d                  	// #45
     c94:	strb	w1, [x0]
     c98:	ldr	x0, [sp, #824]
     c9c:	add	x0, x0, #0x1
     ca0:	str	x0, [sp, #824]
     ca4:	ldr	x1, [sp, #48]
     ca8:	ldr	x0, [sp, #680]
     cac:	add	x0, x1, x0
     cb0:	ldr	x1, [sp, #824]
     cb4:	cmp	x1, x0
     cb8:	b.cc	c5c <grub_mod_init-0x104c>  // b.lo, b.ul, b.last
     cbc:	ldr	x0, [sp, #816]
     cc0:	add	x1, x0, #0x1
     cc4:	str	x1, [sp, #816]
     cc8:	strb	wzr, [x0]
     ccc:	mov	x0, #0x54                  	// #84
     cd0:	bl	0 <grub_malloc>
     cd4:	mov	x1, x0
     cd8:	ldr	x0, [sp, #688]
     cdc:	str	x1, [x0, #8]
     ce0:	ldr	x0, [sp, #688]
     ce4:	ldr	x0, [x0, #8]
     ce8:	cmp	x0, #0x0
     cec:	b.eq	1834 <grub_mod_init-0x474>  // b.none
     cf0:	ldr	x0, [sp, #688]
     cf4:	ldr	x3, [x0, #8]
     cf8:	mov	x2, #0x6                   	// #6
     cfc:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     d00:	add	x0, x0, #0x0
     d04:	ldr	x1, [x0]
     d08:	mov	x0, x3
     d0c:	bl	0 <grub_mod_init-0x1ca8>
     d10:	ldr	x0, [sp, #688]
     d14:	ldr	x0, [x0, #8]
     d18:	add	x0, x0, #0x6
     d1c:	add	x1, sp, #0x60
     d20:	mov	x2, #0x26                  	// #38
     d24:	bl	0 <grub_mod_init-0x1ca8>
     d28:	ldr	x0, [sp, #688]
     d2c:	ldr	x0, [x0, #8]
     d30:	add	x0, x0, #0x2c
     d34:	mov	w1, #0x2f                  	// #47
     d38:	strb	w1, [x0]
     d3c:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     d40:	add	x0, x0, #0x0
     d44:	ldr	x1, [x0]
     d48:	ldr	x0, [sp, #872]
     d4c:	bl	2c <grub_mod_init-0x1c7c>
     d50:	str	x0, [sp, #48]
     d54:	ldr	x0, [sp, #48]
     d58:	cmp	x0, #0x0
     d5c:	b.eq	183c <grub_mod_init-0x46c>  // b.none
     d60:	ldr	x0, [sp, #48]
     d64:	add	x0, x0, #0x6
     d68:	str	x0, [sp, #48]
     d6c:	ldr	x0, [sp, #688]
     d70:	ldr	x0, [x0, #8]
     d74:	add	x0, x0, #0x2d
     d78:	ldr	x1, [sp, #48]
     d7c:	mov	x2, #0x26                  	// #38
     d80:	bl	0 <grub_mod_init-0x1ca8>
     d84:	ldr	x0, [sp, #688]
     d88:	ldr	x0, [x0, #8]
     d8c:	add	x0, x0, #0x53
     d90:	strb	wzr, [x0]
     d94:	ldr	x0, [sp, #688]
     d98:	str	xzr, [x0, #40]
     d9c:	ldr	x3, [sp, #48]
     da0:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     da4:	add	x0, x0, #0x0
     da8:	ldr	x2, [x0]
     dac:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     db0:	add	x0, x0, #0x0
     db4:	ldr	x1, [x0]
     db8:	mov	x0, x3
     dbc:	bl	240 <grub_mod_init-0x1a68>
     dc0:	mov	w1, w0
     dc4:	ldr	x0, [sp, #688]
     dc8:	str	w1, [x0, #56]
     dcc:	ldr	x3, [sp, #48]
     dd0:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     dd4:	add	x0, x0, #0x0
     dd8:	ldr	x2, [x0]
     ddc:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     de0:	add	x0, x0, #0x0
     de4:	ldr	x1, [x0]
     de8:	mov	x0, x3
     dec:	bl	240 <grub_mod_init-0x1a68>
     df0:	str	w0, [sp, #676]
     df4:	add	x2, sp, #0x30
     df8:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     dfc:	add	x0, x0, #0x0
     e00:	ldr	x1, [x0]
     e04:	mov	x0, x2
     e08:	bl	1c0 <grub_mod_init-0x1ae8>
     e0c:	mov	w1, w0
     e10:	ldr	x0, [sp, #688]
     e14:	str	w1, [x0, #28]
     e18:	ldr	x0, [sp, #48]
     e1c:	cmp	x0, #0x0
     e20:	b.eq	1844 <grub_mod_init-0x464>  // b.none
     e24:	ldr	x0, [sp, #688]
     e28:	ldr	w0, [x0, #28]
     e2c:	mov	w1, w0
     e30:	mov	x0, x1
     e34:	lsl	x0, x0, #3
     e38:	sub	x0, x0, x1
     e3c:	lsl	x0, x0, #3
     e40:	bl	0 <grub_zalloc>
     e44:	mov	x1, x0
     e48:	ldr	x0, [sp, #688]
     e4c:	str	x1, [x0, #64]
     e50:	ldr	x0, [sp, #688]
     e54:	ldr	x0, [x0, #64]
     e58:	str	x0, [sp, #832]
     e5c:	str	wzr, [sp, #868]
     e60:	b	178c <grub_mod_init-0x51c>
     e64:	ldr	x2, [sp, #48]
     e68:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     e6c:	add	x0, x0, #0x0
     e70:	ldr	x1, [x0]
     e74:	mov	x0, x2
     e78:	bl	2c <grub_mod_init-0x1c7c>
     e7c:	str	x0, [sp, #48]
     e80:	ldr	x0, [sp, #48]
     e84:	cmp	x0, #0x0
     e88:	b.eq	174c <grub_mod_init-0x55c>  // b.none
     e8c:	add	x2, sp, #0x30
     e90:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     e94:	add	x0, x0, #0x0
     e98:	ldr	x1, [x0]
     e9c:	mov	x0, x2
     ea0:	bl	1c0 <grub_mod_init-0x1ae8>
     ea4:	mov	x1, x0
     ea8:	ldr	x0, [sp, #832]
     eac:	str	x1, [x0]
     eb0:	ldr	x0, [sp, #48]
     eb4:	cmp	x0, #0x0
     eb8:	b.eq	1754 <grub_mod_init-0x554>  // b.none
     ebc:	add	x2, sp, #0x30
     ec0:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     ec4:	add	x0, x0, #0x0
     ec8:	ldr	x1, [x0]
     ecc:	mov	x0, x2
     ed0:	bl	1c0 <grub_mod_init-0x1ae8>
     ed4:	mov	x1, x0
     ed8:	ldr	x0, [sp, #832]
     edc:	str	x1, [x0, #8]
     ee0:	ldr	x0, [sp, #48]
     ee4:	cmp	x0, #0x0
     ee8:	b.eq	175c <grub_mod_init-0x54c>  // b.none
     eec:	ldr	x2, [sp, #48]
     ef0:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     ef4:	add	x0, x0, #0x0
     ef8:	ldr	x1, [x0]
     efc:	mov	x0, x2
     f00:	bl	2c <grub_mod_init-0x1c7c>
     f04:	str	x0, [sp, #48]
     f08:	ldr	x0, [sp, #48]
     f0c:	cmp	x0, #0x0
     f10:	b.eq	1764 <grub_mod_init-0x544>  // b.none
     f14:	ldr	x0, [sp, #48]
     f18:	add	x0, x0, #0x8
     f1c:	str	x0, [sp, #48]
     f20:	ldr	x0, [sp, #688]
     f24:	ldr	x1, [x0, #40]
     f28:	ldr	x0, [sp, #832]
     f2c:	ldr	x2, [x0, #8]
     f30:	ldr	x0, [sp, #856]
     f34:	ldr	x0, [x0, #24]
     f38:	mul	x0, x2, x0
     f3c:	add	x1, x1, x0
     f40:	ldr	x0, [sp, #688]
     f44:	str	x1, [x0, #40]
     f48:	ldr	x3, [sp, #48]
     f4c:	mov	x2, #0x8                   	// #8
     f50:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     f54:	add	x0, x0, #0x0
     f58:	ldr	x1, [x0]
     f5c:	mov	x0, x3
     f60:	bl	0 <grub_memcmp>
     f64:	cmp	w0, #0x0
     f68:	b.ne	1178 <grub_mod_init-0xb30>  // b.any
     f6c:	ldr	x0, [sp, #832]
     f70:	str	wzr, [x0, #16]
     f74:	add	x2, sp, #0x30
     f78:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     f7c:	add	x0, x0, #0x0
     f80:	ldr	x1, [x0]
     f84:	mov	x0, x2
     f88:	bl	1c0 <grub_mod_init-0x1ae8>
     f8c:	mov	w1, w0
     f90:	ldr	x0, [sp, #832]
     f94:	str	w1, [x0, #32]
     f98:	ldr	x0, [sp, #48]
     f9c:	cmp	x0, #0x0
     fa0:	b.eq	176c <grub_mod_init-0x53c>  // b.none
     fa4:	ldr	x0, [sp, #832]
     fa8:	ldr	w0, [x0, #32]
     fac:	cmp	w0, #0x1
     fb0:	b.eq	fd8 <grub_mod_init-0xcd0>  // b.none
     fb4:	add	x2, sp, #0x30
     fb8:	adrp	x0, 0 <grub_mod_init-0x1ca8>
     fbc:	add	x0, x0, #0x0
     fc0:	ldr	x1, [x0]
     fc4:	mov	x0, x2
     fc8:	bl	1c0 <grub_mod_init-0x1ae8>
     fcc:	mov	w1, w0
     fd0:	ldr	x0, [sp, #832]
     fd4:	str	w1, [x0, #48]
     fd8:	ldr	x0, [sp, #832]
     fdc:	ldr	w0, [x0, #32]
     fe0:	mov	w0, w0
     fe4:	lsl	x0, x0, #5
     fe8:	bl	0 <grub_zalloc>
     fec:	mov	x1, x0
     ff0:	ldr	x0, [sp, #832]
     ff4:	str	x1, [x0, #40]
     ff8:	ldr	x0, [sp, #832]
     ffc:	ldr	x0, [x0, #40]
    1000:	str	x0, [sp, #808]
    1004:	ldr	x2, [sp, #48]
    1008:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    100c:	add	x0, x0, #0x0
    1010:	ldr	x1, [x0]
    1014:	mov	x0, x2
    1018:	bl	2c <grub_mod_init-0x1c7c>
    101c:	str	x0, [sp, #48]
    1020:	ldr	x0, [sp, #48]
    1024:	cmp	x0, #0x0
    1028:	b.eq	1710 <grub_mod_init-0x598>  // b.none
    102c:	ldr	x0, [sp, #48]
    1030:	add	x0, x0, #0xb
    1034:	str	x0, [sp, #48]
    1038:	str	wzr, [sp, #864]
    103c:	b	1160 <grub_mod_init-0xb48>
    1040:	ldr	x0, [sp, #48]
    1044:	mov	w1, #0x22                  	// #34
    1048:	bl	0 <grub_strchr>
    104c:	str	x0, [sp, #48]
    1050:	ldr	x0, [sp, #48]
    1054:	cmp	x0, #0x0
    1058:	b.eq	1148 <grub_mod_init-0xb60>  // b.none
    105c:	ldr	x0, [sp, #48]
    1060:	add	x0, x0, #0x1
    1064:	str	x0, [sp, #48]
    1068:	ldr	x0, [sp, #48]
    106c:	str	x0, [sp, #872]
    1070:	b	1080 <grub_mod_init-0xc28>
    1074:	ldr	x0, [sp, #872]
    1078:	add	x0, x0, #0x1
    107c:	str	x0, [sp, #872]
    1080:	ldr	x0, [sp, #872]
    1084:	ldrb	w0, [x0]
    1088:	cmp	w0, #0x22
    108c:	b.ne	1074 <grub_mod_init-0xc34>  // b.any
    1090:	ldr	x0, [sp, #48]
    1094:	ldr	x1, [sp, #872]
    1098:	sub	x0, x1, x0
    109c:	str	x0, [sp, #680]
    10a0:	ldr	x0, [sp, #680]
    10a4:	add	x0, x0, #0x1
    10a8:	bl	0 <grub_malloc>
    10ac:	mov	x1, x0
    10b0:	ldr	x0, [sp, #808]
    10b4:	str	x1, [x0, #8]
    10b8:	ldr	x0, [sp, #808]
    10bc:	ldr	x0, [x0, #8]
    10c0:	cmp	x0, #0x0
    10c4:	b.eq	1718 <grub_mod_init-0x590>  // b.none
    10c8:	ldr	x0, [sp, #808]
    10cc:	ldr	x0, [x0, #8]
    10d0:	ldr	x1, [sp, #48]
    10d4:	ldr	x2, [sp, #680]
    10d8:	bl	0 <grub_mod_init-0x1ca8>
    10dc:	ldr	x0, [sp, #808]
    10e0:	ldr	x1, [x0, #8]
    10e4:	ldr	x0, [sp, #680]
    10e8:	add	x0, x1, x0
    10ec:	strb	wzr, [x0]
    10f0:	ldr	x0, [sp, #872]
    10f4:	add	x0, x0, #0x1
    10f8:	str	x0, [sp, #48]
    10fc:	add	x2, sp, #0x30
    1100:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1104:	add	x0, x0, #0x0
    1108:	ldr	x1, [x0]
    110c:	mov	x0, x2
    1110:	bl	1c0 <grub_mod_init-0x1ae8>
    1114:	mov	x1, x0
    1118:	ldr	x0, [sp, #856]
    111c:	ldr	x0, [x0, #24]
    1120:	mul	x1, x1, x0
    1124:	ldr	x0, [sp, #808]
    1128:	str	x1, [x0]
    112c:	ldr	x0, [sp, #48]
    1130:	cmp	x0, #0x0
    1134:	b.eq	1150 <grub_mod_init-0xb58>  // b.none
    1138:	ldr	x0, [sp, #808]
    113c:	add	x0, x0, #0x20
    1140:	str	x0, [sp, #808]
    1144:	b	1154 <grub_mod_init-0xb54>
    1148:	nop
    114c:	b	1154 <grub_mod_init-0xb54>
    1150:	nop
    1154:	ldr	w0, [sp, #864]
    1158:	add	w0, w0, #0x1
    115c:	str	w0, [sp, #864]
    1160:	ldr	x0, [sp, #832]
    1164:	ldr	w0, [x0, #32]
    1168:	ldr	w1, [sp, #864]
    116c:	cmp	w1, w0
    1170:	b.cc	1040 <grub_mod_init-0xc68>  // b.lo, b.ul, b.last
    1174:	b	16f4 <grub_mod_init-0x5b4>
    1178:	ldr	x3, [sp, #48]
    117c:	mov	x2, #0x7                   	// #7
    1180:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1184:	add	x0, x0, #0x0
    1188:	ldr	x1, [x0]
    118c:	mov	x0, x3
    1190:	bl	0 <grub_memcmp>
    1194:	cmp	w0, #0x0
    1198:	b.ne	1344 <grub_mod_init-0x964>  // b.any
    119c:	ldr	x0, [sp, #832]
    11a0:	mov	w1, #0x1                   	// #1
    11a4:	str	w1, [x0, #16]
    11a8:	add	x2, sp, #0x30
    11ac:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    11b0:	add	x0, x0, #0x0
    11b4:	ldr	x1, [x0]
    11b8:	mov	x0, x2
    11bc:	bl	1c0 <grub_mod_init-0x1ae8>
    11c0:	mov	w1, w0
    11c4:	ldr	x0, [sp, #832]
    11c8:	str	w1, [x0, #32]
    11cc:	ldr	x0, [sp, #48]
    11d0:	cmp	x0, #0x0
    11d4:	b.eq	1774 <grub_mod_init-0x534>  // b.none
    11d8:	ldr	x0, [sp, #832]
    11dc:	ldr	w0, [x0, #32]
    11e0:	mov	w0, w0
    11e4:	lsl	x0, x0, #5
    11e8:	bl	0 <grub_zalloc>
    11ec:	mov	x1, x0
    11f0:	ldr	x0, [sp, #832]
    11f4:	str	x1, [x0, #40]
    11f8:	ldr	x2, [sp, #48]
    11fc:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1200:	add	x0, x0, #0x0
    1204:	ldr	x1, [x0]
    1208:	mov	x0, x2
    120c:	bl	2c <grub_mod_init-0x1c7c>
    1210:	str	x0, [sp, #48]
    1214:	ldr	x0, [sp, #48]
    1218:	cmp	x0, #0x0
    121c:	b.eq	1720 <grub_mod_init-0x588>  // b.none
    1220:	ldr	x0, [sp, #48]
    1224:	add	x0, x0, #0xb
    1228:	str	x0, [sp, #48]
    122c:	str	wzr, [sp, #864]
    1230:	b	1314 <grub_mod_init-0x994>
    1234:	ldr	x0, [sp, #48]
    1238:	mov	w1, #0x22                  	// #34
    123c:	bl	0 <grub_strchr>
    1240:	str	x0, [sp, #48]
    1244:	ldr	x0, [sp, #48]
    1248:	cmp	x0, #0x0
    124c:	b.eq	1304 <grub_mod_init-0x9a4>  // b.none
    1250:	ldr	x0, [sp, #48]
    1254:	add	x0, x0, #0x1
    1258:	str	x0, [sp, #48]
    125c:	ldr	x0, [sp, #48]
    1260:	str	x0, [sp, #872]
    1264:	b	1274 <grub_mod_init-0xa34>
    1268:	ldr	x0, [sp, #872]
    126c:	add	x0, x0, #0x1
    1270:	str	x0, [sp, #872]
    1274:	ldr	x0, [sp, #872]
    1278:	ldrb	w0, [x0]
    127c:	cmp	w0, #0x22
    1280:	b.ne	1268 <grub_mod_init-0xa40>  // b.any
    1284:	ldr	x0, [sp, #48]
    1288:	ldr	x1, [sp, #872]
    128c:	sub	x0, x1, x0
    1290:	str	x0, [sp, #680]
    1294:	ldr	x0, [sp, #680]
    1298:	add	x0, x0, #0x1
    129c:	bl	0 <grub_malloc>
    12a0:	str	x0, [sp, #648]
    12a4:	ldr	x0, [sp, #648]
    12a8:	cmp	x0, #0x0
    12ac:	b.eq	1728 <grub_mod_init-0x580>  // b.none
    12b0:	ldr	x0, [sp, #48]
    12b4:	ldr	x1, [sp, #680]
    12b8:	mov	x2, x1
    12bc:	mov	x1, x0
    12c0:	ldr	x0, [sp, #648]
    12c4:	bl	0 <grub_mod_init-0x1ca8>
    12c8:	ldr	x0, [sp, #680]
    12cc:	ldr	x1, [sp, #648]
    12d0:	add	x0, x1, x0
    12d4:	strb	wzr, [x0]
    12d8:	ldr	x0, [sp, #832]
    12dc:	ldr	x1, [x0, #40]
    12e0:	ldr	w0, [sp, #864]
    12e4:	lsl	x0, x0, #5
    12e8:	add	x0, x1, x0
    12ec:	ldr	x1, [sp, #648]
    12f0:	str	x1, [x0, #8]
    12f4:	ldr	x0, [sp, #872]
    12f8:	add	x0, x0, #0x1
    12fc:	str	x0, [sp, #48]
    1300:	b	1308 <grub_mod_init-0x9a0>
    1304:	nop
    1308:	ldr	w0, [sp, #864]
    130c:	add	w0, w0, #0x1
    1310:	str	w0, [sp, #864]
    1314:	ldr	x0, [sp, #832]
    1318:	ldr	w0, [x0, #32]
    131c:	ldr	w1, [sp, #864]
    1320:	cmp	w1, w0
    1324:	b.cc	1234 <grub_mod_init-0xa74>  // b.lo, b.ul, b.last
    1328:	ldr	w0, [sp, #676]
    132c:	cmp	w0, #0x0
    1330:	b.eq	16f4 <grub_mod_init-0x5b4>  // b.none
    1334:	ldr	x0, [sp, #832]
    1338:	mov	w1, #0x1                   	// #1
    133c:	str	w1, [x0, #32]
    1340:	b	16f4 <grub_mod_init-0x5b4>
    1344:	ldr	x3, [sp, #48]
    1348:	mov	x2, #0x4                   	// #4
    134c:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1350:	add	x0, x0, #0x0
    1354:	ldr	x1, [x0]
    1358:	mov	x0, x3
    135c:	bl	0 <grub_memcmp>
    1360:	cmp	w0, #0x0
    1364:	b.ne	16e8 <grub_mod_init-0x5c0>  // b.any
    1368:	ldr	x0, [sp, #48]
    136c:	add	x0, x0, #0x4
    1370:	ldrb	w0, [x0]
    1374:	cmp	w0, #0x33
    1378:	b.ls	1390 <grub_mod_init-0x918>  // b.plast
    137c:	ldr	x0, [sp, #48]
    1380:	add	x0, x0, #0x4
    1384:	ldrb	w0, [x0]
    1388:	cmp	w0, #0x36
    138c:	b.ls	13a4 <grub_mod_init-0x904>  // b.plast
    1390:	ldr	x0, [sp, #48]
    1394:	add	x0, x0, #0x4
    1398:	ldrb	w0, [x0]
    139c:	cmp	w0, #0x31
    13a0:	b.ne	16e8 <grub_mod_init-0x5c0>  // b.any
    13a4:	ldr	x0, [sp, #48]
    13a8:	add	x0, x0, #0x5
    13ac:	ldrb	w0, [x0]
    13b0:	cmp	w0, #0x22
    13b4:	b.ne	16e8 <grub_mod_init-0x5c0>  // b.any
    13b8:	ldr	x0, [sp, #48]
    13bc:	add	x0, x0, #0x4
    13c0:	ldrb	w0, [x0]
    13c4:	cmp	w0, #0x36
    13c8:	b.eq	143c <grub_mod_init-0x86c>  // b.none
    13cc:	cmp	w0, #0x36
    13d0:	b.gt	1458 <grub_mod_init-0x850>
    13d4:	cmp	w0, #0x35
    13d8:	b.eq	1420 <grub_mod_init-0x888>  // b.none
    13dc:	cmp	w0, #0x35
    13e0:	b.gt	1458 <grub_mod_init-0x850>
    13e4:	cmp	w0, #0x31
    13e8:	b.eq	13f8 <grub_mod_init-0x8b0>  // b.none
    13ec:	cmp	w0, #0x34
    13f0:	b.eq	1408 <grub_mod_init-0x8a0>  // b.none
    13f4:	b	1458 <grub_mod_init-0x850>
    13f8:	ldr	x0, [sp, #832]
    13fc:	mov	w1, #0x1                   	// #1
    1400:	str	w1, [x0, #16]
    1404:	b	1458 <grub_mod_init-0x850>
    1408:	ldr	x0, [sp, #832]
    140c:	mov	w1, #0x4                   	// #4
    1410:	str	w1, [x0, #16]
    1414:	ldr	x0, [sp, #832]
    1418:	str	wzr, [x0, #20]
    141c:	b	1458 <grub_mod_init-0x850>
    1420:	ldr	x0, [sp, #832]
    1424:	mov	w1, #0x5                   	// #5
    1428:	str	w1, [x0, #16]
    142c:	ldr	x0, [sp, #832]
    1430:	mov	w1, #0x2                   	// #2
    1434:	str	w1, [x0, #20]
    1438:	b	1458 <grub_mod_init-0x850>
    143c:	ldr	x0, [sp, #832]
    1440:	mov	w1, #0x6                   	// #6
    1444:	str	w1, [x0, #16]
    1448:	ldr	x0, [sp, #832]
    144c:	mov	w1, #0x5                   	// #5
    1450:	str	w1, [x0, #20]
    1454:	nop
    1458:	add	x2, sp, #0x30
    145c:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1460:	add	x0, x0, #0x0
    1464:	ldr	x1, [x0]
    1468:	mov	x0, x2
    146c:	bl	1c0 <grub_mod_init-0x1ae8>
    1470:	mov	w1, w0
    1474:	ldr	x0, [sp, #832]
    1478:	str	w1, [x0, #32]
    147c:	ldr	x0, [sp, #48]
    1480:	cmp	x0, #0x0
    1484:	b.eq	177c <grub_mod_init-0x52c>  // b.none
    1488:	ldr	x0, [sp, #832]
    148c:	ldr	w0, [x0, #16]
    1490:	cmp	w0, #0x1
    1494:	b.eq	14c8 <grub_mod_init-0x7e0>  // b.none
    1498:	add	x2, sp, #0x30
    149c:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    14a0:	add	x0, x0, #0x0
    14a4:	ldr	x1, [x0]
    14a8:	mov	x0, x2
    14ac:	bl	1c0 <grub_mod_init-0x1ae8>
    14b0:	mov	w1, w0
    14b4:	ldr	x0, [sp, #832]
    14b8:	str	w1, [x0, #48]
    14bc:	ldr	x0, [sp, #48]
    14c0:	cmp	x0, #0x0
    14c4:	b.eq	1784 <grub_mod_init-0x524>  // b.none
    14c8:	ldr	x0, [sp, #832]
    14cc:	ldr	w0, [x0, #32]
    14d0:	mov	w0, w0
    14d4:	lsl	x0, x0, #5
    14d8:	bl	0 <grub_zalloc>
    14dc:	mov	x1, x0
    14e0:	ldr	x0, [sp, #832]
    14e4:	str	x1, [x0, #40]
    14e8:	ldr	x2, [sp, #48]
    14ec:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    14f0:	add	x0, x0, #0x0
    14f4:	ldr	x1, [x0]
    14f8:	mov	x0, x2
    14fc:	bl	2c <grub_mod_init-0x1c7c>
    1500:	str	x0, [sp, #48]
    1504:	ldr	x0, [sp, #48]
    1508:	cmp	x0, #0x0
    150c:	b.eq	1730 <grub_mod_init-0x578>  // b.none
    1510:	ldr	x0, [sp, #48]
    1514:	add	x0, x0, #0x9
    1518:	str	x0, [sp, #48]
    151c:	str	wzr, [sp, #864]
    1520:	b	1654 <grub_mod_init-0x654>
    1524:	ldr	x0, [sp, #48]
    1528:	mov	w1, #0x22                  	// #34
    152c:	bl	0 <grub_strchr>
    1530:	str	x0, [sp, #48]
    1534:	ldr	x0, [sp, #48]
    1538:	cmp	x0, #0x0
    153c:	b.eq	1554 <grub_mod_init-0x754>  // b.none
    1540:	ldr	x0, [sp, #48]
    1544:	add	x0, x0, #0x1
    1548:	mov	w1, #0x22                  	// #34
    154c:	bl	0 <grub_strchr>
    1550:	b	1558 <grub_mod_init-0x750>
    1554:	mov	x0, #0x0                   	// #0
    1558:	str	x0, [sp, #48]
    155c:	ldr	x0, [sp, #48]
    1560:	cmp	x0, #0x0
    1564:	b.eq	157c <grub_mod_init-0x72c>  // b.none
    1568:	ldr	x0, [sp, #48]
    156c:	add	x0, x0, #0x1
    1570:	mov	w1, #0x22                  	// #34
    1574:	bl	0 <grub_strchr>
    1578:	b	1580 <grub_mod_init-0x728>
    157c:	mov	x0, #0x0                   	// #0
    1580:	str	x0, [sp, #48]
    1584:	ldr	x0, [sp, #48]
    1588:	cmp	x0, #0x0
    158c:	b.eq	1644 <grub_mod_init-0x664>  // b.none
    1590:	ldr	x0, [sp, #48]
    1594:	add	x0, x0, #0x1
    1598:	str	x0, [sp, #48]
    159c:	ldr	x0, [sp, #48]
    15a0:	str	x0, [sp, #872]
    15a4:	b	15b4 <grub_mod_init-0x6f4>
    15a8:	ldr	x0, [sp, #872]
    15ac:	add	x0, x0, #0x1
    15b0:	str	x0, [sp, #872]
    15b4:	ldr	x0, [sp, #872]
    15b8:	ldrb	w0, [x0]
    15bc:	cmp	w0, #0x22
    15c0:	b.ne	15a8 <grub_mod_init-0x700>  // b.any
    15c4:	ldr	x0, [sp, #48]
    15c8:	ldr	x1, [sp, #872]
    15cc:	sub	x0, x1, x0
    15d0:	str	x0, [sp, #680]
    15d4:	ldr	x0, [sp, #680]
    15d8:	add	x0, x0, #0x1
    15dc:	bl	0 <grub_malloc>
    15e0:	str	x0, [sp, #656]
    15e4:	ldr	x0, [sp, #656]
    15e8:	cmp	x0, #0x0
    15ec:	b.eq	1738 <grub_mod_init-0x570>  // b.none
    15f0:	ldr	x0, [sp, #48]
    15f4:	ldr	x1, [sp, #680]
    15f8:	mov	x2, x1
    15fc:	mov	x1, x0
    1600:	ldr	x0, [sp, #656]
    1604:	bl	0 <grub_mod_init-0x1ca8>
    1608:	ldr	x0, [sp, #680]
    160c:	ldr	x1, [sp, #656]
    1610:	add	x0, x1, x0
    1614:	strb	wzr, [x0]
    1618:	ldr	x0, [sp, #832]
    161c:	ldr	x1, [x0, #40]
    1620:	ldr	w0, [sp, #864]
    1624:	lsl	x0, x0, #5
    1628:	add	x0, x1, x0
    162c:	ldr	x1, [sp, #656]
    1630:	str	x1, [x0, #8]
    1634:	ldr	x0, [sp, #872]
    1638:	add	x0, x0, #0x1
    163c:	str	x0, [sp, #48]
    1640:	b	1648 <grub_mod_init-0x660>
    1644:	nop
    1648:	ldr	w0, [sp, #864]
    164c:	add	w0, w0, #0x1
    1650:	str	w0, [sp, #864]
    1654:	ldr	x0, [sp, #832]
    1658:	ldr	w0, [x0, #32]
    165c:	ldr	w1, [sp, #864]
    1660:	cmp	w1, w0
    1664:	b.cc	1524 <grub_mod_init-0x784>  // b.lo, b.ul, b.last
    1668:	ldr	x0, [sp, #832]
    166c:	ldr	w0, [x0, #16]
    1670:	cmp	w0, #0x4
    1674:	b.ne	16f4 <grub_mod_init-0x5b4>  // b.any
    1678:	ldr	x0, [sp, #832]
    167c:	ldr	x0, [x0, #40]
    1680:	ldr	x0, [x0, #8]
    1684:	str	x0, [sp, #664]
    1688:	ldr	x0, [sp, #832]
    168c:	ldr	x3, [x0, #40]
    1690:	ldr	x0, [sp, #832]
    1694:	ldr	x0, [x0, #40]
    1698:	add	x1, x0, #0x20
    169c:	ldr	x0, [sp, #832]
    16a0:	ldr	w0, [x0, #32]
    16a4:	sub	w0, w0, #0x1
    16a8:	mov	w0, w0
    16ac:	lsl	x0, x0, #5
    16b0:	mov	x2, x0
    16b4:	mov	x0, x3
    16b8:	bl	0 <grub_memmove>
    16bc:	ldr	x0, [sp, #832]
    16c0:	ldr	x1, [x0, #40]
    16c4:	ldr	x0, [sp, #832]
    16c8:	ldr	w0, [x0, #32]
    16cc:	sub	w0, w0, #0x1
    16d0:	mov	w0, w0
    16d4:	lsl	x0, x0, #5
    16d8:	add	x0, x1, x0
    16dc:	ldr	x1, [sp, #664]
    16e0:	str	x1, [x0, #8]
    16e4:	b	16f4 <grub_mod_init-0x5b4>
    16e8:	mov	w0, #0x1                   	// #1
    16ec:	str	w0, [sp, #844]
    16f0:	b	17a0 <grub_mod_init-0x508>
    16f4:	ldr	x0, [sp, #832]
    16f8:	add	x0, x0, #0x38
    16fc:	str	x0, [sp, #832]
    1700:	ldr	w0, [sp, #868]
    1704:	add	w0, w0, #0x1
    1708:	str	w0, [sp, #868]
    170c:	b	178c <grub_mod_init-0x51c>
    1710:	nop
    1714:	b	173c <grub_mod_init-0x56c>
    1718:	nop
    171c:	b	173c <grub_mod_init-0x56c>
    1720:	nop
    1724:	b	173c <grub_mod_init-0x56c>
    1728:	nop
    172c:	b	173c <grub_mod_init-0x56c>
    1730:	nop
    1734:	b	173c <grub_mod_init-0x56c>
    1738:	nop
    173c:	ldr	x0, [sp, #832]
    1740:	ldr	x0, [x0, #40]
    1744:	bl	0 <grub_free>
    1748:	b	1b3c <grub_mod_init-0x16c>
    174c:	nop
    1750:	b	1b3c <grub_mod_init-0x16c>
    1754:	nop
    1758:	b	1b3c <grub_mod_init-0x16c>
    175c:	nop
    1760:	b	1b3c <grub_mod_init-0x16c>
    1764:	nop
    1768:	b	1b3c <grub_mod_init-0x16c>
    176c:	nop
    1770:	b	1b3c <grub_mod_init-0x16c>
    1774:	nop
    1778:	b	1b3c <grub_mod_init-0x16c>
    177c:	nop
    1780:	b	1b3c <grub_mod_init-0x16c>
    1784:	nop
    1788:	b	1b3c <grub_mod_init-0x16c>
    178c:	ldr	x0, [sp, #688]
    1790:	ldr	w0, [x0, #28]
    1794:	ldr	w1, [sp, #868]
    1798:	cmp	w1, w0
    179c:	b.cc	e64 <grub_mod_init-0xe44>  // b.lo, b.ul, b.last
    17a0:	ldr	x0, [sp, #48]
    17a4:	cmp	x0, #0x0
    17a8:	b.eq	17bc <grub_mod_init-0x4ec>  // b.none
    17ac:	ldr	x0, [sp, #48]
    17b0:	mov	w1, #0x7d                  	// #125
    17b4:	bl	0 <grub_strchr>
    17b8:	str	x0, [sp, #48]
    17bc:	ldr	x0, [sp, #48]
    17c0:	cmp	x0, #0x0
    17c4:	b.eq	184c <grub_mod_init-0x45c>  // b.none
    17c8:	ldr	x0, [sp, #48]
    17cc:	add	x0, x0, #0x3
    17d0:	str	x0, [sp, #48]
    17d4:	ldr	w0, [sp, #844]
    17d8:	cmp	w0, #0x0
    17dc:	b.eq	17f8 <grub_mod_init-0x4b0>  // b.none
    17e0:	ldr	x0, [sp, #688]
    17e4:	ldr	x0, [x0, #16]
    17e8:	bl	0 <grub_free>
    17ec:	ldr	x0, [sp, #688]
    17f0:	bl	0 <grub_free>
    17f4:	b	1868 <grub_mod_init-0x440>
    17f8:	ldr	x0, [sp, #688]
    17fc:	ldr	x1, [sp, #856]
    1800:	str	x1, [x0, #72]
    1804:	ldr	x0, [sp, #856]
    1808:	ldr	x1, [x0, #40]
    180c:	ldr	x0, [sp, #688]
    1810:	str	x1, [x0, #80]
    1814:	ldr	x0, [sp, #856]
    1818:	ldr	x1, [sp, #688]
    181c:	str	x1, [x0, #40]
    1820:	b	1868 <grub_mod_init-0x440>
    1824:	nop
    1828:	b	1850 <grub_mod_init-0x458>
    182c:	nop
    1830:	b	1850 <grub_mod_init-0x458>
    1834:	nop
    1838:	b	1850 <grub_mod_init-0x458>
    183c:	nop
    1840:	b	1850 <grub_mod_init-0x458>
    1844:	nop
    1848:	b	1850 <grub_mod_init-0x458>
    184c:	nop
    1850:	ldr	x0, [sp, #688]
    1854:	ldr	x0, [x0, #16]
    1858:	bl	0 <grub_free>
    185c:	ldr	x0, [sp, #688]
    1860:	bl	0 <grub_free>
    1864:	b	1b3c <grub_mod_init-0x16c>
    1868:	b	ac0 <grub_mod_init-0x11e8>
    186c:	nop
    1870:	ldr	x0, [sp, #856]
    1874:	ldr	x0, [x0, #40]
    1878:	str	x0, [sp, #800]
    187c:	b	1aa8 <grub_mod_init-0x200>
    1880:	str	wzr, [sp, #868]
    1884:	b	1a88 <grub_mod_init-0x220>
    1888:	str	wzr, [sp, #864]
    188c:	b	1a4c <grub_mod_init-0x25c>
    1890:	ldr	x0, [sp, #856]
    1894:	ldr	x0, [x0, #32]
    1898:	cmp	x0, #0x0
    189c:	b.eq	1954 <grub_mod_init-0x354>  // b.none
    18a0:	ldr	x0, [sp, #856]
    18a4:	ldr	x0, [x0, #32]
    18a8:	str	x0, [sp, #848]
    18ac:	b	1948 <grub_mod_init-0x360>
    18b0:	ldr	x0, [sp, #848]
    18b4:	ldr	x3, [x0, #16]
    18b8:	ldr	x0, [sp, #800]
    18bc:	ldr	x2, [x0, #64]
    18c0:	ldr	w1, [sp, #868]
    18c4:	mov	x0, x1
    18c8:	lsl	x0, x0, #3
    18cc:	sub	x0, x0, x1
    18d0:	lsl	x0, x0, #3
    18d4:	add	x0, x2, x0
    18d8:	ldr	x1, [x0, #40]
    18dc:	ldr	w0, [sp, #864]
    18e0:	lsl	x0, x0, #5
    18e4:	add	x0, x1, x0
    18e8:	ldr	x0, [x0, #8]
    18ec:	mov	x1, x0
    18f0:	mov	x0, x3
    18f4:	bl	0 <grub_strcmp>
    18f8:	cmp	w0, #0x0
    18fc:	b.ne	193c <grub_mod_init-0x36c>  // b.any
    1900:	ldr	x0, [sp, #800]
    1904:	ldr	x2, [x0, #64]
    1908:	ldr	w1, [sp, #868]
    190c:	mov	x0, x1
    1910:	lsl	x0, x0, #3
    1914:	sub	x0, x0, x1
    1918:	lsl	x0, x0, #3
    191c:	add	x0, x2, x0
    1920:	ldr	x1, [x0, #40]
    1924:	ldr	w0, [sp, #864]
    1928:	lsl	x0, x0, #5
    192c:	add	x0, x1, x0
    1930:	ldr	x1, [sp, #848]
    1934:	str	x1, [x0, #16]
    1938:	b	1954 <grub_mod_init-0x354>
    193c:	ldr	x0, [sp, #848]
    1940:	ldr	x0, [x0, #56]
    1944:	str	x0, [sp, #848]
    1948:	ldr	x0, [sp, #848]
    194c:	cmp	x0, #0x0
    1950:	b.ne	18b0 <grub_mod_init-0x3f8>  // b.any
    1954:	ldr	x0, [sp, #800]
    1958:	ldr	x2, [x0, #64]
    195c:	ldr	w1, [sp, #868]
    1960:	mov	x0, x1
    1964:	lsl	x0, x0, #3
    1968:	sub	x0, x0, x1
    196c:	lsl	x0, x0, #3
    1970:	add	x0, x2, x0
    1974:	ldr	x1, [x0, #40]
    1978:	ldr	w0, [sp, #864]
    197c:	lsl	x0, x0, #5
    1980:	add	x0, x1, x0
    1984:	ldr	x0, [x0, #16]
    1988:	cmp	x0, #0x0
    198c:	b.ne	1a40 <grub_mod_init-0x268>  // b.any
    1990:	ldr	x0, [sp, #856]
    1994:	ldr	x0, [x0, #40]
    1998:	str	x0, [sp, #792]
    199c:	b	1a34 <grub_mod_init-0x274>
    19a0:	ldr	x0, [sp, #792]
    19a4:	ldr	x3, [x0, #16]
    19a8:	ldr	x0, [sp, #800]
    19ac:	ldr	x2, [x0, #64]
    19b0:	ldr	w1, [sp, #868]
    19b4:	mov	x0, x1
    19b8:	lsl	x0, x0, #3
    19bc:	sub	x0, x0, x1
    19c0:	lsl	x0, x0, #3
    19c4:	add	x0, x2, x0
    19c8:	ldr	x1, [x0, #40]
    19cc:	ldr	w0, [sp, #864]
    19d0:	lsl	x0, x0, #5
    19d4:	add	x0, x1, x0
    19d8:	ldr	x0, [x0, #8]
    19dc:	mov	x1, x0
    19e0:	mov	x0, x3
    19e4:	bl	0 <grub_strcmp>
    19e8:	cmp	w0, #0x0
    19ec:	b.ne	1a28 <grub_mod_init-0x280>  // b.any
    19f0:	ldr	x0, [sp, #800]
    19f4:	ldr	x2, [x0, #64]
    19f8:	ldr	w1, [sp, #868]
    19fc:	mov	x0, x1
    1a00:	lsl	x0, x0, #3
    1a04:	sub	x0, x0, x1
    1a08:	lsl	x0, x0, #3
    1a0c:	add	x0, x2, x0
    1a10:	ldr	x1, [x0, #40]
    1a14:	ldr	w0, [sp, #864]
    1a18:	lsl	x0, x0, #5
    1a1c:	add	x0, x1, x0
    1a20:	ldr	x1, [sp, #792]
    1a24:	str	x1, [x0, #24]
    1a28:	ldr	x0, [sp, #792]
    1a2c:	ldr	x0, [x0, #80]
    1a30:	str	x0, [sp, #792]
    1a34:	ldr	x0, [sp, #792]
    1a38:	cmp	x0, #0x0
    1a3c:	b.ne	19a0 <grub_mod_init-0x308>  // b.any
    1a40:	ldr	w0, [sp, #864]
    1a44:	add	w0, w0, #0x1
    1a48:	str	w0, [sp, #864]
    1a4c:	ldr	x0, [sp, #800]
    1a50:	ldr	x2, [x0, #64]
    1a54:	ldr	w1, [sp, #868]
    1a58:	mov	x0, x1
    1a5c:	lsl	x0, x0, #3
    1a60:	sub	x0, x0, x1
    1a64:	lsl	x0, x0, #3
    1a68:	add	x0, x2, x0
    1a6c:	ldr	w0, [x0, #32]
    1a70:	ldr	w1, [sp, #864]
    1a74:	cmp	w1, w0
    1a78:	b.cc	1890 <grub_mod_init-0x418>  // b.lo, b.ul, b.last
    1a7c:	ldr	w0, [sp, #868]
    1a80:	add	w0, w0, #0x1
    1a84:	str	w0, [sp, #868]
    1a88:	ldr	x0, [sp, #800]
    1a8c:	ldr	w0, [x0, #28]
    1a90:	ldr	w1, [sp, #868]
    1a94:	cmp	w1, w0
    1a98:	b.cc	1888 <grub_mod_init-0x420>  // b.lo, b.ul, b.last
    1a9c:	ldr	x0, [sp, #800]
    1aa0:	ldr	x0, [x0, #80]
    1aa4:	str	x0, [sp, #800]
    1aa8:	ldr	x0, [sp, #800]
    1aac:	cmp	x0, #0x0
    1ab0:	b.ne	1880 <grub_mod_init-0x428>  // b.any
    1ab4:	ldr	x0, [sp, #856]
    1ab8:	bl	0 <grub_diskfilter_vg_register>
    1abc:	cmp	w0, #0x0
    1ac0:	b.eq	1ad0 <grub_mod_init-0x1d8>  // b.none
    1ac4:	b	1b3c <grub_mod_init-0x16c>
    1ac8:	ldr	x0, [sp, #704]
    1acc:	bl	0 <grub_free>
    1ad0:	mov	x0, #0x26                  	// #38
    1ad4:	bl	0 <grub_malloc>
    1ad8:	mov	x1, x0
    1adc:	ldr	x0, [sp, #32]
    1ae0:	str	x1, [x0]
    1ae4:	ldr	x0, [sp, #32]
    1ae8:	ldr	x0, [x0]
    1aec:	cmp	x0, #0x0
    1af0:	b.eq	1b38 <grub_mod_init-0x170>  // b.none
    1af4:	ldr	x0, [sp, #32]
    1af8:	ldr	x0, [x0]
    1afc:	add	x1, sp, #0x38
    1b00:	mov	x2, #0x26                  	// #38
    1b04:	bl	0 <grub_mod_init-0x1ca8>
    1b08:	ldr	x0, [sp, #32]
    1b0c:	mov	x1, #0x26                  	// #38
    1b10:	str	x1, [x0, #8]
    1b14:	ldr	x0, [sp, #736]
    1b18:	bl	0 <grub_free>
    1b1c:	ldr	x0, [sp, #24]
    1b20:	mov	x1, #0xffffffffffffffff    	// #-1
    1b24:	str	x1, [x0]
    1b28:	ldr	x0, [sp, #856]
    1b2c:	b	1ba0 <grub_mod_init-0x108>
    1b30:	nop
    1b34:	b	1b3c <grub_mod_init-0x16c>
    1b38:	nop
    1b3c:	ldr	x0, [sp, #856]
    1b40:	bl	0 <grub_free>
    1b44:	b	1b5c <grub_mod_init-0x14c>
    1b48:	nop
    1b4c:	b	1b5c <grub_mod_init-0x14c>
    1b50:	nop
    1b54:	b	1b5c <grub_mod_init-0x14c>
    1b58:	nop
    1b5c:	ldr	x0, [sp, #704]
    1b60:	bl	0 <grub_free>
    1b64:	b	1b7c <grub_mod_init-0x12c>
    1b68:	nop
    1b6c:	b	1b7c <grub_mod_init-0x12c>
    1b70:	nop
    1b74:	b	1b7c <grub_mod_init-0x12c>
    1b78:	nop
    1b7c:	ldr	x0, [sp, #736]
    1b80:	bl	0 <grub_free>
    1b84:	b	1b9c <grub_mod_init-0x10c>
    1b88:	nop
    1b8c:	b	1b9c <grub_mod_init-0x10c>
    1b90:	nop
    1b94:	b	1b9c <grub_mod_init-0x10c>
    1b98:	nop
    1b9c:	mov	x0, #0x0                   	// #0
    1ba0:	ldp	x29, x30, [sp]
    1ba4:	add	sp, sp, #0x370
    1ba8:	ret
    1bac:	nop
	...

0000000000001ca8 <grub_mod_init>:
    1ca8:	stp	x29, x30, [sp, #-32]!
    1cac:	mov	x29, sp
    1cb0:	str	x0, [sp, #24]
    1cb4:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1cb8:	add	x0, x0, #0x0
    1cbc:	ldr	x0, [x0]
    1cc0:	bl	120 <grub_mod_init-0x1b88>
    1cc4:	nop
    1cc8:	ldp	x29, x30, [sp], #32
    1ccc:	ret
	...

0000000000001cd8 <grub_mod_fini>:
    1cd8:	stp	x29, x30, [sp, #-16]!
    1cdc:	mov	x29, sp
    1ce0:	adrp	x0, 0 <grub_mod_init-0x1ca8>
    1ce4:	add	x0, x0, #0x0
    1ce8:	ldr	x0, [x0]
    1cec:	bl	1a0 <grub_mod_init-0x1b08>
    1cf0:	nop
    1cf4:	ldp	x29, x30, [sp], #16
    1cf8:	ret
    1cfc:	nop
	...
