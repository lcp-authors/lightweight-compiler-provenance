
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_statistics.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000788 <.init>:
 788:	stp	x29, x30, [sp, #-16]!
 78c:	mov	x29, sp
 790:	bl	860 <sqrt@plt+0x10>
 794:	ldp	x29, x30, [sp], #16
 798:	ret

Disassembly of section .plt:

00000000000007a0 <__cxa_finalize@plt-0x20>:
 7a0:	stp	x16, x30, [sp, #-16]!
 7a4:	adrp	x16, 11000 <PyInit__statistics@@Base+0x106cc>
 7a8:	ldr	x17, [x16, #4088]
 7ac:	add	x16, x16, #0xff8
 7b0:	br	x17
 7b4:	nop
 7b8:	nop
 7bc:	nop

00000000000007c0 <__cxa_finalize@plt>:
 7c0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7c4:	ldr	x17, [x16]
 7c8:	add	x16, x16, #0x0
 7cc:	br	x17

00000000000007d0 <PyErr_SetString@plt>:
 7d0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #8]
 7d8:	add	x16, x16, #0x8
 7dc:	br	x17

00000000000007e0 <PyFloat_FromDouble@plt>:
 7e0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #16]
 7e8:	add	x16, x16, #0x10
 7ec:	br	x17

00000000000007f0 <__gmon_start__@plt>:
 7f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #24]
 7f8:	add	x16, x16, #0x18
 7fc:	br	x17

0000000000000800 <_PyArg_CheckPositional@plt>:
 800:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 804:	ldr	x17, [x16, #32]
 808:	add	x16, x16, #0x20
 80c:	br	x17

0000000000000810 <PyErr_Occurred@plt>:
 810:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 814:	ldr	x17, [x16, #40]
 818:	add	x16, x16, #0x28
 81c:	br	x17

0000000000000820 <PyModule_Create2@plt>:
 820:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 824:	ldr	x17, [x16, #48]
 828:	add	x16, x16, #0x30
 82c:	br	x17

0000000000000830 <PyFloat_AsDouble@plt>:
 830:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 834:	ldr	x17, [x16, #56]
 838:	add	x16, x16, #0x38
 83c:	br	x17

0000000000000840 <log@plt>:
 840:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 844:	ldr	x17, [x16, #64]
 848:	add	x16, x16, #0x40
 84c:	br	x17

0000000000000850 <sqrt@plt>:
 850:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 854:	ldr	x17, [x16, #72]
 858:	add	x16, x16, #0x48
 85c:	br	x17

Disassembly of section .text:

0000000000000860 <PyInit__statistics@@Base-0xd4>:
     860:	adrp	x0, 11000 <PyInit__statistics@@Base+0x106cc>
     864:	ldr	x0, [x0, #4056]
     868:	cbz	x0, 870 <sqrt@plt+0x20>
     86c:	b	7f0 <__gmon_start__@plt>
     870:	ret
     874:	nop
     878:	adrp	x0, 12000 <PyInit__statistics@@Base+0x116cc>
     87c:	add	x0, x0, #0x100
     880:	adrp	x1, 12000 <PyInit__statistics@@Base+0x116cc>
     884:	add	x1, x1, #0x100
     888:	cmp	x1, x0
     88c:	b.eq	8a4 <sqrt@plt+0x54>  // b.none
     890:	adrp	x1, 11000 <PyInit__statistics@@Base+0x106cc>
     894:	ldr	x1, [x1, #4024]
     898:	cbz	x1, 8a4 <sqrt@plt+0x54>
     89c:	mov	x16, x1
     8a0:	br	x16
     8a4:	ret
     8a8:	adrp	x0, 12000 <PyInit__statistics@@Base+0x116cc>
     8ac:	add	x0, x0, #0x100
     8b0:	adrp	x1, 12000 <PyInit__statistics@@Base+0x116cc>
     8b4:	add	x1, x1, #0x100
     8b8:	sub	x1, x1, x0
     8bc:	lsr	x2, x1, #63
     8c0:	add	x1, x2, x1, asr #3
     8c4:	cmp	xzr, x1, asr #1
     8c8:	asr	x1, x1, #1
     8cc:	b.eq	8e4 <sqrt@plt+0x94>  // b.none
     8d0:	adrp	x2, 11000 <PyInit__statistics@@Base+0x106cc>
     8d4:	ldr	x2, [x2, #4064]
     8d8:	cbz	x2, 8e4 <sqrt@plt+0x94>
     8dc:	mov	x16, x2
     8e0:	br	x16
     8e4:	ret
     8e8:	stp	x29, x30, [sp, #-32]!
     8ec:	mov	x29, sp
     8f0:	str	x19, [sp, #16]
     8f4:	adrp	x19, 12000 <PyInit__statistics@@Base+0x116cc>
     8f8:	ldrb	w0, [x19, #256]
     8fc:	cbnz	w0, 924 <sqrt@plt+0xd4>
     900:	adrp	x0, 11000 <PyInit__statistics@@Base+0x106cc>
     904:	ldr	x0, [x0, #4040]
     908:	cbz	x0, 918 <sqrt@plt+0xc8>
     90c:	adrp	x0, 12000 <PyInit__statistics@@Base+0x116cc>
     910:	ldr	x0, [x0, #80]
     914:	bl	7c0 <__cxa_finalize@plt>
     918:	bl	878 <sqrt@plt+0x28>
     91c:	mov	w0, #0x1                   	// #1
     920:	strb	w0, [x19, #256]
     924:	ldr	x19, [sp, #16]
     928:	ldp	x29, x30, [sp], #32
     92c:	ret
     930:	b	8a8 <sqrt@plt+0x58>

0000000000000934 <PyInit__statistics@@Base>:
     934:	sub	sp, sp, #0x20
     938:	stp	x29, x30, [sp, #16]
     93c:	add	x29, sp, #0x10
     940:	adrp	x0, 12000 <PyInit__statistics@@Base+0x116cc>
     944:	add	x0, x0, #0x58
     948:	mov	w1, #0x3f5                 	// #1013
     94c:	bl	820 <PyModule_Create2@plt>
     950:	str	x0, [sp]
     954:	ldr	x8, [sp]
     958:	cbnz	x8, 968 <PyInit__statistics@@Base+0x34>
     95c:	mov	x8, xzr
     960:	str	x8, [sp, #8]
     964:	b	970 <PyInit__statistics@@Base+0x3c>
     968:	ldr	x8, [sp]
     96c:	str	x8, [sp, #8]
     970:	ldr	x0, [sp, #8]
     974:	ldp	x29, x30, [sp, #16]
     978:	add	sp, sp, #0x20
     97c:	ret
     980:	sub	sp, sp, #0x60
     984:	stp	x29, x30, [sp, #80]
     988:	add	x29, sp, #0x50
     98c:	mov	x8, xzr
     990:	mov	x9, #0x3                   	// #3
     994:	adrp	x10, 11000 <PyInit__statistics@@Base+0x106cc>
     998:	ldr	x10, [x10, #4032]
     99c:	stur	x0, [x29, #-8]
     9a0:	stur	x1, [x29, #-16]
     9a4:	stur	x2, [x29, #-24]
     9a8:	stur	x8, [x29, #-32]
     9ac:	ldur	x8, [x29, #-24]
     9b0:	cmp	x9, x8
     9b4:	str	x10, [sp, #8]
     9b8:	b.gt	9c8 <PyInit__statistics@@Base+0x94>
     9bc:	ldur	x8, [x29, #-24]
     9c0:	cmp	x8, #0x3
     9c4:	b.le	9ec <PyInit__statistics@@Base+0xb8>
     9c8:	ldur	x1, [x29, #-24]
     9cc:	adrp	x0, 1000 <PyInit__statistics@@Base+0x6cc>
     9d0:	add	x0, x0, #0x378
     9d4:	mov	x8, #0x3                   	// #3
     9d8:	mov	x2, x8
     9dc:	mov	x3, x8
     9e0:	bl	800 <_PyArg_CheckPositional@plt>
     9e4:	cbnz	w0, 9ec <PyInit__statistics@@Base+0xb8>
     9e8:	b	b54 <PyInit__statistics@@Base+0x220>
     9ec:	ldur	x8, [x29, #-16]
     9f0:	ldr	x8, [x8]
     9f4:	ldr	x8, [x8, #8]
     9f8:	ldr	x9, [sp, #8]
     9fc:	cmp	x8, x9
     a00:	b.ne	a18 <PyInit__statistics@@Base+0xe4>  // b.any
     a04:	ldur	x8, [x29, #-16]
     a08:	ldr	x8, [x8]
     a0c:	ldr	x8, [x8, #16]
     a10:	str	x8, [sp, #40]
     a14:	b	a4c <PyInit__statistics@@Base+0x118>
     a18:	ldur	x8, [x29, #-16]
     a1c:	ldr	x0, [x8]
     a20:	bl	830 <PyFloat_AsDouble@plt>
     a24:	str	d0, [sp, #40]
     a28:	ldr	d0, [sp, #40]
     a2c:	fmov	d1, #-1.000000000000000000e+00
     a30:	fcmp	d0, d1
     a34:	cset	w9, eq  // eq = none
     a38:	tbnz	w9, #0, a40 <PyInit__statistics@@Base+0x10c>
     a3c:	b	a4c <PyInit__statistics@@Base+0x118>
     a40:	bl	810 <PyErr_Occurred@plt>
     a44:	cbz	x0, a4c <PyInit__statistics@@Base+0x118>
     a48:	b	b54 <PyInit__statistics@@Base+0x220>
     a4c:	ldur	x8, [x29, #-16]
     a50:	ldr	x8, [x8, #8]
     a54:	ldr	x8, [x8, #8]
     a58:	ldr	x9, [sp, #8]
     a5c:	cmp	x8, x9
     a60:	b.ne	a78 <PyInit__statistics@@Base+0x144>  // b.any
     a64:	ldur	x8, [x29, #-16]
     a68:	ldr	x8, [x8, #8]
     a6c:	ldr	x8, [x8, #16]
     a70:	str	x8, [sp, #32]
     a74:	b	aac <PyInit__statistics@@Base+0x178>
     a78:	ldur	x8, [x29, #-16]
     a7c:	ldr	x0, [x8, #8]
     a80:	bl	830 <PyFloat_AsDouble@plt>
     a84:	str	d0, [sp, #32]
     a88:	ldr	d0, [sp, #32]
     a8c:	fmov	d1, #-1.000000000000000000e+00
     a90:	fcmp	d0, d1
     a94:	cset	w9, eq  // eq = none
     a98:	tbnz	w9, #0, aa0 <PyInit__statistics@@Base+0x16c>
     a9c:	b	aac <PyInit__statistics@@Base+0x178>
     aa0:	bl	810 <PyErr_Occurred@plt>
     aa4:	cbz	x0, aac <PyInit__statistics@@Base+0x178>
     aa8:	b	b54 <PyInit__statistics@@Base+0x220>
     aac:	ldur	x8, [x29, #-16]
     ab0:	ldr	x8, [x8, #16]
     ab4:	ldr	x8, [x8, #8]
     ab8:	ldr	x9, [sp, #8]
     abc:	cmp	x8, x9
     ac0:	b.ne	ad8 <PyInit__statistics@@Base+0x1a4>  // b.any
     ac4:	ldur	x8, [x29, #-16]
     ac8:	ldr	x8, [x8, #16]
     acc:	ldr	x8, [x8, #16]
     ad0:	str	x8, [sp, #24]
     ad4:	b	b0c <PyInit__statistics@@Base+0x1d8>
     ad8:	ldur	x8, [x29, #-16]
     adc:	ldr	x0, [x8, #16]
     ae0:	bl	830 <PyFloat_AsDouble@plt>
     ae4:	str	d0, [sp, #24]
     ae8:	ldr	d0, [sp, #24]
     aec:	fmov	d1, #-1.000000000000000000e+00
     af0:	fcmp	d0, d1
     af4:	cset	w9, eq  // eq = none
     af8:	tbnz	w9, #0, b00 <PyInit__statistics@@Base+0x1cc>
     afc:	b	b0c <PyInit__statistics@@Base+0x1d8>
     b00:	bl	810 <PyErr_Occurred@plt>
     b04:	cbz	x0, b0c <PyInit__statistics@@Base+0x1d8>
     b08:	b	b54 <PyInit__statistics@@Base+0x220>
     b0c:	ldur	x0, [x29, #-8]
     b10:	ldr	d0, [sp, #40]
     b14:	ldr	d1, [sp, #32]
     b18:	ldr	d2, [sp, #24]
     b1c:	bl	b64 <PyInit__statistics@@Base+0x230>
     b20:	str	d0, [sp, #16]
     b24:	ldr	d0, [sp, #16]
     b28:	fmov	d1, #-1.000000000000000000e+00
     b2c:	fcmp	d0, d1
     b30:	cset	w8, eq  // eq = none
     b34:	tbnz	w8, #0, b3c <PyInit__statistics@@Base+0x208>
     b38:	b	b48 <PyInit__statistics@@Base+0x214>
     b3c:	bl	810 <PyErr_Occurred@plt>
     b40:	cbz	x0, b48 <PyInit__statistics@@Base+0x214>
     b44:	b	b54 <PyInit__statistics@@Base+0x220>
     b48:	ldr	d0, [sp, #16]
     b4c:	bl	7e0 <PyFloat_FromDouble@plt>
     b50:	stur	x0, [x29, #-32]
     b54:	ldur	x0, [x29, #-32]
     b58:	ldp	x29, x30, [sp, #80]
     b5c:	add	sp, sp, #0x60
     b60:	ret
     b64:	sub	sp, sp, #0x70
     b68:	stp	x29, x30, [sp, #96]
     b6c:	add	x29, sp, #0x60
     b70:	stur	x0, [x29, #-16]
     b74:	stur	d0, [x29, #-24]
     b78:	stur	d1, [x29, #-32]
     b7c:	stur	d2, [x29, #-40]
     b80:	ldur	d0, [x29, #-24]
     b84:	fcmp	d0, #0.0
     b88:	cset	w8, ls  // ls = plast
     b8c:	tbnz	w8, #0, bb8 <PyInit__statistics@@Base+0x284>
     b90:	ldur	d0, [x29, #-24]
     b94:	fmov	d1, #1.000000000000000000e+00
     b98:	fcmp	d0, d1
     b9c:	cset	w8, ge  // ge = tcont
     ba0:	tbnz	w8, #0, bb8 <PyInit__statistics@@Base+0x284>
     ba4:	ldur	d0, [x29, #-40]
     ba8:	fcmp	d0, #0.0
     bac:	cset	w8, ls  // ls = plast
     bb0:	tbnz	w8, #0, bb8 <PyInit__statistics@@Base+0x284>
     bb4:	b	bbc <PyInit__statistics@@Base+0x288>
     bb8:	b	132c <PyInit__statistics@@Base+0x9f8>
     bbc:	ldur	d0, [x29, #-24]
     bc0:	fmov	d1, #5.000000000000000000e-01
     bc4:	fsub	d0, d0, d1
     bc8:	str	d0, [sp, #48]
     bcc:	ldr	d0, [sp, #48]
     bd0:	fabs	d0, d0
     bd4:	mov	x8, #0x3333333333333333    	// #3689348814741910323
     bd8:	movk	x8, #0x3fdb, lsl #48
     bdc:	fmov	d1, x8
     be0:	fcmp	d0, d1
     be4:	cset	w9, ls  // ls = plast
     be8:	tbnz	w9, #0, bf0 <PyInit__statistics@@Base+0x2bc>
     bec:	b	e44 <PyInit__statistics@@Base+0x510>
     bf0:	ldr	d0, [sp, #48]
     bf4:	ldr	d1, [sp, #48]
     bf8:	fmul	d0, d0, d1
     bfc:	mov	x8, #0x851f                	// #34079
     c00:	movk	x8, #0x51eb, lsl #16
     c04:	movk	x8, #0x1eb8, lsl #32
     c08:	movk	x8, #0x3fc7, lsl #48
     c0c:	fmov	d1, x8
     c10:	fsub	d0, d1, d0
     c14:	str	d0, [sp, #24]
     c18:	ldr	d0, [sp, #24]
     c1c:	mov	x8, #0x925e                	// #37470
     c20:	movk	x8, #0x6f7d, lsl #16
     c24:	movk	x8, #0x9a29, lsl #32
     c28:	movk	x8, #0x40a3, lsl #48
     c2c:	fmov	d1, x8
     c30:	fmul	d0, d1, d0
     c34:	mov	x8, #0x45e4                	// #17892
     c38:	movk	x8, #0x6b2e, lsl #16
     c3c:	movk	x8, #0x52d2, lsl #32
     c40:	movk	x8, #0x40e0, lsl #48
     c44:	fmov	d1, x8
     c48:	fadd	d0, d0, d1
     c4c:	ldr	d1, [sp, #24]
     c50:	fmul	d0, d0, d1
     c54:	mov	x8, #0x8f20                	// #36640
     c58:	movk	x8, #0x55b7, lsl #16
     c5c:	movk	x8, #0x6c1c, lsl #32
     c60:	movk	x8, #0x40f0, lsl #48
     c64:	fmov	d1, x8
     c68:	fadd	d0, d0, d1
     c6c:	ldr	d1, [sp, #24]
     c70:	fmul	d0, d0, d1
     c74:	mov	x8, #0x752a                	// #29994
     c78:	movk	x8, #0x869b, lsl #16
     c7c:	movk	x8, #0x6c3e, lsl #32
     c80:	movk	x8, #0x40e6, lsl #48
     c84:	fmov	d1, x8
     c88:	fadd	d0, d0, d1
     c8c:	ldr	d1, [sp, #24]
     c90:	fmul	d0, d0, d1
     c94:	mov	x8, #0xe71d                	// #59165
     c98:	movk	x8, #0xcd4e, lsl #16
     c9c:	movk	x8, #0xd1d8, lsl #32
     ca0:	movk	x8, #0x40ca, lsl #48
     ca4:	fmov	d1, x8
     ca8:	fadd	d0, d0, d1
     cac:	ldr	d1, [sp, #24]
     cb0:	fmul	d0, d0, d1
     cb4:	mov	x8, #0xc0cc                	// #49356
     cb8:	movk	x8, #0x2213, lsl #16
     cbc:	movk	x8, #0xce5d, lsl #32
     cc0:	movk	x8, #0x409e, lsl #48
     cc4:	fmov	d1, x8
     cc8:	fadd	d0, d0, d1
     ccc:	ldr	d1, [sp, #24]
     cd0:	fmul	d0, d0, d1
     cd4:	mov	x8, #0x436e                	// #17262
     cd8:	movk	x8, #0x8b1a, lsl #16
     cdc:	movk	x8, #0xa488, lsl #32
     ce0:	movk	x8, #0x4060, lsl #48
     ce4:	fmov	d1, x8
     ce8:	fadd	d0, d0, d1
     cec:	ldr	d1, [sp, #24]
     cf0:	fmul	d0, d0, d1
     cf4:	mov	x8, #0xef75                	// #61301
     cf8:	movk	x8, #0x1e9e, lsl #16
     cfc:	movk	x8, #0x18d9, lsl #32
     d00:	movk	x8, #0x400b, lsl #48
     d04:	fmov	d1, x8
     d08:	fadd	d0, d0, d1
     d0c:	ldr	d1, [sp, #48]
     d10:	fmul	d0, d0, d1
     d14:	str	d0, [sp, #40]
     d18:	ldr	d0, [sp, #24]
     d1c:	mov	x8, #0x4b69                	// #19305
     d20:	movk	x8, #0xca98, lsl #16
     d24:	movk	x8, #0x6a7e, lsl #32
     d28:	movk	x8, #0x40b4, lsl #48
     d2c:	fmov	d1, x8
     d30:	fmul	d0, d1, d0
     d34:	mov	x8, #0xae76                	// #44662
     d38:	movk	x8, #0x7cb1, lsl #16
     d3c:	movk	x8, #0xe45, lsl #32
     d40:	movk	x8, #0x40dc, lsl #48
     d44:	fmov	d1, x8
     d48:	fadd	d0, d0, d1
     d4c:	ldr	d1, [sp, #24]
     d50:	fmul	d0, d0, d1
     d54:	mov	x8, #0xf4be                	// #62654
     d58:	movk	x8, #0xaa64, lsl #16
     d5c:	movk	x8, #0x317c, lsl #32
     d60:	movk	x8, #0x40e3, lsl #48
     d64:	fmov	d1, x8
     d68:	fadd	d0, d0, d1
     d6c:	ldr	d1, [sp, #24]
     d70:	fmul	d0, d0, d1
     d74:	mov	x8, #0x5266                	// #21094
     d78:	movk	x8, #0xd5d6, lsl #16
     d7c:	movk	x8, #0xb772, lsl #32
     d80:	movk	x8, #0x40d4, lsl #48
     d84:	fmov	d1, x8
     d88:	fadd	d0, d0, d1
     d8c:	ldr	d1, [sp, #24]
     d90:	fmul	d0, d0, d1
     d94:	mov	x8, #0xc89f                	// #51359
     d98:	movk	x8, #0x2e75, lsl #16
     d9c:	movk	x8, #0x1232, lsl #32
     da0:	movk	x8, #0x40b5, lsl #48
     da4:	fmov	d1, x8
     da8:	fadd	d0, d0, d1
     dac:	ldr	d1, [sp, #24]
     db0:	fmul	d0, d0, d1
     db4:	mov	x8, #0xb3f7                	// #46071
     db8:	movk	x8, #0xfdc8, lsl #16
     dbc:	movk	x8, #0x797e, lsl #32
     dc0:	movk	x8, #0x4085, lsl #48
     dc4:	fmov	d1, x8
     dc8:	fadd	d0, d0, d1
     dcc:	ldr	d1, [sp, #24]
     dd0:	fmul	d0, d0, d1
     dd4:	mov	x8, #0x1ab5                	// #6837
     dd8:	movk	x8, #0x386e, lsl #16
     ddc:	movk	x8, #0x281b, lsl #32
     de0:	movk	x8, #0x4045, lsl #48
     de4:	fmov	d1, x8
     de8:	fadd	d0, d0, d1
     dec:	ldr	d1, [sp, #24]
     df0:	fmul	d0, d0, d1
     df4:	fmov	d1, #1.000000000000000000e+00
     df8:	fadd	d0, d0, d1
     dfc:	str	d0, [sp, #32]
     e00:	ldr	d0, [sp, #32]
     e04:	fcmp	d0, #0.0
     e08:	cset	w9, eq  // eq = none
     e0c:	tbnz	w9, #0, e14 <PyInit__statistics@@Base+0x4e0>
     e10:	b	e18 <PyInit__statistics@@Base+0x4e4>
     e14:	b	132c <PyInit__statistics@@Base+0x9f8>
     e18:	ldr	d0, [sp, #40]
     e1c:	ldr	d1, [sp, #32]
     e20:	fdiv	d0, d0, d1
     e24:	str	d0, [sp, #16]
     e28:	ldur	d0, [x29, #-32]
     e2c:	ldr	d1, [sp, #16]
     e30:	ldur	d2, [x29, #-40]
     e34:	fmul	d1, d1, d2
     e38:	fadd	d0, d0, d1
     e3c:	stur	d0, [x29, #-8]
     e40:	b	134c <PyInit__statistics@@Base+0xa18>
     e44:	ldr	d0, [sp, #48]
     e48:	fcmp	d0, #0.0
     e4c:	cset	w8, ls  // ls = plast
     e50:	tbnz	w8, #0, e58 <PyInit__statistics@@Base+0x524>
     e54:	b	e64 <PyInit__statistics@@Base+0x530>
     e58:	ldur	x8, [x29, #-24]
     e5c:	str	x8, [sp, #8]
     e60:	b	e78 <PyInit__statistics@@Base+0x544>
     e64:	ldur	d0, [x29, #-24]
     e68:	fmov	d1, #1.000000000000000000e+00
     e6c:	fsub	d0, d1, d0
     e70:	fmov	x8, d0
     e74:	str	x8, [sp, #8]
     e78:	ldr	x8, [sp, #8]
     e7c:	str	x8, [sp, #24]
     e80:	ldr	d0, [sp, #24]
     e84:	fcmp	d0, #0.0
     e88:	cset	w9, ls  // ls = plast
     e8c:	tbnz	w9, #0, ea8 <PyInit__statistics@@Base+0x574>
     e90:	ldr	d0, [sp, #24]
     e94:	fmov	d1, #1.000000000000000000e+00
     e98:	fcmp	d0, d1
     e9c:	cset	w8, ge  // ge = tcont
     ea0:	tbnz	w8, #0, ea8 <PyInit__statistics@@Base+0x574>
     ea4:	b	eac <PyInit__statistics@@Base+0x578>
     ea8:	b	132c <PyInit__statistics@@Base+0x9f8>
     eac:	ldr	d0, [sp, #24]
     eb0:	bl	840 <log@plt>
     eb4:	fneg	d0, d0
     eb8:	bl	850 <sqrt@plt>
     ebc:	str	d0, [sp, #24]
     ec0:	ldr	d0, [sp, #24]
     ec4:	fmov	d1, #5.000000000000000000e+00
     ec8:	fcmp	d0, d1
     ecc:	cset	w8, ls  // ls = plast
     ed0:	tbnz	w8, #0, ed8 <PyInit__statistics@@Base+0x5a4>
     ed4:	b	10d8 <PyInit__statistics@@Base+0x7a4>
     ed8:	ldr	d0, [sp, #24]
     edc:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
     ee0:	movk	x8, #0x999a
     ee4:	movk	x8, #0x3ff9, lsl #48
     ee8:	fmov	d1, x8
     eec:	fsub	d0, d0, d1
     ef0:	str	d0, [sp, #24]
     ef4:	ldr	d0, [sp, #24]
     ef8:	mov	x8, #0xace9                	// #44265
     efc:	movk	x8, #0xc0b7, lsl #16
     f00:	movk	x8, #0x615a, lsl #32
     f04:	movk	x8, #0x3f49, lsl #48
     f08:	fmov	d1, x8
     f0c:	fmul	d0, d1, d0
     f10:	mov	x8, #0xec67                	// #60519
     f14:	movk	x8, #0x6c45, lsl #16
     f18:	movk	x8, #0x44eb, lsl #32
     f1c:	movk	x8, #0x3f97, lsl #48
     f20:	fmov	d1, x8
     f24:	fadd	d0, d0, d1
     f28:	ldr	d1, [sp, #24]
     f2c:	fmul	d0, d0, d1
     f30:	mov	x8, #0x5c37                	// #23607
     f34:	movk	x8, #0xb9b8, lsl #16
     f38:	movk	x8, #0xf2ab, lsl #32
     f3c:	movk	x8, #0x3fce, lsl #48
     f40:	fmov	d1, x8
     f44:	fadd	d0, d0, d1
     f48:	ldr	d1, [sp, #24]
     f4c:	fmul	d0, d0, d1
     f50:	mov	x8, #0x75b2                	// #30130
     f54:	movk	x8, #0x853, lsl #16
     f58:	movk	x8, #0x53cc, lsl #32
     f5c:	movk	x8, #0x3ff4, lsl #48
     f60:	fmov	d1, x8
     f64:	fadd	d0, d0, d1
     f68:	ldr	d1, [sp, #24]
     f6c:	fmul	d0, d0, d1
     f70:	mov	x8, #0x2c4                 	// #708
     f74:	movk	x8, #0x1a3d, lsl #16
     f78:	movk	x8, #0x2ecb, lsl #32
     f7c:	movk	x8, #0x400d, lsl #48
     f80:	fmov	d1, x8
     f84:	fadd	d0, d0, d1
     f88:	ldr	d1, [sp, #24]
     f8c:	fmul	d0, d0, d1
     f90:	mov	x8, #0x256a                	// #9578
     f94:	movk	x8, #0x1462, lsl #16
     f98:	movk	x8, #0x13f7, lsl #32
     f9c:	movk	x8, #0x4017, lsl #48
     fa0:	fmov	d1, x8
     fa4:	fadd	d0, d0, d1
     fa8:	ldr	d1, [sp, #24]
     fac:	fmul	d0, d0, d1
     fb0:	mov	x8, #0xb19b                	// #45467
     fb4:	movk	x8, #0x48ca, lsl #16
     fb8:	movk	x8, #0x8577, lsl #32
     fbc:	movk	x8, #0x4012, lsl #48
     fc0:	fmov	d1, x8
     fc4:	fadd	d0, d0, d1
     fc8:	ldr	d1, [sp, #24]
     fcc:	fmul	d0, d0, d1
     fd0:	mov	x8, #0x526a                	// #21098
     fd4:	movk	x8, #0xfde9, lsl #16
     fd8:	movk	x8, #0xc665, lsl #32
     fdc:	movk	x8, #0x3ff6, lsl #48
     fe0:	fmov	d1, x8
     fe4:	fadd	d0, d0, d1
     fe8:	str	d0, [sp, #40]
     fec:	ldr	d0, [sp, #24]
     ff0:	mov	x8, #0x39e4                	// #14820
     ff4:	movk	x8, #0x6864, lsl #16
     ff8:	movk	x8, #0xd3f, lsl #32
     ffc:	movk	x8, #0x3e12, lsl #48
    1000:	fmov	d1, x8
    1004:	fmul	d0, d1, d0
    1008:	mov	x8, #0x2728                	// #10024
    100c:	movk	x8, #0xbfdf, lsl #16
    1010:	movk	x8, #0xf18c, lsl #32
    1014:	movk	x8, #0x3f41, lsl #48
    1018:	fmov	d1, x8
    101c:	fadd	d0, d0, d1
    1020:	ldr	d1, [sp, #24]
    1024:	fmul	d0, d0, d1
    1028:	mov	x8, #0x17bf                	// #6079
    102c:	movk	x8, #0x7eab, lsl #16
    1030:	movk	x8, #0x207a, lsl #32
    1034:	movk	x8, #0x3f8f, lsl #48
    1038:	fmov	d1, x8
    103c:	fadd	d0, d0, d1
    1040:	ldr	d1, [sp, #24]
    1044:	fmul	d0, d0, d1
    1048:	mov	x8, #0xf040                	// #61504
    104c:	movk	x8, #0x3394, lsl #16
    1050:	movk	x8, #0xf512, lsl #32
    1054:	movk	x8, #0x3fc2, lsl #48
    1058:	fmov	d1, x8
    105c:	fadd	d0, d0, d1
    1060:	ldr	d1, [sp, #24]
    1064:	fmul	d0, d0, d1
    1068:	mov	x8, #0x85c9                	// #34249
    106c:	movk	x8, #0xf233, lsl #16
    1070:	movk	x8, #0x1292, lsl #32
    1074:	movk	x8, #0x3fe6, lsl #48
    1078:	fmov	d1, x8
    107c:	fadd	d0, d0, d1
    1080:	ldr	d1, [sp, #24]
    1084:	fmul	d0, d0, d1
    1088:	mov	x8, #0x6633                	// #26163
    108c:	movk	x8, #0xe652, lsl #16
    1090:	movk	x8, #0xd278, lsl #32
    1094:	movk	x8, #0x3ffa, lsl #48
    1098:	fmov	d1, x8
    109c:	fadd	d0, d0, d1
    10a0:	ldr	d1, [sp, #24]
    10a4:	fmul	d0, d0, d1
    10a8:	mov	x8, #0xa449                	// #42057
    10ac:	movk	x8, #0xbb46, lsl #16
    10b0:	movk	x8, #0x6cef, lsl #32
    10b4:	movk	x8, #0x4000, lsl #48
    10b8:	fmov	d1, x8
    10bc:	fadd	d0, d0, d1
    10c0:	ldr	d1, [sp, #24]
    10c4:	fmul	d0, d0, d1
    10c8:	fmov	d1, #1.000000000000000000e+00
    10cc:	fadd	d0, d0, d1
    10d0:	str	d0, [sp, #32]
    10d4:	b	12c8 <PyInit__statistics@@Base+0x994>
    10d8:	ldr	d0, [sp, #24]
    10dc:	fmov	d1, #5.000000000000000000e+00
    10e0:	fsub	d0, d0, d1
    10e4:	str	d0, [sp, #24]
    10e8:	ldr	d0, [sp, #24]
    10ec:	mov	x8, #0xbf93                	// #49043
    10f0:	movk	x8, #0xd693, lsl #16
    10f4:	movk	x8, #0xfb74, lsl #32
    10f8:	movk	x8, #0x3e8a, lsl #48
    10fc:	fmov	d1, x8
    1100:	fmul	d0, d1, d0
    1104:	mov	x8, #0xe02a                	// #57386
    1108:	movk	x8, #0xcc59, lsl #16
    110c:	movk	x8, #0x6ec6, lsl #32
    1110:	movk	x8, #0x3efc, lsl #48
    1114:	fmov	d1, x8
    1118:	fadd	d0, d0, d1
    111c:	ldr	d1, [sp, #24]
    1120:	fmul	d0, d0, d1
    1124:	mov	x8, #0x5345                	// #21317
    1128:	movk	x8, #0x842, lsl #16
    112c:	movk	x8, #0x5c19, lsl #32
    1130:	movk	x8, #0x3f54, lsl #48
    1134:	fmov	d1, x8
    1138:	fadd	d0, d0, d1
    113c:	ldr	d1, [sp, #24]
    1140:	fmul	d0, d0, d1
    1144:	mov	x8, #0x4ee7                	// #20199
    1148:	movk	x8, #0x193b, lsl #16
    114c:	movk	x8, #0x2b41, lsl #32
    1150:	movk	x8, #0x3f9b, lsl #48
    1154:	fmov	d1, x8
    1158:	fadd	d0, d0, d1
    115c:	ldr	d1, [sp, #24]
    1160:	fmul	d0, d0, d1
    1164:	mov	x8, #0x55cf                	// #21967
    1168:	movk	x8, #0x3152, lsl #16
    116c:	movk	x8, #0xfad9, lsl #32
    1170:	movk	x8, #0x3fd2, lsl #48
    1174:	fmov	d1, x8
    1178:	fadd	d0, d0, d1
    117c:	ldr	d1, [sp, #24]
    1180:	fmul	d0, d0, d1
    1184:	mov	x8, #0xa445                	// #42053
    1188:	movk	x8, #0x461f, lsl #16
    118c:	movk	x8, #0x8ea6, lsl #32
    1190:	movk	x8, #0x3ffc, lsl #48
    1194:	fmov	d1, x8
    1198:	fadd	d0, d0, d1
    119c:	ldr	d1, [sp, #24]
    11a0:	fmul	d0, d0, d1
    11a4:	mov	x8, #0x5003                	// #20483
    11a8:	movk	x8, #0x6e87, lsl #16
    11ac:	movk	x8, #0xdaea, lsl #32
    11b0:	movk	x8, #0x4015, lsl #48
    11b4:	fmov	d1, x8
    11b8:	fadd	d0, d0, d1
    11bc:	ldr	d1, [sp, #24]
    11c0:	fmul	d0, d0, d1
    11c4:	mov	x8, #0xe526                	// #58662
    11c8:	movk	x8, #0xc13e, lsl #16
    11cc:	movk	x8, #0xa1b1, lsl #32
    11d0:	movk	x8, #0x401a, lsl #48
    11d4:	fmov	d1, x8
    11d8:	fadd	d0, d0, d1
    11dc:	str	d0, [sp, #40]
    11e0:	ldr	d0, [sp, #24]
    11e4:	mov	x8, #0xc190                	// #49552
    11e8:	movk	x8, #0xf1f8, lsl #16
    11ec:	movk	x8, #0x69bf, lsl #32
    11f0:	movk	x8, #0x3ce2, lsl #48
    11f4:	fmov	d1, x8
    11f8:	fmul	d0, d1, d0
    11fc:	mov	x8, #0xb9e0                	// #47584
    1200:	movk	x8, #0xf740, lsl #16
    1204:	movk	x8, #0x1446, lsl #32
    1208:	movk	x8, #0x3e83, lsl #48
    120c:	fmov	d1, x8
    1210:	fadd	d0, d0, d1
    1214:	ldr	d1, [sp, #24]
    1218:	fmul	d0, d0, d1
    121c:	mov	x8, #0x74bf                	// #29887
    1220:	movk	x8, #0x4963, lsl #16
    1224:	movk	x8, #0x5c2c, lsl #32
    1228:	movk	x8, #0x3ef3, lsl #48
    122c:	fmov	d1, x8
    1230:	fadd	d0, d0, d1
    1234:	ldr	d1, [sp, #24]
    1238:	fmul	d0, d0, d1
    123c:	mov	x8, #0xc5d7                	// #50647
    1240:	movk	x8, #0x979d, lsl #16
    1244:	movk	x8, #0xc8bc, lsl #32
    1248:	movk	x8, #0x3f49, lsl #48
    124c:	fmov	d1, x8
    1250:	fadd	d0, d0, d1
    1254:	ldr	d1, [sp, #24]
    1258:	fmul	d0, d0, d1
    125c:	mov	x8, #0x462a                	// #17962
    1260:	movk	x8, #0x3215, lsl #16
    1264:	movk	x8, #0x76f9, lsl #32
    1268:	movk	x8, #0x3f8e, lsl #48
    126c:	fmov	d1, x8
    1270:	fadd	d0, d0, d1
    1274:	ldr	d1, [sp, #24]
    1278:	fmul	d0, d0, d1
    127c:	mov	x8, #0x43fb                	// #17403
    1280:	movk	x8, #0x1834, lsl #16
    1284:	movk	x8, #0x86eb, lsl #32
    1288:	movk	x8, #0x3fc1, lsl #48
    128c:	fmov	d1, x8
    1290:	fadd	d0, d0, d1
    1294:	ldr	d1, [sp, #24]
    1298:	fmul	d0, d0, d1
    129c:	mov	x8, #0xd77f                	// #55167
    12a0:	movk	x8, #0x4fc7, lsl #16
    12a4:	movk	x8, #0x31d3, lsl #32
    12a8:	movk	x8, #0x3fe3, lsl #48
    12ac:	fmov	d1, x8
    12b0:	fadd	d0, d0, d1
    12b4:	ldr	d1, [sp, #24]
    12b8:	fmul	d0, d0, d1
    12bc:	fmov	d1, #1.000000000000000000e+00
    12c0:	fadd	d0, d0, d1
    12c4:	str	d0, [sp, #32]
    12c8:	ldr	d0, [sp, #32]
    12cc:	fcmp	d0, #0.0
    12d0:	cset	w8, eq  // eq = none
    12d4:	tbnz	w8, #0, 12dc <PyInit__statistics@@Base+0x9a8>
    12d8:	b	12e0 <PyInit__statistics@@Base+0x9ac>
    12dc:	b	132c <PyInit__statistics@@Base+0x9f8>
    12e0:	ldr	d0, [sp, #40]
    12e4:	ldr	d1, [sp, #32]
    12e8:	fdiv	d0, d0, d1
    12ec:	str	d0, [sp, #16]
    12f0:	ldr	d0, [sp, #48]
    12f4:	fcmp	d0, #0.0
    12f8:	cset	w8, mi  // mi = first
    12fc:	tbnz	w8, #0, 1304 <PyInit__statistics@@Base+0x9d0>
    1300:	b	1310 <PyInit__statistics@@Base+0x9dc>
    1304:	ldr	d0, [sp, #16]
    1308:	fneg	d0, d0
    130c:	str	d0, [sp, #16]
    1310:	ldur	d0, [x29, #-32]
    1314:	ldr	d1, [sp, #16]
    1318:	ldur	d2, [x29, #-40]
    131c:	fmul	d1, d1, d2
    1320:	fadd	d0, d0, d1
    1324:	stur	d0, [x29, #-8]
    1328:	b	134c <PyInit__statistics@@Base+0xa18>
    132c:	adrp	x8, 11000 <PyInit__statistics@@Base+0x106cc>
    1330:	ldr	x8, [x8, #4048]
    1334:	ldr	x0, [x8]
    1338:	adrp	x1, 1000 <PyInit__statistics@@Base+0x6cc>
    133c:	add	x1, x1, #0x38d
    1340:	bl	7d0 <PyErr_SetString@plt>
    1344:	fmov	d0, #-1.000000000000000000e+00
    1348:	stur	d0, [x29, #-8]
    134c:	ldur	d0, [x29, #-8]
    1350:	ldp	x29, x30, [sp, #96]
    1354:	add	sp, sp, #0x70
    1358:	ret

Disassembly of section .fini:

000000000000135c <.fini>:
    135c:	stp	x29, x30, [sp, #-16]!
    1360:	mov	x29, sp
    1364:	ldp	x29, x30, [sp], #16
    1368:	ret
