
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004022d0 <.init>:
  4022d0:	stp	x29, x30, [sp, #-16]!
  4022d4:	mov	x29, sp
  4022d8:	bl	402a20 <wcrtomb@plt+0x60>
  4022dc:	ldp	x29, x30, [sp], #16
  4022e0:	ret

Disassembly of section .plt:

00000000004022f0 <mbrtowc@plt-0x20>:
  4022f0:	stp	x16, x30, [sp, #-16]!
  4022f4:	adrp	x16, 436000 <_obstack_memory_used@@Base+0x1fbcc>
  4022f8:	ldr	x17, [x16, #4088]
  4022fc:	add	x16, x16, #0xff8
  402300:	br	x17
  402304:	nop
  402308:	nop
  40230c:	nop

0000000000402310 <mbrtowc@plt>:
  402310:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16]
  402318:	add	x16, x16, #0x0
  40231c:	br	x17

0000000000402320 <memcpy@plt>:
  402320:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #8]
  402328:	add	x16, x16, #0x8
  40232c:	br	x17

0000000000402330 <sigaltstack@plt>:
  402330:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #16]
  402338:	add	x16, x16, #0x10
  40233c:	br	x17

0000000000402340 <memmove@plt>:
  402340:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #24]
  402348:	add	x16, x16, #0x18
  40234c:	br	x17

0000000000402350 <isalpha@plt>:
  402350:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #32]
  402358:	add	x16, x16, #0x20
  40235c:	br	x17

0000000000402360 <_exit@plt>:
  402360:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #40]
  402368:	add	x16, x16, #0x28
  40236c:	br	x17

0000000000402370 <fwrite_unlocked@plt>:
  402370:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #48]
  402378:	add	x16, x16, #0x30
  40237c:	br	x17

0000000000402380 <strlen@plt>:
  402380:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #56]
  402388:	add	x16, x16, #0x38
  40238c:	br	x17

0000000000402390 <fputs@plt>:
  402390:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #64]
  402398:	add	x16, x16, #0x40
  40239c:	br	x17

00000000004023a0 <exit@plt>:
  4023a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #72]
  4023a8:	add	x16, x16, #0x48
  4023ac:	br	x17

00000000004023b0 <error@plt>:
  4023b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #80]
  4023b8:	add	x16, x16, #0x50
  4023bc:	br	x17

00000000004023c0 <fchdir@plt>:
  4023c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #88]
  4023c8:	add	x16, x16, #0x58
  4023cc:	br	x17

00000000004023d0 <strtoimax@plt>:
  4023d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #96]
  4023d8:	add	x16, x16, #0x60
  4023dc:	br	x17

00000000004023e0 <wctype@plt>:
  4023e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #104]
  4023e8:	add	x16, x16, #0x68
  4023ec:	br	x17

00000000004023f0 <ferror_unlocked@plt>:
  4023f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #112]
  4023f8:	add	x16, x16, #0x70
  4023fc:	br	x17

0000000000402400 <__cxa_atexit@plt>:
  402400:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #120]
  402408:	add	x16, x16, #0x78
  40240c:	br	x17

0000000000402410 <iswcntrl@plt>:
  402410:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #128]
  402418:	add	x16, x16, #0x80
  40241c:	br	x17

0000000000402420 <qsort@plt>:
  402420:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #136]
  402428:	add	x16, x16, #0x88
  40242c:	br	x17

0000000000402430 <isblank@plt>:
  402430:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #144]
  402438:	add	x16, x16, #0x90
  40243c:	br	x17

0000000000402440 <lseek@plt>:
  402440:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #152]
  402448:	add	x16, x16, #0x98
  40244c:	br	x17

0000000000402450 <__fpending@plt>:
  402450:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #160]
  402458:	add	x16, x16, #0xa0
  40245c:	br	x17

0000000000402460 <__ctype_tolower_loc@plt>:
  402460:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #168]
  402468:	add	x16, x16, #0xa8
  40246c:	br	x17

0000000000402470 <putc_unlocked@plt>:
  402470:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #176]
  402478:	add	x16, x16, #0xb0
  40247c:	br	x17

0000000000402480 <fclose@plt>:
  402480:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #184]
  402488:	add	x16, x16, #0xb8
  40248c:	br	x17

0000000000402490 <wctob@plt>:
  402490:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #192]
  402498:	add	x16, x16, #0xc0
  40249c:	br	x17

00000000004024a0 <nl_langinfo@plt>:
  4024a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #200]
  4024a8:	add	x16, x16, #0xc8
  4024ac:	br	x17

00000000004024b0 <fopen@plt>:
  4024b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #208]
  4024b8:	add	x16, x16, #0xd0
  4024bc:	br	x17

00000000004024c0 <isspace@plt>:
  4024c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #216]
  4024c8:	add	x16, x16, #0xd8
  4024cc:	br	x17

00000000004024d0 <iswctype@plt>:
  4024d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #224]
  4024d8:	add	x16, x16, #0xe0
  4024dc:	br	x17

00000000004024e0 <malloc@plt>:
  4024e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #232]
  4024e8:	add	x16, x16, #0xe8
  4024ec:	br	x17

00000000004024f0 <toupper@plt>:
  4024f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #240]
  4024f8:	add	x16, x16, #0xf0
  4024fc:	br	x17

0000000000402500 <wcwidth@plt>:
  402500:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #248]
  402508:	add	x16, x16, #0xf8
  40250c:	br	x17

0000000000402510 <open@plt>:
  402510:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #256]
  402518:	add	x16, x16, #0x100
  40251c:	br	x17

0000000000402520 <splice@plt>:
  402520:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #264]
  402528:	add	x16, x16, #0x108
  40252c:	br	x17

0000000000402530 <islower@plt>:
  402530:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #272]
  402538:	add	x16, x16, #0x110
  40253c:	br	x17

0000000000402540 <isxdigit@plt>:
  402540:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #280]
  402548:	add	x16, x16, #0x118
  40254c:	br	x17

0000000000402550 <sigemptyset@plt>:
  402550:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #288]
  402558:	add	x16, x16, #0x120
  40255c:	br	x17

0000000000402560 <strncmp@plt>:
  402560:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #296]
  402568:	add	x16, x16, #0x128
  40256c:	br	x17

0000000000402570 <bindtextdomain@plt>:
  402570:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #304]
  402578:	add	x16, x16, #0x130
  40257c:	br	x17

0000000000402580 <isdigit@plt>:
  402580:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #312]
  402588:	add	x16, x16, #0x138
  40258c:	br	x17

0000000000402590 <__libc_start_main@plt>:
  402590:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #320]
  402598:	add	x16, x16, #0x140
  40259c:	br	x17

00000000004025a0 <fstatfs@plt>:
  4025a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #328]
  4025a8:	add	x16, x16, #0x148
  4025ac:	br	x17

00000000004025b0 <memset@plt>:
  4025b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #336]
  4025b8:	add	x16, x16, #0x150
  4025bc:	br	x17

00000000004025c0 <putchar_unlocked@plt>:
  4025c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #344]
  4025c8:	add	x16, x16, #0x158
  4025cc:	br	x17

00000000004025d0 <calloc@plt>:
  4025d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #352]
  4025d8:	add	x16, x16, #0x160
  4025dc:	br	x17

00000000004025e0 <bcmp@plt>:
  4025e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #360]
  4025e8:	add	x16, x16, #0x168
  4025ec:	br	x17

00000000004025f0 <isupper@plt>:
  4025f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #368]
  4025f8:	add	x16, x16, #0x170
  4025fc:	br	x17

0000000000402600 <readdir@plt>:
  402600:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #376]
  402608:	add	x16, x16, #0x178
  40260c:	br	x17

0000000000402610 <realloc@plt>:
  402610:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #384]
  402618:	add	x16, x16, #0x180
  40261c:	br	x17

0000000000402620 <__ctype_toupper_loc@plt>:
  402620:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #392]
  402628:	add	x16, x16, #0x188
  40262c:	br	x17

0000000000402630 <closedir@plt>:
  402630:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #400]
  402638:	add	x16, x16, #0x190
  40263c:	br	x17

0000000000402640 <getc_unlocked@plt>:
  402640:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #408]
  402648:	add	x16, x16, #0x198
  40264c:	br	x17

0000000000402650 <close@plt>:
  402650:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #416]
  402658:	add	x16, x16, #0x1a0
  40265c:	br	x17

0000000000402660 <sigaction@plt>:
  402660:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #424]
  402668:	add	x16, x16, #0x1a8
  40266c:	br	x17

0000000000402670 <strrchr@plt>:
  402670:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #432]
  402678:	add	x16, x16, #0x1b0
  40267c:	br	x17

0000000000402680 <__gmon_start__@plt>:
  402680:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #440]
  402688:	add	x16, x16, #0x1b8
  40268c:	br	x17

0000000000402690 <fdopendir@plt>:
  402690:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #448]
  402698:	add	x16, x16, #0x1c0
  40269c:	br	x17

00000000004026a0 <write@plt>:
  4026a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #456]
  4026a8:	add	x16, x16, #0x1c8
  4026ac:	br	x17

00000000004026b0 <btowc@plt>:
  4026b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #464]
  4026b8:	add	x16, x16, #0x1d0
  4026bc:	br	x17

00000000004026c0 <abort@plt>:
  4026c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #472]
  4026c8:	add	x16, x16, #0x1d8
  4026cc:	br	x17

00000000004026d0 <iscntrl@plt>:
  4026d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #480]
  4026d8:	add	x16, x16, #0x1e0
  4026dc:	br	x17

00000000004026e0 <mbsinit@plt>:
  4026e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #488]
  4026e8:	add	x16, x16, #0x1e8
  4026ec:	br	x17

00000000004026f0 <ispunct@plt>:
  4026f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #496]
  4026f8:	add	x16, x16, #0x1f0
  4026fc:	br	x17

0000000000402700 <puts@plt>:
  402700:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #504]
  402708:	add	x16, x16, #0x1f8
  40270c:	br	x17

0000000000402710 <fread_unlocked@plt>:
  402710:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #512]
  402718:	add	x16, x16, #0x200
  40271c:	br	x17

0000000000402720 <memcmp@plt>:
  402720:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #520]
  402728:	add	x16, x16, #0x208
  40272c:	br	x17

0000000000402730 <textdomain@plt>:
  402730:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #528]
  402738:	add	x16, x16, #0x210
  40273c:	br	x17

0000000000402740 <getopt_long@plt>:
  402740:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #536]
  402748:	add	x16, x16, #0x218
  40274c:	br	x17

0000000000402750 <strcmp@plt>:
  402750:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #544]
  402758:	add	x16, x16, #0x220
  40275c:	br	x17

0000000000402760 <__ctype_b_loc@plt>:
  402760:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #552]
  402768:	add	x16, x16, #0x228
  40276c:	br	x17

0000000000402770 <free@plt>:
  402770:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #560]
  402778:	add	x16, x16, #0x230
  40277c:	br	x17

0000000000402780 <__ctype_get_mb_cur_max@plt>:
  402780:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #568]
  402788:	add	x16, x16, #0x238
  40278c:	br	x17

0000000000402790 <strchr@plt>:
  402790:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #576]
  402798:	add	x16, x16, #0x240
  40279c:	br	x17

00000000004027a0 <memrchr@plt>:
  4027a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #584]
  4027a8:	add	x16, x16, #0x248
  4027ac:	br	x17

00000000004027b0 <fnmatch@plt>:
  4027b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #592]
  4027b8:	add	x16, x16, #0x250
  4027bc:	br	x17

00000000004027c0 <fflush_unlocked@plt>:
  4027c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #600]
  4027c8:	add	x16, x16, #0x258
  4027cc:	br	x17

00000000004027d0 <fcntl@plt>:
  4027d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #608]
  4027d8:	add	x16, x16, #0x260
  4027dc:	br	x17

00000000004027e0 <strcpy@plt>:
  4027e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #616]
  4027e8:	add	x16, x16, #0x268
  4027ec:	br	x17

00000000004027f0 <dirfd@plt>:
  4027f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #624]
  4027f8:	add	x16, x16, #0x270
  4027fc:	br	x17

0000000000402800 <__lxstat@plt>:
  402800:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #632]
  402808:	add	x16, x16, #0x278
  40280c:	br	x17

0000000000402810 <read@plt>:
  402810:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #640]
  402818:	add	x16, x16, #0x280
  40281c:	br	x17

0000000000402820 <memchr@plt>:
  402820:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #648]
  402828:	add	x16, x16, #0x288
  40282c:	br	x17

0000000000402830 <isatty@plt>:
  402830:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #656]
  402838:	add	x16, x16, #0x290
  40283c:	br	x17

0000000000402840 <sysconf@plt>:
  402840:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #664]
  402848:	add	x16, x16, #0x298
  40284c:	br	x17

0000000000402850 <isgraph@plt>:
  402850:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #672]
  402858:	add	x16, x16, #0x2a0
  40285c:	br	x17

0000000000402860 <iswalnum@plt>:
  402860:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #680]
  402868:	add	x16, x16, #0x2a8
  40286c:	br	x17

0000000000402870 <__fxstat@plt>:
  402870:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #688]
  402878:	add	x16, x16, #0x2b0
  40287c:	br	x17

0000000000402880 <strstr@plt>:
  402880:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #696]
  402888:	add	x16, x16, #0x2b8
  40288c:	br	x17

0000000000402890 <dcgettext@plt>:
  402890:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #704]
  402898:	add	x16, x16, #0x2c0
  40289c:	br	x17

00000000004028a0 <fputs_unlocked@plt>:
  4028a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #712]
  4028a8:	add	x16, x16, #0x2c8
  4028ac:	br	x17

00000000004028b0 <strcoll@plt>:
  4028b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #720]
  4028b8:	add	x16, x16, #0x2d0
  4028bc:	br	x17

00000000004028c0 <isalnum@plt>:
  4028c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #728]
  4028c8:	add	x16, x16, #0x2d8
  4028cc:	br	x17

00000000004028d0 <towupper@plt>:
  4028d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #736]
  4028d8:	add	x16, x16, #0x2e0
  4028dc:	br	x17

00000000004028e0 <iswprint@plt>:
  4028e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #744]
  4028e8:	add	x16, x16, #0x2e8
  4028ec:	br	x17

00000000004028f0 <vfprintf@plt>:
  4028f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #752]
  4028f8:	add	x16, x16, #0x2f0
  4028fc:	br	x17

0000000000402900 <openat@plt>:
  402900:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #760]
  402908:	add	x16, x16, #0x2f8
  40290c:	br	x17

0000000000402910 <printf@plt>:
  402910:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #768]
  402918:	add	x16, x16, #0x300
  40291c:	br	x17

0000000000402920 <__assert_fail@plt>:
  402920:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #776]
  402928:	add	x16, x16, #0x308
  40292c:	br	x17

0000000000402930 <__errno_location@plt>:
  402930:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #784]
  402938:	add	x16, x16, #0x310
  40293c:	br	x17

0000000000402940 <tolower@plt>:
  402940:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #792]
  402948:	add	x16, x16, #0x318
  40294c:	br	x17

0000000000402950 <getenv@plt>:
  402950:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #800]
  402958:	add	x16, x16, #0x320
  40295c:	br	x17

0000000000402960 <__xstat@plt>:
  402960:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #808]
  402968:	add	x16, x16, #0x328
  40296c:	br	x17

0000000000402970 <towlower@plt>:
  402970:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #816]
  402978:	add	x16, x16, #0x330
  40297c:	br	x17

0000000000402980 <fprintf@plt>:
  402980:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #824]
  402988:	add	x16, x16, #0x338
  40298c:	br	x17

0000000000402990 <isprint@plt>:
  402990:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #832]
  402998:	add	x16, x16, #0x340
  40299c:	br	x17

00000000004029a0 <setlocale@plt>:
  4029a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #840]
  4029a8:	add	x16, x16, #0x348
  4029ac:	br	x17

00000000004029b0 <__fxstatat@plt>:
  4029b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #848]
  4029b8:	add	x16, x16, #0x350
  4029bc:	br	x17

00000000004029c0 <wcrtomb@plt>:
  4029c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #856]
  4029c8:	add	x16, x16, #0x358
  4029cc:	br	x17

Disassembly of section .text:

00000000004029d0 <_obstack_begin@@Base-0x1373c>:
  4029d0:	mov	x29, #0x0                   	// #0
  4029d4:	mov	x30, #0x0                   	// #0
  4029d8:	mov	x5, x0
  4029dc:	ldr	x1, [sp]
  4029e0:	add	x2, sp, #0x8
  4029e4:	mov	x6, sp
  4029e8:	movz	x0, #0x0, lsl #48
  4029ec:	movk	x0, #0x0, lsl #32
  4029f0:	movk	x0, #0x40, lsl #16
  4029f4:	movk	x0, #0x3ba0
  4029f8:	movz	x3, #0x0, lsl #48
  4029fc:	movk	x3, #0x0, lsl #32
  402a00:	movk	x3, #0x42, lsl #16
  402a04:	movk	x3, #0x37a8
  402a08:	movz	x4, #0x0, lsl #48
  402a0c:	movk	x4, #0x0, lsl #32
  402a10:	movk	x4, #0x42, lsl #16
  402a14:	movk	x4, #0x3828
  402a18:	bl	402590 <__libc_start_main@plt>
  402a1c:	bl	4026c0 <abort@plt>
  402a20:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x1fbcc>
  402a24:	ldr	x0, [x0, #4064]
  402a28:	cbz	x0, 402a30 <wcrtomb@plt+0x70>
  402a2c:	b	402680 <__gmon_start__@plt>
  402a30:	ret
  402a34:	nop
  402a38:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x20bcc>
  402a3c:	add	x0, x0, #0x448
  402a40:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x20bcc>
  402a44:	add	x1, x1, #0x448
  402a48:	cmp	x1, x0
  402a4c:	b.eq	402a64 <wcrtomb@plt+0xa4>  // b.none
  402a50:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402a54:	ldr	x1, [x1, #2216]
  402a58:	cbz	x1, 402a64 <wcrtomb@plt+0xa4>
  402a5c:	mov	x16, x1
  402a60:	br	x16
  402a64:	ret
  402a68:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x20bcc>
  402a6c:	add	x0, x0, #0x448
  402a70:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x20bcc>
  402a74:	add	x1, x1, #0x448
  402a78:	sub	x1, x1, x0
  402a7c:	lsr	x2, x1, #63
  402a80:	add	x1, x2, x1, asr #3
  402a84:	cmp	xzr, x1, asr #1
  402a88:	asr	x1, x1, #1
  402a8c:	b.eq	402aa4 <wcrtomb@plt+0xe4>  // b.none
  402a90:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402a94:	ldr	x2, [x2, #2224]
  402a98:	cbz	x2, 402aa4 <wcrtomb@plt+0xe4>
  402a9c:	mov	x16, x2
  402aa0:	br	x16
  402aa4:	ret
  402aa8:	stp	x29, x30, [sp, #-32]!
  402aac:	mov	x29, sp
  402ab0:	str	x19, [sp, #16]
  402ab4:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  402ab8:	ldrb	w0, [x19, #1152]
  402abc:	cbnz	w0, 402acc <wcrtomb@plt+0x10c>
  402ac0:	bl	402a38 <wcrtomb@plt+0x78>
  402ac4:	mov	w0, #0x1                   	// #1
  402ac8:	strb	w0, [x19, #1152]
  402acc:	ldr	x19, [sp, #16]
  402ad0:	ldp	x29, x30, [sp], #32
  402ad4:	ret
  402ad8:	b	402a68 <wcrtomb@plt+0xa8>
  402adc:	stp	x29, x30, [sp, #-16]!
  402ae0:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  402ae4:	mov	x3, x0
  402ae8:	add	x2, x2, #0x91d
  402aec:	mov	w0, #0x2                   	// #2
  402af0:	mov	w1, wzr
  402af4:	mov	x29, sp
  402af8:	bl	4023b0 <error@plt>
  402afc:	stp	x29, x30, [sp, #-32]!
  402b00:	str	x19, [sp, #16]
  402b04:	mov	x19, x0
  402b08:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402b0c:	add	x0, x0, #0x8b8
  402b10:	mov	x29, sp
  402b14:	bl	402950 <getenv@plt>
  402b18:	cbz	x0, 402b28 <wcrtomb@plt+0x168>
  402b1c:	ldr	x19, [sp, #16]
  402b20:	ldp	x29, x30, [sp], #32
  402b24:	ret
  402b28:	mov	x0, x19
  402b2c:	bl	402adc <wcrtomb@plt+0x11c>
  402b30:	sub	sp, sp, #0xb0
  402b34:	stp	x28, x27, [sp, #96]
  402b38:	stp	x22, x21, [sp, #144]
  402b3c:	mov	x21, x1
  402b40:	mov	x27, x0
  402b44:	mov	w0, #0x1                   	// #1
  402b48:	mov	w1, #0x48                  	// #72
  402b4c:	stp	x29, x30, [sp, #80]
  402b50:	stp	x26, x25, [sp, #112]
  402b54:	stp	x24, x23, [sp, #128]
  402b58:	stp	x20, x19, [sp, #160]
  402b5c:	add	x29, sp, #0x50
  402b60:	mov	x20, x2
  402b64:	mov	w24, #0x1                   	// #1
  402b68:	bl	413c34 <wcrtomb@plt+0x11274>
  402b6c:	mov	x19, x0
  402b70:	bl	40c0ac <wcrtomb@plt+0x96ec>
  402b74:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402b78:	ldrb	w8, [x8, #3550]
  402b7c:	orr	x9, x20, #0x400000
  402b80:	mov	x22, x0
  402b84:	str	x0, [x19, #8]
  402b88:	cmp	w8, #0x0
  402b8c:	csel	x23, x20, x9, eq  // eq = none
  402b90:	mov	x0, x23
  402b94:	bl	416684 <_obstack_memory_used@@Base+0x250>
  402b98:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402b9c:	ldrb	w8, [x8, #2260]
  402ba0:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402ba4:	add	x20, x20, #0x8d8
  402ba8:	mov	x0, x22
  402bac:	cmp	w8, #0x0
  402bb0:	cset	w8, eq  // eq = none
  402bb4:	lsl	w3, w8, #1
  402bb8:	mov	x1, x20
  402bbc:	mov	x2, x23
  402bc0:	str	x23, [sp]
  402bc4:	bl	40c0c4 <wcrtomb@plt+0x9704>
  402bc8:	ldrb	w8, [x20]
  402bcc:	ldrb	w9, [x20, #2]
  402bd0:	mov	w0, #0x40                  	// #64
  402bd4:	str	x21, [sp, #16]
  402bd8:	eor	w8, w8, #0x1
  402bdc:	orr	w8, w8, w9
  402be0:	str	w8, [sp, #36]
  402be4:	add	x25, x27, x21
  402be8:	bl	413ae8 <wcrtomb@plt+0x11128>
  402bec:	mov	x23, xzr
  402bf0:	mov	x28, xzr
  402bf4:	mov	w21, wzr
  402bf8:	add	x8, x0, #0x40
  402bfc:	str	xzr, [sp, #40]
  402c00:	stp	xzr, x24, [x29, #-16]
  402c04:	stp	x8, xzr, [x19, #16]
  402c08:	stur	x27, [x29, #-24]
  402c0c:	str	x27, [sp, #8]
  402c10:	str	x25, [sp, #24]
  402c14:	b	402c24 <wcrtomb@plt+0x264>
  402c18:	orr	w21, w21, w8
  402c1c:	mov	x27, x24
  402c20:	cbz	x26, 402d4c <wcrtomb@plt+0x38c>
  402c24:	ldr	w8, [sp, #36]
  402c28:	sub	x22, x25, x27
  402c2c:	mov	w1, #0xa                   	// #10
  402c30:	mov	x0, x27
  402c34:	tst	w8, #0xff
  402c38:	mov	x2, x22
  402c3c:	stur	x28, [x29, #-32]
  402c40:	cset	w20, ne  // ne = any
  402c44:	bl	402820 <memchr@plt>
  402c48:	sub	x8, x0, x27
  402c4c:	cmp	x0, #0x0
  402c50:	csel	x28, x22, x8, eq  // eq = none
  402c54:	mov	x26, x0
  402c58:	csinc	x24, xzr, x0, eq  // eq = none
  402c5c:	mov	x0, x27
  402c60:	mov	x1, x28
  402c64:	mov	w2, w20
  402c68:	bl	402f28 <wcrtomb@plt+0x568>
  402c6c:	ldur	x9, [x29, #-24]
  402c70:	mov	w22, w0
  402c74:	cmp	x9, x27
  402c78:	b.cs	402cd0 <wcrtomb@plt+0x310>  // b.hs, b.nlast
  402c7c:	tbz	w22, #0, 402cd0 <wcrtomb@plt+0x310>
  402c80:	sub	x20, x27, x9
  402c84:	ldr	x9, [sp, #40]
  402c88:	ldur	x8, [x29, #-16]
  402c8c:	add	x25, x20, x9
  402c90:	cmp	x8, x25
  402c94:	b.cs	402cb4 <wcrtomb@plt+0x2f4>  // b.hs, b.nlast
  402c98:	sub	x1, x29, #0x10
  402c9c:	mov	x0, x23
  402ca0:	bl	413c04 <wcrtomb@plt+0x11244>
  402ca4:	ldur	x8, [x29, #-16]
  402ca8:	mov	x23, x0
  402cac:	cmp	x8, x25
  402cb0:	b.cc	402c98 <wcrtomb@plt+0x2d8>  // b.lo, b.ul, b.last
  402cb4:	ldr	x8, [sp, #40]
  402cb8:	ldur	x1, [x29, #-24]
  402cbc:	mov	x2, x20
  402cc0:	add	x0, x23, x8
  402cc4:	bl	402320 <memcpy@plt>
  402cc8:	str	x25, [sp, #40]
  402ccc:	ldr	x25, [sp, #24]
  402cd0:	ldr	x3, [x19, #24]
  402cd4:	ldur	x8, [x29, #-8]
  402cd8:	add	x20, x3, #0x1
  402cdc:	cmp	x8, x20
  402ce0:	b.hi	402d14 <wcrtomb@plt+0x354>  // b.pmore
  402ce4:	ldr	x8, [x19, #16]
  402ce8:	sub	x1, x29, #0x8
  402cec:	mov	w2, #0x40                  	// #64
  402cf0:	sub	x0, x8, #0x40
  402cf4:	bl	413b84 <wcrtomb@plt+0x111c4>
  402cf8:	ldr	x3, [x19, #24]
  402cfc:	ldur	x8, [x29, #-8]
  402d00:	add	x9, x0, #0x40
  402d04:	str	x9, [x19, #16]
  402d08:	add	x20, x3, #0x1
  402d0c:	cmp	x8, x20
  402d10:	b.ls	402ce4 <wcrtomb@plt+0x324>  // b.plast
  402d14:	mov	x2, x28
  402d18:	ldur	x28, [x29, #-32]
  402d1c:	mvn	w22, w22
  402d20:	and	w5, w22, #0x1
  402d24:	mov	x0, x19
  402d28:	mov	x1, x27
  402d2c:	mov	x4, x28
  402d30:	bl	402fc4 <wcrtomb@plt+0x604>
  402d34:	eor	w8, w0, #0x1
  402d38:	add	x28, x28, #0x1
  402d3c:	tbnz	w22, #0, 402c18 <wcrtomb@plt+0x258>
  402d40:	str	x20, [x19, #24]
  402d44:	stur	x24, [x29, #-24]
  402d48:	b	402c18 <wcrtomb@plt+0x258>
  402d4c:	tbnz	w21, #0, 402f1c <wcrtomb@plt+0x55c>
  402d50:	ldp	x27, x26, [sp, #8]
  402d54:	ldur	x9, [x29, #-24]
  402d58:	cbz	x9, 402da8 <wcrtomb@plt+0x3e8>
  402d5c:	cmp	x9, x27
  402d60:	mov	x22, x27
  402d64:	mov	x25, x26
  402d68:	b.ls	402da0 <wcrtomb@plt+0x3e0>  // b.plast
  402d6c:	ldr	x8, [sp, #24]
  402d70:	ldr	x21, [sp, #40]
  402d74:	mov	x0, x23
  402d78:	mov	x23, x9
  402d7c:	sub	x20, x8, x9
  402d80:	add	x25, x20, x21
  402d84:	mov	x1, x25
  402d88:	bl	413b40 <wcrtomb@plt+0x11180>
  402d8c:	mov	x22, x0
  402d90:	add	x0, x0, x21
  402d94:	mov	x1, x23
  402d98:	mov	x2, x20
  402d9c:	bl	402320 <memcpy@plt>
  402da0:	cbnz	x22, 402db4 <wcrtomb@plt+0x3f4>
  402da4:	b	402df4 <wcrtomb@plt+0x434>
  402da8:	ldr	x25, [sp, #40]
  402dac:	mov	x22, x23
  402db0:	cbz	x22, 402df4 <wcrtomb@plt+0x434>
  402db4:	ldp	x8, x9, [x19, #16]
  402db8:	mov	x4, #0xffffffffffffffff    	// #-1
  402dbc:	mov	x0, x19
  402dc0:	mov	x1, x22
  402dc4:	sub	x8, x8, #0x40
  402dc8:	add	x9, x9, #0x1
  402dcc:	mov	x2, x25
  402dd0:	mov	x3, xzr
  402dd4:	mov	w5, wzr
  402dd8:	stp	x8, x9, [x19, #16]
  402ddc:	bl	402fc4 <wcrtomb@plt+0x604>
  402de0:	tbz	w0, #0, 402f24 <wcrtomb@plt+0x564>
  402de4:	cmp	x22, x27
  402de8:	b.eq	402df4 <wcrtomb@plt+0x434>  // b.none
  402dec:	mov	x0, x22
  402df0:	bl	402770 <free@plt>
  402df4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402df8:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402dfc:	ldrb	w8, [x8, #3548]
  402e00:	ldrb	w9, [x21, #3549]
  402e04:	orr	w8, w9, w8
  402e08:	cbz	w8, 402ec0 <wcrtomb@plt+0x500>
  402e0c:	add	x0, x26, #0x2d
  402e10:	bl	413ae8 <wcrtomb@plt+0x11128>
  402e14:	ldr	x11, [sp]
  402e18:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e1c:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e20:	add	x9, x9, #0x8d3
  402e24:	add	x10, x10, #0x8ff
  402e28:	tst	x11, #0x2000
  402e2c:	ldrb	w8, [x21, #3549]
  402e30:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e34:	adrp	x12, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e38:	adrp	x13, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e3c:	csel	x9, x10, x9, eq  // eq = none
  402e40:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e44:	add	x11, x11, #0x8d9
  402e48:	add	x12, x12, #0x907
  402e4c:	add	x13, x13, #0x8d6
  402e50:	add	x10, x10, #0x903
  402e54:	csel	x11, x12, x11, eq  // eq = none
  402e58:	csel	x23, x10, x13, eq  // eq = none
  402e5c:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e60:	adrp	x12, 423000 <_obstack_memory_used@@Base+0xcbcc>
  402e64:	add	x10, x10, #0x8ec
  402e68:	add	x12, x12, #0x91e
  402e6c:	csel	x24, x12, x10, eq  // eq = none
  402e70:	cmp	w8, #0x0
  402e74:	csel	x1, x11, x9, eq  // eq = none
  402e78:	mov	x22, x0
  402e7c:	bl	4027e0 <strcpy@plt>
  402e80:	bl	402380 <strlen@plt>
  402e84:	mov	x20, x0
  402e88:	add	x0, x22, x0
  402e8c:	mov	x1, x27
  402e90:	mov	x2, x26
  402e94:	bl	402320 <memcpy@plt>
  402e98:	ldrb	w8, [x21, #3549]
  402e9c:	add	x20, x20, x26
  402ea0:	add	x0, x22, x20
  402ea4:	cmp	w8, #0x0
  402ea8:	csel	x1, x24, x23, eq  // eq = none
  402eac:	bl	4027e0 <strcpy@plt>
  402eb0:	bl	402380 <strlen@plt>
  402eb4:	add	x26, x0, x20
  402eb8:	mov	x27, x22
  402ebc:	b	402ec4 <wcrtomb@plt+0x504>
  402ec0:	mov	x22, xzr
  402ec4:	ldr	x2, [x19, #8]
  402ec8:	mov	x0, x27
  402ecc:	mov	x1, x26
  402ed0:	bl	40a0c4 <wcrtomb@plt+0x7704>
  402ed4:	mov	x0, x19
  402ed8:	bl	4030c0 <wcrtomb@plt+0x700>
  402edc:	ldr	x2, [x19, #8]
  402ee0:	mov	w3, #0x1                   	// #1
  402ee4:	mov	x0, xzr
  402ee8:	mov	x1, xzr
  402eec:	bl	40ab10 <wcrtomb@plt+0x8150>
  402ef0:	mov	x0, x22
  402ef4:	bl	402770 <free@plt>
  402ef8:	mov	x0, x19
  402efc:	ldp	x20, x19, [sp, #160]
  402f00:	ldp	x22, x21, [sp, #144]
  402f04:	ldp	x24, x23, [sp, #128]
  402f08:	ldp	x26, x25, [sp, #112]
  402f0c:	ldp	x28, x27, [sp, #96]
  402f10:	ldp	x29, x30, [sp, #80]
  402f14:	add	sp, sp, #0xb0
  402f18:	ret
  402f1c:	mov	w0, #0x2                   	// #2
  402f20:	bl	4023a0 <exit@plt>
  402f24:	bl	4026c0 <abort@plt>
  402f28:	stp	x29, x30, [sp, #-48]!
  402f2c:	tst	w2, #0x1
  402f30:	mov	w8, #0x100                 	// #256
  402f34:	mov	w9, #0x5c                  	// #92
  402f38:	str	x21, [sp, #16]
  402f3c:	stp	x20, x19, [sp, #32]
  402f40:	csel	w21, w9, w8, ne  // ne = any
  402f44:	subs	x19, x1, #0x1
  402f48:	mov	x29, sp
  402f4c:	b.lt	402fa8 <wcrtomb@plt+0x5e8>  // b.tstop
  402f50:	mov	w1, #0x5c                  	// #92
  402f54:	mov	x2, x19
  402f58:	mov	x20, x0
  402f5c:	bl	402820 <memchr@plt>
  402f60:	cbz	x0, 402fb4 <wcrtomb@plt+0x5f4>
  402f64:	add	x19, x20, x19
  402f68:	b	402f80 <wcrtomb@plt+0x5c0>
  402f6c:	add	x0, x0, #0x1
  402f70:	sub	x2, x19, x0
  402f74:	mov	w1, #0x5c                  	// #92
  402f78:	bl	402820 <memchr@plt>
  402f7c:	cbz	x0, 402fb4 <wcrtomb@plt+0x5f4>
  402f80:	mov	x8, x0
  402f84:	ldrb	w9, [x8, #1]!
  402f88:	sub	w10, w9, #0x31
  402f8c:	cmp	w10, #0x9
  402f90:	b.cc	402fb0 <wcrtomb@plt+0x5f0>  // b.lo, b.ul, b.last
  402f94:	cmp	w21, w9
  402f98:	b.ne	402f6c <wcrtomb@plt+0x5ac>  // b.any
  402f9c:	cmp	x8, x19
  402fa0:	mov	x0, x8
  402fa4:	b.ne	402f6c <wcrtomb@plt+0x5ac>  // b.any
  402fa8:	mov	w0, wzr
  402fac:	b	402fb4 <wcrtomb@plt+0x5f4>
  402fb0:	mov	w0, #0x1                   	// #1
  402fb4:	ldp	x20, x19, [sp, #32]
  402fb8:	ldr	x21, [sp, #16]
  402fbc:	ldp	x29, x30, [sp], #48
  402fc0:	ret
  402fc4:	sub	sp, sp, #0x80
  402fc8:	stp	x22, x21, [sp, #96]
  402fcc:	stp	x20, x19, [sp, #112]
  402fd0:	mov	x19, x4
  402fd4:	mov	x20, x2
  402fd8:	mov	x21, x1
  402fdc:	stp	x29, x30, [sp, #80]
  402fe0:	add	x29, sp, #0x50
  402fe4:	tbz	w5, #0, 402ff0 <wcrtomb@plt+0x630>
  402fe8:	add	x22, sp, #0x10
  402fec:	b	402ff8 <wcrtomb@plt+0x638>
  402ff0:	ldr	x8, [x0, #16]
  402ff4:	add	x22, x8, x3, lsl #6
  402ff8:	stp	xzr, xzr, [x22]
  402ffc:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403000:	ldrb	w8, [x8, #3550]
  403004:	and	w9, w5, #0x1
  403008:	mov	x0, xzr
  40300c:	orr	w8, w8, w9
  403010:	cbnz	w8, 40301c <wcrtomb@plt+0x65c>
  403014:	mov	w0, #0x100                 	// #256
  403018:	bl	413ae8 <wcrtomb@plt+0x11128>
  40301c:	stp	x0, xzr, [x22, #32]
  403020:	mov	x0, x21
  403024:	mov	x1, x20
  403028:	mov	x2, x22
  40302c:	bl	4164a4 <_obstack_memory_used@@Base+0x70>
  403030:	cbz	x0, 403078 <wcrtomb@plt+0x6b8>
  403034:	mov	x20, x0
  403038:	str	x19, [sp, #8]
  40303c:	tbnz	x19, #63, 403080 <wcrtomb@plt+0x6c0>
  403040:	add	x0, x19, #0x1
  403044:	add	x1, sp, #0x8
  403048:	bl	403818 <wcrtomb@plt+0xe58>
  40304c:	mov	x3, x0
  403050:	ldrb	w8, [x3]
  403054:	cbz	w8, 403090 <wcrtomb@plt+0x6d0>
  403058:	ldr	x4, [sp, #8]
  40305c:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xcbcc>
  403060:	add	x2, x2, #0x8c8
  403064:	mov	w0, wzr
  403068:	mov	w1, wzr
  40306c:	mov	x5, x20
  403070:	bl	4023b0 <error@plt>
  403074:	b	4030a8 <wcrtomb@plt+0x6e8>
  403078:	mov	w0, #0x1                   	// #1
  40307c:	b	4030ac <wcrtomb@plt+0x6ec>
  403080:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xcbcc>
  403084:	add	x3, x3, #0x935
  403088:	ldrb	w8, [x3]
  40308c:	cbnz	w8, 403058 <wcrtomb@plt+0x698>
  403090:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  403094:	add	x2, x2, #0x91d
  403098:	mov	w0, wzr
  40309c:	mov	w1, wzr
  4030a0:	mov	x3, x20
  4030a4:	bl	4023b0 <error@plt>
  4030a8:	mov	w0, wzr
  4030ac:	ldp	x20, x19, [sp, #112]
  4030b0:	ldp	x22, x21, [sp, #96]
  4030b4:	ldp	x29, x30, [sp, #80]
  4030b8:	add	sp, sp, #0x80
  4030bc:	ret
  4030c0:	stp	x29, x30, [sp, #-80]!
  4030c4:	stp	x26, x25, [sp, #16]
  4030c8:	stp	x24, x23, [sp, #32]
  4030cc:	stp	x22, x21, [sp, #48]
  4030d0:	stp	x20, x19, [sp, #64]
  4030d4:	mov	x19, x0
  4030d8:	ldr	x0, [x0, #8]
  4030dc:	mov	x29, sp
  4030e0:	bl	40b4e0 <wcrtomb@plt+0x8b20>
  4030e4:	cbz	x0, 4031c0 <wcrtomb@plt+0x800>
  4030e8:	mov	x20, x0
  4030ec:	mov	w0, wzr
  4030f0:	bl	4094bc <wcrtomb@plt+0x6afc>
  4030f4:	str	x0, [x19]
  4030f8:	ldrb	w8, [x20]
  4030fc:	cbz	w8, 403190 <wcrtomb@plt+0x7d0>
  403100:	ldr	x8, [x19, #56]
  403104:	add	x25, x20, #0x3
  403108:	mov	x0, x25
  40310c:	add	x8, x8, #0x1
  403110:	str	x8, [x19, #56]
  403114:	bl	402380 <strlen@plt>
  403118:	ldrb	w8, [x20, #1]
  40311c:	ldrb	w9, [x20, #2]
  403120:	mov	x23, x0
  403124:	add	x8, x0, x8
  403128:	add	x21, x8, x9
  40312c:	mov	x0, x21
  403130:	bl	413ae8 <wcrtomb@plt+0x11128>
  403134:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403138:	ldrb	w26, [x8, #2260]
  40313c:	mov	x22, x0
  403140:	mov	x1, x25
  403144:	mov	x2, x23
  403148:	strb	w26, [x0]
  40314c:	ldrb	w8, [x20, #1]
  403150:	ldrb	w9, [x19, #64]
  403154:	add	x24, x0, x8
  403158:	orr	w8, w9, w8
  40315c:	mov	x0, x24
  403160:	strb	w8, [x19, #64]
  403164:	bl	402320 <memcpy@plt>
  403168:	ldrb	w8, [x20, #2]
  40316c:	cbz	w8, 403174 <wcrtomb@plt+0x7b4>
  403170:	strb	w26, [x24, x23]
  403174:	ldr	x0, [x19]
  403178:	mov	x1, x22
  40317c:	mov	x2, x21
  403180:	bl	407eac <wcrtomb@plt+0x54ec>
  403184:	mov	x0, x22
  403188:	bl	402770 <free@plt>
  40318c:	b	4031b0 <wcrtomb@plt+0x7f0>
  403190:	add	x22, x20, #0x3
  403194:	mov	x21, x0
  403198:	mov	x0, x22
  40319c:	bl	402380 <strlen@plt>
  4031a0:	mov	x2, x0
  4031a4:	mov	x0, x21
  4031a8:	mov	x1, x22
  4031ac:	bl	407eac <wcrtomb@plt+0x54ec>
  4031b0:	ldr	x0, [x19]
  4031b4:	bl	4082dc <wcrtomb@plt+0x591c>
  4031b8:	mov	x0, x20
  4031bc:	bl	40c098 <wcrtomb@plt+0x96d8>
  4031c0:	ldp	x20, x19, [sp, #64]
  4031c4:	ldp	x22, x21, [sp, #48]
  4031c8:	ldp	x24, x23, [sp, #32]
  4031cc:	ldp	x26, x25, [sp, #16]
  4031d0:	ldp	x29, x30, [sp], #80
  4031d4:	ret
  4031d8:	sub	sp, sp, #0x100
  4031dc:	stp	x29, x30, [sp, #160]
  4031e0:	stp	x28, x27, [sp, #176]
  4031e4:	stp	x26, x25, [sp, #192]
  4031e8:	stp	x24, x23, [sp, #208]
  4031ec:	stp	x22, x21, [sp, #224]
  4031f0:	stp	x20, x19, [sp, #240]
  4031f4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4031f8:	ldr	x20, [x0, #8]
  4031fc:	ldrb	w8, [x8, #2260]
  403200:	mov	x22, x0
  403204:	add	x29, sp, #0xa0
  403208:	mov	x0, x20
  40320c:	mov	x21, x4
  403210:	str	x3, [sp, #16]
  403214:	mov	x19, x2
  403218:	str	w8, [sp, #36]
  40321c:	mov	x28, x1
  403220:	bl	40ab00 <wcrtomb@plt+0x8140>
  403224:	str	x0, [sp, #24]
  403228:	mov	x0, x20
  40322c:	bl	40ab08 <wcrtomb@plt+0x8148>
  403230:	cmp	x19, #0x1
  403234:	stur	x28, [x29, #-8]
  403238:	b.lt	4037b8 <wcrtomb@plt+0xdf8>  // b.tstop
  40323c:	eor	w8, w0, #0x1
  403240:	add	x23, x28, x19
  403244:	str	w8, [sp, #12]
  403248:	add	x8, x22, #0x20
  40324c:	mov	x19, x28
  403250:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403254:	stur	x8, [x29, #-56]
  403258:	stur	x21, [x29, #-72]
  40325c:	stp	x23, x28, [sp, #40]
  403260:	cbz	x21, 403274 <wcrtomb@plt+0x8b4>
  403264:	mov	x24, x23
  403268:	mov	x27, x19
  40326c:	str	x21, [sp, #80]
  403270:	b	4034a0 <wcrtomb@plt+0xae0>
  403274:	stur	xzr, [x29, #-40]
  403278:	sturb	wzr, [x29, #-44]
  40327c:	ldr	x0, [x22]
  403280:	cbz	x0, 403358 <wcrtomb@plt+0x998>
  403284:	ldrb	w8, [x22, #64]
  403288:	sub	x24, x23, x19
  40328c:	sub	x3, x29, #0x20
  403290:	mov	w4, #0x1                   	// #1
  403294:	sub	x1, x19, x8
  403298:	add	x2, x24, x8
  40329c:	bl	408a98 <wcrtomb@plt+0x60d8>
  4032a0:	tbnz	x0, #63, 403368 <wcrtomb@plt+0x9a8>
  4032a4:	ldr	w1, [sp, #36]
  4032a8:	add	x20, x19, x0
  4032ac:	mov	x23, x0
  4032b0:	sub	x2, x20, x28
  4032b4:	mov	x0, x28
  4032b8:	bl	4027a0 <memrchr@plt>
  4032bc:	ldur	x25, [x29, #-32]
  4032c0:	ldr	x26, [x22, #56]
  4032c4:	ldr	w8, [sp, #12]
  4032c8:	cmp	x0, #0x0
  4032cc:	csinc	x27, x28, x0, eq  // eq = none
  4032d0:	cmp	x25, x26
  4032d4:	cset	w21, lt  // lt = tstop
  4032d8:	orr	w8, w21, w8
  4032dc:	mov	x0, x20
  4032e0:	tbnz	w8, #0, 403310 <wcrtomb@plt+0x950>
  4032e4:	sub	x8, x20, x27
  4032e8:	cmp	x8, #0x10
  4032ec:	mov	w9, #0x10                  	// #16
  4032f0:	csel	x8, x8, x9, gt
  4032f4:	cmp	x8, x23, asr #2
  4032f8:	mov	x0, x20
  4032fc:	b.lt	403310 <wcrtomb@plt+0x950>  // b.tstop
  403300:	ldr	x0, [sp, #40]
  403304:	cmp	x8, x24, asr #2
  403308:	b.ge	403310 <wcrtomb@plt+0x950>  // b.tcont
  40330c:	add	x0, x19, x8, lsl #2
  403310:	ldr	x23, [sp, #40]
  403314:	ldr	w1, [sp, #36]
  403318:	sub	x2, x23, x0
  40331c:	bl	402820 <memchr@plt>
  403320:	cmp	x0, #0x0
  403324:	csinc	x24, x23, x0, eq  // eq = none
  403328:	cmp	x25, x26
  40332c:	b.ge	403384 <wcrtomb@plt+0x9c4>  // b.tcont
  403330:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403334:	add	x9, x9, #0x8d8
  403338:	ldrb	w8, [x9]
  40333c:	ldrb	w9, [x9, #2]
  403340:	eor	w8, w8, #0x1
  403344:	orr	w8, w8, w9
  403348:	cbz	w8, 403754 <wcrtomb@plt+0xd94>
  40334c:	mov	w8, #0x6                   	// #6
  403350:	mov	w21, #0x1                   	// #1
  403354:	b	403388 <wcrtomb@plt+0x9c8>
  403358:	mov	w21, wzr
  40335c:	mov	x24, x23
  403360:	mov	x27, x19
  403364:	b	403394 <wcrtomb@plt+0x9d4>
  403368:	mov	x9, x23
  40336c:	mov	w21, wzr
  403370:	mov	w8, #0x5                   	// #5
  403374:	mov	x24, x23
  403378:	mov	x27, x19
  40337c:	cbnz	w8, 403798 <wcrtomb@plt+0xdd8>
  403380:	b	403394 <wcrtomb@plt+0x9d4>
  403384:	mov	w8, wzr
  403388:	mov	x19, x27
  40338c:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403390:	cbnz	w8, 403798 <wcrtomb@plt+0xdd8>
  403394:	ldr	x8, [sp, #24]
  403398:	cbz	x8, 403418 <wcrtomb@plt+0xa58>
  40339c:	tbnz	w21, #0, 403418 <wcrtomb@plt+0xa58>
  4033a0:	ldr	x0, [sp, #24]
  4033a4:	sub	x4, x29, #0x28
  4033a8:	mov	x1, x19
  4033ac:	mov	x2, x24
  4033b0:	mov	w3, wzr
  4033b4:	mov	x5, xzr
  4033b8:	bl	40aae4 <wcrtomb@plt+0x8124>
  4033bc:	mov	w8, #0x4                   	// #4
  4033c0:	cbz	x0, 403740 <wcrtomb@plt+0xd80>
  4033c4:	ldr	w21, [sp, #36]
  4033c8:	mov	x20, x0
  4033cc:	cmp	x0, x24
  4033d0:	b.eq	403748 <wcrtomb@plt+0xd88>  // b.none
  4033d4:	ldur	x8, [x29, #-40]
  4033d8:	cbz	x8, 4033f4 <wcrtomb@plt+0xa34>
  4033dc:	sub	x2, x20, x28
  4033e0:	mov	x0, x28
  4033e4:	mov	w1, w21
  4033e8:	bl	4027a0 <memrchr@plt>
  4033ec:	add	x19, x0, #0x1
  4033f0:	mov	x27, x19
  4033f4:	sub	x2, x23, x20
  4033f8:	mov	x0, x20
  4033fc:	mov	w1, w21
  403400:	bl	402820 <memchr@plt>
  403404:	cmp	x0, #0x0
  403408:	csinc	x24, x23, x0, eq  // eq = none
  40340c:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403410:	stur	xzr, [x29, #-40]
  403414:	b	40341c <wcrtomb@plt+0xa5c>
  403418:	ldr	w21, [sp, #36]
  40341c:	ldr	x0, [x22, #8]
  403420:	sub	x4, x29, #0x28
  403424:	sub	x5, x29, #0x2c
  403428:	mov	x1, x19
  40342c:	mov	x2, x24
  403430:	mov	w3, wzr
  403434:	bl	40aae4 <wcrtomb@plt+0x8124>
  403438:	mov	w8, #0x4                   	// #4
  40343c:	cbz	x0, 403798 <wcrtomb@plt+0xdd8>
  403440:	mov	x19, x0
  403444:	cmp	x0, x24
  403448:	b.eq	403798 <wcrtomb@plt+0xdd8>  // b.none
  40344c:	ldur	x8, [x29, #-40]
  403450:	cbz	x8, 403468 <wcrtomb@plt+0xaa8>
  403454:	sub	x2, x19, x28
  403458:	mov	x0, x28
  40345c:	mov	w1, w21
  403460:	bl	4027a0 <memrchr@plt>
  403464:	add	x27, x0, #0x1
  403468:	sub	x2, x23, x19
  40346c:	mov	x0, x19
  403470:	mov	w1, w21
  403474:	bl	402820 <memchr@plt>
  403478:	ldurb	w8, [x29, #-44]
  40347c:	cmp	x0, #0x0
  403480:	csinc	x24, x23, x0, eq  // eq = none
  403484:	cmp	w8, #0x0
  403488:	ldr	x8, [sp, #80]
  40348c:	csel	x8, x8, x27, eq  // eq = none
  403490:	str	x8, [sp, #80]
  403494:	mov	w8, #0x6                   	// #6
  403498:	csel	w8, w8, wzr, eq  // eq = none
  40349c:	cbnz	w8, 40379c <wcrtomb@plt+0xddc>
  4034a0:	ldr	x8, [x22, #24]
  4034a4:	str	x24, [sp, #56]
  4034a8:	cbz	x8, 403724 <wcrtomb@plt+0xd64>
  4034ac:	ldr	x9, [sp, #80]
  4034b0:	mvn	x8, x27
  4034b4:	mov	x28, x24
  4034b8:	mov	x21, xzr
  4034bc:	sub	x19, x9, x27
  4034c0:	sub	x9, x24, x9
  4034c4:	add	x24, x8, x24
  4034c8:	sub	x23, x9, #0x1
  4034cc:	sub	x8, x28, #0x1
  4034d0:	stp	x9, xzr, [sp, #64]
  4034d4:	stur	x8, [x29, #-64]
  4034d8:	b	4034f4 <wcrtomb@plt+0xb34>
  4034dc:	mov	x28, x9
  4034e0:	str	x8, [sp, #72]
  4034e4:	ldr	x8, [x22, #24]
  4034e8:	add	x21, x21, #0x1
  4034ec:	cmp	x21, x8
  4034f0:	b.cs	40372c <wcrtomb@plt+0xd6c>  // b.hs, b.nlast
  4034f4:	ldr	x8, [x22, #16]
  4034f8:	lsl	x26, x21, #6
  4034fc:	ldur	x5, [x29, #-56]
  403500:	mov	x1, x27
  403504:	add	x8, x8, x26
  403508:	ldrb	w9, [x8, #56]
  40350c:	mov	x2, x24
  403510:	mov	x3, x19
  403514:	mov	x4, x23
  403518:	and	w9, w9, #0xffffffbf
  40351c:	strb	w9, [x8, #56]
  403520:	ldr	x8, [x22, #16]
  403524:	ldrb	w9, [x20, #2260]
  403528:	add	x8, x8, x26
  40352c:	ldrb	w10, [x8, #56]
  403530:	cmp	w9, #0xa
  403534:	cset	w9, eq  // eq = none
  403538:	bfi	w10, w9, #7, #1
  40353c:	strb	w10, [x8, #56]
  403540:	ldr	x8, [x22, #16]
  403544:	add	x0, x8, x26
  403548:	bl	417840 <_obstack_memory_used@@Base+0x140c>
  40354c:	cmn	x0, #0x2
  403550:	b.le	403814 <wcrtomb@plt+0xe54>
  403554:	tbnz	x0, #63, 4034e4 <wcrtomb@plt+0xb24>
  403558:	add	x25, x27, x0
  40355c:	cmp	x25, x28
  403560:	b.hi	4034e4 <wcrtomb@plt+0xb24>  // b.pmore
  403564:	ldr	x8, [x22, #48]
  403568:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40356c:	ldrb	w10, [x9, #3548]
  403570:	ldr	x8, [x8]
  403574:	sub	x20, x8, x0
  403578:	ldur	x8, [x29, #-72]
  40357c:	cbz	x8, 403590 <wcrtomb@plt+0xbd0>
  403580:	cbnz	w10, 403590 <wcrtomb@plt+0xbd0>
  403584:	mov	x8, x20
  403588:	mov	x9, x25
  40358c:	b	4035bc <wcrtomb@plt+0xbfc>
  403590:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403594:	ldrb	w11, [x8, #3549]
  403598:	ldr	x8, [sp, #64]
  40359c:	ldr	x9, [sp, #80]
  4035a0:	orr	w12, w11, w10
  4035a4:	cbz	w12, 4035bc <wcrtomb@plt+0xbfc>
  4035a8:	cmp	x20, x23
  4035ac:	b.ne	4035e8 <wcrtomb@plt+0xc28>  // b.any
  4035b0:	ldr	x8, [sp, #64]
  4035b4:	ldr	x9, [sp, #80]
  4035b8:	cbz	w11, 4035e8 <wcrtomb@plt+0xc28>
  4035bc:	ldur	x10, [x29, #-72]
  4035c0:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4035c4:	cbz	x10, 4037c0 <wcrtomb@plt+0xe00>
  4035c8:	cmp	x9, x28
  4035cc:	b.cc	4034dc <wcrtomb@plt+0xb1c>  // b.lo, b.ul, b.last
  4035d0:	ldr	x10, [sp, #72]
  4035d4:	cmp	x8, x10
  4035d8:	b.ls	4034e4 <wcrtomb@plt+0xb24>  // b.plast
  4035dc:	cmp	x9, x28
  4035e0:	b.eq	4034dc <wcrtomb@plt+0xb1c>  // b.none
  4035e4:	b	4034e4 <wcrtomb@plt+0xb24>
  4035e8:	cbz	w10, 40371c <wcrtomb@plt+0xd5c>
  4035ec:	cbz	w11, 40360c <wcrtomb@plt+0xc4c>
  4035f0:	b	40371c <wcrtomb@plt+0xd5c>
  4035f4:	mov	x0, xzr
  4035f8:	cmp	x0, #0x0
  4035fc:	b.le	403688 <wcrtomb@plt+0xcc8>
  403600:	mov	w8, wzr
  403604:	mov	x20, x0
  403608:	cbnz	w8, 403708 <wcrtomb@plt+0xd48>
  40360c:	cmp	x25, x28
  403610:	b.hi	40371c <wcrtomb@plt+0xd5c>  // b.pmore
  403614:	ldur	x1, [x29, #-64]
  403618:	add	x0, x25, x20
  40361c:	bl	409804 <wcrtomb@plt+0x6e44>
  403620:	cbnz	x0, 403638 <wcrtomb@plt+0xc78>
  403624:	ldur	x2, [x29, #-64]
  403628:	mov	x0, x27
  40362c:	mov	x1, x25
  403630:	bl	40981c <wcrtomb@plt+0x6e5c>
  403634:	cbz	x0, 4036f0 <wcrtomb@plt+0xd30>
  403638:	cbz	x20, 4035f4 <wcrtomb@plt+0xc34>
  40363c:	ldr	x8, [x22, #16]
  403640:	ldr	x10, [sp, #80]
  403644:	ldur	x4, [x29, #-56]
  403648:	sub	x20, x20, #0x1
  40364c:	add	x8, x8, x26
  403650:	ldrb	w9, [x8, #56]
  403654:	sub	x3, x25, x27
  403658:	mov	x1, x27
  40365c:	orr	w9, w9, #0x40
  403660:	strb	w9, [x8, #56]
  403664:	ldr	x8, [x22, #16]
  403668:	add	x9, x25, x20
  40366c:	sub	x2, x9, x10
  403670:	add	x0, x8, x26
  403674:	bl	417660 <_obstack_memory_used@@Base+0x122c>
  403678:	cmn	x0, #0x2
  40367c:	b.le	403814 <wcrtomb@plt+0xe54>
  403680:	cmp	x0, #0x0
  403684:	b.gt	403600 <wcrtomb@plt+0xc40>
  403688:	ldur	x8, [x29, #-64]
  40368c:	cmp	x25, x8
  403690:	b.eq	403700 <wcrtomb@plt+0xd40>  // b.none
  403694:	ldr	x8, [x22, #16]
  403698:	ldur	x5, [x29, #-56]
  40369c:	add	x25, x25, #0x1
  4036a0:	sub	x3, x25, x27
  4036a4:	add	x8, x8, x26
  4036a8:	ldrb	w9, [x8, #56]
  4036ac:	mov	x1, x27
  4036b0:	mov	x2, x24
  4036b4:	and	w9, w9, #0xffffffbf
  4036b8:	strb	w9, [x8, #56]
  4036bc:	ldr	x8, [x22, #16]
  4036c0:	mvn	x9, x25
  4036c4:	add	x0, x8, x26
  4036c8:	ldr	x8, [sp, #56]
  4036cc:	add	x4, x9, x8
  4036d0:	bl	417840 <_obstack_memory_used@@Base+0x140c>
  4036d4:	tbnz	x0, #63, 4036f8 <wcrtomb@plt+0xd38>
  4036d8:	ldr	x9, [x22, #48]
  4036dc:	mov	w8, wzr
  4036e0:	add	x25, x27, x0
  4036e4:	ldr	x9, [x9]
  4036e8:	sub	x20, x9, x0
  4036ec:	b	403608 <wcrtomb@plt+0xc48>
  4036f0:	mov	w8, #0xa                   	// #10
  4036f4:	b	403608 <wcrtomb@plt+0xc48>
  4036f8:	cmn	x0, #0x1
  4036fc:	b.ne	403814 <wcrtomb@plt+0xe54>  // b.any
  403700:	mov	w8, #0xc                   	// #12
  403704:	b	403608 <wcrtomb@plt+0xc48>
  403708:	cmp	w8, #0xc
  40370c:	b.eq	40371c <wcrtomb@plt+0xd5c>  // b.none
  403710:	cmp	w8, #0xa
  403714:	b.eq	403584 <wcrtomb@plt+0xbc4>  // b.none
  403718:	b	4037e8 <wcrtomb@plt+0xe28>
  40371c:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403720:	b	4034e4 <wcrtomb@plt+0xb24>
  403724:	str	xzr, [sp, #72]
  403728:	mov	x28, x24
  40372c:	ldr	x24, [sp, #56]
  403730:	ldr	x23, [sp, #40]
  403734:	cmp	x28, x24
  403738:	b.cs	4037a4 <wcrtomb@plt+0xde4>  // b.hs, b.nlast
  40373c:	b	4037d0 <wcrtomb@plt+0xe10>
  403740:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403744:	b	403798 <wcrtomb@plt+0xdd8>
  403748:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40374c:	cbnz	w8, 40379c <wcrtomb@plt+0xddc>
  403750:	b	4034a0 <wcrtomb@plt+0xae0>
  403754:	ldur	x8, [x29, #-8]
  403758:	cmp	x8, x27
  40375c:	b.cs	403764 <wcrtomb@plt+0xda4>  // b.hs, b.nlast
  403760:	stur	x27, [x29, #-8]
  403764:	sub	x0, x29, #0x8
  403768:	mov	x1, xzr
  40376c:	mov	x2, x20
  403770:	mov	x3, x23
  403774:	bl	4095a0 <wcrtomb@plt+0x6be0>
  403778:	ldur	x9, [x29, #-8]
  40377c:	cmp	x0, #0x0
  403780:	mov	w8, #0x6                   	// #6
  403784:	csel	w8, w8, wzr, eq  // eq = none
  403788:	csel	x19, x27, x9, eq  // eq = none
  40378c:	mov	w21, #0x1                   	// #1
  403790:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403794:	cbz	w8, 403394 <wcrtomb@plt+0x9d4>
  403798:	cbz	w8, 4034a0 <wcrtomb@plt+0xae0>
  40379c:	cmp	w8, #0x4
  4037a0:	b.ne	403808 <wcrtomb@plt+0xe48>  // b.any
  4037a4:	ldr	x28, [sp, #48]
  4037a8:	ldur	x21, [x29, #-72]
  4037ac:	cmp	x24, x23
  4037b0:	mov	x19, x24
  4037b4:	b.cc	403260 <wcrtomb@plt+0x8a0>  // b.lo, b.ul, b.last
  4037b8:	mov	x0, #0xffffffffffffffff    	// #-1
  4037bc:	b	4037e8 <wcrtomb@plt+0xe28>
  4037c0:	ldr	x24, [sp, #56]
  4037c4:	sub	x8, x24, x27
  4037c8:	mov	x28, x27
  4037cc:	str	x8, [sp, #72]
  4037d0:	ldr	x8, [sp, #48]
  4037d4:	ldr	x9, [sp, #72]
  4037d8:	sub	x0, x28, x8
  4037dc:	ldr	x8, [sp, #16]
  4037e0:	str	x9, [x8]
  4037e4:	b	4037e8 <wcrtomb@plt+0xe28>
  4037e8:	ldp	x20, x19, [sp, #240]
  4037ec:	ldp	x22, x21, [sp, #224]
  4037f0:	ldp	x24, x23, [sp, #208]
  4037f4:	ldp	x26, x25, [sp, #192]
  4037f8:	ldp	x28, x27, [sp, #176]
  4037fc:	ldp	x29, x30, [sp, #160]
  403800:	add	sp, sp, #0x100
  403804:	ret
  403808:	cmp	w8, #0x6
  40380c:	b.ne	4037b8 <wcrtomb@plt+0xdf8>  // b.any
  403810:	b	4037c4 <wcrtomb@plt+0xe04>
  403814:	bl	413cd0 <wcrtomb@plt+0x11310>
  403818:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40381c:	ldr	x8, [x9, #1160]
  403820:	cmp	x8, #0x2
  403824:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403828:	b.cc	40385c <wcrtomb@plt+0xe9c>  // b.lo, b.ul, b.last
  40382c:	ldr	x11, [x8, #1168]
  403830:	ldr	x10, [x9, #1160]
  403834:	mov	w9, #0x1                   	// #1
  403838:	add	x11, x11, #0x18
  40383c:	ldr	x12, [x11]
  403840:	cmp	x12, x0
  403844:	b.hi	403860 <wcrtomb@plt+0xea0>  // b.pmore
  403848:	add	x9, x9, #0x1
  40384c:	cmp	x9, x10
  403850:	add	x11, x11, #0x10
  403854:	b.cc	40383c <wcrtomb@plt+0xe7c>  // b.lo, b.ul, b.last
  403858:	b	403860 <wcrtomb@plt+0xea0>
  40385c:	mov	w9, #0x1                   	// #1
  403860:	ldr	x8, [x8, #1168]
  403864:	add	x8, x8, x9, lsl #4
  403868:	ldur	x9, [x8, #-8]
  40386c:	sub	x9, x0, x9
  403870:	add	x9, x9, #0x1
  403874:	str	x9, [x1]
  403878:	ldur	x0, [x8, #-16]
  40387c:	ret
  403880:	stp	x29, x30, [sp, #-48]!
  403884:	stp	x20, x19, [sp, #32]
  403888:	mov	w19, w0
  40388c:	stp	x22, x21, [sp, #16]
  403890:	mov	x29, sp
  403894:	cbnz	w0, 403a14 <wcrtomb@plt+0x1054>
  403898:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  40389c:	add	x1, x1, #0x500
  4038a0:	mov	w2, #0x5                   	// #5
  4038a4:	mov	x0, xzr
  4038a8:	bl	402890 <dcgettext@plt>
  4038ac:	mov	x20, x0
  4038b0:	bl	410728 <wcrtomb@plt+0xdd68>
  4038b4:	mov	x1, x0
  4038b8:	mov	x0, x20
  4038bc:	bl	402910 <printf@plt>
  4038c0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  4038c4:	add	x1, x1, #0x551
  4038c8:	mov	w2, #0x5                   	// #5
  4038cc:	mov	x0, xzr
  4038d0:	bl	402890 <dcgettext@plt>
  4038d4:	bl	402910 <printf@plt>
  4038d8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  4038dc:	add	x1, x1, #0x574
  4038e0:	mov	w2, #0x5                   	// #5
  4038e4:	mov	x0, xzr
  4038e8:	bl	402890 <dcgettext@plt>
  4038ec:	mov	x20, x0
  4038f0:	bl	410728 <wcrtomb@plt+0xdd68>
  4038f4:	mov	x1, x0
  4038f8:	mov	x0, x20
  4038fc:	bl	402910 <printf@plt>
  403900:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  403904:	add	x1, x1, #0x605
  403908:	mov	w2, #0x5                   	// #5
  40390c:	mov	x0, xzr
  403910:	bl	402890 <dcgettext@plt>
  403914:	bl	402910 <printf@plt>
  403918:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  40391c:	add	x1, x1, #0x702
  403920:	mov	w2, #0x5                   	// #5
  403924:	mov	x0, xzr
  403928:	bl	402890 <dcgettext@plt>
  40392c:	bl	402910 <printf@plt>
  403930:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  403934:	add	x1, x1, #0x8a7
  403938:	mov	w2, #0x5                   	// #5
  40393c:	mov	x0, xzr
  403940:	bl	402890 <dcgettext@plt>
  403944:	bl	402910 <printf@plt>
  403948:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  40394c:	add	x1, x1, #0x99f
  403950:	mov	w2, #0x5                   	// #5
  403954:	mov	x0, xzr
  403958:	bl	402890 <dcgettext@plt>
  40395c:	bl	402910 <printf@plt>
  403960:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  403964:	add	x1, x1, #0xb75
  403968:	mov	w2, #0x5                   	// #5
  40396c:	mov	x0, xzr
  403970:	bl	402890 <dcgettext@plt>
  403974:	bl	402910 <printf@plt>
  403978:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  40397c:	add	x1, x1, #0xcbc
  403980:	mov	w2, #0x5                   	// #5
  403984:	mov	x0, xzr
  403988:	bl	402890 <dcgettext@plt>
  40398c:	bl	402910 <printf@plt>
  403990:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  403994:	add	x1, x1, #0xe73
  403998:	mov	w2, #0x5                   	// #5
  40399c:	mov	x0, xzr
  4039a0:	bl	402890 <dcgettext@plt>
  4039a4:	bl	402910 <printf@plt>
  4039a8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  4039ac:	add	x1, x1, #0xf84
  4039b0:	mov	w2, #0x5                   	// #5
  4039b4:	mov	x0, xzr
  4039b8:	bl	402890 <dcgettext@plt>
  4039bc:	bl	402910 <printf@plt>
  4039c0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4039c4:	add	x1, x1, #0xda
  4039c8:	mov	w2, #0x5                   	// #5
  4039cc:	mov	x0, xzr
  4039d0:	bl	402890 <dcgettext@plt>
  4039d4:	bl	402910 <printf@plt>
  4039d8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4039dc:	add	x1, x1, #0x1aa
  4039e0:	mov	w2, #0x5                   	// #5
  4039e4:	mov	x0, xzr
  4039e8:	bl	402890 <dcgettext@plt>
  4039ec:	bl	402910 <printf@plt>
  4039f0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4039f4:	add	x1, x1, #0x2ce
  4039f8:	mov	w2, #0x5                   	// #5
  4039fc:	mov	x0, xzr
  403a00:	bl	402890 <dcgettext@plt>
  403a04:	bl	402910 <printf@plt>
  403a08:	bl	413a30 <wcrtomb@plt+0x11070>
  403a0c:	mov	w0, w19
  403a10:	bl	4023a0 <exit@plt>
  403a14:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403a18:	ldr	x20, [x22, #1104]
  403a1c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  403a20:	add	x1, x1, #0x500
  403a24:	mov	w2, #0x5                   	// #5
  403a28:	mov	x0, xzr
  403a2c:	bl	402890 <dcgettext@plt>
  403a30:	mov	x21, x0
  403a34:	bl	410728 <wcrtomb@plt+0xdd68>
  403a38:	mov	x2, x0
  403a3c:	mov	x0, x20
  403a40:	mov	x1, x21
  403a44:	bl	402980 <fprintf@plt>
  403a48:	ldr	x20, [x22, #1104]
  403a4c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xdbcc>
  403a50:	add	x1, x1, #0x52a
  403a54:	mov	w2, #0x5                   	// #5
  403a58:	mov	x0, xzr
  403a5c:	bl	402890 <dcgettext@plt>
  403a60:	mov	x21, x0
  403a64:	bl	410728 <wcrtomb@plt+0xdd68>
  403a68:	mov	x2, x0
  403a6c:	mov	x0, x20
  403a70:	mov	x1, x21
  403a74:	bl	402980 <fprintf@plt>
  403a78:	mov	w0, w19
  403a7c:	bl	4023a0 <exit@plt>
  403a80:	sub	sp, sp, #0x70
  403a84:	stp	x29, x30, [sp, #16]
  403a88:	stp	x28, x27, [sp, #32]
  403a8c:	stp	x26, x25, [sp, #48]
  403a90:	stp	x24, x23, [sp, #64]
  403a94:	stp	x22, x21, [sp, #80]
  403a98:	stp	x20, x19, [sp, #96]
  403a9c:	ldr	x21, [x1]
  403aa0:	ldr	x22, [x0]
  403aa4:	mov	x19, x1
  403aa8:	mov	x20, x0
  403aac:	add	x0, x21, #0x1
  403ab0:	mov	w1, #0x2                   	// #2
  403ab4:	add	x29, sp, #0x10
  403ab8:	str	xzr, [sp, #8]
  403abc:	bl	413abc <wcrtomb@plt+0x110fc>
  403ac0:	mov	x23, x0
  403ac4:	mov	x24, x0
  403ac8:	cbz	x21, 403b6c <wcrtomb@plt+0x11ac>
  403acc:	mov	x27, #0x441                 	// #1089
  403ad0:	mov	w26, #0x1                   	// #1
  403ad4:	movk	x27, #0x580, lsl #48
  403ad8:	mov	w28, #0x5c                  	// #92
  403adc:	mov	x24, x23
  403ae0:	b	403b04 <wcrtomb@plt+0x1144>
  403ae4:	mov	x0, x24
  403ae8:	mov	x1, x22
  403aec:	mov	x2, x25
  403af0:	bl	402320 <memcpy@plt>
  403af4:	add	x24, x24, x25
  403af8:	subs	x21, x21, x25
  403afc:	add	x22, x22, x25
  403b00:	b.eq	403b6c <wcrtomb@plt+0x11ac>  // b.none
  403b04:	add	x2, sp, #0x8
  403b08:	mov	x0, x22
  403b0c:	mov	x1, x21
  403b10:	bl	4093e0 <wcrtomb@plt+0x6a20>
  403b14:	mov	x25, x0
  403b18:	cmp	x0, #0x1
  403b1c:	b.eq	403b40 <wcrtomb@plt+0x1180>  // b.none
  403b20:	cmn	x25, #0x1
  403b24:	b.eq	403b38 <wcrtomb@plt+0x1178>  // b.none
  403b28:	cmn	x25, #0x2
  403b2c:	b.ne	403ae4 <wcrtomb@plt+0x1124>  // b.any
  403b30:	mov	x25, x21
  403b34:	b	403ae4 <wcrtomb@plt+0x1124>
  403b38:	mov	w25, #0x1                   	// #1
  403b3c:	str	xzr, [sp, #8]
  403b40:	ldrb	w8, [x22]
  403b44:	sub	w8, w8, #0x24
  403b48:	cmp	w8, #0x3a
  403b4c:	b.hi	403b60 <wcrtomb@plt+0x11a0>  // b.pmore
  403b50:	lsl	x8, x26, x8
  403b54:	tst	x8, x27
  403b58:	b.eq	403b60 <wcrtomb@plt+0x11a0>  // b.none
  403b5c:	strb	w28, [x24], #1
  403b60:	ldrb	w8, [x22]
  403b64:	strb	w8, [x24], #1
  403b68:	b	403af8 <wcrtomb@plt+0x1138>
  403b6c:	ldr	x0, [x20]
  403b70:	bl	402770 <free@plt>
  403b74:	sub	x8, x24, x23
  403b78:	str	x23, [x20]
  403b7c:	str	x8, [x19]
  403b80:	ldp	x20, x19, [sp, #96]
  403b84:	ldp	x22, x21, [sp, #80]
  403b88:	ldp	x24, x23, [sp, #64]
  403b8c:	ldp	x26, x25, [sp, #48]
  403b90:	ldp	x28, x27, [sp, #32]
  403b94:	ldp	x29, x30, [sp, #16]
  403b98:	add	sp, sp, #0x70
  403b9c:	ret
  403ba0:	sub	sp, sp, #0x1b0
  403ba4:	stp	x29, x30, [sp, #336]
  403ba8:	stp	x28, x27, [sp, #352]
  403bac:	add	x29, sp, #0x150
  403bb0:	add	x27, sp, #0x98
  403bb4:	adrp	x13, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403bb8:	mov	w8, #0x2                   	// #2
  403bbc:	stp	x26, x25, [sp, #368]
  403bc0:	stp	x24, x23, [sp, #384]
  403bc4:	stp	x22, x21, [sp, #400]
  403bc8:	stp	x20, x19, [sp, #416]
  403bcc:	stur	w0, [x29, #-12]
  403bd0:	adrp	x11, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403bd4:	mov	w9, #0xa                   	// #10
  403bd8:	adrp	x12, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403bdc:	stp	xzr, x1, [x27, #152]
  403be0:	stp	xzr, xzr, [x27, #136]
  403be4:	str	w8, [x13, #992]
  403be8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  403bec:	strb	w9, [x11, #2260]
  403bf0:	mov	x9, #0xffffffffffffffff    	// #-1
  403bf4:	str	x8, [x12, #1184]
  403bf8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403bfc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403c00:	adrp	x14, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403c04:	mov	w10, #0x1                   	// #1
  403c08:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403c0c:	str	x9, [x8, #1200]
  403c10:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403c14:	add	x1, x1, #0x2cd
  403c18:	mov	w0, #0x6                   	// #6
  403c1c:	strb	w10, [x14, #1176]
  403c20:	str	x9, [x11, #1192]
  403c24:	str	x9, [x27, #128]
  403c28:	strb	wzr, [x8, #1208]
  403c2c:	bl	4029a0 <setlocale@plt>
  403c30:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xebcc>
  403c34:	add	x19, x19, #0x4d7
  403c38:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403c3c:	add	x1, x1, #0x3d8
  403c40:	mov	x0, x19
  403c44:	bl	402570 <bindtextdomain@plt>
  403c48:	mov	x0, x19
  403c4c:	bl	402730 <textdomain@plt>
  403c50:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403c54:	add	x0, x0, #0x8d8
  403c58:	bl	40f8c0 <wcrtomb@plt+0xcf00>
  403c5c:	adrp	x0, 404000 <wcrtomb@plt+0x1640>
  403c60:	add	x0, x0, #0x9e4
  403c64:	bl	423830 <_obstack_memory_used@@Base+0xd3fc>
  403c68:	mov	x0, xzr
  403c6c:	bl	409dec <wcrtomb@plt+0x742c>
  403c70:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  403c74:	add	x0, x0, #0x3ea
  403c78:	bl	402950 <getenv@plt>
  403c7c:	sub	x1, x29, #0xc
  403c80:	sub	x2, x29, #0x18
  403c84:	bl	404a0c <wcrtomb@plt+0x204c>
  403c88:	str	w0, [sp, #12]
  403c8c:	cbz	w0, 403cb4 <wcrtomb@plt+0x12f4>
  403c90:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403c94:	add	x1, x1, #0x3f7
  403c98:	mov	w2, #0x5                   	// #5
  403c9c:	mov	x0, xzr
  403ca0:	bl	402890 <dcgettext@plt>
  403ca4:	mov	x2, x0
  403ca8:	mov	w0, wzr
  403cac:	mov	w1, wzr
  403cb0:	bl	4023b0 <error@plt>
  403cb4:	adrp	x19, 423000 <_obstack_memory_used@@Base+0xcbcc>
  403cb8:	mov	w25, wzr
  403cbc:	mov	w20, #0xffffffff            	// #-1
  403cc0:	adrp	x24, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403cc4:	add	x19, x19, #0x938
  403cc8:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403ccc:	str	wzr, [sp, #16]
  403cd0:	b	403ce8 <wcrtomb@plt+0x1328>
  403cd4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  403cd8:	add	x0, x0, #0x45b
  403cdc:	mov	w1, w20
  403ce0:	bl	404c9c <wcrtomb@plt+0x22dc>
  403ce4:	mov	w20, w0
  403ce8:	ldur	w22, [x29, #-12]
  403cec:	ldr	x21, [x27, #160]
  403cf0:	ldr	w28, [x24, #1120]
  403cf4:	sub	x2, x29, #0x38
  403cf8:	mov	w0, w22
  403cfc:	mov	x1, x21
  403d00:	bl	404ae8 <wcrtomb@plt+0x2128>
  403d04:	add	w8, w0, #0x1
  403d08:	cmp	w8, #0x10a
  403d0c:	b.hi	404960 <wcrtomb@plt+0x1fa0>  // b.pmore
  403d10:	adr	x9, 403cd4 <wcrtomb@plt+0x1314>
  403d14:	ldrh	w10, [x19, x8, lsl #1]
  403d18:	add	x9, x9, x10, lsl #2
  403d1c:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403d20:	add	x23, x23, #0x4e0
  403d24:	br	x9
  403d28:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403d2c:	mov	w9, #0x1                   	// #1
  403d30:	strb	w9, [x8, #3550]
  403d34:	b	403ce8 <wcrtomb@plt+0x1328>
  403d38:	cmp	w0, #0x106
  403d3c:	cset	w8, eq  // eq = none
  403d40:	mov	x19, x24
  403d44:	mov	w24, w20
  403d48:	mov	w20, w25
  403d4c:	mov	x28, xzr
  403d50:	lsl	w25, w8, #29
  403d54:	b	403d88 <wcrtomb@plt+0x13c8>
  403d58:	ldr	x21, [x23, x28]
  403d5c:	ldr	x22, [x26, #1112]
  403d60:	cmp	x28, #0x0
  403d64:	cset	w0, ne  // ne = any
  403d68:	bl	404e18 <wcrtomb@plt+0x2458>
  403d6c:	orr	w2, w0, w25
  403d70:	mov	x0, x21
  403d74:	mov	x1, x22
  403d78:	bl	410038 <wcrtomb@plt+0xd678>
  403d7c:	add	x28, x28, #0x8
  403d80:	cmp	x28, #0x8
  403d84:	b.ne	403d9c <wcrtomb@plt+0x13dc>  // b.any
  403d88:	ldr	x8, [x23, x28]
  403d8c:	cbnz	x8, 403d58 <wcrtomb@plt+0x1398>
  403d90:	bl	40fbec <wcrtomb@plt+0xd22c>
  403d94:	str	x0, [x23, x28]
  403d98:	b	403d58 <wcrtomb@plt+0x1398>
  403d9c:	mov	w25, w20
  403da0:	mov	w20, w24
  403da4:	mov	x24, x19
  403da8:	adrp	x19, 423000 <_obstack_memory_used@@Base+0xcbcc>
  403dac:	add	x19, x19, #0x938
  403db0:	b	403ce8 <wcrtomb@plt+0x1328>
  403db4:	ldr	x8, [x26, #1112]
  403db8:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403dbc:	str	x8, [x9, #888]
  403dc0:	b	403ce8 <wcrtomb@plt+0x1328>
  403dc4:	ldr	x21, [x26, #1112]
  403dc8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403dcc:	add	x1, x1, #0x48e
  403dd0:	mov	x0, x21
  403dd4:	bl	402750 <strcmp@plt>
  403dd8:	cbz	w0, 4042e4 <wcrtomb@plt+0x1924>
  403ddc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403de0:	add	x1, x1, #0x5ae
  403de4:	mov	x0, x21
  403de8:	bl	402750 <strcmp@plt>
  403dec:	cbz	w0, 403e14 <wcrtomb@plt+0x1454>
  403df0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403df4:	add	x1, x1, #0x620
  403df8:	mov	x0, x21
  403dfc:	bl	402750 <strcmp@plt>
  403e00:	cbnz	w0, 404984 <wcrtomb@plt+0x1fc4>
  403e04:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403e08:	mov	w9, #0x2                   	// #2
  403e0c:	str	w9, [x8, #1216]
  403e10:	b	403ce8 <wcrtomb@plt+0x1328>
  403e14:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403e18:	mov	w9, #0x1                   	// #1
  403e1c:	str	w9, [x8, #1216]
  403e20:	b	403ce8 <wcrtomb@plt+0x1328>
  403e24:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403e28:	mov	w9, #0x1                   	// #1
  403e2c:	strb	w9, [x8, #3549]
  403e30:	b	403ce8 <wcrtomb@plt+0x1328>
  403e34:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403e38:	strb	wzr, [x8, #2260]
  403e3c:	b	403ce8 <wcrtomb@plt+0x1328>
  403e40:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403e44:	mov	w9, #0x1                   	// #1
  403e48:	str	w9, [x8, #1224]
  403e4c:	b	403ce8 <wcrtomb@plt+0x1328>
  403e50:	bl	40943c <wcrtomb@plt+0x6a7c>
  403e54:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403e58:	mov	w9, #0x1                   	// #1
  403e5c:	strb	w9, [x8, #3548]
  403e60:	b	403ce8 <wcrtomb@plt+0x1328>
  403e64:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403e68:	mov	w9, #0x1                   	// #1
  403e6c:	strb	w9, [x8, #1280]
  403e70:	b	403ce8 <wcrtomb@plt+0x1328>
  403e74:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403e78:	mov	w9, #0x1                   	// #1
  403e7c:	strb	w9, [x8, #1236]
  403e80:	b	403ce8 <wcrtomb@plt+0x1328>
  403e84:	mov	w8, #0x1                   	// #1
  403e88:	str	w8, [sp, #16]
  403e8c:	b	403ce8 <wcrtomb@plt+0x1328>
  403e90:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403e94:	mov	w9, #0x1                   	// #1
  403e98:	strb	w9, [x8, #1221]
  403e9c:	b	403ce8 <wcrtomb@plt+0x1328>
  403ea0:	mov	w8, #0xffffffff            	// #-1
  403ea4:	str	w8, [sp, #16]
  403ea8:	b	403ce8 <wcrtomb@plt+0x1328>
  403eac:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403eb0:	mov	w9, #0x2                   	// #2
  403eb4:	str	w9, [x8, #1224]
  403eb8:	b	403ce8 <wcrtomb@plt+0x1328>
  403ebc:	ldr	x21, [x26, #1112]
  403ec0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403ec4:	add	x1, x1, #0x43a
  403ec8:	mov	x0, x21
  403ecc:	bl	402750 <strcmp@plt>
  403ed0:	cbz	w0, 4042f0 <wcrtomb@plt+0x1930>
  403ed4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  403ed8:	add	x1, x1, #0x43f
  403edc:	mov	x0, x21
  403ee0:	bl	402750 <strcmp@plt>
  403ee4:	cbnz	w0, 404990 <wcrtomb@plt+0x1fd0>
  403ee8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403eec:	mov	w9, #0x2                   	// #2
  403ef0:	str	w9, [x8, #1212]
  403ef4:	b	403ce8 <wcrtomb@plt+0x1328>
  403ef8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403efc:	mov	w9, #0x1                   	// #1
  403f00:	strb	w9, [x8, #1232]
  403f04:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f08:	mov	w9, #0x3                   	// #3
  403f0c:	str	w9, [x8, #880]
  403f10:	mov	w25, w28
  403f14:	b	403ce8 <wcrtomb@plt+0x1328>
  403f18:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f1c:	mov	w9, #0x1                   	// #1
  403f20:	strb	w9, [x8, #1229]
  403f24:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f28:	str	wzr, [x8, #992]
  403f2c:	b	403ce8 <wcrtomb@plt+0x1328>
  403f30:	ldr	x0, [x26, #1112]
  403f34:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f38:	add	x1, x1, #0x4b0
  403f3c:	bl	404c24 <wcrtomb@plt+0x2264>
  403f40:	b	403ce8 <wcrtomb@plt+0x1328>
  403f44:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f48:	strb	wzr, [x8, #1176]
  403f4c:	b	403ce8 <wcrtomb@plt+0x1328>
  403f50:	ldr	x0, [x26, #1112]
  403f54:	sub	x1, x29, #0x38
  403f58:	bl	404c24 <wcrtomb@plt+0x2264>
  403f5c:	b	403ce8 <wcrtomb@plt+0x1328>
  403f60:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f64:	mov	w9, #0x1                   	// #1
  403f68:	strb	w9, [x8, #1223]
  403f6c:	b	403ce8 <wcrtomb@plt+0x1328>
  403f70:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403f74:	ldr	x1, [x26, #1112]
  403f78:	ldr	x5, [x8, #984]
  403f7c:	adrp	x21, 423000 <_obstack_memory_used@@Base+0xcbcc>
  403f80:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  403f84:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xcbcc>
  403f88:	add	x21, x21, #0xc28
  403f8c:	add	x0, x0, #0x46c
  403f90:	add	x2, x2, #0xc38
  403f94:	mov	w4, #0x4                   	// #4
  403f98:	mov	x3, x21
  403f9c:	bl	409b44 <wcrtomb@plt+0x7184>
  403fa0:	ldr	w8, [x21, x0, lsl #2]
  403fa4:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403fa8:	cmp	x0, #0x1
  403fac:	csel	w25, w28, w25, eq  // eq = none
  403fb0:	str	w8, [x9, #880]
  403fb4:	b	403ce8 <wcrtomb@plt+0x1328>
  403fb8:	mov	w8, #0x1                   	// #1
  403fbc:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403fc0:	strb	w8, [x9, #1208]
  403fc4:	b	403ce8 <wcrtomb@plt+0x1328>
  403fc8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403fcc:	mov	w9, #0x1                   	// #1
  403fd0:	strb	w9, [x8, #1233]
  403fd4:	b	403ce8 <wcrtomb@plt+0x1328>
  403fd8:	ldr	x0, [x26, #1112]
  403fdc:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x20bcc>
  403fe0:	add	x1, x1, #0x4a8
  403fe4:	bl	404c24 <wcrtomb@plt+0x2264>
  403fe8:	b	403ce8 <wcrtomb@plt+0x1328>
  403fec:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  403ff0:	add	x0, x0, #0x461
  403ff4:	b	403cdc <wcrtomb@plt+0x131c>
  403ff8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  403ffc:	add	x0, x0, #0x4d7
  404000:	b	403cdc <wcrtomb@plt+0x131c>
  404004:	ldr	x8, [x26, #1112]
  404008:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40400c:	str	x8, [x9, #1288]
  404010:	b	403ce8 <wcrtomb@plt+0x1328>
  404014:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  404018:	add	x0, x0, #0x467
  40401c:	b	403cdc <wcrtomb@plt+0x131c>
  404020:	ldr	x0, [x26, #1112]
  404024:	bl	402380 <strlen@plt>
  404028:	ldp	x9, x8, [x27, #136]
  40402c:	mov	x21, x0
  404030:	add	x8, x0, x8
  404034:	add	x8, x8, #0x1
  404038:	cmp	x9, x8
  40403c:	b.cs	404054 <wcrtomb@plt+0x1694>  // b.hs, b.nlast
  404040:	ldr	x0, [x27, #152]
  404044:	sub	x1, x29, #0x30
  404048:	str	x8, [x27, #136]
  40404c:	bl	413c04 <wcrtomb@plt+0x11244>
  404050:	str	x0, [x27, #152]
  404054:	ldp	x8, x23, [x27, #144]
  404058:	ldr	x1, [x26, #1112]
  40405c:	mov	x2, x21
  404060:	add	x22, x23, x8
  404064:	mov	x0, x22
  404068:	bl	402320 <memcpy@plt>
  40406c:	ldr	x8, [x27, #144]
  404070:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  404074:	mov	w9, #0xa                   	// #10
  404078:	add	x1, x21, #0x1
  40407c:	add	x8, x8, x21
  404080:	add	x10, x8, #0x1
  404084:	add	x2, x2, #0x2cd
  404088:	mov	x0, x22
  40408c:	str	x10, [x27, #144]
  404090:	strb	w9, [x23, x8]
  404094:	bl	404d78 <wcrtomb@plt+0x23b8>
  404098:	b	403ce8 <wcrtomb@plt+0x1328>
  40409c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4040a0:	mov	w9, #0x1                   	// #1
  4040a4:	strb	w9, [x8, #1220]
  4040a8:	b	403ce8 <wcrtomb@plt+0x1328>
  4040ac:	ldr	x0, [x26, #1112]
  4040b0:	bl	40faf4 <wcrtomb@plt+0xd134>
  4040b4:	mov	x23, xzr
  4040b8:	b	4040ec <wcrtomb@plt+0x172c>
  4040bc:	ldr	x21, [x21, x23]
  4040c0:	ldr	x22, [x26, #1112]
  4040c4:	cmp	x23, #0x0
  4040c8:	cset	w0, ne  // ne = any
  4040cc:	bl	404e18 <wcrtomb@plt+0x2458>
  4040d0:	mov	w2, w0
  4040d4:	mov	x0, x21
  4040d8:	mov	x1, x22
  4040dc:	bl	410038 <wcrtomb@plt+0xd678>
  4040e0:	add	x23, x23, #0x8
  4040e4:	cmp	x23, #0x8
  4040e8:	b.ne	403ce8 <wcrtomb@plt+0x1328>  // b.any
  4040ec:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4040f0:	add	x21, x21, #0x4f0
  4040f4:	ldr	x8, [x21, x23]
  4040f8:	cbnz	x8, 4040bc <wcrtomb@plt+0x16fc>
  4040fc:	bl	40fbec <wcrtomb@plt+0xd22c>
  404100:	str	x0, [x21, x23]
  404104:	b	4040bc <wcrtomb@plt+0x16fc>
  404108:	mov	x28, xzr
  40410c:	ldr	x8, [x23, x28]
  404110:	cbnz	x8, 40411c <wcrtomb@plt+0x175c>
  404114:	bl	40fbec <wcrtomb@plt+0xd22c>
  404118:	str	x0, [x23, x28]
  40411c:	ldr	x21, [x23, x28]
  404120:	ldr	x22, [x26, #1112]
  404124:	cmp	x28, #0x0
  404128:	cset	w0, ne  // ne = any
  40412c:	bl	404e18 <wcrtomb@plt+0x2458>
  404130:	mov	w3, w0
  404134:	adrp	x0, 410000 <wcrtomb@plt+0xd640>
  404138:	add	x0, x0, #0x38
  40413c:	mov	w4, #0xa                   	// #10
  404140:	mov	x1, x21
  404144:	mov	x2, x22
  404148:	bl	410500 <wcrtomb@plt+0xdb40>
  40414c:	cbnz	w0, 404968 <wcrtomb@plt+0x1fa8>
  404150:	add	x28, x28, #0x8
  404154:	cmp	x28, #0x8
  404158:	b.eq	40410c <wcrtomb@plt+0x174c>  // b.none
  40415c:	b	403ce8 <wcrtomb@plt+0x1328>
  404160:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404164:	mov	w9, #0x1                   	// #1
  404168:	strb	w9, [x8, #1222]
  40416c:	b	403ce8 <wcrtomb@plt+0x1328>
  404170:	ldr	x0, [x26, #1112]
  404174:	b	403cdc <wcrtomb@plt+0x131c>
  404178:	ldr	x0, [x26, #1112]
  40417c:	adrp	x3, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404180:	adrp	x4, 425000 <_obstack_memory_used@@Base+0xebcc>
  404184:	add	x3, x3, #0x4a0
  404188:	add	x4, x4, #0x2cd
  40418c:	mov	w2, #0xa                   	// #10
  404190:	mov	x1, xzr
  404194:	bl	413d14 <wcrtomb@plt+0x11354>
  404198:	cmp	w0, #0x2
  40419c:	b.cc	403ce8 <wcrtomb@plt+0x1328>  // b.lo, b.ul, b.last
  4041a0:	b	40499c <wcrtomb@plt+0x1fdc>
  4041a4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4041a8:	mov	w9, #0x1                   	// #1
  4041ac:	strb	w9, [x8, #1228]
  4041b0:	b	403ce8 <wcrtomb@plt+0x1328>
  4041b4:	ldr	x21, [x26, #1112]
  4041b8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4041bc:	add	x1, x1, #0x47a
  4041c0:	mov	x0, x21
  4041c4:	bl	402750 <strcmp@plt>
  4041c8:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4041cc:	cbz	w0, 404300 <wcrtomb@plt+0x1940>
  4041d0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4041d4:	add	x1, x1, #0x674
  4041d8:	mov	x0, x21
  4041dc:	bl	4024b0 <fopen@plt>
  4041e0:	mov	x21, x0
  4041e4:	cbnz	x0, 404304 <wcrtomb@plt+0x1944>
  4041e8:	b	404968 <wcrtomb@plt+0x1fa8>
  4041ec:	ldr	x21, [x26, #1112]
  4041f0:	cbz	x21, 4042d4 <wcrtomb@plt+0x1914>
  4041f4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4041f8:	add	x1, x1, #0x215
  4041fc:	mov	x0, x21
  404200:	bl	409f68 <wcrtomb@plt+0x75a8>
  404204:	cbz	w0, 4042c4 <wcrtomb@plt+0x1904>
  404208:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40420c:	add	x1, x1, #0x4af
  404210:	mov	x0, x21
  404214:	bl	409f68 <wcrtomb@plt+0x75a8>
  404218:	cbz	w0, 4042c4 <wcrtomb@plt+0x1904>
  40421c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404220:	add	x1, x1, #0x4b3
  404224:	mov	x0, x21
  404228:	bl	409f68 <wcrtomb@plt+0x75a8>
  40422c:	cbz	w0, 4042c4 <wcrtomb@plt+0x1904>
  404230:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404234:	add	x1, x1, #0x4b9
  404238:	mov	x0, x21
  40423c:	bl	409f68 <wcrtomb@plt+0x75a8>
  404240:	cbz	w0, 4043cc <wcrtomb@plt+0x1a0c>
  404244:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404248:	add	x1, x1, #0x4bf
  40424c:	mov	x0, x21
  404250:	bl	409f68 <wcrtomb@plt+0x75a8>
  404254:	cbz	w0, 4043cc <wcrtomb@plt+0x1a0c>
  404258:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40425c:	add	x1, x1, #0x4c2
  404260:	mov	x0, x21
  404264:	bl	409f68 <wcrtomb@plt+0x75a8>
  404268:	cbz	w0, 4043cc <wcrtomb@plt+0x1a0c>
  40426c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404270:	add	x1, x1, #0x4c7
  404274:	mov	x0, x21
  404278:	bl	409f68 <wcrtomb@plt+0x75a8>
  40427c:	cbz	w0, 4042d4 <wcrtomb@plt+0x1914>
  404280:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404284:	add	x1, x1, #0x4cf
  404288:	mov	x0, x21
  40428c:	bl	409f68 <wcrtomb@plt+0x75a8>
  404290:	cbz	w0, 4042d4 <wcrtomb@plt+0x1914>
  404294:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404298:	add	x1, x1, #0x4cc
  40429c:	mov	x0, x21
  4042a0:	bl	409f68 <wcrtomb@plt+0x75a8>
  4042a4:	cbz	w0, 4042d4 <wcrtomb@plt+0x1914>
  4042a8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4042ac:	mov	w9, #0x1                   	// #1
  4042b0:	str	w9, [x8, #1244]
  4042b4:	b	403ce8 <wcrtomb@plt+0x1328>
  4042b8:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4042bc:	strb	wzr, [x8, #3550]
  4042c0:	b	403ce8 <wcrtomb@plt+0x1328>
  4042c4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4042c8:	mov	w9, #0x1                   	// #1
  4042cc:	str	w9, [x8, #1240]
  4042d0:	b	403ce8 <wcrtomb@plt+0x1328>
  4042d4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4042d8:	mov	w9, #0x2                   	// #2
  4042dc:	str	w9, [x8, #1240]
  4042e0:	b	403ce8 <wcrtomb@plt+0x1328>
  4042e4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4042e8:	str	wzr, [x8, #1216]
  4042ec:	b	403ce8 <wcrtomb@plt+0x1328>
  4042f0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4042f4:	mov	w9, #0x1                   	// #1
  4042f8:	str	w9, [x8, #1212]
  4042fc:	b	403ce8 <wcrtomb@plt+0x1328>
  404300:	ldr	x21, [x28, #1136]
  404304:	ldr	x23, [x27, #144]
  404308:	ldp	x9, x8, [x27, #136]
  40430c:	add	x8, x8, #0x1
  404310:	cmp	x9, x8
  404314:	b.hi	404328 <wcrtomb@plt+0x1968>  // b.pmore
  404318:	ldr	x0, [x27, #152]
  40431c:	sub	x1, x29, #0x30
  404320:	bl	413c04 <wcrtomb@plt+0x11244>
  404324:	str	x0, [x27, #152]
  404328:	ldp	x9, x8, [x27, #136]
  40432c:	ldr	x10, [x27, #152]
  404330:	mov	w1, #0x1                   	// #1
  404334:	mov	x3, x21
  404338:	mvn	x11, x8
  40433c:	add	x2, x9, x11
  404340:	add	x0, x10, x8
  404344:	bl	402710 <fread_unlocked@plt>
  404348:	cbz	x0, 40435c <wcrtomb@plt+0x199c>
  40434c:	ldr	x8, [x27, #144]
  404350:	add	x8, x8, x0
  404354:	str	x8, [x27, #144]
  404358:	b	404308 <wcrtomb@plt+0x1948>
  40435c:	bl	402930 <__errno_location@plt>
  404360:	ldr	w22, [x0]
  404364:	mov	x0, x21
  404368:	bl	4023f0 <ferror_unlocked@plt>
  40436c:	cbnz	w0, 4049c0 <wcrtomb@plt+0x2000>
  404370:	ldr	x8, [x28, #1136]
  404374:	cmp	x21, x8
  404378:	b.eq	404384 <wcrtomb@plt+0x19c4>  // b.none
  40437c:	mov	x0, x21
  404380:	bl	402480 <fclose@plt>
  404384:	ldr	x8, [x27, #144]
  404388:	cmp	x23, x8
  40438c:	b.eq	4043b4 <wcrtomb@plt+0x19f4>  // b.none
  404390:	ldr	x9, [x27, #152]
  404394:	add	x10, x8, x9
  404398:	ldurb	w10, [x10, #-1]
  40439c:	cmp	w10, #0xa
  4043a0:	b.eq	4043b4 <wcrtomb@plt+0x19f4>  // b.none
  4043a4:	add	x10, x8, #0x1
  4043a8:	mov	w11, #0xa                   	// #10
  4043ac:	str	x10, [x27, #144]
  4043b0:	strb	w11, [x9, x8]
  4043b4:	ldp	x9, x8, [x27, #144]
  4043b8:	ldr	x2, [x26, #1112]
  4043bc:	add	x0, x8, x23
  4043c0:	sub	x1, x9, x23
  4043c4:	bl	404d78 <wcrtomb@plt+0x23b8>
  4043c8:	b	403ce8 <wcrtomb@plt+0x1328>
  4043cc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4043d0:	str	wzr, [x8, #1240]
  4043d4:	b	403ce8 <wcrtomb@plt+0x1328>
  4043d8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4043dc:	ldrb	w8, [x8, #1221]
  4043e0:	cmp	w8, #0x1
  4043e4:	b.ne	404434 <wcrtomb@plt+0x1a74>  // b.any
  4043e8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4043ec:	ldr	x19, [x8, #1128]
  4043f0:	bl	410728 <wcrtomb@plt+0xdd68>
  4043f4:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  4043f8:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  4043fc:	mov	x1, x0
  404400:	add	x2, x2, #0x4d3
  404404:	add	x3, x3, #0x4dc
  404408:	mov	x0, x19
  40440c:	mov	x4, xzr
  404410:	bl	4139cc <wcrtomb@plt+0x1100c>
  404414:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404418:	add	x1, x1, #0x4e0
  40441c:	mov	w2, #0x5                   	// #5
  404420:	mov	x0, xzr
  404424:	bl	402890 <dcgettext@plt>
  404428:	bl	402700 <puts@plt>
  40442c:	mov	w0, wzr
  404430:	b	404940 <wcrtomb@plt+0x1f80>
  404434:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404438:	ldr	w8, [x8, #1244]
  40443c:	cbnz	w8, 4049d8 <wcrtomb@plt+0x2018>
  404440:	ldr	x8, [x27, #152]
  404444:	cbz	x8, 40445c <wcrtomb@plt+0x1a9c>
  404448:	ldr	x8, [x27, #144]
  40444c:	cbz	x8, 4044b4 <wcrtomb@plt+0x1af4>
  404450:	sub	x8, x8, #0x1
  404454:	str	x8, [x27, #144]
  404458:	b	4044d4 <wcrtomb@plt+0x1b14>
  40445c:	ldrsw	x19, [x24, #1120]
  404460:	cmp	w19, w22
  404464:	b.ge	404960 <wcrtomb@plt+0x1fa0>  // b.tcont
  404468:	ldr	x23, [x21, x19, lsl #3]
  40446c:	mov	x0, x23
  404470:	bl	402380 <strlen@plt>
  404474:	str	x0, [x27, #144]
  404478:	add	w8, w19, #0x1
  40447c:	add	x1, x0, #0x1
  404480:	mov	x0, x23
  404484:	str	w8, [x24, #1120]
  404488:	bl	413c60 <wcrtomb@plt+0x112a0>
  40448c:	ldr	x1, [x27, #144]
  404490:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  404494:	add	x2, x2, #0x2cd
  404498:	str	x0, [x27, #152]
  40449c:	bl	404d78 <wcrtomb@plt+0x23b8>
  4044a0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4044a4:	ldr	x9, [x8, #1296]
  4044a8:	add	x9, x9, #0x1
  4044ac:	str	x9, [x8, #1296]
  4044b0:	b	4044d4 <wcrtomb@plt+0x1b14>
  4044b4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4044b8:	ldrb	w9, [x8, #1236]
  4044bc:	adrp	x10, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4044c0:	adrp	x11, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4044c4:	strb	wzr, [x10, #3548]
  4044c8:	eor	w9, w9, #0x1
  4044cc:	strb	w9, [x8, #1236]
  4044d0:	strb	wzr, [x11, #3549]
  4044d4:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4044d8:	ldrb	w8, [x23, #1229]
  4044dc:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4044e0:	tbnz	w8, #0, 4044f4 <wcrtomb@plt+0x1b34>
  4044e4:	add	x1, sp, #0x98
  4044e8:	mov	w0, #0x1                   	// #1
  4044ec:	bl	423850 <_obstack_memory_used@@Base+0xd41c>
  4044f0:	cbz	w0, 404600 <wcrtomb@plt+0x1c40>
  4044f4:	mov	w8, wzr
  4044f8:	ldrb	w10, [x23, #1229]
  4044fc:	cmp	w10, #0x1
  404500:	b.ne	40450c <wcrtomb@plt+0x1b4c>  // b.any
  404504:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404508:	str	wzr, [x9, #1224]
  40450c:	ldrb	w11, [x19, #1432]
  404510:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404514:	ldr	w9, [x9, #1224]
  404518:	orr	w11, w10, w11
  40451c:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404520:	tbnz	w11, #0, 404528 <wcrtomb@plt+0x1b68>
  404524:	cbz	w9, 404538 <wcrtomb@plt+0x1b78>
  404528:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40452c:	mov	w12, #0x1                   	// #1
  404530:	strb	wzr, [x11, #1223]
  404534:	strb	w12, [x10, #1436]
  404538:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40453c:	ldrb	w10, [x10, #1436]
  404540:	ldrb	w11, [x11, #1223]
  404544:	adrp	x13, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404548:	ldr	x12, [x13, #1200]
  40454c:	orr	w10, w10, w11
  404550:	and	w10, w10, #0x1
  404554:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404558:	strb	w10, [x11, #1440]
  40455c:	tbz	x12, #63, 404568 <wcrtomb@plt+0x1ba8>
  404560:	ldr	x10, [x27, #128]
  404564:	str	x10, [x13, #1200]
  404568:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40456c:	ldr	x10, [x11, #1192]
  404570:	tbz	x10, #63, 40457c <wcrtomb@plt+0x1bbc>
  404574:	ldr	x10, [x27, #128]
  404578:	str	x10, [x11, #1192]
  40457c:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404580:	ldr	x10, [x10, #1184]
  404584:	cbz	x10, 4045c8 <wcrtomb@plt+0x1c08>
  404588:	cmp	w9, #0x2
  40458c:	b.eq	4045d0 <wcrtomb@plt+0x1c10>  // b.none
  404590:	ldr	x9, [x27, #144]
  404594:	cbnz	x9, 4045d0 <wcrtomb@plt+0x1c10>
  404598:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40459c:	ldrb	w9, [x9, #1236]
  4045a0:	cbz	w9, 4045d0 <wcrtomb@plt+0x1c10>
  4045a4:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4045a8:	adrp	x10, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4045ac:	ldrb	w9, [x9, #3549]
  4045b0:	ldrb	w10, [x10, #3548]
  4045b4:	orr	w9, w10, w9
  4045b8:	tst	w9, #0xff
  4045bc:	b.ne	4045d0 <wcrtomb@plt+0x1c10>  // b.any
  4045c0:	mov	w0, #0x1                   	// #1
  4045c4:	b	404940 <wcrtomb@plt+0x1f80>
  4045c8:	cmp	w9, #0x2
  4045cc:	b.ne	4045c0 <wcrtomb@plt+0x1c00>  // b.any
  4045d0:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4045d4:	ldr	w9, [x19, #1240]
  4045d8:	cmp	w9, #0x2
  4045dc:	b.ne	404698 <wcrtomb@plt+0x1cd8>  // b.any
  4045e0:	cbz	w8, 404694 <wcrtomb@plt+0x1cd4>
  4045e4:	bl	414070 <wcrtomb@plt+0x116b0>
  4045e8:	cbz	w0, 404690 <wcrtomb@plt+0x1cd0>
  4045ec:	mov	w0, #0x1                   	// #1
  4045f0:	bl	402830 <isatty@plt>
  4045f4:	cmp	w0, #0x0
  4045f8:	cset	w8, ne  // ne = any
  4045fc:	b	404694 <wcrtomb@plt+0x1cd4>
  404600:	ldr	w8, [sp, #168]
  404604:	and	w8, w8, #0xf000
  404608:	cmp	w8, #0x2, lsl #12
  40460c:	b.eq	404648 <wcrtomb@plt+0x1c88>  // b.none
  404610:	cmp	w8, #0x8, lsl #12
  404614:	b.ne	4044f4 <wcrtomb@plt+0x1b34>  // b.any
  404618:	ldp	q0, q1, [x27, #64]
  40461c:	ldp	q2, q3, [x27, #96]
  404620:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404624:	add	x9, x9, #0x518
  404628:	stp	q0, q1, [x9, #64]
  40462c:	ldp	q0, q1, [x27]
  404630:	stp	q2, q3, [x9, #96]
  404634:	ldp	q2, q3, [x27, #32]
  404638:	mov	w8, wzr
  40463c:	stp	q0, q1, [x9]
  404640:	stp	q2, q3, [x9, #32]
  404644:	b	4044f8 <wcrtomb@plt+0x1b38>
  404648:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  40464c:	add	x0, x0, #0x53d
  404650:	add	x1, sp, #0x18
  404654:	bl	423840 <_obstack_memory_used@@Base+0xd40c>
  404658:	cbnz	w0, 404688 <wcrtomb@plt+0x1cc8>
  40465c:	ldr	x8, [x27, #8]
  404660:	ldr	x9, [sp, #32]
  404664:	cmp	x8, x9
  404668:	b.ne	404688 <wcrtomb@plt+0x1cc8>  // b.any
  40466c:	ldr	x8, [x27]
  404670:	ldr	x9, [sp, #24]
  404674:	cmp	x8, x9
  404678:	mov	w8, #0x1                   	// #1
  40467c:	b.ne	4044f8 <wcrtomb@plt+0x1b38>  // b.any
  404680:	strb	w8, [x19, #1432]
  404684:	b	4044f4 <wcrtomb@plt+0x1b34>
  404688:	mov	w8, #0x1                   	// #1
  40468c:	b	4044f8 <wcrtomb@plt+0x1b38>
  404690:	mov	w8, wzr
  404694:	str	w8, [x19, #1240]
  404698:	bl	4140a4 <wcrtomb@plt+0x116e4>
  40469c:	ldr	w8, [x19, #1240]
  4046a0:	cbz	w8, 4046d0 <wcrtomb@plt+0x1d10>
  4046a4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  4046a8:	add	x0, x0, #0x547
  4046ac:	bl	402950 <getenv@plt>
  4046b0:	cbz	x0, 4046cc <wcrtomb@plt+0x1d0c>
  4046b4:	ldrb	w8, [x0]
  4046b8:	cbz	w8, 4046cc <wcrtomb@plt+0x1d0c>
  4046bc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4046c0:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4046c4:	str	x0, [x8, #896]
  4046c8:	str	x0, [x9, #904]
  4046cc:	bl	404e2c <wcrtomb@plt+0x246c>
  4046d0:	bl	404f4c <wcrtomb@plt+0x258c>
  4046d4:	bic	w20, w20, w20, asr #31
  4046d8:	cmp	w20, #0x2
  4046dc:	b.ne	404750 <wcrtomb@plt+0x1d90>  // b.any
  4046e0:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4046e4:	ldrb	w8, [x8, #2264]
  4046e8:	cbz	w8, 40471c <wcrtomb@plt+0x1d5c>
  4046ec:	ldp	x1, x23, [x27, #144]
  4046f0:	mov	x0, x23
  4046f4:	bl	404fc4 <wcrtomb@plt+0x2604>
  4046f8:	tbnz	w0, #0, 404738 <wcrtomb@plt+0x1d78>
  4046fc:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404700:	ldrb	w8, [x8, #3550]
  404704:	cbz	w8, 404750 <wcrtomb@plt+0x1d90>
  404708:	ldr	x1, [x27, #144]
  40470c:	mov	x0, x23
  404710:	bl	405028 <wcrtomb@plt+0x2668>
  404714:	tbz	w0, #0, 404738 <wcrtomb@plt+0x1d78>
  404718:	b	404750 <wcrtomb@plt+0x1d90>
  40471c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404720:	ldr	x8, [x8, #1296]
  404724:	cmp	x8, #0x1
  404728:	b.ne	404750 <wcrtomb@plt+0x1d90>  // b.any
  40472c:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404730:	ldrb	w8, [x8, #3548]
  404734:	cbz	w8, 404750 <wcrtomb@plt+0x1d90>
  404738:	sub	x0, x29, #0x20
  40473c:	sub	x1, x29, #0x28
  404740:	bl	403a80 <wcrtomb@plt+0x10c0>
  404744:	ldr	w23, [sp, #16]
  404748:	mov	w20, wzr
  40474c:	b	404788 <wcrtomb@plt+0x1dc8>
  404750:	cmp	w20, #0x1
  404754:	b.hi	404784 <wcrtomb@plt+0x1dc4>  // b.pmore
  404758:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40475c:	ldr	x8, [x8, #1296]
  404760:	ldr	w23, [sp, #16]
  404764:	cmp	x8, #0x2
  404768:	b.cc	404788 <wcrtomb@plt+0x1dc8>  // b.lo, b.ul, b.last
  40476c:	ldr	x1, [x27, #152]
  404770:	sub	x2, x29, #0x28
  404774:	mov	w0, w20
  404778:	bl	405088 <wcrtomb@plt+0x26c8>
  40477c:	mov	w20, w0
  404780:	b	404788 <wcrtomb@plt+0x1dc8>
  404784:	ldr	w23, [sp, #16]
  404788:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xcbcc>
  40478c:	sxtw	x8, w20
  404790:	add	x9, x9, #0xc58
  404794:	add	x8, x9, x8, lsl #5
  404798:	ldp	x10, x9, [x8, #16]
  40479c:	ldp	x1, x0, [x27, #144]
  4047a0:	ldrsw	x2, [x8, #12]
  4047a4:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4047a8:	str	x9, [x19, #1448]
  4047ac:	blr	x10
  4047b0:	adrp	x10, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4047b4:	ldrb	w10, [x10, #2260]
  4047b8:	ldr	x11, [x19, #1448]
  4047bc:	add	x9, sp, #0x14
  4047c0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4047c4:	orr	x1, x9, #0x1
  4047c8:	add	x3, sp, #0x18
  4047cc:	mov	w2, #0x1                   	// #1
  4047d0:	mov	x4, xzr
  4047d4:	strb	wzr, [sp, #20]
  4047d8:	str	x0, [x8, #1456]
  4047dc:	strb	w10, [sp, #21]
  4047e0:	strb	wzr, [sp, #22]
  4047e4:	blr	x11
  4047e8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4047ec:	ldrb	w8, [x8, #1236]
  4047f0:	ldr	w10, [x24, #1120]
  4047f4:	cmp	x0, #0x0
  4047f8:	cset	w11, eq  // eq = none
  4047fc:	eor	w8, w8, w11
  404800:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404804:	eor	w8, w8, #0x1
  404808:	sub	w19, w22, w10
  40480c:	strb	w8, [x9, #1464]
  404810:	cbnz	w23, 404830 <wcrtomb@plt+0x1e70>
  404814:	cmp	w19, #0x1
  404818:	b.gt	404830 <wcrtomb@plt+0x1e70>
  40481c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404820:	ldr	w8, [x8, #880]
  404824:	cmp	w8, #0x3
  404828:	csetm	w8, eq  // eq = none
  40482c:	b	404838 <wcrtomb@plt+0x1e78>
  404830:	mvn	w8, w23
  404834:	lsr	w8, w8, #31
  404838:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40483c:	mov	w0, #0x1e                  	// #30
  404840:	str	w8, [x9, #1468]
  404844:	bl	402840 <sysconf@plt>
  404848:	cmp	x0, #0x1
  40484c:	b.lt	4049e0 <wcrtomb@plt+0x2020>  // b.tstop
  404850:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
  404854:	cmp	x0, x8
  404858:	b.cs	4049e0 <wcrtomb@plt+0x2020>  // b.hs, b.nlast
  40485c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404860:	mov	w9, #0x18000               	// #98304
  404864:	str	x0, [x8, #1472]
  404868:	udiv	x8, x9, x0
  40486c:	msub	x8, x8, x0, x9
  404870:	sub	x10, x0, x8
  404874:	cmp	x8, #0x0
  404878:	add	x8, x10, #0x18, lsl #12
  40487c:	csel	x8, x9, x8, eq  // eq = none
  404880:	add	x8, x0, x8
  404884:	add	x0, x8, #0x8
  404888:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40488c:	str	x0, [x8, #1480]
  404890:	bl	413ae8 <wcrtomb@plt+0x11128>
  404894:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404898:	ldrb	w8, [x8, #1232]
  40489c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4048a0:	str	x0, [x9, #1488]
  4048a4:	cmp	w8, #0x1
  4048a8:	b.ne	4048c0 <wcrtomb@plt+0x1f00>  // b.any
  4048ac:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4048b0:	ldr	w9, [x8, #1212]
  4048b4:	cbnz	w9, 4048c0 <wcrtomb@plt+0x1f00>
  4048b8:	mov	w9, #0x1                   	// #1
  4048bc:	str	w9, [x8, #1212]
  4048c0:	cmp	w19, #0x1
  4048c4:	b.lt	4048d4 <wcrtomb@plt+0x1f14>  // b.tstop
  4048c8:	ldrsw	x8, [x24, #1120]
  4048cc:	add	x8, x21, x8, lsl #3
  4048d0:	b	40490c <wcrtomb@plt+0x1f4c>
  4048d4:	ldr	w8, [sp, #12]
  4048d8:	cmp	w8, w25
  4048dc:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xcbcc>
  4048e0:	add	x8, x8, #0xd28
  4048e4:	b.ge	40490c <wcrtomb@plt+0x1f4c>  // b.tcont
  4048e8:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4048ec:	ldr	w9, [x9, #880]
  4048f0:	cmp	w9, #0x3
  4048f4:	b.ne	40490c <wcrtomb@plt+0x1f4c>  // b.any
  4048f8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4048fc:	mov	w9, #0x1                   	// #1
  404900:	strb	w9, [x8, #1496]
  404904:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xcbcc>
  404908:	add	x8, x8, #0xd18
  40490c:	add	x20, x8, #0x8
  404910:	mov	w19, #0x1                   	// #1
  404914:	ldur	x0, [x20, #-8]
  404918:	bl	405220 <wcrtomb@plt+0x2860>
  40491c:	ldr	x8, [x20], #8
  404920:	and	w19, w19, w0
  404924:	cbnz	x8, 404914 <wcrtomb@plt+0x1f54>
  404928:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40492c:	ldrb	w8, [x8, #1497]
  404930:	and	w9, w19, #0x1
  404934:	cmp	w8, #0x0
  404938:	mov	w8, #0x2                   	// #2
  40493c:	csel	w0, w8, w9, ne  // ne = any
  404940:	ldp	x20, x19, [sp, #416]
  404944:	ldp	x22, x21, [sp, #400]
  404948:	ldp	x24, x23, [sp, #384]
  40494c:	ldp	x26, x25, [sp, #368]
  404950:	ldp	x28, x27, [sp, #352]
  404954:	ldp	x29, x30, [sp, #336]
  404958:	add	sp, sp, #0x1b0
  40495c:	ret
  404960:	mov	w0, #0x2                   	// #2
  404964:	bl	403880 <wcrtomb@plt+0xec0>
  404968:	bl	402930 <__errno_location@plt>
  40496c:	ldr	w1, [x0]
  404970:	ldr	x3, [x26, #1112]
  404974:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  404978:	add	x2, x2, #0x91d
  40497c:	mov	w0, #0x2                   	// #2
  404980:	bl	4023b0 <error@plt>
  404984:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404988:	add	x1, x1, #0x495
  40498c:	b	4049a4 <wcrtomb@plt+0x1fe4>
  404990:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404994:	add	x1, x1, #0x444
  404998:	b	4049a4 <wcrtomb@plt+0x1fe4>
  40499c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4049a0:	add	x1, x1, #0x47c
  4049a4:	mov	w2, #0x5                   	// #5
  4049a8:	mov	x0, xzr
  4049ac:	bl	402890 <dcgettext@plt>
  4049b0:	mov	x2, x0
  4049b4:	mov	w0, #0x2                   	// #2
  4049b8:	mov	w1, wzr
  4049bc:	bl	4023b0 <error@plt>
  4049c0:	ldr	x3, [x26, #1112]
  4049c4:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  4049c8:	add	x2, x2, #0x91d
  4049cc:	mov	w0, #0x2                   	// #2
  4049d0:	mov	w1, w22
  4049d4:	bl	4023b0 <error@plt>
  4049d8:	mov	w0, wzr
  4049dc:	bl	403880 <wcrtomb@plt+0xec0>
  4049e0:	bl	4026c0 <abort@plt>
  4049e4:	stp	x29, x30, [sp, #-16]!
  4049e8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4049ec:	ldr	w8, [x8, #1500]
  4049f0:	mov	x29, sp
  4049f4:	cbz	w8, 404a00 <wcrtomb@plt+0x2040>
  4049f8:	ldp	x29, x30, [sp], #16
  4049fc:	ret
  404a00:	bl	409ff0 <wcrtomb@plt+0x7630>
  404a04:	ldp	x29, x30, [sp], #16
  404a08:	ret
  404a0c:	stp	x29, x30, [sp, #-80]!
  404a10:	stp	x26, x25, [sp, #16]
  404a14:	stp	x24, x23, [sp, #32]
  404a18:	stp	x22, x21, [sp, #48]
  404a1c:	stp	x20, x19, [sp, #64]
  404a20:	mov	x29, sp
  404a24:	cbz	x0, 404ac4 <wcrtomb@plt+0x2104>
  404a28:	ldrb	w8, [x0]
  404a2c:	mov	x20, x0
  404a30:	cbz	w8, 404ac4 <wcrtomb@plt+0x2104>
  404a34:	mov	x0, x20
  404a38:	mov	x21, x2
  404a3c:	mov	x22, x1
  404a40:	bl	402380 <strlen@plt>
  404a44:	add	x0, x0, #0x1
  404a48:	bl	413ae8 <wcrtomb@plt+0x11128>
  404a4c:	mov	x23, x0
  404a50:	mov	x0, x20
  404a54:	mov	x1, x23
  404a58:	mov	x2, xzr
  404a5c:	bl	405288 <wcrtomb@plt+0x28c8>
  404a60:	ldrsw	x8, [x22]
  404a64:	mov	w9, #0x7fffffff            	// #2147483647
  404a68:	sub	x9, x9, x8
  404a6c:	cmp	x0, x9
  404a70:	b.hi	404ae4 <wcrtomb@plt+0x2124>  // b.pmore
  404a74:	ldr	x25, [x21]
  404a78:	add	x26, x0, x8
  404a7c:	lsl	x8, x26, #3
  404a80:	mov	x19, x0
  404a84:	add	x0, x8, #0x8
  404a88:	bl	413ae8 <wcrtomb@plt+0x11128>
  404a8c:	str	w26, [x22]
  404a90:	str	x0, [x21]
  404a94:	ldr	x8, [x25], #8
  404a98:	mov	x24, x0
  404a9c:	mov	x0, x20
  404aa0:	mov	x1, x23
  404aa4:	str	x8, [x24], #8
  404aa8:	mov	x2, x24
  404aac:	bl	405288 <wcrtomb@plt+0x28c8>
  404ab0:	add	x8, x24, x0, lsl #3
  404ab4:	ldr	x9, [x25], #8
  404ab8:	str	x9, [x8], #8
  404abc:	cbnz	x9, 404ab4 <wcrtomb@plt+0x20f4>
  404ac0:	b	404ac8 <wcrtomb@plt+0x2108>
  404ac4:	mov	w19, wzr
  404ac8:	mov	w0, w19
  404acc:	ldp	x20, x19, [sp, #64]
  404ad0:	ldp	x22, x21, [sp, #48]
  404ad4:	ldp	x24, x23, [sp, #32]
  404ad8:	ldp	x26, x25, [sp, #16]
  404adc:	ldp	x29, x30, [sp], #80
  404ae0:	ret
  404ae4:	bl	413cd0 <wcrtomb@plt+0x11310>
  404ae8:	sub	sp, sp, #0x90
  404aec:	stp	x26, x25, [sp, #80]
  404af0:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404af4:	ldr	w26, [x25, #1120]
  404af8:	stp	x20, x19, [sp, #128]
  404afc:	mov	x19, x2
  404b00:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xcbcc>
  404b04:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xcbcc>
  404b08:	add	x2, x2, #0xd38
  404b0c:	add	x3, x3, #0xd78
  404b10:	mov	x4, xzr
  404b14:	stp	x29, x30, [sp, #48]
  404b18:	stp	x28, x27, [sp, #64]
  404b1c:	stp	x24, x23, [sp, #96]
  404b20:	stp	x22, x21, [sp, #112]
  404b24:	add	x29, sp, #0x30
  404b28:	mov	x21, x1
  404b2c:	mov	w22, w0
  404b30:	bl	402740 <getopt_long@plt>
  404b34:	mov	w20, w0
  404b38:	bl	409cf0 <wcrtomb@plt+0x7330>
  404b3c:	mov	x27, xzr
  404b40:	str	x19, [sp, #8]
  404b44:	tbz	w0, #0, 404bcc <wcrtomb@plt+0x220c>
  404b48:	adrp	x23, 423000 <_obstack_memory_used@@Base+0xcbcc>
  404b4c:	adrp	x24, 423000 <_obstack_memory_used@@Base+0xcbcc>
  404b50:	mov	w8, #0x1                   	// #1
  404b54:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404b58:	add	x19, sp, #0x14
  404b5c:	add	x23, x23, #0xd38
  404b60:	add	x24, x24, #0xd78
  404b64:	ldr	w9, [x28, #912]
  404b68:	ldrb	w10, [sp, #20]
  404b6c:	cmp	w9, w26
  404b70:	cset	w9, ne  // ne = any
  404b74:	cmp	w10, #0x30
  404b78:	orr	w8, w8, w9
  404b7c:	cset	w9, eq  // eq = none
  404b80:	sub	x9, x27, x9
  404b84:	tst	w8, #0x1
  404b88:	csel	x8, xzr, x9, ne  // ne = any
  404b8c:	cmp	x8, #0x15
  404b90:	b.eq	404c08 <wcrtomb@plt+0x2248>  // b.none
  404b94:	str	w26, [x28, #912]
  404b98:	ldr	w26, [x25, #1120]
  404b9c:	mov	w0, w22
  404ba0:	mov	x1, x21
  404ba4:	mov	x2, x23
  404ba8:	mov	x3, x24
  404bac:	mov	x4, xzr
  404bb0:	add	x27, x8, #0x1
  404bb4:	strb	w20, [x19, x8]
  404bb8:	bl	402740 <getopt_long@plt>
  404bbc:	mov	w20, w0
  404bc0:	bl	409cf0 <wcrtomb@plt+0x7330>
  404bc4:	mov	w8, wzr
  404bc8:	tbnz	w0, #0, 404b64 <wcrtomb@plt+0x21a4>
  404bcc:	cbz	x27, 404be4 <wcrtomb@plt+0x2224>
  404bd0:	ldr	x1, [sp, #8]
  404bd4:	add	x8, sp, #0x14
  404bd8:	add	x0, sp, #0x14
  404bdc:	strb	wzr, [x8, x27]
  404be0:	bl	404c24 <wcrtomb@plt+0x2264>
  404be4:	mov	w0, w20
  404be8:	ldp	x20, x19, [sp, #128]
  404bec:	ldp	x22, x21, [sp, #112]
  404bf0:	ldp	x24, x23, [sp, #96]
  404bf4:	ldp	x26, x25, [sp, #80]
  404bf8:	ldp	x28, x27, [sp, #64]
  404bfc:	ldp	x29, x30, [sp, #48]
  404c00:	add	sp, sp, #0x90
  404c04:	ret
  404c08:	mov	w10, #0x2e2e                	// #11822
  404c0c:	add	x9, sp, #0x14
  404c10:	movk	w10, #0x2e, lsl #16
  404c14:	str	w10, [x9, x8]
  404c18:	add	x27, x8, #0x3
  404c1c:	cbnz	x27, 404bd0 <wcrtomb@plt+0x2210>
  404c20:	b	404be4 <wcrtomb@plt+0x2224>
  404c24:	stp	x29, x30, [sp, #-32]!
  404c28:	stp	x20, x19, [sp, #16]
  404c2c:	mov	x20, x1
  404c30:	adrp	x4, 425000 <_obstack_memory_used@@Base+0xebcc>
  404c34:	add	x4, x4, #0x2cd
  404c38:	mov	w2, #0xa                   	// #10
  404c3c:	mov	x1, xzr
  404c40:	mov	x3, x20
  404c44:	mov	x29, sp
  404c48:	mov	x19, x0
  404c4c:	bl	413d14 <wcrtomb@plt+0x11354>
  404c50:	cmp	w0, #0x1
  404c54:	b.hi	404c6c <wcrtomb@plt+0x22ac>  // b.pmore
  404c58:	ldr	x8, [x20]
  404c5c:	tbnz	x8, #63, 404c6c <wcrtomb@plt+0x22ac>
  404c60:	ldp	x20, x19, [sp, #16]
  404c64:	ldp	x29, x30, [sp], #32
  404c68:	ret
  404c6c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404c70:	add	x1, x1, #0x733
  404c74:	mov	w2, #0x5                   	// #5
  404c78:	mov	x0, xzr
  404c7c:	bl	402890 <dcgettext@plt>
  404c80:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  404c84:	mov	x4, x0
  404c88:	add	x2, x2, #0x846
  404c8c:	mov	w0, #0x2                   	// #2
  404c90:	mov	w1, wzr
  404c94:	mov	x3, x19
  404c98:	bl	4023b0 <error@plt>
  404c9c:	stp	x29, x30, [sp, #-64]!
  404ca0:	stp	x22, x21, [sp, #32]
  404ca4:	adrp	x22, 423000 <_obstack_memory_used@@Base+0xcbcc>
  404ca8:	str	x23, [sp, #16]
  404cac:	stp	x20, x19, [sp, #48]
  404cb0:	mov	w21, w1
  404cb4:	mov	x19, x0
  404cb8:	mov	x20, xzr
  404cbc:	mov	w23, w1
  404cc0:	add	x22, x22, #0xc58
  404cc4:	mov	x29, sp
  404cc8:	mov	x0, x19
  404ccc:	mov	x1, x22
  404cd0:	bl	402750 <strcmp@plt>
  404cd4:	cbz	w0, 404d20 <wcrtomb@plt+0x2360>
  404cd8:	add	x20, x20, #0x1
  404cdc:	cmp	x20, #0x6
  404ce0:	add	x22, x22, #0x20
  404ce4:	b.ne	404cc8 <wcrtomb@plt+0x2308>  // b.any
  404ce8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404cec:	add	x1, x1, #0x467
  404cf0:	mov	x0, x19
  404cf4:	bl	402750 <strcmp@plt>
  404cf8:	cbnz	w0, 404d44 <wcrtomb@plt+0x2384>
  404cfc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404d00:	add	x1, x1, #0x772
  404d04:	mov	w2, #0x5                   	// #5
  404d08:	mov	x0, xzr
  404d0c:	bl	402890 <dcgettext@plt>
  404d10:	mov	x2, x0
  404d14:	mov	w0, #0x2                   	// #2
  404d18:	mov	w1, wzr
  404d1c:	bl	4023b0 <error@plt>
  404d20:	tbnz	w23, #31, 404d2c <wcrtomb@plt+0x236c>
  404d24:	cmp	w21, w20
  404d28:	b.ne	404d6c <wcrtomb@plt+0x23ac>  // b.any
  404d2c:	mov	w0, w20
  404d30:	ldp	x20, x19, [sp, #48]
  404d34:	ldp	x22, x21, [sp, #32]
  404d38:	ldr	x23, [sp, #16]
  404d3c:	ldp	x29, x30, [sp], #64
  404d40:	ret
  404d44:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404d48:	add	x1, x1, #0x7af
  404d4c:	mov	w2, #0x5                   	// #5
  404d50:	mov	x0, xzr
  404d54:	bl	402890 <dcgettext@plt>
  404d58:	mov	x2, x0
  404d5c:	mov	w0, #0x2                   	// #2
  404d60:	mov	w1, wzr
  404d64:	mov	x3, x19
  404d68:	bl	4023b0 <error@plt>
  404d6c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  404d70:	add	x1, x1, #0x753
  404d74:	b	404d04 <wcrtomb@plt+0x2344>
  404d78:	stp	x29, x30, [sp, #-64]!
  404d7c:	stp	x22, x21, [sp, #32]
  404d80:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404d84:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404d88:	ldr	x8, [x8, #1504]
  404d8c:	ldr	x9, [x22, #1160]
  404d90:	stp	x24, x23, [sp, #16]
  404d94:	stp	x20, x19, [sp, #48]
  404d98:	mov	x20, x2
  404d9c:	mov	x19, x1
  404da0:	mov	x21, x0
  404da4:	cmp	x8, x9
  404da8:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404dac:	mov	x29, sp
  404db0:	b.hi	404dcc <wcrtomb@plt+0x240c>  // b.pmore
  404db4:	ldr	x0, [x23, #1168]
  404db8:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404dbc:	add	x1, x1, #0x5e0
  404dc0:	mov	w2, #0x10                  	// #16
  404dc4:	bl	413b84 <wcrtomb@plt+0x111c4>
  404dc8:	str	x0, [x23, #1168]
  404dcc:	ldr	x8, [x23, #1168]
  404dd0:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404dd4:	ldr	x9, [x22, #1160]
  404dd8:	ldr	x24, [x23, #1296]
  404ddc:	mov	x0, x21
  404de0:	mov	x1, x19
  404de4:	add	x8, x8, x9, lsl #4
  404de8:	add	x9, x9, #0x1
  404dec:	add	x10, x24, #0x1
  404df0:	stp	x20, x10, [x8]
  404df4:	str	x9, [x22, #1160]
  404df8:	bl	405348 <wcrtomb@plt+0x2988>
  404dfc:	add	x8, x0, x24
  404e00:	str	x8, [x23, #1296]
  404e04:	ldp	x20, x19, [sp, #48]
  404e08:	ldp	x22, x21, [sp, #32]
  404e0c:	ldp	x24, x23, [sp, #16]
  404e10:	ldp	x29, x30, [sp], #64
  404e14:	ret
  404e18:	tst	w0, #0x1
  404e1c:	mov	w8, #0x50000000            	// #1342177280
  404e20:	mov	w9, #0x10000000            	// #268435456
  404e24:	csel	w0, w9, w8, ne  // ne = any
  404e28:	ret
  404e2c:	stp	x29, x30, [sp, #-80]!
  404e30:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  404e34:	add	x0, x0, #0x7d0
  404e38:	stp	x26, x25, [sp, #16]
  404e3c:	stp	x24, x23, [sp, #32]
  404e40:	stp	x22, x21, [sp, #48]
  404e44:	stp	x20, x19, [sp, #64]
  404e48:	mov	x29, sp
  404e4c:	bl	402950 <getenv@plt>
  404e50:	cbz	x0, 404f34 <wcrtomb@plt+0x2574>
  404e54:	ldrb	w8, [x0]
  404e58:	cbz	w8, 404f34 <wcrtomb@plt+0x2574>
  404e5c:	bl	413ca4 <wcrtomb@plt+0x112e4>
  404e60:	adrp	x21, 424000 <_obstack_memory_used@@Base+0xdbcc>
  404e64:	adrp	x22, 425000 <_obstack_memory_used@@Base+0xebcc>
  404e68:	adrp	x23, 424000 <_obstack_memory_used@@Base+0xdbcc>
  404e6c:	mov	x19, x0
  404e70:	mov	x25, xzr
  404e74:	add	x21, x21, #0x3e0
  404e78:	add	x22, x22, #0x7dc
  404e7c:	add	x23, x23, #0x4e8
  404e80:	mov	x24, x0
  404e84:	b	404e8c <wcrtomb@plt+0x24cc>
  404e88:	add	x24, x24, #0x1
  404e8c:	ldrb	w20, [x24]
  404e90:	cbz	w20, 404ec8 <wcrtomb@plt+0x2508>
  404e94:	cmp	w20, #0x3d
  404e98:	b.eq	404f1c <wcrtomb@plt+0x255c>  // b.none
  404e9c:	cmp	w20, #0x3a
  404ea0:	b.eq	404ec8 <wcrtomb@plt+0x2508>  // b.none
  404ea4:	cbz	x25, 404ec0 <wcrtomb@plt+0x2500>
  404ea8:	cmp	w20, #0x3b
  404eac:	b.eq	404e88 <wcrtomb@plt+0x24c8>  // b.none
  404eb0:	mov	w0, w20
  404eb4:	bl	409cf0 <wcrtomb@plt+0x7330>
  404eb8:	tbnz	w0, #0, 404e88 <wcrtomb@plt+0x24c8>
  404ebc:	b	404f34 <wcrtomb@plt+0x2574>
  404ec0:	add	x24, x24, #0x1
  404ec4:	b	404e8c <wcrtomb@plt+0x24cc>
  404ec8:	strb	wzr, [x24], #1
  404ecc:	mov	x0, x22
  404ed0:	mov	x26, x21
  404ed4:	mov	x1, x19
  404ed8:	bl	402750 <strcmp@plt>
  404edc:	cbz	w0, 404eec <wcrtomb@plt+0x252c>
  404ee0:	ldr	x0, [x26, #24]!
  404ee4:	cbnz	x0, 404ed4 <wcrtomb@plt+0x2514>
  404ee8:	mov	x26, x23
  404eec:	cbz	x25, 404efc <wcrtomb@plt+0x253c>
  404ef0:	ldr	x8, [x26, #8]
  404ef4:	cbz	x8, 404efc <wcrtomb@plt+0x253c>
  404ef8:	str	x25, [x8]
  404efc:	ldr	x8, [x26, #16]
  404f00:	cbz	x8, 404f08 <wcrtomb@plt+0x2548>
  404f04:	blr	x8
  404f08:	cmp	w20, #0x0
  404f0c:	csel	x19, x19, x24, eq  // eq = none
  404f10:	csel	x25, x25, xzr, eq  // eq = none
  404f14:	cbnz	w20, 404e8c <wcrtomb@plt+0x24cc>
  404f18:	b	404f34 <wcrtomb@plt+0x2574>
  404f1c:	cbnz	x25, 404f34 <wcrtomb@plt+0x2574>
  404f20:	cmp	x19, x24
  404f24:	b.eq	404f34 <wcrtomb@plt+0x2574>  // b.none
  404f28:	strb	wzr, [x24], #1
  404f2c:	mov	x25, x24
  404f30:	b	404e8c <wcrtomb@plt+0x24cc>
  404f34:	ldp	x20, x19, [sp, #64]
  404f38:	ldp	x22, x21, [sp, #48]
  404f3c:	ldp	x24, x23, [sp, #32]
  404f40:	ldp	x26, x25, [sp, #16]
  404f44:	ldp	x29, x30, [sp], #80
  404f48:	ret
  404f4c:	adrp	x10, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404f50:	mov	w8, wzr
  404f54:	mov	w9, #0x1                   	// #1
  404f58:	add	x10, x10, #0x8d8
  404f5c:	mov	w11, #0x1                   	// #1
  404f60:	b	404f78 <wcrtomb@plt+0x25b8>
  404f64:	mov	w12, w11
  404f68:	add	x9, x9, #0x1
  404f6c:	cmp	x9, #0x100
  404f70:	mov	w11, w12
  404f74:	b.eq	404fac <wcrtomb@plt+0x25ec>  // b.none
  404f78:	and	w12, w8, w9
  404f7c:	tst	w12, #0xff
  404f80:	b.ne	404f64 <wcrtomb@plt+0x25a4>  // b.any
  404f84:	add	x12, x10, x9
  404f88:	ldrb	w12, [x12, #3]
  404f8c:	cmp	w12, #0x1
  404f90:	b.eq	404f64 <wcrtomb@plt+0x25a4>  // b.none
  404f94:	mov	w12, w11
  404f98:	lsl	w11, w11, #1
  404f9c:	cmp	x9, w11, sxtw
  404fa0:	b.ge	404f94 <wcrtomb@plt+0x25d4>  // b.tcont
  404fa4:	orr	w8, w8, w12
  404fa8:	b	404f68 <wcrtomb@plt+0x25a8>
  404fac:	and	x8, x8, #0xff
  404fb0:	mov	x9, #0x101010101010101     	// #72340172838076673
  404fb4:	mul	x8, x8, x9
  404fb8:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  404fbc:	str	x8, [x9, #1512]
  404fc0:	ret
  404fc4:	stp	x29, x30, [sp, #-48]!
  404fc8:	mov	x29, sp
  404fcc:	str	x21, [sp, #16]
  404fd0:	stp	x20, x19, [sp, #32]
  404fd4:	str	xzr, [x29, #24]
  404fd8:	cbz	x1, 40500c <wcrtomb@plt+0x264c>
  404fdc:	mov	x19, x1
  404fe0:	mov	x20, x0
  404fe4:	mov	x21, xzr
  404fe8:	add	x0, x20, x21
  404fec:	sub	x1, x19, x21
  404ff0:	add	x2, x29, #0x18
  404ff4:	bl	4093e0 <wcrtomb@plt+0x6a20>
  404ff8:	cmn	x0, #0x2
  404ffc:	b.cs	405014 <wcrtomb@plt+0x2654>  // b.hs, b.nlast
  405000:	add	x21, x0, x21
  405004:	cmp	x21, x19
  405008:	b.cc	404fe8 <wcrtomb@plt+0x2628>  // b.lo, b.ul, b.last
  40500c:	mov	w0, wzr
  405010:	b	405018 <wcrtomb@plt+0x2658>
  405014:	mov	w0, #0x1                   	// #1
  405018:	ldp	x20, x19, [sp, #32]
  40501c:	ldr	x21, [sp, #16]
  405020:	ldp	x29, x30, [sp], #48
  405024:	ret
  405028:	stp	x29, x30, [sp, #-48]!
  40502c:	str	x21, [sp, #16]
  405030:	stp	x20, x19, [sp, #32]
  405034:	mov	x29, sp
  405038:	mov	x19, x1
  40503c:	mov	x20, x0
  405040:	mov	x21, xzr
  405044:	str	xzr, [x29, #24]
  405048:	cmp	x21, x19
  40504c:	b.cs	405074 <wcrtomb@plt+0x26b4>  // b.hs, b.nlast
  405050:	add	x0, x20, x21
  405054:	sub	x1, x19, x21
  405058:	add	x2, x29, #0x18
  40505c:	bl	4053ec <wcrtomb@plt+0x2a2c>
  405060:	bic	w8, w0, w0, asr #31
  405064:	add	x21, x21, x8
  405068:	tbz	w0, #31, 405048 <wcrtomb@plt+0x2688>
  40506c:	mov	w0, wzr
  405070:	b	405078 <wcrtomb@plt+0x26b8>
  405074:	mov	w0, #0x1                   	// #1
  405078:	ldp	x20, x19, [sp, #32]
  40507c:	ldr	x21, [sp, #16]
  405080:	ldp	x29, x30, [sp], #48
  405084:	ret
  405088:	sub	sp, sp, #0x70
  40508c:	stp	x29, x30, [sp, #16]
  405090:	stp	x28, x27, [sp, #32]
  405094:	stp	x26, x25, [sp, #48]
  405098:	stp	x24, x23, [sp, #64]
  40509c:	stp	x22, x21, [sp, #80]
  4050a0:	stp	x20, x19, [sp, #96]
  4050a4:	ldr	x23, [x2]
  4050a8:	mov	w20, w0
  4050ac:	add	x29, sp, #0x10
  4050b0:	mov	x22, x2
  4050b4:	add	x0, x23, #0x1
  4050b8:	mov	x21, x1
  4050bc:	bl	413ae8 <wcrtomb@plt+0x11128>
  4050c0:	adrp	x28, 423000 <_obstack_memory_used@@Base+0xcbcc>
  4050c4:	mov	x19, x0
  4050c8:	adrp	x27, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4050cc:	add	x28, x28, #0xb4e
  4050d0:	mov	x24, x0
  4050d4:	mov	x25, x21
  4050d8:	str	xzr, [sp, #8]
  4050dc:	b	405104 <wcrtomb@plt+0x2744>
  4050e0:	mov	x0, x24
  4050e4:	mov	x1, x25
  4050e8:	mov	x2, x26
  4050ec:	bl	402320 <memcpy@plt>
  4050f0:	mov	w8, wzr
  4050f4:	add	x24, x24, x26
  4050f8:	add	x25, x25, x26
  4050fc:	sub	x23, x23, x26
  405100:	cbnz	w8, 4051e8 <wcrtomb@plt+0x2828>
  405104:	cbz	x23, 4051c0 <wcrtomb@plt+0x2800>
  405108:	ldrb	w8, [x25]
  40510c:	sub	w8, w8, #0x24
  405110:	cmp	w8, #0x58
  405114:	b.hi	40512c <wcrtomb@plt+0x276c>  // b.pmore
  405118:	adr	x9, 405128 <wcrtomb@plt+0x2768>
  40511c:	ldrb	w10, [x28, x8]
  405120:	add	x9, x9, x10, lsl #2
  405124:	br	x9
  405128:	cbnz	w20, 4051f0 <wcrtomb@plt+0x2830>
  40512c:	ldrb	w8, [x27, #3550]
  405130:	cbz	w8, 405160 <wcrtomb@plt+0x27a0>
  405134:	add	x2, sp, #0x8
  405138:	mov	x0, x25
  40513c:	mov	x1, x23
  405140:	bl	4053ec <wcrtomb@plt+0x2a2c>
  405144:	sxtw	x8, w0
  405148:	cmp	w0, #0x0
  40514c:	csel	x26, x26, x8, lt  // lt = tstop
  405150:	tbz	w0, #31, 4050e0 <wcrtomb@plt+0x2720>
  405154:	mov	w8, #0x5                   	// #5
  405158:	and	w8, w8, w0, asr #31
  40515c:	b	405100 <wcrtomb@plt+0x2740>
  405160:	add	x2, sp, #0x8
  405164:	mov	x0, x25
  405168:	mov	x1, x23
  40516c:	bl	4093e0 <wcrtomb@plt+0x6a20>
  405170:	mov	x26, x0
  405174:	cmp	x0, #0x10
  405178:	b.ls	4050e0 <wcrtomb@plt+0x2720>  // b.plast
  40517c:	mov	w8, #0x5                   	// #5
  405180:	b	405100 <wcrtomb@plt+0x2740>
  405184:	cmp	x23, #0x2
  405188:	b.cc	40512c <wcrtomb@plt+0x276c>  // b.lo, b.ul, b.last
  40518c:	ldrb	w8, [x25, #1]!
  405190:	sub	w8, w8, #0xa
  405194:	cmp	w8, #0x72
  405198:	b.hi	4051b8 <wcrtomb@plt+0x27f8>  // b.pmore
  40519c:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xcbcc>
  4051a0:	add	x11, x11, #0xba7
  4051a4:	adr	x9, 4051b4 <wcrtomb@plt+0x27f4>
  4051a8:	ldrb	w10, [x11, x8]
  4051ac:	add	x9, x9, x10, lsl #2
  4051b0:	br	x9
  4051b4:	cbz	w20, 4051f0 <wcrtomb@plt+0x2830>
  4051b8:	sub	x23, x23, #0x1
  4051bc:	b	40512c <wcrtomb@plt+0x276c>
  4051c0:	ldr	x8, [x22]
  4051c4:	sub	x2, x24, x19
  4051c8:	cmp	x8, x2
  4051cc:	b.eq	4051e0 <wcrtomb@plt+0x2820>  // b.none
  4051d0:	mov	x0, x21
  4051d4:	mov	x1, x19
  4051d8:	str	x2, [x22]
  4051dc:	bl	402320 <memcpy@plt>
  4051e0:	mov	w20, #0x2                   	// #2
  4051e4:	b	4051f0 <wcrtomb@plt+0x2830>
  4051e8:	cmp	w8, #0x5
  4051ec:	b.ne	40521c <wcrtomb@plt+0x285c>  // b.any
  4051f0:	mov	x0, x19
  4051f4:	bl	402770 <free@plt>
  4051f8:	mov	w0, w20
  4051fc:	ldp	x20, x19, [sp, #96]
  405200:	ldp	x22, x21, [sp, #80]
  405204:	ldp	x24, x23, [sp, #64]
  405208:	ldp	x26, x25, [sp, #48]
  40520c:	ldp	x28, x27, [sp, #32]
  405210:	ldp	x29, x30, [sp, #16]
  405214:	add	sp, sp, #0x70
  405218:	ret
  40521c:	b	4051f8 <wcrtomb@plt+0x2838>
  405220:	stp	x29, x30, [sp, #-32]!
  405224:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  405228:	add	x1, x1, #0x47a
  40522c:	str	x19, [sp, #16]
  405230:	mov	x29, sp
  405234:	mov	x19, x0
  405238:	bl	402750 <strcmp@plt>
  40523c:	cbz	w0, 405260 <wcrtomb@plt+0x28a0>
  405240:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405244:	mov	w0, #0xffffff9c            	// #-100
  405248:	mov	w2, #0x1                   	// #1
  40524c:	mov	w3, #0x1                   	// #1
  405250:	mov	x1, x19
  405254:	str	x19, [x8, #1520]
  405258:	bl	40588c <wcrtomb@plt+0x2ecc>
  40525c:	b	405278 <wcrtomb@plt+0x28b8>
  405260:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405264:	ldr	x8, [x8, #1288]
  405268:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40526c:	mov	w1, #0x1                   	// #1
  405270:	str	x8, [x9, #1520]
  405274:	bl	4054d8 <wcrtomb@plt+0x2b18>
  405278:	ldr	x19, [sp, #16]
  40527c:	and	w0, w0, #0x1
  405280:	ldp	x29, x30, [sp], #32
  405284:	ret
  405288:	stp	x29, x30, [sp, #-64]!
  40528c:	stp	x22, x21, [sp, #32]
  405290:	stp	x20, x19, [sp, #48]
  405294:	mov	x19, x2
  405298:	mov	x21, x1
  40529c:	mov	x22, x0
  4052a0:	mov	x20, xzr
  4052a4:	str	x23, [sp, #16]
  4052a8:	mov	x29, sp
  4052ac:	b	4052b4 <wcrtomb@plt+0x28f4>
  4052b0:	sturb	wzr, [x21, #-1]
  4052b4:	sub	x23, x22, #0x1
  4052b8:	ldrb	w0, [x23, #1]!
  4052bc:	bl	4093dc <wcrtomb@plt+0x6a1c>
  4052c0:	and	w0, w0, #0xff
  4052c4:	bl	409d64 <wcrtomb@plt+0x73a4>
  4052c8:	tbnz	w0, #0, 4052b8 <wcrtomb@plt+0x28f8>
  4052cc:	ldrb	w8, [x23]
  4052d0:	cbz	w8, 405330 <wcrtomb@plt+0x2970>
  4052d4:	cbz	x19, 4052dc <wcrtomb@plt+0x291c>
  4052d8:	str	x21, [x19, x20, lsl #3]
  4052dc:	add	x20, x20, #0x1
  4052e0:	add	x8, x21, #0x2
  4052e4:	mov	x22, x23
  4052e8:	ldrb	w9, [x22], #1
  4052ec:	mov	x21, x8
  4052f0:	cmp	w9, #0x5c
  4052f4:	sturb	w9, [x8, #-2]
  4052f8:	b.ne	40530c <wcrtomb@plt+0x294c>  // b.any
  4052fc:	ldrb	w8, [x22]
  405300:	cbz	w8, 40530c <wcrtomb@plt+0x294c>
  405304:	add	x22, x23, #0x2
  405308:	sturb	w8, [x21, #-2]
  40530c:	ldrb	w0, [x22]
  405310:	cbz	w0, 4052b0 <wcrtomb@plt+0x28f0>
  405314:	bl	4093dc <wcrtomb@plt+0x6a1c>
  405318:	and	w0, w0, #0xff
  40531c:	bl	409d64 <wcrtomb@plt+0x73a4>
  405320:	add	x8, x21, #0x1
  405324:	mov	x23, x22
  405328:	tbz	w0, #0, 4052e8 <wcrtomb@plt+0x2928>
  40532c:	b	4052b0 <wcrtomb@plt+0x28f0>
  405330:	mov	x0, x20
  405334:	ldp	x20, x19, [sp, #48]
  405338:	ldp	x22, x21, [sp, #32]
  40533c:	ldr	x23, [sp, #16]
  405340:	ldp	x29, x30, [sp], #64
  405344:	ret
  405348:	stp	x29, x30, [sp, #-48]!
  40534c:	stp	x20, x19, [sp, #32]
  405350:	mov	x20, x1
  405354:	mov	w1, #0xa                   	// #10
  405358:	mov	x2, x20
  40535c:	str	x21, [sp, #16]
  405360:	mov	x29, sp
  405364:	mov	x21, x0
  405368:	bl	402820 <memchr@plt>
  40536c:	mov	x19, xzr
  405370:	cbz	x0, 405390 <wcrtomb@plt+0x29d0>
  405374:	add	x20, x21, x20
  405378:	add	x0, x0, #0x1
  40537c:	sub	x2, x20, x0
  405380:	mov	w1, #0xa                   	// #10
  405384:	add	x19, x19, #0x1
  405388:	bl	402820 <memchr@plt>
  40538c:	cbnz	x0, 405378 <wcrtomb@plt+0x29b8>
  405390:	mov	x0, x19
  405394:	ldp	x20, x19, [sp, #32]
  405398:	ldr	x21, [sp, #16]
  40539c:	ldp	x29, x30, [sp], #48
  4053a0:	ret
  4053a4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4053a8:	ldr	x8, [x8, #904]
  4053ac:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4053b0:	str	x8, [x9, #896]
  4053b4:	ret
  4053b8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4053bc:	mov	w9, #0xffffffff            	// #-1
  4053c0:	str	w9, [x8, #1240]
  4053c4:	ret
  4053c8:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xebcc>
  4053cc:	adrp	x11, 425000 <_obstack_memory_used@@Base+0xebcc>
  4053d0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4053d4:	add	x9, x9, #0x7fd
  4053d8:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4053dc:	add	x11, x11, #0x803
  4053e0:	str	x9, [x8, #968]
  4053e4:	str	x11, [x10, #976]
  4053e8:	ret
  4053ec:	sub	sp, sp, #0xc0
  4053f0:	stp	x29, x30, [sp, #128]
  4053f4:	stp	x22, x21, [sp, #160]
  4053f8:	stp	x20, x19, [sp, #176]
  4053fc:	mov	x21, x0
  405400:	ldrb	w0, [x0]
  405404:	str	x23, [sp, #144]
  405408:	add	x29, sp, #0x80
  40540c:	mov	x20, x2
  405410:	mov	x22, x1
  405414:	bl	4093dc <wcrtomb@plt+0x6a1c>
  405418:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40541c:	add	x8, x8, #0x8d8
  405420:	add	x8, x8, w0, uxtb
  405424:	ldrsb	w19, [x8, #3]
  405428:	tbz	w19, #31, 405468 <wcrtomb@plt+0x2aa8>
  40542c:	add	x0, x29, #0x1c
  405430:	mov	x1, x21
  405434:	mov	x2, x22
  405438:	mov	x3, x20
  40543c:	bl	41609c <wcrtomb@plt+0x136dc>
  405440:	cmp	x0, #0x10
  405444:	b.hi	40545c <wcrtomb@plt+0x2a9c>  // b.pmore
  405448:	mov	x20, x0
  40544c:	ldr	w0, [x29, #28]
  405450:	mov	x1, sp
  405454:	bl	40fa04 <wcrtomb@plt+0xd044>
  405458:	cbz	w0, 405484 <wcrtomb@plt+0x2ac4>
  40545c:	mov	w8, wzr
  405460:	cbnz	w8, 405468 <wcrtomb@plt+0x2aa8>
  405464:	mov	w19, #0xffffffff            	// #-1
  405468:	mov	w0, w19
  40546c:	ldp	x20, x19, [sp, #176]
  405470:	ldp	x22, x21, [sp, #160]
  405474:	ldr	x23, [sp, #144]
  405478:	ldp	x29, x30, [sp, #128]
  40547c:	add	sp, sp, #0xc0
  405480:	ret
  405484:	sxtw	x8, w20
  405488:	sub	x21, x21, #0x1
  40548c:	cmp	x8, #0x2
  405490:	b.lt	4054bc <wcrtomb@plt+0x2afc>  // b.tstop
  405494:	ldrb	w22, [x21, x8]
  405498:	sub	x23, x8, #0x1
  40549c:	bl	402620 <__ctype_toupper_loc@plt>
  4054a0:	ldr	x8, [x0]
  4054a4:	ldr	w8, [x8, x22, lsl #2]
  4054a8:	cmp	w8, w22
  4054ac:	mov	x8, x23
  4054b0:	b.eq	40548c <wcrtomb@plt+0x2acc>  // b.none
  4054b4:	cset	w8, ne  // ne = any
  4054b8:	b	4054c0 <wcrtomb@plt+0x2b00>
  4054bc:	mov	w8, #0x2                   	// #2
  4054c0:	cmp	w8, #0x2
  4054c4:	csel	w19, w20, w19, eq  // eq = none
  4054c8:	tst	w8, #0x1
  4054cc:	cset	w8, eq  // eq = none
  4054d0:	cbz	w8, 405464 <wcrtomb@plt+0x2aa4>
  4054d4:	b	405468 <wcrtomb@plt+0x2aa8>
  4054d8:	sub	sp, sp, #0xd0
  4054dc:	stp	x29, x30, [sp, #160]
  4054e0:	stp	x20, x19, [sp, #192]
  4054e4:	add	x29, sp, #0xa0
  4054e8:	mov	w20, w1
  4054ec:	add	x1, sp, #0x18
  4054f0:	stp	x22, x21, [sp, #176]
  4054f4:	mov	w19, w0
  4054f8:	sturb	wzr, [x29, #-4]
  4054fc:	bl	423850 <_obstack_memory_used@@Base+0xd41c>
  405500:	cbz	w0, 405548 <wcrtomb@plt+0x2b88>
  405504:	bl	402930 <__errno_location@plt>
  405508:	ldr	w0, [x0]
  40550c:	bl	405930 <wcrtomb@plt+0x2f70>
  405510:	mov	w21, #0x1                   	// #1
  405514:	cbz	w19, 405530 <wcrtomb@plt+0x2b70>
  405518:	mov	w0, w19
  40551c:	bl	402650 <close@plt>
  405520:	cbz	w0, 405530 <wcrtomb@plt+0x2b70>
  405524:	bl	402930 <__errno_location@plt>
  405528:	ldr	w0, [x0]
  40552c:	bl	405930 <wcrtomb@plt+0x2f70>
  405530:	and	w0, w21, #0x1
  405534:	ldp	x20, x19, [sp, #192]
  405538:	ldp	x22, x21, [sp, #176]
  40553c:	ldp	x29, x30, [sp, #160]
  405540:	add	sp, sp, #0xd0
  405544:	ret
  405548:	cbz	w19, 405590 <wcrtomb@plt+0x2bd0>
  40554c:	and	w0, w20, #0x1
  405550:	bl	405980 <wcrtomb@plt+0x2fc0>
  405554:	tbz	w0, #0, 405564 <wcrtomb@plt+0x2ba4>
  405558:	ldr	w0, [sp, #40]
  40555c:	bl	4059ac <wcrtomb@plt+0x2fec>
  405560:	tbnz	w0, #0, 405510 <wcrtomb@plt+0x2b50>
  405564:	tbz	w20, #0, 405590 <wcrtomb@plt+0x2bd0>
  405568:	ldr	w8, [sp, #40]
  40556c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405570:	ldr	x0, [x9, #1520]
  405574:	mov	w1, #0x1                   	// #1
  405578:	and	w8, w8, #0xf000
  40557c:	cmp	w8, #0x4, lsl #12
  405580:	cset	w2, eq  // eq = none
  405584:	mov	w21, #0x1                   	// #1
  405588:	bl	4059e4 <wcrtomb@plt+0x3024>
  40558c:	tbnz	w0, #0, 405514 <wcrtomb@plt+0x2b54>
  405590:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405594:	ldr	w8, [x21, #1468]
  405598:	tbz	w8, #31, 4055b0 <wcrtomb@plt+0x2bf0>
  40559c:	ldr	w8, [sp, #40]
  4055a0:	and	w8, w8, #0xf000
  4055a4:	cmp	w8, #0x4, lsl #12
  4055a8:	cset	w8, eq  // eq = none
  4055ac:	str	w8, [x21, #1468]
  4055b0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4055b4:	ldr	w8, [x8, #880]
  4055b8:	cbz	w19, 405664 <wcrtomb@plt+0x2ca4>
  4055bc:	cmp	w8, #0x3
  4055c0:	b.ne	405664 <wcrtomb@plt+0x2ca4>  // b.any
  4055c4:	ldr	w9, [sp, #40]
  4055c8:	and	w9, w9, #0xf000
  4055cc:	cmp	w9, #0x4, lsl #12
  4055d0:	b.ne	405664 <wcrtomb@plt+0x2ca4>  // b.any
  4055d4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4055d8:	ldrb	w8, [x8, #1232]
  4055dc:	mov	w9, #0x319                 	// #793
  4055e0:	mov	w10, #0x30a                 	// #778
  4055e4:	mov	w0, w19
  4055e8:	cmp	w8, #0x0
  4055ec:	csel	w8, w10, w9, ne  // ne = any
  4055f0:	orr	w9, w20, #0xfffffffe
  4055f4:	and	w21, w8, w9
  4055f8:	bl	402650 <close@plt>
  4055fc:	cbz	w0, 40560c <wcrtomb@plt+0x2c4c>
  405600:	bl	402930 <__errno_location@plt>
  405604:	ldr	w0, [x0]
  405608:	bl	405930 <wcrtomb@plt+0x2f70>
  40560c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405610:	ldr	x8, [x8, #1520]
  405614:	add	x0, sp, #0x8
  405618:	mov	w1, w21
  40561c:	mov	x2, xzr
  405620:	stp	x8, xzr, [sp, #8]
  405624:	bl	4140d8 <wcrtomb@plt+0x11718>
  405628:	cbz	x0, 405888 <wcrtomb@plt+0x2ec8>
  40562c:	mov	x19, x0
  405630:	bl	414a4c <wcrtomb@plt+0x1208c>
  405634:	cbz	x0, 4057a0 <wcrtomb@plt+0x2de0>
  405638:	mov	x1, x0
  40563c:	mov	w21, #0x1                   	// #1
  405640:	and	w2, w20, #0x1
  405644:	mov	x0, x19
  405648:	bl	405a58 <wcrtomb@plt+0x3098>
  40564c:	and	w21, w21, w0
  405650:	mov	x0, x19
  405654:	bl	414a4c <wcrtomb@plt+0x1208c>
  405658:	mov	x1, x0
  40565c:	cbnz	x0, 405640 <wcrtomb@plt+0x2c80>
  405660:	b	4057a4 <wcrtomb@plt+0x2de4>
  405664:	cbz	w19, 4056a4 <wcrtomb@plt+0x2ce4>
  405668:	cmp	w8, #0x4
  40566c:	b.ne	405680 <wcrtomb@plt+0x2cc0>  // b.any
  405670:	ldr	w8, [sp, #40]
  405674:	and	w8, w8, #0xf000
  405678:	cmp	w8, #0x4, lsl #12
  40567c:	b.eq	405510 <wcrtomb@plt+0x2b50>  // b.none
  405680:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405684:	ldr	w8, [x8, #1212]
  405688:	cmp	w8, #0x2
  40568c:	b.eq	405698 <wcrtomb@plt+0x2cd8>  // b.none
  405690:	cbnz	w8, 4056a4 <wcrtomb@plt+0x2ce4>
  405694:	tbnz	w20, #0, 4056a4 <wcrtomb@plt+0x2ce4>
  405698:	ldr	w0, [sp, #40]
  40569c:	bl	4059ac <wcrtomb@plt+0x2fec>
  4056a0:	tbnz	w0, #0, 405510 <wcrtomb@plt+0x2b50>
  4056a4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4056a8:	ldrb	w8, [x8, #1440]
  4056ac:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4056b0:	cbnz	w8, 405754 <wcrtomb@plt+0x2d94>
  4056b4:	ldr	w8, [x22, #1224]
  4056b8:	cbnz	w8, 405754 <wcrtomb@plt+0x2d94>
  4056bc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4056c0:	ldr	x8, [x8, #1184]
  4056c4:	cmp	x8, #0x2
  4056c8:	b.lt	405754 <wcrtomb@plt+0x2d94>  // b.tstop
  4056cc:	ldr	w8, [sp, #40]
  4056d0:	and	w8, w8, #0xf000
  4056d4:	cmp	w8, #0x8, lsl #12
  4056d8:	b.ne	405754 <wcrtomb@plt+0x2d94>  // b.any
  4056dc:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4056e0:	ldr	x8, [sp, #32]
  4056e4:	ldr	x9, [x9, #1312]
  4056e8:	cmp	x8, x9
  4056ec:	b.ne	405754 <wcrtomb@plt+0x2d94>  // b.any
  4056f0:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4056f4:	ldr	x8, [sp, #24]
  4056f8:	ldr	x9, [x9, #1304]
  4056fc:	cmp	x8, x9
  405700:	b.ne	405754 <wcrtomb@plt+0x2d94>  // b.any
  405704:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405708:	ldrb	w8, [x8, #1233]
  40570c:	tbnz	w8, #0, 405744 <wcrtomb@plt+0x2d84>
  405710:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  405714:	add	x1, x1, #0x817
  405718:	mov	w2, #0x5                   	// #5
  40571c:	mov	x0, xzr
  405720:	bl	402890 <dcgettext@plt>
  405724:	mov	x20, x0
  405728:	bl	405c80 <wcrtomb@plt+0x32c0>
  40572c:	bl	413048 <wcrtomb@plt+0x10688>
  405730:	mov	x3, x0
  405734:	mov	w0, wzr
  405738:	mov	w1, wzr
  40573c:	mov	x2, x20
  405740:	bl	4023b0 <error@plt>
  405744:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405748:	mov	w21, #0x1                   	// #1
  40574c:	strb	w21, [x8, #1497]
  405750:	b	405514 <wcrtomb@plt+0x2b54>
  405754:	add	x1, sp, #0x18
  405758:	sub	x2, x29, #0x4
  40575c:	mov	w0, w19
  405760:	bl	405cc0 <wcrtomb@plt+0x3300>
  405764:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405768:	ldrb	w8, [x8, #1223]
  40576c:	mov	x20, x0
  405770:	cmp	w8, #0x1
  405774:	b.ne	4057f8 <wcrtomb@plt+0x2e38>  // b.any
  405778:	ldr	w8, [x21, #1468]
  40577c:	cbz	w8, 4057d4 <wcrtomb@plt+0x2e14>
  405780:	bl	40622c <wcrtomb@plt+0x386c>
  405784:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405788:	ldrb	w8, [x8, #1176]
  40578c:	cmp	w8, #0x1
  405790:	b.ne	4057cc <wcrtomb@plt+0x2e0c>  // b.any
  405794:	mov	w0, #0x3a                  	// #58
  405798:	bl	406260 <wcrtomb@plt+0x38a0>
  40579c:	b	4057d4 <wcrtomb@plt+0x2e14>
  4057a0:	mov	w21, #0x1                   	// #1
  4057a4:	bl	402930 <__errno_location@plt>
  4057a8:	mov	x20, x0
  4057ac:	ldr	w0, [x0]
  4057b0:	cbz	w0, 4057b8 <wcrtomb@plt+0x2df8>
  4057b4:	bl	405930 <wcrtomb@plt+0x2f70>
  4057b8:	mov	x0, x19
  4057bc:	bl	4148c8 <wcrtomb@plt+0x11f08>
  4057c0:	cbz	w0, 405530 <wcrtomb@plt+0x2b70>
  4057c4:	ldr	w0, [x20]
  4057c8:	b	40552c <wcrtomb@plt+0x2b6c>
  4057cc:	mov	w0, wzr
  4057d0:	bl	40629c <wcrtomb@plt+0x38dc>
  4057d4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  4057d8:	add	x0, x0, #0x838
  4057dc:	mov	x1, x20
  4057e0:	bl	4062cc <wcrtomb@plt+0x390c>
  4057e4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4057e8:	ldrb	w8, [x8, #1280]
  4057ec:	cmp	w8, #0x1
  4057f0:	b.ne	4057f8 <wcrtomb@plt+0x2e38>  // b.any
  4057f4:	bl	406364 <wcrtomb@plt+0x39a4>
  4057f8:	ldr	w8, [x22, #1224]
  4057fc:	cmp	x20, #0x0
  405800:	cset	w9, eq  // eq = none
  405804:	cmp	w8, #0x2
  405808:	cset	w10, ne  // ne = any
  40580c:	eor	w9, w9, w10
  405810:	eor	w21, w9, #0x1
  405814:	cbz	w8, 405828 <wcrtomb@plt+0x2e68>
  405818:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40581c:	ldrb	w9, [x9, #1432]
  405820:	cmp	w9, #0x1
  405824:	b.ne	40583c <wcrtomb@plt+0x2e7c>  // b.any
  405828:	ldurb	w2, [x29, #-4]
  40582c:	add	x1, sp, #0x18
  405830:	mov	w0, w19
  405834:	bl	406394 <wcrtomb@plt+0x39d4>
  405838:	b	405514 <wcrtomb@plt+0x2b54>
  40583c:	cmp	w8, #0x2
  405840:	cset	w8, ne  // ne = any
  405844:	cmp	x20, #0x0
  405848:	cset	w9, eq  // eq = none
  40584c:	cmp	w9, w8
  405850:	b.eq	405514 <wcrtomb@plt+0x2b54>  // b.none
  405854:	bl	40622c <wcrtomb@plt+0x386c>
  405858:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40585c:	ldrb	w8, [x8, #1176]
  405860:	cmp	w8, #0x0
  405864:	mov	w8, #0xa                   	// #10
  405868:	csel	w0, w8, wzr, ne  // ne = any
  40586c:	bl	40629c <wcrtomb@plt+0x38dc>
  405870:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405874:	ldrb	w8, [x8, #1280]
  405878:	cmp	w8, #0x1
  40587c:	b.ne	405514 <wcrtomb@plt+0x2b54>  // b.any
  405880:	bl	406364 <wcrtomb@plt+0x39a4>
  405884:	b	405514 <wcrtomb@plt+0x2b54>
  405888:	bl	413cd0 <wcrtomb@plt+0x11310>
  40588c:	stp	x29, x30, [sp, #-64]!
  405890:	stp	x20, x19, [sp, #48]
  405894:	and	w20, w3, #0x1
  405898:	stp	x22, x21, [sp, #32]
  40589c:	mov	w22, w0
  4058a0:	tst	w2, #0x1
  4058a4:	mov	w8, #0x8100                	// #33024
  4058a8:	mov	w9, #0x100                 	// #256
  4058ac:	mov	w0, w20
  4058b0:	str	x23, [sp, #16]
  4058b4:	mov	x29, sp
  4058b8:	mov	w19, w2
  4058bc:	mov	x21, x1
  4058c0:	csel	w23, w9, w8, ne  // ne = any
  4058c4:	bl	405980 <wcrtomb@plt+0x2fc0>
  4058c8:	tst	w0, #0x1
  4058cc:	mov	w8, #0x800                 	// #2048
  4058d0:	csel	w8, w8, wzr, ne  // ne = any
  4058d4:	orr	w2, w8, w23
  4058d8:	mov	w0, w22
  4058dc:	mov	x1, x21
  4058e0:	bl	411ab8 <wcrtomb@plt+0xf0f8>
  4058e4:	tbnz	w0, #31, 4058f4 <wcrtomb@plt+0x2f34>
  4058e8:	mov	w1, w20
  4058ec:	bl	4054d8 <wcrtomb@plt+0x2b18>
  4058f0:	b	405918 <wcrtomb@plt+0x2f58>
  4058f4:	tbnz	w19, #0, 405908 <wcrtomb@plt+0x2f48>
  4058f8:	bl	402930 <__errno_location@plt>
  4058fc:	ldr	w0, [x0]
  405900:	bl	407718 <wcrtomb@plt+0x4d58>
  405904:	tbnz	w0, #0, 405914 <wcrtomb@plt+0x2f54>
  405908:	bl	402930 <__errno_location@plt>
  40590c:	ldr	w0, [x0]
  405910:	bl	405930 <wcrtomb@plt+0x2f70>
  405914:	mov	w0, #0x1                   	// #1
  405918:	ldp	x20, x19, [sp, #48]
  40591c:	ldp	x22, x21, [sp, #32]
  405920:	ldr	x23, [sp, #16]
  405924:	and	w0, w0, #0x1
  405928:	ldp	x29, x30, [sp], #64
  40592c:	ret
  405930:	stp	x29, x30, [sp, #-32]!
  405934:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405938:	ldrb	w8, [x8, #1233]
  40593c:	str	x19, [sp, #16]
  405940:	mov	x29, sp
  405944:	tbnz	w8, #0, 405968 <wcrtomb@plt+0x2fa8>
  405948:	mov	w19, w0
  40594c:	bl	405c80 <wcrtomb@plt+0x32c0>
  405950:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  405954:	mov	x3, x0
  405958:	add	x2, x2, #0x91d
  40595c:	mov	w0, wzr
  405960:	mov	w1, w19
  405964:	bl	4023b0 <error@plt>
  405968:	ldr	x19, [sp, #16]
  40596c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405970:	mov	w9, #0x1                   	// #1
  405974:	strb	w9, [x8, #1497]
  405978:	ldp	x29, x30, [sp], #32
  40597c:	ret
  405980:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405984:	ldr	w8, [x8, #1212]
  405988:	cmp	w8, #0x2
  40598c:	b.ne	405998 <wcrtomb@plt+0x2fd8>  // b.any
  405990:	mov	w0, #0x1                   	// #1
  405994:	ret
  405998:	cmp	w8, #0x0
  40599c:	cset	w8, eq  // eq = none
  4059a0:	eor	w9, w0, #0x1
  4059a4:	and	w0, w8, w9
  4059a8:	ret
  4059ac:	and	w8, w0, #0xf000
  4059b0:	cmp	w8, #0x6, lsl #12
  4059b4:	mov	w0, #0x1                   	// #1
  4059b8:	b.ge	4059d0 <wcrtomb@plt+0x3010>  // b.tcont
  4059bc:	cmp	w8, #0x1, lsl #12
  4059c0:	b.eq	4059cc <wcrtomb@plt+0x300c>  // b.none
  4059c4:	cmp	w8, #0x2, lsl #12
  4059c8:	b.ne	4059dc <wcrtomb@plt+0x301c>  // b.any
  4059cc:	ret
  4059d0:	b.eq	4059cc <wcrtomb@plt+0x300c>  // b.none
  4059d4:	cmp	w8, #0xc, lsl #12
  4059d8:	b.eq	4059cc <wcrtomb@plt+0x300c>  // b.none
  4059dc:	mov	w0, wzr
  4059e0:	ret
  4059e4:	stp	x29, x30, [sp, #-16]!
  4059e8:	mov	x8, x0
  4059ec:	mov	x29, sp
  4059f0:	tbz	w2, #0, 405a0c <wcrtomb@plt+0x304c>
  4059f4:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4059f8:	ldr	w9, [x9, #880]
  4059fc:	cmp	w9, #0x4
  405a00:	b.ne	405a18 <wcrtomb@plt+0x3058>  // b.any
  405a04:	mov	w0, #0x1                   	// #1
  405a08:	b	405a4c <wcrtomb@plt+0x308c>
  405a0c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405a10:	add	x9, x9, #0x4e0
  405a14:	b	405a38 <wcrtomb@plt+0x3078>
  405a18:	tbz	w1, #0, 405a30 <wcrtomb@plt+0x3070>
  405a1c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405a20:	ldrb	w9, [x9, #1496]
  405a24:	tbz	w9, #0, 405a30 <wcrtomb@plt+0x3070>
  405a28:	mov	w0, wzr
  405a2c:	b	405a4c <wcrtomb@plt+0x308c>
  405a30:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405a34:	add	x9, x9, #0x4f0
  405a38:	and	x10, x1, #0x1
  405a3c:	ldr	x0, [x9, x10, lsl #3]
  405a40:	cbz	x0, 405a4c <wcrtomb@plt+0x308c>
  405a44:	mov	x1, x8
  405a48:	bl	40fe8c <wcrtomb@plt+0xd4cc>
  405a4c:	and	w0, w0, #0x1
  405a50:	ldp	x29, x30, [sp], #16
  405a54:	ret
  405a58:	sub	sp, sp, #0xc0
  405a5c:	stp	x29, x30, [sp, #128]
  405a60:	stp	x22, x21, [sp, #160]
  405a64:	stp	x20, x19, [sp, #176]
  405a68:	ldr	x9, [x1, #88]
  405a6c:	ldrh	w8, [x1, #108]
  405a70:	str	x23, [sp, #144]
  405a74:	add	x29, sp, #0x80
  405a78:	cmp	x9, #0x0
  405a7c:	cset	w9, eq  // eq = none
  405a80:	cmp	w8, #0x6
  405a84:	b.ne	405aa8 <wcrtomb@plt+0x30e8>  // b.any
  405a88:	mov	w0, #0x1                   	// #1
  405a8c:	ldp	x20, x19, [sp, #176]
  405a90:	ldp	x22, x21, [sp, #160]
  405a94:	ldr	x23, [sp, #144]
  405a98:	ldp	x29, x30, [sp, #128]
  405a9c:	and	w0, w0, #0x1
  405aa0:	add	sp, sp, #0xc0
  405aa4:	ret
  405aa8:	mov	x19, x1
  405aac:	mov	x20, x0
  405ab0:	and	w21, w9, w2
  405ab4:	tbnz	w21, #0, 405afc <wcrtomb@plt+0x313c>
  405ab8:	sub	w8, w8, #0x1
  405abc:	mov	w9, #0xb                   	// #11
  405ac0:	cmp	w8, #0x4
  405ac4:	and	x8, x8, #0xf
  405ac8:	cset	w10, cc  // cc = lo, ul, last
  405acc:	lsr	w8, w9, w8
  405ad0:	add	x0, x19, #0xf8
  405ad4:	and	w2, w8, w10
  405ad8:	mov	w1, wzr
  405adc:	bl	4059e4 <wcrtomb@plt+0x3024>
  405ae0:	tbz	w0, #0, 405afc <wcrtomb@plt+0x313c>
  405ae4:	mov	w2, #0x4                   	// #4
  405ae8:	mov	x0, x20
  405aec:	mov	x1, x19
  405af0:	bl	415c34 <wcrtomb@plt+0x13274>
  405af4:	mov	w0, #0x1                   	// #1
  405af8:	b	405a8c <wcrtomb@plt+0x30cc>
  405afc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405b00:	ldrb	w9, [x8, #1496]
  405b04:	ldr	x8, [x19, #56]
  405b08:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405b0c:	cmp	w9, #0x1
  405b10:	str	x8, [x23, #1520]
  405b14:	b.ne	405b28 <wcrtomb@plt+0x3168>  // b.any
  405b18:	ldrb	w9, [x8, #1]
  405b1c:	cbz	w9, 405b28 <wcrtomb@plt+0x3168>
  405b20:	add	x8, x8, #0x2
  405b24:	str	x8, [x23, #1520]
  405b28:	ldr	w8, [x20, #72]
  405b2c:	tbnz	w8, #1, 405b38 <wcrtomb@plt+0x3178>
  405b30:	and	w22, w8, w21
  405b34:	b	405b3c <wcrtomb@plt+0x317c>
  405b38:	mov	w22, #0x1                   	// #1
  405b3c:	ldrh	w8, [x19, #108]
  405b40:	sub	w8, w8, #0x1
  405b44:	cmp	w8, #0xd
  405b48:	b.hi	405c7c <wcrtomb@plt+0x32bc>  // b.pmore
  405b4c:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xcbcc>
  405b50:	add	x9, x9, #0xc1a
  405b54:	adr	x10, 405a8c <wcrtomb@plt+0x30cc>
  405b58:	ldrb	w11, [x9, x8]
  405b5c:	add	x10, x10, x11, lsl #2
  405b60:	mov	w0, #0x1                   	// #1
  405b64:	br	x10
  405b68:	ldr	w0, [x19, #64]
  405b6c:	bl	405930 <wcrtomb@plt+0x2f70>
  405b70:	mov	w0, #0x1                   	// #1
  405b74:	b	405a8c <wcrtomb@plt+0x30cc>
  405b78:	mov	w0, w21
  405b7c:	bl	405980 <wcrtomb@plt+0x2fc0>
  405b80:	tbz	w0, #0, 405c64 <wcrtomb@plt+0x32a4>
  405b84:	ldr	w8, [x19, #136]
  405b88:	add	x23, x19, #0x78
  405b8c:	cbz	w8, 405c20 <wcrtomb@plt+0x3260>
  405b90:	ldr	w0, [x23, #16]
  405b94:	bl	4059ac <wcrtomb@plt+0x2fec>
  405b98:	and	w8, w0, #0x1
  405b9c:	b	405c60 <wcrtomb@plt+0x32a0>
  405ba0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405ba4:	ldrb	w8, [x8, #1233]
  405ba8:	tbnz	w8, #0, 405a88 <wcrtomb@plt+0x30c8>
  405bac:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  405bb0:	add	x1, x1, #0x83d
  405bb4:	mov	w2, #0x5                   	// #5
  405bb8:	mov	x0, xzr
  405bbc:	bl	402890 <dcgettext@plt>
  405bc0:	ldr	x19, [x23, #1520]
  405bc4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  405bc8:	mov	x20, x0
  405bcc:	add	x1, x1, #0x84d
  405bd0:	mov	w2, #0x5                   	// #5
  405bd4:	mov	x0, xzr
  405bd8:	bl	402890 <dcgettext@plt>
  405bdc:	mov	x4, x0
  405be0:	mov	w0, wzr
  405be4:	mov	w1, wzr
  405be8:	mov	x2, x20
  405bec:	mov	x3, x19
  405bf0:	bl	4023b0 <error@plt>
  405bf4:	mov	w0, #0x1                   	// #1
  405bf8:	b	405a8c <wcrtomb@plt+0x30cc>
  405bfc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405c00:	ldr	w8, [x8, #880]
  405c04:	cmp	w8, #0x3
  405c08:	b.eq	405a88 <wcrtomb@plt+0x30c8>  // b.none
  405c0c:	mov	w2, #0x4                   	// #4
  405c10:	mov	x0, x20
  405c14:	mov	x1, x19
  405c18:	bl	415c34 <wcrtomb@plt+0x13274>
  405c1c:	b	405c64 <wcrtomb@plt+0x32a4>
  405c20:	ldr	w0, [x20, #44]
  405c24:	ldr	x1, [x19, #48]
  405c28:	cmp	w22, #0x0
  405c2c:	mov	w8, #0x100                 	// #256
  405c30:	csel	w3, wzr, w8, ne  // ne = any
  405c34:	mov	x2, sp
  405c38:	bl	423870 <_obstack_memory_used@@Base+0xd43c>
  405c3c:	cbz	w0, 405c54 <wcrtomb@plt+0x3294>
  405c40:	bl	402930 <__errno_location@plt>
  405c44:	ldr	w0, [x0]
  405c48:	bl	405930 <wcrtomb@plt+0x2f70>
  405c4c:	mov	w8, #0x1                   	// #1
  405c50:	b	405c5c <wcrtomb@plt+0x329c>
  405c54:	mov	w8, wzr
  405c58:	mov	x23, sp
  405c5c:	cbz	w8, 405b90 <wcrtomb@plt+0x31d0>
  405c60:	cbnz	w8, 405a88 <wcrtomb@plt+0x30c8>
  405c64:	ldr	w0, [x20, #44]
  405c68:	ldr	x1, [x19, #48]
  405c6c:	mov	w2, w22
  405c70:	mov	w3, w21
  405c74:	bl	40588c <wcrtomb@plt+0x2ecc>
  405c78:	b	405a8c <wcrtomb@plt+0x30cc>
  405c7c:	bl	4026c0 <abort@plt>
  405c80:	stp	x29, x30, [sp, #-32]!
  405c84:	str	x19, [sp, #16]
  405c88:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405c8c:	ldr	x8, [x19, #1520]
  405c90:	mov	x29, sp
  405c94:	cbnz	x8, 405cb0 <wcrtomb@plt+0x32f0>
  405c98:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  405c9c:	add	x1, x1, #0x866
  405ca0:	mov	w2, #0x5                   	// #5
  405ca4:	mov	x0, xzr
  405ca8:	bl	402890 <dcgettext@plt>
  405cac:	str	x0, [x19, #1520]
  405cb0:	ldr	x0, [x19, #1520]
  405cb4:	ldr	x19, [sp, #16]
  405cb8:	ldp	x29, x30, [sp], #32
  405cbc:	ret
  405cc0:	sub	sp, sp, #0x90
  405cc4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  405cc8:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405ccc:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405cd0:	stp	x22, x21, [sp, #112]
  405cd4:	stp	x20, x19, [sp, #128]
  405cd8:	ldrb	w20, [x8, #2260]
  405cdc:	ldrb	w21, [x9, #1436]
  405ce0:	ldrb	w19, [x10, #1440]
  405ce4:	stp	x29, x30, [sp, #48]
  405ce8:	stp	x28, x27, [sp, #64]
  405cec:	stp	x26, x25, [sp, #80]
  405cf0:	stp	x24, x23, [sp, #96]
  405cf4:	add	x29, sp, #0x30
  405cf8:	mov	x22, x2
  405cfc:	mov	x24, x1
  405d00:	mov	w23, w0
  405d04:	bl	40644c <wcrtomb@plt+0x3a8c>
  405d08:	tbz	w0, #0, 406154 <wcrtomb@plt+0x3794>
  405d0c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d10:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d14:	adrp	x13, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d18:	str	xzr, [x8, #1544]
  405d1c:	ldr	x8, [x9, #1184]
  405d20:	ldrb	w9, [x13, #1464]
  405d24:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d28:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d2c:	str	x8, [x11, #1552]
  405d30:	cmp	w9, #0x0
  405d34:	cset	w8, ne  // ne = any
  405d38:	cmp	w20, #0x0
  405d3c:	cset	w9, eq  // eq = none
  405d40:	and	w8, w9, w8
  405d44:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d48:	adrp	x12, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d4c:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d50:	str	xzr, [x10, #1560]
  405d54:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d58:	strb	w8, [x9, #1576]
  405d5c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d60:	mov	x0, xzr
  405d64:	mov	x1, x24
  405d68:	str	xzr, [x12, #1528]
  405d6c:	str	xzr, [x28, #1536]
  405d70:	str	xzr, [x10, #1568]
  405d74:	strb	wzr, [x8, #1577]
  405d78:	bl	406510 <wcrtomb@plt+0x3b50>
  405d7c:	tbz	w0, #0, 405db0 <wcrtomb@plt+0x33f0>
  405d80:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d84:	ldrb	w8, [x8, #1220]
  405d88:	str	w19, [sp, #20]
  405d8c:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405d90:	str	wzr, [x19, #1580]
  405d94:	cmp	w8, #0x1
  405d98:	b.ne	405e04 <wcrtomb@plt+0x3444>  // b.any
  405d9c:	mov	x0, x24
  405da0:	bl	4067d4 <wcrtomb@plt+0x3e14>
  405da4:	tbz	w0, #0, 405dc4 <wcrtomb@plt+0x3404>
  405da8:	ldr	x9, [x24, #48]
  405dac:	b	405dc8 <wcrtomb@plt+0x3408>
  405db0:	bl	402930 <__errno_location@plt>
  405db4:	ldr	w0, [x0]
  405db8:	bl	405930 <wcrtomb@plt+0x2f70>
  405dbc:	mov	x23, xzr
  405dc0:	b	406158 <wcrtomb@plt+0x3798>
  405dc4:	mov	x9, #0xffffffffffffffff    	// #-1
  405dc8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405dcc:	ldrb	w10, [x8, #1228]
  405dd0:	cmn	x9, #0x1
  405dd4:	ldr	w8, [x19, #1580]
  405dd8:	cset	w11, ne  // ne = any
  405ddc:	and	x10, x10, x11
  405de0:	add	x10, x9, x10
  405de4:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  405de8:	movk	x9, #0xcccd
  405dec:	umulh	x11, x10, x9
  405df0:	cmp	x10, #0x9
  405df4:	lsr	x10, x11, #3
  405df8:	add	w8, w8, #0x1
  405dfc:	b.hi	405dec <wcrtomb@plt+0x342c>  // b.pmore
  405e00:	str	w8, [x19, #1580]
  405e04:	stp	w23, w21, [sp, #12]
  405e08:	str	x22, [sp]
  405e0c:	mov	x23, xzr
  405e10:	mov	x22, xzr
  405e14:	mov	x27, #0xffffffffffffffff    	// #-1
  405e18:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405e1c:	mov	w19, #0x1                   	// #1
  405e20:	stur	wzr, [x29, #-4]
  405e24:	stur	xzr, [x29, #-16]
  405e28:	b	405e40 <wcrtomb@plt+0x3480>
  405e2c:	mov	x0, x23
  405e30:	mov	x1, x24
  405e34:	bl	406510 <wcrtomb@plt+0x3b50>
  405e38:	mov	w19, wzr
  405e3c:	tbz	w0, #0, 4060ec <wcrtomb@plt+0x372c>
  405e40:	tbnz	x27, #63, 406034 <wcrtomb@plt+0x3674>
  405e44:	ldr	x8, [x25, #1584]
  405e48:	ldr	x9, [x28, #1536]
  405e4c:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405e50:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405e54:	str	x8, [x10, #1600]
  405e58:	cbz	x9, 405e60 <wcrtomb@plt+0x34a0>
  405e5c:	str	x8, [x28, #1536]
  405e60:	ldr	x8, [x25, #1584]
  405e64:	ldr	x1, [x19, #1592]
  405e68:	add	x26, x8, x23
  405e6c:	cmp	x26, x1
  405e70:	b.eq	4060d0 <wcrtomb@plt+0x3710>  // b.none
  405e74:	ldur	w2, [x29, #-4]
  405e78:	mov	x0, x26
  405e7c:	str	x23, [sp, #24]
  405e80:	mov	x21, x28
  405e84:	mov	x28, x24
  405e88:	mov	x24, x27
  405e8c:	bl	4068f4 <wcrtomb@plt+0x3f34>
  405e90:	mov	x27, x26
  405e94:	mov	x23, x22
  405e98:	ldrb	w22, [x27, #-1]!
  405e9c:	mov	w1, w20
  405ea0:	strb	w20, [x27]
  405ea4:	ldr	x19, [x19, #1592]
  405ea8:	mov	x0, x27
  405eac:	sub	x8, x19, x26
  405eb0:	add	x2, x8, #0x1
  405eb4:	bl	4027a0 <memrchr@plt>
  405eb8:	add	x9, x0, #0x1
  405ebc:	mov	x8, x0
  405ec0:	sub	x0, x26, x23
  405ec4:	cmp	x9, x26
  405ec8:	csinc	x26, x0, x8, eq  // eq = none
  405ecc:	strb	w22, [x27]
  405ed0:	cmp	x0, x26
  405ed4:	sub	x22, x19, x26
  405ed8:	b.cs	405f54 <wcrtomb@plt+0x3594>  // b.hs, b.nlast
  405edc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405ee0:	ldr	x8, [x8, #1552]
  405ee4:	cbz	x8, 405efc <wcrtomb@plt+0x353c>
  405ee8:	mov	x1, x26
  405eec:	bl	406958 <wcrtomb@plt+0x3f98>
  405ef0:	ldur	x8, [x29, #-16]
  405ef4:	add	x8, x0, x8
  405ef8:	stur	x8, [x29, #-16]
  405efc:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405f00:	ldr	x8, [x9, #1568]
  405f04:	mov	x27, x24
  405f08:	cbz	x8, 405f18 <wcrtomb@plt+0x3558>
  405f0c:	mov	x0, x26
  405f10:	bl	406aa4 <wcrtomb@plt+0x40e4>
  405f14:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405f18:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405f1c:	ldr	x8, [x8, #1552]
  405f20:	ldr	x9, [x9, #1568]
  405f24:	orr	x8, x9, x8
  405f28:	cbz	x8, 4060fc <wcrtomb@plt+0x373c>
  405f2c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405f30:	ldrb	w8, [x8, #1436]
  405f34:	mov	x24, x28
  405f38:	cmp	w8, #0x1
  405f3c:	b.ne	405f5c <wcrtomb@plt+0x359c>  // b.any
  405f40:	ldur	x9, [x29, #-16]
  405f44:	bic	x8, x27, x27, asr #63
  405f48:	cmp	x8, x9
  405f4c:	b.ge	405f5c <wcrtomb@plt+0x359c>  // b.tcont
  405f50:	b	4060fc <wcrtomb@plt+0x373c>
  405f54:	mov	x27, x24
  405f58:	mov	x24, x28
  405f5c:	ldr	x9, [x21, #1536]
  405f60:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405f64:	ldr	x10, [x8, #1192]
  405f68:	mov	x28, x21
  405f6c:	cmp	x26, x9
  405f70:	cset	w8, eq  // eq = none
  405f74:	cmp	x10, #0x1
  405f78:	b.lt	405fd8 <wcrtomb@plt+0x3618>  // b.tstop
  405f7c:	ldr	x10, [x25, #1584]
  405f80:	cmp	x26, x10
  405f84:	b.ls	405fd8 <wcrtomb@plt+0x3618>  // b.plast
  405f88:	cmp	x26, x9
  405f8c:	b.eq	405fd8 <wcrtomb@plt+0x3618>  // b.none
  405f90:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405f94:	ldr	x9, [x8, #1192]
  405f98:	ldr	x10, [x25, #1584]
  405f9c:	ldr	x11, [x28, #1536]
  405fa0:	mov	x12, xzr
  405fa4:	ldurb	w8, [x26, #-2]
  405fa8:	sub	x26, x26, #0x1
  405fac:	cmp	w8, w20
  405fb0:	b.ne	405fa4 <wcrtomb@plt+0x35e4>  // b.any
  405fb4:	add	x12, x12, #0x1
  405fb8:	cmp	x11, x26
  405fbc:	cset	w8, eq  // eq = none
  405fc0:	cmp	x12, x9
  405fc4:	b.ge	405fd8 <wcrtomb@plt+0x3618>  // b.tcont
  405fc8:	cmp	x26, x10
  405fcc:	b.ls	405fd8 <wcrtomb@plt+0x3618>  // b.plast
  405fd0:	cmp	x11, x26
  405fd4:	b.ne	405fa4 <wcrtomb@plt+0x35e4>  // b.any
  405fd8:	tbnz	w8, #0, 405fe0 <wcrtomb@plt+0x3620>
  405fdc:	str	xzr, [x28, #1536]
  405fe0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405fe4:	ldrb	w8, [x8, #1222]
  405fe8:	sub	x23, x19, x26
  405fec:	cmp	w8, #0x1
  405ff0:	b.ne	406018 <wcrtomb@plt+0x3658>  // b.any
  405ff4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  405ff8:	ldr	x8, [x8, #1592]
  405ffc:	ldr	x9, [x25, #1584]
  406000:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406004:	ldr	x0, [x19, #1528]
  406008:	sub	x8, x8, x23
  40600c:	sub	x1, x8, x9
  406010:	bl	406b48 <wcrtomb@plt+0x4188>
  406014:	str	x0, [x19, #1528]
  406018:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40601c:	ldrb	w8, [x8, #1228]
  406020:	cmp	w8, #0x1
  406024:	b.ne	405e2c <wcrtomb@plt+0x346c>  // b.any
  406028:	mov	x0, x26
  40602c:	bl	406b80 <wcrtomb@plt+0x41c0>
  406030:	b	405e2c <wcrtomb@plt+0x346c>
  406034:	cbz	w20, 405e44 <wcrtomb@plt+0x3484>
  406038:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40603c:	ldr	w8, [x8, #1216]
  406040:	cmp	w8, #0x1
  406044:	b.eq	405e44 <wcrtomb@plt+0x3484>  // b.none
  406048:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40604c:	ldr	x0, [x25, #1584]
  406050:	ldr	x8, [x8, #1592]
  406054:	sub	x1, x8, x0
  406058:	bl	4067e8 <wcrtomb@plt+0x3e28>
  40605c:	tbnz	w0, #0, 406084 <wcrtomb@plt+0x36c4>
  406060:	tbz	w19, #0, 405e44 <wcrtomb@plt+0x3484>
  406064:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406068:	ldr	x8, [x8, #1592]
  40606c:	ldr	x9, [x25, #1584]
  406070:	ldr	w1, [sp, #12]
  406074:	mov	x2, x24
  406078:	sub	x0, x8, x9
  40607c:	bl	406814 <wcrtomb@plt+0x3e54>
  406080:	tbz	w0, #0, 405e44 <wcrtomb@plt+0x3484>
  406084:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406088:	ldr	w8, [x8, #1216]
  40608c:	cmp	w8, #0x2
  406090:	b.eq	406224 <wcrtomb@plt+0x3864>  // b.none
  406094:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406098:	ldrb	w8, [x8, #1223]
  40609c:	tbnz	w8, #0, 4060b4 <wcrtomb@plt+0x36f4>
  4060a0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4060a4:	mov	w9, #0x1                   	// #1
  4060a8:	strb	w9, [x8, #1440]
  4060ac:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4060b0:	strb	w9, [x8, #1436]
  4060b4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4060b8:	ldrb	w8, [x8, #1464]
  4060bc:	ldur	x27, [x29, #-16]
  4060c0:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4060c4:	stur	w20, [x29, #-4]
  4060c8:	strb	w8, [x9, #1576]
  4060cc:	b	405e44 <wcrtomb@plt+0x3484>
  4060d0:	ldr	x9, [sp]
  4060d4:	mov	w8, #0x1                   	// #1
  4060d8:	strb	w8, [x9]
  4060dc:	mov	w8, #0x4                   	// #4
  4060e0:	cmp	w8, #0x7
  4060e4:	b.ne	406110 <wcrtomb@plt+0x3750>  // b.any
  4060e8:	b	40617c <wcrtomb@plt+0x37bc>
  4060ec:	bl	402930 <__errno_location@plt>
  4060f0:	ldr	w0, [x0]
  4060f4:	bl	405930 <wcrtomb@plt+0x2f70>
  4060f8:	b	406100 <wcrtomb@plt+0x3740>
  4060fc:	ldr	x23, [sp, #24]
  406100:	mov	w8, #0x7                   	// #7
  406104:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406108:	cmp	w8, #0x7
  40610c:	b.eq	40617c <wcrtomb@plt+0x37bc>  // b.none
  406110:	cmp	w8, #0x4
  406114:	b.ne	406154 <wcrtomb@plt+0x3794>  // b.any
  406118:	cbz	x22, 40617c <wcrtomb@plt+0x37bc>
  40611c:	ldr	x8, [x19, #1592]
  406120:	add	x1, x8, #0x1
  406124:	str	x1, [x19, #1592]
  406128:	strb	w20, [x8]
  40612c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406130:	ldr	x8, [x8, #1552]
  406134:	cbz	x8, 406194 <wcrtomb@plt+0x37d4>
  406138:	ldr	x8, [x25, #1584]
  40613c:	add	x8, x8, x23
  406140:	sub	x0, x8, x22
  406144:	bl	406958 <wcrtomb@plt+0x3f98>
  406148:	ldur	x23, [x29, #-16]
  40614c:	add	x23, x0, x23
  406150:	b	406198 <wcrtomb@plt+0x37d8>
  406154:	mov	x23, xzr
  406158:	mov	x0, x23
  40615c:	ldp	x20, x19, [sp, #128]
  406160:	ldp	x22, x21, [sp, #112]
  406164:	ldp	x24, x23, [sp, #96]
  406168:	ldp	x26, x25, [sp, #80]
  40616c:	ldp	x28, x27, [sp, #64]
  406170:	ldp	x29, x30, [sp, #48]
  406174:	add	sp, sp, #0x90
  406178:	ret
  40617c:	ldr	w21, [sp, #16]
  406180:	ldur	x23, [x29, #-16]
  406184:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406188:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40618c:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406190:	b	4061c0 <wcrtomb@plt+0x3800>
  406194:	ldur	x23, [x29, #-16]
  406198:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40619c:	ldr	x8, [x8, #1568]
  4061a0:	ldr	w21, [sp, #16]
  4061a4:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4061a8:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4061ac:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4061b0:	cbz	x8, 4061c0 <wcrtomb@plt+0x3800>
  4061b4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4061b8:	ldr	x0, [x8, #1592]
  4061bc:	bl	406aa4 <wcrtomb@plt+0x40e4>
  4061c0:	ldr	w8, [sp, #20]
  4061c4:	strb	w21, [x19, #1436]
  4061c8:	strb	w8, [x20, #1440]
  4061cc:	cbnz	w8, 406158 <wcrtomb@plt+0x3798>
  4061d0:	ldrb	w8, [x22, #1577]
  4061d4:	tbnz	w8, #0, 4061e4 <wcrtomb@plt+0x3824>
  4061d8:	tbnz	x27, #63, 406158 <wcrtomb@plt+0x3798>
  4061dc:	cmp	x27, x23
  4061e0:	b.ge	406158 <wcrtomb@plt+0x3798>  // b.tcont
  4061e4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4061e8:	add	x1, x1, #0x877
  4061ec:	mov	w2, #0x5                   	// #5
  4061f0:	mov	x0, xzr
  4061f4:	bl	402890 <dcgettext@plt>
  4061f8:	mov	x20, x0
  4061fc:	bl	405c80 <wcrtomb@plt+0x32c0>
  406200:	mov	x1, x0
  406204:	mov	x0, x20
  406208:	bl	4062cc <wcrtomb@plt+0x390c>
  40620c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406210:	ldrb	w8, [x8, #1280]
  406214:	cmp	w8, #0x1
  406218:	b.ne	406158 <wcrtomb@plt+0x3798>  // b.any
  40621c:	bl	406364 <wcrtomb@plt+0x39a4>
  406220:	b	406158 <wcrtomb@plt+0x3798>
  406224:	mov	w8, #0x1                   	// #1
  406228:	b	406104 <wcrtomb@plt+0x3744>
  40622c:	stp	x29, x30, [sp, #-32]!
  406230:	str	x19, [sp, #16]
  406234:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406238:	ldr	x0, [x19, #920]
  40623c:	mov	x29, sp
  406240:	bl	406e98 <wcrtomb@plt+0x44d8>
  406244:	bl	405c80 <wcrtomb@plt+0x32c0>
  406248:	bl	406eb8 <wcrtomb@plt+0x44f8>
  40624c:	ldr	x0, [x19, #920]
  406250:	bl	406ef0 <wcrtomb@plt+0x4530>
  406254:	ldr	x19, [sp, #16]
  406258:	ldp	x29, x30, [sp], #32
  40625c:	ret
  406260:	stp	x29, x30, [sp, #-32]!
  406264:	stp	x20, x19, [sp, #16]
  406268:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40626c:	ldr	x8, [x20, #944]
  406270:	mov	w19, w0
  406274:	mov	x29, sp
  406278:	mov	x0, x8
  40627c:	bl	406e98 <wcrtomb@plt+0x44d8>
  406280:	and	w0, w19, #0xff
  406284:	bl	40629c <wcrtomb@plt+0x38dc>
  406288:	ldr	x0, [x20, #944]
  40628c:	bl	406ef0 <wcrtomb@plt+0x4530>
  406290:	ldp	x20, x19, [sp, #16]
  406294:	ldp	x29, x30, [sp], #32
  406298:	ret
  40629c:	stp	x29, x30, [sp, #-16]!
  4062a0:	mov	x29, sp
  4062a4:	bl	4025c0 <putchar_unlocked@plt>
  4062a8:	tbnz	w0, #31, 4062b4 <wcrtomb@plt+0x38f4>
  4062ac:	ldp	x29, x30, [sp], #16
  4062b0:	ret
  4062b4:	bl	402930 <__errno_location@plt>
  4062b8:	ldr	w8, [x0]
  4062bc:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4062c0:	str	w8, [x9, #1500]
  4062c4:	ldp	x29, x30, [sp], #16
  4062c8:	ret
  4062cc:	sub	sp, sp, #0x120
  4062d0:	stp	x29, x30, [sp, #256]
  4062d4:	add	x29, sp, #0x100
  4062d8:	mov	x9, #0xffffffffffffffc8    	// #-56
  4062dc:	mov	x10, sp
  4062e0:	sub	x11, x29, #0x78
  4062e4:	movk	x9, #0xff80, lsl #32
  4062e8:	add	x12, x29, #0x20
  4062ec:	add	x10, x10, #0x80
  4062f0:	add	x11, x11, #0x38
  4062f4:	adrp	x13, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4062f8:	stp	x10, x9, [x29, #-16]
  4062fc:	stp	x12, x11, [x29, #-32]
  406300:	mov	x8, x0
  406304:	stp	x1, x2, [x29, #-120]
  406308:	stp	x3, x4, [x29, #-104]
  40630c:	stp	x5, x6, [x29, #-88]
  406310:	stur	x7, [x29, #-72]
  406314:	stp	q0, q1, [sp]
  406318:	ldr	x0, [x13, #1128]
  40631c:	ldp	q0, q1, [x29, #-32]
  406320:	sub	x2, x29, #0x40
  406324:	mov	x1, x8
  406328:	str	x28, [sp, #272]
  40632c:	stp	q2, q3, [sp, #32]
  406330:	stp	q4, q5, [sp, #64]
  406334:	stp	q6, q7, [sp, #96]
  406338:	stp	q0, q1, [x29, #-64]
  40633c:	bl	4028f0 <vfprintf@plt>
  406340:	tbz	w0, #31, 406354 <wcrtomb@plt+0x3994>
  406344:	bl	402930 <__errno_location@plt>
  406348:	ldr	w8, [x0]
  40634c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406350:	str	w8, [x9, #1500]
  406354:	ldr	x28, [sp, #272]
  406358:	ldp	x29, x30, [sp, #256]
  40635c:	add	sp, sp, #0x120
  406360:	ret
  406364:	stp	x29, x30, [sp, #-16]!
  406368:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40636c:	ldr	x0, [x8, #1128]
  406370:	mov	x29, sp
  406374:	bl	4027c0 <fflush_unlocked@plt>
  406378:	cbz	w0, 40638c <wcrtomb@plt+0x39cc>
  40637c:	bl	402930 <__errno_location@plt>
  406380:	ldr	w8, [x0]
  406384:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406388:	str	w8, [x9, #1500]
  40638c:	ldp	x29, x30, [sp], #16
  406390:	ret
  406394:	stp	x29, x30, [sp, #-32]!
  406398:	str	x19, [sp, #16]
  40639c:	mov	x29, sp
  4063a0:	cbz	w0, 4063b0 <wcrtomb@plt+0x39f0>
  4063a4:	ldr	x19, [sp, #16]
  4063a8:	ldp	x29, x30, [sp], #32
  4063ac:	ret
  4063b0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4063b4:	ldr	x8, [x8, #1552]
  4063b8:	cbz	x8, 4063e0 <wcrtomb@plt+0x3a20>
  4063bc:	tbnz	w2, #0, 4063a4 <wcrtomb@plt+0x39e4>
  4063c0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4063c4:	ldrb	w8, [x8, #1624]
  4063c8:	mov	x19, x1
  4063cc:	cbz	w8, 406424 <wcrtomb@plt+0x3a64>
  4063d0:	mov	x0, x19
  4063d4:	bl	407640 <wcrtomb@plt+0x4c80>
  4063d8:	tbnz	w0, #0, 4063a4 <wcrtomb@plt+0x39e4>
  4063dc:	b	406414 <wcrtomb@plt+0x3a54>
  4063e0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4063e4:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4063e8:	ldr	x8, [x8, #1616]
  4063ec:	ldr	x1, [x9, #1560]
  4063f0:	cmp	x8, x1
  4063f4:	b.eq	4063a4 <wcrtomb@plt+0x39e4>  // b.none
  4063f8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4063fc:	ldrb	w8, [x8, #1624]
  406400:	cbnz	w8, 4063a4 <wcrtomb@plt+0x39e4>
  406404:	mov	w0, wzr
  406408:	mov	w2, wzr
  40640c:	bl	402440 <lseek@plt>
  406410:	tbz	x0, #63, 4063a4 <wcrtomb@plt+0x39e4>
  406414:	bl	402930 <__errno_location@plt>
  406418:	ldr	w0, [x0]
  40641c:	bl	405930 <wcrtomb@plt+0x2f70>
  406420:	b	4063a4 <wcrtomb@plt+0x39e4>
  406424:	mov	w2, #0x2                   	// #2
  406428:	mov	w0, wzr
  40642c:	mov	x1, xzr
  406430:	bl	402440 <lseek@plt>
  406434:	tbz	x0, #63, 4063a4 <wcrtomb@plt+0x39e4>
  406438:	bl	402930 <__errno_location@plt>
  40643c:	ldr	w8, [x0]
  406440:	cmp	w8, #0x16
  406444:	b.eq	4063a4 <wcrtomb@plt+0x39e4>  // b.none
  406448:	b	4063d0 <wcrtomb@plt+0x3a10>
  40644c:	stp	x29, x30, [sp, #-32]!
  406450:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406454:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406458:	ldr	x8, [x8, #1488]
  40645c:	ldr	x9, [x9, #1472]
  406460:	str	x19, [sp, #16]
  406464:	mov	x29, sp
  406468:	add	x10, x8, #0x1
  40646c:	udiv	x11, x10, x9
  406470:	msub	x11, x11, x9, x10
  406474:	sub	x9, x9, x11
  406478:	cmp	x11, #0x0
  40647c:	add	x9, x10, x9
  406480:	csinc	x8, x9, x8, ne  // ne = any
  406484:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406488:	ldrb	w9, [x9, #2260]
  40648c:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406490:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406494:	str	x8, [x11, #1592]
  406498:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40649c:	str	x8, [x10, #1584]
  4064a0:	sturb	w9, [x8, #-1]
  4064a4:	str	w0, [x11, #1608]
  4064a8:	cbz	w0, 4064b4 <wcrtomb@plt+0x3af4>
  4064ac:	mov	x0, xzr
  4064b0:	b	4064c0 <wcrtomb@plt+0x3b00>
  4064b4:	mov	w2, #0x1                   	// #1
  4064b8:	mov	x1, xzr
  4064bc:	bl	402440 <lseek@plt>
  4064c0:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4064c4:	lsr	x8, x0, #63
  4064c8:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4064cc:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4064d0:	str	x0, [x19, #1616]
  4064d4:	strb	w8, [x9, #1624]
  4064d8:	strb	w8, [x10, #1628]
  4064dc:	tbz	x0, #63, 4064f4 <wcrtomb@plt+0x3b34>
  4064e0:	bl	402930 <__errno_location@plt>
  4064e4:	ldr	w0, [x0]
  4064e8:	cmp	w0, #0x1d
  4064ec:	b.ne	4064fc <wcrtomb@plt+0x3b3c>  // b.any
  4064f0:	str	xzr, [x19, #1616]
  4064f4:	mov	w0, #0x1                   	// #1
  4064f8:	b	406504 <wcrtomb@plt+0x3b44>
  4064fc:	bl	405930 <wcrtomb@plt+0x2f70>
  406500:	mov	w0, wzr
  406504:	ldr	x19, [sp, #16]
  406508:	ldp	x29, x30, [sp], #32
  40650c:	ret
  406510:	stp	x29, x30, [sp, #-96]!
  406514:	stp	x28, x27, [sp, #16]
  406518:	adrp	x27, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40651c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406520:	stp	x24, x23, [sp, #48]
  406524:	stp	x22, x21, [sp, #64]
  406528:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40652c:	ldr	x22, [x27, #1488]
  406530:	ldr	x24, [x9, #1480]
  406534:	stp	x20, x19, [sp, #80]
  406538:	ldr	x20, [x8, #1592]
  40653c:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406540:	stp	x26, x25, [sp, #32]
  406544:	ldr	x25, [x10, #1472]
  406548:	add	x8, x22, x24
  40654c:	sub	x8, x8, x20
  406550:	sub	x8, x8, #0x8
  406554:	mov	x19, x1
  406558:	sub	x23, x20, x0
  40655c:	cmp	x25, x8
  406560:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406564:	mov	x29, sp
  406568:	b.ls	406674 <wcrtomb@plt+0x3cb4>  // b.plast
  40656c:	sub	x8, x24, x25
  406570:	add	x28, x25, x0
  406574:	sub	x20, x8, #0x8
  406578:	mov	x21, x0
  40657c:	cmp	x20, x28
  406580:	b.cs	4065a4 <wcrtomb@plt+0x3be4>  // b.hs, b.nlast
  406584:	mov	x8, #0xfffffffffffffff7    	// #-9
  406588:	sub	x8, x8, x25
  40658c:	lsr	x8, x8, #1
  406590:	cmp	x8, x20
  406594:	b.cc	4067d0 <wcrtomb@plt+0x3e10>  // b.lo, b.ul, b.last
  406598:	lsl	x20, x20, #1
  40659c:	cmp	x20, x28
  4065a0:	b.cc	406590 <wcrtomb@plt+0x3bd0>  // b.lo, b.ul, b.last
  4065a4:	mov	x0, x19
  4065a8:	bl	4067d4 <wcrtomb@plt+0x3e14>
  4065ac:	tbz	w0, #0, 4065d8 <wcrtomb@plt+0x3c18>
  4065b0:	ldr	x8, [x19, #48]
  4065b4:	ldr	x9, [x26, #1616]
  4065b8:	mov	x10, #0xffffffffffffffff    	// #-1
  4065bc:	sub	x8, x8, x9
  4065c0:	add	x9, x8, x21
  4065c4:	cmp	x8, x9
  4065c8:	ccmp	x8, x10, #0x4, le
  4065cc:	ccmp	x28, x9, #0x2, gt
  4065d0:	ccmp	x9, x20, #0x2, ls  // ls = plast
  4065d4:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  4065d8:	add	x8, x25, x20
  4065dc:	add	x0, x8, #0x8
  4065e0:	neg	x28, x21
  4065e4:	cmp	x24, x0
  4065e8:	sub	x25, x23, x22
  4065ec:	b.cs	406600 <wcrtomb@plt+0x3c40>  // b.hs, b.nlast
  4065f0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4065f4:	str	x0, [x8, #1480]
  4065f8:	bl	413ae8 <wcrtomb@plt+0x11128>
  4065fc:	mov	x22, x0
  406600:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406604:	ldr	x9, [x9, #1472]
  406608:	add	x8, x22, x21
  40660c:	add	x11, x8, #0x1
  406610:	ldr	x23, [x27, #1488]
  406614:	udiv	x12, x11, x9
  406618:	msub	x12, x12, x9, x11
  40661c:	sub	x9, x9, x12
  406620:	cmp	x12, #0x0
  406624:	add	x9, x11, x9
  406628:	csinc	x20, x9, x8, ne  // ne = any
  40662c:	add	x24, x20, x28
  406630:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406634:	add	x1, x23, x25
  406638:	mov	x0, x24
  40663c:	mov	x2, x21
  406640:	str	x24, [x10, #1584]
  406644:	bl	402340 <memmove@plt>
  406648:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40664c:	ldrb	w8, [x8, #2260]
  406650:	cmp	x22, x23
  406654:	sturb	w8, [x24, #-1]
  406658:	b.eq	406668 <wcrtomb@plt+0x3ca8>  // b.none
  40665c:	mov	x0, x23
  406660:	bl	402770 <free@plt>
  406664:	str	x22, [x27, #1488]
  406668:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40666c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406670:	b	40667c <wcrtomb@plt+0x3cbc>
  406674:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406678:	str	x23, [x8, #1584]
  40667c:	ldr	x8, [x27, #1488]
  406680:	ldr	x9, [x9, #1480]
  406684:	ldr	x10, [x10, #1472]
  406688:	adrp	x27, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40668c:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406690:	add	x8, x8, x9
  406694:	sub	x8, x8, x20
  406698:	sub	x8, x8, #0x8
  40669c:	udiv	x8, x8, x10
  4066a0:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4066a4:	adrp	x24, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4066a8:	mul	x22, x8, x10
  4066ac:	mov	w21, #0x1                   	// #1
  4066b0:	b	4066bc <wcrtomb@plt+0x3cfc>
  4066b4:	mov	w8, #0x1                   	// #1
  4066b8:	strb	w8, [x24, #1628]
  4066bc:	ldr	w0, [x27, #1608]
  4066c0:	mov	x1, x20
  4066c4:	mov	x2, x22
  4066c8:	bl	413550 <wcrtomb@plt+0x10b90>
  4066cc:	ldrb	w9, [x25, #1576]
  4066d0:	cmn	x0, #0x1
  4066d4:	ldr	x8, [x26, #1616]
  4066d8:	csel	x23, xzr, x0, eq  // eq = none
  4066dc:	cset	w10, ne  // ne = any
  4066e0:	cmp	x23, #0x0
  4066e4:	and	w21, w21, w10
  4066e8:	cset	w10, eq  // eq = none
  4066ec:	eor	w9, w9, #0x1
  4066f0:	add	x8, x23, x8
  4066f4:	orr	w9, w9, w10
  4066f8:	str	x8, [x26, #1616]
  4066fc:	cbnz	w9, 4067a0 <wcrtomb@plt+0x3de0>
  406700:	mov	x0, x20
  406704:	mov	x1, x23
  406708:	bl	406c04 <wcrtomb@plt+0x4244>
  40670c:	tbz	w0, #0, 4067a0 <wcrtomb@plt+0x3de0>
  406710:	ldr	x0, [x28, #1544]
  406714:	mov	x1, x23
  406718:	bl	406b48 <wcrtomb@plt+0x4188>
  40671c:	ldrb	w8, [x24, #1628]
  406720:	str	x0, [x28, #1544]
  406724:	cbnz	w8, 4066bc <wcrtomb@plt+0x3cfc>
  406728:	ldr	w0, [x27, #1608]
  40672c:	ldr	x1, [x26, #1616]
  406730:	mov	w2, #0x3                   	// #3
  406734:	bl	402440 <lseek@plt>
  406738:	mov	x23, x0
  40673c:	tbz	x0, #63, 406780 <wcrtomb@plt+0x3dc0>
  406740:	bl	402930 <__errno_location@plt>
  406744:	ldr	w8, [x0]
  406748:	cmp	w8, #0x6
  40674c:	b.ne	406780 <wcrtomb@plt+0x3dc0>  // b.any
  406750:	mov	x0, x19
  406754:	bl	4067d4 <wcrtomb@plt+0x3e14>
  406758:	tbz	w0, #0, 406780 <wcrtomb@plt+0x3dc0>
  40675c:	ldr	x8, [x26, #1616]
  406760:	ldr	x9, [x19, #48]
  406764:	cmp	x8, x9
  406768:	b.ge	406780 <wcrtomb@plt+0x3dc0>  // b.tcont
  40676c:	ldr	w0, [x27, #1608]
  406770:	mov	w2, #0x2                   	// #2
  406774:	mov	x1, xzr
  406778:	bl	402440 <lseek@plt>
  40677c:	mov	x23, x0
  406780:	tbnz	x23, #63, 4066b4 <wcrtomb@plt+0x3cf4>
  406784:	ldr	x8, [x26, #1616]
  406788:	ldr	x0, [x28, #1544]
  40678c:	sub	x1, x23, x8
  406790:	bl	406b48 <wcrtomb@plt+0x4188>
  406794:	str	x0, [x28, #1544]
  406798:	str	x23, [x26, #1616]
  40679c:	b	4066bc <wcrtomb@plt+0x3cfc>
  4067a0:	add	x8, x20, x23
  4067a4:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4067a8:	str	x8, [x9, #1592]
  4067ac:	str	xzr, [x20, x23]
  4067b0:	mov	w0, w21
  4067b4:	ldp	x20, x19, [sp, #80]
  4067b8:	ldp	x22, x21, [sp, #64]
  4067bc:	ldp	x24, x23, [sp, #48]
  4067c0:	ldp	x26, x25, [sp, #32]
  4067c4:	ldp	x28, x27, [sp, #16]
  4067c8:	ldp	x29, x30, [sp], #96
  4067cc:	ret
  4067d0:	bl	413cd0 <wcrtomb@plt+0x11310>
  4067d4:	ldr	w8, [x0, #16]
  4067d8:	and	w8, w8, #0xf000
  4067dc:	cmp	w8, #0x8, lsl #12
  4067e0:	cset	w0, eq  // eq = none
  4067e4:	ret
  4067e8:	stp	x29, x30, [sp, #-32]!
  4067ec:	str	x19, [sp, #16]
  4067f0:	mov	x29, sp
  4067f4:	mov	x19, x1
  4067f8:	strb	wzr, [x0, x1]
  4067fc:	bl	402380 <strlen@plt>
  406800:	cmp	x0, x19
  406804:	ldr	x19, [sp, #16]
  406808:	cset	w0, ne  // ne = any
  40680c:	ldp	x29, x30, [sp], #32
  406810:	ret
  406814:	stp	x29, x30, [sp, #-48]!
  406818:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40681c:	ldrb	w8, [x8, #1624]
  406820:	stp	x22, x21, [sp, #16]
  406824:	stp	x20, x19, [sp, #32]
  406828:	mov	x29, sp
  40682c:	cbnz	w8, 4068d0 <wcrtomb@plt+0x3f10>
  406830:	mov	x21, x0
  406834:	mov	x0, x2
  406838:	mov	x19, x2
  40683c:	mov	w20, w1
  406840:	bl	4067d4 <wcrtomb@plt+0x3e14>
  406844:	tbz	w0, #0, 4068d0 <wcrtomb@plt+0x3f10>
  406848:	ldr	x8, [x19, #48]
  40684c:	cmp	x8, x21
  406850:	b.ls	4068d0 <wcrtomb@plt+0x3f10>  // b.plast
  406854:	cbnz	w20, 406870 <wcrtomb@plt+0x3eb0>
  406858:	mov	w2, #0x1                   	// #1
  40685c:	mov	w0, wzr
  406860:	mov	x1, xzr
  406864:	bl	402440 <lseek@plt>
  406868:	mov	x21, x0
  40686c:	tbnz	x0, #63, 4068e4 <wcrtomb@plt+0x3f24>
  406870:	mov	w2, #0x4                   	// #4
  406874:	mov	w0, w20
  406878:	mov	x1, x21
  40687c:	bl	402440 <lseek@plt>
  406880:	tbnz	x0, #63, 4068c4 <wcrtomb@plt+0x3f04>
  406884:	mov	x22, x0
  406888:	mov	w0, w20
  40688c:	mov	x1, x21
  406890:	mov	w2, wzr
  406894:	bl	402440 <lseek@plt>
  406898:	tbz	x0, #63, 4068a8 <wcrtomb@plt+0x3ee8>
  40689c:	bl	402930 <__errno_location@plt>
  4068a0:	ldr	w0, [x0]
  4068a4:	bl	405930 <wcrtomb@plt+0x2f70>
  4068a8:	ldr	x8, [x19, #48]
  4068ac:	cmp	x22, x8
  4068b0:	b.ge	4068c4 <wcrtomb@plt+0x3f04>  // b.tcont
  4068b4:	mov	w8, wzr
  4068b8:	mov	w0, #0x1                   	// #1
  4068bc:	cbnz	w8, 4068d0 <wcrtomb@plt+0x3f10>
  4068c0:	b	4068d4 <wcrtomb@plt+0x3f14>
  4068c4:	mov	w8, #0x1                   	// #1
  4068c8:	mov	w0, #0x1                   	// #1
  4068cc:	cbz	w8, 4068d4 <wcrtomb@plt+0x3f14>
  4068d0:	mov	w0, wzr
  4068d4:	ldp	x20, x19, [sp, #32]
  4068d8:	ldp	x22, x21, [sp, #16]
  4068dc:	ldp	x29, x30, [sp], #48
  4068e0:	ret
  4068e4:	mov	w8, wzr
  4068e8:	mov	w0, wzr
  4068ec:	cbnz	w8, 4068d0 <wcrtomb@plt+0x3f10>
  4068f0:	b	4068d4 <wcrtomb@plt+0x3f14>
  4068f4:	stp	x29, x30, [sp, #-48]!
  4068f8:	tst	w2, #0xff
  4068fc:	str	x21, [sp, #16]
  406900:	stp	x20, x19, [sp, #32]
  406904:	mov	x29, sp
  406908:	b.eq	406948 <wcrtomb@plt+0x3f88>  // b.none
  40690c:	mov	w19, w2
  406910:	mov	x20, x1
  406914:	mov	x21, x0
  406918:	mov	x0, x21
  40691c:	strb	wzr, [x20]
  406920:	bl	402380 <strlen@plt>
  406924:	add	x21, x21, x0
  406928:	cmp	x21, x20
  40692c:	strb	w19, [x20]
  406930:	b.eq	406948 <wcrtomb@plt+0x3f88>  // b.none
  406934:	mov	x8, x21
  406938:	ldrb	w9, [x21, #1]!
  40693c:	strb	w19, [x8]
  406940:	cbz	w9, 406934 <wcrtomb@plt+0x3f74>
  406944:	b	406918 <wcrtomb@plt+0x3f58>
  406948:	ldp	x20, x19, [sp, #32]
  40694c:	ldr	x21, [sp, #16]
  406950:	ldp	x29, x30, [sp], #48
  406954:	ret
  406958:	sub	sp, sp, #0x70
  40695c:	stp	x22, x21, [sp, #80]
  406960:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406964:	stp	x24, x23, [sp, #64]
  406968:	ldr	x23, [x22, #1552]
  40696c:	stp	x28, x27, [sp, #32]
  406970:	stp	x26, x25, [sp, #48]
  406974:	stp	x20, x19, [sp, #96]
  406978:	mov	x19, x1
  40697c:	mov	x20, x0
  406980:	adrp	x24, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406984:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406988:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40698c:	adrp	x27, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406990:	stp	x29, x30, [sp, #16]
  406994:	add	x29, sp, #0x10
  406998:	b	4069a8 <wcrtomb@plt+0x3fe8>
  40699c:	mov	w8, #0x2                   	// #2
  4069a0:	mov	x20, x28
  4069a4:	cbnz	w8, 406a58 <wcrtomb@plt+0x4098>
  4069a8:	cmp	x20, x19
  4069ac:	b.cs	406a58 <wcrtomb@plt+0x4098>  // b.hs, b.nlast
  4069b0:	ldr	x8, [x24, #1448]
  4069b4:	ldr	x0, [x25, #1456]
  4069b8:	sub	x21, x19, x20
  4069bc:	add	x3, sp, #0x8
  4069c0:	mov	x1, x20
  4069c4:	mov	x2, x21
  4069c8:	mov	x4, xzr
  4069cc:	blr	x8
  4069d0:	cmn	x0, #0x1
  4069d4:	b.ne	4069e8 <wcrtomb@plt+0x4028>  // b.any
  4069d8:	ldrb	w8, [x26, #1236]
  4069dc:	cbz	w8, 40699c <wcrtomb@plt+0x3fdc>
  4069e0:	mov	x0, x21
  4069e4:	str	xzr, [sp, #8]
  4069e8:	ldr	x10, [sp, #8]
  4069ec:	ldrb	w9, [x26, #1236]
  4069f0:	add	x8, x20, x0
  4069f4:	cmp	x8, x19
  4069f8:	add	x28, x8, x10
  4069fc:	b.ne	406a04 <wcrtomb@plt+0x4044>  // b.any
  406a00:	cbz	w9, 40699c <wcrtomb@plt+0x3fdc>
  406a04:	cmp	x0, #0x0
  406a08:	b.gt	406a10 <wcrtomb@plt+0x4050>
  406a0c:	cbnz	w9, 406a50 <wcrtomb@plt+0x4090>
  406a10:	cmp	w9, #0x0
  406a14:	csel	x0, x20, x8, ne  // ne = any
  406a18:	csel	x1, x8, x28, ne  // ne = any
  406a1c:	bl	406c30 <wcrtomb@plt+0x4270>
  406a20:	ldr	x8, [x22, #1552]
  406a24:	cbz	x8, 406a38 <wcrtomb@plt+0x4078>
  406a28:	ldrb	w8, [x27, #1436]
  406a2c:	cbnz	w8, 406a38 <wcrtomb@plt+0x4078>
  406a30:	cbnz	w8, 4069a0 <wcrtomb@plt+0x3fe0>
  406a34:	b	406a50 <wcrtomb@plt+0x4090>
  406a38:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406a3c:	ldrb	w8, [x8, #1229]
  406a40:	cmp	w8, #0x1
  406a44:	b.eq	406a80 <wcrtomb@plt+0x40c0>  // b.none
  406a48:	mov	w8, #0x2                   	// #2
  406a4c:	cbnz	w8, 4069a0 <wcrtomb@plt+0x3fe0>
  406a50:	mov	w8, wzr
  406a54:	b	4069a0 <wcrtomb@plt+0x3fe0>
  406a58:	ldr	x8, [x22, #1552]
  406a5c:	ldp	x20, x19, [sp, #96]
  406a60:	ldp	x22, x21, [sp, #80]
  406a64:	ldp	x26, x25, [sp, #48]
  406a68:	sub	x0, x23, x8
  406a6c:	ldp	x24, x23, [sp, #64]
  406a70:	ldp	x28, x27, [sp, #32]
  406a74:	ldp	x29, x30, [sp, #16]
  406a78:	add	sp, sp, #0x70
  406a7c:	ret
  406a80:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406a84:	ldrb	w8, [x8, #1497]
  406a88:	cmp	w8, #0x1
  406a8c:	b.ne	406a9c <wcrtomb@plt+0x40dc>  // b.any
  406a90:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406a94:	ldr	w0, [x8, #992]
  406a98:	bl	4023a0 <exit@plt>
  406a9c:	mov	w0, wzr
  406aa0:	bl	4023a0 <exit@plt>
  406aa4:	stp	x29, x30, [sp, #-64]!
  406aa8:	stp	x22, x21, [sp, #32]
  406aac:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ab0:	ldr	x8, [x21, #1536]
  406ab4:	stp	x20, x19, [sp, #48]
  406ab8:	mov	x19, x0
  406abc:	str	x23, [sp, #16]
  406ac0:	mov	x29, sp
  406ac4:	cbnz	x8, 406ad4 <wcrtomb@plt+0x4114>
  406ac8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406acc:	ldr	x8, [x8, #1584]
  406ad0:	str	x8, [x21, #1536]
  406ad4:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ad8:	ldr	x8, [x22, #1568]
  406adc:	cmp	x8, #0x1
  406ae0:	b.lt	406b34 <wcrtomb@plt+0x4174>  // b.tstop
  406ae4:	ldr	x20, [x21, #1536]
  406ae8:	cmp	x20, x19
  406aec:	b.cs	406b34 <wcrtomb@plt+0x4174>  // b.hs, b.nlast
  406af0:	adrp	x23, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406af4:	ldrb	w1, [x23, #2260]
  406af8:	sub	x2, x19, x20
  406afc:	mov	x0, x20
  406b00:	bl	402820 <memchr@plt>
  406b04:	add	x1, x0, #0x1
  406b08:	mov	w2, #0x2d                  	// #45
  406b0c:	mov	x0, x20
  406b10:	bl	406f10 <wcrtomb@plt+0x4550>
  406b14:	ldr	x8, [x22, #1568]
  406b18:	sub	x9, x8, #0x1
  406b1c:	cmp	x8, #0x2
  406b20:	str	x9, [x22, #1568]
  406b24:	b.lt	406b34 <wcrtomb@plt+0x4174>  // b.tstop
  406b28:	ldr	x20, [x21, #1536]
  406b2c:	cmp	x20, x19
  406b30:	b.cc	406af4 <wcrtomb@plt+0x4134>  // b.lo, b.ul, b.last
  406b34:	ldp	x20, x19, [sp, #48]
  406b38:	ldp	x22, x21, [sp, #32]
  406b3c:	ldr	x23, [sp, #16]
  406b40:	ldp	x29, x30, [sp], #64
  406b44:	ret
  406b48:	adds	x0, x1, x0
  406b4c:	b.cs	406b54 <wcrtomb@plt+0x4194>  // b.hs, b.nlast
  406b50:	ret
  406b54:	stp	x29, x30, [sp, #-16]!
  406b58:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  406b5c:	add	x1, x1, #0x8a0
  406b60:	mov	w2, #0x5                   	// #5
  406b64:	mov	x0, xzr
  406b68:	mov	x29, sp
  406b6c:	bl	402890 <dcgettext@plt>
  406b70:	mov	x2, x0
  406b74:	mov	w0, #0x2                   	// #2
  406b78:	mov	w1, wzr
  406b7c:	bl	4023b0 <error@plt>
  406b80:	stp	x29, x30, [sp, #-48]!
  406b84:	stp	x22, x21, [sp, #16]
  406b88:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406b8c:	ldr	x8, [x22, #1600]
  406b90:	stp	x20, x19, [sp, #32]
  406b94:	mov	x19, x0
  406b98:	mov	x29, sp
  406b9c:	cmp	x8, x0
  406ba0:	b.cs	406bd8 <wcrtomb@plt+0x4218>  // b.hs, b.nlast
  406ba4:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406ba8:	ldrb	w21, [x9, #2260]
  406bac:	mov	x20, xzr
  406bb0:	sub	x2, x19, x8
  406bb4:	mov	x0, x8
  406bb8:	mov	w1, w21
  406bbc:	bl	402820 <memchr@plt>
  406bc0:	cbz	x0, 406bdc <wcrtomb@plt+0x421c>
  406bc4:	add	x8, x0, #0x1
  406bc8:	cmp	x8, x19
  406bcc:	add	x20, x20, #0x1
  406bd0:	b.cc	406bb0 <wcrtomb@plt+0x41f0>  // b.lo, b.ul, b.last
  406bd4:	b	406bdc <wcrtomb@plt+0x421c>
  406bd8:	mov	x20, xzr
  406bdc:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406be0:	ldr	x0, [x21, #1544]
  406be4:	mov	x1, x20
  406be8:	bl	406b48 <wcrtomb@plt+0x4188>
  406bec:	str	x0, [x21, #1544]
  406bf0:	str	x19, [x22, #1600]
  406bf4:	ldp	x20, x19, [sp, #32]
  406bf8:	ldp	x22, x21, [sp, #16]
  406bfc:	ldp	x29, x30, [sp], #48
  406c00:	ret
  406c04:	cmp	x1, #0x1
  406c08:	b.lt	406c20 <wcrtomb@plt+0x4260>  // b.tstop
  406c0c:	add	x8, x0, x1
  406c10:	ldrb	w9, [x0], #1
  406c14:	cbnz	w9, 406c28 <wcrtomb@plt+0x4268>
  406c18:	cmp	x0, x8
  406c1c:	b.cc	406c10 <wcrtomb@plt+0x4250>  // b.lo, b.ul, b.last
  406c20:	mov	w0, #0x1                   	// #1
  406c24:	ret
  406c28:	mov	w0, wzr
  406c2c:	ret
  406c30:	stp	x29, x30, [sp, #-96]!
  406c34:	stp	x26, x25, [sp, #32]
  406c38:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406c3c:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406c40:	stp	x20, x19, [sp, #80]
  406c44:	ldrb	w9, [x25, #1440]
  406c48:	ldrb	w20, [x8, #2260]
  406c4c:	stp	x24, x23, [sp, #48]
  406c50:	stp	x22, x21, [sp, #64]
  406c54:	mov	x19, x1
  406c58:	mov	x21, x0
  406c5c:	adrp	x24, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406c60:	stp	x28, x27, [sp, #16]
  406c64:	mov	x29, sp
  406c68:	cbnz	w9, 406c80 <wcrtomb@plt+0x42c0>
  406c6c:	ldr	x8, [x24, #1568]
  406c70:	cmp	x8, #0x1
  406c74:	b.lt	406c80 <wcrtomb@plt+0x42c0>  // b.tstop
  406c78:	mov	x0, x21
  406c7c:	bl	406aa4 <wcrtomb@plt+0x40e4>
  406c80:	ldrb	w8, [x25, #1440]
  406c84:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406c88:	adrp	x27, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406c8c:	mov	x23, x21
  406c90:	cbnz	w8, 406d90 <wcrtomb@plt+0x43d0>
  406c94:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406c98:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406c9c:	adrp	x12, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ca0:	ldr	x8, [x8, #1536]
  406ca4:	ldr	x10, [x9, #1584]
  406ca8:	ldr	x9, [x12, #1192]
  406cac:	cmp	x8, #0x0
  406cb0:	csel	x10, x10, x8, eq  // eq = none
  406cb4:	cmp	x9, #0x1
  406cb8:	b.lt	406cfc <wcrtomb@plt+0x433c>  // b.tstop
  406cbc:	ldr	x9, [x12, #1192]
  406cc0:	mov	x11, xzr
  406cc4:	mov	x22, x21
  406cc8:	b	406cd8 <wcrtomb@plt+0x4318>
  406ccc:	add	x11, x11, #0x1
  406cd0:	cmp	x11, x9
  406cd4:	b.ge	406d00 <wcrtomb@plt+0x4340>  // b.tcont
  406cd8:	cmp	x22, x10
  406cdc:	b.ls	406ccc <wcrtomb@plt+0x430c>  // b.plast
  406ce0:	mov	x12, x22
  406ce4:	ldurb	w13, [x12, #-2]
  406ce8:	sub	x22, x12, #0x1
  406cec:	mov	x12, x22
  406cf0:	cmp	w13, w20
  406cf4:	b.ne	406ce4 <wcrtomb@plt+0x4324>  // b.any
  406cf8:	b	406ccc <wcrtomb@plt+0x430c>
  406cfc:	mov	x22, x21
  406d00:	ldr	x10, [x26, #1200]
  406d04:	tst	x10, x9
  406d08:	b.lt	406d50 <wcrtomb@plt+0x4390>  // b.tstop
  406d0c:	ldrb	w9, [x27, #1629]
  406d10:	cmp	w9, #0x1
  406d14:	b.ne	406d50 <wcrtomb@plt+0x4390>  // b.any
  406d18:	cmp	x22, x8
  406d1c:	b.eq	406d50 <wcrtomb@plt+0x4390>  // b.none
  406d20:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406d24:	ldr	x8, [x23, #888]
  406d28:	cbz	x8, 406d50 <wcrtomb@plt+0x4390>
  406d2c:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406d30:	ldr	x0, [x28, #944]
  406d34:	bl	406e98 <wcrtomb@plt+0x44d8>
  406d38:	ldr	x0, [x23, #888]
  406d3c:	bl	406eb8 <wcrtomb@plt+0x44f8>
  406d40:	ldr	x0, [x28, #944]
  406d44:	bl	406ef0 <wcrtomb@plt+0x4530>
  406d48:	mov	w0, #0xa                   	// #10
  406d4c:	bl	40629c <wcrtomb@plt+0x38dc>
  406d50:	cmp	x22, x21
  406d54:	b.cs	406d8c <wcrtomb@plt+0x43cc>  // b.hs, b.nlast
  406d58:	sub	x2, x21, x22
  406d5c:	mov	x0, x22
  406d60:	mov	w1, w20
  406d64:	bl	402820 <memchr@plt>
  406d68:	add	x23, x0, #0x1
  406d6c:	mov	w2, #0x2d                  	// #45
  406d70:	mov	x0, x22
  406d74:	mov	x1, x23
  406d78:	bl	406f10 <wcrtomb@plt+0x4550>
  406d7c:	cmp	x23, x21
  406d80:	mov	x22, x23
  406d84:	b.cc	406d58 <wcrtomb@plt+0x4398>  // b.lo, b.ul, b.last
  406d88:	b	406d90 <wcrtomb@plt+0x43d0>
  406d8c:	mov	x23, x22
  406d90:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406d94:	ldrb	w8, [x8, #1236]
  406d98:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406d9c:	cbz	w8, 406e08 <wcrtomb@plt+0x4448>
  406da0:	cmp	x23, x19
  406da4:	mov	x28, xzr
  406da8:	b.cs	406e2c <wcrtomb@plt+0x446c>  // b.hs, b.nlast
  406dac:	ldr	x8, [x22, #1552]
  406db0:	cmp	x8, #0x1
  406db4:	b.lt	406e2c <wcrtomb@plt+0x446c>  // b.tstop
  406db8:	mov	x28, xzr
  406dbc:	sub	x2, x19, x23
  406dc0:	mov	x0, x23
  406dc4:	mov	w1, w20
  406dc8:	bl	402820 <memchr@plt>
  406dcc:	ldrb	w8, [x25, #1440]
  406dd0:	add	x21, x0, #0x1
  406dd4:	cbnz	w8, 406de8 <wcrtomb@plt+0x4428>
  406dd8:	mov	w2, #0x3a                  	// #58
  406ddc:	mov	x0, x23
  406de0:	mov	x1, x21
  406de4:	bl	406f10 <wcrtomb@plt+0x4550>
  406de8:	cmp	x21, x19
  406dec:	add	x28, x28, #0x1
  406df0:	b.cs	406e30 <wcrtomb@plt+0x4470>  // b.hs, b.nlast
  406df4:	ldr	x8, [x22, #1552]
  406df8:	mov	x23, x21
  406dfc:	cmp	x28, x8
  406e00:	b.lt	406dbc <wcrtomb@plt+0x43fc>  // b.tstop
  406e04:	b	406e30 <wcrtomb@plt+0x4470>
  406e08:	ldrb	w8, [x25, #1440]
  406e0c:	cbnz	w8, 406e20 <wcrtomb@plt+0x4460>
  406e10:	mov	w2, #0x3a                  	// #58
  406e14:	mov	x0, x21
  406e18:	mov	x1, x19
  406e1c:	bl	406f10 <wcrtomb@plt+0x4550>
  406e20:	mov	w28, #0x1                   	// #1
  406e24:	mov	x21, x19
  406e28:	b	406e30 <wcrtomb@plt+0x4470>
  406e2c:	mov	x21, x23
  406e30:	mov	w8, #0x1                   	// #1
  406e34:	strb	w8, [x27, #1629]
  406e38:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406e3c:	ldr	x12, [x26, #1200]
  406e40:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406e44:	ldr	x8, [x8, #1616]
  406e48:	ldrb	w13, [x25, #1440]
  406e4c:	ldr	x9, [x22, #1552]
  406e50:	ldr	x10, [x10, #1592]
  406e54:	cmp	x12, #0x0
  406e58:	add	x8, x8, x21
  406e5c:	ccmp	w13, #0x0, #0x0, gt
  406e60:	sub	x9, x9, x28
  406e64:	sub	x8, x8, x10
  406e68:	csel	x10, x12, xzr, eq  // eq = none
  406e6c:	str	x10, [x24, #1568]
  406e70:	str	x9, [x22, #1552]
  406e74:	ldp	x20, x19, [sp, #80]
  406e78:	ldp	x22, x21, [sp, #64]
  406e7c:	ldp	x24, x23, [sp, #48]
  406e80:	ldp	x26, x25, [sp, #32]
  406e84:	ldp	x28, x27, [sp, #16]
  406e88:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406e8c:	str	x8, [x11, #1560]
  406e90:	ldp	x29, x30, [sp], #96
  406e94:	ret
  406e98:	stp	x29, x30, [sp, #-16]!
  406e9c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ea0:	ldr	w8, [x8, #1240]
  406ea4:	mov	x29, sp
  406ea8:	cbz	w8, 406eb0 <wcrtomb@plt+0x44f0>
  406eac:	bl	4070c0 <wcrtomb@plt+0x4700>
  406eb0:	ldp	x29, x30, [sp], #16
  406eb4:	ret
  406eb8:	stp	x29, x30, [sp, #-16]!
  406ebc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ec0:	ldr	x1, [x8, #1128]
  406ec4:	mov	x29, sp
  406ec8:	bl	4028a0 <fputs_unlocked@plt>
  406ecc:	tbnz	w0, #31, 406ed8 <wcrtomb@plt+0x4518>
  406ed0:	ldp	x29, x30, [sp], #16
  406ed4:	ret
  406ed8:	bl	402930 <__errno_location@plt>
  406edc:	ldr	w8, [x0]
  406ee0:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ee4:	str	w8, [x9, #1500]
  406ee8:	ldp	x29, x30, [sp], #16
  406eec:	ret
  406ef0:	stp	x29, x30, [sp, #-16]!
  406ef4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406ef8:	ldr	w8, [x8, #1240]
  406efc:	mov	x29, sp
  406f00:	cbz	w8, 406f08 <wcrtomb@plt+0x4548>
  406f04:	bl	4070e8 <wcrtomb@plt+0x4728>
  406f08:	ldp	x29, x30, [sp], #16
  406f0c:	ret
  406f10:	stp	x29, x30, [sp, #-48]!
  406f14:	stp	x22, x21, [sp, #16]
  406f18:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406f1c:	ldrb	w8, [x22, #1208]
  406f20:	stp	x20, x19, [sp, #32]
  406f24:	mov	w21, w2
  406f28:	mov	x19, x1
  406f2c:	mov	x20, x0
  406f30:	mov	x29, sp
  406f34:	tbnz	w8, #0, 406f54 <wcrtomb@plt+0x4594>
  406f38:	mvn	x8, x20
  406f3c:	add	x1, x19, x8
  406f40:	mov	x0, x20
  406f44:	mov	x2, x19
  406f48:	mov	w3, w21
  406f4c:	bl	40710c <wcrtomb@plt+0x474c>
  406f50:	tbz	w0, #0, 40708c <wcrtomb@plt+0x46cc>
  406f54:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406f58:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406f5c:	ldr	w10, [x9, #1240]
  406f60:	ldrb	w8, [x8, #1236]
  406f64:	and	w11, w21, #0xff
  406f68:	cmp	w11, #0x3a
  406f6c:	cset	w9, eq  // eq = none
  406f70:	cbz	w10, 406fcc <wcrtomb@plt+0x460c>
  406f74:	cmp	w8, #0x0
  406f78:	cset	w14, ne  // ne = any
  406f7c:	cmp	w10, #0x0
  406f80:	cset	w15, lt  // lt = tstop
  406f84:	cmp	w11, #0x3a
  406f88:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406f8c:	and	w14, w14, w15
  406f90:	adrp	x15, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406f94:	add	x11, x11, #0x388
  406f98:	add	x15, x15, #0x380
  406f9c:	csel	x11, x11, x15, eq  // eq = none
  406fa0:	cset	w15, eq  // eq = none
  406fa4:	adrp	x12, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406fa8:	adrp	x13, 437000 <_obstack_memory_used@@Base+0x20bcc>
  406fac:	eor	w14, w15, w14
  406fb0:	add	x12, x12, #0x3b8
  406fb4:	add	x13, x13, #0x3c0
  406fb8:	cmp	w14, #0x0
  406fbc:	csel	x12, x12, x13, ne  // ne = any
  406fc0:	ldr	x21, [x12]
  406fc4:	ldr	x3, [x11]
  406fc8:	b	406fd4 <wcrtomb@plt+0x4614>
  406fcc:	mov	x21, xzr
  406fd0:	mov	x3, xzr
  406fd4:	ldrb	w11, [x22, #1208]
  406fd8:	cmp	w8, w9
  406fdc:	b.eq	406fe4 <wcrtomb@plt+0x4624>  // b.none
  406fe0:	tbnz	w11, #0, 406ff8 <wcrtomb@plt+0x4638>
  406fe4:	cbz	w10, 407048 <wcrtomb@plt+0x4688>
  406fe8:	ldrb	w10, [x21]
  406fec:	cbnz	w10, 406ff8 <wcrtomb@plt+0x4638>
  406ff0:	ldrb	w10, [x3]
  406ff4:	cbz	w10, 407048 <wcrtomb@plt+0x4688>
  406ff8:	cmp	w8, w9
  406ffc:	b.eq	407024 <wcrtomb@plt+0x4664>  // b.none
  407000:	tbnz	w11, #0, 40700c <wcrtomb@plt+0x464c>
  407004:	ldrb	w8, [x3]
  407008:	cbz	w8, 407024 <wcrtomb@plt+0x4664>
  40700c:	mov	x0, x20
  407010:	mov	x1, x19
  407014:	mov	x2, x21
  407018:	bl	40728c <wcrtomb@plt+0x48cc>
  40701c:	mov	x20, x0
  407020:	cbz	x0, 40708c <wcrtomb@plt+0x46cc>
  407024:	ldrb	w8, [x22, #1208]
  407028:	tbnz	w8, #0, 407048 <wcrtomb@plt+0x4688>
  40702c:	ldrb	w8, [x21]
  407030:	cbz	w8, 407048 <wcrtomb@plt+0x4688>
  407034:	mov	x0, x20
  407038:	mov	x1, x19
  40703c:	mov	x2, x21
  407040:	bl	407408 <wcrtomb@plt+0x4a48>
  407044:	mov	x20, x0
  407048:	cmp	x20, x19
  40704c:	b.cs	407064 <wcrtomb@plt+0x46a4>  // b.hs, b.nlast
  407050:	ldrb	w8, [x22, #1208]
  407054:	cbnz	w8, 407064 <wcrtomb@plt+0x46a4>
  407058:	sub	x1, x19, x20
  40705c:	mov	x0, x20
  407060:	bl	4074ac <wcrtomb@plt+0x4aec>
  407064:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407068:	ldrb	w8, [x8, #1280]
  40706c:	cmp	w8, #0x1
  407070:	b.ne	407078 <wcrtomb@plt+0x46b8>  // b.any
  407074:	bl	406364 <wcrtomb@plt+0x39a4>
  407078:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40707c:	ldr	w20, [x8, #1500]
  407080:	cbnz	w20, 40709c <wcrtomb@plt+0x46dc>
  407084:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407088:	str	x19, [x8, #1536]
  40708c:	ldp	x20, x19, [sp, #32]
  407090:	ldp	x22, x21, [sp, #16]
  407094:	ldp	x29, x30, [sp], #48
  407098:	ret
  40709c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  4070a0:	add	x1, x1, #0x88f
  4070a4:	mov	w2, #0x5                   	// #5
  4070a8:	mov	x0, xzr
  4070ac:	bl	402890 <dcgettext@plt>
  4070b0:	mov	x2, x0
  4070b4:	mov	w0, #0x2                   	// #2
  4070b8:	mov	w1, w20
  4070bc:	bl	4023b0 <error@plt>
  4070c0:	stp	x29, x30, [sp, #-16]!
  4070c4:	ldrb	w8, [x0]
  4070c8:	mov	x29, sp
  4070cc:	cbz	w8, 4070e0 <wcrtomb@plt+0x4720>
  4070d0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4070d4:	mov	x1, x0
  4070d8:	ldr	x0, [x8, #968]
  4070dc:	bl	4140a8 <wcrtomb@plt+0x116e8>
  4070e0:	ldp	x29, x30, [sp], #16
  4070e4:	ret
  4070e8:	stp	x29, x30, [sp, #-16]!
  4070ec:	ldrb	w8, [x0]
  4070f0:	mov	x29, sp
  4070f4:	cbz	w8, 407104 <wcrtomb@plt+0x4744>
  4070f8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4070fc:	ldr	x0, [x8, #976]
  407100:	bl	4140bc <wcrtomb@plt+0x116fc>
  407104:	ldp	x29, x30, [sp], #16
  407108:	ret
  40710c:	stp	x29, x30, [sp, #-80]!
  407110:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407114:	ldr	w8, [x8, #1216]
  407118:	stp	x22, x21, [sp, #48]
  40711c:	stp	x20, x19, [sp, #64]
  407120:	mov	w20, w3
  407124:	mov	x22, x2
  407128:	mov	x19, x1
  40712c:	cmp	w8, #0x1
  407130:	mov	x21, x0
  407134:	stp	x26, x25, [sp, #16]
  407138:	stp	x24, x23, [sp, #32]
  40713c:	mov	x29, sp
  407140:	b.eq	407170 <wcrtomb@plt+0x47b0>  // b.none
  407144:	ldrb	w23, [x21, x19]
  407148:	mov	x0, x21
  40714c:	mov	x1, x19
  407150:	bl	4074f4 <wcrtomb@plt+0x4b34>
  407154:	strb	w23, [x21, x19]
  407158:	tbz	w0, #0, 407170 <wcrtomb@plt+0x47b0>
  40715c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407160:	mov	w9, #0x1                   	// #1
  407164:	mov	w0, wzr
  407168:	strb	w9, [x8, #1577]
  40716c:	b	407274 <wcrtomb@plt+0x48b4>
  407170:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407174:	ldr	w8, [x23, #1468]
  407178:	cbz	w8, 4071a4 <wcrtomb@plt+0x47e4>
  40717c:	bl	40622c <wcrtomb@plt+0x386c>
  407180:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407184:	ldrb	w8, [x8, #1176]
  407188:	cmp	w8, #0x1
  40718c:	b.ne	40719c <wcrtomb@plt+0x47dc>  // b.any
  407190:	mov	w0, w20
  407194:	bl	406260 <wcrtomb@plt+0x38a0>
  407198:	b	4071a4 <wcrtomb@plt+0x47e4>
  40719c:	mov	w0, wzr
  4071a0:	bl	40629c <wcrtomb@plt+0x38dc>
  4071a4:	adrp	x24, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4071a8:	ldrb	w8, [x24, #1228]
  4071ac:	cmp	w8, #0x1
  4071b0:	b.ne	4071fc <wcrtomb@plt+0x483c>  // b.any
  4071b4:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4071b8:	ldr	x8, [x25, #1600]
  4071bc:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4071c0:	cmp	x8, x22
  4071c4:	b.cs	4071e4 <wcrtomb@plt+0x4824>  // b.hs, b.nlast
  4071c8:	mov	x0, x21
  4071cc:	bl	406b80 <wcrtomb@plt+0x41c0>
  4071d0:	ldr	x0, [x26, #1544]
  4071d4:	mov	w1, #0x1                   	// #1
  4071d8:	bl	406b48 <wcrtomb@plt+0x4188>
  4071dc:	str	x0, [x26, #1544]
  4071e0:	str	x22, [x25, #1600]
  4071e4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4071e8:	ldr	x0, [x26, #1544]
  4071ec:	ldr	x1, [x8, #928]
  4071f0:	bl	407578 <wcrtomb@plt+0x4bb8>
  4071f4:	mov	w0, w20
  4071f8:	bl	406260 <wcrtomb@plt+0x38a0>
  4071fc:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407200:	ldrb	w8, [x22, #1222]
  407204:	cmp	w8, #0x1
  407208:	b.ne	407238 <wcrtomb@plt+0x4878>  // b.any
  40720c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407210:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407214:	ldr	x9, [x9, #1584]
  407218:	ldr	x0, [x8, #1528]
  40721c:	sub	x1, x21, x9
  407220:	bl	406b48 <wcrtomb@plt+0x4188>
  407224:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407228:	ldr	x1, [x8, #936]
  40722c:	bl	407578 <wcrtomb@plt+0x4bb8>
  407230:	mov	w0, w20
  407234:	bl	406260 <wcrtomb@plt+0x38a0>
  407238:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40723c:	ldrb	w8, [x8, #1220]
  407240:	cmp	w8, #0x1
  407244:	b.ne	407270 <wcrtomb@plt+0x48b0>  // b.any
  407248:	mov	w0, #0x1                   	// #1
  40724c:	cbz	x19, 407274 <wcrtomb@plt+0x48b4>
  407250:	ldr	w8, [x23, #1468]
  407254:	ldrb	w9, [x24, #1228]
  407258:	ldrb	w10, [x22, #1222]
  40725c:	orr	w8, w8, w9
  407260:	orr	w8, w8, w10
  407264:	cbz	w8, 407274 <wcrtomb@plt+0x48b4>
  407268:	mov	w0, #0x9                   	// #9
  40726c:	bl	40629c <wcrtomb@plt+0x38dc>
  407270:	mov	w0, #0x1                   	// #1
  407274:	ldp	x20, x19, [sp, #64]
  407278:	ldp	x22, x21, [sp, #48]
  40727c:	ldp	x24, x23, [sp, #32]
  407280:	ldp	x26, x25, [sp, #16]
  407284:	ldp	x29, x30, [sp], #80
  407288:	ret
  40728c:	sub	sp, sp, #0x70
  407290:	stp	x26, x25, [sp, #48]
  407294:	stp	x20, x19, [sp, #96]
  407298:	mov	x19, x1
  40729c:	mov	x20, x0
  4072a0:	cmp	x0, x1
  4072a4:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4072a8:	stp	x29, x30, [sp, #16]
  4072ac:	stp	x28, x27, [sp, #32]
  4072b0:	stp	x24, x23, [sp, #64]
  4072b4:	stp	x22, x21, [sp, #80]
  4072b8:	add	x29, sp, #0x10
  4072bc:	str	x2, [sp]
  4072c0:	b.cs	4073c4 <wcrtomb@plt+0x4a04>  // b.hs, b.nlast
  4072c4:	mov	x21, x3
  4072c8:	mov	x27, xzr
  4072cc:	sub	x23, x19, x20
  4072d0:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4072d4:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4072d8:	mov	x25, x20
  4072dc:	b	407300 <wcrtomb@plt+0x4940>
  4072e0:	mov	w8, #0x1                   	// #1
  4072e4:	cmp	x27, #0x0
  4072e8:	str	x8, [sp, #8]
  4072ec:	csel	x27, x25, x27, eq  // eq = none
  4072f0:	ldr	x8, [sp, #8]
  4072f4:	add	x25, x24, x8
  4072f8:	cmp	x25, x19
  4072fc:	b.cs	4073cc <wcrtomb@plt+0x4a0c>  // b.hs, b.nlast
  407300:	ldr	x8, [x28, #1448]
  407304:	ldr	x0, [x22, #1456]
  407308:	add	x3, sp, #0x8
  40730c:	mov	x1, x20
  407310:	mov	x2, x23
  407314:	mov	x4, x25
  407318:	blr	x8
  40731c:	cmn	x0, #0x1
  407320:	b.eq	4073cc <wcrtomb@plt+0x4a0c>  // b.none
  407324:	add	x24, x20, x0
  407328:	cmp	x24, x19
  40732c:	b.eq	4073cc <wcrtomb@plt+0x4a0c>  // b.none
  407330:	ldr	x1, [sp, #8]
  407334:	cbz	x1, 4072e0 <wcrtomb@plt+0x4920>
  407338:	ldrb	w8, [x26, #1208]
  40733c:	cmp	w8, #0x1
  407340:	b.ne	407370 <wcrtomb@plt+0x49b0>  // b.any
  407344:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407348:	ldrb	w8, [x8, #1236]
  40734c:	mov	w9, #0x3a                  	// #58
  407350:	mov	x0, x24
  407354:	mov	x2, x19
  407358:	cmp	w8, #0x0
  40735c:	mov	w8, #0x2d                  	// #45
  407360:	csel	w3, w9, w8, eq  // eq = none
  407364:	bl	40710c <wcrtomb@plt+0x474c>
  407368:	tbnz	w0, #0, 40738c <wcrtomb@plt+0x49cc>
  40736c:	b	407400 <wcrtomb@plt+0x4a40>
  407370:	ldr	x0, [sp]
  407374:	bl	4070c0 <wcrtomb@plt+0x4700>
  407378:	cmp	x27, #0x0
  40737c:	csel	x0, x25, x27, eq  // eq = none
  407380:	sub	x1, x24, x0
  407384:	bl	4074ac <wcrtomb@plt+0x4aec>
  407388:	mov	x27, xzr
  40738c:	mov	x0, x21
  407390:	bl	406e98 <wcrtomb@plt+0x44d8>
  407394:	ldr	x1, [sp, #8]
  407398:	mov	x0, x24
  40739c:	bl	4074ac <wcrtomb@plt+0x4aec>
  4073a0:	mov	x0, x21
  4073a4:	bl	406ef0 <wcrtomb@plt+0x4530>
  4073a8:	ldrb	w8, [x26, #1208]
  4073ac:	cmp	w8, #0x1
  4073b0:	b.ne	4072f0 <wcrtomb@plt+0x4930>  // b.any
  4073b4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4073b8:	ldrb	w0, [x8, #2260]
  4073bc:	bl	40629c <wcrtomb@plt+0x38dc>
  4073c0:	b	4072f0 <wcrtomb@plt+0x4930>
  4073c4:	mov	x27, xzr
  4073c8:	mov	x25, x20
  4073cc:	ldrb	w8, [x26, #1208]
  4073d0:	tbnz	w8, #0, 4073dc <wcrtomb@plt+0x4a1c>
  4073d4:	cmp	x27, #0x0
  4073d8:	csel	x19, x25, x27, eq  // eq = none
  4073dc:	mov	x0, x19
  4073e0:	ldp	x20, x19, [sp, #96]
  4073e4:	ldp	x22, x21, [sp, #80]
  4073e8:	ldp	x24, x23, [sp, #64]
  4073ec:	ldp	x26, x25, [sp, #48]
  4073f0:	ldp	x28, x27, [sp, #32]
  4073f4:	ldp	x29, x30, [sp, #16]
  4073f8:	add	sp, sp, #0x70
  4073fc:	ret
  407400:	mov	x19, xzr
  407404:	b	4073dc <wcrtomb@plt+0x4a1c>
  407408:	stp	x29, x30, [sp, #-48]!
  40740c:	stp	x20, x19, [sp, #32]
  407410:	mov	x19, x0
  407414:	cmp	x1, x0
  407418:	mov	x20, x2
  40741c:	stp	x22, x21, [sp, #16]
  407420:	mov	x29, sp
  407424:	b.ls	407440 <wcrtomb@plt+0x4a80>  // b.plast
  407428:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40742c:	ldurb	w8, [x1, #-1]
  407430:	ldrb	w9, [x9, #2260]
  407434:	cmp	w8, w9
  407438:	cset	w8, eq  // eq = none
  40743c:	b	407444 <wcrtomb@plt+0x4a84>
  407440:	mov	x8, xzr
  407444:	sub	x9, x1, x8
  407448:	cmp	x9, x19
  40744c:	b.ls	407464 <wcrtomb@plt+0x4aa4>  // b.plast
  407450:	mvn	x9, x8
  407454:	ldrb	w9, [x1, x9]
  407458:	cmp	w9, #0xd
  40745c:	cset	w9, eq  // eq = none
  407460:	b	407468 <wcrtomb@plt+0x4aa8>
  407464:	mov	x9, xzr
  407468:	add	x8, x8, x9
  40746c:	sub	x22, x1, x8
  407470:	subs	x21, x22, x19
  407474:	b.eq	407498 <wcrtomb@plt+0x4ad8>  // b.none
  407478:	mov	x0, x20
  40747c:	bl	4070c0 <wcrtomb@plt+0x4700>
  407480:	mov	x0, x19
  407484:	mov	x1, x21
  407488:	bl	4074ac <wcrtomb@plt+0x4aec>
  40748c:	mov	x0, x20
  407490:	bl	4070e8 <wcrtomb@plt+0x4728>
  407494:	mov	x19, x22
  407498:	mov	x0, x19
  40749c:	ldp	x20, x19, [sp, #32]
  4074a0:	ldp	x22, x21, [sp, #16]
  4074a4:	ldp	x29, x30, [sp], #48
  4074a8:	ret
  4074ac:	stp	x29, x30, [sp, #-32]!
  4074b0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4074b4:	ldr	x3, [x8, #1128]
  4074b8:	str	x19, [sp, #16]
  4074bc:	mov	x19, x1
  4074c0:	mov	w1, #0x1                   	// #1
  4074c4:	mov	x2, x19
  4074c8:	mov	x29, sp
  4074cc:	bl	402370 <fwrite_unlocked@plt>
  4074d0:	cmp	x0, x19
  4074d4:	b.eq	4074e8 <wcrtomb@plt+0x4b28>  // b.none
  4074d8:	bl	402930 <__errno_location@plt>
  4074dc:	ldr	w8, [x0]
  4074e0:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4074e4:	str	w8, [x9, #1500]
  4074e8:	ldr	x19, [sp, #16]
  4074ec:	ldp	x29, x30, [sp], #32
  4074f0:	ret
  4074f4:	sub	sp, sp, #0x30
  4074f8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4074fc:	ldr	x8, [x8, #1512]
  407500:	stp	x29, x30, [sp, #16]
  407504:	stp	x20, x19, [sp, #32]
  407508:	add	x29, sp, #0x10
  40750c:	cbz	x8, 40755c <wcrtomb@plt+0x4b9c>
  407510:	add	x20, x0, x1
  407514:	mov	w8, #0xff                  	// #255
  407518:	str	xzr, [sp, #8]
  40751c:	strb	w8, [x20]
  407520:	bl	4075c0 <wcrtomb@plt+0x4c00>
  407524:	cmp	x0, x20
  407528:	b.cs	40755c <wcrtomb@plt+0x4b9c>  // b.hs, b.nlast
  40752c:	mov	x19, x0
  407530:	sub	x1, x20, x19
  407534:	add	x2, sp, #0x8
  407538:	mov	x0, x19
  40753c:	bl	416068 <wcrtomb@plt+0x136a8>
  407540:	cmn	x0, #0x3
  407544:	b.hi	407570 <wcrtomb@plt+0x4bb0>  // b.pmore
  407548:	add	x0, x19, x0
  40754c:	bl	4075c0 <wcrtomb@plt+0x4c00>
  407550:	mov	x19, x0
  407554:	cmp	x0, x20
  407558:	b.cc	407530 <wcrtomb@plt+0x4b70>  // b.lo, b.ul, b.last
  40755c:	mov	w0, wzr
  407560:	ldp	x20, x19, [sp, #32]
  407564:	ldp	x29, x30, [sp, #16]
  407568:	add	sp, sp, #0x30
  40756c:	ret
  407570:	mov	w0, #0x1                   	// #1
  407574:	b	407560 <wcrtomb@plt+0x4ba0>
  407578:	stp	x29, x30, [sp, #-32]!
  40757c:	stp	x20, x19, [sp, #16]
  407580:	mov	x20, x0
  407584:	mov	x0, x1
  407588:	mov	x29, sp
  40758c:	mov	x19, x1
  407590:	bl	406e98 <wcrtomb@plt+0x44d8>
  407594:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407598:	ldr	w1, [x8, #1580]
  40759c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  4075a0:	add	x0, x0, #0x89b
  4075a4:	mov	x2, x20
  4075a8:	bl	4062cc <wcrtomb@plt+0x390c>
  4075ac:	mov	x0, x19
  4075b0:	bl	406ef0 <wcrtomb@plt+0x4530>
  4075b4:	ldp	x20, x19, [sp, #16]
  4075b8:	ldp	x29, x30, [sp], #32
  4075bc:	ret
  4075c0:	stp	x29, x30, [sp, #-32]!
  4075c4:	stp	x20, x19, [sp, #16]
  4075c8:	mov	x19, x0
  4075cc:	tst	x0, #0x7
  4075d0:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4075d4:	mov	x29, sp
  4075d8:	b.eq	407600 <wcrtomb@plt+0x4c40>  // b.none
  4075dc:	ldrb	w0, [x19]
  4075e0:	bl	4093dc <wcrtomb@plt+0x6a1c>
  4075e4:	ldr	w8, [x20, #1512]
  4075e8:	and	w8, w0, w8
  4075ec:	tst	x8, #0xff
  4075f0:	b.ne	407630 <wcrtomb@plt+0x4c70>  // b.any
  4075f4:	add	x19, x19, #0x1
  4075f8:	tst	x19, #0x7
  4075fc:	b.ne	4075dc <wcrtomb@plt+0x4c1c>  // b.any
  407600:	ldr	x8, [x20, #1512]
  407604:	sub	x19, x19, #0x9
  407608:	ldur	x9, [x19, #9]
  40760c:	add	x19, x19, #0x8
  407610:	tst	x8, x9
  407614:	b.eq	407608 <wcrtomb@plt+0x4c48>  // b.none
  407618:	ldrb	w0, [x19, #1]!
  40761c:	bl	4093dc <wcrtomb@plt+0x6a1c>
  407620:	ldr	w8, [x20, #1512]
  407624:	and	w8, w0, w8
  407628:	tst	x8, #0xff
  40762c:	b.eq	407618 <wcrtomb@plt+0x4c58>  // b.none
  407630:	mov	x0, x19
  407634:	ldp	x20, x19, [sp, #16]
  407638:	ldp	x29, x30, [sp], #32
  40763c:	ret
  407640:	stp	x29, x30, [sp, #-32]!
  407644:	ldr	w8, [x0, #16]
  407648:	str	x19, [sp, #16]
  40764c:	mov	x29, sp
  407650:	and	w8, w8, #0xf000
  407654:	cmp	w8, #0x1, lsl #12
  407658:	b.ne	4076a0 <wcrtomb@plt+0x4ce0>  // b.any
  40765c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  407660:	ldrb	w8, [x8, #1432]
  407664:	cmp	w8, #0x1
  407668:	b.ne	4076a0 <wcrtomb@plt+0x4ce0>  // b.any
  40766c:	mov	w2, #0x1                   	// #1
  407670:	mov	w4, #0x18000               	// #98304
  407674:	mov	w5, #0x1                   	// #1
  407678:	mov	w0, wzr
  40767c:	mov	x1, xzr
  407680:	mov	x3, xzr
  407684:	bl	402520 <splice@plt>
  407688:	mov	x19, x0
  40768c:	tbz	x0, #63, 4076d4 <wcrtomb@plt+0x4d14>
  407690:	bl	402930 <__errno_location@plt>
  407694:	ldr	w8, [x0]
  407698:	cmp	w8, #0x16
  40769c:	b.ne	4076d4 <wcrtomb@plt+0x4d14>  // b.any
  4076a0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4076a4:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4076a8:	ldr	x1, [x8, #1488]
  4076ac:	ldr	x2, [x9, #1480]
  4076b0:	mov	w0, wzr
  4076b4:	bl	413550 <wcrtomb@plt+0x10b90>
  4076b8:	cmn	x0, #0x1
  4076bc:	b.eq	4076cc <wcrtomb@plt+0x4d0c>  // b.none
  4076c0:	cbnz	x0, 4076a0 <wcrtomb@plt+0x4ce0>
  4076c4:	mov	w0, #0x1                   	// #1
  4076c8:	b	40770c <wcrtomb@plt+0x4d4c>
  4076cc:	mov	w0, wzr
  4076d0:	b	40770c <wcrtomb@plt+0x4d4c>
  4076d4:	cmp	x19, #0x1
  4076d8:	b.lt	407704 <wcrtomb@plt+0x4d44>  // b.tstop
  4076dc:	mov	w2, #0x1                   	// #1
  4076e0:	mov	w4, #0x18000               	// #98304
  4076e4:	mov	w5, #0x1                   	// #1
  4076e8:	mov	w0, wzr
  4076ec:	mov	x1, xzr
  4076f0:	mov	x3, xzr
  4076f4:	bl	402520 <splice@plt>
  4076f8:	cmp	x0, #0x0
  4076fc:	b.gt	4076dc <wcrtomb@plt+0x4d1c>
  407700:	mov	x19, x0
  407704:	cmp	x19, #0x0
  407708:	cset	w0, eq  // eq = none
  40770c:	ldr	x19, [sp, #16]
  407710:	ldp	x29, x30, [sp], #32
  407714:	ret
  407718:	mov	w8, w0
  40771c:	cmp	w0, #0x1f
  407720:	mov	w0, #0x1                   	// #1
  407724:	b.eq	407730 <wcrtomb@plt+0x4d70>  // b.none
  407728:	cmp	w8, #0x28
  40772c:	b.ne	407734 <wcrtomb@plt+0x4d74>  // b.any
  407730:	ret
  407734:	mov	w0, wzr
  407738:	ret
  40773c:	stp	x29, x30, [sp, #-96]!
  407740:	stp	x28, x27, [sp, #16]
  407744:	stp	x26, x25, [sp, #32]
  407748:	stp	x24, x23, [sp, #48]
  40774c:	stp	x22, x21, [sp, #64]
  407750:	stp	x20, x19, [sp, #80]
  407754:	mov	x29, sp
  407758:	sub	sp, sp, #0x1c0
  40775c:	mov	x24, x0
  407760:	mov	w0, #0x1                   	// #1
  407764:	mov	x22, x1
  407768:	stur	xzr, [x29, #-16]
  40776c:	bl	4094bc <wcrtomb@plt+0x6afc>
  407770:	mov	x21, x0
  407774:	mov	x23, xzr
  407778:	adrp	x27, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40777c:	adrp	x28, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  407780:	stp	x22, x24, [sp]
  407784:	b	4077c4 <wcrtomb@plt+0x4e04>
  407788:	add	x0, x23, #0x1
  40778c:	mov	x1, x24
  407790:	mov	x2, x26
  407794:	bl	402320 <memcpy@plt>
  407798:	ldrb	w8, [x28, #2260]
  40779c:	add	x9, x26, x23
  4077a0:	mov	x24, x23
  4077a4:	strb	w8, [x9, #1]
  4077a8:	add	x26, x26, #0x2
  4077ac:	mov	x0, x21
  4077b0:	mov	x1, x24
  4077b4:	mov	x2, x26
  4077b8:	bl	407eac <wcrtomb@plt+0x54ec>
  4077bc:	mov	x24, x19
  4077c0:	cbz	x25, 407858 <wcrtomb@plt+0x4e98>
  4077c4:	mov	w1, #0xa                   	// #10
  4077c8:	mov	x0, x24
  4077cc:	mov	x2, x22
  4077d0:	bl	402820 <memchr@plt>
  4077d4:	sub	x8, x0, x24
  4077d8:	ldrb	w9, [x27, #3549]
  4077dc:	mvn	x10, x8
  4077e0:	cmp	x0, #0x0
  4077e4:	add	x10, x22, x10
  4077e8:	mov	x25, x0
  4077ec:	csinc	x19, xzr, x0, eq  // eq = none
  4077f0:	csel	x26, x22, x8, eq  // eq = none
  4077f4:	csel	x22, xzr, x10, eq  // eq = none
  4077f8:	cbz	w9, 4077ac <wcrtomb@plt+0x4dec>
  4077fc:	ldrb	w8, [x28, #2260]
  407800:	cmp	w8, #0xa
  407804:	b.ne	407820 <wcrtomb@plt+0x4e60>  // b.any
  407808:	ldr	x8, [sp, #8]
  40780c:	cmp	x24, x8
  407810:	b.ls	407820 <wcrtomb@plt+0x4e60>  // b.plast
  407814:	cbz	x19, 407820 <wcrtomb@plt+0x4e60>
  407818:	sub	x24, x24, #0x1
  40781c:	b	4077a8 <wcrtomb@plt+0x4de8>
  407820:	ldur	x8, [x29, #-16]
  407824:	add	x20, x26, #0x2
  407828:	cmp	x8, x20
  40782c:	b.cs	407788 <wcrtomb@plt+0x4dc8>  // b.hs, b.nlast
  407830:	mov	x0, x23
  407834:	bl	402770 <free@plt>
  407838:	sub	x1, x29, #0x10
  40783c:	mov	x0, xzr
  407840:	stur	x20, [x29, #-16]
  407844:	bl	413c04 <wcrtomb@plt+0x11244>
  407848:	ldrb	w8, [x28, #2260]
  40784c:	mov	x23, x0
  407850:	strb	w8, [x0]
  407854:	b	407788 <wcrtomb@plt+0x4dc8>
  407858:	mov	x0, x23
  40785c:	bl	402770 <free@plt>
  407860:	mov	x0, x21
  407864:	bl	4082d4 <wcrtomb@plt+0x5914>
  407868:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40786c:	ldrb	w8, [x8, #3550]
  407870:	mov	x22, x0
  407874:	cbz	w8, 407948 <wcrtomb@plt+0x4f88>
  407878:	ldr	x8, [sp]
  40787c:	movi	v0.2d, #0x0
  407880:	stur	xzr, [x29, #-24]
  407884:	stp	q0, q0, [sp, #384]
  407888:	cmp	x8, #0x1
  40788c:	stp	q0, q0, [sp, #352]
  407890:	stp	q0, q0, [sp, #320]
  407894:	stp	q0, q0, [sp, #288]
  407898:	stp	q0, q0, [sp, #256]
  40789c:	stp	q0, q0, [sp, #224]
  4078a0:	stp	q0, q0, [sp, #192]
  4078a4:	stp	q0, q0, [sp, #160]
  4078a8:	b.lt	407948 <wcrtomb@plt+0x4f88>  // b.tstop
  4078ac:	ldp	x8, x27, [sp]
  4078b0:	adrp	x26, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4078b4:	add	x23, sp, #0xa0
  4078b8:	mov	w24, #0x1                   	// #1
  4078bc:	add	x19, x27, x8
  4078c0:	add	x8, sp, #0x20
  4078c4:	sub	x25, x8, #0x4
  4078c8:	add	x26, x26, #0x8d8
  4078cc:	b	4078dc <wcrtomb@plt+0x4f1c>
  4078d0:	add	x27, x27, #0x1
  4078d4:	cmp	x27, x19
  4078d8:	b.cs	407948 <wcrtomb@plt+0x4f88>  // b.hs, b.nlast
  4078dc:	ldrb	w8, [x27]
  4078e0:	ldrb	w9, [x23, x8]
  4078e4:	cbnz	w9, 4078d0 <wcrtomb@plt+0x4f10>
  4078e8:	add	x9, x26, x8, lsl #2
  4078ec:	ldr	w0, [x9, #260]
  4078f0:	add	x1, sp, #0x20
  4078f4:	strb	w24, [x23, x8]
  4078f8:	bl	40fa04 <wcrtomb@plt+0xd044>
  4078fc:	cmp	w0, #0x1
  407900:	b.lt	4078d0 <wcrtomb@plt+0x4f10>  // b.tstop
  407904:	sxtw	x28, w0
  407908:	b	407918 <wcrtomb@plt+0x4f58>
  40790c:	add	x8, x28, #0x1
  407910:	cmp	x8, #0x1
  407914:	b.le	4078d0 <wcrtomb@plt+0x4f10>
  407918:	ldr	w1, [x25, x28, lsl #2]
  40791c:	add	x0, sp, #0x10
  407920:	sub	x2, x29, #0x18
  407924:	sub	x28, x28, #0x1
  407928:	bl	4029c0 <wcrtomb@plt>
  40792c:	cmp	w0, #0x2
  407930:	b.lt	40790c <wcrtomb@plt+0x4f4c>  // b.tstop
  407934:	sxtw	x2, w0
  407938:	add	x1, sp, #0x10
  40793c:	mov	x0, x21
  407940:	bl	407eac <wcrtomb@plt+0x54ec>
  407944:	b	40790c <wcrtomb@plt+0x4f4c>
  407948:	mov	x0, x21
  40794c:	bl	4082dc <wcrtomb@plt+0x591c>
  407950:	mov	w0, #0x28                  	// #40
  407954:	bl	413ae8 <wcrtomb@plt+0x11128>
  407958:	ldr	x8, [sp, #8]
  40795c:	stp	x21, x22, [x0]
  407960:	str	x8, [x0, #16]
  407964:	ldr	x8, [sp]
  407968:	stp	x8, xzr, [x0, #24]
  40796c:	add	sp, sp, #0x1c0
  407970:	ldp	x20, x19, [sp, #80]
  407974:	ldp	x22, x21, [sp, #64]
  407978:	ldp	x24, x23, [sp, #48]
  40797c:	ldp	x26, x25, [sp, #32]
  407980:	ldp	x28, x27, [sp, #16]
  407984:	ldp	x29, x30, [sp], #96
  407988:	ret
  40798c:	sub	sp, sp, #0xd0
  407990:	stp	x29, x30, [sp, #112]
  407994:	stp	x28, x27, [sp, #128]
  407998:	stp	x26, x25, [sp, #144]
  40799c:	stp	x24, x23, [sp, #160]
  4079a0:	stp	x22, x21, [sp, #176]
  4079a4:	stp	x20, x19, [sp, #192]
  4079a8:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4079ac:	adrp	x23, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4079b0:	ldrb	w12, [x8, #2260]
  4079b4:	ldrb	w8, [x23, #3549]
  4079b8:	ldr	x25, [x0]
  4079bc:	add	x29, sp, #0x70
  4079c0:	mov	x22, x4
  4079c4:	mov	x24, x0
  4079c8:	mov	x20, x1
  4079cc:	str	x3, [sp, #56]
  4079d0:	stur	x2, [x29, #-48]
  4079d4:	cbz	w8, 4079e4 <wcrtomb@plt+0x5024>
  4079d8:	str	wzr, [sp, #52]
  4079dc:	mov	w27, wzr
  4079e0:	b	407a28 <wcrtomb@plt+0x5068>
  4079e4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4079e8:	add	x8, x8, #0x8d8
  4079ec:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4079f0:	ldrb	w10, [x8, #2]
  4079f4:	ldrb	w9, [x9, #3548]
  4079f8:	ldrb	w8, [x8]
  4079fc:	cmp	x22, #0x0
  407a00:	cset	w11, ne  // ne = any
  407a04:	eor	w10, w10, #0x1
  407a08:	orr	w9, w9, w11
  407a0c:	and	w8, w10, w8
  407a10:	orr	w9, w9, w8
  407a14:	tst	w8, #0xff
  407a18:	cset	w8, ne  // ne = any
  407a1c:	tst	w9, #0xff
  407a20:	cset	w27, ne  // ne = any
  407a24:	str	w8, [sp, #52]
  407a28:	ldur	x8, [x29, #-48]
  407a2c:	cmp	x22, #0x0
  407a30:	csel	x26, x22, x20, ne  // ne = any
  407a34:	stur	x26, [x29, #-8]
  407a38:	add	x28, x20, x8
  407a3c:	cmp	x26, x28
  407a40:	b.ls	407a68 <wcrtomb@plt+0x50a8>  // b.plast
  407a44:	mov	x0, #0xffffffffffffffff    	// #-1
  407a48:	ldp	x20, x19, [sp, #192]
  407a4c:	ldp	x22, x21, [sp, #176]
  407a50:	ldp	x24, x23, [sp, #160]
  407a54:	ldp	x26, x25, [sp, #144]
  407a58:	ldp	x28, x27, [sp, #128]
  407a5c:	ldp	x29, x30, [sp, #112]
  407a60:	add	sp, sp, #0xd0
  407a64:	ret
  407a68:	add	x8, x24, #0x10
  407a6c:	str	x8, [sp, #32]
  407a70:	add	x8, x24, #0x18
  407a74:	str	x8, [sp, #24]
  407a78:	cmp	x22, #0x0
  407a7c:	mov	w8, #0x5                   	// #5
  407a80:	cset	w9, eq  // eq = none
  407a84:	cinc	w8, w8, eq  // eq = none
  407a88:	str	x9, [sp, #16]
  407a8c:	stp	w8, w12, [sp, #8]
  407a90:	ldrb	w8, [x23, #3549]
  407a94:	sub	x9, x28, x26
  407a98:	sub	x3, x29, #0x20
  407a9c:	mov	x0, x25
  407aa0:	sub	x1, x26, x8
  407aa4:	add	x2, x9, x8
  407aa8:	mov	w4, w27
  407aac:	bl	408a98 <wcrtomb@plt+0x60d8>
  407ab0:	tbnz	x0, #63, 407b08 <wcrtomb@plt+0x5148>
  407ab4:	ldr	x8, [x24, #8]
  407ab8:	ldur	x9, [x29, #-16]
  407abc:	ldur	x10, [x29, #-32]
  407ac0:	ldrb	w11, [x23, #3549]
  407ac4:	cmp	x8, x10
  407ac8:	sub	x21, x9, x11, lsl #1
  407acc:	b.le	407b10 <wcrtomb@plt+0x5150>
  407ad0:	ldr	w8, [sp, #52]
  407ad4:	mov	x19, x0
  407ad8:	stur	xzr, [x29, #-40]
  407adc:	cbz	w8, 407b58 <wcrtomb@plt+0x5198>
  407ae0:	add	x2, x26, x19
  407ae4:	sub	x0, x29, #0x8
  407ae8:	sub	x1, x29, #0x28
  407aec:	mov	x3, x28
  407af0:	bl	4095a0 <wcrtomb@plt+0x6be0>
  407af4:	cbz	x0, 407b58 <wcrtomb@plt+0x5198>
  407af8:	ldur	x8, [x29, #-8]
  407afc:	sub	x26, x8, #0x1
  407b00:	mov	w8, #0x4                   	// #4
  407b04:	b	407d00 <wcrtomb@plt+0x5340>
  407b08:	mov	w8, #0x2                   	// #2
  407b0c:	b	407d00 <wcrtomb@plt+0x5340>
  407b10:	ldr	x8, [x24, #32]
  407b14:	cbnz	x8, 407b34 <wcrtomb@plt+0x5174>
  407b18:	ldp	x1, x0, [sp, #24]
  407b1c:	bl	403a80 <wcrtomb@plt+0x10c0>
  407b20:	ldp	x0, x1, [x24, #16]
  407b24:	mov	w2, #0xa46                 	// #2630
  407b28:	movk	w2, #0x1, lsl #16
  407b2c:	bl	402b30 <wcrtomb@plt+0x170>
  407b30:	str	x0, [x24, #32]
  407b34:	ldr	x0, [x24, #32]
  407b38:	ldur	x2, [x29, #-48]
  407b3c:	ldr	x3, [sp, #56]
  407b40:	mov	x1, x20
  407b44:	mov	x4, x22
  407b48:	bl	4031d8 <wcrtomb@plt+0x818>
  407b4c:	str	x0, [sp, #40]
  407b50:	mov	w8, #0x1                   	// #1
  407b54:	b	407d00 <wcrtomb@plt+0x5340>
  407b58:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  407b5c:	ldrb	w8, [x8, #3548]
  407b60:	add	x26, x26, x19
  407b64:	cbz	x22, 407b74 <wcrtomb@plt+0x51b4>
  407b68:	cbnz	w8, 407b74 <wcrtomb@plt+0x51b4>
  407b6c:	mov	w8, #0x5                   	// #5
  407b70:	b	407d00 <wcrtomb@plt+0x5340>
  407b74:	ldrb	w9, [x23, #3549]
  407b78:	cbz	w9, 407b8c <wcrtomb@plt+0x51cc>
  407b7c:	ldr	x8, [sp, #16]
  407b80:	add	x21, x21, x8
  407b84:	mov	w8, #0x5                   	// #5
  407b88:	b	407d00 <wcrtomb@plt+0x5340>
  407b8c:	cbz	w8, 407be4 <wcrtomb@plt+0x5224>
  407b90:	ldur	x19, [x29, #-40]
  407b94:	cbnz	x19, 407bb8 <wcrtomb@plt+0x51f8>
  407b98:	ldur	x0, [x29, #-8]
  407b9c:	ldr	w1, [sp, #12]
  407ba0:	sub	x2, x26, x0
  407ba4:	bl	4027a0 <memrchr@plt>
  407ba8:	cbz	x0, 407bb4 <wcrtomb@plt+0x51f4>
  407bac:	add	x8, x0, #0x1
  407bb0:	stur	x8, [x29, #-8]
  407bb4:	cbz	x19, 407bec <wcrtomb@plt+0x522c>
  407bb8:	sub	x0, x26, x19
  407bbc:	mov	x1, x28
  407bc0:	bl	409804 <wcrtomb@plt+0x6e44>
  407bc4:	cbz	x0, 407c00 <wcrtomb@plt+0x5240>
  407bc8:	mov	x0, x26
  407bcc:	mov	x1, x28
  407bd0:	bl	409704 <wcrtomb@plt+0x6d44>
  407bd4:	mov	w8, wzr
  407bd8:	add	x26, x26, x0
  407bdc:	stur	x26, [x29, #-8]
  407be0:	b	407d00 <wcrtomb@plt+0x5340>
  407be4:	mov	w8, #0x6                   	// #6
  407be8:	b	407d00 <wcrtomb@plt+0x5340>
  407bec:	ldur	x0, [x29, #-8]
  407bf0:	mov	x1, x26
  407bf4:	mov	x2, x28
  407bf8:	bl	40981c <wcrtomb@plt+0x6e5c>
  407bfc:	cbnz	x0, 407bc8 <wcrtomb@plt+0x5208>
  407c00:	add	x19, x26, x21
  407c04:	mov	x0, x19
  407c08:	mov	x1, x28
  407c0c:	bl	409804 <wcrtomb@plt+0x6e44>
  407c10:	cbz	x0, 407cfc <wcrtomb@plt+0x533c>
  407c14:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  407c18:	ldrb	w8, [x8, #2264]
  407c1c:	ldr	x9, [sp, #16]
  407c20:	cmp	w8, #0x0
  407c24:	cset	w8, eq  // eq = none
  407c28:	and	w8, w8, w9
  407c2c:	tbz	w8, #0, 407c9c <wcrtomb@plt+0x52dc>
  407c30:	ldr	x8, [x24, #32]
  407c34:	cbnz	x8, 407c54 <wcrtomb@plt+0x5294>
  407c38:	ldp	x1, x0, [sp, #24]
  407c3c:	bl	403a80 <wcrtomb@plt+0x10c0>
  407c40:	ldp	x0, x1, [x24, #16]
  407c44:	mov	w2, #0xa46                 	// #2630
  407c48:	movk	w2, #0x1, lsl #16
  407c4c:	bl	402b30 <wcrtomb@plt+0x170>
  407c50:	str	x0, [x24, #32]
  407c54:	ldr	w1, [sp, #12]
  407c58:	sub	x2, x28, x19
  407c5c:	mov	x0, x19
  407c60:	bl	402820 <memchr@plt>
  407c64:	ldr	x8, [x24, #32]
  407c68:	ldr	x3, [sp, #56]
  407c6c:	cmp	x0, #0x0
  407c70:	csinc	x19, x28, x0, eq  // eq = none
  407c74:	sub	x2, x19, x26
  407c78:	mov	x0, x8
  407c7c:	mov	x1, x26
  407c80:	mov	x4, xzr
  407c84:	bl	4031d8 <wcrtomb@plt+0x818>
  407c88:	cmn	x0, #0x1
  407c8c:	str	x19, [sp]
  407c90:	b.eq	407d38 <wcrtomb@plt+0x5378>  // b.none
  407c94:	mov	w8, #0x9                   	// #9
  407c98:	b	407d00 <wcrtomb@plt+0x5340>
  407c9c:	cbz	x21, 407bc8 <wcrtomb@plt+0x5208>
  407ca0:	sub	x21, x21, #0x1
  407ca4:	sub	x3, x29, #0x20
  407ca8:	mov	w4, #0x1                   	// #1
  407cac:	mov	x0, x25
  407cb0:	mov	x1, x26
  407cb4:	mov	x2, x21
  407cb8:	bl	408a98 <wcrtomb@plt+0x60d8>
  407cbc:	cbnz	x0, 407bc8 <wcrtomb@plt+0x5208>
  407cc0:	ldur	x21, [x29, #-16]
  407cc4:	mov	x1, x28
  407cc8:	add	x19, x26, x21
  407ccc:	mov	x0, x19
  407cd0:	bl	409804 <wcrtomb@plt+0x6e44>
  407cd4:	cbz	x0, 407cfc <wcrtomb@plt+0x533c>
  407cd8:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  407cdc:	ldrb	w8, [x8, #2264]
  407ce0:	ldr	x9, [sp, #16]
  407ce4:	cmp	w8, #0x0
  407ce8:	cset	w8, ne  // ne = any
  407cec:	eor	w9, w9, #0x1
  407cf0:	orr	w8, w8, w9
  407cf4:	tbnz	w8, #0, 407c9c <wcrtomb@plt+0x52dc>
  407cf8:	b	407c30 <wcrtomb@plt+0x5270>
  407cfc:	ldr	w8, [sp, #8]
  407d00:	cmp	w8, #0x9
  407d04:	b.hi	407d40 <wcrtomb@plt+0x5380>  // b.pmore
  407d08:	adrp	x11, 425000 <_obstack_memory_used@@Base+0xebcc>
  407d0c:	mov	w8, w8
  407d10:	add	x11, x11, #0x8bc
  407d14:	adr	x9, 407a48 <wcrtomb@plt+0x5088>
  407d18:	ldrb	w10, [x11, x8]
  407d1c:	add	x9, x9, x10, lsl #2
  407d20:	mov	x0, #0xffffffffffffffff    	// #-1
  407d24:	br	x9
  407d28:	add	x26, x26, #0x1
  407d2c:	cmp	x26, x28
  407d30:	b.ls	407a90 <wcrtomb@plt+0x50d0>  // b.plast
  407d34:	b	407a44 <wcrtomb@plt+0x5084>
  407d38:	sub	x26, x19, #0x1
  407d3c:	b	407bc8 <wcrtomb@plt+0x5208>
  407d40:	ldr	x0, [sp, #40]
  407d44:	b	407a48 <wcrtomb@plt+0x5088>
  407d48:	ldr	w19, [sp, #12]
  407d4c:	add	x0, x26, x21
  407d50:	sub	x2, x28, x0
  407d54:	mov	w1, w19
  407d58:	bl	402820 <memchr@plt>
  407d5c:	cmp	x0, #0x0
  407d60:	csinc	x21, x28, x0, eq  // eq = none
  407d64:	b	407d70 <wcrtomb@plt+0x53b0>
  407d68:	ldr	w19, [sp, #12]
  407d6c:	ldr	x21, [sp]
  407d70:	sub	x2, x26, x20
  407d74:	mov	x0, x20
  407d78:	mov	w1, w19
  407d7c:	bl	4027a0 <memrchr@plt>
  407d80:	cmp	x0, #0x0
  407d84:	csinc	x26, x20, x0, eq  // eq = none
  407d88:	sub	x21, x21, x26
  407d8c:	ldr	x8, [sp, #56]
  407d90:	sub	x0, x26, x20
  407d94:	str	x21, [x8]
  407d98:	b	407a48 <wcrtomb@plt+0x5088>
  407d9c:	stp	x29, x30, [sp, #-32]!
  407da0:	stp	x20, x19, [sp, #16]
  407da4:	mov	x19, x0
  407da8:	mov	w0, #0x9a8                 	// #2472
  407dac:	mov	x29, sp
  407db0:	bl	413ae8 <wcrtomb@plt+0x11128>
  407db4:	adrp	x3, 413000 <wcrtomb@plt+0x10640>
  407db8:	adrp	x4, 402000 <mbrtowc@plt-0x310>
  407dbc:	add	x3, x3, #0xae8
  407dc0:	add	x4, x4, #0x770
  407dc4:	mov	x1, xzr
  407dc8:	mov	x2, xzr
  407dcc:	mov	x20, x0
  407dd0:	bl	41610c <_obstack_begin@@Base>
  407dd4:	ldp	x9, x8, [x20, #24]
  407dd8:	str	xzr, [x20, #88]
  407ddc:	sub	x8, x8, x9
  407de0:	cmp	x8, #0x3f
  407de4:	b.hi	407df4 <wcrtomb@plt+0x5434>  // b.pmore
  407de8:	mov	w1, #0x40                  	// #64
  407dec:	mov	x0, x20
  407df0:	bl	4161f4 <_obstack_newchunk@@Base>
  407df4:	ldp	x8, x9, [x20, #16]
  407df8:	add	x9, x9, #0x40
  407dfc:	cmp	x9, x8
  407e00:	str	x9, [x20, #24]
  407e04:	b.ne	407e14 <wcrtomb@plt+0x5454>  // b.any
  407e08:	ldrb	w9, [x20, #80]
  407e0c:	orr	w9, w9, #0x2
  407e10:	strb	w9, [x20, #80]
  407e14:	ldr	x10, [x20, #48]
  407e18:	ldp	x11, x9, [x20, #24]
  407e1c:	ldr	x12, [x20, #8]
  407e20:	add	x11, x10, x11
  407e24:	bic	x10, x11, x10
  407e28:	sub	x11, x10, x12
  407e2c:	sub	x12, x9, x12
  407e30:	cmp	x11, x12
  407e34:	str	x10, [x20, #24]
  407e38:	b.ls	407e40 <wcrtomb@plt+0x5480>  // b.plast
  407e3c:	str	x9, [x20, #24]
  407e40:	ldr	x9, [x20, #24]
  407e44:	str	x8, [x20, #96]
  407e48:	movi	v0.2d, #0x0
  407e4c:	mov	x10, #0xffffffffffffffff    	// #-1
  407e50:	str	x9, [x20, #16]
  407e54:	str	xzr, [x8]
  407e58:	ldr	x8, [x20, #96]
  407e5c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  407e60:	mov	x0, x20
  407e64:	stur	q0, [x8, #40]
  407e68:	stur	q0, [x8, #24]
  407e6c:	stur	q0, [x8, #8]
  407e70:	adrp	x8, 407000 <wcrtomb@plt+0x4640>
  407e74:	add	x8, x8, #0xe94
  407e78:	stp	x9, x10, [x20, #104]
  407e7c:	str	xzr, [x20, #2424]
  407e80:	str	x19, [x20, #2440]
  407e84:	str	x8, [x20, #2464]
  407e88:	ldp	x20, x19, [sp, #16]
  407e8c:	ldp	x29, x30, [sp], #32
  407e90:	ret
  407e94:	stp	x29, x30, [sp, #-16]!
  407e98:	and	w4, w4, #0x1
  407e9c:	mov	x29, sp
  407ea0:	bl	409138 <wcrtomb@plt+0x6778>
  407ea4:	ldp	x29, x30, [sp], #16
  407ea8:	ret
  407eac:	sub	sp, sp, #0x110
  407eb0:	stp	x29, x30, [sp, #176]
  407eb4:	stp	x28, x27, [sp, #192]
  407eb8:	stp	x26, x25, [sp, #208]
  407ebc:	stp	x24, x23, [sp, #224]
  407ec0:	stp	x22, x21, [sp, #240]
  407ec4:	stp	x20, x19, [sp, #256]
  407ec8:	ldr	x22, [x0, #96]
  407ecc:	mov	x19, x0
  407ed0:	add	x29, sp, #0xb0
  407ed4:	cbz	x2, 408234 <wcrtomb@plt+0x5874>
  407ed8:	ldr	x9, [x19, #2464]
  407edc:	ldr	x15, [x19, #2440]
  407ee0:	adrp	x10, 408000 <wcrtomb@plt+0x5640>
  407ee4:	add	x10, x10, #0x2a0
  407ee8:	add	x8, x1, x2
  407eec:	add	x24, sp, #0x48
  407ef0:	cmp	x9, x10
  407ef4:	mov	x20, x2
  407ef8:	mov	w17, #0x1                   	// #1
  407efc:	add	x26, sp, #0x18
  407f00:	sub	x11, x24, #0x8
  407f04:	csel	x25, x8, x1, eq  // eq = none
  407f08:	mov	w28, #0xffffffff            	// #-1
  407f0c:	stp	x11, x15, [sp]
  407f10:	str	x9, [sp, #16]
  407f14:	b	407f28 <wcrtomb@plt+0x5568>
  407f18:	str	x11, [x8, #8]
  407f1c:	ldr	x22, [x23, #16]
  407f20:	sub	x20, x20, #0x1
  407f24:	cbz	x20, 408234 <wcrtomb@plt+0x5874>
  407f28:	ldr	x10, [sp, #16]
  407f2c:	adrp	x11, 408000 <wcrtomb@plt+0x5640>
  407f30:	add	x11, x11, #0x2a0
  407f34:	sub	x9, x25, #0x1
  407f38:	cmp	x10, x11
  407f3c:	csel	x10, x9, x25, eq  // eq = none
  407f40:	ldrb	w21, [x10]
  407f44:	csinc	x25, x9, x25, eq  // eq = none
  407f48:	cbz	x15, 407f50 <wcrtomb@plt+0x5590>
  407f4c:	ldrb	w21, [x15, x21]
  407f50:	mov	x8, x22
  407f54:	ldr	x23, [x8, #8]!
  407f58:	str	wzr, [sp, #24]
  407f5c:	str	x8, [sp, #72]
  407f60:	cbz	x23, 407fa4 <wcrtomb@plt+0x55e4>
  407f64:	mov	w8, #0x1                   	// #1
  407f68:	b	407f80 <wcrtomb@plt+0x55c0>
  407f6c:	add	x23, x23, #0x8
  407f70:	str	w17, [x26, x8, lsl #2]
  407f74:	ldr	x23, [x23]
  407f78:	mov	x8, x27
  407f7c:	cbz	x23, 407fa8 <wcrtomb@plt+0x55e8>
  407f80:	ldrb	w9, [x23, #24]
  407f84:	cmp	w21, w9
  407f88:	b.eq	407f1c <wcrtomb@plt+0x555c>  // b.none
  407f8c:	cmp	w21, w9
  407f90:	add	x27, x8, #0x1
  407f94:	str	x23, [x24, x8, lsl #3]
  407f98:	b.cs	407f6c <wcrtomb@plt+0x55ac>  // b.hs, b.nlast
  407f9c:	str	wzr, [x26, x8, lsl #2]
  407fa0:	b	407f74 <wcrtomb@plt+0x55b4>
  407fa4:	mov	w27, #0x1                   	// #1
  407fa8:	ldp	x9, x8, [x19, #24]
  407fac:	sub	x8, x8, x9
  407fb0:	cmp	x8, #0x1f
  407fb4:	b.hi	407fcc <wcrtomb@plt+0x560c>  // b.pmore
  407fb8:	mov	w1, #0x20                  	// #32
  407fbc:	mov	x0, x19
  407fc0:	bl	4161f4 <_obstack_newchunk@@Base>
  407fc4:	ldr	x15, [sp, #8]
  407fc8:	mov	w17, #0x1                   	// #1
  407fcc:	ldp	x23, x8, [x19, #16]
  407fd0:	add	x8, x8, #0x20
  407fd4:	cmp	x8, x23
  407fd8:	str	x8, [x19, #24]
  407fdc:	b.ne	407fec <wcrtomb@plt+0x562c>  // b.any
  407fe0:	ldrb	w8, [x19, #80]
  407fe4:	orr	w8, w8, #0x2
  407fe8:	strb	w8, [x19, #80]
  407fec:	ldr	x8, [x19, #48]
  407ff0:	ldp	x9, x11, [x19, #24]
  407ff4:	ldr	x10, [x19, #8]
  407ff8:	add	x9, x8, x9
  407ffc:	bic	x8, x9, x8
  408000:	sub	x9, x11, x10
  408004:	sub	x10, x8, x10
  408008:	cmp	x10, x9
  40800c:	csel	x8, x11, x8, hi  // hi = pmore
  408010:	stp	x8, x8, [x19, #16]
  408014:	stp	xzr, xzr, [x23]
  408018:	ldr	x9, [x19, #32]
  40801c:	sub	x8, x9, x8
  408020:	cmp	x8, #0x3f
  408024:	b.hi	40803c <wcrtomb@plt+0x567c>  // b.pmore
  408028:	mov	w1, #0x40                  	// #64
  40802c:	mov	x0, x19
  408030:	bl	4161f4 <_obstack_newchunk@@Base>
  408034:	ldr	x15, [sp, #8]
  408038:	mov	w17, #0x1                   	// #1
  40803c:	ldp	x8, x9, [x19, #16]
  408040:	add	x9, x9, #0x40
  408044:	cmp	x9, x8
  408048:	str	x9, [x19, #24]
  40804c:	b.ne	40805c <wcrtomb@plt+0x569c>  // b.any
  408050:	ldrb	w9, [x19, #80]
  408054:	orr	w9, w9, #0x2
  408058:	strb	w9, [x19, #80]
  40805c:	ldr	x9, [x19, #48]
  408060:	ldp	x10, x12, [x19, #24]
  408064:	ldr	x11, [x19, #8]
  408068:	add	x10, x9, x10
  40806c:	bic	x9, x10, x9
  408070:	sub	x10, x12, x11
  408074:	sub	x11, x9, x11
  408078:	cmp	x11, x10
  40807c:	csel	x9, x12, x9, hi  // hi = pmore
  408080:	stp	x9, x9, [x19, #16]
  408084:	str	x8, [x23, #16]
  408088:	str	xzr, [x8]
  40808c:	ldr	x8, [x23, #16]
  408090:	sub	x11, x27, #0x1
  408094:	stp	xzr, x22, [x8, #8]
  408098:	stp	xzr, xzr, [x8, #24]
  40809c:	ldr	x9, [x22, #40]
  4080a0:	add	x9, x9, #0x1
  4080a4:	stp	x9, xzr, [x8, #40]
  4080a8:	strb	w21, [x23, #24]
  4080ac:	strb	wzr, [x23, #25]
  4080b0:	ldr	w8, [x26, x11, lsl #2]
  4080b4:	ldr	x9, [x24, x11, lsl #3]
  4080b8:	cmp	w8, #0x0
  4080bc:	cset	w8, ne  // ne = any
  4080c0:	str	x23, [x9, w8, uxtw #3]
  4080c4:	cbz	x11, 407f1c <wcrtomb@plt+0x555c>
  4080c8:	ldr	x8, [sp]
  4080cc:	add	x9, x26, x27, lsl #2
  4080d0:	add	x8, x8, x27, lsl #3
  4080d4:	ldr	x10, [x8]
  4080d8:	ldur	w13, [x9, #-4]
  4080dc:	ldrb	w12, [x10, #25]
  4080e0:	cbnz	w12, 408108 <wcrtomb@plt+0x5748>
  4080e4:	cmp	w13, #0x0
  4080e8:	cneg	w13, w28, ne  // ne = any
  4080ec:	sub	x11, x11, #0x1
  4080f0:	sub	x8, x8, #0x8
  4080f4:	add	w12, w13, w12
  4080f8:	sub	x9, x9, #0x4
  4080fc:	strb	w12, [x10, #25]
  408100:	cbnz	x11, 4080d4 <wcrtomb@plt+0x5714>
  408104:	b	407f1c <wcrtomb@plt+0x555c>
  408108:	cmp	w13, #0x1
  40810c:	b.eq	40812c <wcrtomb@plt+0x576c>  // b.none
  408110:	cbnz	w13, 407f1c <wcrtomb@plt+0x555c>
  408114:	sub	w11, w12, #0x1
  408118:	tst	w11, #0xff
  40811c:	strb	w11, [x10, #25]
  408120:	b.ne	40813c <wcrtomb@plt+0x577c>  // b.any
  408124:	cmp	w13, #0x1
  408128:	b.ne	407f1c <wcrtomb@plt+0x555c>  // b.any
  40812c:	ldrb	w11, [x10, #25]
  408130:	add	w11, w11, #0x1
  408134:	strb	w11, [x10, #25]
  408138:	tbnz	w11, #8, 407f1c <wcrtomb@plt+0x555c>
  40813c:	ldrb	w11, [x10, #25]
  408140:	cmp	w11, #0x2
  408144:	b.eq	408178 <wcrtomb@plt+0x57b8>  // b.none
  408148:	cmp	w11, #0xfe
  40814c:	b.ne	40829c <wcrtomb@plt+0x58dc>  // b.any
  408150:	ldr	w11, [x9]
  408154:	cmp	w11, #0x1
  408158:	b.eq	4081a0 <wcrtomb@plt+0x57e0>  // b.none
  40815c:	cbnz	w11, 40829c <wcrtomb@plt+0x58dc>
  408160:	ldr	x11, [x10]
  408164:	ldr	x12, [x11, #8]
  408168:	str	x10, [x11, #8]
  40816c:	strb	wzr, [x10, #25]
  408170:	str	x12, [x10]
  408174:	b	40821c <wcrtomb@plt+0x585c>
  408178:	ldr	w11, [x9]
  40817c:	cbz	w11, 4081e0 <wcrtomb@plt+0x5820>
  408180:	cmp	w11, #0x1
  408184:	b.ne	40829c <wcrtomb@plt+0x58dc>  // b.any
  408188:	ldr	x11, [x10, #8]
  40818c:	ldr	x12, [x11]
  408190:	str	x10, [x11]
  408194:	strb	wzr, [x10, #25]
  408198:	str	x12, [x10, #8]
  40819c:	b	40821c <wcrtomb@plt+0x585c>
  4081a0:	ldr	x12, [x10]
  4081a4:	ldr	x11, [x12, #8]
  4081a8:	ldp	x13, x14, [x11]
  4081ac:	str	x12, [x11]
  4081b0:	str	x13, [x12, #8]
  4081b4:	str	x10, [x11, #8]
  4081b8:	str	x14, [x10]
  4081bc:	ldrb	w13, [x11, #25]
  4081c0:	cmp	w13, #0x1
  4081c4:	csetm	w13, eq  // eq = none
  4081c8:	strb	w13, [x12, #25]
  4081cc:	ldrb	w12, [x11, #25]
  4081d0:	cmp	w12, #0xff
  4081d4:	cset	w12, eq  // eq = none
  4081d8:	strb	w12, [x10, #25]
  4081dc:	b	40821c <wcrtomb@plt+0x585c>
  4081e0:	ldr	x12, [x10, #8]
  4081e4:	ldr	x11, [x12]
  4081e8:	ldp	x13, x14, [x11]
  4081ec:	str	x10, [x11]
  4081f0:	str	x13, [x10, #8]
  4081f4:	str	x12, [x11, #8]
  4081f8:	str	x14, [x12]
  4081fc:	ldrb	w13, [x11, #25]
  408200:	cmp	w13, #0x1
  408204:	csetm	w13, eq  // eq = none
  408208:	strb	w13, [x10, #25]
  40820c:	ldrb	w10, [x11, #25]
  408210:	cmp	w10, #0xff
  408214:	cset	w10, eq  // eq = none
  408218:	strb	w10, [x12, #25]
  40821c:	strb	wzr, [x11, #25]
  408220:	ldur	w9, [x9, #-8]
  408224:	ldur	x8, [x8, #-8]
  408228:	cbnz	w9, 407f18 <wcrtomb@plt+0x5558>
  40822c:	str	x11, [x8]
  408230:	b	407f1c <wcrtomb@plt+0x555c>
  408234:	ldr	x8, [x22]
  408238:	cbnz	x8, 40824c <wcrtomb@plt+0x588c>
  40823c:	ldr	x8, [x19, #88]
  408240:	mov	w9, #0x1                   	// #1
  408244:	bfi	x9, x8, #1, #63
  408248:	str	x9, [x22]
  40824c:	ldr	x8, [x19, #88]
  408250:	ldr	x9, [x19, #104]
  408254:	add	x8, x8, #0x1
  408258:	str	x8, [x19, #88]
  40825c:	ldr	x8, [x22, #40]
  408260:	cmp	x8, x9
  408264:	b.ge	40826c <wcrtomb@plt+0x58ac>  // b.tcont
  408268:	str	x8, [x19, #104]
  40826c:	ldr	x9, [x19, #112]
  408270:	cmp	x8, x9
  408274:	b.le	40827c <wcrtomb@plt+0x58bc>
  408278:	str	x8, [x19, #112]
  40827c:	ldp	x20, x19, [sp, #256]
  408280:	ldp	x22, x21, [sp, #240]
  408284:	ldp	x24, x23, [sp, #224]
  408288:	ldp	x26, x25, [sp, #208]
  40828c:	ldp	x28, x27, [sp, #192]
  408290:	ldp	x29, x30, [sp, #176]
  408294:	add	sp, sp, #0x110
  408298:	ret
  40829c:	bl	4026c0 <abort@plt>
  4082a0:	stp	x29, x30, [sp, #-32]!
  4082a4:	stp	x20, x19, [sp, #16]
  4082a8:	mov	x29, sp
  4082ac:	mov	x19, x3
  4082b0:	mov	x20, x0
  4082b4:	bl	408ae0 <wcrtomb@plt+0x6120>
  4082b8:	tbnz	x0, #63, 4082c8 <wcrtomb@plt+0x5908>
  4082bc:	stp	xzr, x0, [x19]
  4082c0:	ldr	x8, [x20, #104]
  4082c4:	str	x8, [x19, #16]
  4082c8:	ldp	x20, x19, [sp, #16]
  4082cc:	ldp	x29, x30, [sp], #32
  4082d0:	ret
  4082d4:	ldr	x0, [x0, #88]
  4082d8:	ret
  4082dc:	stp	x29, x30, [sp, #-96]!
  4082e0:	stp	x28, x27, [sp, #16]
  4082e4:	stp	x26, x25, [sp, #32]
  4082e8:	stp	x24, x23, [sp, #48]
  4082ec:	stp	x22, x21, [sp, #64]
  4082f0:	stp	x20, x19, [sp, #80]
  4082f4:	mov	x29, sp
  4082f8:	sub	sp, sp, #0x910
  4082fc:	ldr	x19, [x0, #2440]
  408300:	ldr	x23, [x0, #88]
  408304:	add	x8, x0, #0x78
  408308:	add	x9, sp, #0x808
  40830c:	cmp	x19, #0x0
  408310:	mov	x21, x0
  408314:	csel	x20, x9, x8, ne  // ne = any
  408318:	cmp	x23, #0x1
  40831c:	b.ne	40843c <wcrtomb@plt+0x5a7c>  // b.any
  408320:	mov	x24, x21
  408324:	ldr	x22, [x24, #96]!
  408328:	str	x22, [sp, #2048]
  40832c:	cbz	x22, 408344 <wcrtomb@plt+0x5984>
  408330:	ldr	x0, [x22, #8]
  408334:	add	x1, sp, #0x800
  408338:	bl	40881c <wcrtomb@plt+0x5e5c>
  40833c:	ldr	x22, [x22, #24]
  408340:	cbnz	x22, 408330 <wcrtomb@plt+0x5970>
  408344:	ldp	x9, x8, [x21, #24]
  408348:	ldr	x22, [x21, #104]
  40834c:	sub	x8, x8, x9
  408350:	cmp	x8, x22
  408354:	b.cs	408364 <wcrtomb@plt+0x59a4>  // b.hs, b.nlast
  408358:	mov	x0, x21
  40835c:	mov	x1, x22
  408360:	bl	4161f4 <_obstack_newchunk@@Base>
  408364:	ldp	x8, x9, [x21, #16]
  408368:	add	x9, x9, x22
  40836c:	cmp	x9, x8
  408370:	str	x9, [x21, #24]
  408374:	b.ne	408384 <wcrtomb@plt+0x59c4>  // b.any
  408378:	ldrb	w9, [x21, #80]
  40837c:	orr	w9, w9, #0x2
  408380:	strb	w9, [x21, #80]
  408384:	ldr	x10, [x21, #48]
  408388:	ldp	x11, x9, [x21, #24]
  40838c:	ldr	x12, [x21, #8]
  408390:	add	x11, x10, x11
  408394:	bic	x10, x11, x10
  408398:	sub	x11, x10, x12
  40839c:	sub	x12, x9, x12
  4083a0:	cmp	x11, x12
  4083a4:	str	x10, [x21, #24]
  4083a8:	b.ls	4083b0 <wcrtomb@plt+0x59f0>  // b.plast
  4083ac:	str	x9, [x21, #24]
  4083b0:	ldr	x10, [x21, #104]
  4083b4:	ldr	x9, [x21, #24]
  4083b8:	str	x8, [x21, #2424]
  4083bc:	cmp	x10, #0x1
  4083c0:	str	x9, [x21, #16]
  4083c4:	b.lt	4083f4 <wcrtomb@plt+0x5a34>  // b.tstop
  4083c8:	mov	x8, xzr
  4083cc:	ldr	x9, [x24]
  4083d0:	ldr	x11, [x21, #2424]
  4083d4:	ldr	x10, [x9, #8]
  4083d8:	add	x24, x9, #0x18
  4083dc:	ldrb	w10, [x10, #24]
  4083e0:	strb	w10, [x11, x8]
  4083e4:	ldr	x10, [x21, #104]
  4083e8:	add	x8, x8, #0x1
  4083ec:	cmp	x8, x10
  4083f0:	b.lt	4083cc <wcrtomb@plt+0x5a0c>  // b.tstop
  4083f4:	ldr	x0, [x21, #2440]
  4083f8:	bl	407d9c <wcrtomb@plt+0x53dc>
  4083fc:	adrp	x8, 408000 <wcrtomb@plt+0x5640>
  408400:	add	x8, x8, #0x2a0
  408404:	str	x8, [x0, #2464]
  408408:	ldr	x1, [x21, #2424]
  40840c:	ldr	x2, [x21, #104]
  408410:	mov	x22, x0
  408414:	bl	407eac <wcrtomb@plt+0x54ec>
  408418:	mov	x0, x21
  40841c:	mov	x1, xzr
  408420:	bl	4163ac <_obstack_free@@Base>
  408424:	mov	w2, #0x9a8                 	// #2472
  408428:	mov	x0, x21
  40842c:	mov	x1, x22
  408430:	bl	402320 <memcpy@plt>
  408434:	mov	x0, x22
  408438:	bl	402770 <free@plt>
  40843c:	ldr	x8, [x21, #104]
  408440:	mov	w9, #0xff                  	// #255
  408444:	mov	x24, x21
  408448:	cmp	x8, #0xff
  40844c:	csel	x8, x8, x9, lt  // lt = tstop
  408450:	mov	x9, #0x101010101010101     	// #72340172838076673
  408454:	and	x8, x8, #0xff
  408458:	mul	x8, x8, x9
  40845c:	dup	v0.2d, x8
  408460:	stp	q0, q0, [x20, #224]
  408464:	stp	q0, q0, [x20, #192]
  408468:	stp	q0, q0, [x20, #160]
  40846c:	stp	q0, q0, [x20, #128]
  408470:	stp	q0, q0, [x20, #96]
  408474:	stp	q0, q0, [x20, #64]
  408478:	stp	q0, q0, [x20, #32]
  40847c:	stp	q0, q0, [x20]
  408480:	ldr	x25, [x24, #96]!
  408484:	str	x25, [sp, #2048]
  408488:	cbnz	x25, 4084d4 <wcrtomb@plt+0x5b14>
  40848c:	cmp	x23, #0x1
  408490:	b.ne	408580 <wcrtomb@plt+0x5bc0>  // b.any
  408494:	ldr	x8, [x24]
  408498:	ldr	x8, [x8, #24]
  40849c:	cbz	x8, 408580 <wcrtomb@plt+0x5bc0>
  4084a0:	ldr	x9, [x8, #16]
  4084a4:	ldr	x10, [x8, #56]
  4084a8:	ldr	x9, [x9, #56]
  4084ac:	cmp	x10, x9
  4084b0:	b.le	4084b8 <wcrtomb@plt+0x5af8>
  4084b4:	str	x9, [x8, #56]
  4084b8:	ldp	x10, x9, [x8, #48]
  4084bc:	cmp	x10, x9
  4084c0:	b.le	408498 <wcrtomb@plt+0x5ad8>
  4084c4:	str	x9, [x8, #48]
  4084c8:	b	408498 <wcrtomb@plt+0x5ad8>
  4084cc:	ldr	x25, [x25, #24]
  4084d0:	cbz	x25, 40848c <wcrtomb@plt+0x5acc>
  4084d4:	ldr	x0, [x25, #8]
  4084d8:	cmp	x23, #0x1
  4084dc:	add	x1, sp, #0x800
  4084e0:	cset	w22, eq  // eq = none
  4084e4:	bl	40881c <wcrtomb@plt+0x5e5c>
  4084e8:	ldr	x0, [x25, #8]
  4084ec:	ldr	x1, [x25, #40]
  4084f0:	mov	x2, x20
  4084f4:	bl	408864 <wcrtomb@plt+0x5ea4>
  4084f8:	ldr	x0, [x25, #8]
  4084fc:	ldr	x1, [x25, #32]
  408500:	ldr	x2, [x24]
  408504:	mov	w3, w22
  408508:	bl	4088c0 <wcrtomb@plt+0x5f00>
  40850c:	cmp	x23, #0x1
  408510:	b.ne	4084cc <wcrtomb@plt+0x5b0c>  // b.any
  408514:	ldr	x8, [x21, #104]
  408518:	ldr	x26, [x25, #32]
  40851c:	stp	x8, x8, [x25, #48]
  408520:	cbz	x26, 4084cc <wcrtomb@plt+0x5b0c>
  408524:	ldp	x27, x22, [x25]
  408528:	b	408534 <wcrtomb@plt+0x5b74>
  40852c:	ldr	x26, [x26, #32]
  408530:	cbz	x26, 4084cc <wcrtomb@plt+0x5b0c>
  408534:	ldr	x0, [x26, #8]
  408538:	mov	x1, x22
  40853c:	bl	40898c <wcrtomb@plt+0x5fcc>
  408540:	tbnz	w0, #0, 40855c <wcrtomb@plt+0x5b9c>
  408544:	ldr	x8, [x25, #40]
  408548:	ldp	x9, x10, [x26, #40]
  40854c:	sub	x8, x8, x9
  408550:	cmp	x8, x10
  408554:	b.ge	40855c <wcrtomb@plt+0x5b9c>  // b.tcont
  408558:	str	x8, [x26, #48]
  40855c:	cbz	x27, 40852c <wcrtomb@plt+0x5b6c>
  408560:	ldr	x8, [x25, #40]
  408564:	ldr	x9, [x26, #40]
  408568:	ldr	x10, [x26, #56]
  40856c:	sub	x8, x8, x9
  408570:	cmp	x10, x8
  408574:	b.le	40852c <wcrtomb@plt+0x5b6c>
  408578:	str	x8, [x26, #56]
  40857c:	b	40852c <wcrtomb@plt+0x5b6c>
  408580:	add	x25, x21, #0x178
  408584:	cmp	x19, #0x0
  408588:	mov	x8, sp
  40858c:	csel	x22, x8, x25, ne  // ne = any
  408590:	mov	w2, #0x800                 	// #2048
  408594:	mov	x0, x22
  408598:	mov	w1, wzr
  40859c:	bl	4025b0 <memset@plt>
  4085a0:	ldr	x8, [x21, #96]
  4085a4:	mov	x1, x22
  4085a8:	ldr	x0, [x8, #8]
  4085ac:	bl	408a0c <wcrtomb@plt+0x604c>
  4085b0:	mov	x26, xzr
  4085b4:	mov	w27, #0xffffffff            	// #-1
  4085b8:	mov	w28, #0xfffffffe            	// #-2
  4085bc:	b	4085d8 <wcrtomb@plt+0x5c18>
  4085c0:	mov	w27, w26
  4085c4:	mov	w28, w8
  4085c8:	add	x26, x26, #0x1
  4085cc:	cmp	x26, #0x100
  4085d0:	add	x25, x25, #0x8
  4085d4:	b.eq	408648 <wcrtomb@plt+0x5c88>  // b.none
  4085d8:	cbz	x19, 408600 <wcrtomb@plt+0x5c40>
  4085dc:	ldrb	w0, [x19, x26]
  4085e0:	bl	408a50 <wcrtomb@plt+0x6090>
  4085e4:	and	x8, x0, #0xff
  4085e8:	ldr	x9, [x22, x8, lsl #3]
  4085ec:	and	w8, w0, #0xff
  4085f0:	str	x9, [x25]
  4085f4:	ldr	x9, [x25]
  4085f8:	cbnz	x9, 40860c <wcrtomb@plt+0x5c4c>
  4085fc:	b	4085c8 <wcrtomb@plt+0x5c08>
  408600:	mov	w8, w26
  408604:	ldr	x9, [x25]
  408608:	cbz	x9, 4085c8 <wcrtomb@plt+0x5c08>
  40860c:	cmn	w28, #0x2
  408610:	b.le	4085c0 <wcrtomb@plt+0x5c00>
  408614:	cmp	w28, w8
  408618:	b.ne	408628 <wcrtomb@plt+0x5c68>  // b.any
  40861c:	cmp	w27, w8
  408620:	csinv	w27, w26, wzr, eq  // eq = none
  408624:	b	4085c8 <wcrtomb@plt+0x5c08>
  408628:	cmp	x26, w8, sxtw
  40862c:	cset	w8, eq  // eq = none
  408630:	cmp	w28, w27
  408634:	cset	w9, eq  // eq = none
  408638:	tst	w9, w8
  40863c:	csel	w27, w26, w27, ne  // ne = any
  408640:	csinv	w28, w28, wzr, ne  // ne = any
  408644:	b	4085c8 <wcrtomb@plt+0x5c08>
  408648:	cmp	x23, #0x1
  40864c:	str	w28, [x21, #2448]
  408650:	str	w27, [x21, #2452]
  408654:	b.ne	4087d0 <wcrtomb@plt+0x5e10>  // b.any
  408658:	ldp	x9, x8, [x21, #24]
  40865c:	ldr	x22, [x21, #104]
  408660:	sub	x8, x8, x9
  408664:	cmp	x8, x22
  408668:	b.cs	408678 <wcrtomb@plt+0x5cb8>  // b.hs, b.nlast
  40866c:	mov	x0, x21
  408670:	mov	x1, x22
  408674:	bl	4161f4 <_obstack_newchunk@@Base>
  408678:	ldp	x8, x9, [x21, #16]
  40867c:	add	x9, x9, x22
  408680:	cmp	x9, x8
  408684:	str	x9, [x21, #24]
  408688:	b.ne	408698 <wcrtomb@plt+0x5cd8>  // b.any
  40868c:	ldrb	w9, [x21, #80]
  408690:	orr	w9, w9, #0x2
  408694:	strb	w9, [x21, #80]
  408698:	ldr	x10, [x21, #48]
  40869c:	ldp	x11, x9, [x21, #24]
  4086a0:	ldr	x12, [x21, #8]
  4086a4:	add	x11, x10, x11
  4086a8:	bic	x10, x11, x10
  4086ac:	sub	x11, x10, x12
  4086b0:	sub	x12, x9, x12
  4086b4:	cmp	x11, x12
  4086b8:	str	x10, [x21, #24]
  4086bc:	b.ls	4086c4 <wcrtomb@plt+0x5d04>  // b.plast
  4086c0:	str	x9, [x21, #24]
  4086c4:	ldr	x9, [x21, #24]
  4086c8:	ldr	x10, [x21, #104]
  4086cc:	str	x8, [x21, #2424]
  4086d0:	str	x9, [x21, #16]
  4086d4:	subs	x9, x10, #0x1
  4086d8:	b.lt	408704 <wcrtomb@plt+0x5d44>  // b.tstop
  4086dc:	ldr	x8, [x24]
  4086e0:	ldr	x11, [x21, #2424]
  4086e4:	add	x12, x9, #0x1
  4086e8:	cmp	x12, #0x1
  4086ec:	ldr	x10, [x8, #8]
  4086f0:	add	x24, x8, #0x18
  4086f4:	ldrb	w10, [x10, #24]
  4086f8:	strb	w10, [x11, x9]
  4086fc:	sub	x9, x9, #0x1
  408700:	b.gt	4086dc <wcrtomb@plt+0x5d1c>
  408704:	ldr	x8, [x21, #104]
  408708:	cmp	x8, #0x1
  40870c:	b.le	4087d0 <wcrtomb@plt+0x5e10>
  408710:	ldp	x10, x9, [x21, #24]
  408714:	lsl	x8, x8, #3
  408718:	sub	x22, x8, #0x8
  40871c:	sub	x8, x9, x10
  408720:	cmp	x8, x22
  408724:	b.cs	408734 <wcrtomb@plt+0x5d74>  // b.hs, b.nlast
  408728:	mov	x0, x21
  40872c:	mov	x1, x22
  408730:	bl	4161f4 <_obstack_newchunk@@Base>
  408734:	ldp	x8, x9, [x21, #16]
  408738:	add	x9, x9, x22
  40873c:	cmp	x9, x8
  408740:	str	x9, [x21, #24]
  408744:	b.ne	408754 <wcrtomb@plt+0x5d94>  // b.any
  408748:	ldrb	w9, [x21, #80]
  40874c:	orr	w9, w9, #0x2
  408750:	strb	w9, [x21, #80]
  408754:	ldr	x9, [x21, #48]
  408758:	ldp	x12, x13, [x21, #24]
  40875c:	ldr	x11, [x21, #8]
  408760:	ldr	x10, [x21, #104]
  408764:	str	x8, [x21, #2432]
  408768:	add	x12, x9, x12
  40876c:	bic	x9, x12, x9
  408770:	sub	x14, x13, x11
  408774:	sub	x11, x9, x11
  408778:	cmp	x11, x14
  40877c:	csel	x9, x13, x9, hi  // hi = pmore
  408780:	cmp	x10, #0x2
  408784:	stp	x9, x9, [x21, #16]
  408788:	b.lt	4087b8 <wcrtomb@plt+0x5df8>  // b.tstop
  40878c:	ldr	x8, [x21, #96]
  408790:	ldr	x9, [x21, #2432]
  408794:	mov	x11, xzr
  408798:	ldr	x8, [x8, #24]
  40879c:	ldr	x10, [x8, #48]
  4087a0:	str	x10, [x9, x11, lsl #3]
  4087a4:	ldr	x10, [x21, #104]
  4087a8:	add	x11, x11, #0x1
  4087ac:	sub	x12, x10, #0x1
  4087b0:	cmp	x11, x12
  4087b4:	b.lt	408798 <wcrtomb@plt+0x5dd8>  // b.tstop
  4087b8:	ldr	x8, [x21, #2424]
  4087bc:	mov	x0, x19
  4087c0:	add	x8, x10, x8
  4087c4:	ldurb	w1, [x8, #-2]
  4087c8:	bl	408a64 <wcrtomb@plt+0x60a4>
  4087cc:	strb	w0, [x21, #2456]
  4087d0:	cbz	x19, 4087fc <wcrtomb@plt+0x5e3c>
  4087d4:	mov	x22, xzr
  4087d8:	add	x21, x21, #0x78
  4087dc:	ldrb	w0, [x19, x22]
  4087e0:	bl	408a50 <wcrtomb@plt+0x6090>
  4087e4:	and	x8, x0, #0xff
  4087e8:	ldrb	w8, [x20, x8]
  4087ec:	strb	w8, [x21, x22]
  4087f0:	add	x22, x22, #0x1
  4087f4:	cmp	x22, #0x100
  4087f8:	b.ne	4087dc <wcrtomb@plt+0x5e1c>  // b.any
  4087fc:	add	sp, sp, #0x910
  408800:	ldp	x20, x19, [sp, #80]
  408804:	ldp	x22, x21, [sp, #64]
  408808:	ldp	x24, x23, [sp, #48]
  40880c:	ldp	x26, x25, [sp, #32]
  408810:	ldp	x28, x27, [sp, #16]
  408814:	ldp	x29, x30, [sp], #96
  408818:	ret
  40881c:	cbz	x0, 408860 <wcrtomb@plt+0x5ea0>
  408820:	stp	x29, x30, [sp, #-32]!
  408824:	stp	x20, x19, [sp, #16]
  408828:	mov	x20, x0
  40882c:	ldr	x0, [x0]
  408830:	mov	x29, sp
  408834:	mov	x19, x1
  408838:	bl	40881c <wcrtomb@plt+0x5e5c>
  40883c:	ldr	x0, [x20, #8]
  408840:	mov	x1, x19
  408844:	bl	40881c <wcrtomb@plt+0x5e5c>
  408848:	ldr	x8, [x20, #16]
  40884c:	ldr	x9, [x19]
  408850:	str	x8, [x9, #24]
  408854:	str	x8, [x19]
  408858:	ldp	x20, x19, [sp, #16]
  40885c:	ldp	x29, x30, [sp], #32
  408860:	ret
  408864:	stp	x29, x30, [sp, #-48]!
  408868:	str	x21, [sp, #16]
  40886c:	stp	x20, x19, [sp, #32]
  408870:	mov	x29, sp
  408874:	cbz	x0, 4088b0 <wcrtomb@plt+0x5ef0>
  408878:	mov	x21, x0
  40887c:	ldr	x0, [x0]
  408880:	mov	x19, x2
  408884:	mov	x20, x1
  408888:	bl	408864 <wcrtomb@plt+0x5ea4>
  40888c:	ldr	x0, [x21, #8]
  408890:	mov	x1, x20
  408894:	mov	x2, x19
  408898:	bl	408864 <wcrtomb@plt+0x5ea4>
  40889c:	ldrb	w8, [x21, #24]
  4088a0:	ldrb	w9, [x19, x8]
  4088a4:	cmp	x9, x20
  4088a8:	b.le	4088b0 <wcrtomb@plt+0x5ef0>
  4088ac:	strb	w20, [x19, x8]
  4088b0:	ldp	x20, x19, [sp, #32]
  4088b4:	ldr	x21, [sp, #16]
  4088b8:	ldp	x29, x30, [sp], #48
  4088bc:	ret
  4088c0:	stp	x29, x30, [sp, #-64]!
  4088c4:	str	x23, [sp, #16]
  4088c8:	stp	x22, x21, [sp, #32]
  4088cc:	stp	x20, x19, [sp, #48]
  4088d0:	mov	x29, sp
  4088d4:	cbz	x0, 408978 <wcrtomb@plt+0x5fb8>
  4088d8:	mov	x21, x0
  4088dc:	ldr	x0, [x0]
  4088e0:	and	w23, w3, #0x1
  4088e4:	mov	w19, w3
  4088e8:	mov	w3, w23
  4088ec:	mov	x20, x2
  4088f0:	mov	x22, x1
  4088f4:	bl	4088c0 <wcrtomb@plt+0x5f00>
  4088f8:	ldr	x0, [x21, #8]
  4088fc:	mov	x1, x22
  408900:	mov	x2, x20
  408904:	mov	w3, w23
  408908:	bl	4088c0 <wcrtomb@plt+0x5f00>
  40890c:	cbnz	x22, 408924 <wcrtomb@plt+0x5f64>
  408910:	ldr	x8, [x21, #16]
  408914:	str	x20, [x8, #32]
  408918:	b	408978 <wcrtomb@plt+0x5fb8>
  40891c:	ldr	x22, [x22, #32]
  408920:	cbz	x22, 408910 <wcrtomb@plt+0x5f50>
  408924:	ldr	x8, [x22, #8]
  408928:	cbz	x8, 40891c <wcrtomb@plt+0x5f5c>
  40892c:	ldrb	w9, [x21, #24]
  408930:	ldrb	w10, [x8, #24]
  408934:	cmp	w9, w10
  408938:	b.eq	40894c <wcrtomb@plt+0x5f8c>  // b.none
  40893c:	cset	w10, cs  // cs = hs, nlast
  408940:	ldr	x8, [x8, w10, uxtw #3]
  408944:	cbnz	x8, 408930 <wcrtomb@plt+0x5f70>
  408948:	b	40891c <wcrtomb@plt+0x5f5c>
  40894c:	ldr	x10, [x8, #16]
  408950:	ldr	x9, [x21, #16]
  408954:	str	x10, [x9, #32]
  408958:	tbnz	w19, #0, 408978 <wcrtomb@plt+0x5fb8>
  40895c:	ldr	x8, [x8, #16]
  408960:	ldr	x8, [x8]
  408964:	cbz	x8, 408978 <wcrtomb@plt+0x5fb8>
  408968:	ldr	x8, [x9]
  40896c:	cbnz	x8, 408978 <wcrtomb@plt+0x5fb8>
  408970:	mov	x8, #0xffffffffffffffff    	// #-1
  408974:	str	x8, [x9]
  408978:	ldp	x20, x19, [sp, #48]
  40897c:	ldp	x22, x21, [sp, #32]
  408980:	ldr	x23, [sp, #16]
  408984:	ldp	x29, x30, [sp], #64
  408988:	ret
  40898c:	stp	x29, x30, [sp, #-32]!
  408990:	stp	x20, x19, [sp, #16]
  408994:	mov	x29, sp
  408998:	cbz	x1, 4089fc <wcrtomb@plt+0x603c>
  40899c:	mov	x20, x1
  4089a0:	ldr	x1, [x1]
  4089a4:	mov	x19, x0
  4089a8:	bl	40898c <wcrtomb@plt+0x5fcc>
  4089ac:	tbz	w0, #0, 4089f4 <wcrtomb@plt+0x6034>
  4089b0:	ldr	x1, [x20, #8]
  4089b4:	mov	x0, x19
  4089b8:	bl	40898c <wcrtomb@plt+0x5fcc>
  4089bc:	tbz	w0, #0, 4089f4 <wcrtomb@plt+0x6034>
  4089c0:	cmp	x19, #0x0
  4089c4:	cset	w0, ne  // ne = any
  4089c8:	cbz	x19, 408a00 <wcrtomb@plt+0x6040>
  4089cc:	ldrb	w8, [x20, #24]
  4089d0:	ldrb	w9, [x19, #24]
  4089d4:	cmp	w8, w9
  4089d8:	b.eq	4089fc <wcrtomb@plt+0x603c>  // b.none
  4089dc:	cset	w9, cs  // cs = hs, nlast
  4089e0:	ldr	x19, [x19, w9, uxtw #3]
  4089e4:	cmp	x19, #0x0
  4089e8:	cset	w0, ne  // ne = any
  4089ec:	cbnz	x19, 4089d0 <wcrtomb@plt+0x6010>
  4089f0:	b	408a00 <wcrtomb@plt+0x6040>
  4089f4:	mov	w0, wzr
  4089f8:	b	408a00 <wcrtomb@plt+0x6040>
  4089fc:	mov	w0, #0x1                   	// #1
  408a00:	ldp	x20, x19, [sp, #16]
  408a04:	ldp	x29, x30, [sp], #32
  408a08:	ret
  408a0c:	cbz	x0, 408a4c <wcrtomb@plt+0x608c>
  408a10:	stp	x29, x30, [sp, #-32]!
  408a14:	stp	x20, x19, [sp, #16]
  408a18:	mov	x20, x0
  408a1c:	ldr	x0, [x0]
  408a20:	mov	x29, sp
  408a24:	mov	x19, x1
  408a28:	bl	408a0c <wcrtomb@plt+0x604c>
  408a2c:	ldr	x0, [x20, #8]
  408a30:	mov	x1, x19
  408a34:	bl	408a0c <wcrtomb@plt+0x604c>
  408a38:	ldr	x8, [x20, #16]
  408a3c:	ldrb	w9, [x20, #24]
  408a40:	str	x8, [x19, x9, lsl #3]
  408a44:	ldp	x20, x19, [sp, #16]
  408a48:	ldp	x29, x30, [sp], #32
  408a4c:	ret
  408a50:	stp	x29, x30, [sp, #-16]!
  408a54:	mov	x29, sp
  408a58:	bl	4093dc <wcrtomb@plt+0x6a1c>
  408a5c:	ldp	x29, x30, [sp], #16
  408a60:	ret
  408a64:	cbz	x0, 408a90 <wcrtomb@plt+0x60d0>
  408a68:	stp	x29, x30, [sp, #-32]!
  408a6c:	str	x19, [sp, #16]
  408a70:	mov	x19, x0
  408a74:	mov	w0, w1
  408a78:	mov	x29, sp
  408a7c:	bl	408a50 <wcrtomb@plt+0x6090>
  408a80:	and	x8, x0, #0xff
  408a84:	ldrb	w1, [x19, x8]
  408a88:	ldr	x19, [sp, #16]
  408a8c:	ldp	x29, x30, [sp], #32
  408a90:	mov	w0, w1
  408a94:	ret
  408a98:	stp	x29, x30, [sp, #-16]!
  408a9c:	ldr	x8, [x0, #2464]
  408aa0:	and	w4, w4, #0x1
  408aa4:	mov	x29, sp
  408aa8:	blr	x8
  408aac:	ldp	x29, x30, [sp], #16
  408ab0:	ret
  408ab4:	stp	x29, x30, [sp, #-32]!
  408ab8:	mov	x1, xzr
  408abc:	str	x19, [sp, #16]
  408ac0:	mov	x29, sp
  408ac4:	mov	x19, x0
  408ac8:	bl	4163ac <_obstack_free@@Base>
  408acc:	mov	x0, x19
  408ad0:	bl	402770 <free@plt>
  408ad4:	ldr	x19, [sp, #16]
  408ad8:	ldp	x29, x30, [sp], #32
  408adc:	ret
  408ae0:	sub	sp, sp, #0x90
  408ae4:	stp	x29, x30, [sp, #48]
  408ae8:	stp	x28, x27, [sp, #64]
  408aec:	stp	x26, x25, [sp, #80]
  408af0:	stp	x24, x23, [sp, #96]
  408af4:	stp	x22, x21, [sp, #112]
  408af8:	stp	x20, x19, [sp, #128]
  408afc:	ldr	x21, [x0, #104]
  408b00:	add	x29, sp, #0x30
  408b04:	cbz	x21, 408b1c <wcrtomb@plt+0x615c>
  408b08:	mov	x26, x2
  408b0c:	cmp	x21, x2
  408b10:	b.le	408b24 <wcrtomb@plt+0x6164>
  408b14:	mov	x27, #0xffffffffffffffff    	// #-1
  408b18:	b	408b54 <wcrtomb@plt+0x6194>
  408b1c:	mov	x27, xzr
  408b20:	b	408b54 <wcrtomb@plt+0x6194>
  408b24:	mov	x20, x0
  408b28:	mov	x19, x1
  408b2c:	cmp	x21, #0x1
  408b30:	b.ne	408b78 <wcrtomb@plt+0x61b8>  // b.any
  408b34:	mov	x0, x19
  408b38:	mov	x1, x26
  408b3c:	mov	x2, x20
  408b40:	bl	408eb0 <wcrtomb@plt+0x64f0>
  408b44:	sub	x8, x0, x19
  408b48:	cmp	x0, #0x0
  408b4c:	stur	x0, [x29, #-8]
  408b50:	csinv	x27, x8, xzr, ne  // ne = any
  408b54:	mov	x0, x27
  408b58:	ldp	x20, x19, [sp, #128]
  408b5c:	ldp	x22, x21, [sp, #112]
  408b60:	ldp	x24, x23, [sp, #96]
  408b64:	ldp	x26, x25, [sp, #80]
  408b68:	ldp	x28, x27, [sp, #64]
  408b6c:	ldp	x29, x30, [sp, #48]
  408b70:	add	sp, sp, #0x90
  408b74:	ret
  408b78:	add	x9, x19, x21
  408b7c:	ldr	x22, [x20, #2440]
  408b80:	ldr	x8, [x20, #2424]
  408b84:	stur	x9, [x29, #-8]
  408b88:	ldr	w23, [x20, #2448]
  408b8c:	ldrb	w24, [x20, #2456]
  408b90:	add	x25, x8, x21
  408b94:	tbnz	x21, #63, 408bac <wcrtomb@plt+0x61ec>
  408b98:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  408b9c:	movk	x8, #0xaaa, lsl #48
  408ba0:	cmp	x21, x8
  408ba4:	b.le	408bc4 <wcrtomb@plt+0x6204>
  408ba8:	b	408e18 <wcrtomb@plt+0x6458>
  408bac:	cmn	x21, #0x1
  408bb0:	b.eq	408bc4 <wcrtomb@plt+0x6204>  // b.none
  408bb4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  408bb8:	sdiv	x8, x8, x21
  408bbc:	cmp	x8, #0xc
  408bc0:	b.lt	408e18 <wcrtomb@plt+0x6458>  // b.tstop
  408bc4:	add	x8, x21, x21, lsl #1
  408bc8:	lsl	x8, x8, #2
  408bcc:	cmp	x8, x26
  408bd0:	b.ge	408e18 <wcrtomb@plt+0x6458>  // b.tcont
  408bd4:	ldur	x28, [x29, #-8]
  408bd8:	add	x9, x19, x26
  408bdc:	mov	x8, #0xfffffffffffffff5    	// #-11
  408be0:	madd	x8, x21, x8, x9
  408be4:	cmp	x28, x8
  408be8:	str	x9, [sp, #8]
  408bec:	stur	x8, [x29, #-16]
  408bf0:	b.hi	408e18 <wcrtomb@plt+0x6458>  // b.pmore
  408bf4:	add	x8, x20, #0x78
  408bf8:	stp	x8, x25, [sp, #16]
  408bfc:	b	408c0c <wcrtomb@plt+0x624c>
  408c00:	ldp	x8, x28, [x29, #-16]
  408c04:	cmp	x28, x8
  408c08:	b.hi	408e18 <wcrtomb@plt+0x6458>  // b.pmore
  408c0c:	ldurb	w0, [x28, #-1]
  408c10:	mov	w25, w24
  408c14:	mov	w24, w23
  408c18:	mov	x23, x22
  408c1c:	bl	408a50 <wcrtomb@plt+0x6090>
  408c20:	and	x8, x0, #0xff
  408c24:	add	x22, x20, #0x78
  408c28:	ldrb	w8, [x22, x8]
  408c2c:	ldur	x9, [x29, #-8]
  408c30:	add	x8, x9, x8
  408c34:	stur	x8, [x29, #-8]
  408c38:	ldurb	w0, [x8, #-1]
  408c3c:	bl	408a50 <wcrtomb@plt+0x6090>
  408c40:	and	x8, x0, #0xff
  408c44:	ldrb	w9, [x22, x8]
  408c48:	ldur	x8, [x29, #-8]
  408c4c:	add	x8, x8, x9
  408c50:	stur	x8, [x29, #-8]
  408c54:	cbz	x9, 408d58 <wcrtomb@plt+0x6398>
  408c58:	ldurb	w0, [x8, #-1]
  408c5c:	bl	408a50 <wcrtomb@plt+0x6090>
  408c60:	and	x8, x0, #0xff
  408c64:	ldrb	w8, [x22, x8]
  408c68:	ldur	x9, [x29, #-8]
  408c6c:	add	x8, x9, x8
  408c70:	stur	x8, [x29, #-8]
  408c74:	ldurb	w0, [x8, #-1]
  408c78:	bl	408a50 <wcrtomb@plt+0x6090>
  408c7c:	and	x8, x0, #0xff
  408c80:	ldrb	w8, [x22, x8]
  408c84:	ldur	x9, [x29, #-8]
  408c88:	add	x8, x9, x8
  408c8c:	stur	x8, [x29, #-8]
  408c90:	ldurb	w0, [x8, #-1]
  408c94:	bl	408a50 <wcrtomb@plt+0x6090>
  408c98:	and	x8, x0, #0xff
  408c9c:	ldrb	w9, [x22, x8]
  408ca0:	ldur	x8, [x29, #-8]
  408ca4:	add	x8, x8, x9
  408ca8:	stur	x8, [x29, #-8]
  408cac:	cbz	x9, 408d58 <wcrtomb@plt+0x6398>
  408cb0:	ldurb	w0, [x8, #-1]
  408cb4:	bl	408a50 <wcrtomb@plt+0x6090>
  408cb8:	and	x8, x0, #0xff
  408cbc:	add	x22, x20, #0x78
  408cc0:	ldrb	w8, [x22, x8]
  408cc4:	ldur	x9, [x29, #-8]
  408cc8:	add	x8, x9, x8
  408ccc:	stur	x8, [x29, #-8]
  408cd0:	ldurb	w0, [x8, #-1]
  408cd4:	bl	408a50 <wcrtomb@plt+0x6090>
  408cd8:	and	x8, x0, #0xff
  408cdc:	ldrb	w8, [x22, x8]
  408ce0:	ldur	x9, [x29, #-8]
  408ce4:	add	x8, x9, x8
  408ce8:	stur	x8, [x29, #-8]
  408cec:	ldurb	w0, [x8, #-1]
  408cf0:	bl	408a50 <wcrtomb@plt+0x6090>
  408cf4:	and	x8, x0, #0xff
  408cf8:	ldrb	w9, [x22, x8]
  408cfc:	ldur	x8, [x29, #-8]
  408d00:	add	x8, x8, x9
  408d04:	stur	x8, [x29, #-8]
  408d08:	cbz	x9, 408d58 <wcrtomb@plt+0x6398>
  408d0c:	ldurb	w0, [x8, #-1]
  408d10:	bl	408a50 <wcrtomb@plt+0x6090>
  408d14:	and	x8, x0, #0xff
  408d18:	ldrb	w8, [x22, x8]
  408d1c:	ldur	x9, [x29, #-8]
  408d20:	add	x8, x9, x8
  408d24:	stur	x8, [x29, #-8]
  408d28:	ldurb	w0, [x8, #-1]
  408d2c:	bl	408a50 <wcrtomb@plt+0x6090>
  408d30:	and	x8, x0, #0xff
  408d34:	ldrb	w8, [x22, x8]
  408d38:	ldur	x9, [x29, #-8]
  408d3c:	add	x8, x9, x8
  408d40:	sub	x9, x8, x28
  408d44:	cmp	x9, #0x7f
  408d48:	stur	x8, [x29, #-8]
  408d4c:	b.le	408dac <wcrtomb@plt+0x63ec>
  408d50:	mov	w8, #0x3                   	// #3
  408d54:	b	408df0 <wcrtomb@plt+0x6430>
  408d58:	mov	x22, x23
  408d5c:	mov	w23, w24
  408d60:	mov	w24, w25
  408d64:	ldr	x25, [sp, #24]
  408d68:	ldur	x1, [x29, #-16]
  408d6c:	ldr	x7, [sp, #16]
  408d70:	sub	x0, x29, #0x8
  408d74:	mov	x2, x25
  408d78:	mov	x3, x21
  408d7c:	mov	x4, x22
  408d80:	mov	w5, w23
  408d84:	mov	w6, w24
  408d88:	str	x20, [sp]
  408d8c:	bl	408f6c <wcrtomb@plt+0x65ac>
  408d90:	tbz	w0, #0, 408da4 <wcrtomb@plt+0x63e4>
  408d94:	ldur	x8, [x29, #-8]
  408d98:	sub	x27, x8, x19
  408d9c:	mov	w8, #0x1                   	// #1
  408da0:	b	408e04 <wcrtomb@plt+0x6444>
  408da4:	mov	w8, wzr
  408da8:	b	408e04 <wcrtomb@plt+0x6444>
  408dac:	sub	x0, x8, #0x1
  408db0:	ldr	x8, [sp, #8]
  408db4:	mov	x2, x20
  408db8:	stur	x0, [x29, #-8]
  408dbc:	sub	x1, x8, x0
  408dc0:	bl	408eb0 <wcrtomb@plt+0x64f0>
  408dc4:	stur	x0, [x29, #-8]
  408dc8:	cbz	x0, 408de8 <wcrtomb@plt+0x6428>
  408dcc:	ldur	x9, [x29, #-16]
  408dd0:	add	x8, x0, #0x1
  408dd4:	stur	x8, [x29, #-8]
  408dd8:	cmp	x9, x8
  408ddc:	cset	w8, ls  // ls = plast
  408de0:	lsl	w8, w8, #1
  408de4:	b	408df0 <wcrtomb@plt+0x6430>
  408de8:	mov	x27, #0xffffffffffffffff    	// #-1
  408dec:	mov	w8, #0x1                   	// #1
  408df0:	mov	x22, x23
  408df4:	mov	w23, w24
  408df8:	mov	w24, w25
  408dfc:	ldr	x25, [sp, #24]
  408e00:	cbz	w8, 408d68 <wcrtomb@plt+0x63a8>
  408e04:	cbz	w8, 408c00 <wcrtomb@plt+0x6240>
  408e08:	cmp	w8, #0x3
  408e0c:	b.eq	408c00 <wcrtomb@plt+0x6240>  // b.none
  408e10:	cmp	w8, #0x2
  408e14:	b.ne	408b54 <wcrtomb@plt+0x6194>  // b.any
  408e18:	ldur	x8, [x29, #-8]
  408e1c:	add	x26, x19, x26
  408e20:	ldurb	w0, [x8, #-1]
  408e24:	bl	408a50 <wcrtomb@plt+0x6090>
  408e28:	add	x8, x20, w0, uxtb
  408e2c:	ldur	x9, [x29, #-8]
  408e30:	ldrb	w8, [x8, #120]
  408e34:	sub	x10, x26, x9
  408e38:	cmp	x10, x8
  408e3c:	b.ge	408e54 <wcrtomb@plt+0x6494>  // b.tcont
  408e40:	b	408b14 <wcrtomb@plt+0x6154>
  408e44:	ldur	x9, [x29, #-8]
  408e48:	sub	x10, x26, x9
  408e4c:	cmp	x10, x8
  408e50:	b.lt	408b14 <wcrtomb@plt+0x6154>  // b.tstop
  408e54:	add	x8, x9, x8
  408e58:	stur	x8, [x29, #-8]
  408e5c:	ldurb	w0, [x8, #-1]
  408e60:	bl	408a50 <wcrtomb@plt+0x6090>
  408e64:	add	x8, x20, w0, uxtb
  408e68:	ldrb	w8, [x8, #120]
  408e6c:	cbnz	w8, 408e44 <wcrtomb@plt+0x6484>
  408e70:	sub	x0, x29, #0x8
  408e74:	mov	x1, x26
  408e78:	mov	x2, x25
  408e7c:	mov	x3, x21
  408e80:	mov	x4, x22
  408e84:	mov	w5, w23
  408e88:	mov	w6, w24
  408e8c:	mov	x7, xzr
  408e90:	str	x20, [sp]
  408e94:	bl	408f6c <wcrtomb@plt+0x65ac>
  408e98:	tbnz	w0, #0, 408ea4 <wcrtomb@plt+0x64e4>
  408e9c:	mov	w8, wzr
  408ea0:	b	408e44 <wcrtomb@plt+0x6484>
  408ea4:	ldur	x8, [x29, #-8]
  408ea8:	sub	x27, x8, x19
  408eac:	b	408b54 <wcrtomb@plt+0x6194>
  408eb0:	stp	x29, x30, [sp, #-48]!
  408eb4:	stp	x20, x19, [sp, #32]
  408eb8:	ldr	w8, [x2, #2452]
  408ebc:	str	x21, [sp, #16]
  408ec0:	mov	x20, x2
  408ec4:	mov	x19, x0
  408ec8:	add	x21, x0, x1
  408ecc:	mov	x29, sp
  408ed0:	tbnz	w8, #31, 408f20 <wcrtomb@plt+0x6560>
  408ed4:	cmp	x19, x21
  408ed8:	b.cs	408f4c <wcrtomb@plt+0x658c>  // b.hs, b.nlast
  408edc:	ldrb	w0, [x19]
  408ee0:	bl	408a50 <wcrtomb@plt+0x6090>
  408ee4:	add	x8, x20, w0, uxtb #3
  408ee8:	ldr	x8, [x8, #376]
  408eec:	cbnz	x8, 408f14 <wcrtomb@plt+0x6554>
  408ef0:	add	x19, x19, #0x1
  408ef4:	tst	x19, #0xf
  408ef8:	b.ne	408ed4 <wcrtomb@plt+0x6514>  // b.any
  408efc:	ldr	w1, [x20, #2448]
  408f00:	ldr	w2, [x20, #2452]
  408f04:	sub	x3, x21, x19
  408f08:	mov	x0, x19
  408f0c:	bl	4119cc <wcrtomb@plt+0xf00c>
  408f10:	mov	x19, x0
  408f14:	mov	w8, wzr
  408f18:	cbnz	w8, 408f54 <wcrtomb@plt+0x6594>
  408f1c:	b	408f58 <wcrtomb@plt+0x6598>
  408f20:	cmp	x1, #0x1
  408f24:	b.lt	408f54 <wcrtomb@plt+0x6594>  // b.tstop
  408f28:	ldrb	w0, [x19]
  408f2c:	bl	408a50 <wcrtomb@plt+0x6090>
  408f30:	add	x8, x20, w0, uxtb #3
  408f34:	ldr	x8, [x8, #376]
  408f38:	cbnz	x8, 408f58 <wcrtomb@plt+0x6598>
  408f3c:	add	x19, x19, #0x1
  408f40:	cmp	x19, x21
  408f44:	b.cc	408f28 <wcrtomb@plt+0x6568>  // b.lo, b.ul, b.last
  408f48:	b	408f54 <wcrtomb@plt+0x6594>
  408f4c:	mov	w8, #0x1                   	// #1
  408f50:	cbz	w8, 408f58 <wcrtomb@plt+0x6598>
  408f54:	mov	x19, xzr
  408f58:	mov	x0, x19
  408f5c:	ldp	x20, x19, [sp, #32]
  408f60:	ldr	x21, [sp, #16]
  408f64:	ldp	x29, x30, [sp], #48
  408f68:	ret
  408f6c:	sub	sp, sp, #0xa0
  408f70:	stp	x29, x30, [sp, #64]
  408f74:	add	x29, sp, #0x40
  408f78:	ldr	x8, [x29, #96]
  408f7c:	stp	x28, x27, [sp, #80]
  408f80:	stp	x26, x25, [sp, #96]
  408f84:	stp	x24, x23, [sp, #112]
  408f88:	stp	x22, x21, [sp, #128]
  408f8c:	stp	x20, x19, [sp, #144]
  408f90:	stp	x8, x1, [x29, #-16]
  408f94:	ldr	x27, [x0]
  408f98:	mov	w20, w6
  408f9c:	mov	x23, x4
  408fa0:	mov	x21, x3
  408fa4:	mov	x25, x2
  408fa8:	neg	x8, x3
  408fac:	mov	x24, x3
  408fb0:	str	x7, [sp, #8]
  408fb4:	stur	w5, [x29, #-28]
  408fb8:	stur	xzr, [x29, #-24]
  408fbc:	stp	x8, x0, [sp, #16]
  408fc0:	b	408fcc <wcrtomb@plt+0x660c>
  408fc4:	mov	w8, #0x3                   	// #3
  408fc8:	cbnz	w8, 4090fc <wcrtomb@plt+0x673c>
  408fcc:	ldurb	w1, [x27, #-2]
  408fd0:	mov	x0, x23
  408fd4:	bl	408a64 <wcrtomb@plt+0x60a4>
  408fd8:	and	w8, w0, #0xff
  408fdc:	cmp	w8, w20, uxtb
  408fe0:	b.ne	40908c <wcrtomb@plt+0x66cc>  // b.any
  408fe4:	mov	x19, #0xfffffffffffffffd    	// #-3
  408fe8:	mov	w28, #0x2                   	// #2
  408fec:	cmp	x28, x24
  408ff0:	b.ge	40902c <wcrtomb@plt+0x666c>  // b.tcont
  408ff4:	ldrb	w1, [x27, x19]
  408ff8:	mov	x0, x23
  408ffc:	mov	x22, x28
  409000:	add	x28, x28, #0x1
  409004:	bl	408a64 <wcrtomb@plt+0x60a4>
  409008:	ldrb	w1, [x25, x19]
  40900c:	and	w26, w0, #0xff
  409010:	mov	x0, x23
  409014:	bl	408a64 <wcrtomb@plt+0x60a4>
  409018:	cmp	w26, w0, uxtb
  40901c:	sub	x19, x19, #0x1
  409020:	b.eq	408fec <wcrtomb@plt+0x662c>  // b.none
  409024:	cmp	x22, x24
  409028:	b.lt	409090 <wcrtomb@plt+0x66d0>  // b.tstop
  40902c:	ldur	x8, [x29, #-24]
  409030:	add	x28, x8, x24
  409034:	mvn	x19, x28
  409038:	cmp	x28, x21
  40903c:	b.ge	409078 <wcrtomb@plt+0x66b8>  // b.tcont
  409040:	ldrb	w1, [x27, x19]
  409044:	mov	x0, x23
  409048:	mov	x22, x28
  40904c:	add	x28, x28, #0x1
  409050:	bl	408a64 <wcrtomb@plt+0x60a4>
  409054:	ldrb	w1, [x25, x19]
  409058:	and	w26, w0, #0xff
  40905c:	mov	x0, x23
  409060:	bl	408a64 <wcrtomb@plt+0x60a4>
  409064:	cmp	w26, w0, uxtb
  409068:	sub	x19, x19, #0x1
  40906c:	b.eq	409038 <wcrtomb@plt+0x6678>  // b.none
  409070:	cmp	x22, x21
  409074:	b.lt	409090 <wcrtomb@plt+0x66d0>  // b.tstop
  409078:	ldp	x8, x9, [sp, #16]
  40907c:	add	x8, x27, x8
  409080:	str	x8, [x9]
  409084:	mov	w8, #0x1                   	// #1
  409088:	b	408fc8 <wcrtomb@plt+0x6608>
  40908c:	mov	w28, #0x2                   	// #2
  409090:	ldur	x8, [x29, #-16]
  409094:	ldr	x8, [x8, #2432]
  409098:	add	x8, x8, x28, lsl #3
  40909c:	ldur	x24, [x8, #-16]
  4090a0:	ldur	x8, [x29, #-8]
  4090a4:	add	x27, x27, x24
  4090a8:	cmp	x27, x8
  4090ac:	b.hi	408fc4 <wcrtomb@plt+0x6604>  // b.pmore
  4090b0:	ldurb	w1, [x27, #-1]
  4090b4:	mov	x0, x23
  4090b8:	bl	408a64 <wcrtomb@plt+0x60a4>
  4090bc:	ldur	w9, [x29, #-28]
  4090c0:	and	w8, w0, #0xff
  4090c4:	cmp	w8, w9, uxtb
  4090c8:	b.ne	4090dc <wcrtomb@plt+0x671c>  // b.any
  4090cc:	mov	w8, wzr
  4090d0:	sub	x9, x28, #0x1
  4090d4:	stur	x9, [x29, #-24]
  4090d8:	b	408fc8 <wcrtomb@plt+0x6608>
  4090dc:	ldr	x19, [sp, #8]
  4090e0:	cbz	x19, 408fc4 <wcrtomb@plt+0x6604>
  4090e4:	ldurb	w0, [x27, #-1]
  4090e8:	bl	408a50 <wcrtomb@plt+0x6090>
  4090ec:	and	x8, x0, #0xff
  4090f0:	ldrb	w8, [x19, x8]
  4090f4:	add	x27, x27, x8
  4090f8:	b	408fc4 <wcrtomb@plt+0x6604>
  4090fc:	cmp	w8, #0x3
  409100:	b.ne	409114 <wcrtomb@plt+0x6754>  // b.any
  409104:	ldr	x8, [sp, #24]
  409108:	mov	w0, wzr
  40910c:	str	x27, [x8]
  409110:	b	409118 <wcrtomb@plt+0x6758>
  409114:	mov	w0, #0x1                   	// #1
  409118:	ldp	x20, x19, [sp, #144]
  40911c:	ldp	x22, x21, [sp, #128]
  409120:	ldp	x24, x23, [sp, #112]
  409124:	ldp	x26, x25, [sp, #96]
  409128:	ldp	x28, x27, [sp, #80]
  40912c:	ldp	x29, x30, [sp, #64]
  409130:	add	sp, sp, #0xa0
  409134:	ret
  409138:	stp	x29, x30, [sp, #-96]!
  40913c:	stp	x28, x27, [sp, #16]
  409140:	stp	x26, x25, [sp, #32]
  409144:	stp	x24, x23, [sp, #48]
  409148:	stp	x22, x21, [sp, #64]
  40914c:	stp	x20, x19, [sp, #80]
  409150:	ldr	x8, [x0, #104]
  409154:	mov	x29, sp
  409158:	cmp	x8, x2
  40915c:	b.le	409168 <wcrtomb@plt+0x67a8>
  409160:	mov	x0, #0xffffffffffffffff    	// #-1
  409164:	b	409308 <wcrtomb@plt+0x6948>
  409168:	ldr	x27, [x0, #96]
  40916c:	ldr	x21, [x0, #2440]
  409170:	mov	w23, w4
  409174:	mov	x19, x3
  409178:	ldr	x8, [x27]
  40917c:	mov	x24, x0
  409180:	mov	x20, x1
  409184:	add	x26, x1, x2
  409188:	cbz	x8, 409194 <wcrtomb@plt+0x67d4>
  40918c:	mov	x22, x20
  409190:	b	4092c0 <wcrtomb@plt+0x6900>
  409194:	ldr	w28, [x24, #2448]
  409198:	mov	x25, x20
  40919c:	tbnz	w28, #31, 4091d8 <wcrtomb@plt+0x6818>
  4091a0:	sub	x1, x26, x25
  4091a4:	mov	x0, x25
  4091a8:	mov	x2, x24
  4091ac:	bl	408eb0 <wcrtomb@plt+0x64f0>
  4091b0:	mov	x22, x0
  4091b4:	cbz	x0, 4092a8 <wcrtomb@plt+0x68e8>
  4091b8:	ldrb	w1, [x22], #1
  4091bc:	mov	x0, x21
  4091c0:	bl	408a64 <wcrtomb@plt+0x60a4>
  4091c4:	add	x8, x24, w0, uxtb #3
  4091c8:	ldr	x27, [x8, #376]
  4091cc:	ldr	x8, [x27]
  4091d0:	cbz	x8, 409210 <wcrtomb@plt+0x6850>
  4091d4:	b	40929c <wcrtomb@plt+0x68dc>
  4091d8:	mov	x22, x25
  4091dc:	ldrb	w1, [x22], #1
  4091e0:	mov	x0, x21
  4091e4:	bl	408a64 <wcrtomb@plt+0x60a4>
  4091e8:	add	x8, x24, w0, uxtb #3
  4091ec:	ldr	x27, [x8, #376]
  4091f0:	cbnz	x27, 409204 <wcrtomb@plt+0x6844>
  4091f4:	cmp	x22, x26
  4091f8:	mov	x25, x22
  4091fc:	b.cc	4091dc <wcrtomb@plt+0x681c>  // b.lo, b.ul, b.last
  409200:	b	4092a8 <wcrtomb@plt+0x68e8>
  409204:	add	x22, x25, #0x1
  409208:	ldr	x8, [x27]
  40920c:	cbnz	x8, 40929c <wcrtomb@plt+0x68dc>
  409210:	cmp	x22, x26
  409214:	b.cs	4092a8 <wcrtomb@plt+0x68e8>  // b.hs, b.nlast
  409218:	mov	x25, x22
  40921c:	ldrb	w1, [x25], #1
  409220:	mov	x0, x21
  409224:	bl	408a64 <wcrtomb@plt+0x60a4>
  409228:	ldr	x8, [x27, #8]
  40922c:	ldrb	w9, [x8, #24]
  409230:	b	409238 <wcrtomb@plt+0x6878>
  409234:	ldrb	w9, [x8, #24]
  409238:	cmp	w9, w0, uxtb
  40923c:	b.eq	40926c <wcrtomb@plt+0x68ac>  // b.none
  409240:	and	w10, w0, #0xff
  409244:	cmp	w10, w9, uxtb
  409248:	cset	w9, cs  // cs = hs, nlast
  40924c:	ldr	x8, [x8, w9, uxtw #3]
  409250:	cbnz	x8, 409234 <wcrtomb@plt+0x6874>
  409254:	ldr	x27, [x27, #32]
  409258:	cbz	x27, 409280 <wcrtomb@plt+0x68c0>
  40925c:	ldr	x8, [x27]
  409260:	cbnz	x8, 40929c <wcrtomb@plt+0x68dc>
  409264:	ldr	x8, [x27, #8]
  409268:	b	409234 <wcrtomb@plt+0x6874>
  40926c:	ldr	x27, [x8, #16]
  409270:	ldr	x8, [x27]
  409274:	mov	x22, x25
  409278:	cbz	x8, 409210 <wcrtomb@plt+0x6850>
  40927c:	b	4092b4 <wcrtomb@plt+0x68f4>
  409280:	add	x8, x24, w0, uxtb #3
  409284:	ldr	x27, [x8, #376]
  409288:	cbnz	x27, 409270 <wcrtomb@plt+0x68b0>
  40928c:	cmp	x25, x26
  409290:	b.cc	40919c <wcrtomb@plt+0x67dc>  // b.lo, b.ul, b.last
  409294:	mov	w8, wzr
  409298:	b	4092b8 <wcrtomb@plt+0x68f8>
  40929c:	mov	w8, #0x1                   	// #1
  4092a0:	cbz	w8, 409160 <wcrtomb@plt+0x67a0>
  4092a4:	b	4092c0 <wcrtomb@plt+0x6900>
  4092a8:	mov	w8, wzr
  4092ac:	cbz	w8, 409160 <wcrtomb@plt+0x67a0>
  4092b0:	b	4092c0 <wcrtomb@plt+0x6900>
  4092b4:	mov	w8, #0x1                   	// #1
  4092b8:	mov	x22, x25
  4092bc:	cbz	w8, 409160 <wcrtomb@plt+0x67a0>
  4092c0:	ldr	x8, [x27]
  4092c4:	mov	x24, x27
  4092c8:	cmn	x8, #0x1
  4092cc:	b.ne	4092e4 <wcrtomb@plt+0x6924>  // b.any
  4092d0:	mov	x24, x27
  4092d4:	ldr	x24, [x24, #32]
  4092d8:	ldr	x8, [x24]
  4092dc:	cmn	x8, #0x1
  4092e0:	b.eq	4092d4 <wcrtomb@plt+0x6914>  // b.none
  4092e4:	ldr	x8, [x24, #40]
  4092e8:	sub	x25, x22, x8
  4092ec:	tbnz	w23, #0, 40932c <wcrtomb@plt+0x696c>
  4092f0:	ldr	x8, [x24]
  4092f4:	sub	x0, x25, x20
  4092f8:	lsr	x8, x8, #1
  4092fc:	stp	x8, x0, [x19]
  409300:	ldr	x8, [x24, #40]
  409304:	str	x8, [x19, #16]
  409308:	ldp	x20, x19, [sp, #80]
  40930c:	ldp	x22, x21, [sp, #64]
  409310:	ldp	x24, x23, [sp, #48]
  409314:	ldp	x26, x25, [sp, #32]
  409318:	ldp	x28, x27, [sp, #16]
  40931c:	ldp	x29, x30, [sp], #96
  409320:	ret
  409324:	mov	w8, wzr
  409328:	tbz	w8, #0, 4092f0 <wcrtomb@plt+0x6930>
  40932c:	cmp	x22, x26
  409330:	b.cs	4092f0 <wcrtomb@plt+0x6930>  // b.hs, b.nlast
  409334:	ldrb	w1, [x22], #1
  409338:	mov	x0, x21
  40933c:	bl	408a64 <wcrtomb@plt+0x60a4>
  409340:	ldr	x8, [x27, #8]
  409344:	cmp	x8, #0x0
  409348:	cset	w9, ne  // ne = any
  40934c:	cbz	x8, 409370 <wcrtomb@plt+0x69b0>
  409350:	ldrb	w10, [x8, #24]
  409354:	cmp	w10, w0, uxtb
  409358:	b.eq	409388 <wcrtomb@plt+0x69c8>  // b.none
  40935c:	and	w9, w0, #0xff
  409360:	cmp	w9, w10, uxtb
  409364:	cset	w9, cs  // cs = hs, nlast
  409368:	ldr	x8, [x8, w9, uxtw #3]
  40936c:	b	409344 <wcrtomb@plt+0x6984>
  409370:	ldr	x27, [x27, #32]
  409374:	cbz	x27, 409388 <wcrtomb@plt+0x69c8>
  409378:	ldr	x10, [x24, #40]
  40937c:	ldr	x11, [x27, #40]
  409380:	cmp	x10, x11
  409384:	b.le	409340 <wcrtomb@plt+0x6980>
  409388:	cbz	w9, 409324 <wcrtomb@plt+0x6964>
  40938c:	ldr	x27, [x8, #16]
  409390:	ldr	x8, [x27]
  409394:	cbz	x8, 4093d0 <wcrtomb@plt+0x6a10>
  409398:	ldr	x8, [x27]
  40939c:	cmn	x8, #0x1
  4093a0:	mov	x8, x27
  4093a4:	b.ne	4093bc <wcrtomb@plt+0x69fc>  // b.any
  4093a8:	mov	x8, x27
  4093ac:	ldr	x8, [x8, #32]
  4093b0:	ldr	x9, [x8]
  4093b4:	cmn	x9, #0x1
  4093b8:	b.eq	4093ac <wcrtomb@plt+0x69ec>  // b.none
  4093bc:	ldr	x9, [x8, #40]
  4093c0:	sub	x9, x22, x9
  4093c4:	cmp	x9, x25
  4093c8:	csel	x25, x25, x9, hi  // hi = pmore
  4093cc:	csel	x24, x24, x8, hi  // hi = pmore
  4093d0:	mov	w8, #0x1                   	// #1
  4093d4:	tbnz	w8, #0, 40932c <wcrtomb@plt+0x696c>
  4093d8:	b	4092f0 <wcrtomb@plt+0x6930>
  4093dc:	ret
  4093e0:	stp	x29, x30, [sp, #-48]!
  4093e4:	stp	x20, x19, [sp, #32]
  4093e8:	mov	x20, x0
  4093ec:	ldrb	w0, [x0]
  4093f0:	str	x21, [sp, #16]
  4093f4:	mov	x29, sp
  4093f8:	mov	x19, x2
  4093fc:	mov	x21, x1
  409400:	bl	4093dc <wcrtomb@plt+0x6a1c>
  409404:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409408:	add	x8, x8, #0x8d8
  40940c:	add	x8, x8, w0, uxtb
  409410:	ldrsb	x0, [x8, #3]
  409414:	cmn	x0, #0x2
  409418:	b.ne	40942c <wcrtomb@plt+0x6a6c>  // b.any
  40941c:	mov	x0, x20
  409420:	mov	x1, x21
  409424:	mov	x2, x19
  409428:	bl	416068 <wcrtomb@plt+0x136a8>
  40942c:	ldp	x20, x19, [sp, #32]
  409430:	ldr	x21, [sp, #16]
  409434:	ldp	x29, x30, [sp], #48
  409438:	ret
  40943c:	stp	x29, x30, [sp, #-48]!
  409440:	str	x21, [sp, #16]
  409444:	stp	x20, x19, [sp, #32]
  409448:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40944c:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x20bcc>
  409450:	mov	x19, xzr
  409454:	add	x20, x20, #0x8d8
  409458:	add	x21, x21, #0x65e
  40945c:	mov	x29, sp
  409460:	add	x8, x20, x19, lsl #2
  409464:	ldr	w0, [x8, #260]
  409468:	bl	409490 <wcrtomb@plt+0x6ad0>
  40946c:	and	w8, w0, #0x1
  409470:	strb	w8, [x21, x19]
  409474:	add	x19, x19, #0x1
  409478:	cmp	x19, #0x100
  40947c:	b.ne	409460 <wcrtomb@plt+0x6aa0>  // b.any
  409480:	ldp	x20, x19, [sp, #32]
  409484:	ldr	x21, [sp, #16]
  409488:	ldp	x29, x30, [sp], #48
  40948c:	ret
  409490:	cmp	w0, #0x5f
  409494:	b.ne	4094a0 <wcrtomb@plt+0x6ae0>  // b.any
  409498:	mov	w0, #0x1                   	// #1
  40949c:	ret
  4094a0:	stp	x29, x30, [sp, #-16]!
  4094a4:	mov	x29, sp
  4094a8:	bl	402860 <iswalnum@plt>
  4094ac:	cmp	w0, #0x0
  4094b0:	cset	w0, ne  // ne = any
  4094b4:	ldp	x29, x30, [sp], #16
  4094b8:	ret
  4094bc:	sub	sp, sp, #0x40
  4094c0:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4094c4:	ldrb	w8, [x8, #3550]
  4094c8:	stp	x29, x30, [sp, #16]
  4094cc:	stp	x22, x21, [sp, #32]
  4094d0:	stp	x20, x19, [sp, #48]
  4094d4:	add	x29, sp, #0x10
  4094d8:	cbz	w8, 4094f0 <wcrtomb@plt+0x6b30>
  4094dc:	mov	w19, w0
  4094e0:	bl	402780 <__ctype_get_mb_cur_max@plt>
  4094e4:	cmp	x0, #0x1
  4094e8:	b.eq	409510 <wcrtomb@plt+0x6b50>  // b.none
  4094ec:	tbnz	w19, #0, 409510 <wcrtomb@plt+0x6b50>
  4094f0:	mov	x19, xzr
  4094f4:	mov	x0, x19
  4094f8:	bl	407d9c <wcrtomb@plt+0x53dc>
  4094fc:	ldp	x20, x19, [sp, #48]
  409500:	ldp	x22, x21, [sp, #32]
  409504:	ldp	x29, x30, [sp, #16]
  409508:	add	sp, sp, #0x40
  40950c:	ret
  409510:	mov	w0, #0x100                 	// #256
  409514:	bl	413ae8 <wcrtomb@plt+0x11128>
  409518:	mov	x19, x0
  40951c:	bl	402780 <__ctype_get_mb_cur_max@plt>
  409520:	cmp	x0, #0x1
  409524:	b.ne	409548 <wcrtomb@plt+0x6b88>  // b.any
  409528:	mov	x20, xzr
  40952c:	mov	w0, w20
  409530:	bl	4024f0 <toupper@plt>
  409534:	strb	w0, [x19, x20]
  409538:	add	x20, x20, #0x1
  40953c:	cmp	x20, #0x100
  409540:	b.ne	40952c <wcrtomb@plt+0x6b6c>  // b.any
  409544:	b	4094f4 <wcrtomb@plt+0x6b34>
  409548:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40954c:	mov	x21, xzr
  409550:	add	x22, x22, #0x8d8
  409554:	b	409568 <wcrtomb@plt+0x6ba8>
  409558:	strb	w21, [x19, x21]
  40955c:	add	x21, x21, #0x1
  409560:	cmp	x21, #0x100
  409564:	b.eq	4094f4 <wcrtomb@plt+0x6b34>  // b.none
  409568:	add	x8, x22, x21, lsl #2
  40956c:	ldr	w20, [x8, #260]
  409570:	mov	w0, w20
  409574:	bl	4028d0 <towupper@plt>
  409578:	cmp	w0, w20
  40957c:	b.eq	409558 <wcrtomb@plt+0x6b98>  // b.none
  409580:	mov	w1, w0
  409584:	add	x0, x19, x21
  409588:	add	x2, sp, #0x8
  40958c:	str	xzr, [sp, #8]
  409590:	bl	4029c0 <wcrtomb@plt>
  409594:	cmp	x0, #0x1
  409598:	b.eq	40955c <wcrtomb@plt+0x6b9c>  // b.none
  40959c:	bl	4026c0 <abort@plt>
  4095a0:	sub	sp, sp, #0x60
  4095a4:	stp	x29, x30, [sp, #16]
  4095a8:	stp	x26, x25, [sp, #32]
  4095ac:	stp	x24, x23, [sp, #48]
  4095b0:	stp	x22, x21, [sp, #64]
  4095b4:	stp	x20, x19, [sp, #80]
  4095b8:	ldr	x24, [x0]
  4095bc:	mov	x19, x2
  4095c0:	add	x29, sp, #0x10
  4095c4:	cmp	x24, x2
  4095c8:	b.cs	409624 <wcrtomb@plt+0x6c64>  // b.hs, b.nlast
  4095cc:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4095d0:	ldrb	w8, [x8, #2266]
  4095d4:	mov	x22, x3
  4095d8:	mov	x21, x0
  4095dc:	mov	x20, x1
  4095e0:	cbz	w8, 409668 <wcrtomb@plt+0x6ca8>
  4095e4:	cmp	x19, x22
  4095e8:	b.cs	40962c <wcrtomb@plt+0x6c6c>  // b.hs, b.nlast
  4095ec:	ldrb	w8, [x19]
  4095f0:	and	w8, w8, #0xc0
  4095f4:	cmp	w8, #0x80
  4095f8:	b.ne	40962c <wcrtomb@plt+0x6c6c>  // b.any
  4095fc:	mov	x25, #0xffffffffffffffff    	// #-1
  409600:	mov	w0, #0x1                   	// #1
  409604:	ldrb	w8, [x19, x25]
  409608:	and	w8, w8, #0xc0
  40960c:	cmp	w8, #0x80
  409610:	b.ne	4096b8 <wcrtomb@plt+0x6cf8>  // b.any
  409614:	sub	x25, x25, #0x1
  409618:	cmn	x25, #0x4
  40961c:	b.ne	409604 <wcrtomb@plt+0x6c44>  // b.any
  409620:	b	409630 <wcrtomb@plt+0x6c70>
  409624:	sub	x0, x19, x24
  409628:	b	40964c <wcrtomb@plt+0x6c8c>
  40962c:	mov	w0, #0x1                   	// #1
  409630:	mov	x8, x19
  409634:	str	x8, [x21]
  409638:	cbz	x20, 409640 <wcrtomb@plt+0x6c80>
  40963c:	str	x0, [x20]
  409640:	sub	x9, x19, x24
  409644:	cmp	x8, x19
  409648:	csel	x0, xzr, x9, eq  // eq = none
  40964c:	ldp	x20, x19, [sp, #80]
  409650:	ldp	x22, x21, [sp, #64]
  409654:	ldp	x24, x23, [sp, #48]
  409658:	ldp	x26, x25, [sp, #32]
  40965c:	ldp	x29, x30, [sp, #16]
  409660:	add	sp, sp, #0x60
  409664:	ret
  409668:	str	xzr, [sp, #8]
  40966c:	b	40967c <wcrtomb@plt+0x6cbc>
  409670:	add	x24, x23, x0
  409674:	cmp	x24, x19
  409678:	b.cs	4096a4 <wcrtomb@plt+0x6ce4>  // b.hs, b.nlast
  40967c:	sub	x1, x22, x24
  409680:	add	x2, sp, #0x8
  409684:	mov	x0, x24
  409688:	mov	x23, x24
  40968c:	bl	4093e0 <wcrtomb@plt+0x6a20>
  409690:	cmn	x0, #0x2
  409694:	b.cc	409670 <wcrtomb@plt+0x6cb0>  // b.lo, b.ul, b.last
  409698:	mov	w0, #0x1                   	// #1
  40969c:	str	xzr, [sp, #8]
  4096a0:	b	409670 <wcrtomb@plt+0x6cb0>
  4096a4:	mov	x8, x24
  4096a8:	mov	x24, x23
  4096ac:	str	x8, [x21]
  4096b0:	cbnz	x20, 40963c <wcrtomb@plt+0x6c7c>
  4096b4:	b	409640 <wcrtomb@plt+0x6c80>
  4096b8:	add	x23, x19, x25
  4096bc:	sub	x1, x22, x23
  4096c0:	add	x2, sp, #0x8
  4096c4:	mov	x0, x23
  4096c8:	str	xzr, [sp, #8]
  4096cc:	neg	x26, x25
  4096d0:	bl	4093e0 <wcrtomb@plt+0x6a20>
  4096d4:	cmp	x0, x26
  4096d8:	cset	w9, hi  // hi = pmore
  4096dc:	cmn	x0, #0x2
  4096e0:	add	x8, x19, x0
  4096e4:	cset	w10, cc  // cc = lo, ul, last
  4096e8:	add	x8, x8, x25
  4096ec:	tst	w9, w10
  4096f0:	csel	x8, x8, x19, ne  // ne = any
  4096f4:	csel	x24, x23, x24, ne  // ne = any
  4096f8:	str	x8, [x21]
  4096fc:	cbnz	x20, 40963c <wcrtomb@plt+0x6c7c>
  409700:	b	409640 <wcrtomb@plt+0x6c80>
  409704:	stp	x29, x30, [sp, #-16]!
  409708:	mov	w2, #0x1                   	// #1
  40970c:	mov	x29, sp
  409710:	bl	40971c <wcrtomb@plt+0x6d5c>
  409714:	ldp	x29, x30, [sp], #16
  409718:	ret
  40971c:	sub	sp, sp, #0x60
  409720:	stp	x26, x25, [sp, #32]
  409724:	stp	x24, x23, [sp, #48]
  409728:	tst	w2, #0x1
  40972c:	mov	w23, #0x3                   	// #3
  409730:	adrp	x24, 437000 <_obstack_memory_used@@Base+0x20bcc>
  409734:	adrp	x26, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409738:	stp	x22, x21, [sp, #64]
  40973c:	stp	x20, x19, [sp, #80]
  409740:	mov	x20, x0
  409744:	mov	x19, xzr
  409748:	sub	x22, x1, x0
  40974c:	add	x24, x24, #0x65e
  409750:	csel	w25, wzr, w23, ne  // ne = any
  409754:	add	x26, x26, #0x8d8
  409758:	stp	x29, x30, [sp, #16]
  40975c:	add	x29, sp, #0x10
  409760:	str	xzr, [sp, #8]
  409764:	b	409770 <wcrtomb@plt+0x6db0>
  409768:	mov	w8, #0x3                   	// #3
  40976c:	cbnz	w8, 4097e4 <wcrtomb@plt+0x6e24>
  409770:	subs	x2, x22, x19
  409774:	b.ls	4097e4 <wcrtomb@plt+0x6e24>  // b.plast
  409778:	add	x1, x20, x19
  40977c:	ldrb	w8, [x1]
  409780:	ldrb	w9, [x24, x8]
  409784:	cbz	w9, 409794 <wcrtomb@plt+0x6dd4>
  409788:	add	x19, x19, #0x1
  40978c:	mov	w8, w25
  409790:	b	40976c <wcrtomb@plt+0x6dac>
  409794:	add	x8, x26, x8
  409798:	ldrb	w8, [x8, #3]
  40979c:	cmp	w8, #0xfe
  4097a0:	b.ne	409768 <wcrtomb@plt+0x6da8>  // b.any
  4097a4:	add	x0, sp, #0x4
  4097a8:	add	x3, sp, #0x8
  4097ac:	str	wzr, [sp, #4]
  4097b0:	bl	41609c <wcrtomb@plt+0x136dc>
  4097b4:	ldr	w8, [sp, #4]
  4097b8:	mov	x21, x0
  4097bc:	mov	w0, w8
  4097c0:	bl	409490 <wcrtomb@plt+0x6ad0>
  4097c4:	cmp	x21, #0x0
  4097c8:	cinc	x9, x21, eq  // eq = none
  4097cc:	tst	w0, #0x1
  4097d0:	csel	x9, x9, xzr, ne  // ne = any
  4097d4:	csel	w8, wzr, w23, ne  // ne = any
  4097d8:	add	x19, x9, x19
  4097dc:	tbz	w0, #0, 40976c <wcrtomb@plt+0x6dac>
  4097e0:	b	40978c <wcrtomb@plt+0x6dcc>
  4097e4:	mov	x0, x19
  4097e8:	ldp	x20, x19, [sp, #80]
  4097ec:	ldp	x22, x21, [sp, #64]
  4097f0:	ldp	x24, x23, [sp, #48]
  4097f4:	ldp	x26, x25, [sp, #32]
  4097f8:	ldp	x29, x30, [sp, #16]
  4097fc:	add	sp, sp, #0x60
  409800:	ret
  409804:	stp	x29, x30, [sp, #-16]!
  409808:	mov	w2, wzr
  40980c:	mov	x29, sp
  409810:	bl	40971c <wcrtomb@plt+0x6d5c>
  409814:	ldp	x29, x30, [sp], #16
  409818:	ret
  40981c:	sub	sp, sp, #0x30
  409820:	cmp	x0, x1
  409824:	stp	x29, x30, [sp, #16]
  409828:	stp	x20, x19, [sp, #32]
  40982c:	add	x29, sp, #0x10
  409830:	b.eq	409898 <wcrtomb@plt+0x6ed8>  // b.none
  409834:	mov	x20, x1
  409838:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40983c:	ldrb	w8, [x20, #-1]!
  409840:	ldrb	w9, [x9, #2264]
  409844:	cbz	w9, 4098a0 <wcrtomb@plt+0x6ee0>
  409848:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40984c:	ldrb	w9, [x9, #2266]
  409850:	mov	x19, x2
  409854:	cbz	w9, 409870 <wcrtomb@plt+0x6eb0>
  409858:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40985c:	add	x9, x9, #0x8d8
  409860:	add	x9, x9, x8
  409864:	ldrb	w9, [x9, #3]
  409868:	cmp	w9, #0xfe
  40986c:	b.ne	4098a0 <wcrtomb@plt+0x6ee0>  // b.any
  409870:	str	x0, [sp, #8]
  409874:	add	x0, sp, #0x8
  409878:	mov	x1, xzr
  40987c:	mov	x2, x20
  409880:	mov	x3, x19
  409884:	bl	4095a0 <wcrtomb@plt+0x6be0>
  409888:	sub	x0, x20, x0
  40988c:	mov	x1, x19
  409890:	bl	409804 <wcrtomb@plt+0x6e44>
  409894:	b	4098ac <wcrtomb@plt+0x6eec>
  409898:	mov	x0, xzr
  40989c:	b	4098ac <wcrtomb@plt+0x6eec>
  4098a0:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4098a4:	add	x9, x9, #0x65e
  4098a8:	ldrb	w0, [x9, x8]
  4098ac:	ldp	x20, x19, [sp, #32]
  4098b0:	ldp	x29, x30, [sp, #16]
  4098b4:	add	sp, sp, #0x30
  4098b8:	ret
  4098bc:	stp	x29, x30, [sp, #-16]!
  4098c0:	mov	w0, #0x1                   	// #1
  4098c4:	mov	x29, sp
  4098c8:	bl	403880 <wcrtomb@plt+0xec0>
  4098cc:	ldp	x29, x30, [sp], #16
  4098d0:	ret
  4098d4:	stp	x29, x30, [sp, #-96]!
  4098d8:	stp	x28, x27, [sp, #16]
  4098dc:	stp	x26, x25, [sp, #32]
  4098e0:	stp	x24, x23, [sp, #48]
  4098e4:	stp	x22, x21, [sp, #64]
  4098e8:	stp	x20, x19, [sp, #80]
  4098ec:	mov	x29, sp
  4098f0:	mov	x19, x3
  4098f4:	mov	x20, x2
  4098f8:	mov	x24, x1
  4098fc:	mov	x21, x0
  409900:	bl	402380 <strlen@plt>
  409904:	ldr	x25, [x24]
  409908:	cbz	x25, 409988 <wcrtomb@plt+0x6fc8>
  40990c:	mov	x22, x0
  409910:	mov	w26, wzr
  409914:	mov	x23, xzr
  409918:	add	x28, x24, #0x8
  40991c:	mov	x27, #0xffffffffffffffff    	// #-1
  409920:	mov	x24, x20
  409924:	b	40993c <wcrtomb@plt+0x6f7c>
  409928:	mov	x27, x23
  40992c:	ldr	x25, [x28, x23, lsl #3]
  409930:	add	x23, x23, #0x1
  409934:	add	x24, x24, x19
  409938:	cbz	x25, 409990 <wcrtomb@plt+0x6fd0>
  40993c:	mov	x0, x25
  409940:	mov	x1, x21
  409944:	mov	x2, x22
  409948:	bl	402560 <strncmp@plt>
  40994c:	cbnz	w0, 40992c <wcrtomb@plt+0x6f6c>
  409950:	mov	x0, x25
  409954:	bl	402380 <strlen@plt>
  409958:	cmp	x0, x22
  40995c:	b.eq	40999c <wcrtomb@plt+0x6fdc>  // b.none
  409960:	cmn	x27, #0x1
  409964:	b.eq	409928 <wcrtomb@plt+0x6f68>  // b.none
  409968:	cbz	x20, 409980 <wcrtomb@plt+0x6fc0>
  40996c:	madd	x0, x27, x19, x20
  409970:	mov	x1, x24
  409974:	mov	x2, x19
  409978:	bl	4025e0 <bcmp@plt>
  40997c:	cbz	w0, 40992c <wcrtomb@plt+0x6f6c>
  409980:	mov	w26, #0x1                   	// #1
  409984:	b	40992c <wcrtomb@plt+0x6f6c>
  409988:	mov	w26, wzr
  40998c:	mov	x27, #0xffffffffffffffff    	// #-1
  409990:	tst	w26, #0x1
  409994:	mov	x8, #0xfffffffffffffffe    	// #-2
  409998:	csel	x23, x8, x27, ne  // ne = any
  40999c:	mov	x0, x23
  4099a0:	ldp	x20, x19, [sp, #80]
  4099a4:	ldp	x22, x21, [sp, #64]
  4099a8:	ldp	x24, x23, [sp, #48]
  4099ac:	ldp	x26, x25, [sp, #32]
  4099b0:	ldp	x28, x27, [sp, #16]
  4099b4:	ldp	x29, x30, [sp], #96
  4099b8:	ret
  4099bc:	stp	x29, x30, [sp, #-48]!
  4099c0:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  4099c4:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xebcc>
  4099c8:	add	x8, x8, #0x8e1
  4099cc:	add	x9, x9, #0x8c6
  4099d0:	cmn	x2, #0x1
  4099d4:	stp	x20, x19, [sp, #32]
  4099d8:	mov	x19, x1
  4099dc:	mov	x20, x0
  4099e0:	csel	x1, x9, x8, eq  // eq = none
  4099e4:	mov	w2, #0x5                   	// #5
  4099e8:	mov	x0, xzr
  4099ec:	str	x21, [sp, #16]
  4099f0:	mov	x29, sp
  4099f4:	bl	402890 <dcgettext@plt>
  4099f8:	mov	x21, x0
  4099fc:	mov	w1, #0x8                   	// #8
  409a00:	mov	w0, wzr
  409a04:	mov	x2, x19
  409a08:	bl	412cfc <wcrtomb@plt+0x1033c>
  409a0c:	mov	x19, x0
  409a10:	mov	w0, #0x1                   	// #1
  409a14:	mov	x1, x20
  409a18:	bl	413030 <wcrtomb@plt+0x10670>
  409a1c:	mov	x4, x0
  409a20:	mov	w0, wzr
  409a24:	mov	w1, wzr
  409a28:	mov	x2, x21
  409a2c:	mov	x3, x19
  409a30:	bl	4023b0 <error@plt>
  409a34:	ldp	x20, x19, [sp, #32]
  409a38:	ldr	x21, [sp, #16]
  409a3c:	ldp	x29, x30, [sp], #48
  409a40:	ret
  409a44:	stp	x29, x30, [sp, #-96]!
  409a48:	stp	x20, x19, [sp, #80]
  409a4c:	mov	x20, x1
  409a50:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  409a54:	stp	x22, x21, [sp, #64]
  409a58:	mov	x19, x2
  409a5c:	mov	x21, x0
  409a60:	add	x1, x1, #0x8fe
  409a64:	mov	w2, #0x5                   	// #5
  409a68:	mov	x0, xzr
  409a6c:	stp	x28, x27, [sp, #16]
  409a70:	stp	x26, x25, [sp, #32]
  409a74:	stp	x24, x23, [sp, #48]
  409a78:	mov	x29, sp
  409a7c:	bl	402890 <dcgettext@plt>
  409a80:	adrp	x26, 437000 <_obstack_memory_used@@Base+0x20bcc>
  409a84:	ldr	x1, [x26, #1104]
  409a88:	bl	4028a0 <fputs_unlocked@plt>
  409a8c:	ldr	x24, [x21]
  409a90:	cbnz	x24, 409abc <wcrtomb@plt+0x70fc>
  409a94:	ldr	x1, [x26, #1104]
  409a98:	mov	w0, #0xa                   	// #10
  409a9c:	bl	402470 <putc_unlocked@plt>
  409aa0:	ldp	x20, x19, [sp, #80]
  409aa4:	ldp	x22, x21, [sp, #64]
  409aa8:	ldp	x24, x23, [sp, #48]
  409aac:	ldp	x26, x25, [sp, #32]
  409ab0:	ldp	x28, x27, [sp, #16]
  409ab4:	ldp	x29, x30, [sp], #96
  409ab8:	ret
  409abc:	add	x27, x21, #0x8
  409ac0:	adrp	x21, 425000 <_obstack_memory_used@@Base+0xebcc>
  409ac4:	adrp	x22, 425000 <_obstack_memory_used@@Base+0xebcc>
  409ac8:	mov	x23, xzr
  409acc:	mov	x28, xzr
  409ad0:	add	x21, x21, #0x913
  409ad4:	add	x22, x22, #0x91b
  409ad8:	cbz	x28, 409b10 <wcrtomb@plt+0x7150>
  409adc:	mov	x0, x23
  409ae0:	mov	x1, x20
  409ae4:	mov	x2, x19
  409ae8:	bl	4025e0 <bcmp@plt>
  409aec:	cbnz	w0, 409b10 <wcrtomb@plt+0x7150>
  409af0:	ldr	x25, [x26, #1104]
  409af4:	mov	x0, x24
  409af8:	bl	413048 <wcrtomb@plt+0x10688>
  409afc:	mov	x2, x0
  409b00:	mov	x0, x25
  409b04:	mov	x1, x22
  409b08:	bl	402980 <fprintf@plt>
  409b0c:	b	409b30 <wcrtomb@plt+0x7170>
  409b10:	ldr	x23, [x26, #1104]
  409b14:	mov	x0, x24
  409b18:	bl	413048 <wcrtomb@plt+0x10688>
  409b1c:	mov	x2, x0
  409b20:	mov	x0, x23
  409b24:	mov	x1, x21
  409b28:	bl	402980 <fprintf@plt>
  409b2c:	mov	x23, x20
  409b30:	ldr	x24, [x27, x28, lsl #3]
  409b34:	add	x28, x28, #0x1
  409b38:	add	x20, x20, x19
  409b3c:	cbz	x24, 409a94 <wcrtomb@plt+0x70d4>
  409b40:	b	409ad8 <wcrtomb@plt+0x7118>
  409b44:	stp	x29, x30, [sp, #-64]!
  409b48:	stp	x24, x23, [sp, #16]
  409b4c:	stp	x22, x21, [sp, #32]
  409b50:	mov	x21, x3
  409b54:	mov	x22, x2
  409b58:	mov	x23, x1
  409b5c:	mov	x24, x0
  409b60:	mov	x0, x1
  409b64:	mov	x1, x2
  409b68:	mov	x2, x3
  409b6c:	mov	x3, x4
  409b70:	stp	x20, x19, [sp, #48]
  409b74:	mov	x29, sp
  409b78:	mov	x19, x5
  409b7c:	mov	x20, x4
  409b80:	bl	4098d4 <wcrtomb@plt+0x6f14>
  409b84:	mov	x2, x0
  409b88:	tbz	x0, #63, 409bb0 <wcrtomb@plt+0x71f0>
  409b8c:	mov	x0, x24
  409b90:	mov	x1, x23
  409b94:	bl	4099bc <wcrtomb@plt+0x6ffc>
  409b98:	mov	x0, x22
  409b9c:	mov	x1, x21
  409ba0:	mov	x2, x20
  409ba4:	bl	409a44 <wcrtomb@plt+0x7084>
  409ba8:	blr	x19
  409bac:	mov	x2, #0xffffffffffffffff    	// #-1
  409bb0:	ldp	x20, x19, [sp, #48]
  409bb4:	ldp	x22, x21, [sp, #32]
  409bb8:	ldp	x24, x23, [sp, #16]
  409bbc:	mov	x0, x2
  409bc0:	ldp	x29, x30, [sp], #64
  409bc4:	ret
  409bc8:	stp	x29, x30, [sp, #-64]!
  409bcc:	stp	x22, x21, [sp, #32]
  409bd0:	stp	x20, x19, [sp, #48]
  409bd4:	ldr	x20, [x1]
  409bd8:	str	x23, [sp, #16]
  409bdc:	mov	x29, sp
  409be0:	cbz	x20, 409c30 <wcrtomb@plt+0x7270>
  409be4:	mov	x22, x2
  409be8:	mov	x23, x1
  409bec:	mov	x1, x2
  409bf0:	mov	x2, x3
  409bf4:	mov	x19, x3
  409bf8:	mov	x21, x0
  409bfc:	bl	4025e0 <bcmp@plt>
  409c00:	cbz	w0, 409c30 <wcrtomb@plt+0x7270>
  409c04:	add	x22, x22, x19
  409c08:	add	x23, x23, #0x8
  409c0c:	ldr	x20, [x23]
  409c10:	cbz	x20, 409c30 <wcrtomb@plt+0x7270>
  409c14:	mov	x0, x21
  409c18:	mov	x1, x22
  409c1c:	mov	x2, x19
  409c20:	bl	4025e0 <bcmp@plt>
  409c24:	add	x22, x22, x19
  409c28:	add	x23, x23, #0x8
  409c2c:	cbnz	w0, 409c0c <wcrtomb@plt+0x724c>
  409c30:	mov	x0, x20
  409c34:	ldp	x20, x19, [sp, #48]
  409c38:	ldp	x22, x21, [sp, #32]
  409c3c:	ldr	x23, [sp, #16]
  409c40:	ldp	x29, x30, [sp], #64
  409c44:	ret
  409c48:	sub	w9, w0, #0x41
  409c4c:	mov	w8, w0
  409c50:	cmp	w9, #0x39
  409c54:	mov	w0, #0x1                   	// #1
  409c58:	b.hi	409c70 <wcrtomb@plt+0x72b0>  // b.pmore
  409c5c:	mov	w10, #0x1                   	// #1
  409c60:	lsl	x9, x10, x9
  409c64:	tst	x9, #0x3ffffff03ffffff
  409c68:	b.eq	409c70 <wcrtomb@plt+0x72b0>  // b.none
  409c6c:	ret
  409c70:	sub	w8, w8, #0x30
  409c74:	cmp	w8, #0xa
  409c78:	b.cc	409c6c <wcrtomb@plt+0x72ac>  // b.lo, b.ul, b.last
  409c7c:	mov	w0, wzr
  409c80:	ret
  409c84:	sub	w8, w0, #0x41
  409c88:	cmp	w8, #0x39
  409c8c:	b.hi	409ca0 <wcrtomb@plt+0x72e0>  // b.pmore
  409c90:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  409c94:	lsr	x8, x9, x8
  409c98:	and	w0, w8, #0x1
  409c9c:	ret
  409ca0:	mov	w0, wzr
  409ca4:	ret
  409ca8:	cmp	w0, #0x80
  409cac:	cset	w0, cc  // cc = lo, ul, last
  409cb0:	ret
  409cb4:	cmp	w0, #0x20
  409cb8:	cset	w8, eq  // eq = none
  409cbc:	cmp	w0, #0x9
  409cc0:	cset	w9, eq  // eq = none
  409cc4:	orr	w0, w8, w9
  409cc8:	ret
  409ccc:	mov	w8, w0
  409cd0:	cmp	w0, #0x20
  409cd4:	mov	w0, #0x1                   	// #1
  409cd8:	b.cs	409ce0 <wcrtomb@plt+0x7320>  // b.hs, b.nlast
  409cdc:	ret
  409ce0:	cmp	w8, #0x7f
  409ce4:	b.eq	409cdc <wcrtomb@plt+0x731c>  // b.none
  409ce8:	mov	w0, wzr
  409cec:	ret
  409cf0:	sub	w8, w0, #0x30
  409cf4:	cmp	w8, #0xa
  409cf8:	cset	w0, cc  // cc = lo, ul, last
  409cfc:	ret
  409d00:	sub	w8, w0, #0x21
  409d04:	cmp	w8, #0x5e
  409d08:	cset	w0, cc  // cc = lo, ul, last
  409d0c:	ret
  409d10:	sub	w8, w0, #0x61
  409d14:	cmp	w8, #0x1a
  409d18:	cset	w0, cc  // cc = lo, ul, last
  409d1c:	ret
  409d20:	sub	w8, w0, #0x20
  409d24:	cmp	w8, #0x5f
  409d28:	cset	w0, cc  // cc = lo, ul, last
  409d2c:	ret
  409d30:	sub	w8, w0, #0x21
  409d34:	cmp	w8, #0x5d
  409d38:	b.hi	409d5c <wcrtomb@plt+0x739c>  // b.pmore
  409d3c:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xebcc>
  409d40:	add	x9, x9, #0x920
  409d44:	adr	x10, 409d58 <wcrtomb@plt+0x7398>
  409d48:	ldrb	w11, [x9, x8]
  409d4c:	add	x10, x10, x11, lsl #2
  409d50:	mov	w0, #0x1                   	// #1
  409d54:	br	x10
  409d58:	ret
  409d5c:	mov	w0, wzr
  409d60:	ret
  409d64:	sub	w8, w0, #0x9
  409d68:	cmp	w8, #0x17
  409d6c:	b.hi	409d84 <wcrtomb@plt+0x73c4>  // b.pmore
  409d70:	mov	w9, #0x1f                  	// #31
  409d74:	movk	w9, #0x80, lsl #16
  409d78:	lsr	w8, w9, w8
  409d7c:	and	w0, w8, #0x1
  409d80:	ret
  409d84:	mov	w0, wzr
  409d88:	ret
  409d8c:	sub	w8, w0, #0x41
  409d90:	cmp	w8, #0x1a
  409d94:	cset	w0, cc  // cc = lo, ul, last
  409d98:	ret
  409d9c:	sub	w8, w0, #0x30
  409da0:	cmp	w8, #0x36
  409da4:	b.hi	409dbc <wcrtomb@plt+0x73fc>  // b.pmore
  409da8:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  409dac:	movk	x9, #0x3ff
  409db0:	lsr	x8, x9, x8
  409db4:	and	w0, w8, #0x1
  409db8:	ret
  409dbc:	mov	w0, wzr
  409dc0:	ret
  409dc4:	sub	w8, w0, #0x41
  409dc8:	add	w9, w0, #0x20
  409dcc:	cmp	w8, #0x1a
  409dd0:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  409dd4:	ret
  409dd8:	sub	w8, w0, #0x61
  409ddc:	sub	w9, w0, #0x20
  409de0:	cmp	w8, #0x1a
  409de4:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  409de8:	ret
  409dec:	sub	sp, sp, #0xd0
  409df0:	stp	x29, x30, [sp, #176]
  409df4:	add	x29, sp, #0xb0
  409df8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  409dfc:	str	x19, [sp, #192]
  409e00:	mov	x19, x0
  409e04:	add	x8, x8, #0x760
  409e08:	mov	w9, #0x4000                	// #16384
  409e0c:	sub	x0, x29, #0x18
  409e10:	mov	x1, xzr
  409e14:	stur	wzr, [x29, #-16]
  409e18:	stur	x8, [x29, #-24]
  409e1c:	stur	x9, [x29, #-8]
  409e20:	bl	402330 <sigaltstack@plt>
  409e24:	cbnz	w0, 409eb8 <wcrtomb@plt+0x74f8>
  409e28:	adrp	x8, 409000 <wcrtomb@plt+0x6640>
  409e2c:	add	x8, x8, #0xec8
  409e30:	cmp	x19, #0x0
  409e34:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  409e38:	csel	x8, x8, x19, eq  // eq = none
  409e3c:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409e40:	add	x1, x1, #0x97e
  409e44:	mov	w2, #0x5                   	// #5
  409e48:	mov	x0, xzr
  409e4c:	str	x8, [x9, #1888]
  409e50:	bl	402890 <dcgettext@plt>
  409e54:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409e58:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  409e5c:	str	x0, [x8, #1896]
  409e60:	add	x1, x1, #0x98c
  409e64:	mov	w2, #0x5                   	// #5
  409e68:	mov	x0, xzr
  409e6c:	bl	402890 <dcgettext@plt>
  409e70:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409e74:	str	x0, [x8, #1904]
  409e78:	bl	410728 <wcrtomb@plt+0xdd68>
  409e7c:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409e80:	mov	x9, sp
  409e84:	str	x0, [x8, #1912]
  409e88:	add	x0, x9, #0x8
  409e8c:	bl	402550 <sigemptyset@plt>
  409e90:	mov	w8, #0x4                   	// #4
  409e94:	adrp	x9, 409000 <wcrtomb@plt+0x6640>
  409e98:	movk	w8, #0xc800, lsl #16
  409e9c:	add	x9, x9, #0xecc
  409ea0:	mov	x1, sp
  409ea4:	mov	w0, #0xb                   	// #11
  409ea8:	mov	x2, xzr
  409eac:	str	w8, [sp, #136]
  409eb0:	str	x9, [sp]
  409eb4:	bl	402660 <sigaction@plt>
  409eb8:	ldr	x19, [sp, #192]
  409ebc:	ldp	x29, x30, [sp, #176]
  409ec0:	add	sp, sp, #0xd0
  409ec4:	ret
  409ec8:	ret
  409ecc:	stp	x29, x30, [sp, #-16]!
  409ed0:	mov	x29, sp
  409ed4:	bl	409ed8 <wcrtomb@plt+0x7518>
  409ed8:	stp	x29, x30, [sp, #-32]!
  409edc:	stp	x20, x19, [sp, #16]
  409ee0:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409ee4:	ldr	x8, [x8, #1888]
  409ee8:	mov	w0, wzr
  409eec:	mov	x29, sp
  409ef0:	blr	x8
  409ef4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409ef8:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409efc:	ldr	x19, [x8, #1904]
  409f00:	ldr	x20, [x9, #1912]
  409f04:	ldr	x0, [x9, #1912]
  409f08:	bl	402380 <strlen@plt>
  409f0c:	mov	x2, x0
  409f10:	mov	w0, #0x2                   	// #2
  409f14:	mov	x1, x20
  409f18:	bl	4026a0 <write@plt>
  409f1c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  409f20:	add	x1, x1, #0x99b
  409f24:	mov	w0, #0x2                   	// #2
  409f28:	mov	w2, #0x2                   	// #2
  409f2c:	bl	4026a0 <write@plt>
  409f30:	mov	x0, x19
  409f34:	bl	402380 <strlen@plt>
  409f38:	mov	x2, x0
  409f3c:	mov	w0, #0x2                   	// #2
  409f40:	mov	x1, x19
  409f44:	bl	4026a0 <write@plt>
  409f48:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  409f4c:	add	x1, x1, #0x2cc
  409f50:	mov	w0, #0x2                   	// #2
  409f54:	mov	w2, #0x1                   	// #1
  409f58:	bl	4026a0 <write@plt>
  409f5c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  409f60:	ldr	w0, [x8, #992]
  409f64:	bl	402360 <_exit@plt>
  409f68:	stp	x29, x30, [sp, #-48]!
  409f6c:	cmp	x0, x1
  409f70:	str	x21, [sp, #16]
  409f74:	stp	x20, x19, [sp, #32]
  409f78:	mov	x29, sp
  409f7c:	b.eq	409fc0 <wcrtomb@plt+0x7600>  // b.none
  409f80:	mov	x19, x1
  409f84:	mov	x20, x0
  409f88:	ldrb	w0, [x20]
  409f8c:	bl	409dc4 <wcrtomb@plt+0x7404>
  409f90:	ldrb	w8, [x19]
  409f94:	mov	w21, w0
  409f98:	mov	w0, w8
  409f9c:	bl	409dc4 <wcrtomb@plt+0x7404>
  409fa0:	ands	w8, w21, #0xff
  409fa4:	b.eq	409fb8 <wcrtomb@plt+0x75f8>  // b.none
  409fa8:	add	x20, x20, #0x1
  409fac:	cmp	w8, w0, uxtb
  409fb0:	add	x19, x19, #0x1
  409fb4:	b.eq	409f88 <wcrtomb@plt+0x75c8>  // b.none
  409fb8:	sub	w0, w8, w0, uxtb
  409fbc:	b	409fc4 <wcrtomb@plt+0x7604>
  409fc0:	mov	w0, wzr
  409fc4:	ldp	x20, x19, [sp, #32]
  409fc8:	ldr	x21, [sp, #16]
  409fcc:	ldp	x29, x30, [sp], #48
  409fd0:	ret
  409fd4:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409fd8:	str	x0, [x8, #1920]
  409fdc:	ret
  409fe0:	and	w8, w0, #0x1
  409fe4:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  409fe8:	strb	w8, [x9, #1928]
  409fec:	ret
  409ff0:	stp	x29, x30, [sp, #-48]!
  409ff4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  409ff8:	ldr	x0, [x8, #1128]
  409ffc:	str	x21, [sp, #16]
  40a000:	stp	x20, x19, [sp, #32]
  40a004:	mov	x29, sp
  40a008:	bl	422ed0 <_obstack_memory_used@@Base+0xca9c>
  40a00c:	cbz	w0, 40a02c <wcrtomb@plt+0x766c>
  40a010:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40a014:	ldrb	w8, [x8, #1928]
  40a018:	cbz	w8, 40a04c <wcrtomb@plt+0x768c>
  40a01c:	bl	402930 <__errno_location@plt>
  40a020:	ldr	w8, [x0]
  40a024:	cmp	w8, #0x20
  40a028:	b.ne	40a04c <wcrtomb@plt+0x768c>  // b.any
  40a02c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40a030:	ldr	x0, [x8, #1104]
  40a034:	bl	422ed0 <_obstack_memory_used@@Base+0xca9c>
  40a038:	cbnz	w0, 40a0b8 <wcrtomb@plt+0x76f8>
  40a03c:	ldp	x20, x19, [sp, #32]
  40a040:	ldr	x21, [sp, #16]
  40a044:	ldp	x29, x30, [sp], #48
  40a048:	ret
  40a04c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a050:	add	x1, x1, #0x88f
  40a054:	mov	w2, #0x5                   	// #5
  40a058:	mov	x0, xzr
  40a05c:	bl	402890 <dcgettext@plt>
  40a060:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40a064:	ldr	x21, [x8, #1920]
  40a068:	mov	x19, x0
  40a06c:	bl	402930 <__errno_location@plt>
  40a070:	ldr	w20, [x0]
  40a074:	cbnz	x21, 40a094 <wcrtomb@plt+0x76d4>
  40a078:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a07c:	add	x2, x2, #0x91d
  40a080:	mov	w0, wzr
  40a084:	mov	w1, w20
  40a088:	mov	x3, x19
  40a08c:	bl	4023b0 <error@plt>
  40a090:	b	40a0b8 <wcrtomb@plt+0x76f8>
  40a094:	mov	x0, x21
  40a098:	bl	412e98 <wcrtomb@plt+0x104d8>
  40a09c:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a0a0:	mov	x3, x0
  40a0a4:	add	x2, x2, #0x846
  40a0a8:	mov	w0, wzr
  40a0ac:	mov	w1, w20
  40a0b0:	mov	x4, x19
  40a0b4:	bl	4023b0 <error@plt>
  40a0b8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  40a0bc:	ldr	w0, [x8, #992]
  40a0c0:	bl	402360 <_exit@plt>
  40a0c4:	stp	x29, x30, [sp, #-32]!
  40a0c8:	ldrb	w8, [x2, #456]
  40a0cc:	mov	x9, #0xffffffffffffffff    	// #-1
  40a0d0:	str	x9, [x2, #48]
  40a0d4:	mov	w9, #0x1                   	// #1
  40a0d8:	str	x19, [sp, #16]
  40a0dc:	mov	x29, sp
  40a0e0:	stp	x0, x1, [x2, #32]
  40a0e4:	strb	w9, [x2, #120]
  40a0e8:	cbz	w8, 40a170 <wcrtomb@plt+0x77b0>
  40a0ec:	ldr	x8, [x2, #184]
  40a0f0:	mov	x19, x2
  40a0f4:	cbnz	x8, 40a104 <wcrtomb@plt+0x7744>
  40a0f8:	mov	w1, #0x10b                 	// #267
  40a0fc:	mov	x0, x19
  40a100:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a104:	mov	x0, x19
  40a108:	bl	40a258 <wcrtomb@plt+0x7898>
  40a10c:	ldr	x8, [x19, #168]
  40a110:	stp	x0, x8, [x19, #128]
  40a114:	mov	x0, x19
  40a118:	bl	40aa94 <wcrtomb@plt+0x80d4>
  40a11c:	ldr	x8, [x19, #128]
  40a120:	cmn	x8, #0x1
  40a124:	b.ne	40a17c <wcrtomb@plt+0x77bc>  // b.any
  40a128:	ldr	x8, [x19, #184]
  40a12c:	mov	x0, x19
  40a130:	mvn	x1, x8
  40a134:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a138:	mov	w1, #0x105                 	// #261
  40a13c:	mov	x0, x19
  40a140:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a144:	ldr	x8, [x19, #184]
  40a148:	cbz	x8, 40a158 <wcrtomb@plt+0x7798>
  40a14c:	mov	w1, #0x106                 	// #262
  40a150:	mov	x0, x19
  40a154:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a158:	ldr	x8, [x19, #184]
  40a15c:	add	x8, x8, #0x1
  40a160:	str	x8, [x19, #184]
  40a164:	ldr	x19, [sp, #16]
  40a168:	ldp	x29, x30, [sp], #32
  40a16c:	ret
  40a170:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a174:	add	x1, x1, #0xd40
  40a178:	b	40a184 <wcrtomb@plt+0x77c4>
  40a17c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a180:	add	x1, x1, #0xd54
  40a184:	mov	w2, #0x5                   	// #5
  40a188:	mov	x0, xzr
  40a18c:	bl	402890 <dcgettext@plt>
  40a190:	bl	402adc <wcrtomb@plt+0x11c>
  40a194:	stp	x29, x30, [sp, #-48]!
  40a198:	stp	x20, x19, [sp, #32]
  40a19c:	cmp	x1, #0x113
  40a1a0:	mov	x19, x0
  40a1a4:	str	x21, [sp, #16]
  40a1a8:	mov	x29, sp
  40a1ac:	b.ne	40a208 <wcrtomb@plt+0x7848>  // b.any
  40a1b0:	ldrb	w8, [x19, #1048]
  40a1b4:	cbz	w8, 40a208 <wcrtomb@plt+0x7848>
  40a1b8:	ldr	x8, [x19, #104]
  40a1bc:	cmp	x8, #0x1
  40a1c0:	b.lt	40a218 <wcrtomb@plt+0x7858>  // b.tstop
  40a1c4:	mov	x21, xzr
  40a1c8:	mov	w20, wzr
  40a1cc:	b	40a1e4 <wcrtomb@plt+0x7824>
  40a1d0:	ldr	x8, [x19, #104]
  40a1d4:	add	x21, x21, #0x1
  40a1d8:	mov	w20, #0x1                   	// #1
  40a1dc:	cmp	x21, x8
  40a1e0:	b.ge	40a21c <wcrtomb@plt+0x785c>  // b.tcont
  40a1e4:	ldr	x8, [x19, #96]
  40a1e8:	mov	x0, x19
  40a1ec:	ldr	w1, [x8, x21, lsl #2]
  40a1f0:	bl	40c33c <wcrtomb@plt+0x997c>
  40a1f4:	tbz	w20, #0, 40a1d0 <wcrtomb@plt+0x7810>
  40a1f8:	mov	w1, #0x106                 	// #262
  40a1fc:	mov	x0, x19
  40a200:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a204:	b	40a1d0 <wcrtomb@plt+0x7810>
  40a208:	mov	w2, #0x3                   	// #3
  40a20c:	mov	x0, x19
  40a210:	bl	40c3f4 <wcrtomb@plt+0x9a34>
  40a214:	b	40a248 <wcrtomb@plt+0x7888>
  40a218:	mov	w20, wzr
  40a21c:	ldr	x8, [x19, #80]
  40a220:	str	xzr, [x19, #104]
  40a224:	cmn	x8, #0x1
  40a228:	b.eq	40a248 <wcrtomb@plt+0x7888>  // b.none
  40a22c:	add	x1, x8, #0x114
  40a230:	mov	x0, x19
  40a234:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a238:	cbz	w20, 40a248 <wcrtomb@plt+0x7888>
  40a23c:	mov	w1, #0x106                 	// #262
  40a240:	mov	x0, x19
  40a244:	bl	40a194 <wcrtomb@plt+0x77d4>
  40a248:	ldp	x20, x19, [sp, #32]
  40a24c:	ldr	x21, [sp, #16]
  40a250:	ldp	x29, x30, [sp], #48
  40a254:	ret
  40a258:	sub	sp, sp, #0xa0
  40a25c:	stp	x26, x25, [sp, #96]
  40a260:	adrp	x26, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a264:	stp	x28, x27, [sp, #80]
  40a268:	stp	x24, x23, [sp, #112]
  40a26c:	stp	x22, x21, [sp, #128]
  40a270:	stp	x20, x19, [sp, #144]
  40a274:	mov	x19, x0
  40a278:	mov	w24, wzr
  40a27c:	mov	w8, wzr
  40a280:	add	x28, x0, #0x51c
  40a284:	mov	w23, #0x109                 	// #265
  40a288:	add	x26, x26, #0x9a0
  40a28c:	mov	w25, #0x106                 	// #262
  40a290:	mov	w22, #0x1                   	// #1
  40a294:	stp	x29, x30, [sp, #64]
  40a298:	add	x29, sp, #0x40
  40a29c:	ldr	x9, [x19, #40]
  40a2a0:	cbz	x9, 40aa1c <wcrtomb@plt+0x805c>
  40a2a4:	mov	x0, x19
  40a2a8:	mov	w27, w8
  40a2ac:	bl	40c658 <wcrtomb@plt+0x9c98>
  40a2b0:	sub	w8, w0, #0xa
  40a2b4:	mov	w20, w0
  40a2b8:	cmp	w8, #0x72
  40a2bc:	b.hi	40a6e8 <wcrtomb@plt+0x7d28>  // b.pmore
  40a2c0:	adr	x9, 40a2d0 <wcrtomb@plt+0x7910>
  40a2c4:	ldrh	w10, [x26, x8, lsl #1]
  40a2c8:	add	x9, x9, x10, lsl #2
  40a2cc:	br	x9
  40a2d0:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a2d4:	ldrb	w8, [x19, #449]
  40a2d8:	tbnz	w8, #6, 40a6e8 <wcrtomb@plt+0x7d28>
  40a2dc:	mov	w8, #0x112                 	// #274
  40a2e0:	strb	wzr, [x19, #120]
  40a2e4:	str	x8, [x19, #48]
  40a2e8:	mov	w8, #0x1                   	// #1
  40a2ec:	mov	w21, #0x112                 	// #274
  40a2f0:	b	40a750 <wcrtomb@plt+0x7d90>
  40a2f4:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a2f8:	ldrb	w8, [x19, #450]
  40a2fc:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a300:	ldrb	w8, [x19, #1048]
  40a304:	cbz	w8, 40a794 <wcrtomb@plt+0x7dd4>
  40a308:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a30c:	cmp	w20, #0x73
  40a310:	add	x8, x8, #0xe11
  40a314:	b	40a338 <wcrtomb@plt+0x7978>
  40a318:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a31c:	ldrb	w8, [x19, #450]
  40a320:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a324:	ldrb	w8, [x19, #1048]
  40a328:	cbz	w8, 40a808 <wcrtomb@plt+0x7e48>
  40a32c:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  40a330:	cmp	w20, #0x77
  40a334:	add	x8, x8, #0xe1d
  40a338:	cinc	x2, x8, eq  // eq = none
  40a33c:	add	x1, sp, #0x20
  40a340:	mov	x0, x19
  40a344:	bl	40c7c8 <wcrtomb@plt+0x9e08>
  40a348:	mov	x0, x19
  40a34c:	bl	40c804 <wcrtomb@plt+0x9e44>
  40a350:	str	x0, [x19, #48]
  40a354:	add	x1, sp, #0x20
  40a358:	mov	x0, x19
  40a35c:	bl	40cda0 <wcrtomb@plt+0xa3e0>
  40a360:	ldr	x21, [x19, #48]
  40a364:	strb	wzr, [x19, #120]
  40a368:	b	40a74c <wcrtomb@plt+0x7d8c>
  40a36c:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a370:	ldrb	w8, [x19, #450]
  40a374:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a378:	mov	w8, #0x10f                 	// #271
  40a37c:	str	x8, [x19, #48]
  40a380:	mov	w8, #0x1                   	// #1
  40a384:	mov	w21, #0x10f                 	// #271
  40a388:	b	40a750 <wcrtomb@plt+0x7d90>
  40a38c:	tbnz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a390:	mov	x0, x19
  40a394:	strb	wzr, [x19, #120]
  40a398:	bl	40c804 <wcrtomb@plt+0x9e44>
  40a39c:	mov	x21, x0
  40a3a0:	str	x0, [x19, #48]
  40a3a4:	b	40a74c <wcrtomb@plt+0x7d8c>
  40a3a8:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a3ac:	ldrb	w8, [x19, #450]
  40a3b0:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a3b4:	b	40a780 <wcrtomb@plt+0x7dc0>
  40a3b8:	ldr	x8, [x19, #448]
  40a3bc:	tbnz	w8, #10, 40a6e8 <wcrtomb@plt+0x7d28>
  40a3c0:	ubfx	x9, x8, #1, #1
  40a3c4:	eor	w9, w24, w9
  40a3c8:	tbnz	w9, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a3cc:	tbnz	w8, #4, 40a3d8 <wcrtomb@plt+0x7a18>
  40a3d0:	ldrb	w8, [x19, #120]
  40a3d4:	cbnz	w8, 40a6e8 <wcrtomb@plt+0x7d28>
  40a3d8:	mov	w8, #0x101                 	// #257
  40a3dc:	str	x8, [x19, #48]
  40a3e0:	mov	w8, #0x1                   	// #1
  40a3e4:	mov	w21, #0x101                 	// #257
  40a3e8:	b	40a750 <wcrtomb@plt+0x7d90>
  40a3ec:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a3f0:	ldrb	w8, [x19, #450]
  40a3f4:	tbz	w8, #3, 40a514 <wcrtomb@plt+0x7b54>
  40a3f8:	b	40a6e8 <wcrtomb@plt+0x7d28>
  40a3fc:	tbnz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a400:	ldrb	w8, [x19, #448]
  40a404:	tbnz	w8, #4, 40a410 <wcrtomb@plt+0x7a50>
  40a408:	ldrb	w8, [x19, #120]
  40a40c:	cbnz	w8, 40a6e8 <wcrtomb@plt+0x7d28>
  40a410:	mov	w8, #0x102                 	// #258
  40a414:	str	x8, [x19, #48]
  40a418:	mov	w8, #0x1                   	// #1
  40a41c:	mov	w21, #0x102                 	// #258
  40a420:	b	40a750 <wcrtomb@plt+0x7d90>
  40a424:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a428:	ldrb	w8, [x19, #450]
  40a42c:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a430:	mov	w8, #0x110                 	// #272
  40a434:	str	x8, [x19, #48]
  40a438:	mov	w8, #0x1                   	// #1
  40a43c:	mov	w21, #0x110                 	// #272
  40a440:	b	40a750 <wcrtomb@plt+0x7d90>
  40a444:	ldr	x8, [x19, #448]
  40a448:	tbnz	w8, #10, 40a6e8 <wcrtomb@plt+0x7d28>
  40a44c:	and	w9, w24, #0x1
  40a450:	bic	w8, w22, w8, lsr #15
  40a454:	cmp	w8, w9
  40a458:	b.eq	40a478 <wcrtomb@plt+0x7ab8>  // b.none
  40a45c:	b	40a6e8 <wcrtomb@plt+0x7d28>
  40a460:	ldr	x8, [x19, #448]
  40a464:	and	x8, x8, #0xc00
  40a468:	cmp	x8, #0x800
  40a46c:	cset	w8, ne  // ne = any
  40a470:	orr	w8, w24, w8
  40a474:	tbnz	w8, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a478:	mov	w8, #0x1                   	// #1
  40a47c:	str	x25, [x19, #48]
  40a480:	strb	w8, [x19, #120]
  40a484:	mov	w21, #0x106                 	// #262
  40a488:	b	40a750 <wcrtomb@plt+0x7d90>
  40a48c:	tbnz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a490:	ldr	x8, [x19, #448]
  40a494:	tbnz	w8, #3, 40a514 <wcrtomb@plt+0x7b54>
  40a498:	ldr	x9, [x19, #40]
  40a49c:	cbz	x9, 40a514 <wcrtomb@plt+0x7b54>
  40a4a0:	bic	w10, w22, w8, lsr #13
  40a4a4:	cmp	x9, x10
  40a4a8:	b.le	40a4cc <wcrtomb@plt+0x7b0c>
  40a4ac:	ldr	x11, [x19, #32]
  40a4b0:	ldrb	w12, [x11]
  40a4b4:	cmp	w12, #0x5c
  40a4b8:	cset	w12, eq  // eq = none
  40a4bc:	and	x10, x10, x12
  40a4c0:	ldrb	w10, [x11, x10]
  40a4c4:	cmp	w10, #0x29
  40a4c8:	b.eq	40a514 <wcrtomb@plt+0x7b54>  // b.none
  40a4cc:	bic	w10, w22, w8, lsr #15
  40a4d0:	cmp	x9, x10
  40a4d4:	b.le	40a4f8 <wcrtomb@plt+0x7b38>
  40a4d8:	ldr	x11, [x19, #32]
  40a4dc:	ldrb	w12, [x11]
  40a4e0:	cmp	w12, #0x5c
  40a4e4:	cset	w12, eq  // eq = none
  40a4e8:	and	x10, x10, x12
  40a4ec:	ldrb	w10, [x11, x10]
  40a4f0:	cmp	w10, #0x7c
  40a4f4:	b.eq	40a514 <wcrtomb@plt+0x7b54>  // b.none
  40a4f8:	tbz	w8, #11, 40a6e8 <wcrtomb@plt+0x7d28>
  40a4fc:	cmp	x9, #0x1
  40a500:	b.lt	40a6e8 <wcrtomb@plt+0x7d28>  // b.tstop
  40a504:	ldr	x8, [x19, #32]
  40a508:	ldrb	w8, [x8]
  40a50c:	cmp	w8, #0xa
  40a510:	b.ne	40a6e8 <wcrtomb@plt+0x7d28>  // b.any
  40a514:	mov	w8, #0x10d                 	// #269
  40a518:	str	x8, [x19, #48]
  40a51c:	mov	w8, #0x1                   	// #1
  40a520:	mov	w21, #0x10d                 	// #269
  40a524:	b	40a750 <wcrtomb@plt+0x7d90>
  40a528:	ldr	x8, [x19, #448]
  40a52c:	tbnz	w8, #10, 40a6e8 <wcrtomb@plt+0x7d28>
  40a530:	ubfx	x9, x8, #1, #1
  40a534:	eor	w9, w24, w9
  40a538:	tbnz	w9, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a53c:	tbnz	w8, #4, 40a548 <wcrtomb@plt+0x7b88>
  40a540:	ldrb	w8, [x19, #120]
  40a544:	cbnz	w8, 40a6e8 <wcrtomb@plt+0x7d28>
  40a548:	mov	w8, #0x103                 	// #259
  40a54c:	str	x8, [x19, #48]
  40a550:	mov	w8, #0x1                   	// #1
  40a554:	mov	w21, #0x103                 	// #259
  40a558:	b	40a750 <wcrtomb@plt+0x7d90>
  40a55c:	tbnz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a560:	ldr	x8, [x19, #24]
  40a564:	tbz	x8, #63, 40a8c4 <wcrtomb@plt+0x7f04>
  40a568:	add	x0, sp, #0x20
  40a56c:	bl	40c6d0 <wcrtomb@plt+0x9d10>
  40a570:	ldrb	w8, [x19, #448]
  40a574:	tbz	w8, #6, 40a85c <wcrtomb@plt+0x7e9c>
  40a578:	ldrb	w8, [x19, #448]
  40a57c:	tbnz	w8, #7, 40a870 <wcrtomb@plt+0x7eb0>
  40a580:	ldrb	w8, [x19, #1048]
  40a584:	cbnz	w8, 40a884 <wcrtomb@plt+0x7ec4>
  40a588:	b	40a8b4 <wcrtomb@plt+0x7ef4>
  40a58c:	ldr	w8, [x19, #448]
  40a590:	and	w9, w24, #0x1
  40a594:	bic	w8, w22, w8, lsr #13
  40a598:	cmp	w8, w9
  40a59c:	b.ne	40a6e8 <wcrtomb@plt+0x7d28>  // b.any
  40a5a0:	ldr	x9, [x19, #56]
  40a5a4:	mov	w8, #0x1                   	// #1
  40a5a8:	mov	w10, #0x107                 	// #263
  40a5ac:	strb	w8, [x19, #120]
  40a5b0:	add	x9, x9, #0x1
  40a5b4:	stp	x10, x9, [x19, #48]
  40a5b8:	mov	w21, #0x107                 	// #263
  40a5bc:	b	40a750 <wcrtomb@plt+0x7d90>
  40a5c0:	ldr	x10, [x19, #448]
  40a5c4:	tbz	w10, #9, 40a6e8 <wcrtomb@plt+0x7d28>
  40a5c8:	and	w8, w24, #0x1
  40a5cc:	bic	w9, w22, w10, lsr #12
  40a5d0:	cmp	w9, w8
  40a5d4:	b.ne	40a6e8 <wcrtomb@plt+0x7d28>  // b.any
  40a5d8:	tbnz	w10, #4, 40a5e4 <wcrtomb@plt+0x7c24>
  40a5dc:	ldrb	w8, [x19, #120]
  40a5e0:	cbnz	w8, 40a6e8 <wcrtomb@plt+0x7d28>
  40a5e4:	ldp	x23, x25, [x19, #32]
  40a5e8:	mov	x8, #0xffffffffffffffff    	// #-1
  40a5ec:	str	x8, [x19, #64]
  40a5f0:	stp	x10, x23, [sp, #8]
  40a5f4:	str	x25, [sp, #24]
  40a5f8:	cbnz	x25, 40a62c <wcrtomb@plt+0x7c6c>
  40a5fc:	b	40a970 <wcrtomb@plt+0x7fb0>
  40a600:	mov	w9, #0xa                   	// #10
  40a604:	madd	w8, w8, w9, w22
  40a608:	mov	w10, #0x8030                	// #32816
  40a60c:	sub	w9, w8, #0x30
  40a610:	cmp	w8, w10
  40a614:	mov	w8, #0x8000                	// #32768
  40a618:	csel	w8, w8, w9, gt
  40a61c:	subs	x25, x25, #0x1
  40a620:	add	x23, x23, #0x1
  40a624:	str	w8, [x19, #64]
  40a628:	b.eq	40a970 <wcrtomb@plt+0x7fb0>  // b.none
  40a62c:	ldrb	w22, [x23]
  40a630:	mov	w0, w22
  40a634:	bl	40c6bc <wcrtomb@plt+0x9cfc>
  40a638:	tbz	w0, #0, 40a8e4 <wcrtomb@plt+0x7f24>
  40a63c:	ldr	w8, [x19, #64]
  40a640:	tbz	w8, #31, 40a600 <wcrtomb@plt+0x7c40>
  40a644:	sub	w8, w22, #0x30
  40a648:	b	40a61c <wcrtomb@plt+0x7c5c>
  40a64c:	ldr	x8, [x19, #448]
  40a650:	and	w9, w24, #0x1
  40a654:	bic	w10, w22, w8, lsr #13
  40a658:	cmp	w10, w9
  40a65c:	b.ne	40a6e8 <wcrtomb@plt+0x7d28>  // b.any
  40a660:	ldr	x9, [x19, #56]
  40a664:	tbz	w8, #17, 40a66c <wcrtomb@plt+0x7cac>
  40a668:	cbz	x9, 40a6e8 <wcrtomb@plt+0x7d28>
  40a66c:	sub	x9, x9, #0x1
  40a670:	str	x9, [x19, #56]
  40a674:	mov	w9, #0x108                 	// #264
  40a678:	strb	wzr, [x19, #120]
  40a67c:	mov	w8, #0x1                   	// #1
  40a680:	str	x9, [x19, #48]
  40a684:	mov	w21, #0x108                 	// #264
  40a688:	b	40a750 <wcrtomb@plt+0x7d90>
  40a68c:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a690:	ldrb	w8, [x19, #450]
  40a694:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a698:	mov	w8, #0x10e                 	// #270
  40a69c:	str	x8, [x19, #48]
  40a6a0:	mov	w8, #0x1                   	// #1
  40a6a4:	mov	w21, #0x10e                 	// #270
  40a6a8:	b	40a750 <wcrtomb@plt+0x7d90>
  40a6ac:	tbz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a6b0:	ldrb	w8, [x19, #450]
  40a6b4:	tbnz	w8, #3, 40a6e8 <wcrtomb@plt+0x7d28>
  40a6b8:	mov	w8, #0x111                 	// #273
  40a6bc:	str	x8, [x19, #48]
  40a6c0:	mov	w8, #0x1                   	// #1
  40a6c4:	mov	w21, #0x111                 	// #273
  40a6c8:	b	40a750 <wcrtomb@plt+0x7d90>
  40a6cc:	tbnz	w24, #0, 40a6e8 <wcrtomb@plt+0x7d28>
  40a6d0:	ldr	x8, [x19, #40]
  40a6d4:	cbz	x8, 40aa64 <wcrtomb@plt+0x80a4>
  40a6d8:	mov	w8, wzr
  40a6dc:	mov	w24, #0x1                   	// #1
  40a6e0:	b	40a750 <wcrtomb@plt+0x7d90>
  40a6e4:	tbz	w24, #0, 40a760 <wcrtomb@plt+0x7da0>
  40a6e8:	ldrb	w8, [x19, #1048]
  40a6ec:	strb	wzr, [x19, #120]
  40a6f0:	cbz	w8, 40a704 <wcrtomb@plt+0x7d44>
  40a6f4:	str	x23, [x19, #48]
  40a6f8:	mov	w8, #0x1                   	// #1
  40a6fc:	mov	w21, #0x109                 	// #265
  40a700:	b	40a750 <wcrtomb@plt+0x7d90>
  40a704:	ldrb	w8, [x19, #457]
  40a708:	cbz	w8, 40a71c <wcrtomb@plt+0x7d5c>
  40a70c:	bl	402760 <__ctype_b_loc@plt>
  40a710:	ldr	x8, [x0]
  40a714:	ldrh	w8, [x8, w20, sxtw #1]
  40a718:	tbnz	w8, #10, 40a724 <wcrtomb@plt+0x7d64>
  40a71c:	sxtw	x21, w20
  40a720:	b	40a748 <wcrtomb@plt+0x7d88>
  40a724:	add	x0, sp, #0x20
  40a728:	bl	40c79c <wcrtomb@plt+0x9ddc>
  40a72c:	add	x1, sp, #0x20
  40a730:	mov	w0, w20
  40a734:	bl	40cdb4 <wcrtomb@plt+0xa3f4>
  40a738:	add	x1, sp, #0x20
  40a73c:	mov	x0, x19
  40a740:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40a744:	add	x21, x0, #0x114
  40a748:	str	x21, [x19, #48]
  40a74c:	mov	w8, #0x1                   	// #1
  40a750:	cbnz	w8, 40aa28 <wcrtomb@plt+0x8068>
  40a754:	add	w8, w27, #0x1
  40a758:	cbz	w27, 40a29c <wcrtomb@plt+0x78dc>
  40a75c:	b	40aa54 <wcrtomb@plt+0x8094>
  40a760:	ldrb	w8, [x19, #448]
  40a764:	tbnz	w8, #3, 40a780 <wcrtomb@plt+0x7dc0>
  40a768:	ldr	x8, [x19, #48]
  40a76c:	sub	x9, x8, #0x106
  40a770:	cmp	x9, #0x2
  40a774:	b.cc	40a780 <wcrtomb@plt+0x7dc0>  // b.lo, b.ul, b.last
  40a778:	cmn	x8, #0x1
  40a77c:	b.ne	40a6e8 <wcrtomb@plt+0x7d28>  // b.any
  40a780:	mov	w8, #0x10c                 	// #268
  40a784:	str	x8, [x19, #48]
  40a788:	mov	w8, #0x1                   	// #1
  40a78c:	mov	w21, #0x10c                 	// #268
  40a790:	b	40a750 <wcrtomb@plt+0x7d90>
  40a794:	add	x0, sp, #0x20
  40a798:	bl	40c79c <wcrtomb@plt+0x9ddc>
  40a79c:	bl	402760 <__ctype_b_loc@plt>
  40a7a0:	mov	x21, x0
  40a7a4:	mov	x22, xzr
  40a7a8:	b	40a7b8 <wcrtomb@plt+0x7df8>
  40a7ac:	add	x22, x22, #0x1
  40a7b0:	cmp	x22, #0x100
  40a7b4:	b.eq	40a7d4 <wcrtomb@plt+0x7e14>  // b.none
  40a7b8:	ldr	x8, [x21]
  40a7bc:	ldrh	w8, [x8, x22, lsl #1]
  40a7c0:	tbz	w8, #13, 40a7ac <wcrtomb@plt+0x7dec>
  40a7c4:	add	x1, sp, #0x20
  40a7c8:	mov	w0, w22
  40a7cc:	bl	40c288 <wcrtomb@plt+0x98c8>
  40a7d0:	b	40a7ac <wcrtomb@plt+0x7dec>
  40a7d4:	cmp	w20, #0x53
  40a7d8:	b.ne	40a7e4 <wcrtomb@plt+0x7e24>  // b.any
  40a7dc:	add	x0, sp, #0x20
  40a7e0:	bl	40c7a8 <wcrtomb@plt+0x9de8>
  40a7e4:	add	x1, sp, #0x20
  40a7e8:	mov	x0, x19
  40a7ec:	strb	wzr, [x19, #120]
  40a7f0:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40a7f4:	add	x21, x0, #0x114
  40a7f8:	str	x21, [x19, #48]
  40a7fc:	mov	w8, #0x1                   	// #1
  40a800:	mov	w22, #0x1                   	// #1
  40a804:	b	40a750 <wcrtomb@plt+0x7d90>
  40a808:	add	x0, sp, #0x20
  40a80c:	bl	40c79c <wcrtomb@plt+0x9ddc>
  40a810:	mov	x21, xzr
  40a814:	b	40a824 <wcrtomb@plt+0x7e64>
  40a818:	add	x21, x21, #0x1
  40a81c:	cmp	x21, #0x100
  40a820:	b.eq	40a844 <wcrtomb@plt+0x7e84>  // b.none
  40a824:	add	x8, x19, x21
  40a828:	ldrb	w8, [x8, #460]
  40a82c:	cmp	w8, #0x2
  40a830:	b.ne	40a818 <wcrtomb@plt+0x7e58>  // b.any
  40a834:	add	x1, sp, #0x20
  40a838:	mov	w0, w21
  40a83c:	bl	40c288 <wcrtomb@plt+0x98c8>
  40a840:	b	40a818 <wcrtomb@plt+0x7e58>
  40a844:	cmp	w20, #0x57
  40a848:	b.ne	40a854 <wcrtomb@plt+0x7e94>  // b.any
  40a84c:	add	x0, sp, #0x20
  40a850:	bl	40c7a8 <wcrtomb@plt+0x9de8>
  40a854:	strb	wzr, [x19, #120]
  40a858:	b	40a738 <wcrtomb@plt+0x7d78>
  40a85c:	add	x1, sp, #0x20
  40a860:	mov	w0, #0xa                   	// #10
  40a864:	bl	40c6dc <wcrtomb@plt+0x9d1c>
  40a868:	ldrb	w8, [x19, #448]
  40a86c:	tbz	w8, #7, 40a580 <wcrtomb@plt+0x7bc0>
  40a870:	add	x1, sp, #0x20
  40a874:	mov	w0, wzr
  40a878:	bl	40c6dc <wcrtomb@plt+0x9d1c>
  40a87c:	ldrb	w8, [x19, #1048]
  40a880:	cbz	w8, 40a8b4 <wcrtomb@plt+0x7ef4>
  40a884:	mov	x20, xzr
  40a888:	b	40a898 <wcrtomb@plt+0x7ed8>
  40a88c:	add	x20, x20, #0x1
  40a890:	cmp	x20, #0x100
  40a894:	b.eq	40a8b4 <wcrtomb@plt+0x7ef4>  // b.none
  40a898:	ldr	w8, [x28, x20, lsl #2]
  40a89c:	cmn	w8, #0x1
  40a8a0:	b.ne	40a88c <wcrtomb@plt+0x7ecc>  // b.any
  40a8a4:	add	x1, sp, #0x20
  40a8a8:	mov	w0, w20
  40a8ac:	bl	40c6dc <wcrtomb@plt+0x9d1c>
  40a8b0:	b	40a88c <wcrtomb@plt+0x7ecc>
  40a8b4:	add	x1, sp, #0x20
  40a8b8:	mov	x0, x19
  40a8bc:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40a8c0:	str	x0, [x19, #24]
  40a8c4:	ldrb	w8, [x19, #1048]
  40a8c8:	strb	wzr, [x19, #120]
  40a8cc:	cbz	w8, 40a8d8 <wcrtomb@plt+0x7f18>
  40a8d0:	mov	w21, #0x10a                 	// #266
  40a8d4:	b	40a748 <wcrtomb@plt+0x7d88>
  40a8d8:	ldr	x8, [x19, #24]
  40a8dc:	add	x21, x8, #0x114
  40a8e0:	b	40a748 <wcrtomb@plt+0x7d88>
  40a8e4:	ldr	w8, [x19, #64]
  40a8e8:	cmp	w22, #0x2c
  40a8ec:	b.ne	40a958 <wcrtomb@plt+0x7f98>  // b.any
  40a8f0:	str	x28, [sp]
  40a8f4:	tbz	w8, #31, 40a8fc <wcrtomb@plt+0x7f3c>
  40a8f8:	str	wzr, [x19, #64]
  40a8fc:	cmp	x25, #0x1
  40a900:	b.eq	40a968 <wcrtomb@plt+0x7fa8>  // b.none
  40a904:	mov	w28, #0x1                   	// #1
  40a908:	b	40a938 <wcrtomb@plt+0x7f78>
  40a90c:	mov	w9, #0xa                   	// #10
  40a910:	madd	w8, w8, w9, w22
  40a914:	mov	w10, #0x8030                	// #32816
  40a918:	sub	w9, w8, #0x30
  40a91c:	cmp	w8, w10
  40a920:	mov	w8, #0x8000                	// #32768
  40a924:	csel	w8, w8, w9, gt
  40a928:	add	x28, x28, #0x1
  40a92c:	cmp	x25, x28
  40a930:	str	w8, [x19, #68]
  40a934:	b.eq	40a960 <wcrtomb@plt+0x7fa0>  // b.none
  40a938:	ldrb	w22, [x23, x28]
  40a93c:	mov	w0, w22
  40a940:	bl	40c6bc <wcrtomb@plt+0x9cfc>
  40a944:	tbz	w0, #0, 40a960 <wcrtomb@plt+0x7fa0>
  40a948:	ldr	w8, [x19, #68]
  40a94c:	tbz	w8, #31, 40a90c <wcrtomb@plt+0x7f4c>
  40a950:	sub	w8, w22, #0x30
  40a954:	b	40a928 <wcrtomb@plt+0x7f68>
  40a958:	str	w8, [x19, #68]
  40a95c:	b	40a970 <wcrtomb@plt+0x7fb0>
  40a960:	add	x23, x23, x28
  40a964:	b	40a96c <wcrtomb@plt+0x7fac>
  40a968:	add	x23, x23, #0x1
  40a96c:	ldr	x28, [sp]
  40a970:	ldp	x9, x8, [sp, #16]
  40a974:	add	x9, x9, x8
  40a978:	tbz	w24, #0, 40a99c <wcrtomb@plt+0x7fdc>
  40a97c:	cmp	x23, x9
  40a980:	mov	w25, #0x106                 	// #262
  40a984:	mov	w22, #0x1                   	// #1
  40a988:	b.eq	40a9d0 <wcrtomb@plt+0x8010>  // b.none
  40a98c:	ldrb	w8, [x23], #1
  40a990:	cmp	w8, #0x5c
  40a994:	b.eq	40a9a4 <wcrtomb@plt+0x7fe4>  // b.none
  40a998:	b	40a9d0 <wcrtomb@plt+0x8010>
  40a99c:	mov	w25, #0x106                 	// #262
  40a9a0:	mov	w22, #0x1                   	// #1
  40a9a4:	cmp	x23, x9
  40a9a8:	b.eq	40a9d0 <wcrtomb@plt+0x8010>  // b.none
  40a9ac:	ldrb	w8, [x23], #1
  40a9b0:	cmp	w8, #0x7d
  40a9b4:	b.ne	40a9d0 <wcrtomb@plt+0x8010>  // b.any
  40a9b8:	ldr	w8, [x19, #64]
  40a9bc:	tbnz	w8, #31, 40a9d0 <wcrtomb@plt+0x8010>
  40a9c0:	ldr	w10, [x19, #68]
  40a9c4:	tbnz	w10, #31, 40aa04 <wcrtomb@plt+0x8044>
  40a9c8:	cmp	w8, w10
  40a9cc:	b.le	40aa04 <wcrtomb@plt+0x8044>
  40a9d0:	ldr	x8, [sp, #8]
  40a9d4:	tbz	w8, #21, 40aa70 <wcrtomb@plt+0x80b0>
  40a9d8:	mov	w8, #0x6                   	// #6
  40a9dc:	mov	w23, #0x109                 	// #265
  40a9e0:	cmp	w8, #0x6
  40a9e4:	b.eq	40a6e8 <wcrtomb@plt+0x7d28>  // b.none
  40a9e8:	cbnz	w8, 40a750 <wcrtomb@plt+0x7d90>
  40a9ec:	mov	w8, #0x104                 	// #260
  40a9f0:	strb	wzr, [x19, #120]
  40a9f4:	str	x8, [x19, #48]
  40a9f8:	mov	w8, #0x1                   	// #1
  40a9fc:	mov	w21, #0x104                 	// #260
  40aa00:	b	40a750 <wcrtomb@plt+0x7d90>
  40aa04:	cmp	w10, #0x8, lsl #12
  40aa08:	b.ge	40aa7c <wcrtomb@plt+0x80bc>  // b.tcont
  40aa0c:	mov	w8, wzr
  40aa10:	sub	x9, x9, x23
  40aa14:	stp	x23, x9, [x19, #32]
  40aa18:	b	40a9dc <wcrtomb@plt+0x801c>
  40aa1c:	mov	x21, #0xffffffffffffffff    	// #-1
  40aa20:	str	x21, [x19, #48]
  40aa24:	mov	w8, #0x1                   	// #1
  40aa28:	cmp	w8, #0x2
  40aa2c:	b.eq	40aa60 <wcrtomb@plt+0x80a0>  // b.none
  40aa30:	mov	x0, x21
  40aa34:	ldp	x20, x19, [sp, #144]
  40aa38:	ldp	x22, x21, [sp, #128]
  40aa3c:	ldp	x24, x23, [sp, #112]
  40aa40:	ldp	x26, x25, [sp, #96]
  40aa44:	ldp	x28, x27, [sp, #80]
  40aa48:	ldp	x29, x30, [sp, #64]
  40aa4c:	add	sp, sp, #0xa0
  40aa50:	ret
  40aa54:	mov	w8, #0x2                   	// #2
  40aa58:	cmp	w8, #0x2
  40aa5c:	b.ne	40aa30 <wcrtomb@plt+0x8070>  // b.any
  40aa60:	bl	4026c0 <abort@plt>
  40aa64:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40aa68:	add	x1, x1, #0xdca
  40aa6c:	b	40aa84 <wcrtomb@plt+0x80c4>
  40aa70:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40aa74:	add	x1, x1, #0xdde
  40aa78:	b	40aa84 <wcrtomb@plt+0x80c4>
  40aa7c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40aa80:	add	x1, x1, #0xdf6
  40aa84:	mov	w2, #0x5                   	// #5
  40aa88:	mov	x0, xzr
  40aa8c:	bl	402890 <dcgettext@plt>
  40aa90:	bl	402adc <wcrtomb@plt+0x11c>
  40aa94:	stp	x29, x30, [sp, #-32]!
  40aa98:	str	x19, [sp, #16]
  40aa9c:	mov	x29, sp
  40aaa0:	mov	x19, x0
  40aaa4:	bl	40cff8 <wcrtomb@plt+0xa638>
  40aaa8:	ldr	x8, [x19, #128]
  40aaac:	cmp	x8, #0x106
  40aab0:	b.ne	40aad8 <wcrtomb@plt+0x8118>  // b.any
  40aab4:	mov	x0, x19
  40aab8:	bl	40a258 <wcrtomb@plt+0x7898>
  40aabc:	str	x0, [x19, #128]
  40aac0:	mov	x0, x19
  40aac4:	bl	40cff8 <wcrtomb@plt+0xa638>
  40aac8:	mov	w1, #0x106                 	// #262
  40aacc:	mov	x0, x19
  40aad0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40aad4:	b	40aaa8 <wcrtomb@plt+0x80e8>
  40aad8:	ldr	x19, [sp, #16]
  40aadc:	ldp	x29, x30, [sp], #32
  40aae0:	ret
  40aae4:	stp	x29, x30, [sp, #-16]!
  40aae8:	ldr	x8, [x0, #1040]
  40aaec:	and	w3, w3, #0x1
  40aaf0:	mov	x29, sp
  40aaf4:	blr	x8
  40aaf8:	ldp	x29, x30, [sp], #16
  40aafc:	ret
  40ab00:	ldr	x0, [x0, #288]
  40ab04:	ret
  40ab08:	ldrb	w0, [x0, #192]
  40ab0c:	ret
  40ab10:	stp	x29, x30, [sp, #-32]!
  40ab14:	stp	x20, x19, [sp, #16]
  40ab18:	mov	w19, w3
  40ab1c:	mov	x20, x2
  40ab20:	mov	x29, sp
  40ab24:	cbz	x0, 40ab30 <wcrtomb@plt+0x8170>
  40ab28:	mov	x2, x20
  40ab2c:	bl	40a0c4 <wcrtomb@plt+0x7704>
  40ab30:	mov	x0, x20
  40ab34:	bl	40ab94 <wcrtomb@plt+0x81d4>
  40ab38:	mov	x0, x20
  40ab3c:	bl	40ad84 <wcrtomb@plt+0x83c4>
  40ab40:	tbz	w0, #0, 40ab64 <wcrtomb@plt+0x81a4>
  40ab44:	mov	x0, x20
  40ab48:	bl	40ade0 <wcrtomb@plt+0x8420>
  40ab4c:	and	w1, w19, #0x1
  40ab50:	mov	x0, x20
  40ab54:	bl	40ae90 <wcrtomb@plt+0x84d0>
  40ab58:	ldr	x0, [x20, #288]
  40ab5c:	cbnz	x0, 40ab78 <wcrtomb@plt+0x81b8>
  40ab60:	b	40ab88 <wcrtomb@plt+0x81c8>
  40ab64:	adrp	x8, 40b000 <wcrtomb@plt+0x8640>
  40ab68:	add	x8, x8, #0x2fc
  40ab6c:	str	x8, [x20, #1040]
  40ab70:	ldr	x0, [x20, #288]
  40ab74:	cbz	x0, 40ab88 <wcrtomb@plt+0x81c8>
  40ab78:	mov	w8, #0x1                   	// #1
  40ab7c:	and	w1, w19, #0x1
  40ab80:	strb	w8, [x20, #192]
  40ab84:	bl	40ae90 <wcrtomb@plt+0x84d0>
  40ab88:	ldp	x20, x19, [sp, #16]
  40ab8c:	ldp	x29, x30, [sp], #32
  40ab90:	ret
  40ab94:	sub	sp, sp, #0x80
  40ab98:	stp	x29, x30, [sp, #32]
  40ab9c:	str	x27, [sp, #48]
  40aba0:	stp	x26, x25, [sp, #64]
  40aba4:	stp	x24, x23, [sp, #80]
  40aba8:	stp	x22, x21, [sp, #96]
  40abac:	stp	x20, x19, [sp, #112]
  40abb0:	add	x29, sp, #0x20
  40abb4:	mov	x20, x0
  40abb8:	bl	40c0ac <wcrtomb@plt+0x96ec>
  40abbc:	mov	w2, #0x920                 	// #2336
  40abc0:	mov	x1, x20
  40abc4:	mov	x19, x0
  40abc8:	bl	402320 <memcpy@plt>
  40abcc:	adrp	x8, 40c000 <wcrtomb@plt+0x9640>
  40abd0:	add	x8, x8, #0x22c
  40abd4:	add	x9, x19, #0x118
  40abd8:	movi	v0.2d, #0x0
  40abdc:	strb	wzr, [x19, #1048]
  40abe0:	str	xzr, [x19, #320]
  40abe4:	str	x8, [x19, #1040]
  40abe8:	stp	q0, q0, [x9]
  40abec:	ldr	x0, [x19, #16]
  40abf0:	mov	w1, #0x20                  	// #32
  40abf4:	stp	xzr, xzr, [x19, #344]
  40abf8:	str	xzr, [x19, #336]
  40abfc:	stp	q0, q0, [x19, #368]
  40ac00:	bl	413abc <wcrtomb@plt+0x110fc>
  40ac04:	str	x0, [x19]
  40ac08:	ldr	x8, [x20, #8]
  40ac0c:	cbz	x8, 40ac1c <wcrtomb@plt+0x825c>
  40ac10:	ldr	x1, [x20]
  40ac14:	lsl	x2, x8, #5
  40ac18:	bl	402320 <memcpy@plt>
  40ac1c:	ldr	x0, [x20, #152]
  40ac20:	mov	w1, #0x10                  	// #16
  40ac24:	bl	413abc <wcrtomb@plt+0x110fc>
  40ac28:	str	x0, [x19, #144]
  40ac2c:	ldr	x8, [x20, #152]
  40ac30:	lsl	x9, x8, #1
  40ac34:	cmp	x8, #0x1
  40ac38:	str	x9, [x19, #160]
  40ac3c:	b.lt	40ad2c <wcrtomb@plt+0x836c>  // b.tstop
  40ac40:	mov	x22, xzr
  40ac44:	mov	x25, xzr
  40ac48:	mov	w21, wzr
  40ac4c:	mov	w8, wzr
  40ac50:	mov	w23, #0x1                   	// #1
  40ac54:	mov	w24, #0x100                 	// #256
  40ac58:	mov	w26, #0x301                 	// #769
  40ac5c:	mov	w27, #0x102                 	// #258
  40ac60:	b	40ac9c <wcrtomb@plt+0x82dc>
  40ac64:	ldr	x11, [x19, #144]
  40ac68:	str	x10, [x11, x25, lsl #3]
  40ac6c:	ldr	x9, [x9, x22, lsl #3]
  40ac70:	add	x25, x25, #0x1
  40ac74:	cmp	x9, #0x100
  40ac78:	cset	w10, cc  // cc = lo, ul, last
  40ac7c:	cmp	x9, #0x113
  40ac80:	cset	w9, gt
  40ac84:	orr	w9, w10, w9
  40ac88:	orr	w21, w21, w9
  40ac8c:	ldr	x9, [x20, #152]
  40ac90:	add	x22, x22, #0x1
  40ac94:	cmp	x22, x9
  40ac98:	b.ge	40ad38 <wcrtomb@plt+0x8378>  // b.tcont
  40ac9c:	ldr	x9, [x20, #144]
  40aca0:	ldr	x10, [x9, x22, lsl #3]
  40aca4:	sub	x11, x10, #0x10a
  40aca8:	cmp	x11, #0x9
  40acac:	b.hi	40ac64 <wcrtomb@plt+0x82a4>  // b.pmore
  40acb0:	lsl	x12, x23, x11
  40acb4:	tst	x12, #0xf0
  40acb8:	b.eq	40acd8 <wcrtomb@plt+0x8318>  // b.none
  40acbc:	ldrb	w11, [x20, #1048]
  40acc0:	cbz	w11, 40ac64 <wcrtomb@plt+0x82a4>
  40acc4:	ldr	x9, [x19, #144]
  40acc8:	add	x10, x25, #0x1
  40accc:	str	x24, [x9, x25, lsl #3]
  40acd0:	mov	x25, x10
  40acd4:	b	40ac8c <wcrtomb@plt+0x82cc>
  40acd8:	lsl	x11, x23, x11
  40acdc:	tst	x11, x26
  40ace0:	b.eq	40ac64 <wcrtomb@plt+0x82a4>  // b.none
  40ace4:	mov	x0, sp
  40ace8:	bl	40c6d0 <wcrtomb@plt+0x9d10>
  40acec:	mov	x1, sp
  40acf0:	mov	x0, x19
  40acf4:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40acf8:	ldr	x8, [x19, #144]
  40acfc:	add	x9, x0, #0x114
  40ad00:	add	x8, x8, x25, lsl #3
  40ad04:	stp	x9, x27, [x8]
  40ad08:	ldr	x8, [x20, #144]
  40ad0c:	add	x9, x22, #0x1
  40ad10:	add	x25, x25, #0x2
  40ad14:	ldr	x8, [x8, x9, lsl #3]
  40ad18:	sub	x8, x8, #0x101
  40ad1c:	cmp	x8, #0x3
  40ad20:	cinc	x22, x22, cc  // cc = lo, ul, last
  40ad24:	mov	w8, #0x1                   	// #1
  40ad28:	b	40ac8c <wcrtomb@plt+0x82cc>
  40ad2c:	mov	w8, wzr
  40ad30:	mov	w21, wzr
  40ad34:	mov	x25, xzr
  40ad38:	str	x25, [x19, #152]
  40ad3c:	tbz	w21, #0, 40ad54 <wcrtomb@plt+0x8394>
  40ad40:	tbnz	w8, #0, 40ad4c <wcrtomb@plt+0x838c>
  40ad44:	ldrb	w8, [x20, #1048]
  40ad48:	cbz	w8, 40ad54 <wcrtomb@plt+0x8394>
  40ad4c:	str	x19, [x20, #288]
  40ad50:	b	40ad64 <wcrtomb@plt+0x83a4>
  40ad54:	mov	x0, x19
  40ad58:	bl	40b30c <wcrtomb@plt+0x894c>
  40ad5c:	mov	x0, x19
  40ad60:	bl	402770 <free@plt>
  40ad64:	ldp	x20, x19, [sp, #112]
  40ad68:	ldp	x22, x21, [sp, #96]
  40ad6c:	ldp	x24, x23, [sp, #80]
  40ad70:	ldp	x26, x25, [sp, #64]
  40ad74:	ldr	x27, [sp, #48]
  40ad78:	ldp	x29, x30, [sp, #32]
  40ad7c:	add	sp, sp, #0x80
  40ad80:	ret
  40ad84:	ldr	x8, [x0, #152]
  40ad88:	cmp	x8, #0x1
  40ad8c:	b.lt	40add8 <wcrtomb@plt+0x8418>  // b.tstop
  40ad90:	ldr	x8, [x0, #144]
  40ad94:	mov	x9, xzr
  40ad98:	b	40adb4 <wcrtomb@plt+0x83f4>
  40ad9c:	ldrb	w10, [x0, #1048]
  40ada0:	cbnz	w10, 40add0 <wcrtomb@plt+0x8410>
  40ada4:	ldr	x10, [x0, #152]
  40ada8:	add	x9, x9, #0x1
  40adac:	cmp	x9, x10
  40adb0:	b.ge	40add8 <wcrtomb@plt+0x8418>  // b.tcont
  40adb4:	ldr	x10, [x8, x9, lsl #3]
  40adb8:	sub	x11, x10, #0x10e
  40adbc:	cmp	x11, #0x4
  40adc0:	b.cc	40ad9c <wcrtomb@plt+0x83dc>  // b.lo, b.ul, b.last
  40adc4:	sub	x10, x10, #0x112
  40adc8:	cmp	x10, #0x2
  40adcc:	b.cs	40ada4 <wcrtomb@plt+0x83e4>  // b.hs, b.nlast
  40add0:	mov	w0, wzr
  40add4:	ret
  40add8:	mov	w0, #0x1                   	// #1
  40addc:	ret
  40ade0:	stp	x29, x30, [sp, #-32]!
  40ade4:	ldrb	w8, [x0, #1050]
  40ade8:	str	x19, [sp, #16]
  40adec:	mov	x29, sp
  40adf0:	cbz	w8, 40ae80 <wcrtomb@plt+0x84c0>
  40adf4:	ldr	x8, [x0, #152]
  40adf8:	mov	x19, x0
  40adfc:	cmp	x8, #0x1
  40ae00:	b.lt	40ae48 <wcrtomb@plt+0x8488>  // b.tstop
  40ae04:	ldr	x9, [x19, #144]
  40ae08:	mov	x8, xzr
  40ae0c:	mov	w10, wzr
  40ae10:	ldr	x11, [x9, x8, lsl #3]
  40ae14:	cmp	x11, #0x112
  40ae18:	b.eq	40ae30 <wcrtomb@plt+0x8470>  // b.none
  40ae1c:	cmp	x11, #0x113
  40ae20:	b.eq	40ae80 <wcrtomb@plt+0x84c0>  // b.none
  40ae24:	cmp	x11, #0x10a
  40ae28:	b.ne	40ae34 <wcrtomb@plt+0x8474>  // b.any
  40ae2c:	b	40ae8c <wcrtomb@plt+0x84cc>
  40ae30:	mov	w10, #0x1                   	// #1
  40ae34:	ldr	x11, [x19, #152]
  40ae38:	add	x8, x8, #0x1
  40ae3c:	cmp	x8, x11
  40ae40:	b.lt	40ae10 <wcrtomb@plt+0x8450>  // b.tstop
  40ae44:	tbnz	w10, #0, 40ae60 <wcrtomb@plt+0x84a0>
  40ae48:	ldr	x0, [x19, #288]
  40ae4c:	cbz	x0, 40ae60 <wcrtomb@plt+0x84a0>
  40ae50:	bl	40b30c <wcrtomb@plt+0x894c>
  40ae54:	ldr	x0, [x19, #288]
  40ae58:	bl	402770 <free@plt>
  40ae5c:	str	xzr, [x19, #288]
  40ae60:	mov	x0, x19
  40ae64:	bl	40b470 <wcrtomb@plt+0x8ab0>
  40ae68:	adrp	x8, 40c000 <wcrtomb@plt+0x9640>
  40ae6c:	add	x8, x8, #0x22c
  40ae70:	mov	w9, #0x1                   	// #1
  40ae74:	strb	wzr, [x19, #1048]
  40ae78:	str	x8, [x19, #1040]
  40ae7c:	strb	w9, [x19, #192]
  40ae80:	ldr	x19, [sp, #16]
  40ae84:	ldp	x29, x30, [sp], #32
  40ae88:	ret
  40ae8c:	bl	4026c0 <abort@plt>
  40ae90:	sub	sp, sp, #0xa0
  40ae94:	stp	x29, x30, [sp, #64]
  40ae98:	stp	x28, x27, [sp, #80]
  40ae9c:	stp	x26, x25, [sp, #96]
  40aea0:	stp	x24, x23, [sp, #112]
  40aea4:	stp	x22, x21, [sp, #128]
  40aea8:	stp	x20, x19, [sp, #144]
  40aeac:	mov	x19, x0
  40aeb0:	ldr	x0, [x0, #176]
  40aeb4:	and	w21, w1, #0x1
  40aeb8:	mov	w1, #0x20                  	// #32
  40aebc:	add	x29, sp, #0x40
  40aec0:	bl	413abc <wcrtomb@plt+0x110fc>
  40aec4:	ldp	x8, x20, [x19, #168]
  40aec8:	str	x0, [sp, #8]
  40aecc:	mov	w1, #0x18                  	// #24
  40aed0:	mov	x0, x8
  40aed4:	bl	413abc <wcrtomb@plt+0x110fc>
  40aed8:	str	x0, [sp]
  40aedc:	mov	w1, #0x105                 	// #261
  40aee0:	mov	x0, x19
  40aee4:	bl	40a194 <wcrtomb@plt+0x77d4>
  40aee8:	ldr	x1, [x19, #176]
  40aeec:	add	x0, sp, #0x10
  40aef0:	strb	w21, [x19, #328]
  40aef4:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40aef8:	ldr	x0, [x19, #152]
  40aefc:	mov	w1, #0x18                  	// #24
  40af00:	bl	413c34 <wcrtomb@plt+0x11274>
  40af04:	ldr	x8, [x19, #152]
  40af08:	str	x0, [x19, #320]
  40af0c:	cmp	x8, #0x1
  40af10:	b.lt	40b134 <wcrtomb@plt+0x8774>  // b.tstop
  40af14:	ldp	x21, x28, [sp]
  40af18:	adrp	x26, 425000 <_obstack_memory_used@@Base+0xebcc>
  40af1c:	mov	x22, xzr
  40af20:	mov	w24, #0x1                   	// #1
  40af24:	add	x23, x28, x20, lsl #4
  40af28:	add	x26, x26, #0xa86
  40af2c:	mov	w27, #0x18                  	// #24
  40af30:	b	40af70 <wcrtomb@plt+0x85b0>
  40af34:	cmp	x8, #0x112
  40af38:	mov	w8, #0x1ff                 	// #511
  40af3c:	str	x22, [x23]
  40af40:	str	x22, [x28]
  40af44:	str	w8, [x23, #8]
  40af48:	str	w8, [x28, #8]
  40af4c:	cset	w8, eq  // eq = none
  40af50:	stp	x24, x24, [x21, #8]
  40af54:	add	x28, x28, #0x10
  40af58:	strb	w8, [x21], #24
  40af5c:	add	x23, x23, #0x10
  40af60:	ldr	x8, [x19, #152]
  40af64:	add	x22, x22, #0x1
  40af68:	cmp	x22, x8
  40af6c:	b.ge	40b134 <wcrtomb@plt+0x8774>  // b.tcont
  40af70:	ldr	x8, [x19, #144]
  40af74:	ldr	x8, [x8, x22, lsl #3]
  40af78:	sub	x9, x8, #0x100
  40af7c:	cmp	x9, #0x6
  40af80:	b.hi	40af34 <wcrtomb@plt+0x8574>  // b.pmore
  40af84:	adr	x10, 40af34 <wcrtomb@plt+0x8574>
  40af88:	ldrb	w11, [x26, x9]
  40af8c:	add	x10, x10, x11, lsl #2
  40af90:	br	x10
  40af94:	ldp	x9, x8, [x21, #-16]
  40af98:	sub	x10, x28, x9, lsl #4
  40af9c:	cmp	x8, #0x1
  40afa0:	stp	x10, x9, [x29, #-24]
  40afa4:	b.lt	40afec <wcrtomb@plt+0x862c>  // b.tstop
  40afa8:	mov	x20, xzr
  40afac:	sub	x25, x23, x8, lsl #4
  40afb0:	ldr	x8, [x19, #320]
  40afb4:	ldr	x9, [x25]
  40afb8:	sub	x0, x29, #0x18
  40afbc:	add	x2, sp, #0x10
  40afc0:	madd	x1, x9, x27, x8
  40afc4:	bl	40d604 <wcrtomb@plt+0xac44>
  40afc8:	ldr	x8, [x19, #320]
  40afcc:	ldr	x9, [x25], #16
  40afd0:	add	x0, sp, #0x10
  40afd4:	madd	x1, x9, x27, x8
  40afd8:	bl	40d620 <wcrtomb@plt+0xac60>
  40afdc:	ldur	x8, [x21, #-8]
  40afe0:	add	x20, x20, #0x1
  40afe4:	cmp	x20, x8
  40afe8:	b.lt	40afb0 <wcrtomb@plt+0x85f0>  // b.tstop
  40afec:	ldr	x8, [x19, #144]
  40aff0:	ldr	x8, [x8, x22, lsl #3]
  40aff4:	cmp	x8, #0x103
  40aff8:	b.eq	40af60 <wcrtomb@plt+0x85a0>  // b.none
  40affc:	sturb	w24, [x21, #-24]
  40b000:	b	40af60 <wcrtomb@plt+0x85a0>
  40b004:	add	x8, x21, #0x18
  40b008:	strb	w24, [x21]
  40b00c:	stp	xzr, xzr, [x21, #8]
  40b010:	mov	x21, x8
  40b014:	b	40af60 <wcrtomb@plt+0x85a0>
  40b018:	ldur	x9, [x21, #-16]
  40b01c:	ldur	x8, [x21, #-32]
  40b020:	sub	x10, x28, x9, lsl #4
  40b024:	cmp	x8, #0x1
  40b028:	stp	x10, x9, [x29, #-24]
  40b02c:	b.lt	40b07c <wcrtomb@plt+0x86bc>  // b.tstop
  40b030:	ldur	x9, [x21, #-8]
  40b034:	mov	x20, xzr
  40b038:	sub	x9, x23, x9, lsl #4
  40b03c:	sub	x25, x9, x8, lsl #4
  40b040:	ldr	x8, [x19, #320]
  40b044:	ldr	x9, [x25]
  40b048:	sub	x0, x29, #0x18
  40b04c:	add	x2, sp, #0x10
  40b050:	madd	x1, x9, x27, x8
  40b054:	bl	40d604 <wcrtomb@plt+0xac44>
  40b058:	ldr	x8, [x19, #320]
  40b05c:	ldr	x9, [x25], #16
  40b060:	add	x0, sp, #0x10
  40b064:	madd	x1, x9, x27, x8
  40b068:	bl	40d620 <wcrtomb@plt+0xac60>
  40b06c:	ldur	x8, [x21, #-32]
  40b070:	add	x20, x20, #0x1
  40b074:	cmp	x20, x8
  40b078:	b.lt	40b040 <wcrtomb@plt+0x8680>  // b.tstop
  40b07c:	ldurb	w10, [x21, #-48]
  40b080:	ldur	x9, [x21, #-16]
  40b084:	cbz	w10, 40b0c0 <wcrtomb@plt+0x8700>
  40b088:	ldur	x10, [x21, #-40]
  40b08c:	add	x9, x10, x9
  40b090:	stur	x9, [x21, #-40]
  40b094:	b	40b0c4 <wcrtomb@plt+0x8704>
  40b098:	ldrb	w8, [x21, #-24]!
  40b09c:	ldp	x9, x10, [x21, #8]
  40b0a0:	ldp	x11, x12, [x21, #-16]
  40b0a4:	ldurb	w13, [x21, #-24]
  40b0a8:	add	x9, x11, x9
  40b0ac:	add	x10, x12, x10
  40b0b0:	orr	w8, w13, w8
  40b0b4:	stp	x9, x10, [x21, #-16]
  40b0b8:	sturb	w8, [x21, #-24]
  40b0bc:	b	40af60 <wcrtomb@plt+0x85a0>
  40b0c0:	sub	x28, x28, x9, lsl #4
  40b0c4:	ldurb	w9, [x21, #-24]
  40b0c8:	ldur	x11, [x21, #-8]
  40b0cc:	cbz	w9, 40b0d8 <wcrtomb@plt+0x8718>
  40b0d0:	add	x9, x11, x8
  40b0d4:	b	40b11c <wcrtomb@plt+0x875c>
  40b0d8:	ldur	x9, [x21, #-8]
  40b0dc:	cmp	x9, #0x1
  40b0e0:	b.lt	40b114 <wcrtomb@plt+0x8754>  // b.tstop
  40b0e4:	sub	x9, x23, x11, lsl #4
  40b0e8:	sub	x8, x9, x8, lsl #4
  40b0ec:	mov	x10, xzr
  40b0f0:	mov	x11, x8
  40b0f4:	ldur	x12, [x21, #-32]
  40b0f8:	ldur	x9, [x21, #-8]
  40b0fc:	add	x12, x10, x12
  40b100:	ldr	q0, [x8, x12, lsl #4]
  40b104:	add	x10, x10, #0x1
  40b108:	cmp	x10, x9
  40b10c:	str	q0, [x11], #16
  40b110:	b.lt	40b0f4 <wcrtomb@plt+0x8734>  // b.tstop
  40b114:	ldur	x8, [x21, #-32]
  40b118:	sub	x23, x23, x8, lsl #4
  40b11c:	ldrb	w8, [x21, #-24]!
  40b120:	ldurb	w10, [x21, #-24]
  40b124:	stur	x9, [x21, #-8]
  40b128:	and	w8, w10, w8
  40b12c:	sturb	w8, [x21, #-24]
  40b130:	b	40af60 <wcrtomb@plt+0x85a0>
  40b134:	mov	x0, x19
  40b138:	bl	40d6a8 <wcrtomb@plt+0xace8>
  40b13c:	mov	x0, x19
  40b140:	bl	40d808 <wcrtomb@plt+0xae48>
  40b144:	sub	x0, x29, #0x18
  40b148:	mov	w1, #0x1                   	// #1
  40b14c:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40b150:	sub	x2, x29, #0x18
  40b154:	mov	w1, #0x1ff                 	// #511
  40b158:	mov	x0, xzr
  40b15c:	bl	40d980 <wcrtomb@plt+0xafc0>
  40b160:	ldr	x0, [x19, #152]
  40b164:	mov	w1, #0x4                   	// #4
  40b168:	bl	413abc <wcrtomb@plt+0x110fc>
  40b16c:	ldr	x8, [x19, #152]
  40b170:	str	x0, [x19, #344]
  40b174:	cmp	x8, #0x1
  40b178:	b.lt	40b254 <wcrtomb@plt+0x8894>  // b.tstop
  40b17c:	mov	x22, xzr
  40b180:	mov	w23, #0x18                  	// #24
  40b184:	b	40b198 <wcrtomb@plt+0x87d8>
  40b188:	ldr	x8, [x19, #152]
  40b18c:	add	x22, x22, #0x1
  40b190:	cmp	x22, x8
  40b194:	b.ge	40b254 <wcrtomb@plt+0x8894>  // b.tcont
  40b198:	ldr	x24, [x19, #344]
  40b19c:	lsl	x25, x22, #2
  40b1a0:	str	wzr, [x24, x25]
  40b1a4:	ldr	x20, [x19, #336]
  40b1a8:	ldr	w0, [x20, x25]
  40b1ac:	bl	40d9d0 <wcrtomb@plt+0xb010>
  40b1b0:	tst	w0, #0x1
  40b1b4:	mov	w8, #0x4                   	// #4
  40b1b8:	csel	w8, w8, wzr, ne  // ne = any
  40b1bc:	str	w8, [x24, x25]
  40b1c0:	ldr	w0, [x20, x25]
  40b1c4:	bl	40d9e4 <wcrtomb@plt+0xb024>
  40b1c8:	tbz	w0, #0, 40b1d8 <wcrtomb@plt+0x8818>
  40b1cc:	ldr	w8, [x24, x25]
  40b1d0:	orr	w8, w8, #0x2
  40b1d4:	str	w8, [x24, x25]
  40b1d8:	ldr	x8, [x19, #320]
  40b1dc:	madd	x9, x22, x23, x8
  40b1e0:	ldr	x9, [x9, #8]
  40b1e4:	cmp	x9, #0x1
  40b1e8:	b.lt	40b188 <wcrtomb@plt+0x87c8>  // b.tstop
  40b1ec:	ldr	x27, [x19, #320]
  40b1f0:	mov	x26, xzr
  40b1f4:	mov	w20, #0x8                   	// #8
  40b1f8:	madd	x9, x22, x23, x27
  40b1fc:	ldr	x28, [x9, #8]
  40b200:	b	40b218 <wcrtomb@plt+0x8858>
  40b204:	add	x26, x26, #0x1
  40b208:	cmp	x26, x28
  40b20c:	add	x20, x20, #0x10
  40b210:	mov	x8, x27
  40b214:	b.ge	40b188 <wcrtomb@plt+0x87c8>  // b.tcont
  40b218:	mul	x9, x22, x23
  40b21c:	ldr	x21, [x8, x9]
  40b220:	ldr	w0, [x21, x20]
  40b224:	bl	40d9d0 <wcrtomb@plt+0xb010>
  40b228:	tbz	w0, #0, 40b238 <wcrtomb@plt+0x8878>
  40b22c:	ldr	w8, [x24, x25]
  40b230:	orr	w8, w8, #0x4
  40b234:	str	w8, [x24, x25]
  40b238:	ldr	w0, [x21, x20]
  40b23c:	bl	40d9e4 <wcrtomb@plt+0xb024>
  40b240:	tbz	w0, #0, 40b204 <wcrtomb@plt+0x8844>
  40b244:	ldr	w8, [x24, x25]
  40b248:	orr	w8, w8, #0x2
  40b24c:	str	w8, [x24, x25]
  40b250:	b	40b204 <wcrtomb@plt+0x8844>
  40b254:	sub	x1, x29, #0x18
  40b258:	mov	x0, x19
  40b25c:	bl	40d9f8 <wcrtomb@plt+0xb038>
  40b260:	mov	w22, w0
  40b264:	tbz	w0, #2, 40b278 <wcrtomb@plt+0x88b8>
  40b268:	sub	x1, x29, #0x18
  40b26c:	mov	w2, #0x4                   	// #4
  40b270:	mov	x0, x19
  40b274:	bl	40da38 <wcrtomb@plt+0xb078>
  40b278:	eor	w2, w22, #0x7
  40b27c:	sub	x1, x29, #0x18
  40b280:	mov	x0, x19
  40b284:	bl	40da38 <wcrtomb@plt+0xb078>
  40b288:	sxtw	x8, w0
  40b28c:	str	w0, [x19, #364]
  40b290:	str	x8, [x19, #400]
  40b294:	tbz	w22, #1, 40b2ac <wcrtomb@plt+0x88ec>
  40b298:	sub	x1, x29, #0x18
  40b29c:	mov	w2, #0x2                   	// #2
  40b2a0:	mov	x0, x19
  40b2a4:	bl	40da38 <wcrtomb@plt+0xb078>
  40b2a8:	str	w0, [x19, #364]
  40b2ac:	ldr	w8, [x19, #364]
  40b2b0:	ldr	x0, [sp, #8]
  40b2b4:	str	wzr, [x19, #360]
  40b2b8:	add	w8, w8, #0x1
  40b2bc:	str	w8, [x19, #364]
  40b2c0:	bl	402770 <free@plt>
  40b2c4:	ldr	x0, [sp]
  40b2c8:	bl	402770 <free@plt>
  40b2cc:	ldr	x0, [sp, #16]
  40b2d0:	bl	402770 <free@plt>
  40b2d4:	ldur	x0, [x29, #-24]
  40b2d8:	bl	402770 <free@plt>
  40b2dc:	ldp	x20, x19, [sp, #144]
  40b2e0:	ldp	x22, x21, [sp, #128]
  40b2e4:	ldp	x24, x23, [sp, #112]
  40b2e8:	ldp	x26, x25, [sp, #96]
  40b2ec:	ldp	x28, x27, [sp, #80]
  40b2f0:	ldp	x29, x30, [sp, #64]
  40b2f4:	add	sp, sp, #0xa0
  40b2f8:	ret
  40b2fc:	mov	x0, x1
  40b300:	mov	w8, #0x1                   	// #1
  40b304:	strb	w8, [x5]
  40b308:	ret
  40b30c:	stp	x29, x30, [sp, #-48]!
  40b310:	stp	x20, x19, [sp, #32]
  40b314:	mov	x19, x0
  40b318:	ldr	x0, [x0]
  40b31c:	str	x21, [sp, #16]
  40b320:	mov	x29, sp
  40b324:	bl	402770 <free@plt>
  40b328:	ldr	x0, [x19, #144]
  40b32c:	bl	402770 <free@plt>
  40b330:	ldrb	w8, [x19, #1048]
  40b334:	cbz	w8, 40b340 <wcrtomb@plt+0x8980>
  40b338:	mov	x0, x19
  40b33c:	bl	40b470 <wcrtomb@plt+0x8ab0>
  40b340:	ldr	x0, [x19, #336]
  40b344:	bl	402770 <free@plt>
  40b348:	ldr	x0, [x19, #344]
  40b34c:	bl	402770 <free@plt>
  40b350:	ldr	x8, [x19, #304]
  40b354:	cmp	x8, #0x1
  40b358:	b.lt	40b398 <wcrtomb@plt+0x89d8>  // b.tstop
  40b35c:	mov	x20, xzr
  40b360:	mov	x21, xzr
  40b364:	ldr	x8, [x19, #296]
  40b368:	add	x8, x8, x20
  40b36c:	ldr	x0, [x8, #8]
  40b370:	bl	402770 <free@plt>
  40b374:	ldr	x8, [x19, #296]
  40b378:	add	x8, x8, x20
  40b37c:	ldr	x0, [x8, #48]
  40b380:	bl	402770 <free@plt>
  40b384:	ldr	x8, [x19, #304]
  40b388:	add	x21, x21, #0x1
  40b38c:	add	x20, x20, #0x50
  40b390:	cmp	x21, x8
  40b394:	b.lt	40b364 <wcrtomb@plt+0x89a4>  // b.tstop
  40b398:	ldr	x0, [x19, #296]
  40b39c:	bl	402770 <free@plt>
  40b3a0:	ldr	x8, [x19, #320]
  40b3a4:	cbz	x8, 40b3e4 <wcrtomb@plt+0x8a24>
  40b3a8:	ldr	x8, [x19, #152]
  40b3ac:	cmp	x8, #0x1
  40b3b0:	b.lt	40b3dc <wcrtomb@plt+0x8a1c>  // b.tstop
  40b3b4:	mov	x20, xzr
  40b3b8:	mov	x21, xzr
  40b3bc:	ldr	x8, [x19, #320]
  40b3c0:	ldr	x0, [x8, x20]
  40b3c4:	bl	402770 <free@plt>
  40b3c8:	ldr	x8, [x19, #152]
  40b3cc:	add	x21, x21, #0x1
  40b3d0:	add	x20, x20, #0x18
  40b3d4:	cmp	x21, x8
  40b3d8:	b.lt	40b3bc <wcrtomb@plt+0x89fc>  // b.tstop
  40b3dc:	ldr	x0, [x19, #320]
  40b3e0:	bl	402770 <free@plt>
  40b3e4:	ldr	x8, [x19, #368]
  40b3e8:	cbz	x8, 40b44c <wcrtomb@plt+0x8a8c>
  40b3ec:	ldr	x9, [x19, #352]
  40b3f0:	ldr	x8, [x19, #368]
  40b3f4:	cmp	x9, #0x1
  40b3f8:	b.lt	40b42c <wcrtomb@plt+0x8a6c>  // b.tstop
  40b3fc:	mov	x20, xzr
  40b400:	lsl	x21, x20, #3
  40b404:	ldr	x0, [x8, x21]
  40b408:	bl	402770 <free@plt>
  40b40c:	ldr	x8, [x19, #376]
  40b410:	ldr	x0, [x8, x21]
  40b414:	bl	402770 <free@plt>
  40b418:	ldr	x9, [x19, #352]
  40b41c:	ldr	x8, [x19, #368]
  40b420:	add	x20, x20, #0x1
  40b424:	cmp	x20, x9
  40b428:	b.lt	40b400 <wcrtomb@plt+0x8a40>  // b.tstop
  40b42c:	sub	x0, x8, #0x10
  40b430:	bl	402770 <free@plt>
  40b434:	ldr	x0, [x19, #376]
  40b438:	bl	402770 <free@plt>
  40b43c:	ldr	x0, [x19, #392]
  40b440:	bl	402770 <free@plt>
  40b444:	ldr	x0, [x19, #384]
  40b448:	bl	402770 <free@plt>
  40b44c:	ldr	x0, [x19, #288]
  40b450:	cbz	x0, 40b460 <wcrtomb@plt+0x8aa0>
  40b454:	bl	40b30c <wcrtomb@plt+0x894c>
  40b458:	ldr	x0, [x19, #288]
  40b45c:	bl	402770 <free@plt>
  40b460:	ldp	x20, x19, [sp, #32]
  40b464:	ldr	x21, [sp, #16]
  40b468:	ldp	x29, x30, [sp], #48
  40b46c:	ret
  40b470:	stp	x29, x30, [sp, #-32]!
  40b474:	stp	x20, x19, [sp, #16]
  40b478:	mov	x19, x0
  40b47c:	ldr	x0, [x0, #280]
  40b480:	mov	x29, sp
  40b484:	bl	402770 <free@plt>
  40b488:	ldr	x0, [x19, #96]
  40b48c:	bl	402770 <free@plt>
  40b490:	ldr	x0, [x19, #408]
  40b494:	bl	402770 <free@plt>
  40b498:	ldr	x8, [x19, #432]
  40b49c:	cbz	x8, 40b4d4 <wcrtomb@plt+0x8b14>
  40b4a0:	ldr	x9, [x19, #352]
  40b4a4:	ldr	x8, [x19, #432]
  40b4a8:	tbnz	x9, #63, 40b4cc <wcrtomb@plt+0x8b0c>
  40b4ac:	mov	x20, #0xffffffffffffffff    	// #-1
  40b4b0:	ldr	x0, [x8, x20, lsl #3]
  40b4b4:	bl	402770 <free@plt>
  40b4b8:	ldr	x9, [x19, #352]
  40b4bc:	ldr	x8, [x19, #432]
  40b4c0:	add	x20, x20, #0x1
  40b4c4:	cmp	x20, x9
  40b4c8:	b.lt	40b4b0 <wcrtomb@plt+0x8af0>  // b.tstop
  40b4cc:	sub	x0, x8, #0x10
  40b4d0:	bl	402770 <free@plt>
  40b4d4:	ldp	x20, x19, [sp, #16]
  40b4d8:	ldp	x29, x30, [sp], #32
  40b4dc:	ret
  40b4e0:	sub	sp, sp, #0x80
  40b4e4:	stp	x29, x30, [sp, #32]
  40b4e8:	stp	x28, x27, [sp, #48]
  40b4ec:	stp	x26, x25, [sp, #64]
  40b4f0:	stp	x24, x23, [sp, #80]
  40b4f4:	stp	x22, x21, [sp, #96]
  40b4f8:	stp	x20, x19, [sp, #112]
  40b4fc:	ldr	x8, [x0, #152]
  40b500:	add	x29, sp, #0x20
  40b504:	cmp	x8, #0x3
  40b508:	b.lt	40bbb0 <wcrtomb@plt+0x91f0>  // b.tstop
  40b50c:	stur	xzr, [x29, #-8]
  40b510:	ldrb	w9, [x0, #1048]
  40b514:	ldrb	w8, [x0, #457]
  40b518:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xebcc>
  40b51c:	adrp	x27, 425000 <_obstack_memory_used@@Base+0xebcc>
  40b520:	eor	w9, w9, #0x1
  40b524:	mov	x21, x0
  40b528:	mov	x20, xzr
  40b52c:	add	x19, x19, #0x2cd
  40b530:	mov	w26, #0x1                   	// #1
  40b534:	mov	w25, #0x2                   	// #2
  40b538:	and	w28, w9, w8
  40b53c:	add	x27, x27, #0xa8e
  40b540:	str	wzr, [sp, #16]
  40b544:	stur	wzr, [x29, #-12]
  40b548:	str	wzr, [sp, #12]
  40b54c:	ldr	x8, [x21, #144]
  40b550:	ldr	x22, [x8, x26, lsl #3]
  40b554:	sub	x8, x22, #0x100
  40b558:	cmp	x8, #0x13
  40b55c:	b.hi	40b588 <wcrtomb@plt+0x8bc8>  // b.pmore
  40b560:	adr	x9, 40b570 <wcrtomb@plt+0x8bb0>
  40b564:	ldrh	w10, [x27, x8, lsl #1]
  40b568:	add	x9, x9, x10, lsl #2
  40b56c:	br	x9
  40b570:	mov	w1, #0x2                   	// #2
  40b574:	mov	x0, x20
  40b578:	bl	40bca4 <wcrtomb@plt+0x92e4>
  40b57c:	mov	x20, x0
  40b580:	mov	w8, wzr
  40b584:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b588:	cmn	x22, #0x1
  40b58c:	b.eq	40b7a4 <wcrtomb@plt+0x8de4>  // b.none
  40b590:	cbz	x22, 40b844 <wcrtomb@plt+0x8e84>
  40b594:	cmp	x22, #0x114
  40b598:	b.lt	40b9f4 <wcrtomb@plt+0x9034>  // b.tstop
  40b59c:	ldr	x8, [x21]
  40b5a0:	mov	x9, #0xffffffffffffdd80    	// #-8832
  40b5a4:	mov	x23, xzr
  40b5a8:	mov	x27, #0xffffffffffffffff    	// #-1
  40b5ac:	add	x8, x8, x22, lsl #5
  40b5b0:	add	x24, x8, x9
  40b5b4:	mov	w0, w23
  40b5b8:	mov	x1, x24
  40b5bc:	bl	40c084 <wcrtomb@plt+0x96c4>
  40b5c0:	tbnz	w0, #0, 40b980 <wcrtomb@plt+0x8fc0>
  40b5c4:	add	x23, x23, #0x1
  40b5c8:	cmp	w23, #0x100
  40b5cc:	add	x27, x27, #0x1
  40b5d0:	b.ne	40b5b4 <wcrtomb@plt+0x8bf4>  // b.any
  40b5d4:	mov	w1, #0x2                   	// #2
  40b5d8:	mov	x0, x20
  40b5dc:	bl	40bca4 <wcrtomb@plt+0x92e4>
  40b5e0:	mov	x20, x0
  40b5e4:	mov	w8, wzr
  40b5e8:	mov	x23, x22
  40b5ec:	b	40b9e4 <wcrtomb@plt+0x9024>
  40b5f0:	mov	x0, x20
  40b5f4:	bl	40bd14 <wcrtomb@plt+0x9354>
  40b5f8:	mov	w8, wzr
  40b5fc:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b600:	ldr	x27, [x20, #40]
  40b604:	ldr	x1, [x20]
  40b608:	ldr	x0, [x27]
  40b60c:	bl	40beac <wcrtomb@plt+0x94ec>
  40b610:	ldr	x8, [x27, #16]
  40b614:	str	x0, [x27]
  40b618:	ldrb	w9, [x8]
  40b61c:	cbz	w9, 40b68c <wcrtomb@plt+0x8ccc>
  40b620:	ldr	x22, [x20, #8]
  40b624:	ldrb	w9, [x22]
  40b628:	cbz	w9, 40b68c <wcrtomb@plt+0x8ccc>
  40b62c:	mov	x0, x8
  40b630:	bl	402380 <strlen@plt>
  40b634:	mov	x23, x0
  40b638:	mov	x0, x22
  40b63c:	bl	402380 <strlen@plt>
  40b640:	add	x24, x0, x23
  40b644:	mov	x22, x0
  40b648:	mov	x0, x24
  40b64c:	bl	413ae8 <wcrtomb@plt+0x11128>
  40b650:	ldr	x1, [x27, #16]
  40b654:	mov	x2, x23
  40b658:	mov	x25, x0
  40b65c:	bl	402320 <memcpy@plt>
  40b660:	ldr	x1, [x20, #8]
  40b664:	add	x0, x25, x23
  40b668:	mov	x2, x22
  40b66c:	bl	402320 <memcpy@plt>
  40b670:	ldr	x0, [x27]
  40b674:	mov	x1, x25
  40b678:	mov	x2, x24
  40b67c:	bl	40bf04 <wcrtomb@plt+0x9544>
  40b680:	str	x0, [x27]
  40b684:	mov	x0, x25
  40b688:	bl	402770 <free@plt>
  40b68c:	ldr	x8, [x27, #24]
  40b690:	ldrb	w8, [x8]
  40b694:	cbz	w8, 40b6a8 <wcrtomb@plt+0x8ce8>
  40b698:	ldr	x0, [x27, #8]
  40b69c:	ldr	x1, [x20, #8]
  40b6a0:	bl	40c018 <wcrtomb@plt+0x9658>
  40b6a4:	str	x0, [x27, #8]
  40b6a8:	ldr	x8, [x20, #24]
  40b6ac:	ldrb	w8, [x8]
  40b6b0:	cbnz	w8, 40b6bc <wcrtomb@plt+0x8cfc>
  40b6b4:	ldr	x8, [x27, #16]
  40b6b8:	strb	wzr, [x8]
  40b6bc:	ldr	x0, [x27, #16]
  40b6c0:	ldr	x1, [x20, #16]
  40b6c4:	bl	40c018 <wcrtomb@plt+0x9658>
  40b6c8:	ldr	x8, [x27, #24]
  40b6cc:	str	x0, [x27, #16]
  40b6d0:	ldrb	w9, [x8]
  40b6d4:	cbnz	w9, 40b6e0 <wcrtomb@plt+0x8d20>
  40b6d8:	ldrb	w9, [x27, #32]
  40b6dc:	cbz	w9, 40bb58 <wcrtomb@plt+0x9198>
  40b6e0:	ldr	x1, [x20, #24]
  40b6e4:	ldrb	w9, [x1]
  40b6e8:	cbnz	w9, 40b6f4 <wcrtomb@plt+0x8d34>
  40b6ec:	ldrb	w9, [x20, #33]
  40b6f0:	cbz	w9, 40bb58 <wcrtomb@plt+0x9198>
  40b6f4:	mov	x0, x8
  40b6f8:	bl	40c018 <wcrtomb@plt+0x9658>
  40b6fc:	str	x0, [x27, #24]
  40b700:	ldrb	w9, [x20, #33]
  40b704:	b	40bb64 <wcrtomb@plt+0x91a4>
  40b708:	ldr	x9, [x20, #24]
  40b70c:	mov	w8, wzr
  40b710:	strb	wzr, [x9]
  40b714:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b718:	mov	w1, #0x2                   	// #2
  40b71c:	mov	x0, x20
  40b720:	bl	40bca4 <wcrtomb@plt+0x92e4>
  40b724:	mov	w10, #0x1                   	// #1
  40b728:	mov	w9, #0x1                   	// #1
  40b72c:	mov	x20, x0
  40b730:	mov	w8, wzr
  40b734:	str	w9, [sp, #12]
  40b738:	strb	w10, [x0, #33]
  40b73c:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b740:	mov	w1, #0x2                   	// #2
  40b744:	mov	x0, x20
  40b748:	bl	40bca4 <wcrtomb@plt+0x92e4>
  40b74c:	mov	w10, #0x1                   	// #1
  40b750:	mov	w9, #0x1                   	// #1
  40b754:	mov	x20, x0
  40b758:	mov	w8, wzr
  40b75c:	stur	w9, [x29, #-12]
  40b760:	strb	w10, [x0, #32]
  40b764:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b768:	ldr	x25, [x20, #40]
  40b76c:	ldr	x1, [x20, #24]
  40b770:	ldr	x22, [x25, #24]
  40b774:	mov	x0, x22
  40b778:	bl	40bd5c <wcrtomb@plt+0x939c>
  40b77c:	tbz	w0, #0, 40b84c <wcrtomb@plt+0x8e8c>
  40b780:	ldrb	w8, [x20, #32]
  40b784:	ldrb	w9, [x25, #32]
  40b788:	and	w8, w9, w8
  40b78c:	strb	w8, [x25, #32]
  40b790:	ldrb	w8, [x20, #33]
  40b794:	ldrb	w9, [x25, #33]
  40b798:	and	w8, w9, w8
  40b79c:	strb	w8, [x25, #33]
  40b7a0:	b	40b854 <wcrtomb@plt+0x8e94>
  40b7a4:	ldr	x8, [x20, #40]
  40b7a8:	cbnz	x8, 40bc84 <wcrtomb@plt+0x92c4>
  40b7ac:	ldr	x8, [x20]
  40b7b0:	ldr	x22, [x8]
  40b7b4:	cbz	x22, 40b7e4 <wcrtomb@plt+0x8e24>
  40b7b8:	ldr	x8, [x20]
  40b7bc:	add	x24, x8, #0x8
  40b7c0:	mov	x0, x22
  40b7c4:	bl	402380 <strlen@plt>
  40b7c8:	mov	x23, x0
  40b7cc:	mov	x0, x19
  40b7d0:	bl	402380 <strlen@plt>
  40b7d4:	cmp	x23, x0
  40b7d8:	csel	x19, x22, x19, hi  // hi = pmore
  40b7dc:	ldr	x22, [x24], #8
  40b7e0:	cbnz	x22, 40b7c0 <wcrtomb@plt+0x8e00>
  40b7e4:	ldr	x1, [x20, #24]
  40b7e8:	mov	x0, x19
  40b7ec:	bl	40bd5c <wcrtomb@plt+0x939c>
  40b7f0:	tbz	w0, #0, 40b844 <wcrtomb@plt+0x8e84>
  40b7f4:	ldur	w8, [x29, #-12]
  40b7f8:	tbz	w8, #0, 40b804 <wcrtomb@plt+0x8e44>
  40b7fc:	ldrb	w8, [x20, #32]
  40b800:	cbz	w8, 40b81c <wcrtomb@plt+0x8e5c>
  40b804:	ldr	w8, [sp, #12]
  40b808:	tbz	w8, #0, 40b814 <wcrtomb@plt+0x8e54>
  40b80c:	ldrb	w8, [x20, #33]
  40b810:	cbz	w8, 40b81c <wcrtomb@plt+0x8e5c>
  40b814:	mov	w8, #0x1                   	// #1
  40b818:	str	w8, [sp, #16]
  40b81c:	ldrb	w8, [x20, #32]
  40b820:	ldrb	w9, [x20, #33]
  40b824:	cmp	w8, #0x0
  40b828:	cset	w8, ne  // ne = any
  40b82c:	cmp	w9, #0x0
  40b830:	stur	w8, [x29, #-8]
  40b834:	cset	w8, ne  // ne = any
  40b838:	stur	w8, [x29, #-4]
  40b83c:	mov	w8, #0x11                  	// #17
  40b840:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b844:	mov	w8, #0x11                  	// #17
  40b848:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b84c:	strb	wzr, [x22]
  40b850:	strh	wzr, [x25, #32]
  40b854:	ldr	x9, [x25, #8]
  40b858:	ldrb	w10, [x9]
  40b85c:	cbz	w10, 40b898 <wcrtomb@plt+0x8ed8>
  40b860:	ldr	x8, [x20, #8]
  40b864:	ldrb	w11, [x8]
  40b868:	cmp	w10, w11
  40b86c:	b.ne	40b898 <wcrtomb@plt+0x8ed8>  // b.any
  40b870:	mov	w11, #0x1                   	// #1
  40b874:	ldr	x9, [x25, #8]
  40b878:	mov	x10, x11
  40b87c:	ldrb	w11, [x9, x11]
  40b880:	cbz	w11, 40b894 <wcrtomb@plt+0x8ed4>
  40b884:	ldrb	w12, [x8, x10]
  40b888:	cmp	w11, w12
  40b88c:	add	x11, x10, #0x1
  40b890:	b.eq	40b874 <wcrtomb@plt+0x8eb4>  // b.none
  40b894:	add	x9, x9, x10
  40b898:	strb	wzr, [x9]
  40b89c:	ldr	x23, [x25, #16]
  40b8a0:	mov	x0, x23
  40b8a4:	bl	402380 <strlen@plt>
  40b8a8:	ldr	x24, [x20, #16]
  40b8ac:	mov	x22, x0
  40b8b0:	mov	x0, x24
  40b8b4:	bl	402380 <strlen@plt>
  40b8b8:	cmp	x22, x0
  40b8bc:	csel	x9, x0, x22, gt
  40b8c0:	cmp	x9, #0x1
  40b8c4:	b.lt	40b910 <wcrtomb@plt+0x8f50>  // b.tstop
  40b8c8:	add	x10, x24, x0
  40b8cc:	add	x11, x23, x22
  40b8d0:	mov	x8, xzr
  40b8d4:	sub	x10, x10, #0x1
  40b8d8:	sub	x11, x11, #0x1
  40b8dc:	ldrb	w12, [x11]
  40b8e0:	ldrb	w13, [x10]
  40b8e4:	cmp	w12, w13
  40b8e8:	b.ne	40b904 <wcrtomb@plt+0x8f44>  // b.any
  40b8ec:	add	x8, x8, #0x1
  40b8f0:	sub	x10, x10, #0x1
  40b8f4:	cmp	x8, x9
  40b8f8:	sub	x11, x11, #0x1
  40b8fc:	b.lt	40b8dc <wcrtomb@plt+0x8f1c>  // b.tstop
  40b900:	mov	x8, x9
  40b904:	ldr	x9, [x25, #16]
  40b908:	cbnz	x8, 40b91c <wcrtomb@plt+0x8f5c>
  40b90c:	b	40b940 <wcrtomb@plt+0x8f80>
  40b910:	mov	x8, xzr
  40b914:	ldr	x9, [x25, #16]
  40b918:	cbz	x8, 40b940 <wcrtomb@plt+0x8f80>
  40b91c:	mov	x10, xzr
  40b920:	sub	x11, x22, x8
  40b924:	add	x12, x9, x11
  40b928:	ldrb	w12, [x12, x10]
  40b92c:	strb	w12, [x9, x10]
  40b930:	ldr	x9, [x25, #16]
  40b934:	add	x10, x10, #0x1
  40b938:	cmp	x8, x10
  40b93c:	b.ne	40b924 <wcrtomb@plt+0x8f64>  // b.any
  40b940:	strb	wzr, [x9, x8]
  40b944:	ldr	x0, [x25]
  40b948:	ldr	x1, [x20]
  40b94c:	bl	40bd78 <wcrtomb@plt+0x93b8>
  40b950:	ldr	x8, [x25]
  40b954:	mov	x22, x0
  40b958:	mov	x0, x8
  40b95c:	bl	40be2c <wcrtomb@plt+0x946c>
  40b960:	ldr	x0, [x25]
  40b964:	bl	402770 <free@plt>
  40b968:	mov	x0, x20
  40b96c:	str	x22, [x25]
  40b970:	bl	40be60 <wcrtomb@plt+0x94a0>
  40b974:	mov	w8, wzr
  40b978:	mov	x20, x25
  40b97c:	b	40bb80 <wcrtomb@plt+0x91c0>
  40b980:	cmp	w23, #0xfe
  40b984:	b.ls	40b99c <wcrtomb@plt+0x8fdc>  // b.plast
  40b988:	mov	w8, #0x1                   	// #1
  40b98c:	b	40b9e4 <wcrtomb@plt+0x9024>
  40b990:	add	x27, x27, #0x1
  40b994:	cmp	x27, #0xfe
  40b998:	b.cs	40b988 <wcrtomb@plt+0x8fc8>  // b.hs, b.nlast
  40b99c:	add	w0, w27, #0x2
  40b9a0:	mov	x1, x24
  40b9a4:	bl	40c084 <wcrtomb@plt+0x96c4>
  40b9a8:	tbz	w0, #0, 40b990 <wcrtomb@plt+0x8fd0>
  40b9ac:	tst	w28, #0xff
  40b9b0:	b.eq	40b9d0 <wcrtomb@plt+0x9010>  // b.none
  40b9b4:	add	w0, w27, #0x2
  40b9b8:	bl	4024f0 <toupper@plt>
  40b9bc:	mov	w22, w0
  40b9c0:	mov	w0, w23
  40b9c4:	bl	4024f0 <toupper@plt>
  40b9c8:	cmp	w22, w0
  40b9cc:	b.eq	40b990 <wcrtomb@plt+0x8fd0>  // b.none
  40b9d0:	mov	w1, #0x2                   	// #2
  40b9d4:	mov	x0, x20
  40b9d8:	bl	40bca4 <wcrtomb@plt+0x92e4>
  40b9dc:	mov	x20, x0
  40b9e0:	mov	w8, wzr
  40b9e4:	adrp	x27, 425000 <_obstack_memory_used@@Base+0xebcc>
  40b9e8:	add	x27, x27, #0xa8e
  40b9ec:	cbz	w8, 40bb80 <wcrtomb@plt+0x91c0>
  40b9f0:	mov	x22, x23
  40b9f4:	ldr	x10, [x21, #144]
  40b9f8:	add	x23, x26, #0x2
  40b9fc:	ldr	x8, [x10, x25, lsl #3]
  40ba00:	cmp	x8, #0x105
  40ba04:	b.ne	40ba74 <wcrtomb@plt+0x90b4>  // b.any
  40ba08:	ldr	x8, [x21, #152]
  40ba0c:	sub	x8, x8, #0x1
  40ba10:	cmp	x23, x8
  40ba14:	b.ge	40ba74 <wcrtomb@plt+0x90b4>  // b.tcont
  40ba18:	mov	x8, xzr
  40ba1c:	add	x9, x26, #0x2
  40ba20:	add	x10, x10, x26, lsl #3
  40ba24:	cmn	x8, #0x2
  40ba28:	b.eq	40ba40 <wcrtomb@plt+0x9080>  // b.none
  40ba2c:	add	x11, x10, x8, lsl #3
  40ba30:	ldr	x11, [x11, #16]
  40ba34:	sub	x11, x11, #0x1
  40ba38:	cmp	x11, #0xfe
  40ba3c:	b.hi	40ba6c <wcrtomb@plt+0x90ac>  // b.pmore
  40ba40:	add	x11, x10, x8, lsl #3
  40ba44:	ldr	x11, [x11, #24]
  40ba48:	cmp	x11, #0x105
  40ba4c:	b.ne	40ba74 <wcrtomb@plt+0x90b4>  // b.any
  40ba50:	ldr	x11, [x21, #152]
  40ba54:	add	x8, x8, #0x2
  40ba58:	add	x12, x9, x8
  40ba5c:	add	x23, x23, #0x2
  40ba60:	sub	x11, x11, #0x1
  40ba64:	cmp	x12, x11
  40ba68:	b.lt	40ba24 <wcrtomb@plt+0x9064>  // b.tstop
  40ba6c:	add	x8, x26, x8
  40ba70:	add	x23, x8, #0x2
  40ba74:	sub	x24, x23, x26
  40ba78:	asr	x8, x24, #1
  40ba7c:	add	x1, x8, #0x1
  40ba80:	mov	x0, x20
  40ba84:	and	w25, w28, #0xff
  40ba88:	bl	40bca4 <wcrtomb@plt+0x92e4>
  40ba8c:	mov	x20, x0
  40ba90:	cbz	w25, 40baa0 <wcrtomb@plt+0x90e0>
  40ba94:	mov	w0, w22
  40ba98:	bl	4024f0 <toupper@plt>
  40ba9c:	sxtw	x22, w0
  40baa0:	ldr	x8, [x20, #16]
  40baa4:	add	x9, x26, #0x2
  40baa8:	cmp	x9, x23
  40baac:	strb	w22, [x8]
  40bab0:	ldr	x8, [x20, #8]
  40bab4:	strb	w22, [x8]
  40bab8:	ldr	x8, [x20, #24]
  40babc:	strb	w22, [x8]
  40bac0:	b.ge	40bb20 <wcrtomb@plt+0x9160>  // b.tcont
  40bac4:	sub	x8, x24, #0x3
  40bac8:	neg	x23, x8, lsr #1
  40bacc:	mov	w22, #0x1                   	// #1
  40bad0:	b	40bb00 <wcrtomb@plt+0x9140>
  40bad4:	ldr	x8, [x20, #16]
  40bad8:	add	x26, x26, #0x2
  40badc:	strb	w0, [x8, x22]
  40bae0:	ldr	x8, [x20, #8]
  40bae4:	strb	w0, [x8, x22]
  40bae8:	ldr	x8, [x20, #24]
  40baec:	strb	w0, [x8, x22]
  40baf0:	add	x22, x22, #0x1
  40baf4:	add	x8, x23, x22
  40baf8:	cmp	x8, #0x2
  40bafc:	b.eq	40bb24 <wcrtomb@plt+0x9164>  // b.none
  40bb00:	ldr	x8, [x21, #144]
  40bb04:	tst	w28, #0xff
  40bb08:	add	x8, x8, x26, lsl #3
  40bb0c:	ldr	x0, [x8, #16]
  40bb10:	b.eq	40bad4 <wcrtomb@plt+0x9114>  // b.none
  40bb14:	bl	4024f0 <toupper@plt>
  40bb18:	sxtw	x0, w0
  40bb1c:	b	40bad4 <wcrtomb@plt+0x9114>
  40bb20:	mov	w22, #0x1                   	// #1
  40bb24:	ldr	x8, [x20, #16]
  40bb28:	mov	x2, x22
  40bb2c:	strb	wzr, [x8, x22]
  40bb30:	ldr	x8, [x20, #8]
  40bb34:	strb	wzr, [x8, x22]
  40bb38:	ldr	x8, [x20, #24]
  40bb3c:	strb	wzr, [x8, x22]
  40bb40:	ldr	x0, [x20]
  40bb44:	ldr	x1, [x20, #24]
  40bb48:	bl	40bf04 <wcrtomb@plt+0x9544>
  40bb4c:	mov	w8, wzr
  40bb50:	str	x0, [x20]
  40bb54:	b	40bb80 <wcrtomb@plt+0x91c0>
  40bb58:	mov	w9, wzr
  40bb5c:	strb	wzr, [x8]
  40bb60:	strb	wzr, [x27, #32]
  40bb64:	mov	x0, x20
  40bb68:	strb	w9, [x27, #33]
  40bb6c:	bl	40be60 <wcrtomb@plt+0x94a0>
  40bb70:	mov	x20, x27
  40bb74:	adrp	x27, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bb78:	mov	w8, wzr
  40bb7c:	add	x27, x27, #0xa8e
  40bb80:	cbnz	w8, 40bb9c <wcrtomb@plt+0x91dc>
  40bb84:	ldr	x8, [x21, #152]
  40bb88:	add	x25, x26, #0x2
  40bb8c:	add	x26, x26, #0x1
  40bb90:	cmp	x25, x8
  40bb94:	b.lt	40b54c <wcrtomb@plt+0x8b8c>  // b.tstop
  40bb98:	mov	w8, #0x2                   	// #2
  40bb9c:	ldr	w22, [sp, #16]
  40bba0:	ldp	w24, w23, [x29, #-8]
  40bba4:	cmp	w8, #0x11
  40bba8:	b.ne	40bbd4 <wcrtomb@plt+0x9214>  // b.any
  40bbac:	b	40bbdc <wcrtomb@plt+0x921c>
  40bbb0:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bbb4:	mov	w23, wzr
  40bbb8:	mov	w24, wzr
  40bbbc:	mov	w22, wzr
  40bbc0:	mov	x20, xzr
  40bbc4:	add	x19, x19, #0x2cd
  40bbc8:	mov	w8, #0x2                   	// #2
  40bbcc:	cmp	w8, #0x11
  40bbd0:	b.eq	40bbdc <wcrtomb@plt+0x921c>  // b.none
  40bbd4:	cmp	w8, #0x2
  40bbd8:	b.ne	40bc34 <wcrtomb@plt+0x9274>  // b.any
  40bbdc:	ldrb	w8, [x19]
  40bbe0:	cbz	w8, 40bc58 <wcrtomb@plt+0x9298>
  40bbe4:	mov	x0, x19
  40bbe8:	bl	402380 <strlen@plt>
  40bbec:	add	x0, x0, #0x4
  40bbf0:	bl	413ae8 <wcrtomb@plt+0x11128>
  40bbf4:	and	w8, w22, #0x1
  40bbf8:	and	w9, w24, #0x1
  40bbfc:	and	w10, w23, #0x1
  40bc00:	mov	x21, x0
  40bc04:	strb	w8, [x0]
  40bc08:	strb	w9, [x0, #1]
  40bc0c:	strb	w10, [x0, #2]
  40bc10:	add	x0, x0, #0x3
  40bc14:	mov	x1, x19
  40bc18:	bl	4027e0 <strcpy@plt>
  40bc1c:	cbz	x20, 40bc34 <wcrtomb@plt+0x9274>
  40bc20:	ldr	x19, [x20, #40]
  40bc24:	mov	x0, x20
  40bc28:	bl	40be60 <wcrtomb@plt+0x94a0>
  40bc2c:	mov	x20, x19
  40bc30:	cbnz	x19, 40bc20 <wcrtomb@plt+0x9260>
  40bc34:	mov	x0, x21
  40bc38:	ldp	x20, x19, [sp, #112]
  40bc3c:	ldp	x22, x21, [sp, #96]
  40bc40:	ldp	x24, x23, [sp, #80]
  40bc44:	ldp	x26, x25, [sp, #64]
  40bc48:	ldp	x28, x27, [sp, #48]
  40bc4c:	ldp	x29, x30, [sp, #32]
  40bc50:	add	sp, sp, #0x80
  40bc54:	ret
  40bc58:	mov	x21, xzr
  40bc5c:	cbnz	x20, 40bc20 <wcrtomb@plt+0x9260>
  40bc60:	b	40bc34 <wcrtomb@plt+0x9274>
  40bc64:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bc68:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bc6c:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bc70:	add	x0, x0, #0xd61
  40bc74:	add	x1, x1, #0xd8e
  40bc78:	add	x3, x3, #0xd94
  40bc7c:	mov	w2, #0xff6                 	// #4086
  40bc80:	bl	402920 <__assert_fail@plt>
  40bc84:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bc88:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bc8c:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  40bc90:	add	x0, x0, #0xdc0
  40bc94:	add	x1, x1, #0xd8e
  40bc98:	add	x3, x3, #0xd94
  40bc9c:	mov	w2, #0x1039                	// #4153
  40bca0:	bl	402920 <__assert_fail@plt>
  40bca4:	stp	x29, x30, [sp, #-48]!
  40bca8:	stp	x20, x19, [sp, #32]
  40bcac:	mov	x20, x0
  40bcb0:	mov	w0, #0x30                  	// #48
  40bcb4:	str	x21, [sp, #16]
  40bcb8:	mov	x29, sp
  40bcbc:	mov	x19, x1
  40bcc0:	bl	413ae8 <wcrtomb@plt+0x11128>
  40bcc4:	mov	x21, x0
  40bcc8:	mov	w0, #0x8                   	// #8
  40bccc:	bl	413c1c <wcrtomb@plt+0x1125c>
  40bcd0:	str	x0, [x21]
  40bcd4:	mov	x0, x19
  40bcd8:	bl	413c1c <wcrtomb@plt+0x1125c>
  40bcdc:	str	x0, [x21, #8]
  40bce0:	mov	x0, x19
  40bce4:	bl	413c1c <wcrtomb@plt+0x1125c>
  40bce8:	str	x0, [x21, #16]
  40bcec:	mov	x0, x19
  40bcf0:	bl	413c1c <wcrtomb@plt+0x1125c>
  40bcf4:	str	x0, [x21, #24]
  40bcf8:	strh	wzr, [x21, #32]
  40bcfc:	str	x20, [x21, #40]
  40bd00:	mov	x0, x21
  40bd04:	ldp	x20, x19, [sp, #32]
  40bd08:	ldr	x21, [sp, #16]
  40bd0c:	ldp	x29, x30, [sp], #48
  40bd10:	ret
  40bd14:	stp	x29, x30, [sp, #-32]!
  40bd18:	str	x19, [sp, #16]
  40bd1c:	mov	x19, x0
  40bd20:	ldr	x0, [x0]
  40bd24:	mov	x29, sp
  40bd28:	bl	40be2c <wcrtomb@plt+0x946c>
  40bd2c:	ldr	x8, [x19]
  40bd30:	str	xzr, [x8]
  40bd34:	ldr	x8, [x19, #24]
  40bd38:	strb	wzr, [x8]
  40bd3c:	ldr	x8, [x19, #16]
  40bd40:	strb	wzr, [x8]
  40bd44:	ldr	x8, [x19, #8]
  40bd48:	strb	wzr, [x8]
  40bd4c:	strh	wzr, [x19, #32]
  40bd50:	ldr	x19, [sp, #16]
  40bd54:	ldp	x29, x30, [sp], #32
  40bd58:	ret
  40bd5c:	stp	x29, x30, [sp, #-16]!
  40bd60:	mov	x29, sp
  40bd64:	bl	402750 <strcmp@plt>
  40bd68:	cmp	w0, #0x0
  40bd6c:	cset	w0, eq  // eq = none
  40bd70:	ldp	x29, x30, [sp], #16
  40bd74:	ret
  40bd78:	stp	x29, x30, [sp, #-80]!
  40bd7c:	stp	x20, x19, [sp, #64]
  40bd80:	mov	x20, x0
  40bd84:	mov	w0, #0x8                   	// #8
  40bd88:	stp	x26, x25, [sp, #16]
  40bd8c:	stp	x24, x23, [sp, #32]
  40bd90:	stp	x22, x21, [sp, #48]
  40bd94:	mov	x29, sp
  40bd98:	mov	x19, x1
  40bd9c:	bl	413c1c <wcrtomb@plt+0x1125c>
  40bda0:	ldr	x8, [x20]
  40bda4:	mov	x21, x0
  40bda8:	cbz	x8, 40be10 <wcrtomb@plt+0x9450>
  40bdac:	mov	x23, xzr
  40bdb0:	add	x24, x19, #0x8
  40bdb4:	mov	x25, x20
  40bdb8:	b	40bdcc <wcrtomb@plt+0x940c>
  40bdbc:	add	x23, x23, #0x1
  40bdc0:	add	x25, x20, x23, lsl #3
  40bdc4:	ldr	x8, [x25]
  40bdc8:	cbz	x8, 40be10 <wcrtomb@plt+0x9450>
  40bdcc:	ldr	x1, [x19]
  40bdd0:	mov	x26, x24
  40bdd4:	cbz	x1, 40bdbc <wcrtomb@plt+0x93fc>
  40bdd8:	ldr	x0, [x25]
  40bddc:	bl	40e594 <wcrtomb@plt+0xbbd4>
  40bde0:	mov	x22, x0
  40bde4:	mov	x0, x21
  40bde8:	mov	x1, x22
  40bdec:	bl	40beac <wcrtomb@plt+0x94ec>
  40bdf0:	mov	x21, x0
  40bdf4:	mov	x0, x22
  40bdf8:	bl	40be2c <wcrtomb@plt+0x946c>
  40bdfc:	mov	x0, x22
  40be00:	bl	402770 <free@plt>
  40be04:	ldr	x1, [x26], #8
  40be08:	cbnz	x1, 40bdd8 <wcrtomb@plt+0x9418>
  40be0c:	b	40bdbc <wcrtomb@plt+0x93fc>
  40be10:	mov	x0, x21
  40be14:	ldp	x20, x19, [sp, #64]
  40be18:	ldp	x22, x21, [sp, #48]
  40be1c:	ldp	x24, x23, [sp, #32]
  40be20:	ldp	x26, x25, [sp, #16]
  40be24:	ldp	x29, x30, [sp], #80
  40be28:	ret
  40be2c:	stp	x29, x30, [sp, #-32]!
  40be30:	mov	x8, x0
  40be34:	ldr	x0, [x0]
  40be38:	str	x19, [sp, #16]
  40be3c:	mov	x29, sp
  40be40:	cbz	x0, 40be54 <wcrtomb@plt+0x9494>
  40be44:	add	x19, x8, #0x8
  40be48:	bl	402770 <free@plt>
  40be4c:	ldr	x0, [x19], #8
  40be50:	cbnz	x0, 40be48 <wcrtomb@plt+0x9488>
  40be54:	ldr	x19, [sp, #16]
  40be58:	ldp	x29, x30, [sp], #32
  40be5c:	ret
  40be60:	stp	x29, x30, [sp, #-32]!
  40be64:	str	x19, [sp, #16]
  40be68:	mov	x19, x0
  40be6c:	ldr	x0, [x0]
  40be70:	mov	x29, sp
  40be74:	bl	40be2c <wcrtomb@plt+0x946c>
  40be78:	ldr	x0, [x19]
  40be7c:	bl	402770 <free@plt>
  40be80:	ldr	x0, [x19, #8]
  40be84:	bl	402770 <free@plt>
  40be88:	ldr	x0, [x19, #16]
  40be8c:	bl	402770 <free@plt>
  40be90:	ldr	x0, [x19, #24]
  40be94:	bl	402770 <free@plt>
  40be98:	mov	x0, x19
  40be9c:	bl	402770 <free@plt>
  40bea0:	ldr	x19, [sp, #16]
  40bea4:	ldp	x29, x30, [sp], #32
  40bea8:	ret
  40beac:	stp	x29, x30, [sp, #-48]!
  40beb0:	stp	x20, x19, [sp, #32]
  40beb4:	ldr	x20, [x1]
  40beb8:	mov	x19, x0
  40bebc:	str	x21, [sp, #16]
  40bec0:	mov	x29, sp
  40bec4:	cbz	x20, 40bef0 <wcrtomb@plt+0x9530>
  40bec8:	add	x21, x1, #0x8
  40becc:	mov	x0, x20
  40bed0:	bl	402380 <strlen@plt>
  40bed4:	mov	x2, x0
  40bed8:	mov	x0, x19
  40bedc:	mov	x1, x20
  40bee0:	bl	40bf04 <wcrtomb@plt+0x9544>
  40bee4:	ldr	x20, [x21], #8
  40bee8:	mov	x19, x0
  40beec:	cbnz	x20, 40becc <wcrtomb@plt+0x950c>
  40bef0:	mov	x0, x19
  40bef4:	ldp	x20, x19, [sp, #32]
  40bef8:	ldr	x21, [sp, #16]
  40befc:	ldp	x29, x30, [sp], #48
  40bf00:	ret
  40bf04:	stp	x29, x30, [sp, #-64]!
  40bf08:	stp	x20, x19, [sp, #48]
  40bf0c:	mov	x19, x0
  40bf10:	add	x0, x2, #0x1
  40bf14:	stp	x24, x23, [sp, #16]
  40bf18:	stp	x22, x21, [sp, #32]
  40bf1c:	mov	x29, sp
  40bf20:	mov	x21, x2
  40bf24:	mov	x22, x1
  40bf28:	bl	413ae8 <wcrtomb@plt+0x11128>
  40bf2c:	mov	x1, x22
  40bf30:	mov	x2, x21
  40bf34:	mov	x20, x0
  40bf38:	bl	402320 <memcpy@plt>
  40bf3c:	strb	wzr, [x20, x21]
  40bf40:	ldr	x0, [x19]
  40bf44:	cbz	x0, 40bf78 <wcrtomb@plt+0x95b8>
  40bf48:	mov	x21, xzr
  40bf4c:	mov	x1, x20
  40bf50:	bl	402880 <strstr@plt>
  40bf54:	cbnz	x0, 40bff8 <wcrtomb@plt+0x9638>
  40bf58:	add	x8, x19, x21, lsl #3
  40bf5c:	ldr	x0, [x8, #8]
  40bf60:	add	x22, x21, #0x1
  40bf64:	mov	x21, x22
  40bf68:	cbnz	x0, 40bf4c <wcrtomb@plt+0x958c>
  40bf6c:	ldr	x21, [x19]
  40bf70:	cbnz	x21, 40bf84 <wcrtomb@plt+0x95c4>
  40bf74:	b	40bfd8 <wcrtomb@plt+0x9618>
  40bf78:	mov	x22, xzr
  40bf7c:	ldr	x21, [x19]
  40bf80:	cbz	x21, 40bfd8 <wcrtomb@plt+0x9618>
  40bf84:	mov	x23, xzr
  40bf88:	mov	x24, x19
  40bf8c:	b	40bfa0 <wcrtomb@plt+0x95e0>
  40bf90:	add	x23, x23, #0x1
  40bf94:	add	x24, x19, x23, lsl #3
  40bf98:	ldr	x21, [x24]
  40bf9c:	cbz	x21, 40bfd8 <wcrtomb@plt+0x9618>
  40bfa0:	mov	x0, x20
  40bfa4:	mov	x1, x21
  40bfa8:	bl	402880 <strstr@plt>
  40bfac:	cbz	x0, 40bf90 <wcrtomb@plt+0x95d0>
  40bfb0:	mov	x0, x21
  40bfb4:	bl	402770 <free@plt>
  40bfb8:	sub	x22, x22, #0x1
  40bfbc:	cmp	x22, x23
  40bfc0:	b.eq	40bfd8 <wcrtomb@plt+0x9618>  // b.none
  40bfc4:	lsl	x8, x22, #3
  40bfc8:	ldr	x9, [x19, x8]
  40bfcc:	str	x9, [x24]
  40bfd0:	str	xzr, [x19, x8]
  40bfd4:	b	40bf94 <wcrtomb@plt+0x95d4>
  40bfd8:	add	x1, x22, #0x2
  40bfdc:	mov	w2, #0x8                   	// #8
  40bfe0:	mov	x0, x19
  40bfe4:	bl	413b14 <wcrtomb@plt+0x11154>
  40bfe8:	mov	x19, x0
  40bfec:	add	x8, x0, x22, lsl #3
  40bff0:	stp	x20, xzr, [x8]
  40bff4:	b	40c000 <wcrtomb@plt+0x9640>
  40bff8:	mov	x0, x20
  40bffc:	bl	402770 <free@plt>
  40c000:	mov	x0, x19
  40c004:	ldp	x20, x19, [sp, #48]
  40c008:	ldp	x22, x21, [sp, #32]
  40c00c:	ldp	x24, x23, [sp, #16]
  40c010:	ldp	x29, x30, [sp], #64
  40c014:	ret
  40c018:	stp	x29, x30, [sp, #-48]!
  40c01c:	stp	x20, x19, [sp, #32]
  40c020:	mov	x19, x0
  40c024:	mov	x0, x1
  40c028:	stp	x22, x21, [sp, #16]
  40c02c:	mov	x29, sp
  40c030:	mov	x20, x1
  40c034:	bl	402380 <strlen@plt>
  40c038:	cbz	x0, 40c070 <wcrtomb@plt+0x96b0>
  40c03c:	mov	x21, x0
  40c040:	mov	x0, x19
  40c044:	bl	402380 <strlen@plt>
  40c048:	add	x21, x21, #0x1
  40c04c:	mov	x22, x0
  40c050:	add	x1, x21, x0
  40c054:	mov	x0, x19
  40c058:	bl	413b40 <wcrtomb@plt+0x11180>
  40c05c:	mov	x19, x0
  40c060:	add	x0, x0, x22
  40c064:	mov	x1, x20
  40c068:	mov	x2, x21
  40c06c:	bl	402320 <memcpy@plt>
  40c070:	mov	x0, x19
  40c074:	ldp	x20, x19, [sp, #32]
  40c078:	ldp	x22, x21, [sp, #16]
  40c07c:	ldp	x29, x30, [sp], #48
  40c080:	ret
  40c084:	lsr	w8, w0, #6
  40c088:	ldr	x8, [x1, w8, uxtw #3]
  40c08c:	lsr	x8, x8, x0
  40c090:	and	w0, w8, #0x1
  40c094:	ret
  40c098:	stp	x29, x30, [sp, #-16]!
  40c09c:	mov	x29, sp
  40c0a0:	bl	402770 <free@plt>
  40c0a4:	ldp	x29, x30, [sp], #16
  40c0a8:	ret
  40c0ac:	stp	x29, x30, [sp, #-16]!
  40c0b0:	mov	w0, #0x920                 	// #2336
  40c0b4:	mov	x29, sp
  40c0b8:	bl	413ae8 <wcrtomb@plt+0x11128>
  40c0bc:	ldp	x29, x30, [sp], #16
  40c0c0:	ret
  40c0c4:	stp	x29, x30, [sp, #-64]!
  40c0c8:	stp	x22, x21, [sp, #32]
  40c0cc:	stp	x20, x19, [sp, #48]
  40c0d0:	mov	x22, x2
  40c0d4:	mov	x20, x1
  40c0d8:	mov	w2, #0x410                 	// #1040
  40c0dc:	mov	w1, wzr
  40c0e0:	stp	x24, x23, [sp, #16]
  40c0e4:	mov	x29, sp
  40c0e8:	mov	w21, w3
  40c0ec:	mov	x19, x0
  40c0f0:	bl	4025b0 <memset@plt>
  40c0f4:	ldrb	w8, [x20]
  40c0f8:	adrp	x9, 40c000 <wcrtomb@plt+0x9640>
  40c0fc:	adrp	x10, 40c000 <wcrtomb@plt+0x9640>
  40c100:	add	x9, x9, #0x210
  40c104:	add	x10, x10, #0x22c
  40c108:	cmp	w8, #0x0
  40c10c:	csel	x8, x10, x9, eq  // eq = none
  40c110:	add	x0, x19, #0x418
  40c114:	mov	w2, #0x504                 	// #1284
  40c118:	mov	x1, x20
  40c11c:	str	x8, [x19, #1040]
  40c120:	bl	402320 <memcpy@plt>
  40c124:	ldrb	w8, [x19, #1048]
  40c128:	mov	x9, #0xffffffffffffffff    	// #-1
  40c12c:	add	x10, x19, #0x1c0
  40c130:	mov	w23, #0x1                   	// #1
  40c134:	eor	w8, w8, #0x1
  40c138:	strb	w8, [x19, #192]
  40c13c:	ubfx	w8, w22, #22, #1
  40c140:	str	x9, [x19, #24]
  40c144:	strb	w23, [x19, #456]
  40c148:	strb	w8, [x10, #9]
  40c14c:	and	w8, w21, #0x1
  40c150:	tst	w21, #0x2
  40c154:	strb	w8, [x10, #10]
  40c158:	mov	w8, #0xa                   	// #10
  40c15c:	csel	w8, w8, wzr, eq  // eq = none
  40c160:	strb	w8, [x10, #11]
  40c164:	str	x22, [x19, #448]
  40c168:	mov	x22, #0x2401                	// #9217
  40c16c:	mov	x20, xzr
  40c170:	add	x21, x19, #0x3f0
  40c174:	add	x24, x19, #0x3d0
  40c178:	movk	x22, #0xc000, lsl #32
  40c17c:	b	40c1ac <wcrtomb@plt+0x97ec>
  40c180:	cmp	x20, #0x40
  40c184:	lsl	x8, x23, x20
  40c188:	cset	w9, cc  // cc = lo, ul, last
  40c18c:	tst	x8, x22
  40c190:	cset	w8, ne  // ne = any
  40c194:	and	w8, w9, w8
  40c198:	add	x9, x19, x20
  40c19c:	add	x20, x20, #0x1
  40c1a0:	cmp	x20, #0x100
  40c1a4:	strb	w8, [x9, #716]
  40c1a8:	b.eq	40c1fc <wcrtomb@plt+0x983c>  // b.none
  40c1ac:	mov	x0, x19
  40c1b0:	mov	w1, w20
  40c1b4:	bl	40c248 <wcrtomb@plt+0x9888>
  40c1b8:	and	w8, w0, #0xff
  40c1bc:	add	x9, x19, x20
  40c1c0:	cmp	w8, #0x2
  40c1c4:	mov	x1, x24
  40c1c8:	strb	w0, [x9, #460]
  40c1cc:	b.eq	40c1dc <wcrtomb@plt+0x981c>  // b.none
  40c1d0:	cmp	w8, #0x4
  40c1d4:	b.ne	40c1e4 <wcrtomb@plt+0x9824>  // b.any
  40c1d8:	mov	x1, x21
  40c1dc:	mov	w0, w20
  40c1e0:	bl	40c288 <wcrtomb@plt+0x98c8>
  40c1e4:	ldrb	w8, [x19, #1050]
  40c1e8:	cbz	w8, 40c180 <wcrtomb@plt+0x97c0>
  40c1ec:	and	x8, x20, #0xc0
  40c1f0:	cmp	x8, #0x80
  40c1f4:	cset	w8, ne  // ne = any
  40c1f8:	b	40c198 <wcrtomb@plt+0x97d8>
  40c1fc:	ldp	x20, x19, [sp, #48]
  40c200:	ldp	x22, x21, [sp, #32]
  40c204:	ldp	x24, x23, [sp, #16]
  40c208:	ldp	x29, x30, [sp], #64
  40c20c:	ret
  40c210:	stp	x29, x30, [sp, #-16]!
  40c214:	and	w3, w3, #0x1
  40c218:	mov	w5, #0x1                   	// #1
  40c21c:	mov	x29, sp
  40c220:	bl	40e674 <wcrtomb@plt+0xbcb4>
  40c224:	ldp	x29, x30, [sp], #16
  40c228:	ret
  40c22c:	stp	x29, x30, [sp, #-16]!
  40c230:	and	w3, w3, #0x1
  40c234:	mov	w5, wzr
  40c238:	mov	x29, sp
  40c23c:	bl	40e674 <wcrtomb@plt+0xbcb4>
  40c240:	ldp	x29, x30, [sp], #16
  40c244:	ret
  40c248:	stp	x29, x30, [sp, #-16]!
  40c24c:	ldrb	w8, [x0, #459]
  40c250:	mov	x29, sp
  40c254:	cmp	w8, w1, uxtb
  40c258:	b.ne	40c264 <wcrtomb@plt+0x98a4>  // b.any
  40c25c:	ldrb	w8, [x0, #458]
  40c260:	cbz	w8, 40c27c <wcrtomb@plt+0x98bc>
  40c264:	bl	40f868 <wcrtomb@plt+0xcea8>
  40c268:	tst	w0, #0x1
  40c26c:	mov	w8, #0x1                   	// #1
  40c270:	cinc	w0, w8, ne  // ne = any
  40c274:	ldp	x29, x30, [sp], #16
  40c278:	ret
  40c27c:	mov	w0, #0x4                   	// #4
  40c280:	ldp	x29, x30, [sp], #16
  40c284:	ret
  40c288:	lsr	w8, w0, #6
  40c28c:	lsl	x8, x8, #3
  40c290:	ldr	x9, [x1, x8]
  40c294:	mov	w10, #0x1                   	// #1
  40c298:	lsl	x10, x10, x0
  40c29c:	orr	x9, x9, x10
  40c2a0:	str	x9, [x1, x8]
  40c2a4:	ret
  40c2a8:	stp	x29, x30, [sp, #-32]!
  40c2ac:	movi	v0.2d, #0x0
  40c2b0:	mov	x8, #0xffffffffffffffff    	// #-1
  40c2b4:	stp	x20, x19, [sp, #16]
  40c2b8:	stp	q0, q0, [x0, #416]
  40c2bc:	stp	q0, q0, [x0, #384]
  40c2c0:	stp	q0, q0, [x0, #352]
  40c2c4:	stp	q0, q0, [x0, #320]
  40c2c8:	stp	q0, q0, [x0, #288]
  40c2cc:	stp	q0, q0, [x0, #256]
  40c2d0:	stp	q0, q0, [x0, #224]
  40c2d4:	stp	q0, q0, [x0, #192]
  40c2d8:	stp	q0, q0, [x0, #160]
  40c2dc:	stp	q0, q0, [x0, #128]
  40c2e0:	stp	q0, q0, [x0, #96]
  40c2e4:	stp	q0, q0, [x0, #64]
  40c2e8:	stp	q0, q0, [x0, #32]
  40c2ec:	stp	q0, q0, [x0]
  40c2f0:	str	x8, [x0, #24]
  40c2f4:	ldrb	w8, [x1, #192]
  40c2f8:	mov	x19, x1
  40c2fc:	mov	x20, x0
  40c300:	add	x0, x0, #0x1c0
  40c304:	add	x1, x1, #0x1c0
  40c308:	mov	w2, #0x250                 	// #592
  40c30c:	mov	x29, sp
  40c310:	strb	w8, [x20, #192]
  40c314:	bl	402320 <memcpy@plt>
  40c318:	ldr	x8, [x19, #1040]
  40c31c:	add	x0, x20, #0x418
  40c320:	add	x1, x19, #0x418
  40c324:	mov	w2, #0x504                 	// #1284
  40c328:	str	x8, [x20, #1040]
  40c32c:	bl	402320 <memcpy@plt>
  40c330:	ldp	x20, x19, [sp, #16]
  40c334:	ldp	x29, x30, [sp], #32
  40c338:	ret
  40c33c:	sub	sp, sp, #0x50
  40c340:	stp	x20, x19, [sp, #64]
  40c344:	mov	x19, x0
  40c348:	add	x0, sp, #0x10
  40c34c:	add	x2, sp, #0x8
  40c350:	stp	x29, x30, [sp, #32]
  40c354:	stp	x22, x21, [sp, #48]
  40c358:	add	x29, sp, #0x20
  40c35c:	str	xzr, [sp, #8]
  40c360:	bl	4029c0 <wcrtomb@plt>
  40c364:	cmn	x0, #0x1
  40c368:	b.eq	40c374 <wcrtomb@plt+0x99b4>  // b.none
  40c36c:	mov	x20, x0
  40c370:	b	40c37c <wcrtomb@plt+0x99bc>
  40c374:	mov	w20, #0x1                   	// #1
  40c378:	strb	wzr, [sp, #16]
  40c37c:	ldrb	w1, [sp, #16]
  40c380:	subs	w21, w20, #0x1
  40c384:	mov	w8, #0x3                   	// #3
  40c388:	csinc	w2, w8, wzr, eq  // eq = none
  40c38c:	mov	x0, x19
  40c390:	bl	40c3f4 <wcrtomb@plt+0x9a34>
  40c394:	cmp	w20, #0x2
  40c398:	b.lt	40c3e0 <wcrtomb@plt+0x9a20>  // b.tstop
  40c39c:	mov	w8, w20
  40c3a0:	add	x9, sp, #0x10
  40c3a4:	sub	x20, x21, #0x1
  40c3a8:	orr	x21, x9, #0x1
  40c3ac:	sub	x22, x8, #0x1
  40c3b0:	ldrb	w1, [x21], #1
  40c3b4:	cmp	x20, #0x0
  40c3b8:	cset	w8, eq  // eq = none
  40c3bc:	lsl	w2, w8, #1
  40c3c0:	mov	x0, x19
  40c3c4:	bl	40c3f4 <wcrtomb@plt+0x9a34>
  40c3c8:	mov	w1, #0x105                 	// #261
  40c3cc:	mov	x0, x19
  40c3d0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40c3d4:	subs	x22, x22, #0x1
  40c3d8:	sub	x20, x20, #0x1
  40c3dc:	b.ne	40c3b0 <wcrtomb@plt+0x99f0>  // b.any
  40c3e0:	ldp	x20, x19, [sp, #64]
  40c3e4:	ldp	x22, x21, [sp, #48]
  40c3e8:	ldp	x29, x30, [sp, #32]
  40c3ec:	add	sp, sp, #0x50
  40c3f0:	ret
  40c3f4:	stp	x29, x30, [sp, #-48]!
  40c3f8:	str	x21, [sp, #16]
  40c3fc:	stp	x20, x19, [sp, #32]
  40c400:	mov	x8, x0
  40c404:	ldr	x9, [x8, #160]!
  40c408:	mov	w21, w2
  40c40c:	mov	x19, x0
  40c410:	mov	x20, x1
  40c414:	ldur	x10, [x8, #-8]
  40c418:	mov	x29, sp
  40c41c:	cmp	x9, x10
  40c420:	b.ne	40c45c <wcrtomb@plt+0x9a9c>  // b.any
  40c424:	ldr	x0, [x19, #144]
  40c428:	mov	w2, #0x1                   	// #1
  40c42c:	mov	x3, #0xffffffffffffffff    	// #-1
  40c430:	mov	w4, #0x8                   	// #8
  40c434:	mov	x1, x8
  40c438:	bl	40c4f0 <wcrtomb@plt+0x9b30>
  40c43c:	ldrb	w8, [x19, #1048]
  40c440:	str	x0, [x19, #144]
  40c444:	cbz	w8, 40c45c <wcrtomb@plt+0x9a9c>
  40c448:	ldr	x0, [x19, #280]
  40c44c:	ldr	x1, [x19, #160]
  40c450:	mov	w2, #0x1                   	// #1
  40c454:	bl	413b14 <wcrtomb@plt+0x11154>
  40c458:	str	x0, [x19, #280]
  40c45c:	ldrb	w8, [x19, #1048]
  40c460:	cbz	w8, 40c470 <wcrtomb@plt+0x9ab0>
  40c464:	ldr	x8, [x19, #280]
  40c468:	ldr	x9, [x19, #152]
  40c46c:	strb	w21, [x8, x9]
  40c470:	ldp	x10, x9, [x19, #144]
  40c474:	sub	x8, x20, #0x100
  40c478:	cmp	x8, #0x12
  40c47c:	add	x11, x9, #0x1
  40c480:	str	x11, [x19, #152]
  40c484:	str	x20, [x10, x9, lsl #3]
  40c488:	b.hi	40c4b4 <wcrtomb@plt+0x9af4>  // b.pmore
  40c48c:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xebcc>
  40c490:	add	x9, x9, #0xab6
  40c494:	adr	x10, 40c4a4 <wcrtomb@plt+0x9ae4>
  40c498:	ldrb	w11, [x9, x8]
  40c49c:	add	x10, x10, x11, lsl #2
  40c4a0:	br	x10
  40c4a4:	ldr	x8, [x19, #136]
  40c4a8:	sub	x8, x8, #0x1
  40c4ac:	b	40c4c8 <wcrtomb@plt+0x9b08>
  40c4b0:	strb	wzr, [x19, #192]
  40c4b4:	ldr	x8, [x19, #176]
  40c4b8:	add	x8, x8, #0x1
  40c4bc:	str	x8, [x19, #176]
  40c4c0:	ldr	x8, [x19, #136]
  40c4c4:	add	x8, x8, #0x1
  40c4c8:	str	x8, [x19, #136]
  40c4cc:	ldr	x8, [x19, #136]
  40c4d0:	ldr	x9, [x19, #168]
  40c4d4:	cmp	x8, x9
  40c4d8:	b.le	40c4e0 <wcrtomb@plt+0x9b20>
  40c4dc:	str	x8, [x19, #168]
  40c4e0:	ldp	x20, x19, [sp, #32]
  40c4e4:	ldr	x21, [sp, #16]
  40c4e8:	ldp	x29, x30, [sp], #48
  40c4ec:	ret
  40c4f0:	stp	x29, x30, [sp, #-32]!
  40c4f4:	stp	x20, x19, [sp, #16]
  40c4f8:	ldr	x8, [x1]
  40c4fc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c500:	mov	x19, x1
  40c504:	mov	x29, sp
  40c508:	adds	x10, x8, x8, asr #1
  40c50c:	csel	x9, x9, x10, vs
  40c510:	cmp	x9, x3
  40c514:	mov	x10, #0xffffffffffffffff    	// #-1
  40c518:	ccmp	x3, x10, #0x4, gt
  40c51c:	csel	x20, x3, x9, gt
  40c520:	tbnz	x4, #63, 40c534 <wcrtomb@plt+0x9b74>
  40c524:	cbz	x4, 40c56c <wcrtomb@plt+0x9bac>
  40c528:	tbnz	x20, #63, 40c554 <wcrtomb@plt+0x9b94>
  40c52c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c530:	b	40c544 <wcrtomb@plt+0x9b84>
  40c534:	tbnz	x20, #63, 40c5f4 <wcrtomb@plt+0x9c34>
  40c538:	cmn	x4, #0x1
  40c53c:	b.eq	40c56c <wcrtomb@plt+0x9bac>  // b.none
  40c540:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c544:	sdiv	x9, x9, x4
  40c548:	cmp	x9, x20
  40c54c:	b.ge	40c56c <wcrtomb@plt+0x9bac>  // b.tcont
  40c550:	b	40c604 <wcrtomb@plt+0x9c44>
  40c554:	cmn	x20, #0x1
  40c558:	b.eq	40c56c <wcrtomb@plt+0x9bac>  // b.none
  40c55c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c560:	sdiv	x9, x9, x20
  40c564:	cmp	x9, x4
  40c568:	b.lt	40c604 <wcrtomb@plt+0x9c44>  // b.tstop
  40c56c:	mul	x1, x20, x4
  40c570:	cmp	x1, #0x80
  40c574:	cset	w9, lt  // lt = tstop
  40c578:	lsl	x9, x9, #7
  40c57c:	cbz	x9, 40c588 <wcrtomb@plt+0x9bc8>
  40c580:	sdiv	x20, x9, x4
  40c584:	mul	x1, x20, x4
  40c588:	cbnz	x0, 40c590 <wcrtomb@plt+0x9bd0>
  40c58c:	str	xzr, [x19]
  40c590:	sub	x9, x20, x8
  40c594:	cmp	x9, x2
  40c598:	b.ge	40c644 <wcrtomb@plt+0x9c84>  // b.tcont
  40c59c:	cmp	x3, #0x0
  40c5a0:	cset	w9, ge  // ge = tcont
  40c5a4:	adds	x20, x8, x2
  40c5a8:	cset	w10, vs
  40c5ac:	cmp	x20, x3
  40c5b0:	cset	w8, gt
  40c5b4:	tbnz	w10, #0, 40c62c <wcrtomb@plt+0x9c6c>
  40c5b8:	and	w8, w9, w8
  40c5bc:	tbnz	w8, #0, 40c62c <wcrtomb@plt+0x9c6c>
  40c5c0:	tbnz	x4, #63, 40c5d4 <wcrtomb@plt+0x9c14>
  40c5c4:	cbz	x4, 40c640 <wcrtomb@plt+0x9c80>
  40c5c8:	tbnz	x20, #63, 40c614 <wcrtomb@plt+0x9c54>
  40c5cc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c5d0:	b	40c5e4 <wcrtomb@plt+0x9c24>
  40c5d4:	tbnz	x20, #63, 40c630 <wcrtomb@plt+0x9c70>
  40c5d8:	cmn	x4, #0x1
  40c5dc:	b.eq	40c640 <wcrtomb@plt+0x9c80>  // b.none
  40c5e0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c5e4:	sdiv	x8, x8, x4
  40c5e8:	cmp	x8, x20
  40c5ec:	b.ge	40c640 <wcrtomb@plt+0x9c80>  // b.tcont
  40c5f0:	b	40c62c <wcrtomb@plt+0x9c6c>
  40c5f4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c5f8:	sdiv	x9, x9, x4
  40c5fc:	cmp	x20, x9
  40c600:	b.ge	40c56c <wcrtomb@plt+0x9bac>  // b.tcont
  40c604:	mul	x1, x20, x4
  40c608:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c60c:	cbnz	x9, 40c580 <wcrtomb@plt+0x9bc0>
  40c610:	b	40c588 <wcrtomb@plt+0x9bc8>
  40c614:	cmn	x20, #0x1
  40c618:	b.eq	40c640 <wcrtomb@plt+0x9c80>  // b.none
  40c61c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c620:	sdiv	x8, x8, x20
  40c624:	cmp	x8, x4
  40c628:	b.ge	40c640 <wcrtomb@plt+0x9c80>  // b.tcont
  40c62c:	bl	413cd0 <wcrtomb@plt+0x11310>
  40c630:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c634:	sdiv	x8, x8, x4
  40c638:	cmp	x20, x8
  40c63c:	b.lt	40c62c <wcrtomb@plt+0x9c6c>  // b.tstop
  40c640:	mul	x1, x20, x4
  40c644:	bl	413b40 <wcrtomb@plt+0x11180>
  40c648:	str	x20, [x19]
  40c64c:	ldp	x20, x19, [sp, #16]
  40c650:	ldp	x29, x30, [sp], #32
  40c654:	ret
  40c658:	stp	x29, x30, [sp, #-32]!
  40c65c:	stp	x20, x19, [sp, #16]
  40c660:	ldp	x1, x2, [x0, #32]
  40c664:	mov	x19, x0
  40c668:	add	x0, x0, #0x48
  40c66c:	mov	x3, x19
  40c670:	mov	x29, sp
  40c674:	bl	40ce14 <wcrtomb@plt+0xa454>
  40c678:	mov	w20, w0
  40c67c:	cmp	w0, #0x1
  40c680:	b.ne	40c698 <wcrtomb@plt+0x9cd8>  // b.any
  40c684:	ldr	x8, [x19, #32]
  40c688:	ldrb	w0, [x8]
  40c68c:	bl	40ce90 <wcrtomb@plt+0xa4d0>
  40c690:	and	w0, w0, #0xff
  40c694:	b	40c69c <wcrtomb@plt+0x9cdc>
  40c698:	mov	w0, #0xffffffff            	// #-1
  40c69c:	ldp	x8, x9, [x19, #32]
  40c6a0:	sxtw	x10, w20
  40c6a4:	add	x8, x8, x10
  40c6a8:	sub	x9, x9, x10
  40c6ac:	stp	x8, x9, [x19, #32]
  40c6b0:	ldp	x20, x19, [sp, #16]
  40c6b4:	ldp	x29, x30, [sp], #32
  40c6b8:	ret
  40c6bc:	sub	w8, w0, #0x30
  40c6c0:	and	w8, w8, #0xff
  40c6c4:	cmp	w8, #0xa
  40c6c8:	cset	w0, cc  // cc = lo, ul, last
  40c6cc:	ret
  40c6d0:	movi	v0.2d, #0xffffffffffffffff
  40c6d4:	stp	q0, q0, [x0]
  40c6d8:	ret
  40c6dc:	lsr	w8, w0, #6
  40c6e0:	lsl	x8, x8, #3
  40c6e4:	ldr	x9, [x1, x8]
  40c6e8:	mov	w10, #0x1                   	// #1
  40c6ec:	lsl	x10, x10, x0
  40c6f0:	bic	x9, x9, x10
  40c6f4:	str	x9, [x1, x8]
  40c6f8:	ret
  40c6fc:	stp	x29, x30, [sp, #-48]!
  40c700:	stp	x22, x21, [sp, #16]
  40c704:	stp	x20, x19, [sp, #32]
  40c708:	ldr	x8, [x0, #8]
  40c70c:	mov	x20, x0
  40c710:	mov	x19, x1
  40c714:	mov	x29, sp
  40c718:	cmp	x8, #0x1
  40c71c:	b.lt	40c750 <wcrtomb@plt+0x9d90>  // b.tstop
  40c720:	ldr	x22, [x20]
  40c724:	mov	x21, xzr
  40c728:	mov	x0, x19
  40c72c:	mov	x1, x22
  40c730:	bl	40ce94 <wcrtomb@plt+0xa4d4>
  40c734:	tbnz	w0, #0, 40c788 <wcrtomb@plt+0x9dc8>
  40c738:	ldr	x8, [x20, #8]
  40c73c:	add	x21, x21, #0x1
  40c740:	add	x22, x22, #0x20
  40c744:	cmp	x21, x8
  40c748:	b.lt	40c728 <wcrtomb@plt+0x9d68>  // b.tstop
  40c74c:	b	40c754 <wcrtomb@plt+0x9d94>
  40c750:	mov	x21, xzr
  40c754:	ldr	x0, [x20]
  40c758:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40c75c:	add	x2, x20, #0x10
  40c760:	movk	x3, #0x7fff, lsl #48
  40c764:	mov	w4, #0x20                  	// #32
  40c768:	mov	x1, x8
  40c76c:	bl	40cec4 <wcrtomb@plt+0xa504>
  40c770:	ldr	x8, [x20, #8]
  40c774:	add	x8, x8, #0x1
  40c778:	stp	x0, x8, [x20]
  40c77c:	ldp	q0, q1, [x19]
  40c780:	add	x8, x0, x21, lsl #5
  40c784:	stp	q0, q1, [x8]
  40c788:	mov	x0, x21
  40c78c:	ldp	x20, x19, [sp, #32]
  40c790:	ldp	x22, x21, [sp, #16]
  40c794:	ldp	x29, x30, [sp], #48
  40c798:	ret
  40c79c:	movi	v0.2d, #0x0
  40c7a0:	stp	q0, q0, [x0]
  40c7a4:	ret
  40c7a8:	mov	x8, xzr
  40c7ac:	ldr	x9, [x0, x8]
  40c7b0:	mvn	x9, x9
  40c7b4:	str	x9, [x0, x8]
  40c7b8:	add	x8, x8, #0x8
  40c7bc:	cmp	x8, #0x20
  40c7c0:	b.ne	40c7ac <wcrtomb@plt+0x9dec>  // b.any
  40c7c4:	ret
  40c7c8:	stp	x29, x30, [sp, #-32]!
  40c7cc:	ldr	x8, [x0, #32]
  40c7d0:	str	x19, [sp, #16]
  40c7d4:	mov	x19, x0
  40c7d8:	mov	x29, sp
  40c7dc:	str	x8, [x1]
  40c7e0:	ldr	x8, [x0, #40]
  40c7e4:	str	x8, [x1, #8]
  40c7e8:	str	x2, [x0, #32]
  40c7ec:	mov	x0, x2
  40c7f0:	bl	402380 <strlen@plt>
  40c7f4:	str	x0, [x19, #40]
  40c7f8:	ldr	x19, [sp, #16]
  40c7fc:	ldp	x29, x30, [sp], #32
  40c800:	ret
  40c804:	sub	sp, sp, #0x120
  40c808:	stp	x29, x30, [sp, #192]
  40c80c:	add	x29, sp, #0xc0
  40c810:	stp	x28, x27, [sp, #208]
  40c814:	stp	x26, x25, [sp, #224]
  40c818:	stp	x24, x23, [sp, #240]
  40c81c:	stp	x22, x21, [sp, #256]
  40c820:	stp	x20, x19, [sp, #272]
  40c824:	mov	x19, x0
  40c828:	str	xzr, [x0, #104]
  40c82c:	sub	x0, x29, #0x28
  40c830:	bl	40c79c <wcrtomb@plt+0x9ddc>
  40c834:	mov	x0, x19
  40c838:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c83c:	cmp	w0, #0x5e
  40c840:	cset	w8, eq  // eq = none
  40c844:	stp	w8, w0, [sp]
  40c848:	b.ne	40c868 <wcrtomb@plt+0x9ea8>  // b.any
  40c84c:	mov	x0, x19
  40c850:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c854:	ldrb	w8, [x19, #1049]
  40c858:	mov	w26, w0
  40c85c:	cmp	w8, #0x0
  40c860:	cset	w28, ne  // ne = any
  40c864:	b	40c870 <wcrtomb@plt+0x9eb0>
  40c868:	mov	w28, #0x1                   	// #1
  40c86c:	mov	w26, w0
  40c870:	ldr	w27, [x19, #72]
  40c874:	cmp	w26, #0x3a
  40c878:	add	x20, sp, #0x14
  40c87c:	add	x21, x19, #0x70
  40c880:	cset	w24, eq  // eq = none
  40c884:	add	x8, x20, #0x4
  40c888:	str	x8, [sp, #8]
  40c88c:	b	40c8bc <wcrtomb@plt+0x9efc>
  40c890:	mov	w23, w28
  40c894:	mov	x0, x19
  40c898:	orr	w24, w24, #0x8
  40c89c:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c8a0:	ldr	w22, [x19, #72]
  40c8a4:	mov	w25, w0
  40c8a8:	mov	w28, w23
  40c8ac:	cmp	w25, #0x5d
  40c8b0:	mov	w26, w25
  40c8b4:	mov	w27, w22
  40c8b8:	b.eq	40ccbc <wcrtomb@plt+0xa2fc>  // b.none
  40c8bc:	cmp	w26, #0x5b
  40c8c0:	and	w24, w24, #0xfffffffd
  40c8c4:	b.ne	40c954 <wcrtomb@plt+0x9f94>  // b.any
  40c8c8:	mov	x0, x19
  40c8cc:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c8d0:	ldr	w22, [x19, #72]
  40c8d4:	mov	w25, w0
  40c8d8:	cmp	w0, #0x3a
  40c8dc:	b.ne	40c8e8 <wcrtomb@plt+0x9f28>  // b.any
  40c8e0:	ldrb	w8, [x19, #448]
  40c8e4:	tbnz	w8, #2, 40c8f8 <wcrtomb@plt+0x9f38>
  40c8e8:	cmp	w25, #0x3d
  40c8ec:	b.eq	40c8f8 <wcrtomb@plt+0x9f38>  // b.none
  40c8f0:	cmp	w25, #0x2e
  40c8f4:	b.ne	40c958 <wcrtomb@plt+0x9f98>  // b.any
  40c8f8:	mov	x0, x19
  40c8fc:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c900:	ldr	x8, [x19, #40]
  40c904:	cbz	x8, 40ca3c <wcrtomb@plt+0xa07c>
  40c908:	mov	w22, wzr
  40c90c:	b	40c924 <wcrtomb@plt+0x9f64>
  40c910:	strb	wzr, [sp, #20]
  40c914:	mov	x0, x19
  40c918:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c91c:	ldr	x8, [x19, #40]
  40c920:	cbz	x8, 40ca40 <wcrtomb@plt+0xa080>
  40c924:	cmp	w0, w25
  40c928:	b.ne	40c93c <wcrtomb@plt+0x9f7c>  // b.any
  40c92c:	ldr	x8, [x19, #32]
  40c930:	ldrb	w8, [x8]
  40c934:	cmp	w8, #0x5d
  40c938:	b.eq	40ca40 <wcrtomb@plt+0xa080>  // b.none
  40c93c:	cmp	w22, #0x1f
  40c940:	b.gt	40c910 <wcrtomb@plt+0x9f50>
  40c944:	add	w8, w22, #0x1
  40c948:	strb	w0, [x20, w22, sxtw]
  40c94c:	mov	w22, w8
  40c950:	b	40c914 <wcrtomb@plt+0x9f54>
  40c954:	mov	w25, #0x100                 	// #256
  40c958:	cmp	w26, #0x5c
  40c95c:	b.ne	40c978 <wcrtomb@plt+0x9fb8>  // b.any
  40c960:	ldrb	w8, [x19, #448]
  40c964:	tbnz	w8, #0, 40c99c <wcrtomb@plt+0x9fdc>
  40c968:	mov	w26, #0x5c                  	// #92
  40c96c:	cmp	w25, #0x100
  40c970:	b.ne	40c9b4 <wcrtomb@plt+0x9ff4>  // b.any
  40c974:	b	40c980 <wcrtomb@plt+0x9fc0>
  40c978:	cmp	w25, #0x100
  40c97c:	b.ne	40c9b4 <wcrtomb@plt+0x9ff4>  // b.any
  40c980:	mov	x0, x19
  40c984:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c988:	ldr	w22, [x19, #72]
  40c98c:	mov	w25, w0
  40c990:	cmp	w25, #0x2d
  40c994:	b.ne	40cb70 <wcrtomb@plt+0xa1b0>  // b.any
  40c998:	b	40c9bc <wcrtomb@plt+0x9ffc>
  40c99c:	mov	x0, x19
  40c9a0:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c9a4:	ldr	w27, [x19, #72]
  40c9a8:	mov	w26, w0
  40c9ac:	cmp	w25, #0x100
  40c9b0:	b.eq	40c980 <wcrtomb@plt+0x9fc0>  // b.none
  40c9b4:	cmp	w25, #0x2d
  40c9b8:	b.ne	40cb70 <wcrtomb@plt+0xa1b0>  // b.any
  40c9bc:	mov	x0, x19
  40c9c0:	mov	w20, w28
  40c9c4:	bl	40cef0 <wcrtomb@plt+0xa530>
  40c9c8:	ldr	w23, [x19, #72]
  40c9cc:	cmp	w0, #0x5b
  40c9d0:	b.ne	40ca20 <wcrtomb@plt+0xa060>  // b.any
  40c9d4:	ldr	x8, [x19, #32]
  40c9d8:	mov	w9, #0x5d                  	// #93
  40c9dc:	ldrb	w8, [x8]
  40c9e0:	cmp	w8, #0x2e
  40c9e4:	cset	w8, ne  // ne = any
  40c9e8:	and	w20, w20, w8
  40c9ec:	mov	w8, #0x5b                  	// #91
  40c9f0:	csel	w28, w9, w8, eq  // eq = none
  40c9f4:	cmp	w28, #0x5c
  40c9f8:	b.eq	40ca2c <wcrtomb@plt+0xa06c>  // b.none
  40c9fc:	cmp	w28, #0x5d
  40ca00:	b.ne	40cb04 <wcrtomb@plt+0xa144>  // b.any
  40ca04:	ldp	x9, x10, [x19, #32]
  40ca08:	mov	w8, #0x1                   	// #1
  40ca0c:	mov	w25, #0x2d                  	// #45
  40ca10:	sub	x9, x9, #0x1
  40ca14:	add	x10, x10, #0x1
  40ca18:	stp	x9, x10, [x19, #32]
  40ca1c:	b	40cb64 <wcrtomb@plt+0xa1a4>
  40ca20:	mov	w28, w0
  40ca24:	cmp	w28, #0x5c
  40ca28:	b.ne	40c9fc <wcrtomb@plt+0xa03c>  // b.any
  40ca2c:	ldrb	w8, [x19, #448]
  40ca30:	tbnz	w8, #0, 40caf4 <wcrtomb@plt+0xa134>
  40ca34:	mov	w28, #0x5c                  	// #92
  40ca38:	b	40cb04 <wcrtomb@plt+0xa144>
  40ca3c:	mov	w22, wzr
  40ca40:	mov	x0, x19
  40ca44:	strb	wzr, [x20, w22, sxtw]
  40ca48:	bl	40cef0 <wcrtomb@plt+0xa530>
  40ca4c:	cmp	w25, #0x3a
  40ca50:	mov	w23, wzr
  40ca54:	b.ne	40c894 <wcrtomb@plt+0x9ed4>  // b.any
  40ca58:	ldrb	w8, [x19, #457]
  40ca5c:	cbz	w8, 40caa0 <wcrtomb@plt+0xa0e0>
  40ca60:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40ca64:	add	x0, sp, #0x14
  40ca68:	add	x1, x1, #0xe2a
  40ca6c:	bl	40bd5c <wcrtomb@plt+0x939c>
  40ca70:	mov	w8, w0
  40ca74:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  40ca78:	add	x0, x0, #0xe36
  40ca7c:	tbnz	w8, #0, 40caa4 <wcrtomb@plt+0xa0e4>
  40ca80:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40ca84:	add	x0, sp, #0x14
  40ca88:	add	x1, x1, #0xe30
  40ca8c:	bl	40bd5c <wcrtomb@plt+0x939c>
  40ca90:	mov	w8, w0
  40ca94:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  40ca98:	add	x0, x0, #0xe36
  40ca9c:	tbnz	w8, #0, 40caa4 <wcrtomb@plt+0xa0e4>
  40caa0:	add	x0, sp, #0x14
  40caa4:	bl	40cf24 <wcrtomb@plt+0xa564>
  40caa8:	cbz	x0, 40cd8c <wcrtomb@plt+0xa3cc>
  40caac:	ldrb	w8, [x19, #1048]
  40cab0:	mov	x23, x0
  40cab4:	cbz	w8, 40cac0 <wcrtomb@plt+0xa100>
  40cab8:	ldrb	w8, [x23, #16]
  40cabc:	cbz	w8, 40cc58 <wcrtomb@plt+0xa298>
  40cac0:	mov	w25, wzr
  40cac4:	b	40cad4 <wcrtomb@plt+0xa114>
  40cac8:	add	w25, w25, #0x1
  40cacc:	cmp	w25, #0x100
  40cad0:	b.eq	40c890 <wcrtomb@plt+0x9ed0>  // b.none
  40cad4:	ldr	x8, [x23, #8]
  40cad8:	mov	w0, w25
  40cadc:	blr	x8
  40cae0:	cbz	w0, 40cac8 <wcrtomb@plt+0xa108>
  40cae4:	sub	x1, x29, #0x28
  40cae8:	mov	w0, w25
  40caec:	bl	40c288 <wcrtomb@plt+0x98c8>
  40caf0:	b	40cac8 <wcrtomb@plt+0xa108>
  40caf4:	mov	x0, x19
  40caf8:	bl	40cef0 <wcrtomb@plt+0xa530>
  40cafc:	ldr	w23, [x19, #72]
  40cb00:	mov	w28, w0
  40cb04:	mov	x0, x19
  40cb08:	orr	w24, w24, #0x8
  40cb0c:	bl	40cef0 <wcrtomb@plt+0xa530>
  40cb10:	ldr	w22, [x19, #72]
  40cb14:	cmn	w27, #0x1
  40cb18:	mov	w25, w0
  40cb1c:	b.eq	40cb30 <wcrtomb@plt+0xa170>  // b.none
  40cb20:	cmp	w27, w23
  40cb24:	b.ne	40cb30 <wcrtomb@plt+0xa170>  // b.any
  40cb28:	mov	w8, #0x1                   	// #1
  40cb2c:	b	40cb64 <wcrtomb@plt+0xa1a4>
  40cb30:	ldrb	w8, [x19, #1049]
  40cb34:	cbnz	w8, 40cb58 <wcrtomb@plt+0xa198>
  40cb38:	mov	w0, w26
  40cb3c:	bl	40c6bc <wcrtomb@plt+0x9cfc>
  40cb40:	mov	w23, w0
  40cb44:	mov	w0, w28
  40cb48:	bl	40c6bc <wcrtomb@plt+0x9cfc>
  40cb4c:	mov	w8, wzr
  40cb50:	tbz	w23, #0, 40ccac <wcrtomb@plt+0xa2ec>
  40cb54:	tbz	w0, #0, 40ccac <wcrtomb@plt+0xa2ec>
  40cb58:	cmp	w26, w28
  40cb5c:	b.le	40cc60 <wcrtomb@plt+0xa2a0>
  40cb60:	mov	w8, wzr
  40cb64:	mov	w28, w20
  40cb68:	add	x20, sp, #0x14
  40cb6c:	cbz	w8, 40c8ac <wcrtomb@plt+0x9eec>
  40cb70:	ldrb	w8, [x19, #1048]
  40cb74:	cmp	w26, #0x3a
  40cb78:	mov	w9, #0x4                   	// #4
  40cb7c:	mov	w10, #0x2                   	// #2
  40cb80:	csel	w9, w10, w9, eq  // eq = none
  40cb84:	orr	w24, w24, w9
  40cb88:	cbz	w8, 40cbb0 <wcrtomb@plt+0xa1f0>
  40cb8c:	cmn	w27, #0x1
  40cb90:	b.eq	40cbd8 <wcrtomb@plt+0xa218>  // b.none
  40cb94:	ldrb	w8, [x19, #457]
  40cb98:	cbz	w8, 40cbe0 <wcrtomb@plt+0xa220>
  40cb9c:	ldr	x1, [sp, #8]
  40cba0:	mov	w0, w27
  40cba4:	bl	40fa04 <wcrtomb@plt+0xd044>
  40cba8:	add	w8, w0, #0x1
  40cbac:	b	40cbe4 <wcrtomb@plt+0xa224>
  40cbb0:	ldrb	w8, [x19, #457]
  40cbb4:	cbz	w8, 40cbc8 <wcrtomb@plt+0xa208>
  40cbb8:	bl	402760 <__ctype_b_loc@plt>
  40cbbc:	ldr	x8, [x0]
  40cbc0:	ldrh	w8, [x8, w26, sxtw #1]
  40cbc4:	tbnz	w8, #10, 40cc48 <wcrtomb@plt+0xa288>
  40cbc8:	sub	x1, x29, #0x28
  40cbcc:	mov	w0, w26
  40cbd0:	bl	40c288 <wcrtomb@plt+0x98c8>
  40cbd4:	b	40c8ac <wcrtomb@plt+0x9eec>
  40cbd8:	mov	w28, wzr
  40cbdc:	b	40c8ac <wcrtomb@plt+0x9eec>
  40cbe0:	mov	w8, #0x1                   	// #1
  40cbe4:	cmp	w8, #0x1
  40cbe8:	str	w27, [sp, #20]
  40cbec:	b.lt	40c8ac <wcrtomb@plt+0x9eec>  // b.tstop
  40cbf0:	mov	w23, w8
  40cbf4:	add	x26, sp, #0x14
  40cbf8:	b	40cc08 <wcrtomb@plt+0xa248>
  40cbfc:	subs	x23, x23, #0x1
  40cc00:	add	x26, x26, #0x4
  40cc04:	b.eq	40c8ac <wcrtomb@plt+0x9eec>  // b.none
  40cc08:	ldr	w0, [x26]
  40cc0c:	sub	x1, x29, #0x28
  40cc10:	bl	40cf98 <wcrtomb@plt+0xa5d8>
  40cc14:	tbnz	w0, #0, 40cbfc <wcrtomb@plt+0xa23c>
  40cc18:	ldp	x0, x1, [x19, #96]
  40cc1c:	mov	x3, #0xffffffffffffffff    	// #-1
  40cc20:	mov	w4, #0x4                   	// #4
  40cc24:	mov	x2, x21
  40cc28:	bl	40cec4 <wcrtomb@plt+0xa504>
  40cc2c:	ldr	x8, [x19, #104]
  40cc30:	str	x0, [x19, #96]
  40cc34:	ldr	w9, [x26]
  40cc38:	add	x10, x8, #0x1
  40cc3c:	str	x10, [x19, #104]
  40cc40:	str	w9, [x0, x8, lsl #2]
  40cc44:	b	40cbfc <wcrtomb@plt+0xa23c>
  40cc48:	sub	x1, x29, #0x28
  40cc4c:	mov	w0, w26
  40cc50:	bl	40cdb4 <wcrtomb@plt+0xa3f4>
  40cc54:	b	40c8ac <wcrtomb@plt+0x9eec>
  40cc58:	mov	w23, wzr
  40cc5c:	b	40c894 <wcrtomb@plt+0x9ed4>
  40cc60:	sxtw	x23, w26
  40cc64:	sxtw	x28, w28
  40cc68:	b	40cc84 <wcrtomb@plt+0xa2c4>
  40cc6c:	sub	x1, x29, #0x28
  40cc70:	mov	w0, w23
  40cc74:	bl	40c288 <wcrtomb@plt+0x98c8>
  40cc78:	cmp	x23, x28
  40cc7c:	add	x23, x23, #0x1
  40cc80:	b.ge	40cb60 <wcrtomb@plt+0xa1a0>  // b.tcont
  40cc84:	ldrb	w8, [x19, #457]
  40cc88:	cbz	w8, 40cc6c <wcrtomb@plt+0xa2ac>
  40cc8c:	bl	402760 <__ctype_b_loc@plt>
  40cc90:	ldr	x8, [x0]
  40cc94:	ldrh	w8, [x8, x23, lsl #1]
  40cc98:	tbz	w8, #10, 40cc6c <wcrtomb@plt+0xa2ac>
  40cc9c:	sub	x1, x29, #0x28
  40cca0:	mov	w0, w23
  40cca4:	bl	40cdb4 <wcrtomb@plt+0xa3f4>
  40cca8:	b	40cc78 <wcrtomb@plt+0xa2b8>
  40ccac:	mov	w28, w8
  40ccb0:	add	x20, sp, #0x14
  40ccb4:	cbz	w8, 40c8ac <wcrtomb@plt+0x9eec>
  40ccb8:	b	40cb70 <wcrtomb@plt+0xa1b0>
  40ccbc:	cmp	w24, #0x7
  40ccc0:	b.ne	40ccdc <wcrtomb@plt+0xa31c>  // b.any
  40ccc4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40ccc8:	add	x1, x1, #0xe54
  40cccc:	mov	w2, #0x5                   	// #5
  40ccd0:	mov	x0, xzr
  40ccd4:	bl	402890 <dcgettext@plt>
  40ccd8:	bl	402afc <wcrtomb@plt+0x13c>
  40ccdc:	ldr	w9, [sp, #4]
  40cce0:	tbz	w28, #0, 40cd18 <wcrtomb@plt+0xa358>
  40cce4:	ldrb	w8, [x19, #1048]
  40cce8:	cbz	w8, 40cd20 <wcrtomb@plt+0xa360>
  40ccec:	cmp	w9, #0x5e
  40ccf0:	b.eq	40ccfc <wcrtomb@plt+0xa33c>  // b.none
  40ccf4:	ldr	x8, [x19, #104]
  40ccf8:	cbz	x8, 40cd20 <wcrtomb@plt+0xa360>
  40ccfc:	ldr	w8, [sp]
  40cd00:	sub	x0, x29, #0x28
  40cd04:	strb	w8, [x19, #88]
  40cd08:	bl	40cfd0 <wcrtomb@plt+0xa610>
  40cd0c:	tbz	w0, #0, 40cd58 <wcrtomb@plt+0xa398>
  40cd10:	mov	x0, #0xffffffffffffffff    	// #-1
  40cd14:	b	40cd64 <wcrtomb@plt+0xa3a4>
  40cd18:	mov	w0, #0x112                 	// #274
  40cd1c:	b	40cd6c <wcrtomb@plt+0xa3ac>
  40cd20:	cmp	w9, #0x5e
  40cd24:	b.ne	40cd44 <wcrtomb@plt+0xa384>  // b.any
  40cd28:	sub	x0, x29, #0x28
  40cd2c:	bl	40c7a8 <wcrtomb@plt+0x9de8>
  40cd30:	ldrb	w8, [x19, #449]
  40cd34:	tbz	w8, #0, 40cd44 <wcrtomb@plt+0xa384>
  40cd38:	sub	x1, x29, #0x28
  40cd3c:	mov	w0, #0xa                   	// #10
  40cd40:	bl	40c6dc <wcrtomb@plt+0x9d1c>
  40cd44:	sub	x1, x29, #0x28
  40cd48:	mov	x0, x19
  40cd4c:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40cd50:	add	x0, x0, #0x114
  40cd54:	b	40cd6c <wcrtomb@plt+0xa3ac>
  40cd58:	sub	x1, x29, #0x28
  40cd5c:	mov	x0, x19
  40cd60:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40cd64:	str	x0, [x19, #80]
  40cd68:	mov	w0, #0x113                 	// #275
  40cd6c:	ldp	x20, x19, [sp, #272]
  40cd70:	ldp	x22, x21, [sp, #256]
  40cd74:	ldp	x24, x23, [sp, #240]
  40cd78:	ldp	x26, x25, [sp, #224]
  40cd7c:	ldp	x28, x27, [sp, #208]
  40cd80:	ldp	x29, x30, [sp, #192]
  40cd84:	add	sp, sp, #0x120
  40cd88:	ret
  40cd8c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40cd90:	add	x1, x1, #0xe3c
  40cd94:	mov	w2, #0x5                   	// #5
  40cd98:	bl	402890 <dcgettext@plt>
  40cd9c:	bl	402adc <wcrtomb@plt+0x11c>
  40cda0:	ldr	x8, [x1]
  40cda4:	str	x8, [x0, #32]
  40cda8:	ldr	x8, [x1, #8]
  40cdac:	str	x8, [x0, #40]
  40cdb0:	ret
  40cdb4:	stp	x29, x30, [sp, #-48]!
  40cdb8:	str	x21, [sp, #16]
  40cdbc:	stp	x20, x19, [sp, #32]
  40cdc0:	mov	x29, sp
  40cdc4:	mov	x19, x1
  40cdc8:	bl	4024f0 <toupper@plt>
  40cdcc:	mov	w20, w0
  40cdd0:	mov	x21, xzr
  40cdd4:	b	40cde4 <wcrtomb@plt+0xa424>
  40cdd8:	add	x21, x21, #0x1
  40cddc:	cmp	x21, #0x100
  40cde0:	b.eq	40ce04 <wcrtomb@plt+0xa444>  // b.none
  40cde4:	mov	w0, w21
  40cde8:	bl	4024f0 <toupper@plt>
  40cdec:	cmp	w0, w20
  40cdf0:	b.ne	40cdd8 <wcrtomb@plt+0xa418>  // b.any
  40cdf4:	mov	w0, w21
  40cdf8:	mov	x1, x19
  40cdfc:	bl	40c288 <wcrtomb@plt+0x98c8>
  40ce00:	b	40cdd8 <wcrtomb@plt+0xa418>
  40ce04:	ldp	x20, x19, [sp, #32]
  40ce08:	ldr	x21, [sp, #16]
  40ce0c:	ldp	x29, x30, [sp], #48
  40ce10:	ret
  40ce14:	stp	x29, x30, [sp, #-48]!
  40ce18:	stp	x20, x19, [sp, #32]
  40ce1c:	ldrb	w8, [x1]
  40ce20:	str	x21, [sp, #16]
  40ce24:	mov	x19, x0
  40ce28:	mov	x29, sp
  40ce2c:	add	x8, x3, x8, lsl #2
  40ce30:	ldr	w21, [x8, #1308]
  40ce34:	cmn	w21, #0x1
  40ce38:	b.ne	40ce78 <wcrtomb@plt+0xa4b8>  // b.any
  40ce3c:	add	x20, x3, #0x110
  40ce40:	add	x0, x29, #0x1c
  40ce44:	mov	x3, x20
  40ce48:	bl	41609c <wcrtomb@plt+0x136dc>
  40ce4c:	sub	x8, x0, #0x1
  40ce50:	cmn	x8, #0x4
  40ce54:	b.hi	40ce6c <wcrtomb@plt+0xa4ac>  // b.pmore
  40ce58:	ldr	w9, [x29, #28]
  40ce5c:	mov	w8, wzr
  40ce60:	str	w9, [x19]
  40ce64:	cbnz	w8, 40ce78 <wcrtomb@plt+0xa4b8>
  40ce68:	b	40ce80 <wcrtomb@plt+0xa4c0>
  40ce6c:	mov	w8, #0x1                   	// #1
  40ce70:	str	xzr, [x20]
  40ce74:	cbz	w8, 40ce80 <wcrtomb@plt+0xa4c0>
  40ce78:	mov	w0, #0x1                   	// #1
  40ce7c:	str	w21, [x19]
  40ce80:	ldp	x20, x19, [sp, #32]
  40ce84:	ldr	x21, [sp, #16]
  40ce88:	ldp	x29, x30, [sp], #48
  40ce8c:	ret
  40ce90:	ret
  40ce94:	mov	x9, xzr
  40ce98:	mov	x8, xzr
  40ce9c:	ldr	x10, [x0, x9]
  40cea0:	ldr	x11, [x1, x9]
  40cea4:	add	x9, x9, #0x8
  40cea8:	cmp	x9, #0x20
  40ceac:	eor	x10, x11, x10
  40ceb0:	orr	x8, x10, x8
  40ceb4:	b.ne	40ce9c <wcrtomb@plt+0xa4dc>  // b.any
  40ceb8:	cmp	x8, #0x0
  40cebc:	cset	w0, eq  // eq = none
  40cec0:	ret
  40cec4:	stp	x29, x30, [sp, #-16]!
  40cec8:	ldr	x9, [x2]
  40cecc:	mov	x29, sp
  40ced0:	cmp	x9, x1
  40ced4:	b.gt	40cee8 <wcrtomb@plt+0xa528>
  40ced8:	mov	x8, x2
  40cedc:	mov	w2, #0x1                   	// #1
  40cee0:	mov	x1, x8
  40cee4:	bl	40c4f0 <wcrtomb@plt+0x9b30>
  40cee8:	ldp	x29, x30, [sp], #16
  40ceec:	ret
  40cef0:	stp	x29, x30, [sp, #-16]!
  40cef4:	ldr	x8, [x0, #40]
  40cef8:	mov	x29, sp
  40cefc:	cbz	x8, 40cf0c <wcrtomb@plt+0xa54c>
  40cf00:	bl	40c658 <wcrtomb@plt+0x9c98>
  40cf04:	ldp	x29, x30, [sp], #16
  40cf08:	ret
  40cf0c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40cf10:	add	x1, x1, #0xe89
  40cf14:	mov	w2, #0x5                   	// #5
  40cf18:	mov	x0, xzr
  40cf1c:	bl	402890 <dcgettext@plt>
  40cf20:	bl	402adc <wcrtomb@plt+0x11c>
  40cf24:	stp	x29, x30, [sp, #-48]!
  40cf28:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40cf2c:	add	x1, x1, #0xe36
  40cf30:	str	x21, [sp, #16]
  40cf34:	stp	x20, x19, [sp, #32]
  40cf38:	mov	x29, sp
  40cf3c:	mov	x19, x0
  40cf40:	bl	40bd5c <wcrtomb@plt+0x939c>
  40cf44:	adrp	x20, 425000 <_obstack_memory_used@@Base+0xebcc>
  40cf48:	add	x20, x20, #0xad0
  40cf4c:	tbnz	w0, #0, 40cf84 <wcrtomb@plt+0xa5c4>
  40cf50:	mov	x8, xzr
  40cf54:	add	x21, x8, #0x18
  40cf58:	cmp	x21, #0x120
  40cf5c:	b.eq	40cf80 <wcrtomb@plt+0xa5c0>  // b.none
  40cf60:	add	x8, x20, x8
  40cf64:	ldr	x1, [x8, #24]
  40cf68:	mov	x0, x19
  40cf6c:	bl	40bd5c <wcrtomb@plt+0x939c>
  40cf70:	mov	x8, x21
  40cf74:	tbz	w0, #0, 40cf54 <wcrtomb@plt+0xa594>
  40cf78:	add	x20, x20, x21
  40cf7c:	b	40cf84 <wcrtomb@plt+0xa5c4>
  40cf80:	mov	x20, xzr
  40cf84:	mov	x0, x20
  40cf88:	ldp	x20, x19, [sp, #32]
  40cf8c:	ldr	x21, [sp, #16]
  40cf90:	ldp	x29, x30, [sp], #48
  40cf94:	ret
  40cf98:	stp	x29, x30, [sp, #-32]!
  40cf9c:	str	x19, [sp, #16]
  40cfa0:	mov	x29, sp
  40cfa4:	mov	x19, x1
  40cfa8:	bl	402490 <wctob@plt>
  40cfac:	tbnz	w0, #31, 40cfc0 <wcrtomb@plt+0xa600>
  40cfb0:	mov	x1, x19
  40cfb4:	bl	40c288 <wcrtomb@plt+0x98c8>
  40cfb8:	mov	w0, #0x1                   	// #1
  40cfbc:	b	40cfc4 <wcrtomb@plt+0xa604>
  40cfc0:	mov	w0, wzr
  40cfc4:	ldr	x19, [sp, #16]
  40cfc8:	ldp	x29, x30, [sp], #32
  40cfcc:	ret
  40cfd0:	mov	x9, xzr
  40cfd4:	mov	x8, xzr
  40cfd8:	ldr	x10, [x0, x9]
  40cfdc:	add	x9, x9, #0x8
  40cfe0:	cmp	x9, #0x20
  40cfe4:	orr	x8, x10, x8
  40cfe8:	b.ne	40cfd8 <wcrtomb@plt+0xa618>  // b.any
  40cfec:	cmp	x8, #0x0
  40cff0:	cset	w0, eq  // eq = none
  40cff4:	ret
  40cff8:	stp	x29, x30, [sp, #-32]!
  40cffc:	str	x19, [sp, #16]
  40d000:	mov	x29, sp
  40d004:	mov	x19, x0
  40d008:	bl	40d048 <wcrtomb@plt+0xa688>
  40d00c:	ldr	x8, [x19, #128]
  40d010:	cmp	x8, #0x106
  40d014:	b.eq	40d03c <wcrtomb@plt+0xa67c>  // b.none
  40d018:	cmp	x8, #0x108
  40d01c:	b.eq	40d03c <wcrtomb@plt+0xa67c>  // b.none
  40d020:	tbnz	x8, #63, 40d03c <wcrtomb@plt+0xa67c>
  40d024:	mov	x0, x19
  40d028:	bl	40d048 <wcrtomb@plt+0xa688>
  40d02c:	mov	w1, #0x105                 	// #261
  40d030:	mov	x0, x19
  40d034:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d038:	b	40d00c <wcrtomb@plt+0xa64c>
  40d03c:	ldr	x19, [sp, #16]
  40d040:	ldp	x29, x30, [sp], #32
  40d044:	ret
  40d048:	stp	x29, x30, [sp, #-48]!
  40d04c:	stp	x22, x21, [sp, #16]
  40d050:	stp	x20, x19, [sp, #32]
  40d054:	mov	x29, sp
  40d058:	mov	x19, x0
  40d05c:	bl	40d1b0 <wcrtomb@plt+0xa7f0>
  40d060:	ldr	x1, [x19, #128]
  40d064:	sub	x8, x1, #0x101
  40d068:	cmp	x8, #0x3
  40d06c:	b.hi	40d1a0 <wcrtomb@plt+0xa7e0>  // b.pmore
  40d070:	cmp	x1, #0x104
  40d074:	b.ne	40d17c <wcrtomb@plt+0xa7bc>  // b.any
  40d078:	ldr	w8, [x19, #64]
  40d07c:	cbnz	w8, 40d088 <wcrtomb@plt+0xa6c8>
  40d080:	ldr	w8, [x19, #68]
  40d084:	cbz	w8, 40d144 <wcrtomb@plt+0xa784>
  40d088:	ldr	x21, [x19, #152]
  40d08c:	mov	x0, x19
  40d090:	mov	x1, x21
  40d094:	bl	40d2ec <wcrtomb@plt+0xa92c>
  40d098:	ldr	w8, [x19, #68]
  40d09c:	mov	x20, x0
  40d0a0:	tbz	w8, #31, 40d0b0 <wcrtomb@plt+0xa6f0>
  40d0a4:	mov	w1, #0x103                 	// #259
  40d0a8:	mov	x0, x19
  40d0ac:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d0b0:	ldr	w8, [x19, #64]
  40d0b4:	sub	x21, x21, x20
  40d0b8:	cbnz	w8, 40d0c8 <wcrtomb@plt+0xa708>
  40d0bc:	mov	w1, #0x101                 	// #257
  40d0c0:	mov	x0, x19
  40d0c4:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d0c8:	ldr	w8, [x19, #64]
  40d0cc:	mov	w22, #0x1                   	// #1
  40d0d0:	cmp	w8, #0x2
  40d0d4:	b.lt	40d104 <wcrtomb@plt+0xa744>  // b.tstop
  40d0d8:	mov	x0, x19
  40d0dc:	mov	x1, x21
  40d0e0:	mov	x2, x20
  40d0e4:	bl	40d374 <wcrtomb@plt+0xa9b4>
  40d0e8:	mov	w1, #0x105                 	// #261
  40d0ec:	mov	x0, x19
  40d0f0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d0f4:	ldr	w8, [x19, #64]
  40d0f8:	add	w22, w22, #0x1
  40d0fc:	cmp	w22, w8
  40d100:	b.lt	40d0d8 <wcrtomb@plt+0xa718>  // b.tstop
  40d104:	ldr	w8, [x19, #68]
  40d108:	cmp	w22, w8
  40d10c:	b.ge	40d184 <wcrtomb@plt+0xa7c4>  // b.tcont
  40d110:	mov	x0, x19
  40d114:	mov	x1, x21
  40d118:	mov	x2, x20
  40d11c:	bl	40d374 <wcrtomb@plt+0xa9b4>
  40d120:	mov	w1, #0x101                 	// #257
  40d124:	mov	x0, x19
  40d128:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d12c:	mov	w1, #0x105                 	// #261
  40d130:	mov	x0, x19
  40d134:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d138:	ldr	w8, [x19, #68]
  40d13c:	add	w22, w22, #0x1
  40d140:	b	40d108 <wcrtomb@plt+0xa748>
  40d144:	cmp	x1, #0x104
  40d148:	b.ne	40d17c <wcrtomb@plt+0xa7bc>  // b.any
  40d14c:	ldr	x20, [x19, #152]
  40d150:	mov	x0, x19
  40d154:	mov	x1, x20
  40d158:	bl	40d2ec <wcrtomb@plt+0xa92c>
  40d15c:	sub	x8, x20, x0
  40d160:	mov	x0, x19
  40d164:	str	x8, [x19, #152]
  40d168:	bl	40a258 <wcrtomb@plt+0x7898>
  40d16c:	str	x0, [x19, #128]
  40d170:	mov	x0, x19
  40d174:	bl	40d048 <wcrtomb@plt+0xa688>
  40d178:	b	40d190 <wcrtomb@plt+0xa7d0>
  40d17c:	mov	x0, x19
  40d180:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d184:	mov	x0, x19
  40d188:	bl	40a258 <wcrtomb@plt+0x7898>
  40d18c:	str	x0, [x19, #128]
  40d190:	ldr	x1, [x19, #128]
  40d194:	sub	x8, x1, #0x101
  40d198:	cmp	x8, #0x4
  40d19c:	b.cc	40d070 <wcrtomb@plt+0xa6b0>  // b.lo, b.ul, b.last
  40d1a0:	ldp	x20, x19, [sp, #32]
  40d1a4:	ldp	x22, x21, [sp, #16]
  40d1a8:	ldp	x29, x30, [sp], #48
  40d1ac:	ret
  40d1b0:	sub	sp, sp, #0xb0
  40d1b4:	stp	x29, x30, [sp, #128]
  40d1b8:	stp	x20, x19, [sp, #160]
  40d1bc:	ldr	x1, [x0, #128]
  40d1c0:	mov	x19, x0
  40d1c4:	str	x21, [sp, #144]
  40d1c8:	add	x29, sp, #0x80
  40d1cc:	cmp	x1, #0x100
  40d1d0:	b.cc	40d210 <wcrtomb@plt+0xa850>  // b.lo, b.ul, b.last
  40d1d4:	cmp	x1, #0x113
  40d1d8:	b.gt	40d210 <wcrtomb@plt+0xa850>
  40d1dc:	sub	x8, x1, #0x10b
  40d1e0:	cmp	x8, #0x9
  40d1e4:	b.cc	40d2c4 <wcrtomb@plt+0xa904>  // b.lo, b.ul, b.last
  40d1e8:	cmp	x1, #0x107
  40d1ec:	b.eq	40d22c <wcrtomb@plt+0xa86c>  // b.none
  40d1f0:	cmp	x1, #0x109
  40d1f4:	b.eq	40d264 <wcrtomb@plt+0xa8a4>  // b.none
  40d1f8:	cmp	x1, #0x10a
  40d1fc:	b.eq	40d218 <wcrtomb@plt+0xa858>  // b.none
  40d200:	mov	w1, #0x100                 	// #256
  40d204:	mov	x0, x19
  40d208:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d20c:	b	40d2d8 <wcrtomb@plt+0xa918>
  40d210:	cmp	x1, #0x10a
  40d214:	b.ne	40d2c4 <wcrtomb@plt+0xa904>  // b.any
  40d218:	ldrb	w8, [x19, #1050]
  40d21c:	cbz	w8, 40d2c4 <wcrtomb@plt+0xa904>
  40d220:	mov	x0, x19
  40d224:	bl	40d400 <wcrtomb@plt+0xaa40>
  40d228:	b	40d2cc <wcrtomb@plt+0xa90c>
  40d22c:	mov	x0, x19
  40d230:	bl	40a258 <wcrtomb@plt+0x7898>
  40d234:	str	x0, [x19, #128]
  40d238:	mov	x0, x19
  40d23c:	bl	40aa94 <wcrtomb@plt+0x80d4>
  40d240:	ldr	x8, [x19, #128]
  40d244:	cmp	x8, #0x108
  40d248:	b.eq	40d2cc <wcrtomb@plt+0xa90c>  // b.none
  40d24c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40d250:	add	x1, x1, #0xec7
  40d254:	mov	w2, #0x5                   	// #5
  40d258:	mov	x0, xzr
  40d25c:	bl	402890 <dcgettext@plt>
  40d260:	bl	402adc <wcrtomb@plt+0x11c>
  40d264:	ldr	w1, [x19, #72]
  40d268:	cmn	w1, #0x1
  40d26c:	b.eq	40d2c0 <wcrtomb@plt+0xa900>  // b.none
  40d270:	mov	x0, x19
  40d274:	bl	40c33c <wcrtomb@plt+0x997c>
  40d278:	ldrb	w8, [x19, #457]
  40d27c:	cbz	w8, 40d2cc <wcrtomb@plt+0xa90c>
  40d280:	ldr	w0, [x19, #72]
  40d284:	mov	x1, sp
  40d288:	bl	40fa04 <wcrtomb@plt+0xd044>
  40d28c:	cmp	w0, #0x1
  40d290:	b.lt	40d2cc <wcrtomb@plt+0xa90c>  // b.tstop
  40d294:	mov	w20, w0
  40d298:	mov	x21, sp
  40d29c:	ldr	w1, [x21], #4
  40d2a0:	mov	x0, x19
  40d2a4:	bl	40c33c <wcrtomb@plt+0x997c>
  40d2a8:	mov	w1, #0x106                 	// #262
  40d2ac:	mov	x0, x19
  40d2b0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d2b4:	subs	x20, x20, #0x1
  40d2b8:	b.ne	40d29c <wcrtomb@plt+0xa8dc>  // b.any
  40d2bc:	b	40d2cc <wcrtomb@plt+0xa90c>
  40d2c0:	mov	w1, #0x112                 	// #274
  40d2c4:	mov	x0, x19
  40d2c8:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d2cc:	mov	x0, x19
  40d2d0:	bl	40a258 <wcrtomb@plt+0x7898>
  40d2d4:	str	x0, [x19, #128]
  40d2d8:	ldp	x20, x19, [sp, #160]
  40d2dc:	ldr	x21, [sp, #144]
  40d2e0:	ldp	x29, x30, [sp, #128]
  40d2e4:	add	sp, sp, #0xb0
  40d2e8:	ret
  40d2ec:	stp	x29, x30, [sp, #-48]!
  40d2f0:	stp	x20, x19, [sp, #32]
  40d2f4:	ldr	x8, [x0, #144]
  40d2f8:	sub	x20, x1, #0x1
  40d2fc:	mov	x19, x0
  40d300:	str	x21, [sp, #16]
  40d304:	ldr	x8, [x8, x20, lsl #3]
  40d308:	mov	x29, sp
  40d30c:	sub	x9, x8, #0x101
  40d310:	cmp	x9, #0x3
  40d314:	b.cs	40d330 <wcrtomb@plt+0xa970>  // b.hs, b.nlast
  40d318:	mov	x0, x19
  40d31c:	mov	x1, x20
  40d320:	bl	40d2ec <wcrtomb@plt+0xa92c>
  40d324:	mov	x21, x0
  40d328:	mov	w0, #0x1                   	// #1
  40d32c:	b	40d358 <wcrtomb@plt+0xa998>
  40d330:	sub	x8, x8, #0x105
  40d334:	cmp	x8, #0x2
  40d338:	b.cs	40d36c <wcrtomb@plt+0xa9ac>  // b.hs, b.nlast
  40d33c:	mov	x0, x19
  40d340:	mov	x1, x20
  40d344:	bl	40d2ec <wcrtomb@plt+0xa92c>
  40d348:	add	x21, x0, #0x1
  40d34c:	sub	x1, x20, x0
  40d350:	mov	x0, x19
  40d354:	bl	40d2ec <wcrtomb@plt+0xa92c>
  40d358:	add	x0, x21, x0
  40d35c:	ldp	x20, x19, [sp, #32]
  40d360:	ldr	x21, [sp, #16]
  40d364:	ldp	x29, x30, [sp], #48
  40d368:	ret
  40d36c:	mov	w0, #0x1                   	// #1
  40d370:	b	40d35c <wcrtomb@plt+0xa99c>
  40d374:	stp	x29, x30, [sp, #-48]!
  40d378:	stp	x20, x19, [sp, #32]
  40d37c:	ldrb	w8, [x0, #1048]
  40d380:	str	x21, [sp, #16]
  40d384:	mov	x19, x2
  40d388:	mov	x20, x0
  40d38c:	mov	x21, x1
  40d390:	cmp	x2, #0x1
  40d394:	mov	x29, sp
  40d398:	cbz	w8, 40d3c8 <wcrtomb@plt+0xaa08>
  40d39c:	b.lt	40d3f0 <wcrtomb@plt+0xaa30>  // b.tstop
  40d3a0:	ldr	x8, [x20, #144]
  40d3a4:	ldr	x9, [x20, #280]
  40d3a8:	mov	x0, x20
  40d3ac:	ldr	x1, [x8, x21, lsl #3]
  40d3b0:	ldrb	w2, [x9, x21]
  40d3b4:	bl	40c3f4 <wcrtomb@plt+0x9a34>
  40d3b8:	subs	x19, x19, #0x1
  40d3bc:	add	x21, x21, #0x1
  40d3c0:	b.ne	40d3a0 <wcrtomb@plt+0xa9e0>  // b.any
  40d3c4:	b	40d3f0 <wcrtomb@plt+0xaa30>
  40d3c8:	b.lt	40d3f0 <wcrtomb@plt+0xaa30>  // b.tstop
  40d3cc:	lsl	x21, x21, #3
  40d3d0:	ldr	x8, [x20, #144]
  40d3d4:	mov	w2, #0x3                   	// #3
  40d3d8:	mov	x0, x20
  40d3dc:	ldr	x1, [x8, x21]
  40d3e0:	bl	40c3f4 <wcrtomb@plt+0x9a34>
  40d3e4:	subs	x19, x19, #0x1
  40d3e8:	add	x21, x21, #0x8
  40d3ec:	b.ne	40d3d0 <wcrtomb@plt+0xaa10>  // b.any
  40d3f0:	ldp	x20, x19, [sp, #32]
  40d3f4:	ldr	x21, [sp, #16]
  40d3f8:	ldp	x29, x30, [sp], #48
  40d3fc:	ret
  40d400:	sub	sp, sp, #0x50
  40d404:	stp	x29, x30, [sp, #32]
  40d408:	stp	x20, x19, [sp, #64]
  40d40c:	ldr	x8, [x0, #200]
  40d410:	mov	x19, x0
  40d414:	str	x21, [sp, #48]
  40d418:	add	x29, sp, #0x20
  40d41c:	cbnz	x8, 40d49c <wcrtomb@plt+0xaadc>
  40d420:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  40d424:	add	x8, x8, #0xc08
  40d428:	ldp	q0, q1, [x8]
  40d42c:	stp	q0, q1, [sp]
  40d430:	ldrb	w8, [x19, #448]
  40d434:	tbnz	w8, #6, 40d444 <wcrtomb@plt+0xaa84>
  40d438:	mov	x1, sp
  40d43c:	mov	w0, #0xa                   	// #10
  40d440:	bl	40c6dc <wcrtomb@plt+0x9d1c>
  40d444:	ldrb	w8, [x19, #448]
  40d448:	tbz	w8, #7, 40d458 <wcrtomb@plt+0xaa98>
  40d44c:	mov	x1, sp
  40d450:	mov	w0, wzr
  40d454:	bl	40c6dc <wcrtomb@plt+0x9d1c>
  40d458:	mov	x1, sp
  40d45c:	mov	x0, x19
  40d460:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40d464:	adrp	x20, 425000 <_obstack_memory_used@@Base+0xebcc>
  40d468:	add	x8, x0, #0x114
  40d46c:	add	x20, x20, #0xc28
  40d470:	mov	w21, #0xd0                  	// #208
  40d474:	str	x8, [x19, #200]
  40d478:	mov	x0, x19
  40d47c:	mov	x1, x20
  40d480:	bl	40c6fc <wcrtomb@plt+0x9d3c>
  40d484:	add	x8, x0, #0x114
  40d488:	str	x8, [x19, x21]
  40d48c:	add	x21, x21, #0x8
  40d490:	cmp	x21, #0x110
  40d494:	add	x20, x20, #0x20
  40d498:	b.ne	40d478 <wcrtomb@plt+0xaab8>  // b.any
  40d49c:	ldr	x1, [x19, #200]
  40d4a0:	mov	x0, x19
  40d4a4:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4a8:	ldr	x1, [x19, #208]
  40d4ac:	mov	x0, x19
  40d4b0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4b4:	mov	w1, #0xe0                  	// #224
  40d4b8:	mov	x0, x19
  40d4bc:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4c0:	ldr	x1, [x19, #224]
  40d4c4:	mov	x0, x19
  40d4c8:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4cc:	mov	w1, #0x105                 	// #261
  40d4d0:	mov	x0, x19
  40d4d4:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4d8:	mov	w1, #0x106                 	// #262
  40d4dc:	mov	x0, x19
  40d4e0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4e4:	mov	w1, #0xed                  	// #237
  40d4e8:	mov	x0, x19
  40d4ec:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4f0:	ldr	x1, [x19, #240]
  40d4f4:	mov	x0, x19
  40d4f8:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d4fc:	mov	w1, #0x105                 	// #261
  40d500:	mov	x0, x19
  40d504:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d508:	mov	w1, #0x106                 	// #262
  40d50c:	mov	x0, x19
  40d510:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d514:	ldr	x1, [x19, #232]
  40d518:	mov	x0, x19
  40d51c:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d520:	mov	w1, #0xf0                  	// #240
  40d524:	mov	x0, x19
  40d528:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d52c:	ldr	x1, [x19, #248]
  40d530:	mov	x0, x19
  40d534:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d538:	mov	w1, #0x105                 	// #261
  40d53c:	mov	x0, x19
  40d540:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d544:	mov	w1, #0x106                 	// #262
  40d548:	mov	x0, x19
  40d54c:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d550:	mov	w1, #0xf4                  	// #244
  40d554:	mov	x0, x19
  40d558:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d55c:	ldr	x1, [x19, #264]
  40d560:	mov	x0, x19
  40d564:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d568:	mov	w1, #0x105                 	// #261
  40d56c:	mov	x0, x19
  40d570:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d574:	mov	w1, #0x106                 	// #262
  40d578:	mov	x0, x19
  40d57c:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d580:	ldr	x1, [x19, #256]
  40d584:	mov	x0, x19
  40d588:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d58c:	mov	w20, #0x3                   	// #3
  40d590:	ldr	x1, [x19, #216]
  40d594:	mov	x0, x19
  40d598:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d59c:	mov	w1, #0x105                 	// #261
  40d5a0:	mov	x0, x19
  40d5a4:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d5a8:	mov	w1, #0x106                 	// #262
  40d5ac:	mov	x0, x19
  40d5b0:	bl	40a194 <wcrtomb@plt+0x77d4>
  40d5b4:	subs	w20, w20, #0x1
  40d5b8:	b.ne	40d590 <wcrtomb@plt+0xabd0>  // b.any
  40d5bc:	ldp	x20, x19, [sp, #64]
  40d5c0:	ldr	x21, [sp, #48]
  40d5c4:	ldp	x29, x30, [sp, #32]
  40d5c8:	add	sp, sp, #0x50
  40d5cc:	ret
  40d5d0:	stp	x29, x30, [sp, #-32]!
  40d5d4:	stp	x20, x19, [sp, #16]
  40d5d8:	mov	x19, x1
  40d5dc:	mov	x20, x0
  40d5e0:	mov	w1, #0x10                  	// #16
  40d5e4:	mov	x0, x19
  40d5e8:	mov	x29, sp
  40d5ec:	bl	413abc <wcrtomb@plt+0x110fc>
  40d5f0:	stp	xzr, x19, [x20, #8]
  40d5f4:	str	x0, [x20]
  40d5f8:	ldp	x20, x19, [sp, #16]
  40d5fc:	ldp	x29, x30, [sp], #32
  40d600:	ret
  40d604:	stp	x29, x30, [sp, #-16]!
  40d608:	mov	x3, x2
  40d60c:	mov	w2, #0xffffffff            	// #-1
  40d610:	mov	x29, sp
  40d614:	bl	40dc90 <wcrtomb@plt+0xb2d0>
  40d618:	ldp	x29, x30, [sp], #16
  40d61c:	ret
  40d620:	stp	x29, x30, [sp, #-48]!
  40d624:	str	x21, [sp, #16]
  40d628:	stp	x20, x19, [sp, #32]
  40d62c:	mov	x21, x1
  40d630:	ldr	x8, [x21, #16]!
  40d634:	ldr	x9, [x0, #8]
  40d638:	mov	x20, x1
  40d63c:	mov	x19, x0
  40d640:	mov	x29, sp
  40d644:	cmp	x8, x9
  40d648:	b.ge	40d678 <wcrtomb@plt+0xacb8>  // b.tcont
  40d64c:	ldr	x0, [x20]
  40d650:	bl	402770 <free@plt>
  40d654:	ldr	x8, [x19, #8]
  40d658:	ldr	x9, [x20, #16]
  40d65c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d660:	mov	w4, #0x10                  	// #16
  40d664:	mov	x0, xzr
  40d668:	sub	x2, x8, x9
  40d66c:	mov	x1, x21
  40d670:	bl	40c4f0 <wcrtomb@plt+0x9b30>
  40d674:	str	x0, [x20]
  40d678:	ldr	x8, [x19, #8]
  40d67c:	str	x8, [x20, #8]
  40d680:	ldr	x8, [x19, #8]
  40d684:	cbz	x8, 40d698 <wcrtomb@plt+0xacd8>
  40d688:	ldr	x0, [x20]
  40d68c:	ldr	x1, [x19]
  40d690:	lsl	x2, x8, #4
  40d694:	bl	402320 <memcpy@plt>
  40d698:	ldp	x20, x19, [sp, #32]
  40d69c:	ldr	x21, [sp, #16]
  40d6a0:	ldp	x29, x30, [sp], #48
  40d6a4:	ret
  40d6a8:	sub	sp, sp, #0x70
  40d6ac:	stp	x29, x30, [sp, #32]
  40d6b0:	stp	x24, x23, [sp, #64]
  40d6b4:	stp	x22, x21, [sp, #80]
  40d6b8:	stp	x20, x19, [sp, #96]
  40d6bc:	ldr	x1, [x0, #176]
  40d6c0:	mov	x19, x0
  40d6c4:	add	x0, sp, #0x8
  40d6c8:	str	x25, [sp, #48]
  40d6cc:	add	x29, sp, #0x20
  40d6d0:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40d6d4:	ldr	x8, [x19, #152]
  40d6d8:	cmp	x8, #0x1
  40d6dc:	b.lt	40d7e4 <wcrtomb@plt+0xae24>  // b.tstop
  40d6e0:	adrp	x23, 425000 <_obstack_memory_used@@Base+0xebcc>
  40d6e4:	mov	x20, xzr
  40d6e8:	mov	w22, #0x18                  	// #24
  40d6ec:	add	x23, x23, #0xd28
  40d6f0:	b	40d704 <wcrtomb@plt+0xad44>
  40d6f4:	ldr	x8, [x19, #152]
  40d6f8:	add	x20, x20, #0x1
  40d6fc:	cmp	x20, x8
  40d700:	b.ge	40d7e4 <wcrtomb@plt+0xae24>  // b.tcont
  40d704:	ldr	x8, [x19, #320]
  40d708:	madd	x9, x20, x22, x8
  40d70c:	ldr	x9, [x9, #8]
  40d710:	cmp	x9, #0x1
  40d714:	b.lt	40d6f4 <wcrtomb@plt+0xad34>  // b.tstop
  40d718:	ldr	x9, [x19, #144]
  40d71c:	ldr	x9, [x9, x20, lsl #3]
  40d720:	cmp	x9, #0x100
  40d724:	cset	w10, lt  // lt = tstop
  40d728:	cmp	x9, #0x112
  40d72c:	cset	w11, eq  // eq = none
  40d730:	cmp	x9, #0x10a
  40d734:	orr	w10, w10, w11
  40d738:	cset	w11, eq  // eq = none
  40d73c:	cmp	x9, #0x113
  40d740:	orr	w10, w11, w10
  40d744:	cset	w11, eq  // eq = none
  40d748:	cmp	x9, #0x114
  40d74c:	orr	w10, w11, w10
  40d750:	cset	w11, lt  // lt = tstop
  40d754:	eor	w10, w11, w10
  40d758:	cmp	w10, #0x1
  40d75c:	b.ne	40d6f4 <wcrtomb@plt+0xad34>  // b.any
  40d760:	sub	x9, x9, #0x10c
  40d764:	cmp	x9, #0x5
  40d768:	b.hi	40d774 <wcrtomb@plt+0xadb4>  // b.pmore
  40d76c:	ldr	w21, [x23, x9, lsl #2]
  40d770:	b	40d778 <wcrtomb@plt+0xadb8>
  40d774:	mov	w21, #0x1ff                 	// #511
  40d778:	madd	x1, x20, x22, x8
  40d77c:	mov	x0, x20
  40d780:	bl	40de24 <wcrtomb@plt+0xb464>
  40d784:	ldr	x8, [x19, #152]
  40d788:	cmp	x8, #0x1
  40d78c:	b.lt	40d6f4 <wcrtomb@plt+0xad34>  // b.tstop
  40d790:	mov	x24, xzr
  40d794:	mov	x25, xzr
  40d798:	b	40d7b0 <wcrtomb@plt+0xadf0>
  40d79c:	ldr	x8, [x19, #152]
  40d7a0:	add	x25, x25, #0x1
  40d7a4:	add	x24, x24, #0x18
  40d7a8:	cmp	x25, x8
  40d7ac:	b.ge	40d6f4 <wcrtomb@plt+0xad34>  // b.tcont
  40d7b0:	cmp	x20, x25
  40d7b4:	b.eq	40d79c <wcrtomb@plt+0xaddc>  // b.none
  40d7b8:	ldr	x8, [x19, #320]
  40d7bc:	add	x0, x8, x24
  40d7c0:	ldr	x9, [x0, #8]
  40d7c4:	cmp	x9, #0x1
  40d7c8:	b.lt	40d79c <wcrtomb@plt+0xaddc>  // b.tstop
  40d7cc:	madd	x2, x20, x22, x8
  40d7d0:	add	x4, sp, #0x8
  40d7d4:	mov	x1, x20
  40d7d8:	mov	w3, w21
  40d7dc:	bl	40dec8 <wcrtomb@plt+0xb508>
  40d7e0:	b	40d79c <wcrtomb@plt+0xaddc>
  40d7e4:	ldr	x0, [sp, #8]
  40d7e8:	bl	402770 <free@plt>
  40d7ec:	ldp	x20, x19, [sp, #96]
  40d7f0:	ldp	x22, x21, [sp, #80]
  40d7f4:	ldp	x24, x23, [sp, #64]
  40d7f8:	ldr	x25, [sp, #48]
  40d7fc:	ldp	x29, x30, [sp, #32]
  40d800:	add	sp, sp, #0x70
  40d804:	ret
  40d808:	sub	sp, sp, #0x50
  40d80c:	stp	x29, x30, [sp, #32]
  40d810:	stp	x20, x19, [sp, #64]
  40d814:	mov	x19, x0
  40d818:	ldr	x0, [x0, #152]
  40d81c:	str	x21, [sp, #48]
  40d820:	add	x29, sp, #0x20
  40d824:	bl	413c1c <wcrtomb@plt+0x1125c>
  40d828:	ldr	x8, [x19, #152]
  40d82c:	mov	x20, x0
  40d830:	cmp	x8, #0x1
  40d834:	b.lt	40d8e8 <wcrtomb@plt+0xaf28>  // b.tstop
  40d838:	ldr	x9, [x19, #320]
  40d83c:	ldr	x10, [x19, #152]
  40d840:	mov	x8, xzr
  40d844:	mov	w11, #0x18                  	// #24
  40d848:	mov	w12, #0x8                   	// #8
  40d84c:	b	40d85c <wcrtomb@plt+0xae9c>
  40d850:	add	x8, x8, #0x1
  40d854:	cmp	x8, x10
  40d858:	b.ge	40d8e8 <wcrtomb@plt+0xaf28>  // b.tcont
  40d85c:	madd	x13, x8, x11, x9
  40d860:	ldr	x13, [x13, #8]
  40d864:	cmp	x13, #0x1
  40d868:	b.lt	40d850 <wcrtomb@plt+0xae90>  // b.tstop
  40d86c:	ldr	x15, [x19, #320]
  40d870:	mov	x13, xzr
  40d874:	mov	x14, xzr
  40d878:	mov	x17, x9
  40d87c:	madd	x16, x8, x11, x15
  40d880:	ldr	x16, [x16, #8]
  40d884:	b	40d8a8 <wcrtomb@plt+0xaee8>
  40d888:	ldrb	w18, [x20, x17]
  40d88c:	orr	w18, w18, #0x1
  40d890:	strb	w18, [x20, x17]
  40d894:	add	x14, x14, #0x1
  40d898:	cmp	x14, x16
  40d89c:	add	x13, x13, #0x10
  40d8a0:	mov	x17, x15
  40d8a4:	b.ge	40d850 <wcrtomb@plt+0xae90>  // b.tcont
  40d8a8:	mul	x18, x8, x11
  40d8ac:	ldr	x17, [x17, x18]
  40d8b0:	ldr	x17, [x17, x13]
  40d8b4:	cmp	x17, x8
  40d8b8:	b.eq	40d888 <wcrtomb@plt+0xaec8>  // b.none
  40d8bc:	ldrb	w18, [x20, x17]
  40d8c0:	b.ge	40d8cc <wcrtomb@plt+0xaf0c>  // b.tcont
  40d8c4:	orr	w18, w18, #0x2
  40d8c8:	b	40d890 <wcrtomb@plt+0xaed0>
  40d8cc:	and	w0, w18, #0x8
  40d8d0:	strb	w0, [x20, x17]
  40d8d4:	tbnz	w18, #3, 40d8e0 <wcrtomb@plt+0xaf20>
  40d8d8:	strb	w12, [x20, x17]
  40d8dc:	b	40d894 <wcrtomb@plt+0xaed4>
  40d8e0:	orr	w18, w0, #0x4
  40d8e4:	b	40d890 <wcrtomb@plt+0xaed0>
  40d8e8:	ldrb	w8, [x20]
  40d8ec:	add	x0, sp, #0x8
  40d8f0:	orr	w8, w8, #0x10
  40d8f4:	strb	w8, [x20]
  40d8f8:	ldr	x1, [x19, #176]
  40d8fc:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40d900:	ldr	x0, [x19, #152]
  40d904:	mov	w1, #0x4                   	// #4
  40d908:	bl	413abc <wcrtomb@plt+0x110fc>
  40d90c:	ldr	x8, [x19, #152]
  40d910:	str	x0, [x19, #336]
  40d914:	cmp	x8, #0x1
  40d918:	b.lt	40d954 <wcrtomb@plt+0xaf94>  // b.tstop
  40d91c:	mov	x21, xzr
  40d920:	b	40d934 <wcrtomb@plt+0xaf74>
  40d924:	ldr	x8, [x19, #152]
  40d928:	add	x21, x21, #0x1
  40d92c:	cmp	x21, x8
  40d930:	b.ge	40d954 <wcrtomb@plt+0xaf94>  // b.tcont
  40d934:	ldrb	w8, [x20, x21]
  40d938:	tbz	w8, #4, 40d924 <wcrtomb@plt+0xaf64>
  40d93c:	add	x3, sp, #0x8
  40d940:	mov	x0, x19
  40d944:	mov	x1, x21
  40d948:	mov	x2, x20
  40d94c:	bl	40df2c <wcrtomb@plt+0xb56c>
  40d950:	b	40d924 <wcrtomb@plt+0xaf64>
  40d954:	mov	x0, x19
  40d958:	bl	40e0bc <wcrtomb@plt+0xb6fc>
  40d95c:	ldr	x0, [sp, #8]
  40d960:	bl	402770 <free@plt>
  40d964:	mov	x0, x20
  40d968:	bl	402770 <free@plt>
  40d96c:	ldp	x20, x19, [sp, #64]
  40d970:	ldr	x21, [sp, #48]
  40d974:	ldp	x29, x30, [sp, #32]
  40d978:	add	sp, sp, #0x50
  40d97c:	ret
  40d980:	stp	x29, x30, [sp, #-48]!
  40d984:	str	x21, [sp, #16]
  40d988:	stp	x20, x19, [sp, #32]
  40d98c:	mov	x19, x2
  40d990:	mov	x20, x1
  40d994:	mov	x21, x0
  40d998:	ldp	x0, x1, [x2], #16
  40d99c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d9a0:	mov	w4, #0x10                  	// #16
  40d9a4:	mov	x29, sp
  40d9a8:	bl	40cec4 <wcrtomb@plt+0xa504>
  40d9ac:	ldr	x8, [x19, #8]
  40d9b0:	add	x9, x8, #0x1
  40d9b4:	add	x8, x0, x8, lsl #4
  40d9b8:	stp	x0, x9, [x19]
  40d9bc:	stp	x21, x20, [x8]
  40d9c0:	ldp	x20, x19, [sp, #32]
  40d9c4:	ldr	x21, [sp, #16]
  40d9c8:	ldp	x29, x30, [sp], #48
  40d9cc:	ret
  40d9d0:	eor	w8, w0, w0, lsr #2
  40d9d4:	mov	w9, #0x49                  	// #73
  40d9d8:	tst	w8, w9
  40d9dc:	cset	w0, ne  // ne = any
  40d9e0:	ret
  40d9e4:	eor	w8, w0, w0, lsr #1
  40d9e8:	mov	w9, #0x49                  	// #73
  40d9ec:	tst	w8, w9
  40d9f0:	cset	w0, ne  // ne = any
  40d9f4:	ret
  40d9f8:	ldr	x8, [x1, #8]
  40d9fc:	cmp	x8, #0x1
  40da00:	b.lt	40da30 <wcrtomb@plt+0xb070>  // b.tstop
  40da04:	ldr	x9, [x0, #344]
  40da08:	ldp	x10, x11, [x1]
  40da0c:	mov	x8, xzr
  40da10:	mov	w0, wzr
  40da14:	ldr	x12, [x10], #16
  40da18:	add	x8, x8, #0x1
  40da1c:	cmp	x8, x11
  40da20:	ldr	w12, [x9, x12, lsl #2]
  40da24:	orr	w0, w12, w0
  40da28:	b.lt	40da14 <wcrtomb@plt+0xb054>  // b.tstop
  40da2c:	ret
  40da30:	mov	w0, wzr
  40da34:	ret
  40da38:	sub	sp, sp, #0x80
  40da3c:	stp	x29, x30, [sp, #32]
  40da40:	stp	x28, x27, [sp, #48]
  40da44:	stp	x26, x25, [sp, #64]
  40da48:	stp	x24, x23, [sp, #80]
  40da4c:	stp	x22, x21, [sp, #96]
  40da50:	stp	x20, x19, [sp, #112]
  40da54:	ldr	x26, [x1, #8]
  40da58:	add	x29, sp, #0x20
  40da5c:	mov	x19, x0
  40da60:	mov	x25, xzr
  40da64:	cmp	x26, #0x1
  40da68:	stur	w2, [x29, #-4]
  40da6c:	b.lt	40da98 <wcrtomb@plt+0xb0d8>  // b.tstop
  40da70:	ldp	x9, x26, [x1]
  40da74:	mov	x8, xzr
  40da78:	add	x9, x9, #0x8
  40da7c:	ldur	x10, [x9, #-8]
  40da80:	ldr	w11, [x9], #16
  40da84:	add	x8, x8, #0x1
  40da88:	cmp	x8, x26
  40da8c:	add	x10, x10, x11
  40da90:	eor	x25, x10, x25
  40da94:	b.lt	40da7c <wcrtomb@plt+0xb0bc>  // b.tstop
  40da98:	ldr	x23, [x19, #304]
  40da9c:	cmp	x23, #0x1
  40daa0:	b.lt	40db64 <wcrtomb@plt+0xb1a4>  // b.tstop
  40daa4:	ldr	x9, [x19, #296]
  40daa8:	mov	x8, xzr
  40daac:	mov	w10, #0x50                  	// #80
  40dab0:	b	40dad4 <wcrtomb@plt+0xb114>
  40dab4:	mov	x11, xzr
  40dab8:	cmp	x11, x26
  40dabc:	csel	x0, x8, x0, eq  // eq = none
  40dac0:	b.eq	40dc70 <wcrtomb@plt+0xb2b0>  // b.none
  40dac4:	ldr	x23, [x19, #304]
  40dac8:	add	x8, x8, #0x1
  40dacc:	cmp	x8, x23
  40dad0:	b.ge	40db68 <wcrtomb@plt+0xb1a8>  // b.tcont
  40dad4:	mul	x11, x8, x10
  40dad8:	ldr	x11, [x9, x11]
  40dadc:	cmp	x25, x11
  40dae0:	b.ne	40dac4 <wcrtomb@plt+0xb104>  // b.any
  40dae4:	madd	x11, x8, x10, x9
  40dae8:	ldr	x11, [x11, #16]
  40daec:	cmp	x26, x11
  40daf0:	b.ne	40dac4 <wcrtomb@plt+0xb104>  // b.any
  40daf4:	madd	x11, x8, x10, x9
  40daf8:	ldrb	w11, [x11, #32]
  40dafc:	ldur	w12, [x29, #-4]
  40db00:	cmp	w11, w12
  40db04:	b.ne	40dac4 <wcrtomb@plt+0xb104>  // b.any
  40db08:	cmp	x26, #0x1
  40db0c:	b.lt	40dab4 <wcrtomb@plt+0xb0f4>  // b.tstop
  40db10:	madd	x13, x8, x10, x9
  40db14:	ldr	x12, [x1]
  40db18:	ldr	x13, [x13, #8]
  40db1c:	mov	x11, xzr
  40db20:	add	x12, x12, #0x8
  40db24:	add	x13, x13, #0x8
  40db28:	ldr	w14, [x12]
  40db2c:	ldr	w15, [x13]
  40db30:	cmp	w14, w15
  40db34:	b.ne	40dab8 <wcrtomb@plt+0xb0f8>  // b.any
  40db38:	ldur	x14, [x12, #-8]
  40db3c:	ldur	x15, [x13, #-8]
  40db40:	cmp	x14, x15
  40db44:	b.ne	40dab8 <wcrtomb@plt+0xb0f8>  // b.any
  40db48:	add	x11, x11, #0x1
  40db4c:	add	x12, x12, #0x10
  40db50:	cmp	x26, x11
  40db54:	add	x13, x13, #0x10
  40db58:	b.ne	40db28 <wcrtomb@plt+0xb168>  // b.any
  40db5c:	mov	x11, x26
  40db60:	b	40dab8 <wcrtomb@plt+0xb0f8>
  40db64:	mov	x8, xzr
  40db68:	cmp	x26, #0x1
  40db6c:	stp	x8, x1, [sp, #8]
  40db70:	b.lt	40dbe0 <wcrtomb@plt+0xb220>  // b.tstop
  40db74:	ldr	x21, [x19, #336]
  40db78:	ldr	x20, [x1]
  40db7c:	mov	x27, xzr
  40db80:	mov	w28, wzr
  40db84:	b	40dba8 <wcrtomb@plt+0xb1e8>
  40db88:	ldr	x8, [x19, #144]
  40db8c:	ldr	x8, [x8, x22, lsl #3]
  40db90:	cmp	x8, #0x112
  40db94:	mov	w8, #0x1ff                 	// #511
  40db98:	csel	w28, w8, w28, eq  // eq = none
  40db9c:	subs	x26, x26, #0x1
  40dba0:	add	x20, x20, #0x10
  40dba4:	b.eq	40dbe8 <wcrtomb@plt+0xb228>  // b.none
  40dba8:	ldr	x22, [x20]
  40dbac:	ldr	w24, [x21, x22, lsl #2]
  40dbb0:	cbz	w24, 40db88 <wcrtomb@plt+0xb1c8>
  40dbb4:	ldur	w1, [x29, #-4]
  40dbb8:	mov	w2, #0x7                   	// #7
  40dbbc:	mov	w0, w24
  40dbc0:	bl	40e4fc <wcrtomb@plt+0xbb3c>
  40dbc4:	tst	w0, #0x1
  40dbc8:	csel	w8, w24, wzr, ne  // ne = any
  40dbcc:	orr	w28, w8, w28
  40dbd0:	cbnz	x27, 40db9c <wcrtomb@plt+0xb1dc>
  40dbd4:	ldr	x8, [x19, #144]
  40dbd8:	ldr	x27, [x8, x22, lsl #3]
  40dbdc:	b	40db9c <wcrtomb@plt+0xb1dc>
  40dbe0:	mov	w28, wzr
  40dbe4:	mov	x27, xzr
  40dbe8:	ldr	x0, [x19, #296]
  40dbec:	add	x2, x19, #0x138
  40dbf0:	mov	x3, #0xffffffffffffffff    	// #-1
  40dbf4:	mov	w4, #0x50                  	// #80
  40dbf8:	mov	x1, x23
  40dbfc:	mov	x20, #0xffffffffffffffff    	// #-1
  40dc00:	bl	40cec4 <wcrtomb@plt+0xa504>
  40dc04:	str	x0, [x19, #296]
  40dc08:	ldp	x23, x22, [sp, #8]
  40dc0c:	add	x8, x23, x23, lsl #2
  40dc10:	lsl	x21, x8, #4
  40dc14:	str	x25, [x0, x21]
  40dc18:	ldr	x8, [x19, #296]
  40dc1c:	ldr	x1, [x22, #8]
  40dc20:	add	x8, x8, x21
  40dc24:	add	x0, x8, #0x8
  40dc28:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40dc2c:	ldr	x8, [x19, #296]
  40dc30:	mov	x0, x22
  40dc34:	add	x8, x8, x21
  40dc38:	add	x1, x8, #0x8
  40dc3c:	bl	40d620 <wcrtomb@plt+0xac60>
  40dc40:	ldr	x8, [x19, #296]
  40dc44:	ldur	w9, [x29, #-4]
  40dc48:	mov	x0, x23
  40dc4c:	add	x8, x8, x21
  40dc50:	strb	w9, [x8, #32]
  40dc54:	strh	w28, [x8, #34]
  40dc58:	stp	xzr, xzr, [x8, #48]
  40dc5c:	str	x27, [x8, #40]
  40dc60:	str	x20, [x8, #72]
  40dc64:	ldr	x8, [x19, #304]
  40dc68:	add	x8, x8, #0x1
  40dc6c:	str	x8, [x19, #304]
  40dc70:	ldp	x20, x19, [sp, #112]
  40dc74:	ldp	x22, x21, [sp, #96]
  40dc78:	ldp	x24, x23, [sp, #80]
  40dc7c:	ldp	x26, x25, [sp, #64]
  40dc80:	ldp	x28, x27, [sp, #48]
  40dc84:	ldp	x29, x30, [sp, #32]
  40dc88:	add	sp, sp, #0x80
  40dc8c:	ret
  40dc90:	stp	x29, x30, [sp, #-64]!
  40dc94:	str	x23, [sp, #16]
  40dc98:	stp	x22, x21, [sp, #32]
  40dc9c:	stp	x20, x19, [sp, #48]
  40dca0:	mov	x23, x3
  40dca4:	ldr	x8, [x23, #16]!
  40dca8:	ldr	x9, [x0, #8]
  40dcac:	ldr	x10, [x1, #8]
  40dcb0:	mov	x19, x3
  40dcb4:	mov	x20, x1
  40dcb8:	sub	x8, x8, x9
  40dcbc:	mov	x21, x0
  40dcc0:	cmp	x8, x10
  40dcc4:	mov	w22, w2
  40dcc8:	mov	x29, sp
  40dccc:	b.ge	40dcfc <wcrtomb@plt+0xb33c>  // b.tcont
  40dcd0:	ldr	x0, [x19]
  40dcd4:	bl	402770 <free@plt>
  40dcd8:	ldr	x8, [x21, #8]
  40dcdc:	mov	x3, #0xffffffffffffffff    	// #-1
  40dce0:	mov	w4, #0x10                  	// #16
  40dce4:	mov	x0, xzr
  40dce8:	str	x8, [x19, #16]
  40dcec:	ldr	x2, [x20, #8]
  40dcf0:	mov	x1, x23
  40dcf4:	bl	40c4f0 <wcrtomb@plt+0x9b30>
  40dcf8:	str	x0, [x19]
  40dcfc:	mov	x8, xzr
  40dd00:	mov	x9, xzr
  40dd04:	str	xzr, [x19, #8]
  40dd08:	b	40dd4c <wcrtomb@plt+0xb38c>
  40dd0c:	add	x10, x11, x10
  40dd10:	ldr	w10, [x10, #8]
  40dd14:	add	x8, x8, #0x1
  40dd18:	and	w11, w10, w22
  40dd1c:	ldr	x10, [x21]
  40dd20:	ldp	x12, x13, [x19]
  40dd24:	add	x10, x10, x9, lsl #4
  40dd28:	ldr	x14, [x10]
  40dd2c:	add	x12, x12, x13, lsl #4
  40dd30:	add	x13, x13, #0x1
  40dd34:	add	x9, x9, #0x1
  40dd38:	str	x14, [x12]
  40dd3c:	ldr	w10, [x10, #8]
  40dd40:	str	x13, [x19, #8]
  40dd44:	orr	w10, w10, w11
  40dd48:	str	w10, [x12, #8]
  40dd4c:	lsl	x10, x8, #4
  40dd50:	b	40dd5c <wcrtomb@plt+0xb39c>
  40dd54:	add	x8, x8, #0x1
  40dd58:	add	x10, x10, #0x10
  40dd5c:	ldr	x11, [x21, #8]
  40dd60:	cmp	x9, x11
  40dd64:	b.lt	40dd74 <wcrtomb@plt+0xb3b4>  // b.tstop
  40dd68:	ldr	x12, [x20, #8]
  40dd6c:	cmp	x8, x12
  40dd70:	b.ge	40de10 <wcrtomb@plt+0xb450>  // b.tcont
  40dd74:	ldr	x12, [x20, #8]
  40dd78:	cmp	x8, x12
  40dd7c:	b.ge	40ddd8 <wcrtomb@plt+0xb418>  // b.tcont
  40dd80:	cmp	x9, x11
  40dd84:	b.ge	40dda4 <wcrtomb@plt+0xb3e4>  // b.tcont
  40dd88:	ldr	x13, [x21]
  40dd8c:	ldr	x14, [x20]
  40dd90:	lsl	x15, x9, #4
  40dd94:	ldr	x13, [x13, x15]
  40dd98:	ldr	x14, [x14, x10]
  40dd9c:	cmp	x13, x14
  40dda0:	b.le	40ddd8 <wcrtomb@plt+0xb418>
  40dda4:	ldr	x12, [x20]
  40dda8:	add	x11, x12, x10
  40ddac:	ldr	w11, [x11, #8]
  40ddb0:	ands	w11, w11, w22
  40ddb4:	b.eq	40dd54 <wcrtomb@plt+0xb394>  // b.none
  40ddb8:	ldp	x13, x14, [x19]
  40ddbc:	ldr	x12, [x12, x10]
  40ddc0:	add	x13, x13, x14, lsl #4
  40ddc4:	add	x14, x14, #0x1
  40ddc8:	str	x12, [x13]
  40ddcc:	str	x14, [x19, #8]
  40ddd0:	str	w11, [x13, #8]
  40ddd4:	b	40dd54 <wcrtomb@plt+0xb394>
  40ddd8:	cmp	x9, x11
  40dddc:	mov	w11, wzr
  40dde0:	b.ge	40dd1c <wcrtomb@plt+0xb35c>  // b.tcont
  40dde4:	cmp	x8, x12
  40dde8:	b.ge	40dd1c <wcrtomb@plt+0xb35c>  // b.tcont
  40ddec:	ldr	x12, [x21]
  40ddf0:	ldr	x11, [x20]
  40ddf4:	lsl	x13, x9, #4
  40ddf8:	ldr	x12, [x12, x13]
  40ddfc:	ldr	x13, [x11, x10]
  40de00:	cmp	x12, x13
  40de04:	b.eq	40dd0c <wcrtomb@plt+0xb34c>  // b.none
  40de08:	mov	w11, wzr
  40de0c:	b	40dd1c <wcrtomb@plt+0xb35c>
  40de10:	ldp	x20, x19, [sp, #48]
  40de14:	ldp	x22, x21, [sp, #32]
  40de18:	ldr	x23, [sp, #16]
  40de1c:	ldp	x29, x30, [sp], #64
  40de20:	ret
  40de24:	ldr	x9, [x1, #8]
  40de28:	mov	x10, xzr
  40de2c:	sub	x11, x9, #0x1
  40de30:	mov	x12, x9
  40de34:	b	40de44 <wcrtomb@plt+0xb484>
  40de38:	add	x10, x13, #0x1
  40de3c:	mov	w14, #0x1                   	// #1
  40de40:	tbz	w14, #0, 40deb8 <wcrtomb@plt+0xb4f8>
  40de44:	cmp	x10, x12
  40de48:	b.ge	40dec0 <wcrtomb@plt+0xb500>  // b.tcont
  40de4c:	ldr	x15, [x1]
  40de50:	add	x13, x10, x12
  40de54:	asr	x13, x13, #1
  40de58:	lsl	x14, x13, #4
  40de5c:	ldr	x16, [x15, x14]
  40de60:	cmp	x16, x0
  40de64:	b.lt	40de38 <wcrtomb@plt+0xb478>  // b.tstop
  40de68:	b.ne	40deac <wcrtomb@plt+0xb4ec>  // b.any
  40de6c:	add	x8, x15, x13, lsl #4
  40de70:	ldr	w8, [x8, #8]
  40de74:	add	x15, x13, #0x1
  40de78:	cmp	x15, x9
  40de7c:	b.ge	40dea0 <wcrtomb@plt+0xb4e0>  // b.tcont
  40de80:	ldr	x15, [x1]
  40de84:	add	x13, x13, #0x1
  40de88:	cmp	x11, x13
  40de8c:	add	x15, x15, x14
  40de90:	ldr	q0, [x15, #16]
  40de94:	add	x14, x14, #0x10
  40de98:	str	q0, [x15]
  40de9c:	b.ne	40de80 <wcrtomb@plt+0xb4c0>  // b.any
  40dea0:	mov	w14, wzr
  40dea4:	str	x13, [x1, #8]
  40dea8:	b	40de40 <wcrtomb@plt+0xb480>
  40deac:	mov	w14, #0x1                   	// #1
  40deb0:	mov	x12, x13
  40deb4:	b	40de40 <wcrtomb@plt+0xb480>
  40deb8:	mov	w0, w8
  40debc:	ret
  40dec0:	mov	w0, wzr
  40dec4:	ret
  40dec8:	stp	x29, x30, [sp, #-48]!
  40decc:	stp	x20, x19, [sp, #32]
  40ded0:	mov	x20, x0
  40ded4:	mov	x0, x1
  40ded8:	mov	x1, x20
  40dedc:	stp	x22, x21, [sp, #16]
  40dee0:	mov	x29, sp
  40dee4:	mov	x19, x4
  40dee8:	mov	w22, w3
  40deec:	mov	x21, x2
  40def0:	bl	40de24 <wcrtomb@plt+0xb464>
  40def4:	ands	w22, w0, w22
  40def8:	b.eq	40df1c <wcrtomb@plt+0xb55c>  // b.none
  40defc:	mov	x0, x20
  40df00:	mov	x1, x19
  40df04:	bl	40d620 <wcrtomb@plt+0xac60>
  40df08:	mov	x0, x19
  40df0c:	mov	x1, x21
  40df10:	mov	w2, w22
  40df14:	mov	x3, x20
  40df18:	bl	40dc90 <wcrtomb@plt+0xb2d0>
  40df1c:	ldp	x20, x19, [sp, #32]
  40df20:	ldp	x22, x21, [sp, #16]
  40df24:	ldp	x29, x30, [sp], #48
  40df28:	ret
  40df2c:	sub	sp, sp, #0x70
  40df30:	stp	x29, x30, [sp, #16]
  40df34:	stp	x28, x27, [sp, #32]
  40df38:	stp	x26, x25, [sp, #48]
  40df3c:	stp	x24, x23, [sp, #64]
  40df40:	stp	x22, x21, [sp, #80]
  40df44:	stp	x20, x19, [sp, #96]
  40df48:	ldr	x8, [x0, #336]
  40df4c:	ldr	x10, [x0, #320]
  40df50:	mov	w9, #0x18                  	// #24
  40df54:	add	x29, sp, #0x10
  40df58:	str	wzr, [x8, x1, lsl #2]
  40df5c:	madd	x23, x1, x9, x10
  40df60:	ldr	x8, [x23, #8]!
  40df64:	cmp	x8, #0x1
  40df68:	b.lt	40e094 <wcrtomb@plt+0xb6d4>  // b.tstop
  40df6c:	mov	w8, #0x18                  	// #24
  40df70:	mov	x20, x0
  40df74:	mov	x21, x2
  40df78:	mov	x25, xzr
  40df7c:	mov	x26, xzr
  40df80:	madd	x28, x1, x8, x10
  40df84:	lsl	x27, x1, #2
  40df88:	stp	x3, x10, [sp]
  40df8c:	b	40dfbc <wcrtomb@plt+0xb5fc>
  40df90:	ldr	x8, [x28]
  40df94:	ldr	q0, [x8, x26, lsl #4]
  40df98:	str	q0, [x8, x25, lsl #4]
  40df9c:	ldrb	w8, [x21, x22]
  40dfa0:	add	x25, x25, #0x1
  40dfa4:	orr	w8, w8, #0x10
  40dfa8:	strb	w8, [x21, x22]
  40dfac:	ldr	x8, [x23]
  40dfb0:	add	x26, x26, #0x1
  40dfb4:	cmp	x26, x8
  40dfb8:	b.ge	40e098 <wcrtomb@plt+0xb6d8>  // b.tcont
  40dfbc:	ldr	x13, [x28]
  40dfc0:	add	x9, x13, x26, lsl #4
  40dfc4:	ldr	w8, [x9, #8]
  40dfc8:	cbz	w8, 40dfac <wcrtomb@plt+0xb5ec>
  40dfcc:	ldr	x22, [x9]
  40dfd0:	ldr	x9, [x20, #144]
  40dfd4:	ldr	x10, [x9, x22, lsl #3]
  40dfd8:	tbnz	x10, #63, 40e080 <wcrtomb@plt+0xb6c0>
  40dfdc:	ldrb	w11, [x21, x22]
  40dfe0:	tst	w11, #0x6
  40dfe4:	b.ne	40df90 <wcrtomb@plt+0xb5d0>  // b.any
  40dfe8:	cmp	x25, #0x0
  40dfec:	cset	w19, gt
  40dff0:	cmp	x25, #0x1
  40dff4:	b.lt	40df90 <wcrtomb@plt+0xb5d0>  // b.tstop
  40dff8:	mov	x12, xzr
  40dffc:	add	x13, x13, #0x8
  40e000:	b	40e01c <wcrtomb@plt+0xb65c>
  40e004:	add	x12, x12, #0x1
  40e008:	cmp	x12, x25
  40e00c:	cset	w19, lt  // lt = tstop
  40e010:	cmp	x25, x12
  40e014:	add	x13, x13, #0x10
  40e018:	b.eq	40df90 <wcrtomb@plt+0xb5d0>  // b.none
  40e01c:	ldr	w14, [x13]
  40e020:	cmp	w14, w8
  40e024:	b.ne	40e004 <wcrtomb@plt+0xb644>  // b.any
  40e028:	ldur	x24, [x13, #-8]
  40e02c:	ldrb	w14, [x21, x24]
  40e030:	tst	w14, #0x6
  40e034:	b.ne	40e004 <wcrtomb@plt+0xb644>  // b.any
  40e038:	ldr	x15, [x9, x24, lsl #3]
  40e03c:	cmp	x10, x15
  40e040:	b.ne	40e004 <wcrtomb@plt+0xb644>  // b.any
  40e044:	eor	w14, w14, w11
  40e048:	tbnz	w14, #0, 40e004 <wcrtomb@plt+0xb644>
  40e04c:	tbz	w11, #0, 40e064 <wcrtomb@plt+0xb6a4>
  40e050:	ldr	x8, [sp, #8]
  40e054:	mov	w9, #0x18                  	// #24
  40e058:	mov	x0, x22
  40e05c:	madd	x1, x22, x9, x8
  40e060:	bl	40de24 <wcrtomb@plt+0xb464>
  40e064:	ldp	x2, x8, [sp]
  40e068:	mov	w9, #0x18                  	// #24
  40e06c:	madd	x0, x24, x9, x8
  40e070:	madd	x1, x22, x9, x8
  40e074:	bl	40e354 <wcrtomb@plt+0xb994>
  40e078:	tbz	w19, #0, 40df90 <wcrtomb@plt+0xb5d0>
  40e07c:	b	40dfac <wcrtomb@plt+0xb5ec>
  40e080:	ldr	x9, [x20, #336]
  40e084:	ldr	w10, [x9, x27]
  40e088:	orr	w8, w10, w8
  40e08c:	str	w8, [x9, x27]
  40e090:	b	40dfac <wcrtomb@plt+0xb5ec>
  40e094:	mov	x25, xzr
  40e098:	str	x25, [x23]
  40e09c:	ldp	x20, x19, [sp, #96]
  40e0a0:	ldp	x22, x21, [sp, #80]
  40e0a4:	ldp	x24, x23, [sp, #64]
  40e0a8:	ldp	x26, x25, [sp, #48]
  40e0ac:	ldp	x28, x27, [sp, #32]
  40e0b0:	ldp	x29, x30, [sp, #16]
  40e0b4:	add	sp, sp, #0x70
  40e0b8:	ret
  40e0bc:	stp	x29, x30, [sp, #-96]!
  40e0c0:	stp	x28, x27, [sp, #16]
  40e0c4:	stp	x26, x25, [sp, #32]
  40e0c8:	stp	x24, x23, [sp, #48]
  40e0cc:	stp	x22, x21, [sp, #64]
  40e0d0:	stp	x20, x19, [sp, #80]
  40e0d4:	mov	x20, x0
  40e0d8:	ldr	x0, [x0, #152]
  40e0dc:	mov	w1, #0x8                   	// #8
  40e0e0:	mov	x29, sp
  40e0e4:	bl	413abc <wcrtomb@plt+0x110fc>
  40e0e8:	str	xzr, [x0]
  40e0ec:	ldr	x8, [x20, #152]
  40e0f0:	mov	x19, x0
  40e0f4:	cmp	x8, #0x2
  40e0f8:	b.lt	40e120 <wcrtomb@plt+0xb760>  // b.tstop
  40e0fc:	ldr	x8, [x20, #152]
  40e100:	mov	w9, #0x2                   	// #2
  40e104:	add	x0, x19, #0x8
  40e108:	mov	w1, #0xff                  	// #255
  40e10c:	cmp	x8, #0x2
  40e110:	csel	x8, x8, x9, gt
  40e114:	lsl	x8, x8, #3
  40e118:	sub	x2, x8, #0x8
  40e11c:	bl	4025b0 <memset@plt>
  40e120:	ldr	x0, [x20, #176]
  40e124:	mov	w1, #0x8                   	// #8
  40e128:	bl	413abc <wcrtomb@plt+0x110fc>
  40e12c:	ldr	x8, [x20, #176]
  40e130:	mov	x21, x0
  40e134:	mov	w1, #0x18                  	// #24
  40e138:	mov	x0, x8
  40e13c:	bl	413abc <wcrtomb@plt+0x110fc>
  40e140:	ldr	x8, [x20, #176]
  40e144:	mov	x22, x0
  40e148:	mov	w1, #0x4                   	// #4
  40e14c:	mov	x0, x8
  40e150:	bl	413abc <wcrtomb@plt+0x110fc>
  40e154:	ldrb	w8, [x20, #1048]
  40e158:	mov	x23, x0
  40e15c:	cbz	w8, 40e174 <wcrtomb@plt+0xb7b4>
  40e160:	ldr	x0, [x20, #176]
  40e164:	mov	w1, #0x1                   	// #1
  40e168:	bl	413abc <wcrtomb@plt+0x110fc>
  40e16c:	mov	x24, x0
  40e170:	b	40e178 <wcrtomb@plt+0xb7b8>
  40e174:	mov	x24, xzr
  40e178:	ldr	x8, [x20, #152]
  40e17c:	cmp	x8, #0x1
  40e180:	b.lt	40e290 <wcrtomb@plt+0xb8d0>  // b.tstop
  40e184:	mov	x27, xzr
  40e188:	mov	w26, #0x1                   	// #1
  40e18c:	mov	w28, #0x18                  	// #24
  40e190:	b	40e1b8 <wcrtomb@plt+0xb7f8>
  40e194:	ldr	x0, [x8]
  40e198:	adrp	x3, 40e000 <wcrtomb@plt+0xb640>
  40e19c:	mov	w2, #0x10                  	// #16
  40e1a0:	add	x3, x3, #0x4e4
  40e1a4:	bl	402420 <qsort@plt>
  40e1a8:	ldr	x8, [x20, #152]
  40e1ac:	add	x27, x27, #0x1
  40e1b0:	cmp	x27, x8
  40e1b4:	b.ge	40e294 <wcrtomb@plt+0xb8d4>  // b.tcont
  40e1b8:	ldr	x9, [x19, x27, lsl #3]
  40e1bc:	cmn	x9, #0x1
  40e1c0:	b.eq	40e26c <wcrtomb@plt+0xb8ac>  // b.none
  40e1c4:	ldr	x8, [x20, #144]
  40e1c8:	madd	x12, x9, x28, x22
  40e1cc:	ldr	x8, [x8, x27, lsl #3]
  40e1d0:	str	x8, [x21, x9, lsl #3]
  40e1d4:	ldr	x10, [x20, #320]
  40e1d8:	madd	x8, x27, x28, x10
  40e1dc:	ldr	x11, [x8, #16]
  40e1e0:	ldr	q0, [x8]
  40e1e4:	str	x11, [x12, #16]
  40e1e8:	str	q0, [x12]
  40e1ec:	ldr	x11, [x20, #336]
  40e1f0:	ldr	w11, [x11, x27, lsl #2]
  40e1f4:	str	w11, [x23, x9, lsl #2]
  40e1f8:	cbz	x24, 40e208 <wcrtomb@plt+0xb848>
  40e1fc:	ldr	x11, [x20, #280]
  40e200:	ldrb	w11, [x11, x27]
  40e204:	strb	w11, [x24, x9]
  40e208:	madd	x11, x27, x28, x10
  40e20c:	ldr	x1, [x11, #8]!
  40e210:	cmp	x1, #0x1
  40e214:	b.lt	40e194 <wcrtomb@plt+0xb7d4>  // b.tstop
  40e218:	mul	x12, x27, x28
  40e21c:	ldr	x9, [x8]
  40e220:	ldr	x10, [x10, x12]
  40e224:	ldr	x1, [x11]
  40e228:	mov	x11, xzr
  40e22c:	b	40e24c <wcrtomb@plt+0xb88c>
  40e230:	ldr	x12, [x10]
  40e234:	add	x11, x11, #0x1
  40e238:	cmp	x11, x1
  40e23c:	add	x9, x9, #0x10
  40e240:	ldr	x12, [x19, x12, lsl #3]
  40e244:	str	x12, [x10], #16
  40e248:	b.ge	40e194 <wcrtomb@plt+0xb7d4>  // b.tcont
  40e24c:	ldr	x12, [x9]
  40e250:	ldr	x13, [x19, x12, lsl #3]
  40e254:	cmn	x13, #0x1
  40e258:	b.ne	40e230 <wcrtomb@plt+0xb870>  // b.any
  40e25c:	add	x13, x26, #0x1
  40e260:	str	x26, [x19, x12, lsl #3]
  40e264:	mov	x26, x13
  40e268:	b	40e230 <wcrtomb@plt+0xb870>
  40e26c:	ldr	x8, [x20, #320]
  40e270:	add	x9, x27, x27, lsl #1
  40e274:	lsl	x25, x9, #3
  40e278:	ldr	x0, [x8, x25]
  40e27c:	bl	402770 <free@plt>
  40e280:	ldr	x8, [x20, #320]
  40e284:	add	x8, x8, x25
  40e288:	stp	xzr, xzr, [x8]
  40e28c:	b	40e1a8 <wcrtomb@plt+0xb7e8>
  40e290:	mov	w26, #0x1                   	// #1
  40e294:	cmp	x26, #0x1
  40e298:	b.lt	40e308 <wcrtomb@plt+0xb948>  // b.tstop
  40e29c:	mov	x8, xzr
  40e2a0:	mov	x9, xzr
  40e2a4:	b	40e2b8 <wcrtomb@plt+0xb8f8>
  40e2a8:	add	x9, x9, #0x1
  40e2ac:	cmp	x26, x9
  40e2b0:	add	x8, x8, #0x18
  40e2b4:	b.eq	40e308 <wcrtomb@plt+0xb948>  // b.none
  40e2b8:	lsl	x10, x9, #3
  40e2bc:	ldr	x11, [x20, #144]
  40e2c0:	ldr	x12, [x21, x10]
  40e2c4:	add	x13, x22, x8
  40e2c8:	str	x12, [x11, x10]
  40e2cc:	ldr	x10, [x20, #320]
  40e2d0:	ldr	x11, [x13, #16]
  40e2d4:	ldr	q0, [x13]
  40e2d8:	lsl	x12, x9, #2
  40e2dc:	add	x10, x10, x8
  40e2e0:	str	x11, [x10, #16]
  40e2e4:	str	q0, [x10]
  40e2e8:	ldr	w10, [x23, x12]
  40e2ec:	ldr	x11, [x20, #336]
  40e2f0:	str	w10, [x11, x12]
  40e2f4:	cbz	x24, 40e2a8 <wcrtomb@plt+0xb8e8>
  40e2f8:	ldrb	w10, [x24, x9]
  40e2fc:	ldr	x11, [x20, #280]
  40e300:	strb	w10, [x11, x9]
  40e304:	b	40e2a8 <wcrtomb@plt+0xb8e8>
  40e308:	mov	x0, x21
  40e30c:	str	x26, [x20, #176]
  40e310:	str	x26, [x20, #152]
  40e314:	bl	402770 <free@plt>
  40e318:	mov	x0, x22
  40e31c:	bl	402770 <free@plt>
  40e320:	mov	x0, x23
  40e324:	bl	402770 <free@plt>
  40e328:	mov	x0, x24
  40e32c:	bl	402770 <free@plt>
  40e330:	mov	x0, x19
  40e334:	bl	402770 <free@plt>
  40e338:	ldp	x20, x19, [sp, #80]
  40e33c:	ldp	x22, x21, [sp, #64]
  40e340:	ldp	x24, x23, [sp, #48]
  40e344:	ldp	x26, x25, [sp, #32]
  40e348:	ldp	x28, x27, [sp, #16]
  40e34c:	ldp	x29, x30, [sp], #96
  40e350:	ret
  40e354:	stp	x29, x30, [sp, #-48]!
  40e358:	stp	x22, x21, [sp, #16]
  40e35c:	stp	x20, x19, [sp, #32]
  40e360:	ldr	x8, [x1, #8]
  40e364:	mov	x20, x1
  40e368:	mov	x19, x0
  40e36c:	mov	x29, sp
  40e370:	cmp	x8, #0x3
  40e374:	b.gt	40e3b8 <wcrtomb@plt+0xb9f8>
  40e378:	ldr	x8, [x20, #8]
  40e37c:	cmp	x8, #0x1
  40e380:	b.lt	40e3d4 <wcrtomb@plt+0xba14>  // b.tstop
  40e384:	mov	x21, xzr
  40e388:	mov	x22, xzr
  40e38c:	ldr	x8, [x20]
  40e390:	mov	x2, x19
  40e394:	add	x8, x8, x21
  40e398:	ldp	x0, x1, [x8]
  40e39c:	bl	40e3e4 <wcrtomb@plt+0xba24>
  40e3a0:	ldr	x8, [x20, #8]
  40e3a4:	add	x22, x22, #0x1
  40e3a8:	add	x21, x21, #0x10
  40e3ac:	cmp	x22, x8
  40e3b0:	b.lt	40e38c <wcrtomb@plt+0xb9cc>  // b.tstop
  40e3b4:	b	40e3d4 <wcrtomb@plt+0xba14>
  40e3b8:	mov	x0, x20
  40e3bc:	mov	x1, x19
  40e3c0:	mov	x21, x2
  40e3c4:	bl	40d604 <wcrtomb@plt+0xac44>
  40e3c8:	mov	x0, x21
  40e3cc:	mov	x1, x19
  40e3d0:	bl	40d620 <wcrtomb@plt+0xac60>
  40e3d4:	ldp	x20, x19, [sp, #32]
  40e3d8:	ldp	x22, x21, [sp, #16]
  40e3dc:	ldp	x29, x30, [sp], #48
  40e3e0:	ret
  40e3e4:	stp	x29, x30, [sp, #-64]!
  40e3e8:	stp	x22, x21, [sp, #32]
  40e3ec:	stp	x20, x19, [sp, #48]
  40e3f0:	ldr	x22, [x2, #8]
  40e3f4:	str	x23, [sp, #16]
  40e3f8:	mov	x19, x2
  40e3fc:	mov	x20, x1
  40e400:	mov	x21, x0
  40e404:	mov	x23, xzr
  40e408:	mov	x8, x22
  40e40c:	mov	x29, sp
  40e410:	b	40e420 <wcrtomb@plt+0xba60>
  40e414:	add	x23, x10, #0x1
  40e418:	mov	w9, #0x1                   	// #1
  40e41c:	tbz	w9, #0, 40e4d0 <wcrtomb@plt+0xbb10>
  40e420:	cmp	x23, x8
  40e424:	b.ge	40e474 <wcrtomb@plt+0xbab4>  // b.tcont
  40e428:	ldr	x11, [x19]
  40e42c:	add	x9, x23, x8
  40e430:	asr	x10, x9, #1
  40e434:	lsl	x9, x10, #4
  40e438:	ldr	x9, [x11, x9]
  40e43c:	cmp	x9, x21
  40e440:	b.lt	40e414 <wcrtomb@plt+0xba54>  // b.tstop
  40e444:	b.ne	40e464 <wcrtomb@plt+0xbaa4>  // b.any
  40e448:	add	x10, x11, x10, lsl #4
  40e44c:	ldr	w11, [x10, #8]
  40e450:	mov	w9, wzr
  40e454:	orr	w11, w11, w20
  40e458:	str	w11, [x10, #8]
  40e45c:	tbnz	wzr, #0, 40e420 <wcrtomb@plt+0xba60>
  40e460:	b	40e4d0 <wcrtomb@plt+0xbb10>
  40e464:	mov	w9, #0x1                   	// #1
  40e468:	mov	x8, x10
  40e46c:	tbnz	w9, #0, 40e420 <wcrtomb@plt+0xba60>
  40e470:	b	40e4d0 <wcrtomb@plt+0xbb10>
  40e474:	mov	x2, x19
  40e478:	ldr	x0, [x2], #16
  40e47c:	mov	x3, #0xffffffffffffffff    	// #-1
  40e480:	mov	w4, #0x10                  	// #16
  40e484:	mov	x1, x22
  40e488:	bl	40cec4 <wcrtomb@plt+0xa504>
  40e48c:	cmp	x22, x23
  40e490:	str	x0, [x19]
  40e494:	b.le	40e4bc <wcrtomb@plt+0xbafc>
  40e498:	lsl	x8, x22, #4
  40e49c:	add	x9, x0, x8
  40e4a0:	ldur	q0, [x9, #-16]
  40e4a4:	sub	x22, x22, #0x1
  40e4a8:	cmp	x22, x23
  40e4ac:	sub	x8, x8, #0x10
  40e4b0:	str	q0, [x9]
  40e4b4:	ldr	x0, [x19]
  40e4b8:	b.gt	40e49c <wcrtomb@plt+0xbadc>
  40e4bc:	add	x8, x0, x23, lsl #4
  40e4c0:	stp	x21, x20, [x8]
  40e4c4:	ldr	x8, [x19, #8]
  40e4c8:	add	x8, x8, #0x1
  40e4cc:	str	x8, [x19, #8]
  40e4d0:	ldp	x20, x19, [sp, #48]
  40e4d4:	ldp	x22, x21, [sp, #32]
  40e4d8:	ldr	x23, [sp, #16]
  40e4dc:	ldp	x29, x30, [sp], #64
  40e4e0:	ret
  40e4e4:	ldr	x8, [x0]
  40e4e8:	ldr	x9, [x1]
  40e4ec:	cmp	x8, x9
  40e4f0:	cset	w8, gt
  40e4f4:	csinv	w0, w8, wzr, ge  // ge = tcont
  40e4f8:	ret
  40e4fc:	stp	x29, x30, [sp, #-48]!
  40e500:	stp	x22, x21, [sp, #16]
  40e504:	stp	x20, x19, [sp, #32]
  40e508:	mov	w21, w2
  40e50c:	mov	w19, w1
  40e510:	mov	w20, w0
  40e514:	mov	x29, sp
  40e518:	tbnz	w2, #0, 40e540 <wcrtomb@plt+0xbb80>
  40e51c:	mov	w22, wzr
  40e520:	tbz	w21, #1, 40e550 <wcrtomb@plt+0xbb90>
  40e524:	mov	w0, w20
  40e528:	bl	40e584 <wcrtomb@plt+0xbbc4>
  40e52c:	orr	w22, w0, w22
  40e530:	tbz	w21, #2, 40e55c <wcrtomb@plt+0xbb9c>
  40e534:	mov	w0, w20
  40e538:	bl	40e58c <wcrtomb@plt+0xbbcc>
  40e53c:	b	40e560 <wcrtomb@plt+0xbba0>
  40e540:	mov	w0, w20
  40e544:	bl	40e57c <wcrtomb@plt+0xbbbc>
  40e548:	mov	w22, w0
  40e54c:	tbnz	w21, #1, 40e524 <wcrtomb@plt+0xbb64>
  40e550:	mov	w0, wzr
  40e554:	orr	w22, w0, w22
  40e558:	tbnz	w21, #2, 40e534 <wcrtomb@plt+0xbb74>
  40e55c:	mov	w0, wzr
  40e560:	orr	w8, w22, w0
  40e564:	tst	w8, w19
  40e568:	ldp	x20, x19, [sp, #32]
  40e56c:	ldp	x22, x21, [sp, #16]
  40e570:	cset	w0, ne  // ne = any
  40e574:	ldp	x29, x30, [sp], #48
  40e578:	ret
  40e57c:	and	w0, w0, #0x7
  40e580:	ret
  40e584:	ubfx	w0, w0, #3, #3
  40e588:	ret
  40e58c:	ubfx	w0, w0, #6, #3
  40e590:	ret
  40e594:	stp	x29, x30, [sp, #-64]!
  40e598:	stp	x20, x19, [sp, #48]
  40e59c:	mov	x20, x0
  40e5a0:	mov	w0, #0x8                   	// #8
  40e5a4:	stp	x24, x23, [sp, #16]
  40e5a8:	stp	x22, x21, [sp, #32]
  40e5ac:	mov	x29, sp
  40e5b0:	mov	x19, x1
  40e5b4:	bl	413c1c <wcrtomb@plt+0x1125c>
  40e5b8:	ldrb	w8, [x20]
  40e5bc:	mov	x21, x0
  40e5c0:	cbnz	w8, 40e5e4 <wcrtomb@plt+0xbc24>
  40e5c4:	mov	x0, x21
  40e5c8:	ldp	x20, x19, [sp, #48]
  40e5cc:	ldp	x22, x21, [sp, #32]
  40e5d0:	ldp	x24, x23, [sp, #16]
  40e5d4:	ldp	x29, x30, [sp], #64
  40e5d8:	ret
  40e5dc:	ldrb	w8, [x20, #1]!
  40e5e0:	cbz	w8, 40e5c4 <wcrtomb@plt+0xbc04>
  40e5e4:	and	w22, w8, #0xff
  40e5e8:	mov	x0, x19
  40e5ec:	mov	w1, w22
  40e5f0:	bl	402790 <strchr@plt>
  40e5f4:	cbz	x0, 40e654 <wcrtomb@plt+0xbc94>
  40e5f8:	ldrb	w24, [x20, #1]
  40e5fc:	mov	x23, xzr
  40e600:	b	40e620 <wcrtomb@plt+0xbc60>
  40e604:	mov	w8, #0x1                   	// #1
  40e608:	cmp	x8, x23
  40e60c:	add	x0, x0, #0x1
  40e610:	mov	w1, w22
  40e614:	csel	x23, x8, x23, gt
  40e618:	bl	402790 <strchr@plt>
  40e61c:	cbz	x0, 40e658 <wcrtomb@plt+0xbc98>
  40e620:	cbz	w24, 40e604 <wcrtomb@plt+0xbc44>
  40e624:	mov	x8, xzr
  40e628:	add	x9, x0, #0x1
  40e62c:	mov	w10, w24
  40e630:	ldrb	w11, [x9, x8]
  40e634:	cmp	w11, w10, uxtb
  40e638:	b.ne	40e64c <wcrtomb@plt+0xbc8c>  // b.any
  40e63c:	add	x10, x20, x8
  40e640:	ldrb	w10, [x10, #2]
  40e644:	add	x8, x8, #0x1
  40e648:	cbnz	w10, 40e630 <wcrtomb@plt+0xbc70>
  40e64c:	add	x8, x8, #0x1
  40e650:	b	40e608 <wcrtomb@plt+0xbc48>
  40e654:	mov	x23, xzr
  40e658:	cbz	x23, 40e5dc <wcrtomb@plt+0xbc1c>
  40e65c:	mov	x0, x21
  40e660:	mov	x1, x20
  40e664:	mov	x2, x23
  40e668:	bl	40bf04 <wcrtomb@plt+0x9544>
  40e66c:	mov	x21, x0
  40e670:	b	40e5dc <wcrtomb@plt+0xbc1c>
  40e674:	sub	sp, sp, #0xa0
  40e678:	stp	x29, x30, [sp, #64]
  40e67c:	stp	x28, x27, [sp, #80]
  40e680:	stp	x26, x25, [sp, #96]
  40e684:	stp	x24, x23, [sp, #112]
  40e688:	stp	x22, x21, [sp, #128]
  40e68c:	stp	x20, x19, [sp, #144]
  40e690:	ldr	x8, [x0, #304]
  40e694:	add	x29, sp, #0x40
  40e698:	mov	w21, w5
  40e69c:	mov	x19, x2
  40e6a0:	mov	x23, x0
  40e6a4:	cmp	x8, #0x400
  40e6a8:	mov	x24, x1
  40e6ac:	str	x4, [sp, #24]
  40e6b0:	stur	w3, [x29, #-28]
  40e6b4:	b.lt	40e7dc <wcrtomb@plt+0xbe1c>  // b.tstop
  40e6b8:	ldrsw	x20, [x23, #364]
  40e6bc:	ldr	x8, [x23, #304]
  40e6c0:	cmp	x8, x20
  40e6c4:	b.le	40e704 <wcrtomb@plt+0xbd44>
  40e6c8:	add	x8, x20, x20, lsl #2
  40e6cc:	lsl	x22, x8, #4
  40e6d0:	ldr	x8, [x23, #296]
  40e6d4:	add	x8, x8, x22
  40e6d8:	ldr	x0, [x8, #8]
  40e6dc:	bl	402770 <free@plt>
  40e6e0:	ldr	x8, [x23, #296]
  40e6e4:	add	x8, x8, x22
  40e6e8:	ldr	x0, [x8, #48]
  40e6ec:	bl	402770 <free@plt>
  40e6f0:	ldr	x8, [x23, #304]
  40e6f4:	add	x20, x20, #0x1
  40e6f8:	add	x22, x22, #0x50
  40e6fc:	cmp	x20, x8
  40e700:	b.lt	40e6d0 <wcrtomb@plt+0xbd10>  // b.tstop
  40e704:	ldrsw	x8, [x23, #364]
  40e708:	ldr	x9, [x23, #368]
  40e70c:	str	x8, [x23, #304]
  40e710:	cbz	x9, 40e764 <wcrtomb@plt+0xbda4>
  40e714:	ldr	x8, [x23, #352]
  40e718:	cmp	x8, #0x1
  40e71c:	b.lt	40e760 <wcrtomb@plt+0xbda0>  // b.tstop
  40e720:	mov	x20, xzr
  40e724:	ldr	x8, [x23, #368]
  40e728:	lsl	x22, x20, #3
  40e72c:	ldr	x0, [x8, x22]
  40e730:	bl	402770 <free@plt>
  40e734:	ldr	x8, [x23, #376]
  40e738:	ldr	x0, [x8, x22]
  40e73c:	bl	402770 <free@plt>
  40e740:	ldr	x8, [x23, #376]
  40e744:	add	x20, x20, #0x1
  40e748:	str	xzr, [x8, x22]
  40e74c:	ldr	x8, [x23, #368]
  40e750:	str	xzr, [x8, x22]
  40e754:	ldr	x8, [x23, #352]
  40e758:	cmp	x20, x8
  40e75c:	b.lt	40e724 <wcrtomb@plt+0xbd64>  // b.tstop
  40e760:	str	wzr, [x23, #360]
  40e764:	ldrb	w8, [x23, #1048]
  40e768:	cbz	w8, 40e7dc <wcrtomb@plt+0xbe1c>
  40e76c:	ldr	x8, [x23, #432]
  40e770:	cbz	x8, 40e7dc <wcrtomb@plt+0xbe1c>
  40e774:	ldr	x8, [x23, #352]
  40e778:	tbnz	x8, #63, 40e7a8 <wcrtomb@plt+0xbde8>
  40e77c:	mov	x20, #0xffffffffffffffff    	// #-1
  40e780:	ldr	x8, [x23, #432]
  40e784:	lsl	x22, x20, #3
  40e788:	ldr	x0, [x8, x22]
  40e78c:	bl	402770 <free@plt>
  40e790:	ldr	x8, [x23, #432]
  40e794:	add	x20, x20, #0x1
  40e798:	str	xzr, [x8, x22]
  40e79c:	ldr	x8, [x23, #352]
  40e7a0:	cmp	x20, x8
  40e7a4:	b.lt	40e780 <wcrtomb@plt+0xbdc0>  // b.tstop
  40e7a8:	ldr	w8, [x23, #364]
  40e7ac:	cmp	w8, #0x1
  40e7b0:	b.lt	40e7d8 <wcrtomb@plt+0xbe18>  // b.tstop
  40e7b4:	ldr	x10, [x23, #296]
  40e7b8:	ldrsw	x9, [x23, #364]
  40e7bc:	mov	x8, xzr
  40e7c0:	mov	x11, #0xffffffffffffffff    	// #-1
  40e7c4:	add	x10, x10, #0x48
  40e7c8:	add	x8, x8, #0x1
  40e7cc:	cmp	x8, x9
  40e7d0:	str	x11, [x10], #80
  40e7d4:	b.lt	40e7c8 <wcrtomb@plt+0xbe08>  // b.tstop
  40e7d8:	str	xzr, [x23, #440]
  40e7dc:	ldr	x8, [x23, #352]
  40e7e0:	cbnz	x8, 40e7ec <wcrtomb@plt+0xbe2c>
  40e7e4:	mov	x0, x23
  40e7e8:	bl	40ebf4 <wcrtomb@plt+0xc234>
  40e7ec:	ldr	x22, [x23, #368]
  40e7f0:	ldrb	w9, [x23, #459]
  40e7f4:	ldrb	w8, [x19]
  40e7f8:	stp	x9, x24, [x29, #-16]
  40e7fc:	str	w8, [sp, #20]
  40e800:	strb	w9, [x19]
  40e804:	tbz	w21, #0, 40e820 <wcrtomb@plt+0xbe60>
  40e808:	ldr	x8, [x23, #424]
  40e80c:	str	xzr, [x23, #272]
  40e810:	cbnz	x8, 40e820 <wcrtomb@plt+0xbe60>
  40e814:	ldr	x1, [x23, #176]
  40e818:	add	x0, x23, #0x198
  40e81c:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40e820:	ldur	x8, [x29, #-16]
  40e824:	mov	x25, xzr
  40e828:	mov	x27, xzr
  40e82c:	mov	w20, #0x50                  	// #80
  40e830:	add	x8, x23, x8
  40e834:	add	x8, x8, #0x1cc
  40e838:	stur	xzr, [x29, #-24]
  40e83c:	str	x8, [sp, #8]
  40e840:	b	40e870 <wcrtomb@plt+0xbeb0>
  40e844:	ldur	x8, [x29, #-8]
  40e848:	mov	x0, x26
  40e84c:	mov	x1, x23
  40e850:	ldrb	w2, [x8]
  40e854:	bl	40efe4 <wcrtomb@plt+0xc624>
  40e858:	ldr	x22, [x23, #368]
  40e85c:	mov	w8, wzr
  40e860:	mov	x25, x26
  40e864:	mov	x26, x27
  40e868:	mov	x27, x26
  40e86c:	cbnz	w8, 40eba4 <wcrtomb@plt+0xc1e4>
  40e870:	ldr	x28, [x22, x25, lsl #3]
  40e874:	cbnz	x28, 40e8a8 <wcrtomb@plt+0xbee8>
  40e878:	mov	x26, x25
  40e87c:	b	40e9e4 <wcrtomb@plt+0xc024>
  40e880:	ldur	x10, [x29, #-8]
  40e884:	mov	x25, x8
  40e888:	add	x11, x10, #0x1
  40e88c:	stur	x11, [x29, #-8]
  40e890:	ldrb	w10, [x10]
  40e894:	ldr	x26, [x9, x10, lsl #3]
  40e898:	ldr	x28, [x22, x26, lsl #3]
  40e89c:	mov	x27, x25
  40e8a0:	mov	x25, x26
  40e8a4:	cbz	x28, 40e9e4 <wcrtomb@plt+0xc024>
  40e8a8:	ldrsw	x8, [x23, #364]
  40e8ac:	cmp	x25, x8
  40e8b0:	b.ge	40e914 <wcrtomb@plt+0xbf54>  // b.tcont
  40e8b4:	tbz	w21, #0, 40e8c8 <wcrtomb@plt+0xbf08>
  40e8b8:	ldr	x8, [x23, #296]
  40e8bc:	madd	x8, x25, x20, x8
  40e8c0:	ldr	x8, [x8, #56]
  40e8c4:	cbnz	x8, 40e8f4 <wcrtomb@plt+0xbf34>
  40e8c8:	ldur	x8, [x29, #-8]
  40e8cc:	ldrb	w9, [x8]
  40e8d0:	ldr	x9, [x28, x9, lsl #3]
  40e8d4:	cmp	x9, x25
  40e8d8:	b.ne	40e8f4 <wcrtomb@plt+0xbf34>  // b.any
  40e8dc:	add	x8, x8, #0x1
  40e8e0:	stur	x8, [x29, #-8]
  40e8e4:	ldrb	w9, [x8], #1
  40e8e8:	ldr	x9, [x28, x9, lsl #3]
  40e8ec:	cmp	x9, x25
  40e8f0:	b.eq	40e8e0 <wcrtomb@plt+0xbf20>  // b.none
  40e8f4:	tbz	w21, #0, 40e914 <wcrtomb@plt+0xbf54>
  40e8f8:	ldur	x1, [x29, #-8]
  40e8fc:	mov	x0, x23
  40e900:	mov	x2, x24
  40e904:	mov	x3, x19
  40e908:	bl	40ed2c <wcrtomb@plt+0xc36c>
  40e90c:	mov	x24, x0
  40e910:	stur	x0, [x29, #-8]
  40e914:	tbz	w21, #0, 40e96c <wcrtomb@plt+0xbfac>
  40e918:	ldr	x8, [x23, #296]
  40e91c:	madd	x8, x25, x20, x8
  40e920:	ldr	x8, [x8, #56]
  40e924:	cbz	x8, 40e9c4 <wcrtomb@plt+0xc004>
  40e928:	ldur	x8, [x29, #-8]
  40e92c:	cmp	x8, x19
  40e930:	b.cs	40e9c4 <wcrtomb@plt+0xc004>  // b.hs, b.nlast
  40e934:	ldrb	w8, [x8]
  40e938:	add	x8, x23, x8, lsl #2
  40e93c:	ldr	w8, [x8, #1308]
  40e940:	cmn	w8, #0x1
  40e944:	b.ne	40e9c4 <wcrtomb@plt+0xc004>  // b.any
  40e948:	sub	x2, x29, #0x8
  40e94c:	mov	x0, x23
  40e950:	mov	x1, x25
  40e954:	mov	x3, x19
  40e958:	bl	40eda8 <wcrtomb@plt+0xc3e8>
  40e95c:	ldur	x24, [x29, #-8]
  40e960:	ldr	x22, [x23, #368]
  40e964:	mov	x26, x0
  40e968:	b	40e898 <wcrtomb@plt+0xbed8>
  40e96c:	ldur	x8, [x29, #-8]
  40e970:	add	x9, x8, #0x1
  40e974:	stur	x9, [x29, #-8]
  40e978:	ldrb	w8, [x8]
  40e97c:	ldr	x8, [x28, x8, lsl #3]
  40e980:	ldr	x9, [x22, x8, lsl #3]
  40e984:	cbz	x9, 40e9dc <wcrtomb@plt+0xc01c>
  40e988:	ldrsw	x10, [x23, #364]
  40e98c:	cmp	x25, x10
  40e990:	b.ge	40e880 <wcrtomb@plt+0xbec0>  // b.tcont
  40e994:	ldur	x10, [x29, #-8]
  40e998:	ldrb	w11, [x10]
  40e99c:	ldr	x11, [x9, x11, lsl #3]
  40e9a0:	cmp	x11, x8
  40e9a4:	b.ne	40e880 <wcrtomb@plt+0xbec0>  // b.any
  40e9a8:	add	x10, x10, #0x1
  40e9ac:	stur	x10, [x29, #-8]
  40e9b0:	ldrb	w11, [x10], #1
  40e9b4:	ldr	x11, [x9, x11, lsl #3]
  40e9b8:	cmp	x11, x8
  40e9bc:	b.eq	40e9ac <wcrtomb@plt+0xbfec>  // b.none
  40e9c0:	b	40e880 <wcrtomb@plt+0xbec0>
  40e9c4:	ldur	x8, [x29, #-8]
  40e9c8:	add	x9, x8, #0x1
  40e9cc:	stur	x9, [x29, #-8]
  40e9d0:	ldrb	w8, [x8]
  40e9d4:	ldr	x26, [x28, x8, lsl #3]
  40e9d8:	b	40e898 <wcrtomb@plt+0xbed8>
  40e9dc:	mov	x26, x8
  40e9e0:	mov	x27, x25
  40e9e4:	tbnz	x26, #63, 40ea1c <wcrtomb@plt+0xc05c>
  40e9e8:	ldr	x8, [x23, #376]
  40e9ec:	ldr	x8, [x8, x26, lsl #3]
  40e9f0:	cbz	x8, 40e844 <wcrtomb@plt+0xbe84>
  40e9f4:	ldur	x25, [x29, #-8]
  40e9f8:	ldr	x8, [x23, #384]
  40e9fc:	ldrb	w9, [x25]
  40ea00:	ldrb	w8, [x8, x26]
  40ea04:	add	x9, x23, x9
  40ea08:	ldrb	w9, [x9, #460]
  40ea0c:	tst	w9, w8
  40ea10:	b.eq	40eab4 <wcrtomb@plt+0xc0f4>  // b.none
  40ea14:	mov	w8, #0x16                  	// #22
  40ea18:	b	40e860 <wcrtomb@plt+0xbea0>
  40ea1c:	ldur	x9, [x29, #-8]
  40ea20:	cmn	x26, #0x2
  40ea24:	b.ne	40ea48 <wcrtomb@plt+0xc088>  // b.any
  40ea28:	ldurb	w2, [x9, #-1]
  40ea2c:	mov	x0, x27
  40ea30:	mov	x1, x23
  40ea34:	bl	40efe4 <wcrtomb@plt+0xc624>
  40ea38:	ldr	x22, [x23, #368]
  40ea3c:	mov	x25, x0
  40ea40:	mov	w8, wzr
  40ea44:	b	40e864 <wcrtomb@plt+0xbea4>
  40ea48:	cmp	x9, x19
  40ea4c:	b.hi	40eaa8 <wcrtomb@plt+0xc0e8>  // b.pmore
  40ea50:	ldurb	w8, [x9, #-1]
  40ea54:	ldur	x10, [x29, #-16]
  40ea58:	cmp	w8, w10
  40ea5c:	b.ne	40eaa8 <wcrtomb@plt+0xc0e8>  // b.any
  40ea60:	ldr	x8, [x23, #392]
  40ea64:	ldr	x25, [x8, x27, lsl #3]
  40ea68:	tbnz	x25, #63, 40eaa8 <wcrtomb@plt+0xc0e8>
  40ea6c:	ldur	x10, [x29, #-24]
  40ea70:	ldur	w8, [x29, #-28]
  40ea74:	add	x10, x10, #0x1
  40ea78:	stur	x10, [x29, #-24]
  40ea7c:	tbnz	w8, #0, 40eb94 <wcrtomb@plt+0xc1d4>
  40ea80:	ldr	x8, [sp, #8]
  40ea84:	ldrb	w8, [x8]
  40ea88:	cmp	w8, #0x4
  40ea8c:	b.eq	40eb88 <wcrtomb@plt+0xc1c8>  // b.none
  40ea90:	cmp	w8, #0x2
  40ea94:	b.ne	40eb90 <wcrtomb@plt+0xc1d0>  // b.any
  40ea98:	ldrsw	x10, [x23, #364]
  40ea9c:	mov	w8, wzr
  40eaa0:	sub	x25, x10, #0x1
  40eaa4:	b	40eb98 <wcrtomb@plt+0xc1d8>
  40eaa8:	stur	xzr, [x29, #-8]
  40eaac:	mov	w8, #0x16                  	// #22
  40eab0:	b	40e860 <wcrtomb@plt+0xbea0>
  40eab4:	cmp	x25, x19
  40eab8:	b.ne	40eadc <wcrtomb@plt+0xc11c>  // b.any
  40eabc:	ldr	x8, [x23, #296]
  40eac0:	mov	w1, #0x4                   	// #4
  40eac4:	mov	x2, x26
  40eac8:	mov	x3, x23
  40eacc:	madd	x8, x26, x20, x8
  40ead0:	ldrb	w0, [x8, #32]
  40ead4:	bl	40f6fc <wcrtomb@plt+0xcd3c>
  40ead8:	tbnz	w0, #0, 40ea14 <wcrtomb@plt+0xc054>
  40eadc:	tbz	w21, #0, 40eb08 <wcrtomb@plt+0xc148>
  40eae0:	ldrsw	x8, [x23, #364]
  40eae4:	cmp	x26, x8
  40eae8:	b.ge	40eb08 <wcrtomb@plt+0xc148>  // b.tcont
  40eaec:	mov	x0, x23
  40eaf0:	mov	x1, x25
  40eaf4:	mov	x2, x24
  40eaf8:	mov	x3, x19
  40eafc:	bl	40ed2c <wcrtomb@plt+0xc36c>
  40eb00:	mov	x24, x0
  40eb04:	stur	x0, [x29, #-8]
  40eb08:	tbz	w21, #0, 40eb64 <wcrtomb@plt+0xc1a4>
  40eb0c:	ldr	x8, [x23, #296]
  40eb10:	madd	x8, x26, x20, x8
  40eb14:	ldr	x8, [x8, #56]
  40eb18:	cbz	x8, 40eb64 <wcrtomb@plt+0xc1a4>
  40eb1c:	ldur	x8, [x29, #-8]
  40eb20:	cmp	x8, x19
  40eb24:	b.cs	40eb64 <wcrtomb@plt+0xc1a4>  // b.hs, b.nlast
  40eb28:	ldrb	w8, [x8]
  40eb2c:	add	x8, x23, x8, lsl #2
  40eb30:	ldr	w8, [x8, #1308]
  40eb34:	cmn	w8, #0x1
  40eb38:	b.ne	40eb64 <wcrtomb@plt+0xc1a4>  // b.any
  40eb3c:	sub	x2, x29, #0x8
  40eb40:	mov	x0, x23
  40eb44:	mov	x1, x26
  40eb48:	mov	x3, x19
  40eb4c:	bl	40eda8 <wcrtomb@plt+0xc3e8>
  40eb50:	ldur	x24, [x29, #-8]
  40eb54:	ldr	x22, [x23, #368]
  40eb58:	mov	x25, x0
  40eb5c:	mov	w8, wzr
  40eb60:	b	40e868 <wcrtomb@plt+0xbea8>
  40eb64:	ldur	x9, [x29, #-8]
  40eb68:	ldr	x8, [x23, #376]
  40eb6c:	add	x10, x9, #0x1
  40eb70:	ldr	x8, [x8, x26, lsl #3]
  40eb74:	stur	x10, [x29, #-8]
  40eb78:	ldrb	w9, [x9]
  40eb7c:	ldr	x25, [x8, x9, lsl #3]
  40eb80:	mov	w8, wzr
  40eb84:	b	40e868 <wcrtomb@plt+0xbea8>
  40eb88:	mov	x25, xzr
  40eb8c:	b	40eb94 <wcrtomb@plt+0xc1d4>
  40eb90:	ldr	x25, [x23, #400]
  40eb94:	mov	w8, wzr
  40eb98:	mov	x26, x27
  40eb9c:	mov	x24, x9
  40eba0:	b	40e868 <wcrtomb@plt+0xbea8>
  40eba4:	cmp	w8, #0x16
  40eba8:	b.ne	40ebd4 <wcrtomb@plt+0xc214>  // b.any
  40ebac:	ldr	x9, [sp, #24]
  40ebb0:	cbz	x9, 40ebc4 <wcrtomb@plt+0xc204>
  40ebb4:	ldr	x8, [x9]
  40ebb8:	ldur	x10, [x29, #-24]
  40ebbc:	add	x8, x8, x10
  40ebc0:	str	x8, [x9]
  40ebc4:	ldr	w8, [sp, #20]
  40ebc8:	strb	w8, [x19]
  40ebcc:	ldur	x0, [x29, #-8]
  40ebd0:	b	40ebd4 <wcrtomb@plt+0xc214>
  40ebd4:	ldp	x20, x19, [sp, #144]
  40ebd8:	ldp	x22, x21, [sp, #128]
  40ebdc:	ldp	x24, x23, [sp, #112]
  40ebe0:	ldp	x26, x25, [sp, #96]
  40ebe4:	ldp	x28, x27, [sp, #80]
  40ebe8:	ldp	x29, x30, [sp, #64]
  40ebec:	add	sp, sp, #0xa0
  40ebf0:	ret
  40ebf4:	sub	sp, sp, #0x40
  40ebf8:	stp	x29, x30, [sp, #16]
  40ebfc:	stp	x22, x21, [sp, #32]
  40ec00:	stp	x20, x19, [sp, #48]
  40ec04:	ldr	x22, [x0, #352]
  40ec08:	ldr	x8, [x0, #304]
  40ec0c:	add	x29, sp, #0x10
  40ec10:	subs	x2, x8, x22
  40ec14:	b.le	40ed18 <wcrtomb@plt+0xc358>
  40ec18:	ldr	x8, [x0, #368]
  40ec1c:	add	x9, x22, #0x2
  40ec20:	mov	x19, x0
  40ec24:	add	x1, sp, #0x8
  40ec28:	sub	x10, x8, #0x10
  40ec2c:	cmp	x8, #0x0
  40ec30:	csel	x0, xzr, x10, eq  // eq = none
  40ec34:	csel	x8, xzr, x9, eq  // eq = none
  40ec38:	mov	x3, #0xffffffffffffffff    	// #-1
  40ec3c:	mov	w4, #0x8                   	// #8
  40ec40:	str	x8, [sp, #8]
  40ec44:	bl	40c4f0 <wcrtomb@plt+0x9b30>
  40ec48:	add	x8, x0, #0x10
  40ec4c:	stp	xzr, xzr, [x0]
  40ec50:	str	x8, [x19, #368]
  40ec54:	ldr	x21, [sp, #8]
  40ec58:	ldr	x0, [x19, #376]
  40ec5c:	mov	w2, #0x8                   	// #8
  40ec60:	sub	x20, x21, #0x2
  40ec64:	mov	x1, x20
  40ec68:	str	x20, [x19, #352]
  40ec6c:	bl	413b14 <wcrtomb@plt+0x11154>
  40ec70:	ldr	x8, [x19, #384]
  40ec74:	str	x0, [x19, #376]
  40ec78:	mov	w2, #0x1                   	// #1
  40ec7c:	mov	x1, x20
  40ec80:	mov	x0, x8
  40ec84:	bl	413b14 <wcrtomb@plt+0x11154>
  40ec88:	ldr	x8, [x19, #392]
  40ec8c:	str	x0, [x19, #384]
  40ec90:	mov	w2, #0x8                   	// #8
  40ec94:	mov	x1, x20
  40ec98:	mov	x0, x8
  40ec9c:	bl	413b14 <wcrtomb@plt+0x11154>
  40eca0:	ldrb	w8, [x19, #1048]
  40eca4:	str	x0, [x19, #392]
  40eca8:	cbz	w8, 40ecd8 <wcrtomb@plt+0xc318>
  40ecac:	ldr	x8, [x19, #432]
  40ecb0:	mov	w2, #0x8                   	// #8
  40ecb4:	mov	x1, x21
  40ecb8:	sub	x9, x8, #0x10
  40ecbc:	cmp	x8, #0x0
  40ecc0:	csel	x0, xzr, x9, eq  // eq = none
  40ecc4:	bl	413b14 <wcrtomb@plt+0x11154>
  40ecc8:	cbnz	x22, 40ecd0 <wcrtomb@plt+0xc310>
  40eccc:	stp	xzr, xzr, [x0]
  40ecd0:	add	x8, x0, #0x10
  40ecd4:	str	x8, [x19, #432]
  40ecd8:	cmp	x22, x20
  40ecdc:	b.ge	40ed18 <wcrtomb@plt+0xc358>  // b.tcont
  40ece0:	ldrb	w8, [x19, #1048]
  40ece4:	b	40ecf4 <wcrtomb@plt+0xc334>
  40ece8:	add	x22, x22, #0x1
  40ecec:	cmp	x20, x22
  40ecf0:	b.eq	40ed18 <wcrtomb@plt+0xc358>  // b.none
  40ecf4:	ldr	x9, [x19, #368]
  40ecf8:	lsl	x10, x22, #3
  40ecfc:	str	xzr, [x9, x10]
  40ed00:	ldr	x9, [x19, #376]
  40ed04:	str	xzr, [x9, x10]
  40ed08:	cbz	w8, 40ece8 <wcrtomb@plt+0xc328>
  40ed0c:	ldr	x9, [x19, #432]
  40ed10:	str	xzr, [x9, x22, lsl #3]
  40ed14:	b	40ece8 <wcrtomb@plt+0xc328>
  40ed18:	ldp	x20, x19, [sp, #48]
  40ed1c:	ldp	x22, x21, [sp, #32]
  40ed20:	ldp	x29, x30, [sp, #16]
  40ed24:	add	sp, sp, #0x40
  40ed28:	ret
  40ed2c:	sub	sp, sp, #0x40
  40ed30:	stp	x29, x30, [sp, #16]
  40ed34:	stp	x22, x21, [sp, #32]
  40ed38:	stp	x20, x19, [sp, #48]
  40ed3c:	ldrb	w8, [x1]
  40ed40:	mov	x21, x1
  40ed44:	add	x29, sp, #0x10
  40ed48:	add	x8, x0, x8
  40ed4c:	ldrb	w8, [x8, #716]
  40ed50:	cbz	w8, 40ed5c <wcrtomb@plt+0xc39c>
  40ed54:	mov	x20, x21
  40ed58:	b	40ed90 <wcrtomb@plt+0xc3d0>
  40ed5c:	mov	x20, x2
  40ed60:	cmp	x2, x21
  40ed64:	b.cs	40ed90 <wcrtomb@plt+0xc3d0>  // b.hs, b.nlast
  40ed68:	mov	x19, x3
  40ed6c:	mov	x22, x0
  40ed70:	sub	x2, x19, x20
  40ed74:	sub	x0, x29, #0x4
  40ed78:	mov	x1, x20
  40ed7c:	mov	x3, x22
  40ed80:	bl	40ce14 <wcrtomb@plt+0xa454>
  40ed84:	add	x20, x20, w0, sxtw
  40ed88:	cmp	x20, x21
  40ed8c:	b.cc	40ed70 <wcrtomb@plt+0xc3b0>  // b.lo, b.ul, b.last
  40ed90:	mov	x0, x20
  40ed94:	ldp	x20, x19, [sp, #48]
  40ed98:	ldp	x22, x21, [sp, #32]
  40ed9c:	ldp	x29, x30, [sp, #16]
  40eda0:	add	sp, sp, #0x40
  40eda4:	ret
  40eda8:	sub	sp, sp, #0x50
  40edac:	stp	x29, x30, [sp, #16]
  40edb0:	stp	x24, x23, [sp, #32]
  40edb4:	stp	x22, x21, [sp, #48]
  40edb8:	stp	x20, x19, [sp, #64]
  40edbc:	mov	x19, x1
  40edc0:	ldr	x1, [x2]
  40edc4:	add	x29, sp, #0x10
  40edc8:	mov	x20, x0
  40edcc:	mov	x22, x2
  40edd0:	sub	x2, x3, x1
  40edd4:	sub	x0, x29, #0x4
  40edd8:	mov	x3, x20
  40eddc:	bl	40ce14 <wcrtomb@plt+0xa454>
  40ede0:	mov	w23, w0
  40ede4:	cmp	w0, #0x1
  40ede8:	mov	w24, wzr
  40edec:	mov	x21, x19
  40edf0:	str	xzr, [x20, #416]
  40edf4:	b.ge	40ee1c <wcrtomb@plt+0xc45c>  // b.tcont
  40edf8:	b	40ee34 <wcrtomb@plt+0xc474>
  40edfc:	mov	x0, x20
  40ee00:	mov	x1, x21
  40ee04:	mov	x2, x22
  40ee08:	bl	40f734 <wcrtomb@plt+0xcd74>
  40ee0c:	add	w24, w24, #0x1
  40ee10:	cmp	w23, w24
  40ee14:	mov	x21, x0
  40ee18:	b.eq	40ee30 <wcrtomb@plt+0xc470>  // b.none
  40ee1c:	cbz	w24, 40edfc <wcrtomb@plt+0xc43c>
  40ee20:	ldrsw	x8, [x20, #364]
  40ee24:	cmp	x21, x8
  40ee28:	b.ge	40edfc <wcrtomb@plt+0xc43c>  // b.tcont
  40ee2c:	b	40ee34 <wcrtomb@plt+0xc474>
  40ee30:	mov	w24, w23
  40ee34:	ldr	x8, [x22]
  40ee38:	sub	w9, w23, w24
  40ee3c:	add	x8, x8, w9, sxtw
  40ee40:	str	x8, [x22]
  40ee44:	ldur	w8, [x29, #-4]
  40ee48:	cmn	w8, #0x1
  40ee4c:	b.eq	40ef18 <wcrtomb@plt+0xc558>  // b.none
  40ee50:	ldr	x8, [x20, #296]
  40ee54:	mov	w9, #0x50                  	// #80
  40ee58:	madd	x8, x19, x9, x8
  40ee5c:	ldr	x8, [x8, #72]
  40ee60:	tbz	x8, #63, 40eef0 <wcrtomb@plt+0xc530>
  40ee64:	ldr	x8, [x20, #440]
  40ee68:	cmp	x8, #0x400
  40ee6c:	b.lt	40eed4 <wcrtomb@plt+0xc514>  // b.tstop
  40ee70:	ldr	x8, [x20, #352]
  40ee74:	tbnz	x8, #63, 40eea4 <wcrtomb@plt+0xc4e4>
  40ee78:	mov	x22, #0xffffffffffffffff    	// #-1
  40ee7c:	ldr	x8, [x20, #432]
  40ee80:	lsl	x23, x22, #3
  40ee84:	ldr	x0, [x8, x23]
  40ee88:	bl	402770 <free@plt>
  40ee8c:	ldr	x8, [x20, #432]
  40ee90:	add	x22, x22, #0x1
  40ee94:	str	xzr, [x8, x23]
  40ee98:	ldr	x8, [x20, #352]
  40ee9c:	cmp	x22, x8
  40eea0:	b.lt	40ee7c <wcrtomb@plt+0xc4bc>  // b.tstop
  40eea4:	ldr	x8, [x20, #304]
  40eea8:	cmp	x8, #0x1
  40eeac:	b.lt	40eed0 <wcrtomb@plt+0xc510>  // b.tstop
  40eeb0:	ldp	x10, x9, [x20, #296]
  40eeb4:	mov	x8, xzr
  40eeb8:	mov	x11, #0xffffffffffffffff    	// #-1
  40eebc:	add	x10, x10, #0x48
  40eec0:	add	x8, x8, #0x1
  40eec4:	cmp	x8, x9
  40eec8:	str	x11, [x10], #80
  40eecc:	b.lt	40eec0 <wcrtomb@plt+0xc500>  // b.tstop
  40eed0:	str	xzr, [x20, #440]
  40eed4:	ldr	x8, [x20, #440]
  40eed8:	ldr	x9, [x20, #296]
  40eedc:	mov	w10, #0x50                  	// #80
  40eee0:	add	x11, x8, #0x1
  40eee4:	madd	x9, x19, x10, x9
  40eee8:	str	x11, [x20, #440]
  40eeec:	str	x8, [x9, #72]
  40eef0:	ldr	x8, [x20, #432]
  40eef4:	ldr	x8, [x8, x21, lsl #3]
  40eef8:	cbz	x8, 40ef20 <wcrtomb@plt+0xc560>
  40eefc:	ldr	x9, [x20, #296]
  40ef00:	mov	w10, #0x50                  	// #80
  40ef04:	madd	x9, x19, x10, x9
  40ef08:	ldr	x9, [x9, #72]
  40ef0c:	ldr	x22, [x8, x9, lsl #3]
  40ef10:	tbz	x22, #63, 40efc8 <wcrtomb@plt+0xc608>
  40ef14:	b	40ef48 <wcrtomb@plt+0xc588>
  40ef18:	mov	x22, x21
  40ef1c:	b	40efc8 <wcrtomb@plt+0xc608>
  40ef20:	mov	w0, #0x2000                	// #8192
  40ef24:	bl	413ae8 <wcrtomb@plt+0x11128>
  40ef28:	ldr	x8, [x20, #432]
  40ef2c:	lsl	x9, x21, #3
  40ef30:	mov	w1, #0xff                  	// #255
  40ef34:	mov	w2, #0x2000                	// #8192
  40ef38:	str	x0, [x8, x9]
  40ef3c:	ldr	x8, [x20, #432]
  40ef40:	ldr	x0, [x8, x9]
  40ef44:	bl	4025b0 <memset@plt>
  40ef48:	ldr	x8, [x20, #296]
  40ef4c:	mov	w9, #0x50                  	// #80
  40ef50:	add	x22, x20, #0x198
  40ef54:	cmn	x21, #0x1
  40ef58:	madd	x9, x19, x9, x8
  40ef5c:	add	x0, x9, #0x30
  40ef60:	b.eq	40ef7c <wcrtomb@plt+0xc5bc>  // b.none
  40ef64:	mov	w9, #0x50                  	// #80
  40ef68:	madd	x8, x21, x9, x8
  40ef6c:	add	x1, x8, #0x8
  40ef70:	mov	x2, x22
  40ef74:	bl	40d604 <wcrtomb@plt+0xac44>
  40ef78:	b	40ef84 <wcrtomb@plt+0xc5c4>
  40ef7c:	mov	x1, x22
  40ef80:	bl	40d620 <wcrtomb@plt+0xac60>
  40ef84:	mov	x0, x20
  40ef88:	mov	x1, x22
  40ef8c:	bl	40d9f8 <wcrtomb@plt+0xb038>
  40ef90:	eor	w2, w0, #0x7
  40ef94:	mov	x0, x20
  40ef98:	mov	x1, x22
  40ef9c:	bl	40da38 <wcrtomb@plt+0xb078>
  40efa0:	mov	x22, x0
  40efa4:	mov	x0, x20
  40efa8:	bl	40ebf4 <wcrtomb@plt+0xc234>
  40efac:	ldr	x9, [x20, #296]
  40efb0:	ldr	x8, [x20, #432]
  40efb4:	mov	w10, #0x50                  	// #80
  40efb8:	madd	x9, x19, x10, x9
  40efbc:	ldr	x8, [x8, x21, lsl #3]
  40efc0:	ldr	x9, [x9, #72]
  40efc4:	str	x22, [x8, x9, lsl #3]
  40efc8:	mov	x0, x22
  40efcc:	ldp	x20, x19, [sp, #64]
  40efd0:	ldp	x22, x21, [sp, #48]
  40efd4:	ldp	x24, x23, [sp, #32]
  40efd8:	ldp	x29, x30, [sp, #16]
  40efdc:	add	sp, sp, #0x50
  40efe0:	ret
  40efe4:	sub	sp, sp, #0x100
  40efe8:	stp	x29, x30, [sp, #160]
  40efec:	stp	x28, x27, [sp, #176]
  40eff0:	stp	x26, x25, [sp, #192]
  40eff4:	stp	x24, x23, [sp, #208]
  40eff8:	stp	x22, x21, [sp, #224]
  40effc:	stp	x20, x19, [sp, #240]
  40f000:	add	x29, sp, #0xa0
  40f004:	str	x2, [sp, #8]
  40f008:	mov	x21, x1
  40f00c:	mov	x20, x0
  40f010:	bl	40f7f8 <wcrtomb@plt+0xce38>
  40f014:	tst	w0, #0x1
  40f018:	mov	w8, #0x170                 	// #368
  40f01c:	mov	w9, #0x178                 	// #376
  40f020:	csel	x8, x9, x8, ne  // ne = any
  40f024:	ldr	x19, [x21, x8]
  40f028:	ldr	x22, [x19, x20, lsl #3]
  40f02c:	cbnz	x22, 40f0c0 <wcrtomb@plt+0xc700>
  40f030:	ldr	w8, [x21, #360]
  40f034:	cmp	w8, #0x400
  40f038:	b.lt	40f08c <wcrtomb@plt+0xc6cc>  // b.tstop
  40f03c:	ldrsw	x22, [x21, #364]
  40f040:	ldr	x8, [x21, #352]
  40f044:	cmp	x8, x22
  40f048:	b.le	40f088 <wcrtomb@plt+0xc6c8>
  40f04c:	ldr	x8, [x21, #368]
  40f050:	lsl	x23, x22, #3
  40f054:	ldr	x0, [x8, x23]
  40f058:	bl	402770 <free@plt>
  40f05c:	ldr	x8, [x21, #376]
  40f060:	ldr	x0, [x8, x23]
  40f064:	bl	402770 <free@plt>
  40f068:	ldr	x8, [x21, #376]
  40f06c:	add	x22, x22, #0x1
  40f070:	str	xzr, [x8, x23]
  40f074:	ldr	x8, [x21, #368]
  40f078:	str	xzr, [x8, x23]
  40f07c:	ldr	x8, [x21, #352]
  40f080:	cmp	x22, x8
  40f084:	b.lt	40f04c <wcrtomb@plt+0xc68c>  // b.tstop
  40f088:	str	wzr, [x21, #360]
  40f08c:	ldr	w8, [x21, #360]
  40f090:	mov	w0, #0x800                 	// #2048
  40f094:	add	w8, w8, #0x1
  40f098:	str	w8, [x21, #360]
  40f09c:	bl	413ae8 <wcrtomb@plt+0x11128>
  40f0a0:	mov	x22, x0
  40f0a4:	mov	x8, xzr
  40f0a8:	mov	x9, #0xfffffffffffffffe    	// #-2
  40f0ac:	str	x0, [x19, x20, lsl #3]
  40f0b0:	str	x9, [x22, x8]
  40f0b4:	add	x8, x8, #0x8
  40f0b8:	cmp	x8, #0x800
  40f0bc:	b.ne	40f0b0 <wcrtomb@plt+0xc6f0>  // b.any
  40f0c0:	ldr	x8, [x21, #384]
  40f0c4:	mov	w9, #0x50                  	// #80
  40f0c8:	mov	w1, #0x4                   	// #4
  40f0cc:	mov	x2, x20
  40f0d0:	strb	wzr, [x8, x20]
  40f0d4:	ldr	x8, [x21, #296]
  40f0d8:	mov	x3, x21
  40f0dc:	madd	x8, x20, x9, x8
  40f0e0:	ldrb	w0, [x8, #32]
  40f0e4:	bl	40f6fc <wcrtomb@plt+0xcd3c>
  40f0e8:	tbz	w0, #0, 40f0fc <wcrtomb@plt+0xc73c>
  40f0ec:	ldr	x8, [x21, #384]
  40f0f0:	ldrb	w9, [x8, x20]
  40f0f4:	orr	w9, w9, #0x4
  40f0f8:	strb	w9, [x8, x20]
  40f0fc:	ldr	x8, [x21, #296]
  40f100:	mov	w9, #0x50                  	// #80
  40f104:	mov	w1, #0x2                   	// #2
  40f108:	mov	x2, x20
  40f10c:	madd	x8, x20, x9, x8
  40f110:	ldrb	w0, [x8, #32]
  40f114:	mov	x3, x21
  40f118:	bl	40f6fc <wcrtomb@plt+0xcd3c>
  40f11c:	tbz	w0, #0, 40f130 <wcrtomb@plt+0xc770>
  40f120:	ldr	x8, [x21, #384]
  40f124:	ldrb	w9, [x8, x20]
  40f128:	orr	w9, w9, #0x2
  40f12c:	strb	w9, [x8, x20]
  40f130:	ldr	x8, [x21, #296]
  40f134:	mov	w9, #0x50                  	// #80
  40f138:	mov	w1, #0x1                   	// #1
  40f13c:	mov	x2, x20
  40f140:	madd	x8, x20, x9, x8
  40f144:	ldrb	w0, [x8, #32]
  40f148:	mov	x3, x21
  40f14c:	str	x22, [sp]
  40f150:	bl	40f6fc <wcrtomb@plt+0xcd3c>
  40f154:	tbz	w0, #0, 40f168 <wcrtomb@plt+0xc7a8>
  40f158:	ldr	x8, [x21, #384]
  40f15c:	ldrb	w9, [x8, x20]
  40f160:	orr	w9, w9, #0x1
  40f164:	strb	w9, [x8, x20]
  40f168:	ldr	x1, [x21, #176]
  40f16c:	sub	x0, x29, #0x18
  40f170:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40f174:	ldr	x8, [x21, #296]
  40f178:	mov	w9, #0x50                  	// #80
  40f17c:	madd	x8, x20, x9, x8
  40f180:	ldr	x8, [x8, #16]
  40f184:	cmp	x8, #0x1
  40f188:	b.lt	40f22c <wcrtomb@plt+0xc86c>  // b.tstop
  40f18c:	mov	x19, xzr
  40f190:	mov	w22, #0x50                  	// #80
  40f194:	mov	w23, #0x18                  	// #24
  40f198:	b	40f1b4 <wcrtomb@plt+0xc7f4>
  40f19c:	ldr	x8, [x21, #296]
  40f1a0:	add	x19, x19, #0x1
  40f1a4:	madd	x8, x20, x22, x8
  40f1a8:	ldr	x8, [x8, #16]
  40f1ac:	cmp	x19, x8
  40f1b0:	b.ge	40f22c <wcrtomb@plt+0xc86c>  // b.tcont
  40f1b4:	ldr	x8, [x21, #296]
  40f1b8:	lsl	x24, x19, #4
  40f1bc:	madd	x8, x20, x22, x8
  40f1c0:	ldr	x9, [x8, #8]
  40f1c4:	ldr	x8, [x21, #320]
  40f1c8:	ldr	x9, [x9, x24]
  40f1cc:	madd	x10, x9, x23, x8
  40f1d0:	ldr	x10, [x10, #8]
  40f1d4:	cmp	x10, #0x1
  40f1d8:	b.lt	40f19c <wcrtomb@plt+0xc7dc>  // b.tstop
  40f1dc:	mov	x25, xzr
  40f1e0:	mov	x26, xzr
  40f1e4:	mul	x9, x9, x23
  40f1e8:	ldr	x8, [x8, x9]
  40f1ec:	sub	x2, x29, #0x18
  40f1f0:	add	x8, x8, x25
  40f1f4:	ldp	x0, x1, [x8]
  40f1f8:	bl	40e3e4 <wcrtomb@plt+0xba24>
  40f1fc:	ldr	x8, [x21, #296]
  40f200:	add	x26, x26, #0x1
  40f204:	add	x25, x25, #0x10
  40f208:	madd	x8, x20, x22, x8
  40f20c:	ldr	x9, [x8, #8]
  40f210:	ldr	x8, [x21, #320]
  40f214:	ldr	x9, [x9, x24]
  40f218:	madd	x10, x9, x23, x8
  40f21c:	ldr	x10, [x10, #8]
  40f220:	cmp	x26, x10
  40f224:	b.lt	40f1e4 <wcrtomb@plt+0xc824>  // b.tstop
  40f228:	b	40f19c <wcrtomb@plt+0xc7dc>
  40f22c:	ldr	x1, [x21, #176]
  40f230:	sub	x0, x29, #0x30
  40f234:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40f238:	add	x0, sp, #0x50
  40f23c:	add	x28, sp, #0x50
  40f240:	bl	40c6d0 <wcrtomb@plt+0x9d10>
  40f244:	ldur	x8, [x29, #-16]
  40f248:	cmp	x8, #0x1
  40f24c:	b.lt	40f4fc <wcrtomb@plt+0xcb3c>  // b.tstop
  40f250:	ldr	x8, [sp, #8]
  40f254:	mov	x19, xzr
  40f258:	add	x23, x21, #0x3f0
  40f25c:	add	x22, x21, #0x3d0
  40f260:	and	w9, w8, #0xff
  40f264:	and	x8, x8, #0xff
  40f268:	str	x8, [sp, #16]
  40f26c:	ldur	x8, [x29, #-24]
  40f270:	add	x26, sp, #0x30
  40f274:	str	w9, [sp, #24]
  40f278:	str	x8, [sp, #40]
  40f27c:	ldur	x8, [x29, #-16]
  40f280:	str	x8, [sp, #32]
  40f284:	b	40f298 <wcrtomb@plt+0xc8d8>
  40f288:	ldr	x8, [sp, #32]
  40f28c:	add	x19, x19, #0x1
  40f290:	cmp	x19, x8
  40f294:	b.ge	40f4fc <wcrtomb@plt+0xcb3c>  // b.tcont
  40f298:	ldr	x8, [sp, #40]
  40f29c:	ldr	x9, [x21, #144]
  40f2a0:	add	x8, x8, x19, lsl #4
  40f2a4:	ldp	x24, x25, [x8]
  40f2a8:	ldr	x8, [x9, x24, lsl #3]
  40f2ac:	cmp	x8, #0xff
  40f2b0:	b.hi	40f2f0 <wcrtomb@plt+0xc930>  // b.pmore
  40f2b4:	add	x0, sp, #0x30
  40f2b8:	bl	40c79c <wcrtomb@plt+0x9ddc>
  40f2bc:	ldr	x8, [x21, #144]
  40f2c0:	lsl	x27, x24, #3
  40f2c4:	add	x1, sp, #0x30
  40f2c8:	ldr	w0, [x8, x27]
  40f2cc:	bl	40c288 <wcrtomb@plt+0x98c8>
  40f2d0:	ldr	x8, [x21, #144]
  40f2d4:	ldr	x9, [sp, #16]
  40f2d8:	ldr	x8, [x8, x27]
  40f2dc:	cmp	x8, x9
  40f2e0:	cset	w0, eq  // eq = none
  40f2e4:	cmp	w25, #0x1ff
  40f2e8:	b.eq	40f324 <wcrtomb@plt+0xc964>  // b.none
  40f2ec:	b	40f3c8 <wcrtomb@plt+0xca08>
  40f2f0:	cmp	x8, #0x114
  40f2f4:	b.lt	40f330 <wcrtomb@plt+0xc970>  // b.tstop
  40f2f8:	ldr	x9, [x21]
  40f2fc:	ldr	w0, [sp, #24]
  40f300:	add	x1, sp, #0x30
  40f304:	add	x8, x9, x8, lsl #5
  40f308:	mov	x9, #0xffffffffffffdd80    	// #-8832
  40f30c:	add	x8, x8, x9
  40f310:	ldp	q1, q0, [x8]
  40f314:	stp	q1, q0, [sp, #48]
  40f318:	bl	40c084 <wcrtomb@plt+0x96c4>
  40f31c:	cmp	w25, #0x1ff
  40f320:	b.ne	40f3c8 <wcrtomb@plt+0xca08>  // b.any
  40f324:	mov	x8, xzr
  40f328:	tbnz	w0, #0, 40f4ac <wcrtomb@plt+0xcaec>
  40f32c:	b	40f4dc <wcrtomb@plt+0xcb1c>
  40f330:	cmp	x8, #0x10a
  40f334:	b.ne	40f288 <wcrtomb@plt+0xc8c8>  // b.any
  40f338:	ldr	x8, [x21]
  40f33c:	ldr	x9, [x21, #24]
  40f340:	ldr	w0, [sp, #24]
  40f344:	add	x1, sp, #0x30
  40f348:	add	x8, x8, x9, lsl #5
  40f34c:	ldp	q1, q0, [x8]
  40f350:	stp	q1, q0, [sp, #48]
  40f354:	bl	40c084 <wcrtomb@plt+0x96c4>
  40f358:	ldr	x27, [x21, #296]
  40f35c:	mov	w8, #0x50                  	// #80
  40f360:	str	w0, [sp, #28]
  40f364:	mov	w2, #0x1                   	// #1
  40f368:	madd	x8, x20, x8, x27
  40f36c:	ldrb	w1, [x8, #32]
  40f370:	mov	w0, w25
  40f374:	bl	40e4fc <wcrtomb@plt+0xbb3c>
  40f378:	tbz	w0, #0, 40f3bc <wcrtomb@plt+0xc9fc>
  40f37c:	mov	w8, #0x50                  	// #80
  40f380:	madd	x8, x20, x8, x27
  40f384:	ldr	x8, [x8, #56]
  40f388:	mov	w9, #0x50                  	// #80
  40f38c:	cbnz	x8, 40f3a4 <wcrtomb@plt+0xc9e4>
  40f390:	madd	x8, x20, x9, x27
  40f394:	add	x0, x8, #0x30
  40f398:	mov	w1, #0x1                   	// #1
  40f39c:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40f3a0:	mov	w9, #0x50                  	// #80
  40f3a4:	ldr	x8, [x21, #296]
  40f3a8:	mov	x0, x24
  40f3ac:	mov	x1, x25
  40f3b0:	madd	x8, x20, x9, x8
  40f3b4:	add	x2, x8, #0x30
  40f3b8:	bl	40e3e4 <wcrtomb@plt+0xba24>
  40f3bc:	ldr	w0, [sp, #28]
  40f3c0:	cmp	w25, #0x1ff
  40f3c4:	b.eq	40f324 <wcrtomb@plt+0xc964>  // b.none
  40f3c8:	ldr	x8, [x21, #296]
  40f3cc:	mov	w9, #0x50                  	// #80
  40f3d0:	str	w0, [sp, #28]
  40f3d4:	mov	w2, #0x4                   	// #4
  40f3d8:	madd	x8, x20, x9, x8
  40f3dc:	ldrb	w27, [x8, #32]
  40f3e0:	mov	w0, w25
  40f3e4:	mov	w1, w27
  40f3e8:	bl	40e4fc <wcrtomb@plt+0xbb3c>
  40f3ec:	tbnz	w0, #0, 40f410 <wcrtomb@plt+0xca50>
  40f3f0:	mov	x8, xzr
  40f3f4:	ldr	x9, [x23, x8]
  40f3f8:	ldr	x10, [x26, x8]
  40f3fc:	bic	x9, x10, x9
  40f400:	str	x9, [x26, x8]
  40f404:	add	x8, x8, #0x8
  40f408:	cmp	x8, #0x20
  40f40c:	b.ne	40f3f4 <wcrtomb@plt+0xca34>  // b.any
  40f410:	mov	w2, #0x2                   	// #2
  40f414:	mov	w0, w25
  40f418:	mov	w1, w27
  40f41c:	bl	40e4fc <wcrtomb@plt+0xbb3c>
  40f420:	tbnz	w0, #0, 40f444 <wcrtomb@plt+0xca84>
  40f424:	mov	x8, xzr
  40f428:	ldr	x9, [x22, x8]
  40f42c:	ldr	x10, [x26, x8]
  40f430:	bic	x9, x10, x9
  40f434:	str	x9, [x26, x8]
  40f438:	add	x8, x8, #0x8
  40f43c:	cmp	x8, #0x20
  40f440:	b.ne	40f428 <wcrtomb@plt+0xca68>  // b.any
  40f444:	mov	w2, #0x1                   	// #1
  40f448:	mov	w0, w25
  40f44c:	mov	w1, w27
  40f450:	bl	40e4fc <wcrtomb@plt+0xbb3c>
  40f454:	tbnz	w0, #0, 40f484 <wcrtomb@plt+0xcac4>
  40f458:	mov	x8, xzr
  40f45c:	add	x9, x21, x8
  40f460:	ldr	x10, [x9, #976]
  40f464:	ldr	x9, [x9, #1008]
  40f468:	ldr	x11, [x26, x8]
  40f46c:	orr	x9, x9, x10
  40f470:	and	x9, x11, x9
  40f474:	str	x9, [x26, x8]
  40f478:	add	x8, x8, #0x8
  40f47c:	cmp	x8, #0x20
  40f480:	b.ne	40f45c <wcrtomb@plt+0xca9c>  // b.any
  40f484:	add	x0, sp, #0x30
  40f488:	bl	40cfd0 <wcrtomb@plt+0xa610>
  40f48c:	tbnz	w0, #0, 40f288 <wcrtomb@plt+0xc8c8>
  40f490:	ldr	w0, [sp, #24]
  40f494:	add	x1, sp, #0x30
  40f498:	bl	40c084 <wcrtomb@plt+0x96c4>
  40f49c:	ldr	w8, [sp, #28]
  40f4a0:	and	w0, w8, w0
  40f4a4:	mov	x8, xzr
  40f4a8:	tbz	w0, #0, 40f4dc <wcrtomb@plt+0xcb1c>
  40f4ac:	ldr	x9, [x26, x8]
  40f4b0:	ldr	x10, [x28, x8]
  40f4b4:	and	x9, x10, x9
  40f4b8:	str	x9, [x28, x8]
  40f4bc:	add	x8, x8, #0x8
  40f4c0:	cmp	x8, #0x20
  40f4c4:	b.ne	40f4ac <wcrtomb@plt+0xcaec>  // b.any
  40f4c8:	sub	x2, x29, #0x30
  40f4cc:	mov	x0, x24
  40f4d0:	mov	x1, x25
  40f4d4:	bl	40d980 <wcrtomb@plt+0xafc0>
  40f4d8:	b	40f288 <wcrtomb@plt+0xc8c8>
  40f4dc:	ldr	x9, [x26, x8]
  40f4e0:	ldr	x10, [x28, x8]
  40f4e4:	bic	x9, x10, x9
  40f4e8:	str	x9, [x28, x8]
  40f4ec:	add	x8, x8, #0x8
  40f4f0:	cmp	x8, #0x20
  40f4f4:	b.ne	40f4dc <wcrtomb@plt+0xcb1c>  // b.any
  40f4f8:	b	40f288 <wcrtomb@plt+0xc8c8>
  40f4fc:	ldr	x1, [x21, #176]
  40f500:	add	x0, sp, #0x30
  40f504:	bl	40d5d0 <wcrtomb@plt+0xac10>
  40f508:	ldur	x8, [x29, #-40]
  40f50c:	ldrb	w9, [x21, #328]
  40f510:	ldr	x22, [sp]
  40f514:	cmp	x8, #0x0
  40f518:	b.le	40f5cc <wcrtomb@plt+0xcc0c>
  40f51c:	cbz	w9, 40f58c <wcrtomb@plt+0xcbcc>
  40f520:	ldrb	w10, [x21, #1048]
  40f524:	cmp	w10, #0x1
  40f528:	cset	w9, ne  // ne = any
  40f52c:	cbz	w10, 40f568 <wcrtomb@plt+0xcba8>
  40f530:	cmp	x8, #0x1
  40f534:	b.lt	40f56c <wcrtomb@plt+0xcbac>  // b.tstop
  40f538:	ldr	x10, [x21, #280]
  40f53c:	ldur	x11, [x29, #-48]
  40f540:	mov	w12, #0x1                   	// #1
  40f544:	mov	w9, #0x1                   	// #1
  40f548:	ldr	x13, [x11], #16
  40f54c:	ldrb	w13, [x10, x13]
  40f550:	and	w13, w9, w13
  40f554:	and	w9, w13, #0x1
  40f558:	tbz	w13, #0, 40f568 <wcrtomb@plt+0xcba8>
  40f55c:	cmp	x12, x8
  40f560:	add	x12, x12, #0x1
  40f564:	b.lt	40f548 <wcrtomb@plt+0xcb88>  // b.tstop
  40f568:	cbz	w9, 40f58c <wcrtomb@plt+0xcbcc>
  40f56c:	ldr	x8, [x21, #296]
  40f570:	sub	x1, x29, #0x30
  40f574:	add	x2, sp, #0x30
  40f578:	add	x0, x8, #0x8
  40f57c:	bl	40d604 <wcrtomb@plt+0xac44>
  40f580:	add	x0, sp, #0x30
  40f584:	sub	x1, x29, #0x30
  40f588:	bl	40d620 <wcrtomb@plt+0xac60>
  40f58c:	add	x1, sp, #0x50
  40f590:	mov	x0, x21
  40f594:	bl	40f814 <wcrtomb@plt+0xce54>
  40f598:	mov	w24, w0
  40f59c:	sub	x1, x29, #0x30
  40f5a0:	mov	x0, x21
  40f5a4:	bl	40d9f8 <wcrtomb@plt+0xb038>
  40f5a8:	mov	w25, w0
  40f5ac:	bics	wzr, w24, w0
  40f5b0:	b.eq	40f5e4 <wcrtomb@plt+0xcc24>  // b.none
  40f5b4:	eor	w2, w25, #0x7
  40f5b8:	sub	x1, x29, #0x30
  40f5bc:	mov	x0, x21
  40f5c0:	bl	40da38 <wcrtomb@plt+0xb078>
  40f5c4:	mov	x23, x0
  40f5c8:	b	40f5e8 <wcrtomb@plt+0xcc28>
  40f5cc:	cbz	w9, 40f6ec <wcrtomb@plt+0xcd2c>
  40f5d0:	ldrsw	x8, [x21, #364]
  40f5d4:	ldr	x23, [x21, #400]
  40f5d8:	mov	x24, xzr
  40f5dc:	sub	x25, x8, #0x1
  40f5e0:	b	40f62c <wcrtomb@plt+0xcc6c>
  40f5e4:	mov	x23, #0xffffffffffffffff    	// #-1
  40f5e8:	and	w19, w25, w24
  40f5ec:	mov	x24, x23
  40f5f0:	tbz	w19, #2, 40f608 <wcrtomb@plt+0xcc48>
  40f5f4:	sub	x1, x29, #0x30
  40f5f8:	mov	w2, #0x4                   	// #4
  40f5fc:	mov	x0, x21
  40f600:	bl	40da38 <wcrtomb@plt+0xb078>
  40f604:	mov	x24, x0
  40f608:	mov	x25, x23
  40f60c:	tbz	w19, #1, 40f624 <wcrtomb@plt+0xcc64>
  40f610:	sub	x1, x29, #0x30
  40f614:	mov	w2, #0x2                   	// #2
  40f618:	mov	x0, x21
  40f61c:	bl	40da38 <wcrtomb@plt+0xb078>
  40f620:	mov	x25, x0
  40f624:	mov	x0, x21
  40f628:	bl	40ebf4 <wcrtomb@plt+0xc234>
  40f62c:	mov	x26, xzr
  40f630:	add	x19, x21, #0x1cc
  40f634:	b	40f648 <wcrtomb@plt+0xcc88>
  40f638:	str	x8, [x22, x26, lsl #3]
  40f63c:	add	x26, x26, #0x1
  40f640:	cmp	x26, #0x100
  40f644:	b.eq	40f67c <wcrtomb@plt+0xccbc>  // b.none
  40f648:	add	x1, sp, #0x50
  40f64c:	mov	w0, w26
  40f650:	bl	40c084 <wcrtomb@plt+0x96c4>
  40f654:	tbz	w0, #0, 40f63c <wcrtomb@plt+0xcc7c>
  40f658:	ldrb	w9, [x19, x26]
  40f65c:	mov	x8, x24
  40f660:	cmp	w9, #0x4
  40f664:	b.eq	40f638 <wcrtomb@plt+0xcc78>  // b.none
  40f668:	cmp	w9, #0x2
  40f66c:	mov	x8, x25
  40f670:	b.eq	40f638 <wcrtomb@plt+0xcc78>  // b.none
  40f674:	mov	x8, x23
  40f678:	b	40f638 <wcrtomb@plt+0xcc78>
  40f67c:	ldur	x0, [x29, #-48]
  40f680:	bl	402770 <free@plt>
  40f684:	ldur	x0, [x29, #-24]
  40f688:	bl	402770 <free@plt>
  40f68c:	ldr	x0, [sp, #48]
  40f690:	bl	402770 <free@plt>
  40f694:	ldrb	w23, [x21, #459]
  40f698:	add	x1, sp, #0x50
  40f69c:	mov	w0, w23
  40f6a0:	bl	40c084 <wcrtomb@plt+0x96c4>
  40f6a4:	tbz	w0, #0, 40f6c0 <wcrtomb@plt+0xcd00>
  40f6a8:	lsl	x8, x23, #3
  40f6ac:	ldr	x9, [x21, #392]
  40f6b0:	ldr	x10, [x22, x8]
  40f6b4:	mov	x11, #0xffffffffffffffff    	// #-1
  40f6b8:	str	x10, [x9, x20, lsl #3]
  40f6bc:	str	x11, [x22, x8]
  40f6c0:	ldr	x8, [sp, #8]
  40f6c4:	ldp	x20, x19, [sp, #240]
  40f6c8:	ldp	x24, x23, [sp, #208]
  40f6cc:	ldp	x26, x25, [sp, #192]
  40f6d0:	and	x8, x8, #0xff
  40f6d4:	ldr	x0, [x22, x8, lsl #3]
  40f6d8:	ldp	x22, x21, [sp, #224]
  40f6dc:	ldp	x28, x27, [sp, #176]
  40f6e0:	ldp	x29, x30, [sp, #160]
  40f6e4:	add	sp, sp, #0x100
  40f6e8:	ret
  40f6ec:	mov	x25, #0xffffffffffffffff    	// #-1
  40f6f0:	mov	x24, #0xffffffffffffffff    	// #-1
  40f6f4:	mov	x23, #0xffffffffffffffff    	// #-1
  40f6f8:	b	40f62c <wcrtomb@plt+0xcc6c>
  40f6fc:	stp	x29, x30, [sp, #-16]!
  40f700:	ldr	x9, [x3, #296]
  40f704:	mov	w10, #0x50                  	// #80
  40f708:	mov	w8, w1
  40f70c:	mov	w1, w0
  40f710:	madd	x9, x2, x10, x9
  40f714:	ldrh	w9, [x9, #34]
  40f718:	mov	w2, w8
  40f71c:	mov	x29, sp
  40f720:	mov	w0, w9
  40f724:	bl	40e4fc <wcrtomb@plt+0xbb3c>
  40f728:	and	w0, w0, #0x1
  40f72c:	ldp	x29, x30, [sp], #16
  40f730:	ret
  40f734:	stp	x29, x30, [sp, #-48]!
  40f738:	stp	x22, x21, [sp, #16]
  40f73c:	stp	x20, x19, [sp, #32]
  40f740:	ldr	x8, [x0, #368]
  40f744:	mov	x20, x0
  40f748:	mov	x21, x1
  40f74c:	mov	x19, x2
  40f750:	ldr	x22, [x8, x1, lsl #3]
  40f754:	mov	x29, sp
  40f758:	cbnz	x22, 40f794 <wcrtomb@plt+0xcdd4>
  40f75c:	ldr	x8, [x20, #376]
  40f760:	ldr	x22, [x8, x21, lsl #3]
  40f764:	cbnz	x22, 40f794 <wcrtomb@plt+0xcdd4>
  40f768:	ldr	x8, [x19]
  40f76c:	mov	x0, x21
  40f770:	mov	x1, x20
  40f774:	ldrb	w2, [x8]
  40f778:	bl	40efe4 <wcrtomb@plt+0xc624>
  40f77c:	ldr	x8, [x20, #368]
  40f780:	ldr	x22, [x8, x21, lsl #3]
  40f784:	cbnz	x22, 40f794 <wcrtomb@plt+0xcdd4>
  40f788:	ldr	x8, [x20, #376]
  40f78c:	ldr	x22, [x8, x21, lsl #3]
  40f790:	cbz	x22, 40f7d8 <wcrtomb@plt+0xce18>
  40f794:	ldr	x8, [x19]
  40f798:	ldrb	w2, [x8]
  40f79c:	ldr	x8, [x22, x2, lsl #3]
  40f7a0:	cmn	x8, #0x2
  40f7a4:	b.ne	40f7b4 <wcrtomb@plt+0xcdf4>  // b.any
  40f7a8:	mov	x0, x21
  40f7ac:	mov	x1, x20
  40f7b0:	bl	40efe4 <wcrtomb@plt+0xc624>
  40f7b4:	ldr	x8, [x19]
  40f7b8:	add	x9, x8, #0x1
  40f7bc:	str	x9, [x19]
  40f7c0:	ldrb	w8, [x8]
  40f7c4:	ldp	x20, x19, [sp, #32]
  40f7c8:	ldr	x0, [x22, x8, lsl #3]
  40f7cc:	ldp	x22, x21, [sp, #16]
  40f7d0:	ldp	x29, x30, [sp], #48
  40f7d4:	ret
  40f7d8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  40f7dc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40f7e0:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  40f7e4:	add	x0, x0, #0xea7
  40f7e8:	add	x1, x1, #0xd8e
  40f7ec:	add	x3, x3, #0xed4
  40f7f0:	mov	w2, #0xc93                 	// #3219
  40f7f4:	bl	402920 <__assert_fail@plt>
  40f7f8:	ldr	x8, [x1, #296]
  40f7fc:	mov	w9, #0x50                  	// #80
  40f800:	madd	x8, x0, x9, x8
  40f804:	ldrh	w8, [x8, #34]
  40f808:	cmp	w8, #0x0
  40f80c:	cset	w0, ne  // ne = any
  40f810:	ret
  40f814:	mov	x9, xzr
  40f818:	mov	w8, wzr
  40f81c:	add	x11, x0, x9
  40f820:	ldr	x10, [x1, x9]
  40f824:	ldr	x12, [x11, #1008]
  40f828:	ldr	x11, [x11, #976]
  40f82c:	orr	w13, w8, #0x4
  40f830:	add	x9, x9, #0x8
  40f834:	tst	x12, x10
  40f838:	csel	w8, w8, w13, eq  // eq = none
  40f83c:	orr	x12, x11, x12
  40f840:	tst	x11, x10
  40f844:	orr	w11, w8, #0x2
  40f848:	csel	w8, w8, w11, eq  // eq = none
  40f84c:	bics	xzr, x10, x12
  40f850:	cset	w10, ne  // ne = any
  40f854:	cmp	x9, #0x20
  40f858:	orr	w8, w8, w10
  40f85c:	b.ne	40f81c <wcrtomb@plt+0xce5c>  // b.any
  40f860:	mov	w0, w8
  40f864:	ret
  40f868:	stp	x29, x30, [sp, #-32]!
  40f86c:	stp	x20, x19, [sp, #16]
  40f870:	add	x8, x0, w1, uxtb #2
  40f874:	ldr	w8, [x8, #1308]
  40f878:	mov	x29, sp
  40f87c:	cmn	w8, #0x1
  40f880:	b.eq	40f8b0 <wcrtomb@plt+0xcef0>  // b.none
  40f884:	mov	w19, w1
  40f888:	and	x20, x19, #0xff
  40f88c:	bl	402760 <__ctype_b_loc@plt>
  40f890:	ldr	x8, [x0]
  40f894:	and	w9, w19, #0xff
  40f898:	cmp	w9, #0x5f
  40f89c:	cset	w9, eq  // eq = none
  40f8a0:	ldrh	w8, [x8, x20, lsl #1]
  40f8a4:	and	w8, w8, #0x8
  40f8a8:	orr	w0, w9, w8, lsr #3
  40f8ac:	b	40f8b4 <wcrtomb@plt+0xcef4>
  40f8b0:	mov	w0, wzr
  40f8b4:	ldp	x20, x19, [sp, #16]
  40f8b8:	ldp	x29, x30, [sp], #32
  40f8bc:	ret
  40f8c0:	sub	sp, sp, #0x40
  40f8c4:	stp	x29, x30, [sp, #32]
  40f8c8:	stp	x20, x19, [sp, #48]
  40f8cc:	add	x29, sp, #0x20
  40f8d0:	mov	x19, x0
  40f8d4:	bl	402780 <__ctype_get_mb_cur_max@plt>
  40f8d8:	cmp	x0, #0x1
  40f8dc:	cset	w0, hi  // hi = pmore
  40f8e0:	strb	w0, [x19]
  40f8e4:	bl	40f95c <wcrtomb@plt+0xcf9c>
  40f8e8:	and	w8, w0, #0x1
  40f8ec:	strb	w8, [x19, #1]
  40f8f0:	bl	40f9b8 <wcrtomb@plt+0xcff8>
  40f8f4:	and	w8, w0, #0x1
  40f8f8:	mov	x20, xzr
  40f8fc:	strb	w8, [x19, #2]
  40f900:	add	x19, x19, #0x104
  40f904:	add	x0, sp, #0xc
  40f908:	sub	x1, x29, #0x4
  40f90c:	add	x3, sp, #0x10
  40f910:	mov	w2, #0x1                   	// #1
  40f914:	sturb	w20, [x29, #-4]
  40f918:	str	xzr, [sp, #16]
  40f91c:	bl	41609c <wcrtomb@plt+0x136dc>
  40f920:	add	x8, x19, x20
  40f924:	cmp	x0, #0x2
  40f928:	sub	x8, x8, #0x101
  40f92c:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  40f930:	strb	w9, [x8]
  40f934:	ldr	w8, [sp, #12]
  40f938:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  40f93c:	str	w8, [x19, x20, lsl #2]
  40f940:	add	x20, x20, #0x1
  40f944:	cmp	x20, #0x100
  40f948:	b.ne	40f904 <wcrtomb@plt+0xcf44>  // b.any
  40f94c:	ldp	x20, x19, [sp, #48]
  40f950:	ldp	x29, x30, [sp, #32]
  40f954:	add	sp, sp, #0x40
  40f958:	ret
  40f95c:	stp	x29, x30, [sp, #-32]!
  40f960:	str	x19, [sp, #16]
  40f964:	mov	x29, sp
  40f968:	tbnz	w0, #0, 40f9a0 <wcrtomb@plt+0xcfe0>
  40f96c:	mov	w19, #0x1                   	// #1
  40f970:	cmp	w19, #0x100
  40f974:	b.eq	40f9a8 <wcrtomb@plt+0xcfe8>  // b.none
  40f978:	sub	w8, w19, #0x1
  40f97c:	add	x0, x29, #0x1c
  40f980:	add	x1, x29, #0x18
  40f984:	strb	wzr, [x29, #29]
  40f988:	strb	w19, [x29, #24]
  40f98c:	strb	w8, [x29, #28]
  40f990:	strb	wzr, [x29, #25]
  40f994:	bl	4028b0 <strcoll@plt>
  40f998:	add	w19, w19, #0x1
  40f99c:	tbnz	w0, #31, 40f970 <wcrtomb@plt+0xcfb0>
  40f9a0:	mov	w0, wzr
  40f9a4:	b	40f9ac <wcrtomb@plt+0xcfec>
  40f9a8:	mov	w0, #0x1                   	// #1
  40f9ac:	ldr	x19, [sp, #16]
  40f9b0:	ldp	x29, x30, [sp], #32
  40f9b4:	ret
  40f9b8:	sub	sp, sp, #0x20
  40f9bc:	stp	x29, x30, [sp, #16]
  40f9c0:	add	x29, sp, #0x10
  40f9c4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  40f9c8:	add	x1, x1, #0xf4e
  40f9cc:	sub	x0, x29, #0x4
  40f9d0:	mov	x3, sp
  40f9d4:	mov	w2, #0x2                   	// #2
  40f9d8:	str	xzr, [sp]
  40f9dc:	bl	41609c <wcrtomb@plt+0x136dc>
  40f9e0:	ldur	w8, [x29, #-4]
  40f9e4:	cmp	x0, #0x2
  40f9e8:	ldp	x29, x30, [sp, #16]
  40f9ec:	cset	w9, eq  // eq = none
  40f9f0:	cmp	w8, #0x100
  40f9f4:	cset	w8, eq  // eq = none
  40f9f8:	and	w0, w9, w8
  40f9fc:	add	sp, sp, #0x20
  40fa00:	ret
  40fa04:	stp	x29, x30, [sp, #-80]!
  40fa08:	stp	x26, x25, [sp, #16]
  40fa0c:	stp	x24, x23, [sp, #32]
  40fa10:	stp	x22, x21, [sp, #48]
  40fa14:	stp	x20, x19, [sp, #64]
  40fa18:	mov	x29, sp
  40fa1c:	mov	x19, x1
  40fa20:	mov	w20, w0
  40fa24:	bl	4028d0 <towupper@plt>
  40fa28:	mov	w21, w0
  40fa2c:	bl	402970 <towlower@plt>
  40fa30:	cmp	w21, w20
  40fa34:	mov	w22, w0
  40fa38:	b.ne	40fa4c <wcrtomb@plt+0xd08c>  // b.any
  40fa3c:	mov	w23, wzr
  40fa40:	cmp	w22, w21
  40fa44:	b.ne	40fa5c <wcrtomb@plt+0xd09c>  // b.any
  40fa48:	b	40fa80 <wcrtomb@plt+0xd0c0>
  40fa4c:	mov	w23, #0x1                   	// #1
  40fa50:	str	w21, [x19]
  40fa54:	cmp	w22, w21
  40fa58:	b.eq	40fa80 <wcrtomb@plt+0xd0c0>  // b.none
  40fa5c:	cmp	w22, w20
  40fa60:	b.eq	40fa80 <wcrtomb@plt+0xd0c0>  // b.none
  40fa64:	mov	w0, w22
  40fa68:	bl	4028d0 <towupper@plt>
  40fa6c:	cmp	w0, w21
  40fa70:	b.ne	40fa80 <wcrtomb@plt+0xd0c0>  // b.any
  40fa74:	add	w8, w23, #0x1
  40fa78:	str	w22, [x19, w23, uxtw #2]
  40fa7c:	mov	w23, w8
  40fa80:	adrp	x26, 425000 <_obstack_memory_used@@Base+0xebcc>
  40fa84:	mov	x25, xzr
  40fa88:	add	x26, x26, #0xf28
  40fa8c:	b	40fa9c <wcrtomb@plt+0xd0dc>
  40fa90:	add	x25, x25, #0x2
  40fa94:	cmp	x25, #0x26
  40fa98:	b.eq	40fad8 <wcrtomb@plt+0xd118>  // b.none
  40fa9c:	ldrsh	w24, [x26, x25]
  40faa0:	cmp	w24, w20
  40faa4:	b.eq	40fa90 <wcrtomb@plt+0xd0d0>  // b.none
  40faa8:	cmp	w22, w24
  40faac:	b.eq	40fa90 <wcrtomb@plt+0xd0d0>  // b.none
  40fab0:	cmp	w21, w24
  40fab4:	b.eq	40fa90 <wcrtomb@plt+0xd0d0>  // b.none
  40fab8:	mov	w0, w24
  40fabc:	bl	4028d0 <towupper@plt>
  40fac0:	cmp	w0, w21
  40fac4:	b.ne	40fa90 <wcrtomb@plt+0xd0d0>  // b.any
  40fac8:	add	w8, w23, #0x1
  40facc:	str	w24, [x19, w23, sxtw #2]
  40fad0:	mov	w23, w8
  40fad4:	b	40fa90 <wcrtomb@plt+0xd0d0>
  40fad8:	mov	w0, w23
  40fadc:	ldp	x20, x19, [sp, #64]
  40fae0:	ldp	x22, x21, [sp, #48]
  40fae4:	ldp	x24, x23, [sp, #32]
  40fae8:	ldp	x26, x25, [sp, #16]
  40faec:	ldp	x29, x30, [sp], #80
  40faf0:	ret
  40faf4:	stp	x29, x30, [sp, #-32]!
  40faf8:	str	x19, [sp, #16]
  40fafc:	mov	x29, sp
  40fb00:	mov	x19, x0
  40fb04:	bl	423024 <_obstack_memory_used@@Base+0xcbf0>
  40fb08:	ldrb	w8, [x0]
  40fb0c:	cmp	w8, #0x0
  40fb10:	csel	x19, x19, x0, eq  // eq = none
  40fb14:	mov	x0, x19
  40fb18:	bl	423070 <_obstack_memory_used@@Base+0xcc3c>
  40fb1c:	ldrb	w8, [x19, x0]
  40fb20:	strb	wzr, [x19, x0]
  40fb24:	ldr	x19, [sp, #16]
  40fb28:	cmp	w8, #0x0
  40fb2c:	cset	w0, ne  // ne = any
  40fb30:	ldp	x29, x30, [sp], #32
  40fb34:	ret
  40fb38:	stp	x29, x30, [sp, #-32]!
  40fb3c:	stp	x20, x19, [sp, #16]
  40fb40:	mov	x20, x0
  40fb44:	mov	w0, #0x10                  	// #16
  40fb48:	mov	x29, sp
  40fb4c:	mov	x19, x1
  40fb50:	bl	413ae8 <wcrtomb@plt+0x11128>
  40fb54:	ldr	x8, [x20, #8]
  40fb58:	stp	x8, x19, [x0]
  40fb5c:	str	x0, [x20, #8]
  40fb60:	ldp	x20, x19, [sp, #16]
  40fb64:	ldp	x29, x30, [sp], #32
  40fb68:	ret
  40fb6c:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xebcc>
  40fb70:	add	x9, x9, #0xf51
  40fb74:	b	40fb7c <wcrtomb@plt+0xd1bc>
  40fb78:	tbnz	w1, #27, 40fbd8 <wcrtomb@plt+0xd218>
  40fb7c:	ldrb	w10, [x0], #1
  40fb80:	mov	w8, #0x1                   	// #1
  40fb84:	cmp	w10, #0x7d
  40fb88:	b.hi	40fb7c <wcrtomb@plt+0xd1bc>  // b.pmore
  40fb8c:	adr	x11, 40fb78 <wcrtomb@plt+0xd1b8>
  40fb90:	ldrb	w12, [x9, x10]
  40fb94:	add	x11, x11, x12, lsl #2
  40fb98:	br	x11
  40fb9c:	tbz	w1, #5, 40fb7c <wcrtomb@plt+0xd1bc>
  40fba0:	ldrb	w8, [x0]
  40fba4:	cmp	w8, #0x28
  40fba8:	b.ne	40fb7c <wcrtomb@plt+0xd1bc>  // b.any
  40fbac:	b	40fbd8 <wcrtomb@plt+0xd218>
  40fbb0:	tbnz	w1, #27, 40fb7c <wcrtomb@plt+0xd1bc>
  40fbb4:	tbnz	w1, #1, 40fbcc <wcrtomb@plt+0xd20c>
  40fbb8:	ldrb	w8, [x0]
  40fbbc:	cmp	w8, #0x0
  40fbc0:	cset	w8, ne  // ne = any
  40fbc4:	add	x0, x0, x8
  40fbc8:	b	40fb7c <wcrtomb@plt+0xd1bc>
  40fbcc:	mov	w8, wzr
  40fbd0:	add	x0, x0, x8
  40fbd4:	b	40fb7c <wcrtomb@plt+0xd1bc>
  40fbd8:	mov	w0, #0x1                   	// #1
  40fbdc:	ret
  40fbe0:	mov	w8, wzr
  40fbe4:	mov	w0, w8
  40fbe8:	ret
  40fbec:	stp	x29, x30, [sp, #-16]!
  40fbf0:	mov	w0, #0x10                  	// #16
  40fbf4:	mov	x29, sp
  40fbf8:	bl	413c1c <wcrtomb@plt+0x1125c>
  40fbfc:	ldp	x29, x30, [sp], #16
  40fc00:	ret
  40fc04:	stp	x29, x30, [sp, #-48]!
  40fc08:	stp	x20, x19, [sp, #32]
  40fc0c:	mov	x19, x0
  40fc10:	ldr	x0, [x0]
  40fc14:	str	x21, [sp, #16]
  40fc18:	mov	x29, sp
  40fc1c:	cbz	x0, 40fc30 <wcrtomb@plt+0xd270>
  40fc20:	ldr	x20, [x0]
  40fc24:	bl	40fc68 <wcrtomb@plt+0xd2a8>
  40fc28:	mov	x0, x20
  40fc2c:	cbnz	x20, 40fc20 <wcrtomb@plt+0xd260>
  40fc30:	ldr	x20, [x19, #8]
  40fc34:	cbz	x20, 40fc50 <wcrtomb@plt+0xd290>
  40fc38:	ldp	x21, x0, [x20]
  40fc3c:	bl	402770 <free@plt>
  40fc40:	mov	x0, x20
  40fc44:	bl	402770 <free@plt>
  40fc48:	mov	x20, x21
  40fc4c:	cbnz	x21, 40fc38 <wcrtomb@plt+0xd278>
  40fc50:	mov	x0, x19
  40fc54:	bl	402770 <free@plt>
  40fc58:	ldp	x20, x19, [sp, #32]
  40fc5c:	ldr	x21, [sp, #16]
  40fc60:	ldp	x29, x30, [sp], #48
  40fc64:	ret
  40fc68:	stp	x29, x30, [sp, #-48]!
  40fc6c:	stp	x20, x19, [sp, #32]
  40fc70:	ldr	w8, [x0, #8]
  40fc74:	mov	x19, x0
  40fc78:	str	x21, [sp, #16]
  40fc7c:	mov	x29, sp
  40fc80:	cbz	w8, 40fcd4 <wcrtomb@plt+0xd314>
  40fc84:	cmp	w8, #0x1
  40fc88:	b.ne	40fce4 <wcrtomb@plt+0xd324>  // b.any
  40fc8c:	ldr	x8, [x19, #32]
  40fc90:	ldr	x0, [x19, #16]
  40fc94:	cbz	x8, 40fce0 <wcrtomb@plt+0xd320>
  40fc98:	mov	x20, xzr
  40fc9c:	mov	x21, xzr
  40fca0:	b	40fcbc <wcrtomb@plt+0xd2fc>
  40fca4:	ldr	x8, [x19, #32]
  40fca8:	ldr	x0, [x19, #16]
  40fcac:	add	x21, x21, #0x1
  40fcb0:	add	x20, x20, #0x48
  40fcb4:	cmp	x21, x8
  40fcb8:	b.cs	40fce0 <wcrtomb@plt+0xd320>  // b.hs, b.nlast
  40fcbc:	add	x8, x0, x20
  40fcc0:	ldrb	w9, [x8, #3]
  40fcc4:	tbz	w9, #3, 40fca4 <wcrtomb@plt+0xd2e4>
  40fcc8:	add	x0, x8, #0x8
  40fccc:	bl	416c60 <_obstack_memory_used@@Base+0x82c>
  40fcd0:	b	40fca4 <wcrtomb@plt+0xd2e4>
  40fcd4:	ldr	x0, [x19, #16]
  40fcd8:	bl	410e4c <wcrtomb@plt+0xe48c>
  40fcdc:	b	40fce4 <wcrtomb@plt+0xd324>
  40fce0:	bl	402770 <free@plt>
  40fce4:	mov	x0, x19
  40fce8:	bl	402770 <free@plt>
  40fcec:	ldp	x20, x19, [sp, #32]
  40fcf0:	ldr	x21, [sp, #16]
  40fcf4:	ldp	x29, x30, [sp], #48
  40fcf8:	ret
  40fcfc:	stp	x29, x30, [sp, #-48]!
  40fd00:	adrp	x8, 402000 <mbrtowc@plt-0x310>
  40fd04:	adrp	x9, 40f000 <wcrtomb@plt+0xc640>
  40fd08:	add	x8, x8, #0x7b0
  40fd0c:	add	x9, x9, #0xda0
  40fd10:	tst	w2, #0x10000000
  40fd14:	stp	x22, x21, [sp, #16]
  40fd18:	csel	x22, x9, x8, eq  // eq = none
  40fd1c:	stp	x20, x19, [sp, #32]
  40fd20:	mov	x29, sp
  40fd24:	mov	w19, w2
  40fd28:	mov	x21, x1
  40fd2c:	mov	x20, x0
  40fd30:	blr	x22
  40fd34:	cmp	w0, #0x0
  40fd38:	cset	w8, eq  // eq = none
  40fd3c:	tbnz	w19, #30, 40fd8c <wcrtomb@plt+0xd3cc>
  40fd40:	ldrb	w9, [x21]
  40fd44:	cbz	w9, 40fd8c <wcrtomb@plt+0xd3cc>
  40fd48:	cbz	w0, 40fd8c <wcrtomb@plt+0xd3cc>
  40fd4c:	add	x21, x21, #0x1
  40fd50:	and	w9, w9, #0xff
  40fd54:	cmp	w9, #0x2f
  40fd58:	b.ne	40fd80 <wcrtomb@plt+0xd3c0>  // b.any
  40fd5c:	ldrb	w9, [x21]
  40fd60:	cmp	w9, #0x2f
  40fd64:	b.eq	40fd80 <wcrtomb@plt+0xd3c0>  // b.none
  40fd68:	mov	x0, x20
  40fd6c:	mov	x1, x21
  40fd70:	mov	w2, w19
  40fd74:	blr	x22
  40fd78:	cmp	w0, #0x0
  40fd7c:	cset	w8, eq  // eq = none
  40fd80:	ldrb	w9, [x21], #1
  40fd84:	cbz	w9, 40fd8c <wcrtomb@plt+0xd3cc>
  40fd88:	tbz	w8, #0, 40fd50 <wcrtomb@plt+0xd390>
  40fd8c:	ldp	x20, x19, [sp, #32]
  40fd90:	ldp	x22, x21, [sp, #16]
  40fd94:	and	w0, w8, #0x1
  40fd98:	ldp	x29, x30, [sp], #48
  40fd9c:	ret
  40fda0:	stp	x29, x30, [sp, #-64]!
  40fda4:	stp	x20, x19, [sp, #48]
  40fda8:	mov	x20, x1
  40fdac:	mov	x19, x0
  40fdb0:	str	x23, [sp, #16]
  40fdb4:	stp	x22, x21, [sp, #32]
  40fdb8:	mov	x29, sp
  40fdbc:	tbnz	w2, #3, 40fdd8 <wcrtomb@plt+0xd418>
  40fdc0:	mov	x0, x19
  40fdc4:	mov	x1, x20
  40fdc8:	tbz	w2, #4, 40fe2c <wcrtomb@plt+0xd46c>
  40fdcc:	bl	4115cc <wcrtomb@plt+0xec0c>
  40fdd0:	mov	w21, w0
  40fdd4:	b	40fe74 <wcrtomb@plt+0xd4b4>
  40fdd8:	tbz	w2, #4, 40fe38 <wcrtomb@plt+0xd478>
  40fddc:	mov	x0, x20
  40fde0:	bl	413ca4 <wcrtomb@plt+0x112e4>
  40fde4:	mov	x20, x0
  40fde8:	mov	w23, #0x2f                  	// #47
  40fdec:	mov	x22, x0
  40fdf0:	mov	w1, #0x2f                  	// #47
  40fdf4:	mov	x0, x22
  40fdf8:	bl	402790 <strchr@plt>
  40fdfc:	mov	x22, x0
  40fe00:	cbz	x0, 40fe08 <wcrtomb@plt+0xd448>
  40fe04:	strb	wzr, [x22]
  40fe08:	mov	x0, x19
  40fe0c:	mov	x1, x20
  40fe10:	bl	4115cc <wcrtomb@plt+0xec0c>
  40fe14:	mov	w21, w0
  40fe18:	cbz	x22, 40fe6c <wcrtomb@plt+0xd4ac>
  40fe1c:	cmp	w21, #0x1
  40fe20:	b.lt	40fe6c <wcrtomb@plt+0xd4ac>  // b.tstop
  40fe24:	strb	w23, [x22], #1
  40fe28:	b	40fdf0 <wcrtomb@plt+0xd430>
  40fe2c:	bl	402750 <strcmp@plt>
  40fe30:	mov	w21, w0
  40fe34:	b	40fe74 <wcrtomb@plt+0xd4b4>
  40fe38:	mov	x0, x19
  40fe3c:	bl	402380 <strlen@plt>
  40fe40:	mov	x22, x0
  40fe44:	mov	x0, x19
  40fe48:	mov	x1, x20
  40fe4c:	mov	x2, x22
  40fe50:	bl	402560 <strncmp@plt>
  40fe54:	mov	w21, w0
  40fe58:	cbnz	w0, 40fe74 <wcrtomb@plt+0xd4b4>
  40fe5c:	ldrb	w8, [x20, x22]
  40fe60:	cmp	w8, #0x2f
  40fe64:	csel	w21, wzr, w8, eq  // eq = none
  40fe68:	b	40fe74 <wcrtomb@plt+0xd4b4>
  40fe6c:	mov	x0, x20
  40fe70:	bl	402770 <free@plt>
  40fe74:	mov	w0, w21
  40fe78:	ldp	x20, x19, [sp, #48]
  40fe7c:	ldp	x22, x21, [sp, #32]
  40fe80:	ldr	x23, [sp, #16]
  40fe84:	ldp	x29, x30, [sp], #64
  40fe88:	ret
  40fe8c:	stp	x29, x30, [sp, #-48]!
  40fe90:	stp	x20, x19, [sp, #32]
  40fe94:	ldr	x8, [x0]
  40fe98:	str	x21, [sp, #16]
  40fe9c:	mov	x29, sp
  40fea0:	cbz	x8, 40ff08 <wcrtomb@plt+0xd548>
  40fea4:	mov	x21, x1
  40fea8:	mov	x20, xzr
  40feac:	b	40fec8 <wcrtomb@plt+0xd508>
  40feb0:	mov	x0, x19
  40feb4:	mov	x1, x21
  40feb8:	bl	40ffe0 <wcrtomb@plt+0xd620>
  40febc:	tbnz	w0, #0, 40ff00 <wcrtomb@plt+0xd540>
  40fec0:	ldr	x8, [x19]
  40fec4:	cbz	x8, 40ff10 <wcrtomb@plt+0xd550>
  40fec8:	mov	x19, x8
  40fecc:	ldr	w8, [x8, #8]
  40fed0:	cbnz	w8, 40feb0 <wcrtomb@plt+0xd4f0>
  40fed4:	cbnz	x20, 40feec <wcrtomb@plt+0xd52c>
  40fed8:	mov	x0, x21
  40fedc:	bl	402380 <strlen@plt>
  40fee0:	add	x0, x0, #0x1
  40fee4:	bl	413ae8 <wcrtomb@plt+0x11128>
  40fee8:	mov	x20, x0
  40feec:	mov	x0, x19
  40fef0:	mov	x1, x21
  40fef4:	mov	x2, x20
  40fef8:	bl	40ff40 <wcrtomb@plt+0xd580>
  40fefc:	tbz	w0, #0, 40fec0 <wcrtomb@plt+0xd500>
  40ff00:	mov	w21, wzr
  40ff04:	b	40ff14 <wcrtomb@plt+0xd554>
  40ff08:	mov	w0, wzr
  40ff0c:	b	40ff30 <wcrtomb@plt+0xd570>
  40ff10:	mov	w21, #0x1                   	// #1
  40ff14:	mov	x0, x20
  40ff18:	bl	402770 <free@plt>
  40ff1c:	ldr	w8, [x19, #12]
  40ff20:	mov	w9, #0x1                   	// #1
  40ff24:	bic	w8, w9, w8, lsr #29
  40ff28:	cmp	w21, w8
  40ff2c:	cset	w0, ne  // ne = any
  40ff30:	ldp	x20, x19, [sp, #32]
  40ff34:	ldr	x21, [sp, #16]
  40ff38:	ldp	x29, x30, [sp], #48
  40ff3c:	ret
  40ff40:	stp	x29, x30, [sp, #-48]!
  40ff44:	stp	x22, x21, [sp, #16]
  40ff48:	stp	x20, x19, [sp, #32]
  40ff4c:	ldr	w22, [x0, #12]
  40ff50:	ldr	x20, [x0, #16]
  40ff54:	mov	x19, x2
  40ff58:	mov	x21, x1
  40ff5c:	mov	x29, sp
  40ff60:	mov	x0, x19
  40ff64:	mov	x1, x21
  40ff68:	bl	4027e0 <strcpy@plt>
  40ff6c:	mov	x0, x20
  40ff70:	mov	x1, x19
  40ff74:	bl	4108dc <wcrtomb@plt+0xdf1c>
  40ff78:	cbnz	x0, 40ffc4 <wcrtomb@plt+0xd604>
  40ff7c:	tbnz	w22, #3, 40ffa0 <wcrtomb@plt+0xd5e0>
  40ff80:	tbnz	w22, #30, 40ffd8 <wcrtomb@plt+0xd618>
  40ff84:	mov	w1, #0x2f                  	// #47
  40ff88:	mov	x0, x21
  40ff8c:	bl	402790 <strchr@plt>
  40ff90:	cmp	x0, #0x0
  40ff94:	csinc	x21, xzr, x0, eq  // eq = none
  40ff98:	cbnz	x0, 40ff60 <wcrtomb@plt+0xd5a0>
  40ff9c:	b	40ffc8 <wcrtomb@plt+0xd608>
  40ffa0:	mov	w1, #0x2f                  	// #47
  40ffa4:	mov	x0, x19
  40ffa8:	bl	402670 <strrchr@plt>
  40ffac:	cbz	x0, 40ff80 <wcrtomb@plt+0xd5c0>
  40ffb0:	strb	wzr, [x0]
  40ffb4:	mov	x0, x20
  40ffb8:	mov	x1, x19
  40ffbc:	bl	4108dc <wcrtomb@plt+0xdf1c>
  40ffc0:	cbz	x0, 40ffa0 <wcrtomb@plt+0xd5e0>
  40ffc4:	mov	w0, #0x1                   	// #1
  40ffc8:	ldp	x20, x19, [sp, #32]
  40ffcc:	ldp	x22, x21, [sp, #16]
  40ffd0:	ldp	x29, x30, [sp], #48
  40ffd4:	ret
  40ffd8:	mov	w0, wzr
  40ffdc:	b	40ffc8 <wcrtomb@plt+0xd608>
  40ffe0:	stp	x29, x30, [sp, #-48]!
  40ffe4:	stp	x20, x19, [sp, #32]
  40ffe8:	str	x21, [sp, #16]
  40ffec:	ldr	x21, [x0, #32]
  40fff0:	mov	x29, sp
  40fff4:	cbz	x21, 41001c <wcrtomb@plt+0xd65c>
  40fff8:	ldr	x20, [x0, #16]
  40fffc:	mov	x19, x1
  410000:	mov	x0, x20
  410004:	mov	x1, x19
  410008:	bl	4105dc <wcrtomb@plt+0xdc1c>
  41000c:	tbnz	w0, #0, 410024 <wcrtomb@plt+0xd664>
  410010:	subs	x21, x21, #0x1
  410014:	add	x20, x20, #0x48
  410018:	b.ne	410000 <wcrtomb@plt+0xd640>  // b.any
  41001c:	mov	w0, wzr
  410020:	b	410028 <wcrtomb@plt+0xd668>
  410024:	mov	w0, #0x1                   	// #1
  410028:	ldp	x20, x19, [sp, #32]
  41002c:	ldr	x21, [sp, #16]
  410030:	ldp	x29, x30, [sp], #48
  410034:	ret
  410038:	stp	x29, x30, [sp, #-80]!
  41003c:	stp	x22, x21, [sp, #48]
  410040:	stp	x20, x19, [sp, #64]
  410044:	mov	w20, w2
  410048:	mov	x19, x1
  41004c:	tst	w2, #0x18000000
  410050:	mov	x21, x0
  410054:	str	x25, [sp, #16]
  410058:	stp	x24, x23, [sp, #32]
  41005c:	mov	x29, sp
  410060:	b.eq	410118 <wcrtomb@plt+0xd758>  // b.none
  410064:	mov	x0, x19
  410068:	mov	w1, w20
  41006c:	bl	40fb6c <wcrtomb@plt+0xd1ac>
  410070:	tbz	w0, #0, 410118 <wcrtomb@plt+0xd758>
  410074:	ldr	x8, [x21]
  410078:	cbz	x8, 410094 <wcrtomb@plt+0xd6d4>
  41007c:	ldr	w9, [x8, #8]
  410080:	cmp	w9, #0x1
  410084:	b.ne	410094 <wcrtomb@plt+0xd6d4>  // b.any
  410088:	ldr	w8, [x8, #12]
  41008c:	eor	w8, w8, w20
  410090:	tbz	w8, #29, 4100a4 <wcrtomb@plt+0xd6e4>
  410094:	mov	w1, #0x1                   	// #1
  410098:	mov	x0, x21
  41009c:	mov	w2, w20
  4100a0:	bl	410280 <wcrtomb@plt+0xd8c0>
  4100a4:	ldr	x22, [x21]
  4100a8:	mov	x1, x22
  4100ac:	ldr	x8, [x22, #32]
  4100b0:	ldr	x9, [x1, #24]!
  4100b4:	cmp	x8, x9
  4100b8:	b.ne	4100cc <wcrtomb@plt+0xd70c>  // b.any
  4100bc:	ldr	x0, [x22, #16]
  4100c0:	mov	w2, #0x48                  	// #72
  4100c4:	bl	413b84 <wcrtomb@plt+0x111c4>
  4100c8:	str	x0, [x22, #16]
  4100cc:	ldr	x23, [x22, #32]
  4100d0:	ldr	x24, [x22, #16]
  4100d4:	mov	w8, #0x48                  	// #72
  4100d8:	add	x9, x23, #0x1
  4100dc:	mul	x8, x23, x8
  4100e0:	str	x9, [x22, #32]
  4100e4:	str	w20, [x24, x8]
  4100e8:	tbnz	w20, #27, 4101b4 <wcrtomb@plt+0xd7f4>
  4100ec:	tbz	w20, #26, 410108 <wcrtomb@plt+0xd748>
  4100f0:	mov	x0, x19
  4100f4:	bl	413ca4 <wcrtomb@plt+0x112e4>
  4100f8:	mov	x19, x0
  4100fc:	mov	x0, x21
  410100:	mov	x1, x19
  410104:	bl	40fb38 <wcrtomb@plt+0xd178>
  410108:	mov	w8, #0x48                  	// #72
  41010c:	madd	x8, x23, x8, x24
  410110:	str	x19, [x8, #8]
  410114:	b	41019c <wcrtomb@plt+0xd7dc>
  410118:	ldr	x8, [x21]
  41011c:	cbz	x8, 410140 <wcrtomb@plt+0xd780>
  410120:	ldr	w9, [x8, #8]
  410124:	cbnz	w9, 410140 <wcrtomb@plt+0xd780>
  410128:	ldr	w8, [x8, #12]
  41012c:	mov	w9, #0x18                  	// #24
  410130:	movk	w9, #0x6000, lsl #16
  410134:	eor	w8, w8, w20
  410138:	tst	w8, w9
  41013c:	b.eq	410150 <wcrtomb@plt+0xd790>  // b.none
  410140:	mov	x0, x21
  410144:	mov	w1, wzr
  410148:	mov	w2, w20
  41014c:	bl	410280 <wcrtomb@plt+0xd8c0>
  410150:	ldr	x21, [x21]
  410154:	mov	x0, x19
  410158:	bl	413ca4 <wcrtomb@plt+0x112e4>
  41015c:	mov	w8, #0x2                   	// #2
  410160:	movk	w8, #0x1000, lsl #16
  410164:	and	w8, w20, w8
  410168:	mov	w9, #0x10000000            	// #268435456
  41016c:	cmp	w8, w9
  410170:	mov	x19, x0
  410174:	b.ne	410180 <wcrtomb@plt+0xd7c0>  // b.any
  410178:	mov	x0, x19
  41017c:	bl	410310 <wcrtomb@plt+0xd950>
  410180:	ldr	x0, [x21, #16]
  410184:	mov	x1, x19
  410188:	bl	411404 <wcrtomb@plt+0xea44>
  41018c:	cmp	x0, x19
  410190:	b.eq	41019c <wcrtomb@plt+0xd7dc>  // b.none
  410194:	mov	x0, x19
  410198:	bl	402770 <free@plt>
  41019c:	ldp	x20, x19, [sp, #64]
  4101a0:	ldp	x22, x21, [sp, #48]
  4101a4:	ldp	x24, x23, [sp, #32]
  4101a8:	ldr	x25, [sp, #16]
  4101ac:	ldp	x29, x30, [sp], #80
  4101b0:	ret
  4101b4:	lsr	w8, w20, #3
  4101b8:	and	w8, w8, #0x2
  4101bc:	mov	w9, #0x9                   	// #9
  4101c0:	orr	w21, w8, w9
  4101c4:	tbnz	w20, #3, 4101e8 <wcrtomb@plt+0xd828>
  4101c8:	mov	w8, #0x48                  	// #72
  4101cc:	madd	x8, x23, x8, x24
  4101d0:	add	x0, x8, #0x8
  4101d4:	mov	x1, x19
  4101d8:	mov	w2, w21
  4101dc:	bl	416ad0 <_obstack_memory_used@@Base+0x69c>
  4101e0:	mov	w19, w0
  4101e4:	b	41026c <wcrtomb@plt+0xd8ac>
  4101e8:	mov	x0, x19
  4101ec:	bl	402380 <strlen@plt>
  4101f0:	sub	x8, x19, #0x1
  4101f4:	cbz	x0, 410268 <wcrtomb@plt+0xd8a8>
  4101f8:	ldrb	w9, [x8, x0]
  4101fc:	sub	x25, x0, #0x1
  410200:	mov	x0, x25
  410204:	cmp	w9, #0x2f
  410208:	b.eq	4101f4 <wcrtomb@plt+0xd834>  // b.none
  41020c:	add	x0, x25, #0x8
  410210:	bl	413ae8 <wcrtomb@plt+0x11128>
  410214:	add	x2, x25, #0x1
  410218:	mov	x1, x19
  41021c:	mov	x20, x0
  410220:	bl	402320 <memcpy@plt>
  410224:	mov	w9, #0x2f28                	// #12072
  410228:	mov	w10, #0x292a                	// #10538
  41022c:	add	x8, x20, x25
  410230:	movk	w9, #0x2a2e, lsl #16
  410234:	movk	w10, #0x3f, lsl #16
  410238:	mov	w11, #0x48                  	// #72
  41023c:	stur	w9, [x8, #1]
  410240:	str	w10, [x8, #4]
  410244:	madd	x8, x23, x11, x24
  410248:	add	x0, x8, #0x8
  41024c:	mov	x1, x20
  410250:	mov	w2, w21
  410254:	bl	416ad0 <_obstack_memory_used@@Base+0x69c>
  410258:	mov	w19, w0
  41025c:	mov	x0, x20
  410260:	bl	402770 <free@plt>
  410264:	b	41026c <wcrtomb@plt+0xd8ac>
  410268:	mov	w19, #0x1                   	// #1
  41026c:	cbz	w19, 41019c <wcrtomb@plt+0xd7dc>
  410270:	ldr	x8, [x22, #32]
  410274:	sub	x8, x8, #0x1
  410278:	str	x8, [x22, #32]
  41027c:	b	41019c <wcrtomb@plt+0xd7dc>
  410280:	stp	x29, x30, [sp, #-48]!
  410284:	stp	x20, x19, [sp, #32]
  410288:	mov	x19, x0
  41028c:	mov	w0, #0x28                  	// #40
  410290:	stp	x22, x21, [sp, #16]
  410294:	mov	x29, sp
  410298:	mov	w21, w2
  41029c:	mov	w22, w1
  4102a0:	bl	413c1c <wcrtomb@plt+0x1125c>
  4102a4:	mov	x20, x0
  4102a8:	stp	w22, w21, [x0, #8]
  4102ac:	cbnz	w22, 4102f4 <wcrtomb@plt+0xd934>
  4102b0:	adrp	x8, 410000 <wcrtomb@plt+0xd640>
  4102b4:	adrp	x9, 410000 <wcrtomb@plt+0xd640>
  4102b8:	adrp	x10, 410000 <wcrtomb@plt+0xd640>
  4102bc:	adrp	x11, 410000 <wcrtomb@plt+0xd640>
  4102c0:	add	x8, x8, #0x6c8
  4102c4:	add	x9, x9, #0x61c
  4102c8:	tst	w21, #0x10
  4102cc:	add	x10, x10, #0x6f8
  4102d0:	add	x11, x11, #0x6dc
  4102d4:	adrp	x4, 410000 <wcrtomb@plt+0xd640>
  4102d8:	csel	x2, x9, x8, ne  // ne = any
  4102dc:	csel	x3, x11, x10, ne  // ne = any
  4102e0:	add	x4, x4, #0x714
  4102e4:	mov	x0, xzr
  4102e8:	mov	x1, xzr
  4102ec:	bl	410b98 <wcrtomb@plt+0xe1d8>
  4102f0:	str	x0, [x20, #16]
  4102f4:	ldr	x8, [x19]
  4102f8:	str	x8, [x20]
  4102fc:	str	x20, [x19]
  410300:	ldp	x20, x19, [sp, #32]
  410304:	ldp	x22, x21, [sp, #16]
  410308:	ldp	x29, x30, [sp], #48
  41030c:	ret
  410310:	mov	x8, x0
  410314:	b	410334 <wcrtomb@plt+0xd974>
  410318:	ldrb	w9, [x8, #1]
  41031c:	cmp	w9, #0x0
  410320:	cset	w9, ne  // ne = any
  410324:	add	x8, x8, x9
  410328:	ldrb	w9, [x8], #1
  41032c:	strb	w9, [x0], #1
  410330:	cbz	w9, 410348 <wcrtomb@plt+0xd988>
  410334:	ldrb	w9, [x8]
  410338:	cmp	w9, #0x5c
  41033c:	b.eq	410318 <wcrtomb@plt+0xd958>  // b.none
  410340:	mov	w9, wzr
  410344:	b	410324 <wcrtomb@plt+0xd964>
  410348:	ret
  41034c:	sub	sp, sp, #0x70
  410350:	stp	x24, x23, [sp, #64]
  410354:	mov	x23, x0
  410358:	mov	x0, x2
  41035c:	stp	x29, x30, [sp, #16]
  410360:	stp	x28, x27, [sp, #32]
  410364:	stp	x26, x25, [sp, #48]
  410368:	stp	x22, x21, [sp, #80]
  41036c:	stp	x20, x19, [sp, #96]
  410370:	add	x29, sp, #0x10
  410374:	mov	x19, x5
  410378:	mov	w20, w4
  41037c:	mov	w21, w3
  410380:	mov	x24, x2
  410384:	mov	x22, x1
  410388:	str	xzr, [sp, #8]
  41038c:	bl	402640 <getc_unlocked@plt>
  410390:	cmn	w0, #0x1
  410394:	b.eq	4103e8 <wcrtomb@plt+0xda28>  // b.none
  410398:	mov	w26, w0
  41039c:	mov	x25, xzr
  4103a0:	mov	x28, xzr
  4103a4:	b	4103c8 <wcrtomb@plt+0xda08>
  4103a8:	mov	x0, x24
  4103ac:	add	x27, x28, #0x1
  4103b0:	strb	w26, [x25, x28]
  4103b4:	bl	402640 <getc_unlocked@plt>
  4103b8:	mov	w26, w0
  4103bc:	cmn	w0, #0x1
  4103c0:	mov	x28, x27
  4103c4:	b.eq	4103f0 <wcrtomb@plt+0xda30>  // b.none
  4103c8:	ldr	x8, [sp, #8]
  4103cc:	cmp	x28, x8
  4103d0:	b.ne	4103a8 <wcrtomb@plt+0xd9e8>  // b.any
  4103d4:	add	x1, sp, #0x8
  4103d8:	mov	x0, x25
  4103dc:	bl	413c04 <wcrtomb@plt+0x11244>
  4103e0:	mov	x25, x0
  4103e4:	b	4103a8 <wcrtomb@plt+0xd9e8>
  4103e8:	mov	x27, xzr
  4103ec:	mov	x25, xzr
  4103f0:	mov	x0, x24
  4103f4:	bl	4023f0 <ferror_unlocked@plt>
  4103f8:	cbz	w0, 410408 <wcrtomb@plt+0xda48>
  4103fc:	bl	402930 <__errno_location@plt>
  410400:	ldr	w26, [x0]
  410404:	b	41040c <wcrtomb@plt+0xda4c>
  410408:	mov	w26, wzr
  41040c:	add	x1, x27, #0x1
  410410:	mov	x0, x25
  410414:	bl	413b40 <wcrtomb@plt+0x11180>
  410418:	mov	x24, x0
  41041c:	add	x8, x0, x27
  410420:	strb	w20, [x8]
  410424:	cbz	x27, 41043c <wcrtomb@plt+0xda7c>
  410428:	add	x9, x27, x24
  41042c:	ldurb	w9, [x9, #-1]
  410430:	cmp	w9, w20, uxtb
  410434:	cset	w9, ne  // ne = any
  410438:	b	410440 <wcrtomb@plt+0xda80>
  41043c:	mov	x9, xzr
  410440:	mov	x0, x22
  410444:	mov	x1, x24
  410448:	add	x27, x8, x9
  41044c:	bl	40fb38 <wcrtomb@plt+0xd178>
  410450:	cmp	x24, x27
  410454:	b.cs	4104cc <wcrtomb@plt+0xdb0c>  // b.hs, b.nlast
  410458:	and	x28, x20, #0xff
  41045c:	mov	x25, x24
  410460:	b	41048c <wcrtomb@plt+0xdacc>
  410464:	mov	x0, x22
  410468:	mov	x1, x25
  41046c:	mov	w2, w21
  410470:	mov	x3, x19
  410474:	strb	wzr, [x9]
  410478:	blr	x23
  41047c:	add	x25, x24, #0x1
  410480:	add	x24, x24, #0x1
  410484:	cmp	x24, x27
  410488:	b.eq	4104cc <wcrtomb@plt+0xdb0c>  // b.none
  41048c:	ldrb	w8, [x24]
  410490:	cmp	w8, w20, uxtb
  410494:	b.ne	410480 <wcrtomb@plt+0xdac0>  // b.any
  410498:	bl	402760 <__ctype_b_loc@plt>
  41049c:	ldr	x8, [x0]
  4104a0:	mov	x9, x24
  4104a4:	ldrh	w10, [x8, x28, lsl #1]
  4104a8:	tbz	w10, #13, 410464 <wcrtomb@plt+0xdaa4>
  4104ac:	mov	x9, x24
  4104b0:	cmp	x25, x9
  4104b4:	b.eq	41047c <wcrtomb@plt+0xdabc>  // b.none
  4104b8:	ldrb	w10, [x9, #-1]!
  4104bc:	ldrh	w10, [x8, x10, lsl #1]
  4104c0:	tbnz	w10, #13, 4104b0 <wcrtomb@plt+0xdaf0>
  4104c4:	add	x9, x9, #0x1
  4104c8:	b	410464 <wcrtomb@plt+0xdaa4>
  4104cc:	bl	402930 <__errno_location@plt>
  4104d0:	str	w26, [x0]
  4104d4:	cmp	w26, #0x0
  4104d8:	ldp	x20, x19, [sp, #96]
  4104dc:	ldp	x22, x21, [sp, #80]
  4104e0:	ldp	x24, x23, [sp, #64]
  4104e4:	ldp	x26, x25, [sp, #48]
  4104e8:	ldp	x28, x27, [sp, #32]
  4104ec:	ldp	x29, x30, [sp, #16]
  4104f0:	csetm	w8, ne  // ne = any
  4104f4:	mov	w0, w8
  4104f8:	add	sp, sp, #0x70
  4104fc:	ret
  410500:	stp	x29, x30, [sp, #-64]!
  410504:	mov	x29, sp
  410508:	stp	x22, x21, [sp, #32]
  41050c:	stp	x20, x19, [sp, #48]
  410510:	str	x0, [x29, #24]
  410514:	ldrb	w8, [x2]
  410518:	mov	w19, w4
  41051c:	mov	w20, w3
  410520:	mov	x21, x1
  410524:	cmp	w8, #0x2d
  410528:	str	x23, [sp, #16]
  41052c:	b.ne	410560 <wcrtomb@plt+0xdba0>  // b.any
  410530:	ldrb	w8, [x2, #1]
  410534:	cmp	w8, #0x0
  410538:	cset	w23, eq  // eq = none
  41053c:	cbnz	w23, 410568 <wcrtomb@plt+0xdba8>
  410540:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  410544:	add	x1, x1, #0x674
  410548:	mov	x0, x2
  41054c:	bl	4024b0 <fopen@plt>
  410550:	mov	x22, x0
  410554:	cbnz	x0, 410570 <wcrtomb@plt+0xdbb0>
  410558:	mov	w19, #0xffffffff            	// #-1
  41055c:	b	410598 <wcrtomb@plt+0xdbd8>
  410560:	mov	w23, wzr
  410564:	cbz	w23, 410540 <wcrtomb@plt+0xdb80>
  410568:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  41056c:	ldr	x22, [x8, #1136]
  410570:	adrp	x0, 410000 <wcrtomb@plt+0xd640>
  410574:	add	x0, x0, #0x5c4
  410578:	add	x5, x29, #0x18
  41057c:	mov	x1, x21
  410580:	mov	x2, x22
  410584:	mov	w3, w20
  410588:	mov	w4, w19
  41058c:	bl	41034c <wcrtomb@plt+0xd98c>
  410590:	mov	w19, w0
  410594:	tbz	w23, #0, 4105a0 <wcrtomb@plt+0xdbe0>
  410598:	mov	w0, w19
  41059c:	b	4105b0 <wcrtomb@plt+0xdbf0>
  4105a0:	mov	x0, x22
  4105a4:	bl	402480 <fclose@plt>
  4105a8:	cmp	w0, #0x0
  4105ac:	csinv	w0, w19, wzr, eq  // eq = none
  4105b0:	ldp	x20, x19, [sp, #48]
  4105b4:	ldp	x22, x21, [sp, #32]
  4105b8:	ldr	x23, [sp, #16]
  4105bc:	ldp	x29, x30, [sp], #64
  4105c0:	ret
  4105c4:	stp	x29, x30, [sp, #-16]!
  4105c8:	ldr	x8, [x3]
  4105cc:	mov	x29, sp
  4105d0:	blr	x8
  4105d4:	ldp	x29, x30, [sp], #16
  4105d8:	ret
  4105dc:	stp	x29, x30, [sp, #-16]!
  4105e0:	ldr	w2, [x0], #8
  4105e4:	mov	x29, sp
  4105e8:	tbnz	w2, #27, 4105f8 <wcrtomb@plt+0xdc38>
  4105ec:	ldr	x0, [x0]
  4105f0:	bl	40fcfc <wcrtomb@plt+0xd33c>
  4105f4:	b	410610 <wcrtomb@plt+0xdc50>
  4105f8:	mov	x2, xzr
  4105fc:	mov	x3, xzr
  410600:	mov	w4, wzr
  410604:	bl	416e24 <_obstack_memory_used@@Base+0x9f0>
  410608:	cmp	w0, #0x0
  41060c:	cset	w0, eq  // eq = none
  410610:	and	w0, w0, #0x1
  410614:	ldp	x29, x30, [sp], #16
  410618:	ret
  41061c:	sub	sp, sp, #0x60
  410620:	str	x0, [sp, #16]
  410624:	mov	x0, sp
  410628:	stp	x29, x30, [sp, #64]
  41062c:	stp	x20, x19, [sp, #80]
  410630:	add	x29, sp, #0x40
  410634:	mov	x19, x1
  410638:	strb	wzr, [sp]
  41063c:	stur	xzr, [sp, #4]
  410640:	strb	wzr, [sp, #12]
  410644:	bl	411800 <wcrtomb@plt+0xee40>
  410648:	ldrb	w8, [sp, #32]
  41064c:	ldr	w0, [sp, #36]
  410650:	cbz	w8, 41065c <wcrtomb@plt+0xdc9c>
  410654:	mov	x20, xzr
  410658:	cbz	w0, 4106b4 <wcrtomb@plt+0xdcf4>
  41065c:	mov	x20, xzr
  410660:	tst	w8, #0xff
  410664:	b.eq	410670 <wcrtomb@plt+0xdcb0>  // b.none
  410668:	bl	402970 <towlower@plt>
  41066c:	b	410678 <wcrtomb@plt+0xdcb8>
  410670:	ldr	x8, [sp, #16]
  410674:	ldrb	w0, [x8]
  410678:	lsl	x8, x20, #5
  41067c:	ldp	x10, x9, [sp, #16]
  410680:	sub	x8, x8, x20
  410684:	add	x8, x8, w0, uxtw
  410688:	udiv	x11, x8, x19
  41068c:	msub	x20, x11, x19, x8
  410690:	add	x8, x10, x9
  410694:	mov	x0, sp
  410698:	str	x8, [sp, #16]
  41069c:	strb	wzr, [sp, #12]
  4106a0:	bl	411800 <wcrtomb@plt+0xee40>
  4106a4:	ldrb	w8, [sp, #32]
  4106a8:	ldr	w0, [sp, #36]
  4106ac:	cbz	w8, 410660 <wcrtomb@plt+0xdca0>
  4106b0:	cbnz	w0, 410660 <wcrtomb@plt+0xdca0>
  4106b4:	mov	x0, x20
  4106b8:	ldp	x20, x19, [sp, #80]
  4106bc:	ldp	x29, x30, [sp, #64]
  4106c0:	add	sp, sp, #0x60
  4106c4:	ret
  4106c8:	stp	x29, x30, [sp, #-16]!
  4106cc:	mov	x29, sp
  4106d0:	bl	410b40 <wcrtomb@plt+0xe180>
  4106d4:	ldp	x29, x30, [sp], #16
  4106d8:	ret
  4106dc:	stp	x29, x30, [sp, #-16]!
  4106e0:	mov	x29, sp
  4106e4:	bl	4115cc <wcrtomb@plt+0xec0c>
  4106e8:	cmp	w0, #0x0
  4106ec:	cset	w0, eq  // eq = none
  4106f0:	ldp	x29, x30, [sp], #16
  4106f4:	ret
  4106f8:	stp	x29, x30, [sp, #-16]!
  4106fc:	mov	x29, sp
  410700:	bl	402750 <strcmp@plt>
  410704:	cmp	w0, #0x0
  410708:	cset	w0, eq  // eq = none
  41070c:	ldp	x29, x30, [sp], #16
  410710:	ret
  410714:	stp	x29, x30, [sp, #-16]!
  410718:	mov	x29, sp
  41071c:	bl	402770 <free@plt>
  410720:	ldp	x29, x30, [sp], #16
  410724:	ret
  410728:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  41072c:	ldr	x0, [x8, #1144]
  410730:	ret
  410734:	ldr	x0, [x0, #16]
  410738:	ret
  41073c:	ldr	x0, [x0, #24]
  410740:	ret
  410744:	ldr	x0, [x0, #32]
  410748:	ret
  41074c:	ldp	x8, x9, [x0]
  410750:	cmp	x8, x9
  410754:	b.cs	410798 <wcrtomb@plt+0xddd8>  // b.hs, b.nlast
  410758:	ldr	x9, [x0, #8]
  41075c:	mov	x0, xzr
  410760:	b	410770 <wcrtomb@plt+0xddb0>
  410764:	add	x8, x8, #0x10
  410768:	cmp	x8, x9
  41076c:	b.cs	41079c <wcrtomb@plt+0xdddc>  // b.hs, b.nlast
  410770:	ldr	x10, [x8]
  410774:	cbz	x10, 410764 <wcrtomb@plt+0xdda4>
  410778:	mov	x10, xzr
  41077c:	mov	x11, x8
  410780:	ldr	x11, [x11, #8]
  410784:	add	x10, x10, #0x1
  410788:	cbnz	x11, 410780 <wcrtomb@plt+0xddc0>
  41078c:	cmp	x10, x0
  410790:	csel	x0, x10, x0, hi  // hi = pmore
  410794:	b	410764 <wcrtomb@plt+0xdda4>
  410798:	mov	x0, xzr
  41079c:	ret
  4107a0:	ldp	x9, x8, [x0]
  4107a4:	cmp	x9, x8
  4107a8:	b.cs	4107e8 <wcrtomb@plt+0xde28>  // b.hs, b.nlast
  4107ac:	ldr	x11, [x0, #8]
  4107b0:	mov	x8, xzr
  4107b4:	mov	x10, xzr
  4107b8:	b	4107c8 <wcrtomb@plt+0xde08>
  4107bc:	add	x9, x9, #0x10
  4107c0:	cmp	x9, x11
  4107c4:	b.cs	4107f0 <wcrtomb@plt+0xde30>  // b.hs, b.nlast
  4107c8:	ldr	x12, [x9]
  4107cc:	cbz	x12, 4107bc <wcrtomb@plt+0xddfc>
  4107d0:	mov	x12, x9
  4107d4:	ldr	x12, [x12, #8]
  4107d8:	add	x8, x8, #0x1
  4107dc:	cbnz	x12, 4107d4 <wcrtomb@plt+0xde14>
  4107e0:	add	x10, x10, #0x1
  4107e4:	b	4107bc <wcrtomb@plt+0xddfc>
  4107e8:	mov	x10, xzr
  4107ec:	mov	x8, xzr
  4107f0:	ldr	x9, [x0, #24]
  4107f4:	cmp	x10, x9
  4107f8:	b.ne	410810 <wcrtomb@plt+0xde50>  // b.any
  4107fc:	ldr	x9, [x0, #32]
  410800:	cmp	x8, x9
  410804:	b.ne	410810 <wcrtomb@plt+0xde50>  // b.any
  410808:	mov	w0, #0x1                   	// #1
  41080c:	ret
  410810:	mov	w0, wzr
  410814:	ret
  410818:	stp	x29, x30, [sp, #-64]!
  41081c:	str	x23, [sp, #16]
  410820:	stp	x22, x21, [sp, #32]
  410824:	stp	x20, x19, [sp, #48]
  410828:	mov	x29, sp
  41082c:	mov	x19, x1
  410830:	mov	x20, x0
  410834:	bl	410744 <wcrtomb@plt+0xdd84>
  410838:	mov	x21, x0
  41083c:	mov	x0, x20
  410840:	bl	410734 <wcrtomb@plt+0xdd74>
  410844:	mov	x22, x0
  410848:	mov	x0, x20
  41084c:	bl	41073c <wcrtomb@plt+0xdd7c>
  410850:	mov	x23, x0
  410854:	mov	x0, x20
  410858:	bl	41074c <wcrtomb@plt+0xdd8c>
  41085c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  410860:	mov	x20, x0
  410864:	add	x1, x1, #0x52
  410868:	mov	x0, x19
  41086c:	mov	x2, x21
  410870:	bl	402980 <fprintf@plt>
  410874:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  410878:	add	x1, x1, #0x6a
  41087c:	mov	x0, x19
  410880:	mov	x2, x22
  410884:	bl	402980 <fprintf@plt>
  410888:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  41088c:	ucvtf	d0, x23
  410890:	fmov	d1, x8
  410894:	fmul	d0, d0, d1
  410898:	ucvtf	d1, x22
  41089c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4108a0:	fdiv	d0, d0, d1
  4108a4:	add	x1, x1, #0x82
  4108a8:	mov	x0, x19
  4108ac:	mov	x2, x23
  4108b0:	bl	402980 <fprintf@plt>
  4108b4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4108b8:	add	x1, x1, #0xa3
  4108bc:	mov	x0, x19
  4108c0:	mov	x2, x20
  4108c4:	bl	402980 <fprintf@plt>
  4108c8:	ldp	x20, x19, [sp, #48]
  4108cc:	ldp	x22, x21, [sp, #32]
  4108d0:	ldr	x23, [sp, #16]
  4108d4:	ldp	x29, x30, [sp], #64
  4108d8:	ret
  4108dc:	stp	x29, x30, [sp, #-48]!
  4108e0:	str	x21, [sp, #16]
  4108e4:	stp	x20, x19, [sp, #32]
  4108e8:	mov	x29, sp
  4108ec:	mov	x19, x1
  4108f0:	mov	x20, x0
  4108f4:	bl	41094c <wcrtomb@plt+0xdf8c>
  4108f8:	ldr	x8, [x0]
  4108fc:	mov	x21, x0
  410900:	mov	x0, xzr
  410904:	cbz	x8, 41093c <wcrtomb@plt+0xdf7c>
  410908:	cbz	x21, 41093c <wcrtomb@plt+0xdf7c>
  41090c:	ldr	x1, [x21]
  410910:	cmp	x1, x19
  410914:	b.eq	410938 <wcrtomb@plt+0xdf78>  // b.none
  410918:	ldr	x8, [x20, #56]
  41091c:	mov	x0, x19
  410920:	blr	x8
  410924:	tbnz	w0, #0, 410938 <wcrtomb@plt+0xdf78>
  410928:	ldr	x21, [x21, #8]
  41092c:	cbnz	x21, 41090c <wcrtomb@plt+0xdf4c>
  410930:	mov	x0, xzr
  410934:	b	41093c <wcrtomb@plt+0xdf7c>
  410938:	ldr	x0, [x21]
  41093c:	ldp	x20, x19, [sp, #32]
  410940:	ldr	x21, [sp, #16]
  410944:	ldp	x29, x30, [sp], #48
  410948:	ret
  41094c:	stp	x29, x30, [sp, #-32]!
  410950:	ldr	x8, [x0, #16]
  410954:	ldr	x9, [x0, #48]
  410958:	str	x19, [sp, #16]
  41095c:	mov	x19, x0
  410960:	mov	x0, x1
  410964:	mov	x1, x8
  410968:	mov	x29, sp
  41096c:	blr	x9
  410970:	ldr	x8, [x19, #16]
  410974:	cmp	x0, x8
  410978:	b.cs	410990 <wcrtomb@plt+0xdfd0>  // b.hs, b.nlast
  41097c:	ldr	x8, [x19]
  410980:	ldr	x19, [sp, #16]
  410984:	add	x0, x8, x0, lsl #4
  410988:	ldp	x29, x30, [sp], #32
  41098c:	ret
  410990:	bl	4026c0 <abort@plt>
  410994:	stp	x29, x30, [sp, #-16]!
  410998:	ldr	x8, [x0, #32]
  41099c:	mov	x29, sp
  4109a0:	cbz	x8, 4109bc <wcrtomb@plt+0xdffc>
  4109a4:	ldr	x9, [x0]
  4109a8:	ldr	x8, [x0, #8]
  4109ac:	cmp	x9, x8
  4109b0:	b.cs	4109c8 <wcrtomb@plt+0xe008>  // b.hs, b.nlast
  4109b4:	ldr	x8, [x9], #16
  4109b8:	cbz	x8, 4109a8 <wcrtomb@plt+0xdfe8>
  4109bc:	mov	x0, x8
  4109c0:	ldp	x29, x30, [sp], #16
  4109c4:	ret
  4109c8:	bl	4026c0 <abort@plt>
  4109cc:	stp	x29, x30, [sp, #-32]!
  4109d0:	stp	x20, x19, [sp, #16]
  4109d4:	mov	x29, sp
  4109d8:	mov	x20, x1
  4109dc:	mov	x19, x0
  4109e0:	bl	41094c <wcrtomb@plt+0xdf8c>
  4109e4:	mov	x8, x0
  4109e8:	b	4109f4 <wcrtomb@plt+0xe034>
  4109ec:	ldr	x8, [x8, #8]
  4109f0:	cbz	x8, 410a10 <wcrtomb@plt+0xe050>
  4109f4:	ldr	x9, [x8]
  4109f8:	cmp	x9, x20
  4109fc:	b.ne	4109ec <wcrtomb@plt+0xe02c>  // b.any
  410a00:	ldr	x9, [x8, #8]
  410a04:	cbz	x9, 4109ec <wcrtomb@plt+0xe02c>
  410a08:	ldr	x0, [x9]
  410a0c:	b	410a30 <wcrtomb@plt+0xe070>
  410a10:	ldr	x8, [x19, #8]
  410a14:	add	x9, x0, #0x10
  410a18:	cmp	x9, x8
  410a1c:	b.cs	410a2c <wcrtomb@plt+0xe06c>  // b.hs, b.nlast
  410a20:	ldr	x0, [x9], #16
  410a24:	cbz	x0, 410a18 <wcrtomb@plt+0xe058>
  410a28:	b	410a30 <wcrtomb@plt+0xe070>
  410a2c:	mov	x0, xzr
  410a30:	ldp	x20, x19, [sp, #16]
  410a34:	ldp	x29, x30, [sp], #32
  410a38:	ret
  410a3c:	ldp	x9, x8, [x0]
  410a40:	cmp	x9, x8
  410a44:	b.cs	410aa0 <wcrtomb@plt+0xe0e0>  // b.hs, b.nlast
  410a48:	mov	x10, xzr
  410a4c:	ldr	x8, [x9]
  410a50:	cbz	x8, 410a80 <wcrtomb@plt+0xe0c0>
  410a54:	cbz	x9, 410a80 <wcrtomb@plt+0xe0c0>
  410a58:	mov	x11, x9
  410a5c:	cmp	x10, x2
  410a60:	b.cs	410aa8 <wcrtomb@plt+0xe0e8>  // b.hs, b.nlast
  410a64:	ldr	x8, [x11]
  410a68:	str	x8, [x1, x10, lsl #3]
  410a6c:	ldr	x11, [x11, #8]
  410a70:	add	x8, x10, #0x1
  410a74:	mov	x10, x8
  410a78:	cbnz	x11, 410a5c <wcrtomb@plt+0xe09c>
  410a7c:	b	410a84 <wcrtomb@plt+0xe0c4>
  410a80:	mov	x8, x10
  410a84:	ldr	x10, [x0, #8]
  410a88:	add	x9, x9, #0x10
  410a8c:	cmp	x9, x10
  410a90:	mov	x10, x8
  410a94:	b.cc	410a4c <wcrtomb@plt+0xe08c>  // b.lo, b.ul, b.last
  410a98:	mov	x0, x8
  410a9c:	ret
  410aa0:	mov	x0, xzr
  410aa4:	ret
  410aa8:	mov	x0, x10
  410aac:	ret
  410ab0:	stp	x29, x30, [sp, #-64]!
  410ab4:	stp	x24, x23, [sp, #16]
  410ab8:	stp	x22, x21, [sp, #32]
  410abc:	stp	x20, x19, [sp, #48]
  410ac0:	ldp	x23, x8, [x0]
  410ac4:	mov	x29, sp
  410ac8:	cmp	x23, x8
  410acc:	b.cs	410b24 <wcrtomb@plt+0xe164>  // b.hs, b.nlast
  410ad0:	mov	x19, x2
  410ad4:	mov	x20, x0
  410ad8:	mov	x22, x1
  410adc:	mov	x21, xzr
  410ae0:	b	410af4 <wcrtomb@plt+0xe134>
  410ae4:	ldr	x8, [x20, #8]
  410ae8:	add	x23, x23, #0x10
  410aec:	cmp	x23, x8
  410af0:	b.cs	410b28 <wcrtomb@plt+0xe168>  // b.hs, b.nlast
  410af4:	ldr	x8, [x23]
  410af8:	cbz	x8, 410ae4 <wcrtomb@plt+0xe124>
  410afc:	cbz	x23, 410ae4 <wcrtomb@plt+0xe124>
  410b00:	mov	x24, x23
  410b04:	ldr	x0, [x24]
  410b08:	mov	x1, x19
  410b0c:	blr	x22
  410b10:	tbz	w0, #0, 410b28 <wcrtomb@plt+0xe168>
  410b14:	ldr	x24, [x24, #8]
  410b18:	add	x21, x21, #0x1
  410b1c:	cbnz	x24, 410b04 <wcrtomb@plt+0xe144>
  410b20:	b	410ae4 <wcrtomb@plt+0xe124>
  410b24:	mov	x21, xzr
  410b28:	mov	x0, x21
  410b2c:	ldp	x20, x19, [sp, #48]
  410b30:	ldp	x22, x21, [sp, #32]
  410b34:	ldp	x24, x23, [sp, #16]
  410b38:	ldp	x29, x30, [sp], #64
  410b3c:	ret
  410b40:	ldrb	w9, [x0]
  410b44:	cbz	w9, 410b74 <wcrtomb@plt+0xe1b4>
  410b48:	mov	x8, x0
  410b4c:	mov	x0, xzr
  410b50:	add	x8, x8, #0x1
  410b54:	lsl	x10, x0, #5
  410b58:	sub	x10, x10, x0
  410b5c:	add	x10, x10, w9, uxtb
  410b60:	ldrb	w9, [x8], #1
  410b64:	udiv	x11, x10, x1
  410b68:	msub	x0, x11, x1, x10
  410b6c:	cbnz	w9, 410b54 <wcrtomb@plt+0xe194>
  410b70:	ret
  410b74:	mov	x0, xzr
  410b78:	ret
  410b7c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  410b80:	add	x8, x8, #0xbc
  410b84:	ldr	w9, [x8, #16]
  410b88:	ldr	q0, [x8]
  410b8c:	str	w9, [x0, #16]
  410b90:	str	q0, [x0]
  410b94:	ret
  410b98:	stp	x29, x30, [sp, #-64]!
  410b9c:	adrp	x8, 410000 <wcrtomb@plt+0xd640>
  410ba0:	add	x8, x8, #0xc6c
  410ba4:	cmp	x2, #0x0
  410ba8:	adrp	x9, 410000 <wcrtomb@plt+0xd640>
  410bac:	stp	x24, x23, [sp, #16]
  410bb0:	stp	x22, x21, [sp, #32]
  410bb4:	mov	x21, x0
  410bb8:	add	x9, x9, #0xc98
  410bbc:	csel	x23, x8, x2, eq  // eq = none
  410bc0:	cmp	x3, #0x0
  410bc4:	mov	w0, #0x50                  	// #80
  410bc8:	stp	x20, x19, [sp, #48]
  410bcc:	mov	x29, sp
  410bd0:	mov	x19, x4
  410bd4:	mov	x22, x1
  410bd8:	csel	x24, x9, x3, eq  // eq = none
  410bdc:	bl	4024e0 <malloc@plt>
  410be0:	mov	x20, x0
  410be4:	cbz	x0, 410c54 <wcrtomb@plt+0xe294>
  410be8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  410bec:	add	x8, x8, #0xbc
  410bf0:	cmp	x22, #0x0
  410bf4:	csel	x22, x8, x22, eq  // eq = none
  410bf8:	mov	x0, x20
  410bfc:	str	x22, [x20, #40]
  410c00:	bl	410ca4 <wcrtomb@plt+0xe2e4>
  410c04:	tbz	w0, #0, 410c48 <wcrtomb@plt+0xe288>
  410c08:	mov	x0, x21
  410c0c:	mov	x1, x22
  410c10:	bl	410d4c <wcrtomb@plt+0xe38c>
  410c14:	str	x0, [x20, #16]
  410c18:	cbz	x0, 410c48 <wcrtomb@plt+0xe288>
  410c1c:	mov	w1, #0x10                  	// #16
  410c20:	mov	x21, x0
  410c24:	bl	4025d0 <calloc@plt>
  410c28:	str	x0, [x20]
  410c2c:	cbz	x0, 410c48 <wcrtomb@plt+0xe288>
  410c30:	add	x8, x0, x21, lsl #4
  410c34:	stp	xzr, xzr, [x20, #24]
  410c38:	stp	x23, x24, [x20, #48]
  410c3c:	str	x8, [x20, #8]
  410c40:	stp	x19, xzr, [x20, #64]
  410c44:	b	410c54 <wcrtomb@plt+0xe294>
  410c48:	mov	x0, x20
  410c4c:	bl	402770 <free@plt>
  410c50:	mov	x20, xzr
  410c54:	mov	x0, x20
  410c58:	ldp	x20, x19, [sp, #48]
  410c5c:	ldp	x22, x21, [sp, #32]
  410c60:	ldp	x24, x23, [sp, #16]
  410c64:	ldp	x29, x30, [sp], #64
  410c68:	ret
  410c6c:	stp	x29, x30, [sp, #-32]!
  410c70:	str	x19, [sp, #16]
  410c74:	mov	x19, x1
  410c78:	mov	w1, #0x3                   	// #3
  410c7c:	mov	x29, sp
  410c80:	bl	422e38 <_obstack_memory_used@@Base+0xca04>
  410c84:	udiv	x8, x0, x19
  410c88:	msub	x0, x8, x19, x0
  410c8c:	ldr	x19, [sp, #16]
  410c90:	ldp	x29, x30, [sp], #32
  410c94:	ret
  410c98:	cmp	x0, x1
  410c9c:	cset	w0, eq  // eq = none
  410ca0:	ret
  410ca4:	ldr	x8, [x0, #40]
  410ca8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  410cac:	add	x9, x9, #0xbc
  410cb0:	cmp	x8, x9
  410cb4:	b.eq	410d44 <wcrtomb@plt+0xe384>  // b.none
  410cb8:	ldr	s0, [x8, #8]
  410cbc:	mov	w10, #0xcccd                	// #52429
  410cc0:	movk	w10, #0x3dcc, lsl #16
  410cc4:	fmov	s1, w10
  410cc8:	fcmp	s0, s1
  410ccc:	b.le	410d08 <wcrtomb@plt+0xe348>
  410cd0:	mov	w10, #0x6666                	// #26214
  410cd4:	movk	w10, #0x3f66, lsl #16
  410cd8:	fmov	s1, w10
  410cdc:	fcmp	s0, s1
  410ce0:	b.pl	410d08 <wcrtomb@plt+0xe348>  // b.nfrst
  410ce4:	ldr	s1, [x8, #12]
  410ce8:	mov	w10, #0xcccd                	// #52429
  410cec:	movk	w10, #0x3f8c, lsl #16
  410cf0:	fmov	s2, w10
  410cf4:	fcmp	s1, s2
  410cf8:	b.le	410d08 <wcrtomb@plt+0xe348>
  410cfc:	ldr	s1, [x8]
  410d00:	fcmp	s1, #0.0
  410d04:	b.ge	410d14 <wcrtomb@plt+0xe354>  // b.tcont
  410d08:	str	x9, [x0, #40]
  410d0c:	mov	w0, wzr
  410d10:	ret
  410d14:	mov	w10, #0xcccd                	// #52429
  410d18:	movk	w10, #0x3dcc, lsl #16
  410d1c:	fmov	s2, w10
  410d20:	fadd	s1, s1, s2
  410d24:	fcmp	s1, s0
  410d28:	b.pl	410d08 <wcrtomb@plt+0xe348>  // b.nfrst
  410d2c:	ldr	s0, [x8, #4]
  410d30:	fmov	s2, #1.000000000000000000e+00
  410d34:	fcmp	s0, s2
  410d38:	b.hi	410d08 <wcrtomb@plt+0xe348>  // b.pmore
  410d3c:	fcmp	s1, s0
  410d40:	b.pl	410d08 <wcrtomb@plt+0xe348>  // b.nfrst
  410d44:	mov	w0, #0x1                   	// #1
  410d48:	ret
  410d4c:	stp	x29, x30, [sp, #-16]!
  410d50:	ldrb	w8, [x1, #16]
  410d54:	mov	x29, sp
  410d58:	cbnz	w8, 410d80 <wcrtomb@plt+0xe3c0>
  410d5c:	ldr	s0, [x1, #8]
  410d60:	mov	w8, #0x5f800000            	// #1602224128
  410d64:	ucvtf	s1, x0
  410d68:	fmov	s2, w8
  410d6c:	fdiv	s0, s1, s0
  410d70:	fcvtzu	x8, s0
  410d74:	fcmp	s0, s2
  410d78:	csel	x0, x8, x0, lt  // lt = tstop
  410d7c:	b.ge	410d98 <wcrtomb@plt+0xe3d8>  // b.tcont
  410d80:	bl	411524 <wcrtomb@plt+0xeb64>
  410d84:	lsr	x8, x0, #60
  410d88:	cmp	x8, #0x0
  410d8c:	csel	x0, xzr, x0, ne  // ne = any
  410d90:	ldp	x29, x30, [sp], #16
  410d94:	ret
  410d98:	mov	x0, xzr
  410d9c:	ldp	x29, x30, [sp], #16
  410da0:	ret
  410da4:	stp	x29, x30, [sp, #-48]!
  410da8:	str	x21, [sp, #16]
  410dac:	stp	x20, x19, [sp, #32]
  410db0:	ldp	x20, x8, [x0]
  410db4:	mov	x19, x0
  410db8:	mov	x29, sp
  410dbc:	b	410dcc <wcrtomb@plt+0xe40c>
  410dc0:	stp	xzr, xzr, [x20]
  410dc4:	ldr	x8, [x19, #8]
  410dc8:	add	x20, x20, #0x10
  410dcc:	cmp	x20, x8
  410dd0:	b.cs	410e38 <wcrtomb@plt+0xe478>  // b.hs, b.nlast
  410dd4:	ldr	x8, [x20]
  410dd8:	cbz	x8, 410dc4 <wcrtomb@plt+0xe404>
  410ddc:	ldr	x8, [x19, #64]
  410de0:	ldr	x21, [x20, #8]
  410de4:	cmp	x8, #0x0
  410de8:	cset	w9, ne  // ne = any
  410dec:	cbnz	x21, 410e28 <wcrtomb@plt+0xe468>
  410df0:	cbz	w9, 410dc0 <wcrtomb@plt+0xe400>
  410df4:	ldr	x0, [x20]
  410df8:	blr	x8
  410dfc:	b	410dc0 <wcrtomb@plt+0xe400>
  410e00:	str	xzr, [x21]
  410e04:	ldr	x8, [x19, #72]
  410e08:	ldr	x10, [x21, #8]
  410e0c:	str	x8, [x21, #8]
  410e10:	ldr	x8, [x19, #64]
  410e14:	str	x21, [x19, #72]
  410e18:	mov	x21, x10
  410e1c:	cmp	x8, #0x0
  410e20:	cset	w9, ne  // ne = any
  410e24:	cbz	x10, 410df0 <wcrtomb@plt+0xe430>
  410e28:	tbz	w9, #0, 410e00 <wcrtomb@plt+0xe440>
  410e2c:	ldr	x0, [x21]
  410e30:	blr	x8
  410e34:	b	410e00 <wcrtomb@plt+0xe440>
  410e38:	stp	xzr, xzr, [x19, #24]
  410e3c:	ldp	x20, x19, [sp, #32]
  410e40:	ldr	x21, [sp, #16]
  410e44:	ldp	x29, x30, [sp], #48
  410e48:	ret
  410e4c:	stp	x29, x30, [sp, #-48]!
  410e50:	stp	x20, x19, [sp, #32]
  410e54:	ldr	x8, [x0, #64]
  410e58:	mov	x19, x0
  410e5c:	str	x21, [sp, #16]
  410e60:	mov	x29, sp
  410e64:	cbz	x8, 410eb0 <wcrtomb@plt+0xe4f0>
  410e68:	ldr	x8, [x19, #32]
  410e6c:	cbz	x8, 410eb0 <wcrtomb@plt+0xe4f0>
  410e70:	ldp	x20, x8, [x19]
  410e74:	b	410e80 <wcrtomb@plt+0xe4c0>
  410e78:	ldr	x8, [x19, #8]
  410e7c:	add	x20, x20, #0x10
  410e80:	cmp	x20, x8
  410e84:	b.cs	410eb0 <wcrtomb@plt+0xe4f0>  // b.hs, b.nlast
  410e88:	ldr	x8, [x20]
  410e8c:	cbz	x8, 410e78 <wcrtomb@plt+0xe4b8>
  410e90:	cbz	x20, 410e78 <wcrtomb@plt+0xe4b8>
  410e94:	mov	x21, x20
  410e98:	ldr	x8, [x19, #64]
  410e9c:	ldr	x0, [x21]
  410ea0:	blr	x8
  410ea4:	ldr	x21, [x21, #8]
  410ea8:	cbnz	x21, 410e98 <wcrtomb@plt+0xe4d8>
  410eac:	b	410e78 <wcrtomb@plt+0xe4b8>
  410eb0:	ldp	x20, x8, [x19]
  410eb4:	b	410ec0 <wcrtomb@plt+0xe500>
  410eb8:	ldr	x8, [x19, #8]
  410ebc:	add	x20, x20, #0x10
  410ec0:	cmp	x20, x8
  410ec4:	b.cs	410ee4 <wcrtomb@plt+0xe524>  // b.hs, b.nlast
  410ec8:	ldr	x0, [x20, #8]
  410ecc:	cbz	x0, 410eb8 <wcrtomb@plt+0xe4f8>
  410ed0:	ldr	x21, [x0, #8]
  410ed4:	bl	402770 <free@plt>
  410ed8:	mov	x0, x21
  410edc:	cbnz	x21, 410ed0 <wcrtomb@plt+0xe510>
  410ee0:	b	410eb8 <wcrtomb@plt+0xe4f8>
  410ee4:	ldr	x0, [x19, #72]
  410ee8:	cbz	x0, 410efc <wcrtomb@plt+0xe53c>
  410eec:	ldr	x20, [x0, #8]
  410ef0:	bl	402770 <free@plt>
  410ef4:	mov	x0, x20
  410ef8:	cbnz	x20, 410eec <wcrtomb@plt+0xe52c>
  410efc:	ldr	x0, [x19]
  410f00:	bl	402770 <free@plt>
  410f04:	mov	x0, x19
  410f08:	bl	402770 <free@plt>
  410f0c:	ldp	x20, x19, [sp, #32]
  410f10:	ldr	x21, [sp, #16]
  410f14:	ldp	x29, x30, [sp], #48
  410f18:	ret
  410f1c:	sub	sp, sp, #0x70
  410f20:	stp	x29, x30, [sp, #80]
  410f24:	stp	x20, x19, [sp, #96]
  410f28:	ldr	x8, [x0, #40]
  410f2c:	mov	x19, x0
  410f30:	mov	x0, x1
  410f34:	add	x29, sp, #0x50
  410f38:	mov	x1, x8
  410f3c:	bl	410d4c <wcrtomb@plt+0xe38c>
  410f40:	cbz	x0, 411030 <wcrtomb@plt+0xe670>
  410f44:	ldr	x8, [x19, #16]
  410f48:	mov	x20, x0
  410f4c:	cmp	x0, x8
  410f50:	b.ne	410f5c <wcrtomb@plt+0xe59c>  // b.any
  410f54:	mov	w0, #0x1                   	// #1
  410f58:	b	411030 <wcrtomb@plt+0xe670>
  410f5c:	mov	w1, #0x10                  	// #16
  410f60:	mov	x0, x20
  410f64:	bl	4025d0 <calloc@plt>
  410f68:	str	x0, [sp]
  410f6c:	cbz	x0, 411030 <wcrtomb@plt+0xe670>
  410f70:	ldr	x8, [sp]
  410f74:	stp	xzr, xzr, [sp, #24]
  410f78:	mov	x0, sp
  410f7c:	mov	x1, x19
  410f80:	add	x8, x8, x20, lsl #4
  410f84:	stp	x8, x20, [sp, #8]
  410f88:	ldr	x8, [x19, #40]
  410f8c:	mov	w2, wzr
  410f90:	str	x8, [sp, #40]
  410f94:	ldr	x8, [x19, #48]
  410f98:	str	x8, [sp, #48]
  410f9c:	ldr	x8, [x19, #56]
  410fa0:	str	x8, [sp, #56]
  410fa4:	ldr	x8, [x19, #64]
  410fa8:	str	x8, [sp, #64]
  410fac:	ldr	x8, [x19, #72]
  410fb0:	str	x8, [sp, #72]
  410fb4:	bl	411044 <wcrtomb@plt+0xe684>
  410fb8:	tbz	w0, #0, 410ff4 <wcrtomb@plt+0xe634>
  410fbc:	ldr	x0, [x19]
  410fc0:	bl	402770 <free@plt>
  410fc4:	ldr	x8, [sp]
  410fc8:	mov	w0, #0x1                   	// #1
  410fcc:	str	x8, [x19]
  410fd0:	ldr	x8, [sp, #8]
  410fd4:	str	x8, [x19, #8]
  410fd8:	ldr	x8, [sp, #16]
  410fdc:	str	x8, [x19, #16]
  410fe0:	ldr	x8, [sp, #24]
  410fe4:	str	x8, [x19, #24]
  410fe8:	ldr	x8, [sp, #72]
  410fec:	str	x8, [x19, #72]
  410ff0:	b	411030 <wcrtomb@plt+0xe670>
  410ff4:	ldr	x8, [sp, #72]
  410ff8:	mov	x1, sp
  410ffc:	mov	w2, #0x1                   	// #1
  411000:	mov	x0, x19
  411004:	str	x8, [x19, #72]
  411008:	bl	411044 <wcrtomb@plt+0xe684>
  41100c:	tbz	w0, #0, 411040 <wcrtomb@plt+0xe680>
  411010:	mov	x1, sp
  411014:	mov	x0, x19
  411018:	mov	w2, wzr
  41101c:	bl	411044 <wcrtomb@plt+0xe684>
  411020:	tbz	w0, #0, 411040 <wcrtomb@plt+0xe680>
  411024:	ldr	x0, [sp]
  411028:	bl	402770 <free@plt>
  41102c:	mov	w0, wzr
  411030:	ldp	x20, x19, [sp, #96]
  411034:	ldp	x29, x30, [sp, #80]
  411038:	add	sp, sp, #0x70
  41103c:	ret
  411040:	bl	4026c0 <abort@plt>
  411044:	stp	x29, x30, [sp, #-80]!
  411048:	str	x25, [sp, #16]
  41104c:	stp	x24, x23, [sp, #32]
  411050:	stp	x22, x21, [sp, #48]
  411054:	stp	x20, x19, [sp, #64]
  411058:	ldp	x24, x8, [x1]
  41105c:	mov	x29, sp
  411060:	cmp	x24, x8
  411064:	b.cs	411180 <wcrtomb@plt+0xe7c0>  // b.hs, b.nlast
  411068:	mov	w19, w2
  41106c:	mov	x20, x1
  411070:	mov	x21, x0
  411074:	b	411098 <wcrtomb@plt+0xe6d8>
  411078:	mov	w8, #0x4                   	// #4
  41107c:	orr	w8, w8, #0x4
  411080:	cmp	w8, #0x4
  411084:	b.ne	411188 <wcrtomb@plt+0xe7c8>  // b.any
  411088:	ldr	x8, [x20, #8]
  41108c:	add	x24, x24, #0x10
  411090:	cmp	x24, x8
  411094:	b.cs	411180 <wcrtomb@plt+0xe7c0>  // b.hs, b.nlast
  411098:	ldr	x8, [x24]
  41109c:	cbz	x8, 411088 <wcrtomb@plt+0xe6c8>
  4110a0:	ldr	x22, [x24, #8]
  4110a4:	cbnz	x22, 4110d0 <wcrtomb@plt+0xe710>
  4110a8:	b	411100 <wcrtomb@plt+0xe740>
  4110ac:	str	x23, [x0]
  4110b0:	ldr	x8, [x21, #24]
  4110b4:	mov	x0, x21
  4110b8:	mov	x1, x22
  4110bc:	add	x8, x8, #0x1
  4110c0:	str	x8, [x21, #24]
  4110c4:	bl	4115b8 <wcrtomb@plt+0xebf8>
  4110c8:	mov	x22, x25
  4110cc:	cbz	x25, 411100 <wcrtomb@plt+0xe740>
  4110d0:	ldr	x23, [x22]
  4110d4:	mov	x0, x21
  4110d8:	mov	x1, x23
  4110dc:	bl	41094c <wcrtomb@plt+0xdf8c>
  4110e0:	ldr	x8, [x0]
  4110e4:	ldr	x25, [x22, #8]
  4110e8:	cbz	x8, 4110ac <wcrtomb@plt+0xe6ec>
  4110ec:	ldr	x8, [x0, #8]
  4110f0:	str	x8, [x22, #8]
  4110f4:	str	x22, [x0, #8]
  4110f8:	mov	x22, x25
  4110fc:	cbnz	x25, 4110d0 <wcrtomb@plt+0xe710>
  411100:	ldr	x22, [x24]
  411104:	str	xzr, [x24, #8]
  411108:	tbnz	w19, #0, 411078 <wcrtomb@plt+0xe6b8>
  41110c:	mov	x0, x21
  411110:	mov	x1, x22
  411114:	bl	41094c <wcrtomb@plt+0xdf8c>
  411118:	ldr	x8, [x0]
  41111c:	mov	x23, x0
  411120:	cbz	x8, 41114c <wcrtomb@plt+0xe78c>
  411124:	mov	x0, x21
  411128:	bl	4113d0 <wcrtomb@plt+0xea10>
  41112c:	cbz	x0, 411174 <wcrtomb@plt+0xe7b4>
  411130:	str	x22, [x0]
  411134:	ldr	x9, [x23, #8]
  411138:	mov	w8, wzr
  41113c:	str	x9, [x0, #8]
  411140:	str	x0, [x23, #8]
  411144:	cbnz	wzr, 41107c <wcrtomb@plt+0xe6bc>
  411148:	b	41115c <wcrtomb@plt+0xe79c>
  41114c:	str	x22, [x23]
  411150:	ldr	x8, [x21, #24]
  411154:	add	x8, x8, #0x1
  411158:	str	x8, [x21, #24]
  41115c:	str	xzr, [x24]
  411160:	ldr	x9, [x20, #24]
  411164:	mov	w8, wzr
  411168:	sub	x9, x9, #0x1
  41116c:	str	x9, [x20, #24]
  411170:	b	41107c <wcrtomb@plt+0xe6bc>
  411174:	mov	w8, #0x1                   	// #1
  411178:	cbnz	w8, 41107c <wcrtomb@plt+0xe6bc>
  41117c:	b	41115c <wcrtomb@plt+0xe79c>
  411180:	mov	w0, #0x1                   	// #1
  411184:	b	41118c <wcrtomb@plt+0xe7cc>
  411188:	mov	w0, wzr
  41118c:	ldp	x20, x19, [sp, #64]
  411190:	ldp	x22, x21, [sp, #48]
  411194:	ldp	x24, x23, [sp, #32]
  411198:	ldr	x25, [sp, #16]
  41119c:	ldp	x29, x30, [sp], #80
  4111a0:	ret
  4111a4:	stp	x29, x30, [sp, #-48]!
  4111a8:	str	x21, [sp, #16]
  4111ac:	stp	x20, x19, [sp, #32]
  4111b0:	mov	x29, sp
  4111b4:	cbz	x1, 4112f0 <wcrtomb@plt+0xe930>
  4111b8:	mov	x21, x2
  4111bc:	add	x2, x29, #0x18
  4111c0:	mov	w3, wzr
  4111c4:	mov	x20, x1
  4111c8:	mov	x19, x0
  4111cc:	bl	4112f4 <wcrtomb@plt+0xe934>
  4111d0:	cbz	x0, 4111e8 <wcrtomb@plt+0xe828>
  4111d4:	cbz	x21, 4112b8 <wcrtomb@plt+0xe8f8>
  4111d8:	mov	x8, x0
  4111dc:	mov	w0, wzr
  4111e0:	str	x8, [x21]
  4111e4:	b	4112e0 <wcrtomb@plt+0xe920>
  4111e8:	ldr	x8, [x19, #40]
  4111ec:	ldp	x10, x9, [x19, #16]
  4111f0:	ldr	s0, [x8, #8]
  4111f4:	ucvtf	s2, x10
  4111f8:	ucvtf	s1, x9
  4111fc:	fmul	s0, s0, s2
  411200:	fcmp	s0, s1
  411204:	b.pl	411280 <wcrtomb@plt+0xe8c0>  // b.nfrst
  411208:	mov	x0, x19
  41120c:	bl	410ca4 <wcrtomb@plt+0xe2e4>
  411210:	ldr	x8, [x19, #40]
  411214:	ldp	x10, x9, [x19, #16]
  411218:	ldr	s0, [x8, #8]
  41121c:	ucvtf	s1, x10
  411220:	ucvtf	s2, x9
  411224:	fmul	s3, s0, s1
  411228:	fcmp	s3, s2
  41122c:	b.pl	411280 <wcrtomb@plt+0xe8c0>  // b.nfrst
  411230:	ldr	s2, [x8, #12]
  411234:	ldrb	w8, [x8, #16]
  411238:	fmul	s1, s2, s1
  41123c:	cmp	w8, #0x0
  411240:	fmul	s0, s0, s1
  411244:	mov	w8, #0x5f800000            	// #1602224128
  411248:	fcsel	s0, s0, s1, eq  // eq = none
  41124c:	fmov	s1, w8
  411250:	fcmp	s0, s1
  411254:	b.ge	4112c0 <wcrtomb@plt+0xe900>  // b.tcont
  411258:	fcvtzu	x1, s0
  41125c:	mov	x0, x19
  411260:	bl	410f1c <wcrtomb@plt+0xe55c>
  411264:	tbz	w0, #0, 4112c0 <wcrtomb@plt+0xe900>
  411268:	add	x2, x29, #0x18
  41126c:	mov	x0, x19
  411270:	mov	x1, x20
  411274:	mov	w3, wzr
  411278:	bl	4112f4 <wcrtomb@plt+0xe934>
  41127c:	cbnz	x0, 4112f0 <wcrtomb@plt+0xe930>
  411280:	ldr	x21, [x29, #24]
  411284:	ldr	x8, [x21]
  411288:	cbz	x8, 4112c8 <wcrtomb@plt+0xe908>
  41128c:	mov	x0, x19
  411290:	bl	4113d0 <wcrtomb@plt+0xea10>
  411294:	cbz	x0, 4112c0 <wcrtomb@plt+0xe900>
  411298:	str	x20, [x0]
  41129c:	ldr	x8, [x21, #8]
  4112a0:	str	x8, [x0, #8]
  4112a4:	str	x0, [x21, #8]
  4112a8:	ldr	x8, [x19, #32]
  4112ac:	add	x8, x8, #0x1
  4112b0:	str	x8, [x19, #32]
  4112b4:	b	4112dc <wcrtomb@plt+0xe91c>
  4112b8:	mov	w0, wzr
  4112bc:	b	4112e0 <wcrtomb@plt+0xe920>
  4112c0:	mov	w0, #0xffffffff            	// #-1
  4112c4:	b	4112e0 <wcrtomb@plt+0xe920>
  4112c8:	str	x20, [x21]
  4112cc:	ldp	x9, x8, [x19, #24]
  4112d0:	add	x8, x8, #0x1
  4112d4:	add	x9, x9, #0x1
  4112d8:	stp	x9, x8, [x19, #24]
  4112dc:	mov	w0, #0x1                   	// #1
  4112e0:	ldp	x20, x19, [sp, #32]
  4112e4:	ldr	x21, [sp, #16]
  4112e8:	ldp	x29, x30, [sp], #48
  4112ec:	ret
  4112f0:	bl	4026c0 <abort@plt>
  4112f4:	stp	x29, x30, [sp, #-64]!
  4112f8:	str	x23, [sp, #16]
  4112fc:	stp	x22, x21, [sp, #32]
  411300:	stp	x20, x19, [sp, #48]
  411304:	mov	x29, sp
  411308:	mov	w21, w3
  41130c:	mov	x23, x2
  411310:	mov	x22, x1
  411314:	mov	x19, x0
  411318:	bl	41094c <wcrtomb@plt+0xdf8c>
  41131c:	str	x0, [x23]
  411320:	ldr	x1, [x0]
  411324:	cbz	x1, 41138c <wcrtomb@plt+0xe9cc>
  411328:	mov	x20, x0
  41132c:	cmp	x1, x22
  411330:	b.eq	411344 <wcrtomb@plt+0xe984>  // b.none
  411334:	ldr	x8, [x19, #56]
  411338:	mov	x0, x22
  41133c:	blr	x8
  411340:	tbz	w0, #0, 411360 <wcrtomb@plt+0xe9a0>
  411344:	ldr	x22, [x20]
  411348:	tbz	w21, #0, 4113b8 <wcrtomb@plt+0xe9f8>
  41134c:	ldr	x1, [x20, #8]
  411350:	cbz	x1, 4113b4 <wcrtomb@plt+0xe9f4>
  411354:	ldr	q0, [x1]
  411358:	str	q0, [x20]
  41135c:	b	4113a8 <wcrtomb@plt+0xe9e8>
  411360:	ldr	x8, [x20, #8]!
  411364:	cbz	x8, 41138c <wcrtomb@plt+0xe9cc>
  411368:	ldr	x1, [x8]
  41136c:	cmp	x1, x22
  411370:	b.eq	411394 <wcrtomb@plt+0xe9d4>  // b.none
  411374:	ldr	x8, [x19, #56]
  411378:	mov	x0, x22
  41137c:	blr	x8
  411380:	tbnz	w0, #0, 411394 <wcrtomb@plt+0xe9d4>
  411384:	ldr	x20, [x20]
  411388:	b	411360 <wcrtomb@plt+0xe9a0>
  41138c:	mov	x22, xzr
  411390:	b	4113b8 <wcrtomb@plt+0xe9f8>
  411394:	ldr	x1, [x20]
  411398:	ldr	x22, [x1]
  41139c:	tbz	w21, #0, 4113b8 <wcrtomb@plt+0xe9f8>
  4113a0:	ldr	x8, [x1, #8]
  4113a4:	str	x8, [x20]
  4113a8:	mov	x0, x19
  4113ac:	bl	4115b8 <wcrtomb@plt+0xebf8>
  4113b0:	b	4113b8 <wcrtomb@plt+0xe9f8>
  4113b4:	str	xzr, [x20]
  4113b8:	mov	x0, x22
  4113bc:	ldp	x20, x19, [sp, #48]
  4113c0:	ldp	x22, x21, [sp, #32]
  4113c4:	ldr	x23, [sp, #16]
  4113c8:	ldp	x29, x30, [sp], #64
  4113cc:	ret
  4113d0:	stp	x29, x30, [sp, #-16]!
  4113d4:	mov	x8, x0
  4113d8:	ldr	x0, [x0, #72]
  4113dc:	mov	x29, sp
  4113e0:	cbz	x0, 4113f4 <wcrtomb@plt+0xea34>
  4113e4:	ldr	x9, [x0, #8]
  4113e8:	str	x9, [x8, #72]
  4113ec:	ldp	x29, x30, [sp], #16
  4113f0:	ret
  4113f4:	mov	w0, #0x10                  	// #16
  4113f8:	bl	4024e0 <malloc@plt>
  4113fc:	ldp	x29, x30, [sp], #16
  411400:	ret
  411404:	stp	x29, x30, [sp, #-32]!
  411408:	mov	x29, sp
  41140c:	add	x2, x29, #0x18
  411410:	str	x19, [sp, #16]
  411414:	mov	x19, x1
  411418:	bl	4111a4 <wcrtomb@plt+0xe7e4>
  41141c:	ldr	x8, [x29, #24]
  411420:	cmp	w0, #0x0
  411424:	csel	x8, x8, x19, eq  // eq = none
  411428:	ldr	x19, [sp, #16]
  41142c:	cmn	w0, #0x1
  411430:	csel	x0, xzr, x8, eq  // eq = none
  411434:	ldp	x29, x30, [sp], #32
  411438:	ret
  41143c:	stp	x29, x30, [sp, #-48]!
  411440:	mov	x29, sp
  411444:	add	x2, x29, #0x18
  411448:	mov	w3, #0x1                   	// #1
  41144c:	str	x21, [sp, #16]
  411450:	stp	x20, x19, [sp, #32]
  411454:	mov	x20, x0
  411458:	bl	4112f4 <wcrtomb@plt+0xe934>
  41145c:	mov	x19, x0
  411460:	cbz	x0, 411510 <wcrtomb@plt+0xeb50>
  411464:	ldr	x8, [x20, #32]
  411468:	sub	x8, x8, #0x1
  41146c:	str	x8, [x20, #32]
  411470:	ldr	x8, [x29, #24]
  411474:	ldr	x8, [x8]
  411478:	cbnz	x8, 411510 <wcrtomb@plt+0xeb50>
  41147c:	ldp	x10, x8, [x20, #16]
  411480:	ldr	x9, [x20, #40]
  411484:	sub	x8, x8, #0x1
  411488:	str	x8, [x20, #24]
  41148c:	ldr	s0, [x9]
  411490:	ucvtf	s2, x10
  411494:	ucvtf	s1, x8
  411498:	fmul	s0, s0, s2
  41149c:	fcmp	s0, s1
  4114a0:	b.le	411510 <wcrtomb@plt+0xeb50>
  4114a4:	mov	x0, x20
  4114a8:	bl	410ca4 <wcrtomb@plt+0xe2e4>
  4114ac:	ldr	x8, [x20, #40]
  4114b0:	ldp	x10, x9, [x20, #16]
  4114b4:	ldr	s1, [x8]
  4114b8:	ucvtf	s0, x10
  4114bc:	ucvtf	s2, x9
  4114c0:	fmul	s1, s1, s0
  4114c4:	fcmp	s1, s2
  4114c8:	b.le	411510 <wcrtomb@plt+0xeb50>
  4114cc:	ldr	s1, [x8, #4]
  4114d0:	ldrb	w9, [x8, #16]
  4114d4:	fmul	s0, s1, s0
  4114d8:	cbnz	w9, 4114e4 <wcrtomb@plt+0xeb24>
  4114dc:	ldr	s1, [x8, #8]
  4114e0:	fmul	s0, s0, s1
  4114e4:	fcvtzu	x1, s0
  4114e8:	mov	x0, x20
  4114ec:	bl	410f1c <wcrtomb@plt+0xe55c>
  4114f0:	tbnz	w0, #0, 411510 <wcrtomb@plt+0xeb50>
  4114f4:	ldr	x0, [x20, #72]
  4114f8:	cbz	x0, 41150c <wcrtomb@plt+0xeb4c>
  4114fc:	ldr	x21, [x0, #8]
  411500:	bl	402770 <free@plt>
  411504:	mov	x0, x21
  411508:	cbnz	x21, 4114fc <wcrtomb@plt+0xeb3c>
  41150c:	str	xzr, [x20, #72]
  411510:	mov	x0, x19
  411514:	ldp	x20, x19, [sp, #32]
  411518:	ldr	x21, [sp, #16]
  41151c:	ldp	x29, x30, [sp], #48
  411520:	ret
  411524:	stp	x29, x30, [sp, #-32]!
  411528:	cmp	x0, #0xa
  41152c:	mov	w8, #0xa                   	// #10
  411530:	csel	x8, x0, x8, hi  // hi = pmore
  411534:	str	x19, [sp, #16]
  411538:	orr	x19, x8, #0x1
  41153c:	mov	x29, sp
  411540:	cmn	x19, #0x1
  411544:	b.eq	411560 <wcrtomb@plt+0xeba0>  // b.none
  411548:	mov	x0, x19
  41154c:	bl	411570 <wcrtomb@plt+0xebb0>
  411550:	tbnz	w0, #0, 411560 <wcrtomb@plt+0xeba0>
  411554:	add	x19, x19, #0x2
  411558:	cmn	x19, #0x1
  41155c:	b.ne	411548 <wcrtomb@plt+0xeb88>  // b.any
  411560:	mov	x0, x19
  411564:	ldr	x19, [sp, #16]
  411568:	ldp	x29, x30, [sp], #32
  41156c:	ret
  411570:	mov	w8, #0x3                   	// #3
  411574:	cmp	x0, #0xa
  411578:	b.cc	4115a4 <wcrtomb@plt+0xebe4>  // b.lo, b.ul, b.last
  41157c:	mov	w9, #0x9                   	// #9
  411580:	mov	w10, #0x10                  	// #16
  411584:	udiv	x11, x0, x8
  411588:	msub	x11, x11, x8, x0
  41158c:	cbz	x11, 4115a4 <wcrtomb@plt+0xebe4>
  411590:	add	x9, x10, x9
  411594:	add	x8, x8, #0x2
  411598:	cmp	x9, x0
  41159c:	add	x10, x10, #0x8
  4115a0:	b.cc	411584 <wcrtomb@plt+0xebc4>  // b.lo, b.ul, b.last
  4115a4:	udiv	x9, x0, x8
  4115a8:	msub	x8, x9, x8, x0
  4115ac:	cmp	x8, #0x0
  4115b0:	cset	w0, ne  // ne = any
  4115b4:	ret
  4115b8:	str	xzr, [x1]
  4115bc:	ldr	x8, [x0, #72]
  4115c0:	str	x8, [x1, #8]
  4115c4:	str	x1, [x0, #72]
  4115c8:	ret
  4115cc:	sub	sp, sp, #0xc0
  4115d0:	cmp	x0, x1
  4115d4:	stp	x29, x30, [sp, #128]
  4115d8:	str	x23, [sp, #144]
  4115dc:	stp	x22, x21, [sp, #160]
  4115e0:	stp	x20, x19, [sp, #176]
  4115e4:	add	x29, sp, #0x80
  4115e8:	b.eq	411740 <wcrtomb@plt+0xed80>  // b.none
  4115ec:	mov	x19, x1
  4115f0:	mov	x20, x0
  4115f4:	bl	402780 <__ctype_get_mb_cur_max@plt>
  4115f8:	cmp	x0, #0x1
  4115fc:	b.ls	411748 <wcrtomb@plt+0xed88>  // b.plast
  411600:	str	x20, [sp, #80]
  411604:	mov	w20, #0xffffffff            	// #-1
  411608:	mov	w21, #0x1                   	// #1
  41160c:	strb	wzr, [sp, #64]
  411610:	stur	xzr, [sp, #68]
  411614:	strb	wzr, [sp, #76]
  411618:	str	x19, [sp, #16]
  41161c:	strb	wzr, [sp]
  411620:	stur	xzr, [sp, #4]
  411624:	strb	wzr, [sp, #12]
  411628:	b	411658 <wcrtomb@plt+0xec98>
  41162c:	ldp	x9, x8, [sp, #80]
  411630:	ldp	x11, x10, [sp, #16]
  411634:	mov	w0, w22
  411638:	strb	wzr, [sp, #76]
  41163c:	add	x8, x9, x8
  411640:	add	x9, x11, x10
  411644:	str	x8, [sp, #80]
  411648:	mov	w8, #0x1                   	// #1
  41164c:	strb	wzr, [sp, #12]
  411650:	str	x9, [sp, #16]
  411654:	tbz	w8, #0, 4117e8 <wcrtomb@plt+0xee28>
  411658:	add	x0, sp, #0x40
  41165c:	bl	411800 <wcrtomb@plt+0xee40>
  411660:	ldrb	w8, [sp, #96]
  411664:	cbz	w8, 411670 <wcrtomb@plt+0xecb0>
  411668:	ldr	w8, [sp, #100]
  41166c:	cbz	w8, 4117a4 <wcrtomb@plt+0xede4>
  411670:	mov	x0, sp
  411674:	bl	411800 <wcrtomb@plt+0xee40>
  411678:	ldrb	w8, [sp, #32]
  41167c:	cbz	w8, 411688 <wcrtomb@plt+0xecc8>
  411680:	ldr	w9, [sp, #36]
  411684:	cbz	w9, 4117a4 <wcrtomb@plt+0xede4>
  411688:	ldrb	w9, [sp, #96]
  41168c:	cbz	w9, 4116b8 <wcrtomb@plt+0xecf8>
  411690:	cbz	w8, 4116c8 <wcrtomb@plt+0xed08>
  411694:	ldr	w0, [sp, #100]
  411698:	bl	402970 <towlower@plt>
  41169c:	ldr	w8, [sp, #36]
  4116a0:	mov	w19, w0
  4116a4:	mov	w0, w8
  4116a8:	bl	402970 <towlower@plt>
  4116ac:	sub	w0, w19, w0
  4116b0:	cbnz	w0, 411730 <wcrtomb@plt+0xed70>
  4116b4:	b	41162c <wcrtomb@plt+0xec6c>
  4116b8:	cbz	w8, 4116d4 <wcrtomb@plt+0xed14>
  4116bc:	mov	w0, #0x1                   	// #1
  4116c0:	cbnz	w0, 411730 <wcrtomb@plt+0xed70>
  4116c4:	b	41162c <wcrtomb@plt+0xec6c>
  4116c8:	mov	w0, #0xffffffff            	// #-1
  4116cc:	cbnz	w0, 411730 <wcrtomb@plt+0xed70>
  4116d0:	b	41162c <wcrtomb@plt+0xec6c>
  4116d4:	ldr	x2, [sp, #88]
  4116d8:	ldr	x8, [sp, #24]
  4116dc:	cmp	x2, x8
  4116e0:	b.ne	4116f8 <wcrtomb@plt+0xed38>  // b.any
  4116e4:	ldr	x0, [sp, #80]
  4116e8:	ldr	x1, [sp, #16]
  4116ec:	bl	402720 <memcmp@plt>
  4116f0:	cbnz	w0, 411730 <wcrtomb@plt+0xed70>
  4116f4:	b	41162c <wcrtomb@plt+0xec6c>
  4116f8:	ldr	x0, [sp, #80]
  4116fc:	ldr	x1, [sp, #16]
  411700:	cmp	x2, x8
  411704:	b.cs	41171c <wcrtomb@plt+0xed5c>  // b.hs, b.nlast
  411708:	bl	402720 <memcmp@plt>
  41170c:	cmp	w0, #0x1
  411710:	cneg	w0, w20, ge  // ge = tcont
  411714:	cbnz	w0, 411730 <wcrtomb@plt+0xed70>
  411718:	b	41162c <wcrtomb@plt+0xec6c>
  41171c:	mov	x2, x8
  411720:	bl	402720 <memcmp@plt>
  411724:	cmp	w0, #0x0
  411728:	cneg	w0, w21, lt  // lt = tstop
  41172c:	cbz	w0, 41162c <wcrtomb@plt+0xec6c>
  411730:	mov	w22, w0
  411734:	mov	w8, wzr
  411738:	tbnz	wzr, #0, 411658 <wcrtomb@plt+0xec98>
  41173c:	b	4117e8 <wcrtomb@plt+0xee28>
  411740:	mov	w0, wzr
  411744:	b	4117e8 <wcrtomb@plt+0xee28>
  411748:	bl	402760 <__ctype_b_loc@plt>
  41174c:	ldr	x21, [x0]
  411750:	ldrb	w22, [x20]
  411754:	ldrh	w8, [x21, x22, lsl #1]
  411758:	tbz	w8, #8, 41176c <wcrtomb@plt+0xedac>
  41175c:	bl	402460 <__ctype_tolower_loc@plt>
  411760:	ldr	x8, [x0]
  411764:	lsl	x9, x22, #2
  411768:	ldrb	w22, [x8, x9]
  41176c:	ldrb	w23, [x19]
  411770:	ldrh	w8, [x21, x23, lsl #1]
  411774:	tbz	w8, #8, 411788 <wcrtomb@plt+0xedc8>
  411778:	bl	402460 <__ctype_tolower_loc@plt>
  41177c:	ldr	x8, [x0]
  411780:	lsl	x9, x23, #2
  411784:	ldrb	w23, [x8, x9]
  411788:	cbz	w22, 41179c <wcrtomb@plt+0xeddc>
  41178c:	add	x20, x20, #0x1
  411790:	cmp	w22, w23
  411794:	add	x19, x19, #0x1
  411798:	b.eq	411750 <wcrtomb@plt+0xed90>  // b.none
  41179c:	sub	w0, w22, w23
  4117a0:	b	4117e8 <wcrtomb@plt+0xee28>
  4117a4:	add	x0, sp, #0x40
  4117a8:	bl	411800 <wcrtomb@plt+0xee40>
  4117ac:	ldrb	w8, [sp, #96]
  4117b0:	mov	w0, #0x1                   	// #1
  4117b4:	cbz	w8, 4117e8 <wcrtomb@plt+0xee28>
  4117b8:	ldr	w8, [sp, #100]
  4117bc:	cbnz	w8, 4117e8 <wcrtomb@plt+0xee28>
  4117c0:	mov	x0, sp
  4117c4:	bl	411800 <wcrtomb@plt+0xee40>
  4117c8:	ldrb	w8, [sp, #32]
  4117cc:	ldr	w9, [sp, #36]
  4117d0:	cmp	w8, #0x0
  4117d4:	cset	w8, eq  // eq = none
  4117d8:	cmp	w9, #0x0
  4117dc:	cset	w9, ne  // ne = any
  4117e0:	orr	w8, w8, w9
  4117e4:	sbfx	w0, w8, #0, #1
  4117e8:	ldp	x20, x19, [sp, #176]
  4117ec:	ldp	x22, x21, [sp, #160]
  4117f0:	ldr	x23, [sp, #144]
  4117f4:	ldp	x29, x30, [sp, #128]
  4117f8:	add	sp, sp, #0xc0
  4117fc:	ret
  411800:	stp	x29, x30, [sp, #-48]!
  411804:	stp	x22, x21, [sp, #16]
  411808:	stp	x20, x19, [sp, #32]
  41180c:	ldrb	w8, [x0, #12]
  411810:	mov	x29, sp
  411814:	cbnz	w8, 411908 <wcrtomb@plt+0xef48>
  411818:	ldrb	w8, [x0]
  41181c:	mov	x19, x0
  411820:	cbnz	w8, 411864 <wcrtomb@plt+0xeea4>
  411824:	ldr	x8, [x19, #16]
  411828:	ldrb	w0, [x8]
  41182c:	bl	42336c <_obstack_memory_used@@Base+0xcf38>
  411830:	tbz	w0, #0, 411850 <wcrtomb@plt+0xee90>
  411834:	ldr	x8, [x19, #16]
  411838:	mov	w9, #0x1                   	// #1
  41183c:	str	x9, [x19, #24]
  411840:	ldrb	w8, [x8]
  411844:	strb	w9, [x19, #32]
  411848:	str	w8, [x19, #36]
  41184c:	b	411900 <wcrtomb@plt+0xef40>
  411850:	add	x0, x19, #0x4
  411854:	bl	4026e0 <mbsinit@plt>
  411858:	cbz	w0, 411918 <wcrtomb@plt+0xef58>
  41185c:	mov	w8, #0x1                   	// #1
  411860:	strb	w8, [x19]
  411864:	ldr	x22, [x19, #16]
  411868:	add	x21, x19, #0x24
  41186c:	bl	402780 <__ctype_get_mb_cur_max@plt>
  411870:	mov	x1, x0
  411874:	mov	x0, x22
  411878:	bl	4135f4 <wcrtomb@plt+0x10c34>
  41187c:	add	x20, x19, #0x4
  411880:	mov	x2, x0
  411884:	mov	x0, x21
  411888:	mov	x1, x22
  41188c:	mov	x3, x20
  411890:	bl	41609c <wcrtomb@plt+0x136dc>
  411894:	cmn	x0, #0x2
  411898:	str	x0, [x19, #24]
  41189c:	b.eq	4118f0 <wcrtomb@plt+0xef30>  // b.none
  4118a0:	cbz	x0, 4118b8 <wcrtomb@plt+0xeef8>
  4118a4:	cmn	x0, #0x1
  4118a8:	b.ne	4118d4 <wcrtomb@plt+0xef14>  // b.any
  4118ac:	mov	w8, #0x1                   	// #1
  4118b0:	str	x8, [x19, #24]
  4118b4:	b	4118fc <wcrtomb@plt+0xef3c>
  4118b8:	ldr	x8, [x19, #16]
  4118bc:	mov	w9, #0x1                   	// #1
  4118c0:	str	x9, [x19, #24]
  4118c4:	ldrb	w8, [x8]
  4118c8:	cbnz	w8, 411938 <wcrtomb@plt+0xef78>
  4118cc:	ldr	w8, [x21]
  4118d0:	cbnz	w8, 411958 <wcrtomb@plt+0xef98>
  4118d4:	mov	w8, #0x1                   	// #1
  4118d8:	mov	x0, x20
  4118dc:	strb	w8, [x19, #32]
  4118e0:	bl	4026e0 <mbsinit@plt>
  4118e4:	cbz	w0, 411900 <wcrtomb@plt+0xef40>
  4118e8:	strb	wzr, [x19]
  4118ec:	b	411900 <wcrtomb@plt+0xef40>
  4118f0:	ldr	x0, [x19, #16]
  4118f4:	bl	402380 <strlen@plt>
  4118f8:	str	x0, [x19, #24]
  4118fc:	strb	wzr, [x19, #32]
  411900:	mov	w8, #0x1                   	// #1
  411904:	strb	w8, [x19, #12]
  411908:	ldp	x20, x19, [sp, #32]
  41190c:	ldp	x22, x21, [sp, #16]
  411910:	ldp	x29, x30, [sp], #48
  411914:	ret
  411918:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  41191c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  411920:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  411924:	add	x0, x0, #0xfd6
  411928:	add	x1, x1, #0xfed
  41192c:	add	x3, x3, #0xff9
  411930:	mov	w2, #0x96                  	// #150
  411934:	bl	402920 <__assert_fail@plt>
  411938:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41193c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  411940:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  411944:	add	x0, x0, #0x29
  411948:	add	x1, x1, #0xfed
  41194c:	add	x3, x3, #0xff9
  411950:	mov	w2, #0xb2                  	// #178
  411954:	bl	402920 <__assert_fail@plt>
  411958:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41195c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  411960:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  411964:	add	x0, x0, #0x40
  411968:	add	x1, x1, #0xfed
  41196c:	add	x3, x3, #0xff9
  411970:	mov	w2, #0xb3                  	// #179
  411974:	bl	402920 <__assert_fail@plt>
  411978:	ldr	x8, [x0, #16]
  41197c:	add	x8, x8, x1
  411980:	str	x8, [x0, #16]
  411984:	ret
  411988:	stp	x29, x30, [sp, #-16]!
  41198c:	ldrb	w8, [x1]
  411990:	mov	x29, sp
  411994:	strb	w8, [x0]
  411998:	cbz	w8, 4119a8 <wcrtomb@plt+0xefe8>
  41199c:	ldur	x8, [x1, #4]
  4119a0:	stur	x8, [x0, #4]
  4119a4:	b	4119ac <wcrtomb@plt+0xefec>
  4119a8:	stur	xzr, [x0, #4]
  4119ac:	ldrb	w9, [x1, #12]
  4119b0:	add	x8, x0, #0x10
  4119b4:	add	x1, x1, #0x10
  4119b8:	strb	w9, [x0, #12]
  4119bc:	mov	x0, x8
  4119c0:	bl	423308 <_obstack_memory_used@@Base+0xced4>
  4119c4:	ldp	x29, x30, [sp], #16
  4119c8:	ret
  4119cc:	stp	x29, x30, [sp, #-16]!
  4119d0:	and	w1, w1, #0xff
  4119d4:	and	w8, w2, #0xff
  4119d8:	cmp	w1, w8
  4119dc:	mov	x29, sp
  4119e0:	b.ne	4119f4 <wcrtomb@plt+0xf034>  // b.any
  4119e4:	mov	x2, x3
  4119e8:	bl	402820 <memchr@plt>
  4119ec:	ldp	x29, x30, [sp], #16
  4119f0:	ret
  4119f4:	cbz	x3, 411a20 <wcrtomb@plt+0xf060>
  4119f8:	and	x9, x0, #0x7
  4119fc:	cbz	x9, 411a20 <wcrtomb@plt+0xf060>
  411a00:	ldrb	w9, [x0]
  411a04:	cmp	w1, w9
  411a08:	b.eq	411ab0 <wcrtomb@plt+0xf0f0>  // b.none
  411a0c:	cmp	w8, w9
  411a10:	b.eq	411ab0 <wcrtomb@plt+0xf0f0>  // b.none
  411a14:	subs	x3, x3, #0x1
  411a18:	add	x0, x0, #0x1
  411a1c:	b.ne	4119f8 <wcrtomb@plt+0xf038>  // b.any
  411a20:	mov	w10, w1
  411a24:	mov	w11, w8
  411a28:	bfi	w10, w10, #8, #8
  411a2c:	bfi	w11, w11, #8, #8
  411a30:	mov	x9, #0xfefefefefefefefe    	// #-72340172838076674
  411a34:	bfi	x10, x10, #16, #16
  411a38:	bfi	x11, x11, #16, #16
  411a3c:	movk	x9, #0xfeff
  411a40:	bfi	x10, x10, #32, #32
  411a44:	bfi	x11, x11, #32, #32
  411a48:	subs	x12, x3, #0x8
  411a4c:	b.cc	411a88 <wcrtomb@plt+0xf0c8>  // b.lo, b.ul, b.last
  411a50:	mov	x13, x0
  411a54:	ldr	x14, [x13], #8
  411a58:	eor	x15, x14, x10
  411a5c:	eor	x14, x14, x11
  411a60:	add	x16, x15, x9
  411a64:	add	x17, x14, x9
  411a68:	bic	x15, x16, x15
  411a6c:	bic	x14, x17, x14
  411a70:	orr	x14, x15, x14
  411a74:	tst	x14, #0x8080808080808080
  411a78:	and	x15, x14, #0x8080808080808080
  411a7c:	csel	x0, x13, x0, eq  // eq = none
  411a80:	csel	x3, x12, x3, eq  // eq = none
  411a84:	cbz	x15, 411a48 <wcrtomb@plt+0xf088>
  411a88:	cbz	x3, 411aac <wcrtomb@plt+0xf0ec>
  411a8c:	ldrb	w9, [x0]
  411a90:	cmp	w1, w9
  411a94:	b.eq	411ab0 <wcrtomb@plt+0xf0f0>  // b.none
  411a98:	cmp	w8, w9
  411a9c:	b.eq	411ab0 <wcrtomb@plt+0xf0f0>  // b.none
  411aa0:	subs	x3, x3, #0x1
  411aa4:	add	x0, x0, #0x1
  411aa8:	b.ne	411a8c <wcrtomb@plt+0xf0cc>  // b.any
  411aac:	mov	x0, xzr
  411ab0:	ldp	x29, x30, [sp], #16
  411ab4:	ret
  411ab8:	sub	sp, sp, #0xe0
  411abc:	stp	x29, x30, [sp, #208]
  411ac0:	add	x29, sp, #0xd0
  411ac4:	stp	x3, x4, [x29, #-72]
  411ac8:	stp	x5, x6, [x29, #-56]
  411acc:	stur	x7, [x29, #-40]
  411ad0:	stp	q1, q2, [sp, #16]
  411ad4:	stp	q3, q4, [sp, #48]
  411ad8:	str	q0, [sp]
  411adc:	stp	q5, q6, [sp, #80]
  411ae0:	str	q7, [sp, #112]
  411ae4:	tbnz	w2, #6, 411af0 <wcrtomb@plt+0xf130>
  411ae8:	mov	w3, wzr
  411aec:	b	411b3c <wcrtomb@plt+0xf17c>
  411af0:	mov	x9, #0xffffffffffffffd8    	// #-40
  411af4:	mov	x11, sp
  411af8:	sub	x12, x29, #0x48
  411afc:	movk	x9, #0xff80, lsl #32
  411b00:	add	x10, x29, #0x10
  411b04:	mov	x8, #0xffffffffffffffd8    	// #-40
  411b08:	add	x11, x11, #0x80
  411b0c:	add	x12, x12, #0x28
  411b10:	stp	x11, x9, [x29, #-16]
  411b14:	stp	x10, x12, [x29, #-32]
  411b18:	tbz	w8, #31, 411b2c <wcrtomb@plt+0xf16c>
  411b1c:	add	w9, w8, #0x8
  411b20:	cmp	w9, #0x0
  411b24:	stur	w9, [x29, #-8]
  411b28:	b.le	411b50 <wcrtomb@plt+0xf190>
  411b2c:	ldur	x8, [x29, #-32]
  411b30:	add	x9, x8, #0x8
  411b34:	stur	x9, [x29, #-32]
  411b38:	ldr	w3, [x8]
  411b3c:	bl	402900 <openat@plt>
  411b40:	bl	41362c <wcrtomb@plt+0x10c6c>
  411b44:	ldp	x29, x30, [sp, #208]
  411b48:	add	sp, sp, #0xe0
  411b4c:	ret
  411b50:	ldur	x9, [x29, #-24]
  411b54:	add	x8, x9, x8
  411b58:	b	411b38 <wcrtomb@plt+0xf178>
  411b5c:	stp	x29, x30, [sp, #-48]!
  411b60:	str	x21, [sp, #16]
  411b64:	stp	x20, x19, [sp, #32]
  411b68:	mov	x29, sp
  411b6c:	mov	x19, x0
  411b70:	bl	402930 <__errno_location@plt>
  411b74:	ldr	w21, [x0]
  411b78:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411b7c:	add	x8, x8, #0x790
  411b80:	cmp	x19, #0x0
  411b84:	mov	x20, x0
  411b88:	csel	x0, x8, x19, eq  // eq = none
  411b8c:	mov	w1, #0x38                  	// #56
  411b90:	bl	413c60 <wcrtomb@plt+0x112a0>
  411b94:	str	w21, [x20]
  411b98:	ldp	x20, x19, [sp, #32]
  411b9c:	ldr	x21, [sp, #16]
  411ba0:	ldp	x29, x30, [sp], #48
  411ba4:	ret
  411ba8:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411bac:	add	x8, x8, #0x790
  411bb0:	cmp	x0, #0x0
  411bb4:	csel	x8, x8, x0, eq  // eq = none
  411bb8:	ldr	w0, [x8]
  411bbc:	ret
  411bc0:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411bc4:	add	x8, x8, #0x790
  411bc8:	cmp	x0, #0x0
  411bcc:	csel	x8, x8, x0, eq  // eq = none
  411bd0:	str	w1, [x8]
  411bd4:	ret
  411bd8:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411bdc:	add	x8, x8, #0x790
  411be0:	cmp	x0, #0x0
  411be4:	ubfx	w9, w1, #5, #3
  411be8:	csel	x8, x8, x0, eq  // eq = none
  411bec:	add	x8, x8, w9, uxtw #2
  411bf0:	ldr	w9, [x8, #8]
  411bf4:	lsr	w10, w9, w1
  411bf8:	and	w0, w10, #0x1
  411bfc:	and	w10, w2, #0x1
  411c00:	eor	w10, w0, w10
  411c04:	lsl	w10, w10, w1
  411c08:	eor	w9, w10, w9
  411c0c:	str	w9, [x8, #8]
  411c10:	ret
  411c14:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411c18:	add	x8, x8, #0x790
  411c1c:	cmp	x0, #0x0
  411c20:	csel	x8, x8, x0, eq  // eq = none
  411c24:	ldr	w0, [x8, #4]
  411c28:	str	w1, [x8, #4]
  411c2c:	ret
  411c30:	stp	x29, x30, [sp, #-16]!
  411c34:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411c38:	add	x8, x8, #0x790
  411c3c:	cmp	x0, #0x0
  411c40:	csel	x8, x8, x0, eq  // eq = none
  411c44:	mov	w9, #0xa                   	// #10
  411c48:	mov	x29, sp
  411c4c:	str	w9, [x8]
  411c50:	cbz	x1, 411c64 <wcrtomb@plt+0xf2a4>
  411c54:	cbz	x2, 411c64 <wcrtomb@plt+0xf2a4>
  411c58:	stp	x1, x2, [x8, #40]
  411c5c:	ldp	x29, x30, [sp], #16
  411c60:	ret
  411c64:	bl	4026c0 <abort@plt>
  411c68:	sub	sp, sp, #0x60
  411c6c:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  411c70:	add	x8, x8, #0x790
  411c74:	cmp	x4, #0x0
  411c78:	stp	x29, x30, [sp, #16]
  411c7c:	str	x25, [sp, #32]
  411c80:	stp	x24, x23, [sp, #48]
  411c84:	stp	x22, x21, [sp, #64]
  411c88:	stp	x20, x19, [sp, #80]
  411c8c:	add	x29, sp, #0x10
  411c90:	mov	x19, x3
  411c94:	mov	x20, x2
  411c98:	mov	x21, x1
  411c9c:	mov	x22, x0
  411ca0:	csel	x24, x8, x4, eq  // eq = none
  411ca4:	bl	402930 <__errno_location@plt>
  411ca8:	ldp	w4, w5, [x24]
  411cac:	ldp	x7, x8, [x24, #40]
  411cb0:	ldr	w25, [x0]
  411cb4:	mov	x23, x0
  411cb8:	add	x6, x24, #0x8
  411cbc:	mov	x0, x22
  411cc0:	mov	x1, x21
  411cc4:	mov	x2, x20
  411cc8:	mov	x3, x19
  411ccc:	str	x8, [sp]
  411cd0:	bl	411cf4 <wcrtomb@plt+0xf334>
  411cd4:	str	w25, [x23]
  411cd8:	ldp	x20, x19, [sp, #80]
  411cdc:	ldp	x22, x21, [sp, #64]
  411ce0:	ldp	x24, x23, [sp, #48]
  411ce4:	ldr	x25, [sp, #32]
  411ce8:	ldp	x29, x30, [sp, #16]
  411cec:	add	sp, sp, #0x60
  411cf0:	ret
  411cf4:	sub	sp, sp, #0x120
  411cf8:	stp	x29, x30, [sp, #192]
  411cfc:	add	x29, sp, #0xc0
  411d00:	ldr	x8, [x29, #96]
  411d04:	stp	x28, x27, [sp, #208]
  411d08:	stp	x26, x25, [sp, #224]
  411d0c:	stp	x24, x23, [sp, #240]
  411d10:	stp	x22, x21, [sp, #256]
  411d14:	stp	x20, x19, [sp, #272]
  411d18:	str	x7, [sp, #80]
  411d1c:	stur	x6, [x29, #-48]
  411d20:	mov	w19, w5
  411d24:	mov	w20, w4
  411d28:	mov	x23, x3
  411d2c:	mov	x21, x2
  411d30:	mov	x27, x1
  411d34:	str	x8, [sp, #96]
  411d38:	mov	x24, x0
  411d3c:	bl	402780 <__ctype_get_mb_cur_max@plt>
  411d40:	mov	w1, w20
  411d44:	mov	x22, xzr
  411d48:	mov	w8, wzr
  411d4c:	mov	w28, wzr
  411d50:	str	w19, [sp, #64]
  411d54:	ubfx	w19, w19, #1, #1
  411d58:	add	x9, x21, #0x1
  411d5c:	mov	w15, #0x1                   	// #1
  411d60:	str	x0, [sp, #56]
  411d64:	stur	xzr, [x29, #-80]
  411d68:	stur	xzr, [x29, #-56]
  411d6c:	str	wzr, [sp, #88]
  411d70:	stur	x9, [x29, #-72]
  411d74:	cmp	w1, #0xa
  411d78:	b.hi	41294c <wcrtomb@plt+0xff8c>  // b.pmore
  411d7c:	adrp	x12, 426000 <_obstack_memory_used@@Base+0xfbcc>
  411d80:	mov	w9, w1
  411d84:	add	x12, x12, #0xd0
  411d88:	adr	x10, 411dac <wcrtomb@plt+0xf3ec>
  411d8c:	ldrb	w11, [x12, x9]
  411d90:	add	x10, x10, x11, lsl #2
  411d94:	mov	x26, x27
  411d98:	mov	x20, xzr
  411d9c:	mov	w16, wzr
  411da0:	mov	w9, #0x1                   	// #1
  411da4:	mov	w27, w28
  411da8:	br	x10
  411dac:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  411db0:	add	x0, x0, #0x22c
  411db4:	mov	w20, w1
  411db8:	mov	w22, w15
  411dbc:	bl	413064 <wcrtomb@plt+0x106a4>
  411dc0:	str	x0, [sp, #80]
  411dc4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  411dc8:	add	x0, x0, #0x3e
  411dcc:	mov	w1, w20
  411dd0:	bl	413064 <wcrtomb@plt+0x106a4>
  411dd4:	mov	w15, w22
  411dd8:	mov	w1, w20
  411ddc:	str	x0, [sp, #96]
  411de0:	stur	w1, [x29, #-28]
  411de4:	tbnz	w19, #0, 411e24 <wcrtomb@plt+0xf464>
  411de8:	ldr	x8, [sp, #80]
  411dec:	ldrb	w9, [x8]
  411df0:	cbz	w9, 411e24 <wcrtomb@plt+0xf464>
  411df4:	mov	w27, w15
  411df8:	mov	x10, xzr
  411dfc:	add	x8, x8, #0x1
  411e00:	b	411e14 <wcrtomb@plt+0xf454>
  411e04:	ldrb	w9, [x8, x10]
  411e08:	add	x20, x10, #0x1
  411e0c:	mov	x10, x20
  411e10:	cbz	w9, 411e2c <wcrtomb@plt+0xf46c>
  411e14:	cmp	x10, x26
  411e18:	b.cs	411e04 <wcrtomb@plt+0xf444>  // b.hs, b.nlast
  411e1c:	strb	w9, [x24, x10]
  411e20:	b	411e04 <wcrtomb@plt+0xf444>
  411e24:	mov	w27, w15
  411e28:	mov	x20, xzr
  411e2c:	ldr	x25, [sp, #96]
  411e30:	mov	x0, x25
  411e34:	bl	402380 <strlen@plt>
  411e38:	ldur	w1, [x29, #-28]
  411e3c:	mov	x22, x0
  411e40:	stur	x25, [x29, #-56]
  411e44:	mov	w9, #0x1                   	// #1
  411e48:	mov	w16, w19
  411e4c:	mov	w15, w27
  411e50:	mov	w27, w28
  411e54:	b	411f00 <wcrtomb@plt+0xf540>
  411e58:	mov	w19, #0x1                   	// #1
  411e5c:	mov	w1, #0x5                   	// #5
  411e60:	tbz	w19, #0, 411e8c <wcrtomb@plt+0xf4cc>
  411e64:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  411e68:	mov	x20, xzr
  411e6c:	mov	w22, #0x1                   	// #1
  411e70:	add	x8, x8, #0xd8c
  411e74:	stur	x8, [x29, #-56]
  411e78:	b	411eac <wcrtomb@plt+0xf4ec>
  411e7c:	mov	x20, xzr
  411e80:	mov	w16, wzr
  411e84:	mov	w9, w8
  411e88:	b	411f00 <wcrtomb@plt+0xf540>
  411e8c:	cbz	x26, 411e98 <wcrtomb@plt+0xf4d8>
  411e90:	mov	w8, #0x22                  	// #34
  411e94:	strb	w8, [x24]
  411e98:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  411e9c:	add	x8, x8, #0xd8c
  411ea0:	mov	w20, #0x1                   	// #1
  411ea4:	stur	x8, [x29, #-56]
  411ea8:	mov	w22, #0x1                   	// #1
  411eac:	mov	w9, #0x1                   	// #1
  411eb0:	b	411efc <wcrtomb@plt+0xf53c>
  411eb4:	mov	w8, #0x1                   	// #1
  411eb8:	mov	w19, #0x1                   	// #1
  411ebc:	eor	w9, w19, #0x1
  411ec0:	orr	w8, w8, w9
  411ec4:	tbz	w19, #0, 411ed4 <wcrtomb@plt+0xf514>
  411ec8:	mov	x20, xzr
  411ecc:	mov	w1, #0x2                   	// #2
  411ed0:	b	411ee8 <wcrtomb@plt+0xf528>
  411ed4:	cbz	x26, 411ee0 <wcrtomb@plt+0xf520>
  411ed8:	mov	w9, #0x27                  	// #39
  411edc:	strb	w9, [x24]
  411ee0:	mov	w1, #0x2                   	// #2
  411ee4:	mov	w20, #0x1                   	// #1
  411ee8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  411eec:	add	x9, x9, #0x3e
  411ef0:	stur	x9, [x29, #-56]
  411ef4:	mov	w22, #0x1                   	// #1
  411ef8:	mov	w9, w8
  411efc:	mov	w16, w19
  411f00:	ldur	x8, [x29, #-48]
  411f04:	mov	w14, w9
  411f08:	eor	w17, w16, #0x1
  411f0c:	stur	w17, [x29, #-60]
  411f10:	cmp	x8, #0x0
  411f14:	cset	w8, eq  // eq = none
  411f18:	cmp	x22, #0x0
  411f1c:	cset	w9, ne  // ne = any
  411f20:	cmp	w1, #0x2
  411f24:	cset	w10, ne  // ne = any
  411f28:	and	w13, w10, w14
  411f2c:	and	w11, w9, w16
  411f30:	orr	w10, w10, w17
  411f34:	and	w17, w9, w13
  411f38:	orr	w9, w13, w16
  411f3c:	eor	w9, w9, #0x1
  411f40:	cset	w12, eq  // eq = none
  411f44:	orr	w8, w8, w9
  411f48:	mov	x25, xzr
  411f4c:	and	w11, w14, w11
  411f50:	stur	w10, [x29, #-84]
  411f54:	and	w10, w12, w16
  411f58:	stur	w8, [x29, #-24]
  411f5c:	eor	w8, w14, #0x1
  411f60:	str	w11, [sp, #72]
  411f64:	str	w10, [sp, #92]
  411f68:	stur	w14, [x29, #-64]
  411f6c:	str	w8, [sp, #76]
  411f70:	stp	w16, w1, [x29, #-32]
  411f74:	stur	w17, [x29, #-36]
  411f78:	b	411f80 <wcrtomb@plt+0xf5c0>
  411f7c:	add	x25, x25, #0x1
  411f80:	cmn	x23, #0x1
  411f84:	b.eq	411f98 <wcrtomb@plt+0xf5d8>  // b.none
  411f88:	cmp	x25, x23
  411f8c:	cset	w8, eq  // eq = none
  411f90:	tbz	w8, #0, 411fa8 <wcrtomb@plt+0xf5e8>
  411f94:	b	4127fc <wcrtomb@plt+0xfe3c>
  411f98:	ldrb	w8, [x21, x25]
  411f9c:	cmp	w8, #0x0
  411fa0:	cset	w8, eq  // eq = none
  411fa4:	tbnz	w8, #0, 4127fc <wcrtomb@plt+0xfe3c>
  411fa8:	cbz	w17, 411fe4 <wcrtomb@plt+0xf624>
  411fac:	cmp	x22, #0x2
  411fb0:	add	x19, x25, x22
  411fb4:	b.cc	411fdc <wcrtomb@plt+0xf61c>  // b.lo, b.ul, b.last
  411fb8:	cmn	x23, #0x1
  411fbc:	b.ne	411fdc <wcrtomb@plt+0xf61c>  // b.any
  411fc0:	mov	x0, x21
  411fc4:	mov	w23, w15
  411fc8:	bl	402380 <strlen@plt>
  411fcc:	ldp	w17, w16, [x29, #-36]
  411fd0:	ldur	w1, [x29, #-28]
  411fd4:	mov	w15, w23
  411fd8:	mov	x23, x0
  411fdc:	cmp	x19, x23
  411fe0:	b.ls	412120 <wcrtomb@plt+0xf760>  // b.plast
  411fe4:	mov	w28, wzr
  411fe8:	ldrb	w19, [x21, x25]
  411fec:	cmp	w19, #0x7e
  411ff0:	b.hi	412254 <wcrtomb@plt+0xf894>  // b.pmore
  411ff4:	adrp	x14, 426000 <_obstack_memory_used@@Base+0xfbcc>
  411ff8:	add	x14, x14, #0xdb
  411ffc:	adr	x13, 412020 <wcrtomb@plt+0xf660>
  412000:	ldrb	w10, [x14, x19]
  412004:	add	x13, x13, x10, lsl #2
  412008:	mov	w11, wzr
  41200c:	mov	w9, wzr
  412010:	mov	w8, #0x1                   	// #1
  412014:	mov	w12, #0x6e                  	// #110
  412018:	mov	w10, #0x61                  	// #97
  41201c:	br	x13
  412020:	ldur	w10, [x29, #-24]
  412024:	tbnz	w10, #0, 412044 <wcrtomb@plt+0xf684>
  412028:	ldur	x11, [x29, #-48]
  41202c:	ubfx	w10, w19, #5, #3
  412030:	ldr	w10, [x11, w10, uxtw #2]
  412034:	lsr	w10, w10, w19
  412038:	tbz	w10, #0, 412044 <wcrtomb@plt+0xf684>
  41203c:	mov	w10, w19
  412040:	b	41204c <wcrtomb@plt+0xf68c>
  412044:	mov	w10, w19
  412048:	tbz	w28, #0, 4120c4 <wcrtomb@plt+0xf704>
  41204c:	tbz	w16, #0, 412058 <wcrtomb@plt+0xf698>
  412050:	mov	w10, #0x10                  	// #16
  412054:	b	412110 <wcrtomb@plt+0xf750>
  412058:	cmp	w1, #0x2
  41205c:	cset	w9, ne  // ne = any
  412060:	orr	w9, w9, w27
  412064:	tbnz	w9, #0, 4120a8 <wcrtomb@plt+0xf6e8>
  412068:	cmp	x20, x26
  41206c:	b.cs	412078 <wcrtomb@plt+0xf6b8>  // b.hs, b.nlast
  412070:	mov	w9, #0x27                  	// #39
  412074:	strb	w9, [x24, x20]
  412078:	add	x9, x20, #0x1
  41207c:	cmp	x9, x26
  412080:	b.cs	41208c <wcrtomb@plt+0xf6cc>  // b.hs, b.nlast
  412084:	mov	w11, #0x24                  	// #36
  412088:	strb	w11, [x24, x9]
  41208c:	add	x9, x20, #0x2
  412090:	cmp	x9, x26
  412094:	b.cs	4120a0 <wcrtomb@plt+0xf6e0>  // b.hs, b.nlast
  412098:	mov	w11, #0x27                  	// #39
  41209c:	strb	w11, [x24, x9]
  4120a0:	add	x20, x20, #0x3
  4120a4:	mov	w27, #0x1                   	// #1
  4120a8:	cmp	x20, x26
  4120ac:	b.cs	4120b8 <wcrtomb@plt+0xf6f8>  // b.hs, b.nlast
  4120b0:	mov	w9, #0x5c                  	// #92
  4120b4:	strb	w9, [x24, x20]
  4120b8:	add	x20, x20, #0x1
  4120bc:	mov	w9, #0x1                   	// #1
  4120c0:	mov	w19, w10
  4120c4:	tbnz	w9, #0, 4120f8 <wcrtomb@plt+0xf738>
  4120c8:	tbz	w27, #0, 4120f8 <wcrtomb@plt+0xf738>
  4120cc:	cmp	x20, x26
  4120d0:	b.cs	4120dc <wcrtomb@plt+0xf71c>  // b.hs, b.nlast
  4120d4:	mov	w9, #0x27                  	// #39
  4120d8:	strb	w9, [x24, x20]
  4120dc:	add	x9, x20, #0x1
  4120e0:	cmp	x9, x26
  4120e4:	b.cs	4120f0 <wcrtomb@plt+0xf730>  // b.hs, b.nlast
  4120e8:	mov	w10, #0x27                  	// #39
  4120ec:	strb	w10, [x24, x9]
  4120f0:	mov	w27, wzr
  4120f4:	add	x20, x20, #0x2
  4120f8:	cmp	x20, x26
  4120fc:	b.cs	412104 <wcrtomb@plt+0xf744>  // b.hs, b.nlast
  412100:	strb	w19, [x24, x20]
  412104:	mov	w10, wzr
  412108:	add	x20, x20, #0x1
  41210c:	and	w15, w15, w8
  412110:	cbz	w10, 411f7c <wcrtomb@plt+0xf5bc>
  412114:	cmp	w10, #0xf
  412118:	b.eq	411f7c <wcrtomb@plt+0xf5bc>  // b.none
  41211c:	b	412880 <wcrtomb@plt+0xfec0>
  412120:	ldur	x1, [x29, #-56]
  412124:	add	x0, x21, x25
  412128:	mov	x2, x22
  41212c:	mov	w19, w15
  412130:	bl	4025e0 <bcmp@plt>
  412134:	ldur	w9, [x29, #-60]
  412138:	cmp	w0, #0x0
  41213c:	cset	w8, ne  // ne = any
  412140:	cset	w28, eq  // eq = none
  412144:	orr	w8, w8, w9
  412148:	tbz	w8, #0, 41215c <wcrtomb@plt+0xf79c>
  41214c:	ldp	w16, w1, [x29, #-32]
  412150:	ldur	w17, [x29, #-36]
  412154:	mov	w15, w19
  412158:	b	411fe8 <wcrtomb@plt+0xf628>
  41215c:	ldp	w16, w1, [x29, #-32]
  412160:	ldur	w17, [x29, #-36]
  412164:	mov	w10, #0x10                  	// #16
  412168:	mov	w15, w19
  41216c:	b	412110 <wcrtomb@plt+0xf750>
  412170:	cmp	x23, #0x1
  412174:	b.eq	412198 <wcrtomb@plt+0xf7d8>  // b.none
  412178:	cmn	x23, #0x1
  41217c:	b.ne	41219c <wcrtomb@plt+0xf7dc>  // b.any
  412180:	ldrb	w8, [x21, #1]
  412184:	cbz	w8, 412198 <wcrtomb@plt+0xf7d8>
  412188:	mov	w9, wzr
  41218c:	mov	w8, wzr
  412190:	mov	x23, #0xffffffffffffffff    	// #-1
  412194:	b	412020 <wcrtomb@plt+0xf660>
  412198:	cbz	x25, 4121a8 <wcrtomb@plt+0xf7e8>
  41219c:	mov	w9, wzr
  4121a0:	mov	w8, wzr
  4121a4:	b	412020 <wcrtomb@plt+0xf660>
  4121a8:	mov	w11, #0x1                   	// #1
  4121ac:	cmp	w1, #0x2
  4121b0:	b.ne	4121b8 <wcrtomb@plt+0xf7f8>  // b.any
  4121b4:	tbnz	w16, #0, 412050 <wcrtomb@plt+0xf690>
  4121b8:	mov	w9, wzr
  4121bc:	mov	w8, w11
  4121c0:	b	412020 <wcrtomb@plt+0xf660>
  4121c4:	cmp	w1, #0x2
  4121c8:	b.ne	412284 <wcrtomb@plt+0xf8c4>  // b.any
  4121cc:	tbnz	w16, #0, 412050 <wcrtomb@plt+0xf690>
  4121d0:	b	412290 <wcrtomb@plt+0xf8d0>
  4121d4:	mov	w10, #0x66                  	// #102
  4121d8:	b	4122a8 <wcrtomb@plt+0xf8e8>
  4121dc:	mov	w12, #0x74                  	// #116
  4121e0:	b	41229c <wcrtomb@plt+0xf8dc>
  4121e4:	mov	w10, #0x62                  	// #98
  4121e8:	b	4122a8 <wcrtomb@plt+0xf8e8>
  4121ec:	mov	w12, #0x72                  	// #114
  4121f0:	b	41229c <wcrtomb@plt+0xf8dc>
  4121f4:	ldur	w8, [x29, #-64]
  4121f8:	tbz	w8, #0, 4122bc <wcrtomb@plt+0xf8fc>
  4121fc:	tbnz	w16, #0, 412050 <wcrtomb@plt+0xf690>
  412200:	cmp	w1, #0x2
  412204:	cset	w8, ne  // ne = any
  412208:	orr	w8, w8, w27
  41220c:	tbz	w8, #0, 41271c <wcrtomb@plt+0xfd5c>
  412210:	mov	x9, x20
  412214:	b	41275c <wcrtomb@plt+0xfd9c>
  412218:	cmp	w1, #0x5
  41221c:	b.eq	412438 <wcrtomb@plt+0xfa78>  // b.none
  412220:	cmp	w1, #0x2
  412224:	b.ne	41219c <wcrtomb@plt+0xf7dc>  // b.any
  412228:	tbz	w16, #0, 41219c <wcrtomb@plt+0xf7dc>
  41222c:	b	412050 <wcrtomb@plt+0xf690>
  412230:	mov	w10, #0x76                  	// #118
  412234:	b	4122a8 <wcrtomb@plt+0xf8e8>
  412238:	cmp	w1, #0x2
  41223c:	b.ne	4122cc <wcrtomb@plt+0xf90c>  // b.any
  412240:	tbz	w16, #0, 41251c <wcrtomb@plt+0xfb5c>
  412244:	mov	w8, #0x1                   	// #1
  412248:	mov	w10, #0x10                  	// #16
  41224c:	str	w8, [sp, #88]
  412250:	b	412110 <wcrtomb@plt+0xf750>
  412254:	ldr	x8, [sp, #56]
  412258:	str	w15, [sp, #52]
  41225c:	str	x24, [sp, #40]
  412260:	cmp	x8, #0x1
  412264:	b.ne	4122d4 <wcrtomb@plt+0xf914>  // b.any
  412268:	bl	402760 <__ctype_b_loc@plt>
  41226c:	ldr	x8, [x0]
  412270:	ldur	w1, [x29, #-28]
  412274:	mov	w24, #0x1                   	// #1
  412278:	ldrh	w8, [x8, x19, lsl #1]
  41227c:	ubfx	w10, w8, #14, #1
  412280:	b	41259c <wcrtomb@plt+0xfbdc>
  412284:	ldr	w8, [sp, #72]
  412288:	mov	w12, w19
  41228c:	tbz	w8, #0, 41229c <wcrtomb@plt+0xf8dc>
  412290:	mov	w9, wzr
  412294:	mov	w8, wzr
  412298:	b	4120c4 <wcrtomb@plt+0xf704>
  41229c:	ldur	w8, [x29, #-84]
  4122a0:	mov	w10, w12
  4122a4:	tbz	w8, #0, 412050 <wcrtomb@plt+0xf690>
  4122a8:	ldur	w11, [x29, #-64]
  4122ac:	mov	w9, wzr
  4122b0:	mov	w8, wzr
  4122b4:	tbz	w11, #0, 412020 <wcrtomb@plt+0xf660>
  4122b8:	b	41204c <wcrtomb@plt+0xf68c>
  4122bc:	ldr	w8, [sp, #64]
  4122c0:	tbz	w8, #0, 41219c <wcrtomb@plt+0xf7dc>
  4122c4:	mov	w10, #0xf                   	// #15
  4122c8:	b	412110 <wcrtomb@plt+0xf750>
  4122cc:	mov	w9, wzr
  4122d0:	b	412588 <wcrtomb@plt+0xfbc8>
  4122d4:	cmn	x23, #0x1
  4122d8:	str	x22, [sp, #16]
  4122dc:	stur	xzr, [x29, #-16]
  4122e0:	b.ne	4122f0 <wcrtomb@plt+0xf930>  // b.any
  4122e4:	mov	x0, x21
  4122e8:	bl	402380 <strlen@plt>
  4122ec:	mov	x23, x0
  4122f0:	sub	x8, x23, x25
  4122f4:	str	x8, [sp, #8]
  4122f8:	add	x8, x21, x25
  4122fc:	str	x8, [sp, #32]
  412300:	ldur	x8, [x29, #-72]
  412304:	mov	x24, xzr
  412308:	add	x8, x8, x25
  41230c:	str	x8, [sp, #24]
  412310:	mov	w8, #0x1                   	// #1
  412314:	str	w8, [sp, #68]
  412318:	add	x8, x24, x25
  41231c:	add	x1, x21, x8
  412320:	sub	x2, x23, x8
  412324:	sub	x0, x29, #0x14
  412328:	sub	x3, x29, #0x10
  41232c:	mov	w22, w27
  412330:	bl	41609c <wcrtomb@plt+0x136dc>
  412334:	cbz	x0, 41238c <wcrtomb@plt+0xf9cc>
  412338:	mov	x27, x0
  41233c:	cmn	x0, #0x1
  412340:	b.eq	412388 <wcrtomb@plt+0xf9c8>  // b.none
  412344:	cmn	x27, #0x2
  412348:	b.ne	412394 <wcrtomb@plt+0xf9d4>  // b.any
  41234c:	add	x8, x24, x25
  412350:	cmp	x8, x23
  412354:	mov	w27, w22
  412358:	b.cs	41237c <wcrtomb@plt+0xf9bc>  // b.hs, b.nlast
  41235c:	ldr	x9, [sp, #32]
  412360:	ldrb	w8, [x9, x24]
  412364:	cbz	w8, 41237c <wcrtomb@plt+0xf9bc>
  412368:	add	x24, x24, #0x1
  41236c:	add	x8, x25, x24
  412370:	cmp	x8, x23
  412374:	b.cc	412360 <wcrtomb@plt+0xf9a0>  // b.lo, b.ul, b.last
  412378:	ldr	x24, [sp, #8]
  41237c:	str	wzr, [sp, #68]
  412380:	mov	w10, #0x34                  	// #52
  412384:	b	412424 <wcrtomb@plt+0xfa64>
  412388:	str	wzr, [sp, #68]
  41238c:	mov	w10, #0x34                  	// #52
  412390:	b	412420 <wcrtomb@plt+0xfa60>
  412394:	ldr	w8, [sp, #92]
  412398:	cbz	w8, 4123fc <wcrtomb@plt+0xfa3c>
  41239c:	cmp	x27, #0x2
  4123a0:	b.cc	4123f4 <wcrtomb@plt+0xfa34>  // b.lo, b.ul, b.last
  4123a4:	ldr	x9, [sp, #24]
  4123a8:	sub	x8, x27, #0x1
  4123ac:	add	x9, x9, x24
  4123b0:	b	4123c0 <wcrtomb@plt+0xfa00>
  4123b4:	subs	x8, x8, #0x1
  4123b8:	add	x9, x9, #0x1
  4123bc:	b.eq	4123f4 <wcrtomb@plt+0xfa34>  // b.none
  4123c0:	ldrb	w10, [x9]
  4123c4:	sub	w10, w10, #0x5b
  4123c8:	cmp	w10, #0x21
  4123cc:	b.hi	4123b4 <wcrtomb@plt+0xf9f4>  // b.pmore
  4123d0:	mov	w11, #0x1                   	// #1
  4123d4:	lsl	x10, x11, x10
  4123d8:	mov	x11, #0x2b                  	// #43
  4123dc:	movk	x11, #0x2, lsl #32
  4123e0:	tst	x10, x11
  4123e4:	b.eq	4123b4 <wcrtomb@plt+0xf9f4>  // b.none
  4123e8:	mov	w10, #0x10                  	// #16
  4123ec:	cbnz	w10, 412420 <wcrtomb@plt+0xfa60>
  4123f0:	b	4123fc <wcrtomb@plt+0xfa3c>
  4123f4:	mov	w10, wzr
  4123f8:	cbnz	w10, 412420 <wcrtomb@plt+0xfa60>
  4123fc:	ldur	w0, [x29, #-20]
  412400:	bl	4028e0 <iswprint@plt>
  412404:	ldr	w9, [sp, #68]
  412408:	cmp	w0, #0x0
  41240c:	cset	w8, ne  // ne = any
  412410:	mov	w10, wzr
  412414:	and	w9, w9, w8
  412418:	add	x24, x27, x24
  41241c:	str	w9, [sp, #68]
  412420:	mov	w27, w22
  412424:	cbnz	w10, 4124ec <wcrtomb@plt+0xfb2c>
  412428:	sub	x0, x29, #0x10
  41242c:	bl	4026e0 <mbsinit@plt>
  412430:	cbz	w0, 412318 <wcrtomb@plt+0xf958>
  412434:	b	4124f4 <wcrtomb@plt+0xfb34>
  412438:	ldr	w8, [sp, #64]
  41243c:	tbz	w8, #2, 41219c <wcrtomb@plt+0xf7dc>
  412440:	add	x10, x25, #0x2
  412444:	cmp	x10, x23
  412448:	b.cs	41219c <wcrtomb@plt+0xf7dc>  // b.hs, b.nlast
  41244c:	add	x8, x25, x21
  412450:	ldrb	w8, [x8, #1]
  412454:	cmp	w8, #0x3f
  412458:	b.ne	41219c <wcrtomb@plt+0xf7dc>  // b.any
  41245c:	ldrb	w11, [x21, x10]
  412460:	mov	w9, wzr
  412464:	cmp	w11, #0x3e
  412468:	b.hi	4127f4 <wcrtomb@plt+0xfe34>  // b.pmore
  41246c:	mov	w8, #0x1                   	// #1
  412470:	mov	x12, #0xa38200000000        	// #179778741075968
  412474:	lsl	x8, x8, x11
  412478:	movk	x12, #0x7000, lsl #48
  41247c:	tst	x8, x12
  412480:	b.eq	4127f4 <wcrtomb@plt+0xfe34>  // b.none
  412484:	tbnz	w16, #0, 412050 <wcrtomb@plt+0xf690>
  412488:	cmp	x20, x26
  41248c:	b.cs	412498 <wcrtomb@plt+0xfad8>  // b.hs, b.nlast
  412490:	mov	w8, #0x3f                  	// #63
  412494:	strb	w8, [x24, x20]
  412498:	add	x8, x20, #0x1
  41249c:	cmp	x8, x26
  4124a0:	b.cs	4124ac <wcrtomb@plt+0xfaec>  // b.hs, b.nlast
  4124a4:	mov	w9, #0x22                  	// #34
  4124a8:	strb	w9, [x24, x8]
  4124ac:	add	x8, x20, #0x2
  4124b0:	cmp	x8, x26
  4124b4:	b.cs	4124c0 <wcrtomb@plt+0xfb00>  // b.hs, b.nlast
  4124b8:	mov	w9, #0x22                  	// #34
  4124bc:	strb	w9, [x24, x8]
  4124c0:	add	x8, x20, #0x3
  4124c4:	cmp	x8, x26
  4124c8:	b.cs	4124d4 <wcrtomb@plt+0xfb14>  // b.hs, b.nlast
  4124cc:	mov	w9, #0x3f                  	// #63
  4124d0:	strb	w9, [x24, x8]
  4124d4:	mov	w9, wzr
  4124d8:	mov	w8, wzr
  4124dc:	add	x20, x20, #0x4
  4124e0:	mov	x25, x10
  4124e4:	mov	w19, w11
  4124e8:	b	412020 <wcrtomb@plt+0xf660>
  4124ec:	cmp	w10, #0x34
  4124f0:	b.ne	4124f8 <wcrtomb@plt+0xfb38>  // b.any
  4124f4:	mov	w10, wzr
  4124f8:	ldp	w16, w1, [x29, #-32]
  4124fc:	ldr	w15, [sp, #52]
  412500:	ldr	x22, [sp, #16]
  412504:	ldur	w17, [x29, #-36]
  412508:	cbz	w10, 412598 <wcrtomb@plt+0xfbd8>
  41250c:	ldr	x24, [sp, #40]
  412510:	mov	w11, wzr
  412514:	mov	w8, wzr
  412518:	b	4127d8 <wcrtomb@plt+0xfe18>
  41251c:	ldur	x10, [x29, #-80]
  412520:	cmp	x26, #0x0
  412524:	cset	w8, eq  // eq = none
  412528:	cmp	x10, #0x0
  41252c:	cset	w9, ne  // ne = any
  412530:	orr	w8, w9, w8
  412534:	cmp	w8, #0x0
  412538:	csel	x10, x10, x26, ne  // ne = any
  41253c:	csel	x26, x26, xzr, ne  // ne = any
  412540:	cmp	x20, x26
  412544:	stur	x10, [x29, #-80]
  412548:	b.cs	412554 <wcrtomb@plt+0xfb94>  // b.hs, b.nlast
  41254c:	mov	w8, #0x27                  	// #39
  412550:	strb	w8, [x24, x20]
  412554:	add	x8, x20, #0x1
  412558:	cmp	x8, x26
  41255c:	b.cs	412568 <wcrtomb@plt+0xfba8>  // b.hs, b.nlast
  412560:	mov	w9, #0x5c                  	// #92
  412564:	strb	w9, [x24, x8]
  412568:	add	x8, x20, #0x2
  41256c:	cmp	x8, x26
  412570:	b.cs	41257c <wcrtomb@plt+0xfbbc>  // b.hs, b.nlast
  412574:	mov	w9, #0x27                  	// #39
  412578:	strb	w9, [x24, x8]
  41257c:	mov	w27, wzr
  412580:	mov	w9, wzr
  412584:	add	x20, x20, #0x3
  412588:	mov	w8, #0x1                   	// #1
  41258c:	str	w8, [sp, #88]
  412590:	mov	w8, #0x1                   	// #1
  412594:	b	412020 <wcrtomb@plt+0xf660>
  412598:	ldr	w10, [sp, #68]
  41259c:	ldr	w9, [sp, #76]
  4125a0:	and	w8, w10, #0x1
  4125a4:	cmp	x24, #0x1
  4125a8:	orr	w9, w10, w9
  4125ac:	b.hi	4125cc <wcrtomb@plt+0xfc0c>  // b.pmore
  4125b0:	tbz	w9, #0, 4125cc <wcrtomb@plt+0xfc0c>
  4125b4:	ldr	x24, [sp, #40]
  4125b8:	ldr	w15, [sp, #52]
  4125bc:	ldp	w17, w16, [x29, #-36]
  4125c0:	mov	w11, wzr
  4125c4:	mov	w10, wzr
  4125c8:	b	4127d8 <wcrtomb@plt+0xfe18>
  4125cc:	add	x10, x24, x25
  4125d0:	ldr	x24, [sp, #40]
  4125d4:	ldr	w15, [sp, #52]
  4125d8:	ldp	w17, w16, [x29, #-36]
  4125dc:	mov	w11, wzr
  4125e0:	b	4125f4 <wcrtomb@plt+0xfc34>
  4125e4:	ldur	x13, [x29, #-72]
  4125e8:	add	x20, x20, #0x1
  4125ec:	ldrb	w19, [x13, x25]
  4125f0:	mov	x25, x12
  4125f4:	tbz	w9, #0, 412618 <wcrtomb@plt+0xfc58>
  4125f8:	tbz	w28, #0, 4126c0 <wcrtomb@plt+0xfd00>
  4125fc:	cmp	x20, x26
  412600:	b.cs	41260c <wcrtomb@plt+0xfc4c>  // b.hs, b.nlast
  412604:	mov	w12, #0x5c                  	// #92
  412608:	strb	w12, [x24, x20]
  41260c:	mov	w28, wzr
  412610:	add	x20, x20, #0x1
  412614:	b	4126c0 <wcrtomb@plt+0xfd00>
  412618:	tbnz	w16, #0, 4127d4 <wcrtomb@plt+0xfe14>
  41261c:	cmp	w1, #0x2
  412620:	cset	w11, ne  // ne = any
  412624:	orr	w11, w11, w27
  412628:	tbnz	w11, #0, 41266c <wcrtomb@plt+0xfcac>
  41262c:	cmp	x20, x26
  412630:	b.cs	41263c <wcrtomb@plt+0xfc7c>  // b.hs, b.nlast
  412634:	mov	w11, #0x27                  	// #39
  412638:	strb	w11, [x24, x20]
  41263c:	add	x11, x20, #0x1
  412640:	cmp	x11, x26
  412644:	b.cs	412650 <wcrtomb@plt+0xfc90>  // b.hs, b.nlast
  412648:	mov	w12, #0x24                  	// #36
  41264c:	strb	w12, [x24, x11]
  412650:	add	x11, x20, #0x2
  412654:	cmp	x11, x26
  412658:	b.cs	412664 <wcrtomb@plt+0xfca4>  // b.hs, b.nlast
  41265c:	mov	w12, #0x27                  	// #39
  412660:	strb	w12, [x24, x11]
  412664:	add	x20, x20, #0x3
  412668:	mov	w27, #0x1                   	// #1
  41266c:	cmp	x20, x26
  412670:	b.cs	41267c <wcrtomb@plt+0xfcbc>  // b.hs, b.nlast
  412674:	mov	w11, #0x5c                  	// #92
  412678:	strb	w11, [x24, x20]
  41267c:	add	x11, x20, #0x1
  412680:	cmp	x11, x26
  412684:	b.cs	412694 <wcrtomb@plt+0xfcd4>  // b.hs, b.nlast
  412688:	mov	w12, #0x30                  	// #48
  41268c:	bfxil	w12, w19, #6, #2
  412690:	strb	w12, [x24, x11]
  412694:	add	x11, x20, #0x2
  412698:	cmp	x11, x26
  41269c:	b.cs	4126ac <wcrtomb@plt+0xfcec>  // b.hs, b.nlast
  4126a0:	mov	w12, #0x30                  	// #48
  4126a4:	bfxil	w12, w19, #3, #3
  4126a8:	strb	w12, [x24, x11]
  4126ac:	mov	w12, #0x30                  	// #48
  4126b0:	bfxil	w12, w19, #0, #3
  4126b4:	add	x20, x20, #0x3
  4126b8:	mov	w11, #0x1                   	// #1
  4126bc:	mov	w19, w12
  4126c0:	add	x12, x25, #0x1
  4126c4:	cmp	x10, x12
  4126c8:	b.ls	412714 <wcrtomb@plt+0xfd54>  // b.plast
  4126cc:	and	w13, w11, #0x1
  4126d0:	orn	w13, w13, w27
  4126d4:	tbnz	w13, #0, 412704 <wcrtomb@plt+0xfd44>
  4126d8:	cmp	x20, x26
  4126dc:	b.cs	4126e8 <wcrtomb@plt+0xfd28>  // b.hs, b.nlast
  4126e0:	mov	w13, #0x27                  	// #39
  4126e4:	strb	w13, [x24, x20]
  4126e8:	add	x13, x20, #0x1
  4126ec:	cmp	x13, x26
  4126f0:	b.cs	4126fc <wcrtomb@plt+0xfd3c>  // b.hs, b.nlast
  4126f4:	mov	w14, #0x27                  	// #39
  4126f8:	strb	w14, [x24, x13]
  4126fc:	mov	w27, wzr
  412700:	add	x20, x20, #0x2
  412704:	cmp	x20, x26
  412708:	b.cs	4125e4 <wcrtomb@plt+0xfc24>  // b.hs, b.nlast
  41270c:	strb	w19, [x24, x20]
  412710:	b	4125e4 <wcrtomb@plt+0xfc24>
  412714:	mov	w10, #0x2c                  	// #44
  412718:	b	4127d8 <wcrtomb@plt+0xfe18>
  41271c:	cmp	x20, x26
  412720:	b.cs	41272c <wcrtomb@plt+0xfd6c>  // b.hs, b.nlast
  412724:	mov	w8, #0x27                  	// #39
  412728:	strb	w8, [x24, x20]
  41272c:	add	x8, x20, #0x1
  412730:	cmp	x8, x26
  412734:	b.cs	412740 <wcrtomb@plt+0xfd80>  // b.hs, b.nlast
  412738:	mov	w9, #0x24                  	// #36
  41273c:	strb	w9, [x24, x8]
  412740:	add	x8, x20, #0x2
  412744:	cmp	x8, x26
  412748:	b.cs	412754 <wcrtomb@plt+0xfd94>  // b.hs, b.nlast
  41274c:	mov	w9, #0x27                  	// #39
  412750:	strb	w9, [x24, x8]
  412754:	add	x9, x20, #0x3
  412758:	mov	w27, #0x1                   	// #1
  41275c:	cmp	x9, x26
  412760:	b.cs	41276c <wcrtomb@plt+0xfdac>  // b.hs, b.nlast
  412764:	mov	w8, #0x5c                  	// #92
  412768:	strb	w8, [x24, x9]
  41276c:	cmp	w1, #0x2
  412770:	add	x20, x9, #0x1
  412774:	b.eq	4127c4 <wcrtomb@plt+0xfe04>  // b.none
  412778:	add	x8, x25, #0x1
  41277c:	cmp	x8, x23
  412780:	b.cs	4127c4 <wcrtomb@plt+0xfe04>  // b.hs, b.nlast
  412784:	ldrb	w8, [x21, x8]
  412788:	sub	w8, w8, #0x30
  41278c:	cmp	w8, #0x9
  412790:	b.hi	4127c4 <wcrtomb@plt+0xfe04>  // b.pmore
  412794:	cmp	x20, x26
  412798:	b.cs	4127a4 <wcrtomb@plt+0xfde4>  // b.hs, b.nlast
  41279c:	mov	w8, #0x30                  	// #48
  4127a0:	strb	w8, [x24, x20]
  4127a4:	add	x8, x9, #0x2
  4127a8:	cmp	x8, x26
  4127ac:	b.cs	4127b8 <wcrtomb@plt+0xfdf8>  // b.hs, b.nlast
  4127b0:	mov	w10, #0x30                  	// #48
  4127b4:	strb	w10, [x24, x8]
  4127b8:	mov	w8, wzr
  4127bc:	add	x20, x9, #0x3
  4127c0:	b	4127c8 <wcrtomb@plt+0xfe08>
  4127c4:	mov	w8, wzr
  4127c8:	mov	w9, #0x1                   	// #1
  4127cc:	mov	w19, #0x30                  	// #48
  4127d0:	b	412020 <wcrtomb@plt+0xf660>
  4127d4:	mov	w10, #0x10                  	// #16
  4127d8:	cmp	w8, #0x0
  4127dc:	cset	w8, ne  // ne = any
  4127e0:	cmp	w10, #0x2c
  4127e4:	and	w9, w11, #0x1
  4127e8:	b.eq	4120c4 <wcrtomb@plt+0xf704>  // b.none
  4127ec:	cbz	w10, 412020 <wcrtomb@plt+0xf660>
  4127f0:	b	412110 <wcrtomb@plt+0xf750>
  4127f4:	mov	w8, w9
  4127f8:	b	412020 <wcrtomb@plt+0xf660>
  4127fc:	cmp	x20, #0x0
  412800:	cset	w8, eq  // eq = none
  412804:	cmp	w1, #0x2
  412808:	cset	w9, eq  // eq = none
  41280c:	and	w8, w9, w8
  412810:	and	w8, w16, w8
  412814:	tbnz	w8, #0, 412888 <wcrtomb@plt+0xfec8>
  412818:	ldur	w9, [x29, #-64]
  41281c:	cmp	w1, #0x2
  412820:	cset	w8, ne  // ne = any
  412824:	orr	w8, w16, w8
  412828:	tbnz	w8, #0, 41285c <wcrtomb@plt+0xfe9c>
  41282c:	ldr	w8, [sp, #88]
  412830:	eor	w8, w8, #0x1
  412834:	tbnz	w8, #0, 41285c <wcrtomb@plt+0xfe9c>
  412838:	tbnz	w15, #0, 412928 <wcrtomb@plt+0xff68>
  41283c:	ldur	x8, [x29, #-80]
  412840:	cbz	x8, 41285c <wcrtomb@plt+0xfe9c>
  412844:	mov	w28, w27
  412848:	ldur	x27, [x29, #-80]
  41284c:	mov	w1, #0x2                   	// #2
  412850:	mov	w8, w9
  412854:	mov	w19, w16
  412858:	cbz	x26, 411d74 <wcrtomb@plt+0xf3b4>
  41285c:	ldur	x10, [x29, #-56]
  412860:	cmp	x10, #0x0
  412864:	cset	w8, eq  // eq = none
  412868:	orr	w8, w8, w16
  41286c:	tbnz	w8, #0, 412918 <wcrtomb@plt+0xff58>
  412870:	ldrb	w9, [x10]
  412874:	cbz	w9, 412918 <wcrtomb@plt+0xff58>
  412878:	add	x8, x10, #0x1
  41287c:	b	4128e4 <wcrtomb@plt+0xff24>
  412880:	cmp	w10, #0x10
  412884:	b.ne	4128f4 <wcrtomb@plt+0xff34>  // b.any
  412888:	ldur	w8, [x29, #-64]
  41288c:	mov	w9, #0x4                   	// #4
  412890:	mov	x0, x24
  412894:	mov	x2, x21
  412898:	tst	w8, #0x1
  41289c:	mov	w8, #0x2                   	// #2
  4128a0:	csel	w8, w9, w8, ne  // ne = any
  4128a4:	cmp	w1, #0x2
  4128a8:	csel	w4, w8, w1, eq  // eq = none
  4128ac:	ldr	w8, [sp, #64]
  4128b0:	mov	x1, x26
  4128b4:	mov	x3, x23
  4128b8:	mov	x6, xzr
  4128bc:	and	w5, w8, #0xfffffffd
  4128c0:	ldr	x8, [sp, #96]
  4128c4:	str	x8, [sp]
  4128c8:	ldr	x7, [sp, #80]
  4128cc:	bl	411cf4 <wcrtomb@plt+0xf334>
  4128d0:	mov	x20, x0
  4128d4:	b	4128f4 <wcrtomb@plt+0xff34>
  4128d8:	ldrb	w9, [x8], #1
  4128dc:	add	x20, x20, #0x1
  4128e0:	cbz	w9, 412918 <wcrtomb@plt+0xff58>
  4128e4:	cmp	x20, x26
  4128e8:	b.cs	4128d8 <wcrtomb@plt+0xff18>  // b.hs, b.nlast
  4128ec:	strb	w9, [x24, x20]
  4128f0:	b	4128d8 <wcrtomb@plt+0xff18>
  4128f4:	mov	x0, x20
  4128f8:	ldp	x20, x19, [sp, #272]
  4128fc:	ldp	x22, x21, [sp, #256]
  412900:	ldp	x24, x23, [sp, #240]
  412904:	ldp	x26, x25, [sp, #224]
  412908:	ldp	x28, x27, [sp, #208]
  41290c:	ldp	x29, x30, [sp, #192]
  412910:	add	sp, sp, #0x120
  412914:	ret
  412918:	cmp	x20, x26
  41291c:	b.cs	4128f4 <wcrtomb@plt+0xff34>  // b.hs, b.nlast
  412920:	strb	wzr, [x24, x20]
  412924:	b	4128f4 <wcrtomb@plt+0xff34>
  412928:	ldr	x8, [sp, #96]
  41292c:	ldur	x1, [x29, #-80]
  412930:	ldr	w5, [sp, #64]
  412934:	ldur	x6, [x29, #-48]
  412938:	mov	w4, #0x5                   	// #5
  41293c:	mov	x0, x24
  412940:	mov	x2, x21
  412944:	mov	x3, x23
  412948:	b	4128c4 <wcrtomb@plt+0xff04>
  41294c:	bl	4026c0 <abort@plt>
  412950:	stp	x29, x30, [sp, #-16]!
  412954:	mov	x3, x2
  412958:	mov	x2, xzr
  41295c:	mov	x29, sp
  412960:	bl	41296c <wcrtomb@plt+0xffac>
  412964:	ldp	x29, x30, [sp], #16
  412968:	ret
  41296c:	sub	sp, sp, #0x70
  412970:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412974:	add	x8, x8, #0x790
  412978:	cmp	x3, #0x0
  41297c:	stp	x29, x30, [sp, #16]
  412980:	stp	x28, x27, [sp, #32]
  412984:	stp	x26, x25, [sp, #48]
  412988:	stp	x24, x23, [sp, #64]
  41298c:	stp	x22, x21, [sp, #80]
  412990:	stp	x20, x19, [sp, #96]
  412994:	add	x29, sp, #0x10
  412998:	mov	x19, x2
  41299c:	mov	x22, x1
  4129a0:	mov	x23, x0
  4129a4:	csel	x21, x8, x3, eq  // eq = none
  4129a8:	bl	402930 <__errno_location@plt>
  4129ac:	ldp	w4, w8, [x21]
  4129b0:	cmp	x19, #0x0
  4129b4:	ldp	x7, x9, [x21, #40]
  4129b8:	ldr	w28, [x0]
  4129bc:	cset	w10, eq  // eq = none
  4129c0:	orr	w25, w8, w10
  4129c4:	add	x26, x21, #0x8
  4129c8:	mov	x24, x0
  4129cc:	mov	x0, xzr
  4129d0:	mov	x1, xzr
  4129d4:	mov	x2, x23
  4129d8:	mov	x3, x22
  4129dc:	mov	w5, w25
  4129e0:	mov	x6, x26
  4129e4:	str	x9, [sp]
  4129e8:	bl	411cf4 <wcrtomb@plt+0xf334>
  4129ec:	add	x27, x0, #0x1
  4129f0:	mov	x20, x0
  4129f4:	mov	x0, x27
  4129f8:	bl	413bf0 <wcrtomb@plt+0x11230>
  4129fc:	ldr	w4, [x21]
  412a00:	ldp	x7, x8, [x21, #40]
  412a04:	mov	x1, x27
  412a08:	mov	x2, x23
  412a0c:	mov	x3, x22
  412a10:	mov	w5, w25
  412a14:	mov	x6, x26
  412a18:	mov	x21, x0
  412a1c:	str	x8, [sp]
  412a20:	bl	411cf4 <wcrtomb@plt+0xf334>
  412a24:	str	w28, [x24]
  412a28:	cbz	x19, 412a30 <wcrtomb@plt+0x10070>
  412a2c:	str	x20, [x19]
  412a30:	mov	x0, x21
  412a34:	ldp	x20, x19, [sp, #96]
  412a38:	ldp	x22, x21, [sp, #80]
  412a3c:	ldp	x24, x23, [sp, #64]
  412a40:	ldp	x26, x25, [sp, #48]
  412a44:	ldp	x28, x27, [sp, #32]
  412a48:	ldp	x29, x30, [sp, #16]
  412a4c:	add	sp, sp, #0x70
  412a50:	ret
  412a54:	stp	x29, x30, [sp, #-64]!
  412a58:	stp	x20, x19, [sp, #48]
  412a5c:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412a60:	stp	x22, x21, [sp, #32]
  412a64:	ldr	w8, [x20, #1008]
  412a68:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412a6c:	ldr	x19, [x21, #1000]
  412a70:	str	x23, [sp, #16]
  412a74:	cmp	w8, #0x2
  412a78:	mov	x29, sp
  412a7c:	b.lt	412aa0 <wcrtomb@plt+0x100e0>  // b.tstop
  412a80:	add	x22, x19, #0x18
  412a84:	mov	w23, #0x1                   	// #1
  412a88:	ldr	x0, [x22], #16
  412a8c:	bl	402770 <free@plt>
  412a90:	ldrsw	x8, [x20, #1008]
  412a94:	add	x23, x23, #0x1
  412a98:	cmp	x23, x8
  412a9c:	b.lt	412a88 <wcrtomb@plt+0x100c8>  // b.tstop
  412aa0:	ldr	x0, [x19, #8]
  412aa4:	adrp	x23, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412aa8:	add	x23, x23, #0x7c8
  412aac:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412ab0:	cmp	x0, x23
  412ab4:	add	x22, x22, #0x3f8
  412ab8:	b.eq	412ac8 <wcrtomb@plt+0x10108>  // b.none
  412abc:	bl	402770 <free@plt>
  412ac0:	mov	w8, #0x100                 	// #256
  412ac4:	stp	x8, x23, [x22]
  412ac8:	cmp	x19, x22
  412acc:	b.eq	412adc <wcrtomb@plt+0x1011c>  // b.none
  412ad0:	mov	x0, x19
  412ad4:	bl	402770 <free@plt>
  412ad8:	str	x22, [x21, #1000]
  412adc:	mov	w8, #0x1                   	// #1
  412ae0:	str	w8, [x20, #1008]
  412ae4:	ldp	x20, x19, [sp, #48]
  412ae8:	ldp	x22, x21, [sp, #32]
  412aec:	ldr	x23, [sp, #16]
  412af0:	ldp	x29, x30, [sp], #64
  412af4:	ret
  412af8:	stp	x29, x30, [sp, #-16]!
  412afc:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412b00:	add	x3, x3, #0x790
  412b04:	mov	x2, #0xffffffffffffffff    	// #-1
  412b08:	mov	x29, sp
  412b0c:	bl	412b18 <wcrtomb@plt+0x10158>
  412b10:	ldp	x29, x30, [sp], #16
  412b14:	ret
  412b18:	sub	sp, sp, #0x80
  412b1c:	stp	x29, x30, [sp, #32]
  412b20:	add	x29, sp, #0x20
  412b24:	stp	x28, x27, [sp, #48]
  412b28:	stp	x26, x25, [sp, #64]
  412b2c:	stp	x24, x23, [sp, #80]
  412b30:	stp	x22, x21, [sp, #96]
  412b34:	stp	x20, x19, [sp, #112]
  412b38:	mov	x22, x3
  412b3c:	stur	x2, [x29, #-8]
  412b40:	mov	x21, x1
  412b44:	mov	w23, w0
  412b48:	bl	402930 <__errno_location@plt>
  412b4c:	tbnz	w23, #31, 412c9c <wcrtomb@plt+0x102dc>
  412b50:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412b54:	ldr	w8, [x25, #1008]
  412b58:	adrp	x28, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412b5c:	ldr	w20, [x0]
  412b60:	ldr	x27, [x28, #1000]
  412b64:	mov	x19, x0
  412b68:	cmp	w8, w23
  412b6c:	b.gt	412bd8 <wcrtomb@plt+0x10218>
  412b70:	mov	w8, #0x7fffffff            	// #2147483647
  412b74:	cmp	w23, w8
  412b78:	stur	w20, [x29, #-12]
  412b7c:	b.eq	412ca0 <wcrtomb@plt+0x102e0>  // b.none
  412b80:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412b84:	add	x20, x20, #0x3f8
  412b88:	add	w26, w23, #0x1
  412b8c:	cmp	x27, x20
  412b90:	csel	x0, xzr, x27, eq  // eq = none
  412b94:	sbfiz	x1, x26, #4, #32
  412b98:	bl	413b40 <wcrtomb@plt+0x11180>
  412b9c:	mov	x24, x0
  412ba0:	cmp	x27, x20
  412ba4:	str	x0, [x28, #1000]
  412ba8:	b.ne	412bb4 <wcrtomb@plt+0x101f4>  // b.any
  412bac:	ldr	q0, [x20]
  412bb0:	str	q0, [x24]
  412bb4:	ldrsw	x8, [x25, #1008]
  412bb8:	mov	w1, wzr
  412bbc:	add	x0, x24, x8, lsl #4
  412bc0:	sub	w8, w26, w8
  412bc4:	sbfiz	x2, x8, #4, #32
  412bc8:	bl	4025b0 <memset@plt>
  412bcc:	ldur	w20, [x29, #-12]
  412bd0:	mov	x27, x24
  412bd4:	str	w26, [x25, #1008]
  412bd8:	add	x28, x27, w23, sxtw #4
  412bdc:	mov	x27, x28
  412be0:	ldr	x26, [x28]
  412be4:	ldr	x23, [x27, #8]!
  412be8:	ldp	w4, w8, [x22]
  412bec:	ldp	x7, x9, [x22, #40]
  412bf0:	ldur	x3, [x29, #-8]
  412bf4:	add	x24, x22, #0x8
  412bf8:	orr	w25, w8, #0x1
  412bfc:	mov	x0, x23
  412c00:	mov	x1, x26
  412c04:	mov	x2, x21
  412c08:	mov	w5, w25
  412c0c:	mov	x6, x24
  412c10:	str	x9, [sp]
  412c14:	bl	411cf4 <wcrtomb@plt+0xf334>
  412c18:	cmp	x26, x0
  412c1c:	b.hi	412c74 <wcrtomb@plt+0x102b4>  // b.pmore
  412c20:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412c24:	add	x8, x8, #0x7c8
  412c28:	add	x26, x0, #0x1
  412c2c:	cmp	x23, x8
  412c30:	str	x26, [x28]
  412c34:	b.eq	412c40 <wcrtomb@plt+0x10280>  // b.none
  412c38:	mov	x0, x23
  412c3c:	bl	402770 <free@plt>
  412c40:	mov	x0, x26
  412c44:	bl	413bf0 <wcrtomb@plt+0x11230>
  412c48:	str	x0, [x27]
  412c4c:	ldr	w4, [x22]
  412c50:	ldp	x7, x8, [x22, #40]
  412c54:	ldur	x3, [x29, #-8]
  412c58:	mov	x1, x26
  412c5c:	mov	x2, x21
  412c60:	mov	w5, w25
  412c64:	mov	x6, x24
  412c68:	mov	x23, x0
  412c6c:	str	x8, [sp]
  412c70:	bl	411cf4 <wcrtomb@plt+0xf334>
  412c74:	str	w20, [x19]
  412c78:	mov	x0, x23
  412c7c:	ldp	x20, x19, [sp, #112]
  412c80:	ldp	x22, x21, [sp, #96]
  412c84:	ldp	x24, x23, [sp, #80]
  412c88:	ldp	x26, x25, [sp, #64]
  412c8c:	ldp	x28, x27, [sp, #48]
  412c90:	ldp	x29, x30, [sp, #32]
  412c94:	add	sp, sp, #0x80
  412c98:	ret
  412c9c:	bl	4026c0 <abort@plt>
  412ca0:	bl	413cd0 <wcrtomb@plt+0x11310>
  412ca4:	stp	x29, x30, [sp, #-16]!
  412ca8:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412cac:	add	x3, x3, #0x790
  412cb0:	mov	x29, sp
  412cb4:	bl	412b18 <wcrtomb@plt+0x10158>
  412cb8:	ldp	x29, x30, [sp], #16
  412cbc:	ret
  412cc0:	stp	x29, x30, [sp, #-16]!
  412cc4:	mov	x1, x0
  412cc8:	mov	w0, wzr
  412ccc:	mov	x29, sp
  412cd0:	bl	412af8 <wcrtomb@plt+0x10138>
  412cd4:	ldp	x29, x30, [sp], #16
  412cd8:	ret
  412cdc:	stp	x29, x30, [sp, #-16]!
  412ce0:	mov	x2, x1
  412ce4:	mov	x1, x0
  412ce8:	mov	w0, wzr
  412cec:	mov	x29, sp
  412cf0:	bl	412ca4 <wcrtomb@plt+0x102e4>
  412cf4:	ldp	x29, x30, [sp], #16
  412cf8:	ret
  412cfc:	sub	sp, sp, #0x60
  412d00:	stp	x20, x19, [sp, #80]
  412d04:	mov	w20, w0
  412d08:	add	x8, sp, #0x8
  412d0c:	mov	w0, w1
  412d10:	stp	x29, x30, [sp, #64]
  412d14:	add	x29, sp, #0x40
  412d18:	mov	x19, x2
  412d1c:	bl	412d44 <wcrtomb@plt+0x10384>
  412d20:	add	x3, sp, #0x8
  412d24:	mov	x2, #0xffffffffffffffff    	// #-1
  412d28:	mov	w0, w20
  412d2c:	mov	x1, x19
  412d30:	bl	412b18 <wcrtomb@plt+0x10158>
  412d34:	ldp	x20, x19, [sp, #80]
  412d38:	ldp	x29, x30, [sp, #64]
  412d3c:	add	sp, sp, #0x60
  412d40:	ret
  412d44:	stp	x29, x30, [sp, #-16]!
  412d48:	movi	v0.2d, #0x0
  412d4c:	cmp	w0, #0xa
  412d50:	mov	x29, sp
  412d54:	str	xzr, [x8, #48]
  412d58:	stp	q0, q0, [x8, #16]
  412d5c:	str	q0, [x8]
  412d60:	b.eq	412d70 <wcrtomb@plt+0x103b0>  // b.none
  412d64:	str	w0, [x8]
  412d68:	ldp	x29, x30, [sp], #16
  412d6c:	ret
  412d70:	bl	4026c0 <abort@plt>
  412d74:	sub	sp, sp, #0x70
  412d78:	str	x21, [sp, #80]
  412d7c:	mov	w21, w0
  412d80:	add	x8, sp, #0x8
  412d84:	mov	w0, w1
  412d88:	stp	x29, x30, [sp, #64]
  412d8c:	stp	x20, x19, [sp, #96]
  412d90:	add	x29, sp, #0x40
  412d94:	mov	x19, x3
  412d98:	mov	x20, x2
  412d9c:	bl	412d44 <wcrtomb@plt+0x10384>
  412da0:	add	x3, sp, #0x8
  412da4:	mov	w0, w21
  412da8:	mov	x1, x20
  412dac:	mov	x2, x19
  412db0:	bl	412b18 <wcrtomb@plt+0x10158>
  412db4:	ldp	x20, x19, [sp, #96]
  412db8:	ldr	x21, [sp, #80]
  412dbc:	ldp	x29, x30, [sp, #64]
  412dc0:	add	sp, sp, #0x70
  412dc4:	ret
  412dc8:	stp	x29, x30, [sp, #-16]!
  412dcc:	mov	x2, x1
  412dd0:	mov	w1, w0
  412dd4:	mov	w0, wzr
  412dd8:	mov	x29, sp
  412ddc:	bl	412cfc <wcrtomb@plt+0x1033c>
  412de0:	ldp	x29, x30, [sp], #16
  412de4:	ret
  412de8:	stp	x29, x30, [sp, #-16]!
  412dec:	mov	x3, x2
  412df0:	mov	x2, x1
  412df4:	mov	w1, w0
  412df8:	mov	w0, wzr
  412dfc:	mov	x29, sp
  412e00:	bl	412d74 <wcrtomb@plt+0x103b4>
  412e04:	ldp	x29, x30, [sp], #16
  412e08:	ret
  412e0c:	sub	sp, sp, #0x60
  412e10:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412e14:	add	x9, x9, #0x790
  412e18:	ldp	q0, q1, [x9]
  412e1c:	ldr	q2, [x9, #32]
  412e20:	ldr	x9, [x9, #48]
  412e24:	mov	w8, w2
  412e28:	stp	x20, x19, [sp, #80]
  412e2c:	mov	x19, x1
  412e30:	mov	x20, x0
  412e34:	mov	x0, sp
  412e38:	mov	w2, #0x1                   	// #1
  412e3c:	mov	w1, w8
  412e40:	stp	x29, x30, [sp, #64]
  412e44:	add	x29, sp, #0x40
  412e48:	stp	q0, q1, [sp]
  412e4c:	str	q2, [sp, #32]
  412e50:	str	x9, [sp, #48]
  412e54:	bl	411bd8 <wcrtomb@plt+0xf218>
  412e58:	mov	x3, sp
  412e5c:	mov	w0, wzr
  412e60:	mov	x1, x20
  412e64:	mov	x2, x19
  412e68:	bl	412b18 <wcrtomb@plt+0x10158>
  412e6c:	ldp	x20, x19, [sp, #80]
  412e70:	ldp	x29, x30, [sp, #64]
  412e74:	add	sp, sp, #0x60
  412e78:	ret
  412e7c:	stp	x29, x30, [sp, #-16]!
  412e80:	mov	w2, w1
  412e84:	mov	x1, #0xffffffffffffffff    	// #-1
  412e88:	mov	x29, sp
  412e8c:	bl	412e0c <wcrtomb@plt+0x1044c>
  412e90:	ldp	x29, x30, [sp], #16
  412e94:	ret
  412e98:	stp	x29, x30, [sp, #-16]!
  412e9c:	mov	w1, #0x3a                  	// #58
  412ea0:	mov	x29, sp
  412ea4:	bl	412e7c <wcrtomb@plt+0x104bc>
  412ea8:	ldp	x29, x30, [sp], #16
  412eac:	ret
  412eb0:	stp	x29, x30, [sp, #-16]!
  412eb4:	mov	w2, #0x3a                  	// #58
  412eb8:	mov	x29, sp
  412ebc:	bl	412e0c <wcrtomb@plt+0x1044c>
  412ec0:	ldp	x29, x30, [sp], #16
  412ec4:	ret
  412ec8:	sub	sp, sp, #0x60
  412ecc:	stp	x20, x19, [sp, #80]
  412ed0:	mov	w20, w0
  412ed4:	add	x8, sp, #0x8
  412ed8:	mov	w0, w1
  412edc:	stp	x29, x30, [sp, #64]
  412ee0:	add	x29, sp, #0x40
  412ee4:	mov	x19, x2
  412ee8:	bl	412d44 <wcrtomb@plt+0x10384>
  412eec:	add	x0, sp, #0x8
  412ef0:	mov	w1, #0x3a                  	// #58
  412ef4:	mov	w2, #0x1                   	// #1
  412ef8:	bl	411bd8 <wcrtomb@plt+0xf218>
  412efc:	add	x3, sp, #0x8
  412f00:	mov	x2, #0xffffffffffffffff    	// #-1
  412f04:	mov	w0, w20
  412f08:	mov	x1, x19
  412f0c:	bl	412b18 <wcrtomb@plt+0x10158>
  412f10:	ldp	x20, x19, [sp, #80]
  412f14:	ldp	x29, x30, [sp, #64]
  412f18:	add	sp, sp, #0x60
  412f1c:	ret
  412f20:	stp	x29, x30, [sp, #-16]!
  412f24:	mov	x4, #0xffffffffffffffff    	// #-1
  412f28:	mov	x29, sp
  412f2c:	bl	412f38 <wcrtomb@plt+0x10578>
  412f30:	ldp	x29, x30, [sp], #16
  412f34:	ret
  412f38:	sub	sp, sp, #0x70
  412f3c:	adrp	x8, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  412f40:	add	x8, x8, #0x790
  412f44:	ldp	q0, q1, [x8]
  412f48:	ldr	q2, [x8, #32]
  412f4c:	ldr	x8, [x8, #48]
  412f50:	str	x21, [sp, #80]
  412f54:	mov	w21, w0
  412f58:	mov	x0, sp
  412f5c:	stp	x29, x30, [sp, #64]
  412f60:	stp	x20, x19, [sp, #96]
  412f64:	add	x29, sp, #0x40
  412f68:	mov	x19, x4
  412f6c:	mov	x20, x3
  412f70:	stp	q0, q1, [sp]
  412f74:	str	q2, [sp, #32]
  412f78:	str	x8, [sp, #48]
  412f7c:	bl	411c30 <wcrtomb@plt+0xf270>
  412f80:	mov	x3, sp
  412f84:	mov	w0, w21
  412f88:	mov	x1, x20
  412f8c:	mov	x2, x19
  412f90:	bl	412b18 <wcrtomb@plt+0x10158>
  412f94:	ldp	x20, x19, [sp, #96]
  412f98:	ldr	x21, [sp, #80]
  412f9c:	ldp	x29, x30, [sp, #64]
  412fa0:	add	sp, sp, #0x70
  412fa4:	ret
  412fa8:	stp	x29, x30, [sp, #-16]!
  412fac:	mov	x3, x2
  412fb0:	mov	x2, x1
  412fb4:	mov	x1, x0
  412fb8:	mov	w0, wzr
  412fbc:	mov	x29, sp
  412fc0:	bl	412f20 <wcrtomb@plt+0x10560>
  412fc4:	ldp	x29, x30, [sp], #16
  412fc8:	ret
  412fcc:	stp	x29, x30, [sp, #-16]!
  412fd0:	mov	x4, x3
  412fd4:	mov	x3, x2
  412fd8:	mov	x2, x1
  412fdc:	mov	x1, x0
  412fe0:	mov	w0, wzr
  412fe4:	mov	x29, sp
  412fe8:	bl	412f38 <wcrtomb@plt+0x10578>
  412fec:	ldp	x29, x30, [sp], #16
  412ff0:	ret
  412ff4:	stp	x29, x30, [sp, #-16]!
  412ff8:	adrp	x3, 437000 <_obstack_memory_used@@Base+0x20bcc>
  412ffc:	add	x3, x3, #0x408
  413000:	mov	x29, sp
  413004:	bl	412b18 <wcrtomb@plt+0x10158>
  413008:	ldp	x29, x30, [sp], #16
  41300c:	ret
  413010:	stp	x29, x30, [sp, #-16]!
  413014:	mov	x2, x1
  413018:	mov	x1, x0
  41301c:	mov	w0, wzr
  413020:	mov	x29, sp
  413024:	bl	412ff4 <wcrtomb@plt+0x10634>
  413028:	ldp	x29, x30, [sp], #16
  41302c:	ret
  413030:	stp	x29, x30, [sp, #-16]!
  413034:	mov	x2, #0xffffffffffffffff    	// #-1
  413038:	mov	x29, sp
  41303c:	bl	412ff4 <wcrtomb@plt+0x10634>
  413040:	ldp	x29, x30, [sp], #16
  413044:	ret
  413048:	stp	x29, x30, [sp, #-16]!
  41304c:	mov	x1, x0
  413050:	mov	w0, wzr
  413054:	mov	x29, sp
  413058:	bl	413030 <wcrtomb@plt+0x10670>
  41305c:	ldp	x29, x30, [sp], #16
  413060:	ret
  413064:	stp	x29, x30, [sp, #-48]!
  413068:	stp	x20, x19, [sp, #32]
  41306c:	mov	x20, x0
  413070:	mov	w19, w1
  413074:	mov	w2, #0x5                   	// #5
  413078:	mov	x0, xzr
  41307c:	mov	x1, x20
  413080:	str	x21, [sp, #16]
  413084:	mov	x29, sp
  413088:	bl	402890 <dcgettext@plt>
  41308c:	cmp	x0, x20
  413090:	b.ne	41311c <wcrtomb@plt+0x1075c>  // b.any
  413094:	bl	423298 <_obstack_memory_used@@Base+0xce64>
  413098:	mov	w1, #0x55                  	// #85
  41309c:	mov	w2, #0x54                  	// #84
  4130a0:	mov	w3, #0x46                  	// #70
  4130a4:	mov	w4, #0x2d                  	// #45
  4130a8:	mov	w5, #0x38                  	// #56
  4130ac:	mov	w6, wzr
  4130b0:	mov	w7, wzr
  4130b4:	mov	x21, x0
  4130b8:	bl	413148 <wcrtomb@plt+0x10788>
  4130bc:	cbz	w0, 4130d8 <wcrtomb@plt+0x10718>
  4130c0:	ldrb	w8, [x20]
  4130c4:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4130c8:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4130cc:	add	x9, x9, #0x232
  4130d0:	add	x10, x10, #0x22e
  4130d4:	b	413114 <wcrtomb@plt+0x10754>
  4130d8:	mov	w1, #0x47                  	// #71
  4130dc:	mov	w2, #0x42                  	// #66
  4130e0:	mov	w3, #0x31                  	// #49
  4130e4:	mov	w4, #0x38                  	// #56
  4130e8:	mov	w5, #0x30                  	// #48
  4130ec:	mov	w6, #0x33                  	// #51
  4130f0:	mov	w7, #0x30                  	// #48
  4130f4:	mov	x0, x21
  4130f8:	bl	413148 <wcrtomb@plt+0x10788>
  4130fc:	cbz	w0, 41312c <wcrtomb@plt+0x1076c>
  413100:	ldrb	w8, [x20]
  413104:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413108:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41310c:	add	x9, x9, #0x23a
  413110:	add	x10, x10, #0x236
  413114:	cmp	w8, #0x60
  413118:	csel	x0, x10, x9, eq  // eq = none
  41311c:	ldp	x20, x19, [sp, #32]
  413120:	ldr	x21, [sp, #16]
  413124:	ldp	x29, x30, [sp], #48
  413128:	ret
  41312c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413130:	adrp	x9, 425000 <_obstack_memory_used@@Base+0xebcc>
  413134:	add	x8, x8, #0x3e
  413138:	add	x9, x9, #0xd8c
  41313c:	cmp	w19, #0x9
  413140:	csel	x0, x9, x8, eq  // eq = none
  413144:	b	41311c <wcrtomb@plt+0x1075c>
  413148:	stp	x29, x30, [sp, #-80]!
  41314c:	stp	x26, x25, [sp, #16]
  413150:	mov	x25, x0
  413154:	and	w0, w1, #0xff
  413158:	stp	x24, x23, [sp, #32]
  41315c:	stp	x22, x21, [sp, #48]
  413160:	stp	x20, x19, [sp, #64]
  413164:	mov	x29, sp
  413168:	mov	w19, w7
  41316c:	mov	w20, w6
  413170:	mov	w21, w5
  413174:	mov	w22, w4
  413178:	mov	w23, w3
  41317c:	mov	w24, w2
  413180:	mov	w26, w1
  413184:	bl	409d8c <wcrtomb@plt+0x73cc>
  413188:	ldrb	w8, [x25]
  41318c:	tbz	w0, #0, 4131a4 <wcrtomb@plt+0x107e4>
  413190:	and	w8, w8, #0xffffffdf
  413194:	cmp	w8, w26, uxtb
  413198:	b.eq	4131ac <wcrtomb@plt+0x107ec>  // b.none
  41319c:	mov	w0, wzr
  4131a0:	b	4131dc <wcrtomb@plt+0x1081c>
  4131a4:	cmp	w8, w26, uxtb
  4131a8:	b.ne	41319c <wcrtomb@plt+0x107dc>  // b.any
  4131ac:	tst	w26, #0xff
  4131b0:	b.eq	4131d8 <wcrtomb@plt+0x10818>  // b.none
  4131b4:	mov	x0, x25
  4131b8:	mov	w1, w24
  4131bc:	mov	w2, w23
  4131c0:	mov	w3, w22
  4131c4:	mov	w4, w21
  4131c8:	mov	w5, w20
  4131cc:	mov	w6, w19
  4131d0:	bl	4131f4 <wcrtomb@plt+0x10834>
  4131d4:	b	4131dc <wcrtomb@plt+0x1081c>
  4131d8:	mov	w0, #0x1                   	// #1
  4131dc:	ldp	x20, x19, [sp, #64]
  4131e0:	ldp	x22, x21, [sp, #48]
  4131e4:	ldp	x24, x23, [sp, #32]
  4131e8:	ldp	x26, x25, [sp, #16]
  4131ec:	ldp	x29, x30, [sp], #80
  4131f0:	ret
  4131f4:	stp	x29, x30, [sp, #-80]!
  4131f8:	stp	x24, x23, [sp, #32]
  4131fc:	mov	x24, x0
  413200:	and	w0, w1, #0xff
  413204:	str	x25, [sp, #16]
  413208:	stp	x22, x21, [sp, #48]
  41320c:	stp	x20, x19, [sp, #64]
  413210:	mov	x29, sp
  413214:	mov	w19, w6
  413218:	mov	w20, w5
  41321c:	mov	w21, w4
  413220:	mov	w22, w3
  413224:	mov	w23, w2
  413228:	mov	w25, w1
  41322c:	bl	409d8c <wcrtomb@plt+0x73cc>
  413230:	ldrb	w8, [x24, #1]
  413234:	tbz	w0, #0, 41324c <wcrtomb@plt+0x1088c>
  413238:	and	w8, w8, #0xffffffdf
  41323c:	cmp	w8, w25, uxtb
  413240:	b.eq	413254 <wcrtomb@plt+0x10894>  // b.none
  413244:	mov	w0, wzr
  413248:	b	413280 <wcrtomb@plt+0x108c0>
  41324c:	cmp	w8, w25, uxtb
  413250:	b.ne	413244 <wcrtomb@plt+0x10884>  // b.any
  413254:	tst	w25, #0xff
  413258:	b.eq	41327c <wcrtomb@plt+0x108bc>  // b.none
  41325c:	mov	x0, x24
  413260:	mov	w1, w23
  413264:	mov	w2, w22
  413268:	mov	w3, w21
  41326c:	mov	w4, w20
  413270:	mov	w5, w19
  413274:	bl	413298 <wcrtomb@plt+0x108d8>
  413278:	b	413280 <wcrtomb@plt+0x108c0>
  41327c:	mov	w0, #0x1                   	// #1
  413280:	ldp	x20, x19, [sp, #64]
  413284:	ldp	x22, x21, [sp, #48]
  413288:	ldp	x24, x23, [sp, #32]
  41328c:	ldr	x25, [sp, #16]
  413290:	ldp	x29, x30, [sp], #80
  413294:	ret
  413298:	stp	x29, x30, [sp, #-64]!
  41329c:	stp	x24, x23, [sp, #16]
  4132a0:	mov	x23, x0
  4132a4:	and	w0, w1, #0xff
  4132a8:	stp	x22, x21, [sp, #32]
  4132ac:	stp	x20, x19, [sp, #48]
  4132b0:	mov	x29, sp
  4132b4:	mov	w19, w5
  4132b8:	mov	w20, w4
  4132bc:	mov	w21, w3
  4132c0:	mov	w22, w2
  4132c4:	mov	w24, w1
  4132c8:	bl	409d8c <wcrtomb@plt+0x73cc>
  4132cc:	ldrb	w8, [x23, #2]
  4132d0:	tbz	w0, #0, 4132e8 <wcrtomb@plt+0x10928>
  4132d4:	and	w8, w8, #0xffffffdf
  4132d8:	cmp	w8, w24, uxtb
  4132dc:	b.eq	4132f0 <wcrtomb@plt+0x10930>  // b.none
  4132e0:	mov	w0, wzr
  4132e4:	b	413318 <wcrtomb@plt+0x10958>
  4132e8:	cmp	w8, w24, uxtb
  4132ec:	b.ne	4132e0 <wcrtomb@plt+0x10920>  // b.any
  4132f0:	tst	w24, #0xff
  4132f4:	b.eq	413314 <wcrtomb@plt+0x10954>  // b.none
  4132f8:	mov	x0, x23
  4132fc:	mov	w1, w22
  413300:	mov	w2, w21
  413304:	mov	w3, w20
  413308:	mov	w4, w19
  41330c:	bl	41332c <wcrtomb@plt+0x1096c>
  413310:	b	413318 <wcrtomb@plt+0x10958>
  413314:	mov	w0, #0x1                   	// #1
  413318:	ldp	x20, x19, [sp, #48]
  41331c:	ldp	x22, x21, [sp, #32]
  413320:	ldp	x24, x23, [sp, #16]
  413324:	ldp	x29, x30, [sp], #64
  413328:	ret
  41332c:	stp	x29, x30, [sp, #-64]!
  413330:	stp	x22, x21, [sp, #32]
  413334:	mov	x22, x0
  413338:	and	w0, w1, #0xff
  41333c:	str	x23, [sp, #16]
  413340:	stp	x20, x19, [sp, #48]
  413344:	mov	x29, sp
  413348:	mov	w19, w4
  41334c:	mov	w20, w3
  413350:	mov	w21, w2
  413354:	mov	w23, w1
  413358:	bl	409d8c <wcrtomb@plt+0x73cc>
  41335c:	ldrb	w8, [x22, #3]
  413360:	tbz	w0, #0, 413378 <wcrtomb@plt+0x109b8>
  413364:	and	w8, w8, #0xffffffdf
  413368:	cmp	w8, w23, uxtb
  41336c:	b.eq	413380 <wcrtomb@plt+0x109c0>  // b.none
  413370:	mov	w0, wzr
  413374:	b	4133a4 <wcrtomb@plt+0x109e4>
  413378:	cmp	w8, w23, uxtb
  41337c:	b.ne	413370 <wcrtomb@plt+0x109b0>  // b.any
  413380:	tst	w23, #0xff
  413384:	b.eq	4133a0 <wcrtomb@plt+0x109e0>  // b.none
  413388:	mov	x0, x22
  41338c:	mov	w1, w21
  413390:	mov	w2, w20
  413394:	mov	w3, w19
  413398:	bl	4133b8 <wcrtomb@plt+0x109f8>
  41339c:	b	4133a4 <wcrtomb@plt+0x109e4>
  4133a0:	mov	w0, #0x1                   	// #1
  4133a4:	ldp	x20, x19, [sp, #48]
  4133a8:	ldp	x22, x21, [sp, #32]
  4133ac:	ldr	x23, [sp, #16]
  4133b0:	ldp	x29, x30, [sp], #64
  4133b4:	ret
  4133b8:	stp	x29, x30, [sp, #-48]!
  4133bc:	stp	x22, x21, [sp, #16]
  4133c0:	mov	x21, x0
  4133c4:	and	w0, w1, #0xff
  4133c8:	stp	x20, x19, [sp, #32]
  4133cc:	mov	x29, sp
  4133d0:	mov	w19, w3
  4133d4:	mov	w20, w2
  4133d8:	mov	w22, w1
  4133dc:	bl	409d8c <wcrtomb@plt+0x73cc>
  4133e0:	ldrb	w8, [x21, #4]
  4133e4:	tbz	w0, #0, 4133fc <wcrtomb@plt+0x10a3c>
  4133e8:	and	w8, w8, #0xffffffdf
  4133ec:	cmp	w8, w22, uxtb
  4133f0:	b.eq	413404 <wcrtomb@plt+0x10a44>  // b.none
  4133f4:	mov	w0, wzr
  4133f8:	b	413424 <wcrtomb@plt+0x10a64>
  4133fc:	cmp	w8, w22, uxtb
  413400:	b.ne	4133f4 <wcrtomb@plt+0x10a34>  // b.any
  413404:	tst	w22, #0xff
  413408:	b.eq	413420 <wcrtomb@plt+0x10a60>  // b.none
  41340c:	mov	x0, x21
  413410:	mov	w1, w20
  413414:	mov	w2, w19
  413418:	bl	413434 <wcrtomb@plt+0x10a74>
  41341c:	b	413424 <wcrtomb@plt+0x10a64>
  413420:	mov	w0, #0x1                   	// #1
  413424:	ldp	x20, x19, [sp, #32]
  413428:	ldp	x22, x21, [sp, #16]
  41342c:	ldp	x29, x30, [sp], #48
  413430:	ret
  413434:	stp	x29, x30, [sp, #-48]!
  413438:	stp	x20, x19, [sp, #32]
  41343c:	mov	x20, x0
  413440:	and	w0, w1, #0xff
  413444:	str	x21, [sp, #16]
  413448:	mov	x29, sp
  41344c:	mov	w19, w2
  413450:	mov	w21, w1
  413454:	bl	409d8c <wcrtomb@plt+0x73cc>
  413458:	ldrb	w8, [x20, #5]
  41345c:	tbz	w0, #0, 413474 <wcrtomb@plt+0x10ab4>
  413460:	and	w8, w8, #0xffffffdf
  413464:	cmp	w8, w21, uxtb
  413468:	b.eq	41347c <wcrtomb@plt+0x10abc>  // b.none
  41346c:	mov	w0, wzr
  413470:	b	413498 <wcrtomb@plt+0x10ad8>
  413474:	cmp	w8, w21, uxtb
  413478:	b.ne	41346c <wcrtomb@plt+0x10aac>  // b.any
  41347c:	tst	w21, #0xff
  413480:	b.eq	413494 <wcrtomb@plt+0x10ad4>  // b.none
  413484:	mov	x0, x20
  413488:	mov	w1, w19
  41348c:	bl	4134a8 <wcrtomb@plt+0x10ae8>
  413490:	b	413498 <wcrtomb@plt+0x10ad8>
  413494:	mov	w0, #0x1                   	// #1
  413498:	ldp	x20, x19, [sp, #32]
  41349c:	ldr	x21, [sp, #16]
  4134a0:	ldp	x29, x30, [sp], #48
  4134a4:	ret
  4134a8:	stp	x29, x30, [sp, #-32]!
  4134ac:	stp	x20, x19, [sp, #16]
  4134b0:	mov	x19, x0
  4134b4:	and	w0, w1, #0xff
  4134b8:	mov	x29, sp
  4134bc:	mov	w20, w1
  4134c0:	bl	409d8c <wcrtomb@plt+0x73cc>
  4134c4:	ldrb	w8, [x19, #6]
  4134c8:	tbz	w0, #0, 4134e0 <wcrtomb@plt+0x10b20>
  4134cc:	and	w8, w8, #0xffffffdf
  4134d0:	cmp	w8, w20, uxtb
  4134d4:	b.eq	4134e8 <wcrtomb@plt+0x10b28>  // b.none
  4134d8:	mov	w0, wzr
  4134dc:	b	413500 <wcrtomb@plt+0x10b40>
  4134e0:	cmp	w8, w20, uxtb
  4134e4:	b.ne	4134d8 <wcrtomb@plt+0x10b18>  // b.any
  4134e8:	tst	w20, #0xff
  4134ec:	b.eq	4134fc <wcrtomb@plt+0x10b3c>  // b.none
  4134f0:	mov	x0, x19
  4134f4:	bl	41350c <wcrtomb@plt+0x10b4c>
  4134f8:	b	413500 <wcrtomb@plt+0x10b40>
  4134fc:	mov	w0, #0x1                   	// #1
  413500:	ldp	x20, x19, [sp, #16]
  413504:	ldp	x29, x30, [sp], #32
  413508:	ret
  41350c:	stp	x29, x30, [sp, #-32]!
  413510:	str	x19, [sp, #16]
  413514:	mov	x19, x0
  413518:	mov	w0, wzr
  41351c:	mov	x29, sp
  413520:	bl	409d8c <wcrtomb@plt+0x73cc>
  413524:	ldrb	w8, [x19, #7]
  413528:	tbz	w0, #0, 41353c <wcrtomb@plt+0x10b7c>
  41352c:	tst	w8, #0xffffffdf
  413530:	b.eq	413540 <wcrtomb@plt+0x10b80>  // b.none
  413534:	mov	w0, wzr
  413538:	b	413544 <wcrtomb@plt+0x10b84>
  41353c:	cbnz	w8, 413534 <wcrtomb@plt+0x10b74>
  413540:	mov	w0, #0x1                   	// #1
  413544:	ldr	x19, [sp, #16]
  413548:	ldp	x29, x30, [sp], #32
  41354c:	ret
  413550:	stp	x29, x30, [sp, #-64]!
  413554:	stp	x24, x23, [sp, #16]
  413558:	stp	x22, x21, [sp, #32]
  41355c:	stp	x20, x19, [sp, #48]
  413560:	mov	x19, x2
  413564:	mov	x20, x1
  413568:	mov	w21, w0
  41356c:	mov	w24, #0x7ff00000            	// #2146435072
  413570:	mov	x29, sp
  413574:	b	413584 <wcrtomb@plt+0x10bc4>
  413578:	mov	w8, #0x1                   	// #1
  41357c:	mov	x22, x23
  413580:	cbnz	w8, 4135dc <wcrtomb@plt+0x10c1c>
  413584:	mov	w0, w21
  413588:	mov	x1, x20
  41358c:	mov	x2, x19
  413590:	bl	402810 <read@plt>
  413594:	mov	x23, x0
  413598:	tbz	x0, #63, 413578 <wcrtomb@plt+0x10bb8>
  41359c:	bl	402930 <__errno_location@plt>
  4135a0:	ldr	w8, [x0]
  4135a4:	cmp	w8, #0x4
  4135a8:	b.ne	4135b4 <wcrtomb@plt+0x10bf4>  // b.any
  4135ac:	mov	w8, wzr
  4135b0:	b	413580 <wcrtomb@plt+0x10bc0>
  4135b4:	cmp	w8, #0x16
  4135b8:	cset	w8, eq  // eq = none
  4135bc:	cmp	x19, x24
  4135c0:	cset	w9, hi  // hi = pmore
  4135c4:	and	w10, w9, w8
  4135c8:	tst	w9, w8
  4135cc:	csel	x19, x24, x19, ne  // ne = any
  4135d0:	csel	x22, x22, x23, ne  // ne = any
  4135d4:	eor	w8, w10, #0x1
  4135d8:	b	413580 <wcrtomb@plt+0x10bc0>
  4135dc:	mov	x0, x22
  4135e0:	ldp	x20, x19, [sp, #48]
  4135e4:	ldp	x22, x21, [sp, #32]
  4135e8:	ldp	x24, x23, [sp, #16]
  4135ec:	ldp	x29, x30, [sp], #64
  4135f0:	ret
  4135f4:	stp	x29, x30, [sp, #-32]!
  4135f8:	stp	x20, x19, [sp, #16]
  4135fc:	mov	x19, x1
  413600:	mov	w1, wzr
  413604:	mov	x2, x19
  413608:	mov	x29, sp
  41360c:	mov	x20, x0
  413610:	bl	402820 <memchr@plt>
  413614:	sub	x8, x0, x20
  413618:	cmp	x0, #0x0
  41361c:	csinc	x0, x19, x8, eq  // eq = none
  413620:	ldp	x20, x19, [sp, #16]
  413624:	ldp	x29, x30, [sp], #32
  413628:	ret
  41362c:	stp	x29, x30, [sp, #-48]!
  413630:	stp	x20, x19, [sp, #32]
  413634:	mov	w19, w0
  413638:	cmp	w0, #0x2
  41363c:	stp	x22, x21, [sp, #16]
  413640:	mov	x29, sp
  413644:	b.hi	413670 <wcrtomb@plt+0x10cb0>  // b.pmore
  413648:	mov	w0, w19
  41364c:	bl	4234c8 <_obstack_memory_used@@Base+0xd094>
  413650:	mov	w20, w0
  413654:	bl	402930 <__errno_location@plt>
  413658:	ldr	w22, [x0]
  41365c:	mov	x21, x0
  413660:	mov	w0, w19
  413664:	bl	402650 <close@plt>
  413668:	mov	w19, w20
  41366c:	str	w22, [x21]
  413670:	mov	w0, w19
  413674:	ldp	x20, x19, [sp, #32]
  413678:	ldp	x22, x21, [sp, #16]
  41367c:	ldp	x29, x30, [sp], #48
  413680:	ret
  413684:	sub	sp, sp, #0x50
  413688:	stp	x22, x21, [sp, #48]
  41368c:	stp	x20, x19, [sp, #64]
  413690:	mov	x21, x5
  413694:	mov	x20, x4
  413698:	mov	x4, x3
  41369c:	mov	x3, x2
  4136a0:	mov	x19, x0
  4136a4:	stp	x29, x30, [sp, #32]
  4136a8:	add	x29, sp, #0x20
  4136ac:	cbz	x1, 4136c8 <wcrtomb@plt+0x10d08>
  4136b0:	mov	x2, x1
  4136b4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4136b8:	add	x1, x1, #0x247
  4136bc:	mov	x0, x19
  4136c0:	bl	402980 <fprintf@plt>
  4136c4:	b	4136e0 <wcrtomb@plt+0x10d20>
  4136c8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4136cc:	add	x1, x1, #0x253
  4136d0:	mov	x0, x19
  4136d4:	mov	x2, x3
  4136d8:	mov	x3, x4
  4136dc:	bl	402980 <fprintf@plt>
  4136e0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4136e4:	add	x1, x1, #0x25a
  4136e8:	mov	w2, #0x5                   	// #5
  4136ec:	mov	x0, xzr
  4136f0:	bl	402890 <dcgettext@plt>
  4136f4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4136f8:	mov	x2, x0
  4136fc:	add	x1, x1, #0x546
  413700:	mov	w3, #0x7e4                 	// #2020
  413704:	mov	x0, x19
  413708:	bl	402980 <fprintf@plt>
  41370c:	adrp	x22, 425000 <_obstack_memory_used@@Base+0xebcc>
  413710:	add	x22, x22, #0x2cc
  413714:	mov	x0, x22
  413718:	mov	x1, x19
  41371c:	bl	4028a0 <fputs_unlocked@plt>
  413720:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413724:	add	x1, x1, #0x25e
  413728:	mov	w2, #0x5                   	// #5
  41372c:	mov	x0, xzr
  413730:	bl	402890 <dcgettext@plt>
  413734:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413738:	mov	x1, x0
  41373c:	add	x2, x2, #0x309
  413740:	mov	x0, x19
  413744:	bl	402980 <fprintf@plt>
  413748:	mov	x0, x22
  41374c:	mov	x1, x19
  413750:	bl	4028a0 <fputs_unlocked@plt>
  413754:	cmp	x21, #0x9
  413758:	b.hi	41379c <wcrtomb@plt+0x10ddc>  // b.pmore
  41375c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413760:	add	x8, x8, #0x23d
  413764:	adr	x9, 413774 <wcrtomb@plt+0x10db4>
  413768:	ldrb	w10, [x8, x21]
  41376c:	add	x9, x9, x10, lsl #2
  413770:	br	x9
  413774:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413778:	add	x1, x1, #0x32b
  41377c:	mov	w2, #0x5                   	// #5
  413780:	mov	x0, xzr
  413784:	bl	402890 <dcgettext@plt>
  413788:	ldr	x2, [x20]
  41378c:	mov	x1, x0
  413790:	mov	x0, x19
  413794:	bl	402980 <fprintf@plt>
  413798:	b	41391c <wcrtomb@plt+0x10f5c>
  41379c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4137a0:	add	x1, x1, #0x46a
  4137a4:	b	4138b8 <wcrtomb@plt+0x10ef8>
  4137a8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4137ac:	add	x1, x1, #0x33b
  4137b0:	mov	w2, #0x5                   	// #5
  4137b4:	mov	x0, xzr
  4137b8:	bl	402890 <dcgettext@plt>
  4137bc:	ldp	x2, x3, [x20]
  4137c0:	mov	x1, x0
  4137c4:	mov	x0, x19
  4137c8:	bl	402980 <fprintf@plt>
  4137cc:	b	41391c <wcrtomb@plt+0x10f5c>
  4137d0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4137d4:	add	x1, x1, #0x352
  4137d8:	mov	w2, #0x5                   	// #5
  4137dc:	mov	x0, xzr
  4137e0:	bl	402890 <dcgettext@plt>
  4137e4:	ldp	x2, x3, [x20]
  4137e8:	ldr	x4, [x20, #16]
  4137ec:	mov	x1, x0
  4137f0:	mov	x0, x19
  4137f4:	bl	402980 <fprintf@plt>
  4137f8:	b	41391c <wcrtomb@plt+0x10f5c>
  4137fc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413800:	add	x1, x1, #0x36e
  413804:	mov	w2, #0x5                   	// #5
  413808:	mov	x0, xzr
  41380c:	bl	402890 <dcgettext@plt>
  413810:	ldp	x2, x3, [x20]
  413814:	ldp	x4, x5, [x20, #16]
  413818:	mov	x1, x0
  41381c:	mov	x0, x19
  413820:	bl	402980 <fprintf@plt>
  413824:	b	41391c <wcrtomb@plt+0x10f5c>
  413828:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41382c:	add	x1, x1, #0x38e
  413830:	mov	w2, #0x5                   	// #5
  413834:	mov	x0, xzr
  413838:	bl	402890 <dcgettext@plt>
  41383c:	ldp	x2, x3, [x20]
  413840:	ldp	x4, x5, [x20, #16]
  413844:	ldr	x6, [x20, #32]
  413848:	mov	x1, x0
  41384c:	mov	x0, x19
  413850:	bl	402980 <fprintf@plt>
  413854:	b	41391c <wcrtomb@plt+0x10f5c>
  413858:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41385c:	add	x1, x1, #0x3b2
  413860:	mov	w2, #0x5                   	// #5
  413864:	mov	x0, xzr
  413868:	bl	402890 <dcgettext@plt>
  41386c:	ldp	x2, x3, [x20]
  413870:	ldp	x4, x5, [x20, #16]
  413874:	ldp	x6, x7, [x20, #32]
  413878:	mov	x1, x0
  41387c:	b	413914 <wcrtomb@plt+0x10f54>
  413880:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413884:	add	x1, x1, #0x3da
  413888:	mov	w2, #0x5                   	// #5
  41388c:	mov	x0, xzr
  413890:	bl	402890 <dcgettext@plt>
  413894:	ldr	x8, [x20, #48]
  413898:	ldp	x2, x3, [x20]
  41389c:	ldp	x4, x5, [x20, #16]
  4138a0:	ldp	x6, x7, [x20, #32]
  4138a4:	mov	x1, x0
  4138a8:	str	x8, [sp]
  4138ac:	b	413914 <wcrtomb@plt+0x10f54>
  4138b0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4138b4:	add	x1, x1, #0x436
  4138b8:	mov	w2, #0x5                   	// #5
  4138bc:	mov	x0, xzr
  4138c0:	bl	402890 <dcgettext@plt>
  4138c4:	ldp	x2, x3, [x20]
  4138c8:	ldp	x4, x5, [x20, #16]
  4138cc:	ldp	x6, x7, [x20, #32]
  4138d0:	ldr	q0, [x20, #48]
  4138d4:	ldr	x8, [x20, #64]
  4138d8:	mov	x1, x0
  4138dc:	str	q0, [sp]
  4138e0:	str	x8, [sp, #16]
  4138e4:	b	413914 <wcrtomb@plt+0x10f54>
  4138e8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4138ec:	add	x1, x1, #0x406
  4138f0:	mov	w2, #0x5                   	// #5
  4138f4:	mov	x0, xzr
  4138f8:	bl	402890 <dcgettext@plt>
  4138fc:	ldp	x8, x9, [x20, #48]
  413900:	ldp	x2, x3, [x20]
  413904:	ldp	x4, x5, [x20, #16]
  413908:	ldp	x6, x7, [x20, #32]
  41390c:	mov	x1, x0
  413910:	stp	x8, x9, [sp]
  413914:	mov	x0, x19
  413918:	bl	402980 <fprintf@plt>
  41391c:	ldp	x20, x19, [sp, #64]
  413920:	ldp	x22, x21, [sp, #48]
  413924:	ldp	x29, x30, [sp, #32]
  413928:	add	sp, sp, #0x50
  41392c:	ret
  413930:	stp	x29, x30, [sp, #-16]!
  413934:	mov	x8, xzr
  413938:	mov	x29, sp
  41393c:	ldr	x9, [x4, x8, lsl #3]
  413940:	add	x8, x8, #0x1
  413944:	cbnz	x9, 41393c <wcrtomb@plt+0x10f7c>
  413948:	sub	x5, x8, #0x1
  41394c:	bl	413684 <wcrtomb@plt+0x10cc4>
  413950:	ldp	x29, x30, [sp], #16
  413954:	ret
  413958:	sub	sp, sp, #0x60
  41395c:	mov	x5, xzr
  413960:	mov	x8, sp
  413964:	stp	x29, x30, [sp, #80]
  413968:	add	x29, sp, #0x50
  41396c:	ldrsw	x9, [x4, #24]
  413970:	tbz	w9, #31, 413984 <wcrtomb@plt+0x10fc4>
  413974:	add	w10, w9, #0x8
  413978:	cmp	w10, #0x0
  41397c:	str	w10, [x4, #24]
  413980:	b.le	4139ac <wcrtomb@plt+0x10fec>
  413984:	ldr	x9, [x4]
  413988:	add	x10, x9, #0x8
  41398c:	str	x10, [x4]
  413990:	ldr	x9, [x9]
  413994:	str	x9, [x8, x5, lsl #3]
  413998:	cbz	x9, 4139b8 <wcrtomb@plt+0x10ff8>
  41399c:	add	x5, x5, #0x1
  4139a0:	cmp	x5, #0xa
  4139a4:	b.ne	41396c <wcrtomb@plt+0x10fac>  // b.any
  4139a8:	b	4139b8 <wcrtomb@plt+0x10ff8>
  4139ac:	ldr	x10, [x4, #8]
  4139b0:	add	x9, x10, x9
  4139b4:	b	413990 <wcrtomb@plt+0x10fd0>
  4139b8:	mov	x4, sp
  4139bc:	bl	413684 <wcrtomb@plt+0x10cc4>
  4139c0:	ldp	x29, x30, [sp, #80]
  4139c4:	add	sp, sp, #0x60
  4139c8:	ret
  4139cc:	sub	sp, sp, #0xf0
  4139d0:	stp	x29, x30, [sp, #224]
  4139d4:	add	x29, sp, #0xe0
  4139d8:	mov	x8, #0xffffffffffffffe0    	// #-32
  4139dc:	mov	x9, sp
  4139e0:	sub	x10, x29, #0x60
  4139e4:	movk	x8, #0xff80, lsl #32
  4139e8:	add	x11, x29, #0x10
  4139ec:	add	x9, x9, #0x80
  4139f0:	add	x10, x10, #0x20
  4139f4:	stp	x9, x8, [x29, #-16]
  4139f8:	stp	x11, x10, [x29, #-32]
  4139fc:	stp	x4, x5, [x29, #-96]
  413a00:	stp	x6, x7, [x29, #-80]
  413a04:	stp	q0, q1, [sp]
  413a08:	ldp	q0, q1, [x29, #-32]
  413a0c:	sub	x4, x29, #0x40
  413a10:	stp	q2, q3, [sp, #32]
  413a14:	stp	q4, q5, [sp, #64]
  413a18:	stp	q6, q7, [sp, #96]
  413a1c:	stp	q0, q1, [x29, #-64]
  413a20:	bl	413958 <wcrtomb@plt+0x10f98>
  413a24:	ldp	x29, x30, [sp, #224]
  413a28:	add	sp, sp, #0xf0
  413a2c:	ret
  413a30:	stp	x29, x30, [sp, #-16]!
  413a34:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  413a38:	ldr	x1, [x8, #1128]
  413a3c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xebcc>
  413a40:	add	x0, x0, #0x2cc
  413a44:	mov	x29, sp
  413a48:	bl	4028a0 <fputs_unlocked@plt>
  413a4c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413a50:	add	x1, x1, #0x4a6
  413a54:	mov	w2, #0x5                   	// #5
  413a58:	mov	x0, xzr
  413a5c:	bl	402890 <dcgettext@plt>
  413a60:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413a64:	add	x1, x1, #0x4ba
  413a68:	bl	402910 <printf@plt>
  413a6c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413a70:	add	x1, x1, #0x4cb
  413a74:	mov	w2, #0x5                   	// #5
  413a78:	mov	x0, xzr
  413a7c:	bl	402890 <dcgettext@plt>
  413a80:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  413a84:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413a88:	add	x1, x1, #0x4d3
  413a8c:	add	x2, x2, #0x4df
  413a90:	bl	402910 <printf@plt>
  413a94:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413a98:	add	x1, x1, #0x502
  413a9c:	mov	w2, #0x5                   	// #5
  413aa0:	mov	x0, xzr
  413aa4:	bl	402890 <dcgettext@plt>
  413aa8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413aac:	add	x1, x1, #0x529
  413ab0:	bl	402910 <printf@plt>
  413ab4:	ldp	x29, x30, [sp], #16
  413ab8:	ret
  413abc:	stp	x29, x30, [sp, #-16]!
  413ac0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  413ac4:	udiv	x8, x8, x1
  413ac8:	cmp	x8, x0
  413acc:	mov	x29, sp
  413ad0:	b.cc	413ae4 <wcrtomb@plt+0x11124>  // b.lo, b.ul, b.last
  413ad4:	mul	x0, x1, x0
  413ad8:	bl	413ae8 <wcrtomb@plt+0x11128>
  413adc:	ldp	x29, x30, [sp], #16
  413ae0:	ret
  413ae4:	bl	413cd0 <wcrtomb@plt+0x11310>
  413ae8:	stp	x29, x30, [sp, #-32]!
  413aec:	str	x19, [sp, #16]
  413af0:	mov	x29, sp
  413af4:	mov	x19, x0
  413af8:	bl	4024e0 <malloc@plt>
  413afc:	cbz	x19, 413b04 <wcrtomb@plt+0x11144>
  413b00:	cbz	x0, 413b10 <wcrtomb@plt+0x11150>
  413b04:	ldr	x19, [sp, #16]
  413b08:	ldp	x29, x30, [sp], #32
  413b0c:	ret
  413b10:	bl	413cd0 <wcrtomb@plt+0x11310>
  413b14:	stp	x29, x30, [sp, #-16]!
  413b18:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  413b1c:	udiv	x8, x8, x2
  413b20:	cmp	x8, x1
  413b24:	mov	x29, sp
  413b28:	b.cc	413b3c <wcrtomb@plt+0x1117c>  // b.lo, b.ul, b.last
  413b2c:	mul	x1, x2, x1
  413b30:	bl	413b40 <wcrtomb@plt+0x11180>
  413b34:	ldp	x29, x30, [sp], #16
  413b38:	ret
  413b3c:	bl	413cd0 <wcrtomb@plt+0x11310>
  413b40:	stp	x29, x30, [sp, #-32]!
  413b44:	str	x19, [sp, #16]
  413b48:	mov	x19, x1
  413b4c:	mov	x29, sp
  413b50:	cbz	x0, 413b64 <wcrtomb@plt+0x111a4>
  413b54:	cbnz	x19, 413b64 <wcrtomb@plt+0x111a4>
  413b58:	bl	402770 <free@plt>
  413b5c:	mov	x0, xzr
  413b60:	b	413b74 <wcrtomb@plt+0x111b4>
  413b64:	mov	x1, x19
  413b68:	bl	402610 <realloc@plt>
  413b6c:	cbz	x19, 413b74 <wcrtomb@plt+0x111b4>
  413b70:	cbz	x0, 413b80 <wcrtomb@plt+0x111c0>
  413b74:	ldr	x19, [sp, #16]
  413b78:	ldp	x29, x30, [sp], #32
  413b7c:	ret
  413b80:	bl	413cd0 <wcrtomb@plt+0x11310>
  413b84:	stp	x29, x30, [sp, #-16]!
  413b88:	ldr	x8, [x1]
  413b8c:	mov	x29, sp
  413b90:	cbz	x0, 413bb4 <wcrtomb@plt+0x111f4>
  413b94:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  413b98:	movk	x9, #0x5554
  413b9c:	udiv	x9, x9, x2
  413ba0:	cmp	x9, x8
  413ba4:	b.ls	413bec <wcrtomb@plt+0x1122c>  // b.plast
  413ba8:	add	x8, x8, x8, lsr #1
  413bac:	add	x8, x8, #0x1
  413bb0:	b	413bd8 <wcrtomb@plt+0x11218>
  413bb4:	cbnz	x8, 413bc8 <wcrtomb@plt+0x11208>
  413bb8:	mov	w8, #0x80                  	// #128
  413bbc:	udiv	x8, x8, x2
  413bc0:	cmp	x2, #0x80
  413bc4:	cinc	x8, x8, hi  // hi = pmore
  413bc8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  413bcc:	udiv	x9, x9, x2
  413bd0:	cmp	x9, x8
  413bd4:	b.cc	413bec <wcrtomb@plt+0x1122c>  // b.lo, b.ul, b.last
  413bd8:	str	x8, [x1]
  413bdc:	mul	x1, x8, x2
  413be0:	bl	413b40 <wcrtomb@plt+0x11180>
  413be4:	ldp	x29, x30, [sp], #16
  413be8:	ret
  413bec:	bl	413cd0 <wcrtomb@plt+0x11310>
  413bf0:	stp	x29, x30, [sp, #-16]!
  413bf4:	mov	x29, sp
  413bf8:	bl	413ae8 <wcrtomb@plt+0x11128>
  413bfc:	ldp	x29, x30, [sp], #16
  413c00:	ret
  413c04:	stp	x29, x30, [sp, #-16]!
  413c08:	mov	w2, #0x1                   	// #1
  413c0c:	mov	x29, sp
  413c10:	bl	413b84 <wcrtomb@plt+0x111c4>
  413c14:	ldp	x29, x30, [sp], #16
  413c18:	ret
  413c1c:	stp	x29, x30, [sp, #-16]!
  413c20:	mov	w1, #0x1                   	// #1
  413c24:	mov	x29, sp
  413c28:	bl	413c34 <wcrtomb@plt+0x11274>
  413c2c:	ldp	x29, x30, [sp], #16
  413c30:	ret
  413c34:	stp	x29, x30, [sp, #-16]!
  413c38:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  413c3c:	udiv	x8, x8, x1
  413c40:	cmp	x8, x0
  413c44:	mov	x29, sp
  413c48:	b.cc	413c5c <wcrtomb@plt+0x1129c>  // b.lo, b.ul, b.last
  413c4c:	bl	4025d0 <calloc@plt>
  413c50:	cbz	x0, 413c5c <wcrtomb@plt+0x1129c>
  413c54:	ldp	x29, x30, [sp], #16
  413c58:	ret
  413c5c:	bl	413cd0 <wcrtomb@plt+0x11310>
  413c60:	stp	x29, x30, [sp, #-48]!
  413c64:	stp	x20, x19, [sp, #32]
  413c68:	mov	x20, x0
  413c6c:	mov	x0, x1
  413c70:	str	x21, [sp, #16]
  413c74:	mov	x29, sp
  413c78:	mov	x19, x1
  413c7c:	bl	413ae8 <wcrtomb@plt+0x11128>
  413c80:	mov	x1, x20
  413c84:	mov	x2, x19
  413c88:	mov	x21, x0
  413c8c:	bl	402320 <memcpy@plt>
  413c90:	mov	x0, x21
  413c94:	ldp	x20, x19, [sp, #32]
  413c98:	ldr	x21, [sp, #16]
  413c9c:	ldp	x29, x30, [sp], #48
  413ca0:	ret
  413ca4:	stp	x29, x30, [sp, #-32]!
  413ca8:	str	x19, [sp, #16]
  413cac:	mov	x29, sp
  413cb0:	mov	x19, x0
  413cb4:	bl	402380 <strlen@plt>
  413cb8:	add	x1, x0, #0x1
  413cbc:	mov	x0, x19
  413cc0:	bl	413c60 <wcrtomb@plt+0x112a0>
  413cc4:	ldr	x19, [sp, #16]
  413cc8:	ldp	x29, x30, [sp], #32
  413ccc:	ret
  413cd0:	stp	x29, x30, [sp, #-32]!
  413cd4:	str	x19, [sp, #16]
  413cd8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  413cdc:	ldr	w19, [x8, #992]
  413ce0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413ce4:	add	x1, x1, #0x575
  413ce8:	mov	w2, #0x5                   	// #5
  413cec:	mov	x0, xzr
  413cf0:	mov	x29, sp
  413cf4:	bl	402890 <dcgettext@plt>
  413cf8:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  413cfc:	mov	x3, x0
  413d00:	add	x2, x2, #0x91d
  413d04:	mov	w0, w19
  413d08:	mov	w1, wzr
  413d0c:	bl	4023b0 <error@plt>
  413d10:	bl	4026c0 <abort@plt>
  413d14:	sub	sp, sp, #0x60
  413d18:	cmp	w2, #0x25
  413d1c:	stp	x29, x30, [sp, #16]
  413d20:	str	x25, [sp, #32]
  413d24:	stp	x24, x23, [sp, #48]
  413d28:	stp	x22, x21, [sp, #64]
  413d2c:	stp	x20, x19, [sp, #80]
  413d30:	add	x29, sp, #0x10
  413d34:	b.cs	413fb4 <wcrtomb@plt+0x115f4>  // b.hs, b.nlast
  413d38:	cmp	x1, #0x0
  413d3c:	add	x8, x29, #0x18
  413d40:	mov	x22, x4
  413d44:	mov	x19, x3
  413d48:	mov	w23, w2
  413d4c:	mov	x20, x0
  413d50:	csel	x21, x8, x1, eq  // eq = none
  413d54:	bl	402930 <__errno_location@plt>
  413d58:	mov	x24, x0
  413d5c:	str	wzr, [x0]
  413d60:	mov	x0, x20
  413d64:	mov	x1, x21
  413d68:	mov	w2, w23
  413d6c:	bl	4023d0 <strtoimax@plt>
  413d70:	str	x0, [sp, #8]
  413d74:	ldr	x25, [x21]
  413d78:	cmp	x25, x20
  413d7c:	b.eq	413e24 <wcrtomb@plt+0x11464>  // b.none
  413d80:	ldr	w20, [x24]
  413d84:	cbz	w20, 413d94 <wcrtomb@plt+0x113d4>
  413d88:	cmp	w20, #0x22
  413d8c:	b.ne	413e54 <wcrtomb@plt+0x11494>  // b.any
  413d90:	mov	w20, #0x1                   	// #1
  413d94:	cbz	x22, 413e4c <wcrtomb@plt+0x1148c>
  413d98:	ldrb	w23, [x25]
  413d9c:	cbz	w23, 413e5c <wcrtomb@plt+0x1149c>
  413da0:	mov	x0, x22
  413da4:	mov	w1, w23
  413da8:	bl	402790 <strchr@plt>
  413dac:	cbz	x0, 413eb0 <wcrtomb@plt+0x114f0>
  413db0:	sub	w8, w23, #0x45
  413db4:	mov	w1, #0x400                 	// #1024
  413db8:	cmp	w8, #0x2f
  413dbc:	mov	w24, #0x1                   	// #1
  413dc0:	b.hi	413e78 <wcrtomb@plt+0x114b8>  // b.pmore
  413dc4:	mov	w9, #0x1                   	// #1
  413dc8:	lsl	x8, x9, x8
  413dcc:	mov	x9, #0x8945                	// #35141
  413dd0:	movk	x9, #0x30, lsl #16
  413dd4:	movk	x9, #0x8144, lsl #32
  413dd8:	tst	x8, x9
  413ddc:	b.eq	413e78 <wcrtomb@plt+0x114b8>  // b.none
  413de0:	mov	w1, #0x30                  	// #48
  413de4:	mov	x0, x22
  413de8:	bl	402790 <strchr@plt>
  413dec:	cbz	x0, 413e64 <wcrtomb@plt+0x114a4>
  413df0:	ldrb	w8, [x25, #1]
  413df4:	cmp	w8, #0x42
  413df8:	b.eq	413e70 <wcrtomb@plt+0x114b0>  // b.none
  413dfc:	cmp	w8, #0x44
  413e00:	b.eq	413e70 <wcrtomb@plt+0x114b0>  // b.none
  413e04:	cmp	w8, #0x69
  413e08:	b.ne	413e64 <wcrtomb@plt+0x114a4>  // b.any
  413e0c:	ldrb	w8, [x25, #2]
  413e10:	mov	w9, #0x3                   	// #3
  413e14:	mov	w1, #0x400                 	// #1024
  413e18:	cmp	w8, #0x42
  413e1c:	csinc	x24, x9, xzr, eq  // eq = none
  413e20:	b	413e78 <wcrtomb@plt+0x114b8>
  413e24:	cbz	x22, 413e54 <wcrtomb@plt+0x11494>
  413e28:	ldrb	w1, [x25]
  413e2c:	cbz	w1, 413e54 <wcrtomb@plt+0x11494>
  413e30:	mov	x0, x22
  413e34:	bl	402790 <strchr@plt>
  413e38:	cbz	x0, 413e54 <wcrtomb@plt+0x11494>
  413e3c:	mov	w8, #0x1                   	// #1
  413e40:	mov	w20, wzr
  413e44:	str	x8, [sp, #8]
  413e48:	cbnz	x22, 413d98 <wcrtomb@plt+0x113d8>
  413e4c:	ldr	x8, [sp, #8]
  413e50:	b	413f90 <wcrtomb@plt+0x115d0>
  413e54:	mov	w20, #0x4                   	// #4
  413e58:	b	413f94 <wcrtomb@plt+0x115d4>
  413e5c:	mov	w0, w20
  413e60:	b	413f88 <wcrtomb@plt+0x115c8>
  413e64:	mov	w1, #0x400                 	// #1024
  413e68:	mov	w24, #0x1                   	// #1
  413e6c:	b	413e78 <wcrtomb@plt+0x114b8>
  413e70:	mov	w1, #0x3e8                 	// #1000
  413e74:	mov	w24, #0x2                   	// #2
  413e78:	sub	w8, w23, #0x42
  413e7c:	cmp	w8, #0x35
  413e80:	b.hi	413eb0 <wcrtomb@plt+0x114f0>  // b.pmore
  413e84:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413e88:	add	x9, x9, #0x586
  413e8c:	adr	x10, 413ea0 <wcrtomb@plt+0x114e0>
  413e90:	ldrb	w11, [x9, x8]
  413e94:	add	x10, x10, x11, lsl #2
  413e98:	mov	w0, wzr
  413e9c:	br	x10
  413ea0:	add	x0, sp, #0x8
  413ea4:	mov	w2, #0x3                   	// #3
  413ea8:	bl	414018 <wcrtomb@plt+0x11658>
  413eac:	b	413f58 <wcrtomb@plt+0x11598>
  413eb0:	ldr	x9, [sp, #8]
  413eb4:	mov	w8, wzr
  413eb8:	str	x9, [x19]
  413ebc:	orr	w9, w20, #0x2
  413ec0:	b	413f7c <wcrtomb@plt+0x115bc>
  413ec4:	add	x0, sp, #0x8
  413ec8:	mov	w2, #0x1                   	// #1
  413ecc:	bl	414018 <wcrtomb@plt+0x11658>
  413ed0:	b	413f58 <wcrtomb@plt+0x11598>
  413ed4:	add	x0, sp, #0x8
  413ed8:	mov	w2, #0x2                   	// #2
  413edc:	bl	414018 <wcrtomb@plt+0x11658>
  413ee0:	b	413f58 <wcrtomb@plt+0x11598>
  413ee4:	add	x0, sp, #0x8
  413ee8:	mov	w2, #0x4                   	// #4
  413eec:	bl	414018 <wcrtomb@plt+0x11658>
  413ef0:	b	413f58 <wcrtomb@plt+0x11598>
  413ef4:	add	x0, sp, #0x8
  413ef8:	mov	w1, #0x400                 	// #1024
  413efc:	b	413f54 <wcrtomb@plt+0x11594>
  413f00:	add	x0, sp, #0x8
  413f04:	mov	w2, #0x6                   	// #6
  413f08:	bl	414018 <wcrtomb@plt+0x11658>
  413f0c:	b	413f58 <wcrtomb@plt+0x11598>
  413f10:	add	x0, sp, #0x8
  413f14:	mov	w2, #0x5                   	// #5
  413f18:	bl	414018 <wcrtomb@plt+0x11658>
  413f1c:	b	413f58 <wcrtomb@plt+0x11598>
  413f20:	add	x0, sp, #0x8
  413f24:	mov	w2, #0x8                   	// #8
  413f28:	bl	414018 <wcrtomb@plt+0x11658>
  413f2c:	b	413f58 <wcrtomb@plt+0x11598>
  413f30:	add	x0, sp, #0x8
  413f34:	mov	w2, #0x7                   	// #7
  413f38:	bl	414018 <wcrtomb@plt+0x11658>
  413f3c:	b	413f58 <wcrtomb@plt+0x11598>
  413f40:	add	x0, sp, #0x8
  413f44:	mov	w1, #0x200                 	// #512
  413f48:	b	413f54 <wcrtomb@plt+0x11594>
  413f4c:	add	x0, sp, #0x8
  413f50:	mov	w1, #0x2                   	// #2
  413f54:	bl	413fd4 <wcrtomb@plt+0x11614>
  413f58:	ldr	x8, [x21]
  413f5c:	add	x9, x8, x24
  413f60:	str	x9, [x21]
  413f64:	ldrb	w8, [x8, x24]
  413f68:	orr	w9, w0, w20
  413f6c:	orr	w10, w9, #0x2
  413f70:	cmp	w8, #0x0
  413f74:	csel	w20, w9, w10, eq  // eq = none
  413f78:	mov	w8, #0x1                   	// #1
  413f7c:	mov	w0, w20
  413f80:	mov	w20, w9
  413f84:	cbz	w8, 413f94 <wcrtomb@plt+0x115d4>
  413f88:	ldr	x8, [sp, #8]
  413f8c:	mov	w20, w0
  413f90:	str	x8, [x19]
  413f94:	mov	w0, w20
  413f98:	ldp	x20, x19, [sp, #80]
  413f9c:	ldp	x22, x21, [sp, #64]
  413fa0:	ldp	x24, x23, [sp, #48]
  413fa4:	ldr	x25, [sp, #32]
  413fa8:	ldp	x29, x30, [sp, #16]
  413fac:	add	sp, sp, #0x60
  413fb0:	ret
  413fb4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413fb8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413fbc:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xfbcc>
  413fc0:	add	x0, x0, #0x5bc
  413fc4:	add	x1, x1, #0x5e2
  413fc8:	add	x3, x3, #0x5ee
  413fcc:	mov	w2, #0x54                  	// #84
  413fd0:	bl	402920 <__assert_fail@plt>
  413fd4:	ldr	x8, [x0]
  413fd8:	sxtw	x10, w1
  413fdc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413fe0:	sdiv	x11, x9, x10
  413fe4:	cmp	x8, x11
  413fe8:	b.ge	413ff4 <wcrtomb@plt+0x11634>  // b.tcont
  413fec:	mov	w8, #0x1                   	// #1
  413ff0:	b	41400c <wcrtomb@plt+0x1164c>
  413ff4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  413ff8:	mul	x11, x8, x10
  413ffc:	sdiv	x10, x9, x10
  414000:	cmp	x10, x8
  414004:	cset	w8, lt  // lt = tstop
  414008:	csel	x9, x9, x11, lt  // lt = tstop
  41400c:	str	x9, [x0]
  414010:	mov	w0, w8
  414014:	ret
  414018:	stp	x29, x30, [sp, #-48]!
  41401c:	stp	x22, x21, [sp, #16]
  414020:	stp	x20, x19, [sp, #32]
  414024:	mov	x29, sp
  414028:	cbz	w2, 414058 <wcrtomb@plt+0x11698>
  41402c:	mov	w19, w2
  414030:	mov	w20, w1
  414034:	mov	x21, x0
  414038:	mov	w22, wzr
  41403c:	mov	x0, x21
  414040:	mov	w1, w20
  414044:	sub	w19, w19, #0x1
  414048:	bl	413fd4 <wcrtomb@plt+0x11614>
  41404c:	orr	w22, w0, w22
  414050:	cbnz	w19, 41403c <wcrtomb@plt+0x1167c>
  414054:	b	41405c <wcrtomb@plt+0x1169c>
  414058:	mov	w22, wzr
  41405c:	mov	w0, w22
  414060:	ldp	x20, x19, [sp, #32]
  414064:	ldp	x22, x21, [sp, #16]
  414068:	ldp	x29, x30, [sp], #48
  41406c:	ret
  414070:	stp	x29, x30, [sp, #-16]!
  414074:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  414078:	add	x0, x0, #0x63c
  41407c:	mov	x29, sp
  414080:	bl	402950 <getenv@plt>
  414084:	cbz	x0, 41409c <wcrtomb@plt+0x116dc>
  414088:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41408c:	add	x1, x1, #0x641
  414090:	bl	402750 <strcmp@plt>
  414094:	cmp	w0, #0x0
  414098:	cset	w0, ne  // ne = any
  41409c:	ldp	x29, x30, [sp], #16
  4140a0:	ret
  4140a4:	ret
  4140a8:	stp	x29, x30, [sp, #-16]!
  4140ac:	mov	x29, sp
  4140b0:	bl	402910 <printf@plt>
  4140b4:	ldp	x29, x30, [sp], #16
  4140b8:	ret
  4140bc:	stp	x29, x30, [sp, #-16]!
  4140c0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4140c4:	ldr	x1, [x8, #1128]
  4140c8:	mov	x29, sp
  4140cc:	bl	402390 <fputs@plt>
  4140d0:	ldp	x29, x30, [sp], #16
  4140d4:	ret
  4140d8:	stp	x29, x30, [sp, #-96]!
  4140dc:	cmp	w1, #0x1, lsl #12
  4140e0:	stp	x28, x27, [sp, #16]
  4140e4:	stp	x26, x25, [sp, #32]
  4140e8:	stp	x24, x23, [sp, #48]
  4140ec:	stp	x22, x21, [sp, #64]
  4140f0:	stp	x20, x19, [sp, #80]
  4140f4:	mov	x29, sp
  4140f8:	b.cs	4141ac <wcrtomb@plt+0x117ec>  // b.hs, b.nlast
  4140fc:	mov	w8, #0x204                 	// #516
  414100:	mov	w22, w1
  414104:	bics	wzr, w8, w1
  414108:	b.eq	4141ac <wcrtomb@plt+0x117ec>  // b.none
  41410c:	mov	w8, #0x12                  	// #18
  414110:	tst	w22, w8
  414114:	b.eq	4141ac <wcrtomb@plt+0x117ec>  // b.none
  414118:	mov	x23, x0
  41411c:	mov	w0, #0x1                   	// #1
  414120:	mov	w1, #0x80                  	// #128
  414124:	mov	x20, x2
  414128:	bl	4025d0 <calloc@plt>
  41412c:	mov	x19, x0
  414130:	cbz	x0, 4141bc <wcrtomb@plt+0x117fc>
  414134:	and	w8, w22, #0xfffffdff
  414138:	tst	w22, #0x2
  41413c:	orr	w8, w8, #0x4
  414140:	mov	w9, #0xffffff9c            	// #-100
  414144:	csel	w8, w22, w8, eq  // eq = none
  414148:	mov	x0, x23
  41414c:	str	x20, [x19, #64]
  414150:	str	w8, [x19, #72]
  414154:	str	w9, [x19, #44]
  414158:	bl	4143ec <wcrtomb@plt+0x11a2c>
  41415c:	cmp	x0, #0x1, lsl #12
  414160:	mov	w8, #0x1000                	// #4096
  414164:	csel	x1, x0, x8, hi  // hi = pmore
  414168:	mov	x0, x19
  41416c:	bl	414438 <wcrtomb@plt+0x11a78>
  414170:	tbz	w0, #0, 4143d8 <wcrtomb@plt+0x11a18>
  414174:	ldr	x8, [x23]
  414178:	cbz	x8, 4141dc <wcrtomb@plt+0x1181c>
  41417c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  414180:	add	x1, x1, #0x2cd
  414184:	mov	x0, x19
  414188:	mov	x2, xzr
  41418c:	bl	4144b4 <wcrtomb@plt+0x11af4>
  414190:	cbz	x0, 4143d0 <wcrtomb@plt+0x11a10>
  414194:	mov	x21, x0
  414198:	mov	x8, #0xffffffffffffffff    	// #-1
  41419c:	mov	w9, #0xffffffff            	// #-1
  4141a0:	str	x8, [x0, #88]
  4141a4:	str	w9, [x0, #104]
  4141a8:	b	4141e0 <wcrtomb@plt+0x11820>
  4141ac:	bl	402930 <__errno_location@plt>
  4141b0:	mov	w8, #0x16                  	// #22
  4141b4:	mov	x19, xzr
  4141b8:	str	w8, [x0]
  4141bc:	mov	x0, x19
  4141c0:	ldp	x20, x19, [sp, #80]
  4141c4:	ldp	x22, x21, [sp, #64]
  4141c8:	ldp	x24, x23, [sp, #48]
  4141cc:	ldp	x26, x25, [sp, #32]
  4141d0:	ldp	x28, x27, [sp, #16]
  4141d4:	ldp	x29, x30, [sp], #96
  4141d8:	ret
  4141dc:	mov	x21, xzr
  4141e0:	cbz	x20, 4141f0 <wcrtomb@plt+0x11830>
  4141e4:	ldrb	w8, [x19, #73]
  4141e8:	ubfx	w8, w8, #2, #1
  4141ec:	b	4141f4 <wcrtomb@plt+0x11834>
  4141f0:	mov	w8, #0x1                   	// #1
  4141f4:	ldr	x26, [x23]
  4141f8:	cbz	x26, 414310 <wcrtomb@plt+0x11950>
  4141fc:	mov	x24, xzr
  414200:	mov	x28, xzr
  414204:	mov	x25, xzr
  414208:	eor	w27, w8, #0x1
  41420c:	mov	x0, x26
  414210:	bl	402380 <strlen@plt>
  414214:	mov	x2, x0
  414218:	tbnz	w22, #11, 414254 <wcrtomb@plt+0x11894>
  41421c:	cmp	x2, #0x3
  414220:	b.cc	414254 <wcrtomb@plt+0x11894>  // b.lo, b.ul, b.last
  414224:	add	x8, x2, x26
  414228:	ldurb	w8, [x8, #-1]
  41422c:	cmp	w8, #0x2f
  414230:	b.ne	414254 <wcrtomb@plt+0x11894>  // b.any
  414234:	sub	x8, x26, #0x2
  414238:	ldrb	w9, [x8, x2]
  41423c:	cmp	w9, #0x2f
  414240:	b.ne	414254 <wcrtomb@plt+0x11894>  // b.any
  414244:	sub	x2, x2, #0x1
  414248:	cmp	x2, #0x1
  41424c:	b.hi	414238 <wcrtomb@plt+0x11878>  // b.pmore
  414250:	mov	w2, #0x1                   	// #1
  414254:	mov	x0, x19
  414258:	mov	x1, x26
  41425c:	bl	4144b4 <wcrtomb@plt+0x11af4>
  414260:	cbz	x0, 4142b4 <wcrtomb@plt+0x118f4>
  414264:	cmp	x24, #0x0
  414268:	cset	w9, eq  // eq = none
  41426c:	mov	x26, x0
  414270:	add	x8, x0, #0xf8
  414274:	orr	w9, w27, w9
  414278:	str	xzr, [x0, #88]
  41427c:	str	x21, [x0, #8]
  414280:	str	x8, [x0, #48]
  414284:	tbnz	w9, #0, 4142c0 <wcrtomb@plt+0x11900>
  414288:	mov	w8, #0xb                   	// #11
  41428c:	mov	w1, #0x1                   	// #1
  414290:	mov	x0, x26
  414294:	strh	w8, [x26, #108]
  414298:	bl	41453c <wcrtomb@plt+0x11b7c>
  41429c:	cbz	x20, 4142d8 <wcrtomb@plt+0x11918>
  4142a0:	mov	w8, wzr
  4142a4:	str	x24, [x26, #16]
  4142a8:	mov	x24, x26
  4142ac:	cbz	w8, 414300 <wcrtomb@plt+0x11940>
  4142b0:	b	4143b8 <wcrtomb@plt+0x119f8>
  4142b4:	mov	w8, #0x9                   	// #9
  4142b8:	cbz	w8, 414300 <wcrtomb@plt+0x11940>
  4142bc:	b	4143b8 <wcrtomb@plt+0x119f8>
  4142c0:	mov	x0, x19
  4142c4:	mov	x1, x26
  4142c8:	mov	w2, wzr
  4142cc:	bl	41456c <wcrtomb@plt+0x11bac>
  4142d0:	strh	w0, [x26, #108]
  4142d4:	cbnz	x20, 4142a0 <wcrtomb@plt+0x118e0>
  4142d8:	mov	w8, wzr
  4142dc:	str	xzr, [x26, #16]
  4142e0:	cbz	x24, 4142f4 <wcrtomb@plt+0x11934>
  4142e4:	str	x26, [x28, #16]
  4142e8:	mov	x28, x26
  4142ec:	cbz	w8, 414300 <wcrtomb@plt+0x11940>
  4142f0:	b	4143b8 <wcrtomb@plt+0x119f8>
  4142f4:	mov	x28, x26
  4142f8:	mov	x24, x26
  4142fc:	cbnz	w8, 4143b8 <wcrtomb@plt+0x119f8>
  414300:	ldr	x26, [x23, #8]!
  414304:	add	x25, x25, #0x1
  414308:	cbnz	x26, 41420c <wcrtomb@plt+0x1184c>
  41430c:	b	414318 <wcrtomb@plt+0x11958>
  414310:	mov	x25, xzr
  414314:	mov	x24, xzr
  414318:	cbz	x20, 414338 <wcrtomb@plt+0x11978>
  41431c:	cmp	x25, #0x2
  414320:	b.cc	414338 <wcrtomb@plt+0x11978>  // b.lo, b.ul, b.last
  414324:	mov	x0, x19
  414328:	mov	x1, x24
  41432c:	mov	x2, x25
  414330:	bl	4146f4 <wcrtomb@plt+0x11d34>
  414334:	mov	x24, x0
  414338:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41433c:	add	x1, x1, #0x2cd
  414340:	mov	x0, x19
  414344:	mov	x2, xzr
  414348:	bl	4144b4 <wcrtomb@plt+0x11af4>
  41434c:	str	x0, [x19]
  414350:	cbz	x0, 4143c0 <wcrtomb@plt+0x11a00>
  414354:	mov	w8, #0x9                   	// #9
  414358:	mov	w9, #0x1                   	// #1
  41435c:	str	x24, [x0, #16]
  414360:	strh	w8, [x0, #108]
  414364:	str	x9, [x0, #88]
  414368:	mov	x0, x19
  41436c:	bl	4147cc <wcrtomb@plt+0x11e0c>
  414370:	tbz	w0, #0, 4143c0 <wcrtomb@plt+0x11a00>
  414374:	ldrh	w8, [x19, #72]
  414378:	mov	w9, #0x204                 	// #516
  41437c:	tst	w8, w9
  414380:	b.ne	4143a8 <wcrtomb@plt+0x119e8>  // b.any
  414384:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  414388:	add	x1, x1, #0x689
  41438c:	mov	x0, x19
  414390:	bl	414840 <wcrtomb@plt+0x11e80>
  414394:	str	w0, [x19, #40]
  414398:	tbz	w0, #31, 4143a8 <wcrtomb@plt+0x119e8>
  41439c:	ldr	w8, [x19, #72]
  4143a0:	orr	w8, w8, #0x4
  4143a4:	str	w8, [x19, #72]
  4143a8:	add	x0, x19, #0x60
  4143ac:	mov	w1, #0xffffffff            	// #-1
  4143b0:	bl	4231c4 <_obstack_memory_used@@Base+0xcd90>
  4143b4:	b	4141bc <wcrtomb@plt+0x117fc>
  4143b8:	cmp	w8, #0x9
  4143bc:	b.ne	4143e8 <wcrtomb@plt+0x11a28>  // b.any
  4143c0:	mov	x0, x24
  4143c4:	bl	414884 <wcrtomb@plt+0x11ec4>
  4143c8:	mov	x0, x21
  4143cc:	bl	402770 <free@plt>
  4143d0:	ldr	x0, [x19, #32]
  4143d4:	bl	402770 <free@plt>
  4143d8:	mov	x0, x19
  4143dc:	bl	402770 <free@plt>
  4143e0:	mov	x19, xzr
  4143e4:	b	4141bc <wcrtomb@plt+0x117fc>
  4143e8:	b	4141bc <wcrtomb@plt+0x117fc>
  4143ec:	stp	x29, x30, [sp, #-32]!
  4143f0:	stp	x20, x19, [sp, #16]
  4143f4:	ldr	x8, [x0]
  4143f8:	mov	x29, sp
  4143fc:	cbz	x8, 414428 <wcrtomb@plt+0x11a68>
  414400:	mov	x19, xzr
  414404:	add	x20, x0, #0x8
  414408:	mov	x0, x8
  41440c:	bl	402380 <strlen@plt>
  414410:	ldr	x8, [x20], #8
  414414:	cmp	x0, x19
  414418:	csel	x19, x0, x19, hi  // hi = pmore
  41441c:	cbnz	x8, 414408 <wcrtomb@plt+0x11a48>
  414420:	add	x0, x19, #0x1
  414424:	b	41442c <wcrtomb@plt+0x11a6c>
  414428:	mov	w0, #0x1                   	// #1
  41442c:	ldp	x20, x19, [sp, #16]
  414430:	ldp	x29, x30, [sp], #32
  414434:	ret
  414438:	stp	x29, x30, [sp, #-32]!
  41443c:	ldr	x8, [x0, #48]
  414440:	add	x9, x1, #0x100
  414444:	str	x19, [sp, #16]
  414448:	mov	x19, x0
  41444c:	adds	x1, x9, x8
  414450:	mov	x29, sp
  414454:	b.cc	41447c <wcrtomb@plt+0x11abc>  // b.lo, b.ul, b.last
  414458:	ldr	x0, [x19, #32]
  41445c:	bl	402770 <free@plt>
  414460:	str	xzr, [x19, #32]
  414464:	bl	402930 <__errno_location@plt>
  414468:	mov	x8, x0
  41446c:	mov	w9, #0x24                  	// #36
  414470:	mov	w0, wzr
  414474:	str	w9, [x8]
  414478:	b	4144a8 <wcrtomb@plt+0x11ae8>
  41447c:	ldr	x0, [x19, #32]
  414480:	str	x1, [x19, #48]
  414484:	bl	402610 <realloc@plt>
  414488:	cbz	x0, 414498 <wcrtomb@plt+0x11ad8>
  41448c:	str	x0, [x19, #32]
  414490:	mov	w0, #0x1                   	// #1
  414494:	b	4144a8 <wcrtomb@plt+0x11ae8>
  414498:	ldr	x0, [x19, #32]
  41449c:	bl	402770 <free@plt>
  4144a0:	mov	w0, wzr
  4144a4:	str	xzr, [x19, #32]
  4144a8:	ldr	x19, [sp, #16]
  4144ac:	ldp	x29, x30, [sp], #32
  4144b0:	ret
  4144b4:	stp	x29, x30, [sp, #-64]!
  4144b8:	add	x8, x2, #0x100
  4144bc:	stp	x20, x19, [sp, #48]
  4144c0:	mov	x20, x0
  4144c4:	and	x0, x8, #0xfffffffffffffff8
  4144c8:	str	x23, [sp, #16]
  4144cc:	stp	x22, x21, [sp, #32]
  4144d0:	mov	x29, sp
  4144d4:	mov	x21, x2
  4144d8:	mov	x22, x1
  4144dc:	bl	4024e0 <malloc@plt>
  4144e0:	mov	x19, x0
  4144e4:	cbz	x0, 414524 <wcrtomb@plt+0x11b64>
  4144e8:	add	x23, x19, #0xf8
  4144ec:	mov	x0, x23
  4144f0:	mov	x1, x22
  4144f4:	mov	x2, x21
  4144f8:	bl	402320 <memcpy@plt>
  4144fc:	strb	wzr, [x23, x21]
  414500:	str	x21, [x19, #96]
  414504:	str	x20, [x19, #80]
  414508:	ldr	x9, [x20, #32]
  41450c:	mov	w8, #0x30000               	// #196608
  414510:	str	wzr, [x19, #64]
  414514:	stur	w8, [x19, #110]
  414518:	stp	xzr, xzr, [x19, #24]
  41451c:	str	x9, [x19, #56]
  414520:	str	xzr, [x19, #40]
  414524:	mov	x0, x19
  414528:	ldp	x20, x19, [sp, #48]
  41452c:	ldp	x22, x21, [sp, #32]
  414530:	ldr	x23, [sp, #16]
  414534:	ldp	x29, x30, [sp], #64
  414538:	ret
  41453c:	stp	x29, x30, [sp, #-16]!
  414540:	ldrh	w8, [x0, #108]
  414544:	mov	x29, sp
  414548:	cmp	w8, #0xb
  41454c:	b.ne	414568 <wcrtomb@plt+0x11ba8>  // b.any
  414550:	tst	w1, #0x1
  414554:	mov	w8, #0x1                   	// #1
  414558:	cinc	x8, x8, ne  // ne = any
  41455c:	str	x8, [x0, #168]
  414560:	ldp	x29, x30, [sp], #16
  414564:	ret
  414568:	bl	4026c0 <abort@plt>
  41456c:	stp	x29, x30, [sp, #-48]!
  414570:	stp	x20, x19, [sp, #32]
  414574:	ldr	x8, [x1, #88]
  414578:	str	x21, [sp, #16]
  41457c:	mov	x19, x1
  414580:	mov	x21, x0
  414584:	mov	x29, sp
  414588:	cbz	x8, 414598 <wcrtomb@plt+0x11bd8>
  41458c:	add	x20, x19, #0x78
  414590:	tbz	w2, #0, 4145ac <wcrtomb@plt+0x11bec>
  414594:	b	4145d8 <wcrtomb@plt+0x11c18>
  414598:	ldrb	w8, [x21, #72]
  41459c:	and	w8, w8, #0x1
  4145a0:	orr	w2, w8, w2
  4145a4:	add	x20, x19, #0x78
  4145a8:	tbnz	w2, #0, 4145d8 <wcrtomb@plt+0x11c18>
  4145ac:	ldr	w8, [x21, #72]
  4145b0:	tbnz	w8, #1, 4145d8 <wcrtomb@plt+0x11c18>
  4145b4:	ldr	w0, [x21, #44]
  4145b8:	ldr	x1, [x19, #48]
  4145bc:	mov	w3, #0x100                 	// #256
  4145c0:	mov	x2, x20
  4145c4:	bl	423870 <_obstack_memory_used@@Base+0xd43c>
  4145c8:	cbz	w0, 41463c <wcrtomb@plt+0x11c7c>
  4145cc:	bl	402930 <__errno_location@plt>
  4145d0:	mov	x21, x0
  4145d4:	b	41460c <wcrtomb@plt+0x11c4c>
  4145d8:	ldr	x0, [x19, #48]
  4145dc:	mov	x1, x20
  4145e0:	bl	423840 <_obstack_memory_used@@Base+0xd40c>
  4145e4:	cbz	w0, 41463c <wcrtomb@plt+0x11c7c>
  4145e8:	bl	402930 <__errno_location@plt>
  4145ec:	ldr	w8, [x0]
  4145f0:	mov	x21, x0
  4145f4:	cmp	w8, #0x2
  4145f8:	b.ne	41460c <wcrtomb@plt+0x11c4c>  // b.any
  4145fc:	ldr	x0, [x19, #48]
  414600:	mov	x1, x20
  414604:	bl	423860 <_obstack_memory_used@@Base+0xd42c>
  414608:	cbz	w0, 4146d4 <wcrtomb@plt+0x11d14>
  41460c:	ldr	w8, [x21]
  414610:	movi	v0.2d, #0x0
  414614:	mov	w0, #0xa                   	// #10
  414618:	str	w8, [x19, #64]
  41461c:	stp	q0, q0, [x20, #96]
  414620:	stp	q0, q0, [x20, #64]
  414624:	stp	q0, q0, [x20, #32]
  414628:	stp	q0, q0, [x20]
  41462c:	ldp	x20, x19, [sp, #32]
  414630:	ldr	x21, [sp, #16]
  414634:	ldp	x29, x30, [sp], #48
  414638:	ret
  41463c:	ldr	w8, [x19, #136]
  414640:	and	w8, w8, #0xf000
  414644:	cmp	w8, #0xa, lsl #12
  414648:	b.eq	414688 <wcrtomb@plt+0x11cc8>  // b.none
  41464c:	cmp	w8, #0x8, lsl #12
  414650:	b.eq	414690 <wcrtomb@plt+0x11cd0>  // b.none
  414654:	cmp	w8, #0x4, lsl #12
  414658:	b.ne	414698 <wcrtomb@plt+0x11cd8>  // b.any
  41465c:	ldr	w8, [x19, #140]
  414660:	cmp	w8, #0x2
  414664:	b.cc	4146a0 <wcrtomb@plt+0x11ce0>  // b.lo, b.ul, b.last
  414668:	ldr	x9, [x19, #88]
  41466c:	cmp	x9, #0x1
  414670:	b.lt	4146a0 <wcrtomb@plt+0x11ce0>  // b.tstop
  414674:	ldr	w9, [x21, #72]
  414678:	mov	w10, #0x2                   	// #2
  41467c:	bic	w9, w10, w9, lsr #4
  414680:	sub	w8, w8, w9
  414684:	b	4146a4 <wcrtomb@plt+0x11ce4>
  414688:	mov	w0, #0xc                   	// #12
  41468c:	b	41462c <wcrtomb@plt+0x11c6c>
  414690:	mov	w0, #0x8                   	// #8
  414694:	b	41462c <wcrtomb@plt+0x11c6c>
  414698:	mov	w0, #0x3                   	// #3
  41469c:	b	41462c <wcrtomb@plt+0x11c6c>
  4146a0:	mov	w8, #0xffffffff            	// #-1
  4146a4:	ldrb	w9, [x19, #248]
  4146a8:	str	w8, [x19, #104]
  4146ac:	cmp	w9, #0x2e
  4146b0:	b.ne	4146cc <wcrtomb@plt+0x11d0c>  // b.any
  4146b4:	ldrb	w8, [x19, #249]
  4146b8:	cbz	w8, 4146e0 <wcrtomb@plt+0x11d20>
  4146bc:	cmp	w8, #0x2e
  4146c0:	b.ne	4146cc <wcrtomb@plt+0x11d0c>  // b.any
  4146c4:	ldrb	w8, [x19, #250]
  4146c8:	cbz	w8, 4146e0 <wcrtomb@plt+0x11d20>
  4146cc:	mov	w0, #0x1                   	// #1
  4146d0:	b	41462c <wcrtomb@plt+0x11c6c>
  4146d4:	str	wzr, [x21]
  4146d8:	mov	w0, #0xd                   	// #13
  4146dc:	b	41462c <wcrtomb@plt+0x11c6c>
  4146e0:	ldr	x8, [x19, #88]
  4146e4:	cmp	x8, #0x0
  4146e8:	mov	w8, #0x5                   	// #5
  4146ec:	csinc	w0, w8, wzr, ne  // ne = any
  4146f0:	b	41462c <wcrtomb@plt+0x11c6c>
  4146f4:	stp	x29, x30, [sp, #-48]!
  4146f8:	stp	x22, x21, [sp, #16]
  4146fc:	stp	x20, x19, [sp, #32]
  414700:	ldp	x8, x22, [x0, #56]
  414704:	mov	x20, x0
  414708:	mov	x21, x2
  41470c:	mov	x19, x1
  414710:	cmp	x8, x2
  414714:	mov	x29, sp
  414718:	b.cs	414740 <wcrtomb@plt+0x11d80>  // b.hs, b.nlast
  41471c:	add	x8, x21, #0x28
  414720:	lsr	x9, x8, #61
  414724:	str	x8, [x20, #56]
  414728:	cbnz	x9, 414798 <wcrtomb@plt+0x11dd8>
  41472c:	ldr	x0, [x20, #16]
  414730:	lsl	x1, x8, #3
  414734:	bl	402610 <realloc@plt>
  414738:	cbz	x0, 414798 <wcrtomb@plt+0x11dd8>
  41473c:	str	x0, [x20, #16]
  414740:	cbz	x19, 414754 <wcrtomb@plt+0x11d94>
  414744:	ldr	x8, [x20, #16]
  414748:	str	x19, [x8], #8
  41474c:	ldr	x19, [x19, #16]
  414750:	cbnz	x19, 414748 <wcrtomb@plt+0x11d88>
  414754:	ldr	x0, [x20, #16]
  414758:	mov	w2, #0x8                   	// #8
  41475c:	mov	x1, x21
  414760:	mov	x3, x22
  414764:	bl	402420 <qsort@plt>
  414768:	ldr	x10, [x20, #16]
  41476c:	subs	x9, x21, #0x1
  414770:	ldr	x19, [x10]
  414774:	b.eq	4147ac <wcrtomb@plt+0x11dec>  // b.none
  414778:	mov	x8, x10
  41477c:	ldr	x11, [x8, #8]!
  414780:	ldr	x10, [x10]
  414784:	subs	x9, x9, #0x1
  414788:	str	x11, [x10, #16]
  41478c:	mov	x10, x8
  414790:	b.ne	41477c <wcrtomb@plt+0x11dbc>  // b.any
  414794:	b	4147b0 <wcrtomb@plt+0x11df0>
  414798:	ldr	x0, [x20, #16]
  41479c:	bl	402770 <free@plt>
  4147a0:	str	xzr, [x20, #16]
  4147a4:	str	xzr, [x20, #56]
  4147a8:	b	4147b8 <wcrtomb@plt+0x11df8>
  4147ac:	mov	x8, x10
  4147b0:	ldr	x8, [x8]
  4147b4:	str	xzr, [x8, #16]
  4147b8:	mov	x0, x19
  4147bc:	ldp	x20, x19, [sp, #32]
  4147c0:	ldp	x22, x21, [sp, #16]
  4147c4:	ldp	x29, x30, [sp], #48
  4147c8:	ret
  4147cc:	stp	x29, x30, [sp, #-32]!
  4147d0:	ldrh	w8, [x0, #72]
  4147d4:	mov	w9, #0x102                 	// #258
  4147d8:	str	x19, [sp, #16]
  4147dc:	mov	x19, x0
  4147e0:	tst	w8, w9
  4147e4:	mov	x29, sp
  4147e8:	b.eq	41481c <wcrtomb@plt+0x11e5c>  // b.none
  4147ec:	adrp	x2, 415000 <wcrtomb@plt+0x12640>
  4147f0:	adrp	x3, 415000 <wcrtomb@plt+0x12640>
  4147f4:	adrp	x4, 402000 <mbrtowc@plt-0x310>
  4147f8:	add	x2, x2, #0xdd8
  4147fc:	add	x3, x3, #0xde8
  414800:	add	x4, x4, #0x770
  414804:	mov	w0, #0x1f                  	// #31
  414808:	mov	x1, xzr
  41480c:	bl	410b98 <wcrtomb@plt+0xe1d8>
  414810:	str	x0, [x19, #88]
  414814:	cbnz	x0, 414830 <wcrtomb@plt+0x11e70>
  414818:	b	414834 <wcrtomb@plt+0x11e74>
  41481c:	mov	w0, #0x20                  	// #32
  414820:	bl	4024e0 <malloc@plt>
  414824:	str	x0, [x19, #88]
  414828:	cbz	x0, 414834 <wcrtomb@plt+0x11e74>
  41482c:	bl	422f40 <_obstack_memory_used@@Base+0xcb0c>
  414830:	mov	w0, #0x1                   	// #1
  414834:	ldr	x19, [sp, #16]
  414838:	ldp	x29, x30, [sp], #32
  41483c:	ret
  414840:	stp	x29, x30, [sp, #-16]!
  414844:	ldr	w8, [x0, #72]
  414848:	mov	w2, #0x4900                	// #18688
  41484c:	movk	w2, #0x8, lsl #16
  414850:	mov	x29, sp
  414854:	lsr	w9, w8, #4
  414858:	bfi	w2, w9, #15, #1
  41485c:	tbnz	w8, #9, 414874 <wcrtomb@plt+0x11eb4>
  414860:	mov	x0, x1
  414864:	mov	w1, w2
  414868:	bl	4230b4 <_obstack_memory_used@@Base+0xcc80>
  41486c:	ldp	x29, x30, [sp], #16
  414870:	ret
  414874:	ldr	w0, [x0, #44]
  414878:	bl	411ab8 <wcrtomb@plt+0xf0f8>
  41487c:	ldp	x29, x30, [sp], #16
  414880:	ret
  414884:	stp	x29, x30, [sp, #-32]!
  414888:	stp	x20, x19, [sp, #16]
  41488c:	mov	x29, sp
  414890:	cbz	x0, 4148bc <wcrtomb@plt+0x11efc>
  414894:	mov	x19, x0
  414898:	b	4148ac <wcrtomb@plt+0x11eec>
  41489c:	mov	x0, x19
  4148a0:	bl	402770 <free@plt>
  4148a4:	mov	x19, x20
  4148a8:	cbz	x20, 4148bc <wcrtomb@plt+0x11efc>
  4148ac:	ldp	x20, x0, [x19, #16]
  4148b0:	cbz	x0, 41489c <wcrtomb@plt+0x11edc>
  4148b4:	bl	402630 <closedir@plt>
  4148b8:	b	41489c <wcrtomb@plt+0x11edc>
  4148bc:	ldp	x20, x19, [sp, #16]
  4148c0:	ldp	x29, x30, [sp], #32
  4148c4:	ret
  4148c8:	stp	x29, x30, [sp, #-32]!
  4148cc:	stp	x20, x19, [sp, #16]
  4148d0:	mov	x19, x0
  4148d4:	ldr	x0, [x0]
  4148d8:	mov	x29, sp
  4148dc:	cbz	x0, 4148f4 <wcrtomb@plt+0x11f34>
  4148e0:	ldr	x8, [x0, #88]
  4148e4:	tbz	x8, #63, 414944 <wcrtomb@plt+0x11f84>
  4148e8:	mov	x20, x0
  4148ec:	mov	x0, x20
  4148f0:	bl	402770 <free@plt>
  4148f4:	ldr	x0, [x19, #8]
  4148f8:	cbz	x0, 414900 <wcrtomb@plt+0x11f40>
  4148fc:	bl	414884 <wcrtomb@plt+0x11ec4>
  414900:	ldr	x0, [x19, #16]
  414904:	bl	402770 <free@plt>
  414908:	ldr	x0, [x19, #32]
  41490c:	bl	402770 <free@plt>
  414910:	ldr	w8, [x19, #72]
  414914:	tbnz	w8, #9, 414954 <wcrtomb@plt+0x11f94>
  414918:	tbnz	w8, #2, 414964 <wcrtomb@plt+0x11fa4>
  41491c:	ldr	w0, [x19, #40]
  414920:	bl	4023c0 <fchdir@plt>
  414924:	cbz	w0, 41496c <wcrtomb@plt+0x11fac>
  414928:	bl	402930 <__errno_location@plt>
  41492c:	ldr	w20, [x0]
  414930:	b	414970 <wcrtomb@plt+0x11fb0>
  414934:	bl	402770 <free@plt>
  414938:	ldr	x8, [x20, #88]
  41493c:	mov	x0, x20
  414940:	tbnz	x8, #63, 4148ec <wcrtomb@plt+0x11f2c>
  414944:	ldr	x20, [x0, #16]
  414948:	cbnz	x20, 414934 <wcrtomb@plt+0x11f74>
  41494c:	ldr	x20, [x0, #8]
  414950:	b	414934 <wcrtomb@plt+0x11f74>
  414954:	ldr	w0, [x19, #44]
  414958:	tbnz	w0, #31, 414964 <wcrtomb@plt+0x11fa4>
  41495c:	bl	402650 <close@plt>
  414960:	cbnz	w0, 414980 <wcrtomb@plt+0x11fc0>
  414964:	mov	w20, wzr
  414968:	b	414988 <wcrtomb@plt+0x11fc8>
  41496c:	mov	w20, wzr
  414970:	ldr	w0, [x19, #40]
  414974:	bl	402650 <close@plt>
  414978:	cbnz	w20, 414988 <wcrtomb@plt+0x11fc8>
  41497c:	cbz	w0, 414988 <wcrtomb@plt+0x11fc8>
  414980:	bl	402930 <__errno_location@plt>
  414984:	ldr	w20, [x0]
  414988:	add	x0, x19, #0x60
  41498c:	bl	4149d0 <wcrtomb@plt+0x12010>
  414990:	ldr	x0, [x19, #80]
  414994:	cbz	x0, 41499c <wcrtomb@plt+0x11fdc>
  414998:	bl	410e4c <wcrtomb@plt+0xe48c>
  41499c:	mov	x0, x19
  4149a0:	bl	414a10 <wcrtomb@plt+0x12050>
  4149a4:	mov	x0, x19
  4149a8:	bl	402770 <free@plt>
  4149ac:	cbz	w20, 4149c0 <wcrtomb@plt+0x12000>
  4149b0:	bl	402930 <__errno_location@plt>
  4149b4:	str	w20, [x0]
  4149b8:	mov	w0, #0xffffffff            	// #-1
  4149bc:	b	4149c4 <wcrtomb@plt+0x12004>
  4149c0:	mov	w0, wzr
  4149c4:	ldp	x20, x19, [sp, #16]
  4149c8:	ldp	x29, x30, [sp], #32
  4149cc:	ret
  4149d0:	stp	x29, x30, [sp, #-32]!
  4149d4:	str	x19, [sp, #16]
  4149d8:	mov	x19, x0
  4149dc:	mov	x29, sp
  4149e0:	b	4149e8 <wcrtomb@plt+0x12028>
  4149e4:	mov	x0, x19
  4149e8:	bl	4231ec <_obstack_memory_used@@Base+0xcdb8>
  4149ec:	tbnz	w0, #0, 414a04 <wcrtomb@plt+0x12044>
  4149f0:	mov	x0, x19
  4149f4:	bl	42323c <_obstack_memory_used@@Base+0xce08>
  4149f8:	tbnz	w0, #31, 4149e4 <wcrtomb@plt+0x12024>
  4149fc:	bl	402650 <close@plt>
  414a00:	b	4149e4 <wcrtomb@plt+0x12024>
  414a04:	ldr	x19, [sp, #16]
  414a08:	ldp	x29, x30, [sp], #32
  414a0c:	ret
  414a10:	stp	x29, x30, [sp, #-16]!
  414a14:	ldrh	w8, [x0, #72]
  414a18:	mov	w9, #0x102                 	// #258
  414a1c:	mov	x29, sp
  414a20:	tst	w8, w9
  414a24:	b.eq	414a3c <wcrtomb@plt+0x1207c>  // b.none
  414a28:	ldr	x0, [x0, #88]
  414a2c:	cbz	x0, 414a44 <wcrtomb@plt+0x12084>
  414a30:	bl	410e4c <wcrtomb@plt+0xe48c>
  414a34:	ldp	x29, x30, [sp], #16
  414a38:	ret
  414a3c:	ldr	x0, [x0, #88]
  414a40:	bl	402770 <free@plt>
  414a44:	ldp	x29, x30, [sp], #16
  414a48:	ret
  414a4c:	stp	x29, x30, [sp, #-48]!
  414a50:	stp	x20, x19, [sp, #32]
  414a54:	ldr	x20, [x0]
  414a58:	str	x21, [sp, #16]
  414a5c:	mov	x29, sp
  414a60:	cbz	x20, 414dc8 <wcrtomb@plt+0x12408>
  414a64:	ldr	w8, [x0, #72]
  414a68:	mov	x19, x0
  414a6c:	tbnz	w8, #13, 414dc4 <wcrtomb@plt+0x12404>
  414a70:	ldrh	w9, [x20, #112]
  414a74:	mov	w10, #0x3                   	// #3
  414a78:	strh	w10, [x20, #112]
  414a7c:	cmp	w9, #0x2
  414a80:	b.eq	414aa4 <wcrtomb@plt+0x120e4>  // b.none
  414a84:	cmp	w9, #0x1
  414a88:	b.ne	414b04 <wcrtomb@plt+0x12144>  // b.any
  414a8c:	mov	x0, x19
  414a90:	mov	x1, x20
  414a94:	mov	w2, wzr
  414a98:	bl	41456c <wcrtomb@plt+0x11bac>
  414a9c:	strh	w0, [x20, #108]
  414aa0:	b	414dc8 <wcrtomb@plt+0x12408>
  414aa4:	ldrh	w10, [x20, #108]
  414aa8:	and	w10, w10, #0xfffe
  414aac:	cmp	w10, #0xc
  414ab0:	b.ne	414b04 <wcrtomb@plt+0x12144>  // b.any
  414ab4:	mov	w2, #0x1                   	// #1
  414ab8:	mov	x0, x19
  414abc:	mov	x1, x20
  414ac0:	bl	41456c <wcrtomb@plt+0x11bac>
  414ac4:	and	w8, w0, #0xffff
  414ac8:	cmp	w8, #0x1
  414acc:	strh	w0, [x20, #108]
  414ad0:	b.ne	414e98 <wcrtomb@plt+0x124d8>  // b.any
  414ad4:	ldrb	w8, [x19, #72]
  414ad8:	tbnz	w8, #2, 414e98 <wcrtomb@plt+0x124d8>
  414adc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  414ae0:	add	x1, x1, #0x689
  414ae4:	mov	x0, x19
  414ae8:	bl	414840 <wcrtomb@plt+0x11e80>
  414aec:	str	w0, [x20, #68]
  414af0:	tbnz	w0, #31, 414cfc <wcrtomb@plt+0x1233c>
  414af4:	ldrh	w8, [x20, #110]
  414af8:	orr	w8, w8, #0x2
  414afc:	strh	w8, [x20, #110]
  414b00:	b	414e98 <wcrtomb@plt+0x124d8>
  414b04:	ldrh	w10, [x20, #108]
  414b08:	cmp	w10, #0x1
  414b0c:	b.ne	414b50 <wcrtomb@plt+0x12190>  // b.any
  414b10:	cmp	w9, #0x4
  414b14:	b.ne	414be4 <wcrtomb@plt+0x12224>  // b.any
  414b18:	ldrb	w8, [x20, #110]
  414b1c:	tbz	w8, #1, 414b28 <wcrtomb@plt+0x12168>
  414b20:	ldr	w0, [x20, #68]
  414b24:	bl	402650 <close@plt>
  414b28:	ldr	x0, [x19, #8]
  414b2c:	cbz	x0, 414b38 <wcrtomb@plt+0x12178>
  414b30:	bl	414884 <wcrtomb@plt+0x11ec4>
  414b34:	str	xzr, [x19, #8]
  414b38:	mov	w8, #0x6                   	// #6
  414b3c:	strh	w8, [x20, #108]
  414b40:	mov	x0, x19
  414b44:	mov	x1, x20
  414b48:	bl	414fc8 <wcrtomb@plt+0x12608>
  414b4c:	b	414dc8 <wcrtomb@plt+0x12408>
  414b50:	ldr	x21, [x20, #16]
  414b54:	cbnz	x21, 414b68 <wcrtomb@plt+0x121a8>
  414b58:	ldr	x8, [x20, #8]
  414b5c:	ldr	x9, [x8, #24]
  414b60:	cbnz	x9, 414c8c <wcrtomb@plt+0x122cc>
  414b64:	cbz	x21, 414d1c <wcrtomb@plt+0x1235c>
  414b68:	mov	x0, x20
  414b6c:	str	x21, [x19]
  414b70:	bl	402770 <free@plt>
  414b74:	ldr	x8, [x21, #88]
  414b78:	cbz	x8, 414c6c <wcrtomb@plt+0x122ac>
  414b7c:	ldrh	w8, [x21, #112]
  414b80:	mov	x20, x21
  414b84:	cmp	w8, #0x4
  414b88:	b.eq	414b50 <wcrtomb@plt+0x12190>  // b.none
  414b8c:	cmp	w8, #0x2
  414b90:	b.ne	414e58 <wcrtomb@plt+0x12498>  // b.any
  414b94:	mov	w2, #0x1                   	// #1
  414b98:	mov	x0, x19
  414b9c:	mov	x1, x21
  414ba0:	bl	41456c <wcrtomb@plt+0x11bac>
  414ba4:	and	w8, w0, #0xffff
  414ba8:	cmp	w8, #0x1
  414bac:	strh	w0, [x21, #108]
  414bb0:	b.ne	414e50 <wcrtomb@plt+0x12490>  // b.any
  414bb4:	ldrb	w8, [x19, #72]
  414bb8:	tbnz	w8, #2, 414e50 <wcrtomb@plt+0x12490>
  414bbc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  414bc0:	add	x1, x1, #0x689
  414bc4:	mov	x0, x19
  414bc8:	bl	414840 <wcrtomb@plt+0x11e80>
  414bcc:	str	w0, [x21, #68]
  414bd0:	tbnz	w0, #31, 414e3c <wcrtomb@plt+0x1247c>
  414bd4:	ldrh	w8, [x21, #110]
  414bd8:	orr	w8, w8, #0x2
  414bdc:	strh	w8, [x21, #110]
  414be0:	b	414e50 <wcrtomb@plt+0x12490>
  414be4:	tbz	w8, #6, 414bf8 <wcrtomb@plt+0x12238>
  414be8:	ldr	x9, [x20, #120]
  414bec:	ldr	x10, [x19, #24]
  414bf0:	cmp	x9, x10
  414bf4:	b.ne	414b18 <wcrtomb@plt+0x12158>  // b.any
  414bf8:	tbz	w8, #12, 414c14 <wcrtomb@plt+0x12254>
  414bfc:	ldr	x0, [x19, #8]
  414c00:	cbz	x0, 414c14 <wcrtomb@plt+0x12254>
  414c04:	and	w8, w8, #0xffffefff
  414c08:	str	w8, [x19, #72]
  414c0c:	bl	414884 <wcrtomb@plt+0x11ec4>
  414c10:	str	xzr, [x19, #8]
  414c14:	ldr	x8, [x19, #8]
  414c18:	cbz	x8, 414cbc <wcrtomb@plt+0x122fc>
  414c1c:	ldr	x3, [x20, #48]
  414c20:	mov	w2, #0xffffffff            	// #-1
  414c24:	mov	x0, x19
  414c28:	mov	x1, x20
  414c2c:	bl	41506c <wcrtomb@plt+0x126ac>
  414c30:	cbz	w0, 414cd0 <wcrtomb@plt+0x12310>
  414c34:	bl	402930 <__errno_location@plt>
  414c38:	ldr	w8, [x0]
  414c3c:	ldrh	w9, [x20, #110]
  414c40:	str	w8, [x20, #64]
  414c44:	orr	w8, w9, #0x1
  414c48:	strh	w8, [x20, #110]
  414c4c:	ldr	x8, [x19, #8]
  414c50:	cbz	x8, 414cd0 <wcrtomb@plt+0x12310>
  414c54:	ldr	x9, [x8, #8]
  414c58:	ldr	x9, [x9, #48]
  414c5c:	str	x9, [x8, #48]
  414c60:	ldr	x8, [x8, #16]
  414c64:	cbnz	x8, 414c54 <wcrtomb@plt+0x12294>
  414c68:	b	414cd0 <wcrtomb@plt+0x12310>
  414c6c:	mov	x0, x19
  414c70:	bl	415978 <wcrtomb@plt+0x12fb8>
  414c74:	cbz	w0, 414cdc <wcrtomb@plt+0x1231c>
  414c78:	ldr	w8, [x19, #72]
  414c7c:	mov	x20, xzr
  414c80:	orr	w8, w8, #0x2000
  414c84:	str	w8, [x19, #72]
  414c88:	b	414dc8 <wcrtomb@plt+0x12408>
  414c8c:	str	x8, [x19]
  414c90:	ldr	x9, [x19, #32]
  414c94:	ldr	x8, [x8, #72]
  414c98:	mov	w1, #0x3                   	// #3
  414c9c:	mov	x0, x19
  414ca0:	strb	wzr, [x9, x8]
  414ca4:	bl	415208 <wcrtomb@plt+0x12848>
  414ca8:	cbz	x0, 414d14 <wcrtomb@plt+0x12354>
  414cac:	mov	x21, x0
  414cb0:	mov	x0, x20
  414cb4:	bl	402770 <free@plt>
  414cb8:	b	414e58 <wcrtomb@plt+0x12498>
  414cbc:	mov	w1, #0x3                   	// #3
  414cc0:	mov	x0, x19
  414cc4:	bl	415208 <wcrtomb@plt+0x12848>
  414cc8:	str	x0, [x19, #8]
  414ccc:	cbz	x0, 414da0 <wcrtomb@plt+0x123e0>
  414cd0:	ldr	x21, [x19, #8]
  414cd4:	str	xzr, [x19, #8]
  414cd8:	b	414e58 <wcrtomb@plt+0x12498>
  414cdc:	mov	x0, x19
  414ce0:	bl	414a10 <wcrtomb@plt+0x12050>
  414ce4:	mov	x0, x19
  414ce8:	mov	x1, x21
  414cec:	bl	4159d4 <wcrtomb@plt+0x13014>
  414cf0:	mov	x0, x19
  414cf4:	bl	4147cc <wcrtomb@plt+0x11e0c>
  414cf8:	b	414e94 <wcrtomb@plt+0x124d4>
  414cfc:	bl	402930 <__errno_location@plt>
  414d00:	ldr	w8, [x0]
  414d04:	mov	w9, #0x7                   	// #7
  414d08:	strh	w9, [x20, #108]
  414d0c:	str	w8, [x20, #64]
  414d10:	b	414e98 <wcrtomb@plt+0x124d8>
  414d14:	ldrb	w8, [x19, #73]
  414d18:	tbnz	w8, #5, 414dc4 <wcrtomb@plt+0x12404>
  414d1c:	ldr	x21, [x20, #8]
  414d20:	mov	x0, x20
  414d24:	str	x21, [x19]
  414d28:	bl	402770 <free@plt>
  414d2c:	ldr	x8, [x21, #88]
  414d30:	cmn	x8, #0x1
  414d34:	b.eq	414d84 <wcrtomb@plt+0x123c4>  // b.none
  414d38:	ldrh	w8, [x21, #108]
  414d3c:	cmp	w8, #0xb
  414d40:	b.eq	414fc4 <wcrtomb@plt+0x12604>  // b.none
  414d44:	ldr	x8, [x19, #32]
  414d48:	ldr	x9, [x21, #72]
  414d4c:	strb	wzr, [x8, x9]
  414d50:	ldr	x8, [x21, #88]
  414d54:	cbz	x8, 414ddc <wcrtomb@plt+0x1241c>
  414d58:	ldrh	w8, [x21, #110]
  414d5c:	tbnz	w8, #1, 414e04 <wcrtomb@plt+0x12444>
  414d60:	tbnz	w8, #0, 414f84 <wcrtomb@plt+0x125c4>
  414d64:	ldr	x1, [x21, #8]
  414d68:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xfbcc>
  414d6c:	add	x3, x3, #0x688
  414d70:	mov	w2, #0xffffffff            	// #-1
  414d74:	mov	x0, x19
  414d78:	bl	41506c <wcrtomb@plt+0x126ac>
  414d7c:	cbnz	w0, 414de8 <wcrtomb@plt+0x12428>
  414d80:	b	414f84 <wcrtomb@plt+0x125c4>
  414d84:	mov	x0, x21
  414d88:	bl	402770 <free@plt>
  414d8c:	bl	402930 <__errno_location@plt>
  414d90:	mov	x20, xzr
  414d94:	str	wzr, [x0]
  414d98:	str	xzr, [x19]
  414d9c:	b	414dc8 <wcrtomb@plt+0x12408>
  414da0:	ldrb	w8, [x19, #73]
  414da4:	tbnz	w8, #5, 414dc4 <wcrtomb@plt+0x12404>
  414da8:	ldr	w8, [x20, #64]
  414dac:	cbz	w8, 414b40 <wcrtomb@plt+0x12180>
  414db0:	ldrh	w8, [x20, #108]
  414db4:	cmp	w8, #0x4
  414db8:	b.eq	414b40 <wcrtomb@plt+0x12180>  // b.none
  414dbc:	mov	w8, #0x7                   	// #7
  414dc0:	b	414b3c <wcrtomb@plt+0x1217c>
  414dc4:	mov	x20, xzr
  414dc8:	mov	x0, x20
  414dcc:	ldp	x20, x19, [sp, #32]
  414dd0:	ldr	x21, [sp, #16]
  414dd4:	ldp	x29, x30, [sp], #48
  414dd8:	ret
  414ddc:	mov	x0, x19
  414de0:	bl	415978 <wcrtomb@plt+0x12fb8>
  414de4:	cbz	w0, 414f84 <wcrtomb@plt+0x125c4>
  414de8:	bl	402930 <__errno_location@plt>
  414dec:	ldr	w8, [x0]
  414df0:	str	w8, [x21, #64]
  414df4:	ldr	w8, [x19, #72]
  414df8:	orr	w8, w8, #0x2000
  414dfc:	str	w8, [x19, #72]
  414e00:	b	414f84 <wcrtomb@plt+0x125c4>
  414e04:	ldr	w8, [x19, #72]
  414e08:	tbnz	w8, #2, 414f7c <wcrtomb@plt+0x125bc>
  414e0c:	ldr	w1, [x21, #68]
  414e10:	tbnz	w8, #9, 414f70 <wcrtomb@plt+0x125b0>
  414e14:	mov	w0, w1
  414e18:	bl	4023c0 <fchdir@plt>
  414e1c:	cbz	w0, 414f7c <wcrtomb@plt+0x125bc>
  414e20:	bl	402930 <__errno_location@plt>
  414e24:	ldr	w8, [x0]
  414e28:	str	w8, [x21, #64]
  414e2c:	ldr	w8, [x19, #72]
  414e30:	orr	w8, w8, #0x2000
  414e34:	str	w8, [x19, #72]
  414e38:	b	414f7c <wcrtomb@plt+0x125bc>
  414e3c:	bl	402930 <__errno_location@plt>
  414e40:	ldr	w8, [x0]
  414e44:	mov	w9, #0x7                   	// #7
  414e48:	strh	w9, [x21, #108]
  414e4c:	str	w8, [x21, #64]
  414e50:	mov	w8, #0x3                   	// #3
  414e54:	strh	w8, [x21, #112]
  414e58:	ldr	x8, [x21, #8]
  414e5c:	ldr	x11, [x19, #32]
  414e60:	add	x1, x21, #0xf8
  414e64:	ldr	x9, [x8, #72]
  414e68:	ldr	x8, [x8, #56]
  414e6c:	sub	x10, x9, #0x1
  414e70:	ldrb	w8, [x8, x10]
  414e74:	cmp	w8, #0x2f
  414e78:	csel	x8, x10, x9, eq  // eq = none
  414e7c:	add	x0, x11, x8
  414e80:	mov	w8, #0x2f                  	// #47
  414e84:	strb	w8, [x0], #1
  414e88:	ldr	x8, [x21, #96]
  414e8c:	add	x2, x8, #0x1
  414e90:	bl	402340 <memmove@plt>
  414e94:	mov	x20, x21
  414e98:	str	x20, [x19]
  414e9c:	ldrh	w8, [x20, #108]
  414ea0:	cmp	w8, #0xb
  414ea4:	b.ne	414f30 <wcrtomb@plt+0x12570>  // b.any
  414ea8:	ldr	x8, [x20, #168]
  414eac:	cmp	x8, #0x1
  414eb0:	b.eq	414f30 <wcrtomb@plt+0x12570>  // b.none
  414eb4:	cmp	x8, #0x2
  414eb8:	b.ne	414fc4 <wcrtomb@plt+0x12604>  // b.any
  414ebc:	ldr	x21, [x20, #8]
  414ec0:	ldr	w8, [x21, #104]
  414ec4:	cbnz	w8, 414eec <wcrtomb@plt+0x1252c>
  414ec8:	ldr	w8, [x19, #72]
  414ecc:	mvn	w8, w8
  414ed0:	tst	w8, #0x18
  414ed4:	b.ne	414eec <wcrtomb@plt+0x1252c>  // b.any
  414ed8:	ldr	w1, [x19, #44]
  414edc:	mov	x0, x21
  414ee0:	bl	415a6c <wcrtomb@plt+0x130ac>
  414ee4:	cmp	w0, #0x2
  414ee8:	b.eq	414f30 <wcrtomb@plt+0x12570>  // b.none
  414eec:	mov	x0, x19
  414ef0:	mov	x1, x20
  414ef4:	mov	w2, wzr
  414ef8:	bl	41456c <wcrtomb@plt+0x11bac>
  414efc:	ldr	w8, [x20, #136]
  414f00:	strh	w0, [x20, #108]
  414f04:	and	w8, w8, #0xf000
  414f08:	cmp	w8, #0x4, lsl #12
  414f0c:	b.ne	414f30 <wcrtomb@plt+0x12570>  // b.any
  414f10:	ldr	x8, [x20, #88]
  414f14:	cbz	x8, 414f30 <wcrtomb@plt+0x12570>
  414f18:	ldr	w8, [x21, #104]
  414f1c:	add	w9, w8, #0x1
  414f20:	cmp	w9, #0x2
  414f24:	b.cc	414f30 <wcrtomb@plt+0x12570>  // b.lo, b.ul, b.last
  414f28:	sub	w8, w8, #0x1
  414f2c:	str	w8, [x21, #104]
  414f30:	ldrh	w8, [x20, #108]
  414f34:	cmp	w8, #0x1
  414f38:	b.ne	414dc8 <wcrtomb@plt+0x12408>  // b.any
  414f3c:	ldr	x8, [x20, #88]
  414f40:	cbnz	x8, 414f4c <wcrtomb@plt+0x1258c>
  414f44:	ldr	x8, [x20, #120]
  414f48:	str	x8, [x19, #24]
  414f4c:	mov	x0, x19
  414f50:	mov	x1, x20
  414f54:	bl	415b14 <wcrtomb@plt+0x13154>
  414f58:	tbnz	w0, #0, 414dc8 <wcrtomb@plt+0x12408>
  414f5c:	bl	402930 <__errno_location@plt>
  414f60:	mov	w8, #0xc                   	// #12
  414f64:	mov	x20, xzr
  414f68:	str	w8, [x0]
  414f6c:	b	414dc8 <wcrtomb@plt+0x12408>
  414f70:	mov	w2, #0x1                   	// #1
  414f74:	mov	x0, x19
  414f78:	bl	415bcc <wcrtomb@plt+0x1320c>
  414f7c:	ldr	w0, [x21, #68]
  414f80:	bl	402650 <close@plt>
  414f84:	ldrh	w8, [x21, #108]
  414f88:	cmp	w8, #0x2
  414f8c:	b.eq	414fb4 <wcrtomb@plt+0x125f4>  // b.none
  414f90:	ldr	w8, [x21, #64]
  414f94:	mov	w9, #0x6                   	// #6
  414f98:	cmp	w8, #0x0
  414f9c:	cinc	w9, w9, ne  // ne = any
  414fa0:	strh	w9, [x21, #108]
  414fa4:	cbnz	w8, 414fb4 <wcrtomb@plt+0x125f4>
  414fa8:	mov	x0, x19
  414fac:	mov	x1, x21
  414fb0:	bl	414fc8 <wcrtomb@plt+0x12608>
  414fb4:	ldrb	w8, [x19, #73]
  414fb8:	tst	w8, #0x20
  414fbc:	csel	x20, x21, xzr, eq  // eq = none
  414fc0:	b	414dc8 <wcrtomb@plt+0x12408>
  414fc4:	bl	4026c0 <abort@plt>
  414fc8:	sub	sp, sp, #0x30
  414fcc:	stp	x29, x30, [sp, #32]
  414fd0:	ldrh	w8, [x0, #72]
  414fd4:	mov	w9, #0x102                 	// #258
  414fd8:	add	x29, sp, #0x20
  414fdc:	tst	w8, w9
  414fe0:	b.eq	415014 <wcrtomb@plt+0x12654>  // b.none
  414fe4:	ldr	x8, [x1, #120]
  414fe8:	str	x8, [sp, #8]
  414fec:	ldr	x8, [x1, #128]
  414ff0:	add	x1, sp, #0x8
  414ff4:	str	x8, [sp, #16]
  414ff8:	ldr	x0, [x0, #88]
  414ffc:	bl	41143c <wcrtomb@plt+0xea7c>
  415000:	cbz	x0, 415068 <wcrtomb@plt+0x126a8>
  415004:	bl	402770 <free@plt>
  415008:	ldp	x29, x30, [sp, #32]
  41500c:	add	sp, sp, #0x30
  415010:	ret
  415014:	ldr	x8, [x1, #8]
  415018:	cbz	x8, 415008 <wcrtomb@plt+0x12648>
  41501c:	ldr	x9, [x8, #88]
  415020:	tbnz	x9, #63, 415008 <wcrtomb@plt+0x12648>
  415024:	ldr	x9, [x0, #88]
  415028:	ldr	x10, [x9, #16]
  41502c:	cbz	x10, 415068 <wcrtomb@plt+0x126a8>
  415030:	ldr	x10, [x9]
  415034:	ldr	x11, [x1, #128]
  415038:	cmp	x10, x11
  41503c:	b.ne	415008 <wcrtomb@plt+0x12648>  // b.any
  415040:	ldr	x10, [x9, #8]
  415044:	ldr	x11, [x1, #120]
  415048:	cmp	x10, x11
  41504c:	b.ne	415008 <wcrtomb@plt+0x12648>  // b.any
  415050:	ldr	x10, [x8, #120]
  415054:	str	x10, [x9, #8]
  415058:	ldr	x8, [x8, #128]
  41505c:	ldr	x9, [x0, #88]
  415060:	str	x8, [x9]
  415064:	b	415008 <wcrtomb@plt+0x12648>
  415068:	bl	4026c0 <abort@plt>
  41506c:	sub	sp, sp, #0xc0
  415070:	stp	x24, x23, [sp, #144]
  415074:	stp	x22, x21, [sp, #160]
  415078:	stp	x20, x19, [sp, #176]
  41507c:	mov	x23, x3
  415080:	mov	w19, w2
  415084:	mov	x22, x1
  415088:	mov	x20, x0
  41508c:	stp	x29, x30, [sp, #128]
  415090:	add	x29, sp, #0x80
  415094:	cbz	x3, 415178 <wcrtomb@plt+0x127b8>
  415098:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41509c:	add	x1, x1, #0x688
  4150a0:	mov	x0, x23
  4150a4:	bl	402750 <strcmp@plt>
  4150a8:	cmp	w0, #0x0
  4150ac:	cset	w21, ne  // ne = any
  4150b0:	ldr	w8, [x20, #72]
  4150b4:	tbnz	w8, #2, 415184 <wcrtomb@plt+0x127c4>
  4150b8:	cmp	w19, #0x0
  4150bc:	cset	w9, ge  // ge = tcont
  4150c0:	orr	w9, w9, w21
  4150c4:	tbnz	w9, #0, 4150f0 <wcrtomb@plt+0x12730>
  4150c8:	tbz	w8, #9, 4150f0 <wcrtomb@plt+0x12730>
  4150cc:	add	x24, x20, #0x60
  4150d0:	mov	x0, x24
  4150d4:	bl	4231ec <_obstack_memory_used@@Base+0xcdb8>
  4150d8:	tbnz	w0, #0, 4150f0 <wcrtomb@plt+0x12730>
  4150dc:	mov	x0, x24
  4150e0:	bl	42323c <_obstack_memory_used@@Base+0xce08>
  4150e4:	cmp	w0, #0x0
  4150e8:	csel	x23, xzr, x23, ge  // ge = tcont
  4150ec:	csel	w19, w0, w19, ge  // ge = tcont
  4150f0:	mov	w24, w19
  4150f4:	tbz	w19, #31, 41510c <wcrtomb@plt+0x1274c>
  4150f8:	mov	x0, x20
  4150fc:	mov	x1, x23
  415100:	bl	414840 <wcrtomb@plt+0x11e80>
  415104:	mov	w24, w0
  415108:	tbnz	w0, #31, 4151b8 <wcrtomb@plt+0x127f8>
  41510c:	ldrb	w8, [x20, #72]
  415110:	tbnz	w8, #1, 41512c <wcrtomb@plt+0x1276c>
  415114:	cbz	x23, 41515c <wcrtomb@plt+0x1279c>
  415118:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41511c:	add	x1, x1, #0x688
  415120:	mov	x0, x23
  415124:	bl	402750 <strcmp@plt>
  415128:	cbnz	w0, 41515c <wcrtomb@plt+0x1279c>
  41512c:	mov	x1, sp
  415130:	mov	w0, w24
  415134:	bl	423850 <_obstack_memory_used@@Base+0xd41c>
  415138:	cbnz	w0, 4151cc <wcrtomb@plt+0x1280c>
  41513c:	ldr	x8, [x22, #120]
  415140:	ldr	x9, [sp]
  415144:	cmp	x8, x9
  415148:	b.ne	4151c0 <wcrtomb@plt+0x12800>  // b.any
  41514c:	ldr	x8, [x22, #128]
  415150:	ldr	x9, [sp, #8]
  415154:	cmp	x8, x9
  415158:	b.ne	4151c0 <wcrtomb@plt+0x12800>  // b.any
  41515c:	ldrb	w8, [x20, #73]
  415160:	tbnz	w8, #1, 4151a0 <wcrtomb@plt+0x127e0>
  415164:	mov	w0, w24
  415168:	bl	4023c0 <fchdir@plt>
  41516c:	mov	w20, w0
  415170:	tbz	w19, #31, 4151ec <wcrtomb@plt+0x1282c>
  415174:	b	4151d4 <wcrtomb@plt+0x12814>
  415178:	mov	w21, #0x1                   	// #1
  41517c:	ldr	w8, [x20, #72]
  415180:	tbz	w8, #2, 4150b8 <wcrtomb@plt+0x126f8>
  415184:	mov	w20, wzr
  415188:	tbnz	w19, #31, 4151ec <wcrtomb@plt+0x1282c>
  41518c:	tbz	w8, #9, 4151ec <wcrtomb@plt+0x1282c>
  415190:	mov	w0, w19
  415194:	bl	402650 <close@plt>
  415198:	mov	w20, wzr
  41519c:	b	4151ec <wcrtomb@plt+0x1282c>
  4151a0:	mov	x0, x20
  4151a4:	mov	w1, w24
  4151a8:	mov	w2, w21
  4151ac:	bl	415bcc <wcrtomb@plt+0x1320c>
  4151b0:	mov	w20, wzr
  4151b4:	b	4151ec <wcrtomb@plt+0x1282c>
  4151b8:	mov	w20, #0xffffffff            	// #-1
  4151bc:	b	4151ec <wcrtomb@plt+0x1282c>
  4151c0:	bl	402930 <__errno_location@plt>
  4151c4:	mov	w8, #0x2                   	// #2
  4151c8:	str	w8, [x0]
  4151cc:	mov	w20, #0xffffffff            	// #-1
  4151d0:	tbz	w19, #31, 4151ec <wcrtomb@plt+0x1282c>
  4151d4:	bl	402930 <__errno_location@plt>
  4151d8:	ldr	w21, [x0]
  4151dc:	mov	x19, x0
  4151e0:	mov	w0, w24
  4151e4:	bl	402650 <close@plt>
  4151e8:	str	w21, [x19]
  4151ec:	mov	w0, w20
  4151f0:	ldp	x20, x19, [sp, #176]
  4151f4:	ldp	x22, x21, [sp, #160]
  4151f8:	ldp	x24, x23, [sp, #144]
  4151fc:	ldp	x29, x30, [sp, #128]
  415200:	add	sp, sp, #0xc0
  415204:	ret
  415208:	sub	sp, sp, #0xb0
  41520c:	stp	x29, x30, [sp, #80]
  415210:	stp	x28, x27, [sp, #96]
  415214:	stp	x26, x25, [sp, #112]
  415218:	stp	x24, x23, [sp, #128]
  41521c:	stp	x22, x21, [sp, #144]
  415220:	stp	x20, x19, [sp, #160]
  415224:	ldr	x19, [x0]
  415228:	mov	x20, x0
  41522c:	mov	w22, w1
  415230:	add	x29, sp, #0x50
  415234:	ldr	x23, [x19, #24]
  415238:	cbz	x23, 415268 <wcrtomb@plt+0x128a8>
  41523c:	mov	x0, x23
  415240:	bl	4027f0 <dirfd@plt>
  415244:	stur	w0, [x29, #-4]
  415248:	tbz	w0, #31, 415350 <wcrtomb@plt+0x12990>
  41524c:	ldr	x0, [x19, #24]
  415250:	bl	402630 <closedir@plt>
  415254:	mov	x24, xzr
  415258:	cmp	w22, #0x3
  41525c:	str	xzr, [x19, #24]
  415260:	b.eq	415300 <wcrtomb@plt+0x12940>  // b.none
  415264:	b	415940 <wcrtomb@plt+0x12f80>
  415268:	ldr	w8, [x20, #72]
  41526c:	mov	w9, #0x204                 	// #516
  415270:	and	w9, w8, w9
  415274:	cmp	w9, #0x200
  415278:	b.ne	415294 <wcrtomb@plt+0x128d4>  // b.any
  41527c:	ldr	w0, [x20, #44]
  415280:	ldr	x1, [x19, #48]
  415284:	tbz	w8, #4, 4152a0 <wcrtomb@plt+0x128e0>
  415288:	tbnz	w8, #0, 4152a8 <wcrtomb@plt+0x128e8>
  41528c:	mov	w8, wzr
  415290:	b	4152b4 <wcrtomb@plt+0x128f4>
  415294:	mov	w0, #0xffffff9c            	// #-100
  415298:	ldr	x1, [x19, #48]
  41529c:	tbnz	w8, #4, 415288 <wcrtomb@plt+0x128c8>
  4152a0:	mov	w8, wzr
  4152a4:	b	4152b8 <wcrtomb@plt+0x128f8>
  4152a8:	ldr	x8, [x19, #88]
  4152ac:	cmp	x8, #0x0
  4152b0:	cset	w8, eq  // eq = none
  4152b4:	eor	w8, w8, #0x1
  4152b8:	cmp	w8, #0x0
  4152bc:	mov	w8, #0x8000                	// #32768
  4152c0:	csel	w2, w8, wzr, ne  // ne = any
  4152c4:	sub	x3, x29, #0x4
  4152c8:	bl	42338c <_obstack_memory_used@@Base+0xcf58>
  4152cc:	str	x0, [x19, #24]
  4152d0:	cbz	x0, 4152f8 <wcrtomb@plt+0x12938>
  4152d4:	ldrh	w8, [x19, #108]
  4152d8:	cmp	w8, #0xb
  4152dc:	b.ne	41531c <wcrtomb@plt+0x1295c>  // b.any
  4152e0:	mov	x0, x20
  4152e4:	mov	x1, x19
  4152e8:	mov	w2, wzr
  4152ec:	bl	41456c <wcrtomb@plt+0x11bac>
  4152f0:	strh	w0, [x19, #108]
  4152f4:	b	415350 <wcrtomb@plt+0x12990>
  4152f8:	cmp	w22, #0x3
  4152fc:	b.ne	41593c <wcrtomb@plt+0x12f7c>  // b.any
  415300:	mov	w8, #0x4                   	// #4
  415304:	strh	w8, [x19, #108]
  415308:	bl	402930 <__errno_location@plt>
  41530c:	ldr	w8, [x0]
  415310:	mov	x24, xzr
  415314:	str	w8, [x19, #64]
  415318:	b	415940 <wcrtomb@plt+0x12f80>
  41531c:	ldrb	w8, [x20, #73]
  415320:	tbz	w8, #0, 415350 <wcrtomb@plt+0x12990>
  415324:	mov	x0, x20
  415328:	mov	x1, x19
  41532c:	bl	414fc8 <wcrtomb@plt+0x12608>
  415330:	mov	x0, x20
  415334:	mov	x1, x19
  415338:	mov	w2, wzr
  41533c:	bl	41456c <wcrtomb@plt+0x11bac>
  415340:	mov	x0, x20
  415344:	mov	x1, x19
  415348:	bl	415b14 <wcrtomb@plt+0x13154>
  41534c:	tbz	w0, #0, 415964 <wcrtomb@plt+0x12fa4>
  415350:	ldr	x8, [x20, #64]
  415354:	cmp	x8, #0x0
  415358:	mov	w8, #0x86a0                	// #34464
  41535c:	movk	w8, #0x1, lsl #16
  415360:	csinv	x8, x8, xzr, eq  // eq = none
  415364:	str	x8, [sp, #24]
  415368:	cbz	x23, 415374 <wcrtomb@plt+0x129b4>
  41536c:	mov	w24, #0x1                   	// #1
  415370:	b	415460 <wcrtomb@plt+0x12aa0>
  415374:	cmp	w22, #0x2
  415378:	b.ne	41538c <wcrtomb@plt+0x129cc>  // b.any
  41537c:	mov	w24, wzr
  415380:	cmp	w22, #0x3
  415384:	b.ne	4153d0 <wcrtomb@plt+0x12a10>  // b.any
  415388:	b	4153d4 <wcrtomb@plt+0x12a14>
  41538c:	ldr	w8, [x20, #72]
  415390:	and	w8, w8, #0x38
  415394:	cmp	w8, #0x18
  415398:	b.ne	4153c0 <wcrtomb@plt+0x12a00>  // b.any
  41539c:	ldr	w8, [x19, #140]
  4153a0:	cmp	w8, #0x2
  4153a4:	b.ne	4153c0 <wcrtomb@plt+0x12a00>  // b.any
  4153a8:	ldur	w1, [x29, #-4]
  4153ac:	mov	x0, x19
  4153b0:	bl	415a6c <wcrtomb@plt+0x130ac>
  4153b4:	cmp	w0, #0x0
  4153b8:	cset	w8, ne  // ne = any
  4153bc:	b	4153c4 <wcrtomb@plt+0x12a04>
  4153c0:	mov	w8, wzr
  4153c4:	eor	w24, w8, #0x1
  4153c8:	cmp	w22, #0x3
  4153cc:	b.eq	4153d4 <wcrtomb@plt+0x12a14>  // b.none
  4153d0:	cbz	w24, 415460 <wcrtomb@plt+0x12aa0>
  4153d4:	ldrb	w8, [x20, #73]
  4153d8:	tbz	w8, #1, 4153f0 <wcrtomb@plt+0x12a30>
  4153dc:	ldur	w0, [x29, #-4]
  4153e0:	mov	w1, #0x406                 	// #1030
  4153e4:	mov	w2, #0x3                   	// #3
  4153e8:	bl	4234e4 <_obstack_memory_used@@Base+0xd0b0>
  4153ec:	stur	w0, [x29, #-4]
  4153f0:	ldur	w2, [x29, #-4]
  4153f4:	tbnz	w2, #31, 41540c <wcrtomb@plt+0x12a4c>
  4153f8:	mov	x0, x20
  4153fc:	mov	x1, x19
  415400:	mov	x3, xzr
  415404:	bl	41506c <wcrtomb@plt+0x126ac>
  415408:	cbz	w0, 41536c <wcrtomb@plt+0x129ac>
  41540c:	cmp	w22, #0x3
  415410:	cset	w8, ne  // ne = any
  415414:	eor	w9, w24, #0x1
  415418:	orr	w8, w8, w9
  41541c:	tbnz	w8, #0, 41542c <wcrtomb@plt+0x12a6c>
  415420:	bl	402930 <__errno_location@plt>
  415424:	ldr	w8, [x0]
  415428:	str	w8, [x19, #64]
  41542c:	ldrh	w8, [x19, #110]
  415430:	ldr	x0, [x19, #24]
  415434:	orr	w8, w8, #0x1
  415438:	strh	w8, [x19, #110]
  41543c:	bl	402630 <closedir@plt>
  415440:	str	xzr, [x19, #24]
  415444:	ldrb	w8, [x20, #73]
  415448:	tbz	w8, #1, 415458 <wcrtomb@plt+0x12a98>
  41544c:	ldur	w0, [x29, #-4]
  415450:	tbnz	w0, #31, 415458 <wcrtomb@plt+0x12a98>
  415454:	bl	402650 <close@plt>
  415458:	mov	w24, wzr
  41545c:	str	xzr, [x19, #24]
  415460:	ldr	x8, [x19, #72]
  415464:	ldr	x9, [x19, #56]
  415468:	ldrb	w11, [x20, #72]
  41546c:	sub	x10, x8, #0x1
  415470:	ldrb	w9, [x9, x10]
  415474:	cmp	w9, #0x2f
  415478:	csel	x8, x10, x8, eq  // eq = none
  41547c:	tbnz	w11, #2, 415488 <wcrtomb@plt+0x12ac8>
  415480:	str	xzr, [sp, #40]
  415484:	b	41549c <wcrtomb@plt+0x12adc>
  415488:	ldr	x9, [x20, #32]
  41548c:	add	x10, x9, x8
  415490:	mov	w9, #0x2f                  	// #47
  415494:	strb	w9, [x10], #1
  415498:	str	x10, [sp, #40]
  41549c:	ldr	x21, [x19, #24]
  4154a0:	add	x10, x8, #0x1
  4154a4:	stur	x10, [x29, #-16]
  4154a8:	str	w22, [sp, #12]
  4154ac:	stur	x23, [x29, #-32]
  4154b0:	str	w24, [sp, #4]
  4154b4:	cbz	x21, 4157dc <wcrtomb@plt+0x12e1c>
  4154b8:	ldr	x8, [x19, #88]
  4154bc:	ldr	x9, [x20, #48]
  4154c0:	add	x8, x8, #0x1
  4154c4:	str	x8, [sp, #16]
  4154c8:	sub	x8, x9, x10
  4154cc:	stur	x8, [x29, #-24]
  4154d0:	bl	402930 <__errno_location@plt>
  4154d4:	mov	x26, x0
  4154d8:	mov	x27, xzr
  4154dc:	mov	x23, xzr
  4154e0:	mov	x22, xzr
  4154e4:	str	wzr, [sp, #8]
  4154e8:	str	wzr, [sp, #36]
  4154ec:	mov	x0, x21
  4154f0:	str	wzr, [x26]
  4154f4:	bl	402600 <readdir@plt>
  4154f8:	cbz	x0, 4155a8 <wcrtomb@plt+0x12be8>
  4154fc:	ldrb	w8, [x20, #72]
  415500:	mov	x24, x0
  415504:	tbnz	w8, #5, 41552c <wcrtomb@plt+0x12b6c>
  415508:	ldrb	w8, [x24, #19]
  41550c:	cmp	w8, #0x2e
  415510:	b.ne	41552c <wcrtomb@plt+0x12b6c>  // b.any
  415514:	ldrb	w8, [x24, #20]
  415518:	cbz	w8, 4156a0 <wcrtomb@plt+0x12ce0>
  41551c:	cmp	w8, #0x2e
  415520:	b.ne	41552c <wcrtomb@plt+0x12b6c>  // b.any
  415524:	ldrb	w8, [x24, #21]
  415528:	cbz	w8, 4156a0 <wcrtomb@plt+0x12ce0>
  41552c:	add	x28, x24, #0x13
  415530:	mov	x0, x28
  415534:	bl	402380 <strlen@plt>
  415538:	mov	x21, x0
  41553c:	mov	x0, x20
  415540:	mov	x1, x28
  415544:	mov	x2, x21
  415548:	bl	4144b4 <wcrtomb@plt+0x11af4>
  41554c:	mov	x28, x0
  415550:	cbz	x0, 415628 <wcrtomb@plt+0x12c68>
  415554:	ldur	x8, [x29, #-24]
  415558:	cmp	x21, x8
  41555c:	b.cs	4155d8 <wcrtomb@plt+0x12c18>  // b.hs, b.nlast
  415560:	ldur	x10, [x29, #-16]
  415564:	adds	x8, x21, x10
  415568:	b.cc	4156c0 <wcrtomb@plt+0x12d00>  // b.lo, b.ul, b.last
  41556c:	mov	x0, x28
  415570:	bl	402770 <free@plt>
  415574:	mov	x0, x27
  415578:	bl	414884 <wcrtomb@plt+0x11ec4>
  41557c:	ldr	x0, [x19, #24]
  415580:	bl	402630 <closedir@plt>
  415584:	mov	w8, #0x7                   	// #7
  415588:	str	xzr, [x19, #24]
  41558c:	strh	w8, [x19, #108]
  415590:	ldr	w8, [x20, #72]
  415594:	orr	w8, w8, #0x2000
  415598:	str	w8, [x20, #72]
  41559c:	mov	w8, #0x24                  	// #36
  4155a0:	str	w8, [x26]
  4155a4:	b	415660 <wcrtomb@plt+0x12ca0>
  4155a8:	ldr	w8, [x26]
  4155ac:	cbz	w8, 4155d0 <wcrtomb@plt+0x12c10>
  4155b0:	ldur	x9, [x29, #-32]
  4155b4:	str	w8, [x19, #64]
  4155b8:	mov	w8, #0x4                   	// #4
  4155bc:	orr	x9, x9, x23
  4155c0:	cmp	x9, #0x0
  4155c4:	mov	w9, #0x7                   	// #7
  4155c8:	csel	w8, w9, w8, ne  // ne = any
  4155cc:	strh	w8, [x19, #108]
  4155d0:	mov	w8, #0x9                   	// #9
  4155d4:	b	415664 <wcrtomb@plt+0x12ca4>
  4155d8:	ldur	x8, [x29, #-16]
  4155dc:	ldr	x25, [x20, #32]
  4155e0:	mov	x0, x20
  4155e4:	add	x8, x21, x8
  4155e8:	add	x1, x8, #0x1
  4155ec:	bl	414438 <wcrtomb@plt+0x11a78>
  4155f0:	tbz	w0, #0, 415628 <wcrtomb@plt+0x12c68>
  4155f4:	ldr	x8, [x20, #32]
  4155f8:	cmp	x25, x8
  4155fc:	b.eq	4156a8 <wcrtomb@plt+0x12ce8>  // b.none
  415600:	ldrb	w9, [x20, #72]
  415604:	ldur	x10, [x29, #-16]
  415608:	tst	w9, #0x4
  41560c:	ldr	x9, [sp, #40]
  415610:	add	x8, x8, x10
  415614:	csel	x9, x9, x8, eq  // eq = none
  415618:	mov	w8, #0x1                   	// #1
  41561c:	str	x9, [sp, #40]
  415620:	str	w8, [sp, #36]
  415624:	b	4156ac <wcrtomb@plt+0x12cec>
  415628:	ldr	w21, [x26]
  41562c:	mov	x0, x28
  415630:	bl	402770 <free@plt>
  415634:	mov	x0, x27
  415638:	bl	414884 <wcrtomb@plt+0x11ec4>
  41563c:	ldr	x0, [x19, #24]
  415640:	bl	402630 <closedir@plt>
  415644:	mov	w8, #0x7                   	// #7
  415648:	str	xzr, [x19, #24]
  41564c:	strh	w8, [x19, #108]
  415650:	ldr	w8, [x20, #72]
  415654:	orr	w8, w8, #0x2000
  415658:	str	w8, [x20, #72]
  41565c:	str	w21, [x26]
  415660:	mov	w8, #0x1                   	// #1
  415664:	mov	x28, x22
  415668:	mov	x24, x27
  41566c:	cmp	w8, #0xf
  415670:	b.hi	41593c <wcrtomb@plt+0x12f7c>  // b.pmore
  415674:	adrp	x11, 426000 <_obstack_memory_used@@Base+0xfbcc>
  415678:	add	x11, x11, #0x648
  41567c:	adr	x9, 41568c <wcrtomb@plt+0x12ccc>
  415680:	ldrb	w10, [x11, x8]
  415684:	add	x9, x9, x10, lsl #2
  415688:	br	x9
  41568c:	ldr	x21, [x19, #24]
  415690:	mov	x27, x24
  415694:	mov	x22, x28
  415698:	cbnz	x21, 4154ec <wcrtomb@plt+0x12b2c>
  41569c:	b	4157ec <wcrtomb@plt+0x12e2c>
  4156a0:	mov	w8, #0x8                   	// #8
  4156a4:	b	415664 <wcrtomb@plt+0x12ca4>
  4156a8:	ldur	x10, [x29, #-16]
  4156ac:	ldr	x8, [x20, #48]
  4156b0:	sub	x8, x8, x10
  4156b4:	stur	x8, [x29, #-24]
  4156b8:	adds	x8, x21, x10
  4156bc:	b.cs	41556c <wcrtomb@plt+0x12bac>  // b.hs, b.nlast
  4156c0:	ldr	x9, [sp, #16]
  4156c4:	str	x9, [x28, #88]
  4156c8:	ldr	x9, [x20]
  4156cc:	str	x8, [x28, #72]
  4156d0:	str	x9, [x28, #8]
  4156d4:	ldr	x8, [x24]
  4156d8:	str	x8, [x28, #128]
  4156dc:	ldrb	w8, [x20, #72]
  4156e0:	tbnz	w8, #2, 4156f8 <wcrtomb@plt+0x12d38>
  4156e4:	add	x8, x28, #0xf8
  4156e8:	str	x8, [x28, #48]
  4156ec:	ldr	x8, [x20, #64]
  4156f0:	cbnz	x8, 41571c <wcrtomb@plt+0x12d5c>
  4156f4:	b	41573c <wcrtomb@plt+0x12d7c>
  4156f8:	ldr	x9, [x28, #96]
  4156fc:	ldr	x8, [x28, #56]
  415700:	ldr	x0, [sp, #40]
  415704:	add	x1, x28, #0xf8
  415708:	add	x2, x9, #0x1
  41570c:	str	x8, [x28, #48]
  415710:	bl	402340 <memmove@plt>
  415714:	ldr	x8, [x20, #64]
  415718:	cbz	x8, 41573c <wcrtomb@plt+0x12d7c>
  41571c:	ldrb	w8, [x20, #73]
  415720:	tbnz	w8, #2, 41573c <wcrtomb@plt+0x12d7c>
  415724:	mov	x0, x20
  415728:	mov	x1, x28
  41572c:	mov	w2, wzr
  415730:	bl	41456c <wcrtomb@plt+0x11bac>
  415734:	strh	w0, [x28, #108]
  415738:	b	415784 <wcrtomb@plt+0x12dc4>
  41573c:	ldr	w8, [x20, #72]
  415740:	add	x0, x28, #0x78
  415744:	mvn	w8, w8
  415748:	tst	w8, #0x18
  41574c:	b.ne	415764 <wcrtomb@plt+0x12da4>  // b.any
  415750:	ldrb	w8, [x24, #18]
  415754:	mov	w9, #0xfb                  	// #251
  415758:	tst	w8, w9
  41575c:	cset	w21, ne  // ne = any
  415760:	b	415768 <wcrtomb@plt+0x12da8>
  415764:	mov	w21, wzr
  415768:	mov	w8, #0xb                   	// #11
  41576c:	strh	w8, [x28, #108]
  415770:	ldrb	w1, [x24, #18]
  415774:	bl	415f48 <wcrtomb@plt+0x13588>
  415778:	eor	w1, w21, #0x1
  41577c:	mov	x0, x28
  415780:	bl	41453c <wcrtomb@plt+0x11b7c>
  415784:	mov	x24, x28
  415788:	str	xzr, [x28, #16]
  41578c:	cbz	x27, 415798 <wcrtomb@plt+0x12dd8>
  415790:	mov	x24, x27
  415794:	str	x28, [x22, #16]
  415798:	mov	w8, #0x2710                	// #10000
  41579c:	cmp	x23, x8
  4157a0:	b.ne	4157bc <wcrtomb@plt+0x12dfc>  // b.any
  4157a4:	ldr	x8, [x20, #64]
  4157a8:	cbnz	x8, 4157bc <wcrtomb@plt+0x12dfc>
  4157ac:	ldur	w1, [x29, #-4]
  4157b0:	mov	x0, x19
  4157b4:	bl	415f70 <wcrtomb@plt+0x135b0>
  4157b8:	str	w0, [sp, #8]
  4157bc:	ldr	x8, [sp, #24]
  4157c0:	add	x23, x23, #0x1
  4157c4:	cmp	x8, x23
  4157c8:	mov	w8, #0xf                   	// #15
  4157cc:	csel	w8, wzr, w8, hi  // hi = pmore
  4157d0:	cmp	w8, #0xf
  4157d4:	b.ls	415674 <wcrtomb@plt+0x12cb4>  // b.plast
  4157d8:	b	41593c <wcrtomb@plt+0x12f7c>
  4157dc:	str	wzr, [sp, #36]
  4157e0:	str	wzr, [sp, #8]
  4157e4:	mov	x23, xzr
  4157e8:	mov	x24, xzr
  4157ec:	ldr	x0, [x19, #24]
  4157f0:	cbz	x0, 4157fc <wcrtomb@plt+0x12e3c>
  4157f4:	bl	402630 <closedir@plt>
  4157f8:	str	xzr, [x19, #24]
  4157fc:	ldr	w21, [sp, #12]
  415800:	ldur	x22, [x29, #-32]
  415804:	ldr	w8, [sp, #36]
  415808:	tbz	w8, #0, 415848 <wcrtomb@plt+0x12e88>
  41580c:	mov	x0, x20
  415810:	mov	x1, x24
  415814:	bl	415fbc <wcrtomb@plt+0x135fc>
  415818:	ldrb	w8, [x20, #72]
  41581c:	tbz	w8, #2, 415850 <wcrtomb@plt+0x12e90>
  415820:	ldr	x8, [x20, #48]
  415824:	ldur	x11, [x29, #-16]
  415828:	ldr	x10, [sp, #40]
  41582c:	cmp	x11, x8
  415830:	sub	x9, x10, #0x1
  415834:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  415838:	csel	x8, x9, x10, eq  // eq = none
  41583c:	strb	wzr, [x8]
  415840:	cbz	x22, 415854 <wcrtomb@plt+0x12e94>
  415844:	b	41586c <wcrtomb@plt+0x12eac>
  415848:	ldrb	w8, [x20, #72]
  41584c:	tbnz	w8, #2, 415820 <wcrtomb@plt+0x12e60>
  415850:	cbnz	x22, 41586c <wcrtomb@plt+0x12eac>
  415854:	ldr	w8, [sp, #4]
  415858:	eor	w8, w8, #0x1
  41585c:	tbnz	w8, #0, 41586c <wcrtomb@plt+0x12eac>
  415860:	cmp	w21, #0x1
  415864:	b.eq	4158ec <wcrtomb@plt+0x12f2c>  // b.none
  415868:	cbz	x23, 4158ec <wcrtomb@plt+0x12f2c>
  41586c:	cbz	x23, 4158c4 <wcrtomb@plt+0x12f04>
  415870:	ldr	w8, [sp, #8]
  415874:	tbz	w8, #0, 41589c <wcrtomb@plt+0x12edc>
  415878:	adrp	x8, 416000 <wcrtomb@plt+0x13640>
  41587c:	add	x8, x8, #0x44
  415880:	mov	x0, x20
  415884:	mov	x1, x24
  415888:	mov	x2, x23
  41588c:	str	x8, [x20, #64]
  415890:	bl	4146f4 <wcrtomb@plt+0x11d34>
  415894:	mov	x24, x0
  415898:	str	xzr, [x20, #64]
  41589c:	cmp	x23, #0x2
  4158a0:	b.cc	415940 <wcrtomb@plt+0x12f80>  // b.lo, b.ul, b.last
  4158a4:	ldr	x8, [x20, #64]
  4158a8:	cbz	x8, 415940 <wcrtomb@plt+0x12f80>
  4158ac:	mov	x0, x20
  4158b0:	mov	x1, x24
  4158b4:	mov	x2, x23
  4158b8:	bl	4146f4 <wcrtomb@plt+0x11d34>
  4158bc:	mov	x24, x0
  4158c0:	b	415940 <wcrtomb@plt+0x12f80>
  4158c4:	cmp	w21, #0x3
  4158c8:	b.ne	415934 <wcrtomb@plt+0x12f74>  // b.any
  4158cc:	ldrh	w8, [x19, #108]
  4158d0:	cmp	w8, #0x4
  4158d4:	b.eq	415934 <wcrtomb@plt+0x12f74>  // b.none
  4158d8:	cmp	w8, #0x7
  4158dc:	b.eq	415934 <wcrtomb@plt+0x12f74>  // b.none
  4158e0:	mov	w8, #0x6                   	// #6
  4158e4:	strh	w8, [x19, #108]
  4158e8:	b	415934 <wcrtomb@plt+0x12f74>
  4158ec:	ldr	x8, [x19, #88]
  4158f0:	cbz	x8, 415914 <wcrtomb@plt+0x12f54>
  4158f4:	ldr	x1, [x19, #8]
  4158f8:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4158fc:	add	x3, x3, #0x688
  415900:	mov	w2, #0xffffffff            	// #-1
  415904:	mov	x0, x20
  415908:	bl	41506c <wcrtomb@plt+0x126ac>
  41590c:	cbnz	w0, 415920 <wcrtomb@plt+0x12f60>
  415910:	b	41586c <wcrtomb@plt+0x12eac>
  415914:	mov	x0, x20
  415918:	bl	415978 <wcrtomb@plt+0x12fb8>
  41591c:	cbz	w0, 41586c <wcrtomb@plt+0x12eac>
  415920:	mov	w8, #0x7                   	// #7
  415924:	strh	w8, [x19, #108]
  415928:	ldr	w8, [x20, #72]
  41592c:	orr	w8, w8, #0x2000
  415930:	str	w8, [x20, #72]
  415934:	mov	x0, x24
  415938:	bl	414884 <wcrtomb@plt+0x11ec4>
  41593c:	mov	x24, xzr
  415940:	mov	x0, x24
  415944:	ldp	x20, x19, [sp, #160]
  415948:	ldp	x22, x21, [sp, #144]
  41594c:	ldp	x24, x23, [sp, #128]
  415950:	ldp	x26, x25, [sp, #112]
  415954:	ldp	x28, x27, [sp, #96]
  415958:	ldp	x29, x30, [sp, #80]
  41595c:	add	sp, sp, #0xb0
  415960:	ret
  415964:	bl	402930 <__errno_location@plt>
  415968:	mov	w8, #0xc                   	// #12
  41596c:	mov	x24, xzr
  415970:	str	w8, [x0]
  415974:	b	415940 <wcrtomb@plt+0x12f80>
  415978:	stp	x29, x30, [sp, #-32]!
  41597c:	stp	x20, x19, [sp, #16]
  415980:	ldr	w8, [x0, #72]
  415984:	mov	x19, x0
  415988:	mov	x29, sp
  41598c:	tbnz	w8, #2, 4159b8 <wcrtomb@plt+0x12ff8>
  415990:	tbnz	w8, #9, 4159a8 <wcrtomb@plt+0x12fe8>
  415994:	ldr	w0, [x19, #40]
  415998:	bl	4023c0 <fchdir@plt>
  41599c:	cmp	w0, #0x0
  4159a0:	cset	w20, ne  // ne = any
  4159a4:	b	4159bc <wcrtomb@plt+0x12ffc>
  4159a8:	mov	w1, #0xffffff9c            	// #-100
  4159ac:	mov	w2, #0x1                   	// #1
  4159b0:	mov	x0, x19
  4159b4:	bl	415bcc <wcrtomb@plt+0x1320c>
  4159b8:	mov	w20, wzr
  4159bc:	add	x0, x19, #0x60
  4159c0:	bl	4149d0 <wcrtomb@plt+0x12010>
  4159c4:	mov	w0, w20
  4159c8:	ldp	x20, x19, [sp, #16]
  4159cc:	ldp	x29, x30, [sp], #32
  4159d0:	ret
  4159d4:	stp	x29, x30, [sp, #-64]!
  4159d8:	stp	x22, x21, [sp, #32]
  4159dc:	stp	x20, x19, [sp, #48]
  4159e0:	ldr	x8, [x1, #96]
  4159e4:	mov	x20, x0
  4159e8:	add	x21, x1, #0xf8
  4159ec:	mov	x19, x1
  4159f0:	str	x8, [x1, #72]
  4159f4:	ldr	x0, [x0, #32]
  4159f8:	add	x2, x8, #0x1
  4159fc:	mov	x1, x21
  415a00:	str	x23, [sp, #16]
  415a04:	mov	x29, sp
  415a08:	bl	402340 <memmove@plt>
  415a0c:	mov	w1, #0x2f                  	// #47
  415a10:	mov	x0, x21
  415a14:	bl	402670 <strrchr@plt>
  415a18:	cbz	x0, 415a50 <wcrtomb@plt+0x13090>
  415a1c:	cmp	x0, x21
  415a20:	b.ne	415a2c <wcrtomb@plt+0x1306c>  // b.any
  415a24:	ldrb	w8, [x0, #1]
  415a28:	cbz	w8, 415a50 <wcrtomb@plt+0x13090>
  415a2c:	add	x22, x0, #0x1
  415a30:	mov	x0, x22
  415a34:	bl	402380 <strlen@plt>
  415a38:	mov	x23, x0
  415a3c:	add	x2, x0, #0x1
  415a40:	mov	x0, x21
  415a44:	mov	x1, x22
  415a48:	bl	402340 <memmove@plt>
  415a4c:	str	x23, [x19, #96]
  415a50:	ldr	x8, [x20, #32]
  415a54:	stp	x8, x8, [x19, #48]
  415a58:	ldp	x20, x19, [sp, #48]
  415a5c:	ldp	x22, x21, [sp, #32]
  415a60:	ldr	x23, [sp, #16]
  415a64:	ldp	x29, x30, [sp], #64
  415a68:	ret
  415a6c:	stp	x29, x30, [sp, #-16]!
  415a70:	mov	x29, sp
  415a74:	bl	415e14 <wcrtomb@plt+0x13454>
  415a78:	mov	w8, #0x4972                	// #18802
  415a7c:	movk	w8, #0x5265, lsl #16
  415a80:	cmp	x0, x8
  415a84:	b.le	415ac0 <wcrtomb@plt+0x13100>
  415a88:	mov	w8, #0x5341                	// #21313
  415a8c:	movk	w8, #0x5846, lsl #16
  415a90:	cmp	x0, x8
  415a94:	mov	w8, #0x2                   	// #2
  415a98:	b.gt	415aec <wcrtomb@plt+0x1312c>
  415a9c:	mov	w9, #0x4973                	// #18803
  415aa0:	movk	w9, #0x5265, lsl #16
  415aa4:	cmp	x0, x9
  415aa8:	b.eq	415ae0 <wcrtomb@plt+0x13120>  // b.none
  415aac:	mov	w8, #0x414f                	// #16719
  415ab0:	movk	w8, #0x5346, lsl #16
  415ab4:	cmp	x0, x8
  415ab8:	b.eq	415adc <wcrtomb@plt+0x1311c>  // b.none
  415abc:	b	415b0c <wcrtomb@plt+0x1314c>
  415ac0:	cbz	x0, 415adc <wcrtomb@plt+0x1311c>
  415ac4:	mov	w8, #0x6969                	// #26985
  415ac8:	cmp	x0, x8
  415acc:	b.eq	415adc <wcrtomb@plt+0x1311c>  // b.none
  415ad0:	mov	w8, #0x9fa0                	// #40864
  415ad4:	cmp	x0, x8
  415ad8:	b.ne	415b0c <wcrtomb@plt+0x1314c>  // b.any
  415adc:	mov	w8, wzr
  415ae0:	mov	w0, w8
  415ae4:	ldp	x29, x30, [sp], #16
  415ae8:	ret
  415aec:	mov	w9, #0x5342                	// #21314
  415af0:	movk	w9, #0x5846, lsl #16
  415af4:	cmp	x0, x9
  415af8:	b.eq	415ae0 <wcrtomb@plt+0x13120>  // b.none
  415afc:	mov	w8, #0x4d42                	// #19778
  415b00:	movk	w8, #0xff53, lsl #16
  415b04:	cmp	x0, x8
  415b08:	b.eq	415adc <wcrtomb@plt+0x1311c>  // b.none
  415b0c:	mov	w8, #0x1                   	// #1
  415b10:	b	415ae0 <wcrtomb@plt+0x13120>
  415b14:	stp	x29, x30, [sp, #-48]!
  415b18:	stp	x20, x19, [sp, #32]
  415b1c:	ldrh	w8, [x0, #72]
  415b20:	mov	w9, #0x102                 	// #258
  415b24:	mov	x20, x0
  415b28:	mov	x19, x1
  415b2c:	tst	w8, w9
  415b30:	str	x21, [sp, #16]
  415b34:	mov	x29, sp
  415b38:	b.eq	415b94 <wcrtomb@plt+0x131d4>  // b.none
  415b3c:	mov	w0, #0x18                  	// #24
  415b40:	bl	4024e0 <malloc@plt>
  415b44:	cbz	x0, 415bb4 <wcrtomb@plt+0x131f4>
  415b48:	ldr	x8, [x19, #120]
  415b4c:	mov	x21, x0
  415b50:	mov	x1, x21
  415b54:	str	x8, [x0]
  415b58:	ldr	x8, [x19, #128]
  415b5c:	stp	x8, x19, [x0, #8]
  415b60:	ldr	x0, [x20, #88]
  415b64:	bl	411404 <wcrtomb@plt+0xea44>
  415b68:	cmp	x0, x21
  415b6c:	b.eq	415bb0 <wcrtomb@plt+0x131f0>  // b.none
  415b70:	mov	x20, x0
  415b74:	mov	x0, x21
  415b78:	bl	402770 <free@plt>
  415b7c:	cbz	x20, 415bc4 <wcrtomb@plt+0x13204>
  415b80:	ldr	x8, [x20, #16]
  415b84:	mov	w9, #0x2                   	// #2
  415b88:	strh	w9, [x19, #108]
  415b8c:	str	x8, [x19]
  415b90:	b	415bb0 <wcrtomb@plt+0x131f0>
  415b94:	ldr	x0, [x20, #88]
  415b98:	add	x1, x19, #0x78
  415b9c:	bl	422f54 <_obstack_memory_used@@Base+0xcb20>
  415ba0:	tbz	w0, #0, 415bb0 <wcrtomb@plt+0x131f0>
  415ba4:	mov	w8, #0x2                   	// #2
  415ba8:	str	x19, [x19]
  415bac:	strh	w8, [x19, #108]
  415bb0:	mov	w0, #0x1                   	// #1
  415bb4:	ldp	x20, x19, [sp, #32]
  415bb8:	ldr	x21, [sp, #16]
  415bbc:	ldp	x29, x30, [sp], #48
  415bc0:	ret
  415bc4:	mov	w0, wzr
  415bc8:	b	415bb4 <wcrtomb@plt+0x131f4>
  415bcc:	stp	x29, x30, [sp, #-32]!
  415bd0:	stp	x20, x19, [sp, #16]
  415bd4:	ldr	w8, [x0, #44]
  415bd8:	mov	x19, x0
  415bdc:	mov	w20, w1
  415be0:	mov	x29, sp
  415be4:	cmp	w8, w1
  415be8:	b.ne	415bf4 <wcrtomb@plt+0x13234>  // b.any
  415bec:	cmn	w8, #0x64
  415bf0:	b.ne	415c30 <wcrtomb@plt+0x13270>  // b.any
  415bf4:	tbz	w2, #0, 415c0c <wcrtomb@plt+0x1324c>
  415bf8:	add	x0, x19, #0x60
  415bfc:	mov	w1, w8
  415c00:	bl	4231f4 <_obstack_memory_used@@Base+0xcdc0>
  415c04:	tbz	w0, #31, 415c1c <wcrtomb@plt+0x1325c>
  415c08:	b	415c20 <wcrtomb@plt+0x13260>
  415c0c:	tbnz	w8, #31, 415c20 <wcrtomb@plt+0x13260>
  415c10:	ldr	w9, [x19, #72]
  415c14:	tbnz	w9, #2, 415c20 <wcrtomb@plt+0x13260>
  415c18:	mov	w0, w8
  415c1c:	bl	402650 <close@plt>
  415c20:	str	w20, [x19, #44]
  415c24:	ldp	x20, x19, [sp, #16]
  415c28:	ldp	x29, x30, [sp], #32
  415c2c:	ret
  415c30:	bl	4026c0 <abort@plt>
  415c34:	stp	x29, x30, [sp, #-16]!
  415c38:	cmp	w2, #0x5
  415c3c:	mov	x29, sp
  415c40:	b.cc	415c5c <wcrtomb@plt+0x1329c>  // b.lo, b.ul, b.last
  415c44:	bl	402930 <__errno_location@plt>
  415c48:	mov	w8, #0x16                  	// #22
  415c4c:	str	w8, [x0]
  415c50:	mov	w0, #0x1                   	// #1
  415c54:	ldp	x29, x30, [sp], #16
  415c58:	ret
  415c5c:	mov	w0, wzr
  415c60:	strh	w2, [x1, #112]
  415c64:	ldp	x29, x30, [sp], #16
  415c68:	ret
  415c6c:	stp	x29, x30, [sp, #-48]!
  415c70:	tst	w1, #0xffffefff
  415c74:	stp	x22, x21, [sp, #16]
  415c78:	stp	x20, x19, [sp, #32]
  415c7c:	mov	x29, sp
  415c80:	b.eq	415c9c <wcrtomb@plt+0x132dc>  // b.none
  415c84:	bl	402930 <__errno_location@plt>
  415c88:	mov	x8, x0
  415c8c:	mov	w9, #0x16                  	// #22
  415c90:	mov	x0, xzr
  415c94:	str	w9, [x8]
  415c98:	b	415cd8 <wcrtomb@plt+0x13318>
  415c9c:	ldr	x22, [x0]
  415ca0:	mov	w21, w1
  415ca4:	mov	x19, x0
  415ca8:	bl	402930 <__errno_location@plt>
  415cac:	str	wzr, [x0]
  415cb0:	ldrb	w8, [x19, #73]
  415cb4:	tbnz	w8, #5, 415cd4 <wcrtomb@plt+0x13314>
  415cb8:	ldrh	w8, [x22, #108]
  415cbc:	cmp	w8, #0x1
  415cc0:	b.eq	415ce8 <wcrtomb@plt+0x13328>  // b.none
  415cc4:	cmp	w8, #0x9
  415cc8:	b.ne	415cd4 <wcrtomb@plt+0x13314>  // b.any
  415ccc:	ldr	x0, [x22, #16]
  415cd0:	b	415cd8 <wcrtomb@plt+0x13318>
  415cd4:	mov	x0, xzr
  415cd8:	ldp	x20, x19, [sp, #32]
  415cdc:	ldp	x22, x21, [sp, #16]
  415ce0:	ldp	x29, x30, [sp], #48
  415ce4:	ret
  415ce8:	mov	x20, x0
  415cec:	ldr	x0, [x19, #8]
  415cf0:	cbz	x0, 415cf8 <wcrtomb@plt+0x13338>
  415cf4:	bl	414884 <wcrtomb@plt+0x11ec4>
  415cf8:	cmp	w21, #0x1, lsl #12
  415cfc:	b.ne	415d1c <wcrtomb@plt+0x1335c>  // b.any
  415d00:	ldr	w8, [x19, #72]
  415d04:	mov	w21, #0x2                   	// #2
  415d08:	orr	w8, w8, #0x1000
  415d0c:	str	w8, [x19, #72]
  415d10:	ldr	x8, [x22, #88]
  415d14:	cbnz	x8, 415d94 <wcrtomb@plt+0x133d4>
  415d18:	b	415d28 <wcrtomb@plt+0x13368>
  415d1c:	mov	w21, #0x1                   	// #1
  415d20:	ldr	x8, [x22, #88]
  415d24:	cbnz	x8, 415d94 <wcrtomb@plt+0x133d4>
  415d28:	ldr	x8, [x22, #48]
  415d2c:	ldrb	w8, [x8]
  415d30:	cmp	w8, #0x2f
  415d34:	b.eq	415d94 <wcrtomb@plt+0x133d4>  // b.none
  415d38:	ldrb	w8, [x19, #72]
  415d3c:	tbnz	w8, #2, 415d94 <wcrtomb@plt+0x133d4>
  415d40:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  415d44:	add	x1, x1, #0x689
  415d48:	mov	x0, x19
  415d4c:	bl	414840 <wcrtomb@plt+0x11e80>
  415d50:	tbnz	w0, #31, 415da8 <wcrtomb@plt+0x133e8>
  415d54:	mov	w22, w0
  415d58:	mov	x0, x19
  415d5c:	mov	w1, w21
  415d60:	bl	415208 <wcrtomb@plt+0x12848>
  415d64:	ldrb	w8, [x19, #73]
  415d68:	str	x0, [x19, #8]
  415d6c:	tbnz	w8, #1, 415db4 <wcrtomb@plt+0x133f4>
  415d70:	mov	w0, w22
  415d74:	bl	4023c0 <fchdir@plt>
  415d78:	cbz	w0, 415dc8 <wcrtomb@plt+0x13408>
  415d7c:	ldr	w19, [x20]
  415d80:	mov	w0, w22
  415d84:	bl	402650 <close@plt>
  415d88:	mov	x0, xzr
  415d8c:	str	w19, [x20]
  415d90:	b	415cd8 <wcrtomb@plt+0x13318>
  415d94:	mov	x0, x19
  415d98:	mov	w1, w21
  415d9c:	bl	415208 <wcrtomb@plt+0x12848>
  415da0:	str	x0, [x19, #8]
  415da4:	b	415cd8 <wcrtomb@plt+0x13318>
  415da8:	mov	x0, xzr
  415dac:	str	xzr, [x19, #8]
  415db0:	b	415cd8 <wcrtomb@plt+0x13318>
  415db4:	mov	w2, #0x1                   	// #1
  415db8:	mov	x0, x19
  415dbc:	mov	w1, w22
  415dc0:	bl	415bcc <wcrtomb@plt+0x1320c>
  415dc4:	b	415dd0 <wcrtomb@plt+0x13410>
  415dc8:	mov	w0, w22
  415dcc:	bl	402650 <close@plt>
  415dd0:	ldr	x0, [x19, #8]
  415dd4:	b	415cd8 <wcrtomb@plt+0x13318>
  415dd8:	ldr	x8, [x0, #8]
  415ddc:	udiv	x9, x8, x1
  415de0:	msub	x0, x9, x1, x8
  415de4:	ret
  415de8:	ldr	x8, [x0, #8]
  415dec:	ldr	x9, [x1, #8]
  415df0:	cmp	x8, x9
  415df4:	b.ne	415e0c <wcrtomb@plt+0x1344c>  // b.any
  415df8:	ldr	x8, [x0]
  415dfc:	ldr	x9, [x1]
  415e00:	cmp	x8, x9
  415e04:	cset	w0, eq  // eq = none
  415e08:	ret
  415e0c:	mov	w0, wzr
  415e10:	ret
  415e14:	sub	sp, sp, #0xb0
  415e18:	stp	x29, x30, [sp, #128]
  415e1c:	stp	x22, x21, [sp, #144]
  415e20:	stp	x20, x19, [sp, #160]
  415e24:	ldr	x22, [x0, #80]
  415e28:	add	x29, sp, #0x80
  415e2c:	ldrb	w8, [x22, #73]
  415e30:	tbz	w8, #1, 415ec0 <wcrtomb@plt+0x13500>
  415e34:	ldr	x20, [x22, #80]
  415e38:	mov	x19, x0
  415e3c:	mov	w21, w1
  415e40:	cbz	x20, 415e4c <wcrtomb@plt+0x1348c>
  415e44:	cbnz	x20, 415e7c <wcrtomb@plt+0x134bc>
  415e48:	b	415eac <wcrtomb@plt+0x134ec>
  415e4c:	adrp	x2, 415000 <wcrtomb@plt+0x12640>
  415e50:	adrp	x3, 415000 <wcrtomb@plt+0x12640>
  415e54:	adrp	x4, 402000 <mbrtowc@plt-0x310>
  415e58:	add	x2, x2, #0xf24
  415e5c:	add	x3, x3, #0xf34
  415e60:	add	x4, x4, #0x770
  415e64:	mov	w0, #0xd                   	// #13
  415e68:	mov	x1, xzr
  415e6c:	bl	410b98 <wcrtomb@plt+0xe1d8>
  415e70:	mov	x20, x0
  415e74:	str	x0, [x22, #80]
  415e78:	cbz	x20, 415eac <wcrtomb@plt+0x134ec>
  415e7c:	ldr	x8, [x19, #120]
  415e80:	add	x1, sp, #0x8
  415e84:	mov	x0, x20
  415e88:	str	x8, [sp, #8]
  415e8c:	bl	4108dc <wcrtomb@plt+0xdf1c>
  415e90:	cbz	x0, 415ea4 <wcrtomb@plt+0x134e4>
  415e94:	ldr	x0, [x0, #8]
  415e98:	mov	w8, wzr
  415e9c:	cbnz	w8, 415eac <wcrtomb@plt+0x134ec>
  415ea0:	b	415ec4 <wcrtomb@plt+0x13504>
  415ea4:	mov	w8, #0x1                   	// #1
  415ea8:	cbz	w8, 415ec4 <wcrtomb@plt+0x13504>
  415eac:	tbnz	w21, #31, 415ec0 <wcrtomb@plt+0x13500>
  415eb0:	add	x1, sp, #0x8
  415eb4:	mov	w0, w21
  415eb8:	bl	4025a0 <fstatfs@plt>
  415ebc:	cbz	w0, 415ed8 <wcrtomb@plt+0x13518>
  415ec0:	mov	x0, xzr
  415ec4:	ldp	x20, x19, [sp, #160]
  415ec8:	ldp	x22, x21, [sp, #144]
  415ecc:	ldp	x29, x30, [sp, #128]
  415ed0:	add	sp, sp, #0xb0
  415ed4:	ret
  415ed8:	cbz	x20, 415f1c <wcrtomb@plt+0x1355c>
  415edc:	mov	w0, #0x10                  	// #16
  415ee0:	bl	4024e0 <malloc@plt>
  415ee4:	cbz	x0, 415f1c <wcrtomb@plt+0x1355c>
  415ee8:	ldr	x8, [x19, #120]
  415eec:	ldr	x9, [sp, #8]
  415ef0:	mov	x21, x0
  415ef4:	mov	x1, x21
  415ef8:	stp	x8, x9, [x0]
  415efc:	mov	x0, x20
  415f00:	bl	411404 <wcrtomb@plt+0xea44>
  415f04:	cbz	x0, 415f14 <wcrtomb@plt+0x13554>
  415f08:	cmp	x0, x21
  415f0c:	b.eq	415f1c <wcrtomb@plt+0x1355c>  // b.none
  415f10:	bl	4026c0 <abort@plt>
  415f14:	mov	x0, x21
  415f18:	bl	402770 <free@plt>
  415f1c:	ldr	x0, [sp, #8]
  415f20:	b	415ec4 <wcrtomb@plt+0x13504>
  415f24:	ldr	x8, [x0]
  415f28:	udiv	x9, x8, x1
  415f2c:	msub	x0, x9, x1, x8
  415f30:	ret
  415f34:	ldr	x8, [x0]
  415f38:	ldr	x9, [x1]
  415f3c:	cmp	x8, x9
  415f40:	cset	w0, eq  // eq = none
  415f44:	ret
  415f48:	sub	w8, w1, #0x1
  415f4c:	cmp	w8, #0xb
  415f50:	b.hi	415f68 <wcrtomb@plt+0x135a8>  // b.pmore
  415f54:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  415f58:	add	x9, x9, #0x658
  415f5c:	ldr	w8, [x9, w8, sxtw #2]
  415f60:	str	w8, [x0, #16]
  415f64:	ret
  415f68:	str	wzr, [x0, #16]
  415f6c:	ret
  415f70:	stp	x29, x30, [sp, #-16]!
  415f74:	mov	x29, sp
  415f78:	bl	415e14 <wcrtomb@plt+0x13454>
  415f7c:	mov	w9, #0x6969                	// #26985
  415f80:	mov	x8, x0
  415f84:	cmp	x0, x9
  415f88:	mov	w0, wzr
  415f8c:	b.eq	415fb4 <wcrtomb@plt+0x135f4>  // b.none
  415f90:	mov	w9, #0x1994                	// #6548
  415f94:	movk	w9, #0x102, lsl #16
  415f98:	cmp	x8, x9
  415f9c:	b.eq	415fb4 <wcrtomb@plt+0x135f4>  // b.none
  415fa0:	mov	w9, #0x4d42                	// #19778
  415fa4:	movk	w9, #0xff53, lsl #16
  415fa8:	cmp	x8, x9
  415fac:	b.eq	415fb4 <wcrtomb@plt+0x135f4>  // b.none
  415fb0:	mov	w0, #0x1                   	// #1
  415fb4:	ldp	x29, x30, [sp], #16
  415fb8:	ret
  415fbc:	ldr	x9, [x0, #8]
  415fc0:	ldr	x8, [x0, #32]
  415fc4:	cbnz	x9, 415fe0 <wcrtomb@plt+0x13620>
  415fc8:	ldr	x9, [x1, #88]
  415fcc:	tbz	x9, #63, 416010 <wcrtomb@plt+0x13650>
  415fd0:	ret
  415fd4:	str	x8, [x9, #56]
  415fd8:	ldr	x9, [x9, #16]
  415fdc:	cbz	x9, 415fc8 <wcrtomb@plt+0x13608>
  415fe0:	ldr	x10, [x9, #48]
  415fe4:	add	x11, x9, #0xf8
  415fe8:	cmp	x10, x11
  415fec:	b.eq	415fd4 <wcrtomb@plt+0x13614>  // b.none
  415ff0:	ldr	x11, [x9, #56]
  415ff4:	sub	x10, x10, x11
  415ff8:	add	x10, x8, x10
  415ffc:	str	x10, [x9, #48]
  416000:	b	415fd4 <wcrtomb@plt+0x13614>
  416004:	ldr	x10, [x9, #88]
  416008:	mov	x1, x9
  41600c:	tbnz	x10, #63, 415fd0 <wcrtomb@plt+0x13610>
  416010:	ldr	x9, [x1, #48]
  416014:	add	x10, x1, #0xf8
  416018:	cmp	x9, x10
  41601c:	b.eq	416030 <wcrtomb@plt+0x13670>  // b.none
  416020:	ldr	x10, [x1, #56]
  416024:	sub	x9, x9, x10
  416028:	add	x9, x8, x9
  41602c:	str	x9, [x1, #48]
  416030:	ldr	x9, [x1, #16]
  416034:	str	x8, [x1, #56]
  416038:	cbnz	x9, 416004 <wcrtomb@plt+0x13644>
  41603c:	ldr	x9, [x1, #8]
  416040:	b	416004 <wcrtomb@plt+0x13644>
  416044:	ldr	x8, [x0]
  416048:	ldr	x9, [x1]
  41604c:	ldr	x8, [x8, #128]
  416050:	ldr	x9, [x9, #128]
  416054:	cmp	x9, x8
  416058:	cset	w10, cc  // cc = lo, ul, last
  41605c:	cmp	x8, x9
  416060:	csinv	w0, w10, wzr, cs  // cs = hs, nlast
  416064:	ret
  416068:	stp	x29, x30, [sp, #-16]!
  41606c:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  416070:	mov	x8, x1
  416074:	add	x9, x9, #0x8c8
  416078:	cmp	x2, #0x0
  41607c:	mov	x1, x0
  416080:	csel	x3, x9, x2, eq  // eq = none
  416084:	mov	x0, xzr
  416088:	mov	x2, x8
  41608c:	mov	x29, sp
  416090:	bl	41609c <wcrtomb@plt+0x136dc>
  416094:	ldp	x29, x30, [sp], #16
  416098:	ret
  41609c:	sub	sp, sp, #0x40
  4160a0:	stp	x29, x30, [sp, #16]
  4160a4:	add	x29, sp, #0x10
  4160a8:	cmp	x0, #0x0
  4160ac:	sub	x8, x29, #0x4
  4160b0:	stp	x20, x19, [sp, #48]
  4160b4:	csel	x20, x8, x0, eq  // eq = none
  4160b8:	mov	x0, x20
  4160bc:	stp	x22, x21, [sp, #32]
  4160c0:	mov	x22, x2
  4160c4:	mov	x19, x1
  4160c8:	bl	402310 <mbrtowc@plt>
  4160cc:	mov	x21, x0
  4160d0:	cbz	x22, 4160f4 <wcrtomb@plt+0x13734>
  4160d4:	cmn	x21, #0x2
  4160d8:	b.cc	4160f4 <wcrtomb@plt+0x13734>  // b.lo, b.ul, b.last
  4160dc:	mov	w0, wzr
  4160e0:	bl	423158 <_obstack_memory_used@@Base+0xcd24>
  4160e4:	tbnz	w0, #0, 4160f4 <wcrtomb@plt+0x13734>
  4160e8:	ldrb	w8, [x19]
  4160ec:	mov	w21, #0x1                   	// #1
  4160f0:	str	w8, [x20]
  4160f4:	mov	x0, x21
  4160f8:	ldp	x20, x19, [sp, #48]
  4160fc:	ldp	x22, x21, [sp, #32]
  416100:	ldp	x29, x30, [sp, #16]
  416104:	add	sp, sp, #0x40
  416108:	ret

000000000041610c <_obstack_begin@@Base>:
  41610c:	stp	x29, x30, [sp, #-16]!
  416110:	ldrb	w8, [x0, #80]
  416114:	mov	x29, sp
  416118:	stp	x3, x4, [x0, #56]
  41611c:	and	w8, w8, #0xfe
  416120:	strb	w8, [x0, #80]
  416124:	bl	416134 <_obstack_begin@@Base+0x28>
  416128:	mov	w0, #0x1                   	// #1
  41612c:	ldp	x29, x30, [sp], #16
  416130:	ret
  416134:	stp	x29, x30, [sp, #-48]!
  416138:	cmp	x2, #0x0
  41613c:	mov	w8, #0x10                  	// #16
  416140:	stp	x20, x19, [sp, #32]
  416144:	mov	w9, #0xfe0                 	// #4064
  416148:	csel	x20, x8, x2, eq  // eq = none
  41614c:	cmp	x1, #0x0
  416150:	str	x21, [sp, #16]
  416154:	csel	x1, x9, x1, eq  // eq = none
  416158:	sub	x21, x20, #0x1
  41615c:	mov	x29, sp
  416160:	mov	x19, x0
  416164:	str	x1, [x0]
  416168:	str	x21, [x0, #48]
  41616c:	bl	41630c <_obstack_newchunk@@Base+0x118>
  416170:	str	x0, [x19, #8]
  416174:	cbz	x0, 4161bc <_obstack_begin@@Base+0xb0>
  416178:	ldr	x10, [x19]
  41617c:	add	x8, x0, x21
  416180:	neg	x9, x20
  416184:	add	x8, x8, #0x10
  416188:	and	x8, x8, x9
  41618c:	stp	x8, x8, [x19, #16]
  416190:	add	x8, x0, x10
  416194:	str	x8, [x0]
  416198:	str	x8, [x19, #32]
  41619c:	str	xzr, [x0, #8]
  4161a0:	ldrb	w8, [x19, #80]
  4161a4:	ldr	x21, [sp, #16]
  4161a8:	and	w8, w8, #0xfffffff9
  4161ac:	strb	w8, [x19, #80]
  4161b0:	ldp	x20, x19, [sp, #32]
  4161b4:	ldp	x29, x30, [sp], #48
  4161b8:	ret
  4161bc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  4161c0:	ldr	x8, [x8, #1088]
  4161c4:	blr	x8

00000000004161c8 <_obstack_begin_1@@Base>:
  4161c8:	stp	x29, x30, [sp, #-16]!
  4161cc:	ldrb	w8, [x0, #80]
  4161d0:	mov	x29, sp
  4161d4:	stp	x3, x4, [x0, #56]
  4161d8:	str	x5, [x0, #72]
  4161dc:	orr	w8, w8, #0x1
  4161e0:	strb	w8, [x0, #80]
  4161e4:	bl	416134 <_obstack_begin@@Base+0x28>
  4161e8:	mov	w0, #0x1                   	// #1
  4161ec:	ldp	x29, x30, [sp], #16
  4161f0:	ret

00000000004161f4 <_obstack_newchunk@@Base>:
  4161f4:	stp	x29, x30, [sp, #-80]!
  4161f8:	str	x25, [sp, #16]
  4161fc:	stp	x24, x23, [sp, #32]
  416200:	stp	x22, x21, [sp, #48]
  416204:	stp	x20, x19, [sp, #64]
  416208:	ldp	x9, x8, [x0, #16]
  41620c:	ldr	x10, [x0, #48]
  416210:	ldp	x11, x21, [x0]
  416214:	mov	x19, x0
  416218:	sub	x20, x8, x9
  41621c:	adds	x8, x20, x1
  416220:	lsr	x9, x20, #3
  416224:	cset	w12, cs  // cs = hs, nlast
  416228:	adds	x10, x8, x10
  41622c:	add	x9, x9, #0x64
  416230:	cset	w8, cs  // cs = hs, nlast
  416234:	adds	x9, x9, x10
  416238:	csel	x9, x10, x9, cs  // cs = hs, nlast
  41623c:	cmp	x9, x11
  416240:	mov	x22, xzr
  416244:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  416248:	mov	x29, sp
  41624c:	tbnz	w12, #0, 416264 <_obstack_newchunk@@Base+0x70>
  416250:	tbnz	w8, #0, 416264 <_obstack_newchunk@@Base+0x70>
  416254:	mov	x0, x19
  416258:	mov	x1, x23
  41625c:	bl	41630c <_obstack_newchunk@@Base+0x118>
  416260:	mov	x22, x0
  416264:	cbz	x22, 416300 <_obstack_newchunk@@Base+0x10c>
  416268:	add	x8, x22, x23
  41626c:	str	x22, [x19, #8]
  416270:	str	x21, [x22, #8]
  416274:	str	x8, [x19, #32]
  416278:	str	x8, [x22]
  41627c:	ldr	x25, [x19, #48]
  416280:	ldr	x24, [x19, #16]
  416284:	mov	x2, x20
  416288:	add	x8, x22, x25
  41628c:	add	x8, x8, #0x10
  416290:	bic	x23, x8, x25
  416294:	mov	x0, x23
  416298:	mov	x1, x24
  41629c:	bl	402320 <memcpy@plt>
  4162a0:	ldrb	w8, [x19, #80]
  4162a4:	tbnz	w8, #1, 4162d4 <_obstack_newchunk@@Base+0xe0>
  4162a8:	add	x9, x21, x25
  4162ac:	mvn	x8, x25
  4162b0:	add	x9, x9, #0x10
  4162b4:	and	x8, x9, x8
  4162b8:	cmp	x24, x8
  4162bc:	b.ne	4162d4 <_obstack_newchunk@@Base+0xe0>  // b.any
  4162c0:	ldr	x8, [x21, #8]
  4162c4:	mov	x0, x19
  4162c8:	mov	x1, x21
  4162cc:	str	x8, [x22, #8]
  4162d0:	bl	416344 <_obstack_newchunk@@Base+0x150>
  4162d4:	ldrb	w8, [x19, #80]
  4162d8:	add	x9, x23, x20
  4162dc:	stp	x23, x9, [x19, #16]
  4162e0:	ldr	x25, [sp, #16]
  4162e4:	and	w8, w8, #0xfffffffd
  4162e8:	strb	w8, [x19, #80]
  4162ec:	ldp	x20, x19, [sp, #64]
  4162f0:	ldp	x22, x21, [sp, #48]
  4162f4:	ldp	x24, x23, [sp, #32]
  4162f8:	ldp	x29, x30, [sp], #80
  4162fc:	ret
  416300:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  416304:	ldr	x8, [x8, #1088]
  416308:	blr	x8
  41630c:	stp	x29, x30, [sp, #-16]!
  416310:	ldrb	w8, [x0, #80]
  416314:	mov	x29, sp
  416318:	tbnz	w8, #0, 416330 <_obstack_newchunk@@Base+0x13c>
  41631c:	ldr	x8, [x0, #56]
  416320:	mov	x0, x1
  416324:	blr	x8
  416328:	ldp	x29, x30, [sp], #16
  41632c:	ret
  416330:	ldr	x8, [x0, #56]
  416334:	ldr	x0, [x0, #72]
  416338:	blr	x8
  41633c:	ldp	x29, x30, [sp], #16
  416340:	ret
  416344:	stp	x29, x30, [sp, #-16]!
  416348:	ldrb	w8, [x0, #80]
  41634c:	mov	x29, sp
  416350:	tbnz	w8, #0, 416368 <_obstack_newchunk@@Base+0x174>
  416354:	ldr	x8, [x0, #64]
  416358:	mov	x0, x1
  41635c:	blr	x8
  416360:	ldp	x29, x30, [sp], #16
  416364:	ret
  416368:	ldp	x8, x0, [x0, #64]
  41636c:	blr	x8
  416370:	ldp	x29, x30, [sp], #16
  416374:	ret

0000000000416378 <_obstack_allocated_p@@Base>:
  416378:	ldr	x8, [x0, #8]
  41637c:	b	416384 <_obstack_allocated_p@@Base+0xc>
  416380:	ldr	x8, [x8, #8]
  416384:	cmp	x8, #0x0
  416388:	cset	w9, ne  // ne = any
  41638c:	cbz	x8, 4163a4 <_obstack_allocated_p@@Base+0x2c>
  416390:	cmp	x8, x1
  416394:	b.cs	416380 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  416398:	ldr	x10, [x8]
  41639c:	cmp	x10, x1
  4163a0:	b.cc	416380 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  4163a4:	and	w0, w9, #0x1
  4163a8:	ret

00000000004163ac <_obstack_free@@Base>:
  4163ac:	stp	x29, x30, [sp, #-48]!
  4163b0:	stp	x20, x19, [sp, #32]
  4163b4:	ldr	x8, [x0, #8]
  4163b8:	mov	x20, x1
  4163bc:	str	x21, [sp, #16]
  4163c0:	mov	x29, sp
  4163c4:	cbz	x8, 41641c <_obstack_free@@Base+0x70>
  4163c8:	mov	x19, x0
  4163cc:	b	4163f4 <_obstack_free@@Base+0x48>
  4163d0:	ldr	x21, [x8, #8]
  4163d4:	mov	x0, x19
  4163d8:	mov	x1, x8
  4163dc:	bl	416344 <_obstack_newchunk@@Base+0x150>
  4163e0:	ldrb	w8, [x19, #80]
  4163e4:	orr	w8, w8, #0x2
  4163e8:	strb	w8, [x19, #80]
  4163ec:	mov	x8, x21
  4163f0:	cbz	x21, 41641c <_obstack_free@@Base+0x70>
  4163f4:	cmp	x8, x20
  4163f8:	b.cs	4163d0 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  4163fc:	ldr	x9, [x8]
  416400:	cmp	x9, x20
  416404:	b.cc	4163d0 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  416408:	stp	x20, x20, [x19, #16]
  41640c:	ldr	x9, [x8]
  416410:	str	x8, [x19, #8]
  416414:	str	x9, [x19, #32]
  416418:	b	416420 <_obstack_free@@Base+0x74>
  41641c:	cbnz	x20, 416430 <_obstack_free@@Base+0x84>
  416420:	ldp	x20, x19, [sp, #32]
  416424:	ldr	x21, [sp, #16]
  416428:	ldp	x29, x30, [sp], #48
  41642c:	ret
  416430:	bl	4026c0 <abort@plt>

0000000000416434 <_obstack_memory_used@@Base>:
  416434:	ldr	x8, [x0, #8]
  416438:	cbz	x8, 416454 <_obstack_memory_used@@Base+0x20>
  41643c:	mov	x0, xzr
  416440:	sub	x10, x0, x8
  416444:	ldp	x9, x8, [x8]
  416448:	add	x0, x10, x9
  41644c:	cbnz	x8, 416440 <_obstack_memory_used@@Base+0xc>
  416450:	ret
  416454:	mov	x0, xzr
  416458:	ret
  41645c:	stp	x29, x30, [sp, #-32]!
  416460:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  416464:	str	x19, [sp, #16]
  416468:	ldr	x19, [x8, #1104]
  41646c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  416470:	add	x1, x1, #0x575
  416474:	mov	w2, #0x5                   	// #5
  416478:	mov	x0, xzr
  41647c:	mov	x29, sp
  416480:	bl	402890 <dcgettext@plt>
  416484:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  416488:	mov	x2, x0
  41648c:	add	x1, x1, #0x24f
  416490:	mov	x0, x19
  416494:	bl	402980 <fprintf@plt>
  416498:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x20bcc>
  41649c:	ldr	w0, [x8, #992]
  4164a0:	bl	4023a0 <exit@plt>
  4164a4:	stp	x29, x30, [sp, #-16]!
  4164a8:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4164ac:	ldr	x3, [x9, #3552]
  4164b0:	ldrb	w9, [x2, #56]
  4164b4:	mov	x8, x1
  4164b8:	mov	x1, x0
  4164bc:	ubfx	x10, x3, #21, #11
  4164c0:	and	w10, w10, #0x10
  4164c4:	and	w9, w9, #0xffffffef
  4164c8:	orr	w9, w9, w10
  4164cc:	orr	w9, w9, #0x80
  4164d0:	strb	w9, [x2, #56]
  4164d4:	mov	x0, x2
  4164d8:	mov	x2, x8
  4164dc:	mov	x29, sp
  4164e0:	bl	416520 <_obstack_memory_used@@Base+0xec>
  4164e4:	cbz	w0, 416514 <_obstack_memory_used@@Base+0xe0>
  4164e8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4164ec:	add	x8, x8, #0x960
  4164f0:	ldr	x8, [x8, w0, sxtw #3]
  4164f4:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4164f8:	add	x9, x9, #0x7de
  4164fc:	mov	w2, #0x5                   	// #5
  416500:	add	x1, x9, x8
  416504:	mov	x0, xzr
  416508:	bl	402890 <dcgettext@plt>
  41650c:	ldp	x29, x30, [sp], #16
  416510:	ret
  416514:	mov	x0, xzr
  416518:	ldp	x29, x30, [sp], #16
  41651c:	ret
  416520:	sub	sp, sp, #0xe0
  416524:	stp	x29, x30, [sp, #160]
  416528:	add	x29, sp, #0xa0
  41652c:	str	x23, [sp, #176]
  416530:	stp	x22, x21, [sp, #192]
  416534:	stp	x20, x19, [sp, #208]
  416538:	str	wzr, [x29, #28]
  41653c:	ldrb	w8, [x0, #56]
  416540:	ldp	x20, x9, [x0]
  416544:	mov	w10, #0x90                  	// #144
  416548:	mov	x21, x3
  41654c:	mov	x22, x2
  416550:	mov	x23, x1
  416554:	mov	x19, x0
  416558:	and	w8, w8, w10
  41655c:	cmp	x9, #0xe7
  416560:	stp	xzr, x3, [x0, #16]
  416564:	str	xzr, [x0, #48]
  416568:	strb	w8, [x0, #56]
  41656c:	b.ls	41665c <_obstack_memory_used@@Base+0x228>  // b.plast
  416570:	mov	w8, #0xe8                  	// #232
  416574:	mov	x0, x20
  416578:	mov	x1, x22
  41657c:	str	x8, [x19, #16]
  416580:	bl	417b00 <_obstack_memory_used@@Base+0x16cc>
  416584:	str	w0, [x29, #28]
  416588:	cbnz	w0, 41664c <_obstack_memory_used@@Base+0x218>
  41658c:	ldr	x3, [x19, #40]
  416590:	ubfx	x4, x21, #22, #1
  416594:	add	x0, sp, #0x8
  416598:	mov	x1, x23
  41659c:	mov	x2, x22
  4165a0:	mov	x5, x20
  4165a4:	bl	417cf8 <_obstack_memory_used@@Base+0x18c4>
  4165a8:	str	w0, [x29, #28]
  4165ac:	cbnz	w0, 41663c <_obstack_memory_used@@Base+0x208>
  4165b0:	add	x0, sp, #0x8
  4165b4:	add	x3, x29, #0x1c
  4165b8:	mov	x1, x19
  4165bc:	mov	x2, x21
  4165c0:	str	xzr, [x19, #48]
  4165c4:	bl	417eb0 <_obstack_memory_used@@Base+0x1a7c>
  4165c8:	str	x0, [x20, #104]
  4165cc:	cbz	x0, 41663c <_obstack_memory_used@@Base+0x208>
  4165d0:	mov	x0, x19
  4165d4:	bl	417f84 <_obstack_memory_used@@Base+0x1b50>
  4165d8:	str	w0, [x29, #28]
  4165dc:	cbnz	w0, 41663c <_obstack_memory_used@@Base+0x208>
  4165e0:	tbnz	w21, #22, 4165fc <_obstack_memory_used@@Base+0x1c8>
  4165e4:	ldrb	w8, [x20, #176]
  4165e8:	tbz	w8, #2, 4165fc <_obstack_memory_used@@Base+0x1c8>
  4165ec:	ldr	x8, [x19, #40]
  4165f0:	cbnz	x8, 4165fc <_obstack_memory_used@@Base+0x1c8>
  4165f4:	mov	x0, x20
  4165f8:	bl	418160 <_obstack_memory_used@@Base+0x1d2c>
  4165fc:	mov	x0, x20
  416600:	bl	4182e8 <_obstack_memory_used@@Base+0x1eb4>
  416604:	str	w0, [x29, #28]
  416608:	mov	x0, x19
  41660c:	bl	417e28 <_obstack_memory_used@@Base+0x19f4>
  416610:	add	x0, sp, #0x8
  416614:	bl	417e74 <_obstack_memory_used@@Base+0x1a40>
  416618:	ldr	w8, [x29, #28]
  41661c:	cbnz	w8, 41664c <_obstack_memory_used@@Base+0x218>
  416620:	ldr	w0, [x29, #28]
  416624:	ldp	x20, x19, [sp, #208]
  416628:	ldp	x22, x21, [sp, #192]
  41662c:	ldr	x23, [sp, #176]
  416630:	ldp	x29, x30, [sp, #160]
  416634:	add	sp, sp, #0xe0
  416638:	ret
  41663c:	mov	x0, x19
  416640:	bl	417e28 <_obstack_memory_used@@Base+0x19f4>
  416644:	add	x0, sp, #0x8
  416648:	bl	417e74 <_obstack_memory_used@@Base+0x1a40>
  41664c:	mov	x0, x20
  416650:	bl	416ca4 <_obstack_memory_used@@Base+0x870>
  416654:	stp	xzr, xzr, [x19]
  416658:	b	416620 <_obstack_memory_used@@Base+0x1ec>
  41665c:	mov	w1, #0xe8                  	// #232
  416660:	mov	x0, x20
  416664:	bl	402610 <realloc@plt>
  416668:	cbz	x0, 41667c <_obstack_memory_used@@Base+0x248>
  41666c:	mov	x20, x0
  416670:	mov	w8, #0xe8                  	// #232
  416674:	stp	x0, x8, [x19]
  416678:	b	416570 <_obstack_memory_used@@Base+0x13c>
  41667c:	mov	w0, #0xc                   	// #12
  416680:	b	416624 <_obstack_memory_used@@Base+0x1f0>
  416684:	adrp	x9, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  416688:	ldr	x8, [x9, #3552]
  41668c:	str	x0, [x9, #3552]
  416690:	mov	x0, x8
  416694:	ret
  416698:	stp	x29, x30, [sp, #-48]!
  41669c:	stp	x20, x19, [sp, #32]
  4166a0:	ldr	x20, [x0, #32]
  4166a4:	str	x21, [sp, #16]
  4166a8:	ldr	x21, [x0]
  4166ac:	movi	v0.2d, #0x0
  4166b0:	stp	q0, q0, [x20, #224]
  4166b4:	stp	q0, q0, [x20, #192]
  4166b8:	stp	q0, q0, [x20, #160]
  4166bc:	stp	q0, q0, [x20, #128]
  4166c0:	stp	q0, q0, [x20, #96]
  4166c4:	stp	q0, q0, [x20, #64]
  4166c8:	stp	q0, q0, [x20, #32]
  4166cc:	stp	q0, q0, [x20]
  4166d0:	ldr	x1, [x21, #72]
  4166d4:	mov	x2, x20
  4166d8:	mov	x29, sp
  4166dc:	mov	x19, x0
  4166e0:	bl	416754 <_obstack_memory_used@@Base+0x320>
  4166e4:	ldp	x8, x1, [x21, #72]
  4166e8:	cmp	x8, x1
  4166ec:	b.eq	4166fc <_obstack_memory_used@@Base+0x2c8>  // b.none
  4166f0:	mov	x0, x19
  4166f4:	mov	x2, x20
  4166f8:	bl	416754 <_obstack_memory_used@@Base+0x320>
  4166fc:	ldr	x8, [x21, #72]
  416700:	ldr	x1, [x21, #88]
  416704:	cmp	x8, x1
  416708:	b.eq	416718 <_obstack_memory_used@@Base+0x2e4>  // b.none
  41670c:	mov	x0, x19
  416710:	mov	x2, x20
  416714:	bl	416754 <_obstack_memory_used@@Base+0x320>
  416718:	ldr	x8, [x21, #72]
  41671c:	ldr	x1, [x21, #96]
  416720:	cmp	x8, x1
  416724:	b.eq	416734 <_obstack_memory_used@@Base+0x300>  // b.none
  416728:	mov	x0, x19
  41672c:	mov	x2, x20
  416730:	bl	416754 <_obstack_memory_used@@Base+0x320>
  416734:	ldrb	w8, [x19, #56]
  416738:	ldr	x21, [sp, #16]
  41673c:	mov	w0, wzr
  416740:	orr	w8, w8, #0x8
  416744:	strb	w8, [x19, #56]
  416748:	ldp	x20, x19, [sp, #32]
  41674c:	ldp	x29, x30, [sp], #48
  416750:	ret
  416754:	sub	sp, sp, #0x1a0
  416758:	stp	x29, x30, [sp, #320]
  41675c:	stp	x28, x27, [sp, #336]
  416760:	stp	x26, x25, [sp, #352]
  416764:	stp	x24, x23, [sp, #368]
  416768:	stp	x22, x21, [sp, #384]
  41676c:	stp	x20, x19, [sp, #400]
  416770:	ldr	x23, [x0]
  416774:	mov	x20, x2
  416778:	add	x29, sp, #0x140
  41677c:	str	x0, [sp, #32]
  416780:	ldr	w8, [x23, #180]
  416784:	cmp	w8, #0x1
  416788:	b.ne	416798 <_obstack_memory_used@@Base+0x364>  // b.any
  41678c:	ldrb	w8, [x0, #26]
  416790:	ubfx	w24, w8, #6, #1
  416794:	b	41679c <_obstack_memory_used@@Base+0x368>
  416798:	mov	w24, wzr
  41679c:	ldr	x8, [x1, #16]
  4167a0:	cmp	x8, #0x1
  4167a4:	b.lt	416ab0 <_obstack_memory_used@@Base+0x67c>  // b.tstop
  4167a8:	add	x8, sp, #0x28
  4167ac:	mov	x10, xzr
  4167b0:	mov	w27, #0x1                   	// #1
  4167b4:	orr	x8, x8, #0x1
  4167b8:	stp	x8, x1, [sp, #8]
  4167bc:	b	4167d4 <_obstack_memory_used@@Base+0x3a0>
  4167c0:	ldp	x1, x10, [sp, #16]
  4167c4:	ldr	x8, [x1, #16]
  4167c8:	add	x10, x10, #0x1
  4167cc:	cmp	x10, x8
  4167d0:	b.ge	416ab0 <_obstack_memory_used@@Base+0x67c>  // b.tcont
  4167d4:	ldr	x8, [x1, #24]
  4167d8:	str	x10, [sp, #24]
  4167dc:	ldr	x21, [x8, x10, lsl #3]
  4167e0:	ldr	x8, [x23]
  4167e4:	lsl	x22, x21, #4
  4167e8:	add	x9, x8, x21, lsl #4
  4167ec:	ldrb	w8, [x9, #8]
  4167f0:	cmp	w8, #0x1
  4167f4:	b.eq	416868 <_obstack_memory_used@@Base+0x434>  // b.none
  4167f8:	cmp	w8, #0x6
  4167fc:	b.eq	41694c <_obstack_memory_used@@Base+0x518>  // b.none
  416800:	cmp	w8, #0x3
  416804:	b.ne	4169b8 <_obstack_memory_used@@Base+0x584>  // b.any
  416808:	mov	x26, xzr
  41680c:	mov	x28, xzr
  416810:	b	416824 <_obstack_memory_used@@Base+0x3f0>
  416814:	add	x26, x26, #0x1
  416818:	cmp	x26, #0x4
  41681c:	add	x28, x21, w28, sxtw
  416820:	b.eq	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.none
  416824:	ldr	x8, [x23]
  416828:	mov	x21, xzr
  41682c:	add	x25, x20, w28, sxtw
  416830:	ldr	x8, [x8, x22]
  416834:	ldr	x19, [x8, x26, lsl #3]
  416838:	b	416848 <_obstack_memory_used@@Base+0x414>
  41683c:	add	x21, x21, #0x1
  416840:	cmp	x21, #0x40
  416844:	b.eq	416814 <_obstack_memory_used@@Base+0x3e0>  // b.none
  416848:	lsr	x8, x19, x21
  41684c:	tbz	w8, #0, 41683c <_obstack_memory_used@@Base+0x408>
  416850:	strb	w27, [x25, x21]
  416854:	cbz	w24, 41683c <_obstack_memory_used@@Base+0x408>
  416858:	add	w0, w28, w21
  41685c:	bl	402940 <tolower@plt>
  416860:	strb	w27, [x20, w0, sxtw]
  416864:	b	41683c <_obstack_memory_used@@Base+0x408>
  416868:	ldrb	w0, [x9]
  41686c:	strb	w27, [x20, x0]
  416870:	cbz	w24, 41687c <_obstack_memory_used@@Base+0x448>
  416874:	bl	402940 <tolower@plt>
  416878:	strb	w27, [x20, w0, sxtw]
  41687c:	ldr	x8, [sp, #32]
  416880:	ldrb	w8, [x8, #26]
  416884:	tbz	w8, #6, 4167c0 <_obstack_memory_used@@Base+0x38c>
  416888:	ldr	w8, [x23, #180]
  41688c:	cmp	w8, #0x2
  416890:	b.lt	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.tstop
  416894:	ldr	x8, [x23]
  416898:	add	x9, x21, #0x1
  41689c:	mov	w13, #0x1                   	// #1
  4168a0:	movk	w13, #0x20, lsl #16
  4168a4:	ldrb	w8, [x8, x22]
  4168a8:	strb	w8, [sp, #40]
  4168ac:	ldr	x8, [x23, #16]
  4168b0:	cmp	x9, x8
  4168b4:	ldr	x8, [sp, #8]
  4168b8:	b.cs	4168f8 <_obstack_memory_used@@Base+0x4c4>  // b.hs, b.nlast
  4168bc:	ldr	x8, [sp, #8]
  4168c0:	ldr	x10, [x23]
  4168c4:	add	w12, w13, #0xfe
  4168c8:	add	x10, x10, x22
  4168cc:	ldr	w11, [x10, #24]
  4168d0:	and	w11, w11, w12
  4168d4:	cmp	w11, w13
  4168d8:	b.ne	4168f8 <_obstack_memory_used@@Base+0x4c4>  // b.any
  4168dc:	ldrb	w10, [x10, #16]
  4168e0:	add	x9, x9, #0x1
  4168e4:	add	x22, x22, #0x10
  4168e8:	strb	w10, [x8], #1
  4168ec:	ldr	x10, [x23, #16]
  4168f0:	cmp	x9, x10
  4168f4:	b.cc	4168c0 <_obstack_memory_used@@Base+0x48c>  // b.lo, b.ul, b.last
  4168f8:	add	x9, sp, #0x28
  4168fc:	sub	x22, x8, x9
  416900:	sub	x0, x29, #0xc
  416904:	add	x1, sp, #0x28
  416908:	sub	x3, x29, #0x18
  41690c:	mov	x2, x22
  416910:	stur	xzr, [x29, #-24]
  416914:	bl	41609c <wcrtomb@plt+0x136dc>
  416918:	cmp	x0, x22
  41691c:	b.ne	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.any
  416920:	ldur	w0, [x29, #-12]
  416924:	bl	402970 <towlower@plt>
  416928:	mov	w1, w0
  41692c:	add	x0, sp, #0x28
  416930:	sub	x2, x29, #0x18
  416934:	bl	4029c0 <wcrtomb@plt>
  416938:	cmn	x0, #0x1
  41693c:	b.eq	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.none
  416940:	ldrb	w8, [sp, #40]
  416944:	strb	w27, [x20, x8]
  416948:	b	4167c0 <_obstack_memory_used@@Base+0x38c>
  41694c:	ldr	w8, [x23, #180]
  416950:	ldr	x22, [x9]
  416954:	cmp	w8, #0x2
  416958:	b.lt	4169d4 <_obstack_memory_used@@Base+0x5a0>  // b.tstop
  41695c:	ldr	x8, [x22, #72]
  416960:	cbnz	x8, 416974 <_obstack_memory_used@@Base+0x540>
  416964:	ldrb	w8, [x22, #32]
  416968:	tbnz	w8, #0, 416974 <_obstack_memory_used@@Base+0x540>
  41696c:	ldr	x8, [x22, #64]
  416970:	cbz	x8, 4169d4 <_obstack_memory_used@@Base+0x5a0>
  416974:	sturb	wzr, [x29, #-24]
  416978:	b	41698c <_obstack_memory_used@@Base+0x558>
  41697c:	ldurb	w8, [x29, #-24]
  416980:	add	w8, w8, #0x1
  416984:	sturb	w8, [x29, #-24]
  416988:	tbnz	w8, #8, 4167c0 <_obstack_memory_used@@Base+0x38c>
  41698c:	sub	x1, x29, #0x18
  416990:	add	x3, sp, #0x28
  416994:	mov	w2, #0x1                   	// #1
  416998:	mov	x0, xzr
  41699c:	str	xzr, [sp, #40]
  4169a0:	bl	41609c <wcrtomb@plt+0x136dc>
  4169a4:	cmn	x0, #0x2
  4169a8:	b.ne	41697c <_obstack_memory_used@@Base+0x548>  // b.any
  4169ac:	ldurb	w8, [x29, #-24]
  4169b0:	strb	w27, [x20, x8]
  4169b4:	b	41697c <_obstack_memory_used@@Base+0x548>
  4169b8:	cmp	w8, #0x7
  4169bc:	b.hi	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.pmore
  4169c0:	lsl	w9, w27, w8
  4169c4:	mov	w10, #0xa4                  	// #164
  4169c8:	tst	w9, w10
  4169cc:	b.eq	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.none
  4169d0:	b	416a74 <_obstack_memory_used@@Base+0x640>
  4169d4:	ldr	x8, [x22, #40]
  4169d8:	cmp	x8, #0x1
  4169dc:	b.lt	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.tstop
  4169e0:	mov	x26, xzr
  4169e4:	b	4169f8 <_obstack_memory_used@@Base+0x5c4>
  4169e8:	ldr	x8, [x22, #40]
  4169ec:	add	x26, x26, #0x1
  4169f0:	cmp	x26, x8
  4169f4:	b.ge	4167c0 <_obstack_memory_used@@Base+0x38c>  // b.tcont
  4169f8:	stur	xzr, [x29, #-24]
  4169fc:	ldr	x8, [x22]
  416a00:	add	x0, sp, #0x28
  416a04:	sub	x2, x29, #0x18
  416a08:	ldr	w1, [x8, x26, lsl #2]
  416a0c:	bl	4029c0 <wcrtomb@plt>
  416a10:	cmn	x0, #0x1
  416a14:	b.eq	416a2c <_obstack_memory_used@@Base+0x5f8>  // b.none
  416a18:	ldrb	w0, [sp, #40]
  416a1c:	strb	w27, [x20, x0]
  416a20:	cbz	w24, 416a2c <_obstack_memory_used@@Base+0x5f8>
  416a24:	bl	402940 <tolower@plt>
  416a28:	strb	w27, [x20, w0, sxtw]
  416a2c:	ldr	x8, [sp, #32]
  416a30:	ldrb	w8, [x8, #26]
  416a34:	tbz	w8, #6, 4169e8 <_obstack_memory_used@@Base+0x5b4>
  416a38:	ldr	w8, [x23, #180]
  416a3c:	cmp	w8, #0x2
  416a40:	b.lt	4169e8 <_obstack_memory_used@@Base+0x5b4>  // b.tstop
  416a44:	ldr	x8, [x22]
  416a48:	ldr	w0, [x8, x26, lsl #2]
  416a4c:	bl	402970 <towlower@plt>
  416a50:	mov	w1, w0
  416a54:	add	x0, sp, #0x28
  416a58:	sub	x2, x29, #0x18
  416a5c:	bl	4029c0 <wcrtomb@plt>
  416a60:	cmn	x0, #0x1
  416a64:	b.eq	4169e8 <_obstack_memory_used@@Base+0x5b4>  // b.none
  416a68:	ldrb	w8, [sp, #40]
  416a6c:	strb	w27, [x20, x8]
  416a70:	b	4169e8 <_obstack_memory_used@@Base+0x5b4>
  416a74:	movi	v0.16b, #0x1
  416a78:	cmp	w8, #0x2
  416a7c:	stp	q0, q0, [x20, #224]
  416a80:	stp	q0, q0, [x20, #192]
  416a84:	stp	q0, q0, [x20, #160]
  416a88:	stp	q0, q0, [x20, #128]
  416a8c:	stp	q0, q0, [x20, #96]
  416a90:	stp	q0, q0, [x20, #64]
  416a94:	stp	q0, q0, [x20, #32]
  416a98:	stp	q0, q0, [x20]
  416a9c:	b.ne	416ab0 <_obstack_memory_used@@Base+0x67c>  // b.any
  416aa0:	ldr	x9, [sp, #32]
  416aa4:	ldrb	w8, [x9, #56]
  416aa8:	orr	w8, w8, #0x1
  416aac:	strb	w8, [x9, #56]
  416ab0:	ldp	x20, x19, [sp, #400]
  416ab4:	ldp	x22, x21, [sp, #384]
  416ab8:	ldp	x24, x23, [sp, #368]
  416abc:	ldp	x26, x25, [sp, #352]
  416ac0:	ldp	x28, x27, [sp, #336]
  416ac4:	ldp	x29, x30, [sp, #320]
  416ac8:	add	sp, sp, #0x1a0
  416acc:	ret
  416ad0:	stp	x29, x30, [sp, #-48]!
  416ad4:	stp	x20, x19, [sp, #32]
  416ad8:	mov	x19, x0
  416adc:	stp	xzr, xzr, [x0]
  416ae0:	str	xzr, [x0, #16]
  416ae4:	mov	w0, #0x100                 	// #256
  416ae8:	stp	x22, x21, [sp, #16]
  416aec:	mov	x29, sp
  416af0:	mov	w21, w2
  416af4:	mov	x20, x1
  416af8:	bl	4024e0 <malloc@plt>
  416afc:	str	x0, [x19, #32]
  416b00:	cbz	x0, 416bb8 <_obstack_memory_used@@Base+0x784>
  416b04:	mov	w8, #0xb2fc                	// #45820
  416b08:	mov	w9, #0x2c6                 	// #710
  416b0c:	tst	w21, #0x1
  416b10:	movk	w8, #0x3, lsl #16
  416b14:	movk	w9, #0x101, lsl #16
  416b18:	lsl	w10, w21, #21
  416b1c:	csel	x8, x9, x8, eq  // eq = none
  416b20:	and	w9, w10, #0x400000
  416b24:	orr	x22, x8, x9
  416b28:	tbnz	w21, #2, 416b38 <_obstack_memory_used@@Base+0x704>
  416b2c:	ldrb	w8, [x19, #56]
  416b30:	and	w8, w8, #0x7f
  416b34:	b	416b50 <_obstack_memory_used@@Base+0x71c>
  416b38:	ldrb	w8, [x19, #56]
  416b3c:	mov	w9, #0xb2be                	// #45758
  416b40:	movk	w9, #0x143, lsl #16
  416b44:	and	x9, x22, x9
  416b48:	orr	x22, x9, #0x100
  416b4c:	orr	w8, w8, #0x80
  416b50:	strb	w8, [x19, #56]
  416b54:	and	w8, w8, #0xff
  416b58:	lsl	w9, w21, #1
  416b5c:	and	w9, w9, #0x10
  416b60:	and	w8, w8, #0xffffffef
  416b64:	orr	w8, w8, w9
  416b68:	mov	x0, x20
  416b6c:	strb	w8, [x19, #56]
  416b70:	str	xzr, [x19, #40]
  416b74:	bl	402380 <strlen@plt>
  416b78:	mov	x2, x0
  416b7c:	mov	x0, x19
  416b80:	mov	x1, x20
  416b84:	mov	x3, x22
  416b88:	bl	416520 <_obstack_memory_used@@Base+0xec>
  416b8c:	cmp	w0, #0x10
  416b90:	mov	w8, #0x8                   	// #8
  416b94:	csel	w20, w8, w0, eq  // eq = none
  416b98:	cbnz	w20, 416bc0 <_obstack_memory_used@@Base+0x78c>
  416b9c:	mov	x0, x19
  416ba0:	bl	416698 <_obstack_memory_used@@Base+0x264>
  416ba4:	mov	w0, w20
  416ba8:	ldp	x20, x19, [sp, #32]
  416bac:	ldp	x22, x21, [sp, #16]
  416bb0:	ldp	x29, x30, [sp], #48
  416bb4:	ret
  416bb8:	mov	w20, #0xc                   	// #12
  416bbc:	b	416ba4 <_obstack_memory_used@@Base+0x770>
  416bc0:	ldr	x0, [x19, #32]
  416bc4:	bl	402770 <free@plt>
  416bc8:	str	xzr, [x19, #32]
  416bcc:	b	416ba4 <_obstack_memory_used@@Base+0x770>
  416bd0:	stp	x29, x30, [sp, #-48]!
  416bd4:	cmp	w0, #0x11
  416bd8:	stp	x22, x21, [sp, #16]
  416bdc:	stp	x20, x19, [sp, #32]
  416be0:	mov	x29, sp
  416be4:	b.cs	416c5c <_obstack_memory_used@@Base+0x828>  // b.hs, b.nlast
  416be8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  416bec:	add	x8, x8, #0x960
  416bf0:	ldr	x8, [x8, w0, sxtw #3]
  416bf4:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  416bf8:	add	x9, x9, #0x7de
  416bfc:	mov	x19, x2
  416c00:	add	x1, x9, x8
  416c04:	mov	w2, #0x5                   	// #5
  416c08:	mov	x0, xzr
  416c0c:	mov	x20, x3
  416c10:	bl	402890 <dcgettext@plt>
  416c14:	mov	x21, x0
  416c18:	bl	402380 <strlen@plt>
  416c1c:	add	x22, x0, #0x1
  416c20:	cbz	x20, 416c3c <_obstack_memory_used@@Base+0x808>
  416c24:	cmp	x22, x20
  416c28:	mov	x2, x22
  416c2c:	b.hi	416c50 <_obstack_memory_used@@Base+0x81c>  // b.pmore
  416c30:	mov	x0, x19
  416c34:	mov	x1, x21
  416c38:	bl	402320 <memcpy@plt>
  416c3c:	mov	x0, x22
  416c40:	ldp	x20, x19, [sp, #32]
  416c44:	ldp	x22, x21, [sp, #16]
  416c48:	ldp	x29, x30, [sp], #48
  416c4c:	ret
  416c50:	sub	x2, x20, #0x1
  416c54:	strb	wzr, [x19, x2]
  416c58:	b	416c30 <_obstack_memory_used@@Base+0x7fc>
  416c5c:	bl	4026c0 <abort@plt>
  416c60:	stp	x29, x30, [sp, #-32]!
  416c64:	str	x19, [sp, #16]
  416c68:	mov	x19, x0
  416c6c:	ldr	x0, [x0]
  416c70:	mov	x29, sp
  416c74:	cbz	x0, 416c7c <_obstack_memory_used@@Base+0x848>
  416c78:	bl	416ca4 <_obstack_memory_used@@Base+0x870>
  416c7c:	ldr	x0, [x19, #32]
  416c80:	stp	xzr, xzr, [x19]
  416c84:	bl	402770 <free@plt>
  416c88:	ldr	x0, [x19, #40]
  416c8c:	str	xzr, [x19, #32]
  416c90:	bl	402770 <free@plt>
  416c94:	str	xzr, [x19, #40]
  416c98:	ldr	x19, [sp, #16]
  416c9c:	ldp	x29, x30, [sp], #32
  416ca0:	ret
  416ca4:	stp	x29, x30, [sp, #-64]!
  416ca8:	stp	x24, x23, [sp, #16]
  416cac:	stp	x22, x21, [sp, #32]
  416cb0:	stp	x20, x19, [sp, #48]
  416cb4:	ldr	x8, [x0]
  416cb8:	mov	x19, x0
  416cbc:	mov	x29, sp
  416cc0:	cbz	x8, 416cf4 <_obstack_memory_used@@Base+0x8c0>
  416cc4:	ldr	x8, [x19, #16]
  416cc8:	cbz	x8, 416cf4 <_obstack_memory_used@@Base+0x8c0>
  416ccc:	mov	x20, xzr
  416cd0:	mov	x21, xzr
  416cd4:	ldr	x8, [x19]
  416cd8:	add	x0, x8, x20
  416cdc:	bl	417a08 <_obstack_memory_used@@Base+0x15d4>
  416ce0:	ldr	x8, [x19, #16]
  416ce4:	add	x21, x21, #0x1
  416ce8:	add	x20, x20, #0x10
  416cec:	cmp	x21, x8
  416cf0:	b.cc	416cd4 <_obstack_memory_used@@Base+0x8a0>  // b.lo, b.ul, b.last
  416cf4:	ldr	x0, [x19, #24]
  416cf8:	bl	402770 <free@plt>
  416cfc:	ldr	x8, [x19, #16]
  416d00:	cbz	x8, 416d58 <_obstack_memory_used@@Base+0x924>
  416d04:	mov	x20, xzr
  416d08:	mov	w21, #0x10                  	// #16
  416d0c:	b	416d24 <_obstack_memory_used@@Base+0x8f0>
  416d10:	ldr	x8, [x19, #16]
  416d14:	add	x20, x20, #0x1
  416d18:	add	x21, x21, #0x18
  416d1c:	cmp	x20, x8
  416d20:	b.cs	416d58 <_obstack_memory_used@@Base+0x924>  // b.hs, b.nlast
  416d24:	ldr	x8, [x19, #48]
  416d28:	cbz	x8, 416d34 <_obstack_memory_used@@Base+0x900>
  416d2c:	ldr	x0, [x8, x21]
  416d30:	bl	402770 <free@plt>
  416d34:	ldr	x8, [x19, #56]
  416d38:	cbz	x8, 416d44 <_obstack_memory_used@@Base+0x910>
  416d3c:	ldr	x0, [x8, x21]
  416d40:	bl	402770 <free@plt>
  416d44:	ldr	x8, [x19, #40]
  416d48:	cbz	x8, 416d10 <_obstack_memory_used@@Base+0x8dc>
  416d4c:	ldr	x0, [x8, x21]
  416d50:	bl	402770 <free@plt>
  416d54:	b	416d10 <_obstack_memory_used@@Base+0x8dc>
  416d58:	ldr	x0, [x19, #40]
  416d5c:	bl	402770 <free@plt>
  416d60:	ldr	x0, [x19, #48]
  416d64:	bl	402770 <free@plt>
  416d68:	ldr	x0, [x19, #56]
  416d6c:	bl	402770 <free@plt>
  416d70:	ldr	x0, [x19]
  416d74:	bl	402770 <free@plt>
  416d78:	ldr	x8, [x19, #64]
  416d7c:	cbz	x8, 416de0 <_obstack_memory_used@@Base+0x9ac>
  416d80:	mov	x20, xzr
  416d84:	mov	w21, #0x18                  	// #24
  416d88:	b	416da4 <_obstack_memory_used@@Base+0x970>
  416d8c:	ldr	x0, [x22]
  416d90:	bl	402770 <free@plt>
  416d94:	ldr	x8, [x19, #136]
  416d98:	cmp	x20, x8
  416d9c:	add	x20, x20, #0x1
  416da0:	b.cs	416de0 <_obstack_memory_used@@Base+0x9ac>  // b.hs, b.nlast
  416da4:	ldr	x8, [x19, #64]
  416da8:	madd	x23, x20, x21, x8
  416dac:	mov	x22, x23
  416db0:	ldr	x8, [x22], #16
  416db4:	cmp	x8, #0x1
  416db8:	b.lt	416d8c <_obstack_memory_used@@Base+0x958>  // b.tstop
  416dbc:	mov	x24, xzr
  416dc0:	ldr	x8, [x22]
  416dc4:	ldr	x0, [x8, x24, lsl #3]
  416dc8:	bl	417a50 <_obstack_memory_used@@Base+0x161c>
  416dcc:	ldr	x8, [x23]
  416dd0:	add	x24, x24, #0x1
  416dd4:	cmp	x24, x8
  416dd8:	b.lt	416dc0 <_obstack_memory_used@@Base+0x98c>  // b.tstop
  416ddc:	b	416d8c <_obstack_memory_used@@Base+0x958>
  416de0:	ldr	x0, [x19, #64]
  416de4:	bl	402770 <free@plt>
  416de8:	ldr	x0, [x19, #120]
  416dec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  416df0:	add	x8, x8, #0x9e8
  416df4:	cmp	x0, x8
  416df8:	b.eq	416e00 <_obstack_memory_used@@Base+0x9cc>  // b.none
  416dfc:	bl	402770 <free@plt>
  416e00:	ldr	x0, [x19, #224]
  416e04:	bl	402770 <free@plt>
  416e08:	mov	x0, x19
  416e0c:	bl	402770 <free@plt>
  416e10:	ldp	x20, x19, [sp, #48]
  416e14:	ldp	x22, x21, [sp, #32]
  416e18:	ldp	x24, x23, [sp, #16]
  416e1c:	ldp	x29, x30, [sp], #64
  416e20:	ret
  416e24:	cmp	w4, #0x7
  416e28:	b.ls	416e34 <_obstack_memory_used@@Base+0xa00>  // b.plast
  416e2c:	mov	w0, #0x2                   	// #2
  416e30:	ret
  416e34:	sub	sp, sp, #0x50
  416e38:	str	x23, [sp, #32]
  416e3c:	stp	x22, x21, [sp, #48]
  416e40:	stp	x20, x19, [sp, #64]
  416e44:	mov	w22, w4
  416e48:	mov	x19, x3
  416e4c:	mov	x21, x2
  416e50:	mov	x20, x1
  416e54:	mov	x23, x0
  416e58:	stp	x29, x30, [sp, #16]
  416e5c:	add	x29, sp, #0x10
  416e60:	tbnz	w4, #2, 416e9c <_obstack_memory_used@@Base+0xa68>
  416e64:	mov	x0, x20
  416e68:	bl	402380 <strlen@plt>
  416e6c:	mov	x2, x0
  416e70:	mov	x3, xzr
  416e74:	ldrb	w8, [x23, #56]
  416e78:	tbz	w8, #4, 416ea8 <_obstack_memory_used@@Base+0xa74>
  416e7c:	str	w22, [sp]
  416e80:	mov	x0, x23
  416e84:	mov	x1, x20
  416e88:	mov	x4, x2
  416e8c:	mov	x5, x2
  416e90:	mov	x6, xzr
  416e94:	mov	x7, xzr
  416e98:	b	416ec4 <_obstack_memory_used@@Base+0xa90>
  416e9c:	ldp	x3, x2, [x19]
  416ea0:	ldrb	w8, [x23, #56]
  416ea4:	tbnz	w8, #4, 416e7c <_obstack_memory_used@@Base+0xa48>
  416ea8:	mov	x0, x23
  416eac:	mov	x1, x20
  416eb0:	mov	x4, x2
  416eb4:	mov	x5, x2
  416eb8:	mov	x6, x21
  416ebc:	mov	x7, x19
  416ec0:	str	w22, [sp]
  416ec4:	bl	416ee8 <_obstack_memory_used@@Base+0xab4>
  416ec8:	ldp	x20, x19, [sp, #64]
  416ecc:	ldp	x22, x21, [sp, #48]
  416ed0:	ldr	x23, [sp, #32]
  416ed4:	ldp	x29, x30, [sp, #16]
  416ed8:	cmp	w0, #0x0
  416edc:	cset	w0, ne  // ne = any
  416ee0:	add	sp, sp, #0x50
  416ee4:	ret
  416ee8:	sub	sp, sp, #0x1c0
  416eec:	stp	x29, x30, [sp, #352]
  416ef0:	stp	x28, x27, [sp, #368]
  416ef4:	stp	x26, x25, [sp, #384]
  416ef8:	stp	x24, x23, [sp, #400]
  416efc:	stp	x22, x21, [sp, #416]
  416f00:	stp	x20, x19, [sp, #432]
  416f04:	ldr	x23, [x0]
  416f08:	movi	v0.2d, #0x0
  416f0c:	stp	q0, q0, [sp, #304]
  416f10:	stp	q0, q0, [sp, #272]
  416f14:	stp	q0, q0, [sp, #240]
  416f18:	stp	q0, q0, [sp, #208]
  416f1c:	stp	q0, q0, [sp, #176]
  416f20:	stp	q0, q0, [sp, #144]
  416f24:	stp	q0, q0, [sp, #112]
  416f28:	stp	q0, q0, [sp, #80]
  416f2c:	str	x23, [sp, #232]
  416f30:	ldr	x8, [x0, #32]
  416f34:	mov	x28, x5
  416f38:	mov	x19, x3
  416f3c:	mov	x24, x2
  416f40:	mov	x22, x0
  416f44:	mov	x25, x1
  416f48:	add	x29, sp, #0x160
  416f4c:	cbz	x8, 416f6c <_obstack_memory_used@@Base+0xb38>
  416f50:	ldrb	w9, [x22, #56]
  416f54:	mov	w10, #0x9                   	// #9
  416f58:	and	w9, w9, w10
  416f5c:	cmp	w9, #0x8
  416f60:	ccmp	x19, x4, #0x4, eq  // eq = none
  416f64:	csel	x21, x8, xzr, ne  // ne = any
  416f68:	b	416f70 <_obstack_memory_used@@Base+0xb3c>
  416f6c:	mov	x21, xzr
  416f70:	ldr	x8, [x22, #48]
  416f74:	ldr	x9, [x22, #16]
  416f78:	mvn	x10, x8
  416f7c:	add	x10, x10, x6
  416f80:	cmp	x8, x6
  416f84:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  416f88:	cbz	x9, 4174b4 <_obstack_memory_used@@Base+0x1080>
  416f8c:	ldr	x10, [x23, #72]
  416f90:	cbz	x10, 4174b4 <_obstack_memory_used@@Base+0x1080>
  416f94:	ldr	x9, [x23, #80]
  416f98:	cbz	x9, 4174b4 <_obstack_memory_used@@Base+0x1080>
  416f9c:	ldr	x8, [x23, #88]
  416fa0:	cbz	x8, 4174b4 <_obstack_memory_used@@Base+0x1080>
  416fa4:	ldr	x11, [x23, #96]
  416fa8:	cbz	x11, 4174b4 <_obstack_memory_used@@Base+0x1080>
  416fac:	ldr	x10, [x10, #16]
  416fb0:	ldr	x26, [x22, #40]
  416fb4:	str	x7, [sp, #32]
  416fb8:	cbnz	x10, 416fc4 <_obstack_memory_used@@Base+0xb90>
  416fbc:	ldr	x9, [x9, #16]
  416fc0:	cbz	x9, 417494 <_obstack_memory_used@@Base+0x1060>
  416fc4:	mov	x20, x4
  416fc8:	sub	x8, x6, x12
  416fcc:	str	x12, [sp, #24]
  416fd0:	str	x8, [sp, #64]
  416fd4:	str	x6, [sp]
  416fd8:	cbz	x8, 416fe4 <_obstack_memory_used@@Base+0xbb0>
  416fdc:	mov	w8, #0x1                   	// #1
  416fe0:	b	416ff0 <_obstack_memory_used@@Base+0xbbc>
  416fe4:	ldr	x8, [x23, #152]
  416fe8:	cmp	x8, #0x0
  416fec:	cset	w8, ne  // ne = any
  416ff0:	str	w8, [sp, #44]
  416ff4:	ldr	x8, [x23, #16]
  416ff8:	ldr	x9, [x22, #24]
  416ffc:	add	x0, sp, #0x50
  417000:	mov	x1, x25
  417004:	add	x3, x8, #0x1
  417008:	ubfx	x5, x9, #22, #1
  41700c:	mov	x2, x24
  417010:	mov	x4, x26
  417014:	mov	x6, x23
  417018:	bl	41d42c <_obstack_memory_used@@Base+0x6ff8>
  41701c:	str	x23, [sp, #56]
  417020:	cbnz	w0, 41760c <_obstack_memory_used@@Base+0x11d8>
  417024:	stp	x28, x28, [sp, #176]
  417028:	ldrb	w8, [x22, #56]
  41702c:	ldr	w28, [x29, #96]
  417030:	add	x0, sp, #0x50
  417034:	lsr	w8, w8, #7
  417038:	strb	w8, [sp, #221]
  41703c:	ldr	x8, [x23, #152]
  417040:	mov	w1, w28
  417044:	lsl	x2, x8, #1
  417048:	bl	41d4e8 <_obstack_memory_used@@Base+0x70b4>
  41704c:	cbnz	w0, 41760c <_obstack_memory_used@@Base+0x11d8>
  417050:	ldr	x8, [sp, #64]
  417054:	cmp	x8, #0x1
  417058:	b.hi	417064 <_obstack_memory_used@@Base+0xc30>  // b.pmore
  41705c:	ldrb	w8, [x23, #176]
  417060:	tbz	w8, #1, 417088 <_obstack_memory_used@@Base+0xc54>
  417064:	ldr	x8, [sp, #144]
  417068:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
  41706c:	cmp	x8, x9
  417070:	b.hi	417614 <_obstack_memory_used@@Base+0x11e0>  // b.pmore
  417074:	lsl	x8, x8, #3
  417078:	add	x0, x8, #0x8
  41707c:	bl	4024e0 <malloc@plt>
  417080:	str	x0, [sp, #264]
  417084:	cbz	x0, 417614 <_obstack_memory_used@@Base+0x11e0>
  417088:	tst	w28, #0x1
  41708c:	mov	w8, #0x4                   	// #4
  417090:	mov	w9, #0x6                   	// #6
  417094:	csel	w8, w9, w8, eq  // eq = none
  417098:	stur	x19, [x29, #-16]
  41709c:	str	w8, [sp, #192]
  4170a0:	ldr	w10, [x23, #180]
  4170a4:	cmp	x20, x19
  4170a8:	mov	w8, #0xffffffff            	// #-1
  4170ac:	str	w28, [sp, #52]
  4170b0:	cneg	w8, w8, ge  // ge = tcont
  4170b4:	csel	x28, x20, x19, lt  // lt = tstop
  4170b8:	csel	x23, x19, x20, lt  // lt = tstop
  4170bc:	str	w10, [sp, #48]
  4170c0:	cbz	x21, 4170d4 <_obstack_memory_used@@Base+0xca0>
  4170c4:	cmp	w10, #0x1
  4170c8:	b.ne	4170dc <_obstack_memory_used@@Base+0xca8>  // b.any
  4170cc:	mov	w9, #0x4                   	// #4
  4170d0:	b	4170f4 <_obstack_memory_used@@Base+0xcc0>
  4170d4:	mov	w9, #0x8                   	// #8
  4170d8:	b	41710c <_obstack_memory_used@@Base+0xcd8>
  4170dc:	ldr	x9, [x22, #24]
  4170e0:	and	x9, x9, #0x400000
  4170e4:	orr	x9, x26, x9
  4170e8:	cmp	x9, #0x0
  4170ec:	cset	w9, eq  // eq = none
  4170f0:	lsl	w9, w9, #2
  4170f4:	cmp	x20, x19
  4170f8:	cset	w10, ge  // ge = tcont
  4170fc:	cmp	x26, #0x0
  417100:	cset	w11, ne  // ne = any
  417104:	bfi	w11, w10, #1, #1
  417108:	orr	w9, w11, w9
  41710c:	ldur	x10, [x29, #-16]
  417110:	mov	w27, #0x1                   	// #1
  417114:	cmp	x10, x28
  417118:	b.lt	417618 <_obstack_memory_used@@Base+0x11e4>  // b.tstop
  41711c:	cmp	x23, x10
  417120:	b.lt	417618 <_obstack_memory_used@@Base+0x11e4>  // b.tstop
  417124:	sxtw	x8, w8
  417128:	str	x8, [sp, #72]
  41712c:	add	x8, sp, #0x50
  417130:	cmp	x20, x19
  417134:	sub	x10, x29, #0x10
  417138:	add	x8, x8, #0xc0
  41713c:	adrp	x20, 426000 <_obstack_memory_used@@Base+0xfbcc>
  417140:	sub	w19, w9, #0x4
  417144:	mov	w11, #0x2                   	// #2
  417148:	str	x8, [sp, #16]
  41714c:	csel	x8, xzr, x10, lt  // lt = tstop
  417150:	add	x20, x20, #0x690
  417154:	str	x8, [sp, #8]
  417158:	cmp	w19, #0x4
  41715c:	b.hi	4171c0 <_obstack_memory_used@@Base+0xd8c>  // b.pmore
  417160:	adr	x8, 417170 <_obstack_memory_used@@Base+0xd3c>
  417164:	ldrb	w9, [x20, x19]
  417168:	add	x8, x8, x9, lsl #2
  41716c:	br	x8
  417170:	ldur	x8, [x29, #-16]
  417174:	cmp	x8, x28
  417178:	cset	w9, lt  // lt = tstop
  41717c:	b.lt	417428 <_obstack_memory_used@@Base+0xff4>  // b.tstop
  417180:	cmp	x8, x24
  417184:	b.ge	417194 <_obstack_memory_used@@Base+0xd60>  // b.tcont
  417188:	ldrb	w10, [x25, x8]
  41718c:	cbnz	x26, 41719c <_obstack_memory_used@@Base+0xd68>
  417190:	b	4171a0 <_obstack_memory_used@@Base+0xd6c>
  417194:	mov	w10, wzr
  417198:	cbz	x26, 4171a0 <_obstack_memory_used@@Base+0xd6c>
  41719c:	ldrb	w10, [x26, w10, uxtw]
  4171a0:	ldrb	w10, [x21, w10, uxtw]
  4171a4:	cbnz	w10, 4172fc <_obstack_memory_used@@Base+0xec8>
  4171a8:	cmp	x8, x28
  4171ac:	sub	x8, x8, #0x1
  4171b0:	cset	w9, le
  4171b4:	stur	x8, [x29, #-16]
  4171b8:	b.gt	417180 <_obstack_memory_used@@Base+0xd4c>
  4171bc:	b	417428 <_obstack_memory_used@@Base+0xff4>
  4171c0:	mov	w27, #0x1                   	// #1
  4171c4:	b	4171dc <_obstack_memory_used@@Base+0xda8>
  4171c8:	mov	x9, xzr
  4171cc:	ldrb	w9, [x21, x9]
  4171d0:	cbz	w9, 417210 <_obstack_memory_used@@Base+0xddc>
  4171d4:	mov	w8, #0xe                   	// #14
  4171d8:	cbnz	w8, 4172e8 <_obstack_memory_used@@Base+0xeb4>
  4171dc:	ldur	x1, [x29, #-16]
  4171e0:	ldr	x8, [sp, #120]
  4171e4:	ldr	x10, [sp, #136]
  4171e8:	sub	x9, x1, x8
  4171ec:	cmp	x9, x10
  4171f0:	b.cs	417240 <_obstack_memory_used@@Base+0xe0c>  // b.hs, b.nlast
  4171f4:	ldur	x8, [x29, #-16]
  4171f8:	cmp	x8, x24
  4171fc:	b.ge	4171c8 <_obstack_memory_used@@Base+0xd94>  // b.tcont
  417200:	ldr	x10, [sp, #88]
  417204:	ldrb	w9, [x10, x9]
  417208:	ldrb	w9, [x21, x9]
  41720c:	cbnz	w9, 4171d4 <_obstack_memory_used@@Base+0xda0>
  417210:	ldr	x9, [sp, #72]
  417214:	add	x8, x8, x9
  417218:	cmp	x8, x28
  41721c:	cset	w9, lt  // lt = tstop
  417220:	cmp	x8, x23
  417224:	stur	x8, [x29, #-16]
  417228:	cset	w8, gt
  41722c:	orr	w8, w9, w8
  417230:	cmp	w8, #0x0
  417234:	csinc	w27, w27, wzr, eq  // eq = none
  417238:	csel	w8, w11, wzr, ne  // ne = any
  41723c:	b	4171d8 <_obstack_memory_used@@Base+0xda4>
  417240:	ldr	w2, [sp, #52]
  417244:	add	x0, sp, #0x50
  417248:	bl	41d580 <_obstack_memory_used@@Base+0x714c>
  41724c:	mov	w27, w0
  417250:	cbnz	w0, 417268 <_obstack_memory_used@@Base+0xe34>
  417254:	ldur	x8, [x29, #-16]
  417258:	ldr	x9, [sp, #120]
  41725c:	mov	w11, #0x2                   	// #2
  417260:	sub	x9, x8, x9
  417264:	b	4171f4 <_obstack_memory_used@@Base+0xdc0>
  417268:	mov	w8, #0x2                   	// #2
  41726c:	mov	w11, #0x2                   	// #2
  417270:	b	4171d8 <_obstack_memory_used@@Base+0xda4>
  417274:	ldur	x8, [x29, #-16]
  417278:	cmp	x8, x23
  41727c:	b.ge	4172cc <_obstack_memory_used@@Base+0xe98>  // b.tcont
  417280:	ldrb	w9, [x25, x8]
  417284:	ldrb	w9, [x21, x9]
  417288:	cbnz	w9, 4172cc <_obstack_memory_used@@Base+0xe98>
  41728c:	add	x8, x8, #0x1
  417290:	cmp	x8, x23
  417294:	stur	x8, [x29, #-16]
  417298:	b.lt	417280 <_obstack_memory_used@@Base+0xe4c>  // b.tstop
  41729c:	b	4172cc <_obstack_memory_used@@Base+0xe98>
  4172a0:	ldur	x8, [x29, #-16]
  4172a4:	cmp	x8, x23
  4172a8:	b.ge	4172cc <_obstack_memory_used@@Base+0xe98>  // b.tcont
  4172ac:	ldrb	w9, [x25, x8]
  4172b0:	ldrb	w9, [x26, x9]
  4172b4:	ldrb	w9, [x21, x9]
  4172b8:	cbnz	w9, 4172cc <_obstack_memory_used@@Base+0xe98>
  4172bc:	add	x8, x8, #0x1
  4172c0:	cmp	x8, x23
  4172c4:	stur	x8, [x29, #-16]
  4172c8:	b.lt	4172ac <_obstack_memory_used@@Base+0xe78>  // b.tstop
  4172cc:	ldur	x8, [x29, #-16]
  4172d0:	cmp	x8, x23
  4172d4:	b.ne	417300 <_obstack_memory_used@@Base+0xecc>  // b.any
  4172d8:	cmp	x8, x24
  4172dc:	b.ge	417414 <_obstack_memory_used@@Base+0xfe0>  // b.tcont
  4172e0:	ldrb	w8, [x25, x8]
  4172e4:	b	417418 <_obstack_memory_used@@Base+0xfe4>
  4172e8:	cmp	w8, #0x2
  4172ec:	b.eq	417618 <_obstack_memory_used@@Base+0x11e4>  // b.none
  4172f0:	cmp	w8, #0xe
  4172f4:	b.eq	417300 <_obstack_memory_used@@Base+0xecc>  // b.none
  4172f8:	b	4174c4 <_obstack_memory_used@@Base+0x1090>
  4172fc:	tbnz	w9, #0, 417428 <_obstack_memory_used@@Base+0xff4>
  417300:	ldur	x1, [x29, #-16]
  417304:	ldr	w2, [sp, #52]
  417308:	add	x0, sp, #0x50
  41730c:	bl	41d580 <_obstack_memory_used@@Base+0x714c>
  417310:	cbnz	w0, 41760c <_obstack_memory_used@@Base+0x11d8>
  417314:	ldr	w8, [sp, #48]
  417318:	cmp	w8, #0x1
  41731c:	b.eq	417338 <_obstack_memory_used@@Base+0xf04>  // b.none
  417320:	ldr	x8, [sp, #128]
  417324:	cbz	x8, 417338 <_obstack_memory_used@@Base+0xf04>
  417328:	ldr	x8, [sp, #96]
  41732c:	ldr	w8, [x8]
  417330:	cmn	w8, #0x1
  417334:	b.eq	4173e8 <_obstack_memory_used@@Base+0xfb4>  // b.none
  417338:	ldp	x2, x8, [sp, #8]
  41733c:	ldr	w1, [sp, #44]
  417340:	add	x0, sp, #0x50
  417344:	str	wzr, [sp, #304]
  417348:	stp	xzr, xzr, [x8]
  41734c:	bl	41db4c <_obstack_memory_used@@Base+0x7718>
  417350:	cmn	x0, #0x1
  417354:	b.eq	4173e0 <_obstack_memory_used@@Base+0xfac>  // b.none
  417358:	mov	x2, x0
  41735c:	cmn	x0, #0x2
  417360:	b.eq	417614 <_obstack_memory_used@@Base+0x11e0>  // b.none
  417364:	ldr	x8, [sp, #64]
  417368:	str	x2, [sp, #248]
  41736c:	cmp	x8, #0x2
  417370:	b.cc	41737c <_obstack_memory_used@@Base+0xf48>  // b.lo, b.ul, b.last
  417374:	ldrb	w8, [x22, #56]
  417378:	tbz	w8, #4, 417388 <_obstack_memory_used@@Base+0xf54>
  41737c:	ldr	x8, [sp, #56]
  417380:	ldr	x8, [x8, #152]
  417384:	cbz	x8, 41739c <_obstack_memory_used@@Base+0xf68>
  417388:	ldr	x8, [sp, #264]
  41738c:	add	x0, sp, #0x50
  417390:	ldr	x1, [x8, x2, lsl #3]
  417394:	bl	41de4c <_obstack_memory_used@@Base+0x7a18>
  417398:	str	x0, [sp, #256]
  41739c:	ldr	x8, [sp, #64]
  4173a0:	cmp	x8, #0x2
  4173a4:	b.cc	4173bc <_obstack_memory_used@@Base+0xf88>  // b.lo, b.ul, b.last
  4173a8:	ldrb	w8, [x22, #56]
  4173ac:	tbnz	w8, #4, 4173bc <_obstack_memory_used@@Base+0xf88>
  4173b0:	ldr	x8, [sp, #56]
  4173b4:	ldrb	w8, [x8, #176]
  4173b8:	tbnz	w8, #0, 4173c8 <_obstack_memory_used@@Base+0xf94>
  4173bc:	ldr	x8, [sp, #56]
  4173c0:	ldr	x8, [x8, #152]
  4173c4:	cbz	x8, 417430 <_obstack_memory_used@@Base+0xffc>
  4173c8:	add	x0, sp, #0x50
  4173cc:	bl	41ded8 <_obstack_memory_used@@Base+0x7aa4>
  4173d0:	cbz	w0, 417430 <_obstack_memory_used@@Base+0xffc>
  4173d4:	mov	w27, w0
  4173d8:	cmp	w0, #0x1
  4173dc:	b.ne	417618 <_obstack_memory_used@@Base+0x11e4>  // b.any
  4173e0:	add	x0, sp, #0x50
  4173e4:	bl	41e0c0 <_obstack_memory_used@@Base+0x7c8c>
  4173e8:	ldur	x8, [x29, #-16]
  4173ec:	ldr	x9, [sp, #72]
  4173f0:	mov	w27, #0x1                   	// #1
  4173f4:	add	x8, x8, x9
  4173f8:	cmp	x8, x28
  4173fc:	stur	x8, [x29, #-16]
  417400:	b.lt	417618 <_obstack_memory_used@@Base+0x11e4>  // b.tstop
  417404:	cmp	x23, x8
  417408:	mov	w11, #0x2                   	// #2
  41740c:	b.ge	417158 <_obstack_memory_used@@Base+0xd24>  // b.tcont
  417410:	b	417618 <_obstack_memory_used@@Base+0x11e4>
  417414:	mov	w8, wzr
  417418:	cbz	x26, 417420 <_obstack_memory_used@@Base+0xfec>
  41741c:	ldrb	w8, [x26, w8, uxtw]
  417420:	ldrb	w8, [x21, w8, uxtw]
  417424:	cbnz	w8, 417300 <_obstack_memory_used@@Base+0xecc>
  417428:	mov	w27, #0x1                   	// #1
  41742c:	b	417618 <_obstack_memory_used@@Base+0x11e4>
  417430:	ldr	x20, [sp, #64]
  417434:	cbz	x20, 4174bc <_obstack_memory_used@@Base+0x1088>
  417438:	ldr	x19, [sp, #32]
  41743c:	cmp	x20, #0x1
  417440:	b.eq	417464 <_obstack_memory_used@@Base+0x1030>  // b.none
  417444:	ldr	x8, [sp, #24]
  417448:	ldr	x9, [sp]
  41744c:	add	x0, x19, #0x10
  417450:	mov	w1, #0xff                  	// #255
  417454:	mvn	x8, x8
  417458:	add	x8, x8, x9
  41745c:	lsl	x2, x8, #4
  417460:	bl	4025b0 <memset@plt>
  417464:	ldr	x8, [sp, #248]
  417468:	mov	w27, wzr
  41746c:	cmp	x20, #0x2
  417470:	stp	xzr, x8, [x19]
  417474:	b.cc	4174f8 <_obstack_memory_used@@Base+0x10c4>  // b.lo, b.ul, b.last
  417478:	ldrb	w8, [x22, #56]
  41747c:	tbnz	w8, #4, 4174f8 <_obstack_memory_used@@Base+0x10c4>
  417480:	ldr	x9, [sp, #56]
  417484:	ldrb	w8, [x9, #176]
  417488:	tbnz	w8, #0, 4174d0 <_obstack_memory_used@@Base+0x109c>
  41748c:	mov	w4, wzr
  417490:	b	4174dc <_obstack_memory_used@@Base+0x10a8>
  417494:	ldr	x8, [x8, #16]
  417498:	cbz	x8, 4174a4 <_obstack_memory_used@@Base+0x1070>
  41749c:	ldrsb	w8, [x22, #56]
  4174a0:	tbnz	w8, #31, 416fc4 <_obstack_memory_used@@Base+0xb90>
  4174a4:	mov	x20, xzr
  4174a8:	cbz	x19, 4174c8 <_obstack_memory_used@@Base+0x1094>
  4174ac:	mov	x19, x20
  4174b0:	cbz	x4, 416fc8 <_obstack_memory_used@@Base+0xb94>
  4174b4:	mov	w27, #0x1                   	// #1
  4174b8:	b	41763c <_obstack_memory_used@@Base+0x1208>
  4174bc:	mov	w27, wzr
  4174c0:	b	417618 <_obstack_memory_used@@Base+0x11e4>
  4174c4:	b	41763c <_obstack_memory_used@@Base+0x1208>
  4174c8:	mov	x19, x20
  4174cc:	b	416fc8 <_obstack_memory_used@@Base+0xb94>
  4174d0:	ldr	x8, [x9, #152]
  4174d4:	cmp	x8, #0x0
  4174d8:	cset	w4, gt
  4174dc:	ldr	x3, [sp, #32]
  4174e0:	ldr	x2, [sp, #64]
  4174e4:	add	x1, sp, #0x50
  4174e8:	mov	x0, x22
  4174ec:	bl	41e184 <_obstack_memory_used@@Base+0x7d50>
  4174f0:	mov	w27, w0
  4174f4:	cbnz	w0, 417618 <_obstack_memory_used@@Base+0x11e4>
  4174f8:	ldr	x20, [sp, #32]
  4174fc:	ldrb	w9, [sp, #220]
  417500:	ldr	x10, [sp, #128]
  417504:	ldr	x11, [sp, #104]
  417508:	ldur	x12, [x29, #-16]
  41750c:	ldr	x21, [sp, #64]
  417510:	add	x13, sp, #0x50
  417514:	mov	x8, xzr
  417518:	add	x13, x13, #0x38
  41751c:	add	x14, x20, #0x8
  417520:	b	417544 <_obstack_memory_used@@Base+0x1110>
  417524:	ldp	x15, x16, [x14, #-8]
  417528:	add	x15, x15, x12
  41752c:	add	x16, x16, x12
  417530:	stp	x15, x16, [x14, #-8]
  417534:	add	x8, x8, #0x1
  417538:	cmp	x8, x21
  41753c:	add	x14, x14, #0x10
  417540:	b.cs	417584 <_obstack_memory_used@@Base+0x1150>  // b.hs, b.nlast
  417544:	ldur	x15, [x14, #-8]
  417548:	cmn	x15, #0x1
  41754c:	b.eq	417534 <_obstack_memory_used@@Base+0x1100>  // b.none
  417550:	cbz	w9, 417524 <_obstack_memory_used@@Base+0x10f0>
  417554:	add	x16, x11, x15, lsl #3
  417558:	cmp	x15, x10
  41755c:	ldr	x15, [x14]
  417560:	csel	x16, x13, x16, eq  // eq = none
  417564:	ldr	x16, [x16]
  417568:	add	x17, x11, x15, lsl #3
  41756c:	cmp	x15, x10
  417570:	stur	x16, [x14, #-8]
  417574:	csel	x15, x13, x17, eq  // eq = none
  417578:	ldr	x15, [x15]
  41757c:	str	x15, [x14]
  417580:	b	417524 <_obstack_memory_used@@Base+0x10f0>
  417584:	ldr	x10, [sp, #24]
  417588:	ldr	x19, [sp, #56]
  41758c:	cmp	x10, #0x1
  417590:	b.lt	4175a8 <_obstack_memory_used@@Base+0x1174>  // b.tstop
  417594:	add	x0, x20, x21, lsl #4
  417598:	lsl	x2, x10, #4
  41759c:	mov	w1, #0xff                  	// #255
  4175a0:	bl	4025b0 <memset@plt>
  4175a4:	ldr	x10, [sp, #24]
  4175a8:	ldr	x8, [x19, #224]
  4175ac:	cbz	x8, 417618 <_obstack_memory_used@@Base+0x11e4>
  4175b0:	cmp	x21, #0x2
  4175b4:	b.cc	417618 <_obstack_memory_used@@Base+0x11e4>  // b.lo, b.ul, b.last
  4175b8:	ldr	x11, [sp]
  4175bc:	mvn	x10, x10
  4175c0:	mov	x9, xzr
  4175c4:	add	x10, x10, x11
  4175c8:	add	x11, x20, #0x18
  4175cc:	b	4175e0 <_obstack_memory_used@@Base+0x11ac>
  4175d0:	add	x9, x9, #0x1
  4175d4:	cmp	x10, x9
  4175d8:	add	x11, x11, #0x10
  4175dc:	b.eq	417618 <_obstack_memory_used@@Base+0x11e4>  // b.none
  4175e0:	ldr	x12, [x8, x9, lsl #3]
  4175e4:	cmp	x9, x12
  4175e8:	b.eq	4175d0 <_obstack_memory_used@@Base+0x119c>  // b.none
  4175ec:	add	x12, x20, x12, lsl #4
  4175f0:	ldr	x12, [x12, #16]
  4175f4:	stur	x12, [x11, #-8]
  4175f8:	ldr	x12, [x8, x9, lsl #3]
  4175fc:	add	x12, x20, x12, lsl #4
  417600:	ldr	x12, [x12, #24]
  417604:	str	x12, [x11]
  417608:	b	4175d0 <_obstack_memory_used@@Base+0x119c>
  41760c:	mov	w27, w0
  417610:	b	417618 <_obstack_memory_used@@Base+0x11e4>
  417614:	mov	w27, #0xc                   	// #12
  417618:	ldr	x0, [sp, #264]
  41761c:	bl	402770 <free@plt>
  417620:	ldr	x8, [sp, #56]
  417624:	ldr	x8, [x8, #152]
  417628:	cbz	x8, 417634 <_obstack_memory_used@@Base+0x1200>
  41762c:	add	x0, sp, #0x50
  417630:	bl	41e428 <_obstack_memory_used@@Base+0x7ff4>
  417634:	add	x0, sp, #0x50
  417638:	bl	417e74 <_obstack_memory_used@@Base+0x1a40>
  41763c:	mov	w0, w27
  417640:	ldp	x20, x19, [sp, #432]
  417644:	ldp	x22, x21, [sp, #416]
  417648:	ldp	x24, x23, [sp, #400]
  41764c:	ldp	x26, x25, [sp, #384]
  417650:	ldp	x28, x27, [sp, #368]
  417654:	ldp	x29, x30, [sp, #352]
  417658:	add	sp, sp, #0x1c0
  41765c:	ret
  417660:	stp	x29, x30, [sp, #-16]!
  417664:	mov	x6, x4
  417668:	mov	w7, #0x1                   	// #1
  41766c:	mov	x4, xzr
  417670:	mov	x5, x2
  417674:	mov	x29, sp
  417678:	bl	417684 <_obstack_memory_used@@Base+0x1250>
  41767c:	ldp	x29, x30, [sp], #16
  417680:	ret
  417684:	sub	sp, sp, #0x70
  417688:	cmp	x3, x2
  41768c:	cset	w8, gt
  417690:	stp	x29, x30, [sp, #16]
  417694:	add	x29, sp, #0x10
  417698:	orr	x8, x8, x3, lsr #63
  41769c:	stp	x28, x27, [sp, #32]
  4176a0:	stp	x26, x25, [sp, #48]
  4176a4:	stp	x24, x23, [sp, #64]
  4176a8:	stp	x22, x21, [sp, #80]
  4176ac:	stp	x20, x19, [sp, #96]
  4176b0:	stur	w7, [x29, #-4]
  4176b4:	cbnz	x8, 417820 <_obstack_memory_used@@Base+0x13ec>
  4176b8:	add	x8, x4, x3
  4176bc:	ldrb	w19, [x0, #56]
  4176c0:	bic	x9, x8, x8, asr #63
  4176c4:	cmp	x8, x2
  4176c8:	csel	x26, x2, x9, gt
  4176cc:	mov	x25, x6
  4176d0:	mov	x22, x5
  4176d4:	mov	x20, x3
  4176d8:	mov	x23, x2
  4176dc:	mov	x24, x1
  4176e0:	mov	x21, x0
  4176e4:	cmp	x26, x3
  4176e8:	b.le	417700 <_obstack_memory_used@@Base+0x12cc>
  4176ec:	tbnz	w19, #3, 417700 <_obstack_memory_used@@Base+0x12cc>
  4176f0:	ldr	x8, [x21, #32]
  4176f4:	cbz	x8, 417700 <_obstack_memory_used@@Base+0x12cc>
  4176f8:	mov	x0, x21
  4176fc:	bl	416698 <_obstack_memory_used@@Base+0x264>
  417700:	ldrb	w8, [x21, #56]
  417704:	tst	w8, #0x10
  417708:	csel	x27, x25, xzr, eq  // eq = none
  41770c:	cbz	x27, 417738 <_obstack_memory_used@@Base+0x1304>
  417710:	and	w8, w8, #0x6
  417714:	cmp	w8, #0x4
  417718:	b.ne	41772c <_obstack_memory_used@@Base+0x12f8>  // b.any
  41771c:	ldr	x8, [x27]
  417720:	ldr	x9, [x21, #48]
  417724:	cmp	x8, x9
  417728:	b.ls	417830 <_obstack_memory_used@@Base+0x13fc>  // b.plast
  41772c:	ldr	x8, [x21, #48]
  417730:	add	x28, x8, #0x1
  417734:	b	41773c <_obstack_memory_used@@Base+0x1308>
  417738:	mov	w28, #0x1                   	// #1
  41773c:	lsl	x0, x28, #4
  417740:	bl	4024e0 <malloc@plt>
  417744:	cbz	x0, 417828 <_obstack_memory_used@@Base+0x13f4>
  417748:	mov	x25, x0
  41774c:	ubfx	w8, w19, #5, #2
  417750:	mov	x0, x21
  417754:	mov	x1, x24
  417758:	mov	x2, x23
  41775c:	mov	x3, x20
  417760:	mov	x4, x26
  417764:	mov	x5, x22
  417768:	mov	x6, x28
  41776c:	mov	x7, x25
  417770:	str	w8, [sp]
  417774:	bl	416ee8 <_obstack_memory_used@@Base+0xab4>
  417778:	cbz	w0, 417790 <_obstack_memory_used@@Base+0x135c>
  41777c:	cmp	w0, #0x1
  417780:	mov	x8, #0xfffffffffffffffe    	// #-2
  417784:	cinc	x21, x8, eq  // eq = none
  417788:	cbz	x21, 4177dc <_obstack_memory_used@@Base+0x13a8>
  41778c:	b	4177f4 <_obstack_memory_used@@Base+0x13c0>
  417790:	cbz	x27, 4177d4 <_obstack_memory_used@@Base+0x13a0>
  417794:	ldrb	w8, [x21, #56]
  417798:	mov	x0, x27
  41779c:	mov	x1, x25
  4177a0:	mov	x2, x28
  4177a4:	ubfx	w3, w8, #1, #2
  4177a8:	bl	41d2f8 <_obstack_memory_used@@Base+0x6ec4>
  4177ac:	ldrb	w8, [x21, #56]
  4177b0:	ubfiz	w9, w0, #1, #2
  4177b4:	tst	w0, #0x3
  4177b8:	mov	x10, #0xfffffffffffffffe    	// #-2
  4177bc:	and	w8, w8, #0xfffffff9
  4177c0:	orr	w8, w9, w8
  4177c4:	strb	w8, [x21, #56]
  4177c8:	csel	x21, x10, xzr, eq  // eq = none
  4177cc:	cbz	x21, 4177dc <_obstack_memory_used@@Base+0x13a8>
  4177d0:	b	4177f4 <_obstack_memory_used@@Base+0x13c0>
  4177d4:	mov	x21, xzr
  4177d8:	cbnz	x21, 4177f4 <_obstack_memory_used@@Base+0x13c0>
  4177dc:	ldur	w8, [x29, #-4]
  4177e0:	tbz	w8, #0, 4177f0 <_obstack_memory_used@@Base+0x13bc>
  4177e4:	ldr	x8, [x25, #8]
  4177e8:	sub	x21, x8, x20
  4177ec:	b	4177f4 <_obstack_memory_used@@Base+0x13c0>
  4177f0:	ldr	x21, [x25]
  4177f4:	mov	x0, x25
  4177f8:	bl	402770 <free@plt>
  4177fc:	mov	x0, x21
  417800:	ldp	x20, x19, [sp, #96]
  417804:	ldp	x22, x21, [sp, #80]
  417808:	ldp	x24, x23, [sp, #64]
  41780c:	ldp	x26, x25, [sp, #48]
  417810:	ldp	x28, x27, [sp, #32]
  417814:	ldp	x29, x30, [sp, #16]
  417818:	add	sp, sp, #0x70
  41781c:	ret
  417820:	mov	x21, #0xffffffffffffffff    	// #-1
  417824:	b	4177fc <_obstack_memory_used@@Base+0x13c8>
  417828:	mov	x21, #0xfffffffffffffffe    	// #-2
  41782c:	b	4177fc <_obstack_memory_used@@Base+0x13c8>
  417830:	cmp	x8, #0x1
  417834:	csel	x27, xzr, x27, lt  // lt = tstop
  417838:	csinc	x28, x8, xzr, ge  // ge = tcont
  41783c:	b	41773c <_obstack_memory_used@@Base+0x1308>
  417840:	stp	x29, x30, [sp, #-16]!
  417844:	mov	x6, x5
  417848:	mov	x5, x2
  41784c:	mov	w7, wzr
  417850:	mov	x29, sp
  417854:	bl	417684 <_obstack_memory_used@@Base+0x1250>
  417858:	ldp	x29, x30, [sp], #16
  41785c:	ret
  417860:	sub	sp, sp, #0x20
  417864:	mov	x8, x6
  417868:	mov	w9, #0x1                   	// #1
  41786c:	str	x7, [sp]
  417870:	mov	x6, xzr
  417874:	mov	x7, x8
  417878:	stp	x29, x30, [sp, #16]
  41787c:	add	x29, sp, #0x10
  417880:	strb	w9, [sp, #8]
  417884:	bl	417894 <_obstack_memory_used@@Base+0x1460>
  417888:	ldp	x29, x30, [sp, #16]
  41788c:	add	sp, sp, #0x20
  417890:	ret
  417894:	sub	sp, sp, #0x70
  417898:	stp	x22, x21, [sp, #80]
  41789c:	stp	x20, x19, [sp, #96]
  4178a0:	adds	x22, x2, x4
  4178a4:	mov	x20, #0xfffffffffffffffe    	// #-2
  4178a8:	stp	x29, x30, [sp, #16]
  4178ac:	stp	x28, x27, [sp, #32]
  4178b0:	stp	x26, x25, [sp, #48]
  4178b4:	stp	x24, x23, [sp, #64]
  4178b8:	add	x29, sp, #0x10
  4178bc:	b.vs	417984 <_obstack_memory_used@@Base+0x1550>
  4178c0:	ldr	x24, [x29, #96]
  4178c4:	orr	x8, x4, x2
  4178c8:	mov	x28, x4
  4178cc:	mov	x19, x2
  4178d0:	orr	x8, x8, x24
  4178d4:	tbnz	x8, #63, 417984 <_obstack_memory_used@@Base+0x1550>
  4178d8:	mov	x9, x7
  4178dc:	mov	x21, x5
  4178e0:	mov	x25, x1
  4178e4:	mov	x23, x0
  4178e8:	cmp	x28, #0x1
  4178ec:	b.lt	417940 <_obstack_memory_used@@Base+0x150c>  // b.tstop
  4178f0:	mov	x27, x3
  4178f4:	cmp	x19, #0x1
  4178f8:	b.lt	417948 <_obstack_memory_used@@Base+0x1514>  // b.tstop
  4178fc:	mov	x0, x22
  417900:	str	x6, [sp, #8]
  417904:	mov	x20, x9
  417908:	bl	4024e0 <malloc@plt>
  41790c:	cbz	x0, 4179a8 <_obstack_memory_used@@Base+0x1574>
  417910:	mov	x1, x25
  417914:	mov	x2, x19
  417918:	mov	x26, x0
  41791c:	bl	402320 <memcpy@plt>
  417920:	add	x0, x26, x19
  417924:	mov	x1, x27
  417928:	mov	x2, x28
  41792c:	bl	402320 <memcpy@plt>
  417930:	ldr	x6, [sp, #8]
  417934:	mov	x25, x26
  417938:	mov	x9, x20
  41793c:	b	417950 <_obstack_memory_used@@Base+0x151c>
  417940:	mov	x26, xzr
  417944:	b	417950 <_obstack_memory_used@@Base+0x151c>
  417948:	mov	x26, xzr
  41794c:	mov	x25, x27
  417950:	ldrb	w8, [x29, #104]
  417954:	mov	x0, x23
  417958:	mov	x1, x25
  41795c:	mov	x2, x22
  417960:	and	w7, w8, #0x1
  417964:	mov	x3, x21
  417968:	mov	x4, x6
  41796c:	mov	x5, x24
  417970:	mov	x6, x9
  417974:	bl	417684 <_obstack_memory_used@@Base+0x1250>
  417978:	mov	x20, x0
  41797c:	mov	x0, x26
  417980:	bl	402770 <free@plt>
  417984:	mov	x0, x20
  417988:	ldp	x20, x19, [sp, #96]
  41798c:	ldp	x22, x21, [sp, #80]
  417990:	ldp	x24, x23, [sp, #64]
  417994:	ldp	x26, x25, [sp, #48]
  417998:	ldp	x28, x27, [sp, #32]
  41799c:	ldp	x29, x30, [sp, #16]
  4179a0:	add	sp, sp, #0x70
  4179a4:	ret
  4179a8:	mov	x20, #0xfffffffffffffffe    	// #-2
  4179ac:	b	417984 <_obstack_memory_used@@Base+0x1550>
  4179b0:	sub	sp, sp, #0x20
  4179b4:	stp	x29, x30, [sp, #16]
  4179b8:	add	x29, sp, #0x10
  4179bc:	ldr	x8, [x29, #16]
  4179c0:	strb	wzr, [sp, #8]
  4179c4:	str	x8, [sp]
  4179c8:	bl	417894 <_obstack_memory_used@@Base+0x1460>
  4179cc:	ldp	x29, x30, [sp, #16]
  4179d0:	add	sp, sp, #0x20
  4179d4:	ret
  4179d8:	ldrb	w8, [x0, #56]
  4179dc:	and	w8, w8, #0xfffffff9
  4179e0:	cbz	x2, 4179f8 <_obstack_memory_used@@Base+0x15c4>
  4179e4:	orr	w8, w8, #0x2
  4179e8:	strb	w8, [x0, #56]
  4179ec:	stp	x2, x3, [x1]
  4179f0:	str	x4, [x1, #16]
  4179f4:	ret
  4179f8:	strb	w8, [x0, #56]
  4179fc:	stp	xzr, xzr, [x1]
  417a00:	str	xzr, [x1, #16]
  417a04:	ret
  417a08:	stp	x29, x30, [sp, #-16]!
  417a0c:	ldr	w8, [x0, #8]
  417a10:	mov	w9, #0xff                  	// #255
  417a14:	movk	w9, #0x4, lsl #16
  417a18:	mov	x29, sp
  417a1c:	and	w8, w8, w9
  417a20:	cmp	w8, #0x6
  417a24:	b.ne	417a38 <_obstack_memory_used@@Base+0x1604>  // b.any
  417a28:	ldr	x0, [x0]
  417a2c:	bl	417abc <_obstack_memory_used@@Base+0x1688>
  417a30:	ldp	x29, x30, [sp], #16
  417a34:	ret
  417a38:	cmp	w8, #0x3
  417a3c:	b.ne	417a48 <_obstack_memory_used@@Base+0x1614>  // b.any
  417a40:	ldr	x0, [x0]
  417a44:	bl	402770 <free@plt>
  417a48:	ldp	x29, x30, [sp], #16
  417a4c:	ret
  417a50:	stp	x29, x30, [sp, #-32]!
  417a54:	str	x19, [sp, #16]
  417a58:	mov	x19, x0
  417a5c:	ldr	x0, [x0, #48]
  417a60:	mov	x29, sp
  417a64:	bl	402770 <free@plt>
  417a68:	ldr	x0, [x19, #72]
  417a6c:	bl	402770 <free@plt>
  417a70:	ldr	x8, [x19, #80]
  417a74:	add	x9, x19, #0x8
  417a78:	cmp	x8, x9
  417a7c:	b.eq	417a90 <_obstack_memory_used@@Base+0x165c>  // b.none
  417a80:	ldr	x0, [x8, #16]
  417a84:	bl	402770 <free@plt>
  417a88:	ldr	x0, [x19, #80]
  417a8c:	bl	402770 <free@plt>
  417a90:	ldr	x0, [x19, #24]
  417a94:	bl	402770 <free@plt>
  417a98:	ldr	x0, [x19, #96]
  417a9c:	bl	402770 <free@plt>
  417aa0:	ldr	x0, [x19, #88]
  417aa4:	bl	402770 <free@plt>
  417aa8:	mov	x0, x19
  417aac:	bl	402770 <free@plt>
  417ab0:	ldr	x19, [sp, #16]
  417ab4:	ldp	x29, x30, [sp], #32
  417ab8:	ret
  417abc:	stp	x29, x30, [sp, #-32]!
  417ac0:	str	x19, [sp, #16]
  417ac4:	mov	x19, x0
  417ac8:	ldr	x0, [x0]
  417acc:	mov	x29, sp
  417ad0:	bl	402770 <free@plt>
  417ad4:	ldr	x0, [x19, #8]
  417ad8:	bl	402770 <free@plt>
  417adc:	ldr	x0, [x19, #16]
  417ae0:	bl	402770 <free@plt>
  417ae4:	ldr	x0, [x19, #24]
  417ae8:	bl	402770 <free@plt>
  417aec:	mov	x0, x19
  417af0:	bl	402770 <free@plt>
  417af4:	ldr	x19, [sp, #16]
  417af8:	ldp	x29, x30, [sp], #32
  417afc:	ret
  417b00:	stp	x29, x30, [sp, #-64]!
  417b04:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  417b08:	movk	x8, #0x5554
  417b0c:	movk	x8, #0x555, lsl #48
  417b10:	movi	v0.2d, #0x0
  417b14:	cmp	x1, x8
  417b18:	mov	w8, #0xf                   	// #15
  417b1c:	stp	x24, x23, [sp, #16]
  417b20:	stp	x22, x21, [sp, #32]
  417b24:	stp	x20, x19, [sp, #48]
  417b28:	mov	x29, sp
  417b2c:	str	xzr, [x0, #224]
  417b30:	stp	q0, q0, [x0, #192]
  417b34:	stp	q0, q0, [x0, #160]
  417b38:	stp	q0, q0, [x0, #128]
  417b3c:	stp	q0, q0, [x0, #96]
  417b40:	stp	q0, q0, [x0, #64]
  417b44:	stp	q0, q0, [x0, #32]
  417b48:	stp	q0, q0, [x0]
  417b4c:	str	w8, [x0, #128]
  417b50:	b.hi	417cf0 <_obstack_memory_used@@Base+0x18bc>  // b.pmore
  417b54:	add	x8, x1, #0x1
  417b58:	mov	x19, x0
  417b5c:	str	x8, [x0, #8]
  417b60:	lsl	x0, x8, #4
  417b64:	mov	x20, x1
  417b68:	bl	4024e0 <malloc@plt>
  417b6c:	mov	w8, #0x1                   	// #1
  417b70:	str	x0, [x19]
  417b74:	mov	x21, x8
  417b78:	cmp	x8, x20
  417b7c:	lsl	x8, x8, #1
  417b80:	b.ls	417b74 <_obstack_memory_used@@Base+0x1740>  // b.plast
  417b84:	mov	w0, #0x18                  	// #24
  417b88:	mov	x1, x21
  417b8c:	bl	4025d0 <calloc@plt>
  417b90:	sub	x8, x21, #0x1
  417b94:	str	x0, [x19, #64]
  417b98:	str	x8, [x19, #136]
  417b9c:	bl	402780 <__ctype_get_mb_cur_max@plt>
  417ba0:	str	w0, [x19, #180]
  417ba4:	mov	w0, #0xe                   	// #14
  417ba8:	bl	4024a0 <nl_langinfo@plt>
  417bac:	ldrb	w8, [x0]
  417bb0:	orr	w8, w8, #0x20
  417bb4:	cmp	w8, #0x75
  417bb8:	b.ne	417c04 <_obstack_memory_used@@Base+0x17d0>  // b.any
  417bbc:	ldrb	w8, [x0, #1]
  417bc0:	orr	w8, w8, #0x20
  417bc4:	cmp	w8, #0x74
  417bc8:	b.ne	417c04 <_obstack_memory_used@@Base+0x17d0>  // b.any
  417bcc:	ldrb	w8, [x0, #2]
  417bd0:	orr	w8, w8, #0x20
  417bd4:	cmp	w8, #0x66
  417bd8:	b.ne	417c04 <_obstack_memory_used@@Base+0x17d0>  // b.any
  417bdc:	ldrb	w8, [x0, #3]!
  417be0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  417be4:	add	x1, x1, #0xa20
  417be8:	cmp	w8, #0x2d
  417bec:	cinc	x0, x0, eq  // eq = none
  417bf0:	bl	402750 <strcmp@plt>
  417bf4:	cbnz	w0, 417c04 <_obstack_memory_used@@Base+0x17d0>
  417bf8:	ldrb	w8, [x19, #176]
  417bfc:	orr	w8, w8, #0x4
  417c00:	strb	w8, [x19, #176]
  417c04:	ldrb	w8, [x19, #176]
  417c08:	ldr	w9, [x19, #180]
  417c0c:	and	w10, w8, #0xfffffff7
  417c10:	cmp	w9, #0x2
  417c14:	strb	w10, [x19, #176]
  417c18:	b.lt	417cc4 <_obstack_memory_used@@Base+0x1890>  // b.tstop
  417c1c:	tbnz	w8, #2, 417cb8 <_obstack_memory_used@@Base+0x1884>
  417c20:	mov	w0, #0x20                  	// #32
  417c24:	mov	w1, #0x1                   	// #1
  417c28:	bl	4025d0 <calloc@plt>
  417c2c:	str	x0, [x19, #120]
  417c30:	cbz	x0, 417cf0 <_obstack_memory_used@@Base+0x18bc>
  417c34:	mov	x21, xzr
  417c38:	mov	w8, wzr
  417c3c:	mov	w22, #0x1                   	// #1
  417c40:	b	417c54 <_obstack_memory_used@@Base+0x1820>
  417c44:	add	x21, x21, #0x1
  417c48:	cmp	x21, #0x4
  417c4c:	add	w8, w24, w23
  417c50:	b.eq	417cc4 <_obstack_memory_used@@Base+0x1890>  // b.none
  417c54:	mov	x23, xzr
  417c58:	mov	w24, w8
  417c5c:	b	417c6c <_obstack_memory_used@@Base+0x1838>
  417c60:	add	x23, x23, #0x1
  417c64:	cmp	x23, #0x40
  417c68:	b.eq	417c44 <_obstack_memory_used@@Base+0x1810>  // b.none
  417c6c:	add	x20, x24, x23
  417c70:	mov	w0, w20
  417c74:	bl	4026b0 <btowc@plt>
  417c78:	cmn	w0, #0x1
  417c7c:	b.eq	417c98 <_obstack_memory_used@@Base+0x1864>  // b.none
  417c80:	ldr	x8, [x19, #120]
  417c84:	lsl	x9, x21, #3
  417c88:	lsl	x11, x22, x23
  417c8c:	ldr	x10, [x8, x9]
  417c90:	orr	x10, x10, x11
  417c94:	str	x10, [x8, x9]
  417c98:	cmp	w20, #0x7f
  417c9c:	b.hi	417c60 <_obstack_memory_used@@Base+0x182c>  // b.pmore
  417ca0:	cmp	w20, w0
  417ca4:	b.eq	417c60 <_obstack_memory_used@@Base+0x182c>  // b.none
  417ca8:	ldrb	w8, [x19, #176]
  417cac:	orr	w8, w8, #0x8
  417cb0:	strb	w8, [x19, #176]
  417cb4:	b	417c60 <_obstack_memory_used@@Base+0x182c>
  417cb8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  417cbc:	add	x8, x8, #0x9e8
  417cc0:	str	x8, [x19, #120]
  417cc4:	ldr	x8, [x19]
  417cc8:	mov	w0, #0xc                   	// #12
  417ccc:	cbz	x8, 417cdc <_obstack_memory_used@@Base+0x18a8>
  417cd0:	ldr	x8, [x19, #64]
  417cd4:	cmp	x8, #0x0
  417cd8:	csel	w0, w0, wzr, eq  // eq = none
  417cdc:	ldp	x20, x19, [sp, #48]
  417ce0:	ldp	x22, x21, [sp, #32]
  417ce4:	ldp	x24, x23, [sp, #16]
  417ce8:	ldp	x29, x30, [sp], #64
  417cec:	ret
  417cf0:	mov	w0, #0xc                   	// #12
  417cf4:	b	417cdc <_obstack_memory_used@@Base+0x18a8>
  417cf8:	stp	x29, x30, [sp, #-64]!
  417cfc:	stp	x20, x19, [sp, #48]
  417d00:	mov	x19, x0
  417d04:	movi	v0.2d, #0x0
  417d08:	stp	x24, x23, [sp, #16]
  417d0c:	stp	x22, x21, [sp, #32]
  417d10:	mov	w23, w4
  417d14:	mov	x21, x2
  417d18:	mov	x24, x1
  417d1c:	str	xzr, [x0, #144]
  417d20:	stp	q0, q0, [x0, #112]
  417d24:	stp	q0, q0, [x0, #80]
  417d28:	stp	q0, q0, [x0, #48]
  417d2c:	stp	q0, q0, [x0, #16]
  417d30:	str	q0, [x0]
  417d34:	and	w4, w4, #0x1
  417d38:	mov	x0, x1
  417d3c:	mov	x1, x2
  417d40:	mov	x2, x19
  417d44:	mov	x29, sp
  417d48:	mov	x20, x5
  417d4c:	mov	x22, x3
  417d50:	bl	41850c <_obstack_memory_used@@Base+0x20d8>
  417d54:	cmp	x21, #0x1
  417d58:	b.lt	417d6c <_obstack_memory_used@@Base+0x1938>  // b.tstop
  417d5c:	add	x1, x21, #0x1
  417d60:	mov	x0, x19
  417d64:	bl	41855c <_obstack_memory_used@@Base+0x2128>
  417d68:	cbnz	w0, 417e14 <_obstack_memory_used@@Base+0x19e0>
  417d6c:	ldrb	w8, [x19, #139]
  417d70:	cbz	w8, 417d78 <_obstack_memory_used@@Base+0x1944>
  417d74:	ldr	x24, [x19, #8]
  417d78:	str	x24, [x19, #8]
  417d7c:	ldr	w8, [x20, #180]
  417d80:	cmp	w8, #0x2
  417d84:	tbz	w23, #0, 417dd0 <_obstack_memory_used@@Base+0x199c>
  417d88:	b.lt	417de4 <_obstack_memory_used@@Base+0x19b0>  // b.tstop
  417d8c:	mov	x0, x19
  417d90:	bl	418610 <_obstack_memory_used@@Base+0x21dc>
  417d94:	cbnz	w0, 417e14 <_obstack_memory_used@@Base+0x19e0>
  417d98:	ldr	x8, [x19, #56]
  417d9c:	cmp	x8, x21
  417da0:	b.ge	417e00 <_obstack_memory_used@@Base+0x19cc>  // b.tcont
  417da4:	ldr	x9, [x19, #48]
  417da8:	ldrsw	x10, [x20, #180]
  417dac:	ldr	x8, [x19, #64]
  417db0:	add	x9, x9, x10
  417db4:	cmp	x8, x9
  417db8:	b.gt	417e00 <_obstack_memory_used@@Base+0x19cc>
  417dbc:	lsl	x1, x8, #1
  417dc0:	mov	x0, x19
  417dc4:	bl	41855c <_obstack_memory_used@@Base+0x2128>
  417dc8:	cbz	w0, 417d8c <_obstack_memory_used@@Base+0x1958>
  417dcc:	b	417e14 <_obstack_memory_used@@Base+0x19e0>
  417dd0:	b.lt	417df4 <_obstack_memory_used@@Base+0x19c0>  // b.tstop
  417dd4:	mov	x0, x19
  417dd8:	bl	418c88 <_obstack_memory_used@@Base+0x2854>
  417ddc:	mov	w0, wzr
  417de0:	b	417e14 <_obstack_memory_used@@Base+0x19e0>
  417de4:	mov	x0, x19
  417de8:	bl	418c08 <_obstack_memory_used@@Base+0x27d4>
  417dec:	mov	w0, wzr
  417df0:	b	417e14 <_obstack_memory_used@@Base+0x19e0>
  417df4:	cbz	x22, 417e08 <_obstack_memory_used@@Base+0x19d4>
  417df8:	mov	x0, x19
  417dfc:	bl	418e2c <_obstack_memory_used@@Base+0x29f8>
  417e00:	mov	w0, wzr
  417e04:	b	417e14 <_obstack_memory_used@@Base+0x19e0>
  417e08:	ldr	x8, [x19, #64]
  417e0c:	mov	w0, wzr
  417e10:	stp	x8, x8, [x19, #48]
  417e14:	ldp	x20, x19, [sp, #48]
  417e18:	ldp	x22, x21, [sp, #32]
  417e1c:	ldp	x24, x23, [sp, #16]
  417e20:	ldp	x29, x30, [sp], #64
  417e24:	ret
  417e28:	stp	x29, x30, [sp, #-32]!
  417e2c:	stp	x20, x19, [sp, #16]
  417e30:	ldr	x19, [x0]
  417e34:	mov	x29, sp
  417e38:	ldr	x0, [x19, #112]
  417e3c:	cbz	x0, 417e50 <_obstack_memory_used@@Base+0x1a1c>
  417e40:	ldr	x20, [x0]
  417e44:	bl	402770 <free@plt>
  417e48:	mov	x0, x20
  417e4c:	cbnz	x20, 417e40 <_obstack_memory_used@@Base+0x1a0c>
  417e50:	ldr	x0, [x19, #32]
  417e54:	mov	w8, #0xf                   	// #15
  417e58:	str	w8, [x19, #128]
  417e5c:	stp	xzr, xzr, [x19, #104]
  417e60:	bl	402770 <free@plt>
  417e64:	str	xzr, [x19, #32]
  417e68:	ldp	x20, x19, [sp, #16]
  417e6c:	ldp	x29, x30, [sp], #32
  417e70:	ret
  417e74:	stp	x29, x30, [sp, #-32]!
  417e78:	str	x19, [sp, #16]
  417e7c:	mov	x19, x0
  417e80:	ldr	x0, [x0, #16]
  417e84:	mov	x29, sp
  417e88:	bl	402770 <free@plt>
  417e8c:	ldr	x0, [x19, #24]
  417e90:	bl	402770 <free@plt>
  417e94:	ldrb	w8, [x19, #139]
  417e98:	cbz	w8, 417ea4 <_obstack_memory_used@@Base+0x1a70>
  417e9c:	ldr	x0, [x19, #8]
  417ea0:	bl	402770 <free@plt>
  417ea4:	ldr	x19, [sp, #16]
  417ea8:	ldp	x29, x30, [sp], #32
  417eac:	ret
  417eb0:	sub	sp, sp, #0x50
  417eb4:	stp	x29, x30, [sp, #16]
  417eb8:	stp	x22, x21, [sp, #48]
  417ebc:	stp	x20, x19, [sp, #64]
  417ec0:	ldr	x20, [x1]
  417ec4:	str	x23, [sp, #32]
  417ec8:	mov	x23, x0
  417ecc:	mov	x21, x2
  417ed0:	mov	x22, x1
  417ed4:	str	x2, [x20, #216]
  417ed8:	orr	x2, x2, #0x800000
  417edc:	mov	x0, sp
  417ee0:	mov	x1, x23
  417ee4:	add	x29, sp, #0x10
  417ee8:	mov	x19, x3
  417eec:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  417ef0:	mov	x2, sp
  417ef4:	mov	x0, x23
  417ef8:	mov	x1, x22
  417efc:	mov	x3, x21
  417f00:	mov	x4, xzr
  417f04:	mov	x5, x19
  417f08:	bl	418ea4 <_obstack_memory_used@@Base+0x2a70>
  417f0c:	mov	x21, x0
  417f10:	cbnz	x0, 417f1c <_obstack_memory_used@@Base+0x1ae8>
  417f14:	ldr	w8, [x19]
  417f18:	cbnz	w8, 417f6c <_obstack_memory_used@@Base+0x1b38>
  417f1c:	mov	w3, #0x2                   	// #2
  417f20:	mov	x0, x20
  417f24:	mov	x1, xzr
  417f28:	mov	x2, xzr
  417f2c:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  417f30:	mov	x22, x0
  417f34:	cbz	x21, 417f4c <_obstack_memory_used@@Base+0x1b18>
  417f38:	mov	w3, #0x10                  	// #16
  417f3c:	mov	x0, x20
  417f40:	mov	x1, x21
  417f44:	mov	x2, x22
  417f48:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  417f4c:	cbz	x22, 417f74 <_obstack_memory_used@@Base+0x1b40>
  417f50:	cbz	x0, 417f74 <_obstack_memory_used@@Base+0x1b40>
  417f54:	ldp	x20, x19, [sp, #64]
  417f58:	ldp	x22, x21, [sp, #48]
  417f5c:	ldr	x23, [sp, #32]
  417f60:	ldp	x29, x30, [sp, #16]
  417f64:	add	sp, sp, #0x50
  417f68:	ret
  417f6c:	mov	x0, xzr
  417f70:	b	417f54 <_obstack_memory_used@@Base+0x1b20>
  417f74:	mov	x0, xzr
  417f78:	mov	w8, #0xc                   	// #12
  417f7c:	str	w8, [x19]
  417f80:	b	417f54 <_obstack_memory_used@@Base+0x1b20>
  417f84:	stp	x29, x30, [sp, #-32]!
  417f88:	stp	x20, x19, [sp, #16]
  417f8c:	ldr	x19, [x0]
  417f90:	mov	x20, x0
  417f94:	mov	x29, sp
  417f98:	ldr	x8, [x19, #8]
  417f9c:	lsl	x0, x8, #3
  417fa0:	bl	4024e0 <malloc@plt>
  417fa4:	ldr	x8, [x19, #8]
  417fa8:	str	x0, [x19, #24]
  417fac:	lsl	x0, x8, #3
  417fb0:	bl	4024e0 <malloc@plt>
  417fb4:	ldr	x8, [x19, #8]
  417fb8:	str	x0, [x19, #32]
  417fbc:	add	x8, x8, x8, lsl #1
  417fc0:	lsl	x0, x8, #3
  417fc4:	bl	4024e0 <malloc@plt>
  417fc8:	ldr	x8, [x19, #8]
  417fcc:	str	x0, [x19, #40]
  417fd0:	add	x8, x8, x8, lsl #1
  417fd4:	lsl	x0, x8, #3
  417fd8:	bl	4024e0 <malloc@plt>
  417fdc:	ldr	x9, [x19, #24]
  417fe0:	str	x0, [x19, #48]
  417fe4:	cbz	x9, 418158 <_obstack_memory_used@@Base+0x1d24>
  417fe8:	ldr	x9, [x19, #32]
  417fec:	cbz	x9, 418158 <_obstack_memory_used@@Base+0x1d24>
  417ff0:	mov	x8, x0
  417ff4:	mov	w0, #0xc                   	// #12
  417ff8:	cbz	x8, 418124 <_obstack_memory_used@@Base+0x1cf0>
  417ffc:	ldr	x8, [x19, #40]
  418000:	cbz	x8, 418124 <_obstack_memory_used@@Base+0x1cf0>
  418004:	ldr	x8, [x20, #48]
  418008:	lsl	x0, x8, #3
  41800c:	bl	4024e0 <malloc@plt>
  418010:	str	x0, [x19, #224]
  418014:	cbz	x0, 41807c <_obstack_memory_used@@Base+0x1c48>
  418018:	ldr	x8, [x20, #48]
  41801c:	cbz	x8, 41803c <_obstack_memory_used@@Base+0x1c08>
  418020:	ldr	x8, [x19, #224]
  418024:	mov	x9, xzr
  418028:	str	x9, [x8, x9, lsl #3]
  41802c:	ldr	x10, [x20, #48]
  418030:	add	x9, x9, #0x1
  418034:	cmp	x9, x10
  418038:	b.cc	418028 <_obstack_memory_used@@Base+0x1bf4>  // b.lo, b.ul, b.last
  41803c:	ldr	x0, [x19, #104]
  418040:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x4bcc>
  418044:	add	x1, x1, #0xb9c
  418048:	mov	x2, x19
  41804c:	bl	41bae8 <_obstack_memory_used@@Base+0x56b4>
  418050:	ldr	x8, [x20, #48]
  418054:	cbz	x8, 418064 <_obstack_memory_used@@Base+0x1c30>
  418058:	ldr	x10, [x19, #224]
  41805c:	ldr	x9, [x10]
  418060:	cbz	x9, 418130 <_obstack_memory_used@@Base+0x1cfc>
  418064:	mov	x9, xzr
  418068:	cmp	x9, x8
  41806c:	b.ne	41807c <_obstack_memory_used@@Base+0x1c48>  // b.any
  418070:	ldr	x0, [x19, #224]
  418074:	bl	402770 <free@plt>
  418078:	str	xzr, [x19, #224]
  41807c:	ldr	x0, [x19, #104]
  418080:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x4bcc>
  418084:	add	x1, x1, #0xc44
  418088:	mov	x2, x20
  41808c:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  418090:	cbnz	w0, 418124 <_obstack_memory_used@@Base+0x1cf0>
  418094:	ldr	x0, [x19, #104]
  418098:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x4bcc>
  41809c:	add	x1, x1, #0xccc
  4180a0:	mov	x2, x19
  4180a4:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  4180a8:	cbnz	w0, 418124 <_obstack_memory_used@@Base+0x1cf0>
  4180ac:	ldr	x0, [x19, #104]
  4180b0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x4bcc>
  4180b4:	add	x1, x1, #0xd68
  4180b8:	mov	x2, x19
  4180bc:	bl	41bae8 <_obstack_memory_used@@Base+0x56b4>
  4180c0:	ldr	x0, [x19, #104]
  4180c4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x4bcc>
  4180c8:	add	x1, x1, #0xdc4
  4180cc:	mov	x2, x19
  4180d0:	bl	41bae8 <_obstack_memory_used@@Base+0x56b4>
  4180d4:	cbnz	w0, 418124 <_obstack_memory_used@@Base+0x1cf0>
  4180d8:	mov	x0, x19
  4180dc:	bl	41becc <_obstack_memory_used@@Base+0x5a98>
  4180e0:	cbnz	w0, 418124 <_obstack_memory_used@@Base+0x1cf0>
  4180e4:	ldrb	w8, [x20, #56]
  4180e8:	tbnz	w8, #4, 4180fc <_obstack_memory_used@@Base+0x1cc8>
  4180ec:	ldr	x8, [x20, #48]
  4180f0:	cbz	x8, 4180fc <_obstack_memory_used@@Base+0x1cc8>
  4180f4:	ldrb	w8, [x19, #176]
  4180f8:	tbnz	w8, #0, 418104 <_obstack_memory_used@@Base+0x1cd0>
  4180fc:	ldr	x8, [x19, #152]
  418100:	cbz	x8, 418124 <_obstack_memory_used@@Base+0x1cf0>
  418104:	ldr	x8, [x19, #16]
  418108:	add	x8, x8, x8, lsl #1
  41810c:	lsl	x0, x8, #3
  418110:	bl	4024e0 <malloc@plt>
  418114:	str	x0, [x19, #56]
  418118:	cbz	x0, 418158 <_obstack_memory_used@@Base+0x1d24>
  41811c:	mov	x0, x19
  418120:	bl	41bfe0 <_obstack_memory_used@@Base+0x5bac>
  418124:	ldp	x20, x19, [sp, #16]
  418128:	ldp	x29, x30, [sp], #32
  41812c:	ret
  418130:	mov	w11, #0x1                   	// #1
  418134:	ldr	x8, [x20, #48]
  418138:	mov	x9, x11
  41813c:	cmp	x11, x8
  418140:	b.cs	418068 <_obstack_memory_used@@Base+0x1c34>  // b.hs, b.nlast
  418144:	ldr	x11, [x10, x9, lsl #3]
  418148:	cmp	x9, x11
  41814c:	add	x11, x9, #0x1
  418150:	b.eq	418134 <_obstack_memory_used@@Base+0x1d00>  // b.none
  418154:	b	418068 <_obstack_memory_used@@Base+0x1c34>
  418158:	mov	w0, #0xc                   	// #12
  41815c:	b	418124 <_obstack_memory_used@@Base+0x1cf0>
  418160:	stp	x29, x30, [sp, #-16]!
  418164:	ldr	x8, [x0, #16]
  418168:	mov	x29, sp
  41816c:	cbz	x8, 418194 <_obstack_memory_used@@Base+0x1d60>
  418170:	ldr	x11, [x0]
  418174:	adrp	x12, 426000 <_obstack_memory_used@@Base+0xfbcc>
  418178:	mov	w8, wzr
  41817c:	mov	w9, wzr
  418180:	mov	x10, xzr
  418184:	add	x12, x12, #0x695
  418188:	mov	w13, #0x1                   	// #1
  41818c:	mov	w14, #0x8b                  	// #139
  418190:	b	41826c <_obstack_memory_used@@Base+0x1e38>
  418194:	mov	w9, wzr
  418198:	tbnz	w9, #0, 4181a0 <_obstack_memory_used@@Base+0x1d6c>
  41819c:	tbz	w8, #0, 418210 <_obstack_memory_used@@Base+0x1ddc>
  4181a0:	ldr	x9, [x0, #16]
  4181a4:	cbz	x9, 418210 <_obstack_memory_used@@Base+0x1ddc>
  4181a8:	mov	x9, xzr
  4181ac:	mov	x10, xzr
  4181b0:	b	4181d4 <_obstack_memory_used@@Base+0x1da0>
  4181b4:	and	w12, w12, #0xffffff00
  4181b8:	orr	w12, w12, #0x7
  4181bc:	str	w12, [x11, #8]
  4181c0:	ldr	x11, [x0, #16]
  4181c4:	add	x10, x10, #0x1
  4181c8:	add	x9, x9, #0x10
  4181cc:	cmp	x10, x11
  4181d0:	b.cs	418210 <_obstack_memory_used@@Base+0x1ddc>  // b.hs, b.nlast
  4181d4:	ldr	x13, [x0]
  4181d8:	add	x11, x13, x9
  4181dc:	ldr	w12, [x11, #8]
  4181e0:	and	w14, w12, #0xff
  4181e4:	cmp	w14, #0x5
  4181e8:	b.eq	4181b4 <_obstack_memory_used@@Base+0x1d80>  // b.none
  4181ec:	cmp	w14, #0x1
  4181f0:	b.ne	4181c0 <_obstack_memory_used@@Base+0x1d8c>  // b.any
  4181f4:	ldrsb	w13, [x13, x9]
  4181f8:	tbnz	w13, #31, 418208 <_obstack_memory_used@@Base+0x1dd4>
  4181fc:	cmp	w14, #0x5
  418200:	b.eq	4181b4 <_obstack_memory_used@@Base+0x1d80>  // b.none
  418204:	b	4181c0 <_obstack_memory_used@@Base+0x1d8c>
  418208:	and	w12, w12, #0xffdfffff
  41820c:	b	4181bc <_obstack_memory_used@@Base+0x1d88>
  418210:	ldr	x10, [x0, #152]
  418214:	mov	w9, #0x1                   	// #1
  418218:	ldrb	w11, [x0, #176]
  41821c:	str	w9, [x0, #180]
  418220:	cmp	x10, #0x0
  418224:	cset	w9, gt
  418228:	orr	w8, w8, w9
  41822c:	mov	w12, #0x2                   	// #2
  418230:	tst	w8, #0x1
  418234:	csel	w8, w12, wzr, ne  // ne = any
  418238:	and	w9, w11, #0xfffffff9
  41823c:	orr	w8, w8, w9
  418240:	strb	w8, [x0, #176]
  418244:	ldp	x29, x30, [sp], #16
  418248:	ret
  41824c:	ldrsb	w15, [x15]
  418250:	cmp	w15, #0x0
  418254:	cset	w15, lt  // lt = tstop
  418258:	orr	w9, w9, w15
  41825c:	ldr	x15, [x0, #16]
  418260:	add	x10, x10, #0x1
  418264:	cmp	x10, x15
  418268:	b.cs	418198 <_obstack_memory_used@@Base+0x1d64>  // b.hs, b.nlast
  41826c:	add	x15, x11, x10, lsl #4
  418270:	ldrb	w16, [x15, #8]
  418274:	sub	w16, w16, #0x1
  418278:	cmp	w16, #0xb
  41827c:	b.hi	4182e4 <_obstack_memory_used@@Base+0x1eb0>  // b.pmore
  418280:	adr	x17, 418244 <_obstack_memory_used@@Base+0x1e10>
  418284:	ldrb	w18, [x12, x16]
  418288:	add	x17, x17, x18, lsl #2
  41828c:	br	x17
  418290:	lsl	x16, x10, #4
  418294:	ldr	x16, [x11, x16]
  418298:	mov	x15, xzr
  41829c:	add	x16, x16, #0x10
  4182a0:	ldr	x17, [x16, x15]
  4182a4:	cbnz	x17, 418244 <_obstack_memory_used@@Base+0x1e10>
  4182a8:	add	x15, x15, #0x8
  4182ac:	cmp	x15, #0x10
  4182b0:	b.ne	4182a0 <_obstack_memory_used@@Base+0x1e6c>  // b.any
  4182b4:	b	41825c <_obstack_memory_used@@Base+0x1e28>
  4182b8:	ldr	w15, [x15]
  4182bc:	sub	w15, w15, #0x10
  4182c0:	ror	w15, w15, #4
  4182c4:	cmp	w15, #0x7
  4182c8:	b.hi	418244 <_obstack_memory_used@@Base+0x1e10>  // b.pmore
  4182cc:	lsl	w15, w13, w15
  4182d0:	tst	w15, w14
  4182d4:	b.ne	41825c <_obstack_memory_used@@Base+0x1e28>  // b.any
  4182d8:	b	418244 <_obstack_memory_used@@Base+0x1e10>
  4182dc:	mov	w8, #0x1                   	// #1
  4182e0:	b	41825c <_obstack_memory_used@@Base+0x1e28>
  4182e4:	bl	4026c0 <abort@plt>
  4182e8:	sub	sp, sp, #0x60
  4182ec:	stp	x29, x30, [sp, #32]
  4182f0:	stp	x22, x21, [sp, #64]
  4182f4:	stp	x20, x19, [sp, #80]
  4182f8:	ldr	x8, [x0, #104]
  4182fc:	ldr	x9, [x0, #48]
  418300:	mov	w10, #0x18                  	// #24
  418304:	mov	x19, x0
  418308:	ldr	x8, [x8, #24]
  41830c:	str	x23, [sp, #48]
  418310:	add	x29, sp, #0x20
  418314:	ldr	x8, [x8, #56]
  418318:	str	x8, [x0, #144]
  41831c:	madd	x1, x8, x10, x9
  418320:	add	x0, sp, #0x8
  418324:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  418328:	str	w0, [x29, #28]
  41832c:	cbnz	w0, 418504 <_obstack_memory_used@@Base+0x20d0>
  418330:	ldr	x8, [x19, #152]
  418334:	cmp	x8, #0x1
  418338:	b.lt	418448 <_obstack_memory_used@@Base+0x2014>  // b.tstop
  41833c:	ldr	x8, [sp, #16]
  418340:	cmp	x8, #0x1
  418344:	b.lt	418448 <_obstack_memory_used@@Base+0x2014>  // b.tstop
  418348:	mov	x22, xzr
  41834c:	mov	w23, #0x18                  	// #24
  418350:	ldr	x10, [sp, #24]
  418354:	ldr	x11, [x19]
  418358:	ldr	x9, [x10, x22, lsl #3]
  41835c:	add	x12, x11, x9, lsl #4
  418360:	ldrb	w12, [x12, #8]
  418364:	cmp	w12, #0x4
  418368:	b.ne	4183bc <_obstack_memory_used@@Base+0x1f88>  // b.any
  41836c:	cmp	x8, #0x1
  418370:	b.lt	4183f8 <_obstack_memory_used@@Base+0x1fc4>  // b.tstop
  418374:	mov	x12, xzr
  418378:	add	x13, x11, x9, lsl #4
  41837c:	b	41838c <_obstack_memory_used@@Base+0x1f58>
  418380:	add	x12, x12, #0x1
  418384:	cmp	x8, x12
  418388:	b.eq	4183c4 <_obstack_memory_used@@Base+0x1f90>  // b.none
  41838c:	ldr	x14, [x10, x12, lsl #3]
  418390:	add	x15, x11, x14, lsl #4
  418394:	ldrb	w15, [x15, #8]
  418398:	cmp	w15, #0x9
  41839c:	b.ne	418380 <_obstack_memory_used@@Base+0x1f4c>  // b.any
  4183a0:	lsl	x14, x14, #4
  4183a4:	ldr	x14, [x11, x14]
  4183a8:	ldr	x15, [x13]
  4183ac:	cmp	x14, x15
  4183b0:	b.ne	418380 <_obstack_memory_used@@Base+0x1f4c>  // b.any
  4183b4:	cmp	x12, x8
  4183b8:	b.ne	4183d0 <_obstack_memory_used@@Base+0x1f9c>  // b.any
  4183bc:	mov	w8, #0x4                   	// #4
  4183c0:	b	41842c <_obstack_memory_used@@Base+0x1ff8>
  4183c4:	mov	x12, x8
  4183c8:	cmp	x12, x8
  4183cc:	b.eq	4183bc <_obstack_memory_used@@Base+0x1f88>  // b.none
  4183d0:	ldr	x8, [x19, #40]
  4183d4:	add	x0, sp, #0x8
  4183d8:	madd	x8, x9, x23, x8
  4183dc:	ldr	x8, [x8, #16]
  4183e0:	ldr	x21, [x8]
  4183e4:	mov	x1, x21
  4183e8:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  4183ec:	cbz	x0, 418408 <_obstack_memory_used@@Base+0x1fd4>
  4183f0:	mov	w8, wzr
  4183f4:	b	41842c <_obstack_memory_used@@Base+0x1ff8>
  4183f8:	mov	x12, xzr
  4183fc:	cmp	x12, x8
  418400:	b.eq	4183bc <_obstack_memory_used@@Base+0x1f88>  // b.none
  418404:	b	4183d0 <_obstack_memory_used@@Base+0x1f9c>
  418408:	ldr	x8, [x19, #48]
  41840c:	add	x0, sp, #0x8
  418410:	madd	x1, x21, x23, x8
  418414:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  418418:	cmp	w0, #0x0
  41841c:	cset	w8, ne  // ne = any
  418420:	csel	x22, xzr, x22, eq  // eq = none
  418424:	csel	w20, w20, w0, eq  // eq = none
  418428:	cbz	w0, 4183f0 <_obstack_memory_used@@Base+0x1fbc>
  41842c:	orr	w8, w8, #0x4
  418430:	cmp	w8, #0x4
  418434:	b.ne	4184e0 <_obstack_memory_used@@Base+0x20ac>  // b.any
  418438:	ldr	x8, [sp, #16]
  41843c:	add	x22, x22, #0x1
  418440:	cmp	x22, x8
  418444:	b.lt	418350 <_obstack_memory_used@@Base+0x1f1c>  // b.tstop
  418448:	add	x0, x29, #0x1c
  41844c:	add	x2, sp, #0x8
  418450:	mov	x1, x19
  418454:	mov	w3, wzr
  418458:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41845c:	str	x0, [x19, #72]
  418460:	cbz	x0, 4184fc <_obstack_memory_used@@Base+0x20c8>
  418464:	ldrsb	w8, [x0, #104]
  418468:	tbnz	w8, #31, 418478 <_obstack_memory_used@@Base+0x2044>
  41846c:	stp	x0, x0, [x19, #88]
  418470:	str	x0, [x19, #80]
  418474:	b	4184d4 <_obstack_memory_used@@Base+0x20a0>
  418478:	add	x0, x29, #0x1c
  41847c:	add	x2, sp, #0x8
  418480:	mov	w3, #0x1                   	// #1
  418484:	mov	x1, x19
  418488:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41848c:	str	x0, [x19, #80]
  418490:	add	x0, x29, #0x1c
  418494:	add	x2, sp, #0x8
  418498:	mov	w3, #0x2                   	// #2
  41849c:	mov	x1, x19
  4184a0:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  4184a4:	str	x0, [x19, #88]
  4184a8:	add	x0, x29, #0x1c
  4184ac:	add	x2, sp, #0x8
  4184b0:	mov	w3, #0x6                   	// #6
  4184b4:	mov	x1, x19
  4184b8:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  4184bc:	ldr	x8, [x19, #80]
  4184c0:	str	x0, [x19, #96]
  4184c4:	cbz	x8, 4184fc <_obstack_memory_used@@Base+0x20c8>
  4184c8:	cbz	x0, 4184fc <_obstack_memory_used@@Base+0x20c8>
  4184cc:	ldr	x8, [x19, #88]
  4184d0:	cbz	x8, 4184fc <_obstack_memory_used@@Base+0x20c8>
  4184d4:	ldr	x0, [sp, #24]
  4184d8:	bl	402770 <free@plt>
  4184dc:	mov	w20, wzr
  4184e0:	mov	w0, w20
  4184e4:	ldp	x20, x19, [sp, #80]
  4184e8:	ldp	x22, x21, [sp, #64]
  4184ec:	ldr	x23, [sp, #48]
  4184f0:	ldp	x29, x30, [sp, #32]
  4184f4:	add	sp, sp, #0x60
  4184f8:	ret
  4184fc:	ldr	w20, [x29, #28]
  418500:	b	4184e0 <_obstack_memory_used@@Base+0x20ac>
  418504:	mov	w20, w0
  418508:	b	4184e0 <_obstack_memory_used@@Base+0x20ac>
  41850c:	and	w8, w4, #0x1
  418510:	cmp	x3, #0x0
  418514:	strb	w8, [x2, #136]
  418518:	cset	w8, ne  // ne = any
  41851c:	orr	w8, w8, w4
  418520:	and	w8, w8, #0x1
  418524:	str	x0, [x2]
  418528:	stp	x1, x1, [x2, #80]
  41852c:	str	x3, [x2, #120]
  418530:	strb	w8, [x2, #139]
  418534:	ldr	w8, [x5, #180]
  418538:	str	w8, [x2, #144]
  41853c:	ldrb	w8, [x5, #176]
  418540:	ubfx	w8, w8, #2, #1
  418544:	strb	w8, [x2, #137]
  418548:	ldrb	w8, [x5, #176]
  41854c:	stp	x1, x1, [x2, #96]
  418550:	ubfx	w8, w8, #3, #1
  418554:	strb	w8, [x2, #138]
  418558:	ret
  41855c:	stp	x29, x30, [sp, #-32]!
  418560:	stp	x20, x19, [sp, #16]
  418564:	ldr	w8, [x0, #144]
  418568:	mov	x19, x0
  41856c:	mov	x20, x1
  418570:	mov	x29, sp
  418574:	cmp	w8, #0x2
  418578:	b.lt	4185cc <_obstack_memory_used@@Base+0x2198>  // b.tstop
  41857c:	lsr	x8, x20, #61
  418580:	cbnz	x8, 4185fc <_obstack_memory_used@@Base+0x21c8>
  418584:	ldr	x0, [x19, #16]
  418588:	lsl	x1, x20, #2
  41858c:	bl	402610 <realloc@plt>
  418590:	cbz	x0, 4185fc <_obstack_memory_used@@Base+0x21c8>
  418594:	mov	x8, x0
  418598:	ldr	x0, [x19, #24]
  41859c:	str	x8, [x19, #16]
  4185a0:	cbz	x0, 4185bc <_obstack_memory_used@@Base+0x2188>
  4185a4:	lsl	x1, x20, #3
  4185a8:	bl	402610 <realloc@plt>
  4185ac:	cbz	x0, 418604 <_obstack_memory_used@@Base+0x21d0>
  4185b0:	mov	w8, wzr
  4185b4:	str	x0, [x19, #24]
  4185b8:	cbnz	w8, 4185c0 <_obstack_memory_used@@Base+0x218c>
  4185bc:	mov	w8, wzr
  4185c0:	cbz	w8, 4185cc <_obstack_memory_used@@Base+0x2198>
  4185c4:	mov	w0, #0xc                   	// #12
  4185c8:	b	4185f0 <_obstack_memory_used@@Base+0x21bc>
  4185cc:	ldrb	w8, [x19, #139]
  4185d0:	cbz	w8, 4185e8 <_obstack_memory_used@@Base+0x21b4>
  4185d4:	ldr	x0, [x19, #8]
  4185d8:	mov	x1, x20
  4185dc:	bl	402610 <realloc@plt>
  4185e0:	cbz	x0, 4185c4 <_obstack_memory_used@@Base+0x2190>
  4185e4:	str	x0, [x19, #8]
  4185e8:	mov	w0, wzr
  4185ec:	str	x20, [x19, #64]
  4185f0:	ldp	x20, x19, [sp, #16]
  4185f4:	ldp	x29, x30, [sp], #32
  4185f8:	ret
  4185fc:	mov	w8, #0x1                   	// #1
  418600:	b	4185c0 <_obstack_memory_used@@Base+0x218c>
  418604:	mov	w8, #0x1                   	// #1
  418608:	cbnz	w8, 4185c0 <_obstack_memory_used@@Base+0x218c>
  41860c:	b	4185bc <_obstack_memory_used@@Base+0x2188>
  418610:	sub	sp, sp, #0xb0
  418614:	stp	x29, x30, [sp, #80]
  418618:	stp	x28, x27, [sp, #96]
  41861c:	stp	x26, x25, [sp, #112]
  418620:	stp	x24, x23, [sp, #128]
  418624:	stp	x22, x21, [sp, #144]
  418628:	stp	x20, x19, [sp, #160]
  41862c:	ldr	x8, [x0, #64]
  418630:	ldr	x9, [x0, #88]
  418634:	ldrb	w10, [x0, #138]
  418638:	ldr	x27, [x0, #48]
  41863c:	mov	x19, x0
  418640:	cmp	x8, x9
  418644:	csel	x26, x9, x8, gt
  418648:	add	x29, sp, #0x50
  41864c:	cbnz	w10, 418660 <_obstack_memory_used@@Base+0x222c>
  418650:	ldr	x8, [x19, #120]
  418654:	cbnz	x8, 418660 <_obstack_memory_used@@Base+0x222c>
  418658:	ldrb	w8, [x19, #140]
  41865c:	cbz	w8, 418668 <_obstack_memory_used@@Base+0x2234>
  418660:	ldr	x25, [x19, #56]
  418664:	b	418874 <_obstack_memory_used@@Base+0x2440>
  418668:	cmp	x26, x27
  41866c:	b.le	418864 <_obstack_memory_used@@Base+0x2430>
  418670:	adrp	x23, 426000 <_obstack_memory_used@@Base+0xfbcc>
  418674:	add	x20, x19, #0x20
  418678:	add	x23, x23, #0x6a1
  41867c:	mov	x28, x26
  418680:	ldr	x21, [x19, #40]
  418684:	ldr	x22, [x19]
  418688:	add	x8, x21, x27
  41868c:	ldrsb	w24, [x22, x8]
  418690:	tbnz	w24, #31, 4186d0 <_obstack_memory_used@@Base+0x229c>
  418694:	mov	x0, x20
  418698:	bl	4026e0 <mbsinit@plt>
  41869c:	cbz	w0, 4186d0 <_obstack_memory_used@@Base+0x229c>
  4186a0:	and	x21, x24, #0xff
  4186a4:	bl	402620 <__ctype_toupper_loc@plt>
  4186a8:	ldr	x8, [x0]
  4186ac:	ldr	x9, [x19, #8]
  4186b0:	ldr	w8, [x8, x21, lsl #2]
  4186b4:	strb	w8, [x9, x27]
  4186b8:	ldp	x8, x9, [x19, #8]
  4186bc:	ldrb	w8, [x8, x27]
  4186c0:	str	w8, [x9, x27, lsl #2]
  4186c4:	add	x27, x27, #0x1
  4186c8:	mov	w8, #0x2                   	// #2
  4186cc:	b	418840 <_obstack_memory_used@@Base+0x240c>
  4186d0:	ldr	x8, [x20]
  4186d4:	add	x9, x22, x21
  4186d8:	sub	x2, x26, x27
  4186dc:	add	x1, x9, x27
  4186e0:	add	x0, sp, #0x4
  4186e4:	mov	x3, x20
  4186e8:	stur	x8, [x29, #-8]
  4186ec:	bl	41609c <wcrtomb@plt+0x136dc>
  4186f0:	sub	x24, x0, #0x1
  4186f4:	mov	x21, x0
  4186f8:	cmn	x24, #0x4
  4186fc:	b.hi	41877c <_obstack_memory_used@@Base+0x2348>  // b.pmore
  418700:	ldr	w0, [sp, #4]
  418704:	bl	4028d0 <towupper@plt>
  418708:	ldr	w8, [sp, #4]
  41870c:	mov	w22, w0
  418710:	cmp	w0, w8
  418714:	b.ne	418738 <_obstack_memory_used@@Base+0x2304>  // b.any
  418718:	ldp	x9, x8, [x19]
  41871c:	ldr	x10, [x19, #40]
  418720:	mov	x2, x21
  418724:	add	x0, x8, x27
  418728:	add	x8, x9, x10
  41872c:	add	x1, x8, x27
  418730:	bl	402320 <memcpy@plt>
  418734:	b	4187f0 <_obstack_memory_used@@Base+0x23bc>
  418738:	add	x0, sp, #0x8
  41873c:	sub	x2, x29, #0x8
  418740:	mov	w1, w22
  418744:	bl	4029c0 <wcrtomb@plt>
  418748:	cmp	x21, x0
  41874c:	b.ne	4187e4 <_obstack_memory_used@@Base+0x23b0>  // b.any
  418750:	ldr	x8, [x19, #8]
  418754:	add	x1, sp, #0x8
  418758:	mov	x2, x21
  41875c:	add	x0, x8, x27
  418760:	bl	402320 <memcpy@plt>
  418764:	mov	w8, wzr
  418768:	cbz	w8, 4187f0 <_obstack_memory_used@@Base+0x23bc>
  41876c:	mov	x26, x27
  418770:	mov	x27, x26
  418774:	cbnz	w8, 418840 <_obstack_memory_used@@Base+0x240c>
  418778:	b	418838 <_obstack_memory_used@@Base+0x2404>
  41877c:	add	x8, x21, #0x1
  418780:	cmp	x8, #0x2
  418784:	b.cs	4187bc <_obstack_memory_used@@Base+0x2388>  // b.hs, b.nlast
  418788:	ldr	x8, [x19, #40]
  41878c:	ldp	x9, x10, [x19]
  418790:	add	x26, x27, #0x1
  418794:	cmn	x21, #0x1
  418798:	add	x8, x8, x27
  41879c:	ldrb	w8, [x9, x8]
  4187a0:	strb	w8, [x10, x27]
  4187a4:	ldr	x9, [x19, #16]
  4187a8:	str	w8, [x9, x27, lsl #2]
  4187ac:	b.ne	418838 <_obstack_memory_used@@Base+0x2404>  // b.any
  4187b0:	ldur	x8, [x29, #-8]
  4187b4:	str	x8, [x20]
  4187b8:	b	418838 <_obstack_memory_used@@Base+0x2404>
  4187bc:	cmn	x21, #0x2
  4187c0:	b.ne	4187d4 <_obstack_memory_used@@Base+0x23a0>  // b.any
  4187c4:	ldr	x8, [x19, #64]
  4187c8:	ldr	x9, [x19, #88]
  4187cc:	cmp	x8, x9
  4187d0:	b.ge	418788 <_obstack_memory_used@@Base+0x2354>  // b.tcont
  4187d4:	ldur	x8, [x29, #-8]
  4187d8:	str	x8, [x20]
  4187dc:	mov	w8, #0x3                   	// #3
  4187e0:	b	418840 <_obstack_memory_used@@Base+0x240c>
  4187e4:	mov	w8, #0x4                   	// #4
  4187e8:	mov	x25, x27
  4187ec:	cbnz	w8, 41876c <_obstack_memory_used@@Base+0x2338>
  4187f0:	ldr	x8, [x19, #16]
  4187f4:	add	x9, x21, x27
  4187f8:	add	x26, x27, #0x1
  4187fc:	cmp	x26, x9
  418800:	str	w22, [x8, x27, lsl #2]
  418804:	b.ge	41882c <_obstack_memory_used@@Base+0x23f8>  // b.tcont
  418808:	add	x8, x8, x27, lsl #2
  41880c:	lsl	x9, x21, #2
  418810:	add	x0, x8, #0x4
  418814:	sub	x2, x9, #0x4
  418818:	mov	w1, #0xff                  	// #255
  41881c:	bl	4025b0 <memset@plt>
  418820:	subs	x24, x24, #0x1
  418824:	add	x26, x26, #0x1
  418828:	b.ne	418820 <_obstack_memory_used@@Base+0x23ec>  // b.any
  41882c:	mov	w8, wzr
  418830:	mov	x27, x26
  418834:	cbnz	w8, 418840 <_obstack_memory_used@@Base+0x240c>
  418838:	mov	w8, wzr
  41883c:	mov	x27, x26
  418840:	cmp	w8, #0x4
  418844:	b.hi	418870 <_obstack_memory_used@@Base+0x243c>  // b.pmore
  418848:	adr	x9, 41885c <_obstack_memory_used@@Base+0x2428>
  41884c:	ldrb	w10, [x23, x8]
  418850:	add	x9, x9, x10, lsl #2
  418854:	mov	x26, x28
  418858:	br	x9
  41885c:	cmp	x26, x27
  418860:	b.gt	418680 <_obstack_memory_used@@Base+0x224c>
  418864:	mov	w0, wzr
  418868:	stp	x27, x27, [x19, #48]
  41886c:	b	4189a0 <_obstack_memory_used@@Base+0x256c>
  418870:	b	4189a0 <_obstack_memory_used@@Base+0x256c>
  418874:	cmp	x27, x26
  418878:	b.ge	418990 <_obstack_memory_used@@Base+0x255c>  // b.tcont
  41887c:	mov	x22, x19
  418880:	ldr	x8, [x22, #32]!
  418884:	sub	x2, x26, x27
  418888:	stur	x8, [x29, #-8]
  41888c:	ldr	x8, [x22, #88]
  418890:	cbnz	x8, 4189c0 <_obstack_memory_used@@Base+0x258c>
  418894:	ldr	x8, [x19]
  418898:	ldr	x9, [x19, #40]
  41889c:	add	x8, x8, x9
  4188a0:	add	x24, x8, x25
  4188a4:	mov	x0, sp
  4188a8:	mov	x1, x24
  4188ac:	mov	x3, x22
  4188b0:	bl	41609c <wcrtomb@plt+0x136dc>
  4188b4:	sub	x28, x0, #0x1
  4188b8:	mov	x20, x0
  4188bc:	cmn	x28, #0x4
  4188c0:	b.hi	418a18 <_obstack_memory_used@@Base+0x25e4>  // b.pmore
  4188c4:	ldr	w0, [sp]
  4188c8:	bl	4028d0 <towupper@plt>
  4188cc:	ldr	w8, [sp]
  4188d0:	mov	w21, w0
  4188d4:	cmp	w0, w8
  4188d8:	b.ne	4188f4 <_obstack_memory_used@@Base+0x24c0>  // b.any
  4188dc:	ldr	x8, [x19, #8]
  4188e0:	mov	x1, x24
  4188e4:	mov	x2, x20
  4188e8:	add	x0, x8, x27
  4188ec:	bl	402320 <memcpy@plt>
  4188f0:	b	418928 <_obstack_memory_used@@Base+0x24f4>
  4188f4:	add	x0, sp, #0x8
  4188f8:	sub	x2, x29, #0x8
  4188fc:	mov	w1, w21
  418900:	bl	4029c0 <wcrtomb@plt>
  418904:	subs	x9, x0, x20
  418908:	b.ne	418a84 <_obstack_memory_used@@Base+0x2650>  // b.any
  41890c:	ldr	x8, [x19, #8]
  418910:	add	x1, sp, #0x8
  418914:	add	x0, x8, x27
  418918:	mov	x2, x20
  41891c:	bl	402320 <memcpy@plt>
  418920:	mov	w8, wzr
  418924:	cbnz	wzr, 41897c <_obstack_memory_used@@Base+0x2548>
  418928:	ldrb	w8, [x19, #140]
  41892c:	cbz	w8, 418934 <_obstack_memory_used@@Base+0x2500>
  418930:	cbnz	x20, 418ab4 <_obstack_memory_used@@Base+0x2680>
  418934:	ldr	x8, [x19, #16]
  418938:	add	x9, x27, x20
  41893c:	add	x22, x27, #0x1
  418940:	add	x25, x25, x20
  418944:	cmp	x22, x9
  418948:	str	w21, [x8, x27, lsl #2]
  41894c:	b.ge	418974 <_obstack_memory_used@@Base+0x2540>  // b.tcont
  418950:	add	x8, x8, x27, lsl #2
  418954:	lsl	x9, x20, #2
  418958:	add	x0, x8, #0x4
  41895c:	sub	x2, x9, #0x4
  418960:	mov	w1, #0xff                  	// #255
  418964:	bl	4025b0 <memset@plt>
  418968:	subs	x28, x28, #0x1
  41896c:	add	x22, x22, #0x1
  418970:	b.ne	418968 <_obstack_memory_used@@Base+0x2534>  // b.any
  418974:	mov	w8, wzr
  418978:	mov	x27, x22
  41897c:	cbz	w8, 418874 <_obstack_memory_used@@Base+0x2440>
  418980:	cmp	w8, #0x8
  418984:	b.eq	418874 <_obstack_memory_used@@Base+0x2440>  // b.none
  418988:	cmp	w8, #0x7
  41898c:	b.ne	41899c <_obstack_memory_used@@Base+0x2568>  // b.any
  418990:	mov	w0, wzr
  418994:	stp	x27, x25, [x19, #48]
  418998:	b	4189a0 <_obstack_memory_used@@Base+0x256c>
  41899c:	mov	w0, #0xc                   	// #12
  4189a0:	ldp	x20, x19, [sp, #160]
  4189a4:	ldp	x22, x21, [sp, #144]
  4189a8:	ldp	x24, x23, [sp, #128]
  4189ac:	ldp	x26, x25, [sp, #112]
  4189b0:	ldp	x28, x27, [sp, #96]
  4189b4:	ldp	x29, x30, [sp, #80]
  4189b8:	add	sp, sp, #0xb0
  4189bc:	ret
  4189c0:	ldr	w9, [x19, #144]
  4189c4:	add	x24, sp, #0x8
  4189c8:	cmp	w9, #0x1
  4189cc:	b.lt	4188a4 <_obstack_memory_used@@Base+0x2470>  // b.tstop
  4189d0:	cmp	x2, #0x1
  4189d4:	b.lt	4188a4 <_obstack_memory_used@@Base+0x2470>  // b.tstop
  4189d8:	ldr	x11, [x19, #40]
  4189dc:	ldr	x12, [x19]
  4189e0:	ldrsw	x10, [x19, #144]
  4189e4:	mov	x9, xzr
  4189e8:	add	x11, x25, x11
  4189ec:	add	x11, x12, x11
  4189f0:	ldrb	w12, [x11, x9]
  4189f4:	add	x24, sp, #0x8
  4189f8:	ldrb	w12, [x8, x12]
  4189fc:	strb	w12, [x24, x9]
  418a00:	add	x9, x9, #0x1
  418a04:	cmp	x9, x10
  418a08:	b.ge	4188a4 <_obstack_memory_used@@Base+0x2470>  // b.tcont
  418a0c:	cmp	x2, x9
  418a10:	b.gt	4189f0 <_obstack_memory_used@@Base+0x25bc>
  418a14:	b	4188a4 <_obstack_memory_used@@Base+0x2470>
  418a18:	add	x8, x20, #0x1
  418a1c:	cmp	x8, #0x2
  418a20:	b.cc	418a3c <_obstack_memory_used@@Base+0x2608>  // b.lo, b.ul, b.last
  418a24:	cmn	x20, #0x2
  418a28:	b.ne	418bcc <_obstack_memory_used@@Base+0x2798>  // b.any
  418a2c:	ldr	x8, [x19, #64]
  418a30:	ldr	x9, [x19, #88]
  418a34:	cmp	x8, x9
  418a38:	b.lt	418bcc <_obstack_memory_used@@Base+0x2798>  // b.tstop
  418a3c:	ldr	x8, [x19, #40]
  418a40:	ldr	x10, [x19]
  418a44:	ldr	x9, [x19, #120]
  418a48:	add	x8, x8, x25
  418a4c:	ldrb	w8, [x10, x8]
  418a50:	cbnz	x9, 418be4 <_obstack_memory_used@@Base+0x27b0>
  418a54:	ldr	x9, [x19, #8]
  418a58:	strb	w8, [x9, x27]
  418a5c:	ldrb	w9, [x19, #140]
  418a60:	cbnz	w9, 418bec <_obstack_memory_used@@Base+0x27b8>
  418a64:	ldr	x10, [x19, #16]
  418a68:	add	x25, x25, #0x1
  418a6c:	add	x9, x27, #0x1
  418a70:	cmn	x20, #0x1
  418a74:	str	w8, [x10, x27, lsl #2]
  418a78:	b.eq	418bf8 <_obstack_memory_used@@Base+0x27c4>  // b.none
  418a7c:	mov	x27, x9
  418a80:	b	418874 <_obstack_memory_used@@Base+0x2440>
  418a84:	mov	x23, x0
  418a88:	cmn	x0, #0x1
  418a8c:	b.eq	418ad8 <_obstack_memory_used@@Base+0x26a4>  // b.none
  418a90:	ldr	x8, [x19, #64]
  418a94:	add	x24, x23, x27
  418a98:	cmp	x24, x8
  418a9c:	b.ls	418ae4 <_obstack_memory_used@@Base+0x26b0>  // b.plast
  418aa0:	ldur	x8, [x29, #-8]
  418aa4:	str	x8, [x22]
  418aa8:	mov	w8, #0x7                   	// #7
  418aac:	cbnz	w8, 41897c <_obstack_memory_used@@Base+0x2548>
  418ab0:	b	418928 <_obstack_memory_used@@Base+0x24f4>
  418ab4:	ldr	x8, [x19, #24]
  418ab8:	mov	x9, x25
  418abc:	mov	x10, x20
  418ac0:	add	x8, x8, x27, lsl #3
  418ac4:	str	x9, [x8], #8
  418ac8:	subs	x10, x10, #0x1
  418acc:	add	x9, x9, #0x1
  418ad0:	b.ne	418ac4 <_obstack_memory_used@@Base+0x2690>  // b.any
  418ad4:	b	418934 <_obstack_memory_used@@Base+0x2500>
  418ad8:	ldr	x8, [x19, #8]
  418adc:	mov	x1, x24
  418ae0:	b	418914 <_obstack_memory_used@@Base+0x24e0>
  418ae4:	mov	x22, x9
  418ae8:	ldr	x9, [x19, #24]
  418aec:	cbnz	x9, 418b00 <_obstack_memory_used@@Base+0x26cc>
  418af0:	lsl	x0, x8, #3
  418af4:	bl	4024e0 <malloc@plt>
  418af8:	str	x0, [x19, #24]
  418afc:	cbz	x0, 418bd8 <_obstack_memory_used@@Base+0x27a4>
  418b00:	ldrb	w8, [x19, #140]
  418b04:	cbnz	w8, 418b2c <_obstack_memory_used@@Base+0x26f8>
  418b08:	cbz	x27, 418b24 <_obstack_memory_used@@Base+0x26f0>
  418b0c:	ldr	x8, [x19, #24]
  418b10:	mov	x9, xzr
  418b14:	str	x9, [x8, x9, lsl #3]
  418b18:	add	x9, x9, #0x1
  418b1c:	cmp	x27, x9
  418b20:	b.ne	418b14 <_obstack_memory_used@@Base+0x26e0>  // b.any
  418b24:	mov	w8, #0x1                   	// #1
  418b28:	strb	w8, [x19, #140]
  418b2c:	ldr	x8, [x19, #8]
  418b30:	add	x1, sp, #0x8
  418b34:	mov	x2, x23
  418b38:	add	x0, x8, x27
  418b3c:	bl	402320 <memcpy@plt>
  418b40:	ldr	x8, [x19, #16]
  418b44:	cmp	x23, #0x2
  418b48:	mov	x13, x25
  418b4c:	str	w21, [x8, x27, lsl #2]
  418b50:	ldr	x9, [x19, #24]
  418b54:	str	x25, [x9, x27, lsl #3]
  418b58:	b.cc	418b8c <_obstack_memory_used@@Base+0x2758>  // b.lo, b.ul, b.last
  418b5c:	add	x8, x8, x27, lsl #2
  418b60:	add	x9, x9, x27, lsl #3
  418b64:	mov	w10, #0x1                   	// #1
  418b68:	mov	w11, #0xffffffff            	// #-1
  418b6c:	cmp	x10, x20
  418b70:	csel	x12, x10, x28, cc  // cc = lo, ul, last
  418b74:	add	x12, x12, x13
  418b78:	str	x12, [x9, x10, lsl #3]
  418b7c:	str	w11, [x8, x10, lsl #2]
  418b80:	add	x10, x10, #0x1
  418b84:	cmp	x23, x10
  418b88:	b.ne	418b6c <_obstack_memory_used@@Base+0x2738>  // b.any
  418b8c:	ldp	x8, x9, [x19, #88]
  418b90:	add	x8, x8, x22
  418b94:	cmp	x9, x13
  418b98:	str	x8, [x19, #88]
  418b9c:	b.le	418bac <_obstack_memory_used@@Base+0x2778>
  418ba0:	ldr	x9, [x19, #104]
  418ba4:	add	x9, x9, x22
  418ba8:	str	x9, [x19, #104]
  418bac:	ldr	x9, [x19, #64]
  418bb0:	add	x25, x20, x25
  418bb4:	mov	x27, x24
  418bb8:	cmp	x9, x8
  418bbc:	csel	x26, x8, x9, gt
  418bc0:	mov	w8, #0x8                   	// #8
  418bc4:	cbnz	w8, 41897c <_obstack_memory_used@@Base+0x2548>
  418bc8:	b	418928 <_obstack_memory_used@@Base+0x24f4>
  418bcc:	ldur	x8, [x29, #-8]
  418bd0:	str	x8, [x22]
  418bd4:	b	418990 <_obstack_memory_used@@Base+0x255c>
  418bd8:	mov	w8, #0x1                   	// #1
  418bdc:	cbnz	w8, 41897c <_obstack_memory_used@@Base+0x2548>
  418be0:	b	418928 <_obstack_memory_used@@Base+0x24f4>
  418be4:	ldrb	w8, [x9, x8]
  418be8:	b	418a54 <_obstack_memory_used@@Base+0x2620>
  418bec:	ldr	x9, [x19, #24]
  418bf0:	str	x25, [x9, x27, lsl #3]
  418bf4:	b	418a64 <_obstack_memory_used@@Base+0x2630>
  418bf8:	ldur	x8, [x29, #-8]
  418bfc:	mov	x27, x9
  418c00:	str	x8, [x22]
  418c04:	b	418874 <_obstack_memory_used@@Base+0x2440>
  418c08:	stp	x29, x30, [sp, #-48]!
  418c0c:	stp	x20, x19, [sp, #32]
  418c10:	ldr	x8, [x0, #64]
  418c14:	ldr	x9, [x0, #88]
  418c18:	ldr	x20, [x0, #48]
  418c1c:	str	x21, [sp, #16]
  418c20:	mov	x19, x0
  418c24:	cmp	x8, x9
  418c28:	csel	x21, x9, x8, gt
  418c2c:	mov	x29, sp
  418c30:	cmp	x20, x21
  418c34:	b.ge	418c74 <_obstack_memory_used@@Base+0x2840>  // b.tcont
  418c38:	ldr	x8, [x19]
  418c3c:	ldr	x9, [x19, #40]
  418c40:	add	x9, x8, x9
  418c44:	ldr	x8, [x19, #120]
  418c48:	ldrb	w0, [x9, x20]
  418c4c:	cbnz	x8, 418c6c <_obstack_memory_used@@Base+0x2838>
  418c50:	bl	4024f0 <toupper@plt>
  418c54:	ldr	x8, [x19, #8]
  418c58:	strb	w0, [x8, x20]
  418c5c:	add	x20, x20, #0x1
  418c60:	cmp	x20, x21
  418c64:	b.lt	418c38 <_obstack_memory_used@@Base+0x2804>  // b.tstop
  418c68:	b	418c74 <_obstack_memory_used@@Base+0x2840>
  418c6c:	ldrb	w0, [x8, x0]
  418c70:	b	418c50 <_obstack_memory_used@@Base+0x281c>
  418c74:	stp	x20, x20, [x19, #48]
  418c78:	ldp	x20, x19, [sp, #32]
  418c7c:	ldr	x21, [sp, #16]
  418c80:	ldp	x29, x30, [sp], #48
  418c84:	ret
  418c88:	sub	sp, sp, #0x90
  418c8c:	stp	x29, x30, [sp, #80]
  418c90:	stp	x24, x23, [sp, #96]
  418c94:	stp	x22, x21, [sp, #112]
  418c98:	stp	x20, x19, [sp, #128]
  418c9c:	ldr	x8, [x0, #64]
  418ca0:	ldr	x9, [x0, #88]
  418ca4:	ldr	x23, [x0, #48]
  418ca8:	mov	x19, x0
  418cac:	add	x20, x0, #0x20
  418cb0:	cmp	x8, x9
  418cb4:	csel	x22, x9, x8, gt
  418cb8:	add	x29, sp, #0x50
  418cbc:	b	418ccc <_obstack_memory_used@@Base+0x2898>
  418cc0:	mov	w8, #0x1                   	// #1
  418cc4:	mov	x23, x24
  418cc8:	tbz	w8, #0, 418e10 <_obstack_memory_used@@Base+0x29dc>
  418ccc:	subs	x2, x22, x23
  418cd0:	b.le	418e10 <_obstack_memory_used@@Base+0x29dc>
  418cd4:	ldr	x8, [x19, #120]
  418cd8:	ldr	x24, [x19, #32]
  418cdc:	cbnz	x8, 418da0 <_obstack_memory_used@@Base+0x296c>
  418ce0:	ldr	x8, [x19]
  418ce4:	ldr	x9, [x19, #40]
  418ce8:	add	x8, x8, x9
  418cec:	add	x1, x8, x23
  418cf0:	add	x0, sp, #0xc
  418cf4:	mov	x3, x20
  418cf8:	bl	41609c <wcrtomb@plt+0x136dc>
  418cfc:	add	x8, x0, #0x1
  418d00:	cmp	x8, #0x2
  418d04:	b.cc	418d34 <_obstack_memory_used@@Base+0x2900>  // b.lo, b.ul, b.last
  418d08:	mov	x21, x0
  418d0c:	cmn	x0, #0x2
  418d10:	b.ne	418d58 <_obstack_memory_used@@Base+0x2924>  // b.any
  418d14:	ldr	x8, [x19, #64]
  418d18:	ldr	x9, [x19, #88]
  418d1c:	cmp	x8, x9
  418d20:	b.ge	418d34 <_obstack_memory_used@@Base+0x2900>  // b.tcont
  418d24:	mov	w8, wzr
  418d28:	str	x24, [x20]
  418d2c:	tbnz	w8, #0, 418ccc <_obstack_memory_used@@Base+0x2898>
  418d30:	b	418e10 <_obstack_memory_used@@Base+0x29dc>
  418d34:	ldr	x8, [x19, #40]
  418d38:	ldr	x9, [x19]
  418d3c:	add	x8, x8, x23
  418d40:	ldrb	w8, [x9, x8]
  418d44:	str	w8, [sp, #12]
  418d48:	ldr	x9, [x19, #120]
  418d4c:	cbnz	x9, 418e04 <_obstack_memory_used@@Base+0x29d0>
  418d50:	mov	w21, #0x1                   	// #1
  418d54:	str	x24, [x20]
  418d58:	ldr	w9, [sp, #12]
  418d5c:	ldr	x8, [x19, #16]
  418d60:	add	x10, x21, x23
  418d64:	add	x24, x23, #0x1
  418d68:	cmp	x24, x10
  418d6c:	str	w9, [x8, x23, lsl #2]
  418d70:	b.ge	418cc0 <_obstack_memory_used@@Base+0x288c>  // b.tcont
  418d74:	add	x8, x8, x23, lsl #2
  418d78:	lsl	x9, x21, #2
  418d7c:	add	x0, x8, #0x4
  418d80:	sub	x2, x9, #0x4
  418d84:	mov	w1, #0xff                  	// #255
  418d88:	bl	4025b0 <memset@plt>
  418d8c:	sub	x8, x21, #0x1
  418d90:	subs	x8, x8, #0x1
  418d94:	add	x24, x24, #0x1
  418d98:	b.ne	418d90 <_obstack_memory_used@@Base+0x295c>  // b.any
  418d9c:	b	418cc0 <_obstack_memory_used@@Base+0x288c>
  418da0:	ldr	w8, [x19, #144]
  418da4:	add	x1, sp, #0x10
  418da8:	cmp	w8, #0x1
  418dac:	b.lt	418cf0 <_obstack_memory_used@@Base+0x28bc>  // b.tstop
  418db0:	cmp	x2, #0x1
  418db4:	b.lt	418cf0 <_obstack_memory_used@@Base+0x28bc>  // b.tstop
  418db8:	mov	x8, xzr
  418dbc:	ldr	x9, [x19, #40]
  418dc0:	ldp	x10, x12, [x19]
  418dc4:	ldr	x11, [x19, #120]
  418dc8:	add	x1, sp, #0x10
  418dcc:	add	x9, x10, x9
  418dd0:	add	x9, x9, x23
  418dd4:	ldrb	w9, [x9, x8]
  418dd8:	add	x10, x12, x23
  418ddc:	ldrb	w9, [x11, x9]
  418de0:	strb	w9, [x10, x8]
  418de4:	strb	w9, [x1, x8]
  418de8:	ldr	w9, [x19, #144]
  418dec:	add	x8, x8, #0x1
  418df0:	cmp	w9, w8
  418df4:	b.le	418cf0 <_obstack_memory_used@@Base+0x28bc>
  418df8:	cmp	x2, x8
  418dfc:	b.gt	418dbc <_obstack_memory_used@@Base+0x2988>
  418e00:	b	418cf0 <_obstack_memory_used@@Base+0x28bc>
  418e04:	ldrb	w8, [x9, x8]
  418e08:	str	w8, [sp, #12]
  418e0c:	b	418d50 <_obstack_memory_used@@Base+0x291c>
  418e10:	stp	x23, x23, [x19, #48]
  418e14:	ldp	x20, x19, [sp, #128]
  418e18:	ldp	x22, x21, [sp, #112]
  418e1c:	ldp	x24, x23, [sp, #96]
  418e20:	ldp	x29, x30, [sp, #80]
  418e24:	add	sp, sp, #0x90
  418e28:	ret
  418e2c:	ldr	x9, [x0, #64]
  418e30:	ldr	x10, [x0, #88]
  418e34:	ldr	x8, [x0, #48]
  418e38:	cmp	x9, x10
  418e3c:	csel	x9, x10, x9, gt
  418e40:	cmp	x8, x9
  418e44:	b.ge	418e70 <_obstack_memory_used@@Base+0x2a3c>  // b.tcont
  418e48:	ldr	x10, [x0, #40]
  418e4c:	ldp	x11, x13, [x0]
  418e50:	ldr	x12, [x0, #120]
  418e54:	add	x10, x11, x10
  418e58:	ldrb	w10, [x10, x8]
  418e5c:	ldrb	w10, [x12, x10]
  418e60:	strb	w10, [x13, x8]
  418e64:	add	x8, x8, #0x1
  418e68:	cmp	x8, x9
  418e6c:	b.lt	418e48 <_obstack_memory_used@@Base+0x2a14>  // b.tstop
  418e70:	stp	x8, x8, [x0, #48]
  418e74:	ret
  418e78:	stp	x29, x30, [sp, #-32]!
  418e7c:	str	x19, [sp, #16]
  418e80:	mov	x29, sp
  418e84:	mov	x19, x1
  418e88:	bl	419020 <_obstack_memory_used@@Base+0x2bec>
  418e8c:	ldr	x8, [x19, #72]
  418e90:	add	x8, x8, w0, sxtw
  418e94:	str	x8, [x19, #72]
  418e98:	ldr	x19, [sp, #16]
  418e9c:	ldp	x29, x30, [sp], #32
  418ea0:	ret
  418ea4:	sub	sp, sp, #0x70
  418ea8:	stp	x29, x30, [sp, #16]
  418eac:	stp	x28, x27, [sp, #32]
  418eb0:	stp	x26, x25, [sp, #48]
  418eb4:	stp	x24, x23, [sp, #64]
  418eb8:	stp	x22, x21, [sp, #80]
  418ebc:	stp	x20, x19, [sp, #96]
  418ec0:	ldr	x25, [x1]
  418ec4:	add	x29, sp, #0x10
  418ec8:	mov	x20, x5
  418ecc:	mov	x21, x4
  418ed0:	ldr	x8, [x25, #168]
  418ed4:	mov	x22, x3
  418ed8:	mov	x23, x2
  418edc:	mov	x24, x1
  418ee0:	str	x8, [sp, #8]
  418ee4:	mov	x26, x0
  418ee8:	bl	41961c <_obstack_memory_used@@Base+0x31e8>
  418eec:	mov	x19, x0
  418ef0:	cbnz	x0, 418efc <_obstack_memory_used@@Base+0x2ac8>
  418ef4:	ldr	w8, [x20]
  418ef8:	cbnz	w8, 418fe4 <_obstack_memory_used@@Base+0x2bb0>
  418efc:	orr	x27, x22, #0x800000
  418f00:	b	418f20 <_obstack_memory_used@@Base+0x2aec>
  418f04:	mov	x2, xzr
  418f08:	mov	w3, #0xa                   	// #10
  418f0c:	mov	x0, x25
  418f10:	mov	x1, x19
  418f14:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  418f18:	mov	x19, x0
  418f1c:	cbz	x0, 418fa0 <_obstack_memory_used@@Base+0x2b6c>
  418f20:	ldrb	w8, [x23, #8]
  418f24:	cmp	w8, #0xa
  418f28:	b.ne	418fa8 <_obstack_memory_used@@Base+0x2b74>  // b.any
  418f2c:	mov	x0, x23
  418f30:	mov	x1, x26
  418f34:	mov	x2, x27
  418f38:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  418f3c:	ldrb	w8, [x23, #8]
  418f40:	orr	w9, w8, #0x8
  418f44:	cmp	w9, #0xa
  418f48:	b.eq	418f04 <_obstack_memory_used@@Base+0x2ad0>  // b.none
  418f4c:	cbz	x21, 418f58 <_obstack_memory_used@@Base+0x2b24>
  418f50:	cmp	w8, #0x9
  418f54:	b.eq	418f04 <_obstack_memory_used@@Base+0x2ad0>  // b.none
  418f58:	ldr	x8, [sp, #8]
  418f5c:	ldr	x28, [x25, #168]
  418f60:	mov	x0, x26
  418f64:	mov	x1, x24
  418f68:	mov	x2, x23
  418f6c:	mov	x3, x22
  418f70:	mov	x4, x21
  418f74:	mov	x5, x20
  418f78:	str	x8, [x25, #168]
  418f7c:	bl	41961c <_obstack_memory_used@@Base+0x31e8>
  418f80:	mov	x2, x0
  418f84:	cbnz	x0, 418f90 <_obstack_memory_used@@Base+0x2b5c>
  418f88:	ldr	w8, [x20]
  418f8c:	cbnz	w8, 418fcc <_obstack_memory_used@@Base+0x2b98>
  418f90:	ldr	x8, [x25, #168]
  418f94:	orr	x8, x8, x28
  418f98:	str	x8, [x25, #168]
  418f9c:	b	418f08 <_obstack_memory_used@@Base+0x2ad4>
  418fa0:	mov	w8, #0xc                   	// #12
  418fa4:	str	w8, [x20]
  418fa8:	mov	x0, x19
  418fac:	ldp	x20, x19, [sp, #96]
  418fb0:	ldp	x22, x21, [sp, #80]
  418fb4:	ldp	x24, x23, [sp, #64]
  418fb8:	ldp	x26, x25, [sp, #48]
  418fbc:	ldp	x28, x27, [sp, #32]
  418fc0:	ldp	x29, x30, [sp, #16]
  418fc4:	add	sp, sp, #0x70
  418fc8:	ret
  418fcc:	cbz	x19, 418fa8 <_obstack_memory_used@@Base+0x2b74>
  418fd0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2bcc>
  418fd4:	add	x1, x1, #0x808
  418fd8:	mov	x0, x19
  418fdc:	mov	x2, xzr
  418fe0:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  418fe4:	mov	x19, xzr
  418fe8:	b	418fa8 <_obstack_memory_used@@Base+0x2b74>
  418fec:	sub	sp, sp, #0x20
  418ff0:	ldr	w8, [sp, #8]
  418ff4:	stp	x29, x30, [sp, #16]
  418ff8:	add	x29, sp, #0x10
  418ffc:	str	xzr, [sp]
  419000:	and	w8, w8, #0xff800000
  419004:	bfxil	w8, w3, #0, #8
  419008:	mov	x3, sp
  41900c:	str	w8, [sp, #8]
  419010:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419014:	ldp	x29, x30, [sp, #16]
  419018:	add	sp, sp, #0x20
  41901c:	ret
  419020:	sub	sp, sp, #0x60
  419024:	stp	x29, x30, [sp, #16]
  419028:	stp	x26, x25, [sp, #32]
  41902c:	stp	x24, x23, [sp, #48]
  419030:	stp	x22, x21, [sp, #64]
  419034:	stp	x20, x19, [sp, #80]
  419038:	ldr	x9, [x1, #104]
  41903c:	ldr	x8, [x1, #72]
  419040:	mov	x19, x0
  419044:	add	x29, sp, #0x10
  419048:	cmp	x9, x8
  41904c:	b.le	419128 <_obstack_memory_used@@Base+0x2cf4>
  419050:	ldr	x9, [x1, #8]
  419054:	mov	x23, x19
  419058:	mov	w26, #0xff00                	// #65280
  41905c:	mov	x20, x2
  419060:	ldrb	w24, [x9, x8]
  419064:	mov	x21, x1
  419068:	movk	w26, #0xff9f, lsl #16
  41906c:	strb	w24, [x23], #8
  419070:	ldr	w25, [x23]
  419074:	and	w8, w25, #0xff9fffff
  419078:	str	w8, [x23]
  41907c:	ldr	w8, [x1, #144]
  419080:	cmp	w8, #0x2
  419084:	b.lt	4190a8 <_obstack_memory_used@@Base+0x2c74>  // b.tstop
  419088:	ldr	x8, [x21, #72]
  41908c:	ldr	x9, [x21, #48]
  419090:	cmp	x8, x9
  419094:	b.eq	4190a8 <_obstack_memory_used@@Base+0x2c74>  // b.none
  419098:	ldr	x9, [x21, #16]
  41909c:	ldr	w8, [x9, x8, lsl #2]
  4190a0:	cmn	w8, #0x1
  4190a4:	b.eq	419270 <_obstack_memory_used@@Base+0x2e3c>  // b.none
  4190a8:	cmp	w24, #0x5c
  4190ac:	b.ne	419138 <_obstack_memory_used@@Base+0x2d04>  // b.any
  4190b0:	ldr	x8, [x21, #72]
  4190b4:	ldr	x9, [x21, #88]
  4190b8:	add	x8, x8, #0x1
  4190bc:	cmp	x8, x9
  4190c0:	b.ge	419188 <_obstack_memory_used@@Base+0x2d54>  // b.tcont
  4190c4:	mov	x0, x21
  4190c8:	bl	419544 <_obstack_memory_used@@Base+0x3110>
  4190cc:	and	w8, w25, w26
  4190d0:	orr	w24, w8, #0x1
  4190d4:	strb	w0, [x19]
  4190d8:	str	w24, [x19, #8]
  4190dc:	ldr	w8, [x21, #144]
  4190e0:	mov	w22, w0
  4190e4:	cmp	w8, #0x2
  4190e8:	b.lt	4191f4 <_obstack_memory_used@@Base+0x2dc0>  // b.tstop
  4190ec:	ldr	x8, [x21, #72]
  4190f0:	mov	x0, x21
  4190f4:	add	x1, x8, #0x1
  4190f8:	bl	4195f8 <_obstack_memory_used@@Base+0x31c4>
  4190fc:	mov	w21, w0
  419100:	bl	402860 <iswalnum@plt>
  419104:	ldr	w9, [x23]
  419108:	cmp	w0, #0x0
  41910c:	mov	w8, #0x5f                  	// #95
  419110:	ccmp	w21, w8, #0x4, eq  // eq = none
  419114:	mov	w8, #0x400000              	// #4194304
  419118:	csel	w8, w8, wzr, eq  // eq = none
  41911c:	and	w9, w9, #0xffbfffff
  419120:	orr	w8, w8, w9
  419124:	b	41921c <_obstack_memory_used@@Base+0x2de8>
  419128:	mov	w8, #0x2                   	// #2
  41912c:	mov	w0, wzr
  419130:	strb	w8, [x19, #8]
  419134:	b	41939c <_obstack_memory_used@@Base+0x2f68>
  419138:	and	w8, w25, w26
  41913c:	orr	w22, w8, #0x1
  419140:	str	w22, [x23]
  419144:	ldr	w8, [x21, #144]
  419148:	cmp	w8, #0x2
  41914c:	b.lt	419194 <_obstack_memory_used@@Base+0x2d60>  // b.tstop
  419150:	ldr	x1, [x21, #72]
  419154:	mov	x0, x21
  419158:	bl	4195f8 <_obstack_memory_used@@Base+0x31c4>
  41915c:	mov	w22, w0
  419160:	bl	402860 <iswalnum@plt>
  419164:	ldr	w9, [x23]
  419168:	cmp	w0, #0x0
  41916c:	mov	w8, #0x5f                  	// #95
  419170:	ccmp	w22, w8, #0x4, eq  // eq = none
  419174:	mov	w8, #0x400000              	// #4194304
  419178:	csel	w8, w8, wzr, eq  // eq = none
  41917c:	and	w9, w9, #0xffbfffff
  419180:	orr	w8, w8, w9
  419184:	b	4191c0 <_obstack_memory_used@@Base+0x2d8c>
  419188:	and	w8, w25, w26
  41918c:	mov	w9, #0x24                  	// #36
  419190:	b	41927c <_obstack_memory_used@@Base+0x2e48>
  419194:	bl	402760 <__ctype_b_loc@plt>
  419198:	ldr	x8, [x0]
  41919c:	cmp	w24, #0x5f
  4191a0:	cset	w9, eq  // eq = none
  4191a4:	ldrh	w8, [x8, x24, lsl #1]
  4191a8:	and	w8, w8, #0x8
  4191ac:	orr	w8, w9, w8, lsr #3
  4191b0:	cmp	w8, #0x0
  4191b4:	mov	w8, #0x400000              	// #4194304
  4191b8:	csel	w8, w8, wzr, ne  // ne = any
  4191bc:	orr	w8, w8, w22
  4191c0:	sub	w9, w24, #0xa
  4191c4:	cmp	w9, #0x73
  4191c8:	mov	w0, #0x1                   	// #1
  4191cc:	str	w8, [x23]
  4191d0:	b.hi	41939c <_obstack_memory_used@@Base+0x2f68>  // b.pmore
  4191d4:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4191d8:	add	x10, x10, #0x6a6
  4191dc:	adr	x11, 4191ec <_obstack_memory_used@@Base+0x2db8>
  4191e0:	ldrb	w12, [x10, x9]
  4191e4:	add	x11, x11, x12, lsl #2
  4191e8:	br	x11
  4191ec:	tbnz	w20, #11, 41938c <_obstack_memory_used@@Base+0x2f58>
  4191f0:	b	419398 <_obstack_memory_used@@Base+0x2f64>
  4191f4:	bl	402760 <__ctype_b_loc@plt>
  4191f8:	ldr	x8, [x0]
  4191fc:	and	x9, x22, #0xff
  419200:	ldrh	w8, [x8, x9, lsl #1]
  419204:	and	w9, w22, #0xff
  419208:	cmp	w9, #0x5f
  41920c:	cset	w9, eq  // eq = none
  419210:	ubfx	w8, w8, #3, #1
  419214:	orr	w8, w8, w9
  419218:	orr	w8, w24, w8, lsl #22
  41921c:	and	w9, w22, #0xff
  419220:	sub	w9, w9, #0x27
  419224:	cmp	w9, #0x56
  419228:	mov	w0, #0x2                   	// #2
  41922c:	str	w8, [x23]
  419230:	b.hi	41939c <_obstack_memory_used@@Base+0x2f68>  // b.pmore
  419234:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  419238:	add	x10, x10, #0x71a
  41923c:	adr	x11, 41924c <_obstack_memory_used@@Base+0x2e18>
  419240:	ldrb	w12, [x10, x9]
  419244:	add	x11, x11, x12, lsl #2
  419248:	br	x11
  41924c:	tbnz	w20, #14, 41953c <_obstack_memory_used@@Base+0x3108>
  419250:	and	x9, x22, #0xff
  419254:	and	w8, w8, #0xffffff00
  419258:	orr	w8, w8, #0x4
  41925c:	sub	x9, x9, #0x31
  419260:	str	w8, [x19, #8]
  419264:	str	x9, [x19]
  419268:	mov	w0, #0x2                   	// #2
  41926c:	b	41939c <_obstack_memory_used@@Base+0x2f68>
  419270:	mov	w9, #0x1                   	// #1
  419274:	and	w8, w25, w26
  419278:	movk	w9, #0x20, lsl #16
  41927c:	orr	w8, w8, w9
  419280:	b	419394 <_obstack_memory_used@@Base+0x2f60>
  419284:	tbnz	w20, #3, 4192cc <_obstack_memory_used@@Base+0x2e98>
  419288:	ldr	x8, [x21, #72]
  41928c:	ldr	x9, [x21, #88]
  419290:	add	x8, x8, #0x1
  419294:	cmp	x8, x9
  419298:	b.eq	4192cc <_obstack_memory_used@@Base+0x2e98>  // b.none
  41929c:	mov	x0, sp
  4192a0:	mov	x1, x21
  4192a4:	mov	x2, x20
  4192a8:	str	x8, [x21, #72]
  4192ac:	bl	419020 <_obstack_memory_used@@Base+0x2bec>
  4192b0:	ldr	x8, [x21, #72]
  4192b4:	sub	x8, x8, #0x1
  4192b8:	str	x8, [x21, #72]
  4192bc:	ldrb	w8, [sp, #8]
  4192c0:	sub	w8, w8, #0x9
  4192c4:	cmp	w8, #0x1
  4192c8:	b.hi	419398 <_obstack_memory_used@@Base+0x2f64>  // b.pmore
  4192cc:	mov	w8, #0xc                   	// #12
  4192d0:	mov	w9, #0x20                  	// #32
  4192d4:	strb	w8, [x19, #8]
  4192d8:	str	w9, [x19]
  4192dc:	b	419398 <_obstack_memory_used@@Base+0x2f64>
  4192e0:	tbz	w20, #13, 419398 <_obstack_memory_used@@Base+0x2f64>
  4192e4:	and	w8, w8, #0xffffff00
  4192e8:	orr	w8, w8, #0x8
  4192ec:	b	419394 <_obstack_memory_used@@Base+0x2f60>
  4192f0:	tbz	w20, #13, 419398 <_obstack_memory_used@@Base+0x2f64>
  4192f4:	mov	w9, #0x9                   	// #9
  4192f8:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  4192fc:	mov	w9, #0xb                   	// #11
  419300:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  419304:	mov	w9, #0x402                 	// #1026
  419308:	tst	x20, x9
  41930c:	b.ne	419398 <_obstack_memory_used@@Base+0x2f64>  // b.any
  419310:	mov	w9, #0x12                  	// #18
  419314:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  419318:	mov	w9, #0x5                   	// #5
  41931c:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  419320:	mov	w9, #0x402                 	// #1026
  419324:	tst	x20, x9
  419328:	b.ne	419398 <_obstack_memory_used@@Base+0x2f64>  // b.any
  41932c:	mov	w9, #0x13                  	// #19
  419330:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  419334:	mov	w9, #0x14                  	// #20
  419338:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  41933c:	mov	w9, #0x8                   	// #8
  419340:	movk	w9, #0x80, lsl #16
  419344:	tst	x20, x9
  419348:	b.eq	4193d4 <_obstack_memory_used@@Base+0x2fa0>  // b.none
  41934c:	and	w8, w8, #0xffffff00
  419350:	mov	w9, #0x10                  	// #16
  419354:	orr	w8, w8, #0xc
  419358:	str	w9, [x19]
  41935c:	str	w8, [x19, #8]
  419360:	b	419398 <_obstack_memory_used@@Base+0x2f64>
  419364:	mvn	w9, w20
  419368:	mov	w10, #0x1200                	// #4608
  41936c:	tst	x9, x10
  419370:	b.ne	419398 <_obstack_memory_used@@Base+0x2f64>  // b.any
  419374:	mov	w9, #0x17                  	// #23
  419378:	b	419390 <_obstack_memory_used@@Base+0x2f5c>
  41937c:	mov	w9, #0x8400                	// #33792
  419380:	and	x9, x20, x9
  419384:	cmp	x9, #0x8, lsl #12
  419388:	b.ne	419398 <_obstack_memory_used@@Base+0x2f64>  // b.any
  41938c:	mov	w9, #0xa                   	// #10
  419390:	bfxil	w8, w9, #0, #8
  419394:	str	w8, [x23]
  419398:	mov	w0, #0x1                   	// #1
  41939c:	ldp	x20, x19, [sp, #80]
  4193a0:	ldp	x22, x21, [sp, #64]
  4193a4:	ldp	x24, x23, [sp, #48]
  4193a8:	ldp	x26, x25, [sp, #32]
  4193ac:	ldp	x29, x30, [sp, #16]
  4193b0:	add	sp, sp, #0x60
  4193b4:	ret
  4193b8:	mvn	w9, w20
  4193bc:	mov	w10, #0x1200                	// #4608
  4193c0:	tst	x9, x10
  4193c4:	b.ne	419398 <_obstack_memory_used@@Base+0x2f64>  // b.any
  4193c8:	and	w8, w8, #0xffffff00
  4193cc:	orr	w8, w8, #0x18
  4193d0:	b	419394 <_obstack_memory_used@@Base+0x2f60>
  4193d4:	ldr	x9, [x21, #72]
  4193d8:	cbz	x9, 41934c <_obstack_memory_used@@Base+0x2f18>
  4193dc:	tbz	w20, #11, 419398 <_obstack_memory_used@@Base+0x2f64>
  4193e0:	ldr	x10, [x21, #8]
  4193e4:	add	x9, x9, x10
  4193e8:	ldurb	w9, [x9, #-1]
  4193ec:	cmp	w9, #0xa
  4193f0:	b.eq	41934c <_obstack_memory_used@@Base+0x2f18>  // b.none
  4193f4:	b	419398 <_obstack_memory_used@@Base+0x2f64>
  4193f8:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  4193fc:	and	w8, w8, #0xffffff00
  419400:	mov	w9, #0x80                  	// #128
  419404:	b	4194b8 <_obstack_memory_used@@Base+0x3084>
  419408:	tbnz	w20, #13, 41953c <_obstack_memory_used@@Base+0x3108>
  41940c:	and	w8, w8, #0xffffff00
  419410:	orr	w8, w8, #0x8
  419414:	b	419514 <_obstack_memory_used@@Base+0x30e0>
  419418:	tbnz	w20, #13, 41953c <_obstack_memory_used@@Base+0x3108>
  41941c:	mov	w9, #0x9                   	// #9
  419420:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  419424:	mov	w9, #0x402                 	// #1026
  419428:	and	x9, x20, x9
  41942c:	cmp	x9, #0x2
  419430:	b.ne	41953c <_obstack_memory_used@@Base+0x3108>  // b.any
  419434:	mov	w9, #0x12                  	// #18
  419438:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  41943c:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  419440:	and	w8, w8, #0xffffff00
  419444:	mov	w9, #0x6                   	// #6
  419448:	b	4194b8 <_obstack_memory_used@@Base+0x3084>
  41944c:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  419450:	and	w8, w8, #0xffffff00
  419454:	mov	w9, #0x9                   	// #9
  419458:	b	4194b8 <_obstack_memory_used@@Base+0x3084>
  41945c:	mov	w9, #0x402                 	// #1026
  419460:	and	x9, x20, x9
  419464:	cmp	x9, #0x2
  419468:	b.ne	41953c <_obstack_memory_used@@Base+0x3108>  // b.any
  41946c:	mov	w9, #0x13                  	// #19
  419470:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  419474:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  419478:	and	w8, w8, #0xffffff00
  41947c:	mov	w9, #0x200                 	// #512
  419480:	b	4194b8 <_obstack_memory_used@@Base+0x3084>
  419484:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  419488:	mov	w9, #0x23                  	// #35
  41948c:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  419490:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  419494:	mov	w9, #0x21                  	// #33
  419498:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  41949c:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  4194a0:	and	w8, w8, #0xffffff00
  4194a4:	mov	w9, #0x40                  	// #64
  4194a8:	b	4194b8 <_obstack_memory_used@@Base+0x3084>
  4194ac:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  4194b0:	and	w8, w8, #0xffffff00
  4194b4:	mov	w9, #0x100                 	// #256
  4194b8:	orr	w8, w8, #0xc
  4194bc:	str	w9, [x19]
  4194c0:	str	w8, [x19, #8]
  4194c4:	mov	w0, #0x2                   	// #2
  4194c8:	b	41939c <_obstack_memory_used@@Base+0x2f68>
  4194cc:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  4194d0:	mov	w9, #0x22                  	// #34
  4194d4:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  4194d8:	tbnz	w20, #19, 41953c <_obstack_memory_used@@Base+0x3108>
  4194dc:	and	w8, w8, #0xffffff00
  4194e0:	orr	w8, w8, #0x20
  4194e4:	b	419514 <_obstack_memory_used@@Base+0x30e0>
  4194e8:	mov	w9, #0x1200                	// #4608
  4194ec:	and	x9, x20, x9
  4194f0:	cmp	x9, #0x200
  4194f4:	b.ne	41953c <_obstack_memory_used@@Base+0x3108>  // b.any
  4194f8:	mov	w9, #0x17                  	// #23
  4194fc:	b	419510 <_obstack_memory_used@@Base+0x30dc>
  419500:	mov	w9, #0x8400                	// #33792
  419504:	tst	x20, x9
  419508:	b.ne	41953c <_obstack_memory_used@@Base+0x3108>  // b.any
  41950c:	mov	w9, #0xa                   	// #10
  419510:	bfxil	w8, w9, #0, #8
  419514:	str	w8, [x23]
  419518:	mov	w0, #0x2                   	// #2
  41951c:	b	41939c <_obstack_memory_used@@Base+0x2f68>
  419520:	mov	w9, #0x1200                	// #4608
  419524:	and	x9, x20, x9
  419528:	cmp	x9, #0x200
  41952c:	b.ne	41953c <_obstack_memory_used@@Base+0x3108>  // b.any
  419530:	and	w8, w8, #0xffffff00
  419534:	orr	w8, w8, #0x18
  419538:	b	419514 <_obstack_memory_used@@Base+0x30e0>
  41953c:	mov	w0, #0x2                   	// #2
  419540:	b	41939c <_obstack_memory_used@@Base+0x2f68>
  419544:	ldrb	w8, [x0, #139]
  419548:	cbnz	w8, 419568 <_obstack_memory_used@@Base+0x3134>
  41954c:	ldr	x8, [x0, #8]
  419550:	ldr	x9, [x0, #72]
  419554:	add	x8, x9, x8
  419558:	add	x8, x8, #0x1
  41955c:	ldrb	w8, [x8]
  419560:	mov	w0, w8
  419564:	ret
  419568:	ldr	w8, [x0, #144]
  41956c:	cmp	w8, #0x2
  419570:	b.lt	4195a8 <_obstack_memory_used@@Base+0x3174>  // b.tstop
  419574:	ldr	x10, [x0, #72]
  419578:	ldr	x9, [x0, #16]
  41957c:	add	x8, x10, #0x1
  419580:	ldr	w11, [x9, x8, lsl #2]
  419584:	cmn	w11, #0x1
  419588:	b.eq	4195ec <_obstack_memory_used@@Base+0x31b8>  // b.none
  41958c:	ldr	x11, [x0, #48]
  419590:	add	x10, x10, #0x2
  419594:	cmp	x11, x10
  419598:	b.eq	4195a8 <_obstack_memory_used@@Base+0x3174>  // b.none
  41959c:	ldr	w9, [x9, x10, lsl #2]
  4195a0:	cmn	w9, #0x1
  4195a4:	b.eq	4195ec <_obstack_memory_used@@Base+0x31b8>  // b.none
  4195a8:	ldr	x8, [x0, #72]
  4195ac:	ldrb	w10, [x0, #140]
  4195b0:	add	x9, x8, #0x1
  4195b4:	cbz	w10, 4195c4 <_obstack_memory_used@@Base+0x3190>
  4195b8:	ldr	x8, [x0, #24]
  4195bc:	ldr	x8, [x8, x9, lsl #3]
  4195c0:	b	4195c8 <_obstack_memory_used@@Base+0x3194>
  4195c4:	mov	x8, x9
  4195c8:	ldr	x11, [x0, #40]
  4195cc:	ldr	x12, [x0]
  4195d0:	add	x8, x11, x8
  4195d4:	ldrsb	w8, [x12, x8]
  4195d8:	cbz	w10, 419560 <_obstack_memory_used@@Base+0x312c>
  4195dc:	tbz	w8, #31, 419560 <_obstack_memory_used@@Base+0x312c>
  4195e0:	ldr	x8, [x0, #8]
  4195e4:	add	x8, x8, x9
  4195e8:	b	41955c <_obstack_memory_used@@Base+0x3128>
  4195ec:	ldr	x9, [x0, #8]
  4195f0:	add	x8, x9, x8
  4195f4:	b	41955c <_obstack_memory_used@@Base+0x3128>
  4195f8:	ldr	w8, [x0, #144]
  4195fc:	cmp	w8, #0x1
  419600:	b.ne	419610 <_obstack_memory_used@@Base+0x31dc>  // b.any
  419604:	ldr	x8, [x0, #8]
  419608:	ldrb	w0, [x8, x1]
  41960c:	ret
  419610:	ldr	x8, [x0, #16]
  419614:	ldr	w0, [x8, x1, lsl #2]
  419618:	ret
  41961c:	stp	x29, x30, [sp, #-96]!
  419620:	stp	x28, x27, [sp, #16]
  419624:	stp	x26, x25, [sp, #32]
  419628:	stp	x24, x23, [sp, #48]
  41962c:	stp	x22, x21, [sp, #64]
  419630:	stp	x20, x19, [sp, #80]
  419634:	ldr	x25, [x1]
  419638:	mov	x29, sp
  41963c:	mov	x20, x5
  419640:	mov	x21, x4
  419644:	mov	x22, x3
  419648:	mov	x23, x2
  41964c:	mov	x24, x1
  419650:	mov	x26, x0
  419654:	bl	419824 <_obstack_memory_used@@Base+0x33f0>
  419658:	mov	x19, x0
  41965c:	cbnz	x0, 419668 <_obstack_memory_used@@Base+0x3234>
  419660:	ldr	w8, [x20]
  419664:	cbnz	w8, 419724 <_obstack_memory_used@@Base+0x32f0>
  419668:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x2bcc>
  41966c:	add	x27, x27, #0x808
  419670:	b	41967c <_obstack_memory_used@@Base+0x3248>
  419674:	cmp	x19, #0x0
  419678:	csel	x19, x28, x19, eq  // eq = none
  41967c:	ldrb	w8, [x23, #8]
  419680:	orr	w9, w8, #0x8
  419684:	cmp	w9, #0xa
  419688:	b.eq	419728 <_obstack_memory_used@@Base+0x32f4>  // b.none
  41968c:	cbz	x21, 419698 <_obstack_memory_used@@Base+0x3264>
  419690:	cmp	w8, #0x9
  419694:	b.eq	419728 <_obstack_memory_used@@Base+0x32f4>  // b.none
  419698:	mov	x0, x26
  41969c:	mov	x1, x24
  4196a0:	mov	x2, x23
  4196a4:	mov	x3, x22
  4196a8:	mov	x4, x21
  4196ac:	mov	x5, x20
  4196b0:	bl	419824 <_obstack_memory_used@@Base+0x33f0>
  4196b4:	mov	x28, x0
  4196b8:	cbnz	x0, 4196c4 <_obstack_memory_used@@Base+0x3290>
  4196bc:	ldr	w8, [x20]
  4196c0:	cbnz	w8, 419748 <_obstack_memory_used@@Base+0x3314>
  4196c4:	cbz	x19, 419674 <_obstack_memory_used@@Base+0x3240>
  4196c8:	cbz	x28, 419674 <_obstack_memory_used@@Base+0x3240>
  4196cc:	mov	w3, #0x10                  	// #16
  4196d0:	mov	x0, x25
  4196d4:	mov	x1, x19
  4196d8:	mov	x2, x28
  4196dc:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  4196e0:	cbz	x0, 4196f4 <_obstack_memory_used@@Base+0x32c0>
  4196e4:	mov	w8, #0x1                   	// #1
  4196e8:	mov	x19, x0
  4196ec:	tbnz	w8, #0, 41967c <_obstack_memory_used@@Base+0x3248>
  4196f0:	b	419724 <_obstack_memory_used@@Base+0x32f0>
  4196f4:	mov	x0, x28
  4196f8:	mov	x1, x27
  4196fc:	mov	x2, xzr
  419700:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  419704:	mov	x0, x19
  419708:	mov	x1, x27
  41970c:	mov	x2, xzr
  419710:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  419714:	mov	w8, wzr
  419718:	mov	w9, #0xc                   	// #12
  41971c:	str	w9, [x20]
  419720:	tbnz	w8, #0, 41967c <_obstack_memory_used@@Base+0x3248>
  419724:	mov	x19, xzr
  419728:	mov	x0, x19
  41972c:	ldp	x20, x19, [sp, #80]
  419730:	ldp	x22, x21, [sp, #64]
  419734:	ldp	x24, x23, [sp, #48]
  419738:	ldp	x26, x25, [sp, #32]
  41973c:	ldp	x28, x27, [sp, #16]
  419740:	ldp	x29, x30, [sp], #96
  419744:	ret
  419748:	cbz	x19, 419728 <_obstack_memory_used@@Base+0x32f4>
  41974c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2bcc>
  419750:	add	x1, x1, #0x808
  419754:	mov	x0, x19
  419758:	mov	x2, xzr
  41975c:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  419760:	b	419724 <_obstack_memory_used@@Base+0x32f0>
  419764:	stp	x29, x30, [sp, #-64]!
  419768:	stp	x20, x19, [sp, #48]
  41976c:	mov	x19, x2
  419770:	mov	x20, x1
  419774:	str	x23, [sp, #16]
  419778:	stp	x22, x21, [sp, #32]
  41977c:	mov	x29, sp
  419780:	mov	x22, x0
  419784:	ldr	x0, [x0, #8]
  419788:	cbnz	x0, 419780 <_obstack_memory_used@@Base+0x334c>
  41978c:	ldr	x8, [x22, #16]
  419790:	cbz	x8, 4197b0 <_obstack_memory_used@@Base+0x337c>
  419794:	cbnz	x0, 419780 <_obstack_memory_used@@Base+0x334c>
  419798:	ldr	x0, [x22, #16]
  41979c:	b	419780 <_obstack_memory_used@@Base+0x334c>
  4197a0:	mov	w8, wzr
  4197a4:	mov	w21, w0
  4197a8:	cbnz	w8, 4197dc <_obstack_memory_used@@Base+0x33a8>
  4197ac:	b	4197f0 <_obstack_memory_used@@Base+0x33bc>
  4197b0:	mov	x0, x19
  4197b4:	mov	x1, x22
  4197b8:	blr	x20
  4197bc:	cbnz	w0, 4197a0 <_obstack_memory_used@@Base+0x336c>
  4197c0:	ldr	x9, [x22]
  4197c4:	cmp	x9, #0x0
  4197c8:	cset	w8, ne  // ne = any
  4197cc:	csel	x23, x23, x22, eq  // eq = none
  4197d0:	csel	x22, x22, x9, eq  // eq = none
  4197d4:	csel	w21, wzr, w21, eq  // eq = none
  4197d8:	cbz	w8, 4197f0 <_obstack_memory_used@@Base+0x33bc>
  4197dc:	ldr	x0, [x22, #16]
  4197e0:	cmp	x0, x23
  4197e4:	b.eq	4197b0 <_obstack_memory_used@@Base+0x337c>  // b.none
  4197e8:	cbz	x0, 4197b0 <_obstack_memory_used@@Base+0x337c>
  4197ec:	b	419780 <_obstack_memory_used@@Base+0x334c>
  4197f0:	mov	w0, w21
  4197f4:	ldp	x20, x19, [sp, #48]
  4197f8:	ldp	x22, x21, [sp, #32]
  4197fc:	ldr	x23, [sp, #16]
  419800:	ldp	x29, x30, [sp], #64
  419804:	ret
  419808:	stp	x29, x30, [sp, #-16]!
  41980c:	add	x0, x1, #0x28
  419810:	mov	x29, sp
  419814:	bl	417a08 <_obstack_memory_used@@Base+0x15d4>
  419818:	mov	w0, wzr
  41981c:	ldp	x29, x30, [sp], #16
  419820:	ret
  419824:	stp	x29, x30, [sp, #-96]!
  419828:	stp	x28, x27, [sp, #16]
  41982c:	stp	x26, x25, [sp, #32]
  419830:	stp	x24, x23, [sp, #48]
  419834:	stp	x22, x21, [sp, #64]
  419838:	stp	x20, x19, [sp, #80]
  41983c:	ldr	w8, [x2, #8]
  419840:	ldr	x23, [x1]
  419844:	adrp	x11, 426000 <_obstack_memory_used@@Base+0xfbcc>
  419848:	add	x11, x11, #0x772
  41984c:	and	w9, w8, #0xff
  419850:	sub	w10, w9, #0x1
  419854:	adr	x12, 419884 <_obstack_memory_used@@Base+0x3450>
  419858:	ldrh	w13, [x11, x10, lsl #1]
  41985c:	add	x12, x12, x13, lsl #2
  419860:	mov	x29, sp
  419864:	mov	x19, x5
  419868:	mov	x25, x4
  41986c:	mov	x20, x3
  419870:	mov	x21, x2
  419874:	mov	x26, x1
  419878:	mov	x22, x0
  41987c:	mov	x24, xzr
  419880:	br	x12
  419884:	tbnz	w20, #5, 419bd4 <_obstack_memory_used@@Base+0x37a0>
  419888:	tbnz	w20, #4, 419c08 <_obstack_memory_used@@Base+0x37d4>
  41988c:	tbnz	w20, #17, 4198f4 <_obstack_memory_used@@Base+0x34c0>
  419890:	cmp	w9, #0x9
  419894:	b.ne	4198f4 <_obstack_memory_used@@Base+0x34c0>  // b.any
  419898:	mov	w8, #0x10                  	// #16
  41989c:	b	419be0 <_obstack_memory_used@@Base+0x37ac>
  4198a0:	ldr	x1, [x22, #120]
  4198a4:	cmp	w9, #0x21
  4198a8:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  4198ac:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4198b0:	cset	w4, eq  // eq = none
  4198b4:	add	x2, x2, #0xea9
  4198b8:	add	x3, x3, #0xa22
  4198bc:	b	4198dc <_obstack_memory_used@@Base+0x34a8>
  4198c0:	ldr	x1, [x22, #120]
  4198c4:	cmp	w9, #0x23
  4198c8:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xebcc>
  4198cc:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xebcc>
  4198d0:	cset	w4, eq  // eq = none
  4198d4:	add	x2, x2, #0xe9d
  4198d8:	add	x3, x3, #0x2cd
  4198dc:	mov	x0, x23
  4198e0:	mov	x5, x19
  4198e4:	bl	41a504 <_obstack_memory_used@@Base+0x40d0>
  4198e8:	mov	x24, x0
  4198ec:	cbz	x0, 419aec <_obstack_memory_used@@Base+0x36b8>
  4198f0:	b	419af4 <_obstack_memory_used@@Base+0x36c0>
  4198f4:	and	w8, w8, #0xffffff00
  4198f8:	orr	w8, w8, #0x1
  4198fc:	mov	x0, x23
  419900:	mov	x1, xzr
  419904:	mov	x2, xzr
  419908:	mov	x3, x21
  41990c:	str	w8, [x21, #8]
  419910:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419914:	mov	x24, x0
  419918:	cbnz	x0, 419af4 <_obstack_memory_used@@Base+0x36c0>
  41991c:	b	419a24 <_obstack_memory_used@@Base+0x35f0>
  419920:	ldrh	w8, [x21]
  419924:	mov	w9, #0x30f                 	// #783
  419928:	tst	w8, w9
  41992c:	b.eq	419940 <_obstack_memory_used@@Base+0x350c>  // b.none
  419930:	ldrb	w8, [x23, #176]
  419934:	tbnz	w8, #4, 419940 <_obstack_memory_used@@Base+0x350c>
  419938:	mov	x0, x23
  41993c:	bl	41a438 <_obstack_memory_used@@Base+0x4004>
  419940:	ldr	w8, [x21]
  419944:	cmp	w8, #0x100
  419948:	b.eq	419c3c <_obstack_memory_used@@Base+0x3808>  // b.none
  41994c:	cmp	w8, #0x200
  419950:	b.ne	419ca4 <_obstack_memory_used@@Base+0x3870>  // b.any
  419954:	mov	w24, #0xa                   	// #10
  419958:	mov	w8, #0x5                   	// #5
  41995c:	b	419c44 <_obstack_memory_used@@Base+0x3810>
  419960:	mov	x0, x22
  419964:	mov	x1, x23
  419968:	mov	x2, x21
  41996c:	mov	x3, x20
  419970:	mov	x4, x19
  419974:	bl	419ebc <_obstack_memory_used@@Base+0x3a88>
  419978:	mov	x24, x0
  41997c:	cbz	x0, 419aec <_obstack_memory_used@@Base+0x36b8>
  419980:	b	419af4 <_obstack_memory_used@@Base+0x36c0>
  419984:	mov	x0, x23
  419988:	mov	x1, xzr
  41998c:	mov	x2, xzr
  419990:	mov	x3, x21
  419994:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419998:	mov	x24, x0
  41999c:	cbz	x0, 419a24 <_obstack_memory_used@@Base+0x35f0>
  4199a0:	ldr	w8, [x23, #180]
  4199a4:	cmp	w8, #0x2
  4199a8:	b.lt	419af4 <_obstack_memory_used@@Base+0x36c0>  // b.tstop
  4199ac:	ldr	x9, [x22, #104]
  4199b0:	ldr	x8, [x22, #72]
  4199b4:	cmp	x9, x8
  4199b8:	b.le	419af4 <_obstack_memory_used@@Base+0x36c0>
  4199bc:	ldr	x9, [x22, #48]
  4199c0:	cmp	x8, x9
  4199c4:	b.eq	419af4 <_obstack_memory_used@@Base+0x36c0>  // b.none
  4199c8:	ldr	x9, [x22, #16]
  4199cc:	ldr	w8, [x9, x8, lsl #2]
  4199d0:	cmn	w8, #0x1
  4199d4:	b.ne	419af4 <_obstack_memory_used@@Base+0x36c0>  // b.any
  4199d8:	mov	x0, x21
  4199dc:	mov	x1, x22
  4199e0:	mov	x2, x20
  4199e4:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  4199e8:	mov	x0, x23
  4199ec:	mov	x1, xzr
  4199f0:	mov	x2, xzr
  4199f4:	mov	x3, x21
  4199f8:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  4199fc:	mov	x25, x0
  419a00:	mov	w3, #0x10                  	// #16
  419a04:	mov	x0, x23
  419a08:	mov	x1, x24
  419a0c:	mov	x2, x25
  419a10:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  419a14:	cbz	x25, 419a20 <_obstack_memory_used@@Base+0x35ec>
  419a18:	mov	x24, x0
  419a1c:	cbnz	x0, 4199ac <_obstack_memory_used@@Base+0x3578>
  419a20:	mov	x24, xzr
  419a24:	mov	w8, #0xc                   	// #12
  419a28:	str	w8, [x19]
  419a2c:	b	419be8 <_obstack_memory_used@@Base+0x37b4>
  419a30:	ldr	w8, [x21]
  419a34:	ldr	x9, [x23, #168]
  419a38:	mov	w10, #0x1                   	// #1
  419a3c:	lsl	w8, w10, w8
  419a40:	sxtw	x8, w8
  419a44:	tst	x9, x8
  419a48:	b.eq	419cd4 <_obstack_memory_used@@Base+0x38a0>  // b.none
  419a4c:	ldr	x9, [x23, #160]
  419a50:	mov	x0, x23
  419a54:	mov	x1, xzr
  419a58:	mov	x2, xzr
  419a5c:	orr	x8, x9, x8
  419a60:	mov	x3, x21
  419a64:	str	x8, [x23, #160]
  419a68:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419a6c:	mov	x24, x0
  419a70:	cbz	x0, 419a24 <_obstack_memory_used@@Base+0x35f0>
  419a74:	ldr	x8, [x23, #152]
  419a78:	ldrb	w9, [x23, #176]
  419a7c:	add	x8, x8, #0x1
  419a80:	orr	w9, w9, #0x2
  419a84:	str	x8, [x23, #152]
  419a88:	strb	w9, [x23, #176]
  419a8c:	b	419af4 <_obstack_memory_used@@Base+0x36c0>
  419a90:	mov	x0, x23
  419a94:	mov	x1, xzr
  419a98:	mov	x2, xzr
  419a9c:	mov	x3, x21
  419aa0:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419aa4:	mov	x24, x0
  419aa8:	cbz	x0, 419a24 <_obstack_memory_used@@Base+0x35f0>
  419aac:	ldr	w8, [x23, #180]
  419ab0:	cmp	w8, #0x2
  419ab4:	b.lt	419af4 <_obstack_memory_used@@Base+0x36c0>  // b.tstop
  419ab8:	ldrb	w8, [x23, #176]
  419abc:	orr	w8, w8, #0x2
  419ac0:	strb	w8, [x23, #176]
  419ac4:	b	419af4 <_obstack_memory_used@@Base+0x36c0>
  419ac8:	add	x4, x25, #0x1
  419acc:	mov	x0, x22
  419ad0:	mov	x1, x26
  419ad4:	mov	x2, x21
  419ad8:	mov	x3, x20
  419adc:	mov	x5, x19
  419ae0:	bl	419d84 <_obstack_memory_used@@Base+0x3950>
  419ae4:	mov	x24, x0
  419ae8:	cbnz	x0, 419af4 <_obstack_memory_used@@Base+0x36c0>
  419aec:	ldr	w8, [x19]
  419af0:	cbnz	w8, 419bc8 <_obstack_memory_used@@Base+0x3794>
  419af4:	mov	x0, x21
  419af8:	mov	x1, x22
  419afc:	mov	x2, x20
  419b00:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  419b04:	mov	w28, #0x800                 	// #2048
  419b08:	mov	w27, #0x1                   	// #1
  419b0c:	movk	w28, #0x8c, lsl #16
  419b10:	mov	w25, #0xd                   	// #13
  419b14:	b	419b24 <_obstack_memory_used@@Base+0x36f0>
  419b18:	mov	w8, #0x1                   	// #1
  419b1c:	mov	x24, x26
  419b20:	tbz	w8, #0, 419bc8 <_obstack_memory_used@@Base+0x3794>
  419b24:	ldrb	w8, [x21, #8]
  419b28:	cmp	w8, #0x17
  419b2c:	b.hi	419be8 <_obstack_memory_used@@Base+0x37b4>  // b.pmore
  419b30:	lsl	w8, w27, w8
  419b34:	tst	w8, w28
  419b38:	b.eq	419be8 <_obstack_memory_used@@Base+0x37b4>  // b.none
  419b3c:	mov	x0, x24
  419b40:	mov	x1, x22
  419b44:	mov	x2, x23
  419b48:	mov	x3, x21
  419b4c:	mov	x4, x20
  419b50:	mov	x5, x19
  419b54:	bl	41a6e0 <_obstack_memory_used@@Base+0x42ac>
  419b58:	mov	x26, x0
  419b5c:	cbnz	x0, 419b68 <_obstack_memory_used@@Base+0x3734>
  419b60:	ldr	w8, [x19]
  419b64:	cbnz	w8, 419ba4 <_obstack_memory_used@@Base+0x3770>
  419b68:	tbz	w20, #24, 419b18 <_obstack_memory_used@@Base+0x36e4>
  419b6c:	ldrb	w8, [x21, #8]
  419b70:	cmp	w8, #0x17
  419b74:	b.eq	419b80 <_obstack_memory_used@@Base+0x374c>  // b.none
  419b78:	cmp	w8, #0xb
  419b7c:	b.ne	419b18 <_obstack_memory_used@@Base+0x36e4>  // b.any
  419b80:	cbz	x26, 419b98 <_obstack_memory_used@@Base+0x3764>
  419b84:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2bcc>
  419b88:	mov	x0, x26
  419b8c:	add	x1, x1, #0x808
  419b90:	mov	x2, xzr
  419b94:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  419b98:	mov	w8, wzr
  419b9c:	str	w25, [x19]
  419ba0:	b	419b1c <_obstack_memory_used@@Base+0x36e8>
  419ba4:	cbz	x24, 419bbc <_obstack_memory_used@@Base+0x3788>
  419ba8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2bcc>
  419bac:	mov	x0, x24
  419bb0:	add	x1, x1, #0x808
  419bb4:	mov	x2, xzr
  419bb8:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  419bbc:	mov	w8, wzr
  419bc0:	mov	x26, x24
  419bc4:	b	419b1c <_obstack_memory_used@@Base+0x36e8>
  419bc8:	mov	x24, xzr
  419bcc:	b	419be8 <_obstack_memory_used@@Base+0x37b4>
  419bd0:	tbz	w20, #24, 419884 <_obstack_memory_used@@Base+0x3450>
  419bd4:	mov	w8, #0xd                   	// #13
  419bd8:	b	419be0 <_obstack_memory_used@@Base+0x37ac>
  419bdc:	mov	w8, #0x5                   	// #5
  419be0:	mov	x24, xzr
  419be4:	str	w8, [x19]
  419be8:	mov	x0, x24
  419bec:	ldp	x20, x19, [sp, #80]
  419bf0:	ldp	x22, x21, [sp, #64]
  419bf4:	ldp	x24, x23, [sp, #48]
  419bf8:	ldp	x26, x25, [sp, #32]
  419bfc:	ldp	x28, x27, [sp, #16]
  419c00:	ldp	x29, x30, [sp], #96
  419c04:	ret
  419c08:	mov	x0, x21
  419c0c:	mov	x1, x22
  419c10:	mov	x2, x20
  419c14:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  419c18:	mov	x0, x22
  419c1c:	mov	x1, x26
  419c20:	mov	x2, x21
  419c24:	mov	x3, x20
  419c28:	mov	x4, x25
  419c2c:	mov	x5, x19
  419c30:	bl	419824 <_obstack_memory_used@@Base+0x33f0>
  419c34:	mov	x24, x0
  419c38:	b	419be8 <_obstack_memory_used@@Base+0x37b4>
  419c3c:	mov	w24, #0x9                   	// #9
  419c40:	mov	w8, #0x6                   	// #6
  419c44:	mov	x0, x23
  419c48:	mov	x1, xzr
  419c4c:	mov	x2, xzr
  419c50:	mov	x3, x21
  419c54:	str	w8, [x21]
  419c58:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419c5c:	mov	x26, x0
  419c60:	mov	x0, x23
  419c64:	mov	x1, xzr
  419c68:	mov	x2, xzr
  419c6c:	mov	x3, x21
  419c70:	str	w24, [x21]
  419c74:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419c78:	mov	x25, x0
  419c7c:	mov	w3, #0xa                   	// #10
  419c80:	mov	x0, x23
  419c84:	mov	x1, x26
  419c88:	mov	x2, x25
  419c8c:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  419c90:	cbz	x26, 419a20 <_obstack_memory_used@@Base+0x35ec>
  419c94:	cbz	x25, 419a20 <_obstack_memory_used@@Base+0x35ec>
  419c98:	mov	x24, x0
  419c9c:	cbnz	x0, 419cc0 <_obstack_memory_used@@Base+0x388c>
  419ca0:	b	419a20 <_obstack_memory_used@@Base+0x35ec>
  419ca4:	mov	x0, x23
  419ca8:	mov	x1, xzr
  419cac:	mov	x2, xzr
  419cb0:	mov	x3, x21
  419cb4:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  419cb8:	mov	x24, x0
  419cbc:	cbz	x0, 419a24 <_obstack_memory_used@@Base+0x35f0>
  419cc0:	mov	x0, x21
  419cc4:	mov	x1, x22
  419cc8:	mov	x2, x20
  419ccc:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  419cd0:	b	419be8 <_obstack_memory_used@@Base+0x37b4>
  419cd4:	mov	w8, #0x6                   	// #6
  419cd8:	b	419be0 <_obstack_memory_used@@Base+0x37ac>
  419cdc:	stp	x29, x30, [sp, #-48]!
  419ce0:	stp	x22, x21, [sp, #16]
  419ce4:	stp	x20, x19, [sp, #32]
  419ce8:	ldr	w8, [x0, #128]
  419cec:	mov	x21, x3
  419cf0:	mov	x19, x2
  419cf4:	mov	x22, x0
  419cf8:	cmp	w8, #0xf
  419cfc:	mov	x20, x1
  419d00:	mov	x29, sp
  419d04:	b.eq	419d64 <_obstack_memory_used@@Base+0x3930>  // b.none
  419d08:	ldrsw	x8, [x22, #128]
  419d0c:	ldr	x9, [x22, #112]
  419d10:	add	w10, w8, #0x1
  419d14:	add	x0, x9, x8, lsl #6
  419d18:	str	w10, [x22, #128]
  419d1c:	str	xzr, [x0, #8]!
  419d20:	stp	x20, x19, [x0, #8]
  419d24:	ldr	q0, [x21]
  419d28:	mov	x9, #0xffffffffffffffff    	// #-1
  419d2c:	stp	xzr, xzr, [x0, #24]
  419d30:	str	x9, [x0, #56]
  419d34:	stur	q0, [x0, #40]
  419d38:	ldr	w8, [x0, #48]
  419d3c:	and	w8, w8, #0xfff3ffff
  419d40:	str	w8, [x0, #48]
  419d44:	cbz	x20, 419d4c <_obstack_memory_used@@Base+0x3918>
  419d48:	str	x0, [x20]
  419d4c:	cbz	x19, 419d54 <_obstack_memory_used@@Base+0x3920>
  419d50:	str	x0, [x19]
  419d54:	ldp	x20, x19, [sp, #32]
  419d58:	ldp	x22, x21, [sp, #16]
  419d5c:	ldp	x29, x30, [sp], #48
  419d60:	ret
  419d64:	mov	w0, #0x3c8                 	// #968
  419d68:	bl	4024e0 <malloc@plt>
  419d6c:	cbz	x0, 419d54 <_obstack_memory_used@@Base+0x3920>
  419d70:	ldr	x8, [x22, #112]
  419d74:	str	x8, [x0]
  419d78:	str	x0, [x22, #112]
  419d7c:	str	wzr, [x22, #128]
  419d80:	b	419d08 <_obstack_memory_used@@Base+0x38d4>
  419d84:	stp	x29, x30, [sp, #-80]!
  419d88:	stp	x26, x25, [sp, #16]
  419d8c:	stp	x24, x23, [sp, #32]
  419d90:	stp	x22, x21, [sp, #48]
  419d94:	stp	x20, x19, [sp, #64]
  419d98:	ldr	x26, [x1, #48]
  419d9c:	ldr	x20, [x1]
  419da0:	mov	x21, x2
  419da4:	mov	x25, x0
  419da8:	add	x8, x26, #0x1
  419dac:	mov	x24, x1
  419db0:	str	x8, [x1, #48]
  419db4:	orr	x2, x3, #0x800000
  419db8:	mov	x0, x21
  419dbc:	mov	x1, x25
  419dc0:	mov	x29, sp
  419dc4:	mov	x19, x5
  419dc8:	mov	x22, x4
  419dcc:	mov	x23, x3
  419dd0:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  419dd4:	ldrb	w8, [x21, #8]
  419dd8:	cmp	w8, #0x9
  419ddc:	b.ne	419de8 <_obstack_memory_used@@Base+0x39b4>  // b.any
  419de0:	mov	x1, xzr
  419de4:	b	419e24 <_obstack_memory_used@@Base+0x39f0>
  419de8:	mov	x0, x25
  419dec:	mov	x1, x24
  419df0:	mov	x2, x21
  419df4:	mov	x3, x23
  419df8:	mov	x4, x22
  419dfc:	mov	x5, x19
  419e00:	bl	418ea4 <_obstack_memory_used@@Base+0x2a70>
  419e04:	ldr	w8, [x19]
  419e08:	mov	x1, x0
  419e0c:	cbnz	w8, 419e1c <_obstack_memory_used@@Base+0x39e8>
  419e10:	ldrb	w8, [x21, #8]
  419e14:	cmp	w8, #0x9
  419e18:	b.ne	419e80 <_obstack_memory_used@@Base+0x3a4c>  // b.any
  419e1c:	ldr	w8, [x19]
  419e20:	cbnz	w8, 419eb4 <_obstack_memory_used@@Base+0x3a80>
  419e24:	cmp	x26, #0x8
  419e28:	b.hi	419e44 <_obstack_memory_used@@Base+0x3a10>  // b.pmore
  419e2c:	ldr	x8, [x20, #168]
  419e30:	mov	w9, #0x1                   	// #1
  419e34:	lsl	w9, w9, w26
  419e38:	sxtw	x9, w9
  419e3c:	orr	x8, x8, x9
  419e40:	str	x8, [x20, #168]
  419e44:	mov	w3, #0x11                  	// #17
  419e48:	mov	x0, x20
  419e4c:	mov	x2, xzr
  419e50:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  419e54:	cbz	x0, 419e74 <_obstack_memory_used@@Base+0x3a40>
  419e58:	str	x26, [x0, #40]
  419e5c:	ldp	x20, x19, [sp, #64]
  419e60:	ldp	x22, x21, [sp, #48]
  419e64:	ldp	x24, x23, [sp, #32]
  419e68:	ldp	x26, x25, [sp, #16]
  419e6c:	ldp	x29, x30, [sp], #80
  419e70:	ret
  419e74:	mov	w8, #0xc                   	// #12
  419e78:	str	w8, [x19]
  419e7c:	b	419e5c <_obstack_memory_used@@Base+0x3a28>
  419e80:	cbz	x1, 419ea4 <_obstack_memory_used@@Base+0x3a70>
  419e84:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x2bcc>
  419e88:	add	x8, x8, #0x808
  419e8c:	mov	x0, x1
  419e90:	mov	x21, x1
  419e94:	mov	x1, x8
  419e98:	mov	x2, xzr
  419e9c:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  419ea0:	mov	x1, x21
  419ea4:	mov	w8, #0x8                   	// #8
  419ea8:	str	w8, [x19]
  419eac:	ldr	w8, [x19]
  419eb0:	cbz	w8, 419e24 <_obstack_memory_used@@Base+0x39f0>
  419eb4:	mov	x0, xzr
  419eb8:	b	419e5c <_obstack_memory_used@@Base+0x3a28>
  419ebc:	sub	sp, sp, #0x100
  419ec0:	stp	x29, x30, [sp, #160]
  419ec4:	stp	x24, x23, [sp, #208]
  419ec8:	stp	x20, x19, [sp, #240]
  419ecc:	add	x29, sp, #0xa0
  419ed0:	mov	x19, x1
  419ed4:	mov	x23, x0
  419ed8:	mov	w0, #0x20                  	// #32
  419edc:	mov	w1, #0x1                   	// #1
  419ee0:	stp	x28, x27, [sp, #176]
  419ee4:	stp	x26, x25, [sp, #192]
  419ee8:	stp	x22, x21, [sp, #224]
  419eec:	str	x4, [sp, #24]
  419ef0:	mov	x24, x3
  419ef4:	mov	x25, x2
  419ef8:	stp	xzr, xzr, [x29, #-16]
  419efc:	bl	4025d0 <calloc@plt>
  419f00:	mov	x20, x0
  419f04:	mov	w0, #0x50                  	// #80
  419f08:	mov	w1, #0x1                   	// #1
  419f0c:	bl	4025d0 <calloc@plt>
  419f10:	mov	x21, x0
  419f14:	cbz	x20, 41a3fc <_obstack_memory_used@@Base+0x3fc8>
  419f18:	cbz	x21, 41a3fc <_obstack_memory_used@@Base+0x3fc8>
  419f1c:	mov	x0, x25
  419f20:	mov	x1, x23
  419f24:	mov	x2, x24
  419f28:	bl	41aa00 <_obstack_memory_used@@Base+0x45cc>
  419f2c:	ldrb	w8, [x25, #8]
  419f30:	mov	w26, w0
  419f34:	cmp	w8, #0x19
  419f38:	b.eq	419f4c <_obstack_memory_used@@Base+0x3b18>  // b.none
  419f3c:	cmp	w8, #0x2
  419f40:	b.eq	41a36c <_obstack_memory_used@@Base+0x3f38>  // b.none
  419f44:	str	wzr, [sp, #12]
  419f48:	b	419f9c <_obstack_memory_used@@Base+0x3b68>
  419f4c:	ldrb	w8, [x21, #32]
  419f50:	orr	w8, w8, #0x1
  419f54:	strb	w8, [x21, #32]
  419f58:	tbz	w24, #8, 419f68 <_obstack_memory_used@@Base+0x3b34>
  419f5c:	mov	w1, #0xa                   	// #10
  419f60:	mov	x0, x20
  419f64:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  419f68:	ldr	x8, [x23, #72]
  419f6c:	mov	x0, x25
  419f70:	mov	x1, x23
  419f74:	mov	x2, x24
  419f78:	add	x8, x8, w26, sxtw
  419f7c:	str	x8, [x23, #72]
  419f80:	bl	41aa00 <_obstack_memory_used@@Base+0x45cc>
  419f84:	ldrb	w8, [x25, #8]
  419f88:	cmp	w8, #0x2
  419f8c:	b.eq	41a36c <_obstack_memory_used@@Base+0x3f38>  // b.none
  419f90:	mov	w26, w0
  419f94:	mov	w8, #0x1                   	// #1
  419f98:	str	w8, [sp, #12]
  419f9c:	ldr	w8, [x25, #8]
  419fa0:	and	w9, w8, #0xff
  419fa4:	cmp	w9, #0x15
  419fa8:	b.ne	419fb8 <_obstack_memory_used@@Base+0x3b84>  // b.any
  419fac:	and	w8, w8, #0xffffff00
  419fb0:	orr	w8, w8, #0x1
  419fb4:	str	w8, [x25, #8]
  419fb8:	add	x28, sp, #0x50
  419fbc:	mov	w27, #0x3                   	// #3
  419fc0:	mov	w22, #0x1                   	// #1
  419fc4:	str	xzr, [sp, #16]
  419fc8:	b	419fd8 <_obstack_memory_used@@Base+0x3ba4>
  419fcc:	mov	w22, wzr
  419fd0:	mov	w8, #0x4                   	// #4
  419fd4:	cbnz	w8, 41a24c <_obstack_memory_used@@Base+0x3e18>
  419fd8:	and	w5, w22, #0x1
  419fdc:	sub	x0, x29, #0x20
  419fe0:	mov	x1, x23
  419fe4:	mov	x2, x25
  419fe8:	mov	w3, w26
  419fec:	mov	x4, x24
  419ff0:	stur	x28, [x29, #-24]
  419ff4:	stur	w27, [x29, #-32]
  419ff8:	bl	41ab8c <_obstack_memory_used@@Base+0x4758>
  419ffc:	cbnz	w0, 41a200 <_obstack_memory_used@@Base+0x3dcc>
  41a000:	mov	x0, x25
  41a004:	mov	x1, x23
  41a008:	mov	x2, x24
  41a00c:	bl	41aa00 <_obstack_memory_used@@Base+0x45cc>
  41a010:	ldur	w22, [x29, #-32]
  41a014:	mov	w26, w0
  41a018:	mov	w3, wzr
  41a01c:	cmp	w22, #0x2
  41a020:	b.eq	41a050 <_obstack_memory_used@@Base+0x3c1c>  // b.none
  41a024:	cmp	w22, #0x4
  41a028:	mov	w8, w3
  41a02c:	b.eq	41a054 <_obstack_memory_used@@Base+0x3c20>  // b.none
  41a030:	ldrb	w8, [x25, #8]
  41a034:	cmp	w8, #0x16
  41a038:	b.eq	41a110 <_obstack_memory_used@@Base+0x3cdc>  // b.none
  41a03c:	cmp	w8, #0x2
  41a040:	b.eq	41a1d8 <_obstack_memory_used@@Base+0x3da4>  // b.none
  41a044:	mov	w3, wzr
  41a048:	mov	w8, wzr
  41a04c:	b	41a054 <_obstack_memory_used@@Base+0x3c20>
  41a050:	mov	w8, w3
  41a054:	cbz	w8, 41a0e4 <_obstack_memory_used@@Base+0x3cb0>
  41a058:	add	x8, sp, #0x30
  41a05c:	sub	x0, x29, #0x30
  41a060:	add	x2, sp, #0x20
  41a064:	mov	w5, #0x1                   	// #1
  41a068:	mov	x1, x23
  41a06c:	mov	x4, x24
  41a070:	stur	x8, [x29, #-40]
  41a074:	stur	w27, [x29, #-48]
  41a078:	bl	41ab8c <_obstack_memory_used@@Base+0x4758>
  41a07c:	cbnz	w0, 41a1fc <_obstack_memory_used@@Base+0x3dc8>
  41a080:	mov	x0, x25
  41a084:	mov	x1, x23
  41a088:	mov	x2, x24
  41a08c:	bl	41aa00 <_obstack_memory_used@@Base+0x45cc>
  41a090:	ldr	w8, [x19, #180]
  41a094:	mov	w26, w0
  41a098:	sub	x3, x29, #0x8
  41a09c:	sub	x4, x29, #0x20
  41a0a0:	cmp	w8, #0x1
  41a0a4:	csel	x2, x21, xzr, gt
  41a0a8:	sub	x5, x29, #0x30
  41a0ac:	mov	x0, x24
  41a0b0:	mov	x1, x20
  41a0b4:	bl	41aca4 <_obstack_memory_used@@Base+0x4870>
  41a0b8:	ldr	x8, [sp, #24]
  41a0bc:	str	w0, [x8]
  41a0c0:	cbnz	w0, 41a1f0 <_obstack_memory_used@@Base+0x3dbc>
  41a0c4:	ldrb	w8, [x25, #8]
  41a0c8:	cmp	w8, #0x15
  41a0cc:	b.eq	419fcc <_obstack_memory_used@@Base+0x3b98>  // b.none
  41a0d0:	cmp	w8, #0x2
  41a0d4:	b.eq	41a1d8 <_obstack_memory_used@@Base+0x3da4>  // b.none
  41a0d8:	mov	w22, wzr
  41a0dc:	mov	w8, wzr
  41a0e0:	b	419fd4 <_obstack_memory_used@@Base+0x3ba0>
  41a0e4:	adrp	x11, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41a0e8:	mov	w8, w22
  41a0ec:	add	x11, x11, #0x7ba
  41a0f0:	adr	x9, 41a100 <_obstack_memory_used@@Base+0x3ccc>
  41a0f4:	ldrb	w10, [x11, x8]
  41a0f8:	add	x9, x9, x10, lsl #2
  41a0fc:	br	x9
  41a100:	ldurb	w1, [x29, #-24]
  41a104:	mov	x0, x20
  41a108:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41a10c:	b	41a0c4 <_obstack_memory_used@@Base+0x3c90>
  41a110:	ldr	x8, [x23, #72]
  41a114:	add	x0, sp, #0x20
  41a118:	mov	x1, x23
  41a11c:	mov	x2, x24
  41a120:	add	x8, x8, w26, sxtw
  41a124:	str	x8, [x23, #72]
  41a128:	bl	41aa00 <_obstack_memory_used@@Base+0x45cc>
  41a12c:	ldrb	w8, [sp, #40]
  41a130:	mov	w3, w0
  41a134:	cmp	w8, #0x15
  41a138:	b.eq	41a1b8 <_obstack_memory_used@@Base+0x3d84>  // b.none
  41a13c:	cmp	w8, #0x2
  41a140:	b.eq	41a1d8 <_obstack_memory_used@@Base+0x3da4>  // b.none
  41a144:	mov	w8, #0x1                   	// #1
  41a148:	b	41a054 <_obstack_memory_used@@Base+0x3c20>
  41a14c:	ldr	x8, [x21, #40]
  41a150:	ldr	x9, [sp, #16]
  41a154:	cmp	x9, x8
  41a158:	b.eq	41a210 <_obstack_memory_used@@Base+0x3ddc>  // b.none
  41a15c:	ldr	x8, [x21, #40]
  41a160:	ldur	w9, [x29, #-24]
  41a164:	ldr	x10, [x21]
  41a168:	add	x11, x8, #0x1
  41a16c:	str	x11, [x21, #40]
  41a170:	str	w9, [x10, x8, lsl #2]
  41a174:	b	41a0c4 <_obstack_memory_used@@Base+0x3c90>
  41a178:	ldur	x1, [x29, #-24]
  41a17c:	mov	x0, x20
  41a180:	bl	41af18 <_obstack_memory_used@@Base+0x4ae4>
  41a184:	b	41a0b8 <_obstack_memory_used@@Base+0x3c84>
  41a188:	ldur	x1, [x29, #-24]
  41a18c:	mov	x0, x20
  41a190:	bl	41af60 <_obstack_memory_used@@Base+0x4b2c>
  41a194:	b	41a0b8 <_obstack_memory_used@@Base+0x3c84>
  41a198:	ldr	x0, [x23, #120]
  41a19c:	ldur	x4, [x29, #-24]
  41a1a0:	sub	x3, x29, #0x10
  41a1a4:	mov	x1, x20
  41a1a8:	mov	x2, x21
  41a1ac:	mov	x5, x24
  41a1b0:	bl	41afa8 <_obstack_memory_used@@Base+0x4b74>
  41a1b4:	b	41a0b8 <_obstack_memory_used@@Base+0x3c84>
  41a1b8:	ldr	x9, [x23, #72]
  41a1bc:	neg	w10, w26
  41a1c0:	mov	w8, wzr
  41a1c4:	add	x9, x9, w10, sxtw
  41a1c8:	str	x9, [x23, #72]
  41a1cc:	mov	w9, #0x1                   	// #1
  41a1d0:	strb	w9, [x25, #8]
  41a1d4:	b	41a054 <_obstack_memory_used@@Base+0x3c20>
  41a1d8:	ldr	x8, [sp, #24]
  41a1dc:	mov	w9, #0x7                   	// #7
  41a1e0:	mov	w22, wzr
  41a1e4:	str	w9, [x8]
  41a1e8:	mov	w8, #0x2                   	// #2
  41a1ec:	b	419fd4 <_obstack_memory_used@@Base+0x3ba0>
  41a1f0:	mov	w22, wzr
  41a1f4:	mov	w8, #0x2                   	// #2
  41a1f8:	b	419fd4 <_obstack_memory_used@@Base+0x3ba0>
  41a1fc:	mov	w22, wzr
  41a200:	ldr	x8, [sp, #24]
  41a204:	str	w0, [x8]
  41a208:	mov	w8, #0x2                   	// #2
  41a20c:	b	419fd4 <_obstack_memory_used@@Base+0x3ba0>
  41a210:	ldr	x0, [x21]
  41a214:	mov	w9, #0x1                   	// #1
  41a218:	bfi	x9, x8, #1, #63
  41a21c:	lsl	x1, x9, #2
  41a220:	str	x9, [sp, #16]
  41a224:	bl	402610 <realloc@plt>
  41a228:	cbz	x0, 41a240 <_obstack_memory_used@@Base+0x3e0c>
  41a22c:	mov	w8, wzr
  41a230:	str	x0, [x21]
  41a234:	cbz	w8, 41a15c <_obstack_memory_used@@Base+0x3d28>
  41a238:	mov	w22, wzr
  41a23c:	b	419fd4 <_obstack_memory_used@@Base+0x3ba0>
  41a240:	mov	w8, #0x6                   	// #6
  41a244:	cbnz	w8, 41a238 <_obstack_memory_used@@Base+0x3e04>
  41a248:	b	41a15c <_obstack_memory_used@@Base+0x3d28>
  41a24c:	cmp	w8, #0x2
  41a250:	b.eq	41a374 <_obstack_memory_used@@Base+0x3f40>  // b.none
  41a254:	cmp	w8, #0x6
  41a258:	b.eq	41a368 <_obstack_memory_used@@Base+0x3f34>  // b.none
  41a25c:	cmp	w8, #0x4
  41a260:	b.ne	41a31c <_obstack_memory_used@@Base+0x3ee8>  // b.any
  41a264:	ldr	x8, [x23, #72]
  41a268:	add	x8, x8, w26, sxtw
  41a26c:	str	x8, [x23, #72]
  41a270:	ldr	w8, [sp, #12]
  41a274:	cbz	w8, 41a280 <_obstack_memory_used@@Base+0x3e4c>
  41a278:	mov	x0, x20
  41a27c:	bl	41b664 <_obstack_memory_used@@Base+0x5230>
  41a280:	ldr	w8, [x19, #180]
  41a284:	cmp	w8, #0x2
  41a288:	b.lt	41a298 <_obstack_memory_used@@Base+0x3e64>  // b.tstop
  41a28c:	ldr	x1, [x19, #120]
  41a290:	mov	x0, x20
  41a294:	bl	41b684 <_obstack_memory_used@@Base+0x5250>
  41a298:	ldr	x8, [x21, #40]
  41a29c:	cbnz	x8, 41a2b8 <_obstack_memory_used@@Base+0x3e84>
  41a2a0:	ldr	x8, [x21, #48]
  41a2a4:	cbnz	x8, 41a2b8 <_obstack_memory_used@@Base+0x3e84>
  41a2a8:	ldr	x8, [x21, #56]
  41a2ac:	cbnz	x8, 41a2b8 <_obstack_memory_used@@Base+0x3e84>
  41a2b0:	ldr	x8, [x21, #64]
  41a2b4:	cbz	x8, 41a3ac <_obstack_memory_used@@Base+0x3f78>
  41a2b8:	ldrb	w8, [x19, #176]
  41a2bc:	add	x3, sp, #0x50
  41a2c0:	mov	x0, x19
  41a2c4:	mov	x1, xzr
  41a2c8:	orr	w8, w8, #0x2
  41a2cc:	strb	w8, [x19, #176]
  41a2d0:	ldr	w22, [sp, #88]
  41a2d4:	mov	w8, #0x6                   	// #6
  41a2d8:	mov	x2, xzr
  41a2dc:	strb	w8, [sp, #88]
  41a2e0:	str	x21, [sp, #80]
  41a2e4:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41a2e8:	cbz	x0, 41a42c <_obstack_memory_used@@Base+0x3ff8>
  41a2ec:	mov	x23, x0
  41a2f0:	mov	x9, xzr
  41a2f4:	and	w8, w22, #0xffffff00
  41a2f8:	ldr	x10, [x20, x9]
  41a2fc:	cbnz	x10, 41a320 <_obstack_memory_used@@Base+0x3eec>
  41a300:	add	x9, x9, #0x8
  41a304:	cmp	x9, #0x20
  41a308:	b.ne	41a2f8 <_obstack_memory_used@@Base+0x3ec4>  // b.any
  41a30c:	mov	x0, x20
  41a310:	bl	402770 <free@plt>
  41a314:	mov	x1, x23
  41a318:	b	41a360 <_obstack_memory_used@@Base+0x3f2c>
  41a31c:	b	41a388 <_obstack_memory_used@@Base+0x3f54>
  41a320:	orr	w8, w8, #0x3
  41a324:	add	x3, sp, #0x50
  41a328:	mov	x0, x19
  41a32c:	mov	x1, xzr
  41a330:	mov	x2, xzr
  41a334:	str	w8, [sp, #88]
  41a338:	str	x20, [sp, #80]
  41a33c:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41a340:	mov	x1, x0
  41a344:	cbz	x0, 41a420 <_obstack_memory_used@@Base+0x3fec>
  41a348:	mov	w3, #0xa                   	// #10
  41a34c:	mov	x0, x19
  41a350:	mov	x2, x23
  41a354:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a358:	mov	x1, x0
  41a35c:	cbz	x0, 41a420 <_obstack_memory_used@@Base+0x3fec>
  41a360:	mov	w8, wzr
  41a364:	tbz	wzr, #0, 41a388 <_obstack_memory_used@@Base+0x3f54>
  41a368:	mov	w8, #0xc                   	// #12
  41a36c:	ldr	x9, [sp, #24]
  41a370:	str	w8, [x9]
  41a374:	mov	x0, x20
  41a378:	bl	402770 <free@plt>
  41a37c:	mov	x0, x21
  41a380:	bl	417abc <_obstack_memory_used@@Base+0x1688>
  41a384:	mov	x1, xzr
  41a388:	ldp	x20, x19, [sp, #240]
  41a38c:	ldp	x22, x21, [sp, #224]
  41a390:	ldp	x24, x23, [sp, #208]
  41a394:	ldp	x26, x25, [sp, #192]
  41a398:	ldp	x28, x27, [sp, #176]
  41a39c:	ldp	x29, x30, [sp, #160]
  41a3a0:	mov	x0, x1
  41a3a4:	add	sp, sp, #0x100
  41a3a8:	ret
  41a3ac:	ldr	w8, [x19, #180]
  41a3b0:	cmp	w8, #0x2
  41a3b4:	b.lt	41a3c8 <_obstack_memory_used@@Base+0x3f94>  // b.tstop
  41a3b8:	ldr	x8, [x21, #72]
  41a3bc:	cbnz	x8, 41a2b8 <_obstack_memory_used@@Base+0x3e84>
  41a3c0:	ldrb	w8, [x21, #32]
  41a3c4:	tbnz	w8, #0, 41a2b8 <_obstack_memory_used@@Base+0x3e84>
  41a3c8:	mov	x0, x21
  41a3cc:	bl	417abc <_obstack_memory_used@@Base+0x1688>
  41a3d0:	mov	w8, #0x3                   	// #3
  41a3d4:	add	x3, sp, #0x50
  41a3d8:	mov	x0, x19
  41a3dc:	mov	x1, xzr
  41a3e0:	mov	x2, xzr
  41a3e4:	strb	w8, [sp, #88]
  41a3e8:	str	x20, [sp, #80]
  41a3ec:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41a3f0:	mov	x1, x0
  41a3f4:	cbnz	x0, 41a388 <_obstack_memory_used@@Base+0x3f54>
  41a3f8:	b	41a368 <_obstack_memory_used@@Base+0x3f34>
  41a3fc:	mov	x0, x20
  41a400:	bl	402770 <free@plt>
  41a404:	mov	x0, x21
  41a408:	bl	402770 <free@plt>
  41a40c:	ldr	x9, [sp, #24]
  41a410:	mov	w8, #0xc                   	// #12
  41a414:	mov	x1, xzr
  41a418:	str	w8, [x9]
  41a41c:	b	41a388 <_obstack_memory_used@@Base+0x3f54>
  41a420:	mov	w8, #0x1                   	// #1
  41a424:	tbnz	w8, #0, 41a368 <_obstack_memory_used@@Base+0x3f34>
  41a428:	b	41a388 <_obstack_memory_used@@Base+0x3f54>
  41a42c:	mov	w8, #0x1                   	// #1
  41a430:	tbnz	w8, #0, 41a368 <_obstack_memory_used@@Base+0x3f34>
  41a434:	b	41a388 <_obstack_memory_used@@Base+0x3f54>
  41a438:	stp	x29, x30, [sp, #-48]!
  41a43c:	stp	x20, x19, [sp, #32]
  41a440:	ldrb	w8, [x0, #176]
  41a444:	mov	x19, x0
  41a448:	str	x21, [sp, #16]
  41a44c:	mov	x29, sp
  41a450:	orr	w9, w8, #0x10
  41a454:	strb	w9, [x0, #176]
  41a458:	tbnz	w8, #3, 41a484 <_obstack_memory_used@@Base+0x4050>
  41a45c:	mov	x10, #0x7fffffe07fffffe     	// #576460743847706622
  41a460:	mov	x9, #0x3ff000000000000     	// #287948901175001088
  41a464:	movk	x10, #0x87ff, lsl #16
  41a468:	stp	x9, x10, [x19, #184]
  41a46c:	tbz	w8, #2, 41a490 <_obstack_memory_used@@Base+0x405c>
  41a470:	stp	xzr, xzr, [x19, #200]
  41a474:	ldp	x20, x19, [sp, #32]
  41a478:	ldr	x21, [sp, #16]
  41a47c:	ldp	x29, x30, [sp], #48
  41a480:	ret
  41a484:	mov	x21, xzr
  41a488:	mov	x20, xzr
  41a48c:	b	41a498 <_obstack_memory_used@@Base+0x4064>
  41a490:	mov	w20, #0x2                   	// #2
  41a494:	mov	w21, #0x80                  	// #128
  41a498:	bl	402760 <__ctype_b_loc@plt>
  41a49c:	ldr	x8, [x0]
  41a4a0:	mov	w9, #0x1                   	// #1
  41a4a4:	add	x8, x8, x21, lsl #1
  41a4a8:	b	41a4c0 <_obstack_memory_used@@Base+0x408c>
  41a4ac:	add	x20, x20, #0x1
  41a4b0:	add	x21, x21, #0x40
  41a4b4:	cmp	x20, #0x4
  41a4b8:	add	x8, x8, #0x80
  41a4bc:	b.eq	41a474 <_obstack_memory_used@@Base+0x4040>  // b.none
  41a4c0:	add	x11, x19, x20, lsl #3
  41a4c4:	mov	x10, xzr
  41a4c8:	add	x11, x11, #0xb8
  41a4cc:	b	41a4ec <_obstack_memory_used@@Base+0x40b8>
  41a4d0:	ldr	x12, [x11]
  41a4d4:	lsl	x13, x9, x10
  41a4d8:	orr	x12, x12, x13
  41a4dc:	str	x12, [x11]
  41a4e0:	add	x10, x10, #0x1
  41a4e4:	cmp	x10, #0x40
  41a4e8:	b.eq	41a4ac <_obstack_memory_used@@Base+0x4078>  // b.none
  41a4ec:	add	x12, x21, x10
  41a4f0:	cmp	x12, #0x5f
  41a4f4:	b.eq	41a4d0 <_obstack_memory_used@@Base+0x409c>  // b.none
  41a4f8:	ldrh	w12, [x8, x10, lsl #1]
  41a4fc:	tbz	w12, #3, 41a4e0 <_obstack_memory_used@@Base+0x40ac>
  41a500:	b	41a4d0 <_obstack_memory_used@@Base+0x409c>
  41a504:	sub	sp, sp, #0x70
  41a508:	stp	x29, x30, [sp, #32]
  41a50c:	stp	x26, x25, [sp, #48]
  41a510:	stp	x22, x21, [sp, #80]
  41a514:	add	x29, sp, #0x20
  41a518:	mov	x26, x1
  41a51c:	mov	x22, x0
  41a520:	mov	w0, #0x20                  	// #32
  41a524:	mov	w1, #0x1                   	// #1
  41a528:	stp	x24, x23, [sp, #64]
  41a52c:	stp	x20, x19, [sp, #96]
  41a530:	mov	x19, x5
  41a534:	mov	w23, w4
  41a538:	mov	x24, x3
  41a53c:	mov	x25, x2
  41a540:	stur	xzr, [x29, #-8]
  41a544:	bl	4025d0 <calloc@plt>
  41a548:	cbz	x0, 41a670 <_obstack_memory_used@@Base+0x423c>
  41a54c:	mov	x20, x0
  41a550:	mov	w0, #0x50                  	// #80
  41a554:	mov	w1, #0x1                   	// #1
  41a558:	bl	4025d0 <calloc@plt>
  41a55c:	cbz	x0, 41a6a8 <_obstack_memory_used@@Base+0x4274>
  41a560:	ldrb	w8, [x0, #32]
  41a564:	mov	x21, x0
  41a568:	sub	x3, x29, #0x8
  41a56c:	mov	x1, x20
  41a570:	bfxil	w8, w23, #0, #1
  41a574:	strb	w8, [x0, #32]
  41a578:	mov	x0, x26
  41a57c:	mov	x2, x21
  41a580:	mov	x4, x25
  41a584:	mov	x5, xzr
  41a588:	bl	41afa8 <_obstack_memory_used@@Base+0x4b74>
  41a58c:	cbnz	w0, 41a6b4 <_obstack_memory_used@@Base+0x4280>
  41a590:	ldrb	w8, [x24]
  41a594:	cbz	w8, 41a5b0 <_obstack_memory_used@@Base+0x417c>
  41a598:	add	x24, x24, #0x1
  41a59c:	and	x1, x8, #0xff
  41a5a0:	mov	x0, x20
  41a5a4:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41a5a8:	ldrb	w8, [x24], #1
  41a5ac:	cbnz	w8, 41a59c <_obstack_memory_used@@Base+0x4168>
  41a5b0:	tbz	w23, #0, 41a5bc <_obstack_memory_used@@Base+0x4188>
  41a5b4:	mov	x0, x20
  41a5b8:	bl	41b664 <_obstack_memory_used@@Base+0x5230>
  41a5bc:	ldr	w8, [x22, #180]
  41a5c0:	cmp	w8, #0x2
  41a5c4:	b.lt	41a5d4 <_obstack_memory_used@@Base+0x41a0>  // b.tstop
  41a5c8:	ldr	x1, [x22, #120]
  41a5cc:	mov	x0, x20
  41a5d0:	bl	41b684 <_obstack_memory_used@@Base+0x5250>
  41a5d4:	ldr	w8, [sp, #16]
  41a5d8:	add	x3, sp, #0x8
  41a5dc:	mov	x0, x22
  41a5e0:	mov	x1, xzr
  41a5e4:	and	w24, w8, #0xff800000
  41a5e8:	orr	w8, w24, #0x3
  41a5ec:	mov	x2, xzr
  41a5f0:	str	x20, [sp, #8]
  41a5f4:	str	w8, [sp, #16]
  41a5f8:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41a5fc:	cbz	x0, 41a660 <_obstack_memory_used@@Base+0x422c>
  41a600:	ldr	w8, [x22, #180]
  41a604:	mov	x23, x0
  41a608:	cmp	w8, #0x2
  41a60c:	b.lt	41a680 <_obstack_memory_used@@Base+0x424c>  // b.tstop
  41a610:	orr	w8, w24, #0x6
  41a614:	str	w8, [sp, #16]
  41a618:	str	x21, [sp, #8]
  41a61c:	ldrb	w8, [x22, #176]
  41a620:	add	x3, sp, #0x8
  41a624:	mov	x0, x22
  41a628:	mov	x1, xzr
  41a62c:	orr	w8, w8, #0x2
  41a630:	mov	x2, xzr
  41a634:	strb	w8, [x22, #176]
  41a638:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41a63c:	cbz	x0, 41a6d4 <_obstack_memory_used@@Base+0x42a0>
  41a640:	mov	x2, x0
  41a644:	mov	w3, #0xa                   	// #10
  41a648:	mov	x0, x22
  41a64c:	mov	x1, x23
  41a650:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a654:	mov	x23, x0
  41a658:	mov	w8, wzr
  41a65c:	tbz	w8, #0, 41a688 <_obstack_memory_used@@Base+0x4254>
  41a660:	mov	x0, x20
  41a664:	bl	402770 <free@plt>
  41a668:	mov	x0, x21
  41a66c:	bl	417abc <_obstack_memory_used@@Base+0x1688>
  41a670:	mov	x23, xzr
  41a674:	mov	w8, #0xc                   	// #12
  41a678:	str	w8, [x19]
  41a67c:	b	41a688 <_obstack_memory_used@@Base+0x4254>
  41a680:	mov	x0, x21
  41a684:	bl	417abc <_obstack_memory_used@@Base+0x1688>
  41a688:	mov	x0, x23
  41a68c:	ldp	x20, x19, [sp, #96]
  41a690:	ldp	x22, x21, [sp, #80]
  41a694:	ldp	x24, x23, [sp, #64]
  41a698:	ldp	x26, x25, [sp, #48]
  41a69c:	ldp	x29, x30, [sp, #32]
  41a6a0:	add	sp, sp, #0x70
  41a6a4:	ret
  41a6a8:	mov	x0, x20
  41a6ac:	bl	402770 <free@plt>
  41a6b0:	b	41a670 <_obstack_memory_used@@Base+0x423c>
  41a6b4:	mov	w25, w0
  41a6b8:	mov	x0, x20
  41a6bc:	bl	402770 <free@plt>
  41a6c0:	mov	x0, x21
  41a6c4:	bl	417abc <_obstack_memory_used@@Base+0x1688>
  41a6c8:	mov	x23, xzr
  41a6cc:	str	w25, [x19]
  41a6d0:	b	41a688 <_obstack_memory_used@@Base+0x4254>
  41a6d4:	mov	w8, #0x1                   	// #1
  41a6d8:	tbnz	w8, #0, 41a660 <_obstack_memory_used@@Base+0x422c>
  41a6dc:	b	41a688 <_obstack_memory_used@@Base+0x4254>
  41a6e0:	sub	sp, sp, #0x70
  41a6e4:	stp	x29, x30, [sp, #16]
  41a6e8:	stp	x26, x25, [sp, #48]
  41a6ec:	stp	x24, x23, [sp, #64]
  41a6f0:	stp	x22, x21, [sp, #80]
  41a6f4:	stp	x20, x19, [sp, #96]
  41a6f8:	ldr	q0, [x3]
  41a6fc:	str	x27, [sp, #32]
  41a700:	ldr	x27, [x1, #72]
  41a704:	mov	x20, x5
  41a708:	str	q0, [sp]
  41a70c:	ldrb	w8, [x3, #8]
  41a710:	mov	x25, x4
  41a714:	mov	x24, x3
  41a718:	mov	x21, x2
  41a71c:	mov	x26, x1
  41a720:	cmp	w8, #0x17
  41a724:	mov	x19, x0
  41a728:	add	x29, sp, #0x10
  41a72c:	b.ne	41a790 <_obstack_memory_used@@Base+0x435c>  // b.any
  41a730:	mov	x0, x26
  41a734:	mov	x1, x24
  41a738:	mov	x2, x25
  41a73c:	bl	41b900 <_obstack_memory_used@@Base+0x54cc>
  41a740:	mov	x23, x0
  41a744:	cmn	x0, #0x1
  41a748:	b.eq	41a7a8 <_obstack_memory_used@@Base+0x4374>  // b.none
  41a74c:	cmn	x23, #0x2
  41a750:	b.eq	41a7cc <_obstack_memory_used@@Base+0x4398>  // b.none
  41a754:	ldrb	w8, [x24, #8]
  41a758:	mov	x22, x23
  41a75c:	cmp	w8, #0x18
  41a760:	b.eq	41a7d8 <_obstack_memory_used@@Base+0x43a4>  // b.none
  41a764:	cmp	w8, #0x1
  41a768:	b.ne	41a7d4 <_obstack_memory_used@@Base+0x43a0>  // b.any
  41a76c:	ldrb	w8, [x24]
  41a770:	cmp	w8, #0x2c
  41a774:	b.ne	41a7d4 <_obstack_memory_used@@Base+0x43a0>  // b.any
  41a778:	mov	x0, x26
  41a77c:	mov	x1, x24
  41a780:	mov	x2, x25
  41a784:	bl	41b900 <_obstack_memory_used@@Base+0x54cc>
  41a788:	mov	x22, x0
  41a78c:	b	41a7d8 <_obstack_memory_used@@Base+0x43a4>
  41a790:	cmp	w8, #0x12
  41a794:	cset	w23, eq  // eq = none
  41a798:	cmp	w8, #0x13
  41a79c:	mov	w8, #0x1                   	// #1
  41a7a0:	cneg	x22, x8, ne  // ne = any
  41a7a4:	b	41a814 <_obstack_memory_used@@Base+0x43e0>
  41a7a8:	ldrb	w8, [x24, #8]
  41a7ac:	cmp	w8, #0x1
  41a7b0:	b.ne	41a90c <_obstack_memory_used@@Base+0x44d8>  // b.any
  41a7b4:	ldrb	w8, [x24]
  41a7b8:	cmp	w8, #0x2c
  41a7bc:	b.ne	41a90c <_obstack_memory_used@@Base+0x44d8>  // b.any
  41a7c0:	mov	x23, xzr
  41a7c4:	cmn	x23, #0x2
  41a7c8:	b.ne	41a754 <_obstack_memory_used@@Base+0x4320>  // b.any
  41a7cc:	mov	x22, xzr
  41a7d0:	b	41a7d8 <_obstack_memory_used@@Base+0x43a4>
  41a7d4:	mov	x22, #0xfffffffffffffffe    	// #-2
  41a7d8:	cmn	x23, #0x2
  41a7dc:	b.eq	41a9c4 <_obstack_memory_used@@Base+0x4590>  // b.none
  41a7e0:	cmn	x22, #0x2
  41a7e4:	b.eq	41a9c4 <_obstack_memory_used@@Base+0x4590>  // b.none
  41a7e8:	cmn	x22, #0x1
  41a7ec:	b.eq	41a7f8 <_obstack_memory_used@@Base+0x43c4>  // b.none
  41a7f0:	cmp	x23, x22
  41a7f4:	b.gt	41a90c <_obstack_memory_used@@Base+0x44d8>
  41a7f8:	ldrb	w8, [x24, #8]
  41a7fc:	cmp	w8, #0x18
  41a800:	b.ne	41a90c <_obstack_memory_used@@Base+0x44d8>  // b.any
  41a804:	cmn	x22, #0x1
  41a808:	csel	x8, x23, x22, eq  // eq = none
  41a80c:	cmp	x8, #0x8, lsl #12
  41a810:	b.ge	41a9e0 <_obstack_memory_used@@Base+0x45ac>  // b.tcont
  41a814:	mov	x0, x24
  41a818:	mov	x1, x26
  41a81c:	mov	x2, x25
  41a820:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  41a824:	cbz	x19, 41a918 <_obstack_memory_used@@Base+0x44e4>
  41a828:	orr	x8, x22, x23
  41a82c:	cbz	x8, 41a93c <_obstack_memory_used@@Base+0x4508>
  41a830:	subs	x25, x23, #0x1
  41a834:	b.ge	41a958 <_obstack_memory_used@@Base+0x4524>  // b.tcont
  41a838:	mov	x24, xzr
  41a83c:	ldrb	w8, [x19, #48]
  41a840:	cmp	w8, #0x11
  41a844:	b.ne	41a85c <_obstack_memory_used@@Base+0x4428>  // b.any
  41a848:	ldr	x2, [x19, #40]
  41a84c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x4bcc>
  41a850:	add	x1, x1, #0xabc
  41a854:	mov	x0, x19
  41a858:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  41a85c:	cmn	x22, #0x1
  41a860:	mov	w8, #0xa                   	// #10
  41a864:	cinc	w3, w8, eq  // eq = none
  41a868:	mov	x0, x21
  41a86c:	mov	x1, x19
  41a870:	mov	x2, xzr
  41a874:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a878:	cbz	x0, 41a9bc <_obstack_memory_used@@Base+0x4588>
  41a87c:	add	x8, x23, #0x2
  41a880:	mov	x25, x0
  41a884:	cmp	x8, x22
  41a888:	b.gt	41a8e4 <_obstack_memory_used@@Base+0x44b0>
  41a88c:	add	x23, x23, #0x1
  41a890:	mov	x0, x19
  41a894:	mov	x1, x21
  41a898:	bl	41b9d4 <_obstack_memory_used@@Base+0x55a0>
  41a89c:	mov	x19, x0
  41a8a0:	mov	w3, #0x10                  	// #16
  41a8a4:	mov	x0, x21
  41a8a8:	mov	x1, x25
  41a8ac:	mov	x2, x19
  41a8b0:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a8b4:	cbz	x19, 41a9bc <_obstack_memory_used@@Base+0x4588>
  41a8b8:	mov	x1, x0
  41a8bc:	cbz	x0, 41a9bc <_obstack_memory_used@@Base+0x4588>
  41a8c0:	mov	w3, #0xa                   	// #10
  41a8c4:	mov	x0, x21
  41a8c8:	mov	x2, xzr
  41a8cc:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a8d0:	cbz	x0, 41a9bc <_obstack_memory_used@@Base+0x4588>
  41a8d4:	add	x23, x23, #0x1
  41a8d8:	mov	x25, x0
  41a8dc:	cmp	x23, x22
  41a8e0:	b.lt	41a890 <_obstack_memory_used@@Base+0x445c>  // b.tstop
  41a8e4:	cbz	x24, 41a904 <_obstack_memory_used@@Base+0x44d0>
  41a8e8:	mov	w3, #0x10                  	// #16
  41a8ec:	mov	x0, x21
  41a8f0:	mov	x1, x24
  41a8f4:	mov	x2, x25
  41a8f8:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a8fc:	mov	x19, x0
  41a900:	b	41a918 <_obstack_memory_used@@Base+0x44e4>
  41a904:	mov	x19, x25
  41a908:	b	41a918 <_obstack_memory_used@@Base+0x44e4>
  41a90c:	mov	w8, #0xa                   	// #10
  41a910:	mov	x19, xzr
  41a914:	str	w8, [x20]
  41a918:	mov	x0, x19
  41a91c:	ldp	x20, x19, [sp, #96]
  41a920:	ldp	x22, x21, [sp, #80]
  41a924:	ldp	x24, x23, [sp, #64]
  41a928:	ldp	x26, x25, [sp, #48]
  41a92c:	ldr	x27, [sp, #32]
  41a930:	ldp	x29, x30, [sp, #16]
  41a934:	add	sp, sp, #0x70
  41a938:	ret
  41a93c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2bcc>
  41a940:	add	x1, x1, #0x808
  41a944:	mov	x0, x19
  41a948:	mov	x2, xzr
  41a94c:	bl	419764 <_obstack_memory_used@@Base+0x3330>
  41a950:	mov	x19, xzr
  41a954:	b	41a918 <_obstack_memory_used@@Base+0x44e4>
  41a958:	mov	x24, x19
  41a95c:	b.eq	41a998 <_obstack_memory_used@@Base+0x4564>  // b.none
  41a960:	mov	x0, x19
  41a964:	mov	x1, x21
  41a968:	bl	41b9d4 <_obstack_memory_used@@Base+0x55a0>
  41a96c:	mov	x19, x0
  41a970:	mov	w3, #0x10                  	// #16
  41a974:	mov	x0, x21
  41a978:	mov	x1, x24
  41a97c:	mov	x2, x19
  41a980:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41a984:	cbz	x19, 41a9bc <_obstack_memory_used@@Base+0x4588>
  41a988:	mov	x24, x0
  41a98c:	cbz	x0, 41a9bc <_obstack_memory_used@@Base+0x4588>
  41a990:	subs	x25, x25, #0x1
  41a994:	b.ne	41a960 <_obstack_memory_used@@Base+0x452c>  // b.any
  41a998:	cmp	x23, x22
  41a99c:	b.ne	41a9a8 <_obstack_memory_used@@Base+0x4574>  // b.any
  41a9a0:	mov	x19, x24
  41a9a4:	b	41a918 <_obstack_memory_used@@Base+0x44e4>
  41a9a8:	mov	x0, x19
  41a9ac:	mov	x1, x21
  41a9b0:	bl	41b9d4 <_obstack_memory_used@@Base+0x55a0>
  41a9b4:	mov	x19, x0
  41a9b8:	cbnz	x0, 41a83c <_obstack_memory_used@@Base+0x4408>
  41a9bc:	mov	w8, #0xc                   	// #12
  41a9c0:	b	41a910 <_obstack_memory_used@@Base+0x44dc>
  41a9c4:	tbz	w25, #21, 41a9e8 <_obstack_memory_used@@Base+0x45b4>
  41a9c8:	str	x27, [x26, #72]
  41a9cc:	ldr	q0, [sp]
  41a9d0:	mov	w8, #0x1                   	// #1
  41a9d4:	str	q0, [x24]
  41a9d8:	strb	w8, [x24, #8]
  41a9dc:	b	41a918 <_obstack_memory_used@@Base+0x44e4>
  41a9e0:	mov	w8, #0xf                   	// #15
  41a9e4:	b	41a910 <_obstack_memory_used@@Base+0x44dc>
  41a9e8:	ldrb	w8, [x24, #8]
  41a9ec:	mov	x19, xzr
  41a9f0:	cmp	w8, #0x2
  41a9f4:	mov	w8, #0x9                   	// #9
  41a9f8:	cinc	w8, w8, ne  // ne = any
  41a9fc:	b	41a914 <_obstack_memory_used@@Base+0x44e0>
  41aa00:	ldr	x9, [x1, #104]
  41aa04:	ldr	x8, [x1, #72]
  41aa08:	cmp	x9, x8
  41aa0c:	b.le	41aa80 <_obstack_memory_used@@Base+0x464c>
  41aa10:	ldr	x9, [x1, #8]
  41aa14:	ldrb	w9, [x9, x8]
  41aa18:	strb	w9, [x0]
  41aa1c:	ldr	w8, [x1, #144]
  41aa20:	cmp	w8, #0x2
  41aa24:	b.lt	41aa48 <_obstack_memory_used@@Base+0x4614>  // b.tstop
  41aa28:	ldr	x8, [x1, #72]
  41aa2c:	ldr	x10, [x1, #48]
  41aa30:	cmp	x8, x10
  41aa34:	b.eq	41aa48 <_obstack_memory_used@@Base+0x4614>  // b.none
  41aa38:	ldr	x10, [x1, #16]
  41aa3c:	ldr	w8, [x10, x8, lsl #2]
  41aa40:	cmn	w8, #0x1
  41aa44:	b.eq	41aae0 <_obstack_memory_used@@Base+0x46ac>  // b.none
  41aa48:	tbz	w2, #0, 41aa90 <_obstack_memory_used@@Base+0x465c>
  41aa4c:	cmp	w9, #0x5c
  41aa50:	b.ne	41aa90 <_obstack_memory_used@@Base+0x465c>  // b.any
  41aa54:	ldr	x8, [x1, #72]
  41aa58:	ldr	x10, [x1, #88]
  41aa5c:	add	x8, x8, #0x1
  41aa60:	cmp	x8, x10
  41aa64:	b.ge	41aa90 <_obstack_memory_used@@Base+0x465c>  // b.tcont
  41aa68:	ldr	x9, [x1, #8]
  41aa6c:	str	x8, [x1, #72]
  41aa70:	ldrb	w9, [x9, x8]
  41aa74:	mov	w8, #0x1                   	// #1
  41aa78:	strb	w9, [x0]
  41aa7c:	b	41aae4 <_obstack_memory_used@@Base+0x46b0>
  41aa80:	mov	w9, #0x2                   	// #2
  41aa84:	strb	w9, [x0, #8]
  41aa88:	mov	w0, wzr
  41aa8c:	ret
  41aa90:	cmp	w9, #0x5c
  41aa94:	b.gt	41aac8 <_obstack_memory_used@@Base+0x4694>
  41aa98:	cmp	w9, #0x2d
  41aa9c:	b.eq	41aaf0 <_obstack_memory_used@@Base+0x46bc>  // b.none
  41aaa0:	cmp	w9, #0x5b
  41aaa4:	b.ne	41aae0 <_obstack_memory_used@@Base+0x46ac>  // b.any
  41aaa8:	ldr	x8, [x1, #72]
  41aaac:	ldr	x10, [x1, #88]
  41aab0:	add	x8, x8, #0x1
  41aab4:	cmp	x8, x10
  41aab8:	b.ge	41ab08 <_obstack_memory_used@@Base+0x46d4>  // b.tcont
  41aabc:	ldr	x10, [x1, #8]
  41aac0:	ldrb	w8, [x10, x8]
  41aac4:	b	41ab0c <_obstack_memory_used@@Base+0x46d8>
  41aac8:	cmp	w9, #0x5d
  41aacc:	b.eq	41aaf8 <_obstack_memory_used@@Base+0x46c4>  // b.none
  41aad0:	cmp	w9, #0x5e
  41aad4:	b.ne	41aae0 <_obstack_memory_used@@Base+0x46ac>  // b.any
  41aad8:	mov	w8, #0x19                  	// #25
  41aadc:	b	41aafc <_obstack_memory_used@@Base+0x46c8>
  41aae0:	mov	w8, #0x1                   	// #1
  41aae4:	strb	w8, [x0, #8]
  41aae8:	mov	w0, w8
  41aaec:	ret
  41aaf0:	mov	w8, #0x16                  	// #22
  41aaf4:	b	41aafc <_obstack_memory_used@@Base+0x46c8>
  41aaf8:	mov	w8, #0x15                  	// #21
  41aafc:	strb	w8, [x0, #8]
  41ab00:	mov	w0, #0x1                   	// #1
  41ab04:	ret
  41ab08:	mov	w8, wzr
  41ab0c:	cmp	w8, #0x3d
  41ab10:	strb	w8, [x0]
  41ab14:	b.eq	41ab48 <_obstack_memory_used@@Base+0x4714>  // b.none
  41ab18:	cmp	w8, #0x3a
  41ab1c:	b.eq	41ab30 <_obstack_memory_used@@Base+0x46fc>  // b.none
  41ab20:	cmp	w8, #0x2e
  41ab24:	b.ne	41ab34 <_obstack_memory_used@@Base+0x4700>  // b.any
  41ab28:	mov	w8, #0x1a                  	// #26
  41ab2c:	b	41ab54 <_obstack_memory_used@@Base+0x4720>
  41ab30:	tbnz	w2, #2, 41ab50 <_obstack_memory_used@@Base+0x471c>
  41ab34:	mov	w8, #0x1                   	// #1
  41ab38:	strb	w8, [x0, #8]
  41ab3c:	strb	w9, [x0]
  41ab40:	mov	w0, w8
  41ab44:	ret
  41ab48:	mov	w8, #0x1c                  	// #28
  41ab4c:	b	41ab54 <_obstack_memory_used@@Base+0x4720>
  41ab50:	mov	w8, #0x1e                  	// #30
  41ab54:	strb	w8, [x0, #8]
  41ab58:	mov	w0, #0x2                   	// #2
  41ab5c:	ret
  41ab60:	add	x8, x1, #0x3f
  41ab64:	cmp	x1, #0x0
  41ab68:	csel	x8, x8, x1, lt  // lt = tstop
  41ab6c:	asr	x8, x8, #6
  41ab70:	lsl	x8, x8, #3
  41ab74:	ldr	x9, [x0, x8]
  41ab78:	mov	w10, #0x1                   	// #1
  41ab7c:	lsl	x10, x10, x1
  41ab80:	orr	x9, x9, x10
  41ab84:	str	x9, [x0, x8]
  41ab88:	ret
  41ab8c:	sub	sp, sp, #0x60
  41ab90:	stp	x29, x30, [sp, #16]
  41ab94:	stp	x26, x25, [sp, #32]
  41ab98:	stp	x24, x23, [sp, #48]
  41ab9c:	stp	x22, x21, [sp, #64]
  41aba0:	stp	x20, x19, [sp, #80]
  41aba4:	ldr	x24, [x1, #72]
  41aba8:	mov	x20, x1
  41abac:	mov	x19, x0
  41abb0:	mov	x0, x1
  41abb4:	mov	x1, x24
  41abb8:	add	x29, sp, #0x10
  41abbc:	mov	w23, w5
  41abc0:	mov	x22, x4
  41abc4:	mov	w26, w3
  41abc8:	mov	x21, x2
  41abcc:	bl	41b6a8 <_obstack_memory_used@@Base+0x5274>
  41abd0:	cmp	w0, #0x2
  41abd4:	b.lt	41ac0c <_obstack_memory_used@@Base+0x47d8>  // b.tstop
  41abd8:	mov	w25, w0
  41abdc:	mov	w8, #0x1                   	// #1
  41abe0:	mov	x0, x20
  41abe4:	mov	x1, x24
  41abe8:	str	w8, [x19]
  41abec:	bl	4195f8 <_obstack_memory_used@@Base+0x31c4>
  41abf0:	mov	w8, w0
  41abf4:	str	w8, [x19, #8]
  41abf8:	ldr	x8, [x20, #72]
  41abfc:	mov	w0, wzr
  41ac00:	add	x8, x8, w25, sxtw
  41ac04:	str	x8, [x20, #72]
  41ac08:	b	41ac80 <_obstack_memory_used@@Base+0x484c>
  41ac0c:	add	x8, x24, w26, sxtw
  41ac10:	str	x8, [x20, #72]
  41ac14:	ldrb	w8, [x21, #8]
  41ac18:	sub	w8, w8, #0x16
  41ac1c:	cmp	w8, #0x8
  41ac20:	b.hi	41ac70 <_obstack_memory_used@@Base+0x483c>  // b.pmore
  41ac24:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41ac28:	add	x9, x9, #0x7bf
  41ac2c:	adr	x10, 41ac3c <_obstack_memory_used@@Base+0x4808>
  41ac30:	ldrb	w11, [x9, x8]
  41ac34:	add	x10, x10, x11, lsl #2
  41ac38:	br	x10
  41ac3c:	mov	x0, x19
  41ac40:	mov	x1, x20
  41ac44:	mov	x2, x21
  41ac48:	bl	41b700 <_obstack_memory_used@@Base+0x52cc>
  41ac4c:	b	41ac80 <_obstack_memory_used@@Base+0x484c>
  41ac50:	tbnz	w23, #0, 41ac70 <_obstack_memory_used@@Base+0x483c>
  41ac54:	mov	x0, sp
  41ac58:	mov	x1, x20
  41ac5c:	mov	x2, x22
  41ac60:	bl	41aa00 <_obstack_memory_used@@Base+0x45cc>
  41ac64:	ldrb	w8, [sp, #8]
  41ac68:	cmp	w8, #0x15
  41ac6c:	b.ne	41ac9c <_obstack_memory_used@@Base+0x4868>  // b.any
  41ac70:	str	wzr, [x19]
  41ac74:	ldrb	w8, [x21]
  41ac78:	mov	w0, wzr
  41ac7c:	strb	w8, [x19, #8]
  41ac80:	ldp	x20, x19, [sp, #80]
  41ac84:	ldp	x22, x21, [sp, #64]
  41ac88:	ldp	x24, x23, [sp, #48]
  41ac8c:	ldp	x26, x25, [sp, #32]
  41ac90:	ldp	x29, x30, [sp, #16]
  41ac94:	add	sp, sp, #0x60
  41ac98:	ret
  41ac9c:	mov	w0, #0xb                   	// #11
  41aca0:	b	41ac80 <_obstack_memory_used@@Base+0x484c>
  41aca4:	stp	x29, x30, [sp, #-80]!
  41aca8:	stp	x26, x25, [sp, #16]
  41acac:	stp	x24, x23, [sp, #32]
  41acb0:	stp	x22, x21, [sp, #48]
  41acb4:	stp	x20, x19, [sp, #64]
  41acb8:	ldr	w26, [x4]
  41acbc:	mov	x22, x0
  41acc0:	mov	w0, #0xb                   	// #11
  41acc4:	mov	x29, sp
  41acc8:	cmp	w26, #0x2
  41accc:	b.eq	41ae84 <_obstack_memory_used@@Base+0x4a50>  // b.none
  41acd0:	cmp	w26, #0x4
  41acd4:	b.eq	41ae84 <_obstack_memory_used@@Base+0x4a50>  // b.none
  41acd8:	ldr	w25, [x5]
  41acdc:	mov	x23, x5
  41ace0:	mov	w0, #0xb                   	// #11
  41ace4:	cmp	w25, #0x2
  41ace8:	b.eq	41ae84 <_obstack_memory_used@@Base+0x4a50>  // b.none
  41acec:	cmp	w25, #0x4
  41acf0:	b.eq	41ae84 <_obstack_memory_used@@Base+0x4a50>  // b.none
  41acf4:	mov	x24, x4
  41acf8:	mov	x21, x3
  41acfc:	mov	x20, x2
  41ad00:	mov	x19, x1
  41ad04:	cmp	w26, #0x3
  41ad08:	b.ne	41ad1c <_obstack_memory_used@@Base+0x48e8>  // b.any
  41ad0c:	ldr	x0, [x24, #8]
  41ad10:	bl	402380 <strlen@plt>
  41ad14:	cmp	x0, #0x1
  41ad18:	b.hi	41ae9c <_obstack_memory_used@@Base+0x4a68>  // b.pmore
  41ad1c:	cmp	w25, #0x3
  41ad20:	b.ne	41ad34 <_obstack_memory_used@@Base+0x4900>  // b.any
  41ad24:	ldr	x0, [x23, #8]
  41ad28:	bl	402380 <strlen@plt>
  41ad2c:	cmp	x0, #0x1
  41ad30:	b.hi	41ae9c <_obstack_memory_used@@Base+0x4a68>  // b.pmore
  41ad34:	cmp	w26, #0x3
  41ad38:	b.eq	41ad60 <_obstack_memory_used@@Base+0x492c>  // b.none
  41ad3c:	cbnz	w26, 41ad74 <_obstack_memory_used@@Base+0x4940>
  41ad40:	ldrb	w0, [x24, #8]
  41ad44:	cmp	w25, #0x3
  41ad48:	b.ne	41ad80 <_obstack_memory_used@@Base+0x494c>  // b.any
  41ad4c:	ldr	x8, [x23, #8]
  41ad50:	ldrb	w25, [x8]
  41ad54:	cmp	w26, #0x3
  41ad58:	b.ne	41ada0 <_obstack_memory_used@@Base+0x496c>  // b.any
  41ad5c:	b	41ada4 <_obstack_memory_used@@Base+0x4970>
  41ad60:	ldr	x8, [x24, #8]
  41ad64:	ldrb	w0, [x8]
  41ad68:	cmp	w25, #0x3
  41ad6c:	b.ne	41ad80 <_obstack_memory_used@@Base+0x494c>  // b.any
  41ad70:	b	41ad4c <_obstack_memory_used@@Base+0x4918>
  41ad74:	mov	w0, wzr
  41ad78:	cmp	w25, #0x3
  41ad7c:	b.eq	41ad4c <_obstack_memory_used@@Base+0x4918>  // b.none
  41ad80:	cbnz	w25, 41ad94 <_obstack_memory_used@@Base+0x4960>
  41ad84:	ldrb	w25, [x23, #8]
  41ad88:	cmp	w26, #0x3
  41ad8c:	b.ne	41ada0 <_obstack_memory_used@@Base+0x496c>  // b.any
  41ad90:	b	41ada4 <_obstack_memory_used@@Base+0x4970>
  41ad94:	mov	w25, wzr
  41ad98:	cmp	w26, #0x3
  41ad9c:	b.eq	41ada4 <_obstack_memory_used@@Base+0x4970>  // b.none
  41ada0:	cbnz	w26, 41adb4 <_obstack_memory_used@@Base+0x4980>
  41ada4:	mov	x1, x20
  41ada8:	bl	41b8e4 <_obstack_memory_used@@Base+0x54b0>
  41adac:	mov	w24, w0
  41adb0:	b	41adb8 <_obstack_memory_used@@Base+0x4984>
  41adb4:	ldr	w24, [x24, #8]
  41adb8:	ldr	w8, [x23]
  41adbc:	cmp	w8, #0x3
  41adc0:	b.eq	41adc8 <_obstack_memory_used@@Base+0x4994>  // b.none
  41adc4:	cbnz	w8, 41addc <_obstack_memory_used@@Base+0x49a8>
  41adc8:	mov	w0, w25
  41adcc:	mov	x1, x20
  41add0:	bl	41b8e4 <_obstack_memory_used@@Base+0x54b0>
  41add4:	mov	w23, w0
  41add8:	b	41ade0 <_obstack_memory_used@@Base+0x49ac>
  41addc:	ldr	w23, [x23, #8]
  41ade0:	mov	w9, #0x3                   	// #3
  41ade4:	cmn	w24, #0x1
  41ade8:	mov	w8, #0x1                   	// #1
  41adec:	b.eq	41ae7c <_obstack_memory_used@@Base+0x4a48>  // b.none
  41adf0:	cmn	w23, #0x1
  41adf4:	b.eq	41ae7c <_obstack_memory_used@@Base+0x4a48>  // b.none
  41adf8:	tbz	w22, #16, 41ae04 <_obstack_memory_used@@Base+0x49d0>
  41adfc:	cmp	w24, w23
  41ae00:	b.hi	41aea4 <_obstack_memory_used@@Base+0x4a70>  // b.pmore
  41ae04:	cbz	x20, 41ae38 <_obstack_memory_used@@Base+0x4a04>
  41ae08:	ldr	x9, [x21]
  41ae0c:	ldr	x8, [x20, #64]
  41ae10:	cmp	x9, x8
  41ae14:	b.eq	41aeb0 <_obstack_memory_used@@Base+0x4a7c>  // b.none
  41ae18:	ldr	x8, [x20, #64]
  41ae1c:	ldr	x9, [x20, #8]
  41ae20:	lsl	x10, x8, #2
  41ae24:	str	w24, [x9, x10]
  41ae28:	ldr	x9, [x20, #16]
  41ae2c:	add	x8, x8, #0x1
  41ae30:	str	x8, [x20, #64]
  41ae34:	str	w23, [x9, x10]
  41ae38:	mov	x20, xzr
  41ae3c:	mov	w21, w23
  41ae40:	mov	w22, w24
  41ae44:	b	41ae54 <_obstack_memory_used@@Base+0x4a20>
  41ae48:	add	x20, x20, #0x1
  41ae4c:	cmp	x20, #0x100
  41ae50:	b.eq	41ae74 <_obstack_memory_used@@Base+0x4a40>  // b.none
  41ae54:	cmp	x20, x22
  41ae58:	b.cc	41ae48 <_obstack_memory_used@@Base+0x4a14>  // b.lo, b.ul, b.last
  41ae5c:	cmp	x20, x21
  41ae60:	b.hi	41ae48 <_obstack_memory_used@@Base+0x4a14>  // b.pmore
  41ae64:	mov	x0, x19
  41ae68:	mov	x1, x20
  41ae6c:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41ae70:	b	41ae48 <_obstack_memory_used@@Base+0x4a14>
  41ae74:	mov	w8, wzr
  41ae78:	mov	w9, #0xc                   	// #12
  41ae7c:	cmp	w8, #0x0
  41ae80:	csel	w0, wzr, w9, eq  // eq = none
  41ae84:	ldp	x20, x19, [sp, #64]
  41ae88:	ldp	x22, x21, [sp, #48]
  41ae8c:	ldp	x24, x23, [sp, #32]
  41ae90:	ldp	x26, x25, [sp, #16]
  41ae94:	ldp	x29, x30, [sp], #80
  41ae98:	ret
  41ae9c:	mov	w0, #0x3                   	// #3
  41aea0:	b	41ae84 <_obstack_memory_used@@Base+0x4a50>
  41aea4:	mov	w9, #0xb                   	// #11
  41aea8:	mov	w8, #0x1                   	// #1
  41aeac:	b	41ae7c <_obstack_memory_used@@Base+0x4a48>
  41aeb0:	ldr	x0, [x20, #8]
  41aeb4:	mov	w26, #0x1                   	// #1
  41aeb8:	bfi	x26, x8, #1, #63
  41aebc:	lsl	x25, x26, #2
  41aec0:	mov	x1, x25
  41aec4:	bl	402610 <realloc@plt>
  41aec8:	ldr	x8, [x20, #16]
  41aecc:	mov	x22, x0
  41aed0:	mov	x1, x25
  41aed4:	mov	x0, x8
  41aed8:	bl	402610 <realloc@plt>
  41aedc:	mov	x25, x0
  41aee0:	cbz	x22, 41aefc <_obstack_memory_used@@Base+0x4ac8>
  41aee4:	cbz	x25, 41aefc <_obstack_memory_used@@Base+0x4ac8>
  41aee8:	mov	w8, wzr
  41aeec:	stp	x22, x25, [x20, #8]
  41aef0:	str	x26, [x21]
  41aef4:	cbnz	w8, 41ae78 <_obstack_memory_used@@Base+0x4a44>
  41aef8:	b	41ae18 <_obstack_memory_used@@Base+0x49e4>
  41aefc:	mov	x0, x22
  41af00:	bl	402770 <free@plt>
  41af04:	mov	x0, x25
  41af08:	bl	402770 <free@plt>
  41af0c:	mov	w8, #0x1                   	// #1
  41af10:	cbnz	w8, 41ae78 <_obstack_memory_used@@Base+0x4a44>
  41af14:	b	41ae18 <_obstack_memory_used@@Base+0x49e4>
  41af18:	stp	x29, x30, [sp, #-32]!
  41af1c:	stp	x20, x19, [sp, #16]
  41af20:	mov	x19, x0
  41af24:	mov	x0, x1
  41af28:	mov	x29, sp
  41af2c:	mov	x20, x1
  41af30:	bl	402380 <strlen@plt>
  41af34:	cmp	x0, #0x1
  41af38:	b.ne	41af58 <_obstack_memory_used@@Base+0x4b24>  // b.any
  41af3c:	ldrb	w1, [x20]
  41af40:	mov	x0, x19
  41af44:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41af48:	mov	w0, wzr
  41af4c:	ldp	x20, x19, [sp, #16]
  41af50:	ldp	x29, x30, [sp], #32
  41af54:	ret
  41af58:	mov	w0, #0x3                   	// #3
  41af5c:	b	41af4c <_obstack_memory_used@@Base+0x4b18>
  41af60:	stp	x29, x30, [sp, #-32]!
  41af64:	stp	x20, x19, [sp, #16]
  41af68:	mov	x19, x0
  41af6c:	mov	x0, x1
  41af70:	mov	x29, sp
  41af74:	mov	x20, x1
  41af78:	bl	402380 <strlen@plt>
  41af7c:	cmp	x0, #0x1
  41af80:	b.ne	41afa0 <_obstack_memory_used@@Base+0x4b6c>  // b.any
  41af84:	ldrb	w1, [x20]
  41af88:	mov	x0, x19
  41af8c:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41af90:	mov	w0, wzr
  41af94:	ldp	x20, x19, [sp, #16]
  41af98:	ldp	x29, x30, [sp], #32
  41af9c:	ret
  41afa0:	mov	w0, #0x3                   	// #3
  41afa4:	b	41af94 <_obstack_memory_used@@Base+0x4b60>
  41afa8:	stp	x29, x30, [sp, #-64]!
  41afac:	stp	x24, x23, [sp, #16]
  41afb0:	stp	x22, x21, [sp, #32]
  41afb4:	stp	x20, x19, [sp, #48]
  41afb8:	mov	x21, x4
  41afbc:	mov	x23, x3
  41afc0:	mov	x22, x2
  41afc4:	mov	x19, x1
  41afc8:	mov	x20, x0
  41afcc:	mov	x29, sp
  41afd0:	tbz	w5, #22, 41b004 <_obstack_memory_used@@Base+0x4bd0>
  41afd4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41afd8:	add	x1, x1, #0xe2a
  41afdc:	mov	x0, x21
  41afe0:	bl	402750 <strcmp@plt>
  41afe4:	cbz	w0, 41affc <_obstack_memory_used@@Base+0x4bc8>
  41afe8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41afec:	add	x1, x1, #0xe30
  41aff0:	mov	x0, x21
  41aff4:	bl	402750 <strcmp@plt>
  41aff8:	cbnz	w0, 41b004 <_obstack_memory_used@@Base+0x4bd0>
  41affc:	adrp	x21, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b000:	add	x21, x21, #0xe36
  41b004:	ldr	x9, [x23]
  41b008:	ldr	x8, [x22, #72]
  41b00c:	cmp	x9, x8
  41b010:	b.eq	41b530 <_obstack_memory_used@@Base+0x50fc>  // b.none
  41b014:	mov	x0, x21
  41b018:	bl	4023e0 <wctype@plt>
  41b01c:	ldr	x8, [x22, #72]
  41b020:	ldr	x9, [x22, #24]
  41b024:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b028:	add	x1, x1, #0xea9
  41b02c:	add	x10, x8, #0x1
  41b030:	str	x10, [x22, #72]
  41b034:	str	x0, [x9, x8, lsl #3]
  41b038:	mov	x0, x21
  41b03c:	bl	402750 <strcmp@plt>
  41b040:	cbz	w0, 41b128 <_obstack_memory_used@@Base+0x4cf4>
  41b044:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b048:	add	x1, x1, #0xebb
  41b04c:	mov	x0, x21
  41b050:	bl	402750 <strcmp@plt>
  41b054:	cbz	w0, 41b164 <_obstack_memory_used@@Base+0x4d30>
  41b058:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b05c:	add	x1, x1, #0xe30
  41b060:	mov	x0, x21
  41b064:	bl	402750 <strcmp@plt>
  41b068:	cbz	w0, 41b1a0 <_obstack_memory_used@@Base+0x4d6c>
  41b06c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b070:	add	x1, x1, #0xe9d
  41b074:	mov	x0, x21
  41b078:	bl	402750 <strcmp@plt>
  41b07c:	cbz	w0, 41b1dc <_obstack_memory_used@@Base+0x4da8>
  41b080:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b084:	add	x1, x1, #0xe36
  41b088:	mov	x0, x21
  41b08c:	bl	402750 <strcmp@plt>
  41b090:	cbz	w0, 41b218 <_obstack_memory_used@@Base+0x4de4>
  41b094:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b098:	add	x1, x1, #0xe97
  41b09c:	mov	x0, x21
  41b0a0:	bl	402750 <strcmp@plt>
  41b0a4:	cbz	w0, 41b254 <_obstack_memory_used@@Base+0x4e20>
  41b0a8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b0ac:	add	x1, x1, #0xeaf
  41b0b0:	mov	x0, x21
  41b0b4:	bl	402750 <strcmp@plt>
  41b0b8:	cbz	w0, 41b2a8 <_obstack_memory_used@@Base+0x4e74>
  41b0bc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b0c0:	add	x1, x1, #0xe2a
  41b0c4:	mov	x0, x21
  41b0c8:	bl	402750 <strcmp@plt>
  41b0cc:	cbz	w0, 41b2e8 <_obstack_memory_used@@Base+0x4eb4>
  41b0d0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b0d4:	add	x1, x1, #0xec1
  41b0d8:	mov	x0, x21
  41b0dc:	bl	402750 <strcmp@plt>
  41b0e0:	cbz	w0, 41b328 <_obstack_memory_used@@Base+0x4ef4>
  41b0e4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b0e8:	add	x1, x1, #0xeb5
  41b0ec:	mov	x0, x21
  41b0f0:	bl	402750 <strcmp@plt>
  41b0f4:	cbz	w0, 41b394 <_obstack_memory_used@@Base+0x4f60>
  41b0f8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b0fc:	add	x1, x1, #0xea3
  41b100:	mov	x0, x21
  41b104:	bl	402750 <strcmp@plt>
  41b108:	cbz	w0, 41b400 <_obstack_memory_used@@Base+0x4fcc>
  41b10c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xebcc>
  41b110:	add	x1, x1, #0xe96
  41b114:	mov	x0, x21
  41b118:	bl	402750 <strcmp@plt>
  41b11c:	cbz	w0, 41b46c <_obstack_memory_used@@Base+0x5038>
  41b120:	mov	w0, #0x4                   	// #4
  41b124:	b	41b294 <_obstack_memory_used@@Base+0x4e60>
  41b128:	bl	402760 <__ctype_b_loc@plt>
  41b12c:	mov	x21, x0
  41b130:	cbz	x20, 41b148 <_obstack_memory_used@@Base+0x4d14>
  41b134:	mov	x22, xzr
  41b138:	b	41b378 <_obstack_memory_used@@Base+0x4f44>
  41b13c:	add	x20, x20, #0x1
  41b140:	cmp	x20, #0x100
  41b144:	b.eq	41b290 <_obstack_memory_used@@Base+0x4e5c>  // b.none
  41b148:	ldr	x8, [x21]
  41b14c:	ldrh	w8, [x8, x20, lsl #1]
  41b150:	tbz	w8, #3, 41b13c <_obstack_memory_used@@Base+0x4d08>
  41b154:	mov	x0, x19
  41b158:	mov	x1, x20
  41b15c:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b160:	b	41b13c <_obstack_memory_used@@Base+0x4d08>
  41b164:	bl	402760 <__ctype_b_loc@plt>
  41b168:	mov	x21, x0
  41b16c:	cbz	x20, 41b184 <_obstack_memory_used@@Base+0x4d50>
  41b170:	mov	x22, xzr
  41b174:	b	41b3e4 <_obstack_memory_used@@Base+0x4fb0>
  41b178:	add	x20, x20, #0x1
  41b17c:	cmp	x20, #0x100
  41b180:	b.eq	41b290 <_obstack_memory_used@@Base+0x4e5c>  // b.none
  41b184:	ldr	x8, [x21]
  41b188:	ldrh	w8, [x8, x20, lsl #1]
  41b18c:	tbz	w8, #1, 41b178 <_obstack_memory_used@@Base+0x4d44>
  41b190:	mov	x0, x19
  41b194:	mov	x1, x20
  41b198:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b19c:	b	41b178 <_obstack_memory_used@@Base+0x4d44>
  41b1a0:	bl	402760 <__ctype_b_loc@plt>
  41b1a4:	mov	x21, x0
  41b1a8:	cbz	x20, 41b1c0 <_obstack_memory_used@@Base+0x4d8c>
  41b1ac:	mov	x22, xzr
  41b1b0:	b	41b450 <_obstack_memory_used@@Base+0x501c>
  41b1b4:	add	x20, x20, #0x1
  41b1b8:	cmp	x20, #0x100
  41b1bc:	b.eq	41b290 <_obstack_memory_used@@Base+0x4e5c>  // b.none
  41b1c0:	ldr	x8, [x21]
  41b1c4:	ldrh	w8, [x8, x20, lsl #1]
  41b1c8:	tbz	w8, #9, 41b1b4 <_obstack_memory_used@@Base+0x4d80>
  41b1cc:	mov	x0, x19
  41b1d0:	mov	x1, x20
  41b1d4:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b1d8:	b	41b1b4 <_obstack_memory_used@@Base+0x4d80>
  41b1dc:	bl	402760 <__ctype_b_loc@plt>
  41b1e0:	mov	x21, x0
  41b1e4:	cbz	x20, 41b1fc <_obstack_memory_used@@Base+0x4dc8>
  41b1e8:	mov	x22, xzr
  41b1ec:	b	41b4bc <_obstack_memory_used@@Base+0x5088>
  41b1f0:	add	x20, x20, #0x1
  41b1f4:	cmp	x20, #0x100
  41b1f8:	b.eq	41b290 <_obstack_memory_used@@Base+0x4e5c>  // b.none
  41b1fc:	ldr	x8, [x21]
  41b200:	ldrh	w8, [x8, x20, lsl #1]
  41b204:	tbz	w8, #13, 41b1f0 <_obstack_memory_used@@Base+0x4dbc>
  41b208:	mov	x0, x19
  41b20c:	mov	x1, x20
  41b210:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b214:	b	41b1f0 <_obstack_memory_used@@Base+0x4dbc>
  41b218:	bl	402760 <__ctype_b_loc@plt>
  41b21c:	mov	x21, x0
  41b220:	cbz	x20, 41b238 <_obstack_memory_used@@Base+0x4e04>
  41b224:	mov	x22, xzr
  41b228:	b	41b4e8 <_obstack_memory_used@@Base+0x50b4>
  41b22c:	add	x20, x20, #0x1
  41b230:	cmp	x20, #0x100
  41b234:	b.eq	41b290 <_obstack_memory_used@@Base+0x4e5c>  // b.none
  41b238:	ldr	x8, [x21]
  41b23c:	ldrh	w8, [x8, x20, lsl #1]
  41b240:	tbz	w8, #10, 41b22c <_obstack_memory_used@@Base+0x4df8>
  41b244:	mov	x0, x19
  41b248:	mov	x1, x20
  41b24c:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b250:	b	41b22c <_obstack_memory_used@@Base+0x4df8>
  41b254:	bl	402760 <__ctype_b_loc@plt>
  41b258:	mov	x21, x0
  41b25c:	cbz	x20, 41b274 <_obstack_memory_used@@Base+0x4e40>
  41b260:	mov	x22, xzr
  41b264:	b	41b514 <_obstack_memory_used@@Base+0x50e0>
  41b268:	add	x20, x20, #0x1
  41b26c:	cmp	x20, #0x100
  41b270:	b.eq	41b290 <_obstack_memory_used@@Base+0x4e5c>  // b.none
  41b274:	ldr	x8, [x21]
  41b278:	ldrh	w8, [x8, x20, lsl #1]
  41b27c:	tbz	w8, #11, 41b268 <_obstack_memory_used@@Base+0x4e34>
  41b280:	mov	x0, x19
  41b284:	mov	x1, x20
  41b288:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b28c:	b	41b268 <_obstack_memory_used@@Base+0x4e34>
  41b290:	mov	w0, wzr
  41b294:	ldp	x20, x19, [sp, #48]
  41b298:	ldp	x22, x21, [sp, #32]
  41b29c:	ldp	x24, x23, [sp, #16]
  41b2a0:	ldp	x29, x30, [sp], #64
  41b2a4:	ret
  41b2a8:	bl	402760 <__ctype_b_loc@plt>
  41b2ac:	mov	x21, x0
  41b2b0:	cbz	x20, 41b2cc <_obstack_memory_used@@Base+0x4e98>
  41b2b4:	mov	x22, xzr
  41b2b8:	b	41b564 <_obstack_memory_used@@Base+0x5130>
  41b2bc:	add	x20, x20, #0x1
  41b2c0:	cmp	x20, #0x100
  41b2c4:	mov	w0, wzr
  41b2c8:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b2cc:	ldr	x8, [x21]
  41b2d0:	ldrh	w8, [x8, x20, lsl #1]
  41b2d4:	tbz	w8, #14, 41b2bc <_obstack_memory_used@@Base+0x4e88>
  41b2d8:	mov	x0, x19
  41b2dc:	mov	x1, x20
  41b2e0:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b2e4:	b	41b2bc <_obstack_memory_used@@Base+0x4e88>
  41b2e8:	bl	402760 <__ctype_b_loc@plt>
  41b2ec:	mov	x21, x0
  41b2f0:	cbz	x20, 41b30c <_obstack_memory_used@@Base+0x4ed8>
  41b2f4:	mov	x22, xzr
  41b2f8:	b	41b590 <_obstack_memory_used@@Base+0x515c>
  41b2fc:	add	x20, x20, #0x1
  41b300:	cmp	x20, #0x100
  41b304:	mov	w0, wzr
  41b308:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b30c:	ldr	x8, [x21]
  41b310:	ldrh	w8, [x8, x20, lsl #1]
  41b314:	tbz	w8, #8, 41b2fc <_obstack_memory_used@@Base+0x4ec8>
  41b318:	mov	x0, x19
  41b31c:	mov	x1, x20
  41b320:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b324:	b	41b2fc <_obstack_memory_used@@Base+0x4ec8>
  41b328:	bl	402760 <__ctype_b_loc@plt>
  41b32c:	mov	x21, x0
  41b330:	cbz	x20, 41b34c <_obstack_memory_used@@Base+0x4f18>
  41b334:	mov	x22, xzr
  41b338:	b	41b5bc <_obstack_memory_used@@Base+0x5188>
  41b33c:	add	x20, x20, #0x1
  41b340:	cmp	x20, #0x100
  41b344:	mov	w0, wzr
  41b348:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b34c:	ldr	x8, [x21]
  41b350:	ldrh	w8, [x8, x20, lsl #1]
  41b354:	tbz	w8, #0, 41b33c <_obstack_memory_used@@Base+0x4f08>
  41b358:	mov	x0, x19
  41b35c:	mov	x1, x20
  41b360:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b364:	b	41b33c <_obstack_memory_used@@Base+0x4f08>
  41b368:	add	x22, x22, #0x1
  41b36c:	cmp	x22, #0x100
  41b370:	mov	w0, wzr
  41b374:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b378:	ldr	x8, [x21]
  41b37c:	ldrh	w8, [x8, x22, lsl #1]
  41b380:	tbz	w8, #3, 41b368 <_obstack_memory_used@@Base+0x4f34>
  41b384:	ldrb	w1, [x20, x22]
  41b388:	mov	x0, x19
  41b38c:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b390:	b	41b368 <_obstack_memory_used@@Base+0x4f34>
  41b394:	bl	402760 <__ctype_b_loc@plt>
  41b398:	mov	x21, x0
  41b39c:	cbz	x20, 41b3b8 <_obstack_memory_used@@Base+0x4f84>
  41b3a0:	mov	x22, xzr
  41b3a4:	b	41b5e8 <_obstack_memory_used@@Base+0x51b4>
  41b3a8:	add	x20, x20, #0x1
  41b3ac:	cmp	x20, #0x100
  41b3b0:	mov	w0, wzr
  41b3b4:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b3b8:	ldr	x8, [x21]
  41b3bc:	ldrsh	w8, [x8, x20, lsl #1]
  41b3c0:	tbz	w8, #31, 41b3a8 <_obstack_memory_used@@Base+0x4f74>
  41b3c4:	mov	x0, x19
  41b3c8:	mov	x1, x20
  41b3cc:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b3d0:	b	41b3a8 <_obstack_memory_used@@Base+0x4f74>
  41b3d4:	add	x22, x22, #0x1
  41b3d8:	cmp	x22, #0x100
  41b3dc:	mov	w0, wzr
  41b3e0:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b3e4:	ldr	x8, [x21]
  41b3e8:	ldrh	w8, [x8, x22, lsl #1]
  41b3ec:	tbz	w8, #1, 41b3d4 <_obstack_memory_used@@Base+0x4fa0>
  41b3f0:	ldrb	w1, [x20, x22]
  41b3f4:	mov	x0, x19
  41b3f8:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b3fc:	b	41b3d4 <_obstack_memory_used@@Base+0x4fa0>
  41b400:	bl	402760 <__ctype_b_loc@plt>
  41b404:	mov	x21, x0
  41b408:	cbz	x20, 41b424 <_obstack_memory_used@@Base+0x4ff0>
  41b40c:	mov	x22, xzr
  41b410:	b	41b614 <_obstack_memory_used@@Base+0x51e0>
  41b414:	add	x20, x20, #0x1
  41b418:	cmp	x20, #0x100
  41b41c:	mov	w0, wzr
  41b420:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b424:	ldr	x8, [x21]
  41b428:	ldrh	w8, [x8, x20, lsl #1]
  41b42c:	tbz	w8, #2, 41b414 <_obstack_memory_used@@Base+0x4fe0>
  41b430:	mov	x0, x19
  41b434:	mov	x1, x20
  41b438:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b43c:	b	41b414 <_obstack_memory_used@@Base+0x4fe0>
  41b440:	add	x22, x22, #0x1
  41b444:	cmp	x22, #0x100
  41b448:	mov	w0, wzr
  41b44c:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b450:	ldr	x8, [x21]
  41b454:	ldrh	w8, [x8, x22, lsl #1]
  41b458:	tbz	w8, #9, 41b440 <_obstack_memory_used@@Base+0x500c>
  41b45c:	ldrb	w1, [x20, x22]
  41b460:	mov	x0, x19
  41b464:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b468:	b	41b440 <_obstack_memory_used@@Base+0x500c>
  41b46c:	bl	402760 <__ctype_b_loc@plt>
  41b470:	mov	x21, x0
  41b474:	cbz	x20, 41b490 <_obstack_memory_used@@Base+0x505c>
  41b478:	mov	x22, xzr
  41b47c:	b	41b640 <_obstack_memory_used@@Base+0x520c>
  41b480:	add	x20, x20, #0x1
  41b484:	cmp	x20, #0x100
  41b488:	mov	w0, wzr
  41b48c:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b490:	ldr	x8, [x21]
  41b494:	ldrh	w8, [x8, x20, lsl #1]
  41b498:	tbz	w8, #12, 41b480 <_obstack_memory_used@@Base+0x504c>
  41b49c:	mov	x0, x19
  41b4a0:	mov	x1, x20
  41b4a4:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b4a8:	b	41b480 <_obstack_memory_used@@Base+0x504c>
  41b4ac:	add	x22, x22, #0x1
  41b4b0:	cmp	x22, #0x100
  41b4b4:	mov	w0, wzr
  41b4b8:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b4bc:	ldr	x8, [x21]
  41b4c0:	ldrh	w8, [x8, x22, lsl #1]
  41b4c4:	tbz	w8, #13, 41b4ac <_obstack_memory_used@@Base+0x5078>
  41b4c8:	ldrb	w1, [x20, x22]
  41b4cc:	mov	x0, x19
  41b4d0:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b4d4:	b	41b4ac <_obstack_memory_used@@Base+0x5078>
  41b4d8:	add	x22, x22, #0x1
  41b4dc:	cmp	x22, #0x100
  41b4e0:	mov	w0, wzr
  41b4e4:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b4e8:	ldr	x8, [x21]
  41b4ec:	ldrh	w8, [x8, x22, lsl #1]
  41b4f0:	tbz	w8, #10, 41b4d8 <_obstack_memory_used@@Base+0x50a4>
  41b4f4:	ldrb	w1, [x20, x22]
  41b4f8:	mov	x0, x19
  41b4fc:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b500:	b	41b4d8 <_obstack_memory_used@@Base+0x50a4>
  41b504:	add	x22, x22, #0x1
  41b508:	cmp	x22, #0x100
  41b50c:	mov	w0, wzr
  41b510:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b514:	ldr	x8, [x21]
  41b518:	ldrh	w8, [x8, x22, lsl #1]
  41b51c:	tbz	w8, #11, 41b504 <_obstack_memory_used@@Base+0x50d0>
  41b520:	ldrb	w1, [x20, x22]
  41b524:	mov	x0, x19
  41b528:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b52c:	b	41b504 <_obstack_memory_used@@Base+0x50d0>
  41b530:	ldr	x0, [x22, #24]
  41b534:	mov	w24, #0x1                   	// #1
  41b538:	bfi	x24, x8, #1, #63
  41b53c:	lsl	x1, x24, #3
  41b540:	bl	402610 <realloc@plt>
  41b544:	cbz	x0, 41b65c <_obstack_memory_used@@Base+0x5228>
  41b548:	str	x0, [x22, #24]
  41b54c:	str	x24, [x23]
  41b550:	b	41b014 <_obstack_memory_used@@Base+0x4be0>
  41b554:	add	x22, x22, #0x1
  41b558:	cmp	x22, #0x100
  41b55c:	mov	w0, wzr
  41b560:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b564:	ldr	x8, [x21]
  41b568:	ldrh	w8, [x8, x22, lsl #1]
  41b56c:	tbz	w8, #14, 41b554 <_obstack_memory_used@@Base+0x5120>
  41b570:	ldrb	w1, [x20, x22]
  41b574:	mov	x0, x19
  41b578:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b57c:	b	41b554 <_obstack_memory_used@@Base+0x5120>
  41b580:	add	x22, x22, #0x1
  41b584:	cmp	x22, #0x100
  41b588:	mov	w0, wzr
  41b58c:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b590:	ldr	x8, [x21]
  41b594:	ldrh	w8, [x8, x22, lsl #1]
  41b598:	tbz	w8, #8, 41b580 <_obstack_memory_used@@Base+0x514c>
  41b59c:	ldrb	w1, [x20, x22]
  41b5a0:	mov	x0, x19
  41b5a4:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b5a8:	b	41b580 <_obstack_memory_used@@Base+0x514c>
  41b5ac:	add	x22, x22, #0x1
  41b5b0:	cmp	x22, #0x100
  41b5b4:	mov	w0, wzr
  41b5b8:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b5bc:	ldr	x8, [x21]
  41b5c0:	ldrh	w8, [x8, x22, lsl #1]
  41b5c4:	tbz	w8, #0, 41b5ac <_obstack_memory_used@@Base+0x5178>
  41b5c8:	ldrb	w1, [x20, x22]
  41b5cc:	mov	x0, x19
  41b5d0:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b5d4:	b	41b5ac <_obstack_memory_used@@Base+0x5178>
  41b5d8:	add	x22, x22, #0x1
  41b5dc:	cmp	x22, #0x100
  41b5e0:	mov	w0, wzr
  41b5e4:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b5e8:	ldr	x8, [x21]
  41b5ec:	ldrsh	w8, [x8, x22, lsl #1]
  41b5f0:	tbz	w8, #31, 41b5d8 <_obstack_memory_used@@Base+0x51a4>
  41b5f4:	ldrb	w1, [x20, x22]
  41b5f8:	mov	x0, x19
  41b5fc:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b600:	b	41b5d8 <_obstack_memory_used@@Base+0x51a4>
  41b604:	add	x22, x22, #0x1
  41b608:	cmp	x22, #0x100
  41b60c:	mov	w0, wzr
  41b610:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b614:	ldr	x8, [x21]
  41b618:	ldrh	w8, [x8, x22, lsl #1]
  41b61c:	tbz	w8, #2, 41b604 <_obstack_memory_used@@Base+0x51d0>
  41b620:	ldrb	w1, [x20, x22]
  41b624:	mov	x0, x19
  41b628:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b62c:	b	41b604 <_obstack_memory_used@@Base+0x51d0>
  41b630:	add	x22, x22, #0x1
  41b634:	cmp	x22, #0x100
  41b638:	mov	w0, wzr
  41b63c:	b.eq	41b294 <_obstack_memory_used@@Base+0x4e60>  // b.none
  41b640:	ldr	x8, [x21]
  41b644:	ldrh	w8, [x8, x22, lsl #1]
  41b648:	tbz	w8, #12, 41b630 <_obstack_memory_used@@Base+0x51fc>
  41b64c:	ldrb	w1, [x20, x22]
  41b650:	mov	x0, x19
  41b654:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  41b658:	b	41b630 <_obstack_memory_used@@Base+0x51fc>
  41b65c:	mov	w0, #0xc                   	// #12
  41b660:	b	41b294 <_obstack_memory_used@@Base+0x4e60>
  41b664:	mov	x8, xzr
  41b668:	ldr	x9, [x0, x8]
  41b66c:	mvn	x9, x9
  41b670:	str	x9, [x0, x8]
  41b674:	add	x8, x8, #0x8
  41b678:	cmp	x8, #0x20
  41b67c:	b.ne	41b668 <_obstack_memory_used@@Base+0x5234>  // b.any
  41b680:	ret
  41b684:	mov	x8, xzr
  41b688:	ldr	x9, [x1, x8]
  41b68c:	ldr	x10, [x0, x8]
  41b690:	and	x9, x10, x9
  41b694:	str	x9, [x0, x8]
  41b698:	add	x8, x8, #0x8
  41b69c:	cmp	x8, #0x20
  41b6a0:	b.ne	41b688 <_obstack_memory_used@@Base+0x5254>  // b.any
  41b6a4:	ret
  41b6a8:	ldr	w9, [x0, #144]
  41b6ac:	cmp	w9, #0x1
  41b6b0:	b.eq	41b6f8 <_obstack_memory_used@@Base+0x52c4>  // b.none
  41b6b4:	ldr	x9, [x0, #48]
  41b6b8:	add	x10, x1, #0x1
  41b6bc:	mov	x8, x0
  41b6c0:	cmp	x10, x9
  41b6c4:	b.ge	41b6f8 <_obstack_memory_used@@Base+0x52c4>  // b.tcont
  41b6c8:	ldr	x9, [x8, #16]
  41b6cc:	mov	w0, #0x1                   	// #1
  41b6d0:	add	x9, x9, x1, lsl #2
  41b6d4:	ldr	w10, [x9, x0, lsl #2]
  41b6d8:	cmn	w10, #0x1
  41b6dc:	b.ne	41b6f4 <_obstack_memory_used@@Base+0x52c0>  // b.any
  41b6e0:	ldr	x10, [x8, #48]
  41b6e4:	add	x0, x0, #0x1
  41b6e8:	add	x11, x1, x0
  41b6ec:	cmp	x11, x10
  41b6f0:	b.lt	41b6d4 <_obstack_memory_used@@Base+0x52a0>  // b.tstop
  41b6f4:	ret
  41b6f8:	mov	w0, #0x1                   	// #1
  41b6fc:	ret
  41b700:	stp	x29, x30, [sp, #-64]!
  41b704:	stp	x22, x21, [sp, #32]
  41b708:	stp	x20, x19, [sp, #48]
  41b70c:	ldr	x8, [x1, #104]
  41b710:	ldr	x9, [x1, #72]
  41b714:	str	x23, [sp, #16]
  41b718:	mov	x29, sp
  41b71c:	cmp	x8, x9
  41b720:	b.le	41b7e0 <_obstack_memory_used@@Base+0x53ac>
  41b724:	ldrb	w23, [x2]
  41b728:	mov	x20, x2
  41b72c:	mov	x21, x1
  41b730:	mov	x19, x0
  41b734:	mov	x22, xzr
  41b738:	b	41b750 <_obstack_memory_used@@Base+0x531c>
  41b73c:	ldr	x8, [x19, #8]
  41b740:	strb	w0, [x8, x22]
  41b744:	add	x22, x22, #0x1
  41b748:	cmp	x22, #0x20
  41b74c:	b.eq	41b7e0 <_obstack_memory_used@@Base+0x53ac>  // b.none
  41b750:	ldrb	w8, [x20, #8]
  41b754:	cmp	w8, #0x1e
  41b758:	b.ne	41b768 <_obstack_memory_used@@Base+0x5334>  // b.any
  41b75c:	mov	x0, x21
  41b760:	bl	41b814 <_obstack_memory_used@@Base+0x53e0>
  41b764:	b	41b77c <_obstack_memory_used@@Base+0x5348>
  41b768:	ldr	x8, [x21, #72]
  41b76c:	ldr	x9, [x21, #8]
  41b770:	add	x10, x8, #0x1
  41b774:	str	x10, [x21, #72]
  41b778:	ldrb	w0, [x9, x8]
  41b77c:	ldr	x9, [x21, #104]
  41b780:	ldr	x8, [x21, #72]
  41b784:	cmp	x9, x8
  41b788:	b.le	41b7e0 <_obstack_memory_used@@Base+0x53ac>
  41b78c:	cmp	w23, w0, uxtb
  41b790:	b.ne	41b73c <_obstack_memory_used@@Base+0x5308>  // b.any
  41b794:	ldr	x9, [x21, #8]
  41b798:	ldrb	w9, [x9, x8]
  41b79c:	cmp	w9, #0x5d
  41b7a0:	b.ne	41b73c <_obstack_memory_used@@Base+0x5308>  // b.any
  41b7a4:	add	x8, x8, #0x1
  41b7a8:	str	x8, [x21, #72]
  41b7ac:	ldr	x8, [x19, #8]
  41b7b0:	strb	wzr, [x8, x22]
  41b7b4:	ldrb	w8, [x20, #8]
  41b7b8:	cmp	w8, #0x1e
  41b7bc:	b.eq	41b7f8 <_obstack_memory_used@@Base+0x53c4>  // b.none
  41b7c0:	cmp	w8, #0x1c
  41b7c4:	b.eq	41b804 <_obstack_memory_used@@Base+0x53d0>  // b.none
  41b7c8:	cmp	w8, #0x1a
  41b7cc:	mov	w0, wzr
  41b7d0:	b.ne	41b7e4 <_obstack_memory_used@@Base+0x53b0>  // b.any
  41b7d4:	mov	w0, wzr
  41b7d8:	mov	w8, #0x3                   	// #3
  41b7dc:	b	41b80c <_obstack_memory_used@@Base+0x53d8>
  41b7e0:	mov	w0, #0x7                   	// #7
  41b7e4:	ldp	x20, x19, [sp, #48]
  41b7e8:	ldp	x22, x21, [sp, #32]
  41b7ec:	ldr	x23, [sp, #16]
  41b7f0:	ldp	x29, x30, [sp], #64
  41b7f4:	ret
  41b7f8:	mov	w0, wzr
  41b7fc:	mov	w8, #0x4                   	// #4
  41b800:	b	41b80c <_obstack_memory_used@@Base+0x53d8>
  41b804:	mov	w0, wzr
  41b808:	mov	w8, #0x2                   	// #2
  41b80c:	str	w8, [x19]
  41b810:	b	41b7e4 <_obstack_memory_used@@Base+0x53b0>
  41b814:	stp	x29, x30, [sp, #-48]!
  41b818:	stp	x20, x19, [sp, #32]
  41b81c:	ldrb	w8, [x0, #139]
  41b820:	str	x21, [sp, #16]
  41b824:	mov	x29, sp
  41b828:	cbnz	w8, 41b854 <_obstack_memory_used@@Base+0x5420>
  41b82c:	ldr	x8, [x0, #72]
  41b830:	ldr	x9, [x0, #8]
  41b834:	add	x10, x8, #0x1
  41b838:	str	x10, [x0, #72]
  41b83c:	ldrb	w19, [x9, x8]
  41b840:	mov	w0, w19
  41b844:	ldp	x20, x19, [sp, #32]
  41b848:	ldr	x21, [sp, #16]
  41b84c:	ldp	x29, x30, [sp], #48
  41b850:	ret
  41b854:	ldrb	w8, [x0, #140]
  41b858:	cbz	w8, 41b8b0 <_obstack_memory_used@@Base+0x547c>
  41b85c:	ldr	x21, [x0, #72]
  41b860:	ldr	x8, [x0, #48]
  41b864:	cmp	x21, x8
  41b868:	b.eq	41b87c <_obstack_memory_used@@Base+0x5448>  // b.none
  41b86c:	ldr	x8, [x0, #16]
  41b870:	ldr	w8, [x8, x21, lsl #2]
  41b874:	cmn	w8, #0x1
  41b878:	b.eq	41b8d0 <_obstack_memory_used@@Base+0x549c>  // b.none
  41b87c:	ldr	x8, [x0, #24]
  41b880:	ldr	x9, [x0, #40]
  41b884:	ldr	x10, [x0]
  41b888:	ldr	x8, [x8, x21, lsl #3]
  41b88c:	add	x8, x9, x8
  41b890:	ldrsb	w19, [x10, x8]
  41b894:	tbnz	w19, #31, 41b8d0 <_obstack_memory_used@@Base+0x549c>
  41b898:	mov	x1, x21
  41b89c:	mov	x20, x0
  41b8a0:	bl	41b6a8 <_obstack_memory_used@@Base+0x5274>
  41b8a4:	add	x8, x21, w0, sxtw
  41b8a8:	str	x8, [x20, #72]
  41b8ac:	b	41b840 <_obstack_memory_used@@Base+0x540c>
  41b8b0:	ldr	x8, [x0, #72]
  41b8b4:	ldr	x9, [x0, #40]
  41b8b8:	ldr	x10, [x0]
  41b8bc:	add	x11, x8, #0x1
  41b8c0:	str	x11, [x0, #72]
  41b8c4:	add	x8, x8, x9
  41b8c8:	ldrb	w19, [x10, x8]
  41b8cc:	b	41b840 <_obstack_memory_used@@Base+0x540c>
  41b8d0:	ldr	x8, [x0, #8]
  41b8d4:	add	x9, x21, #0x1
  41b8d8:	str	x9, [x0, #72]
  41b8dc:	ldrb	w19, [x8, x21]
  41b8e0:	b	41b840 <_obstack_memory_used@@Base+0x540c>
  41b8e4:	and	w0, w0, #0xff
  41b8e8:	cbz	x1, 41b8fc <_obstack_memory_used@@Base+0x54c8>
  41b8ec:	stp	x29, x30, [sp, #-16]!
  41b8f0:	mov	x29, sp
  41b8f4:	bl	4026b0 <btowc@plt>
  41b8f8:	ldp	x29, x30, [sp], #16
  41b8fc:	ret
  41b900:	stp	x29, x30, [sp, #-80]!
  41b904:	str	x25, [sp, #16]
  41b908:	stp	x24, x23, [sp, #32]
  41b90c:	stp	x22, x21, [sp, #48]
  41b910:	stp	x20, x19, [sp, #64]
  41b914:	mov	x19, x2
  41b918:	mov	x20, x1
  41b91c:	mov	x21, x0
  41b920:	mov	x9, #0xffffffffffffffff    	// #-1
  41b924:	mov	w23, #0xa                   	// #10
  41b928:	mov	w24, #0x8030                	// #32816
  41b92c:	mov	w25, #0x8000                	// #32768
  41b930:	mov	x29, sp
  41b934:	mov	x0, x20
  41b938:	mov	x1, x21
  41b93c:	mov	x2, x19
  41b940:	mov	x22, x9
  41b944:	bl	418e78 <_obstack_memory_used@@Base+0x2a44>
  41b948:	ldrb	w10, [x20, #8]
  41b94c:	cmp	w10, #0x18
  41b950:	b.eq	41b9b8 <_obstack_memory_used@@Base+0x5584>  // b.none
  41b954:	cmp	w10, #0x2
  41b958:	b.eq	41b9b4 <_obstack_memory_used@@Base+0x5580>  // b.none
  41b95c:	ldrb	w8, [x20]
  41b960:	cmp	w8, #0x2c
  41b964:	b.eq	41b9b8 <_obstack_memory_used@@Base+0x5584>  // b.none
  41b968:	cmp	w8, #0x30
  41b96c:	mov	x9, #0xfffffffffffffffe    	// #-2
  41b970:	b.cc	41b934 <_obstack_memory_used@@Base+0x5500>  // b.lo, b.ul, b.last
  41b974:	cmp	w10, #0x1
  41b978:	b.ne	41b934 <_obstack_memory_used@@Base+0x5500>  // b.any
  41b97c:	cmn	x22, #0x2
  41b980:	mov	x9, #0xfffffffffffffffe    	// #-2
  41b984:	b.eq	41b934 <_obstack_memory_used@@Base+0x5500>  // b.none
  41b988:	cmp	w8, #0x39
  41b98c:	b.hi	41b934 <_obstack_memory_used@@Base+0x5500>  // b.pmore
  41b990:	cmn	x22, #0x1
  41b994:	b.eq	41b9ac <_obstack_memory_used@@Base+0x5578>  // b.none
  41b998:	madd	x8, x22, x23, x8
  41b99c:	sub	x9, x8, #0x30
  41b9a0:	cmp	x8, x24
  41b9a4:	csel	x9, x25, x9, gt
  41b9a8:	b	41b934 <_obstack_memory_used@@Base+0x5500>
  41b9ac:	sub	x9, x8, #0x30
  41b9b0:	b	41b934 <_obstack_memory_used@@Base+0x5500>
  41b9b4:	mov	x22, #0xfffffffffffffffe    	// #-2
  41b9b8:	mov	x0, x22
  41b9bc:	ldp	x20, x19, [sp, #64]
  41b9c0:	ldp	x22, x21, [sp, #48]
  41b9c4:	ldp	x24, x23, [sp, #32]
  41b9c8:	ldr	x25, [sp, #16]
  41b9cc:	ldp	x29, x30, [sp], #80
  41b9d0:	ret
  41b9d4:	stp	x29, x30, [sp, #-64]!
  41b9d8:	str	x23, [sp, #16]
  41b9dc:	stp	x22, x21, [sp, #32]
  41b9e0:	stp	x20, x19, [sp, #48]
  41b9e4:	mov	x3, x0
  41b9e8:	ldr	x22, [x3], #40
  41b9ec:	mov	x20, x0
  41b9f0:	mov	x19, x1
  41b9f4:	mov	x0, x1
  41b9f8:	mov	x1, xzr
  41b9fc:	mov	x2, xzr
  41ba00:	mov	x29, sp
  41ba04:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41ba08:	str	x0, [x29, #24]
  41ba0c:	cbz	x0, 41baa0 <_obstack_memory_used@@Base+0x566c>
  41ba10:	add	x23, x29, #0x18
  41ba14:	b	41ba28 <_obstack_memory_used@@Base+0x55f4>
  41ba18:	ldr	x21, [x29, #24]
  41ba1c:	mov	w8, wzr
  41ba20:	cbnz	w8, 41ba84 <_obstack_memory_used@@Base+0x5650>
  41ba24:	b	41baa4 <_obstack_memory_used@@Base+0x5670>
  41ba28:	str	x22, [x0]
  41ba2c:	ldr	x8, [x23]
  41ba30:	ldr	w9, [x8, #48]
  41ba34:	orr	w9, w9, #0x40000
  41ba38:	str	w9, [x8, #48]
  41ba3c:	ldr	x8, [x20, #8]
  41ba40:	ldr	x22, [x23]
  41ba44:	cbz	x8, 41ba60 <_obstack_memory_used@@Base+0x562c>
  41ba48:	add	x23, x22, #0x8
  41ba4c:	mov	x20, x8
  41ba50:	b	41ba84 <_obstack_memory_used@@Base+0x5650>
  41ba54:	ldr	x20, [x8]
  41ba58:	ldr	x22, [x22]
  41ba5c:	cbz	x20, 41ba18 <_obstack_memory_used@@Base+0x55e4>
  41ba60:	mov	x9, x8
  41ba64:	mov	x8, x20
  41ba68:	ldr	x20, [x20, #16]
  41ba6c:	cmp	x20, x9
  41ba70:	b.eq	41ba54 <_obstack_memory_used@@Base+0x5620>  // b.none
  41ba74:	cbz	x20, 41ba54 <_obstack_memory_used@@Base+0x5620>
  41ba78:	add	x23, x22, #0x10
  41ba7c:	mov	w8, #0x1                   	// #1
  41ba80:	cbz	w8, 41baa4 <_obstack_memory_used@@Base+0x5670>
  41ba84:	add	x3, x20, #0x28
  41ba88:	mov	x0, x19
  41ba8c:	mov	x1, xzr
  41ba90:	mov	x2, xzr
  41ba94:	bl	419cdc <_obstack_memory_used@@Base+0x38a8>
  41ba98:	str	x0, [x23]
  41ba9c:	cbnz	x0, 41ba28 <_obstack_memory_used@@Base+0x55f4>
  41baa0:	mov	x21, xzr
  41baa4:	mov	x0, x21
  41baa8:	ldp	x20, x19, [sp, #48]
  41baac:	ldp	x22, x21, [sp, #32]
  41bab0:	ldr	x23, [sp, #16]
  41bab4:	ldp	x29, x30, [sp], #64
  41bab8:	ret
  41babc:	ldr	w8, [x1, #48]
  41bac0:	and	w9, w8, #0xff
  41bac4:	cmp	w9, #0x11
  41bac8:	b.ne	41bae0 <_obstack_memory_used@@Base+0x56ac>  // b.any
  41bacc:	ldr	x9, [x1, #40]
  41bad0:	cmp	x9, x0
  41bad4:	b.ne	41bae0 <_obstack_memory_used@@Base+0x56ac>  // b.any
  41bad8:	orr	w8, w8, #0x80000
  41badc:	str	w8, [x1, #48]
  41bae0:	mov	w0, wzr
  41bae4:	ret
  41bae8:	stp	x29, x30, [sp, #-48]!
  41baec:	stp	x22, x21, [sp, #16]
  41baf0:	stp	x20, x19, [sp, #32]
  41baf4:	mov	x19, x2
  41baf8:	mov	x20, x1
  41bafc:	mov	x22, x0
  41bb00:	mov	x29, sp
  41bb04:	b	41bb14 <_obstack_memory_used@@Base+0x56e0>
  41bb08:	mov	w9, wzr
  41bb0c:	mov	x22, x8
  41bb10:	cbnz	w9, 41bb88 <_obstack_memory_used@@Base+0x5754>
  41bb14:	mov	x0, x19
  41bb18:	mov	x1, x22
  41bb1c:	blr	x20
  41bb20:	cbnz	w0, 41bb7c <_obstack_memory_used@@Base+0x5748>
  41bb24:	ldr	x8, [x22, #8]
  41bb28:	cbnz	x8, 41bb08 <_obstack_memory_used@@Base+0x56d4>
  41bb2c:	mov	x9, xzr
  41bb30:	b	41bb3c <_obstack_memory_used@@Base+0x5708>
  41bb34:	ldr	x22, [x9]
  41bb38:	cbz	x22, 41bb64 <_obstack_memory_used@@Base+0x5730>
  41bb3c:	ldr	x8, [x22, #16]
  41bb40:	mov	x10, x9
  41bb44:	mov	x9, x22
  41bb48:	cmp	x8, x10
  41bb4c:	b.eq	41bb34 <_obstack_memory_used@@Base+0x5700>  // b.none
  41bb50:	cbz	x8, 41bb34 <_obstack_memory_used@@Base+0x5700>
  41bb54:	mov	w9, wzr
  41bb58:	mov	x22, x8
  41bb5c:	cbnz	w9, 41bb10 <_obstack_memory_used@@Base+0x56dc>
  41bb60:	b	41bb08 <_obstack_memory_used@@Base+0x56d4>
  41bb64:	mov	x8, xzr
  41bb68:	mov	w21, wzr
  41bb6c:	mov	w9, #0x1                   	// #1
  41bb70:	mov	x22, x8
  41bb74:	cbnz	w9, 41bb10 <_obstack_memory_used@@Base+0x56dc>
  41bb78:	b	41bb08 <_obstack_memory_used@@Base+0x56d4>
  41bb7c:	mov	w9, #0x1                   	// #1
  41bb80:	mov	w21, w0
  41bb84:	b	41bb10 <_obstack_memory_used@@Base+0x56dc>
  41bb88:	mov	w0, w21
  41bb8c:	ldp	x20, x19, [sp, #32]
  41bb90:	ldp	x22, x21, [sp, #16]
  41bb94:	ldp	x29, x30, [sp], #48
  41bb98:	ret
  41bb9c:	ldrb	w8, [x1, #48]
  41bba0:	cmp	w8, #0x11
  41bba4:	b.eq	41bbe8 <_obstack_memory_used@@Base+0x57b4>  // b.none
  41bba8:	cmp	w8, #0x4
  41bbac:	b.ne	41bc3c <_obstack_memory_used@@Base+0x5808>  // b.any
  41bbb0:	ldr	x9, [x0, #224]
  41bbb4:	cbz	x9, 41bbe0 <_obstack_memory_used@@Base+0x57ac>
  41bbb8:	ldr	x8, [x1, #40]
  41bbbc:	mov	w10, #0x1                   	// #1
  41bbc0:	sbfiz	x8, x8, #3, #32
  41bbc4:	ldr	x8, [x9, x8]
  41bbc8:	str	x8, [x1, #40]
  41bbcc:	ldr	x9, [x0, #160]
  41bbd0:	lsl	w8, w10, w8
  41bbd4:	sxtw	x8, w8
  41bbd8:	orr	x8, x9, x8
  41bbdc:	b	41bc38 <_obstack_memory_used@@Base+0x5804>
  41bbe0:	cmp	w8, #0x11
  41bbe4:	b.ne	41bc3c <_obstack_memory_used@@Base+0x5808>  // b.any
  41bbe8:	ldr	x8, [x1, #8]
  41bbec:	cbz	x8, 41bc3c <_obstack_memory_used@@Base+0x5808>
  41bbf0:	ldrb	w9, [x8, #48]
  41bbf4:	cmp	w9, #0x11
  41bbf8:	b.ne	41bc3c <_obstack_memory_used@@Base+0x5808>  // b.any
  41bbfc:	ldr	x9, [x8, #8]
  41bc00:	ldr	x8, [x8, #40]
  41bc04:	str	x9, [x1, #8]
  41bc08:	cbz	x9, 41bc10 <_obstack_memory_used@@Base+0x57dc>
  41bc0c:	str	x1, [x9]
  41bc10:	ldr	x9, [x0, #224]
  41bc14:	ldr	x10, [x1, #40]
  41bc18:	cmp	x8, #0x3f
  41bc1c:	ldr	x10, [x9, x10, lsl #3]
  41bc20:	str	x10, [x9, x8, lsl #3]
  41bc24:	b.gt	41bc3c <_obstack_memory_used@@Base+0x5808>
  41bc28:	ldr	x9, [x0, #160]
  41bc2c:	mov	w10, #0x1                   	// #1
  41bc30:	lsl	x8, x10, x8
  41bc34:	bic	x8, x9, x8
  41bc38:	str	x8, [x0, #160]
  41bc3c:	mov	w0, wzr
  41bc40:	ret
  41bc44:	sub	sp, sp, #0x30
  41bc48:	stp	x29, x30, [sp, #16]
  41bc4c:	add	x29, sp, #0x10
  41bc50:	stp	x20, x19, [sp, #32]
  41bc54:	stur	wzr, [x29, #-4]
  41bc58:	ldr	x2, [x1, #8]
  41bc5c:	mov	x19, x1
  41bc60:	mov	x20, x0
  41bc64:	cbz	x2, 41bc8c <_obstack_memory_used@@Base+0x5858>
  41bc68:	ldrb	w8, [x2, #48]
  41bc6c:	cmp	w8, #0x11
  41bc70:	b.ne	41bc8c <_obstack_memory_used@@Base+0x5858>  // b.any
  41bc74:	sub	x0, x29, #0x4
  41bc78:	mov	x1, x20
  41bc7c:	bl	41c0c0 <_obstack_memory_used@@Base+0x5c8c>
  41bc80:	str	x0, [x19, #8]
  41bc84:	cbz	x0, 41bc8c <_obstack_memory_used@@Base+0x5858>
  41bc88:	str	x19, [x0]
  41bc8c:	ldr	x2, [x19, #16]
  41bc90:	cbz	x2, 41bcb8 <_obstack_memory_used@@Base+0x5884>
  41bc94:	ldrb	w8, [x2, #48]
  41bc98:	cmp	w8, #0x11
  41bc9c:	b.ne	41bcb8 <_obstack_memory_used@@Base+0x5884>  // b.any
  41bca0:	sub	x0, x29, #0x4
  41bca4:	mov	x1, x20
  41bca8:	bl	41c0c0 <_obstack_memory_used@@Base+0x5c8c>
  41bcac:	str	x0, [x19, #16]
  41bcb0:	cbz	x0, 41bcb8 <_obstack_memory_used@@Base+0x5884>
  41bcb4:	str	x19, [x0]
  41bcb8:	ldur	w0, [x29, #-4]
  41bcbc:	ldp	x20, x19, [sp, #32]
  41bcc0:	ldp	x29, x30, [sp, #16]
  41bcc4:	add	sp, sp, #0x30
  41bcc8:	ret
  41bccc:	stp	x29, x30, [sp, #-32]!
  41bcd0:	stp	x20, x19, [sp, #16]
  41bcd4:	ldrb	w8, [x1, #48]
  41bcd8:	mov	x19, x1
  41bcdc:	mov	x29, sp
  41bce0:	cmp	w8, #0x10
  41bce4:	b.ne	41bd04 <_obstack_memory_used@@Base+0x58d0>  // b.any
  41bce8:	ldr	x8, [x19, #8]
  41bcec:	mov	w0, wzr
  41bcf0:	ldr	x9, [x8, #24]
  41bcf4:	str	x9, [x19, #24]
  41bcf8:	ldr	x8, [x8, #56]
  41bcfc:	str	x8, [x19, #56]
  41bd00:	b	41bd54 <_obstack_memory_used@@Base+0x5920>
  41bd04:	ldp	x1, x2, [x19, #40]
  41bd08:	mov	x20, x0
  41bd0c:	str	x19, [x19, #24]
  41bd10:	bl	41c1e4 <_obstack_memory_used@@Base+0x5db0>
  41bd14:	cmn	x0, #0x1
  41bd18:	str	x0, [x19, #56]
  41bd1c:	b.eq	41bd60 <_obstack_memory_used@@Base+0x592c>  // b.none
  41bd20:	ldrb	w9, [x19, #48]
  41bd24:	cmp	w9, #0xc
  41bd28:	b.ne	41bd50 <_obstack_memory_used@@Base+0x591c>  // b.any
  41bd2c:	ldr	x9, [x20]
  41bd30:	mov	x8, x0
  41bd34:	ldr	w10, [x19, #40]
  41bd38:	mov	w0, wzr
  41bd3c:	add	x8, x9, x8, lsl #4
  41bd40:	ldr	w9, [x8, #8]
  41bd44:	bfi	w9, w10, #8, #10
  41bd48:	str	w9, [x8, #8]
  41bd4c:	b	41bd54 <_obstack_memory_used@@Base+0x5920>
  41bd50:	mov	w0, wzr
  41bd54:	ldp	x20, x19, [sp, #16]
  41bd58:	ldp	x29, x30, [sp], #32
  41bd5c:	ret
  41bd60:	mov	w0, #0xc                   	// #12
  41bd64:	b	41bd54 <_obstack_memory_used@@Base+0x5920>
  41bd68:	ldrb	w8, [x1, #48]
  41bd6c:	cmp	w8, #0x10
  41bd70:	b.eq	41bd8c <_obstack_memory_used@@Base+0x5958>  // b.none
  41bd74:	cmp	w8, #0xb
  41bd78:	b.ne	41bd9c <_obstack_memory_used@@Base+0x5968>  // b.any
  41bd7c:	ldr	x8, [x1, #8]
  41bd80:	mov	w0, wzr
  41bd84:	str	x1, [x8, #32]
  41bd88:	ret
  41bd8c:	ldp	x9, x8, [x1, #8]
  41bd90:	ldr	x10, [x8, #24]
  41bd94:	str	x10, [x9, #32]
  41bd98:	b	41bdb4 <_obstack_memory_used@@Base+0x5980>
  41bd9c:	ldr	x8, [x1, #8]
  41bda0:	cbz	x8, 41bdac <_obstack_memory_used@@Base+0x5978>
  41bda4:	ldr	x9, [x1, #32]
  41bda8:	str	x9, [x8, #32]
  41bdac:	ldr	x8, [x1, #16]
  41bdb0:	cbz	x8, 41bdbc <_obstack_memory_used@@Base+0x5988>
  41bdb4:	ldr	x9, [x1, #32]
  41bdb8:	str	x9, [x8, #32]
  41bdbc:	mov	w0, wzr
  41bdc0:	ret
  41bdc4:	stp	x29, x30, [sp, #-16]!
  41bdc8:	ldr	w8, [x1, #48]
  41bdcc:	ldr	x9, [x1, #56]
  41bdd0:	mov	x29, sp
  41bdd4:	and	w8, w8, #0xff
  41bdd8:	sub	w8, w8, #0x2
  41bddc:	cmp	w8, #0xe
  41bde0:	b.hi	41be74 <_obstack_memory_used@@Base+0x5a40>  // b.pmore
  41bde4:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41bde8:	add	x10, x10, #0x7c8
  41bdec:	adr	x11, 41be00 <_obstack_memory_used@@Base+0x59cc>
  41bdf0:	ldrb	w12, [x10, x8]
  41bdf4:	add	x11, x11, x12, lsl #2
  41bdf8:	mov	w2, wzr
  41bdfc:	br	x11
  41be00:	ldr	x8, [x1, #32]
  41be04:	ldr	x10, [x0, #40]
  41be08:	ldr	x1, [x8, #56]
  41be0c:	mov	w8, #0x18                  	// #24
  41be10:	madd	x0, x9, x8, x10
  41be14:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  41be18:	mov	w2, w0
  41be1c:	b	41bec0 <_obstack_memory_used@@Base+0x5a8c>
  41be20:	ldrb	w8, [x0, #176]
  41be24:	add	x11, x1, #0x20
  41be28:	orr	w8, w8, #0x1
  41be2c:	strb	w8, [x0, #176]
  41be30:	ldp	x8, x10, [x1, #8]
  41be34:	add	x12, x8, #0x18
  41be38:	cmp	x8, #0x0
  41be3c:	add	x8, x10, #0x18
  41be40:	csel	x12, x11, x12, eq  // eq = none
  41be44:	cmp	x10, #0x0
  41be48:	ldr	x10, [x12]
  41be4c:	csel	x8, x11, x8, eq  // eq = none
  41be50:	ldr	x8, [x8]
  41be54:	ldr	x1, [x10, #56]
  41be58:	ldr	x10, [x0, #40]
  41be5c:	ldr	x2, [x8, #56]
  41be60:	mov	w8, #0x18                  	// #24
  41be64:	madd	x0, x9, x8, x10
  41be68:	bl	41c3b0 <_obstack_memory_used@@Base+0x5f7c>
  41be6c:	mov	w2, w0
  41be70:	b	41bec0 <_obstack_memory_used@@Base+0x5a8c>
  41be74:	ldr	x8, [x1, #32]
  41be78:	ldr	x10, [x0, #24]
  41be7c:	mov	w2, wzr
  41be80:	ldr	x8, [x8, #56]
  41be84:	str	x8, [x10, x9, lsl #3]
  41be88:	b	41bec0 <_obstack_memory_used@@Base+0x5a8c>
  41be8c:	ldr	x8, [x1, #32]
  41be90:	ldr	x10, [x0, #24]
  41be94:	ldr	x8, [x8, #56]
  41be98:	str	x8, [x10, x9, lsl #3]
  41be9c:	ldrb	w10, [x1, #48]
  41bea0:	cmp	w10, #0x4
  41bea4:	b.ne	41bebc <_obstack_memory_used@@Base+0x5a88>  // b.any
  41bea8:	ldr	x10, [x0, #40]
  41beac:	mov	w11, #0x18                  	// #24
  41beb0:	mov	x1, x8
  41beb4:	madd	x0, x9, x11, x10
  41beb8:	b	41be14 <_obstack_memory_used@@Base+0x59e0>
  41bebc:	mov	w2, wzr
  41bec0:	mov	w0, w2
  41bec4:	ldp	x29, x30, [sp], #16
  41bec8:	ret
  41becc:	sub	sp, sp, #0x60
  41bed0:	stp	x24, x23, [sp, #48]
  41bed4:	stp	x22, x21, [sp, #64]
  41bed8:	stp	x20, x19, [sp, #80]
  41bedc:	mov	x19, x0
  41bee0:	mov	x8, xzr
  41bee4:	mov	w23, wzr
  41bee8:	mov	w22, #0x18                  	// #24
  41beec:	stp	x29, x30, [sp, #32]
  41bef0:	add	x29, sp, #0x20
  41bef4:	b	41befc <_obstack_memory_used@@Base+0x5ac8>
  41bef8:	add	x8, x8, #0x1
  41befc:	ldr	x10, [x19, #16]
  41bf00:	cmp	x8, x10
  41bf04:	cset	w9, ne  // ne = any
  41bf08:	csel	x21, x8, xzr, ne  // ne = any
  41bf0c:	tbnz	w23, #0, 41bf24 <_obstack_memory_used@@Base+0x5af0>
  41bf10:	cmp	x8, x10
  41bf14:	b.ne	41bf24 <_obstack_memory_used@@Base+0x5af0>  // b.any
  41bf18:	mov	w24, #0x2                   	// #2
  41bf1c:	cbnz	w24, 41bf9c <_obstack_memory_used@@Base+0x5b68>
  41bf20:	b	41bef8 <_obstack_memory_used@@Base+0x5ac4>
  41bf24:	ldr	x8, [x19, #48]
  41bf28:	and	w23, w23, w9
  41bf2c:	madd	x8, x21, x22, x8
  41bf30:	ldr	x8, [x8, #8]
  41bf34:	cbz	x8, 41bf48 <_obstack_memory_used@@Base+0x5b14>
  41bf38:	mov	w24, #0x4                   	// #4
  41bf3c:	mov	x8, x21
  41bf40:	cbnz	w24, 41bf9c <_obstack_memory_used@@Base+0x5b68>
  41bf44:	b	41bef8 <_obstack_memory_used@@Base+0x5ac4>
  41bf48:	add	x0, sp, #0x8
  41bf4c:	mov	w3, #0x1                   	// #1
  41bf50:	mov	x1, x19
  41bf54:	mov	x2, x21
  41bf58:	mov	w24, #0x1                   	// #1
  41bf5c:	bl	41c490 <_obstack_memory_used@@Base+0x605c>
  41bf60:	cbnz	w0, 41bfa8 <_obstack_memory_used@@Base+0x5b74>
  41bf64:	ldr	x8, [x19, #48]
  41bf68:	madd	x8, x21, x22, x8
  41bf6c:	ldr	x8, [x8, #8]
  41bf70:	cbz	x8, 41bf84 <_obstack_memory_used@@Base+0x5b50>
  41bf74:	mov	w24, wzr
  41bf78:	mov	x8, x21
  41bf7c:	cbnz	w24, 41bf9c <_obstack_memory_used@@Base+0x5b68>
  41bf80:	b	41bef8 <_obstack_memory_used@@Base+0x5ac4>
  41bf84:	ldr	x0, [sp, #24]
  41bf88:	bl	402770 <free@plt>
  41bf8c:	mov	w24, wzr
  41bf90:	mov	w23, #0x1                   	// #1
  41bf94:	mov	x8, x21
  41bf98:	cbz	w24, 41bef8 <_obstack_memory_used@@Base+0x5ac4>
  41bf9c:	cmp	w24, #0x4
  41bfa0:	b.eq	41bef8 <_obstack_memory_used@@Base+0x5ac4>  // b.none
  41bfa4:	b	41bfb8 <_obstack_memory_used@@Base+0x5b84>
  41bfa8:	mov	x8, x21
  41bfac:	mov	w20, w0
  41bfb0:	cbnz	w24, 41bf9c <_obstack_memory_used@@Base+0x5b68>
  41bfb4:	b	41bef8 <_obstack_memory_used@@Base+0x5ac4>
  41bfb8:	cmp	w24, #0x2
  41bfbc:	b.ne	41bfc4 <_obstack_memory_used@@Base+0x5b90>  // b.any
  41bfc0:	mov	w20, wzr
  41bfc4:	mov	w0, w20
  41bfc8:	ldp	x20, x19, [sp, #80]
  41bfcc:	ldp	x22, x21, [sp, #64]
  41bfd0:	ldp	x24, x23, [sp, #48]
  41bfd4:	ldp	x29, x30, [sp, #32]
  41bfd8:	add	sp, sp, #0x60
  41bfdc:	ret
  41bfe0:	stp	x29, x30, [sp, #-64]!
  41bfe4:	stp	x22, x21, [sp, #32]
  41bfe8:	stp	x20, x19, [sp, #48]
  41bfec:	ldr	x8, [x0, #16]
  41bff0:	mov	x19, x0
  41bff4:	str	x23, [sp, #16]
  41bff8:	mov	x29, sp
  41bffc:	cbz	x8, 41c02c <_obstack_memory_used@@Base+0x5bf8>
  41c000:	mov	x8, xzr
  41c004:	mov	x9, xzr
  41c008:	ldr	x10, [x19, #56]
  41c00c:	add	x9, x9, #0x1
  41c010:	add	x10, x10, x8
  41c014:	stp	xzr, xzr, [x10]
  41c018:	str	xzr, [x10, #16]
  41c01c:	ldr	x10, [x19, #16]
  41c020:	add	x8, x8, #0x18
  41c024:	cmp	x9, x10
  41c028:	b.cc	41c008 <_obstack_memory_used@@Base+0x5bd4>  // b.lo, b.ul, b.last
  41c02c:	ldr	x8, [x19, #16]
  41c030:	cbz	x8, 41c0a0 <_obstack_memory_used@@Base+0x5c6c>
  41c034:	mov	x20, xzr
  41c038:	mov	w21, #0x18                  	// #24
  41c03c:	b	41c050 <_obstack_memory_used@@Base+0x5c1c>
  41c040:	ldr	x8, [x19, #16]
  41c044:	add	x20, x20, #0x1
  41c048:	cmp	x20, x8
  41c04c:	b.cs	41c0a0 <_obstack_memory_used@@Base+0x5c6c>  // b.hs, b.nlast
  41c050:	ldr	x8, [x19, #48]
  41c054:	madd	x8, x20, x21, x8
  41c058:	ldr	x9, [x8, #8]
  41c05c:	cmp	x9, #0x1
  41c060:	b.lt	41c040 <_obstack_memory_used@@Base+0x5c0c>  // b.tstop
  41c064:	ldr	x22, [x8, #16]
  41c068:	mov	x23, xzr
  41c06c:	ldr	x8, [x19, #56]
  41c070:	ldr	x9, [x22, x23, lsl #3]
  41c074:	mov	x1, x20
  41c078:	madd	x0, x9, x21, x8
  41c07c:	bl	41cce0 <_obstack_memory_used@@Base+0x68ac>
  41c080:	tbz	w0, #0, 41c0b8 <_obstack_memory_used@@Base+0x5c84>
  41c084:	ldr	x8, [x19, #48]
  41c088:	add	x23, x23, #0x1
  41c08c:	madd	x8, x20, x21, x8
  41c090:	ldr	x8, [x8, #8]
  41c094:	cmp	x23, x8
  41c098:	b.lt	41c06c <_obstack_memory_used@@Base+0x5c38>  // b.tstop
  41c09c:	b	41c040 <_obstack_memory_used@@Base+0x5c0c>
  41c0a0:	mov	w0, wzr
  41c0a4:	ldp	x20, x19, [sp, #48]
  41c0a8:	ldp	x22, x21, [sp, #32]
  41c0ac:	ldr	x23, [sp, #16]
  41c0b0:	ldp	x29, x30, [sp], #64
  41c0b4:	ret
  41c0b8:	mov	w0, #0xc                   	// #12
  41c0bc:	b	41c0a4 <_obstack_memory_used@@Base+0x5c70>
  41c0c0:	stp	x29, x30, [sp, #-80]!
  41c0c4:	stp	x24, x23, [sp, #32]
  41c0c8:	stp	x22, x21, [sp, #48]
  41c0cc:	stp	x20, x19, [sp, #64]
  41c0d0:	ldr	x19, [x2, #8]
  41c0d4:	ldr	x23, [x1]
  41c0d8:	mov	x20, x2
  41c0dc:	mov	x21, x0
  41c0e0:	str	x25, [sp, #16]
  41c0e4:	mov	x29, sp
  41c0e8:	cbz	x19, 41c10c <_obstack_memory_used@@Base+0x5cd8>
  41c0ec:	ldrb	w8, [x1, #56]
  41c0f0:	tbz	w8, #4, 41c10c <_obstack_memory_used@@Base+0x5cd8>
  41c0f4:	ldr	x8, [x20, #40]
  41c0f8:	cmp	x8, #0x3f
  41c0fc:	b.gt	41c1b8 <_obstack_memory_used@@Base+0x5d84>
  41c100:	ldr	x9, [x23, #160]
  41c104:	lsr	x8, x9, x8
  41c108:	tbz	w8, #0, 41c1b8 <_obstack_memory_used@@Base+0x5d84>
  41c10c:	mov	w3, #0x8                   	// #8
  41c110:	mov	x0, x23
  41c114:	mov	x1, xzr
  41c118:	mov	x2, xzr
  41c11c:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41c120:	mov	x22, x0
  41c124:	mov	w3, #0x9                   	// #9
  41c128:	mov	x0, x23
  41c12c:	mov	x1, xzr
  41c130:	mov	x2, xzr
  41c134:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41c138:	mov	x24, x0
  41c13c:	mov	x25, x0
  41c140:	cbz	x19, 41c15c <_obstack_memory_used@@Base+0x5d28>
  41c144:	mov	w3, #0x10                  	// #16
  41c148:	mov	x0, x23
  41c14c:	mov	x1, x19
  41c150:	mov	x2, x24
  41c154:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41c158:	mov	x25, x0
  41c15c:	mov	w3, #0x10                  	// #16
  41c160:	mov	x0, x23
  41c164:	mov	x1, x22
  41c168:	mov	x2, x25
  41c16c:	bl	418fec <_obstack_memory_used@@Base+0x2bb8>
  41c170:	cbz	x24, 41c1d4 <_obstack_memory_used@@Base+0x5da0>
  41c174:	cbz	x22, 41c1d4 <_obstack_memory_used@@Base+0x5da0>
  41c178:	cbz	x25, 41c1d4 <_obstack_memory_used@@Base+0x5da0>
  41c17c:	mov	x19, x0
  41c180:	cbz	x0, 41c1d4 <_obstack_memory_used@@Base+0x5da0>
  41c184:	ldr	x8, [x20, #40]
  41c188:	str	x8, [x24, #40]
  41c18c:	str	x8, [x22, #40]
  41c190:	ldr	w8, [x20, #48]
  41c194:	ldr	w9, [x24, #48]
  41c198:	and	w8, w8, #0x80000
  41c19c:	and	w9, w9, #0xfff7ffff
  41c1a0:	orr	w9, w9, w8
  41c1a4:	str	w9, [x24, #48]
  41c1a8:	ldr	w9, [x22, #48]
  41c1ac:	and	w9, w9, #0xfff7ffff
  41c1b0:	orr	w8, w9, w8
  41c1b4:	str	w8, [x22, #48]
  41c1b8:	mov	x0, x19
  41c1bc:	ldp	x20, x19, [sp, #64]
  41c1c0:	ldp	x22, x21, [sp, #48]
  41c1c4:	ldp	x24, x23, [sp, #32]
  41c1c8:	ldr	x25, [sp, #16]
  41c1cc:	ldp	x29, x30, [sp], #80
  41c1d0:	ret
  41c1d4:	mov	w8, #0xc                   	// #12
  41c1d8:	mov	x19, xzr
  41c1dc:	str	w8, [x21]
  41c1e0:	b	41c1b8 <_obstack_memory_used@@Base+0x5d84>
  41c1e4:	stp	x29, x30, [sp, #-80]!
  41c1e8:	stp	x26, x25, [sp, #16]
  41c1ec:	stp	x24, x23, [sp, #32]
  41c1f0:	stp	x22, x21, [sp, #48]
  41c1f4:	stp	x20, x19, [sp, #64]
  41c1f8:	ldp	x24, x8, [x0, #8]
  41c1fc:	mov	x20, x2
  41c200:	mov	x19, x0
  41c204:	mov	x21, x1
  41c208:	cmp	x8, x24
  41c20c:	mov	x29, sp
  41c210:	b.cs	41c2e0 <_obstack_memory_used@@Base+0x5eac>  // b.hs, b.nlast
  41c214:	ldr	x8, [x19]
  41c218:	ldr	x9, [x19, #16]
  41c21c:	add	x8, x8, x9, lsl #4
  41c220:	stp	x21, x20, [x8]
  41c224:	ldr	x8, [x19]
  41c228:	ldr	x9, [x19, #16]
  41c22c:	add	x9, x8, x9, lsl #4
  41c230:	ldr	w10, [x9, #8]
  41c234:	and	w8, w20, #0xff
  41c238:	cmp	w8, #0x5
  41c23c:	and	w10, w10, #0xfffc00ff
  41c240:	str	w10, [x9, #8]
  41c244:	b.ne	41c25c <_obstack_memory_used@@Base+0x5e28>  // b.any
  41c248:	ldr	w9, [x19, #180]
  41c24c:	cmp	w9, #0x1
  41c250:	b.le	41c25c <_obstack_memory_used@@Base+0x5e28>
  41c254:	mov	w8, #0x100000              	// #1048576
  41c258:	b	41c268 <_obstack_memory_used@@Base+0x5e34>
  41c25c:	cmp	w8, #0x6
  41c260:	cset	w8, eq  // eq = none
  41c264:	lsl	w8, w8, #20
  41c268:	ldr	x9, [x19]
  41c26c:	ldr	x10, [x19, #16]
  41c270:	add	x9, x9, x10, lsl #4
  41c274:	ldr	w10, [x9, #8]
  41c278:	and	w10, w10, #0xffefffff
  41c27c:	orr	w8, w10, w8
  41c280:	str	w8, [x9, #8]
  41c284:	ldp	x9, x8, [x19, #16]
  41c288:	mov	x10, #0xffffffffffffffff    	// #-1
  41c28c:	str	x10, [x8, x9, lsl #3]
  41c290:	ldr	x8, [x19, #40]
  41c294:	ldr	x9, [x19, #16]
  41c298:	mov	w10, #0x18                  	// #24
  41c29c:	madd	x8, x9, x10, x8
  41c2a0:	stp	xzr, xzr, [x8]
  41c2a4:	str	xzr, [x8, #16]
  41c2a8:	ldr	x8, [x19, #48]
  41c2ac:	ldr	x9, [x19, #16]
  41c2b0:	madd	x8, x9, x10, x8
  41c2b4:	stp	xzr, xzr, [x8]
  41c2b8:	str	xzr, [x8, #16]
  41c2bc:	ldr	x0, [x19, #16]
  41c2c0:	add	x8, x0, #0x1
  41c2c4:	str	x8, [x19, #16]
  41c2c8:	ldp	x20, x19, [sp, #64]
  41c2cc:	ldp	x22, x21, [sp, #48]
  41c2d0:	ldp	x24, x23, [sp, #32]
  41c2d4:	ldp	x26, x25, [sp, #16]
  41c2d8:	ldp	x29, x30, [sp], #80
  41c2dc:	ret
  41c2e0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41c2e4:	lsl	x26, x24, #1
  41c2e8:	movk	x8, #0xaaa, lsl #48
  41c2ec:	cmp	x26, x8
  41c2f0:	b.hi	41c37c <_obstack_memory_used@@Base+0x5f48>  // b.pmore
  41c2f4:	ldr	x0, [x19]
  41c2f8:	lsl	x1, x24, #5
  41c2fc:	bl	402610 <realloc@plt>
  41c300:	cbz	x0, 41c37c <_obstack_memory_used@@Base+0x5f48>
  41c304:	ldr	x8, [x19, #24]
  41c308:	lsl	x23, x24, #4
  41c30c:	str	x0, [x19]
  41c310:	mov	x1, x23
  41c314:	mov	x0, x8
  41c318:	bl	402610 <realloc@plt>
  41c31c:	ldr	x8, [x19, #32]
  41c320:	mov	x22, x0
  41c324:	mov	x1, x23
  41c328:	mov	x0, x8
  41c32c:	bl	402610 <realloc@plt>
  41c330:	mov	x23, x0
  41c334:	ldr	x0, [x19, #40]
  41c338:	add	x8, x24, x24, lsl #1
  41c33c:	lsl	x25, x8, #4
  41c340:	mov	x1, x25
  41c344:	bl	402610 <realloc@plt>
  41c348:	ldr	x8, [x19, #48]
  41c34c:	mov	x24, x0
  41c350:	mov	x1, x25
  41c354:	mov	x0, x8
  41c358:	bl	402610 <realloc@plt>
  41c35c:	cbz	x22, 41c384 <_obstack_memory_used@@Base+0x5f50>
  41c360:	cbz	x23, 41c384 <_obstack_memory_used@@Base+0x5f50>
  41c364:	cbz	x24, 41c384 <_obstack_memory_used@@Base+0x5f50>
  41c368:	cbz	x0, 41c384 <_obstack_memory_used@@Base+0x5f50>
  41c36c:	stp	x22, x23, [x19, #24]
  41c370:	stp	x24, x0, [x19, #40]
  41c374:	str	x26, [x19, #8]
  41c378:	b	41c214 <_obstack_memory_used@@Base+0x5de0>
  41c37c:	mov	x0, #0xffffffffffffffff    	// #-1
  41c380:	b	41c2c8 <_obstack_memory_used@@Base+0x5e94>
  41c384:	mov	x19, x0
  41c388:	mov	x0, x22
  41c38c:	bl	402770 <free@plt>
  41c390:	mov	x0, x23
  41c394:	bl	402770 <free@plt>
  41c398:	mov	x0, x24
  41c39c:	bl	402770 <free@plt>
  41c3a0:	mov	x0, x19
  41c3a4:	bl	402770 <free@plt>
  41c3a8:	mov	x0, #0xffffffffffffffff    	// #-1
  41c3ac:	b	41c2c8 <_obstack_memory_used@@Base+0x5e94>
  41c3b0:	stp	x29, x30, [sp, #-48]!
  41c3b4:	mov	w8, #0x2                   	// #2
  41c3b8:	str	x21, [sp, #16]
  41c3bc:	stp	x20, x19, [sp, #32]
  41c3c0:	mov	x21, x0
  41c3c4:	str	x8, [x0]
  41c3c8:	mov	w0, #0x10                  	// #16
  41c3cc:	mov	x29, sp
  41c3d0:	mov	x20, x2
  41c3d4:	mov	x19, x1
  41c3d8:	bl	4024e0 <malloc@plt>
  41c3dc:	str	x0, [x21, #16]
  41c3e0:	cbz	x0, 41c438 <_obstack_memory_used@@Base+0x6004>
  41c3e4:	cmp	x19, x20
  41c3e8:	b.ne	41c404 <_obstack_memory_used@@Base+0x5fd0>  // b.any
  41c3ec:	ldr	x8, [x21, #16]
  41c3f0:	mov	w9, #0x1                   	// #1
  41c3f4:	mov	w0, wzr
  41c3f8:	str	x9, [x21, #8]
  41c3fc:	str	x19, [x8]
  41c400:	b	41c428 <_obstack_memory_used@@Base+0x5ff4>
  41c404:	ldr	x8, [x21, #16]
  41c408:	mov	w9, #0x2                   	// #2
  41c40c:	cmp	x19, x20
  41c410:	mov	w0, wzr
  41c414:	str	x9, [x21, #8]
  41c418:	b.ge	41c424 <_obstack_memory_used@@Base+0x5ff0>  // b.tcont
  41c41c:	stp	x19, x20, [x8]
  41c420:	b	41c428 <_obstack_memory_used@@Base+0x5ff4>
  41c424:	stp	x20, x19, [x8]
  41c428:	ldp	x20, x19, [sp, #32]
  41c42c:	ldr	x21, [sp, #16]
  41c430:	ldp	x29, x30, [sp], #48
  41c434:	ret
  41c438:	mov	w0, #0xc                   	// #12
  41c43c:	b	41c428 <_obstack_memory_used@@Base+0x5ff4>
  41c440:	stp	x29, x30, [sp, #-32]!
  41c444:	mov	w8, #0x1                   	// #1
  41c448:	stp	x20, x19, [sp, #16]
  41c44c:	mov	x19, x0
  41c450:	stp	x8, x8, [x0]
  41c454:	mov	w0, #0x8                   	// #8
  41c458:	mov	x29, sp
  41c45c:	mov	x20, x1
  41c460:	bl	4024e0 <malloc@plt>
  41c464:	str	x0, [x19, #16]
  41c468:	cbz	x0, 41c484 <_obstack_memory_used@@Base+0x6050>
  41c46c:	mov	x8, x0
  41c470:	mov	w0, wzr
  41c474:	str	x20, [x8]
  41c478:	ldp	x20, x19, [sp, #16]
  41c47c:	ldp	x29, x30, [sp], #32
  41c480:	ret
  41c484:	stp	xzr, xzr, [x19]
  41c488:	mov	w0, #0xc                   	// #12
  41c48c:	b	41c478 <_obstack_memory_used@@Base+0x6044>
  41c490:	sub	sp, sp, #0x90
  41c494:	stp	x29, x30, [sp, #48]
  41c498:	stp	x26, x25, [sp, #80]
  41c49c:	stp	x24, x23, [sp, #96]
  41c4a0:	stp	x22, x21, [sp, #112]
  41c4a4:	stp	x20, x19, [sp, #128]
  41c4a8:	ldr	x8, [x1, #40]
  41c4ac:	mov	w9, #0x18                  	// #24
  41c4b0:	mov	x22, x1
  41c4b4:	mov	x19, x0
  41c4b8:	madd	x8, x2, x9, x8
  41c4bc:	ldr	x8, [x8, #8]
  41c4c0:	add	x0, sp, #0x18
  41c4c4:	str	x27, [sp, #64]
  41c4c8:	add	x29, sp, #0x30
  41c4cc:	add	x1, x8, #0x1
  41c4d0:	mov	w21, w3
  41c4d4:	mov	x20, x2
  41c4d8:	bl	41c6e8 <_obstack_memory_used@@Base+0x62b4>
  41c4dc:	cbnz	w0, 41c6d8 <_obstack_memory_used@@Base+0x62a4>
  41c4e0:	ldr	x8, [x22, #48]
  41c4e4:	mov	w9, #0x18                  	// #24
  41c4e8:	madd	x8, x20, x9, x8
  41c4ec:	mov	x9, #0xffffffffffffffff    	// #-1
  41c4f0:	str	x9, [x8, #8]
  41c4f4:	ldr	x8, [x22]
  41c4f8:	add	x9, x8, x20, lsl #4
  41c4fc:	ldr	w9, [x9, #8]
  41c500:	ubfx	w4, w9, #8, #10
  41c504:	cbz	w4, 41c550 <_obstack_memory_used@@Base+0x611c>
  41c508:	ldr	x9, [x22, #40]
  41c50c:	mov	w10, #0x18                  	// #24
  41c510:	madd	x10, x20, x10, x9
  41c514:	ldr	x10, [x10, #8]
  41c518:	cbz	x10, 41c550 <_obstack_memory_used@@Base+0x611c>
  41c51c:	mov	w10, #0x18                  	// #24
  41c520:	madd	x9, x20, x10, x9
  41c524:	ldr	x9, [x9, #16]
  41c528:	ldr	x9, [x9]
  41c52c:	add	x8, x8, x9, lsl #4
  41c530:	ldrb	w8, [x8, #10]
  41c534:	tbnz	w8, #2, 41c550 <_obstack_memory_used@@Base+0x611c>
  41c538:	mov	x0, x22
  41c53c:	mov	x1, x20
  41c540:	mov	x2, x20
  41c544:	mov	x3, x20
  41c548:	bl	41c724 <_obstack_memory_used@@Base+0x62f0>
  41c54c:	cbnz	w0, 41c6d8 <_obstack_memory_used@@Base+0x62a4>
  41c550:	ldr	x8, [x22]
  41c554:	add	x8, x8, x20, lsl #4
  41c558:	ldrb	w8, [x8, #8]
  41c55c:	tbz	w8, #3, 41c64c <_obstack_memory_used@@Base+0x6218>
  41c560:	ldr	x8, [x22, #40]
  41c564:	mov	w9, #0x18                  	// #24
  41c568:	madd	x9, x20, x9, x8
  41c56c:	ldr	x9, [x9, #8]
  41c570:	cmp	x9, #0x1
  41c574:	b.lt	41c64c <_obstack_memory_used@@Base+0x6218>  // b.tstop
  41c578:	mov	w27, wzr
  41c57c:	mov	x25, xzr
  41c580:	mov	w26, #0x18                  	// #24
  41c584:	madd	x8, x20, x26, x8
  41c588:	ldr	x8, [x8, #16]
  41c58c:	ldr	x24, [x8, x25, lsl #3]
  41c590:	ldr	x8, [x22, #48]
  41c594:	madd	x9, x24, x26, x8
  41c598:	ldr	x9, [x9, #8]
  41c59c:	cmn	x9, #0x1
  41c5a0:	b.eq	41c5c4 <_obstack_memory_used@@Base+0x6190>  // b.none
  41c5a4:	cbnz	x9, 41c5cc <_obstack_memory_used@@Base+0x6198>
  41c5a8:	mov	x0, sp
  41c5ac:	mov	x1, x22
  41c5b0:	mov	x2, x24
  41c5b4:	mov	w3, wzr
  41c5b8:	bl	41c490 <_obstack_memory_used@@Base+0x605c>
  41c5bc:	cbz	w0, 41c5e0 <_obstack_memory_used@@Base+0x61ac>
  41c5c0:	b	41c640 <_obstack_memory_used@@Base+0x620c>
  41c5c4:	mov	w8, #0x4                   	// #4
  41c5c8:	b	41c614 <_obstack_memory_used@@Base+0x61e0>
  41c5cc:	madd	x8, x24, x26, x8
  41c5d0:	ldr	x9, [x8, #16]
  41c5d4:	ldr	q0, [x8]
  41c5d8:	str	x9, [sp, #16]
  41c5dc:	str	q0, [sp]
  41c5e0:	add	x0, sp, #0x18
  41c5e4:	mov	x1, sp
  41c5e8:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  41c5ec:	cbnz	w0, 41c640 <_obstack_memory_used@@Base+0x620c>
  41c5f0:	ldr	x8, [x22, #48]
  41c5f4:	madd	x8, x24, x26, x8
  41c5f8:	ldr	x8, [x8, #8]
  41c5fc:	cbz	x8, 41c608 <_obstack_memory_used@@Base+0x61d4>
  41c600:	mov	w8, wzr
  41c604:	b	41c618 <_obstack_memory_used@@Base+0x61e4>
  41c608:	ldr	x0, [sp, #16]
  41c60c:	bl	402770 <free@plt>
  41c610:	mov	w8, wzr
  41c614:	mov	w27, #0x1                   	// #1
  41c618:	orr	w8, w8, #0x4
  41c61c:	cmp	w8, #0x4
  41c620:	b.ne	41c6a8 <_obstack_memory_used@@Base+0x6274>  // b.any
  41c624:	ldr	x8, [x22, #40]
  41c628:	add	x25, x25, #0x1
  41c62c:	madd	x9, x20, x26, x8
  41c630:	ldr	x9, [x9, #8]
  41c634:	cmp	x25, x9
  41c638:	b.lt	41c584 <_obstack_memory_used@@Base+0x6150>  // b.tstop
  41c63c:	b	41c6cc <_obstack_memory_used@@Base+0x6298>
  41c640:	mov	w8, #0x1                   	// #1
  41c644:	mov	w23, w0
  41c648:	b	41c618 <_obstack_memory_used@@Base+0x61e4>
  41c64c:	mov	w23, #0x1                   	// #1
  41c650:	add	x0, sp, #0x18
  41c654:	mov	x1, x20
  41c658:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41c65c:	tbz	w0, #0, 41c6e0 <_obstack_memory_used@@Base+0x62ac>
  41c660:	ldr	x8, [x22, #48]
  41c664:	orr	w9, w23, w21
  41c668:	tbz	w9, #0, 41c688 <_obstack_memory_used@@Base+0x6254>
  41c66c:	ldr	x9, [sp, #40]
  41c670:	ldur	q0, [sp, #24]
  41c674:	mov	w10, #0x18                  	// #24
  41c678:	madd	x8, x20, x10, x8
  41c67c:	str	x9, [x8, #16]
  41c680:	str	q0, [x8]
  41c684:	b	41c694 <_obstack_memory_used@@Base+0x6260>
  41c688:	mov	w9, #0x18                  	// #24
  41c68c:	madd	x8, x20, x9, x8
  41c690:	str	xzr, [x8, #8]
  41c694:	ldr	x8, [sp, #40]
  41c698:	ldur	q0, [sp, #24]
  41c69c:	mov	w23, wzr
  41c6a0:	str	x8, [x19, #16]
  41c6a4:	str	q0, [x19]
  41c6a8:	mov	w0, w23
  41c6ac:	ldp	x20, x19, [sp, #128]
  41c6b0:	ldp	x22, x21, [sp, #112]
  41c6b4:	ldp	x24, x23, [sp, #96]
  41c6b8:	ldp	x26, x25, [sp, #80]
  41c6bc:	ldr	x27, [sp, #64]
  41c6c0:	ldp	x29, x30, [sp, #48]
  41c6c4:	add	sp, sp, #0x90
  41c6c8:	ret
  41c6cc:	tst	w27, #0x1
  41c6d0:	cset	w23, eq  // eq = none
  41c6d4:	b	41c650 <_obstack_memory_used@@Base+0x621c>
  41c6d8:	mov	w23, w0
  41c6dc:	b	41c6a8 <_obstack_memory_used@@Base+0x6274>
  41c6e0:	mov	w23, #0xc                   	// #12
  41c6e4:	b	41c6a8 <_obstack_memory_used@@Base+0x6274>
  41c6e8:	stp	x29, x30, [sp, #-32]!
  41c6ec:	str	x19, [sp, #16]
  41c6f0:	mov	x19, x0
  41c6f4:	stp	x1, xzr, [x0]
  41c6f8:	lsl	x0, x1, #3
  41c6fc:	mov	x29, sp
  41c700:	bl	4024e0 <malloc@plt>
  41c704:	str	x0, [x19, #16]
  41c708:	ldr	x19, [sp, #16]
  41c70c:	cmp	x0, #0x0
  41c710:	mov	w8, #0xc                   	// #12
  41c714:	csel	w8, w8, wzr, eq  // eq = none
  41c718:	mov	w0, w8
  41c71c:	ldp	x29, x30, [sp], #32
  41c720:	ret
  41c724:	stp	x29, x30, [sp, #-96]!
  41c728:	stp	x28, x27, [sp, #16]
  41c72c:	stp	x24, x23, [sp, #48]
  41c730:	stp	x22, x21, [sp, #64]
  41c734:	stp	x20, x19, [sp, #80]
  41c738:	mov	w19, w4
  41c73c:	mov	x20, x3
  41c740:	mov	x24, x2
  41c744:	mov	x23, x1
  41c748:	mov	x21, x0
  41c74c:	mov	w27, #0x18                  	// #24
  41c750:	mov	w28, #0xc                   	// #12
  41c754:	stp	x26, x25, [sp, #32]
  41c758:	mov	x29, sp
  41c75c:	b	41c774 <_obstack_memory_used@@Base+0x6340>
  41c760:	ldr	x8, [x21, #24]
  41c764:	ldr	x9, [x8, x23, lsl #3]
  41c768:	str	x9, [x8, x24, lsl #3]
  41c76c:	mov	w8, #0x2                   	// #2
  41c770:	cbnz	w8, 41c924 <_obstack_memory_used@@Base+0x64f0>
  41c774:	ldr	x8, [x21]
  41c778:	add	x8, x8, x23, lsl #4
  41c77c:	ldrb	w9, [x8, #8]!
  41c780:	cmp	w9, #0x4
  41c784:	b.ne	41c7c8 <_obstack_memory_used@@Base+0x6394>  // b.any
  41c788:	ldr	x8, [x21, #24]
  41c78c:	ldr	x9, [x21, #40]
  41c790:	mov	x0, x21
  41c794:	mov	w2, w19
  41c798:	ldr	x25, [x8, x23, lsl #3]
  41c79c:	madd	x8, x24, x27, x9
  41c7a0:	str	xzr, [x8, #8]
  41c7a4:	mov	x1, x25
  41c7a8:	bl	41cbcc <_obstack_memory_used@@Base+0x6798>
  41c7ac:	cmn	x0, #0x1
  41c7b0:	b.eq	41c908 <_obstack_memory_used@@Base+0x64d4>  // b.none
  41c7b4:	ldr	x8, [x21, #24]
  41c7b8:	mov	x26, x0
  41c7bc:	ldr	x9, [x8, x23, lsl #3]
  41c7c0:	str	x9, [x8, x24, lsl #3]
  41c7c4:	b	41c888 <_obstack_memory_used@@Base+0x6454>
  41c7c8:	ldr	x26, [x21, #40]
  41c7cc:	madd	x9, x23, x27, x26
  41c7d0:	ldr	x9, [x9, #8]
  41c7d4:	cbz	x9, 41c760 <_obstack_memory_used@@Base+0x632c>
  41c7d8:	madd	x10, x23, x27, x26
  41c7dc:	ldr	x10, [x10, #16]
  41c7e0:	cmp	x9, #0x1
  41c7e4:	ldr	x25, [x10]
  41c7e8:	madd	x10, x24, x27, x26
  41c7ec:	str	xzr, [x10, #8]
  41c7f0:	b.ne	41c824 <_obstack_memory_used@@Base+0x63f0>  // b.any
  41c7f4:	cmp	x23, x20
  41c7f8:	b.ne	41c860 <_obstack_memory_used@@Base+0x642c>  // b.any
  41c7fc:	cmp	x24, x23
  41c800:	b.eq	41c860 <_obstack_memory_used@@Base+0x642c>  // b.none
  41c804:	madd	x0, x24, x27, x26
  41c808:	mov	x1, x25
  41c80c:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41c810:	tst	w0, #0x1
  41c814:	mov	w8, #0x1                   	// #1
  41c818:	cinc	w8, w8, ne  // ne = any
  41c81c:	csel	w22, w22, w28, ne  // ne = any
  41c820:	b	41c770 <_obstack_memory_used@@Base+0x633c>
  41c824:	mov	x0, x21
  41c828:	mov	x1, x25
  41c82c:	mov	w2, w19
  41c830:	bl	41cc68 <_obstack_memory_used@@Base+0x6834>
  41c834:	cmn	x0, #0x1
  41c838:	b.eq	41c8ac <_obstack_memory_used@@Base+0x6478>  // b.none
  41c83c:	mov	x1, x0
  41c840:	madd	x0, x24, x27, x26
  41c844:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41c848:	tbz	w0, #0, 41c908 <_obstack_memory_used@@Base+0x64d4>
  41c84c:	ldr	x8, [x21, #40]
  41c850:	madd	x8, x23, x27, x8
  41c854:	ldr	x8, [x8, #16]
  41c858:	ldr	x25, [x8, #8]
  41c85c:	b	41c86c <_obstack_memory_used@@Base+0x6438>
  41c860:	ldr	w8, [x8]
  41c864:	ubfx	w8, w8, #8, #10
  41c868:	orr	w19, w8, w19
  41c86c:	mov	x0, x21
  41c870:	mov	x1, x25
  41c874:	mov	w2, w19
  41c878:	bl	41cbcc <_obstack_memory_used@@Base+0x6798>
  41c87c:	cmn	x0, #0x1
  41c880:	b.eq	41c908 <_obstack_memory_used@@Base+0x64d4>  // b.none
  41c884:	mov	x26, x0
  41c888:	ldr	x8, [x21, #40]
  41c88c:	mov	x1, x26
  41c890:	madd	x0, x24, x27, x8
  41c894:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41c898:	tbz	w0, #0, 41c908 <_obstack_memory_used@@Base+0x64d4>
  41c89c:	mov	w8, wzr
  41c8a0:	mov	x23, x25
  41c8a4:	mov	x24, x26
  41c8a8:	b	41c770 <_obstack_memory_used@@Base+0x633c>
  41c8ac:	mov	x0, x21
  41c8b0:	mov	x1, x25
  41c8b4:	mov	w2, w19
  41c8b8:	bl	41cbcc <_obstack_memory_used@@Base+0x6798>
  41c8bc:	cmn	x0, #0x1
  41c8c0:	b.eq	41c914 <_obstack_memory_used@@Base+0x64e0>  // b.none
  41c8c4:	ldr	x8, [x21, #40]
  41c8c8:	mov	x26, x0
  41c8cc:	mov	x1, x26
  41c8d0:	madd	x0, x24, x27, x8
  41c8d4:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41c8d8:	tbz	w0, #0, 41c914 <_obstack_memory_used@@Base+0x64e0>
  41c8dc:	mov	x0, x21
  41c8e0:	mov	x1, x25
  41c8e4:	mov	x2, x26
  41c8e8:	mov	x3, x20
  41c8ec:	mov	w4, w19
  41c8f0:	bl	41c724 <_obstack_memory_used@@Base+0x62f0>
  41c8f4:	cmp	w0, #0x0
  41c8f8:	cset	w8, ne  // ne = any
  41c8fc:	csel	w22, w22, w0, eq  // eq = none
  41c900:	cbnz	w8, 41c770 <_obstack_memory_used@@Base+0x633c>
  41c904:	b	41c84c <_obstack_memory_used@@Base+0x6418>
  41c908:	mov	w22, #0xc                   	// #12
  41c90c:	mov	w8, #0x1                   	// #1
  41c910:	b	41c770 <_obstack_memory_used@@Base+0x633c>
  41c914:	mov	w22, #0xc                   	// #12
  41c918:	mov	w8, #0x1                   	// #1
  41c91c:	cbnz	w8, 41c770 <_obstack_memory_used@@Base+0x633c>
  41c920:	b	41c84c <_obstack_memory_used@@Base+0x6418>
  41c924:	cmp	w8, #0x2
  41c928:	b.ne	41c930 <_obstack_memory_used@@Base+0x64fc>  // b.any
  41c92c:	mov	w22, wzr
  41c930:	mov	w0, w22
  41c934:	ldp	x20, x19, [sp, #80]
  41c938:	ldp	x22, x21, [sp, #64]
  41c93c:	ldp	x24, x23, [sp, #48]
  41c940:	ldp	x26, x25, [sp, #32]
  41c944:	ldp	x28, x27, [sp, #16]
  41c948:	ldp	x29, x30, [sp], #96
  41c94c:	ret
  41c950:	stp	x29, x30, [sp, #-48]!
  41c954:	str	x21, [sp, #16]
  41c958:	stp	x20, x19, [sp, #32]
  41c95c:	mov	x29, sp
  41c960:	cbz	x1, 41ca48 <_obstack_memory_used@@Base+0x6614>
  41c964:	ldr	x8, [x1, #8]
  41c968:	mov	x20, x1
  41c96c:	cbz	x8, 41ca48 <_obstack_memory_used@@Base+0x6614>
  41c970:	ldp	x9, x10, [x0]
  41c974:	mov	x19, x0
  41c978:	add	x10, x10, x8, lsl #1
  41c97c:	cmp	x9, x10
  41c980:	b.ge	41c9a4 <_obstack_memory_used@@Base+0x6570>  // b.tcont
  41c984:	ldr	x0, [x19, #16]
  41c988:	add	x21, x9, x8
  41c98c:	lsl	x1, x21, #4
  41c990:	bl	402610 <realloc@plt>
  41c994:	cbz	x0, 41cad8 <_obstack_memory_used@@Base+0x66a4>
  41c998:	lsl	x8, x21, #1
  41c99c:	str	x0, [x19, #16]
  41c9a0:	str	x8, [x19]
  41c9a4:	ldr	x11, [x19, #8]
  41c9a8:	ldr	x10, [x20, #8]
  41c9ac:	cbz	x11, 41cac4 <_obstack_memory_used@@Base+0x6690>
  41c9b0:	sub	x8, x10, #0x1
  41c9b4:	sub	x9, x11, #0x1
  41c9b8:	orr	x12, x8, x9
  41c9bc:	add	x21, x11, x10, lsl #1
  41c9c0:	tbnz	x12, #63, 41ca0c <_obstack_memory_used@@Base+0x65d8>
  41c9c4:	ldr	x10, [x19, #16]
  41c9c8:	ldr	x11, [x20, #16]
  41c9cc:	b	41c9e4 <_obstack_memory_used@@Base+0x65b0>
  41c9d0:	sub	x8, x8, #0x1
  41c9d4:	sub	x21, x21, #0x1
  41c9d8:	str	x12, [x10, x21, lsl #3]
  41c9dc:	orr	x12, x8, x9
  41c9e0:	tbnz	x12, #63, 41ca0c <_obstack_memory_used@@Base+0x65d8>
  41c9e4:	ldr	x13, [x10, x9, lsl #3]
  41c9e8:	ldr	x12, [x11, x8, lsl #3]
  41c9ec:	cmp	x13, x12
  41c9f0:	b.ne	41c9fc <_obstack_memory_used@@Base+0x65c8>  // b.any
  41c9f4:	sub	x8, x8, #0x1
  41c9f8:	b	41ca00 <_obstack_memory_used@@Base+0x65cc>
  41c9fc:	b.lt	41c9d0 <_obstack_memory_used@@Base+0x659c>  // b.tstop
  41ca00:	sub	x9, x9, #0x1
  41ca04:	orr	x12, x8, x9
  41ca08:	tbz	x12, #63, 41c9e4 <_obstack_memory_used@@Base+0x65b0>
  41ca0c:	tbnz	x8, #63, 41ca2c <_obstack_memory_used@@Base+0x65f8>
  41ca10:	ldr	x9, [x19, #16]
  41ca14:	ldr	x1, [x20, #16]
  41ca18:	add	x8, x8, #0x1
  41ca1c:	sub	x21, x21, x8
  41ca20:	add	x0, x9, x21, lsl #3
  41ca24:	lsl	x2, x8, #3
  41ca28:	bl	402320 <memcpy@plt>
  41ca2c:	ldr	x9, [x19, #8]
  41ca30:	ldr	x8, [x20, #8]
  41ca34:	add	x8, x9, x8, lsl #1
  41ca38:	sub	x8, x8, #0x1
  41ca3c:	sub	x10, x8, x21
  41ca40:	adds	x11, x10, #0x1
  41ca44:	b.cc	41ca5c <_obstack_memory_used@@Base+0x6628>  // b.lo, b.ul, b.last
  41ca48:	mov	w0, wzr
  41ca4c:	ldp	x20, x19, [sp, #32]
  41ca50:	ldr	x21, [sp, #16]
  41ca54:	ldp	x29, x30, [sp], #48
  41ca58:	ret
  41ca5c:	ldr	x0, [x19, #16]
  41ca60:	sub	x10, x9, #0x1
  41ca64:	add	x9, x11, x9
  41ca68:	str	x9, [x19, #8]
  41ca6c:	add	x9, x0, x10, lsl #3
  41ca70:	lsl	x2, x11, #3
  41ca74:	neg	x11, x11
  41ca78:	ldr	x12, [x0, x8, lsl #3]
  41ca7c:	ldr	x13, [x0, x10, lsl #3]
  41ca80:	cmp	x12, x13
  41ca84:	b.le	41caa0 <_obstack_memory_used@@Base+0x666c>
  41ca88:	sub	x8, x8, #0x1
  41ca8c:	str	x12, [x9, x2]
  41ca90:	adds	x11, x11, #0x1
  41ca94:	sub	x2, x2, #0x8
  41ca98:	b.cc	41ca78 <_obstack_memory_used@@Base+0x6644>  // b.lo, b.ul, b.last
  41ca9c:	b	41ca48 <_obstack_memory_used@@Base+0x6614>
  41caa0:	str	x13, [x9, x2]
  41caa4:	cmp	x10, #0x0
  41caa8:	sub	x10, x10, #0x1
  41caac:	neg	x11, x11
  41cab0:	sub	x9, x9, #0x8
  41cab4:	b.gt	41ca70 <_obstack_memory_used@@Base+0x663c>
  41cab8:	add	x1, x0, x21, lsl #3
  41cabc:	bl	402320 <memcpy@plt>
  41cac0:	b	41ca48 <_obstack_memory_used@@Base+0x6614>
  41cac4:	str	x10, [x19, #8]
  41cac8:	ldp	x8, x1, [x20, #8]
  41cacc:	ldr	x0, [x19, #16]
  41cad0:	lsl	x2, x8, #3
  41cad4:	b	41cabc <_obstack_memory_used@@Base+0x6688>
  41cad8:	mov	w0, #0xc                   	// #12
  41cadc:	b	41ca4c <_obstack_memory_used@@Base+0x6618>
  41cae0:	stp	x29, x30, [sp, #-32]!
  41cae4:	stp	x20, x19, [sp, #16]
  41cae8:	ldr	x8, [x0]
  41caec:	mov	x19, x0
  41caf0:	mov	x20, x1
  41caf4:	mov	x29, sp
  41caf8:	cbz	x8, 41cb20 <_obstack_memory_used@@Base+0x66ec>
  41cafc:	ldr	x9, [x19, #8]
  41cb00:	cbnz	x9, 41cb40 <_obstack_memory_used@@Base+0x670c>
  41cb04:	ldr	x8, [x19, #16]
  41cb08:	str	x20, [x8]
  41cb0c:	ldr	x8, [x19, #8]
  41cb10:	mov	w0, #0x1                   	// #1
  41cb14:	add	x8, x8, #0x1
  41cb18:	str	x8, [x19, #8]
  41cb1c:	b	41cb34 <_obstack_memory_used@@Base+0x6700>
  41cb20:	mov	x0, x19
  41cb24:	mov	x1, x20
  41cb28:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  41cb2c:	cmp	w0, #0x0
  41cb30:	cset	w0, eq  // eq = none
  41cb34:	ldp	x20, x19, [sp, #16]
  41cb38:	ldp	x29, x30, [sp], #32
  41cb3c:	ret
  41cb40:	cmp	x8, x9
  41cb44:	b.ne	41cb64 <_obstack_memory_used@@Base+0x6730>  // b.any
  41cb48:	ldr	x0, [x19, #16]
  41cb4c:	lsl	x9, x8, #1
  41cb50:	lsl	x1, x8, #4
  41cb54:	str	x9, [x19]
  41cb58:	bl	402610 <realloc@plt>
  41cb5c:	cbz	x0, 41cb34 <_obstack_memory_used@@Base+0x6700>
  41cb60:	str	x0, [x19, #16]
  41cb64:	ldp	x9, x8, [x19, #8]
  41cb68:	ldr	x10, [x8]
  41cb6c:	cmp	x10, x20
  41cb70:	b.le	41cb9c <_obstack_memory_used@@Base+0x6768>
  41cb74:	cmp	x9, #0x1
  41cb78:	b.lt	41cbc4 <_obstack_memory_used@@Base+0x6790>  // b.tstop
  41cb7c:	mov	x10, x9
  41cb80:	add	x11, x8, x10, lsl #3
  41cb84:	ldur	x12, [x11, #-8]
  41cb88:	subs	x9, x10, #0x1
  41cb8c:	mov	x10, x9
  41cb90:	str	x12, [x11]
  41cb94:	b.gt	41cb80 <_obstack_memory_used@@Base+0x674c>
  41cb98:	b	41cbc4 <_obstack_memory_used@@Base+0x6790>
  41cb9c:	add	x10, x8, x9, lsl #3
  41cba0:	ldur	x10, [x10, #-8]
  41cba4:	cmp	x10, x20
  41cba8:	b.le	41cbc4 <_obstack_memory_used@@Base+0x6790>
  41cbac:	add	x11, x8, x9, lsl #3
  41cbb0:	str	x10, [x11]
  41cbb4:	ldur	x10, [x11, #-16]
  41cbb8:	sub	x9, x9, #0x1
  41cbbc:	cmp	x10, x20
  41cbc0:	b.gt	41cbac <_obstack_memory_used@@Base+0x6778>
  41cbc4:	str	x20, [x8, x9, lsl #3]
  41cbc8:	b	41cb0c <_obstack_memory_used@@Base+0x66d8>
  41cbcc:	stp	x29, x30, [sp, #-48]!
  41cbd0:	stp	x20, x19, [sp, #32]
  41cbd4:	ldr	x8, [x0]
  41cbd8:	str	x21, [sp, #16]
  41cbdc:	mov	x19, x1
  41cbe0:	mov	w21, w2
  41cbe4:	add	x8, x8, x1, lsl #4
  41cbe8:	ldp	x1, x8, [x8]
  41cbec:	mov	x29, sp
  41cbf0:	mov	x20, x0
  41cbf4:	mov	x2, x8
  41cbf8:	bl	41c1e4 <_obstack_memory_used@@Base+0x5db0>
  41cbfc:	cmn	x0, #0x1
  41cc00:	b.eq	41cc58 <_obstack_memory_used@@Base+0x6824>  // b.none
  41cc04:	ldr	x8, [x20]
  41cc08:	lsl	x9, x0, #4
  41cc0c:	add	x8, x8, x9
  41cc10:	ldr	w10, [x8, #8]
  41cc14:	bfi	w10, w21, #8, #10
  41cc18:	str	w10, [x8, #8]
  41cc1c:	ldr	x8, [x20]
  41cc20:	add	x10, x8, x19, lsl #4
  41cc24:	ldr	w10, [x10, #8]
  41cc28:	add	x8, x8, x9
  41cc2c:	ldr	w11, [x8, #8]
  41cc30:	and	w10, w10, #0x3ff00
  41cc34:	orr	w10, w10, w11
  41cc38:	str	w10, [x8, #8]
  41cc3c:	ldr	x8, [x20]
  41cc40:	add	x8, x8, x9
  41cc44:	ldr	w9, [x8, #8]
  41cc48:	orr	w9, w9, #0x40000
  41cc4c:	str	w9, [x8, #8]
  41cc50:	ldr	x8, [x20, #32]
  41cc54:	str	x19, [x8, x0, lsl #3]
  41cc58:	ldp	x20, x19, [sp, #32]
  41cc5c:	ldr	x21, [sp, #16]
  41cc60:	ldp	x29, x30, [sp], #48
  41cc64:	ret
  41cc68:	ldr	x11, [x0, #16]
  41cc6c:	mov	x8, #0xffffffffffffffff    	// #-1
  41cc70:	sub	x9, x11, #0x1
  41cc74:	cmp	x9, #0x1
  41cc78:	b.lt	41ccd0 <_obstack_memory_used@@Base+0x689c>  // b.tstop
  41cc7c:	ldr	x10, [x0]
  41cc80:	add	x10, x10, x9, lsl #4
  41cc84:	ldr	w12, [x10, #8]
  41cc88:	tbz	w12, #18, 41ccd0 <_obstack_memory_used@@Base+0x689c>
  41cc8c:	ldr	x10, [x0, #32]
  41cc90:	lsl	x8, x11, #4
  41cc94:	sub	x11, x8, #0x18
  41cc98:	ldr	x8, [x10, x9, lsl #3]
  41cc9c:	cmp	x8, x1
  41cca0:	b.ne	41ccb0 <_obstack_memory_used@@Base+0x687c>  // b.any
  41cca4:	ubfx	w8, w12, #8, #10
  41cca8:	cmp	w8, w2
  41ccac:	b.eq	41ccd8 <_obstack_memory_used@@Base+0x68a4>  // b.none
  41ccb0:	sub	x9, x9, #0x1
  41ccb4:	cmp	x9, #0x1
  41ccb8:	mov	x8, #0xffffffffffffffff    	// #-1
  41ccbc:	b.lt	41ccd0 <_obstack_memory_used@@Base+0x689c>  // b.tstop
  41ccc0:	ldr	x12, [x0]
  41ccc4:	ldr	w12, [x12, x11]
  41ccc8:	sub	x11, x11, #0x10
  41cccc:	tbnz	w12, #18, 41cc98 <_obstack_memory_used@@Base+0x6864>
  41ccd0:	mov	x0, x8
  41ccd4:	ret
  41ccd8:	mov	x0, x9
  41ccdc:	ret
  41cce0:	stp	x29, x30, [sp, #-32]!
  41cce4:	stp	x20, x19, [sp, #16]
  41cce8:	ldp	x8, x9, [x0]
  41ccec:	mov	x19, x0
  41ccf0:	mov	x20, x1
  41ccf4:	mov	x29, sp
  41ccf8:	cmp	x8, x9
  41ccfc:	b.ne	41cd20 <_obstack_memory_used@@Base+0x68ec>  // b.any
  41cd00:	ldr	x0, [x19, #16]
  41cd04:	lsl	x8, x8, #1
  41cd08:	add	x8, x8, #0x2
  41cd0c:	lsl	x1, x8, #3
  41cd10:	str	x8, [x19]
  41cd14:	bl	402610 <realloc@plt>
  41cd18:	cbz	x0, 41cd34 <_obstack_memory_used@@Base+0x6900>
  41cd1c:	str	x0, [x19, #16]
  41cd20:	ldp	x8, x9, [x19, #8]
  41cd24:	mov	w0, #0x1                   	// #1
  41cd28:	add	x10, x8, #0x1
  41cd2c:	str	x10, [x19, #8]
  41cd30:	str	x20, [x9, x8, lsl #3]
  41cd34:	ldp	x20, x19, [sp, #16]
  41cd38:	ldp	x29, x30, [sp], #32
  41cd3c:	ret
  41cd40:	stp	x29, x30, [sp, #-48]!
  41cd44:	stp	x20, x19, [sp, #32]
  41cd48:	ldr	x8, [x1, #8]
  41cd4c:	str	x21, [sp, #16]
  41cd50:	mov	x19, x0
  41cd54:	mov	x29, sp
  41cd58:	str	x8, [x0, #8]
  41cd5c:	ldr	x21, [x1, #8]
  41cd60:	cmp	x21, #0x1
  41cd64:	b.lt	41cd94 <_obstack_memory_used@@Base+0x6960>  // b.tstop
  41cd68:	lsl	x0, x8, #3
  41cd6c:	mov	x20, x1
  41cd70:	str	x8, [x19]
  41cd74:	bl	4024e0 <malloc@plt>
  41cd78:	str	x0, [x19, #16]
  41cd7c:	cbz	x0, 41cdb0 <_obstack_memory_used@@Base+0x697c>
  41cd80:	ldr	x1, [x20, #16]
  41cd84:	lsl	x2, x21, #3
  41cd88:	bl	402320 <memcpy@plt>
  41cd8c:	mov	w0, wzr
  41cd90:	b	41cda0 <_obstack_memory_used@@Base+0x696c>
  41cd94:	mov	w0, wzr
  41cd98:	stp	xzr, xzr, [x19]
  41cd9c:	str	xzr, [x19, #16]
  41cda0:	ldp	x20, x19, [sp, #32]
  41cda4:	ldr	x21, [sp, #16]
  41cda8:	ldp	x29, x30, [sp], #48
  41cdac:	ret
  41cdb0:	stp	xzr, xzr, [x19]
  41cdb4:	mov	w0, #0xc                   	// #12
  41cdb8:	b	41cda0 <_obstack_memory_used@@Base+0x696c>
  41cdbc:	ldr	x8, [x0, #8]
  41cdc0:	subs	x8, x8, #0x1
  41cdc4:	b.lt	41cdf8 <_obstack_memory_used@@Base+0x69c4>  // b.tstop
  41cdc8:	b.eq	41ce00 <_obstack_memory_used@@Base+0x69cc>  // b.none
  41cdcc:	ldr	x10, [x0, #16]
  41cdd0:	mov	x9, xzr
  41cdd4:	add	x11, x8, x9
  41cdd8:	lsr	x11, x11, #1
  41cddc:	ldr	x12, [x10, x11, lsl #3]
  41cde0:	cmp	x12, x1
  41cde4:	csinc	x9, x9, x11, ge  // ge = tcont
  41cde8:	csel	x8, x8, x11, lt  // lt = tstop
  41cdec:	cmp	x9, x8
  41cdf0:	b.cc	41cdd4 <_obstack_memory_used@@Base+0x69a0>  // b.lo, b.ul, b.last
  41cdf4:	b	41ce04 <_obstack_memory_used@@Base+0x69d0>
  41cdf8:	mov	x0, xzr
  41cdfc:	ret
  41ce00:	mov	x9, xzr
  41ce04:	ldr	x8, [x0, #16]
  41ce08:	ldr	x8, [x8, x9, lsl #3]
  41ce0c:	cmp	x8, x1
  41ce10:	csinc	x0, xzr, x9, ne  // ne = any
  41ce14:	ret
  41ce18:	stp	x29, x30, [sp, #-96]!
  41ce1c:	stp	x28, x27, [sp, #16]
  41ce20:	stp	x26, x25, [sp, #32]
  41ce24:	stp	x24, x23, [sp, #48]
  41ce28:	stp	x22, x21, [sp, #64]
  41ce2c:	stp	x20, x19, [sp, #80]
  41ce30:	ldr	x8, [x2, #8]
  41ce34:	mov	x19, x0
  41ce38:	mov	x29, sp
  41ce3c:	cbz	x8, 41cf0c <_obstack_memory_used@@Base+0x6ad8>
  41ce40:	mov	x22, x1
  41ce44:	mov	x0, x2
  41ce48:	mov	w1, w3
  41ce4c:	mov	w20, w3
  41ce50:	mov	x21, x2
  41ce54:	bl	41cf34 <_obstack_memory_used@@Base+0x6b00>
  41ce58:	ldr	x9, [x22, #136]
  41ce5c:	ldr	x8, [x22, #64]
  41ce60:	mov	w10, #0x18                  	// #24
  41ce64:	mov	x23, x0
  41ce68:	and	x9, x9, x0
  41ce6c:	madd	x25, x9, x10, x8
  41ce70:	ldr	x10, [x25]
  41ce74:	cmp	x10, #0x1
  41ce78:	b.lt	41cee4 <_obstack_memory_used@@Base+0x6ab0>  // b.tstop
  41ce7c:	mov	w10, #0x18                  	// #24
  41ce80:	madd	x8, x9, x10, x8
  41ce84:	ldr	x27, [x8, #16]
  41ce88:	mov	x26, xzr
  41ce8c:	ldr	x28, [x27, x26, lsl #3]
  41ce90:	ldr	x8, [x28]
  41ce94:	cmp	x8, x23
  41ce98:	b.ne	41cecc <_obstack_memory_used@@Base+0x6a98>  // b.any
  41ce9c:	ldrb	w8, [x28, #104]
  41cea0:	and	w8, w8, #0xf
  41cea4:	cmp	w8, w20
  41cea8:	b.ne	41cecc <_obstack_memory_used@@Base+0x6a98>  // b.any
  41ceac:	ldr	x0, [x28, #80]
  41ceb0:	mov	x1, x21
  41ceb4:	bl	41cf60 <_obstack_memory_used@@Base+0x6b2c>
  41ceb8:	tbz	w0, #0, 41cecc <_obstack_memory_used@@Base+0x6a98>
  41cebc:	mov	x24, x28
  41cec0:	mov	w8, wzr
  41cec4:	tbnz	wzr, #0, 41ced4 <_obstack_memory_used@@Base+0x6aa0>
  41cec8:	b	41cf14 <_obstack_memory_used@@Base+0x6ae0>
  41cecc:	mov	w8, #0x1                   	// #1
  41ced0:	tbz	w8, #0, 41cf14 <_obstack_memory_used@@Base+0x6ae0>
  41ced4:	ldr	x8, [x25]
  41ced8:	add	x26, x26, #0x1
  41cedc:	cmp	x26, x8
  41cee0:	b.lt	41ce8c <_obstack_memory_used@@Base+0x6a58>  // b.tstop
  41cee4:	mov	x0, x22
  41cee8:	mov	x1, x21
  41ceec:	mov	w2, w20
  41cef0:	mov	x3, x23
  41cef4:	bl	41cfc0 <_obstack_memory_used@@Base+0x6b8c>
  41cef8:	mov	x24, x0
  41cefc:	cbnz	x0, 41cf14 <_obstack_memory_used@@Base+0x6ae0>
  41cf00:	mov	w8, #0xc                   	// #12
  41cf04:	str	w8, [x19]
  41cf08:	b	41cf14 <_obstack_memory_used@@Base+0x6ae0>
  41cf0c:	mov	x24, xzr
  41cf10:	str	wzr, [x19]
  41cf14:	mov	x0, x24
  41cf18:	ldp	x20, x19, [sp, #80]
  41cf1c:	ldp	x22, x21, [sp, #64]
  41cf20:	ldp	x24, x23, [sp, #48]
  41cf24:	ldp	x26, x25, [sp, #32]
  41cf28:	ldp	x28, x27, [sp, #16]
  41cf2c:	ldp	x29, x30, [sp], #96
  41cf30:	ret
  41cf34:	ldr	x9, [x0, #8]
  41cf38:	mov	x8, x0
  41cf3c:	cmp	x9, #0x1
  41cf40:	add	x0, x9, w1, uxtw
  41cf44:	b.lt	41cf5c <_obstack_memory_used@@Base+0x6b28>  // b.tstop
  41cf48:	ldr	x8, [x8, #16]
  41cf4c:	ldr	x10, [x8], #8
  41cf50:	subs	x9, x9, #0x1
  41cf54:	add	x0, x10, x0
  41cf58:	b.ne	41cf4c <_obstack_memory_used@@Base+0x6b18>  // b.any
  41cf5c:	ret
  41cf60:	mov	w8, wzr
  41cf64:	cbz	x0, 41cfb0 <_obstack_memory_used@@Base+0x6b7c>
  41cf68:	cbz	x1, 41cfb0 <_obstack_memory_used@@Base+0x6b7c>
  41cf6c:	ldr	x8, [x0, #8]
  41cf70:	ldr	x9, [x1, #8]
  41cf74:	cmp	x8, x9
  41cf78:	b.ne	41cfac <_obstack_memory_used@@Base+0x6b78>  // b.any
  41cf7c:	sub	x8, x8, #0x1
  41cf80:	add	x9, x8, #0x1
  41cf84:	cmp	x9, #0x1
  41cf88:	b.lt	41cfb8 <_obstack_memory_used@@Base+0x6b84>  // b.tstop
  41cf8c:	ldr	x9, [x0, #16]
  41cf90:	ldr	x10, [x1, #16]
  41cf94:	lsl	x11, x8, #3
  41cf98:	sub	x8, x8, #0x1
  41cf9c:	ldr	x9, [x9, x11]
  41cfa0:	ldr	x10, [x10, x11]
  41cfa4:	cmp	x9, x10
  41cfa8:	b.eq	41cf80 <_obstack_memory_used@@Base+0x6b4c>  // b.none
  41cfac:	mov	w8, wzr
  41cfb0:	mov	w0, w8
  41cfb4:	ret
  41cfb8:	mov	w0, #0x1                   	// #1
  41cfbc:	ret
  41cfc0:	stp	x29, x30, [sp, #-96]!
  41cfc4:	stp	x24, x23, [sp, #48]
  41cfc8:	stp	x22, x21, [sp, #64]
  41cfcc:	mov	x23, x1
  41cfd0:	mov	x21, x0
  41cfd4:	mov	w0, #0x70                  	// #112
  41cfd8:	mov	w1, #0x1                   	// #1
  41cfdc:	str	x27, [sp, #16]
  41cfe0:	stp	x26, x25, [sp, #32]
  41cfe4:	stp	x20, x19, [sp, #80]
  41cfe8:	mov	x29, sp
  41cfec:	mov	x20, x3
  41cff0:	mov	w22, w2
  41cff4:	bl	4025d0 <calloc@plt>
  41cff8:	mov	x19, x0
  41cffc:	cbz	x0, 41d17c <_obstack_memory_used@@Base+0x6d48>
  41d000:	add	x24, x19, #0x8
  41d004:	mov	x0, x24
  41d008:	mov	x1, x23
  41d00c:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  41d010:	cbnz	w0, 41d170 <_obstack_memory_used@@Base+0x6d3c>
  41d014:	ldrb	w8, [x19, #104]
  41d018:	str	x24, [x19, #80]
  41d01c:	bfxil	w8, w22, #0, #4
  41d020:	strb	w8, [x19, #104]
  41d024:	ldr	x8, [x23, #8]
  41d028:	cmp	x8, #0x1
  41d02c:	b.lt	41d150 <_obstack_memory_used@@Base+0x6d1c>  // b.tstop
  41d030:	mov	x25, xzr
  41d034:	mov	x26, xzr
  41d038:	ldr	x8, [x23, #16]
  41d03c:	ldr	x9, [x21]
  41d040:	ldr	x8, [x8, x25, lsl #3]
  41d044:	add	x8, x9, x8, lsl #4
  41d048:	ldr	w27, [x8, #8]
  41d04c:	and	w8, w27, #0x3ffff
  41d050:	cmp	w8, #0x1
  41d054:	b.ne	41d060 <_obstack_memory_used@@Base+0x6c2c>  // b.any
  41d058:	mov	w8, #0x4                   	// #4
  41d05c:	b	41d134 <_obstack_memory_used@@Base+0x6d00>
  41d060:	ldrb	w9, [x19, #104]
  41d064:	lsr	w11, w27, #15
  41d068:	and	w10, w27, #0xff
  41d06c:	and	w11, w11, #0x20
  41d070:	and	w8, w27, #0x3ff00
  41d074:	orr	w9, w9, w11
  41d078:	cmp	w10, #0x2
  41d07c:	strb	w9, [x19, #104]
  41d080:	b.eq	41d094 <_obstack_memory_used@@Base+0x6c60>  // b.none
  41d084:	cmp	w10, #0x4
  41d088:	b.ne	41d0a0 <_obstack_memory_used@@Base+0x6c6c>  // b.any
  41d08c:	mov	w10, #0x40                  	// #64
  41d090:	b	41d098 <_obstack_memory_used@@Base+0x6c64>
  41d094:	mov	w10, #0x10                  	// #16
  41d098:	orr	w9, w9, w10
  41d09c:	strb	w9, [x19, #104]
  41d0a0:	cbz	w8, 41d134 <_obstack_memory_used@@Base+0x6d00>
  41d0a4:	ldr	x8, [x19, #80]
  41d0a8:	cmp	x8, x24
  41d0ac:	b.eq	41d0ec <_obstack_memory_used@@Base+0x6cb8>  // b.none
  41d0b0:	tbnz	w22, #0, 41d0b8 <_obstack_memory_used@@Base+0x6c84>
  41d0b4:	tbnz	w27, #8, 41d0d4 <_obstack_memory_used@@Base+0x6ca0>
  41d0b8:	tbz	w22, #0, 41d0c0 <_obstack_memory_used@@Base+0x6c8c>
  41d0bc:	tbnz	w27, #9, 41d0d4 <_obstack_memory_used@@Base+0x6ca0>
  41d0c0:	tbnz	w22, #1, 41d0c8 <_obstack_memory_used@@Base+0x6c94>
  41d0c4:	tbnz	w27, #12, 41d0d4 <_obstack_memory_used@@Base+0x6ca0>
  41d0c8:	mov	w8, wzr
  41d0cc:	tbnz	w22, #2, 41d134 <_obstack_memory_used@@Base+0x6d00>
  41d0d0:	tbz	w27, #14, 41d134 <_obstack_memory_used@@Base+0x6d00>
  41d0d4:	sub	x1, x25, x26
  41d0d8:	mov	x0, x24
  41d0dc:	bl	41d19c <_obstack_memory_used@@Base+0x6d68>
  41d0e0:	mov	w8, wzr
  41d0e4:	add	x26, x26, #0x1
  41d0e8:	b	41d134 <_obstack_memory_used@@Base+0x6d00>
  41d0ec:	mov	w0, #0x18                  	// #24
  41d0f0:	bl	4024e0 <malloc@plt>
  41d0f4:	cbz	x0, 41d108 <_obstack_memory_used@@Base+0x6cd4>
  41d0f8:	mov	x1, x23
  41d0fc:	str	x0, [x19, #80]
  41d100:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  41d104:	cbz	w0, 41d11c <_obstack_memory_used@@Base+0x6ce8>
  41d108:	mov	x0, x19
  41d10c:	bl	417a50 <_obstack_memory_used@@Base+0x161c>
  41d110:	mov	w8, #0x1                   	// #1
  41d114:	cbnz	w8, 41d134 <_obstack_memory_used@@Base+0x6d00>
  41d118:	b	41d0b0 <_obstack_memory_used@@Base+0x6c7c>
  41d11c:	ldrb	w9, [x19, #104]
  41d120:	mov	w8, wzr
  41d124:	mov	x26, xzr
  41d128:	orr	w9, w9, #0x80
  41d12c:	strb	w9, [x19, #104]
  41d130:	cbz	w8, 41d0b0 <_obstack_memory_used@@Base+0x6c7c>
  41d134:	orr	w8, w8, #0x4
  41d138:	cmp	w8, #0x4
  41d13c:	b.ne	41d178 <_obstack_memory_used@@Base+0x6d44>  // b.any
  41d140:	ldr	x8, [x23, #8]
  41d144:	add	x25, x25, #0x1
  41d148:	cmp	x25, x8
  41d14c:	b.lt	41d038 <_obstack_memory_used@@Base+0x6c04>  // b.tstop
  41d150:	mov	x0, x21
  41d154:	mov	x1, x19
  41d158:	mov	x2, x20
  41d15c:	bl	41d1e0 <_obstack_memory_used@@Base+0x6dac>
  41d160:	cbz	w0, 41d17c <_obstack_memory_used@@Base+0x6d48>
  41d164:	mov	x0, x19
  41d168:	bl	417a50 <_obstack_memory_used@@Base+0x161c>
  41d16c:	b	41d178 <_obstack_memory_used@@Base+0x6d44>
  41d170:	mov	x0, x19
  41d174:	bl	402770 <free@plt>
  41d178:	mov	x19, xzr
  41d17c:	mov	x0, x19
  41d180:	ldp	x20, x19, [sp, #80]
  41d184:	ldp	x22, x21, [sp, #64]
  41d188:	ldp	x24, x23, [sp, #48]
  41d18c:	ldp	x26, x25, [sp, #32]
  41d190:	ldr	x27, [sp, #16]
  41d194:	ldp	x29, x30, [sp], #96
  41d198:	ret
  41d19c:	tbnz	x1, #63, 41d1dc <_obstack_memory_used@@Base+0x6da8>
  41d1a0:	ldr	x8, [x0, #8]
  41d1a4:	cmp	x8, x1
  41d1a8:	b.le	41d1dc <_obstack_memory_used@@Base+0x6da8>
  41d1ac:	sub	x8, x8, #0x1
  41d1b0:	cmp	x8, x1
  41d1b4:	str	x8, [x0, #8]
  41d1b8:	b.le	41d1dc <_obstack_memory_used@@Base+0x6da8>
  41d1bc:	ldr	x8, [x0, #16]
  41d1c0:	add	x9, x8, x1, lsl #3
  41d1c4:	ldr	x10, [x9, #8]
  41d1c8:	add	x1, x1, #0x1
  41d1cc:	str	x10, [x9]
  41d1d0:	ldr	x9, [x0, #8]
  41d1d4:	cmp	x1, x9
  41d1d8:	b.lt	41d1c0 <_obstack_memory_used@@Base+0x6d8c>  // b.tstop
  41d1dc:	ret
  41d1e0:	stp	x29, x30, [sp, #-80]!
  41d1e4:	stp	x24, x23, [sp, #32]
  41d1e8:	stp	x22, x21, [sp, #48]
  41d1ec:	stp	x20, x19, [sp, #64]
  41d1f0:	mov	x19, x1
  41d1f4:	ldr	x1, [x1, #16]
  41d1f8:	add	x22, x19, #0x20
  41d1fc:	mov	x21, x0
  41d200:	mov	x0, x22
  41d204:	str	x25, [sp, #16]
  41d208:	mov	x29, sp
  41d20c:	mov	x20, x2
  41d210:	str	x2, [x19]
  41d214:	bl	41c6e8 <_obstack_memory_used@@Base+0x62b4>
  41d218:	cbnz	w0, 41d264 <_obstack_memory_used@@Base+0x6e30>
  41d21c:	ldr	x8, [x19, #16]
  41d220:	cmp	x8, #0x1
  41d224:	b.lt	41d26c <_obstack_memory_used@@Base+0x6e38>  // b.tstop
  41d228:	mov	x23, xzr
  41d22c:	b	41d240 <_obstack_memory_used@@Base+0x6e0c>
  41d230:	ldr	x8, [x19, #16]
  41d234:	add	x23, x23, #0x1
  41d238:	cmp	x23, x8
  41d23c:	b.ge	41d26c <_obstack_memory_used@@Base+0x6e38>  // b.tcont
  41d240:	ldr	x8, [x19, #24]
  41d244:	ldr	x1, [x8, x23, lsl #3]
  41d248:	ldr	x8, [x21]
  41d24c:	add	x8, x8, x1, lsl #4
  41d250:	ldrb	w8, [x8, #8]
  41d254:	tbnz	w8, #3, 41d230 <_obstack_memory_used@@Base+0x6dfc>
  41d258:	mov	x0, x22
  41d25c:	bl	41cce0 <_obstack_memory_used@@Base+0x68ac>
  41d260:	tbnz	w0, #0, 41d230 <_obstack_memory_used@@Base+0x6dfc>
  41d264:	mov	w0, #0xc                   	// #12
  41d268:	b	41d2b4 <_obstack_memory_used@@Base+0x6e80>
  41d26c:	ldr	x8, [x21, #136]
  41d270:	ldr	x21, [x21, #64]
  41d274:	mov	w9, #0x18                  	// #24
  41d278:	and	x22, x8, x20
  41d27c:	madd	x20, x22, x9, x21
  41d280:	mov	x23, x20
  41d284:	ldr	x9, [x23, #8]!
  41d288:	ldr	x8, [x20]
  41d28c:	cmp	x9, x8
  41d290:	b.le	41d2cc <_obstack_memory_used@@Base+0x6e98>
  41d294:	mov	w8, #0x18                  	// #24
  41d298:	ldr	x9, [x20]
  41d29c:	madd	x8, x22, x8, x21
  41d2a0:	ldr	x8, [x8, #16]
  41d2a4:	mov	w0, wzr
  41d2a8:	add	x10, x9, #0x1
  41d2ac:	str	x10, [x20]
  41d2b0:	str	x19, [x8, x9, lsl #3]
  41d2b4:	ldp	x20, x19, [sp, #64]
  41d2b8:	ldp	x22, x21, [sp, #48]
  41d2bc:	ldp	x24, x23, [sp, #32]
  41d2c0:	ldr	x25, [sp, #16]
  41d2c4:	ldp	x29, x30, [sp], #80
  41d2c8:	ret
  41d2cc:	mov	w9, #0x18                  	// #24
  41d2d0:	madd	x24, x22, x9, x21
  41d2d4:	ldr	x0, [x24, #16]!
  41d2d8:	lsl	x8, x8, #1
  41d2dc:	add	x25, x8, #0x2
  41d2e0:	lsl	x1, x25, #3
  41d2e4:	bl	402610 <realloc@plt>
  41d2e8:	cbz	x0, 41d264 <_obstack_memory_used@@Base+0x6e30>
  41d2ec:	str	x0, [x24]
  41d2f0:	str	x25, [x23]
  41d2f4:	b	41d294 <_obstack_memory_used@@Base+0x6e60>
  41d2f8:	stp	x29, x30, [sp, #-64]!
  41d2fc:	stp	x24, x23, [sp, #16]
  41d300:	stp	x22, x21, [sp, #32]
  41d304:	stp	x20, x19, [sp, #48]
  41d308:	mov	x20, x2
  41d30c:	mov	x21, x1
  41d310:	mov	x19, x0
  41d314:	cmp	w3, #0x1
  41d318:	add	x24, x2, #0x1
  41d31c:	mov	x29, sp
  41d320:	b.eq	41d358 <_obstack_memory_used@@Base+0x6f24>  // b.none
  41d324:	cbnz	w3, 41d398 <_obstack_memory_used@@Base+0x6f64>
  41d328:	lsl	x23, x24, #3
  41d32c:	mov	x0, x23
  41d330:	bl	4024e0 <malloc@plt>
  41d334:	str	x0, [x19, #8]
  41d338:	cbz	x0, 41d3d8 <_obstack_memory_used@@Base+0x6fa4>
  41d33c:	mov	x22, x0
  41d340:	mov	x0, x23
  41d344:	bl	4024e0 <malloc@plt>
  41d348:	str	x0, [x19, #16]
  41d34c:	cbz	x0, 41d41c <_obstack_memory_used@@Base+0x6fe8>
  41d350:	str	x24, [x19]
  41d354:	b	41d364 <_obstack_memory_used@@Base+0x6f30>
  41d358:	ldr	x8, [x19]
  41d35c:	cmp	x24, x8
  41d360:	b.hi	41d3ec <_obstack_memory_used@@Base+0x6fb8>  // b.pmore
  41d364:	mov	w0, #0x1                   	// #1
  41d368:	cmp	x20, #0x1
  41d36c:	b.lt	41d3a4 <_obstack_memory_used@@Base+0x6f70>  // b.tstop
  41d370:	ldp	x8, x9, [x19, #8]
  41d374:	add	x10, x21, #0x8
  41d378:	mov	x11, x20
  41d37c:	ldur	x12, [x10, #-8]
  41d380:	subs	x11, x11, #0x1
  41d384:	str	x12, [x8], #8
  41d388:	ldr	x12, [x10], #16
  41d38c:	str	x12, [x9], #8
  41d390:	b.ne	41d37c <_obstack_memory_used@@Base+0x6f48>  // b.any
  41d394:	b	41d3a8 <_obstack_memory_used@@Base+0x6f74>
  41d398:	mov	w0, #0x2                   	// #2
  41d39c:	cmp	x20, #0x1
  41d3a0:	b.ge	41d370 <_obstack_memory_used@@Base+0x6f3c>  // b.tcont
  41d3a4:	mov	x20, xzr
  41d3a8:	ldr	x8, [x19]
  41d3ac:	cmp	x20, x8
  41d3b0:	b.cs	41d3d8 <_obstack_memory_used@@Base+0x6fa4>  // b.hs, b.nlast
  41d3b4:	ldp	x9, x8, [x19, #8]
  41d3b8:	mov	x10, #0xffffffffffffffff    	// #-1
  41d3bc:	lsl	x11, x20, #3
  41d3c0:	str	x10, [x8, x11]
  41d3c4:	str	x10, [x9, x11]
  41d3c8:	ldr	x11, [x19]
  41d3cc:	add	x20, x20, #0x1
  41d3d0:	cmp	x20, x11
  41d3d4:	b.cc	41d3bc <_obstack_memory_used@@Base+0x6f88>  // b.lo, b.ul, b.last
  41d3d8:	ldp	x20, x19, [sp, #48]
  41d3dc:	ldp	x22, x21, [sp, #32]
  41d3e0:	ldp	x24, x23, [sp, #16]
  41d3e4:	ldp	x29, x30, [sp], #64
  41d3e8:	ret
  41d3ec:	ldr	x0, [x19, #8]
  41d3f0:	lsl	x23, x24, #3
  41d3f4:	mov	x1, x23
  41d3f8:	bl	402610 <realloc@plt>
  41d3fc:	cbz	x0, 41d3d8 <_obstack_memory_used@@Base+0x6fa4>
  41d400:	mov	x22, x0
  41d404:	ldr	x0, [x19, #16]
  41d408:	mov	x1, x23
  41d40c:	bl	402610 <realloc@plt>
  41d410:	cbz	x0, 41d41c <_obstack_memory_used@@Base+0x6fe8>
  41d414:	stp	x22, x0, [x19, #8]
  41d418:	b	41d350 <_obstack_memory_used@@Base+0x6f1c>
  41d41c:	mov	x0, x22
  41d420:	bl	402770 <free@plt>
  41d424:	mov	w0, wzr
  41d428:	b	41d3d8 <_obstack_memory_used@@Base+0x6fa4>
  41d42c:	stp	x29, x30, [sp, #-64]!
  41d430:	stp	x22, x21, [sp, #32]
  41d434:	stp	x20, x19, [sp, #48]
  41d438:	ldrsw	x9, [x6, #180]
  41d43c:	add	x10, x2, #0x1
  41d440:	mov	x8, x4
  41d444:	mov	x19, x0
  41d448:	cmp	x9, x3
  41d44c:	csel	x9, x9, x3, gt
  41d450:	cmp	x10, x9
  41d454:	str	x23, [sp, #16]
  41d458:	mov	x21, x2
  41d45c:	mov	x22, x1
  41d460:	csinc	x23, x9, x2, ge  // ge = tcont
  41d464:	and	w4, w5, #0x1
  41d468:	mov	x0, x1
  41d46c:	mov	x1, x2
  41d470:	mov	x2, x19
  41d474:	mov	x3, x8
  41d478:	mov	x5, x6
  41d47c:	mov	x29, sp
  41d480:	mov	x20, x6
  41d484:	bl	41850c <_obstack_memory_used@@Base+0x20d8>
  41d488:	mov	x0, x19
  41d48c:	mov	x1, x23
  41d490:	bl	41855c <_obstack_memory_used@@Base+0x2128>
  41d494:	cbnz	w0, 41d4d4 <_obstack_memory_used@@Base+0x70a0>
  41d498:	add	x8, x20, #0xb8
  41d49c:	str	x8, [x19, #128]
  41d4a0:	ldrb	w8, [x20, #176]
  41d4a4:	ldrb	w9, [x19, #139]
  41d4a8:	ubfx	w8, w8, #4, #1
  41d4ac:	strb	w8, [x19, #142]
  41d4b0:	cbz	w9, 41d4bc <_obstack_memory_used@@Base+0x7088>
  41d4b4:	mov	x8, xzr
  41d4b8:	b	41d4cc <_obstack_memory_used@@Base+0x7098>
  41d4bc:	str	x22, [x19, #8]
  41d4c0:	ldr	w8, [x20, #180]
  41d4c4:	cmp	w8, #0x1
  41d4c8:	csel	x8, xzr, x21, gt
  41d4cc:	mov	w0, wzr
  41d4d0:	stp	x8, x8, [x19, #48]
  41d4d4:	ldp	x20, x19, [sp, #48]
  41d4d8:	ldp	x22, x21, [sp, #32]
  41d4dc:	ldr	x23, [sp, #16]
  41d4e0:	ldp	x29, x30, [sp], #64
  41d4e4:	ret
  41d4e8:	stp	x29, x30, [sp, #-48]!
  41d4ec:	stp	x20, x19, [sp, #32]
  41d4f0:	mov	x19, x2
  41d4f4:	mov	x20, x0
  41d4f8:	mov	x8, #0xffffffffffffffff    	// #-1
  41d4fc:	cmp	x2, #0x1
  41d500:	str	x21, [sp, #16]
  41d504:	mov	x29, sp
  41d508:	str	w1, [x0, #160]
  41d50c:	str	x8, [x0, #168]
  41d510:	b.lt	41d554 <_obstack_memory_used@@Base+0x7120>  // b.tstop
  41d514:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  41d518:	movk	x8, #0x666, lsl #48
  41d51c:	cmp	x19, x8
  41d520:	b.hi	41d578 <_obstack_memory_used@@Base+0x7144>  // b.pmore
  41d524:	add	x8, x19, x19, lsl #2
  41d528:	lsl	x0, x8, #3
  41d52c:	bl	4024e0 <malloc@plt>
  41d530:	mov	x21, x0
  41d534:	str	x0, [x20, #216]
  41d538:	lsl	x0, x19, #3
  41d53c:	bl	4024e0 <malloc@plt>
  41d540:	mov	x8, x0
  41d544:	str	x0, [x20, #248]
  41d548:	mov	w0, #0xc                   	// #12
  41d54c:	cbz	x21, 41d568 <_obstack_memory_used@@Base+0x7134>
  41d550:	cbz	x8, 41d568 <_obstack_memory_used@@Base+0x7134>
  41d554:	mov	w0, wzr
  41d558:	mov	w8, #0x1                   	// #1
  41d55c:	str	x19, [x20, #208]
  41d560:	str	w8, [x20, #224]
  41d564:	str	x19, [x20, #240]
  41d568:	ldp	x20, x19, [sp, #32]
  41d56c:	ldr	x21, [sp, #16]
  41d570:	ldp	x29, x30, [sp], #48
  41d574:	ret
  41d578:	mov	w0, #0xc                   	// #12
  41d57c:	b	41d568 <_obstack_memory_used@@Base+0x7134>
  41d580:	sub	sp, sp, #0x60
  41d584:	stp	x29, x30, [sp, #16]
  41d588:	str	x25, [sp, #32]
  41d58c:	stp	x24, x23, [sp, #48]
  41d590:	stp	x22, x21, [sp, #64]
  41d594:	stp	x20, x19, [sp, #80]
  41d598:	mov	x8, x0
  41d59c:	ldr	x9, [x8, #40]!
  41d5a0:	mov	x19, x0
  41d5a4:	mov	x20, x1
  41d5a8:	mov	w21, w2
  41d5ac:	cmp	x9, x1
  41d5b0:	add	x29, sp, #0x10
  41d5b4:	b.le	41d708 <_obstack_memory_used@@Base+0x72d4>
  41d5b8:	ldr	w9, [x19, #144]
  41d5bc:	cmp	w9, #0x2
  41d5c0:	b.lt	41d5c8 <_obstack_memory_used@@Base+0x7194>  // b.tstop
  41d5c4:	str	xzr, [x19, #32]
  41d5c8:	ldr	x9, [x19, #80]
  41d5cc:	ldr	x10, [x19, #96]
  41d5d0:	strb	wzr, [x19, #140]
  41d5d4:	tst	w21, #0x1
  41d5d8:	str	x9, [x19, #88]
  41d5dc:	str	x10, [x19, #104]
  41d5e0:	stp	xzr, xzr, [x8]
  41d5e4:	str	xzr, [x8, #16]
  41d5e8:	ldrb	w8, [x19, #139]
  41d5ec:	mov	w9, #0x4                   	// #4
  41d5f0:	mov	w10, #0x6                   	// #6
  41d5f4:	csel	w9, w10, w9, eq  // eq = none
  41d5f8:	mov	x22, x20
  41d5fc:	str	w9, [x19, #112]
  41d600:	cbnz	w8, 41d610 <_obstack_memory_used@@Base+0x71dc>
  41d604:	ldr	x8, [x19]
  41d608:	mov	x22, x20
  41d60c:	str	x8, [x19, #8]
  41d610:	cbz	x22, 41d68c <_obstack_memory_used@@Base+0x7258>
  41d614:	ldr	x8, [x19, #56]
  41d618:	cmp	x22, x8
  41d61c:	b.ge	41d714 <_obstack_memory_used@@Base+0x72e0>  // b.tcont
  41d620:	ldrb	w8, [x19, #140]
  41d624:	cbnz	w8, 41d828 <_obstack_memory_used@@Base+0x73f4>
  41d628:	sub	x1, x22, #0x1
  41d62c:	mov	x0, x19
  41d630:	mov	w2, w21
  41d634:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41d638:	ldr	w8, [x19, #144]
  41d63c:	str	w0, [x19, #112]
  41d640:	cmp	w8, #0x2
  41d644:	b.lt	41d660 <_obstack_memory_used@@Base+0x722c>  // b.tstop
  41d648:	ldr	x8, [x19, #48]
  41d64c:	ldr	x0, [x19, #16]
  41d650:	sub	x8, x8, x22
  41d654:	add	x1, x0, x22, lsl #2
  41d658:	lsl	x2, x8, #2
  41d65c:	bl	402340 <memmove@plt>
  41d660:	ldrb	w8, [x19, #139]
  41d664:	cbnz	w8, 41d91c <_obstack_memory_used@@Base+0x74e8>
  41d668:	ldp	x8, x9, [x19, #48]
  41d66c:	sub	x8, x8, x22
  41d670:	sub	x9, x9, x22
  41d674:	stp	x8, x9, [x19, #48]
  41d678:	ldrb	w8, [x19, #139]
  41d67c:	cbnz	w8, 41d68c <_obstack_memory_used@@Base+0x7258>
  41d680:	ldr	x8, [x19, #8]
  41d684:	add	x8, x8, x22
  41d688:	str	x8, [x19, #8]
  41d68c:	ldr	x8, [x19, #88]
  41d690:	ldr	x9, [x19, #104]
  41d694:	ldr	w10, [x19, #144]
  41d698:	str	x20, [x19, #40]
  41d69c:	sub	x8, x8, x22
  41d6a0:	sub	x9, x9, x22
  41d6a4:	cmp	w10, #0x2
  41d6a8:	str	x8, [x19, #88]
  41d6ac:	str	x9, [x19, #104]
  41d6b0:	b.lt	41d6cc <_obstack_memory_used@@Base+0x7298>  // b.tstop
  41d6b4:	ldrb	w8, [x19, #136]
  41d6b8:	cbz	w8, 41d6dc <_obstack_memory_used@@Base+0x72a8>
  41d6bc:	mov	x0, x19
  41d6c0:	bl	418610 <_obstack_memory_used@@Base+0x21dc>
  41d6c4:	cbnz	w0, 41d6ec <_obstack_memory_used@@Base+0x72b8>
  41d6c8:	b	41d6e4 <_obstack_memory_used@@Base+0x72b0>
  41d6cc:	ldrb	w9, [x19, #139]
  41d6d0:	cbnz	w9, 41d9a8 <_obstack_memory_used@@Base+0x7574>
  41d6d4:	str	x8, [x19, #48]
  41d6d8:	b	41d6e4 <_obstack_memory_used@@Base+0x72b0>
  41d6dc:	mov	x0, x19
  41d6e0:	bl	418c88 <_obstack_memory_used@@Base+0x2854>
  41d6e4:	mov	w0, wzr
  41d6e8:	str	xzr, [x19, #72]
  41d6ec:	ldp	x20, x19, [sp, #80]
  41d6f0:	ldp	x22, x21, [sp, #64]
  41d6f4:	ldp	x24, x23, [sp, #48]
  41d6f8:	ldr	x25, [sp, #32]
  41d6fc:	ldp	x29, x30, [sp, #16]
  41d700:	add	sp, sp, #0x60
  41d704:	ret
  41d708:	sub	x22, x20, x9
  41d70c:	cbnz	x22, 41d614 <_obstack_memory_used@@Base+0x71e0>
  41d710:	b	41d68c <_obstack_memory_used@@Base+0x7258>
  41d714:	ldrb	w8, [x19, #140]
  41d718:	ldr	x23, [x19, #48]
  41d71c:	cbnz	w8, 41daa0 <_obstack_memory_used@@Base+0x766c>
  41d720:	ldrsw	x8, [x19, #144]
  41d724:	str	xzr, [x19, #48]
  41d728:	cmp	w8, #0x2
  41d72c:	b.lt	41d9bc <_obstack_memory_used@@Base+0x7588>  // b.tstop
  41d730:	mov	w9, #0xffffffff            	// #-1
  41d734:	str	w9, [x29, #28]
  41d738:	ldrb	w9, [x19, #137]
  41d73c:	cbz	w9, 41d7d4 <_obstack_memory_used@@Base+0x73a0>
  41d740:	ldr	x9, [x19]
  41d744:	ldr	x11, [x19, #40]
  41d748:	sub	x8, x22, x8
  41d74c:	add	x10, x9, x11
  41d750:	add	x11, x22, x11
  41d754:	add	x8, x10, x8
  41d758:	add	x11, x11, x9
  41d75c:	cmp	x8, x9
  41d760:	add	x24, x10, x22
  41d764:	csel	x9, x9, x8, cc  // cc = lo, ul, last
  41d768:	sub	x8, x11, #0x1
  41d76c:	cmp	x8, x9
  41d770:	b.cc	41d7d4 <_obstack_memory_used@@Base+0x73a0>  // b.lo, b.ul, b.last
  41d774:	ldrb	w11, [x8], #-1
  41d778:	and	w11, w11, #0xc0
  41d77c:	cmp	w11, #0x80
  41d780:	b.eq	41d76c <_obstack_memory_used@@Base+0x7338>  // b.none
  41d784:	ldr	x11, [x19, #88]
  41d788:	ldr	x9, [x19, #120]
  41d78c:	add	x25, x8, #0x1
  41d790:	mov	x1, x25
  41d794:	add	x10, x10, x11
  41d798:	sub	x2, x10, x25
  41d79c:	cbnz	x9, 41db10 <_obstack_memory_used@@Base+0x76dc>
  41d7a0:	add	x0, x29, #0x18
  41d7a4:	add	x3, sp, #0x8
  41d7a8:	str	xzr, [sp, #8]
  41d7ac:	bl	41609c <wcrtomb@plt+0x136dc>
  41d7b0:	sub	x8, x24, x25
  41d7b4:	subs	x8, x0, x8
  41d7b8:	b.cc	41d7d4 <_obstack_memory_used@@Base+0x73a0>  // b.lo, b.ul, b.last
  41d7bc:	cmn	x0, #0x3
  41d7c0:	b.hi	41d7d4 <_obstack_memory_used@@Base+0x73a0>  // b.pmore
  41d7c4:	str	xzr, [x19, #32]
  41d7c8:	str	x8, [x19, #48]
  41d7cc:	ldr	w8, [x29, #24]
  41d7d0:	str	w8, [x29, #28]
  41d7d4:	ldr	w8, [x29, #28]
  41d7d8:	cmn	w8, #0x1
  41d7dc:	b.ne	41d7f8 <_obstack_memory_used@@Base+0x73c4>  // b.any
  41d7e0:	add	x2, x29, #0x1c
  41d7e4:	mov	x0, x19
  41d7e8:	mov	x1, x20
  41d7ec:	bl	41e53c <_obstack_memory_used@@Base+0x8108>
  41d7f0:	sub	x8, x0, x20
  41d7f4:	str	x8, [x19, #48]
  41d7f8:	ldr	w9, [x29, #28]
  41d7fc:	cmn	w9, #0x1
  41d800:	b.eq	41da64 <_obstack_memory_used@@Base+0x7630>  // b.none
  41d804:	ldrb	w8, [x19, #142]
  41d808:	cbnz	w8, 41dae8 <_obstack_memory_used@@Base+0x76b4>
  41d80c:	cmp	w9, #0xa
  41d810:	b.ne	41da78 <_obstack_memory_used@@Base+0x7644>  // b.any
  41d814:	ldrb	w8, [x19, #141]
  41d818:	cmp	w8, #0x0
  41d81c:	cset	w8, ne  // ne = any
  41d820:	lsl	w0, w8, #1
  41d824:	b	41da7c <_obstack_memory_used@@Base+0x7648>
  41d828:	ldr	x24, [x19, #48]
  41d82c:	ldr	x23, [x19, #24]
  41d830:	mov	x8, xzr
  41d834:	mov	x10, x24
  41d838:	b	41d848 <_obstack_memory_used@@Base+0x7414>
  41d83c:	cmp	x8, x12
  41d840:	mov	x10, x12
  41d844:	b.ge	41d878 <_obstack_memory_used@@Base+0x7444>  // b.tcont
  41d848:	add	x9, x8, x10
  41d84c:	cmp	x9, #0x0
  41d850:	cinc	x9, x9, lt  // lt = tstop
  41d854:	asr	x9, x9, #1
  41d858:	ldr	x11, [x23, x9, lsl #3]
  41d85c:	mov	x12, x9
  41d860:	cmp	x11, x22
  41d864:	b.gt	41d83c <_obstack_memory_used@@Base+0x7408>
  41d868:	b.ge	41d878 <_obstack_memory_used@@Base+0x7444>  // b.tcont
  41d86c:	add	x8, x9, #0x1
  41d870:	mov	x12, x10
  41d874:	b	41d83c <_obstack_memory_used@@Base+0x7408>
  41d878:	cmp	x11, x22
  41d87c:	cinc	x25, x9, lt  // lt = tstop
  41d880:	sub	x1, x25, #0x1
  41d884:	mov	x0, x19
  41d888:	mov	w2, w21
  41d88c:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41d890:	subs	x8, x24, x22
  41d894:	str	w0, [x19, #112]
  41d898:	b.le	41d934 <_obstack_memory_used@@Base+0x7500>
  41d89c:	cmp	x25, x22
  41d8a0:	b.ne	41d934 <_obstack_memory_used@@Base+0x7500>  // b.any
  41d8a4:	ldr	x9, [x23, x25, lsl #3]
  41d8a8:	cmp	x9, x22
  41d8ac:	b.ne	41d934 <_obstack_memory_used@@Base+0x7500>  // b.any
  41d8b0:	ldr	x0, [x19, #16]
  41d8b4:	lsl	x2, x8, #2
  41d8b8:	add	x1, x0, x22, lsl #2
  41d8bc:	bl	402340 <memmove@plt>
  41d8c0:	ldr	x0, [x19, #8]
  41d8c4:	ldr	x8, [x19, #48]
  41d8c8:	add	x1, x0, x22
  41d8cc:	sub	x2, x8, x22
  41d8d0:	bl	402340 <memmove@plt>
  41d8d4:	ldp	x8, x9, [x19, #48]
  41d8d8:	sub	x8, x8, x22
  41d8dc:	sub	x9, x9, x22
  41d8e0:	cmp	x8, #0x1
  41d8e4:	stp	x8, x9, [x19, #48]
  41d8e8:	b.lt	41d678 <_obstack_memory_used@@Base+0x7244>  // b.tstop
  41d8ec:	ldr	x9, [x19, #24]
  41d8f0:	mov	x8, xzr
  41d8f4:	add	x10, x9, x22, lsl #3
  41d8f8:	lsl	x11, x8, #3
  41d8fc:	ldr	x12, [x10, x11]
  41d900:	add	x8, x8, #0x1
  41d904:	sub	x12, x12, x22
  41d908:	str	x12, [x9, x11]
  41d90c:	ldr	x11, [x19, #48]
  41d910:	cmp	x8, x11
  41d914:	b.lt	41d8f8 <_obstack_memory_used@@Base+0x74c4>  // b.tstop
  41d918:	b	41d678 <_obstack_memory_used@@Base+0x7244>
  41d91c:	ldr	x0, [x19, #8]
  41d920:	ldr	x8, [x19, #48]
  41d924:	add	x1, x0, x22
  41d928:	sub	x2, x8, x22
  41d92c:	bl	402340 <memmove@plt>
  41d930:	b	41d668 <_obstack_memory_used@@Base+0x7234>
  41d934:	ldr	x9, [x19, #96]
  41d938:	ldr	x8, [x19, #80]
  41d93c:	sub	x10, x22, x20
  41d940:	strb	wzr, [x19, #140]
  41d944:	add	x9, x10, x9
  41d948:	add	x8, x10, x8
  41d94c:	str	x9, [x19, #104]
  41d950:	sub	x9, x23, #0x8
  41d954:	str	x8, [x19, #88]
  41d958:	mov	x8, x25
  41d95c:	subs	x25, x25, #0x1
  41d960:	b.lt	41d970 <_obstack_memory_used@@Base+0x753c>  // b.tstop
  41d964:	ldr	x10, [x9, x8, lsl #3]
  41d968:	cmp	x10, x22
  41d96c:	b.eq	41d958 <_obstack_memory_used@@Base+0x7524>  // b.none
  41d970:	cmp	x8, x24
  41d974:	b.ge	41d998 <_obstack_memory_used@@Base+0x7564>  // b.tcont
  41d978:	ldr	x9, [x19, #16]
  41d97c:	ldr	w10, [x9, x8, lsl #2]
  41d980:	cmn	w10, #0x1
  41d984:	b.ne	41d998 <_obstack_memory_used@@Base+0x7564>  // b.any
  41d988:	add	x8, x8, #0x1
  41d98c:	cmp	x24, x8
  41d990:	b.ne	41d97c <_obstack_memory_used@@Base+0x7548>  // b.any
  41d994:	mov	x8, x24
  41d998:	cmp	x8, x24
  41d99c:	b.ne	41d9f8 <_obstack_memory_used@@Base+0x75c4>  // b.any
  41d9a0:	str	xzr, [x19, #48]
  41d9a4:	b	41da88 <_obstack_memory_used@@Base+0x7654>
  41d9a8:	ldrb	w8, [x19, #136]
  41d9ac:	cbz	w8, 41da50 <_obstack_memory_used@@Base+0x761c>
  41d9b0:	mov	x0, x19
  41d9b4:	bl	418c08 <_obstack_memory_used@@Base+0x27d4>
  41d9b8:	b	41d6e4 <_obstack_memory_used@@Base+0x72b0>
  41d9bc:	ldr	x8, [x19, #40]
  41d9c0:	ldr	x9, [x19]
  41d9c4:	add	x8, x22, x8
  41d9c8:	add	x9, x8, x9
  41d9cc:	ldr	x8, [x19, #120]
  41d9d0:	ldurb	w21, [x9, #-1]
  41d9d4:	str	xzr, [x19, #56]
  41d9d8:	cbz	x8, 41d9e0 <_obstack_memory_used@@Base+0x75ac>
  41d9dc:	ldrb	w21, [x8, x21]
  41d9e0:	ldr	x0, [x19, #128]
  41d9e4:	mov	x1, x21
  41d9e8:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  41d9ec:	tbz	w0, #0, 41da34 <_obstack_memory_used@@Base+0x7600>
  41d9f0:	mov	w8, #0x1                   	// #1
  41d9f4:	b	41da98 <_obstack_memory_used@@Base+0x7664>
  41d9f8:	ldr	x8, [x23, x8, lsl #3]
  41d9fc:	subs	x21, x8, x22
  41da00:	str	x21, [x19, #48]
  41da04:	b.eq	41da88 <_obstack_memory_used@@Base+0x7654>  // b.none
  41da08:	cmp	x21, #0x1
  41da0c:	b.lt	41da20 <_obstack_memory_used@@Base+0x75ec>  // b.tstop
  41da10:	ldr	x0, [x19, #16]
  41da14:	lsl	x2, x21, #2
  41da18:	mov	w1, #0xff                  	// #255
  41da1c:	bl	4025b0 <memset@plt>
  41da20:	ldr	x0, [x19, #8]
  41da24:	mov	w1, #0xff                  	// #255
  41da28:	mov	x2, x21
  41da2c:	bl	4025b0 <memset@plt>
  41da30:	b	41da88 <_obstack_memory_used@@Base+0x7654>
  41da34:	cmp	w21, #0xa
  41da38:	b.ne	41da94 <_obstack_memory_used@@Base+0x7660>  // b.any
  41da3c:	ldrb	w8, [x19, #141]
  41da40:	cmp	w8, #0x0
  41da44:	cset	w8, ne  // ne = any
  41da48:	lsl	w8, w8, #1
  41da4c:	b	41da98 <_obstack_memory_used@@Base+0x7664>
  41da50:	ldr	x8, [x19, #120]
  41da54:	cbz	x8, 41d6e4 <_obstack_memory_used@@Base+0x72b0>
  41da58:	mov	x0, x19
  41da5c:	bl	418e2c <_obstack_memory_used@@Base+0x29f8>
  41da60:	b	41d6e4 <_obstack_memory_used@@Base+0x72b0>
  41da64:	sub	x1, x23, #0x1
  41da68:	mov	x0, x19
  41da6c:	mov	w2, w21
  41da70:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41da74:	b	41da7c <_obstack_memory_used@@Base+0x7648>
  41da78:	mov	w0, wzr
  41da7c:	ldr	x21, [x19, #48]
  41da80:	str	w0, [x19, #112]
  41da84:	cbnz	x21, 41dac4 <_obstack_memory_used@@Base+0x7690>
  41da88:	ldr	x8, [x19, #48]
  41da8c:	str	x8, [x19, #56]
  41da90:	b	41d678 <_obstack_memory_used@@Base+0x7244>
  41da94:	mov	w8, wzr
  41da98:	str	w8, [x19, #112]
  41da9c:	b	41d678 <_obstack_memory_used@@Base+0x7244>
  41daa0:	ldr	x8, [x19, #80]
  41daa4:	ldr	x9, [x19, #96]
  41daa8:	sub	x10, x22, x20
  41daac:	strb	wzr, [x19, #140]
  41dab0:	add	x8, x10, x8
  41dab4:	add	x9, x10, x9
  41dab8:	str	x8, [x19, #88]
  41dabc:	str	x9, [x19, #104]
  41dac0:	b	41d720 <_obstack_memory_used@@Base+0x72ec>
  41dac4:	cmp	x21, #0x1
  41dac8:	b.lt	41dadc <_obstack_memory_used@@Base+0x76a8>  // b.tstop
  41dacc:	ldr	x0, [x19, #16]
  41dad0:	lsl	x2, x21, #2
  41dad4:	mov	w1, #0xff                  	// #255
  41dad8:	bl	4025b0 <memset@plt>
  41dadc:	ldrb	w8, [x19, #139]
  41dae0:	cbnz	w8, 41da20 <_obstack_memory_used@@Base+0x75ec>
  41dae4:	b	41da88 <_obstack_memory_used@@Base+0x7654>
  41dae8:	mov	w0, w9
  41daec:	mov	w21, w9
  41daf0:	bl	402860 <iswalnum@plt>
  41daf4:	mov	w8, w0
  41daf8:	cmp	w21, #0x5f
  41dafc:	mov	w0, #0x1                   	// #1
  41db00:	b.eq	41da7c <_obstack_memory_used@@Base+0x7648>  // b.none
  41db04:	mov	w9, w21
  41db08:	cbz	w8, 41d80c <_obstack_memory_used@@Base+0x73d8>
  41db0c:	b	41da7c <_obstack_memory_used@@Base+0x7648>
  41db10:	cmp	x2, #0x6
  41db14:	mov	w10, #0x6                   	// #6
  41db18:	csel	x10, x2, x10, lt  // lt = tstop
  41db1c:	cmp	w10, #0x1
  41db20:	mov	x1, sp
  41db24:	b.lt	41d7a0 <_obstack_memory_used@@Base+0x736c>  // b.tstop
  41db28:	sxtw	x10, w10
  41db2c:	sub	x11, x1, #0x1
  41db30:	ldrb	w12, [x8, x10]
  41db34:	mov	x1, sp
  41db38:	ldrb	w12, [x9, x12]
  41db3c:	strb	w12, [x11, x10]
  41db40:	subs	x10, x10, #0x1
  41db44:	b.gt	41db30 <_obstack_memory_used@@Base+0x76fc>
  41db48:	b	41d7a0 <_obstack_memory_used@@Base+0x736c>
  41db4c:	sub	sp, sp, #0x70
  41db50:	stp	x29, x30, [sp, #16]
  41db54:	stp	x28, x27, [sp, #32]
  41db58:	stp	x26, x25, [sp, #48]
  41db5c:	stp	x24, x23, [sp, #64]
  41db60:	stp	x22, x21, [sp, #80]
  41db64:	stp	x20, x19, [sp, #96]
  41db68:	ldr	x23, [x0, #152]
  41db6c:	add	x29, sp, #0x10
  41db70:	ldr	x20, [x0, #72]
  41db74:	stur	wzr, [x29, #-4]
  41db78:	ldr	x24, [x23, #72]
  41db7c:	cmp	x2, #0x0
  41db80:	mov	x25, x2
  41db84:	mov	w21, w1
  41db88:	ldrsb	w8, [x24, #104]
  41db8c:	mov	x22, x0
  41db90:	cset	w19, ne  // ne = any
  41db94:	tbz	w8, #31, 41dbc8 <_obstack_memory_used@@Base+0x7794>
  41db98:	ldr	w2, [x22, #160]
  41db9c:	sub	x1, x20, #0x1
  41dba0:	mov	x0, x22
  41dba4:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41dba8:	tbnz	w0, #0, 41dbc4 <_obstack_memory_used@@Base+0x7790>
  41dbac:	mov	w3, w0
  41dbb0:	cbz	w0, 41dbc8 <_obstack_memory_used@@Base+0x7794>
  41dbb4:	tbz	w3, #1, 41dbf8 <_obstack_memory_used@@Base+0x77c4>
  41dbb8:	tbz	w3, #2, 41dbf8 <_obstack_memory_used@@Base+0x77c4>
  41dbbc:	ldr	x24, [x23, #96]
  41dbc0:	b	41dbc8 <_obstack_memory_used@@Base+0x7794>
  41dbc4:	ldr	x24, [x23, #80]
  41dbc8:	cbz	x24, 41de1c <_obstack_memory_used@@Base+0x79e8>
  41dbcc:	ldr	x8, [x22, #184]
  41dbd0:	cbz	x8, 41dbe0 <_obstack_memory_used@@Base+0x77ac>
  41dbd4:	str	x24, [x8, x20, lsl #3]
  41dbd8:	ldr	x8, [x23, #152]
  41dbdc:	cbnz	x8, 41dc34 <_obstack_memory_used@@Base+0x7800>
  41dbe0:	ldrsb	w8, [x24, #104]
  41dbe4:	str	x25, [sp]
  41dbe8:	tbnz	w8, #4, 41dc20 <_obstack_memory_used@@Base+0x77ec>
  41dbec:	mov	x27, xzr
  41dbf0:	mov	x23, #0xffffffffffffffff    	// #-1
  41dbf4:	b	41dcb4 <_obstack_memory_used@@Base+0x7880>
  41dbf8:	tbnz	w3, #1, 41dc18 <_obstack_memory_used@@Base+0x77e4>
  41dbfc:	tbz	w3, #2, 41dbc8 <_obstack_memory_used@@Base+0x7794>
  41dc00:	ldr	x2, [x24, #80]
  41dc04:	sub	x0, x29, #0x4
  41dc08:	mov	x1, x23
  41dc0c:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41dc10:	mov	x24, x0
  41dc14:	b	41dbc8 <_obstack_memory_used@@Base+0x7794>
  41dc18:	ldr	x24, [x23, #88]
  41dc1c:	b	41dbc8 <_obstack_memory_used@@Base+0x7794>
  41dc20:	tbnz	w8, #31, 41dc74 <_obstack_memory_used@@Base+0x7840>
  41dc24:	tbz	w21, #0, 41dc98 <_obstack_memory_used@@Base+0x7864>
  41dc28:	mov	w27, #0x1                   	// #1
  41dc2c:	mov	x23, x20
  41dc30:	b	41dcb4 <_obstack_memory_used@@Base+0x7880>
  41dc34:	add	x23, x24, #0x8
  41dc38:	mov	x0, x22
  41dc3c:	mov	x1, x23
  41dc40:	mov	x2, xzr
  41dc44:	bl	41e620 <_obstack_memory_used@@Base+0x81ec>
  41dc48:	stur	w0, [x29, #-4]
  41dc4c:	cbnz	w0, 41de44 <_obstack_memory_used@@Base+0x7a10>
  41dc50:	ldrb	w8, [x24, #104]
  41dc54:	tbz	w8, #6, 41dc6c <_obstack_memory_used@@Base+0x7838>
  41dc58:	mov	x0, x22
  41dc5c:	mov	x1, x23
  41dc60:	bl	41e6e4 <_obstack_memory_used@@Base+0x82b0>
  41dc64:	stur	w0, [x29, #-4]
  41dc68:	cbnz	w0, 41de44 <_obstack_memory_used@@Base+0x7a10>
  41dc6c:	mov	w19, wzr
  41dc70:	b	41dbe0 <_obstack_memory_used@@Base+0x77ac>
  41dc74:	mov	x0, x22
  41dc78:	mov	x1, x24
  41dc7c:	mov	x2, x20
  41dc80:	bl	41de4c <_obstack_memory_used@@Base+0x7a18>
  41dc84:	cmp	x0, #0x0
  41dc88:	cset	w27, ne  // ne = any
  41dc8c:	csinv	x23, x20, xzr, ne  // ne = any
  41dc90:	cbz	x0, 41dcb4 <_obstack_memory_used@@Base+0x7880>
  41dc94:	tbnz	w21, #0, 41dcb4 <_obstack_memory_used@@Base+0x7880>
  41dc98:	mov	x23, x20
  41dc9c:	b	41de20 <_obstack_memory_used@@Base+0x79ec>
  41dca0:	mov	w27, #0x1                   	// #1
  41dca4:	mov	w8, wzr
  41dca8:	mov	x24, x25
  41dcac:	mov	w19, w26
  41dcb0:	cbnz	w8, 41ddfc <_obstack_memory_used@@Base+0x79c8>
  41dcb4:	ldr	x9, [x22, #104]
  41dcb8:	ldr	x8, [x22, #72]
  41dcbc:	cmp	x9, x8
  41dcc0:	b.le	41de04 <_obstack_memory_used@@Base+0x79d0>
  41dcc4:	ldr	x9, [x22, #64]
  41dcc8:	add	x28, x8, #0x1
  41dccc:	cmp	x28, x9
  41dcd0:	b.ge	41ddac <_obstack_memory_used@@Base+0x7978>  // b.tcont
  41dcd4:	ldr	x9, [x22, #48]
  41dcd8:	cmp	x28, x9
  41dcdc:	b.ge	41ddbc <_obstack_memory_used@@Base+0x7988>  // b.tcont
  41dce0:	sub	x0, x29, #0x4
  41dce4:	mov	x1, x22
  41dce8:	mov	x2, x24
  41dcec:	bl	41eacc <_obstack_memory_used@@Base+0x8698>
  41dcf0:	ldr	x8, [x22, #184]
  41dcf4:	mov	x25, x0
  41dcf8:	cbz	x8, 41dd10 <_obstack_memory_used@@Base+0x78dc>
  41dcfc:	sub	x0, x29, #0x4
  41dd00:	mov	x1, x22
  41dd04:	mov	x2, x25
  41dd08:	bl	41eb90 <_obstack_memory_used@@Base+0x875c>
  41dd0c:	mov	x25, x0
  41dd10:	cbz	x25, 41dd60 <_obstack_memory_used@@Base+0x792c>
  41dd14:	cmp	x24, x25
  41dd18:	ldrsb	w8, [x25, #104]
  41dd1c:	cset	w9, eq  // eq = none
  41dd20:	tst	w19, w9
  41dd24:	and	w26, w19, w9
  41dd28:	csel	x20, x28, x20, ne  // ne = any
  41dd2c:	tbz	w8, #4, 41dca4 <_obstack_memory_used@@Base+0x7870>
  41dd30:	tbz	w8, #31, 41dd48 <_obstack_memory_used@@Base+0x7914>
  41dd34:	ldr	x2, [x22, #72]
  41dd38:	mov	x0, x22
  41dd3c:	mov	x1, x25
  41dd40:	bl	41de4c <_obstack_memory_used@@Base+0x7a18>
  41dd44:	cbz	x0, 41dca4 <_obstack_memory_used@@Base+0x7870>
  41dd48:	ldr	x23, [x22, #72]
  41dd4c:	str	xzr, [sp]
  41dd50:	tbnz	w21, #0, 41dca0 <_obstack_memory_used@@Base+0x786c>
  41dd54:	mov	w8, #0x3                   	// #3
  41dd58:	mov	w27, #0x1                   	// #1
  41dd5c:	b	41dca8 <_obstack_memory_used@@Base+0x7874>
  41dd60:	ldur	w8, [x29, #-4]
  41dd64:	cbnz	w8, 41ddec <_obstack_memory_used@@Base+0x79b8>
  41dd68:	cmp	x27, #0x0
  41dd6c:	cset	w8, ne  // ne = any
  41dd70:	eor	w9, w21, #0x1
  41dd74:	mov	x25, xzr
  41dd78:	and	w9, w8, w9
  41dd7c:	mov	w8, #0x3                   	// #3
  41dd80:	tbnz	w9, #0, 41dda4 <_obstack_memory_used@@Base+0x7970>
  41dd84:	ldr	x9, [x22, #184]
  41dd88:	cbz	x9, 41dda4 <_obstack_memory_used@@Base+0x7970>
  41dd8c:	sub	x0, x29, #0x4
  41dd90:	mov	x1, x22
  41dd94:	bl	41ecdc <_obstack_memory_used@@Base+0x88a8>
  41dd98:	mov	x25, x0
  41dd9c:	cbnz	x0, 41dd14 <_obstack_memory_used@@Base+0x78e0>
  41dda0:	mov	w8, #0x3                   	// #3
  41dda4:	mov	w26, w19
  41dda8:	b	41dca8 <_obstack_memory_used@@Base+0x7874>
  41ddac:	ldr	x10, [x22, #88]
  41ddb0:	cmp	x9, x10
  41ddb4:	b.ge	41dcd4 <_obstack_memory_used@@Base+0x78a0>  // b.tcont
  41ddb8:	b	41ddc8 <_obstack_memory_used@@Base+0x7994>
  41ddbc:	ldr	x10, [x22, #88]
  41ddc0:	cmp	x9, x10
  41ddc4:	b.ge	41dce0 <_obstack_memory_used@@Base+0x78ac>  // b.tcont
  41ddc8:	add	w1, w8, #0x2
  41ddcc:	mov	x0, x22
  41ddd0:	bl	41ea04 <_obstack_memory_used@@Base+0x85d0>
  41ddd4:	stur	w0, [x29, #-4]
  41ddd8:	cbz	w0, 41dce0 <_obstack_memory_used@@Base+0x78ac>
  41dddc:	mov	w8, #0x1                   	// #1
  41dde0:	mov	x25, x24
  41dde4:	mov	w26, w19
  41dde8:	b	41dca8 <_obstack_memory_used@@Base+0x7874>
  41ddec:	mov	x25, xzr
  41ddf0:	mov	w8, #0x1                   	// #1
  41ddf4:	mov	w26, w19
  41ddf8:	b	41dca8 <_obstack_memory_used@@Base+0x7874>
  41ddfc:	cmp	w8, #0x3
  41de00:	b.ne	41de1c <_obstack_memory_used@@Base+0x79e8>  // b.any
  41de04:	ldr	x9, [sp]
  41de08:	cbz	x9, 41de20 <_obstack_memory_used@@Base+0x79ec>
  41de0c:	ldr	x8, [x9]
  41de10:	add	x8, x8, x20
  41de14:	str	x8, [x9]
  41de18:	b	41de20 <_obstack_memory_used@@Base+0x79ec>
  41de1c:	mov	x23, #0xfffffffffffffffe    	// #-2
  41de20:	mov	x0, x23
  41de24:	ldp	x20, x19, [sp, #96]
  41de28:	ldp	x22, x21, [sp, #80]
  41de2c:	ldp	x24, x23, [sp, #64]
  41de30:	ldp	x26, x25, [sp, #48]
  41de34:	ldp	x28, x27, [sp, #32]
  41de38:	ldp	x29, x30, [sp, #16]
  41de3c:	add	sp, sp, #0x70
  41de40:	ret
  41de44:	sxtw	x23, w0
  41de48:	b	41de20 <_obstack_memory_used@@Base+0x79ec>
  41de4c:	stp	x29, x30, [sp, #-64]!
  41de50:	stp	x24, x23, [sp, #16]
  41de54:	stp	x22, x21, [sp, #32]
  41de58:	stp	x20, x19, [sp, #48]
  41de5c:	mov	x8, x2
  41de60:	ldr	w2, [x0, #160]
  41de64:	mov	x19, x1
  41de68:	mov	x1, x8
  41de6c:	mov	x29, sp
  41de70:	mov	x21, x0
  41de74:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41de78:	ldr	x8, [x19, #16]
  41de7c:	cmp	x8, #0x1
  41de80:	b.lt	41debc <_obstack_memory_used@@Base+0x7a88>  // b.tstop
  41de84:	ldr	x21, [x21, #152]
  41de88:	ldr	x23, [x19, #24]
  41de8c:	mov	w20, w0
  41de90:	mov	x24, xzr
  41de94:	ldr	x22, [x23, x24, lsl #3]
  41de98:	mov	x0, x21
  41de9c:	mov	w2, w20
  41dea0:	mov	x1, x22
  41dea4:	bl	421440 <_obstack_memory_used@@Base+0xb00c>
  41dea8:	tbnz	w0, #0, 41dec0 <_obstack_memory_used@@Base+0x7a8c>
  41deac:	ldr	x8, [x19, #16]
  41deb0:	add	x24, x24, #0x1
  41deb4:	cmp	x24, x8
  41deb8:	b.lt	41de94 <_obstack_memory_used@@Base+0x7a60>  // b.tstop
  41debc:	mov	x22, xzr
  41dec0:	mov	x0, x22
  41dec4:	ldp	x20, x19, [sp, #48]
  41dec8:	ldp	x22, x21, [sp, #32]
  41decc:	ldp	x24, x23, [sp, #16]
  41ded0:	ldp	x29, x30, [sp], #64
  41ded4:	ret
  41ded8:	sub	sp, sp, #0x90
  41dedc:	stp	x29, x30, [sp, #64]
  41dee0:	stp	x26, x25, [sp, #80]
  41dee4:	stp	x24, x23, [sp, #96]
  41dee8:	stp	x22, x21, [sp, #112]
  41deec:	stp	x20, x19, [sp, #128]
  41def0:	ldr	x21, [x0, #168]
  41def4:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  41def8:	add	x29, sp, #0x40
  41defc:	cmp	x21, x8
  41df00:	b.hi	41e0a4 <_obstack_memory_used@@Base+0x7c70>  // b.pmore
  41df04:	ldr	x24, [x0, #152]
  41df08:	ldr	x23, [x0, #176]
  41df0c:	lsl	x8, x21, #3
  41df10:	add	x22, x8, #0x8
  41df14:	mov	x20, x0
  41df18:	mov	x0, x22
  41df1c:	bl	4024e0 <malloc@plt>
  41df20:	mov	x19, x0
  41df24:	cbz	x0, 41e0ac <_obstack_memory_used@@Base+0x7c78>
  41df28:	ldr	x8, [x24, #152]
  41df2c:	cbz	x8, 41dfe8 <_obstack_memory_used@@Base+0x7bb4>
  41df30:	mov	x0, x22
  41df34:	bl	4024e0 <malloc@plt>
  41df38:	mov	x22, x0
  41df3c:	cbz	x0, 41e0b0 <_obstack_memory_used@@Base+0x7c7c>
  41df40:	add	x26, x21, #0x1
  41df44:	lsl	x2, x26, #3
  41df48:	mov	x0, x22
  41df4c:	mov	w1, wzr
  41df50:	bl	4025b0 <memset@plt>
  41df54:	add	x0, sp, #0x8
  41df58:	mov	x1, x19
  41df5c:	mov	x2, x22
  41df60:	mov	x3, x23
  41df64:	mov	x4, x21
  41df68:	bl	42149c <_obstack_memory_used@@Base+0xb068>
  41df6c:	add	x1, sp, #0x8
  41df70:	mov	x0, x20
  41df74:	bl	4214b0 <_obstack_memory_used@@Base+0xb07c>
  41df78:	ldr	x8, [sp, #56]
  41df7c:	mov	w25, w0
  41df80:	mov	x0, x8
  41df84:	bl	402770 <free@plt>
  41df88:	cbnz	w25, 41e074 <_obstack_memory_used@@Base+0x7c40>
  41df8c:	ldr	x8, [x19]
  41df90:	cbnz	x8, 41e034 <_obstack_memory_used@@Base+0x7c00>
  41df94:	ldr	x8, [x22]
  41df98:	cbnz	x8, 41e034 <_obstack_memory_used@@Base+0x7c00>
  41df9c:	subs	x21, x21, #0x1
  41dfa0:	b.lt	41dfe0 <_obstack_memory_used@@Base+0x7bac>  // b.tstop
  41dfa4:	ldr	x8, [x20, #184]
  41dfa8:	b	41dfbc <_obstack_memory_used@@Base+0x7b88>
  41dfac:	add	x9, x21, #0x1
  41dfb0:	sub	x21, x21, #0x1
  41dfb4:	cmp	x9, #0x2
  41dfb8:	b.lt	41dfe0 <_obstack_memory_used@@Base+0x7bac>  // b.tstop
  41dfbc:	ldr	x1, [x8, x21, lsl #3]
  41dfc0:	cbz	x1, 41dfac <_obstack_memory_used@@Base+0x7b78>
  41dfc4:	ldrb	w9, [x1, #104]
  41dfc8:	tbz	w9, #4, 41dfac <_obstack_memory_used@@Base+0x7b78>
  41dfcc:	mov	x0, x20
  41dfd0:	mov	x2, x21
  41dfd4:	bl	41de4c <_obstack_memory_used@@Base+0x7a18>
  41dfd8:	mov	x23, x0
  41dfdc:	b	41df40 <_obstack_memory_used@@Base+0x7b0c>
  41dfe0:	mov	w25, #0x1                   	// #1
  41dfe4:	b	41e074 <_obstack_memory_used@@Base+0x7c40>
  41dfe8:	add	x0, sp, #0x8
  41dfec:	mov	x1, x19
  41dff0:	mov	x2, xzr
  41dff4:	mov	x3, x23
  41dff8:	mov	x4, x21
  41dffc:	bl	42149c <_obstack_memory_used@@Base+0xb068>
  41e000:	add	x1, sp, #0x8
  41e004:	mov	x0, x20
  41e008:	bl	4214b0 <_obstack_memory_used@@Base+0xb07c>
  41e00c:	ldr	x8, [sp, #56]
  41e010:	mov	w25, w0
  41e014:	mov	x0, x8
  41e018:	bl	402770 <free@plt>
  41e01c:	cbnz	w25, 41e0b8 <_obstack_memory_used@@Base+0x7c84>
  41e020:	ldr	x8, [x19]
  41e024:	cbnz	x8, 41e058 <_obstack_memory_used@@Base+0x7c24>
  41e028:	mov	x22, xzr
  41e02c:	mov	w25, #0x1                   	// #1
  41e030:	b	41e074 <_obstack_memory_used@@Base+0x7c40>
  41e034:	mov	x0, x24
  41e038:	mov	x1, x19
  41e03c:	mov	x2, x22
  41e040:	mov	x3, x26
  41e044:	bl	4215ac <_obstack_memory_used@@Base+0xb178>
  41e048:	mov	w25, w0
  41e04c:	mov	x0, x22
  41e050:	bl	402770 <free@plt>
  41e054:	cbnz	w25, 41e0b8 <_obstack_memory_used@@Base+0x7c84>
  41e058:	ldr	x0, [x20, #184]
  41e05c:	bl	402770 <free@plt>
  41e060:	mov	w25, wzr
  41e064:	mov	x22, xzr
  41e068:	stp	x23, x19, [x20, #176]
  41e06c:	mov	x19, xzr
  41e070:	str	x21, [x20, #168]
  41e074:	mov	x0, x19
  41e078:	bl	402770 <free@plt>
  41e07c:	mov	x0, x22
  41e080:	bl	402770 <free@plt>
  41e084:	mov	w0, w25
  41e088:	ldp	x20, x19, [sp, #128]
  41e08c:	ldp	x22, x21, [sp, #112]
  41e090:	ldp	x24, x23, [sp, #96]
  41e094:	ldp	x26, x25, [sp, #80]
  41e098:	ldp	x29, x30, [sp, #64]
  41e09c:	add	sp, sp, #0x90
  41e0a0:	ret
  41e0a4:	mov	w25, #0xc                   	// #12
  41e0a8:	b	41e084 <_obstack_memory_used@@Base+0x7c50>
  41e0ac:	mov	x22, xzr
  41e0b0:	mov	w25, #0xc                   	// #12
  41e0b4:	b	41e074 <_obstack_memory_used@@Base+0x7c40>
  41e0b8:	mov	x22, xzr
  41e0bc:	b	41e074 <_obstack_memory_used@@Base+0x7c40>
  41e0c0:	stp	x29, x30, [sp, #-64]!
  41e0c4:	stp	x22, x21, [sp, #32]
  41e0c8:	stp	x20, x19, [sp, #48]
  41e0cc:	ldr	x8, [x0, #232]
  41e0d0:	mov	x19, x0
  41e0d4:	str	x23, [sp, #16]
  41e0d8:	mov	x29, sp
  41e0dc:	cmp	x8, #0x1
  41e0e0:	b.lt	41e168 <_obstack_memory_used@@Base+0x7d34>  // b.tstop
  41e0e4:	mov	x22, xzr
  41e0e8:	b	41e104 <_obstack_memory_used@@Base+0x7cd0>
  41e0ec:	mov	x0, x20
  41e0f0:	bl	402770 <free@plt>
  41e0f4:	ldr	x8, [x19, #232]
  41e0f8:	add	x22, x22, #0x1
  41e0fc:	cmp	x22, x8
  41e100:	b.ge	41e168 <_obstack_memory_used@@Base+0x7d34>  // b.tcont
  41e104:	ldr	x8, [x19, #248]
  41e108:	ldr	x20, [x8, x22, lsl #3]
  41e10c:	ldr	x8, [x20, #32]
  41e110:	cmp	x8, #0x1
  41e114:	b.lt	41e144 <_obstack_memory_used@@Base+0x7d10>  // b.tstop
  41e118:	mov	x23, xzr
  41e11c:	ldr	x8, [x20, #40]
  41e120:	ldr	x21, [x8, x23, lsl #3]
  41e124:	ldr	x0, [x21, #32]
  41e128:	bl	402770 <free@plt>
  41e12c:	mov	x0, x21
  41e130:	bl	402770 <free@plt>
  41e134:	ldr	x8, [x20, #32]
  41e138:	add	x23, x23, #0x1
  41e13c:	cmp	x23, x8
  41e140:	b.lt	41e11c <_obstack_memory_used@@Base+0x7ce8>  // b.tstop
  41e144:	ldr	x0, [x20, #40]
  41e148:	bl	402770 <free@plt>
  41e14c:	ldr	x8, [x20, #16]
  41e150:	cbz	x8, 41e0ec <_obstack_memory_used@@Base+0x7cb8>
  41e154:	ldr	x0, [x8, #16]
  41e158:	bl	402770 <free@plt>
  41e15c:	ldr	x0, [x20, #16]
  41e160:	bl	402770 <free@plt>
  41e164:	b	41e0ec <_obstack_memory_used@@Base+0x7cb8>
  41e168:	str	xzr, [x19, #232]
  41e16c:	str	xzr, [x19, #200]
  41e170:	ldp	x20, x19, [sp, #48]
  41e174:	ldp	x22, x21, [sp, #32]
  41e178:	ldr	x23, [sp, #16]
  41e17c:	ldp	x29, x30, [sp], #64
  41e180:	ret
  41e184:	stp	x29, x30, [sp, #-96]!
  41e188:	stp	x28, x27, [sp, #16]
  41e18c:	stp	x26, x25, [sp, #32]
  41e190:	stp	x24, x23, [sp, #48]
  41e194:	stp	x22, x21, [sp, #64]
  41e198:	stp	x20, x19, [sp, #80]
  41e19c:	mov	x29, sp
  41e1a0:	sub	sp, sp, #0x40
  41e1a4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0xfbcc>
  41e1a8:	add	x8, x8, #0xa08
  41e1ac:	ldr	q0, [x8]
  41e1b0:	ldr	x8, [x8, #16]
  41e1b4:	ldr	x23, [x0]
  41e1b8:	mov	x20, x3
  41e1bc:	mov	x21, x2
  41e1c0:	mov	x22, x1
  41e1c4:	stur	q0, [x29, #-64]
  41e1c8:	stur	x8, [x29, #-48]
  41e1cc:	tbz	w4, #0, 41e1f0 <_obstack_memory_used@@Base+0x7dbc>
  41e1d0:	ldur	x8, [x29, #-56]
  41e1d4:	add	x8, x8, x8, lsl #1
  41e1d8:	lsl	x0, x8, #4
  41e1dc:	bl	4024e0 <malloc@plt>
  41e1e0:	stur	x0, [x29, #-48]
  41e1e4:	cbz	x0, 41e404 <_obstack_memory_used@@Base+0x7fd0>
  41e1e8:	sub	x19, x29, #0x40
  41e1ec:	b	41e1f4 <_obstack_memory_used@@Base+0x7dc0>
  41e1f0:	mov	x19, xzr
  41e1f4:	ldr	x25, [x23, #144]
  41e1f8:	lsl	x26, x21, #4
  41e1fc:	cmp	x26, #0xfbf
  41e200:	stp	xzr, xzr, [x29, #-32]
  41e204:	stur	xzr, [x29, #-16]
  41e208:	b.hi	41e228 <_obstack_memory_used@@Base+0x7df4>  // b.pmore
  41e20c:	add	x9, x26, #0xf
  41e210:	mov	x8, sp
  41e214:	and	x9, x9, #0xfffffffffffffff0
  41e218:	sub	x24, x8, x9
  41e21c:	mov	sp, x24
  41e220:	mov	w27, wzr
  41e224:	b	41e23c <_obstack_memory_used@@Base+0x7e08>
  41e228:	mov	x0, x26
  41e22c:	bl	4024e0 <malloc@plt>
  41e230:	cbz	x0, 41e3fc <_obstack_memory_used@@Base+0x7fc8>
  41e234:	mov	x24, x0
  41e238:	mov	w27, #0x1                   	// #1
  41e23c:	mov	x0, x24
  41e240:	mov	x1, x20
  41e244:	mov	x2, x26
  41e248:	bl	402320 <memcpy@plt>
  41e24c:	ldp	x26, x8, [x20]
  41e250:	cmp	x26, x8
  41e254:	stur	x26, [x29, #-8]
  41e258:	b.le	41e280 <_obstack_memory_used@@Base+0x7e4c>
  41e25c:	ldur	x0, [x29, #-16]
  41e260:	bl	402770 <free@plt>
  41e264:	cbz	w27, 41e270 <_obstack_memory_used@@Base+0x7e3c>
  41e268:	mov	x0, x24
  41e26c:	bl	402770 <free@plt>
  41e270:	mov	x0, x19
  41e274:	bl	4227ec <_obstack_memory_used@@Base+0xc3b8>
  41e278:	mov	w0, wzr
  41e27c:	b	41e408 <_obstack_memory_used@@Base+0x7fd4>
  41e280:	add	x28, x20, #0x8
  41e284:	mov	x0, x23
  41e288:	mov	x1, x20
  41e28c:	mov	x2, x24
  41e290:	mov	x3, x25
  41e294:	mov	x4, x26
  41e298:	mov	x5, x21
  41e29c:	bl	422864 <_obstack_memory_used@@Base+0xc430>
  41e2a0:	ldr	x8, [x20, #8]
  41e2a4:	cmp	x26, x8
  41e2a8:	b.ne	41e364 <_obstack_memory_used@@Base+0x7f30>  // b.any
  41e2ac:	ldr	x8, [x22, #176]
  41e2b0:	cmp	x25, x8
  41e2b4:	b.ne	41e364 <_obstack_memory_used@@Base+0x7f30>  // b.any
  41e2b8:	cbz	x19, 41e348 <_obstack_memory_used@@Base+0x7f14>
  41e2bc:	mov	x8, xzr
  41e2c0:	mov	x9, x28
  41e2c4:	b	41e2d8 <_obstack_memory_used@@Base+0x7ea4>
  41e2c8:	add	x8, x8, #0x1
  41e2cc:	cmp	x21, x8
  41e2d0:	add	x9, x9, #0x10
  41e2d4:	b.eq	41e314 <_obstack_memory_used@@Base+0x7ee0>  // b.none
  41e2d8:	ldur	x10, [x9, #-8]
  41e2dc:	tbnz	x10, #63, 41e2c8 <_obstack_memory_used@@Base+0x7e94>
  41e2e0:	ldr	x10, [x9]
  41e2e4:	cmn	x10, #0x1
  41e2e8:	b.ne	41e2c8 <_obstack_memory_used@@Base+0x7e94>  // b.any
  41e2ec:	cmp	x8, x21
  41e2f0:	b.ne	41e320 <_obstack_memory_used@@Base+0x7eec>  // b.any
  41e2f4:	ldur	x0, [x29, #-16]
  41e2f8:	bl	402770 <free@plt>
  41e2fc:	cbz	w27, 41e308 <_obstack_memory_used@@Base+0x7ed4>
  41e300:	mov	x0, x24
  41e304:	bl	402770 <free@plt>
  41e308:	mov	x0, x19
  41e30c:	bl	4227ec <_obstack_memory_used@@Base+0xc3b8>
  41e310:	b	41e35c <_obstack_memory_used@@Base+0x7f28>
  41e314:	mov	x8, x21
  41e318:	cmp	x8, x21
  41e31c:	b.eq	41e2f4 <_obstack_memory_used@@Base+0x7ec0>  // b.none
  41e320:	sub	x1, x29, #0x8
  41e324:	sub	x4, x29, #0x20
  41e328:	mov	x0, x19
  41e32c:	mov	x2, x21
  41e330:	mov	x3, x20
  41e334:	bl	422920 <_obstack_memory_used@@Base+0xc4ec>
  41e338:	mov	x25, x0
  41e33c:	mov	w8, #0x1                   	// #1
  41e340:	cbnz	w8, 41e364 <_obstack_memory_used@@Base+0x7f30>
  41e344:	b	41e278 <_obstack_memory_used@@Base+0x7e44>
  41e348:	ldur	x0, [x29, #-16]
  41e34c:	bl	402770 <free@plt>
  41e350:	cbz	w27, 41e35c <_obstack_memory_used@@Base+0x7f28>
  41e354:	mov	x0, x24
  41e358:	bl	402770 <free@plt>
  41e35c:	mov	w8, wzr
  41e360:	cbz	w8, 41e278 <_obstack_memory_used@@Base+0x7e44>
  41e364:	sub	x3, x29, #0x8
  41e368:	sub	x5, x29, #0x20
  41e36c:	mov	x0, x22
  41e370:	mov	x1, x21
  41e374:	mov	x2, x20
  41e378:	mov	x4, x25
  41e37c:	mov	x6, x19
  41e380:	bl	4229b8 <_obstack_memory_used@@Base+0xc584>
  41e384:	mov	x25, x0
  41e388:	tbnz	x0, #63, 41e3a0 <_obstack_memory_used@@Base+0x7f6c>
  41e38c:	ldur	x26, [x29, #-8]
  41e390:	ldr	x8, [x20, #8]
  41e394:	cmp	x26, x8
  41e398:	b.le	41e284 <_obstack_memory_used@@Base+0x7e50>
  41e39c:	b	41e25c <_obstack_memory_used@@Base+0x7e28>
  41e3a0:	cmn	x25, #0x2
  41e3a4:	b.eq	41e3e8 <_obstack_memory_used@@Base+0x7fb4>  // b.none
  41e3a8:	cbz	x19, 41e3cc <_obstack_memory_used@@Base+0x7f98>
  41e3ac:	sub	x1, x29, #0x8
  41e3b0:	sub	x4, x29, #0x20
  41e3b4:	mov	x0, x19
  41e3b8:	mov	x2, x21
  41e3bc:	mov	x3, x20
  41e3c0:	bl	422920 <_obstack_memory_used@@Base+0xc4ec>
  41e3c4:	mov	x25, x0
  41e3c8:	b	41e38c <_obstack_memory_used@@Base+0x7f58>
  41e3cc:	ldur	x0, [x29, #-16]
  41e3d0:	bl	402770 <free@plt>
  41e3d4:	cbz	w27, 41e3e0 <_obstack_memory_used@@Base+0x7fac>
  41e3d8:	mov	x0, x24
  41e3dc:	bl	402770 <free@plt>
  41e3e0:	mov	w0, #0x1                   	// #1
  41e3e4:	b	41e408 <_obstack_memory_used@@Base+0x7fd4>
  41e3e8:	ldur	x0, [x29, #-16]
  41e3ec:	bl	402770 <free@plt>
  41e3f0:	cbz	w27, 41e3fc <_obstack_memory_used@@Base+0x7fc8>
  41e3f4:	mov	x0, x24
  41e3f8:	bl	402770 <free@plt>
  41e3fc:	mov	x0, x19
  41e400:	bl	4227ec <_obstack_memory_used@@Base+0xc3b8>
  41e404:	mov	w0, #0xc                   	// #12
  41e408:	mov	sp, x29
  41e40c:	ldp	x20, x19, [sp, #80]
  41e410:	ldp	x22, x21, [sp, #64]
  41e414:	ldp	x24, x23, [sp, #48]
  41e418:	ldp	x26, x25, [sp, #32]
  41e41c:	ldp	x28, x27, [sp, #16]
  41e420:	ldp	x29, x30, [sp], #96
  41e424:	ret
  41e428:	stp	x29, x30, [sp, #-32]!
  41e42c:	str	x19, [sp, #16]
  41e430:	mov	x29, sp
  41e434:	mov	x19, x0
  41e438:	bl	41e0c0 <_obstack_memory_used@@Base+0x7c8c>
  41e43c:	ldr	x0, [x19, #248]
  41e440:	bl	402770 <free@plt>
  41e444:	ldr	x0, [x19, #216]
  41e448:	bl	402770 <free@plt>
  41e44c:	ldr	x19, [sp, #16]
  41e450:	ldp	x29, x30, [sp], #32
  41e454:	ret
  41e458:	stp	x29, x30, [sp, #-32]!
  41e45c:	stp	x20, x19, [sp, #16]
  41e460:	mov	x19, x0
  41e464:	mov	x29, sp
  41e468:	tbnz	x1, #63, 41e4a0 <_obstack_memory_used@@Base+0x806c>
  41e46c:	ldr	x8, [x19, #88]
  41e470:	cmp	x8, x1
  41e474:	b.eq	41e504 <_obstack_memory_used@@Base+0x80d0>  // b.none
  41e478:	ldr	w8, [x19, #144]
  41e47c:	cmp	w8, #0x2
  41e480:	b.lt	41e4a8 <_obstack_memory_used@@Base+0x8074>  // b.tstop
  41e484:	ldr	x9, [x19, #16]
  41e488:	ldr	w8, [x9, x1, lsl #2]
  41e48c:	cmn	w8, #0x1
  41e490:	b.ne	41e4c8 <_obstack_memory_used@@Base+0x8094>  // b.any
  41e494:	sub	x1, x1, #0x1
  41e498:	cmn	x1, #0x1
  41e49c:	b.ne	41e488 <_obstack_memory_used@@Base+0x8054>  // b.any
  41e4a0:	ldr	w0, [x19, #112]
  41e4a4:	b	41e4f8 <_obstack_memory_used@@Base+0x80c4>
  41e4a8:	ldr	x8, [x19, #8]
  41e4ac:	ldr	x0, [x19, #128]
  41e4b0:	ldrb	w20, [x8, x1]
  41e4b4:	mov	x1, x20
  41e4b8:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  41e4bc:	tbz	w0, #0, 41e4ec <_obstack_memory_used@@Base+0x80b8>
  41e4c0:	mov	w0, #0x1                   	// #1
  41e4c4:	b	41e4f8 <_obstack_memory_used@@Base+0x80c4>
  41e4c8:	ldrb	w9, [x19, #142]
  41e4cc:	cbnz	w9, 41e514 <_obstack_memory_used@@Base+0x80e0>
  41e4d0:	cmp	w8, #0xa
  41e4d4:	b.ne	41e4f4 <_obstack_memory_used@@Base+0x80c0>  // b.any
  41e4d8:	ldrb	w8, [x19, #141]
  41e4dc:	cmp	w8, #0x0
  41e4e0:	cset	w8, ne  // ne = any
  41e4e4:	lsl	w0, w8, #1
  41e4e8:	b	41e4f8 <_obstack_memory_used@@Base+0x80c4>
  41e4ec:	cmp	w20, #0xa
  41e4f0:	b.eq	41e4d8 <_obstack_memory_used@@Base+0x80a4>  // b.none
  41e4f4:	mov	w0, wzr
  41e4f8:	ldp	x20, x19, [sp, #16]
  41e4fc:	ldp	x29, x30, [sp], #32
  41e500:	ret
  41e504:	and	w8, w2, #0x2
  41e508:	mov	w9, #0xa                   	// #10
  41e50c:	eor	w0, w8, w9
  41e510:	b	41e4f8 <_obstack_memory_used@@Base+0x80c4>
  41e514:	mov	w0, w8
  41e518:	mov	w20, w8
  41e51c:	bl	402860 <iswalnum@plt>
  41e520:	mov	w9, w0
  41e524:	cmp	w20, #0x5f
  41e528:	mov	w0, #0x1                   	// #1
  41e52c:	b.eq	41e4f8 <_obstack_memory_used@@Base+0x80c4>  // b.none
  41e530:	mov	w8, w20
  41e534:	cbz	w9, 41e4d0 <_obstack_memory_used@@Base+0x809c>
  41e538:	b	41e4f8 <_obstack_memory_used@@Base+0x80c4>
  41e53c:	stp	x29, x30, [sp, #-80]!
  41e540:	stp	x24, x23, [sp, #32]
  41e544:	stp	x22, x21, [sp, #48]
  41e548:	stp	x20, x19, [sp, #64]
  41e54c:	ldr	x8, [x0, #40]
  41e550:	ldr	x9, [x0, #56]
  41e554:	mov	x20, x2
  41e558:	str	x25, [sp, #16]
  41e55c:	mov	x29, sp
  41e560:	add	x19, x9, x8
  41e564:	cmp	x19, x1
  41e568:	b.ge	41e5dc <_obstack_memory_used@@Base+0x81a8>  // b.tcont
  41e56c:	mov	x21, x1
  41e570:	mov	x22, x0
  41e574:	add	x23, x0, #0x20
  41e578:	ldr	x8, [x22, #80]
  41e57c:	ldr	x9, [x22]
  41e580:	ldr	x25, [x22, #32]
  41e584:	add	x0, x29, #0x1c
  41e588:	sub	x24, x8, x19
  41e58c:	add	x1, x9, x19
  41e590:	mov	x2, x24
  41e594:	mov	x3, x23
  41e598:	bl	41609c <wcrtomb@plt+0x136dc>
  41e59c:	sub	x8, x0, #0x1
  41e5a0:	cmn	x8, #0x3
  41e5a4:	b.cs	41e5bc <_obstack_memory_used@@Base+0x8188>  // b.hs, b.nlast
  41e5a8:	ldr	w8, [x29, #28]
  41e5ac:	add	x19, x0, x19
  41e5b0:	cmp	x19, x21
  41e5b4:	b.lt	41e578 <_obstack_memory_used@@Base+0x8144>  // b.tstop
  41e5b8:	b	41e5e0 <_obstack_memory_used@@Base+0x81ac>
  41e5bc:	mov	w8, wzr
  41e5c0:	cbz	x24, 41e5d0 <_obstack_memory_used@@Base+0x819c>
  41e5c4:	cbz	x0, 41e5d0 <_obstack_memory_used@@Base+0x819c>
  41e5c8:	ldr	x8, [x22]
  41e5cc:	ldrb	w8, [x8, x19]
  41e5d0:	str	x25, [x23]
  41e5d4:	mov	w0, #0x1                   	// #1
  41e5d8:	b	41e5ac <_obstack_memory_used@@Base+0x8178>
  41e5dc:	mov	w8, #0xffffffff            	// #-1
  41e5e0:	str	w8, [x20]
  41e5e4:	mov	x0, x19
  41e5e8:	ldp	x20, x19, [sp, #64]
  41e5ec:	ldp	x22, x21, [sp, #48]
  41e5f0:	ldp	x24, x23, [sp, #32]
  41e5f4:	ldr	x25, [sp, #16]
  41e5f8:	ldp	x29, x30, [sp], #80
  41e5fc:	ret
  41e600:	add	x8, x1, #0x3f
  41e604:	cmp	x1, #0x0
  41e608:	csel	x8, x8, x1, lt  // lt = tstop
  41e60c:	asr	x8, x8, #6
  41e610:	ldr	x8, [x0, x8, lsl #3]
  41e614:	lsr	x8, x8, x1
  41e618:	and	w0, w8, #0x1
  41e61c:	ret
  41e620:	stp	x29, x30, [sp, #-64]!
  41e624:	stp	x24, x23, [sp, #16]
  41e628:	stp	x22, x21, [sp, #32]
  41e62c:	stp	x20, x19, [sp, #48]
  41e630:	ldr	x8, [x1, #8]
  41e634:	mov	x29, sp
  41e638:	cmp	x8, #0x1
  41e63c:	b.lt	41e6c8 <_obstack_memory_used@@Base+0x8294>  // b.tstop
  41e640:	ldr	x24, [x0, #152]
  41e644:	mov	x19, x2
  41e648:	mov	x20, x1
  41e64c:	mov	x21, x0
  41e650:	mov	x23, xzr
  41e654:	ldr	x8, [x20, #16]
  41e658:	ldr	x1, [x8, x23, lsl #3]
  41e65c:	ldr	x8, [x24]
  41e660:	add	x9, x8, x1, lsl #4
  41e664:	ldrb	w9, [x9, #8]
  41e668:	cmp	w9, #0x8
  41e66c:	b.ne	41e69c <_obstack_memory_used@@Base+0x8268>  // b.any
  41e670:	lsl	x9, x1, #4
  41e674:	ldr	x8, [x8, x9]
  41e678:	cmp	x8, #0x3f
  41e67c:	b.gt	41e69c <_obstack_memory_used@@Base+0x8268>
  41e680:	ldr	x9, [x24, #160]
  41e684:	lsr	x8, x9, x8
  41e688:	tbz	w8, #0, 41e69c <_obstack_memory_used@@Base+0x8268>
  41e68c:	mov	x0, x21
  41e690:	mov	x2, x19
  41e694:	bl	41ed64 <_obstack_memory_used@@Base+0x8930>
  41e698:	cbnz	w0, 41e6b8 <_obstack_memory_used@@Base+0x8284>
  41e69c:	mov	w8, #0x1                   	// #1
  41e6a0:	tbz	w8, #0, 41e6cc <_obstack_memory_used@@Base+0x8298>
  41e6a4:	ldr	x8, [x20, #8]
  41e6a8:	add	x23, x23, #0x1
  41e6ac:	cmp	x23, x8
  41e6b0:	b.lt	41e654 <_obstack_memory_used@@Base+0x8220>  // b.tstop
  41e6b4:	b	41e6c8 <_obstack_memory_used@@Base+0x8294>
  41e6b8:	mov	w8, wzr
  41e6bc:	mov	w22, w0
  41e6c0:	tbnz	w8, #0, 41e6a4 <_obstack_memory_used@@Base+0x8270>
  41e6c4:	b	41e6cc <_obstack_memory_used@@Base+0x8298>
  41e6c8:	mov	w22, wzr
  41e6cc:	mov	w0, w22
  41e6d0:	ldp	x20, x19, [sp, #48]
  41e6d4:	ldp	x22, x21, [sp, #32]
  41e6d8:	ldp	x24, x23, [sp, #16]
  41e6dc:	ldp	x29, x30, [sp], #64
  41e6e0:	ret
  41e6e4:	sub	sp, sp, #0xa0
  41e6e8:	stp	x29, x30, [sp, #64]
  41e6ec:	stp	x28, x27, [sp, #80]
  41e6f0:	stp	x26, x25, [sp, #96]
  41e6f4:	stp	x24, x23, [sp, #112]
  41e6f8:	stp	x22, x21, [sp, #128]
  41e6fc:	stp	x20, x19, [sp, #144]
  41e700:	ldr	x8, [x1, #8]
  41e704:	add	x29, sp, #0x40
  41e708:	cmp	x8, #0x1
  41e70c:	b.lt	41e9d0 <_obstack_memory_used@@Base+0x859c>  // b.tstop
  41e710:	ldr	x25, [x0, #152]
  41e714:	ldr	x22, [x0, #72]
  41e718:	mov	x24, x1
  41e71c:	mov	x20, x0
  41e720:	mov	x26, xzr
  41e724:	str	x1, [sp]
  41e728:	str	x25, [sp, #16]
  41e72c:	b	41e740 <_obstack_memory_used@@Base+0x830c>
  41e730:	ldr	x8, [x24, #8]
  41e734:	add	x26, x26, #0x1
  41e738:	cmp	x26, x8
  41e73c:	b.ge	41e9d0 <_obstack_memory_used@@Base+0x859c>  // b.tcont
  41e740:	ldr	x8, [x24, #16]
  41e744:	ldr	x23, [x8, x26, lsl #3]
  41e748:	ldr	x8, [x25]
  41e74c:	add	x8, x8, x23, lsl #4
  41e750:	ldr	w19, [x8, #8]
  41e754:	and	w8, w19, #0xff
  41e758:	cmp	w8, #0x4
  41e75c:	b.ne	41e79c <_obstack_memory_used@@Base+0x8368>  // b.any
  41e760:	tst	w19, #0x3ff00
  41e764:	b.eq	41e7a8 <_obstack_memory_used@@Base+0x8374>  // b.none
  41e768:	ldr	w2, [x20, #160]
  41e76c:	mov	x0, x20
  41e770:	mov	x1, x22
  41e774:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41e778:	and	w8, w0, #0x1
  41e77c:	tbz	w19, #10, 41e784 <_obstack_memory_used@@Base+0x8350>
  41e780:	cbz	w8, 41e79c <_obstack_memory_used@@Base+0x8368>
  41e784:	tbz	w19, #11, 41e78c <_obstack_memory_used@@Base+0x8358>
  41e788:	cbnz	w8, 41e79c <_obstack_memory_used@@Base+0x8368>
  41e78c:	tbz	w19, #13, 41e794 <_obstack_memory_used@@Base+0x8360>
  41e790:	tbz	w0, #1, 41e79c <_obstack_memory_used@@Base+0x8368>
  41e794:	tbz	w19, #15, 41e7a8 <_obstack_memory_used@@Base+0x8374>
  41e798:	tbnz	w0, #3, 41e7a8 <_obstack_memory_used@@Base+0x8374>
  41e79c:	mov	w8, #0x4                   	// #4
  41e7a0:	cbnz	w8, 41e9b8 <_obstack_memory_used@@Base+0x8584>
  41e7a4:	b	41e730 <_obstack_memory_used@@Base+0x82fc>
  41e7a8:	ldr	x28, [x20, #200]
  41e7ac:	mov	x0, x20
  41e7b0:	mov	x1, x23
  41e7b4:	mov	x2, x22
  41e7b8:	bl	41edfc <_obstack_memory_used@@Base+0x89c8>
  41e7bc:	stur	w0, [x29, #-4]
  41e7c0:	cbnz	w0, 41e9c4 <_obstack_memory_used@@Base+0x8590>
  41e7c4:	ldr	x8, [x20, #200]
  41e7c8:	cmp	x28, x8
  41e7cc:	b.ge	41e9b0 <_obstack_memory_used@@Base+0x857c>  // b.tcont
  41e7d0:	add	x8, x28, x28, lsl #2
  41e7d4:	lsl	x27, x8, #3
  41e7d8:	ldr	x8, [x20, #216]
  41e7dc:	ldr	x9, [x8, x27]
  41e7e0:	cmp	x9, x23
  41e7e4:	b.ne	41e81c <_obstack_memory_used@@Base+0x83e8>  // b.any
  41e7e8:	add	x8, x8, x27
  41e7ec:	ldr	x9, [x8, #8]
  41e7f0:	cmp	x9, x22
  41e7f4:	b.ne	41e81c <_obstack_memory_used@@Base+0x83e8>  // b.any
  41e7f8:	ldp	x21, x19, [x8, #16]
  41e7fc:	ldr	x8, [x25, #48]
  41e800:	cmp	x19, x21
  41e804:	b.ne	41e844 <_obstack_memory_used@@Base+0x8410>  // b.any
  41e808:	ldr	x9, [x25, #40]
  41e80c:	mov	w11, #0x18                  	// #24
  41e810:	madd	x9, x23, x11, x9
  41e814:	ldr	x9, [x9, #16]
  41e818:	b	41e850 <_obstack_memory_used@@Base+0x841c>
  41e81c:	mov	w8, #0x8                   	// #8
  41e820:	orr	w9, w8, #0x8
  41e824:	cmp	w9, #0x8
  41e828:	b.ne	41e9b4 <_obstack_memory_used@@Base+0x8580>  // b.any
  41e82c:	ldr	x8, [x20, #200]
  41e830:	add	x28, x28, #0x1
  41e834:	add	x27, x27, #0x28
  41e838:	cmp	x28, x8
  41e83c:	b.lt	41e7d8 <_obstack_memory_used@@Base+0x83a4>  // b.tstop
  41e840:	b	41e9b0 <_obstack_memory_used@@Base+0x857c>
  41e844:	ldr	x9, [x25, #24]
  41e848:	mov	w11, #0x18                  	// #24
  41e84c:	add	x9, x9, x23, lsl #3
  41e850:	ldr	x9, [x9]
  41e854:	ldr	w2, [x20, #160]
  41e858:	add	x10, x19, x22
  41e85c:	sub	x24, x10, x21
  41e860:	madd	x8, x9, x11, x8
  41e864:	sub	x1, x24, #0x1
  41e868:	mov	x0, x20
  41e86c:	str	x8, [sp, #24]
  41e870:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41e874:	ldr	x8, [x20, #184]
  41e878:	mov	w25, w0
  41e87c:	ldr	x9, [x8, x22, lsl #3]
  41e880:	ldr	x8, [x8, x24, lsl #3]
  41e884:	cbz	x9, 41e900 <_obstack_memory_used@@Base+0x84cc>
  41e888:	ldr	x9, [x9, #16]
  41e88c:	str	x9, [sp, #8]
  41e890:	cbz	x8, 41e908 <_obstack_memory_used@@Base+0x84d4>
  41e894:	ldr	x1, [x8, #80]
  41e898:	ldr	x2, [sp, #24]
  41e89c:	add	x0, sp, #0x20
  41e8a0:	bl	41f1b8 <_obstack_memory_used@@Base+0x8d84>
  41e8a4:	stur	w0, [x29, #-4]
  41e8a8:	cbnz	w0, 41e9a0 <_obstack_memory_used@@Base+0x856c>
  41e8ac:	ldr	x1, [sp, #16]
  41e8b0:	sub	x0, x29, #0x4
  41e8b4:	add	x2, sp, #0x20
  41e8b8:	mov	w3, w25
  41e8bc:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41e8c0:	ldr	x8, [x20, #184]
  41e8c4:	lsl	x24, x24, #3
  41e8c8:	str	x0, [x8, x24]
  41e8cc:	ldr	x0, [sp, #48]
  41e8d0:	bl	402770 <free@plt>
  41e8d4:	ldr	x8, [x20, #184]
  41e8d8:	ldur	w9, [x29, #-4]
  41e8dc:	ldr	x8, [x8, x24]
  41e8e0:	cmp	w9, #0x0
  41e8e4:	ccmp	x8, #0x0, #0x0, ne  // ne = any
  41e8e8:	mov	w8, #0x5                   	// #5
  41e8ec:	csel	w8, w8, wzr, eq  // eq = none
  41e8f0:	ldr	x24, [sp]
  41e8f4:	ldr	x25, [sp, #16]
  41e8f8:	cbnz	w8, 41e820 <_obstack_memory_used@@Base+0x83ec>
  41e8fc:	b	41e940 <_obstack_memory_used@@Base+0x850c>
  41e900:	str	xzr, [sp, #8]
  41e904:	cbnz	x8, 41e894 <_obstack_memory_used@@Base+0x8460>
  41e908:	ldp	x1, x2, [sp, #16]
  41e90c:	sub	x0, x29, #0x4
  41e910:	mov	w3, w25
  41e914:	mov	x25, x1
  41e918:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41e91c:	ldr	x8, [x20, #184]
  41e920:	lsl	x9, x24, #3
  41e924:	ldr	x24, [sp]
  41e928:	str	x0, [x8, x9]
  41e92c:	ldr	x8, [x20, #184]
  41e930:	ldr	x8, [x8, x9]
  41e934:	cbnz	x8, 41e940 <_obstack_memory_used@@Base+0x850c>
  41e938:	ldur	w8, [x29, #-4]
  41e93c:	cbnz	w8, 41e998 <_obstack_memory_used@@Base+0x8564>
  41e940:	cmp	x19, x21
  41e944:	b.ne	41e990 <_obstack_memory_used@@Base+0x855c>  // b.any
  41e948:	ldr	x8, [x20, #184]
  41e94c:	ldr	x9, [sp, #8]
  41e950:	ldr	x8, [x8, x22, lsl #3]
  41e954:	ldr	x8, [x8, #16]
  41e958:	cmp	x8, x9
  41e95c:	b.le	41e990 <_obstack_memory_used@@Base+0x855c>
  41e960:	ldr	x19, [sp, #24]
  41e964:	mov	x0, x20
  41e968:	mov	x2, x22
  41e96c:	mov	x1, x19
  41e970:	bl	41e620 <_obstack_memory_used@@Base+0x81ec>
  41e974:	stur	w0, [x29, #-4]
  41e978:	cbnz	w0, 41e998 <_obstack_memory_used@@Base+0x8564>
  41e97c:	mov	x0, x20
  41e980:	mov	x1, x19
  41e984:	bl	41e6e4 <_obstack_memory_used@@Base+0x82b0>
  41e988:	stur	w0, [x29, #-4]
  41e98c:	cbnz	w0, 41e998 <_obstack_memory_used@@Base+0x8564>
  41e990:	mov	w8, wzr
  41e994:	b	41e820 <_obstack_memory_used@@Base+0x83ec>
  41e998:	mov	w8, #0x5                   	// #5
  41e99c:	b	41e820 <_obstack_memory_used@@Base+0x83ec>
  41e9a0:	ldr	x0, [sp, #48]
  41e9a4:	bl	402770 <free@plt>
  41e9a8:	mov	w8, #0x5                   	// #5
  41e9ac:	b	41e8f0 <_obstack_memory_used@@Base+0x84bc>
  41e9b0:	mov	w8, wzr
  41e9b4:	cbz	w8, 41e730 <_obstack_memory_used@@Base+0x82fc>
  41e9b8:	cmp	w8, #0x4
  41e9bc:	b.eq	41e730 <_obstack_memory_used@@Base+0x82fc>  // b.none
  41e9c0:	b	41e9f8 <_obstack_memory_used@@Base+0x85c4>
  41e9c4:	mov	w8, #0x5                   	// #5
  41e9c8:	cbnz	w8, 41e9b8 <_obstack_memory_used@@Base+0x8584>
  41e9cc:	b	41e730 <_obstack_memory_used@@Base+0x82fc>
  41e9d0:	stur	wzr, [x29, #-4]
  41e9d4:	ldur	w0, [x29, #-4]
  41e9d8:	ldp	x20, x19, [sp, #144]
  41e9dc:	ldp	x22, x21, [sp, #128]
  41e9e0:	ldp	x24, x23, [sp, #112]
  41e9e4:	ldp	x26, x25, [sp, #96]
  41e9e8:	ldp	x28, x27, [sp, #80]
  41e9ec:	ldp	x29, x30, [sp, #64]
  41e9f0:	add	sp, sp, #0xa0
  41e9f4:	ret
  41e9f8:	cmp	w8, #0x5
  41e9fc:	b.eq	41e9d4 <_obstack_memory_used@@Base+0x85a0>  // b.none
  41ea00:	b	41e9d8 <_obstack_memory_used@@Base+0x85a4>
  41ea04:	stp	x29, x30, [sp, #-32]!
  41ea08:	ldr	x8, [x0, #64]
  41ea0c:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  41ea10:	str	x19, [sp, #16]
  41ea14:	mov	x29, sp
  41ea18:	cmp	x8, x9
  41ea1c:	b.hi	41eac4 <_obstack_memory_used@@Base+0x8690>  // b.pmore
  41ea20:	ldr	x9, [x0, #88]
  41ea24:	lsl	x8, x8, #1
  41ea28:	sxtw	x10, w1
  41ea2c:	mov	x19, x0
  41ea30:	cmp	x9, x8
  41ea34:	csel	x8, x9, x8, lt  // lt = tstop
  41ea38:	cmp	x8, x10
  41ea3c:	csel	x1, x8, x10, gt
  41ea40:	bl	41855c <_obstack_memory_used@@Base+0x2128>
  41ea44:	cbnz	w0, 41eab8 <_obstack_memory_used@@Base+0x8684>
  41ea48:	ldr	x0, [x19, #184]
  41ea4c:	cbz	x0, 41ea68 <_obstack_memory_used@@Base+0x8634>
  41ea50:	ldr	x8, [x19, #64]
  41ea54:	lsl	x8, x8, #3
  41ea58:	add	x1, x8, #0x8
  41ea5c:	bl	402610 <realloc@plt>
  41ea60:	cbz	x0, 41eac4 <_obstack_memory_used@@Base+0x8690>
  41ea64:	str	x0, [x19, #184]
  41ea68:	ldr	w8, [x19, #144]
  41ea6c:	ldrb	w9, [x19, #136]
  41ea70:	cmp	w8, #0x2
  41ea74:	cbz	w9, 41ea8c <_obstack_memory_used@@Base+0x8658>
  41ea78:	mov	x0, x19
  41ea7c:	b.lt	41ea9c <_obstack_memory_used@@Base+0x8668>  // b.tstop
  41ea80:	bl	418610 <_obstack_memory_used@@Base+0x21dc>
  41ea84:	cbz	w0, 41eab4 <_obstack_memory_used@@Base+0x8680>
  41ea88:	b	41eab8 <_obstack_memory_used@@Base+0x8684>
  41ea8c:	b.lt	41eaa4 <_obstack_memory_used@@Base+0x8670>  // b.tstop
  41ea90:	mov	x0, x19
  41ea94:	bl	418c88 <_obstack_memory_used@@Base+0x2854>
  41ea98:	b	41eab4 <_obstack_memory_used@@Base+0x8680>
  41ea9c:	bl	418c08 <_obstack_memory_used@@Base+0x27d4>
  41eaa0:	b	41eab4 <_obstack_memory_used@@Base+0x8680>
  41eaa4:	ldr	x8, [x19, #120]
  41eaa8:	cbz	x8, 41eab4 <_obstack_memory_used@@Base+0x8680>
  41eaac:	mov	x0, x19
  41eab0:	bl	418e2c <_obstack_memory_used@@Base+0x29f8>
  41eab4:	mov	w0, wzr
  41eab8:	ldr	x19, [sp, #16]
  41eabc:	ldp	x29, x30, [sp], #32
  41eac0:	ret
  41eac4:	mov	w0, #0xc                   	// #12
  41eac8:	b	41eab8 <_obstack_memory_used@@Base+0x8684>
  41eacc:	stp	x29, x30, [sp, #-64]!
  41ead0:	stp	x22, x21, [sp, #32]
  41ead4:	stp	x20, x19, [sp, #48]
  41ead8:	ldrb	w8, [x2, #104]
  41eadc:	mov	x20, x2
  41eae0:	mov	x19, x1
  41eae4:	mov	x21, x0
  41eae8:	str	x23, [sp, #16]
  41eaec:	mov	x29, sp
  41eaf0:	tbnz	w8, #5, 41eb50 <_obstack_memory_used@@Base+0x871c>
  41eaf4:	ldr	x8, [x19, #72]
  41eaf8:	ldr	x9, [x19, #8]
  41eafc:	add	x10, x8, #0x1
  41eb00:	str	x10, [x19, #72]
  41eb04:	ldrb	w22, [x9, x8]
  41eb08:	ldr	x8, [x20, #88]
  41eb0c:	cbnz	x8, 41eb38 <_obstack_memory_used@@Base+0x8704>
  41eb10:	ldr	x23, [x20, #96]
  41eb14:	cbnz	x23, 41eb6c <_obstack_memory_used@@Base+0x8738>
  41eb18:	ldr	x0, [x19, #152]
  41eb1c:	mov	x1, x20
  41eb20:	bl	420948 <_obstack_memory_used@@Base+0xa514>
  41eb24:	tbnz	w0, #0, 41eb08 <_obstack_memory_used@@Base+0x86d4>
  41eb28:	mov	x0, xzr
  41eb2c:	mov	w8, #0xc                   	// #12
  41eb30:	str	w8, [x21]
  41eb34:	b	41eb3c <_obstack_memory_used@@Base+0x8708>
  41eb38:	ldr	x0, [x8, x22, lsl #3]
  41eb3c:	ldp	x20, x19, [sp, #48]
  41eb40:	ldp	x22, x21, [sp, #32]
  41eb44:	ldr	x23, [sp, #16]
  41eb48:	ldp	x29, x30, [sp], #64
  41eb4c:	ret
  41eb50:	mov	x0, x19
  41eb54:	mov	x1, x20
  41eb58:	bl	42077c <_obstack_memory_used@@Base+0xa348>
  41eb5c:	str	w0, [x21]
  41eb60:	cbz	w0, 41eaf4 <_obstack_memory_used@@Base+0x86c0>
  41eb64:	mov	x0, xzr
  41eb68:	b	41eb3c <_obstack_memory_used@@Base+0x8708>
  41eb6c:	ldr	x8, [x19, #72]
  41eb70:	ldr	w2, [x19, #160]
  41eb74:	mov	x0, x19
  41eb78:	sub	x1, x8, #0x1
  41eb7c:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41eb80:	ubfiz	w8, w0, #8, #1
  41eb84:	orr	x8, x8, x22
  41eb88:	ldr	x0, [x23, x8, lsl #3]
  41eb8c:	b	41eb3c <_obstack_memory_used@@Base+0x8708>
  41eb90:	sub	sp, sp, #0x60
  41eb94:	stp	x29, x30, [sp, #32]
  41eb98:	stp	x24, x23, [sp, #48]
  41eb9c:	stp	x22, x21, [sp, #64]
  41eba0:	stp	x20, x19, [sp, #80]
  41eba4:	ldr	x20, [x1, #72]
  41eba8:	ldp	x8, x9, [x1, #184]
  41ebac:	ldr	x23, [x1, #152]
  41ebb0:	mov	x22, x2
  41ebb4:	mov	x19, x1
  41ebb8:	cmp	x20, x9
  41ebbc:	mov	x21, x0
  41ebc0:	add	x29, sp, #0x20
  41ebc4:	b.le	41ebd4 <_obstack_memory_used@@Base+0x87a0>
  41ebc8:	str	x22, [x8, x20, lsl #3]
  41ebcc:	str	x20, [x19, #192]
  41ebd0:	b	41ec6c <_obstack_memory_used@@Base+0x8838>
  41ebd4:	ldr	x9, [x8, x20, lsl #3]
  41ebd8:	cbz	x9, 41ec08 <_obstack_memory_used@@Base+0x87d4>
  41ebdc:	ldr	x8, [x8, x20, lsl #3]
  41ebe0:	ldr	x2, [x8, #80]
  41ebe4:	cbz	x22, 41ec10 <_obstack_memory_used@@Base+0x87dc>
  41ebe8:	ldr	x24, [x22, #80]
  41ebec:	mov	x0, sp
  41ebf0:	mov	x1, x24
  41ebf4:	bl	41f1b8 <_obstack_memory_used@@Base+0x8d84>
  41ebf8:	str	w0, [x21]
  41ebfc:	cbz	w0, 41ec24 <_obstack_memory_used@@Base+0x87f0>
  41ec00:	mov	w8, wzr
  41ec04:	b	41ec68 <_obstack_memory_used@@Base+0x8834>
  41ec08:	str	x22, [x8, x20, lsl #3]
  41ec0c:	b	41ec6c <_obstack_memory_used@@Base+0x8838>
  41ec10:	ldr	x8, [x2, #16]
  41ec14:	ldr	q0, [x2]
  41ec18:	mov	x24, xzr
  41ec1c:	str	x8, [sp, #16]
  41ec20:	str	q0, [sp]
  41ec24:	ldr	x8, [x19, #72]
  41ec28:	ldr	w2, [x19, #160]
  41ec2c:	mov	x0, x19
  41ec30:	sub	x1, x8, #0x1
  41ec34:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41ec38:	mov	w3, w0
  41ec3c:	mov	x2, sp
  41ec40:	mov	x0, x21
  41ec44:	mov	x1, x23
  41ec48:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41ec4c:	ldr	x8, [x19, #184]
  41ec50:	mov	x22, x0
  41ec54:	str	x0, [x8, x20, lsl #3]
  41ec58:	cbz	x24, 41ec64 <_obstack_memory_used@@Base+0x8830>
  41ec5c:	ldr	x0, [sp, #16]
  41ec60:	bl	402770 <free@plt>
  41ec64:	mov	w8, #0x1                   	// #1
  41ec68:	cbz	w8, 41ecbc <_obstack_memory_used@@Base+0x8888>
  41ec6c:	cbz	x22, 41ecc0 <_obstack_memory_used@@Base+0x888c>
  41ec70:	ldr	x8, [x23, #152]
  41ec74:	cbz	x8, 41ecc0 <_obstack_memory_used@@Base+0x888c>
  41ec78:	add	x23, x22, #0x8
  41ec7c:	mov	x0, x19
  41ec80:	mov	x1, x23
  41ec84:	mov	x2, x20
  41ec88:	bl	41e620 <_obstack_memory_used@@Base+0x81ec>
  41ec8c:	str	w0, [x21]
  41ec90:	cbnz	w0, 41ecbc <_obstack_memory_used@@Base+0x8888>
  41ec94:	ldrb	w8, [x22, #104]
  41ec98:	tbz	w8, #6, 41ecc0 <_obstack_memory_used@@Base+0x888c>
  41ec9c:	mov	x0, x19
  41eca0:	mov	x1, x23
  41eca4:	bl	41e6e4 <_obstack_memory_used@@Base+0x82b0>
  41eca8:	str	w0, [x21]
  41ecac:	cbnz	w0, 41ecbc <_obstack_memory_used@@Base+0x8888>
  41ecb0:	ldr	x8, [x19, #184]
  41ecb4:	ldr	x22, [x8, x20, lsl #3]
  41ecb8:	b	41ecc0 <_obstack_memory_used@@Base+0x888c>
  41ecbc:	mov	x22, xzr
  41ecc0:	mov	x0, x22
  41ecc4:	ldp	x20, x19, [sp, #80]
  41ecc8:	ldp	x22, x21, [sp, #64]
  41eccc:	ldp	x24, x23, [sp, #48]
  41ecd0:	ldp	x29, x30, [sp, #32]
  41ecd4:	add	sp, sp, #0x60
  41ecd8:	ret
  41ecdc:	stp	x29, x30, [sp, #-32]!
  41ece0:	stp	x20, x19, [sp, #16]
  41ece4:	mov	x19, x1
  41ece8:	mov	x20, x0
  41ecec:	mov	x29, sp
  41ecf0:	ldr	x8, [x19, #192]
  41ecf4:	ldr	x9, [x19, #72]
  41ecf8:	cmp	x9, x8
  41ecfc:	b.ge	41ed3c <_obstack_memory_used@@Base+0x8908>  // b.tcont
  41ed00:	ldr	x10, [x19, #72]
  41ed04:	ldr	x11, [x19, #184]
  41ed08:	add	x10, x10, #0x1
  41ed0c:	str	x10, [x19, #72]
  41ed10:	add	x10, x11, x9, lsl #3
  41ed14:	ldr	x10, [x10, #8]
  41ed18:	add	x9, x9, #0x1
  41ed1c:	cbz	x10, 41ecf8 <_obstack_memory_used@@Base+0x88c4>
  41ed20:	mov	x0, x20
  41ed24:	mov	x1, x19
  41ed28:	mov	x2, xzr
  41ed2c:	bl	41eb90 <_obstack_memory_used@@Base+0x875c>
  41ed30:	mov	w8, #0x1                   	// #1
  41ed34:	cbnz	w8, 41ed44 <_obstack_memory_used@@Base+0x8910>
  41ed38:	b	41ed54 <_obstack_memory_used@@Base+0x8920>
  41ed3c:	mov	w8, wzr
  41ed40:	cbz	w8, 41ed54 <_obstack_memory_used@@Base+0x8920>
  41ed44:	cbnz	x0, 41ed58 <_obstack_memory_used@@Base+0x8924>
  41ed48:	ldr	w8, [x20]
  41ed4c:	cbz	w8, 41ecf0 <_obstack_memory_used@@Base+0x88bc>
  41ed50:	b	41ed58 <_obstack_memory_used@@Base+0x8924>
  41ed54:	mov	x0, xzr
  41ed58:	ldp	x20, x19, [sp, #16]
  41ed5c:	ldp	x29, x30, [sp], #32
  41ed60:	ret
  41ed64:	stp	x29, x30, [sp, #-48]!
  41ed68:	stp	x22, x21, [sp, #16]
  41ed6c:	stp	x20, x19, [sp, #32]
  41ed70:	ldp	x8, x22, [x0, #232]
  41ed74:	mov	x19, x2
  41ed78:	mov	x20, x0
  41ed7c:	mov	x21, x1
  41ed80:	cmp	x8, x22
  41ed84:	mov	x29, sp
  41ed88:	b.eq	41edd8 <_obstack_memory_used@@Base+0x89a4>  // b.none
  41ed8c:	mov	w0, #0x1                   	// #1
  41ed90:	mov	w1, #0x30                  	// #48
  41ed94:	bl	4025d0 <calloc@plt>
  41ed98:	ldr	x8, [x20, #232]
  41ed9c:	ldr	x9, [x20, #248]
  41eda0:	lsl	x10, x8, #3
  41eda4:	str	x0, [x9, x10]
  41eda8:	ldr	x9, [x20, #248]
  41edac:	ldr	x9, [x9, x10]
  41edb0:	cbz	x9, 41edf4 <_obstack_memory_used@@Base+0x89c0>
  41edb4:	mov	w0, wzr
  41edb8:	add	x8, x8, #0x1
  41edbc:	str	x21, [x9, #8]
  41edc0:	str	x8, [x20, #232]
  41edc4:	str	x19, [x9]
  41edc8:	ldp	x20, x19, [sp, #32]
  41edcc:	ldp	x22, x21, [sp, #16]
  41edd0:	ldp	x29, x30, [sp], #48
  41edd4:	ret
  41edd8:	ldr	x0, [x20, #248]
  41eddc:	lsl	x1, x22, #4
  41ede0:	bl	402610 <realloc@plt>
  41ede4:	cbz	x0, 41edf4 <_obstack_memory_used@@Base+0x89c0>
  41ede8:	lsl	x8, x22, #1
  41edec:	stp	x8, x0, [x20, #240]
  41edf0:	b	41ed8c <_obstack_memory_used@@Base+0x8958>
  41edf4:	mov	w0, #0xc                   	// #12
  41edf8:	b	41edc8 <_obstack_memory_used@@Base+0x8994>
  41edfc:	sub	sp, sp, #0x90
  41ee00:	stp	x29, x30, [sp, #48]
  41ee04:	stp	x28, x27, [sp, #64]
  41ee08:	stp	x26, x25, [sp, #80]
  41ee0c:	stp	x24, x23, [sp, #96]
  41ee10:	stp	x22, x21, [sp, #112]
  41ee14:	stp	x20, x19, [sp, #128]
  41ee18:	ldr	x21, [x0, #152]
  41ee1c:	ldr	x28, [x0, #8]
  41ee20:	add	x29, sp, #0x30
  41ee24:	stp	x1, x2, [x29, #-16]
  41ee28:	mov	x1, x2
  41ee2c:	mov	x20, x0
  41ee30:	bl	41f3b8 <_obstack_memory_used@@Base+0x8f84>
  41ee34:	cmn	x0, #0x1
  41ee38:	b.eq	41ee64 <_obstack_memory_used@@Base+0x8a30>  // b.none
  41ee3c:	ldr	x8, [x20, #216]
  41ee40:	ldur	x10, [x29, #-16]
  41ee44:	mov	w9, #0x28                  	// #40
  41ee48:	madd	x8, x0, x9, x8
  41ee4c:	ldr	x9, [x8]
  41ee50:	cmp	x9, x10
  41ee54:	b.eq	41f194 <_obstack_memory_used@@Base+0x8d60>  // b.none
  41ee58:	ldrb	w9, [x8, #32]
  41ee5c:	add	x8, x8, #0x28
  41ee60:	cbnz	w9, 41ee4c <_obstack_memory_used@@Base+0x8a18>
  41ee64:	ldr	x8, [x20, #232]
  41ee68:	cmp	x8, #0x1
  41ee6c:	b.lt	41f194 <_obstack_memory_used@@Base+0x8d60>  // b.tstop
  41ee70:	ldur	x9, [x29, #-16]
  41ee74:	ldr	x8, [x21]
  41ee78:	mov	x24, xzr
  41ee7c:	str	wzr, [sp, #12]
  41ee80:	lsl	x9, x9, #4
  41ee84:	ldr	x22, [x8, x9]
  41ee88:	stp	x22, x21, [sp, #16]
  41ee8c:	b	41eea0 <_obstack_memory_used@@Base+0x8a6c>
  41ee90:	ldr	x8, [x20, #232]
  41ee94:	add	x24, x24, #0x1
  41ee98:	cmp	x24, x8
  41ee9c:	b.ge	41f194 <_obstack_memory_used@@Base+0x8d60>  // b.tcont
  41eea0:	ldr	x8, [x20, #248]
  41eea4:	ldr	x9, [x21]
  41eea8:	ldr	x25, [x8, x24, lsl #3]
  41eeac:	ldr	x8, [x25, #8]
  41eeb0:	lsl	x8, x8, #4
  41eeb4:	ldr	x8, [x9, x8]
  41eeb8:	cmp	x8, x22
  41eebc:	b.ne	41efb4 <_obstack_memory_used@@Base+0x8b80>  // b.any
  41eec0:	ldr	x8, [x25, #32]
  41eec4:	ldr	x23, [x25]
  41eec8:	cmp	x8, #0x1
  41eecc:	b.lt	41efbc <_obstack_memory_used@@Base+0x8b88>  // b.tstop
  41eed0:	ldur	x19, [x29, #-8]
  41eed4:	mov	x21, xzr
  41eed8:	b	41eeec <_obstack_memory_used@@Base+0x8ab8>
  41eedc:	ldr	x8, [x25, #32]
  41eee0:	add	x21, x21, #0x1
  41eee4:	cmp	x21, x8
  41eee8:	b.ge	41efd0 <_obstack_memory_used@@Base+0x8b9c>  // b.tcont
  41eeec:	ldr	x8, [x25, #40]
  41eef0:	ldr	x26, [x8, x21, lsl #3]
  41eef4:	ldr	x22, [x26, #8]
  41eef8:	sub	x27, x22, x23
  41eefc:	cmp	x27, #0x1
  41ef00:	b.lt	41ef30 <_obstack_memory_used@@Base+0x8afc>  // b.tstop
  41ef04:	ldr	x8, [x20, #48]
  41ef08:	add	x1, x27, x19
  41ef0c:	cmp	x1, x8
  41ef10:	b.gt	41ef78 <_obstack_memory_used@@Base+0x8b44>
  41ef14:	add	x0, x28, x19
  41ef18:	add	x1, x28, x23
  41ef1c:	mov	x2, x27
  41ef20:	bl	4025e0 <bcmp@plt>
  41ef24:	cbz	w0, 41ef30 <_obstack_memory_used@@Base+0x8afc>
  41ef28:	mov	w8, #0x7                   	// #7
  41ef2c:	b	41ef68 <_obstack_memory_used@@Base+0x8b34>
  41ef30:	ldp	x3, x4, [x29, #-16]
  41ef34:	mov	x0, x20
  41ef38:	mov	x1, x25
  41ef3c:	mov	x2, x26
  41ef40:	add	x19, x27, x19
  41ef44:	bl	41f4dc <_obstack_memory_used@@Base+0x90a8>
  41ef48:	ldr	x28, [x20, #8]
  41ef4c:	cmp	w0, #0x1
  41ef50:	b.ne	41ef5c <_obstack_memory_used@@Base+0x8b28>  // b.any
  41ef54:	mov	w8, #0x9                   	// #9
  41ef58:	b	41ef64 <_obstack_memory_used@@Base+0x8b30>
  41ef5c:	cbnz	w0, 41ef98 <_obstack_memory_used@@Base+0x8b64>
  41ef60:	mov	w8, wzr
  41ef64:	mov	x23, x22
  41ef68:	cbz	w8, 41eedc <_obstack_memory_used@@Base+0x8aa8>
  41ef6c:	cmp	w8, #0x9
  41ef70:	b.eq	41eedc <_obstack_memory_used@@Base+0x8aa8>  // b.none
  41ef74:	b	41efc8 <_obstack_memory_used@@Base+0x8b94>
  41ef78:	ldr	x8, [x20, #88]
  41ef7c:	cmp	x1, x8
  41ef80:	b.gt	41ef28 <_obstack_memory_used@@Base+0x8af4>
  41ef84:	mov	x0, x20
  41ef88:	bl	41f43c <_obstack_memory_used@@Base+0x9008>
  41ef8c:	cbnz	w0, 41efa8 <_obstack_memory_used@@Base+0x8b74>
  41ef90:	ldr	x28, [x20, #8]
  41ef94:	b	41ef14 <_obstack_memory_used@@Base+0x8ae0>
  41ef98:	mov	w8, #0x1                   	// #1
  41ef9c:	mov	x23, x22
  41efa0:	str	w0, [sp, #12]
  41efa4:	b	41ef68 <_obstack_memory_used@@Base+0x8b34>
  41efa8:	mov	w8, #0x1                   	// #1
  41efac:	str	w0, [sp, #12]
  41efb0:	b	41ef68 <_obstack_memory_used@@Base+0x8b34>
  41efb4:	mov	w8, #0x6                   	// #6
  41efb8:	b	41f180 <_obstack_memory_used@@Base+0x8d4c>
  41efbc:	ldur	x19, [x29, #-8]
  41efc0:	mov	x21, xzr
  41efc4:	b	41efd0 <_obstack_memory_used@@Base+0x8b9c>
  41efc8:	cmp	w8, #0x7
  41efcc:	b.ne	41efe0 <_obstack_memory_used@@Base+0x8bac>  // b.any
  41efd0:	ldr	x8, [x25, #32]
  41efd4:	cmp	x21, x8
  41efd8:	b.ge	41efe8 <_obstack_memory_used@@Base+0x8bb4>  // b.tcont
  41efdc:	mov	w8, #0x6                   	// #6
  41efe0:	ldp	x22, x21, [sp, #16]
  41efe4:	b	41f180 <_obstack_memory_used@@Base+0x8d4c>
  41efe8:	ldur	x8, [x29, #-8]
  41efec:	ldr	x22, [sp, #16]
  41eff0:	cmp	x21, #0x0
  41eff4:	cinc	x26, x23, ne  // ne = any
  41eff8:	cmp	x26, x8
  41effc:	b.le	41f008 <_obstack_memory_used@@Base+0x8bd4>
  41f000:	ldr	x21, [sp, #24]
  41f004:	b	41f17c <_obstack_memory_used@@Base+0x8d48>
  41f008:	ldr	x21, [sp, #24]
  41f00c:	b	41f020 <_obstack_memory_used@@Base+0x8bec>
  41f010:	ldur	x8, [x29, #-8]
  41f014:	cmp	x26, x8
  41f018:	add	x26, x26, #0x1
  41f01c:	b.ge	41f17c <_obstack_memory_used@@Base+0x8d48>  // b.tcont
  41f020:	ldr	x8, [x25]
  41f024:	cmp	x26, x8
  41f028:	b.le	41f050 <_obstack_memory_used@@Base+0x8c1c>
  41f02c:	ldr	x8, [x20, #48]
  41f030:	cmp	x19, x8
  41f034:	b.ge	41f12c <_obstack_memory_used@@Base+0x8cf8>  // b.tcont
  41f038:	add	x9, x28, x26
  41f03c:	ldrb	w8, [x28, x19]
  41f040:	ldurb	w9, [x9, #-1]
  41f044:	add	x19, x19, #0x1
  41f048:	cmp	w8, w9
  41f04c:	b.ne	41f150 <_obstack_memory_used@@Base+0x8d1c>  // b.any
  41f050:	ldr	x8, [x20, #184]
  41f054:	ldr	x8, [x8, x26, lsl #3]
  41f058:	cbz	x8, 41f0fc <_obstack_memory_used@@Base+0x8cc8>
  41f05c:	add	x1, x8, #0x8
  41f060:	mov	w3, #0x9                   	// #9
  41f064:	mov	x0, x21
  41f068:	mov	x2, x22
  41f06c:	bl	41f56c <_obstack_memory_used@@Base+0x9138>
  41f070:	cmn	x0, #0x1
  41f074:	b.eq	41f0fc <_obstack_memory_used@@Base+0x8cc8>  // b.none
  41f078:	ldr	x8, [x25, #16]
  41f07c:	mov	x27, x0
  41f080:	cbnz	x8, 41f0a0 <_obstack_memory_used@@Base+0x8c6c>
  41f084:	ldr	x8, [x25]
  41f088:	mov	w0, #0x18                  	// #24
  41f08c:	sub	x8, x26, x8
  41f090:	add	x1, x8, #0x1
  41f094:	bl	4025d0 <calloc@plt>
  41f098:	str	x0, [x25, #16]
  41f09c:	cbz	x0, 41f118 <_obstack_memory_used@@Base+0x8ce4>
  41f0a0:	ldp	x2, x1, [x25, #8]
  41f0a4:	ldr	x3, [x25]
  41f0a8:	mov	w6, #0x9                   	// #9
  41f0ac:	mov	x0, x20
  41f0b0:	mov	x4, x27
  41f0b4:	mov	x5, x26
  41f0b8:	bl	41f5dc <_obstack_memory_used@@Base+0x91a8>
  41f0bc:	cmp	w0, #0x1
  41f0c0:	b.eq	41f0fc <_obstack_memory_used@@Base+0x8cc8>  // b.none
  41f0c4:	cbnz	w0, 41f164 <_obstack_memory_used@@Base+0x8d30>
  41f0c8:	mov	x0, x25
  41f0cc:	mov	x1, x27
  41f0d0:	mov	x2, x26
  41f0d4:	bl	41f928 <_obstack_memory_used@@Base+0x94f4>
  41f0d8:	cbz	x0, 41f118 <_obstack_memory_used@@Base+0x8ce4>
  41f0dc:	ldp	x3, x4, [x29, #-16]
  41f0e0:	mov	x2, x0
  41f0e4:	mov	x0, x20
  41f0e8:	mov	x1, x25
  41f0ec:	bl	41f4dc <_obstack_memory_used@@Base+0x90a8>
  41f0f0:	ldr	x28, [x20, #8]
  41f0f4:	cmp	w0, #0x1
  41f0f8:	b.ne	41f108 <_obstack_memory_used@@Base+0x8cd4>  // b.any
  41f0fc:	mov	w8, #0xc                   	// #12
  41f100:	cbnz	w8, 41f158 <_obstack_memory_used@@Base+0x8d24>
  41f104:	b	41f010 <_obstack_memory_used@@Base+0x8bdc>
  41f108:	cbnz	w0, 41f164 <_obstack_memory_used@@Base+0x8d30>
  41f10c:	mov	w8, wzr
  41f110:	cbnz	w8, 41f158 <_obstack_memory_used@@Base+0x8d24>
  41f114:	b	41f010 <_obstack_memory_used@@Base+0x8bdc>
  41f118:	mov	w8, #0xc                   	// #12
  41f11c:	str	w8, [sp, #12]
  41f120:	mov	w8, #0x1                   	// #1
  41f124:	cbnz	w8, 41f158 <_obstack_memory_used@@Base+0x8d24>
  41f128:	b	41f010 <_obstack_memory_used@@Base+0x8bdc>
  41f12c:	ldr	x8, [x20, #88]
  41f130:	cmp	x19, x8
  41f134:	b.ge	41f150 <_obstack_memory_used@@Base+0x8d1c>  // b.tcont
  41f138:	add	w1, w19, #0x1
  41f13c:	mov	x0, x20
  41f140:	bl	41ea04 <_obstack_memory_used@@Base+0x85d0>
  41f144:	cbnz	w0, 41f164 <_obstack_memory_used@@Base+0x8d30>
  41f148:	ldr	x28, [x20, #8]
  41f14c:	b	41f038 <_obstack_memory_used@@Base+0x8c04>
  41f150:	mov	w8, #0xa                   	// #10
  41f154:	cbz	w8, 41f010 <_obstack_memory_used@@Base+0x8bdc>
  41f158:	cmp	w8, #0xc
  41f15c:	b.eq	41f010 <_obstack_memory_used@@Base+0x8bdc>  // b.none
  41f160:	b	41f174 <_obstack_memory_used@@Base+0x8d40>
  41f164:	mov	w8, #0x1                   	// #1
  41f168:	str	w0, [sp, #12]
  41f16c:	cbnz	w8, 41f158 <_obstack_memory_used@@Base+0x8d24>
  41f170:	b	41f010 <_obstack_memory_used@@Base+0x8bdc>
  41f174:	cmp	w8, #0xa
  41f178:	b.ne	41f180 <_obstack_memory_used@@Base+0x8d4c>  // b.any
  41f17c:	mov	w8, wzr
  41f180:	cmp	w8, #0x6
  41f184:	b.eq	41ee90 <_obstack_memory_used@@Base+0x8a5c>  // b.none
  41f188:	cbz	w8, 41ee90 <_obstack_memory_used@@Base+0x8a5c>
  41f18c:	ldr	w0, [sp, #12]
  41f190:	b	41f198 <_obstack_memory_used@@Base+0x8d64>
  41f194:	mov	w0, wzr
  41f198:	ldp	x20, x19, [sp, #128]
  41f19c:	ldp	x22, x21, [sp, #112]
  41f1a0:	ldp	x24, x23, [sp, #96]
  41f1a4:	ldp	x26, x25, [sp, #80]
  41f1a8:	ldp	x28, x27, [sp, #64]
  41f1ac:	ldp	x29, x30, [sp, #48]
  41f1b0:	add	sp, sp, #0x90
  41f1b4:	ret
  41f1b8:	stp	x29, x30, [sp, #-64]!
  41f1bc:	stp	x20, x19, [sp, #48]
  41f1c0:	mov	x20, x2
  41f1c4:	mov	x19, x0
  41f1c8:	stp	x24, x23, [sp, #16]
  41f1cc:	stp	x22, x21, [sp, #32]
  41f1d0:	mov	x29, sp
  41f1d4:	cbz	x1, 41f2e8 <_obstack_memory_used@@Base+0x8eb4>
  41f1d8:	ldr	x8, [x1, #8]
  41f1dc:	mov	x21, x1
  41f1e0:	cbz	x20, 41f2d0 <_obstack_memory_used@@Base+0x8e9c>
  41f1e4:	cmp	x8, #0x1
  41f1e8:	b.lt	41f2d0 <_obstack_memory_used@@Base+0x8e9c>  // b.tstop
  41f1ec:	ldr	x9, [x20, #8]
  41f1f0:	cmp	x9, #0x1
  41f1f4:	b.lt	41f2d0 <_obstack_memory_used@@Base+0x8e9c>  // b.tstop
  41f1f8:	add	x8, x9, x8
  41f1fc:	lsl	x0, x8, #3
  41f200:	str	x8, [x19]
  41f204:	bl	4024e0 <malloc@plt>
  41f208:	str	x0, [x19, #16]
  41f20c:	cbz	x0, 41f3b0 <_obstack_memory_used@@Base+0x8f7c>
  41f210:	ldr	x8, [x21, #8]
  41f214:	cmp	x8, #0x0
  41f218:	cset	w9, gt
  41f21c:	cmp	x8, #0x1
  41f220:	b.lt	41f318 <_obstack_memory_used@@Base+0x8ee4>  // b.tstop
  41f224:	ldr	x10, [x20, #8]
  41f228:	cmp	x10, #0x1
  41f22c:	b.lt	41f324 <_obstack_memory_used@@Base+0x8ef0>  // b.tstop
  41f230:	mov	x24, xzr
  41f234:	mov	x13, xzr
  41f238:	mov	x23, xzr
  41f23c:	mov	x22, x13
  41f240:	mov	x10, x23
  41f244:	ldr	x8, [x21, #16]
  41f248:	ldr	x9, [x20, #16]
  41f24c:	ldr	x12, [x8, x24, lsl #3]
  41f250:	ldr	x11, [x9, x22, lsl #3]
  41f254:	cmp	x12, x11
  41f258:	b.le	41f290 <_obstack_memory_used@@Base+0x8e5c>
  41f25c:	ldr	x8, [x19, #16]
  41f260:	add	x22, x22, #0x1
  41f264:	add	x23, x10, #0x1
  41f268:	str	x11, [x8, x10, lsl #3]
  41f26c:	ldr	x8, [x21, #8]
  41f270:	cmp	x8, x24
  41f274:	cset	w9, gt
  41f278:	b.le	41f364 <_obstack_memory_used@@Base+0x8f30>
  41f27c:	ldr	x10, [x20, #8]
  41f280:	cmp	x22, x10
  41f284:	mov	x10, x23
  41f288:	b.lt	41f244 <_obstack_memory_used@@Base+0x8e10>  // b.tstop
  41f28c:	b	41f330 <_obstack_memory_used@@Base+0x8efc>
  41f290:	ldr	x8, [x19, #16]
  41f294:	add	x24, x24, #0x1
  41f298:	cinc	x13, x22, eq  // eq = none
  41f29c:	add	x23, x10, #0x1
  41f2a0:	str	x12, [x8, x10, lsl #3]
  41f2a4:	ldr	x8, [x21, #8]
  41f2a8:	cmp	x8, x24
  41f2ac:	cset	w9, gt
  41f2b0:	b.le	41f35c <_obstack_memory_used@@Base+0x8f28>
  41f2b4:	ldr	x14, [x20, #8]
  41f2b8:	cmp	x13, x14
  41f2bc:	b.lt	41f23c <_obstack_memory_used@@Base+0x8e08>  // b.tstop
  41f2c0:	cmp	x12, x11
  41f2c4:	cinc	x22, x22, eq  // eq = none
  41f2c8:	add	x23, x10, #0x1
  41f2cc:	b	41f330 <_obstack_memory_used@@Base+0x8efc>
  41f2d0:	cmp	x8, #0x1
  41f2d4:	b.lt	41f2e8 <_obstack_memory_used@@Base+0x8eb4>  // b.tstop
  41f2d8:	mov	x0, x19
  41f2dc:	mov	x1, x21
  41f2e0:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  41f2e4:	b	41f39c <_obstack_memory_used@@Base+0x8f68>
  41f2e8:	cbz	x20, 41f308 <_obstack_memory_used@@Base+0x8ed4>
  41f2ec:	ldr	x8, [x20, #8]
  41f2f0:	cmp	x8, #0x1
  41f2f4:	b.lt	41f308 <_obstack_memory_used@@Base+0x8ed4>  // b.tstop
  41f2f8:	mov	x0, x19
  41f2fc:	mov	x1, x20
  41f300:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  41f304:	b	41f39c <_obstack_memory_used@@Base+0x8f68>
  41f308:	mov	w0, wzr
  41f30c:	stp	xzr, xzr, [x19]
  41f310:	str	xzr, [x19, #16]
  41f314:	b	41f39c <_obstack_memory_used@@Base+0x8f68>
  41f318:	mov	x22, xzr
  41f31c:	mov	x23, xzr
  41f320:	b	41f364 <_obstack_memory_used@@Base+0x8f30>
  41f324:	mov	x24, xzr
  41f328:	mov	x23, xzr
  41f32c:	mov	x22, xzr
  41f330:	cbz	w9, 41f364 <_obstack_memory_used@@Base+0x8f30>
  41f334:	ldr	x9, [x19, #16]
  41f338:	ldr	x10, [x21, #16]
  41f33c:	sub	x8, x8, x24
  41f340:	lsl	x2, x8, #3
  41f344:	add	x0, x9, x23, lsl #3
  41f348:	add	x1, x10, x24, lsl #3
  41f34c:	bl	402320 <memcpy@plt>
  41f350:	ldr	x8, [x21, #8]
  41f354:	sub	x9, x23, x24
  41f358:	b	41f390 <_obstack_memory_used@@Base+0x8f5c>
  41f35c:	cmp	x12, x11
  41f360:	cinc	x22, x22, eq  // eq = none
  41f364:	ldr	x8, [x20, #8]
  41f368:	subs	x8, x8, x22
  41f36c:	b.le	41f394 <_obstack_memory_used@@Base+0x8f60>
  41f370:	ldr	x9, [x19, #16]
  41f374:	ldr	x10, [x20, #16]
  41f378:	lsl	x2, x8, #3
  41f37c:	add	x0, x9, x23, lsl #3
  41f380:	add	x1, x10, x22, lsl #3
  41f384:	bl	402320 <memcpy@plt>
  41f388:	ldr	x8, [x20, #8]
  41f38c:	sub	x9, x23, x22
  41f390:	add	x23, x9, x8
  41f394:	mov	w0, wzr
  41f398:	str	x23, [x19, #8]
  41f39c:	ldp	x20, x19, [sp, #48]
  41f3a0:	ldp	x22, x21, [sp, #32]
  41f3a4:	ldp	x24, x23, [sp, #16]
  41f3a8:	ldp	x29, x30, [sp], #64
  41f3ac:	ret
  41f3b0:	mov	w0, #0xc                   	// #12
  41f3b4:	b	41f39c <_obstack_memory_used@@Base+0x8f68>
  41f3b8:	ldr	x9, [x0, #200]
  41f3bc:	mov	x8, x0
  41f3c0:	cmp	x9, #0x1
  41f3c4:	b.lt	41f410 <_obstack_memory_used@@Base+0x8fdc>  // b.tstop
  41f3c8:	ldr	x10, [x8, #216]
  41f3cc:	mov	x0, xzr
  41f3d0:	mov	w11, #0x28                  	// #40
  41f3d4:	mov	x12, x9
  41f3d8:	add	x13, x0, x12
  41f3dc:	cmp	x13, #0x0
  41f3e0:	cinc	x13, x13, lt  // lt = tstop
  41f3e4:	asr	x13, x13, #1
  41f3e8:	madd	x14, x13, x11, x10
  41f3ec:	ldr	x14, [x14, #8]
  41f3f0:	cmp	x14, x1
  41f3f4:	csel	x12, x12, x13, lt  // lt = tstop
  41f3f8:	csinc	x0, x0, x13, ge  // ge = tcont
  41f3fc:	cmp	x0, x12
  41f400:	b.lt	41f3d8 <_obstack_memory_used@@Base+0x8fa4>  // b.tstop
  41f404:	cmp	x0, x9
  41f408:	b.lt	41f41c <_obstack_memory_used@@Base+0x8fe8>  // b.tstop
  41f40c:	b	41f434 <_obstack_memory_used@@Base+0x9000>
  41f410:	mov	x0, xzr
  41f414:	cmp	x0, x9
  41f418:	b.ge	41f434 <_obstack_memory_used@@Base+0x9000>  // b.tcont
  41f41c:	ldr	x8, [x8, #216]
  41f420:	mov	w9, #0x28                  	// #40
  41f424:	madd	x8, x0, x9, x8
  41f428:	ldr	x8, [x8, #8]
  41f42c:	cmp	x8, x1
  41f430:	b.eq	41f438 <_obstack_memory_used@@Base+0x9004>  // b.none
  41f434:	mov	x0, #0xffffffffffffffff    	// #-1
  41f438:	ret
  41f43c:	stp	x29, x30, [sp, #-48]!
  41f440:	stp	x20, x19, [sp, #32]
  41f444:	ldr	x8, [x0, #64]
  41f448:	str	x21, [sp, #16]
  41f44c:	ldr	x21, [x0, #192]
  41f450:	mov	x19, x0
  41f454:	mov	x20, x1
  41f458:	cmp	x8, x1
  41f45c:	mov	x29, sp
  41f460:	b.gt	41f470 <_obstack_memory_used@@Base+0x903c>
  41f464:	ldr	x9, [x19, #88]
  41f468:	cmp	x8, x9
  41f46c:	b.lt	41f488 <_obstack_memory_used@@Base+0x9054>  // b.tstop
  41f470:	ldr	x8, [x19, #48]
  41f474:	cmp	x8, x20
  41f478:	b.gt	41f498 <_obstack_memory_used@@Base+0x9064>
  41f47c:	ldr	x9, [x19, #88]
  41f480:	cmp	x8, x9
  41f484:	b.ge	41f498 <_obstack_memory_used@@Base+0x9064>  // b.tcont
  41f488:	add	w1, w20, #0x1
  41f48c:	mov	x0, x19
  41f490:	bl	41ea04 <_obstack_memory_used@@Base+0x85d0>
  41f494:	cbnz	w0, 41f4cc <_obstack_memory_used@@Base+0x9098>
  41f498:	cmp	x21, x20
  41f49c:	b.ge	41f4c8 <_obstack_memory_used@@Base+0x9094>  // b.tcont
  41f4a0:	ldr	x8, [x19, #184]
  41f4a4:	sub	x9, x20, x21
  41f4a8:	lsl	x2, x9, #3
  41f4ac:	mov	w1, wzr
  41f4b0:	add	x8, x8, x21, lsl #3
  41f4b4:	add	x0, x8, #0x8
  41f4b8:	bl	4025b0 <memset@plt>
  41f4bc:	mov	w0, wzr
  41f4c0:	str	x20, [x19, #192]
  41f4c4:	b	41f4cc <_obstack_memory_used@@Base+0x9098>
  41f4c8:	mov	w0, wzr
  41f4cc:	ldp	x20, x19, [sp, #32]
  41f4d0:	ldr	x21, [sp, #16]
  41f4d4:	ldp	x29, x30, [sp], #48
  41f4d8:	ret
  41f4dc:	stp	x29, x30, [sp, #-64]!
  41f4e0:	stp	x22, x21, [sp, #32]
  41f4e4:	stp	x20, x19, [sp, #48]
  41f4e8:	mov	x22, x2
  41f4ec:	str	x23, [sp, #16]
  41f4f0:	mov	x23, x3
  41f4f4:	ldr	x2, [x2]
  41f4f8:	ldr	x3, [x22, #8]
  41f4fc:	mov	x19, x4
  41f500:	mov	x21, x1
  41f504:	add	x1, x22, #0x10
  41f508:	mov	w6, #0x8                   	// #8
  41f50c:	mov	x4, x23
  41f510:	mov	x5, x19
  41f514:	mov	x29, sp
  41f518:	mov	x20, x0
  41f51c:	bl	41f5dc <_obstack_memory_used@@Base+0x91a8>
  41f520:	cbnz	w0, 41f558 <_obstack_memory_used@@Base+0x9124>
  41f524:	ldr	x3, [x21]
  41f528:	ldr	x4, [x22, #8]
  41f52c:	mov	x0, x20
  41f530:	mov	x1, x23
  41f534:	mov	x2, x19
  41f538:	bl	41f9a8 <_obstack_memory_used@@Base+0x9574>
  41f53c:	cbnz	w0, 41f558 <_obstack_memory_used@@Base+0x9124>
  41f540:	ldr	x8, [x22, #8]
  41f544:	ldr	x9, [x21]
  41f548:	mov	x0, x20
  41f54c:	add	x8, x8, x19
  41f550:	sub	x1, x8, x9
  41f554:	bl	41f43c <_obstack_memory_used@@Base+0x9008>
  41f558:	ldp	x20, x19, [sp, #48]
  41f55c:	ldp	x22, x21, [sp, #32]
  41f560:	ldr	x23, [sp, #16]
  41f564:	ldp	x29, x30, [sp], #64
  41f568:	ret
  41f56c:	ldr	x8, [x1, #8]
  41f570:	cmp	x8, #0x1
  41f574:	b.lt	41f5d4 <_obstack_memory_used@@Base+0x91a0>  // b.tstop
  41f578:	ldr	x9, [x1, #16]
  41f57c:	ldr	x10, [x0]
  41f580:	mov	x8, xzr
  41f584:	b	41f5a0 <_obstack_memory_used@@Base+0x916c>
  41f588:	mov	w12, #0x1                   	// #1
  41f58c:	tbz	w12, #0, 41f5d0 <_obstack_memory_used@@Base+0x919c>
  41f590:	ldr	x11, [x1, #8]
  41f594:	add	x8, x8, #0x1
  41f598:	cmp	x8, x11
  41f59c:	b.ge	41f5d4 <_obstack_memory_used@@Base+0x91a0>  // b.tcont
  41f5a0:	ldr	x11, [x9, x8, lsl #3]
  41f5a4:	add	x12, x10, x11, lsl #4
  41f5a8:	ldrb	w12, [x12, #8]
  41f5ac:	cmp	w12, w3
  41f5b0:	b.ne	41f588 <_obstack_memory_used@@Base+0x9154>  // b.any
  41f5b4:	lsl	x12, x11, #4
  41f5b8:	ldr	x12, [x10, x12]
  41f5bc:	cmp	x12, x2
  41f5c0:	b.ne	41f588 <_obstack_memory_used@@Base+0x9154>  // b.any
  41f5c4:	mov	w12, wzr
  41f5c8:	mov	x0, x11
  41f5cc:	tbnz	w12, #0, 41f590 <_obstack_memory_used@@Base+0x915c>
  41f5d0:	ret
  41f5d4:	mov	x0, #0xffffffffffffffff    	// #-1
  41f5d8:	ret
  41f5dc:	sub	sp, sp, #0xa0
  41f5e0:	stp	x29, x30, [sp, #64]
  41f5e4:	stp	x28, x27, [sp, #80]
  41f5e8:	stp	x26, x25, [sp, #96]
  41f5ec:	stp	x24, x23, [sp, #112]
  41f5f0:	stp	x22, x21, [sp, #128]
  41f5f4:	stp	x20, x19, [sp, #144]
  41f5f8:	ldr	x24, [x0, #152]
  41f5fc:	add	x29, sp, #0x40
  41f600:	stur	wzr, [x29, #-4]
  41f604:	ldrsw	x9, [x0, #224]
  41f608:	ldr	x8, [x24]
  41f60c:	ldr	x19, [x1, #8]
  41f610:	lsl	x10, x2, #4
  41f614:	mov	w23, w6
  41f618:	ldr	x25, [x8, x10]
  41f61c:	add	x8, x9, x5
  41f620:	mov	x20, x5
  41f624:	mov	x28, x2
  41f628:	mov	x22, x1
  41f62c:	mov	x21, x0
  41f630:	cmp	x19, x8
  41f634:	mov	x27, x3
  41f638:	str	x4, [sp, #8]
  41f63c:	b.le	41f8d0 <_obstack_memory_used@@Base+0x949c>
  41f640:	ldr	x9, [x21, #184]
  41f644:	ldr	x8, [x22]
  41f648:	ldr	x10, [x21, #72]
  41f64c:	ldr	w2, [x21, #160]
  41f650:	str	x9, [sp, #24]
  41f654:	ldr	x9, [x22, #16]
  41f658:	cmp	x8, #0x0
  41f65c:	csel	x26, x27, x8, eq  // eq = none
  41f660:	sub	x1, x26, #0x1
  41f664:	mov	x0, x21
  41f668:	str	x10, [sp, #16]
  41f66c:	str	x9, [x21, #184]
  41f670:	str	x26, [x21, #72]
  41f674:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41f678:	cmp	x26, x27
  41f67c:	mov	w19, w0
  41f680:	b.ne	41f6bc <_obstack_memory_used@@Base+0x9288>  // b.any
  41f684:	add	x0, sp, #0x20
  41f688:	mov	x1, x28
  41f68c:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  41f690:	stur	w0, [x29, #-4]
  41f694:	cbnz	w0, 41f8b0 <_obstack_memory_used@@Base+0x947c>
  41f698:	add	x1, sp, #0x20
  41f69c:	mov	x0, x24
  41f6a0:	mov	x2, x25
  41f6a4:	mov	w3, w23
  41f6a8:	bl	41fab4 <_obstack_memory_used@@Base+0x9680>
  41f6ac:	stur	w0, [x29, #-4]
  41f6b0:	cbnz	w0, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f6b4:	mov	x28, xzr
  41f6b8:	b	41f6f0 <_obstack_memory_used@@Base+0x92bc>
  41f6bc:	ldr	x8, [x21, #184]
  41f6c0:	ldr	x28, [x8, x26, lsl #3]
  41f6c4:	cbz	x28, 41f6d0 <_obstack_memory_used@@Base+0x929c>
  41f6c8:	ldrb	w8, [x28, #104]
  41f6cc:	tbnz	w8, #6, 41f6dc <_obstack_memory_used@@Base+0x92a8>
  41f6d0:	stp	xzr, xzr, [sp, #32]
  41f6d4:	str	xzr, [sp, #48]
  41f6d8:	b	41f6f0 <_obstack_memory_used@@Base+0x92bc>
  41f6dc:	add	x1, x28, #0x8
  41f6e0:	add	x0, sp, #0x20
  41f6e4:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  41f6e8:	stur	w0, [x29, #-4]
  41f6ec:	cbnz	w0, 41f8b0 <_obstack_memory_used@@Base+0x947c>
  41f6f0:	cmp	x26, x27
  41f6f4:	b.eq	41f704 <_obstack_memory_used@@Base+0x92d0>  // b.none
  41f6f8:	cbz	x28, 41f758 <_obstack_memory_used@@Base+0x9324>
  41f6fc:	ldrb	w8, [x28, #104]
  41f700:	tbz	w8, #6, 41f758 <_obstack_memory_used@@Base+0x9324>
  41f704:	ldr	x8, [sp, #40]
  41f708:	cbz	x8, 41f72c <_obstack_memory_used@@Base+0x92f8>
  41f70c:	add	x1, sp, #0x20
  41f710:	mov	x0, x21
  41f714:	mov	x2, x26
  41f718:	mov	x3, x25
  41f71c:	mov	w4, w23
  41f720:	bl	41fbe0 <_obstack_memory_used@@Base+0x97ac>
  41f724:	stur	w0, [x29, #-4]
  41f728:	cbnz	w0, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f72c:	sub	x0, x29, #0x4
  41f730:	add	x2, sp, #0x20
  41f734:	mov	x1, x24
  41f738:	mov	w3, w19
  41f73c:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41f740:	mov	x28, x0
  41f744:	cbnz	x0, 41f750 <_obstack_memory_used@@Base+0x931c>
  41f748:	ldur	w8, [x29, #-4]
  41f74c:	cbnz	w8, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f750:	ldr	x8, [x21, #184]
  41f754:	str	x28, [x8, x26, lsl #3]
  41f758:	cmp	x26, x20
  41f75c:	b.ge	41f86c <_obstack_memory_used@@Base+0x9438>  // b.tcont
  41f760:	mov	x27, xzr
  41f764:	b	41f788 <_obstack_memory_used@@Base+0x9354>
  41f768:	ldr	x8, [x21, #184]
  41f76c:	cmp	x28, #0x0
  41f770:	csinc	x27, xzr, x27, ne  // ne = any
  41f774:	cmp	x20, x19
  41f778:	add	x8, x8, x26, lsl #3
  41f77c:	mov	x26, x19
  41f780:	str	x28, [x8, #8]
  41f784:	b.eq	41f868 <_obstack_memory_used@@Base+0x9434>  // b.none
  41f788:	ldrsw	x8, [x21, #224]
  41f78c:	cmp	x27, x8
  41f790:	b.gt	41f86c <_obstack_memory_used@@Base+0x9438>
  41f794:	str	xzr, [sp, #40]
  41f798:	ldr	x8, [x21, #184]
  41f79c:	add	x8, x8, x26, lsl #3
  41f7a0:	ldr	x8, [x8, #8]
  41f7a4:	cbz	x8, 41f7bc <_obstack_memory_used@@Base+0x9388>
  41f7a8:	add	x1, x8, #0x8
  41f7ac:	add	x0, sp, #0x20
  41f7b0:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  41f7b4:	stur	w0, [x29, #-4]
  41f7b8:	cbnz	w0, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f7bc:	cbz	x28, 41f7dc <_obstack_memory_used@@Base+0x93a8>
  41f7c0:	add	x2, x28, #0x20
  41f7c4:	add	x3, sp, #0x20
  41f7c8:	mov	x0, x21
  41f7cc:	mov	x1, x26
  41f7d0:	bl	41fe54 <_obstack_memory_used@@Base+0x9a20>
  41f7d4:	stur	w0, [x29, #-4]
  41f7d8:	cbnz	w0, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f7dc:	ldr	x8, [sp, #40]
  41f7e0:	add	x19, x26, #0x1
  41f7e4:	cbz	x8, 41f824 <_obstack_memory_used@@Base+0x93f0>
  41f7e8:	add	x1, sp, #0x20
  41f7ec:	mov	x0, x24
  41f7f0:	mov	x2, x25
  41f7f4:	mov	w3, w23
  41f7f8:	bl	41fab4 <_obstack_memory_used@@Base+0x9680>
  41f7fc:	stur	w0, [x29, #-4]
  41f800:	cbnz	w0, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f804:	add	x1, sp, #0x20
  41f808:	mov	x0, x21
  41f80c:	mov	x2, x19
  41f810:	mov	x3, x25
  41f814:	mov	w4, w23
  41f818:	bl	41fbe0 <_obstack_memory_used@@Base+0x97ac>
  41f81c:	stur	w0, [x29, #-4]
  41f820:	cbnz	w0, 41f858 <_obstack_memory_used@@Base+0x9424>
  41f824:	ldr	w2, [x21, #160]
  41f828:	mov	x0, x21
  41f82c:	mov	x1, x26
  41f830:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  41f834:	mov	w3, w0
  41f838:	sub	x0, x29, #0x4
  41f83c:	add	x2, sp, #0x20
  41f840:	mov	x1, x24
  41f844:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  41f848:	mov	x28, x0
  41f84c:	cbnz	x0, 41f768 <_obstack_memory_used@@Base+0x9334>
  41f850:	ldur	w8, [x29, #-4]
  41f854:	cbz	w8, 41f768 <_obstack_memory_used@@Base+0x9334>
  41f858:	ldr	x0, [sp, #48]
  41f85c:	bl	402770 <free@plt>
  41f860:	ldur	w0, [x29, #-4]
  41f864:	b	41f8b0 <_obstack_memory_used@@Base+0x947c>
  41f868:	mov	x26, x20
  41f86c:	ldr	x0, [sp, #48]
  41f870:	bl	402770 <free@plt>
  41f874:	ldr	x8, [x21, #184]
  41f878:	ldr	x9, [sp, #24]
  41f87c:	ldr	x8, [x8, x20, lsl #3]
  41f880:	str	x26, [x22]
  41f884:	str	x9, [x21, #184]
  41f888:	ldr	x9, [sp, #16]
  41f88c:	str	x9, [x21, #72]
  41f890:	cbz	x8, 41f8ac <_obstack_memory_used@@Base+0x9478>
  41f894:	ldr	x1, [sp, #8]
  41f898:	add	x0, x8, #0x8
  41f89c:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  41f8a0:	cbz	x0, 41f8ac <_obstack_memory_used@@Base+0x9478>
  41f8a4:	mov	w0, wzr
  41f8a8:	b	41f8b0 <_obstack_memory_used@@Base+0x947c>
  41f8ac:	mov	w0, #0x1                   	// #1
  41f8b0:	ldp	x20, x19, [sp, #144]
  41f8b4:	ldp	x22, x21, [sp, #128]
  41f8b8:	ldp	x24, x23, [sp, #112]
  41f8bc:	ldp	x26, x25, [sp, #96]
  41f8c0:	ldp	x28, x27, [sp, #80]
  41f8c4:	ldp	x29, x30, [sp, #64]
  41f8c8:	add	sp, sp, #0xa0
  41f8cc:	ret
  41f8d0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41f8d4:	sub	x9, x9, x19
  41f8d8:	cmp	x9, x8
  41f8dc:	b.le	41f920 <_obstack_memory_used@@Base+0x94ec>
  41f8e0:	add	x8, x8, #0x1
  41f8e4:	add	x26, x8, x19
  41f8e8:	str	x8, [sp, #24]
  41f8ec:	lsr	x8, x26, #61
  41f8f0:	cbnz	x8, 41f920 <_obstack_memory_used@@Base+0x94ec>
  41f8f4:	ldr	x0, [x22, #16]
  41f8f8:	lsl	x1, x26, #3
  41f8fc:	bl	402610 <realloc@plt>
  41f900:	cbz	x0, 41f920 <_obstack_memory_used@@Base+0x94ec>
  41f904:	stp	x26, x0, [x22, #8]
  41f908:	ldr	x8, [sp, #24]
  41f90c:	add	x0, x0, x19, lsl #3
  41f910:	mov	w1, wzr
  41f914:	lsl	x2, x8, #3
  41f918:	bl	4025b0 <memset@plt>
  41f91c:	b	41f640 <_obstack_memory_used@@Base+0x920c>
  41f920:	mov	w0, #0xc                   	// #12
  41f924:	b	41f8b0 <_obstack_memory_used@@Base+0x947c>
  41f928:	stp	x29, x30, [sp, #-48]!
  41f92c:	stp	x22, x21, [sp, #16]
  41f930:	stp	x20, x19, [sp, #32]
  41f934:	ldp	x8, x9, [x0, #24]
  41f938:	mov	x20, x2
  41f93c:	mov	x19, x0
  41f940:	mov	x21, x1
  41f944:	cmp	x9, x8
  41f948:	mov	x29, sp
  41f94c:	b.eq	41f984 <_obstack_memory_used@@Base+0x9550>  // b.none
  41f950:	mov	w0, #0x1                   	// #1
  41f954:	mov	w1, #0x28                  	// #40
  41f958:	bl	4025d0 <calloc@plt>
  41f95c:	cbz	x0, 41f974 <_obstack_memory_used@@Base+0x9540>
  41f960:	ldp	x9, x8, [x19, #32]
  41f964:	str	x0, [x8, x9, lsl #3]
  41f968:	add	x8, x9, #0x1
  41f96c:	stp	x21, x20, [x0]
  41f970:	str	x8, [x19, #32]
  41f974:	ldp	x20, x19, [sp, #32]
  41f978:	ldp	x22, x21, [sp, #16]
  41f97c:	ldp	x29, x30, [sp], #48
  41f980:	ret
  41f984:	ldr	x0, [x19, #40]
  41f988:	mov	w22, #0x1                   	// #1
  41f98c:	bfi	x22, x8, #1, #63
  41f990:	lsl	x1, x22, #3
  41f994:	bl	402610 <realloc@plt>
  41f998:	cbz	x0, 41f974 <_obstack_memory_used@@Base+0x9540>
  41f99c:	str	x0, [x19, #40]
  41f9a0:	str	x22, [x19, #24]
  41f9a4:	b	41f950 <_obstack_memory_used@@Base+0x951c>
  41f9a8:	stp	x29, x30, [sp, #-64]!
  41f9ac:	stp	x24, x23, [sp, #16]
  41f9b0:	stp	x22, x21, [sp, #32]
  41f9b4:	stp	x20, x19, [sp, #48]
  41f9b8:	ldp	x9, x8, [x0, #200]
  41f9bc:	mov	x20, x4
  41f9c0:	mov	x21, x3
  41f9c4:	mov	x22, x2
  41f9c8:	mov	x19, x0
  41f9cc:	cmp	x9, x8
  41f9d0:	mov	x23, x1
  41f9d4:	mov	x29, sp
  41f9d8:	b.lt	41fa18 <_obstack_memory_used@@Base+0x95e4>  // b.tstop
  41f9dc:	ldr	x0, [x19, #216]
  41f9e0:	add	x8, x8, x8, lsl #2
  41f9e4:	lsl	x1, x8, #4
  41f9e8:	bl	402610 <realloc@plt>
  41f9ec:	cbz	x0, 41faa4 <_obstack_memory_used@@Base+0x9670>
  41f9f0:	ldp	x8, x24, [x19, #200]
  41f9f4:	mov	w9, #0x28                  	// #40
  41f9f8:	str	x0, [x19, #216]
  41f9fc:	mov	w1, wzr
  41fa00:	madd	x0, x8, x9, x0
  41fa04:	add	x8, x24, x24, lsl #2
  41fa08:	lsl	x2, x8, #3
  41fa0c:	bl	4025b0 <memset@plt>
  41fa10:	lsl	x8, x24, #1
  41fa14:	str	x8, [x19, #208]
  41fa18:	ldr	x8, [x19, #200]
  41fa1c:	subs	x9, x8, #0x1
  41fa20:	b.lt	41fa4c <_obstack_memory_used@@Base+0x9618>  // b.tstop
  41fa24:	ldr	x10, [x19, #216]
  41fa28:	mov	w11, #0x28                  	// #40
  41fa2c:	madd	x11, x9, x11, x10
  41fa30:	ldr	x11, [x11, #8]
  41fa34:	cmp	x11, x22
  41fa38:	b.ne	41fa4c <_obstack_memory_used@@Base+0x9618>  // b.any
  41fa3c:	mov	w11, #0x28                  	// #40
  41fa40:	madd	x9, x9, x11, x10
  41fa44:	mov	w10, #0x1                   	// #1
  41fa48:	strb	w10, [x9, #32]
  41fa4c:	ldr	x10, [x19, #216]
  41fa50:	mov	w11, #0x28                  	// #40
  41fa54:	subs	x9, x20, x21
  41fa58:	mov	w0, wzr
  41fa5c:	madd	x10, x8, x11, x10
  41fa60:	add	x8, x8, #0x1
  41fa64:	csetm	w11, eq  // eq = none
  41fa68:	stp	x23, x22, [x10]
  41fa6c:	stp	x21, x20, [x10, #16]
  41fa70:	strh	w11, [x10, #34]
  41fa74:	str	x8, [x19, #200]
  41fa78:	strb	wzr, [x10, #32]
  41fa7c:	ldrsw	x8, [x19, #224]
  41fa80:	cmp	x9, x8
  41fa84:	b.le	41fa90 <_obstack_memory_used@@Base+0x965c>
  41fa88:	mov	w0, wzr
  41fa8c:	str	w9, [x19, #224]
  41fa90:	ldp	x20, x19, [sp, #48]
  41fa94:	ldp	x22, x21, [sp, #32]
  41fa98:	ldp	x24, x23, [sp, #16]
  41fa9c:	ldp	x29, x30, [sp], #64
  41faa0:	ret
  41faa4:	ldr	x0, [x19, #216]
  41faa8:	bl	402770 <free@plt>
  41faac:	mov	w0, #0xc                   	// #12
  41fab0:	b	41fa90 <_obstack_memory_used@@Base+0x965c>
  41fab4:	sub	sp, sp, #0x80
  41fab8:	stp	x29, x30, [sp, #32]
  41fabc:	stp	x26, x25, [sp, #64]
  41fac0:	stp	x24, x23, [sp, #80]
  41fac4:	stp	x22, x21, [sp, #96]
  41fac8:	stp	x20, x19, [sp, #112]
  41facc:	mov	x19, x1
  41fad0:	ldr	x1, [x1, #8]
  41fad4:	mov	x22, x0
  41fad8:	add	x0, sp, #0x8
  41fadc:	str	x27, [sp, #48]
  41fae0:	add	x29, sp, #0x20
  41fae4:	mov	w20, w3
  41fae8:	mov	x21, x2
  41faec:	bl	41c6e8 <_obstack_memory_used@@Base+0x62b4>
  41faf0:	cbnz	w0, 41fbd8 <_obstack_memory_used@@Base+0x97a4>
  41faf4:	ldr	x8, [x19, #8]
  41faf8:	cmp	x8, #0x1
  41fafc:	b.lt	41fb98 <_obstack_memory_used@@Base+0x9764>  // b.tstop
  41fb00:	mov	x26, xzr
  41fb04:	mov	w27, #0x18                  	// #24
  41fb08:	ldr	x8, [x19, #16]
  41fb0c:	mov	x0, x22
  41fb10:	mov	x2, x21
  41fb14:	mov	w3, w20
  41fb18:	ldr	x24, [x8, x26, lsl #3]
  41fb1c:	ldr	x8, [x22, #48]
  41fb20:	madd	x25, x24, x27, x8
  41fb24:	mov	x1, x25
  41fb28:	bl	41f56c <_obstack_memory_used@@Base+0x9138>
  41fb2c:	cmn	x0, #0x1
  41fb30:	b.eq	41fb6c <_obstack_memory_used@@Base+0x9738>  // b.none
  41fb34:	add	x1, sp, #0x8
  41fb38:	mov	x0, x22
  41fb3c:	mov	x2, x24
  41fb40:	mov	x3, x21
  41fb44:	mov	w4, w20
  41fb48:	bl	420030 <_obstack_memory_used@@Base+0x9bfc>
  41fb4c:	cbnz	w0, 41fb7c <_obstack_memory_used@@Base+0x9748>
  41fb50:	mov	w8, #0x1                   	// #1
  41fb54:	tbz	w8, #0, 41fbb4 <_obstack_memory_used@@Base+0x9780>
  41fb58:	ldr	x8, [x19, #8]
  41fb5c:	add	x26, x26, #0x1
  41fb60:	cmp	x26, x8
  41fb64:	b.lt	41fb08 <_obstack_memory_used@@Base+0x96d4>  // b.tstop
  41fb68:	b	41fb98 <_obstack_memory_used@@Base+0x9764>
  41fb6c:	add	x0, sp, #0x8
  41fb70:	mov	x1, x25
  41fb74:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  41fb78:	cbz	w0, 41fb50 <_obstack_memory_used@@Base+0x971c>
  41fb7c:	mov	w24, w0
  41fb80:	ldr	x0, [sp, #24]
  41fb84:	bl	402770 <free@plt>
  41fb88:	mov	w23, w24
  41fb8c:	mov	w8, wzr
  41fb90:	tbnz	wzr, #0, 41fb58 <_obstack_memory_used@@Base+0x9724>
  41fb94:	b	41fbb4 <_obstack_memory_used@@Base+0x9780>
  41fb98:	ldr	x0, [x19, #16]
  41fb9c:	bl	402770 <free@plt>
  41fba0:	ldr	x8, [sp, #24]
  41fba4:	ldur	q0, [sp, #8]
  41fba8:	mov	w23, wzr
  41fbac:	str	x8, [x19, #16]
  41fbb0:	str	q0, [x19]
  41fbb4:	mov	w0, w23
  41fbb8:	ldp	x20, x19, [sp, #112]
  41fbbc:	ldp	x22, x21, [sp, #96]
  41fbc0:	ldp	x24, x23, [sp, #80]
  41fbc4:	ldp	x26, x25, [sp, #64]
  41fbc8:	ldr	x27, [sp, #48]
  41fbcc:	ldp	x29, x30, [sp, #32]
  41fbd0:	add	sp, sp, #0x80
  41fbd4:	ret
  41fbd8:	mov	w23, w0
  41fbdc:	b	41fbb4 <_obstack_memory_used@@Base+0x9780>
  41fbe0:	sub	sp, sp, #0x90
  41fbe4:	stp	x29, x30, [sp, #48]
  41fbe8:	stp	x28, x27, [sp, #64]
  41fbec:	stp	x26, x25, [sp, #80]
  41fbf0:	stp	x24, x23, [sp, #96]
  41fbf4:	stp	x22, x21, [sp, #112]
  41fbf8:	stp	x20, x19, [sp, #128]
  41fbfc:	ldr	x23, [x0, #152]
  41fc00:	mov	x24, x1
  41fc04:	mov	x1, x2
  41fc08:	add	x29, sp, #0x30
  41fc0c:	str	w4, [sp, #12]
  41fc10:	str	x3, [sp]
  41fc14:	mov	x21, x2
  41fc18:	mov	x22, x0
  41fc1c:	bl	41f3b8 <_obstack_memory_used@@Base+0x8f84>
  41fc20:	cmn	x0, #0x1
  41fc24:	b.eq	41fe2c <_obstack_memory_used@@Base+0x99f8>  // b.none
  41fc28:	mov	x25, x0
  41fc2c:	ldr	x8, [x22, #216]
  41fc30:	mov	w9, #0x28                  	// #40
  41fc34:	madd	x20, x25, x9, x8
  41fc38:	b	41fc48 <_obstack_memory_used@@Base+0x9814>
  41fc3c:	ldrb	w8, [x20, #32]
  41fc40:	add	x20, x20, #0x28
  41fc44:	cbz	w8, 41fe2c <_obstack_memory_used@@Base+0x99f8>
  41fc48:	ldr	x1, [x20]
  41fc4c:	mov	x0, x24
  41fc50:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  41fc54:	cbz	x0, 41fc94 <_obstack_memory_used@@Base+0x9860>
  41fc58:	ldp	x9, x8, [x20, #16]
  41fc5c:	add	x8, x8, x21
  41fc60:	sub	x19, x8, x9
  41fc64:	cmp	x19, x21
  41fc68:	b.ne	41fc9c <_obstack_memory_used@@Base+0x9868>  // b.any
  41fc6c:	ldr	x8, [x23, #40]
  41fc70:	ldr	x9, [x20]
  41fc74:	mov	w10, #0x18                  	// #24
  41fc78:	mov	x0, x24
  41fc7c:	madd	x8, x9, x10, x8
  41fc80:	ldr	x8, [x8, #16]
  41fc84:	ldr	x27, [x8]
  41fc88:	mov	x1, x27
  41fc8c:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  41fc90:	cbz	x0, 41fcd4 <_obstack_memory_used@@Base+0x98a0>
  41fc94:	mov	w8, #0x4                   	// #4
  41fc98:	b	41fd90 <_obstack_memory_used@@Base+0x995c>
  41fc9c:	ldr	x9, [x23, #24]
  41fca0:	ldr	x8, [x22, #184]
  41fca4:	ldr	x10, [x20]
  41fca8:	ldr	x8, [x8, x19, lsl #3]
  41fcac:	ldr	x27, [x9, x10, lsl #3]
  41fcb0:	cbz	x8, 41fd30 <_obstack_memory_used@@Base+0x98fc>
  41fcb4:	add	x28, x8, #0x8
  41fcb8:	mov	x0, x28
  41fcbc:	mov	x1, x27
  41fcc0:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  41fcc4:	cbz	x0, 41fda0 <_obstack_memory_used@@Base+0x996c>
  41fcc8:	mov	w8, #0x4                   	// #4
  41fccc:	cbnz	w8, 41fd90 <_obstack_memory_used@@Base+0x995c>
  41fcd0:	b	41fd44 <_obstack_memory_used@@Base+0x9910>
  41fcd4:	add	x0, sp, #0x10
  41fcd8:	mov	x1, x27
  41fcdc:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  41fce0:	ldr	x2, [sp]
  41fce4:	ldr	w3, [sp, #12]
  41fce8:	mov	w27, w0
  41fcec:	stur	w0, [x29, #-4]
  41fcf0:	add	x1, sp, #0x10
  41fcf4:	mov	x0, x23
  41fcf8:	bl	41fab4 <_obstack_memory_used@@Base+0x9680>
  41fcfc:	mov	w28, w0
  41fd00:	add	x1, sp, #0x10
  41fd04:	mov	x0, x24
  41fd08:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  41fd0c:	ldr	x8, [sp, #32]
  41fd10:	mov	w19, w0
  41fd14:	mov	x0, x8
  41fd18:	bl	402770 <free@plt>
  41fd1c:	orr	w8, w28, w27
  41fd20:	orr	w8, w8, w19
  41fd24:	cbnz	w8, 41fdd4 <_obstack_memory_used@@Base+0x99a0>
  41fd28:	mov	w8, #0x2                   	// #2
  41fd2c:	b	41fd90 <_obstack_memory_used@@Base+0x995c>
  41fd30:	add	x0, sp, #0x10
  41fd34:	mov	x1, x27
  41fd38:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  41fd3c:	stur	w0, [x29, #-4]
  41fd40:	cbnz	w0, 41fdf0 <_obstack_memory_used@@Base+0x99bc>
  41fd44:	sub	x0, x29, #0x4
  41fd48:	add	x2, sp, #0x10
  41fd4c:	mov	x1, x23
  41fd50:	bl	420160 <_obstack_memory_used@@Base+0x9d2c>
  41fd54:	ldr	x8, [x22, #184]
  41fd58:	lsl	x19, x19, #3
  41fd5c:	str	x0, [x8, x19]
  41fd60:	ldr	x0, [sp, #32]
  41fd64:	bl	402770 <free@plt>
  41fd68:	ldr	x8, [x22, #184]
  41fd6c:	ldur	w9, [x29, #-4]
  41fd70:	ldr	x8, [x8, x19]
  41fd74:	cmp	x8, #0x0
  41fd78:	cset	w10, eq  // eq = none
  41fd7c:	cmp	w9, #0x0
  41fd80:	cset	w11, ne  // ne = any
  41fd84:	tst	w10, w11
  41fd88:	and	w8, w10, w11
  41fd8c:	csel	w26, w9, w26, ne  // ne = any
  41fd90:	cbz	w8, 41fc3c <_obstack_memory_used@@Base+0x9808>
  41fd94:	cmp	w8, #0x4
  41fd98:	b.eq	41fc3c <_obstack_memory_used@@Base+0x9808>  // b.none
  41fd9c:	b	41fe20 <_obstack_memory_used@@Base+0x99ec>
  41fda0:	add	x0, sp, #0x10
  41fda4:	mov	x1, x28
  41fda8:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  41fdac:	mov	w28, w0
  41fdb0:	stur	w0, [x29, #-4]
  41fdb4:	add	x0, sp, #0x10
  41fdb8:	mov	x1, x27
  41fdbc:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41fdc0:	cbnz	w28, 41fdfc <_obstack_memory_used@@Base+0x99c8>
  41fdc4:	tbz	w0, #0, 41fdfc <_obstack_memory_used@@Base+0x99c8>
  41fdc8:	mov	w8, wzr
  41fdcc:	cbnz	w8, 41fd90 <_obstack_memory_used@@Base+0x995c>
  41fdd0:	b	41fd44 <_obstack_memory_used@@Base+0x9910>
  41fdd4:	cmp	w28, #0x0
  41fdd8:	csel	w8, w19, w28, eq  // eq = none
  41fddc:	cmp	w27, #0x0
  41fde0:	csel	w26, w8, w27, eq  // eq = none
  41fde4:	stur	w26, [x29, #-4]
  41fde8:	mov	w8, #0x1                   	// #1
  41fdec:	b	41fd90 <_obstack_memory_used@@Base+0x995c>
  41fdf0:	mov	w8, #0x1                   	// #1
  41fdf4:	mov	w26, w0
  41fdf8:	b	41fd90 <_obstack_memory_used@@Base+0x995c>
  41fdfc:	ldr	x0, [sp, #32]
  41fe00:	bl	402770 <free@plt>
  41fe04:	cmp	w28, #0x0
  41fe08:	mov	w8, #0xc                   	// #12
  41fe0c:	csel	w26, w8, w28, eq  // eq = none
  41fe10:	mov	w8, #0x1                   	// #1
  41fe14:	stur	w26, [x29, #-4]
  41fe18:	cbnz	w8, 41fd90 <_obstack_memory_used@@Base+0x995c>
  41fe1c:	b	41fd44 <_obstack_memory_used@@Base+0x9910>
  41fe20:	cmp	w8, #0x2
  41fe24:	b.eq	41fc2c <_obstack_memory_used@@Base+0x97f8>  // b.none
  41fe28:	b	41fe30 <_obstack_memory_used@@Base+0x99fc>
  41fe2c:	mov	w26, wzr
  41fe30:	mov	w0, w26
  41fe34:	ldp	x20, x19, [sp, #128]
  41fe38:	ldp	x22, x21, [sp, #112]
  41fe3c:	ldp	x24, x23, [sp, #96]
  41fe40:	ldp	x26, x25, [sp, #80]
  41fe44:	ldp	x28, x27, [sp, #64]
  41fe48:	ldp	x29, x30, [sp, #48]
  41fe4c:	add	sp, sp, #0x90
  41fe50:	ret
  41fe54:	sub	sp, sp, #0xa0
  41fe58:	stp	x29, x30, [sp, #64]
  41fe5c:	stp	x28, x27, [sp, #80]
  41fe60:	stp	x26, x25, [sp, #96]
  41fe64:	stp	x24, x23, [sp, #112]
  41fe68:	stp	x22, x21, [sp, #128]
  41fe6c:	stp	x20, x19, [sp, #144]
  41fe70:	add	x29, sp, #0x40
  41fe74:	ldr	x22, [x0, #152]
  41fe78:	stur	wzr, [x29, #-4]
  41fe7c:	stp	xzr, xzr, [sp, #32]
  41fe80:	str	xzr, [sp, #48]
  41fe84:	ldr	x8, [x2, #8]
  41fe88:	cmp	x8, #0x1
  41fe8c:	b.lt	41fffc <_obstack_memory_used@@Base+0x9bc8>  // b.tstop
  41fe90:	add	x8, sp, #0x20
  41fe94:	add	x8, x8, #0x10
  41fe98:	mov	x23, x3
  41fe9c:	mov	x20, x2
  41fea0:	mov	x21, x0
  41fea4:	mov	x27, x1
  41fea8:	mov	x24, xzr
  41feac:	stp	x8, x1, [sp, #16]
  41feb0:	ldr	x8, [x20, #16]
  41feb4:	ldr	x25, [x8, x24, lsl #3]
  41feb8:	ldr	x8, [x22]
  41febc:	add	x8, x8, x25, lsl #4
  41fec0:	ldrb	w8, [x8, #10]
  41fec4:	tbnz	w8, #4, 41fed0 <_obstack_memory_used@@Base+0x9a9c>
  41fec8:	mov	w26, wzr
  41fecc:	b	41ff6c <_obstack_memory_used@@Base+0x9b38>
  41fed0:	mov	x0, x22
  41fed4:	mov	x1, x25
  41fed8:	mov	x2, x21
  41fedc:	mov	x3, x27
  41fee0:	bl	420394 <_obstack_memory_used@@Base+0x9f60>
  41fee4:	mov	w26, w0
  41fee8:	cmp	w0, #0x2
  41feec:	b.lt	41ff6c <_obstack_memory_used@@Base+0x9b38>  // b.tstop
  41fef0:	ldr	x8, [x21, #184]
  41fef4:	ldr	x9, [x22, #24]
  41fef8:	add	x19, x27, w26, sxtw
  41fefc:	ldr	x8, [x8, x19, lsl #3]
  41ff00:	ldr	x28, [x9, x25, lsl #3]
  41ff04:	str	xzr, [sp, #40]
  41ff08:	cbz	x8, 41ff20 <_obstack_memory_used@@Base+0x9aec>
  41ff0c:	add	x1, x8, #0x8
  41ff10:	add	x0, sp, #0x20
  41ff14:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  41ff18:	stur	w0, [x29, #-4]
  41ff1c:	cbnz	w0, 41ffd8 <_obstack_memory_used@@Base+0x9ba4>
  41ff20:	add	x0, sp, #0x20
  41ff24:	mov	x1, x28
  41ff28:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41ff2c:	tbz	w0, #0, 41ffd0 <_obstack_memory_used@@Base+0x9b9c>
  41ff30:	sub	x0, x29, #0x4
  41ff34:	add	x2, sp, #0x20
  41ff38:	mov	x1, x22
  41ff3c:	bl	420160 <_obstack_memory_used@@Base+0x9d2c>
  41ff40:	ldr	x8, [x21, #184]
  41ff44:	lsl	x9, x19, #3
  41ff48:	str	x0, [x8, x9]
  41ff4c:	ldr	x8, [x21, #184]
  41ff50:	ldr	x9, [x8, x9]
  41ff54:	mov	w8, wzr
  41ff58:	cbnz	x9, 41ff64 <_obstack_memory_used@@Base+0x9b30>
  41ff5c:	ldur	w27, [x29, #-4]
  41ff60:	cbnz	w27, 41ffdc <_obstack_memory_used@@Base+0x9ba8>
  41ff64:	ldr	x27, [sp, #24]
  41ff68:	cbnz	w8, 41ffa0 <_obstack_memory_used@@Base+0x9b6c>
  41ff6c:	cbnz	w26, 41ff88 <_obstack_memory_used@@Base+0x9b54>
  41ff70:	ldr	x8, [x22]
  41ff74:	mov	x0, x21
  41ff78:	mov	x2, x27
  41ff7c:	add	x1, x8, x25, lsl #4
  41ff80:	bl	420674 <_obstack_memory_used@@Base+0xa240>
  41ff84:	tbz	w0, #0, 41ff9c <_obstack_memory_used@@Base+0x9b68>
  41ff88:	ldr	x8, [x22, #24]
  41ff8c:	mov	x0, x23
  41ff90:	ldr	x1, [x8, x25, lsl #3]
  41ff94:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  41ff98:	tbz	w0, #0, 41ffb8 <_obstack_memory_used@@Base+0x9b84>
  41ff9c:	mov	w8, wzr
  41ffa0:	cbnz	w8, 42000c <_obstack_memory_used@@Base+0x9bd8>
  41ffa4:	ldr	x8, [x20, #8]
  41ffa8:	add	x24, x24, #0x1
  41ffac:	cmp	x24, x8
  41ffb0:	b.lt	41feb0 <_obstack_memory_used@@Base+0x9a7c>  // b.tstop
  41ffb4:	b	41fffc <_obstack_memory_used@@Base+0x9bc8>
  41ffb8:	ldr	x0, [sp, #48]
  41ffbc:	bl	402770 <free@plt>
  41ffc0:	mov	w8, #0x1                   	// #1
  41ffc4:	mov	w9, #0xc                   	// #12
  41ffc8:	str	w9, [sp, #12]
  41ffcc:	b	41ffa0 <_obstack_memory_used@@Base+0x9b6c>
  41ffd0:	mov	w27, #0xc                   	// #12
  41ffd4:	b	41ffdc <_obstack_memory_used@@Base+0x9ba8>
  41ffd8:	mov	w27, w0
  41ffdc:	ldr	x8, [sp, #16]
  41ffe0:	ldr	x0, [x8]
  41ffe4:	bl	402770 <free@plt>
  41ffe8:	mov	w8, #0x1                   	// #1
  41ffec:	str	w27, [sp, #12]
  41fff0:	ldr	x27, [sp, #24]
  41fff4:	cbnz	w8, 41ffa0 <_obstack_memory_used@@Base+0x9b6c>
  41fff8:	b	41ff6c <_obstack_memory_used@@Base+0x9b38>
  41fffc:	ldr	x0, [sp, #48]
  420000:	bl	402770 <free@plt>
  420004:	mov	w0, wzr
  420008:	b	420010 <_obstack_memory_used@@Base+0x9bdc>
  42000c:	ldr	w0, [sp, #12]
  420010:	ldp	x20, x19, [sp, #144]
  420014:	ldp	x22, x21, [sp, #128]
  420018:	ldp	x24, x23, [sp, #112]
  42001c:	ldp	x26, x25, [sp, #96]
  420020:	ldp	x28, x27, [sp, #80]
  420024:	ldp	x29, x30, [sp, #64]
  420028:	add	sp, sp, #0xa0
  42002c:	ret
  420030:	stp	x29, x30, [sp, #-80]!
  420034:	str	x25, [sp, #16]
  420038:	stp	x24, x23, [sp, #32]
  42003c:	stp	x22, x21, [sp, #48]
  420040:	stp	x20, x19, [sp, #64]
  420044:	mov	w20, w4
  420048:	mov	x21, x3
  42004c:	mov	x23, x2
  420050:	mov	x22, x1
  420054:	mov	x24, x0
  420058:	mov	w25, #0x18                  	// #24
  42005c:	mov	x29, sp
  420060:	b	42006c <_obstack_memory_used@@Base+0x9c38>
  420064:	mov	w8, #0x2                   	// #2
  420068:	cbnz	w8, 420138 <_obstack_memory_used@@Base+0x9d04>
  42006c:	mov	x0, x22
  420070:	mov	x1, x23
  420074:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  420078:	cbnz	x0, 420140 <_obstack_memory_used@@Base+0x9d0c>
  42007c:	ldr	x8, [x24]
  420080:	add	x9, x8, x23, lsl #4
  420084:	ldrb	w9, [x9, #8]
  420088:	cmp	w9, w20
  42008c:	b.ne	4200bc <_obstack_memory_used@@Base+0x9c88>  // b.any
  420090:	lsl	x9, x23, #4
  420094:	ldr	x8, [x8, x9]
  420098:	cmp	x8, x21
  42009c:	b.ne	4200bc <_obstack_memory_used@@Base+0x9c88>  // b.any
  4200a0:	cmp	w20, #0x9
  4200a4:	b.ne	420064 <_obstack_memory_used@@Base+0x9c30>  // b.any
  4200a8:	mov	x0, x22
  4200ac:	mov	x1, x23
  4200b0:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  4200b4:	tbnz	w0, #0, 420064 <_obstack_memory_used@@Base+0x9c30>
  4200b8:	b	42012c <_obstack_memory_used@@Base+0x9cf8>
  4200bc:	mov	x0, x22
  4200c0:	mov	x1, x23
  4200c4:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  4200c8:	tbz	w0, #0, 42012c <_obstack_memory_used@@Base+0x9cf8>
  4200cc:	ldr	x8, [x24, #40]
  4200d0:	madd	x9, x23, x25, x8
  4200d4:	ldr	x9, [x9, #8]
  4200d8:	cbz	x9, 420064 <_obstack_memory_used@@Base+0x9c30>
  4200dc:	cmp	x9, #0x2
  4200e0:	b.ne	420114 <_obstack_memory_used@@Base+0x9ce0>  // b.any
  4200e4:	madd	x8, x23, x25, x8
  4200e8:	ldr	x8, [x8, #16]
  4200ec:	mov	x0, x24
  4200f0:	mov	x1, x22
  4200f4:	mov	x3, x21
  4200f8:	ldr	x2, [x8, #8]
  4200fc:	mov	w4, w20
  420100:	bl	420030 <_obstack_memory_used@@Base+0x9bfc>
  420104:	cmp	w0, #0x0
  420108:	cset	w8, ne  // ne = any
  42010c:	csel	w19, w19, w0, eq  // eq = none
  420110:	cbnz	w0, 420068 <_obstack_memory_used@@Base+0x9c34>
  420114:	ldr	x8, [x24, #40]
  420118:	madd	x8, x23, x25, x8
  42011c:	ldr	x8, [x8, #16]
  420120:	ldr	x23, [x8]
  420124:	mov	w8, wzr
  420128:	b	420068 <_obstack_memory_used@@Base+0x9c34>
  42012c:	mov	w19, #0xc                   	// #12
  420130:	mov	w8, #0x1                   	// #1
  420134:	b	420068 <_obstack_memory_used@@Base+0x9c34>
  420138:	cmp	w8, #0x2
  42013c:	b.ne	420144 <_obstack_memory_used@@Base+0x9d10>  // b.any
  420140:	mov	w19, wzr
  420144:	mov	w0, w19
  420148:	ldp	x20, x19, [sp, #64]
  42014c:	ldp	x22, x21, [sp, #48]
  420150:	ldp	x24, x23, [sp, #32]
  420154:	ldr	x25, [sp, #16]
  420158:	ldp	x29, x30, [sp], #80
  42015c:	ret
  420160:	stp	x29, x30, [sp, #-96]!
  420164:	stp	x26, x25, [sp, #32]
  420168:	stp	x24, x23, [sp, #48]
  42016c:	stp	x22, x21, [sp, #64]
  420170:	stp	x20, x19, [sp, #80]
  420174:	ldr	x8, [x2, #8]
  420178:	mov	x19, x0
  42017c:	str	x27, [sp, #16]
  420180:	mov	x29, sp
  420184:	cbz	x8, 420254 <_obstack_memory_used@@Base+0x9e20>
  420188:	mov	x21, x1
  42018c:	mov	x0, x2
  420190:	mov	w1, wzr
  420194:	mov	x20, x2
  420198:	bl	41cf34 <_obstack_memory_used@@Base+0x6b00>
  42019c:	ldr	x9, [x21, #136]
  4201a0:	ldr	x8, [x21, #64]
  4201a4:	mov	w10, #0x18                  	// #24
  4201a8:	mov	x22, x0
  4201ac:	and	x9, x9, x0
  4201b0:	madd	x24, x9, x10, x8
  4201b4:	ldr	x10, [x24]
  4201b8:	cmp	x10, #0x1
  4201bc:	b.lt	42021c <_obstack_memory_used@@Base+0x9de8>  // b.tstop
  4201c0:	mov	w10, #0x18                  	// #24
  4201c4:	madd	x8, x9, x10, x8
  4201c8:	ldr	x26, [x8, #16]
  4201cc:	mov	x25, xzr
  4201d0:	ldr	x27, [x26, x25, lsl #3]
  4201d4:	ldr	x8, [x27]
  4201d8:	cmp	x22, x8
  4201dc:	b.ne	4201fc <_obstack_memory_used@@Base+0x9dc8>  // b.any
  4201e0:	add	x0, x27, #0x8
  4201e4:	mov	x1, x20
  4201e8:	bl	41cf60 <_obstack_memory_used@@Base+0x6b2c>
  4201ec:	tst	w0, #0x1
  4201f0:	and	w8, w0, #0x1
  4201f4:	csel	x23, x27, x23, ne  // ne = any
  4201f8:	b	420200 <_obstack_memory_used@@Base+0x9dcc>
  4201fc:	mov	w8, #0x4                   	// #4
  420200:	orr	w8, w8, #0x4
  420204:	cmp	w8, #0x4
  420208:	b.ne	420234 <_obstack_memory_used@@Base+0x9e00>  // b.any
  42020c:	ldr	x8, [x24]
  420210:	add	x25, x25, #0x1
  420214:	cmp	x25, x8
  420218:	b.lt	4201d0 <_obstack_memory_used@@Base+0x9d9c>  // b.tstop
  42021c:	mov	x0, x21
  420220:	mov	x1, x20
  420224:	mov	x2, x22
  420228:	bl	42026c <_obstack_memory_used@@Base+0x9e38>
  42022c:	mov	x23, x0
  420230:	cbz	x0, 420260 <_obstack_memory_used@@Base+0x9e2c>
  420234:	mov	x0, x23
  420238:	ldp	x20, x19, [sp, #80]
  42023c:	ldp	x22, x21, [sp, #64]
  420240:	ldp	x24, x23, [sp, #48]
  420244:	ldp	x26, x25, [sp, #32]
  420248:	ldr	x27, [sp, #16]
  42024c:	ldp	x29, x30, [sp], #96
  420250:	ret
  420254:	mov	x23, xzr
  420258:	str	wzr, [x19]
  42025c:	b	420234 <_obstack_memory_used@@Base+0x9e00>
  420260:	mov	w8, #0xc                   	// #12
  420264:	str	w8, [x19]
  420268:	b	420234 <_obstack_memory_used@@Base+0x9e00>
  42026c:	stp	x29, x30, [sp, #-64]!
  420270:	stp	x22, x21, [sp, #32]
  420274:	mov	x22, x1
  420278:	mov	x21, x0
  42027c:	mov	w0, #0x70                  	// #112
  420280:	mov	w1, #0x1                   	// #1
  420284:	str	x23, [sp, #16]
  420288:	stp	x20, x19, [sp, #48]
  42028c:	mov	x29, sp
  420290:	mov	x20, x2
  420294:	bl	4025d0 <calloc@plt>
  420298:	mov	x19, x0
  42029c:	cbz	x0, 420360 <_obstack_memory_used@@Base+0x9f2c>
  4202a0:	add	x23, x19, #0x8
  4202a4:	mov	x0, x23
  4202a8:	mov	x1, x22
  4202ac:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  4202b0:	cbnz	w0, 420378 <_obstack_memory_used@@Base+0x9f44>
  4202b4:	str	x23, [x19, #80]
  4202b8:	ldr	x8, [x22, #8]
  4202bc:	cmp	x8, #0x1
  4202c0:	b.lt	42034c <_obstack_memory_used@@Base+0x9f18>  // b.tstop
  4202c4:	ldr	x8, [x21]
  4202c8:	ldp	x10, x9, [x22, #8]
  4202cc:	mov	x11, xzr
  4202d0:	b	4202f4 <_obstack_memory_used@@Base+0x9ec0>
  4202d4:	ldr	w12, [x12]
  4202d8:	tst	w12, #0x3ff00
  4202dc:	b.eq	4202e8 <_obstack_memory_used@@Base+0x9eb4>  // b.none
  4202e0:	orr	w12, w13, #0x80
  4202e4:	strb	w12, [x19, #104]
  4202e8:	add	x11, x11, #0x1
  4202ec:	cmp	x11, x10
  4202f0:	b.ge	42034c <_obstack_memory_used@@Base+0x9f18>  // b.tcont
  4202f4:	ldr	x12, [x9, x11, lsl #3]
  4202f8:	add	x12, x8, x12, lsl #4
  4202fc:	ldr	w13, [x12, #8]!
  420300:	and	w14, w13, #0x3ffff
  420304:	cmp	w14, #0x1
  420308:	b.eq	4202e8 <_obstack_memory_used@@Base+0x9eb4>  // b.none
  42030c:	ldrb	w15, [x19, #104]
  420310:	lsr	w16, w13, #15
  420314:	and	w14, w13, #0xff
  420318:	and	w13, w16, #0x20
  42031c:	orr	w13, w15, w13
  420320:	cmp	w14, #0xc
  420324:	strb	w13, [x19, #104]
  420328:	b.eq	4202e0 <_obstack_memory_used@@Base+0x9eac>  // b.none
  42032c:	cmp	w14, #0x4
  420330:	b.eq	420344 <_obstack_memory_used@@Base+0x9f10>  // b.none
  420334:	cmp	w14, #0x2
  420338:	b.ne	4202d4 <_obstack_memory_used@@Base+0x9ea0>  // b.any
  42033c:	orr	w12, w13, #0x10
  420340:	b	4202e4 <_obstack_memory_used@@Base+0x9eb0>
  420344:	orr	w12, w13, #0x40
  420348:	b	4202e4 <_obstack_memory_used@@Base+0x9eb0>
  42034c:	mov	x0, x21
  420350:	mov	x1, x19
  420354:	mov	x2, x20
  420358:	bl	41d1e0 <_obstack_memory_used@@Base+0x6dac>
  42035c:	cbnz	w0, 420384 <_obstack_memory_used@@Base+0x9f50>
  420360:	mov	x0, x19
  420364:	ldp	x20, x19, [sp, #48]
  420368:	ldp	x22, x21, [sp, #32]
  42036c:	ldr	x23, [sp, #16]
  420370:	ldp	x29, x30, [sp], #64
  420374:	ret
  420378:	mov	x0, x19
  42037c:	bl	402770 <free@plt>
  420380:	b	42038c <_obstack_memory_used@@Base+0x9f58>
  420384:	mov	x0, x19
  420388:	bl	417a50 <_obstack_memory_used@@Base+0x161c>
  42038c:	mov	x19, xzr
  420390:	b	420360 <_obstack_memory_used@@Base+0x9f2c>
  420394:	stp	x29, x30, [sp, #-80]!
  420398:	stp	x24, x23, [sp, #32]
  42039c:	stp	x22, x21, [sp, #48]
  4203a0:	stp	x20, x19, [sp, #64]
  4203a4:	ldr	x24, [x0]
  4203a8:	str	x25, [sp, #16]
  4203ac:	mov	x20, x3
  4203b0:	mov	x22, x2
  4203b4:	add	x8, x24, x1, lsl #4
  4203b8:	ldrb	w25, [x8, #8]
  4203bc:	mov	x29, sp
  4203c0:	cmp	w25, #0x7
  4203c4:	b.eq	420568 <_obstack_memory_used@@Base+0xa134>  // b.none
  4203c8:	mov	x21, x0
  4203cc:	mov	x23, x1
  4203d0:	mov	x0, x22
  4203d4:	mov	x1, x20
  4203d8:	bl	41b6a8 <_obstack_memory_used@@Base+0x5274>
  4203dc:	cmp	w25, #0x5
  4203e0:	mov	w19, w0
  4203e4:	b.ne	420420 <_obstack_memory_used@@Base+0x9fec>  // b.any
  4203e8:	cmp	w19, #0x2
  4203ec:	b.lt	420534 <_obstack_memory_used@@Base+0xa100>  // b.tstop
  4203f0:	ldr	x8, [x21, #216]
  4203f4:	tbnz	w8, #6, 420408 <_obstack_memory_used@@Base+0x9fd4>
  4203f8:	ldr	x9, [x22, #8]
  4203fc:	ldrb	w9, [x9, x20]
  420400:	cmp	w9, #0xa
  420404:	b.eq	420534 <_obstack_memory_used@@Base+0xa100>  // b.none
  420408:	tbz	w8, #7, 420418 <_obstack_memory_used@@Base+0x9fe4>
  42040c:	ldr	x8, [x22, #8]
  420410:	ldrb	w8, [x8, x20]
  420414:	cbz	w8, 420534 <_obstack_memory_used@@Base+0xa100>
  420418:	mov	w21, w19
  42041c:	b	420538 <_obstack_memory_used@@Base+0xa104>
  420420:	cmp	w25, #0x6
  420424:	mov	w21, wzr
  420428:	b.ne	420538 <_obstack_memory_used@@Base+0xa104>  // b.any
  42042c:	cmp	w19, #0x2
  420430:	b.lt	420538 <_obstack_memory_used@@Base+0xa104>  // b.tstop
  420434:	lsl	x8, x23, #4
  420438:	ldr	x23, [x24, x8]
  42043c:	ldr	x8, [x23, #64]
  420440:	cbnz	x8, 420454 <_obstack_memory_used@@Base+0xa020>
  420444:	ldr	x8, [x23, #72]
  420448:	cbnz	x8, 420454 <_obstack_memory_used@@Base+0xa020>
  42044c:	ldr	x8, [x23, #40]
  420450:	cbz	x8, 420560 <_obstack_memory_used@@Base+0xa12c>
  420454:	mov	x0, x22
  420458:	mov	x1, x20
  42045c:	bl	4195f8 <_obstack_memory_used@@Base+0x31c4>
  420460:	mov	w20, w0
  420464:	ldr	x8, [x23, #40]
  420468:	cmp	x8, #0x1
  42046c:	b.lt	420494 <_obstack_memory_used@@Base+0xa060>  // b.tstop
  420470:	ldr	x8, [x23]
  420474:	mov	x9, xzr
  420478:	ldr	w10, [x8, x9, lsl #2]
  42047c:	cmp	w20, w10
  420480:	b.eq	420520 <_obstack_memory_used@@Base+0xa0ec>  // b.none
  420484:	ldr	x10, [x23, #40]
  420488:	add	x9, x9, #0x1
  42048c:	cmp	x9, x10
  420490:	b.lt	420478 <_obstack_memory_used@@Base+0xa044>  // b.tstop
  420494:	ldr	x8, [x23, #72]
  420498:	cmp	x8, #0x1
  42049c:	b.lt	4204d8 <_obstack_memory_used@@Base+0xa0a4>  // b.tstop
  4204a0:	mov	w21, wzr
  4204a4:	mov	x22, xzr
  4204a8:	ldr	x8, [x23, #24]
  4204ac:	mov	w0, w20
  4204b0:	ldr	x1, [x8, x22, lsl #3]
  4204b4:	bl	4024d0 <iswctype@plt>
  4204b8:	cmp	w0, #0x0
  4204bc:	csel	w21, w21, w19, eq  // eq = none
  4204c0:	cbnz	w0, 420524 <_obstack_memory_used@@Base+0xa0f0>
  4204c4:	ldr	x8, [x23, #72]
  4204c8:	add	x22, x22, #0x1
  4204cc:	cmp	x22, x8
  4204d0:	b.lt	4204a8 <_obstack_memory_used@@Base+0xa074>  // b.tstop
  4204d4:	b	4204dc <_obstack_memory_used@@Base+0xa0a8>
  4204d8:	mov	w21, wzr
  4204dc:	ldr	x8, [x23, #64]
  4204e0:	cmp	x8, #0x1
  4204e4:	b.lt	420524 <_obstack_memory_used@@Base+0xa0f0>  // b.tstop
  4204e8:	ldr	x8, [x23, #8]
  4204ec:	mov	x9, xzr
  4204f0:	b	420504 <_obstack_memory_used@@Base+0xa0d0>
  4204f4:	ldr	x10, [x23, #64]
  4204f8:	add	x9, x9, #0x1
  4204fc:	cmp	x9, x10
  420500:	b.ge	420524 <_obstack_memory_used@@Base+0xa0f0>  // b.tcont
  420504:	ldr	w10, [x8, x9, lsl #2]
  420508:	cmp	w10, w20
  42050c:	b.hi	4204f4 <_obstack_memory_used@@Base+0xa0c0>  // b.pmore
  420510:	ldr	x10, [x23, #16]
  420514:	ldr	w10, [x10, x9, lsl #2]
  420518:	cmp	w20, w10
  42051c:	b.hi	4204f4 <_obstack_memory_used@@Base+0xa0c0>  // b.pmore
  420520:	mov	w21, w19
  420524:	ldrb	w8, [x23, #32]
  420528:	tbz	w8, #0, 420538 <_obstack_memory_used@@Base+0xa104>
  42052c:	cmp	w21, #0x0
  420530:	b.le	420554 <_obstack_memory_used@@Base+0xa120>
  420534:	mov	w21, wzr
  420538:	mov	w0, w21
  42053c:	ldp	x20, x19, [sp, #64]
  420540:	ldp	x22, x21, [sp, #48]
  420544:	ldp	x24, x23, [sp, #32]
  420548:	ldr	x25, [sp, #16]
  42054c:	ldp	x29, x30, [sp], #80
  420550:	ret
  420554:	cmp	w19, #0x1
  420558:	csinc	w21, w19, wzr, gt
  42055c:	b	420538 <_obstack_memory_used@@Base+0xa104>
  420560:	mov	w20, wzr
  420564:	b	420464 <_obstack_memory_used@@Base+0xa030>
  420568:	ldr	x8, [x22, #8]
  42056c:	ldrb	w10, [x8, x20]
  420570:	cmp	w10, #0xc2
  420574:	b.cc	420534 <_obstack_memory_used@@Base+0xa100>  // b.lo, b.ul, b.last
  420578:	ldr	x9, [x22, #88]
  42057c:	add	x11, x20, #0x2
  420580:	cmp	x11, x9
  420584:	b.gt	420534 <_obstack_memory_used@@Base+0xa100>
  420588:	add	x11, x20, x8
  42058c:	ldrb	w11, [x11, #1]
  420590:	cmp	w10, #0xdf
  420594:	b.hi	4205b4 <_obstack_memory_used@@Base+0xa180>  // b.pmore
  420598:	sxtb	w8, w11
  42059c:	cmp	w11, #0xbf
  4205a0:	mov	w9, #0xffffffff            	// #-1
  4205a4:	ccmp	w8, w9, #0x0, ls  // ls = plast
  4205a8:	mov	w8, #0x2                   	// #2
  4205ac:	csel	w21, wzr, w8, gt
  4205b0:	b	420538 <_obstack_memory_used@@Base+0xa104>
  4205b4:	cmp	w10, #0xef
  4205b8:	b.hi	4205d4 <_obstack_memory_used@@Base+0xa1a0>  // b.pmore
  4205bc:	cmp	w10, #0xe0
  4205c0:	mov	w10, #0x3                   	// #3
  4205c4:	b.ne	420630 <_obstack_memory_used@@Base+0xa1fc>  // b.any
  4205c8:	cmp	w11, #0xa0
  4205cc:	b.cc	420534 <_obstack_memory_used@@Base+0xa100>  // b.lo, b.ul, b.last
  4205d0:	b	420630 <_obstack_memory_used@@Base+0xa1fc>
  4205d4:	cmp	w10, #0xf7
  4205d8:	b.hi	4205f4 <_obstack_memory_used@@Base+0xa1c0>  // b.pmore
  4205dc:	cmp	w10, #0xf0
  4205e0:	mov	w10, #0x4                   	// #4
  4205e4:	b.ne	420630 <_obstack_memory_used@@Base+0xa1fc>  // b.any
  4205e8:	cmp	w11, #0x90
  4205ec:	b.cc	420534 <_obstack_memory_used@@Base+0xa100>  // b.lo, b.ul, b.last
  4205f0:	b	420630 <_obstack_memory_used@@Base+0xa1fc>
  4205f4:	cmp	w10, #0xfb
  4205f8:	b.hi	420614 <_obstack_memory_used@@Base+0xa1e0>  // b.pmore
  4205fc:	cmp	w10, #0xf8
  420600:	mov	w10, #0x5                   	// #5
  420604:	b.ne	420630 <_obstack_memory_used@@Base+0xa1fc>  // b.any
  420608:	cmp	w11, #0x88
  42060c:	b.cc	420534 <_obstack_memory_used@@Base+0xa100>  // b.lo, b.ul, b.last
  420610:	b	420630 <_obstack_memory_used@@Base+0xa1fc>
  420614:	cmp	w10, #0xfd
  420618:	b.hi	420534 <_obstack_memory_used@@Base+0xa100>  // b.pmore
  42061c:	cmp	w10, #0xfc
  420620:	mov	w10, #0x6                   	// #6
  420624:	b.ne	420630 <_obstack_memory_used@@Base+0xa1fc>  // b.any
  420628:	cmp	w11, #0x84
  42062c:	b.cc	420534 <_obstack_memory_used@@Base+0xa100>  // b.lo, b.ul, b.last
  420630:	add	x11, x10, x20
  420634:	cmp	x11, x9
  420638:	b.gt	420534 <_obstack_memory_used@@Base+0xa100>
  42063c:	add	x8, x20, x8
  420640:	sub	x9, x10, #0x1
  420644:	add	x8, x8, #0x1
  420648:	ldrb	w11, [x8]
  42064c:	mov	w21, wzr
  420650:	sxtb	w12, w11
  420654:	tbz	w12, #31, 420538 <_obstack_memory_used@@Base+0xa104>
  420658:	cmp	w11, #0xbf
  42065c:	b.hi	420538 <_obstack_memory_used@@Base+0xa104>  // b.pmore
  420660:	subs	x9, x9, #0x1
  420664:	add	x8, x8, #0x1
  420668:	b.ne	420648 <_obstack_memory_used@@Base+0xa214>  // b.any
  42066c:	mov	w21, w10
  420670:	b	420538 <_obstack_memory_used@@Base+0xa104>
  420674:	stp	x29, x30, [sp, #-48]!
  420678:	stp	x20, x19, [sp, #32]
  42067c:	str	x21, [sp, #16]
  420680:	ldr	w21, [x1, #8]
  420684:	mov	x20, x0
  420688:	mov	w0, wzr
  42068c:	mov	x29, sp
  420690:	and	w9, w21, #0xff
  420694:	sub	w9, w9, #0x1
  420698:	cmp	w9, #0x6
  42069c:	b.hi	420758 <_obstack_memory_used@@Base+0xa324>  // b.pmore
  4206a0:	ldr	x10, [x20, #8]
  4206a4:	mov	x8, x1
  4206a8:	mov	x19, x2
  4206ac:	ldrb	w1, [x10, x2]
  4206b0:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4206b4:	add	x10, x10, #0x7d7
  4206b8:	adr	x11, 4206c8 <_obstack_memory_used@@Base+0xa294>
  4206bc:	ldrb	w12, [x10, x9]
  4206c0:	add	x11, x11, x12, lsl #2
  4206c4:	br	x11
  4206c8:	ldrb	w8, [x8]
  4206cc:	cmp	w8, w1
  4206d0:	b.eq	420718 <_obstack_memory_used@@Base+0xa2e4>  // b.none
  4206d4:	b	42074c <_obstack_memory_used@@Base+0xa318>
  4206d8:	ldr	x0, [x8]
  4206dc:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  4206e0:	tbz	w0, #0, 42074c <_obstack_memory_used@@Base+0xa318>
  4206e4:	b	420718 <_obstack_memory_used@@Base+0xa2e4>
  4206e8:	sxtb	w8, w1
  4206ec:	tbnz	w8, #31, 42074c <_obstack_memory_used@@Base+0xa318>
  4206f0:	cbz	w1, 42070c <_obstack_memory_used@@Base+0xa2d8>
  4206f4:	cmp	w1, #0xa
  4206f8:	b.ne	420718 <_obstack_memory_used@@Base+0xa2e4>  // b.any
  4206fc:	ldr	x8, [x20, #152]
  420700:	ldrb	w8, [x8, #216]
  420704:	tbz	w8, #6, 42074c <_obstack_memory_used@@Base+0xa318>
  420708:	cbnz	w1, 420718 <_obstack_memory_used@@Base+0xa2e4>
  42070c:	ldr	x8, [x20, #152]
  420710:	ldrb	w8, [x8, #216]
  420714:	tbnz	w8, #7, 42074c <_obstack_memory_used@@Base+0xa318>
  420718:	tst	w21, #0x3ff00
  42071c:	b.eq	420754 <_obstack_memory_used@@Base+0xa320>  // b.none
  420720:	ldr	w2, [x20, #160]
  420724:	mov	x0, x20
  420728:	mov	x1, x19
  42072c:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  420730:	and	w8, w0, #0x1
  420734:	tbz	w21, #10, 42073c <_obstack_memory_used@@Base+0xa308>
  420738:	cbz	w8, 42074c <_obstack_memory_used@@Base+0xa318>
  42073c:	tbz	w21, #11, 420744 <_obstack_memory_used@@Base+0xa310>
  420740:	cbnz	w8, 42074c <_obstack_memory_used@@Base+0xa318>
  420744:	tbz	w21, #13, 420768 <_obstack_memory_used@@Base+0xa334>
  420748:	tbnz	w0, #1, 420768 <_obstack_memory_used@@Base+0xa334>
  42074c:	mov	w0, wzr
  420750:	b	420758 <_obstack_memory_used@@Base+0xa324>
  420754:	mov	w0, #0x1                   	// #1
  420758:	ldp	x20, x19, [sp, #32]
  42075c:	ldr	x21, [sp, #16]
  420760:	ldp	x29, x30, [sp], #48
  420764:	ret
  420768:	tst	w21, #0x8000
  42076c:	cset	w8, eq  // eq = none
  420770:	and	w9, w0, #0x8
  420774:	orr	w0, w8, w9, lsr #3
  420778:	b	420758 <_obstack_memory_used@@Base+0xa324>
  42077c:	sub	sp, sp, #0x70
  420780:	stp	x29, x30, [sp, #32]
  420784:	stp	x26, x25, [sp, #48]
  420788:	stp	x24, x23, [sp, #64]
  42078c:	stp	x22, x21, [sp, #80]
  420790:	stp	x20, x19, [sp, #96]
  420794:	ldr	x8, [x1, #16]
  420798:	add	x29, sp, #0x20
  42079c:	cmp	x8, #0x1
  4207a0:	b.lt	420924 <_obstack_memory_used@@Base+0xa4f0>  // b.tstop
  4207a4:	ldr	x21, [x0, #152]
  4207a8:	mov	x19, x1
  4207ac:	mov	x20, x0
  4207b0:	mov	x25, xzr
  4207b4:	mov	w26, #0x18                  	// #24
  4207b8:	ldr	x8, [x19, #24]
  4207bc:	ldr	x23, [x8, x25, lsl #3]
  4207c0:	ldr	x8, [x21]
  4207c4:	add	x8, x8, x23, lsl #4
  4207c8:	ldr	w24, [x8, #8]
  4207cc:	tbz	w24, #20, 42088c <_obstack_memory_used@@Base+0xa458>
  4207d0:	tst	w24, #0x3ff00
  4207d4:	b.eq	42080c <_obstack_memory_used@@Base+0xa3d8>  // b.none
  4207d8:	ldr	x1, [x20, #72]
  4207dc:	ldr	w2, [x20, #160]
  4207e0:	mov	x0, x20
  4207e4:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  4207e8:	and	w8, w0, #0x1
  4207ec:	tbz	w24, #10, 4207f4 <_obstack_memory_used@@Base+0xa3c0>
  4207f0:	cbz	w8, 42088c <_obstack_memory_used@@Base+0xa458>
  4207f4:	tbz	w24, #11, 4207fc <_obstack_memory_used@@Base+0xa3c8>
  4207f8:	cbnz	w8, 42088c <_obstack_memory_used@@Base+0xa458>
  4207fc:	tbz	w24, #13, 420804 <_obstack_memory_used@@Base+0xa3d0>
  420800:	tbz	w0, #1, 42088c <_obstack_memory_used@@Base+0xa458>
  420804:	tbz	w24, #15, 42080c <_obstack_memory_used@@Base+0xa3d8>
  420808:	tbz	w0, #3, 42088c <_obstack_memory_used@@Base+0xa458>
  42080c:	ldr	x3, [x20, #72]
  420810:	mov	x0, x21
  420814:	mov	x1, x23
  420818:	mov	x2, x20
  42081c:	bl	420394 <_obstack_memory_used@@Base+0x9f60>
  420820:	cbz	w0, 42088c <_obstack_memory_used@@Base+0xa458>
  420824:	ldr	x8, [x20, #72]
  420828:	ldr	w9, [x20, #224]
  42082c:	add	x24, x8, w0, sxtw
  420830:	cmp	w9, w0
  420834:	csel	w8, w0, w9, lt  // lt = tstop
  420838:	mov	x0, x20
  42083c:	mov	x1, x24
  420840:	str	w8, [x20, #224]
  420844:	bl	41f43c <_obstack_memory_used@@Base+0x9008>
  420848:	stur	w0, [x29, #-4]
  42084c:	cbnz	w0, 420880 <_obstack_memory_used@@Base+0xa44c>
  420850:	ldr	x8, [x21, #24]
  420854:	ldr	x9, [x20, #184]
  420858:	ldr	x10, [x21, #48]
  42085c:	ldr	x8, [x8, x23, lsl #3]
  420860:	ldr	x23, [x9, x24, lsl #3]
  420864:	madd	x2, x8, x26, x10
  420868:	cbz	x23, 4208b0 <_obstack_memory_used@@Base+0xa47c>
  42086c:	ldr	x1, [x23, #80]
  420870:	mov	x0, sp
  420874:	bl	41f1b8 <_obstack_memory_used@@Base+0x8d84>
  420878:	stur	w0, [x29, #-4]
  42087c:	cbz	w0, 4208c0 <_obstack_memory_used@@Base+0xa48c>
  420880:	mov	w8, #0x1                   	// #1
  420884:	mov	w22, w0
  420888:	b	420890 <_obstack_memory_used@@Base+0xa45c>
  42088c:	mov	w8, #0x4                   	// #4
  420890:	orr	w8, w8, #0x4
  420894:	cmp	w8, #0x4
  420898:	b.ne	420928 <_obstack_memory_used@@Base+0xa4f4>  // b.any
  42089c:	ldr	x8, [x19, #16]
  4208a0:	add	x25, x25, #0x1
  4208a4:	cmp	x25, x8
  4208a8:	b.lt	4207b8 <_obstack_memory_used@@Base+0xa384>  // b.tstop
  4208ac:	b	420924 <_obstack_memory_used@@Base+0xa4f0>
  4208b0:	ldr	x8, [x2, #16]
  4208b4:	ldr	q0, [x2]
  4208b8:	str	x8, [sp, #16]
  4208bc:	str	q0, [sp]
  4208c0:	ldr	w2, [x20, #160]
  4208c4:	sub	x1, x24, #0x1
  4208c8:	mov	x0, x20
  4208cc:	bl	41e458 <_obstack_memory_used@@Base+0x8024>
  4208d0:	mov	w3, w0
  4208d4:	sub	x0, x29, #0x4
  4208d8:	mov	x2, sp
  4208dc:	mov	x1, x21
  4208e0:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  4208e4:	ldr	x8, [x20, #184]
  4208e8:	str	x0, [x8, x24, lsl #3]
  4208ec:	cbz	x23, 4208f8 <_obstack_memory_used@@Base+0xa4c4>
  4208f0:	ldr	x0, [sp, #16]
  4208f4:	bl	402770 <free@plt>
  4208f8:	ldr	x8, [x20, #184]
  4208fc:	ldur	w9, [x29, #-4]
  420900:	ldr	x8, [x8, x24, lsl #3]
  420904:	cmp	x8, #0x0
  420908:	cset	w10, eq  // eq = none
  42090c:	cmp	w9, #0x0
  420910:	cset	w11, ne  // ne = any
  420914:	tst	w10, w11
  420918:	and	w8, w10, w11
  42091c:	csel	w22, w9, w22, ne  // ne = any
  420920:	b	420890 <_obstack_memory_used@@Base+0xa45c>
  420924:	mov	w22, wzr
  420928:	mov	w0, w22
  42092c:	ldp	x20, x19, [sp, #96]
  420930:	ldp	x22, x21, [sp, #80]
  420934:	ldp	x24, x23, [sp, #64]
  420938:	ldp	x26, x25, [sp, #48]
  42093c:	ldp	x29, x30, [sp, #32]
  420940:	add	sp, sp, #0x70
  420944:	ret
  420948:	stp	x29, x30, [sp, #-96]!
  42094c:	stp	x28, x27, [sp, #16]
  420950:	stp	x26, x25, [sp, #32]
  420954:	stp	x24, x23, [sp, #48]
  420958:	stp	x22, x21, [sp, #64]
  42095c:	stp	x20, x19, [sp, #80]
  420960:	mov	x29, sp
  420964:	sub	sp, sp, #0x70
  420968:	mov	x23, x0
  42096c:	mov	w0, #0x3800                	// #14336
  420970:	mov	x26, x1
  420974:	bl	4024e0 <malloc@plt>
  420978:	cbz	x0, 420e20 <_obstack_memory_used@@Base+0xa9ec>
  42097c:	mov	w8, #0x1800                	// #6144
  420980:	mov	x25, x0
  420984:	add	x21, x0, x8
  420988:	mov	x19, x26
  42098c:	mov	x0, x23
  420990:	mov	x1, x26
  420994:	mov	x2, x25
  420998:	mov	x3, x21
  42099c:	str	xzr, [x19, #88]!
  4209a0:	str	xzr, [x26, #96]
  4209a4:	bl	420e64 <_obstack_memory_used@@Base+0xaa30>
  4209a8:	mov	x20, x0
  4209ac:	cmp	x0, #0x0
  4209b0:	b.le	420cdc <_obstack_memory_used@@Base+0xa8a8>
  4209b4:	add	x1, x20, #0x1
  4209b8:	sub	x0, x29, #0x20
  4209bc:	bl	41c6e8 <_obstack_memory_used@@Base+0x62b4>
  4209c0:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4209c4:	movk	x8, #0xa855
  4209c8:	movk	x8, #0xaaa, lsl #48
  4209cc:	mov	x22, xzr
  4209d0:	mov	w24, wzr
  4209d4:	cmp	x20, x8
  4209d8:	stur	w0, [x29, #-4]
  4209dc:	b.hi	420be4 <_obstack_memory_used@@Base+0xa7b0>  // b.pmore
  4209e0:	cbnz	w0, 420be4 <_obstack_memory_used@@Base+0xa7b0>
  4209e4:	add	x8, x20, x20, lsl #1
  4209e8:	lsl	x0, x8, #3
  4209ec:	mov	w8, #0x3800                	// #14336
  4209f0:	add	x8, x0, x8
  4209f4:	cmp	x8, #0xfbf
  4209f8:	b.hi	420a18 <_obstack_memory_used@@Base+0xa5e4>  // b.pmore
  4209fc:	add	x9, x0, #0xf
  420a00:	mov	x8, sp
  420a04:	and	x9, x9, #0xfffffffffffffff0
  420a08:	sub	x22, x8, x9
  420a0c:	mov	sp, x22
  420a10:	mov	w8, wzr
  420a14:	b	420a28 <_obstack_memory_used@@Base+0xa5f4>
  420a18:	bl	4024e0 <malloc@plt>
  420a1c:	mov	x22, x0
  420a20:	cbz	x0, 420e40 <_obstack_memory_used@@Base+0xaa0c>
  420a24:	mov	w8, #0x1                   	// #1
  420a28:	stur	w8, [x29, #-88]
  420a2c:	lsl	x8, x20, #3
  420a30:	add	x9, x22, x8
  420a34:	sub	x0, x29, #0x40
  420a38:	stp	x26, x19, [x29, #-104]
  420a3c:	stur	x9, [x29, #-72]
  420a40:	add	x27, x9, x8
  420a44:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  420a48:	cmp	x20, #0x1
  420a4c:	b.lt	420c24 <_obstack_memory_used@@Base+0xa7f0>  // b.tstop
  420a50:	mov	x26, xzr
  420a54:	stur	wzr, [x29, #-84]
  420a58:	mov	w24, #0x18                  	// #24
  420a5c:	stur	x21, [x29, #-80]
  420a60:	stur	xzr, [x29, #-24]
  420a64:	madd	x28, x26, x24, x25
  420a68:	ldr	x8, [x28, #8]!
  420a6c:	cmp	x8, #0x1
  420a70:	b.lt	420b00 <_obstack_memory_used@@Base+0xa6cc>  // b.tstop
  420a74:	madd	x8, x26, x24, x25
  420a78:	ldr	x19, [x8, #16]
  420a7c:	ldur	w0, [x29, #-4]
  420a80:	mov	x21, x27
  420a84:	mov	x27, x22
  420a88:	mov	x22, x25
  420a8c:	mov	x25, xzr
  420a90:	b	420aa4 <_obstack_memory_used@@Base+0xa670>
  420a94:	ldr	x8, [x28]
  420a98:	add	x25, x25, #0x1
  420a9c:	cmp	x25, x8
  420aa0:	b.ge	420aec <_obstack_memory_used@@Base+0xa6b8>  // b.tcont
  420aa4:	ldr	x8, [x23, #24]
  420aa8:	ldr	x9, [x19, x25, lsl #3]
  420aac:	ldr	x8, [x8, x9, lsl #3]
  420ab0:	cmn	x8, #0x1
  420ab4:	b.eq	420a94 <_obstack_memory_used@@Base+0xa660>  // b.none
  420ab8:	ldr	x9, [x23, #48]
  420abc:	sub	x0, x29, #0x20
  420ac0:	madd	x1, x8, x24, x9
  420ac4:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  420ac8:	cbz	w0, 420a94 <_obstack_memory_used@@Base+0xa660>
  420acc:	mov	x25, x22
  420ad0:	mov	x22, x27
  420ad4:	mov	x27, x21
  420ad8:	ldur	x21, [x29, #-80]
  420adc:	mov	w8, wzr
  420ae0:	stur	w0, [x29, #-4]
  420ae4:	tbnz	w8, #0, 420bc8 <_obstack_memory_used@@Base+0xa794>
  420ae8:	b	420be0 <_obstack_memory_used@@Base+0xa7ac>
  420aec:	mov	x25, x22
  420af0:	mov	x22, x27
  420af4:	mov	x27, x21
  420af8:	ldur	x21, [x29, #-80]
  420afc:	stur	w0, [x29, #-4]
  420b00:	sub	x0, x29, #0x4
  420b04:	sub	x2, x29, #0x20
  420b08:	mov	x1, x23
  420b0c:	mov	w3, wzr
  420b10:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  420b14:	str	x0, [x22, x26, lsl #3]
  420b18:	cbnz	x0, 420b24 <_obstack_memory_used@@Base+0xa6f0>
  420b1c:	ldur	w8, [x29, #-4]
  420b20:	cbnz	w8, 420bd8 <_obstack_memory_used@@Base+0xa7a4>
  420b24:	ldrsb	w8, [x0, #104]
  420b28:	tbnz	w8, #31, 420b44 <_obstack_memory_used@@Base+0xa710>
  420b2c:	ldur	x9, [x29, #-72]
  420b30:	lsl	x8, x26, #3
  420b34:	str	x0, [x9, x8]
  420b38:	ldr	x9, [x22, x8]
  420b3c:	str	x9, [x27, x8]
  420b40:	b	420bb4 <_obstack_memory_used@@Base+0xa780>
  420b44:	sub	x0, x29, #0x4
  420b48:	sub	x2, x29, #0x20
  420b4c:	mov	w3, #0x1                   	// #1
  420b50:	mov	x1, x23
  420b54:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  420b58:	ldur	x8, [x29, #-72]
  420b5c:	str	x0, [x8, x26, lsl #3]
  420b60:	cbnz	x0, 420b6c <_obstack_memory_used@@Base+0xa738>
  420b64:	ldur	w8, [x29, #-4]
  420b68:	cbnz	w8, 420bd8 <_obstack_memory_used@@Base+0xa7a4>
  420b6c:	ldr	x8, [x22, x26, lsl #3]
  420b70:	cmp	x8, x0
  420b74:	b.eq	420b90 <_obstack_memory_used@@Base+0xa75c>  // b.none
  420b78:	ldr	w8, [x23, #180]
  420b7c:	ldur	w9, [x29, #-84]
  420b80:	cmp	w8, #0x1
  420b84:	cset	w8, gt
  420b88:	orr	w9, w9, w8
  420b8c:	stur	w9, [x29, #-84]
  420b90:	sub	x0, x29, #0x4
  420b94:	sub	x2, x29, #0x20
  420b98:	mov	w3, #0x2                   	// #2
  420b9c:	mov	x1, x23
  420ba0:	bl	41ce18 <_obstack_memory_used@@Base+0x69e4>
  420ba4:	str	x0, [x27, x26, lsl #3]
  420ba8:	cbnz	x0, 420bb4 <_obstack_memory_used@@Base+0xa780>
  420bac:	ldur	w8, [x29, #-4]
  420bb0:	cbnz	w8, 420bd8 <_obstack_memory_used@@Base+0xa7a4>
  420bb4:	add	x1, x21, x26, lsl #5
  420bb8:	sub	x0, x29, #0x40
  420bbc:	bl	4213d8 <_obstack_memory_used@@Base+0xafa4>
  420bc0:	mov	w8, #0x1                   	// #1
  420bc4:	tbz	w8, #0, 420be0 <_obstack_memory_used@@Base+0xa7ac>
  420bc8:	add	x26, x26, #0x1
  420bcc:	cmp	x26, x20
  420bd0:	b.ne	420a60 <_obstack_memory_used@@Base+0xa62c>  // b.any
  420bd4:	b	420c28 <_obstack_memory_used@@Base+0xa7f4>
  420bd8:	mov	w8, wzr
  420bdc:	tbnz	w8, #0, 420bc8 <_obstack_memory_used@@Base+0xa794>
  420be0:	ldur	w24, [x29, #-88]
  420be4:	cbz	w24, 420bf0 <_obstack_memory_used@@Base+0xa7bc>
  420be8:	mov	x0, x22
  420bec:	bl	402770 <free@plt>
  420bf0:	ldur	x0, [x29, #-16]
  420bf4:	bl	402770 <free@plt>
  420bf8:	cmp	x20, #0x1
  420bfc:	b.lt	420c14 <_obstack_memory_used@@Base+0xa7e0>  // b.tstop
  420c00:	add	x19, x25, #0x10
  420c04:	ldr	x0, [x19], #24
  420c08:	bl	402770 <free@plt>
  420c0c:	subs	x20, x20, #0x1
  420c10:	b.ne	420c04 <_obstack_memory_used@@Base+0xa7d0>  // b.any
  420c14:	mov	x0, x25
  420c18:	bl	402770 <free@plt>
  420c1c:	mov	w0, wzr
  420c20:	b	420e20 <_obstack_memory_used@@Base+0xa9ec>
  420c24:	stur	wzr, [x29, #-84]
  420c28:	ldur	w26, [x29, #-84]
  420c2c:	tbnz	w26, #0, 420cf0 <_obstack_memory_used@@Base+0xa8bc>
  420c30:	mov	w0, #0x8                   	// #8
  420c34:	mov	w1, #0x100                 	// #256
  420c38:	bl	4025d0 <calloc@plt>
  420c3c:	ldur	x8, [x29, #-96]
  420c40:	ldur	w24, [x29, #-88]
  420c44:	str	x0, [x8]
  420c48:	cbz	x0, 420be4 <_obstack_memory_used@@Base+0xa7b0>
  420c4c:	mov	x28, x0
  420c50:	mov	x8, xzr
  420c54:	mov	x9, xzr
  420c58:	sub	x10, x29, #0x40
  420c5c:	mov	x11, x21
  420c60:	b	420c78 <_obstack_memory_used@@Base+0xa844>
  420c64:	add	x9, x9, #0x1
  420c68:	add	x8, x8, #0x40
  420c6c:	cmp	x9, #0x4
  420c70:	add	x11, x11, #0x8
  420c74:	b.eq	420d94 <_obstack_memory_used@@Base+0xa960>  // b.none
  420c78:	ldr	x12, [x10, x9, lsl #3]
  420c7c:	cbz	x12, 420c64 <_obstack_memory_used@@Base+0xa830>
  420c80:	add	x14, x23, x9, lsl #3
  420c84:	mov	x13, x8
  420c88:	add	x14, x14, #0xb8
  420c8c:	mov	w15, #0x1                   	// #1
  420c90:	tbnz	w12, #0, 420ca8 <_obstack_memory_used@@Base+0xa874>
  420c94:	lsl	x15, x15, #1
  420c98:	lsr	x12, x12, #1
  420c9c:	add	x13, x13, #0x1
  420ca0:	cbnz	x12, 420c90 <_obstack_memory_used@@Base+0xa85c>
  420ca4:	b	420c64 <_obstack_memory_used@@Base+0xa830>
  420ca8:	mov	x16, #0xfffffffffffffff8    	// #-8
  420cac:	mov	x17, x11
  420cb0:	ldr	x18, [x17], #32
  420cb4:	add	x16, x16, #0x8
  420cb8:	tst	x18, x15
  420cbc:	b.eq	420cb0 <_obstack_memory_used@@Base+0xa87c>  // b.none
  420cc0:	ldr	x17, [x14]
  420cc4:	tst	x17, x15
  420cc8:	ldur	x17, [x29, #-72]
  420ccc:	csel	x17, x22, x17, eq  // eq = none
  420cd0:	ldr	x16, [x17, x16]
  420cd4:	str	x16, [x28, x13, lsl #3]
  420cd8:	b	420c94 <_obstack_memory_used@@Base+0xa860>
  420cdc:	mov	x0, x25
  420ce0:	bl	402770 <free@plt>
  420ce4:	cbz	x20, 420e48 <_obstack_memory_used@@Base+0xaa14>
  420ce8:	mov	w0, wzr
  420cec:	b	420e20 <_obstack_memory_used@@Base+0xa9ec>
  420cf0:	mov	w0, #0x8                   	// #8
  420cf4:	mov	w1, #0x200                 	// #512
  420cf8:	bl	4025d0 <calloc@plt>
  420cfc:	ldur	x8, [x29, #-104]
  420d00:	ldur	w24, [x29, #-88]
  420d04:	str	x0, [x8, #96]
  420d08:	cbz	x0, 420be4 <_obstack_memory_used@@Base+0xa7b0>
  420d0c:	mov	x28, x0
  420d10:	mov	x8, xzr
  420d14:	mov	x9, xzr
  420d18:	sub	x10, x22, #0x8
  420d1c:	sub	x11, x29, #0x40
  420d20:	mov	x12, x21
  420d24:	b	420d3c <_obstack_memory_used@@Base+0xa908>
  420d28:	add	x9, x9, #0x1
  420d2c:	add	x8, x8, #0x40
  420d30:	cmp	x9, #0x4
  420d34:	add	x12, x12, #0x8
  420d38:	b.eq	420d94 <_obstack_memory_used@@Base+0xa960>  // b.none
  420d3c:	ldr	x13, [x11, x9, lsl #3]
  420d40:	cbz	x13, 420d28 <_obstack_memory_used@@Base+0xa8f4>
  420d44:	mov	x14, x8
  420d48:	mov	w15, #0x1                   	// #1
  420d4c:	tbnz	w13, #0, 420d64 <_obstack_memory_used@@Base+0xa930>
  420d50:	lsl	x15, x15, #1
  420d54:	lsr	x13, x13, #1
  420d58:	add	x14, x14, #0x1
  420d5c:	cbnz	x13, 420d4c <_obstack_memory_used@@Base+0xa918>
  420d60:	b	420d28 <_obstack_memory_used@@Base+0xa8f4>
  420d64:	mov	x17, x12
  420d68:	mov	x16, x10
  420d6c:	ldr	x18, [x17], #32
  420d70:	add	x16, x16, #0x8
  420d74:	tst	x18, x15
  420d78:	b.eq	420d6c <_obstack_memory_used@@Base+0xa938>  // b.none
  420d7c:	ldr	x17, [x16]
  420d80:	ldr	x16, [x16, x20, lsl #3]
  420d84:	add	x18, x28, x14, lsl #3
  420d88:	str	x17, [x18]
  420d8c:	str	x16, [x18, #2048]
  420d90:	b	420d50 <_obstack_memory_used@@Base+0xa91c>
  420d94:	sub	x0, x29, #0x40
  420d98:	mov	w1, #0xa                   	// #10
  420d9c:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  420da0:	tbz	w0, #0, 420de4 <_obstack_memory_used@@Base+0xa9b0>
  420da4:	cmp	x20, #0x1
  420da8:	b.lt	420de4 <_obstack_memory_used@@Base+0xa9b0>  // b.tstop
  420dac:	mov	x19, x20
  420db0:	mov	w1, #0xa                   	// #10
  420db4:	mov	x0, x21
  420db8:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  420dbc:	tbnz	w0, #0, 420dd4 <_obstack_memory_used@@Base+0xa9a0>
  420dc0:	add	x27, x27, #0x8
  420dc4:	subs	x19, x19, #0x1
  420dc8:	add	x21, x21, #0x20
  420dcc:	b.ne	420db0 <_obstack_memory_used@@Base+0xa97c>  // b.any
  420dd0:	b	420de4 <_obstack_memory_used@@Base+0xa9b0>
  420dd4:	ldr	x8, [x27]
  420dd8:	str	x8, [x28, #80]
  420ddc:	tbz	w26, #0, 420de4 <_obstack_memory_used@@Base+0xa9b0>
  420de0:	str	x8, [x28, #2128]
  420de4:	cbz	w24, 420df0 <_obstack_memory_used@@Base+0xa9bc>
  420de8:	mov	x0, x22
  420dec:	bl	402770 <free@plt>
  420df0:	ldur	x0, [x29, #-16]
  420df4:	bl	402770 <free@plt>
  420df8:	cmp	x20, #0x1
  420dfc:	b.lt	420e14 <_obstack_memory_used@@Base+0xa9e0>  // b.tstop
  420e00:	add	x19, x25, #0x10
  420e04:	ldr	x0, [x19], #24
  420e08:	bl	402770 <free@plt>
  420e0c:	subs	x20, x20, #0x1
  420e10:	b.ne	420e04 <_obstack_memory_used@@Base+0xa9d0>  // b.any
  420e14:	mov	x0, x25
  420e18:	bl	402770 <free@plt>
  420e1c:	mov	w0, #0x1                   	// #1
  420e20:	mov	sp, x29
  420e24:	ldp	x20, x19, [sp, #80]
  420e28:	ldp	x22, x21, [sp, #64]
  420e2c:	ldp	x24, x23, [sp, #48]
  420e30:	ldp	x26, x25, [sp, #32]
  420e34:	ldp	x28, x27, [sp, #16]
  420e38:	ldp	x29, x30, [sp], #96
  420e3c:	ret
  420e40:	mov	w24, wzr
  420e44:	b	420be4 <_obstack_memory_used@@Base+0xa7b0>
  420e48:	mov	w0, #0x8                   	// #8
  420e4c:	mov	w1, #0x100                 	// #256
  420e50:	bl	4025d0 <calloc@plt>
  420e54:	cmp	x0, #0x0
  420e58:	str	x0, [x19]
  420e5c:	cset	w0, ne  // ne = any
  420e60:	b	420e20 <_obstack_memory_used@@Base+0xa9ec>
  420e64:	sub	sp, sp, #0xf0
  420e68:	stp	x29, x30, [sp, #144]
  420e6c:	add	x29, sp, #0x90
  420e70:	stp	x22, x21, [sp, #208]
  420e74:	mov	x22, x0
  420e78:	sub	x0, x29, #0x20
  420e7c:	stp	x28, x27, [sp, #160]
  420e80:	stp	x26, x25, [sp, #176]
  420e84:	stp	x24, x23, [sp, #192]
  420e88:	stp	x20, x19, [sp, #224]
  420e8c:	stp	x2, x3, [sp, #32]
  420e90:	mov	x20, x1
  420e94:	sub	x25, x29, #0x20
  420e98:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  420e9c:	ldr	x8, [x20, #16]
  420ea0:	cmp	x8, #0x1
  420ea4:	b.lt	421370 <_obstack_memory_used@@Base+0xaf3c>  // b.tstop
  420ea8:	mov	x26, xzr
  420eac:	mov	x19, xzr
  420eb0:	add	x24, x22, #0xb8
  420eb4:	sub	x28, x29, #0x40
  420eb8:	add	x23, sp, #0x30
  420ebc:	stp	x24, x22, [sp]
  420ec0:	b	420ed4 <_obstack_memory_used@@Base+0xaaa0>
  420ec4:	ldr	x8, [x20, #16]
  420ec8:	add	x26, x26, #0x1
  420ecc:	cmp	x26, x8
  420ed0:	b.ge	4213a8 <_obstack_memory_used@@Base+0xaf74>  // b.tcont
  420ed4:	ldr	x8, [x20, #24]
  420ed8:	ldr	x9, [x22]
  420edc:	ldr	x8, [x8, x26, lsl #3]
  420ee0:	add	x8, x9, x8, lsl #4
  420ee4:	mov	x27, x8
  420ee8:	ldr	w21, [x27, #8]!
  420eec:	and	w9, w21, #0xff
  420ef0:	cmp	w9, #0x1
  420ef4:	str	w9, [sp, #28]
  420ef8:	b.ne	420f18 <_obstack_memory_used@@Base+0xaae4>  // b.any
  420efc:	ldrb	w1, [x8]
  420f00:	sub	x0, x29, #0x20
  420f04:	str	x8, [sp, #16]
  420f08:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  420f0c:	and	w8, w21, #0x3ff00
  420f10:	cbnz	w8, 420f7c <_obstack_memory_used@@Base+0xab48>
  420f14:	b	421190 <_obstack_memory_used@@Base+0xad5c>
  420f18:	cmp	w9, #0x7
  420f1c:	b.eq	420f4c <_obstack_memory_used@@Base+0xab18>  // b.none
  420f20:	cmp	w9, #0x5
  420f24:	b.eq	42100c <_obstack_memory_used@@Base+0xabd8>  // b.none
  420f28:	cmp	w9, #0x3
  420f2c:	b.ne	421034 <_obstack_memory_used@@Base+0xac00>  // b.any
  420f30:	ldr	x1, [x8]
  420f34:	sub	x0, x29, #0x20
  420f38:	str	x8, [sp, #16]
  420f3c:	bl	4213d8 <_obstack_memory_used@@Base+0xafa4>
  420f40:	and	w8, w21, #0x3ff00
  420f44:	cbnz	w8, 420f7c <_obstack_memory_used@@Base+0xab48>
  420f48:	b	421190 <_obstack_memory_used@@Base+0xad5c>
  420f4c:	str	x8, [sp, #16]
  420f50:	mov	x8, #0xffffffffffffffff    	// #-1
  420f54:	stp	x8, x8, [x29, #-32]
  420f58:	ldrb	w8, [x22, #216]
  420f5c:	tbnz	w8, #6, 420f6c <_obstack_memory_used@@Base+0xab38>
  420f60:	sub	x0, x29, #0x20
  420f64:	mov	w1, #0xa                   	// #10
  420f68:	bl	421408 <_obstack_memory_used@@Base+0xafd4>
  420f6c:	ldrb	w8, [x22, #216]
  420f70:	tbnz	w8, #7, 421040 <_obstack_memory_used@@Base+0xac0c>
  420f74:	and	w8, w21, #0x3ff00
  420f78:	cbz	w8, 421190 <_obstack_memory_used@@Base+0xad5c>
  420f7c:	tbnz	w21, #13, 420fb0 <_obstack_memory_used@@Base+0xab7c>
  420f80:	tbnz	w21, #15, 420fe8 <_obstack_memory_used@@Base+0xabb4>
  420f84:	tbz	w21, #10, 4210e8 <_obstack_memory_used@@Base+0xacb4>
  420f88:	ldr	w8, [sp, #28]
  420f8c:	cmp	w8, #0x1
  420f90:	b.ne	421058 <_obstack_memory_used@@Base+0xac24>  // b.any
  420f94:	ldrb	w8, [x27, #2]
  420f98:	tbnz	w8, #6, 421058 <_obstack_memory_used@@Base+0xac24>
  420f9c:	sub	x0, x29, #0x20
  420fa0:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  420fa4:	mov	w8, #0x4                   	// #4
  420fa8:	cbnz	w8, 421354 <_obstack_memory_used@@Base+0xaf20>
  420fac:	b	4210e8 <_obstack_memory_used@@Base+0xacb4>
  420fb0:	sub	x0, x29, #0x20
  420fb4:	mov	w1, #0xa                   	// #10
  420fb8:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  420fbc:	mov	w24, w0
  420fc0:	sub	x0, x29, #0x20
  420fc4:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  420fc8:	tbz	w24, #0, 420ffc <_obstack_memory_used@@Base+0xabc8>
  420fcc:	sub	x0, x29, #0x20
  420fd0:	mov	w1, #0xa                   	// #10
  420fd4:	bl	41ab60 <_obstack_memory_used@@Base+0x472c>
  420fd8:	mov	w8, wzr
  420fdc:	ldp	x24, x22, [sp]
  420fe0:	cbnz	w8, 421354 <_obstack_memory_used@@Base+0xaf20>
  420fe4:	b	420f80 <_obstack_memory_used@@Base+0xab4c>
  420fe8:	sub	x0, x29, #0x20
  420fec:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  420ff0:	mov	w8, #0x4                   	// #4
  420ff4:	cbnz	w8, 421358 <_obstack_memory_used@@Base+0xaf24>
  420ff8:	b	420ec4 <_obstack_memory_used@@Base+0xaa90>
  420ffc:	mov	w8, #0x4                   	// #4
  421000:	ldp	x24, x22, [sp]
  421004:	cbnz	w8, 421354 <_obstack_memory_used@@Base+0xaf20>
  421008:	b	420f80 <_obstack_memory_used@@Base+0xab4c>
  42100c:	str	x8, [sp, #16]
  421010:	ldr	w8, [x22, #180]
  421014:	cmp	w8, #0x2
  421018:	b.lt	42109c <_obstack_memory_used@@Base+0xac68>  // b.tstop
  42101c:	ldr	x1, [x22, #120]
  421020:	sub	x0, x29, #0x20
  421024:	bl	4213d8 <_obstack_memory_used@@Base+0xafa4>
  421028:	ldrb	w8, [x22, #216]
  42102c:	tbz	w8, #6, 420f60 <_obstack_memory_used@@Base+0xab2c>
  421030:	b	420f6c <_obstack_memory_used@@Base+0xab38>
  421034:	mov	w8, #0x4                   	// #4
  421038:	cbnz	w8, 421358 <_obstack_memory_used@@Base+0xaf24>
  42103c:	b	420ec4 <_obstack_memory_used@@Base+0xaa90>
  421040:	sub	x0, x29, #0x20
  421044:	mov	x1, xzr
  421048:	bl	421408 <_obstack_memory_used@@Base+0xafd4>
  42104c:	and	w8, w21, #0x3ff00
  421050:	cbnz	w8, 420f7c <_obstack_memory_used@@Base+0xab48>
  421054:	b	421190 <_obstack_memory_used@@Base+0xad5c>
  421058:	ldr	w8, [x22, #180]
  42105c:	cmp	w8, #0x1
  421060:	b.le	4210b0 <_obstack_memory_used@@Base+0xac7c>
  421064:	ldr	x10, [x22, #120]
  421068:	mov	x9, xzr
  42106c:	mov	x8, xzr
  421070:	ldr	x11, [x24, x9]
  421074:	ldr	x12, [x10, x9]
  421078:	ldr	x13, [x25, x9]
  42107c:	orn	x11, x11, x12
  421080:	and	x11, x13, x11
  421084:	str	x11, [x25, x9]
  421088:	add	x9, x9, #0x8
  42108c:	cmp	x9, #0x20
  421090:	orr	x8, x11, x8
  421094:	b.ne	421070 <_obstack_memory_used@@Base+0xac3c>  // b.any
  421098:	b	4210d8 <_obstack_memory_used@@Base+0xaca4>
  42109c:	sub	x0, x29, #0x20
  4210a0:	bl	4213fc <_obstack_memory_used@@Base+0xafc8>
  4210a4:	ldrb	w8, [x22, #216]
  4210a8:	tbnz	w8, #6, 420f6c <_obstack_memory_used@@Base+0xab38>
  4210ac:	b	420f60 <_obstack_memory_used@@Base+0xab2c>
  4210b0:	mov	x9, xzr
  4210b4:	mov	x8, xzr
  4210b8:	ldr	x10, [x24, x9]
  4210bc:	ldr	x11, [x25, x9]
  4210c0:	and	x10, x11, x10
  4210c4:	str	x10, [x25, x9]
  4210c8:	add	x9, x9, #0x8
  4210cc:	cmp	x9, #0x20
  4210d0:	orr	x8, x10, x8
  4210d4:	b.ne	4210b8 <_obstack_memory_used@@Base+0xac84>  // b.any
  4210d8:	cmp	x8, #0x0
  4210dc:	cset	w8, eq  // eq = none
  4210e0:	lsl	w8, w8, #2
  4210e4:	cbnz	w8, 421354 <_obstack_memory_used@@Base+0xaf20>
  4210e8:	tbz	w21, #11, 421190 <_obstack_memory_used@@Base+0xad5c>
  4210ec:	ldr	w8, [sp, #28]
  4210f0:	cmp	w8, #0x1
  4210f4:	b.ne	421100 <_obstack_memory_used@@Base+0xaccc>  // b.any
  4210f8:	ldrb	w8, [x27, #2]
  4210fc:	tbnz	w8, #6, 421180 <_obstack_memory_used@@Base+0xad4c>
  421100:	ldr	w8, [x22, #180]
  421104:	cmp	w8, #0x1
  421108:	b.le	421144 <_obstack_memory_used@@Base+0xad10>
  42110c:	ldr	x10, [x22, #120]
  421110:	mov	x9, xzr
  421114:	mov	x8, xzr
  421118:	ldr	x11, [x24, x9]
  42111c:	ldr	x12, [x10, x9]
  421120:	ldr	x13, [x25, x9]
  421124:	and	x11, x12, x11
  421128:	bic	x11, x13, x11
  42112c:	str	x11, [x25, x9]
  421130:	add	x9, x9, #0x8
  421134:	cmp	x9, #0x20
  421138:	orr	x8, x11, x8
  42113c:	b.ne	421118 <_obstack_memory_used@@Base+0xace4>  // b.any
  421140:	b	42116c <_obstack_memory_used@@Base+0xad38>
  421144:	mov	x9, xzr
  421148:	mov	x8, xzr
  42114c:	ldr	x10, [x24, x9]
  421150:	ldr	x11, [x25, x9]
  421154:	bic	x10, x11, x10
  421158:	str	x10, [x25, x9]
  42115c:	add	x9, x9, #0x8
  421160:	cmp	x9, #0x20
  421164:	orr	x8, x10, x8
  421168:	b.ne	42114c <_obstack_memory_used@@Base+0xad18>  // b.any
  42116c:	cmp	x8, #0x0
  421170:	cset	w8, eq  // eq = none
  421174:	lsl	w8, w8, #2
  421178:	cbnz	w8, 421354 <_obstack_memory_used@@Base+0xaf20>
  42117c:	b	421190 <_obstack_memory_used@@Base+0xad5c>
  421180:	sub	x0, x29, #0x20
  421184:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  421188:	mov	w8, #0x4                   	// #4
  42118c:	cbnz	w8, 421354 <_obstack_memory_used@@Base+0xaf20>
  421190:	cmp	x19, #0x1
  421194:	b.lt	4212dc <_obstack_memory_used@@Base+0xaea8>  // b.tstop
  421198:	ldr	x24, [sp, #40]
  42119c:	ldr	w22, [sp, #28]
  4211a0:	mov	x21, xzr
  4211a4:	b	4211b8 <_obstack_memory_used@@Base+0xad84>
  4211a8:	add	x21, x21, #0x1
  4211ac:	cmp	x21, x19
  4211b0:	add	x24, x24, #0x20
  4211b4:	b.ge	4212ec <_obstack_memory_used@@Base+0xaeb8>  // b.tcont
  4211b8:	cmp	w22, #0x1
  4211bc:	b.ne	4211d8 <_obstack_memory_used@@Base+0xada4>  // b.any
  4211c0:	ldr	x8, [sp, #16]
  4211c4:	ldrb	w1, [x8]
  4211c8:	ldr	x8, [sp, #40]
  4211cc:	add	x0, x8, x21, lsl #5
  4211d0:	bl	41e600 <_obstack_memory_used@@Base+0x81cc>
  4211d4:	tbz	w0, #0, 4212b0 <_obstack_memory_used@@Base+0xae7c>
  4211d8:	mov	x9, xzr
  4211dc:	mov	x8, xzr
  4211e0:	ldr	x10, [x25, x9]
  4211e4:	ldr	x11, [x24, x9]
  4211e8:	and	x10, x11, x10
  4211ec:	str	x10, [x28, x9]
  4211f0:	add	x9, x9, #0x8
  4211f4:	cmp	x9, #0x20
  4211f8:	orr	x8, x10, x8
  4211fc:	b.ne	4211e0 <_obstack_memory_used@@Base+0xadac>  // b.any
  421200:	cbz	x8, 4212b0 <_obstack_memory_used@@Base+0xae7c>
  421204:	mov	x22, x20
  421208:	mov	x8, xzr
  42120c:	mov	x27, xzr
  421210:	mov	x9, xzr
  421214:	ldr	x10, [x25, x8]
  421218:	ldr	x11, [x24, x8]
  42121c:	bic	x12, x11, x10
  421220:	bic	x10, x10, x11
  421224:	str	x12, [x23, x8]
  421228:	str	x10, [x25, x8]
  42122c:	add	x8, x8, #0x8
  421230:	orr	x9, x12, x9
  421234:	cmp	x8, #0x20
  421238:	orr	x27, x10, x27
  42123c:	b.ne	421214 <_obstack_memory_used@@Base+0xade0>  // b.any
  421240:	cbz	x9, 42127c <_obstack_memory_used@@Base+0xae48>
  421244:	ldr	x20, [sp, #40]
  421248:	add	x1, sp, #0x30
  42124c:	add	x0, x20, x19, lsl #5
  421250:	bl	421434 <_obstack_memory_used@@Base+0xb000>
  421254:	add	x0, x20, x21, lsl #5
  421258:	sub	x1, x29, #0x40
  42125c:	bl	421434 <_obstack_memory_used@@Base+0xb000>
  421260:	ldr	x8, [sp, #32]
  421264:	mov	w9, #0x18                  	// #24
  421268:	madd	x0, x19, x9, x8
  42126c:	madd	x1, x21, x9, x8
  421270:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  421274:	cbnz	w0, 4212cc <_obstack_memory_used@@Base+0xae98>
  421278:	add	x19, x19, #0x1
  42127c:	mov	x20, x22
  421280:	ldr	x8, [x20, #24]
  421284:	ldr	w22, [sp, #28]
  421288:	mov	w9, #0x18                  	// #24
  42128c:	ldr	x1, [x8, x26, lsl #3]
  421290:	ldr	x8, [sp, #32]
  421294:	madd	x0, x21, x9, x8
  421298:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  42129c:	tbz	w0, #0, 4212c4 <_obstack_memory_used@@Base+0xae90>
  4212a0:	cmp	x27, #0x0
  4212a4:	mov	w8, #0x11                  	// #17
  4212a8:	csel	w8, w8, wzr, eq  // eq = none
  4212ac:	b	4212b4 <_obstack_memory_used@@Base+0xae80>
  4212b0:	mov	w8, #0x13                  	// #19
  4212b4:	cbz	w8, 4211a8 <_obstack_memory_used@@Base+0xad74>
  4212b8:	cmp	w8, #0x13
  4212bc:	b.eq	4211a8 <_obstack_memory_used@@Base+0xad74>  // b.none
  4212c0:	b	4212e4 <_obstack_memory_used@@Base+0xaeb0>
  4212c4:	mov	w8, #0x1a                  	// #26
  4212c8:	b	4212b4 <_obstack_memory_used@@Base+0xae80>
  4212cc:	mov	x20, x22
  4212d0:	ldr	w22, [sp, #28]
  4212d4:	mov	w8, #0x1a                  	// #26
  4212d8:	b	4212b4 <_obstack_memory_used@@Base+0xae80>
  4212dc:	mov	x21, xzr
  4212e0:	b	4212ec <_obstack_memory_used@@Base+0xaeb8>
  4212e4:	cmp	w8, #0x11
  4212e8:	b.ne	421350 <_obstack_memory_used@@Base+0xaf1c>  // b.any
  4212ec:	ldr	x24, [sp]
  4212f0:	cmp	x21, x19
  4212f4:	b.ne	421340 <_obstack_memory_used@@Base+0xaf0c>  // b.any
  4212f8:	ldr	x8, [sp, #40]
  4212fc:	sub	x1, x29, #0x20
  421300:	add	x0, x8, x19, lsl #5
  421304:	bl	421434 <_obstack_memory_used@@Base+0xb000>
  421308:	ldr	x8, [x20, #24]
  42130c:	mov	w9, #0x18                  	// #24
  421310:	ldr	x1, [x8, x26, lsl #3]
  421314:	ldr	x8, [sp, #32]
  421318:	madd	x0, x19, x9, x8
  42131c:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  421320:	ldr	x22, [sp, #8]
  421324:	cbnz	w0, 421364 <_obstack_memory_used@@Base+0xaf30>
  421328:	sub	x0, x29, #0x20
  42132c:	add	x19, x19, #0x1
  421330:	bl	4213cc <_obstack_memory_used@@Base+0xaf98>
  421334:	mov	w8, wzr
  421338:	cbnz	w8, 421358 <_obstack_memory_used@@Base+0xaf24>
  42133c:	b	420ec4 <_obstack_memory_used@@Base+0xaa90>
  421340:	ldr	x22, [sp, #8]
  421344:	mov	w8, wzr
  421348:	cbnz	w8, 421358 <_obstack_memory_used@@Base+0xaf24>
  42134c:	b	420ec4 <_obstack_memory_used@@Base+0xaa90>
  421350:	ldp	x24, x22, [sp]
  421354:	cbz	w8, 420ec4 <_obstack_memory_used@@Base+0xaa90>
  421358:	cmp	w8, #0x4
  42135c:	b.eq	420ec4 <_obstack_memory_used@@Base+0xaa90>  // b.none
  421360:	b	421378 <_obstack_memory_used@@Base+0xaf44>
  421364:	mov	w8, #0x1a                  	// #26
  421368:	cbnz	w8, 421358 <_obstack_memory_used@@Base+0xaf24>
  42136c:	b	420ec4 <_obstack_memory_used@@Base+0xaa90>
  421370:	mov	x19, xzr
  421374:	b	4213a8 <_obstack_memory_used@@Base+0xaf74>
  421378:	cmp	w8, #0x1a
  42137c:	b.ne	4213a8 <_obstack_memory_used@@Base+0xaf74>  // b.any
  421380:	cmp	x19, #0x1
  421384:	b.lt	4213a0 <_obstack_memory_used@@Base+0xaf6c>  // b.tstop
  421388:	ldr	x8, [sp, #32]
  42138c:	add	x20, x8, #0x10
  421390:	ldr	x0, [x20], #24
  421394:	bl	402770 <free@plt>
  421398:	subs	x19, x19, #0x1
  42139c:	b.ne	421390 <_obstack_memory_used@@Base+0xaf5c>  // b.any
  4213a0:	mov	x19, #0xffffffffffffffff    	// #-1
  4213a4:	b	4213a8 <_obstack_memory_used@@Base+0xaf74>
  4213a8:	mov	x0, x19
  4213ac:	ldp	x20, x19, [sp, #224]
  4213b0:	ldp	x22, x21, [sp, #208]
  4213b4:	ldp	x24, x23, [sp, #192]
  4213b8:	ldp	x26, x25, [sp, #176]
  4213bc:	ldp	x28, x27, [sp, #160]
  4213c0:	ldp	x29, x30, [sp, #144]
  4213c4:	add	sp, sp, #0xf0
  4213c8:	ret
  4213cc:	movi	v0.2d, #0x0
  4213d0:	stp	q0, q0, [x0]
  4213d4:	ret
  4213d8:	mov	x8, xzr
  4213dc:	ldr	x9, [x1, x8]
  4213e0:	ldr	x10, [x0, x8]
  4213e4:	orr	x9, x10, x9
  4213e8:	str	x9, [x0, x8]
  4213ec:	add	x8, x8, #0x8
  4213f0:	cmp	x8, #0x20
  4213f4:	b.ne	4213dc <_obstack_memory_used@@Base+0xafa8>  // b.any
  4213f8:	ret
  4213fc:	movi	v0.2d, #0xffffffffffffffff
  421400:	stp	q0, q0, [x0]
  421404:	ret
  421408:	add	x8, x1, #0x3f
  42140c:	cmp	x1, #0x0
  421410:	csel	x8, x8, x1, lt  // lt = tstop
  421414:	asr	x8, x8, #6
  421418:	lsl	x8, x8, #3
  42141c:	ldr	x9, [x0, x8]
  421420:	mov	w10, #0x1                   	// #1
  421424:	lsl	x10, x10, x1
  421428:	bic	x9, x9, x10
  42142c:	str	x9, [x0, x8]
  421430:	ret
  421434:	ldp	q1, q0, [x1]
  421438:	stp	q1, q0, [x0]
  42143c:	ret
  421440:	ldr	x8, [x0]
  421444:	add	x8, x8, x1, lsl #4
  421448:	ldr	w8, [x8, #8]
  42144c:	and	w9, w8, #0xff
  421450:	cmp	w9, #0x2
  421454:	b.ne	421478 <_obstack_memory_used@@Base+0xb044>  // b.any
  421458:	tst	w8, #0x3ff00
  42145c:	b.eq	421480 <_obstack_memory_used@@Base+0xb04c>  // b.none
  421460:	tbnz	w2, #0, 421468 <_obstack_memory_used@@Base+0xb034>
  421464:	tbnz	w8, #10, 421478 <_obstack_memory_used@@Base+0xb044>
  421468:	tbz	w2, #0, 421470 <_obstack_memory_used@@Base+0xb03c>
  42146c:	tbnz	w8, #11, 421478 <_obstack_memory_used@@Base+0xb044>
  421470:	tbnz	w2, #1, 421488 <_obstack_memory_used@@Base+0xb054>
  421474:	tbz	w8, #13, 421488 <_obstack_memory_used@@Base+0xb054>
  421478:	mov	w0, wzr
  42147c:	ret
  421480:	mov	w0, #0x1                   	// #1
  421484:	ret
  421488:	tst	w8, #0x8000
  42148c:	cset	w8, eq  // eq = none
  421490:	and	w9, w2, #0x8
  421494:	orr	w0, w8, w9, lsr #3
  421498:	ret
  42149c:	stp	x1, x2, [x0]
  4214a0:	stp	x3, x4, [x0, #16]
  4214a4:	stp	xzr, xzr, [x0, #40]
  4214a8:	str	xzr, [x0, #32]
  4214ac:	ret
  4214b0:	sub	sp, sp, #0x60
  4214b4:	stp	x29, x30, [sp, #32]
  4214b8:	str	x23, [sp, #48]
  4214bc:	stp	x22, x21, [sp, #64]
  4214c0:	stp	x20, x19, [sp, #80]
  4214c4:	mov	x19, x1
  4214c8:	ldp	x1, x21, [x1, #16]
  4214cc:	mov	x20, x0
  4214d0:	add	x0, sp, #0x8
  4214d4:	add	x29, sp, #0x20
  4214d8:	bl	41c440 <_obstack_memory_used@@Base+0x600c>
  4214dc:	cbnz	w0, 4215a4 <_obstack_memory_used@@Base+0xb170>
  4214e0:	add	x3, sp, #0x8
  4214e4:	mov	x0, x20
  4214e8:	mov	x1, x19
  4214ec:	mov	x2, x21
  4214f0:	bl	421680 <_obstack_memory_used@@Base+0xb24c>
  4214f4:	cbnz	w0, 421568 <_obstack_memory_used@@Base+0xb134>
  4214f8:	mov	w23, wzr
  4214fc:	b	421518 <_obstack_memory_used@@Base+0xb0e4>
  421500:	add	x3, sp, #0x8
  421504:	mov	x0, x20
  421508:	mov	x1, x19
  42150c:	mov	x2, x21
  421510:	bl	421680 <_obstack_memory_used@@Base+0xb24c>
  421514:	cbnz	w0, 421568 <_obstack_memory_used@@Base+0xb134>
  421518:	subs	x8, x21, #0x1
  42151c:	b.lt	42157c <_obstack_memory_used@@Base+0xb148>  // b.tstop
  421520:	ldr	x0, [x19]
  421524:	ldr	w10, [x20, #224]
  421528:	ldr	x9, [x0, x21, lsl #3]
  42152c:	cmp	x9, #0x0
  421530:	csinc	w23, wzr, w23, ne  // ne = any
  421534:	cmp	w23, w10
  421538:	b.gt	421570 <_obstack_memory_used@@Base+0xb13c>
  42153c:	str	xzr, [sp, #16]
  421540:	ldr	x9, [x20, #184]
  421544:	mov	x21, x8
  421548:	ldr	x9, [x9, x8, lsl #3]
  42154c:	cbz	x9, 421500 <_obstack_memory_used@@Base+0xb0cc>
  421550:	add	x3, sp, #0x8
  421554:	mov	x0, x20
  421558:	mov	x1, x19
  42155c:	mov	x2, x21
  421560:	bl	421790 <_obstack_memory_used@@Base+0xb35c>
  421564:	cbz	w0, 421500 <_obstack_memory_used@@Base+0xb0cc>
  421568:	mov	w22, w0
  42156c:	b	421580 <_obstack_memory_used@@Base+0xb14c>
  421570:	lsl	x2, x21, #3
  421574:	mov	w1, wzr
  421578:	bl	4025b0 <memset@plt>
  42157c:	mov	w22, wzr
  421580:	ldr	x0, [sp, #24]
  421584:	bl	402770 <free@plt>
  421588:	mov	w0, w22
  42158c:	ldp	x20, x19, [sp, #80]
  421590:	ldp	x22, x21, [sp, #64]
  421594:	ldr	x23, [sp, #48]
  421598:	ldp	x29, x30, [sp, #32]
  42159c:	add	sp, sp, #0x60
  4215a0:	ret
  4215a4:	mov	w22, w0
  4215a8:	b	421588 <_obstack_memory_used@@Base+0xb154>
  4215ac:	sub	sp, sp, #0x60
  4215b0:	cmp	x3, #0x1
  4215b4:	stp	x29, x30, [sp, #32]
  4215b8:	str	x23, [sp, #48]
  4215bc:	stp	x22, x21, [sp, #64]
  4215c0:	stp	x20, x19, [sp, #80]
  4215c4:	add	x29, sp, #0x20
  4215c8:	b.lt	421660 <_obstack_memory_used@@Base+0xb22c>  // b.tstop
  4215cc:	mov	x19, x3
  4215d0:	mov	x20, x2
  4215d4:	mov	x21, x1
  4215d8:	mov	x22, x0
  4215dc:	b	4215f4 <_obstack_memory_used@@Base+0xb1c0>
  4215e0:	str	x8, [x21]
  4215e4:	subs	x19, x19, #0x1
  4215e8:	add	x20, x20, #0x8
  4215ec:	add	x21, x21, #0x8
  4215f0:	b.eq	421660 <_obstack_memory_used@@Base+0xb22c>  // b.none
  4215f4:	ldr	x9, [x21]
  4215f8:	ldr	x8, [x20]
  4215fc:	cbz	x9, 4215e0 <_obstack_memory_used@@Base+0xb1ac>
  421600:	cbz	x8, 4215e4 <_obstack_memory_used@@Base+0xb1b0>
  421604:	add	x1, x9, #0x8
  421608:	add	x2, x8, #0x8
  42160c:	add	x0, sp, #0x8
  421610:	bl	41f1b8 <_obstack_memory_used@@Base+0x8d84>
  421614:	str	w0, [x29, #28]
  421618:	cbnz	w0, 421650 <_obstack_memory_used@@Base+0xb21c>
  42161c:	add	x0, x29, #0x1c
  421620:	add	x2, sp, #0x8
  421624:	mov	x1, x22
  421628:	bl	420160 <_obstack_memory_used@@Base+0x9d2c>
  42162c:	str	x0, [x21]
  421630:	ldr	x0, [sp, #24]
  421634:	bl	402770 <free@plt>
  421638:	ldr	w9, [x29, #28]
  42163c:	cmp	w9, #0x0
  421640:	cset	w8, eq  // eq = none
  421644:	csel	w23, w23, w9, eq  // eq = none
  421648:	cbnz	w8, 4215e4 <_obstack_memory_used@@Base+0xb1b0>
  42164c:	b	421664 <_obstack_memory_used@@Base+0xb230>
  421650:	mov	w8, wzr
  421654:	mov	w23, w0
  421658:	cbnz	w8, 4215e4 <_obstack_memory_used@@Base+0xb1b0>
  42165c:	b	421664 <_obstack_memory_used@@Base+0xb230>
  421660:	mov	w23, wzr
  421664:	mov	w0, w23
  421668:	ldp	x20, x19, [sp, #80]
  42166c:	ldp	x22, x21, [sp, #64]
  421670:	ldr	x23, [sp, #48]
  421674:	ldp	x29, x30, [sp, #32]
  421678:	add	sp, sp, #0x60
  42167c:	ret
  421680:	stp	x29, x30, [sp, #-80]!
  421684:	stp	x24, x23, [sp, #32]
  421688:	stp	x22, x21, [sp, #48]
  42168c:	stp	x20, x19, [sp, #64]
  421690:	mov	x29, sp
  421694:	ldr	x24, [x0, #152]
  421698:	str	wzr, [x29, #28]
  42169c:	ldr	x8, [x0, #184]
  4216a0:	str	x25, [sp, #16]
  4216a4:	mov	x19, x2
  4216a8:	mov	x20, x1
  4216ac:	ldr	x25, [x8, x2, lsl #3]
  4216b0:	ldr	x8, [x3, #8]
  4216b4:	mov	x21, x0
  4216b8:	add	x9, x25, #0x8
  4216bc:	cmp	x25, #0x0
  4216c0:	csel	x22, xzr, x9, eq  // eq = none
  4216c4:	cbz	x8, 42173c <_obstack_memory_used@@Base+0xb308>
  4216c8:	mov	x23, x3
  4216cc:	cbz	x25, 421714 <_obstack_memory_used@@Base+0xb2e0>
  4216d0:	mov	x0, x24
  4216d4:	mov	x1, x23
  4216d8:	mov	x2, x22
  4216dc:	bl	42190c <_obstack_memory_used@@Base+0xb4d8>
  4216e0:	str	w0, [x29, #28]
  4216e4:	cbnz	w0, 421778 <_obstack_memory_used@@Base+0xb344>
  4216e8:	ldr	x8, [x20, #40]
  4216ec:	cbz	x8, 421714 <_obstack_memory_used@@Base+0xb2e0>
  4216f0:	ldr	x4, [x21, #216]
  4216f4:	add	x3, x20, #0x20
  4216f8:	mov	x0, x24
  4216fc:	mov	x1, x23
  421700:	mov	x2, x22
  421704:	mov	x5, x19
  421708:	bl	4219ec <_obstack_memory_used@@Base+0xb5b8>
  42170c:	str	w0, [x29, #28]
  421710:	cbnz	w0, 421778 <_obstack_memory_used@@Base+0xb344>
  421714:	add	x0, x29, #0x1c
  421718:	mov	x1, x24
  42171c:	mov	x2, x23
  421720:	bl	420160 <_obstack_memory_used@@Base+0x9d2c>
  421724:	ldr	x8, [x20]
  421728:	str	x0, [x8, x19, lsl #3]
  42172c:	ldr	w0, [x29, #28]
  421730:	cbnz	w0, 421778 <_obstack_memory_used@@Base+0xb344>
  421734:	cbnz	x25, 421748 <_obstack_memory_used@@Base+0xb314>
  421738:	b	421774 <_obstack_memory_used@@Base+0xb340>
  42173c:	ldr	x8, [x20]
  421740:	str	xzr, [x8, x19, lsl #3]
  421744:	cbz	x25, 421774 <_obstack_memory_used@@Base+0xb340>
  421748:	ldr	x8, [x21, #184]
  42174c:	ldr	x8, [x8, x19, lsl #3]
  421750:	ldrb	w8, [x8, #104]
  421754:	tbz	w8, #6, 421774 <_obstack_memory_used@@Base+0xb340>
  421758:	mov	x0, x21
  42175c:	mov	x1, x20
  421760:	mov	x2, x19
  421764:	mov	x3, x22
  421768:	bl	421cd0 <_obstack_memory_used@@Base+0xb89c>
  42176c:	str	w0, [x29, #28]
  421770:	cbnz	w0, 421778 <_obstack_memory_used@@Base+0xb344>
  421774:	mov	w0, wzr
  421778:	ldp	x20, x19, [sp, #64]
  42177c:	ldp	x22, x21, [sp, #48]
  421780:	ldp	x24, x23, [sp, #32]
  421784:	ldr	x25, [sp, #16]
  421788:	ldp	x29, x30, [sp], #80
  42178c:	ret
  421790:	stp	x29, x30, [sp, #-96]!
  421794:	stp	x28, x27, [sp, #16]
  421798:	stp	x26, x25, [sp, #32]
  42179c:	stp	x24, x23, [sp, #48]
  4217a0:	stp	x22, x21, [sp, #64]
  4217a4:	stp	x20, x19, [sp, #80]
  4217a8:	ldr	x8, [x0, #184]
  4217ac:	mov	x29, sp
  4217b0:	ldr	x25, [x8, x2, lsl #3]
  4217b4:	ldr	x8, [x25, #40]
  4217b8:	cmp	x8, #0x1
  4217bc:	b.lt	4218e4 <_obstack_memory_used@@Base+0xb4b0>  // b.tstop
  4217c0:	ldr	x27, [x0, #152]
  4217c4:	mov	x19, x3
  4217c8:	mov	x20, x0
  4217cc:	mov	x21, x2
  4217d0:	mov	x22, x1
  4217d4:	mov	x26, xzr
  4217d8:	add	x28, x2, #0x1
  4217dc:	add	x23, x1, #0x20
  4217e0:	ldr	x8, [x25, #48]
  4217e4:	ldr	x24, [x8, x26, lsl #3]
  4217e8:	ldr	x8, [x27]
  4217ec:	add	x8, x8, x24, lsl #4
  4217f0:	ldrb	w8, [x8, #10]
  4217f4:	tbnz	w8, #4, 421804 <_obstack_memory_used@@Base+0xb3d0>
  4217f8:	mov	w0, wzr
  4217fc:	cbnz	w0, 421868 <_obstack_memory_used@@Base+0xb434>
  421800:	b	421820 <_obstack_memory_used@@Base+0xb3ec>
  421804:	ldr	x4, [x22, #24]
  421808:	mov	x0, x20
  42180c:	mov	x1, x22
  421810:	mov	x2, x24
  421814:	mov	x3, x21
  421818:	bl	422760 <_obstack_memory_used@@Base+0xc32c>
  42181c:	cbnz	w0, 421868 <_obstack_memory_used@@Base+0xb434>
  421820:	ldr	x8, [x27]
  421824:	mov	x0, x20
  421828:	mov	x2, x21
  42182c:	add	x1, x8, x24, lsl #4
  421830:	bl	420674 <_obstack_memory_used@@Base+0xa240>
  421834:	tbz	w0, #0, 421864 <_obstack_memory_used@@Base+0xb430>
  421838:	ldr	x8, [x22]
  42183c:	ldr	x8, [x8, x28, lsl #3]
  421840:	cbz	x8, 4218bc <_obstack_memory_used@@Base+0xb488>
  421844:	ldr	x9, [x27, #24]
  421848:	add	x0, x8, #0x8
  42184c:	ldr	x1, [x9, x24, lsl #3]
  421850:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  421854:	cmp	x0, #0x0
  421858:	cset	w0, ne  // ne = any
  42185c:	cbnz	w0, 42186c <_obstack_memory_used@@Base+0xb438>
  421860:	b	4218c4 <_obstack_memory_used@@Base+0xb490>
  421864:	mov	w0, wzr
  421868:	cbz	w0, 4218c4 <_obstack_memory_used@@Base+0xb490>
  42186c:	ldr	x8, [x22, #40]
  421870:	cbz	x8, 4218a4 <_obstack_memory_used@@Base+0xb470>
  421874:	ldr	x8, [x27, #24]
  421878:	add	x3, x21, w0, sxtw
  42187c:	mov	x0, x20
  421880:	mov	x1, x23
  421884:	ldr	x2, [x8, x24, lsl #3]
  421888:	mov	x4, x24
  42188c:	mov	x5, x21
  421890:	bl	422368 <_obstack_memory_used@@Base+0xbf34>
  421894:	tst	w0, #0x1
  421898:	mov	w8, #0x4                   	// #4
  42189c:	csel	w8, w8, wzr, ne  // ne = any
  4218a0:	tbnz	w0, #0, 4218c8 <_obstack_memory_used@@Base+0xb494>
  4218a4:	mov	x0, x19
  4218a8:	mov	x1, x24
  4218ac:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  4218b0:	mvn	w8, w0
  4218b4:	and	w8, w8, #0x1
  4218b8:	b	4218c8 <_obstack_memory_used@@Base+0xb494>
  4218bc:	mov	w0, wzr
  4218c0:	cbnz	w0, 42186c <_obstack_memory_used@@Base+0xb438>
  4218c4:	mov	w8, #0x4                   	// #4
  4218c8:	orr	w8, w8, #0x4
  4218cc:	cmp	w8, #0x4
  4218d0:	b.ne	4218ec <_obstack_memory_used@@Base+0xb4b8>  // b.any
  4218d4:	ldr	x8, [x25, #40]
  4218d8:	add	x26, x26, #0x1
  4218dc:	cmp	x26, x8
  4218e0:	b.lt	4217e0 <_obstack_memory_used@@Base+0xb3ac>  // b.tstop
  4218e4:	mov	w0, wzr
  4218e8:	b	4218f0 <_obstack_memory_used@@Base+0xb4bc>
  4218ec:	mov	w0, #0xc                   	// #12
  4218f0:	ldp	x20, x19, [sp, #80]
  4218f4:	ldp	x22, x21, [sp, #64]
  4218f8:	ldp	x24, x23, [sp, #48]
  4218fc:	ldp	x26, x25, [sp, #32]
  421900:	ldp	x28, x27, [sp, #16]
  421904:	ldp	x29, x30, [sp], #96
  421908:	ret
  42190c:	sub	sp, sp, #0x50
  421910:	stp	x29, x30, [sp, #16]
  421914:	stp	x22, x21, [sp, #48]
  421918:	stp	x20, x19, [sp, #64]
  42191c:	add	x29, sp, #0x10
  421920:	mov	x20, x1
  421924:	mov	x21, x0
  421928:	mov	x19, x2
  42192c:	sub	x0, x29, #0x4
  421930:	mov	x1, x21
  421934:	mov	x2, x20
  421938:	stp	x24, x23, [sp, #32]
  42193c:	stur	wzr, [x29, #-4]
  421940:	bl	420160 <_obstack_memory_used@@Base+0x9d2c>
  421944:	ldur	w8, [x29, #-4]
  421948:	cbnz	w8, 4219c4 <_obstack_memory_used@@Base+0xb590>
  42194c:	mov	x22, x0
  421950:	ldr	x8, [x22, #56]!
  421954:	cbnz	x8, 4219b0 <_obstack_memory_used@@Base+0xb57c>
  421958:	ldr	x1, [x20, #8]
  42195c:	mov	x0, x22
  421960:	bl	41c6e8 <_obstack_memory_used@@Base+0x62b4>
  421964:	stur	w0, [x29, #-4]
  421968:	cbnz	w0, 4219e4 <_obstack_memory_used@@Base+0xb5b0>
  42196c:	ldr	x8, [x20, #8]
  421970:	cmp	x8, #0x1
  421974:	b.lt	4219b0 <_obstack_memory_used@@Base+0xb57c>  // b.tstop
  421978:	mov	x23, xzr
  42197c:	mov	w24, #0x18                  	// #24
  421980:	ldr	x8, [x20, #16]
  421984:	ldr	x9, [x21, #56]
  421988:	mov	x0, x22
  42198c:	ldr	x8, [x8, x23, lsl #3]
  421990:	madd	x1, x8, x24, x9
  421994:	bl	41c950 <_obstack_memory_used@@Base+0x651c>
  421998:	cbnz	w0, 4219e0 <_obstack_memory_used@@Base+0xb5ac>
  42199c:	ldr	x8, [x20, #8]
  4219a0:	add	x23, x23, #0x1
  4219a4:	cmp	x23, x8
  4219a8:	b.lt	421980 <_obstack_memory_used@@Base+0xb54c>  // b.tstop
  4219ac:	stur	w0, [x29, #-4]
  4219b0:	mov	x0, x20
  4219b4:	mov	x1, x19
  4219b8:	mov	x2, x22
  4219bc:	bl	421fa4 <_obstack_memory_used@@Base+0xbb70>
  4219c0:	mov	w8, w0
  4219c4:	ldp	x20, x19, [sp, #64]
  4219c8:	ldp	x22, x21, [sp, #48]
  4219cc:	ldp	x24, x23, [sp, #32]
  4219d0:	ldp	x29, x30, [sp, #16]
  4219d4:	mov	w0, w8
  4219d8:	add	sp, sp, #0x50
  4219dc:	ret
  4219e0:	stur	w0, [x29, #-4]
  4219e4:	mov	w8, #0xc                   	// #12
  4219e8:	b	4219c4 <_obstack_memory_used@@Base+0xb590>
  4219ec:	sub	sp, sp, #0x70
  4219f0:	stp	x29, x30, [sp, #16]
  4219f4:	stp	x28, x27, [sp, #32]
  4219f8:	stp	x26, x25, [sp, #48]
  4219fc:	stp	x24, x23, [sp, #64]
  421a00:	stp	x22, x21, [sp, #80]
  421a04:	stp	x20, x19, [sp, #96]
  421a08:	ldr	x8, [x3, #8]
  421a0c:	add	x29, sp, #0x10
  421a10:	str	x2, [sp, #8]
  421a14:	cmp	x8, #0x1
  421a18:	b.lt	421ca4 <_obstack_memory_used@@Base+0xb870>  // b.tstop
  421a1c:	mov	x19, x5
  421a20:	mov	x20, x4
  421a24:	mov	x21, x3
  421a28:	mov	x23, x1
  421a2c:	mov	x24, x0
  421a30:	mov	x28, xzr
  421a34:	mov	w25, #0x28                  	// #40
  421a38:	ldr	x8, [x21, #16]
  421a3c:	ldr	x8, [x8, x28, lsl #3]
  421a40:	madd	x9, x8, x25, x20
  421a44:	ldr	x9, [x9, #16]
  421a48:	cmp	x9, x19
  421a4c:	b.ge	421a60 <_obstack_memory_used@@Base+0xb62c>  // b.tcont
  421a50:	madd	x9, x8, x25, x20
  421a54:	ldr	x9, [x9, #8]
  421a58:	cmp	x9, x19
  421a5c:	b.ge	421a84 <_obstack_memory_used@@Base+0xb650>  // b.tcont
  421a60:	mov	w8, #0x4                   	// #4
  421a64:	orr	w8, w8, #0x4
  421a68:	cmp	w8, #0x4
  421a6c:	b.ne	421cac <_obstack_memory_used@@Base+0xb878>  // b.any
  421a70:	ldr	x8, [x21, #8]
  421a74:	add	x28, x28, #0x1
  421a78:	cmp	x28, x8
  421a7c:	b.lt	421a38 <_obstack_memory_used@@Base+0xb604>  // b.tstop
  421a80:	b	421ca4 <_obstack_memory_used@@Base+0xb870>
  421a84:	madd	x9, x8, x25, x20
  421a88:	ldr	x10, [x9]
  421a8c:	ldr	x8, [x24]
  421a90:	ldr	x9, [x9, #24]
  421a94:	lsl	x10, x10, #4
  421a98:	ldr	x27, [x8, x10]
  421a9c:	cmp	x9, x19
  421aa0:	b.ne	421b20 <_obstack_memory_used@@Base+0xb6ec>  // b.any
  421aa4:	ldr	x9, [x23, #8]
  421aa8:	cmp	x9, #0x1
  421aac:	b.lt	421bc0 <_obstack_memory_used@@Base+0xb78c>  // b.tstop
  421ab0:	ldp	x11, x10, [x23, #8]
  421ab4:	mov	x9, xzr
  421ab8:	mov	x26, #0xffffffffffffffff    	// #-1
  421abc:	mov	x1, #0xffffffffffffffff    	// #-1
  421ac0:	b	421ae0 <_obstack_memory_used@@Base+0xb6ac>
  421ac4:	lsl	x13, x12, #4
  421ac8:	ldr	x13, [x8, x13]
  421acc:	cmp	x27, x13
  421ad0:	csel	x26, x12, x26, eq  // eq = none
  421ad4:	add	x9, x9, #0x1
  421ad8:	cmp	x9, x11
  421adc:	b.ge	421bc8 <_obstack_memory_used@@Base+0xb794>  // b.tcont
  421ae0:	ldr	x12, [x10, x9, lsl #3]
  421ae4:	add	x13, x8, x12, lsl #4
  421ae8:	ldrb	w13, [x13, #8]
  421aec:	cmp	w13, #0x9
  421af0:	b.eq	421ac4 <_obstack_memory_used@@Base+0xb690>  // b.none
  421af4:	cmp	w13, #0x8
  421af8:	b.ne	421ad4 <_obstack_memory_used@@Base+0xb6a0>  // b.any
  421afc:	lsl	x14, x12, #4
  421b00:	ldr	x14, [x8, x14]
  421b04:	cmp	x27, x14
  421b08:	b.ne	421b14 <_obstack_memory_used@@Base+0xb6e0>  // b.any
  421b0c:	mov	x1, x12
  421b10:	b	421ad4 <_obstack_memory_used@@Base+0xb6a0>
  421b14:	cmp	w13, #0x9
  421b18:	b.ne	421ad4 <_obstack_memory_used@@Base+0xb6a0>  // b.any
  421b1c:	b	421ac4 <_obstack_memory_used@@Base+0xb690>
  421b20:	ldr	x8, [x23, #8]
  421b24:	cmp	x8, #0x1
  421b28:	b.lt	421c88 <_obstack_memory_used@@Base+0xb854>  // b.tstop
  421b2c:	mov	x22, xzr
  421b30:	b	421b68 <_obstack_memory_used@@Base+0xb734>
  421b34:	ldr	x3, [sp, #8]
  421b38:	mov	x0, x24
  421b3c:	mov	x2, x23
  421b40:	bl	422164 <_obstack_memory_used@@Base+0xbd30>
  421b44:	cbnz	w0, 421bac <_obstack_memory_used@@Base+0xb778>
  421b48:	mov	w8, wzr
  421b4c:	cmp	w8, #0xd
  421b50:	b.eq	421b58 <_obstack_memory_used@@Base+0xb724>  // b.none
  421b54:	cbnz	w8, 421a64 <_obstack_memory_used@@Base+0xb630>
  421b58:	ldr	x8, [x23, #8]
  421b5c:	add	x22, x22, #0x1
  421b60:	cmp	x22, x8
  421b64:	b.ge	421c88 <_obstack_memory_used@@Base+0xb854>  // b.tcont
  421b68:	ldr	x8, [x23, #16]
  421b6c:	ldr	x1, [x8, x22, lsl #3]
  421b70:	ldr	x8, [x24]
  421b74:	add	x9, x8, x1, lsl #4
  421b78:	ldr	w9, [x9, #8]
  421b7c:	and	w9, w9, #0xfe
  421b80:	orr	w9, w9, #0x1
  421b84:	cmp	w9, #0x9
  421b88:	b.ne	421b48 <_obstack_memory_used@@Base+0xb714>  // b.any
  421b8c:	lsl	x9, x1, #4
  421b90:	ldr	x8, [x8, x9]
  421b94:	cmp	x27, x8
  421b98:	b.eq	421b34 <_obstack_memory_used@@Base+0xb700>  // b.none
  421b9c:	mov	w8, #0xd                   	// #13
  421ba0:	cmp	w8, #0xd
  421ba4:	b.ne	421b54 <_obstack_memory_used@@Base+0xb720>  // b.any
  421ba8:	b	421b58 <_obstack_memory_used@@Base+0xb724>
  421bac:	mov	w8, #0x1                   	// #1
  421bb0:	str	w0, [sp, #4]
  421bb4:	cmp	w8, #0xd
  421bb8:	b.ne	421b54 <_obstack_memory_used@@Base+0xb720>  // b.any
  421bbc:	b	421b58 <_obstack_memory_used@@Base+0xb724>
  421bc0:	mov	x1, #0xffffffffffffffff    	// #-1
  421bc4:	mov	x26, #0xffffffffffffffff    	// #-1
  421bc8:	tbnz	x1, #63, 421be0 <_obstack_memory_used@@Base+0xb7ac>
  421bcc:	ldr	x3, [sp, #8]
  421bd0:	mov	x0, x24
  421bd4:	mov	x2, x23
  421bd8:	bl	422164 <_obstack_memory_used@@Base+0xbd30>
  421bdc:	cbnz	w0, 421c90 <_obstack_memory_used@@Base+0xb85c>
  421be0:	tbnz	x26, #63, 421c7c <_obstack_memory_used@@Base+0xb848>
  421be4:	ldr	x8, [x23, #8]
  421be8:	cmp	x8, #0x1
  421bec:	b.lt	421c7c <_obstack_memory_used@@Base+0xb848>  // b.tstop
  421bf0:	mov	x22, xzr
  421bf4:	b	421c10 <_obstack_memory_used@@Base+0xb7dc>
  421bf8:	mov	w8, wzr
  421bfc:	cbnz	w8, 421c80 <_obstack_memory_used@@Base+0xb84c>
  421c00:	ldr	x8, [x23, #8]
  421c04:	add	x22, x22, #0x1
  421c08:	cmp	x22, x8
  421c0c:	b.ge	421c7c <_obstack_memory_used@@Base+0xb848>  // b.tcont
  421c10:	ldr	x8, [x23, #16]
  421c14:	mov	w25, #0x18                  	// #24
  421c18:	mov	x1, x26
  421c1c:	ldr	x27, [x8, x22, lsl #3]
  421c20:	ldr	x8, [x24, #56]
  421c24:	madd	x0, x27, x25, x8
  421c28:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  421c2c:	cbnz	x0, 421bf8 <_obstack_memory_used@@Base+0xb7c4>
  421c30:	ldr	x8, [x24, #48]
  421c34:	mov	x1, x26
  421c38:	madd	x0, x27, x25, x8
  421c3c:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  421c40:	cbnz	x0, 421bf8 <_obstack_memory_used@@Base+0xb7c4>
  421c44:	ldr	x3, [sp, #8]
  421c48:	mov	x0, x24
  421c4c:	mov	x1, x27
  421c50:	mov	x2, x23
  421c54:	bl	422164 <_obstack_memory_used@@Base+0xbd30>
  421c58:	ldr	w10, [sp, #4]
  421c5c:	cmp	w0, #0x0
  421c60:	cset	w9, eq  // eq = none
  421c64:	cset	w8, ne  // ne = any
  421c68:	csel	w10, w10, w0, eq  // eq = none
  421c6c:	sub	x22, x22, x9
  421c70:	str	w10, [sp, #4]
  421c74:	cbz	w8, 421c00 <_obstack_memory_used@@Base+0xb7cc>
  421c78:	b	421c80 <_obstack_memory_used@@Base+0xb84c>
  421c7c:	mov	w8, wzr
  421c80:	mov	w25, #0x28                  	// #40
  421c84:	cbnz	w8, 421a64 <_obstack_memory_used@@Base+0xb630>
  421c88:	mov	w8, wzr
  421c8c:	b	421a64 <_obstack_memory_used@@Base+0xb630>
  421c90:	mov	w8, #0x1                   	// #1
  421c94:	str	w0, [sp, #4]
  421c98:	mov	w25, #0x28                  	// #40
  421c9c:	cbnz	w8, 421a64 <_obstack_memory_used@@Base+0xb630>
  421ca0:	b	421c88 <_obstack_memory_used@@Base+0xb854>
  421ca4:	mov	w0, wzr
  421ca8:	b	421cb0 <_obstack_memory_used@@Base+0xb87c>
  421cac:	ldr	w0, [sp, #4]
  421cb0:	ldp	x20, x19, [sp, #96]
  421cb4:	ldp	x22, x21, [sp, #80]
  421cb8:	ldp	x24, x23, [sp, #64]
  421cbc:	ldp	x26, x25, [sp, #48]
  421cc0:	ldp	x28, x27, [sp, #32]
  421cc4:	ldp	x29, x30, [sp, #16]
  421cc8:	add	sp, sp, #0x70
  421ccc:	ret
  421cd0:	sub	sp, sp, #0xe0
  421cd4:	stp	x29, x30, [sp, #128]
  421cd8:	stp	x28, x27, [sp, #144]
  421cdc:	stp	x26, x25, [sp, #160]
  421ce0:	stp	x24, x23, [sp, #176]
  421ce4:	stp	x22, x21, [sp, #192]
  421ce8:	stp	x20, x19, [sp, #208]
  421cec:	ldr	x22, [x0, #152]
  421cf0:	mov	x23, x1
  421cf4:	mov	x1, x2
  421cf8:	add	x29, sp, #0x80
  421cfc:	mov	x19, x3
  421d00:	mov	x20, x2
  421d04:	str	x0, [sp, #56]
  421d08:	bl	41f3b8 <_obstack_memory_used@@Base+0x8f84>
  421d0c:	cmn	x0, #0x1
  421d10:	str	x0, [sp, #32]
  421d14:	b.eq	421f74 <_obstack_memory_used@@Base+0xbb40>  // b.none
  421d18:	str	xzr, [sp, #64]
  421d1c:	ldr	x8, [x19, #8]
  421d20:	cmp	x8, #0x1
  421d24:	b.lt	421f58 <_obstack_memory_used@@Base+0xbb24>  // b.tstop
  421d28:	add	x9, x20, #0x1
  421d2c:	str	x9, [sp]
  421d30:	ldr	x9, [sp, #32]
  421d34:	add	x8, x23, #0x20
  421d38:	str	x8, [sp, #48]
  421d3c:	add	x8, sp, #0x40
  421d40:	add	x9, x9, x9, lsl #2
  421d44:	add	x8, x8, #0x20
  421d48:	mov	x28, xzr
  421d4c:	str	x8, [sp, #40]
  421d50:	lsl	x8, x9, #3
  421d54:	stp	x8, x19, [sp, #16]
  421d58:	b	421d6c <_obstack_memory_used@@Base+0xb938>
  421d5c:	ldr	x8, [x19, #8]
  421d60:	add	x28, x28, #0x1
  421d64:	cmp	x28, x8
  421d68:	b.ge	421f58 <_obstack_memory_used@@Base+0xbb24>  // b.tcont
  421d6c:	ldr	x8, [x19, #16]
  421d70:	ldr	x9, [x23, #16]
  421d74:	ldr	x26, [x8, x28, lsl #3]
  421d78:	ldr	x8, [x22]
  421d7c:	cmp	x26, x9
  421d80:	add	x8, x8, x26, lsl #4
  421d84:	ldrb	w8, [x8, #8]
  421d88:	b.ne	421da8 <_obstack_memory_used@@Base+0xb974>  // b.any
  421d8c:	cmp	w8, #0x4
  421d90:	mov	w8, #0x4                   	// #4
  421d94:	b.ne	421f3c <_obstack_memory_used@@Base+0xbb08>  // b.any
  421d98:	ldr	x9, [x23, #24]
  421d9c:	cmp	x9, x20
  421da0:	b.ne	421db0 <_obstack_memory_used@@Base+0xb97c>  // b.any
  421da4:	b	421f3c <_obstack_memory_used@@Base+0xbb08>
  421da8:	cmp	w8, #0x4
  421dac:	b.ne	421f4c <_obstack_memory_used@@Base+0xbb18>  // b.any
  421db0:	ldr	x8, [sp, #56]
  421db4:	ldr	x24, [sp, #32]
  421db8:	ldr	x19, [sp, #16]
  421dbc:	mov	w9, #0x28                  	// #40
  421dc0:	ldr	x8, [x8, #216]
  421dc4:	madd	x21, x24, x9, x8
  421dc8:	b	421de0 <_obstack_memory_used@@Base+0xb9ac>
  421dcc:	ldrb	w8, [x21, #32]
  421dd0:	add	x24, x24, #0x1
  421dd4:	add	x21, x21, #0x28
  421dd8:	add	x19, x19, #0x28
  421ddc:	cbz	w8, 421f38 <_obstack_memory_used@@Base+0xbb04>
  421de0:	ldr	x8, [x21]
  421de4:	cmp	x8, x26
  421de8:	b.ne	421e60 <_obstack_memory_used@@Base+0xba2c>  // b.any
  421dec:	ldp	x9, x8, [x21, #16]
  421df0:	subs	x8, x8, x9
  421df4:	add	x25, x8, x20
  421df8:	b.eq	421e08 <_obstack_memory_used@@Base+0xb9d4>  // b.none
  421dfc:	ldr	x8, [x22, #24]
  421e00:	add	x8, x8, x26, lsl #3
  421e04:	b	421e18 <_obstack_memory_used@@Base+0xb9e4>
  421e08:	ldr	x8, [x22, #40]
  421e0c:	mov	w9, #0x18                  	// #24
  421e10:	madd	x8, x26, x9, x8
  421e14:	ldr	x8, [x8, #16]
  421e18:	ldr	x9, [x23, #24]
  421e1c:	cmp	x25, x9
  421e20:	b.gt	421e60 <_obstack_memory_used@@Base+0xba2c>
  421e24:	ldr	x9, [x23]
  421e28:	ldr	x9, [x9, x25, lsl #3]
  421e2c:	cbz	x9, 421e60 <_obstack_memory_used@@Base+0xba2c>
  421e30:	ldr	x27, [x8]
  421e34:	add	x0, x9, #0x8
  421e38:	mov	x1, x27
  421e3c:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  421e40:	cbz	x0, 421e60 <_obstack_memory_used@@Base+0xba2c>
  421e44:	ldp	x1, x0, [sp, #48]
  421e48:	mov	x2, x26
  421e4c:	mov	x3, x20
  421e50:	mov	x4, x27
  421e54:	mov	x5, x25
  421e58:	bl	422368 <_obstack_memory_used@@Base+0xbf34>
  421e5c:	tbz	w0, #0, 421e74 <_obstack_memory_used@@Base+0xba40>
  421e60:	mov	w8, #0x6                   	// #6
  421e64:	cmp	w8, #0x6
  421e68:	b.eq	421dcc <_obstack_memory_used@@Base+0xb998>  // b.none
  421e6c:	cbz	w8, 421dcc <_obstack_memory_used@@Base+0xb998>
  421e70:	b	421f38 <_obstack_memory_used@@Base+0xbb04>
  421e74:	ldr	x8, [sp, #64]
  421e78:	cbnz	x8, 421ea0 <_obstack_memory_used@@Base+0xba6c>
  421e7c:	ldr	x8, [x23, #48]
  421e80:	ldp	q1, q0, [x23, #16]
  421e84:	ldr	q2, [x23]
  421e88:	ldp	x0, x1, [sp, #40]
  421e8c:	str	x8, [sp, #112]
  421e90:	stp	q1, q0, [sp, #80]
  421e94:	str	q2, [sp, #64]
  421e98:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  421e9c:	cbnz	w0, 421f1c <_obstack_memory_used@@Base+0xbae8>
  421ea0:	ldr	x0, [sp, #40]
  421ea4:	mov	x1, x24
  421ea8:	stp	x26, x20, [sp, #80]
  421eac:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  421eb0:	tbz	w0, #0, 421f28 <_obstack_memory_used@@Base+0xbaf4>
  421eb4:	ldp	x0, x25, [sp, #56]
  421eb8:	add	x1, sp, #0x40
  421ebc:	ldr	x27, [x25, x20, lsl #3]
  421ec0:	bl	4214b0 <_obstack_memory_used@@Base+0xb07c>
  421ec4:	cbnz	w0, 421f1c <_obstack_memory_used@@Base+0xbae8>
  421ec8:	ldr	x1, [x23, #8]
  421ecc:	cbz	x1, 421ee4 <_obstack_memory_used@@Base+0xbab0>
  421ed0:	ldr	x3, [sp]
  421ed4:	mov	x0, x22
  421ed8:	mov	x2, x25
  421edc:	bl	4215ac <_obstack_memory_used@@Base+0xb178>
  421ee0:	cbnz	w0, 421f1c <_obstack_memory_used@@Base+0xbae8>
  421ee4:	ldr	x21, [sp, #40]
  421ee8:	str	w0, [sp, #12]
  421eec:	mov	x1, x24
  421ef0:	str	x27, [x25, x20, lsl #3]
  421ef4:	mov	x0, x21
  421ef8:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  421efc:	sub	x1, x0, #0x1
  421f00:	mov	x0, x21
  421f04:	bl	41d19c <_obstack_memory_used@@Base+0x6d68>
  421f08:	ldr	x9, [sp, #56]
  421f0c:	mov	w8, wzr
  421f10:	ldr	x9, [x9, #216]
  421f14:	add	x21, x9, x19
  421f18:	b	421e64 <_obstack_memory_used@@Base+0xba30>
  421f1c:	str	w0, [sp, #12]
  421f20:	mov	w8, #0x7                   	// #7
  421f24:	b	421e64 <_obstack_memory_used@@Base+0xba30>
  421f28:	mov	w8, #0xc                   	// #12
  421f2c:	str	w8, [sp, #12]
  421f30:	mov	w8, #0x7                   	// #7
  421f34:	b	421e64 <_obstack_memory_used@@Base+0xba30>
  421f38:	ldr	x19, [sp, #24]
  421f3c:	cbz	w8, 421d5c <_obstack_memory_used@@Base+0xb928>
  421f40:	cmp	w8, #0x4
  421f44:	b.eq	421d5c <_obstack_memory_used@@Base+0xb928>  // b.none
  421f48:	b	421f7c <_obstack_memory_used@@Base+0xbb48>
  421f4c:	mov	w8, #0x4                   	// #4
  421f50:	cbnz	w8, 421f40 <_obstack_memory_used@@Base+0xbb0c>
  421f54:	b	421d5c <_obstack_memory_used@@Base+0xb928>
  421f58:	str	wzr, [sp, #12]
  421f5c:	ldr	x8, [sp, #64]
  421f60:	cbz	x8, 421f6c <_obstack_memory_used@@Base+0xbb38>
  421f64:	ldr	x0, [sp, #112]
  421f68:	bl	402770 <free@plt>
  421f6c:	ldr	w0, [sp, #12]
  421f70:	b	421f84 <_obstack_memory_used@@Base+0xbb50>
  421f74:	mov	w0, wzr
  421f78:	b	421f84 <_obstack_memory_used@@Base+0xbb50>
  421f7c:	cmp	w8, #0x7
  421f80:	b.eq	421f5c <_obstack_memory_used@@Base+0xbb28>  // b.none
  421f84:	ldp	x20, x19, [sp, #208]
  421f88:	ldp	x22, x21, [sp, #192]
  421f8c:	ldp	x24, x23, [sp, #176]
  421f90:	ldp	x26, x25, [sp, #160]
  421f94:	ldp	x28, x27, [sp, #144]
  421f98:	ldp	x29, x30, [sp, #128]
  421f9c:	add	sp, sp, #0xe0
  421fa0:	ret
  421fa4:	stp	x29, x30, [sp, #-48]!
  421fa8:	stp	x22, x21, [sp, #16]
  421fac:	stp	x20, x19, [sp, #32]
  421fb0:	ldr	x8, [x1, #8]
  421fb4:	mov	x29, sp
  421fb8:	cbz	x8, 422148 <_obstack_memory_used@@Base+0xbd14>
  421fbc:	ldr	x10, [x2, #8]
  421fc0:	mov	x20, x2
  421fc4:	cbz	x10, 422148 <_obstack_memory_used@@Base+0xbd14>
  421fc8:	ldp	x9, x11, [x0]
  421fcc:	add	x8, x10, x8
  421fd0:	mov	x21, x1
  421fd4:	mov	x19, x0
  421fd8:	add	x10, x11, x8
  421fdc:	cmp	x10, x9
  421fe0:	b.le	422000 <_obstack_memory_used@@Base+0xbbcc>
  421fe4:	ldr	x0, [x19, #16]
  421fe8:	add	x22, x9, x8
  421fec:	lsl	x1, x22, #3
  421ff0:	bl	402610 <realloc@plt>
  421ff4:	cbz	x0, 42215c <_obstack_memory_used@@Base+0xbd28>
  421ff8:	str	x0, [x19, #16]
  421ffc:	str	x22, [x19]
  422000:	ldr	x13, [x19, #8]
  422004:	ldp	x8, x9, [x21, #8]
  422008:	ldp	x14, x10, [x20, #8]
  42200c:	add	x15, x8, x13
  422010:	sub	x12, x8, #0x1
  422014:	sub	x11, x14, #0x1
  422018:	add	x8, x15, x14
  42201c:	sub	x13, x13, #0x1
  422020:	ldr	x14, [x9, x12, lsl #3]
  422024:	ldr	x15, [x10, x11, lsl #3]
  422028:	cmp	x14, x15
  42202c:	b.eq	422044 <_obstack_memory_used@@Base+0xbc10>  // b.none
  422030:	b.lt	4220a0 <_obstack_memory_used@@Base+0xbc6c>  // b.tstop
  422034:	cmp	x12, #0x0
  422038:	sub	x12, x12, #0x1
  42203c:	b.gt	422020 <_obstack_memory_used@@Base+0xbbec>
  422040:	b	4220a8 <_obstack_memory_used@@Base+0xbc74>
  422044:	tbnz	x13, #63, 42206c <_obstack_memory_used@@Base+0xbc38>
  422048:	ldr	x15, [x19, #16]
  42204c:	mov	x16, x13
  422050:	ldr	x13, [x15, x16, lsl #3]
  422054:	cmp	x13, x14
  422058:	b.le	422074 <_obstack_memory_used@@Base+0xbc40>
  42205c:	sub	x13, x16, #0x1
  422060:	cmp	x16, #0x0
  422064:	mov	x16, x13
  422068:	b.gt	422050 <_obstack_memory_used@@Base+0xbc1c>
  42206c:	tbz	x13, #63, 42207c <_obstack_memory_used@@Base+0xbc48>
  422070:	b	42208c <_obstack_memory_used@@Base+0xbc58>
  422074:	mov	x13, x16
  422078:	tbnz	x13, #63, 42208c <_obstack_memory_used@@Base+0xbc58>
  42207c:	ldr	x15, [x19, #16]
  422080:	ldr	x15, [x15, x13, lsl #3]
  422084:	cmp	x15, x14
  422088:	b.eq	422098 <_obstack_memory_used@@Base+0xbc64>  // b.none
  42208c:	ldr	x15, [x19, #16]
  422090:	sub	x8, x8, #0x1
  422094:	str	x14, [x15, x8, lsl #3]
  422098:	subs	x12, x12, #0x1
  42209c:	b.lt	4220a8 <_obstack_memory_used@@Base+0xbc74>  // b.tstop
  4220a0:	subs	x11, x11, #0x1
  4220a4:	b.ge	422020 <_obstack_memory_used@@Base+0xbbec>  // b.tcont
  4220a8:	ldr	x13, [x19, #8]
  4220ac:	ldr	x14, [x21, #8]
  4220b0:	ldr	x15, [x20, #8]
  4220b4:	subs	x11, x13, #0x1
  4220b8:	add	x9, x13, x14
  4220bc:	add	x9, x9, x15
  4220c0:	sub	x10, x9, #0x1
  4220c4:	sub	x12, x10, x8
  4220c8:	add	x9, x12, #0x1
  4220cc:	add	x16, x9, x13
  4220d0:	str	x16, [x19, #8]
  4220d4:	b.lt	422134 <_obstack_memory_used@@Base+0xbd00>  // b.tstop
  4220d8:	tbnz	x12, #63, 422134 <_obstack_memory_used@@Base+0xbd00>
  4220dc:	ldr	x12, [x19, #16]
  4220e0:	add	x13, x13, x15
  4220e4:	add	x13, x13, x14
  4220e8:	sub	x13, x13, x8
  4220ec:	add	x13, x12, x13, lsl #3
  4220f0:	ldr	x15, [x12, x10, lsl #3]
  4220f4:	ldr	x14, [x12, x11, lsl #3]
  4220f8:	cmp	x15, x14
  4220fc:	b.gt	422118 <_obstack_memory_used@@Base+0xbce4>
  422100:	sub	x15, x11, #0x1
  422104:	cmp	x11, #0x0
  422108:	str	x14, [x13, x11, lsl #3]
  42210c:	mov	x11, x15
  422110:	b.gt	4220f0 <_obstack_memory_used@@Base+0xbcbc>
  422114:	b	422134 <_obstack_memory_used@@Base+0xbd00>
  422118:	mov	x14, xzr
  42211c:	sub	x10, x10, #0x1
  422120:	sub	x9, x9, #0x1
  422124:	str	x15, [x13, x11, lsl #3]
  422128:	sub	x13, x13, #0x8
  42212c:	cbnz	x9, 4220f0 <_obstack_memory_used@@Base+0xbcbc>
  422130:	b	422138 <_obstack_memory_used@@Base+0xbd04>
  422134:	mov	x14, x9
  422138:	ldr	x0, [x19, #16]
  42213c:	lsl	x2, x14, #3
  422140:	add	x1, x0, x8, lsl #3
  422144:	bl	402320 <memcpy@plt>
  422148:	mov	w0, wzr
  42214c:	ldp	x20, x19, [sp, #32]
  422150:	ldp	x22, x21, [sp, #16]
  422154:	ldp	x29, x30, [sp], #48
  422158:	ret
  42215c:	mov	w0, #0xc                   	// #12
  422160:	b	42214c <_obstack_memory_used@@Base+0xbd18>
  422164:	sub	sp, sp, #0x90
  422168:	stp	x29, x30, [sp, #48]
  42216c:	stp	x28, x27, [sp, #64]
  422170:	stp	x26, x25, [sp, #80]
  422174:	stp	x24, x23, [sp, #96]
  422178:	stp	x22, x21, [sp, #112]
  42217c:	stp	x20, x19, [sp, #128]
  422180:	ldr	x9, [x0, #56]
  422184:	mov	w8, #0x18                  	// #24
  422188:	stp	xzr, xzr, [sp, #24]
  42218c:	str	xzr, [sp, #40]
  422190:	madd	x23, x1, x8, x9
  422194:	stp	x3, x9, [sp, #8]
  422198:	mov	x27, x23
  42219c:	ldr	x8, [x27, #8]!
  4221a0:	mov	x20, x1
  4221a4:	mov	x19, x2
  4221a8:	add	x29, sp, #0x30
  4221ac:	cmp	x8, #0x1
  4221b0:	b.lt	4222cc <_obstack_memory_used@@Base+0xbe98>  // b.tstop
  4221b4:	ldr	x8, [sp, #16]
  4221b8:	mov	w9, #0x18                  	// #24
  4221bc:	mov	x22, x0
  4221c0:	mov	x21, xzr
  4221c4:	madd	x8, x20, x9, x8
  4221c8:	add	x24, x8, #0x10
  4221cc:	ldr	x8, [x24]
  4221d0:	ldr	x28, [x8, x21, lsl #3]
  4221d4:	cmp	x28, x20
  4221d8:	b.ne	4221e4 <_obstack_memory_used@@Base+0xbdb0>  // b.any
  4221dc:	mov	w8, #0x4                   	// #4
  4221e0:	b	422290 <_obstack_memory_used@@Base+0xbe5c>
  4221e4:	ldr	x8, [x22]
  4221e8:	add	x8, x8, x28, lsl #4
  4221ec:	ldrb	w8, [x8, #8]
  4221f0:	tbz	w8, #3, 42228c <_obstack_memory_used@@Base+0xbe58>
  4221f4:	ldr	x8, [x22, #40]
  4221f8:	mov	w9, #0x18                  	// #24
  4221fc:	madd	x9, x28, x9, x8
  422200:	ldp	x9, x8, [x9, #8]
  422204:	ldr	x26, [x8]
  422208:	cmp	x9, #0x2
  42220c:	b.lt	422218 <_obstack_memory_used@@Base+0xbde4>  // b.tstop
  422210:	ldr	x25, [x8, #8]
  422214:	b	42221c <_obstack_memory_used@@Base+0xbde8>
  422218:	mov	x25, #0xffffffffffffffff    	// #-1
  42221c:	mov	x0, x23
  422220:	mov	x1, x26
  422224:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422228:	cbz	x0, 422258 <_obstack_memory_used@@Base+0xbe24>
  42222c:	cmp	x25, #0x1
  422230:	b.lt	422284 <_obstack_memory_used@@Base+0xbe50>  // b.tstop
  422234:	mov	x0, x23
  422238:	mov	x1, x25
  42223c:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422240:	cbnz	x0, 422284 <_obstack_memory_used@@Base+0xbe50>
  422244:	mov	x0, x19
  422248:	mov	x1, x25
  42224c:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422250:	cbnz	x0, 422268 <_obstack_memory_used@@Base+0xbe34>
  422254:	b	422284 <_obstack_memory_used@@Base+0xbe50>
  422258:	mov	x0, x19
  42225c:	mov	x1, x26
  422260:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422264:	cbz	x0, 42222c <_obstack_memory_used@@Base+0xbdf8>
  422268:	ldr	x8, [x22, #56]
  42226c:	ldr	x1, [sp, #8]
  422270:	mov	w9, #0x18                  	// #24
  422274:	add	x0, sp, #0x18
  422278:	madd	x2, x28, x9, x8
  42227c:	bl	421fa4 <_obstack_memory_used@@Base+0xbb70>
  422280:	cbnz	w0, 4222b0 <_obstack_memory_used@@Base+0xbe7c>
  422284:	mov	w8, wzr
  422288:	cbnz	w8, 422290 <_obstack_memory_used@@Base+0xbe5c>
  42228c:	mov	w8, wzr
  422290:	orr	w8, w8, #0x4
  422294:	cmp	w8, #0x4
  422298:	b.ne	422344 <_obstack_memory_used@@Base+0xbf10>  // b.any
  42229c:	ldr	x8, [x27]
  4222a0:	add	x21, x21, #0x1
  4222a4:	cmp	x21, x8
  4222a8:	b.lt	4221cc <_obstack_memory_used@@Base+0xbd98>  // b.tstop
  4222ac:	b	4222cc <_obstack_memory_used@@Base+0xbe98>
  4222b0:	mov	w25, w0
  4222b4:	ldr	x0, [sp, #40]
  4222b8:	bl	402770 <free@plt>
  4222bc:	mov	w8, #0x1                   	// #1
  4222c0:	str	w25, [sp, #4]
  4222c4:	cbnz	w8, 422290 <_obstack_memory_used@@Base+0xbe5c>
  4222c8:	b	42228c <_obstack_memory_used@@Base+0xbe58>
  4222cc:	ldr	x8, [x27]
  4222d0:	cmp	x8, #0x1
  4222d4:	b.lt	422334 <_obstack_memory_used@@Base+0xbf00>  // b.tstop
  4222d8:	ldr	x9, [sp, #16]
  4222dc:	mov	w8, #0x18                  	// #24
  4222e0:	mov	x21, xzr
  4222e4:	madd	x8, x20, x8, x9
  4222e8:	add	x22, x8, #0x10
  4222ec:	b	422300 <_obstack_memory_used@@Base+0xbecc>
  4222f0:	ldr	x8, [x27]
  4222f4:	add	x21, x21, #0x1
  4222f8:	cmp	x21, x8
  4222fc:	b.ge	422334 <_obstack_memory_used@@Base+0xbf00>  // b.tcont
  422300:	ldr	x8, [x22]
  422304:	add	x0, sp, #0x18
  422308:	ldr	x20, [x8, x21, lsl #3]
  42230c:	mov	x1, x20
  422310:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422314:	cbnz	x0, 4222f0 <_obstack_memory_used@@Base+0xbebc>
  422318:	mov	x0, x19
  42231c:	mov	x1, x20
  422320:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422324:	sub	x1, x0, #0x1
  422328:	mov	x0, x19
  42232c:	bl	41d19c <_obstack_memory_used@@Base+0x6d68>
  422330:	b	4222f0 <_obstack_memory_used@@Base+0xbebc>
  422334:	ldr	x0, [sp, #40]
  422338:	bl	402770 <free@plt>
  42233c:	mov	w0, wzr
  422340:	b	422348 <_obstack_memory_used@@Base+0xbf14>
  422344:	ldr	w0, [sp, #4]
  422348:	ldp	x20, x19, [sp, #128]
  42234c:	ldp	x22, x21, [sp, #112]
  422350:	ldp	x24, x23, [sp, #96]
  422354:	ldp	x26, x25, [sp, #80]
  422358:	ldp	x28, x27, [sp, #64]
  42235c:	ldp	x29, x30, [sp, #48]
  422360:	add	sp, sp, #0x90
  422364:	ret
  422368:	sub	sp, sp, #0x70
  42236c:	stp	x24, x23, [sp, #64]
  422370:	mov	x23, x1
  422374:	mov	x1, x3
  422378:	stp	x29, x30, [sp, #16]
  42237c:	stp	x28, x27, [sp, #32]
  422380:	stp	x26, x25, [sp, #48]
  422384:	stp	x22, x21, [sp, #80]
  422388:	stp	x20, x19, [sp, #96]
  42238c:	add	x29, sp, #0x10
  422390:	mov	x19, x5
  422394:	stp	x2, x4, [sp]
  422398:	mov	x21, x3
  42239c:	mov	x24, x0
  4223a0:	bl	41f3b8 <_obstack_memory_used@@Base+0x8f84>
  4223a4:	mov	x25, x0
  4223a8:	mov	x0, x24
  4223ac:	mov	x1, x19
  4223b0:	bl	41f3b8 <_obstack_memory_used@@Base+0x8f84>
  4223b4:	ldr	x8, [x23, #8]
  4223b8:	cmp	x8, #0x1
  4223bc:	b.lt	422448 <_obstack_memory_used@@Base+0xc014>  // b.tstop
  4223c0:	ldr	x22, [x24, #152]
  4223c4:	mov	x26, x0
  4223c8:	mov	x20, xzr
  4223cc:	ldr	x8, [x23, #16]
  4223d0:	lsl	x28, x20, #3
  4223d4:	mov	w9, #0x28                  	// #40
  4223d8:	ldr	x3, [sp]
  4223dc:	ldr	x1, [x8, x28]
  4223e0:	ldr	x8, [x24, #216]
  4223e4:	mov	x0, x24
  4223e8:	mov	x4, x21
  4223ec:	mul	x9, x1, x9
  4223f0:	ldr	x8, [x8, x9]
  4223f4:	ldr	x9, [x22]
  4223f8:	mov	x5, x25
  4223fc:	lsl	x8, x8, #4
  422400:	ldr	x27, [x9, x8]
  422404:	mov	x2, x27
  422408:	bl	422474 <_obstack_memory_used@@Base+0xc040>
  42240c:	ldr	x8, [x23, #16]
  422410:	ldr	x3, [sp, #8]
  422414:	mov	x2, x27
  422418:	mov	x4, x19
  42241c:	ldr	x1, [x8, x28]
  422420:	mov	w28, w0
  422424:	mov	x0, x24
  422428:	mov	x5, x26
  42242c:	bl	422474 <_obstack_memory_used@@Base+0xc040>
  422430:	cmp	w0, w28
  422434:	b.ne	422450 <_obstack_memory_used@@Base+0xc01c>  // b.any
  422438:	ldr	x8, [x23, #8]
  42243c:	add	x20, x20, #0x1
  422440:	cmp	x20, x8
  422444:	b.lt	4223cc <_obstack_memory_used@@Base+0xbf98>  // b.tstop
  422448:	mov	w0, wzr
  42244c:	b	422454 <_obstack_memory_used@@Base+0xc020>
  422450:	mov	w0, #0x1                   	// #1
  422454:	ldp	x20, x19, [sp, #96]
  422458:	ldp	x22, x21, [sp, #80]
  42245c:	ldp	x24, x23, [sp, #64]
  422460:	ldp	x26, x25, [sp, #48]
  422464:	ldp	x28, x27, [sp, #32]
  422468:	ldp	x29, x30, [sp, #16]
  42246c:	add	sp, sp, #0x70
  422470:	ret
  422474:	stp	x29, x30, [sp, #-16]!
  422478:	ldr	x9, [x0, #216]
  42247c:	mov	w8, #0x28                  	// #40
  422480:	mov	x29, sp
  422484:	madd	x8, x1, x8, x9
  422488:	ldr	x8, [x8, #16]
  42248c:	cmp	x8, x4
  422490:	b.le	4224a0 <_obstack_memory_used@@Base+0xc06c>
  422494:	mov	w0, #0xffffffff            	// #-1
  422498:	ldp	x29, x30, [sp], #16
  42249c:	ret
  4224a0:	mov	w10, #0x28                  	// #40
  4224a4:	madd	x9, x1, x10, x9
  4224a8:	ldr	x9, [x9, #24]
  4224ac:	cmp	x9, x4
  4224b0:	b.ge	4224c0 <_obstack_memory_used@@Base+0xc08c>  // b.tcont
  4224b4:	mov	w0, #0x1                   	// #1
  4224b8:	ldp	x29, x30, [sp], #16
  4224bc:	ret
  4224c0:	cmp	x8, x4
  4224c4:	cset	w1, eq  // eq = none
  4224c8:	cmp	x9, x4
  4224cc:	cset	w8, eq  // eq = none
  4224d0:	bfi	w1, w8, #1, #1
  4224d4:	cbz	w1, 4224e8 <_obstack_memory_used@@Base+0xc0b4>
  4224d8:	mov	x4, x5
  4224dc:	bl	4224f4 <_obstack_memory_used@@Base+0xc0c0>
  4224e0:	ldp	x29, x30, [sp], #16
  4224e4:	ret
  4224e8:	mov	w0, wzr
  4224ec:	ldp	x29, x30, [sp], #16
  4224f0:	ret
  4224f4:	sub	sp, sp, #0x90
  4224f8:	stp	x29, x30, [sp, #48]
  4224fc:	stp	x28, x27, [sp, #64]
  422500:	stp	x26, x25, [sp, #80]
  422504:	stp	x24, x23, [sp, #96]
  422508:	stp	x22, x21, [sp, #112]
  42250c:	stp	x20, x19, [sp, #128]
  422510:	ldr	x25, [x0, #152]
  422514:	add	x29, sp, #0x30
  422518:	mov	w9, #0x18                  	// #24
  42251c:	stur	x0, [x29, #-8]
  422520:	ldr	x8, [x25, #48]
  422524:	madd	x26, x3, x9, x8
  422528:	ldr	x9, [x26, #8]!
  42252c:	cmp	x9, #0x1
  422530:	ubfx	w9, w1, #1, #1
  422534:	str	w9, [sp, #24]
  422538:	b.lt	422738 <_obstack_memory_used@@Base+0xc304>  // b.tstop
  42253c:	mov	w11, #0x18                  	// #24
  422540:	madd	x8, x3, x11, x8
  422544:	add	x12, x8, #0x10
  422548:	ldr	w8, [sp, #24]
  42254c:	and	w10, w1, #0x2
  422550:	cmp	x2, #0x3f
  422554:	str	w10, [sp, #20]
  422558:	sbfx	w10, w1, #0, #1
  42255c:	mov	w9, #0x1                   	// #1
  422560:	stur	w10, [x29, #-20]
  422564:	cset	w10, gt
  422568:	lsl	x9, x9, x2
  42256c:	orr	w8, w8, w10
  422570:	str	w8, [sp, #16]
  422574:	mvn	w8, w9
  422578:	mov	x20, x3
  42257c:	mov	x21, x2
  422580:	mov	w22, w1
  422584:	mov	x28, xzr
  422588:	stur	x9, [x29, #-16]
  42258c:	str	w8, [sp, #12]
  422590:	str	x12, [sp]
  422594:	b	4225b0 <_obstack_memory_used@@Base+0xc17c>
  422598:	mov	w8, wzr
  42259c:	cbnz	wzr, 42273c <_obstack_memory_used@@Base+0xc308>
  4225a0:	ldr	x8, [x26]
  4225a4:	add	x28, x28, #0x1
  4225a8:	cmp	x28, x8
  4225ac:	b.ge	422738 <_obstack_memory_used@@Base+0xc304>  // b.tcont
  4225b0:	ldr	x8, [x12]
  4225b4:	ldr	x23, [x8, x28, lsl #3]
  4225b8:	ldr	x8, [x25]
  4225bc:	add	x8, x8, x23, lsl #4
  4225c0:	ldrb	w9, [x8, #8]
  4225c4:	cmp	w9, #0x9
  4225c8:	b.eq	4226ec <_obstack_memory_used@@Base+0xc2b8>  // b.none
  4225cc:	cmp	w9, #0x8
  4225d0:	b.eq	422708 <_obstack_memory_used@@Base+0xc2d4>  // b.none
  4225d4:	cmp	w9, #0x4
  4225d8:	b.ne	422598 <_obstack_memory_used@@Base+0xc164>  // b.any
  4225dc:	cmn	x4, #0x1
  4225e0:	b.eq	422598 <_obstack_memory_used@@Base+0xc164>  // b.none
  4225e4:	ldur	x8, [x29, #-8]
  4225e8:	mov	w9, #0x28                  	// #40
  4225ec:	ldr	x8, [x8, #216]
  4225f0:	madd	x8, x4, x9, x8
  4225f4:	add	x19, x8, #0x22
  4225f8:	b	422608 <_obstack_memory_used@@Base+0xc1d4>
  4225fc:	ldurb	w8, [x19, #-2]
  422600:	add	x19, x19, #0x28
  422604:	cbz	w8, 422728 <_obstack_memory_used@@Base+0xc2f4>
  422608:	ldur	x8, [x19, #-34]
  42260c:	cmp	x8, x23
  422610:	b.ne	422650 <_obstack_memory_used@@Base+0xc21c>  // b.any
  422614:	cmp	x21, #0x3f
  422618:	b.gt	42262c <_obstack_memory_used@@Base+0xc1f8>
  42261c:	ldrh	w8, [x19]
  422620:	ldur	x9, [x29, #-16]
  422624:	tst	x9, x8
  422628:	b.eq	422650 <_obstack_memory_used@@Base+0xc21c>  // b.none
  42262c:	ldr	x8, [x25, #40]
  422630:	madd	x8, x23, x11, x8
  422634:	ldr	x8, [x8, #16]
  422638:	ldr	x3, [x8]
  42263c:	cmp	x3, x20
  422640:	b.ne	422664 <_obstack_memory_used@@Base+0xc230>  // b.any
  422644:	ldur	w24, [x29, #-20]
  422648:	mov	w8, #0x1                   	// #1
  42264c:	b	422654 <_obstack_memory_used@@Base+0xc220>
  422650:	mov	w8, #0x7                   	// #7
  422654:	cmp	w8, #0x7
  422658:	b.eq	4225fc <_obstack_memory_used@@Base+0xc1c8>  // b.none
  42265c:	cbz	w8, 4225fc <_obstack_memory_used@@Base+0xc1c8>
  422660:	b	422728 <_obstack_memory_used@@Base+0xc2f4>
  422664:	ldur	x0, [x29, #-8]
  422668:	mov	w1, w22
  42266c:	mov	x2, x21
  422670:	mov	x27, x4
  422674:	bl	4224f4 <_obstack_memory_used@@Base+0xc0c0>
  422678:	cmn	w0, #0x1
  42267c:	b.eq	4226a8 <_obstack_memory_used@@Base+0xc274>  // b.none
  422680:	cbnz	w0, 4226bc <_obstack_memory_used@@Base+0xc288>
  422684:	ldp	w9, w8, [sp, #16]
  422688:	mov	x4, x27
  42268c:	mov	w11, #0x18                  	// #24
  422690:	cmp	w8, #0x0
  422694:	csel	w8, wzr, w24, ne  // ne = any
  422698:	tbz	w9, #0, 4226cc <_obstack_memory_used@@Base+0xc298>
  42269c:	mov	w24, w8
  4226a0:	ldr	w8, [sp, #24]
  4226a4:	b	422654 <_obstack_memory_used@@Base+0xc220>
  4226a8:	mov	w8, #0x1                   	// #1
  4226ac:	mov	w24, w0
  4226b0:	mov	x4, x27
  4226b4:	mov	w11, #0x18                  	// #24
  4226b8:	b	422654 <_obstack_memory_used@@Base+0xc220>
  4226bc:	cmp	x21, #0x3f
  4226c0:	mov	x4, x27
  4226c4:	mov	w11, #0x18                  	// #24
  4226c8:	b.gt	4226e4 <_obstack_memory_used@@Base+0xc2b0>
  4226cc:	ldrh	w9, [x19]
  4226d0:	ldr	w10, [sp, #12]
  4226d4:	mov	w8, wzr
  4226d8:	and	w9, w9, w10
  4226dc:	strh	w9, [x19]
  4226e0:	b	422654 <_obstack_memory_used@@Base+0xc220>
  4226e4:	mov	w8, wzr
  4226e8:	b	422654 <_obstack_memory_used@@Base+0xc220>
  4226ec:	tbz	w22, #1, 422598 <_obstack_memory_used@@Base+0xc164>
  4226f0:	ldr	x8, [x8]
  4226f4:	cmp	x8, x21
  4226f8:	b.ne	422598 <_obstack_memory_used@@Base+0xc164>  // b.any
  4226fc:	mov	w24, wzr
  422700:	mov	w8, #0x1                   	// #1
  422704:	b	422730 <_obstack_memory_used@@Base+0xc2fc>
  422708:	tbz	w22, #0, 422598 <_obstack_memory_used@@Base+0xc164>
  42270c:	ldr	x8, [x8]
  422710:	cmp	x8, x21
  422714:	b.ne	422598 <_obstack_memory_used@@Base+0xc164>  // b.any
  422718:	mov	w8, #0x1                   	// #1
  42271c:	mov	w24, #0xffffffff            	// #-1
  422720:	cbz	w8, 4225a0 <_obstack_memory_used@@Base+0xc16c>
  422724:	b	42273c <_obstack_memory_used@@Base+0xc308>
  422728:	ldr	x12, [sp]
  42272c:	cbz	w8, 422598 <_obstack_memory_used@@Base+0xc164>
  422730:	cbz	w8, 4225a0 <_obstack_memory_used@@Base+0xc16c>
  422734:	b	42273c <_obstack_memory_used@@Base+0xc308>
  422738:	ldr	w24, [sp, #24]
  42273c:	mov	w0, w24
  422740:	ldp	x20, x19, [sp, #128]
  422744:	ldp	x22, x21, [sp, #112]
  422748:	ldp	x24, x23, [sp, #96]
  42274c:	ldp	x26, x25, [sp, #80]
  422750:	ldp	x28, x27, [sp, #64]
  422754:	ldp	x29, x30, [sp, #48]
  422758:	add	sp, sp, #0x90
  42275c:	ret
  422760:	stp	x29, x30, [sp, #-64]!
  422764:	stp	x24, x23, [sp, #16]
  422768:	stp	x22, x21, [sp, #32]
  42276c:	stp	x20, x19, [sp, #48]
  422770:	ldr	x21, [x0, #152]
  422774:	mov	x20, x2
  422778:	mov	x2, x0
  42277c:	mov	x23, x1
  422780:	mov	x0, x21
  422784:	mov	x1, x20
  422788:	mov	x29, sp
  42278c:	mov	x22, x4
  422790:	mov	x24, x3
  422794:	bl	420394 <_obstack_memory_used@@Base+0x9f60>
  422798:	mov	w19, w0
  42279c:	cmp	w0, #0x1
  4227a0:	b.lt	4227d4 <_obstack_memory_used@@Base+0xc3a0>  // b.tstop
  4227a4:	add	x8, x24, w19, sxtw
  4227a8:	cmp	x8, x22
  4227ac:	b.gt	4227d4 <_obstack_memory_used@@Base+0xc3a0>
  4227b0:	ldr	x9, [x23]
  4227b4:	ldr	x8, [x9, x8, lsl #3]
  4227b8:	cbz	x8, 4227d0 <_obstack_memory_used@@Base+0xc39c>
  4227bc:	ldr	x9, [x21, #24]
  4227c0:	add	x0, x8, #0x8
  4227c4:	ldr	x1, [x9, x20, lsl #3]
  4227c8:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  4227cc:	cbnz	x0, 4227d4 <_obstack_memory_used@@Base+0xc3a0>
  4227d0:	mov	w19, wzr
  4227d4:	mov	w0, w19
  4227d8:	ldp	x20, x19, [sp, #48]
  4227dc:	ldp	x22, x21, [sp, #32]
  4227e0:	ldp	x24, x23, [sp, #16]
  4227e4:	ldp	x29, x30, [sp], #64
  4227e8:	ret
  4227ec:	cbz	x0, 422860 <_obstack_memory_used@@Base+0xc42c>
  4227f0:	stp	x29, x30, [sp, #-48]!
  4227f4:	stp	x20, x19, [sp, #32]
  4227f8:	ldr	x8, [x0]
  4227fc:	mov	x19, x0
  422800:	ldr	x0, [x0, #16]
  422804:	str	x21, [sp, #16]
  422808:	cmp	x8, #0x1
  42280c:	mov	x29, sp
  422810:	b.lt	422850 <_obstack_memory_used@@Base+0xc41c>  // b.tstop
  422814:	mov	x20, xzr
  422818:	mov	x21, xzr
  42281c:	add	x8, x0, x20
  422820:	ldr	x0, [x8, #40]
  422824:	bl	402770 <free@plt>
  422828:	ldr	x8, [x19, #16]
  42282c:	add	x8, x8, x20
  422830:	ldr	x0, [x8, #16]
  422834:	bl	402770 <free@plt>
  422838:	ldr	x8, [x19]
  42283c:	ldr	x0, [x19, #16]
  422840:	add	x21, x21, #0x1
  422844:	add	x20, x20, #0x30
  422848:	cmp	x21, x8
  42284c:	b.lt	42281c <_obstack_memory_used@@Base+0xc3e8>  // b.tstop
  422850:	bl	402770 <free@plt>
  422854:	ldp	x20, x19, [sp, #32]
  422858:	ldr	x21, [sp, #16]
  42285c:	ldp	x29, x30, [sp], #48
  422860:	ret
  422864:	stp	x29, x30, [sp, #-16]!
  422868:	ldr	x8, [x0]
  42286c:	mov	x29, sp
  422870:	add	x8, x8, x3, lsl #4
  422874:	ldr	w9, [x8, #8]
  422878:	and	w10, w9, #0xff
  42287c:	cmp	w10, #0x9
  422880:	b.eq	4228b0 <_obstack_memory_used@@Base+0xc47c>  // b.none
  422884:	cmp	w10, #0x8
  422888:	b.ne	422918 <_obstack_memory_used@@Base+0xc4e4>  // b.any
  42288c:	ldr	x8, [x8]
  422890:	add	x8, x8, #0x1
  422894:	cmp	x8, x5
  422898:	b.ge	422918 <_obstack_memory_used@@Base+0xc4e4>  // b.tcont
  42289c:	add	x8, x1, x8, lsl #4
  4228a0:	mov	x9, #0xffffffffffffffff    	// #-1
  4228a4:	stp	x4, x9, [x8]
  4228a8:	ldp	x29, x30, [sp], #16
  4228ac:	ret
  4228b0:	ldr	x8, [x8]
  4228b4:	add	x8, x8, #0x1
  4228b8:	cmp	x8, x5
  4228bc:	b.ge	422918 <_obstack_memory_used@@Base+0xc4e4>  // b.tcont
  4228c0:	lsl	x10, x8, #4
  4228c4:	ldr	x11, [x1, x10]
  4228c8:	cmp	x11, x4
  4228cc:	b.ge	4228e4 <_obstack_memory_used@@Base+0xc4b0>  // b.tcont
  4228d0:	add	x8, x1, x8, lsl #4
  4228d4:	str	x4, [x8, #8]
  4228d8:	lsl	x8, x5, #4
  4228dc:	mov	x0, x2
  4228e0:	b	422900 <_obstack_memory_used@@Base+0xc4cc>
  4228e4:	tbz	w9, #19, 422910 <_obstack_memory_used@@Base+0xc4dc>
  4228e8:	ldr	x9, [x2, x10]
  4228ec:	cmn	x9, #0x1
  4228f0:	b.eq	422910 <_obstack_memory_used@@Base+0xc4dc>  // b.none
  4228f4:	lsl	x8, x5, #4
  4228f8:	mov	x0, x1
  4228fc:	mov	x1, x2
  422900:	mov	x2, x8
  422904:	bl	402320 <memcpy@plt>
  422908:	ldp	x29, x30, [sp], #16
  42290c:	ret
  422910:	add	x8, x1, x8, lsl #4
  422914:	str	x4, [x8, #8]
  422918:	ldp	x29, x30, [sp], #16
  42291c:	ret
  422920:	stp	x29, x30, [sp, #-48]!
  422924:	stp	x20, x19, [sp, #32]
  422928:	ldr	x8, [x0]
  42292c:	ldr	x9, [x0, #16]
  422930:	str	x21, [sp, #16]
  422934:	mov	x20, x0
  422938:	sub	x8, x8, #0x1
  42293c:	str	x8, [x0]
  422940:	add	x8, x8, x8, lsl #1
  422944:	lsl	x21, x8, #4
  422948:	add	x8, x9, x21
  42294c:	ldr	x9, [x8]
  422950:	lsl	x2, x2, #4
  422954:	mov	x0, x3
  422958:	mov	x29, sp
  42295c:	str	x9, [x1]
  422960:	ldr	x1, [x8, #16]
  422964:	mov	x19, x4
  422968:	bl	402320 <memcpy@plt>
  42296c:	ldr	x0, [x19, #16]
  422970:	bl	402770 <free@plt>
  422974:	ldr	x8, [x20, #16]
  422978:	add	x8, x8, x21
  42297c:	ldr	x0, [x8, #16]
  422980:	bl	402770 <free@plt>
  422984:	ldr	x8, [x20, #16]
  422988:	add	x8, x8, x21
  42298c:	ldr	x9, [x8, #40]
  422990:	ldur	q0, [x8, #24]
  422994:	str	x9, [x19, #16]
  422998:	str	q0, [x19]
  42299c:	ldr	x8, [x20, #16]
  4229a0:	ldp	x20, x19, [sp, #32]
  4229a4:	add	x8, x8, x21
  4229a8:	ldr	x0, [x8, #8]
  4229ac:	ldr	x21, [sp, #16]
  4229b0:	ldp	x29, x30, [sp], #48
  4229b4:	ret
  4229b8:	sub	sp, sp, #0x70
  4229bc:	stp	x29, x30, [sp, #16]
  4229c0:	stp	x28, x27, [sp, #32]
  4229c4:	stp	x26, x25, [sp, #48]
  4229c8:	stp	x24, x23, [sp, #64]
  4229cc:	stp	x22, x21, [sp, #80]
  4229d0:	stp	x20, x19, [sp, #96]
  4229d4:	ldr	x24, [x0, #152]
  4229d8:	mov	x28, x6
  4229dc:	mov	x19, x5
  4229e0:	mov	x22, x4
  4229e4:	ldr	x8, [x24]
  4229e8:	mov	x21, x3
  4229ec:	mov	x26, x2
  4229f0:	mov	x23, x0
  4229f4:	add	x9, x8, x4, lsl #4
  4229f8:	ldr	w9, [x9, #8]
  4229fc:	mov	x27, x1
  422a00:	add	x29, sp, #0x10
  422a04:	tbnz	w9, #3, 422a40 <_obstack_memory_used@@Base+0xc60c>
  422a08:	tbnz	w9, #20, 422b54 <_obstack_memory_used@@Base+0xc720>
  422a0c:	and	w9, w9, #0xff
  422a10:	cmp	w9, #0x4
  422a14:	b.ne	422b78 <_obstack_memory_used@@Base+0xc744>  // b.any
  422a18:	lsl	x9, x22, #4
  422a1c:	ldr	x8, [x8, x9]
  422a20:	add	x8, x8, #0x1
  422a24:	cmp	x8, x27
  422a28:	b.ge	422b8c <_obstack_memory_used@@Base+0xc758>  // b.tcont
  422a2c:	add	x9, x26, x8, lsl #4
  422a30:	ldp	x9, x10, [x9]
  422a34:	sub	x25, x10, x9
  422a38:	cbnz	x28, 422b94 <_obstack_memory_used@@Base+0xc760>
  422a3c:	b	422c10 <_obstack_memory_used@@Base+0xc7dc>
  422a40:	ldr	x8, [x23, #184]
  422a44:	ldr	x9, [x21]
  422a48:	ldr	x20, [x24, #40]
  422a4c:	mov	x0, x19
  422a50:	mov	x1, x22
  422a54:	ldr	x23, [x8, x9, lsl #3]
  422a58:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  422a5c:	tbz	w0, #0, 422d14 <_obstack_memory_used@@Base+0xc8e0>
  422a60:	mov	w8, #0x18                  	// #24
  422a64:	madd	x25, x22, x8, x20
  422a68:	ldr	x8, [x25, #8]!
  422a6c:	cmp	x8, #0x1
  422a70:	b.lt	422b70 <_obstack_memory_used@@Base+0xc73c>  // b.tstop
  422a74:	mov	w8, #0x18                  	// #24
  422a78:	madd	x8, x22, x8, x20
  422a7c:	stp	x26, x28, [sp]
  422a80:	mov	x28, xzr
  422a84:	add	x23, x23, #0x8
  422a88:	add	x20, x8, #0x10
  422a8c:	mov	x22, #0xffffffffffffffff    	// #-1
  422a90:	b	422aa4 <_obstack_memory_used@@Base+0xc670>
  422a94:	ldr	x8, [x25]
  422a98:	add	x28, x28, #0x1
  422a9c:	cmp	x28, x8
  422aa0:	b.ge	422b4c <_obstack_memory_used@@Base+0xc718>  // b.tcont
  422aa4:	ldr	x8, [x20]
  422aa8:	mov	x0, x23
  422aac:	ldr	x24, [x8, x28, lsl #3]
  422ab0:	mov	x1, x24
  422ab4:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422ab8:	cbz	x0, 422ae4 <_obstack_memory_used@@Base+0xc6b0>
  422abc:	cmn	x22, #0x1
  422ac0:	b.eq	422af0 <_obstack_memory_used@@Base+0xc6bc>  // b.none
  422ac4:	mov	x0, x19
  422ac8:	mov	x1, x22
  422acc:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422ad0:	cbz	x0, 422b00 <_obstack_memory_used@@Base+0xc6cc>
  422ad4:	mov	w8, #0x1                   	// #1
  422ad8:	mov	x26, x24
  422adc:	cbnz	w8, 422b3c <_obstack_memory_used@@Base+0xc708>
  422ae0:	b	422a94 <_obstack_memory_used@@Base+0xc660>
  422ae4:	mov	w8, #0x4                   	// #4
  422ae8:	cbnz	w8, 422b3c <_obstack_memory_used@@Base+0xc708>
  422aec:	b	422a94 <_obstack_memory_used@@Base+0xc660>
  422af0:	mov	w8, wzr
  422af4:	mov	x22, x24
  422af8:	cbnz	w8, 422b3c <_obstack_memory_used@@Base+0xc708>
  422afc:	b	422a94 <_obstack_memory_used@@Base+0xc660>
  422b00:	ldr	x0, [sp, #8]
  422b04:	cbz	x0, 422b34 <_obstack_memory_used@@Base+0xc700>
  422b08:	ldr	x1, [x21]
  422b0c:	ldr	x4, [sp]
  422b10:	mov	x2, x24
  422b14:	mov	x3, x27
  422b18:	mov	x5, x19
  422b1c:	bl	422d2c <_obstack_memory_used@@Base+0xc8f8>
  422b20:	cbz	w0, 422b34 <_obstack_memory_used@@Base+0xc700>
  422b24:	mov	x26, #0xfffffffffffffffe    	// #-2
  422b28:	mov	w8, #0x1                   	// #1
  422b2c:	cbnz	w8, 422b3c <_obstack_memory_used@@Base+0xc708>
  422b30:	b	422a94 <_obstack_memory_used@@Base+0xc660>
  422b34:	mov	w8, #0x2                   	// #2
  422b38:	cbz	w8, 422a94 <_obstack_memory_used@@Base+0xc660>
  422b3c:	cmp	w8, #0x4
  422b40:	b.eq	422a94 <_obstack_memory_used@@Base+0xc660>  // b.none
  422b44:	cmp	w8, #0x2
  422b48:	b.ne	422b80 <_obstack_memory_used@@Base+0xc74c>  // b.any
  422b4c:	mov	x0, x22
  422b50:	b	422cec <_obstack_memory_used@@Base+0xc8b8>
  422b54:	ldr	x3, [x21]
  422b58:	mov	x0, x24
  422b5c:	mov	x1, x22
  422b60:	mov	x2, x23
  422b64:	bl	420394 <_obstack_memory_used@@Base+0x9f60>
  422b68:	sxtw	x25, w0
  422b6c:	b	422c70 <_obstack_memory_used@@Base+0xc83c>
  422b70:	mov	x0, #0xffffffffffffffff    	// #-1
  422b74:	b	422cec <_obstack_memory_used@@Base+0xc8b8>
  422b78:	mov	x25, xzr
  422b7c:	b	422c70 <_obstack_memory_used@@Base+0xc83c>
  422b80:	mov	x22, x26
  422b84:	mov	x0, x26
  422b88:	b	422cec <_obstack_memory_used@@Base+0xc8b8>
  422b8c:	mov	x25, xzr
  422b90:	cbz	x28, 422c10 <_obstack_memory_used@@Base+0xc7dc>
  422b94:	cmp	x8, x27
  422b98:	b.ge	422bdc <_obstack_memory_used@@Base+0xc7a8>  // b.tcont
  422b9c:	lsl	x9, x8, #4
  422ba0:	ldr	x9, [x26, x9]
  422ba4:	cmn	x9, #0x1
  422ba8:	b.eq	422bdc <_obstack_memory_used@@Base+0xc7a8>  // b.none
  422bac:	add	x8, x26, x8, lsl #4
  422bb0:	ldr	x8, [x8, #8]
  422bb4:	cmn	x8, #0x1
  422bb8:	b.eq	422bdc <_obstack_memory_used@@Base+0xc7a8>  // b.none
  422bbc:	cbz	x25, 422c1c <_obstack_memory_used@@Base+0xc7e8>
  422bc0:	ldr	x10, [x23, #48]
  422bc4:	ldr	x8, [x21]
  422bc8:	sub	x10, x10, x8
  422bcc:	cmp	x10, x25
  422bd0:	b.ge	422be8 <_obstack_memory_used@@Base+0xc7b4>  // b.tcont
  422bd4:	mov	w8, #0x1                   	// #1
  422bd8:	b	422c04 <_obstack_memory_used@@Base+0xc7d0>
  422bdc:	mov	x26, #0xffffffffffffffff    	// #-1
  422be0:	mov	w8, #0x1                   	// #1
  422be4:	b	422c6c <_obstack_memory_used@@Base+0xc838>
  422be8:	ldr	x10, [x23, #8]
  422bec:	mov	x2, x25
  422bf0:	add	x0, x10, x9
  422bf4:	add	x1, x10, x8
  422bf8:	bl	4025e0 <bcmp@plt>
  422bfc:	cmp	w0, #0x0
  422c00:	cset	w8, ne  // ne = any
  422c04:	cbz	w8, 422c10 <_obstack_memory_used@@Base+0xc7dc>
  422c08:	mov	x26, #0xffffffffffffffff    	// #-1
  422c0c:	b	422c6c <_obstack_memory_used@@Base+0xc838>
  422c10:	cbz	x25, 422c1c <_obstack_memory_used@@Base+0xc7e8>
  422c14:	mov	x26, #0xffffffffffffffff    	// #-1
  422c18:	b	422c68 <_obstack_memory_used@@Base+0xc834>
  422c1c:	mov	x0, x19
  422c20:	mov	x1, x22
  422c24:	bl	41cae0 <_obstack_memory_used@@Base+0x66ac>
  422c28:	tbz	w0, #0, 422d1c <_obstack_memory_used@@Base+0xc8e8>
  422c2c:	ldr	x8, [x24, #40]
  422c30:	mov	w9, #0x18                  	// #24
  422c34:	ldr	x10, [x23, #184]
  422c38:	madd	x8, x22, x9, x8
  422c3c:	ldr	x9, [x21]
  422c40:	ldr	x8, [x8, #16]
  422c44:	ldr	x9, [x10, x9, lsl #3]
  422c48:	ldr	x26, [x8]
  422c4c:	add	x0, x9, #0x8
  422c50:	mov	x1, x26
  422c54:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422c58:	cmp	x0, #0x0
  422c5c:	cset	w8, ne  // ne = any
  422c60:	csinv	x26, x26, xzr, ne  // ne = any
  422c64:	cbnz	w8, 422c6c <_obstack_memory_used@@Base+0xc838>
  422c68:	mov	w8, wzr
  422c6c:	cbnz	w8, 422ce4 <_obstack_memory_used@@Base+0xc8b0>
  422c70:	cbnz	x25, 422c8c <_obstack_memory_used@@Base+0xc858>
  422c74:	ldr	x8, [x24]
  422c78:	ldr	x2, [x21]
  422c7c:	mov	x0, x23
  422c80:	add	x1, x8, x22, lsl #4
  422c84:	bl	420674 <_obstack_memory_used@@Base+0xa240>
  422c88:	tbz	w0, #0, 422d0c <_obstack_memory_used@@Base+0xc8d8>
  422c8c:	ldr	x8, [x24, #24]
  422c90:	ldr	x9, [x21]
  422c94:	cmp	x25, #0x0
  422c98:	ldr	x26, [x8, x22, lsl #3]
  422c9c:	csinc	x8, x25, xzr, ne  // ne = any
  422ca0:	add	x8, x9, x8
  422ca4:	str	x8, [x21]
  422ca8:	cbz	x28, 422cd4 <_obstack_memory_used@@Base+0xc8a0>
  422cac:	ldr	x9, [x23, #168]
  422cb0:	cmp	x8, x9
  422cb4:	b.gt	422cdc <_obstack_memory_used@@Base+0xc8a8>
  422cb8:	ldr	x9, [x23, #184]
  422cbc:	ldr	x8, [x9, x8, lsl #3]
  422cc0:	cbz	x8, 422cdc <_obstack_memory_used@@Base+0xc8a8>
  422cc4:	add	x0, x8, #0x8
  422cc8:	mov	x1, x26
  422ccc:	bl	41cdbc <_obstack_memory_used@@Base+0x6988>
  422cd0:	cbz	x0, 422cdc <_obstack_memory_used@@Base+0xc8a8>
  422cd4:	str	xzr, [x19, #8]
  422cd8:	b	422ce0 <_obstack_memory_used@@Base+0xc8ac>
  422cdc:	mov	x26, #0xffffffffffffffff    	// #-1
  422ce0:	mov	w8, #0x1                   	// #1
  422ce4:	cmp	w8, #0x0
  422ce8:	csinv	x0, x26, xzr, ne  // ne = any
  422cec:	ldp	x20, x19, [sp, #96]
  422cf0:	ldp	x22, x21, [sp, #80]
  422cf4:	ldp	x24, x23, [sp, #64]
  422cf8:	ldp	x26, x25, [sp, #48]
  422cfc:	ldp	x28, x27, [sp, #32]
  422d00:	ldp	x29, x30, [sp, #16]
  422d04:	add	sp, sp, #0x70
  422d08:	ret
  422d0c:	mov	w8, wzr
  422d10:	b	422ce4 <_obstack_memory_used@@Base+0xc8b0>
  422d14:	mov	x0, #0xfffffffffffffffe    	// #-2
  422d18:	b	422cec <_obstack_memory_used@@Base+0xc8b8>
  422d1c:	mov	x26, #0xfffffffffffffffe    	// #-2
  422d20:	mov	w8, #0x1                   	// #1
  422d24:	cbnz	w8, 422c6c <_obstack_memory_used@@Base+0xc838>
  422d28:	b	422c68 <_obstack_memory_used@@Base+0xc834>
  422d2c:	stp	x29, x30, [sp, #-80]!
  422d30:	stp	x26, x25, [sp, #16]
  422d34:	stp	x24, x23, [sp, #32]
  422d38:	stp	x22, x21, [sp, #48]
  422d3c:	stp	x20, x19, [sp, #64]
  422d40:	ldp	x25, x8, [x0]
  422d44:	mov	x19, x5
  422d48:	mov	x21, x4
  422d4c:	mov	x22, x3
  422d50:	add	x9, x25, #0x1
  422d54:	mov	x23, x2
  422d58:	mov	x24, x1
  422d5c:	mov	x20, x0
  422d60:	cmp	x9, x8
  422d64:	mov	x29, sp
  422d68:	str	x9, [x0]
  422d6c:	b.ne	422d90 <_obstack_memory_used@@Base+0xc95c>  // b.any
  422d70:	ldr	x0, [x20, #16]
  422d74:	add	x8, x8, x8, lsl #1
  422d78:	lsl	x1, x8, #5
  422d7c:	bl	402610 <realloc@plt>
  422d80:	cbz	x0, 422ddc <_obstack_memory_used@@Base+0xc9a8>
  422d84:	ldr	x8, [x20, #8]
  422d88:	lsl	x8, x8, #1
  422d8c:	stp	x8, x0, [x20, #8]
  422d90:	ldr	x8, [x20, #16]
  422d94:	mov	w9, #0x30                  	// #48
  422d98:	lsl	x22, x22, #4
  422d9c:	mov	x0, x22
  422da0:	madd	x26, x25, x9, x8
  422da4:	stp	x24, x23, [x26]
  422da8:	bl	4024e0 <malloc@plt>
  422dac:	str	x0, [x26, #16]
  422db0:	cbz	x0, 422ddc <_obstack_memory_used@@Base+0xc9a8>
  422db4:	mov	x1, x21
  422db8:	mov	x2, x22
  422dbc:	bl	402320 <memcpy@plt>
  422dc0:	ldr	x8, [x20, #16]
  422dc4:	mov	w9, #0x30                  	// #48
  422dc8:	mov	x1, x19
  422dcc:	madd	x8, x25, x9, x8
  422dd0:	add	x0, x8, #0x18
  422dd4:	bl	41cd40 <_obstack_memory_used@@Base+0x690c>
  422dd8:	b	422de0 <_obstack_memory_used@@Base+0xc9ac>
  422ddc:	mov	w0, #0xc                   	// #12
  422de0:	ldp	x20, x19, [sp, #64]
  422de4:	ldp	x22, x21, [sp, #48]
  422de8:	ldp	x24, x23, [sp, #32]
  422dec:	ldp	x26, x25, [sp, #16]
  422df0:	ldp	x29, x30, [sp], #80
  422df4:	ret
  422df8:	neg	w8, w1
  422dfc:	ror	x0, x0, x8
  422e00:	ret
  422e04:	ror	x0, x0, x1
  422e08:	ret
  422e0c:	neg	w8, w1
  422e10:	ror	w0, w0, w8
  422e14:	ret
  422e18:	ror	w0, w0, w1
  422e1c:	ret
  422e20:	sxtw	x9, w1
  422e24:	neg	x9, x9
  422e28:	lsl	x8, x0, x1
  422e2c:	lsr	x9, x0, x9
  422e30:	orr	x0, x9, x8
  422e34:	ret
  422e38:	sxtw	x9, w1
  422e3c:	neg	x9, x9
  422e40:	lsr	x8, x0, x1
  422e44:	lsl	x9, x0, x9
  422e48:	orr	x0, x9, x8
  422e4c:	ret
  422e50:	neg	w10, w1
  422e54:	and	w8, w0, #0xffff
  422e58:	and	w9, w1, #0xf
  422e5c:	and	w10, w10, #0xf
  422e60:	lsl	w9, w0, w9
  422e64:	lsr	w8, w8, w10
  422e68:	orr	w0, w9, w8
  422e6c:	ret
  422e70:	and	w8, w0, #0xffff
  422e74:	and	w9, w1, #0xf
  422e78:	neg	w10, w1
  422e7c:	lsr	w8, w8, w9
  422e80:	and	w9, w10, #0xf
  422e84:	lsl	w9, w0, w9
  422e88:	orr	w0, w9, w8
  422e8c:	ret
  422e90:	neg	w10, w1
  422e94:	and	w8, w0, #0xff
  422e98:	and	w9, w1, #0x7
  422e9c:	and	w10, w10, #0x7
  422ea0:	lsl	w9, w0, w9
  422ea4:	lsr	w8, w8, w10
  422ea8:	orr	w0, w9, w8
  422eac:	ret
  422eb0:	and	w8, w0, #0xff
  422eb4:	and	w9, w1, #0x7
  422eb8:	neg	w10, w1
  422ebc:	lsr	w8, w8, w9
  422ec0:	and	w9, w10, #0x7
  422ec4:	lsl	w9, w0, w9
  422ec8:	orr	w0, w9, w8
  422ecc:	ret
  422ed0:	stp	x29, x30, [sp, #-48]!
  422ed4:	str	x21, [sp, #16]
  422ed8:	stp	x20, x19, [sp, #32]
  422edc:	mov	x29, sp
  422ee0:	mov	x20, x0
  422ee4:	bl	402450 <__fpending@plt>
  422ee8:	mov	x19, x0
  422eec:	mov	x0, x20
  422ef0:	bl	4023f0 <ferror_unlocked@plt>
  422ef4:	mov	w21, w0
  422ef8:	mov	x0, x20
  422efc:	bl	402480 <fclose@plt>
  422f00:	cbz	w21, 422f24 <_obstack_memory_used@@Base+0xcaf0>
  422f04:	cbnz	w0, 422f10 <_obstack_memory_used@@Base+0xcadc>
  422f08:	bl	402930 <__errno_location@plt>
  422f0c:	str	wzr, [x0]
  422f10:	mov	w0, #0xffffffff            	// #-1
  422f14:	ldp	x20, x19, [sp, #32]
  422f18:	ldr	x21, [sp, #16]
  422f1c:	ldp	x29, x30, [sp], #48
  422f20:	ret
  422f24:	cbz	w0, 422f14 <_obstack_memory_used@@Base+0xcae0>
  422f28:	cbnz	x19, 422f04 <_obstack_memory_used@@Base+0xcad0>
  422f2c:	bl	402930 <__errno_location@plt>
  422f30:	ldr	w8, [x0]
  422f34:	cmp	w8, #0x9
  422f38:	csetm	w0, ne  // ne = any
  422f3c:	b	422f14 <_obstack_memory_used@@Base+0xcae0>
  422f40:	mov	w8, #0xf616                	// #62998
  422f44:	movk	w8, #0x95, lsl #16
  422f48:	str	xzr, [x0, #16]
  422f4c:	str	w8, [x0, #24]
  422f50:	ret
  422f54:	stp	x29, x30, [sp, #-48]!
  422f58:	stp	x20, x19, [sp, #32]
  422f5c:	ldr	w8, [x0, #24]
  422f60:	mov	w9, #0xf616                	// #62998
  422f64:	movk	w9, #0x95, lsl #16
  422f68:	str	x21, [sp, #16]
  422f6c:	cmp	w8, w9
  422f70:	mov	x29, sp
  422f74:	b.ne	422ff4 <_obstack_memory_used@@Base+0xcbc0>  // b.any
  422f78:	ldr	x8, [x0, #16]
  422f7c:	mov	x19, x0
  422f80:	mov	x20, x1
  422f84:	cbz	x8, 422fa8 <_obstack_memory_used@@Base+0xcb74>
  422f88:	ldr	x9, [x20, #8]
  422f8c:	ldr	x10, [x19]
  422f90:	cmp	x9, x10
  422f94:	b.ne	422fa8 <_obstack_memory_used@@Base+0xcb74>  // b.any
  422f98:	ldr	x9, [x20]
  422f9c:	ldr	x10, [x19, #8]
  422fa0:	cmp	x9, x10
  422fa4:	b.eq	422fe0 <_obstack_memory_used@@Base+0xcbac>  // b.none
  422fa8:	add	x21, x8, #0x1
  422fac:	mov	x0, x21
  422fb0:	str	x21, [x19, #16]
  422fb4:	bl	423014 <_obstack_memory_used@@Base+0xcbe0>
  422fb8:	tbz	w0, #0, 422fd8 <_obstack_memory_used@@Base+0xcba4>
  422fbc:	cbz	x21, 422fe0 <_obstack_memory_used@@Base+0xcbac>
  422fc0:	ldr	x8, [x20]
  422fc4:	mov	w0, wzr
  422fc8:	str	x8, [x19, #8]
  422fcc:	ldr	x8, [x20, #8]
  422fd0:	str	x8, [x19]
  422fd4:	b	422fe4 <_obstack_memory_used@@Base+0xcbb0>
  422fd8:	mov	w0, wzr
  422fdc:	b	422fe4 <_obstack_memory_used@@Base+0xcbb0>
  422fe0:	mov	w0, #0x1                   	// #1
  422fe4:	ldp	x20, x19, [sp, #32]
  422fe8:	ldr	x21, [sp, #16]
  422fec:	ldp	x29, x30, [sp], #48
  422ff0:	ret
  422ff4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xfbcc>
  422ff8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xfbcc>
  422ffc:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xfbcc>
  423000:	add	x0, x0, #0xa24
  423004:	add	x1, x1, #0xa3c
  423008:	add	x3, x3, #0xa4a
  42300c:	mov	w2, #0x3c                  	// #60
  423010:	bl	402920 <__assert_fail@plt>
  423014:	sub	x8, x0, #0x1
  423018:	tst	x0, x8
  42301c:	cset	w0, eq  // eq = none
  423020:	ret
  423024:	sub	x0, x0, #0x1
  423028:	ldrb	w8, [x0, #1]!
  42302c:	cmp	w8, #0x2f
  423030:	b.eq	423028 <_obstack_memory_used@@Base+0xcbf4>  // b.none
  423034:	mov	w8, wzr
  423038:	mov	x9, x0
  42303c:	b	423048 <_obstack_memory_used@@Base+0xcc14>
  423040:	mov	w8, #0x1                   	// #1
  423044:	add	x9, x9, #0x1
  423048:	ldrb	w10, [x9]
  42304c:	cmp	w10, #0x2f
  423050:	b.eq	423040 <_obstack_memory_used@@Base+0xcc0c>  // b.none
  423054:	cbz	w10, 42306c <_obstack_memory_used@@Base+0xcc38>
  423058:	tst	w8, #0x1
  42305c:	mov	w8, wzr
  423060:	csel	x0, x9, x0, ne  // ne = any
  423064:	add	x9, x9, #0x1
  423068:	b	423048 <_obstack_memory_used@@Base+0xcc14>
  42306c:	ret
  423070:	stp	x29, x30, [sp, #-32]!
  423074:	str	x19, [sp, #16]
  423078:	mov	x29, sp
  42307c:	mov	x19, x0
  423080:	bl	402380 <strlen@plt>
  423084:	mov	x8, x0
  423088:	sub	x9, x19, #0x1
  42308c:	mov	x0, x8
  423090:	cmp	x8, #0x2
  423094:	b.cc	4230a8 <_obstack_memory_used@@Base+0xcc74>  // b.lo, b.ul, b.last
  423098:	ldrb	w8, [x9, x0]
  42309c:	cmp	w8, #0x2f
  4230a0:	sub	x8, x0, #0x1
  4230a4:	b.eq	42308c <_obstack_memory_used@@Base+0xcc58>  // b.none
  4230a8:	ldr	x19, [sp, #16]
  4230ac:	ldp	x29, x30, [sp], #32
  4230b0:	ret
  4230b4:	sub	sp, sp, #0xe0
  4230b8:	stp	x29, x30, [sp, #208]
  4230bc:	add	x29, sp, #0xd0
  4230c0:	stp	x2, x3, [x29, #-80]
  4230c4:	stp	x4, x5, [x29, #-64]
  4230c8:	stp	x6, x7, [x29, #-48]
  4230cc:	stp	q1, q2, [sp, #16]
  4230d0:	stp	q3, q4, [sp, #48]
  4230d4:	str	q0, [sp]
  4230d8:	stp	q5, q6, [sp, #80]
  4230dc:	str	q7, [sp, #112]
  4230e0:	tbnz	w1, #6, 4230ec <_obstack_memory_used@@Base+0xccb8>
  4230e4:	mov	w2, wzr
  4230e8:	b	423138 <_obstack_memory_used@@Base+0xcd04>
  4230ec:	mov	x9, #0xffffffffffffffd0    	// #-48
  4230f0:	mov	x11, sp
  4230f4:	sub	x12, x29, #0x50
  4230f8:	movk	x9, #0xff80, lsl #32
  4230fc:	add	x10, x29, #0x10
  423100:	mov	x8, #0xffffffffffffffd0    	// #-48
  423104:	add	x11, x11, #0x80
  423108:	add	x12, x12, #0x30
  42310c:	stp	x11, x9, [x29, #-16]
  423110:	stp	x10, x12, [x29, #-32]
  423114:	tbz	w8, #31, 423128 <_obstack_memory_used@@Base+0xccf4>
  423118:	add	w9, w8, #0x8
  42311c:	cmp	w9, #0x0
  423120:	stur	w9, [x29, #-8]
  423124:	b.le	42314c <_obstack_memory_used@@Base+0xcd18>
  423128:	ldur	x8, [x29, #-32]
  42312c:	add	x9, x8, #0x8
  423130:	stur	x9, [x29, #-32]
  423134:	ldr	w2, [x8]
  423138:	bl	402510 <open@plt>
  42313c:	bl	41362c <wcrtomb@plt+0x10c6c>
  423140:	ldp	x29, x30, [sp, #208]
  423144:	add	sp, sp, #0xe0
  423148:	ret
  42314c:	ldur	x9, [x29, #-24]
  423150:	add	x8, x9, x8
  423154:	b	423134 <_obstack_memory_used@@Base+0xcd00>
  423158:	sub	sp, sp, #0x130
  42315c:	add	x1, sp, #0xc
  423160:	mov	w2, #0x101                 	// #257
  423164:	stp	x29, x30, [sp, #272]
  423168:	str	x28, [sp, #288]
  42316c:	add	x29, sp, #0x110
  423170:	bl	423400 <_obstack_memory_used@@Base+0xcfcc>
  423174:	cbz	w0, 423180 <_obstack_memory_used@@Base+0xcd4c>
  423178:	mov	w0, wzr
  42317c:	b	4231b4 <_obstack_memory_used@@Base+0xcd80>
  423180:	ldrh	w8, [sp, #12]
  423184:	cmp	w8, #0x43
  423188:	b.eq	423178 <_obstack_memory_used@@Base+0xcd44>  // b.none
  42318c:	ldr	w8, [sp, #12]
  423190:	ldrh	w9, [sp, #16]
  423194:	mov	w10, #0x4f50                	// #20304
  423198:	movk	w10, #0x4953, lsl #16
  42319c:	mov	w11, #0x58                  	// #88
  4231a0:	eor	w8, w8, w10
  4231a4:	eor	w9, w9, w11
  4231a8:	orr	w8, w8, w9
  4231ac:	cmp	w8, #0x0
  4231b0:	cset	w0, ne  // ne = any
  4231b4:	ldr	x28, [sp, #288]
  4231b8:	ldp	x29, x30, [sp, #272]
  4231bc:	add	sp, sp, #0x130
  4231c0:	ret
  4231c4:	mov	x8, xzr
  4231c8:	mov	w9, #0x1                   	// #1
  4231cc:	strb	w9, [x0, #28]
  4231d0:	stur	xzr, [x0, #20]
  4231d4:	str	w1, [x0, x8]
  4231d8:	add	x8, x8, #0x4
  4231dc:	cmp	x8, #0x10
  4231e0:	b.ne	4231d4 <_obstack_memory_used@@Base+0xcda0>  // b.any
  4231e4:	str	w1, [x0, #16]
  4231e8:	ret
  4231ec:	ldrb	w0, [x0, #28]
  4231f0:	ret
  4231f4:	ldrb	w8, [x0, #28]
  4231f8:	ldr	w10, [x0, #20]
  4231fc:	eor	w9, w8, #0x1
  423200:	add	w8, w10, w9
  423204:	and	w11, w8, #0x3
  423208:	lsl	x10, x11, #2
  42320c:	ldr	w8, [x0, x10]
  423210:	str	w1, [x0, x10]
  423214:	ldr	w10, [x0, #24]
  423218:	str	w11, [x0, #20]
  42321c:	cmp	w11, w10
  423220:	b.ne	423230 <_obstack_memory_used@@Base+0xcdfc>  // b.any
  423224:	add	w9, w10, w9
  423228:	and	w9, w9, #0x3
  42322c:	str	w9, [x0, #24]
  423230:	strb	wzr, [x0, #28]
  423234:	mov	w0, w8
  423238:	ret
  42323c:	stp	x29, x30, [sp, #-32]!
  423240:	str	x19, [sp, #16]
  423244:	mov	x29, sp
  423248:	mov	x19, x0
  42324c:	bl	4231ec <_obstack_memory_used@@Base+0xcdb8>
  423250:	tbnz	w0, #0, 423294 <_obstack_memory_used@@Base+0xce60>
  423254:	ldp	w9, w8, [x19, #16]
  423258:	lsl	x8, x8, #2
  42325c:	ldr	w0, [x19, x8]
  423260:	str	w9, [x19, x8]
  423264:	ldp	w8, w9, [x19, #20]
  423268:	cmp	w8, w9
  42326c:	b.ne	42327c <_obstack_memory_used@@Base+0xce48>  // b.any
  423270:	mov	w8, #0x1                   	// #1
  423274:	strb	w8, [x19, #28]
  423278:	b	423288 <_obstack_memory_used@@Base+0xce54>
  42327c:	sub	w8, w8, #0x1
  423280:	and	w8, w8, #0x3
  423284:	str	w8, [x19, #20]
  423288:	ldr	x19, [sp, #16]
  42328c:	ldp	x29, x30, [sp], #32
  423290:	ret
  423294:	bl	4026c0 <abort@plt>
  423298:	stp	x29, x30, [sp, #-16]!
  42329c:	mov	w0, #0xe                   	// #14
  4232a0:	mov	x29, sp
  4232a4:	bl	4024a0 <nl_langinfo@plt>
  4232a8:	adrp	x8, 425000 <_obstack_memory_used@@Base+0xebcc>
  4232ac:	add	x8, x8, #0x2cd
  4232b0:	cmp	x0, #0x0
  4232b4:	csel	x8, x8, x0, eq  // eq = none
  4232b8:	ldrb	w9, [x8]
  4232bc:	adrp	x10, 426000 <_obstack_memory_used@@Base+0xfbcc>
  4232c0:	add	x10, x10, #0xa95
  4232c4:	cmp	w9, #0x0
  4232c8:	csel	x0, x10, x8, eq  // eq = none
  4232cc:	ldp	x29, x30, [sp], #16
  4232d0:	ret
  4232d4:	stp	x29, x30, [sp, #-32]!
  4232d8:	str	x19, [sp, #16]
  4232dc:	mov	x29, sp
  4232e0:	mov	w19, w0
  4232e4:	bl	402500 <wcwidth@plt>
  4232e8:	tbz	w0, #31, 4232fc <_obstack_memory_used@@Base+0xcec8>
  4232ec:	mov	w0, w19
  4232f0:	bl	402410 <iswcntrl@plt>
  4232f4:	cmp	w0, #0x0
  4232f8:	cset	w0, eq  // eq = none
  4232fc:	ldr	x19, [sp, #16]
  423300:	ldp	x29, x30, [sp], #32
  423304:	ret
  423308:	stp	x29, x30, [sp, #-48]!
  42330c:	str	x21, [sp, #16]
  423310:	stp	x20, x19, [sp, #32]
  423314:	mov	x19, x1
  423318:	ldr	x21, [x1], #24
  42331c:	mov	x20, x0
  423320:	mov	x29, sp
  423324:	cmp	x21, x1
  423328:	b.ne	42333c <_obstack_memory_used@@Base+0xcf08>  // b.any
  42332c:	ldr	x2, [x19, #8]
  423330:	add	x21, x20, #0x18
  423334:	mov	x0, x21
  423338:	bl	402320 <memcpy@plt>
  42333c:	str	x21, [x20]
  423340:	ldr	x8, [x19, #8]
  423344:	str	x8, [x20, #8]
  423348:	ldrb	w8, [x19, #16]
  42334c:	strb	w8, [x20, #16]
  423350:	cbz	w8, 42335c <_obstack_memory_used@@Base+0xcf28>
  423354:	ldr	w8, [x19, #20]
  423358:	str	w8, [x20, #20]
  42335c:	ldp	x20, x19, [sp, #32]
  423360:	ldr	x21, [sp, #16]
  423364:	ldp	x29, x30, [sp], #48
  423368:	ret
  42336c:	lsr	w8, w0, #3
  423370:	adrp	x9, 426000 <_obstack_memory_used@@Base+0xfbcc>
  423374:	and	x8, x8, #0x1c
  423378:	add	x9, x9, #0xa9c
  42337c:	ldr	w8, [x9, x8]
  423380:	lsr	w8, w8, w0
  423384:	and	w0, w8, #0x1
  423388:	ret
  42338c:	stp	x29, x30, [sp, #-48]!
  423390:	mov	w8, #0x4900                	// #18688
  423394:	movk	w8, #0x8, lsl #16
  423398:	orr	w2, w2, w8
  42339c:	stp	x22, x21, [sp, #16]
  4233a0:	stp	x20, x19, [sp, #32]
  4233a4:	mov	x29, sp
  4233a8:	mov	x19, x3
  4233ac:	bl	411ab8 <wcrtomb@plt+0xf0f8>
  4233b0:	tbnz	w0, #31, 4233cc <_obstack_memory_used@@Base+0xcf98>
  4233b4:	mov	w21, w0
  4233b8:	bl	402690 <fdopendir@plt>
  4233bc:	mov	x20, x0
  4233c0:	cbz	x0, 4233d4 <_obstack_memory_used@@Base+0xcfa0>
  4233c4:	str	w21, [x19]
  4233c8:	b	4233ec <_obstack_memory_used@@Base+0xcfb8>
  4233cc:	mov	x20, xzr
  4233d0:	b	4233ec <_obstack_memory_used@@Base+0xcfb8>
  4233d4:	bl	402930 <__errno_location@plt>
  4233d8:	ldr	w22, [x0]
  4233dc:	mov	x19, x0
  4233e0:	mov	w0, w21
  4233e4:	bl	402650 <close@plt>
  4233e8:	str	w22, [x19]
  4233ec:	mov	x0, x20
  4233f0:	ldp	x20, x19, [sp, #32]
  4233f4:	ldp	x22, x21, [sp, #16]
  4233f8:	ldp	x29, x30, [sp], #48
  4233fc:	ret
  423400:	stp	x29, x30, [sp, #-16]!
  423404:	mov	x29, sp
  423408:	bl	423414 <_obstack_memory_used@@Base+0xcfe0>
  42340c:	ldp	x29, x30, [sp], #16
  423410:	ret
  423414:	stp	x29, x30, [sp, #-48]!
  423418:	str	x21, [sp, #16]
  42341c:	stp	x20, x19, [sp, #32]
  423420:	mov	x29, sp
  423424:	mov	x20, x2
  423428:	mov	x19, x1
  42342c:	bl	4234b0 <_obstack_memory_used@@Base+0xd07c>
  423430:	cbz	x0, 42345c <_obstack_memory_used@@Base+0xd028>
  423434:	mov	x21, x0
  423438:	bl	402380 <strlen@plt>
  42343c:	cmp	x0, x20
  423440:	b.cs	42346c <_obstack_memory_used@@Base+0xd038>  // b.hs, b.nlast
  423444:	add	x2, x0, #0x1
  423448:	mov	x0, x19
  42344c:	mov	x1, x21
  423450:	bl	402320 <memcpy@plt>
  423454:	mov	w0, wzr
  423458:	b	42348c <_obstack_memory_used@@Base+0xd058>
  42345c:	cbz	x20, 423464 <_obstack_memory_used@@Base+0xd030>
  423460:	strb	wzr, [x19]
  423464:	mov	w0, #0x16                  	// #22
  423468:	b	42348c <_obstack_memory_used@@Base+0xd058>
  42346c:	cbz	x20, 423488 <_obstack_memory_used@@Base+0xd054>
  423470:	sub	x20, x20, #0x1
  423474:	mov	x0, x19
  423478:	mov	x1, x21
  42347c:	mov	x2, x20
  423480:	bl	402320 <memcpy@plt>
  423484:	strb	wzr, [x19, x20]
  423488:	mov	w0, #0x22                  	// #34
  42348c:	ldp	x20, x19, [sp, #32]
  423490:	ldr	x21, [sp, #16]
  423494:	ldp	x29, x30, [sp], #48
  423498:	ret
  42349c:	stp	x29, x30, [sp, #-16]!
  4234a0:	mov	x29, sp
  4234a4:	bl	4234b0 <_obstack_memory_used@@Base+0xd07c>
  4234a8:	ldp	x29, x30, [sp], #16
  4234ac:	ret
  4234b0:	stp	x29, x30, [sp, #-16]!
  4234b4:	mov	x1, xzr
  4234b8:	mov	x29, sp
  4234bc:	bl	4029a0 <setlocale@plt>
  4234c0:	ldp	x29, x30, [sp], #16
  4234c4:	ret
  4234c8:	stp	x29, x30, [sp, #-16]!
  4234cc:	mov	w2, #0x3                   	// #3
  4234d0:	mov	w1, wzr
  4234d4:	mov	x29, sp
  4234d8:	bl	4234e4 <_obstack_memory_used@@Base+0xd0b0>
  4234dc:	ldp	x29, x30, [sp], #16
  4234e0:	ret
  4234e4:	sub	sp, sp, #0xe0
  4234e8:	stp	x29, x30, [sp, #208]
  4234ec:	add	x29, sp, #0xd0
  4234f0:	mov	x8, #0xffffffffffffffd0    	// #-48
  4234f4:	mov	x9, sp
  4234f8:	sub	x10, x29, #0x50
  4234fc:	movk	x8, #0xff80, lsl #32
  423500:	add	x11, x29, #0x10
  423504:	cmp	w1, #0xb
  423508:	add	x9, x9, #0x80
  42350c:	add	x10, x10, #0x30
  423510:	stp	x2, x3, [x29, #-80]
  423514:	stp	x4, x5, [x29, #-64]
  423518:	stp	x6, x7, [x29, #-48]
  42351c:	stp	q1, q2, [sp, #16]
  423520:	stp	q3, q4, [sp, #48]
  423524:	str	q0, [sp]
  423528:	stp	q5, q6, [sp, #80]
  42352c:	str	q7, [sp, #112]
  423530:	stp	x9, x8, [x29, #-16]
  423534:	stp	x11, x10, [x29, #-32]
  423538:	b.hi	423590 <_obstack_memory_used@@Base+0xd15c>  // b.pmore
  42353c:	mov	w8, #0x1                   	// #1
  423540:	lsl	w8, w8, w1
  423544:	mov	w9, #0x514                 	// #1300
  423548:	tst	w8, w9
  42354c:	b.ne	4235c4 <_obstack_memory_used@@Base+0xd190>  // b.any
  423550:	mov	w9, #0xa0a                 	// #2570
  423554:	tst	w8, w9
  423558:	b.ne	4235bc <_obstack_memory_used@@Base+0xd188>  // b.any
  42355c:	cbnz	w1, 423590 <_obstack_memory_used@@Base+0xd15c>
  423560:	ldursw	x8, [x29, #-8]
  423564:	tbz	w8, #31, 423578 <_obstack_memory_used@@Base+0xd144>
  423568:	add	w9, w8, #0x8
  42356c:	cmp	w9, #0x0
  423570:	stur	w9, [x29, #-8]
  423574:	b.le	423688 <_obstack_memory_used@@Base+0xd254>
  423578:	ldur	x8, [x29, #-32]
  42357c:	add	x9, x8, #0x8
  423580:	stur	x9, [x29, #-32]
  423584:	ldr	w1, [x8]
  423588:	bl	423694 <_obstack_memory_used@@Base+0xd260>
  42358c:	b	4235f0 <_obstack_memory_used@@Base+0xd1bc>
  423590:	sub	w8, w1, #0x400
  423594:	cmp	w8, #0xa
  423598:	b.hi	423640 <_obstack_memory_used@@Base+0xd20c>  // b.pmore
  42359c:	mov	w9, #0x1                   	// #1
  4235a0:	lsl	w9, w9, w8
  4235a4:	mov	w10, #0x285                 	// #645
  4235a8:	tst	w9, w10
  4235ac:	b.ne	4235c4 <_obstack_memory_used@@Base+0xd190>  // b.any
  4235b0:	mov	w10, #0x502                 	// #1282
  4235b4:	tst	w9, w10
  4235b8:	b.eq	4235fc <_obstack_memory_used@@Base+0xd1c8>  // b.none
  4235bc:	bl	4027d0 <fcntl@plt>
  4235c0:	b	4235f0 <_obstack_memory_used@@Base+0xd1bc>
  4235c4:	ldursw	x8, [x29, #-8]
  4235c8:	tbz	w8, #31, 4235dc <_obstack_memory_used@@Base+0xd1a8>
  4235cc:	add	w9, w8, #0x8
  4235d0:	cmp	w9, #0x0
  4235d4:	stur	w9, [x29, #-8]
  4235d8:	b.le	423634 <_obstack_memory_used@@Base+0xd200>
  4235dc:	ldur	x8, [x29, #-32]
  4235e0:	add	x9, x8, #0x8
  4235e4:	stur	x9, [x29, #-32]
  4235e8:	ldr	w2, [x8]
  4235ec:	bl	4027d0 <fcntl@plt>
  4235f0:	ldp	x29, x30, [sp, #208]
  4235f4:	add	sp, sp, #0xe0
  4235f8:	ret
  4235fc:	cmp	w8, #0x6
  423600:	b.ne	423640 <_obstack_memory_used@@Base+0xd20c>  // b.any
  423604:	ldursw	x8, [x29, #-8]
  423608:	tbz	w8, #31, 42361c <_obstack_memory_used@@Base+0xd1e8>
  42360c:	add	w9, w8, #0x8
  423610:	cmp	w9, #0x0
  423614:	stur	w9, [x29, #-8]
  423618:	b.le	423670 <_obstack_memory_used@@Base+0xd23c>
  42361c:	ldur	x8, [x29, #-32]
  423620:	add	x9, x8, #0x8
  423624:	stur	x9, [x29, #-32]
  423628:	ldr	w1, [x8]
  42362c:	bl	4236b0 <_obstack_memory_used@@Base+0xd27c>
  423630:	b	4235f0 <_obstack_memory_used@@Base+0xd1bc>
  423634:	ldur	x9, [x29, #-24]
  423638:	add	x8, x9, x8
  42363c:	b	4235e8 <_obstack_memory_used@@Base+0xd1b4>
  423640:	ldursw	x8, [x29, #-8]
  423644:	tbz	w8, #31, 423658 <_obstack_memory_used@@Base+0xd224>
  423648:	add	w9, w8, #0x8
  42364c:	cmp	w9, #0x0
  423650:	stur	w9, [x29, #-8]
  423654:	b.le	42367c <_obstack_memory_used@@Base+0xd248>
  423658:	ldur	x8, [x29, #-32]
  42365c:	add	x9, x8, #0x8
  423660:	stur	x9, [x29, #-32]
  423664:	ldr	x2, [x8]
  423668:	bl	4027d0 <fcntl@plt>
  42366c:	b	4235f0 <_obstack_memory_used@@Base+0xd1bc>
  423670:	ldur	x9, [x29, #-24]
  423674:	add	x8, x9, x8
  423678:	b	423628 <_obstack_memory_used@@Base+0xd1f4>
  42367c:	ldur	x9, [x29, #-24]
  423680:	add	x8, x9, x8
  423684:	b	423664 <_obstack_memory_used@@Base+0xd230>
  423688:	ldur	x9, [x29, #-24]
  42368c:	add	x8, x9, x8
  423690:	b	423584 <_obstack_memory_used@@Base+0xd150>
  423694:	stp	x29, x30, [sp, #-16]!
  423698:	mov	w2, w1
  42369c:	mov	w1, wzr
  4236a0:	mov	x29, sp
  4236a4:	bl	4027d0 <fcntl@plt>
  4236a8:	ldp	x29, x30, [sp], #16
  4236ac:	ret
  4236b0:	stp	x29, x30, [sp, #-48]!
  4236b4:	stp	x22, x21, [sp, #16]
  4236b8:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4236bc:	ldr	w8, [x22, #2256]
  4236c0:	stp	x20, x19, [sp, #32]
  4236c4:	mov	w20, w1
  4236c8:	mov	w21, w0
  4236cc:	mov	x29, sp
  4236d0:	tbnz	w8, #31, 423730 <_obstack_memory_used@@Base+0xd2fc>
  4236d4:	mov	w1, #0x406                 	// #1030
  4236d8:	mov	w0, w21
  4236dc:	mov	w2, w20
  4236e0:	bl	4027d0 <fcntl@plt>
  4236e4:	mov	w19, w0
  4236e8:	tbz	w0, #31, 423720 <_obstack_memory_used@@Base+0xd2ec>
  4236ec:	bl	402930 <__errno_location@plt>
  4236f0:	ldr	w8, [x0]
  4236f4:	cmp	w8, #0x16
  4236f8:	b.ne	423720 <_obstack_memory_used@@Base+0xd2ec>  // b.any
  4236fc:	mov	w0, w21
  423700:	mov	w1, w20
  423704:	bl	423694 <_obstack_memory_used@@Base+0xd260>
  423708:	mov	w19, w0
  42370c:	tbnz	w0, #31, 423728 <_obstack_memory_used@@Base+0xd2f4>
  423710:	mov	w8, #0xffffffff            	// #-1
  423714:	str	w8, [x22, #2256]
  423718:	tbz	w19, #31, 423744 <_obstack_memory_used@@Base+0xd310>
  42371c:	b	423794 <_obstack_memory_used@@Base+0xd360>
  423720:	mov	w8, #0x1                   	// #1
  423724:	str	w8, [x22, #2256]
  423728:	tbz	w19, #31, 423744 <_obstack_memory_used@@Base+0xd310>
  42372c:	b	423794 <_obstack_memory_used@@Base+0xd360>
  423730:	mov	w0, w21
  423734:	mov	w1, w20
  423738:	bl	423694 <_obstack_memory_used@@Base+0xd260>
  42373c:	mov	w19, w0
  423740:	tbnz	w19, #31, 423794 <_obstack_memory_used@@Base+0xd360>
  423744:	ldr	w8, [x22, #2256]
  423748:	cmn	w8, #0x1
  42374c:	b.ne	423794 <_obstack_memory_used@@Base+0xd360>  // b.any
  423750:	mov	w1, #0x1                   	// #1
  423754:	mov	w0, w19
  423758:	bl	4027d0 <fcntl@plt>
  42375c:	tbnz	w0, #31, 423778 <_obstack_memory_used@@Base+0xd344>
  423760:	orr	w2, w0, #0x1
  423764:	mov	w1, #0x2                   	// #2
  423768:	mov	w0, w19
  42376c:	bl	4027d0 <fcntl@plt>
  423770:	cmn	w0, #0x1
  423774:	b.ne	423794 <_obstack_memory_used@@Base+0xd360>  // b.any
  423778:	bl	402930 <__errno_location@plt>
  42377c:	ldr	w21, [x0]
  423780:	mov	x20, x0
  423784:	mov	w0, w19
  423788:	bl	402650 <close@plt>
  42378c:	mov	w19, #0xffffffff            	// #-1
  423790:	str	w21, [x20]
  423794:	mov	w0, w19
  423798:	ldp	x20, x19, [sp, #32]
  42379c:	ldp	x22, x21, [sp, #16]
  4237a0:	ldp	x29, x30, [sp], #48
  4237a4:	ret
  4237a8:	stp	x29, x30, [sp, #-64]!
  4237ac:	mov	x29, sp
  4237b0:	stp	x19, x20, [sp, #16]
  4237b4:	adrp	x20, 436000 <_obstack_memory_used@@Base+0x1fbcc>
  4237b8:	add	x20, x20, #0xdf0
  4237bc:	stp	x21, x22, [sp, #32]
  4237c0:	adrp	x21, 436000 <_obstack_memory_used@@Base+0x1fbcc>
  4237c4:	add	x21, x21, #0xde8
  4237c8:	sub	x20, x20, x21
  4237cc:	mov	w22, w0
  4237d0:	stp	x23, x24, [sp, #48]
  4237d4:	mov	x23, x1
  4237d8:	mov	x24, x2
  4237dc:	bl	4022d0 <mbrtowc@plt-0x40>
  4237e0:	cmp	xzr, x20, asr #3
  4237e4:	b.eq	423810 <_obstack_memory_used@@Base+0xd3dc>  // b.none
  4237e8:	asr	x20, x20, #3
  4237ec:	mov	x19, #0x0                   	// #0
  4237f0:	ldr	x3, [x21, x19, lsl #3]
  4237f4:	mov	x2, x24
  4237f8:	add	x19, x19, #0x1
  4237fc:	mov	x1, x23
  423800:	mov	w0, w22
  423804:	blr	x3
  423808:	cmp	x20, x19
  42380c:	b.ne	4237f0 <_obstack_memory_used@@Base+0xd3bc>  // b.any
  423810:	ldp	x19, x20, [sp, #16]
  423814:	ldp	x21, x22, [sp, #32]
  423818:	ldp	x23, x24, [sp, #48]
  42381c:	ldp	x29, x30, [sp], #64
  423820:	ret
  423824:	nop
  423828:	ret
  42382c:	nop
  423830:	adrp	x2, 437000 <_obstack_memory_used@@Base+0x20bcc>
  423834:	mov	x1, #0x0                   	// #0
  423838:	ldr	x2, [x2, #872]
  42383c:	b	402400 <__cxa_atexit@plt>
  423840:	mov	x2, x1
  423844:	mov	x1, x0
  423848:	mov	w0, #0x0                   	// #0
  42384c:	b	402960 <__xstat@plt>
  423850:	mov	x2, x1
  423854:	mov	w1, w0
  423858:	mov	w0, #0x0                   	// #0
  42385c:	b	402870 <__fxstat@plt>
  423860:	mov	x2, x1
  423864:	mov	x1, x0
  423868:	mov	w0, #0x0                   	// #0
  42386c:	b	402800 <__lxstat@plt>
  423870:	mov	x4, x1
  423874:	mov	x5, x2
  423878:	mov	w1, w0
  42387c:	mov	x2, x4
  423880:	mov	w0, #0x0                   	// #0
  423884:	mov	w4, w3
  423888:	mov	x3, x5
  42388c:	b	4029b0 <__fxstatat@plt>

Disassembly of section .fini:

0000000000423890 <.fini>:
  423890:	stp	x29, x30, [sp, #-16]!
  423894:	mov	x29, sp
  423898:	ldp	x29, x30, [sp], #16
  42389c:	ret
