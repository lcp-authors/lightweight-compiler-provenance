
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0xd4>:
    2940:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	nop
    2958:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    295c:	add	x0, x0, #0x928
    2960:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2964:	add	x1, x1, #0x928
    2968:	cmp	x1, x0
    296c:	b.eq	2984 <PyThread_free_lock@plt+0x54>  // b.none
    2970:	adrp	x1, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2974:	ldr	x1, [x1, #3952]
    2978:	cbz	x1, 2984 <PyThread_free_lock@plt+0x54>
    297c:	mov	x16, x1
    2980:	br	x16
    2984:	ret
    2988:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    298c:	add	x0, x0, #0x928
    2990:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2994:	add	x1, x1, #0x928
    2998:	sub	x1, x1, x0
    299c:	lsr	x2, x1, #63
    29a0:	add	x1, x2, x1, asr #3
    29a4:	cmp	xzr, x1, asr #1
    29a8:	asr	x1, x1, #1
    29ac:	b.eq	29c4 <PyThread_free_lock@plt+0x94>  // b.none
    29b0:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29b4:	ldr	x2, [x2, #4064]
    29b8:	cbz	x2, 29c4 <PyThread_free_lock@plt+0x94>
    29bc:	mov	x16, x2
    29c0:	br	x16
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	str	x19, [sp, #16]
    29d4:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29d8:	ldrb	w0, [x19, #2344]
    29dc:	cbnz	w0, 2a04 <PyThread_free_lock@plt+0xd4>
    29e0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29e4:	ldr	x0, [x0, #3968]
    29e8:	cbz	x0, 29f8 <PyThread_free_lock@plt+0xc8>
    29ec:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29f0:	ldr	x0, [x0, #552]
    29f4:	bl	25c0 <__cxa_finalize@plt>
    29f8:	bl	2958 <PyThread_free_lock@plt+0x28>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	strb	w0, [x19, #2344]
    2a04:	ldr	x19, [sp, #16]
    2a08:	ldp	x29, x30, [sp], #32
    2a0c:	ret
    2a10:	b	2988 <PyThread_free_lock@plt+0x58>

0000000000002a14 <PyInit__xxsubinterpreters@@Base>:
    2a14:	stp	x29, x30, [sp, #-64]!
    2a18:	str	x23, [sp, #16]
    2a1c:	stp	x22, x21, [sp, #32]
    2a20:	stp	x20, x19, [sp, #48]
    2a24:	mov	x29, sp
    2a28:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a2c:	ldr	x8, [x19, #2352]
    2a30:	cbnz	x8, 2a40 <PyInit__xxsubinterpreters@@Base+0x2c>
    2a34:	bl	2790 <PyThread_allocate_lock@plt>
    2a38:	str	x0, [x19, #2352]
    2a3c:	cbz	x0, 2c24 <PyInit__xxsubinterpreters@@Base+0x210>
    2a40:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a44:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a48:	add	x20, x20, #0x230
    2a4c:	add	x8, x8, #0x938
    2a50:	mov	x0, x20
    2a54:	stp	xzr, xzr, [x8]
    2a58:	str	xzr, [x8, #16]
    2a5c:	bl	26c0 <PyType_Ready@plt>
    2a60:	mov	w8, w0
    2a64:	mov	x0, xzr
    2a68:	cbnz	w8, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2a6c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a70:	add	x0, x0, #0x3d0
    2a74:	mov	w1, #0x3f5                 	// #1013
    2a78:	bl	2740 <PyModule_Create2@plt>
    2a7c:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2a80:	mov	x19, x0
    2a84:	bl	28d0 <PyModule_GetDict@plt>
    2a88:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a8c:	adrp	x22, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2a90:	ldr	x8, [x23, #2400]
    2a94:	ldr	x22, [x22, #4000]
    2a98:	mov	x21, x0
    2a9c:	cbz	x8, 2c50 <PyInit__xxsubinterpreters@@Base+0x23c>
    2aa0:	ldr	x1, [x22]
    2aa4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2aa8:	add	x0, x0, #0x4c5
    2aac:	mov	x2, xzr
    2ab0:	bl	26e0 <PyErr_NewException@plt>
    2ab4:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ab8:	str	x0, [x22, #2384]
    2abc:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2ac0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ac4:	mov	x2, x0
    2ac8:	add	x1, x1, #0x4d8
    2acc:	mov	x0, x21
    2ad0:	bl	2510 <PyDict_SetItemString@plt>
    2ad4:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2ad8:	ldr	x1, [x22, #2384]
    2adc:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ae0:	add	x0, x0, #0x4e5
    2ae4:	mov	x2, xzr
    2ae8:	bl	26e0 <PyErr_NewException@plt>
    2aec:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2af0:	str	x0, [x8, #2392]
    2af4:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2af8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2afc:	mov	x2, x0
    2b00:	add	x1, x1, #0x4f8
    2b04:	mov	x0, x21
    2b08:	bl	2510 <PyDict_SetItemString@plt>
    2b0c:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2b10:	ldr	x1, [x22, #2384]
    2b14:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b18:	add	x0, x0, #0x50d
    2b1c:	mov	x2, xzr
    2b20:	bl	26e0 <PyErr_NewException@plt>
    2b24:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b28:	str	x0, [x8, #2408]
    2b2c:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2b30:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b34:	mov	x2, x0
    2b38:	add	x1, x1, #0x520
    2b3c:	mov	x0, x21
    2b40:	bl	2510 <PyDict_SetItemString@plt>
    2b44:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2b48:	ldr	x1, [x22, #2384]
    2b4c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b50:	add	x0, x0, #0x533
    2b54:	mov	x2, xzr
    2b58:	bl	26e0 <PyErr_NewException@plt>
    2b5c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b60:	str	x0, [x8, #2416]
    2b64:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2b68:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b6c:	mov	x2, x0
    2b70:	add	x1, x1, #0x546
    2b74:	mov	x0, x21
    2b78:	bl	2510 <PyDict_SetItemString@plt>
    2b7c:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2b80:	ldr	x1, [x22, #2384]
    2b84:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b88:	add	x0, x0, #0x558
    2b8c:	mov	x2, xzr
    2b90:	bl	26e0 <PyErr_NewException@plt>
    2b94:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b98:	str	x0, [x8, #2424]
    2b9c:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2ba0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ba4:	mov	x2, x0
    2ba8:	add	x1, x1, #0x56b
    2bac:	mov	x0, x21
    2bb0:	bl	2510 <PyDict_SetItemString@plt>
    2bb4:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2bb8:	ldr	x8, [x20]
    2bbc:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2bc0:	add	x1, x1, #0xfe7
    2bc4:	mov	x0, x21
    2bc8:	add	x8, x8, #0x1
    2bcc:	mov	x2, x20
    2bd0:	str	x8, [x20]
    2bd4:	bl	2510 <PyDict_SetItemString@plt>
    2bd8:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2bdc:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2be0:	ldr	x2, [x2, #3984]
    2be4:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2be8:	add	x1, x1, #0xf98
    2bec:	mov	x0, x21
    2bf0:	ldr	x8, [x2]
    2bf4:	add	x8, x8, #0x1
    2bf8:	str	x8, [x2]
    2bfc:	bl	2510 <PyDict_SetItemString@plt>
    2c00:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2c04:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c08:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2c0c:	add	x0, x0, #0x230
    2c10:	add	x1, x1, #0xc88
    2c14:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    2c18:	cmp	w0, #0x0
    2c1c:	csel	x0, x19, xzr, eq  // eq = none
    2c20:	b	2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2c24:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c28:	ldr	x0, [x8, #2384]
    2c2c:	adrp	x1, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2c30:	add	x1, x1, #0xfa6
    2c34:	bl	2670 <PyErr_SetString@plt>
    2c38:	mov	x0, xzr
    2c3c:	ldp	x20, x19, [sp, #48]
    2c40:	ldp	x22, x21, [sp, #32]
    2c44:	ldr	x23, [sp, #16]
    2c48:	ldp	x29, x30, [sp], #64
    2c4c:	ret
    2c50:	ldr	x1, [x22]
    2c54:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c58:	add	x0, x0, #0x4a3
    2c5c:	mov	x2, xzr
    2c60:	bl	26e0 <PyErr_NewException@plt>
    2c64:	str	x0, [x23, #2400]
    2c68:	cbz	x0, 2c3c <PyInit__xxsubinterpreters@@Base+0x228>
    2c6c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c70:	mov	x2, x0
    2c74:	add	x1, x1, #0x4b6
    2c78:	mov	x0, x21
    2c7c:	bl	2510 <PyDict_SetItemString@plt>
    2c80:	cbnz	w0, 2c38 <PyInit__xxsubinterpreters@@Base+0x224>
    2c84:	b	2aa0 <PyInit__xxsubinterpreters@@Base+0x8c>
    2c88:	stp	x29, x30, [sp, #-32]!
    2c8c:	stp	x20, x19, [sp, #16]
    2c90:	mov	x29, sp
    2c94:	mov	x20, x0
    2c98:	mov	w0, #0x10                  	// #16
    2c9c:	mov	x19, x1
    2ca0:	bl	2910 <PyMem_Malloc@plt>
    2ca4:	cbz	x0, 2cec <PyInit__xxsubinterpreters@@Base+0x2d8>
    2ca8:	ldr	x9, [x20, #16]
    2cac:	mov	x8, x0
    2cb0:	adrp	x10, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2cb4:	mov	w0, wzr
    2cb8:	str	x9, [x8]
    2cbc:	ldr	x9, [x20, #24]
    2cc0:	str	x9, [x8, #8]
    2cc4:	str	x8, [x19]
    2cc8:	ldr	x8, [x20]
    2ccc:	ldr	x10, [x10, #3960]
    2cd0:	adrp	x9, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2cd4:	add	x9, x9, #0xe5c
    2cd8:	add	x8, x8, #0x1
    2cdc:	str	x8, [x20]
    2ce0:	str	x20, [x19, #8]
    2ce4:	stp	x9, x10, [x19, #24]
    2ce8:	b	2cf0 <PyInit__xxsubinterpreters@@Base+0x2dc>
    2cec:	mov	w0, #0xffffffff            	// #-1
    2cf0:	ldp	x20, x19, [sp, #16]
    2cf4:	ldp	x29, x30, [sp], #32
    2cf8:	ret
    2cfc:	stp	x29, x30, [sp, #-48]!
    2d00:	str	x21, [sp, #16]
    2d04:	stp	x20, x19, [sp, #32]
    2d08:	mov	x29, sp
    2d0c:	ldp	x8, x20, [x0, #8]
    2d10:	ldr	x21, [x0, #32]
    2d14:	ldr	x8, [x8, #320]
    2d18:	blr	x8
    2d1c:	ldr	x0, [x21]
    2d20:	mov	w1, #0x1                   	// #1
    2d24:	bl	2640 <PyThread_acquire_lock@plt>
    2d28:	mov	x8, x21
    2d2c:	ldr	x9, [x8, #8]!
    2d30:	cbz	x9, 2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>
    2d34:	ldr	x10, [x9]
    2d38:	cmp	x10, x20
    2d3c:	b.ne	2d4c <PyInit__xxsubinterpreters@@Base+0x338>  // b.any
    2d40:	mov	x10, xzr
    2d44:	mov	x19, x9
    2d48:	b	2d68 <PyInit__xxsubinterpreters@@Base+0x354>
    2d4c:	mov	x19, x9
    2d50:	mov	x10, x19
    2d54:	ldr	x19, [x19, #16]
    2d58:	cbz	x19, 2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>
    2d5c:	ldr	x11, [x19]
    2d60:	cmp	x11, x20
    2d64:	b.ne	2d50 <PyInit__xxsubinterpreters@@Base+0x33c>  // b.any
    2d68:	ldr	x11, [x19, #24]
    2d6c:	subs	x11, x11, #0x1
    2d70:	str	x11, [x19, #24]
    2d74:	b.ne	2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>  // b.any
    2d78:	ldr	x11, [x19, #16]
    2d7c:	add	x10, x10, #0x10
    2d80:	cmp	x9, x19
    2d84:	csel	x8, x8, x10, eq  // eq = none
    2d88:	str	x11, [x8]
    2d8c:	ldr	x8, [x21, #16]
    2d90:	sub	x8, x8, #0x1
    2d94:	str	x8, [x21, #16]
    2d98:	ldr	x20, [x19, #8]
    2d9c:	cbz	x20, 2dd8 <PyInit__xxsubinterpreters@@Base+0x3c4>
    2da0:	ldr	x0, [x20]
    2da4:	mov	w1, #0x1                   	// #1
    2da8:	bl	2640 <PyThread_acquire_lock@plt>
    2dac:	ldr	x0, [x20, #32]
    2db0:	cbz	x0, 2dbc <PyInit__xxsubinterpreters@@Base+0x3a8>
    2db4:	bl	2590 <PyMem_Free@plt>
    2db8:	str	xzr, [x20, #32]
    2dbc:	ldr	x0, [x20]
    2dc0:	bl	27b0 <PyThread_release_lock@plt>
    2dc4:	mov	x0, x19
    2dc8:	bl	2590 <PyMem_Free@plt>
    2dcc:	mov	x0, x20
    2dd0:	bl	3050 <PyInit__xxsubinterpreters@@Base+0x63c>
    2dd4:	b	2de0 <PyInit__xxsubinterpreters@@Base+0x3cc>
    2dd8:	mov	x0, x19
    2ddc:	bl	2590 <PyMem_Free@plt>
    2de0:	ldr	x0, [x21]
    2de4:	ldp	x20, x19, [sp, #32]
    2de8:	ldr	x21, [sp, #16]
    2dec:	ldp	x29, x30, [sp], #48
    2df0:	b	27b0 <PyThread_release_lock@plt>
    2df4:	stp	x29, x30, [sp, #-32]!
    2df8:	str	x19, [sp, #16]
    2dfc:	mov	x29, sp
    2e00:	mov	x19, x0
    2e04:	ldr	x0, [x0, #8]
    2e08:	bl	2630 <_PyType_Name@plt>
    2e0c:	ldr	w8, [x19, #24]
    2e10:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e14:	adrp	x10, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e18:	add	x9, x9, #0x17
    2e1c:	add	x10, x10, #0x4
    2e20:	adrp	x11, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    2e24:	ldr	x2, [x19, #16]
    2e28:	cmn	w8, #0x1
    2e2c:	ldr	x19, [sp, #16]
    2e30:	add	x11, x11, #0xff1
    2e34:	csel	x9, x10, x9, eq  // eq = none
    2e38:	cmp	w8, #0x1
    2e3c:	csel	x8, x11, x9, eq  // eq = none
    2e40:	mov	x1, x0
    2e44:	mov	x0, x8
    2e48:	ldp	x29, x30, [sp], #32
    2e4c:	b	24f0 <PyUnicode_FromFormat@plt>
    2e50:	stp	x29, x30, [sp, #-32]!
    2e54:	stp	x20, x19, [sp, #16]
    2e58:	mov	x29, sp
    2e5c:	ldr	x0, [x0, #16]
    2e60:	bl	28e0 <PyLong_FromLongLong@plt>
    2e64:	cbz	x0, 2e90 <PyInit__xxsubinterpreters@@Base+0x47c>
    2e68:	mov	x20, x0
    2e6c:	bl	27a0 <PyObject_Hash@plt>
    2e70:	ldr	x8, [x20]
    2e74:	mov	x19, x0
    2e78:	subs	x8, x8, #0x1
    2e7c:	str	x8, [x20]
    2e80:	b.ne	2e94 <PyInit__xxsubinterpreters@@Base+0x480>  // b.any
    2e84:	mov	x0, x20
    2e88:	bl	25e0 <_Py_Dealloc@plt>
    2e8c:	b	2e94 <PyInit__xxsubinterpreters@@Base+0x480>
    2e90:	mov	x19, #0xffffffffffffffff    	// #-1
    2e94:	mov	x0, x19
    2e98:	ldp	x20, x19, [sp, #16]
    2e9c:	ldp	x29, x30, [sp], #32
    2ea0:	ret
    2ea4:	ldr	x1, [x0, #16]
    2ea8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2eac:	add	x0, x0, #0x1f
    2eb0:	b	24f0 <PyUnicode_FromFormat@plt>
    2eb4:	sub	sp, sp, #0x40
    2eb8:	stp	x29, x30, [sp, #16]
    2ebc:	stp	x22, x21, [sp, #32]
    2ec0:	stp	x20, x19, [sp, #48]
    2ec4:	add	x29, sp, #0x10
    2ec8:	orr	w8, w2, #0x1
    2ecc:	cmp	w8, #0x3
    2ed0:	b.ne	2fdc <PyInit__xxsubinterpreters@@Base+0x5c8>  // b.any
    2ed4:	mov	x20, x0
    2ed8:	ldr	x0, [x0, #8]
    2edc:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ee0:	add	x22, x22, #0x230
    2ee4:	mov	w19, w2
    2ee8:	mov	x21, x1
    2eec:	cmp	x0, x22
    2ef0:	b.eq	2f04 <PyInit__xxsubinterpreters@@Base+0x4f0>  // b.none
    2ef4:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ef8:	add	x1, x1, #0x230
    2efc:	bl	28a0 <PyType_IsSubtype@plt>
    2f00:	cbz	w0, 2fdc <PyInit__xxsubinterpreters@@Base+0x5c8>
    2f04:	ldr	x0, [x21, #8]
    2f08:	cmp	x0, x22
    2f0c:	b.eq	2f20 <PyInit__xxsubinterpreters@@Base+0x50c>  // b.none
    2f10:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2f14:	add	x1, x1, #0x230
    2f18:	bl	28a0 <PyType_IsSubtype@plt>
    2f1c:	cbz	w0, 2f88 <PyInit__xxsubinterpreters@@Base+0x574>
    2f20:	ldr	w8, [x20, #24]
    2f24:	ldr	w9, [x21, #24]
    2f28:	cmp	w8, w9
    2f2c:	b.ne	2f74 <PyInit__xxsubinterpreters@@Base+0x560>  // b.any
    2f30:	ldr	x8, [x20, #16]
    2f34:	ldr	x9, [x21, #16]
    2f38:	cmp	x8, x9
    2f3c:	cset	w8, eq  // eq = none
    2f40:	cmp	w19, #0x3
    2f44:	cset	w9, ne  // ne = any
    2f48:	cmp	w19, #0x2
    2f4c:	cset	w10, eq  // eq = none
    2f50:	cmp	w8, #0x0
    2f54:	cset	w8, ne  // ne = any
    2f58:	and	w10, w10, w8
    2f5c:	orr	w8, w9, w8
    2f60:	cmp	w10, w8
    2f64:	b.eq	2f7c <PyInit__xxsubinterpreters@@Base+0x568>  // b.none
    2f68:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f6c:	ldr	x19, [x19, #4032]
    2f70:	b	2fe4 <PyInit__xxsubinterpreters@@Base+0x5d0>
    2f74:	cmp	w19, #0x3
    2f78:	b.ne	2f68 <PyInit__xxsubinterpreters@@Base+0x554>  // b.any
    2f7c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f80:	ldr	x19, [x19, #4056]
    2f84:	b	2fe4 <PyInit__xxsubinterpreters@@Base+0x5d0>
    2f88:	ldr	x8, [x21, #8]
    2f8c:	ldrb	w8, [x8, #171]
    2f90:	tbnz	w8, #0, 3008 <PyInit__xxsubinterpreters@@Base+0x5f4>
    2f94:	mov	x0, x21
    2f98:	bl	2880 <PyNumber_Check@plt>
    2f9c:	cbz	w0, 2fdc <PyInit__xxsubinterpreters@@Base+0x5c8>
    2fa0:	ldr	x0, [x20, #16]
    2fa4:	bl	28e0 <PyLong_FromLongLong@plt>
    2fa8:	cbz	x0, 3040 <PyInit__xxsubinterpreters@@Base+0x62c>
    2fac:	mov	x1, x21
    2fb0:	mov	w2, w19
    2fb4:	mov	x20, x0
    2fb8:	bl	2650 <PyObject_RichCompare@plt>
    2fbc:	ldr	x8, [x20]
    2fc0:	mov	x19, x0
    2fc4:	subs	x8, x8, #0x1
    2fc8:	str	x8, [x20]
    2fcc:	b.ne	2ff0 <PyInit__xxsubinterpreters@@Base+0x5dc>  // b.any
    2fd0:	mov	x0, x20
    2fd4:	bl	25e0 <_Py_Dealloc@plt>
    2fd8:	b	2ff0 <PyInit__xxsubinterpreters@@Base+0x5dc>
    2fdc:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2fe0:	ldr	x19, [x19, #3992]
    2fe4:	ldr	x8, [x19]
    2fe8:	add	x8, x8, #0x1
    2fec:	str	x8, [x19]
    2ff0:	mov	x0, x19
    2ff4:	ldp	x20, x19, [sp, #48]
    2ff8:	ldp	x22, x21, [sp, #32]
    2ffc:	ldp	x29, x30, [sp, #16]
    3000:	add	sp, sp, #0x40
    3004:	ret
    3008:	sub	x1, x29, #0x4
    300c:	mov	x0, x21
    3010:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    3014:	cmn	x0, #0x1
    3018:	b.eq	3038 <PyInit__xxsubinterpreters@@Base+0x624>  // b.none
    301c:	mov	w8, wzr
    3020:	tbnz	x0, #63, 2f40 <PyInit__xxsubinterpreters@@Base+0x52c>
    3024:	ldur	w9, [x29, #-4]
    3028:	cbnz	w9, 2f40 <PyInit__xxsubinterpreters@@Base+0x52c>
    302c:	ldr	x8, [x20, #16]
    3030:	cmp	x8, x0
    3034:	b	2f3c <PyInit__xxsubinterpreters@@Base+0x528>
    3038:	bl	2730 <PyErr_Occurred@plt>
    303c:	cbz	x0, 3048 <PyInit__xxsubinterpreters@@Base+0x634>
    3040:	mov	x19, xzr
    3044:	b	2ff0 <PyInit__xxsubinterpreters@@Base+0x5dc>
    3048:	mov	w8, wzr
    304c:	b	2f40 <PyInit__xxsubinterpreters@@Base+0x52c>
    3050:	stp	x29, x30, [sp, #-48]!
    3054:	stp	x22, x21, [sp, #16]
    3058:	stp	x20, x19, [sp, #32]
    305c:	mov	x29, sp
    3060:	mov	x19, x0
    3064:	ldr	x0, [x0]
    3068:	mov	w1, #0x1                   	// #1
    306c:	bl	2640 <PyThread_acquire_lock@plt>
    3070:	ldr	x0, [x19, #32]
    3074:	cbz	x0, 3080 <PyInit__xxsubinterpreters@@Base+0x66c>
    3078:	bl	2590 <PyMem_Free@plt>
    307c:	str	xzr, [x19, #32]
    3080:	ldr	x0, [x19]
    3084:	bl	27b0 <PyThread_release_lock@plt>
    3088:	ldr	x0, [x19]
    308c:	mov	w1, #0x1                   	// #1
    3090:	bl	2640 <PyThread_acquire_lock@plt>
    3094:	ldr	x20, [x19, #8]
    3098:	ldr	x21, [x20, #8]
    309c:	cbnz	x21, 3134 <PyInit__xxsubinterpreters@@Base+0x720>
    30a0:	mov	x0, x20
    30a4:	stp	xzr, xzr, [x20]
    30a8:	str	xzr, [x20, #16]
    30ac:	bl	2590 <PyMem_Free@plt>
    30b0:	ldr	x20, [x19, #16]
    30b4:	ldr	x0, [x20, #16]
    30b8:	cbz	x0, 30cc <PyInit__xxsubinterpreters@@Base+0x6b8>
    30bc:	ldr	x21, [x0]
    30c0:	bl	2590 <PyMem_Free@plt>
    30c4:	mov	x0, x21
    30c8:	cbnz	x21, 30bc <PyInit__xxsubinterpreters@@Base+0x6a8>
    30cc:	ldr	x0, [x20, #24]
    30d0:	str	xzr, [x20, #16]
    30d4:	str	xzr, [x20]
    30d8:	cbz	x0, 30ec <PyInit__xxsubinterpreters@@Base+0x6d8>
    30dc:	ldr	x21, [x0]
    30e0:	bl	2590 <PyMem_Free@plt>
    30e4:	mov	x0, x21
    30e8:	cbnz	x21, 30dc <PyInit__xxsubinterpreters@@Base+0x6c8>
    30ec:	mov	x0, x20
    30f0:	str	xzr, [x20, #24]
    30f4:	str	xzr, [x20, #8]
    30f8:	bl	2590 <PyMem_Free@plt>
    30fc:	ldr	x0, [x19]
    3100:	bl	27b0 <PyThread_release_lock@plt>
    3104:	ldr	x0, [x19]
    3108:	bl	2930 <PyThread_free_lock@plt>
    310c:	mov	x0, x19
    3110:	ldp	x20, x19, [sp, #32]
    3114:	ldp	x22, x21, [sp, #16]
    3118:	ldp	x29, x30, [sp], #48
    311c:	b	2590 <PyMem_Free@plt>
    3120:	mov	x0, x21
    3124:	str	xzr, [x21, #8]
    3128:	bl	2590 <PyMem_Free@plt>
    312c:	mov	x21, x22
    3130:	cbz	x22, 30a0 <PyInit__xxsubinterpreters@@Base+0x68c>
    3134:	ldp	x0, x22, [x21]
    3138:	cbz	x0, 3120 <PyInit__xxsubinterpreters@@Base+0x70c>
    313c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3140:	ldr	x0, [x21]
    3144:	bl	2590 <PyMem_Free@plt>
    3148:	str	xzr, [x21]
    314c:	b	3120 <PyInit__xxsubinterpreters@@Base+0x70c>
    3150:	ldr	x0, [x0, #16]
    3154:	b	28e0 <PyLong_FromLongLong@plt>
    3158:	cbz	x1, 317c <PyInit__xxsubinterpreters@@Base+0x768>
    315c:	ldp	x8, x9, [x0, #8]
    3160:	ldr	w2, [x1]
    3164:	ldr	x3, [x0, #32]
    3168:	ldr	w5, [x0, #28]
    316c:	mov	w4, #0x1                   	// #1
    3170:	mov	x0, x8
    3174:	mov	x1, x9
    3178:	b	31b4 <PyInit__xxsubinterpreters@@Base+0x7a0>
    317c:	ldr	w8, [x0, #24]
    3180:	cmn	w8, #0x1
    3184:	b.eq	319c <PyInit__xxsubinterpreters@@Base+0x788>  // b.none
    3188:	cmp	w8, #0x1
    318c:	b.ne	31a8 <PyInit__xxsubinterpreters@@Base+0x794>  // b.any
    3190:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3194:	add	x0, x0, #0x391
    3198:	b	2850 <PyUnicode_InternFromString@plt>
    319c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31a0:	add	x0, x0, #0x3da
    31a4:	b	2850 <PyUnicode_InternFromString@plt>
    31a8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    31ac:	add	x0, x0, #0x79
    31b0:	b	2850 <PyUnicode_InternFromString@plt>
    31b4:	stp	x29, x30, [sp, #-64]!
    31b8:	stp	x24, x23, [sp, #16]
    31bc:	stp	x22, x21, [sp, #32]
    31c0:	stp	x20, x19, [sp, #48]
    31c4:	mov	x29, sp
    31c8:	mov	w23, w5
    31cc:	mov	w20, w4
    31d0:	mov	x21, x3
    31d4:	mov	w24, w2
    31d8:	mov	x22, x1
    31dc:	bl	2830 <_PyObject_New@plt>
    31e0:	mov	x19, x0
    31e4:	cbz	x0, 3288 <PyInit__xxsubinterpreters@@Base+0x874>
    31e8:	str	x22, [x19, #16]
    31ec:	stp	w24, w23, [x19, #24]
    31f0:	str	x21, [x19, #32]
    31f4:	ldr	x0, [x21]
    31f8:	mov	w1, #0x1                   	// #1
    31fc:	bl	2640 <PyThread_acquire_lock@plt>
    3200:	ldr	x8, [x21, #8]
    3204:	cbz	x8, 321c <PyInit__xxsubinterpreters@@Base+0x808>
    3208:	ldr	x9, [x8]
    320c:	cmp	x9, x22
    3210:	b.eq	3274 <PyInit__xxsubinterpreters@@Base+0x860>  // b.none
    3214:	ldr	x8, [x8, #16]
    3218:	cbnz	x8, 3208 <PyInit__xxsubinterpreters@@Base+0x7f4>
    321c:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3220:	ldr	x0, [x23, #2392]
    3224:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3228:	add	x1, x1, #0x7e
    322c:	mov	x2, x22
    3230:	bl	28c0 <PyErr_Format@plt>
    3234:	ldr	x0, [x21]
    3238:	bl	27b0 <PyThread_release_lock@plt>
    323c:	cbz	w20, 3254 <PyInit__xxsubinterpreters@@Base+0x840>
    3240:	ldr	x0, [x23, #2392]
    3244:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3248:	cbz	w0, 3254 <PyInit__xxsubinterpreters@@Base+0x840>
    324c:	bl	26f0 <PyErr_Clear@plt>
    3250:	b	3288 <PyInit__xxsubinterpreters@@Base+0x874>
    3254:	ldr	x8, [x19]
    3258:	subs	x8, x8, #0x1
    325c:	str	x8, [x19]
    3260:	b.ne	326c <PyInit__xxsubinterpreters@@Base+0x858>  // b.any
    3264:	mov	x0, x19
    3268:	bl	25e0 <_Py_Dealloc@plt>
    326c:	mov	x19, xzr
    3270:	b	3288 <PyInit__xxsubinterpreters@@Base+0x874>
    3274:	ldr	x9, [x8, #24]
    3278:	add	x9, x9, #0x1
    327c:	str	x9, [x8, #24]
    3280:	ldr	x0, [x21]
    3284:	bl	27b0 <PyThread_release_lock@plt>
    3288:	mov	x0, x19
    328c:	ldp	x20, x19, [sp, #48]
    3290:	ldp	x22, x21, [sp, #32]
    3294:	ldp	x24, x23, [sp, #16]
    3298:	ldp	x29, x30, [sp], #64
    329c:	ret
    32a0:	stp	x29, x30, [sp, #-32]!
    32a4:	stp	x20, x19, [sp, #16]
    32a8:	mov	x29, sp
    32ac:	mov	x0, x1
    32b0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    32b4:	add	x1, x1, #0xc4
    32b8:	mov	x2, xzr
    32bc:	mov	x3, xzr
    32c0:	bl	2720 <PyArg_UnpackTuple@plt>
    32c4:	cbz	w0, 3340 <PyInit__xxsubinterpreters@@Base+0x92c>
    32c8:	mov	x0, xzr
    32cc:	bl	2920 <PyThreadState_Swap@plt>
    32d0:	mov	x20, x0
    32d4:	bl	26b0 <Py_NewInterpreter@plt>
    32d8:	mov	x19, x0
    32dc:	mov	x0, x20
    32e0:	bl	2920 <PyThreadState_Swap@plt>
    32e4:	cbz	x19, 3308 <PyInit__xxsubinterpreters@@Base+0x8f4>
    32e8:	ldr	x0, [x19, #16]
    32ec:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    32f0:	cbz	x0, 3324 <PyInit__xxsubinterpreters@@Base+0x910>
    32f4:	mov	x20, x0
    32f8:	ldr	x0, [x19, #16]
    32fc:	mov	w1, #0x1                   	// #1
    3300:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    3304:	b	3344 <PyInit__xxsubinterpreters@@Base+0x930>
    3308:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    330c:	ldr	x8, [x8, #4000]
    3310:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3314:	add	x1, x1, #0xe8
    3318:	ldr	x0, [x8]
    331c:	bl	2670 <PyErr_SetString@plt>
    3320:	b	3340 <PyInit__xxsubinterpreters@@Base+0x92c>
    3324:	mov	x0, x19
    3328:	bl	2920 <PyThreadState_Swap@plt>
    332c:	mov	x20, x0
    3330:	mov	x0, x19
    3334:	bl	25d0 <Py_EndInterpreter@plt>
    3338:	mov	x0, x20
    333c:	bl	2920 <PyThreadState_Swap@plt>
    3340:	mov	x20, xzr
    3344:	mov	x0, x20
    3348:	ldp	x20, x19, [sp, #16]
    334c:	ldp	x29, x30, [sp], #32
    3350:	ret
    3354:	sub	sp, sp, #0x30
    3358:	stp	x29, x30, [sp, #16]
    335c:	stp	x20, x19, [sp, #32]
    3360:	add	x29, sp, #0x10
    3364:	mov	x8, x2
    3368:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    336c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3370:	mov	x0, x1
    3374:	add	x2, x2, #0x104
    3378:	add	x3, x3, #0x820
    337c:	add	x4, sp, #0x8
    3380:	mov	x1, x8
    3384:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3388:	cbz	w0, 33ec <PyInit__xxsubinterpreters@@Base+0x9d8>
    338c:	ldr	x0, [sp, #8]
    3390:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3394:	cbz	x0, 33f0 <PyInit__xxsubinterpreters@@Base+0x9dc>
    3398:	mov	x19, x0
    339c:	bl	2800 <_PyInterpreterState_Get@plt>
    33a0:	cbz	x0, 33f0 <PyInit__xxsubinterpreters@@Base+0x9dc>
    33a4:	cmp	x19, x0
    33a8:	b.eq	33d4 <PyInit__xxsubinterpreters@@Base+0x9c0>  // b.none
    33ac:	mov	x0, x19
    33b0:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    33b4:	mov	x20, x0
    33b8:	bl	2780 <PyThreadState_Next@plt>
    33bc:	cbz	x0, 3400 <PyInit__xxsubinterpreters@@Base+0x9ec>
    33c0:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    33c4:	ldr	x8, [x8, #4000]
    33c8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    33cc:	add	x1, x1, #0x151
    33d0:	b	33e4 <PyInit__xxsubinterpreters@@Base+0x9d0>
    33d4:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    33d8:	ldr	x8, [x8, #4000]
    33dc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    33e0:	add	x1, x1, #0x10e
    33e4:	ldr	x0, [x8]
    33e8:	bl	2670 <PyErr_SetString@plt>
    33ec:	mov	x0, xzr
    33f0:	ldp	x20, x19, [sp, #32]
    33f4:	ldp	x29, x30, [sp, #16]
    33f8:	add	sp, sp, #0x30
    33fc:	ret
    3400:	ldr	x8, [x20, #24]
    3404:	cbz	x8, 342c <PyInit__xxsubinterpreters@@Base+0xa18>
    3408:	ldrb	w8, [x8, #116]
    340c:	cbz	w8, 3434 <PyInit__xxsubinterpreters@@Base+0xa20>
    3410:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3414:	ldr	x8, [x8, #4000]
    3418:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    341c:	add	x1, x1, #0x135
    3420:	ldr	x0, [x8]
    3424:	bl	28c0 <PyErr_Format@plt>
    3428:	b	33ec <PyInit__xxsubinterpreters@@Base+0x9d8>
    342c:	bl	2730 <PyErr_Occurred@plt>
    3430:	cbnz	x0, 33ec <PyInit__xxsubinterpreters@@Base+0x9d8>
    3434:	mov	x0, x19
    3438:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    343c:	mov	x19, x0
    3440:	bl	2920 <PyThreadState_Swap@plt>
    3444:	mov	x20, x0
    3448:	mov	x0, x19
    344c:	bl	25d0 <Py_EndInterpreter@plt>
    3450:	mov	x0, x20
    3454:	bl	2920 <PyThreadState_Swap@plt>
    3458:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    345c:	ldr	x0, [x0, #4048]
    3460:	ldr	x8, [x0]
    3464:	add	x8, x8, #0x1
    3468:	str	x8, [x0]
    346c:	b	33f0 <PyInit__xxsubinterpreters@@Base+0x9dc>
    3470:	stp	x29, x30, [sp, #-48]!
    3474:	stp	x22, x21, [sp, #16]
    3478:	stp	x20, x19, [sp, #32]
    347c:	mov	x29, sp
    3480:	mov	x0, xzr
    3484:	bl	2500 <PyList_New@plt>
    3488:	mov	x19, x0
    348c:	cbz	x0, 350c <PyInit__xxsubinterpreters@@Base+0xaf8>
    3490:	bl	28f0 <PyInterpreterState_Head@plt>
    3494:	cbz	x0, 350c <PyInit__xxsubinterpreters@@Base+0xaf8>
    3498:	mov	x20, x0
    349c:	mov	x0, x20
    34a0:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    34a4:	cbz	x0, 34f0 <PyInit__xxsubinterpreters@@Base+0xadc>
    34a8:	mov	x21, x0
    34ac:	mov	x0, x19
    34b0:	mov	x1, xzr
    34b4:	mov	x2, x21
    34b8:	bl	2580 <PyList_Insert@plt>
    34bc:	ldr	x8, [x21]
    34c0:	mov	w22, w0
    34c4:	subs	x8, x8, #0x1
    34c8:	str	x8, [x21]
    34cc:	b.ne	34d8 <PyInit__xxsubinterpreters@@Base+0xac4>  // b.any
    34d0:	mov	x0, x21
    34d4:	bl	25e0 <_Py_Dealloc@plt>
    34d8:	tbnz	w22, #31, 34f0 <PyInit__xxsubinterpreters@@Base+0xadc>
    34dc:	mov	x0, x20
    34e0:	bl	25f0 <PyInterpreterState_Next@plt>
    34e4:	mov	x20, x0
    34e8:	cbnz	x0, 349c <PyInit__xxsubinterpreters@@Base+0xa88>
    34ec:	b	350c <PyInit__xxsubinterpreters@@Base+0xaf8>
    34f0:	ldr	x8, [x19]
    34f4:	subs	x8, x8, #0x1
    34f8:	str	x8, [x19]
    34fc:	b.ne	3508 <PyInit__xxsubinterpreters@@Base+0xaf4>  // b.any
    3500:	mov	x0, x19
    3504:	bl	25e0 <_Py_Dealloc@plt>
    3508:	mov	x19, xzr
    350c:	mov	x0, x19
    3510:	ldp	x20, x19, [sp, #32]
    3514:	ldp	x22, x21, [sp, #16]
    3518:	ldp	x29, x30, [sp], #48
    351c:	ret
    3520:	stp	x29, x30, [sp, #-16]!
    3524:	mov	x29, sp
    3528:	bl	2800 <_PyInterpreterState_Get@plt>
    352c:	cbz	x0, 3538 <PyInit__xxsubinterpreters@@Base+0xb24>
    3530:	ldp	x29, x30, [sp], #16
    3534:	b	2620 <_PyInterpreterState_GetIDObject@plt>
    3538:	ldp	x29, x30, [sp], #16
    353c:	ret
    3540:	mov	x0, xzr
    3544:	b	2810 <_PyInterpreterID_New@plt>
    3548:	stp	x29, x30, [sp, #-32]!
    354c:	str	x19, [sp, #16]
    3550:	mov	x29, sp
    3554:	mov	x8, x2
    3558:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    355c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3560:	mov	x0, x1
    3564:	add	x2, x2, #0x176
    3568:	add	x3, x3, #0x830
    356c:	add	x4, x29, #0x18
    3570:	mov	x1, x8
    3574:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3578:	cbz	w0, 35b0 <PyInit__xxsubinterpreters@@Base+0xb9c>
    357c:	ldr	x0, [x29, #24]
    3580:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3584:	cbz	x0, 35b4 <PyInit__xxsubinterpreters@@Base+0xba0>
    3588:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    358c:	mov	x19, x0
    3590:	bl	2780 <PyThreadState_Next@plt>
    3594:	cbz	x0, 35c0 <PyInit__xxsubinterpreters@@Base+0xbac>
    3598:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    359c:	ldr	x8, [x8, #4000]
    35a0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    35a4:	add	x1, x1, #0x151
    35a8:	ldr	x0, [x8]
    35ac:	bl	2670 <PyErr_SetString@plt>
    35b0:	mov	x0, xzr
    35b4:	ldr	x19, [sp, #16]
    35b8:	ldp	x29, x30, [sp], #32
    35bc:	ret
    35c0:	ldr	x8, [x19, #24]
    35c4:	cbz	x8, 35dc <PyInit__xxsubinterpreters@@Base+0xbc8>
    35c8:	ldrb	w8, [x8, #116]
    35cc:	cbz	w8, 35e4 <PyInit__xxsubinterpreters@@Base+0xbd0>
    35d0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    35d4:	ldr	x0, [x0, #4056]
    35d8:	b	35ec <PyInit__xxsubinterpreters@@Base+0xbd8>
    35dc:	bl	2730 <PyErr_Occurred@plt>
    35e0:	cbnz	x0, 35b0 <PyInit__xxsubinterpreters@@Base+0xb9c>
    35e4:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    35e8:	ldr	x0, [x0, #4032]
    35ec:	ldr	x8, [x0]
    35f0:	add	x8, x8, #0x1
    35f4:	str	x8, [x0]
    35f8:	b	35b4 <PyInit__xxsubinterpreters@@Base+0xba0>
    35fc:	sub	sp, sp, #0xa0
    3600:	stp	x29, x30, [sp, #64]
    3604:	stp	x28, x27, [sp, #80]
    3608:	stp	x26, x25, [sp, #96]
    360c:	stp	x24, x23, [sp, #112]
    3610:	stp	x22, x21, [sp, #128]
    3614:	stp	x20, x19, [sp, #144]
    3618:	add	x29, sp, #0x40
    361c:	mov	x8, x2
    3620:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3624:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3628:	mov	x0, x1
    362c:	add	x2, x2, #0x191
    3630:	add	x3, x3, #0x840
    3634:	add	x4, sp, #0x20
    3638:	add	x5, sp, #0x18
    363c:	add	x6, sp, #0x10
    3640:	mov	x1, x8
    3644:	str	xzr, [sp, #16]
    3648:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    364c:	cbz	w0, 36c8 <PyInit__xxsubinterpreters@@Base+0xcb4>
    3650:	ldr	x0, [sp, #32]
    3654:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3658:	cbz	x0, 36cc <PyInit__xxsubinterpreters@@Base+0xcb8>
    365c:	mov	x22, x0
    3660:	ldr	x0, [sp, #24]
    3664:	add	x1, sp, #0x8
    3668:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    366c:	cbz	x0, 36cc <PyInit__xxsubinterpreters@@Base+0xcb8>
    3670:	mov	x21, x0
    3674:	bl	2530 <strlen@plt>
    3678:	ldr	x8, [sp, #8]
    367c:	cmp	x0, x8
    3680:	b.ne	36b0 <PyInit__xxsubinterpreters@@Base+0xc9c>  // b.any
    3684:	ldr	x20, [sp, #16]
    3688:	mov	x0, x22
    368c:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3690:	mov	x19, x0
    3694:	bl	2780 <PyThreadState_Next@plt>
    3698:	cbz	x0, 36ec <PyInit__xxsubinterpreters@@Base+0xcd8>
    369c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    36a0:	ldr	x8, [x8, #4000]
    36a4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    36a8:	add	x1, x1, #0x151
    36ac:	b	36c0 <PyInit__xxsubinterpreters@@Base+0xcac>
    36b0:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    36b4:	ldr	x8, [x8, #4016]
    36b8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    36bc:	add	x1, x1, #0x1a1
    36c0:	ldr	x0, [x8]
    36c4:	bl	2670 <PyErr_SetString@plt>
    36c8:	mov	x0, xzr
    36cc:	ldp	x20, x19, [sp, #144]
    36d0:	ldp	x22, x21, [sp, #128]
    36d4:	ldp	x24, x23, [sp, #112]
    36d8:	ldp	x26, x25, [sp, #96]
    36dc:	ldp	x28, x27, [sp, #80]
    36e0:	ldp	x29, x30, [sp, #64]
    36e4:	add	sp, sp, #0xa0
    36e8:	ret
    36ec:	ldr	x8, [x19, #24]
    36f0:	cbz	x8, 3718 <PyInit__xxsubinterpreters@@Base+0xd04>
    36f4:	ldrb	w8, [x8, #116]
    36f8:	cbz	w8, 3720 <PyInit__xxsubinterpreters@@Base+0xd0c>
    36fc:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3700:	ldr	x8, [x8, #4000]
    3704:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3708:	add	x1, x1, #0x135
    370c:	ldr	x0, [x8]
    3710:	bl	28c0 <PyErr_Format@plt>
    3714:	b	36c8 <PyInit__xxsubinterpreters@@Base+0xcb4>
    3718:	bl	2730 <PyErr_Occurred@plt>
    371c:	cbnz	x0, 36c8 <PyInit__xxsubinterpreters@@Base+0xcb4>
    3720:	cbz	x20, 3898 <PyInit__xxsubinterpreters@@Base+0xe84>
    3724:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3728:	ldr	x8, [x8, #4048]
    372c:	cmp	x20, x8
    3730:	b.eq	3898 <PyInit__xxsubinterpreters@@Base+0xe84>  // b.none
    3734:	mov	x0, x20
    3738:	bl	2540 <PyDict_Size@plt>
    373c:	cbz	x0, 3898 <PyInit__xxsubinterpreters@@Base+0xe84>
    3740:	mov	x23, x0
    3744:	mov	w0, #0x10                  	// #16
    3748:	bl	2910 <PyMem_Malloc@plt>
    374c:	cbz	x0, 3774 <PyInit__xxsubinterpreters@@Base+0xd60>
    3750:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3754:	movk	x8, #0xaaab
    3758:	movk	x8, #0x2aa, lsl #48
    375c:	mov	x19, x0
    3760:	cmp	x23, x8
    3764:	str	x23, [x0]
    3768:	b.cc	377c <PyInit__xxsubinterpreters@@Base+0xd68>  // b.lo, b.ul, b.last
    376c:	str	xzr, [x19, #8]
    3770:	b	3804 <PyInit__xxsubinterpreters@@Base+0xdf0>
    3774:	bl	2600 <PyErr_NoMemory@plt>
    3778:	b	3898 <PyInit__xxsubinterpreters@@Base+0xe84>
    377c:	add	x8, x23, x23, lsl #1
    3780:	lsl	x0, x8, #4
    3784:	bl	2910 <PyMem_Malloc@plt>
    3788:	str	x0, [x19, #8]
    378c:	cbz	x0, 3804 <PyInit__xxsubinterpreters@@Base+0xdf0>
    3790:	mov	x26, xzr
    3794:	stur	xzr, [x29, #-8]
    3798:	sub	x1, x29, #0x8
    379c:	sub	x2, x29, #0x10
    37a0:	sub	x3, x29, #0x18
    37a4:	mov	x0, x20
    37a8:	bl	27d0 <PyDict_Next@plt>
    37ac:	cbz	w0, 3830 <PyInit__xxsubinterpreters@@Base+0xe1c>
    37b0:	ldp	x24, x0, [x29, #-24]
    37b4:	ldr	x27, [x19, #8]
    37b8:	bl	27e0 <PyUnicode_AsUTF8@plt>
    37bc:	cbz	x0, 3810 <PyInit__xxsubinterpreters@@Base+0xdfc>
    37c0:	mov	x25, x0
    37c4:	bl	2530 <strlen@plt>
    37c8:	add	x0, x0, #0x1
    37cc:	bl	2910 <PyMem_Malloc@plt>
    37d0:	cbz	x0, 380c <PyInit__xxsubinterpreters@@Base+0xdf8>
    37d4:	mov	x1, x25
    37d8:	bl	27f0 <strcpy@plt>
    37dc:	add	x25, x27, x26
    37e0:	mov	x1, x25
    37e4:	str	x0, [x1], #8
    37e8:	mov	x0, x24
    37ec:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    37f0:	cbnz	w0, 3818 <PyInit__xxsubinterpreters@@Base+0xe04>
    37f4:	subs	x23, x23, #0x1
    37f8:	add	x26, x26, #0x30
    37fc:	b.ne	3798 <PyInit__xxsubinterpreters@@Base+0xd84>  // b.any
    3800:	b	3830 <PyInit__xxsubinterpreters@@Base+0xe1c>
    3804:	bl	2600 <PyErr_NoMemory@plt>
    3808:	b	3890 <PyInit__xxsubinterpreters@@Base+0xe7c>
    380c:	bl	2600 <PyErr_NoMemory@plt>
    3810:	str	xzr, [x27, x26]
    3814:	b	3830 <PyInit__xxsubinterpreters@@Base+0xe1c>
    3818:	ldr	x0, [x25], #8
    381c:	cbz	x0, 3828 <PyInit__xxsubinterpreters@@Base+0xe14>
    3820:	bl	2590 <PyMem_Free@plt>
    3824:	str	xzr, [x27, x26]
    3828:	mov	x0, x25
    382c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3830:	bl	2730 <PyErr_Occurred@plt>
    3834:	cbz	x0, 3a14 <PyInit__xxsubinterpreters@@Base+0x1000>
    3838:	ldr	x8, [x19]
    383c:	cmp	x8, #0x1
    3840:	b.lt	3888 <PyInit__xxsubinterpreters@@Base+0xe74>  // b.tstop
    3844:	mov	x20, xzr
    3848:	mov	x23, xzr
    384c:	b	3870 <PyInit__xxsubinterpreters@@Base+0xe5c>
    3850:	add	x8, x24, x20
    3854:	add	x0, x8, #0x8
    3858:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    385c:	ldr	x8, [x19]
    3860:	add	x23, x23, #0x1
    3864:	add	x20, x20, #0x30
    3868:	cmp	x23, x8
    386c:	b.ge	3888 <PyInit__xxsubinterpreters@@Base+0xe74>  // b.tcont
    3870:	ldr	x24, [x19, #8]
    3874:	ldr	x0, [x24, x20]
    3878:	cbz	x0, 3850 <PyInit__xxsubinterpreters@@Base+0xe3c>
    387c:	bl	2590 <PyMem_Free@plt>
    3880:	str	xzr, [x24, x20]
    3884:	b	3850 <PyInit__xxsubinterpreters@@Base+0xe3c>
    3888:	ldr	x0, [x19, #8]
    388c:	bl	2590 <PyMem_Free@plt>
    3890:	mov	x0, x19
    3894:	bl	2590 <PyMem_Free@plt>
    3898:	bl	2730 <PyErr_Occurred@plt>
    389c:	mov	x8, x0
    38a0:	mov	x0, xzr
    38a4:	cbnz	x8, 36cc <PyInit__xxsubinterpreters@@Base+0xcb8>
    38a8:	mov	x19, xzr
    38ac:	mov	w26, #0x1                   	// #1
    38b0:	bl	2800 <_PyInterpreterState_Get@plt>
    38b4:	cmp	x0, x22
    38b8:	b.eq	38d0 <PyInit__xxsubinterpreters@@Base+0xebc>  // b.none
    38bc:	mov	x0, x22
    38c0:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    38c4:	bl	2920 <PyThreadState_Swap@plt>
    38c8:	mov	x20, x0
    38cc:	b	38d4 <PyInit__xxsubinterpreters@@Base+0xec0>
    38d0:	mov	x20, xzr
    38d4:	mov	x0, x22
    38d8:	stp	xzr, xzr, [x29, #-16]
    38dc:	stur	xzr, [x29, #-24]
    38e0:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    38e4:	cbz	x0, 3a4c <PyInit__xxsubinterpreters@@Base+0x1038>
    38e8:	mov	x23, x0
    38ec:	bl	28d0 <PyModule_GetDict@plt>
    38f0:	ldr	x8, [x23]
    38f4:	mov	x22, x0
    38f8:	subs	x8, x8, #0x1
    38fc:	str	x8, [x23]
    3900:	b.ne	390c <PyInit__xxsubinterpreters@@Base+0xef8>  // b.any
    3904:	mov	x0, x23
    3908:	bl	25e0 <_Py_Dealloc@plt>
    390c:	cbz	x22, 3a4c <PyInit__xxsubinterpreters@@Base+0x1038>
    3910:	ldr	x8, [x22]
    3914:	add	x8, x8, #0x1
    3918:	str	x8, [x22]
    391c:	tbnz	w26, #0, 39b8 <PyInit__xxsubinterpreters@@Base+0xfa4>
    3920:	ldr	x8, [x19]
    3924:	cmp	x8, #0x1
    3928:	b.lt	39b8 <PyInit__xxsubinterpreters@@Base+0xfa4>  // b.tstop
    392c:	mov	x27, xzr
    3930:	mov	x28, xzr
    3934:	ldr	x24, [x19, #8]
    3938:	ldr	x0, [x24, x27]
    393c:	bl	2840 <PyUnicode_FromString@plt>
    3940:	cbz	x0, 3a34 <PyInit__xxsubinterpreters@@Base+0x1020>
    3944:	add	x8, x24, x27
    3948:	mov	x23, x0
    394c:	add	x0, x8, #0x8
    3950:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    3954:	cbz	x0, 3a1c <PyInit__xxsubinterpreters@@Base+0x1008>
    3958:	mov	x24, x0
    395c:	mov	x0, x22
    3960:	mov	x1, x23
    3964:	mov	x2, x24
    3968:	bl	2870 <PyDict_SetItem@plt>
    396c:	ldr	x8, [x23]
    3970:	mov	w25, w0
    3974:	subs	x8, x8, #0x1
    3978:	str	x8, [x23]
    397c:	b.ne	3988 <PyInit__xxsubinterpreters@@Base+0xf74>  // b.any
    3980:	mov	x0, x23
    3984:	bl	25e0 <_Py_Dealloc@plt>
    3988:	ldr	x8, [x24]
    398c:	subs	x8, x8, #0x1
    3990:	str	x8, [x24]
    3994:	b.ne	39a0 <PyInit__xxsubinterpreters@@Base+0xf8c>  // b.any
    3998:	mov	x0, x24
    399c:	bl	25e0 <_Py_Dealloc@plt>
    39a0:	cbnz	w25, 3a34 <PyInit__xxsubinterpreters@@Base+0x1020>
    39a4:	ldr	x8, [x19]
    39a8:	add	x28, x28, #0x1
    39ac:	add	x27, x27, #0x30
    39b0:	cmp	x28, x8
    39b4:	b.lt	3934 <PyInit__xxsubinterpreters@@Base+0xf20>  // b.tstop
    39b8:	mov	w1, #0x101                 	// #257
    39bc:	mov	x0, x21
    39c0:	mov	x2, x22
    39c4:	mov	x3, x22
    39c8:	mov	x4, xzr
    39cc:	bl	2760 <PyRun_StringFlags@plt>
    39d0:	ldr	x8, [x22]
    39d4:	mov	x21, x0
    39d8:	subs	x8, x8, #0x1
    39dc:	str	x8, [x22]
    39e0:	b.ne	39ec <PyInit__xxsubinterpreters@@Base+0xfd8>  // b.any
    39e4:	mov	x0, x22
    39e8:	bl	25e0 <_Py_Dealloc@plt>
    39ec:	cbz	x21, 3a4c <PyInit__xxsubinterpreters@@Base+0x1038>
    39f0:	ldr	x8, [x21]
    39f4:	subs	x8, x8, #0x1
    39f8:	str	x8, [x21]
    39fc:	b.ne	3a08 <PyInit__xxsubinterpreters@@Base+0xff4>  // b.any
    3a00:	mov	x0, x21
    3a04:	bl	25e0 <_Py_Dealloc@plt>
    3a08:	mov	x21, xzr
    3a0c:	mov	w22, wzr
    3a10:	b	3c18 <PyInit__xxsubinterpreters@@Base+0x1204>
    3a14:	mov	w26, wzr
    3a18:	b	38b0 <PyInit__xxsubinterpreters@@Base+0xe9c>
    3a1c:	ldr	x8, [x23]
    3a20:	subs	x8, x8, #0x1
    3a24:	str	x8, [x23]
    3a28:	b.ne	3a34 <PyInit__xxsubinterpreters@@Base+0x1020>  // b.any
    3a2c:	mov	x0, x23
    3a30:	bl	25e0 <_Py_Dealloc@plt>
    3a34:	ldr	x8, [x22]
    3a38:	subs	x8, x8, #0x1
    3a3c:	str	x8, [x22]
    3a40:	b.ne	3a4c <PyInit__xxsubinterpreters@@Base+0x1038>  // b.any
    3a44:	mov	x0, x22
    3a48:	bl	25e0 <_Py_Dealloc@plt>
    3a4c:	sub	x0, x29, #0x8
    3a50:	sub	x1, x29, #0x10
    3a54:	sub	x2, x29, #0x18
    3a58:	bl	2820 <PyErr_Fetch@plt>
    3a5c:	ldp	x22, x23, [x29, #-16]
    3a60:	mov	w0, #0x10                  	// #16
    3a64:	bl	2910 <PyMem_Malloc@plt>
    3a68:	mov	x21, x0
    3a6c:	cbz	x0, 3ab4 <PyInit__xxsubinterpreters@@Base+0x10a0>
    3a70:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3a74:	add	x0, x0, #0x202
    3a78:	mov	x1, x23
    3a7c:	stp	xzr, xzr, [x21]
    3a80:	bl	24f0 <PyUnicode_FromFormat@plt>
    3a84:	cbz	x0, 3abc <PyInit__xxsubinterpreters@@Base+0x10a8>
    3a88:	mov	x23, x0
    3a8c:	bl	27e0 <PyUnicode_AsUTF8@plt>
    3a90:	cbz	x0, 3ad0 <PyInit__xxsubinterpreters@@Base+0x10bc>
    3a94:	mov	x24, x0
    3a98:	bl	2530 <strlen@plt>
    3a9c:	add	x0, x0, #0x1
    3aa0:	bl	2910 <PyMem_Malloc@plt>
    3aa4:	cbz	x0, 3ac8 <PyInit__xxsubinterpreters@@Base+0x10b4>
    3aa8:	mov	x1, x24
    3aac:	bl	27f0 <strcpy@plt>
    3ab0:	b	3ad0 <PyInit__xxsubinterpreters@@Base+0x10bc>
    3ab4:	bl	2600 <PyErr_NoMemory@plt>
    3ab8:	b	3bbc <PyInit__xxsubinterpreters@@Base+0x11a8>
    3abc:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3ac0:	add	x22, x22, #0x205
    3ac4:	b	3ba4 <PyInit__xxsubinterpreters@@Base+0x1190>
    3ac8:	bl	2600 <PyErr_NoMemory@plt>
    3acc:	mov	x0, xzr
    3ad0:	str	x0, [x21]
    3ad4:	ldr	x8, [x23]
    3ad8:	subs	x8, x8, #0x1
    3adc:	str	x8, [x23]
    3ae0:	b.ne	3af0 <PyInit__xxsubinterpreters@@Base+0x10dc>  // b.any
    3ae4:	mov	x0, x23
    3ae8:	bl	25e0 <_Py_Dealloc@plt>
    3aec:	ldr	x0, [x21]
    3af0:	cbz	x0, 3b38 <PyInit__xxsubinterpreters@@Base+0x1124>
    3af4:	cbz	x22, 3bbc <PyInit__xxsubinterpreters@@Base+0x11a8>
    3af8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3afc:	add	x0, x0, #0x202
    3b00:	mov	x1, x22
    3b04:	bl	24f0 <PyUnicode_FromFormat@plt>
    3b08:	cbz	x0, 3b54 <PyInit__xxsubinterpreters@@Base+0x1140>
    3b0c:	mov	x22, x0
    3b10:	bl	27e0 <PyUnicode_AsUTF8@plt>
    3b14:	cbz	x0, 3b68 <PyInit__xxsubinterpreters@@Base+0x1154>
    3b18:	mov	x23, x0
    3b1c:	bl	2530 <strlen@plt>
    3b20:	add	x0, x0, #0x1
    3b24:	bl	2910 <PyMem_Malloc@plt>
    3b28:	cbz	x0, 3b60 <PyInit__xxsubinterpreters@@Base+0x114c>
    3b2c:	mov	x1, x23
    3b30:	bl	27f0 <strcpy@plt>
    3b34:	b	3b68 <PyInit__xxsubinterpreters@@Base+0x1154>
    3b38:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3b3c:	ldr	x8, [x8, #4008]
    3b40:	ldr	x0, [x8]
    3b44:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3b48:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3b4c:	add	x22, x22, #0x22a
    3b50:	b	3ba4 <PyInit__xxsubinterpreters@@Base+0x1190>
    3b54:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3b58:	add	x22, x22, #0x258
    3b5c:	b	3ba4 <PyInit__xxsubinterpreters@@Base+0x1190>
    3b60:	bl	2600 <PyErr_NoMemory@plt>
    3b64:	mov	x0, xzr
    3b68:	str	x0, [x21, #8]
    3b6c:	ldr	x8, [x22]
    3b70:	subs	x8, x8, #0x1
    3b74:	str	x8, [x22]
    3b78:	b.ne	3b88 <PyInit__xxsubinterpreters@@Base+0x1174>  // b.any
    3b7c:	mov	x0, x22
    3b80:	bl	25e0 <_Py_Dealloc@plt>
    3b84:	ldr	x0, [x21, #8]
    3b88:	cbnz	x0, 3bbc <PyInit__xxsubinterpreters@@Base+0x11a8>
    3b8c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3b90:	ldr	x8, [x8, #4008]
    3b94:	ldr	x0, [x8]
    3b98:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3b9c:	adrp	x22, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3ba0:	add	x22, x22, #0x27b
    3ba4:	bl	26f0 <PyErr_Clear@plt>
    3ba8:	ldr	x0, [x21]
    3bac:	cbz	x0, 3bb8 <PyInit__xxsubinterpreters@@Base+0x11a4>
    3bb0:	bl	2590 <PyMem_Free@plt>
    3bb4:	str	xzr, [x21]
    3bb8:	str	x22, [x21, #8]
    3bbc:	ldur	x0, [x29, #-8]
    3bc0:	cbz	x0, 3bd8 <PyInit__xxsubinterpreters@@Base+0x11c4>
    3bc4:	ldr	x8, [x0]
    3bc8:	subs	x8, x8, #0x1
    3bcc:	str	x8, [x0]
    3bd0:	b.ne	3bd8 <PyInit__xxsubinterpreters@@Base+0x11c4>  // b.any
    3bd4:	bl	25e0 <_Py_Dealloc@plt>
    3bd8:	ldur	x0, [x29, #-16]
    3bdc:	cbz	x0, 3bf4 <PyInit__xxsubinterpreters@@Base+0x11e0>
    3be0:	ldr	x8, [x0]
    3be4:	subs	x8, x8, #0x1
    3be8:	str	x8, [x0]
    3bec:	b.ne	3bf4 <PyInit__xxsubinterpreters@@Base+0x11e0>  // b.any
    3bf0:	bl	25e0 <_Py_Dealloc@plt>
    3bf4:	ldur	x0, [x29, #-24]
    3bf8:	cbz	x0, 3c10 <PyInit__xxsubinterpreters@@Base+0x11fc>
    3bfc:	ldr	x8, [x0]
    3c00:	subs	x8, x8, #0x1
    3c04:	str	x8, [x0]
    3c08:	b.ne	3c10 <PyInit__xxsubinterpreters@@Base+0x11fc>  // b.any
    3c0c:	bl	25e0 <_Py_Dealloc@plt>
    3c10:	cbz	x21, 3d18 <PyInit__xxsubinterpreters@@Base+0x1304>
    3c14:	mov	w22, #0xffffffff            	// #-1
    3c18:	cbz	x20, 3c24 <PyInit__xxsubinterpreters@@Base+0x1210>
    3c1c:	mov	x0, x20
    3c20:	bl	2920 <PyThreadState_Swap@plt>
    3c24:	cbz	x21, 3c4c <PyInit__xxsubinterpreters@@Base+0x1238>
    3c28:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3c2c:	ldr	x0, [x8, #2400]
    3c30:	ldp	x2, x3, [x21]
    3c34:	cbz	x2, 3c58 <PyInit__xxsubinterpreters@@Base+0x1244>
    3c38:	cbz	x3, 3c68 <PyInit__xxsubinterpreters@@Base+0x1254>
    3c3c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3c40:	add	x1, x1, #0x2a7
    3c44:	bl	28c0 <PyErr_Format@plt>
    3c48:	b	3c78 <PyInit__xxsubinterpreters@@Base+0x1264>
    3c4c:	cbz	w22, 3c98 <PyInit__xxsubinterpreters@@Base+0x1284>
    3c50:	bl	2600 <PyErr_NoMemory@plt>
    3c54:	b	3c98 <PyInit__xxsubinterpreters@@Base+0x1284>
    3c58:	cbz	x3, 3c74 <PyInit__xxsubinterpreters@@Base+0x1260>
    3c5c:	mov	x1, x3
    3c60:	bl	2670 <PyErr_SetString@plt>
    3c64:	b	3c78 <PyInit__xxsubinterpreters@@Base+0x1264>
    3c68:	mov	x1, x2
    3c6c:	bl	2670 <PyErr_SetString@plt>
    3c70:	b	3c78 <PyInit__xxsubinterpreters@@Base+0x1264>
    3c74:	bl	2690 <PyErr_SetNone@plt>
    3c78:	ldr	x0, [x21]
    3c7c:	cbz	x0, 3c84 <PyInit__xxsubinterpreters@@Base+0x1270>
    3c80:	bl	2590 <PyMem_Free@plt>
    3c84:	ldr	x0, [x21, #8]
    3c88:	cbz	x0, 3c90 <PyInit__xxsubinterpreters@@Base+0x127c>
    3c8c:	bl	2590 <PyMem_Free@plt>
    3c90:	mov	x0, x21
    3c94:	bl	2590 <PyMem_Free@plt>
    3c98:	tbnz	w26, #0, 3cfc <PyInit__xxsubinterpreters@@Base+0x12e8>
    3c9c:	ldr	x8, [x19]
    3ca0:	cmp	x8, #0x1
    3ca4:	b.lt	3cec <PyInit__xxsubinterpreters@@Base+0x12d8>  // b.tstop
    3ca8:	mov	x20, xzr
    3cac:	mov	x21, xzr
    3cb0:	b	3cd4 <PyInit__xxsubinterpreters@@Base+0x12c0>
    3cb4:	add	x8, x23, x20
    3cb8:	add	x0, x8, #0x8
    3cbc:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3cc0:	ldr	x8, [x19]
    3cc4:	add	x21, x21, #0x1
    3cc8:	add	x20, x20, #0x30
    3ccc:	cmp	x21, x8
    3cd0:	b.ge	3cec <PyInit__xxsubinterpreters@@Base+0x12d8>  // b.tcont
    3cd4:	ldr	x23, [x19, #8]
    3cd8:	ldr	x0, [x23, x20]
    3cdc:	cbz	x0, 3cb4 <PyInit__xxsubinterpreters@@Base+0x12a0>
    3ce0:	bl	2590 <PyMem_Free@plt>
    3ce4:	str	xzr, [x23, x20]
    3ce8:	b	3cb4 <PyInit__xxsubinterpreters@@Base+0x12a0>
    3cec:	ldr	x0, [x19, #8]
    3cf0:	bl	2590 <PyMem_Free@plt>
    3cf4:	mov	x0, x19
    3cf8:	bl	2590 <PyMem_Free@plt>
    3cfc:	cbnz	w22, 36c8 <PyInit__xxsubinterpreters@@Base+0xcb4>
    3d00:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d04:	ldr	x0, [x0, #4048]
    3d08:	ldr	x8, [x0]
    3d0c:	add	x8, x8, #0x1
    3d10:	str	x8, [x0]
    3d14:	b	36cc <PyInit__xxsubinterpreters@@Base+0xcb8>
    3d18:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d1c:	ldr	x8, [x8, #3976]
    3d20:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3d24:	add	x0, x0, #0x1ce
    3d28:	mov	w1, #0x33                  	// #51
    3d2c:	ldr	x3, [x8]
    3d30:	mov	w2, #0x1                   	// #1
    3d34:	bl	27c0 <fwrite@plt>
    3d38:	bl	26f0 <PyErr_Clear@plt>
    3d3c:	b	3c14 <PyInit__xxsubinterpreters@@Base+0x1200>
    3d40:	sub	sp, sp, #0x20
    3d44:	stp	x29, x30, [sp, #16]
    3d48:	add	x29, sp, #0x10
    3d4c:	mov	x8, x2
    3d50:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3d54:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3d58:	mov	x0, x1
    3d5c:	add	x2, x2, #0x2b2
    3d60:	add	x3, x3, #0x860
    3d64:	add	x4, sp, #0x8
    3d68:	mov	x1, x8
    3d6c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3d70:	cbz	w0, 3d90 <PyInit__xxsubinterpreters@@Base+0x137c>
    3d74:	ldr	x0, [sp, #8]
    3d78:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    3d7c:	cbz	w0, 3d98 <PyInit__xxsubinterpreters@@Base+0x1384>
    3d80:	bl	26f0 <PyErr_Clear@plt>
    3d84:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d88:	ldr	x0, [x0, #4032]
    3d8c:	b	3da0 <PyInit__xxsubinterpreters@@Base+0x138c>
    3d90:	mov	x0, xzr
    3d94:	b	3dac <PyInit__xxsubinterpreters@@Base+0x1398>
    3d98:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d9c:	ldr	x0, [x0, #4056]
    3da0:	ldr	x8, [x0]
    3da4:	add	x8, x8, #0x1
    3da8:	str	x8, [x0]
    3dac:	ldp	x29, x30, [sp, #16]
    3db0:	add	sp, sp, #0x20
    3db4:	ret
    3db8:	stp	x29, x30, [sp, #-48]!
    3dbc:	stp	x22, x21, [sp, #16]
    3dc0:	stp	x20, x19, [sp, #32]
    3dc4:	mov	x29, sp
    3dc8:	mov	w0, #0x28                  	// #40
    3dcc:	bl	2910 <PyMem_Malloc@plt>
    3dd0:	cbz	x0, 3f5c <PyInit__xxsubinterpreters@@Base+0x1548>
    3dd4:	mov	x19, x0
    3dd8:	bl	2790 <PyThread_allocate_lock@plt>
    3ddc:	str	x0, [x19]
    3de0:	cbz	x0, 3ea8 <PyInit__xxsubinterpreters@@Base+0x1494>
    3de4:	mov	w0, #0x18                  	// #24
    3de8:	bl	2910 <PyMem_Malloc@plt>
    3dec:	cbz	x0, 3ec8 <PyInit__xxsubinterpreters@@Base+0x14b4>
    3df0:	stp	xzr, xzr, [x0]
    3df4:	str	xzr, [x0, #16]
    3df8:	str	x0, [x19, #8]
    3dfc:	mov	w0, #0x20                  	// #32
    3e00:	bl	2910 <PyMem_Malloc@plt>
    3e04:	cbz	x0, 3ed4 <PyInit__xxsubinterpreters@@Base+0x14c0>
    3e08:	movi	v0.2d, #0x0
    3e0c:	mov	w8, #0x1                   	// #1
    3e10:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e14:	stp	q0, q0, [x0]
    3e18:	str	x0, [x19, #16]
    3e1c:	str	w8, [x19, #24]
    3e20:	str	xzr, [x19, #32]
    3e24:	add	x21, x21, #0x930
    3e28:	ldr	x0, [x21]
    3e2c:	mov	w1, #0x1                   	// #1
    3e30:	bl	2640 <PyThread_acquire_lock@plt>
    3e34:	ldr	x20, [x21, #24]
    3e38:	tbnz	x20, #63, 3f30 <PyInit__xxsubinterpreters@@Base+0x151c>
    3e3c:	add	x8, x20, #0x1
    3e40:	adrp	x9, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e44:	mov	w0, #0x20                  	// #32
    3e48:	str	x8, [x9, #2376]
    3e4c:	bl	2910 <PyMem_Malloc@plt>
    3e50:	cbz	x0, 3f44 <PyInit__xxsubinterpreters@@Base+0x1530>
    3e54:	stp	x20, x19, [x0]
    3e58:	ldr	x8, [x21, #8]
    3e5c:	stp	x8, xzr, [x0, #16]
    3e60:	ldr	x9, [x21, #16]
    3e64:	ldr	x8, [x21]
    3e68:	add	x9, x9, #0x1
    3e6c:	stp	x0, x9, [x21, #8]
    3e70:	mov	x0, x8
    3e74:	bl	27b0 <PyThread_release_lock@plt>
    3e78:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3e7c:	add	x0, x0, #0x230
    3e80:	mov	x1, x20
    3e84:	mov	w2, wzr
    3e88:	mov	x3, x21
    3e8c:	mov	w4, wzr
    3e90:	mov	w5, wzr
    3e94:	bl	31b4 <PyInit__xxsubinterpreters@@Base+0x7a0>
    3e98:	cbnz	x0, 3f5c <PyInit__xxsubinterpreters@@Base+0x1548>
    3e9c:	mov	x0, x20
    3ea0:	bl	4b70 <PyInit__xxsubinterpreters@@Base+0x215c>
    3ea4:	b	3f58 <PyInit__xxsubinterpreters@@Base+0x1544>
    3ea8:	mov	x0, x19
    3eac:	bl	2590 <PyMem_Free@plt>
    3eb0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3eb4:	ldr	x0, [x8, #2384]
    3eb8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3ebc:	add	x1, x1, #0x2c1
    3ec0:	bl	2670 <PyErr_SetString@plt>
    3ec4:	b	3f58 <PyInit__xxsubinterpreters@@Base+0x1544>
    3ec8:	bl	2600 <PyErr_NoMemory@plt>
    3ecc:	str	xzr, [x19, #8]
    3ed0:	b	3ef4 <PyInit__xxsubinterpreters@@Base+0x14e0>
    3ed4:	ldr	x20, [x19, #8]
    3ed8:	str	xzr, [x19, #16]
    3edc:	ldr	x21, [x20, #8]
    3ee0:	cbnz	x21, 3f14 <PyInit__xxsubinterpreters@@Base+0x1500>
    3ee4:	mov	x0, x20
    3ee8:	stp	xzr, xzr, [x20]
    3eec:	str	xzr, [x20, #16]
    3ef0:	bl	2590 <PyMem_Free@plt>
    3ef4:	mov	x0, x19
    3ef8:	bl	2590 <PyMem_Free@plt>
    3efc:	b	3f58 <PyInit__xxsubinterpreters@@Base+0x1544>
    3f00:	mov	x0, x21
    3f04:	str	xzr, [x21, #8]
    3f08:	bl	2590 <PyMem_Free@plt>
    3f0c:	mov	x21, x22
    3f10:	cbz	x22, 3ee4 <PyInit__xxsubinterpreters@@Base+0x14d0>
    3f14:	ldp	x0, x22, [x21]
    3f18:	cbz	x0, 3f00 <PyInit__xxsubinterpreters@@Base+0x14ec>
    3f1c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3f20:	ldr	x0, [x21]
    3f24:	bl	2590 <PyMem_Free@plt>
    3f28:	str	xzr, [x21]
    3f2c:	b	3f00 <PyInit__xxsubinterpreters@@Base+0x14ec>
    3f30:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3f34:	ldr	x0, [x8, #2384]
    3f38:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3f3c:	add	x1, x1, #0x2e8
    3f40:	bl	2670 <PyErr_SetString@plt>
    3f44:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3f48:	ldr	x0, [x8, #2352]
    3f4c:	bl	27b0 <PyThread_release_lock@plt>
    3f50:	mov	x0, x19
    3f54:	bl	3050 <PyInit__xxsubinterpreters@@Base+0x63c>
    3f58:	mov	x0, xzr
    3f5c:	ldp	x20, x19, [sp, #32]
    3f60:	ldp	x22, x21, [sp, #16]
    3f64:	ldp	x29, x30, [sp], #48
    3f68:	ret
    3f6c:	sub	sp, sp, #0x20
    3f70:	stp	x29, x30, [sp, #16]
    3f74:	add	x29, sp, #0x10
    3f78:	mov	x8, x2
    3f7c:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3f80:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3f84:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3f88:	mov	x0, x1
    3f8c:	add	x2, x2, #0x307
    3f90:	add	x3, x3, #0x870
    3f94:	add	x4, x4, #0xc9c
    3f98:	add	x5, sp, #0x8
    3f9c:	mov	x1, x8
    3fa0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3fa4:	cbz	w0, 3fb4 <PyInit__xxsubinterpreters@@Base+0x15a0>
    3fa8:	ldr	x0, [sp, #8]
    3fac:	bl	4b70 <PyInit__xxsubinterpreters@@Base+0x215c>
    3fb0:	cbz	w0, 3fbc <PyInit__xxsubinterpreters@@Base+0x15a8>
    3fb4:	mov	x0, xzr
    3fb8:	b	3fd0 <PyInit__xxsubinterpreters@@Base+0x15bc>
    3fbc:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3fc0:	ldr	x0, [x0, #4048]
    3fc4:	ldr	x8, [x0]
    3fc8:	add	x8, x8, #0x1
    3fcc:	str	x8, [x0]
    3fd0:	ldp	x29, x30, [sp, #16]
    3fd4:	add	sp, sp, #0x20
    3fd8:	ret
    3fdc:	stp	x29, x30, [sp, #-64]!
    3fe0:	stp	x24, x23, [sp, #16]
    3fe4:	stp	x22, x21, [sp, #32]
    3fe8:	stp	x20, x19, [sp, #48]
    3fec:	mov	x29, sp
    3ff0:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3ff4:	add	x20, x20, #0x930
    3ff8:	ldr	x0, [x20]
    3ffc:	mov	w1, #0x1                   	// #1
    4000:	bl	2640 <PyThread_acquire_lock@plt>
    4004:	ldr	x8, [x20, #16]
    4008:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    400c:	cmp	x8, x9
    4010:	b.ne	4030 <PyInit__xxsubinterpreters@@Base+0x161c>  // b.any
    4014:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4018:	ldr	x8, [x8, #4000]
    401c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4020:	add	x1, x1, #0x36e
    4024:	ldr	x0, [x8]
    4028:	bl	2670 <PyErr_SetString@plt>
    402c:	b	40d8 <PyInit__xxsubinterpreters@@Base+0x16c4>
    4030:	lsr	x9, x8, #60
    4034:	cbnz	x9, 40d8 <PyInit__xxsubinterpreters@@Base+0x16c4>
    4038:	lsl	x0, x8, #3
    403c:	bl	2910 <PyMem_Malloc@plt>
    4040:	cbz	x0, 40d8 <PyInit__xxsubinterpreters@@Base+0x16c4>
    4044:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4048:	ldr	x8, [x8, #2360]
    404c:	mov	x19, x0
    4050:	cbz	x8, 4068 <PyInit__xxsubinterpreters@@Base+0x1654>
    4054:	mov	x9, x19
    4058:	ldr	x10, [x8]
    405c:	str	x10, [x9], #8
    4060:	ldr	x8, [x8, #16]
    4064:	cbnz	x8, 4058 <PyInit__xxsubinterpreters@@Base+0x1644>
    4068:	ldr	x0, [x20]
    406c:	ldr	x21, [x20, #16]
    4070:	bl	27b0 <PyThread_release_lock@plt>
    4074:	mov	x0, x21
    4078:	bl	2500 <PyList_New@plt>
    407c:	mov	x20, x0
    4080:	cbz	x0, 4118 <PyInit__xxsubinterpreters@@Base+0x1704>
    4084:	cmp	x21, #0x1
    4088:	b.lt	4118 <PyInit__xxsubinterpreters@@Base+0x1704>  // b.tstop
    408c:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4090:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4094:	mov	x24, xzr
    4098:	add	x22, x22, #0x230
    409c:	add	x23, x23, #0x930
    40a0:	ldr	x1, [x19, x24, lsl #3]
    40a4:	mov	x0, x22
    40a8:	mov	w2, wzr
    40ac:	mov	x3, x23
    40b0:	mov	w4, wzr
    40b4:	mov	w5, wzr
    40b8:	bl	31b4 <PyInit__xxsubinterpreters@@Base+0x7a0>
    40bc:	cbz	x0, 40fc <PyInit__xxsubinterpreters@@Base+0x16e8>
    40c0:	ldr	x8, [x20, #24]
    40c4:	str	x0, [x8, x24, lsl #3]
    40c8:	add	x24, x24, #0x1
    40cc:	cmp	x21, x24
    40d0:	b.ne	40a0 <PyInit__xxsubinterpreters@@Base+0x168c>  // b.any
    40d4:	b	4118 <PyInit__xxsubinterpreters@@Base+0x1704>
    40d8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    40dc:	ldr	x0, [x8, #2352]
    40e0:	bl	27b0 <PyThread_release_lock@plt>
    40e4:	ldp	x20, x19, [sp, #48]
    40e8:	ldp	x22, x21, [sp, #32]
    40ec:	ldp	x24, x23, [sp, #16]
    40f0:	mov	x0, xzr
    40f4:	ldp	x29, x30, [sp], #64
    40f8:	b	2500 <PyList_New@plt>
    40fc:	ldr	x8, [x20]
    4100:	subs	x8, x8, #0x1
    4104:	str	x8, [x20]
    4108:	b.ne	4114 <PyInit__xxsubinterpreters@@Base+0x1700>  // b.any
    410c:	mov	x0, x20
    4110:	bl	25e0 <_Py_Dealloc@plt>
    4114:	mov	x20, xzr
    4118:	mov	x0, x19
    411c:	bl	2590 <PyMem_Free@plt>
    4120:	mov	x0, x20
    4124:	ldp	x20, x19, [sp, #48]
    4128:	ldp	x22, x21, [sp, #32]
    412c:	ldp	x24, x23, [sp, #16]
    4130:	ldp	x29, x30, [sp], #64
    4134:	ret
    4138:	sub	sp, sp, #0x60
    413c:	stp	x29, x30, [sp, #32]
    4140:	stp	x24, x23, [sp, #48]
    4144:	stp	x22, x21, [sp, #64]
    4148:	stp	x20, x19, [sp, #80]
    414c:	add	x29, sp, #0x20
    4150:	mov	x8, x2
    4154:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4158:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    415c:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4160:	mov	x0, x1
    4164:	add	x2, x2, #0x385
    4168:	add	x3, x3, #0x880
    416c:	add	x4, x4, #0xc9c
    4170:	add	x5, sp, #0x10
    4174:	add	x6, sp, #0x8
    4178:	mov	x1, x8
    417c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4180:	cbz	w0, 4334 <PyInit__xxsubinterpreters@@Base+0x1920>
    4184:	ldp	x22, x20, [sp, #8]
    4188:	bl	2800 <_PyInterpreterState_Get@plt>
    418c:	cbz	x0, 4338 <PyInit__xxsubinterpreters@@Base+0x1924>
    4190:	mov	x21, x0
    4194:	sub	x1, x29, #0x8
    4198:	mov	x0, x20
    419c:	stur	xzr, [x29, #-8]
    41a0:	bl	4d68 <PyInit__xxsubinterpreters@@Base+0x2354>
    41a4:	cbz	x0, 4334 <PyInit__xxsubinterpreters@@Base+0x1920>
    41a8:	ldr	x8, [x0, #32]
    41ac:	mov	x19, x0
    41b0:	cbz	x8, 41d8 <PyInit__xxsubinterpreters@@Base+0x17c4>
    41b4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    41b8:	ldr	x0, [x8, #2408]
    41bc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    41c0:	add	x1, x1, #0x396
    41c4:	mov	x2, x20
    41c8:	bl	28c0 <PyErr_Format@plt>
    41cc:	ldur	x0, [x29, #-8]
    41d0:	bl	27b0 <PyThread_release_lock@plt>
    41d4:	b	4334 <PyInit__xxsubinterpreters@@Base+0x1920>
    41d8:	mov	w0, #0x28                  	// #40
    41dc:	bl	2910 <PyMem_Malloc@plt>
    41e0:	cbz	x0, 41cc <PyInit__xxsubinterpreters@@Base+0x17b8>
    41e4:	mov	x20, x0
    41e8:	mov	x0, x22
    41ec:	mov	x1, x20
    41f0:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    41f4:	cbz	w0, 4204 <PyInit__xxsubinterpreters@@Base+0x17f0>
    41f8:	ldur	x0, [x29, #-8]
    41fc:	bl	27b0 <PyThread_release_lock@plt>
    4200:	b	432c <PyInit__xxsubinterpreters@@Base+0x1918>
    4204:	mov	x0, x21
    4208:	bl	2680 <PyInterpreterState_GetID@plt>
    420c:	ldr	x8, [x19]
    4210:	mov	x21, x0
    4214:	mov	w1, #0x1                   	// #1
    4218:	mov	x0, x8
    421c:	bl	2640 <PyThread_acquire_lock@plt>
    4220:	ldr	w8, [x19, #24]
    4224:	cbz	w8, 4254 <PyInit__xxsubinterpreters@@Base+0x1840>
    4228:	ldr	x22, [x19, #16]
    422c:	mov	x23, x22
    4230:	ldr	x8, [x23, #16]!
    4234:	cbz	x8, 426c <PyInit__xxsubinterpreters@@Base+0x1858>
    4238:	mov	x24, x8
    423c:	ldr	x8, [x8, #8]
    4240:	cmp	x8, x21
    4244:	b.eq	42a4 <PyInit__xxsubinterpreters@@Base+0x1890>  // b.none
    4248:	ldr	x8, [x24]
    424c:	cbnz	x8, 4238 <PyInit__xxsubinterpreters@@Base+0x1824>
    4250:	b	4270 <PyInit__xxsubinterpreters@@Base+0x185c>
    4254:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4258:	ldr	x0, [x8, #2408]
    425c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4260:	add	x1, x1, #0x3a9
    4264:	bl	2670 <PyErr_SetString@plt>
    4268:	b	4314 <PyInit__xxsubinterpreters@@Base+0x1900>
    426c:	mov	x24, xzr
    4270:	mov	w0, #0x18                  	// #24
    4274:	bl	2910 <PyMem_Malloc@plt>
    4278:	cbz	x0, 4310 <PyInit__xxsubinterpreters@@Base+0x18fc>
    427c:	mov	w8, #0x1                   	// #1
    4280:	cmp	x24, #0x0
    4284:	str	w8, [x0, #16]
    4288:	csel	x8, x23, x24, eq  // eq = none
    428c:	stp	xzr, x21, [x0]
    4290:	str	x0, [x8]
    4294:	ldr	x8, [x22]
    4298:	add	x8, x8, #0x1
    429c:	str	x8, [x22]
    42a0:	b	42ac <PyInit__xxsubinterpreters@@Base+0x1898>
    42a4:	ldr	w8, [x24, #16]
    42a8:	cbz	w8, 4350 <PyInit__xxsubinterpreters@@Base+0x193c>
    42ac:	ldr	x21, [x19, #8]
    42b0:	mov	w0, #0x10                  	// #16
    42b4:	bl	2910 <PyMem_Malloc@plt>
    42b8:	cbz	x0, 4310 <PyInit__xxsubinterpreters@@Base+0x18fc>
    42bc:	stp	x20, xzr, [x0]
    42c0:	ldr	x8, [x21]
    42c4:	add	x9, x8, #0x1
    42c8:	mov	x8, x21
    42cc:	str	x9, [x8], #8
    42d0:	ldr	x9, [x8]
    42d4:	cbz	x9, 42e0 <PyInit__xxsubinterpreters@@Base+0x18cc>
    42d8:	ldr	x8, [x21, #16]
    42dc:	add	x8, x8, #0x8
    42e0:	str	x0, [x8]
    42e4:	str	x0, [x21, #16]
    42e8:	ldr	x0, [x19]
    42ec:	bl	27b0 <PyThread_release_lock@plt>
    42f0:	ldur	x0, [x29, #-8]
    42f4:	bl	27b0 <PyThread_release_lock@plt>
    42f8:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    42fc:	ldr	x0, [x0, #4048]
    4300:	ldr	x8, [x0]
    4304:	add	x8, x8, #0x1
    4308:	str	x8, [x0]
    430c:	b	4338 <PyInit__xxsubinterpreters@@Base+0x1924>
    4310:	bl	2600 <PyErr_NoMemory@plt>
    4314:	ldr	x0, [x19]
    4318:	bl	27b0 <PyThread_release_lock@plt>
    431c:	ldur	x0, [x29, #-8]
    4320:	bl	27b0 <PyThread_release_lock@plt>
    4324:	mov	x0, x20
    4328:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    432c:	mov	x0, x20
    4330:	bl	2590 <PyMem_Free@plt>
    4334:	mov	x0, xzr
    4338:	ldp	x20, x19, [sp, #80]
    433c:	ldp	x22, x21, [sp, #64]
    4340:	ldp	x24, x23, [sp, #48]
    4344:	ldp	x29, x30, [sp, #32]
    4348:	add	sp, sp, #0x60
    434c:	ret
    4350:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4354:	ldr	x0, [x8, #2408]
    4358:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    435c:	add	x1, x1, #0x3b8
    4360:	b	4264 <PyInit__xxsubinterpreters@@Base+0x1850>
    4364:	sub	sp, sp, #0x50
    4368:	stp	x29, x30, [sp, #16]
    436c:	stp	x24, x23, [sp, #32]
    4370:	stp	x22, x21, [sp, #48]
    4374:	stp	x20, x19, [sp, #64]
    4378:	add	x29, sp, #0x10
    437c:	mov	x8, x2
    4380:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4384:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4388:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    438c:	mov	x0, x1
    4390:	add	x2, x2, #0x3cf
    4394:	add	x3, x3, #0x898
    4398:	add	x4, x4, #0xc9c
    439c:	mov	x5, sp
    43a0:	mov	x1, x8
    43a4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    43a8:	cbz	w0, 4580 <PyInit__xxsubinterpreters@@Base+0x1b6c>
    43ac:	ldr	x19, [sp]
    43b0:	bl	2800 <_PyInterpreterState_Get@plt>
    43b4:	cbz	x0, 4580 <PyInit__xxsubinterpreters@@Base+0x1b6c>
    43b8:	mov	x21, x0
    43bc:	add	x1, sp, #0x8
    43c0:	mov	x0, x19
    43c4:	str	xzr, [sp, #8]
    43c8:	bl	4d68 <PyInit__xxsubinterpreters@@Base+0x2354>
    43cc:	cbz	x0, 4580 <PyInit__xxsubinterpreters@@Base+0x1b6c>
    43d0:	mov	x20, x0
    43d4:	mov	x0, x21
    43d8:	bl	2680 <PyInterpreterState_GetID@plt>
    43dc:	ldr	x8, [x20]
    43e0:	mov	x21, x0
    43e4:	mov	w1, #0x1                   	// #1
    43e8:	mov	x0, x8
    43ec:	bl	2640 <PyThread_acquire_lock@plt>
    43f0:	ldr	w8, [x20, #24]
    43f4:	cbz	w8, 4424 <PyInit__xxsubinterpreters@@Base+0x1a10>
    43f8:	ldr	x22, [x20, #16]
    43fc:	mov	x23, x22
    4400:	ldr	x8, [x23, #24]!
    4404:	cbz	x8, 443c <PyInit__xxsubinterpreters@@Base+0x1a28>
    4408:	mov	x24, x8
    440c:	ldr	x8, [x8, #8]
    4410:	cmp	x8, x21
    4414:	b.eq	4474 <PyInit__xxsubinterpreters@@Base+0x1a60>  // b.none
    4418:	ldr	x8, [x24]
    441c:	cbnz	x8, 4408 <PyInit__xxsubinterpreters@@Base+0x19f4>
    4420:	b	4440 <PyInit__xxsubinterpreters@@Base+0x1a2c>
    4424:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4428:	ldr	x0, [x8, #2408]
    442c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4430:	add	x1, x1, #0x3a9
    4434:	bl	2670 <PyErr_SetString@plt>
    4438:	b	44dc <PyInit__xxsubinterpreters@@Base+0x1ac8>
    443c:	mov	x24, xzr
    4440:	mov	w0, #0x18                  	// #24
    4444:	bl	2910 <PyMem_Malloc@plt>
    4448:	cbz	x0, 44d8 <PyInit__xxsubinterpreters@@Base+0x1ac4>
    444c:	mov	w8, #0x1                   	// #1
    4450:	cmp	x24, #0x0
    4454:	str	w8, [x0, #16]
    4458:	csel	x8, x23, x24, eq  // eq = none
    445c:	stp	xzr, x21, [x0]
    4460:	str	x0, [x8]
    4464:	ldr	x8, [x22, #8]
    4468:	add	x8, x8, #0x1
    446c:	str	x8, [x22, #8]
    4470:	b	447c <PyInit__xxsubinterpreters@@Base+0x1a68>
    4474:	ldr	w8, [x24, #16]
    4478:	cbz	w8, 45a0 <PyInit__xxsubinterpreters@@Base+0x1b8c>
    447c:	ldr	x8, [x20, #8]
    4480:	ldr	x0, [x8, #8]
    4484:	cbz	x0, 44bc <PyInit__xxsubinterpreters@@Base+0x1aa8>
    4488:	ldr	x9, [x8, #16]
    448c:	ldr	x10, [x0, #8]
    4490:	cmp	x9, x0
    4494:	str	x10, [x8, #8]
    4498:	b.ne	44a0 <PyInit__xxsubinterpreters@@Base+0x1a8c>  // b.any
    449c:	str	xzr, [x8, #16]
    44a0:	ldr	x9, [x8]
    44a4:	sub	x9, x9, #0x1
    44a8:	str	x9, [x8]
    44ac:	ldr	x21, [x0]
    44b0:	stp	xzr, xzr, [x0]
    44b4:	bl	2590 <PyMem_Free@plt>
    44b8:	cbnz	x21, 44e0 <PyInit__xxsubinterpreters@@Base+0x1acc>
    44bc:	bl	2730 <PyErr_Occurred@plt>
    44c0:	cbnz	x0, 44dc <PyInit__xxsubinterpreters@@Base+0x1ac8>
    44c4:	ldr	x8, [x20, #32]
    44c8:	cbz	x8, 44dc <PyInit__xxsubinterpreters@@Base+0x1ac8>
    44cc:	mov	x21, xzr
    44d0:	str	wzr, [x20, #24]
    44d4:	b	44e0 <PyInit__xxsubinterpreters@@Base+0x1acc>
    44d8:	bl	2600 <PyErr_NoMemory@plt>
    44dc:	mov	x21, xzr
    44e0:	ldr	x0, [x20]
    44e4:	bl	27b0 <PyThread_release_lock@plt>
    44e8:	ldr	x8, [x20, #8]
    44ec:	ldr	x8, [x8]
    44f0:	cbnz	x8, 4530 <PyInit__xxsubinterpreters@@Base+0x1b1c>
    44f4:	ldr	x8, [x20, #32]
    44f8:	cbz	x8, 4530 <PyInit__xxsubinterpreters@@Base+0x1b1c>
    44fc:	ldr	x0, [x20]
    4500:	ldr	x22, [x8]
    4504:	mov	w1, #0x1                   	// #1
    4508:	bl	2640 <PyThread_acquire_lock@plt>
    450c:	ldr	x0, [x20, #32]
    4510:	cbz	x0, 451c <PyInit__xxsubinterpreters@@Base+0x1b08>
    4514:	bl	2590 <PyMem_Free@plt>
    4518:	str	xzr, [x20, #32]
    451c:	ldr	x0, [x20]
    4520:	bl	27b0 <PyThread_release_lock@plt>
    4524:	mov	x0, x20
    4528:	str	xzr, [x22, #8]
    452c:	bl	3050 <PyInit__xxsubinterpreters@@Base+0x63c>
    4530:	ldr	x0, [sp, #8]
    4534:	bl	27b0 <PyThread_release_lock@plt>
    4538:	cbz	x21, 4560 <PyInit__xxsubinterpreters@@Base+0x1b4c>
    453c:	mov	x0, x21
    4540:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4544:	mov	x19, x0
    4548:	cbz	x0, 4584 <PyInit__xxsubinterpreters@@Base+0x1b70>
    454c:	mov	x0, x21
    4550:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4554:	mov	x0, x21
    4558:	bl	2590 <PyMem_Free@plt>
    455c:	b	4584 <PyInit__xxsubinterpreters@@Base+0x1b70>
    4560:	bl	2730 <PyErr_Occurred@plt>
    4564:	cbnz	x0, 4580 <PyInit__xxsubinterpreters@@Base+0x1b6c>
    4568:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    456c:	ldr	x0, [x8, #2416]
    4570:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4574:	add	x1, x1, #0x3df
    4578:	mov	x2, x19
    457c:	bl	28c0 <PyErr_Format@plt>
    4580:	mov	x19, xzr
    4584:	mov	x0, x19
    4588:	ldp	x20, x19, [sp, #64]
    458c:	ldp	x22, x21, [sp, #48]
    4590:	ldp	x24, x23, [sp, #32]
    4594:	ldp	x29, x30, [sp, #16]
    4598:	add	sp, sp, #0x50
    459c:	ret
    45a0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    45a4:	ldr	x0, [x8, #2408]
    45a8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    45ac:	add	x1, x1, #0x3b8
    45b0:	b	4434 <PyInit__xxsubinterpreters@@Base+0x1a20>
    45b4:	sub	sp, sp, #0x60
    45b8:	stp	x29, x30, [sp, #32]
    45bc:	str	x23, [sp, #48]
    45c0:	stp	x22, x21, [sp, #64]
    45c4:	stp	x20, x19, [sp, #80]
    45c8:	add	x29, sp, #0x20
    45cc:	mov	x8, x2
    45d0:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    45d4:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    45d8:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    45dc:	mov	x0, x1
    45e0:	sub	x9, x29, #0xc
    45e4:	add	x2, x2, #0x3fa
    45e8:	add	x3, x3, #0x8a8
    45ec:	add	x4, x4, #0xc9c
    45f0:	add	x5, x29, #0x18
    45f4:	sub	x6, x29, #0x4
    45f8:	sub	x7, x29, #0x8
    45fc:	mov	x1, x8
    4600:	stur	xzr, [x29, #-8]
    4604:	stur	wzr, [x29, #-12]
    4608:	str	x9, [sp]
    460c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4610:	cbz	w0, 46a8 <PyInit__xxsubinterpreters@@Base+0x1c94>
    4614:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4618:	add	x20, x20, #0x930
    461c:	ldr	x0, [x20]
    4620:	ldr	x19, [x29, #24]
    4624:	ldp	w22, w21, [x29, #-8]
    4628:	ldur	w23, [x29, #-12]
    462c:	mov	w1, #0x1                   	// #1
    4630:	bl	2640 <PyThread_acquire_lock@plt>
    4634:	ldr	x20, [x20, #8]
    4638:	cbz	x20, 4654 <PyInit__xxsubinterpreters@@Base+0x1c40>
    463c:	sub	w22, w21, w22
    4640:	ldr	x8, [x20]
    4644:	cmp	x8, x19
    4648:	b.eq	4668 <PyInit__xxsubinterpreters@@Base+0x1c54>  // b.none
    464c:	ldr	x20, [x20, #16]
    4650:	cbnz	x20, 4640 <PyInit__xxsubinterpreters@@Base+0x1c2c>
    4654:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4658:	ldr	x0, [x8, #2392]
    465c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4660:	add	x1, x1, #0x7e
    4664:	b	4694 <PyInit__xxsubinterpreters@@Base+0x1c80>
    4668:	ldr	x21, [x20, #8]
    466c:	cbz	x21, 4684 <PyInit__xxsubinterpreters@@Base+0x1c70>
    4670:	cmp	w22, #0x1
    4674:	b.ne	46c4 <PyInit__xxsubinterpreters@@Base+0x1cb0>  // b.any
    4678:	cbnz	w23, 46c4 <PyInit__xxsubinterpreters@@Base+0x1cb0>
    467c:	ldr	x8, [x21, #32]
    4680:	cbz	x8, 46c4 <PyInit__xxsubinterpreters@@Base+0x1cb0>
    4684:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4688:	ldr	x0, [x8, #2408]
    468c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4690:	add	x1, x1, #0x396
    4694:	mov	x2, x19
    4698:	bl	28c0 <PyErr_Format@plt>
    469c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    46a0:	ldr	x0, [x8, #2352]
    46a4:	bl	27b0 <PyThread_release_lock@plt>
    46a8:	mov	x0, xzr
    46ac:	ldp	x20, x19, [sp, #80]
    46b0:	ldp	x22, x21, [sp, #64]
    46b4:	ldr	x23, [sp, #48]
    46b8:	ldp	x29, x30, [sp, #32]
    46bc:	add	sp, sp, #0x60
    46c0:	ret
    46c4:	ldr	x0, [x21]
    46c8:	mov	w1, #0x1                   	// #1
    46cc:	bl	2640 <PyThread_acquire_lock@plt>
    46d0:	ldr	w8, [x21, #24]
    46d4:	cbz	w8, 475c <PyInit__xxsubinterpreters@@Base+0x1d48>
    46d8:	cbz	w23, 4770 <PyInit__xxsubinterpreters@@Base+0x1d5c>
    46dc:	ldr	x8, [x21, #16]
    46e0:	str	wzr, [x21, #24]
    46e4:	ldr	x9, [x8, #16]
    46e8:	cbz	x9, 4704 <PyInit__xxsubinterpreters@@Base+0x1cf0>
    46ec:	ldr	x10, [x8]
    46f0:	str	wzr, [x9, #16]
    46f4:	ldr	x9, [x9]
    46f8:	sub	x10, x10, #0x1
    46fc:	cbnz	x9, 46f0 <PyInit__xxsubinterpreters@@Base+0x1cdc>
    4700:	str	x10, [x8]
    4704:	ldr	x9, [x8, #24]
    4708:	cbz	x9, 4724 <PyInit__xxsubinterpreters@@Base+0x1d10>
    470c:	ldr	x10, [x8, #8]
    4710:	str	wzr, [x9, #16]
    4714:	ldr	x9, [x9]
    4718:	sub	x10, x10, #0x1
    471c:	cbnz	x9, 4710 <PyInit__xxsubinterpreters@@Base+0x1cfc>
    4720:	str	x10, [x8, #8]
    4724:	ldr	x0, [x21]
    4728:	bl	27b0 <PyThread_release_lock@plt>
    472c:	ldr	x0, [x20, #8]
    4730:	bl	3050 <PyInit__xxsubinterpreters@@Base+0x63c>
    4734:	str	xzr, [x20, #8]
    4738:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    473c:	ldr	x0, [x8, #2352]
    4740:	bl	27b0 <PyThread_release_lock@plt>
    4744:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4748:	ldr	x0, [x0, #4048]
    474c:	ldr	x8, [x0]
    4750:	add	x8, x8, #0x1
    4754:	str	x8, [x0]
    4758:	b	46ac <PyInit__xxsubinterpreters@@Base+0x1c98>
    475c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4760:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4764:	add	x1, x1, #0x3b8
    4768:	add	x8, x8, #0x968
    476c:	b	4790 <PyInit__xxsubinterpreters@@Base+0x1d7c>
    4770:	ldr	x8, [x21, #8]
    4774:	ldr	x8, [x8]
    4778:	cmp	x8, #0x0
    477c:	b.le	46dc <PyInit__xxsubinterpreters@@Base+0x1cc8>
    4780:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4784:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4788:	add	x1, x1, #0x410
    478c:	add	x8, x8, #0x978
    4790:	ldr	x0, [x8]
    4794:	bl	2670 <PyErr_SetString@plt>
    4798:	ldr	x0, [x21]
    479c:	bl	27b0 <PyThread_release_lock@plt>
    47a0:	cmp	w22, #0x1
    47a4:	b.ne	469c <PyInit__xxsubinterpreters@@Base+0x1c88>  // b.any
    47a8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    47ac:	ldr	x0, [x8, #2424]
    47b0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    47b4:	cbz	w0, 469c <PyInit__xxsubinterpreters@@Base+0x1c88>
    47b8:	ldr	x8, [x20, #8]
    47bc:	ldr	x8, [x8, #32]
    47c0:	cbnz	x8, 4684 <PyInit__xxsubinterpreters@@Base+0x1c70>
    47c4:	bl	26f0 <PyErr_Clear@plt>
    47c8:	ldr	x19, [x20, #8]
    47cc:	cbz	x19, 4738 <PyInit__xxsubinterpreters@@Base+0x1d24>
    47d0:	ldr	x0, [x19]
    47d4:	mov	w1, #0x1                   	// #1
    47d8:	bl	2640 <PyThread_acquire_lock@plt>
    47dc:	ldr	x8, [x19, #32]
    47e0:	cbz	x8, 4804 <PyInit__xxsubinterpreters@@Base+0x1df0>
    47e4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    47e8:	ldr	x0, [x8, #2408]
    47ec:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    47f0:	add	x1, x1, #0x3a9
    47f4:	bl	2670 <PyErr_SetString@plt>
    47f8:	ldr	x0, [x19]
    47fc:	bl	27b0 <PyThread_release_lock@plt>
    4800:	b	469c <PyInit__xxsubinterpreters@@Base+0x1c88>
    4804:	mov	w0, #0x8                   	// #8
    4808:	bl	2910 <PyMem_Malloc@plt>
    480c:	str	x0, [x19, #32]
    4810:	cbz	x0, 47f8 <PyInit__xxsubinterpreters@@Base+0x1de4>
    4814:	str	x20, [x0]
    4818:	ldr	x0, [x19]
    481c:	bl	27b0 <PyThread_release_lock@plt>
    4820:	b	4738 <PyInit__xxsubinterpreters@@Base+0x1d24>
    4824:	sub	sp, sp, #0x70
    4828:	stp	x29, x30, [sp, #48]
    482c:	stp	x24, x23, [sp, #64]
    4830:	stp	x22, x21, [sp, #80]
    4834:	stp	x20, x19, [sp, #96]
    4838:	add	x29, sp, #0x30
    483c:	mov	x8, x2
    4840:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4844:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4848:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    484c:	mov	x0, x1
    4850:	add	x9, sp, #0x14
    4854:	add	x2, x2, #0x440
    4858:	add	x3, x3, #0x8d0
    485c:	add	x4, x4, #0xc9c
    4860:	sub	x5, x29, #0x10
    4864:	sub	x6, x29, #0x14
    4868:	add	x7, sp, #0x18
    486c:	mov	x1, x8
    4870:	stur	wzr, [x29, #-20]
    4874:	stp	wzr, wzr, [sp, #20]
    4878:	str	x9, [sp]
    487c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4880:	cbz	w0, 4a08 <PyInit__xxsubinterpreters@@Base+0x1ff4>
    4884:	ldur	w23, [x29, #-20]
    4888:	ldr	w22, [sp, #24]
    488c:	orr	w8, w22, w23
    4890:	cbnz	w8, 48a4 <PyInit__xxsubinterpreters@@Base+0x1e90>
    4894:	mov	w22, #0x1                   	// #1
    4898:	mov	w23, #0x1                   	// #1
    489c:	stur	w22, [x29, #-20]
    48a0:	str	w22, [sp, #24]
    48a4:	ldur	x19, [x29, #-16]
    48a8:	bl	2800 <_PyInterpreterState_Get@plt>
    48ac:	cbz	x0, 4a0c <PyInit__xxsubinterpreters@@Base+0x1ff8>
    48b0:	mov	x20, x0
    48b4:	sub	x1, x29, #0x8
    48b8:	mov	x0, x19
    48bc:	stur	xzr, [x29, #-8]
    48c0:	bl	4d68 <PyInit__xxsubinterpreters@@Base+0x2354>
    48c4:	cbz	x0, 4a0c <PyInit__xxsubinterpreters@@Base+0x1ff8>
    48c8:	mov	x19, x0
    48cc:	mov	x0, x20
    48d0:	bl	2680 <PyInterpreterState_GetID@plt>
    48d4:	ldr	x8, [x19]
    48d8:	mov	x20, x0
    48dc:	mov	w1, #0x1                   	// #1
    48e0:	mov	x0, x8
    48e4:	bl	2640 <PyThread_acquire_lock@plt>
    48e8:	ldr	w8, [x19, #24]
    48ec:	cbz	w8, 4924 <PyInit__xxsubinterpreters@@Base+0x1f10>
    48f0:	ldr	x21, [x19, #16]
    48f4:	sub	w22, w23, w22
    48f8:	tbnz	w22, #31, 4990 <PyInit__xxsubinterpreters@@Base+0x1f7c>
    48fc:	mov	x24, x21
    4900:	ldr	x8, [x24, #16]!
    4904:	cbz	x8, 493c <PyInit__xxsubinterpreters@@Base+0x1f28>
    4908:	mov	x23, x8
    490c:	ldr	x8, [x8, #8]
    4910:	cmp	x8, x20
    4914:	b.eq	4978 <PyInit__xxsubinterpreters@@Base+0x1f64>  // b.none
    4918:	ldr	x8, [x23]
    491c:	cbnz	x8, 4908 <PyInit__xxsubinterpreters@@Base+0x1ef4>
    4920:	b	4940 <PyInit__xxsubinterpreters@@Base+0x1f2c>
    4924:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4928:	ldr	x0, [x8, #2408]
    492c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4930:	add	x1, x1, #0x3b8
    4934:	bl	2670 <PyErr_SetString@plt>
    4938:	b	49f8 <PyInit__xxsubinterpreters@@Base+0x1fe4>
    493c:	mov	x23, xzr
    4940:	mov	w0, #0x18                  	// #24
    4944:	bl	2910 <PyMem_Malloc@plt>
    4948:	cbz	x0, 49f4 <PyInit__xxsubinterpreters@@Base+0x1fe0>
    494c:	mov	w8, #0x1                   	// #1
    4950:	cmp	x23, #0x0
    4954:	str	w8, [x0, #16]
    4958:	csel	x8, x24, x23, eq  // eq = none
    495c:	stp	xzr, x20, [x0]
    4960:	str	x0, [x8]
    4964:	ldr	x8, [x21]
    4968:	mov	x23, x0
    496c:	add	x8, x8, #0x1
    4970:	str	x8, [x21]
    4974:	b	497c <PyInit__xxsubinterpreters@@Base+0x1f68>
    4978:	ldr	x8, [x21]
    497c:	sub	x8, x8, #0x1
    4980:	cmp	w22, #0x0
    4984:	str	wzr, [x23, #16]
    4988:	str	x8, [x21]
    498c:	b.gt	4a34 <PyInit__xxsubinterpreters@@Base+0x2020>
    4990:	mov	x23, x21
    4994:	ldr	x8, [x23, #24]!
    4998:	cbz	x8, 49b8 <PyInit__xxsubinterpreters@@Base+0x1fa4>
    499c:	mov	x22, x8
    49a0:	ldr	x8, [x8, #8]
    49a4:	cmp	x8, x20
    49a8:	b.eq	4a24 <PyInit__xxsubinterpreters@@Base+0x2010>  // b.none
    49ac:	ldr	x8, [x22]
    49b0:	cbnz	x8, 499c <PyInit__xxsubinterpreters@@Base+0x1f88>
    49b4:	b	49bc <PyInit__xxsubinterpreters@@Base+0x1fa8>
    49b8:	mov	x22, xzr
    49bc:	mov	w0, #0x18                  	// #24
    49c0:	bl	2910 <PyMem_Malloc@plt>
    49c4:	cbz	x0, 49f4 <PyInit__xxsubinterpreters@@Base+0x1fe0>
    49c8:	mov	w8, #0x1                   	// #1
    49cc:	cmp	x22, #0x0
    49d0:	str	w8, [x0, #16]
    49d4:	csel	x8, x23, x22, eq  // eq = none
    49d8:	stp	xzr, x20, [x0]
    49dc:	str	x0, [x8]
    49e0:	ldr	x8, [x21, #8]
    49e4:	mov	x22, x0
    49e8:	add	x8, x8, #0x1
    49ec:	str	x8, [x21, #8]
    49f0:	b	4a28 <PyInit__xxsubinterpreters@@Base+0x2014>
    49f4:	bl	2600 <PyErr_NoMemory@plt>
    49f8:	ldr	x0, [x19]
    49fc:	bl	27b0 <PyThread_release_lock@plt>
    4a00:	ldur	x0, [x29, #-8]
    4a04:	bl	27b0 <PyThread_release_lock@plt>
    4a08:	mov	x0, xzr
    4a0c:	ldp	x20, x19, [sp, #96]
    4a10:	ldp	x22, x21, [sp, #80]
    4a14:	ldp	x24, x23, [sp, #64]
    4a18:	ldp	x29, x30, [sp, #48]
    4a1c:	add	sp, sp, #0x70
    4a20:	ret
    4a24:	ldr	x8, [x21, #8]
    4a28:	sub	x8, x8, #0x1
    4a2c:	str	wzr, [x22, #16]
    4a30:	str	x8, [x21, #8]
    4a34:	ldr	x8, [x19, #16]
    4a38:	ldr	x9, [x8]
    4a3c:	cbnz	x9, 4a48 <PyInit__xxsubinterpreters@@Base+0x2034>
    4a40:	ldr	x9, [x8, #8]
    4a44:	cbz	x9, 4a78 <PyInit__xxsubinterpreters@@Base+0x2064>
    4a48:	mov	w8, #0x1                   	// #1
    4a4c:	ldr	x0, [x19]
    4a50:	str	w8, [x19, #24]
    4a54:	bl	27b0 <PyThread_release_lock@plt>
    4a58:	ldur	x0, [x29, #-8]
    4a5c:	bl	27b0 <PyThread_release_lock@plt>
    4a60:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4a64:	ldr	x0, [x0, #4048]
    4a68:	ldr	x8, [x0]
    4a6c:	add	x8, x8, #0x1
    4a70:	str	x8, [x0]
    4a74:	b	4a0c <PyInit__xxsubinterpreters@@Base+0x1ff8>
    4a78:	ldr	x9, [x8, #16]
    4a7c:	cbnz	x9, 4a88 <PyInit__xxsubinterpreters@@Base+0x2074>
    4a80:	ldr	x8, [x8, #24]
    4a84:	cbz	x8, 4a48 <PyInit__xxsubinterpreters@@Base+0x2034>
    4a88:	mov	w8, wzr
    4a8c:	b	4a4c <PyInit__xxsubinterpreters@@Base+0x2038>
    4a90:	sub	sp, sp, #0x40
    4a94:	stp	x29, x30, [sp, #48]
    4a98:	add	x29, sp, #0x30
    4a9c:	mov	x8, x2
    4aa0:	mov	w9, #0xffffffff            	// #-1
    4aa4:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4aa8:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4aac:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    4ab0:	mov	x0, x1
    4ab4:	stp	wzr, w9, [x29, #-20]
    4ab8:	stur	w9, [x29, #-12]
    4abc:	add	x9, sp, #0x18
    4ac0:	sub	x10, x29, #0x14
    4ac4:	add	x2, x2, #0x461
    4ac8:	add	x3, x3, #0x8f8
    4acc:	add	x4, x4, #0xc9c
    4ad0:	sub	x5, x29, #0x8
    4ad4:	sub	x6, x29, #0xc
    4ad8:	sub	x7, x29, #0x10
    4adc:	mov	x1, x8
    4ae0:	str	wzr, [sp, #24]
    4ae4:	stp	x10, x9, [sp]
    4ae8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4aec:	cbz	w0, 4b14 <PyInit__xxsubinterpreters@@Base+0x2100>
    4af0:	ldp	w8, w9, [x29, #-16]
    4af4:	orr	w10, w8, w9
    4af8:	cbz	w10, 4b1c <PyInit__xxsubinterpreters@@Base+0x2108>
    4afc:	cmp	w9, #0x1
    4b00:	b.ne	4b3c <PyInit__xxsubinterpreters@@Base+0x2128>  // b.any
    4b04:	add	w8, w8, #0x1
    4b08:	cmp	w8, #0x2
    4b0c:	cset	w2, cc  // cc = lo, ul, last
    4b10:	b	4b44 <PyInit__xxsubinterpreters@@Base+0x2130>
    4b14:	mov	x0, xzr
    4b18:	b	4b64 <PyInit__xxsubinterpreters@@Base+0x2150>
    4b1c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4b20:	ldr	x8, [x8, #4016]
    4b24:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4b28:	add	x1, x1, #0x47c
    4b2c:	ldr	x0, [x8]
    4b30:	bl	2670 <PyErr_SetString@plt>
    4b34:	mov	x0, xzr
    4b38:	b	4b64 <PyInit__xxsubinterpreters@@Base+0x2150>
    4b3c:	cmp	w8, #0x1
    4b40:	csetm	w2, eq  // eq = none
    4b44:	ldur	x1, [x29, #-8]
    4b48:	ldur	w4, [x29, #-20]
    4b4c:	ldr	w5, [sp, #24]
    4b50:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b54:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b58:	add	x0, x0, #0x230
    4b5c:	add	x3, x3, #0x930
    4b60:	bl	31b4 <PyInit__xxsubinterpreters@@Base+0x7a0>
    4b64:	ldp	x29, x30, [sp, #48]
    4b68:	add	sp, sp, #0x40
    4b6c:	ret
    4b70:	stp	x29, x30, [sp, #-32]!
    4b74:	stp	x20, x19, [sp, #16]
    4b78:	mov	x29, sp
    4b7c:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b80:	add	x19, x19, #0x930
    4b84:	ldr	x8, [x19]
    4b88:	mov	x20, x0
    4b8c:	mov	w1, #0x1                   	// #1
    4b90:	mov	x0, x8
    4b94:	bl	2640 <PyThread_acquire_lock@plt>
    4b98:	ldr	x19, [x19, #8]
    4b9c:	cbz	x19, 4c4c <PyInit__xxsubinterpreters@@Base+0x2238>
    4ba0:	ldr	x8, [x19]
    4ba4:	cmp	x8, x20
    4ba8:	b.ne	4bbc <PyInit__xxsubinterpreters@@Base+0x21a8>  // b.any
    4bac:	ldr	x10, [x19, #16]
    4bb0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4bb4:	str	x10, [x8, #2360]
    4bb8:	b	4bec <PyInit__xxsubinterpreters@@Base+0x21d8>
    4bbc:	mov	x8, x19
    4bc0:	mov	x9, x8
    4bc4:	ldr	x8, [x8, #16]
    4bc8:	cbz	x8, 4c4c <PyInit__xxsubinterpreters@@Base+0x2238>
    4bcc:	ldr	x10, [x8]
    4bd0:	cmp	x10, x20
    4bd4:	b.ne	4bc0 <PyInit__xxsubinterpreters@@Base+0x21ac>  // b.any
    4bd8:	ldr	x10, [x8, #16]
    4bdc:	cmp	x19, x8
    4be0:	b.eq	4bb0 <PyInit__xxsubinterpreters@@Base+0x219c>  // b.none
    4be4:	mov	x19, x8
    4be8:	str	x10, [x9, #16]
    4bec:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4bf0:	ldr	x9, [x8, #2368]
    4bf4:	sub	x9, x9, #0x1
    4bf8:	str	x9, [x8, #2368]
    4bfc:	ldr	x20, [x19, #8]
    4c00:	cbz	x20, 4c78 <PyInit__xxsubinterpreters@@Base+0x2264>
    4c04:	ldr	x0, [x20]
    4c08:	mov	w1, #0x1                   	// #1
    4c0c:	bl	2640 <PyThread_acquire_lock@plt>
    4c10:	ldr	x0, [x20, #32]
    4c14:	cbz	x0, 4c20 <PyInit__xxsubinterpreters@@Base+0x220c>
    4c18:	bl	2590 <PyMem_Free@plt>
    4c1c:	str	xzr, [x20, #32]
    4c20:	ldr	x0, [x20]
    4c24:	bl	27b0 <PyThread_release_lock@plt>
    4c28:	mov	x0, x19
    4c2c:	bl	2590 <PyMem_Free@plt>
    4c30:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4c34:	ldr	x0, [x8, #2352]
    4c38:	bl	27b0 <PyThread_release_lock@plt>
    4c3c:	cbz	x20, 4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4c40:	mov	x0, x20
    4c44:	bl	3050 <PyInit__xxsubinterpreters@@Base+0x63c>
    4c48:	b	4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4c4c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4c50:	ldr	x0, [x8, #2392]
    4c54:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4c58:	add	x1, x1, #0x7e
    4c5c:	mov	x2, x20
    4c60:	bl	28c0 <PyErr_Format@plt>
    4c64:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4c68:	ldr	x0, [x8, #2352]
    4c6c:	bl	27b0 <PyThread_release_lock@plt>
    4c70:	mov	w0, #0xffffffff            	// #-1
    4c74:	b	4c90 <PyInit__xxsubinterpreters@@Base+0x227c>
    4c78:	mov	x0, x19
    4c7c:	bl	2590 <PyMem_Free@plt>
    4c80:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4c84:	ldr	x0, [x8, #2352]
    4c88:	bl	27b0 <PyThread_release_lock@plt>
    4c8c:	mov	w0, wzr
    4c90:	ldp	x20, x19, [sp, #16]
    4c94:	ldp	x29, x30, [sp], #32
    4c98:	ret
    4c9c:	stp	x29, x30, [sp, #-32]!
    4ca0:	stp	x20, x19, [sp, #16]
    4ca4:	mov	x29, sp
    4ca8:	mov	x19, x0
    4cac:	ldr	x0, [x0, #8]
    4cb0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4cb4:	add	x8, x8, #0x230
    4cb8:	mov	x20, x1
    4cbc:	cmp	x0, x8
    4cc0:	b.eq	4cd4 <PyInit__xxsubinterpreters@@Base+0x22c0>  // b.none
    4cc4:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4cc8:	add	x1, x1, #0x230
    4ccc:	bl	28a0 <PyType_IsSubtype@plt>
    4cd0:	cbz	w0, 4cec <PyInit__xxsubinterpreters@@Base+0x22d8>
    4cd4:	ldr	x0, [x19, #16]
    4cd8:	str	x0, [x20]
    4cdc:	mov	w0, #0x1                   	// #1
    4ce0:	ldp	x20, x19, [sp, #16]
    4ce4:	ldp	x29, x30, [sp], #32
    4ce8:	ret
    4cec:	ldr	x8, [x19, #8]
    4cf0:	ldr	x9, [x8, #96]
    4cf4:	cbz	x9, 4d18 <PyInit__xxsubinterpreters@@Base+0x2304>
    4cf8:	ldr	x9, [x9, #264]
    4cfc:	cbz	x9, 4d18 <PyInit__xxsubinterpreters@@Base+0x2304>
    4d00:	mov	x0, x19
    4d04:	bl	2890 <PyLong_AsLongLong@plt>
    4d08:	cmn	x0, #0x1
    4d0c:	b.eq	4d3c <PyInit__xxsubinterpreters@@Base+0x2328>  // b.none
    4d10:	tbz	x0, #63, 4cd8 <PyInit__xxsubinterpreters@@Base+0x22c4>
    4d14:	b	4d4c <PyInit__xxsubinterpreters@@Base+0x2338>
    4d18:	adrp	x9, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4d1c:	ldr	x9, [x9, #4024]
    4d20:	ldr	x2, [x8, #24]
    4d24:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d28:	add	x1, x1, #0x348
    4d2c:	ldr	x0, [x9]
    4d30:	bl	28c0 <PyErr_Format@plt>
    4d34:	mov	w0, wzr
    4d38:	b	4ce0 <PyInit__xxsubinterpreters@@Base+0x22cc>
    4d3c:	bl	2730 <PyErr_Occurred@plt>
    4d40:	cbz	x0, 4d4c <PyInit__xxsubinterpreters@@Base+0x2338>
    4d44:	mov	w0, wzr
    4d48:	b	4ce0 <PyInit__xxsubinterpreters@@Base+0x22cc>
    4d4c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4d50:	ldr	x8, [x8, #4016]
    4d54:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d58:	add	x1, x1, #0x31a
    4d5c:	mov	x2, x19
    4d60:	ldr	x0, [x8]
    4d64:	b	4d30 <PyInit__xxsubinterpreters@@Base+0x231c>
    4d68:	stp	x29, x30, [sp, #-48]!
    4d6c:	stp	x22, x21, [sp, #16]
    4d70:	stp	x20, x19, [sp, #32]
    4d74:	mov	x29, sp
    4d78:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4d7c:	ldr	x8, [x22, #2352]
    4d80:	mov	x19, x1
    4d84:	mov	x20, x0
    4d88:	mov	w1, #0x1                   	// #1
    4d8c:	mov	x0, x8
    4d90:	bl	2640 <PyThread_acquire_lock@plt>
    4d94:	cbz	x19, 4d9c <PyInit__xxsubinterpreters@@Base+0x2388>
    4d98:	str	xzr, [x19]
    4d9c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4da0:	ldr	x9, [x8, #2360]
    4da4:	cbz	x9, 4dd0 <PyInit__xxsubinterpreters@@Base+0x23bc>
    4da8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4dac:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4db0:	add	x1, x1, #0x7e
    4db4:	add	x8, x8, #0x958
    4db8:	ldr	x10, [x9]
    4dbc:	cmp	x10, x20
    4dc0:	b.eq	4de4 <PyInit__xxsubinterpreters@@Base+0x23d0>  // b.none
    4dc4:	ldr	x9, [x9, #16]
    4dc8:	cbnz	x9, 4db8 <PyInit__xxsubinterpreters@@Base+0x23a4>
    4dcc:	b	4e1c <PyInit__xxsubinterpreters@@Base+0x2408>
    4dd0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4dd4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4dd8:	add	x1, x1, #0x7e
    4ddc:	add	x8, x8, #0x958
    4de0:	b	4e1c <PyInit__xxsubinterpreters@@Base+0x2408>
    4de4:	ldr	x21, [x9, #8]
    4de8:	cbz	x21, 4e0c <PyInit__xxsubinterpreters@@Base+0x23f8>
    4dec:	ldr	w8, [x21, #24]
    4df0:	cbz	w8, 4e0c <PyInit__xxsubinterpreters@@Base+0x23f8>
    4df4:	cbz	x19, 4e40 <PyInit__xxsubinterpreters@@Base+0x242c>
    4df8:	ldr	x8, [x22, #2352]
    4dfc:	str	x8, [x19]
    4e00:	ldr	x21, [x9, #8]
    4e04:	cbnz	x8, 4e48 <PyInit__xxsubinterpreters@@Base+0x2434>
    4e08:	b	4e40 <PyInit__xxsubinterpreters@@Base+0x242c>
    4e0c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4e10:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4e14:	add	x1, x1, #0x396
    4e18:	add	x8, x8, #0x968
    4e1c:	ldr	x0, [x8]
    4e20:	mov	x2, x20
    4e24:	bl	28c0 <PyErr_Format@plt>
    4e28:	cbz	x19, 4e3c <PyInit__xxsubinterpreters@@Base+0x2428>
    4e2c:	ldr	x8, [x19]
    4e30:	mov	x21, xzr
    4e34:	cbnz	x8, 4e48 <PyInit__xxsubinterpreters@@Base+0x2434>
    4e38:	b	4e40 <PyInit__xxsubinterpreters@@Base+0x242c>
    4e3c:	mov	x21, xzr
    4e40:	ldr	x0, [x22, #2352]
    4e44:	bl	27b0 <PyThread_release_lock@plt>
    4e48:	mov	x0, x21
    4e4c:	ldp	x20, x19, [sp, #32]
    4e50:	ldp	x22, x21, [sp, #16]
    4e54:	ldp	x29, x30, [sp], #48
    4e58:	ret
    4e5c:	stp	x29, x30, [sp, #-48]!
    4e60:	str	x21, [sp, #16]
    4e64:	stp	x20, x19, [sp, #32]
    4e68:	mov	x29, sp
    4e6c:	ldr	x20, [x0]
    4e70:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4e74:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4e78:	add	x0, x0, #0x230
    4e7c:	ldr	x1, [x20]
    4e80:	ldr	w2, [x20, #8]
    4e84:	add	x3, x3, #0x930
    4e88:	mov	w4, wzr
    4e8c:	mov	w5, wzr
    4e90:	bl	31b4 <PyInit__xxsubinterpreters@@Base+0x7a0>
    4e94:	ldr	w21, [x20, #8]
    4e98:	mov	x19, x0
    4e9c:	cbz	w21, 4f70 <PyInit__xxsubinterpreters@@Base+0x255c>
    4ea0:	ldr	w8, [x20, #12]
    4ea4:	cbz	w8, 4f70 <PyInit__xxsubinterpreters@@Base+0x255c>
    4ea8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4eac:	add	x0, x0, #0x58d
    4eb0:	bl	2750 <PyImport_ImportModule@plt>
    4eb4:	mov	x20, x0
    4eb8:	cbnz	x0, 4ed4 <PyInit__xxsubinterpreters@@Base+0x24c0>
    4ebc:	bl	26f0 <PyErr_Clear@plt>
    4ec0:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4ec4:	add	x0, x0, #0x580
    4ec8:	bl	2750 <PyImport_ImportModule@plt>
    4ecc:	mov	x20, x0
    4ed0:	cbz	x0, 4f6c <PyInit__xxsubinterpreters@@Base+0x2558>
    4ed4:	adrp	x8, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4ed8:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4edc:	add	x8, x8, #0x5a6
    4ee0:	add	x9, x9, #0x59a
    4ee4:	cmn	w21, #0x1
    4ee8:	csel	x1, x9, x8, eq  // eq = none
    4eec:	mov	x0, x20
    4ef0:	bl	25b0 <PyObject_GetAttrString@plt>
    4ef4:	ldr	x8, [x20]
    4ef8:	mov	x21, x0
    4efc:	subs	x8, x8, #0x1
    4f00:	str	x8, [x20]
    4f04:	b.eq	4f10 <PyInit__xxsubinterpreters@@Base+0x24fc>  // b.none
    4f08:	cbnz	x21, 4f1c <PyInit__xxsubinterpreters@@Base+0x2508>
    4f0c:	b	4f6c <PyInit__xxsubinterpreters@@Base+0x2558>
    4f10:	mov	x0, x20
    4f14:	bl	25e0 <_Py_Dealloc@plt>
    4f18:	cbz	x21, 4f6c <PyInit__xxsubinterpreters@@Base+0x2558>
    4f1c:	mov	x0, x21
    4f20:	mov	x1, x19
    4f24:	mov	x2, xzr
    4f28:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    4f2c:	ldr	x8, [x21]
    4f30:	mov	x20, x0
    4f34:	subs	x8, x8, #0x1
    4f38:	str	x8, [x21]
    4f3c:	b.eq	4f60 <PyInit__xxsubinterpreters@@Base+0x254c>  // b.none
    4f40:	cbz	x20, 4f6c <PyInit__xxsubinterpreters@@Base+0x2558>
    4f44:	ldr	x8, [x19]
    4f48:	subs	x8, x8, #0x1
    4f4c:	str	x8, [x19]
    4f50:	b.ne	4f74 <PyInit__xxsubinterpreters@@Base+0x2560>  // b.any
    4f54:	mov	x0, x19
    4f58:	bl	25e0 <_Py_Dealloc@plt>
    4f5c:	b	4f74 <PyInit__xxsubinterpreters@@Base+0x2560>
    4f60:	mov	x0, x21
    4f64:	bl	25e0 <_Py_Dealloc@plt>
    4f68:	cbnz	x20, 4f44 <PyInit__xxsubinterpreters@@Base+0x2530>
    4f6c:	bl	26f0 <PyErr_Clear@plt>
    4f70:	mov	x20, x19
    4f74:	mov	x0, x20
    4f78:	ldp	x20, x19, [sp, #32]
    4f7c:	ldr	x21, [sp, #16]
    4f80:	ldp	x29, x30, [sp], #48
    4f84:	ret

Disassembly of section .fini:

0000000000004f88 <.fini>:
    4f88:	stp	x29, x30, [sp, #-16]!
    4f8c:	mov	x29, sp
    4f90:	ldp	x29, x30, [sp], #16
    4f94:	ret
