
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fido_id_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400f48 <_init>:
  400f48:	stp	x29, x30, [sp, #-16]!
  400f4c:	mov	x29, sp
  400f50:	bl	4011a0 <call_weak_fn>
  400f54:	ldp	x29, x30, [sp], #16
  400f58:	ret

Disassembly of section .plt:

0000000000400f60 <__libc_start_main@plt-0x20>:
  400f60:	stp	x16, x30, [sp, #-16]!
  400f64:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400f68:	ldr	x17, [x16, #3856]
  400f6c:	add	x16, x16, #0xf10
  400f70:	br	x17
  400f74:	nop
  400f78:	nop
  400f7c:	nop

0000000000400f80 <__libc_start_main@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400f84:	ldr	x17, [x16, #3864]
  400f88:	add	x16, x16, #0xf18
  400f8c:	br	x17

0000000000400f90 <abort@plt>:
  400f90:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400f94:	ldr	x17, [x16, #3872]
  400f98:	add	x16, x16, #0xf20
  400f9c:	br	x17

0000000000400fa0 <__gmon_start__@plt>:
  400fa0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400fa4:	ldr	x17, [x16, #3880]
  400fa8:	add	x16, x16, #0xf28
  400fac:	br	x17

0000000000400fb0 <ask_password_agent_close@plt>:
  400fb0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400fb4:	ldr	x17, [x16, #3888]
  400fb8:	add	x16, x16, #0xf30
  400fbc:	br	x17

0000000000400fc0 <polkit_agent_close@plt>:
  400fc0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400fc4:	ldr	x17, [x16, #3896]
  400fc8:	add	x16, x16, #0xf38
  400fcc:	br	x17

0000000000400fd0 <pager_close@plt>:
  400fd0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400fd4:	ldr	x17, [x16, #3904]
  400fd8:	add	x16, x16, #0xf40
  400fdc:	br	x17

0000000000400fe0 <mac_selinux_finish@plt>:
  400fe0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400fe4:	ldr	x17, [x16, #3912]
  400fe8:	add	x16, x16, #0xf48
  400fec:	br	x17

0000000000400ff0 <log_set_target@plt>:
  400ff0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  400ff4:	ldr	x17, [x16, #3920]
  400ff8:	add	x16, x16, #0xf50
  400ffc:	br	x17

0000000000401000 <log_parse_environment_realm@plt>:
  401000:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401004:	ldr	x17, [x16, #3928]
  401008:	add	x16, x16, #0xf58
  40100c:	br	x17

0000000000401010 <log_open@plt>:
  401010:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401014:	ldr	x17, [x16, #3936]
  401018:	add	x16, x16, #0xf60
  40101c:	br	x17

0000000000401020 <log_get_max_level_realm@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401024:	ldr	x17, [x16, #3944]
  401028:	add	x16, x16, #0xf68
  40102c:	br	x17

0000000000401030 <log_internal_realm@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401034:	ldr	x17, [x16, #3952]
  401038:	add	x16, x16, #0xf70
  40103c:	br	x17

0000000000401040 <abs@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401044:	ldr	x17, [x16, #3960]
  401048:	add	x16, x16, #0xf78
  40104c:	br	x17

0000000000401050 <device_new_from_strv@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401054:	ldr	x17, [x16, #3968]
  401058:	add	x16, x16, #0xf80
  40105c:	br	x17

0000000000401060 <sd_device_new_from_syspath@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401064:	ldr	x17, [x16, #3976]
  401068:	add	x16, x16, #0xf88
  40106c:	br	x17

0000000000401070 <sd_device_get_parent@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401074:	ldr	x17, [x16, #3984]
  401078:	add	x16, x16, #0xf90
  40107c:	br	x17

0000000000401080 <sd_device_get_sysname@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401084:	ldr	x17, [x16, #3992]
  401088:	add	x16, x16, #0xf98
  40108c:	br	x17

0000000000401090 <log_object_internal@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401094:	ldr	x17, [x16, #4000]
  401098:	add	x16, x16, #0xfa0
  40109c:	br	x17

00000000004010a0 <sd_device_get_syspath@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  4010a4:	ldr	x17, [x16, #4008]
  4010a8:	add	x16, x16, #0xfa8
  4010ac:	br	x17

00000000004010b0 <path_join_internal@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  4010b4:	ldr	x17, [x16, #4016]
  4010b8:	add	x16, x16, #0xfb0
  4010bc:	br	x17

00000000004010c0 <log_oom_internal@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  4010c4:	ldr	x17, [x16, #4024]
  4010c8:	add	x16, x16, #0xfb8
  4010cc:	br	x17

00000000004010d0 <open64@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  4010d4:	ldr	x17, [x16, #4032]
  4010d8:	add	x16, x16, #0xfc0
  4010dc:	br	x17

00000000004010e0 <__errno_location@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  4010e4:	ldr	x17, [x16, #4040]
  4010e8:	add	x16, x16, #0xfc8
  4010ec:	br	x17

00000000004010f0 <read@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  4010f4:	ldr	x17, [x16, #4048]
  4010f8:	add	x16, x16, #0xfd0
  4010fc:	br	x17

0000000000401100 <printf@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401104:	ldr	x17, [x16, #4056]
  401108:	add	x16, x16, #0xfd8
  40110c:	br	x17

0000000000401110 <sd_device_unref@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401114:	ldr	x17, [x16, #4064]
  401118:	add	x16, x16, #0xfe0
  40111c:	br	x17

0000000000401120 <free@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401124:	ldr	x17, [x16, #4072]
  401128:	add	x16, x16, #0xfe8
  40112c:	br	x17

0000000000401130 <safe_close@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401134:	ldr	x17, [x16, #4080]
  401138:	add	x16, x16, #0xff0
  40113c:	br	x17

0000000000401140 <udev_parse_config_full@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1cbd8>
  401144:	ldr	x17, [x16, #4088]
  401148:	add	x16, x16, #0xff8
  40114c:	br	x17

Disassembly of section .text:

0000000000401150 <_start>:
  401150:	mov	x29, #0x0                   	// #0
  401154:	mov	x30, #0x0                   	// #0
  401158:	mov	x5, x0
  40115c:	ldr	x1, [sp]
  401160:	add	x2, sp, #0x8
  401164:	mov	x6, sp
  401168:	movz	x0, #0x0, lsl #48
  40116c:	movk	x0, #0x0, lsl #32
  401170:	movk	x0, #0x40, lsl #16
  401174:	movk	x0, #0x1318
  401178:	movz	x3, #0x0, lsl #48
  40117c:	movk	x3, #0x0, lsl #32
  401180:	movk	x3, #0x40, lsl #16
  401184:	movk	x3, #0x20c8
  401188:	movz	x4, #0x0, lsl #48
  40118c:	movk	x4, #0x0, lsl #32
  401190:	movk	x4, #0x40, lsl #16
  401194:	movk	x4, #0x2148
  401198:	bl	400f80 <__libc_start_main@plt>
  40119c:	bl	400f90 <abort@plt>

00000000004011a0 <call_weak_fn>:
  4011a0:	adrp	x0, 41f000 <__FRAME_END__+0x1cbd8>
  4011a4:	ldr	x0, [x0, #3816]
  4011a8:	cbz	x0, 4011b0 <call_weak_fn+0x10>
  4011ac:	b	400fa0 <__gmon_start__@plt>
  4011b0:	ret

00000000004011b4 <deregister_tm_clones>:
  4011b4:	stp	x29, x30, [sp, #-32]!
  4011b8:	mov	x29, sp
  4011bc:	adrp	x0, 420000 <completed.8445>
  4011c0:	add	x0, x0, #0x0
  4011c4:	str	x0, [sp, #24]
  4011c8:	ldr	x0, [sp, #24]
  4011cc:	str	x0, [sp, #24]
  4011d0:	ldr	x1, [sp, #24]
  4011d4:	adrp	x0, 420000 <completed.8445>
  4011d8:	add	x0, x0, #0x0
  4011dc:	cmp	x1, x0
  4011e0:	b.eq	40121c <deregister_tm_clones+0x68>  // b.none
  4011e4:	adrp	x0, 402000 <is_fido_security_token_desc+0x174>
  4011e8:	add	x0, x0, #0x160
  4011ec:	ldr	x0, [x0]
  4011f0:	str	x0, [sp, #16]
  4011f4:	ldr	x0, [sp, #16]
  4011f8:	str	x0, [sp, #16]
  4011fc:	ldr	x0, [sp, #16]
  401200:	cmp	x0, #0x0
  401204:	b.eq	401220 <deregister_tm_clones+0x6c>  // b.none
  401208:	ldr	x1, [sp, #16]
  40120c:	adrp	x0, 420000 <completed.8445>
  401210:	add	x0, x0, #0x0
  401214:	blr	x1
  401218:	b	401220 <deregister_tm_clones+0x6c>
  40121c:	nop
  401220:	ldp	x29, x30, [sp], #32
  401224:	ret

0000000000401228 <register_tm_clones>:
  401228:	stp	x29, x30, [sp, #-48]!
  40122c:	mov	x29, sp
  401230:	adrp	x0, 420000 <completed.8445>
  401234:	add	x0, x0, #0x0
  401238:	str	x0, [sp, #40]
  40123c:	ldr	x0, [sp, #40]
  401240:	str	x0, [sp, #40]
  401244:	ldr	x1, [sp, #40]
  401248:	adrp	x0, 420000 <completed.8445>
  40124c:	add	x0, x0, #0x0
  401250:	sub	x0, x1, x0
  401254:	asr	x0, x0, #3
  401258:	lsr	x1, x0, #63
  40125c:	add	x0, x1, x0
  401260:	asr	x0, x0, #1
  401264:	str	x0, [sp, #32]
  401268:	ldr	x0, [sp, #32]
  40126c:	cmp	x0, #0x0
  401270:	b.eq	4012b0 <register_tm_clones+0x88>  // b.none
  401274:	adrp	x0, 402000 <is_fido_security_token_desc+0x174>
  401278:	add	x0, x0, #0x168
  40127c:	ldr	x0, [x0]
  401280:	str	x0, [sp, #24]
  401284:	ldr	x0, [sp, #24]
  401288:	str	x0, [sp, #24]
  40128c:	ldr	x0, [sp, #24]
  401290:	cmp	x0, #0x0
  401294:	b.eq	4012b4 <register_tm_clones+0x8c>  // b.none
  401298:	ldr	x2, [sp, #24]
  40129c:	ldr	x1, [sp, #32]
  4012a0:	adrp	x0, 420000 <completed.8445>
  4012a4:	add	x0, x0, #0x0
  4012a8:	blr	x2
  4012ac:	b	4012b4 <register_tm_clones+0x8c>
  4012b0:	nop
  4012b4:	ldp	x29, x30, [sp], #48
  4012b8:	ret

00000000004012bc <__do_global_dtors_aux>:
  4012bc:	stp	x29, x30, [sp, #-16]!
  4012c0:	mov	x29, sp
  4012c4:	adrp	x0, 420000 <completed.8445>
  4012c8:	add	x0, x0, #0x0
  4012cc:	ldrb	w0, [x0]
  4012d0:	and	x0, x0, #0xff
  4012d4:	cmp	x0, #0x0
  4012d8:	b.ne	4012f4 <__do_global_dtors_aux+0x38>  // b.any
  4012dc:	bl	4011b4 <deregister_tm_clones>
  4012e0:	adrp	x0, 420000 <completed.8445>
  4012e4:	add	x0, x0, #0x0
  4012e8:	mov	w1, #0x1                   	// #1
  4012ec:	strb	w1, [x0]
  4012f0:	b	4012f8 <__do_global_dtors_aux+0x3c>
  4012f4:	nop
  4012f8:	ldp	x29, x30, [sp], #16
  4012fc:	ret

0000000000401300 <frame_dummy>:
  401300:	stp	x29, x30, [sp, #-16]!
  401304:	mov	x29, sp
  401308:	bl	401228 <register_tm_clones>
  40130c:	nop
  401310:	ldp	x29, x30, [sp], #16
  401314:	ret

0000000000401318 <main>:
  401318:	sub	sp, sp, #0x30
  40131c:	stp	x29, x30, [sp, #32]
  401320:	add	x29, sp, #0x20
  401324:	mov	w8, wzr
  401328:	mov	w9, #0x1                   	// #1
  40132c:	stur	wzr, [x29, #-4]
  401330:	stur	w0, [x29, #-8]
  401334:	str	x1, [sp, #16]
  401338:	ldur	w0, [x29, #-8]
  40133c:	ldr	x1, [sp, #16]
  401340:	str	w8, [sp, #8]
  401344:	str	w9, [sp, #4]
  401348:	bl	401390 <save_argc_argv>
  40134c:	ldur	w0, [x29, #-8]
  401350:	ldr	x1, [sp, #16]
  401354:	bl	4013c4 <run>
  401358:	str	w0, [sp, #12]
  40135c:	bl	400fb0 <ask_password_agent_close@plt>
  401360:	bl	400fc0 <polkit_agent_close@plt>
  401364:	bl	400fd0 <pager_close@plt>
  401368:	bl	400fe0 <mac_selinux_finish@plt>
  40136c:	bl	401d24 <static_destruct>
  401370:	ldr	w8, [sp, #12]
  401374:	cmp	w8, #0x0
  401378:	ldr	w8, [sp, #4]
  40137c:	ldr	w9, [sp, #8]
  401380:	csel	w0, w8, w9, lt  // lt = tstop
  401384:	ldp	x29, x30, [sp, #32]
  401388:	add	sp, sp, #0x30
  40138c:	ret

0000000000401390 <save_argc_argv>:
  401390:	sub	sp, sp, #0x10
  401394:	adrp	x8, 420000 <completed.8445>
  401398:	add	x8, x8, #0x8
  40139c:	adrp	x9, 420000 <completed.8445>
  4013a0:	add	x9, x9, #0x10
  4013a4:	str	w0, [sp, #12]
  4013a8:	str	x1, [sp]
  4013ac:	ldr	w10, [sp, #12]
  4013b0:	str	w10, [x8]
  4013b4:	ldr	x8, [sp]
  4013b8:	str	x8, [x9]
  4013bc:	add	sp, sp, #0x10
  4013c0:	ret

00000000004013c4 <run>:
  4013c4:	stp	x29, x30, [sp, #-32]!
  4013c8:	str	x28, [sp, #16]
  4013cc:	mov	x29, sp
  4013d0:	sub	sp, sp, #0x1, lsl #12
  4013d4:	sub	sp, sp, #0x190
  4013d8:	add	x8, sp, #0xe8
  4013dc:	mov	x9, xzr
  4013e0:	mov	w10, #0xffffffff            	// #-1
  4013e4:	mov	w11, #0x7                   	// #7
  4013e8:	mov	w12, #0x1                   	// #1
  4013ec:	adrp	x13, 402000 <is_fido_security_token_desc+0x174>
  4013f0:	add	x13, x13, #0x170
  4013f4:	add	x13, x13, #0x3
  4013f8:	adrp	x14, 402000 <is_fido_security_token_desc+0x174>
  4013fc:	add	x14, x14, #0x18e
  401400:	adrp	x15, 402000 <is_fido_security_token_desc+0x174>
  401404:	add	x15, x15, #0x201
  401408:	stur	w0, [x29, #-8]
  40140c:	str	x1, [x8, #4248]
  401410:	str	x9, [x8, #4240]
  401414:	str	x9, [x8, #4232]
  401418:	stur	w10, [x29, #-36]
  40141c:	mov	w0, w11
  401420:	str	x8, [sp, #80]
  401424:	str	w12, [sp, #76]
  401428:	str	x13, [sp, #64]
  40142c:	str	x14, [sp, #56]
  401430:	str	x15, [sp, #48]
  401434:	bl	400ff0 <log_set_target@plt>
  401438:	bl	401e28 <udev_parse_config>
  40143c:	ldr	w10, [sp, #76]
  401440:	mov	w0, w10
  401444:	bl	401000 <log_parse_environment_realm@plt>
  401448:	bl	401010 <log_open@plt>
  40144c:	ldur	w10, [x29, #-8]
  401450:	cmp	w10, #0x2
  401454:	b.le	4014f8 <run+0x134>
  401458:	mov	w8, #0x3                   	// #3
  40145c:	str	w8, [sp, #328]
  401460:	mov	w8, #0x16                  	// #22
  401464:	movk	w8, #0x4000, lsl #16
  401468:	str	w8, [sp, #324]
  40146c:	mov	w8, #0x1                   	// #1
  401470:	str	w8, [sp, #320]
  401474:	ldr	w0, [sp, #320]
  401478:	bl	401020 <log_get_max_level_realm@plt>
  40147c:	ldr	w8, [sp, #328]
  401480:	and	w8, w8, #0x7
  401484:	cmp	w0, w8
  401488:	b.lt	4014c8 <run+0x104>  // b.tstop
  40148c:	ldr	w8, [sp, #320]
  401490:	ldr	w9, [sp, #328]
  401494:	orr	w0, w9, w8, lsl #10
  401498:	ldr	w1, [sp, #324]
  40149c:	adrp	x10, 420000 <completed.8445>
  4014a0:	add	x10, x10, #0x18
  4014a4:	ldr	x6, [x10]
  4014a8:	ldr	x2, [sp, #64]
  4014ac:	mov	w3, #0x2f                  	// #47
  4014b0:	ldr	x4, [sp, #56]
  4014b4:	adrp	x5, 402000 <is_fido_security_token_desc+0x174>
  4014b8:	add	x5, x5, #0x192
  4014bc:	bl	401030 <log_internal_realm@plt>
  4014c0:	str	w0, [sp, #44]
  4014c4:	b	4014dc <run+0x118>
  4014c8:	ldr	w0, [sp, #324]
  4014cc:	bl	401040 <abs@plt>
  4014d0:	mov	w8, wzr
  4014d4:	subs	w8, w8, w0, uxtb
  4014d8:	str	w8, [sp, #44]
  4014dc:	ldr	w8, [sp, #44]
  4014e0:	str	w8, [sp, #316]
  4014e4:	ldr	w8, [sp, #316]
  4014e8:	stur	w8, [x29, #-4]
  4014ec:	mov	w8, #0x1                   	// #1
  4014f0:	str	w8, [sp, #312]
  4014f4:	b	401cf4 <run+0x930>
  4014f8:	ldur	w8, [x29, #-8]
  4014fc:	cmp	w8, #0x1
  401500:	b.ne	4015c0 <run+0x1fc>  // b.any
  401504:	adrp	x8, 420000 <completed.8445>
  401508:	add	x8, x8, #0x20
  40150c:	ldr	x1, [x8]
  401510:	sub	x0, x29, #0x18
  401514:	bl	401050 <device_new_from_strv@plt>
  401518:	str	w0, [sp, #332]
  40151c:	ldr	w9, [sp, #332]
  401520:	cmp	w9, #0x0
  401524:	cset	w9, ge  // ge = tcont
  401528:	tbnz	w9, #0, 4015bc <run+0x1f8>
  40152c:	mov	w8, #0x3                   	// #3
  401530:	str	w8, [sp, #308]
  401534:	ldr	w8, [sp, #332]
  401538:	str	w8, [sp, #304]
  40153c:	mov	w8, #0x1                   	// #1
  401540:	str	w8, [sp, #300]
  401544:	ldr	w0, [sp, #300]
  401548:	bl	401020 <log_get_max_level_realm@plt>
  40154c:	ldr	w8, [sp, #308]
  401550:	and	w8, w8, #0x7
  401554:	cmp	w0, w8
  401558:	b.lt	40158c <run+0x1c8>  // b.tstop
  40155c:	ldr	w8, [sp, #300]
  401560:	ldr	w9, [sp, #308]
  401564:	orr	w0, w9, w8, lsl #10
  401568:	ldr	w1, [sp, #304]
  40156c:	ldr	x2, [sp, #64]
  401570:	mov	w3, #0x34                  	// #52
  401574:	ldr	x4, [sp, #56]
  401578:	adrp	x5, 402000 <is_fido_security_token_desc+0x174>
  40157c:	add	x5, x5, #0x1a9
  401580:	bl	401030 <log_internal_realm@plt>
  401584:	str	w0, [sp, #40]
  401588:	b	4015a0 <run+0x1dc>
  40158c:	ldr	w0, [sp, #304]
  401590:	bl	401040 <abs@plt>
  401594:	mov	w8, wzr
  401598:	subs	w8, w8, w0, uxtb
  40159c:	str	w8, [sp, #40]
  4015a0:	ldr	w8, [sp, #40]
  4015a4:	str	w8, [sp, #296]
  4015a8:	ldr	w8, [sp, #296]
  4015ac:	stur	w8, [x29, #-4]
  4015b0:	mov	w8, #0x1                   	// #1
  4015b4:	str	w8, [sp, #312]
  4015b8:	b	401cf4 <run+0x930>
  4015bc:	b	401678 <run+0x2b4>
  4015c0:	ldr	x8, [sp, #80]
  4015c4:	ldr	x9, [x8, #4248]
  4015c8:	ldr	x1, [x9, #8]
  4015cc:	sub	x0, x29, #0x18
  4015d0:	bl	401060 <sd_device_new_from_syspath@plt>
  4015d4:	str	w0, [sp, #332]
  4015d8:	ldr	w10, [sp, #332]
  4015dc:	cmp	w10, #0x0
  4015e0:	cset	w10, ge  // ge = tcont
  4015e4:	tbnz	w10, #0, 401678 <run+0x2b4>
  4015e8:	mov	w8, #0x3                   	// #3
  4015ec:	str	w8, [sp, #292]
  4015f0:	ldr	w8, [sp, #332]
  4015f4:	str	w8, [sp, #288]
  4015f8:	mov	w8, #0x1                   	// #1
  4015fc:	str	w8, [sp, #284]
  401600:	ldr	w0, [sp, #284]
  401604:	bl	401020 <log_get_max_level_realm@plt>
  401608:	ldr	w8, [sp, #292]
  40160c:	and	w8, w8, #0x7
  401610:	cmp	w0, w8
  401614:	b.lt	401648 <run+0x284>  // b.tstop
  401618:	ldr	w8, [sp, #284]
  40161c:	ldr	w9, [sp, #292]
  401620:	orr	w0, w9, w8, lsl #10
  401624:	ldr	w1, [sp, #288]
  401628:	ldr	x2, [sp, #64]
  40162c:	mov	w3, #0x38                  	// #56
  401630:	ldr	x4, [sp, #56]
  401634:	adrp	x5, 402000 <is_fido_security_token_desc+0x174>
  401638:	add	x5, x5, #0x1db
  40163c:	bl	401030 <log_internal_realm@plt>
  401640:	str	w0, [sp, #36]
  401644:	b	40165c <run+0x298>
  401648:	ldr	w0, [sp, #288]
  40164c:	bl	401040 <abs@plt>
  401650:	mov	w8, wzr
  401654:	subs	w8, w8, w0, uxtb
  401658:	str	w8, [sp, #36]
  40165c:	ldr	w8, [sp, #36]
  401660:	str	w8, [sp, #280]
  401664:	ldr	w8, [sp, #280]
  401668:	stur	w8, [x29, #-4]
  40166c:	mov	w8, #0x1                   	// #1
  401670:	str	w8, [sp, #312]
  401674:	b	401cf4 <run+0x930>
  401678:	ldr	x8, [sp, #80]
  40167c:	ldr	x0, [x8, #4240]
  401680:	sub	x1, x29, #0x30
  401684:	bl	401070 <sd_device_get_parent@plt>
  401688:	str	w0, [sp, #332]
  40168c:	ldr	w9, [sp, #332]
  401690:	cmp	w9, #0x0
  401694:	cset	w9, ge  // ge = tcont
  401698:	tbnz	w9, #0, 401770 <run+0x3ac>
  40169c:	mov	x8, xzr
  4016a0:	ldr	x9, [sp, #80]
  4016a4:	str	x8, [x9, #40]
  4016a8:	ldr	x8, [x9, #4240]
  4016ac:	str	x8, [x9, #32]
  4016b0:	mov	w10, #0x3                   	// #3
  4016b4:	str	w10, [sp, #260]
  4016b8:	ldr	w10, [sp, #332]
  4016bc:	str	w10, [sp, #256]
  4016c0:	ldr	x8, [x9, #32]
  4016c4:	cbz	x8, 401708 <run+0x344>
  4016c8:	mov	w0, #0x1                   	// #1
  4016cc:	bl	401020 <log_get_max_level_realm@plt>
  4016d0:	ldr	w8, [sp, #260]
  4016d4:	cmp	w0, w8
  4016d8:	cset	w8, ge  // ge = tcont
  4016dc:	mov	w9, #0x1                   	// #1
  4016e0:	eor	w8, w8, #0x1
  4016e4:	eor	w8, w8, w9
  4016e8:	and	w8, w8, #0x1
  4016ec:	mov	w1, w8
  4016f0:	sxtw	x10, w1
  4016f4:	cbz	x10, 401708 <run+0x344>
  4016f8:	ldr	x8, [sp, #80]
  4016fc:	ldr	x0, [x8, #32]
  401700:	add	x1, sp, #0x110
  401704:	bl	401080 <sd_device_get_sysname@plt>
  401708:	ldr	w0, [sp, #260]
  40170c:	ldr	w1, [sp, #256]
  401710:	ldr	x8, [sp, #80]
  401714:	ldr	x9, [x8, #40]
  401718:	mov	x10, xzr
  40171c:	cmp	x9, #0x0
  401720:	ldr	x9, [sp, #48]
  401724:	csel	x5, x9, x10, ne  // ne = any
  401728:	ldr	x6, [x8, #40]
  40172c:	ldr	x2, [sp, #64]
  401730:	mov	w3, #0x3d                  	// #61
  401734:	ldr	x4, [sp, #56]
  401738:	mov	x7, x10
  40173c:	mov	x11, sp
  401740:	str	x10, [x11]
  401744:	mov	x10, sp
  401748:	adrp	x11, 402000 <is_fido_security_token_desc+0x174>
  40174c:	add	x11, x11, #0x209
  401750:	str	x11, [x10, #8]
  401754:	bl	401090 <log_object_internal@plt>
  401758:	str	w0, [sp, #252]
  40175c:	ldr	w12, [sp, #252]
  401760:	stur	w12, [x29, #-4]
  401764:	mov	w12, #0x1                   	// #1
  401768:	str	w12, [sp, #312]
  40176c:	b	401cf4 <run+0x930>
  401770:	ldr	x8, [sp, #80]
  401774:	ldr	x0, [x8, #4216]
  401778:	sub	x1, x29, #0x38
  40177c:	bl	4010a0 <sd_device_get_syspath@plt>
  401780:	str	w0, [sp, #332]
  401784:	ldr	w9, [sp, #332]
  401788:	cmp	w9, #0x0
  40178c:	cset	w9, ge  // ge = tcont
  401790:	tbnz	w9, #0, 401868 <run+0x4a4>
  401794:	mov	x8, xzr
  401798:	ldr	x9, [sp, #80]
  40179c:	str	x8, [x9, #8]
  4017a0:	ldr	x8, [x9, #4216]
  4017a4:	str	x8, [x9]
  4017a8:	mov	w10, #0x3                   	// #3
  4017ac:	str	w10, [sp, #228]
  4017b0:	ldr	w10, [sp, #332]
  4017b4:	str	w10, [sp, #224]
  4017b8:	ldr	x8, [x9]
  4017bc:	cbz	x8, 401800 <run+0x43c>
  4017c0:	mov	w0, #0x1                   	// #1
  4017c4:	bl	401020 <log_get_max_level_realm@plt>
  4017c8:	ldr	w8, [sp, #228]
  4017cc:	cmp	w0, w8
  4017d0:	cset	w8, ge  // ge = tcont
  4017d4:	mov	w9, #0x1                   	// #1
  4017d8:	eor	w8, w8, #0x1
  4017dc:	eor	w8, w8, w9
  4017e0:	and	w8, w8, #0x1
  4017e4:	mov	w1, w8
  4017e8:	sxtw	x10, w1
  4017ec:	cbz	x10, 401800 <run+0x43c>
  4017f0:	ldr	x8, [sp, #80]
  4017f4:	ldr	x0, [x8]
  4017f8:	add	x1, sp, #0xf0
  4017fc:	bl	401080 <sd_device_get_sysname@plt>
  401800:	ldr	w0, [sp, #228]
  401804:	ldr	w1, [sp, #224]
  401808:	ldr	x8, [sp, #80]
  40180c:	ldr	x9, [x8, #8]
  401810:	mov	x10, xzr
  401814:	cmp	x9, #0x0
  401818:	ldr	x9, [sp, #48]
  40181c:	csel	x5, x9, x10, ne  // ne = any
  401820:	ldr	x6, [x8, #8]
  401824:	ldr	x2, [sp, #64]
  401828:	mov	w3, #0x41                  	// #65
  40182c:	ldr	x4, [sp, #56]
  401830:	mov	x7, x10
  401834:	mov	x11, sp
  401838:	str	x10, [x11]
  40183c:	mov	x10, sp
  401840:	adrp	x11, 402000 <is_fido_security_token_desc+0x174>
  401844:	add	x11, x11, #0x22d
  401848:	str	x11, [x10, #8]
  40184c:	bl	401090 <log_object_internal@plt>
  401850:	str	w0, [sp, #220]
  401854:	ldr	w12, [sp, #220]
  401858:	stur	w12, [x29, #-4]
  40185c:	mov	w12, #0x1                   	// #1
  401860:	str	w12, [sp, #312]
  401864:	b	401cf4 <run+0x930>
  401868:	ldr	x8, [sp, #80]
  40186c:	ldr	x0, [x8, #4208]
  401870:	adrp	x1, 402000 <is_fido_security_token_desc+0x174>
  401874:	add	x1, x1, #0x256
  401878:	mov	x9, #0xffffffffffffffff    	// #-1
  40187c:	mov	x2, x9
  401880:	bl	4010b0 <path_join_internal@plt>
  401884:	ldr	x8, [sp, #80]
  401888:	str	x0, [x8, #4232]
  40188c:	ldr	x9, [x8, #4232]
  401890:	cbnz	x9, 4018c0 <run+0x4fc>
  401894:	mov	w8, #0x1                   	// #1
  401898:	mov	w0, w8
  40189c:	ldr	x1, [sp, #64]
  4018a0:	mov	w2, #0x45                  	// #69
  4018a4:	ldr	x3, [sp, #56]
  4018a8:	str	w8, [sp, #32]
  4018ac:	bl	4010c0 <log_oom_internal@plt>
  4018b0:	stur	w0, [x29, #-4]
  4018b4:	ldr	w8, [sp, #32]
  4018b8:	str	w8, [sp, #312]
  4018bc:	b	401cf4 <run+0x930>
  4018c0:	ldr	x8, [sp, #80]
  4018c4:	ldr	x0, [x8, #4232]
  4018c8:	mov	w1, #0x8000                	// #32768
  4018cc:	movk	w1, #0x8, lsl #16
  4018d0:	bl	4010d0 <open64@plt>
  4018d4:	stur	w0, [x29, #-36]
  4018d8:	ldur	w9, [x29, #-36]
  4018dc:	cmp	w9, #0x0
  4018e0:	cset	w9, ge  // ge = tcont
  4018e4:	tbnz	w9, #0, 4019c8 <run+0x604>
  4018e8:	mov	x8, xzr
  4018ec:	str	x8, [sp, #208]
  4018f0:	ldr	x8, [sp, #80]
  4018f4:	ldr	x9, [x8, #4216]
  4018f8:	str	x9, [sp, #200]
  4018fc:	mov	w10, #0x3                   	// #3
  401900:	str	w10, [sp, #196]
  401904:	bl	4010e0 <__errno_location@plt>
  401908:	ldr	w10, [x0]
  40190c:	str	w10, [sp, #192]
  401910:	ldr	x8, [sp, #200]
  401914:	cbz	x8, 401954 <run+0x590>
  401918:	mov	w0, #0x1                   	// #1
  40191c:	bl	401020 <log_get_max_level_realm@plt>
  401920:	ldr	w8, [sp, #196]
  401924:	cmp	w0, w8
  401928:	cset	w8, ge  // ge = tcont
  40192c:	mov	w9, #0x1                   	// #1
  401930:	eor	w8, w8, #0x1
  401934:	eor	w8, w8, w9
  401938:	and	w8, w8, #0x1
  40193c:	mov	w1, w8
  401940:	sxtw	x10, w1
  401944:	cbz	x10, 401954 <run+0x590>
  401948:	ldr	x0, [sp, #200]
  40194c:	add	x1, sp, #0xd0
  401950:	bl	401080 <sd_device_get_sysname@plt>
  401954:	ldr	w0, [sp, #196]
  401958:	ldr	w1, [sp, #192]
  40195c:	ldr	x8, [sp, #208]
  401960:	mov	x9, xzr
  401964:	cmp	x8, #0x0
  401968:	ldr	x8, [sp, #48]
  40196c:	csel	x5, x8, x9, ne  // ne = any
  401970:	ldr	x6, [sp, #208]
  401974:	ldr	x10, [sp, #80]
  401978:	ldr	x11, [x10, #4232]
  40197c:	ldr	x2, [sp, #64]
  401980:	mov	w3, #0x4a                  	// #74
  401984:	ldr	x4, [sp, #56]
  401988:	mov	x7, x9
  40198c:	mov	x12, sp
  401990:	str	x9, [x12]
  401994:	mov	x9, sp
  401998:	adrp	x12, 402000 <is_fido_security_token_desc+0x174>
  40199c:	add	x12, x12, #0x268
  4019a0:	str	x12, [x9, #8]
  4019a4:	mov	x9, sp
  4019a8:	str	x11, [x9, #16]
  4019ac:	bl	401090 <log_object_internal@plt>
  4019b0:	str	w0, [sp, #188]
  4019b4:	ldr	w13, [sp, #188]
  4019b8:	stur	w13, [x29, #-4]
  4019bc:	mov	w13, #0x1                   	// #1
  4019c0:	str	w13, [sp, #312]
  4019c4:	b	401cf4 <run+0x930>
  4019c8:	ldur	w0, [x29, #-36]
  4019cc:	add	x1, sp, #0x158
  4019d0:	mov	x2, #0x1000                	// #4096
  4019d4:	bl	4010f0 <read@plt>
  4019d8:	ldr	x8, [sp, #80]
  4019dc:	str	x0, [x8, #104]
  4019e0:	ldr	x9, [x8, #104]
  4019e4:	cmp	x9, #0x0
  4019e8:	cset	w10, ge  // ge = tcont
  4019ec:	tbnz	w10, #0, 401ad0 <run+0x70c>
  4019f0:	mov	x8, xzr
  4019f4:	str	x8, [sp, #176]
  4019f8:	ldr	x8, [sp, #80]
  4019fc:	ldr	x9, [x8, #4216]
  401a00:	str	x9, [sp, #168]
  401a04:	mov	w10, #0x3                   	// #3
  401a08:	str	w10, [sp, #164]
  401a0c:	bl	4010e0 <__errno_location@plt>
  401a10:	ldr	w10, [x0]
  401a14:	str	w10, [sp, #160]
  401a18:	ldr	x8, [sp, #168]
  401a1c:	cbz	x8, 401a5c <run+0x698>
  401a20:	mov	w0, #0x1                   	// #1
  401a24:	bl	401020 <log_get_max_level_realm@plt>
  401a28:	ldr	w8, [sp, #164]
  401a2c:	cmp	w0, w8
  401a30:	cset	w8, ge  // ge = tcont
  401a34:	mov	w9, #0x1                   	// #1
  401a38:	eor	w8, w8, #0x1
  401a3c:	eor	w8, w8, w9
  401a40:	and	w8, w8, #0x1
  401a44:	mov	w1, w8
  401a48:	sxtw	x10, w1
  401a4c:	cbz	x10, 401a5c <run+0x698>
  401a50:	ldr	x0, [sp, #168]
  401a54:	add	x1, sp, #0xb0
  401a58:	bl	401080 <sd_device_get_sysname@plt>
  401a5c:	ldr	w0, [sp, #164]
  401a60:	ldr	w1, [sp, #160]
  401a64:	ldr	x8, [sp, #176]
  401a68:	mov	x9, xzr
  401a6c:	cmp	x8, #0x0
  401a70:	ldr	x8, [sp, #48]
  401a74:	csel	x5, x8, x9, ne  // ne = any
  401a78:	ldr	x6, [sp, #176]
  401a7c:	ldr	x10, [sp, #80]
  401a80:	ldr	x11, [x10, #4232]
  401a84:	ldr	x2, [sp, #64]
  401a88:	mov	w3, #0x4f                  	// #79
  401a8c:	ldr	x4, [sp, #56]
  401a90:	mov	x7, x9
  401a94:	mov	x12, sp
  401a98:	str	x9, [x12]
  401a9c:	mov	x9, sp
  401aa0:	adrp	x12, 402000 <is_fido_security_token_desc+0x174>
  401aa4:	add	x12, x12, #0x295
  401aa8:	str	x12, [x9, #8]
  401aac:	mov	x9, sp
  401ab0:	str	x11, [x9, #16]
  401ab4:	bl	401090 <log_object_internal@plt>
  401ab8:	str	w0, [sp, #156]
  401abc:	ldr	w13, [sp, #156]
  401ac0:	stur	w13, [x29, #-4]
  401ac4:	mov	w13, #0x1                   	// #1
  401ac8:	str	w13, [sp, #312]
  401acc:	b	401cf4 <run+0x930>
  401ad0:	ldr	x8, [sp, #80]
  401ad4:	ldr	x9, [x8, #104]
  401ad8:	cbnz	x9, 401bbc <run+0x7f8>
  401adc:	mov	x8, xzr
  401ae0:	str	x8, [sp, #144]
  401ae4:	ldr	x8, [sp, #80]
  401ae8:	ldr	x9, [x8, #4216]
  401aec:	str	x9, [sp, #136]
  401af0:	mov	w10, #0x7                   	// #7
  401af4:	str	w10, [sp, #132]
  401af8:	mov	w10, #0x16                  	// #22
  401afc:	movk	w10, #0x4000, lsl #16
  401b00:	str	w10, [sp, #128]
  401b04:	ldr	x9, [sp, #136]
  401b08:	cbz	x9, 401b48 <run+0x784>
  401b0c:	mov	w0, #0x1                   	// #1
  401b10:	bl	401020 <log_get_max_level_realm@plt>
  401b14:	ldr	w8, [sp, #132]
  401b18:	cmp	w0, w8
  401b1c:	cset	w8, ge  // ge = tcont
  401b20:	mov	w9, #0x1                   	// #1
  401b24:	eor	w8, w8, #0x1
  401b28:	eor	w8, w8, w9
  401b2c:	and	w8, w8, #0x1
  401b30:	mov	w1, w8
  401b34:	sxtw	x10, w1
  401b38:	cbz	x10, 401b48 <run+0x784>
  401b3c:	ldr	x0, [sp, #136]
  401b40:	add	x1, sp, #0x90
  401b44:	bl	401080 <sd_device_get_sysname@plt>
  401b48:	ldr	w0, [sp, #132]
  401b4c:	ldr	w1, [sp, #128]
  401b50:	ldr	x8, [sp, #144]
  401b54:	mov	x9, xzr
  401b58:	cmp	x8, #0x0
  401b5c:	ldr	x8, [sp, #48]
  401b60:	csel	x5, x8, x9, ne  // ne = any
  401b64:	ldr	x6, [sp, #144]
  401b68:	ldr	x10, [sp, #80]
  401b6c:	ldr	x11, [x10, #4232]
  401b70:	ldr	x2, [sp, #64]
  401b74:	mov	w3, #0x52                  	// #82
  401b78:	ldr	x4, [sp, #56]
  401b7c:	mov	x7, x9
  401b80:	mov	x12, sp
  401b84:	str	x9, [x12]
  401b88:	mov	x9, sp
  401b8c:	adrp	x12, 402000 <is_fido_security_token_desc+0x174>
  401b90:	add	x12, x12, #0x2c2
  401b94:	str	x12, [x9, #8]
  401b98:	mov	x9, sp
  401b9c:	str	x11, [x9, #16]
  401ba0:	bl	401090 <log_object_internal@plt>
  401ba4:	str	w0, [sp, #124]
  401ba8:	ldr	w13, [sp, #124]
  401bac:	stur	w13, [x29, #-4]
  401bb0:	mov	w13, #0x1                   	// #1
  401bb4:	str	w13, [sp, #312]
  401bb8:	b	401cf4 <run+0x930>
  401bbc:	ldr	x8, [sp, #80]
  401bc0:	ldr	x1, [x8, #104]
  401bc4:	add	x0, sp, #0x158
  401bc8:	bl	401e8c <is_fido_security_token_desc>
  401bcc:	str	w0, [sp, #332]
  401bd0:	ldr	w9, [sp, #332]
  401bd4:	cmp	w9, #0x0
  401bd8:	cset	w9, ge  // ge = tcont
  401bdc:	tbnz	w9, #0, 401cbc <run+0x8f8>
  401be0:	mov	x8, xzr
  401be4:	str	x8, [sp, #112]
  401be8:	ldr	x8, [sp, #80]
  401bec:	ldr	x9, [x8, #4216]
  401bf0:	str	x9, [sp, #104]
  401bf4:	mov	w10, #0x7                   	// #7
  401bf8:	str	w10, [sp, #100]
  401bfc:	ldr	w10, [sp, #332]
  401c00:	str	w10, [sp, #96]
  401c04:	ldr	x9, [sp, #104]
  401c08:	cbz	x9, 401c48 <run+0x884>
  401c0c:	mov	w0, #0x1                   	// #1
  401c10:	bl	401020 <log_get_max_level_realm@plt>
  401c14:	ldr	w8, [sp, #100]
  401c18:	cmp	w0, w8
  401c1c:	cset	w8, ge  // ge = tcont
  401c20:	mov	w9, #0x1                   	// #1
  401c24:	eor	w8, w8, #0x1
  401c28:	eor	w8, w8, w9
  401c2c:	and	w8, w8, #0x1
  401c30:	mov	w1, w8
  401c34:	sxtw	x10, w1
  401c38:	cbz	x10, 401c48 <run+0x884>
  401c3c:	ldr	x0, [sp, #104]
  401c40:	add	x1, sp, #0x70
  401c44:	bl	401080 <sd_device_get_sysname@plt>
  401c48:	ldr	w0, [sp, #100]
  401c4c:	ldr	w1, [sp, #96]
  401c50:	ldr	x8, [sp, #112]
  401c54:	mov	x9, xzr
  401c58:	cmp	x8, #0x0
  401c5c:	ldr	x8, [sp, #48]
  401c60:	csel	x5, x8, x9, ne  // ne = any
  401c64:	ldr	x6, [sp, #112]
  401c68:	ldr	x10, [sp, #80]
  401c6c:	ldr	x11, [x10, #4232]
  401c70:	ldr	x2, [sp, #64]
  401c74:	mov	w3, #0x57                  	// #87
  401c78:	ldr	x4, [sp, #56]
  401c7c:	mov	x7, x9
  401c80:	mov	x12, sp
  401c84:	str	x9, [x12]
  401c88:	mov	x9, sp
  401c8c:	adrp	x12, 402000 <is_fido_security_token_desc+0x174>
  401c90:	add	x12, x12, #0x2e3
  401c94:	str	x12, [x9, #8]
  401c98:	mov	x9, sp
  401c9c:	str	x11, [x9, #16]
  401ca0:	bl	401090 <log_object_internal@plt>
  401ca4:	str	w0, [sp, #92]
  401ca8:	ldr	w13, [sp, #92]
  401cac:	stur	w13, [x29, #-4]
  401cb0:	mov	w13, #0x1                   	// #1
  401cb4:	str	w13, [sp, #312]
  401cb8:	b	401cf4 <run+0x930>
  401cbc:	ldr	w8, [sp, #332]
  401cc0:	cmp	w8, #0x0
  401cc4:	cset	w8, le
  401cc8:	tbnz	w8, #0, 401ce8 <run+0x924>
  401ccc:	adrp	x0, 402000 <is_fido_security_token_desc+0x174>
  401cd0:	add	x0, x0, #0x30e
  401cd4:	bl	401100 <printf@plt>
  401cd8:	adrp	x8, 402000 <is_fido_security_token_desc+0x174>
  401cdc:	add	x8, x8, #0x31f
  401ce0:	mov	x0, x8
  401ce4:	bl	401100 <printf@plt>
  401ce8:	stur	wzr, [x29, #-4]
  401cec:	mov	w8, #0x1                   	// #1
  401cf0:	str	w8, [sp, #312]
  401cf4:	sub	x0, x29, #0x24
  401cf8:	bl	401e00 <closep>
  401cfc:	sub	x0, x29, #0x20
  401d00:	bl	401dd8 <freep>
  401d04:	sub	x0, x29, #0x18
  401d08:	bl	401da4 <sd_device_unrefp>
  401d0c:	ldur	w0, [x29, #-4]
  401d10:	add	sp, sp, #0x1, lsl #12
  401d14:	add	sp, sp, #0x190
  401d18:	ldr	x28, [sp, #16]
  401d1c:	ldp	x29, x30, [sp], #32
  401d20:	ret

0000000000401d24 <static_destruct>:
  401d24:	sub	sp, sp, #0x20
  401d28:	stp	x29, x30, [sp, #16]
  401d2c:	add	x29, sp, #0x10
  401d30:	adrp	x8, 41f000 <__FRAME_END__+0x1cbd8>
  401d34:	ldr	x8, [x8, #3824]
  401d38:	str	x8, [sp]
  401d3c:	cbnz	x8, 401d44 <static_destruct+0x20>
  401d40:	b	401d98 <static_destruct+0x74>
  401d44:	ldr	x0, [sp]
  401d48:	mov	x1, #0x8                   	// #8
  401d4c:	bl	401e5c <ALIGN_TO>
  401d50:	str	x0, [sp, #8]
  401d54:	ldr	x8, [sp, #8]
  401d58:	adrp	x9, 41f000 <__FRAME_END__+0x1cbd8>
  401d5c:	ldr	x9, [x9, #3832]
  401d60:	cmp	x8, x9
  401d64:	b.cs	401d98 <static_destruct+0x74>  // b.hs, b.nlast
  401d68:	ldr	x8, [sp, #8]
  401d6c:	ldr	x8, [x8, #8]
  401d70:	ldr	x9, [sp, #8]
  401d74:	ldr	x0, [x9]
  401d78:	blr	x8
  401d7c:	ldr	x8, [sp, #8]
  401d80:	add	x8, x8, #0x10
  401d84:	mov	x0, x8
  401d88:	mov	x1, #0x8                   	// #8
  401d8c:	bl	401e5c <ALIGN_TO>
  401d90:	str	x0, [sp, #8]
  401d94:	b	401d54 <static_destruct+0x30>
  401d98:	ldp	x29, x30, [sp, #16]
  401d9c:	add	sp, sp, #0x20
  401da0:	ret

0000000000401da4 <sd_device_unrefp>:
  401da4:	sub	sp, sp, #0x20
  401da8:	stp	x29, x30, [sp, #16]
  401dac:	add	x29, sp, #0x10
  401db0:	str	x0, [sp, #8]
  401db4:	ldr	x8, [sp, #8]
  401db8:	ldr	x8, [x8]
  401dbc:	cbz	x8, 401dcc <sd_device_unrefp+0x28>
  401dc0:	ldr	x8, [sp, #8]
  401dc4:	ldr	x0, [x8]
  401dc8:	bl	401110 <sd_device_unref@plt>
  401dcc:	ldp	x29, x30, [sp, #16]
  401dd0:	add	sp, sp, #0x20
  401dd4:	ret

0000000000401dd8 <freep>:
  401dd8:	sub	sp, sp, #0x20
  401ddc:	stp	x29, x30, [sp, #16]
  401de0:	add	x29, sp, #0x10
  401de4:	str	x0, [sp, #8]
  401de8:	ldr	x8, [sp, #8]
  401dec:	ldr	x0, [x8]
  401df0:	bl	401120 <free@plt>
  401df4:	ldp	x29, x30, [sp, #16]
  401df8:	add	sp, sp, #0x20
  401dfc:	ret

0000000000401e00 <closep>:
  401e00:	sub	sp, sp, #0x20
  401e04:	stp	x29, x30, [sp, #16]
  401e08:	add	x29, sp, #0x10
  401e0c:	str	x0, [sp, #8]
  401e10:	ldr	x8, [sp, #8]
  401e14:	ldr	w0, [x8]
  401e18:	bl	401130 <safe_close@plt>
  401e1c:	ldp	x29, x30, [sp, #16]
  401e20:	add	sp, sp, #0x20
  401e24:	ret

0000000000401e28 <udev_parse_config>:
  401e28:	sub	sp, sp, #0x20
  401e2c:	stp	x29, x30, [sp, #16]
  401e30:	add	x29, sp, #0x10
  401e34:	mov	x8, xzr
  401e38:	mov	x0, x8
  401e3c:	str	x0, [sp, #8]
  401e40:	mov	x1, x8
  401e44:	mov	x2, x8
  401e48:	ldr	x3, [sp, #8]
  401e4c:	bl	401140 <udev_parse_config_full@plt>
  401e50:	ldp	x29, x30, [sp, #16]
  401e54:	add	sp, sp, #0x20
  401e58:	ret

0000000000401e5c <ALIGN_TO>:
  401e5c:	sub	sp, sp, #0x10
  401e60:	str	x0, [sp, #8]
  401e64:	str	x1, [sp]
  401e68:	ldr	x8, [sp, #8]
  401e6c:	ldr	x9, [sp]
  401e70:	add	x8, x8, x9
  401e74:	subs	x8, x8, #0x1
  401e78:	ldr	x9, [sp]
  401e7c:	subs	x9, x9, #0x1
  401e80:	bic	x0, x8, x9
  401e84:	add	sp, sp, #0x10
  401e88:	ret

0000000000401e8c <is_fido_security_token_desc>:
  401e8c:	sub	sp, sp, #0x50
  401e90:	str	x0, [sp, #64]
  401e94:	str	x1, [sp, #56]
  401e98:	str	wzr, [sp, #52]
  401e9c:	str	xzr, [sp, #40]
  401ea0:	ldr	x8, [sp, #40]
  401ea4:	ldr	x9, [sp, #56]
  401ea8:	cmp	x8, x9
  401eac:	b.cs	4020b4 <is_fido_security_token_desc+0x228>  // b.hs, b.nlast
  401eb0:	ldr	x8, [sp, #64]
  401eb4:	ldr	x9, [sp, #40]
  401eb8:	ldrb	w10, [x8, x9]
  401ebc:	cmp	w10, #0xfe
  401ec0:	b.ne	401f08 <is_fido_security_token_desc+0x7c>  // b.any
  401ec4:	ldr	x8, [sp, #40]
  401ec8:	add	x8, x8, #0x1
  401ecc:	ldr	x9, [sp, #56]
  401ed0:	cmp	x8, x9
  401ed4:	b.cc	401ee4 <is_fido_security_token_desc+0x58>  // b.lo, b.ul, b.last
  401ed8:	mov	w8, #0xffffffea            	// #-22
  401edc:	str	w8, [sp, #76]
  401ee0:	b	4020b8 <is_fido_security_token_desc+0x22c>
  401ee4:	ldr	x8, [sp, #64]
  401ee8:	ldr	x9, [sp, #40]
  401eec:	add	x9, x9, #0x1
  401ef0:	ldrb	w10, [x8, x9]
  401ef4:	add	w10, w10, #0x3
  401ef8:	ldr	x8, [sp, #40]
  401efc:	add	x8, x8, w10, sxtw
  401f00:	str	x8, [sp, #40]
  401f04:	b	401ea0 <is_fido_security_token_desc+0x14>
  401f08:	ldr	x8, [sp, #64]
  401f0c:	ldr	x9, [sp, #40]
  401f10:	ldrb	w10, [x8, x9]
  401f14:	asr	w10, w10, #4
  401f18:	strb	w10, [sp, #39]
  401f1c:	ldr	x8, [sp, #64]
  401f20:	ldr	x9, [sp, #40]
  401f24:	ldrb	w10, [x8, x9]
  401f28:	asr	w10, w10, #2
  401f2c:	and	w10, w10, #0x3
  401f30:	strb	w10, [sp, #38]
  401f34:	ldr	x8, [sp, #64]
  401f38:	ldr	x9, [sp, #40]
  401f3c:	ldrb	w10, [x8, x9]
  401f40:	and	w10, w10, #0x3
  401f44:	strb	w10, [sp, #37]
  401f48:	ldrb	w10, [sp, #37]
  401f4c:	cmp	w10, #0x3
  401f50:	b.ge	401f60 <is_fido_security_token_desc+0xd4>  // b.tcont
  401f54:	ldrb	w8, [sp, #37]
  401f58:	str	w8, [sp, #4]
  401f5c:	b	401f68 <is_fido_security_token_desc+0xdc>
  401f60:	mov	w8, #0x4                   	// #4
  401f64:	str	w8, [sp, #4]
  401f68:	ldr	w8, [sp, #4]
  401f6c:	mov	w0, w8
  401f70:	sxtw	x9, w0
  401f74:	str	x9, [sp, #24]
  401f78:	ldr	x9, [sp, #40]
  401f7c:	add	x9, x9, #0x1
  401f80:	str	x9, [sp, #40]
  401f84:	ldr	x9, [sp, #40]
  401f88:	ldr	x10, [sp, #24]
  401f8c:	add	x9, x9, x10
  401f90:	ldr	x10, [sp, #56]
  401f94:	cmp	x9, x10
  401f98:	b.ls	401fa8 <is_fido_security_token_desc+0x11c>  // b.plast
  401f9c:	mov	w8, #0xffffffea            	// #-22
  401fa0:	str	w8, [sp, #76]
  401fa4:	b	4020b8 <is_fido_security_token_desc+0x22c>
  401fa8:	str	wzr, [sp, #20]
  401fac:	str	xzr, [sp, #8]
  401fb0:	ldr	x8, [sp, #8]
  401fb4:	ldr	x9, [sp, #24]
  401fb8:	cmp	x8, x9
  401fbc:	b.cs	402000 <is_fido_security_token_desc+0x174>  // b.hs, b.nlast
  401fc0:	ldr	x8, [sp, #64]
  401fc4:	ldr	x9, [sp, #40]
  401fc8:	ldr	x10, [sp, #8]
  401fcc:	add	x9, x9, x10
  401fd0:	ldrb	w11, [x8, x9]
  401fd4:	ldr	x8, [sp, #8]
  401fd8:	mov	x9, #0x8                   	// #8
  401fdc:	mul	x8, x9, x8
  401fe0:	lsl	w8, w11, w8
  401fe4:	ldr	w11, [sp, #20]
  401fe8:	orr	w8, w11, w8
  401fec:	str	w8, [sp, #20]
  401ff0:	ldr	x8, [sp, #8]
  401ff4:	add	x8, x8, #0x1
  401ff8:	str	x8, [sp, #8]
  401ffc:	b	401fb0 <is_fido_security_token_desc+0x124>
  402000:	ldr	x8, [sp, #24]
  402004:	ldr	x9, [sp, #40]
  402008:	add	x8, x9, x8
  40200c:	str	x8, [sp, #40]
  402010:	ldrb	w10, [sp, #38]
  402014:	cmp	w10, #0x1
  402018:	b.ne	40204c <is_fido_security_token_desc+0x1c0>  // b.any
  40201c:	ldrb	w8, [sp, #39]
  402020:	cbnz	w8, 40204c <is_fido_security_token_desc+0x1c0>
  402024:	ldr	x8, [sp, #24]
  402028:	cmp	x8, #0x2
  40202c:	b.ls	40203c <is_fido_security_token_desc+0x1b0>  // b.plast
  402030:	mov	w8, #0xffffffea            	// #-22
  402034:	str	w8, [sp, #76]
  402038:	b	4020b8 <is_fido_security_token_desc+0x22c>
  40203c:	ldr	w8, [sp, #20]
  402040:	and	w8, w8, #0xffff
  402044:	lsl	w8, w8, #16
  402048:	str	w8, [sp, #52]
  40204c:	ldrb	w8, [sp, #38]
  402050:	cmp	w8, #0x2
  402054:	b.ne	4020b0 <is_fido_security_token_desc+0x224>  // b.any
  402058:	ldrb	w8, [sp, #39]
  40205c:	cbnz	w8, 4020b0 <is_fido_security_token_desc+0x224>
  402060:	ldr	x8, [sp, #24]
  402064:	cmp	x8, #0x4
  402068:	b.ne	402078 <is_fido_security_token_desc+0x1ec>  // b.any
  40206c:	ldr	w8, [sp, #20]
  402070:	str	w8, [sp, #52]
  402074:	b	402090 <is_fido_security_token_desc+0x204>
  402078:	ldr	w8, [sp, #52]
  40207c:	and	w8, w8, #0xffff0000
  402080:	ldr	w9, [sp, #20]
  402084:	and	w9, w9, #0xffff
  402088:	orr	w8, w8, w9
  40208c:	str	w8, [sp, #52]
  402090:	ldr	w8, [sp, #52]
  402094:	mov	w9, #0x1                   	// #1
  402098:	movk	w9, #0xf1d0, lsl #16
  40209c:	cmp	w8, w9
  4020a0:	b.ne	4020b0 <is_fido_security_token_desc+0x224>  // b.any
  4020a4:	mov	w8, #0x1                   	// #1
  4020a8:	str	w8, [sp, #76]
  4020ac:	b	4020b8 <is_fido_security_token_desc+0x22c>
  4020b0:	b	401ea0 <is_fido_security_token_desc+0x14>
  4020b4:	str	wzr, [sp, #76]
  4020b8:	ldr	w0, [sp, #76]
  4020bc:	add	sp, sp, #0x50
  4020c0:	ret
  4020c4:	udf	#0

00000000004020c8 <__libc_csu_init>:
  4020c8:	stp	x29, x30, [sp, #-64]!
  4020cc:	mov	x29, sp
  4020d0:	stp	x19, x20, [sp, #16]
  4020d4:	adrp	x20, 41f000 <__FRAME_END__+0x1cbd8>
  4020d8:	add	x20, x20, #0xcc0
  4020dc:	stp	x21, x22, [sp, #32]
  4020e0:	adrp	x21, 41f000 <__FRAME_END__+0x1cbd8>
  4020e4:	add	x21, x21, #0xcb8
  4020e8:	sub	x20, x20, x21
  4020ec:	mov	w22, w0
  4020f0:	stp	x23, x24, [sp, #48]
  4020f4:	mov	x23, x1
  4020f8:	mov	x24, x2
  4020fc:	bl	400f48 <_init>
  402100:	cmp	xzr, x20, asr #3
  402104:	b.eq	402130 <__libc_csu_init+0x68>  // b.none
  402108:	asr	x20, x20, #3
  40210c:	mov	x19, #0x0                   	// #0
  402110:	ldr	x3, [x21, x19, lsl #3]
  402114:	mov	x2, x24
  402118:	add	x19, x19, #0x1
  40211c:	mov	x1, x23
  402120:	mov	w0, w22
  402124:	blr	x3
  402128:	cmp	x20, x19
  40212c:	b.ne	402110 <__libc_csu_init+0x48>  // b.any
  402130:	ldp	x19, x20, [sp, #16]
  402134:	ldp	x21, x22, [sp, #32]
  402138:	ldp	x23, x24, [sp, #48]
  40213c:	ldp	x29, x30, [sp], #64
  402140:	ret
  402144:	nop

0000000000402148 <__libc_csu_fini>:
  402148:	ret

Disassembly of section .fini:

000000000040214c <_fini>:
  40214c:	stp	x29, x30, [sp, #-16]!
  402150:	mov	x29, sp
  402154:	ldp	x29, x30, [sp], #16
  402158:	ret
