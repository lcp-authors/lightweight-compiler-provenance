
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//efi_gop.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xdc0>:
   0:	mov	x1, x0
   4:	ldr	w0, [x0, #12]
   8:	cmp	w0, #0x1
   c:	b.ls	40 <grub_mod_init-0xd80>  // b.plast
  10:	cmp	w0, #0x2
  14:	mov	w0, #0x0                   	// #0
  18:	b.ne	3c <grub_mod_init-0xd84>  // b.any
  1c:	ldp	w2, w3, [x1, #16]
  20:	ands	w5, w2, w3
  24:	b.ne	3c <grub_mod_init-0xd84>  // b.any
  28:	ldr	w4, [x1, #24]
  2c:	orr	w2, w2, w3
  30:	mov	w0, w5
  34:	ands	w3, w2, w4
  38:	b.eq	48 <grub_mod_init-0xd78>  // b.none
  3c:	ret
  40:	mov	w0, #0x20                  	// #32
  44:	ret
  48:	ldr	w1, [x1, #28]
  4c:	orr	w2, w2, w4
  50:	mov	w0, w3
  54:	tst	w1, w2
  58:	b.ne	3c <grub_mod_init-0xd84>  // b.any
  5c:	orr	w2, w1, w2
  60:	mov	w0, #0x1f                  	// #31
  64:	mov	w3, #0x1                   	// #1
  68:	b	78 <grub_mod_init-0xd48>
  6c:	sub	w0, w0, #0x1
  70:	cmn	w0, #0x1
  74:	b.eq	8c <grub_mod_init-0xd34>  // b.none
  78:	lsl	w1, w3, w0
  7c:	tst	w1, w2
  80:	b.eq	6c <grub_mod_init-0xd54>  // b.none
  84:	add	w0, w0, #0x1
  88:	ret
  8c:	mov	w0, #0x0                   	// #0
  90:	ret
  94:	nop
  98:	stp	x29, x30, [sp, #-176]!
  9c:	adrp	x2, 0 <grub_mod_init-0xdc0>
  a0:	mov	x29, sp
  a4:	stp	x19, x20, [sp, #16]
  a8:	ldr	x20, [x2]
  ac:	stp	x21, x22, [sp, #32]
  b0:	mov	x21, x0
  b4:	mov	x22, x1
  b8:	ldr	x0, [x20]
  bc:	ldr	x1, [x0, #24]
  c0:	ldr	w1, [x1]
  c4:	cbz	w1, 174 <grub_mod_init-0xc4c>
  c8:	stp	x23, x24, [sp, #48]
  cc:	mov	x24, #0x10                  	// #16
  d0:	mov	x23, #0x91                  	// #145
  d4:	stp	x25, x26, [sp, #64]
  d8:	mov	x25, #0x2                   	// #2
  dc:	mov	w19, #0x0                   	// #0
  e0:	mov	w26, #0x100                 	// #256
  e4:	movk	x25, #0x8, lsl #32
  e8:	movk	x24, #0x8, lsl #32
  ec:	movk	x23, #0x20, lsl #32
  f0:	ldr	x4, [x0]
  f4:	str	xzr, [sp, #88]
  f8:	add	x3, sp, #0x58
  fc:	add	x2, sp, #0x50
 100:	mov	w1, w19
 104:	blr	x4
 108:	cbnz	x0, 154 <grub_mod_init-0xc6c>
 10c:	ldr	x3, [sp, #88]
 110:	mov	w7, #0x4                   	// #4
 114:	mov	x6, #0x800000008           	// #34359738376
 118:	mov	x5, #0x800000000           	// #34359738368
 11c:	mov	w4, #0x18                  	// #24
 120:	mov	x1, x22
 124:	ldr	w2, [x3, #4]
 128:	add	x0, sp, #0x60
 12c:	ldur	x3, [x3, #4]
 130:	stp	x3, x23, [sp, #96]
 134:	lsl	w2, w2, #2
 138:	stp	w7, w2, [sp, #112]
 13c:	stp	w26, w19, [sp, #120]
 140:	stp	x25, x24, [sp, #128]
 144:	stp	x6, x5, [sp, #144]
 148:	str	w4, [sp, #160]
 14c:	blr	x21
 150:	cbnz	w0, 188 <grub_mod_init-0xc38>
 154:	ldr	x0, [x20]
 158:	add	w19, w19, #0x1
 15c:	ldr	x1, [x0, #24]
 160:	ldr	w1, [x1]
 164:	cmp	w1, w19
 168:	b.hi	f0 <grub_mod_init-0xcd0>  // b.pmore
 16c:	ldp	x23, x24, [sp, #48]
 170:	ldp	x25, x26, [sp, #64]
 174:	mov	w0, #0x0                   	// #0
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x21, x22, [sp, #32]
 180:	ldp	x29, x30, [sp], #176
 184:	ret
 188:	mov	w0, #0x1                   	// #1
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldp	x21, x22, [sp, #32]
 194:	ldp	x23, x24, [sp, #48]
 198:	ldp	x25, x26, [sp, #64]
 19c:	ldp	x29, x30, [sp], #176
 1a0:	ret
 1a4:	nop
	...
 1b0:	adrp	x0, 0 <grub_mod_init-0xdc0>
 1b4:	ldr	x0, [x0]
 1b8:	ldr	x1, [x0, #104]
 1bc:	cbz	x1, 214 <grub_mod_init-0xbac>
 1c0:	sub	sp, sp, #0x20
 1c4:	add	x3, x0, #0x8
 1c8:	mov	x6, #0x0                   	// #0
 1cc:	mov	x5, #0x0                   	// #0
 1d0:	mov	x4, #0x0                   	// #0
 1d4:	stp	x29, x30, [sp, #16]
 1d8:	add	x29, sp, #0x10
 1dc:	ldr	w2, [x0, #8]
 1e0:	ldr	x0, [x0]
 1e4:	mov	w7, w2
 1e8:	ldr	w3, [x3, #4]
 1ec:	lsl	w2, w2, #2
 1f0:	stp	x3, x2, [sp]
 1f4:	mov	x2, #0x2                   	// #2
 1f8:	mov	x3, #0x0                   	// #0
 1fc:	ldr	x8, [x0, #16]
 200:	blr	x8
 204:	mov	w0, #0x0                   	// #0
 208:	ldp	x29, x30, [sp, #16]
 20c:	add	sp, sp, #0x20
 210:	ret
 214:	mov	w0, #0x0                   	// #0
 218:	ret
 21c:	nop
	...
 228:	stp	x29, x30, [sp, #-80]!
 22c:	mov	x2, #0x80                  	// #128
 230:	mov	w1, #0x0                   	// #0
 234:	mov	x29, sp
 238:	stp	x19, x20, [sp, #16]
 23c:	mov	x19, x0
 240:	str	x21, [sp, #32]
 244:	bl	0 <grub_memset>
 248:	adrp	x1, 0 <grub_mod_init-0xdc0>
 24c:	adrp	x0, 0 <grub_mod_init-0xdc0>
 250:	mov	w2, #0x2                   	// #2
 254:	ldr	x21, [x1]
 258:	ldr	x20, [x0]
 25c:	ldr	x0, [x21, #112]
 260:	mov	x1, x20
 264:	bl	0 <grub_efi_open_protocol>
 268:	cbz	x0, 274 <grub_mod_init-0xb4c>
 26c:	ldr	w2, [x0]
 270:	cbnz	w2, 2ec <grub_mod_init-0xad4>
 274:	ldr	x0, [x21, #112]
 278:	add	x1, x20, #0x10
 27c:	mov	w2, #0x2                   	// #2
 280:	bl	0 <grub_efi_open_protocol>
 284:	cbz	x0, 290 <grub_mod_init-0xb30>
 288:	ldr	w2, [x0]
 28c:	cbnz	w2, 2ec <grub_mod_init-0xad4>
 290:	adrp	x3, 0 <grub_mod_init-0xdc0>
 294:	add	x1, x20, #0x20
 298:	add	x2, sp, #0x30
 29c:	add	x0, sp, #0x38
 2a0:	ldr	x3, [x3]
 2a4:	ldp	x4, x5, [x3]
 2a8:	stp	x4, x5, [sp, #56]
 2ac:	ldrh	w3, [x3, #16]
 2b0:	strh	w3, [sp, #72]
 2b4:	bl	0 <grub_efi_get_variable>
 2b8:	mov	x20, x0
 2bc:	cbz	x0, 2cc <grub_mod_init-0xaf4>
 2c0:	ldr	x2, [sp, #48]
 2c4:	cmp	x2, #0x10
 2c8:	b.hi	31c <grub_mod_init-0xaa4>  // b.pmore
 2cc:	adrp	x1, 0 <grub_mod_init-0xdc0>
 2d0:	mov	w0, #0xd                   	// #13
 2d4:	ldr	x1, [x1]
 2d8:	bl	0 <grub_error>
 2dc:	ldp	x19, x20, [sp, #16]
 2e0:	ldr	x21, [sp, #32]
 2e4:	ldp	x29, x30, [sp], #80
 2e8:	ret
 2ec:	ldr	x1, [x0, #8]
 2f0:	cmp	w2, #0x80
 2f4:	mov	x3, #0x80                  	// #128
 2f8:	mov	w2, w2
 2fc:	csel	x2, x2, x3, ls  // ls = plast
 300:	mov	x0, x19
 304:	bl	0 <grub_memmove>
 308:	mov	w0, #0x0                   	// #0
 30c:	ldp	x19, x20, [sp, #16]
 310:	ldr	x21, [sp, #32]
 314:	ldp	x29, x30, [sp], #80
 318:	ret
 31c:	sub	x2, x2, #0x10
 320:	mov	x0, #0x80                  	// #128
 324:	cmp	x2, x0
 328:	add	x1, x20, #0x10
 32c:	csel	x2, x2, x0, ls  // ls = plast
 330:	mov	x0, x19
 334:	bl	0 <grub_memmove>
 338:	mov	x0, x20
 33c:	bl	0 <grub_free>
 340:	mov	w0, #0x0                   	// #0
 344:	ldp	x19, x20, [sp, #16]
 348:	ldr	x21, [sp, #32]
 34c:	ldp	x29, x30, [sp], #80
 350:	ret
 354:	nop
	...
 378:	cbz	x0, 380 <grub_mod_init-0xa40>
 37c:	b	0 <grub_video_fb_set_active_render_target>
 380:	adrp	x0, 0 <grub_mod_init-0xdc0>
 384:	ldr	x0, [x0]
 388:	ldr	x0, [x0, #88]
 38c:	b	0 <grub_video_fb_set_active_render_target>
	...
 398:	stp	x29, x30, [sp, #-32]!
 39c:	adrp	x0, 0 <grub_mod_init-0xdc0>
 3a0:	mov	x29, sp
 3a4:	str	x19, [sp, #16]
 3a8:	ldr	x19, [x0]
 3ac:	ldr	w0, [x19, #120]
 3b0:	cbz	w0, 3c8 <grub_mod_init-0x9f8>
 3b4:	ldr	x0, [x19]
 3b8:	ldr	w1, [x19, #124]
 3bc:	ldr	x2, [x0, #8]
 3c0:	blr	x2
 3c4:	str	wzr, [x19, #120]
 3c8:	ldr	x0, [x19, #104]
 3cc:	add	x19, x19, #0x8
 3d0:	bl	0 <grub_free>
 3d4:	str	xzr, [x19, #96]
 3d8:	ldr	x19, [sp, #16]
 3dc:	ldp	x29, x30, [sp], #32
 3e0:	b	0 <grub_video_fb_fini>
 3e4:	nop
	...
 3f0:	stp	x29, x30, [sp, #-256]!
 3f4:	mov	x29, sp
 3f8:	stp	x19, x20, [sp, #16]
 3fc:	stp	x21, x22, [sp, #32]
 400:	stp	x23, x24, [sp, #48]
 404:	mov	w23, w0
 408:	orr	w0, w0, w1
 40c:	stp	x25, x26, [sp, #64]
 410:	ubfx	x24, x2, #8, #8
 414:	stp	x27, x28, [sp, #80]
 418:	str	w0, [sp, #100]
 41c:	stp	w1, wzr, [sp, #108]
 420:	str	wzr, [sp, #116]
 424:	str	xzr, [sp, #120]
 428:	cbz	w0, 7f0 <grub_mod_init-0x5d0>
 42c:	adrp	x0, 0 <grub_mod_init-0xdc0>
 430:	ldr	x19, [x0]
 434:	ldr	x0, [x19]
 438:	ldr	x7, [x0, #24]
 43c:	ldr	x6, [x7, #8]
 440:	cbz	x6, 450 <grub_mod_init-0x970>
 444:	mov	x0, x6
 448:	bl	0 <grub_mod_init-0xdc0>
 44c:	cbnz	w0, 788 <grub_mod_init-0x638>
 450:	adrp	x1, 0 <grub_mod_init-0xdc0>
 454:	adrp	x2, 0 <grub_mod_init-0xdc0>
 458:	adrp	x0, 0 <grub_mod_init-0xdc0>
 45c:	ldr	w4, [x7]
 460:	ldr	x3, [x1]
 464:	mov	w1, #0x18d                 	// #397
 468:	ldr	x21, [x2]
 46c:	ldr	x20, [x0]
 470:	mov	x2, x21
 474:	mov	x0, x20
 478:	bl	0 <grub_real_dprintf>
 47c:	ldr	x0, [x19]
 480:	ldr	x1, [x0, #24]
 484:	ldr	w1, [x1]
 488:	cbz	w1, 854 <grub_mod_init-0x56c>
 48c:	add	x22, sp, #0x80
 490:	mov	w28, #0x0                   	// #0
 494:	mov	x27, #0x0                   	// #0
 498:	mov	w25, #0x0                   	// #0
 49c:	adrp	x26, 0 <grub_mod_init-0xdc0>
 4a0:	str	wzr, [sp, #104]
 4a4:	b	4c4 <grub_mod_init-0x8fc>
 4a8:	str	xzr, [sp, #120]
 4ac:	ldr	x0, [x19]
 4b0:	add	w28, w28, #0x1
 4b4:	ldr	x1, [x0, #24]
 4b8:	ldr	w2, [x1]
 4bc:	cmp	w2, w28
 4c0:	b.ls	5b8 <grub_mod_init-0x808>  // b.plast
 4c4:	ldr	x5, [x0]
 4c8:	add	x3, sp, #0x78
 4cc:	mov	x2, x22
 4d0:	mov	w1, w28
 4d4:	blr	x5
 4d8:	cbnz	x0, 4a8 <grub_mod_init-0x918>
 4dc:	ldr	x0, [sp, #120]
 4e0:	mov	w1, #0x19a                 	// #410
 4e4:	ldr	x3, [x26]
 4e8:	mov	w4, w28
 4ec:	ldp	w5, w6, [x0, #4]
 4f0:	mov	x2, x21
 4f4:	mov	x0, x20
 4f8:	bl	0 <grub_real_dprintf>
 4fc:	ldr	w1, [sp, #112]
 500:	ldr	x0, [sp, #120]
 504:	cbz	w1, 524 <grub_mod_init-0x89c>
 508:	ldr	w2, [x0, #4]
 50c:	cmp	w1, w2
 510:	b.cc	754 <grub_mod_init-0x66c>  // b.lo, b.ul, b.last
 514:	ldr	w2, [x0, #8]
 518:	ldr	w1, [sp, #116]
 51c:	cmp	w2, w1
 520:	b.hi	754 <grub_mod_init-0x66c>  // b.pmore
 524:	bl	0 <grub_mod_init-0xdc0>
 528:	mov	w5, w0
 52c:	cbz	w0, 734 <grub_mod_init-0x68c>
 530:	adrp	x0, 0 <grub_mod_init-0xdc0>
 534:	mov	w1, #0x1ac                 	// #428
 538:	mov	w4, w28
 53c:	mov	x2, x21
 540:	ldr	x3, [x0]
 544:	mov	x0, x20
 548:	str	w5, [sp, #96]
 54c:	bl	0 <grub_real_dprintf>
 550:	ldr	x1, [sp, #120]
 554:	ldr	w5, [sp, #96]
 558:	ldr	w0, [x1, #4]
 55c:	cmp	w0, w23
 560:	b.eq	774 <grub_mod_init-0x64c>  // b.none
 564:	ldr	w2, [sp, #100]
 568:	cbnz	w2, 714 <grub_mod_init-0x6ac>
 56c:	cmp	w24, #0x0
 570:	ccmp	w24, w5, #0x4, ne  // ne = any
 574:	b.ne	714 <grub_mod_init-0x6ac>  // b.any
 578:	ldr	w1, [x1, #8]
 57c:	mov	w5, w5
 580:	mov	w2, #0x1                   	// #1
 584:	str	w2, [sp, #104]
 588:	umull	x0, w0, w1
 58c:	mul	x5, x0, x5
 590:	cmp	x5, x27
 594:	csel	x0, x27, x5, ls  // ls = plast
 598:	csel	w25, w25, w28, ls  // ls = plast
 59c:	mov	x27, x0
 5a0:	add	w28, w28, #0x1
 5a4:	ldr	x0, [x19]
 5a8:	ldr	x1, [x0, #24]
 5ac:	ldr	w2, [x1]
 5b0:	cmp	w2, w28
 5b4:	b.hi	4c4 <grub_mod_init-0x8fc>  // b.pmore
 5b8:	ldr	w2, [sp, #104]
 5bc:	cbz	w2, 854 <grub_mod_init-0x56c>
 5c0:	ldr	w2, [x1, #4]
 5c4:	cmp	w2, w25
 5c8:	b.eq	5ec <grub_mod_init-0x7d4>  // b.none
 5cc:	ldr	w1, [x19, #120]
 5d0:	cbz	w1, 7e4 <grub_mod_init-0x5dc>
 5d4:	ldr	x2, [x0, #8]
 5d8:	mov	w1, w25
 5dc:	blr	x2
 5e0:	ldr	x0, [x19]
 5e4:	ldr	x1, [x0, #24]
 5e8:	ldr	w25, [x1, #4]
 5ec:	ldr	x3, [x1, #8]
 5f0:	add	x22, x19, #0x8
 5f4:	mov	x24, #0x2                   	// #2
 5f8:	mov	x23, #0x10                  	// #16
 5fc:	movk	x24, #0x8, lsl #32
 600:	movk	x23, #0x8, lsl #32
 604:	ldp	w2, w4, [x3, #4]
 608:	str	x24, [x22, #32]
 60c:	str	w2, [x19, #8]
 610:	mov	x28, #0x91                  	// #145
 614:	ldr	x1, [x1, #24]
 618:	mul	w0, w2, w4
 61c:	lsl	w5, w2, #2
 620:	mov	x2, #0x800000008           	// #34359738376
 624:	stp	x23, x2, [x22, #40]
 628:	mov	x2, #0x800000000           	// #34359738368
 62c:	mov	w26, #0x100                 	// #256
 630:	mov	w27, #0x4                   	// #4
 634:	movk	x28, #0x20, lsl #32
 638:	str	w4, [x22, #4]
 63c:	lsl	x0, x0, #2
 640:	str	x28, [x22, #8]
 644:	stp	w27, w5, [x22, #16]
 648:	stp	w26, w25, [x22, #24]
 64c:	str	x2, [x22, #56]
 650:	mov	w2, #0x18                  	// #24
 654:	str	w2, [x22, #64]
 658:	str	x1, [x22, #88]
 65c:	str	x3, [sp, #120]
 660:	bl	0 <grub_malloc>
 664:	str	x0, [x22, #96]
 668:	mov	x25, x0
 66c:	cbz	x0, 960 <grub_mod_init-0x460>
 670:	ldr	w5, [x19, #8]
 674:	ldr	w6, [x22, #4]
 678:	ldr	w7, [x22, #12]
 67c:	ldr	x4, [x22, #88]
 680:	adrp	x0, 0 <grub_mod_init-0xdc0>
 684:	mov	x2, x21
 688:	add	x22, x19, #0x8
 68c:	ldr	x3, [x0]
 690:	mov	w1, #0x1ee                 	// #494
 694:	mov	x0, x20
 698:	bl	0 <grub_real_dprintf>
 69c:	add	x0, x19, #0x58
 6a0:	mov	x2, x25
 6a4:	mov	x1, x22
 6a8:	bl	0 <grub_video_fb_create_render_target_from_pointer>
 6ac:	mov	w19, w0
 6b0:	cbnz	w0, 81c <grub_mod_init-0x5a4>
 6b4:	ldr	x0, [x22, #80]
 6b8:	bl	0 <grub_video_fb_set_active_render_target>
 6bc:	mov	w19, w0
 6c0:	cbnz	w0, 8a0 <grub_mod_init-0x520>
 6c4:	adrp	x2, 0 <grub_mod_init-0xdc0>
 6c8:	mov	w1, #0x10                  	// #16
 6cc:	ldr	x2, [x2]
 6d0:	bl	0 <grub_video_fb_set_palette>
 6d4:	mov	w19, w0
 6d8:	cbz	w0, 8d8 <grub_mod_init-0x4e8>
 6dc:	adrp	x3, 0 <grub_mod_init-0xdc0>
 6e0:	mov	x2, x21
 6e4:	mov	x0, x20
 6e8:	mov	w1, #0x207                 	// #519
 6ec:	ldr	x3, [x3]
 6f0:	bl	0 <grub_real_dprintf>
 6f4:	mov	w0, w19
 6f8:	ldp	x19, x20, [sp, #16]
 6fc:	ldp	x21, x22, [sp, #32]
 700:	ldp	x23, x24, [sp, #48]
 704:	ldp	x25, x26, [sp, #64]
 708:	ldp	x27, x28, [sp, #80]
 70c:	ldp	x29, x30, [sp], #256
 710:	ret
 714:	adrp	x0, 0 <grub_mod_init-0xdc0>
 718:	mov	w4, w28
 71c:	mov	x2, x21
 720:	mov	w1, #0x1b2                 	// #434
 724:	ldr	x3, [x0]
 728:	mov	x0, x20
 72c:	bl	0 <grub_real_dprintf>
 730:	b	4ac <grub_mod_init-0x914>
 734:	adrp	x0, 0 <grub_mod_init-0xdc0>
 738:	mov	w4, w28
 73c:	mov	x2, x21
 740:	mov	w1, #0x1a7                 	// #423
 744:	ldr	x3, [x0]
 748:	mov	x0, x20
 74c:	bl	0 <grub_real_dprintf>
 750:	b	4ac <grub_mod_init-0x914>
 754:	adrp	x0, 0 <grub_mod_init-0xdc0>
 758:	mov	w4, w28
 75c:	mov	x2, x21
 760:	mov	w1, #0x1a0                 	// #416
 764:	ldr	x3, [x0]
 768:	mov	x0, x20
 76c:	bl	0 <grub_real_dprintf>
 770:	b	4ac <grub_mod_init-0x914>
 774:	ldr	w2, [x1, #8]
 778:	ldr	w3, [sp, #108]
 77c:	cmp	w2, w3
 780:	b.ne	564 <grub_mod_init-0x85c>  // b.any
 784:	b	56c <grub_mod_init-0x854>
 788:	ldr	w1, [x6, #4]
 78c:	cmp	w1, w23
 790:	b.eq	94c <grub_mod_init-0x474>  // b.none
 794:	ldr	w1, [sp, #100]
 798:	cbnz	w1, 450 <grub_mod_init-0x970>
 79c:	cmp	w24, #0x0
 7a0:	ccmp	w24, w0, #0x4, ne  // ne = any
 7a4:	b.ne	450 <grub_mod_init-0x970>  // b.any
 7a8:	adrp	x1, 0 <grub_mod_init-0xdc0>
 7ac:	adrp	x2, 0 <grub_mod_init-0xdc0>
 7b0:	adrp	x0, 0 <grub_mod_init-0xdc0>
 7b4:	ldr	w4, [x7, #4]
 7b8:	ldr	x3, [x1]
 7bc:	mov	w1, #0x184                 	// #388
 7c0:	ldr	x21, [x2]
 7c4:	ldr	x20, [x0]
 7c8:	mov	x2, x21
 7cc:	mov	x0, x20
 7d0:	bl	0 <grub_real_dprintf>
 7d4:	ldr	x0, [x19]
 7d8:	ldr	x1, [x0, #24]
 7dc:	ldr	w25, [x1, #4]
 7e0:	b	5ec <grub_mod_init-0x7d4>
 7e4:	mov	w1, #0x1                   	// #1
 7e8:	stp	w1, w2, [x19, #120]
 7ec:	b	5d4 <grub_mod_init-0x7ec>
 7f0:	add	x22, sp, #0x80
 7f4:	mov	x0, x22
 7f8:	bl	228 <grub_mod_init-0xb98>
 7fc:	cbz	w0, 910 <grub_mod_init-0x4b0>
 800:	adrp	x0, 0 <grub_mod_init-0xdc0>
 804:	mov	w2, #0x320                 	// #800
 808:	mov	w1, #0x258                 	// #600
 80c:	stp	w2, w1, [sp, #112]
 810:	ldr	x0, [x0]
 814:	str	wzr, [x0]
 818:	b	42c <grub_mod_init-0x994>
 81c:	adrp	x3, 0 <grub_mod_init-0xdc0>
 820:	mov	x2, x21
 824:	mov	x0, x20
 828:	mov	w1, #0x1f7                 	// #503
 82c:	ldr	x3, [x3]
 830:	bl	0 <grub_real_dprintf>
 834:	mov	w0, w19
 838:	ldp	x19, x20, [sp, #16]
 83c:	ldp	x21, x22, [sp, #32]
 840:	ldp	x23, x24, [sp, #48]
 844:	ldp	x25, x26, [sp, #64]
 848:	ldp	x27, x28, [sp, #80]
 84c:	ldp	x29, x30, [sp], #256
 850:	ret
 854:	adrp	x3, 0 <grub_mod_init-0xdc0>
 858:	mov	x2, x21
 85c:	mov	x0, x20
 860:	mov	w1, #0x1c5                 	// #453
 864:	ldr	x3, [x3]
 868:	bl	0 <grub_real_dprintf>
 86c:	adrp	x1, 0 <grub_mod_init-0xdc0>
 870:	mov	w0, #0xc                   	// #12
 874:	ldr	x1, [x1]
 878:	bl	0 <grub_error>
 87c:	mov	w19, w0
 880:	mov	w0, w19
 884:	ldp	x19, x20, [sp, #16]
 888:	ldp	x21, x22, [sp, #32]
 88c:	ldp	x23, x24, [sp, #48]
 890:	ldp	x25, x26, [sp, #64]
 894:	ldp	x27, x28, [sp, #80]
 898:	ldp	x29, x30, [sp], #256
 89c:	ret
 8a0:	adrp	x3, 0 <grub_mod_init-0xdc0>
 8a4:	mov	x2, x21
 8a8:	mov	x0, x20
 8ac:	mov	w1, #0x1ff                 	// #511
 8b0:	ldr	x3, [x3]
 8b4:	bl	0 <grub_real_dprintf>
 8b8:	mov	w0, w19
 8bc:	ldp	x19, x20, [sp, #16]
 8c0:	ldp	x21, x22, [sp, #32]
 8c4:	ldp	x23, x24, [sp, #48]
 8c8:	ldp	x25, x26, [sp, #64]
 8cc:	ldp	x27, x28, [sp, #80]
 8d0:	ldp	x29, x30, [sp], #256
 8d4:	ret
 8d8:	adrp	x3, 0 <grub_mod_init-0xdc0>
 8dc:	mov	x2, x21
 8e0:	mov	x0, x20
 8e4:	mov	w1, #0x209                 	// #521
 8e8:	ldr	x3, [x3]
 8ec:	bl	0 <grub_real_dprintf>
 8f0:	mov	w0, w19
 8f4:	ldp	x19, x20, [sp, #16]
 8f8:	ldp	x21, x22, [sp, #32]
 8fc:	ldp	x23, x24, [sp, #48]
 900:	ldp	x25, x26, [sp, #64]
 904:	ldp	x27, x28, [sp, #80]
 908:	ldp	x29, x30, [sp], #256
 90c:	ret
 910:	mov	x0, x22
 914:	bl	0 <grub_video_edid_checksum>
 918:	cbnz	w0, 800 <grub_mod_init-0x5c0>
 91c:	mov	x0, x22
 920:	add	x2, sp, #0x74
 924:	add	x1, sp, #0x70
 928:	bl	0 <grub_video_edid_preferred_mode>
 92c:	cbnz	w0, 800 <grub_mod_init-0x5c0>
 930:	ldr	w0, [sp, #112]
 934:	cmp	w0, #0xfff
 938:	b.hi	800 <grub_mod_init-0x5c0>  // b.pmore
 93c:	ldr	w0, [sp, #116]
 940:	cmp	w0, #0xfff
 944:	b.ls	42c <grub_mod_init-0x994>  // b.plast
 948:	b	800 <grub_mod_init-0x5c0>
 94c:	ldr	w1, [x6, #8]
 950:	ldr	w2, [sp, #108]
 954:	cmp	w1, w2
 958:	b.ne	794 <grub_mod_init-0x62c>  // b.any
 95c:	b	79c <grub_mod_init-0x624>
 960:	adrp	x3, 0 <grub_mod_init-0xdc0>
 964:	mov	x2, x21
 968:	mov	x0, x20
 96c:	mov	w1, #0x1e7                 	// #487
 970:	ldr	x3, [x3]
 974:	bl	0 <grub_real_dprintf>
 978:	ldr	x0, [sp, #120]
 97c:	adrp	x2, 0 <grub_mod_init-0xdc0>
 980:	ldr	x1, [x19]
 984:	mov	w7, #0x20                  	// #32
 988:	ldp	w5, w6, [x0, #4]
 98c:	str	w5, [x19, #8]
 990:	ldr	x1, [x1, #24]
 994:	ldr	x2, [x2]
 998:	lsl	w0, w5, #2
 99c:	ldr	x25, [x22, #88]
 9a0:	ldr	w1, [x1, #4]
 9a4:	stp	w27, w0, [x22, #16]
 9a8:	mov	x0, #0x800000008           	// #34359738376
 9ac:	str	x0, [x22, #48]
 9b0:	mov	x0, #0x800000000           	// #34359738368
 9b4:	mov	x4, x25
 9b8:	str	wzr, [x2]
 9bc:	str	w6, [x22, #4]
 9c0:	str	x28, [x22, #8]
 9c4:	stp	w26, w1, [x22, #24]
 9c8:	stp	x24, x23, [x22, #32]
 9cc:	str	x0, [x22, #56]
 9d0:	mov	w0, #0x18                  	// #24
 9d4:	str	w0, [x22, #64]
 9d8:	b	680 <grub_mod_init-0x740>
 9dc:	nop
	...
 a80:	stp	x29, x30, [sp, #-16]!
 a84:	adrp	x0, 0 <grub_mod_init-0xdc0>
 a88:	mov	x2, #0x68                  	// #104
 a8c:	mov	x29, sp
 a90:	ldr	x0, [x0]
 a94:	mov	w1, #0x0                   	// #0
 a98:	add	x0, x0, #0x8
 a9c:	bl	0 <grub_memset>
 aa0:	ldp	x29, x30, [sp], #16
 aa4:	b	0 <grub_video_fb_init>
	...
 ab0:	stp	x29, x30, [sp, #-48]!
 ab4:	adrp	x3, 0 <grub_mod_init-0xdc0>
 ab8:	mov	w2, #0x100                 	// #256
 abc:	mov	x29, sp
 ac0:	stp	x19, x20, [sp, #16]
 ac4:	mov	x19, x0
 ac8:	mov	w7, #0x1                   	// #1
 acc:	ldr	x20, [x3]
 ad0:	ldr	x0, [x20]
 ad4:	ldr	x0, [x0, #24]
 ad8:	ldr	x6, [x0, #8]
 adc:	ldr	w3, [x6, #4]
 ae0:	str	x21, [sp, #32]
 ae4:	mov	x21, x1
 ae8:	ldr	w1, [x0, #4]
 aec:	mov	x0, x6
 af0:	str	w2, [x19, #24]
 af4:	ldr	w2, [x6, #8]
 af8:	stp	w3, w2, [x19]
 afc:	str	w7, [x19, #8]
 b00:	str	w1, [x19, #28]
 b04:	bl	0 <grub_mod_init-0xdc0>
 b08:	lsr	w2, w0, #3
 b0c:	stp	w0, w2, [x19, #12]
 b10:	cbz	w0, b38 <grub_mod_init-0x288>
 b14:	ldr	w1, [x6, #32]
 b18:	ldr	w0, [x6, #12]
 b1c:	cmp	w0, #0x1
 b20:	mul	w1, w1, w2
 b24:	str	w1, [x19, #20]
 b28:	b.eq	be4 <grub_mod_init-0x1dc>  // b.none
 b2c:	cmp	w0, #0x2
 b30:	b.eq	bf8 <grub_mod_init-0x1c8>  // b.none
 b34:	cbz	w0, b84 <grub_mod_init-0x23c>
 b38:	adrp	x1, 0 <grub_mod_init-0xdc0>
 b3c:	mov	w0, #0x1d                  	// #29
 b40:	ldr	x1, [x1]
 b44:	bl	0 <grub_error>
 b48:	mov	w19, w0
 b4c:	cbz	w0, bb4 <grub_mod_init-0x20c>
 b50:	adrp	x3, 0 <grub_mod_init-0xdc0>
 b54:	adrp	x2, 0 <grub_mod_init-0xdc0>
 b58:	adrp	x0, 0 <grub_mod_init-0xdc0>
 b5c:	mov	w1, #0x22e                 	// #558
 b60:	ldr	x3, [x3]
 b64:	ldr	x2, [x2]
 b68:	ldr	x0, [x0]
 b6c:	bl	0 <grub_real_dprintf>
 b70:	mov	w0, w19
 b74:	ldp	x19, x20, [sp, #16]
 b78:	ldr	x21, [sp, #32]
 b7c:	ldp	x29, x30, [sp], #48
 b80:	ret
 b84:	mov	x1, #0x8                   	// #8
 b88:	mov	x3, #0x8                   	// #8
 b8c:	mov	x2, #0x800000008           	// #34359738376
 b90:	movk	x1, #0x10, lsl #32
 b94:	add	x4, x19, #0x24
 b98:	mov	x0, #0x8                   	// #8
 b9c:	movk	x0, #0x18, lsl #32
 ba0:	stp	x3, x2, [x4]
 ba4:	stp	x1, x0, [x4, #16]
 ba8:	mov	x0, x19
 bac:	bl	0 <grub_video_get_blit_format>
 bb0:	str	w0, [x19, #32]
 bb4:	ldr	x0, [x20, #96]
 bb8:	str	x0, [x21]
 bbc:	mov	w19, #0x0                   	// #0
 bc0:	bl	0 <grub_video_fb_fini>
 bc4:	ldr	x0, [x20, #104]
 bc8:	bl	0 <grub_free>
 bcc:	str	xzr, [x20, #104]
 bd0:	mov	w0, w19
 bd4:	ldp	x19, x20, [sp, #16]
 bd8:	ldr	x21, [sp, #32]
 bdc:	ldp	x29, x30, [sp], #48
 be0:	ret
 be4:	mov	x3, #0x8                   	// #8
 be8:	mov	x2, #0x800000008           	// #34359738376
 bec:	movk	x3, #0x10, lsl #32
 bf0:	mov	x1, #0x8                   	// #8
 bf4:	b	b94 <grub_mod_init-0x22c>
 bf8:	ldr	w1, [x6, #16]
 bfc:	mov	w0, #0x1f                  	// #31
 c00:	b	c0c <grub_mod_init-0x1b4>
 c04:	cmn	w0, #0x1
 c08:	b.eq	d78 <grub_mod_init-0x48>  // b.none
 c0c:	lsl	w2, w7, w0
 c10:	mov	w3, w0
 c14:	tst	w2, w1
 c18:	sub	w0, w0, #0x1
 c1c:	b.eq	c04 <grub_mod_init-0x1bc>  // b.none
 c20:	mov	w0, w3
 c24:	mov	w5, #0x1                   	// #1
 c28:	b	c38 <grub_mod_init-0x188>
 c2c:	lsl	w2, w5, w0
 c30:	tst	w2, w1
 c34:	b.eq	c48 <grub_mod_init-0x178>  // b.none
 c38:	mov	w4, w0
 c3c:	sub	w0, w0, #0x1
 c40:	cmn	w0, #0x1
 c44:	b.ne	c2c <grub_mod_init-0x194>  // b.any
 c48:	add	w3, w3, #0x1
 c4c:	sub	w3, w3, w4
 c50:	stp	w3, w4, [x19, #36]
 c54:	ldr	w1, [x6, #20]
 c58:	mov	w0, #0x1f                  	// #31
 c5c:	mov	w4, #0x1                   	// #1
 c60:	b	c6c <grub_mod_init-0x154>
 c64:	cmn	w0, #0x1
 c68:	b.eq	d90 <grub_mod_init-0x30>  // b.none
 c6c:	lsl	w2, w4, w0
 c70:	mov	w3, w0
 c74:	tst	w2, w1
 c78:	sub	w0, w0, #0x1
 c7c:	b.eq	c64 <grub_mod_init-0x15c>  // b.none
 c80:	mov	w0, w3
 c84:	mov	w5, #0x1                   	// #1
 c88:	b	c98 <grub_mod_init-0x128>
 c8c:	lsl	w2, w5, w0
 c90:	tst	w2, w1
 c94:	b.eq	ca8 <grub_mod_init-0x118>  // b.none
 c98:	mov	w4, w0
 c9c:	sub	w0, w0, #0x1
 ca0:	cmn	w0, #0x1
 ca4:	b.ne	c8c <grub_mod_init-0x134>  // b.any
 ca8:	add	w3, w3, #0x1
 cac:	sub	w3, w3, w4
 cb0:	stp	w3, w4, [x19, #44]
 cb4:	ldr	w1, [x6, #24]
 cb8:	mov	w0, #0x1f                  	// #31
 cbc:	mov	w4, #0x1                   	// #1
 cc0:	b	ccc <grub_mod_init-0xf4>
 cc4:	cmn	w0, #0x1
 cc8:	b.eq	d88 <grub_mod_init-0x38>  // b.none
 ccc:	lsl	w2, w4, w0
 cd0:	mov	w3, w0
 cd4:	tst	w2, w1
 cd8:	sub	w0, w0, #0x1
 cdc:	b.eq	cc4 <grub_mod_init-0xfc>  // b.none
 ce0:	mov	w0, w3
 ce4:	mov	w5, #0x1                   	// #1
 ce8:	b	cf8 <grub_mod_init-0xc8>
 cec:	lsl	w2, w5, w0
 cf0:	tst	w2, w1
 cf4:	b.eq	d08 <grub_mod_init-0xb8>  // b.none
 cf8:	mov	w4, w0
 cfc:	sub	w0, w0, #0x1
 d00:	cmn	w0, #0x1
 d04:	b.ne	cec <grub_mod_init-0xd4>  // b.any
 d08:	add	w3, w3, #0x1
 d0c:	sub	w3, w3, w4
 d10:	stp	w3, w4, [x19, #52]
 d14:	ldr	w1, [x6, #28]
 d18:	mov	w0, #0x1f                  	// #31
 d1c:	mov	w4, #0x1                   	// #1
 d20:	b	d2c <grub_mod_init-0x94>
 d24:	cmn	w0, #0x1
 d28:	b.eq	d80 <grub_mod_init-0x40>  // b.none
 d2c:	lsl	w2, w4, w0
 d30:	mov	w3, w0
 d34:	tst	w2, w1
 d38:	sub	w0, w0, #0x1
 d3c:	b.eq	d24 <grub_mod_init-0x9c>  // b.none
 d40:	mov	w0, w3
 d44:	mov	w5, #0x1                   	// #1
 d48:	b	d58 <grub_mod_init-0x68>
 d4c:	lsl	w2, w5, w0
 d50:	tst	w2, w1
 d54:	b.eq	d68 <grub_mod_init-0x58>  // b.none
 d58:	mov	w4, w0
 d5c:	sub	w0, w0, #0x1
 d60:	cmn	w0, #0x1
 d64:	b.ne	d4c <grub_mod_init-0x74>  // b.any
 d68:	add	w3, w3, #0x1
 d6c:	sub	w3, w3, w4
 d70:	stp	w3, w4, [x19, #60]
 d74:	b	ba8 <grub_mod_init-0x218>
 d78:	stur	xzr, [x19, #36]
 d7c:	b	c54 <grub_mod_init-0x16c>
 d80:	stur	xzr, [x19, #60]
 d84:	b	ba8 <grub_mod_init-0x218>
 d88:	stur	xzr, [x19, #52]
 d8c:	b	d14 <grub_mod_init-0xac>
 d90:	stur	xzr, [x19, #44]
 d94:	b	cb4 <grub_mod_init-0x10c>
	...

0000000000000dc0 <grub_mod_init>:
 dc0:	stp	x29, x30, [sp, #-96]!
 dc4:	adrp	x1, 0 <grub_mod_init-0xdc0>
 dc8:	mov	x2, #0x0                   	// #0
 dcc:	mov	x29, sp
 dd0:	stp	x21, x22, [sp, #32]
 dd4:	add	x3, sp, #0x48
 dd8:	mov	w0, #0x2                   	// #2
 ddc:	ldr	x22, [x1]
 de0:	stp	x23, x24, [sp, #48]
 de4:	add	x24, x22, #0x30
 de8:	mov	x1, x24
 dec:	bl	0 <grub_efi_locate_handle>
 df0:	cbz	x0, eb0 <grub_mod_init+0xf0>
 df4:	mov	x23, x0
 df8:	ldr	x0, [sp, #72]
 dfc:	cbz	x0, eb0 <grub_mod_init+0xf0>
 e00:	adrp	x0, 0 <grub_mod_init-0xdc0>
 e04:	stp	x19, x20, [sp, #16]
 e08:	mov	x20, #0x0                   	// #0
 e0c:	ldr	x21, [x0]
 e10:	mov	x1, x24
 e14:	ldr	x0, [x23, x20, lsl #3]
 e18:	mov	w2, #0x2                   	// #2
 e1c:	str	x0, [x21, #112]
 e20:	bl	0 <grub_efi_open_protocol>
 e24:	str	x0, [x21]
 e28:	ldr	x1, [x0, #24]
 e2c:	ldr	w2, [x1]
 e30:	cbz	w2, ed8 <grub_mod_init+0x118>
 e34:	mov	w19, #0x0                   	// #0
 e38:	ldr	x4, [x0]
 e3c:	str	xzr, [sp, #88]
 e40:	add	x3, sp, #0x58
 e44:	add	x2, sp, #0x50
 e48:	mov	w1, w19
 e4c:	blr	x4
 e50:	cbnz	x0, ec0 <grub_mod_init+0x100>
 e54:	mov	x0, x23
 e58:	bl	0 <grub_free>
 e5c:	adrp	x0, 0 <grub_mod_init-0xdc0>
 e60:	ldr	x1, [x0]
 e64:	ldr	x0, [x1]
 e68:	cbz	x0, e90 <grub_mod_init+0xd0>
 e6c:	ldr	w2, [x22, #92]
 e70:	b	e80 <grub_mod_init+0xc0>
 e74:	mov	x1, x0
 e78:	ldr	x0, [x0]
 e7c:	cbz	x0, e90 <grub_mod_init+0xd0>
 e80:	ldr	w3, [x0, #28]
 e84:	cmp	w3, w2
 e88:	b.hi	e74 <grub_mod_init+0xb4>  // b.pmore
 e8c:	nop
 e90:	str	x0, [x22, #64]
 e94:	add	x0, x22, #0x40
 e98:	str	x0, [x1]
 e9c:	str	x1, [x22, #72]
 ea0:	ldr	x2, [x22, #64]
 ea4:	cbz	x2, f04 <grub_mod_init+0x144>
 ea8:	ldp	x19, x20, [sp, #16]
 eac:	str	x0, [x2, #8]
 eb0:	ldp	x21, x22, [sp, #32]
 eb4:	ldp	x23, x24, [sp, #48]
 eb8:	ldp	x29, x30, [sp], #96
 ebc:	ret
 ec0:	ldr	x0, [x21]
 ec4:	add	w19, w19, #0x1
 ec8:	ldr	x1, [x0, #24]
 ecc:	ldr	w1, [x1]
 ed0:	cmp	w19, w1
 ed4:	b.cc	e38 <grub_mod_init+0x78>  // b.lo, b.ul, b.last
 ed8:	ldr	x0, [sp, #72]
 edc:	add	x20, x20, #0x1
 ee0:	cmp	x20, x0
 ee4:	b.cc	e10 <grub_mod_init+0x50>  // b.lo, b.ul, b.last
 ee8:	ldp	x19, x20, [sp, #16]
 eec:	str	xzr, [x21]
 ef0:	str	xzr, [x21, #112]
 ef4:	ldp	x21, x22, [sp, #32]
 ef8:	ldp	x23, x24, [sp, #48]
 efc:	ldp	x29, x30, [sp], #96
 f00:	ret
 f04:	ldp	x19, x20, [sp, #16]
 f08:	ldp	x21, x22, [sp, #32]
 f0c:	ldp	x23, x24, [sp, #48]
 f10:	ldp	x29, x30, [sp], #96
 f14:	ret
	...

0000000000000f30 <grub_mod_fini>:
 f30:	stp	x29, x30, [sp, #-32]!
 f34:	adrp	x0, 0 <grub_mod_init-0xdc0>
 f38:	mov	x29, sp
 f3c:	str	x19, [sp, #16]
 f40:	ldr	x19, [x0]
 f44:	ldr	w1, [x19, #120]
 f48:	ldr	x0, [x19]
 f4c:	cbz	w1, f64 <grub_mod_fini+0x34>
 f50:	ldr	w1, [x19, #124]
 f54:	ldr	x2, [x0, #8]
 f58:	blr	x2
 f5c:	str	wzr, [x19, #120]
 f60:	ldr	x0, [x19]
 f64:	cbz	x0, f80 <grub_mod_fini+0x50>
 f68:	ldr	x19, [sp, #16]
 f6c:	adrp	x0, 0 <grub_mod_init-0xdc0>
 f70:	ldp	x29, x30, [sp], #32
 f74:	ldr	x0, [x0]
 f78:	add	x0, x0, #0x40
 f7c:	b	0 <grub_list_remove>
 f80:	ldr	x19, [sp, #16]
 f84:	ldp	x29, x30, [sp], #32
 f88:	ret
 f8c:	nop
	...
