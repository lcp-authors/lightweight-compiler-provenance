
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-pstore_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401330 <_init>:
  401330:	stp	x29, x30, [sp, #-16]!
  401334:	mov	x29, sp
  401338:	bl	4016b8 <call_weak_fn>
  40133c:	ldp	x29, x30, [sp], #16
  401340:	ret

Disassembly of section .plt:

0000000000401348 <__libc_start_main@plt-0x20>:
  401348:	stp	x16, x30, [sp, #-16]!
  40134c:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  401350:	ldr	x17, [x16, #3704]
  401354:	add	x16, x16, #0xe78
  401358:	br	x17
  40135c:	nop
  401360:	nop
  401364:	nop

0000000000401368 <__libc_start_main@plt>:
  401368:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40136c:	ldr	x17, [x16, #3712]
  401370:	add	x16, x16, #0xe80
  401374:	br	x17

0000000000401378 <abort@plt>:
  401378:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40137c:	ldr	x17, [x16, #3720]
  401380:	add	x16, x16, #0xe88
  401384:	br	x17

0000000000401388 <__gmon_start__@plt>:
  401388:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40138c:	ldr	x17, [x16, #3728]
  401390:	add	x16, x16, #0xe90
  401394:	br	x17

0000000000401398 <ask_password_agent_close@plt>:
  401398:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40139c:	ldr	x17, [x16, #3736]
  4013a0:	add	x16, x16, #0xe98
  4013a4:	br	x17

00000000004013a8 <polkit_agent_close@plt>:
  4013a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4013ac:	ldr	x17, [x16, #3744]
  4013b0:	add	x16, x16, #0xea0
  4013b4:	br	x17

00000000004013b8 <pager_close@plt>:
  4013b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4013bc:	ldr	x17, [x16, #3752]
  4013c0:	add	x16, x16, #0xea8
  4013c4:	br	x17

00000000004013c8 <mac_selinux_finish@plt>:
  4013c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4013cc:	ldr	x17, [x16, #3760]
  4013d0:	add	x16, x16, #0xeb0
  4013d4:	br	x17

00000000004013d8 <log_setup_service@plt>:
  4013d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4013dc:	ldr	x17, [x16, #3768]
  4013e0:	add	x16, x16, #0xeb8
  4013e4:	br	x17

00000000004013e8 <log_get_max_level_realm@plt>:
  4013e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4013ec:	ldr	x17, [x16, #3776]
  4013f0:	add	x16, x16, #0xec0
  4013f4:	br	x17

00000000004013f8 <log_internal_realm@plt>:
  4013f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4013fc:	ldr	x17, [x16, #3784]
  401400:	add	x16, x16, #0xec8
  401404:	br	x17

0000000000401408 <abs@plt>:
  401408:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40140c:	ldr	x17, [x16, #3792]
  401410:	add	x16, x16, #0xed0
  401414:	br	x17

0000000000401418 <free@plt>:
  401418:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40141c:	ldr	x17, [x16, #3800]
  401420:	add	x16, x16, #0xed8
  401424:	br	x17

0000000000401428 <config_item_table_lookup@plt>:
  401428:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40142c:	ldr	x17, [x16, #3808]
  401430:	add	x16, x16, #0xee0
  401434:	br	x17

0000000000401438 <config_parse_many_nulstr@plt>:
  401438:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40143c:	ldr	x17, [x16, #3816]
  401440:	add	x16, x16, #0xee8
  401444:	br	x17

0000000000401448 <opendir@plt>:
  401448:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40144c:	ldr	x17, [x16, #3824]
  401450:	add	x16, x16, #0xef0
  401454:	br	x17

0000000000401458 <__errno_location@plt>:
  401458:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40145c:	ldr	x17, [x16, #3832]
  401460:	add	x16, x16, #0xef8
  401464:	br	x17

0000000000401468 <readdir64@plt>:
  401468:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40146c:	ldr	x17, [x16, #3840]
  401470:	add	x16, x16, #0xf00
  401474:	br	x17

0000000000401478 <hidden_or_backup_file@plt>:
  401478:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40147c:	ldr	x17, [x16, #3848]
  401480:	add	x16, x16, #0xf08
  401484:	br	x17

0000000000401488 <path_join_internal@plt>:
  401488:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40148c:	ldr	x17, [x16, #3856]
  401490:	add	x16, x16, #0xf10
  401494:	br	x17

0000000000401498 <log_oom_internal@plt>:
  401498:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40149c:	ldr	x17, [x16, #3864]
  4014a0:	add	x16, x16, #0xf18
  4014a4:	br	x17

00000000004014a8 <greedy_realloc@plt>:
  4014a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4014ac:	ldr	x17, [x16, #3872]
  4014b0:	add	x16, x16, #0xf20
  4014b4:	br	x17

00000000004014b8 <memcpy@plt>:
  4014b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4014bc:	ldr	x17, [x16, #3880]
  4014c0:	add	x16, x16, #0xf28
  4014c4:	br	x17

00000000004014c8 <log_assert_failed_realm@plt>:
  4014c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4014cc:	ldr	x17, [x16, #3888]
  4014d0:	add	x16, x16, #0xf30
  4014d4:	br	x17

00000000004014d8 <qsort@plt>:
  4014d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4014dc:	ldr	x17, [x16, #3896]
  4014e0:	add	x16, x16, #0xf38
  4014e4:	br	x17

00000000004014e8 <strcmp@plt>:
  4014e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4014ec:	ldr	x17, [x16, #3904]
  4014f0:	add	x16, x16, #0xf40
  4014f4:	br	x17

00000000004014f8 <endswith@plt>:
  4014f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4014fc:	ldr	x17, [x16, #3912]
  401500:	add	x16, x16, #0xf48
  401504:	br	x17

0000000000401508 <strrchr@plt>:
  401508:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40150c:	ldr	x17, [x16, #3920]
  401510:	add	x16, x16, #0xf50
  401514:	br	x17

0000000000401518 <strlen@plt>:
  401518:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40151c:	ldr	x17, [x16, #3928]
  401520:	add	x16, x16, #0xf58
  401524:	br	x17

0000000000401528 <memdup_suffix0@plt>:
  401528:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40152c:	ldr	x17, [x16, #3936]
  401530:	add	x16, x16, #0xf60
  401534:	br	x17

0000000000401538 <sprintf@plt>:
  401538:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40153c:	ldr	x17, [x16, #3944]
  401540:	add	x16, x16, #0xf68
  401544:	br	x17

0000000000401548 <stpcpy@plt>:
  401548:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40154c:	ldr	x17, [x16, #3952]
  401550:	add	x16, x16, #0xf70
  401554:	br	x17

0000000000401558 <malloc@plt>:
  401558:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40155c:	ldr	x17, [x16, #3960]
  401560:	add	x16, x16, #0xf78
  401564:	br	x17

0000000000401568 <sd_journal_sendv_with_location@plt>:
  401568:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40156c:	ldr	x17, [x16, #3968]
  401570:	add	x16, x16, #0xf80
  401574:	br	x17

0000000000401578 <mkdir_parents@plt>:
  401578:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40157c:	ldr	x17, [x16, #3976]
  401580:	add	x16, x16, #0xf88
  401584:	br	x17

0000000000401588 <unlink@plt>:
  401588:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40158c:	ldr	x17, [x16, #3984]
  401590:	add	x16, x16, #0xf90
  401594:	br	x17

0000000000401598 <log_syntax_internal@plt>:
  401598:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40159c:	ldr	x17, [x16, #3992]
  4015a0:	add	x16, x16, #0xf98
  4015a4:	br	x17

00000000004015a8 <string_table_lookup@plt>:
  4015a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4015ac:	ldr	x17, [x16, #4000]
  4015b0:	add	x16, x16, #0xfa0
  4015b4:	br	x17

00000000004015b8 <closedir@plt>:
  4015b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4015bc:	ldr	x17, [x16, #4008]
  4015c0:	add	x16, x16, #0xfa8
  4015c4:	br	x17

00000000004015c8 <read_full_file_full@plt>:
  4015c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4015cc:	ldr	x17, [x16, #4016]
  4015d0:	add	x16, x16, #0xfb0
  4015d4:	br	x17

00000000004015d8 <strncmp@plt>:
  4015d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4015dc:	ldr	x17, [x16, #4024]
  4015e0:	add	x16, x16, #0xfb8
  4015e4:	br	x17

00000000004015e8 <strcmp_ptr@plt>:
  4015e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4015ec:	ldr	x17, [x16, #4032]
  4015f0:	add	x16, x16, #0xfc0
  4015f4:	br	x17

00000000004015f8 <open_tmpfile_linkable@plt>:
  4015f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  4015fc:	ldr	x17, [x16, #4040]
  401600:	add	x16, x16, #0xfc8
  401604:	br	x17

0000000000401608 <write@plt>:
  401608:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40160c:	ldr	x17, [x16, #4048]
  401610:	add	x16, x16, #0xfd0
  401614:	br	x17

0000000000401618 <link_tmpfile@plt>:
  401618:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40161c:	ldr	x17, [x16, #4056]
  401620:	add	x16, x16, #0xfd8
  401624:	br	x17

0000000000401628 <safe_close@plt>:
  401628:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40162c:	ldr	x17, [x16, #4064]
  401630:	add	x16, x16, #0xfe0
  401634:	br	x17

0000000000401638 <unlink_noerrno@plt>:
  401638:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40163c:	ldr	x17, [x16, #4072]
  401640:	add	x16, x16, #0xfe8
  401644:	br	x17

0000000000401648 <copy_file_atomic_full@plt>:
  401648:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40164c:	ldr	x17, [x16, #4080]
  401650:	add	x16, x16, #0xff0
  401654:	br	x17

0000000000401658 <config_parse_bool@plt>:
  401658:	adrp	x16, 41f000 <__FRAME_END__+0x1ae90>
  40165c:	ldr	x17, [x16, #4088]
  401660:	add	x16, x16, #0xff8
  401664:	br	x17

Disassembly of section .text:

0000000000401668 <_start>:
  401668:	mov	x29, #0x0                   	// #0
  40166c:	mov	x30, #0x0                   	// #0
  401670:	mov	x5, x0
  401674:	ldr	x1, [sp]
  401678:	add	x2, sp, #0x8
  40167c:	mov	x6, sp
  401680:	movz	x0, #0x0, lsl #48
  401684:	movk	x0, #0x0, lsl #32
  401688:	movk	x0, #0x40, lsl #16
  40168c:	movk	x0, #0x1830
  401690:	movz	x3, #0x0, lsl #48
  401694:	movk	x3, #0x0, lsl #32
  401698:	movk	x3, #0x40, lsl #16
  40169c:	movk	x3, #0x39a0
  4016a0:	movz	x4, #0x0, lsl #48
  4016a4:	movk	x4, #0x0, lsl #32
  4016a8:	movk	x4, #0x40, lsl #16
  4016ac:	movk	x4, #0x3a20
  4016b0:	bl	401368 <__libc_start_main@plt>
  4016b4:	bl	401378 <abort@plt>

00000000004016b8 <call_weak_fn>:
  4016b8:	adrp	x0, 41f000 <__FRAME_END__+0x1ae90>
  4016bc:	ldr	x0, [x0, #3664]
  4016c0:	cbz	x0, 4016c8 <call_weak_fn+0x10>
  4016c4:	b	401388 <__gmon_start__@plt>
  4016c8:	ret

00000000004016cc <deregister_tm_clones>:
  4016cc:	stp	x29, x30, [sp, #-32]!
  4016d0:	mov	x29, sp
  4016d4:	adrp	x0, 420000 <arg_sourcedir>
  4016d8:	add	x0, x0, #0x0
  4016dc:	str	x0, [sp, #24]
  4016e0:	ldr	x0, [sp, #24]
  4016e4:	str	x0, [sp, #24]
  4016e8:	ldr	x1, [sp, #24]
  4016ec:	adrp	x0, 420000 <arg_sourcedir>
  4016f0:	add	x0, x0, #0x0
  4016f4:	cmp	x1, x0
  4016f8:	b.eq	401734 <deregister_tm_clones+0x68>  // b.none
  4016fc:	adrp	x0, 403000 <move_file+0x91c>
  401700:	add	x0, x0, #0xa38
  401704:	ldr	x0, [x0]
  401708:	str	x0, [sp, #16]
  40170c:	ldr	x0, [sp, #16]
  401710:	str	x0, [sp, #16]
  401714:	ldr	x0, [sp, #16]
  401718:	cmp	x0, #0x0
  40171c:	b.eq	401738 <deregister_tm_clones+0x6c>  // b.none
  401720:	ldr	x1, [sp, #16]
  401724:	adrp	x0, 420000 <arg_sourcedir>
  401728:	add	x0, x0, #0x0
  40172c:	blr	x1
  401730:	b	401738 <deregister_tm_clones+0x6c>
  401734:	nop
  401738:	ldp	x29, x30, [sp], #32
  40173c:	ret

0000000000401740 <register_tm_clones>:
  401740:	stp	x29, x30, [sp, #-48]!
  401744:	mov	x29, sp
  401748:	adrp	x0, 420000 <arg_sourcedir>
  40174c:	add	x0, x0, #0x0
  401750:	str	x0, [sp, #40]
  401754:	ldr	x0, [sp, #40]
  401758:	str	x0, [sp, #40]
  40175c:	ldr	x1, [sp, #40]
  401760:	adrp	x0, 420000 <arg_sourcedir>
  401764:	add	x0, x0, #0x0
  401768:	sub	x0, x1, x0
  40176c:	asr	x0, x0, #3
  401770:	lsr	x1, x0, #63
  401774:	add	x0, x1, x0
  401778:	asr	x0, x0, #1
  40177c:	str	x0, [sp, #32]
  401780:	ldr	x0, [sp, #32]
  401784:	cmp	x0, #0x0
  401788:	b.eq	4017c8 <register_tm_clones+0x88>  // b.none
  40178c:	adrp	x0, 403000 <move_file+0x91c>
  401790:	add	x0, x0, #0xa40
  401794:	ldr	x0, [x0]
  401798:	str	x0, [sp, #24]
  40179c:	ldr	x0, [sp, #24]
  4017a0:	str	x0, [sp, #24]
  4017a4:	ldr	x0, [sp, #24]
  4017a8:	cmp	x0, #0x0
  4017ac:	b.eq	4017cc <register_tm_clones+0x8c>  // b.none
  4017b0:	ldr	x2, [sp, #24]
  4017b4:	ldr	x1, [sp, #32]
  4017b8:	adrp	x0, 420000 <arg_sourcedir>
  4017bc:	add	x0, x0, #0x0
  4017c0:	blr	x2
  4017c4:	b	4017cc <register_tm_clones+0x8c>
  4017c8:	nop
  4017cc:	ldp	x29, x30, [sp], #48
  4017d0:	ret

00000000004017d4 <__do_global_dtors_aux>:
  4017d4:	stp	x29, x30, [sp, #-16]!
  4017d8:	mov	x29, sp
  4017dc:	adrp	x0, 420000 <arg_sourcedir>
  4017e0:	add	x0, x0, #0x18
  4017e4:	ldrb	w0, [x0]
  4017e8:	and	x0, x0, #0xff
  4017ec:	cmp	x0, #0x0
  4017f0:	b.ne	40180c <__do_global_dtors_aux+0x38>  // b.any
  4017f4:	bl	4016cc <deregister_tm_clones>
  4017f8:	adrp	x0, 420000 <arg_sourcedir>
  4017fc:	add	x0, x0, #0x18
  401800:	mov	w1, #0x1                   	// #1
  401804:	strb	w1, [x0]
  401808:	b	401810 <__do_global_dtors_aux+0x3c>
  40180c:	nop
  401810:	ldp	x29, x30, [sp], #16
  401814:	ret

0000000000401818 <frame_dummy>:
  401818:	stp	x29, x30, [sp, #-16]!
  40181c:	mov	x29, sp
  401820:	bl	401740 <register_tm_clones>
  401824:	nop
  401828:	ldp	x29, x30, [sp], #16
  40182c:	ret

0000000000401830 <main>:
  401830:	sub	sp, sp, #0x30
  401834:	stp	x29, x30, [sp, #32]
  401838:	add	x29, sp, #0x20
  40183c:	mov	w8, wzr
  401840:	mov	w9, #0x1                   	// #1
  401844:	stur	wzr, [x29, #-4]
  401848:	stur	w0, [x29, #-8]
  40184c:	str	x1, [sp, #16]
  401850:	ldur	w0, [x29, #-8]
  401854:	ldr	x1, [sp, #16]
  401858:	str	w8, [sp, #8]
  40185c:	str	w9, [sp, #4]
  401860:	bl	4018a8 <save_argc_argv>
  401864:	ldur	w0, [x29, #-8]
  401868:	ldr	x1, [sp, #16]
  40186c:	bl	4018dc <run>
  401870:	str	w0, [sp, #12]
  401874:	bl	401398 <ask_password_agent_close@plt>
  401878:	bl	4013a8 <polkit_agent_close@plt>
  40187c:	bl	4013b8 <pager_close@plt>
  401880:	bl	4013c8 <mac_selinux_finish@plt>
  401884:	bl	401c34 <static_destruct>
  401888:	ldr	w8, [sp, #12]
  40188c:	cmp	w8, #0x0
  401890:	ldr	w8, [sp, #4]
  401894:	ldr	w9, [sp, #8]
  401898:	csel	w0, w8, w9, lt  // lt = tstop
  40189c:	ldp	x29, x30, [sp, #32]
  4018a0:	add	sp, sp, #0x30
  4018a4:	ret

00000000004018a8 <save_argc_argv>:
  4018a8:	sub	sp, sp, #0x10
  4018ac:	adrp	x8, 420000 <arg_sourcedir>
  4018b0:	add	x8, x8, #0x20
  4018b4:	adrp	x9, 420000 <arg_sourcedir>
  4018b8:	add	x9, x9, #0x28
  4018bc:	str	w0, [sp, #12]
  4018c0:	str	x1, [sp]
  4018c4:	ldr	w10, [sp, #12]
  4018c8:	str	w10, [x8]
  4018cc:	ldr	x8, [sp]
  4018d0:	str	x8, [x9]
  4018d4:	add	sp, sp, #0x10
  4018d8:	ret

00000000004018dc <run>:
  4018dc:	sub	sp, sp, #0xd0
  4018e0:	stp	x29, x30, [sp, #192]
  4018e4:	add	x29, sp, #0xc0
  4018e8:	adrp	x8, 403000 <move_file+0x91c>
  4018ec:	add	x8, x8, #0xa48
  4018f0:	add	x8, x8, #0x3
  4018f4:	adrp	x9, 403000 <move_file+0x91c>
  4018f8:	add	x9, x9, #0xa5f
  4018fc:	stur	w0, [x29, #-8]
  401900:	stur	x1, [x29, #-16]
  401904:	stur	xzr, [x29, #-40]
  401908:	stur	xzr, [x29, #-32]
  40190c:	stur	xzr, [x29, #-24]
  401910:	str	x8, [sp, #80]
  401914:	str	x9, [sp, #72]
  401918:	bl	4013d8 <log_setup_service@plt>
  40191c:	ldur	w10, [x29, #-8]
  401920:	cmp	w10, #0x3
  401924:	b.ne	401954 <run+0x78>  // b.any
  401928:	ldur	x8, [x29, #-16]
  40192c:	ldr	x8, [x8, #8]
  401930:	adrp	x9, 420000 <arg_sourcedir>
  401934:	add	x9, x9, #0x0
  401938:	str	x8, [x9]
  40193c:	ldur	x8, [x29, #-16]
  401940:	ldr	x8, [x8, #16]
  401944:	adrp	x9, 420000 <arg_sourcedir>
  401948:	add	x9, x9, #0x8
  40194c:	str	x8, [x9]
  401950:	b	4019f0 <run+0x114>
  401954:	ldur	w8, [x29, #-8]
  401958:	cmp	w8, #0x1
  40195c:	b.le	4019f0 <run+0x114>
  401960:	mov	w8, #0x3                   	// #3
  401964:	stur	w8, [x29, #-48]
  401968:	mov	w8, #0x16                  	// #22
  40196c:	movk	w8, #0x4000, lsl #16
  401970:	stur	w8, [x29, #-52]
  401974:	stur	wzr, [x29, #-56]
  401978:	ldur	w0, [x29, #-56]
  40197c:	bl	4013e8 <log_get_max_level_realm@plt>
  401980:	ldur	w8, [x29, #-48]
  401984:	and	w8, w8, #0x7
  401988:	cmp	w0, w8
  40198c:	b.lt	4019c0 <run+0xe4>  // b.tstop
  401990:	ldur	w8, [x29, #-56]
  401994:	ldur	w9, [x29, #-48]
  401998:	orr	w0, w9, w8, lsl #10
  40199c:	ldur	w1, [x29, #-52]
  4019a0:	ldr	x2, [sp, #80]
  4019a4:	mov	w3, #0x177                 	// #375
  4019a8:	ldr	x4, [sp, #72]
  4019ac:	adrp	x5, 403000 <move_file+0x91c>
  4019b0:	add	x5, x5, #0xa63
  4019b4:	bl	4013f8 <log_internal_realm@plt>
  4019b8:	str	w0, [sp, #68]
  4019bc:	b	4019d4 <run+0xf8>
  4019c0:	ldur	w0, [x29, #-52]
  4019c4:	bl	401408 <abs@plt>
  4019c8:	mov	w8, wzr
  4019cc:	subs	w8, w8, w0, uxtb
  4019d0:	str	w8, [sp, #68]
  4019d4:	ldr	w8, [sp, #68]
  4019d8:	stur	w8, [x29, #-60]
  4019dc:	ldur	w8, [x29, #-60]
  4019e0:	stur	w8, [x29, #-4]
  4019e4:	mov	w8, #0x1                   	// #1
  4019e8:	stur	w8, [x29, #-64]
  4019ec:	b	401c1c <run+0x340>
  4019f0:	bl	401d2c <parse_config>
  4019f4:	mov	w8, #0x7                   	// #7
  4019f8:	stur	w8, [x29, #-68]
  4019fc:	stur	wzr, [x29, #-72]
  401a00:	stur	wzr, [x29, #-76]
  401a04:	ldur	w8, [x29, #-76]
  401a08:	mov	w0, w8
  401a0c:	bl	4013e8 <log_get_max_level_realm@plt>
  401a10:	ldur	w8, [x29, #-68]
  401a14:	and	w8, w8, #0x7
  401a18:	cmp	w0, w8
  401a1c:	b.lt	401a80 <run+0x1a4>  // b.tstop
  401a20:	ldur	w8, [x29, #-76]
  401a24:	ldur	w9, [x29, #-68]
  401a28:	orr	w0, w9, w8, lsl #10
  401a2c:	ldur	w1, [x29, #-72]
  401a30:	adrp	x10, 420000 <arg_sourcedir>
  401a34:	add	x10, x10, #0x10
  401a38:	ldr	w8, [x10]
  401a3c:	str	w0, [sp, #64]
  401a40:	mov	w0, w8
  401a44:	str	w1, [sp, #60]
  401a48:	bl	401d74 <pstore_storage_to_string>
  401a4c:	ldr	w8, [sp, #64]
  401a50:	str	x0, [sp, #48]
  401a54:	mov	w0, w8
  401a58:	ldr	w1, [sp, #60]
  401a5c:	ldr	x2, [sp, #80]
  401a60:	mov	w3, #0x17c                 	// #380
  401a64:	ldr	x4, [sp, #72]
  401a68:	adrp	x5, 403000 <move_file+0x91c>
  401a6c:	add	x5, x5, #0xa8d
  401a70:	ldr	x6, [sp, #48]
  401a74:	bl	4013f8 <log_internal_realm@plt>
  401a78:	str	w0, [sp, #44]
  401a7c:	b	401a94 <run+0x1b8>
  401a80:	ldur	w0, [x29, #-72]
  401a84:	bl	401408 <abs@plt>
  401a88:	mov	w8, wzr
  401a8c:	subs	w8, w8, w0, uxtb
  401a90:	str	w8, [sp, #44]
  401a94:	ldr	w8, [sp, #44]
  401a98:	stur	w8, [x29, #-80]
  401a9c:	mov	w8, #0x7                   	// #7
  401aa0:	stur	w8, [x29, #-84]
  401aa4:	stur	wzr, [x29, #-88]
  401aa8:	stur	wzr, [x29, #-92]
  401aac:	ldur	w0, [x29, #-92]
  401ab0:	bl	4013e8 <log_get_max_level_realm@plt>
  401ab4:	ldur	w8, [x29, #-84]
  401ab8:	and	w8, w8, #0x7
  401abc:	cmp	w0, w8
  401ac0:	b.lt	401b28 <run+0x24c>  // b.tstop
  401ac4:	ldur	w8, [x29, #-92]
  401ac8:	ldur	w9, [x29, #-84]
  401acc:	orr	w0, w9, w8, lsl #10
  401ad0:	ldur	w1, [x29, #-88]
  401ad4:	adrp	x10, 420000 <arg_sourcedir>
  401ad8:	add	x10, x10, #0x14
  401adc:	ldrb	w8, [x10]
  401ae0:	and	w8, w8, #0x1
  401ae4:	str	w0, [sp, #40]
  401ae8:	mov	w0, w8
  401aec:	str	w1, [sp, #36]
  401af0:	bl	401dd0 <yes_no>
  401af4:	ldr	w8, [sp, #40]
  401af8:	str	x0, [sp, #24]
  401afc:	mov	w0, w8
  401b00:	ldr	w1, [sp, #36]
  401b04:	ldr	x2, [sp, #80]
  401b08:	mov	w3, #0x17d                 	// #381
  401b0c:	ldr	x4, [sp, #72]
  401b10:	adrp	x5, 403000 <move_file+0x91c>
  401b14:	add	x5, x5, #0xaa3
  401b18:	ldr	x6, [sp, #24]
  401b1c:	bl	4013f8 <log_internal_realm@plt>
  401b20:	str	w0, [sp, #20]
  401b24:	b	401b3c <run+0x260>
  401b28:	ldur	w0, [x29, #-88]
  401b2c:	bl	401408 <abs@plt>
  401b30:	mov	w8, wzr
  401b34:	subs	w8, w8, w0, uxtb
  401b38:	str	w8, [sp, #20]
  401b3c:	ldr	w8, [sp, #20]
  401b40:	str	w8, [sp, #96]
  401b44:	adrp	x9, 420000 <arg_sourcedir>
  401b48:	add	x9, x9, #0x10
  401b4c:	ldr	w8, [x9]
  401b50:	cbnz	w8, 401b64 <run+0x288>
  401b54:	stur	wzr, [x29, #-4]
  401b58:	mov	w8, #0x1                   	// #1
  401b5c:	stur	w8, [x29, #-64]
  401b60:	b	401c1c <run+0x340>
  401b64:	adrp	x8, 420000 <arg_sourcedir>
  401b68:	add	x8, x8, #0x0
  401b6c:	ldr	x1, [x8]
  401b70:	sub	x0, x29, #0x28
  401b74:	bl	401e00 <list_files>
  401b78:	stur	w0, [x29, #-44]
  401b7c:	ldur	w9, [x29, #-44]
  401b80:	cmp	w9, #0x0
  401b84:	cset	w9, ge  // ge = tcont
  401b88:	tbnz	w9, #0, 401ba0 <run+0x2c4>
  401b8c:	ldur	w8, [x29, #-44]
  401b90:	stur	w8, [x29, #-4]
  401b94:	mov	w8, #0x1                   	// #1
  401b98:	stur	w8, [x29, #-64]
  401b9c:	b	401c1c <run+0x340>
  401ba0:	sub	x0, x29, #0x28
  401ba4:	ldur	x8, [x29, #-40]
  401ba8:	ldur	x1, [x29, #-32]
  401bac:	str	x0, [sp, #8]
  401bb0:	mov	x0, x8
  401bb4:	mov	x2, #0x130                 	// #304
  401bb8:	adrp	x3, 402000 <list_files+0x200>
  401bbc:	add	x3, x3, #0x2c4
  401bc0:	bl	402218 <qsort_safe>
  401bc4:	ldr	x0, [sp, #8]
  401bc8:	bl	402308 <process_dmesg_files>
  401bcc:	str	xzr, [sp, #88]
  401bd0:	ldr	x8, [sp, #88]
  401bd4:	ldur	x9, [x29, #-32]
  401bd8:	cmp	x8, x9
  401bdc:	b.cs	401c10 <run+0x334>  // b.hs, b.nlast
  401be0:	ldur	x8, [x29, #-40]
  401be4:	ldr	x9, [sp, #88]
  401be8:	mov	x10, #0x130                 	// #304
  401bec:	mul	x9, x10, x9
  401bf0:	add	x0, x8, x9
  401bf4:	mov	x8, xzr
  401bf8:	mov	x1, x8
  401bfc:	bl	4026e4 <move_file>
  401c00:	ldr	x8, [sp, #88]
  401c04:	add	x8, x8, #0x1
  401c08:	str	x8, [sp, #88]
  401c0c:	b	401bd0 <run+0x2f4>
  401c10:	stur	wzr, [x29, #-4]
  401c14:	mov	w8, #0x1                   	// #1
  401c18:	stur	w8, [x29, #-64]
  401c1c:	sub	x0, x29, #0x28
  401c20:	bl	401cb4 <pstore_entries_reset>
  401c24:	ldur	w0, [x29, #-4]
  401c28:	ldp	x29, x30, [sp, #192]
  401c2c:	add	sp, sp, #0xd0
  401c30:	ret

0000000000401c34 <static_destruct>:
  401c34:	sub	sp, sp, #0x20
  401c38:	stp	x29, x30, [sp, #16]
  401c3c:	add	x29, sp, #0x10
  401c40:	adrp	x8, 41f000 <__FRAME_END__+0x1ae90>
  401c44:	ldr	x8, [x8, #3672]
  401c48:	str	x8, [sp]
  401c4c:	cbnz	x8, 401c54 <static_destruct+0x20>
  401c50:	b	401ca8 <static_destruct+0x74>
  401c54:	ldr	x0, [sp]
  401c58:	mov	x1, #0x8                   	// #8
  401c5c:	bl	40396c <ALIGN_TO>
  401c60:	str	x0, [sp, #8]
  401c64:	ldr	x8, [sp, #8]
  401c68:	adrp	x9, 41f000 <__FRAME_END__+0x1ae90>
  401c6c:	ldr	x9, [x9, #3680]
  401c70:	cmp	x8, x9
  401c74:	b.cs	401ca8 <static_destruct+0x74>  // b.hs, b.nlast
  401c78:	ldr	x8, [sp, #8]
  401c7c:	ldr	x8, [x8, #8]
  401c80:	ldr	x9, [sp, #8]
  401c84:	ldr	x0, [x9]
  401c88:	blr	x8
  401c8c:	ldr	x8, [sp, #8]
  401c90:	add	x8, x8, #0x10
  401c94:	mov	x0, x8
  401c98:	mov	x1, #0x8                   	// #8
  401c9c:	bl	40396c <ALIGN_TO>
  401ca0:	str	x0, [sp, #8]
  401ca4:	b	401c64 <static_destruct+0x30>
  401ca8:	ldp	x29, x30, [sp, #16]
  401cac:	add	sp, sp, #0x20
  401cb0:	ret

0000000000401cb4 <pstore_entries_reset>:
  401cb4:	sub	sp, sp, #0x20
  401cb8:	stp	x29, x30, [sp, #16]
  401cbc:	add	x29, sp, #0x10
  401cc0:	str	x0, [sp, #8]
  401cc4:	str	xzr, [sp]
  401cc8:	ldr	x8, [sp]
  401ccc:	ldr	x9, [sp, #8]
  401cd0:	ldr	x9, [x9, #8]
  401cd4:	cmp	x8, x9
  401cd8:	b.cs	401d0c <pstore_entries_reset+0x58>  // b.hs, b.nlast
  401cdc:	ldr	x8, [sp, #8]
  401ce0:	ldr	x8, [x8]
  401ce4:	ldr	x9, [sp]
  401ce8:	mov	x10, #0x130                 	// #304
  401cec:	mul	x9, x10, x9
  401cf0:	add	x8, x8, x9
  401cf4:	ldr	x0, [x8, #288]
  401cf8:	bl	401418 <free@plt>
  401cfc:	ldr	x8, [sp]
  401d00:	add	x8, x8, #0x1
  401d04:	str	x8, [sp]
  401d08:	b	401cc8 <pstore_entries_reset+0x14>
  401d0c:	ldr	x8, [sp, #8]
  401d10:	ldr	x0, [x8]
  401d14:	bl	401418 <free@plt>
  401d18:	ldr	x8, [sp, #8]
  401d1c:	str	xzr, [x8, #8]
  401d20:	ldp	x29, x30, [sp, #16]
  401d24:	add	sp, sp, #0x20
  401d28:	ret

0000000000401d2c <parse_config>:
  401d2c:	stp	x29, x30, [sp, #-16]!
  401d30:	mov	x29, sp
  401d34:	adrp	x0, 403000 <move_file+0x91c>
  401d38:	add	x0, x0, #0xaf5
  401d3c:	adrp	x1, 403000 <move_file+0x91c>
  401d40:	add	x1, x1, #0xfc8
  401d44:	adrp	x2, 404000 <parse_config.items+0xb0>
  401d48:	add	x2, x2, #0x78
  401d4c:	adrp	x3, 401000 <_init-0x330>
  401d50:	add	x3, x3, #0x428
  401d54:	adrp	x4, 403000 <move_file+0x91c>
  401d58:	add	x4, x4, #0xf50
  401d5c:	mov	w5, #0x4                   	// #4
  401d60:	mov	x8, xzr
  401d64:	mov	x6, x8
  401d68:	bl	401438 <config_parse_many_nulstr@plt>
  401d6c:	ldp	x29, x30, [sp], #16
  401d70:	ret

0000000000401d74 <pstore_storage_to_string>:
  401d74:	sub	sp, sp, #0x10
  401d78:	str	w0, [sp, #4]
  401d7c:	ldr	w8, [sp, #4]
  401d80:	cmp	w8, #0x0
  401d84:	cset	w8, lt  // lt = tstop
  401d88:	tbnz	w8, #0, 401d98 <pstore_storage_to_string+0x24>
  401d8c:	ldr	w8, [sp, #4]
  401d90:	cmp	w8, #0x3
  401d94:	b.lt	401da4 <pstore_storage_to_string+0x30>  // b.tstop
  401d98:	mov	x8, xzr
  401d9c:	str	x8, [sp, #8]
  401da0:	b	401dc4 <pstore_storage_to_string+0x50>
  401da4:	ldrsw	x8, [sp, #4]
  401da8:	mov	x9, #0x8                   	// #8
  401dac:	mul	x8, x9, x8
  401db0:	adrp	x9, 404000 <parse_config.items+0xb0>
  401db4:	add	x9, x9, #0x60
  401db8:	add	x8, x9, x8
  401dbc:	ldr	x8, [x8]
  401dc0:	str	x8, [sp, #8]
  401dc4:	ldr	x0, [sp, #8]
  401dc8:	add	sp, sp, #0x10
  401dcc:	ret

0000000000401dd0 <yes_no>:
  401dd0:	sub	sp, sp, #0x10
  401dd4:	adrp	x8, 403000 <move_file+0x91c>
  401dd8:	add	x8, x8, #0xc21
  401ddc:	adrp	x9, 403000 <move_file+0x91c>
  401de0:	add	x9, x9, #0xc25
  401de4:	and	w10, w0, #0x1
  401de8:	strb	w10, [sp, #15]
  401dec:	ldrb	w10, [sp, #15]
  401df0:	tst	w10, #0x1
  401df4:	csel	x0, x8, x9, ne  // ne = any
  401df8:	add	sp, sp, #0x10
  401dfc:	ret

0000000000401e00 <list_files>:
  401e00:	stp	x29, x30, [sp, #-32]!
  401e04:	str	x28, [sp, #16]
  401e08:	mov	x29, sp
  401e0c:	sub	sp, sp, #0x1f0
  401e10:	mov	x8, xzr
  401e14:	adrp	x9, 403000 <move_file+0x91c>
  401e18:	add	x9, x9, #0xa48
  401e1c:	add	x9, x9, #0x3
  401e20:	adrp	x10, 403000 <move_file+0x91c>
  401e24:	add	x10, x10, #0xc28
  401e28:	stur	x0, [x29, #-16]
  401e2c:	stur	x1, [x29, #-24]
  401e30:	stur	x8, [x29, #-32]
  401e34:	ldur	x0, [x29, #-24]
  401e38:	str	x9, [sp, #48]
  401e3c:	str	x10, [sp, #40]
  401e40:	bl	401448 <opendir@plt>
  401e44:	stur	x0, [x29, #-32]
  401e48:	ldur	x8, [x29, #-32]
  401e4c:	cbnz	x8, 401ee4 <list_files+0xe4>
  401e50:	mov	w8, #0x3                   	// #3
  401e54:	stur	w8, [x29, #-48]
  401e58:	bl	401458 <__errno_location@plt>
  401e5c:	ldr	w8, [x0]
  401e60:	stur	w8, [x29, #-52]
  401e64:	stur	wzr, [x29, #-56]
  401e68:	ldur	w0, [x29, #-56]
  401e6c:	bl	4013e8 <log_get_max_level_realm@plt>
  401e70:	ldur	w8, [x29, #-48]
  401e74:	and	w8, w8, #0x7
  401e78:	cmp	w0, w8
  401e7c:	b.lt	401eb4 <list_files+0xb4>  // b.tstop
  401e80:	ldur	w8, [x29, #-56]
  401e84:	ldur	w9, [x29, #-48]
  401e88:	orr	w0, w9, w8, lsl #10
  401e8c:	ldur	w1, [x29, #-52]
  401e90:	ldur	x6, [x29, #-24]
  401e94:	ldr	x2, [sp, #48]
  401e98:	mov	w3, #0x14a                 	// #330
  401e9c:	ldr	x4, [sp, #40]
  401ea0:	adrp	x5, 403000 <move_file+0x91c>
  401ea4:	add	x5, x5, #0xc33
  401ea8:	bl	4013f8 <log_internal_realm@plt>
  401eac:	str	w0, [sp, #36]
  401eb0:	b	401ec8 <list_files+0xc8>
  401eb4:	ldur	w0, [x29, #-52]
  401eb8:	bl	401408 <abs@plt>
  401ebc:	mov	w8, wzr
  401ec0:	subs	w8, w8, w0, uxtb
  401ec4:	str	w8, [sp, #36]
  401ec8:	ldr	w8, [sp, #36]
  401ecc:	stur	w8, [x29, #-60]
  401ed0:	ldur	w8, [x29, #-60]
  401ed4:	stur	w8, [x29, #-4]
  401ed8:	mov	w8, #0x1                   	// #1
  401edc:	stur	w8, [x29, #-64]
  401ee0:	b	4021fc <list_files+0x3fc>
  401ee4:	bl	401458 <__errno_location@plt>
  401ee8:	str	wzr, [x0]
  401eec:	ldur	x0, [x29, #-32]
  401ef0:	bl	401468 <readdir64@plt>
  401ef4:	stur	x0, [x29, #-40]
  401ef8:	ldur	x8, [x29, #-40]
  401efc:	cbnz	x8, 401fac <list_files+0x1ac>
  401f00:	bl	401458 <__errno_location@plt>
  401f04:	ldr	w8, [x0]
  401f08:	cmp	w8, #0x0
  401f0c:	cset	w8, le
  401f10:	tbnz	w8, #0, 401fa8 <list_files+0x1a8>
  401f14:	mov	w8, #0x3                   	// #3
  401f18:	stur	w8, [x29, #-68]
  401f1c:	bl	401458 <__errno_location@plt>
  401f20:	ldr	w8, [x0]
  401f24:	stur	w8, [x29, #-72]
  401f28:	stur	wzr, [x29, #-76]
  401f2c:	ldur	w0, [x29, #-76]
  401f30:	bl	4013e8 <log_get_max_level_realm@plt>
  401f34:	ldur	w8, [x29, #-68]
  401f38:	and	w8, w8, #0x7
  401f3c:	cmp	w0, w8
  401f40:	b.lt	401f78 <list_files+0x178>  // b.tstop
  401f44:	ldur	w8, [x29, #-76]
  401f48:	ldur	w9, [x29, #-68]
  401f4c:	orr	w0, w9, w8, lsl #10
  401f50:	ldur	w1, [x29, #-72]
  401f54:	ldur	x6, [x29, #-24]
  401f58:	ldr	x2, [sp, #48]
  401f5c:	mov	w3, #0x14c                 	// #332
  401f60:	ldr	x4, [sp, #40]
  401f64:	adrp	x5, 403000 <move_file+0x91c>
  401f68:	add	x5, x5, #0xc4c
  401f6c:	bl	4013f8 <log_internal_realm@plt>
  401f70:	str	w0, [sp, #32]
  401f74:	b	401f8c <list_files+0x18c>
  401f78:	ldur	w0, [x29, #-72]
  401f7c:	bl	401408 <abs@plt>
  401f80:	mov	w8, wzr
  401f84:	subs	w8, w8, w0, uxtb
  401f88:	str	w8, [sp, #32]
  401f8c:	ldr	w8, [sp, #32]
  401f90:	stur	w8, [x29, #-80]
  401f94:	ldur	w8, [x29, #-80]
  401f98:	stur	w8, [x29, #-4]
  401f9c:	mov	w8, #0x1                   	// #1
  401fa0:	stur	w8, [x29, #-64]
  401fa4:	b	4021fc <list_files+0x3fc>
  401fa8:	b	4021f0 <list_files+0x3f0>
  401fac:	ldur	x8, [x29, #-40]
  401fb0:	add	x0, x8, #0x13
  401fb4:	bl	401478 <hidden_or_backup_file@plt>
  401fb8:	tbnz	w0, #0, 401fc0 <list_files+0x1c0>
  401fbc:	b	401fc4 <list_files+0x1c4>
  401fc0:	b	4021d8 <list_files+0x3d8>
  401fc4:	mov	x8, xzr
  401fc8:	stur	x8, [x29, #-88]
  401fcc:	ldur	x0, [x29, #-24]
  401fd0:	ldur	x8, [x29, #-40]
  401fd4:	add	x1, x8, #0x13
  401fd8:	mov	x8, #0xffffffffffffffff    	// #-1
  401fdc:	mov	x2, x8
  401fe0:	bl	401488 <path_join_internal@plt>
  401fe4:	stur	x0, [x29, #-88]
  401fe8:	ldur	x8, [x29, #-88]
  401fec:	cbnz	x8, 402018 <list_files+0x218>
  401ff0:	mov	w8, wzr
  401ff4:	mov	w0, w8
  401ff8:	ldr	x1, [sp, #48]
  401ffc:	mov	w2, #0x151                 	// #337
  402000:	ldr	x3, [sp, #40]
  402004:	bl	401498 <log_oom_internal@plt>
  402008:	stur	w0, [x29, #-4]
  40200c:	mov	w8, #0x1                   	// #1
  402010:	stur	w8, [x29, #-64]
  402014:	b	4021b0 <list_files+0x3b0>
  402018:	sub	x1, x29, #0x60
  40201c:	mov	x8, xzr
  402020:	stur	x8, [x29, #-96]
  402024:	ldur	x0, [x29, #-88]
  402028:	sub	x2, x29, #0x68
  40202c:	bl	403300 <read_full_file>
  402030:	stur	w0, [x29, #-44]
  402034:	ldur	w9, [x29, #-44]
  402038:	cmp	w9, #0x0
  40203c:	cset	w9, ge  // ge = tcont
  402040:	tbnz	w9, #0, 4020cc <list_files+0x2cc>
  402044:	mov	w8, #0x4                   	// #4
  402048:	stur	w8, [x29, #-108]
  40204c:	ldur	w8, [x29, #-44]
  402050:	stur	w8, [x29, #-112]
  402054:	stur	wzr, [x29, #-116]
  402058:	ldur	w0, [x29, #-116]
  40205c:	bl	4013e8 <log_get_max_level_realm@plt>
  402060:	ldur	w8, [x29, #-108]
  402064:	and	w8, w8, #0x7
  402068:	cmp	w0, w8
  40206c:	b.lt	4020a4 <list_files+0x2a4>  // b.tstop
  402070:	ldur	w8, [x29, #-116]
  402074:	ldur	w9, [x29, #-108]
  402078:	orr	w0, w9, w8, lsl #10
  40207c:	ldur	w1, [x29, #-112]
  402080:	ldur	x6, [x29, #-88]
  402084:	ldr	x2, [sp, #48]
  402088:	mov	w3, #0x159                 	// #345
  40208c:	ldr	x4, [sp, #40]
  402090:	adrp	x5, 403000 <move_file+0x91c>
  402094:	add	x5, x5, #0xc6d
  402098:	bl	4013f8 <log_internal_realm@plt>
  40209c:	str	w0, [sp, #28]
  4020a0:	b	4020b8 <list_files+0x2b8>
  4020a4:	ldur	w0, [x29, #-112]
  4020a8:	bl	401408 <abs@plt>
  4020ac:	mov	w8, wzr
  4020b0:	subs	w8, w8, w0, uxtb
  4020b4:	str	w8, [sp, #28]
  4020b8:	ldr	w8, [sp, #28]
  4020bc:	stur	w8, [x29, #-120]
  4020c0:	mov	w8, #0x4                   	// #4
  4020c4:	stur	w8, [x29, #-64]
  4020c8:	b	4021a8 <list_files+0x3a8>
  4020cc:	ldur	x0, [x29, #-16]
  4020d0:	ldur	x8, [x29, #-16]
  4020d4:	add	x1, x8, #0x10
  4020d8:	ldur	x8, [x29, #-16]
  4020dc:	ldr	x8, [x8, #8]
  4020e0:	add	x2, x8, #0x1
  4020e4:	mov	x3, #0x130                 	// #304
  4020e8:	bl	4014a8 <greedy_realloc@plt>
  4020ec:	cbnz	x0, 402118 <list_files+0x318>
  4020f0:	mov	w8, wzr
  4020f4:	mov	w0, w8
  4020f8:	ldr	x1, [sp, #48]
  4020fc:	mov	w2, #0x15e                 	// #350
  402100:	ldr	x3, [sp, #40]
  402104:	bl	401498 <log_oom_internal@plt>
  402108:	stur	w0, [x29, #-4]
  40210c:	mov	w8, #0x1                   	// #1
  402110:	stur	w8, [x29, #-64]
  402114:	b	4021a8 <list_files+0x3a8>
  402118:	ldur	x8, [x29, #-16]
  40211c:	ldr	x8, [x8]
  402120:	ldur	x9, [x29, #-16]
  402124:	ldr	x10, [x9, #8]
  402128:	add	x11, x10, #0x1
  40212c:	str	x11, [x9, #8]
  402130:	mov	x9, #0x130                 	// #304
  402134:	mul	x9, x9, x10
  402138:	add	x0, x8, x9
  40213c:	ldur	x1, [x29, #-40]
  402140:	add	x8, sp, #0x48
  402144:	str	x0, [sp, #16]
  402148:	mov	x0, x8
  40214c:	mov	x2, #0x118                 	// #280
  402150:	str	x8, [sp, #8]
  402154:	bl	4014b8 <memcpy@plt>
  402158:	mov	w12, #0x1                   	// #1
  40215c:	ldr	x8, [sp, #8]
  402160:	strb	w12, [x8, #280]
  402164:	mov	w12, #0x0                   	// #0
  402168:	strb	w12, [x8, #281]
  40216c:	ldur	x9, [x29, #-96]
  402170:	str	x9, [sp, #64]
  402174:	mov	x9, xzr
  402178:	stur	x9, [x29, #-96]
  40217c:	ldr	x9, [sp, #64]
  402180:	str	x9, [sp, #56]
  402184:	ldr	x9, [sp, #56]
  402188:	str	x9, [x8, #288]
  40218c:	ldur	x9, [x29, #-104]
  402190:	str	x9, [sp, #368]
  402194:	ldr	x0, [sp, #16]
  402198:	mov	x1, x8
  40219c:	mov	x2, #0x130                 	// #304
  4021a0:	bl	4014b8 <memcpy@plt>
  4021a4:	stur	wzr, [x29, #-64]
  4021a8:	sub	x0, x29, #0x60
  4021ac:	bl	4032d8 <freep>
  4021b0:	sub	x0, x29, #0x58
  4021b4:	bl	4032d8 <freep>
  4021b8:	ldur	w8, [x29, #-64]
  4021bc:	str	w8, [sp, #4]
  4021c0:	cbz	w8, 4021d8 <list_files+0x3d8>
  4021c4:	b	4021c8 <list_files+0x3c8>
  4021c8:	ldr	w8, [sp, #4]
  4021cc:	cmp	w8, #0x4
  4021d0:	b.eq	4021d8 <list_files+0x3d8>  // b.none
  4021d4:	b	4021fc <list_files+0x3fc>
  4021d8:	bl	401458 <__errno_location@plt>
  4021dc:	str	wzr, [x0]
  4021e0:	ldur	x0, [x29, #-32]
  4021e4:	bl	401468 <readdir64@plt>
  4021e8:	stur	x0, [x29, #-40]
  4021ec:	b	401ef8 <list_files+0xf8>
  4021f0:	stur	wzr, [x29, #-4]
  4021f4:	mov	w8, #0x1                   	// #1
  4021f8:	stur	w8, [x29, #-64]
  4021fc:	sub	x0, x29, #0x20
  402200:	bl	4032a4 <closedirp>
  402204:	ldur	w0, [x29, #-4]
  402208:	add	sp, sp, #0x1f0
  40220c:	ldr	x28, [sp, #16]
  402210:	ldp	x29, x30, [sp], #32
  402214:	ret

0000000000402218 <qsort_safe>:
  402218:	sub	sp, sp, #0x40
  40221c:	stp	x29, x30, [sp, #48]
  402220:	add	x29, sp, #0x30
  402224:	adrp	x8, 403000 <move_file+0x91c>
  402228:	add	x8, x8, #0xc97
  40222c:	add	x8, x8, #0x3
  402230:	stur	x0, [x29, #-8]
  402234:	stur	x1, [x29, #-16]
  402238:	str	x2, [sp, #24]
  40223c:	str	x3, [sp, #16]
  402240:	ldur	x9, [x29, #-16]
  402244:	cmp	x9, #0x1
  402248:	str	x8, [sp, #8]
  40224c:	b.hi	402254 <qsort_safe+0x3c>  // b.pmore
  402250:	b	4022b8 <qsort_safe+0xa0>
  402254:	ldur	x8, [x29, #-8]
  402258:	cmp	x8, #0x0
  40225c:	cset	w9, ne  // ne = any
  402260:	mov	w10, #0x1                   	// #1
  402264:	eor	w9, w9, #0x1
  402268:	eor	w9, w9, w10
  40226c:	eor	w9, w9, w10
  402270:	and	w9, w9, #0x1
  402274:	mov	w0, w9
  402278:	sxtw	x8, w0
  40227c:	cbz	x8, 4022a4 <qsort_safe+0x8c>
  402280:	mov	w8, wzr
  402284:	mov	w0, w8
  402288:	adrp	x1, 403000 <move_file+0x91c>
  40228c:	add	x1, x1, #0xc92
  402290:	ldr	x2, [sp, #8]
  402294:	mov	w3, #0x2e                  	// #46
  402298:	adrp	x4, 403000 <move_file+0x91c>
  40229c:	add	x4, x4, #0xcb0
  4022a0:	bl	4014c8 <log_assert_failed_realm@plt>
  4022a4:	ldur	x0, [x29, #-8]
  4022a8:	ldur	x1, [x29, #-16]
  4022ac:	ldr	x2, [sp, #24]
  4022b0:	ldr	x3, [sp, #16]
  4022b4:	bl	4014d8 <qsort@plt>
  4022b8:	ldp	x29, x30, [sp, #48]
  4022bc:	add	sp, sp, #0x40
  4022c0:	ret

00000000004022c4 <compare_pstore_entries>:
  4022c4:	sub	sp, sp, #0x30
  4022c8:	stp	x29, x30, [sp, #32]
  4022cc:	add	x29, sp, #0x20
  4022d0:	stur	x0, [x29, #-8]
  4022d4:	str	x1, [sp, #16]
  4022d8:	ldur	x8, [x29, #-8]
  4022dc:	str	x8, [sp, #8]
  4022e0:	ldr	x8, [sp, #16]
  4022e4:	str	x8, [sp]
  4022e8:	ldr	x8, [sp, #8]
  4022ec:	add	x0, x8, #0x13
  4022f0:	ldr	x8, [sp]
  4022f4:	add	x1, x8, #0x13
  4022f8:	bl	4014e8 <strcmp@plt>
  4022fc:	ldp	x29, x30, [sp, #32]
  402300:	add	sp, sp, #0x30
  402304:	ret

0000000000402308 <process_dmesg_files>:
  402308:	sub	sp, sp, #0xb0
  40230c:	stp	x29, x30, [sp, #160]
  402310:	add	x29, sp, #0xa0
  402314:	mov	x8, xzr
  402318:	mov	w9, #0x0                   	// #0
  40231c:	adrp	x10, 403000 <move_file+0x91c>
  402320:	add	x10, x10, #0xa48
  402324:	add	x10, x10, #0x3
  402328:	stur	x0, [x29, #-8]
  40232c:	stur	x8, [x29, #-16]
  402330:	stur	x8, [x29, #-24]
  402334:	stur	xzr, [x29, #-32]
  402338:	stur	xzr, [x29, #-40]
  40233c:	sturb	w9, [x29, #-41]
  402340:	ldur	x8, [x29, #-8]
  402344:	ldr	x8, [x8, #8]
  402348:	stur	x8, [x29, #-64]
  40234c:	str	x10, [sp, #24]
  402350:	ldur	x8, [x29, #-64]
  402354:	cmp	x8, #0x0
  402358:	cset	w9, ls  // ls = plast
  40235c:	tbnz	w9, #0, 4026ac <process_dmesg_files+0x3a4>
  402360:	mov	w8, #0x0                   	// #0
  402364:	sturb	w8, [x29, #-65]
  402368:	mov	x9, xzr
  40236c:	str	x9, [sp, #80]
  402370:	ldur	x9, [x29, #-8]
  402374:	ldr	x9, [x9]
  402378:	ldur	x10, [x29, #-64]
  40237c:	subs	x10, x10, #0x1
  402380:	mov	x11, #0x130                 	// #304
  402384:	mul	x10, x11, x10
  402388:	add	x9, x9, x10
  40238c:	stur	x9, [x29, #-56]
  402390:	ldur	x9, [x29, #-56]
  402394:	ldrb	w8, [x9, #281]
  402398:	tbnz	w8, #0, 4023a0 <process_dmesg_files+0x98>
  40239c:	b	4023ac <process_dmesg_files+0xa4>
  4023a0:	mov	w8, #0x4                   	// #4
  4023a4:	str	w8, [sp, #60]
  4023a8:	b	402674 <process_dmesg_files+0x36c>
  4023ac:	ldur	x8, [x29, #-56]
  4023b0:	add	x0, x8, #0x13
  4023b4:	adrp	x1, 403000 <move_file+0x91c>
  4023b8:	add	x1, x1, #0xce7
  4023bc:	bl	40333c <startswith>
  4023c0:	cbnz	x0, 4023d0 <process_dmesg_files+0xc8>
  4023c4:	mov	w8, #0x4                   	// #4
  4023c8:	str	w8, [sp, #60]
  4023cc:	b	402674 <process_dmesg_files+0x36c>
  4023d0:	ldur	x8, [x29, #-56]
  4023d4:	add	x0, x8, #0x13
  4023d8:	adrp	x1, 403000 <move_file+0x91c>
  4023dc:	add	x1, x1, #0xcee
  4023e0:	bl	4014f8 <endswith@plt>
  4023e4:	cbz	x0, 4023f0 <process_dmesg_files+0xe8>
  4023e8:	mov	w8, #0x1                   	// #1
  4023ec:	sturb	w8, [x29, #-65]
  4023f0:	ldur	x8, [x29, #-56]
  4023f4:	add	x0, x8, #0x13
  4023f8:	mov	w1, #0x2d                  	// #45
  4023fc:	bl	401508 <strrchr@plt>
  402400:	str	x0, [sp, #72]
  402404:	ldr	x8, [sp, #72]
  402408:	cbnz	x8, 402414 <process_dmesg_files+0x10c>
  40240c:	mov	w8, #0x1                   	// #1
  402410:	sturb	w8, [x29, #-65]
  402414:	ldurb	w8, [x29, #-65]
  402418:	tbnz	w8, #0, 402420 <process_dmesg_files+0x118>
  40241c:	b	40243c <process_dmesg_files+0x134>
  402420:	ldur	x0, [x29, #-56]
  402424:	mov	x8, xzr
  402428:	mov	x1, x8
  40242c:	bl	4026e4 <move_file>
  402430:	mov	w9, #0x4                   	// #4
  402434:	str	w9, [sp, #60]
  402438:	b	402674 <process_dmesg_files+0x36c>
  40243c:	ldr	x8, [sp, #72]
  402440:	add	x8, x8, #0x1
  402444:	str	x8, [sp, #72]
  402448:	ldr	x0, [sp, #72]
  40244c:	bl	401518 <strlen@plt>
  402450:	str	x0, [sp, #64]
  402454:	ldr	x8, [sp, #64]
  402458:	cmp	x8, #0x6
  40245c:	b.ls	4024a8 <process_dmesg_files+0x1a0>  // b.plast
  402460:	ldr	x0, [sp, #72]
  402464:	ldr	x8, [sp, #64]
  402468:	subs	x1, x8, #0x6
  40246c:	bl	401528 <memdup_suffix0@plt>
  402470:	str	x0, [sp, #80]
  402474:	ldr	x8, [sp, #80]
  402478:	cbnz	x8, 4024a4 <process_dmesg_files+0x19c>
  40247c:	mov	w8, wzr
  402480:	mov	w0, w8
  402484:	ldr	x1, [sp, #24]
  402488:	mov	w2, #0x116                 	// #278
  40248c:	adrp	x3, 403000 <move_file+0x91c>
  402490:	add	x3, x3, #0xcf5
  402494:	bl	401498 <log_oom_internal@plt>
  402498:	mov	w8, #0x1                   	// #1
  40249c:	str	w8, [sp, #60]
  4024a0:	b	402674 <process_dmesg_files+0x36c>
  4024a4:	b	4024b4 <process_dmesg_files+0x1ac>
  4024a8:	ldr	x0, [sp, #80]
  4024ac:	bl	40339c <mfree>
  4024b0:	str	x0, [sp, #80]
  4024b4:	ldur	x0, [x29, #-56]
  4024b8:	ldr	x1, [sp, #80]
  4024bc:	bl	4026e4 <move_file>
  4024c0:	ldurb	w8, [x29, #-41]
  4024c4:	tbnz	w8, #0, 4024cc <process_dmesg_files+0x1c4>
  4024c8:	b	4024d8 <process_dmesg_files+0x1d0>
  4024cc:	mov	w8, #0x4                   	// #4
  4024d0:	str	w8, [sp, #60]
  4024d4:	b	402674 <process_dmesg_files+0x36c>
  4024d8:	ldr	x0, [sp, #80]
  4024dc:	ldur	x1, [x29, #-24]
  4024e0:	bl	4033cc <streq_ptr>
  4024e4:	tbnz	w0, #0, 402524 <process_dmesg_files+0x21c>
  4024e8:	ldur	x0, [x29, #-16]
  4024ec:	ldur	x1, [x29, #-32]
  4024f0:	ldur	x2, [x29, #-24]
  4024f4:	bl	403404 <write_dmesg>
  4024f8:	mov	x8, xzr
  4024fc:	stur	xzr, [x29, #-32]
  402500:	ldur	x9, [x29, #-24]
  402504:	mov	x0, x9
  402508:	str	x8, [sp, #16]
  40250c:	bl	401418 <free@plt>
  402510:	ldr	x8, [sp, #80]
  402514:	stur	x8, [x29, #-24]
  402518:	ldr	x8, [sp, #16]
  40251c:	str	x8, [sp, #80]
  402520:	str	wzr, [sp, #56]
  402524:	ldur	x8, [x29, #-56]
  402528:	add	x0, x8, #0x13
  40252c:	bl	401518 <strlen@plt>
  402530:	add	x8, x0, #0x2
  402534:	ldur	x9, [x29, #-56]
  402538:	ldr	x9, [x9, #296]
  40253c:	add	x8, x8, x9
  402540:	mov	x3, #0x1                   	// #1
  402544:	add	x8, x8, #0x1
  402548:	str	x8, [sp, #48]
  40254c:	ldur	x8, [x29, #-32]
  402550:	ldr	x9, [sp, #48]
  402554:	add	x2, x8, x9
  402558:	sub	x0, x29, #0x10
  40255c:	sub	x1, x29, #0x28
  402560:	bl	4014a8 <greedy_realloc@plt>
  402564:	cbnz	x0, 4025f8 <process_dmesg_files+0x2f0>
  402568:	mov	w8, #0x4                   	// #4
  40256c:	str	w8, [sp, #44]
  402570:	mov	w8, #0xc                   	// #12
  402574:	str	w8, [sp, #40]
  402578:	str	wzr, [sp, #36]
  40257c:	ldr	w0, [sp, #36]
  402580:	bl	4013e8 <log_get_max_level_realm@plt>
  402584:	ldr	w8, [sp, #44]
  402588:	and	w8, w8, #0x7
  40258c:	cmp	w0, w8
  402590:	b.lt	4025c8 <process_dmesg_files+0x2c0>  // b.tstop
  402594:	ldr	w8, [sp, #36]
  402598:	ldr	w9, [sp, #44]
  40259c:	orr	w0, w9, w8, lsl #10
  4025a0:	ldr	w1, [sp, #40]
  4025a4:	ldr	x2, [sp, #24]
  4025a8:	mov	w3, #0x131                 	// #305
  4025ac:	adrp	x4, 403000 <move_file+0x91c>
  4025b0:	add	x4, x4, #0xcf5
  4025b4:	adrp	x5, 403000 <move_file+0x91c>
  4025b8:	add	x5, x5, #0xd09
  4025bc:	bl	4013f8 <log_internal_realm@plt>
  4025c0:	str	w0, [sp, #12]
  4025c4:	b	4025dc <process_dmesg_files+0x2d4>
  4025c8:	ldr	w0, [sp, #40]
  4025cc:	bl	401408 <abs@plt>
  4025d0:	mov	w8, wzr
  4025d4:	subs	w8, w8, w0, uxtb
  4025d8:	str	w8, [sp, #12]
  4025dc:	ldr	w8, [sp, #12]
  4025e0:	str	w8, [sp, #32]
  4025e4:	mov	w8, #0x1                   	// #1
  4025e8:	sturb	w8, [x29, #-41]
  4025ec:	mov	w8, #0x4                   	// #4
  4025f0:	str	w8, [sp, #60]
  4025f4:	b	402674 <process_dmesg_files+0x36c>
  4025f8:	ldur	x8, [x29, #-16]
  4025fc:	ldur	x9, [x29, #-32]
  402600:	add	x0, x8, x9
  402604:	ldur	x8, [x29, #-56]
  402608:	add	x2, x8, #0x13
  40260c:	adrp	x1, 403000 <move_file+0x91c>
  402610:	add	x1, x1, #0xd28
  402614:	bl	401538 <sprintf@plt>
  402618:	ldur	x8, [x29, #-32]
  40261c:	add	x8, x8, w0, sxtw
  402620:	stur	x8, [x29, #-32]
  402624:	ldur	x8, [x29, #-56]
  402628:	ldr	x8, [x8, #288]
  40262c:	cbz	x8, 402664 <process_dmesg_files+0x35c>
  402630:	ldur	x8, [x29, #-16]
  402634:	ldur	x9, [x29, #-32]
  402638:	add	x0, x8, x9
  40263c:	ldur	x8, [x29, #-56]
  402640:	ldr	x1, [x8, #288]
  402644:	ldur	x8, [x29, #-56]
  402648:	ldr	x2, [x8, #296]
  40264c:	bl	4014b8 <memcpy@plt>
  402650:	ldur	x8, [x29, #-56]
  402654:	ldr	x8, [x8, #296]
  402658:	ldur	x9, [x29, #-32]
  40265c:	add	x8, x9, x8
  402660:	stur	x8, [x29, #-32]
  402664:	ldr	x0, [sp, #80]
  402668:	bl	40339c <mfree>
  40266c:	str	x0, [sp, #80]
  402670:	str	wzr, [sp, #60]
  402674:	add	x0, sp, #0x50
  402678:	bl	4032d8 <freep>
  40267c:	ldr	w8, [sp, #60]
  402680:	str	w8, [sp, #8]
  402684:	cbz	w8, 40269c <process_dmesg_files+0x394>
  402688:	b	40268c <process_dmesg_files+0x384>
  40268c:	ldr	w8, [sp, #8]
  402690:	cmp	w8, #0x4
  402694:	b.eq	40269c <process_dmesg_files+0x394>  // b.none
  402698:	b	4026c8 <process_dmesg_files+0x3c0>
  40269c:	ldur	x8, [x29, #-64]
  4026a0:	subs	x8, x8, #0x1
  4026a4:	stur	x8, [x29, #-64]
  4026a8:	b	402350 <process_dmesg_files+0x48>
  4026ac:	ldurb	w8, [x29, #-41]
  4026b0:	tbnz	w8, #0, 4026c4 <process_dmesg_files+0x3bc>
  4026b4:	ldur	x0, [x29, #-16]
  4026b8:	ldur	x1, [x29, #-32]
  4026bc:	ldur	x2, [x29, #-24]
  4026c0:	bl	403404 <write_dmesg>
  4026c4:	str	wzr, [sp, #60]
  4026c8:	sub	x0, x29, #0x18
  4026cc:	bl	4032d8 <freep>
  4026d0:	sub	x0, x29, #0x10
  4026d4:	bl	4032d8 <freep>
  4026d8:	ldp	x29, x30, [sp, #160]
  4026dc:	add	sp, sp, #0xb0
  4026e0:	ret

00000000004026e4 <move_file>:
  4026e4:	stp	x29, x30, [sp, #-32]!
  4026e8:	stp	x28, x19, [sp, #16]
  4026ec:	mov	x29, sp
  4026f0:	sub	sp, sp, #0x1b0
  4026f4:	mov	x19, sp
  4026f8:	mov	x8, xzr
  4026fc:	adrp	x9, 403000 <move_file+0x91c>
  402700:	add	x9, x9, #0xa48
  402704:	add	x9, x9, #0x3
  402708:	adrp	x10, 403000 <move_file+0x91c>
  40270c:	add	x10, x10, #0xe19
  402710:	adrp	x11, 403000 <move_file+0x91c>
  402714:	add	x11, x11, #0xe59
  402718:	stur	x0, [x29, #-16]
  40271c:	stur	x1, [x29, #-24]
  402720:	stur	x8, [x29, #-32]
  402724:	stur	x8, [x29, #-40]
  402728:	stur	x8, [x29, #-48]
  40272c:	stur	wzr, [x29, #-100]
  402730:	ldur	x8, [x29, #-16]
  402734:	ldrb	w12, [x8, #281]
  402738:	str	x9, [x19, #72]
  40273c:	str	x10, [x19, #64]
  402740:	str	x11, [x19, #56]
  402744:	tbnz	w12, #0, 40274c <move_file+0x68>
  402748:	b	40275c <move_file+0x78>
  40274c:	stur	wzr, [x29, #-4]
  402750:	mov	w8, #0x1                   	// #1
  402754:	stur	w8, [x29, #-108]
  402758:	b	402fe0 <move_file+0x8fc>
  40275c:	adrp	x8, 420000 <arg_sourcedir>
  402760:	add	x8, x8, #0x0
  402764:	ldr	x0, [x8]
  402768:	ldur	x8, [x29, #-16]
  40276c:	add	x1, x8, #0x13
  402770:	mov	x8, #0xffffffffffffffff    	// #-1
  402774:	mov	x2, x8
  402778:	bl	401488 <path_join_internal@plt>
  40277c:	stur	x0, [x29, #-32]
  402780:	ldur	x8, [x29, #-32]
  402784:	cbnz	x8, 4027b0 <move_file+0xcc>
  402788:	mov	w8, wzr
  40278c:	mov	w0, w8
  402790:	ldr	x1, [x19, #72]
  402794:	mov	w2, #0x81                  	// #129
  402798:	ldr	x3, [x19, #64]
  40279c:	bl	401498 <log_oom_internal@plt>
  4027a0:	stur	w0, [x29, #-4]
  4027a4:	mov	w8, #0x1                   	// #1
  4027a8:	stur	w8, [x29, #-108]
  4027ac:	b	402fe0 <move_file+0x8fc>
  4027b0:	adrp	x8, 420000 <arg_sourcedir>
  4027b4:	add	x8, x8, #0x8
  4027b8:	ldr	x0, [x8]
  4027bc:	ldur	x1, [x29, #-24]
  4027c0:	ldur	x8, [x29, #-16]
  4027c4:	add	x2, x8, #0x13
  4027c8:	mov	x8, #0xffffffffffffffff    	// #-1
  4027cc:	mov	x3, x8
  4027d0:	bl	401488 <path_join_internal@plt>
  4027d4:	stur	x0, [x29, #-40]
  4027d8:	ldur	x8, [x29, #-40]
  4027dc:	cbnz	x8, 402808 <move_file+0x124>
  4027e0:	mov	w8, wzr
  4027e4:	mov	w0, w8
  4027e8:	ldr	x1, [x19, #72]
  4027ec:	mov	w2, #0x85                  	// #133
  4027f0:	ldr	x3, [x19, #64]
  4027f4:	bl	401498 <log_oom_internal@plt>
  4027f8:	stur	w0, [x29, #-4]
  4027fc:	mov	w8, #0x1                   	// #1
  402800:	stur	w8, [x29, #-108]
  402804:	b	402fe0 <move_file+0x8fc>
  402808:	adrp	x8, 420000 <arg_sourcedir>
  40280c:	add	x8, x8, #0x10
  402810:	ldr	w9, [x8]
  402814:	cmp	w9, #0x1
  402818:	b.ne	402a38 <move_file+0x354>  // b.any
  40281c:	sub	x8, x29, #0x80
  402820:	adrp	x9, 403000 <move_file+0x91c>
  402824:	add	x9, x9, #0xe23
  402828:	stur	x9, [x29, #-128]
  40282c:	ldur	x9, [x29, #-40]
  402830:	str	x9, [x8, #8]
  402834:	stur	xzr, [x29, #-152]
  402838:	stur	xzr, [x29, #-160]
  40283c:	ldur	x8, [x29, #-160]
  402840:	mov	w9, #0x0                   	// #0
  402844:	cmp	x8, #0x2
  402848:	str	w9, [x19, #52]
  40284c:	b.cs	402874 <move_file+0x190>  // b.hs, b.nlast
  402850:	ldur	x8, [x29, #-160]
  402854:	mov	x9, #0x8                   	// #8
  402858:	mul	x8, x9, x8
  40285c:	sub	x9, x29, #0x80
  402860:	add	x8, x9, x8
  402864:	ldr	x8, [x8]
  402868:	cmp	x8, #0x0
  40286c:	cset	w10, ne  // ne = any
  402870:	str	w10, [x19, #52]
  402874:	ldr	w8, [x19, #52]
  402878:	tbnz	w8, #0, 402880 <move_file+0x19c>
  40287c:	b	4028b8 <move_file+0x1d4>
  402880:	ldur	x8, [x29, #-160]
  402884:	mov	x9, #0x8                   	// #8
  402888:	mul	x8, x9, x8
  40288c:	sub	x9, x29, #0x80
  402890:	add	x8, x9, x8
  402894:	ldr	x0, [x8]
  402898:	bl	401518 <strlen@plt>
  40289c:	ldur	x8, [x29, #-152]
  4028a0:	add	x8, x8, x0
  4028a4:	stur	x8, [x29, #-152]
  4028a8:	ldur	x8, [x29, #-160]
  4028ac:	add	x8, x8, #0x1
  4028b0:	stur	x8, [x29, #-160]
  4028b4:	b	40283c <move_file+0x158>
  4028b8:	ldur	x8, [x29, #-152]
  4028bc:	add	x8, x8, #0x1
  4028c0:	stur	x8, [x29, #-168]
  4028c4:	ldur	x1, [x29, #-168]
  4028c8:	mov	x0, #0x1                   	// #1
  4028cc:	bl	4038ac <size_multiply_overflow>
  4028d0:	mov	w8, #0x1                   	// #1
  4028d4:	eor	w9, w0, #0x1
  4028d8:	eor	w9, w9, w8
  4028dc:	eor	w9, w9, w8
  4028e0:	eor	w8, w9, w8
  4028e4:	and	w8, w8, #0x1
  4028e8:	mov	w1, w8
  4028ec:	sxtw	x10, w1
  4028f0:	cbz	x10, 402914 <move_file+0x230>
  4028f4:	mov	w8, wzr
  4028f8:	mov	w0, w8
  4028fc:	adrp	x1, 403000 <move_file+0x91c>
  402900:	add	x1, x1, #0xe2e
  402904:	ldr	x2, [x19, #72]
  402908:	mov	w3, #0x88                  	// #136
  40290c:	ldr	x4, [x19, #56]
  402910:	bl	4014c8 <log_assert_failed_realm@plt>
  402914:	ldur	x8, [x29, #-168]
  402918:	mov	x9, #0x1                   	// #1
  40291c:	mul	x8, x9, x8
  402920:	cmp	x8, #0x400, lsl #12
  402924:	cset	w10, ls  // ls = plast
  402928:	mov	w11, #0x1                   	// #1
  40292c:	eor	w10, w10, #0x1
  402930:	eor	w10, w10, w11
  402934:	eor	w10, w10, w11
  402938:	and	w10, w10, #0x1
  40293c:	mov	w0, w10
  402940:	sxtw	x8, w0
  402944:	cbz	x8, 402968 <move_file+0x284>
  402948:	mov	w8, wzr
  40294c:	mov	w0, w8
  402950:	adrp	x1, 403000 <move_file+0x91c>
  402954:	add	x1, x1, #0xe84
  402958:	ldr	x2, [x19, #72]
  40295c:	mov	w3, #0x88                  	// #136
  402960:	ldr	x4, [x19, #56]
  402964:	bl	4014c8 <log_assert_failed_realm@plt>
  402968:	ldur	x8, [x29, #-168]
  40296c:	mov	x9, #0x1                   	// #1
  402970:	mul	x8, x9, x8
  402974:	mul	x8, x8, x9
  402978:	add	x8, x8, #0xf
  40297c:	and	x8, x8, #0xfffffffffffffff0
  402980:	mov	x9, sp
  402984:	subs	x8, x9, x8
  402988:	mov	sp, x8
  40298c:	stur	x8, [x29, #-176]
  402990:	ldur	x8, [x29, #-176]
  402994:	stur	x8, [x29, #-136]
  402998:	stur	x8, [x29, #-144]
  40299c:	stur	xzr, [x29, #-160]
  4029a0:	ldur	x8, [x29, #-160]
  4029a4:	mov	w9, #0x0                   	// #0
  4029a8:	cmp	x8, #0x2
  4029ac:	str	w9, [x19, #48]
  4029b0:	b.cs	4029d8 <move_file+0x2f4>  // b.hs, b.nlast
  4029b4:	ldur	x8, [x29, #-160]
  4029b8:	mov	x9, #0x8                   	// #8
  4029bc:	mul	x8, x9, x8
  4029c0:	sub	x9, x29, #0x80
  4029c4:	add	x8, x9, x8
  4029c8:	ldr	x8, [x8]
  4029cc:	cmp	x8, #0x0
  4029d0:	cset	w10, ne  // ne = any
  4029d4:	str	w10, [x19, #48]
  4029d8:	ldr	w8, [x19, #48]
  4029dc:	tbnz	w8, #0, 4029e4 <move_file+0x300>
  4029e0:	b	402a18 <move_file+0x334>
  4029e4:	ldur	x0, [x29, #-144]
  4029e8:	ldur	x8, [x29, #-160]
  4029ec:	mov	x9, #0x8                   	// #8
  4029f0:	mul	x8, x9, x8
  4029f4:	sub	x9, x29, #0x80
  4029f8:	add	x8, x9, x8
  4029fc:	ldr	x1, [x8]
  402a00:	bl	401548 <stpcpy@plt>
  402a04:	stur	x0, [x29, #-144]
  402a08:	ldur	x8, [x29, #-160]
  402a0c:	add	x8, x8, #0x1
  402a10:	stur	x8, [x29, #-160]
  402a14:	b	4029a0 <move_file+0x2bc>
  402a18:	ldur	x8, [x29, #-144]
  402a1c:	mov	w9, #0x0                   	// #0
  402a20:	strb	w9, [x8]
  402a24:	ldur	x8, [x29, #-136]
  402a28:	stur	x8, [x29, #-184]
  402a2c:	ldur	x8, [x29, #-184]
  402a30:	str	x8, [x19, #40]
  402a34:	b	402a44 <move_file+0x360>
  402a38:	adrp	x8, 403000 <move_file+0x91c>
  402a3c:	add	x8, x8, #0xea3
  402a40:	str	x8, [x19, #40]
  402a44:	ldr	x8, [x19, #40]
  402a48:	stur	x8, [x29, #-56]
  402a4c:	sub	x8, x29, #0xd0
  402a50:	adrp	x9, 403000 <move_file+0x91c>
  402a54:	add	x9, x9, #0xea5
  402a58:	stur	x9, [x29, #-208]
  402a5c:	ldur	x9, [x29, #-16]
  402a60:	add	x9, x9, #0x13
  402a64:	str	x9, [x8, #8]
  402a68:	ldur	x9, [x29, #-56]
  402a6c:	str	x9, [x8, #16]
  402a70:	str	xzr, [x19, #200]
  402a74:	str	xzr, [x19, #192]
  402a78:	ldr	x8, [x19, #192]
  402a7c:	mov	w9, #0x0                   	// #0
  402a80:	cmp	x8, #0x3
  402a84:	str	w9, [x19, #36]
  402a88:	b.cs	402ab0 <move_file+0x3cc>  // b.hs, b.nlast
  402a8c:	ldr	x8, [x19, #192]
  402a90:	mov	x9, #0x8                   	// #8
  402a94:	mul	x8, x9, x8
  402a98:	sub	x9, x29, #0xd0
  402a9c:	add	x8, x9, x8
  402aa0:	ldr	x8, [x8]
  402aa4:	cmp	x8, #0x0
  402aa8:	cset	w10, ne  // ne = any
  402aac:	str	w10, [x19, #36]
  402ab0:	ldr	w8, [x19, #36]
  402ab4:	tbnz	w8, #0, 402abc <move_file+0x3d8>
  402ab8:	b	402af4 <move_file+0x410>
  402abc:	ldr	x8, [x19, #192]
  402ac0:	mov	x9, #0x8                   	// #8
  402ac4:	mul	x8, x9, x8
  402ac8:	sub	x9, x29, #0xd0
  402acc:	add	x8, x9, x8
  402ad0:	ldr	x0, [x8]
  402ad4:	bl	401518 <strlen@plt>
  402ad8:	ldr	x8, [x19, #200]
  402adc:	add	x8, x8, x0
  402ae0:	str	x8, [x19, #200]
  402ae4:	ldr	x8, [x19, #192]
  402ae8:	add	x8, x8, #0x1
  402aec:	str	x8, [x19, #192]
  402af0:	b	402a78 <move_file+0x394>
  402af4:	ldr	x8, [x19, #200]
  402af8:	add	x8, x8, #0x1
  402afc:	str	x8, [x19, #184]
  402b00:	ldr	x1, [x19, #184]
  402b04:	mov	x0, #0x1                   	// #1
  402b08:	bl	4038ac <size_multiply_overflow>
  402b0c:	mov	w8, #0x1                   	// #1
  402b10:	eor	w9, w0, #0x1
  402b14:	eor	w9, w9, w8
  402b18:	eor	w9, w9, w8
  402b1c:	eor	w8, w9, w8
  402b20:	and	w8, w8, #0x1
  402b24:	mov	w1, w8
  402b28:	sxtw	x10, w1
  402b2c:	cbz	x10, 402b50 <move_file+0x46c>
  402b30:	mov	w8, wzr
  402b34:	mov	w0, w8
  402b38:	adrp	x1, 403000 <move_file+0x91c>
  402b3c:	add	x1, x1, #0xe2e
  402b40:	ldr	x2, [x19, #72]
  402b44:	mov	w3, #0x89                  	// #137
  402b48:	ldr	x4, [x19, #56]
  402b4c:	bl	4014c8 <log_assert_failed_realm@plt>
  402b50:	ldr	x8, [x19, #184]
  402b54:	mov	x9, #0x1                   	// #1
  402b58:	mul	x8, x9, x8
  402b5c:	cmp	x8, #0x400, lsl #12
  402b60:	cset	w10, ls  // ls = plast
  402b64:	mov	w11, #0x1                   	// #1
  402b68:	eor	w10, w10, #0x1
  402b6c:	eor	w10, w10, w11
  402b70:	eor	w10, w10, w11
  402b74:	and	w10, w10, #0x1
  402b78:	mov	w0, w10
  402b7c:	sxtw	x8, w0
  402b80:	cbz	x8, 402ba4 <move_file+0x4c0>
  402b84:	mov	w8, wzr
  402b88:	mov	w0, w8
  402b8c:	adrp	x1, 403000 <move_file+0x91c>
  402b90:	add	x1, x1, #0xe84
  402b94:	ldr	x2, [x19, #72]
  402b98:	mov	w3, #0x89                  	// #137
  402b9c:	ldr	x4, [x19, #56]
  402ba0:	bl	4014c8 <log_assert_failed_realm@plt>
  402ba4:	ldr	x8, [x19, #184]
  402ba8:	mov	x9, #0x1                   	// #1
  402bac:	mul	x8, x9, x8
  402bb0:	mul	x8, x8, x9
  402bb4:	add	x8, x8, #0xf
  402bb8:	and	x8, x8, #0xfffffffffffffff0
  402bbc:	mov	x9, sp
  402bc0:	subs	x8, x9, x8
  402bc4:	mov	sp, x8
  402bc8:	str	x8, [x19, #176]
  402bcc:	ldr	x8, [x19, #176]
  402bd0:	str	x8, [x19, #216]
  402bd4:	str	x8, [x19, #208]
  402bd8:	str	xzr, [x19, #192]
  402bdc:	ldr	x8, [x19, #192]
  402be0:	mov	w9, #0x0                   	// #0
  402be4:	cmp	x8, #0x3
  402be8:	str	w9, [x19, #32]
  402bec:	b.cs	402c14 <move_file+0x530>  // b.hs, b.nlast
  402bf0:	ldr	x8, [x19, #192]
  402bf4:	mov	x9, #0x8                   	// #8
  402bf8:	mul	x8, x9, x8
  402bfc:	sub	x9, x29, #0xd0
  402c00:	add	x8, x9, x8
  402c04:	ldr	x8, [x8]
  402c08:	cmp	x8, #0x0
  402c0c:	cset	w10, ne  // ne = any
  402c10:	str	w10, [x19, #32]
  402c14:	ldr	w8, [x19, #32]
  402c18:	tbnz	w8, #0, 402c20 <move_file+0x53c>
  402c1c:	b	402c54 <move_file+0x570>
  402c20:	ldr	x0, [x19, #208]
  402c24:	ldr	x8, [x19, #192]
  402c28:	mov	x9, #0x8                   	// #8
  402c2c:	mul	x8, x9, x8
  402c30:	sub	x9, x29, #0xd0
  402c34:	add	x8, x9, x8
  402c38:	ldr	x1, [x8]
  402c3c:	bl	401548 <stpcpy@plt>
  402c40:	str	x0, [x19, #208]
  402c44:	ldr	x8, [x19, #192]
  402c48:	add	x8, x8, #0x1
  402c4c:	str	x8, [x19, #192]
  402c50:	b	402bdc <move_file+0x4f8>
  402c54:	ldr	x8, [x19, #208]
  402c58:	mov	w9, #0x0                   	// #0
  402c5c:	strb	w9, [x8]
  402c60:	ldr	x8, [x19, #216]
  402c64:	str	x8, [x19, #168]
  402c68:	ldr	x8, [x19, #168]
  402c6c:	stur	x8, [x29, #-64]
  402c70:	ldursw	x8, [x29, #-100]
  402c74:	mov	w9, w8
  402c78:	add	w9, w9, #0x1
  402c7c:	stur	w9, [x29, #-100]
  402c80:	sub	x10, x29, #0x60
  402c84:	ldur	x11, [x29, #-64]
  402c88:	str	x11, [x19, #152]
  402c8c:	ldur	x0, [x29, #-64]
  402c90:	str	x8, [x19, #24]
  402c94:	str	x10, [x19, #16]
  402c98:	bl	401518 <strlen@plt>
  402c9c:	str	x0, [x19, #160]
  402ca0:	ldur	q0, [x19, #152]
  402ca4:	ldr	x8, [x19, #16]
  402ca8:	ldr	x10, [x19, #24]
  402cac:	str	q0, [x8, x10, lsl #4]
  402cb0:	ldur	x11, [x29, #-16]
  402cb4:	ldr	x11, [x11, #296]
  402cb8:	cmp	x11, #0x0
  402cbc:	cset	w9, ls  // ls = plast
  402cc0:	tbnz	w9, #0, 402d60 <move_file+0x67c>
  402cc4:	ldur	x8, [x29, #-16]
  402cc8:	ldr	x8, [x8, #296]
  402ccc:	add	x8, x8, #0x5
  402cd0:	str	x8, [x19, #144]
  402cd4:	ldr	x0, [x19, #144]
  402cd8:	bl	401558 <malloc@plt>
  402cdc:	stur	x0, [x29, #-48]
  402ce0:	ldur	x8, [x29, #-48]
  402ce4:	cbnz	x8, 402d10 <move_file+0x62c>
  402ce8:	mov	w8, wzr
  402cec:	mov	w0, w8
  402cf0:	ldr	x1, [x19, #72]
  402cf4:	mov	w2, #0x92                  	// #146
  402cf8:	ldr	x3, [x19, #64]
  402cfc:	bl	401498 <log_oom_internal@plt>
  402d00:	stur	w0, [x29, #-4]
  402d04:	mov	w8, #0x1                   	// #1
  402d08:	stur	w8, [x29, #-108]
  402d0c:	b	402fe0 <move_file+0x8fc>
  402d10:	ldur	x0, [x29, #-48]
  402d14:	adrp	x1, 403000 <move_file+0x91c>
  402d18:	add	x1, x1, #0xeb5
  402d1c:	bl	401548 <stpcpy@plt>
  402d20:	ldur	x8, [x29, #-16]
  402d24:	ldr	x1, [x8, #288]
  402d28:	ldur	x8, [x29, #-16]
  402d2c:	ldr	x2, [x8, #296]
  402d30:	bl	4014b8 <memcpy@plt>
  402d34:	ldursw	x8, [x29, #-100]
  402d38:	mov	w9, w8
  402d3c:	add	w9, w9, #0x1
  402d40:	stur	w9, [x29, #-100]
  402d44:	sub	x10, x29, #0x60
  402d48:	ldur	x11, [x29, #-48]
  402d4c:	str	x11, [x19, #128]
  402d50:	ldr	x11, [x19, #144]
  402d54:	str	x11, [x19, #136]
  402d58:	ldr	q0, [x19, #128]
  402d5c:	str	q0, [x10, x8, lsl #4]
  402d60:	ldur	w4, [x29, #-100]
  402d64:	adrp	x0, 403000 <move_file+0x91c>
  402d68:	add	x0, x0, #0xebb
  402d6c:	adrp	x1, 403000 <move_file+0x91c>
  402d70:	add	x1, x1, #0xedc
  402d74:	ldr	x2, [x19, #64]
  402d78:	sub	x3, x29, #0x60
  402d7c:	bl	401568 <sd_journal_sendv_with_location@plt>
  402d80:	stur	w0, [x29, #-104]
  402d84:	ldur	w8, [x29, #-104]
  402d88:	cmp	w8, #0x0
  402d8c:	cset	w8, ge  // ge = tcont
  402d90:	tbnz	w8, #0, 402e20 <move_file+0x73c>
  402d94:	mov	w8, #0x3                   	// #3
  402d98:	str	w8, [x19, #124]
  402d9c:	ldur	w8, [x29, #-104]
  402da0:	str	w8, [x19, #120]
  402da4:	str	wzr, [x19, #116]
  402da8:	ldr	w0, [x19, #116]
  402dac:	bl	4013e8 <log_get_max_level_realm@plt>
  402db0:	ldr	w8, [x19, #124]
  402db4:	and	w8, w8, #0x7
  402db8:	cmp	w0, w8
  402dbc:	b.lt	402df0 <move_file+0x70c>  // b.tstop
  402dc0:	ldr	w8, [x19, #116]
  402dc4:	ldr	w9, [x19, #124]
  402dc8:	orr	w0, w9, w8, lsl #10
  402dcc:	ldr	w1, [x19, #120]
  402dd0:	ldr	x2, [x19, #72]
  402dd4:	mov	w3, #0x99                  	// #153
  402dd8:	ldr	x4, [x19, #64]
  402ddc:	adrp	x5, 403000 <move_file+0x91c>
  402de0:	add	x5, x5, #0xeea
  402de4:	bl	4013f8 <log_internal_realm@plt>
  402de8:	str	w0, [x19, #12]
  402dec:	b	402e04 <move_file+0x720>
  402df0:	ldr	w0, [x19, #120]
  402df4:	bl	401408 <abs@plt>
  402df8:	mov	w8, wzr
  402dfc:	subs	w8, w8, w0, uxtb
  402e00:	str	w8, [x19, #12]
  402e04:	ldr	w8, [x19, #12]
  402e08:	str	w8, [x19, #112]
  402e0c:	ldr	w8, [x19, #112]
  402e10:	stur	w8, [x29, #-4]
  402e14:	mov	w8, #0x1                   	// #1
  402e18:	stur	w8, [x29, #-108]
  402e1c:	b	402fe0 <move_file+0x8fc>
  402e20:	adrp	x8, 420000 <arg_sourcedir>
  402e24:	add	x8, x8, #0x10
  402e28:	ldr	w9, [x8]
  402e2c:	cmp	w9, #0x1
  402e30:	b.ne	402fac <move_file+0x8c8>  // b.any
  402e34:	ldur	x0, [x29, #-40]
  402e38:	mov	w1, #0x1ed                 	// #493
  402e3c:	bl	401578 <mkdir_parents@plt>
  402e40:	stur	w0, [x29, #-104]
  402e44:	ldur	w8, [x29, #-104]
  402e48:	cmp	w8, #0x0
  402e4c:	cset	w8, ge  // ge = tcont
  402e50:	tbnz	w8, #0, 402ee4 <move_file+0x800>
  402e54:	mov	w8, #0x3                   	// #3
  402e58:	str	w8, [x19, #108]
  402e5c:	ldur	w8, [x29, #-104]
  402e60:	str	w8, [x19, #104]
  402e64:	str	wzr, [x19, #100]
  402e68:	ldr	w0, [x19, #100]
  402e6c:	bl	4013e8 <log_get_max_level_realm@plt>
  402e70:	ldr	w8, [x19, #108]
  402e74:	and	w8, w8, #0x7
  402e78:	cmp	w0, w8
  402e7c:	b.lt	402eb4 <move_file+0x7d0>  // b.tstop
  402e80:	ldr	w8, [x19, #100]
  402e84:	ldr	w9, [x19, #108]
  402e88:	orr	w0, w9, w8, lsl #10
  402e8c:	ldr	w1, [x19, #104]
  402e90:	ldur	x6, [x29, #-40]
  402e94:	ldr	x2, [x19, #72]
  402e98:	mov	w3, #0x9f                  	// #159
  402e9c:	ldr	x4, [x19, #64]
  402ea0:	adrp	x5, 403000 <move_file+0x91c>
  402ea4:	add	x5, x5, #0xf09
  402ea8:	bl	4013f8 <log_internal_realm@plt>
  402eac:	str	w0, [x19, #8]
  402eb0:	b	402ec8 <move_file+0x7e4>
  402eb4:	ldr	w0, [x19, #104]
  402eb8:	bl	401408 <abs@plt>
  402ebc:	mov	w8, wzr
  402ec0:	subs	w8, w8, w0, uxtb
  402ec4:	str	w8, [x19, #8]
  402ec8:	ldr	w8, [x19, #8]
  402ecc:	str	w8, [x19, #96]
  402ed0:	ldr	w8, [x19, #96]
  402ed4:	stur	w8, [x29, #-4]
  402ed8:	mov	w8, #0x1                   	// #1
  402edc:	stur	w8, [x29, #-108]
  402ee0:	b	402fe0 <move_file+0x8fc>
  402ee4:	ldur	x0, [x29, #-32]
  402ee8:	ldur	x1, [x29, #-40]
  402eec:	mov	w2, #0x180                 	// #384
  402ef0:	mov	w8, wzr
  402ef4:	mov	w3, w8
  402ef8:	mov	w4, w8
  402efc:	mov	w5, #0x4                   	// #4
  402f00:	bl	403914 <copy_file_atomic>
  402f04:	stur	w0, [x29, #-104]
  402f08:	ldur	w8, [x29, #-104]
  402f0c:	cmp	w8, #0x0
  402f10:	cset	w8, ge  // ge = tcont
  402f14:	tbnz	w8, #0, 402fac <move_file+0x8c8>
  402f18:	mov	w8, #0x3                   	// #3
  402f1c:	str	w8, [x19, #92]
  402f20:	ldur	w8, [x29, #-104]
  402f24:	str	w8, [x19, #88]
  402f28:	str	wzr, [x19, #84]
  402f2c:	ldr	w0, [x19, #84]
  402f30:	bl	4013e8 <log_get_max_level_realm@plt>
  402f34:	ldr	w8, [x19, #92]
  402f38:	and	w8, w8, #0x7
  402f3c:	cmp	w0, w8
  402f40:	b.lt	402f7c <move_file+0x898>  // b.tstop
  402f44:	ldr	w8, [x19, #84]
  402f48:	ldr	w9, [x19, #92]
  402f4c:	orr	w0, w9, w8, lsl #10
  402f50:	ldr	w1, [x19, #88]
  402f54:	ldur	x6, [x29, #-32]
  402f58:	ldur	x7, [x29, #-40]
  402f5c:	ldr	x2, [x19, #72]
  402f60:	mov	w3, #0xa2                  	// #162
  402f64:	ldr	x4, [x19, #64]
  402f68:	adrp	x5, 403000 <move_file+0x91c>
  402f6c:	add	x5, x5, #0xf2b
  402f70:	bl	4013f8 <log_internal_realm@plt>
  402f74:	str	w0, [x19, #4]
  402f78:	b	402f90 <move_file+0x8ac>
  402f7c:	ldr	w0, [x19, #88]
  402f80:	bl	401408 <abs@plt>
  402f84:	mov	w8, wzr
  402f88:	subs	w8, w8, w0, uxtb
  402f8c:	str	w8, [x19, #4]
  402f90:	ldr	w8, [x19, #4]
  402f94:	str	w8, [x19, #80]
  402f98:	ldr	w8, [x19, #80]
  402f9c:	stur	w8, [x29, #-4]
  402fa0:	mov	w8, #0x1                   	// #1
  402fa4:	stur	w8, [x29, #-108]
  402fa8:	b	402fe0 <move_file+0x8fc>
  402fac:	adrp	x8, 420000 <arg_sourcedir>
  402fb0:	add	x8, x8, #0x14
  402fb4:	ldrb	w9, [x8]
  402fb8:	tbnz	w9, #0, 402fc0 <move_file+0x8dc>
  402fbc:	b	402fc8 <move_file+0x8e4>
  402fc0:	ldur	x0, [x29, #-32]
  402fc4:	bl	401588 <unlink@plt>
  402fc8:	ldur	x8, [x29, #-16]
  402fcc:	mov	w9, #0x1                   	// #1
  402fd0:	strb	w9, [x8, #281]
  402fd4:	stur	wzr, [x29, #-4]
  402fd8:	mov	w9, #0x1                   	// #1
  402fdc:	stur	w9, [x29, #-108]
  402fe0:	sub	x0, x29, #0x30
  402fe4:	bl	4032d8 <freep>
  402fe8:	sub	x0, x29, #0x28
  402fec:	bl	4032d8 <freep>
  402ff0:	sub	x0, x29, #0x20
  402ff4:	bl	4032d8 <freep>
  402ff8:	ldur	w0, [x29, #-4]
  402ffc:	mov	sp, x29
  403000:	ldp	x28, x19, [sp, #16]
  403004:	ldp	x29, x30, [sp], #32
  403008:	ret

000000000040300c <config_parse_pstore_storage>:
  40300c:	sub	sp, sp, #0xb0
  403010:	stp	x29, x30, [sp, #160]
  403014:	add	x29, sp, #0xa0
  403018:	ldr	x8, [x29, #16]
  40301c:	ldr	x9, [x29, #24]
  403020:	adrp	x10, 403000 <move_file+0x91c>
  403024:	add	x10, x10, #0xa48
  403028:	add	x10, x10, #0x3
  40302c:	adrp	x11, 403000 <move_file+0x91c>
  403030:	add	x11, x11, #0xb17
  403034:	stur	x0, [x29, #-16]
  403038:	stur	x1, [x29, #-24]
  40303c:	stur	w2, [x29, #-28]
  403040:	stur	x3, [x29, #-40]
  403044:	stur	w4, [x29, #-44]
  403048:	stur	x5, [x29, #-56]
  40304c:	stur	w6, [x29, #-60]
  403050:	stur	x7, [x29, #-72]
  403054:	str	x8, [sp, #80]
  403058:	str	x9, [sp, #72]
  40305c:	ldr	x8, [sp, #80]
  403060:	str	x8, [sp, #64]
  403064:	str	x10, [sp, #40]
  403068:	str	x11, [sp, #32]
  40306c:	ldur	x8, [x29, #-24]
  403070:	cmp	x8, #0x0
  403074:	cset	w9, ne  // ne = any
  403078:	mov	w10, #0x1                   	// #1
  40307c:	eor	w9, w9, #0x1
  403080:	eor	w9, w9, w10
  403084:	eor	w9, w9, w10
  403088:	and	w9, w9, #0x1
  40308c:	mov	w0, w9
  403090:	sxtw	x8, w0
  403094:	cbz	x8, 4030b8 <config_parse_pstore_storage+0xac>
  403098:	mov	w8, wzr
  40309c:	mov	w0, w8
  4030a0:	adrp	x1, 403000 <move_file+0x91c>
  4030a4:	add	x1, x1, #0xb0e
  4030a8:	ldr	x2, [sp, #40]
  4030ac:	mov	w3, #0x42                  	// #66
  4030b0:	ldr	x4, [sp, #32]
  4030b4:	bl	4014c8 <log_assert_failed_realm@plt>
  4030b8:	ldur	x8, [x29, #-56]
  4030bc:	cmp	x8, #0x0
  4030c0:	cset	w9, ne  // ne = any
  4030c4:	mov	w10, #0x1                   	// #1
  4030c8:	eor	w9, w9, #0x1
  4030cc:	eor	w9, w9, w10
  4030d0:	eor	w9, w9, w10
  4030d4:	and	w9, w9, #0x1
  4030d8:	mov	w0, w9
  4030dc:	sxtw	x8, w0
  4030e0:	cbz	x8, 403104 <config_parse_pstore_storage+0xf8>
  4030e4:	mov	w8, wzr
  4030e8:	mov	w0, w8
  4030ec:	adrp	x1, 403000 <move_file+0x91c>
  4030f0:	add	x1, x1, #0xbae
  4030f4:	ldr	x2, [sp, #40]
  4030f8:	mov	w3, #0x42                  	// #66
  4030fc:	ldr	x4, [sp, #32]
  403100:	bl	4014c8 <log_assert_failed_realm@plt>
  403104:	ldur	x8, [x29, #-72]
  403108:	cmp	x8, #0x0
  40310c:	cset	w9, ne  // ne = any
  403110:	mov	w10, #0x1                   	// #1
  403114:	eor	w9, w9, #0x1
  403118:	eor	w9, w9, w10
  40311c:	eor	w9, w9, w10
  403120:	and	w9, w9, #0x1
  403124:	mov	w0, w9
  403128:	sxtw	x8, w0
  40312c:	cbz	x8, 403150 <config_parse_pstore_storage+0x144>
  403130:	mov	w8, wzr
  403134:	mov	w0, w8
  403138:	adrp	x1, 403000 <move_file+0x91c>
  40313c:	add	x1, x1, #0xbb5
  403140:	ldr	x2, [sp, #40]
  403144:	mov	w3, #0x42                  	// #66
  403148:	ldr	x4, [sp, #32]
  40314c:	bl	4014c8 <log_assert_failed_realm@plt>
  403150:	ldr	x8, [sp, #80]
  403154:	cmp	x8, #0x0
  403158:	cset	w9, ne  // ne = any
  40315c:	mov	w10, #0x1                   	// #1
  403160:	eor	w9, w9, #0x1
  403164:	eor	w9, w9, w10
  403168:	eor	w9, w9, w10
  40316c:	and	w9, w9, #0x1
  403170:	mov	w0, w9
  403174:	sxtw	x8, w0
  403178:	cbz	x8, 40319c <config_parse_pstore_storage+0x190>
  40317c:	mov	w8, wzr
  403180:	mov	w0, w8
  403184:	adrp	x1, 403000 <move_file+0x91c>
  403188:	add	x1, x1, #0xbbc
  40318c:	ldr	x2, [sp, #40]
  403190:	mov	w3, #0x42                  	// #66
  403194:	ldr	x4, [sp, #32]
  403198:	bl	4014c8 <log_assert_failed_realm@plt>
  40319c:	ldur	x0, [x29, #-72]
  4031a0:	bl	403270 <pstore_storage_from_string>
  4031a4:	str	w0, [sp, #60]
  4031a8:	ldr	w8, [sp, #60]
  4031ac:	cmp	w8, #0x0
  4031b0:	cset	w8, ge  // ge = tcont
  4031b4:	tbnz	w8, #0, 403250 <config_parse_pstore_storage+0x244>
  4031b8:	mov	w8, #0x3                   	// #3
  4031bc:	str	w8, [sp, #56]
  4031c0:	mov	w8, wzr
  4031c4:	str	wzr, [sp, #52]
  4031c8:	mov	w0, w8
  4031cc:	bl	4013e8 <log_get_max_level_realm@plt>
  4031d0:	ldr	w8, [sp, #56]
  4031d4:	and	w8, w8, #0x7
  4031d8:	cmp	w0, w8
  4031dc:	b.lt	40322c <config_parse_pstore_storage+0x220>  // b.tstop
  4031e0:	ldur	x0, [x29, #-16]
  4031e4:	ldr	w1, [sp, #56]
  4031e8:	ldur	x2, [x29, #-24]
  4031ec:	ldur	w3, [x29, #-28]
  4031f0:	ldr	w4, [sp, #52]
  4031f4:	ldur	x8, [x29, #-72]
  4031f8:	ldr	x5, [sp, #40]
  4031fc:	mov	w6, #0x42                  	// #66
  403200:	adrp	x7, 403000 <move_file+0x91c>
  403204:	add	x7, x7, #0xbc1
  403208:	mov	x9, sp
  40320c:	adrp	x10, 403000 <move_file+0x91c>
  403210:	add	x10, x10, #0xbdd
  403214:	str	x10, [x9]
  403218:	mov	x9, sp
  40321c:	str	x8, [x9, #8]
  403220:	bl	401598 <log_syntax_internal@plt>
  403224:	str	w0, [sp, #28]
  403228:	b	403240 <config_parse_pstore_storage+0x234>
  40322c:	ldr	w0, [sp, #52]
  403230:	bl	401408 <abs@plt>
  403234:	mov	w8, wzr
  403238:	subs	w8, w8, w0, uxtb
  40323c:	str	w8, [sp, #28]
  403240:	ldr	w8, [sp, #28]
  403244:	str	w8, [sp, #48]
  403248:	stur	wzr, [x29, #-4]
  40324c:	b	403260 <config_parse_pstore_storage+0x254>
  403250:	ldr	w8, [sp, #60]
  403254:	ldr	x9, [sp, #64]
  403258:	str	w8, [x9]
  40325c:	stur	wzr, [x29, #-4]
  403260:	ldur	w0, [x29, #-4]
  403264:	ldp	x29, x30, [sp, #160]
  403268:	add	sp, sp, #0xb0
  40326c:	ret

0000000000403270 <pstore_storage_from_string>:
  403270:	sub	sp, sp, #0x20
  403274:	stp	x29, x30, [sp, #16]
  403278:	add	x29, sp, #0x10
  40327c:	adrp	x8, 404000 <parse_config.items+0xb0>
  403280:	add	x8, x8, #0x60
  403284:	mov	x1, #0x3                   	// #3
  403288:	str	x0, [sp, #8]
  40328c:	ldr	x2, [sp, #8]
  403290:	mov	x0, x8
  403294:	bl	4015a8 <string_table_lookup@plt>
  403298:	ldp	x29, x30, [sp, #16]
  40329c:	add	sp, sp, #0x20
  4032a0:	ret

00000000004032a4 <closedirp>:
  4032a4:	sub	sp, sp, #0x20
  4032a8:	stp	x29, x30, [sp, #16]
  4032ac:	add	x29, sp, #0x10
  4032b0:	str	x0, [sp, #8]
  4032b4:	ldr	x8, [sp, #8]
  4032b8:	ldr	x8, [x8]
  4032bc:	cbz	x8, 4032cc <closedirp+0x28>
  4032c0:	ldr	x8, [sp, #8]
  4032c4:	ldr	x0, [x8]
  4032c8:	bl	4015b8 <closedir@plt>
  4032cc:	ldp	x29, x30, [sp, #16]
  4032d0:	add	sp, sp, #0x20
  4032d4:	ret

00000000004032d8 <freep>:
  4032d8:	sub	sp, sp, #0x20
  4032dc:	stp	x29, x30, [sp, #16]
  4032e0:	add	x29, sp, #0x10
  4032e4:	str	x0, [sp, #8]
  4032e8:	ldr	x8, [sp, #8]
  4032ec:	ldr	x0, [x8]
  4032f0:	bl	401418 <free@plt>
  4032f4:	ldp	x29, x30, [sp, #16]
  4032f8:	add	sp, sp, #0x20
  4032fc:	ret

0000000000403300 <read_full_file>:
  403300:	sub	sp, sp, #0x30
  403304:	stp	x29, x30, [sp, #32]
  403308:	add	x29, sp, #0x20
  40330c:	mov	w8, wzr
  403310:	stur	x0, [x29, #-8]
  403314:	str	x1, [sp, #16]
  403318:	str	x2, [sp, #8]
  40331c:	ldur	x0, [x29, #-8]
  403320:	ldr	x2, [sp, #16]
  403324:	ldr	x3, [sp, #8]
  403328:	mov	w1, w8
  40332c:	bl	4015c8 <read_full_file_full@plt>
  403330:	ldp	x29, x30, [sp, #32]
  403334:	add	sp, sp, #0x30
  403338:	ret

000000000040333c <startswith>:
  40333c:	sub	sp, sp, #0x30
  403340:	stp	x29, x30, [sp, #32]
  403344:	add	x29, sp, #0x20
  403348:	str	x0, [sp, #16]
  40334c:	str	x1, [sp, #8]
  403350:	ldr	x0, [sp, #8]
  403354:	bl	401518 <strlen@plt>
  403358:	str	x0, [sp]
  40335c:	ldr	x0, [sp, #16]
  403360:	ldr	x1, [sp, #8]
  403364:	ldr	x2, [sp]
  403368:	bl	4015d8 <strncmp@plt>
  40336c:	cbnz	w0, 403384 <startswith+0x48>
  403370:	ldr	x8, [sp, #16]
  403374:	ldr	x9, [sp]
  403378:	add	x8, x8, x9
  40337c:	stur	x8, [x29, #-8]
  403380:	b	40338c <startswith+0x50>
  403384:	mov	x8, xzr
  403388:	stur	x8, [x29, #-8]
  40338c:	ldur	x0, [x29, #-8]
  403390:	ldp	x29, x30, [sp, #32]
  403394:	add	sp, sp, #0x30
  403398:	ret

000000000040339c <mfree>:
  40339c:	sub	sp, sp, #0x20
  4033a0:	stp	x29, x30, [sp, #16]
  4033a4:	add	x29, sp, #0x10
  4033a8:	mov	x8, xzr
  4033ac:	str	x0, [sp, #8]
  4033b0:	ldr	x0, [sp, #8]
  4033b4:	str	x8, [sp]
  4033b8:	bl	401418 <free@plt>
  4033bc:	ldr	x0, [sp]
  4033c0:	ldp	x29, x30, [sp, #16]
  4033c4:	add	sp, sp, #0x20
  4033c8:	ret

00000000004033cc <streq_ptr>:
  4033cc:	sub	sp, sp, #0x20
  4033d0:	stp	x29, x30, [sp, #16]
  4033d4:	add	x29, sp, #0x10
  4033d8:	str	x0, [sp, #8]
  4033dc:	str	x1, [sp]
  4033e0:	ldr	x0, [sp, #8]
  4033e4:	ldr	x1, [sp]
  4033e8:	bl	4015e8 <strcmp_ptr@plt>
  4033ec:	cmp	w0, #0x0
  4033f0:	cset	w8, eq  // eq = none
  4033f4:	and	w0, w8, #0x1
  4033f8:	ldp	x29, x30, [sp, #16]
  4033fc:	add	sp, sp, #0x20
  403400:	ret

0000000000403404 <write_dmesg>:
  403404:	sub	sp, sp, #0xc0
  403408:	stp	x29, x30, [sp, #176]
  40340c:	add	x29, sp, #0xb0
  403410:	mov	x8, xzr
  403414:	mov	w9, #0xffffffff            	// #-1
  403418:	adrp	x10, 403000 <move_file+0x91c>
  40341c:	add	x10, x10, #0xa48
  403420:	add	x10, x10, #0x3
  403424:	adrp	x11, 403000 <move_file+0x91c>
  403428:	add	x11, x11, #0xd71
  40342c:	stur	x0, [x29, #-16]
  403430:	stur	x1, [x29, #-24]
  403434:	stur	x2, [x29, #-32]
  403438:	stur	x8, [x29, #-40]
  40343c:	stur	x8, [x29, #-48]
  403440:	stur	w9, [x29, #-52]
  403444:	ldur	x8, [x29, #-24]
  403448:	str	x10, [sp, #32]
  40344c:	str	x11, [sp, #24]
  403450:	cbnz	x8, 403464 <write_dmesg+0x60>
  403454:	stur	wzr, [x29, #-4]
  403458:	mov	w8, #0x1                   	// #1
  40345c:	stur	w8, [x29, #-72]
  403460:	b	4037f8 <write_dmesg+0x3f4>
  403464:	ldur	x8, [x29, #-16]
  403468:	cmp	x8, #0x0
  40346c:	cset	w9, ne  // ne = any
  403470:	mov	w10, #0x1                   	// #1
  403474:	eor	w9, w9, #0x1
  403478:	eor	w9, w9, w10
  40347c:	eor	w9, w9, w10
  403480:	and	w9, w9, #0x1
  403484:	mov	w0, w9
  403488:	sxtw	x8, w0
  40348c:	cbz	x8, 4034b4 <write_dmesg+0xb0>
  403490:	mov	w8, wzr
  403494:	mov	w0, w8
  403498:	adrp	x1, 403000 <move_file+0x91c>
  40349c:	add	x1, x1, #0xd2d
  4034a0:	ldr	x2, [sp, #32]
  4034a4:	mov	w3, #0xb8                  	// #184
  4034a8:	adrp	x4, 403000 <move_file+0x91c>
  4034ac:	add	x4, x4, #0xd33
  4034b0:	bl	4014c8 <log_assert_failed_realm@plt>
  4034b4:	adrp	x8, 420000 <arg_sourcedir>
  4034b8:	add	x8, x8, #0x8
  4034bc:	ldr	x0, [x8]
  4034c0:	ldur	x1, [x29, #-32]
  4034c4:	adrp	x2, 403000 <move_file+0x91c>
  4034c8:	add	x2, x2, #0xd67
  4034cc:	mov	x8, #0xffffffffffffffff    	// #-1
  4034d0:	mov	x3, x8
  4034d4:	bl	401488 <path_join_internal@plt>
  4034d8:	stur	x0, [x29, #-48]
  4034dc:	ldur	x8, [x29, #-48]
  4034e0:	cbnz	x8, 40350c <write_dmesg+0x108>
  4034e4:	mov	w8, wzr
  4034e8:	mov	w0, w8
  4034ec:	ldr	x1, [sp, #32]
  4034f0:	mov	w2, #0xbc                  	// #188
  4034f4:	ldr	x3, [sp, #24]
  4034f8:	bl	401498 <log_oom_internal@plt>
  4034fc:	stur	w0, [x29, #-4]
  403500:	mov	w8, #0x1                   	// #1
  403504:	stur	w8, [x29, #-72]
  403508:	b	4037f8 <write_dmesg+0x3f4>
  40350c:	ldur	x0, [x29, #-48]
  403510:	mov	w1, #0x241                 	// #577
  403514:	movk	w1, #0x8, lsl #16
  403518:	sub	x2, x29, #0x28
  40351c:	bl	4015f8 <open_tmpfile_linkable@plt>
  403520:	stur	w0, [x29, #-52]
  403524:	ldur	w8, [x29, #-52]
  403528:	cmp	w8, #0x0
  40352c:	cset	w8, ge  // ge = tcont
  403530:	tbnz	w8, #0, 4035c4 <write_dmesg+0x1c0>
  403534:	mov	w8, #0x3                   	// #3
  403538:	stur	w8, [x29, #-76]
  40353c:	ldur	w8, [x29, #-52]
  403540:	stur	w8, [x29, #-80]
  403544:	stur	wzr, [x29, #-84]
  403548:	ldur	w0, [x29, #-84]
  40354c:	bl	4013e8 <log_get_max_level_realm@plt>
  403550:	ldur	w8, [x29, #-76]
  403554:	and	w8, w8, #0x7
  403558:	cmp	w0, w8
  40355c:	b.lt	403594 <write_dmesg+0x190>  // b.tstop
  403560:	ldur	w8, [x29, #-84]
  403564:	ldur	w9, [x29, #-76]
  403568:	orr	w0, w9, w8, lsl #10
  40356c:	ldur	w1, [x29, #-80]
  403570:	ldur	x6, [x29, #-48]
  403574:	ldr	x2, [sp, #32]
  403578:	mov	w3, #0xc0                  	// #192
  40357c:	ldr	x4, [sp, #24]
  403580:	adrp	x5, 403000 <move_file+0x91c>
  403584:	add	x5, x5, #0xd7d
  403588:	bl	4013f8 <log_internal_realm@plt>
  40358c:	str	w0, [sp, #20]
  403590:	b	4035a8 <write_dmesg+0x1a4>
  403594:	ldur	w0, [x29, #-80]
  403598:	bl	401408 <abs@plt>
  40359c:	mov	w8, wzr
  4035a0:	subs	w8, w8, w0, uxtb
  4035a4:	str	w8, [sp, #20]
  4035a8:	ldr	w8, [sp, #20]
  4035ac:	str	w8, [sp, #88]
  4035b0:	ldr	w8, [sp, #88]
  4035b4:	stur	w8, [x29, #-4]
  4035b8:	mov	w8, #0x1                   	// #1
  4035bc:	stur	w8, [x29, #-72]
  4035c0:	b	4037f8 <write_dmesg+0x3f4>
  4035c4:	ldur	w0, [x29, #-52]
  4035c8:	ldur	x1, [x29, #-16]
  4035cc:	ldur	x2, [x29, #-24]
  4035d0:	bl	401608 <write@plt>
  4035d4:	stur	x0, [x29, #-64]
  4035d8:	ldur	x8, [x29, #-64]
  4035dc:	cmp	x8, #0x0
  4035e0:	cset	w9, ge  // ge = tcont
  4035e4:	tbnz	w9, #0, 40367c <write_dmesg+0x278>
  4035e8:	mov	w8, #0x3                   	// #3
  4035ec:	str	w8, [sp, #84]
  4035f0:	bl	401458 <__errno_location@plt>
  4035f4:	ldr	w8, [x0]
  4035f8:	str	w8, [sp, #80]
  4035fc:	str	wzr, [sp, #76]
  403600:	ldr	w0, [sp, #76]
  403604:	bl	4013e8 <log_get_max_level_realm@plt>
  403608:	ldr	w8, [sp, #84]
  40360c:	and	w8, w8, #0x7
  403610:	cmp	w0, w8
  403614:	b.lt	40364c <write_dmesg+0x248>  // b.tstop
  403618:	ldr	w8, [sp, #76]
  40361c:	ldr	w9, [sp, #84]
  403620:	orr	w0, w9, w8, lsl #10
  403624:	ldr	w1, [sp, #80]
  403628:	ldur	x6, [x29, #-48]
  40362c:	ldr	x2, [sp, #32]
  403630:	mov	w3, #0xc3                  	// #195
  403634:	ldr	x4, [sp, #24]
  403638:	adrp	x5, 403000 <move_file+0x91c>
  40363c:	add	x5, x5, #0xda2
  403640:	bl	4013f8 <log_internal_realm@plt>
  403644:	str	w0, [sp, #16]
  403648:	b	403660 <write_dmesg+0x25c>
  40364c:	ldr	w0, [sp, #80]
  403650:	bl	401408 <abs@plt>
  403654:	mov	w8, wzr
  403658:	subs	w8, w8, w0, uxtb
  40365c:	str	w8, [sp, #16]
  403660:	ldr	w8, [sp, #16]
  403664:	str	w8, [sp, #72]
  403668:	ldr	w8, [sp, #72]
  40366c:	stur	w8, [x29, #-4]
  403670:	mov	w8, #0x1                   	// #1
  403674:	stur	w8, [x29, #-72]
  403678:	b	4037f8 <write_dmesg+0x3f4>
  40367c:	ldur	x8, [x29, #-64]
  403680:	ldur	x9, [x29, #-24]
  403684:	cmp	x8, x9
  403688:	b.eq	40372c <write_dmesg+0x328>  // b.none
  40368c:	mov	w8, #0x3                   	// #3
  403690:	str	w8, [sp, #68]
  403694:	mov	w8, #0x5                   	// #5
  403698:	movk	w8, #0x4000, lsl #16
  40369c:	str	w8, [sp, #64]
  4036a0:	str	wzr, [sp, #60]
  4036a4:	ldr	w0, [sp, #60]
  4036a8:	bl	4013e8 <log_get_max_level_realm@plt>
  4036ac:	ldr	w8, [sp, #68]
  4036b0:	and	w8, w8, #0x7
  4036b4:	cmp	w0, w8
  4036b8:	b.lt	4036fc <write_dmesg+0x2f8>  // b.tstop
  4036bc:	ldr	w8, [sp, #60]
  4036c0:	ldr	w9, [sp, #68]
  4036c4:	orr	w0, w9, w8, lsl #10
  4036c8:	ldr	w1, [sp, #64]
  4036cc:	ldur	x6, [x29, #-48]
  4036d0:	ldur	x10, [x29, #-24]
  4036d4:	ldur	x11, [x29, #-64]
  4036d8:	subs	x7, x10, x11
  4036dc:	ldr	x2, [sp, #32]
  4036e0:	mov	w3, #0xc5                  	// #197
  4036e4:	ldr	x4, [sp, #24]
  4036e8:	adrp	x5, 403000 <move_file+0x91c>
  4036ec:	add	x5, x5, #0xdc2
  4036f0:	bl	4013f8 <log_internal_realm@plt>
  4036f4:	str	w0, [sp, #12]
  4036f8:	b	403710 <write_dmesg+0x30c>
  4036fc:	ldr	w0, [sp, #64]
  403700:	bl	401408 <abs@plt>
  403704:	mov	w8, wzr
  403708:	subs	w8, w8, w0, uxtb
  40370c:	str	w8, [sp, #12]
  403710:	ldr	w8, [sp, #12]
  403714:	str	w8, [sp, #56]
  403718:	ldr	w8, [sp, #56]
  40371c:	stur	w8, [x29, #-4]
  403720:	mov	w8, #0x1                   	// #1
  403724:	stur	w8, [x29, #-72]
  403728:	b	4037f8 <write_dmesg+0x3f4>
  40372c:	ldur	w0, [x29, #-52]
  403730:	ldur	x1, [x29, #-40]
  403734:	ldur	x2, [x29, #-48]
  403738:	bl	401618 <link_tmpfile@plt>
  40373c:	stur	w0, [x29, #-68]
  403740:	ldur	w8, [x29, #-68]
  403744:	cmp	w8, #0x0
  403748:	cset	w8, ge  // ge = tcont
  40374c:	tbnz	w8, #0, 4037e0 <write_dmesg+0x3dc>
  403750:	mov	w8, #0x3                   	// #3
  403754:	str	w8, [sp, #52]
  403758:	ldur	w8, [x29, #-68]
  40375c:	str	w8, [sp, #48]
  403760:	str	wzr, [sp, #44]
  403764:	ldr	w0, [sp, #44]
  403768:	bl	4013e8 <log_get_max_level_realm@plt>
  40376c:	ldr	w8, [sp, #52]
  403770:	and	w8, w8, #0x7
  403774:	cmp	w0, w8
  403778:	b.lt	4037b0 <write_dmesg+0x3ac>  // b.tstop
  40377c:	ldr	w8, [sp, #44]
  403780:	ldr	w9, [sp, #52]
  403784:	orr	w0, w9, w8, lsl #10
  403788:	ldr	w1, [sp, #48]
  40378c:	ldur	x6, [x29, #-48]
  403790:	ldr	x2, [sp, #32]
  403794:	mov	w3, #0xc8                  	// #200
  403798:	ldr	x4, [sp, #24]
  40379c:	adrp	x5, 403000 <move_file+0x91c>
  4037a0:	add	x5, x5, #0xdf3
  4037a4:	bl	4013f8 <log_internal_realm@plt>
  4037a8:	str	w0, [sp, #8]
  4037ac:	b	4037c4 <write_dmesg+0x3c0>
  4037b0:	ldr	w0, [sp, #48]
  4037b4:	bl	401408 <abs@plt>
  4037b8:	mov	w8, wzr
  4037bc:	subs	w8, w8, w0, uxtb
  4037c0:	str	w8, [sp, #8]
  4037c4:	ldr	w8, [sp, #8]
  4037c8:	str	w8, [sp, #40]
  4037cc:	ldr	w8, [sp, #40]
  4037d0:	stur	w8, [x29, #-4]
  4037d4:	mov	w8, #0x1                   	// #1
  4037d8:	stur	w8, [x29, #-72]
  4037dc:	b	4037f8 <write_dmesg+0x3f4>
  4037e0:	ldur	x0, [x29, #-40]
  4037e4:	bl	40339c <mfree>
  4037e8:	stur	x0, [x29, #-40]
  4037ec:	stur	wzr, [x29, #-4]
  4037f0:	mov	w8, #0x1                   	// #1
  4037f4:	stur	w8, [x29, #-72]
  4037f8:	sub	x0, x29, #0x34
  4037fc:	bl	403854 <closep>
  403800:	sub	x0, x29, #0x30
  403804:	bl	4032d8 <freep>
  403808:	sub	x0, x29, #0x28
  40380c:	bl	403820 <unlink_and_freep>
  403810:	ldur	w0, [x29, #-4]
  403814:	ldp	x29, x30, [sp, #176]
  403818:	add	sp, sp, #0xc0
  40381c:	ret

0000000000403820 <unlink_and_freep>:
  403820:	sub	sp, sp, #0x20
  403824:	stp	x29, x30, [sp, #16]
  403828:	add	x29, sp, #0x10
  40382c:	str	x0, [sp, #8]
  403830:	ldr	x8, [sp, #8]
  403834:	ldr	x8, [x8]
  403838:	cbz	x8, 403848 <unlink_and_freep+0x28>
  40383c:	ldr	x8, [sp, #8]
  403840:	ldr	x0, [x8]
  403844:	bl	40387c <unlink_and_free>
  403848:	ldp	x29, x30, [sp, #16]
  40384c:	add	sp, sp, #0x20
  403850:	ret

0000000000403854 <closep>:
  403854:	sub	sp, sp, #0x20
  403858:	stp	x29, x30, [sp, #16]
  40385c:	add	x29, sp, #0x10
  403860:	str	x0, [sp, #8]
  403864:	ldr	x8, [sp, #8]
  403868:	ldr	w0, [x8]
  40386c:	bl	401628 <safe_close@plt>
  403870:	ldp	x29, x30, [sp, #16]
  403874:	add	sp, sp, #0x20
  403878:	ret

000000000040387c <unlink_and_free>:
  40387c:	sub	sp, sp, #0x20
  403880:	stp	x29, x30, [sp, #16]
  403884:	add	x29, sp, #0x10
  403888:	str	x0, [sp, #8]
  40388c:	ldr	x0, [sp, #8]
  403890:	bl	401638 <unlink_noerrno@plt>
  403894:	ldr	x8, [sp, #8]
  403898:	mov	x0, x8
  40389c:	bl	401418 <free@plt>
  4038a0:	ldp	x29, x30, [sp, #16]
  4038a4:	add	sp, sp, #0x20
  4038a8:	ret

00000000004038ac <size_multiply_overflow>:
  4038ac:	sub	sp, sp, #0x20
  4038b0:	str	x0, [sp, #24]
  4038b4:	str	x1, [sp, #16]
  4038b8:	ldr	x8, [sp, #16]
  4038bc:	mov	w9, #0x0                   	// #0
  4038c0:	str	w9, [sp, #12]
  4038c4:	cbz	x8, 4038e4 <size_multiply_overflow+0x38>
  4038c8:	ldr	x8, [sp, #24]
  4038cc:	ldr	x9, [sp, #16]
  4038d0:	mov	x10, #0xffffffffffffffff    	// #-1
  4038d4:	udiv	x9, x10, x9
  4038d8:	cmp	x8, x9
  4038dc:	cset	w11, hi  // hi = pmore
  4038e0:	str	w11, [sp, #12]
  4038e4:	ldr	w8, [sp, #12]
  4038e8:	mov	w9, #0x1                   	// #1
  4038ec:	eor	w8, w8, #0x1
  4038f0:	eor	w8, w8, w9
  4038f4:	and	w8, w8, #0x1
  4038f8:	mov	w0, w8
  4038fc:	sxtw	x10, w0
  403900:	cmp	x10, #0x0
  403904:	cset	w8, ne  // ne = any
  403908:	and	w0, w8, #0x1
  40390c:	add	sp, sp, #0x20
  403910:	ret

0000000000403914 <copy_file_atomic>:
  403914:	sub	sp, sp, #0x30
  403918:	stp	x29, x30, [sp, #32]
  40391c:	add	x29, sp, #0x20
  403920:	mov	x8, xzr
  403924:	mov	x6, x8
  403928:	stur	x0, [x29, #-8]
  40392c:	str	x1, [sp, #16]
  403930:	str	w2, [sp, #12]
  403934:	str	w3, [sp, #8]
  403938:	str	w4, [sp, #4]
  40393c:	str	w5, [sp]
  403940:	ldur	x0, [x29, #-8]
  403944:	ldr	x1, [sp, #16]
  403948:	ldr	w2, [sp, #12]
  40394c:	ldr	w3, [sp, #8]
  403950:	ldr	w4, [sp, #4]
  403954:	ldr	w5, [sp]
  403958:	mov	x7, x8
  40395c:	bl	401648 <copy_file_atomic_full@plt>
  403960:	ldp	x29, x30, [sp, #32]
  403964:	add	sp, sp, #0x30
  403968:	ret

000000000040396c <ALIGN_TO>:
  40396c:	sub	sp, sp, #0x10
  403970:	str	x0, [sp, #8]
  403974:	str	x1, [sp]
  403978:	ldr	x8, [sp, #8]
  40397c:	ldr	x9, [sp]
  403980:	add	x8, x8, x9
  403984:	subs	x8, x8, #0x1
  403988:	ldr	x9, [sp]
  40398c:	subs	x9, x9, #0x1
  403990:	bic	x0, x8, x9
  403994:	add	sp, sp, #0x10
  403998:	ret
  40399c:	udf	#0

00000000004039a0 <__libc_csu_init>:
  4039a0:	stp	x29, x30, [sp, #-64]!
  4039a4:	mov	x29, sp
  4039a8:	stp	x19, x20, [sp, #16]
  4039ac:	adrp	x20, 41f000 <__FRAME_END__+0x1ae90>
  4039b0:	add	x20, x20, #0xc18
  4039b4:	stp	x21, x22, [sp, #32]
  4039b8:	adrp	x21, 41f000 <__FRAME_END__+0x1ae90>
  4039bc:	add	x21, x21, #0xc10
  4039c0:	sub	x20, x20, x21
  4039c4:	mov	w22, w0
  4039c8:	stp	x23, x24, [sp, #48]
  4039cc:	mov	x23, x1
  4039d0:	mov	x24, x2
  4039d4:	bl	401330 <_init>
  4039d8:	cmp	xzr, x20, asr #3
  4039dc:	b.eq	403a08 <__libc_csu_init+0x68>  // b.none
  4039e0:	asr	x20, x20, #3
  4039e4:	mov	x19, #0x0                   	// #0
  4039e8:	ldr	x3, [x21, x19, lsl #3]
  4039ec:	mov	x2, x24
  4039f0:	add	x19, x19, #0x1
  4039f4:	mov	x1, x23
  4039f8:	mov	w0, w22
  4039fc:	blr	x3
  403a00:	cmp	x20, x19
  403a04:	b.ne	4039e8 <__libc_csu_init+0x48>  // b.any
  403a08:	ldp	x19, x20, [sp, #16]
  403a0c:	ldp	x21, x22, [sp, #32]
  403a10:	ldp	x23, x24, [sp, #48]
  403a14:	ldp	x29, x30, [sp], #64
  403a18:	ret
  403a1c:	nop

0000000000403a20 <__libc_csu_fini>:
  403a20:	ret

Disassembly of section .fini:

0000000000403a24 <_fini>:
  403a24:	stp	x29, x30, [sp, #-16]!
  403a28:	mov	x29, sp
  403a2c:	ldp	x29, x30, [sp], #16
  403a30:	ret
