
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//extcmd.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_extcmd_dispatcher-0xe8>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	ldr	x19, [x0, #64]
      10:	stp	x19, xzr, [sp, #72]
      14:	ldr	x0, [x19, #16]
      18:	str	xzr, [sp, #88]
      1c:	cbz	x0, c0 <grub_extcmd_dispatcher-0x28>
      20:	mov	x20, x2
      24:	mov	x0, x19
      28:	str	x21, [sp, #32]
      2c:	mov	w21, w1
      30:	bl	fb8 <grub_arg_list_alloc>
      34:	mov	x3, x0
      38:	mov	x2, x20
      3c:	mov	w1, w21
      40:	mov	x20, x0
      44:	add	x5, sp, #0x3c
      48:	add	x4, sp, #0x40
      4c:	mov	x0, x19
      50:	bl	7b0 <grub_arg_parse>
      54:	cbz	w0, 98 <grub_extcmd_dispatcher-0x50>
      58:	ldr	w1, [sp, #60]
      5c:	add	x0, sp, #0x48
      60:	ldr	x3, [x19, #8]
      64:	str	x20, [sp, #80]
      68:	ldr	x2, [sp, #64]
      6c:	blr	x3
      70:	mov	w19, w0
      74:	ldr	x0, [sp, #64]
      78:	bl	0 <grub_free>
      7c:	mov	x0, x20
      80:	bl	0 <grub_free>
      84:	mov	w0, w19
      88:	ldp	x19, x20, [sp, #16]
      8c:	ldr	x21, [sp, #32]
      90:	ldp	x29, x30, [sp], #96
      94:	ret
      98:	mov	x0, x20
      9c:	bl	0 <grub_free>
      a0:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
      a4:	ldr	x21, [sp, #32]
      a8:	ldr	x0, [x0]
      ac:	ldr	w19, [x0]
      b0:	mov	w0, w19
      b4:	ldp	x19, x20, [sp, #16]
      b8:	ldp	x29, x30, [sp], #96
      bc:	ret
      c0:	ldr	x3, [x19, #8]
      c4:	add	x0, sp, #0x48
      c8:	blr	x3
      cc:	mov	w19, w0
      d0:	mov	w0, w19
      d4:	ldp	x19, x20, [sp, #16]
      d8:	ldp	x29, x30, [sp], #96
      dc:	ret
	...

00000000000000e8 <grub_extcmd_dispatcher>:
      e8:	stp	x29, x30, [sp, #-96]!
      ec:	mov	x29, sp
      f0:	stp	x19, x20, [sp, #16]
      f4:	ldr	x19, [x0, #64]
      f8:	stp	x19, xzr, [sp, #72]
      fc:	ldr	x0, [x19, #16]
     100:	str	x3, [sp, #88]
     104:	cbz	x0, 1a8 <grub_extcmd_dispatcher+0xc0>
     108:	mov	x20, x2
     10c:	mov	x0, x19
     110:	str	x21, [sp, #32]
     114:	mov	w21, w1
     118:	bl	fb8 <grub_arg_list_alloc>
     11c:	mov	x3, x0
     120:	mov	x2, x20
     124:	mov	w1, w21
     128:	mov	x20, x0
     12c:	add	x5, sp, #0x3c
     130:	add	x4, sp, #0x40
     134:	mov	x0, x19
     138:	bl	7b0 <grub_arg_parse>
     13c:	cbz	w0, 180 <grub_extcmd_dispatcher+0x98>
     140:	ldr	w1, [sp, #60]
     144:	add	x0, sp, #0x48
     148:	ldr	x3, [x19, #8]
     14c:	str	x20, [sp, #80]
     150:	ldr	x2, [sp, #64]
     154:	blr	x3
     158:	mov	w19, w0
     15c:	ldr	x0, [sp, #64]
     160:	bl	0 <grub_free>
     164:	mov	x0, x20
     168:	bl	0 <grub_free>
     16c:	mov	w0, w19
     170:	ldp	x19, x20, [sp, #16]
     174:	ldr	x21, [sp, #32]
     178:	ldp	x29, x30, [sp], #96
     17c:	ret
     180:	mov	x0, x20
     184:	bl	0 <grub_free>
     188:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     18c:	ldr	x21, [sp, #32]
     190:	ldr	x0, [x0]
     194:	ldr	w19, [x0]
     198:	mov	w0, w19
     19c:	ldp	x19, x20, [sp, #16]
     1a0:	ldp	x29, x30, [sp], #96
     1a4:	ret
     1a8:	ldr	x3, [x19, #8]
     1ac:	add	x0, sp, #0x48
     1b0:	blr	x3
     1b4:	mov	w19, w0
     1b8:	mov	w0, w19
     1bc:	ldp	x19, x20, [sp, #16]
     1c0:	ldp	x29, x30, [sp], #96
     1c4:	ret
	...

00000000000001d0 <grub_register_extcmd_prio>:
     1d0:	stp	x29, x30, [sp, #-80]!
     1d4:	mov	x29, sp
     1d8:	stp	x19, x20, [sp, #16]
     1dc:	mov	w20, w2
     1e0:	stp	x21, x22, [sp, #32]
     1e4:	mov	x21, x0
     1e8:	mov	x22, x3
     1ec:	mov	x0, #0x20                  	// #32
     1f0:	stp	x23, x24, [sp, #48]
     1f4:	mov	x23, x1
     1f8:	mov	x24, x4
     1fc:	stp	x25, x26, [sp, #64]
     200:	mov	x25, x5
     204:	mov	w26, w6
     208:	bl	0 <grub_malloc>
     20c:	mov	x19, x0
     210:	cbz	x0, 248 <grub_register_extcmd_prio+0x78>
     214:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     218:	mov	w4, w26
     21c:	mov	x3, x24
     220:	mov	x2, x22
     224:	ldr	x1, [x0]
     228:	mov	x0, x21
     22c:	bl	0 <grub_register_command_prio>
     230:	cbz	x0, 264 <grub_register_extcmd_prio+0x94>
     234:	orr	w20, w20, #0x10
     238:	str	w20, [x0, #40]
     23c:	str	x19, [x0, #64]
     240:	stp	x0, x23, [x19]
     244:	stp	x25, xzr, [x19, #16]
     248:	mov	x0, x19
     24c:	ldp	x19, x20, [sp, #16]
     250:	ldp	x21, x22, [sp, #32]
     254:	ldp	x23, x24, [sp, #48]
     258:	ldp	x25, x26, [sp, #64]
     25c:	ldp	x29, x30, [sp], #80
     260:	ret
     264:	mov	x0, x19
     268:	mov	x19, #0x0                   	// #0
     26c:	bl	0 <grub_free>
     270:	b	248 <grub_register_extcmd_prio+0x78>
     274:	nop
	...

0000000000000280 <grub_register_extcmd>:
     280:	stp	x29, x30, [sp, #-80]!
     284:	mov	x29, sp
     288:	stp	x19, x20, [sp, #16]
     28c:	mov	w20, w2
     290:	stp	x21, x22, [sp, #32]
     294:	mov	x21, x0
     298:	mov	x22, x3
     29c:	mov	x0, #0x20                  	// #32
     2a0:	stp	x23, x24, [sp, #48]
     2a4:	mov	x23, x1
     2a8:	mov	x24, x4
     2ac:	str	x25, [sp, #64]
     2b0:	mov	x25, x5
     2b4:	bl	0 <grub_malloc>
     2b8:	mov	x19, x0
     2bc:	cbz	x0, 2f4 <grub_register_extcmd+0x74>
     2c0:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     2c4:	mov	x3, x24
     2c8:	mov	x2, x22
     2cc:	mov	x0, x21
     2d0:	ldr	x1, [x1]
     2d4:	mov	w4, #0x1                   	// #1
     2d8:	bl	0 <grub_register_command_prio>
     2dc:	cbz	x0, 310 <grub_register_extcmd+0x90>
     2e0:	orr	w20, w20, #0x10
     2e4:	str	w20, [x0, #40]
     2e8:	str	x19, [x0, #64]
     2ec:	stp	x0, x23, [x19]
     2f0:	stp	x25, xzr, [x19, #16]
     2f4:	mov	x0, x19
     2f8:	ldp	x19, x20, [sp, #16]
     2fc:	ldp	x21, x22, [sp, #32]
     300:	ldp	x23, x24, [sp, #48]
     304:	ldr	x25, [sp, #64]
     308:	ldp	x29, x30, [sp], #80
     30c:	ret
     310:	mov	x0, x19
     314:	mov	x19, #0x0                   	// #0
     318:	bl	0 <grub_free>
     31c:	b	2f4 <grub_register_extcmd+0x74>
	...

0000000000000328 <grub_unregister_extcmd>:
     328:	stp	x29, x30, [sp, #-32]!
     32c:	mov	x29, sp
     330:	str	x19, [sp, #16]
     334:	mov	x19, x0
     338:	ldr	x0, [x0]
     33c:	bl	0 <grub_unregister_command>
     340:	mov	x0, x19
     344:	ldr	x19, [sp, #16]
     348:	ldp	x29, x30, [sp], #32
     34c:	b	0 <grub_free>
     350:	stp	x29, x30, [sp, #-112]!
     354:	mov	x29, sp
     358:	stp	x19, x20, [sp, #16]
     35c:	mov	x19, x0
     360:	ldr	x0, [x0, #16]
     364:	stp	w2, w1, [sp, #104]
     368:	cbz	x0, 484 <grub_unregister_extcmd+0x15c>
     36c:	adrp	x3, 0 <grub_extcmd_dispatcher-0xe8>
     370:	adrp	x2, 0 <grub_extcmd_dispatcher-0xe8>
     374:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     378:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     37c:	ldr	x20, [x2]
     380:	stp	x21, x22, [sp, #32]
     384:	ldr	x21, [x3]
     388:	stp	x23, x24, [sp, #48]
     38c:	ldr	x22, [x0]
     390:	stp	x25, x26, [sp, #64]
     394:	mov	w26, #0x2                   	// #2
     398:	ldr	x23, [x1]
     39c:	adrp	x25, 0 <grub_extcmd_dispatcher-0xe8>
     3a0:	stp	x27, x28, [sp, #80]
     3a4:	adrp	x28, 0 <grub_extcmd_dispatcher-0xe8>
     3a8:	mov	w27, #0x14                  	// #20
     3ac:	nop
     3b0:	ldr	w1, [x19, #8]
     3b4:	sub	w0, w1, #0x21
     3b8:	cmp	w0, #0x5d
     3bc:	b.hi	490 <grub_unregister_extcmd+0x168>  // b.pmore
     3c0:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     3c4:	mov	w3, #0x2c                  	// #44
     3c8:	ldr	x2, [x19]
     3cc:	ldr	x0, [x0]
     3d0:	cmp	x2, #0x0
     3d4:	mov	w2, #0x20                  	// #32
     3d8:	csel	w2, w3, w2, ne  // ne = any
     3dc:	bl	0 <grub_printf>
     3e0:	ldr	x1, [x19]
     3e4:	mov	w24, #0x13                  	// #19
     3e8:	cbz	x1, 438 <grub_unregister_extcmd+0x110>
     3ec:	ldr	x0, [x28]
     3f0:	bl	0 <grub_printf>
     3f4:	ldr	x0, [x19]
     3f8:	bl	0 <grub_strlen>
     3fc:	add	x2, x0, #0x2
     400:	ldr	x1, [x19, #24]
     404:	sub	w24, w27, w2
     408:	mov	w2, w24
     40c:	cbz	x1, 42c <grub_unregister_extcmd+0x104>
     410:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     414:	ldr	x0, [x0]
     418:	bl	0 <grub_printf>
     41c:	ldr	x0, [x19, #24]
     420:	bl	0 <grub_strlen>
     424:	add	x0, x0, #0x1
     428:	sub	w2, w24, w0
     42c:	cmp	w2, #0x0
     430:	sub	w2, w2, #0x1
     434:	csel	w24, w2, w26, gt
     438:	ldr	x1, [x20]
     43c:	sub	w24, w24, #0x1
     440:	mov	x0, x21
     444:	blr	x1
     448:	cmn	w24, #0x1
     44c:	b.ne	438 <grub_unregister_extcmd+0x110>  // b.any
     450:	ldr	x1, [x23]
     454:	add	x19, x19, #0x28
     458:	ldur	x0, [x19, #-24]
     45c:	blr	x1
     460:	mov	x1, x0
     464:	mov	x0, x22
     468:	bl	0 <grub_printf>
     46c:	ldr	x0, [x19, #16]
     470:	cbnz	x0, 3b0 <grub_unregister_extcmd+0x88>
     474:	ldp	x21, x22, [sp, #32]
     478:	ldp	x23, x24, [sp, #48]
     47c:	ldp	x25, x26, [sp, #64]
     480:	ldp	x27, x28, [sp, #80]
     484:	ldp	x19, x20, [sp, #16]
     488:	ldp	x29, x30, [sp], #112
     48c:	ret
     490:	ldr	x0, [x25]
     494:	cmp	x19, x0
     498:	b.eq	4c0 <grub_unregister_extcmd+0x198>  // b.none
     49c:	ldr	w1, [sp, #104]
     4a0:	add	x0, x0, #0x28
     4a4:	cmp	w1, #0x0
     4a8:	ccmp	x19, x0, #0x0, eq  // eq = none
     4ac:	b.eq	4e0 <grub_unregister_extcmd+0x1b8>  // b.none
     4b0:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     4b4:	ldr	x0, [x0]
     4b8:	bl	0 <grub_printf>
     4bc:	b	3e0 <grub_unregister_extcmd+0xb8>
     4c0:	ldr	w0, [sp, #108]
     4c4:	cbnz	w0, 4b0 <grub_unregister_extcmd+0x188>
     4c8:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     4cc:	ldr	x0, [x0]
     4d0:	bl	0 <grub_printf>
     4d4:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     4d8:	ldr	x1, [x0]
     4dc:	b	3ec <grub_unregister_extcmd+0xc4>
     4e0:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     4e4:	ldr	x0, [x0]
     4e8:	bl	0 <grub_printf>
     4ec:	b	3e0 <grub_unregister_extcmd+0xb8>
	...

0000000000000550 <grub_arg_show_help>:
     550:	stp	x29, x30, [sp, #-48]!
     554:	adrp	x2, 0 <grub_extcmd_dispatcher-0xe8>
     558:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     55c:	mov	x29, sp
     560:	stp	x19, x20, [sp, #16]
     564:	mov	x19, x0
     568:	ldr	x20, [x2]
     56c:	stp	x21, x22, [sp, #32]
     570:	ldr	x0, [x1]
     574:	ldr	x1, [x20]
     578:	blr	x1
     57c:	mov	x21, x0
     580:	ldr	x1, [x19]
     584:	ldr	x2, [x20]
     588:	ldr	x0, [x1, #48]
     58c:	ldr	x22, [x1, #16]
     590:	blr	x2
     594:	mov	x3, x0
     598:	adrp	x4, 0 <grub_extcmd_dispatcher-0xe8>
     59c:	mov	x2, x22
     5a0:	mov	x1, x21
     5a4:	ldr	x0, [x4]
     5a8:	bl	0 <grub_printf>
     5ac:	ldr	x0, [x19]
     5b0:	ldr	x1, [x20]
     5b4:	ldr	x0, [x0, #56]
     5b8:	blr	x1
     5bc:	mov	x1, x0
     5c0:	adrp	x2, 0 <grub_extcmd_dispatcher-0xe8>
     5c4:	ldr	x0, [x2]
     5c8:	bl	0 <grub_printf>
     5cc:	ldr	x0, [x19, #16]
     5d0:	cbz	x0, 64c <grub_arg_show_help+0xfc>
     5d4:	ldr	x1, [x0, #16]
     5d8:	cbz	x1, 658 <grub_arg_show_help+0x108>
     5dc:	mov	x3, x0
     5e0:	mov	w19, #0x0                   	// #0
     5e4:	mov	w20, #0x0                   	// #0
     5e8:	mov	w5, #0x1                   	// #1
     5ec:	b	604 <grub_arg_show_help+0xb4>
     5f0:	ldr	x2, [x3, #56]
     5f4:	cmp	w4, #0x75
     5f8:	add	x3, x3, #0x28
     5fc:	csel	w19, w19, w5, ne  // ne = any
     600:	cbz	x2, 620 <grub_arg_show_help+0xd0>
     604:	ldr	w4, [x3, #8]
     608:	cmp	w4, #0x68
     60c:	b.ne	5f0 <grub_arg_show_help+0xa0>  // b.any
     610:	ldr	x2, [x3, #56]
     614:	add	x3, x3, #0x28
     618:	mov	w20, #0x1                   	// #1
     61c:	cbnz	x2, 604 <grub_arg_show_help+0xb4>
     620:	mov	w2, w19
     624:	mov	w1, w20
     628:	bl	350 <grub_unregister_extcmd+0x28>
     62c:	mov	w2, w19
     630:	mov	w1, w20
     634:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     638:	ldp	x19, x20, [sp, #16]
     63c:	ldp	x21, x22, [sp, #32]
     640:	ldp	x29, x30, [sp], #48
     644:	ldr	x0, [x0]
     648:	b	350 <grub_unregister_extcmd+0x28>
     64c:	mov	w19, #0x0                   	// #0
     650:	mov	w20, #0x0                   	// #0
     654:	b	62c <grub_arg_show_help+0xdc>
     658:	mov	w19, #0x0                   	// #0
     65c:	mov	w20, #0x0                   	// #0
     660:	b	620 <grub_arg_show_help+0xd0>
     664:	nop
	...
     690:	stp	x29, x30, [sp, #-32]!
     694:	adrp	x4, 0 <grub_extcmd_dispatcher-0xe8>
     698:	mov	x29, sp
     69c:	ldr	x4, [x4]
     6a0:	cmp	x1, x4
     6a4:	b.eq	784 <grub_arg_show_help+0x234>  // b.none
     6a8:	stp	x19, x20, [sp, #16]
     6ac:	add	x4, x4, #0x28
     6b0:	mov	x19, x0
     6b4:	cmp	x1, x4
     6b8:	b.eq	730 <grub_arg_show_help+0x1e0>  // b.none
     6bc:	ldr	x0, [x0, #16]
     6c0:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
     6c4:	ldr	w4, [x1, #12]
     6c8:	movk	x5, #0xcccd
     6cc:	sub	x1, x1, x0
     6d0:	and	w0, w4, #0x4
     6d4:	asr	x1, x1, #3
     6d8:	mul	x1, x1, x5
     6dc:	sbfiz	x1, x1, #4, #32
     6e0:	add	x5, x3, x1
     6e4:	tbnz	w4, #2, 700 <grub_arg_show_help+0x1b0>
     6e8:	mov	w4, #0x1                   	// #1
     6ec:	str	w4, [x3, x1]
     6f0:	ldp	x19, x20, [sp, #16]
     6f4:	str	x2, [x5, #8]
     6f8:	ldp	x29, x30, [sp], #32
     6fc:	ret
     700:	ldr	w4, [x3, x1]
     704:	mov	w0, #0x0                   	// #0
     708:	ldr	x6, [x5, #8]
     70c:	add	w7, w4, #0x1
     710:	ldp	x19, x20, [sp, #16]
     714:	str	w7, [x3, x1]
     718:	str	x2, [x6, w4, sxtw #3]
     71c:	ldr	x1, [x5, #8]
     720:	add	x4, x1, w4, sxtw #3
     724:	str	xzr, [x4, #8]
     728:	ldp	x29, x30, [sp], #32
     72c:	ret
     730:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     734:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     738:	ldr	x20, [x1]
     73c:	ldr	x0, [x0]
     740:	ldr	x1, [x20]
     744:	blr	x1
     748:	ldr	x1, [x19]
     74c:	mov	x19, x0
     750:	ldr	x2, [x20]
     754:	ldr	x0, [x1, #48]
     758:	ldr	x20, [x1, #16]
     75c:	blr	x2
     760:	mov	x3, x0
     764:	adrp	x4, 0 <grub_extcmd_dispatcher-0xe8>
     768:	mov	x2, x20
     76c:	mov	x1, x19
     770:	ldr	x0, [x4]
     774:	bl	0 <grub_printf>
     778:	mov	w0, #0xffffffff            	// #-1
     77c:	ldp	x19, x20, [sp, #16]
     780:	b	6f8 <grub_arg_show_help+0x1a8>
     784:	bl	550 <grub_arg_show_help>
     788:	mov	w0, #0xffffffff            	// #-1
     78c:	b	6f8 <grub_arg_show_help+0x1a8>
	...

00000000000007b0 <grub_arg_parse>:
     7b0:	stp	x29, x30, [sp, #-176]!
     7b4:	cmp	w1, #0x0
     7b8:	mov	x29, sp
     7bc:	stp	x27, x28, [sp, #80]
     7c0:	stp	x4, x5, [sp, #104]
     7c4:	b.le	c00 <grub_arg_parse+0x450>
     7c8:	stp	x21, x22, [sp, #32]
     7cc:	mov	x21, x2
     7d0:	mov	x22, x0
     7d4:	stp	x19, x20, [sp, #16]
     7d8:	mov	w7, #0x0                   	// #0
     7dc:	mov	w20, w1
     7e0:	stp	x23, x24, [sp, #48]
     7e4:	mov	x19, x3
     7e8:	mov	x24, #0x0                   	// #0
     7ec:	stp	x25, x26, [sp, #64]
     7f0:	mov	w26, #0x0                   	// #0
     7f4:	sbfiz	x8, x26, #3, #32
     7f8:	adrp	x25, 0 <grub_extcmd_dispatcher-0xe8>
     7fc:	ldr	x23, [x21, w26, sxtw #3]
     800:	cbz	w7, 858 <grub_arg_parse+0xa8>
     804:	ldr	x0, [x22]
     808:	ldr	w0, [x0, #40]
     80c:	tbz	w0, #8, 858 <grub_arg_parse+0xa8>
     810:	add	w27, w7, #0x2
     814:	mov	x0, x24
     818:	add	w28, w7, #0x1
     81c:	sbfiz	x27, x27, #3, #32
     820:	mov	x1, x27
     824:	bl	0 <grub_realloc>
     828:	mov	x2, x0
     82c:	cbz	x0, a20 <grub_arg_parse+0x270>
     830:	add	x27, x2, x27
     834:	stp	x23, xzr, [x27, #-16]
     838:	add	w26, w26, #0x1
     83c:	cmp	w20, w26
     840:	b.le	c20 <grub_arg_parse+0x470>
     844:	mov	w7, w28
     848:	mov	x24, x2
     84c:	sbfiz	x8, x26, #3, #32
     850:	ldr	x23, [x21, w26, sxtw #3]
     854:	cbnz	w7, 804 <grub_arg_parse+0x54>
     858:	ldrb	w0, [x23]
     85c:	cmp	w0, #0x2d
     860:	b.ne	810 <grub_arg_parse+0x60>  // b.any
     864:	mov	x0, x23
     868:	str	x8, [sp, #120]
     86c:	str	w7, [sp, #128]
     870:	bl	0 <grub_strlen>
     874:	ldr	w7, [sp, #128]
     878:	cmp	x0, #0x1
     87c:	ldr	x8, [sp, #120]
     880:	b.eq	810 <grub_arg_parse+0x60>  // b.none
     884:	ldrb	w10, [x23, #1]
     888:	cmp	w10, #0x2d
     88c:	b.eq	a94 <grub_arg_parse+0x2e4>  // b.none
     890:	ldr	x0, [x22]
     894:	add	x9, x23, #0x1
     898:	ldr	x11, [x22, #16]
     89c:	ldr	w0, [x0, #40]
     8a0:	tbz	w0, #7, 8e4 <grub_arg_parse+0x134>
     8a4:	cbz	w10, 8e4 <grub_arg_parse+0x134>
     8a8:	mov	x3, x9
     8ac:	mov	w2, w10
     8b0:	cbz	x11, 9f0 <grub_arg_parse+0x240>
     8b4:	ldr	x0, [x11, #16]
     8b8:	cbz	x0, 9f0 <grub_arg_parse+0x240>
     8bc:	mov	x0, x11
     8c0:	b	8cc <grub_arg_parse+0x11c>
     8c4:	ldr	x1, [x0, #16]
     8c8:	cbz	x1, 9f0 <grub_arg_parse+0x240>
     8cc:	ldr	w1, [x0, #8]
     8d0:	add	x0, x0, #0x28
     8d4:	cmp	w1, w2
     8d8:	b.ne	8c4 <grub_arg_parse+0x114>  // b.any
     8dc:	ldrb	w2, [x3, #1]!
     8e0:	cbnz	w2, 8b0 <grub_arg_parse+0x100>
     8e4:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     8e8:	mov	w12, #0x1                   	// #1
     8ec:	ldr	x27, [x0]
     8f0:	ldr	w2, [x27]
     8f4:	cbz	x11, 990 <grub_arg_parse+0x1e0>
     8f8:	ldr	x0, [x11, #16]
     8fc:	cbz	x0, 990 <grub_arg_parse+0x1e0>
     900:	mov	x28, x11
     904:	b	914 <grub_arg_parse+0x164>
     908:	ldr	x0, [x28, #56]
     90c:	add	x28, x28, #0x28
     910:	cbz	x0, 990 <grub_arg_parse+0x1e0>
     914:	ldr	w0, [x28, #8]
     918:	cmp	w0, w10
     91c:	b.ne	908 <grub_arg_parse+0x158>  // b.any
     920:	ldrb	w0, [x9, #1]!
     924:	cbz	w0, e6c <grub_arg_parse+0x6bc>
     928:	ldr	x0, [x25]
     92c:	cmp	x28, x0
     930:	b.eq	a6c <grub_arg_parse+0x2bc>  // b.none
     934:	add	x0, x0, #0x28
     938:	cmp	x28, x0
     93c:	b.eq	d58 <grub_arg_parse+0x5a8>  // b.none
     940:	sub	x0, x28, x11
     944:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
     948:	movk	x3, #0xcccd
     94c:	ldr	w1, [x28, #12]
     950:	asr	x0, x0, #3
     954:	mul	x0, x0, x3
     958:	sbfiz	x0, x0, #4, #32
     95c:	add	x3, x19, x0
     960:	tbz	w1, #2, 9e4 <grub_arg_parse+0x234>
     964:	ldr	w1, [x19, x0]
     968:	ldr	x10, [x3, #8]
     96c:	add	w13, w1, #0x1
     970:	str	w13, [x19, x0]
     974:	str	xzr, [x10, w1, sxtw #3]
     978:	ldr	x0, [x3, #8]
     97c:	add	x1, x0, w1, sxtw #3
     980:	str	xzr, [x1, #8]
     984:	cbnz	w2, a40 <grub_arg_parse+0x290>
     988:	ldrb	w10, [x9]
     98c:	cbnz	x11, 8f8 <grub_arg_parse+0x148>
     990:	cmp	w10, #0x68
     994:	b.eq	a64 <grub_arg_parse+0x2b4>  // b.none
     998:	cmp	w10, #0x75
     99c:	b.ne	bcc <grub_arg_parse+0x41c>  // b.any
     9a0:	ldrb	w0, [x9, #1]
     9a4:	cbnz	w0, d58 <grub_arg_parse+0x5a8>
     9a8:	ldr	x3, [x25]
     9ac:	add	x28, x3, #0x28
     9b0:	mov	x1, x28
     9b4:	mov	x3, x19
     9b8:	mov	x2, #0x0                   	// #0
     9bc:	str	w7, [sp, #120]
     9c0:	mov	x0, x22
     9c4:	bl	690 <grub_arg_show_help+0x140>
     9c8:	ldr	w1, [x27]
     9cc:	orr	w0, w0, w1
     9d0:	cbnz	w0, a40 <grub_arg_parse+0x290>
     9d4:	ldr	w7, [sp, #120]
     9d8:	mov	x2, x24
     9dc:	mov	w28, w7
     9e0:	b	838 <grub_arg_parse+0x88>
     9e4:	str	w12, [x19, x0]
     9e8:	str	xzr, [x3, #8]
     9ec:	b	984 <grub_arg_parse+0x1d4>
     9f0:	cmp	w2, #0x68
     9f4:	b.eq	8dc <grub_arg_parse+0x12c>  // b.none
     9f8:	cmp	w2, #0x75
     9fc:	b.eq	8dc <grub_arg_parse+0x12c>  // b.none
     a00:	add	w27, w7, #0x2
     a04:	mov	x0, x24
     a08:	add	w28, w7, #0x1
     a0c:	sbfiz	x27, x27, #3, #32
     a10:	mov	x1, x27
     a14:	bl	0 <grub_realloc>
     a18:	mov	x2, x0
     a1c:	cbnz	x0, 830 <grub_arg_parse+0x80>
     a20:	mov	x0, x24
     a24:	str	x2, [sp, #120]
     a28:	bl	0 <grub_free>
     a2c:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     a30:	ldr	x2, [sp, #120]
     a34:	ldr	x27, [x0]
     a38:	ldr	w0, [x27]
     a3c:	cbz	w0, 838 <grub_arg_parse+0x88>
     a40:	ldp	x19, x20, [sp, #16]
     a44:	mov	w9, #0x0                   	// #0
     a48:	ldp	x21, x22, [sp, #32]
     a4c:	ldp	x23, x24, [sp, #48]
     a50:	ldp	x25, x26, [sp, #64]
     a54:	mov	w0, w9
     a58:	ldp	x27, x28, [sp, #80]
     a5c:	ldp	x29, x30, [sp], #176
     a60:	ret
     a64:	ldrb	w0, [x9, #1]
     a68:	cbz	w0, f68 <grub_arg_parse+0x7b8>
     a6c:	mov	w9, #0x0                   	// #0
     a70:	mov	x0, x22
     a74:	str	w9, [sp, #104]
     a78:	bl	550 <grub_arg_show_help>
     a7c:	ldr	w9, [sp, #104]
     a80:	ldp	x19, x20, [sp, #16]
     a84:	ldp	x21, x22, [sp, #32]
     a88:	ldp	x23, x24, [sp, #48]
     a8c:	ldp	x25, x26, [sp, #64]
     a90:	b	a54 <grub_arg_parse+0x2a4>
     a94:	mov	x0, x23
     a98:	str	x8, [sp, #120]
     a9c:	str	w7, [sp, #128]
     aa0:	bl	0 <grub_strlen>
     aa4:	ldr	w7, [sp, #128]
     aa8:	cmp	x0, #0x2
     aac:	ldr	x8, [sp, #120]
     ab0:	b.eq	dac <grub_arg_parse+0x5fc>  // b.none
     ab4:	mov	x0, x23
     ab8:	mov	w1, #0x3d                  	// #61
     abc:	str	x8, [sp, #120]
     ac0:	str	w7, [sp, #128]
     ac4:	bl	0 <grub_strchr>
     ac8:	str	x0, [sp, #144]
     acc:	ldr	w7, [sp, #128]
     ad0:	ldr	x8, [sp, #120]
     ad4:	cbz	x0, ccc <grub_arg_parse+0x51c>
     ad8:	sub	x27, x0, x23
     adc:	add	x0, x0, #0x1
     ae0:	sub	w1, w27, #0x2
     ae4:	str	x0, [sp, #144]
     ae8:	str	w1, [sp, #156]
     aec:	ldr	x28, [x22, #16]
     af0:	add	x27, x23, #0x2
     af4:	cbz	x28, b50 <grub_arg_parse+0x3a0>
     af8:	ldr	x0, [x28, #16]
     afc:	cbz	x0, b50 <grub_arg_parse+0x3a0>
     b00:	ldrsw	x10, [sp, #156]
     b04:	nop
     b08:	ldr	x0, [x28]
     b0c:	mov	x2, x10
     b10:	mov	x1, x27
     b14:	cbz	x0, b44 <grub_arg_parse+0x394>
     b18:	str	x8, [sp, #120]
     b1c:	str	w7, [sp, #128]
     b20:	str	x10, [sp, #136]
     b24:	bl	0 <grub_strncmp>
     b28:	ldr	w7, [sp, #128]
     b2c:	ldr	x8, [sp, #120]
     b30:	ldr	x10, [sp, #136]
     b34:	cbnz	w0, b44 <grub_arg_parse+0x394>
     b38:	ldr	x0, [x28]
     b3c:	ldrb	w0, [x0, x10]
     b40:	cbz	w0, c34 <grub_arg_parse+0x484>
     b44:	ldr	x0, [x28, #56]
     b48:	add	x28, x28, #0x28
     b4c:	cbnz	x0, b08 <grub_arg_parse+0x358>
     b50:	ldr	x28, [x25]
     b54:	ldrsw	x3, [sp, #156]
     b58:	ldr	x0, [x28]
     b5c:	mov	x2, x3
     b60:	mov	x1, x27
     b64:	cbz	x0, b94 <grub_arg_parse+0x3e4>
     b68:	str	x8, [sp, #120]
     b6c:	str	w7, [sp, #128]
     b70:	str	x3, [sp, #136]
     b74:	bl	0 <grub_strncmp>
     b78:	ldr	w7, [sp, #128]
     b7c:	ldr	x8, [sp, #120]
     b80:	ldr	x3, [sp, #136]
     b84:	cbnz	w0, b94 <grub_arg_parse+0x3e4>
     b88:	ldr	x0, [x28]
     b8c:	ldrb	w0, [x0, x3]
     b90:	cbz	w0, c34 <grub_arg_parse+0x484>
     b94:	ldr	x0, [x28, #56]
     b98:	add	x28, x28, #0x28
     b9c:	cbnz	x0, b58 <grub_arg_parse+0x3a8>
     ba0:	ldr	x0, [x22]
     ba4:	ldr	w0, [x0, #40]
     ba8:	tbnz	w0, #7, 810 <grub_arg_parse+0x60>
     bac:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     bb0:	mov	w9, #0x0                   	// #0
     bb4:	mov	x2, x23
     bb8:	mov	w0, #0x12                  	// #18
     bbc:	ldr	x1, [x1]
     bc0:	str	w9, [sp, #104]
     bc4:	bl	0 <grub_error>
     bc8:	b	a7c <grub_arg_parse+0x2cc>
     bcc:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     bd0:	mov	w1, #0x2d                  	// #45
     bd4:	strb	w1, [sp, #168]
     bd8:	add	x2, sp, #0xa8
     bdc:	ldr	x1, [x0]
     be0:	mov	w0, #0x12                  	// #18
     be4:	ldrb	w3, [x9]
     be8:	mov	w9, #0x0                   	// #0
     bec:	str	w9, [sp, #104]
     bf0:	strb	w3, [sp, #169]
     bf4:	strb	wzr, [sp, #170]
     bf8:	bl	0 <grub_error>
     bfc:	b	a7c <grub_arg_parse+0x2cc>
     c00:	mov	w28, #0x0                   	// #0
     c04:	mov	x2, #0x0                   	// #0
     c08:	ldr	x0, [sp, #104]
     c0c:	mov	w9, #0x1                   	// #1
     c10:	str	x2, [x0]
     c14:	ldr	x0, [sp, #112]
     c18:	str	w28, [x0]
     c1c:	b	a54 <grub_arg_parse+0x2a4>
     c20:	ldp	x19, x20, [sp, #16]
     c24:	ldp	x21, x22, [sp, #32]
     c28:	ldp	x23, x24, [sp, #48]
     c2c:	ldp	x25, x26, [sp, #64]
     c30:	b	c08 <grub_arg_parse+0x458>
     c34:	ldr	x0, [sp, #144]
     c38:	cbz	x0, cf0 <grub_arg_parse+0x540>
     c3c:	ldr	w0, [x28, #32]
     c40:	cbz	w0, e4c <grub_arg_parse+0x69c>
     c44:	cmp	w0, #0x2
     c48:	b.eq	c68 <grub_arg_parse+0x4b8>  // b.none
     c4c:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     c50:	ldr	x27, [x0]
     c54:	mov	x1, x28
     c58:	mov	x3, x19
     c5c:	str	w7, [sp, #120]
     c60:	ldr	x2, [sp, #144]
     c64:	b	9c0 <grub_arg_parse+0x210>
     c68:	ldr	x27, [sp, #144]
     c6c:	add	x1, sp, #0xa8
     c70:	mov	w2, #0x0                   	// #0
     c74:	str	w7, [sp, #120]
     c78:	mov	x0, x27
     c7c:	bl	0 <grub_strtoull>
     c80:	ldr	x0, [sp, #168]
     c84:	cmp	x0, #0x0
     c88:	ccmp	x0, x27, #0x4, ne  // ne = any
     c8c:	b.eq	cac <grub_arg_parse+0x4fc>  // b.none
     c90:	ldrb	w0, [x0]
     c94:	cbnz	w0, cac <grub_arg_parse+0x4fc>
     c98:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     c9c:	ldr	w7, [sp, #120]
     ca0:	ldr	x27, [x0]
     ca4:	ldr	w0, [x27]
     ca8:	cbz	w0, c54 <grub_arg_parse+0x4a4>
     cac:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     cb0:	mov	w9, #0x0                   	// #0
     cb4:	mov	x2, x23
     cb8:	mov	w0, #0x12                  	// #18
     cbc:	ldr	x1, [x1]
     cc0:	str	w9, [sp, #104]
     cc4:	bl	0 <grub_error>
     cc8:	b	a7c <grub_arg_parse+0x2cc>
     ccc:	mov	x0, x23
     cd0:	str	x8, [sp, #120]
     cd4:	str	w7, [sp, #128]
     cd8:	bl	0 <grub_strlen>
     cdc:	ldr	w7, [sp, #128]
     ce0:	sub	w0, w0, #0x2
     ce4:	str	w0, [sp, #156]
     ce8:	ldr	x8, [sp, #120]
     cec:	b	aec <grub_arg_parse+0x33c>
     cf0:	add	x8, x8, #0x8
     cf4:	ldr	x1, [x21, x8]
     cf8:	cbz	x1, d44 <grub_arg_parse+0x594>
     cfc:	ldrb	w0, [x1]
     d00:	cmp	w0, #0x2d
     d04:	b.eq	d44 <grub_arg_parse+0x594>  // b.none
     d08:	ldr	w0, [x28, #32]
     d0c:	cbz	w0, d4c <grub_arg_parse+0x59c>
     d10:	add	w26, w26, #0x1
     d14:	str	x1, [sp, #144]
     d18:	cbnz	x1, c44 <grub_arg_parse+0x494>
     d1c:	ldr	w9, [x28, #12]
     d20:	and	w9, w9, #0x2
     d24:	cbnz	w9, d4c <grub_arg_parse+0x59c>
     d28:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     d2c:	mov	w0, #0x12                  	// #18
     d30:	ldr	x2, [x28]
     d34:	str	w9, [sp, #104]
     d38:	ldr	x1, [x1]
     d3c:	bl	0 <grub_error>
     d40:	b	a7c <grub_arg_parse+0x2cc>
     d44:	ldr	w0, [x28, #32]
     d48:	cbnz	w0, d1c <grub_arg_parse+0x56c>
     d4c:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     d50:	ldr	x27, [x0]
     d54:	b	9b0 <grub_arg_parse+0x200>
     d58:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     d5c:	adrp	x0, 0 <grub_extcmd_dispatcher-0xe8>
     d60:	mov	w9, #0x0                   	// #0
     d64:	str	w9, [sp, #104]
     d68:	ldr	x20, [x1]
     d6c:	ldr	x0, [x0]
     d70:	ldr	x1, [x20]
     d74:	blr	x1
     d78:	mov	x19, x0
     d7c:	ldr	x1, [x22]
     d80:	ldr	x2, [x20]
     d84:	ldr	x0, [x1, #48]
     d88:	ldr	x20, [x1, #16]
     d8c:	blr	x2
     d90:	mov	x3, x0
     d94:	adrp	x4, 0 <grub_extcmd_dispatcher-0xe8>
     d98:	mov	x2, x20
     d9c:	mov	x1, x19
     da0:	ldr	x0, [x4]
     da4:	bl	0 <grub_printf>
     da8:	b	a7c <grub_arg_parse+0x2cc>
     dac:	add	w0, w26, #0x1
     db0:	cmp	w20, w0
     db4:	b.le	f4c <grub_arg_parse+0x79c>
     db8:	sxtw	x0, w7
     dbc:	mov	x1, #0xfffffffffffffff8    	// #-8
     dc0:	add	x19, x0, #0x2
     dc4:	add	w20, w7, w20
     dc8:	sub	w20, w20, w26
     dcc:	mov	x2, x24
     dd0:	madd	x0, x0, x1, x8
     dd4:	add	w25, w7, #0x1
     dd8:	lsl	x19, x19, #3
     ddc:	adrp	x22, 0 <grub_extcmd_dispatcher-0xe8>
     de0:	add	x0, x0, x1
     de4:	add	x21, x21, x0
     de8:	b	e00 <grub_arg_parse+0x650>
     dec:	add	x0, x1, x19
     df0:	stp	x26, xzr, [x0, #-16]
     df4:	add	x19, x19, #0x8
     df8:	cmp	w20, w25
     dfc:	b.eq	c20 <grub_arg_parse+0x470>  // b.none
     e00:	mov	x1, x19
     e04:	mov	x0, x2
     e08:	str	x2, [sp, #120]
     e0c:	mov	w28, w25
     e10:	ldr	x26, [x21, x19]
     e14:	bl	0 <grub_realloc>
     e18:	ldr	x2, [sp, #120]
     e1c:	mov	x1, x0
     e20:	add	w25, w25, #0x1
     e24:	mov	x0, x2
     e28:	mov	x2, x1
     e2c:	cbnz	x1, dec <grub_arg_parse+0x63c>
     e30:	str	x1, [sp, #120]
     e34:	bl	0 <grub_free>
     e38:	ldr	x0, [x22]
     e3c:	ldr	x2, [sp, #120]
     e40:	ldr	w0, [x0]
     e44:	cbz	w0, df4 <grub_arg_parse+0x644>
     e48:	b	a40 <grub_arg_parse+0x290>
     e4c:	adrp	x1, 0 <grub_extcmd_dispatcher-0xe8>
     e50:	mov	w9, #0x0                   	// #0
     e54:	mov	x2, x23
     e58:	mov	w0, #0x12                  	// #18
     e5c:	ldr	x1, [x1]
     e60:	str	w9, [sp, #104]
     e64:	bl	0 <grub_error>
     e68:	b	a7c <grub_arg_parse+0x2cc>
     e6c:	ldr	w0, [x28, #32]
     e70:	cbz	w0, 9b0 <grub_arg_parse+0x200>
     e74:	ldr	w9, [x28, #12]
     e78:	add	w10, w26, #0x1
     e7c:	cmp	w10, w20
     e80:	and	w9, w9, #0x2
     e84:	b.ge	d24 <grub_arg_parse+0x574>  // b.tcont
     e88:	cbnz	w9, ea0 <grub_arg_parse+0x6f0>
     e8c:	add	x8, x21, x8
     e90:	mov	w26, w10
     e94:	ldr	x1, [x8, #8]
     e98:	str	x1, [sp, #144]
     e9c:	b	d18 <grub_arg_parse+0x568>
     ea0:	add	x2, x21, x8
     ea4:	str	w10, [sp, #136]
     ea8:	str	w7, [sp, #144]
     eac:	ldr	x1, [x2, #8]
     eb0:	stp	x1, x2, [sp, #120]
     eb4:	mov	x0, x1
     eb8:	bl	0 <grub_strlen>
     ebc:	cmp	x0, #0x1
     ec0:	ldr	w10, [sp, #136]
     ec4:	ldr	w7, [sp, #144]
     ec8:	ldp	x1, x2, [sp, #120]
     ecc:	b.ls	ef8 <grub_arg_parse+0x748>  // b.plast
     ed0:	ldrb	w1, [x1]
     ed4:	ldr	w0, [x28, #32]
     ed8:	cmp	w1, #0x2d
     edc:	b.eq	f00 <grub_arg_parse+0x750>  // b.none
     ee0:	ldr	x1, [x2, #8]
     ee4:	str	x1, [sp, #144]
     ee8:	cbnz	w0, f44 <grub_arg_parse+0x794>
     eec:	cbnz	x1, e4c <grub_arg_parse+0x69c>
     ef0:	mov	w26, w10
     ef4:	b	9b0 <grub_arg_parse+0x200>
     ef8:	ldr	w0, [x28, #32]
     efc:	b	ee0 <grub_arg_parse+0x730>
     f00:	cbnz	w0, d1c <grub_arg_parse+0x56c>
     f04:	mov	x1, x28
     f08:	mov	x3, x19
     f0c:	mov	x0, x22
     f10:	mov	x2, #0x0                   	// #0
     f14:	str	w10, [sp, #120]
     f18:	str	w7, [sp, #128]
     f1c:	bl	690 <grub_arg_show_help+0x140>
     f20:	ldr	w1, [x27]
     f24:	ldr	w10, [sp, #120]
     f28:	ldr	w7, [sp, #128]
     f2c:	orr	w0, w0, w1
     f30:	cbnz	w0, a40 <grub_arg_parse+0x290>
     f34:	mov	w26, w10
     f38:	mov	w28, w7
     f3c:	mov	x2, x24
     f40:	b	844 <grub_arg_parse+0x94>
     f44:	mov	w26, w10
     f48:	b	d18 <grub_arg_parse+0x568>
     f4c:	mov	x2, x24
     f50:	mov	w28, w7
     f54:	ldp	x19, x20, [sp, #16]
     f58:	ldp	x21, x22, [sp, #32]
     f5c:	ldp	x23, x24, [sp, #48]
     f60:	ldp	x25, x26, [sp, #64]
     f64:	b	c08 <grub_arg_parse+0x458>
     f68:	ldr	x28, [x25]
     f6c:	b	9b0 <grub_arg_parse+0x200>
	...

0000000000000fb8 <grub_arg_list_alloc>:
     fb8:	stp	x29, x30, [sp, #-48]!
     fbc:	mov	x29, sp
     fc0:	stp	x19, x20, [sp, #16]
     fc4:	ldr	x19, [x0, #16]
     fc8:	cbz	x19, 10a8 <grub_arg_list_alloc+0xf0>
     fcc:	ldr	x0, [x19, #16]
     fd0:	str	x21, [sp, #32]
     fd4:	mov	w21, w1
     fd8:	cbz	x0, 10b8 <grub_arg_list_alloc+0x100>
     fdc:	sxtw	x6, w1
     fe0:	mov	x20, #0x1                   	// #1
     fe4:	add	x6, x6, #0x1
     fe8:	add	x2, x19, #0xc
     fec:	mov	x0, #0x0                   	// #0
     ff0:	lsr	x6, x6, #1
     ff4:	add	x6, x6, x20
     ff8:	b	1000 <grub_arg_list_alloc+0x48>
     ffc:	mov	x20, x7
    1000:	mov	x3, x2
    1004:	ldr	w5, [x2], #40
    1008:	add	x4, x0, x6
    100c:	add	x7, x20, #0x1
    1010:	ldur	x3, [x3, #44]
    1014:	tst	x5, #0x4
    1018:	csel	x0, x4, x0, ne  // ne = any
    101c:	cbnz	x3, ffc <grub_arg_list_alloc+0x44>
    1020:	add	x0, x0, x20, lsl #1
    1024:	lsl	x0, x0, #3
    1028:	bl	0 <grub_zalloc>
    102c:	cbz	x0, 10a4 <grub_arg_list_alloc+0xec>
    1030:	ldr	x1, [x19, #16]
    1034:	add	x20, x0, x20, lsl #4
    1038:	cbz	x1, 1080 <grub_arg_list_alloc+0xc8>
    103c:	sxtw	x5, w21
    1040:	add	x1, x19, #0xc
    1044:	add	x2, x0, #0x8
    1048:	lsr	x5, x5, #1
    104c:	add	x5, x5, #0x1
    1050:	lsl	x5, x5, #3
    1054:	nop
    1058:	stur	wzr, [x2, #-8]
    105c:	mov	x3, x1
    1060:	str	xzr, [x2]
    1064:	ldr	w4, [x1]
    1068:	tbz	w4, #2, 1090 <grub_arg_list_alloc+0xd8>
    106c:	str	x20, [x2], #16
    1070:	add	x1, x1, #0x28
    1074:	add	x20, x20, x5
    1078:	ldur	x3, [x3, #44]
    107c:	cbnz	x3, 1058 <grub_arg_list_alloc+0xa0>
    1080:	ldp	x19, x20, [sp, #16]
    1084:	ldr	x21, [sp, #32]
    1088:	ldp	x29, x30, [sp], #48
    108c:	ret
    1090:	ldur	x3, [x3, #44]
    1094:	add	x1, x1, #0x28
    1098:	add	x2, x2, #0x10
    109c:	cbnz	x3, 1058 <grub_arg_list_alloc+0xa0>
    10a0:	b	1080 <grub_arg_list_alloc+0xc8>
    10a4:	ldr	x21, [sp, #32]
    10a8:	mov	x0, #0x0                   	// #0
    10ac:	ldp	x19, x20, [sp, #16]
    10b0:	ldp	x29, x30, [sp], #48
    10b4:	ret
    10b8:	mov	x0, #0x0                   	// #0
    10bc:	mov	x20, #0x0                   	// #0
    10c0:	b	1028 <grub_arg_list_alloc+0x70>
