
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-quotacheck_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400958 <_init>:
  400958:	stp	x29, x30, [sp, #-16]!
  40095c:	mov	x29, sp
  400960:	bl	400af0 <call_weak_fn>
  400964:	ldp	x29, x30, [sp], #16
  400968:	ret

Disassembly of section .plt:

0000000000400970 <.plt>:
  400970:	stp	x16, x30, [sp, #-16]!
  400974:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400978:	ldr	x17, [x16, #3936]
  40097c:	add	x16, x16, #0xf60
  400980:	br	x17
  400984:	nop
  400988:	nop
  40098c:	nop

0000000000400990 <__libc_start_main@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400994:	ldr	x17, [x16, #3944]
  400998:	add	x16, x16, #0xf68
  40099c:	br	x17

00000000004009a0 <__gmon_start__@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  4009a4:	ldr	x17, [x16, #3952]
  4009a8:	add	x16, x16, #0xf70
  4009ac:	br	x17

00000000004009b0 <polkit_agent_close@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  4009b4:	ldr	x17, [x16, #3960]
  4009b8:	add	x16, x16, #0xf78
  4009bc:	br	x17

00000000004009c0 <log_setup_service@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  4009c4:	ldr	x17, [x16, #3968]
  4009c8:	add	x16, x16, #0xf80
  4009cc:	br	x17

00000000004009d0 <_exit@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  4009d4:	ldr	x17, [x16, #3976]
  4009d8:	add	x16, x16, #0xf88
  4009dc:	br	x17

00000000004009e0 <umask@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  4009e4:	ldr	x17, [x16, #3984]
  4009e8:	add	x16, x16, #0xf90
  4009ec:	br	x17

00000000004009f0 <access@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  4009f4:	ldr	x17, [x16, #3992]
  4009f8:	add	x16, x16, #0xf98
  4009fc:	br	x17

0000000000400a00 <abort@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a04:	ldr	x17, [x16, #4000]
  400a08:	add	x16, x16, #0xfa0
  400a0c:	br	x17

0000000000400a10 <ask_password_agent_close@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a14:	ldr	x17, [x16, #4008]
  400a18:	add	x16, x16, #0xfa8
  400a1c:	br	x17

0000000000400a20 <pager_close@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a24:	ldr	x17, [x16, #4016]
  400a28:	add	x16, x16, #0xfb0
  400a2c:	br	x17

0000000000400a30 <log_internal_realm@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a34:	ldr	x17, [x16, #4024]
  400a38:	add	x16, x16, #0xfb8
  400a3c:	br	x17

0000000000400a40 <strcmp@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a44:	ldr	x17, [x16, #4032]
  400a48:	add	x16, x16, #0xfc0
  400a4c:	br	x17

0000000000400a50 <execv@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a54:	ldr	x17, [x16, #4040]
  400a58:	add	x16, x16, #0xfc8
  400a5c:	br	x17

0000000000400a60 <safe_fork_full@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a64:	ldr	x17, [x16, #4048]
  400a68:	add	x16, x16, #0xfd0
  400a6c:	br	x17

0000000000400a70 <proc_cmdline_parse@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a74:	ldr	x17, [x16, #4056]
  400a78:	add	x16, x16, #0xfd8
  400a7c:	br	x17

0000000000400a80 <mac_selinux_finish@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a84:	ldr	x17, [x16, #4064]
  400a88:	add	x16, x16, #0xfe0
  400a8c:	br	x17

0000000000400a90 <log_get_max_level_realm@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xf678>
  400a94:	ldr	x17, [x16, #4072]
  400a98:	add	x16, x16, #0xfe8
  400a9c:	br	x17

Disassembly of section .text:

0000000000400aa0 <_start>:
  400aa0:	mov	x29, #0x0                   	// #0
  400aa4:	mov	x30, #0x0                   	// #0
  400aa8:	mov	x5, x0
  400aac:	ldr	x1, [sp]
  400ab0:	add	x2, sp, #0x8
  400ab4:	mov	x6, sp
  400ab8:	movz	x0, #0x0, lsl #48
  400abc:	movk	x0, #0x0, lsl #32
  400ac0:	movk	x0, #0x40, lsl #16
  400ac4:	movk	x0, #0x130c
  400ac8:	movz	x3, #0x0, lsl #48
  400acc:	movk	x3, #0x0, lsl #32
  400ad0:	movk	x3, #0x40, lsl #16
  400ad4:	movk	x3, #0x1360
  400ad8:	movz	x4, #0x0, lsl #48
  400adc:	movk	x4, #0x0, lsl #32
  400ae0:	movk	x4, #0x40, lsl #16
  400ae4:	movk	x4, #0x13e0
  400ae8:	bl	400990 <__libc_start_main@plt>
  400aec:	bl	400a00 <abort@plt>

0000000000400af0 <call_weak_fn>:
  400af0:	adrp	x0, 411000 <__FRAME_END__+0xf678>
  400af4:	ldr	x0, [x0, #4088]
  400af8:	cbz	x0, 400b00 <call_weak_fn+0x10>
  400afc:	b	4009a0 <__gmon_start__@plt>
  400b00:	ret

0000000000400b04 <deregister_tm_clones>:
  400b04:	stp	x29, x30, [sp, #-32]!
  400b08:	mov	x29, sp
  400b0c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400b10:	add	x0, x0, #0x0
  400b14:	str	x0, [sp, #24]
  400b18:	ldr	x0, [sp, #24]
  400b1c:	str	x0, [sp, #24]
  400b20:	ldr	x1, [sp, #24]
  400b24:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400b28:	add	x0, x0, #0x0
  400b2c:	cmp	x1, x0
  400b30:	b.eq	400b6c <deregister_tm_clones+0x68>  // b.none
  400b34:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400b38:	add	x0, x0, #0x3f8
  400b3c:	ldr	x0, [x0]
  400b40:	str	x0, [sp, #16]
  400b44:	ldr	x0, [sp, #16]
  400b48:	str	x0, [sp, #16]
  400b4c:	ldr	x0, [sp, #16]
  400b50:	cmp	x0, #0x0
  400b54:	b.eq	400b70 <deregister_tm_clones+0x6c>  // b.none
  400b58:	ldr	x1, [sp, #16]
  400b5c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400b60:	add	x0, x0, #0x0
  400b64:	blr	x1
  400b68:	b	400b70 <deregister_tm_clones+0x6c>
  400b6c:	nop
  400b70:	ldp	x29, x30, [sp], #32
  400b74:	ret

0000000000400b78 <register_tm_clones>:
  400b78:	stp	x29, x30, [sp, #-48]!
  400b7c:	mov	x29, sp
  400b80:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400b84:	add	x0, x0, #0x0
  400b88:	str	x0, [sp, #40]
  400b8c:	ldr	x0, [sp, #40]
  400b90:	str	x0, [sp, #40]
  400b94:	ldr	x1, [sp, #40]
  400b98:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400b9c:	add	x0, x0, #0x0
  400ba0:	sub	x0, x1, x0
  400ba4:	asr	x0, x0, #3
  400ba8:	lsr	x1, x0, #63
  400bac:	add	x0, x1, x0
  400bb0:	asr	x0, x0, #1
  400bb4:	str	x0, [sp, #32]
  400bb8:	ldr	x0, [sp, #32]
  400bbc:	cmp	x0, #0x0
  400bc0:	b.eq	400c00 <register_tm_clones+0x88>  // b.none
  400bc4:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400bc8:	add	x0, x0, #0x400
  400bcc:	ldr	x0, [x0]
  400bd0:	str	x0, [sp, #24]
  400bd4:	ldr	x0, [sp, #24]
  400bd8:	str	x0, [sp, #24]
  400bdc:	ldr	x0, [sp, #24]
  400be0:	cmp	x0, #0x0
  400be4:	b.eq	400c04 <register_tm_clones+0x8c>  // b.none
  400be8:	ldr	x2, [sp, #24]
  400bec:	ldr	x1, [sp, #32]
  400bf0:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400bf4:	add	x0, x0, #0x0
  400bf8:	blr	x2
  400bfc:	b	400c04 <register_tm_clones+0x8c>
  400c00:	nop
  400c04:	ldp	x29, x30, [sp], #48
  400c08:	ret

0000000000400c0c <__do_global_dtors_aux>:
  400c0c:	stp	x29, x30, [sp, #-16]!
  400c10:	mov	x29, sp
  400c14:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400c18:	add	x0, x0, #0xc
  400c1c:	ldrb	w0, [x0]
  400c20:	and	x0, x0, #0xff
  400c24:	cmp	x0, #0x0
  400c28:	b.ne	400c44 <__do_global_dtors_aux+0x38>  // b.any
  400c2c:	bl	400b04 <deregister_tm_clones>
  400c30:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400c34:	add	x0, x0, #0xc
  400c38:	mov	w1, #0x1                   	// #1
  400c3c:	strb	w1, [x0]
  400c40:	b	400c48 <__do_global_dtors_aux+0x3c>
  400c44:	nop
  400c48:	ldp	x29, x30, [sp], #16
  400c4c:	ret

0000000000400c50 <frame_dummy>:
  400c50:	stp	x29, x30, [sp, #-16]!
  400c54:	mov	x29, sp
  400c58:	bl	400b78 <register_tm_clones>
  400c5c:	nop
  400c60:	ldp	x29, x30, [sp], #16
  400c64:	ret

0000000000400c68 <ALIGN_TO>:
  400c68:	sub	sp, sp, #0x10
  400c6c:	str	x0, [sp, #8]
  400c70:	str	x1, [sp]
  400c74:	ldr	x1, [sp, #8]
  400c78:	ldr	x0, [sp]
  400c7c:	add	x0, x1, x0
  400c80:	sub	x1, x0, #0x1
  400c84:	ldr	x0, [sp]
  400c88:	neg	x0, x0
  400c8c:	and	x0, x1, x0
  400c90:	add	sp, sp, #0x10
  400c94:	ret

0000000000400c98 <save_argc_argv>:
  400c98:	sub	sp, sp, #0x10
  400c9c:	str	w0, [sp, #12]
  400ca0:	str	x1, [sp]
  400ca4:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400ca8:	add	x0, x0, #0x8
  400cac:	ldr	w1, [sp, #12]
  400cb0:	str	w1, [x0]
  400cb4:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400cb8:	add	x0, x0, #0x0
  400cbc:	ldr	x1, [sp]
  400cc0:	str	x1, [x0]
  400cc4:	nop
  400cc8:	add	sp, sp, #0x10
  400ccc:	ret

0000000000400cd0 <static_destruct>:
  400cd0:	stp	x29, x30, [sp, #-32]!
  400cd4:	mov	x29, sp
  400cd8:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400cdc:	add	x0, x0, #0x698
  400ce0:	ldr	x0, [x0]
  400ce4:	cmp	x0, #0x0
  400ce8:	b.eq	400d4c <static_destruct+0x7c>  // b.none
  400cec:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400cf0:	add	x0, x0, #0x698
  400cf4:	ldr	x0, [x0]
  400cf8:	mov	x1, #0x8                   	// #8
  400cfc:	bl	400c68 <ALIGN_TO>
  400d00:	str	x0, [sp, #24]
  400d04:	b	400d30 <static_destruct+0x60>
  400d08:	ldr	x0, [sp, #24]
  400d0c:	ldr	x1, [x0, #8]
  400d10:	ldr	x0, [sp, #24]
  400d14:	ldr	x0, [x0]
  400d18:	blr	x1
  400d1c:	ldr	x0, [sp, #24]
  400d20:	add	x0, x0, #0x10
  400d24:	mov	x1, #0x8                   	// #8
  400d28:	bl	400c68 <ALIGN_TO>
  400d2c:	str	x0, [sp, #24]
  400d30:	ldr	x1, [sp, #24]
  400d34:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400d38:	add	x0, x0, #0x6a0
  400d3c:	ldr	x0, [x0]
  400d40:	cmp	x1, x0
  400d44:	b.cc	400d08 <static_destruct+0x38>  // b.lo, b.ul, b.last
  400d48:	b	400d50 <static_destruct+0x80>
  400d4c:	nop
  400d50:	ldp	x29, x30, [sp], #32
  400d54:	ret

0000000000400d58 <proc_cmdline_value_missing>:
  400d58:	stp	x29, x30, [sp, #-48]!
  400d5c:	mov	x29, sp
  400d60:	str	x0, [sp, #24]
  400d64:	str	x1, [sp, #16]
  400d68:	ldr	x0, [sp, #16]
  400d6c:	cmp	x0, #0x0
  400d70:	b.ne	400df4 <proc_cmdline_value_missing+0x9c>  // b.any
  400d74:	mov	w0, #0x4                   	// #4
  400d78:	str	w0, [sp, #36]
  400d7c:	str	wzr, [sp, #40]
  400d80:	str	wzr, [sp, #44]
  400d84:	ldr	w0, [sp, #44]
  400d88:	bl	400a90 <log_get_max_level_realm@plt>
  400d8c:	mov	w1, w0
  400d90:	ldr	w0, [sp, #36]
  400d94:	and	w0, w0, #0x7
  400d98:	cmp	w1, w0
  400d9c:	b.lt	400de4 <proc_cmdline_value_missing+0x8c>  // b.tstop
  400da0:	ldr	w0, [sp, #44]
  400da4:	lsl	w1, w0, #10
  400da8:	ldr	w0, [sp, #36]
  400dac:	orr	w7, w1, w0
  400db0:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400db4:	add	x1, x0, #0x40b
  400db8:	ldr	x6, [sp, #24]
  400dbc:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400dc0:	add	x5, x0, #0x428
  400dc4:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400dc8:	add	x4, x0, #0x6c0
  400dcc:	mov	w3, #0x21                  	// #33
  400dd0:	mov	x2, x1
  400dd4:	ldr	w1, [sp, #40]
  400dd8:	mov	w0, w7
  400ddc:	bl	400a30 <log_internal_realm@plt>
  400de0:	b	400dec <proc_cmdline_value_missing+0x94>
  400de4:	ldr	w0, [sp, #40]
  400de8:	cmp	w0, #0x0
  400dec:	mov	w0, #0x1                   	// #1
  400df0:	b	400df8 <proc_cmdline_value_missing+0xa0>
  400df4:	mov	w0, #0x0                   	// #0
  400df8:	ldp	x29, x30, [sp], #48
  400dfc:	ret

0000000000400e00 <safe_fork>:
  400e00:	stp	x29, x30, [sp, #-48]!
  400e04:	mov	x29, sp
  400e08:	str	x0, [sp, #40]
  400e0c:	str	w1, [sp, #36]
  400e10:	str	x2, [sp, #24]
  400e14:	ldr	x4, [sp, #24]
  400e18:	ldr	w3, [sp, #36]
  400e1c:	mov	x2, #0x0                   	// #0
  400e20:	mov	x1, #0x0                   	// #0
  400e24:	ldr	x0, [sp, #40]
  400e28:	bl	400a60 <safe_fork_full@plt>
  400e2c:	ldp	x29, x30, [sp], #48
  400e30:	ret

0000000000400e34 <parse_proc_cmdline_item>:
  400e34:	stp	x29, x30, [sp, #-80]!
  400e38:	mov	x29, sp
  400e3c:	str	x0, [sp, #40]
  400e40:	str	x1, [sp, #32]
  400e44:	str	x2, [sp, #24]
  400e48:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400e4c:	add	x1, x0, #0x468
  400e50:	ldr	x0, [sp, #40]
  400e54:	bl	400a40 <strcmp@plt>
  400e58:	cmp	w0, #0x0
  400e5c:	b.ne	400f94 <parse_proc_cmdline_item+0x160>  // b.any
  400e60:	ldr	x1, [sp, #32]
  400e64:	ldr	x0, [sp, #40]
  400e68:	bl	400d58 <proc_cmdline_value_missing>
  400e6c:	and	w0, w0, #0xff
  400e70:	cmp	w0, #0x0
  400e74:	b.eq	400e80 <parse_proc_cmdline_item+0x4c>  // b.none
  400e78:	mov	w0, #0x0                   	// #0
  400e7c:	b	401040 <parse_proc_cmdline_item+0x20c>
  400e80:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400e84:	add	x1, x0, #0x478
  400e88:	ldr	x0, [sp, #32]
  400e8c:	bl	400a40 <strcmp@plt>
  400e90:	cmp	w0, #0x0
  400e94:	b.ne	400ec0 <parse_proc_cmdline_item+0x8c>  // b.any
  400e98:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400e9c:	add	x0, x0, #0xd
  400ea0:	strb	wzr, [x0]
  400ea4:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400ea8:	add	x0, x0, #0xd
  400eac:	ldrb	w1, [x0]
  400eb0:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400eb4:	add	x0, x0, #0xe
  400eb8:	strb	w1, [x0]
  400ebc:	b	40103c <parse_proc_cmdline_item+0x208>
  400ec0:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400ec4:	add	x1, x0, #0x480
  400ec8:	ldr	x0, [sp, #32]
  400ecc:	bl	400a40 <strcmp@plt>
  400ed0:	cmp	w0, #0x0
  400ed4:	b.ne	400eec <parse_proc_cmdline_item+0xb8>  // b.any
  400ed8:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400edc:	add	x0, x0, #0xe
  400ee0:	mov	w1, #0x1                   	// #1
  400ee4:	strb	w1, [x0]
  400ee8:	b	40103c <parse_proc_cmdline_item+0x208>
  400eec:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400ef0:	add	x1, x0, #0x488
  400ef4:	ldr	x0, [sp, #32]
  400ef8:	bl	400a40 <strcmp@plt>
  400efc:	cmp	w0, #0x0
  400f00:	b.ne	400f18 <parse_proc_cmdline_item+0xe4>  // b.any
  400f04:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f08:	add	x0, x0, #0xd
  400f0c:	mov	w1, #0x1                   	// #1
  400f10:	strb	w1, [x0]
  400f14:	b	40103c <parse_proc_cmdline_item+0x208>
  400f18:	mov	w0, #0x4                   	// #4
  400f1c:	str	w0, [sp, #68]
  400f20:	str	wzr, [sp, #72]
  400f24:	str	wzr, [sp, #76]
  400f28:	ldr	w0, [sp, #76]
  400f2c:	bl	400a90 <log_get_max_level_realm@plt>
  400f30:	mov	w1, w0
  400f34:	ldr	w0, [sp, #68]
  400f38:	and	w0, w0, #0x7
  400f3c:	cmp	w1, w0
  400f40:	b.lt	400f88 <parse_proc_cmdline_item+0x154>  // b.tstop
  400f44:	ldr	w0, [sp, #76]
  400f48:	lsl	w1, w0, #10
  400f4c:	ldr	w0, [sp, #68]
  400f50:	orr	w7, w1, w0
  400f54:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400f58:	add	x1, x0, #0x493
  400f5c:	ldr	x6, [sp, #32]
  400f60:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400f64:	add	x5, x0, #0x4b0
  400f68:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400f6c:	add	x4, x0, #0x6a8
  400f70:	mov	w3, #0x23                  	// #35
  400f74:	mov	x2, x1
  400f78:	ldr	w1, [sp, #72]
  400f7c:	mov	w0, w7
  400f80:	bl	400a30 <log_internal_realm@plt>
  400f84:	b	40103c <parse_proc_cmdline_item+0x208>
  400f88:	ldr	w0, [sp, #72]
  400f8c:	cmp	w0, #0x0
  400f90:	b	40103c <parse_proc_cmdline_item+0x208>
  400f94:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400f98:	add	x1, x0, #0x4e8
  400f9c:	ldr	x0, [sp, #40]
  400fa0:	bl	400a40 <strcmp@plt>
  400fa4:	cmp	w0, #0x0
  400fa8:	b.ne	40103c <parse_proc_cmdline_item+0x208>  // b.any
  400fac:	ldr	x0, [sp, #32]
  400fb0:	cmp	x0, #0x0
  400fb4:	b.ne	40103c <parse_proc_cmdline_item+0x208>  // b.any
  400fb8:	mov	w0, #0x4                   	// #4
  400fbc:	str	w0, [sp, #56]
  400fc0:	str	wzr, [sp, #60]
  400fc4:	str	wzr, [sp, #64]
  400fc8:	ldr	w0, [sp, #64]
  400fcc:	bl	400a90 <log_get_max_level_realm@plt>
  400fd0:	mov	w1, w0
  400fd4:	ldr	w0, [sp, #56]
  400fd8:	and	w0, w0, #0x7
  400fdc:	cmp	w1, w0
  400fe0:	b.lt	401024 <parse_proc_cmdline_item+0x1f0>  // b.tstop
  400fe4:	ldr	w0, [sp, #64]
  400fe8:	lsl	w1, w0, #10
  400fec:	ldr	w0, [sp, #56]
  400ff0:	orr	w6, w1, w0
  400ff4:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  400ff8:	add	x1, x0, #0x493
  400ffc:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401000:	add	x5, x0, #0x4f8
  401004:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401008:	add	x4, x0, #0x6a8
  40100c:	mov	w3, #0x28                  	// #40
  401010:	mov	x2, x1
  401014:	ldr	w1, [sp, #60]
  401018:	mov	w0, w6
  40101c:	bl	400a30 <log_internal_realm@plt>
  401020:	b	40102c <parse_proc_cmdline_item+0x1f8>
  401024:	ldr	w0, [sp, #60]
  401028:	cmp	w0, #0x0
  40102c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  401030:	add	x0, x0, #0xe
  401034:	mov	w1, #0x1                   	// #1
  401038:	strb	w1, [x0]
  40103c:	mov	w0, #0x0                   	// #0
  401040:	ldp	x29, x30, [sp], #80
  401044:	ret

0000000000401048 <test_files>:
  401048:	stp	x29, x30, [sp, #-32]!
  40104c:	mov	x29, sp
  401050:	mov	w1, #0x0                   	// #0
  401054:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401058:	add	x0, x0, #0x558
  40105c:	bl	4009f0 <access@plt>
  401060:	cmp	w0, #0x0
  401064:	b.lt	4010ec <test_files+0xa4>  // b.tstop
  401068:	mov	w0, #0x3                   	// #3
  40106c:	str	w0, [sp, #20]
  401070:	str	wzr, [sp, #24]
  401074:	str	wzr, [sp, #28]
  401078:	ldr	w0, [sp, #28]
  40107c:	bl	400a90 <log_get_max_level_realm@plt>
  401080:	mov	w1, w0
  401084:	ldr	w0, [sp, #20]
  401088:	and	w0, w0, #0x7
  40108c:	cmp	w1, w0
  401090:	b.lt	4010d4 <test_files+0x8c>  // b.tstop
  401094:	ldr	w0, [sp, #28]
  401098:	lsl	w1, w0, #10
  40109c:	ldr	w0, [sp, #20]
  4010a0:	orr	w6, w1, w0
  4010a4:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  4010a8:	add	x1, x0, #0x493
  4010ac:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  4010b0:	add	x5, x0, #0x570
  4010b4:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  4010b8:	add	x4, x0, #0x6e0
  4010bc:	mov	w3, #0x34                  	// #52
  4010c0:	mov	x2, x1
  4010c4:	ldr	w1, [sp, #24]
  4010c8:	mov	w0, w6
  4010cc:	bl	400a30 <log_internal_realm@plt>
  4010d0:	b	4010dc <test_files+0x94>
  4010d4:	ldr	w0, [sp, #24]
  4010d8:	cmp	w0, #0x0
  4010dc:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  4010e0:	add	x0, x0, #0xe
  4010e4:	mov	w1, #0x1                   	// #1
  4010e8:	strb	w1, [x0]
  4010ec:	nop
  4010f0:	ldp	x29, x30, [sp], #32
  4010f4:	ret

00000000004010f8 <run>:
  4010f8:	stp	x29, x30, [sp, #-64]!
  4010fc:	mov	x29, sp
  401100:	str	w0, [sp, #28]
  401104:	str	x1, [sp, #16]
  401108:	bl	4009c0 <log_setup_service@plt>
  40110c:	ldr	w0, [sp, #28]
  401110:	cmp	w0, #0x1
  401114:	b.le	4011a4 <run+0xac>
  401118:	mov	w0, #0x3                   	// #3
  40111c:	str	w0, [sp, #52]
  401120:	mov	w0, #0x16                  	// #22
  401124:	movk	w0, #0x4000, lsl #16
  401128:	str	w0, [sp, #56]
  40112c:	str	wzr, [sp, #60]
  401130:	ldr	w0, [sp, #60]
  401134:	bl	400a90 <log_get_max_level_realm@plt>
  401138:	mov	w1, w0
  40113c:	ldr	w0, [sp, #52]
  401140:	and	w0, w0, #0x7
  401144:	cmp	w1, w0
  401148:	b.lt	40118c <run+0x94>  // b.tstop
  40114c:	ldr	w0, [sp, #60]
  401150:	lsl	w1, w0, #10
  401154:	ldr	w0, [sp, #52]
  401158:	orr	w6, w1, w0
  40115c:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401160:	add	x1, x0, #0x493
  401164:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401168:	add	x5, x0, #0x5f0
  40116c:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401170:	add	x4, x0, #0x6f0
  401174:	mov	w3, #0x40                  	// #64
  401178:	mov	x2, x1
  40117c:	ldr	w1, [sp, #56]
  401180:	mov	w0, w6
  401184:	bl	400a30 <log_internal_realm@plt>
  401188:	b	401304 <run+0x20c>
  40118c:	ldr	w0, [sp, #56]
  401190:	cmp	w0, #0x0
  401194:	cneg	w0, w0, lt  // lt = tstop
  401198:	and	w0, w0, #0xff
  40119c:	neg	w0, w0
  4011a0:	b	401304 <run+0x20c>
  4011a4:	mov	w0, #0x12                  	// #18
  4011a8:	bl	4009e0 <umask@plt>
  4011ac:	mov	w2, #0x0                   	// #0
  4011b0:	mov	x1, #0x0                   	// #0
  4011b4:	adrp	x0, 400000 <_init-0x958>
  4011b8:	add	x0, x0, #0xe34
  4011bc:	bl	400a70 <proc_cmdline_parse@plt>
  4011c0:	str	w0, [sp, #36]
  4011c4:	ldr	w0, [sp, #36]
  4011c8:	cmp	w0, #0x0
  4011cc:	b.ge	401248 <run+0x150>  // b.tcont
  4011d0:	mov	w0, #0x4                   	// #4
  4011d4:	str	w0, [sp, #40]
  4011d8:	ldr	w0, [sp, #36]
  4011dc:	str	w0, [sp, #44]
  4011e0:	str	wzr, [sp, #48]
  4011e4:	ldr	w0, [sp, #48]
  4011e8:	bl	400a90 <log_get_max_level_realm@plt>
  4011ec:	mov	w1, w0
  4011f0:	ldr	w0, [sp, #40]
  4011f4:	and	w0, w0, #0x7
  4011f8:	cmp	w1, w0
  4011fc:	b.lt	401240 <run+0x148>  // b.tstop
  401200:	ldr	w0, [sp, #48]
  401204:	lsl	w1, w0, #10
  401208:	ldr	w0, [sp, #40]
  40120c:	orr	w6, w1, w0
  401210:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401214:	add	x1, x0, #0x493
  401218:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  40121c:	add	x5, x0, #0x618
  401220:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  401224:	add	x4, x0, #0x6f0
  401228:	mov	w3, #0x47                  	// #71
  40122c:	mov	x2, x1
  401230:	ldr	w1, [sp, #44]
  401234:	mov	w0, w6
  401238:	bl	400a30 <log_internal_realm@plt>
  40123c:	b	401248 <run+0x150>
  401240:	ldr	w0, [sp, #44]
  401244:	cmp	w0, #0x0
  401248:	bl	401048 <test_files>
  40124c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  401250:	add	x0, x0, #0xe
  401254:	ldrb	w0, [x0]
  401258:	eor	w0, w0, #0x1
  40125c:	and	w0, w0, #0xff
  401260:	cmp	w0, #0x0
  401264:	b.eq	4012a4 <run+0x1ac>  // b.none
  401268:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  40126c:	add	x0, x0, #0xd
  401270:	ldrb	w0, [x0]
  401274:	cmp	w0, #0x0
  401278:	b.eq	401284 <run+0x18c>  // b.none
  40127c:	mov	w0, #0x0                   	// #0
  401280:	b	401304 <run+0x20c>
  401284:	mov	w1, #0x0                   	// #0
  401288:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  40128c:	add	x0, x0, #0x650
  401290:	bl	4009f0 <access@plt>
  401294:	cmp	w0, #0x0
  401298:	b.ge	4012a4 <run+0x1ac>  // b.tcont
  40129c:	mov	w0, #0x0                   	// #0
  4012a0:	b	401304 <run+0x20c>
  4012a4:	mov	x2, #0x0                   	// #0
  4012a8:	mov	w1, #0x265                 	// #613
  4012ac:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  4012b0:	add	x0, x0, #0x668
  4012b4:	bl	400e00 <safe_fork>
  4012b8:	str	w0, [sp, #36]
  4012bc:	ldr	w0, [sp, #36]
  4012c0:	cmp	w0, #0x0
  4012c4:	b.ge	4012d0 <run+0x1d8>  // b.tcont
  4012c8:	ldr	w0, [sp, #36]
  4012cc:	b	401304 <run+0x20c>
  4012d0:	ldr	w0, [sp, #36]
  4012d4:	cmp	w0, #0x0
  4012d8:	b.ne	401300 <run+0x208>  // b.any
  4012dc:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  4012e0:	add	x0, x0, #0x6f8
  4012e4:	ldr	x2, [x0]
  4012e8:	adrp	x0, 401000 <parse_proc_cmdline_item+0x1cc>
  4012ec:	add	x1, x0, #0x6f8
  4012f0:	mov	x0, x2
  4012f4:	bl	400a50 <execv@plt>
  4012f8:	mov	w0, #0x1                   	// #1
  4012fc:	bl	4009d0 <_exit@plt>
  401300:	mov	w0, #0x0                   	// #0
  401304:	ldp	x29, x30, [sp], #64
  401308:	ret

000000000040130c <main>:
  40130c:	stp	x29, x30, [sp, #-48]!
  401310:	mov	x29, sp
  401314:	str	w0, [sp, #28]
  401318:	str	x1, [sp, #16]
  40131c:	ldr	x1, [sp, #16]
  401320:	ldr	w0, [sp, #28]
  401324:	bl	400c98 <save_argc_argv>
  401328:	ldr	x1, [sp, #16]
  40132c:	ldr	w0, [sp, #28]
  401330:	bl	4010f8 <run>
  401334:	str	w0, [sp, #44]
  401338:	bl	400a10 <ask_password_agent_close@plt>
  40133c:	bl	4009b0 <polkit_agent_close@plt>
  401340:	bl	400a20 <pager_close@plt>
  401344:	bl	400a80 <mac_selinux_finish@plt>
  401348:	bl	400cd0 <static_destruct>
  40134c:	ldr	w0, [sp, #44]
  401350:	lsr	w0, w0, #31
  401354:	ldp	x29, x30, [sp], #48
  401358:	ret
  40135c:	nop

0000000000401360 <__libc_csu_init>:
  401360:	stp	x29, x30, [sp, #-64]!
  401364:	mov	x29, sp
  401368:	stp	x19, x20, [sp, #16]
  40136c:	adrp	x20, 411000 <__FRAME_END__+0xf678>
  401370:	add	x20, x20, #0xd28
  401374:	stp	x21, x22, [sp, #32]
  401378:	adrp	x21, 411000 <__FRAME_END__+0xf678>
  40137c:	add	x21, x21, #0xd20
  401380:	sub	x20, x20, x21
  401384:	mov	w22, w0
  401388:	stp	x23, x24, [sp, #48]
  40138c:	mov	x23, x1
  401390:	mov	x24, x2
  401394:	bl	400958 <_init>
  401398:	cmp	xzr, x20, asr #3
  40139c:	b.eq	4013c8 <__libc_csu_init+0x68>  // b.none
  4013a0:	asr	x20, x20, #3
  4013a4:	mov	x19, #0x0                   	// #0
  4013a8:	ldr	x3, [x21, x19, lsl #3]
  4013ac:	mov	x2, x24
  4013b0:	add	x19, x19, #0x1
  4013b4:	mov	x1, x23
  4013b8:	mov	w0, w22
  4013bc:	blr	x3
  4013c0:	cmp	x20, x19
  4013c4:	b.ne	4013a8 <__libc_csu_init+0x48>  // b.any
  4013c8:	ldp	x19, x20, [sp, #16]
  4013cc:	ldp	x21, x22, [sp, #32]
  4013d0:	ldp	x23, x24, [sp, #48]
  4013d4:	ldp	x29, x30, [sp], #64
  4013d8:	ret
  4013dc:	nop

00000000004013e0 <__libc_csu_fini>:
  4013e0:	ret

Disassembly of section .fini:

00000000004013e4 <_fini>:
  4013e4:	stp	x29, x30, [sp, #-16]!
  4013e8:	mov	x29, sp
  4013ec:	ldp	x29, x30, [sp], #16
  4013f0:	ret
