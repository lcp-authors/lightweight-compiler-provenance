
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_rijndael.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xbf0>:
   0:	ldp	w4, w6, [x2]
   4:	ldr	w3, [x0]
   8:	ldr	w5, [x2, #8]
   c:	eor	w3, w4, w3
  10:	ldr	w4, [x0, #4]
  14:	ldr	w7, [x0, #480]
  18:	eor	w6, w6, w4
  1c:	ldr	w4, [x0, #8]
  20:	ubfiz	x10, x3, #2, #8
  24:	sub	w7, w7, #0x1
  28:	eor	w5, w5, w4
  2c:	ldr	w4, [x2, #12]
  30:	ldr	w2, [x0, #12]
  34:	ubfx	x9, x6, #8, #8
  38:	ubfx	x12, x5, #16, #8
  3c:	eor	w4, w4, w2
  40:	adrp	x2, 0 <grub_mod_init-0xbf0>
  44:	ldr	x2, [x2]
  48:	lsr	w13, w4, #24
  4c:	add	x8, x2, #0x400
  50:	ldr	w11, [x2, x10]
  54:	add	x10, x2, #0xc00
  58:	ldr	w9, [x8, x9, lsl #2]
  5c:	ldr	w13, [x10, x13, lsl #2]
  60:	eor	w11, w11, w9
  64:	add	x9, x2, #0x800
  68:	ldr	w12, [x9, x12, lsl #2]
  6c:	eor	w12, w12, w13
  70:	lsr	w13, w3, #24
  74:	eor	w11, w11, w12
  78:	ubfx	x12, x5, #8, #8
  7c:	str	w11, [x1]
  80:	ubfiz	x11, x6, #2, #8
  84:	ldr	w12, [x8, x12, lsl #2]
  88:	ldr	w11, [x2, x11]
  8c:	ldr	w13, [x10, x13, lsl #2]
  90:	eor	w11, w11, w12
  94:	ubfx	x12, x4, #16, #8
  98:	ldr	w12, [x9, x12, lsl #2]
  9c:	eor	w12, w12, w13
  a0:	lsr	w13, w6, #24
  a4:	eor	w11, w11, w12
  a8:	ubfx	x12, x4, #8, #8
  ac:	str	w11, [x1, #4]
  b0:	ubfiz	x11, x5, #2, #8
  b4:	ubfiz	x4, x4, #2, #8
  b8:	ubfx	x6, x6, #16, #8
  bc:	ldr	w12, [x8, x12, lsl #2]
  c0:	lsr	w5, w5, #24
  c4:	ldr	w11, [x2, x11]
  c8:	ldr	w13, [x10, x13, lsl #2]
  cc:	eor	w11, w11, w12
  d0:	ubfx	x12, x3, #16, #8
  d4:	ubfx	x3, x3, #8, #8
  d8:	ldr	w12, [x9, x12, lsl #2]
  dc:	eor	w12, w12, w13
  e0:	mov	w13, #0x1                   	// #1
  e4:	eor	w11, w11, w12
  e8:	str	w11, [x1, #8]
  ec:	add	x11, x0, #0x10
  f0:	ldr	w4, [x2, x4]
  f4:	ldr	w3, [x8, x3, lsl #2]
  f8:	ldr	w5, [x10, x5, lsl #2]
  fc:	eor	w3, w4, w3
 100:	ldr	w4, [x9, x6, lsl #2]
 104:	eor	w4, w4, w5
 108:	eor	w3, w3, w4
 10c:	str	w3, [x1, #12]
 110:	ldp	w6, w4, [x1]
 114:	cmp	w7, w13
 118:	ldp	w3, w5, [x1, #8]
 11c:	b.gt	27c <grub_mod_init-0x974>
 120:	sbfiz	x7, x7, #4, #32
 124:	ldr	w8, [x0, x7]
 128:	add	x0, x0, x7
 12c:	eor	w6, w6, w8
 130:	ldr	w7, [x0, #4]
 134:	eor	w4, w4, w7
 138:	ldr	w7, [x0, #8]
 13c:	eor	w3, w3, w7
 140:	ldr	w7, [x0, #12]
 144:	eor	w5, w5, w7
 148:	add	x7, x2, w6, uxtb #2
 14c:	ldrb	w7, [x7, #1]
 150:	strb	w7, [x1]
 154:	ubfx	x7, x4, #8, #8
 158:	add	x7, x2, x7, lsl #2
 15c:	ldrb	w7, [x7, #1]
 160:	strb	w7, [x1, #1]
 164:	ubfx	x7, x3, #16, #8
 168:	add	x7, x2, x7, lsl #2
 16c:	ldrb	w7, [x7, #1]
 170:	strb	w7, [x1, #2]
 174:	lsr	w7, w5, #24
 178:	add	x7, x2, x7, lsl #2
 17c:	ldrb	w7, [x7, #1]
 180:	strb	w7, [x1, #3]
 184:	add	x7, x2, w4, uxtb #2
 188:	ldrb	w7, [x7, #1]
 18c:	strb	w7, [x1, #4]
 190:	ubfx	x7, x3, #8, #8
 194:	add	x7, x2, x7, lsl #2
 198:	ldrb	w7, [x7, #1]
 19c:	strb	w7, [x1, #5]
 1a0:	ubfx	x7, x5, #16, #8
 1a4:	add	x7, x2, x7, lsl #2
 1a8:	ldrb	w7, [x7, #1]
 1ac:	strb	w7, [x1, #6]
 1b0:	lsr	w7, w6, #24
 1b4:	add	x7, x2, x7, lsl #2
 1b8:	ldrb	w7, [x7, #1]
 1bc:	strb	w7, [x1, #7]
 1c0:	add	x7, x2, w3, uxtb #2
 1c4:	lsr	w3, w3, #24
 1c8:	ldrb	w7, [x7, #1]
 1cc:	strb	w7, [x1, #8]
 1d0:	ubfx	x7, x5, #8, #8
 1d4:	add	x5, x2, w5, uxtb #2
 1d8:	add	x7, x2, x7, lsl #2
 1dc:	ldrb	w5, [x5, #1]
 1e0:	ldrb	w7, [x7, #1]
 1e4:	strb	w7, [x1, #9]
 1e8:	ubfx	x7, x6, #16, #8
 1ec:	ubfx	x6, x6, #8, #8
 1f0:	strb	w5, [x1, #12]
 1f4:	add	x7, x2, x7, lsl #2
 1f8:	add	x6, x2, x6, lsl #2
 1fc:	ldrb	w7, [x7, #1]
 200:	strb	w7, [x1, #10]
 204:	lsr	w7, w4, #24
 208:	ubfx	x4, x4, #16, #8
 20c:	ldrb	w5, [x6, #1]
 210:	add	x7, x2, x7, lsl #2
 214:	strb	w5, [x1, #13]
 218:	add	x4, x2, x4, lsl #2
 21c:	add	x2, x2, x3, lsl #2
 220:	ldrb	w7, [x7, #1]
 224:	strb	w7, [x1, #11]
 228:	ldrb	w4, [x4, #1]
 22c:	ldrb	w2, [x2, #1]
 230:	strb	w4, [x1, #14]
 234:	strb	w2, [x1, #15]
 238:	ldr	w2, [x1]
 23c:	ldr	w3, [x0, #16]
 240:	eor	w2, w2, w3
 244:	str	w2, [x1]
 248:	ldr	w2, [x1, #4]
 24c:	ldr	w3, [x0, #20]
 250:	eor	w2, w2, w3
 254:	str	w2, [x1, #4]
 258:	ldr	w2, [x1, #8]
 25c:	ldr	w3, [x0, #24]
 260:	eor	w2, w2, w3
 264:	str	w2, [x1, #8]
 268:	ldr	w2, [x1, #12]
 26c:	ldr	w0, [x0, #28]
 270:	eor	w0, w2, w0
 274:	str	w0, [x1, #12]
 278:	ret
 27c:	ldr	w12, [x11]
 280:	add	w13, w13, #0x1
 284:	add	x11, x11, #0x10
 288:	eor	w6, w6, w12
 28c:	ldur	w12, [x11, #-12]
 290:	eor	w4, w4, w12
 294:	ldur	w12, [x11, #-8]
 298:	eor	w3, w3, w12
 29c:	ldur	w12, [x11, #-4]
 2a0:	ubfx	x14, x4, #8, #8
 2a4:	eor	w5, w5, w12
 2a8:	ubfiz	x12, x6, #2, #8
 2ac:	ldr	w14, [x8, x14, lsl #2]
 2b0:	lsr	w15, w5, #24
 2b4:	ldr	w12, [x2, x12]
 2b8:	eor	w12, w12, w14
 2bc:	ubfx	x14, x3, #16, #8
 2c0:	ldr	w15, [x10, x15, lsl #2]
 2c4:	ldr	w14, [x9, x14, lsl #2]
 2c8:	eor	w14, w14, w15
 2cc:	lsr	w15, w6, #24
 2d0:	eor	w12, w12, w14
 2d4:	ubfx	x14, x3, #8, #8
 2d8:	str	w12, [x1]
 2dc:	ubfiz	x12, x4, #2, #8
 2e0:	ldr	w14, [x8, x14, lsl #2]
 2e4:	ldr	w12, [x2, x12]
 2e8:	ldr	w15, [x10, x15, lsl #2]
 2ec:	eor	w12, w12, w14
 2f0:	ubfx	x14, x5, #16, #8
 2f4:	ldr	w14, [x9, x14, lsl #2]
 2f8:	eor	w14, w14, w15
 2fc:	lsr	w15, w4, #24
 300:	eor	w12, w12, w14
 304:	ubfx	x14, x5, #8, #8
 308:	str	w12, [x1, #4]
 30c:	ubfiz	x12, x3, #2, #8
 310:	ubfiz	x5, x5, #2, #8
 314:	ubfx	x4, x4, #16, #8
 318:	ldr	w14, [x8, x14, lsl #2]
 31c:	lsr	w3, w3, #24
 320:	ldr	w12, [x2, x12]
 324:	ldr	w15, [x10, x15, lsl #2]
 328:	eor	w12, w12, w14
 32c:	ubfx	x14, x6, #16, #8
 330:	ubfx	x6, x6, #8, #8
 334:	ldr	w14, [x9, x14, lsl #2]
 338:	eor	w14, w14, w15
 33c:	eor	w12, w12, w14
 340:	str	w12, [x1, #8]
 344:	ldr	w5, [x2, x5]
 348:	ldr	w6, [x8, x6, lsl #2]
 34c:	ldr	w4, [x9, x4, lsl #2]
 350:	ldr	w3, [x10, x3, lsl #2]
 354:	eor	w5, w5, w6
 358:	eor	w3, w4, w3
 35c:	eor	w3, w5, w3
 360:	str	w3, [x1, #12]
 364:	b	110 <grub_mod_init-0xae0>
	...
 370:	ldr	w12, [x0, #480]
 374:	ldp	w3, w5, [x2]
 378:	sxtw	x7, w12
 37c:	sub	w12, w12, #0x1
 380:	add	x7, x7, #0xf
 384:	lsl	x7, x7, #4
 388:	ldr	w4, [x0, x7]
 38c:	eor	w4, w4, w3
 390:	add	x3, x0, x7
 394:	sub	x7, x7, #0x100
 398:	ubfiz	x11, x4, #2, #8
 39c:	add	x7, x0, x7
 3a0:	ldp	w6, w8, [x3, #4]
 3a4:	ldr	w3, [x3, #12]
 3a8:	eor	w5, w6, w5
 3ac:	ldp	w6, w2, [x2, #8]
 3b0:	lsr	w15, w5, #24
 3b4:	eor	w2, w3, w2
 3b8:	adrp	x3, 0 <grub_mod_init-0xbf0>
 3bc:	eor	w6, w8, w6
 3c0:	ldr	x3, [x3]
 3c4:	ubfx	x10, x2, #8, #8
 3c8:	ubfx	x14, x6, #16, #8
 3cc:	sub	x8, x3, #0x100
 3d0:	add	x9, x3, #0x300
 3d4:	ldr	w13, [x8, x11]
 3d8:	add	x11, x3, #0xb00
 3dc:	ldr	w10, [x9, x10, lsl #2]
 3e0:	eor	w13, w13, w10
 3e4:	add	x10, x3, #0x700
 3e8:	ldr	w15, [x11, x15, lsl #2]
 3ec:	ldr	w14, [x10, x14, lsl #2]
 3f0:	eor	w14, w14, w15
 3f4:	lsr	w15, w6, #24
 3f8:	eor	w13, w13, w14
 3fc:	ubfx	x14, x4, #8, #8
 400:	str	w13, [x1]
 404:	ubfiz	x13, x5, #2, #8
 408:	ldr	w14, [x9, x14, lsl #2]
 40c:	ldr	w13, [x8, x13]
 410:	ldr	w15, [x11, x15, lsl #2]
 414:	eor	w13, w13, w14
 418:	ubfx	x14, x2, #16, #8
 41c:	ldr	w14, [x10, x14, lsl #2]
 420:	eor	w14, w14, w15
 424:	lsr	w15, w2, #24
 428:	eor	w13, w13, w14
 42c:	ubfx	x14, x5, #8, #8
 430:	str	w13, [x1, #4]
 434:	ubfiz	x13, x6, #2, #8
 438:	ubfiz	x2, x2, #2, #8
 43c:	ubfx	x5, x5, #16, #8
 440:	ldr	w14, [x9, x14, lsl #2]
 444:	ubfx	x6, x6, #8, #8
 448:	ldr	w13, [x8, x13]
 44c:	ldr	w15, [x11, x15, lsl #2]
 450:	eor	w13, w13, w14
 454:	ubfx	x14, x4, #16, #8
 458:	lsr	w4, w4, #24
 45c:	ldr	w14, [x10, x14, lsl #2]
 460:	eor	w14, w14, w15
 464:	eor	w13, w13, w14
 468:	str	w13, [x1, #8]
 46c:	ldr	w2, [x8, x2]
 470:	ldr	w6, [x9, x6, lsl #2]
 474:	ldr	w5, [x10, x5, lsl #2]
 478:	ldr	w4, [x11, x4, lsl #2]
 47c:	eor	w2, w2, w6
 480:	eor	w4, w5, w4
 484:	eor	w2, w2, w4
 488:	str	w2, [x1, #12]
 48c:	ldp	w2, w4, [x1]
 490:	sub	x7, x7, #0x10
 494:	ldp	w5, w6, [x1, #8]
 498:	cmp	w12, #0x1
 49c:	b.gt	5c8 <grub_mod_init-0x628>
 4a0:	ldr	w7, [x0, #256]
 4a4:	add	x3, x3, #0xf00
 4a8:	eor	w2, w2, w7
 4ac:	ldr	w7, [x0, #260]
 4b0:	eor	w4, w4, w7
 4b4:	ldr	w7, [x0, #264]
 4b8:	eor	w5, w5, w7
 4bc:	ldr	w7, [x0, #268]
 4c0:	eor	w6, w6, w7
 4c4:	and	x7, x2, #0xff
 4c8:	ldrb	w7, [x3, x7]
 4cc:	strb	w7, [x1]
 4d0:	ubfx	x7, x6, #8, #8
 4d4:	ldrb	w7, [x3, x7]
 4d8:	strb	w7, [x1, #1]
 4dc:	ubfx	x7, x5, #16, #8
 4e0:	ldrb	w7, [x3, x7]
 4e4:	strb	w7, [x1, #2]
 4e8:	lsr	w7, w4, #24
 4ec:	ldrb	w7, [x3, x7]
 4f0:	strb	w7, [x1, #3]
 4f4:	and	x7, x4, #0xff
 4f8:	ldrb	w7, [x3, x7]
 4fc:	strb	w7, [x1, #4]
 500:	ubfx	x7, x2, #8, #8
 504:	ldrb	w7, [x3, x7]
 508:	strb	w7, [x1, #5]
 50c:	ubfx	x7, x6, #16, #8
 510:	ldrb	w7, [x3, x7]
 514:	strb	w7, [x1, #6]
 518:	lsr	w7, w5, #24
 51c:	ldrb	w7, [x3, x7]
 520:	strb	w7, [x1, #7]
 524:	and	x7, x5, #0xff
 528:	ubfx	x5, x5, #8, #8
 52c:	ldrb	w7, [x3, x7]
 530:	strb	w7, [x1, #8]
 534:	ubfx	x7, x4, #8, #8
 538:	ubfx	x4, x4, #16, #8
 53c:	ldrb	w5, [x3, x5]
 540:	strb	w5, [x1, #13]
 544:	ldrb	w7, [x3, x7]
 548:	strb	w7, [x1, #9]
 54c:	ubfx	x7, x2, #16, #8
 550:	lsr	w2, w2, #24
 554:	ldrb	w7, [x3, x7]
 558:	strb	w7, [x1, #10]
 55c:	lsr	w7, w6, #24
 560:	and	x6, x6, #0xff
 564:	ldrb	w7, [x3, x7]
 568:	ldrb	w6, [x3, x6]
 56c:	strb	w7, [x1, #11]
 570:	strb	w6, [x1, #12]
 574:	ldrb	w4, [x3, x4]
 578:	ldrb	w2, [x3, x2]
 57c:	strb	w4, [x1, #14]
 580:	strb	w2, [x1, #15]
 584:	ldr	w2, [x1]
 588:	ldr	w3, [x0, #240]
 58c:	eor	w2, w2, w3
 590:	str	w2, [x1]
 594:	ldr	w2, [x1, #4]
 598:	ldr	w3, [x0, #244]
 59c:	eor	w2, w2, w3
 5a0:	str	w2, [x1, #4]
 5a4:	ldr	w2, [x1, #8]
 5a8:	ldr	w3, [x0, #248]
 5ac:	eor	w2, w2, w3
 5b0:	str	w2, [x1, #8]
 5b4:	ldr	w2, [x1, #12]
 5b8:	ldr	w0, [x0, #252]
 5bc:	eor	w0, w2, w0
 5c0:	str	w0, [x1, #12]
 5c4:	ret
 5c8:	ldr	w13, [x7, #256]
 5cc:	sub	w12, w12, #0x1
 5d0:	eor	w2, w2, w13
 5d4:	ldr	w13, [x7, #260]
 5d8:	eor	w4, w4, w13
 5dc:	ldr	w13, [x7, #264]
 5e0:	eor	w5, w5, w13
 5e4:	ldr	w13, [x7, #268]
 5e8:	lsr	w15, w4, #24
 5ec:	eor	w6, w6, w13
 5f0:	ubfiz	x13, x2, #2, #8
 5f4:	ubfx	x14, x6, #8, #8
 5f8:	ldr	w15, [x11, x15, lsl #2]
 5fc:	ldr	w13, [x8, x13]
 600:	ldr	w14, [x9, x14, lsl #2]
 604:	eor	w13, w13, w14
 608:	ubfx	x14, x5, #16, #8
 60c:	ldr	w14, [x10, x14, lsl #2]
 610:	eor	w14, w14, w15
 614:	lsr	w15, w5, #24
 618:	eor	w13, w13, w14
 61c:	ubfx	x14, x2, #8, #8
 620:	str	w13, [x1]
 624:	ubfiz	x13, x4, #2, #8
 628:	ldr	w14, [x9, x14, lsl #2]
 62c:	ldr	w13, [x8, x13]
 630:	ldr	w15, [x11, x15, lsl #2]
 634:	eor	w13, w13, w14
 638:	ubfx	x14, x6, #16, #8
 63c:	ldr	w14, [x10, x14, lsl #2]
 640:	eor	w14, w14, w15
 644:	lsr	w15, w6, #24
 648:	eor	w13, w13, w14
 64c:	ubfx	x14, x4, #8, #8
 650:	str	w13, [x1, #4]
 654:	ubfiz	x13, x5, #2, #8
 658:	ubfiz	x6, x6, #2, #8
 65c:	ubfx	x4, x4, #16, #8
 660:	ldr	w14, [x9, x14, lsl #2]
 664:	ubfx	x5, x5, #8, #8
 668:	ldr	w13, [x8, x13]
 66c:	ldr	w15, [x11, x15, lsl #2]
 670:	eor	w13, w13, w14
 674:	ubfx	x14, x2, #16, #8
 678:	lsr	w2, w2, #24
 67c:	ldr	w14, [x10, x14, lsl #2]
 680:	eor	w14, w14, w15
 684:	eor	w13, w13, w14
 688:	str	w13, [x1, #8]
 68c:	ldr	w6, [x8, x6]
 690:	ldr	w5, [x9, x5, lsl #2]
 694:	ldr	w4, [x10, x4, lsl #2]
 698:	ldr	w2, [x11, x2, lsl #2]
 69c:	eor	w5, w6, w5
 6a0:	eor	w2, w4, w2
 6a4:	eor	w2, w5, w2
 6a8:	str	w2, [x1, #12]
 6ac:	b	48c <grub_mod_init-0x764>
	...
 6b8:	stp	x29, x30, [sp, #-96]!
 6bc:	adrp	x3, 0 <grub_mod_init-0xbf0>
 6c0:	mov	x29, sp
 6c4:	ldr	x3, [x3]
 6c8:	ldr	w4, [x3]
 6cc:	str	x19, [sp, #16]
 6d0:	cbnz	w4, 7b8 <grub_mod_init-0x438>
 6d4:	mov	w4, #0x1                   	// #1
 6d8:	str	w4, [x3]
 6dc:	str	xzr, [x3, #8]
 6e0:	str	wzr, [x0, #484]
 6e4:	cmp	w2, #0x10
 6e8:	b.eq	7c8 <grub_mod_init-0x428>  // b.none
 6ec:	cmp	w2, #0x18
 6f0:	b.eq	7d4 <grub_mod_init-0x41c>  // b.none
 6f4:	cmp	w2, #0x20
 6f8:	b.ne	994 <grub_mod_init-0x25c>  // b.any
 6fc:	mov	w5, #0x8                   	// #8
 700:	mov	w6, #0xe                   	// #14
 704:	mov	x3, #0x0                   	// #0
 708:	str	w6, [x0, #480]
 70c:	cmp	w2, w3
 710:	b.hi	7e0 <grub_mod_init-0x410>  // b.pmore
 714:	sub	w1, w5, #0x1
 718:	add	x8, sp, #0x40
 71c:	add	x3, sp, #0x20
 720:	sxtw	x1, w1
 724:	mov	x7, x1
 728:	ldr	w2, [x3, x1, lsl #2]
 72c:	str	w2, [x8, x1, lsl #2]
 730:	sub	x1, x1, #0x1
 734:	tbz	w1, #31, 728 <grub_mod_init-0x4c8>
 738:	mov	w4, #0x0                   	// #0
 73c:	mov	w2, #0x0                   	// #0
 740:	mov	w1, #0x0                   	// #0
 744:	cmp	w5, w1
 748:	cset	w3, gt
 74c:	cmp	w3, #0x0
 750:	ccmp	w2, #0x3, #0x0, ne  // ne = any
 754:	b.le	804 <grub_mod_init-0x3ec>
 758:	cmp	w2, #0x4
 75c:	b.ne	768 <grub_mod_init-0x488>  // b.any
 760:	add	w4, w4, #0x1
 764:	mov	w2, #0x0                   	// #0
 768:	cmp	w3, #0x0
 76c:	ccmp	w6, w4, #0x1, ne  // ne = any
 770:	b.ge	744 <grub_mod_init-0x4ac>  // b.tcont
 774:	adrp	x1, 0 <grub_mod_init-0xbf0>
 778:	lsl	x7, x7, #2
 77c:	add	x12, sp, #0x41
 780:	add	x13, sp, #0x42
 784:	ldr	x3, [x1]
 788:	add	x14, sp, #0x43
 78c:	sub	x9, x3, #0x100
 790:	sub	x3, x3, #0x88
 794:	cmp	w6, w4
 798:	b.ge	820 <grub_mod_init-0x3d0>  // b.tcont
 79c:	mov	w19, #0x0                   	// #0
 7a0:	mov	w0, #0xa4                  	// #164
 7a4:	bl	0 <_gcry_burn_stack>
 7a8:	mov	w0, w19
 7ac:	ldr	x19, [sp, #16]
 7b0:	ldp	x29, x30, [sp], #96
 7b4:	ret
 7b8:	ldr	x3, [x3, #8]
 7bc:	cbz	x3, 6e0 <grub_mod_init-0x510>
 7c0:	mov	w19, #0x1c                  	// #28
 7c4:	b	7a0 <grub_mod_init-0x450>
 7c8:	mov	w5, #0x4                   	// #4
 7cc:	mov	w6, #0xa                   	// #10
 7d0:	b	704 <grub_mod_init-0x4ec>
 7d4:	mov	w5, #0x6                   	// #6
 7d8:	mov	w6, #0xc                   	// #12
 7dc:	b	704 <grub_mod_init-0x4ec>
 7e0:	asr	w4, w3, #2
 7e4:	add	x8, sp, #0x60
 7e8:	and	x7, x3, #0x3
 7ec:	add	x4, x8, w4, sxtw #2
 7f0:	add	x4, x4, x7
 7f4:	ldrb	w7, [x1, x3]
 7f8:	add	x3, x3, #0x1
 7fc:	sturb	w7, [x4, #-64]
 800:	b	70c <grub_mod_init-0x4e4>
 804:	sxtw	x3, w2
 808:	ldr	w9, [x8, w1, sxtw #2]
 80c:	add	x3, x3, w4, sxtw #2
 810:	add	w1, w1, #0x1
 814:	add	w2, w2, #0x1
 818:	str	w9, [x0, x3, lsl #2]
 81c:	b	744 <grub_mod_init-0x4ac>
 820:	ldrb	w1, [x12, x7]
 824:	cmp	w5, #0x8
 828:	ldrb	w10, [sp, #64]
 82c:	ldrb	w11, [sp, #65]
 830:	ldrb	w1, [x3, x1]
 834:	eor	w1, w1, w10
 838:	ldrb	w10, [x13, x7]
 83c:	ldrb	w10, [x3, x10]
 840:	eor	w10, w10, w11
 844:	strb	w10, [sp, #65]
 848:	ldrb	w11, [sp, #66]
 84c:	ldrb	w10, [x14, x7]
 850:	ldrb	w10, [x3, x10]
 854:	eor	w10, w10, w11
 858:	strb	w10, [sp, #66]
 85c:	ldrb	w11, [sp, #67]
 860:	ldrb	w10, [x8, x7]
 864:	ldrb	w10, [x3, x10]
 868:	eor	w10, w10, w11
 86c:	strb	w10, [sp, #67]
 870:	ldr	w10, [x9]
 874:	eor	w1, w1, w10
 878:	strb	w1, [sp, #64]
 87c:	b.ne	954 <grub_mod_init-0x29c>  // b.any
 880:	ldp	w10, w1, [sp, #64]
 884:	ldrb	w11, [sp, #80]
 888:	eor	w1, w1, w10
 88c:	ldr	w10, [sp, #72]
 890:	str	w1, [sp, #68]
 894:	eor	w1, w1, w10
 898:	ldr	w10, [sp, #76]
 89c:	str	w1, [sp, #72]
 8a0:	eor	w1, w1, w10
 8a4:	str	w1, [sp, #76]
 8a8:	and	x10, x1, #0xff
 8ac:	ldrb	w10, [x3, x10]
 8b0:	eor	w10, w10, w11
 8b4:	ubfx	x11, x1, #8, #8
 8b8:	strb	w10, [sp, #80]
 8bc:	ldrb	w10, [sp, #81]
 8c0:	ldrb	w11, [x3, x11]
 8c4:	eor	w10, w10, w11
 8c8:	ubfx	x11, x1, #16, #8
 8cc:	lsr	w1, w1, #24
 8d0:	strb	w10, [sp, #81]
 8d4:	ldrb	w10, [sp, #82]
 8d8:	ldrb	w11, [x3, x11]
 8dc:	ldrb	w1, [x3, x1]
 8e0:	eor	w10, w10, w11
 8e4:	strb	w10, [sp, #82]
 8e8:	ldrb	w10, [sp, #83]
 8ec:	eor	w1, w10, w1
 8f0:	strb	w1, [sp, #83]
 8f4:	ldp	w10, w1, [sp, #80]
 8f8:	eor	w1, w1, w10
 8fc:	ldr	w10, [sp, #88]
 900:	str	w1, [sp, #84]
 904:	eor	w1, w1, w10
 908:	ldr	w10, [sp, #92]
 90c:	str	w1, [sp, #88]
 910:	eor	w1, w10, w1
 914:	str	w1, [sp, #92]
 918:	mov	w1, #0x0                   	// #0
 91c:	cmp	w5, w1
 920:	cset	w10, gt
 924:	cmp	w10, #0x0
 928:	ccmp	w2, #0x3, #0x0, ne  // ne = any
 92c:	b.le	978 <grub_mod_init-0x278>
 930:	cmp	w2, #0x4
 934:	b.ne	940 <grub_mod_init-0x2b0>  // b.any
 938:	add	w4, w4, #0x1
 93c:	mov	w2, #0x0                   	// #0
 940:	cmp	w10, #0x0
 944:	ccmp	w6, w4, #0x1, ne  // ne = any
 948:	b.ge	91c <grub_mod_init-0x2d4>  // b.tcont
 94c:	add	x9, x9, #0x4
 950:	b	794 <grub_mod_init-0x45c>
 954:	mov	x1, x8
 958:	mov	w10, #0x1                   	// #1
 95c:	ldp	w15, w11, [x1]
 960:	add	w10, w10, #0x1
 964:	cmp	w5, w10
 968:	eor	w11, w11, w15
 96c:	str	w11, [x1, #4]!
 970:	b.ne	95c <grub_mod_init-0x294>  // b.any
 974:	b	918 <grub_mod_init-0x2d8>
 978:	sxtw	x10, w2
 97c:	ldr	w11, [x8, w1, sxtw #2]
 980:	add	x10, x10, w4, sxtw #2
 984:	add	w1, w1, #0x1
 988:	add	w2, w2, #0x1
 98c:	str	w11, [x0, x10, lsl #2]
 990:	b	91c <grub_mod_init-0x2d4>
 994:	mov	w19, #0xd                   	// #13
 998:	b	7a0 <grub_mod_init-0x450>
 99c:	nop
	...
 9b0:	stp	x29, x30, [sp, #-64]!
 9b4:	orr	x4, x2, x1
 9b8:	mov	x29, sp
 9bc:	stp	x19, x20, [sp, #16]
 9c0:	tst	x4, #0xf
 9c4:	b.eq	a18 <grub_mod_init-0x1d8>  // b.none
 9c8:	mov	x3, x2
 9cc:	mov	x20, x0
 9d0:	mov	x19, x1
 9d4:	mov	x2, #0x10                  	// #16
 9d8:	mov	x1, x3
 9dc:	add	x0, sp, #0x20
 9e0:	bl	0 <grub_memmove>
 9e4:	add	x2, sp, #0x20
 9e8:	add	x1, sp, #0x30
 9ec:	mov	x0, x20
 9f0:	bl	0 <grub_mod_init-0xbf0>
 9f4:	add	x1, sp, #0x30
 9f8:	mov	x0, x19
 9fc:	mov	x2, #0x10                  	// #16
 a00:	bl	0 <grub_memmove>
 a04:	mov	w0, #0x40                  	// #64
 a08:	bl	0 <_gcry_burn_stack>
 a0c:	ldp	x19, x20, [sp, #16]
 a10:	ldp	x29, x30, [sp], #64
 a14:	ret
 a18:	bl	0 <grub_mod_init-0xbf0>
 a1c:	b	a04 <grub_mod_init-0x1ec>
 a20:	stp	x29, x30, [sp, #-80]!
 a24:	mov	x29, sp
 a28:	stp	x19, x20, [sp, #16]
 a2c:	mov	x19, x0
 a30:	ldr	w0, [x0, #484]
 a34:	str	x21, [sp, #32]
 a38:	mov	x20, x1
 a3c:	mov	x21, x2
 a40:	cbnz	w0, aa0 <grub_mod_init-0x150>
 a44:	mov	x3, x19
 a48:	add	x0, x19, #0xf0
 a4c:	ldr	w1, [x3]
 a50:	add	x3, x3, #0x10
 a54:	str	w1, [x3, #224]
 a58:	ldur	w1, [x3, #-12]
 a5c:	str	w1, [x3, #228]
 a60:	ldur	w1, [x3, #-8]
 a64:	str	w1, [x3, #232]
 a68:	ldur	w1, [x3, #-4]
 a6c:	str	w1, [x3, #236]
 a70:	cmp	x3, x0
 a74:	b.ne	a4c <grub_mod_init-0x1a4>  // b.any
 a78:	add	x3, x19, #0x100
 a7c:	mov	w2, #0x1                   	// #1
 a80:	adrp	x8, 0 <grub_mod_init-0xbf0>
 a84:	ldr	w0, [x19, #480]
 a88:	cmp	w2, w0
 a8c:	b.lt	af4 <grub_mod_init-0xfc>  // b.tstop
 a90:	mov	w0, #0x40                  	// #64
 a94:	bl	0 <_gcry_burn_stack>
 a98:	mov	w0, #0x1                   	// #1
 a9c:	str	w0, [x19, #484]
 aa0:	orr	x0, x21, x20
 aa4:	tst	x0, #0xf
 aa8:	b.eq	bd4 <grub_mod_init-0x1c>  // b.none
 aac:	mov	x1, x21
 ab0:	mov	x2, #0x10                  	// #16
 ab4:	add	x0, sp, #0x30
 ab8:	bl	0 <grub_memmove>
 abc:	add	x2, sp, #0x30
 ac0:	add	x1, sp, #0x40
 ac4:	mov	x0, x19
 ac8:	bl	370 <grub_mod_init-0x880>
 acc:	add	x1, sp, #0x40
 ad0:	mov	x0, x20
 ad4:	mov	x2, #0x10                  	// #16
 ad8:	bl	0 <grub_memmove>
 adc:	mov	w0, #0x40                  	// #64
 ae0:	bl	0 <_gcry_burn_stack>
 ae4:	ldp	x19, x20, [sp, #16]
 ae8:	ldr	x21, [sp, #32]
 aec:	ldp	x29, x30, [sp], #80
 af0:	ret
 af4:	ldr	x0, [x8]
 af8:	add	w2, w2, #0x1
 afc:	ldrb	w4, [x3]
 b00:	add	x3, x3, #0x10
 b04:	ldurb	w1, [x3, #-15]
 b08:	add	x6, x0, #0x78
 b0c:	add	x5, x0, #0x478
 b10:	ldurb	w7, [x3, #-14]
 b14:	ldurb	w9, [x3, #-13]
 b18:	ldr	w4, [x6, x4, lsl #2]
 b1c:	ldr	w1, [x5, x1, lsl #2]
 b20:	eor	w4, w4, w1
 b24:	add	x1, x0, #0x878
 b28:	add	x0, x0, #0xc78
 b2c:	ldr	w7, [x1, x7, lsl #2]
 b30:	ldr	w9, [x0, x9, lsl #2]
 b34:	eor	w7, w7, w9
 b38:	ldurb	w9, [x3, #-9]
 b3c:	eor	w4, w4, w7
 b40:	ldurb	w7, [x3, #-11]
 b44:	stur	w4, [x3, #-16]
 b48:	ldurb	w4, [x3, #-12]
 b4c:	ldr	w9, [x0, x9, lsl #2]
 b50:	ldr	w7, [x5, x7, lsl #2]
 b54:	ldr	w4, [x6, x4, lsl #2]
 b58:	eor	w4, w4, w7
 b5c:	ldurb	w7, [x3, #-10]
 b60:	ldr	w7, [x1, x7, lsl #2]
 b64:	eor	w7, w7, w9
 b68:	ldurb	w9, [x3, #-5]
 b6c:	eor	w4, w4, w7
 b70:	ldurb	w7, [x3, #-7]
 b74:	stur	w4, [x3, #-12]
 b78:	ldurb	w4, [x3, #-8]
 b7c:	ldr	w9, [x0, x9, lsl #2]
 b80:	ldr	w7, [x5, x7, lsl #2]
 b84:	ldr	w4, [x6, x4, lsl #2]
 b88:	eor	w4, w4, w7
 b8c:	ldurb	w7, [x3, #-6]
 b90:	ldr	w7, [x1, x7, lsl #2]
 b94:	eor	w7, w7, w9
 b98:	eor	w4, w4, w7
 b9c:	ldurb	w7, [x3, #-3]
 ba0:	stur	w4, [x3, #-8]
 ba4:	ldurb	w4, [x3, #-4]
 ba8:	ldr	w5, [x5, x7, lsl #2]
 bac:	ldr	w4, [x6, x4, lsl #2]
 bb0:	ldurb	w6, [x3, #-2]
 bb4:	eor	w4, w4, w5
 bb8:	ldurb	w5, [x3, #-1]
 bbc:	ldr	w1, [x1, x6, lsl #2]
 bc0:	ldr	w0, [x0, x5, lsl #2]
 bc4:	eor	w0, w1, w0
 bc8:	eor	w0, w4, w0
 bcc:	stur	w0, [x3, #-4]
 bd0:	b	a84 <grub_mod_init-0x16c>
 bd4:	mov	x2, x21
 bd8:	mov	x1, x20
 bdc:	mov	x0, x19
 be0:	bl	370 <grub_mod_init-0x880>
 be4:	b	adc <grub_mod_init-0x114>
	...

0000000000000bf0 <grub_mod_init>:
 bf0:	stp	x29, x30, [sp, #-32]!
 bf4:	adrp	x0, 0 <grub_mod_init-0xbf0>
 bf8:	mov	x29, sp
 bfc:	str	x19, [sp, #16]
 c00:	ldr	x19, [x0]
 c04:	mov	x0, x19
 c08:	bl	0 <grub_cipher_register>
 c0c:	add	x0, x19, #0x60
 c10:	bl	0 <grub_cipher_register>
 c14:	add	x0, x19, #0xc0
 c18:	ldr	x19, [sp, #16]
 c1c:	ldp	x29, x30, [sp], #32
 c20:	b	0 <grub_cipher_register>
 c24:	nop
	...

0000000000000c30 <grub_mod_fini>:
 c30:	stp	x29, x30, [sp, #-32]!
 c34:	adrp	x0, 0 <grub_mod_init-0xbf0>
 c38:	mov	x29, sp
 c3c:	str	x19, [sp, #16]
 c40:	ldr	x19, [x0]
 c44:	mov	x0, x19
 c48:	bl	0 <grub_cipher_unregister>
 c4c:	add	x0, x19, #0x60
 c50:	bl	0 <grub_cipher_unregister>
 c54:	add	x0, x19, #0xc0
 c58:	ldr	x19, [sp, #16]
 c5c:	ldp	x29, x30, [sp], #32
 c60:	b	0 <grub_cipher_unregister>
 c64:	nop
	...
