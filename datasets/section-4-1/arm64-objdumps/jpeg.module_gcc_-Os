
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//jpeg.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_jpeg_get_byte.isra.0>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x2, #0x1                   	// #1
       8:	mov	x29, sp
       c:	add	x1, sp, #0x1f
      10:	strb	wzr, [sp, #31]
      14:	bl	0 <grub_file_read>
      18:	ldrb	w0, [sp, #31]
      1c:	ldp	x29, x30, [sp], #32
      20:	ret

0000000000000024 <grub_jpeg_get_marker>:
      24:	stp	x29, x30, [sp, #-32]!
      28:	mov	x29, sp
      2c:	str	x19, [sp, #16]
      30:	mov	x19, x0
      34:	ldr	x0, [x0]
      38:	bl	0 <grub_jpeg_get_byte.isra.0>
      3c:	and	w0, w0, #0xff
      40:	cmp	w0, #0xff
      44:	b.ne	58 <grub_jpeg_get_marker+0x34>  // b.any
      48:	ldr	x0, [x19]
      4c:	ldr	x19, [sp, #16]
      50:	ldp	x29, x30, [sp], #32
      54:	b	0 <grub_jpeg_get_byte.isra.0>
      58:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
      5c:	ldr	x1, [x0]
      60:	mov	w0, #0x4                   	// #4
      64:	bl	0 <grub_error>
      68:	mov	w0, #0x0                   	// #0
      6c:	ldr	x19, [sp, #16]
      70:	ldp	x29, x30, [sp], #32
      74:	ret
	...

0000000000000080 <grub_jpeg_get_bit>:
      80:	stp	x29, x30, [sp, #-32]!
      84:	mov	x29, sp
      88:	stp	x19, x20, [sp, #16]
      8c:	mov	x19, x0
      90:	ldr	w20, [x0, #2308]
      94:	cbnz	w20, e8 <grub_jpeg_get_bit+0x68>
      98:	ldr	x0, [x0]
      9c:	bl	0 <grub_jpeg_get_byte.isra.0>
      a0:	and	w0, w0, #0xff
      a4:	str	w0, [x19, #2312]
      a8:	cmp	w0, #0xff
      ac:	b.ne	e0 <grub_jpeg_get_bit+0x60>  // b.any
      b0:	ldr	x0, [x19]
      b4:	bl	0 <grub_jpeg_get_byte.isra.0>
      b8:	tst	w0, #0xff
      bc:	b.eq	e0 <grub_jpeg_get_bit+0x60>  // b.none
      c0:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
      c4:	ldr	x1, [x0]
      c8:	mov	w0, #0x4                   	// #4
      cc:	bl	0 <grub_error>
      d0:	mov	w0, w20
      d4:	ldp	x19, x20, [sp, #16]
      d8:	ldp	x29, x30, [sp], #32
      dc:	ret
      e0:	mov	w0, #0x80                  	// #128
      e4:	str	w0, [x19, #2308]
      e8:	ldr	w0, [x19, #2308]
      ec:	ldr	w1, [x19, #2312]
      f0:	tst	w0, w1
      f4:	asr	w0, w0, #1
      f8:	cset	w20, ne  // ne = any
      fc:	str	w0, [x19, #2308]
     100:	b	d0 <grub_jpeg_get_bit+0x50>
     104:	nop
	...

0000000000000110 <grub_jpeg_get_huff_code>:
     110:	stp	x29, x30, [sp, #-64]!
     114:	mov	x29, sp
     118:	stp	x19, x20, [sp, #16]
     11c:	sbfiz	x20, x1, #6, #32
     120:	add	x20, x20, #0x140
     124:	add	x20, x0, x20
     128:	stp	x21, x22, [sp, #32]
     12c:	mov	x21, x0
     130:	stp	x23, x24, [sp, #48]
     134:	sxtw	x24, w1
     138:	mov	x22, #0x0                   	// #0
     13c:	mov	w19, #0x0                   	// #0
     140:	mov	x0, x21
     144:	bl	80 <grub_jpeg_get_bit>
     148:	lsl	w19, w19, #1
     14c:	cmp	w0, #0x0
     150:	ldr	w0, [x20, x22, lsl #2]
     154:	cinc	w19, w19, ne  // ne = any
     158:	cmp	w0, w19
     15c:	b.le	194 <grub_jpeg_get_huff_code+0x84>
     160:	add	x0, x24, #0x4
     164:	lsl	x24, x24, #4
     168:	add	x23, x24, w22, uxtw
     16c:	add	x23, x23, #0x10
     170:	ldr	x0, [x21, x0, lsl #3]
     174:	ldr	w1, [x21, x23, lsl #2]
     178:	add	w19, w19, w1
     17c:	ldrb	w0, [x0, w19, sxtw]
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x21, x22, [sp, #32]
     188:	ldp	x23, x24, [sp, #48]
     18c:	ldp	x29, x30, [sp], #64
     190:	ret
     194:	add	x22, x22, #0x1
     198:	cmp	x22, #0x10
     19c:	b.ne	140 <grub_jpeg_get_huff_code+0x30>  // b.any
     1a0:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     1a4:	ldr	x1, [x0]
     1a8:	mov	w0, #0x4                   	// #4
     1ac:	bl	0 <grub_error>
     1b0:	mov	w0, #0x0                   	// #0
     1b4:	b	180 <grub_jpeg_get_huff_code+0x70>
	...

00000000000001c0 <grub_jpeg_get_number.part.0>:
     1c0:	stp	x29, x30, [sp, #-64]!
     1c4:	mov	x29, sp
     1c8:	stp	x19, x20, [sp, #16]
     1cc:	mov	w20, w1
     1d0:	stp	x21, x22, [sp, #32]
     1d4:	mov	w22, #0x1                   	// #1
     1d8:	str	x23, [sp, #48]
     1dc:	mov	x23, x0
     1e0:	bl	80 <grub_jpeg_get_bit>
     1e4:	mov	w21, w0
     1e8:	cmp	w22, w20
     1ec:	b.lt	218 <grub_jpeg_get_number.part.0+0x58>  // b.tstop
     1f0:	cbnz	w21, 204 <grub_jpeg_get_number.part.0+0x44>
     1f4:	mov	w1, #0x1                   	// #1
     1f8:	lsl	w20, w1, w20
     1fc:	sub	w20, w1, w20
     200:	add	w0, w0, w20
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x21, x22, [sp, #32]
     20c:	ldr	x23, [sp, #48]
     210:	ldp	x29, x30, [sp], #64
     214:	ret
     218:	lsl	w19, w0, #1
     21c:	mov	x0, x23
     220:	bl	80 <grub_jpeg_get_bit>
     224:	cmp	w0, #0x0
     228:	cinc	w0, w19, ne  // ne = any
     22c:	add	w22, w22, #0x1
     230:	b	1e8 <grub_jpeg_get_number.part.0+0x28>

0000000000000234 <grub_jpeg_get_word.isra.0>:
     234:	stp	x29, x30, [sp, #-32]!
     238:	mov	x2, #0x2                   	// #2
     23c:	mov	x29, sp
     240:	add	x1, sp, #0x1e
     244:	strh	wzr, [sp, #30]
     248:	bl	0 <grub_file_read>
     24c:	ldrh	w1, [sp, #30]
     250:	ldrb	w0, [sp, #31]
     254:	ldp	x29, x30, [sp], #32
     258:	orr	w0, w0, w1, lsl #8
     25c:	ret

0000000000000260 <grub_jpeg_decode_du>:
     260:	stp	x29, x30, [sp, #-96]!
     264:	mov	x29, sp
     268:	stp	x19, x20, [sp, #16]
     26c:	mov	x20, x2
     270:	sxtw	x19, w1
     274:	mov	x2, #0x100                 	// #256
     278:	mov	w1, #0x0                   	// #0
     27c:	stp	x21, x22, [sp, #32]
     280:	mov	x22, x0
     284:	mov	x0, x20
     288:	stp	x23, x24, [sp, #48]
     28c:	stp	x25, x26, [sp, #64]
     290:	stp	x27, x28, [sp, #80]
     294:	bl	0 <grub_memset>
     298:	mov	x0, #0xc                   	// #12
     29c:	madd	x0, x19, x0, x22
     2a0:	ldr	w1, [x0, #708]
     2a4:	ldr	w23, [x0, #704]
     2a8:	ldr	w21, [x0, #712]
     2ac:	mov	x0, x22
     2b0:	bl	110 <grub_jpeg_get_huff_code>
     2b4:	mov	w1, w0
     2b8:	cbz	w0, 2c8 <grub_jpeg_decode_du+0x68>
     2bc:	mov	x0, x22
     2c0:	bl	1c0 <grub_jpeg_get_number.part.0>
     2c4:	mov	w1, w0
     2c8:	add	x19, x22, x19, lsl #2
     2cc:	sxtw	x23, w23
     2d0:	mov	w25, #0x1                   	// #1
     2d4:	adrp	x24, 0 <grub_jpeg_get_byte.isra.0>
     2d8:	ldr	w0, [x19, #2292]
     2dc:	add	w1, w1, w0
     2e0:	add	x0, x22, x23, lsl #6
     2e4:	str	w1, [x19, #2292]
     2e8:	add	x23, x22, x23, lsl #6
     2ec:	ldrb	w0, [x0, #576]
     2f0:	mul	w1, w0, w1
     2f4:	str	w1, [x20]
     2f8:	mov	w1, w21
     2fc:	mov	x0, x22
     300:	bl	110 <grub_jpeg_get_huff_code>
     304:	mov	w19, w0
     308:	cbnz	w0, 480 <grub_jpeg_decode_du+0x220>
     30c:	add	x10, x20, #0x20
     310:	mov	x0, x20
     314:	mov	w11, #0x8b                  	// #139
     318:	mov	w12, #0xfffffe27            	// #-473
     31c:	mov	w13, #0xc4                  	// #196
     320:	mov	w14, #0x12d                 	// #301
     324:	mov	w15, #0xe6                  	// #230
     328:	mov	w16, #0x290                 	// #656
     32c:	mov	w17, #0x1f6                 	// #502
     330:	mov	w18, #0x64                  	// #100
     334:	mov	w19, #0x4c                  	// #76
     338:	mov	w21, #0x20e                 	// #526
     33c:	mov	w22, #0x313                 	// #787
     340:	mov	w23, #0x180                 	// #384
     344:	ldr	w3, [x0, #32]
     348:	ldr	w24, [x0, #64]
     34c:	ldr	w6, [x0, #96]
     350:	ldr	w25, [x0, #128]
     354:	orr	w2, w3, w24
     358:	ldr	w5, [x0, #160]
     35c:	ldr	w9, [x0, #192]
     360:	orr	w7, w6, w25
     364:	orr	w2, w2, w7
     368:	ldr	w4, [x0, #224]
     36c:	orr	w7, w5, w9
     370:	ldr	w1, [x0]
     374:	orr	w2, w2, w7
     378:	orr	w2, w2, w4
     37c:	cbnz	w2, 4c4 <grub_jpeg_decode_du+0x264>
     380:	lsl	w1, w1, #8
     384:	str	w1, [x0]
     388:	str	w1, [x0, #32]
     38c:	str	w1, [x0, #64]
     390:	str	w1, [x0, #96]
     394:	str	w1, [x0, #128]
     398:	str	w1, [x0, #160]
     39c:	str	w1, [x0, #192]
     3a0:	str	w1, [x0, #224]
     3a4:	add	x0, x0, #0x4
     3a8:	cmp	x0, x10
     3ac:	b.ne	344 <grub_jpeg_decode_du+0xe4>  // b.any
     3b0:	add	x9, x20, #0x100
     3b4:	mov	x0, x20
     3b8:	mov	w10, #0x8b                  	// #139
     3bc:	mov	w11, #0xfffffe27            	// #-473
     3c0:	mov	w12, #0xc4                  	// #196
     3c4:	mov	w13, #0x12d                 	// #301
     3c8:	mov	w14, #0xe6                  	// #230
     3cc:	mov	w15, #0x290                 	// #656
     3d0:	mov	w16, #0x1f6                 	// #502
     3d4:	mov	w17, #0x64                  	// #100
     3d8:	mov	w18, #0x4c                  	// #76
     3dc:	mov	w19, #0x20e                 	// #526
     3e0:	mov	w21, #0x313                 	// #787
     3e4:	mov	w30, #0x180                 	// #384
     3e8:	ldp	w7, w4, [x0, #8]
     3ec:	ldp	w23, w3, [x0, #16]
     3f0:	ldp	w1, w5, [x0]
     3f4:	orr	w22, w4, w23
     3f8:	ldp	w8, w2, [x0, #24]
     3fc:	orr	w6, w5, w7
     400:	orr	w6, w6, w22
     404:	orr	w22, w3, w8
     408:	orr	w6, w6, w22
     40c:	orr	w6, w6, w2
     410:	cbnz	w6, 598 <grub_jpeg_decode_du+0x338>
     414:	asr	w1, w1, #11
     418:	stp	w1, w1, [x0]
     41c:	stp	w1, w1, [x0, #8]
     420:	stp	w1, w1, [x0, #16]
     424:	stp	w1, w1, [x0, #24]
     428:	add	x0, x0, #0x20
     42c:	cmp	x0, x9
     430:	b.ne	3e8 <grub_jpeg_decode_du+0x188>  // b.any
     434:	mov	x1, #0x0                   	// #0
     438:	mov	w2, #0xff                  	// #255
     43c:	ldr	w0, [x20, x1, lsl #2]
     440:	add	w0, w0, #0x80
     444:	cmp	w0, #0xff
     448:	csel	w0, w0, w2, le
     44c:	cmp	w0, #0x0
     450:	csel	w0, w0, wzr, ge  // ge = tcont
     454:	str	w0, [x20, x1, lsl #2]
     458:	add	x1, x1, #0x1
     45c:	cmp	x1, #0x40
     460:	b.ne	43c <grub_jpeg_decode_du+0x1dc>  // b.any
     464:	ldp	x19, x20, [sp, #16]
     468:	ldp	x21, x22, [sp, #32]
     46c:	ldp	x23, x24, [sp, #48]
     470:	ldp	x25, x26, [sp, #64]
     474:	ldp	x27, x28, [sp, #80]
     478:	ldp	x29, x30, [sp], #96
     47c:	ret
     480:	ands	w1, w0, #0xf
     484:	b.eq	494 <grub_jpeg_decode_du+0x234>  // b.none
     488:	mov	x0, x22
     48c:	bl	1c0 <grub_jpeg_get_number.part.0>
     490:	mov	w1, w0
     494:	ldr	x0, [x24]
     498:	add	w2, w25, w19, asr #4
     49c:	add	w19, w25, w19, asr #4
     4a0:	add	w25, w2, #0x1
     4a4:	cmp	w25, #0x3f
     4a8:	ldrb	w3, [x0, x19]
     4ac:	add	x19, x23, x19
     4b0:	ldrb	w0, [x19, #576]
     4b4:	mul	w1, w0, w1
     4b8:	str	w1, [x20, x3, lsl #2]
     4bc:	b.ls	2f8 <grub_jpeg_decode_du+0x98>  // b.plast
     4c0:	b	30c <grub_jpeg_decode_du+0xac>
     4c4:	add	w8, w24, w9
     4c8:	add	w7, w25, w1
     4cc:	sub	w1, w1, w25
     4d0:	add	w30, w6, w4
     4d4:	add	w28, w3, w5
     4d8:	lsl	w26, w7, #8
     4dc:	mul	w8, w8, w11
     4e0:	lsl	w25, w1, #8
     4e4:	madd	w24, w24, w13, w8
     4e8:	madd	w2, w9, w12, w8
     4ec:	sub	w8, w26, w24
     4f0:	sub	w9, w25, w2
     4f4:	add	w7, w24, w7, lsl #8
     4f8:	add	w25, w3, w4
     4fc:	add	w24, w30, w28
     500:	add	w1, w2, w1, lsl #8
     504:	add	w2, w6, w5
     508:	mul	w3, w3, w23
     50c:	mul	w27, w24, w14
     510:	mul	w25, w25, w15
     514:	mul	w24, w28, w18
     518:	mul	w26, w2, w16
     51c:	sub	w3, w3, w25
     520:	mul	w2, w6, w22
     524:	sub	w24, w24, w27
     528:	mul	w30, w30, w17
     52c:	sub	w3, w3, w24
     530:	mul	w5, w5, w21
     534:	sub	w2, w2, w26
     538:	sub	w30, w30, w27
     53c:	mul	w4, w4, w19
     540:	sub	w2, w2, w30
     544:	add	w6, w7, w3
     548:	sub	w5, w5, w26
     54c:	sub	w3, w7, w3
     550:	sub	w5, w5, w24
     554:	sub	w4, w4, w25
     558:	str	w3, [x0, #224]
     55c:	add	w3, w1, w2
     560:	sub	w1, w1, w2
     564:	sub	w4, w4, w30
     568:	str	w1, [x0, #192]
     56c:	add	w1, w9, w5
     570:	sub	w5, w9, w5
     574:	str	w6, [x0]
     578:	str	w3, [x0, #32]
     57c:	str	w1, [x0, #64]
     580:	add	w1, w8, w4
     584:	sub	w4, w8, w4
     588:	str	w1, [x0, #96]
     58c:	str	w4, [x0, #128]
     590:	str	w5, [x0, #160]
     594:	b	3a4 <grub_jpeg_decode_du+0x144>
     598:	add	w22, w7, w8
     59c:	add	w6, w23, w1
     5a0:	sub	w1, w1, w23
     5a4:	add	w27, w5, w3
     5a8:	lsl	w24, w6, #8
     5ac:	add	w25, w4, w3
     5b0:	mul	w22, w22, w10
     5b4:	lsl	w23, w1, #8
     5b8:	madd	w7, w7, w12, w22
     5bc:	madd	w8, w8, w11, w22
     5c0:	mul	w25, w25, w15
     5c4:	add	w6, w7, w6, lsl #8
     5c8:	sub	w7, w24, w7
     5cc:	add	w24, w4, w2
     5d0:	add	w1, w8, w1, lsl #8
     5d4:	add	w22, w24, w27
     5d8:	sub	w8, w23, w8
     5dc:	add	w23, w5, w2
     5e0:	mul	w5, w5, w30
     5e4:	mul	w3, w3, w19
     5e8:	mul	w26, w22, w13
     5ec:	mul	w23, w23, w14
     5f0:	sub	w3, w3, w25
     5f4:	mul	w22, w27, w17
     5f8:	sub	w5, w5, w23
     5fc:	mul	w24, w24, w16
     600:	sub	w22, w22, w26
     604:	mul	w4, w4, w21
     608:	sub	w5, w5, w22
     60c:	sub	w3, w3, w22
     610:	add	w22, w6, w5
     614:	sub	w5, w6, w5
     618:	sub	w24, w24, w26
     61c:	sub	w4, w4, w25
     620:	sub	w4, w4, w24
     624:	asr	w5, w5, #19
     628:	str	w5, [x0, #28]
     62c:	add	w5, w1, w4
     630:	sub	w1, w1, w4
     634:	mul	w2, w2, w18
     638:	asr	w22, w22, #19
     63c:	asr	w5, w5, #19
     640:	asr	w1, w1, #19
     644:	str	w1, [x0, #24]
     648:	add	w1, w8, w3
     64c:	sub	w2, w2, w23
     650:	sub	w2, w2, w24
     654:	sub	w3, w8, w3
     658:	asr	w1, w1, #19
     65c:	str	w1, [x0, #8]
     660:	add	w1, w7, w2
     664:	sub	w2, w7, w2
     668:	asr	w3, w3, #19
     66c:	str	w22, [x0]
     670:	asr	w1, w1, #19
     674:	asr	w2, w2, #19
     678:	str	w5, [x0, #4]
     67c:	stp	w1, w2, [x0, #12]
     680:	str	w3, [x0, #20]
     684:	b	428 <grub_jpeg_decode_du+0x1c8>
	...

0000000000000690 <grub_video_reader_jpeg>:
     690:	stp	x29, x30, [sp, #-144]!
     694:	mov	x2, #0x0                   	// #0
     698:	mov	x29, sp
     69c:	stp	x19, x20, [sp, #16]
     6a0:	stp	x21, x22, [sp, #32]
     6a4:	stp	x23, x24, [sp, #48]
     6a8:	stp	x25, x26, [sp, #64]
     6ac:	mov	x25, x0
     6b0:	mov	x0, x1
     6b4:	mov	w1, #0x31                  	// #49
     6b8:	stp	x27, x28, [sp, #80]
     6bc:	bl	0 <grub_buffile_open>
     6c0:	cbnz	x0, 6ec <grub_video_reader_jpeg+0x5c>
     6c4:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     6c8:	ldr	x0, [x0]
     6cc:	ldr	w0, [x0]
     6d0:	ldp	x19, x20, [sp, #16]
     6d4:	ldp	x21, x22, [sp, #32]
     6d8:	ldp	x23, x24, [sp, #48]
     6dc:	ldp	x25, x26, [sp, #64]
     6e0:	ldp	x27, x28, [sp, #80]
     6e4:	ldp	x29, x30, [sp], #144
     6e8:	ret
     6ec:	mov	x24, x0
     6f0:	mov	x0, #0x910                 	// #2320
     6f4:	bl	0 <grub_zalloc>
     6f8:	mov	x19, x0
     6fc:	cbz	x0, 744 <grub_video_reader_jpeg+0xb4>
     700:	stp	x24, x25, [x0]
     704:	bl	24 <grub_jpeg_get_marker>
     708:	and	w0, w0, #0xff
     70c:	cmp	w0, #0xd8
     710:	b.eq	7f4 <grub_video_reader_jpeg+0x164>  // b.none
     714:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     718:	ldr	x1, [x0]
     71c:	mov	w0, #0x4                   	// #4
     720:	bl	0 <grub_error>
     724:	add	x20, x19, #0x20
     728:	add	x21, x19, #0x40
     72c:	ldr	x0, [x20], #8
     730:	bl	0 <grub_free>
     734:	cmp	x20, x21
     738:	b.ne	72c <grub_video_reader_jpeg+0x9c>  // b.any
     73c:	mov	x0, x19
     740:	bl	0 <grub_free>
     744:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     748:	ldr	x19, [x0]
     74c:	ldr	w0, [x19]
     750:	cbz	w0, 760 <grub_video_reader_jpeg+0xd0>
     754:	ldr	x0, [x25]
     758:	bl	0 <grub_video_bitmap_destroy>
     75c:	str	xzr, [x25]
     760:	mov	x0, x24
     764:	bl	0 <grub_file_close>
     768:	ldr	w0, [x19]
     76c:	b	6d0 <grub_video_reader_jpeg+0x40>
     770:	sub	w20, w20, #0xd0
     774:	cmp	w20, #0xd
     778:	b.hi	85c <grub_video_reader_jpeg+0x1cc>  // b.pmore
     77c:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     780:	ldr	x0, [x0]
     784:	ldrh	w0, [x0, w20, uxtw #1]
     788:	adr	x1, 794 <grub_video_reader_jpeg+0x104>
     78c:	add	x0, x1, w0, sxth #2
     790:	br	x0
     794:	ldr	x0, [x19]
     798:	add	x22, sp, #0x80
     79c:	ldr	x21, [x0, #24]
     7a0:	bl	234 <grub_jpeg_get_word.isra.0>
     7a4:	add	w21, w21, w0, uxth
     7a8:	ldr	x0, [x19]
     7ac:	ldr	x1, [x0, #24]
     7b0:	add	x2, x1, #0x11
     7b4:	cmp	x2, x21
     7b8:	b.ls	7d0 <grub_video_reader_jpeg+0x140>  // b.plast
     7bc:	cmp	x1, x21
     7c0:	b.eq	7f4 <grub_video_reader_jpeg+0x164>  // b.none
     7c4:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     7c8:	ldr	x1, [x0]
     7cc:	b	7ec <grub_video_reader_jpeg+0x15c>
     7d0:	bl	0 <grub_jpeg_get_byte.isra.0>
     7d4:	ubfx	x20, x0, #4, #1
     7d8:	and	w27, w0, #0xf
     7dc:	tst	w0, #0xe
     7e0:	b.eq	888 <grub_video_reader_jpeg+0x1f8>  // b.none
     7e4:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     7e8:	ldr	x1, [x0]
     7ec:	mov	w0, #0x4                   	// #4
     7f0:	bl	0 <grub_error>
     7f4:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     7f8:	ldr	x23, [x0]
     7fc:	ldr	w0, [x23]
     800:	cbnz	w0, 724 <grub_video_reader_jpeg+0x94>
     804:	mov	x0, x19
     808:	bl	24 <grub_jpeg_get_marker>
     80c:	and	w20, w0, #0xff
     810:	ldr	w0, [x23]
     814:	cbnz	w0, 724 <grub_video_reader_jpeg+0x94>
     818:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     81c:	mov	w4, w20
     820:	mov	w1, #0x2d0                 	// #720
     824:	ldr	x3, [x0]
     828:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     82c:	ldr	x2, [x0]
     830:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     834:	ldr	x0, [x0]
     838:	bl	0 <grub_real_dprintf>
     83c:	cmp	w20, #0xdd
     840:	b.hi	85c <grub_video_reader_jpeg+0x1cc>  // b.pmore
     844:	cmp	w20, #0xcf
     848:	b.hi	770 <grub_video_reader_jpeg+0xe0>  // b.pmore
     84c:	cmp	w20, #0xc0
     850:	b.eq	9c8 <grub_video_reader_jpeg+0x338>  // b.none
     854:	cmp	w20, #0xc4
     858:	b.eq	794 <grub_video_reader_jpeg+0x104>  // b.none
     85c:	ldr	x0, [x19]
     860:	bl	234 <grub_jpeg_get_word.isra.0>
     864:	mov	w1, w0
     868:	ldr	w0, [x23]
     86c:	cbnz	w0, 724 <grub_video_reader_jpeg+0x94>
     870:	ldr	x0, [x19]
     874:	ldr	x2, [x0, #24]
     878:	sub	x2, x2, #0x2
     87c:	add	x1, x2, w1, uxth
     880:	bl	0 <grub_file_seek>
     884:	b	7f4 <grub_video_reader_jpeg+0x164>
     888:	ldr	x0, [x19]
     88c:	mov	x1, x22
     890:	mov	x2, #0x10                  	// #16
     894:	bl	0 <grub_file_read>
     898:	cmp	x0, #0x10
     89c:	b.ne	7f4 <grub_video_reader_jpeg+0x164>  // b.any
     8a0:	mov	x0, #0x0                   	// #0
     8a4:	mov	w26, #0x0                   	// #0
     8a8:	ldrb	w1, [x22, x0]
     8ac:	add	x0, x0, #0x1
     8b0:	cmp	x0, #0x10
     8b4:	add	w26, w26, w1
     8b8:	b.ne	8a8 <grub_video_reader_jpeg+0x218>  // b.any
     8bc:	add	w20, w27, w20, lsl #1
     8c0:	sxtw	x26, w26
     8c4:	mov	x0, x26
     8c8:	bl	0 <grub_malloc>
     8cc:	sxtw	x20, w20
     8d0:	mov	x1, x0
     8d4:	add	x0, x20, #0x4
     8d8:	str	x1, [x19, x0, lsl #3]
     8dc:	ldr	w0, [x23]
     8e0:	cbnz	w0, 7f4 <grub_video_reader_jpeg+0x164>
     8e4:	ldr	x0, [x19]
     8e8:	mov	x2, x26
     8ec:	bl	0 <grub_file_read>
     8f0:	cmp	x0, x26
     8f4:	b.ne	7f4 <grub_video_reader_jpeg+0x164>  // b.any
     8f8:	add	x1, x19, x20, lsl #6
     8fc:	mov	x0, #0x0                   	// #0
     900:	mov	w4, #0x0                   	// #0
     904:	mov	w2, #0x0                   	// #0
     908:	ldrb	w6, [x22, x0]
     90c:	mov	w3, w4
     910:	add	x0, x0, #0x1
     914:	add	x1, x1, #0x4
     918:	add	w5, w6, w2
     91c:	sub	w2, w3, w2
     920:	str	w2, [x1, #60]
     924:	add	w4, w4, w6
     928:	str	w5, [x1, #316]
     92c:	cmp	x0, #0x10
     930:	lsl	w2, w5, #1
     934:	b.ne	908 <grub_video_reader_jpeg+0x278>  // b.any
     938:	b	7a8 <grub_video_reader_jpeg+0x118>
     93c:	ldr	x0, [x19]
     940:	ldr	x20, [x0, #24]
     944:	bl	234 <grub_jpeg_get_word.isra.0>
     948:	add	w20, w20, w0, uxth
     94c:	ldr	x0, [x19]
     950:	ldr	x1, [x0, #24]
     954:	add	x2, x1, #0x41
     958:	cmp	x2, x20
     95c:	b.ls	974 <grub_video_reader_jpeg+0x2e4>  // b.plast
     960:	cmp	x1, x20
     964:	b.eq	7f4 <grub_video_reader_jpeg+0x164>  // b.none
     968:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     96c:	ldr	x1, [x0]
     970:	b	7ec <grub_video_reader_jpeg+0x15c>
     974:	bl	0 <grub_jpeg_get_byte.isra.0>
     978:	and	w1, w0, #0xff
     97c:	cmp	w1, #0xf
     980:	b.le	990 <grub_video_reader_jpeg+0x300>
     984:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     988:	ldr	x1, [x0]
     98c:	b	7ec <grub_video_reader_jpeg+0x15c>
     990:	cmp	w1, #0x1
     994:	b.le	9a4 <grub_video_reader_jpeg+0x314>
     998:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     99c:	ldr	x1, [x0]
     9a0:	b	7ec <grub_video_reader_jpeg+0x15c>
     9a4:	ubfiz	x0, x0, #6, #8
     9a8:	mov	x2, #0x40                  	// #64
     9ac:	add	x1, x0, #0x240
     9b0:	ldr	x0, [x19]
     9b4:	add	x1, x19, x1
     9b8:	bl	0 <grub_file_read>
     9bc:	cmp	x0, #0x40
     9c0:	b.eq	94c <grub_video_reader_jpeg+0x2bc>  // b.none
     9c4:	b	7f4 <grub_video_reader_jpeg+0x164>
     9c8:	ldr	x0, [x19]
     9cc:	ldr	x26, [x0, #24]
     9d0:	bl	234 <grub_jpeg_get_word.isra.0>
     9d4:	and	w21, w0, #0xffff
     9d8:	ldr	x0, [x19]
     9dc:	bl	0 <grub_jpeg_get_byte.isra.0>
     9e0:	and	w0, w0, #0xff
     9e4:	cmp	w0, #0x8
     9e8:	b.ne	984 <grub_video_reader_jpeg+0x2f4>  // b.any
     9ec:	ldr	x0, [x19]
     9f0:	bl	234 <grub_jpeg_get_word.isra.0>
     9f4:	and	w0, w0, #0xffff
     9f8:	str	w0, [x19, #28]
     9fc:	ldr	x0, [x19]
     a00:	bl	234 <grub_jpeg_get_word.isra.0>
     a04:	and	w0, w0, #0xffff
     a08:	ldr	w1, [x19, #28]
     a0c:	str	w0, [x19, #24]
     a10:	cbz	w1, a18 <grub_video_reader_jpeg+0x388>
     a14:	cbnz	w0, a24 <grub_video_reader_jpeg+0x394>
     a18:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     a1c:	ldr	x1, [x0]
     a20:	b	7ec <grub_video_reader_jpeg+0x15c>
     a24:	ldr	x0, [x19]
     a28:	bl	0 <grub_jpeg_get_byte.isra.0>
     a2c:	and	w22, w0, #0xff
     a30:	and	w0, w22, #0xfffffffd
     a34:	cmp	w0, #0x1
     a38:	b.eq	a48 <grub_video_reader_jpeg+0x3b8>  // b.none
     a3c:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     a40:	ldr	x1, [x0]
     a44:	b	7ec <grub_video_reader_jpeg+0x15c>
     a48:	mov	w23, #0x0                   	// #0
     a4c:	mov	x27, #0xc                   	// #12
     a50:	str	w22, [x19, #2304]
     a54:	cmp	w22, w23
     a58:	ldr	x0, [x19]
     a5c:	b.gt	a7c <grub_video_reader_jpeg+0x3ec>
     a60:	ldr	x0, [x0, #24]
     a64:	add	w21, w21, w26
     a68:	cmp	x0, x21
     a6c:	b.eq	7f4 <grub_video_reader_jpeg+0x164>  // b.none
     a70:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     a74:	ldr	x1, [x0]
     a78:	b	7ec <grub_video_reader_jpeg+0x15c>
     a7c:	bl	0 <grub_jpeg_get_byte.isra.0>
     a80:	and	w20, w0, #0xff
     a84:	sub	w20, w20, #0x1
     a88:	cmp	w20, #0x2
     a8c:	b.ls	a9c <grub_video_reader_jpeg+0x40c>  // b.plast
     a90:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     a94:	ldr	x1, [x0]
     a98:	b	7ec <grub_video_reader_jpeg+0x15c>
     a9c:	ldr	x0, [x19]
     aa0:	bl	0 <grub_jpeg_get_byte.isra.0>
     aa4:	and	w0, w0, #0xff
     aa8:	cbnz	w20, b14 <grub_video_reader_jpeg+0x484>
     aac:	and	w3, w0, #0xf
     ab0:	lsr	w0, w0, #4
     ab4:	sub	w2, w3, #0x1
     ab8:	sub	w1, w0, #0x1
     abc:	and	w2, w2, #0xff
     ac0:	and	w1, w1, #0xff
     ac4:	cmp	w2, #0x1
     ac8:	ccmp	w1, #0x1, #0x2, ls  // ls = plast
     acc:	b.ls	adc <grub_video_reader_jpeg+0x44c>  // b.plast
     ad0:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     ad4:	ldr	x1, [x0]
     ad8:	b	7ec <grub_video_reader_jpeg+0x15c>
     adc:	cmp	w3, #0x2
     ae0:	cset	w1, eq  // eq = none
     ae4:	cmp	w0, #0x2
     ae8:	cset	w0, eq  // eq = none
     aec:	str	w1, [x19, #2276]
     af0:	str	w0, [x19, #2280]
     af4:	sxtw	x20, w20
     af8:	add	w23, w23, #0x1
     afc:	ldr	x0, [x19]
     b00:	madd	x20, x20, x27, x19
     b04:	bl	0 <grub_jpeg_get_byte.isra.0>
     b08:	and	w0, w0, #0xff
     b0c:	str	w0, [x20, #704]
     b10:	b	a54 <grub_video_reader_jpeg+0x3c4>
     b14:	cmp	w0, #0x11
     b18:	b.eq	af4 <grub_video_reader_jpeg+0x464>  // b.none
     b1c:	b	ad0 <grub_video_reader_jpeg+0x440>
     b20:	ldr	x0, [x19]
     b24:	bl	234 <grub_jpeg_get_word.isra.0>
     b28:	and	w0, w0, #0xffff
     b2c:	cmp	w0, #0x4
     b30:	b.eq	b40 <grub_video_reader_jpeg+0x4b0>  // b.none
     b34:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     b38:	ldr	x1, [x0]
     b3c:	b	7ec <grub_video_reader_jpeg+0x15c>
     b40:	ldr	x0, [x19]
     b44:	bl	234 <grub_jpeg_get_word.isra.0>
     b48:	and	w0, w0, #0xffff
     b4c:	str	w0, [x19, #2284]
     b50:	b	7f4 <grub_video_reader_jpeg+0x164>
     b54:	ldr	x0, [x19]
     b58:	ldr	x22, [x0, #24]
     b5c:	bl	234 <grub_jpeg_get_word.isra.0>
     b60:	and	w21, w0, #0xffff
     b64:	ldr	x0, [x19]
     b68:	bl	0 <grub_jpeg_get_byte.isra.0>
     b6c:	and	w27, w0, #0xff
     b70:	and	w0, w27, #0xfffffffd
     b74:	cmp	w0, #0x1
     b78:	b.eq	b94 <grub_video_reader_jpeg+0x504>  // b.none
     b7c:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     b80:	ldr	x1, [x0]
     b84:	mov	w0, #0x4                   	// #4
     b88:	bl	0 <grub_error>
     b8c:	cbnz	w0, 7f4 <grub_video_reader_jpeg+0x164>
     b90:	b	c50 <grub_video_reader_jpeg+0x5c0>
     b94:	mov	w28, #0x0                   	// #0
     b98:	mov	x26, #0xc                   	// #12
     b9c:	str	w27, [x19, #2304]
     ba0:	cmp	w27, w28
     ba4:	ldr	x0, [x19]
     ba8:	b.gt	bd8 <grub_video_reader_jpeg+0x548>
     bac:	bl	0 <grub_jpeg_get_byte.isra.0>
     bb0:	add	w21, w21, w22
     bb4:	ldr	x0, [x19]
     bb8:	bl	234 <grub_jpeg_get_word.isra.0>
     bbc:	ldr	x0, [x19]
     bc0:	ldr	x0, [x0, #24]
     bc4:	cmp	x0, x21
     bc8:	b.eq	c24 <grub_video_reader_jpeg+0x594>  // b.none
     bcc:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     bd0:	ldr	x1, [x0]
     bd4:	b	b84 <grub_video_reader_jpeg+0x4f4>
     bd8:	bl	0 <grub_jpeg_get_byte.isra.0>
     bdc:	and	w20, w0, #0xff
     be0:	sub	w20, w20, #0x1
     be4:	cmp	w20, #0x2
     be8:	b.ls	bf8 <grub_video_reader_jpeg+0x568>  // b.plast
     bec:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     bf0:	ldr	x1, [x0]
     bf4:	b	b84 <grub_video_reader_jpeg+0x4f4>
     bf8:	sxtw	x20, w20
     bfc:	add	w28, w28, #0x1
     c00:	ldr	x0, [x19]
     c04:	madd	x20, x20, x26, x19
     c08:	bl	0 <grub_jpeg_get_byte.isra.0>
     c0c:	ubfx	x1, x0, #4, #4
     c10:	and	w0, w0, #0xf
     c14:	add	w0, w0, #0x2
     c18:	str	w1, [x20, #708]
     c1c:	str	w0, [x20, #712]
     c20:	b	ba0 <grub_video_reader_jpeg+0x510>
     c24:	ldp	w1, w2, [x19, #24]
     c28:	mov	w3, #0x4                   	// #4
     c2c:	ldr	x0, [x19, #8]
     c30:	bl	0 <grub_video_bitmap_create>
     c34:	cbz	w0, c40 <grub_video_reader_jpeg+0x5b0>
     c38:	ldr	w0, [x23]
     c3c:	b	b8c <grub_video_reader_jpeg+0x4fc>
     c40:	ldr	x0, [x19, #8]
     c44:	ldr	x0, [x0]
     c48:	ldr	x0, [x0, #80]
     c4c:	str	x0, [x19, #16]
     c50:	ldp	w21, w22, [x19, #24]
     c54:	mov	w20, #0x8                   	// #8
     c58:	ldr	w1, [x19, #2276]
     c5c:	ldr	w0, [x19, #2280]
     c60:	sub	w21, w21, #0x1
     c64:	sub	w22, w22, #0x1
     c68:	ldr	w26, [x19, #2284]
     c6c:	lsl	w28, w20, w1
     c70:	add	w1, w1, #0x3
     c74:	lsl	w20, w20, w0
     c78:	add	w0, w0, #0x3
     c7c:	add	w21, w21, w20
     c80:	add	w22, w22, w28
     c84:	lsr	w21, w21, w0
     c88:	lsr	w1, w22, w1
     c8c:	str	w1, [sp, #96]
     c90:	mul	w0, w20, w21
     c94:	str	w0, [sp, #112]
     c98:	add	w0, w20, w20, lsl #1
     c9c:	str	x0, [sp, #104]
     ca0:	mov	w0, w1
     ca4:	sub	w0, w0, #0x1
     ca8:	str	w0, [sp, #100]
     cac:	ldr	w0, [x19, #2288]
     cb0:	ldr	w1, [sp, #96]
     cb4:	cmp	w1, w0
     cb8:	b.ls	d7c <grub_video_reader_jpeg+0x6ec>  // b.plast
     cbc:	ldr	w0, [x19, #2284]
     cc0:	cbz	w0, cc8 <grub_video_reader_jpeg+0x638>
     cc4:	cbz	w26, d7c <grub_video_reader_jpeg+0x6ec>
     cc8:	mov	w22, #0x0                   	// #0
     ccc:	mov	w27, #0x0                   	// #0
     cd0:	b	f0c <grub_video_reader_jpeg+0x87c>
     cd4:	add	w2, w4, w6
     cd8:	mov	w0, #0x100                 	// #256
     cdc:	mov	x1, #0x2e4                 	// #740
     ce0:	stp	w4, w6, [sp, #116]
     ce4:	str	w3, [sp, #124]
     ce8:	umaddl	x2, w2, w0, x1
     cec:	mov	x0, x19
     cf0:	mov	w1, #0x0                   	// #0
     cf4:	add	x2, x19, x2
     cf8:	bl	260 <grub_jpeg_decode_du>
     cfc:	ldp	w4, w6, [sp, #116]
     d00:	mov	w5, #0x1                   	// #1
     d04:	ldr	w3, [sp, #124]
     d08:	add	w4, w4, #0x1
     d0c:	ldr	w0, [x19, #2280]
     d10:	lsl	w0, w5, w0
     d14:	cmp	w4, w0
     d18:	b.cc	cd4 <grub_video_reader_jpeg+0x644>  // b.lo, b.ul, b.last
     d1c:	add	w3, w3, #0x1
     d20:	ldr	w0, [x19, #2276]
     d24:	lsl	w0, w5, w0
     d28:	cmp	w3, w0
     d2c:	b.cs	d48 <grub_video_reader_jpeg+0x6b8>  // b.hs, b.nlast
     d30:	lsl	w6, w3, #1
     d34:	mov	w4, #0x0                   	// #0
     d38:	b	d0c <grub_video_reader_jpeg+0x67c>
     d3c:	mov	w3, #0x0                   	// #0
     d40:	mov	w5, #0x1                   	// #1
     d44:	b	d20 <grub_video_reader_jpeg+0x690>
     d48:	ldr	w0, [x19, #2304]
     d4c:	cmp	w0, #0x2
     d50:	b.le	d74 <grub_video_reader_jpeg+0x6e4>
     d54:	add	x2, x19, #0x7e4
     d58:	mov	x0, x19
     d5c:	mov	w1, #0x1                   	// #1
     d60:	bl	260 <grub_jpeg_decode_du>
     d64:	add	x2, x19, #0x6e4
     d68:	mov	x0, x19
     d6c:	mov	w1, #0x2                   	// #2
     d70:	bl	260 <grub_jpeg_decode_du>
     d74:	ldr	w0, [x23]
     d78:	cbz	w0, d8c <grub_video_reader_jpeg+0x6fc>
     d7c:	str	wzr, [x19, #2292]
     d80:	str	xzr, [x19, #2296]
     d84:	str	wzr, [x19, #2308]
     d88:	b	7f4 <grub_video_reader_jpeg+0x164>
     d8c:	ldr	w0, [x19, #2288]
     d90:	ldr	w1, [sp, #100]
     d94:	cmp	w0, w1
     d98:	b.ne	dfc <grub_video_reader_jpeg+0x76c>  // b.any
     d9c:	ldr	w9, [x19, #28]
     da0:	msub	w9, w28, w1, w9
     da4:	sub	w0, w21, #0x1
     da8:	cmp	w0, w27
     dac:	b.ne	e04 <grub_video_reader_jpeg+0x774>  // b.any
     db0:	ldr	w7, [x19, #24]
     db4:	sub	w7, w7, w22
     db8:	mov	w13, #0x3                   	// #3
     dbc:	mov	w6, #0x0                   	// #0
     dc0:	ldr	x11, [x19, #16]
     dc4:	umull	x13, w7, w13
     dc8:	mov	w16, #0x167                 	// #359
     dcc:	mov	w14, #0xff                  	// #255
     dd0:	mov	w17, #0x58                  	// #88
     dd4:	mov	w18, #0xb7                  	// #183
     dd8:	mov	w30, #0x1c6                 	// #454
     ddc:	cmp	w6, w9
     de0:	b.eq	ef4 <grub_video_reader_jpeg+0x864>  // b.none
     de4:	lsr	w12, w6, #3
     de8:	ubfiz	w15, w6, #3, #3
     dec:	mov	x3, x11
     df0:	mov	w5, #0x0                   	// #0
     df4:	lsl	w12, w12, #1
     df8:	b	ebc <grub_video_reader_jpeg+0x82c>
     dfc:	mov	w9, w28
     e00:	b	da4 <grub_video_reader_jpeg+0x714>
     e04:	mov	w7, w20
     e08:	b	db8 <grub_video_reader_jpeg+0x728>
     e0c:	add	w0, w12, w5, lsr #3
     e10:	and	w1, w5, #0x7
     e14:	add	w1, w1, w15
     e18:	ubfiz	x0, x0, #6, #31
     e1c:	add	x0, x0, x1
     e20:	add	x0, x19, x0, lsl #2
     e24:	ldr	w4, [x0, #740]
     e28:	ldr	w0, [x19, #2304]
     e2c:	cmp	w0, #0x2
     e30:	b.le	ee0 <grub_video_reader_jpeg+0x850>
     e34:	ldr	w0, [x19, #2276]
     e38:	ldr	w1, [x19, #2280]
     e3c:	lsr	w0, w6, w0
     e40:	lsr	w1, w5, w1
     e44:	add	w0, w1, w0, lsl #3
     e48:	add	x0, x19, x0, lsl #2
     e4c:	ldr	w1, [x0, #1764]
     e50:	ldr	w2, [x0, #2020]
     e54:	sub	w1, w1, #0x80
     e58:	sub	w2, w2, #0x80
     e5c:	mul	w0, w1, w16
     e60:	mul	w1, w1, w18
     e64:	madd	w1, w2, w17, w1
     e68:	add	w0, w4, w0, asr #8
     e6c:	mul	w2, w2, w30
     e70:	cmp	w0, #0xff
     e74:	csel	w0, w0, w14, le
     e78:	sub	w1, w4, w1, asr #8
     e7c:	cmp	w0, #0x0
     e80:	add	w2, w4, w2, asr #8
     e84:	csel	w0, w0, wzr, ge  // ge = tcont
     e88:	cmp	w1, #0xff
     e8c:	csel	w1, w1, w14, le
     e90:	strb	w0, [x3]
     e94:	cmp	w1, #0x0
     e98:	csel	w1, w1, wzr, ge  // ge = tcont
     e9c:	cmp	w2, #0xff
     ea0:	csel	w2, w2, w14, le
     ea4:	strb	w1, [x3, #1]
     ea8:	cmp	w2, #0x0
     eac:	csel	w2, w2, wzr, ge  // ge = tcont
     eb0:	strb	w2, [x3, #2]
     eb4:	add	w5, w5, #0x1
     eb8:	add	x3, x3, #0x3
     ebc:	cmp	w5, w7
     ec0:	b.ne	e0c <grub_video_reader_jpeg+0x77c>  // b.any
     ec4:	ldr	w0, [x19, #24]
     ec8:	add	w6, w6, #0x1
     ecc:	sub	w0, w0, w7
     ed0:	add	w0, w0, w0, lsl #1
     ed4:	add	x0, x0, x13
     ed8:	add	x11, x11, x0
     edc:	b	ddc <grub_video_reader_jpeg+0x74c>
     ee0:	and	w4, w4, #0xff
     ee4:	strb	w4, [x3]
     ee8:	strb	w4, [x3, #1]
     eec:	strb	w4, [x3, #2]
     ef0:	b	eb4 <grub_video_reader_jpeg+0x824>
     ef4:	ldr	x0, [x19, #16]
     ef8:	add	w27, w27, #0x1
     efc:	ldr	x1, [sp, #104]
     f00:	add	w22, w22, w20
     f04:	add	x0, x0, x1
     f08:	str	x0, [x19, #16]
     f0c:	sub	w2, w26, w27
     f10:	cmp	w21, w27
     f14:	b.eq	f24 <grub_video_reader_jpeg+0x894>  // b.none
     f18:	ldr	w0, [x19, #2284]
     f1c:	cbz	w0, d3c <grub_video_reader_jpeg+0x6ac>
     f20:	cbnz	w2, d3c <grub_video_reader_jpeg+0x6ac>
     f24:	ldr	w0, [x19, #2288]
     f28:	mov	w26, w2
     f2c:	ldr	w1, [sp, #112]
     f30:	add	w0, w0, #0x1
     f34:	str	w0, [x19, #2288]
     f38:	ldr	w0, [x19, #24]
     f3c:	mul	w0, w28, w0
     f40:	sub	w0, w0, w1
     f44:	ldr	x1, [x19, #16]
     f48:	add	w0, w0, w0, lsl #1
     f4c:	add	x0, x1, x0
     f50:	str	x0, [x19, #16]
     f54:	b	cac <grub_video_reader_jpeg+0x61c>
	...

0000000000000fe8 <grub_mod_init>:
     fe8:	stp	x29, x30, [sp, #-32]!
     fec:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
     ff0:	mov	x29, sp
     ff4:	str	x19, [sp, #16]
     ff8:	ldr	x19, [x0]
     ffc:	mov	x0, x19
    1000:	bl	0 <grub_video_bitmap_reader_register>
    1004:	add	x0, x19, #0x18
    1008:	ldr	x19, [sp, #16]
    100c:	ldp	x29, x30, [sp], #32
    1010:	b	0 <grub_video_bitmap_reader_register>
    1014:	nop
	...

0000000000001020 <grub_mod_fini>:
    1020:	stp	x29, x30, [sp, #-32]!
    1024:	adrp	x0, 0 <grub_jpeg_get_byte.isra.0>
    1028:	mov	x29, sp
    102c:	str	x19, [sp, #16]
    1030:	ldr	x19, [x0]
    1034:	add	x0, x19, #0x18
    1038:	bl	0 <grub_video_bitmap_reader_unregister>
    103c:	mov	x0, x19
    1040:	ldr	x19, [sp, #16]
    1044:	ldp	x29, x30, [sp], #32
    1048:	b	0 <grub_video_bitmap_reader_unregister>
    104c:	nop
	...
