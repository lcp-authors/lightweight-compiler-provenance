
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <exit@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 11000 <dl_load@@Base+0x1084c>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <exit@plt>:
 670:	adrp	x16, 12000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <__cxa_finalize@plt>:
 680:	adrp	x16, 12000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <__gmon_start__@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <strcmp@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <fwrite@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <getdtablesize@plt>:
 6c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0xd4>:
 6e0:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	690 <__gmon_start__@plt>
 6f0:	ret
 6f4:	nop
 6f8:	adrp	x0, 12000 <dl_load@@Base+0x1184c>
 6fc:	add	x0, x0, #0x60
 700:	adrp	x1, 12000 <dl_load@@Base+0x1184c>
 704:	add	x1, x1, #0x60
 708:	cmp	x1, x0
 70c:	b.eq	724 <fprintf@plt+0x54>  // b.none
 710:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 714:	ldr	x1, [x1, #4032]
 718:	cbz	x1, 724 <fprintf@plt+0x54>
 71c:	mov	x16, x1
 720:	br	x16
 724:	ret
 728:	adrp	x0, 12000 <dl_load@@Base+0x1184c>
 72c:	add	x0, x0, #0x60
 730:	adrp	x1, 12000 <dl_load@@Base+0x1184c>
 734:	add	x1, x1, #0x60
 738:	sub	x1, x1, x0
 73c:	lsr	x2, x1, #63
 740:	add	x1, x2, x1, asr #3
 744:	cmp	xzr, x1, asr #1
 748:	asr	x1, x1, #1
 74c:	b.eq	764 <fprintf@plt+0x94>  // b.none
 750:	adrp	x2, 11000 <dl_load@@Base+0x1084c>
 754:	ldr	x2, [x2, #4064]
 758:	cbz	x2, 764 <fprintf@plt+0x94>
 75c:	mov	x16, x2
 760:	br	x16
 764:	ret
 768:	stp	x29, x30, [sp, #-32]!
 76c:	mov	x29, sp
 770:	str	x19, [sp, #16]
 774:	adrp	x19, 12000 <dl_load@@Base+0x1184c>
 778:	ldrb	w0, [x19, #96]
 77c:	cbnz	w0, 7a4 <fprintf@plt+0xd4>
 780:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 784:	ldr	x0, [x0, #4040]
 788:	cbz	x0, 798 <fprintf@plt+0xc8>
 78c:	adrp	x0, 12000 <dl_load@@Base+0x1184c>
 790:	ldr	x0, [x0, #56]
 794:	bl	680 <__cxa_finalize@plt>
 798:	bl	6f8 <fprintf@plt+0x28>
 79c:	mov	w0, #0x1                   	// #1
 7a0:	strb	w0, [x19, #96]
 7a4:	ldr	x19, [sp, #16]
 7a8:	ldp	x29, x30, [sp], #32
 7ac:	ret
 7b0:	b	728 <fprintf@plt+0x58>

00000000000007b4 <dl_load@@Base>:
 7b4:	stp	x29, x30, [sp, #-48]!
 7b8:	str	x21, [sp, #16]
 7bc:	stp	x20, x19, [sp, #32]
 7c0:	adrp	x20, 12000 <dl_load@@Base+0x1184c>
 7c4:	adrp	x21, 12000 <dl_load@@Base+0x1184c>
 7c8:	str	x0, [x20, #104]
 7cc:	str	x1, [x21, #112]
 7d0:	ldr	w8, [x0]
 7d4:	mov	x29, sp
 7d8:	cmp	w8, #0x2
 7dc:	b.ne	894 <dl_load@@Base+0xe0>  // b.any
 7e0:	ldr	w8, [x0, #4]
 7e4:	tbnz	w8, #31, 894 <dl_load@@Base+0xe0>
 7e8:	adrp	x19, 12000 <dl_load@@Base+0x1184c>
 7ec:	ldr	x8, [x19, #120]
 7f0:	cbz	x8, 818 <dl_load@@Base+0x64>
 7f4:	ldr	x9, [x0, #48]
 7f8:	adrp	x8, 0 <exit@plt-0x670>
 7fc:	add	x8, x8, #0xd4b
 800:	adrp	x2, 12000 <dl_load@@Base+0x1184c>
 804:	add	x2, x2, #0x78
 808:	mov	x0, x1
 80c:	mov	x1, x8
 810:	blr	x9
 814:	cbz	w0, 820 <dl_load@@Base+0x6c>
 818:	mov	w19, #0x1                   	// #1
 81c:	b	840 <dl_load@@Base+0x8c>
 820:	ldr	x8, [x20, #104]
 824:	ldr	x0, [x21, #112]
 828:	ldr	x2, [x19, #120]
 82c:	adrp	x1, 0 <exit@plt-0x670>
 830:	ldr	x8, [x8, #104]
 834:	add	x1, x1, #0xd7f
 838:	blr	x8
 83c:	mov	w19, wzr
 840:	ldr	x8, [x20, #104]
 844:	ldr	x0, [x21, #112]
 848:	adrp	x1, 12000 <dl_load@@Base+0x1184c>
 84c:	add	x1, x1, #0x40
 850:	ldr	x8, [x8, #72]
 854:	blr	x8
 858:	bl	6c0 <getdtablesize@plt>
 85c:	ldr	x8, [x20, #104]
 860:	sxtw	x9, w0
 864:	adrp	x10, 12000 <dl_load@@Base+0x1184c>
 868:	str	x9, [x10, #168]
 86c:	ldr	x8, [x8, #88]
 870:	ldr	x0, [x21, #112]
 874:	adrp	x1, 0 <exit@plt-0x670>
 878:	add	x1, x1, #0xe19
 87c:	blr	x8
 880:	mov	w0, w19
 884:	ldp	x20, x19, [sp, #32]
 888:	ldr	x21, [sp, #16]
 88c:	ldp	x29, x30, [sp], #48
 890:	ret
 894:	adrp	x19, 11000 <dl_load@@Base+0x1084c>
 898:	ldr	x19, [x19, #4048]
 89c:	adrp	x0, 0 <exit@plt-0x670>
 8a0:	add	x0, x0, #0xd24
 8a4:	mov	w1, #0x27                  	// #39
 8a8:	ldr	x3, [x19]
 8ac:	mov	w2, #0x1                   	// #1
 8b0:	bl	6b0 <fwrite@plt>
 8b4:	ldr	x8, [x20, #104]
 8b8:	ldr	x0, [x19]
 8bc:	adrp	x1, 0 <exit@plt-0x670>
 8c0:	add	x1, x1, #0xd4c
 8c4:	ldp	w4, w5, [x8]
 8c8:	mov	w2, #0x2                   	// #2
 8cc:	mov	w3, wzr
 8d0:	bl	6d0 <fprintf@plt>
 8d4:	mov	w0, #0x1                   	// #1
 8d8:	bl	670 <exit@plt>
 8dc:	cbz	x0, 900 <dl_load@@Base+0x14c>
 8e0:	stp	x29, x30, [sp, #-16]!
 8e4:	adrp	x1, 0 <exit@plt-0x670>
 8e8:	add	x1, x1, #0xda5
 8ec:	mov	x29, sp
 8f0:	bl	6a0 <strcmp@plt>
 8f4:	cmp	w0, #0x0
 8f8:	cset	w0, eq  // eq = none
 8fc:	ldp	x29, x30, [sp], #16
 900:	ret
 904:	stp	x29, x30, [sp, #-48]!
 908:	mov	w0, wzr
 90c:	stp	x22, x21, [sp, #16]
 910:	stp	x20, x19, [sp, #32]
 914:	mov	x29, sp
 918:	cbz	x1, 9f0 <dl_load@@Base+0x23c>
 91c:	mov	x19, x2
 920:	cbz	x2, 9f0 <dl_load@@Base+0x23c>
 924:	adrp	x22, 12000 <dl_load@@Base+0x1184c>
 928:	ldr	x8, [x22, #104]
 92c:	mov	w0, #0x20                  	// #32
 930:	mov	x20, x1
 934:	ldr	x8, [x8, #280]
 938:	blr	x8
 93c:	mov	x21, x0
 940:	cbnz	x0, 96c <dl_load@@Base+0x1b8>
 944:	ldr	x8, [x22, #104]
 948:	adrp	x9, 12000 <dl_load@@Base+0x1184c>
 94c:	ldr	x0, [x9, #112]
 950:	adrp	x1, 0 <exit@plt-0x670>
 954:	ldr	x8, [x8, #96]
 958:	adrp	x2, 0 <exit@plt-0x670>
 95c:	add	x1, x1, #0xdb3
 960:	add	x2, x2, #0xdd1
 964:	mov	w3, #0x20                  	// #32
 968:	blr	x8
 96c:	mov	w8, #0x2                   	// #2
 970:	stp	xzr, xzr, [x21]
 974:	stp	xzr, x8, [x21, #16]
 978:	adrp	x22, 12000 <dl_load@@Base+0x1184c>
 97c:	ldr	x8, [x22, #168]
 980:	cmn	x8, #0x1
 984:	b.ne	994 <dl_load@@Base+0x1e0>  // b.any
 988:	bl	6c0 <getdtablesize@plt>
 98c:	sxtw	x8, w0
 990:	str	x8, [x22, #168]
 994:	adrp	x9, 0 <exit@plt-0x670>
 998:	adrp	x10, 0 <exit@plt-0x670>
 99c:	add	x9, x9, #0xa00
 9a0:	add	x10, x10, #0xa90
 9a4:	add	x11, x8, #0x1
 9a8:	str	w8, [x20, #8]
 9ac:	str	x10, [x20, #40]
 9b0:	adrp	x10, 0 <exit@plt-0x670>
 9b4:	stp	x21, x9, [x20, #16]
 9b8:	adrp	x9, 0 <exit@plt-0x670>
 9bc:	str	x11, [x22, #168]
 9c0:	adrp	x11, 0 <exit@plt-0x670>
 9c4:	adrp	x12, 0 <exit@plt-0x670>
 9c8:	add	x10, x10, #0xb04
 9cc:	add	x9, x9, #0xc98
 9d0:	add	x11, x11, #0xca0
 9d4:	add	x12, x12, #0xca8
 9d8:	mov	w0, #0x1                   	// #1
 9dc:	str	x8, [x19, #16]
 9e0:	stp	x21, x10, [x19, #32]
 9e4:	stp	x9, x11, [x19, #48]
 9e8:	str	x12, [x19, #64]
 9ec:	str	w0, [x19, #24]
 9f0:	ldp	x20, x19, [sp, #32]
 9f4:	ldp	x22, x21, [sp, #16]
 9f8:	ldp	x29, x30, [sp], #48
 9fc:	ret
 a00:	mov	x8, x0
 a04:	mov	w0, #0xffffffff            	// #-1
 a08:	cbz	x8, a84 <dl_load@@Base+0x2d0>
 a0c:	cbz	x1, a84 <dl_load@@Base+0x2d0>
 a10:	ldr	x9, [x1, #16]
 a14:	cbz	x9, a88 <dl_load@@Base+0x2d4>
 a18:	ldr	x0, [x9, #8]
 a1c:	cbz	x0, a84 <dl_load@@Base+0x2d0>
 a20:	ldr	x10, [x9, #16]
 a24:	str	x10, [x8]
 a28:	str	xzr, [x9, #8]
 a2c:	str	xzr, [x4]
 a30:	ldr	x8, [x9, #16]
 a34:	sub	w9, w0, #0x1
 a38:	ldrb	w9, [x8, w9, sxtw]
 a3c:	cmp	w9, #0xa
 a40:	b.ne	a84 <dl_load@@Base+0x2d0>  // b.any
 a44:	sub	w9, w0, #0x1
 a48:	sxtw	x9, w9
 a4c:	ldrb	w10, [x8, x9]
 a50:	cmp	w10, #0xa
 a54:	b.ne	a7c <dl_load@@Base+0x2c8>  // b.any
 a58:	sub	x10, x8, #0x1
 a5c:	mov	w11, #0x1                   	// #1
 a60:	str	x11, [x4]
 a64:	ldrb	w12, [x10, x9]
 a68:	sub	x9, x9, #0x1
 a6c:	add	x11, x11, #0x1
 a70:	cmp	w12, #0xa
 a74:	b.eq	a60 <dl_load@@Base+0x2ac>  // b.none
 a78:	add	w0, w9, #0x1
 a7c:	add	x8, x8, w0, sxtw
 a80:	str	x8, [x3]
 a84:	ret
 a88:	mov	w0, #0xffffffff            	// #-1
 a8c:	ret
 a90:	stp	x29, x30, [sp, #-48]!
 a94:	str	x21, [sp, #16]
 a98:	stp	x20, x19, [sp, #32]
 a9c:	mov	x29, sp
 aa0:	cbz	x0, af4 <dl_load@@Base+0x340>
 aa4:	ldr	x20, [x0, #16]
 aa8:	mov	x19, x0
 aac:	cbz	x20, af4 <dl_load@@Base+0x340>
 ab0:	ldr	x8, [x20, #24]
 ab4:	cmp	x8, #0x2
 ab8:	b.cc	ac8 <dl_load@@Base+0x314>  // b.lo, b.ul, b.last
 abc:	sub	x8, x8, #0x1
 ac0:	str	x8, [x20, #24]
 ac4:	b	aec <dl_load@@Base+0x338>
 ac8:	adrp	x21, 12000 <dl_load@@Base+0x1184c>
 acc:	ldr	x8, [x21, #104]
 ad0:	ldr	x0, [x20, #16]
 ad4:	ldr	x8, [x8, #304]
 ad8:	blr	x8
 adc:	ldr	x8, [x21, #104]
 ae0:	mov	x0, x20
 ae4:	ldr	x8, [x8, #304]
 ae8:	blr	x8
 aec:	mov	w8, #0xffffffff            	// #-1
 af0:	str	w8, [x19, #8]
 af4:	ldp	x20, x19, [sp, #32]
 af8:	ldr	x21, [sp, #16]
 afc:	ldp	x29, x30, [sp], #48
 b00:	ret
 b04:	stp	x29, x30, [sp, #-48]!
 b08:	stp	x22, x21, [sp, #16]
 b0c:	stp	x20, x19, [sp, #32]
 b10:	mov	x29, sp
 b14:	cbz	x4, b8c <dl_load@@Base+0x3d8>
 b18:	ldr	x9, [x4]
 b1c:	mul	x19, x2, x1
 b20:	mov	x21, x4
 b24:	mov	x20, x0
 b28:	cmp	x19, x9
 b2c:	b.hi	b3c <dl_load@@Base+0x388>  // b.pmore
 b30:	mov	x8, x21
 b34:	ldr	x10, [x8, #8]!
 b38:	cbz	x10, c54 <dl_load@@Base+0x4a0>
 b3c:	adrp	x22, 12000 <dl_load@@Base+0x1184c>
 b40:	ldr	x0, [x21, #16]
 b44:	ldr	x8, [x22, #104]
 b48:	cbz	x0, b94 <dl_load@@Base+0x3e0>
 b4c:	ldr	x8, [x8, #296]
 b50:	add	x1, x9, x19
 b54:	blr	x8
 b58:	str	x0, [x21, #16]
 b5c:	cbnz	x0, bd0 <dl_load@@Base+0x41c>
 b60:	ldr	x8, [x22, #104]
 b64:	adrp	x9, 12000 <dl_load@@Base+0x1184c>
 b68:	ldr	x10, [x21]
 b6c:	ldr	x0, [x9, #112]
 b70:	ldr	x8, [x8, #96]
 b74:	adrp	x1, 0 <exit@plt-0x670>
 b78:	adrp	x2, 0 <exit@plt-0x670>
 b7c:	add	x3, x10, x19
 b80:	add	x1, x1, #0xdfa
 b84:	add	x2, x2, #0xdeb
 b88:	b	bcc <dl_load@@Base+0x418>
 b8c:	mov	x19, xzr
 b90:	b	c40 <dl_load@@Base+0x48c>
 b94:	ldr	x8, [x8, #280]
 b98:	mov	x0, x19
 b9c:	blr	x8
 ba0:	str	x0, [x21, #16]
 ba4:	cbnz	x0, bd0 <dl_load@@Base+0x41c>
 ba8:	ldr	x8, [x22, #104]
 bac:	adrp	x9, 12000 <dl_load@@Base+0x1184c>
 bb0:	ldr	x0, [x9, #112]
 bb4:	adrp	x1, 0 <exit@plt-0x670>
 bb8:	ldr	x8, [x8, #96]
 bbc:	adrp	x2, 0 <exit@plt-0x670>
 bc0:	add	x1, x1, #0xdb3
 bc4:	add	x2, x2, #0xdeb
 bc8:	mov	x3, x19
 bcc:	blr	x8
 bd0:	ldr	x8, [x21]
 bd4:	add	x9, x8, x19
 bd8:	mov	x8, x21
 bdc:	str	x9, [x8], #8
 be0:	ldr	x9, [x8]
 be4:	cbz	x19, c34 <dl_load@@Base+0x480>
 be8:	ldr	x10, [x21, #16]
 bec:	cmp	x19, #0x8
 bf0:	add	x14, x20, x19
 bf4:	add	x11, x10, x9
 bf8:	b.cc	c14 <dl_load@@Base+0x460>  // b.lo, b.ul, b.last
 bfc:	cmp	x11, x14
 c00:	b.cs	c60 <dl_load@@Base+0x4ac>  // b.hs, b.nlast
 c04:	add	x9, x9, x19
 c08:	add	x9, x10, x9
 c0c:	cmp	x9, x20
 c10:	b.ls	c60 <dl_load@@Base+0x4ac>  // b.plast
 c14:	mov	x12, x14
 c18:	mov	x9, x11
 c1c:	mov	x10, x19
 c20:	sub	x11, x12, #0x1
 c24:	ldrb	w12, [x11], #-1
 c28:	subs	x10, x10, #0x1
 c2c:	strb	w12, [x9], #1
 c30:	b.ne	c24 <dl_load@@Base+0x470>  // b.any
 c34:	ldr	x9, [x8]
 c38:	add	x9, x9, x19
 c3c:	str	x9, [x8]
 c40:	mov	x0, x19
 c44:	ldp	x20, x19, [sp, #32]
 c48:	ldp	x22, x21, [sp, #16]
 c4c:	ldp	x29, x30, [sp], #48
 c50:	ret
 c54:	mov	x9, xzr
 c58:	cbnz	x19, be8 <dl_load@@Base+0x434>
 c5c:	b	c34 <dl_load@@Base+0x480>
 c60:	and	x13, x19, #0xfffffffffffffff8
 c64:	and	x10, x19, #0x7
 c68:	sub	x12, x14, x13
 c6c:	add	x9, x11, x13
 c70:	sub	x14, x14, #0x8
 c74:	mov	x15, x13
 c78:	ldr	d0, [x14], #-8
 c7c:	subs	x15, x15, #0x8
 c80:	rev64	v0.8b, v0.8b
 c84:	str	d0, [x11], #8
 c88:	b.ne	c78 <dl_load@@Base+0x4c4>  // b.any
 c8c:	cmp	x19, x13
 c90:	b.ne	c20 <dl_load@@Base+0x46c>  // b.any
 c94:	b	c34 <dl_load@@Base+0x480>
 c98:	mov	w0, wzr
 c9c:	ret
 ca0:	mov	w0, wzr
 ca4:	ret
 ca8:	stp	x29, x30, [sp, #-32]!
 cac:	stp	x20, x19, [sp, #16]
 cb0:	mov	x29, sp
 cb4:	cbz	x1, cd8 <dl_load@@Base+0x524>
 cb8:	ldr	x8, [x1, #24]
 cbc:	mov	x19, x1
 cc0:	cmp	x8, #0x2
 cc4:	b.cc	ce0 <dl_load@@Base+0x52c>  // b.lo, b.ul, b.last
 cc8:	sub	x8, x8, #0x1
 ccc:	mov	w0, wzr
 cd0:	str	x8, [x19, #24]
 cd4:	b	d08 <dl_load@@Base+0x554>
 cd8:	mov	w0, #0xffffffff            	// #-1
 cdc:	b	d08 <dl_load@@Base+0x554>
 ce0:	adrp	x20, 12000 <dl_load@@Base+0x1184c>
 ce4:	ldr	x8, [x20, #104]
 ce8:	ldr	x0, [x19, #16]
 cec:	ldr	x8, [x8, #304]
 cf0:	blr	x8
 cf4:	ldr	x8, [x20, #104]
 cf8:	mov	x0, x19
 cfc:	ldr	x8, [x8, #304]
 d00:	blr	x8
 d04:	mov	w0, wzr
 d08:	ldp	x20, x19, [sp, #16]
 d0c:	ldp	x29, x30, [sp], #32
 d10:	ret

Disassembly of section .fini:

0000000000000d14 <.fini>:
 d14:	stp	x29, x30, [sp, #-16]!
 d18:	mov	x29, sp
 d1c:	ldp	x29, x30, [sp], #16
 d20:	ret
