
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ISO_11548-1.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10730>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xe8>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10730>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11730>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11730>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10730>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11730>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11730>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10730>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11730>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10730>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11730>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	w1, w1, #0xff
     83c:	mov	w0, #0x2800                	// #10240
     840:	orr	w0, w1, w0
     844:	ret

0000000000000848 <gconv_init@@Base>:
     848:	stp	x29, x30, [sp, #-32]!
     84c:	mov	x29, sp
     850:	stp	x19, x20, [sp, #16]
     854:	mov	x19, x0
     858:	adrp	x20, 1000 <gconv@@Base+0x730>
     85c:	ldr	x0, [x0, #24]
     860:	add	x20, x20, #0x3d8
     864:	mov	x1, x20
     868:	bl	730 <strcmp@plt>
     86c:	cbnz	w0, 8a0 <gconv_init@@Base+0x58>
     870:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     874:	mov	x2, #0x100000001           	// #4294967297
     878:	add	x0, x0, #0x838
     87c:	mov	x1, #0x400000004           	// #17179869188
     880:	str	x0, [x19, #48]
     884:	stp	x2, x1, [x19, #72]
     888:	str	xzr, [x19, #96]
     88c:	mov	w0, #0x0                   	// #0
     890:	str	wzr, [x19, #88]
     894:	ldp	x19, x20, [sp, #16]
     898:	ldp	x29, x30, [sp], #32
     89c:	ret
     8a0:	ldr	x0, [x19, #32]
     8a4:	mov	x1, x20
     8a8:	bl	730 <strcmp@plt>
     8ac:	cbnz	w0, 8c8 <gconv_init@@Base+0x80>
     8b0:	mov	x0, #0xffffffffffffffff    	// #-1
     8b4:	mov	x2, #0x400000004           	// #17179869188
     8b8:	mov	x1, #0x100000001           	// #4294967297
     8bc:	stp	x2, x1, [x19, #72]
     8c0:	str	x0, [x19, #96]
     8c4:	b	88c <gconv_init@@Base+0x44>
     8c8:	mov	w0, #0x1                   	// #1
     8cc:	b	894 <gconv_init@@Base+0x4c>

00000000000008d0 <gconv@@Base>:
     8d0:	stp	x29, x30, [sp, #-240]!
     8d4:	mov	x10, x2
     8d8:	mov	x14, x4
     8dc:	mov	x29, sp
     8e0:	stp	x21, x22, [sp, #32]
     8e4:	mov	x21, x1
     8e8:	adrp	x1, 11000 <gconv@@Base+0x10730>
     8ec:	stp	x27, x28, [sp, #80]
     8f0:	mov	x27, x0
     8f4:	ldr	w28, [x21, #16]
     8f8:	ldr	x1, [x1, #4056]
     8fc:	stp	x19, x20, [sp, #16]
     900:	mov	x20, x3
     904:	ldr	x0, [x1]
     908:	str	x0, [sp, #232]
     90c:	mov	x0, #0x0                   	// #0
     910:	add	x1, x27, #0x68
     914:	add	x0, x21, #0x30
     918:	stp	x23, x24, [sp, #48]
     91c:	mov	x24, #0x0                   	// #0
     920:	stp	x25, x26, [sp, #64]
     924:	mov	x26, x5
     928:	mov	w25, w7
     92c:	stp	x1, x0, [sp, #120]
     930:	tbnz	w28, #0, 950 <gconv@@Base+0x80>
     934:	ldr	x0, [x27, #104]
     938:	ldr	x24, [x27, #144]
     93c:	cbz	x0, 950 <gconv@@Base+0x80>
     940:	adrp	x0, 11000 <gconv@@Base+0x10730>
     944:	ldr	x0, [x0, #4040]
     948:	ldr	x0, [x0]
     94c:	eor	x24, x24, x0
     950:	cbnz	w6, eec <gconv@@Base+0x61c>
     954:	cmp	x14, #0x0
     958:	add	x1, sp, #0xc0
     95c:	csel	x2, x21, x14, eq  // eq = none
     960:	cmp	x26, #0x0
     964:	ldr	x0, [x27, #96]
     968:	csel	x1, x1, xzr, ne  // ne = any
     96c:	cmp	w25, #0x0
     970:	mov	x12, #0x0                   	// #0
     974:	ldr	x8, [x2]
     978:	str	x1, [sp, #152]
     97c:	cset	w1, ne  // ne = any
     980:	str	w1, [sp, #164]
     984:	str	xzr, [sp, #192]
     988:	cmp	x0, #0x0
     98c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     990:	ldr	x22, [x10]
     994:	ldr	x23, [x21, #8]
     998:	b.ne	c80 <gconv@@Base+0x3b0>  // b.any
     99c:	add	x28, sp, #0xc8
     9a0:	add	x1, sp, #0xd8
     9a4:	stp	x14, x27, [sp, #104]
     9a8:	mov	x27, x23
     9ac:	mov	x23, x12
     9b0:	str	w25, [sp, #136]
     9b4:	mov	x25, x8
     9b8:	str	x28, [sp, #144]
     9bc:	mov	x28, x22
     9c0:	mov	x22, x10
     9c4:	str	x1, [sp, #168]
     9c8:	add	x1, sp, #0xd0
     9cc:	str	x1, [sp, #176]
     9d0:	cbz	x26, 9dc <gconv@@Base+0x10c>
     9d4:	ldr	x1, [x26]
     9d8:	add	x23, x23, x1
     9dc:	cbz	x0, ae0 <gconv@@Base+0x210>
     9e0:	stp	x28, x25, [sp, #208]
     9e4:	cmp	x20, x28
     9e8:	ldr	w15, [x21, #16]
     9ec:	b.eq	f44 <gconv@@Base+0x674>  // b.none
     9f0:	and	w15, w15, #0x2
     9f4:	mov	x19, x25
     9f8:	mov	x0, x28
     9fc:	mov	w11, #0x4                   	// #4
     a00:	mov	w7, #0x2800                	// #10240
     a04:	mov	w18, #0x1c00                	// #7168
     a08:	add	x3, x0, #0x4
     a0c:	cmp	x20, x3
     a10:	b.cc	b70 <gconv@@Base+0x2a0>  // b.lo, b.ul, b.last
     a14:	cmp	x27, x19
     a18:	b.ls	b7c <gconv@@Base+0x2ac>  // b.plast
     a1c:	ldr	w2, [x0]
     a20:	and	w4, w2, #0xffffff00
     a24:	cmp	w4, w7
     a28:	b.ne	ba0 <gconv@@Base+0x2d0>  // b.any
     a2c:	add	x3, x19, #0x1
     a30:	str	x3, [sp, #216]
     a34:	strb	w2, [x19]
     a38:	ldp	x0, x19, [sp, #208]
     a3c:	add	x0, x0, #0x4
     a40:	str	x0, [sp, #208]
     a44:	cmp	x20, x0
     a48:	b.ne	a08 <gconv@@Base+0x138>  // b.any
     a4c:	nop
     a50:	str	x0, [x22]
     a54:	ldr	x0, [sp, #104]
     a58:	cbnz	x0, b34 <gconv@@Base+0x264>
     a5c:	ldp	w1, w0, [x21, #16]
     a60:	add	w0, w0, #0x1
     a64:	str	w0, [x21, #20]
     a68:	tbnz	w1, #0, bdc <gconv@@Base+0x30c>
     a6c:	cmp	x25, x19
     a70:	b.cs	c70 <gconv@@Base+0x3a0>  // b.hs, b.nlast
     a74:	ldr	x1, [x21]
     a78:	mov	x0, x24
     a7c:	str	w11, [sp, #96]
     a80:	str	x1, [sp, #200]
     a84:	bl	740 <_dl_mcount_wrapper_check@plt>
     a88:	ldp	x0, x1, [sp, #120]
     a8c:	mov	x5, x26
     a90:	ldr	w7, [sp, #136]
     a94:	mov	x3, x19
     a98:	ldr	x2, [sp, #144]
     a9c:	mov	w6, #0x0                   	// #0
     aa0:	mov	x4, #0x0                   	// #0
     aa4:	blr	x24
     aa8:	mov	w7, w0
     aac:	ldr	w11, [sp, #96]
     ab0:	cmp	w0, #0x4
     ab4:	b.eq	b88 <gconv@@Base+0x2b8>  // b.none
     ab8:	ldr	x11, [sp, #200]
     abc:	cmp	x11, x19
     ac0:	b.ne	ddc <gconv@@Base+0x50c>  // b.any
     ac4:	ldr	x0, [sp, #112]
     ac8:	ldr	x0, [x0, #96]
     acc:	cbnz	w7, f38 <gconv@@Base+0x668>
     ad0:	ldr	x25, [x21]
     ad4:	ldr	x28, [x22]
     ad8:	ldr	x23, [sp, #192]
     adc:	b	9d0 <gconv@@Base+0x100>
     ae0:	cmp	x20, x28
     ae4:	b.eq	bc8 <gconv@@Base+0x2f8>  // b.none
     ae8:	add	x1, x25, #0x4
     aec:	mov	x2, x28
     af0:	cmp	x27, x1
     af4:	b.cc	edc <gconv@@Base+0x60c>  // b.lo, b.ul, b.last
     af8:	mov	w3, #0x2800                	// #10240
     afc:	nop
     b00:	ldrb	w0, [x2], #1
     b04:	mov	x19, x1
     b08:	orr	w0, w0, w3
     b0c:	stur	w0, [x1, #-4]
     b10:	cmp	x20, x2
     b14:	b.eq	bd0 <gconv@@Base+0x300>  // b.none
     b18:	add	x1, x19, #0x4
     b1c:	cmp	x27, x1
     b20:	b.cs	b00 <gconv@@Base+0x230>  // b.hs, b.nlast
     b24:	mov	w11, #0x5                   	// #5
     b28:	str	x2, [x22]
     b2c:	ldr	x0, [sp, #104]
     b30:	cbz	x0, a5c <gconv@@Base+0x18c>
     b34:	str	x19, [x0]
     b38:	adrp	x0, 11000 <gconv@@Base+0x10730>
     b3c:	ldr	x0, [x0, #4056]
     b40:	ldr	x1, [sp, #232]
     b44:	ldr	x0, [x0]
     b48:	eor	x0, x1, x0
     b4c:	cbnz	x0, 1320 <gconv@@Base+0xa50>
     b50:	mov	w0, w11
     b54:	ldp	x19, x20, [sp, #16]
     b58:	ldp	x21, x22, [sp, #32]
     b5c:	ldp	x23, x24, [sp, #48]
     b60:	ldp	x25, x26, [sp, #64]
     b64:	ldp	x27, x28, [sp, #80]
     b68:	ldp	x29, x30, [sp], #240
     b6c:	ret
     b70:	mov	w11, #0x7                   	// #7
     b74:	ldr	x0, [sp, #208]
     b78:	b	a50 <gconv@@Base+0x180>
     b7c:	mov	w11, #0x5                   	// #5
     b80:	ldr	x0, [sp, #208]
     b84:	b	a50 <gconv@@Base+0x180>
     b88:	cmp	w11, #0x5
     b8c:	b.eq	c64 <gconv@@Base+0x394>  // b.none
     b90:	ldr	x0, [sp, #112]
     b94:	mov	w7, w11
     b98:	ldr	x0, [x0, #96]
     b9c:	b	acc <gconv@@Base+0x1fc>
     ba0:	cmp	w18, w2, lsr #7
     ba4:	b.eq	ea8 <gconv@@Base+0x5d8>  // b.none
     ba8:	ldr	x0, [sp, #152]
     bac:	cbz	x0, 10b4 <gconv@@Base+0x7e4>
     bb0:	ldr	w0, [x21, #16]
     bb4:	tbnz	w0, #3, d94 <gconv@@Base+0x4c4>
     bb8:	ldr	x0, [sp, #208]
     bbc:	cbnz	w15, eb4 <gconv@@Base+0x5e4>
     bc0:	mov	w11, #0x6                   	// #6
     bc4:	b	a50 <gconv@@Base+0x180>
     bc8:	mov	x2, x20
     bcc:	mov	x19, x25
     bd0:	mov	w11, #0x4                   	// #4
     bd4:	str	x2, [x22]
     bd8:	b	b2c <gconv@@Base+0x25c>
     bdc:	ldr	x27, [sp, #112]
     be0:	mov	x10, x22
     be4:	ldr	x1, [x26]
     be8:	ldr	x2, [sp, #192]
     bec:	ldr	x0, [x27, #96]
     bf0:	str	x19, [x21]
     bf4:	add	x1, x1, x2
     bf8:	str	x1, [x26]
     bfc:	cmp	x0, #0x0
     c00:	ldr	w0, [sp, #164]
     c04:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     c08:	ccmp	w11, #0x7, #0x0, ne  // ne = any
     c0c:	b.ne	b38 <gconv@@Base+0x268>  // b.any
     c10:	ldr	x3, [x10]
     c14:	sub	x0, x20, x3
     c18:	cmp	x0, #0x3
     c1c:	b.gt	12e0 <gconv@@Base+0xa10>
     c20:	ldr	x4, [x21, #32]
     c24:	cmp	x3, x20
     c28:	mov	x0, x3
     c2c:	add	x1, x4, #0x4
     c30:	b.cs	12b0 <gconv@@Base+0x9e0>  // b.hs, b.nlast
     c34:	add	x0, x0, #0x1
     c38:	str	x0, [x10]
     c3c:	cmp	x0, x20
     c40:	ldurb	w2, [x0, #-1]
     c44:	strb	w2, [x1], #1
     c48:	b.ne	c34 <gconv@@Base+0x364>  // b.any
     c4c:	sub	w0, w0, w3
     c50:	ldr	w1, [x4]
     c54:	and	w1, w1, #0xfffffff8
     c58:	orr	w0, w1, w0
     c5c:	str	w0, [x4]
     c60:	b	b38 <gconv@@Base+0x268>
     c64:	ldr	x0, [sp, #112]
     c68:	ldr	x0, [x0, #96]
     c6c:	b	ad0 <gconv@@Base+0x200>
     c70:	ldr	x0, [sp, #112]
     c74:	mov	w7, w11
     c78:	ldr	x0, [x0, #96]
     c7c:	b	acc <gconv@@Base+0x1fc>
     c80:	ldr	x7, [x21, #32]
     c84:	ldr	w3, [x7]
     c88:	ands	w5, w3, #0x7
     c8c:	b.eq	99c <gconv@@Base+0xcc>  // b.none
     c90:	cbnz	x14, 12c0 <gconv@@Base+0x9f0>
     c94:	stp	x22, x8, [sp, #208]
     c98:	cmp	w5, #0x4
     c9c:	b.hi	1324 <gconv@@Base+0xa54>  // b.pmore
     ca0:	mov	w19, w5
     ca4:	cbz	w5, 105c <gconv@@Base+0x78c>
     ca8:	add	x6, x7, #0x3
     cac:	add	x12, sp, #0xe0
     cb0:	mov	x0, #0x1                   	// #1
     cb4:	nop
     cb8:	add	x1, x12, x0
     cbc:	ldrb	w4, [x6, x0]
     cc0:	cmp	x19, x0
     cc4:	add	x0, x0, #0x1
     cc8:	sturb	w4, [x1, #-1]
     ccc:	b.ne	cb8 <gconv@@Base+0x3e8>  // b.any
     cd0:	mov	x0, #0x4                   	// #4
     cd4:	sub	x0, x0, x19
     cd8:	add	x0, x22, x0
     cdc:	cmp	x20, x0
     ce0:	b.cc	107c <gconv@@Base+0x7ac>  // b.lo, b.ul, b.last
     ce4:	cmp	x8, x23
     ce8:	mov	w11, #0x5                   	// #5
     cec:	b.cs	b38 <gconv@@Base+0x268>  // b.hs, b.nlast
     cf0:	add	x0, x22, #0x1
     cf4:	add	x12, sp, #0xe0
     cf8:	add	x19, x19, #0x1
     cfc:	str	x0, [sp, #208]
     d00:	add	x4, x12, x19
     d04:	cmp	x19, #0x3
     d08:	ldurb	w1, [x0, #-1]
     d0c:	ccmp	x20, x0, #0x0, ls  // ls = plast
     d10:	add	x0, x0, #0x1
     d14:	sturb	w1, [x4, #-1]
     d18:	b.hi	cf8 <gconv@@Base+0x428>  // b.pmore
     d1c:	ldr	w0, [sp, #224]
     d20:	mov	w1, #0x2800                	// #10240
     d24:	str	x12, [sp, #208]
     d28:	and	w2, w0, #0xffffff00
     d2c:	cmp	w2, w1
     d30:	b.ne	10e4 <gconv@@Base+0x814>  // b.any
     d34:	add	x1, x8, #0x1
     d38:	str	x1, [sp, #216]
     d3c:	strb	w0, [x8]
     d40:	ldr	x0, [sp, #208]
     d44:	add	x0, x0, #0x4
     d48:	str	x0, [sp, #208]
     d4c:	cmp	x0, x12
     d50:	b.eq	106c <gconv@@Base+0x79c>  // b.none
     d54:	ldr	w3, [x7]
     d58:	sub	x12, x0, x12
     d5c:	and	w5, w3, #0x7
     d60:	mov	w0, w5
     d64:	cmp	x0, x12
     d68:	b.ge	1344 <gconv@@Base+0xa74>  // b.tcont
     d6c:	ldr	x22, [x10]
     d70:	sub	x0, x12, x0
     d74:	and	w3, w3, #0xfffffff8
     d78:	add	x22, x22, x0
     d7c:	str	x22, [x10]
     d80:	ldr	x12, [sp, #192]
     d84:	ldr	x0, [x27, #96]
     d88:	ldr	x8, [sp, #216]
     d8c:	str	w3, [x7]
     d90:	b	99c <gconv@@Base+0xcc>
     d94:	ldp	x5, x3, [sp, #168]
     d98:	mov	x4, x20
     d9c:	ldr	x2, [x22]
     da0:	mov	x1, x21
     da4:	ldr	x0, [sp, #112]
     da8:	str	w15, [sp, #96]
     dac:	ldr	x6, [sp, #152]
     db0:	bl	700 <__gconv_transliterate@plt>
     db4:	mov	w11, w0
     db8:	ldr	w15, [sp, #96]
     dbc:	cmp	w0, #0x6
     dc0:	mov	w7, #0x2800                	// #10240
     dc4:	mov	w18, #0x1c00                	// #7168
     dc8:	b.eq	ed4 <gconv@@Base+0x604>  // b.none
     dcc:	cmp	w0, #0x5
     dd0:	ldp	x0, x19, [sp, #208]
     dd4:	b.ne	a44 <gconv@@Base+0x174>  // b.any
     dd8:	b	a50 <gconv@@Base+0x180>
     ddc:	mov	x0, #0x0                   	// #0
     de0:	cbz	x26, de8 <gconv@@Base+0x518>
     de4:	ldr	x0, [x26]
     de8:	ldr	x1, [sp, #192]
     dec:	add	x0, x0, x1
     df0:	cmp	x0, x23
     df4:	b.eq	f54 <gconv@@Base+0x684>  // b.none
     df8:	ldr	x0, [sp, #112]
     dfc:	str	x28, [x22]
     e00:	ldr	x0, [x0, #96]
     e04:	cbz	x0, f7c <gconv@@Base+0x6ac>
     e08:	stp	x28, x25, [sp, #208]
     e0c:	cmp	x20, x28
     e10:	ldr	w12, [x21, #16]
     e14:	b.eq	11b4 <gconv@@Base+0x8e4>  // b.none
     e18:	and	w12, w12, #0x2
     e1c:	mov	x0, x25
     e20:	mov	x4, #0x4                   	// #4
     e24:	mov	w19, #0x2800                	// #10240
     e28:	mov	w23, #0x1c00                	// #7168
     e2c:	add	x3, x28, #0x4
     e30:	cmp	x20, x3
     e34:	b.cc	fc8 <gconv@@Base+0x6f8>  // b.lo, b.ul, b.last
     e38:	cmp	x11, x0
     e3c:	b.ls	ff8 <gconv@@Base+0x728>  // b.plast
     e40:	ldr	w2, [x28]
     e44:	and	w5, w2, #0xffffff00
     e48:	cmp	w5, w19
     e4c:	b.ne	1028 <gconv@@Base+0x758>  // b.any
     e50:	add	x3, x0, #0x1
     e54:	str	x3, [sp, #216]
     e58:	strb	w2, [x0]
     e5c:	ldp	x28, x0, [sp, #208]
     e60:	add	x28, x28, #0x4
     e64:	str	x28, [sp, #208]
     e68:	cmp	x20, x28
     e6c:	b.ne	e2c <gconv@@Base+0x55c>  // b.any
     e70:	ldr	x11, [sp, #200]
     e74:	str	x20, [x22]
     e78:	cmp	x0, x11
     e7c:	b.ne	1008 <gconv@@Base+0x738>  // b.any
     e80:	cmp	x4, #0x5
     e84:	b.ne	fd8 <gconv@@Base+0x708>  // b.any
     e88:	cmp	x25, x0
     e8c:	ldr	x0, [sp, #112]
     e90:	ldr	x0, [x0, #96]
     e94:	b.ne	acc <gconv@@Base+0x1fc>  // b.any
     e98:	ldr	w1, [x21, #20]
     e9c:	sub	w1, w1, #0x1
     ea0:	str	w1, [x21, #20]
     ea4:	b	acc <gconv@@Base+0x1fc>
     ea8:	mov	x0, x3
     eac:	str	x3, [sp, #208]
     eb0:	b	a44 <gconv@@Base+0x174>
     eb4:	ldr	x2, [sp, #152]
     eb8:	add	x0, x0, #0x4
     ebc:	mov	w11, #0x6                   	// #6
     ec0:	str	x0, [sp, #208]
     ec4:	ldr	x1, [x2]
     ec8:	add	x1, x1, #0x1
     ecc:	str	x1, [x2]
     ed0:	b	a44 <gconv@@Base+0x174>
     ed4:	ldr	x19, [sp, #216]
     ed8:	b	bb8 <gconv@@Base+0x2e8>
     edc:	mov	x19, x25
     ee0:	mov	w11, #0x5                   	// #5
     ee4:	str	x2, [x22]
     ee8:	b	b2c <gconv@@Base+0x25c>
     eec:	cbnz	x14, 1300 <gconv@@Base+0xa30>
     ef0:	ldr	x0, [x21, #32]
     ef4:	mov	w11, #0x0                   	// #0
     ef8:	str	xzr, [x0]
     efc:	ldr	w0, [x21, #16]
     f00:	tbnz	w0, #0, b38 <gconv@@Base+0x268>
     f04:	mov	x0, x24
     f08:	str	w6, [sp, #96]
     f0c:	bl	740 <_dl_mcount_wrapper_check@plt>
     f10:	ldp	x0, x1, [sp, #120]
     f14:	mov	w7, w25
     f18:	ldr	w6, [sp, #96]
     f1c:	mov	x5, x26
     f20:	mov	x4, #0x0                   	// #0
     f24:	mov	x3, #0x0                   	// #0
     f28:	mov	x2, #0x0                   	// #0
     f2c:	blr	x24
     f30:	mov	w11, w0
     f34:	b	b38 <gconv@@Base+0x268>
     f38:	mov	x10, x22
     f3c:	mov	w11, w7
     f40:	b	bfc <gconv@@Base+0x32c>
     f44:	mov	x19, x25
     f48:	mov	x0, x20
     f4c:	mov	w11, #0x4                   	// #4
     f50:	b	a50 <gconv@@Base+0x180>
     f54:	ldr	x0, [sp, #112]
     f58:	sub	x11, x19, x11
     f5c:	ldr	x1, [x0, #96]
     f60:	ldr	x0, [x22]
     f64:	cbz	x1, 10cc <gconv@@Base+0x7fc>
     f68:	sub	x11, x0, x11, lsl #2
     f6c:	str	x11, [x22]
     f70:	ldr	x0, [sp, #112]
     f74:	ldr	x0, [x0, #96]
     f78:	b	acc <gconv@@Base+0x1fc>
     f7c:	cmp	x20, x28
     f80:	b.eq	11b4 <gconv@@Base+0x8e4>  // b.none
     f84:	add	x2, x25, #0x4
     f88:	mov	w3, #0x2800                	// #10240
     f8c:	cmp	x11, x2
     f90:	b.cc	11c0 <gconv@@Base+0x8f0>  // b.lo, b.ul, b.last
     f94:	nop
     f98:	ldrb	w1, [x28], #1
     f9c:	mov	x0, x2
     fa0:	orr	w1, w1, w3
     fa4:	stur	w1, [x2, #-4]
     fa8:	cmp	x20, x28
     fac:	b.eq	10c0 <gconv@@Base+0x7f0>  // b.none
     fb0:	add	x2, x0, #0x4
     fb4:	cmp	x11, x2
     fb8:	b.cs	f98 <gconv@@Base+0x6c8>  // b.hs, b.nlast
     fbc:	mov	x4, #0x5                   	// #5
     fc0:	str	x28, [x22]
     fc4:	b	e78 <gconv@@Base+0x5a8>
     fc8:	ldp	x1, x2, [sp, #200]
     fcc:	str	x2, [x22]
     fd0:	cmp	x0, x1
     fd4:	b.ne	1008 <gconv@@Base+0x738>  // b.any
     fd8:	adrp	x3, 1000 <gconv@@Base+0x730>
     fdc:	adrp	x1, 1000 <gconv@@Base+0x730>
     fe0:	adrp	x0, 1000 <gconv@@Base+0x730>
     fe4:	add	x3, x3, #0x568
     fe8:	add	x1, x1, #0x3e8
     fec:	add	x0, x0, #0x518
     ff0:	mov	w2, #0x2eb                 	// #747
     ff4:	bl	750 <__assert_fail@plt>
     ff8:	ldp	x1, x2, [sp, #200]
     ffc:	str	x2, [x22]
    1000:	cmp	x0, x1
    1004:	b.eq	e88 <gconv@@Base+0x5b8>  // b.none
    1008:	adrp	x3, 1000 <gconv@@Base+0x730>
    100c:	adrp	x1, 1000 <gconv@@Base+0x730>
    1010:	adrp	x0, 1000 <gconv@@Base+0x730>
    1014:	add	x3, x3, #0x568
    1018:	add	x1, x1, #0x3e8
    101c:	add	x0, x0, #0x500
    1020:	mov	w2, #0x2ea                 	// #746
    1024:	bl	750 <__assert_fail@plt>
    1028:	cmp	w23, w2, lsr #7
    102c:	b.eq	11a8 <gconv@@Base+0x8d8>  // b.none
    1030:	ldr	x1, [sp, #152]
    1034:	cbz	x1, fc8 <gconv@@Base+0x6f8>
    1038:	ldr	w1, [x21, #16]
    103c:	tbnz	w1, #3, 1130 <gconv@@Base+0x860>
    1040:	ldr	x13, [sp, #208]
    1044:	cbnz	w12, 1188 <gconv@@Base+0x8b8>
    1048:	ldr	x1, [sp, #200]
    104c:	str	x13, [x22]
    1050:	cmp	x1, x0
    1054:	b.eq	fd8 <gconv@@Base+0x708>  // b.none
    1058:	b	1008 <gconv@@Base+0x738>
    105c:	mov	x0, #0x4                   	// #4
    1060:	mov	x19, #0x0                   	// #0
    1064:	b	cd8 <gconv@@Base+0x408>
    1068:	cbnz	w11, b38 <gconv@@Base+0x268>
    106c:	ldr	x22, [x10]
    1070:	ldr	x0, [x27, #96]
    1074:	ldr	x12, [sp, #192]
    1078:	b	99c <gconv@@Base+0xcc>
    107c:	str	x20, [x10]
    1080:	cmp	x22, x20
    1084:	b.cs	10ac <gconv@@Base+0x7dc>  // b.hs, b.nlast
    1088:	add	x22, x22, #0x1
    108c:	add	x7, x7, x19
    1090:	str	x22, [sp, #208]
    1094:	cmp	x20, x22
    1098:	add	x7, x7, #0x1
    109c:	add	x22, x22, #0x1
    10a0:	ldurb	w0, [x22, #-2]
    10a4:	strb	w0, [x7, #3]
    10a8:	b.ne	1090 <gconv@@Base+0x7c0>  // b.any
    10ac:	mov	w11, #0x7                   	// #7
    10b0:	b	b38 <gconv@@Base+0x268>
    10b4:	mov	w11, #0x6                   	// #6
    10b8:	ldr	x0, [sp, #208]
    10bc:	b	a50 <gconv@@Base+0x180>
    10c0:	mov	x4, #0x4                   	// #4
    10c4:	str	x28, [x22]
    10c8:	b	e78 <gconv@@Base+0x5a8>
    10cc:	cmp	x11, #0x0
    10d0:	add	x1, x11, #0x3
    10d4:	csel	x11, x1, x11, lt  // lt = tstop
    10d8:	sub	x0, x0, x11, asr #2
    10dc:	str	x0, [x22]
    10e0:	b	ac4 <gconv@@Base+0x1f4>
    10e4:	mov	w1, #0x1c00                	// #7168
    10e8:	cmp	w1, w0, lsr #7
    10ec:	b.eq	11d4 <gconv@@Base+0x904>  // b.none
    10f0:	ldr	x0, [sp, #152]
    10f4:	cbz	x0, 1128 <gconv@@Base+0x858>
    10f8:	tbnz	w28, #3, 11e4 <gconv@@Base+0x914>
    10fc:	mov	x0, x12
    1100:	mov	w11, #0x6                   	// #6
    1104:	tbz	w28, #1, b38 <gconv@@Base+0x268>
    1108:	ldr	x2, [sp, #152]
    110c:	add	x0, x0, #0x4
    1110:	str	x0, [sp, #208]
    1114:	ldr	x1, [x2]
    1118:	add	x1, x1, #0x1
    111c:	str	x1, [x2]
    1120:	cmp	x0, x12
    1124:	b.ne	d54 <gconv@@Base+0x484>  // b.any
    1128:	mov	w11, #0x6                   	// #6
    112c:	b	b38 <gconv@@Base+0x268>
    1130:	ldp	x5, x3, [sp, #168]
    1134:	mov	x4, x20
    1138:	ldr	x2, [x22]
    113c:	mov	x1, x21
    1140:	ldr	x0, [sp, #112]
    1144:	str	x11, [sp, #96]
    1148:	ldr	x6, [sp, #152]
    114c:	stp	w7, w12, [sp, #184]
    1150:	bl	700 <__gconv_transliterate@plt>
    1154:	sxtw	x4, w0
    1158:	ldp	w7, w12, [sp, #184]
    115c:	cmp	w4, #0x6
    1160:	ldr	x11, [sp, #96]
    1164:	b.eq	11cc <gconv@@Base+0x8fc>  // b.none
    1168:	cmp	w4, #0x5
    116c:	ldp	x28, x0, [sp, #208]
    1170:	b.ne	e68 <gconv@@Base+0x598>  // b.any
    1174:	ldr	x1, [sp, #200]
    1178:	str	x28, [x22]
    117c:	cmp	x1, x0
    1180:	b.eq	e88 <gconv@@Base+0x5b8>  // b.none
    1184:	b	1008 <gconv@@Base+0x738>
    1188:	ldr	x2, [sp, #152]
    118c:	add	x28, x13, #0x4
    1190:	mov	x4, #0x6                   	// #6
    1194:	str	x28, [sp, #208]
    1198:	ldr	x1, [x2]
    119c:	add	x1, x1, #0x1
    11a0:	str	x1, [x2]
    11a4:	b	e68 <gconv@@Base+0x598>
    11a8:	mov	x28, x3
    11ac:	str	x3, [sp, #208]
    11b0:	b	e68 <gconv@@Base+0x598>
    11b4:	cmp	x11, x25
    11b8:	b.eq	fd8 <gconv@@Base+0x708>  // b.none
    11bc:	b	1008 <gconv@@Base+0x738>
    11c0:	cmp	x11, x25
    11c4:	b.eq	e98 <gconv@@Base+0x5c8>  // b.none
    11c8:	b	1008 <gconv@@Base+0x738>
    11cc:	ldr	x0, [sp, #216]
    11d0:	b	1040 <gconv@@Base+0x770>
    11d4:	add	x0, x12, #0x4
    11d8:	mov	x12, #0x4                   	// #4
    11dc:	str	x0, [sp, #208]
    11e0:	b	d60 <gconv@@Base+0x490>
    11e4:	mov	x6, x0
    11e8:	mov	x2, x22
    11ec:	add	x5, sp, #0xd8
    11f0:	add	x3, sp, #0xd0
    11f4:	mov	x1, x21
    11f8:	mov	x0, x27
    11fc:	stp	x4, x7, [sp, #96]
    1200:	str	x8, [sp, #112]
    1204:	stp	x10, x14, [sp, #136]
    1208:	str	x12, [sp, #168]
    120c:	bl	700 <__gconv_transliterate@plt>
    1210:	mov	w11, w0
    1214:	cmp	w0, #0x6
    1218:	ldr	x7, [sp, #104]
    121c:	ldp	x10, x14, [sp, #136]
    1220:	ldr	x12, [sp, #168]
    1224:	ldr	x0, [sp, #208]
    1228:	b.eq	12b8 <gconv@@Base+0x9e8>  // b.none
    122c:	cmp	x0, x12
    1230:	ldr	x4, [sp, #96]
    1234:	ldr	x8, [sp, #112]
    1238:	b.ne	d54 <gconv@@Base+0x484>  // b.any
    123c:	cmp	w11, #0x7
    1240:	b.ne	1068 <gconv@@Base+0x798>  // b.any
    1244:	add	x0, x12, #0x4
    1248:	cmp	x4, x0
    124c:	b.eq	13a4 <gconv@@Base+0xad4>  // b.none
    1250:	ldr	w0, [x7]
    1254:	ldr	x1, [x10]
    1258:	and	x2, x0, #0x7
    125c:	sub	x2, x19, x2
    1260:	and	w0, w0, #0xfffffff8
    1264:	add	x1, x1, x2
    1268:	str	x1, [x10]
    126c:	cmp	x19, w0, sxtw
    1270:	b.le	1384 <gconv@@Base+0xab4>
    1274:	cmp	x19, #0x4
    1278:	b.hi	1364 <gconv@@Base+0xa94>  // b.pmore
    127c:	orr	w0, w0, w19
    1280:	str	w0, [x7]
    1284:	cmp	x4, x12
    1288:	b.ls	10ac <gconv@@Base+0x7dc>  // b.plast
    128c:	add	x7, x7, #0x4
    1290:	add	x12, x12, #0x1
    1294:	str	x12, [sp, #208]
    1298:	cmp	x4, x12
    129c:	ldurb	w0, [x12, #-1]
    12a0:	strb	w0, [x7], #1
    12a4:	b.ne	1290 <gconv@@Base+0x9c0>  // b.any
    12a8:	mov	w11, #0x7                   	// #7
    12ac:	b	b38 <gconv@@Base+0x268>
    12b0:	mov	w0, #0x0                   	// #0
    12b4:	b	c50 <gconv@@Base+0x380>
    12b8:	tbz	w28, #1, 1120 <gconv@@Base+0x850>
    12bc:	b	1108 <gconv@@Base+0x838>
    12c0:	adrp	x3, 1000 <gconv@@Base+0x730>
    12c4:	adrp	x1, 1000 <gconv@@Base+0x730>
    12c8:	adrp	x0, 1000 <gconv@@Base+0x730>
    12cc:	add	x3, x3, #0x568
    12d0:	add	x1, x1, #0x3e8
    12d4:	add	x0, x0, #0x400
    12d8:	mov	w2, #0x234                 	// #564
    12dc:	bl	750 <__assert_fail@plt>
    12e0:	adrp	x3, 1000 <gconv@@Base+0x730>
    12e4:	adrp	x1, 1000 <gconv@@Base+0x730>
    12e8:	adrp	x0, 1000 <gconv@@Base+0x730>
    12ec:	add	x3, x3, #0x568
    12f0:	add	x1, x1, #0x3e8
    12f4:	add	x0, x0, #0x538
    12f8:	mov	w2, #0x31e                 	// #798
    12fc:	bl	750 <__assert_fail@plt>
    1300:	adrp	x3, 1000 <gconv@@Base+0x730>
    1304:	adrp	x1, 1000 <gconv@@Base+0x730>
    1308:	adrp	x0, 1000 <gconv@@Base+0x730>
    130c:	add	x3, x3, #0x568
    1310:	add	x1, x1, #0x3e8
    1314:	add	x0, x0, #0x400
    1318:	mov	w2, #0x1a4                 	// #420
    131c:	bl	750 <__assert_fail@plt>
    1320:	bl	710 <__stack_chk_fail@plt>
    1324:	adrp	x3, 1000 <gconv@@Base+0x730>
    1328:	adrp	x1, 1000 <gconv@@Base+0x730>
    132c:	adrp	x0, 1000 <gconv@@Base+0x730>
    1330:	add	x3, x3, #0x550
    1334:	add	x1, x1, #0x418
    1338:	add	x0, x0, #0x428
    133c:	mov	w2, #0x18b                 	// #395
    1340:	bl	750 <__assert_fail@plt>
    1344:	adrp	x3, 1000 <gconv@@Base+0x730>
    1348:	adrp	x1, 1000 <gconv@@Base+0x730>
    134c:	adrp	x0, 1000 <gconv@@Base+0x730>
    1350:	add	x3, x3, #0x550
    1354:	add	x1, x1, #0x418
    1358:	add	x0, x0, #0x458
    135c:	mov	w2, #0x1c9                 	// #457
    1360:	bl	750 <__assert_fail@plt>
    1364:	adrp	x3, 1000 <gconv@@Base+0x730>
    1368:	adrp	x1, 1000 <gconv@@Base+0x730>
    136c:	adrp	x0, 1000 <gconv@@Base+0x730>
    1370:	add	x3, x3, #0x550
    1374:	add	x1, x1, #0x418
    1378:	add	x0, x0, #0x4d0
    137c:	mov	w2, #0x1e6                 	// #486
    1380:	bl	750 <__assert_fail@plt>
    1384:	adrp	x3, 1000 <gconv@@Base+0x730>
    1388:	adrp	x1, 1000 <gconv@@Base+0x730>
    138c:	adrp	x0, 1000 <gconv@@Base+0x730>
    1390:	add	x3, x3, #0x550
    1394:	add	x1, x1, #0x418
    1398:	add	x0, x0, #0x4a8
    139c:	mov	w2, #0x1e5                 	// #485
    13a0:	bl	750 <__assert_fail@plt>
    13a4:	adrp	x3, 1000 <gconv@@Base+0x730>
    13a8:	adrp	x1, 1000 <gconv@@Base+0x730>
    13ac:	adrp	x0, 1000 <gconv@@Base+0x730>
    13b0:	add	x3, x3, #0x550
    13b4:	add	x1, x1, #0x418
    13b8:	add	x0, x0, #0x480
    13bc:	mov	w2, #0x1db                 	// #475
    13c0:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

00000000000013c4 <.fini>:
    13c4:	stp	x29, x30, [sp, #-16]!
    13c8:	mov	x29, sp
    13cc:	ldp	x29, x30, [sp], #16
    13d0:	ret
