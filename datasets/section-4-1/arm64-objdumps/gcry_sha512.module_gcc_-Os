
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_sha512.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sha512_init>:
   0:	mov	x1, #0xc908                	// #51464
   4:	str	xzr, [x0, #64]
   8:	movk	x1, #0xf3bc, lsl #16
   c:	str	wzr, [x0, #200]
  10:	movk	x1, #0xe667, lsl #32
  14:	movk	x1, #0x6a09, lsl #48
  18:	str	x1, [x0]
  1c:	mov	x1, #0xa73b                	// #42811
  20:	movk	x1, #0x84ca, lsl #16
  24:	movk	x1, #0xae85, lsl #32
  28:	movk	x1, #0xbb67, lsl #48
  2c:	str	x1, [x0, #8]
  30:	mov	x1, #0xf82b                	// #63531
  34:	movk	x1, #0xfe94, lsl #16
  38:	movk	x1, #0xf372, lsl #32
  3c:	movk	x1, #0x3c6e, lsl #48
  40:	str	x1, [x0, #16]
  44:	mov	x1, #0x36f1                	// #14065
  48:	movk	x1, #0x5f1d, lsl #16
  4c:	movk	x1, #0xf53a, lsl #32
  50:	movk	x1, #0xa54f, lsl #48
  54:	str	x1, [x0, #24]
  58:	mov	x1, #0x82d1                	// #33489
  5c:	movk	x1, #0xade6, lsl #16
  60:	movk	x1, #0x527f, lsl #32
  64:	movk	x1, #0x510e, lsl #48
  68:	str	x1, [x0, #32]
  6c:	mov	x1, #0x6c1f                	// #27679
  70:	movk	x1, #0x2b3e, lsl #16
  74:	movk	x1, #0x688c, lsl #32
  78:	movk	x1, #0x9b05, lsl #48
  7c:	str	x1, [x0, #40]
  80:	mov	x1, #0xbd6b                	// #48491
  84:	movk	x1, #0xfb41, lsl #16
  88:	movk	x1, #0xd9ab, lsl #32
  8c:	movk	x1, #0x1f83, lsl #48
  90:	str	x1, [x0, #48]
  94:	mov	x1, #0x2179                	// #8569
  98:	movk	x1, #0x137e, lsl #16
  9c:	movk	x1, #0xcd19, lsl #32
  a0:	movk	x1, #0x5be0, lsl #48
  a4:	str	x1, [x0, #56]
  a8:	ret

00000000000000ac <sha384_init>:
  ac:	mov	x1, #0x9ed8                	// #40664
  b0:	str	xzr, [x0, #64]
  b4:	movk	x1, #0xc105, lsl #16
  b8:	str	wzr, [x0, #200]
  bc:	movk	x1, #0x9d5d, lsl #32
  c0:	movk	x1, #0xcbbb, lsl #48
  c4:	str	x1, [x0]
  c8:	mov	x1, #0xd507                	// #54535
  cc:	movk	x1, #0x367c, lsl #16
  d0:	movk	x1, #0x292a, lsl #32
  d4:	movk	x1, #0x629a, lsl #48
  d8:	str	x1, [x0, #8]
  dc:	mov	x1, #0xdd17                	// #56599
  e0:	movk	x1, #0x3070, lsl #16
  e4:	movk	x1, #0x15a, lsl #32
  e8:	movk	x1, #0x9159, lsl #48
  ec:	str	x1, [x0, #16]
  f0:	mov	x1, #0x5939                	// #22841
  f4:	movk	x1, #0xf70e, lsl #16
  f8:	movk	x1, #0xecd8, lsl #32
  fc:	movk	x1, #0x152f, lsl #48
 100:	str	x1, [x0, #24]
 104:	mov	x1, #0xb31                 	// #2865
 108:	movk	x1, #0xffc0, lsl #16
 10c:	movk	x1, #0x2667, lsl #32
 110:	movk	x1, #0x6733, lsl #48
 114:	str	x1, [x0, #32]
 118:	mov	x1, #0x1511                	// #5393
 11c:	movk	x1, #0x6858, lsl #16
 120:	movk	x1, #0x4a87, lsl #32
 124:	movk	x1, #0x8eb4, lsl #48
 128:	str	x1, [x0, #40]
 12c:	mov	x1, #0x8fa7                	// #36775
 130:	movk	x1, #0x64f9, lsl #16
 134:	movk	x1, #0x2e0d, lsl #32
 138:	movk	x1, #0xdb0c, lsl #48
 13c:	str	x1, [x0, #48]
 140:	mov	x1, #0x4fa4                	// #20388
 144:	movk	x1, #0xbefa, lsl #16
 148:	movk	x1, #0x481d, lsl #32
 14c:	movk	x1, #0x47b5, lsl #48
 150:	str	x1, [x0, #56]
 154:	ret

0000000000000158 <Sum0>:
 158:	ror	x1, x0, #28
 15c:	eor	x1, x1, x0, ror #34
 160:	eor	x0, x1, x0, ror #39
 164:	ret

0000000000000168 <Sum1>:
 168:	ror	x1, x0, #14
 16c:	eor	x1, x1, x0, ror #18
 170:	eor	x0, x1, x0, ror #41
 174:	ret

0000000000000178 <transform>:
 178:	sub	sp, sp, #0x2c0
 17c:	mov	x10, x0
 180:	add	x0, sp, #0x40
 184:	add	x2, x1, #0x80
 188:	mov	x11, x0
 18c:	stp	x29, x30, [sp]
 190:	mov	x29, sp
 194:	ldp	x18, x15, [x10, #32]
 198:	stp	x19, x20, [sp, #16]
 19c:	stp	x21, x22, [sp, #32]
 1a0:	ldp	x22, x21, [x10]
 1a4:	stp	x23, x24, [sp, #48]
 1a8:	ldp	x20, x19, [x10, #16]
 1ac:	ldp	x14, x13, [x10, #48]
 1b0:	add	x1, x1, #0x8
 1b4:	ldurb	w3, [x1, #-8]
 1b8:	strb	w3, [x0, #7]
 1bc:	ldurb	w3, [x1, #-7]
 1c0:	strb	w3, [x0, #6]
 1c4:	ldurb	w3, [x1, #-6]
 1c8:	strb	w3, [x0, #5]
 1cc:	ldurb	w3, [x1, #-5]
 1d0:	strb	w3, [x0, #4]
 1d4:	ldurb	w3, [x1, #-4]
 1d8:	strb	w3, [x0, #3]
 1dc:	ldurb	w3, [x1, #-3]
 1e0:	strb	w3, [x0, #2]
 1e4:	ldurb	w3, [x1, #-2]
 1e8:	cmp	x1, x2
 1ec:	strb	w3, [x0, #1]
 1f0:	ldurb	w3, [x1, #-1]
 1f4:	strb	w3, [x0], #8
 1f8:	b.ne	1b0 <transform+0x38>  // b.any
 1fc:	add	x4, x11, #0x200
 200:	mov	x1, x11
 204:	ldr	x0, [x1, #112]
 208:	add	x1, x1, #0x8
 20c:	ldr	x2, [x1]
 210:	ror	x3, x0, #61
 214:	eor	x3, x3, x0, ror #19
 218:	eor	x0, x3, x0, lsr #6
 21c:	ror	x3, x2, #8
 220:	eor	x3, x3, x2, ror #1
 224:	eor	x2, x3, x2, lsr #7
 228:	add	x0, x0, x2
 22c:	ldur	x3, [x1, #-8]
 230:	ldr	x2, [x1, #64]
 234:	add	x2, x2, x3
 238:	add	x0, x0, x2
 23c:	str	x0, [x1, #120]
 240:	cmp	x4, x1
 244:	b.ne	204 <transform+0x8c>  // b.any
 248:	adrp	x0, 0 <sha512_init>
 24c:	mov	x6, x13
 250:	mov	x7, x14
 254:	mov	x8, x15
 258:	ldr	x12, [x0]
 25c:	mov	x9, x18
 260:	mov	x2, x19
 264:	mov	x3, x20
 268:	add	x23, x12, #0x280
 26c:	mov	x4, x21
 270:	mov	x5, x22
 274:	mov	x0, x9
 278:	bl	168 <Sum1>
 27c:	and	x16, x9, x8
 280:	bic	x1, x7, x9
 284:	eor	x1, x1, x16
 288:	add	x1, x1, x0
 28c:	ldr	x16, [x11]
 290:	ldr	x0, [x12]
 294:	add	x0, x0, x16
 298:	add	x1, x1, x0
 29c:	mov	x0, x5
 2a0:	add	x6, x1, x6
 2a4:	bl	158 <Sum0>
 2a8:	eor	x1, x4, x3
 2ac:	and	x16, x4, x3
 2b0:	and	x1, x1, x5
 2b4:	eor	x1, x1, x16
 2b8:	add	x2, x6, x2
 2bc:	add	x1, x1, x0
 2c0:	mov	x0, x2
 2c4:	add	x6, x1, x6
 2c8:	bl	168 <Sum1>
 2cc:	add	x7, x0, x7
 2d0:	ldr	x1, [x11, #8]
 2d4:	and	x0, x2, x9
 2d8:	ldr	x24, [x12, #8]
 2dc:	add	x24, x24, x1
 2e0:	add	x24, x24, x7
 2e4:	bic	x7, x8, x2
 2e8:	eor	x7, x7, x0
 2ec:	mov	x0, x6
 2f0:	add	x24, x24, x7
 2f4:	bl	158 <Sum0>
 2f8:	eor	x1, x5, x4
 2fc:	and	x1, x1, x6
 300:	and	x7, x5, x4
 304:	eor	x1, x1, x7
 308:	add	x3, x24, x3
 30c:	add	x7, x1, x0
 310:	mov	x0, x3
 314:	add	x7, x7, x24
 318:	bl	168 <Sum1>
 31c:	add	x8, x0, x8
 320:	ldr	x1, [x11, #16]
 324:	and	x0, x2, x3
 328:	ldr	x24, [x12, #16]
 32c:	add	x24, x24, x1
 330:	add	x24, x24, x8
 334:	bic	x8, x9, x3
 338:	eor	x8, x8, x0
 33c:	mov	x0, x7
 340:	add	x24, x24, x8
 344:	bl	158 <Sum0>
 348:	eor	x1, x6, x5
 34c:	and	x1, x1, x7
 350:	and	x8, x6, x5
 354:	eor	x1, x1, x8
 358:	add	x4, x24, x4
 35c:	add	x8, x1, x0
 360:	mov	x0, x4
 364:	add	x8, x8, x24
 368:	bl	168 <Sum1>
 36c:	add	x9, x0, x9
 370:	ldr	x16, [x11, #24]
 374:	bic	x0, x2, x4
 378:	ldr	x1, [x12, #24]
 37c:	add	x1, x1, x16
 380:	add	x9, x1, x9
 384:	and	x1, x3, x4
 388:	eor	x0, x0, x1
 38c:	add	x9, x9, x0
 390:	mov	x0, x8
 394:	bl	158 <Sum0>
 398:	eor	x1, x6, x7
 39c:	and	x1, x1, x8
 3a0:	and	x16, x6, x7
 3a4:	eor	x1, x1, x16
 3a8:	add	x5, x9, x5
 3ac:	add	x1, x1, x0
 3b0:	mov	x0, x5
 3b4:	add	x9, x1, x9
 3b8:	bl	168 <Sum1>
 3bc:	add	x2, x0, x2
 3c0:	ldr	x16, [x11, #32]
 3c4:	bic	x0, x3, x5
 3c8:	ldr	x1, [x12, #32]
 3cc:	add	x1, x1, x16
 3d0:	add	x2, x1, x2
 3d4:	and	x1, x4, x5
 3d8:	eor	x0, x0, x1
 3dc:	add	x2, x2, x0
 3e0:	mov	x0, x9
 3e4:	bl	158 <Sum0>
 3e8:	eor	x1, x7, x8
 3ec:	and	x1, x1, x9
 3f0:	and	x16, x7, x8
 3f4:	eor	x1, x1, x16
 3f8:	add	x6, x6, x2
 3fc:	add	x1, x1, x0
 400:	mov	x0, x6
 404:	add	x2, x1, x2
 408:	bl	168 <Sum1>
 40c:	add	x3, x0, x3
 410:	ldr	x16, [x11, #40]
 414:	bic	x0, x4, x6
 418:	ldr	x1, [x12, #40]
 41c:	add	x1, x1, x16
 420:	add	x3, x1, x3
 424:	and	x1, x5, x6
 428:	eor	x0, x0, x1
 42c:	add	x3, x3, x0
 430:	mov	x0, x2
 434:	bl	158 <Sum0>
 438:	eor	x1, x8, x9
 43c:	and	x16, x8, x9
 440:	and	x1, x1, x2
 444:	eor	x1, x1, x16
 448:	add	x7, x7, x3
 44c:	add	x1, x1, x0
 450:	mov	x0, x7
 454:	add	x3, x1, x3
 458:	bl	168 <Sum1>
 45c:	add	x4, x0, x4
 460:	ldr	x16, [x11, #48]
 464:	bic	x0, x5, x7
 468:	ldr	x1, [x12, #48]
 46c:	add	x1, x1, x16
 470:	add	x4, x1, x4
 474:	and	x1, x6, x7
 478:	eor	x0, x0, x1
 47c:	add	x4, x4, x0
 480:	mov	x0, x3
 484:	bl	158 <Sum0>
 488:	eor	x1, x9, x2
 48c:	and	x16, x9, x2
 490:	and	x1, x1, x3
 494:	eor	x1, x1, x16
 498:	add	x8, x8, x4
 49c:	add	x1, x1, x0
 4a0:	mov	x0, x8
 4a4:	add	x4, x1, x4
 4a8:	bl	168 <Sum1>
 4ac:	add	x5, x0, x5
 4b0:	ldr	x16, [x11, #56]
 4b4:	bic	x0, x6, x8
 4b8:	ldr	x1, [x12, #56]
 4bc:	add	x1, x1, x16
 4c0:	add	x5, x1, x5
 4c4:	and	x1, x7, x8
 4c8:	eor	x0, x0, x1
 4cc:	add	x5, x5, x0
 4d0:	mov	x0, x4
 4d4:	bl	158 <Sum0>
 4d8:	eor	x1, x2, x3
 4dc:	and	x1, x1, x4
 4e0:	and	x16, x2, x3
 4e4:	eor	x1, x1, x16
 4e8:	add	x12, x12, #0x40
 4ec:	add	x1, x1, x0
 4f0:	add	x9, x9, x5
 4f4:	add	x11, x11, #0x40
 4f8:	add	x5, x1, x5
 4fc:	cmp	x23, x12
 500:	b.ne	274 <transform+0xfc>  // b.any
 504:	add	x5, x22, x5
 508:	add	x4, x21, x4
 50c:	add	x3, x20, x3
 510:	add	x2, x19, x2
 514:	add	x9, x18, x9
 518:	add	x8, x15, x8
 51c:	add	x7, x14, x7
 520:	add	x6, x13, x6
 524:	ldp	x29, x30, [sp]
 528:	ldp	x19, x20, [sp, #16]
 52c:	ldp	x21, x22, [sp, #32]
 530:	ldp	x23, x24, [sp, #48]
 534:	stp	x5, x4, [x10]
 538:	stp	x3, x2, [x10, #16]
 53c:	stp	x9, x8, [x10, #32]
 540:	stp	x7, x6, [x10, #48]
 544:	add	sp, sp, #0x2c0
 548:	ret
 54c:	nop
	...

0000000000000558 <sha512_read>:
 558:	add	x0, x0, #0x48
 55c:	ret

0000000000000560 <sha512_write>:
 560:	stp	x29, x30, [sp, #-64]!
 564:	mov	x29, sp
 568:	stp	x19, x20, [sp, #16]
 56c:	mov	x19, x0
 570:	mov	x20, x2
 574:	stp	x21, x22, [sp, #32]
 578:	mov	x21, x1
 57c:	ldr	w1, [x0, #200]
 580:	str	x23, [sp, #48]
 584:	cmp	w1, #0x80
 588:	b.ne	5c4 <sha512_write+0x64>  // b.any
 58c:	add	x1, x0, #0x48
 590:	bl	178 <transform>
 594:	mov	w0, #0x300                 	// #768
 598:	bl	0 <_gcry_burn_stack>
 59c:	str	wzr, [x19, #200]
 5a0:	ldr	x0, [x19, #64]
 5a4:	add	x0, x0, #0x1
 5a8:	str	x0, [x19, #64]
 5ac:	cbnz	x21, 5cc <sha512_write+0x6c>
 5b0:	ldp	x19, x20, [sp, #16]
 5b4:	ldp	x21, x22, [sp, #32]
 5b8:	ldr	x23, [sp, #48]
 5bc:	ldp	x29, x30, [sp], #64
 5c0:	ret
 5c4:	cbz	x21, 5b0 <sha512_write+0x50>
 5c8:	cbnz	w1, 644 <sha512_write+0xe4>
 5cc:	mov	x22, x20
 5d0:	add	x23, x21, x20
 5d4:	sub	x1, x23, x22
 5d8:	cmp	x22, #0x7f
 5dc:	b.hi	66c <sha512_write+0x10c>  // b.pmore
 5e0:	lsr	x1, x20, #7
 5e4:	mov	x2, #0xffffffffffffff80    	// #-128
 5e8:	mov	w0, #0x300                 	// #768
 5ec:	add	x21, x21, x1, lsl #7
 5f0:	madd	x20, x1, x2, x20
 5f4:	bl	0 <_gcry_burn_stack>
 5f8:	mov	x3, #0x0                   	// #0
 5fc:	cmp	x20, x3
 600:	b.eq	5b0 <sha512_write+0x50>  // b.none
 604:	ldr	w0, [x19, #200]
 608:	cmp	w0, #0x7f
 60c:	b.gt	5b0 <sha512_write+0x50>
 610:	add	w1, w0, #0x1
 614:	add	x0, x19, w0, sxtw
 618:	str	w1, [x19, #200]
 61c:	ldrb	w1, [x21, x3]
 620:	add	x3, x3, #0x1
 624:	strb	w1, [x0, #72]
 628:	b	5fc <sha512_write+0x9c>
 62c:	add	w1, w0, #0x1
 630:	add	x0, x19, w0, sxtw
 634:	str	w1, [x19, #200]
 638:	sub	x20, x20, #0x1
 63c:	ldrb	w1, [x21], #1
 640:	strb	w1, [x0, #72]
 644:	cbz	x20, 654 <sha512_write+0xf4>
 648:	ldr	w0, [x19, #200]
 64c:	cmp	w0, #0x7f
 650:	b.le	62c <sha512_write+0xcc>
 654:	mov	x0, x19
 658:	mov	x2, #0x0                   	// #0
 65c:	mov	x1, #0x0                   	// #0
 660:	bl	560 <sha512_write>
 664:	cbnz	x20, 5cc <sha512_write+0x6c>
 668:	b	5b0 <sha512_write+0x50>
 66c:	mov	x0, x19
 670:	bl	178 <transform>
 674:	ldr	x0, [x19, #64]
 678:	sub	x22, x22, #0x80
 67c:	str	wzr, [x19, #200]
 680:	add	x0, x0, #0x1
 684:	str	x0, [x19, #64]
 688:	b	5d4 <sha512_write+0x74>

000000000000068c <sha512_final>:
 68c:	stp	x29, x30, [sp, #-48]!
 690:	mov	x2, #0x0                   	// #0
 694:	mov	x1, #0x0                   	// #0
 698:	mov	x29, sp
 69c:	stp	x19, x20, [sp, #16]
 6a0:	mov	x19, x0
 6a4:	str	x21, [sp, #32]
 6a8:	bl	560 <sha512_write>
 6ac:	ldr	x1, [x19, #64]
 6b0:	ldr	w2, [x19, #200]
 6b4:	lsl	x20, x1, #7
 6b8:	sxtw	x0, w2
 6bc:	adds	x20, x0, x20
 6c0:	add	x0, x19, x0
 6c4:	cset	x3, cs  // cs = hs, nlast
 6c8:	cmp	w2, #0x6f
 6cc:	add	x1, x3, x1, lsr #57
 6d0:	add	w3, w2, #0x1
 6d4:	str	w3, [x19, #200]
 6d8:	lsl	x21, x20, #3
 6dc:	extr	x20, x1, x20, #61
 6e0:	mov	w1, #0xffffff80            	// #-128
 6e4:	strb	w1, [x0, #72]
 6e8:	b.gt	7b8 <sha512_final+0x12c>
 6ec:	ldr	w0, [x19, #200]
 6f0:	cmp	w0, #0x6f
 6f4:	b.le	794 <sha512_final+0x108>
 6f8:	add	x1, x19, #0x48
 6fc:	rev16	w20, w20
 700:	rev	x21, x21
 704:	str	wzr, [x19, #184]
 708:	strh	wzr, [x19, #188]
 70c:	mov	x0, x19
 710:	strh	w20, [x19, #190]
 714:	str	x21, [x19, #192]
 718:	bl	178 <transform>
 71c:	mov	w0, #0x300                 	// #768
 720:	bl	0 <_gcry_burn_stack>
 724:	ldr	x0, [x19]
 728:	ldr	x21, [sp, #32]
 72c:	rev	x0, x0
 730:	str	x0, [x19, #72]
 734:	ldr	x0, [x19, #8]
 738:	rev	x0, x0
 73c:	str	x0, [x19, #80]
 740:	ldr	x0, [x19, #16]
 744:	rev	x0, x0
 748:	str	x0, [x19, #88]
 74c:	ldr	x0, [x19, #24]
 750:	rev	x0, x0
 754:	str	x0, [x19, #96]
 758:	ldr	x0, [x19, #32]
 75c:	rev	x0, x0
 760:	str	x0, [x19, #104]
 764:	ldr	x0, [x19, #40]
 768:	rev	x0, x0
 76c:	str	x0, [x19, #112]
 770:	ldr	x0, [x19, #48]
 774:	rev	x0, x0
 778:	str	x0, [x19, #120]
 77c:	ldr	x0, [x19, #56]
 780:	rev	x0, x0
 784:	str	x0, [x19, #128]
 788:	ldp	x19, x20, [sp, #16]
 78c:	ldp	x29, x30, [sp], #48
 790:	ret
 794:	add	w1, w0, #0x1
 798:	add	x0, x19, w0, sxtw
 79c:	str	w1, [x19, #200]
 7a0:	strb	wzr, [x0, #72]
 7a4:	b	6ec <sha512_final+0x60>
 7a8:	add	w1, w0, #0x1
 7ac:	add	x0, x19, w0, sxtw
 7b0:	str	w1, [x19, #200]
 7b4:	strb	wzr, [x0, #72]
 7b8:	ldr	w0, [x19, #200]
 7bc:	cmp	w0, #0x7f
 7c0:	b.le	7a8 <sha512_final+0x11c>
 7c4:	mov	x0, x19
 7c8:	mov	x2, #0x0                   	// #0
 7cc:	mov	x1, #0x0                   	// #0
 7d0:	bl	560 <sha512_write>
 7d4:	add	x0, x19, #0x48
 7d8:	mov	x2, #0x70                  	// #112
 7dc:	mov	w1, #0x0                   	// #0
 7e0:	bl	0 <grub_memset>
 7e4:	b	6f8 <sha512_final+0x6c>

00000000000007e8 <grub_mod_init>:
 7e8:	stp	x29, x30, [sp, #-32]!
 7ec:	adrp	x0, 0 <sha512_init>
 7f0:	mov	x29, sp
 7f4:	str	x19, [sp, #16]
 7f8:	ldr	x19, [x0]
 7fc:	mov	x0, x19
 800:	bl	0 <grub_md_register>
 804:	add	x0, x19, #0x60
 808:	ldr	x19, [sp, #16]
 80c:	ldp	x29, x30, [sp], #32
 810:	b	0 <grub_md_register>
 814:	nop
	...

0000000000000820 <grub_mod_fini>:
 820:	stp	x29, x30, [sp, #-32]!
 824:	adrp	x0, 0 <sha512_init>
 828:	mov	x29, sp
 82c:	str	x19, [sp, #16]
 830:	ldr	x19, [x0]
 834:	mov	x0, x19
 838:	bl	0 <grub_md_unregister>
 83c:	add	x0, x19, #0x60
 840:	ldr	x19, [sp, #16]
 844:	ldp	x29, x30, [sp], #32
 848:	b	0 <grub_md_unregister>
 84c:	nop
	...
