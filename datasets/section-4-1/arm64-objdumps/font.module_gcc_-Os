
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//font.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_stpcpy>:
       0:	mov	x3, x0
       4:	sub	x5, x1, #0x1
       8:	mov	x2, #0x0                   	// #0
       c:	ldrb	w4, [x1, x2]
      10:	add	x0, x3, x2
      14:	strb	w4, [x3, x2]
      18:	add	x2, x2, #0x1
      1c:	ldrb	w4, [x5, x2]
      20:	cbnz	w4, c <grub_stpcpy+0xc>
      24:	ret

0000000000000028 <grub_font_blit_glyph>:
      28:	ldrh	w13, [x1, #10]
      2c:	mov	w7, #0x0                   	// #0
      30:	cmp	w13, w7
      34:	b.hi	3c <grub_font_blit_glyph+0x14>  // b.pmore
      38:	ret
      3c:	ldrh	w12, [x1, #8]
      40:	add	w4, w7, w3
      44:	ldrh	w5, [x0, #8]
      48:	mov	w11, #0x0                   	// #0
      4c:	mul	w6, w12, w7
      50:	madd	w5, w5, w4, w2
      54:	and	w8, w6, #0x7
      58:	and	w9, w5, #0x7
      5c:	lsr	w6, w6, #3
      60:	lsr	w5, w5, #3
      64:	cmp	w12, w11
      68:	b.hi	74 <grub_font_blit_glyph+0x4c>  // b.pmore
      6c:	add	w7, w7, #0x1
      70:	b	30 <grub_font_blit_glyph+0x8>
      74:	add	x4, x1, w6, uxtw
      78:	add	x10, x0, w5, uxtw
      7c:	ldrb	w4, [x4, #18]
      80:	ldrb	w14, [x10, #18]
      84:	lsl	w4, w4, w8
      88:	and	w4, w4, #0x80
      8c:	add	w8, w8, #0x1
      90:	asr	w4, w4, w9
      94:	orr	w4, w4, w14
      98:	strb	w4, [x10, #18]
      9c:	add	w9, w9, #0x1
      a0:	cmp	w8, #0x8
      a4:	b.ne	b0 <grub_font_blit_glyph+0x88>  // b.any
      a8:	add	w6, w6, #0x1
      ac:	mov	w8, #0x0                   	// #0
      b0:	cmp	w9, #0x8
      b4:	b.ne	c0 <grub_font_blit_glyph+0x98>  // b.any
      b8:	add	w5, w5, #0x1
      bc:	mov	w9, #0x0                   	// #0
      c0:	add	w11, w11, #0x1
      c4:	b	64 <grub_font_blit_glyph+0x3c>

00000000000000c8 <do_blit>:
      c8:	stp	x29, x30, [sp, #-32]!
      cc:	mov	w18, w1
      d0:	mov	x15, x3
      d4:	mov	x29, sp
      d8:	stp	x19, x20, [sp, #16]
      dc:	mov	x19, x0
      e0:	mov	w20, w2
      e4:	ldr	x0, [x3]
      e8:	cbz	x0, 10c <do_blit+0x44>
      ec:	ldrsh	w1, [x0, #14]
      f0:	ldrh	w3, [x0, #10]
      f4:	ldrsh	w2, [x0, #12]
      f8:	add	w3, w3, w1
      fc:	mov	x1, x19
     100:	add	w3, w3, w20
     104:	sub	w2, w18, w2
     108:	bl	28 <grub_font_blit_glyph>
     10c:	ldr	w0, [x15, #16]
     110:	cmp	w0, w18
     114:	b.le	12c <do_blit+0x64>
     118:	ldr	w1, [x15, #24]
     11c:	sub	w0, w0, w18
     120:	str	w18, [x15, #16]
     124:	add	w0, w1, w0
     128:	str	w0, [x15, #24]
     12c:	ldrh	w3, [x19, #10]
     130:	ldr	w4, [x15, #20]
     134:	neg	w1, w3
     138:	sub	w2, w1, w20
     13c:	cmp	w4, w2
     140:	b.le	158 <do_blit+0x90>
     144:	ldr	w0, [x15, #28]
     148:	sub	w4, w4, w2
     14c:	str	w2, [x15, #20]
     150:	add	w4, w0, w4
     154:	str	w4, [x15, #28]
     158:	ldrh	w0, [x19, #8]
     15c:	add	w1, w0, w18
     160:	ldr	w0, [x15, #16]
     164:	sub	w1, w1, w0
     168:	ldr	w0, [x15, #24]
     16c:	cmp	w1, w0
     170:	b.lt	17c <do_blit+0xb4>  // b.tstop
     174:	add	w1, w1, #0x1
     178:	str	w1, [x15, #24]
     17c:	ldr	w1, [x15, #20]
     180:	add	w0, w3, w2
     184:	sub	w0, w0, w1
     188:	ldr	w1, [x15, #28]
     18c:	cmp	w1, w0
     190:	b.ge	198 <do_blit+0xd0>  // b.tcont
     194:	str	w0, [x15, #28]
     198:	ldp	x19, x20, [sp, #16]
     19c:	ldp	x29, x30, [sp], #32
     1a0:	ret

00000000000001a4 <add_device_width>:
     1a4:	ldr	x2, [x1]
     1a8:	cbz	x2, 1b8 <add_device_width+0x14>
     1ac:	ldrh	w3, [x2, #16]
     1b0:	add	w3, w0, w3
     1b4:	strh	w3, [x2, #16]
     1b8:	ldr	x1, [x1, #8]
     1bc:	cbz	x1, 1cc <add_device_width+0x28>
     1c0:	ldr	w2, [x1]
     1c4:	add	w0, w2, w0
     1c8:	str	w0, [x1]
     1cc:	ret

00000000000001d0 <blit_comb>:
     1d0:	stp	x29, x30, [sp, #-160]!
     1d4:	mov	x29, sp
     1d8:	stp	x19, x20, [sp, #16]
     1dc:	stp	x21, x22, [sp, #32]
     1e0:	mov	x21, x4
     1e4:	mov	x22, x5
     1e8:	stp	x23, x24, [sp, #48]
     1ec:	mov	x24, x0
     1f0:	mov	x23, x1
     1f4:	stp	x25, x26, [sp, #64]
     1f8:	stp	x27, x28, [sp, #80]
     1fc:	mov	x27, x3
     200:	stp	x2, x1, [sp, #120]
     204:	str	x5, [sp, #136]
     208:	cbz	x1, 214 <blit_comb+0x44>
     20c:	ldrh	w0, [x3, #16]
     210:	strh	w0, [x1, #16]
     214:	cbz	x22, 220 <blit_comb+0x50>
     218:	ldrh	w0, [x27, #16]
     21c:	str	w0, [x22]
     220:	ldrsh	w0, [x27, #14]
     224:	ldrh	w1, [x27, #10]
     228:	ldrsh	w25, [x27, #12]
     22c:	str	w0, [sp, #112]
     230:	stp	w25, w0, [sp, #144]
     234:	add	w0, w0, w1
     238:	ldrh	w20, [x27, #8]
     23c:	str	w0, [sp, #116]
     240:	ldrh	w0, [x24, #6]
     244:	stp	w20, w1, [sp, #152]
     248:	add	w20, w20, w25
     24c:	mov	w26, w20
     250:	tst	w0, #0x7f8
     254:	ubfx	x1, x0, #3, #8
     258:	b.eq	314 <blit_comb+0x144>  // b.none
     25c:	cmp	w1, #0x2
     260:	b.ls	30c <blit_comb+0x13c>  // b.plast
     264:	ldr	x0, [x24, #24]
     268:	str	x0, [sp, #104]
     26c:	mov	x28, #0x0                   	// #0
     270:	mov	w19, #0x0                   	// #0
     274:	ldrh	w0, [x24, #6]
     278:	ubfx	x0, x0, #3, #8
     27c:	cmp	w0, w28
     280:	b.hi	31c <blit_comb+0x14c>  // b.pmore
     284:	ldrh	w1, [x27, #8]
     288:	cmp	w20, w26
     28c:	ldrsh	w0, [x27, #12]
     290:	csel	w20, w20, w26, ge  // ge = tcont
     294:	add	w0, w0, w1
     298:	add	x1, sp, #0x80
     29c:	sub	w0, w20, w0
     2a0:	bl	1a4 <add_device_width>
     2a4:	ldrsh	w0, [x27, #12]
     2a8:	add	x1, sp, #0x80
     2ac:	sub	w0, w25, w0
     2b0:	bl	1a4 <add_device_width>
     2b4:	cbz	x23, 2c8 <blit_comb+0xf8>
     2b8:	ldrh	w0, [x23, #16]
     2bc:	cmp	w0, w19
     2c0:	b.ge	2c8 <blit_comb+0xf8>  // b.tcont
     2c4:	strh	w19, [x23, #16]
     2c8:	cbz	x22, 2dc <blit_comb+0x10c>
     2cc:	ldr	w0, [x22]
     2d0:	cmp	w0, w19
     2d4:	b.ge	2dc <blit_comb+0x10c>  // b.tcont
     2d8:	str	w19, [x22]
     2dc:	ldr	x0, [sp, #120]
     2e0:	cbz	x0, 2f0 <blit_comb+0x120>
     2e4:	ldr	x2, [sp, #120]
     2e8:	ldp	x0, x1, [sp, #144]
     2ec:	stp	x0, x1, [x2]
     2f0:	ldp	x19, x20, [sp, #16]
     2f4:	ldp	x21, x22, [sp, #32]
     2f8:	ldp	x23, x24, [sp, #48]
     2fc:	ldp	x25, x26, [sp, #64]
     300:	ldp	x27, x28, [sp, #80]
     304:	ldp	x29, x30, [sp], #160
     308:	ret
     30c:	add	x0, x24, #0x18
     310:	b	268 <blit_comb+0x98>
     314:	str	xzr, [sp, #104]
     318:	b	26c <blit_comb+0x9c>
     31c:	ldr	x0, [x21, x28, lsl #3]
     320:	cbz	x0, 4f4 <blit_comb+0x324>
     324:	ldrh	w3, [x0, #8]
     328:	ldr	w1, [sp, #152]
     32c:	ldr	w2, [sp, #144]
     330:	sub	w1, w1, w3
     334:	add	w1, w2, w1, lsr #1
     338:	ldr	x2, [sp, #104]
     33c:	sxth	w1, w1
     340:	add	x5, x2, x28, lsl #2
     344:	ldr	w2, [x2, x28, lsl #2]
     348:	and	w2, w2, #0x1fffff
     34c:	cmp	w2, #0x34f
     350:	b.eq	4f4 <blit_comb+0x324>  // b.none
     354:	ldrh	w2, [x5, #2]
     358:	ubfx	x2, x2, #5, #8
     35c:	cmp	w2, #0xca
     360:	b.eq	674 <blit_comb+0x4a4>  // b.none
     364:	b.hi	3d0 <blit_comb+0x200>  // b.pmore
     368:	sub	w2, w2, #0x1
     36c:	and	w5, w2, #0xff
     370:	cmp	w5, #0x23
     374:	b.ls	3b0 <blit_comb+0x1e0>  // b.plast
     378:	ldrsh	w1, [x0, #14]
     37c:	add	x3, sp, #0x80
     380:	ldrh	w2, [x0, #10]
     384:	ldrh	w5, [x27, #16]
     388:	add	w2, w2, w1
     38c:	ldrsh	w1, [x0, #12]
     390:	neg	w2, w2
     394:	add	w1, w5, w1
     398:	bl	c8 <do_blit>
     39c:	ldr	x0, [x21, x28, lsl #3]
     3a0:	add	x1, sp, #0x80
     3a4:	ldrh	w0, [x0, #16]
     3a8:	bl	1a4 <add_device_width>
     3ac:	b	4f4 <blit_comb+0x324>
     3b0:	cmp	w2, #0x23
     3b4:	b.hi	378 <blit_comb+0x1a8>  // b.pmore
     3b8:	adrp	x5, 0 <grub_stpcpy>
     3bc:	ldr	x5, [x5]
     3c0:	ldrh	w2, [x5, w2, uxtw #1]
     3c4:	adr	x4, 3d0 <blit_comb+0x200>
     3c8:	add	x2, x4, w2, sxth #2
     3cc:	br	x2
     3d0:	cmp	w2, #0xe8
     3d4:	b.hi	404 <blit_comb+0x234>  // b.pmore
     3d8:	cmp	w2, #0xd5
     3dc:	b.ls	378 <blit_comb+0x1a8>  // b.plast
     3e0:	sub	w2, w2, #0xd6
     3e4:	cmp	w2, #0x12
     3e8:	b.hi	378 <blit_comb+0x1a8>  // b.pmore
     3ec:	adrp	x5, 0 <grub_stpcpy>
     3f0:	ldr	x5, [x5]
     3f4:	ldrh	w2, [x5, w2, uxtw #1]
     3f8:	adr	x4, 404 <blit_comb+0x234>
     3fc:	add	x2, x4, w2, sxth #2
     400:	br	x2
     404:	cmp	w2, #0xf0
     408:	b.eq	628 <blit_comb+0x458>  // b.none
     40c:	cmp	w2, #0xff
     410:	b.ne	378 <blit_comb+0x1a8>  // b.any
     414:	ldr	w2, [x5]
     418:	ubfx	x2, x2, #0, #21
     41c:	cmp	w2, #0x7a9
     420:	b.hi	67c <blit_comb+0x4ac>  // b.pmore
     424:	cmp	w2, #0x7a7
     428:	b.hi	628 <blit_comb+0x458>  // b.pmore
     42c:	add	w2, w2, #0x1ff, lsl #12
     430:	add	w2, w2, #0x85a
     434:	and	w2, w2, #0x1fffff
     438:	cmp	w2, #0x1
     43c:	b.hi	378 <blit_comb+0x1a8>  // b.pmore
     440:	ldr	x2, [x0]
     444:	mov	w4, #0x2                   	// #2
     448:	ldrh	w3, [x0, #14]
     44c:	ldrsh	w2, [x2, #32]
     450:	sub	w3, w3, #0x1
     454:	sdiv	w2, w2, w4
     458:	sub	w3, w3, w2
     45c:	sxth	w3, w3
     460:	cmp	w3, #0x0
     464:	b.gt	484 <blit_comb+0x2b4>
     468:	ldr	x2, [x27]
     46c:	ldrsh	w3, [x2, #32]
     470:	mov	w2, #0x8                   	// #8
     474:	sdiv	w3, w3, w4
     478:	sdiv	w3, w3, w2
     47c:	add	w3, w3, #0x1
     480:	sxth	w3, w3
     484:	ldr	w5, [sp, #148]
     488:	ldr	w2, [sp, #156]
     48c:	add	w2, w2, w5
     490:	ldrh	w5, [x0, #10]
     494:	add	w3, w5, w3
     498:	b	5e8 <blit_comb+0x418>
     49c:	ldr	w2, [sp, #156]
     4a0:	ldrh	w5, [x0, #10]
     4a4:	ldr	w3, [sp, #148]
     4a8:	sub	w5, w2, w5
     4ac:	add	w2, w2, w3
     4b0:	add	x3, sp, #0x80
     4b4:	lsr	w5, w5, #1
     4b8:	sub	w2, w5, w2
     4bc:	bl	c8 <do_blit>
     4c0:	ldr	x0, [x21, x28, lsl #3]
     4c4:	ldrh	w0, [x0, #8]
     4c8:	cmp	w19, w0
     4cc:	csel	w19, w19, w0, ge  // ge = tcont
     4d0:	b	4f4 <blit_comb+0x324>
     4d4:	ldr	w1, [sp, #116]
     4d8:	add	x3, sp, #0x80
     4dc:	neg	w2, w1
     4e0:	mov	w1, w20
     4e4:	bl	c8 <do_blit>
     4e8:	ldr	x0, [x21, x28, lsl #3]
     4ec:	ldrh	w0, [x0, #8]
     4f0:	add	w20, w20, w0
     4f4:	add	x28, x28, #0x1
     4f8:	b	274 <blit_comb+0xa4>
     4fc:	ldrh	w2, [x0, #10]
     500:	add	x3, sp, #0x80
     504:	ldr	w1, [sp, #116]
     508:	add	w2, w2, w1
     50c:	neg	w2, w2
     510:	b	4e0 <blit_comb+0x310>
     514:	ldr	w1, [sp, #116]
     518:	sub	w25, w25, w3
     51c:	ldrh	w2, [x0, #10]
     520:	add	x3, sp, #0x80
     524:	add	w2, w2, w1
     528:	mov	w1, w25
     52c:	neg	w2, w2
     530:	bl	c8 <do_blit>
     534:	b	4f4 <blit_comb+0x324>
     538:	ldr	w2, [sp, #112]
     53c:	mov	w1, w26
     540:	add	x3, sp, #0x80
     544:	bl	c8 <do_blit>
     548:	ldr	x0, [x21, x28, lsl #3]
     54c:	ldrh	w0, [x0, #8]
     550:	add	w26, w26, w0
     554:	b	4f4 <blit_comb+0x324>
     558:	ldr	w2, [x24]
     55c:	and	w2, w2, #0x7fffff
     560:	cmp	w2, #0x5d5
     564:	b.eq	590 <blit_comb+0x3c0>  // b.none
     568:	ldrh	w1, [x27, #12]
     56c:	mov	w2, #0x4                   	// #4
     570:	sub	w1, w1, w3
     574:	add	w3, w3, #0x3
     578:	sdiv	w3, w3, w2
     57c:	sub	w1, w1, w3
     580:	b	58c <blit_comb+0x3bc>
     584:	ldrh	w1, [x27, #12]
     588:	add	w1, w1, w3, lsr #2
     58c:	sxth	w1, w1
     590:	ldr	x3, [x0]
     594:	mov	w4, #0x2                   	// #2
     598:	ldrh	w2, [x0, #14]
     59c:	ldrsh	w3, [x3, #32]
     5a0:	sub	w2, w2, #0x1
     5a4:	sdiv	w3, w3, w4
     5a8:	sub	w2, w2, w3
     5ac:	sxth	w2, w2
     5b0:	cmp	w2, #0x0
     5b4:	b.gt	5d4 <blit_comb+0x404>
     5b8:	ldr	x2, [x27]
     5bc:	mov	w3, #0x8                   	// #8
     5c0:	ldrsh	w2, [x2, #32]
     5c4:	sdiv	w2, w2, w4
     5c8:	sdiv	w2, w2, w3
     5cc:	add	w2, w2, #0x1
     5d0:	sxth	w2, w2
     5d4:	ldrh	w3, [x27, #10]
     5d8:	ldrsh	w5, [x27, #14]
     5dc:	add	w3, w3, w5
     5e0:	add	w2, w3, w2
     5e4:	ldrh	w3, [x0, #10]
     5e8:	add	w2, w2, w3
     5ec:	add	x3, sp, #0x80
     5f0:	neg	w2, w2
     5f4:	b	4bc <blit_comb+0x2ec>
     5f8:	ldrh	w1, [x27, #8]
     5fc:	ldrh	w2, [x27, #12]
     600:	add	w1, w1, w2
     604:	b	57c <blit_comb+0x3ac>
     608:	mov	w3, #0x0                   	// #0
     60c:	b	484 <blit_comb+0x2b4>
     610:	ldr	w2, [sp, #156]
     614:	ldr	w3, [sp, #148]
     618:	add	w3, w3, w2, lsr #1
     61c:	ldrh	w2, [x0, #10]
     620:	add	w2, w3, w2, lsr #1
     624:	b	5ec <blit_comb+0x41c>
     628:	ldrh	w2, [x0, #14]
     62c:	ldrh	w3, [x0, #10]
     630:	add	w2, w2, w3
     634:	neg	w2, w2
     638:	sxth	w2, w2
     63c:	cmp	w2, #0x0
     640:	b.gt	664 <blit_comb+0x494>
     644:	ldr	x2, [x27]
     648:	mov	w3, #0x2                   	// #2
     64c:	ldrsh	w2, [x2, #32]
     650:	sdiv	w2, w2, w3
     654:	mov	w3, #0x8                   	// #8
     658:	sdiv	w2, w2, w3
     65c:	add	w2, w2, #0x1
     660:	sxth	w2, w2
     664:	ldr	w5, [sp, #148]
     668:	add	x3, sp, #0x80
     66c:	sub	w2, w2, w5
     670:	b	4bc <blit_comb+0x2ec>
     674:	mov	w2, #0x0                   	// #0
     678:	b	664 <blit_comb+0x494>
     67c:	add	w2, w2, #0x1ff, lsl #12
     680:	add	w2, w2, #0x856
     684:	and	w2, w2, #0x1fffff
     688:	cmp	w2, #0x6
     68c:	b	43c <blit_comb+0x26c>
	...

00000000000006a0 <remove_font>:
     6a0:	mov	x2, x0
     6a4:	adrp	x0, 0 <grub_stpcpy>
     6a8:	ldr	x1, [x0]
     6ac:	ldr	x0, [x1]
     6b0:	cbnz	x0, 6b8 <remove_font+0x18>
     6b4:	ret
     6b8:	ldp	x3, x4, [x0]
     6bc:	cmp	x4, x2
     6c0:	b.ne	6cc <remove_font+0x2c>  // b.any
     6c4:	str	x3, [x1]
     6c8:	b	0 <grub_free>
     6cc:	mov	x1, x0
     6d0:	mov	x0, x3
     6d4:	b	6b0 <remove_font+0x10>
	...

00000000000006e0 <read_section_as_string>:
     6e0:	stp	x29, x30, [sp, #-32]!
     6e4:	mov	x29, sp
     6e8:	stp	x19, x20, [sp, #16]
     6ec:	mov	x20, x0
     6f0:	ldr	w0, [x0, #12]
     6f4:	add	w0, w0, #0x1
     6f8:	bl	0 <grub_malloc>
     6fc:	mov	x19, x0
     700:	cbz	x0, 730 <read_section_as_string+0x50>
     704:	mov	x1, x0
     708:	ldr	w2, [x20, #12]
     70c:	ldr	x0, [x20]
     710:	bl	0 <grub_file_read>
     714:	tbnz	x0, #63, 724 <read_section_as_string+0x44>
     718:	ldr	w1, [x20, #12]
     71c:	cmp	x1, x0
     720:	b.eq	740 <read_section_as_string+0x60>  // b.none
     724:	mov	x0, x19
     728:	mov	x19, #0x0                   	// #0
     72c:	bl	0 <grub_free>
     730:	mov	x0, x19
     734:	ldp	x19, x20, [sp, #16]
     738:	ldp	x29, x30, [sp], #32
     73c:	ret
     740:	strb	wzr, [x19, x1]
     744:	b	730 <read_section_as_string+0x50>

0000000000000748 <ensure_comb_space>:
     748:	stp	x29, x30, [sp, #-32]!
     74c:	adrp	x2, 0 <grub_stpcpy>
     750:	mov	x29, sp
     754:	ldrh	w1, [x0, #6]
     758:	str	x19, [sp, #16]
     75c:	ldr	x19, [x2]
     760:	ubfx	x0, x1, #3, #8
     764:	ldr	x2, [x19]
     768:	cmp	x0, x2
     76c:	b.ls	7b0 <ensure_comb_space+0x68>  // b.plast
     770:	lsl	w1, w0, #1
     774:	ubfiz	x0, x0, #1, #8
     778:	cmp	w1, #0x7
     77c:	mov	x1, #0x8                   	// #8
     780:	csel	x0, x0, x1, gt
     784:	str	x0, [x19]
     788:	ldr	x0, [x19, #8]
     78c:	bl	0 <grub_free>
     790:	ldr	x0, [x19]
     794:	lsl	x0, x0, #3
     798:	bl	0 <grub_malloc>
     79c:	str	x0, [x19, #8]
     7a0:	cbnz	x0, 7b0 <ensure_comb_space+0x68>
     7a4:	adrp	x0, 0 <grub_stpcpy>
     7a8:	ldr	x0, [x0]
     7ac:	str	wzr, [x0]
     7b0:	ldr	x19, [sp, #16]
     7b4:	ldp	x29, x30, [sp], #32
     7b8:	ret
     7bc:	nop
	...

00000000000007d0 <read_section_as_short>:
     7d0:	stp	x29, x30, [sp, #-48]!
     7d4:	mov	x29, sp
     7d8:	ldr	w6, [x0, #12]
     7dc:	str	x19, [sp, #16]
     7e0:	cmp	w6, #0x2
     7e4:	b.eq	810 <read_section_as_short+0x40>  // b.none
     7e8:	ldrb	w5, [x0, #11]
     7ec:	ldrb	w4, [x0, #10]
     7f0:	ldrb	w3, [x0, #9]
     7f4:	ldrb	w2, [x0, #8]
     7f8:	adrp	x0, 0 <grub_stpcpy>
     7fc:	ldr	x1, [x0]
     800:	mov	w0, #0x17                  	// #23
     804:	bl	0 <grub_error>
     808:	mov	w0, #0x1                   	// #1
     80c:	b	840 <read_section_as_short+0x70>
     810:	ldr	x0, [x0]
     814:	mov	x19, x1
     818:	mov	x2, #0x2                   	// #2
     81c:	add	x1, sp, #0x2e
     820:	bl	0 <grub_file_read>
     824:	cmp	x0, #0x2
     828:	b.ne	808 <read_section_as_short+0x38>  // b.any
     82c:	ldrh	w0, [sp, #46]
     830:	ldrb	w1, [sp, #47]
     834:	orr	w0, w1, w0, lsl #8
     838:	strh	w0, [x19]
     83c:	mov	w0, #0x0                   	// #0
     840:	ldr	x19, [sp, #16]
     844:	ldp	x29, x30, [sp], #48
     848:	ret
     84c:	nop
	...

0000000000000858 <read_be_uint16>:
     858:	stp	x29, x30, [sp, #-32]!
     85c:	mov	x2, #0x2                   	// #2
     860:	mov	x29, sp
     864:	str	x19, [sp, #16]
     868:	mov	x19, x1
     86c:	bl	0 <grub_file_read>
     870:	cmp	x0, #0x2
     874:	b.ne	898 <read_be_uint16+0x40>  // b.any
     878:	ldrh	w0, [x19]
     87c:	ldrb	w1, [x19, #1]
     880:	orr	w0, w1, w0, lsl #8
     884:	strh	w0, [x19]
     888:	mov	w0, #0x0                   	// #0
     88c:	ldr	x19, [sp, #16]
     890:	ldp	x29, x30, [sp], #32
     894:	ret
     898:	mov	w0, #0x1                   	// #1
     89c:	b	88c <read_be_uint16+0x34>

00000000000008a0 <grub_font_get_glyph_internal>:
     8a0:	stp	x29, x30, [sp, #-80]!
     8a4:	mov	w2, #0xffff                	// #65535
     8a8:	cmp	w1, w2
     8ac:	mov	x29, sp
     8b0:	stp	x19, x20, [sp, #16]
     8b4:	mov	x19, x0
     8b8:	stp	x21, x22, [sp, #32]
     8bc:	stp	x23, x24, [sp, #48]
     8c0:	ldr	x20, [x0, #48]
     8c4:	b.hi	900 <grub_font_get_glyph_internal+0x60>  // b.pmore
     8c8:	ldr	x0, [x0, #56]
     8cc:	cbz	x0, 900 <grub_font_get_glyph_internal+0x60>
     8d0:	ldrh	w0, [x0, w1, uxtw #1]
     8d4:	cmp	w0, w2
     8d8:	b.eq	93c <grub_font_get_glyph_internal+0x9c>  // b.none
     8dc:	mov	w1, #0x18                  	// #24
     8e0:	umaddl	x20, w0, w1, x20
     8e4:	cbnz	x20, 954 <grub_font_get_glyph_internal+0xb4>
     8e8:	mov	x0, x20
     8ec:	ldp	x19, x20, [sp, #16]
     8f0:	ldp	x21, x22, [sp, #32]
     8f4:	ldp	x23, x24, [sp, #48]
     8f8:	ldp	x29, x30, [sp], #80
     8fc:	ret
     900:	ldr	w0, [x19, #40]
     904:	sub	w0, w0, #0x1
     908:	cbz	x20, 8e8 <grub_font_get_glyph_internal+0x48>
     90c:	mov	x3, #0x0                   	// #0
     910:	mov	x6, #0x18                  	// #24
     914:	sub	x2, x0, x3
     918:	add	x2, x3, x2, lsr #1
     91c:	mul	x4, x2, x6
     920:	add	x5, x20, x4
     924:	ldr	w4, [x20, x4]
     928:	cmp	w1, w4
     92c:	b.cs	944 <grub_font_get_glyph_internal+0xa4>  // b.hs, b.nlast
     930:	sub	x0, x2, #0x1
     934:	cmp	x0, x3
     938:	b.cs	914 <grub_font_get_glyph_internal+0x74>  // b.hs, b.nlast
     93c:	mov	x20, #0x0                   	// #0
     940:	b	8e8 <grub_font_get_glyph_internal+0x48>
     944:	b.ls	950 <grub_font_get_glyph_internal+0xb0>  // b.plast
     948:	add	x3, x2, #0x1
     94c:	b	934 <grub_font_get_glyph_internal+0x94>
     950:	mov	x20, x5
     954:	ldr	x23, [x20, #16]
     958:	cbnz	x23, 9cc <grub_font_get_glyph_internal+0x12c>
     95c:	ldr	x0, [x19, #8]
     960:	cbz	x0, 9cc <grub_font_get_glyph_internal+0x12c>
     964:	bl	0 <grub_error_push>
     968:	ldr	w1, [x20, #8]
     96c:	ldr	x0, [x19, #8]
     970:	bl	0 <grub_file_seek>
     974:	ldr	x0, [x19, #8]
     978:	add	x1, sp, #0x46
     97c:	bl	858 <read_be_uint16>
     980:	cbnz	w0, 9c4 <grub_font_get_glyph_internal+0x124>
     984:	ldr	x0, [x19, #8]
     988:	add	x1, sp, #0x48
     98c:	bl	858 <read_be_uint16>
     990:	cbnz	w0, 9c4 <grub_font_get_glyph_internal+0x124>
     994:	ldr	x0, [x19, #8]
     998:	add	x1, sp, #0x4a
     99c:	bl	858 <read_be_uint16>
     9a0:	cbnz	w0, 9c4 <grub_font_get_glyph_internal+0x124>
     9a4:	ldr	x0, [x19, #8]
     9a8:	add	x1, sp, #0x4c
     9ac:	bl	858 <read_be_uint16>
     9b0:	cbnz	w0, 9c4 <grub_font_get_glyph_internal+0x124>
     9b4:	ldr	x0, [x19, #8]
     9b8:	add	x1, sp, #0x4e
     9bc:	bl	858 <read_be_uint16>
     9c0:	cbz	w0, 9d4 <grub_font_get_glyph_internal+0x134>
     9c4:	mov	x0, x19
     9c8:	bl	6a0 <remove_font>
     9cc:	mov	x20, x23
     9d0:	b	8e8 <grub_font_get_glyph_internal+0x48>
     9d4:	ldrh	w0, [sp, #72]
     9d8:	ldrh	w22, [sp, #70]
     9dc:	mul	w22, w22, w0
     9e0:	add	w22, w22, #0x7
     9e4:	asr	w22, w22, #3
     9e8:	sxtw	x24, w22
     9ec:	add	x0, x24, #0x18
     9f0:	bl	0 <grub_malloc>
     9f4:	mov	x21, x0
     9f8:	cbz	x0, 9c4 <grub_font_get_glyph_internal+0x124>
     9fc:	ldrh	w0, [sp, #70]
     a00:	strh	w0, [x21, #8]
     a04:	ldrh	w0, [sp, #72]
     a08:	strh	w0, [x21, #10]
     a0c:	ldrh	w0, [sp, #74]
     a10:	strh	w0, [x21, #12]
     a14:	ldrh	w0, [sp, #76]
     a18:	strh	w0, [x21, #14]
     a1c:	ldrh	w0, [sp, #78]
     a20:	str	x19, [x21]
     a24:	strh	w0, [x21, #16]
     a28:	cbz	w22, a58 <grub_font_get_glyph_internal+0x1b8>
     a2c:	ldr	x0, [x19, #8]
     a30:	mov	x2, x24
     a34:	add	x1, x21, #0x12
     a38:	bl	0 <grub_file_read>
     a3c:	cmp	x0, x24
     a40:	b.eq	a58 <grub_font_get_glyph_internal+0x1b8>  // b.none
     a44:	mov	x0, x19
     a48:	bl	6a0 <remove_font>
     a4c:	mov	x0, x21
     a50:	bl	0 <grub_free>
     a54:	b	9cc <grub_font_get_glyph_internal+0x12c>
     a58:	bl	0 <grub_error_pop>
     a5c:	mov	x23, x21
     a60:	str	x21, [x20, #16]
     a64:	b	9cc <grub_font_get_glyph_internal+0x12c>

0000000000000a68 <open_section>:
     a68:	stp	x29, x30, [sp, #-48]!
     a6c:	mov	x2, #0x4                   	// #4
     a70:	mov	x29, sp
     a74:	stp	x19, x20, [sp, #16]
     a78:	mov	x20, x0
     a7c:	mov	x19, x1
     a80:	str	x0, [x1]
     a84:	add	x1, x1, #0x8
     a88:	str	wzr, [x1, #8]
     a8c:	bl	0 <grub_file_read>
     a90:	cmp	x0, #0x3
     a94:	b.hi	aac <open_section+0x44>  // b.pmore
     a98:	mov	w0, #0x1                   	// #1
     a9c:	str	w0, [x19, #16]
     aa0:	ldp	x19, x20, [sp, #16]
     aa4:	ldp	x29, x30, [sp], #48
     aa8:	ret
     aac:	tbnz	x0, #63, ae0 <open_section+0x78>
     ab0:	add	x1, sp, #0x2c
     ab4:	mov	x0, x20
     ab8:	mov	x2, #0x4                   	// #4
     abc:	bl	0 <grub_file_read>
     ac0:	cmp	x0, #0x3
     ac4:	b.ls	a98 <open_section+0x30>  // b.plast
     ac8:	tbnz	x0, #63, ae0 <open_section+0x78>
     acc:	ldr	w0, [sp, #44]
     ad0:	rev	w0, w0
     ad4:	str	w0, [x19, #12]
     ad8:	mov	w0, #0x0                   	// #0
     adc:	b	aa0 <open_section+0x38>
     ae0:	mov	w0, #0x1                   	// #1
     ae4:	b	aa0 <open_section+0x38>

0000000000000ae8 <grub_font_loader_init>:
     ae8:	stp	x29, x30, [sp, #-32]!
     aec:	adrp	x0, 0 <grub_stpcpy>
     af0:	mov	x29, sp
     af4:	str	x19, [sp, #16]
     af8:	ldr	x19, [x0]
     afc:	ldrb	w0, [x19, #16]
     b00:	cbnz	w0, b8c <grub_font_loader_init+0xa4>
     b04:	mov	x0, #0x28                  	// #40
     b08:	bl	0 <grub_malloc>
     b0c:	str	x0, [x19, #24]
     b10:	cbz	x0, b8c <grub_font_loader_init+0xa4>
     b14:	mov	x1, #0x8                   	// #8
     b18:	mov	x2, #0x10                  	// #16
     b1c:	movk	x1, #0x10, lsl #16
     b20:	add	x0, x0, #0x12
     b24:	movk	x1, #0xfffd, lsl #48
     b28:	stur	x1, [x0, #-10]
     b2c:	mov	w1, #0x8                   	// #8
     b30:	sturh	w1, [x0, #-2]
     b34:	adrp	x1, 0 <grub_stpcpy>
     b38:	ldr	x1, [x1]
     b3c:	bl	0 <grub_memmove>
     b40:	str	wzr, [x19, #56]
     b44:	ldr	x2, [x19, #24]
     b48:	adrp	x1, 0 <grub_stpcpy>
     b4c:	mov	w0, #0x1                   	// #1
     b50:	strb	w0, [x19, #16]
     b54:	ldr	x1, [x1]
     b58:	stp	x1, xzr, [x19, #32]
     b5c:	ldrh	w1, [x2, #10]
     b60:	str	xzr, [x19, #48]
     b64:	sub	w3, w1, #0x3
     b68:	strh	w3, [x19, #64]
     b6c:	mov	w3, #0x3                   	// #3
     b70:	str	wzr, [x19, #72]
     b74:	movk	w3, #0x1, lsl #16
     b78:	stur	w3, [x19, #66]
     b7c:	stp	xzr, xzr, [x19, #80]
     b80:	ldrh	w2, [x2, #8]
     b84:	strh	w2, [x19, #60]
     b88:	strh	w1, [x19, #62]
     b8c:	ldr	x19, [sp, #16]
     b90:	ldp	x29, x30, [sp], #32
     b94:	ret
	...

0000000000000bb0 <grub_font_load>:
     bb0:	stp	x29, x30, [sp, #-160]!
     bb4:	mov	x29, sp
     bb8:	stp	x19, x20, [sp, #16]
     bbc:	mov	x20, x0
     bc0:	stp	x21, x22, [sp, #32]
     bc4:	stp	x23, x24, [sp, #48]
     bc8:	stp	x25, x26, [sp, #64]
     bcc:	stp	x27, x28, [sp, #80]
     bd0:	ldrb	w0, [x0]
     bd4:	cmp	w0, #0x28
     bd8:	b.eq	be8 <grub_font_load+0x38>  // b.none
     bdc:	and	w0, w0, #0xfffffffb
     be0:	cmp	w0, #0x2b
     be4:	b.ne	c44 <grub_font_load+0x94>  // b.any
     be8:	mov	x0, x20
     bec:	mov	x2, #0x400                 	// #1024
     bf0:	mov	w1, #0x24                  	// #36
     bf4:	bl	0 <grub_buffile_open>
     bf8:	mov	x20, x0
     bfc:	cbz	x20, cb0 <grub_font_load+0x100>
     c00:	add	x1, sp, #0x88
     c04:	mov	x0, x20
     c08:	bl	a68 <open_section>
     c0c:	cbnz	w0, c3c <grub_font_load+0x8c>
     c10:	adrp	x0, 0 <grub_stpcpy>
     c14:	add	x21, sp, #0x90
     c18:	mov	x2, #0x4                   	// #4
     c1c:	ldr	x1, [x0]
     c20:	mov	x0, x21
     c24:	bl	0 <grub_memcmp>
     c28:	cbz	w0, d04 <grub_font_load+0x154>
     c2c:	adrp	x0, 0 <grub_stpcpy>
     c30:	ldr	x1, [x0]
     c34:	mov	w0, #0x17                  	// #23
     c38:	bl	0 <grub_error>
     c3c:	mov	x19, #0x0                   	// #0
     c40:	b	dc8 <grub_font_load+0x218>
     c44:	adrp	x21, 0 <grub_stpcpy>
     c48:	ldr	x0, [x21]
     c4c:	bl	0 <grub_env_get>
     c50:	mov	x19, x0
     c54:	cbnz	x0, c8c <grub_font_load+0xdc>
     c58:	adrp	x0, 0 <grub_stpcpy>
     c5c:	ldr	x2, [x21]
     c60:	ldr	x1, [x0]
     c64:	mov	w0, #0x5                   	// #5
     c68:	bl	0 <grub_error>
     c6c:	mov	x0, x19
     c70:	ldp	x19, x20, [sp, #16]
     c74:	ldp	x21, x22, [sp, #32]
     c78:	ldp	x23, x24, [sp, #48]
     c7c:	ldp	x25, x26, [sp, #64]
     c80:	ldp	x27, x28, [sp, #80]
     c84:	ldp	x29, x30, [sp], #160
     c88:	ret
     c8c:	bl	0 <grub_strlen>
     c90:	mov	x21, x0
     c94:	mov	x0, x20
     c98:	bl	0 <grub_strlen>
     c9c:	add	x0, x21, x0
     ca0:	add	x0, x0, #0xe
     ca4:	bl	0 <grub_malloc>
     ca8:	mov	x21, x0
     cac:	cbnz	x0, cb8 <grub_font_load+0x108>
     cb0:	mov	x19, #0x0                   	// #0
     cb4:	b	c6c <grub_font_load+0xbc>
     cb8:	mov	x1, x19
     cbc:	bl	0 <grub_stpcpy>
     cc0:	adrp	x1, 0 <grub_stpcpy>
     cc4:	ldr	x1, [x1]
     cc8:	bl	0 <grub_stpcpy>
     ccc:	mov	x1, x20
     cd0:	bl	0 <grub_stpcpy>
     cd4:	adrp	x1, 0 <grub_stpcpy>
     cd8:	ldr	x1, [x1]
     cdc:	bl	0 <grub_stpcpy>
     ce0:	strb	wzr, [x0]
     ce4:	mov	x2, #0x400                 	// #1024
     ce8:	mov	w1, #0x24                  	// #36
     cec:	mov	x0, x21
     cf0:	bl	0 <grub_buffile_open>
     cf4:	mov	x20, x0
     cf8:	mov	x0, x21
     cfc:	bl	0 <grub_free>
     d00:	b	bfc <grub_font_load+0x4c>
     d04:	ldr	w2, [sp, #148]
     d08:	cmp	w2, #0x4
     d0c:	b.eq	d24 <grub_font_load+0x174>  // b.none
     d10:	adrp	x0, 0 <grub_stpcpy>
     d14:	ldr	x1, [x0]
     d18:	mov	w0, #0x17                  	// #23
     d1c:	bl	0 <grub_error>
     d20:	b	c3c <grub_font_load+0x8c>
     d24:	mov	x2, #0x4                   	// #4
     d28:	add	x1, sp, #0x80
     d2c:	mov	x0, x20
     d30:	bl	0 <grub_file_read>
     d34:	mov	x2, x0
     d38:	cmp	x0, #0x4
     d3c:	b.ne	c3c <grub_font_load+0x8c>  // b.any
     d40:	adrp	x0, 0 <grub_stpcpy>
     d44:	ldr	x1, [x0]
     d48:	add	x0, sp, #0x80
     d4c:	bl	0 <grub_memcmp>
     d50:	cbz	w0, d78 <grub_font_load+0x1c8>
     d54:	adrp	x0, 0 <grub_stpcpy>
     d58:	ldrb	w5, [sp, #131]
     d5c:	ldrb	w4, [sp, #130]
     d60:	ldr	x1, [x0]
     d64:	mov	w0, #0x17                  	// #23
     d68:	ldrb	w3, [sp, #129]
     d6c:	ldrb	w2, [sp, #128]
     d70:	bl	0 <grub_error>
     d74:	b	c3c <grub_font_load+0x8c>
     d78:	mov	x0, #0x40                  	// #64
     d7c:	bl	0 <grub_zalloc>
     d80:	mov	x19, x0
     d84:	cbz	x0, c3c <grub_font_load+0x8c>
     d88:	mov	w24, #0x9                   	// #9
     d8c:	mov	w26, w24
     d90:	mov	w0, #0x1                   	// #1
     d94:	mov	w25, #0x18                  	// #24
     d98:	stp	xzr, x20, [x19]
     d9c:	stp	xzr, xzr, [x19, #16]
     da0:	str	wzr, [x19, #32]
     da4:	strh	w0, [x19, #36]
     da8:	str	wzr, [x19, #40]
     dac:	stp	xzr, xzr, [x19, #48]
     db0:	add	x1, sp, #0x88
     db4:	mov	x0, x20
     db8:	bl	a68 <open_section>
     dbc:	cbz	w0, e04 <grub_font_load+0x254>
     dc0:	ldr	w0, [sp, #152]
     dc4:	cbnz	w0, 10c0 <grub_font_load+0x510>
     dc8:	mov	x0, x20
     dcc:	bl	0 <grub_file_close>
     dd0:	cbz	x19, cb0 <grub_font_load+0x100>
     dd4:	ldr	x0, [x19]
     dd8:	str	xzr, [x19, #8]
     ddc:	bl	0 <grub_free>
     de0:	ldr	x0, [x19, #16]
     de4:	bl	0 <grub_free>
     de8:	ldr	x0, [x19, #48]
     dec:	bl	0 <grub_free>
     df0:	ldr	x0, [x19, #56]
     df4:	bl	0 <grub_free>
     df8:	mov	x0, x19
     dfc:	bl	0 <grub_free>
     e00:	b	cb0 <grub_font_load+0x100>
     e04:	adrp	x0, 0 <grub_stpcpy>
     e08:	mov	x2, #0x4                   	// #4
     e0c:	ldr	x1, [x0]
     e10:	mov	x0, x21
     e14:	bl	0 <grub_memcmp>
     e18:	cbnz	w0, e30 <grub_font_load+0x280>
     e1c:	add	x0, sp, #0x88
     e20:	bl	6e0 <read_section_as_string>
     e24:	str	x0, [x19]
     e28:	cbnz	x0, db0 <grub_font_load+0x200>
     e2c:	b	dc8 <grub_font_load+0x218>
     e30:	adrp	x0, 0 <grub_stpcpy>
     e34:	mov	x2, #0x4                   	// #4
     e38:	ldr	x1, [x0]
     e3c:	mov	x0, x21
     e40:	bl	0 <grub_memcmp>
     e44:	cbnz	w0, e5c <grub_font_load+0x2ac>
     e48:	add	x1, x19, #0x18
     e4c:	add	x0, sp, #0x88
     e50:	bl	7d0 <read_section_as_short>
     e54:	cbz	w0, db0 <grub_font_load+0x200>
     e58:	b	dc8 <grub_font_load+0x218>
     e5c:	adrp	x0, 0 <grub_stpcpy>
     e60:	mov	x2, #0x4                   	// #4
     e64:	ldr	x1, [x0]
     e68:	mov	x0, x21
     e6c:	bl	0 <grub_memcmp>
     e70:	cbnz	w0, ec4 <grub_font_load+0x314>
     e74:	add	x0, sp, #0x88
     e78:	bl	6e0 <read_section_as_string>
     e7c:	mov	x22, x0
     e80:	cbz	x0, db0 <grub_font_load+0x200>
     e84:	adrp	x1, 0 <grub_stpcpy>
     e88:	ldr	x1, [x1]
     e8c:	bl	0 <grub_strcmp>
     e90:	cbnz	w0, ea8 <grub_font_load+0x2f8>
     e94:	mov	w0, #0x64                  	// #100
     e98:	strh	w0, [x19, #26]
     e9c:	mov	x0, x22
     ea0:	bl	0 <grub_free>
     ea4:	b	db0 <grub_font_load+0x200>
     ea8:	adrp	x0, 0 <grub_stpcpy>
     eac:	ldr	x1, [x0]
     eb0:	mov	x0, x22
     eb4:	bl	0 <grub_strcmp>
     eb8:	cbnz	w0, e9c <grub_font_load+0x2ec>
     ebc:	mov	w0, #0xc8                  	// #200
     ec0:	b	e98 <grub_font_load+0x2e8>
     ec4:	adrp	x0, 0 <grub_stpcpy>
     ec8:	mov	x2, #0x4                   	// #4
     ecc:	ldr	x1, [x0]
     ed0:	mov	x0, x21
     ed4:	bl	0 <grub_memcmp>
     ed8:	cbnz	w0, ee4 <grub_font_load+0x334>
     edc:	add	x1, x19, #0x1c
     ee0:	b	e4c <grub_font_load+0x29c>
     ee4:	adrp	x0, 0 <grub_stpcpy>
     ee8:	mov	x2, #0x4                   	// #4
     eec:	ldr	x1, [x0]
     ef0:	mov	x0, x21
     ef4:	bl	0 <grub_memcmp>
     ef8:	cbnz	w0, f04 <grub_font_load+0x354>
     efc:	add	x1, x19, #0x1e
     f00:	b	e4c <grub_font_load+0x29c>
     f04:	adrp	x0, 0 <grub_stpcpy>
     f08:	mov	x2, #0x4                   	// #4
     f0c:	ldr	x1, [x0]
     f10:	mov	x0, x21
     f14:	bl	0 <grub_memcmp>
     f18:	cbnz	w0, f24 <grub_font_load+0x374>
     f1c:	add	x1, x19, #0x20
     f20:	b	e4c <grub_font_load+0x29c>
     f24:	adrp	x0, 0 <grub_stpcpy>
     f28:	mov	x2, #0x4                   	// #4
     f2c:	ldr	x1, [x0]
     f30:	mov	x0, x21
     f34:	bl	0 <grub_memcmp>
     f38:	cbnz	w0, f44 <grub_font_load+0x394>
     f3c:	add	x1, x19, #0x22
     f40:	b	e4c <grub_font_load+0x29c>
     f44:	adrp	x0, 0 <grub_stpcpy>
     f48:	mov	x2, #0x4                   	// #4
     f4c:	ldr	x1, [x0]
     f50:	mov	x0, x21
     f54:	bl	0 <grub_memcmp>
     f58:	cbnz	w0, 1088 <grub_font_load+0x4d8>
     f5c:	ldr	w2, [sp, #148]
     f60:	udiv	w22, w2, w24
     f64:	add	w22, w22, w22, lsl #3
     f68:	subs	w22, w2, w22
     f6c:	b.eq	f88 <grub_font_load+0x3d8>  // b.none
     f70:	adrp	x0, 0 <grub_stpcpy>
     f74:	mov	w3, #0x9                   	// #9
     f78:	ldr	x1, [x0]
     f7c:	mov	w0, #0x17                  	// #23
     f80:	bl	0 <grub_error>
     f84:	b	dc8 <grub_font_load+0x218>
     f88:	udiv	w0, w2, w26
     f8c:	str	w0, [x19, #40]
     f90:	umull	x0, w0, w25
     f94:	bl	0 <grub_malloc>
     f98:	str	x0, [x19, #48]
     f9c:	cbz	x0, dc8 <grub_font_load+0x218>
     fa0:	mov	x0, #0x20000               	// #131072
     fa4:	bl	0 <grub_malloc>
     fa8:	str	x0, [x19, #56]
     fac:	cbz	x0, dc8 <grub_font_load+0x218>
     fb0:	mov	x2, #0x20000               	// #131072
     fb4:	mov	w1, #0xff                  	// #255
     fb8:	bl	0 <grub_memset>
     fbc:	mov	w27, #0xffff                	// #65535
     fc0:	mov	w3, #0x0                   	// #0
     fc4:	ldr	w0, [x19, #40]
     fc8:	cmp	w22, w0
     fcc:	b.cs	db0 <grub_font_load+0x200>  // b.hs, b.nlast
     fd0:	umull	x4, w22, w25
     fd4:	mov	x0, x20
     fd8:	ldr	x5, [x19, #48]
     fdc:	mov	x2, #0x4                   	// #4
     fe0:	stp	x5, x4, [sp, #104]
     fe4:	add	x28, x5, x4
     fe8:	mov	x1, x28
     fec:	str	w3, [sp, #124]
     ff0:	bl	0 <grub_file_read>
     ff4:	cmp	x0, #0x4
     ff8:	b.ne	dc8 <grub_font_load+0x218>  // b.any
     ffc:	ldp	x5, x4, [sp, #104]
    1000:	ldr	w23, [x5, x4]
    1004:	rev	w23, w23
    1008:	str	w23, [x5, x4]
    100c:	cbz	w22, 102c <grub_font_load+0x47c>
    1010:	ldr	w3, [sp, #124]
    1014:	cmp	w23, w3
    1018:	b.hi	102c <grub_font_load+0x47c>  // b.pmore
    101c:	adrp	x0, 0 <grub_stpcpy>
    1020:	mov	w2, w23
    1024:	ldr	x1, [x0]
    1028:	b	f7c <grub_font_load+0x3cc>
    102c:	cmp	w23, w27
    1030:	b.hi	103c <grub_font_load+0x48c>  // b.pmore
    1034:	ldr	x0, [x19, #56]
    1038:	strh	w22, [x0, w23, uxtw #1]
    103c:	add	x1, x28, #0x4
    1040:	mov	x0, x20
    1044:	mov	x2, #0x1                   	// #1
    1048:	bl	0 <grub_file_read>
    104c:	cmp	x0, #0x1
    1050:	b.ne	dc8 <grub_font_load+0x218>  // b.any
    1054:	add	x1, x28, #0x8
    1058:	mov	x0, x20
    105c:	mov	x2, #0x4                   	// #4
    1060:	bl	0 <grub_file_read>
    1064:	cmp	x0, #0x4
    1068:	b.ne	dc8 <grub_font_load+0x218>  // b.any
    106c:	ldr	w0, [x28, #8]
    1070:	add	w22, w22, #0x1
    1074:	mov	w3, w23
    1078:	str	xzr, [x28, #16]
    107c:	rev	w0, w0
    1080:	str	w0, [x28, #8]
    1084:	b	fc4 <grub_font_load+0x414>
    1088:	adrp	x0, 0 <grub_stpcpy>
    108c:	mov	x2, #0x4                   	// #4
    1090:	ldr	x1, [x0]
    1094:	mov	x0, x21
    1098:	bl	0 <grub_memcmp>
    109c:	cbz	w0, 10c0 <grub_font_load+0x510>
    10a0:	ldr	x0, [x20, #24]
    10a4:	ldr	w1, [sp, #148]
    10a8:	add	x1, x1, x0
    10ac:	mov	x0, x20
    10b0:	bl	0 <grub_file_seek>
    10b4:	cmn	w0, #0x1
    10b8:	b.ne	db0 <grub_font_load+0x200>  // b.any
    10bc:	b	dc8 <grub_font_load+0x218>
    10c0:	ldr	x0, [x19]
    10c4:	cbnz	x0, 10f8 <grub_font_load+0x548>
    10c8:	adrp	x0, 0 <grub_stpcpy>
    10cc:	mov	w1, #0x269                 	// #617
    10d0:	ldr	x3, [x0]
    10d4:	adrp	x0, 0 <grub_stpcpy>
    10d8:	ldr	x2, [x0]
    10dc:	adrp	x0, 0 <grub_stpcpy>
    10e0:	ldr	x0, [x0]
    10e4:	bl	0 <grub_real_dprintf>
    10e8:	adrp	x0, 0 <grub_stpcpy>
    10ec:	ldr	x0, [x0]
    10f0:	bl	0 <grub_strdup>
    10f4:	str	x0, [x19]
    10f8:	ldrsh	w0, [x19, #28]
    10fc:	cbz	w0, 1128 <grub_font_load+0x578>
    1100:	ldrsh	w0, [x19, #30]
    1104:	cbz	w0, 1128 <grub_font_load+0x578>
    1108:	ldr	w0, [x19, #40]
    110c:	cbz	w0, 1128 <grub_font_load+0x578>
    1110:	ldr	x0, [x19, #48]
    1114:	cbz	x0, 1128 <grub_font_load+0x578>
    1118:	ldrsh	w0, [x19, #32]
    111c:	cbz	w0, 1128 <grub_font_load+0x578>
    1120:	ldrsh	w0, [x19, #34]
    1124:	cbnz	w0, 113c <grub_font_load+0x58c>
    1128:	adrp	x0, 0 <grub_stpcpy>
    112c:	ldr	x1, [x0]
    1130:	mov	w0, #0x17                  	// #23
    1134:	bl	0 <grub_error>
    1138:	b	dc8 <grub_font_load+0x218>
    113c:	mov	x0, #0x10                  	// #16
    1140:	bl	0 <grub_malloc>
    1144:	cbz	x0, dc8 <grub_font_load+0x218>
    1148:	adrp	x1, 0 <grub_stpcpy>
    114c:	ldr	x1, [x1]
    1150:	ldr	x2, [x1]
    1154:	stp	x2, x19, [x0]
    1158:	str	x0, [x1]
    115c:	b	c6c <grub_font_load+0xbc>
	...

0000000000001240 <grub_font_get>:
    1240:	stp	x29, x30, [sp, #-48]!
    1244:	mov	x29, sp
    1248:	stp	x21, x22, [sp, #32]
    124c:	mov	x21, x0
    1250:	adrp	x0, 0 <grub_stpcpy>
    1254:	stp	x19, x20, [sp, #16]
    1258:	ldr	x22, [x0]
    125c:	ldr	x20, [x22]
    1260:	cbnz	x20, 1294 <grub_font_get+0x54>
    1264:	ldr	x0, [x22]
    1268:	cbz	x0, 1274 <grub_font_get+0x34>
    126c:	ldr	x19, [x0, #8]
    1270:	cbnz	x19, 1280 <grub_font_get+0x40>
    1274:	adrp	x0, 0 <grub_stpcpy>
    1278:	ldr	x19, [x0]
    127c:	add	x19, x19, #0x20
    1280:	mov	x0, x19
    1284:	ldp	x19, x20, [sp, #16]
    1288:	ldp	x21, x22, [sp, #32]
    128c:	ldp	x29, x30, [sp], #48
    1290:	ret
    1294:	ldr	x19, [x20, #8]
    1298:	mov	x1, x21
    129c:	ldr	x0, [x19]
    12a0:	bl	0 <grub_strcmp>
    12a4:	cbz	w0, 1280 <grub_font_get+0x40>
    12a8:	ldr	x20, [x20]
    12ac:	b	1260 <grub_font_get+0x20>
	...

00000000000012c0 <grub_font_get_name>:
    12c0:	ldr	x0, [x0]
    12c4:	ret

00000000000012c8 <grub_font_get_max_char_width>:
    12c8:	ldrsh	w0, [x0, #28]
    12cc:	ret

00000000000012d0 <grub_font_get_descent>:
    12d0:	ldrsh	w0, [x0, #34]
    12d4:	ret

00000000000012d8 <grub_font_get_xheight>:
    12d8:	ldrsh	w1, [x0, #32]
    12dc:	mov	w0, #0x2                   	// #2
    12e0:	sdiv	w0, w1, w0
    12e4:	ret

00000000000012e8 <grub_font_get_leading>:
    12e8:	ldrsh	w0, [x0, #36]
    12ec:	ret

00000000000012f0 <grub_font_get_height>:
    12f0:	ldrsh	w1, [x0, #32]
    12f4:	ldrsh	w2, [x0, #34]
    12f8:	ldrsh	w0, [x0, #36]
    12fc:	add	w1, w1, w2
    1300:	add	w0, w1, w0
    1304:	ret

0000000000001308 <grub_font_get_glyph>:
    1308:	cbz	x0, 1320 <grub_font_get_glyph+0x18>
    130c:	stp	x29, x30, [sp, #-16]!
    1310:	mov	x29, sp
    1314:	bl	8a0 <grub_font_get_glyph_internal>
    1318:	ldp	x29, x30, [sp], #16
    131c:	ret
    1320:	ret

0000000000001324 <grub_font_get_glyph_with_fallback>:
    1324:	stp	x29, x30, [sp, #-80]!
    1328:	mov	x29, sp
    132c:	stp	x19, x20, [sp, #16]
    1330:	mov	x19, x0
    1334:	mov	w20, w1
    1338:	stp	x21, x22, [sp, #32]
    133c:	stp	x23, x24, [sp, #48]
    1340:	str	x25, [sp, #64]
    1344:	cbnz	x0, 136c <grub_font_get_glyph_with_fallback+0x48>
    1348:	adrp	x0, 0 <grub_stpcpy>
    134c:	mov	x23, #0x0                   	// #0
    1350:	mov	w24, #0x2710                	// #10000
    1354:	mov	w25, #0x5                   	// #5
    1358:	ldr	x0, [x0]
    135c:	ldr	x21, [x0]
    1360:	cbnz	x21, 138c <grub_font_get_glyph_with_fallback+0x68>
    1364:	mov	x0, x23
    1368:	b	1374 <grub_font_get_glyph_with_fallback+0x50>
    136c:	bl	8a0 <grub_font_get_glyph_internal>
    1370:	cbz	x0, 1348 <grub_font_get_glyph_with_fallback+0x24>
    1374:	ldp	x19, x20, [sp, #16]
    1378:	ldp	x21, x22, [sp, #32]
    137c:	ldp	x23, x24, [sp, #48]
    1380:	ldr	x25, [sp, #64]
    1384:	ldp	x29, x30, [sp], #80
    1388:	ret
    138c:	ldr	x22, [x21, #8]
    1390:	mov	w1, w20
    1394:	ldr	x21, [x21]
    1398:	mov	x0, x22
    139c:	bl	8a0 <grub_font_get_glyph_internal>
    13a0:	cmp	x0, #0x0
    13a4:	ccmp	x19, #0x0, #0x0, ne  // ne = any
    13a8:	b.eq	1374 <grub_font_get_glyph_with_fallback+0x50>  // b.none
    13ac:	cbz	x0, 1360 <grub_font_get_glyph_with_fallback+0x3c>
    13b0:	ldrsh	w1, [x22, #32]
    13b4:	cbz	w1, 1418 <grub_font_get_glyph_with_fallback+0xf4>
    13b8:	ldrsh	w3, [x19, #32]
    13bc:	cbz	w3, 1418 <grub_font_get_glyph_with_fallback+0xf4>
    13c0:	sub	w2, w3, w1
    13c4:	subs	w1, w1, w3
    13c8:	csel	w2, w2, w1, mi  // mi = first
    13cc:	lsl	w2, w2, #3
    13d0:	ldrsh	w1, [x22, #30]
    13d4:	cbz	w1, 1420 <grub_font_get_glyph_with_fallback+0xfc>
    13d8:	ldrsh	w3, [x19, #30]
    13dc:	cbz	w3, 1420 <grub_font_get_glyph_with_fallback+0xfc>
    13e0:	sub	w4, w3, w1
    13e4:	subs	w1, w1, w3
    13e8:	csel	w1, w4, w1, mi  // mi = first
    13ec:	add	w2, w2, w1, lsl #3
    13f0:	ldrsh	w1, [x19, #26]
    13f4:	ldrsh	w3, [x22, #26]
    13f8:	cmp	w3, w1
    13fc:	csel	w1, w25, wzr, ne  // ne = any
    1400:	add	w2, w2, w1
    1404:	cmp	w24, w2
    1408:	b.le	1360 <grub_font_get_glyph_with_fallback+0x3c>
    140c:	mov	x23, x0
    1410:	mov	w24, w2
    1414:	b	1360 <grub_font_get_glyph_with_fallback+0x3c>
    1418:	mov	w2, #0x32                  	// #50
    141c:	b	13d0 <grub_font_get_glyph_with_fallback+0xac>
    1420:	add	w2, w2, #0x32
    1424:	b	13f0 <grub_font_get_glyph_with_fallback+0xcc>
	...

0000000000001430 <grub_font_construct_dry_run>:
    1430:	stp	x29, x30, [sp, #-80]!
    1434:	mov	x29, sp
    1438:	stp	x25, x26, [sp, #64]
    143c:	mov	x26, x0
    1440:	ldrb	w0, [x1, #4]
    1444:	stp	x21, x22, [sp, #32]
    1448:	mov	x22, x3
    144c:	ldr	w21, [x1]
    1450:	tst	x0, #0x4
    1454:	stp	x19, x20, [sp, #16]
    1458:	mov	x20, x1
    145c:	stp	x23, x24, [sp, #48]
    1460:	mov	w1, #0x80000000            	// #-2147483648
    1464:	mov	x24, x2
    1468:	mov	x23, x4
    146c:	ubfx	x21, x21, #0, #23
    1470:	csel	w1, wzr, w1, eq  // eq = none
    1474:	tbz	w0, #1, 147c <grub_font_construct_dry_run+0x4c>
    1478:	orr	w1, w1, #0x40000000
    147c:	ldrh	w2, [x20, #6]
    1480:	tst	w2, #0x7f8
    1484:	b.eq	1540 <grub_font_construct_dry_run+0x110>  // b.none
    1488:	ubfx	x0, x2, #3, #8
    148c:	cmp	w0, #0x2
    1490:	b.ls	1538 <grub_font_construct_dry_run+0x108>  // b.plast
    1494:	ldr	x25, [x20, #24]
    1498:	sub	w0, w21, #0x69
    149c:	cmp	w0, #0x1
    14a0:	b.hi	14bc <grub_font_construct_dry_run+0x8c>  // b.pmore
    14a4:	ubfx	x2, x2, #3, #8
    14a8:	mov	x0, x25
    14ac:	mov	w4, #0x1cc0                	// #7360
    14b0:	add	x2, x25, w2, uxtw #2
    14b4:	cmp	x0, x2
    14b8:	b.ne	1548 <grub_font_construct_dry_run+0x118>  // b.any
    14bc:	orr	w1, w1, w21
    14c0:	mov	x0, x26
    14c4:	bl	1324 <grub_font_get_glyph_with_fallback>
    14c8:	mov	x19, x0
    14cc:	cbnz	x0, 14e4 <grub_font_construct_dry_run+0xb4>
    14d0:	mov	w1, w21
    14d4:	mov	x0, x26
    14d8:	bl	1324 <grub_font_get_glyph_with_fallback>
    14dc:	mov	x19, x0
    14e0:	cbz	x0, 151c <grub_font_construct_dry_run+0xec>
    14e4:	cbz	x23, 14f0 <grub_font_construct_dry_run+0xc0>
    14e8:	ldrh	w0, [x19, #16]
    14ec:	str	w0, [x23]
    14f0:	ldr	w0, [x20, #4]
    14f4:	and	w0, w0, #0x7ffffff
    14f8:	and	w0, w0, #0xfff8001f
    14fc:	cbz	w0, 151c <grub_font_construct_dry_run+0xec>
    1500:	ldrh	w0, [x20, #6]
    1504:	tst	w0, #0x7f8
    1508:	b.eq	15b8 <grub_font_construct_dry_run+0x188>  // b.none
    150c:	cbnz	x22, 15b8 <grub_font_construct_dry_run+0x188>
    1510:	adrp	x0, 0 <grub_stpcpy>
    1514:	ldr	x0, [x0]
    1518:	str	wzr, [x0]
    151c:	mov	x0, x19
    1520:	ldp	x19, x20, [sp, #16]
    1524:	ldp	x21, x22, [sp, #32]
    1528:	ldp	x23, x24, [sp, #48]
    152c:	ldp	x25, x26, [sp, #64]
    1530:	ldp	x29, x30, [sp], #80
    1534:	ret
    1538:	add	x25, x20, #0x18
    153c:	b	1498 <grub_font_construct_dry_run+0x68>
    1540:	mov	x25, #0x0                   	// #0
    1544:	b	1498 <grub_font_construct_dry_run+0x68>
    1548:	ldrh	w3, [x0, #2]
    154c:	add	x0, x0, #0x4
    1550:	and	w3, w3, #0x1fe0
    1554:	cmp	w3, w4
    1558:	b.ne	14b4 <grub_font_construct_dry_run+0x84>  // b.any
    155c:	cmp	w21, #0x69
    1560:	mov	w0, #0x237                 	// #567
    1564:	mov	w21, #0x131                 	// #305
    1568:	csel	w21, w21, w0, eq  // eq = none
    156c:	b	14bc <grub_font_construct_dry_run+0x8c>
    1570:	ldr	x0, [x19]
    1574:	ldr	w1, [x25, x21, lsl #2]
    1578:	and	w1, w1, #0x1fffff
    157c:	bl	1324 <grub_font_get_glyph_with_fallback>
    1580:	str	x0, [x22, x21, lsl #3]
    1584:	add	x21, x21, #0x1
    1588:	ldrh	w0, [x20, #6]
    158c:	ubfx	x0, x0, #3, #8
    1590:	cmp	w0, w21
    1594:	b.hi	1570 <grub_font_construct_dry_run+0x140>  // b.pmore
    1598:	mov	x5, x23
    159c:	mov	x4, x22
    15a0:	mov	x3, x19
    15a4:	mov	x2, x24
    15a8:	mov	x0, x20
    15ac:	mov	x1, #0x0                   	// #0
    15b0:	bl	1d0 <blit_comb>
    15b4:	b	151c <grub_font_construct_dry_run+0xec>
    15b8:	mov	x21, #0x0                   	// #0
    15bc:	b	1588 <grub_font_construct_dry_run+0x158>
	...

00000000000015c8 <grub_font_get_constructed_device_width>:
    15c8:	stp	x29, x30, [sp, #-64]!
    15cc:	mov	x29, sp
    15d0:	stp	x19, x20, [sp, #16]
    15d4:	mov	x20, x0
    15d8:	mov	x19, x1
    15dc:	mov	x0, x1
    15e0:	str	x21, [sp, #32]
    15e4:	bl	748 <ensure_comb_space>
    15e8:	adrp	x0, 0 <grub_stpcpy>
    15ec:	add	x4, sp, #0x3c
    15f0:	mov	x1, x19
    15f4:	mov	x2, #0x0                   	// #0
    15f8:	ldr	x21, [x0]
    15fc:	mov	x0, x20
    1600:	ldr	x3, [x21, #8]
    1604:	bl	1430 <grub_font_construct_dry_run>
    1608:	cbnz	x0, 1624 <grub_font_get_constructed_device_width+0x5c>
    160c:	ldr	x0, [x21, #24]
    1610:	ldrh	w0, [x0, #16]
    1614:	ldp	x19, x20, [sp, #16]
    1618:	ldr	x21, [sp, #32]
    161c:	ldp	x29, x30, [sp], #64
    1620:	ret
    1624:	ldr	w0, [sp, #60]
    1628:	b	1614 <grub_font_get_constructed_device_width+0x4c>
    162c:	nop
	...

0000000000001638 <grub_font_construct_glyph>:
    1638:	stp	x29, x30, [sp, #-64]!
    163c:	mov	x29, sp
    1640:	stp	x19, x20, [sp, #16]
    1644:	mov	x19, x0
    1648:	mov	x0, x1
    164c:	stp	x21, x22, [sp, #32]
    1650:	mov	x22, x1
    1654:	bl	748 <ensure_comb_space>
    1658:	adrp	x0, 0 <grub_stpcpy>
    165c:	add	x2, sp, #0x30
    1660:	mov	x1, x22
    1664:	mov	x4, #0x0                   	// #0
    1668:	ldr	x20, [x0]
    166c:	mov	x0, x19
    1670:	ldr	x3, [x20, #8]
    1674:	bl	1430 <grub_font_construct_dry_run>
    1678:	cbnz	x0, 1694 <grub_font_construct_glyph+0x5c>
    167c:	ldr	x19, [x20, #24]
    1680:	mov	x0, x19
    1684:	ldp	x19, x20, [sp, #16]
    1688:	ldp	x21, x22, [sp, #32]
    168c:	ldp	x29, x30, [sp], #64
    1690:	ret
    1694:	mov	x19, x0
    1698:	ldr	x0, [x20, #8]
    169c:	cbnz	x0, 16ac <grub_font_construct_glyph+0x74>
    16a0:	ldrh	w0, [x22, #6]
    16a4:	tst	w0, #0x7f8
    16a8:	b.ne	1680 <grub_font_construct_glyph+0x48>  // b.any
    16ac:	ldr	w0, [x22, #4]
    16b0:	and	w0, w0, #0x7ffffff
    16b4:	and	w0, w0, #0xfff8001f
    16b8:	cbz	w0, 1680 <grub_font_construct_glyph+0x48>
    16bc:	ldp	w0, w1, [sp, #56]
    16c0:	mul	w0, w0, w1
    16c4:	ldr	x1, [x20, #96]
    16c8:	add	w0, w0, #0x7
    16cc:	lsr	w0, w0, #3
    16d0:	add	x0, x0, #0x18
    16d4:	cmp	x0, x1
    16d8:	b.ls	1708 <grub_font_construct_glyph+0xd0>  // b.plast
    16dc:	ldr	x0, [x20, #104]
    16e0:	bl	0 <grub_free>
    16e4:	ldp	w0, w1, [sp, #56]
    16e8:	mul	w0, w0, w1
    16ec:	add	w0, w0, #0x7
    16f0:	lsr	w0, w0, #3
    16f4:	add	x0, x0, #0x18
    16f8:	lsl	x0, x0, #1
    16fc:	str	x0, [x20, #96]
    1700:	bl	0 <grub_malloc>
    1704:	str	x0, [x20, #104]
    1708:	ldr	x0, [x20, #104]
    170c:	cbnz	x0, 1720 <grub_font_construct_glyph+0xe8>
    1710:	adrp	x0, 0 <grub_stpcpy>
    1714:	ldr	x0, [x0]
    1718:	str	wzr, [x0]
    171c:	b	1680 <grub_font_construct_glyph+0x48>
    1720:	ldp	w2, w1, [sp, #56]
    1724:	mul	w2, w2, w1
    1728:	mov	w1, #0x0                   	// #0
    172c:	add	w2, w2, #0x7
    1730:	lsr	w2, w2, #3
    1734:	add	x2, x2, #0x18
    1738:	bl	0 <grub_memset>
    173c:	ldr	x21, [x20, #104]
    1740:	ldrb	w6, [x22, #4]
    1744:	ldr	x0, [x19]
    1748:	ldrsh	w1, [sp, #52]
    174c:	ldr	w5, [sp, #56]
    1750:	ldrsh	w2, [sp, #48]
    1754:	str	x0, [x21]
    1758:	ldr	w0, [sp, #60]
    175c:	strh	w5, [x21, #8]
    1760:	strh	w0, [x21, #10]
    1764:	strh	w2, [x21, #12]
    1768:	add	w0, w1, w0, uxth
    176c:	strh	w1, [x21, #14]
    1770:	ldrh	w3, [x19, #10]
    1774:	ldrsh	w4, [x19, #14]
    1778:	ldrsh	w1, [x19, #12]
    177c:	tbz	w6, #0, 184c <grub_font_construct_glyph+0x214>
    1780:	add	w4, w4, w3
    1784:	and	w5, w5, #0xffff
    1788:	sub	w0, w0, w4
    178c:	sub	w2, w1, w2
    1790:	mov	w7, #0x0                   	// #0
    1794:	madd	w2, w0, w5, w2
    1798:	cmp	w7, w3
    179c:	b.cc	17c4 <grub_font_construct_glyph+0x18c>  // b.lo, b.ul, b.last
    17a0:	ldr	x4, [x20, #8]
    17a4:	mov	x3, x19
    17a8:	mov	x1, x21
    17ac:	mov	x0, x22
    17b0:	mov	x19, x21
    17b4:	mov	x5, #0x0                   	// #0
    17b8:	mov	x2, #0x0                   	// #0
    17bc:	bl	1d0 <blit_comb>
    17c0:	b	1680 <grub_font_construct_glyph+0x48>
    17c4:	ldrh	w11, [x19, #8]
    17c8:	add	w7, w7, #0x1
    17cc:	and	w6, w2, #0x7
    17d0:	lsr	w10, w2, #3
    17d4:	mov	w9, #0x0                   	// #0
    17d8:	mul	w1, w7, w11
    17dc:	sub	w1, w1, #0x1
    17e0:	and	w0, w1, #0x7
    17e4:	lsr	w1, w1, #3
    17e8:	cmp	w11, w9
    17ec:	b.hi	17f8 <grub_font_construct_glyph+0x1c0>  // b.pmore
    17f0:	add	w2, w2, w5
    17f4:	b	1798 <grub_font_construct_glyph+0x160>
    17f8:	add	x4, x19, w1, uxtw
    17fc:	add	x8, x21, w10, uxtw
    1800:	ldrb	w4, [x4, #18]
    1804:	ldrb	w12, [x8, #18]
    1808:	lsl	w4, w4, w0
    180c:	and	w4, w4, #0x80
    1810:	sub	w0, w0, #0x1
    1814:	asr	w4, w4, w6
    1818:	orr	w4, w4, w12
    181c:	strb	w4, [x8, #18]
    1820:	add	w6, w6, #0x1
    1824:	cmn	w0, #0x1
    1828:	b.ne	1834 <grub_font_construct_glyph+0x1fc>  // b.any
    182c:	sub	w1, w1, #0x1
    1830:	mov	w0, #0x7                   	// #7
    1834:	cmp	w6, #0x8
    1838:	b.ne	1844 <grub_font_construct_glyph+0x20c>  // b.any
    183c:	add	w10, w10, #0x1
    1840:	mov	w6, #0x0                   	// #0
    1844:	add	w9, w9, #0x1
    1848:	b	17e8 <grub_font_construct_glyph+0x1b0>
    184c:	add	w3, w3, w4
    1850:	sub	w2, w1, w2
    1854:	sub	w3, w0, w3
    1858:	mov	x1, x19
    185c:	mov	x0, x21
    1860:	bl	28 <grub_font_blit_glyph>
    1864:	b	17a0 <grub_font_construct_glyph+0x168>
	...

0000000000001878 <grub_font_draw_glyph>:
    1878:	stp	x29, x30, [sp, #-144]!
    187c:	mov	x29, sp
    1880:	stp	x19, x20, [sp, #16]
    1884:	mov	x19, x0
    1888:	mov	w0, w1
    188c:	ldrh	w1, [x19, #8]
    1890:	str	x21, [sp, #32]
    1894:	cbz	w1, 1930 <grub_font_draw_glyph+0xb8>
    1898:	mov	w21, w2
    189c:	ldrh	w2, [x19, #10]
    18a0:	cbz	w2, 1930 <grub_font_draw_glyph+0xb8>
    18a4:	stp	w1, w2, [sp, #56]
    18a8:	mov	w2, #0xa                   	// #10
    18ac:	stp	wzr, w1, [sp, #72]
    18b0:	mov	w1, #0x2                   	// #2
    18b4:	str	w2, [sp, #88]
    18b8:	mov	x2, #0x104                 	// #260
    18bc:	movk	x2, #0x1, lsl #32
    18c0:	str	w1, [sp, #80]
    18c4:	add	x1, sp, #0x38
    18c8:	mov	w20, w3
    18cc:	add	x4, sp, #0x83
    18d0:	add	x3, x1, #0x4a
    18d4:	str	x2, [sp, #64]
    18d8:	add	x2, x1, #0x49
    18dc:	add	x1, x1, #0x48
    18e0:	str	wzr, [sp, #124]
    18e4:	bl	0 <grub_video_unmap_color>
    18e8:	ldrh	w7, [x19, #10]
    18ec:	add	x0, x19, #0x12
    18f0:	ldrh	w6, [x19, #8]
    18f4:	mov	w5, #0x0                   	// #0
    18f8:	ldrsh	w3, [x19, #14]
    18fc:	mov	w4, #0x0                   	// #0
    1900:	ldrsh	w2, [x19, #12]
    1904:	mov	w1, #0x1                   	// #1
    1908:	sub	w3, w20, w3
    190c:	str	x0, [sp, #136]
    1910:	sub	w3, w3, w7
    1914:	add	w2, w2, w21
    1918:	add	x0, sp, #0x38
    191c:	bl	0 <grub_video_blit_bitmap>
    1920:	ldp	x19, x20, [sp, #16]
    1924:	ldr	x21, [sp, #32]
    1928:	ldp	x29, x30, [sp], #144
    192c:	ret
    1930:	mov	w0, #0x0                   	// #0
    1934:	b	1920 <grub_font_draw_glyph+0xa8>

0000000000001938 <lsfonts_command>:
    1938:	stp	x29, x30, [sp, #-32]!
    193c:	adrp	x0, 0 <grub_stpcpy>
    1940:	mov	x29, sp
    1944:	ldr	x0, [x0]
    1948:	stp	x19, x20, [sp, #16]
    194c:	adrp	x20, 0 <grub_stpcpy>
    1950:	bl	0 <grub_puts_>
    1954:	adrp	x0, 0 <grub_stpcpy>
    1958:	ldr	x0, [x0]
    195c:	ldr	x19, [x0]
    1960:	cbnz	x19, 1974 <lsfonts_command+0x3c>
    1964:	mov	w0, #0x0                   	// #0
    1968:	ldp	x19, x20, [sp, #16]
    196c:	ldp	x29, x30, [sp], #32
    1970:	ret
    1974:	ldr	x0, [x19, #8]
    1978:	bl	12c0 <grub_font_get_name>
    197c:	mov	x1, x0
    1980:	ldr	x0, [x20]
    1984:	bl	0 <grub_printf>
    1988:	ldr	x19, [x19]
    198c:	b	1960 <lsfonts_command+0x28>
	...

00000000000019a8 <loadfont_command>:
    19a8:	cbnz	w1, 19bc <loadfont_command+0x14>
    19ac:	adrp	x0, 0 <grub_stpcpy>
    19b0:	ldr	x1, [x0]
    19b4:	mov	w0, #0x12                  	// #18
    19b8:	b	0 <grub_error>
    19bc:	stp	x29, x30, [sp, #-48]!
    19c0:	mov	x29, sp
    19c4:	stp	x19, x20, [sp, #16]
    19c8:	mov	w19, w1
    19cc:	mov	x20, #0x0                   	// #0
    19d0:	str	x21, [sp, #32]
    19d4:	mov	x21, x2
    19d8:	ldr	x0, [x21, x20, lsl #3]
    19dc:	add	x20, x20, #0x1
    19e0:	bl	bb0 <grub_font_load>
    19e4:	cbnz	x0, 1a14 <loadfont_command+0x6c>
    19e8:	adrp	x0, 0 <grub_stpcpy>
    19ec:	ldr	x0, [x0]
    19f0:	ldr	w0, [x0]
    19f4:	cbnz	w0, 1a20 <loadfont_command+0x78>
    19f8:	adrp	x0, 0 <grub_stpcpy>
    19fc:	ldp	x19, x20, [sp, #16]
    1a00:	ldr	x1, [x0]
    1a04:	mov	w0, #0x17                  	// #23
    1a08:	ldr	x21, [sp, #32]
    1a0c:	ldp	x29, x30, [sp], #48
    1a10:	b	19b8 <loadfont_command+0x10>
    1a14:	cmp	x19, x20
    1a18:	b.ne	19d8 <loadfont_command+0x30>  // b.any
    1a1c:	mov	w0, #0x0                   	// #0
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldr	x21, [sp, #32]
    1a28:	ldp	x29, x30, [sp], #48
    1a2c:	ret
	...

0000000000001a48 <grub_mod_init>:
    1a48:	stp	x29, x30, [sp, #-32]!
    1a4c:	mov	x29, sp
    1a50:	str	x19, [sp, #16]
    1a54:	bl	ae8 <grub_font_loader_init>
    1a58:	adrp	x0, 0 <grub_stpcpy>
    1a5c:	mov	w4, #0x0                   	// #0
    1a60:	ldr	x3, [x0]
    1a64:	adrp	x0, 0 <grub_stpcpy>
    1a68:	ldr	x2, [x0]
    1a6c:	adrp	x0, 0 <grub_stpcpy>
    1a70:	ldr	x1, [x0]
    1a74:	adrp	x0, 0 <grub_stpcpy>
    1a78:	ldr	x0, [x0]
    1a7c:	bl	0 <grub_register_command_prio>
    1a80:	adrp	x1, 0 <grub_stpcpy>
    1a84:	mov	w4, #0x0                   	// #0
    1a88:	mov	x2, #0x0                   	// #0
    1a8c:	ldr	x19, [x1]
    1a90:	str	x0, [x19]
    1a94:	adrp	x0, 0 <grub_stpcpy>
    1a98:	ldr	x3, [x0]
    1a9c:	adrp	x0, 0 <grub_stpcpy>
    1aa0:	ldr	x1, [x0]
    1aa4:	adrp	x0, 0 <grub_stpcpy>
    1aa8:	ldr	x0, [x0]
    1aac:	bl	0 <grub_register_command_prio>
    1ab0:	str	x0, [x19, #8]
    1ab4:	ldr	x19, [sp, #16]
    1ab8:	ldp	x29, x30, [sp], #32
    1abc:	ret
	...

0000000000001b00 <grub_mod_fini>:
    1b00:	stp	x29, x30, [sp, #-32]!
    1b04:	adrp	x0, 0 <grub_stpcpy>
    1b08:	mov	x29, sp
    1b0c:	str	x19, [sp, #16]
    1b10:	ldr	x19, [x0]
    1b14:	ldr	x0, [x19]
    1b18:	bl	0 <grub_unregister_command>
    1b1c:	ldr	x0, [x19, #8]
    1b20:	ldr	x19, [sp, #16]
    1b24:	ldp	x29, x30, [sp], #32
    1b28:	b	0 <grub_unregister_command>
    1b2c:	nop
	...
