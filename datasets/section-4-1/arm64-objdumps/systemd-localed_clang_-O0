
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-localed_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004021b8 <_init>:
  4021b8:	stp	x29, x30, [sp, #-16]!
  4021bc:	mov	x29, sp
  4021c0:	bl	402830 <call_weak_fn>
  4021c4:	ldp	x29, x30, [sp], #16
  4021c8:	ret

Disassembly of section .plt:

00000000004021d0 <__libc_start_main@plt-0x20>:
  4021d0:	stp	x16, x30, [sp, #-16]!
  4021d4:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4021d8:	ldr	x17, [x16, #3320]
  4021dc:	add	x16, x16, #0xcf8
  4021e0:	br	x17
  4021e4:	nop
  4021e8:	nop
  4021ec:	nop

00000000004021f0 <__libc_start_main@plt>:
  4021f0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4021f4:	ldr	x17, [x16, #3328]
  4021f8:	add	x16, x16, #0xd00
  4021fc:	br	x17

0000000000402200 <abort@plt>:
  402200:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402204:	ldr	x17, [x16, #3336]
  402208:	add	x16, x16, #0xd08
  40220c:	br	x17

0000000000402210 <__gmon_start__@plt>:
  402210:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402214:	ldr	x17, [x16, #3344]
  402218:	add	x16, x16, #0xd10
  40221c:	br	x17

0000000000402220 <ask_password_agent_close@plt>:
  402220:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402224:	ldr	x17, [x16, #3352]
  402228:	add	x16, x16, #0xd18
  40222c:	br	x17

0000000000402230 <polkit_agent_close@plt>:
  402230:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402234:	ldr	x17, [x16, #3360]
  402238:	add	x16, x16, #0xd20
  40223c:	br	x17

0000000000402240 <pager_close@plt>:
  402240:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402244:	ldr	x17, [x16, #3368]
  402248:	add	x16, x16, #0xd28
  40224c:	br	x17

0000000000402250 <mac_selinux_finish@plt>:
  402250:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402254:	ldr	x17, [x16, #3376]
  402258:	add	x16, x16, #0xd30
  40225c:	br	x17

0000000000402260 <memset@plt>:
  402260:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402264:	ldr	x17, [x16, #3384]
  402268:	add	x16, x16, #0xd38
  40226c:	br	x17

0000000000402270 <log_setup_service@plt>:
  402270:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402274:	ldr	x17, [x16, #3392]
  402278:	add	x16, x16, #0xd40
  40227c:	br	x17

0000000000402280 <umask@plt>:
  402280:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402284:	ldr	x17, [x16, #3400]
  402288:	add	x16, x16, #0xd48
  40228c:	br	x17

0000000000402290 <mac_selinux_init@plt>:
  402290:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402294:	ldr	x17, [x16, #3408]
  402298:	add	x16, x16, #0xd50
  40229c:	br	x17

00000000004022a0 <log_get_max_level_realm@plt>:
  4022a0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4022a4:	ldr	x17, [x16, #3416]
  4022a8:	add	x16, x16, #0xd58
  4022ac:	br	x17

00000000004022b0 <log_internal_realm@plt>:
  4022b0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4022b4:	ldr	x17, [x16, #3424]
  4022b8:	add	x16, x16, #0xd60
  4022bc:	br	x17

00000000004022c0 <abs@plt>:
  4022c0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4022c4:	ldr	x17, [x16, #3432]
  4022c8:	add	x16, x16, #0xd68
  4022cc:	br	x17

00000000004022d0 <sigprocmask_many@plt>:
  4022d0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4022d4:	ldr	x17, [x16, #3440]
  4022d8:	add	x16, x16, #0xd70
  4022dc:	br	x17

00000000004022e0 <log_assert_failed_realm@plt>:
  4022e0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4022e4:	ldr	x17, [x16, #3448]
  4022e8:	add	x16, x16, #0xd78
  4022ec:	br	x17

00000000004022f0 <sd_event_default@plt>:
  4022f0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4022f4:	ldr	x17, [x16, #3456]
  4022f8:	add	x16, x16, #0xd80
  4022fc:	br	x17

0000000000402300 <sd_event_set_watchdog@plt>:
  402300:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402304:	ldr	x17, [x16, #3464]
  402308:	add	x16, x16, #0xd88
  40230c:	br	x17

0000000000402310 <sd_event_add_signal@plt>:
  402310:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402314:	ldr	x17, [x16, #3472]
  402318:	add	x16, x16, #0xd90
  40231c:	br	x17

0000000000402320 <bus_event_loop_with_idle@plt>:
  402320:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402324:	ldr	x17, [x16, #3480]
  402328:	add	x16, x16, #0xd98
  40232c:	br	x17

0000000000402330 <sd_event_unref@plt>:
  402330:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402334:	ldr	x17, [x16, #3488]
  402338:	add	x16, x16, #0xda0
  40233c:	br	x17

0000000000402340 <sd_bus_flush_close_unref@plt>:
  402340:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402344:	ldr	x17, [x16, #3496]
  402348:	add	x16, x16, #0xda8
  40234c:	br	x17

0000000000402350 <sd_bus_default_system@plt>:
  402350:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402354:	ldr	x17, [x16, #3504]
  402358:	add	x16, x16, #0xdb0
  40235c:	br	x17

0000000000402360 <sd_bus_add_object_vtable@plt>:
  402360:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402364:	ldr	x17, [x16, #3512]
  402368:	add	x16, x16, #0xdb8
  40236c:	br	x17

0000000000402370 <sd_bus_request_name_async@plt>:
  402370:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402374:	ldr	x17, [x16, #3520]
  402378:	add	x16, x16, #0xdc0
  40237c:	br	x17

0000000000402380 <sd_bus_attach_event@plt>:
  402380:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402384:	ldr	x17, [x16, #3528]
  402388:	add	x16, x16, #0xdc8
  40238c:	br	x17

0000000000402390 <calloc@plt>:
  402390:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402394:	ldr	x17, [x16, #3536]
  402398:	add	x16, x16, #0xdd0
  40239c:	br	x17

00000000004023a0 <locale_variable_to_string@plt>:
  4023a0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4023a4:	ldr	x17, [x16, #3544]
  4023a8:	add	x16, x16, #0xdd8
  4023ac:	br	x17

00000000004023b0 <asprintf@plt>:
  4023b0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4023b4:	ldr	x17, [x16, #3552]
  4023b8:	add	x16, x16, #0xde0
  4023bc:	br	x17

00000000004023c0 <sd_bus_message_append_strv@plt>:
  4023c0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4023c4:	ldr	x17, [x16, #3560]
  4023c8:	add	x16, x16, #0xde8
  4023cc:	br	x17

00000000004023d0 <strcmp@plt>:
  4023d0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4023d4:	ldr	x17, [x16, #3568]
  4023d8:	add	x16, x16, #0xdf0
  4023dc:	br	x17

00000000004023e0 <sd_bus_message_append_basic@plt>:
  4023e0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4023e4:	ldr	x17, [x16, #3576]
  4023e8:	add	x16, x16, #0xdf8
  4023ec:	br	x17

00000000004023f0 <bus_message_read_strv_extend@plt>:
  4023f0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4023f4:	ldr	x17, [x16, #3584]
  4023f8:	add	x16, x16, #0xe00
  4023fc:	br	x17

0000000000402400 <sd_bus_message_read_basic@plt>:
  402400:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402404:	ldr	x17, [x16, #3592]
  402408:	add	x16, x16, #0xe08
  40240c:	br	x17

0000000000402410 <strv_length@plt>:
  402410:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402414:	ldr	x17, [x16, #3600]
  402418:	add	x16, x16, #0xe10
  40241c:	br	x17

0000000000402420 <strchr@plt>:
  402420:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402424:	ldr	x17, [x16, #3608]
  402428:	add	x16, x16, #0xe18
  40242c:	br	x17

0000000000402430 <locale_is_valid@plt>:
  402430:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402434:	ldr	x17, [x16, #3616]
  402438:	add	x16, x16, #0xe20
  40243c:	br	x17

0000000000402440 <sd_bus_error_setf@plt>:
  402440:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402444:	ldr	x17, [x16, #3624]
  402448:	add	x16, x16, #0xe28
  40244c:	br	x17

0000000000402450 <strdup@plt>:
  402450:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402454:	ldr	x17, [x16, #3632]
  402458:	add	x16, x16, #0xe30
  40245c:	br	x17

0000000000402460 <strv_free@plt>:
  402460:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402464:	ldr	x17, [x16, #3640]
  402468:	add	x16, x16, #0xe38
  40246c:	br	x17

0000000000402470 <strlen@plt>:
  402470:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402474:	ldr	x17, [x16, #3648]
  402478:	add	x16, x16, #0xe40
  40247c:	br	x17

0000000000402480 <free@plt>:
  402480:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402484:	ldr	x17, [x16, #3656]
  402488:	add	x16, x16, #0xe48
  40248c:	br	x17

0000000000402490 <sd_bus_reply_method_return@plt>:
  402490:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402494:	ldr	x17, [x16, #3664]
  402498:	add	x16, x16, #0xe50
  40249c:	br	x17

00000000004024a0 <bus_verify_polkit_async@plt>:
  4024a0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4024a4:	ldr	x17, [x16, #3672]
  4024a8:	add	x16, x16, #0xe58
  4024ac:	br	x17

00000000004024b0 <sd_bus_error_set_errnof@plt>:
  4024b0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4024b4:	ldr	x17, [x16, #3680]
  4024b8:	add	x16, x16, #0xe60
  4024bc:	br	x17

00000000004024c0 <sd_bus_message_get_bus@plt>:
  4024c0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4024c4:	ldr	x17, [x16, #3688]
  4024c8:	add	x16, x16, #0xe68
  4024cc:	br	x17

00000000004024d0 <sd_bus_emit_properties_changed@plt>:
  4024d0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4024d4:	ldr	x17, [x16, #3696]
  4024d8:	add	x16, x16, #0xe70
  4024dc:	br	x17

00000000004024e0 <sd_bus_message_read@plt>:
  4024e0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4024e4:	ldr	x17, [x16, #3704]
  4024e8:	add	x16, x16, #0xe78
  4024ec:	br	x17

00000000004024f0 <filename_is_valid@plt>:
  4024f0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4024f4:	ldr	x17, [x16, #3712]
  4024f8:	add	x16, x16, #0xe80
  4024fc:	br	x17

0000000000402500 <string_is_safe@plt>:
  402500:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402504:	ldr	x17, [x16, #3720]
  402508:	add	x16, x16, #0xe88
  40250c:	br	x17

0000000000402510 <free_and_strdup@plt>:
  402510:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402514:	ldr	x17, [x16, #3728]
  402518:	add	x16, x16, #0xe90
  40251c:	br	x17

0000000000402520 <sd_bus_error_set@plt>:
  402520:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402524:	ldr	x17, [x16, #3736]
  402528:	add	x16, x16, #0xe98
  40252c:	br	x17

0000000000402530 <locale_variables_free@plt>:
  402530:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402534:	ldr	x17, [x16, #3744]
  402538:	add	x16, x16, #0xea0
  40253c:	br	x17

0000000000402540 <strncmp@plt>:
  402540:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402544:	ldr	x17, [x16, #3752]
  402548:	add	x16, x16, #0xea8
  40254c:	br	x17

0000000000402550 <strcmp_ptr@plt>:
  402550:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402554:	ldr	x17, [x16, #3760]
  402558:	add	x16, x16, #0xeb0
  40255c:	br	x17

0000000000402560 <log_oom_internal@plt>:
  402560:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402564:	ldr	x17, [x16, #3768]
  402568:	add	x16, x16, #0xeb8
  40256c:	br	x17

0000000000402570 <strjoin_real@plt>:
  402570:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402574:	ldr	x17, [x16, #3776]
  402578:	add	x16, x16, #0xec0
  40257c:	br	x17

0000000000402580 <sd_bus_message_new_method_call@plt>:
  402580:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402584:	ldr	x17, [x16, #3784]
  402588:	add	x16, x16, #0xec8
  40258c:	br	x17

0000000000402590 <sd_bus_call@plt>:
  402590:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402594:	ldr	x17, [x16, #3792]
  402598:	add	x16, x16, #0xed0
  40259c:	br	x17

00000000004025a0 <bus_error_message@plt>:
  4025a0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4025a4:	ldr	x17, [x16, #3800]
  4025a8:	add	x16, x16, #0xed8
  4025ac:	br	x17

00000000004025b0 <strv_join_prefix@plt>:
  4025b0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4025b4:	ldr	x17, [x16, #3808]
  4025b8:	add	x16, x16, #0xee0
  4025bc:	br	x17

00000000004025c0 <sd_bus_message_unref@plt>:
  4025c0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4025c4:	ldr	x17, [x16, #3816]
  4025c8:	add	x16, x16, #0xee8
  4025cc:	br	x17

00000000004025d0 <sd_bus_call_method@plt>:
  4025d0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4025d4:	ldr	x17, [x16, #3824]
  4025d8:	add	x16, x16, #0xef0
  4025dc:	br	x17

00000000004025e0 <sd_bus_error_free@plt>:
  4025e0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4025e4:	ldr	x17, [x16, #3832]
  4025e8:	add	x16, x16, #0xef8
  4025ec:	br	x17

00000000004025f0 <bus_verify_polkit_async_registry_free@plt>:
  4025f0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4025f4:	ldr	x17, [x16, #3840]
  4025f8:	add	x16, x16, #0xf00
  4025fc:	br	x17

0000000000402600 <sd_bus_message_ref@plt>:
  402600:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402604:	ldr	x17, [x16, #3848]
  402608:	add	x16, x16, #0xf08
  40260c:	br	x17

0000000000402610 <__errno_location@plt>:
  402610:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402614:	ldr	x17, [x16, #3856]
  402618:	add	x16, x16, #0xf10
  40261c:	br	x17

0000000000402620 <timespec_load@plt>:
  402620:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402624:	ldr	x17, [x16, #3864]
  402628:	add	x16, x16, #0xf18
  40262c:	br	x17

0000000000402630 <parse_env_file_sentinel@plt>:
  402630:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402634:	ldr	x17, [x16, #3872]
  402638:	add	x16, x16, #0xf20
  40263c:	br	x17

0000000000402640 <getenv@plt>:
  402640:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402644:	ldr	x17, [x16, #3880]
  402648:	add	x16, x16, #0xf28
  40264c:	br	x17

0000000000402650 <fopen64@plt>:
  402650:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402654:	ldr	x17, [x16, #3888]
  402658:	add	x16, x16, #0xf30
  40265c:	br	x17

0000000000402660 <strstrip@plt>:
  402660:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402664:	ldr	x17, [x16, #3896]
  402668:	add	x16, x16, #0xf38
  40266c:	br	x17

0000000000402670 <first_word@plt>:
  402670:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402674:	ldr	x17, [x16, #3904]
  402678:	add	x16, x16, #0xf40
  40267c:	br	x17

0000000000402680 <strv_split_extract@plt>:
  402680:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402684:	ldr	x17, [x16, #3912]
  402688:	add	x16, x16, #0xf48
  40268c:	br	x17

0000000000402690 <safe_fclose@plt>:
  402690:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402694:	ldr	x17, [x16, #3920]
  402698:	add	x16, x16, #0xf50
  40269c:	br	x17

00000000004026a0 <read_line_full@plt>:
  4026a0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4026a4:	ldr	x17, [x16, #3928]
  4026a8:	add	x16, x16, #0xf58
  4026ac:	br	x17

00000000004026b0 <strv_env_set@plt>:
  4026b0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4026b4:	ldr	x17, [x16, #3936]
  4026b8:	add	x16, x16, #0xf60
  4026bc:	br	x17

00000000004026c0 <unlink@plt>:
  4026c0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4026c4:	ldr	x17, [x16, #3944]
  4026c8:	add	x16, x16, #0xf68
  4026cc:	br	x17

00000000004026d0 <write_env_file_label@plt>:
  4026d0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4026d4:	ldr	x17, [x16, #3952]
  4026d8:	add	x16, x16, #0xf70
  4026dc:	br	x17

00000000004026e0 <load_env_file@plt>:
  4026e0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4026e4:	ldr	x17, [x16, #3960]
  4026e8:	add	x16, x16, #0xf78
  4026ec:	br	x17

00000000004026f0 <strv_env_unset@plt>:
  4026f0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4026f4:	ldr	x17, [x16, #3968]
  4026f8:	add	x16, x16, #0xf80
  4026fc:	br	x17

0000000000402700 <mkdir_p_label@plt>:
  402700:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402704:	ldr	x17, [x16, #3976]
  402708:	add	x16, x16, #0xf88
  40270c:	br	x17

0000000000402710 <fopen_temporary@plt>:
  402710:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402714:	ldr	x17, [x16, #3984]
  402718:	add	x16, x16, #0xf90
  40271c:	br	x17

0000000000402720 <fileno@plt>:
  402720:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402724:	ldr	x17, [x16, #3992]
  402728:	add	x16, x16, #0xf98
  40272c:	br	x17

0000000000402730 <fchmod@plt>:
  402730:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402734:	ldr	x17, [x16, #4000]
  402738:	add	x16, x16, #0xfa0
  40273c:	br	x17

0000000000402740 <fputs@plt>:
  402740:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402744:	ldr	x17, [x16, #4008]
  402748:	add	x16, x16, #0xfa8
  40274c:	br	x17

0000000000402750 <fprintf@plt>:
  402750:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402754:	ldr	x17, [x16, #4016]
  402758:	add	x16, x16, #0xfb0
  40275c:	br	x17

0000000000402760 <fflush_sync_and_check@plt>:
  402760:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402764:	ldr	x17, [x16, #4024]
  402768:	add	x16, x16, #0xfb8
  40276c:	br	x17

0000000000402770 <rename@plt>:
  402770:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402774:	ldr	x17, [x16, #4032]
  402778:	add	x16, x16, #0xfc0
  40277c:	br	x17

0000000000402780 <access@plt>:
  402780:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402784:	ldr	x17, [x16, #4040]
  402788:	add	x16, x16, #0xfc8
  40278c:	br	x17

0000000000402790 <strcspn@plt>:
  402790:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  402794:	ldr	x17, [x16, #4048]
  402798:	add	x16, x16, #0xfd0
  40279c:	br	x17

00000000004027a0 <strndup@plt>:
  4027a0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4027a4:	ldr	x17, [x16, #4056]
  4027a8:	add	x16, x16, #0xfd8
  4027ac:	br	x17

00000000004027b0 <strnlen@plt>:
  4027b0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4027b4:	ldr	x17, [x16, #4064]
  4027b8:	add	x16, x16, #0xfe0
  4027bc:	br	x17

00000000004027c0 <memcpy@plt>:
  4027c0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4027c4:	ldr	x17, [x16, #4072]
  4027c8:	add	x16, x16, #0xfe8
  4027cc:	br	x17

00000000004027d0 <__xstat64@plt>:
  4027d0:	adrp	x16, 41f000 <__FRAME_END__+0x14508>
  4027d4:	ldr	x17, [x16, #4080]
  4027d8:	add	x16, x16, #0xff0
  4027dc:	br	x17

Disassembly of section .text:

00000000004027e0 <_start>:
  4027e0:	mov	x29, #0x0                   	// #0
  4027e4:	mov	x30, #0x0                   	// #0
  4027e8:	mov	x5, x0
  4027ec:	ldr	x1, [sp]
  4027f0:	add	x2, sp, #0x8
  4027f4:	mov	x6, sp
  4027f8:	movz	x0, #0x0, lsl #48
  4027fc:	movk	x0, #0x0, lsl #32
  402800:	movk	x0, #0x40, lsl #16
  402804:	movk	x0, #0x29a8
  402808:	movz	x3, #0x0, lsl #48
  40280c:	movk	x3, #0x0, lsl #32
  402810:	movk	x3, #0x40, lsl #16
  402814:	movk	x3, #0x9330
  402818:	movz	x4, #0x0, lsl #48
  40281c:	movk	x4, #0x0, lsl #32
  402820:	movk	x4, #0x40, lsl #16
  402824:	movk	x4, #0x93b0
  402828:	bl	4021f0 <__libc_start_main@plt>
  40282c:	bl	402200 <abort@plt>

0000000000402830 <call_weak_fn>:
  402830:	adrp	x0, 41f000 <__FRAME_END__+0x14508>
  402834:	ldr	x0, [x0, #3280]
  402838:	cbz	x0, 402840 <call_weak_fn+0x10>
  40283c:	b	402210 <__gmon_start__@plt>
  402840:	ret

0000000000402844 <deregister_tm_clones>:
  402844:	stp	x29, x30, [sp, #-32]!
  402848:	mov	x29, sp
  40284c:	adrp	x0, 420000 <completed.8445>
  402850:	add	x0, x0, #0x0
  402854:	str	x0, [sp, #24]
  402858:	ldr	x0, [sp, #24]
  40285c:	str	x0, [sp, #24]
  402860:	ldr	x1, [sp, #24]
  402864:	adrp	x0, 420000 <completed.8445>
  402868:	add	x0, x0, #0x0
  40286c:	cmp	x1, x0
  402870:	b.eq	4028ac <deregister_tm_clones+0x68>  // b.none
  402874:	adrp	x0, 409000 <x11_convert_to_vconsole+0x104>
  402878:	add	x0, x0, #0x3e0
  40287c:	ldr	x0, [x0]
  402880:	str	x0, [sp, #16]
  402884:	ldr	x0, [sp, #16]
  402888:	str	x0, [sp, #16]
  40288c:	ldr	x0, [sp, #16]
  402890:	cmp	x0, #0x0
  402894:	b.eq	4028b0 <deregister_tm_clones+0x6c>  // b.none
  402898:	ldr	x1, [sp, #16]
  40289c:	adrp	x0, 420000 <completed.8445>
  4028a0:	add	x0, x0, #0x0
  4028a4:	blr	x1
  4028a8:	b	4028b0 <deregister_tm_clones+0x6c>
  4028ac:	nop
  4028b0:	ldp	x29, x30, [sp], #32
  4028b4:	ret

00000000004028b8 <register_tm_clones>:
  4028b8:	stp	x29, x30, [sp, #-48]!
  4028bc:	mov	x29, sp
  4028c0:	adrp	x0, 420000 <completed.8445>
  4028c4:	add	x0, x0, #0x0
  4028c8:	str	x0, [sp, #40]
  4028cc:	ldr	x0, [sp, #40]
  4028d0:	str	x0, [sp, #40]
  4028d4:	ldr	x1, [sp, #40]
  4028d8:	adrp	x0, 420000 <completed.8445>
  4028dc:	add	x0, x0, #0x0
  4028e0:	sub	x0, x1, x0
  4028e4:	asr	x0, x0, #3
  4028e8:	lsr	x1, x0, #63
  4028ec:	add	x0, x1, x0
  4028f0:	asr	x0, x0, #1
  4028f4:	str	x0, [sp, #32]
  4028f8:	ldr	x0, [sp, #32]
  4028fc:	cmp	x0, #0x0
  402900:	b.eq	402940 <register_tm_clones+0x88>  // b.none
  402904:	adrp	x0, 409000 <x11_convert_to_vconsole+0x104>
  402908:	add	x0, x0, #0x3e8
  40290c:	ldr	x0, [x0]
  402910:	str	x0, [sp, #24]
  402914:	ldr	x0, [sp, #24]
  402918:	str	x0, [sp, #24]
  40291c:	ldr	x0, [sp, #24]
  402920:	cmp	x0, #0x0
  402924:	b.eq	402944 <register_tm_clones+0x8c>  // b.none
  402928:	ldr	x2, [sp, #24]
  40292c:	ldr	x1, [sp, #32]
  402930:	adrp	x0, 420000 <completed.8445>
  402934:	add	x0, x0, #0x0
  402938:	blr	x2
  40293c:	b	402944 <register_tm_clones+0x8c>
  402940:	nop
  402944:	ldp	x29, x30, [sp], #48
  402948:	ret

000000000040294c <__do_global_dtors_aux>:
  40294c:	stp	x29, x30, [sp, #-16]!
  402950:	mov	x29, sp
  402954:	adrp	x0, 420000 <completed.8445>
  402958:	add	x0, x0, #0x0
  40295c:	ldrb	w0, [x0]
  402960:	and	x0, x0, #0xff
  402964:	cmp	x0, #0x0
  402968:	b.ne	402984 <__do_global_dtors_aux+0x38>  // b.any
  40296c:	bl	402844 <deregister_tm_clones>
  402970:	adrp	x0, 420000 <completed.8445>
  402974:	add	x0, x0, #0x0
  402978:	mov	w1, #0x1                   	// #1
  40297c:	strb	w1, [x0]
  402980:	b	402988 <__do_global_dtors_aux+0x3c>
  402984:	nop
  402988:	ldp	x29, x30, [sp], #16
  40298c:	ret

0000000000402990 <frame_dummy>:
  402990:	stp	x29, x30, [sp, #-16]!
  402994:	mov	x29, sp
  402998:	bl	4028b8 <register_tm_clones>
  40299c:	nop
  4029a0:	ldp	x29, x30, [sp], #16
  4029a4:	ret

00000000004029a8 <main>:
  4029a8:	sub	sp, sp, #0x30
  4029ac:	stp	x29, x30, [sp, #32]
  4029b0:	add	x29, sp, #0x20
  4029b4:	mov	w8, wzr
  4029b8:	mov	w9, #0x1                   	// #1
  4029bc:	stur	wzr, [x29, #-4]
  4029c0:	stur	w0, [x29, #-8]
  4029c4:	str	x1, [sp, #16]
  4029c8:	ldur	w0, [x29, #-8]
  4029cc:	ldr	x1, [sp, #16]
  4029d0:	str	w8, [sp, #8]
  4029d4:	str	w9, [sp, #4]
  4029d8:	bl	402a20 <save_argc_argv>
  4029dc:	ldur	w0, [x29, #-8]
  4029e0:	ldr	x1, [sp, #16]
  4029e4:	bl	402a54 <run>
  4029e8:	str	w0, [sp, #12]
  4029ec:	bl	402220 <ask_password_agent_close@plt>
  4029f0:	bl	402230 <polkit_agent_close@plt>
  4029f4:	bl	402240 <pager_close@plt>
  4029f8:	bl	402250 <mac_selinux_finish@plt>
  4029fc:	bl	402f58 <static_destruct>
  402a00:	ldr	w8, [sp, #12]
  402a04:	cmp	w8, #0x0
  402a08:	ldr	w8, [sp, #4]
  402a0c:	ldr	w9, [sp, #8]
  402a10:	csel	w0, w8, w9, lt  // lt = tstop
  402a14:	ldp	x29, x30, [sp, #32]
  402a18:	add	sp, sp, #0x30
  402a1c:	ret

0000000000402a20 <save_argc_argv>:
  402a20:	sub	sp, sp, #0x10
  402a24:	adrp	x8, 420000 <completed.8445>
  402a28:	add	x8, x8, #0x8
  402a2c:	adrp	x9, 420000 <completed.8445>
  402a30:	add	x9, x9, #0x10
  402a34:	str	w0, [sp, #12]
  402a38:	str	x1, [sp]
  402a3c:	ldr	w10, [sp, #12]
  402a40:	str	w10, [x8]
  402a44:	ldr	x8, [sp]
  402a48:	str	x8, [x9]
  402a4c:	add	sp, sp, #0x10
  402a50:	ret

0000000000402a54 <run>:
  402a54:	sub	sp, sp, #0x1b0
  402a58:	stp	x29, x30, [sp, #400]
  402a5c:	str	x28, [sp, #416]
  402a60:	add	x29, sp, #0x190
  402a64:	mov	x2, #0xd8                  	// #216
  402a68:	mov	x8, #0xffffffffffffffff    	// #-1
  402a6c:	mov	x9, xzr
  402a70:	mov	w10, #0x12                  	// #18
  402a74:	mov	w11, wzr
  402a78:	adrp	x12, 409000 <x11_convert_to_vconsole+0x104>
  402a7c:	add	x12, x12, #0x698
  402a80:	add	x12, x12, #0x3
  402a84:	adrp	x13, 409000 <x11_convert_to_vconsole+0x104>
  402a88:	add	x13, x13, #0x6b0
  402a8c:	add	x14, sp, #0xa8
  402a90:	stur	w0, [x29, #-8]
  402a94:	stur	x1, [x29, #-16]
  402a98:	mov	x0, x14
  402a9c:	mov	w1, w11
  402aa0:	str	x8, [sp, #56]
  402aa4:	str	x9, [sp, #48]
  402aa8:	str	w10, [sp, #44]
  402aac:	str	x12, [sp, #32]
  402ab0:	str	x13, [sp, #24]
  402ab4:	bl	402260 <memset@plt>
  402ab8:	ldr	x8, [sp, #56]
  402abc:	str	x8, [sp, #176]
  402ac0:	str	x8, [sp, #304]
  402ac4:	str	x8, [sp, #352]
  402ac8:	ldr	x9, [sp, #48]
  402acc:	str	x9, [sp, #160]
  402ad0:	str	x9, [sp, #152]
  402ad4:	bl	402270 <log_setup_service@plt>
  402ad8:	ldr	w0, [sp, #44]
  402adc:	bl	402280 <umask@plt>
  402ae0:	bl	402290 <mac_selinux_init@plt>
  402ae4:	ldur	w10, [x29, #-8]
  402ae8:	cmp	w10, #0x1
  402aec:	b.eq	402b80 <run+0x12c>  // b.none
  402af0:	mov	w8, #0x3                   	// #3
  402af4:	str	w8, [sp, #144]
  402af8:	mov	w8, #0x16                  	// #22
  402afc:	movk	w8, #0x4000, lsl #16
  402b00:	str	w8, [sp, #140]
  402b04:	str	wzr, [sp, #136]
  402b08:	ldr	w0, [sp, #136]
  402b0c:	bl	4022a0 <log_get_max_level_realm@plt>
  402b10:	ldr	w8, [sp, #144]
  402b14:	and	w8, w8, #0x7
  402b18:	cmp	w0, w8
  402b1c:	b.lt	402b50 <run+0xfc>  // b.tstop
  402b20:	ldr	w8, [sp, #136]
  402b24:	ldr	w9, [sp, #144]
  402b28:	orr	w0, w9, w8, lsl #10
  402b2c:	ldr	w1, [sp, #140]
  402b30:	ldr	x2, [sp, #32]
  402b34:	mov	w3, #0x2da                 	// #730
  402b38:	ldr	x4, [sp, #24]
  402b3c:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  402b40:	add	x5, x5, #0x6b4
  402b44:	bl	4022b0 <log_internal_realm@plt>
  402b48:	str	w0, [sp, #20]
  402b4c:	b	402b64 <run+0x110>
  402b50:	ldr	w0, [sp, #140]
  402b54:	bl	4022c0 <abs@plt>
  402b58:	mov	w8, wzr
  402b5c:	subs	w8, w8, w0, uxtb
  402b60:	str	w8, [sp, #20]
  402b64:	ldr	w8, [sp, #20]
  402b68:	str	w8, [sp, #132]
  402b6c:	ldr	w8, [sp, #132]
  402b70:	stur	w8, [x29, #-4]
  402b74:	mov	w8, #0x1                   	// #1
  402b78:	str	w8, [sp, #128]
  402b7c:	b	402f2c <run+0x4d8>
  402b80:	mov	w8, wzr
  402b84:	mov	w0, w8
  402b88:	mov	x9, xzr
  402b8c:	mov	x1, x9
  402b90:	mov	w2, #0xf                   	// #15
  402b94:	mov	w3, #0x2                   	// #2
  402b98:	mov	w4, #0xffffffff            	// #-1
  402b9c:	bl	4022d0 <sigprocmask_many@plt>
  402ba0:	cmp	w0, #0x0
  402ba4:	cset	w8, ge  // ge = tcont
  402ba8:	mov	w10, #0x1                   	// #1
  402bac:	eor	w8, w8, #0x1
  402bb0:	eor	w8, w8, w10
  402bb4:	eor	w8, w8, w10
  402bb8:	and	w8, w8, #0x1
  402bbc:	mov	w1, w8
  402bc0:	sxtw	x9, w1
  402bc4:	cbz	x9, 402bec <run+0x198>
  402bc8:	mov	w8, wzr
  402bcc:	mov	w0, w8
  402bd0:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  402bd4:	add	x1, x1, #0x6d5
  402bd8:	ldr	x2, [sp, #32]
  402bdc:	mov	w3, #0x2dc                 	// #732
  402be0:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  402be4:	add	x4, x4, #0x711
  402be8:	bl	4022e0 <log_assert_failed_realm@plt>
  402bec:	add	x0, sp, #0xa0
  402bf0:	bl	4022f0 <sd_event_default@plt>
  402bf4:	str	w0, [sp, #148]
  402bf8:	ldr	w8, [sp, #148]
  402bfc:	cmp	w8, #0x0
  402c00:	cset	w8, ge  // ge = tcont
  402c04:	tbnz	w8, #0, 402c94 <run+0x240>
  402c08:	mov	w8, #0x3                   	// #3
  402c0c:	str	w8, [sp, #124]
  402c10:	ldr	w8, [sp, #148]
  402c14:	str	w8, [sp, #120]
  402c18:	str	wzr, [sp, #116]
  402c1c:	ldr	w0, [sp, #116]
  402c20:	bl	4022a0 <log_get_max_level_realm@plt>
  402c24:	ldr	w8, [sp, #124]
  402c28:	and	w8, w8, #0x7
  402c2c:	cmp	w0, w8
  402c30:	b.lt	402c64 <run+0x210>  // b.tstop
  402c34:	ldr	w8, [sp, #116]
  402c38:	ldr	w9, [sp, #124]
  402c3c:	orr	w0, w9, w8, lsl #10
  402c40:	ldr	w1, [sp, #120]
  402c44:	ldr	x2, [sp, #32]
  402c48:	mov	w3, #0x2e0                 	// #736
  402c4c:	ldr	x4, [sp, #24]
  402c50:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  402c54:	add	x5, x5, #0x727
  402c58:	bl	4022b0 <log_internal_realm@plt>
  402c5c:	str	w0, [sp, #16]
  402c60:	b	402c78 <run+0x224>
  402c64:	ldr	w0, [sp, #120]
  402c68:	bl	4022c0 <abs@plt>
  402c6c:	mov	w8, wzr
  402c70:	subs	w8, w8, w0, uxtb
  402c74:	str	w8, [sp, #16]
  402c78:	ldr	w8, [sp, #16]
  402c7c:	str	w8, [sp, #112]
  402c80:	ldr	w8, [sp, #112]
  402c84:	stur	w8, [x29, #-4]
  402c88:	mov	w8, #0x1                   	// #1
  402c8c:	str	w8, [sp, #128]
  402c90:	b	402f2c <run+0x4d8>
  402c94:	ldr	x0, [sp, #160]
  402c98:	mov	w1, #0x1                   	// #1
  402c9c:	bl	402300 <sd_event_set_watchdog@plt>
  402ca0:	ldr	x8, [sp, #160]
  402ca4:	mov	x0, x8
  402ca8:	mov	x8, xzr
  402cac:	mov	x2, x8
  402cb0:	mov	x1, x2
  402cb4:	mov	w2, #0x2                   	// #2
  402cb8:	mov	x3, x8
  402cbc:	mov	x4, x8
  402cc0:	bl	402310 <sd_event_add_signal@plt>
  402cc4:	str	w0, [sp, #148]
  402cc8:	ldr	w9, [sp, #148]
  402ccc:	cmp	w9, #0x0
  402cd0:	cset	w9, ge  // ge = tcont
  402cd4:	tbnz	w9, #0, 402d64 <run+0x310>
  402cd8:	mov	w8, #0x3                   	// #3
  402cdc:	str	w8, [sp, #108]
  402ce0:	ldr	w8, [sp, #148]
  402ce4:	str	w8, [sp, #104]
  402ce8:	str	wzr, [sp, #100]
  402cec:	ldr	w0, [sp, #100]
  402cf0:	bl	4022a0 <log_get_max_level_realm@plt>
  402cf4:	ldr	w8, [sp, #108]
  402cf8:	and	w8, w8, #0x7
  402cfc:	cmp	w0, w8
  402d00:	b.lt	402d34 <run+0x2e0>  // b.tstop
  402d04:	ldr	w8, [sp, #100]
  402d08:	ldr	w9, [sp, #108]
  402d0c:	orr	w0, w9, w8, lsl #10
  402d10:	ldr	w1, [sp, #104]
  402d14:	ldr	x2, [sp, #32]
  402d18:	mov	w3, #0x2e6                 	// #742
  402d1c:	ldr	x4, [sp, #24]
  402d20:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  402d24:	add	x5, x5, #0x749
  402d28:	bl	4022b0 <log_internal_realm@plt>
  402d2c:	str	w0, [sp, #12]
  402d30:	b	402d48 <run+0x2f4>
  402d34:	ldr	w0, [sp, #104]
  402d38:	bl	4022c0 <abs@plt>
  402d3c:	mov	w8, wzr
  402d40:	subs	w8, w8, w0, uxtb
  402d44:	str	w8, [sp, #12]
  402d48:	ldr	w8, [sp, #12]
  402d4c:	str	w8, [sp, #96]
  402d50:	ldr	w8, [sp, #96]
  402d54:	stur	w8, [x29, #-4]
  402d58:	mov	w8, #0x1                   	// #1
  402d5c:	str	w8, [sp, #128]
  402d60:	b	402f2c <run+0x4d8>
  402d64:	ldr	x0, [sp, #160]
  402d68:	mov	x8, xzr
  402d6c:	mov	x1, x8
  402d70:	mov	w2, #0xf                   	// #15
  402d74:	mov	x3, x8
  402d78:	mov	x4, x8
  402d7c:	bl	402310 <sd_event_add_signal@plt>
  402d80:	str	w0, [sp, #148]
  402d84:	ldr	w9, [sp, #148]
  402d88:	cmp	w9, #0x0
  402d8c:	cset	w9, ge  // ge = tcont
  402d90:	tbnz	w9, #0, 402e20 <run+0x3cc>
  402d94:	mov	w8, #0x3                   	// #3
  402d98:	str	w8, [sp, #92]
  402d9c:	ldr	w8, [sp, #148]
  402da0:	str	w8, [sp, #88]
  402da4:	str	wzr, [sp, #84]
  402da8:	ldr	w0, [sp, #84]
  402dac:	bl	4022a0 <log_get_max_level_realm@plt>
  402db0:	ldr	w8, [sp, #92]
  402db4:	and	w8, w8, #0x7
  402db8:	cmp	w0, w8
  402dbc:	b.lt	402df0 <run+0x39c>  // b.tstop
  402dc0:	ldr	w8, [sp, #84]
  402dc4:	ldr	w9, [sp, #92]
  402dc8:	orr	w0, w9, w8, lsl #10
  402dcc:	ldr	w1, [sp, #88]
  402dd0:	ldr	x2, [sp, #32]
  402dd4:	mov	w3, #0x2ea                 	// #746
  402dd8:	ldr	x4, [sp, #24]
  402ddc:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  402de0:	add	x5, x5, #0x76e
  402de4:	bl	4022b0 <log_internal_realm@plt>
  402de8:	str	w0, [sp, #8]
  402dec:	b	402e04 <run+0x3b0>
  402df0:	ldr	w0, [sp, #88]
  402df4:	bl	4022c0 <abs@plt>
  402df8:	mov	w8, wzr
  402dfc:	subs	w8, w8, w0, uxtb
  402e00:	str	w8, [sp, #8]
  402e04:	ldr	w8, [sp, #8]
  402e08:	str	w8, [sp, #80]
  402e0c:	ldr	w8, [sp, #80]
  402e10:	stur	w8, [x29, #-4]
  402e14:	mov	w8, #0x1                   	// #1
  402e18:	str	w8, [sp, #128]
  402e1c:	b	402f2c <run+0x4d8>
  402e20:	ldr	x1, [sp, #160]
  402e24:	add	x0, sp, #0xa8
  402e28:	add	x2, sp, #0x98
  402e2c:	bl	403040 <connect_bus>
  402e30:	str	w0, [sp, #148]
  402e34:	ldr	w8, [sp, #148]
  402e38:	cmp	w8, #0x0
  402e3c:	cset	w8, ge  // ge = tcont
  402e40:	tbnz	w8, #0, 402e58 <run+0x404>
  402e44:	ldr	w8, [sp, #148]
  402e48:	stur	w8, [x29, #-4]
  402e4c:	mov	w8, #0x1                   	// #1
  402e50:	str	w8, [sp, #128]
  402e54:	b	402f2c <run+0x4d8>
  402e58:	ldr	x0, [sp, #160]
  402e5c:	ldr	x1, [sp, #152]
  402e60:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  402e64:	add	x2, x2, #0x794
  402e68:	mov	x3, #0xc380                	// #50048
  402e6c:	movk	x3, #0x1c9, lsl #16
  402e70:	mov	x8, xzr
  402e74:	mov	x4, x8
  402e78:	mov	x5, x8
  402e7c:	bl	402320 <bus_event_loop_with_idle@plt>
  402e80:	str	w0, [sp, #148]
  402e84:	ldr	w9, [sp, #148]
  402e88:	cmp	w9, #0x0
  402e8c:	cset	w9, ge  // ge = tcont
  402e90:	tbnz	w9, #0, 402f20 <run+0x4cc>
  402e94:	mov	w8, #0x3                   	// #3
  402e98:	str	w8, [sp, #76]
  402e9c:	ldr	w8, [sp, #148]
  402ea0:	str	w8, [sp, #72]
  402ea4:	str	wzr, [sp, #68]
  402ea8:	ldr	w0, [sp, #68]
  402eac:	bl	4022a0 <log_get_max_level_realm@plt>
  402eb0:	ldr	w8, [sp, #76]
  402eb4:	and	w8, w8, #0x7
  402eb8:	cmp	w0, w8
  402ebc:	b.lt	402ef0 <run+0x49c>  // b.tstop
  402ec0:	ldr	w8, [sp, #68]
  402ec4:	ldr	w9, [sp, #76]
  402ec8:	orr	w0, w9, w8, lsl #10
  402ecc:	ldr	w1, [sp, #72]
  402ed0:	ldr	x2, [sp, #32]
  402ed4:	mov	w3, #0x2f2                 	// #754
  402ed8:	ldr	x4, [sp, #24]
  402edc:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  402ee0:	add	x5, x5, #0x7ac
  402ee4:	bl	4022b0 <log_internal_realm@plt>
  402ee8:	str	w0, [sp, #4]
  402eec:	b	402f04 <run+0x4b0>
  402ef0:	ldr	w0, [sp, #72]
  402ef4:	bl	4022c0 <abs@plt>
  402ef8:	mov	w8, wzr
  402efc:	subs	w8, w8, w0, uxtb
  402f00:	str	w8, [sp, #4]
  402f04:	ldr	w8, [sp, #4]
  402f08:	str	w8, [sp, #64]
  402f0c:	ldr	w8, [sp, #64]
  402f10:	stur	w8, [x29, #-4]
  402f14:	mov	w8, #0x1                   	// #1
  402f18:	str	w8, [sp, #128]
  402f1c:	b	402f2c <run+0x4d8>
  402f20:	stur	wzr, [x29, #-4]
  402f24:	mov	w8, #0x1                   	// #1
  402f28:	str	w8, [sp, #128]
  402f2c:	add	x0, sp, #0x98
  402f30:	bl	40300c <sd_bus_flush_close_unrefp>
  402f34:	add	x0, sp, #0xa0
  402f38:	bl	402fd8 <sd_event_unrefp>
  402f3c:	add	x0, sp, #0xa8
  402f40:	bl	405fe0 <context_clear>
  402f44:	ldur	w0, [x29, #-4]
  402f48:	ldr	x28, [sp, #416]
  402f4c:	ldp	x29, x30, [sp, #400]
  402f50:	add	sp, sp, #0x1b0
  402f54:	ret

0000000000402f58 <static_destruct>:
  402f58:	sub	sp, sp, #0x20
  402f5c:	stp	x29, x30, [sp, #16]
  402f60:	add	x29, sp, #0x10
  402f64:	adrp	x8, 41f000 <__FRAME_END__+0x14508>
  402f68:	ldr	x8, [x8, #3288]
  402f6c:	str	x8, [sp]
  402f70:	cbnz	x8, 402f78 <static_destruct+0x20>
  402f74:	b	402fcc <static_destruct+0x74>
  402f78:	ldr	x0, [sp]
  402f7c:	mov	x1, #0x8                   	// #8
  402f80:	bl	405fb0 <ALIGN_TO>
  402f84:	str	x0, [sp, #8]
  402f88:	ldr	x8, [sp, #8]
  402f8c:	adrp	x9, 41f000 <__FRAME_END__+0x14508>
  402f90:	ldr	x9, [x9, #3296]
  402f94:	cmp	x8, x9
  402f98:	b.cs	402fcc <static_destruct+0x74>  // b.hs, b.nlast
  402f9c:	ldr	x8, [sp, #8]
  402fa0:	ldr	x8, [x8, #8]
  402fa4:	ldr	x9, [sp, #8]
  402fa8:	ldr	x0, [x9]
  402fac:	blr	x8
  402fb0:	ldr	x8, [sp, #8]
  402fb4:	add	x8, x8, #0x10
  402fb8:	mov	x0, x8
  402fbc:	mov	x1, #0x8                   	// #8
  402fc0:	bl	405fb0 <ALIGN_TO>
  402fc4:	str	x0, [sp, #8]
  402fc8:	b	402f88 <static_destruct+0x30>
  402fcc:	ldp	x29, x30, [sp, #16]
  402fd0:	add	sp, sp, #0x20
  402fd4:	ret

0000000000402fd8 <sd_event_unrefp>:
  402fd8:	sub	sp, sp, #0x20
  402fdc:	stp	x29, x30, [sp, #16]
  402fe0:	add	x29, sp, #0x10
  402fe4:	str	x0, [sp, #8]
  402fe8:	ldr	x8, [sp, #8]
  402fec:	ldr	x8, [x8]
  402ff0:	cbz	x8, 403000 <sd_event_unrefp+0x28>
  402ff4:	ldr	x8, [sp, #8]
  402ff8:	ldr	x0, [x8]
  402ffc:	bl	402330 <sd_event_unref@plt>
  403000:	ldp	x29, x30, [sp, #16]
  403004:	add	sp, sp, #0x20
  403008:	ret

000000000040300c <sd_bus_flush_close_unrefp>:
  40300c:	sub	sp, sp, #0x20
  403010:	stp	x29, x30, [sp, #16]
  403014:	add	x29, sp, #0x10
  403018:	str	x0, [sp, #8]
  40301c:	ldr	x8, [sp, #8]
  403020:	ldr	x8, [x8]
  403024:	cbz	x8, 403034 <sd_bus_flush_close_unrefp+0x28>
  403028:	ldr	x8, [sp, #8]
  40302c:	ldr	x0, [x8]
  403030:	bl	402340 <sd_bus_flush_close_unref@plt>
  403034:	ldp	x29, x30, [sp, #16]
  403038:	add	sp, sp, #0x20
  40303c:	ret

0000000000403040 <connect_bus>:
  403040:	sub	sp, sp, #0xc0
  403044:	stp	x29, x30, [sp, #176]
  403048:	add	x29, sp, #0xb0
  40304c:	mov	x8, xzr
  403050:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  403054:	add	x9, x9, #0x698
  403058:	add	x9, x9, #0x3
  40305c:	adrp	x10, 409000 <x11_convert_to_vconsole+0x104>
  403060:	add	x10, x10, #0x808
  403064:	adrp	x11, 409000 <x11_convert_to_vconsole+0x104>
  403068:	add	x11, x11, #0x7cb
  40306c:	stur	x0, [x29, #-16]
  403070:	stur	x1, [x29, #-24]
  403074:	stur	x2, [x29, #-32]
  403078:	stur	x8, [x29, #-40]
  40307c:	str	x9, [sp, #40]
  403080:	str	x10, [sp, #32]
  403084:	str	x11, [sp, #24]
  403088:	ldur	x8, [x29, #-16]
  40308c:	cmp	x8, #0x0
  403090:	cset	w9, ne  // ne = any
  403094:	mov	w10, #0x1                   	// #1
  403098:	eor	w9, w9, #0x1
  40309c:	eor	w9, w9, w10
  4030a0:	eor	w9, w9, w10
  4030a4:	and	w9, w9, #0x1
  4030a8:	mov	w0, w9
  4030ac:	sxtw	x8, w0
  4030b0:	cbz	x8, 4030d4 <connect_bus+0x94>
  4030b4:	mov	w8, wzr
  4030b8:	mov	w0, w8
  4030bc:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  4030c0:	add	x1, x1, #0x7c9
  4030c4:	ldr	x2, [sp, #40]
  4030c8:	mov	w3, #0x2b1                 	// #689
  4030cc:	ldr	x4, [sp, #24]
  4030d0:	bl	4022e0 <log_assert_failed_realm@plt>
  4030d4:	ldur	x8, [x29, #-24]
  4030d8:	cmp	x8, #0x0
  4030dc:	cset	w9, ne  // ne = any
  4030e0:	mov	w10, #0x1                   	// #1
  4030e4:	eor	w9, w9, #0x1
  4030e8:	eor	w9, w9, w10
  4030ec:	eor	w9, w9, w10
  4030f0:	and	w9, w9, #0x1
  4030f4:	mov	w0, w9
  4030f8:	sxtw	x8, w0
  4030fc:	cbz	x8, 403120 <connect_bus+0xe0>
  403100:	mov	w8, wzr
  403104:	mov	w0, w8
  403108:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  40310c:	add	x1, x1, #0x7fd
  403110:	ldr	x2, [sp, #40]
  403114:	mov	w3, #0x2b2                 	// #690
  403118:	ldr	x4, [sp, #24]
  40311c:	bl	4022e0 <log_assert_failed_realm@plt>
  403120:	ldur	x8, [x29, #-32]
  403124:	cmp	x8, #0x0
  403128:	cset	w9, ne  // ne = any
  40312c:	mov	w10, #0x1                   	// #1
  403130:	eor	w9, w9, #0x1
  403134:	eor	w9, w9, w10
  403138:	eor	w9, w9, w10
  40313c:	and	w9, w9, #0x1
  403140:	mov	w0, w9
  403144:	sxtw	x8, w0
  403148:	cbz	x8, 40316c <connect_bus+0x12c>
  40314c:	mov	w8, wzr
  403150:	mov	w0, w8
  403154:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403158:	add	x1, x1, #0x803
  40315c:	ldr	x2, [sp, #40]
  403160:	mov	w3, #0x2b3                 	// #691
  403164:	ldr	x4, [sp, #24]
  403168:	bl	4022e0 <log_assert_failed_realm@plt>
  40316c:	sub	x0, x29, #0x28
  403170:	bl	402350 <sd_bus_default_system@plt>
  403174:	stur	w0, [x29, #-44]
  403178:	ldur	w8, [x29, #-44]
  40317c:	cmp	w8, #0x0
  403180:	cset	w8, ge  // ge = tcont
  403184:	tbnz	w8, #0, 403214 <connect_bus+0x1d4>
  403188:	mov	w8, #0x3                   	// #3
  40318c:	stur	w8, [x29, #-48]
  403190:	ldur	w8, [x29, #-44]
  403194:	stur	w8, [x29, #-52]
  403198:	stur	wzr, [x29, #-56]
  40319c:	ldur	w0, [x29, #-56]
  4031a0:	bl	4022a0 <log_get_max_level_realm@plt>
  4031a4:	ldur	w8, [x29, #-48]
  4031a8:	and	w8, w8, #0x7
  4031ac:	cmp	w0, w8
  4031b0:	b.lt	4031e4 <connect_bus+0x1a4>  // b.tstop
  4031b4:	ldur	w8, [x29, #-56]
  4031b8:	ldur	w9, [x29, #-48]
  4031bc:	orr	w0, w9, w8, lsl #10
  4031c0:	ldur	w1, [x29, #-52]
  4031c4:	ldr	x2, [sp, #40]
  4031c8:	mov	w3, #0x2b7                 	// #695
  4031cc:	ldr	x4, [sp, #32]
  4031d0:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  4031d4:	add	x5, x5, #0x814
  4031d8:	bl	4022b0 <log_internal_realm@plt>
  4031dc:	str	w0, [sp, #20]
  4031e0:	b	4031f8 <connect_bus+0x1b8>
  4031e4:	ldur	w0, [x29, #-52]
  4031e8:	bl	4022c0 <abs@plt>
  4031ec:	mov	w8, wzr
  4031f0:	subs	w8, w8, w0, uxtb
  4031f4:	str	w8, [sp, #20]
  4031f8:	ldr	w8, [sp, #20]
  4031fc:	stur	w8, [x29, #-60]
  403200:	ldur	w8, [x29, #-60]
  403204:	stur	w8, [x29, #-4]
  403208:	mov	w8, #0x1                   	// #1
  40320c:	stur	w8, [x29, #-64]
  403210:	b	403488 <connect_bus+0x448>
  403214:	ldur	x0, [x29, #-40]
  403218:	ldur	x5, [x29, #-16]
  40321c:	mov	x8, xzr
  403220:	mov	x1, x8
  403224:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  403228:	add	x2, x2, #0x83c
  40322c:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  403230:	add	x3, x3, #0x794
  403234:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  403238:	add	x4, x4, #0x3f8
  40323c:	bl	402360 <sd_bus_add_object_vtable@plt>
  403240:	stur	w0, [x29, #-44]
  403244:	ldur	w9, [x29, #-44]
  403248:	cmp	w9, #0x0
  40324c:	cset	w9, ge  // ge = tcont
  403250:	tbnz	w9, #0, 4032e0 <connect_bus+0x2a0>
  403254:	mov	w8, #0x3                   	// #3
  403258:	stur	w8, [x29, #-68]
  40325c:	ldur	w8, [x29, #-44]
  403260:	stur	w8, [x29, #-72]
  403264:	stur	wzr, [x29, #-76]
  403268:	ldur	w0, [x29, #-76]
  40326c:	bl	4022a0 <log_get_max_level_realm@plt>
  403270:	ldur	w8, [x29, #-68]
  403274:	and	w8, w8, #0x7
  403278:	cmp	w0, w8
  40327c:	b.lt	4032b0 <connect_bus+0x270>  // b.tstop
  403280:	ldur	w8, [x29, #-76]
  403284:	ldur	w9, [x29, #-68]
  403288:	orr	w0, w9, w8, lsl #10
  40328c:	ldur	w1, [x29, #-72]
  403290:	ldr	x2, [sp, #40]
  403294:	mov	w3, #0x2bb                 	// #699
  403298:	ldr	x4, [sp, #32]
  40329c:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  4032a0:	add	x5, x5, #0x855
  4032a4:	bl	4022b0 <log_internal_realm@plt>
  4032a8:	str	w0, [sp, #16]
  4032ac:	b	4032c4 <connect_bus+0x284>
  4032b0:	ldur	w0, [x29, #-72]
  4032b4:	bl	4022c0 <abs@plt>
  4032b8:	mov	w8, wzr
  4032bc:	subs	w8, w8, w0, uxtb
  4032c0:	str	w8, [sp, #16]
  4032c4:	ldr	w8, [sp, #16]
  4032c8:	stur	w8, [x29, #-80]
  4032cc:	ldur	w8, [x29, #-80]
  4032d0:	stur	w8, [x29, #-4]
  4032d4:	mov	w8, #0x1                   	// #1
  4032d8:	stur	w8, [x29, #-64]
  4032dc:	b	403488 <connect_bus+0x448>
  4032e0:	ldur	x0, [x29, #-40]
  4032e4:	mov	x8, xzr
  4032e8:	mov	x1, x8
  4032ec:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  4032f0:	add	x2, x2, #0x794
  4032f4:	mov	x3, x8
  4032f8:	mov	x4, x8
  4032fc:	mov	x5, x8
  403300:	bl	402370 <sd_bus_request_name_async@plt>
  403304:	stur	w0, [x29, #-44]
  403308:	ldur	w9, [x29, #-44]
  40330c:	cmp	w9, #0x0
  403310:	cset	w9, ge  // ge = tcont
  403314:	tbnz	w9, #0, 4033a4 <connect_bus+0x364>
  403318:	mov	w8, #0x3                   	// #3
  40331c:	stur	w8, [x29, #-84]
  403320:	ldur	w8, [x29, #-44]
  403324:	str	w8, [sp, #88]
  403328:	str	wzr, [sp, #84]
  40332c:	ldr	w0, [sp, #84]
  403330:	bl	4022a0 <log_get_max_level_realm@plt>
  403334:	ldur	w8, [x29, #-84]
  403338:	and	w8, w8, #0x7
  40333c:	cmp	w0, w8
  403340:	b.lt	403374 <connect_bus+0x334>  // b.tstop
  403344:	ldr	w8, [sp, #84]
  403348:	ldur	w9, [x29, #-84]
  40334c:	orr	w0, w9, w8, lsl #10
  403350:	ldr	w1, [sp, #88]
  403354:	ldr	x2, [sp, #40]
  403358:	mov	w3, #0x2bf                 	// #703
  40335c:	ldr	x4, [sp, #32]
  403360:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  403364:	add	x5, x5, #0x873
  403368:	bl	4022b0 <log_internal_realm@plt>
  40336c:	str	w0, [sp, #12]
  403370:	b	403388 <connect_bus+0x348>
  403374:	ldr	w0, [sp, #88]
  403378:	bl	4022c0 <abs@plt>
  40337c:	mov	w8, wzr
  403380:	subs	w8, w8, w0, uxtb
  403384:	str	w8, [sp, #12]
  403388:	ldr	w8, [sp, #12]
  40338c:	str	w8, [sp, #80]
  403390:	ldr	w8, [sp, #80]
  403394:	stur	w8, [x29, #-4]
  403398:	mov	w8, #0x1                   	// #1
  40339c:	stur	w8, [x29, #-64]
  4033a0:	b	403488 <connect_bus+0x448>
  4033a4:	ldur	x0, [x29, #-40]
  4033a8:	ldur	x1, [x29, #-24]
  4033ac:	mov	w8, wzr
  4033b0:	mov	w2, w8
  4033b4:	bl	402380 <sd_bus_attach_event@plt>
  4033b8:	stur	w0, [x29, #-44]
  4033bc:	ldur	w8, [x29, #-44]
  4033c0:	cmp	w8, #0x0
  4033c4:	cset	w8, ge  // ge = tcont
  4033c8:	tbnz	w8, #0, 403458 <connect_bus+0x418>
  4033cc:	mov	w8, #0x3                   	// #3
  4033d0:	str	w8, [sp, #76]
  4033d4:	ldur	w8, [x29, #-44]
  4033d8:	str	w8, [sp, #72]
  4033dc:	str	wzr, [sp, #68]
  4033e0:	ldr	w0, [sp, #68]
  4033e4:	bl	4022a0 <log_get_max_level_realm@plt>
  4033e8:	ldr	w8, [sp, #76]
  4033ec:	and	w8, w8, #0x7
  4033f0:	cmp	w0, w8
  4033f4:	b.lt	403428 <connect_bus+0x3e8>  // b.tstop
  4033f8:	ldr	w8, [sp, #68]
  4033fc:	ldr	w9, [sp, #76]
  403400:	orr	w0, w9, w8, lsl #10
  403404:	ldr	w1, [sp, #72]
  403408:	ldr	x2, [sp, #40]
  40340c:	mov	w3, #0x2c3                 	// #707
  403410:	ldr	x4, [sp, #32]
  403414:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  403418:	add	x5, x5, #0x88e
  40341c:	bl	4022b0 <log_internal_realm@plt>
  403420:	str	w0, [sp, #8]
  403424:	b	40343c <connect_bus+0x3fc>
  403428:	ldr	w0, [sp, #72]
  40342c:	bl	4022c0 <abs@plt>
  403430:	mov	w8, wzr
  403434:	subs	w8, w8, w0, uxtb
  403438:	str	w8, [sp, #8]
  40343c:	ldr	w8, [sp, #8]
  403440:	str	w8, [sp, #64]
  403444:	ldr	w8, [sp, #64]
  403448:	stur	w8, [x29, #-4]
  40344c:	mov	w8, #0x1                   	// #1
  403450:	stur	w8, [x29, #-64]
  403454:	b	403488 <connect_bus+0x448>
  403458:	ldur	x8, [x29, #-40]
  40345c:	str	x8, [sp, #56]
  403460:	mov	x8, xzr
  403464:	stur	x8, [x29, #-40]
  403468:	ldr	x8, [sp, #56]
  40346c:	str	x8, [sp, #48]
  403470:	ldr	x8, [sp, #48]
  403474:	ldur	x9, [x29, #-32]
  403478:	str	x8, [x9]
  40347c:	stur	wzr, [x29, #-4]
  403480:	mov	w10, #0x1                   	// #1
  403484:	stur	w10, [x29, #-64]
  403488:	sub	x0, x29, #0x28
  40348c:	bl	40300c <sd_bus_flush_close_unrefp>
  403490:	ldur	w0, [x29, #-4]
  403494:	ldp	x29, x30, [sp, #176]
  403498:	add	sp, sp, #0xc0
  40349c:	ret

00000000004034a0 <property_get_locale>:
  4034a0:	sub	sp, sp, #0x90
  4034a4:	stp	x29, x30, [sp, #128]
  4034a8:	add	x29, sp, #0x80
  4034ac:	mov	x8, xzr
  4034b0:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  4034b4:	add	x9, x9, #0x698
  4034b8:	add	x9, x9, #0x3
  4034bc:	stur	x0, [x29, #-16]
  4034c0:	stur	x1, [x29, #-24]
  4034c4:	stur	x2, [x29, #-32]
  4034c8:	stur	x3, [x29, #-40]
  4034cc:	stur	x4, [x29, #-48]
  4034d0:	stur	x5, [x29, #-56]
  4034d4:	str	x6, [sp, #64]
  4034d8:	ldur	x10, [x29, #-56]
  4034dc:	str	x10, [sp, #56]
  4034e0:	str	x8, [sp, #48]
  4034e4:	ldr	x0, [sp, #56]
  4034e8:	ldur	x1, [x29, #-48]
  4034ec:	str	x9, [sp, #8]
  4034f0:	bl	4062e8 <locale_read_data>
  4034f4:	str	w0, [sp, #36]
  4034f8:	ldr	w11, [sp, #36]
  4034fc:	cmp	w11, #0x0
  403500:	cset	w11, ge  // ge = tcont
  403504:	tbnz	w11, #0, 40351c <property_get_locale+0x7c>
  403508:	ldr	w8, [sp, #36]
  40350c:	stur	w8, [x29, #-4]
  403510:	mov	w8, #0x1                   	// #1
  403514:	str	w8, [sp, #32]
  403518:	b	403684 <property_get_locale+0x1e4>
  40351c:	mov	x0, #0xf                   	// #15
  403520:	mov	x1, #0x8                   	// #8
  403524:	bl	402390 <calloc@plt>
  403528:	str	x0, [sp, #48]
  40352c:	ldr	x8, [sp, #48]
  403530:	cbnz	x8, 403548 <property_get_locale+0xa8>
  403534:	mov	w8, #0xfffffff4            	// #-12
  403538:	stur	w8, [x29, #-4]
  40353c:	mov	w8, #0x1                   	// #1
  403540:	str	w8, [sp, #32]
  403544:	b	403684 <property_get_locale+0x1e4>
  403548:	str	wzr, [sp, #44]
  40354c:	str	wzr, [sp, #40]
  403550:	ldr	w8, [sp, #44]
  403554:	cmp	w8, #0xe
  403558:	b.ge	40366c <property_get_locale+0x1cc>  // b.tcont
  40355c:	ldr	w0, [sp, #44]
  403560:	bl	4023a0 <locale_variable_to_string@plt>
  403564:	str	x0, [sp, #16]
  403568:	ldr	x8, [sp, #16]
  40356c:	cmp	x8, #0x0
  403570:	cset	w9, ne  // ne = any
  403574:	mov	w10, #0x1                   	// #1
  403578:	eor	w9, w9, #0x1
  40357c:	eor	w9, w9, w10
  403580:	eor	w9, w9, w10
  403584:	and	w9, w9, #0x1
  403588:	mov	w0, w9
  40358c:	sxtw	x8, w0
  403590:	cbz	x8, 4035b8 <property_get_locale+0x118>
  403594:	mov	w8, wzr
  403598:	mov	w0, w8
  40359c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  4035a0:	add	x1, x1, #0x94c
  4035a4:	ldr	x2, [sp, #8]
  4035a8:	mov	w3, #0xc1                  	// #193
  4035ac:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  4035b0:	add	x4, x4, #0x951
  4035b4:	bl	4022e0 <log_assert_failed_realm@plt>
  4035b8:	ldr	x8, [sp, #56]
  4035bc:	add	x8, x8, #0x10
  4035c0:	ldrsw	x9, [sp, #44]
  4035c4:	mov	x10, #0x8                   	// #8
  4035c8:	mul	x9, x10, x9
  4035cc:	add	x8, x8, x9
  4035d0:	ldr	x0, [x8]
  4035d4:	bl	4051d0 <isempty>
  4035d8:	tbnz	w0, #0, 4035e0 <property_get_locale+0x140>
  4035dc:	b	4035e4 <property_get_locale+0x144>
  4035e0:	b	40365c <property_get_locale+0x1bc>
  4035e4:	ldr	x2, [sp, #16]
  4035e8:	ldr	x8, [sp, #56]
  4035ec:	add	x8, x8, #0x10
  4035f0:	ldrsw	x9, [sp, #44]
  4035f4:	mov	x10, #0x8                   	// #8
  4035f8:	mul	x9, x10, x9
  4035fc:	add	x8, x8, x9
  403600:	ldr	x3, [x8]
  403604:	add	x0, sp, #0x18
  403608:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  40360c:	add	x1, x1, #0x9c7
  403610:	bl	4023b0 <asprintf@plt>
  403614:	cmp	w0, #0x0
  403618:	cset	w11, ge  // ge = tcont
  40361c:	tbnz	w11, #0, 403634 <property_get_locale+0x194>
  403620:	mov	w8, #0xfffffff4            	// #-12
  403624:	stur	w8, [x29, #-4]
  403628:	mov	w8, #0x1                   	// #1
  40362c:	str	w8, [sp, #32]
  403630:	b	403684 <property_get_locale+0x1e4>
  403634:	ldr	x8, [sp, #24]
  403638:	ldr	x9, [sp, #48]
  40363c:	ldrsw	x10, [sp, #40]
  403640:	mov	w11, w10
  403644:	add	w11, w11, #0x1
  403648:	str	w11, [sp, #40]
  40364c:	mov	x12, #0x8                   	// #8
  403650:	mul	x10, x12, x10
  403654:	add	x9, x9, x10
  403658:	str	x8, [x9]
  40365c:	ldr	w8, [sp, #44]
  403660:	add	w8, w8, #0x1
  403664:	str	w8, [sp, #44]
  403668:	b	403550 <property_get_locale+0xb0>
  40366c:	ldur	x0, [x29, #-48]
  403670:	ldr	x1, [sp, #48]
  403674:	bl	4023c0 <sd_bus_message_append_strv@plt>
  403678:	stur	w0, [x29, #-4]
  40367c:	mov	w8, #0x1                   	// #1
  403680:	str	w8, [sp, #32]
  403684:	add	x0, sp, #0x30
  403688:	bl	40519c <strv_freep>
  40368c:	ldur	w0, [x29, #-4]
  403690:	ldp	x29, x30, [sp, #128]
  403694:	add	sp, sp, #0x90
  403698:	ret

000000000040369c <property_get_xkb>:
  40369c:	sub	sp, sp, #0x60
  4036a0:	stp	x29, x30, [sp, #80]
  4036a4:	add	x29, sp, #0x50
  4036a8:	stur	x0, [x29, #-16]
  4036ac:	stur	x1, [x29, #-24]
  4036b0:	stur	x2, [x29, #-32]
  4036b4:	str	x3, [sp, #40]
  4036b8:	str	x4, [sp, #32]
  4036bc:	str	x5, [sp, #24]
  4036c0:	str	x6, [sp, #16]
  4036c4:	ldr	x8, [sp, #24]
  4036c8:	str	x8, [sp, #8]
  4036cc:	ldr	x0, [sp, #8]
  4036d0:	ldr	x1, [sp, #32]
  4036d4:	bl	4068e8 <x11_read_data>
  4036d8:	str	w0, [sp, #4]
  4036dc:	ldr	w9, [sp, #4]
  4036e0:	cmp	w9, #0x0
  4036e4:	cset	w9, ge  // ge = tcont
  4036e8:	tbnz	w9, #0, 4036f8 <property_get_xkb+0x5c>
  4036ec:	ldr	w8, [sp, #4]
  4036f0:	stur	w8, [x29, #-4]
  4036f4:	b	4037c0 <property_get_xkb+0x124>
  4036f8:	ldr	x0, [sp, #40]
  4036fc:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403700:	add	x1, x1, #0x8bf
  403704:	bl	4023d0 <strcmp@plt>
  403708:	cbnz	w0, 403728 <property_get_xkb+0x8c>
  40370c:	ldr	x0, [sp, #32]
  403710:	ldr	x8, [sp, #8]
  403714:	ldr	x2, [x8, #144]
  403718:	mov	w1, #0x73                  	// #115
  40371c:	bl	4023e0 <sd_bus_message_append_basic@plt>
  403720:	stur	w0, [x29, #-4]
  403724:	b	4037c0 <property_get_xkb+0x124>
  403728:	ldr	x0, [sp, #40]
  40372c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403730:	add	x1, x1, #0x8cb
  403734:	bl	4023d0 <strcmp@plt>
  403738:	cbnz	w0, 403758 <property_get_xkb+0xbc>
  40373c:	ldr	x0, [sp, #32]
  403740:	ldr	x8, [sp, #8]
  403744:	ldr	x2, [x8, #152]
  403748:	mov	w1, #0x73                  	// #115
  40374c:	bl	4023e0 <sd_bus_message_append_basic@plt>
  403750:	stur	w0, [x29, #-4]
  403754:	b	4037c0 <property_get_xkb+0x124>
  403758:	ldr	x0, [sp, #40]
  40375c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403760:	add	x1, x1, #0x8d4
  403764:	bl	4023d0 <strcmp@plt>
  403768:	cbnz	w0, 403788 <property_get_xkb+0xec>
  40376c:	ldr	x0, [sp, #32]
  403770:	ldr	x8, [sp, #8]
  403774:	ldr	x2, [x8, #160]
  403778:	mov	w1, #0x73                  	// #115
  40377c:	bl	4023e0 <sd_bus_message_append_basic@plt>
  403780:	stur	w0, [x29, #-4]
  403784:	b	4037c0 <property_get_xkb+0x124>
  403788:	ldr	x0, [sp, #40]
  40378c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403790:	add	x1, x1, #0x8df
  403794:	bl	4023d0 <strcmp@plt>
  403798:	cbnz	w0, 4037b8 <property_get_xkb+0x11c>
  40379c:	ldr	x0, [sp, #32]
  4037a0:	ldr	x8, [sp, #8]
  4037a4:	ldr	x2, [x8, #168]
  4037a8:	mov	w1, #0x73                  	// #115
  4037ac:	bl	4023e0 <sd_bus_message_append_basic@plt>
  4037b0:	stur	w0, [x29, #-4]
  4037b4:	b	4037c0 <property_get_xkb+0x124>
  4037b8:	mov	w8, #0xffffffea            	// #-22
  4037bc:	stur	w8, [x29, #-4]
  4037c0:	ldur	w0, [x29, #-4]
  4037c4:	ldp	x29, x30, [sp, #80]
  4037c8:	add	sp, sp, #0x60
  4037cc:	ret

00000000004037d0 <property_get_vconsole>:
  4037d0:	sub	sp, sp, #0x60
  4037d4:	stp	x29, x30, [sp, #80]
  4037d8:	add	x29, sp, #0x50
  4037dc:	stur	x0, [x29, #-16]
  4037e0:	stur	x1, [x29, #-24]
  4037e4:	stur	x2, [x29, #-32]
  4037e8:	str	x3, [sp, #40]
  4037ec:	str	x4, [sp, #32]
  4037f0:	str	x5, [sp, #24]
  4037f4:	str	x6, [sp, #16]
  4037f8:	ldr	x8, [sp, #24]
  4037fc:	str	x8, [sp, #8]
  403800:	ldr	x0, [sp, #8]
  403804:	ldr	x1, [sp, #32]
  403808:	bl	406744 <vconsole_read_data>
  40380c:	str	w0, [sp, #4]
  403810:	ldr	w9, [sp, #4]
  403814:	cmp	w9, #0x0
  403818:	cset	w9, ge  // ge = tcont
  40381c:	tbnz	w9, #0, 40382c <property_get_vconsole+0x5c>
  403820:	ldr	w8, [sp, #4]
  403824:	stur	w8, [x29, #-4]
  403828:	b	403894 <property_get_vconsole+0xc4>
  40382c:	ldr	x0, [sp, #40]
  403830:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403834:	add	x1, x1, #0x8ea
  403838:	bl	4023d0 <strcmp@plt>
  40383c:	cbnz	w0, 40385c <property_get_vconsole+0x8c>
  403840:	ldr	x0, [sp, #32]
  403844:	ldr	x8, [sp, #8]
  403848:	ldr	x2, [x8, #192]
  40384c:	mov	w1, #0x73                  	// #115
  403850:	bl	4023e0 <sd_bus_message_append_basic@plt>
  403854:	stur	w0, [x29, #-4]
  403858:	b	403894 <property_get_vconsole+0xc4>
  40385c:	ldr	x0, [sp, #40]
  403860:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403864:	add	x1, x1, #0x8f9
  403868:	bl	4023d0 <strcmp@plt>
  40386c:	cbnz	w0, 40388c <property_get_vconsole+0xbc>
  403870:	ldr	x0, [sp, #32]
  403874:	ldr	x8, [sp, #8]
  403878:	ldr	x2, [x8, #200]
  40387c:	mov	w1, #0x73                  	// #115
  403880:	bl	4023e0 <sd_bus_message_append_basic@plt>
  403884:	stur	w0, [x29, #-4]
  403888:	b	403894 <property_get_vconsole+0xc4>
  40388c:	mov	w8, #0xffffffea            	// #-22
  403890:	stur	w8, [x29, #-4]
  403894:	ldur	w0, [x29, #-4]
  403898:	ldp	x29, x30, [sp, #80]
  40389c:	add	sp, sp, #0x60
  4038a0:	ret

00000000004038a4 <method_set_locale>:
  4038a4:	stp	x29, x30, [sp, #-32]!
  4038a8:	str	x28, [sp, #16]
  4038ac:	mov	x29, sp
  4038b0:	sub	sp, sp, #0x1e0
  4038b4:	mov	w8, #0x0                   	// #0
  4038b8:	mov	x9, #0x70                  	// #112
  4038bc:	mov	x10, xzr
  4038c0:	mov	w11, wzr
  4038c4:	adrp	x12, 409000 <x11_convert_to_vconsole+0x104>
  4038c8:	add	x12, x12, #0x698
  4038cc:	add	x12, x12, #0x3
  4038d0:	adrp	x13, 409000 <x11_convert_to_vconsole+0x104>
  4038d4:	add	x13, x13, #0xa4b
  4038d8:	adrp	x14, 409000 <x11_convert_to_vconsole+0x104>
  4038dc:	add	x14, x14, #0x9cf
  4038e0:	sub	x15, x29, #0x90
  4038e4:	stur	x0, [x29, #-16]
  4038e8:	stur	x1, [x29, #-24]
  4038ec:	stur	x2, [x29, #-32]
  4038f0:	mov	x0, x15
  4038f4:	mov	w1, w11
  4038f8:	mov	x2, x9
  4038fc:	str	w8, [sp, #140]
  403900:	str	x10, [sp, #128]
  403904:	str	x12, [sp, #120]
  403908:	str	x13, [sp, #112]
  40390c:	str	x14, [sp, #104]
  403910:	bl	402260 <memset@plt>
  403914:	ldr	x9, [sp, #128]
  403918:	stur	x9, [x29, #-152]
  40391c:	stur	x9, [x29, #-160]
  403920:	ldur	x10, [x29, #-24]
  403924:	stur	x10, [x29, #-168]
  403928:	ldr	w8, [sp, #140]
  40392c:	sturb	w8, [x29, #-169]
  403930:	ldur	x8, [x29, #-16]
  403934:	cmp	x8, #0x0
  403938:	cset	w9, ne  // ne = any
  40393c:	mov	w10, #0x1                   	// #1
  403940:	eor	w9, w9, #0x1
  403944:	eor	w9, w9, w10
  403948:	eor	w9, w9, w10
  40394c:	and	w9, w9, #0x1
  403950:	mov	w0, w9
  403954:	sxtw	x8, w0
  403958:	cbz	x8, 40397c <method_set_locale+0xd8>
  40395c:	mov	w8, wzr
  403960:	mov	w0, w8
  403964:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403968:	add	x1, x1, #0x9cd
  40396c:	ldr	x2, [sp, #120]
  403970:	mov	w3, #0x10b                 	// #267
  403974:	ldr	x4, [sp, #104]
  403978:	bl	4022e0 <log_assert_failed_realm@plt>
  40397c:	ldur	x8, [x29, #-168]
  403980:	cmp	x8, #0x0
  403984:	cset	w9, ne  // ne = any
  403988:	mov	w10, #0x1                   	// #1
  40398c:	eor	w9, w9, #0x1
  403990:	eor	w9, w9, w10
  403994:	eor	w9, w9, w10
  403998:	and	w9, w9, #0x1
  40399c:	mov	w0, w9
  4039a0:	sxtw	x8, w0
  4039a4:	cbz	x8, 4039c8 <method_set_locale+0x124>
  4039a8:	mov	w8, wzr
  4039ac:	mov	w0, w8
  4039b0:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  4039b4:	add	x1, x1, #0x7c9
  4039b8:	ldr	x2, [sp, #120]
  4039bc:	mov	w3, #0x10c                 	// #268
  4039c0:	ldr	x4, [sp, #104]
  4039c4:	bl	4022e0 <log_assert_failed_realm@plt>
  4039c8:	ldur	x0, [x29, #-16]
  4039cc:	sub	x1, x29, #0xa0
  4039d0:	bl	4023f0 <bus_message_read_strv_extend@plt>
  4039d4:	stur	w0, [x29, #-184]
  4039d8:	ldur	w8, [x29, #-184]
  4039dc:	cmp	w8, #0x0
  4039e0:	cset	w8, ge  // ge = tcont
  4039e4:	tbnz	w8, #0, 4039fc <method_set_locale+0x158>
  4039e8:	ldur	w8, [x29, #-184]
  4039ec:	stur	w8, [x29, #-4]
  4039f0:	mov	w8, #0x1                   	// #1
  4039f4:	stur	w8, [x29, #-196]
  4039f8:	b	404368 <method_set_locale+0xac4>
  4039fc:	ldur	x0, [x29, #-16]
  403a00:	mov	w1, #0x62                  	// #98
  403a04:	sub	x2, x29, #0xb0
  403a08:	bl	402400 <sd_bus_message_read_basic@plt>
  403a0c:	stur	w0, [x29, #-184]
  403a10:	ldur	w8, [x29, #-184]
  403a14:	cmp	w8, #0x0
  403a18:	cset	w8, ge  // ge = tcont
  403a1c:	tbnz	w8, #0, 403a34 <method_set_locale+0x190>
  403a20:	ldur	w8, [x29, #-184]
  403a24:	stur	w8, [x29, #-4]
  403a28:	mov	w8, #0x1                   	// #1
  403a2c:	stur	w8, [x29, #-196]
  403a30:	b	404368 <method_set_locale+0xac4>
  403a34:	ldur	x0, [x29, #-160]
  403a38:	bl	402410 <strv_length@plt>
  403a3c:	cmp	x0, #0x1
  403a40:	b.ne	403ac8 <method_set_locale+0x224>  // b.any
  403a44:	ldur	x8, [x29, #-160]
  403a48:	ldr	x0, [x8]
  403a4c:	mov	w1, #0x3d                  	// #61
  403a50:	bl	402420 <strchr@plt>
  403a54:	cbnz	x0, 403ac8 <method_set_locale+0x224>
  403a58:	ldur	x8, [x29, #-160]
  403a5c:	ldr	x0, [x8]
  403a60:	bl	402430 <locale_is_valid@plt>
  403a64:	tbnz	w0, #0, 403a90 <method_set_locale+0x1ec>
  403a68:	ldur	x0, [x29, #-32]
  403a6c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403a70:	add	x1, x1, #0xa0f
  403a74:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  403a78:	add	x2, x2, #0xa36
  403a7c:	bl	402440 <sd_bus_error_setf@plt>
  403a80:	stur	w0, [x29, #-4]
  403a84:	mov	w8, #0x1                   	// #1
  403a88:	stur	w8, [x29, #-196]
  403a8c:	b	404368 <method_set_locale+0xac4>
  403a90:	ldur	x8, [x29, #-160]
  403a94:	ldr	x0, [x8]
  403a98:	bl	402450 <strdup@plt>
  403a9c:	stur	x0, [x29, #-144]
  403aa0:	ldur	x8, [x29, #-144]
  403aa4:	cbnz	x8, 403abc <method_set_locale+0x218>
  403aa8:	mov	w8, #0xfffffff4            	// #-12
  403aac:	stur	w8, [x29, #-4]
  403ab0:	mov	w8, #0x1                   	// #1
  403ab4:	stur	w8, [x29, #-196]
  403ab8:	b	404368 <method_set_locale+0xac4>
  403abc:	ldur	x0, [x29, #-160]
  403ac0:	bl	402460 <strv_free@plt>
  403ac4:	stur	x0, [x29, #-160]
  403ac8:	ldur	x8, [x29, #-160]
  403acc:	stur	x8, [x29, #-192]
  403ad0:	ldur	x8, [x29, #-192]
  403ad4:	mov	w9, #0x0                   	// #0
  403ad8:	str	w9, [sp, #100]
  403adc:	cbz	x8, 403af4 <method_set_locale+0x250>
  403ae0:	ldur	x8, [x29, #-192]
  403ae4:	ldr	x8, [x8]
  403ae8:	cmp	x8, #0x0
  403aec:	cset	w9, ne  // ne = any
  403af0:	str	w9, [sp, #100]
  403af4:	ldr	w8, [sp, #100]
  403af8:	tbnz	w8, #0, 403b00 <method_set_locale+0x25c>
  403afc:	b	403c7c <method_set_locale+0x3d8>
  403b00:	mov	w8, #0x0                   	// #0
  403b04:	sturb	w8, [x29, #-197]
  403b08:	stur	wzr, [x29, #-180]
  403b0c:	ldur	w8, [x29, #-180]
  403b10:	cmp	w8, #0xe
  403b14:	b.ge	403c3c <method_set_locale+0x398>  // b.tcont
  403b18:	ldur	w0, [x29, #-180]
  403b1c:	bl	4023a0 <locale_variable_to_string@plt>
  403b20:	stur	x0, [x29, #-216]
  403b24:	ldur	x8, [x29, #-216]
  403b28:	cmp	x8, #0x0
  403b2c:	cset	w9, ne  // ne = any
  403b30:	mov	w10, #0x1                   	// #1
  403b34:	eor	w9, w9, #0x1
  403b38:	eor	w9, w9, w10
  403b3c:	eor	w9, w9, w10
  403b40:	and	w9, w9, #0x1
  403b44:	mov	w0, w9
  403b48:	sxtw	x8, w0
  403b4c:	cbz	x8, 403b70 <method_set_locale+0x2cc>
  403b50:	mov	w8, wzr
  403b54:	mov	w0, w8
  403b58:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403b5c:	add	x1, x1, #0x94c
  403b60:	ldr	x2, [sp, #120]
  403b64:	mov	w3, #0x12b                 	// #299
  403b68:	ldr	x4, [sp, #104]
  403b6c:	bl	4022e0 <log_assert_failed_realm@plt>
  403b70:	ldur	x0, [x29, #-216]
  403b74:	bl	402470 <strlen@plt>
  403b78:	stur	x0, [x29, #-208]
  403b7c:	ldur	x8, [x29, #-192]
  403b80:	ldr	x0, [x8]
  403b84:	ldur	x1, [x29, #-216]
  403b88:	bl	405234 <startswith>
  403b8c:	cbz	x0, 403c2c <method_set_locale+0x388>
  403b90:	ldur	x8, [x29, #-192]
  403b94:	ldr	x8, [x8]
  403b98:	ldur	x9, [x29, #-208]
  403b9c:	ldrb	w10, [x8, x9]
  403ba0:	cmp	w10, #0x3d
  403ba4:	b.ne	403c2c <method_set_locale+0x388>  // b.any
  403ba8:	ldur	x8, [x29, #-192]
  403bac:	ldr	x8, [x8]
  403bb0:	ldur	x9, [x29, #-208]
  403bb4:	add	x8, x8, x9
  403bb8:	add	x0, x8, #0x1
  403bbc:	bl	402430 <locale_is_valid@plt>
  403bc0:	tbnz	w0, #0, 403bc8 <method_set_locale+0x324>
  403bc4:	b	403c2c <method_set_locale+0x388>
  403bc8:	mov	w8, #0x1                   	// #1
  403bcc:	sturb	w8, [x29, #-197]
  403bd0:	ldur	x9, [x29, #-192]
  403bd4:	ldr	x9, [x9]
  403bd8:	ldur	x10, [x29, #-208]
  403bdc:	add	x9, x9, x10
  403be0:	add	x0, x9, #0x1
  403be4:	bl	402450 <strdup@plt>
  403be8:	ldursw	x9, [x29, #-180]
  403bec:	mov	x10, #0x8                   	// #8
  403bf0:	mul	x9, x10, x9
  403bf4:	sub	x11, x29, #0x90
  403bf8:	add	x9, x11, x9
  403bfc:	str	x0, [x9]
  403c00:	ldursw	x9, [x29, #-180]
  403c04:	mul	x9, x10, x9
  403c08:	add	x9, x11, x9
  403c0c:	ldr	x9, [x9]
  403c10:	cbnz	x9, 403c28 <method_set_locale+0x384>
  403c14:	mov	w8, #0xfffffff4            	// #-12
  403c18:	stur	w8, [x29, #-4]
  403c1c:	mov	w8, #0x1                   	// #1
  403c20:	stur	w8, [x29, #-196]
  403c24:	b	404368 <method_set_locale+0xac4>
  403c28:	b	403c3c <method_set_locale+0x398>
  403c2c:	ldur	w8, [x29, #-180]
  403c30:	add	w8, w8, #0x1
  403c34:	stur	w8, [x29, #-180]
  403c38:	b	403b0c <method_set_locale+0x268>
  403c3c:	ldurb	w8, [x29, #-197]
  403c40:	tbnz	w8, #0, 403c6c <method_set_locale+0x3c8>
  403c44:	ldur	x0, [x29, #-32]
  403c48:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403c4c:	add	x1, x1, #0xa0f
  403c50:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  403c54:	add	x2, x2, #0xa36
  403c58:	bl	402440 <sd_bus_error_setf@plt>
  403c5c:	stur	w0, [x29, #-4]
  403c60:	mov	w8, #0x1                   	// #1
  403c64:	stur	w8, [x29, #-196]
  403c68:	b	404368 <method_set_locale+0xac4>
  403c6c:	ldur	x8, [x29, #-192]
  403c70:	add	x8, x8, #0x8
  403c74:	stur	x8, [x29, #-192]
  403c78:	b	403ad0 <method_set_locale+0x22c>
  403c7c:	ldur	x0, [x29, #-144]
  403c80:	bl	4051d0 <isempty>
  403c84:	tbnz	w0, #0, 403d64 <method_set_locale+0x4c0>
  403c88:	sub	x8, x29, #0x90
  403c8c:	ldr	x0, [x8, #8]
  403c90:	bl	4051d0 <isempty>
  403c94:	tbnz	w0, #0, 403c9c <method_set_locale+0x3f8>
  403c98:	b	403d64 <method_set_locale+0x4c0>
  403c9c:	sub	x1, x29, #0xe0
  403ca0:	mov	x8, xzr
  403ca4:	stur	x8, [x29, #-224]
  403ca8:	ldur	x0, [x29, #-144]
  403cac:	bl	408c68 <find_language_fallback>
  403cb0:	ldur	x8, [x29, #-224]
  403cb4:	cbz	x8, 403d5c <method_set_locale+0x4b8>
  403cb8:	mov	w8, #0x7                   	// #7
  403cbc:	stur	w8, [x29, #-228]
  403cc0:	stur	wzr, [x29, #-232]
  403cc4:	stur	wzr, [x29, #-236]
  403cc8:	ldur	w0, [x29, #-236]
  403ccc:	bl	4022a0 <log_get_max_level_realm@plt>
  403cd0:	ldur	w8, [x29, #-228]
  403cd4:	and	w8, w8, #0x7
  403cd8:	cmp	w0, w8
  403cdc:	b.lt	403d18 <method_set_locale+0x474>  // b.tstop
  403ce0:	ldur	w8, [x29, #-236]
  403ce4:	ldur	w9, [x29, #-228]
  403ce8:	orr	w0, w9, w8, lsl #10
  403cec:	ldur	w1, [x29, #-232]
  403cf0:	ldur	x6, [x29, #-144]
  403cf4:	ldur	x7, [x29, #-224]
  403cf8:	ldr	x2, [sp, #120]
  403cfc:	mov	w3, #0x147                 	// #327
  403d00:	ldr	x4, [sp, #112]
  403d04:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  403d08:	add	x5, x5, #0xa5d
  403d0c:	bl	4022b0 <log_internal_realm@plt>
  403d10:	str	w0, [sp, #96]
  403d14:	b	403d2c <method_set_locale+0x488>
  403d18:	ldur	w0, [x29, #-232]
  403d1c:	bl	4022c0 <abs@plt>
  403d20:	mov	w8, wzr
  403d24:	subs	w8, w8, w0, uxtb
  403d28:	str	w8, [sp, #96]
  403d2c:	ldr	w8, [sp, #96]
  403d30:	str	w8, [sp, #240]
  403d34:	sub	x9, x29, #0x90
  403d38:	ldr	x0, [x9, #8]
  403d3c:	str	x9, [sp, #88]
  403d40:	bl	402480 <free@plt>
  403d44:	ldur	x9, [x29, #-224]
  403d48:	ldr	x10, [sp, #88]
  403d4c:	str	x9, [x10, #8]
  403d50:	mov	x9, xzr
  403d54:	stur	x9, [x29, #-224]
  403d58:	str	wzr, [sp, #236]
  403d5c:	sub	x0, x29, #0xe0
  403d60:	bl	405294 <freep>
  403d64:	ldur	x0, [x29, #-168]
  403d68:	ldur	x1, [x29, #-16]
  403d6c:	bl	4062e8 <locale_read_data>
  403d70:	stur	w0, [x29, #-184]
  403d74:	ldur	w8, [x29, #-184]
  403d78:	cmp	w8, #0x0
  403d7c:	cset	w8, ge  // ge = tcont
  403d80:	tbnz	w8, #0, 403e24 <method_set_locale+0x580>
  403d84:	mov	w8, #0x3                   	// #3
  403d88:	str	w8, [sp, #232]
  403d8c:	ldur	w8, [x29, #-184]
  403d90:	str	w8, [sp, #228]
  403d94:	str	wzr, [sp, #224]
  403d98:	ldr	w0, [sp, #224]
  403d9c:	bl	4022a0 <log_get_max_level_realm@plt>
  403da0:	ldr	w8, [sp, #232]
  403da4:	and	w8, w8, #0x7
  403da8:	cmp	w0, w8
  403dac:	b.lt	403de0 <method_set_locale+0x53c>  // b.tstop
  403db0:	ldr	w8, [sp, #224]
  403db4:	ldr	w9, [sp, #232]
  403db8:	orr	w0, w9, w8, lsl #10
  403dbc:	ldr	w1, [sp, #228]
  403dc0:	ldr	x2, [sp, #120]
  403dc4:	mov	w3, #0x14e                 	// #334
  403dc8:	ldr	x4, [sp, #112]
  403dcc:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  403dd0:	add	x5, x5, #0xa7e
  403dd4:	bl	4022b0 <log_internal_realm@plt>
  403dd8:	str	w0, [sp, #84]
  403ddc:	b	403df4 <method_set_locale+0x550>
  403de0:	ldr	w0, [sp, #228]
  403de4:	bl	4022c0 <abs@plt>
  403de8:	mov	w8, wzr
  403dec:	subs	w8, w8, w0, uxtb
  403df0:	str	w8, [sp, #84]
  403df4:	ldr	w8, [sp, #84]
  403df8:	str	w8, [sp, #220]
  403dfc:	ldur	x0, [x29, #-32]
  403e00:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  403e04:	add	x1, x1, #0xa9d
  403e08:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  403e0c:	add	x2, x2, #0xabf
  403e10:	bl	402440 <sd_bus_error_setf@plt>
  403e14:	stur	w0, [x29, #-4]
  403e18:	mov	w8, #0x1                   	// #1
  403e1c:	stur	w8, [x29, #-196]
  403e20:	b	404368 <method_set_locale+0xac4>
  403e24:	stur	wzr, [x29, #-180]
  403e28:	ldur	w8, [x29, #-180]
  403e2c:	cmp	w8, #0xe
  403e30:	b.ge	403ef0 <method_set_locale+0x64c>  // b.tcont
  403e34:	ldur	x8, [x29, #-168]
  403e38:	add	x8, x8, #0x10
  403e3c:	ldursw	x9, [x29, #-180]
  403e40:	mov	x10, #0x8                   	// #8
  403e44:	mul	x9, x10, x9
  403e48:	add	x8, x8, x9
  403e4c:	ldr	x0, [x8]
  403e50:	bl	4051d0 <isempty>
  403e54:	tbnz	w0, #0, 403ee0 <method_set_locale+0x63c>
  403e58:	ldursw	x8, [x29, #-180]
  403e5c:	mov	x9, #0x8                   	// #8
  403e60:	mul	x8, x9, x8
  403e64:	sub	x9, x29, #0x90
  403e68:	add	x8, x9, x8
  403e6c:	ldr	x0, [x8]
  403e70:	bl	4051d0 <isempty>
  403e74:	tbnz	w0, #0, 403e7c <method_set_locale+0x5d8>
  403e78:	b	403ee0 <method_set_locale+0x63c>
  403e7c:	ldur	x8, [x29, #-168]
  403e80:	add	x8, x8, #0x10
  403e84:	ldursw	x9, [x29, #-180]
  403e88:	mov	x10, #0x8                   	// #8
  403e8c:	mul	x9, x10, x9
  403e90:	add	x8, x8, x9
  403e94:	ldr	x0, [x8]
  403e98:	str	x10, [sp, #72]
  403e9c:	bl	402450 <strdup@plt>
  403ea0:	ldursw	x8, [x29, #-180]
  403ea4:	ldr	x9, [sp, #72]
  403ea8:	mul	x8, x9, x8
  403eac:	sub	x10, x29, #0x90
  403eb0:	add	x8, x10, x8
  403eb4:	str	x0, [x8]
  403eb8:	ldursw	x8, [x29, #-180]
  403ebc:	mul	x8, x9, x8
  403ec0:	add	x8, x10, x8
  403ec4:	ldr	x8, [x8]
  403ec8:	cbnz	x8, 403ee0 <method_set_locale+0x63c>
  403ecc:	mov	w8, #0xfffffff4            	// #-12
  403ed0:	stur	w8, [x29, #-4]
  403ed4:	mov	w8, #0x1                   	// #1
  403ed8:	stur	w8, [x29, #-196]
  403edc:	b	404368 <method_set_locale+0xac4>
  403ee0:	ldur	w8, [x29, #-180]
  403ee4:	add	w8, w8, #0x1
  403ee8:	stur	w8, [x29, #-180]
  403eec:	b	403e28 <method_set_locale+0x584>
  403ef0:	sub	x0, x29, #0x90
  403ef4:	bl	40617c <locale_simplify>
  403ef8:	stur	wzr, [x29, #-180]
  403efc:	ldur	w8, [x29, #-180]
  403f00:	cmp	w8, #0xe
  403f04:	b.ge	403f5c <method_set_locale+0x6b8>  // b.tcont
  403f08:	ldur	x8, [x29, #-168]
  403f0c:	add	x8, x8, #0x10
  403f10:	ldursw	x9, [x29, #-180]
  403f14:	mov	x10, #0x8                   	// #8
  403f18:	mul	x9, x10, x9
  403f1c:	add	x8, x8, x9
  403f20:	ldr	x0, [x8]
  403f24:	ldursw	x8, [x29, #-180]
  403f28:	mul	x8, x10, x8
  403f2c:	sub	x9, x29, #0x90
  403f30:	add	x8, x9, x8
  403f34:	ldr	x1, [x8]
  403f38:	bl	4052bc <streq_ptr>
  403f3c:	tbnz	w0, #0, 403f4c <method_set_locale+0x6a8>
  403f40:	mov	w8, #0x1                   	// #1
  403f44:	sturb	w8, [x29, #-169]
  403f48:	b	403f5c <method_set_locale+0x6b8>
  403f4c:	ldur	w8, [x29, #-180]
  403f50:	add	w8, w8, #0x1
  403f54:	stur	w8, [x29, #-180]
  403f58:	b	403efc <method_set_locale+0x658>
  403f5c:	ldurb	w8, [x29, #-169]
  403f60:	tbnz	w8, #0, 403ff8 <method_set_locale+0x754>
  403f64:	mov	w8, #0x7                   	// #7
  403f68:	str	w8, [sp, #216]
  403f6c:	str	wzr, [sp, #212]
  403f70:	str	wzr, [sp, #208]
  403f74:	ldr	w0, [sp, #208]
  403f78:	bl	4022a0 <log_get_max_level_realm@plt>
  403f7c:	ldr	w8, [sp, #216]
  403f80:	and	w8, w8, #0x7
  403f84:	cmp	w0, w8
  403f88:	b.lt	403fbc <method_set_locale+0x718>  // b.tstop
  403f8c:	ldr	w8, [sp, #208]
  403f90:	ldr	w9, [sp, #216]
  403f94:	orr	w0, w9, w8, lsl #10
  403f98:	ldr	w1, [sp, #212]
  403f9c:	ldr	x2, [sp, #120]
  403fa0:	mov	w3, #0x163                 	// #355
  403fa4:	ldr	x4, [sp, #112]
  403fa8:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  403fac:	add	x5, x5, #0xada
  403fb0:	bl	4022b0 <log_internal_realm@plt>
  403fb4:	str	w0, [sp, #68]
  403fb8:	b	403fd0 <method_set_locale+0x72c>
  403fbc:	ldr	w0, [sp, #212]
  403fc0:	bl	4022c0 <abs@plt>
  403fc4:	mov	w8, wzr
  403fc8:	subs	w8, w8, w0, uxtb
  403fcc:	str	w8, [sp, #68]
  403fd0:	ldr	w8, [sp, #68]
  403fd4:	str	w8, [sp, #204]
  403fd8:	ldur	x0, [x29, #-16]
  403fdc:	mov	x9, xzr
  403fe0:	mov	x1, x9
  403fe4:	bl	402490 <sd_bus_reply_method_return@plt>
  403fe8:	stur	w0, [x29, #-4]
  403fec:	mov	w8, #0x1                   	// #1
  403ff0:	stur	w8, [x29, #-196]
  403ff4:	b	404368 <method_set_locale+0xac4>
  403ff8:	ldur	x0, [x29, #-16]
  403ffc:	ldur	w8, [x29, #-176]
  404000:	cmp	w8, #0x0
  404004:	cset	w8, ne  // ne = any
  404008:	ldur	x9, [x29, #-168]
  40400c:	add	x6, x9, #0xd0
  404010:	ldur	x7, [x29, #-32]
  404014:	mov	w1, #0x15                  	// #21
  404018:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  40401c:	add	x2, x2, #0xafd
  404020:	mov	x9, xzr
  404024:	mov	x3, x9
  404028:	and	w4, w8, #0x1
  40402c:	mov	w5, #0xffffffff            	// #-1
  404030:	bl	4024a0 <bus_verify_polkit_async@plt>
  404034:	stur	w0, [x29, #-184]
  404038:	ldur	w8, [x29, #-184]
  40403c:	cmp	w8, #0x0
  404040:	cset	w8, ge  // ge = tcont
  404044:	tbnz	w8, #0, 40405c <method_set_locale+0x7b8>
  404048:	ldur	w8, [x29, #-184]
  40404c:	stur	w8, [x29, #-4]
  404050:	mov	w8, #0x1                   	// #1
  404054:	stur	w8, [x29, #-196]
  404058:	b	404368 <method_set_locale+0xac4>
  40405c:	ldur	w8, [x29, #-184]
  404060:	cbnz	w8, 404074 <method_set_locale+0x7d0>
  404064:	mov	w8, #0x1                   	// #1
  404068:	stur	w8, [x29, #-4]
  40406c:	stur	w8, [x29, #-196]
  404070:	b	404368 <method_set_locale+0xac4>
  404074:	stur	wzr, [x29, #-180]
  404078:	ldur	w8, [x29, #-180]
  40407c:	cmp	w8, #0xe
  404080:	b.ge	404100 <method_set_locale+0x85c>  // b.tcont
  404084:	ldur	x8, [x29, #-168]
  404088:	add	x8, x8, #0x10
  40408c:	ldursw	x9, [x29, #-180]
  404090:	mov	x10, #0x8                   	// #8
  404094:	mul	x9, x10, x9
  404098:	add	x8, x8, x9
  40409c:	ldr	x0, [x8]
  4040a0:	str	x10, [sp, #56]
  4040a4:	bl	402480 <free@plt>
  4040a8:	ldursw	x8, [x29, #-180]
  4040ac:	ldr	x9, [sp, #56]
  4040b0:	mul	x8, x9, x8
  4040b4:	sub	x10, x29, #0x90
  4040b8:	add	x8, x10, x8
  4040bc:	ldr	x8, [x8]
  4040c0:	ldur	x11, [x29, #-168]
  4040c4:	add	x11, x11, #0x10
  4040c8:	ldursw	x12, [x29, #-180]
  4040cc:	mul	x12, x9, x12
  4040d0:	add	x11, x11, x12
  4040d4:	str	x8, [x11]
  4040d8:	ldursw	x8, [x29, #-180]
  4040dc:	mul	x8, x9, x8
  4040e0:	add	x8, x10, x8
  4040e4:	mov	x10, xzr
  4040e8:	str	x10, [x8]
  4040ec:	str	wzr, [sp, #200]
  4040f0:	ldur	w8, [x29, #-180]
  4040f4:	add	w8, w8, #0x1
  4040f8:	stur	w8, [x29, #-180]
  4040fc:	b	404078 <method_set_locale+0x7d4>
  404100:	ldur	x0, [x29, #-168]
  404104:	sub	x1, x29, #0x98
  404108:	bl	406eb0 <locale_write_data>
  40410c:	stur	w0, [x29, #-184]
  404110:	ldur	w8, [x29, #-184]
  404114:	cmp	w8, #0x0
  404118:	cset	w8, ge  // ge = tcont
  40411c:	tbnz	w8, #0, 4041bc <method_set_locale+0x918>
  404120:	mov	w8, #0x3                   	// #3
  404124:	str	w8, [sp, #196]
  404128:	ldur	w8, [x29, #-184]
  40412c:	str	w8, [sp, #192]
  404130:	str	wzr, [sp, #188]
  404134:	ldr	w0, [sp, #188]
  404138:	bl	4022a0 <log_get_max_level_realm@plt>
  40413c:	ldr	w8, [sp, #196]
  404140:	and	w8, w8, #0x7
  404144:	cmp	w0, w8
  404148:	b.lt	40417c <method_set_locale+0x8d8>  // b.tstop
  40414c:	ldr	w8, [sp, #188]
  404150:	ldr	w9, [sp, #196]
  404154:	orr	w0, w9, w8, lsl #10
  404158:	ldr	w1, [sp, #192]
  40415c:	ldr	x2, [sp, #120]
  404160:	mov	w3, #0x17a                 	// #378
  404164:	ldr	x4, [sp, #112]
  404168:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  40416c:	add	x5, x5, #0xb20
  404170:	bl	4022b0 <log_internal_realm@plt>
  404174:	str	w0, [sp, #52]
  404178:	b	404190 <method_set_locale+0x8ec>
  40417c:	ldr	w0, [sp, #192]
  404180:	bl	4022c0 <abs@plt>
  404184:	mov	w8, wzr
  404188:	subs	w8, w8, w0, uxtb
  40418c:	str	w8, [sp, #52]
  404190:	ldr	w8, [sp, #52]
  404194:	str	w8, [sp, #184]
  404198:	ldur	x0, [x29, #-32]
  40419c:	ldur	w1, [x29, #-184]
  4041a0:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  4041a4:	add	x2, x2, #0xb20
  4041a8:	bl	4024b0 <sd_bus_error_set_errnof@plt>
  4041ac:	stur	w0, [x29, #-4]
  4041b0:	mov	w8, #0x1                   	// #1
  4041b4:	stur	w8, [x29, #-196]
  4041b8:	b	404368 <method_set_locale+0xac4>
  4041bc:	ldur	x0, [x29, #-168]
  4041c0:	ldur	x8, [x29, #-16]
  4041c4:	str	x0, [sp, #40]
  4041c8:	mov	x0, x8
  4041cc:	bl	4024c0 <sd_bus_message_get_bus@plt>
  4041d0:	ldr	x8, [sp, #40]
  4041d4:	str	x0, [sp, #32]
  4041d8:	mov	x0, x8
  4041dc:	ldr	x1, [sp, #32]
  4041e0:	bl	4052f4 <locale_update_system_manager>
  4041e4:	ldur	x8, [x29, #-152]
  4041e8:	cbz	x8, 4042a8 <method_set_locale+0xa04>
  4041ec:	ldur	x0, [x29, #-152]
  4041f0:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  4041f4:	add	x1, x1, #0xb39
  4041f8:	bl	405914 <strv_join>
  4041fc:	str	x0, [sp, #176]
  404200:	mov	w8, #0x6                   	// #6
  404204:	str	w8, [sp, #172]
  404208:	str	wzr, [sp, #168]
  40420c:	str	wzr, [sp, #164]
  404210:	ldr	w0, [sp, #164]
  404214:	bl	4022a0 <log_get_max_level_realm@plt>
  404218:	ldr	w8, [sp, #172]
  40421c:	and	w8, w8, #0x7
  404220:	cmp	w0, w8
  404224:	b.lt	404280 <method_set_locale+0x9dc>  // b.tstop
  404228:	ldr	w8, [sp, #164]
  40422c:	ldr	w9, [sp, #172]
  404230:	orr	w0, w9, w8, lsl #10
  404234:	ldr	w1, [sp, #168]
  404238:	ldr	x10, [sp, #176]
  40423c:	str	w0, [sp, #28]
  404240:	mov	x0, x10
  404244:	str	w1, [sp, #24]
  404248:	bl	405948 <strnull>
  40424c:	ldr	w8, [sp, #28]
  404250:	str	x0, [sp, #16]
  404254:	mov	w0, w8
  404258:	ldr	w1, [sp, #24]
  40425c:	ldr	x2, [sp, #120]
  404260:	mov	w3, #0x184                 	// #388
  404264:	ldr	x4, [sp, #112]
  404268:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  40426c:	add	x5, x5, #0xb3c
  404270:	ldr	x6, [sp, #16]
  404274:	bl	4022b0 <log_internal_realm@plt>
  404278:	str	w0, [sp, #12]
  40427c:	b	404294 <method_set_locale+0x9f0>
  404280:	ldr	w0, [sp, #168]
  404284:	bl	4022c0 <abs@plt>
  404288:	mov	w8, wzr
  40428c:	subs	w8, w8, w0, uxtb
  404290:	str	w8, [sp, #12]
  404294:	ldr	w8, [sp, #12]
  404298:	str	w8, [sp, #160]
  40429c:	add	x0, sp, #0xb0
  4042a0:	bl	405294 <freep>
  4042a4:	b	40431c <method_set_locale+0xa78>
  4042a8:	mov	w8, #0x6                   	// #6
  4042ac:	str	w8, [sp, #156]
  4042b0:	str	wzr, [sp, #152]
  4042b4:	str	wzr, [sp, #148]
  4042b8:	ldr	w0, [sp, #148]
  4042bc:	bl	4022a0 <log_get_max_level_realm@plt>
  4042c0:	ldr	w8, [sp, #156]
  4042c4:	and	w8, w8, #0x7
  4042c8:	cmp	w0, w8
  4042cc:	b.lt	404300 <method_set_locale+0xa5c>  // b.tstop
  4042d0:	ldr	w8, [sp, #148]
  4042d4:	ldr	w9, [sp, #156]
  4042d8:	orr	w0, w9, w8, lsl #10
  4042dc:	ldr	w1, [sp, #152]
  4042e0:	ldr	x2, [sp, #120]
  4042e4:	mov	w3, #0x186                 	// #390
  4042e8:	ldr	x4, [sp, #112]
  4042ec:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  4042f0:	add	x5, x5, #0xb52
  4042f4:	bl	4022b0 <log_internal_realm@plt>
  4042f8:	str	w0, [sp, #8]
  4042fc:	b	404314 <method_set_locale+0xa70>
  404300:	ldr	w0, [sp, #152]
  404304:	bl	4022c0 <abs@plt>
  404308:	mov	w8, wzr
  40430c:	subs	w8, w8, w0, uxtb
  404310:	str	w8, [sp, #8]
  404314:	ldr	w8, [sp, #8]
  404318:	str	w8, [sp, #144]
  40431c:	ldur	x0, [x29, #-16]
  404320:	bl	4024c0 <sd_bus_message_get_bus@plt>
  404324:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404328:	add	x1, x1, #0x83c
  40432c:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404330:	add	x2, x2, #0x794
  404334:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  404338:	add	x3, x3, #0x8b5
  40433c:	mov	x8, xzr
  404340:	mov	x4, x8
  404344:	str	x8, [sp]
  404348:	bl	4024d0 <sd_bus_emit_properties_changed@plt>
  40434c:	ldur	x8, [x29, #-16]
  404350:	mov	x0, x8
  404354:	ldr	x1, [sp]
  404358:	bl	402490 <sd_bus_reply_method_return@plt>
  40435c:	stur	w0, [x29, #-4]
  404360:	mov	w9, #0x1                   	// #1
  404364:	stur	w9, [x29, #-196]
  404368:	sub	x0, x29, #0xa0
  40436c:	bl	40519c <strv_freep>
  404370:	sub	x0, x29, #0x98
  404374:	bl	40519c <strv_freep>
  404378:	sub	x0, x29, #0x90
  40437c:	bl	405210 <locale_variables_freep>
  404380:	ldur	w0, [x29, #-4]
  404384:	add	sp, sp, #0x1e0
  404388:	ldr	x28, [sp, #16]
  40438c:	ldp	x29, x30, [sp], #32
  404390:	ret

0000000000404394 <method_set_vc_keyboard>:
  404394:	sub	sp, sp, #0xd0
  404398:	stp	x29, x30, [sp, #192]
  40439c:	add	x29, sp, #0xc0
  4043a0:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  4043a4:	add	x8, x8, #0x698
  4043a8:	add	x8, x8, #0x3
  4043ac:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  4043b0:	add	x9, x9, #0xced
  4043b4:	stur	x0, [x29, #-16]
  4043b8:	stur	x1, [x29, #-24]
  4043bc:	stur	x2, [x29, #-32]
  4043c0:	ldur	x10, [x29, #-24]
  4043c4:	stur	x10, [x29, #-40]
  4043c8:	str	x8, [sp, #48]
  4043cc:	str	x9, [sp, #40]
  4043d0:	ldur	x8, [x29, #-16]
  4043d4:	cmp	x8, #0x0
  4043d8:	cset	w9, ne  // ne = any
  4043dc:	mov	w10, #0x1                   	// #1
  4043e0:	eor	w9, w9, #0x1
  4043e4:	eor	w9, w9, w10
  4043e8:	eor	w9, w9, w10
  4043ec:	and	w9, w9, #0x1
  4043f0:	mov	w0, w9
  4043f4:	sxtw	x8, w0
  4043f8:	cbz	x8, 404420 <method_set_vc_keyboard+0x8c>
  4043fc:	mov	w8, wzr
  404400:	mov	w0, w8
  404404:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404408:	add	x1, x1, #0x9cd
  40440c:	ldr	x2, [sp, #48]
  404410:	mov	w3, #0x196                 	// #406
  404414:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  404418:	add	x4, x4, #0xca8
  40441c:	bl	4022e0 <log_assert_failed_realm@plt>
  404420:	ldur	x8, [x29, #-40]
  404424:	cmp	x8, #0x0
  404428:	cset	w9, ne  // ne = any
  40442c:	mov	w10, #0x1                   	// #1
  404430:	eor	w9, w9, #0x1
  404434:	eor	w9, w9, w10
  404438:	eor	w9, w9, w10
  40443c:	and	w9, w9, #0x1
  404440:	mov	w0, w9
  404444:	sxtw	x8, w0
  404448:	cbz	x8, 404470 <method_set_vc_keyboard+0xdc>
  40444c:	mov	w8, wzr
  404450:	mov	w0, w8
  404454:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404458:	add	x1, x1, #0x7c9
  40445c:	ldr	x2, [sp, #48]
  404460:	mov	w3, #0x197                 	// #407
  404464:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  404468:	add	x4, x4, #0xca8
  40446c:	bl	4022e0 <log_assert_failed_realm@plt>
  404470:	ldur	x0, [x29, #-16]
  404474:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404478:	add	x1, x1, #0x931
  40447c:	sub	x2, x29, #0x30
  404480:	sub	x3, x29, #0x38
  404484:	sub	x4, x29, #0x3c
  404488:	sub	x5, x29, #0x40
  40448c:	bl	4024e0 <sd_bus_message_read@plt>
  404490:	stur	w0, [x29, #-68]
  404494:	ldur	w8, [x29, #-68]
  404498:	cmp	w8, #0x0
  40449c:	cset	w8, ge  // ge = tcont
  4044a0:	tbnz	w8, #0, 4044b0 <method_set_vc_keyboard+0x11c>
  4044a4:	ldur	w8, [x29, #-68]
  4044a8:	stur	w8, [x29, #-4]
  4044ac:	b	404948 <method_set_vc_keyboard+0x5b4>
  4044b0:	ldur	x0, [x29, #-48]
  4044b4:	bl	4059b8 <empty_to_null>
  4044b8:	stur	x0, [x29, #-48]
  4044bc:	ldur	x0, [x29, #-56]
  4044c0:	bl	4059b8 <empty_to_null>
  4044c4:	stur	x0, [x29, #-56]
  4044c8:	ldur	x0, [x29, #-40]
  4044cc:	ldur	x1, [x29, #-16]
  4044d0:	bl	406744 <vconsole_read_data>
  4044d4:	stur	w0, [x29, #-68]
  4044d8:	ldur	w8, [x29, #-68]
  4044dc:	cmp	w8, #0x0
  4044e0:	cset	w8, ge  // ge = tcont
  4044e4:	tbnz	w8, #0, 404580 <method_set_vc_keyboard+0x1ec>
  4044e8:	mov	w8, #0x3                   	// #3
  4044ec:	stur	w8, [x29, #-72]
  4044f0:	ldur	w8, [x29, #-68]
  4044f4:	stur	w8, [x29, #-76]
  4044f8:	stur	wzr, [x29, #-80]
  4044fc:	ldur	w0, [x29, #-80]
  404500:	bl	4022a0 <log_get_max_level_realm@plt>
  404504:	ldur	w8, [x29, #-72]
  404508:	and	w8, w8, #0x7
  40450c:	cmp	w0, w8
  404510:	b.lt	404544 <method_set_vc_keyboard+0x1b0>  // b.tstop
  404514:	ldur	w8, [x29, #-80]
  404518:	ldur	w9, [x29, #-72]
  40451c:	orr	w0, w9, w8, lsl #10
  404520:	ldur	w1, [x29, #-76]
  404524:	ldr	x2, [sp, #48]
  404528:	mov	w3, #0x1a2                 	// #418
  40452c:	ldr	x4, [sp, #40]
  404530:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  404534:	add	x5, x5, #0xd04
  404538:	bl	4022b0 <log_internal_realm@plt>
  40453c:	str	w0, [sp, #36]
  404540:	b	404558 <method_set_vc_keyboard+0x1c4>
  404544:	ldur	w0, [x29, #-76]
  404548:	bl	4022c0 <abs@plt>
  40454c:	mov	w8, wzr
  404550:	subs	w8, w8, w0, uxtb
  404554:	str	w8, [sp, #36]
  404558:	ldr	w8, [sp, #36]
  40455c:	stur	w8, [x29, #-84]
  404560:	ldur	x0, [x29, #-32]
  404564:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404568:	add	x1, x1, #0xa9d
  40456c:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404570:	add	x2, x2, #0xd33
  404574:	bl	402440 <sd_bus_error_setf@plt>
  404578:	stur	w0, [x29, #-4]
  40457c:	b	404948 <method_set_vc_keyboard+0x5b4>
  404580:	ldur	x0, [x29, #-48]
  404584:	ldur	x8, [x29, #-40]
  404588:	ldr	x1, [x8, #192]
  40458c:	bl	4052bc <streq_ptr>
  404590:	tbnz	w0, #0, 404598 <method_set_vc_keyboard+0x204>
  404594:	b	4045c8 <method_set_vc_keyboard+0x234>
  404598:	ldur	x0, [x29, #-56]
  40459c:	ldur	x8, [x29, #-40]
  4045a0:	ldr	x1, [x8, #200]
  4045a4:	bl	4052bc <streq_ptr>
  4045a8:	tbnz	w0, #0, 4045b0 <method_set_vc_keyboard+0x21c>
  4045ac:	b	4045c8 <method_set_vc_keyboard+0x234>
  4045b0:	ldur	x0, [x29, #-16]
  4045b4:	mov	x8, xzr
  4045b8:	mov	x1, x8
  4045bc:	bl	402490 <sd_bus_reply_method_return@plt>
  4045c0:	stur	w0, [x29, #-4]
  4045c4:	b	404948 <method_set_vc_keyboard+0x5b4>
  4045c8:	ldur	x8, [x29, #-48]
  4045cc:	cbz	x8, 4045f0 <method_set_vc_keyboard+0x25c>
  4045d0:	ldur	x0, [x29, #-48]
  4045d4:	bl	4024f0 <filename_is_valid@plt>
  4045d8:	tbnz	w0, #0, 4045e0 <method_set_vc_keyboard+0x24c>
  4045dc:	b	404614 <method_set_vc_keyboard+0x280>
  4045e0:	ldur	x0, [x29, #-48]
  4045e4:	bl	402500 <string_is_safe@plt>
  4045e8:	tbnz	w0, #0, 4045f0 <method_set_vc_keyboard+0x25c>
  4045ec:	b	404614 <method_set_vc_keyboard+0x280>
  4045f0:	ldur	x8, [x29, #-56]
  4045f4:	cbz	x8, 404634 <method_set_vc_keyboard+0x2a0>
  4045f8:	ldur	x0, [x29, #-56]
  4045fc:	bl	4024f0 <filename_is_valid@plt>
  404600:	tbnz	w0, #0, 404608 <method_set_vc_keyboard+0x274>
  404604:	b	404614 <method_set_vc_keyboard+0x280>
  404608:	ldur	x0, [x29, #-56]
  40460c:	bl	402500 <string_is_safe@plt>
  404610:	tbnz	w0, #0, 404634 <method_set_vc_keyboard+0x2a0>
  404614:	ldur	x0, [x29, #-32]
  404618:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  40461c:	add	x1, x1, #0xa0f
  404620:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404624:	add	x2, x2, #0xd5e
  404628:	bl	402440 <sd_bus_error_setf@plt>
  40462c:	stur	w0, [x29, #-4]
  404630:	b	404948 <method_set_vc_keyboard+0x5b4>
  404634:	ldur	x0, [x29, #-16]
  404638:	ldur	w8, [x29, #-64]
  40463c:	cmp	w8, #0x0
  404640:	cset	w8, ne  // ne = any
  404644:	ldur	x9, [x29, #-40]
  404648:	add	x6, x9, #0xd0
  40464c:	ldur	x7, [x29, #-32]
  404650:	mov	w1, #0x15                  	// #21
  404654:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404658:	add	x2, x2, #0xd7b
  40465c:	mov	x9, xzr
  404660:	mov	x3, x9
  404664:	and	w4, w8, #0x1
  404668:	mov	w5, #0xffffffff            	// #-1
  40466c:	bl	4024a0 <bus_verify_polkit_async@plt>
  404670:	stur	w0, [x29, #-68]
  404674:	ldur	w8, [x29, #-68]
  404678:	cmp	w8, #0x0
  40467c:	cset	w8, ge  // ge = tcont
  404680:	tbnz	w8, #0, 404690 <method_set_vc_keyboard+0x2fc>
  404684:	ldur	w8, [x29, #-68]
  404688:	stur	w8, [x29, #-4]
  40468c:	b	404948 <method_set_vc_keyboard+0x5b4>
  404690:	ldur	w8, [x29, #-68]
  404694:	cbnz	w8, 4046a4 <method_set_vc_keyboard+0x310>
  404698:	mov	w8, #0x1                   	// #1
  40469c:	stur	w8, [x29, #-4]
  4046a0:	b	404948 <method_set_vc_keyboard+0x5b4>
  4046a4:	ldur	x8, [x29, #-40]
  4046a8:	add	x0, x8, #0xc0
  4046ac:	ldur	x1, [x29, #-48]
  4046b0:	bl	402510 <free_and_strdup@plt>
  4046b4:	cmp	w0, #0x0
  4046b8:	cset	w9, lt  // lt = tstop
  4046bc:	tbnz	w9, #0, 4046dc <method_set_vc_keyboard+0x348>
  4046c0:	ldur	x8, [x29, #-40]
  4046c4:	add	x0, x8, #0xc8
  4046c8:	ldur	x1, [x29, #-56]
  4046cc:	bl	402510 <free_and_strdup@plt>
  4046d0:	cmp	w0, #0x0
  4046d4:	cset	w9, ge  // ge = tcont
  4046d8:	tbnz	w9, #0, 4046e8 <method_set_vc_keyboard+0x354>
  4046dc:	mov	w8, #0xfffffff4            	// #-12
  4046e0:	stur	w8, [x29, #-4]
  4046e4:	b	404948 <method_set_vc_keyboard+0x5b4>
  4046e8:	ldur	x0, [x29, #-40]
  4046ec:	bl	4071d0 <vconsole_write_data>
  4046f0:	stur	w0, [x29, #-68]
  4046f4:	ldur	w8, [x29, #-68]
  4046f8:	cmp	w8, #0x0
  4046fc:	cset	w8, ge  // ge = tcont
  404700:	tbnz	w8, #0, 404798 <method_set_vc_keyboard+0x404>
  404704:	mov	w8, #0x3                   	// #3
  404708:	stur	w8, [x29, #-88]
  40470c:	ldur	w8, [x29, #-68]
  404710:	stur	w8, [x29, #-92]
  404714:	str	wzr, [sp, #96]
  404718:	ldr	w0, [sp, #96]
  40471c:	bl	4022a0 <log_get_max_level_realm@plt>
  404720:	ldur	w8, [x29, #-88]
  404724:	and	w8, w8, #0x7
  404728:	cmp	w0, w8
  40472c:	b.lt	404760 <method_set_vc_keyboard+0x3cc>  // b.tstop
  404730:	ldr	w8, [sp, #96]
  404734:	ldur	w9, [x29, #-88]
  404738:	orr	w0, w9, w8, lsl #10
  40473c:	ldur	w1, [x29, #-92]
  404740:	ldr	x2, [sp, #48]
  404744:	mov	w3, #0x1c2                 	// #450
  404748:	ldr	x4, [sp, #40]
  40474c:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  404750:	add	x5, x5, #0xda0
  404754:	bl	4022b0 <log_internal_realm@plt>
  404758:	str	w0, [sp, #32]
  40475c:	b	404774 <method_set_vc_keyboard+0x3e0>
  404760:	ldur	w0, [x29, #-92]
  404764:	bl	4022c0 <abs@plt>
  404768:	mov	w8, wzr
  40476c:	subs	w8, w8, w0, uxtb
  404770:	str	w8, [sp, #32]
  404774:	ldr	w8, [sp, #32]
  404778:	str	w8, [sp, #92]
  40477c:	ldur	x0, [x29, #-32]
  404780:	ldur	w1, [x29, #-68]
  404784:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404788:	add	x2, x2, #0xda0
  40478c:	bl	4024b0 <sd_bus_error_set_errnof@plt>
  404790:	stur	w0, [x29, #-4]
  404794:	b	404948 <method_set_vc_keyboard+0x5b4>
  404798:	mov	w8, #0x6                   	// #6
  40479c:	str	w8, [sp, #88]
  4047a0:	str	wzr, [sp, #84]
  4047a4:	str	wzr, [sp, #80]
  4047a8:	ldr	w0, [sp, #80]
  4047ac:	bl	4022a0 <log_get_max_level_realm@plt>
  4047b0:	ldr	w8, [sp, #88]
  4047b4:	and	w8, w8, #0x7
  4047b8:	cmp	w0, w8
  4047bc:	b.lt	404834 <method_set_vc_keyboard+0x4a0>  // b.tstop
  4047c0:	ldr	w8, [sp, #80]
  4047c4:	ldr	w9, [sp, #88]
  4047c8:	orr	w0, w9, w8, lsl #10
  4047cc:	ldr	w1, [sp, #84]
  4047d0:	ldur	x10, [x29, #-40]
  4047d4:	ldr	x10, [x10, #192]
  4047d8:	str	w0, [sp, #28]
  4047dc:	mov	x0, x10
  4047e0:	str	w1, [sp, #24]
  4047e4:	bl	405a00 <strempty>
  4047e8:	ldur	x10, [x29, #-40]
  4047ec:	ldr	x10, [x10, #200]
  4047f0:	str	x0, [sp, #16]
  4047f4:	mov	x0, x10
  4047f8:	bl	405a00 <strempty>
  4047fc:	ldr	w8, [sp, #28]
  404800:	str	x0, [sp, #8]
  404804:	mov	w0, w8
  404808:	ldr	w1, [sp, #24]
  40480c:	ldr	x2, [sp, #48]
  404810:	mov	w3, #0x1c7                 	// #455
  404814:	ldr	x4, [sp, #40]
  404818:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  40481c:	add	x5, x5, #0xdc9
  404820:	ldr	x6, [sp, #16]
  404824:	ldr	x7, [sp, #8]
  404828:	bl	4022b0 <log_internal_realm@plt>
  40482c:	str	w0, [sp, #4]
  404830:	b	404848 <method_set_vc_keyboard+0x4b4>
  404834:	ldr	w0, [sp, #84]
  404838:	bl	4022c0 <abs@plt>
  40483c:	mov	w8, wzr
  404840:	subs	w8, w8, w0, uxtb
  404844:	str	w8, [sp, #4]
  404848:	ldr	w8, [sp, #4]
  40484c:	str	w8, [sp, #76]
  404850:	ldur	x0, [x29, #-16]
  404854:	bl	4024c0 <sd_bus_message_get_bus@plt>
  404858:	bl	405a3c <vconsole_reload>
  40485c:	ldur	x9, [x29, #-16]
  404860:	mov	x0, x9
  404864:	bl	4024c0 <sd_bus_message_get_bus@plt>
  404868:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  40486c:	add	x1, x1, #0x83c
  404870:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404874:	add	x2, x2, #0x794
  404878:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  40487c:	add	x3, x3, #0x8ea
  404880:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  404884:	add	x4, x4, #0x8f9
  404888:	mov	x9, xzr
  40488c:	mov	x5, x9
  404890:	bl	4024d0 <sd_bus_emit_properties_changed@plt>
  404894:	ldur	w8, [x29, #-60]
  404898:	cbz	w8, 404934 <method_set_vc_keyboard+0x5a0>
  40489c:	ldur	x0, [x29, #-40]
  4048a0:	ldur	x1, [x29, #-16]
  4048a4:	bl	405c0c <vconsole_convert_to_x11_and_emit>
  4048a8:	stur	w0, [x29, #-68]
  4048ac:	ldur	w8, [x29, #-68]
  4048b0:	cmp	w8, #0x0
  4048b4:	cset	w8, ge  // ge = tcont
  4048b8:	tbnz	w8, #0, 404934 <method_set_vc_keyboard+0x5a0>
  4048bc:	mov	w8, #0x3                   	// #3
  4048c0:	str	w8, [sp, #72]
  4048c4:	ldur	w8, [x29, #-68]
  4048c8:	str	w8, [sp, #68]
  4048cc:	str	wzr, [sp, #64]
  4048d0:	ldr	w0, [sp, #64]
  4048d4:	bl	4022a0 <log_get_max_level_realm@plt>
  4048d8:	ldr	w8, [sp, #72]
  4048dc:	and	w8, w8, #0x7
  4048e0:	cmp	w0, w8
  4048e4:	b.lt	404918 <method_set_vc_keyboard+0x584>  // b.tstop
  4048e8:	ldr	w8, [sp, #64]
  4048ec:	ldr	w9, [sp, #72]
  4048f0:	orr	w0, w9, w8, lsl #10
  4048f4:	ldr	w1, [sp, #68]
  4048f8:	ldr	x2, [sp, #48]
  4048fc:	mov	w3, #0x1d4                 	// #468
  404900:	ldr	x4, [sp, #40]
  404904:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  404908:	add	x5, x5, #0xdfc
  40490c:	bl	4022b0 <log_internal_realm@plt>
  404910:	str	w0, [sp]
  404914:	b	40492c <method_set_vc_keyboard+0x598>
  404918:	ldr	w0, [sp, #68]
  40491c:	bl	4022c0 <abs@plt>
  404920:	mov	w8, wzr
  404924:	subs	w8, w8, w0, uxtb
  404928:	str	w8, [sp]
  40492c:	ldr	w8, [sp]
  404930:	str	w8, [sp, #60]
  404934:	ldur	x0, [x29, #-16]
  404938:	mov	x8, xzr
  40493c:	mov	x1, x8
  404940:	bl	402490 <sd_bus_reply_method_return@plt>
  404944:	stur	w0, [x29, #-4]
  404948:	ldur	w0, [x29, #-4]
  40494c:	ldp	x29, x30, [sp, #192]
  404950:	add	sp, sp, #0xd0
  404954:	ret

0000000000404958 <method_set_x11_keyboard>:
  404958:	sub	sp, sp, #0x160
  40495c:	stp	x29, x30, [sp, #320]
  404960:	str	x28, [sp, #336]
  404964:	add	x29, sp, #0x140
  404968:	sub	x8, x29, #0x20
  40496c:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  404970:	add	x9, x9, #0x698
  404974:	add	x9, x9, #0x3
  404978:	adrp	x10, 409000 <x11_convert_to_vconsole+0x104>
  40497c:	add	x10, x10, #0xf73
  404980:	str	x0, [x8, #16]
  404984:	str	x1, [x8, #8]
  404988:	str	x2, [x8]
  40498c:	ldr	x11, [x8, #8]
  404990:	stur	x11, [x29, #-40]
  404994:	str	x8, [sp, #144]
  404998:	str	x9, [sp, #136]
  40499c:	str	x10, [sp, #128]
  4049a0:	ldr	x8, [sp, #144]
  4049a4:	ldr	x9, [x8, #16]
  4049a8:	cmp	x9, #0x0
  4049ac:	cset	w10, ne  // ne = any
  4049b0:	mov	w11, #0x1                   	// #1
  4049b4:	eor	w10, w10, #0x1
  4049b8:	eor	w10, w10, w11
  4049bc:	eor	w10, w10, w11
  4049c0:	and	w10, w10, #0x1
  4049c4:	mov	w0, w10
  4049c8:	sxtw	x9, w0
  4049cc:	cbz	x9, 4049f4 <method_set_x11_keyboard+0x9c>
  4049d0:	mov	w8, wzr
  4049d4:	mov	w0, w8
  4049d8:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  4049dc:	add	x1, x1, #0x9cd
  4049e0:	ldr	x2, [sp, #136]
  4049e4:	mov	w3, #0x246                 	// #582
  4049e8:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  4049ec:	add	x4, x4, #0xf2d
  4049f0:	bl	4022e0 <log_assert_failed_realm@plt>
  4049f4:	ldur	x8, [x29, #-40]
  4049f8:	cmp	x8, #0x0
  4049fc:	cset	w9, ne  // ne = any
  404a00:	mov	w10, #0x1                   	// #1
  404a04:	eor	w9, w9, #0x1
  404a08:	eor	w9, w9, w10
  404a0c:	eor	w9, w9, w10
  404a10:	and	w9, w9, #0x1
  404a14:	mov	w0, w9
  404a18:	sxtw	x8, w0
  404a1c:	cbz	x8, 404a44 <method_set_x11_keyboard+0xec>
  404a20:	mov	w8, wzr
  404a24:	mov	w0, w8
  404a28:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404a2c:	add	x1, x1, #0x7c9
  404a30:	ldr	x2, [sp, #136]
  404a34:	mov	w3, #0x247                 	// #583
  404a38:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  404a3c:	add	x4, x4, #0xf2d
  404a40:	bl	4022e0 <log_assert_failed_realm@plt>
  404a44:	ldr	x8, [sp, #144]
  404a48:	ldr	x0, [x8, #16]
  404a4c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404a50:	add	x1, x1, #0x945
  404a54:	sub	x2, x29, #0x30
  404a58:	sub	x3, x29, #0x38
  404a5c:	sub	x4, x29, #0x40
  404a60:	sub	x5, x29, #0x48
  404a64:	sub	x6, x29, #0x4c
  404a68:	sub	x7, x29, #0x50
  404a6c:	bl	4024e0 <sd_bus_message_read@plt>
  404a70:	stur	w0, [x29, #-84]
  404a74:	ldur	w9, [x29, #-84]
  404a78:	cmp	w9, #0x0
  404a7c:	cset	w9, ge  // ge = tcont
  404a80:	tbnz	w9, #0, 404a90 <method_set_x11_keyboard+0x138>
  404a84:	ldur	w8, [x29, #-84]
  404a88:	stur	w8, [x29, #-4]
  404a8c:	b	405188 <method_set_x11_keyboard+0x830>
  404a90:	ldur	x0, [x29, #-48]
  404a94:	bl	4059b8 <empty_to_null>
  404a98:	stur	x0, [x29, #-48]
  404a9c:	ldur	x0, [x29, #-56]
  404aa0:	bl	4059b8 <empty_to_null>
  404aa4:	stur	x0, [x29, #-56]
  404aa8:	ldur	x0, [x29, #-64]
  404aac:	bl	4059b8 <empty_to_null>
  404ab0:	stur	x0, [x29, #-64]
  404ab4:	ldur	x0, [x29, #-72]
  404ab8:	bl	4059b8 <empty_to_null>
  404abc:	stur	x0, [x29, #-72]
  404ac0:	ldur	x0, [x29, #-40]
  404ac4:	ldr	x8, [sp, #144]
  404ac8:	ldr	x1, [x8, #16]
  404acc:	bl	4068e8 <x11_read_data>
  404ad0:	stur	w0, [x29, #-84]
  404ad4:	ldur	w9, [x29, #-84]
  404ad8:	cmp	w9, #0x0
  404adc:	cset	w9, ge  // ge = tcont
  404ae0:	tbnz	w9, #0, 404b80 <method_set_x11_keyboard+0x228>
  404ae4:	mov	w8, #0x3                   	// #3
  404ae8:	stur	w8, [x29, #-88]
  404aec:	ldur	w8, [x29, #-84]
  404af0:	stur	w8, [x29, #-92]
  404af4:	stur	wzr, [x29, #-96]
  404af8:	ldur	w0, [x29, #-96]
  404afc:	bl	4022a0 <log_get_max_level_realm@plt>
  404b00:	ldur	w8, [x29, #-88]
  404b04:	and	w8, w8, #0x7
  404b08:	cmp	w0, w8
  404b0c:	b.lt	404b40 <method_set_x11_keyboard+0x1e8>  // b.tstop
  404b10:	ldur	w8, [x29, #-96]
  404b14:	ldur	w9, [x29, #-88]
  404b18:	orr	w0, w9, w8, lsl #10
  404b1c:	ldur	w1, [x29, #-92]
  404b20:	ldr	x2, [sp, #136]
  404b24:	mov	w3, #0x254                 	// #596
  404b28:	ldr	x4, [sp, #128]
  404b2c:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  404b30:	add	x5, x5, #0xf8b
  404b34:	bl	4022b0 <log_internal_realm@plt>
  404b38:	str	w0, [sp, #124]
  404b3c:	b	404b54 <method_set_x11_keyboard+0x1fc>
  404b40:	ldur	w0, [x29, #-92]
  404b44:	bl	4022c0 <abs@plt>
  404b48:	mov	w8, wzr
  404b4c:	subs	w8, w8, w0, uxtb
  404b50:	str	w8, [sp, #124]
  404b54:	ldr	w8, [sp, #124]
  404b58:	stur	w8, [x29, #-100]
  404b5c:	ldr	x9, [sp, #144]
  404b60:	ldr	x0, [x9]
  404b64:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404b68:	add	x1, x1, #0xa9d
  404b6c:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404b70:	add	x2, x2, #0xfb7
  404b74:	bl	402440 <sd_bus_error_setf@plt>
  404b78:	stur	w0, [x29, #-4]
  404b7c:	b	405188 <method_set_x11_keyboard+0x830>
  404b80:	ldur	x0, [x29, #-48]
  404b84:	ldur	x8, [x29, #-40]
  404b88:	ldr	x1, [x8, #144]
  404b8c:	bl	4052bc <streq_ptr>
  404b90:	tbnz	w0, #0, 404b98 <method_set_x11_keyboard+0x240>
  404b94:	b	404bfc <method_set_x11_keyboard+0x2a4>
  404b98:	ldur	x0, [x29, #-56]
  404b9c:	ldur	x8, [x29, #-40]
  404ba0:	ldr	x1, [x8, #152]
  404ba4:	bl	4052bc <streq_ptr>
  404ba8:	tbnz	w0, #0, 404bb0 <method_set_x11_keyboard+0x258>
  404bac:	b	404bfc <method_set_x11_keyboard+0x2a4>
  404bb0:	ldur	x0, [x29, #-64]
  404bb4:	ldur	x8, [x29, #-40]
  404bb8:	ldr	x1, [x8, #160]
  404bbc:	bl	4052bc <streq_ptr>
  404bc0:	tbnz	w0, #0, 404bc8 <method_set_x11_keyboard+0x270>
  404bc4:	b	404bfc <method_set_x11_keyboard+0x2a4>
  404bc8:	ldur	x0, [x29, #-72]
  404bcc:	ldur	x8, [x29, #-40]
  404bd0:	ldr	x1, [x8, #168]
  404bd4:	bl	4052bc <streq_ptr>
  404bd8:	tbnz	w0, #0, 404be0 <method_set_x11_keyboard+0x288>
  404bdc:	b	404bfc <method_set_x11_keyboard+0x2a4>
  404be0:	ldr	x8, [sp, #144]
  404be4:	ldr	x0, [x8, #16]
  404be8:	mov	x9, xzr
  404bec:	mov	x1, x9
  404bf0:	bl	402490 <sd_bus_reply_method_return@plt>
  404bf4:	stur	w0, [x29, #-4]
  404bf8:	b	405188 <method_set_x11_keyboard+0x830>
  404bfc:	ldur	x8, [x29, #-48]
  404c00:	cbz	x8, 404c14 <method_set_x11_keyboard+0x2bc>
  404c04:	ldur	x0, [x29, #-48]
  404c08:	bl	402500 <string_is_safe@plt>
  404c0c:	tbnz	w0, #0, 404c14 <method_set_x11_keyboard+0x2bc>
  404c10:	b	404c58 <method_set_x11_keyboard+0x300>
  404c14:	ldur	x8, [x29, #-56]
  404c18:	cbz	x8, 404c2c <method_set_x11_keyboard+0x2d4>
  404c1c:	ldur	x0, [x29, #-56]
  404c20:	bl	402500 <string_is_safe@plt>
  404c24:	tbnz	w0, #0, 404c2c <method_set_x11_keyboard+0x2d4>
  404c28:	b	404c58 <method_set_x11_keyboard+0x300>
  404c2c:	ldur	x8, [x29, #-64]
  404c30:	cbz	x8, 404c44 <method_set_x11_keyboard+0x2ec>
  404c34:	ldur	x0, [x29, #-64]
  404c38:	bl	402500 <string_is_safe@plt>
  404c3c:	tbnz	w0, #0, 404c44 <method_set_x11_keyboard+0x2ec>
  404c40:	b	404c58 <method_set_x11_keyboard+0x300>
  404c44:	ldur	x8, [x29, #-72]
  404c48:	cbz	x8, 404c7c <method_set_x11_keyboard+0x324>
  404c4c:	ldur	x0, [x29, #-72]
  404c50:	bl	402500 <string_is_safe@plt>
  404c54:	tbnz	w0, #0, 404c7c <method_set_x11_keyboard+0x324>
  404c58:	ldr	x8, [sp, #144]
  404c5c:	ldr	x0, [x8]
  404c60:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404c64:	add	x1, x1, #0xa0f
  404c68:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404c6c:	add	x2, x2, #0xfdf
  404c70:	bl	402440 <sd_bus_error_setf@plt>
  404c74:	stur	w0, [x29, #-4]
  404c78:	b	405188 <method_set_x11_keyboard+0x830>
  404c7c:	ldur	x0, [x29, #-56]
  404c80:	ldur	x1, [x29, #-48]
  404c84:	ldur	x2, [x29, #-64]
  404c88:	ldur	x3, [x29, #-72]
  404c8c:	bl	405dd4 <verify_xkb_rmlvo>
  404c90:	stur	w0, [x29, #-84]
  404c94:	ldur	w8, [x29, #-84]
  404c98:	cmp	w8, #0x0
  404c9c:	cset	w8, ge  // ge = tcont
  404ca0:	tbnz	w8, #0, 404de8 <method_set_x11_keyboard+0x490>
  404ca4:	mov	w8, #0x3                   	// #3
  404ca8:	stur	w8, [x29, #-104]
  404cac:	ldur	w8, [x29, #-84]
  404cb0:	stur	w8, [x29, #-108]
  404cb4:	stur	wzr, [x29, #-112]
  404cb8:	ldur	w0, [x29, #-112]
  404cbc:	bl	4022a0 <log_get_max_level_realm@plt>
  404cc0:	ldur	w8, [x29, #-104]
  404cc4:	and	w8, w8, #0x7
  404cc8:	cmp	w0, w8
  404ccc:	b.lt	404d74 <method_set_x11_keyboard+0x41c>  // b.tstop
  404cd0:	ldur	w8, [x29, #-112]
  404cd4:	ldur	w9, [x29, #-104]
  404cd8:	orr	w0, w9, w8, lsl #10
  404cdc:	ldur	w1, [x29, #-108]
  404ce0:	ldur	x10, [x29, #-56]
  404ce4:	str	w0, [sp, #120]
  404ce8:	mov	x0, x10
  404cec:	str	w1, [sp, #116]
  404cf0:	bl	405a00 <strempty>
  404cf4:	ldur	x10, [x29, #-48]
  404cf8:	str	x0, [sp, #104]
  404cfc:	mov	x0, x10
  404d00:	bl	405a00 <strempty>
  404d04:	ldur	x10, [x29, #-64]
  404d08:	str	x0, [sp, #96]
  404d0c:	mov	x0, x10
  404d10:	bl	405a00 <strempty>
  404d14:	ldur	x10, [x29, #-72]
  404d18:	str	x0, [sp, #88]
  404d1c:	mov	x0, x10
  404d20:	bl	405a00 <strempty>
  404d24:	ldr	w8, [sp, #120]
  404d28:	str	x0, [sp, #80]
  404d2c:	mov	w0, w8
  404d30:	ldr	w1, [sp, #116]
  404d34:	ldr	x2, [sp, #136]
  404d38:	mov	w3, #0x267                 	// #615
  404d3c:	ldr	x4, [sp, #128]
  404d40:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  404d44:	add	x5, x5, #0xffe
  404d48:	ldr	x6, [sp, #104]
  404d4c:	ldr	x7, [sp, #96]
  404d50:	mov	x10, sp
  404d54:	ldr	x11, [sp, #88]
  404d58:	str	x11, [x10]
  404d5c:	mov	x10, sp
  404d60:	ldr	x12, [sp, #80]
  404d64:	str	x12, [x10, #8]
  404d68:	bl	4022b0 <log_internal_realm@plt>
  404d6c:	str	w0, [sp, #76]
  404d70:	b	404d88 <method_set_x11_keyboard+0x430>
  404d74:	ldur	w0, [x29, #-108]
  404d78:	bl	4022c0 <abs@plt>
  404d7c:	mov	w8, wzr
  404d80:	subs	w8, w8, w0, uxtb
  404d84:	str	w8, [sp, #76]
  404d88:	ldr	w8, [sp, #76]
  404d8c:	stur	w8, [x29, #-116]
  404d90:	ldur	w8, [x29, #-84]
  404d94:	mov	w9, #0xffffffa1            	// #-95
  404d98:	cmp	w8, w9
  404d9c:	b.ne	404dc4 <method_set_x11_keyboard+0x46c>  // b.any
  404da0:	ldr	x8, [sp, #144]
  404da4:	ldr	x0, [x8]
  404da8:	adrp	x1, 40a000 <locale_vtable+0xc08>
  404dac:	add	x1, x1, #0x54
  404db0:	adrp	x2, 40a000 <locale_vtable+0xc08>
  404db4:	add	x2, x2, #0x7c
  404db8:	bl	402440 <sd_bus_error_setf@plt>
  404dbc:	stur	w0, [x29, #-4]
  404dc0:	b	405188 <method_set_x11_keyboard+0x830>
  404dc4:	ldr	x8, [sp, #144]
  404dc8:	ldr	x0, [x8]
  404dcc:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  404dd0:	add	x1, x1, #0xa0f
  404dd4:	adrp	x2, 40a000 <locale_vtable+0xc08>
  404dd8:	add	x2, x2, #0xb7
  404ddc:	bl	402520 <sd_bus_error_set@plt>
  404de0:	stur	w0, [x29, #-4]
  404de4:	b	405188 <method_set_x11_keyboard+0x830>
  404de8:	ldr	x8, [sp, #144]
  404dec:	ldr	x0, [x8, #16]
  404df0:	ldur	w9, [x29, #-80]
  404df4:	cmp	w9, #0x0
  404df8:	cset	w9, ne  // ne = any
  404dfc:	ldur	x10, [x29, #-40]
  404e00:	add	x6, x10, #0xd0
  404e04:	ldr	x7, [x8]
  404e08:	mov	w1, #0x15                  	// #21
  404e0c:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  404e10:	add	x2, x2, #0xd7b
  404e14:	mov	x10, xzr
  404e18:	mov	x3, x10
  404e1c:	and	w4, w9, #0x1
  404e20:	mov	w5, #0xffffffff            	// #-1
  404e24:	bl	4024a0 <bus_verify_polkit_async@plt>
  404e28:	stur	w0, [x29, #-84]
  404e2c:	ldur	w9, [x29, #-84]
  404e30:	cmp	w9, #0x0
  404e34:	cset	w9, ge  // ge = tcont
  404e38:	tbnz	w9, #0, 404e48 <method_set_x11_keyboard+0x4f0>
  404e3c:	ldur	w8, [x29, #-84]
  404e40:	stur	w8, [x29, #-4]
  404e44:	b	405188 <method_set_x11_keyboard+0x830>
  404e48:	ldur	w8, [x29, #-84]
  404e4c:	cbnz	w8, 404e5c <method_set_x11_keyboard+0x504>
  404e50:	mov	w8, #0x1                   	// #1
  404e54:	stur	w8, [x29, #-4]
  404e58:	b	405188 <method_set_x11_keyboard+0x830>
  404e5c:	ldur	x8, [x29, #-40]
  404e60:	add	x0, x8, #0x90
  404e64:	ldur	x1, [x29, #-48]
  404e68:	bl	402510 <free_and_strdup@plt>
  404e6c:	cmp	w0, #0x0
  404e70:	cset	w9, lt  // lt = tstop
  404e74:	tbnz	w9, #0, 404ecc <method_set_x11_keyboard+0x574>
  404e78:	ldur	x8, [x29, #-40]
  404e7c:	add	x0, x8, #0x98
  404e80:	ldur	x1, [x29, #-56]
  404e84:	bl	402510 <free_and_strdup@plt>
  404e88:	cmp	w0, #0x0
  404e8c:	cset	w9, lt  // lt = tstop
  404e90:	tbnz	w9, #0, 404ecc <method_set_x11_keyboard+0x574>
  404e94:	ldur	x8, [x29, #-40]
  404e98:	add	x0, x8, #0xa0
  404e9c:	ldur	x1, [x29, #-64]
  404ea0:	bl	402510 <free_and_strdup@plt>
  404ea4:	cmp	w0, #0x0
  404ea8:	cset	w9, lt  // lt = tstop
  404eac:	tbnz	w9, #0, 404ecc <method_set_x11_keyboard+0x574>
  404eb0:	ldur	x8, [x29, #-40]
  404eb4:	add	x0, x8, #0xa8
  404eb8:	ldur	x1, [x29, #-72]
  404ebc:	bl	402510 <free_and_strdup@plt>
  404ec0:	cmp	w0, #0x0
  404ec4:	cset	w9, ge  // ge = tcont
  404ec8:	tbnz	w9, #0, 404ed8 <method_set_x11_keyboard+0x580>
  404ecc:	mov	w8, #0xfffffff4            	// #-12
  404ed0:	stur	w8, [x29, #-4]
  404ed4:	b	405188 <method_set_x11_keyboard+0x830>
  404ed8:	ldur	x0, [x29, #-40]
  404edc:	bl	407548 <x11_write_data>
  404ee0:	stur	w0, [x29, #-84]
  404ee4:	ldur	w8, [x29, #-84]
  404ee8:	cmp	w8, #0x0
  404eec:	cset	w8, ge  // ge = tcont
  404ef0:	tbnz	w8, #0, 404f8c <method_set_x11_keyboard+0x634>
  404ef4:	mov	w8, #0x3                   	// #3
  404ef8:	stur	w8, [x29, #-120]
  404efc:	ldur	w8, [x29, #-84]
  404f00:	stur	w8, [x29, #-124]
  404f04:	stur	wzr, [x29, #-128]
  404f08:	ldur	w0, [x29, #-128]
  404f0c:	bl	4022a0 <log_get_max_level_realm@plt>
  404f10:	ldur	w8, [x29, #-120]
  404f14:	and	w8, w8, #0x7
  404f18:	cmp	w0, w8
  404f1c:	b.lt	404f50 <method_set_x11_keyboard+0x5f8>  // b.tstop
  404f20:	ldur	w8, [x29, #-128]
  404f24:	ldur	w9, [x29, #-120]
  404f28:	orr	w0, w9, w8, lsl #10
  404f2c:	ldur	w1, [x29, #-124]
  404f30:	ldr	x2, [sp, #136]
  404f34:	mov	w3, #0x285                 	// #645
  404f38:	ldr	x4, [sp, #128]
  404f3c:	adrp	x5, 40a000 <locale_vtable+0xc08>
  404f40:	add	x5, x5, #0xf1
  404f44:	bl	4022b0 <log_internal_realm@plt>
  404f48:	str	w0, [sp, #72]
  404f4c:	b	404f64 <method_set_x11_keyboard+0x60c>
  404f50:	ldur	w0, [x29, #-124]
  404f54:	bl	4022c0 <abs@plt>
  404f58:	mov	w8, wzr
  404f5c:	subs	w8, w8, w0, uxtb
  404f60:	str	w8, [sp, #72]
  404f64:	ldr	w8, [sp, #72]
  404f68:	stur	w8, [x29, #-132]
  404f6c:	ldr	x9, [sp, #144]
  404f70:	ldr	x0, [x9]
  404f74:	ldur	w1, [x29, #-84]
  404f78:	adrp	x2, 40a000 <locale_vtable+0xc08>
  404f7c:	add	x2, x2, #0xf1
  404f80:	bl	4024b0 <sd_bus_error_set_errnof@plt>
  404f84:	stur	w0, [x29, #-4]
  404f88:	b	405188 <method_set_x11_keyboard+0x830>
  404f8c:	mov	w8, #0x6                   	// #6
  404f90:	stur	w8, [x29, #-136]
  404f94:	stur	wzr, [x29, #-140]
  404f98:	stur	wzr, [x29, #-144]
  404f9c:	ldur	w0, [x29, #-144]
  404fa0:	bl	4022a0 <log_get_max_level_realm@plt>
  404fa4:	ldur	w8, [x29, #-136]
  404fa8:	and	w8, w8, #0x7
  404fac:	cmp	w0, w8
  404fb0:	b.lt	405068 <method_set_x11_keyboard+0x710>  // b.tstop
  404fb4:	ldur	w8, [x29, #-144]
  404fb8:	ldur	w9, [x29, #-136]
  404fbc:	orr	w0, w9, w8, lsl #10
  404fc0:	ldur	w1, [x29, #-140]
  404fc4:	ldur	x10, [x29, #-40]
  404fc8:	ldr	x10, [x10, #144]
  404fcc:	str	w0, [sp, #68]
  404fd0:	mov	x0, x10
  404fd4:	str	w1, [sp, #64]
  404fd8:	bl	405a00 <strempty>
  404fdc:	ldur	x10, [x29, #-40]
  404fe0:	ldr	x10, [x10, #152]
  404fe4:	str	x0, [sp, #56]
  404fe8:	mov	x0, x10
  404fec:	bl	405a00 <strempty>
  404ff0:	ldur	x10, [x29, #-40]
  404ff4:	ldr	x10, [x10, #160]
  404ff8:	str	x0, [sp, #48]
  404ffc:	mov	x0, x10
  405000:	bl	405a00 <strempty>
  405004:	ldur	x10, [x29, #-40]
  405008:	ldr	x10, [x10, #168]
  40500c:	str	x0, [sp, #40]
  405010:	mov	x0, x10
  405014:	bl	405a00 <strempty>
  405018:	ldr	w8, [sp, #68]
  40501c:	str	x0, [sp, #32]
  405020:	mov	w0, w8
  405024:	ldr	w1, [sp, #64]
  405028:	ldr	x2, [sp, #136]
  40502c:	mov	w3, #0x28d                 	// #653
  405030:	ldr	x4, [sp, #128]
  405034:	adrp	x5, 40a000 <locale_vtable+0xc08>
  405038:	add	x5, x5, #0x117
  40503c:	ldr	x6, [sp, #56]
  405040:	ldr	x7, [sp, #48]
  405044:	mov	x10, sp
  405048:	ldr	x11, [sp, #40]
  40504c:	str	x11, [x10]
  405050:	mov	x10, sp
  405054:	ldr	x12, [sp, #32]
  405058:	str	x12, [x10, #8]
  40505c:	bl	4022b0 <log_internal_realm@plt>
  405060:	str	w0, [sp, #28]
  405064:	b	40507c <method_set_x11_keyboard+0x724>
  405068:	ldur	w0, [x29, #-140]
  40506c:	bl	4022c0 <abs@plt>
  405070:	mov	w8, wzr
  405074:	subs	w8, w8, w0, uxtb
  405078:	str	w8, [sp, #28]
  40507c:	ldr	w8, [sp, #28]
  405080:	stur	w8, [x29, #-148]
  405084:	ldr	x9, [sp, #144]
  405088:	ldr	x0, [x9, #16]
  40508c:	bl	4024c0 <sd_bus_message_get_bus@plt>
  405090:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405094:	add	x1, x1, #0x83c
  405098:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  40509c:	add	x2, x2, #0x794
  4050a0:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  4050a4:	add	x3, x3, #0x8bf
  4050a8:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  4050ac:	add	x4, x4, #0x8cb
  4050b0:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  4050b4:	add	x5, x5, #0x8d4
  4050b8:	adrp	x6, 409000 <x11_convert_to_vconsole+0x104>
  4050bc:	add	x6, x6, #0x8df
  4050c0:	mov	x9, xzr
  4050c4:	mov	x7, x9
  4050c8:	bl	4024d0 <sd_bus_emit_properties_changed@plt>
  4050cc:	ldur	w8, [x29, #-76]
  4050d0:	cbz	w8, 405170 <method_set_x11_keyboard+0x818>
  4050d4:	ldur	x0, [x29, #-40]
  4050d8:	ldr	x8, [sp, #144]
  4050dc:	ldr	x1, [x8, #16]
  4050e0:	bl	405df8 <x11_convert_to_vconsole_and_emit>
  4050e4:	stur	w0, [x29, #-84]
  4050e8:	ldur	w9, [x29, #-84]
  4050ec:	cmp	w9, #0x0
  4050f0:	cset	w9, ge  // ge = tcont
  4050f4:	tbnz	w9, #0, 405170 <method_set_x11_keyboard+0x818>
  4050f8:	mov	w8, #0x3                   	// #3
  4050fc:	stur	w8, [x29, #-152]
  405100:	ldur	w8, [x29, #-84]
  405104:	stur	w8, [x29, #-156]
  405108:	str	wzr, [sp, #160]
  40510c:	ldr	w0, [sp, #160]
  405110:	bl	4022a0 <log_get_max_level_realm@plt>
  405114:	ldur	w8, [x29, #-152]
  405118:	and	w8, w8, #0x7
  40511c:	cmp	w0, w8
  405120:	b.lt	405154 <method_set_x11_keyboard+0x7fc>  // b.tstop
  405124:	ldr	w8, [sp, #160]
  405128:	ldur	w9, [x29, #-152]
  40512c:	orr	w0, w9, w8, lsl #10
  405130:	ldur	w1, [x29, #-156]
  405134:	ldr	x2, [sp, #136]
  405138:	mov	w3, #0x298                 	// #664
  40513c:	ldr	x4, [sp, #128]
  405140:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  405144:	add	x5, x5, #0xdfc
  405148:	bl	4022b0 <log_internal_realm@plt>
  40514c:	str	w0, [sp, #24]
  405150:	b	405168 <method_set_x11_keyboard+0x810>
  405154:	ldur	w0, [x29, #-156]
  405158:	bl	4022c0 <abs@plt>
  40515c:	mov	w8, wzr
  405160:	subs	w8, w8, w0, uxtb
  405164:	str	w8, [sp, #24]
  405168:	ldr	w8, [sp, #24]
  40516c:	str	w8, [sp, #156]
  405170:	ldr	x8, [sp, #144]
  405174:	ldr	x0, [x8, #16]
  405178:	mov	x9, xzr
  40517c:	mov	x1, x9
  405180:	bl	402490 <sd_bus_reply_method_return@plt>
  405184:	stur	w0, [x29, #-4]
  405188:	ldur	w0, [x29, #-4]
  40518c:	ldr	x28, [sp, #336]
  405190:	ldp	x29, x30, [sp, #320]
  405194:	add	sp, sp, #0x160
  405198:	ret

000000000040519c <strv_freep>:
  40519c:	sub	sp, sp, #0x20
  4051a0:	stp	x29, x30, [sp, #16]
  4051a4:	add	x29, sp, #0x10
  4051a8:	str	x0, [sp, #8]
  4051ac:	ldr	x8, [sp, #8]
  4051b0:	ldr	x8, [x8]
  4051b4:	cbz	x8, 4051c4 <strv_freep+0x28>
  4051b8:	ldr	x8, [sp, #8]
  4051bc:	ldr	x0, [x8]
  4051c0:	bl	402460 <strv_free@plt>
  4051c4:	ldp	x29, x30, [sp, #16]
  4051c8:	add	sp, sp, #0x20
  4051cc:	ret

00000000004051d0 <isempty>:
  4051d0:	sub	sp, sp, #0x10
  4051d4:	str	x0, [sp, #8]
  4051d8:	ldr	x8, [sp, #8]
  4051dc:	mov	w9, #0x1                   	// #1
  4051e0:	str	w9, [sp, #4]
  4051e4:	cbz	x8, 405200 <isempty+0x30>
  4051e8:	ldr	x8, [sp, #8]
  4051ec:	ldrb	w9, [x8]
  4051f0:	cmp	w9, #0x0
  4051f4:	cset	w9, ne  // ne = any
  4051f8:	eor	w9, w9, #0x1
  4051fc:	str	w9, [sp, #4]
  405200:	ldr	w8, [sp, #4]
  405204:	and	w0, w8, #0x1
  405208:	add	sp, sp, #0x10
  40520c:	ret

0000000000405210 <locale_variables_freep>:
  405210:	sub	sp, sp, #0x20
  405214:	stp	x29, x30, [sp, #16]
  405218:	add	x29, sp, #0x10
  40521c:	str	x0, [sp, #8]
  405220:	ldr	x0, [sp, #8]
  405224:	bl	402530 <locale_variables_free@plt>
  405228:	ldp	x29, x30, [sp, #16]
  40522c:	add	sp, sp, #0x20
  405230:	ret

0000000000405234 <startswith>:
  405234:	sub	sp, sp, #0x30
  405238:	stp	x29, x30, [sp, #32]
  40523c:	add	x29, sp, #0x20
  405240:	str	x0, [sp, #16]
  405244:	str	x1, [sp, #8]
  405248:	ldr	x0, [sp, #8]
  40524c:	bl	402470 <strlen@plt>
  405250:	str	x0, [sp]
  405254:	ldr	x0, [sp, #16]
  405258:	ldr	x1, [sp, #8]
  40525c:	ldr	x2, [sp]
  405260:	bl	402540 <strncmp@plt>
  405264:	cbnz	w0, 40527c <startswith+0x48>
  405268:	ldr	x8, [sp, #16]
  40526c:	ldr	x9, [sp]
  405270:	add	x8, x8, x9
  405274:	stur	x8, [x29, #-8]
  405278:	b	405284 <startswith+0x50>
  40527c:	mov	x8, xzr
  405280:	stur	x8, [x29, #-8]
  405284:	ldur	x0, [x29, #-8]
  405288:	ldp	x29, x30, [sp, #32]
  40528c:	add	sp, sp, #0x30
  405290:	ret

0000000000405294 <freep>:
  405294:	sub	sp, sp, #0x20
  405298:	stp	x29, x30, [sp, #16]
  40529c:	add	x29, sp, #0x10
  4052a0:	str	x0, [sp, #8]
  4052a4:	ldr	x8, [sp, #8]
  4052a8:	ldr	x0, [x8]
  4052ac:	bl	402480 <free@plt>
  4052b0:	ldp	x29, x30, [sp, #16]
  4052b4:	add	sp, sp, #0x20
  4052b8:	ret

00000000004052bc <streq_ptr>:
  4052bc:	sub	sp, sp, #0x20
  4052c0:	stp	x29, x30, [sp, #16]
  4052c4:	add	x29, sp, #0x10
  4052c8:	str	x0, [sp, #8]
  4052cc:	str	x1, [sp]
  4052d0:	ldr	x0, [sp, #8]
  4052d4:	ldr	x1, [sp]
  4052d8:	bl	402550 <strcmp_ptr@plt>
  4052dc:	cmp	w0, #0x0
  4052e0:	cset	w8, eq  // eq = none
  4052e4:	and	w0, w8, #0x1
  4052e8:	ldp	x29, x30, [sp, #16]
  4052ec:	add	sp, sp, #0x20
  4052f0:	ret

00000000004052f4 <locale_update_system_manager>:
  4052f4:	sub	sp, sp, #0x120
  4052f8:	stp	x29, x30, [sp, #256]
  4052fc:	str	x28, [sp, #272]
  405300:	add	x29, sp, #0x100
  405304:	mov	x8, xzr
  405308:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  40530c:	add	x9, x9, #0x698
  405310:	add	x9, x9, #0x3
  405314:	adrp	x10, 409000 <x11_convert_to_vconsole+0x104>
  405318:	add	x10, x10, #0xba5
  40531c:	adrp	x11, 409000 <x11_convert_to_vconsole+0x104>
  405320:	add	x11, x11, #0xc53
  405324:	adrp	x12, 409000 <x11_convert_to_vconsole+0x104>
  405328:	add	x12, x12, #0xb6f
  40532c:	stur	x0, [x29, #-16]
  405330:	stur	x1, [x29, #-24]
  405334:	stur	x8, [x29, #-32]
  405338:	stur	x8, [x29, #-40]
  40533c:	stur	x8, [x29, #-48]
  405340:	stur	xzr, [x29, #-72]
  405344:	stur	xzr, [x29, #-64]
  405348:	stur	xzr, [x29, #-56]
  40534c:	str	x9, [sp, #64]
  405350:	str	x10, [sp, #56]
  405354:	str	x11, [sp, #48]
  405358:	str	x12, [sp, #40]
  40535c:	ldur	x8, [x29, #-24]
  405360:	cmp	x8, #0x0
  405364:	cset	w9, ne  // ne = any
  405368:	mov	w10, #0x1                   	// #1
  40536c:	eor	w9, w9, #0x1
  405370:	eor	w9, w9, w10
  405374:	eor	w9, w9, w10
  405378:	and	w9, w9, #0x1
  40537c:	mov	w0, w9
  405380:	sxtw	x8, w0
  405384:	cbz	x8, 4053a8 <locale_update_system_manager+0xb4>
  405388:	mov	w8, wzr
  40538c:	mov	w0, w8
  405390:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405394:	add	x1, x1, #0xb6b
  405398:	ldr	x2, [sp, #64]
  40539c:	mov	w3, #0x29                  	// #41
  4053a0:	ldr	x4, [sp, #40]
  4053a4:	bl	4022e0 <log_assert_failed_realm@plt>
  4053a8:	mov	x0, #0xe                   	// #14
  4053ac:	mov	x1, #0x8                   	// #8
  4053b0:	bl	402390 <calloc@plt>
  4053b4:	stur	x0, [x29, #-32]
  4053b8:	ldur	x8, [x29, #-32]
  4053bc:	cbnz	x8, 4053e8 <locale_update_system_manager+0xf4>
  4053c0:	mov	w8, wzr
  4053c4:	mov	w0, w8
  4053c8:	ldr	x1, [sp, #64]
  4053cc:	mov	w2, #0x2d                  	// #45
  4053d0:	ldr	x3, [sp, #56]
  4053d4:	bl	402560 <log_oom_internal@plt>
  4053d8:	stur	w0, [x29, #-4]
  4053dc:	mov	w8, #0x1                   	// #1
  4053e0:	stur	w8, [x29, #-100]
  4053e4:	b	4058e8 <locale_update_system_manager+0x5f4>
  4053e8:	mov	x0, #0xe                   	// #14
  4053ec:	mov	x1, #0x8                   	// #8
  4053f0:	bl	402390 <calloc@plt>
  4053f4:	stur	x0, [x29, #-40]
  4053f8:	ldur	x8, [x29, #-40]
  4053fc:	cbnz	x8, 405428 <locale_update_system_manager+0x134>
  405400:	mov	w8, wzr
  405404:	mov	w0, w8
  405408:	ldr	x1, [sp, #64]
  40540c:	mov	w2, #0x31                  	// #49
  405410:	ldr	x3, [sp, #56]
  405414:	bl	402560 <log_oom_internal@plt>
  405418:	stur	w0, [x29, #-4]
  40541c:	mov	w8, #0x1                   	// #1
  405420:	stur	w8, [x29, #-100]
  405424:	b	4058e8 <locale_update_system_manager+0x5f4>
  405428:	stur	wzr, [x29, #-92]
  40542c:	stur	xzr, [x29, #-80]
  405430:	stur	xzr, [x29, #-88]
  405434:	ldur	w8, [x29, #-92]
  405438:	cmp	w8, #0xe
  40543c:	b.ge	405584 <locale_update_system_manager+0x290>  // b.tcont
  405440:	ldur	w0, [x29, #-92]
  405444:	bl	4023a0 <locale_variable_to_string@plt>
  405448:	stur	x0, [x29, #-112]
  40544c:	ldur	x8, [x29, #-112]
  405450:	cmp	x8, #0x0
  405454:	cset	w9, ne  // ne = any
  405458:	mov	w10, #0x1                   	// #1
  40545c:	eor	w9, w9, #0x1
  405460:	eor	w9, w9, w10
  405464:	eor	w9, w9, w10
  405468:	and	w9, w9, #0x1
  40546c:	mov	w0, w9
  405470:	sxtw	x8, w0
  405474:	cbz	x8, 405498 <locale_update_system_manager+0x1a4>
  405478:	mov	w8, wzr
  40547c:	mov	w0, w8
  405480:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405484:	add	x1, x1, #0x94c
  405488:	ldr	x2, [sp, #64]
  40548c:	mov	w3, #0x37                  	// #55
  405490:	ldr	x4, [sp, #40]
  405494:	bl	4022e0 <log_assert_failed_realm@plt>
  405498:	ldur	x8, [x29, #-16]
  40549c:	add	x8, x8, #0x10
  4054a0:	ldursw	x9, [x29, #-92]
  4054a4:	mov	x10, #0x8                   	// #8
  4054a8:	mul	x9, x10, x9
  4054ac:	add	x8, x8, x9
  4054b0:	ldr	x0, [x8]
  4054b4:	bl	4051d0 <isempty>
  4054b8:	tbnz	w0, #0, 4054c0 <locale_update_system_manager+0x1cc>
  4054bc:	b	4054e8 <locale_update_system_manager+0x1f4>
  4054c0:	ldur	x8, [x29, #-112]
  4054c4:	ldur	x9, [x29, #-32]
  4054c8:	ldur	x10, [x29, #-80]
  4054cc:	add	x11, x10, #0x1
  4054d0:	stur	x11, [x29, #-80]
  4054d4:	mov	x11, #0x8                   	// #8
  4054d8:	mul	x10, x11, x10
  4054dc:	add	x9, x9, x10
  4054e0:	str	x8, [x9]
  4054e4:	b	405574 <locale_update_system_manager+0x280>
  4054e8:	ldur	x0, [x29, #-112]
  4054ec:	ldur	x8, [x29, #-16]
  4054f0:	add	x8, x8, #0x10
  4054f4:	ldursw	x9, [x29, #-92]
  4054f8:	mov	x10, #0x8                   	// #8
  4054fc:	mul	x9, x10, x9
  405500:	add	x8, x8, x9
  405504:	ldr	x2, [x8]
  405508:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  40550c:	add	x1, x1, #0xbc2
  405510:	mov	x8, xzr
  405514:	mov	x3, x8
  405518:	bl	402570 <strjoin_real@plt>
  40551c:	stur	x0, [x29, #-120]
  405520:	ldur	x8, [x29, #-120]
  405524:	cbnz	x8, 405550 <locale_update_system_manager+0x25c>
  405528:	mov	w8, wzr
  40552c:	mov	w0, w8
  405530:	ldr	x1, [sp, #64]
  405534:	mov	w2, #0x40                  	// #64
  405538:	ldr	x3, [sp, #56]
  40553c:	bl	402560 <log_oom_internal@plt>
  405540:	stur	w0, [x29, #-4]
  405544:	mov	w8, #0x1                   	// #1
  405548:	stur	w8, [x29, #-100]
  40554c:	b	4058e8 <locale_update_system_manager+0x5f4>
  405550:	ldur	x8, [x29, #-120]
  405554:	ldur	x9, [x29, #-40]
  405558:	ldur	x10, [x29, #-88]
  40555c:	add	x11, x10, #0x1
  405560:	stur	x11, [x29, #-88]
  405564:	mov	x11, #0x8                   	// #8
  405568:	mul	x10, x11, x10
  40556c:	add	x9, x9, x10
  405570:	str	x8, [x9]
  405574:	ldur	w8, [x29, #-92]
  405578:	add	w8, w8, #0x1
  40557c:	stur	w8, [x29, #-92]
  405580:	b	405434 <locale_update_system_manager+0x140>
  405584:	ldur	x8, [x29, #-80]
  405588:	ldur	x9, [x29, #-88]
  40558c:	add	x8, x8, x9
  405590:	cmp	x8, #0xe
  405594:	cset	w10, eq  // eq = none
  405598:	mov	w11, #0x1                   	// #1
  40559c:	eor	w10, w10, #0x1
  4055a0:	eor	w10, w10, w11
  4055a4:	eor	w10, w10, w11
  4055a8:	and	w10, w10, #0x1
  4055ac:	mov	w0, w10
  4055b0:	sxtw	x8, w0
  4055b4:	cbz	x8, 4055d8 <locale_update_system_manager+0x2e4>
  4055b8:	mov	w8, wzr
  4055bc:	mov	w0, w8
  4055c0:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  4055c4:	add	x1, x1, #0xbc4
  4055c8:	ldr	x2, [sp, #64]
  4055cc:	mov	w3, #0x46                  	// #70
  4055d0:	ldr	x4, [sp, #40]
  4055d4:	bl	4022e0 <log_assert_failed_realm@plt>
  4055d8:	ldur	x0, [x29, #-24]
  4055dc:	sub	x1, x29, #0x30
  4055e0:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  4055e4:	add	x2, x2, #0xbe8
  4055e8:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  4055ec:	add	x3, x3, #0xc01
  4055f0:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  4055f4:	add	x4, x4, #0xc1b
  4055f8:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  4055fc:	add	x5, x5, #0xc3c
  405600:	bl	402580 <sd_bus_message_new_method_call@plt>
  405604:	stur	w0, [x29, #-96]
  405608:	ldur	w8, [x29, #-96]
  40560c:	cmp	w8, #0x0
  405610:	cset	w8, ge  // ge = tcont
  405614:	tbnz	w8, #0, 4056a0 <locale_update_system_manager+0x3ac>
  405618:	mov	w8, #0x3                   	// #3
  40561c:	stur	w8, [x29, #-124]
  405620:	ldur	w8, [x29, #-96]
  405624:	str	w8, [sp, #128]
  405628:	str	wzr, [sp, #124]
  40562c:	ldr	w0, [sp, #124]
  405630:	bl	4022a0 <log_get_max_level_realm@plt>
  405634:	ldur	w8, [x29, #-124]
  405638:	and	w8, w8, #0x7
  40563c:	cmp	w0, w8
  405640:	b.lt	405670 <locale_update_system_manager+0x37c>  // b.tstop
  405644:	ldr	w8, [sp, #124]
  405648:	ldur	w9, [x29, #-124]
  40564c:	orr	w0, w9, w8, lsl #10
  405650:	ldr	w1, [sp, #128]
  405654:	ldr	x2, [sp, #64]
  405658:	mov	w3, #0x4d                  	// #77
  40565c:	ldr	x4, [sp, #56]
  405660:	ldr	x5, [sp, #48]
  405664:	bl	4022b0 <log_internal_realm@plt>
  405668:	str	w0, [sp, #36]
  40566c:	b	405684 <locale_update_system_manager+0x390>
  405670:	ldr	w0, [sp, #128]
  405674:	bl	4022c0 <abs@plt>
  405678:	mov	w8, wzr
  40567c:	subs	w8, w8, w0, uxtb
  405680:	str	w8, [sp, #36]
  405684:	ldr	w8, [sp, #36]
  405688:	str	w8, [sp, #120]
  40568c:	ldr	w8, [sp, #120]
  405690:	stur	w8, [x29, #-4]
  405694:	mov	w8, #0x1                   	// #1
  405698:	stur	w8, [x29, #-100]
  40569c:	b	4058e8 <locale_update_system_manager+0x5f4>
  4056a0:	ldur	x0, [x29, #-48]
  4056a4:	ldur	x1, [x29, #-32]
  4056a8:	bl	4023c0 <sd_bus_message_append_strv@plt>
  4056ac:	stur	w0, [x29, #-96]
  4056b0:	ldur	w8, [x29, #-96]
  4056b4:	cmp	w8, #0x0
  4056b8:	cset	w8, ge  // ge = tcont
  4056bc:	tbnz	w8, #0, 405748 <locale_update_system_manager+0x454>
  4056c0:	mov	w8, #0x3                   	// #3
  4056c4:	str	w8, [sp, #116]
  4056c8:	ldur	w8, [x29, #-96]
  4056cc:	str	w8, [sp, #112]
  4056d0:	str	wzr, [sp, #108]
  4056d4:	ldr	w0, [sp, #108]
  4056d8:	bl	4022a0 <log_get_max_level_realm@plt>
  4056dc:	ldr	w8, [sp, #116]
  4056e0:	and	w8, w8, #0x7
  4056e4:	cmp	w0, w8
  4056e8:	b.lt	405718 <locale_update_system_manager+0x424>  // b.tstop
  4056ec:	ldr	w8, [sp, #108]
  4056f0:	ldr	w9, [sp, #116]
  4056f4:	orr	w0, w9, w8, lsl #10
  4056f8:	ldr	w1, [sp, #112]
  4056fc:	ldr	x2, [sp, #64]
  405700:	mov	w3, #0x51                  	// #81
  405704:	ldr	x4, [sp, #56]
  405708:	ldr	x5, [sp, #48]
  40570c:	bl	4022b0 <log_internal_realm@plt>
  405710:	str	w0, [sp, #32]
  405714:	b	40572c <locale_update_system_manager+0x438>
  405718:	ldr	w0, [sp, #112]
  40571c:	bl	4022c0 <abs@plt>
  405720:	mov	w8, wzr
  405724:	subs	w8, w8, w0, uxtb
  405728:	str	w8, [sp, #32]
  40572c:	ldr	w8, [sp, #32]
  405730:	str	w8, [sp, #104]
  405734:	ldr	w8, [sp, #104]
  405738:	stur	w8, [x29, #-4]
  40573c:	mov	w8, #0x1                   	// #1
  405740:	stur	w8, [x29, #-100]
  405744:	b	4058e8 <locale_update_system_manager+0x5f4>
  405748:	ldur	x0, [x29, #-48]
  40574c:	ldur	x1, [x29, #-40]
  405750:	bl	4023c0 <sd_bus_message_append_strv@plt>
  405754:	stur	w0, [x29, #-96]
  405758:	ldur	w8, [x29, #-96]
  40575c:	cmp	w8, #0x0
  405760:	cset	w8, ge  // ge = tcont
  405764:	tbnz	w8, #0, 4057f0 <locale_update_system_manager+0x4fc>
  405768:	mov	w8, #0x3                   	// #3
  40576c:	str	w8, [sp, #100]
  405770:	ldur	w8, [x29, #-96]
  405774:	str	w8, [sp, #96]
  405778:	str	wzr, [sp, #92]
  40577c:	ldr	w0, [sp, #92]
  405780:	bl	4022a0 <log_get_max_level_realm@plt>
  405784:	ldr	w8, [sp, #100]
  405788:	and	w8, w8, #0x7
  40578c:	cmp	w0, w8
  405790:	b.lt	4057c0 <locale_update_system_manager+0x4cc>  // b.tstop
  405794:	ldr	w8, [sp, #92]
  405798:	ldr	w9, [sp, #100]
  40579c:	orr	w0, w9, w8, lsl #10
  4057a0:	ldr	w1, [sp, #96]
  4057a4:	ldr	x2, [sp, #64]
  4057a8:	mov	w3, #0x55                  	// #85
  4057ac:	ldr	x4, [sp, #56]
  4057b0:	ldr	x5, [sp, #48]
  4057b4:	bl	4022b0 <log_internal_realm@plt>
  4057b8:	str	w0, [sp, #28]
  4057bc:	b	4057d4 <locale_update_system_manager+0x4e0>
  4057c0:	ldr	w0, [sp, #96]
  4057c4:	bl	4022c0 <abs@plt>
  4057c8:	mov	w8, wzr
  4057cc:	subs	w8, w8, w0, uxtb
  4057d0:	str	w8, [sp, #28]
  4057d4:	ldr	w8, [sp, #28]
  4057d8:	str	w8, [sp, #88]
  4057dc:	ldr	w8, [sp, #88]
  4057e0:	stur	w8, [x29, #-4]
  4057e4:	mov	w8, #0x1                   	// #1
  4057e8:	stur	w8, [x29, #-100]
  4057ec:	b	4058e8 <locale_update_system_manager+0x5f4>
  4057f0:	ldur	x0, [x29, #-24]
  4057f4:	ldur	x1, [x29, #-48]
  4057f8:	mov	x8, xzr
  4057fc:	mov	x2, x8
  405800:	sub	x3, x29, #0x48
  405804:	mov	x4, x8
  405808:	bl	402590 <sd_bus_call@plt>
  40580c:	stur	w0, [x29, #-96]
  405810:	ldur	w9, [x29, #-96]
  405814:	cmp	w9, #0x0
  405818:	cset	w9, ge  // ge = tcont
  40581c:	tbnz	w9, #0, 4058dc <locale_update_system_manager+0x5e8>
  405820:	mov	w8, #0x3                   	// #3
  405824:	str	w8, [sp, #84]
  405828:	ldur	w8, [x29, #-96]
  40582c:	str	w8, [sp, #80]
  405830:	str	wzr, [sp, #76]
  405834:	ldr	w0, [sp, #76]
  405838:	bl	4022a0 <log_get_max_level_realm@plt>
  40583c:	ldr	w8, [sp, #84]
  405840:	and	w8, w8, #0x7
  405844:	cmp	w0, w8
  405848:	b.lt	4058ac <locale_update_system_manager+0x5b8>  // b.tstop
  40584c:	ldr	w8, [sp, #76]
  405850:	ldr	w9, [sp, #84]
  405854:	orr	w0, w9, w8, lsl #10
  405858:	ldr	w1, [sp, #80]
  40585c:	ldur	w8, [x29, #-96]
  405860:	sub	x10, x29, #0x48
  405864:	str	w0, [sp, #24]
  405868:	mov	x0, x10
  40586c:	str	w1, [sp, #20]
  405870:	mov	w1, w8
  405874:	bl	4025a0 <bus_error_message@plt>
  405878:	ldr	w8, [sp, #24]
  40587c:	str	x0, [sp, #8]
  405880:	mov	w0, w8
  405884:	ldr	w1, [sp, #20]
  405888:	ldr	x2, [sp, #64]
  40588c:	mov	w3, #0x59                  	// #89
  405890:	ldr	x4, [sp, #56]
  405894:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  405898:	add	x5, x5, #0xc74
  40589c:	ldr	x6, [sp, #8]
  4058a0:	bl	4022b0 <log_internal_realm@plt>
  4058a4:	str	w0, [sp, #4]
  4058a8:	b	4058c0 <locale_update_system_manager+0x5cc>
  4058ac:	ldr	w0, [sp, #80]
  4058b0:	bl	4022c0 <abs@plt>
  4058b4:	mov	w8, wzr
  4058b8:	subs	w8, w8, w0, uxtb
  4058bc:	str	w8, [sp, #4]
  4058c0:	ldr	w8, [sp, #4]
  4058c4:	str	w8, [sp, #72]
  4058c8:	ldr	w8, [sp, #72]
  4058cc:	stur	w8, [x29, #-4]
  4058d0:	mov	w8, #0x1                   	// #1
  4058d4:	stur	w8, [x29, #-100]
  4058d8:	b	4058e8 <locale_update_system_manager+0x5f4>
  4058dc:	stur	wzr, [x29, #-4]
  4058e0:	mov	w8, #0x1                   	// #1
  4058e4:	stur	w8, [x29, #-100]
  4058e8:	sub	x0, x29, #0x30
  4058ec:	bl	405984 <sd_bus_message_unrefp>
  4058f0:	sub	x0, x29, #0x28
  4058f4:	bl	40519c <strv_freep>
  4058f8:	sub	x0, x29, #0x20
  4058fc:	bl	405294 <freep>
  405900:	ldur	w0, [x29, #-4]
  405904:	ldr	x28, [sp, #272]
  405908:	ldp	x29, x30, [sp, #256]
  40590c:	add	sp, sp, #0x120
  405910:	ret

0000000000405914 <strv_join>:
  405914:	sub	sp, sp, #0x20
  405918:	stp	x29, x30, [sp, #16]
  40591c:	add	x29, sp, #0x10
  405920:	mov	x8, xzr
  405924:	str	x0, [sp, #8]
  405928:	str	x1, [sp]
  40592c:	ldr	x0, [sp, #8]
  405930:	ldr	x1, [sp]
  405934:	mov	x2, x8
  405938:	bl	4025b0 <strv_join_prefix@plt>
  40593c:	ldp	x29, x30, [sp, #16]
  405940:	add	sp, sp, #0x20
  405944:	ret

0000000000405948 <strnull>:
  405948:	sub	sp, sp, #0x20
  40594c:	str	x0, [sp, #24]
  405950:	ldr	x8, [sp, #24]
  405954:	str	x8, [sp, #16]
  405958:	cbz	x8, 405968 <strnull+0x20>
  40595c:	ldr	x8, [sp, #16]
  405960:	str	x8, [sp, #8]
  405964:	b	405974 <strnull+0x2c>
  405968:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  40596c:	add	x8, x8, #0xca1
  405970:	str	x8, [sp, #8]
  405974:	ldr	x8, [sp, #8]
  405978:	mov	x0, x8
  40597c:	add	sp, sp, #0x20
  405980:	ret

0000000000405984 <sd_bus_message_unrefp>:
  405984:	sub	sp, sp, #0x20
  405988:	stp	x29, x30, [sp, #16]
  40598c:	add	x29, sp, #0x10
  405990:	str	x0, [sp, #8]
  405994:	ldr	x8, [sp, #8]
  405998:	ldr	x8, [x8]
  40599c:	cbz	x8, 4059ac <sd_bus_message_unrefp+0x28>
  4059a0:	ldr	x8, [sp, #8]
  4059a4:	ldr	x0, [x8]
  4059a8:	bl	4025c0 <sd_bus_message_unref@plt>
  4059ac:	ldp	x29, x30, [sp, #16]
  4059b0:	add	sp, sp, #0x20
  4059b4:	ret

00000000004059b8 <empty_to_null>:
  4059b8:	sub	sp, sp, #0x20
  4059bc:	stp	x29, x30, [sp, #16]
  4059c0:	add	x29, sp, #0x10
  4059c4:	str	x0, [sp, #8]
  4059c8:	ldr	x0, [sp, #8]
  4059cc:	bl	4051d0 <isempty>
  4059d0:	tbnz	w0, #0, 4059d8 <empty_to_null+0x20>
  4059d4:	b	4059e4 <empty_to_null+0x2c>
  4059d8:	mov	x8, xzr
  4059dc:	str	x8, [sp]
  4059e0:	b	4059ec <empty_to_null+0x34>
  4059e4:	ldr	x8, [sp, #8]
  4059e8:	str	x8, [sp]
  4059ec:	ldr	x8, [sp]
  4059f0:	mov	x0, x8
  4059f4:	ldp	x29, x30, [sp, #16]
  4059f8:	add	sp, sp, #0x20
  4059fc:	ret

0000000000405a00 <strempty>:
  405a00:	sub	sp, sp, #0x20
  405a04:	str	x0, [sp, #24]
  405a08:	ldr	x8, [sp, #24]
  405a0c:	str	x8, [sp, #16]
  405a10:	cbz	x8, 405a20 <strempty+0x20>
  405a14:	ldr	x8, [sp, #16]
  405a18:	str	x8, [sp, #8]
  405a1c:	b	405a2c <strempty+0x2c>
  405a20:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  405a24:	add	x8, x8, #0x91c
  405a28:	str	x8, [sp, #8]
  405a2c:	ldr	x8, [sp, #8]
  405a30:	mov	x0, x8
  405a34:	add	sp, sp, #0x20
  405a38:	ret

0000000000405a3c <vconsole_reload>:
  405a3c:	sub	sp, sp, #0x80
  405a40:	stp	x29, x30, [sp, #112]
  405a44:	add	x29, sp, #0x70
  405a48:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  405a4c:	add	x8, x8, #0x698
  405a50:	add	x8, x8, #0x3
  405a54:	stur	x0, [x29, #-16]
  405a58:	stur	xzr, [x29, #-40]
  405a5c:	stur	xzr, [x29, #-32]
  405a60:	stur	xzr, [x29, #-24]
  405a64:	str	x8, [sp, #40]
  405a68:	ldur	x8, [x29, #-16]
  405a6c:	cmp	x8, #0x0
  405a70:	cset	w9, ne  // ne = any
  405a74:	mov	w10, #0x1                   	// #1
  405a78:	eor	w9, w9, #0x1
  405a7c:	eor	w9, w9, w10
  405a80:	eor	w9, w9, w10
  405a84:	and	w9, w9, #0x1
  405a88:	mov	w0, w9
  405a8c:	sxtw	x8, w0
  405a90:	cbz	x8, 405ab8 <vconsole_reload+0x7c>
  405a94:	mov	w8, wzr
  405a98:	mov	w0, w8
  405a9c:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405aa0:	add	x1, x1, #0xb6b
  405aa4:	ldr	x2, [sp, #40]
  405aa8:	mov	w3, #0x62                  	// #98
  405aac:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405ab0:	add	x4, x4, #0xe1e
  405ab4:	bl	4022e0 <log_assert_failed_realm@plt>
  405ab8:	ldur	x0, [x29, #-16]
  405abc:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405ac0:	add	x1, x1, #0xbe8
  405ac4:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  405ac8:	add	x2, x2, #0xc01
  405acc:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  405ad0:	add	x3, x3, #0xc1b
  405ad4:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405ad8:	add	x4, x4, #0xe3c
  405adc:	sub	x5, x29, #0x28
  405ae0:	mov	x8, xzr
  405ae4:	mov	x6, x8
  405ae8:	adrp	x7, 409000 <x11_convert_to_vconsole+0x104>
  405aec:	add	x7, x7, #0xe48
  405af0:	mov	x8, sp
  405af4:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  405af8:	add	x9, x9, #0xe4b
  405afc:	str	x9, [x8]
  405b00:	mov	x8, sp
  405b04:	adrp	x9, 409000 <x11_convert_to_vconsole+0x104>
  405b08:	add	x9, x9, #0xe6a
  405b0c:	str	x9, [x8, #8]
  405b10:	bl	4025d0 <sd_bus_call_method@plt>
  405b14:	stur	w0, [x29, #-44]
  405b18:	ldur	w10, [x29, #-44]
  405b1c:	cmp	w10, #0x0
  405b20:	cset	w10, ge  // ge = tcont
  405b24:	tbnz	w10, #0, 405be8 <vconsole_reload+0x1ac>
  405b28:	mov	w8, #0x3                   	// #3
  405b2c:	stur	w8, [x29, #-48]
  405b30:	ldur	w8, [x29, #-44]
  405b34:	stur	w8, [x29, #-52]
  405b38:	str	wzr, [sp, #56]
  405b3c:	ldr	w0, [sp, #56]
  405b40:	bl	4022a0 <log_get_max_level_realm@plt>
  405b44:	ldur	w8, [x29, #-48]
  405b48:	and	w8, w8, #0x7
  405b4c:	cmp	w0, w8
  405b50:	b.lt	405bb8 <vconsole_reload+0x17c>  // b.tstop
  405b54:	ldr	w8, [sp, #56]
  405b58:	ldur	w9, [x29, #-48]
  405b5c:	orr	w0, w9, w8, lsl #10
  405b60:	ldur	w1, [x29, #-52]
  405b64:	ldur	w8, [x29, #-44]
  405b68:	sub	x10, x29, #0x28
  405b6c:	str	w0, [sp, #36]
  405b70:	mov	x0, x10
  405b74:	str	w1, [sp, #32]
  405b78:	mov	w1, w8
  405b7c:	bl	4025a0 <bus_error_message@plt>
  405b80:	ldr	w8, [sp, #36]
  405b84:	str	x0, [sp, #24]
  405b88:	mov	w0, w8
  405b8c:	ldr	w1, [sp, #32]
  405b90:	ldr	x2, [sp, #40]
  405b94:	mov	w3, #0x6e                  	// #110
  405b98:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405b9c:	add	x4, x4, #0xe72
  405ba0:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  405ba4:	add	x5, x5, #0xe82
  405ba8:	ldr	x6, [sp, #24]
  405bac:	bl	4022b0 <log_internal_realm@plt>
  405bb0:	str	w0, [sp, #20]
  405bb4:	b	405bcc <vconsole_reload+0x190>
  405bb8:	ldur	w0, [x29, #-52]
  405bbc:	bl	4022c0 <abs@plt>
  405bc0:	mov	w8, wzr
  405bc4:	subs	w8, w8, w0, uxtb
  405bc8:	str	w8, [sp, #20]
  405bcc:	ldr	w8, [sp, #20]
  405bd0:	str	w8, [sp, #52]
  405bd4:	ldr	w8, [sp, #52]
  405bd8:	stur	w8, [x29, #-4]
  405bdc:	mov	w8, #0x1                   	// #1
  405be0:	str	w8, [sp, #48]
  405be4:	b	405bf4 <vconsole_reload+0x1b8>
  405be8:	stur	wzr, [x29, #-4]
  405bec:	mov	w8, #0x1                   	// #1
  405bf0:	str	w8, [sp, #48]
  405bf4:	sub	x0, x29, #0x28
  405bf8:	bl	4025e0 <sd_bus_error_free@plt>
  405bfc:	ldur	w0, [x29, #-4]
  405c00:	ldp	x29, x30, [sp, #112]
  405c04:	add	sp, sp, #0x80
  405c08:	ret

0000000000405c0c <vconsole_convert_to_x11_and_emit>:
  405c0c:	sub	sp, sp, #0x50
  405c10:	stp	x29, x30, [sp, #64]
  405c14:	add	x29, sp, #0x40
  405c18:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  405c1c:	add	x8, x8, #0x698
  405c20:	add	x8, x8, #0x3
  405c24:	stur	x0, [x29, #-16]
  405c28:	stur	x1, [x29, #-24]
  405c2c:	str	x8, [sp, #8]
  405c30:	ldur	x8, [x29, #-24]
  405c34:	cmp	x8, #0x0
  405c38:	cset	w9, ne  // ne = any
  405c3c:	mov	w10, #0x1                   	// #1
  405c40:	eor	w9, w9, #0x1
  405c44:	eor	w9, w9, w10
  405c48:	eor	w9, w9, w10
  405c4c:	and	w9, w9, #0x1
  405c50:	mov	w0, w9
  405c54:	sxtw	x8, w0
  405c58:	cbz	x8, 405c80 <vconsole_convert_to_x11_and_emit+0x74>
  405c5c:	mov	w8, wzr
  405c60:	mov	w0, w8
  405c64:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405c68:	add	x1, x1, #0x9cd
  405c6c:	ldr	x2, [sp, #8]
  405c70:	mov	w3, #0x76                  	// #118
  405c74:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405c78:	add	x4, x4, #0xea2
  405c7c:	bl	4022e0 <log_assert_failed_realm@plt>
  405c80:	ldur	x0, [x29, #-16]
  405c84:	ldur	x1, [x29, #-24]
  405c88:	bl	4068e8 <x11_read_data>
  405c8c:	stur	w0, [x29, #-28]
  405c90:	ldur	w8, [x29, #-28]
  405c94:	cmp	w8, #0x0
  405c98:	cset	w8, ge  // ge = tcont
  405c9c:	tbnz	w8, #0, 405cac <vconsole_convert_to_x11_and_emit+0xa0>
  405ca0:	ldur	w8, [x29, #-28]
  405ca4:	stur	w8, [x29, #-4]
  405ca8:	b	405dc4 <vconsole_convert_to_x11_and_emit+0x1b8>
  405cac:	ldur	x0, [x29, #-16]
  405cb0:	bl	407828 <vconsole_convert_to_x11>
  405cb4:	stur	w0, [x29, #-28]
  405cb8:	ldur	w8, [x29, #-28]
  405cbc:	cmp	w8, #0x0
  405cc0:	cset	w8, gt
  405cc4:	tbnz	w8, #0, 405cd4 <vconsole_convert_to_x11_and_emit+0xc8>
  405cc8:	ldur	w8, [x29, #-28]
  405ccc:	stur	w8, [x29, #-4]
  405cd0:	b	405dc4 <vconsole_convert_to_x11_and_emit+0x1b8>
  405cd4:	ldur	x0, [x29, #-16]
  405cd8:	bl	407548 <x11_write_data>
  405cdc:	stur	w0, [x29, #-28]
  405ce0:	ldur	w8, [x29, #-28]
  405ce4:	cmp	w8, #0x0
  405ce8:	cset	w8, ge  // ge = tcont
  405cec:	tbnz	w8, #0, 405d78 <vconsole_convert_to_x11_and_emit+0x16c>
  405cf0:	mov	w8, #0x3                   	// #3
  405cf4:	str	w8, [sp, #32]
  405cf8:	ldur	w8, [x29, #-28]
  405cfc:	str	w8, [sp, #28]
  405d00:	str	wzr, [sp, #24]
  405d04:	ldr	w0, [sp, #24]
  405d08:	bl	4022a0 <log_get_max_level_realm@plt>
  405d0c:	ldr	w8, [sp, #32]
  405d10:	and	w8, w8, #0x7
  405d14:	cmp	w0, w8
  405d18:	b.lt	405d50 <vconsole_convert_to_x11_and_emit+0x144>  // b.tstop
  405d1c:	ldr	w8, [sp, #24]
  405d20:	ldr	w9, [sp, #32]
  405d24:	orr	w0, w9, w8, lsl #10
  405d28:	ldr	w1, [sp, #28]
  405d2c:	ldr	x2, [sp, #8]
  405d30:	mov	w3, #0x83                  	// #131
  405d34:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405d38:	add	x4, x4, #0xee4
  405d3c:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  405d40:	add	x5, x5, #0xf05
  405d44:	bl	4022b0 <log_internal_realm@plt>
  405d48:	str	w0, [sp, #4]
  405d4c:	b	405d64 <vconsole_convert_to_x11_and_emit+0x158>
  405d50:	ldr	w0, [sp, #28]
  405d54:	bl	4022c0 <abs@plt>
  405d58:	mov	w8, wzr
  405d5c:	subs	w8, w8, w0, uxtb
  405d60:	str	w8, [sp, #4]
  405d64:	ldr	w8, [sp, #4]
  405d68:	str	w8, [sp, #20]
  405d6c:	ldr	w8, [sp, #20]
  405d70:	stur	w8, [x29, #-4]
  405d74:	b	405dc4 <vconsole_convert_to_x11_and_emit+0x1b8>
  405d78:	ldur	x0, [x29, #-24]
  405d7c:	bl	4024c0 <sd_bus_message_get_bus@plt>
  405d80:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405d84:	add	x1, x1, #0x83c
  405d88:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  405d8c:	add	x2, x2, #0x794
  405d90:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  405d94:	add	x3, x3, #0x8bf
  405d98:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405d9c:	add	x4, x4, #0x8cb
  405da0:	adrp	x5, 409000 <x11_convert_to_vconsole+0x104>
  405da4:	add	x5, x5, #0x8d4
  405da8:	adrp	x6, 409000 <x11_convert_to_vconsole+0x104>
  405dac:	add	x6, x6, #0x8df
  405db0:	mov	x8, xzr
  405db4:	mov	x7, x8
  405db8:	bl	4024d0 <sd_bus_emit_properties_changed@plt>
  405dbc:	mov	w9, #0x1                   	// #1
  405dc0:	stur	w9, [x29, #-4]
  405dc4:	ldur	w0, [x29, #-4]
  405dc8:	ldp	x29, x30, [sp, #64]
  405dcc:	add	sp, sp, #0x50
  405dd0:	ret

0000000000405dd4 <verify_xkb_rmlvo>:
  405dd4:	sub	sp, sp, #0x20
  405dd8:	mov	w8, wzr
  405ddc:	str	x0, [sp, #24]
  405de0:	str	x1, [sp, #16]
  405de4:	str	x2, [sp, #8]
  405de8:	str	x3, [sp]
  405dec:	mov	w0, w8
  405df0:	add	sp, sp, #0x20
  405df4:	ret

0000000000405df8 <x11_convert_to_vconsole_and_emit>:
  405df8:	sub	sp, sp, #0x50
  405dfc:	stp	x29, x30, [sp, #64]
  405e00:	add	x29, sp, #0x40
  405e04:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  405e08:	add	x8, x8, #0x698
  405e0c:	add	x8, x8, #0x3
  405e10:	stur	x0, [x29, #-16]
  405e14:	stur	x1, [x29, #-24]
  405e18:	str	x8, [sp, #8]
  405e1c:	ldur	x8, [x29, #-24]
  405e20:	cmp	x8, #0x0
  405e24:	cset	w9, ne  // ne = any
  405e28:	mov	w10, #0x1                   	// #1
  405e2c:	eor	w9, w9, #0x1
  405e30:	eor	w9, w9, w10
  405e34:	eor	w9, w9, w10
  405e38:	and	w9, w9, #0x1
  405e3c:	mov	w0, w9
  405e40:	sxtw	x8, w0
  405e44:	cbz	x8, 405e6c <x11_convert_to_vconsole_and_emit+0x74>
  405e48:	mov	w8, wzr
  405e4c:	mov	w0, w8
  405e50:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405e54:	add	x1, x1, #0x9cd
  405e58:	ldr	x2, [sp, #8]
  405e5c:	mov	w3, #0x90                  	// #144
  405e60:	adrp	x4, 40a000 <locale_vtable+0xc08>
  405e64:	add	x4, x4, #0x160
  405e68:	bl	4022e0 <log_assert_failed_realm@plt>
  405e6c:	ldur	x0, [x29, #-16]
  405e70:	ldur	x1, [x29, #-24]
  405e74:	bl	406744 <vconsole_read_data>
  405e78:	stur	w0, [x29, #-28]
  405e7c:	ldur	w8, [x29, #-28]
  405e80:	cmp	w8, #0x0
  405e84:	cset	w8, ge  // ge = tcont
  405e88:	tbnz	w8, #0, 405e98 <x11_convert_to_vconsole_and_emit+0xa0>
  405e8c:	ldur	w8, [x29, #-28]
  405e90:	stur	w8, [x29, #-4]
  405e94:	b	405fa0 <x11_convert_to_vconsole_and_emit+0x1a8>
  405e98:	ldur	x0, [x29, #-16]
  405e9c:	bl	408efc <x11_convert_to_vconsole>
  405ea0:	stur	w0, [x29, #-28]
  405ea4:	ldur	w8, [x29, #-28]
  405ea8:	cmp	w8, #0x0
  405eac:	cset	w8, gt
  405eb0:	tbnz	w8, #0, 405ec0 <x11_convert_to_vconsole_and_emit+0xc8>
  405eb4:	ldur	w8, [x29, #-28]
  405eb8:	stur	w8, [x29, #-4]
  405ebc:	b	405fa0 <x11_convert_to_vconsole_and_emit+0x1a8>
  405ec0:	ldur	x0, [x29, #-16]
  405ec4:	bl	4071d0 <vconsole_write_data>
  405ec8:	stur	w0, [x29, #-28]
  405ecc:	ldur	w8, [x29, #-28]
  405ed0:	cmp	w8, #0x0
  405ed4:	cset	w8, ge  // ge = tcont
  405ed8:	tbnz	w8, #0, 405f58 <x11_convert_to_vconsole_and_emit+0x160>
  405edc:	mov	w8, #0x3                   	// #3
  405ee0:	str	w8, [sp, #32]
  405ee4:	ldur	w8, [x29, #-28]
  405ee8:	str	w8, [sp, #28]
  405eec:	str	wzr, [sp, #24]
  405ef0:	ldr	w0, [sp, #24]
  405ef4:	bl	4022a0 <log_get_max_level_realm@plt>
  405ef8:	ldr	w8, [sp, #32]
  405efc:	and	w8, w8, #0x7
  405f00:	cmp	w0, w8
  405f04:	b.lt	405f3c <x11_convert_to_vconsole_and_emit+0x144>  // b.tstop
  405f08:	ldr	w8, [sp, #24]
  405f0c:	ldr	w9, [sp, #32]
  405f10:	orr	w0, w9, w8, lsl #10
  405f14:	ldr	w1, [sp, #28]
  405f18:	ldr	x2, [sp, #8]
  405f1c:	mov	w3, #0x9d                  	// #157
  405f20:	adrp	x4, 40a000 <locale_vtable+0xc08>
  405f24:	add	x4, x4, #0x1a2
  405f28:	adrp	x5, 40a000 <locale_vtable+0xc08>
  405f2c:	add	x5, x5, #0x1c3
  405f30:	bl	4022b0 <log_internal_realm@plt>
  405f34:	str	w0, [sp, #4]
  405f38:	b	405f50 <x11_convert_to_vconsole_and_emit+0x158>
  405f3c:	ldr	w0, [sp, #28]
  405f40:	bl	4022c0 <abs@plt>
  405f44:	mov	w8, wzr
  405f48:	subs	w8, w8, w0, uxtb
  405f4c:	str	w8, [sp, #4]
  405f50:	ldr	w8, [sp, #4]
  405f54:	str	w8, [sp, #20]
  405f58:	ldur	x0, [x29, #-24]
  405f5c:	bl	4024c0 <sd_bus_message_get_bus@plt>
  405f60:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  405f64:	add	x1, x1, #0x83c
  405f68:	adrp	x2, 409000 <x11_convert_to_vconsole+0x104>
  405f6c:	add	x2, x2, #0x794
  405f70:	adrp	x3, 409000 <x11_convert_to_vconsole+0x104>
  405f74:	add	x3, x3, #0x8ea
  405f78:	adrp	x4, 409000 <x11_convert_to_vconsole+0x104>
  405f7c:	add	x4, x4, #0x8f9
  405f80:	mov	x8, xzr
  405f84:	mov	x5, x8
  405f88:	bl	4024d0 <sd_bus_emit_properties_changed@plt>
  405f8c:	ldur	x8, [x29, #-24]
  405f90:	mov	x0, x8
  405f94:	bl	4024c0 <sd_bus_message_get_bus@plt>
  405f98:	bl	405a3c <vconsole_reload>
  405f9c:	stur	w0, [x29, #-4]
  405fa0:	ldur	w0, [x29, #-4]
  405fa4:	ldp	x29, x30, [sp, #64]
  405fa8:	add	sp, sp, #0x50
  405fac:	ret

0000000000405fb0 <ALIGN_TO>:
  405fb0:	sub	sp, sp, #0x10
  405fb4:	str	x0, [sp, #8]
  405fb8:	str	x1, [sp]
  405fbc:	ldr	x8, [sp, #8]
  405fc0:	ldr	x9, [sp]
  405fc4:	add	x8, x8, x9
  405fc8:	subs	x8, x8, #0x1
  405fcc:	ldr	x9, [sp]
  405fd0:	subs	x9, x9, #0x1
  405fd4:	bic	x0, x8, x9
  405fd8:	add	sp, sp, #0x10
  405fdc:	ret

0000000000405fe0 <context_clear>:
  405fe0:	sub	sp, sp, #0x20
  405fe4:	stp	x29, x30, [sp, #16]
  405fe8:	add	x29, sp, #0x10
  405fec:	str	x0, [sp, #8]
  405ff0:	ldr	x0, [sp, #8]
  405ff4:	bl	406050 <context_free_locale>
  405ff8:	ldr	x0, [sp, #8]
  405ffc:	bl	4060cc <context_free_x11>
  406000:	ldr	x0, [sp, #8]
  406004:	bl	406138 <context_free_vconsole>
  406008:	ldr	x8, [sp, #8]
  40600c:	ldr	x0, [x8]
  406010:	bl	4025c0 <sd_bus_message_unref@plt>
  406014:	ldr	x8, [sp, #8]
  406018:	ldr	x8, [x8, #128]
  40601c:	mov	x0, x8
  406020:	bl	4025c0 <sd_bus_message_unref@plt>
  406024:	ldr	x8, [sp, #8]
  406028:	ldr	x8, [x8, #176]
  40602c:	mov	x0, x8
  406030:	bl	4025c0 <sd_bus_message_unref@plt>
  406034:	ldr	x8, [sp, #8]
  406038:	ldr	x8, [x8, #208]
  40603c:	mov	x0, x8
  406040:	bl	4025f0 <bus_verify_polkit_async_registry_free@plt>
  406044:	ldp	x29, x30, [sp, #16]
  406048:	add	sp, sp, #0x20
  40604c:	ret

0000000000406050 <context_free_locale>:
  406050:	sub	sp, sp, #0x30
  406054:	stp	x29, x30, [sp, #32]
  406058:	add	x29, sp, #0x20
  40605c:	stur	x0, [x29, #-8]
  406060:	stur	wzr, [x29, #-12]
  406064:	ldur	w8, [x29, #-12]
  406068:	cmp	w8, #0xe
  40606c:	b.ge	4060c0 <context_free_locale+0x70>  // b.tcont
  406070:	ldur	x8, [x29, #-8]
  406074:	add	x8, x8, #0x10
  406078:	ldursw	x9, [x29, #-12]
  40607c:	mov	x10, #0x8                   	// #8
  406080:	mul	x9, x10, x9
  406084:	add	x8, x8, x9
  406088:	ldr	x0, [x8]
  40608c:	str	x10, [sp, #8]
  406090:	bl	4062b8 <mfree>
  406094:	ldur	x8, [x29, #-8]
  406098:	add	x8, x8, #0x10
  40609c:	ldursw	x9, [x29, #-12]
  4060a0:	ldr	x10, [sp, #8]
  4060a4:	mul	x9, x10, x9
  4060a8:	add	x8, x8, x9
  4060ac:	str	x0, [x8]
  4060b0:	ldur	w8, [x29, #-12]
  4060b4:	add	w8, w8, #0x1
  4060b8:	stur	w8, [x29, #-12]
  4060bc:	b	406064 <context_free_locale+0x14>
  4060c0:	ldp	x29, x30, [sp, #32]
  4060c4:	add	sp, sp, #0x30
  4060c8:	ret

00000000004060cc <context_free_x11>:
  4060cc:	sub	sp, sp, #0x20
  4060d0:	stp	x29, x30, [sp, #16]
  4060d4:	add	x29, sp, #0x10
  4060d8:	str	x0, [sp, #8]
  4060dc:	ldr	x8, [sp, #8]
  4060e0:	ldr	x0, [x8, #144]
  4060e4:	bl	4062b8 <mfree>
  4060e8:	ldr	x8, [sp, #8]
  4060ec:	str	x0, [x8, #144]
  4060f0:	ldr	x8, [sp, #8]
  4060f4:	ldr	x0, [x8, #168]
  4060f8:	bl	4062b8 <mfree>
  4060fc:	ldr	x8, [sp, #8]
  406100:	str	x0, [x8, #168]
  406104:	ldr	x8, [sp, #8]
  406108:	ldr	x0, [x8, #152]
  40610c:	bl	4062b8 <mfree>
  406110:	ldr	x8, [sp, #8]
  406114:	str	x0, [x8, #152]
  406118:	ldr	x8, [sp, #8]
  40611c:	ldr	x0, [x8, #160]
  406120:	bl	4062b8 <mfree>
  406124:	ldr	x8, [sp, #8]
  406128:	str	x0, [x8, #160]
  40612c:	ldp	x29, x30, [sp, #16]
  406130:	add	sp, sp, #0x20
  406134:	ret

0000000000406138 <context_free_vconsole>:
  406138:	sub	sp, sp, #0x20
  40613c:	stp	x29, x30, [sp, #16]
  406140:	add	x29, sp, #0x10
  406144:	str	x0, [sp, #8]
  406148:	ldr	x8, [sp, #8]
  40614c:	ldr	x0, [x8, #192]
  406150:	bl	4062b8 <mfree>
  406154:	ldr	x8, [sp, #8]
  406158:	str	x0, [x8, #192]
  40615c:	ldr	x8, [sp, #8]
  406160:	ldr	x0, [x8, #200]
  406164:	bl	4062b8 <mfree>
  406168:	ldr	x8, [sp, #8]
  40616c:	str	x0, [x8, #200]
  406170:	ldp	x29, x30, [sp, #16]
  406174:	add	sp, sp, #0x20
  406178:	ret

000000000040617c <locale_simplify>:
  40617c:	sub	sp, sp, #0x30
  406180:	stp	x29, x30, [sp, #32]
  406184:	add	x29, sp, #0x20
  406188:	mov	w8, #0x1                   	// #1
  40618c:	stur	x0, [x29, #-8]
  406190:	stur	w8, [x29, #-12]
  406194:	ldur	w8, [x29, #-12]
  406198:	cmp	w8, #0xe
  40619c:	b.ge	406234 <locale_simplify+0xb8>  // b.tcont
  4061a0:	ldur	x8, [x29, #-8]
  4061a4:	ldursw	x9, [x29, #-12]
  4061a8:	mov	x10, #0x8                   	// #8
  4061ac:	mul	x9, x10, x9
  4061b0:	add	x8, x8, x9
  4061b4:	ldr	x0, [x8]
  4061b8:	bl	406240 <isempty>
  4061bc:	tbnz	w0, #0, 4061ec <locale_simplify+0x70>
  4061c0:	ldur	x8, [x29, #-8]
  4061c4:	ldr	x0, [x8]
  4061c8:	ldur	x8, [x29, #-8]
  4061cc:	ldursw	x9, [x29, #-12]
  4061d0:	mov	x10, #0x8                   	// #8
  4061d4:	mul	x9, x10, x9
  4061d8:	add	x8, x8, x9
  4061dc:	ldr	x1, [x8]
  4061e0:	bl	406280 <streq_ptr>
  4061e4:	tbnz	w0, #0, 4061ec <locale_simplify+0x70>
  4061e8:	b	406224 <locale_simplify+0xa8>
  4061ec:	ldur	x8, [x29, #-8]
  4061f0:	ldursw	x9, [x29, #-12]
  4061f4:	mov	x10, #0x8                   	// #8
  4061f8:	mul	x9, x10, x9
  4061fc:	add	x8, x8, x9
  406200:	ldr	x0, [x8]
  406204:	str	x10, [sp, #8]
  406208:	bl	4062b8 <mfree>
  40620c:	ldur	x8, [x29, #-8]
  406210:	ldursw	x9, [x29, #-12]
  406214:	ldr	x10, [sp, #8]
  406218:	mul	x9, x10, x9
  40621c:	add	x8, x8, x9
  406220:	str	x0, [x8]
  406224:	ldur	w8, [x29, #-12]
  406228:	add	w8, w8, #0x1
  40622c:	stur	w8, [x29, #-12]
  406230:	b	406194 <locale_simplify+0x18>
  406234:	ldp	x29, x30, [sp, #32]
  406238:	add	sp, sp, #0x30
  40623c:	ret

0000000000406240 <isempty>:
  406240:	sub	sp, sp, #0x10
  406244:	str	x0, [sp, #8]
  406248:	ldr	x8, [sp, #8]
  40624c:	mov	w9, #0x1                   	// #1
  406250:	str	w9, [sp, #4]
  406254:	cbz	x8, 406270 <isempty+0x30>
  406258:	ldr	x8, [sp, #8]
  40625c:	ldrb	w9, [x8]
  406260:	cmp	w9, #0x0
  406264:	cset	w9, ne  // ne = any
  406268:	eor	w9, w9, #0x1
  40626c:	str	w9, [sp, #4]
  406270:	ldr	w8, [sp, #4]
  406274:	and	w0, w8, #0x1
  406278:	add	sp, sp, #0x10
  40627c:	ret

0000000000406280 <streq_ptr>:
  406280:	sub	sp, sp, #0x20
  406284:	stp	x29, x30, [sp, #16]
  406288:	add	x29, sp, #0x10
  40628c:	str	x0, [sp, #8]
  406290:	str	x1, [sp]
  406294:	ldr	x0, [sp, #8]
  406298:	ldr	x1, [sp]
  40629c:	bl	402550 <strcmp_ptr@plt>
  4062a0:	cmp	w0, #0x0
  4062a4:	cset	w8, eq  // eq = none
  4062a8:	and	w0, w8, #0x1
  4062ac:	ldp	x29, x30, [sp, #16]
  4062b0:	add	sp, sp, #0x20
  4062b4:	ret

00000000004062b8 <mfree>:
  4062b8:	sub	sp, sp, #0x20
  4062bc:	stp	x29, x30, [sp, #16]
  4062c0:	add	x29, sp, #0x10
  4062c4:	mov	x8, xzr
  4062c8:	str	x0, [sp, #8]
  4062cc:	ldr	x0, [sp, #8]
  4062d0:	str	x8, [sp]
  4062d4:	bl	402480 <free@plt>
  4062d8:	ldr	x0, [sp]
  4062dc:	ldp	x29, x30, [sp, #16]
  4062e0:	add	sp, sp, #0x20
  4062e4:	ret

00000000004062e8 <locale_read_data>:
  4062e8:	sub	sp, sp, #0x1c0
  4062ec:	stp	x29, x30, [sp, #400]
  4062f0:	str	x28, [sp, #416]
  4062f4:	stp	x20, x19, [sp, #432]
  4062f8:	add	x29, sp, #0x190
  4062fc:	adrp	x8, 40a000 <locale_vtable+0xc08>
  406300:	add	x8, x8, #0x295
  406304:	add	x2, x8, #0x3
  406308:	stur	x0, [x29, #-16]
  40630c:	stur	x1, [x29, #-24]
  406310:	ldur	x8, [x29, #-24]
  406314:	stur	x2, [x29, #-192]
  406318:	cbz	x8, 406358 <locale_read_data+0x70>
  40631c:	ldur	x8, [x29, #-24]
  406320:	ldur	x9, [x29, #-16]
  406324:	ldr	x9, [x9]
  406328:	cmp	x8, x9
  40632c:	b.ne	406338 <locale_read_data+0x50>  // b.any
  406330:	stur	wzr, [x29, #-4]
  406334:	b	4066e4 <locale_read_data+0x3fc>
  406338:	ldur	x8, [x29, #-16]
  40633c:	ldr	x0, [x8]
  406340:	bl	4025c0 <sd_bus_message_unref@plt>
  406344:	ldur	x8, [x29, #-24]
  406348:	mov	x0, x8
  40634c:	bl	402600 <sd_bus_message_ref@plt>
  406350:	ldur	x8, [x29, #-16]
  406354:	str	x0, [x8]
  406358:	adrp	x0, 40a000 <locale_vtable+0xc08>
  40635c:	add	x0, x0, #0x1ed
  406360:	sub	x1, x29, #0x98
  406364:	bl	4093b8 <stat64>
  406368:	stur	w0, [x29, #-156]
  40636c:	ldur	w8, [x29, #-156]
  406370:	cmp	w8, #0x0
  406374:	cset	w8, ge  // ge = tcont
  406378:	tbnz	w8, #0, 4063a4 <locale_read_data+0xbc>
  40637c:	bl	402610 <__errno_location@plt>
  406380:	ldr	w8, [x0]
  406384:	cmp	w8, #0x2
  406388:	b.eq	4063a4 <locale_read_data+0xbc>  // b.none
  40638c:	bl	402610 <__errno_location@plt>
  406390:	ldr	w8, [x0]
  406394:	mov	w9, wzr
  406398:	subs	w8, w9, w8
  40639c:	stur	w8, [x29, #-4]
  4063a0:	b	4066e4 <locale_read_data+0x3fc>
  4063a4:	ldur	w8, [x29, #-156]
  4063a8:	cmp	w8, #0x0
  4063ac:	cset	w8, lt  // lt = tstop
  4063b0:	tbnz	w8, #0, 4065e4 <locale_read_data+0x2fc>
  4063b4:	sub	x8, x29, #0x98
  4063b8:	add	x0, x8, #0x58
  4063bc:	bl	402620 <timespec_load@plt>
  4063c0:	stur	x0, [x29, #-168]
  4063c4:	ldur	x8, [x29, #-16]
  4063c8:	ldr	x8, [x8, #8]
  4063cc:	mov	x9, #0xffffffffffffffff    	// #-1
  4063d0:	cmp	x8, x9
  4063d4:	b.eq	4063f4 <locale_read_data+0x10c>  // b.none
  4063d8:	ldur	x8, [x29, #-168]
  4063dc:	ldur	x9, [x29, #-16]
  4063e0:	ldr	x9, [x9, #8]
  4063e4:	cmp	x8, x9
  4063e8:	b.ne	4063f4 <locale_read_data+0x10c>  // b.any
  4063ec:	stur	wzr, [x29, #-4]
  4063f0:	b	4066e4 <locale_read_data+0x3fc>
  4063f4:	ldur	x8, [x29, #-168]
  4063f8:	ldur	x9, [x29, #-16]
  4063fc:	str	x8, [x9, #8]
  406400:	ldur	x0, [x29, #-16]
  406404:	bl	406050 <context_free_locale>
  406408:	ldur	x8, [x29, #-16]
  40640c:	add	x3, x8, #0x10
  406410:	ldur	x8, [x29, #-16]
  406414:	add	x5, x8, #0x18
  406418:	ldur	x8, [x29, #-16]
  40641c:	add	x7, x8, #0x20
  406420:	ldur	x8, [x29, #-16]
  406424:	add	x8, x8, #0x28
  406428:	ldur	x9, [x29, #-16]
  40642c:	add	x9, x9, #0x30
  406430:	ldur	x10, [x29, #-16]
  406434:	add	x10, x10, #0x38
  406438:	ldur	x11, [x29, #-16]
  40643c:	add	x11, x11, #0x40
  406440:	ldur	x12, [x29, #-16]
  406444:	add	x12, x12, #0x48
  406448:	ldur	x13, [x29, #-16]
  40644c:	add	x13, x13, #0x50
  406450:	ldur	x14, [x29, #-16]
  406454:	add	x14, x14, #0x58
  406458:	ldur	x15, [x29, #-16]
  40645c:	add	x15, x15, #0x60
  406460:	ldur	x16, [x29, #-16]
  406464:	add	x16, x16, #0x68
  406468:	ldur	x17, [x29, #-16]
  40646c:	add	x17, x17, #0x70
  406470:	ldur	x18, [x29, #-16]
  406474:	add	x18, x18, #0x78
  406478:	mov	x0, xzr
  40647c:	mov	x1, x0
  406480:	str	x0, [sp, #200]
  406484:	mov	x0, x1
  406488:	adrp	x1, 40a000 <locale_vtable+0xc08>
  40648c:	add	x1, x1, #0x1ed
  406490:	adrp	x2, 40a000 <locale_vtable+0xc08>
  406494:	add	x2, x2, #0x1fe
  406498:	adrp	x4, 40a000 <locale_vtable+0xc08>
  40649c:	add	x4, x4, #0x203
  4064a0:	adrp	x6, 40a000 <locale_vtable+0xc08>
  4064a4:	add	x6, x6, #0x20c
  4064a8:	mov	x19, sp
  4064ac:	adrp	x20, 40a000 <locale_vtable+0xc08>
  4064b0:	add	x20, x20, #0x215
  4064b4:	str	x20, [x19]
  4064b8:	mov	x19, sp
  4064bc:	str	x8, [x19, #8]
  4064c0:	mov	x8, sp
  4064c4:	adrp	x19, 40a000 <locale_vtable+0xc08>
  4064c8:	add	x19, x19, #0x220
  4064cc:	str	x19, [x8, #16]
  4064d0:	mov	x8, sp
  4064d4:	str	x9, [x8, #24]
  4064d8:	mov	x8, sp
  4064dc:	adrp	x9, 40a000 <locale_vtable+0xc08>
  4064e0:	add	x9, x9, #0x228
  4064e4:	str	x9, [x8, #32]
  4064e8:	mov	x8, sp
  4064ec:	str	x10, [x8, #40]
  4064f0:	mov	x8, sp
  4064f4:	adrp	x9, 40a000 <locale_vtable+0xc08>
  4064f8:	add	x9, x9, #0x233
  4064fc:	str	x9, [x8, #48]
  406500:	mov	x8, sp
  406504:	str	x11, [x8, #56]
  406508:	mov	x8, sp
  40650c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406510:	add	x9, x9, #0x23f
  406514:	str	x9, [x8, #64]
  406518:	mov	x8, sp
  40651c:	str	x12, [x8, #72]
  406520:	mov	x8, sp
  406524:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406528:	add	x9, x9, #0x24b
  40652c:	str	x9, [x8, #80]
  406530:	mov	x8, sp
  406534:	str	x13, [x8, #88]
  406538:	mov	x8, sp
  40653c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406540:	add	x9, x9, #0x254
  406544:	str	x9, [x8, #96]
  406548:	mov	x8, sp
  40654c:	str	x14, [x8, #104]
  406550:	mov	x8, sp
  406554:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406558:	add	x9, x9, #0x25c
  40655c:	str	x9, [x8, #112]
  406560:	mov	x8, sp
  406564:	str	x15, [x8, #120]
  406568:	mov	x8, sp
  40656c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406570:	add	x9, x9, #0x267
  406574:	str	x9, [x8, #128]
  406578:	mov	x8, sp
  40657c:	str	x16, [x8, #136]
  406580:	mov	x8, sp
  406584:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406588:	add	x9, x9, #0x274
  40658c:	str	x9, [x8, #144]
  406590:	mov	x8, sp
  406594:	str	x17, [x8, #152]
  406598:	mov	x8, sp
  40659c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  4065a0:	add	x9, x9, #0x283
  4065a4:	str	x9, [x8, #160]
  4065a8:	mov	x8, sp
  4065ac:	str	x18, [x8, #168]
  4065b0:	mov	x8, sp
  4065b4:	ldr	x9, [sp, #200]
  4065b8:	str	x9, [x8, #176]
  4065bc:	bl	402630 <parse_env_file_sentinel@plt>
  4065c0:	stur	w0, [x29, #-156]
  4065c4:	ldur	w0, [x29, #-156]
  4065c8:	cmp	w0, #0x0
  4065cc:	cset	w0, ge  // ge = tcont
  4065d0:	tbnz	w0, #0, 4065e0 <locale_read_data+0x2f8>
  4065d4:	ldur	w8, [x29, #-156]
  4065d8:	stur	w8, [x29, #-4]
  4065dc:	b	4066e4 <locale_read_data+0x3fc>
  4065e0:	b	4066d4 <locale_read_data+0x3ec>
  4065e4:	ldur	x8, [x29, #-16]
  4065e8:	mov	x9, #0xffffffffffffffff    	// #-1
  4065ec:	str	x9, [x8, #8]
  4065f0:	ldur	x0, [x29, #-16]
  4065f4:	bl	406050 <context_free_locale>
  4065f8:	stur	wzr, [x29, #-172]
  4065fc:	ldur	w8, [x29, #-172]
  406600:	cmp	w8, #0xe
  406604:	b.ge	4066d4 <locale_read_data+0x3ec>  // b.tcont
  406608:	ldur	w0, [x29, #-172]
  40660c:	bl	4023a0 <locale_variable_to_string@plt>
  406610:	stur	x0, [x29, #-184]
  406614:	ldur	x8, [x29, #-184]
  406618:	cmp	x8, #0x0
  40661c:	cset	w9, ne  // ne = any
  406620:	mov	w10, #0x1                   	// #1
  406624:	eor	w9, w9, #0x1
  406628:	eor	w9, w9, w10
  40662c:	eor	w9, w9, w10
  406630:	and	w9, w9, #0x1
  406634:	mov	w0, w9
  406638:	sxtw	x8, w0
  40663c:	cbz	x8, 406664 <locale_read_data+0x37c>
  406640:	mov	w8, wzr
  406644:	mov	w0, w8
  406648:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  40664c:	add	x1, x1, #0x94c
  406650:	ldur	x2, [x29, #-192]
  406654:	mov	w3, #0x94                  	// #148
  406658:	adrp	x4, 40a000 <locale_vtable+0xc08>
  40665c:	add	x4, x4, #0x2b1
  406660:	bl	4022e0 <log_assert_failed_realm@plt>
  406664:	ldur	x8, [x29, #-16]
  406668:	add	x8, x8, #0x10
  40666c:	ldursw	x9, [x29, #-172]
  406670:	mov	x10, #0x8                   	// #8
  406674:	mul	x9, x10, x9
  406678:	add	x0, x8, x9
  40667c:	ldur	x8, [x29, #-184]
  406680:	str	x0, [sp, #192]
  406684:	mov	x0, x8
  406688:	bl	402640 <getenv@plt>
  40668c:	bl	4066fc <empty_to_null>
  406690:	ldr	x8, [sp, #192]
  406694:	str	x0, [sp, #184]
  406698:	mov	x0, x8
  40669c:	ldr	x1, [sp, #184]
  4066a0:	bl	402510 <free_and_strdup@plt>
  4066a4:	stur	w0, [x29, #-156]
  4066a8:	ldur	w11, [x29, #-156]
  4066ac:	cmp	w11, #0x0
  4066b0:	cset	w11, ge  // ge = tcont
  4066b4:	tbnz	w11, #0, 4066c4 <locale_read_data+0x3dc>
  4066b8:	ldur	w8, [x29, #-156]
  4066bc:	stur	w8, [x29, #-4]
  4066c0:	b	4066e4 <locale_read_data+0x3fc>
  4066c4:	ldur	w8, [x29, #-172]
  4066c8:	add	w8, w8, #0x1
  4066cc:	stur	w8, [x29, #-172]
  4066d0:	b	4065fc <locale_read_data+0x314>
  4066d4:	ldur	x8, [x29, #-16]
  4066d8:	add	x0, x8, #0x10
  4066dc:	bl	40617c <locale_simplify>
  4066e0:	stur	wzr, [x29, #-4]
  4066e4:	ldur	w0, [x29, #-4]
  4066e8:	ldp	x20, x19, [sp, #432]
  4066ec:	ldr	x28, [sp, #416]
  4066f0:	ldp	x29, x30, [sp, #400]
  4066f4:	add	sp, sp, #0x1c0
  4066f8:	ret

00000000004066fc <empty_to_null>:
  4066fc:	sub	sp, sp, #0x20
  406700:	stp	x29, x30, [sp, #16]
  406704:	add	x29, sp, #0x10
  406708:	str	x0, [sp, #8]
  40670c:	ldr	x0, [sp, #8]
  406710:	bl	406240 <isempty>
  406714:	tbnz	w0, #0, 40671c <empty_to_null+0x20>
  406718:	b	406728 <empty_to_null+0x2c>
  40671c:	mov	x8, xzr
  406720:	str	x8, [sp]
  406724:	b	406730 <empty_to_null+0x34>
  406728:	ldr	x8, [sp, #8]
  40672c:	str	x8, [sp]
  406730:	ldr	x8, [sp]
  406734:	mov	x0, x8
  406738:	ldp	x29, x30, [sp, #16]
  40673c:	add	sp, sp, #0x20
  406740:	ret

0000000000406744 <vconsole_read_data>:
  406744:	sub	sp, sp, #0xc0
  406748:	stp	x29, x30, [sp, #176]
  40674c:	add	x29, sp, #0xb0
  406750:	sub	x8, x29, #0x18
  406754:	str	x0, [x8, #8]
  406758:	str	x1, [x8]
  40675c:	ldr	x9, [x8]
  406760:	str	x8, [sp]
  406764:	cbz	x9, 4067b4 <vconsole_read_data+0x70>
  406768:	ldr	x8, [sp]
  40676c:	ldr	x9, [x8]
  406770:	ldr	x10, [x8, #8]
  406774:	ldr	x10, [x10, #176]
  406778:	cmp	x9, x10
  40677c:	b.ne	406788 <vconsole_read_data+0x44>  // b.any
  406780:	stur	wzr, [x29, #-4]
  406784:	b	4068d8 <vconsole_read_data+0x194>
  406788:	ldr	x8, [sp]
  40678c:	ldr	x9, [x8, #8]
  406790:	ldr	x0, [x9, #176]
  406794:	bl	4025c0 <sd_bus_message_unref@plt>
  406798:	ldr	x8, [sp]
  40679c:	ldr	x9, [x8]
  4067a0:	mov	x0, x9
  4067a4:	bl	402600 <sd_bus_message_ref@plt>
  4067a8:	ldr	x8, [sp]
  4067ac:	ldr	x9, [x8, #8]
  4067b0:	str	x0, [x9, #176]
  4067b4:	adrp	x0, 40a000 <locale_vtable+0xc08>
  4067b8:	add	x0, x0, #0x2e3
  4067bc:	add	x1, sp, #0x18
  4067c0:	bl	4093b8 <stat64>
  4067c4:	cmp	w0, #0x0
  4067c8:	cset	w8, ge  // ge = tcont
  4067cc:	tbnz	w8, #0, 406818 <vconsole_read_data+0xd4>
  4067d0:	bl	402610 <__errno_location@plt>
  4067d4:	ldr	w8, [x0]
  4067d8:	cmp	w8, #0x2
  4067dc:	b.eq	4067f8 <vconsole_read_data+0xb4>  // b.none
  4067e0:	bl	402610 <__errno_location@plt>
  4067e4:	ldr	w8, [x0]
  4067e8:	mov	w9, wzr
  4067ec:	subs	w8, w9, w8
  4067f0:	stur	w8, [x29, #-4]
  4067f4:	b	4068d8 <vconsole_read_data+0x194>
  4067f8:	ldr	x8, [sp]
  4067fc:	ldr	x9, [x8, #8]
  406800:	mov	x10, #0xffffffffffffffff    	// #-1
  406804:	str	x10, [x9, #184]
  406808:	ldr	x0, [x8, #8]
  40680c:	bl	406138 <context_free_vconsole>
  406810:	stur	wzr, [x29, #-4]
  406814:	b	4068d8 <vconsole_read_data+0x194>
  406818:	add	x8, sp, #0x18
  40681c:	add	x0, x8, #0x58
  406820:	bl	402620 <timespec_load@plt>
  406824:	str	x0, [sp, #16]
  406828:	ldr	x8, [sp]
  40682c:	ldr	x9, [x8, #8]
  406830:	ldr	x9, [x9, #184]
  406834:	mov	x10, #0xffffffffffffffff    	// #-1
  406838:	cmp	x9, x10
  40683c:	b.eq	406860 <vconsole_read_data+0x11c>  // b.none
  406840:	ldr	x8, [sp, #16]
  406844:	ldr	x9, [sp]
  406848:	ldr	x10, [x9, #8]
  40684c:	ldr	x10, [x10, #184]
  406850:	cmp	x8, x10
  406854:	b.ne	406860 <vconsole_read_data+0x11c>  // b.any
  406858:	stur	wzr, [x29, #-4]
  40685c:	b	4068d8 <vconsole_read_data+0x194>
  406860:	ldr	x8, [sp, #16]
  406864:	ldr	x9, [sp]
  406868:	ldr	x10, [x9, #8]
  40686c:	str	x8, [x10, #184]
  406870:	ldr	x0, [x9, #8]
  406874:	bl	406138 <context_free_vconsole>
  406878:	ldr	x8, [sp]
  40687c:	ldr	x9, [x8, #8]
  406880:	add	x3, x9, #0xc0
  406884:	ldr	x9, [x8, #8]
  406888:	add	x5, x9, #0xc8
  40688c:	mov	x9, xzr
  406890:	mov	x0, x9
  406894:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406898:	add	x1, x1, #0x2e3
  40689c:	adrp	x2, 40a000 <locale_vtable+0xc08>
  4068a0:	add	x2, x2, #0x2f6
  4068a4:	adrp	x4, 40a000 <locale_vtable+0xc08>
  4068a8:	add	x4, x4, #0x2fd
  4068ac:	mov	x6, x9
  4068b0:	bl	402630 <parse_env_file_sentinel@plt>
  4068b4:	str	w0, [sp, #12]
  4068b8:	ldr	w11, [sp, #12]
  4068bc:	cmp	w11, #0x0
  4068c0:	cset	w11, ge  // ge = tcont
  4068c4:	tbnz	w11, #0, 4068d4 <vconsole_read_data+0x190>
  4068c8:	ldr	w8, [sp, #12]
  4068cc:	stur	w8, [x29, #-4]
  4068d0:	b	4068d8 <vconsole_read_data+0x194>
  4068d4:	stur	wzr, [x29, #-4]
  4068d8:	ldur	w0, [x29, #-4]
  4068dc:	ldp	x29, x30, [sp, #176]
  4068e0:	add	sp, sp, #0xc0
  4068e4:	ret

00000000004068e8 <x11_read_data>:
  4068e8:	sub	sp, sp, #0x120
  4068ec:	stp	x29, x30, [sp, #256]
  4068f0:	str	x28, [sp, #272]
  4068f4:	add	x29, sp, #0x100
  4068f8:	mov	x8, xzr
  4068fc:	mov	w9, #0x0                   	// #0
  406900:	stur	x0, [x29, #-16]
  406904:	stur	x1, [x29, #-24]
  406908:	stur	x8, [x29, #-32]
  40690c:	sturb	w9, [x29, #-33]
  406910:	ldur	x8, [x29, #-24]
  406914:	cbz	x8, 40695c <x11_read_data+0x74>
  406918:	ldur	x8, [x29, #-24]
  40691c:	ldur	x9, [x29, #-16]
  406920:	ldr	x9, [x9, #128]
  406924:	cmp	x8, x9
  406928:	b.ne	40693c <x11_read_data+0x54>  // b.any
  40692c:	stur	wzr, [x29, #-4]
  406930:	mov	w8, #0x1                   	// #1
  406934:	str	w8, [sp, #72]
  406938:	b	406dd4 <x11_read_data+0x4ec>
  40693c:	ldur	x8, [x29, #-16]
  406940:	ldr	x0, [x8, #128]
  406944:	bl	4025c0 <sd_bus_message_unref@plt>
  406948:	ldur	x8, [x29, #-24]
  40694c:	mov	x0, x8
  406950:	bl	402600 <sd_bus_message_ref@plt>
  406954:	ldur	x8, [x29, #-16]
  406958:	str	x0, [x8, #128]
  40695c:	adrp	x0, 40a000 <locale_vtable+0xc08>
  406960:	add	x0, x0, #0x30b
  406964:	add	x1, sp, #0x58
  406968:	bl	4093b8 <stat64>
  40696c:	cmp	w0, #0x0
  406970:	cset	w8, ge  // ge = tcont
  406974:	tbnz	w8, #0, 4069cc <x11_read_data+0xe4>
  406978:	bl	402610 <__errno_location@plt>
  40697c:	ldr	w8, [x0]
  406980:	cmp	w8, #0x2
  406984:	b.eq	4069a8 <x11_read_data+0xc0>  // b.none
  406988:	bl	402610 <__errno_location@plt>
  40698c:	ldr	w8, [x0]
  406990:	mov	w9, wzr
  406994:	subs	w8, w9, w8
  406998:	stur	w8, [x29, #-4]
  40699c:	mov	w8, #0x1                   	// #1
  4069a0:	str	w8, [sp, #72]
  4069a4:	b	406dd4 <x11_read_data+0x4ec>
  4069a8:	ldur	x8, [x29, #-16]
  4069ac:	mov	x9, #0xffffffffffffffff    	// #-1
  4069b0:	str	x9, [x8, #136]
  4069b4:	ldur	x0, [x29, #-16]
  4069b8:	bl	4060cc <context_free_x11>
  4069bc:	stur	wzr, [x29, #-4]
  4069c0:	mov	w10, #0x1                   	// #1
  4069c4:	str	w10, [sp, #72]
  4069c8:	b	406dd4 <x11_read_data+0x4ec>
  4069cc:	add	x8, sp, #0x58
  4069d0:	add	x0, x8, #0x58
  4069d4:	bl	402620 <timespec_load@plt>
  4069d8:	str	x0, [sp, #80]
  4069dc:	ldur	x8, [x29, #-16]
  4069e0:	ldr	x8, [x8, #136]
  4069e4:	mov	x9, #0xffffffffffffffff    	// #-1
  4069e8:	cmp	x8, x9
  4069ec:	b.eq	406a14 <x11_read_data+0x12c>  // b.none
  4069f0:	ldr	x8, [sp, #80]
  4069f4:	ldur	x9, [x29, #-16]
  4069f8:	ldr	x9, [x9, #136]
  4069fc:	cmp	x8, x9
  406a00:	b.ne	406a14 <x11_read_data+0x12c>  // b.any
  406a04:	stur	wzr, [x29, #-4]
  406a08:	mov	w8, #0x1                   	// #1
  406a0c:	str	w8, [sp, #72]
  406a10:	b	406dd4 <x11_read_data+0x4ec>
  406a14:	ldr	x8, [sp, #80]
  406a18:	ldur	x9, [x29, #-16]
  406a1c:	str	x8, [x9, #136]
  406a20:	ldur	x0, [x29, #-16]
  406a24:	bl	4060cc <context_free_x11>
  406a28:	adrp	x0, 40a000 <locale_vtable+0xc08>
  406a2c:	add	x0, x0, #0x30b
  406a30:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406a34:	add	x1, x1, #0x331
  406a38:	bl	402650 <fopen64@plt>
  406a3c:	stur	x0, [x29, #-32]
  406a40:	ldur	x8, [x29, #-32]
  406a44:	cbnz	x8, 406a68 <x11_read_data+0x180>
  406a48:	bl	402610 <__errno_location@plt>
  406a4c:	ldr	w8, [x0]
  406a50:	mov	w9, wzr
  406a54:	subs	w8, w9, w8
  406a58:	stur	w8, [x29, #-4]
  406a5c:	mov	w8, #0x1                   	// #1
  406a60:	str	w8, [sp, #72]
  406a64:	b	406dd4 <x11_read_data+0x4ec>
  406a68:	add	x2, sp, #0x40
  406a6c:	mov	x8, xzr
  406a70:	str	x8, [sp, #64]
  406a74:	ldur	x0, [x29, #-32]
  406a78:	mov	x1, #0x100000              	// #1048576
  406a7c:	bl	406e40 <read_line>
  406a80:	str	w0, [sp, #76]
  406a84:	ldr	w9, [sp, #76]
  406a88:	cmp	w9, #0x0
  406a8c:	cset	w9, ge  // ge = tcont
  406a90:	tbnz	w9, #0, 406aa8 <x11_read_data+0x1c0>
  406a94:	ldr	w8, [sp, #76]
  406a98:	stur	w8, [x29, #-4]
  406a9c:	mov	w8, #0x1                   	// #1
  406aa0:	str	w8, [sp, #72]
  406aa4:	b	406d8c <x11_read_data+0x4a4>
  406aa8:	ldr	w8, [sp, #76]
  406aac:	cbnz	w8, 406abc <x11_read_data+0x1d4>
  406ab0:	mov	w8, #0x2                   	// #2
  406ab4:	str	w8, [sp, #72]
  406ab8:	b	406d8c <x11_read_data+0x4a4>
  406abc:	ldr	x0, [sp, #64]
  406ac0:	bl	402660 <strstrip@plt>
  406ac4:	str	x0, [sp, #56]
  406ac8:	mov	w8, #0x0                   	// #0
  406acc:	strb	w8, [sp, #55]
  406ad0:	ldr	x9, [sp, #56]
  406ad4:	ldrb	w8, [x9]
  406ad8:	str	w8, [sp, #12]
  406adc:	cbz	w8, 406afc <x11_read_data+0x214>
  406ae0:	b	406ae4 <x11_read_data+0x1fc>
  406ae4:	ldr	w8, [sp, #12]
  406ae8:	cmp	w8, #0x23
  406aec:	cset	w9, eq  // eq = none
  406af0:	eor	w9, w9, #0x1
  406af4:	tbnz	w9, #0, 406b08 <x11_read_data+0x220>
  406af8:	b	406afc <x11_read_data+0x214>
  406afc:	mov	w8, #0x1                   	// #1
  406b00:	strb	w8, [sp, #55]
  406b04:	b	406b08 <x11_read_data+0x220>
  406b08:	ldrb	w8, [sp, #55]
  406b0c:	and	w8, w8, #0x1
  406b10:	strb	w8, [sp, #54]
  406b14:	ldrb	w8, [sp, #54]
  406b18:	tbnz	w8, #0, 406b20 <x11_read_data+0x238>
  406b1c:	b	406b2c <x11_read_data+0x244>
  406b20:	mov	w8, #0x3                   	// #3
  406b24:	str	w8, [sp, #72]
  406b28:	b	406d8c <x11_read_data+0x4a4>
  406b2c:	ldurb	w8, [x29, #-33]
  406b30:	tbnz	w8, #0, 406b38 <x11_read_data+0x250>
  406b34:	b	406ca4 <x11_read_data+0x3bc>
  406b38:	ldr	x0, [sp, #56]
  406b3c:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406b40:	add	x1, x1, #0x334
  406b44:	bl	402670 <first_word@plt>
  406b48:	cbz	x0, 406ca4 <x11_read_data+0x3bc>
  406b4c:	add	x0, sp, #0x28
  406b50:	mov	x8, xzr
  406b54:	str	x8, [sp, #40]
  406b58:	ldr	x1, [sp, #56]
  406b5c:	adrp	x2, 40a000 <locale_vtable+0xc08>
  406b60:	add	x2, x2, #0x33b
  406b64:	mov	w3, #0x8                   	// #8
  406b68:	bl	402680 <strv_split_extract@plt>
  406b6c:	str	w0, [sp, #76]
  406b70:	ldr	w9, [sp, #76]
  406b74:	cmp	w9, #0x0
  406b78:	cset	w9, ge  // ge = tcont
  406b7c:	tbnz	w9, #0, 406b94 <x11_read_data+0x2ac>
  406b80:	ldr	w8, [sp, #76]
  406b84:	stur	w8, [x29, #-4]
  406b88:	mov	w8, #0x1                   	// #1
  406b8c:	str	w8, [sp, #72]
  406b90:	b	406c80 <x11_read_data+0x398>
  406b94:	ldr	x0, [sp, #40]
  406b98:	bl	402410 <strv_length@plt>
  406b9c:	cmp	x0, #0x3
  406ba0:	b.ne	406c7c <x11_read_data+0x394>  // b.any
  406ba4:	mov	x8, xzr
  406ba8:	str	x8, [sp, #32]
  406bac:	ldr	x8, [sp, #40]
  406bb0:	ldr	x0, [x8, #8]
  406bb4:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406bb8:	add	x1, x1, #0x340
  406bbc:	bl	4023d0 <strcmp@plt>
  406bc0:	cbnz	w0, 406bd4 <x11_read_data+0x2ec>
  406bc4:	ldur	x8, [x29, #-16]
  406bc8:	add	x8, x8, #0x90
  406bcc:	str	x8, [sp, #32]
  406bd0:	b	406c48 <x11_read_data+0x360>
  406bd4:	ldr	x8, [sp, #40]
  406bd8:	ldr	x0, [x8, #8]
  406bdc:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406be0:	add	x1, x1, #0x34a
  406be4:	bl	4023d0 <strcmp@plt>
  406be8:	cbnz	w0, 406bfc <x11_read_data+0x314>
  406bec:	ldur	x8, [x29, #-16]
  406bf0:	add	x8, x8, #0x98
  406bf4:	str	x8, [sp, #32]
  406bf8:	b	406c48 <x11_read_data+0x360>
  406bfc:	ldr	x8, [sp, #40]
  406c00:	ldr	x0, [x8, #8]
  406c04:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406c08:	add	x1, x1, #0x353
  406c0c:	bl	4023d0 <strcmp@plt>
  406c10:	cbnz	w0, 406c24 <x11_read_data+0x33c>
  406c14:	ldur	x8, [x29, #-16]
  406c18:	add	x8, x8, #0xa0
  406c1c:	str	x8, [sp, #32]
  406c20:	b	406c48 <x11_read_data+0x360>
  406c24:	ldr	x8, [sp, #40]
  406c28:	ldr	x0, [x8, #8]
  406c2c:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406c30:	add	x1, x1, #0x35e
  406c34:	bl	4023d0 <strcmp@plt>
  406c38:	cbnz	w0, 406c48 <x11_read_data+0x360>
  406c3c:	ldur	x8, [x29, #-16]
  406c40:	add	x8, x8, #0xa8
  406c44:	str	x8, [sp, #32]
  406c48:	ldr	x8, [sp, #32]
  406c4c:	cbz	x8, 406c7c <x11_read_data+0x394>
  406c50:	ldr	x8, [sp, #32]
  406c54:	ldr	x0, [x8]
  406c58:	bl	402480 <free@plt>
  406c5c:	ldr	x8, [sp, #40]
  406c60:	ldr	x8, [x8, #16]
  406c64:	ldr	x9, [sp, #32]
  406c68:	str	x8, [x9]
  406c6c:	ldr	x8, [sp, #40]
  406c70:	mov	x9, xzr
  406c74:	str	x9, [x8, #16]
  406c78:	str	wzr, [sp, #28]
  406c7c:	str	wzr, [sp, #72]
  406c80:	add	x0, sp, #0x28
  406c84:	bl	406e7c <strv_freep>
  406c88:	ldr	w8, [sp, #72]
  406c8c:	cmp	w8, #0x0
  406c90:	cset	w8, eq  // eq = none
  406c94:	eor	w8, w8, #0x1
  406c98:	tbnz	w8, #0, 406d8c <x11_read_data+0x4a4>
  406c9c:	b	406ca0 <x11_read_data+0x3b8>
  406ca0:	b	406d88 <x11_read_data+0x4a0>
  406ca4:	ldurb	w8, [x29, #-33]
  406ca8:	tbnz	w8, #0, 406d60 <x11_read_data+0x478>
  406cac:	ldr	x0, [sp, #56]
  406cb0:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406cb4:	add	x1, x1, #0x369
  406cb8:	bl	402670 <first_word@plt>
  406cbc:	cbz	x0, 406d60 <x11_read_data+0x478>
  406cc0:	add	x0, sp, #0x10
  406cc4:	mov	x8, xzr
  406cc8:	str	x8, [sp, #16]
  406ccc:	ldr	x1, [sp, #56]
  406cd0:	adrp	x2, 40a000 <locale_vtable+0xc08>
  406cd4:	add	x2, x2, #0x33b
  406cd8:	mov	w3, #0x8                   	// #8
  406cdc:	bl	402680 <strv_split_extract@plt>
  406ce0:	str	w0, [sp, #76]
  406ce4:	ldr	w9, [sp, #76]
  406ce8:	cmp	w9, #0x0
  406cec:	cset	w9, ge  // ge = tcont
  406cf0:	tbnz	w9, #0, 406d08 <x11_read_data+0x420>
  406cf4:	mov	w8, #0xfffffff4            	// #-12
  406cf8:	stur	w8, [x29, #-4]
  406cfc:	mov	w8, #0x1                   	// #1
  406d00:	str	w8, [sp, #72]
  406d04:	b	406d3c <x11_read_data+0x454>
  406d08:	ldr	x0, [sp, #16]
  406d0c:	bl	402410 <strv_length@plt>
  406d10:	cmp	x0, #0x2
  406d14:	b.ne	406d38 <x11_read_data+0x450>  // b.any
  406d18:	ldr	x8, [sp, #16]
  406d1c:	ldr	x0, [x8, #8]
  406d20:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406d24:	add	x1, x1, #0x371
  406d28:	bl	4023d0 <strcmp@plt>
  406d2c:	cbnz	w0, 406d38 <x11_read_data+0x450>
  406d30:	mov	w8, #0x1                   	// #1
  406d34:	sturb	w8, [x29, #-33]
  406d38:	str	wzr, [sp, #72]
  406d3c:	add	x0, sp, #0x10
  406d40:	bl	406e7c <strv_freep>
  406d44:	ldr	w8, [sp, #72]
  406d48:	cmp	w8, #0x0
  406d4c:	cset	w8, eq  // eq = none
  406d50:	eor	w8, w8, #0x1
  406d54:	tbnz	w8, #0, 406d8c <x11_read_data+0x4a4>
  406d58:	b	406d5c <x11_read_data+0x474>
  406d5c:	b	406d88 <x11_read_data+0x4a0>
  406d60:	ldurb	w8, [x29, #-33]
  406d64:	tbnz	w8, #0, 406d6c <x11_read_data+0x484>
  406d68:	b	406d88 <x11_read_data+0x4a0>
  406d6c:	ldr	x0, [sp, #56]
  406d70:	adrp	x1, 40a000 <locale_vtable+0xc08>
  406d74:	add	x1, x1, #0x37c
  406d78:	bl	402670 <first_word@plt>
  406d7c:	cbz	x0, 406d88 <x11_read_data+0x4a0>
  406d80:	mov	w8, #0x0                   	// #0
  406d84:	sturb	w8, [x29, #-33]
  406d88:	str	wzr, [sp, #72]
  406d8c:	add	x0, sp, #0x40
  406d90:	bl	406e18 <freep>
  406d94:	ldr	w8, [sp, #72]
  406d98:	str	w8, [sp, #8]
  406d9c:	cbz	w8, 406dc4 <x11_read_data+0x4dc>
  406da0:	b	406da4 <x11_read_data+0x4bc>
  406da4:	ldr	w8, [sp, #8]
  406da8:	cmp	w8, #0x2
  406dac:	b.eq	406dc8 <x11_read_data+0x4e0>  // b.none
  406db0:	b	406db4 <x11_read_data+0x4cc>
  406db4:	ldr	w8, [sp, #8]
  406db8:	cmp	w8, #0x3
  406dbc:	b.eq	406a68 <x11_read_data+0x180>  // b.none
  406dc0:	b	406dd4 <x11_read_data+0x4ec>
  406dc4:	b	406a68 <x11_read_data+0x180>
  406dc8:	stur	wzr, [x29, #-4]
  406dcc:	mov	w8, #0x1                   	// #1
  406dd0:	str	w8, [sp, #72]
  406dd4:	sub	x0, x29, #0x20
  406dd8:	bl	406df0 <fclosep>
  406ddc:	ldur	w0, [x29, #-4]
  406de0:	ldr	x28, [sp, #272]
  406de4:	ldp	x29, x30, [sp, #256]
  406de8:	add	sp, sp, #0x120
  406dec:	ret

0000000000406df0 <fclosep>:
  406df0:	sub	sp, sp, #0x20
  406df4:	stp	x29, x30, [sp, #16]
  406df8:	add	x29, sp, #0x10
  406dfc:	str	x0, [sp, #8]
  406e00:	ldr	x8, [sp, #8]
  406e04:	ldr	x0, [x8]
  406e08:	bl	402690 <safe_fclose@plt>
  406e0c:	ldp	x29, x30, [sp, #16]
  406e10:	add	sp, sp, #0x20
  406e14:	ret

0000000000406e18 <freep>:
  406e18:	sub	sp, sp, #0x20
  406e1c:	stp	x29, x30, [sp, #16]
  406e20:	add	x29, sp, #0x10
  406e24:	str	x0, [sp, #8]
  406e28:	ldr	x8, [sp, #8]
  406e2c:	ldr	x0, [x8]
  406e30:	bl	402480 <free@plt>
  406e34:	ldp	x29, x30, [sp, #16]
  406e38:	add	sp, sp, #0x20
  406e3c:	ret

0000000000406e40 <read_line>:
  406e40:	sub	sp, sp, #0x30
  406e44:	stp	x29, x30, [sp, #32]
  406e48:	add	x29, sp, #0x20
  406e4c:	mov	w8, wzr
  406e50:	stur	x0, [x29, #-8]
  406e54:	str	x1, [sp, #16]
  406e58:	str	x2, [sp, #8]
  406e5c:	ldur	x0, [x29, #-8]
  406e60:	ldr	x1, [sp, #16]
  406e64:	ldr	x3, [sp, #8]
  406e68:	mov	w2, w8
  406e6c:	bl	4026a0 <read_line_full@plt>
  406e70:	ldp	x29, x30, [sp, #32]
  406e74:	add	sp, sp, #0x30
  406e78:	ret

0000000000406e7c <strv_freep>:
  406e7c:	sub	sp, sp, #0x20
  406e80:	stp	x29, x30, [sp, #16]
  406e84:	add	x29, sp, #0x10
  406e88:	str	x0, [sp, #8]
  406e8c:	ldr	x8, [sp, #8]
  406e90:	ldr	x8, [x8]
  406e94:	cbz	x8, 406ea4 <strv_freep+0x28>
  406e98:	ldr	x8, [sp, #8]
  406e9c:	ldr	x0, [x8]
  406ea0:	bl	402460 <strv_free@plt>
  406ea4:	ldp	x29, x30, [sp, #16]
  406ea8:	add	sp, sp, #0x20
  406eac:	ret

0000000000406eb0 <locale_write_data>:
  406eb0:	sub	sp, sp, #0x100
  406eb4:	stp	x29, x30, [sp, #240]
  406eb8:	add	x29, sp, #0xf0
  406ebc:	mov	x8, xzr
  406ec0:	adrp	x9, 40a000 <locale_vtable+0xc08>
  406ec4:	add	x9, x9, #0x1ed
  406ec8:	adrp	x10, 40a000 <locale_vtable+0xc08>
  406ecc:	add	x10, x10, #0x295
  406ed0:	add	x2, x10, #0x3
  406ed4:	stur	x0, [x29, #-16]
  406ed8:	stur	x1, [x29, #-24]
  406edc:	stur	x8, [x29, #-32]
  406ee0:	str	wzr, [sp, #72]
  406ee4:	str	x9, [sp, #16]
  406ee8:	str	x2, [sp, #8]
  406eec:	ldr	w8, [sp, #72]
  406ef0:	cmp	w8, #0xe
  406ef4:	b.ge	407064 <locale_write_data+0x1b4>  // b.tcont
  406ef8:	mov	x8, xzr
  406efc:	str	x8, [sp, #64]
  406f00:	ldr	w0, [sp, #72]
  406f04:	bl	4023a0 <locale_variable_to_string@plt>
  406f08:	str	x0, [sp, #48]
  406f0c:	ldr	x8, [sp, #48]
  406f10:	cmp	x8, #0x0
  406f14:	cset	w9, ne  // ne = any
  406f18:	mov	w10, #0x1                   	// #1
  406f1c:	eor	w9, w9, #0x1
  406f20:	eor	w9, w9, w10
  406f24:	eor	w9, w9, w10
  406f28:	and	w9, w9, #0x1
  406f2c:	mov	w0, w9
  406f30:	sxtw	x8, w0
  406f34:	cbz	x8, 406f5c <locale_write_data+0xac>
  406f38:	mov	w8, wzr
  406f3c:	mov	w0, w8
  406f40:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  406f44:	add	x1, x1, #0x94c
  406f48:	ldr	x2, [sp, #8]
  406f4c:	mov	w3, #0x131                 	// #305
  406f50:	adrp	x4, 40a000 <locale_vtable+0xc08>
  406f54:	add	x4, x4, #0x387
  406f58:	bl	4022e0 <log_assert_failed_realm@plt>
  406f5c:	ldur	x8, [x29, #-16]
  406f60:	add	x8, x8, #0x10
  406f64:	ldrsw	x9, [sp, #72]
  406f68:	mov	x10, #0x8                   	// #8
  406f6c:	mul	x9, x10, x9
  406f70:	add	x8, x8, x9
  406f74:	ldr	x0, [x8]
  406f78:	bl	406240 <isempty>
  406f7c:	tbnz	w0, #0, 406f84 <locale_write_data+0xd4>
  406f80:	b	406f90 <locale_write_data+0xe0>
  406f84:	mov	w8, #0x4                   	// #4
  406f88:	str	w8, [sp, #44]
  406f8c:	b	40702c <locale_write_data+0x17c>
  406f90:	ldr	x2, [sp, #48]
  406f94:	ldur	x8, [x29, #-16]
  406f98:	add	x8, x8, #0x10
  406f9c:	ldrsw	x9, [sp, #72]
  406fa0:	mov	x10, #0x8                   	// #8
  406fa4:	mul	x9, x10, x9
  406fa8:	add	x8, x8, x9
  406fac:	ldr	x3, [x8]
  406fb0:	add	x0, sp, #0x40
  406fb4:	adrp	x1, 409000 <x11_convert_to_vconsole+0x104>
  406fb8:	add	x1, x1, #0x9c7
  406fbc:	bl	4023b0 <asprintf@plt>
  406fc0:	cmp	w0, #0x0
  406fc4:	cset	w11, ge  // ge = tcont
  406fc8:	tbnz	w11, #0, 406fe0 <locale_write_data+0x130>
  406fcc:	mov	w8, #0xfffffff4            	// #-12
  406fd0:	stur	w8, [x29, #-4]
  406fd4:	mov	w8, #0x1                   	// #1
  406fd8:	str	w8, [sp, #44]
  406fdc:	b	40702c <locale_write_data+0x17c>
  406fe0:	ldur	x0, [x29, #-32]
  406fe4:	ldr	x1, [sp, #64]
  406fe8:	bl	4026b0 <strv_env_set@plt>
  406fec:	str	x0, [sp, #56]
  406ff0:	ldr	x8, [sp, #56]
  406ff4:	cbnz	x8, 40700c <locale_write_data+0x15c>
  406ff8:	mov	w8, #0xfffffff4            	// #-12
  406ffc:	stur	w8, [x29, #-4]
  407000:	mov	w8, #0x1                   	// #1
  407004:	str	w8, [sp, #44]
  407008:	b	40702c <locale_write_data+0x17c>
  40700c:	ldur	x0, [x29, #-32]
  407010:	bl	402460 <strv_free@plt>
  407014:	ldr	x8, [sp, #56]
  407018:	stur	x8, [x29, #-32]
  40701c:	mov	x8, xzr
  407020:	str	x8, [sp, #56]
  407024:	str	wzr, [sp, #40]
  407028:	str	wzr, [sp, #44]
  40702c:	add	x0, sp, #0x40
  407030:	bl	406e18 <freep>
  407034:	ldr	w8, [sp, #44]
  407038:	str	w8, [sp, #4]
  40703c:	cbz	w8, 407054 <locale_write_data+0x1a4>
  407040:	b	407044 <locale_write_data+0x194>
  407044:	ldr	w8, [sp, #4]
  407048:	cmp	w8, #0x4
  40704c:	b.eq	407054 <locale_write_data+0x1a4>  // b.none
  407050:	b	407178 <locale_write_data+0x2c8>
  407054:	ldr	w8, [sp, #72]
  407058:	add	w8, w8, #0x1
  40705c:	str	w8, [sp, #72]
  407060:	b	406eec <locale_write_data+0x3c>
  407064:	ldur	x0, [x29, #-32]
  407068:	bl	407190 <strv_isempty>
  40706c:	tbnz	w0, #0, 407074 <locale_write_data+0x1c4>
  407070:	b	4070e8 <locale_write_data+0x238>
  407074:	ldr	x0, [sp, #16]
  407078:	bl	4026c0 <unlink@plt>
  40707c:	cmp	w0, #0x0
  407080:	cset	w8, ge  // ge = tcont
  407084:	tbnz	w8, #0, 4070cc <locale_write_data+0x21c>
  407088:	bl	402610 <__errno_location@plt>
  40708c:	ldr	w8, [x0]
  407090:	cmp	w8, #0x2
  407094:	b.ne	4070a4 <locale_write_data+0x1f4>  // b.any
  407098:	mov	w8, wzr
  40709c:	str	w8, [sp]
  4070a0:	b	4070b8 <locale_write_data+0x208>
  4070a4:	bl	402610 <__errno_location@plt>
  4070a8:	ldr	w8, [x0]
  4070ac:	mov	w9, wzr
  4070b0:	subs	w8, w9, w8
  4070b4:	str	w8, [sp]
  4070b8:	ldr	w8, [sp]
  4070bc:	stur	w8, [x29, #-4]
  4070c0:	mov	w8, #0x1                   	// #1
  4070c4:	str	w8, [sp, #44]
  4070c8:	b	407178 <locale_write_data+0x2c8>
  4070cc:	ldur	x8, [x29, #-16]
  4070d0:	mov	x9, #0xffffffffffffffff    	// #-1
  4070d4:	str	x9, [x8, #8]
  4070d8:	stur	wzr, [x29, #-4]
  4070dc:	mov	w10, #0x1                   	// #1
  4070e0:	str	w10, [sp, #44]
  4070e4:	b	407178 <locale_write_data+0x2c8>
  4070e8:	ldur	x1, [x29, #-32]
  4070ec:	ldr	x0, [sp, #16]
  4070f0:	bl	4026d0 <write_env_file_label@plt>
  4070f4:	str	w0, [sp, #76]
  4070f8:	ldr	w8, [sp, #76]
  4070fc:	cmp	w8, #0x0
  407100:	cset	w8, ge  // ge = tcont
  407104:	tbnz	w8, #0, 40711c <locale_write_data+0x26c>
  407108:	ldr	w8, [sp, #76]
  40710c:	stur	w8, [x29, #-4]
  407110:	mov	w8, #0x1                   	// #1
  407114:	str	w8, [sp, #44]
  407118:	b	407178 <locale_write_data+0x2c8>
  40711c:	ldur	x8, [x29, #-32]
  407120:	str	x8, [sp, #32]
  407124:	mov	x8, xzr
  407128:	stur	x8, [x29, #-32]
  40712c:	ldr	x8, [sp, #32]
  407130:	str	x8, [sp, #24]
  407134:	ldr	x8, [sp, #24]
  407138:	ldur	x9, [x29, #-24]
  40713c:	str	x8, [x9]
  407140:	ldr	x0, [sp, #16]
  407144:	add	x1, sp, #0x50
  407148:	bl	4093b8 <stat64>
  40714c:	cmp	w0, #0x0
  407150:	cset	w10, lt  // lt = tstop
  407154:	tbnz	w10, #0, 40716c <locale_write_data+0x2bc>
  407158:	add	x8, sp, #0x50
  40715c:	add	x0, x8, #0x58
  407160:	bl	402620 <timespec_load@plt>
  407164:	ldur	x8, [x29, #-16]
  407168:	str	x0, [x8, #8]
  40716c:	stur	wzr, [x29, #-4]
  407170:	mov	w8, #0x1                   	// #1
  407174:	str	w8, [sp, #44]
  407178:	sub	x0, x29, #0x20
  40717c:	bl	406e7c <strv_freep>
  407180:	ldur	w0, [x29, #-4]
  407184:	ldp	x29, x30, [sp, #240]
  407188:	add	sp, sp, #0x100
  40718c:	ret

0000000000407190 <strv_isempty>:
  407190:	sub	sp, sp, #0x10
  407194:	str	x0, [sp, #8]
  407198:	ldr	x8, [sp, #8]
  40719c:	mov	w9, #0x1                   	// #1
  4071a0:	str	w9, [sp, #4]
  4071a4:	cbz	x8, 4071c0 <strv_isempty+0x30>
  4071a8:	ldr	x8, [sp, #8]
  4071ac:	ldr	x8, [x8]
  4071b0:	cmp	x8, #0x0
  4071b4:	cset	w9, ne  // ne = any
  4071b8:	eor	w9, w9, #0x1
  4071bc:	str	w9, [sp, #4]
  4071c0:	ldr	w8, [sp, #4]
  4071c4:	and	w0, w8, #0x1
  4071c8:	add	sp, sp, #0x10
  4071cc:	ret

00000000004071d0 <vconsole_write_data>:
  4071d0:	sub	sp, sp, #0x100
  4071d4:	stp	x29, x30, [sp, #240]
  4071d8:	add	x29, sp, #0xf0
  4071dc:	sub	x8, x29, #0x18
  4071e0:	mov	x9, xzr
  4071e4:	mov	x1, x9
  4071e8:	adrp	x10, 40a000 <locale_vtable+0xc08>
  4071ec:	add	x10, x10, #0x2e3
  4071f0:	sub	x2, x29, #0x18
  4071f4:	str	x0, [x8, #8]
  4071f8:	str	x9, [x8]
  4071fc:	mov	x0, x1
  407200:	mov	x1, x10
  407204:	str	x8, [sp, #24]
  407208:	str	x10, [sp, #16]
  40720c:	bl	4026e0 <load_env_file@plt>
  407210:	str	w0, [sp, #84]
  407214:	ldr	w11, [sp, #84]
  407218:	cmp	w11, #0x0
  40721c:	cset	w11, ge  // ge = tcont
  407220:	tbnz	w11, #0, 407248 <vconsole_write_data+0x78>
  407224:	ldr	w8, [sp, #84]
  407228:	mov	w9, #0xfffffffe            	// #-2
  40722c:	cmp	w8, w9
  407230:	b.eq	407248 <vconsole_write_data+0x78>  // b.none
  407234:	ldr	w8, [sp, #84]
  407238:	stur	w8, [x29, #-4]
  40723c:	mov	w8, #0x1                   	// #1
  407240:	str	w8, [sp, #80]
  407244:	b	407530 <vconsole_write_data+0x360>
  407248:	ldr	x8, [sp, #24]
  40724c:	ldr	x9, [x8, #8]
  407250:	ldr	x0, [x9, #192]
  407254:	bl	406240 <isempty>
  407258:	tbnz	w0, #0, 407260 <vconsole_write_data+0x90>
  40725c:	b	407280 <vconsole_write_data+0xb0>
  407260:	ldr	x8, [sp, #24]
  407264:	ldr	x0, [x8]
  407268:	adrp	x1, 40a000 <locale_vtable+0xc08>
  40726c:	add	x1, x1, #0x2f6
  407270:	bl	4026f0 <strv_env_unset@plt>
  407274:	ldr	x8, [sp, #24]
  407278:	str	x0, [x8]
  40727c:	b	40733c <vconsole_write_data+0x16c>
  407280:	mov	x8, xzr
  407284:	str	x8, [sp, #72]
  407288:	ldr	x9, [sp, #24]
  40728c:	ldr	x10, [x9, #8]
  407290:	ldr	x1, [x10, #192]
  407294:	adrp	x0, 40a000 <locale_vtable+0xc08>
  407298:	add	x0, x0, #0x3b2
  40729c:	mov	x2, x8
  4072a0:	bl	402570 <strjoin_real@plt>
  4072a4:	str	x0, [sp, #72]
  4072a8:	ldr	x8, [sp, #72]
  4072ac:	cbnz	x8, 4072c4 <vconsole_write_data+0xf4>
  4072b0:	mov	w8, #0xfffffff4            	// #-12
  4072b4:	stur	w8, [x29, #-4]
  4072b8:	mov	w8, #0x1                   	// #1
  4072bc:	str	w8, [sp, #80]
  4072c0:	b	40731c <vconsole_write_data+0x14c>
  4072c4:	ldr	x8, [sp, #24]
  4072c8:	ldr	x0, [x8]
  4072cc:	ldr	x1, [sp, #72]
  4072d0:	bl	4026b0 <strv_env_set@plt>
  4072d4:	str	x0, [sp, #64]
  4072d8:	ldr	x8, [sp, #64]
  4072dc:	cbnz	x8, 4072f4 <vconsole_write_data+0x124>
  4072e0:	mov	w8, #0xfffffff4            	// #-12
  4072e4:	stur	w8, [x29, #-4]
  4072e8:	mov	w8, #0x1                   	// #1
  4072ec:	str	w8, [sp, #80]
  4072f0:	b	40731c <vconsole_write_data+0x14c>
  4072f4:	ldr	x8, [sp, #24]
  4072f8:	ldr	x0, [x8]
  4072fc:	bl	402460 <strv_free@plt>
  407300:	ldr	x8, [sp, #64]
  407304:	ldr	x9, [sp, #24]
  407308:	str	x8, [x9]
  40730c:	mov	x8, xzr
  407310:	str	x8, [sp, #64]
  407314:	str	wzr, [sp, #60]
  407318:	str	wzr, [sp, #80]
  40731c:	add	x0, sp, #0x48
  407320:	bl	406e18 <freep>
  407324:	ldr	w8, [sp, #80]
  407328:	cmp	w8, #0x0
  40732c:	cset	w8, eq  // eq = none
  407330:	eor	w8, w8, #0x1
  407334:	tbnz	w8, #0, 407530 <vconsole_write_data+0x360>
  407338:	b	40733c <vconsole_write_data+0x16c>
  40733c:	ldr	x8, [sp, #24]
  407340:	ldr	x9, [x8, #8]
  407344:	ldr	x0, [x9, #200]
  407348:	bl	406240 <isempty>
  40734c:	tbnz	w0, #0, 407354 <vconsole_write_data+0x184>
  407350:	b	407374 <vconsole_write_data+0x1a4>
  407354:	ldr	x8, [sp, #24]
  407358:	ldr	x0, [x8]
  40735c:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407360:	add	x1, x1, #0x2fd
  407364:	bl	4026f0 <strv_env_unset@plt>
  407368:	ldr	x8, [sp, #24]
  40736c:	str	x0, [x8]
  407370:	b	407430 <vconsole_write_data+0x260>
  407374:	mov	x8, xzr
  407378:	str	x8, [sp, #48]
  40737c:	ldr	x9, [sp, #24]
  407380:	ldr	x10, [x9, #8]
  407384:	ldr	x1, [x10, #200]
  407388:	adrp	x0, 40a000 <locale_vtable+0xc08>
  40738c:	add	x0, x0, #0x3ba
  407390:	mov	x2, x8
  407394:	bl	402570 <strjoin_real@plt>
  407398:	str	x0, [sp, #48]
  40739c:	ldr	x8, [sp, #48]
  4073a0:	cbnz	x8, 4073b8 <vconsole_write_data+0x1e8>
  4073a4:	mov	w8, #0xfffffff4            	// #-12
  4073a8:	stur	w8, [x29, #-4]
  4073ac:	mov	w8, #0x1                   	// #1
  4073b0:	str	w8, [sp, #80]
  4073b4:	b	407410 <vconsole_write_data+0x240>
  4073b8:	ldr	x8, [sp, #24]
  4073bc:	ldr	x0, [x8]
  4073c0:	ldr	x1, [sp, #48]
  4073c4:	bl	4026b0 <strv_env_set@plt>
  4073c8:	str	x0, [sp, #40]
  4073cc:	ldr	x8, [sp, #40]
  4073d0:	cbnz	x8, 4073e8 <vconsole_write_data+0x218>
  4073d4:	mov	w8, #0xfffffff4            	// #-12
  4073d8:	stur	w8, [x29, #-4]
  4073dc:	mov	w8, #0x1                   	// #1
  4073e0:	str	w8, [sp, #80]
  4073e4:	b	407410 <vconsole_write_data+0x240>
  4073e8:	ldr	x8, [sp, #24]
  4073ec:	ldr	x0, [x8]
  4073f0:	bl	402460 <strv_free@plt>
  4073f4:	ldr	x8, [sp, #40]
  4073f8:	ldr	x9, [sp, #24]
  4073fc:	str	x8, [x9]
  407400:	mov	x8, xzr
  407404:	str	x8, [sp, #40]
  407408:	str	wzr, [sp, #36]
  40740c:	str	wzr, [sp, #80]
  407410:	add	x0, sp, #0x30
  407414:	bl	406e18 <freep>
  407418:	ldr	w8, [sp, #80]
  40741c:	cmp	w8, #0x0
  407420:	cset	w8, eq  // eq = none
  407424:	eor	w8, w8, #0x1
  407428:	tbnz	w8, #0, 407530 <vconsole_write_data+0x360>
  40742c:	b	407430 <vconsole_write_data+0x260>
  407430:	ldr	x8, [sp, #24]
  407434:	ldr	x0, [x8]
  407438:	bl	407190 <strv_isempty>
  40743c:	tbnz	w0, #0, 407444 <vconsole_write_data+0x274>
  407440:	b	4074bc <vconsole_write_data+0x2ec>
  407444:	ldr	x0, [sp, #16]
  407448:	bl	4026c0 <unlink@plt>
  40744c:	cmp	w0, #0x0
  407450:	cset	w8, ge  // ge = tcont
  407454:	tbnz	w8, #0, 40749c <vconsole_write_data+0x2cc>
  407458:	bl	402610 <__errno_location@plt>
  40745c:	ldr	w8, [x0]
  407460:	cmp	w8, #0x2
  407464:	b.ne	407474 <vconsole_write_data+0x2a4>  // b.any
  407468:	mov	w8, wzr
  40746c:	str	w8, [sp, #12]
  407470:	b	407488 <vconsole_write_data+0x2b8>
  407474:	bl	402610 <__errno_location@plt>
  407478:	ldr	w8, [x0]
  40747c:	mov	w9, wzr
  407480:	subs	w8, w9, w8
  407484:	str	w8, [sp, #12]
  407488:	ldr	w8, [sp, #12]
  40748c:	stur	w8, [x29, #-4]
  407490:	mov	w8, #0x1                   	// #1
  407494:	str	w8, [sp, #80]
  407498:	b	407530 <vconsole_write_data+0x360>
  40749c:	ldr	x8, [sp, #24]
  4074a0:	ldr	x9, [x8, #8]
  4074a4:	mov	x10, #0xffffffffffffffff    	// #-1
  4074a8:	str	x10, [x9, #184]
  4074ac:	stur	wzr, [x29, #-4]
  4074b0:	mov	w11, #0x1                   	// #1
  4074b4:	str	w11, [sp, #80]
  4074b8:	b	407530 <vconsole_write_data+0x360>
  4074bc:	ldr	x8, [sp, #24]
  4074c0:	ldr	x1, [x8]
  4074c4:	ldr	x0, [sp, #16]
  4074c8:	bl	4026d0 <write_env_file_label@plt>
  4074cc:	str	w0, [sp, #84]
  4074d0:	ldr	w9, [sp, #84]
  4074d4:	cmp	w9, #0x0
  4074d8:	cset	w9, ge  // ge = tcont
  4074dc:	tbnz	w9, #0, 4074f4 <vconsole_write_data+0x324>
  4074e0:	ldr	w8, [sp, #84]
  4074e4:	stur	w8, [x29, #-4]
  4074e8:	mov	w8, #0x1                   	// #1
  4074ec:	str	w8, [sp, #80]
  4074f0:	b	407530 <vconsole_write_data+0x360>
  4074f4:	ldr	x0, [sp, #16]
  4074f8:	add	x1, sp, #0x58
  4074fc:	bl	4093b8 <stat64>
  407500:	cmp	w0, #0x0
  407504:	cset	w8, lt  // lt = tstop
  407508:	tbnz	w8, #0, 407524 <vconsole_write_data+0x354>
  40750c:	add	x8, sp, #0x58
  407510:	add	x0, x8, #0x58
  407514:	bl	402620 <timespec_load@plt>
  407518:	ldr	x8, [sp, #24]
  40751c:	ldr	x9, [x8, #8]
  407520:	str	x0, [x9, #184]
  407524:	stur	wzr, [x29, #-4]
  407528:	mov	w8, #0x1                   	// #1
  40752c:	str	w8, [sp, #80]
  407530:	sub	x0, x29, #0x18
  407534:	bl	406e7c <strv_freep>
  407538:	ldur	w0, [x29, #-4]
  40753c:	ldp	x29, x30, [sp, #240]
  407540:	add	sp, sp, #0x100
  407544:	ret

0000000000407548 <x11_write_data>:
  407548:	sub	sp, sp, #0xd0
  40754c:	stp	x29, x30, [sp, #192]
  407550:	add	x29, sp, #0xc0
  407554:	mov	x8, xzr
  407558:	adrp	x9, 40a000 <locale_vtable+0xc08>
  40755c:	add	x9, x9, #0x30b
  407560:	stur	x0, [x29, #-16]
  407564:	stur	x8, [x29, #-24]
  407568:	stur	x8, [x29, #-32]
  40756c:	ldur	x8, [x29, #-16]
  407570:	ldr	x0, [x8, #144]
  407574:	str	x9, [sp, #16]
  407578:	bl	406240 <isempty>
  40757c:	tbnz	w0, #0, 407584 <x11_write_data+0x3c>
  407580:	b	407634 <x11_write_data+0xec>
  407584:	ldur	x8, [x29, #-16]
  407588:	ldr	x0, [x8, #152]
  40758c:	bl	406240 <isempty>
  407590:	tbnz	w0, #0, 407598 <x11_write_data+0x50>
  407594:	b	407634 <x11_write_data+0xec>
  407598:	ldur	x8, [x29, #-16]
  40759c:	ldr	x0, [x8, #160]
  4075a0:	bl	406240 <isempty>
  4075a4:	tbnz	w0, #0, 4075ac <x11_write_data+0x64>
  4075a8:	b	407634 <x11_write_data+0xec>
  4075ac:	ldur	x8, [x29, #-16]
  4075b0:	ldr	x0, [x8, #168]
  4075b4:	bl	406240 <isempty>
  4075b8:	tbnz	w0, #0, 4075c0 <x11_write_data+0x78>
  4075bc:	b	407634 <x11_write_data+0xec>
  4075c0:	ldr	x0, [sp, #16]
  4075c4:	bl	4026c0 <unlink@plt>
  4075c8:	cmp	w0, #0x0
  4075cc:	cset	w8, ge  // ge = tcont
  4075d0:	tbnz	w8, #0, 407618 <x11_write_data+0xd0>
  4075d4:	bl	402610 <__errno_location@plt>
  4075d8:	ldr	w8, [x0]
  4075dc:	cmp	w8, #0x2
  4075e0:	b.ne	4075f0 <x11_write_data+0xa8>  // b.any
  4075e4:	mov	w8, wzr
  4075e8:	str	w8, [sp, #12]
  4075ec:	b	407604 <x11_write_data+0xbc>
  4075f0:	bl	402610 <__errno_location@plt>
  4075f4:	ldr	w8, [x0]
  4075f8:	mov	w9, wzr
  4075fc:	subs	w8, w9, w8
  407600:	str	w8, [sp, #12]
  407604:	ldr	w8, [sp, #12]
  407608:	stur	w8, [x29, #-4]
  40760c:	mov	w8, #0x1                   	// #1
  407610:	str	w8, [sp, #24]
  407614:	b	407808 <x11_write_data+0x2c0>
  407618:	ldur	x8, [x29, #-16]
  40761c:	mov	x9, #0xffffffffffffffff    	// #-1
  407620:	str	x9, [x8, #184]
  407624:	stur	wzr, [x29, #-4]
  407628:	mov	w10, #0x1                   	// #1
  40762c:	str	w10, [sp, #24]
  407630:	b	407808 <x11_write_data+0x2c0>
  407634:	adrp	x0, 40a000 <locale_vtable+0xc08>
  407638:	add	x0, x0, #0x3c9
  40763c:	mov	w1, #0x1ed                 	// #493
  407640:	bl	402700 <mkdir_p_label@plt>
  407644:	ldr	x8, [sp, #16]
  407648:	mov	x0, x8
  40764c:	sub	x1, x29, #0x18
  407650:	sub	x2, x29, #0x20
  407654:	bl	402710 <fopen_temporary@plt>
  407658:	str	w0, [sp, #28]
  40765c:	ldr	w9, [sp, #28]
  407660:	cmp	w9, #0x0
  407664:	cset	w9, ge  // ge = tcont
  407668:	tbnz	w9, #0, 407680 <x11_write_data+0x138>
  40766c:	ldr	w8, [sp, #28]
  407670:	stur	w8, [x29, #-4]
  407674:	mov	w8, #0x1                   	// #1
  407678:	str	w8, [sp, #24]
  40767c:	b	407808 <x11_write_data+0x2c0>
  407680:	ldur	x0, [x29, #-24]
  407684:	bl	402720 <fileno@plt>
  407688:	mov	w1, #0x1a4                 	// #420
  40768c:	bl	402730 <fchmod@plt>
  407690:	ldur	x1, [x29, #-24]
  407694:	adrp	x8, 40a000 <locale_vtable+0xc08>
  407698:	add	x8, x8, #0x3de
  40769c:	mov	x0, x8
  4076a0:	bl	402740 <fputs@plt>
  4076a4:	ldur	x8, [x29, #-16]
  4076a8:	ldr	x8, [x8, #144]
  4076ac:	mov	x0, x8
  4076b0:	bl	406240 <isempty>
  4076b4:	tbnz	w0, #0, 4076d0 <x11_write_data+0x188>
  4076b8:	ldur	x0, [x29, #-24]
  4076bc:	ldur	x8, [x29, #-16]
  4076c0:	ldr	x2, [x8, #144]
  4076c4:	adrp	x1, 40a000 <locale_vtable+0xc08>
  4076c8:	add	x1, x1, #0x4eb
  4076cc:	bl	402750 <fprintf@plt>
  4076d0:	ldur	x8, [x29, #-16]
  4076d4:	ldr	x0, [x8, #152]
  4076d8:	bl	406240 <isempty>
  4076dc:	tbnz	w0, #0, 4076f8 <x11_write_data+0x1b0>
  4076e0:	ldur	x0, [x29, #-24]
  4076e4:	ldur	x8, [x29, #-16]
  4076e8:	ldr	x2, [x8, #152]
  4076ec:	adrp	x1, 40a000 <locale_vtable+0xc08>
  4076f0:	add	x1, x1, #0x50c
  4076f4:	bl	402750 <fprintf@plt>
  4076f8:	ldur	x8, [x29, #-16]
  4076fc:	ldr	x0, [x8, #160]
  407700:	bl	406240 <isempty>
  407704:	tbnz	w0, #0, 407720 <x11_write_data+0x1d8>
  407708:	ldur	x0, [x29, #-24]
  40770c:	ldur	x8, [x29, #-16]
  407710:	ldr	x2, [x8, #160]
  407714:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407718:	add	x1, x1, #0x52c
  40771c:	bl	402750 <fprintf@plt>
  407720:	ldur	x8, [x29, #-16]
  407724:	ldr	x0, [x8, #168]
  407728:	bl	406240 <isempty>
  40772c:	tbnz	w0, #0, 407748 <x11_write_data+0x200>
  407730:	ldur	x0, [x29, #-24]
  407734:	ldur	x8, [x29, #-16]
  407738:	ldr	x2, [x8, #168]
  40773c:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407740:	add	x1, x1, #0x54e
  407744:	bl	402750 <fprintf@plt>
  407748:	ldur	x1, [x29, #-24]
  40774c:	adrp	x0, 40a000 <locale_vtable+0xc08>
  407750:	add	x0, x0, #0x570
  407754:	bl	402740 <fputs@plt>
  407758:	ldur	x8, [x29, #-24]
  40775c:	mov	x0, x8
  407760:	bl	402760 <fflush_sync_and_check@plt>
  407764:	str	w0, [sp, #28]
  407768:	ldr	w9, [sp, #28]
  40776c:	cmp	w9, #0x0
  407770:	cset	w9, ge  // ge = tcont
  407774:	tbnz	w9, #0, 40777c <x11_write_data+0x234>
  407778:	b	4077e8 <x11_write_data+0x2a0>
  40777c:	ldur	x0, [x29, #-32]
  407780:	ldr	x1, [sp, #16]
  407784:	bl	402770 <rename@plt>
  407788:	cmp	w0, #0x0
  40778c:	cset	w8, ge  // ge = tcont
  407790:	tbnz	w8, #0, 4077ac <x11_write_data+0x264>
  407794:	bl	402610 <__errno_location@plt>
  407798:	ldr	w8, [x0]
  40779c:	mov	w9, wzr
  4077a0:	subs	w8, w9, w8
  4077a4:	str	w8, [sp, #28]
  4077a8:	b	4077e8 <x11_write_data+0x2a0>
  4077ac:	ldr	x0, [sp, #16]
  4077b0:	add	x1, sp, #0x20
  4077b4:	bl	4093b8 <stat64>
  4077b8:	cmp	w0, #0x0
  4077bc:	cset	w8, lt  // lt = tstop
  4077c0:	tbnz	w8, #0, 4077d8 <x11_write_data+0x290>
  4077c4:	add	x8, sp, #0x20
  4077c8:	add	x0, x8, #0x58
  4077cc:	bl	402620 <timespec_load@plt>
  4077d0:	ldur	x8, [x29, #-16]
  4077d4:	str	x0, [x8, #136]
  4077d8:	stur	wzr, [x29, #-4]
  4077dc:	mov	w8, #0x1                   	// #1
  4077e0:	str	w8, [sp, #24]
  4077e4:	b	407808 <x11_write_data+0x2c0>
  4077e8:	ldur	x8, [x29, #-32]
  4077ec:	cbz	x8, 4077f8 <x11_write_data+0x2b0>
  4077f0:	ldur	x0, [x29, #-32]
  4077f4:	bl	4026c0 <unlink@plt>
  4077f8:	ldr	w8, [sp, #28]
  4077fc:	stur	w8, [x29, #-4]
  407800:	mov	w8, #0x1                   	// #1
  407804:	str	w8, [sp, #24]
  407808:	sub	x0, x29, #0x20
  40780c:	bl	406e18 <freep>
  407810:	sub	x0, x29, #0x18
  407814:	bl	406df0 <fclosep>
  407818:	ldur	w0, [x29, #-4]
  40781c:	ldp	x29, x30, [sp, #192]
  407820:	add	sp, sp, #0xd0
  407824:	ret

0000000000407828 <vconsole_convert_to_x11>:
  407828:	sub	sp, sp, #0x180
  40782c:	stp	x29, x30, [sp, #352]
  407830:	str	x28, [sp, #368]
  407834:	add	x29, sp, #0x160
  407838:	mov	w8, #0xffffffff            	// #-1
  40783c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  407840:	add	x9, x9, #0x295
  407844:	add	x9, x9, #0x3
  407848:	adrp	x10, 40a000 <locale_vtable+0xc08>
  40784c:	add	x10, x10, #0x57c
  407850:	stur	x0, [x29, #-16]
  407854:	stur	w8, [x29, #-28]
  407858:	stur	x9, [x29, #-120]
  40785c:	stur	x10, [x29, #-128]
  407860:	bl	407e38 <systemd_kbd_model_map>
  407864:	stur	x0, [x29, #-24]
  407868:	ldur	x9, [x29, #-16]
  40786c:	ldr	x0, [x9, #192]
  407870:	bl	406240 <isempty>
  407874:	tbnz	w0, #0, 40787c <vconsole_convert_to_x11+0x54>
  407878:	b	4078fc <vconsole_convert_to_x11+0xd4>
  40787c:	ldur	x8, [x29, #-16]
  407880:	ldr	x0, [x8, #144]
  407884:	bl	406240 <isempty>
  407888:	mov	w9, #0x1                   	// #1
  40788c:	stur	w9, [x29, #-132]
  407890:	tbnz	w0, #0, 407898 <vconsole_convert_to_x11+0x70>
  407894:	b	4078e4 <vconsole_convert_to_x11+0xbc>
  407898:	ldur	x8, [x29, #-16]
  40789c:	ldr	x0, [x8, #152]
  4078a0:	bl	406240 <isempty>
  4078a4:	mov	w9, #0x1                   	// #1
  4078a8:	stur	w9, [x29, #-132]
  4078ac:	tbnz	w0, #0, 4078b4 <vconsole_convert_to_x11+0x8c>
  4078b0:	b	4078e4 <vconsole_convert_to_x11+0xbc>
  4078b4:	ldur	x8, [x29, #-16]
  4078b8:	ldr	x0, [x8, #160]
  4078bc:	bl	406240 <isempty>
  4078c0:	mov	w9, #0x1                   	// #1
  4078c4:	stur	w9, [x29, #-132]
  4078c8:	tbnz	w0, #0, 4078d0 <vconsole_convert_to_x11+0xa8>
  4078cc:	b	4078e4 <vconsole_convert_to_x11+0xbc>
  4078d0:	ldur	x8, [x29, #-16]
  4078d4:	ldr	x0, [x8, #168]
  4078d8:	bl	406240 <isempty>
  4078dc:	eor	w9, w0, #0x1
  4078e0:	stur	w9, [x29, #-132]
  4078e4:	ldur	w8, [x29, #-132]
  4078e8:	and	w8, w8, #0x1
  4078ec:	stur	w8, [x29, #-28]
  4078f0:	ldur	x0, [x29, #-16]
  4078f4:	bl	4060cc <context_free_x11>
  4078f8:	b	407c00 <vconsole_convert_to_x11+0x3d8>
  4078fc:	mov	x8, xzr
  407900:	stur	x8, [x29, #-40]
  407904:	stur	wzr, [x29, #-44]
  407908:	ldur	x0, [x29, #-24]
  40790c:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407910:	add	x1, x1, #0x331
  407914:	bl	402650 <fopen64@plt>
  407918:	stur	x0, [x29, #-40]
  40791c:	ldur	x8, [x29, #-40]
  407920:	cbnz	x8, 407944 <vconsole_convert_to_x11+0x11c>
  407924:	bl	402610 <__errno_location@plt>
  407928:	ldr	w8, [x0]
  40792c:	mov	w9, wzr
  407930:	subs	w8, w9, w8
  407934:	stur	w8, [x29, #-4]
  407938:	mov	w8, #0x1                   	// #1
  40793c:	stur	w8, [x29, #-48]
  407940:	b	407be8 <vconsole_convert_to_x11+0x3c0>
  407944:	sub	x5, x29, #0x38
  407948:	mov	x8, xzr
  40794c:	stur	x8, [x29, #-56]
  407950:	ldur	x0, [x29, #-24]
  407954:	ldur	x3, [x29, #-40]
  407958:	mov	w1, #0x5                   	// #5
  40795c:	mov	w2, #0xffffffff            	// #-1
  407960:	sub	x4, x29, #0x2c
  407964:	bl	407e84 <read_next_mapping>
  407968:	stur	w0, [x29, #-60]
  40796c:	ldur	w9, [x29, #-60]
  407970:	cmp	w9, #0x0
  407974:	cset	w9, ge  // ge = tcont
  407978:	tbnz	w9, #0, 407990 <vconsole_convert_to_x11+0x168>
  40797c:	ldur	w8, [x29, #-60]
  407980:	stur	w8, [x29, #-4]
  407984:	mov	w8, #0x1                   	// #1
  407988:	stur	w8, [x29, #-48]
  40798c:	b	407bb8 <vconsole_convert_to_x11+0x390>
  407990:	ldur	w8, [x29, #-60]
  407994:	cbnz	w8, 4079a4 <vconsole_convert_to_x11+0x17c>
  407998:	mov	w8, #0x2                   	// #2
  40799c:	stur	w8, [x29, #-48]
  4079a0:	b	407bb8 <vconsole_convert_to_x11+0x390>
  4079a4:	ldur	x8, [x29, #-16]
  4079a8:	ldr	x0, [x8, #192]
  4079ac:	ldur	x8, [x29, #-56]
  4079b0:	ldr	x1, [x8]
  4079b4:	bl	4023d0 <strcmp@plt>
  4079b8:	cbz	w0, 4079c8 <vconsole_convert_to_x11+0x1a0>
  4079bc:	mov	w8, #0x3                   	// #3
  4079c0:	stur	w8, [x29, #-48]
  4079c4:	b	407bb8 <vconsole_convert_to_x11+0x390>
  4079c8:	ldur	x8, [x29, #-16]
  4079cc:	ldr	x0, [x8, #144]
  4079d0:	ldur	x8, [x29, #-56]
  4079d4:	ldr	x8, [x8, #8]
  4079d8:	stur	x0, [x29, #-144]
  4079dc:	mov	x0, x8
  4079e0:	bl	4081e4 <empty_or_dash_to_null>
  4079e4:	ldur	x8, [x29, #-144]
  4079e8:	stur	x0, [x29, #-152]
  4079ec:	mov	x0, x8
  4079f0:	ldur	x1, [x29, #-152]
  4079f4:	bl	406280 <streq_ptr>
  4079f8:	tbnz	w0, #0, 407a00 <vconsole_convert_to_x11+0x1d8>
  4079fc:	b	407aa4 <vconsole_convert_to_x11+0x27c>
  407a00:	ldur	x8, [x29, #-16]
  407a04:	ldr	x0, [x8, #152]
  407a08:	ldur	x8, [x29, #-56]
  407a0c:	ldr	x8, [x8, #16]
  407a10:	stur	x0, [x29, #-160]
  407a14:	mov	x0, x8
  407a18:	bl	4081e4 <empty_or_dash_to_null>
  407a1c:	ldur	x8, [x29, #-160]
  407a20:	stur	x0, [x29, #-168]
  407a24:	mov	x0, x8
  407a28:	ldur	x1, [x29, #-168]
  407a2c:	bl	406280 <streq_ptr>
  407a30:	tbnz	w0, #0, 407a38 <vconsole_convert_to_x11+0x210>
  407a34:	b	407aa4 <vconsole_convert_to_x11+0x27c>
  407a38:	ldur	x8, [x29, #-16]
  407a3c:	ldr	x0, [x8, #160]
  407a40:	ldur	x8, [x29, #-56]
  407a44:	ldr	x8, [x8, #24]
  407a48:	str	x0, [sp, #176]
  407a4c:	mov	x0, x8
  407a50:	bl	4081e4 <empty_or_dash_to_null>
  407a54:	ldr	x8, [sp, #176]
  407a58:	str	x0, [sp, #168]
  407a5c:	mov	x0, x8
  407a60:	ldr	x1, [sp, #168]
  407a64:	bl	406280 <streq_ptr>
  407a68:	tbnz	w0, #0, 407a70 <vconsole_convert_to_x11+0x248>
  407a6c:	b	407aa4 <vconsole_convert_to_x11+0x27c>
  407a70:	ldur	x8, [x29, #-16]
  407a74:	ldr	x0, [x8, #168]
  407a78:	ldur	x8, [x29, #-56]
  407a7c:	ldr	x8, [x8, #32]
  407a80:	str	x0, [sp, #160]
  407a84:	mov	x0, x8
  407a88:	bl	4081e4 <empty_or_dash_to_null>
  407a8c:	ldr	x8, [sp, #160]
  407a90:	str	x0, [sp, #152]
  407a94:	mov	x0, x8
  407a98:	ldr	x1, [sp, #152]
  407a9c:	bl	406280 <streq_ptr>
  407aa0:	tbnz	w0, #0, 407bb0 <vconsole_convert_to_x11+0x388>
  407aa4:	ldur	x8, [x29, #-16]
  407aa8:	add	x0, x8, #0x90
  407aac:	ldur	x8, [x29, #-56]
  407ab0:	ldr	x8, [x8, #8]
  407ab4:	str	x0, [sp, #144]
  407ab8:	mov	x0, x8
  407abc:	bl	4081e4 <empty_or_dash_to_null>
  407ac0:	ldr	x8, [sp, #144]
  407ac4:	str	x0, [sp, #136]
  407ac8:	mov	x0, x8
  407acc:	ldr	x1, [sp, #136]
  407ad0:	bl	402510 <free_and_strdup@plt>
  407ad4:	cmp	w0, #0x0
  407ad8:	cset	w9, lt  // lt = tstop
  407adc:	tbnz	w9, #0, 407b94 <vconsole_convert_to_x11+0x36c>
  407ae0:	ldur	x8, [x29, #-16]
  407ae4:	add	x0, x8, #0x98
  407ae8:	ldur	x8, [x29, #-56]
  407aec:	ldr	x8, [x8, #16]
  407af0:	str	x0, [sp, #128]
  407af4:	mov	x0, x8
  407af8:	bl	4081e4 <empty_or_dash_to_null>
  407afc:	ldr	x8, [sp, #128]
  407b00:	str	x0, [sp, #120]
  407b04:	mov	x0, x8
  407b08:	ldr	x1, [sp, #120]
  407b0c:	bl	402510 <free_and_strdup@plt>
  407b10:	cmp	w0, #0x0
  407b14:	cset	w9, lt  // lt = tstop
  407b18:	tbnz	w9, #0, 407b94 <vconsole_convert_to_x11+0x36c>
  407b1c:	ldur	x8, [x29, #-16]
  407b20:	add	x0, x8, #0xa0
  407b24:	ldur	x8, [x29, #-56]
  407b28:	ldr	x8, [x8, #24]
  407b2c:	str	x0, [sp, #112]
  407b30:	mov	x0, x8
  407b34:	bl	4081e4 <empty_or_dash_to_null>
  407b38:	ldr	x8, [sp, #112]
  407b3c:	str	x0, [sp, #104]
  407b40:	mov	x0, x8
  407b44:	ldr	x1, [sp, #104]
  407b48:	bl	402510 <free_and_strdup@plt>
  407b4c:	cmp	w0, #0x0
  407b50:	cset	w9, lt  // lt = tstop
  407b54:	tbnz	w9, #0, 407b94 <vconsole_convert_to_x11+0x36c>
  407b58:	ldur	x8, [x29, #-16]
  407b5c:	add	x0, x8, #0xa8
  407b60:	ldur	x8, [x29, #-56]
  407b64:	ldr	x8, [x8, #32]
  407b68:	str	x0, [sp, #96]
  407b6c:	mov	x0, x8
  407b70:	bl	4081e4 <empty_or_dash_to_null>
  407b74:	ldr	x8, [sp, #96]
  407b78:	str	x0, [sp, #88]
  407b7c:	mov	x0, x8
  407b80:	ldr	x1, [sp, #88]
  407b84:	bl	402510 <free_and_strdup@plt>
  407b88:	cmp	w0, #0x0
  407b8c:	cset	w9, ge  // ge = tcont
  407b90:	tbnz	w9, #0, 407ba8 <vconsole_convert_to_x11+0x380>
  407b94:	mov	w8, #0xfffffff4            	// #-12
  407b98:	stur	w8, [x29, #-4]
  407b9c:	mov	w8, #0x1                   	// #1
  407ba0:	stur	w8, [x29, #-48]
  407ba4:	b	407bb8 <vconsole_convert_to_x11+0x390>
  407ba8:	mov	w8, #0x1                   	// #1
  407bac:	stur	w8, [x29, #-28]
  407bb0:	mov	w8, #0x2                   	// #2
  407bb4:	stur	w8, [x29, #-48]
  407bb8:	sub	x0, x29, #0x38
  407bbc:	bl	406e7c <strv_freep>
  407bc0:	ldur	w8, [x29, #-48]
  407bc4:	cmp	w8, #0x2
  407bc8:	str	w8, [sp, #84]
  407bcc:	b.eq	407be4 <vconsole_convert_to_x11+0x3bc>  // b.none
  407bd0:	b	407bd4 <vconsole_convert_to_x11+0x3ac>
  407bd4:	ldr	w8, [sp, #84]
  407bd8:	cmp	w8, #0x3
  407bdc:	b.eq	407944 <vconsole_convert_to_x11+0x11c>  // b.none
  407be0:	b	407be8 <vconsole_convert_to_x11+0x3c0>
  407be4:	stur	wzr, [x29, #-48]
  407be8:	sub	x0, x29, #0x28
  407bec:	bl	406df0 <fclosep>
  407bf0:	ldur	w8, [x29, #-48]
  407bf4:	cbz	w8, 407c00 <vconsole_convert_to_x11+0x3d8>
  407bf8:	b	407bfc <vconsole_convert_to_x11+0x3d4>
  407bfc:	b	407e24 <vconsole_convert_to_x11+0x5fc>
  407c00:	ldur	w8, [x29, #-28]
  407c04:	cmp	w8, #0x0
  407c08:	cset	w8, le
  407c0c:	tbnz	w8, #0, 407d0c <vconsole_convert_to_x11+0x4e4>
  407c10:	mov	w8, #0x6                   	// #6
  407c14:	stur	w8, [x29, #-64]
  407c18:	stur	wzr, [x29, #-68]
  407c1c:	stur	wzr, [x29, #-72]
  407c20:	ldur	w0, [x29, #-72]
  407c24:	bl	4022a0 <log_get_max_level_realm@plt>
  407c28:	ldur	w8, [x29, #-64]
  407c2c:	and	w8, w8, #0x7
  407c30:	cmp	w0, w8
  407c34:	b.lt	407cec <vconsole_convert_to_x11+0x4c4>  // b.tstop
  407c38:	ldur	w8, [x29, #-72]
  407c3c:	ldur	w9, [x29, #-64]
  407c40:	orr	w0, w9, w8, lsl #10
  407c44:	ldur	w1, [x29, #-68]
  407c48:	ldur	x10, [x29, #-16]
  407c4c:	ldr	x10, [x10, #144]
  407c50:	str	w0, [sp, #80]
  407c54:	mov	x0, x10
  407c58:	str	w1, [sp, #76]
  407c5c:	bl	40822c <strempty>
  407c60:	ldur	x10, [x29, #-16]
  407c64:	ldr	x10, [x10, #152]
  407c68:	str	x0, [sp, #64]
  407c6c:	mov	x0, x10
  407c70:	bl	40822c <strempty>
  407c74:	ldur	x10, [x29, #-16]
  407c78:	ldr	x10, [x10, #160]
  407c7c:	str	x0, [sp, #56]
  407c80:	mov	x0, x10
  407c84:	bl	40822c <strempty>
  407c88:	ldur	x10, [x29, #-16]
  407c8c:	ldr	x10, [x10, #168]
  407c90:	str	x0, [sp, #48]
  407c94:	mov	x0, x10
  407c98:	bl	40822c <strempty>
  407c9c:	ldr	w8, [sp, #80]
  407ca0:	str	x0, [sp, #40]
  407ca4:	mov	w0, w8
  407ca8:	ldr	w1, [sp, #76]
  407cac:	ldur	x2, [x29, #-120]
  407cb0:	mov	w3, #0x23a                 	// #570
  407cb4:	ldur	x4, [x29, #-128]
  407cb8:	adrp	x5, 40a000 <locale_vtable+0xc08>
  407cbc:	add	x5, x5, #0x594
  407cc0:	ldr	x6, [sp, #64]
  407cc4:	ldr	x7, [sp, #56]
  407cc8:	mov	x10, sp
  407ccc:	ldr	x11, [sp, #48]
  407cd0:	str	x11, [x10]
  407cd4:	mov	x10, sp
  407cd8:	ldr	x12, [sp, #40]
  407cdc:	str	x12, [x10, #8]
  407ce0:	bl	4022b0 <log_internal_realm@plt>
  407ce4:	str	w0, [sp, #36]
  407ce8:	b	407d00 <vconsole_convert_to_x11+0x4d8>
  407cec:	ldur	w0, [x29, #-68]
  407cf0:	bl	4022c0 <abs@plt>
  407cf4:	mov	w8, wzr
  407cf8:	subs	w8, w8, w0, uxtb
  407cfc:	str	w8, [sp, #36]
  407d00:	ldr	w8, [sp, #36]
  407d04:	stur	w8, [x29, #-76]
  407d08:	b	407e10 <vconsole_convert_to_x11+0x5e8>
  407d0c:	ldur	w8, [x29, #-28]
  407d10:	cmp	w8, #0x0
  407d14:	cset	w8, ge  // ge = tcont
  407d18:	tbnz	w8, #0, 407d9c <vconsole_convert_to_x11+0x574>
  407d1c:	mov	w8, #0x5                   	// #5
  407d20:	stur	w8, [x29, #-80]
  407d24:	stur	wzr, [x29, #-84]
  407d28:	stur	wzr, [x29, #-88]
  407d2c:	ldur	w0, [x29, #-88]
  407d30:	bl	4022a0 <log_get_max_level_realm@plt>
  407d34:	ldur	w8, [x29, #-80]
  407d38:	and	w8, w8, #0x7
  407d3c:	cmp	w0, w8
  407d40:	b.lt	407d7c <vconsole_convert_to_x11+0x554>  // b.tstop
  407d44:	ldur	w8, [x29, #-88]
  407d48:	ldur	w9, [x29, #-80]
  407d4c:	orr	w0, w9, w8, lsl #10
  407d50:	ldur	w1, [x29, #-84]
  407d54:	ldur	x10, [x29, #-16]
  407d58:	ldr	x6, [x10, #192]
  407d5c:	ldur	x2, [x29, #-120]
  407d60:	mov	w3, #0x23d                 	// #573
  407d64:	ldur	x4, [x29, #-128]
  407d68:	adrp	x5, 40a000 <locale_vtable+0xc08>
  407d6c:	add	x5, x5, #0x5de
  407d70:	bl	4022b0 <log_internal_realm@plt>
  407d74:	str	w0, [sp, #32]
  407d78:	b	407d90 <vconsole_convert_to_x11+0x568>
  407d7c:	ldur	w0, [x29, #-84]
  407d80:	bl	4022c0 <abs@plt>
  407d84:	mov	w8, wzr
  407d88:	subs	w8, w8, w0, uxtb
  407d8c:	str	w8, [sp, #32]
  407d90:	ldr	w8, [sp, #32]
  407d94:	stur	w8, [x29, #-92]
  407d98:	b	407e10 <vconsole_convert_to_x11+0x5e8>
  407d9c:	mov	w8, #0x7                   	// #7
  407da0:	stur	w8, [x29, #-96]
  407da4:	stur	wzr, [x29, #-100]
  407da8:	stur	wzr, [x29, #-104]
  407dac:	ldur	w0, [x29, #-104]
  407db0:	bl	4022a0 <log_get_max_level_realm@plt>
  407db4:	ldur	w8, [x29, #-96]
  407db8:	and	w8, w8, #0x7
  407dbc:	cmp	w0, w8
  407dc0:	b.lt	407df4 <vconsole_convert_to_x11+0x5cc>  // b.tstop
  407dc4:	ldur	w8, [x29, #-104]
  407dc8:	ldur	w9, [x29, #-96]
  407dcc:	orr	w0, w9, w8, lsl #10
  407dd0:	ldur	w1, [x29, #-100]
  407dd4:	ldur	x2, [x29, #-120]
  407dd8:	mov	w3, #0x23f                 	// #575
  407ddc:	ldur	x4, [x29, #-128]
  407de0:	adrp	x5, 40a000 <locale_vtable+0xc08>
  407de4:	add	x5, x5, #0x622
  407de8:	bl	4022b0 <log_internal_realm@plt>
  407dec:	str	w0, [sp, #28]
  407df0:	b	407e08 <vconsole_convert_to_x11+0x5e0>
  407df4:	ldur	w0, [x29, #-100]
  407df8:	bl	4022c0 <abs@plt>
  407dfc:	mov	w8, wzr
  407e00:	subs	w8, w8, w0, uxtb
  407e04:	str	w8, [sp, #28]
  407e08:	ldr	w8, [sp, #28]
  407e0c:	stur	w8, [x29, #-108]
  407e10:	ldur	w8, [x29, #-28]
  407e14:	cmp	w8, #0x0
  407e18:	cset	w8, gt
  407e1c:	and	w8, w8, #0x1
  407e20:	stur	w8, [x29, #-4]
  407e24:	ldur	w0, [x29, #-4]
  407e28:	ldr	x28, [sp, #368]
  407e2c:	ldp	x29, x30, [sp, #352]
  407e30:	add	sp, sp, #0x180
  407e34:	ret

0000000000407e38 <systemd_kbd_model_map>:
  407e38:	sub	sp, sp, #0x20
  407e3c:	stp	x29, x30, [sp, #16]
  407e40:	add	x29, sp, #0x10
  407e44:	adrp	x0, 40a000 <locale_vtable+0xc08>
  407e48:	add	x0, x0, #0x818
  407e4c:	bl	402640 <getenv@plt>
  407e50:	str	x0, [sp]
  407e54:	ldr	x8, [sp]
  407e58:	cbz	x8, 407e68 <systemd_kbd_model_map+0x30>
  407e5c:	ldr	x8, [sp]
  407e60:	str	x8, [sp, #8]
  407e64:	b	407e74 <systemd_kbd_model_map+0x3c>
  407e68:	adrp	x8, 40a000 <locale_vtable+0xc08>
  407e6c:	add	x8, x8, #0x82e
  407e70:	str	x8, [sp, #8]
  407e74:	ldr	x0, [sp, #8]
  407e78:	ldp	x29, x30, [sp, #16]
  407e7c:	add	sp, sp, #0x20
  407e80:	ret

0000000000407e84 <read_next_mapping>:
  407e84:	sub	sp, sp, #0xa0
  407e88:	stp	x29, x30, [sp, #144]
  407e8c:	add	x29, sp, #0x90
  407e90:	adrp	x8, 40a000 <locale_vtable+0xc08>
  407e94:	add	x8, x8, #0x295
  407e98:	add	x8, x8, #0x3
  407e9c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  407ea0:	add	x9, x9, #0x851
  407ea4:	stur	x0, [x29, #-16]
  407ea8:	stur	w1, [x29, #-20]
  407eac:	stur	w2, [x29, #-24]
  407eb0:	stur	x3, [x29, #-32]
  407eb4:	stur	x4, [x29, #-40]
  407eb8:	stur	x5, [x29, #-48]
  407ebc:	str	x8, [sp, #24]
  407ec0:	str	x9, [sp, #16]
  407ec4:	ldur	x8, [x29, #-32]
  407ec8:	cmp	x8, #0x0
  407ecc:	cset	w9, ne  // ne = any
  407ed0:	mov	w10, #0x1                   	// #1
  407ed4:	eor	w9, w9, #0x1
  407ed8:	eor	w9, w9, w10
  407edc:	eor	w9, w9, w10
  407ee0:	and	w9, w9, #0x1
  407ee4:	mov	w0, w9
  407ee8:	sxtw	x8, w0
  407eec:	cbz	x8, 407f10 <read_next_mapping+0x8c>
  407ef0:	mov	w8, wzr
  407ef4:	mov	w0, w8
  407ef8:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407efc:	add	x1, x1, #0x84f
  407f00:	ldr	x2, [sp, #24]
  407f04:	mov	w3, #0x1d7                 	// #471
  407f08:	ldr	x4, [sp, #16]
  407f0c:	bl	4022e0 <log_assert_failed_realm@plt>
  407f10:	ldur	x8, [x29, #-40]
  407f14:	cmp	x8, #0x0
  407f18:	cset	w9, ne  // ne = any
  407f1c:	mov	w10, #0x1                   	// #1
  407f20:	eor	w9, w9, #0x1
  407f24:	eor	w9, w9, w10
  407f28:	eor	w9, w9, w10
  407f2c:	and	w9, w9, #0x1
  407f30:	mov	w0, w9
  407f34:	sxtw	x8, w0
  407f38:	cbz	x8, 407f5c <read_next_mapping+0xd8>
  407f3c:	mov	w8, wzr
  407f40:	mov	w0, w8
  407f44:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407f48:	add	x1, x1, #0x8b3
  407f4c:	ldr	x2, [sp, #24]
  407f50:	mov	w3, #0x1d8                 	// #472
  407f54:	ldr	x4, [sp, #16]
  407f58:	bl	4022e0 <log_assert_failed_realm@plt>
  407f5c:	ldur	x8, [x29, #-48]
  407f60:	cmp	x8, #0x0
  407f64:	cset	w9, ne  // ne = any
  407f68:	mov	w10, #0x1                   	// #1
  407f6c:	eor	w9, w9, #0x1
  407f70:	eor	w9, w9, w10
  407f74:	eor	w9, w9, w10
  407f78:	and	w9, w9, #0x1
  407f7c:	mov	w0, w9
  407f80:	sxtw	x8, w0
  407f84:	cbz	x8, 407fa8 <read_next_mapping+0x124>
  407f88:	mov	w8, wzr
  407f8c:	mov	w0, w8
  407f90:	adrp	x1, 40a000 <locale_vtable+0xc08>
  407f94:	add	x1, x1, #0x8b5
  407f98:	ldr	x2, [sp, #24]
  407f9c:	mov	w3, #0x1d9                 	// #473
  407fa0:	ldr	x4, [sp, #16]
  407fa4:	bl	4022e0 <log_assert_failed_realm@plt>
  407fa8:	sub	x2, x29, #0x38
  407fac:	mov	x8, xzr
  407fb0:	stur	x8, [x29, #-56]
  407fb4:	ldur	x0, [x29, #-32]
  407fb8:	mov	x1, #0x100000              	// #1048576
  407fbc:	bl	406e40 <read_line>
  407fc0:	str	w0, [sp, #60]
  407fc4:	ldr	w9, [sp, #60]
  407fc8:	cmp	w9, #0x0
  407fcc:	cset	w9, ge  // ge = tcont
  407fd0:	tbnz	w9, #0, 407fe8 <read_next_mapping+0x164>
  407fd4:	ldr	w8, [sp, #60]
  407fd8:	stur	w8, [x29, #-4]
  407fdc:	mov	w8, #0x1                   	// #1
  407fe0:	str	w8, [sp, #56]
  407fe4:	b	4081a0 <read_next_mapping+0x31c>
  407fe8:	ldr	w8, [sp, #60]
  407fec:	cbnz	w8, 407ffc <read_next_mapping+0x178>
  407ff0:	mov	w8, #0x8                   	// #8
  407ff4:	str	w8, [sp, #56]
  407ff8:	b	4081a0 <read_next_mapping+0x31c>
  407ffc:	ldur	x8, [x29, #-40]
  408000:	ldr	w9, [x8]
  408004:	add	w9, w9, #0x1
  408008:	str	w9, [x8]
  40800c:	ldur	x0, [x29, #-56]
  408010:	bl	402660 <strstrip@plt>
  408014:	str	x0, [sp, #72]
  408018:	mov	w9, #0x0                   	// #0
  40801c:	strb	w9, [sp, #55]
  408020:	ldr	x8, [sp, #72]
  408024:	ldrb	w9, [x8]
  408028:	str	w9, [sp, #12]
  40802c:	cbz	w9, 40804c <read_next_mapping+0x1c8>
  408030:	b	408034 <read_next_mapping+0x1b0>
  408034:	ldr	w8, [sp, #12]
  408038:	cmp	w8, #0x23
  40803c:	cset	w9, eq  // eq = none
  408040:	eor	w9, w9, #0x1
  408044:	tbnz	w9, #0, 408058 <read_next_mapping+0x1d4>
  408048:	b	40804c <read_next_mapping+0x1c8>
  40804c:	mov	w8, #0x1                   	// #1
  408050:	strb	w8, [sp, #55]
  408054:	b	408058 <read_next_mapping+0x1d4>
  408058:	ldrb	w8, [sp, #55]
  40805c:	and	w8, w8, #0x1
  408060:	strb	w8, [sp, #54]
  408064:	ldrb	w8, [sp, #54]
  408068:	tbnz	w8, #0, 408070 <read_next_mapping+0x1ec>
  40806c:	b	40807c <read_next_mapping+0x1f8>
  408070:	mov	w8, #0x9                   	// #9
  408074:	str	w8, [sp, #56]
  408078:	b	4081a0 <read_next_mapping+0x31c>
  40807c:	ldr	x1, [sp, #72]
  408080:	add	x0, sp, #0x40
  408084:	adrp	x2, 40a000 <locale_vtable+0xc08>
  408088:	add	x2, x2, #0x33b
  40808c:	mov	w3, #0x8                   	// #8
  408090:	bl	402680 <strv_split_extract@plt>
  408094:	str	w0, [sp, #60]
  408098:	ldr	w8, [sp, #60]
  40809c:	cmp	w8, #0x0
  4080a0:	cset	w8, ge  // ge = tcont
  4080a4:	tbnz	w8, #0, 4080bc <read_next_mapping+0x238>
  4080a8:	ldr	w8, [sp, #60]
  4080ac:	stur	w8, [x29, #-4]
  4080b0:	mov	w8, #0x1                   	// #1
  4080b4:	str	w8, [sp, #56]
  4080b8:	b	4081a0 <read_next_mapping+0x31c>
  4080bc:	ldr	x0, [sp, #64]
  4080c0:	bl	402410 <strv_length@plt>
  4080c4:	stur	x0, [x29, #-64]
  4080c8:	ldur	x8, [x29, #-64]
  4080cc:	ldur	w9, [x29, #-20]
  4080d0:	mov	w10, w9
  4080d4:	cmp	x8, x10
  4080d8:	b.cc	4080f0 <read_next_mapping+0x26c>  // b.lo, b.ul, b.last
  4080dc:	ldur	x8, [x29, #-64]
  4080e0:	ldur	w9, [x29, #-24]
  4080e4:	mov	w10, w9
  4080e8:	cmp	x8, x10
  4080ec:	b.ls	408188 <read_next_mapping+0x304>  // b.plast
  4080f0:	mov	w8, #0x3                   	// #3
  4080f4:	str	w8, [sp, #48]
  4080f8:	str	wzr, [sp, #44]
  4080fc:	str	wzr, [sp, #40]
  408100:	ldr	w0, [sp, #40]
  408104:	bl	4022a0 <log_get_max_level_realm@plt>
  408108:	ldr	w8, [sp, #48]
  40810c:	and	w8, w8, #0x7
  408110:	cmp	w0, w8
  408114:	b.lt	408158 <read_next_mapping+0x2d4>  // b.tstop
  408118:	ldr	w8, [sp, #40]
  40811c:	ldr	w9, [sp, #48]
  408120:	orr	w0, w9, w8, lsl #10
  408124:	ldr	w1, [sp, #44]
  408128:	ldur	x6, [x29, #-16]
  40812c:	ldur	x10, [x29, #-40]
  408130:	ldr	w7, [x10]
  408134:	ldr	x2, [sp, #24]
  408138:	mov	w3, #0x1f3                 	// #499
  40813c:	adrp	x4, 40a000 <locale_vtable+0xc08>
  408140:	add	x4, x4, #0x8b7
  408144:	adrp	x5, 40a000 <locale_vtable+0xc08>
  408148:	add	x5, x5, #0x8c9
  40814c:	bl	4022b0 <log_internal_realm@plt>
  408150:	str	w0, [sp, #8]
  408154:	b	40816c <read_next_mapping+0x2e8>
  408158:	ldr	w0, [sp, #44]
  40815c:	bl	4022c0 <abs@plt>
  408160:	mov	w8, wzr
  408164:	subs	w8, w8, w0, uxtb
  408168:	str	w8, [sp, #8]
  40816c:	ldr	w8, [sp, #8]
  408170:	str	w8, [sp, #36]
  408174:	ldr	x0, [sp, #64]
  408178:	bl	402460 <strv_free@plt>
  40817c:	mov	w8, #0x9                   	// #9
  408180:	str	w8, [sp, #56]
  408184:	b	4081a0 <read_next_mapping+0x31c>
  408188:	ldr	x8, [sp, #64]
  40818c:	ldur	x9, [x29, #-48]
  408190:	str	x8, [x9]
  408194:	mov	w10, #0x1                   	// #1
  408198:	stur	w10, [x29, #-4]
  40819c:	str	w10, [sp, #56]
  4081a0:	sub	x0, x29, #0x38
  4081a4:	bl	406e18 <freep>
  4081a8:	ldr	w8, [sp, #56]
  4081ac:	cmp	w8, #0x1
  4081b0:	str	w8, [sp, #4]
  4081b4:	b.eq	4081d4 <read_next_mapping+0x350>  // b.none
  4081b8:	b	4081bc <read_next_mapping+0x338>
  4081bc:	ldr	w8, [sp, #4]
  4081c0:	cmp	w8, #0x8
  4081c4:	b.eq	4081d0 <read_next_mapping+0x34c>  // b.none
  4081c8:	b	4081cc <read_next_mapping+0x348>
  4081cc:	b	407fa8 <read_next_mapping+0x124>
  4081d0:	stur	wzr, [x29, #-4]
  4081d4:	ldur	w0, [x29, #-4]
  4081d8:	ldp	x29, x30, [sp, #144]
  4081dc:	add	sp, sp, #0xa0
  4081e0:	ret

00000000004081e4 <empty_or_dash_to_null>:
  4081e4:	sub	sp, sp, #0x20
  4081e8:	stp	x29, x30, [sp, #16]
  4081ec:	add	x29, sp, #0x10
  4081f0:	str	x0, [sp, #8]
  4081f4:	ldr	x0, [sp, #8]
  4081f8:	bl	40925c <empty_or_dash>
  4081fc:	tbnz	w0, #0, 408204 <empty_or_dash_to_null+0x20>
  408200:	b	408210 <empty_or_dash_to_null+0x2c>
  408204:	mov	x8, xzr
  408208:	str	x8, [sp]
  40820c:	b	408218 <empty_or_dash_to_null+0x34>
  408210:	ldr	x8, [sp, #8]
  408214:	str	x8, [sp]
  408218:	ldr	x8, [sp]
  40821c:	mov	x0, x8
  408220:	ldp	x29, x30, [sp, #16]
  408224:	add	sp, sp, #0x20
  408228:	ret

000000000040822c <strempty>:
  40822c:	sub	sp, sp, #0x20
  408230:	str	x0, [sp, #24]
  408234:	ldr	x8, [sp, #24]
  408238:	str	x8, [sp, #16]
  40823c:	cbz	x8, 40824c <strempty+0x20>
  408240:	ldr	x8, [sp, #16]
  408244:	str	x8, [sp, #8]
  408248:	b	408258 <strempty+0x2c>
  40824c:	adrp	x8, 409000 <x11_convert_to_vconsole+0x104>
  408250:	add	x8, x8, #0x91c
  408254:	str	x8, [sp, #8]
  408258:	ldr	x8, [sp, #8]
  40825c:	mov	x0, x8
  408260:	add	sp, sp, #0x20
  408264:	ret

0000000000408268 <find_converted_keymap>:
  408268:	sub	sp, sp, #0xc0
  40826c:	stp	x29, x30, [sp, #176]
  408270:	add	x29, sp, #0xb0
  408274:	adrp	x8, 40a000 <locale_vtable+0xc08>
  408278:	add	x8, x8, #0x295
  40827c:	add	x8, x8, #0x3
  408280:	stur	x0, [x29, #-16]
  408284:	stur	x1, [x29, #-24]
  408288:	stur	x2, [x29, #-32]
  40828c:	ldur	x9, [x29, #-24]
  408290:	str	x8, [sp, #56]
  408294:	cbz	x9, 4082bc <find_converted_keymap+0x54>
  408298:	ldur	x0, [x29, #-16]
  40829c:	ldur	x2, [x29, #-24]
  4082a0:	adrp	x1, 40a000 <locale_vtable+0xc08>
  4082a4:	add	x1, x1, #0x653
  4082a8:	mov	x8, xzr
  4082ac:	mov	x3, x8
  4082b0:	bl	402570 <strjoin_real@plt>
  4082b4:	stur	x0, [x29, #-48]
  4082b8:	b	4082c8 <find_converted_keymap+0x60>
  4082bc:	ldur	x0, [x29, #-16]
  4082c0:	bl	402450 <strdup@plt>
  4082c4:	stur	x0, [x29, #-48]
  4082c8:	ldur	x8, [x29, #-48]
  4082cc:	cbnz	x8, 4082e4 <find_converted_keymap+0x7c>
  4082d0:	mov	w8, #0xfffffff4            	// #-12
  4082d4:	stur	w8, [x29, #-4]
  4082d8:	mov	w8, #0x1                   	// #1
  4082dc:	stur	w8, [x29, #-52]
  4082e0:	b	408520 <find_converted_keymap+0x2b8>
  4082e4:	adrp	x8, 40a000 <locale_vtable+0xc08>
  4082e8:	add	x8, x8, #0x950
  4082ec:	stur	x8, [x29, #-40]
  4082f0:	ldur	x8, [x29, #-40]
  4082f4:	mov	w9, #0x0                   	// #0
  4082f8:	str	w9, [sp, #52]
  4082fc:	cbz	x8, 408314 <find_converted_keymap+0xac>
  408300:	ldur	x8, [x29, #-40]
  408304:	ldrb	w9, [x8]
  408308:	cmp	w9, #0x0
  40830c:	cset	w9, ne  // ne = any
  408310:	str	w9, [sp, #52]
  408314:	ldr	w8, [sp, #52]
  408318:	tbnz	w8, #0, 408320 <find_converted_keymap+0xb8>
  40831c:	b	408514 <find_converted_keymap+0x2ac>
  408320:	mov	x8, xzr
  408324:	stur	x8, [x29, #-64]
  408328:	stur	x8, [x29, #-72]
  40832c:	ldur	x0, [x29, #-40]
  408330:	ldur	x2, [x29, #-48]
  408334:	adrp	x9, 40a000 <locale_vtable+0xc08>
  408338:	add	x9, x9, #0x655
  40833c:	mov	x1, x9
  408340:	adrp	x3, 40a000 <locale_vtable+0xc08>
  408344:	add	x3, x3, #0x65a
  408348:	mov	x4, x8
  40834c:	str	x8, [sp, #40]
  408350:	str	x9, [sp, #32]
  408354:	bl	402570 <strjoin_real@plt>
  408358:	stur	x0, [x29, #-64]
  40835c:	ldur	x0, [x29, #-40]
  408360:	ldur	x2, [x29, #-48]
  408364:	ldr	x1, [sp, #32]
  408368:	adrp	x3, 40a000 <locale_vtable+0xc08>
  40836c:	add	x3, x3, #0x65f
  408370:	ldr	x4, [sp, #40]
  408374:	bl	402570 <strjoin_real@plt>
  408378:	stur	x0, [x29, #-72]
  40837c:	ldur	x8, [x29, #-64]
  408380:	cbz	x8, 40838c <find_converted_keymap+0x124>
  408384:	ldur	x8, [x29, #-72]
  408388:	cbnz	x8, 4083a0 <find_converted_keymap+0x138>
  40838c:	mov	w8, #0xfffffff4            	// #-12
  408390:	stur	w8, [x29, #-4]
  408394:	mov	w8, #0x1                   	// #1
  408398:	stur	w8, [x29, #-52]
  40839c:	b	4084d0 <find_converted_keymap+0x268>
  4083a0:	ldur	x0, [x29, #-64]
  4083a4:	mov	w8, wzr
  4083a8:	mov	w1, w8
  4083ac:	bl	402780 <access@plt>
  4083b0:	cmp	w0, #0x0
  4083b4:	cset	w8, eq  // eq = none
  4083b8:	and	w8, w8, #0x1
  4083bc:	sturb	w8, [x29, #-73]
  4083c0:	ldurb	w8, [x29, #-73]
  4083c4:	tbnz	w8, #0, 4083dc <find_converted_keymap+0x174>
  4083c8:	ldur	x0, [x29, #-72]
  4083cc:	mov	w8, wzr
  4083d0:	mov	w1, w8
  4083d4:	bl	402780 <access@plt>
  4083d8:	cbnz	w0, 4084cc <find_converted_keymap+0x264>
  4083dc:	mov	w8, #0x7                   	// #7
  4083e0:	stur	w8, [x29, #-80]
  4083e4:	stur	wzr, [x29, #-84]
  4083e8:	str	wzr, [sp, #88]
  4083ec:	ldr	w0, [sp, #88]
  4083f0:	bl	4022a0 <log_get_max_level_realm@plt>
  4083f4:	ldur	w8, [x29, #-80]
  4083f8:	and	w8, w8, #0x7
  4083fc:	cmp	w0, w8
  408400:	b.lt	40847c <find_converted_keymap+0x214>  // b.tstop
  408404:	ldr	w8, [sp, #88]
  408408:	ldur	w9, [x29, #-80]
  40840c:	orr	w0, w9, w8, lsl #10
  408410:	ldur	w1, [x29, #-84]
  408414:	ldur	x6, [x29, #-48]
  408418:	ldurb	w8, [x29, #-73]
  40841c:	str	w0, [sp, #28]
  408420:	str	w1, [sp, #24]
  408424:	str	x6, [sp, #16]
  408428:	tbnz	w8, #0, 408430 <find_converted_keymap+0x1c8>
  40842c:	b	40843c <find_converted_keymap+0x1d4>
  408430:	ldur	x8, [x29, #-64]
  408434:	str	x8, [sp, #8]
  408438:	b	408444 <find_converted_keymap+0x1dc>
  40843c:	ldur	x8, [x29, #-72]
  408440:	str	x8, [sp, #8]
  408444:	ldr	x8, [sp, #8]
  408448:	ldr	w0, [sp, #28]
  40844c:	ldr	w1, [sp, #24]
  408450:	ldr	x2, [sp, #56]
  408454:	mov	w3, #0x25b                 	// #603
  408458:	adrp	x4, 40a000 <locale_vtable+0xc08>
  40845c:	add	x4, x4, #0x667
  408460:	adrp	x5, 40a000 <locale_vtable+0xc08>
  408464:	add	x5, x5, #0x67d
  408468:	ldr	x6, [sp, #16]
  40846c:	mov	x7, x8
  408470:	bl	4022b0 <log_internal_realm@plt>
  408474:	str	w0, [sp, #4]
  408478:	b	408490 <find_converted_keymap+0x228>
  40847c:	ldur	w0, [x29, #-84]
  408480:	bl	4022c0 <abs@plt>
  408484:	mov	w8, wzr
  408488:	subs	w8, w8, w0, uxtb
  40848c:	str	w8, [sp, #4]
  408490:	ldr	w8, [sp, #4]
  408494:	str	w8, [sp, #84]
  408498:	ldur	x9, [x29, #-48]
  40849c:	str	x9, [sp, #72]
  4084a0:	mov	x9, xzr
  4084a4:	stur	x9, [x29, #-48]
  4084a8:	ldr	x9, [sp, #72]
  4084ac:	str	x9, [sp, #64]
  4084b0:	ldr	x9, [sp, #64]
  4084b4:	ldur	x10, [x29, #-32]
  4084b8:	str	x9, [x10]
  4084bc:	mov	w8, #0x1                   	// #1
  4084c0:	stur	w8, [x29, #-4]
  4084c4:	stur	w8, [x29, #-52]
  4084c8:	b	4084d0 <find_converted_keymap+0x268>
  4084cc:	stur	wzr, [x29, #-52]
  4084d0:	sub	x0, x29, #0x48
  4084d4:	bl	406e18 <freep>
  4084d8:	sub	x0, x29, #0x40
  4084dc:	bl	406e18 <freep>
  4084e0:	ldur	w8, [x29, #-52]
  4084e4:	cmp	w8, #0x0
  4084e8:	cset	w8, eq  // eq = none
  4084ec:	eor	w8, w8, #0x1
  4084f0:	tbnz	w8, #0, 408520 <find_converted_keymap+0x2b8>
  4084f4:	b	4084f8 <find_converted_keymap+0x290>
  4084f8:	ldur	x0, [x29, #-40]
  4084fc:	mov	w8, wzr
  408500:	mov	w1, w8
  408504:	bl	402420 <strchr@plt>
  408508:	add	x9, x0, #0x1
  40850c:	stur	x9, [x29, #-40]
  408510:	b	4082f0 <find_converted_keymap+0x88>
  408514:	stur	wzr, [x29, #-4]
  408518:	mov	w8, #0x1                   	// #1
  40851c:	stur	w8, [x29, #-52]
  408520:	sub	x0, x29, #0x30
  408524:	bl	406e18 <freep>
  408528:	ldur	w0, [x29, #-4]
  40852c:	ldp	x29, x30, [sp, #176]
  408530:	add	sp, sp, #0xc0
  408534:	ret

0000000000408538 <find_legacy_keymap>:
  408538:	stp	x29, x30, [sp, #-32]!
  40853c:	str	x28, [sp, #16]
  408540:	mov	x29, sp
  408544:	sub	sp, sp, #0x150
  408548:	mov	x8, xzr
  40854c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  408550:	add	x9, x9, #0x6e0
  408554:	adrp	x10, 40a000 <locale_vtable+0xc08>
  408558:	add	x10, x10, #0x295
  40855c:	add	x10, x10, #0x3
  408560:	stur	x0, [x29, #-16]
  408564:	stur	x1, [x29, #-24]
  408568:	stur	x8, [x29, #-40]
  40856c:	stur	x8, [x29, #-48]
  408570:	stur	wzr, [x29, #-52]
  408574:	stur	wzr, [x29, #-56]
  408578:	stur	x9, [x29, #-240]
  40857c:	stur	x10, [x29, #-248]
  408580:	ldur	x8, [x29, #-16]
  408584:	ldr	x0, [x8, #144]
  408588:	bl	406240 <isempty>
  40858c:	mov	w9, #0x1                   	// #1
  408590:	eor	w10, w0, #0x1
  408594:	eor	w10, w10, w9
  408598:	eor	w10, w10, w9
  40859c:	eor	w9, w10, w9
  4085a0:	and	w9, w9, #0x1
  4085a4:	mov	w1, w9
  4085a8:	sxtw	x8, w1
  4085ac:	cbz	x8, 4085d4 <find_legacy_keymap+0x9c>
  4085b0:	mov	w8, wzr
  4085b4:	mov	w0, w8
  4085b8:	adrp	x1, 40a000 <locale_vtable+0xc08>
  4085bc:	add	x1, x1, #0x69d
  4085c0:	ldur	x2, [x29, #-248]
  4085c4:	mov	w3, #0x26d                 	// #621
  4085c8:	adrp	x4, 40a000 <locale_vtable+0xc08>
  4085cc:	add	x4, x4, #0x6b5
  4085d0:	bl	4022e0 <log_assert_failed_realm@plt>
  4085d4:	bl	407e38 <systemd_kbd_model_map>
  4085d8:	stur	x0, [x29, #-32]
  4085dc:	ldur	x0, [x29, #-32]
  4085e0:	adrp	x1, 40a000 <locale_vtable+0xc08>
  4085e4:	add	x1, x1, #0x331
  4085e8:	bl	402650 <fopen64@plt>
  4085ec:	stur	x0, [x29, #-40]
  4085f0:	ldur	x8, [x29, #-40]
  4085f4:	cbnz	x8, 408618 <find_legacy_keymap+0xe0>
  4085f8:	bl	402610 <__errno_location@plt>
  4085fc:	ldr	w8, [x0]
  408600:	mov	w9, wzr
  408604:	subs	w8, w9, w8
  408608:	stur	w8, [x29, #-4]
  40860c:	mov	w8, #0x1                   	// #1
  408610:	stur	w8, [x29, #-64]
  408614:	b	408b98 <find_legacy_keymap+0x660>
  408618:	sub	x5, x29, #0x48
  40861c:	mov	x8, xzr
  408620:	stur	x8, [x29, #-72]
  408624:	stur	wzr, [x29, #-76]
  408628:	ldur	x0, [x29, #-32]
  40862c:	ldur	x3, [x29, #-40]
  408630:	mov	w1, #0x5                   	// #5
  408634:	mov	w2, #0xffffffff            	// #-1
  408638:	sub	x4, x29, #0x34
  40863c:	bl	407e84 <read_next_mapping>
  408640:	stur	w0, [x29, #-60]
  408644:	ldur	w9, [x29, #-60]
  408648:	cmp	w9, #0x0
  40864c:	cset	w9, ge  // ge = tcont
  408650:	tbnz	w9, #0, 408668 <find_legacy_keymap+0x130>
  408654:	ldur	w8, [x29, #-60]
  408658:	stur	w8, [x29, #-4]
  40865c:	mov	w8, #0x1                   	// #1
  408660:	stur	w8, [x29, #-64]
  408664:	b	408918 <find_legacy_keymap+0x3e0>
  408668:	ldur	w8, [x29, #-60]
  40866c:	cbnz	w8, 40867c <find_legacy_keymap+0x144>
  408670:	mov	w8, #0x4                   	// #4
  408674:	stur	w8, [x29, #-64]
  408678:	b	408918 <find_legacy_keymap+0x3e0>
  40867c:	ldur	x8, [x29, #-16]
  408680:	ldr	x0, [x8, #144]
  408684:	ldur	x8, [x29, #-72]
  408688:	ldr	x1, [x8, #8]
  40868c:	bl	4023d0 <strcmp@plt>
  408690:	cbnz	w0, 4086a0 <find_legacy_keymap+0x168>
  408694:	mov	w8, #0xa                   	// #10
  408698:	stur	w8, [x29, #-76]
  40869c:	b	408738 <find_legacy_keymap+0x200>
  4086a0:	ldur	x8, [x29, #-16]
  4086a4:	ldr	x0, [x8, #144]
  4086a8:	ldur	x8, [x29, #-72]
  4086ac:	ldr	x1, [x8, #8]
  4086b0:	bl	408bbc <startswith_comma>
  4086b4:	tbnz	w0, #0, 4086bc <find_legacy_keymap+0x184>
  4086b8:	b	4086c8 <find_legacy_keymap+0x190>
  4086bc:	mov	w8, #0x5                   	// #5
  4086c0:	stur	w8, [x29, #-76]
  4086c4:	b	408738 <find_legacy_keymap+0x200>
  4086c8:	mov	x8, xzr
  4086cc:	stur	x8, [x29, #-88]
  4086d0:	ldur	x8, [x29, #-72]
  4086d4:	ldr	x0, [x8, #8]
  4086d8:	ldur	x8, [x29, #-72]
  4086dc:	ldr	x8, [x8, #8]
  4086e0:	stur	x0, [x29, #-256]
  4086e4:	mov	x0, x8
  4086e8:	ldur	x1, [x29, #-240]
  4086ec:	bl	402790 <strcspn@plt>
  4086f0:	ldur	x8, [x29, #-256]
  4086f4:	sub	x9, x29, #0x8
  4086f8:	stur	x0, [x9, #-256]
  4086fc:	mov	x0, x8
  408700:	sub	x8, x29, #0x8
  408704:	ldur	x1, [x8, #-256]
  408708:	bl	4027a0 <strndup@plt>
  40870c:	stur	x0, [x29, #-88]
  408710:	ldur	x8, [x29, #-16]
  408714:	ldr	x0, [x8, #144]
  408718:	ldur	x1, [x29, #-88]
  40871c:	bl	408bbc <startswith_comma>
  408720:	tbnz	w0, #0, 408728 <find_legacy_keymap+0x1f0>
  408724:	b	408730 <find_legacy_keymap+0x1f8>
  408728:	mov	w8, #0x1                   	// #1
  40872c:	stur	w8, [x29, #-76]
  408730:	sub	x0, x29, #0x58
  408734:	bl	406e18 <freep>
  408738:	ldur	w8, [x29, #-76]
  40873c:	cmp	w8, #0x0
  408740:	cset	w8, ls  // ls = plast
  408744:	tbnz	w8, #0, 4087d0 <find_legacy_keymap+0x298>
  408748:	ldur	x8, [x29, #-16]
  40874c:	ldr	x0, [x8, #152]
  408750:	bl	406240 <isempty>
  408754:	tbnz	w0, #0, 408774 <find_legacy_keymap+0x23c>
  408758:	ldur	x8, [x29, #-16]
  40875c:	ldr	x0, [x8, #152]
  408760:	ldur	x8, [x29, #-72]
  408764:	ldr	x1, [x8, #16]
  408768:	bl	406280 <streq_ptr>
  40876c:	tbnz	w0, #0, 408774 <find_legacy_keymap+0x23c>
  408770:	b	4087d0 <find_legacy_keymap+0x298>
  408774:	ldur	w8, [x29, #-76]
  408778:	add	w8, w8, #0x1
  40877c:	stur	w8, [x29, #-76]
  408780:	ldur	x9, [x29, #-16]
  408784:	ldr	x0, [x9, #160]
  408788:	ldur	x9, [x29, #-72]
  40878c:	ldr	x1, [x9, #24]
  408790:	bl	406280 <streq_ptr>
  408794:	tbnz	w0, #0, 40879c <find_legacy_keymap+0x264>
  408798:	b	4087d0 <find_legacy_keymap+0x298>
  40879c:	ldur	w8, [x29, #-76]
  4087a0:	add	w8, w8, #0x1
  4087a4:	stur	w8, [x29, #-76]
  4087a8:	ldur	x9, [x29, #-16]
  4087ac:	ldr	x0, [x9, #168]
  4087b0:	ldur	x9, [x29, #-72]
  4087b4:	ldr	x1, [x9, #32]
  4087b8:	bl	406280 <streq_ptr>
  4087bc:	tbnz	w0, #0, 4087c4 <find_legacy_keymap+0x28c>
  4087c0:	b	4087d0 <find_legacy_keymap+0x298>
  4087c4:	ldur	w8, [x29, #-76]
  4087c8:	add	w8, w8, #0x1
  4087cc:	stur	w8, [x29, #-76]
  4087d0:	ldur	w8, [x29, #-76]
  4087d4:	ldur	w9, [x29, #-56]
  4087d8:	stur	w9, [x29, #-92]
  4087dc:	mov	w9, #0x1                   	// #1
  4087e0:	stur	w9, [x29, #-96]
  4087e4:	ldur	w9, [x29, #-92]
  4087e8:	cmp	w9, #0x1
  4087ec:	sub	x9, x29, #0xc
  4087f0:	stur	w8, [x9, #-256]
  4087f4:	b.ls	408808 <find_legacy_keymap+0x2d0>  // b.plast
  4087f8:	ldur	w8, [x29, #-92]
  4087fc:	sub	x9, x29, #0x10
  408800:	stur	w8, [x9, #-256]
  408804:	b	408814 <find_legacy_keymap+0x2dc>
  408808:	mov	w8, #0x1                   	// #1
  40880c:	sub	x9, x29, #0x10
  408810:	stur	w8, [x9, #-256]
  408814:	sub	x8, x29, #0x10
  408818:	ldur	w8, [x8, #-256]
  40881c:	stur	w8, [x29, #-100]
  408820:	ldur	w8, [x29, #-100]
  408824:	sub	x9, x29, #0xc
  408828:	ldur	w9, [x9, #-256]
  40882c:	cmp	w9, w8
  408830:	b.cc	408914 <find_legacy_keymap+0x3dc>  // b.lo, b.ul, b.last
  408834:	mov	w8, #0x7                   	// #7
  408838:	stur	w8, [x29, #-104]
  40883c:	stur	wzr, [x29, #-108]
  408840:	stur	wzr, [x29, #-112]
  408844:	ldur	w0, [x29, #-112]
  408848:	bl	4022a0 <log_get_max_level_realm@plt>
  40884c:	ldur	w8, [x29, #-104]
  408850:	and	w8, w8, #0x7
  408854:	cmp	w0, w8
  408858:	b.lt	4088a0 <find_legacy_keymap+0x368>  // b.tstop
  40885c:	ldur	w8, [x29, #-112]
  408860:	ldur	w9, [x29, #-104]
  408864:	orr	w0, w9, w8, lsl #10
  408868:	ldur	w1, [x29, #-108]
  40886c:	ldur	x10, [x29, #-72]
  408870:	ldr	x6, [x10]
  408874:	ldur	w7, [x29, #-76]
  408878:	ldur	x2, [x29, #-248]
  40887c:	mov	w3, #0x2a4                 	// #676
  408880:	adrp	x4, 40a000 <locale_vtable+0xc08>
  408884:	add	x4, x4, #0x6e2
  408888:	adrp	x5, 40a000 <locale_vtable+0xc08>
  40888c:	add	x5, x5, #0x6f5
  408890:	bl	4022b0 <log_internal_realm@plt>
  408894:	sub	x8, x29, #0x14
  408898:	stur	w0, [x8, #-256]
  40889c:	b	4088b8 <find_legacy_keymap+0x380>
  4088a0:	ldur	w0, [x29, #-108]
  4088a4:	bl	4022c0 <abs@plt>
  4088a8:	mov	w8, wzr
  4088ac:	subs	w8, w8, w0, uxtb
  4088b0:	sub	x9, x29, #0x14
  4088b4:	stur	w8, [x9, #-256]
  4088b8:	sub	x8, x29, #0x14
  4088bc:	ldur	w8, [x8, #-256]
  4088c0:	stur	w8, [x29, #-116]
  4088c4:	ldur	w8, [x29, #-76]
  4088c8:	ldur	w9, [x29, #-56]
  4088cc:	cmp	w8, w9
  4088d0:	b.ls	408914 <find_legacy_keymap+0x3dc>  // b.plast
  4088d4:	ldur	w8, [x29, #-76]
  4088d8:	stur	w8, [x29, #-56]
  4088dc:	ldur	x9, [x29, #-72]
  4088e0:	ldr	x1, [x9]
  4088e4:	sub	x0, x29, #0x30
  4088e8:	bl	402510 <free_and_strdup@plt>
  4088ec:	stur	w0, [x29, #-60]
  4088f0:	ldur	w8, [x29, #-60]
  4088f4:	cmp	w8, #0x0
  4088f8:	cset	w8, ge  // ge = tcont
  4088fc:	tbnz	w8, #0, 408914 <find_legacy_keymap+0x3dc>
  408900:	ldur	w8, [x29, #-60]
  408904:	stur	w8, [x29, #-4]
  408908:	mov	w8, #0x1                   	// #1
  40890c:	stur	w8, [x29, #-64]
  408910:	b	408918 <find_legacy_keymap+0x3e0>
  408914:	stur	wzr, [x29, #-64]
  408918:	sub	x0, x29, #0x48
  40891c:	bl	406e7c <strv_freep>
  408920:	ldur	w8, [x29, #-64]
  408924:	sub	x9, x29, #0x18
  408928:	stur	w8, [x9, #-256]
  40892c:	cbz	w8, 408948 <find_legacy_keymap+0x410>
  408930:	b	408934 <find_legacy_keymap+0x3fc>
  408934:	sub	x8, x29, #0x18
  408938:	ldur	w8, [x8, #-256]
  40893c:	cmp	w8, #0x4
  408940:	b.eq	40894c <find_legacy_keymap+0x414>  // b.none
  408944:	b	408b98 <find_legacy_keymap+0x660>
  408948:	b	408618 <find_legacy_keymap+0xe0>
  40894c:	ldur	w8, [x29, #-56]
  408950:	cmp	w8, #0xa
  408954:	b.cs	408b54 <find_legacy_keymap+0x61c>  // b.hs, b.nlast
  408958:	ldur	x8, [x29, #-16]
  40895c:	ldr	x8, [x8, #144]
  408960:	cbz	x8, 408b54 <find_legacy_keymap+0x61c>
  408964:	mov	x8, xzr
  408968:	stur	x8, [x29, #-136]
  40896c:	ldur	x8, [x29, #-16]
  408970:	ldr	x8, [x8, #144]
  408974:	stur	x8, [x29, #-152]
  408978:	ldur	x0, [x29, #-152]
  40897c:	ldur	x8, [x29, #-16]
  408980:	ldr	x8, [x8, #144]
  408984:	sub	x9, x29, #0x20
  408988:	stur	x0, [x9, #-256]
  40898c:	mov	x0, x8
  408990:	ldur	x1, [x29, #-240]
  408994:	bl	402790 <strcspn@plt>
  408998:	sub	x8, x29, #0x20
  40899c:	ldur	x8, [x8, #-256]
  4089a0:	sub	x9, x29, #0x28
  4089a4:	stur	x0, [x9, #-256]
  4089a8:	mov	x0, x8
  4089ac:	sub	x8, x29, #0x28
  4089b0:	ldur	x1, [x8, #-256]
  4089b4:	bl	4027b0 <strnlen@plt>
  4089b8:	stur	x0, [x29, #-160]
  4089bc:	ldur	x8, [x29, #-160]
  4089c0:	mov	x9, #0x1                   	// #1
  4089c4:	add	x8, x8, #0x1
  4089c8:	mul	x8, x8, x9
  4089cc:	add	x8, x8, #0xf
  4089d0:	and	x8, x8, #0xfffffffffffffff0
  4089d4:	mov	x9, sp
  4089d8:	subs	x8, x9, x8
  4089dc:	mov	sp, x8
  4089e0:	stur	x8, [x29, #-168]
  4089e4:	ldur	x8, [x29, #-168]
  4089e8:	ldur	x9, [x29, #-160]
  4089ec:	add	x8, x8, x9
  4089f0:	mov	w10, #0x0                   	// #0
  4089f4:	strb	w10, [x8]
  4089f8:	ldur	x8, [x29, #-168]
  4089fc:	ldur	x1, [x29, #-152]
  408a00:	ldur	x2, [x29, #-160]
  408a04:	mov	x0, x8
  408a08:	sub	x9, x29, #0x30
  408a0c:	stur	x8, [x9, #-256]
  408a10:	bl	4027c0 <memcpy@plt>
  408a14:	sub	x8, x29, #0x30
  408a18:	ldur	x8, [x8, #-256]
  408a1c:	stur	x8, [x29, #-176]
  408a20:	ldur	x9, [x29, #-176]
  408a24:	stur	x9, [x29, #-128]
  408a28:	ldur	x9, [x29, #-16]
  408a2c:	ldr	x9, [x9, #160]
  408a30:	cbz	x9, 408af0 <find_legacy_keymap+0x5b8>
  408a34:	ldur	x8, [x29, #-16]
  408a38:	ldr	x8, [x8, #160]
  408a3c:	stur	x8, [x29, #-184]
  408a40:	ldur	x0, [x29, #-184]
  408a44:	ldur	x8, [x29, #-16]
  408a48:	ldr	x8, [x8, #160]
  408a4c:	sub	x9, x29, #0x38
  408a50:	stur	x0, [x9, #-256]
  408a54:	mov	x0, x8
  408a58:	ldur	x1, [x29, #-240]
  408a5c:	bl	402790 <strcspn@plt>
  408a60:	sub	x8, x29, #0x38
  408a64:	ldur	x8, [x8, #-256]
  408a68:	sub	x9, x29, #0x40
  408a6c:	stur	x0, [x9, #-256]
  408a70:	mov	x0, x8
  408a74:	sub	x8, x29, #0x40
  408a78:	ldur	x1, [x8, #-256]
  408a7c:	bl	4027b0 <strnlen@plt>
  408a80:	stur	x0, [x29, #-192]
  408a84:	ldur	x8, [x29, #-192]
  408a88:	mov	x9, #0x1                   	// #1
  408a8c:	add	x8, x8, #0x1
  408a90:	mul	x8, x8, x9
  408a94:	add	x8, x8, #0xf
  408a98:	and	x8, x8, #0xfffffffffffffff0
  408a9c:	mov	x9, sp
  408aa0:	subs	x8, x9, x8
  408aa4:	mov	sp, x8
  408aa8:	stur	x8, [x29, #-200]
  408aac:	ldur	x8, [x29, #-200]
  408ab0:	ldur	x9, [x29, #-192]
  408ab4:	add	x8, x8, x9
  408ab8:	mov	w10, #0x0                   	// #0
  408abc:	strb	w10, [x8]
  408ac0:	ldur	x8, [x29, #-200]
  408ac4:	ldur	x1, [x29, #-184]
  408ac8:	ldur	x2, [x29, #-192]
  408acc:	mov	x0, x8
  408ad0:	sub	x9, x29, #0x48
  408ad4:	stur	x8, [x9, #-256]
  408ad8:	bl	4027c0 <memcpy@plt>
  408adc:	sub	x8, x29, #0x48
  408ae0:	ldur	x8, [x8, #-256]
  408ae4:	stur	x8, [x29, #-208]
  408ae8:	ldur	x9, [x29, #-208]
  408aec:	stur	x9, [x29, #-136]
  408af0:	ldur	x0, [x29, #-128]
  408af4:	ldur	x1, [x29, #-136]
  408af8:	sub	x2, x29, #0x90
  408afc:	bl	408268 <find_converted_keymap>
  408b00:	stur	w0, [x29, #-60]
  408b04:	ldur	w8, [x29, #-60]
  408b08:	cmp	w8, #0x0
  408b0c:	cset	w8, ge  // ge = tcont
  408b10:	tbnz	w8, #0, 408b28 <find_legacy_keymap+0x5f0>
  408b14:	ldur	w8, [x29, #-60]
  408b18:	stur	w8, [x29, #-4]
  408b1c:	mov	w8, #0x1                   	// #1
  408b20:	stur	w8, [x29, #-64]
  408b24:	b	408b98 <find_legacy_keymap+0x660>
  408b28:	ldur	w8, [x29, #-60]
  408b2c:	cmp	w8, #0x0
  408b30:	cset	w8, le
  408b34:	tbnz	w8, #0, 408b54 <find_legacy_keymap+0x61c>
  408b38:	ldur	x0, [x29, #-48]
  408b3c:	bl	402480 <free@plt>
  408b40:	ldur	x8, [x29, #-144]
  408b44:	stur	x8, [x29, #-48]
  408b48:	mov	x8, xzr
  408b4c:	stur	x8, [x29, #-144]
  408b50:	stur	wzr, [x29, #-212]
  408b54:	ldur	x8, [x29, #-48]
  408b58:	stur	x8, [x29, #-224]
  408b5c:	mov	x8, xzr
  408b60:	stur	x8, [x29, #-48]
  408b64:	ldur	x8, [x29, #-224]
  408b68:	stur	x8, [x29, #-232]
  408b6c:	ldur	x8, [x29, #-232]
  408b70:	ldur	x9, [x29, #-24]
  408b74:	str	x8, [x9]
  408b78:	ldur	x8, [x29, #-24]
  408b7c:	ldr	x8, [x8]
  408b80:	cmp	x8, #0x0
  408b84:	cset	w10, ne  // ne = any
  408b88:	and	w10, w10, #0x1
  408b8c:	stur	w10, [x29, #-4]
  408b90:	mov	w10, #0x1                   	// #1
  408b94:	stur	w10, [x29, #-64]
  408b98:	sub	x0, x29, #0x30
  408b9c:	bl	406e18 <freep>
  408ba0:	sub	x0, x29, #0x28
  408ba4:	bl	406df0 <fclosep>
  408ba8:	ldur	w0, [x29, #-4]
  408bac:	mov	sp, x29
  408bb0:	ldr	x28, [sp, #16]
  408bb4:	ldp	x29, x30, [sp], #32
  408bb8:	ret

0000000000408bbc <startswith_comma>:
  408bbc:	sub	sp, sp, #0x30
  408bc0:	stp	x29, x30, [sp, #32]
  408bc4:	add	x29, sp, #0x20
  408bc8:	str	x0, [sp, #16]
  408bcc:	str	x1, [sp, #8]
  408bd0:	ldr	x0, [sp, #16]
  408bd4:	ldr	x1, [sp, #8]
  408bd8:	bl	4092cc <startswith>
  408bdc:	str	x0, [sp, #16]
  408be0:	ldr	x8, [sp, #16]
  408be4:	cbnz	x8, 408bf8 <startswith_comma+0x3c>
  408be8:	mov	w8, wzr
  408bec:	and	w8, w8, #0x1
  408bf0:	sturb	w8, [x29, #-1]
  408bf4:	b	408c54 <startswith_comma+0x98>
  408bf8:	mov	w8, #0x0                   	// #0
  408bfc:	strb	w8, [sp, #7]
  408c00:	ldr	x9, [sp, #16]
  408c04:	ldrb	w8, [x9]
  408c08:	str	w8, [sp]
  408c0c:	cbz	w8, 408c2c <startswith_comma+0x70>
  408c10:	b	408c14 <startswith_comma+0x58>
  408c14:	ldr	w8, [sp]
  408c18:	cmp	w8, #0x2c
  408c1c:	cset	w9, eq  // eq = none
  408c20:	eor	w9, w9, #0x1
  408c24:	tbnz	w9, #0, 408c38 <startswith_comma+0x7c>
  408c28:	b	408c2c <startswith_comma+0x70>
  408c2c:	mov	w8, #0x1                   	// #1
  408c30:	strb	w8, [sp, #7]
  408c34:	b	408c38 <startswith_comma+0x7c>
  408c38:	ldrb	w8, [sp, #7]
  408c3c:	mov	w9, #0x1                   	// #1
  408c40:	and	w8, w8, w9
  408c44:	strb	w8, [sp, #6]
  408c48:	ldrb	w8, [sp, #6]
  408c4c:	and	w8, w8, #0x1
  408c50:	sturb	w8, [x29, #-1]
  408c54:	ldurb	w8, [x29, #-1]
  408c58:	and	w0, w8, #0x1
  408c5c:	ldp	x29, x30, [sp, #32]
  408c60:	add	sp, sp, #0x30
  408c64:	ret

0000000000408c68 <find_language_fallback>:
  408c68:	sub	sp, sp, #0x70
  408c6c:	stp	x29, x30, [sp, #96]
  408c70:	add	x29, sp, #0x60
  408c74:	mov	x8, xzr
  408c78:	adrp	x9, 40a000 <locale_vtable+0xc08>
  408c7c:	add	x9, x9, #0x295
  408c80:	add	x9, x9, #0x3
  408c84:	adrp	x10, 40a000 <locale_vtable+0xc08>
  408c88:	add	x10, x10, #0x71f
  408c8c:	stur	x0, [x29, #-16]
  408c90:	stur	x1, [x29, #-24]
  408c94:	stur	x8, [x29, #-40]
  408c98:	stur	wzr, [x29, #-44]
  408c9c:	str	x9, [sp, #8]
  408ca0:	str	x10, [sp]
  408ca4:	ldur	x8, [x29, #-16]
  408ca8:	cmp	x8, #0x0
  408cac:	cset	w9, ne  // ne = any
  408cb0:	mov	w10, #0x1                   	// #1
  408cb4:	eor	w9, w9, #0x1
  408cb8:	eor	w9, w9, w10
  408cbc:	eor	w9, w9, w10
  408cc0:	and	w9, w9, #0x1
  408cc4:	mov	w0, w9
  408cc8:	sxtw	x8, w0
  408ccc:	cbz	x8, 408cf0 <find_language_fallback+0x88>
  408cd0:	mov	w8, wzr
  408cd4:	mov	w0, w8
  408cd8:	adrp	x1, 40a000 <locale_vtable+0xc08>
  408cdc:	add	x1, x1, #0x71a
  408ce0:	ldr	x2, [sp, #8]
  408ce4:	mov	w3, #0x2ca                 	// #714
  408ce8:	ldr	x4, [sp]
  408cec:	bl	4022e0 <log_assert_failed_realm@plt>
  408cf0:	ldur	x8, [x29, #-24]
  408cf4:	cmp	x8, #0x0
  408cf8:	cset	w9, ne  // ne = any
  408cfc:	mov	w10, #0x1                   	// #1
  408d00:	eor	w9, w9, #0x1
  408d04:	eor	w9, w9, w10
  408d08:	eor	w9, w9, w10
  408d0c:	and	w9, w9, #0x1
  408d10:	mov	w0, w9
  408d14:	sxtw	x8, w0
  408d18:	cbz	x8, 408d3c <find_language_fallback+0xd4>
  408d1c:	mov	w8, wzr
  408d20:	mov	w0, w8
  408d24:	adrp	x1, 40a000 <locale_vtable+0xc08>
  408d28:	add	x1, x1, #0x751
  408d2c:	ldr	x2, [sp, #8]
  408d30:	mov	w3, #0x2cb                 	// #715
  408d34:	ldr	x4, [sp]
  408d38:	bl	4022e0 <log_assert_failed_realm@plt>
  408d3c:	bl	408eb0 <systemd_language_fallback_map>
  408d40:	stur	x0, [x29, #-32]
  408d44:	ldur	x0, [x29, #-32]
  408d48:	adrp	x1, 40a000 <locale_vtable+0xc08>
  408d4c:	add	x1, x1, #0x331
  408d50:	bl	402650 <fopen64@plt>
  408d54:	stur	x0, [x29, #-40]
  408d58:	ldur	x8, [x29, #-40]
  408d5c:	cbnz	x8, 408d80 <find_language_fallback+0x118>
  408d60:	bl	402610 <__errno_location@plt>
  408d64:	ldr	w8, [x0]
  408d68:	mov	w9, wzr
  408d6c:	subs	w8, w9, w8
  408d70:	stur	w8, [x29, #-4]
  408d74:	mov	w8, #0x1                   	// #1
  408d78:	str	w8, [sp, #48]
  408d7c:	b	408e98 <find_language_fallback+0x230>
  408d80:	add	x5, sp, #0x28
  408d84:	mov	x8, xzr
  408d88:	str	x8, [sp, #40]
  408d8c:	ldur	x0, [x29, #-32]
  408d90:	ldur	x3, [x29, #-40]
  408d94:	mov	w9, #0x2                   	// #2
  408d98:	mov	w1, w9
  408d9c:	mov	w2, w9
  408da0:	sub	x4, x29, #0x2c
  408da4:	bl	407e84 <read_next_mapping>
  408da8:	str	w0, [sp, #36]
  408dac:	ldr	w9, [sp, #36]
  408db0:	cmp	w9, #0x0
  408db4:	cset	w9, gt
  408db8:	tbnz	w9, #0, 408dd0 <find_language_fallback+0x168>
  408dbc:	ldr	w8, [sp, #36]
  408dc0:	stur	w8, [x29, #-4]
  408dc4:	mov	w8, #0x1                   	// #1
  408dc8:	str	w8, [sp, #48]
  408dcc:	b	408e74 <find_language_fallback+0x20c>
  408dd0:	ldur	x0, [x29, #-16]
  408dd4:	ldr	x8, [sp, #40]
  408dd8:	ldr	x1, [x8]
  408ddc:	bl	4023d0 <strcmp@plt>
  408de0:	cbnz	w0, 408e70 <find_language_fallback+0x208>
  408de4:	ldr	x0, [sp, #40]
  408de8:	bl	402410 <strv_length@plt>
  408dec:	cmp	x0, #0x2
  408df0:	cset	w8, eq  // eq = none
  408df4:	mov	w9, #0x1                   	// #1
  408df8:	eor	w8, w8, #0x1
  408dfc:	eor	w8, w8, w9
  408e00:	eor	w8, w8, w9
  408e04:	and	w8, w8, #0x1
  408e08:	mov	w0, w8
  408e0c:	sxtw	x10, w0
  408e10:	cbz	x10, 408e34 <find_language_fallback+0x1cc>
  408e14:	mov	w8, wzr
  408e18:	mov	w0, w8
  408e1c:	adrp	x1, 40a000 <locale_vtable+0xc08>
  408e20:	add	x1, x1, #0x75a
  408e24:	ldr	x2, [sp, #8]
  408e28:	mov	w3, #0x2dc                 	// #732
  408e2c:	ldr	x4, [sp]
  408e30:	bl	4022e0 <log_assert_failed_realm@plt>
  408e34:	ldr	x8, [sp, #40]
  408e38:	ldr	x8, [x8, #8]
  408e3c:	str	x8, [sp, #24]
  408e40:	ldr	x8, [sp, #40]
  408e44:	mov	x9, xzr
  408e48:	str	x9, [x8, #8]
  408e4c:	ldr	x8, [sp, #24]
  408e50:	str	x8, [sp, #16]
  408e54:	ldr	x8, [sp, #16]
  408e58:	ldur	x9, [x29, #-24]
  408e5c:	str	x8, [x9]
  408e60:	mov	w10, #0x1                   	// #1
  408e64:	stur	w10, [x29, #-4]
  408e68:	str	w10, [sp, #48]
  408e6c:	b	408e74 <find_language_fallback+0x20c>
  408e70:	str	wzr, [sp, #48]
  408e74:	add	x0, sp, #0x28
  408e78:	bl	406e7c <strv_freep>
  408e7c:	ldr	w8, [sp, #48]
  408e80:	cmp	w8, #0x0
  408e84:	cset	w8, eq  // eq = none
  408e88:	eor	w8, w8, #0x1
  408e8c:	tbnz	w8, #0, 408e98 <find_language_fallback+0x230>
  408e90:	b	408e94 <find_language_fallback+0x22c>
  408e94:	b	408d80 <find_language_fallback+0x118>
  408e98:	sub	x0, x29, #0x28
  408e9c:	bl	406df0 <fclosep>
  408ea0:	ldur	w0, [x29, #-4]
  408ea4:	ldp	x29, x30, [sp, #96]
  408ea8:	add	sp, sp, #0x70
  408eac:	ret

0000000000408eb0 <systemd_language_fallback_map>:
  408eb0:	sub	sp, sp, #0x20
  408eb4:	stp	x29, x30, [sp, #16]
  408eb8:	add	x29, sp, #0x10
  408ebc:	adrp	x0, 40a000 <locale_vtable+0xc08>
  408ec0:	add	x0, x0, #0x8e7
  408ec4:	bl	402640 <getenv@plt>
  408ec8:	str	x0, [sp]
  408ecc:	ldr	x8, [sp]
  408ed0:	cbz	x8, 408ee0 <systemd_language_fallback_map+0x30>
  408ed4:	ldr	x8, [sp]
  408ed8:	str	x8, [sp, #8]
  408edc:	b	408eec <systemd_language_fallback_map+0x3c>
  408ee0:	adrp	x8, 40a000 <locale_vtable+0xc08>
  408ee4:	add	x8, x8, #0x905
  408ee8:	str	x8, [sp, #8]
  408eec:	ldr	x0, [sp, #8]
  408ef0:	ldp	x29, x30, [sp, #16]
  408ef4:	add	sp, sp, #0x20
  408ef8:	ret

0000000000408efc <x11_convert_to_vconsole>:
  408efc:	sub	sp, sp, #0xb0
  408f00:	stp	x29, x30, [sp, #160]
  408f04:	add	x29, sp, #0xa0
  408f08:	mov	w8, #0x0                   	// #0
  408f0c:	adrp	x9, 40a000 <locale_vtable+0xc08>
  408f10:	add	x9, x9, #0x295
  408f14:	add	x9, x9, #0x3
  408f18:	adrp	x10, 40a000 <locale_vtable+0xc08>
  408f1c:	add	x10, x10, #0x76e
  408f20:	stur	x0, [x29, #-16]
  408f24:	sturb	w8, [x29, #-17]
  408f28:	ldur	x11, [x29, #-16]
  408f2c:	ldr	x0, [x11, #144]
  408f30:	str	x9, [sp, #56]
  408f34:	str	x10, [sp, #48]
  408f38:	bl	406240 <isempty>
  408f3c:	tbnz	w0, #0, 408f44 <x11_convert_to_vconsole+0x48>
  408f40:	b	408f8c <x11_convert_to_vconsole+0x90>
  408f44:	ldur	x8, [x29, #-16]
  408f48:	ldr	x0, [x8, #192]
  408f4c:	bl	406240 <isempty>
  408f50:	mov	w9, #0x1                   	// #1
  408f54:	str	w9, [sp, #44]
  408f58:	tbnz	w0, #0, 408f60 <x11_convert_to_vconsole+0x64>
  408f5c:	b	408f74 <x11_convert_to_vconsole+0x78>
  408f60:	ldur	x8, [x29, #-16]
  408f64:	ldr	x0, [x8, #200]
  408f68:	bl	406240 <isempty>
  408f6c:	eor	w9, w0, #0x1
  408f70:	str	w9, [sp, #44]
  408f74:	ldr	w8, [sp, #44]
  408f78:	and	w8, w8, #0x1
  408f7c:	sturb	w8, [x29, #-17]
  408f80:	ldur	x0, [x29, #-16]
  408f84:	bl	406138 <context_free_vconsole>
  408f88:	b	409104 <x11_convert_to_vconsole+0x208>
  408f8c:	sub	x2, x29, #0x20
  408f90:	mov	x8, xzr
  408f94:	stur	x8, [x29, #-32]
  408f98:	ldur	x8, [x29, #-16]
  408f9c:	ldr	x0, [x8, #144]
  408fa0:	ldur	x8, [x29, #-16]
  408fa4:	ldr	x1, [x8, #160]
  408fa8:	bl	408268 <find_converted_keymap>
  408fac:	stur	w0, [x29, #-36]
  408fb0:	ldur	w9, [x29, #-36]
  408fb4:	cmp	w9, #0x0
  408fb8:	cset	w9, ge  // ge = tcont
  408fbc:	tbnz	w9, #0, 408fd4 <x11_convert_to_vconsole+0xd8>
  408fc0:	ldur	w8, [x29, #-36]
  408fc4:	stur	w8, [x29, #-4]
  408fc8:	mov	w8, #0x1                   	// #1
  408fcc:	stur	w8, [x29, #-40]
  408fd0:	b	4090ec <x11_convert_to_vconsole+0x1f0>
  408fd4:	ldur	w8, [x29, #-36]
  408fd8:	cbnz	w8, 409010 <x11_convert_to_vconsole+0x114>
  408fdc:	ldur	x0, [x29, #-16]
  408fe0:	sub	x1, x29, #0x20
  408fe4:	bl	408538 <find_legacy_keymap>
  408fe8:	stur	w0, [x29, #-36]
  408fec:	ldur	w8, [x29, #-36]
  408ff0:	cmp	w8, #0x0
  408ff4:	cset	w8, ge  // ge = tcont
  408ff8:	tbnz	w8, #0, 409010 <x11_convert_to_vconsole+0x114>
  408ffc:	ldur	w8, [x29, #-36]
  409000:	stur	w8, [x29, #-4]
  409004:	mov	w8, #0x1                   	// #1
  409008:	stur	w8, [x29, #-40]
  40900c:	b	4090ec <x11_convert_to_vconsole+0x1f0>
  409010:	ldur	w8, [x29, #-36]
  409014:	cbnz	w8, 409094 <x11_convert_to_vconsole+0x198>
  409018:	mov	w8, #0x5                   	// #5
  40901c:	stur	w8, [x29, #-44]
  409020:	stur	wzr, [x29, #-48]
  409024:	stur	wzr, [x29, #-52]
  409028:	ldur	w0, [x29, #-52]
  40902c:	bl	4022a0 <log_get_max_level_realm@plt>
  409030:	ldur	w8, [x29, #-44]
  409034:	and	w8, w8, #0x7
  409038:	cmp	w0, w8
  40903c:	b.lt	409078 <x11_convert_to_vconsole+0x17c>  // b.tstop
  409040:	ldur	w8, [x29, #-52]
  409044:	ldur	w9, [x29, #-44]
  409048:	orr	w0, w9, w8, lsl #10
  40904c:	ldur	w1, [x29, #-48]
  409050:	ldur	x10, [x29, #-16]
  409054:	ldr	x6, [x10, #144]
  409058:	ldr	x2, [sp, #56]
  40905c:	mov	w3, #0x2ff                 	// #767
  409060:	ldr	x4, [sp, #48]
  409064:	adrp	x5, 40a000 <locale_vtable+0xc08>
  409068:	add	x5, x5, #0x786
  40906c:	bl	4022b0 <log_internal_realm@plt>
  409070:	str	w0, [sp, #40]
  409074:	b	40908c <x11_convert_to_vconsole+0x190>
  409078:	ldur	w0, [x29, #-48]
  40907c:	bl	4022c0 <abs@plt>
  409080:	mov	w8, wzr
  409084:	subs	w8, w8, w0, uxtb
  409088:	str	w8, [sp, #40]
  40908c:	ldr	w8, [sp, #40]
  409090:	stur	w8, [x29, #-56]
  409094:	ldur	x8, [x29, #-16]
  409098:	ldr	x0, [x8, #192]
  40909c:	ldur	x1, [x29, #-32]
  4090a0:	bl	406280 <streq_ptr>
  4090a4:	tbnz	w0, #0, 4090e8 <x11_convert_to_vconsole+0x1ec>
  4090a8:	ldur	x8, [x29, #-16]
  4090ac:	ldr	x0, [x8, #192]
  4090b0:	bl	402480 <free@plt>
  4090b4:	ldur	x8, [x29, #-32]
  4090b8:	ldur	x9, [x29, #-16]
  4090bc:	str	x8, [x9, #192]
  4090c0:	mov	x8, xzr
  4090c4:	stur	x8, [x29, #-32]
  4090c8:	stur	wzr, [x29, #-60]
  4090cc:	ldur	x8, [x29, #-16]
  4090d0:	ldr	x0, [x8, #200]
  4090d4:	bl	4062b8 <mfree>
  4090d8:	ldur	x8, [x29, #-16]
  4090dc:	str	x0, [x8, #200]
  4090e0:	mov	w10, #0x1                   	// #1
  4090e4:	sturb	w10, [x29, #-17]
  4090e8:	stur	wzr, [x29, #-40]
  4090ec:	sub	x0, x29, #0x20
  4090f0:	bl	406e18 <freep>
  4090f4:	ldur	w8, [x29, #-40]
  4090f8:	cbz	w8, 409104 <x11_convert_to_vconsole+0x208>
  4090fc:	b	409100 <x11_convert_to_vconsole+0x204>
  409100:	b	40924c <x11_convert_to_vconsole+0x350>
  409104:	ldurb	w8, [x29, #-17]
  409108:	tbnz	w8, #0, 409110 <x11_convert_to_vconsole+0x214>
  40910c:	b	4091cc <x11_convert_to_vconsole+0x2d0>
  409110:	mov	w8, #0x6                   	// #6
  409114:	stur	w8, [x29, #-64]
  409118:	stur	wzr, [x29, #-68]
  40911c:	stur	wzr, [x29, #-72]
  409120:	ldur	w0, [x29, #-72]
  409124:	bl	4022a0 <log_get_max_level_realm@plt>
  409128:	ldur	w8, [x29, #-64]
  40912c:	and	w8, w8, #0x7
  409130:	cmp	w0, w8
  409134:	b.lt	4091ac <x11_convert_to_vconsole+0x2b0>  // b.tstop
  409138:	ldur	w8, [x29, #-72]
  40913c:	ldur	w9, [x29, #-64]
  409140:	orr	w0, w9, w8, lsl #10
  409144:	ldur	w1, [x29, #-68]
  409148:	ldur	x10, [x29, #-16]
  40914c:	ldr	x10, [x10, #192]
  409150:	str	w0, [sp, #36]
  409154:	mov	x0, x10
  409158:	str	w1, [sp, #32]
  40915c:	bl	40822c <strempty>
  409160:	ldur	x10, [x29, #-16]
  409164:	ldr	x10, [x10, #200]
  409168:	str	x0, [sp, #24]
  40916c:	mov	x0, x10
  409170:	bl	40822c <strempty>
  409174:	ldr	w8, [sp, #36]
  409178:	str	x0, [sp, #16]
  40917c:	mov	w0, w8
  409180:	ldr	w1, [sp, #32]
  409184:	ldr	x2, [sp, #56]
  409188:	mov	w3, #0x30a                 	// #778
  40918c:	ldr	x4, [sp, #48]
  409190:	adrp	x5, 40a000 <locale_vtable+0xc08>
  409194:	add	x5, x5, #0x7bb
  409198:	ldr	x6, [sp, #24]
  40919c:	ldr	x7, [sp, #16]
  4091a0:	bl	4022b0 <log_internal_realm@plt>
  4091a4:	str	w0, [sp, #12]
  4091a8:	b	4091c0 <x11_convert_to_vconsole+0x2c4>
  4091ac:	ldur	w0, [x29, #-68]
  4091b0:	bl	4022c0 <abs@plt>
  4091b4:	mov	w8, wzr
  4091b8:	subs	w8, w8, w0, uxtb
  4091bc:	str	w8, [sp, #12]
  4091c0:	ldr	w8, [sp, #12]
  4091c4:	stur	w8, [x29, #-76]
  4091c8:	b	409240 <x11_convert_to_vconsole+0x344>
  4091cc:	mov	w8, #0x7                   	// #7
  4091d0:	str	w8, [sp, #80]
  4091d4:	str	wzr, [sp, #76]
  4091d8:	str	wzr, [sp, #72]
  4091dc:	ldr	w0, [sp, #72]
  4091e0:	bl	4022a0 <log_get_max_level_realm@plt>
  4091e4:	ldr	w8, [sp, #80]
  4091e8:	and	w8, w8, #0x7
  4091ec:	cmp	w0, w8
  4091f0:	b.lt	409224 <x11_convert_to_vconsole+0x328>  // b.tstop
  4091f4:	ldr	w8, [sp, #72]
  4091f8:	ldr	w9, [sp, #80]
  4091fc:	orr	w0, w9, w8, lsl #10
  409200:	ldr	w1, [sp, #76]
  409204:	ldr	x2, [sp, #56]
  409208:	mov	w3, #0x30c                 	// #780
  40920c:	ldr	x4, [sp, #48]
  409210:	adrp	x5, 40a000 <locale_vtable+0xc08>
  409214:	add	x5, x5, #0x7ef
  409218:	bl	4022b0 <log_internal_realm@plt>
  40921c:	str	w0, [sp, #8]
  409220:	b	409238 <x11_convert_to_vconsole+0x33c>
  409224:	ldr	w0, [sp, #76]
  409228:	bl	4022c0 <abs@plt>
  40922c:	mov	w8, wzr
  409230:	subs	w8, w8, w0, uxtb
  409234:	str	w8, [sp, #8]
  409238:	ldr	w8, [sp, #8]
  40923c:	str	w8, [sp, #68]
  409240:	ldurb	w8, [x29, #-17]
  409244:	and	w8, w8, #0x1
  409248:	stur	w8, [x29, #-4]
  40924c:	ldur	w0, [x29, #-4]
  409250:	ldp	x29, x30, [sp, #160]
  409254:	add	sp, sp, #0xb0
  409258:	ret

000000000040925c <empty_or_dash>:
  40925c:	sub	sp, sp, #0x10
  409260:	str	x0, [sp, #8]
  409264:	ldr	x8, [sp, #8]
  409268:	mov	w9, #0x1                   	// #1
  40926c:	str	w9, [sp, #4]
  409270:	cbz	x8, 4092bc <empty_or_dash+0x60>
  409274:	ldr	x8, [sp, #8]
  409278:	ldrb	w9, [x8]
  40927c:	mov	w10, #0x1                   	// #1
  409280:	str	w10, [sp, #4]
  409284:	cbz	w9, 4092bc <empty_or_dash+0x60>
  409288:	ldr	x8, [sp, #8]
  40928c:	ldrb	w9, [x8]
  409290:	mov	w10, #0x0                   	// #0
  409294:	cmp	w9, #0x2d
  409298:	str	w10, [sp]
  40929c:	b.ne	4092b4 <empty_or_dash+0x58>  // b.any
  4092a0:	ldr	x8, [sp, #8]
  4092a4:	ldrb	w9, [x8, #1]
  4092a8:	cmp	w9, #0x0
  4092ac:	cset	w9, eq  // eq = none
  4092b0:	str	w9, [sp]
  4092b4:	ldr	w8, [sp]
  4092b8:	str	w8, [sp, #4]
  4092bc:	ldr	w8, [sp, #4]
  4092c0:	and	w0, w8, #0x1
  4092c4:	add	sp, sp, #0x10
  4092c8:	ret

00000000004092cc <startswith>:
  4092cc:	sub	sp, sp, #0x30
  4092d0:	stp	x29, x30, [sp, #32]
  4092d4:	add	x29, sp, #0x20
  4092d8:	str	x0, [sp, #16]
  4092dc:	str	x1, [sp, #8]
  4092e0:	ldr	x0, [sp, #8]
  4092e4:	bl	402470 <strlen@plt>
  4092e8:	str	x0, [sp]
  4092ec:	ldr	x0, [sp, #16]
  4092f0:	ldr	x1, [sp, #8]
  4092f4:	ldr	x2, [sp]
  4092f8:	bl	402540 <strncmp@plt>
  4092fc:	cbnz	w0, 409314 <startswith+0x48>
  409300:	ldr	x8, [sp, #16]
  409304:	ldr	x9, [sp]
  409308:	add	x8, x8, x9
  40930c:	stur	x8, [x29, #-8]
  409310:	b	40931c <startswith+0x50>
  409314:	mov	x8, xzr
  409318:	stur	x8, [x29, #-8]
  40931c:	ldur	x0, [x29, #-8]
  409320:	ldp	x29, x30, [sp, #32]
  409324:	add	sp, sp, #0x30
  409328:	ret
  40932c:	udf	#0

0000000000409330 <__libc_csu_init>:
  409330:	stp	x29, x30, [sp, #-64]!
  409334:	mov	x29, sp
  409338:	stp	x19, x20, [sp, #16]
  40933c:	adrp	x20, 41f000 <__FRAME_END__+0x14508>
  409340:	add	x20, x20, #0xaa8
  409344:	stp	x21, x22, [sp, #32]
  409348:	adrp	x21, 41f000 <__FRAME_END__+0x14508>
  40934c:	add	x21, x21, #0xaa0
  409350:	sub	x20, x20, x21
  409354:	mov	w22, w0
  409358:	stp	x23, x24, [sp, #48]
  40935c:	mov	x23, x1
  409360:	mov	x24, x2
  409364:	bl	4021b8 <_init>
  409368:	cmp	xzr, x20, asr #3
  40936c:	b.eq	409398 <__libc_csu_init+0x68>  // b.none
  409370:	asr	x20, x20, #3
  409374:	mov	x19, #0x0                   	// #0
  409378:	ldr	x3, [x21, x19, lsl #3]
  40937c:	mov	x2, x24
  409380:	add	x19, x19, #0x1
  409384:	mov	x1, x23
  409388:	mov	w0, w22
  40938c:	blr	x3
  409390:	cmp	x20, x19
  409394:	b.ne	409378 <__libc_csu_init+0x48>  // b.any
  409398:	ldp	x19, x20, [sp, #16]
  40939c:	ldp	x21, x22, [sp, #32]
  4093a0:	ldp	x23, x24, [sp, #48]
  4093a4:	ldp	x29, x30, [sp], #64
  4093a8:	ret
  4093ac:	nop

00000000004093b0 <__libc_csu_fini>:
  4093b0:	ret
  4093b4:	udf	#0

00000000004093b8 <stat64>:
  4093b8:	mov	x2, x1
  4093bc:	mov	x1, x0
  4093c0:	mov	w0, #0x0                   	// #0
  4093c4:	b	4027d0 <__xstat64@plt>

Disassembly of section .fini:

00000000004093c8 <_fini>:
  4093c8:	stp	x29, x30, [sp, #-16]!
  4093cc:	mov	x29, sp
  4093d0:	ldp	x29, x30, [sp], #16
  4093d4:	ret
