
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000750 <.init>:
 750:	stp	x29, x30, [sp, #-16]!
 754:	mov	x29, sp
 758:	bl	820 <fprintf@plt+0x10>
 75c:	ldp	x29, x30, [sp], #16
 760:	ret

Disassembly of section .plt:

0000000000000770 <memcpy@plt-0x20>:
 770:	stp	x16, x30, [sp, #-16]!
 774:	adrp	x16, 11000 <dl_load@@Base+0x1070c>
 778:	ldr	x17, [x16, #4088]
 77c:	add	x16, x16, #0xff8
 780:	br	x17
 784:	nop
 788:	nop
 78c:	nop

0000000000000790 <memcpy@plt>:
 790:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 794:	ldr	x17, [x16]
 798:	add	x16, x16, #0x0
 79c:	br	x17

00000000000007a0 <strlen@plt>:
 7a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #8]
 7a8:	add	x16, x16, #0x8
 7ac:	br	x17

00000000000007b0 <exit@plt>:
 7b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #16]
 7b8:	add	x16, x16, #0x10
 7bc:	br	x17

00000000000007c0 <__cxa_finalize@plt>:
 7c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #24]
 7c8:	add	x16, x16, #0x18
 7cc:	br	x17

00000000000007d0 <memset@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #32]
 7d8:	add	x16, x16, #0x20
 7dc:	br	x17

00000000000007e0 <__gmon_start__@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #40]
 7e8:	add	x16, x16, #0x28
 7ec:	br	x17

00000000000007f0 <fnmatch@plt>:
 7f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #48]
 7f8:	add	x16, x16, #0x30
 7fc:	br	x17

0000000000000800 <gettext@plt>:
 800:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 804:	ldr	x17, [x16, #56]
 808:	add	x16, x16, #0x38
 80c:	br	x17

0000000000000810 <fprintf@plt>:
 810:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 814:	ldr	x17, [x16, #64]
 818:	add	x16, x16, #0x40
 81c:	br	x17

Disassembly of section .text:

0000000000000820 <dl_load@@Base-0xd4>:
     820:	adrp	x0, 11000 <dl_load@@Base+0x1070c>
     824:	ldr	x0, [x0, #4056]
     828:	cbz	x0, 830 <fprintf@plt+0x20>
     82c:	b	7e0 <__gmon_start__@plt>
     830:	ret
     834:	nop
     838:	adrp	x0, 12000 <dl_load@@Base+0x1170c>
     83c:	add	x0, x0, #0x108
     840:	adrp	x1, 12000 <dl_load@@Base+0x1170c>
     844:	add	x1, x1, #0x108
     848:	cmp	x1, x0
     84c:	b.eq	864 <fprintf@plt+0x54>  // b.none
     850:	adrp	x1, 11000 <dl_load@@Base+0x1070c>
     854:	ldr	x1, [x1, #4032]
     858:	cbz	x1, 864 <fprintf@plt+0x54>
     85c:	mov	x16, x1
     860:	br	x16
     864:	ret
     868:	adrp	x0, 12000 <dl_load@@Base+0x1170c>
     86c:	add	x0, x0, #0x108
     870:	adrp	x1, 12000 <dl_load@@Base+0x1170c>
     874:	add	x1, x1, #0x108
     878:	sub	x1, x1, x0
     87c:	lsr	x2, x1, #63
     880:	add	x1, x2, x1, asr #3
     884:	cmp	xzr, x1, asr #1
     888:	asr	x1, x1, #1
     88c:	b.eq	8a4 <fprintf@plt+0x94>  // b.none
     890:	adrp	x2, 11000 <dl_load@@Base+0x1070c>
     894:	ldr	x2, [x2, #4064]
     898:	cbz	x2, 8a4 <fprintf@plt+0x94>
     89c:	mov	x16, x2
     8a0:	br	x16
     8a4:	ret
     8a8:	stp	x29, x30, [sp, #-32]!
     8ac:	mov	x29, sp
     8b0:	str	x19, [sp, #16]
     8b4:	adrp	x19, 12000 <dl_load@@Base+0x1170c>
     8b8:	ldrb	w0, [x19, #264]
     8bc:	cbnz	w0, 8e4 <fprintf@plt+0xd4>
     8c0:	adrp	x0, 11000 <dl_load@@Base+0x1070c>
     8c4:	ldr	x0, [x0, #4040]
     8c8:	cbz	x0, 8d8 <fprintf@plt+0xc8>
     8cc:	adrp	x0, 12000 <dl_load@@Base+0x1170c>
     8d0:	ldr	x0, [x0, #72]
     8d4:	bl	7c0 <__cxa_finalize@plt>
     8d8:	bl	838 <fprintf@plt+0x28>
     8dc:	mov	w0, #0x1                   	// #1
     8e0:	strb	w0, [x19, #264]
     8e4:	ldr	x19, [sp, #16]
     8e8:	ldp	x29, x30, [sp], #32
     8ec:	ret
     8f0:	b	868 <fprintf@plt+0x58>

00000000000008f4 <dl_load@@Base>:
     8f4:	sub	sp, sp, #0x60
     8f8:	stp	x29, x30, [sp, #80]
     8fc:	add	x29, sp, #0x50
     900:	adrp	x8, 12000 <dl_load@@Base+0x1170c>
     904:	add	x8, x8, #0x110
     908:	adrp	x9, 12000 <dl_load@@Base+0x1170c>
     90c:	add	x9, x9, #0x118
     910:	adrp	x10, 12000 <dl_load@@Base+0x1170c>
     914:	add	x10, x10, #0x50
     918:	stur	x0, [x29, #-8]
     91c:	stur	x1, [x29, #-16]
     920:	stur	wzr, [x29, #-36]
     924:	ldur	x11, [x29, #-8]
     928:	str	x11, [x8]
     92c:	ldur	x11, [x29, #-16]
     930:	str	x11, [x9]
     934:	ldr	x11, [x8]
     938:	ldr	w12, [x11]
     93c:	cmp	w12, #0x2
     940:	str	x8, [sp, #32]
     944:	str	x9, [sp, #24]
     948:	str	x10, [sp, #16]
     94c:	b.ne	968 <dl_load@@Base+0x74>  // b.any
     950:	ldr	x8, [sp, #32]
     954:	ldr	x9, [x8]
     958:	ldr	w10, [x9, #4]
     95c:	cmp	w10, #0x0
     960:	cset	w10, ge  // ge = tcont
     964:	tbnz	w10, #0, 9c8 <dl_load@@Base+0xd4>
     968:	adrp	x8, 11000 <dl_load@@Base+0x1070c>
     96c:	ldr	x8, [x8, #4048]
     970:	ldr	x0, [x8]
     974:	adrp	x1, 1000 <dl_load@@Base+0x70c>
     978:	add	x1, x1, #0x1ec
     97c:	str	x8, [sp, #8]
     980:	bl	810 <fprintf@plt>
     984:	ldr	x8, [sp, #8]
     988:	ldr	x9, [x8]
     98c:	ldr	x10, [sp, #32]
     990:	ldr	x11, [x10]
     994:	ldr	w4, [x11]
     998:	ldr	x11, [x10]
     99c:	ldr	w5, [x11, #4]
     9a0:	mov	x0, x9
     9a4:	adrp	x1, 1000 <dl_load@@Base+0x70c>
     9a8:	add	x1, x1, #0x212
     9ac:	mov	w2, #0x2                   	// #2
     9b0:	mov	w12, wzr
     9b4:	mov	w3, w12
     9b8:	bl	810 <fprintf@plt>
     9bc:	mov	w12, #0x1                   	// #1
     9c0:	mov	w0, w12
     9c4:	bl	7b0 <exit@plt>
     9c8:	stur	xzr, [x29, #-24]
     9cc:	mov	x8, #0x1                   	// #1
     9d0:	stur	x8, [x29, #-32]
     9d4:	ldur	x8, [x29, #-24]
     9d8:	ldur	x9, [x29, #-32]
     9dc:	cmp	x8, x9
     9e0:	b.cs	a90 <dl_load@@Base+0x19c>  // b.hs, b.nlast
     9e4:	ldur	x8, [x29, #-24]
     9e8:	mov	x9, #0x30                  	// #48
     9ec:	mul	x8, x9, x8
     9f0:	ldr	x9, [sp, #16]
     9f4:	add	x8, x9, x8
     9f8:	ldr	x8, [x8]
     9fc:	cbnz	x8, a04 <dl_load@@Base+0x110>
     a00:	b	a90 <dl_load@@Base+0x19c>
     a04:	ldr	x8, [sp, #32]
     a08:	ldr	x9, [x8]
     a0c:	mov	x10, #0x30                  	// #48
     a10:	ldr	x9, [x9, #48]
     a14:	ldr	x11, [sp, #24]
     a18:	ldr	x0, [x11]
     a1c:	ldur	x12, [x29, #-24]
     a20:	mul	x10, x10, x12
     a24:	ldr	x12, [sp, #16]
     a28:	add	x2, x12, x10
     a2c:	adrp	x1, 1000 <dl_load@@Base+0x70c>
     a30:	add	x1, x1, #0x211
     a34:	blr	x9
     a38:	cbnz	w0, a80 <dl_load@@Base+0x18c>
     a3c:	ldr	x8, [sp, #32]
     a40:	ldr	x9, [x8]
     a44:	ldr	x9, [x9, #104]
     a48:	ldr	x10, [sp, #24]
     a4c:	ldr	x0, [x10]
     a50:	ldur	x11, [x29, #-24]
     a54:	mov	x12, #0x30                  	// #48
     a58:	mul	x11, x12, x11
     a5c:	ldr	x12, [sp, #16]
     a60:	add	x11, x12, x11
     a64:	ldr	x2, [x11]
     a68:	adrp	x1, 1000 <dl_load@@Base+0x70c>
     a6c:	add	x1, x1, #0x245
     a70:	blr	x9
     a74:	ldur	w13, [x29, #-36]
     a78:	add	w13, w13, #0x1
     a7c:	stur	w13, [x29, #-36]
     a80:	ldur	x8, [x29, #-24]
     a84:	add	x8, x8, #0x1
     a88:	stur	x8, [x29, #-24]
     a8c:	b	9d4 <dl_load@@Base+0xe0>
     a90:	adrp	x8, 12000 <dl_load@@Base+0x1170c>
     a94:	add	x8, x8, #0x80
     a98:	ldr	x8, [x8]
     a9c:	cbz	x8, ae0 <dl_load@@Base+0x1ec>
     aa0:	adrp	x8, 12000 <dl_load@@Base+0x1170c>
     aa4:	add	x8, x8, #0x80
     aa8:	ldr	x8, [x8]
     aac:	blr	x8
     ab0:	cbnz	w0, ae0 <dl_load@@Base+0x1ec>
     ab4:	ldr	x8, [sp, #32]
     ab8:	ldr	x9, [x8]
     abc:	ldr	x9, [x9, #104]
     ac0:	ldr	x10, [sp, #24]
     ac4:	ldr	x0, [x10]
     ac8:	adrp	x1, 1000 <dl_load@@Base+0x70c>
     acc:	add	x1, x1, #0x25f
     ad0:	blr	x9
     ad4:	ldur	w11, [x29, #-36]
     ad8:	add	w11, w11, #0x1
     adc:	stur	w11, [x29, #-36]
     ae0:	adrp	x8, 12000 <dl_load@@Base+0x1170c>
     ae4:	add	x8, x8, #0x88
     ae8:	ldr	x8, [x8]
     aec:	cbz	x8, b14 <dl_load@@Base+0x220>
     af0:	ldr	x8, [sp, #32]
     af4:	ldr	x9, [x8]
     af8:	ldr	x9, [x9, #88]
     afc:	ldr	x10, [sp, #24]
     b00:	ldr	x0, [x10]
     b04:	adrp	x11, 12000 <dl_load@@Base+0x1170c>
     b08:	add	x11, x11, #0x88
     b0c:	ldr	x1, [x11]
     b10:	blr	x9
     b14:	ldur	w8, [x29, #-36]
     b18:	cmp	w8, #0x0
     b1c:	cset	w8, eq  // eq = none
     b20:	and	w0, w8, #0x1
     b24:	ldp	x29, x30, [sp, #80]
     b28:	add	sp, sp, #0x60
     b2c:	ret
     b30:	sub	sp, sp, #0x100
     b34:	stp	x29, x30, [sp, #240]
     b38:	add	x29, sp, #0xf0
     b3c:	fmov	d0, #-1.000000000000000000e+00
     b40:	adrp	x8, 12000 <dl_load@@Base+0x1170c>
     b44:	add	x8, x8, #0x110
     b48:	adrp	x9, 12000 <dl_load@@Base+0x1170c>
     b4c:	add	x9, x9, #0x118
     b50:	mov	x10, xzr
     b54:	mov	w11, #0x2                   	// #2
     b58:	sub	x3, x29, #0x38
     b5c:	stur	w0, [x29, #-4]
     b60:	stur	x1, [x29, #-16]
     b64:	stur	x2, [x29, #-24]
     b68:	ldur	x0, [x29, #-16]
     b6c:	str	x8, [sp, #104]
     b70:	str	x9, [sp, #96]
     b74:	str	x10, [sp, #88]
     b78:	str	w11, [sp, #84]
     b7c:	str	x3, [sp, #72]
     b80:	bl	d38 <dl_load@@Base+0x444>
     b84:	ldr	x8, [sp, #104]
     b88:	ldr	x9, [x8]
     b8c:	ldr	x9, [x9, #152]
     b90:	ldr	x10, [sp, #96]
     b94:	ldr	x12, [x10]
     b98:	mov	x0, x12
     b9c:	ldr	x1, [sp, #88]
     ba0:	ldr	w2, [sp, #84]
     ba4:	ldr	x3, [sp, #72]
     ba8:	blr	x9
     bac:	cbnz	w0, bf8 <dl_load@@Base+0x304>
     bb0:	ldr	x8, [sp, #104]
     bb4:	ldr	x9, [x8]
     bb8:	ldr	x9, [x9, #104]
     bbc:	ldr	x10, [sp, #96]
     bc0:	ldr	x0, [x10]
     bc4:	adrp	x11, 1000 <dl_load@@Base+0x70c>
     bc8:	add	x11, x11, #0x28f
     bcc:	str	x0, [sp, #64]
     bd0:	mov	x0, x11
     bd4:	str	x9, [sp, #56]
     bd8:	bl	800 <gettext@plt>
     bdc:	ldr	x8, [sp, #64]
     be0:	str	x0, [sp, #48]
     be4:	mov	x0, x8
     be8:	ldr	x1, [sp, #48]
     bec:	ldr	x9, [sp, #56]
     bf0:	blr	x9
     bf4:	b	d28 <dl_load@@Base+0x434>
     bf8:	ldr	x8, [sp, #104]
     bfc:	ldr	x9, [x8]
     c00:	ldr	x9, [x9, #152]
     c04:	ldr	x10, [sp, #96]
     c08:	ldr	x0, [x10]
     c0c:	mov	x1, #0x1                   	// #1
     c10:	mov	w2, #0x2                   	// #2
     c14:	sub	x3, x29, #0x58
     c18:	blr	x9
     c1c:	cbnz	w0, c68 <dl_load@@Base+0x374>
     c20:	ldr	x8, [sp, #104]
     c24:	ldr	x9, [x8]
     c28:	ldr	x9, [x9, #104]
     c2c:	ldr	x10, [sp, #96]
     c30:	ldr	x0, [x10]
     c34:	adrp	x11, 1000 <dl_load@@Base+0x70c>
     c38:	add	x11, x11, #0x2b5
     c3c:	str	x0, [sp, #40]
     c40:	mov	x0, x11
     c44:	str	x9, [sp, #32]
     c48:	bl	800 <gettext@plt>
     c4c:	ldr	x8, [sp, #40]
     c50:	str	x0, [sp, #24]
     c54:	mov	x0, x8
     c58:	ldr	x1, [sp, #24]
     c5c:	ldr	x9, [sp, #32]
     c60:	blr	x9
     c64:	b	d28 <dl_load@@Base+0x434>
     c68:	ldr	x8, [sp, #104]
     c6c:	ldr	x9, [x8]
     c70:	ldr	x9, [x9, #152]
     c74:	ldr	x10, [sp, #96]
     c78:	ldr	x0, [x10]
     c7c:	mov	x1, #0x2                   	// #2
     c80:	mov	w2, #0x1                   	// #1
     c84:	add	x3, sp, #0x78
     c88:	blr	x9
     c8c:	cbnz	w0, cd8 <dl_load@@Base+0x3e4>
     c90:	ldr	x8, [sp, #104]
     c94:	ldr	x9, [x8]
     c98:	ldr	x9, [x9, #104]
     c9c:	ldr	x10, [sp, #96]
     ca0:	ldr	x0, [x10]
     ca4:	adrp	x11, 1000 <dl_load@@Base+0x70c>
     ca8:	add	x11, x11, #0x2dc
     cac:	str	x0, [sp, #16]
     cb0:	mov	x0, x11
     cb4:	str	x9, [sp, #8]
     cb8:	bl	800 <gettext@plt>
     cbc:	ldr	x8, [sp, #16]
     cc0:	str	x0, [sp]
     cc4:	mov	x0, x8
     cc8:	ldr	x1, [sp]
     ccc:	ldr	x9, [sp, #8]
     cd0:	blr	x9
     cd4:	b	d28 <dl_load@@Base+0x434>
     cd8:	ldr	d0, [sp, #128]
     cdc:	fcvtzs	w8, d0
     ce0:	str	w8, [sp, #116]
     ce4:	adrp	x9, 12000 <dl_load@@Base+0x1170c>
     ce8:	add	x9, x9, #0x90
     cec:	ldr	w8, [x9]
     cf0:	ldr	w10, [sp, #116]
     cf4:	and	w8, w10, w8
     cf8:	str	w8, [sp, #116]
     cfc:	sub	x9, x29, #0x38
     d00:	ldr	x0, [x9, #8]
     d04:	sub	x9, x29, #0x58
     d08:	ldr	x1, [x9, #8]
     d0c:	ldr	w2, [sp, #116]
     d10:	bl	7f0 <fnmatch@plt>
     d14:	str	w0, [sp, #112]
     d18:	ldr	w8, [sp, #112]
     d1c:	scvtf	d0, w8
     d20:	ldur	x0, [x29, #-16]
     d24:	bl	d38 <dl_load@@Base+0x444>
     d28:	ldur	x0, [x29, #-16]
     d2c:	ldp	x29, x30, [sp, #240]
     d30:	add	sp, sp, #0x100
     d34:	ret
     d38:	sub	sp, sp, #0x10
     d3c:	mov	w8, #0x1                   	// #1
     d40:	str	d0, [sp, #8]
     d44:	str	x0, [sp]
     d48:	ldr	x9, [sp]
     d4c:	str	w8, [x9]
     d50:	ldr	x9, [sp, #8]
     d54:	ldr	x10, [sp]
     d58:	str	x9, [x10, #8]
     d5c:	ldr	x9, [sp]
     d60:	str	wzr, [x9, #16]
     d64:	ldr	x0, [sp]
     d68:	add	sp, sp, #0x10
     d6c:	ret
     d70:	sub	sp, sp, #0x160
     d74:	stp	x29, x30, [sp, #320]
     d78:	str	x28, [sp, #336]
     d7c:	add	x29, sp, #0x140
     d80:	adrp	x8, 12000 <dl_load@@Base+0x1170c>
     d84:	add	x8, x8, #0x110
     d88:	adrp	x9, 12000 <dl_load@@Base+0x1170c>
     d8c:	add	x9, x9, #0x118
     d90:	fmov	d0, #1.000000000000000000e+00
     d94:	adrp	x1, 1000 <dl_load@@Base+0x70c>
     d98:	add	x1, x1, #0x211
     d9c:	adrp	x2, 1000 <dl_load@@Base+0x70c>
     da0:	add	x2, x2, #0x302
     da4:	adrp	x10, 12000 <dl_load@@Base+0x1170c>
     da8:	add	x10, x10, #0x98
     dac:	sub	x0, x29, #0x48
     db0:	stur	wzr, [x29, #-4]
     db4:	ldr	x11, [x8]
     db8:	ldr	x11, [x11, #176]
     dbc:	ldr	x12, [x9]
     dc0:	stur	x8, [x29, #-128]
     dc4:	stur	x9, [x29, #-136]
     dc8:	stur	x1, [x29, #-144]
     dcc:	stur	x2, [x29, #-152]
     dd0:	str	x10, [sp, #160]
     dd4:	str	x11, [sp, #152]
     dd8:	str	x12, [sp, #144]
     ddc:	bl	d38 <dl_load@@Base+0x444>
     de0:	ldr	x8, [sp, #144]
     de4:	str	x0, [sp, #136]
     de8:	mov	x0, x8
     dec:	ldur	x1, [x29, #-144]
     df0:	ldur	x2, [x29, #-152]
     df4:	ldr	x3, [sp, #136]
     df8:	ldr	x9, [sp, #152]
     dfc:	blr	x9
     e00:	cbnz	w0, e54 <dl_load@@Base+0x560>
     e04:	ldur	x8, [x29, #-128]
     e08:	ldr	x9, [x8]
     e0c:	ldr	x9, [x9, #104]
     e10:	ldur	x10, [x29, #-136]
     e14:	ldr	x0, [x10]
     e18:	adrp	x11, 1000 <dl_load@@Base+0x70c>
     e1c:	add	x11, x11, #0x30e
     e20:	str	x0, [sp, #128]
     e24:	mov	x0, x11
     e28:	str	x9, [sp, #120]
     e2c:	bl	800 <gettext@plt>
     e30:	ldr	x8, [sp, #128]
     e34:	str	x0, [sp, #112]
     e38:	mov	x0, x8
     e3c:	ldr	x1, [sp, #112]
     e40:	ldr	x9, [sp, #120]
     e44:	blr	x9
     e48:	ldur	w12, [x29, #-4]
     e4c:	add	w12, w12, #0x1
     e50:	stur	w12, [x29, #-4]
     e54:	ldur	x8, [x29, #-128]
     e58:	ldr	x9, [x8]
     e5c:	ldr	x9, [x9, #248]
     e60:	ldur	x10, [x29, #-136]
     e64:	ldr	x0, [x10]
     e68:	blr	x9
     e6c:	stur	x0, [x29, #-112]
     e70:	stur	wzr, [x29, #-116]
     e74:	ldursw	x8, [x29, #-116]
     e78:	mov	x9, #0x10                  	// #16
     e7c:	mul	x8, x9, x8
     e80:	ldr	x9, [sp, #160]
     e84:	add	x8, x9, x8
     e88:	ldr	x8, [x8]
     e8c:	cbz	x8, fdc <dl_load@@Base+0x6e8>
     e90:	ldur	x8, [x29, #-128]
     e94:	ldr	x0, [x8]
     e98:	ldur	x9, [x29, #-136]
     e9c:	ldr	x1, [x9]
     ea0:	ldursw	x10, [x29, #-116]
     ea4:	mov	x11, #0x10                  	// #16
     ea8:	mul	x10, x11, x10
     eac:	ldr	x12, [sp, #160]
     eb0:	add	x10, x12, x10
     eb4:	ldr	x2, [x10]
     eb8:	ldursw	x10, [x29, #-116]
     ebc:	mul	x10, x11, x10
     ec0:	add	x10, x12, x10
     ec4:	ldr	x10, [x10]
     ec8:	str	x0, [sp, #104]
     ecc:	mov	x0, x10
     ed0:	str	x1, [sp, #96]
     ed4:	str	x11, [sp, #88]
     ed8:	str	x2, [sp, #80]
     edc:	bl	7a0 <strlen@plt>
     ee0:	ldr	x8, [sp, #104]
     ee4:	str	x0, [sp, #72]
     ee8:	mov	x0, x8
     eec:	ldr	x1, [sp, #96]
     ef0:	ldr	x2, [sp, #80]
     ef4:	ldr	x3, [sp, #72]
     ef8:	mov	w4, #0x1                   	// #1
     efc:	sub	x9, x29, #0x28
     f00:	mov	x5, x9
     f04:	str	x9, [sp, #64]
     f08:	bl	1090 <dl_load@@Base+0x79c>
     f0c:	ldursw	x8, [x29, #-116]
     f10:	ldr	x9, [sp, #88]
     f14:	mul	x8, x9, x8
     f18:	ldr	x10, [sp, #160]
     f1c:	add	x8, x10, x8
     f20:	ldr	w13, [x8, #8]
     f24:	scvtf	d0, w13
     f28:	sub	x8, x29, #0x48
     f2c:	mov	x0, x8
     f30:	str	x8, [sp, #56]
     f34:	bl	d38 <dl_load@@Base+0x444>
     f38:	ldur	x8, [x29, #-128]
     f3c:	ldr	x9, [x8]
     f40:	ldr	x9, [x9, #232]
     f44:	ldur	x10, [x29, #-136]
     f48:	ldr	x11, [x10]
     f4c:	ldur	x1, [x29, #-112]
     f50:	mov	x0, x11
     f54:	ldr	x2, [sp, #64]
     f58:	ldr	x3, [sp, #56]
     f5c:	blr	x9
     f60:	cbnz	w0, fcc <dl_load@@Base+0x6d8>
     f64:	ldur	x8, [x29, #-128]
     f68:	ldr	x9, [x8]
     f6c:	ldr	x9, [x9, #104]
     f70:	ldur	x10, [x29, #-136]
     f74:	ldr	x0, [x10]
     f78:	adrp	x11, 1000 <dl_load@@Base+0x70c>
     f7c:	add	x11, x11, #0x33f
     f80:	str	x0, [sp, #48]
     f84:	mov	x0, x11
     f88:	str	x9, [sp, #40]
     f8c:	bl	800 <gettext@plt>
     f90:	ldursw	x8, [x29, #-116]
     f94:	mov	x9, #0x10                  	// #16
     f98:	mul	x8, x9, x8
     f9c:	ldr	x9, [sp, #160]
     fa0:	add	x8, x9, x8
     fa4:	ldr	x2, [x8]
     fa8:	ldr	x8, [sp, #48]
     fac:	str	x0, [sp, #32]
     fb0:	mov	x0, x8
     fb4:	ldr	x1, [sp, #32]
     fb8:	ldr	x10, [sp, #40]
     fbc:	blr	x10
     fc0:	ldur	w12, [x29, #-4]
     fc4:	add	w12, w12, #0x1
     fc8:	stur	w12, [x29, #-4]
     fcc:	ldur	w8, [x29, #-116]
     fd0:	add	w8, w8, #0x1
     fd4:	stur	w8, [x29, #-116]
     fd8:	b	e74 <dl_load@@Base+0x580>
     fdc:	sub	x8, x29, #0x68
     fe0:	mov	w9, #0x5                   	// #5
     fe4:	stur	w9, [x29, #-104]
     fe8:	ldur	x10, [x29, #-112]
     fec:	str	x10, [x8, #8]
     ff0:	ldur	x10, [x29, #-128]
     ff4:	ldr	x11, [x10]
     ff8:	ldr	x11, [x11, #176]
     ffc:	ldur	x12, [x29, #-136]
    1000:	ldr	x0, [x12]
    1004:	adrp	x1, 1000 <dl_load@@Base+0x70c>
    1008:	add	x1, x1, #0x211
    100c:	adrp	x2, 1000 <dl_load@@Base+0x70c>
    1010:	add	x2, x2, #0x36c
    1014:	mov	x3, x8
    1018:	blr	x11
    101c:	cbnz	w0, 1070 <dl_load@@Base+0x77c>
    1020:	ldur	x8, [x29, #-128]
    1024:	ldr	x9, [x8]
    1028:	ldr	x9, [x9, #104]
    102c:	ldur	x10, [x29, #-136]
    1030:	ldr	x0, [x10]
    1034:	adrp	x11, 1000 <dl_load@@Base+0x70c>
    1038:	add	x11, x11, #0x370
    103c:	str	x0, [sp, #24]
    1040:	mov	x0, x11
    1044:	str	x9, [sp, #16]
    1048:	bl	800 <gettext@plt>
    104c:	ldr	x8, [sp, #24]
    1050:	str	x0, [sp, #8]
    1054:	mov	x0, x8
    1058:	ldr	x1, [sp, #8]
    105c:	ldr	x9, [sp, #16]
    1060:	blr	x9
    1064:	ldur	w12, [x29, #-4]
    1068:	add	w12, w12, #0x1
    106c:	stur	w12, [x29, #-4]
    1070:	ldur	w8, [x29, #-4]
    1074:	cmp	w8, #0x0
    1078:	cset	w8, eq  // eq = none
    107c:	and	w0, w8, #0x1
    1080:	ldr	x28, [sp, #336]
    1084:	ldp	x29, x30, [sp, #320]
    1088:	add	sp, sp, #0x160
    108c:	ret
    1090:	sub	sp, sp, #0x40
    1094:	stp	x29, x30, [sp, #48]
    1098:	add	x29, sp, #0x30
    109c:	mov	w6, #0x2                   	// #2
    10a0:	stur	x0, [x29, #-8]
    10a4:	stur	x1, [x29, #-16]
    10a8:	str	x2, [sp, #24]
    10ac:	str	x3, [sp, #16]
    10b0:	str	w4, [sp, #12]
    10b4:	str	x5, [sp]
    10b8:	ldur	x0, [x29, #-8]
    10bc:	ldur	x1, [x29, #-16]
    10c0:	ldr	x2, [sp, #24]
    10c4:	ldr	x3, [sp, #16]
    10c8:	ldr	w4, [sp, #12]
    10cc:	ldr	x5, [sp]
    10d0:	bl	10e0 <dl_load@@Base+0x7ec>
    10d4:	ldp	x29, x30, [sp, #48]
    10d8:	add	sp, sp, #0x40
    10dc:	ret
    10e0:	sub	sp, sp, #0x50
    10e4:	stp	x29, x30, [sp, #64]
    10e8:	add	x29, sp, #0x40
    10ec:	mov	x8, xzr
    10f0:	mov	x9, #0x20                  	// #32
    10f4:	mov	w10, wzr
    10f8:	stur	x0, [x29, #-8]
    10fc:	stur	x1, [x29, #-16]
    1100:	stur	x2, [x29, #-24]
    1104:	str	x3, [sp, #32]
    1108:	str	w4, [sp, #28]
    110c:	str	x5, [sp, #16]
    1110:	str	w6, [sp, #12]
    1114:	str	x8, [sp]
    1118:	ldr	x0, [sp, #16]
    111c:	mov	w1, w10
    1120:	mov	x2, x9
    1124:	bl	7d0 <memset@plt>
    1128:	ldr	w10, [sp, #12]
    112c:	ldr	x8, [sp, #16]
    1130:	str	w10, [x8]
    1134:	ldr	x8, [sp, #32]
    1138:	ldr	x9, [sp, #16]
    113c:	str	x8, [x9, #16]
    1140:	ldr	w10, [sp, #28]
    1144:	cbz	w10, 11c0 <dl_load@@Base+0x8cc>
    1148:	ldur	x8, [x29, #-8]
    114c:	ldr	x8, [x8, #280]
    1150:	ldr	x9, [sp, #32]
    1154:	add	x0, x9, #0x1
    1158:	blr	x8
    115c:	str	x0, [sp]
    1160:	cbnz	x0, 118c <dl_load@@Base+0x898>
    1164:	ldur	x8, [x29, #-8]
    1168:	ldr	x8, [x8, #96]
    116c:	ldur	x0, [x29, #-16]
    1170:	ldr	x9, [sp, #32]
    1174:	add	x3, x9, #0x1
    1178:	adrp	x1, 1000 <dl_load@@Base+0x70c>
    117c:	add	x1, x1, #0x3d2
    1180:	adrp	x2, 1000 <dl_load@@Base+0x70c>
    1184:	add	x2, x2, #0x3f0
    1188:	blr	x8
    118c:	ldr	x0, [sp]
    1190:	ldur	x1, [x29, #-24]
    1194:	ldr	x2, [sp, #32]
    1198:	bl	790 <memcpy@plt>
    119c:	ldr	x8, [sp]
    11a0:	ldr	x9, [sp, #32]
    11a4:	add	x8, x8, x9
    11a8:	mov	w10, #0x0                   	// #0
    11ac:	strb	w10, [x8]
    11b0:	ldr	x8, [sp]
    11b4:	ldr	x9, [sp, #16]
    11b8:	str	x8, [x9, #8]
    11bc:	b	11cc <dl_load@@Base+0x8d8>
    11c0:	ldur	x8, [x29, #-24]
    11c4:	ldr	x9, [sp, #16]
    11c8:	str	x8, [x9, #8]
    11cc:	ldr	x0, [sp, #16]
    11d0:	ldp	x29, x30, [sp, #64]
    11d4:	add	sp, sp, #0x50
    11d8:	ret

Disassembly of section .fini:

00000000000011dc <.fini>:
    11dc:	stp	x29, x30, [sp, #-16]!
    11e0:	mov	x29, sp
    11e4:	ldp	x29, x30, [sp], #16
    11e8:	ret
