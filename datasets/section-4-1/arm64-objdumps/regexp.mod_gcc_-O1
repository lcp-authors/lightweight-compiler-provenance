
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//regexp.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x2b0>:
       0:	stp	x29, x30, [sp, #-176]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	cmp	w1, #0x2
      10:	b.eq	38 <grub_mod_init-0x278>  // b.none
      14:	adrp	x0, 0 <grub_mod_init-0x2b0>
      18:	ldr	x1, [x0]
      1c:	mov	w0, #0x12                  	// #18
      20:	bl	0 <grub_error>
      24:	mov	w19, w0
      28:	mov	w0, w19
      2c:	ldp	x19, x20, [sp, #16]
      30:	ldp	x29, x30, [sp], #176
      34:	ret
      38:	stp	x21, x22, [sp, #32]
      3c:	mov	x22, x0
      40:	mov	x19, x2
      44:	mov	w2, #0x1                   	// #1
      48:	ldr	x1, [x19]
      4c:	add	x0, sp, #0x70
      50:	bl	e5d8 <regcomp>
      54:	mov	w21, w0
      58:	mov	x20, #0x0                   	// #0
      5c:	cbz	w0, d0 <grub_mod_init-0x1e0>
      60:	mov	x0, x20
      64:	bl	0 <grub_free>
      68:	mov	x3, #0x0                   	// #0
      6c:	mov	x2, #0x0                   	// #0
      70:	add	x1, sp, #0x70
      74:	mov	w0, w21
      78:	bl	e6cc <regerror>
      7c:	mov	x19, x0
      80:	bl	0 <grub_malloc>
      84:	mov	x20, x0
      88:	cbz	x0, 274 <grub_mod_init-0x3c>
      8c:	mov	x3, x19
      90:	mov	x2, x0
      94:	add	x1, sp, #0x70
      98:	mov	w0, w21
      9c:	bl	e6cc <regerror>
      a0:	mov	x2, x20
      a4:	adrp	x0, 0 <grub_mod_init-0x2b0>
      a8:	ldr	x1, [x0]
      ac:	mov	w0, #0x1                   	// #1
      b0:	bl	0 <grub_error>
      b4:	mov	w19, w0
      b8:	add	x0, sp, #0x70
      bc:	bl	e768 <regfree>
      c0:	mov	x0, x20
      c4:	bl	0 <grub_free>
      c8:	ldp	x21, x22, [sp, #32]
      cc:	b	28 <grub_mod_init-0x288>
      d0:	ldr	x1, [sp, #160]
      d4:	add	x1, x1, #0x1
      d8:	lsl	x0, x1, #3
      dc:	bl	0 <grub_zalloc>
      e0:	mov	x20, x0
      e4:	cbz	x0, 60 <grub_mod_init-0x250>
      e8:	mov	w4, #0x0                   	// #0
      ec:	mov	x3, x0
      f0:	ldr	x2, [sp, #160]
      f4:	add	x2, x2, #0x1
      f8:	ldr	x1, [x19, #8]
      fc:	add	x0, sp, #0x70
     100:	bl	e7b0 <regexec>
     104:	mov	w21, w0
     108:	cbnz	w0, 60 <grub_mod_init-0x250>
     10c:	stp	x23, x24, [sp, #48]
     110:	ldr	x0, [x22, #8]
     114:	ldr	x21, [x0, #8]
     118:	ldr	x22, [x19, #8]
     11c:	ldr	x23, [sp, #160]
     120:	add	x23, x23, #0x1
     124:	cbz	x21, 26c <grub_mod_init-0x44>
     128:	stp	x25, x26, [sp, #64]
     12c:	str	x27, [sp, #80]
     130:	mov	w24, #0x3a                  	// #58
     134:	mov	w26, #0xa                   	// #10
     138:	b	1b8 <grub_mod_init-0xf8>
     13c:	cmp	x23, #0x1
     140:	b.ls	150 <grub_mod_init-0x160>  // b.plast
     144:	ldr	w0, [x20, #8]
     148:	cmn	w0, #0x1
     14c:	b.ne	15c <grub_mod_init-0x154>  // b.any
     150:	ldr	x0, [x25]
     154:	bl	0 <grub_env_unset>
     158:	b	1b4 <grub_mod_init-0xfc>
     15c:	ldr	x0, [x25]
     160:	ldrsw	x1, [x20, #12]
     164:	ldrb	w25, [x22, x1]
     168:	strb	wzr, [x22, x1]
     16c:	ldrsw	x1, [x20, #8]
     170:	add	x1, x22, x1
     174:	bl	0 <grub_env_set>
     178:	mov	w19, w0
     17c:	ldrsw	x0, [x20, #12]
     180:	strb	w25, [x22, x0]
     184:	b	234 <grub_mod_init-0x7c>
     188:	ldr	x2, [x25]
     18c:	adrp	x0, 0 <grub_mod_init-0x2b0>
     190:	ldr	x1, [x0]
     194:	mov	w0, #0x12                  	// #18
     198:	bl	0 <grub_error>
     19c:	mov	w19, w0
     1a0:	ldp	x25, x26, [sp, #64]
     1a4:	ldr	x27, [sp, #80]
     1a8:	b	250 <grub_mod_init-0x60>
     1ac:	add	x0, x19, #0x1
     1b0:	bl	0 <grub_env_unset>
     1b4:	add	x21, x21, #0x8
     1b8:	mov	x25, x21
     1bc:	ldr	x0, [x21]
     1c0:	cbz	x0, 244 <grub_mod_init-0x6c>
     1c4:	mov	w1, w24
     1c8:	bl	0 <grub_strchr>
     1cc:	mov	x19, x0
     1d0:	cbz	x0, 13c <grub_mod_init-0x174>
     1d4:	mov	w2, w26
     1d8:	add	x1, sp, #0x68
     1dc:	ldr	x0, [x25]
     1e0:	bl	0 <grub_strtoul>
     1e4:	ldr	x1, [sp, #104]
     1e8:	cmp	x19, x1
     1ec:	b.ne	188 <grub_mod_init-0x128>  // b.any
     1f0:	cmp	x23, x0
     1f4:	b.ls	1ac <grub_mod_init-0x104>  // b.plast
     1f8:	lsl	x0, x0, #3
     1fc:	add	x25, x20, x0
     200:	ldr	w1, [x20, x0]
     204:	cmn	w1, #0x1
     208:	b.eq	1ac <grub_mod_init-0x104>  // b.none
     20c:	ldrsw	x1, [x25, #4]
     210:	ldrb	w27, [x22, x1]
     214:	strb	wzr, [x22, x1]
     218:	ldrsw	x1, [x20, x0]
     21c:	add	x1, x22, x1
     220:	add	x0, x19, #0x1
     224:	bl	0 <grub_env_set>
     228:	mov	w19, w0
     22c:	ldrsw	x0, [x25, #4]
     230:	strb	w27, [x22, x0]
     234:	cbz	w19, 1b4 <grub_mod_init-0xfc>
     238:	ldp	x25, x26, [sp, #64]
     23c:	ldr	x27, [sp, #80]
     240:	b	250 <grub_mod_init-0x60>
     244:	mov	w19, #0x0                   	// #0
     248:	ldp	x25, x26, [sp, #64]
     24c:	ldr	x27, [sp, #80]
     250:	add	x0, sp, #0x70
     254:	bl	e768 <regfree>
     258:	mov	x0, x20
     25c:	bl	0 <grub_free>
     260:	ldp	x21, x22, [sp, #32]
     264:	ldp	x23, x24, [sp, #48]
     268:	b	28 <grub_mod_init-0x288>
     26c:	mov	w19, #0x0                   	// #0
     270:	b	250 <grub_mod_init-0x60>
     274:	add	x0, sp, #0x70
     278:	bl	e768 <regfree>
     27c:	adrp	x0, 0 <grub_mod_init-0x2b0>
     280:	ldr	x0, [x0]
     284:	ldr	w19, [x0]
     288:	ldp	x21, x22, [sp, #32]
     28c:	b	28 <grub_mod_init-0x288>
	...

00000000000002b0 <grub_mod_init>:
     2b0:	stp	x29, x30, [sp, #-16]!
     2b4:	mov	x29, sp
     2b8:	adrp	x0, 0 <grub_mod_init-0x2b0>
     2bc:	ldr	x5, [x0]
     2c0:	adrp	x0, 0 <grub_mod_init-0x2b0>
     2c4:	ldr	x4, [x0]
     2c8:	adrp	x0, 0 <grub_mod_init-0x2b0>
     2cc:	ldr	x3, [x0]
     2d0:	mov	w2, #0x0                   	// #0
     2d4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     2d8:	ldr	x1, [x0]
     2dc:	adrp	x0, 0 <grub_mod_init-0x2b0>
     2e0:	ldr	x0, [x0]
     2e4:	bl	0 <grub_register_extcmd>
     2e8:	adrp	x1, 0 <grub_mod_init-0x2b0>
     2ec:	ldr	x1, [x1]
     2f0:	str	x0, [x1]
     2f4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     2f8:	ldr	x0, [x0]
     2fc:	adrp	x1, 0 <grub_mod_init-0x2b0>
     300:	ldr	x1, [x1]
     304:	str	x1, [x0]
     308:	ldp	x29, x30, [sp], #16
     30c:	ret
	...

0000000000000350 <grub_mod_fini>:
     350:	stp	x29, x30, [sp, #-16]!
     354:	mov	x29, sp
     358:	adrp	x0, 0 <grub_mod_init-0x2b0>
     35c:	ldr	x0, [x0]
     360:	ldr	x0, [x0]
     364:	bl	0 <grub_unregister_extcmd>
     368:	adrp	x0, 0 <grub_mod_init-0x2b0>
     36c:	ldr	x0, [x0]
     370:	str	xzr, [x0]
     374:	ldp	x29, x30, [sp], #16
     378:	ret
     37c:	nop
	...
     390:	cmp	x1, x2
     394:	b.cs	3e8 <grub_mod_fini+0x98>  // b.hs, b.nlast
     398:	mov	x3, x0
     39c:	b	3cc <grub_mod_fini+0x7c>
     3a0:	add	x5, x3, #0x1
     3a4:	ldrb	w4, [x1, #1]
     3a8:	strb	w4, [x3]
     3ac:	add	x1, x1, #0x2
     3b0:	b	3c0 <grub_mod_fini+0x70>
     3b4:	add	x1, x1, #0x1
     3b8:	mov	x5, x3
     3bc:	strb	w4, [x5], #1
     3c0:	add	x3, x3, #0x1
     3c4:	cmp	x1, x2
     3c8:	b.cs	3f0 <grub_mod_fini+0xa0>  // b.hs, b.nlast
     3cc:	mov	x0, x3
     3d0:	ldrb	w4, [x1]
     3d4:	cmp	w4, #0x5c
     3d8:	b.ne	3b4 <grub_mod_fini+0x64>  // b.any
     3dc:	add	x4, x1, #0x1
     3e0:	cmp	x2, x4
     3e4:	b.hi	3a0 <grub_mod_fini+0x50>  // b.pmore
     3e8:	strb	wzr, [x0]
     3ec:	ret
     3f0:	mov	x0, x5
     3f4:	b	3e8 <grub_mod_fini+0x98>
     3f8:	stp	x29, x30, [sp, #-32]!
     3fc:	mov	x29, sp
     400:	str	x19, [sp, #16]
     404:	mov	x3, x1
     408:	mov	x19, x2
     40c:	ldr	x1, [x2]
     410:	ldrb	w4, [x1]
     414:	cbz	w4, 49c <grub_mod_fini+0x14c>
     418:	ldrb	w2, [x3]
     41c:	tbz	w2, #2, 48c <grub_mod_fini+0x13c>
     420:	ldrb	w3, [x0]
     424:	cbz	w3, 4b0 <grub_mod_fini+0x160>
     428:	mov	w7, w3
     42c:	sub	w5, w3, #0x41
     430:	add	w2, w3, #0x20
     434:	cmp	w5, #0x1a
     438:	csel	w3, w2, w3, cc  // cc = lo, ul, last
     43c:	sub	w6, w4, #0x41
     440:	add	w2, w4, #0x20
     444:	cmp	w6, #0x1a
     448:	csel	w4, w2, w4, cc  // cc = lo, ul, last
     44c:	cmp	w4, w3
     450:	b.ne	480 <grub_mod_fini+0x130>  // b.any
     454:	add	x1, x1, #0x1
     458:	ldrb	w3, [x0, #1]!
     45c:	cbz	w3, 4b0 <grub_mod_fini+0x160>
     460:	ldrb	w4, [x1]
     464:	cbnz	w4, 428 <grub_mod_fini+0xd8>
     468:	mov	w7, w3
     46c:	sub	w3, w3, #0x41
     470:	cmp	w3, #0x19
     474:	b.hi	4d8 <grub_mod_fini+0x188>  // b.pmore
     478:	add	w7, w7, #0x20
     47c:	b	4b4 <grub_mod_fini+0x164>
     480:	cmp	w5, #0x19
     484:	b.ls	478 <grub_mod_fini+0x128>  // b.plast
     488:	b	4b4 <grub_mod_fini+0x164>
     48c:	bl	0 <grub_strcmp>
     490:	mov	w1, w0
     494:	mov	w0, #0x0                   	// #0
     498:	cbnz	w1, 4a4 <grub_mod_fini+0x154>
     49c:	mov	w0, #0x1                   	// #1
     4a0:	str	w0, [x19, #8]
     4a4:	ldr	x19, [sp, #16]
     4a8:	ldp	x29, x30, [sp], #32
     4ac:	ret
     4b0:	mov	w7, #0x0                   	// #0
     4b4:	ldrb	w0, [x1]
     4b8:	sub	w2, w0, #0x41
     4bc:	add	w1, w0, #0x20
     4c0:	cmp	w2, #0x1a
     4c4:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     4c8:	cmp	w0, w7
     4cc:	b.eq	49c <grub_mod_fini+0x14c>  // b.none
     4d0:	mov	w0, #0x0                   	// #0
     4d4:	b	4a4 <grub_mod_fini+0x154>
     4d8:	ldrb	w0, [x1]
     4dc:	b	4c8 <grub_mod_fini+0x178>
     4e0:	stp	x29, x30, [sp, #-48]!
     4e4:	mov	x29, sp
     4e8:	stp	x19, x20, [sp, #16]
     4ec:	str	x21, [sp, #32]
     4f0:	mov	x21, x0
     4f4:	mov	x19, x1
     4f8:	ldr	w0, [x1, #8]
     4fc:	cbz	w0, 514 <grub_mod_fini+0x1c4>
     500:	mov	w1, #0x2c                  	// #44
     504:	mov	x0, x21
     508:	bl	0 <grub_strchr>
     50c:	mov	w20, #0x0                   	// #0
     510:	cbnz	x0, 5b0 <grub_mod_fini+0x260>
     514:	mov	x1, x21
     518:	adrp	x0, 0 <grub_mod_init-0x2b0>
     51c:	ldr	x0, [x0]
     520:	bl	0 <grub_xasprintf>
     524:	mov	x21, x0
     528:	mov	w20, #0x1                   	// #1
     52c:	cbz	x0, 5b0 <grub_mod_fini+0x260>
     530:	mov	x4, x0
     534:	adrp	x0, 0 <grub_mod_init-0x2b0>
     538:	ldr	x3, [x0]
     53c:	adrp	x0, 0 <grub_mod_init-0x2b0>
     540:	ldr	x2, [x0]
     544:	mov	w1, #0xee                  	// #238
     548:	adrp	x0, 0 <grub_mod_init-0x2b0>
     54c:	ldr	x0, [x0]
     550:	bl	0 <grub_real_dprintf>
     554:	mov	w4, #0x0                   	// #0
     558:	mov	x3, #0x0                   	// #0
     55c:	mov	x2, #0x0                   	// #0
     560:	mov	x1, x21
     564:	ldr	x0, [x19]
     568:	bl	e7b0 <regexec>
     56c:	mov	w20, w0
     570:	cbnz	w0, 5c4 <grub_mod_fini+0x274>
     574:	ldr	w1, [x19, #12]
     578:	add	w1, w1, #0x2
     57c:	sbfiz	x1, x1, #3, #32
     580:	ldr	x0, [x19, #16]
     584:	bl	0 <grub_realloc>
     588:	mov	x1, x0
     58c:	cbz	x0, 5f4 <grub_mod_fini+0x2a4>
     590:	str	x0, [x19, #16]
     594:	ldr	w0, [x19, #12]
     598:	add	w2, w0, #0x1
     59c:	str	w2, [x19, #12]
     5a0:	str	x21, [x1, w0, sxtw #3]
     5a4:	ldrsw	x1, [x19, #12]
     5a8:	ldr	x0, [x19, #16]
     5ac:	str	xzr, [x0, x1, lsl #3]
     5b0:	mov	w0, w20
     5b4:	ldp	x19, x20, [sp, #16]
     5b8:	ldr	x21, [sp, #32]
     5bc:	ldp	x29, x30, [sp], #48
     5c0:	ret
     5c4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     5c8:	ldr	x3, [x0]
     5cc:	adrp	x0, 0 <grub_mod_init-0x2b0>
     5d0:	ldr	x2, [x0]
     5d4:	mov	w1, #0xf1                  	// #241
     5d8:	adrp	x0, 0 <grub_mod_init-0x2b0>
     5dc:	ldr	x0, [x0]
     5e0:	bl	0 <grub_real_dprintf>
     5e4:	mov	x0, x21
     5e8:	bl	0 <grub_free>
     5ec:	mov	w20, #0x0                   	// #0
     5f0:	b	5b0 <grub_mod_fini+0x260>
     5f4:	mov	x0, x21
     5f8:	bl	0 <grub_free>
     5fc:	mov	w20, #0x1                   	// #1
     600:	b	5b0 <grub_mod_fini+0x260>
     604:	nop
	...
     630:	stp	x29, x30, [sp, #-48]!
     634:	mov	x29, sp
     638:	stp	x19, x20, [sp, #16]
     63c:	str	x21, [sp, #32]
     640:	mov	x20, x0
     644:	mov	x21, x2
     648:	mov	x1, x0
     64c:	adrp	x3, 0 <grub_mod_init-0x2b0>
     650:	ldr	x0, [x3]
     654:	bl	0 <grub_strcmp>
     658:	mov	w19, w0
     65c:	cbnz	w0, 674 <grub_mod_fini+0x324>
     660:	mov	w0, w19
     664:	ldp	x19, x20, [sp, #16]
     668:	ldr	x21, [sp, #32]
     66c:	ldp	x29, x30, [sp], #48
     670:	ret
     674:	mov	x1, x20
     678:	adrp	x0, 0 <grub_mod_init-0x2b0>
     67c:	ldr	x0, [x0]
     680:	bl	0 <grub_strcmp>
     684:	mov	w19, w0
     688:	cbz	w0, 660 <grub_mod_fini+0x310>
     68c:	ldr	x5, [x21, #24]
     690:	mov	x4, x20
     694:	adrp	x0, 0 <grub_mod_init-0x2b0>
     698:	ldr	x3, [x0]
     69c:	adrp	x0, 0 <grub_mod_init-0x2b0>
     6a0:	ldr	x2, [x0]
     6a4:	mov	w1, #0x134                 	// #308
     6a8:	adrp	x0, 0 <grub_mod_init-0x2b0>
     6ac:	ldr	x0, [x0]
     6b0:	bl	0 <grub_real_dprintf>
     6b4:	mov	w4, #0x0                   	// #0
     6b8:	mov	x3, #0x0                   	// #0
     6bc:	mov	x2, #0x0                   	// #0
     6c0:	mov	x1, x20
     6c4:	ldr	x0, [x21]
     6c8:	bl	e7b0 <regexec>
     6cc:	mov	w19, w0
     6d0:	cbz	w0, 6dc <grub_mod_fini+0x38c>
     6d4:	mov	w19, #0x0                   	// #0
     6d8:	b	660 <grub_mod_fini+0x310>
     6dc:	adrp	x0, 0 <grub_mod_init-0x2b0>
     6e0:	ldr	x3, [x0]
     6e4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     6e8:	ldr	x2, [x0]
     6ec:	mov	w1, #0x138                 	// #312
     6f0:	adrp	x0, 0 <grub_mod_init-0x2b0>
     6f4:	ldr	x0, [x0]
     6f8:	bl	0 <grub_real_dprintf>
     6fc:	mov	x2, x20
     700:	ldr	x1, [x21, #24]
     704:	adrp	x0, 0 <grub_mod_init-0x2b0>
     708:	ldr	x0, [x0]
     70c:	bl	0 <grub_xasprintf>
     710:	mov	x20, x0
     714:	cbz	x0, 764 <grub_mod_fini+0x414>
     718:	ldr	w1, [x21, #16]
     71c:	add	w1, w1, #0x2
     720:	lsl	x1, x1, #3
     724:	ldr	x0, [x21, #8]
     728:	bl	0 <grub_realloc>
     72c:	cbz	x0, 754 <grub_mod_fini+0x404>
     730:	str	x0, [x21, #8]
     734:	ldr	w1, [x21, #16]
     738:	add	w2, w1, #0x1
     73c:	str	w2, [x21, #16]
     740:	str	x20, [x0, w1, uxtw #3]
     744:	ldr	w1, [x21, #16]
     748:	ldr	x0, [x21, #8]
     74c:	str	xzr, [x0, x1, lsl #3]
     750:	b	660 <grub_mod_fini+0x310>
     754:	mov	x0, x20
     758:	bl	0 <grub_free>
     75c:	mov	w19, #0x1                   	// #1
     760:	b	660 <grub_mod_fini+0x310>
     764:	mov	w19, #0x1                   	// #1
     768:	b	660 <grub_mod_fini+0x310>
     76c:	nop
	...
     7a8:	stp	x29, x30, [sp, #-112]!
     7ac:	mov	x29, sp
     7b0:	stp	x19, x20, [sp, #16]
     7b4:	stp	x21, x22, [sp, #32]
     7b8:	stp	x23, x24, [sp, #48]
     7bc:	mov	x21, x0
     7c0:	mov	x20, x1
     7c4:	mov	x24, x2
     7c8:	stp	xzr, xzr, [sp, #88]
     7cc:	str	xzr, [sp, #104]
     7d0:	str	x3, [sp, #80]
     7d4:	bl	0 <grub_error_push>
     7d8:	mov	x0, x21
     7dc:	bl	0 <grub_strlen>
     7e0:	mov	w19, w0
     7e4:	add	x1, x24, w0, uxtw
     7e8:	sub	x1, x1, x20
     7ec:	add	w0, w1, #0x1
     7f0:	bl	0 <grub_malloc>
     7f4:	mov	x23, x0
     7f8:	cbz	x0, 940 <grub_mod_fini+0x5f0>
     7fc:	str	x25, [sp, #64]
     800:	mov	x1, x21
     804:	bl	0 <grub_strcpy>
     808:	adrp	x25, 0 <grub_mod_init-0x2b0>
     80c:	cmp	x20, x24
     810:	b.cc	830 <grub_mod_fini+0x4e0>  // b.lo, b.ul, b.last
     814:	b	86c <grub_mod_fini+0x51c>
     818:	add	w0, w19, #0x1
     81c:	strb	w21, [x23, w19, uxtw]
     820:	mov	x20, x22
     824:	add	w19, w19, #0x1
     828:	cmp	x24, x20
     82c:	b.ls	868 <grub_mod_fini+0x518>  // b.plast
     830:	mov	x22, x20
     834:	ldrb	w21, [x22], #1
     838:	cbz	w21, 86c <grub_mod_fini+0x51c>
     83c:	cmp	w21, #0x5c
     840:	b.ne	818 <grub_mod_fini+0x4c8>  // b.any
     844:	ldrb	w1, [x20, #1]
     848:	ldr	x0, [x25]
     84c:	bl	0 <grub_strchr>
     850:	cbz	x0, 818 <grub_mod_fini+0x4c8>
     854:	add	w0, w19, #0x1
     858:	ldrb	w1, [x20, #1]
     85c:	strb	w1, [x23, w19, uxtw]
     860:	add	x20, x20, #0x2
     864:	b	824 <grub_mod_fini+0x4d4>
     868:	mov	w19, w0
     86c:	strb	wzr, [x23, w19, uxtw]
     870:	str	x23, [sp, #104]
     874:	mov	x0, x23
     878:	bl	0 <grub_file_get_device_name>
     87c:	mov	x23, x0
     880:	bl	0 <grub_device_open>
     884:	mov	x20, x0
     888:	cbz	x0, 938 <grub_mod_fini+0x5e8>
     88c:	bl	0 <grub_fs_probe>
     890:	mov	x19, x0
     894:	cbz	x0, 914 <grub_mod_fini+0x5c4>
     898:	ldr	x0, [sp, #104]
     89c:	ldrb	w1, [x0]
     8a0:	cmp	w1, #0x28
     8a4:	b.eq	8f0 <grub_mod_fini+0x5a0>  // b.none
     8a8:	ldr	x4, [x19, #24]
     8ac:	add	x3, sp, #0x50
     8b0:	adrp	x1, 0 <grub_mod_init-0x2b0>
     8b4:	ldr	x2, [x1]
     8b8:	mov	x1, x0
     8bc:	mov	x0, x20
     8c0:	blr	x4
     8c4:	cbnz	w0, 914 <grub_mod_fini+0x5c4>
     8c8:	ldr	x0, [sp, #104]
     8cc:	bl	0 <grub_free>
     8d0:	mov	x0, x20
     8d4:	bl	0 <grub_device_close>
     8d8:	mov	x0, x23
     8dc:	bl	0 <grub_free>
     8e0:	bl	0 <grub_error_pop>
     8e4:	ldr	x0, [sp, #88]
     8e8:	ldr	x25, [sp, #64]
     8ec:	b	998 <grub_mod_fini+0x648>
     8f0:	mov	w1, #0x29                  	// #41
     8f4:	bl	0 <grub_strchr>
     8f8:	cbz	x0, 914 <grub_mod_fini+0x5c4>
     8fc:	add	x0, x0, #0x1
     900:	b	8a8 <grub_mod_fini+0x558>
     904:	mov	x0, #0x0                   	// #0
     908:	bl	0 <grub_free>
     90c:	ldr	x25, [sp, #64]
     910:	b	980 <grub_mod_fini+0x630>
     914:	ldr	x0, [sp, #104]
     918:	bl	0 <grub_free>
     91c:	ldr	x1, [sp, #88]
     920:	cbz	x1, 904 <grub_mod_fini+0x5b4>
     924:	ldr	x25, [sp, #64]
     928:	b	958 <grub_mod_fini+0x608>
     92c:	mov	x0, #0x0                   	// #0
     930:	bl	0 <grub_free>
     934:	b	988 <grub_mod_fini+0x638>
     938:	ldr	x25, [sp, #64]
     93c:	b	944 <grub_mod_fini+0x5f4>
     940:	str	xzr, [sp, #104]
     944:	ldr	x0, [sp, #104]
     948:	bl	0 <grub_free>
     94c:	ldr	x1, [sp, #88]
     950:	mov	x20, #0x0                   	// #0
     954:	cbz	x1, 92c <grub_mod_fini+0x5dc>
     958:	mov	x19, #0x0                   	// #0
     95c:	ldr	x0, [x1, x19]
     960:	cbz	x0, 974 <grub_mod_fini+0x624>
     964:	bl	0 <grub_free>
     968:	ldr	x1, [sp, #88]
     96c:	add	x19, x19, #0x8
     970:	cbnz	x1, 95c <grub_mod_fini+0x60c>
     974:	mov	x0, x1
     978:	bl	0 <grub_free>
     97c:	cbz	x20, 988 <grub_mod_fini+0x638>
     980:	mov	x0, x20
     984:	bl	0 <grub_device_close>
     988:	mov	x0, x23
     98c:	bl	0 <grub_free>
     990:	bl	0 <grub_error_pop>
     994:	mov	x0, #0x0                   	// #0
     998:	ldp	x19, x20, [sp, #16]
     99c:	ldp	x21, x22, [sp, #32]
     9a0:	ldp	x23, x24, [sp, #48]
     9a4:	ldp	x29, x30, [sp], #112
     9a8:	ret
     9ac:	nop
	...
     9c0:	stp	x29, x30, [sp, #-240]!
     9c4:	mov	x29, sp
     9c8:	stp	x21, x22, [sp, #32]
     9cc:	mov	x21, x0
     9d0:	str	x1, [sp, #128]
     9d4:	str	xzr, [x1]
     9d8:	ldrb	w1, [x0]
     9dc:	and	w0, w1, #0xfffffffd
     9e0:	and	w0, w0, #0xff
     9e4:	cmp	w0, #0x28
     9e8:	mov	w0, #0x2f                  	// #47
     9ec:	ccmp	w1, w0, #0x4, ne  // ne = any
     9f0:	mov	w0, #0x0                   	// #0
     9f4:	b.ne	10b8 <grub_mod_fini+0xd68>  // b.any
     9f8:	stp	x19, x20, [sp, #16]
     9fc:	mov	x19, #0x0                   	// #0
     a00:	cbz	w1, cec <grub_mod_fini+0x99c>
     a04:	stp	x25, x26, [sp, #64]
     a08:	stp	x27, x28, [sp, #80]
     a0c:	mov	w28, #0x0                   	// #0
     a10:	mov	x19, #0x0                   	// #0
     a14:	mov	x25, #0x2                   	// #2
     a18:	movk	x25, #0x5000, lsl #16
     a1c:	movk	x25, #0x7000, lsl #48
     a20:	b	e88 <grub_mod_fini+0xb38>
     a24:	ldrb	w3, [x1, #1]
     a28:	cbz	w3, 10dc <grub_mod_fini+0xd8c>
     a2c:	add	x1, x1, #0x1
     a30:	b	a50 <grub_mod_fini+0x700>
     a34:	cmp	w0, #0x2f
     a38:	cset	w0, eq  // eq = none
     a3c:	cmp	w2, #0x0
     a40:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     a44:	b.eq	10e4 <grub_mod_fini+0xd94>  // b.none
     a48:	add	x27, x1, #0x1
     a4c:	mov	w2, w6
     a50:	add	x20, x1, #0x1
     a54:	ldrb	w0, [x1, #1]
     a58:	cbz	w0, a7c <grub_mod_fini+0x72c>
     a5c:	mov	x1, x20
     a60:	cmp	w0, #0x5c
     a64:	b.eq	a24 <grub_mod_fini+0x6d4>  // b.none
     a68:	cmp	w0, #0x2a
     a6c:	ccmp	w0, w5, #0x4, ne  // ne = any
     a70:	b.ne	a34 <grub_mod_fini+0x6e4>  // b.any
     a74:	mov	w2, w4
     a78:	b	a50 <grub_mod_fini+0x700>
     a7c:	cbnz	w2, 10f4 <grub_mod_fini+0xda4>
     a80:	ldp	x23, x24, [sp, #48]
     a84:	adrp	x0, 0 <grub_mod_init-0x2b0>
     a88:	ldr	x3, [x0]
     a8c:	adrp	x0, 0 <grub_mod_init-0x2b0>
     a90:	ldr	x2, [x0]
     a94:	mov	w1, #0x1fd                 	// #509
     a98:	adrp	x0, 0 <grub_mod_init-0x2b0>
     a9c:	ldr	x0, [x0]
     aa0:	bl	0 <grub_real_dprintf>
     aa4:	cbnz	x19, b14 <grub_mod_fini+0x7c4>
     aa8:	mov	x0, #0x10                  	// #16
     aac:	bl	0 <grub_malloc>
     ab0:	mov	x19, x0
     ab4:	cbz	x0, 1090 <grub_mod_fini+0xd40>
     ab8:	sub	x0, x20, x21
     abc:	add	x0, x0, #0x1
     ac0:	bl	0 <grub_malloc>
     ac4:	str	x0, [x19]
     ac8:	cbz	x0, f84 <grub_mod_fini+0xc34>
     acc:	mov	x2, x20
     ad0:	mov	x1, x21
     ad4:	bl	390 <grub_mod_fini+0x40>
     ad8:	str	xzr, [x19, #8]
     adc:	ldr	x4, [x19]
     ae0:	adrp	x0, 0 <grub_mod_init-0x2b0>
     ae4:	ldr	x3, [x0]
     ae8:	adrp	x0, 0 <grub_mod_init-0x2b0>
     aec:	ldr	x2, [x0]
     af0:	mov	w1, #0x238                 	// #568
     af4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     af8:	ldr	x0, [x0]
     afc:	bl	0 <grub_real_dprintf>
     b00:	mov	x21, x20
     b04:	b	e80 <grub_mod_fini+0xb30>
     b08:	mov	x20, x27
     b0c:	ldp	x23, x24, [sp, #48]
     b10:	b	a84 <grub_mod_fini+0x734>
     b14:	stp	x23, x24, [sp, #48]
     b18:	ldr	x24, [x19]
     b1c:	cbz	x24, cd4 <grub_mod_fini+0x984>
     b20:	mov	w27, #0x0                   	// #0
     b24:	mov	w26, #0x0                   	// #0
     b28:	sub	x0, x20, x21
     b2c:	str	x0, [sp, #112]
     b30:	b	b50 <grub_mod_fini+0x800>
     b34:	mov	x0, x24
     b38:	bl	0 <grub_free>
     b3c:	str	x22, [x19, w27, sxtw #3]
     b40:	add	w27, w27, #0x1
     b44:	add	w26, w26, #0x1
     b48:	ldr	x24, [x19, w26, uxtw #3]
     b4c:	cbz	x24, cc4 <grub_mod_fini+0x974>
     b50:	mov	x0, x24
     b54:	bl	0 <grub_strlen>
     b58:	mov	x23, x0
     b5c:	ldr	x0, [sp, #112]
     b60:	add	x0, x0, x23
     b64:	add	x0, x0, #0x1
     b68:	bl	0 <grub_malloc>
     b6c:	mov	x22, x0
     b70:	cbz	x0, 10c4 <grub_mod_fini+0xd74>
     b74:	mov	x2, x23
     b78:	mov	x1, x24
     b7c:	bl	0 <grub_memmove>
     b80:	mov	x2, x20
     b84:	mov	x1, x21
     b88:	add	x0, x22, x23
     b8c:	bl	390 <grub_mod_fini+0x40>
     b90:	cbz	w28, b34 <grub_mod_fini+0x7e4>
     b94:	mov	w1, #0x2f                  	// #47
     b98:	mov	x0, x22
     b9c:	bl	0 <grub_strrchr>
     ba0:	str	x0, [sp, #104]
     ba4:	cbz	x0, b34 <grub_mod_fini+0x7e4>
     ba8:	ldr	x23, [sp, #104]
     bac:	strb	wzr, [x23], #1
     bb0:	str	x23, [sp, #152]
     bb4:	str	wzr, [sp, #160]
     bb8:	mov	x0, x22
     bbc:	bl	0 <grub_file_get_device_name>
     bc0:	bl	0 <grub_device_open>
     bc4:	str	x0, [sp, #120]
     bc8:	cbz	x0, c3c <grub_mod_fini+0x8ec>
     bcc:	bl	0 <grub_fs_probe>
     bd0:	str	x0, [sp, #136]
     bd4:	cbz	x0, c3c <grub_mod_fini+0x8ec>
     bd8:	ldrb	w0, [x22]
     bdc:	mov	x1, x22
     be0:	cmp	w0, #0x28
     be4:	b.eq	c70 <grub_mod_fini+0x920>  // b.none
     be8:	ldr	x0, [sp, #136]
     bec:	ldr	x4, [x0, #24]
     bf0:	ldrb	w2, [x1]
     bf4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     bf8:	ldr	x0, [x0]
     bfc:	cmp	w2, #0x0
     c00:	csel	x1, x1, x0, ne  // ne = any
     c04:	add	x3, sp, #0x98
     c08:	adrp	x0, 0 <grub_mod_init-0x2b0>
     c0c:	ldr	x2, [x0]
     c10:	ldr	x0, [sp, #120]
     c14:	blr	x4
     c18:	adrp	x0, 0 <grub_mod_init-0x2b0>
     c1c:	ldr	x0, [x0]
     c20:	ldr	w0, [x0]
     c24:	cbnz	w0, c3c <grub_mod_fini+0x8ec>
     c28:	ldr	x0, [sp, #104]
     c2c:	ldrb	w0, [x0, #1]
     c30:	cbnz	w0, c3c <grub_mod_fini+0x8ec>
     c34:	mov	w0, #0x1                   	// #1
     c38:	str	w0, [sp, #160]
     c3c:	adrp	x0, 0 <grub_mod_init-0x2b0>
     c40:	ldr	x0, [x0]
     c44:	str	wzr, [x0]
     c48:	ldr	w0, [sp, #160]
     c4c:	cbz	w0, c88 <grub_mod_fini+0x938>
     c50:	ldr	x0, [sp, #104]
     c54:	mov	w1, #0x2f                  	// #47
     c58:	strb	w1, [x0]
     c5c:	mov	x0, x24
     c60:	bl	0 <grub_free>
     c64:	str	x22, [x19, w27, sxtw #3]
     c68:	add	w27, w27, #0x1
     c6c:	b	b44 <grub_mod_fini+0x7f4>
     c70:	mov	w1, #0x29                  	// #41
     c74:	mov	x0, x22
     c78:	bl	0 <grub_strchr>
     c7c:	cbz	x0, c3c <grub_mod_fini+0x8ec>
     c80:	add	x1, x0, #0x1
     c84:	b	be8 <grub_mod_fini+0x898>
     c88:	mov	x5, x22
     c8c:	mov	x4, x23
     c90:	adrp	x0, 0 <grub_mod_init-0x2b0>
     c94:	ldr	x3, [x0]
     c98:	adrp	x0, 0 <grub_mod_init-0x2b0>
     c9c:	ldr	x2, [x0]
     ca0:	mov	w1, #0x226                 	// #550
     ca4:	adrp	x0, 0 <grub_mod_init-0x2b0>
     ca8:	ldr	x0, [x0]
     cac:	bl	0 <grub_real_dprintf>
     cb0:	mov	x0, x24
     cb4:	bl	0 <grub_free>
     cb8:	mov	x0, x22
     cbc:	bl	0 <grub_free>
     cc0:	b	b44 <grub_mod_fini+0x7f4>
     cc4:	cbz	w27, cd4 <grub_mod_fini+0x984>
     cc8:	str	xzr, [x19, w27, sxtw #3]
     ccc:	ldp	x23, x24, [sp, #48]
     cd0:	b	adc <grub_mod_fini+0x78c>
     cd4:	mov	x0, x19
     cd8:	bl	0 <grub_free>
     cdc:	mov	x19, #0x0                   	// #0
     ce0:	ldp	x23, x24, [sp, #48]
     ce4:	ldp	x25, x26, [sp, #64]
     ce8:	ldp	x27, x28, [sp, #80]
     cec:	ldr	x0, [sp, #128]
     cf0:	str	x19, [x0]
     cf4:	mov	w0, #0x0                   	// #0
     cf8:	ldp	x19, x20, [sp, #16]
     cfc:	b	10b8 <grub_mod_fini+0xd68>
     d00:	cmp	w1, #0x2a
     d04:	b.ne	d20 <grub_mod_fini+0x9d0>  // b.any
     d08:	add	w1, w0, #0x1
     d0c:	strb	w6, [x23, w0, sxtw]
     d10:	strb	w8, [x23, w1, sxtw]
     d14:	add	w0, w0, #0x2
     d18:	mov	x4, x3
     d1c:	b	d4c <grub_mod_fini+0x9fc>
     d20:	cmp	w1, #0x2a
     d24:	b.ls	da8 <grub_mod_fini+0xa58>  // b.plast
     d28:	cmp	w1, #0x2b
     d2c:	b.eq	d38 <grub_mod_fini+0x9e8>  // b.none
     d30:	cmp	w1, #0x2e
     d34:	b.ne	db8 <grub_mod_fini+0xa68>  // b.any
     d38:	add	w2, w0, #0x1
     d3c:	strb	w7, [x23, w0, sxtw]
     d40:	strb	w1, [x23, w2, sxtw]
     d44:	add	w0, w0, #0x2
     d48:	mov	x4, x3
     d4c:	cmp	x4, x20
     d50:	b.cs	de8 <grub_mod_fini+0xa98>  // b.hs, b.nlast
     d54:	mov	x3, x4
     d58:	ldrb	w1, [x3], #1
     d5c:	cmp	w1, #0x7d
     d60:	b.hi	db8 <grub_mod_fini+0xa68>  // b.pmore
     d64:	cmp	w1, #0x3e
     d68:	b.ls	d00 <grub_mod_fini+0x9b0>  // b.plast
     d6c:	sub	w2, w1, #0x3f
     d70:	lsl	x2, x5, x2
     d74:	tst	x2, x25
     d78:	b.ne	d38 <grub_mod_fini+0x9e8>  // b.any
     d7c:	cmp	w1, #0x3f
     d80:	b.eq	dc8 <grub_mod_fini+0xa78>  // b.none
     d84:	tbz	w2, #29, db8 <grub_mod_fini+0xa68>
     d88:	add	w2, w0, #0x1
     d8c:	strb	w7, [x23, w0, sxtw]
     d90:	ldrb	w1, [x4, #1]
     d94:	cbz	w1, dd8 <grub_mod_fini+0xa88>
     d98:	add	x4, x4, #0x2
     d9c:	add	w0, w0, #0x2
     da0:	strb	w1, [x23, w2, sxtw]
     da4:	b	d4c <grub_mod_fini+0x9fc>
     da8:	sub	w2, w1, #0x28
     dac:	and	w2, w2, #0xff
     db0:	cmp	w2, #0x1
     db4:	b.ls	d38 <grub_mod_fini+0x9e8>  // b.plast
     db8:	strb	w1, [x23, w0, sxtw]
     dbc:	add	w0, w0, #0x1
     dc0:	mov	x4, x3
     dc4:	b	d4c <grub_mod_fini+0x9fc>
     dc8:	strb	w6, [x23, w0, sxtw]
     dcc:	add	w0, w0, #0x1
     dd0:	mov	x4, x3
     dd4:	b	d4c <grub_mod_fini+0x9fc>
     dd8:	mov	w0, w2
     ddc:	mov	x4, x3
     de0:	b	d4c <grub_mod_fini+0x9fc>
     de4:	mov	w0, #0x1                   	// #1
     de8:	mov	w1, #0x24                  	// #36
     dec:	strb	w1, [x23, w0, sxtw]
     df0:	add	w0, w0, #0x1
     df4:	strb	wzr, [x23, w0, sxtw]
     df8:	mov	x4, x23
     dfc:	adrp	x0, 0 <grub_mod_init-0x2b0>
     e00:	ldr	x3, [x0]
     e04:	adrp	x0, 0 <grub_mod_init-0x2b0>
     e08:	ldr	x2, [x0]
     e0c:	mov	w1, #0xa4                  	// #164
     e10:	adrp	x0, 0 <grub_mod_init-0x2b0>
     e14:	ldr	x0, [x0]
     e18:	bl	0 <grub_real_dprintf>
     e1c:	mov	w2, #0xb24d                	// #45645
     e20:	movk	w2, #0x23, lsl #16
     e24:	mov	x1, x23
     e28:	add	x0, sp, #0xb0
     e2c:	bl	e5d8 <regcomp>
     e30:	mov	w22, w0
     e34:	cbnz	w0, eb4 <grub_mod_fini+0xb64>
     e38:	mov	x0, x23
     e3c:	bl	0 <grub_free>
     e40:	cbnz	x19, ec8 <grub_mod_fini+0xb78>
     e44:	cmp	x21, x27
     e48:	b.eq	ef4 <grub_mod_fini+0xba4>  // b.none
     e4c:	add	x3, sp, #0xb0
     e50:	mov	x2, x27
     e54:	mov	x1, x21
     e58:	adrp	x0, 0 <grub_mod_init-0x2b0>
     e5c:	ldr	x0, [x0]
     e60:	bl	7a8 <grub_mod_fini+0x458>
     e64:	mov	x19, x0
     e68:	add	x0, sp, #0xb0
     e6c:	bl	e768 <regfree>
     e70:	cbz	x19, 1070 <grub_mod_fini+0xd20>
     e74:	mov	x21, x20
     e78:	mov	w28, #0x1                   	// #1
     e7c:	ldp	x23, x24, [sp, #48]
     e80:	ldrb	w0, [x21]
     e84:	cbz	w0, 1064 <grub_mod_fini+0xd14>
     e88:	ldrb	w0, [x21]
     e8c:	mov	x27, x21
     e90:	mov	x1, x21
     e94:	mov	w2, #0x0                   	// #0
     e98:	mov	w5, #0x3f                  	// #63
     e9c:	mov	w4, #0x1                   	// #1
     ea0:	mov	w6, #0x0                   	// #0
     ea4:	mov	x20, x21
     ea8:	cbz	w0, a84 <grub_mod_fini+0x734>
     eac:	stp	x23, x24, [sp, #48]
     eb0:	b	a60 <grub_mod_fini+0x710>
     eb4:	mov	x0, x23
     eb8:	bl	0 <grub_free>
     ebc:	cbnz	x19, 10d4 <grub_mod_fini+0xd84>
     ec0:	ldp	x23, x24, [sp, #48]
     ec4:	b	1090 <grub_mod_fini+0xd40>
     ec8:	ldr	x0, [x19]
     ecc:	mov	x24, x19
     ed0:	mov	x28, #0x0                   	// #0
     ed4:	mov	w23, #0x0                   	// #0
     ed8:	str	w22, [sp, #104]
     edc:	cbnz	x0, fac <grub_mod_fini+0xc5c>
     ee0:	mov	x28, x0
     ee4:	mov	x0, x19
     ee8:	bl	0 <grub_free>
     eec:	mov	x19, x28
     ef0:	b	e68 <grub_mod_fini+0xb18>
     ef4:	ldrb	w0, [x21]
     ef8:	cmp	w0, #0x28
     efc:	cset	w0, ne  // ne = any
     f00:	add	x1, sp, #0xb0
     f04:	str	x1, [sp, #152]
     f08:	str	w0, [sp, #160]
     f0c:	str	wzr, [sp, #164]
     f10:	str	xzr, [sp, #168]
     f14:	add	x1, sp, #0x98
     f18:	adrp	x0, 0 <grub_mod_init-0x2b0>
     f1c:	ldr	x0, [x0]
     f20:	bl	0 <grub_device_iterate>
     f24:	cbnz	w0, f30 <grub_mod_fini+0xbe0>
     f28:	ldr	x19, [sp, #168]
     f2c:	b	e68 <grub_mod_fini+0xb18>
     f30:	ldr	x1, [sp, #168]
     f34:	mov	x21, #0x0                   	// #0
     f38:	cbz	x1, f54 <grub_mod_fini+0xc04>
     f3c:	ldr	x0, [x1, x21]
     f40:	cbz	x0, f54 <grub_mod_fini+0xc04>
     f44:	bl	0 <grub_free>
     f48:	ldr	x1, [sp, #168]
     f4c:	add	x21, x21, #0x8
     f50:	cbnz	x1, f3c <grub_mod_fini+0xbec>
     f54:	mov	x0, x1
     f58:	bl	0 <grub_free>
     f5c:	b	e68 <grub_mod_fini+0xb18>
     f60:	ldr	w24, [sp, #104]
     f64:	b	ff0 <grub_mod_fini+0xca0>
     f68:	ldr	w1, [sp, #104]
     f6c:	b	1010 <grub_mod_fini+0xcc0>
     f70:	mov	x0, x28
     f74:	bl	0 <grub_free>
     f78:	mov	x0, x22
     f7c:	bl	0 <grub_free>
     f80:	ldp	x23, x24, [sp, #48]
     f84:	mov	w20, #0x0                   	// #0
     f88:	b	1088 <grub_mod_fini+0xd38>
     f8c:	str	xzr, [x26, w24, sxtw #3]
     f90:	mov	x0, x22
     f94:	bl	0 <grub_free>
     f98:	mov	x28, x26
     f9c:	add	w23, w23, #0x1
     fa0:	add	x24, x19, w23, uxtw #3
     fa4:	ldr	x0, [x19, w23, uxtw #3]
     fa8:	cbz	x0, ee4 <grub_mod_fini+0xb94>
     fac:	add	x3, sp, #0xb0
     fb0:	mov	x2, x27
     fb4:	mov	x1, x21
     fb8:	bl	7a8 <grub_mod_fini+0x458>
     fbc:	mov	x22, x0
     fc0:	ldr	x0, [x24]
     fc4:	bl	0 <grub_free>
     fc8:	cbz	x22, f9c <grub_mod_fini+0xc4c>
     fcc:	cbz	x28, 10cc <grub_mod_fini+0xd7c>
     fd0:	ldr	x0, [x28]
     fd4:	cbz	x0, f60 <grub_mod_fini+0xc10>
     fd8:	mov	x0, #0x1                   	// #1
     fdc:	sub	x2, x28, #0x8
     fe0:	mov	w24, w0
     fe4:	add	x0, x0, #0x1
     fe8:	ldr	x1, [x2, x0, lsl #3]
     fec:	cbnz	x1, fe0 <grub_mod_fini+0xc90>
     ff0:	ldr	x0, [x22]
     ff4:	cbz	x0, f68 <grub_mod_fini+0xc18>
     ff8:	mov	x0, #0x1                   	// #1
     ffc:	sub	x3, x22, #0x8
    1000:	mov	w1, w0
    1004:	add	x0, x0, #0x1
    1008:	ldr	x2, [x3, x0, lsl #3]
    100c:	cbnz	x2, 1000 <grub_mod_fini+0xcb0>
    1010:	add	w1, w24, w1
    1014:	add	w1, w1, #0x1
    1018:	sbfiz	x1, x1, #3, #32
    101c:	mov	x0, x28
    1020:	bl	0 <grub_realloc>
    1024:	mov	x26, x0
    1028:	cbz	x0, f70 <grub_mod_fini+0xc20>
    102c:	ldr	x1, [x22]
    1030:	cbz	x1, f8c <grub_mod_fini+0xc3c>
    1034:	add	w0, w24, #0x1
    1038:	sxtw	x0, w0
    103c:	sxtw	x2, w24
    1040:	mvn	x2, x2
    1044:	add	x2, x22, x2, lsl #3
    1048:	sub	x3, x26, #0x8
    104c:	mov	w24, w0
    1050:	str	x1, [x3, x0, lsl #3]
    1054:	add	x0, x0, #0x1
    1058:	ldr	x1, [x2, x0, lsl #3]
    105c:	cbnz	x1, 104c <grub_mod_fini+0xcfc>
    1060:	b	f8c <grub_mod_fini+0xc3c>
    1064:	ldp	x25, x26, [sp, #64]
    1068:	ldp	x27, x28, [sp, #80]
    106c:	b	cec <grub_mod_fini+0x99c>
    1070:	ldp	x23, x24, [sp, #48]
    1074:	ldp	x25, x26, [sp, #64]
    1078:	ldp	x27, x28, [sp, #80]
    107c:	b	cec <grub_mod_fini+0x99c>
    1080:	bl	0 <grub_free>
    1084:	add	w20, w20, #0x1
    1088:	ldr	x0, [x19, w20, uxtw #3]
    108c:	cbnz	x0, 1080 <grub_mod_fini+0xd30>
    1090:	mov	x0, x19
    1094:	bl	0 <grub_free>
    1098:	add	x0, sp, #0xb0
    109c:	bl	e768 <regfree>
    10a0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    10a4:	ldr	x0, [x0]
    10a8:	ldr	w0, [x0]
    10ac:	ldp	x19, x20, [sp, #16]
    10b0:	ldp	x25, x26, [sp, #64]
    10b4:	ldp	x27, x28, [sp, #80]
    10b8:	ldp	x21, x22, [sp, #32]
    10bc:	ldp	x29, x30, [sp], #240
    10c0:	ret
    10c4:	ldp	x23, x24, [sp, #48]
    10c8:	b	f84 <grub_mod_fini+0xc34>
    10cc:	mov	x28, x22
    10d0:	b	f9c <grub_mod_fini+0xc4c>
    10d4:	ldp	x23, x24, [sp, #48]
    10d8:	b	f84 <grub_mod_fini+0xc34>
    10dc:	cmp	w0, #0x2f
    10e0:	cset	w0, eq  // eq = none
    10e4:	cmp	w2, #0x0
    10e8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    10ec:	b.eq	a50 <grub_mod_fini+0x700>  // b.none
    10f0:	mov	x20, x1
    10f4:	cmp	x20, x27
    10f8:	b.eq	b08 <grub_mod_fini+0x7b8>  // b.none
    10fc:	sub	x0, x20, x27
    1100:	lsl	w0, w0, #1
    1104:	add	w0, w0, #0x3
    1108:	bl	0 <grub_malloc>
    110c:	mov	x23, x0
    1110:	cbz	x0, ebc <grub_mod_fini+0xb6c>
    1114:	mov	w0, #0x5e                  	// #94
    1118:	strb	w0, [x23]
    111c:	cmp	x20, x27
    1120:	b.ls	de4 <grub_mod_fini+0xa94>  // b.plast
    1124:	mov	x4, x27
    1128:	mov	w0, #0x1                   	// #1
    112c:	mov	w7, #0x5c                  	// #92
    1130:	mov	x5, #0x1                   	// #1
    1134:	mov	w6, #0x2e                  	// #46
    1138:	mov	w8, #0x2a                  	// #42
    113c:	b	d54 <grub_mod_fini+0xa04>
	...
    1198:	mov	x4, x0
    119c:	ldr	w0, [x0, #104]
    11a0:	cmp	w0, #0x1
    11a4:	b.eq	11e8 <grub_mod_fini+0xe98>  // b.none
    11a8:	add	w2, w1, #0x1
    11ac:	ldr	w3, [x4, #44]
    11b0:	cmp	w2, w3
    11b4:	b.ge	11ec <grub_mod_fini+0xe9c>  // b.tcont
    11b8:	ldr	x0, [x4, #16]
    11bc:	add	x2, x0, w2, sxtw #2
    11c0:	sub	w3, w3, w1
    11c4:	mov	w0, #0x1                   	// #1
    11c8:	ldr	w1, [x2]
    11cc:	cmn	w1, #0x1
    11d0:	b.ne	11e8 <grub_mod_fini+0xe98>  // b.any
    11d4:	add	w0, w0, #0x1
    11d8:	add	x2, x2, #0x4
    11dc:	cmp	w0, w3
    11e0:	b.ne	11c8 <grub_mod_fini+0xe78>  // b.any
    11e4:	mov	w0, w3
    11e8:	ret
    11ec:	mov	w0, #0x1                   	// #1
    11f0:	b	11e8 <grub_mod_fini+0xe98>
    11f4:	ldr	w2, [x0, #104]
    11f8:	cmp	w2, #0x1
    11fc:	b.eq	120c <grub_mod_fini+0xebc>  // b.none
    1200:	ldr	x0, [x0, #16]
    1204:	ldr	w0, [x0, w1, sxtw #2]
    1208:	ret
    120c:	ldr	x0, [x0, #8]
    1210:	ldrb	w0, [x0, w1, sxtw]
    1214:	b	1208 <grub_mod_fini+0xeb8>
    1218:	ldr	w1, [x0, #64]
    121c:	ldr	w5, [x0, #52]
    1220:	cmp	w5, w1
    1224:	csel	w5, w5, w1, le
    1228:	ldr	w1, [x0, #44]
    122c:	cmp	w5, w1
    1230:	b.le	1274 <grub_mod_fini+0xf24>
    1234:	sxtw	x3, w1
    1238:	ldr	w2, [x0, #40]
    123c:	add	w2, w1, w2
    1240:	ldr	x4, [x0]
    1244:	ldrb	w2, [x4, w2, sxtw]
    1248:	ldr	x4, [x0, #80]
    124c:	ldrb	w4, [x4, x2]
    1250:	ldr	x2, [x0, #8]
    1254:	strb	w4, [x2, x3]
    1258:	add	w1, w1, #0x1
    125c:	add	x3, x3, #0x1
    1260:	cmp	w5, w1
    1264:	b.ne	1238 <grub_mod_fini+0xee8>  // b.any
    1268:	str	w5, [x0, #44]
    126c:	str	w5, [x0, #48]
    1270:	ret
    1274:	mov	w5, w1
    1278:	b	1268 <grub_mod_fini+0xf18>
    127c:	mov	x4, x0
    1280:	cmp	x0, #0x0
    1284:	cset	w0, eq  // eq = none
    1288:	cmp	x1, #0x0
    128c:	csinc	w0, w0, wzr, ne  // ne = any
    1290:	cbnz	w0, 12e0 <grub_mod_fini+0xf90>
    1294:	ldr	w3, [x4, #4]
    1298:	ldr	w2, [x1, #4]
    129c:	cmp	w3, w2
    12a0:	b.ne	12e4 <grub_mod_fini+0xf94>  // b.any
    12a4:	sxtw	x2, w3
    12a8:	sub	x2, x2, #0x1
    12ac:	lsl	x2, x2, #2
    12b0:	subs	w3, w3, #0x1
    12b4:	b.mi	12d8 <grub_mod_fini+0xf88>  // b.first
    12b8:	ldr	x5, [x4, #8]
    12bc:	ldr	w6, [x5, x2]
    12c0:	ldr	x5, [x1, #8]
    12c4:	ldr	w5, [x5, x2]
    12c8:	sub	x2, x2, #0x4
    12cc:	cmp	w6, w5
    12d0:	b.eq	12b0 <grub_mod_fini+0xf60>  // b.none
    12d4:	b	12e4 <grub_mod_fini+0xf94>
    12d8:	mov	w0, #0x1                   	// #1
    12dc:	b	12e4 <grub_mod_fini+0xf94>
    12e0:	mov	w0, #0x0                   	// #0
    12e4:	ret
    12e8:	ldr	w3, [x0, #4]
    12ec:	cmp	w3, #0x0
    12f0:	b.le	1344 <grub_mod_fini+0xff4>
    12f4:	sub	w3, w3, #0x1
    12f8:	mov	w4, #0x0                   	// #0
    12fc:	cmp	w3, w4
    1300:	b.ls	1330 <grub_mod_fini+0xfe0>  // b.plast
    1304:	add	w2, w3, w4
    1308:	lsr	w5, w2, #1
    130c:	lsr	w2, w2, #1
    1310:	ldr	x6, [x0, #8]
    1314:	ldr	w2, [x6, x2, lsl #2]
    1318:	cmp	w2, w1
    131c:	b.lt	1328 <grub_mod_fini+0xfd8>  // b.tstop
    1320:	mov	w3, w5
    1324:	b	12fc <grub_mod_fini+0xfac>
    1328:	add	w4, w5, #0x1
    132c:	b	12fc <grub_mod_fini+0xfac>
    1330:	ldr	x0, [x0, #8]
    1334:	ldr	w0, [x0, w4, uxtw #2]
    1338:	cmp	w0, w1
    133c:	csinc	w0, wzr, w4, ne  // ne = any
    1340:	ret
    1344:	mov	w0, #0x0                   	// #0
    1348:	b	1340 <grub_mod_fini+0xff0>
    134c:	tbnz	w1, #31, 1394 <grub_mod_fini+0x1044>
    1350:	ldr	w2, [x0, #4]
    1354:	cmp	w2, w1
    1358:	b.le	1394 <grub_mod_fini+0x1044>
    135c:	sub	w2, w2, #0x1
    1360:	str	w2, [x0, #4]
    1364:	cmp	w2, w1
    1368:	b.le	1394 <grub_mod_fini+0x1044>
    136c:	sbfiz	x2, x1, #2, #32
    1370:	ldr	x3, [x0, #8]
    1374:	mov	x4, x2
    1378:	add	x2, x2, #0x4
    137c:	ldr	w5, [x3, x2]
    1380:	str	w5, [x3, x4]
    1384:	add	w1, w1, #0x1
    1388:	ldr	w3, [x0, #4]
    138c:	cmp	w3, w1
    1390:	b.gt	1370 <grub_mod_fini+0x1020>
    1394:	ret
    1398:	ldrb	w2, [x1, #48]
    139c:	cmp	w2, #0x4
    13a0:	b.eq	13b4 <grub_mod_fini+0x1064>  // b.none
    13a4:	cmp	w2, #0x11
    13a8:	b.eq	13e4 <grub_mod_fini+0x1094>  // b.none
    13ac:	mov	w0, #0x0                   	// #0
    13b0:	ret
    13b4:	ldr	x2, [x0, #208]
    13b8:	cbz	x2, 13ac <grub_mod_fini+0x105c>
    13bc:	ldrsw	x3, [x1, #40]
    13c0:	ldr	w2, [x2, x3, lsl #2]
    13c4:	str	w2, [x1, #40]
    13c8:	mov	w1, #0x1                   	// #1
    13cc:	lsl	w1, w1, w2
    13d0:	sxtw	x1, w1
    13d4:	ldr	x2, [x0, #144]
    13d8:	orr	x1, x2, x1
    13dc:	str	x1, [x0, #144]
    13e0:	b	13ac <grub_mod_fini+0x105c>
    13e4:	ldr	x2, [x1, #8]
    13e8:	cbz	x2, 13ac <grub_mod_fini+0x105c>
    13ec:	ldrb	w3, [x2, #48]
    13f0:	cmp	w3, #0x11
    13f4:	b.ne	13ac <grub_mod_fini+0x105c>  // b.any
    13f8:	ldr	w3, [x2, #40]
    13fc:	ldr	x2, [x2, #8]
    1400:	str	x2, [x1, #8]
    1404:	cbz	x2, 140c <grub_mod_fini+0x10bc>
    1408:	str	x1, [x2]
    140c:	ldr	x2, [x0, #208]
    1410:	ldrsw	x1, [x1, #40]
    1414:	ldr	w1, [x2, x1, lsl #2]
    1418:	str	w1, [x2, w3, sxtw #2]
    141c:	cmp	w3, #0x3f
    1420:	b.gt	13ac <grub_mod_fini+0x105c>
    1424:	mov	x1, #0x1                   	// #1
    1428:	lsl	x1, x1, x3
    142c:	ldr	x2, [x0, #144]
    1430:	bic	x1, x2, x1
    1434:	str	x1, [x0, #144]
    1438:	b	13ac <grub_mod_fini+0x105c>
    143c:	ldrb	w0, [x1, #48]
    1440:	cmp	w0, #0xb
    1444:	b.eq	1474 <grub_mod_fini+0x1124>  // b.none
    1448:	cmp	w0, #0x10
    144c:	b.eq	1484 <grub_mod_fini+0x1134>  // b.none
    1450:	ldr	x0, [x1, #8]
    1454:	cbz	x0, 1460 <grub_mod_fini+0x1110>
    1458:	ldr	x2, [x1, #32]
    145c:	str	x2, [x0, #32]
    1460:	ldr	x0, [x1, #16]
    1464:	cbz	x0, 147c <grub_mod_fini+0x112c>
    1468:	ldr	x1, [x1, #32]
    146c:	str	x1, [x0, #32]
    1470:	b	147c <grub_mod_fini+0x112c>
    1474:	ldr	x0, [x1, #8]
    1478:	str	x1, [x0, #32]
    147c:	mov	w0, #0x0                   	// #0
    1480:	ret
    1484:	ldr	x0, [x1, #8]
    1488:	ldr	x2, [x1, #16]
    148c:	ldr	x2, [x2, #24]
    1490:	str	x2, [x0, #32]
    1494:	ldr	x0, [x1, #16]
    1498:	ldr	x1, [x1, #32]
    149c:	str	x1, [x0, #32]
    14a0:	b	147c <grub_mod_fini+0x112c>
    14a4:	ldr	w3, [x1, #56]
    14a8:	ldr	w4, [x1, #72]
    14ac:	cmp	w4, w3
    14b0:	b.le	151c <grub_mod_fini+0x11cc>
    14b4:	ldr	x4, [x1, #8]
    14b8:	ldrb	w3, [x4, w3, sxtw]
    14bc:	strb	w3, [x0]
    14c0:	ldr	w4, [x1, #104]
    14c4:	cmp	w4, #0x1
    14c8:	b.le	14ec <grub_mod_fini+0x119c>
    14cc:	ldr	w4, [x1, #56]
    14d0:	ldr	w5, [x1, #44]
    14d4:	cmp	w4, w5
    14d8:	b.eq	14ec <grub_mod_fini+0x119c>  // b.none
    14dc:	ldr	x5, [x1, #16]
    14e0:	ldr	w4, [x5, w4, sxtw #2]
    14e4:	cmn	w4, #0x1
    14e8:	b.eq	152c <grub_mod_fini+0x11dc>  // b.none
    14ec:	cmp	w3, #0x5c
    14f0:	b.eq	153c <grub_mod_fini+0x11ec>  // b.none
    14f4:	cmp	w3, #0x5b
    14f8:	b.eq	1584 <grub_mod_fini+0x1234>  // b.none
    14fc:	cmp	w3, #0x5d
    1500:	b.eq	1624 <grub_mod_fini+0x12d4>  // b.none
    1504:	cmp	w3, #0x5e
    1508:	b.ne	160c <grub_mod_fini+0x12bc>  // b.any
    150c:	mov	w1, #0x19                  	// #25
    1510:	strb	w1, [x0, #8]
    1514:	mov	w0, #0x1                   	// #1
    1518:	b	1528 <grub_mod_fini+0x11d8>
    151c:	mov	w1, #0x2                   	// #2
    1520:	strb	w1, [x0, #8]
    1524:	mov	w0, #0x0                   	// #0
    1528:	ret
    152c:	mov	w1, #0x1                   	// #1
    1530:	strb	w1, [x0, #8]
    1534:	mov	w0, #0x1                   	// #1
    1538:	b	1528 <grub_mod_fini+0x11d8>
    153c:	tbz	w2, #0, 1554 <grub_mod_fini+0x1204>
    1540:	ldr	w2, [x1, #56]
    1544:	add	w2, w2, #0x1
    1548:	ldr	w3, [x1, #64]
    154c:	cmp	w2, w3
    1550:	b.lt	1564 <grub_mod_fini+0x1214>  // b.tstop
    1554:	mov	w1, #0x1                   	// #1
    1558:	strb	w1, [x0, #8]
    155c:	mov	w0, #0x1                   	// #1
    1560:	b	1528 <grub_mod_fini+0x11d8>
    1564:	str	w2, [x1, #56]
    1568:	ldr	x1, [x1, #8]
    156c:	ldrb	w1, [x1, w2, sxtw]
    1570:	strb	w1, [x0]
    1574:	mov	w1, #0x1                   	// #1
    1578:	strb	w1, [x0, #8]
    157c:	mov	w0, #0x1                   	// #1
    1580:	b	1528 <grub_mod_fini+0x11d8>
    1584:	ldr	w3, [x1, #56]
    1588:	add	w5, w3, #0x1
    158c:	ldr	w4, [x1, #64]
    1590:	cmp	w5, w4
    1594:	b.ge	15c0 <grub_mod_fini+0x1270>  // b.tcont
    1598:	ldr	x1, [x1, #8]
    159c:	add	x3, x1, w3, sxtw
    15a0:	ldrb	w1, [x3, #1]
    15a4:	strb	w1, [x0]
    15a8:	cmp	w1, #0x3a
    15ac:	b.eq	15f8 <grub_mod_fini+0x12a8>  // b.none
    15b0:	cmp	w1, #0x3d
    15b4:	b.eq	15e8 <grub_mod_fini+0x1298>  // b.none
    15b8:	cmp	w1, #0x2e
    15bc:	b.eq	15d8 <grub_mod_fini+0x1288>  // b.none
    15c0:	mov	w1, #0x1                   	// #1
    15c4:	strb	w1, [x0, #8]
    15c8:	mov	w1, #0x5b                  	// #91
    15cc:	strb	w1, [x0]
    15d0:	mov	w0, #0x1                   	// #1
    15d4:	b	1528 <grub_mod_fini+0x11d8>
    15d8:	mov	w1, #0x1a                  	// #26
    15dc:	strb	w1, [x0, #8]
    15e0:	mov	w0, #0x2                   	// #2
    15e4:	b	1528 <grub_mod_fini+0x11d8>
    15e8:	mov	w1, #0x1c                  	// #28
    15ec:	strb	w1, [x0, #8]
    15f0:	mov	w0, #0x2                   	// #2
    15f4:	b	1528 <grub_mod_fini+0x11d8>
    15f8:	tbz	w2, #2, 15c0 <grub_mod_fini+0x1270>
    15fc:	mov	w1, #0x1e                  	// #30
    1600:	strb	w1, [x0, #8]
    1604:	mov	w0, #0x2                   	// #2
    1608:	b	1528 <grub_mod_fini+0x11d8>
    160c:	cmp	w3, #0x2d
    1610:	b.ne	1554 <grub_mod_fini+0x1204>  // b.any
    1614:	mov	w1, #0x16                  	// #22
    1618:	strb	w1, [x0, #8]
    161c:	mov	w0, #0x1                   	// #1
    1620:	b	1528 <grub_mod_fini+0x11d8>
    1624:	mov	w1, #0x15                  	// #21
    1628:	strb	w1, [x0, #8]
    162c:	mov	w0, #0x1                   	// #1
    1630:	b	1528 <grub_mod_fini+0x11d8>
    1634:	ldrb	w2, [x1, #48]
    1638:	cmp	w2, #0x11
    163c:	b.eq	1648 <grub_mod_fini+0x12f8>  // b.none
    1640:	mov	w0, #0x0                   	// #0
    1644:	ret
    1648:	ldr	w2, [x1, #40]
    164c:	cmp	w2, w0
    1650:	b.ne	1640 <grub_mod_fini+0x12f0>  // b.any
    1654:	ldrb	w0, [x1, #50]
    1658:	orr	w0, w0, #0x8
    165c:	strb	w0, [x1, #50]
    1660:	b	1640 <grub_mod_fini+0x12f0>
    1664:	stp	x29, x30, [sp, #-144]!
    1668:	mov	x29, sp
    166c:	stp	x23, x24, [sp, #48]
    1670:	stp	x27, x28, [sp, #80]
    1674:	mov	x27, x0
    1678:	str	w1, [sp, #104]
    167c:	str	w3, [sp, #116]
    1680:	ldr	x24, [x0, #112]
    1684:	ldr	x23, [x24, #48]
    1688:	add	x23, x23, w3, sxtw #4
    168c:	ldr	w0, [x23, #4]
    1690:	cmp	w0, #0x0
    1694:	b.le	1828 <grub_mod_fini+0x14d8>
    1698:	stp	x19, x20, [sp, #16]
    169c:	stp	x21, x22, [sp, #32]
    16a0:	stp	x25, x26, [sp, #64]
    16a4:	mov	w25, w2
    16a8:	mov	w26, w4
    16ac:	sbfiz	x0, x4, #2, #32
    16b0:	add	x0, x0, w4, sxtw
    16b4:	lsl	x0, x0, #2
    16b8:	str	x0, [sp, #136]
    16bc:	mov	x0, #0x1                   	// #1
    16c0:	lsl	x0, x0, x2
    16c4:	str	x0, [sp, #120]
    16c8:	mvn	w0, w0
    16cc:	and	w0, w0, #0xffff
    16d0:	str	w0, [sp, #132]
    16d4:	mov	x19, #0x0                   	// #0
    16d8:	and	w0, w1, #0x1
    16dc:	str	w0, [sp, #128]
    16e0:	and	w28, w1, #0x2
    16e4:	b	17b0 <grub_mod_fini+0x1460>
    16e8:	ldr	x0, [x24, #40]
    16ec:	add	x0, x0, x22
    16f0:	ldr	x0, [x0, #8]
    16f4:	ldr	w3, [x0]
    16f8:	ldr	w0, [sp, #116]
    16fc:	cmp	w0, w3
    1700:	b.eq	1774 <grub_mod_fini+0x1424>  // b.none
    1704:	mov	w4, w26
    1708:	mov	w2, w25
    170c:	ldr	w1, [sp, #104]
    1710:	mov	x0, x27
    1714:	bl	1664 <grub_mod_fini+0x1314>
    1718:	cmn	w0, #0x1
    171c:	b.eq	1854 <grub_mod_fini+0x1504>  // b.none
    1720:	cbnz	w0, 1728 <grub_mod_fini+0x13d8>
    1724:	cbnz	w28, 1864 <grub_mod_fini+0x1514>
    1728:	cmp	w25, #0x3f
    172c:	b.gt	1740 <grub_mod_fini+0x13f0>
    1730:	ldrh	w0, [x20, #18]
    1734:	ldr	w1, [sp, #132]
    1738:	and	w0, w1, w0
    173c:	strh	w0, [x20, #18]
    1740:	add	x20, x20, #0x14
    1744:	ldurb	w0, [x20, #-4]
    1748:	cbz	w0, 17a0 <grub_mod_fini+0x1450>
    174c:	ldr	w0, [x20]
    1750:	cmp	w0, w21
    1754:	b.ne	1740 <grub_mod_fini+0x13f0>  // b.any
    1758:	cmp	w25, #0x3f
    175c:	b.gt	16e8 <grub_mod_fini+0x1398>
    1760:	ldrh	w0, [x20, #18]
    1764:	ldr	x1, [sp, #120]
    1768:	tst	x0, x1
    176c:	b.ne	16e8 <grub_mod_fini+0x1398>  // b.any
    1770:	b	1740 <grub_mod_fini+0x13f0>
    1774:	ldr	x0, [sp, #104]
    1778:	sbfx	x0, x0, #0, #1
    177c:	ldp	x19, x20, [sp, #16]
    1780:	ldp	x21, x22, [sp, #32]
    1784:	ldp	x25, x26, [sp, #64]
    1788:	b	1830 <grub_mod_fini+0x14e0>
    178c:	ldr	w0, [sp, #128]
    1790:	cbz	w0, 17a0 <grub_mod_fini+0x1450>
    1794:	ldr	w0, [x1, x22]
    1798:	cmp	w0, w25
    179c:	b.eq	1840 <grub_mod_fini+0x14f0>  // b.none
    17a0:	add	x19, x19, #0x1
    17a4:	ldr	w0, [x23, #4]
    17a8:	cmp	w0, w19
    17ac:	b.le	181c <grub_mod_fini+0x14cc>
    17b0:	ldr	x0, [x23, #8]
    17b4:	ldr	w21, [x0, x19, lsl #2]
    17b8:	sbfiz	x22, x21, #4, #32
    17bc:	ldr	x1, [x24]
    17c0:	add	x0, x1, x22
    17c4:	ldrb	w0, [x0, #8]
    17c8:	cmp	w0, #0x8
    17cc:	b.eq	178c <grub_mod_fini+0x143c>  // b.none
    17d0:	cmp	w0, #0x9
    17d4:	b.eq	17f8 <grub_mod_fini+0x14a8>  // b.none
    17d8:	cmp	w0, #0x4
    17dc:	b.ne	17a0 <grub_mod_fini+0x1450>  // b.any
    17e0:	cmn	w26, #0x1
    17e4:	b.eq	17a0 <grub_mod_fini+0x1450>  // b.none
    17e8:	ldr	x20, [x27, #160]
    17ec:	ldr	x0, [sp, #136]
    17f0:	add	x20, x20, x0
    17f4:	b	174c <grub_mod_fini+0x13fc>
    17f8:	cbz	w28, 17a0 <grub_mod_fini+0x1450>
    17fc:	ldr	w0, [x1, x22]
    1800:	cmp	w0, w25
    1804:	b.ne	17a0 <grub_mod_fini+0x1450>  // b.any
    1808:	mov	w0, #0x0                   	// #0
    180c:	ldp	x19, x20, [sp, #16]
    1810:	ldp	x21, x22, [sp, #32]
    1814:	ldp	x25, x26, [sp, #64]
    1818:	b	1830 <grub_mod_fini+0x14e0>
    181c:	ldp	x19, x20, [sp, #16]
    1820:	ldp	x21, x22, [sp, #32]
    1824:	ldp	x25, x26, [sp, #64]
    1828:	ldr	x0, [sp, #104]
    182c:	ubfx	x0, x0, #1, #1
    1830:	ldp	x23, x24, [sp, #48]
    1834:	ldp	x27, x28, [sp, #80]
    1838:	ldp	x29, x30, [sp], #144
    183c:	ret
    1840:	mov	w0, #0xffffffff            	// #-1
    1844:	ldp	x19, x20, [sp, #16]
    1848:	ldp	x21, x22, [sp, #32]
    184c:	ldp	x25, x26, [sp, #64]
    1850:	b	1830 <grub_mod_fini+0x14e0>
    1854:	ldp	x19, x20, [sp, #16]
    1858:	ldp	x21, x22, [sp, #32]
    185c:	ldp	x25, x26, [sp, #64]
    1860:	b	1830 <grub_mod_fini+0x14e0>
    1864:	ldp	x19, x20, [sp, #16]
    1868:	ldp	x21, x22, [sp, #32]
    186c:	ldp	x25, x26, [sp, #64]
    1870:	b	1830 <grub_mod_fini+0x14e0>
    1874:	mov	x7, x0
    1878:	mov	w6, w4
    187c:	sbfiz	x0, x1, #2, #32
    1880:	add	x1, x0, w1, sxtw
    1884:	ldr	x0, [x7, #160]
    1888:	add	x1, x0, x1, lsl #2
    188c:	ldr	w4, [x1, #8]
    1890:	cmp	w4, w6
    1894:	b.gt	18c8 <grub_mod_fini+0x1578>
    1898:	ldr	w8, [x1, #12]
    189c:	mov	w0, #0x1                   	// #1
    18a0:	cmp	w8, w6
    18a4:	b.lt	18c4 <grub_mod_fini+0x1574>  // b.tstop
    18a8:	cmp	w4, w6
    18ac:	cset	w1, eq  // eq = none
    18b0:	cmp	w8, w6
    18b4:	b.eq	18d0 <grub_mod_fini+0x1580>  // b.none
    18b8:	mov	w0, #0x0                   	// #0
    18bc:	cmp	w4, w6
    18c0:	b.eq	18d4 <grub_mod_fini+0x1584>  // b.none
    18c4:	ret
    18c8:	mov	w0, #0xffffffff            	// #-1
    18cc:	ret
    18d0:	orr	w1, w1, #0x2
    18d4:	stp	x29, x30, [sp, #-16]!
    18d8:	mov	x29, sp
    18dc:	mov	w4, w5
    18e0:	mov	x0, x7
    18e4:	bl	1664 <grub_mod_fini+0x1314>
    18e8:	ldp	x29, x30, [sp], #16
    18ec:	ret
    18f0:	mov	x6, x0
    18f4:	ldr	w7, [x0, #148]
    18f8:	mov	w4, w7
    18fc:	mov	w0, #0x0                   	// #0
    1900:	cmp	w4, w0
    1904:	b.le	1940 <grub_mod_fini+0x15f0>
    1908:	add	w2, w4, w0
    190c:	add	w2, w2, w2, lsr #31
    1910:	asr	w2, w2, #1
    1914:	ldr	x5, [x6, #160]
    1918:	sbfiz	x3, x2, #2, #32
    191c:	add	x3, x3, w2, sxtw
    1920:	add	x3, x5, x3, lsl #2
    1924:	ldr	w3, [x3, #4]
    1928:	cmp	w3, w1
    192c:	b.lt	1938 <grub_mod_fini+0x15e8>  // b.tstop
    1930:	mov	w4, w2
    1934:	b	1900 <grub_mod_fini+0x15b0>
    1938:	add	w0, w2, #0x1
    193c:	b	1900 <grub_mod_fini+0x15b0>
    1940:	cmp	w7, w0
    1944:	b.le	1968 <grub_mod_fini+0x1618>
    1948:	ldr	x3, [x6, #160]
    194c:	sbfiz	x2, x0, #2, #32
    1950:	add	x2, x2, w0, sxtw
    1954:	add	x2, x3, x2, lsl #2
    1958:	ldr	w2, [x2, #4]
    195c:	cmp	w2, w1
    1960:	csinv	w0, w0, wzr, eq  // eq = none
    1964:	ret
    1968:	mov	w0, #0xffffffff            	// #-1
    196c:	b	1964 <grub_mod_fini+0x1614>
    1970:	stp	x29, x30, [sp, #-112]!
    1974:	mov	x29, sp
    1978:	stp	x19, x20, [sp, #16]
    197c:	stp	x21, x22, [sp, #32]
    1980:	stp	x23, x24, [sp, #48]
    1984:	stp	x25, x26, [sp, #64]
    1988:	stp	x27, x28, [sp, #80]
    198c:	mov	x19, x0
    1990:	mov	x20, x1
    1994:	mov	w25, w2
    1998:	mov	w22, w3
    199c:	mov	w26, w4
    19a0:	mov	w23, w5
    19a4:	ldr	x28, [x0, #112]
    19a8:	mov	w1, w3
    19ac:	bl	18f0 <grub_mod_fini+0x15a0>
    19b0:	str	w0, [sp, #104]
    19b4:	mov	w1, w23
    19b8:	mov	x0, x19
    19bc:	bl	18f0 <grub_mod_fini+0x15a0>
    19c0:	str	w0, [sp, #108]
    19c4:	ldr	w0, [x20, #4]
    19c8:	cmp	w0, #0x0
    19cc:	b.le	1a74 <grub_mod_fini+0x1724>
    19d0:	mov	x24, #0x0                   	// #0
    19d4:	ldr	x0, [x20, #8]
    19d8:	ldr	w1, [x0, x24, lsl #2]
    19dc:	ldr	x2, [x19, #160]
    19e0:	sbfiz	x0, x1, #2, #32
    19e4:	add	x0, x0, w1, sxtw
    19e8:	ldrsw	x0, [x2, x0, lsl #2]
    19ec:	ldr	x2, [x28]
    19f0:	lsl	x0, x0, #4
    19f4:	ldr	w27, [x2, x0]
    19f8:	ldr	w5, [sp, #104]
    19fc:	mov	w4, w22
    1a00:	mov	w3, w25
    1a04:	mov	w2, w27
    1a08:	mov	x0, x19
    1a0c:	bl	1874 <grub_mod_fini+0x1524>
    1a10:	mov	w21, w0
    1a14:	ldr	x0, [x20, #8]
    1a18:	ldr	w5, [sp, #108]
    1a1c:	mov	w4, w23
    1a20:	mov	w3, w26
    1a24:	mov	w2, w27
    1a28:	ldr	w1, [x0, x24, lsl #2]
    1a2c:	mov	x0, x19
    1a30:	bl	1874 <grub_mod_fini+0x1524>
    1a34:	cmp	w21, w0
    1a38:	b.eq	1a5c <grub_mod_fini+0x170c>  // b.none
    1a3c:	mov	w0, #0x1                   	// #1
    1a40:	ldp	x19, x20, [sp, #16]
    1a44:	ldp	x21, x22, [sp, #32]
    1a48:	ldp	x23, x24, [sp, #48]
    1a4c:	ldp	x25, x26, [sp, #64]
    1a50:	ldp	x27, x28, [sp, #80]
    1a54:	ldp	x29, x30, [sp], #112
    1a58:	ret
    1a5c:	add	x24, x24, #0x1
    1a60:	ldr	w0, [x20, #4]
    1a64:	cmp	w0, w24
    1a68:	b.gt	19d4 <grub_mod_fini+0x1684>
    1a6c:	mov	w0, #0x0                   	// #0
    1a70:	b	1a40 <grub_mod_fini+0x16f0>
    1a74:	mov	w0, #0x0                   	// #0
    1a78:	b	1a40 <grub_mod_fini+0x16f0>
    1a7c:	ldr	w1, [x0, #64]
    1a80:	ldr	w6, [x0, #52]
    1a84:	cmp	w6, w1
    1a88:	csel	w6, w6, w1, le
    1a8c:	ldr	w2, [x0, #44]
    1a90:	cmp	w6, w2
    1a94:	b.le	1af4 <grub_mod_fini+0x17a4>
    1a98:	sxtw	x4, w2
    1a9c:	ldr	w1, [x0, #40]
    1aa0:	add	w1, w2, w1
    1aa4:	ldr	x3, [x0]
    1aa8:	ldrb	w1, [x3, w1, sxtw]
    1aac:	ldr	x3, [x0, #80]
    1ab0:	cbnz	x3, 1ae8 <grub_mod_fini+0x1798>
    1ab4:	sub	w5, w1, #0x61
    1ab8:	sub	w3, w1, #0x20
    1abc:	cmp	w5, #0x1a
    1ac0:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    1ac4:	ldr	x3, [x0, #8]
    1ac8:	strb	w1, [x3, x4]
    1acc:	add	w2, w2, #0x1
    1ad0:	add	x4, x4, #0x1
    1ad4:	cmp	w6, w2
    1ad8:	b.ne	1a9c <grub_mod_fini+0x174c>  // b.any
    1adc:	str	w6, [x0, #44]
    1ae0:	str	w6, [x0, #48]
    1ae4:	ret
    1ae8:	and	x1, x1, #0xff
    1aec:	ldrb	w1, [x3, x1]
    1af0:	b	1ab4 <grub_mod_fini+0x1764>
    1af4:	mov	w6, w2
    1af8:	b	1adc <grub_mod_fini+0x178c>
    1afc:	stp	x29, x30, [sp, #-64]!
    1b00:	mov	x29, sp
    1b04:	stp	x19, x20, [sp, #16]
    1b08:	stp	x21, x22, [sp, #32]
    1b0c:	mov	x21, x0
    1b10:	mov	x19, x1
    1b14:	ldr	w1, [x1, #56]
    1b18:	ldr	w3, [x19, #72]
    1b1c:	cmp	w3, w1
    1b20:	b.le	1c10 <grub_mod_fini+0x18c0>
    1b24:	mov	x22, x2
    1b28:	ldr	x0, [x19, #8]
    1b2c:	ldrb	w20, [x0, w1, sxtw]
    1b30:	strb	w20, [x21]
    1b34:	ldrb	w1, [x21, #10]
    1b38:	and	w1, w1, #0xffffff9f
    1b3c:	strb	w1, [x21, #10]
    1b40:	ldr	w0, [x19, #104]
    1b44:	cmp	w0, #0x1
    1b48:	b.le	1b6c <grub_mod_fini+0x181c>
    1b4c:	ldr	w1, [x19, #56]
    1b50:	ldr	w2, [x19, #44]
    1b54:	cmp	w1, w2
    1b58:	b.eq	1b6c <grub_mod_fini+0x181c>  // b.none
    1b5c:	ldr	x2, [x19, #16]
    1b60:	ldr	w1, [x2, w1, sxtw #2]
    1b64:	cmn	w1, #0x1
    1b68:	b.eq	1c2c <grub_mod_fini+0x18dc>  // b.none
    1b6c:	cmp	w20, #0x5c
    1b70:	b.eq	1c48 <grub_mod_fini+0x18f8>  // b.none
    1b74:	mov	w0, #0x1                   	// #1
    1b78:	strb	w0, [x21, #8]
    1b7c:	ldr	w0, [x19, #104]
    1b80:	cmp	w0, #0x1
    1b84:	b.le	1fd0 <grub_mod_fini+0x1c80>
    1b88:	ldr	w1, [x19, #56]
    1b8c:	mov	x0, x19
    1b90:	bl	11f4 <grub_mod_fini+0xea4>
    1b94:	and	w1, w0, #0xffffffdf
    1b98:	sub	w1, w1, #0x41
    1b9c:	mov	w2, #0x1                   	// #1
    1ba0:	cmp	w1, #0x19
    1ba4:	b.ls	1bb8 <grub_mod_fini+0x1868>  // b.plast
    1ba8:	sub	w1, w0, #0x30
    1bac:	cmp	w0, #0x5f
    1bb0:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    1bb4:	cset	w2, ls  // ls = plast
    1bb8:	ldrb	w0, [x21, #10]
    1bbc:	bfi	w0, w2, #6, #1
    1bc0:	strb	w0, [x21, #10]
    1bc4:	cmp	w20, #0x2e
    1bc8:	b.eq	2194 <grub_mod_fini+0x1e44>  // b.none
    1bcc:	b.ls	2008 <grub_mod_fini+0x1cb8>  // b.plast
    1bd0:	cmp	w20, #0x7b
    1bd4:	b.eq	214c <grub_mod_fini+0x1dfc>  // b.none
    1bd8:	b.ls	2094 <grub_mod_fini+0x1d44>  // b.plast
    1bdc:	cmp	w20, #0x7c
    1be0:	b.eq	2118 <grub_mod_fini+0x1dc8>  // b.none
    1be4:	mov	w0, #0x1                   	// #1
    1be8:	cmp	w20, #0x7d
    1bec:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1bf0:	mov	w0, #0x1                   	// #1
    1bf4:	mov	x1, #0x1200                	// #4608
    1bf8:	bics	xzr, x1, x22
    1bfc:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1c00:	mov	w0, #0x18                  	// #24
    1c04:	strb	w0, [x21, #8]
    1c08:	mov	w0, #0x1                   	// #1
    1c0c:	b	1c1c <grub_mod_fini+0x18cc>
    1c10:	mov	w0, #0x2                   	// #2
    1c14:	strb	w0, [x21, #8]
    1c18:	mov	w0, #0x0                   	// #0
    1c1c:	ldp	x19, x20, [sp, #16]
    1c20:	ldp	x21, x22, [sp, #32]
    1c24:	ldp	x29, x30, [sp], #64
    1c28:	ret
    1c2c:	mov	w0, #0x1                   	// #1
    1c30:	strb	w0, [x21, #8]
    1c34:	ldrb	w0, [x21, #10]
    1c38:	orr	w0, w0, #0x20
    1c3c:	strb	w0, [x21, #10]
    1c40:	mov	w0, #0x1                   	// #1
    1c44:	b	1c1c <grub_mod_fini+0x18cc>
    1c48:	ldr	w2, [x19, #56]
    1c4c:	add	w1, w2, #0x1
    1c50:	ldr	w3, [x19, #64]
    1c54:	cmp	w1, w3
    1c58:	b.lt	1c6c <grub_mod_fini+0x191c>  // b.tstop
    1c5c:	mov	w0, #0x24                  	// #36
    1c60:	strb	w0, [x21, #8]
    1c64:	mov	w0, #0x1                   	// #1
    1c68:	b	1c1c <grub_mod_fini+0x18cc>
    1c6c:	ldrb	w3, [x19, #99]
    1c70:	cbnz	w3, 1cf8 <grub_mod_fini+0x19a8>
    1c74:	ldr	x0, [x19, #8]
    1c78:	ldrb	w20, [x0, w1, sxtw]
    1c7c:	strb	w20, [x21]
    1c80:	mov	w0, #0x1                   	// #1
    1c84:	strb	w0, [x21, #8]
    1c88:	ldr	w0, [x19, #104]
    1c8c:	cmp	w0, #0x1
    1c90:	b.le	1d78 <grub_mod_fini+0x1a28>
    1c94:	ldr	w1, [x19, #56]
    1c98:	add	w1, w1, #0x1
    1c9c:	mov	x0, x19
    1ca0:	bl	11f4 <grub_mod_fini+0xea4>
    1ca4:	and	w1, w0, #0xffffffdf
    1ca8:	sub	w1, w1, #0x41
    1cac:	mov	w2, #0x1                   	// #1
    1cb0:	cmp	w1, #0x19
    1cb4:	b.ls	1cc8 <grub_mod_fini+0x1978>  // b.plast
    1cb8:	sub	w1, w0, #0x30
    1cbc:	cmp	w0, #0x5f
    1cc0:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    1cc4:	cset	w2, ls  // ls = plast
    1cc8:	ldrb	w0, [x21, #10]
    1ccc:	bfi	w0, w2, #6, #1
    1cd0:	strb	w0, [x21, #10]
    1cd4:	sub	w0, w20, #0x27
    1cd8:	cmp	w0, #0x56
    1cdc:	b.hi	2210 <grub_mod_fini+0x1ec0>  // b.pmore
    1ce0:	adrp	x1, 0 <grub_mod_init-0x2b0>
    1ce4:	ldr	x1, [x1]
    1ce8:	ldrh	w0, [x1, w0, uxtw #1]
    1cec:	adr	x1, 1cf8 <grub_mod_fini+0x19a8>
    1cf0:	add	x0, x1, w0, sxth #2
    1cf4:	br	x0
    1cf8:	cmp	w0, #0x1
    1cfc:	b.le	1d34 <grub_mod_fini+0x19e4>
    1d00:	ldr	x0, [x19, #16]
    1d04:	sbfiz	x4, x1, #2, #32
    1d08:	ldr	w3, [x0, w1, sxtw #2]
    1d0c:	cmn	w3, #0x1
    1d10:	b.eq	1d6c <grub_mod_fini+0x1a1c>  // b.none
    1d14:	add	w2, w2, #0x2
    1d18:	ldr	w3, [x19, #44]
    1d1c:	cmp	w3, w2
    1d20:	b.eq	1d34 <grub_mod_fini+0x19e4>  // b.none
    1d24:	add	x0, x0, x4
    1d28:	ldr	w0, [x0, #4]
    1d2c:	cmn	w0, #0x1
    1d30:	b.eq	1d6c <grub_mod_fini+0x1a1c>  // b.none
    1d34:	ldrb	w0, [x19, #100]
    1d38:	cbz	w0, 2218 <grub_mod_fini+0x1ec8>
    1d3c:	sxtw	x1, w1
    1d40:	ldr	x0, [x19, #24]
    1d44:	ldr	w0, [x0, x1, lsl #2]
    1d48:	ldr	w2, [x19, #40]
    1d4c:	add	w0, w0, w2
    1d50:	ldr	x2, [x19]
    1d54:	ldrb	w20, [x2, w0, sxtw]
    1d58:	tst	w20, #0xffffff80
    1d5c:	b.eq	1c7c <grub_mod_fini+0x192c>  // b.none
    1d60:	ldr	x0, [x19, #8]
    1d64:	ldrb	w20, [x0, x1]
    1d68:	b	1c7c <grub_mod_fini+0x192c>
    1d6c:	ldr	x0, [x19, #8]
    1d70:	ldrb	w20, [x0, w1, sxtw]
    1d74:	b	1c7c <grub_mod_fini+0x192c>
    1d78:	and	w0, w20, #0xffffffdf
    1d7c:	sub	w0, w0, #0x41
    1d80:	and	w0, w0, #0xff
    1d84:	mov	w1, #0x1                   	// #1
    1d88:	cmp	w0, #0x19
    1d8c:	b.ls	1da0 <grub_mod_fini+0x1a50>  // b.plast
    1d90:	sub	w0, w20, #0x30
    1d94:	cmp	w20, #0x5f
    1d98:	ccmp	w0, #0x9, #0x0, ne  // ne = any
    1d9c:	cset	w1, ls  // ls = plast
    1da0:	ldrb	w0, [x21, #10]
    1da4:	bfi	w0, w1, #6, #1
    1da8:	strb	w0, [x21, #10]
    1dac:	b	1cd4 <grub_mod_fini+0x1984>
    1db0:	mov	w0, #0x2                   	// #2
    1db4:	mov	x1, #0x8400                	// #33792
    1db8:	tst	x22, x1
    1dbc:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1dc0:	mov	w0, #0xa                   	// #10
    1dc4:	strb	w0, [x21, #8]
    1dc8:	mov	w0, #0x2                   	// #2
    1dcc:	b	1c1c <grub_mod_fini+0x18cc>
    1dd0:	mov	w0, #0x2                   	// #2
    1dd4:	tbnz	w22, #14, 1c1c <grub_mod_fini+0x18cc>
    1dd8:	mov	w0, #0x4                   	// #4
    1ddc:	strb	w0, [x21, #8]
    1de0:	sub	w20, w20, #0x31
    1de4:	str	w20, [x21]
    1de8:	mov	w0, #0x2                   	// #2
    1dec:	b	1c1c <grub_mod_fini+0x18cc>
    1df0:	mov	w0, #0x2                   	// #2
    1df4:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1df8:	mov	w0, #0xc                   	// #12
    1dfc:	strb	w0, [x21, #8]
    1e00:	mov	w0, #0x6                   	// #6
    1e04:	str	w0, [x21]
    1e08:	mov	w0, #0x2                   	// #2
    1e0c:	b	1c1c <grub_mod_fini+0x18cc>
    1e10:	mov	w0, #0x2                   	// #2
    1e14:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1e18:	mov	w0, #0xc                   	// #12
    1e1c:	strb	w0, [x21, #8]
    1e20:	mov	w0, #0x9                   	// #9
    1e24:	str	w0, [x21]
    1e28:	mov	w0, #0x2                   	// #2
    1e2c:	b	1c1c <grub_mod_fini+0x18cc>
    1e30:	mov	w0, #0x2                   	// #2
    1e34:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1e38:	mov	w0, #0xc                   	// #12
    1e3c:	strb	w0, [x21, #8]
    1e40:	mov	w0, #0x100                 	// #256
    1e44:	str	w0, [x21]
    1e48:	mov	w0, #0x2                   	// #2
    1e4c:	b	1c1c <grub_mod_fini+0x18cc>
    1e50:	mov	w0, #0x2                   	// #2
    1e54:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1e58:	mov	w0, #0xc                   	// #12
    1e5c:	strb	w0, [x21, #8]
    1e60:	mov	w0, #0x200                 	// #512
    1e64:	str	w0, [x21]
    1e68:	mov	w0, #0x2                   	// #2
    1e6c:	b	1c1c <grub_mod_fini+0x18cc>
    1e70:	mov	w0, #0x2                   	// #2
    1e74:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1e78:	mov	w0, #0x20                  	// #32
    1e7c:	strb	w0, [x21, #8]
    1e80:	mov	w0, #0x2                   	// #2
    1e84:	b	1c1c <grub_mod_fini+0x18cc>
    1e88:	mov	w0, #0x2                   	// #2
    1e8c:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1e90:	mov	w0, #0x21                  	// #33
    1e94:	strb	w0, [x21, #8]
    1e98:	mov	w0, #0x2                   	// #2
    1e9c:	b	1c1c <grub_mod_fini+0x18cc>
    1ea0:	mov	w0, #0x2                   	// #2
    1ea4:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1ea8:	mov	w0, #0x22                  	// #34
    1eac:	strb	w0, [x21, #8]
    1eb0:	mov	w0, #0x2                   	// #2
    1eb4:	b	1c1c <grub_mod_fini+0x18cc>
    1eb8:	mov	w0, #0x2                   	// #2
    1ebc:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1ec0:	mov	w0, #0x23                  	// #35
    1ec4:	strb	w0, [x21, #8]
    1ec8:	mov	w0, #0x2                   	// #2
    1ecc:	b	1c1c <grub_mod_fini+0x18cc>
    1ed0:	mov	w0, #0x2                   	// #2
    1ed4:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1ed8:	mov	w0, #0xc                   	// #12
    1edc:	strb	w0, [x21, #8]
    1ee0:	mov	w0, #0x40                  	// #64
    1ee4:	str	w0, [x21]
    1ee8:	mov	w0, #0x2                   	// #2
    1eec:	b	1c1c <grub_mod_fini+0x18cc>
    1ef0:	mov	w0, #0x2                   	// #2
    1ef4:	tbnz	w22, #19, 1c1c <grub_mod_fini+0x18cc>
    1ef8:	mov	w0, #0xc                   	// #12
    1efc:	strb	w0, [x21, #8]
    1f00:	mov	w0, #0x80                  	// #128
    1f04:	str	w0, [x21]
    1f08:	mov	w0, #0x2                   	// #2
    1f0c:	b	1c1c <grub_mod_fini+0x18cc>
    1f10:	mov	w0, #0x2                   	// #2
    1f14:	tbnz	w22, #13, 1c1c <grub_mod_fini+0x18cc>
    1f18:	mov	w0, #0x8                   	// #8
    1f1c:	strb	w0, [x21, #8]
    1f20:	mov	w0, #0x2                   	// #2
    1f24:	b	1c1c <grub_mod_fini+0x18cc>
    1f28:	mov	w0, #0x2                   	// #2
    1f2c:	tbnz	w22, #13, 1c1c <grub_mod_fini+0x18cc>
    1f30:	mov	w0, #0x9                   	// #9
    1f34:	strb	w0, [x21, #8]
    1f38:	mov	w0, #0x2                   	// #2
    1f3c:	b	1c1c <grub_mod_fini+0x18cc>
    1f40:	mov	x2, #0x402                 	// #1026
    1f44:	and	x2, x22, x2
    1f48:	mov	w0, #0x2                   	// #2
    1f4c:	cmp	x2, #0x2
    1f50:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1f54:	mov	w0, #0x12                  	// #18
    1f58:	strb	w0, [x21, #8]
    1f5c:	mov	w0, #0x2                   	// #2
    1f60:	b	1c1c <grub_mod_fini+0x18cc>
    1f64:	mov	x2, #0x402                 	// #1026
    1f68:	and	x2, x22, x2
    1f6c:	mov	w0, #0x2                   	// #2
    1f70:	cmp	x2, #0x2
    1f74:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1f78:	mov	w0, #0x13                  	// #19
    1f7c:	strb	w0, [x21, #8]
    1f80:	mov	w0, #0x2                   	// #2
    1f84:	b	1c1c <grub_mod_fini+0x18cc>
    1f88:	mov	x2, #0x1200                	// #4608
    1f8c:	and	x2, x22, x2
    1f90:	mov	w0, #0x2                   	// #2
    1f94:	cmp	x2, #0x200
    1f98:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1f9c:	mov	w0, #0x17                  	// #23
    1fa0:	strb	w0, [x21, #8]
    1fa4:	mov	w0, #0x2                   	// #2
    1fa8:	b	1c1c <grub_mod_fini+0x18cc>
    1fac:	mov	x2, #0x1200                	// #4608
    1fb0:	and	x2, x22, x2
    1fb4:	mov	w0, #0x2                   	// #2
    1fb8:	cmp	x2, #0x200
    1fbc:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    1fc0:	mov	w0, #0x18                  	// #24
    1fc4:	strb	w0, [x21, #8]
    1fc8:	mov	w0, #0x2                   	// #2
    1fcc:	b	1c1c <grub_mod_fini+0x18cc>
    1fd0:	and	w0, w20, #0xffffffdf
    1fd4:	sub	w0, w0, #0x41
    1fd8:	and	w0, w0, #0xff
    1fdc:	mov	w1, #0x1                   	// #1
    1fe0:	cmp	w0, #0x19
    1fe4:	b.ls	1ff8 <grub_mod_fini+0x1ca8>  // b.plast
    1fe8:	sub	w0, w20, #0x30
    1fec:	cmp	w20, #0x5f
    1ff0:	ccmp	w0, #0x9, #0x0, ne  // ne = any
    1ff4:	cset	w1, ls  // ls = plast
    1ff8:	ldrb	w0, [x21, #10]
    1ffc:	bfi	w0, w1, #6, #1
    2000:	strb	w0, [x21, #10]
    2004:	b	1bc4 <grub_mod_fini+0x1874>
    2008:	cmp	w20, #0x29
    200c:	b.eq	216c <grub_mod_fini+0x1e1c>  // b.none
    2010:	b.ls	2048 <grub_mod_fini+0x1cf8>  // b.plast
    2014:	cmp	w20, #0x2a
    2018:	b.eq	213c <grub_mod_fini+0x1dec>  // b.none
    201c:	mov	w0, #0x1                   	// #1
    2020:	cmp	w20, #0x2b
    2024:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    2028:	mov	w0, #0x1                   	// #1
    202c:	mov	x1, #0x402                 	// #1026
    2030:	tst	x22, x1
    2034:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    2038:	mov	w0, #0x12                  	// #18
    203c:	strb	w0, [x21, #8]
    2040:	mov	w0, #0x1                   	// #1
    2044:	b	1c1c <grub_mod_fini+0x18cc>
    2048:	cmp	w20, #0x24
    204c:	b.eq	21a4 <grub_mod_fini+0x1e54>  // b.none
    2050:	cmp	w20, #0x28
    2054:	b.ne	2070 <grub_mod_fini+0x1d20>  // b.any
    2058:	mov	w0, #0x1                   	// #1
    205c:	tbz	w22, #13, 1c1c <grub_mod_fini+0x18cc>
    2060:	mov	w0, #0x8                   	// #8
    2064:	strb	w0, [x21, #8]
    2068:	mov	w0, #0x1                   	// #1
    206c:	b	1c1c <grub_mod_fini+0x18cc>
    2070:	mov	w0, #0x1                   	// #1
    2074:	cmp	w20, #0xa
    2078:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    207c:	mov	w0, #0x1                   	// #1
    2080:	tbz	w22, #11, 1c1c <grub_mod_fini+0x18cc>
    2084:	mov	w0, #0xa                   	// #10
    2088:	strb	w0, [x21, #8]
    208c:	mov	w0, #0x1                   	// #1
    2090:	b	1c1c <grub_mod_fini+0x18cc>
    2094:	cmp	w20, #0x5b
    2098:	b.eq	2184 <grub_mod_fini+0x1e34>  // b.none
    209c:	cmp	w20, #0x5e
    20a0:	b.ne	20ec <grub_mod_fini+0x1d9c>  // b.any
    20a4:	and	x0, x22, #0xfffff8
    20a8:	and	x0, x0, #0xffffffffff80000f
    20ac:	cbnz	x0, 20d4 <grub_mod_fini+0x1d84>
    20b0:	ldr	w0, [x19, #56]
    20b4:	cbz	w0, 20d4 <grub_mod_fini+0x1d84>
    20b8:	ldr	x1, [x19, #8]
    20bc:	add	x0, x1, w0, sxtw
    20c0:	ldurb	w1, [x0, #-1]
    20c4:	tst	x22, #0x800
    20c8:	mov	w0, #0x1                   	// #1
    20cc:	ccmp	w1, #0xa, #0x0, ne  // ne = any
    20d0:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    20d4:	mov	w0, #0xc                   	// #12
    20d8:	strb	w0, [x21, #8]
    20dc:	mov	w0, #0x10                  	// #16
    20e0:	str	w0, [x21]
    20e4:	mov	w0, #0x1                   	// #1
    20e8:	b	1c1c <grub_mod_fini+0x18cc>
    20ec:	mov	w0, #0x1                   	// #1
    20f0:	cmp	w20, #0x3f
    20f4:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    20f8:	mov	w0, #0x1                   	// #1
    20fc:	mov	x1, #0x402                 	// #1026
    2100:	tst	x22, x1
    2104:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    2108:	mov	w0, #0x13                  	// #19
    210c:	strb	w0, [x21, #8]
    2110:	mov	w0, #0x1                   	// #1
    2114:	b	1c1c <grub_mod_fini+0x18cc>
    2118:	mov	x2, #0x8400                	// #33792
    211c:	and	x2, x22, x2
    2120:	mov	w0, #0x1                   	// #1
    2124:	cmp	x2, #0x8, lsl #12
    2128:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    212c:	mov	w0, #0xa                   	// #10
    2130:	strb	w0, [x21, #8]
    2134:	mov	w0, #0x1                   	// #1
    2138:	b	1c1c <grub_mod_fini+0x18cc>
    213c:	mov	w0, #0xb                   	// #11
    2140:	strb	w0, [x21, #8]
    2144:	mov	w0, #0x1                   	// #1
    2148:	b	1c1c <grub_mod_fini+0x18cc>
    214c:	mov	w0, #0x1                   	// #1
    2150:	mov	x1, #0x1200                	// #4608
    2154:	bics	xzr, x1, x22
    2158:	b.ne	1c1c <grub_mod_fini+0x18cc>  // b.any
    215c:	mov	w0, #0x17                  	// #23
    2160:	strb	w0, [x21, #8]
    2164:	mov	w0, #0x1                   	// #1
    2168:	b	1c1c <grub_mod_fini+0x18cc>
    216c:	mov	w0, #0x1                   	// #1
    2170:	tbz	w22, #13, 1c1c <grub_mod_fini+0x18cc>
    2174:	mov	w0, #0x9                   	// #9
    2178:	strb	w0, [x21, #8]
    217c:	mov	w0, #0x1                   	// #1
    2180:	b	1c1c <grub_mod_fini+0x18cc>
    2184:	mov	w0, #0x14                  	// #20
    2188:	strb	w0, [x21, #8]
    218c:	mov	w0, #0x1                   	// #1
    2190:	b	1c1c <grub_mod_fini+0x18cc>
    2194:	mov	w0, #0x5                   	// #5
    2198:	strb	w0, [x21, #8]
    219c:	mov	w0, #0x1                   	// #1
    21a0:	b	1c1c <grub_mod_fini+0x18cc>
    21a4:	tbnz	w22, #3, 21bc <grub_mod_fini+0x1e6c>
    21a8:	ldr	w0, [x19, #56]
    21ac:	add	w0, w0, #0x1
    21b0:	ldr	w1, [x19, #64]
    21b4:	cmp	w0, w1
    21b8:	b.ne	21d4 <grub_mod_fini+0x1e84>  // b.any
    21bc:	mov	w0, #0xc                   	// #12
    21c0:	strb	w0, [x21, #8]
    21c4:	mov	w0, #0x20                  	// #32
    21c8:	str	w0, [x21]
    21cc:	mov	w0, #0x1                   	// #1
    21d0:	b	1c1c <grub_mod_fini+0x18cc>
    21d4:	str	w0, [x19, #56]
    21d8:	mov	x2, x22
    21dc:	mov	x1, x19
    21e0:	add	x0, sp, #0x30
    21e4:	bl	1afc <grub_mod_fini+0x17ac>
    21e8:	ldr	w0, [x19, #56]
    21ec:	sub	w0, w0, #0x1
    21f0:	str	w0, [x19, #56]
    21f4:	ldrb	w1, [sp, #56]
    21f8:	sub	w1, w1, #0x9
    21fc:	and	w1, w1, #0xff
    2200:	mov	w0, #0x1                   	// #1
    2204:	cmp	w1, w0
    2208:	b.hi	1c1c <grub_mod_fini+0x18cc>  // b.pmore
    220c:	b	21bc <grub_mod_fini+0x1e6c>
    2210:	mov	w0, #0x2                   	// #2
    2214:	b	1c1c <grub_mod_fini+0x18cc>
    2218:	ldr	w0, [x19, #40]
    221c:	add	w1, w1, w0
    2220:	ldr	x0, [x19]
    2224:	ldrb	w20, [x0, w1, sxtw]
    2228:	b	1c7c <grub_mod_fini+0x192c>
    222c:	nop
	...
    2238:	stp	x29, x30, [sp, #-32]!
    223c:	mov	x29, sp
    2240:	str	x19, [sp, #16]
    2244:	mov	x19, x1
    2248:	bl	1afc <grub_mod_fini+0x17ac>
    224c:	ldr	w1, [x19, #56]
    2250:	add	w1, w1, w0
    2254:	str	w1, [x19, #56]
    2258:	ldr	x19, [sp, #16]
    225c:	ldp	x29, x30, [sp], #32
    2260:	ret
    2264:	stp	x29, x30, [sp, #-96]!
    2268:	mov	x29, sp
    226c:	stp	x19, x20, [sp, #16]
    2270:	stp	x21, x22, [sp, #32]
    2274:	stp	x23, x24, [sp, #48]
    2278:	stp	x25, x26, [sp, #64]
    227c:	mov	x20, x0
    2280:	mov	x19, x1
    2284:	mov	x22, x2
    2288:	mov	w24, w3
    228c:	mov	x25, x5
    2290:	and	w26, w6, #0xff
    2294:	ldr	w23, [x1, #56]
    2298:	mov	w1, w23
    229c:	mov	x0, x19
    22a0:	bl	1198 <grub_mod_fini+0xe48>
    22a4:	cmp	w0, #0x1
    22a8:	b.gt	22ec <grub_mod_fini+0x1f9c>
    22ac:	add	w23, w23, w24
    22b0:	str	w23, [x19, #56]
    22b4:	ldrb	w1, [x22, #8]
    22b8:	and	w0, w1, #0xfffffffb
    22bc:	and	w0, w0, #0xff
    22c0:	cmp	w0, #0x1a
    22c4:	ccmp	w1, #0x1c, #0x4, ne  // ne = any
    22c8:	b.eq	2330 <grub_mod_fini+0x1fe0>  // b.none
    22cc:	cmp	w26, #0x0
    22d0:	ccmp	w1, #0x16, #0x0, eq  // eq = none
    22d4:	b.eq	24d4 <grub_mod_fini+0x2184>  // b.none
    22d8:	str	wzr, [x20]
    22dc:	ldrb	w0, [x22]
    22e0:	strb	w0, [x20, #8]
    22e4:	mov	w0, #0x0                   	// #0
    22e8:	b	2318 <grub_mod_fini+0x1fc8>
    22ec:	mov	w21, w0
    22f0:	mov	w0, #0x1                   	// #1
    22f4:	str	w0, [x20]
    22f8:	ldr	w1, [x19, #56]
    22fc:	mov	x0, x19
    2300:	bl	11f4 <grub_mod_fini+0xea4>
    2304:	str	w0, [x20, #8]
    2308:	ldr	w0, [x19, #56]
    230c:	add	w21, w0, w21
    2310:	str	w21, [x19, #56]
    2314:	mov	w0, #0x0                   	// #0
    2318:	ldp	x19, x20, [sp, #16]
    231c:	ldp	x21, x22, [sp, #32]
    2320:	ldp	x23, x24, [sp, #48]
    2324:	ldp	x25, x26, [sp, #64]
    2328:	ldp	x29, x30, [sp], #96
    232c:	ret
    2330:	ldr	w1, [x19, #72]
    2334:	mov	w0, #0x7                   	// #7
    2338:	cmp	w23, w1
    233c:	b.ge	2318 <grub_mod_fini+0x1fc8>  // b.tcont
    2340:	ldrb	w24, [x22]
    2344:	mov	x21, #0x0                   	// #0
    2348:	b	2428 <grub_mod_fini+0x20d8>
    234c:	ldrb	w0, [x19, #99]
    2350:	cbnz	w0, 236c <grub_mod_fini+0x201c>
    2354:	ldr	x1, [x19, #8]
    2358:	ldr	w0, [x19, #56]
    235c:	add	w2, w0, #0x1
    2360:	str	w2, [x19, #56]
    2364:	ldrb	w23, [x1, w0, sxtw]
    2368:	b	244c <grub_mod_fini+0x20fc>
    236c:	ldrb	w0, [x19, #100]
    2370:	cbz	w0, 23f4 <grub_mod_fini+0x20a4>
    2374:	ldr	w26, [x19, #56]
    2378:	ldr	w0, [x19, #44]
    237c:	cmp	w26, w0
    2380:	b.eq	2394 <grub_mod_fini+0x2044>  // b.none
    2384:	ldr	x0, [x19, #16]
    2388:	ldr	w0, [x0, w26, sxtw #2]
    238c:	cmn	w0, #0x1
    2390:	b.eq	23c8 <grub_mod_fini+0x2078>  // b.none
    2394:	ldr	x0, [x19, #24]
    2398:	ldr	w0, [x0, w26, sxtw #2]
    239c:	ldr	w1, [x19, #40]
    23a0:	add	w0, w0, w1
    23a4:	ldr	x1, [x19]
    23a8:	ldrb	w23, [x1, w0, sxtw]
    23ac:	tst	w23, #0xffffff80
    23b0:	b.eq	23dc <grub_mod_fini+0x208c>  // b.none
    23b4:	ldr	x0, [x19, #8]
    23b8:	add	w1, w26, #0x1
    23bc:	str	w1, [x19, #56]
    23c0:	ldrb	w23, [x0, w26, sxtw]
    23c4:	b	244c <grub_mod_fini+0x20fc>
    23c8:	ldr	x0, [x19, #8]
    23cc:	add	w1, w26, #0x1
    23d0:	str	w1, [x19, #56]
    23d4:	ldrb	w23, [x0, w26, sxtw]
    23d8:	b	244c <grub_mod_fini+0x20fc>
    23dc:	mov	w1, w26
    23e0:	mov	x0, x19
    23e4:	bl	1198 <grub_mod_fini+0xe48>
    23e8:	add	w26, w26, w0
    23ec:	str	w26, [x19, #56]
    23f0:	b	244c <grub_mod_fini+0x20fc>
    23f4:	ldr	x2, [x19]
    23f8:	ldr	w0, [x19, #40]
    23fc:	ldr	w1, [x19, #56]
    2400:	add	w3, w1, #0x1
    2404:	str	w3, [x19, #56]
    2408:	add	w0, w0, w1
    240c:	ldrb	w23, [x2, w0, sxtw]
    2410:	b	244c <grub_mod_fini+0x20fc>
    2414:	ldr	x0, [x20, #8]
    2418:	strb	w23, [x0, x21]
    241c:	add	x21, x21, #0x1
    2420:	cmp	x21, #0x20
    2424:	b.eq	2500 <grub_mod_fini+0x21b0>  // b.none
    2428:	mov	w25, w21
    242c:	ldrb	w0, [x22, #8]
    2430:	cmp	w0, #0x1e
    2434:	b.eq	234c <grub_mod_fini+0x1ffc>  // b.none
    2438:	ldr	x1, [x19, #8]
    243c:	ldr	w0, [x19, #56]
    2440:	add	w2, w0, #0x1
    2444:	str	w2, [x19, #56]
    2448:	ldrb	w23, [x1, w0, sxtw]
    244c:	ldr	w0, [x19, #56]
    2450:	ldr	w1, [x19, #72]
    2454:	cmp	w1, w0
    2458:	b.le	24f8 <grub_mod_fini+0x21a8>
    245c:	cmp	w24, w23
    2460:	b.ne	2414 <grub_mod_fini+0x20c4>  // b.any
    2464:	ldr	x1, [x19, #8]
    2468:	ldrb	w1, [x1, w0, sxtw]
    246c:	cmp	w1, #0x5d
    2470:	b.ne	2414 <grub_mod_fini+0x20c4>  // b.any
    2474:	add	w0, w0, #0x1
    2478:	str	w0, [x19, #56]
    247c:	ldr	x0, [x20, #8]
    2480:	strb	wzr, [x0, w25, sxtw]
    2484:	ldrb	w1, [x22, #8]
    2488:	cmp	w1, #0x1c
    248c:	b.eq	24b4 <grub_mod_fini+0x2164>  // b.none
    2490:	cmp	w1, #0x1e
    2494:	b.eq	24c4 <grub_mod_fini+0x2174>  // b.none
    2498:	mov	w0, #0x0                   	// #0
    249c:	cmp	w1, #0x1a
    24a0:	b.ne	2318 <grub_mod_fini+0x1fc8>  // b.any
    24a4:	mov	w0, #0x3                   	// #3
    24a8:	str	w0, [x20]
    24ac:	mov	w0, #0x0                   	// #0
    24b0:	b	2318 <grub_mod_fini+0x1fc8>
    24b4:	mov	w0, #0x2                   	// #2
    24b8:	str	w0, [x20]
    24bc:	mov	w0, #0x0                   	// #0
    24c0:	b	2318 <grub_mod_fini+0x1fc8>
    24c4:	mov	w0, #0x4                   	// #4
    24c8:	str	w0, [x20]
    24cc:	mov	w0, #0x0                   	// #0
    24d0:	b	2318 <grub_mod_fini+0x1fc8>
    24d4:	mov	x2, x25
    24d8:	mov	x1, x19
    24dc:	add	x0, sp, #0x50
    24e0:	bl	14a4 <grub_mod_fini+0x1154>
    24e4:	ldrb	w0, [sp, #88]
    24e8:	cmp	w0, #0x15
    24ec:	b.eq	22d8 <grub_mod_fini+0x1f88>  // b.none
    24f0:	mov	w0, #0xb                   	// #11
    24f4:	b	2318 <grub_mod_fini+0x1fc8>
    24f8:	mov	w0, #0x7                   	// #7
    24fc:	b	2318 <grub_mod_fini+0x1fc8>
    2500:	mov	w0, #0x7                   	// #7
    2504:	b	2318 <grub_mod_fini+0x1fc8>
    2508:	stp	x29, x30, [sp, #-64]!
    250c:	mov	x29, sp
    2510:	stp	x19, x20, [sp, #16]
    2514:	stp	x21, x22, [sp, #32]
    2518:	stp	x23, x24, [sp, #48]
    251c:	mov	x22, x0
    2520:	mov	x19, x1
    2524:	mov	x21, x2
    2528:	mov	w20, #0xffffffff            	// #-1
    252c:	mov	w24, #0x8030                	// #32816
    2530:	mov	w23, #0xfffffffe            	// #-2
    2534:	b	253c <grub_mod_fini+0x21ec>
    2538:	mov	w20, w23
    253c:	mov	x2, x21
    2540:	mov	x1, x22
    2544:	mov	x0, x19
    2548:	bl	2238 <grub_mod_fini+0x1ee8>
    254c:	ldrb	w1, [x19]
    2550:	ldrb	w3, [x19, #8]
    2554:	cmp	w3, #0x2
    2558:	b.eq	25b4 <grub_mod_fini+0x2264>  // b.none
    255c:	cmp	w1, #0x2c
    2560:	ccmp	w3, #0x18, #0x4, ne  // ne = any
    2564:	b.eq	25b8 <grub_mod_fini+0x2268>  // b.none
    2568:	cmp	w3, #0x1
    256c:	b.ne	2538 <grub_mod_fini+0x21e8>  // b.any
    2570:	sub	w0, w1, #0x30
    2574:	and	w0, w0, #0xff
    2578:	cmp	w0, #0x9
    257c:	ccmn	w20, #0x2, #0x4, ls  // ls = plast
    2580:	b.ne	258c <grub_mod_fini+0x223c>  // b.any
    2584:	mov	w20, w23
    2588:	b	253c <grub_mod_fini+0x21ec>
    258c:	cmn	w20, #0x1
    2590:	b.eq	25ac <grub_mod_fini+0x225c>  // b.none
    2594:	add	w20, w20, w20, lsl #2
    2598:	add	w1, w1, w20, lsl #1
    259c:	cmp	w1, w24
    25a0:	csel	w1, w1, w24, le
    25a4:	sub	w20, w1, #0x30
    25a8:	b	253c <grub_mod_fini+0x21ec>
    25ac:	sub	w20, w1, #0x30
    25b0:	b	253c <grub_mod_fini+0x21ec>
    25b4:	mov	w20, #0xfffffffe            	// #-2
    25b8:	mov	w0, w20
    25bc:	ldp	x19, x20, [sp, #16]
    25c0:	ldp	x21, x22, [sp, #32]
    25c4:	ldp	x23, x24, [sp, #48]
    25c8:	ldp	x29, x30, [sp], #64
    25cc:	ret
    25d0:	stp	x29, x30, [sp, #-48]!
    25d4:	mov	x29, sp
    25d8:	stp	x19, x20, [sp, #16]
    25dc:	str	x21, [sp, #32]
    25e0:	mov	x19, x0
    25e4:	mov	x21, x1
    25e8:	mov	x20, x2
    25ec:	b	2620 <grub_mod_fini+0x22d0>
    25f0:	mov	x19, x4
    25f4:	mov	x1, x19
    25f8:	mov	x0, x20
    25fc:	blr	x21
    2600:	cbnz	w0, 2634 <grub_mod_fini+0x22e4>
    2604:	ldr	x4, [x19]
    2608:	cbz	x4, 2634 <grub_mod_fini+0x22e4>
    260c:	ldr	x3, [x4, #16]
    2610:	cmp	x3, #0x0
    2614:	ccmp	x3, x19, #0x4, ne  // ne = any
    2618:	b.eq	25f0 <grub_mod_fini+0x22a0>  // b.none
    261c:	mov	x19, x3
    2620:	ldr	x3, [x19, #8]
    2624:	cbnz	x3, 261c <grub_mod_fini+0x22cc>
    2628:	ldr	x3, [x19, #16]
    262c:	cbnz	x3, 261c <grub_mod_fini+0x22cc>
    2630:	b	25f4 <grub_mod_fini+0x22a4>
    2634:	ldp	x19, x20, [sp, #16]
    2638:	ldr	x21, [sp, #32]
    263c:	ldp	x29, x30, [sp], #48
    2640:	ret
    2644:	stp	x29, x30, [sp, #-48]!
    2648:	mov	x29, sp
    264c:	stp	x19, x20, [sp, #16]
    2650:	str	x21, [sp, #32]
    2654:	mov	x19, x0
    2658:	mov	x21, x1
    265c:	mov	x20, x2
    2660:	b	266c <grub_mod_fini+0x231c>
    2664:	mov	x3, x4
    2668:	mov	x19, x3
    266c:	mov	x1, x19
    2670:	mov	x0, x20
    2674:	blr	x21
    2678:	cbnz	w0, 26a8 <grub_mod_fini+0x2358>
    267c:	ldr	x3, [x19, #8]
    2680:	cbnz	x3, 2668 <grub_mod_fini+0x2318>
    2684:	ldr	x4, [x19, #16]
    2688:	cmp	x4, #0x0
    268c:	ccmp	x4, x3, #0x4, ne  // ne = any
    2690:	b.ne	2664 <grub_mod_fini+0x2314>  // b.any
    2694:	ldr	x4, [x19]
    2698:	mov	x3, x19
    269c:	cbz	x4, 26a8 <grub_mod_fini+0x2358>
    26a0:	mov	x19, x4
    26a4:	b	2684 <grub_mod_fini+0x2334>
    26a8:	ldp	x19, x20, [sp, #16]
    26ac:	ldr	x21, [sp, #32]
    26b0:	ldp	x29, x30, [sp], #48
    26b4:	ret
    26b8:	mov	x3, x0
    26bc:	tbnz	w1, #31, 26fc <grub_mod_fini+0x23ac>
    26c0:	ldr	w0, [x0, #64]
    26c4:	cmp	w0, w1
    26c8:	b.eq	2704 <grub_mod_fini+0x23b4>  // b.none
    26cc:	ldr	w0, [x3, #104]
    26d0:	cmp	w0, #0x1
    26d4:	b.le	2768 <grub_mod_fini+0x2418>
    26d8:	ldr	x0, [x3, #16]
    26dc:	sxtw	x1, w1
    26e0:	ldr	w2, [x0, x1, lsl #2]
    26e4:	cmn	w2, #0x1
    26e8:	b.ne	2718 <grub_mod_fini+0x23c8>  // b.any
    26ec:	sub	x1, x1, #0x1
    26f0:	tbz	w1, #31, 26e0 <grub_mod_fini+0x2390>
    26f4:	ldr	w0, [x3, #76]
    26f8:	ret
    26fc:	ldr	w0, [x0, #76]
    2700:	b	26f8 <grub_mod_fini+0x23a8>
    2704:	tst	x2, #0x2
    2708:	mov	w0, #0x8                   	// #8
    270c:	mov	w1, #0xa                   	// #10
    2710:	csel	w0, w0, w1, ne  // ne = any
    2714:	b	26f8 <grub_mod_fini+0x23a8>
    2718:	ldrb	w0, [x3, #102]
    271c:	cbnz	w0, 2740 <grub_mod_fini+0x23f0>
    2720:	mov	w0, #0x0                   	// #0
    2724:	cmp	w2, #0xa
    2728:	b.ne	26f8 <grub_mod_fini+0x23a8>  // b.any
    272c:	ldrb	w0, [x3, #101]
    2730:	cmp	w0, #0x0
    2734:	cset	w0, ne  // ne = any
    2738:	lsl	w0, w0, #1
    273c:	b	26f8 <grub_mod_fini+0x23a8>
    2740:	and	w1, w2, #0xffffffdf
    2744:	sub	w1, w1, #0x41
    2748:	mov	w0, #0x1                   	// #1
    274c:	cmp	w1, #0x19
    2750:	b.ls	26f8 <grub_mod_fini+0x23a8>  // b.plast
    2754:	sub	w1, w2, #0x30
    2758:	cmp	w2, #0x5f
    275c:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    2760:	b.ls	26f8 <grub_mod_fini+0x23a8>  // b.plast
    2764:	b	2720 <grub_mod_fini+0x23d0>
    2768:	ldr	x0, [x3, #8]
    276c:	ldrb	w2, [x0, w1, sxtw]
    2770:	ubfx	x1, x2, #6, #2
    2774:	ldr	x0, [x3, #88]
    2778:	ldr	x1, [x0, x1, lsl #3]
    277c:	lsr	x1, x1, x2
    2780:	mov	w0, #0x1                   	// #1
    2784:	tbnz	w1, #0, 26f8 <grub_mod_fini+0x23a8>
    2788:	mov	w0, #0x0                   	// #0
    278c:	cmp	w2, #0xa
    2790:	b.ne	26f8 <grub_mod_fini+0x23a8>  // b.any
    2794:	ldrb	w0, [x3, #101]
    2798:	cmp	w0, #0x0
    279c:	cset	w0, ne  // ne = any
    27a0:	lsl	w0, w0, #1
    27a4:	b	26f8 <grub_mod_fini+0x23a8>
    27a8:	stp	x29, x30, [sp, #-32]!
    27ac:	mov	x29, sp
    27b0:	str	x19, [sp, #16]
    27b4:	mov	x4, x0
    27b8:	mov	x19, x1
    27bc:	mov	w1, w2
    27c0:	ldr	x0, [x0, #8]
    27c4:	ldrb	w2, [x0, w2, sxtw]
    27c8:	ldrb	w3, [x19, #8]
    27cc:	cmp	w3, #0x5
    27d0:	b.eq	2858 <grub_mod_fini+0x2508>  // b.none
    27d4:	b.hi	2844 <grub_mod_fini+0x24f4>  // b.pmore
    27d8:	cmp	w3, #0x1
    27dc:	b.eq	2878 <grub_mod_fini+0x2528>  // b.none
    27e0:	mov	w0, #0x0                   	// #0
    27e4:	cmp	w3, #0x3
    27e8:	b.ne	28c0 <grub_mod_fini+0x2570>  // b.any
    27ec:	ubfx	x3, x2, #6, #2
    27f0:	ldr	x0, [x19]
    27f4:	ldr	x0, [x0, x3, lsl #3]
    27f8:	lsr	x2, x0, x2
    27fc:	mov	w0, #0x0                   	// #0
    2800:	tbz	w2, #0, 28c0 <grub_mod_fini+0x2570>
    2804:	ldr	w2, [x19, #8]
    2808:	mov	w0, #0x1                   	// #1
    280c:	tst	w2, #0x3ff00
    2810:	b.eq	28c0 <grub_mod_fini+0x2570>  // b.none
    2814:	ldr	w2, [x4, #120]
    2818:	mov	x0, x4
    281c:	bl	26b8 <grub_mod_fini+0x2368>
    2820:	mov	w1, w0
    2824:	ldr	w0, [x19, #8]
    2828:	ubfx	x2, x0, #8, #10
    282c:	tbz	w0, #10, 28a0 <grub_mod_fini+0x2550>
    2830:	mov	w0, #0x0                   	// #0
    2834:	tbz	w1, #0, 28c0 <grub_mod_fini+0x2570>
    2838:	mov	w0, #0x0                   	// #0
    283c:	tbz	w2, #3, 28a8 <grub_mod_fini+0x2558>
    2840:	b	28c0 <grub_mod_fini+0x2570>
    2844:	mov	w0, #0x0                   	// #0
    2848:	cmp	w3, #0x7
    284c:	b.ne	28c0 <grub_mod_fini+0x2570>  // b.any
    2850:	mov	w0, #0x0                   	// #0
    2854:	tbnz	w2, #7, 28c0 <grub_mod_fini+0x2570>
    2858:	cmp	w2, #0xa
    285c:	b.eq	288c <grub_mod_fini+0x253c>  // b.none
    2860:	cbnz	w2, 2804 <grub_mod_fini+0x24b4>
    2864:	ldr	x0, [x4, #112]
    2868:	ldr	x2, [x0, #200]
    286c:	mov	w0, #0x0                   	// #0
    2870:	tbz	w2, #7, 2804 <grub_mod_fini+0x24b4>
    2874:	b	28c0 <grub_mod_fini+0x2570>
    2878:	ldrb	w3, [x19]
    287c:	mov	w0, #0x0                   	// #0
    2880:	cmp	w3, w2
    2884:	b.ne	28c0 <grub_mod_fini+0x2570>  // b.any
    2888:	b	2804 <grub_mod_fini+0x24b4>
    288c:	ldr	x0, [x4, #112]
    2890:	ldr	x2, [x0, #200]
    2894:	mov	w0, #0x0                   	// #0
    2898:	tbnz	w2, #6, 2804 <grub_mod_fini+0x24b4>
    289c:	b	28c0 <grub_mod_fini+0x2570>
    28a0:	tbz	w2, #3, 28a8 <grub_mod_fini+0x2558>
    28a4:	tbnz	w1, #0, 28cc <grub_mod_fini+0x257c>
    28a8:	tbz	w2, #5, 28b4 <grub_mod_fini+0x2564>
    28ac:	mov	w0, #0x0                   	// #0
    28b0:	tbz	w1, #1, 28c0 <grub_mod_fini+0x2570>
    28b4:	ubfx	x0, x1, #3, #1
    28b8:	tst	x2, #0x80
    28bc:	csinc	w0, w0, wzr, ne  // ne = any
    28c0:	ldr	x19, [sp, #16]
    28c4:	ldp	x29, x30, [sp], #32
    28c8:	ret
    28cc:	mov	w0, #0x0                   	// #0
    28d0:	b	28c0 <grub_mod_fini+0x2570>
    28d4:	stp	x29, x30, [sp, #-32]!
    28d8:	mov	x29, sp
    28dc:	stp	x19, x20, [sp, #16]
    28e0:	mov	x19, x0
    28e4:	mov	x20, x1
    28e8:	mov	w1, w2
    28ec:	ldr	w2, [x0, #120]
    28f0:	bl	26b8 <grub_mod_fini+0x2368>
    28f4:	ldr	w4, [x20, #12]
    28f8:	cmp	w4, #0x0
    28fc:	b.le	2944 <grub_mod_fini+0x25f4>
    2900:	ldr	x6, [x20, #16]
    2904:	ldr	x1, [x19, #112]
    2908:	ldr	x5, [x1]
    290c:	mov	x2, #0x0                   	// #0
    2910:	and	w9, w0, #0x8
    2914:	and	w8, w0, #0x2
    2918:	and	w7, w0, #0x1
    291c:	b	2958 <grub_mod_fini+0x2608>
    2920:	tbz	w1, #3, 2928 <grub_mod_fini+0x25d8>
    2924:	cbnz	w7, 294c <grub_mod_fini+0x25fc>
    2928:	tbz	w1, #5, 2930 <grub_mod_fini+0x25e0>
    292c:	cbz	w8, 294c <grub_mod_fini+0x25fc>
    2930:	tbz	w1, #7, 2938 <grub_mod_fini+0x25e8>
    2934:	cbz	w9, 294c <grub_mod_fini+0x25fc>
    2938:	ldp	x19, x20, [sp, #16]
    293c:	ldp	x29, x30, [sp], #32
    2940:	ret
    2944:	mov	w0, #0x0                   	// #0
    2948:	b	2938 <grub_mod_fini+0x25e8>
    294c:	add	x2, x2, #0x1
    2950:	cmp	w4, w2
    2954:	b.le	2988 <grub_mod_fini+0x2638>
    2958:	ldr	w0, [x6, x2, lsl #2]
    295c:	add	x3, x5, w0, sxtw #4
    2960:	ldr	w1, [x3, #8]
    2964:	ubfx	x1, x1, #8, #10
    2968:	ldrb	w3, [x3, #8]
    296c:	cmp	w3, #0x2
    2970:	b.ne	294c <grub_mod_fini+0x25fc>  // b.any
    2974:	cbz	w1, 2938 <grub_mod_fini+0x25e8>
    2978:	tbz	w1, #2, 2920 <grub_mod_fini+0x25d0>
    297c:	cbz	w7, 294c <grub_mod_fini+0x25fc>
    2980:	tbz	w1, #3, 2928 <grub_mod_fini+0x25d8>
    2984:	b	294c <grub_mod_fini+0x25fc>
    2988:	mov	w0, #0x0                   	// #0
    298c:	b	2938 <grub_mod_fini+0x25e8>
    2990:	stp	x29, x30, [sp, #-48]!
    2994:	mov	x29, sp
    2998:	stp	x19, x20, [sp, #16]
    299c:	mov	x19, x0
    29a0:	mov	w20, w1
    29a4:	ldr	w0, [x0, #104]
    29a8:	cmp	w0, #0x1
    29ac:	b.le	29f8 <grub_mod_fini+0x26a8>
    29b0:	str	x21, [sp, #32]
    29b4:	sxtw	x21, w1
    29b8:	mov	x0, #0x7fffffff            	// #2147483647
    29bc:	cmp	x0, w1, sxtw
    29c0:	b.cc	2a34 <grub_mod_fini+0x26e4>  // b.lo, b.ul, b.last
    29c4:	lsl	x21, x21, #2
    29c8:	mov	x1, x21
    29cc:	ldr	x0, [x19, #16]
    29d0:	bl	0 <grub_realloc>
    29d4:	cbz	x0, 2a40 <grub_mod_fini+0x26f0>
    29d8:	str	x0, [x19, #16]
    29dc:	ldr	x0, [x19, #24]
    29e0:	cbz	x0, 2a14 <grub_mod_fini+0x26c4>
    29e4:	mov	x1, x21
    29e8:	bl	0 <grub_realloc>
    29ec:	cbz	x0, 2a4c <grub_mod_fini+0x26fc>
    29f0:	str	x0, [x19, #24]
    29f4:	ldr	x21, [sp, #32]
    29f8:	ldrb	w0, [x19, #99]
    29fc:	cbnz	w0, 2a1c <grub_mod_fini+0x26cc>
    2a00:	str	w20, [x19, #52]
    2a04:	mov	w0, #0x0                   	// #0
    2a08:	ldp	x19, x20, [sp, #16]
    2a0c:	ldp	x29, x30, [sp], #48
    2a10:	ret
    2a14:	ldr	x21, [sp, #32]
    2a18:	b	29f8 <grub_mod_fini+0x26a8>
    2a1c:	sxtw	x1, w20
    2a20:	ldr	x0, [x19, #8]
    2a24:	bl	0 <grub_realloc>
    2a28:	cbz	x0, 2a58 <grub_mod_fini+0x2708>
    2a2c:	str	x0, [x19, #8]
    2a30:	b	2a00 <grub_mod_fini+0x26b0>
    2a34:	mov	w0, #0xc                   	// #12
    2a38:	ldr	x21, [sp, #32]
    2a3c:	b	2a08 <grub_mod_fini+0x26b8>
    2a40:	mov	w0, #0xc                   	// #12
    2a44:	ldr	x21, [sp, #32]
    2a48:	b	2a08 <grub_mod_fini+0x26b8>
    2a4c:	mov	w0, #0xc                   	// #12
    2a50:	ldr	x21, [sp, #32]
    2a54:	b	2a08 <grub_mod_fini+0x26b8>
    2a58:	mov	w0, #0xc                   	// #12
    2a5c:	b	2a08 <grub_mod_fini+0x26b8>
    2a60:	stp	x29, x30, [sp, #-32]!
    2a64:	mov	x29, sp
    2a68:	stp	x19, x20, [sp, #16]
    2a6c:	mov	x19, x0
    2a70:	mov	w20, w1
    2a74:	ldr	w0, [x0]
    2a78:	ldr	w2, [x19, #4]
    2a7c:	cmp	w0, w2
    2a80:	b.eq	2aa8 <grub_mod_fini+0x2758>  // b.none
    2a84:	ldr	x1, [x19, #8]
    2a88:	ldr	w0, [x19, #4]
    2a8c:	add	w2, w0, #0x1
    2a90:	str	w2, [x19, #4]
    2a94:	str	w20, [x1, w0, sxtw #2]
    2a98:	mov	w0, #0x1                   	// #1
    2a9c:	ldp	x19, x20, [sp, #16]
    2aa0:	ldp	x29, x30, [sp], #32
    2aa4:	ret
    2aa8:	add	w0, w0, #0x1
    2aac:	lsl	w0, w0, #1
    2ab0:	str	w0, [x19]
    2ab4:	sbfiz	x1, x0, #2, #32
    2ab8:	ldr	x0, [x19, #8]
    2abc:	bl	0 <grub_realloc>
    2ac0:	cbz	x0, 2acc <grub_mod_fini+0x277c>
    2ac4:	str	x0, [x19, #8]
    2ac8:	b	2a84 <grub_mod_fini+0x2734>
    2acc:	mov	w0, #0x0                   	// #0
    2ad0:	b	2a9c <grub_mod_fini+0x274c>
    2ad4:	stp	x29, x30, [sp, #-48]!
    2ad8:	mov	x29, sp
    2adc:	stp	x19, x20, [sp, #16]
    2ae0:	stp	x21, x22, [sp, #32]
    2ae4:	mov	x19, x0
    2ae8:	mov	x21, x1
    2aec:	mov	x20, x2
    2af0:	mov	x22, x3
    2af4:	ldr	w0, [x0, #128]
    2af8:	cmp	w0, #0xf
    2afc:	b.eq	2b70 <grub_mod_fini+0x2820>  // b.none
    2b00:	ldr	x4, [x19, #112]
    2b04:	ldr	w5, [x19, #128]
    2b08:	add	w0, w5, #0x1
    2b0c:	str	w0, [x19, #128]
    2b10:	sbfiz	x5, x5, #6, #32
    2b14:	add	x0, x5, #0x8
    2b18:	add	x0, x4, x0
    2b1c:	add	x4, x4, x5
    2b20:	str	xzr, [x4, #8]
    2b24:	str	x21, [x4, #16]
    2b28:	str	x20, [x4, #24]
    2b2c:	ldp	x2, x3, [x22]
    2b30:	stp	x2, x3, [x4, #48]
    2b34:	ldrb	w1, [x4, #58]
    2b38:	and	w1, w1, #0xfffffff3
    2b3c:	strb	w1, [x4, #58]
    2b40:	str	xzr, [x4, #32]
    2b44:	str	xzr, [x4, #40]
    2b48:	mov	w1, #0xffffffff            	// #-1
    2b4c:	str	w1, [x4, #64]
    2b50:	cbz	x21, 2b58 <grub_mod_fini+0x2808>
    2b54:	str	x0, [x21]
    2b58:	cbz	x20, 2b60 <grub_mod_fini+0x2810>
    2b5c:	str	x0, [x20]
    2b60:	ldp	x19, x20, [sp, #16]
    2b64:	ldp	x21, x22, [sp, #32]
    2b68:	ldp	x29, x30, [sp], #48
    2b6c:	ret
    2b70:	mov	x0, #0x3c8                 	// #968
    2b74:	bl	0 <grub_malloc>
    2b78:	cbz	x0, 2b60 <grub_mod_fini+0x2810>
    2b7c:	ldr	x1, [x19, #112]
    2b80:	str	x1, [x0]
    2b84:	str	x0, [x19, #112]
    2b88:	str	wzr, [x19, #128]
    2b8c:	b	2b00 <grub_mod_fini+0x27b0>
    2b90:	stp	x29, x30, [sp, #-64]!
    2b94:	mov	x29, sp
    2b98:	stp	x19, x20, [sp, #16]
    2b9c:	stp	x21, x22, [sp, #32]
    2ba0:	mov	x19, x0
    2ba4:	mov	x22, x1
    2ba8:	ldr	x20, [x0]
    2bac:	add	x21, sp, #0x38
    2bb0:	add	x3, x19, #0x28
    2bb4:	mov	x2, #0x0                   	// #0
    2bb8:	mov	x1, #0x0                   	// #0
    2bbc:	mov	x0, x22
    2bc0:	bl	2ad4 <grub_mod_fini+0x2784>
    2bc4:	str	x0, [x21]
    2bc8:	cbz	x0, 2bfc <grub_mod_fini+0x28ac>
    2bcc:	str	x20, [x0]
    2bd0:	ldr	x1, [x21]
    2bd4:	ldrb	w0, [x1, #50]
    2bd8:	orr	w0, w0, #0x4
    2bdc:	strb	w0, [x1, #50]
    2be0:	ldr	x20, [x21]
    2be4:	ldr	x0, [x19, #8]
    2be8:	cbz	x0, 2c0c <grub_mod_fini+0x28bc>
    2bec:	add	x21, x20, #0x8
    2bf0:	mov	x19, x0
    2bf4:	b	2bb0 <grub_mod_fini+0x2860>
    2bf8:	ldr	x0, [sp, #56]
    2bfc:	ldp	x19, x20, [sp, #16]
    2c00:	ldp	x21, x22, [sp, #32]
    2c04:	ldp	x29, x30, [sp], #64
    2c08:	ret
    2c0c:	ldr	x2, [x19, #16]
    2c10:	cmp	x2, #0x0
    2c14:	ccmp	x2, x0, #0x4, ne  // ne = any
    2c18:	b.ne	2c34 <grub_mod_fini+0x28e4>  // b.any
    2c1c:	ldr	x2, [x19]
    2c20:	ldr	x20, [x20]
    2c24:	mov	x0, x19
    2c28:	cbz	x2, 2bf8 <grub_mod_fini+0x28a8>
    2c2c:	mov	x19, x2
    2c30:	b	2c0c <grub_mod_fini+0x28bc>
    2c34:	add	x21, x20, #0x10
    2c38:	mov	x19, x2
    2c3c:	b	2bb0 <grub_mod_fini+0x2860>
    2c40:	stp	x29, x30, [sp, #-32]!
    2c44:	mov	x29, sp
    2c48:	strb	w3, [sp, #24]
    2c4c:	add	x3, sp, #0x10
    2c50:	bl	2ad4 <grub_mod_fini+0x2784>
    2c54:	ldp	x29, x30, [sp], #32
    2c58:	ret
    2c5c:	stp	x29, x30, [sp, #-80]!
    2c60:	mov	x29, sp
    2c64:	stp	x19, x20, [sp, #16]
    2c68:	stp	x21, x22, [sp, #32]
    2c6c:	stp	x23, x24, [sp, #48]
    2c70:	str	x25, [sp, #64]
    2c74:	mov	x24, x0
    2c78:	mov	x20, x2
    2c7c:	ldr	x25, [x1]
    2c80:	ldr	x19, [x2, #8]
    2c84:	ldrb	w0, [x1, #56]
    2c88:	tst	x0, #0x10
    2c8c:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    2c90:	b.ne	2cd0 <grub_mod_fini+0x2980>  // b.any
    2c94:	mov	w3, #0x8                   	// #8
    2c98:	mov	x2, #0x0                   	// #0
    2c9c:	mov	x1, #0x0                   	// #0
    2ca0:	mov	x0, x25
    2ca4:	bl	2c40 <grub_mod_fini+0x28f0>
    2ca8:	mov	x21, x0
    2cac:	mov	w3, #0x9                   	// #9
    2cb0:	mov	x2, #0x0                   	// #0
    2cb4:	mov	x1, #0x0                   	// #0
    2cb8:	mov	x0, x25
    2cbc:	bl	2c40 <grub_mod_fini+0x28f0>
    2cc0:	mov	x22, x0
    2cc4:	mov	x23, x0
    2cc8:	cbz	x19, 2d30 <grub_mod_fini+0x29e0>
    2ccc:	b	2d18 <grub_mod_fini+0x29c8>
    2cd0:	ldr	w0, [x2, #40]
    2cd4:	cmp	w0, #0x3f
    2cd8:	b.gt	2d8c <grub_mod_fini+0x2a3c>
    2cdc:	ldr	x1, [x25, #144]
    2ce0:	lsr	x0, x1, x0
    2ce4:	tbz	w0, #0, 2d8c <grub_mod_fini+0x2a3c>
    2ce8:	mov	w3, #0x8                   	// #8
    2cec:	mov	x2, #0x0                   	// #0
    2cf0:	mov	x1, #0x0                   	// #0
    2cf4:	mov	x0, x25
    2cf8:	bl	2c40 <grub_mod_fini+0x28f0>
    2cfc:	mov	x21, x0
    2d00:	mov	w3, #0x9                   	// #9
    2d04:	mov	x2, #0x0                   	// #0
    2d08:	mov	x1, #0x0                   	// #0
    2d0c:	mov	x0, x25
    2d10:	bl	2c40 <grub_mod_fini+0x28f0>
    2d14:	mov	x23, x0
    2d18:	mov	w3, #0x10                  	// #16
    2d1c:	mov	x2, x23
    2d20:	mov	x1, x19
    2d24:	mov	x0, x25
    2d28:	bl	2c40 <grub_mod_fini+0x28f0>
    2d2c:	mov	x22, x0
    2d30:	mov	w3, #0x10                  	// #16
    2d34:	mov	x2, x22
    2d38:	mov	x1, x21
    2d3c:	mov	x0, x25
    2d40:	bl	2c40 <grub_mod_fini+0x28f0>
    2d44:	mov	x19, x0
    2d48:	cmp	x0, #0x0
    2d4c:	ccmp	x22, #0x0, #0x4, ne  // ne = any
    2d50:	b.eq	2da8 <grub_mod_fini+0x2a58>  // b.none
    2d54:	cmp	x21, #0x0
    2d58:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    2d5c:	b.eq	2da8 <grub_mod_fini+0x2a58>  // b.none
    2d60:	ldr	w0, [x20, #40]
    2d64:	str	w0, [x23, #40]
    2d68:	str	w0, [x21, #40]
    2d6c:	ldrb	w0, [x20, #50]
    2d70:	ubfx	x0, x0, #3, #1
    2d74:	ldrb	w1, [x23, #50]
    2d78:	bfi	w1, w0, #3, #1
    2d7c:	strb	w1, [x23, #50]
    2d80:	ldrb	w1, [x21, #50]
    2d84:	bfi	w1, w0, #3, #1
    2d88:	strb	w1, [x21, #50]
    2d8c:	mov	x0, x19
    2d90:	ldp	x19, x20, [sp, #16]
    2d94:	ldp	x21, x22, [sp, #32]
    2d98:	ldp	x23, x24, [sp, #48]
    2d9c:	ldr	x25, [sp, #64]
    2da0:	ldp	x29, x30, [sp], #80
    2da4:	ret
    2da8:	mov	w0, #0xc                   	// #12
    2dac:	str	w0, [x24]
    2db0:	mov	x19, #0x0                   	// #0
    2db4:	b	2d8c <grub_mod_fini+0x2a3c>
    2db8:	stp	x29, x30, [sp, #-48]!
    2dbc:	mov	x29, sp
    2dc0:	stp	x19, x20, [sp, #16]
    2dc4:	mov	x20, x0
    2dc8:	mov	x19, x1
    2dcc:	str	wzr, [sp, #44]
    2dd0:	ldr	x2, [x1, #8]
    2dd4:	cbz	x2, 2de4 <grub_mod_fini+0x2a94>
    2dd8:	ldrb	w0, [x2, #48]
    2ddc:	cmp	w0, #0x11
    2de0:	b.eq	2e08 <grub_mod_fini+0x2ab8>  // b.none
    2de4:	ldr	x2, [x19, #16]
    2de8:	cbz	x2, 2df8 <grub_mod_fini+0x2aa8>
    2dec:	ldrb	w0, [x2, #48]
    2df0:	cmp	w0, #0x11
    2df4:	b.eq	2e24 <grub_mod_fini+0x2ad4>  // b.none
    2df8:	ldr	w0, [sp, #44]
    2dfc:	ldp	x19, x20, [sp, #16]
    2e00:	ldp	x29, x30, [sp], #48
    2e04:	ret
    2e08:	mov	x1, x20
    2e0c:	add	x0, sp, #0x2c
    2e10:	bl	2c5c <grub_mod_fini+0x290c>
    2e14:	str	x0, [x19, #8]
    2e18:	cbz	x0, 2de4 <grub_mod_fini+0x2a94>
    2e1c:	str	x19, [x0]
    2e20:	b	2de4 <grub_mod_fini+0x2a94>
    2e24:	mov	x1, x20
    2e28:	add	x0, sp, #0x2c
    2e2c:	bl	2c5c <grub_mod_fini+0x290c>
    2e30:	str	x0, [x19, #16]
    2e34:	cbz	x0, 2df8 <grub_mod_fini+0x2aa8>
    2e38:	str	x19, [x0]
    2e3c:	b	2df8 <grub_mod_fini+0x2aa8>
    2e40:	stp	x29, x30, [sp, #-32]!
    2e44:	mov	x29, sp
    2e48:	stp	x19, x20, [sp, #16]
    2e4c:	mov	x19, x0
    2e50:	mov	w20, w1
    2e54:	mov	w0, #0x1                   	// #1
    2e58:	str	w0, [x19]
    2e5c:	str	w0, [x19, #4]
    2e60:	mov	x0, #0x4                   	// #4
    2e64:	bl	0 <grub_malloc>
    2e68:	str	x0, [x19, #8]
    2e6c:	cbz	x0, 2e84 <grub_mod_fini+0x2b34>
    2e70:	str	w20, [x0]
    2e74:	mov	w0, #0x0                   	// #0
    2e78:	ldp	x19, x20, [sp, #16]
    2e7c:	ldp	x29, x30, [sp], #32
    2e80:	ret
    2e84:	str	wzr, [x19, #4]
    2e88:	str	wzr, [x19]
    2e8c:	mov	w0, #0xc                   	// #12
    2e90:	b	2e78 <grub_mod_fini+0x2b28>
    2e94:	stp	x29, x30, [sp, #-32]!
    2e98:	mov	x29, sp
    2e9c:	stp	x19, x20, [sp, #16]
    2ea0:	mov	x19, x0
    2ea4:	mov	w20, w1
    2ea8:	ldr	w0, [x0]
    2eac:	cbz	w0, 2edc <grub_mod_fini+0x2b8c>
    2eb0:	ldr	w1, [x19, #4]
    2eb4:	cbnz	w1, 2ef0 <grub_mod_fini+0x2ba0>
    2eb8:	ldr	x0, [x19, #8]
    2ebc:	str	w20, [x0]
    2ec0:	ldr	w0, [x19, #4]
    2ec4:	add	w0, w0, #0x1
    2ec8:	str	w0, [x19, #4]
    2ecc:	mov	w0, #0x1                   	// #1
    2ed0:	ldp	x19, x20, [sp, #16]
    2ed4:	ldp	x29, x30, [sp], #32
    2ed8:	ret
    2edc:	mov	x0, x19
    2ee0:	bl	2e40 <grub_mod_fini+0x2af0>
    2ee4:	cmp	w0, #0x0
    2ee8:	cset	w0, eq  // eq = none
    2eec:	b	2ed0 <grub_mod_fini+0x2b80>
    2ef0:	cmp	w0, w1
    2ef4:	b.eq	2f64 <grub_mod_fini+0x2c14>  // b.none
    2ef8:	ldr	x1, [x19, #8]
    2efc:	ldr	w0, [x1]
    2f00:	cmp	w0, w20
    2f04:	b.le	2f84 <grub_mod_fini+0x2c34>
    2f08:	ldr	w2, [x19, #4]
    2f0c:	cmp	w2, #0x0
    2f10:	b.le	2f48 <grub_mod_fini+0x2bf8>
    2f14:	sxtw	x1, w2
    2f18:	sbfiz	x0, x2, #2, #32
    2f1c:	sub	w2, w2, #0x1
    2f20:	sub	x2, x1, x2
    2f24:	lsl	x2, x2, #2
    2f28:	ldr	x1, [x19, #8]
    2f2c:	add	x3, x1, x0
    2f30:	ldur	w3, [x3, #-4]
    2f34:	str	w3, [x1, x0]
    2f38:	cmp	x0, x2
    2f3c:	sub	x0, x0, #0x4
    2f40:	b.ne	2f28 <grub_mod_fini+0x2bd8>  // b.any
    2f44:	mov	w2, #0x0                   	// #0
    2f48:	ldr	x0, [x19, #8]
    2f4c:	str	w20, [x0, w2, sxtw #2]
    2f50:	ldr	w0, [x19, #4]
    2f54:	add	w0, w0, #0x1
    2f58:	str	w0, [x19, #4]
    2f5c:	mov	w0, #0x1                   	// #1
    2f60:	b	2ed0 <grub_mod_fini+0x2b80>
    2f64:	lsl	w0, w0, #1
    2f68:	str	w0, [x19]
    2f6c:	sbfiz	x1, x0, #2, #32
    2f70:	ldr	x0, [x19, #8]
    2f74:	bl	0 <grub_realloc>
    2f78:	cbz	x0, 2fc0 <grub_mod_fini+0x2c70>
    2f7c:	str	x0, [x19, #8]
    2f80:	b	2ef8 <grub_mod_fini+0x2ba8>
    2f84:	ldr	w2, [x19, #4]
    2f88:	sbfiz	x0, x2, #2, #32
    2f8c:	add	x3, x1, x0
    2f90:	ldur	w3, [x3, #-4]
    2f94:	cmp	w20, w3
    2f98:	b.ge	2f48 <grub_mod_fini+0x2bf8>  // b.tcont
    2f9c:	str	w3, [x1, x0]
    2fa0:	sub	w2, w2, #0x1
    2fa4:	ldr	x1, [x19, #8]
    2fa8:	add	x3, x1, x0
    2fac:	ldur	w3, [x3, #-8]
    2fb0:	sub	x0, x0, #0x4
    2fb4:	cmp	w3, w20
    2fb8:	b.gt	2f9c <grub_mod_fini+0x2c4c>
    2fbc:	b	2f48 <grub_mod_fini+0x2bf8>
    2fc0:	mov	w0, #0x0                   	// #0
    2fc4:	b	2ed0 <grub_mod_fini+0x2b80>
    2fc8:	stp	x29, x30, [sp, #-80]!
    2fcc:	mov	x29, sp
    2fd0:	stp	x19, x20, [sp, #16]
    2fd4:	stp	x21, x22, [sp, #32]
    2fd8:	stp	x23, x24, [sp, #48]
    2fdc:	str	x25, [sp, #64]
    2fe0:	mov	x21, x0
    2fe4:	mov	x22, x1
    2fe8:	mov	w25, w2
    2fec:	mov	w24, w3
    2ff0:	mov	w23, w4
    2ff4:	b	3034 <grub_mod_fini+0x2ce4>
    2ff8:	mov	w1, w25
    2ffc:	mov	x0, x22
    3000:	bl	2e94 <grub_mod_fini+0x2b44>
    3004:	and	w0, w0, #0xff
    3008:	cbz	w0, 30c0 <grub_mod_fini+0x2d70>
    300c:	ldr	x2, [x21, #40]
    3010:	add	x2, x2, x20
    3014:	ldr	w19, [x2, #4]
    3018:	cbz	w19, 30c4 <grub_mod_fini+0x2d74>
    301c:	cmp	w19, #0x2
    3020:	b.eq	3090 <grub_mod_fini+0x2d40>  // b.none
    3024:	ldr	x0, [x21, #40]
    3028:	add	x20, x0, x20
    302c:	ldr	x0, [x20, #8]
    3030:	ldr	w25, [x0]
    3034:	mov	w1, w25
    3038:	mov	x0, x22
    303c:	bl	12e8 <grub_mod_fini+0xf98>
    3040:	mov	w19, w0
    3044:	cbnz	w0, 30b8 <grub_mod_fini+0x2d68>
    3048:	sbfiz	x20, x25, #4, #32
    304c:	ldr	x0, [x21]
    3050:	add	x1, x0, x20
    3054:	ldrb	w1, [x1, #8]
    3058:	cmp	w1, w23
    305c:	b.ne	2ff8 <grub_mod_fini+0x2ca8>  // b.any
    3060:	ldr	w0, [x0, x20]
    3064:	cmp	w0, w24
    3068:	b.ne	2ff8 <grub_mod_fini+0x2ca8>  // b.any
    306c:	cmp	w23, #0x9
    3070:	b.ne	30c4 <grub_mod_fini+0x2d74>  // b.any
    3074:	mov	w1, w25
    3078:	mov	x0, x22
    307c:	bl	2e94 <grub_mod_fini+0x2b44>
    3080:	ands	w0, w0, #0xff
    3084:	mov	w0, #0xc                   	// #12
    3088:	csel	w19, w19, w0, ne  // ne = any
    308c:	b	30c4 <grub_mod_fini+0x2d74>
    3090:	ldr	x0, [x2, #8]
    3094:	mov	w4, w23
    3098:	mov	w3, w24
    309c:	ldr	w2, [x0, #4]
    30a0:	mov	x1, x22
    30a4:	mov	x0, x21
    30a8:	bl	2fc8 <grub_mod_fini+0x2c78>
    30ac:	mov	w19, w0
    30b0:	cbz	w0, 3024 <grub_mod_fini+0x2cd4>
    30b4:	b	30c4 <grub_mod_fini+0x2d74>
    30b8:	mov	w19, #0x0                   	// #0
    30bc:	b	30c4 <grub_mod_fini+0x2d74>
    30c0:	mov	w19, #0xc                   	// #12
    30c4:	mov	w0, w19
    30c8:	ldp	x19, x20, [sp, #16]
    30cc:	ldp	x21, x22, [sp, #32]
    30d0:	ldp	x23, x24, [sp, #48]
    30d4:	ldr	x25, [sp, #64]
    30d8:	ldp	x29, x30, [sp], #80
    30dc:	ret
    30e0:	stp	x29, x30, [sp, #-32]!
    30e4:	mov	x29, sp
    30e8:	stp	x19, x20, [sp, #16]
    30ec:	mov	x20, x0
    30f0:	mov	w19, w1
    30f4:	str	w1, [x0]
    30f8:	str	wzr, [x0, #4]
    30fc:	sbfiz	x0, x1, #2, #32
    3100:	bl	0 <grub_malloc>
    3104:	str	x0, [x20, #8]
    3108:	cmp	w19, #0x0
    310c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    3110:	mov	w0, #0xc                   	// #12
    3114:	csel	w0, w0, wzr, eq  // eq = none
    3118:	ldp	x19, x20, [sp, #16]
    311c:	ldp	x29, x30, [sp], #32
    3120:	ret
    3124:	stp	x29, x30, [sp, #-64]!
    3128:	mov	x29, sp
    312c:	stp	x19, x20, [sp, #16]
    3130:	stp	x21, x22, [sp, #32]
    3134:	stp	x23, x24, [sp, #48]
    3138:	mov	x21, x0
    313c:	mov	x20, x1
    3140:	mov	w22, w2
    3144:	mov	x23, x1
    3148:	str	w2, [x23], #24
    314c:	ldr	w1, [x1, #12]
    3150:	mov	x0, x23
    3154:	bl	30e0 <grub_mod_fini+0x2d90>
    3158:	cbnz	w0, 3228 <grub_mod_fini+0x2ed8>
    315c:	mov	w24, w0
    3160:	ldr	w0, [x20, #12]
    3164:	cmp	w0, #0x0
    3168:	b.le	31b4 <grub_mod_fini+0x2e64>
    316c:	mov	x19, #0x0                   	// #0
    3170:	b	3184 <grub_mod_fini+0x2e34>
    3174:	add	x19, x19, #0x1
    3178:	ldr	w0, [x20, #12]
    317c:	cmp	w0, w19
    3180:	b.le	31b4 <grub_mod_fini+0x2e64>
    3184:	ldr	x0, [x20, #16]
    3188:	ldr	w1, [x0, x19, lsl #2]
    318c:	ldr	x3, [x21]
    3190:	add	x3, x3, w1, sxtw #4
    3194:	ldrb	w3, [x3, #8]
    3198:	tbnz	w3, #3, 3174 <grub_mod_fini+0x2e24>
    319c:	mov	x0, x23
    31a0:	bl	2a60 <grub_mod_fini+0x2710>
    31a4:	and	w0, w0, #0xff
    31a8:	cbnz	w0, 3174 <grub_mod_fini+0x2e24>
    31ac:	mov	w24, #0xc                   	// #12
    31b0:	b	31ec <grub_mod_fini+0x2e9c>
    31b4:	ldr	w0, [x21, #132]
    31b8:	and	w22, w22, w0
    31bc:	lsl	x22, x22, #4
    31c0:	ldr	x19, [x21, #64]
    31c4:	add	x21, x19, x22
    31c8:	ldr	w0, [x19, x22]
    31cc:	ldr	w1, [x21, #4]
    31d0:	cmp	w1, w0
    31d4:	b.le	3204 <grub_mod_fini+0x2eb4>
    31d8:	ldr	x1, [x21, #8]
    31dc:	ldr	w0, [x19, x22]
    31e0:	add	w2, w0, #0x1
    31e4:	str	w2, [x19, x22]
    31e8:	str	x20, [x1, w0, sxtw #3]
    31ec:	mov	w0, w24
    31f0:	ldp	x19, x20, [sp, #16]
    31f4:	ldp	x21, x22, [sp, #32]
    31f8:	ldp	x23, x24, [sp, #48]
    31fc:	ldp	x29, x30, [sp], #64
    3200:	ret
    3204:	add	w0, w0, #0x1
    3208:	lsl	w23, w0, #1
    320c:	sbfiz	x1, x23, #3, #32
    3210:	ldr	x0, [x21, #8]
    3214:	bl	0 <grub_realloc>
    3218:	cbz	x0, 3230 <grub_mod_fini+0x2ee0>
    321c:	str	x0, [x21, #8]
    3220:	str	w23, [x21, #4]
    3224:	b	31d8 <grub_mod_fini+0x2e88>
    3228:	mov	w24, #0xc                   	// #12
    322c:	b	31ec <grub_mod_fini+0x2e9c>
    3230:	mov	w24, #0xc                   	// #12
    3234:	b	31ec <grub_mod_fini+0x2e9c>
    3238:	stp	x29, x30, [sp, #-96]!
    323c:	mov	x29, sp
    3240:	stp	x21, x22, [sp, #32]
    3244:	stp	x23, x24, [sp, #48]
    3248:	mov	x23, x0
    324c:	ldr	x22, [x0, #112]
    3250:	ldr	w0, [x1, #4]
    3254:	cmp	w0, #0x0
    3258:	b.le	335c <grub_mod_fini+0x300c>
    325c:	stp	x19, x20, [sp, #16]
    3260:	stp	x25, x26, [sp, #64]
    3264:	mov	x20, x1
    3268:	mov	w24, w2
    326c:	mov	x19, #0x0                   	// #0
    3270:	mov	x25, #0x20                  	// #32
    3274:	b	32ac <grub_mod_fini+0x2f5c>
    3278:	lsl	w26, w0, #1
    327c:	sbfiz	x1, x26, #3, #32
    3280:	ldr	x0, [x23, #184]
    3284:	bl	0 <grub_realloc>
    3288:	cbz	x0, 3368 <grub_mod_fini+0x3018>
    328c:	str	x27, [sp, #80]
    3290:	str	x0, [x23, #184]
    3294:	str	w26, [x23, #176]
    3298:	b	32f8 <grub_mod_fini+0x2fa8>
    329c:	add	x19, x19, #0x1
    32a0:	ldr	w0, [x20, #4]
    32a4:	cmp	w0, w19
    32a8:	b.le	3340 <grub_mod_fini+0x2ff0>
    32ac:	ldr	x0, [x20, #8]
    32b0:	ldr	w21, [x0, x19, lsl #2]
    32b4:	sbfiz	x3, x21, #4, #32
    32b8:	ldr	x4, [x22]
    32bc:	add	x0, x4, x3
    32c0:	ldrb	w1, [x0, #8]
    32c4:	cmp	w1, #0x8
    32c8:	b.ne	329c <grub_mod_fini+0x2f4c>  // b.any
    32cc:	ldr	w0, [x4, x3]
    32d0:	cmp	w0, #0x3f
    32d4:	b.gt	329c <grub_mod_fini+0x2f4c>
    32d8:	ldr	x1, [x22, #144]
    32dc:	lsr	x0, x1, x0
    32e0:	tbz	w0, #0, 329c <grub_mod_fini+0x2f4c>
    32e4:	ldr	w0, [x23, #176]
    32e8:	ldr	w1, [x23, #172]
    32ec:	cmp	w1, w0
    32f0:	b.eq	3278 <grub_mod_fini+0x2f28>  // b.none
    32f4:	str	x27, [sp, #80]
    32f8:	ldrsw	x27, [x23, #172]
    32fc:	ldr	x26, [x23, #184]
    3300:	mov	x0, x25
    3304:	bl	0 <grub_zalloc>
    3308:	str	x0, [x26, x27, lsl #3]
    330c:	ldrsw	x1, [x23, #172]
    3310:	ldr	x0, [x23, #184]
    3314:	ldr	x0, [x0, x1, lsl #3]
    3318:	cbz	x0, 3364 <grub_mod_fini+0x3014>
    331c:	str	w21, [x0, #4]
    3320:	ldr	x1, [x23, #184]
    3324:	ldr	w0, [x23, #172]
    3328:	add	w2, w0, #0x1
    332c:	str	w2, [x23, #172]
    3330:	ldr	x0, [x1, w0, sxtw #3]
    3334:	str	w24, [x0]
    3338:	ldr	x27, [sp, #80]
    333c:	b	329c <grub_mod_fini+0x2f4c>
    3340:	mov	w0, #0x0                   	// #0
    3344:	ldp	x19, x20, [sp, #16]
    3348:	ldp	x25, x26, [sp, #64]
    334c:	ldp	x21, x22, [sp, #32]
    3350:	ldp	x23, x24, [sp, #48]
    3354:	ldp	x29, x30, [sp], #96
    3358:	ret
    335c:	mov	w0, #0x0                   	// #0
    3360:	b	334c <grub_mod_fini+0x2ffc>
    3364:	ldr	x27, [sp, #80]
    3368:	mov	w0, #0xc                   	// #12
    336c:	ldp	x19, x20, [sp, #16]
    3370:	ldp	x25, x26, [sp, #64]
    3374:	b	334c <grub_mod_fini+0x2ffc>
    3378:	stp	x29, x30, [sp, #-48]!
    337c:	mov	x29, sp
    3380:	stp	x19, x20, [sp, #16]
    3384:	cbz	x1, 3508 <grub_mod_fini+0x31b8>
    3388:	stp	x21, x22, [sp, #32]
    338c:	mov	x20, x0
    3390:	mov	x22, x1
    3394:	ldr	w19, [x1, #4]
    3398:	cbz	w19, 351c <grub_mod_fini+0x31cc>
    339c:	ldr	w1, [x0]
    33a0:	ldr	w0, [x0, #4]
    33a4:	add	w0, w0, w19, lsl #1
    33a8:	cmp	w1, w0
    33ac:	b.lt	33fc <grub_mod_fini+0x30ac>  // b.tstop
    33b0:	ldr	w19, [x20, #4]
    33b4:	cbz	w19, 3420 <grub_mod_fini+0x30d0>
    33b8:	ldr	w2, [x22, #4]
    33bc:	add	w21, w19, w2, lsl #1
    33c0:	sub	w19, w19, #0x1
    33c4:	subs	w2, w2, #0x1
    33c8:	ccmp	w19, #0x0, #0x1, pl  // pl = nfrst
    33cc:	b.ge	3458 <grub_mod_fini+0x3108>  // b.tcont
    33d0:	tbz	w2, #31, 348c <grub_mod_fini+0x313c>
    33d4:	ldr	w0, [x20, #4]
    33d8:	ldr	w19, [x22, #4]
    33dc:	add	w19, w0, w19, lsl #1
    33e0:	sub	w4, w19, #0x1
    33e4:	subs	w19, w19, w21
    33e8:	b.eq	3530 <grub_mod_fini+0x31e0>  // b.none
    33ec:	sub	w2, w0, #0x1
    33f0:	add	w0, w0, w19
    33f4:	str	w0, [x20, #4]
    33f8:	b	34bc <grub_mod_fini+0x316c>
    33fc:	add	w19, w19, w1
    3400:	lsl	w19, w19, #1
    3404:	sbfiz	x1, x19, #2, #32
    3408:	ldr	x0, [x20, #8]
    340c:	bl	0 <grub_realloc>
    3410:	cbz	x0, 3510 <grub_mod_fini+0x31c0>
    3414:	str	x0, [x20, #8]
    3418:	str	w19, [x20]
    341c:	b	33b0 <grub_mod_fini+0x3060>
    3420:	ldr	w0, [x22, #4]
    3424:	str	w0, [x20, #4]
    3428:	ldrsw	x2, [x22, #4]
    342c:	lsl	x2, x2, #2
    3430:	ldr	x1, [x22, #8]
    3434:	ldr	x0, [x20, #8]
    3438:	bl	0 <grub_memmove>
    343c:	ldp	x21, x22, [sp, #32]
    3440:	b	3520 <grub_mod_fini+0x31d0>
    3444:	sub	w2, w2, #0x1
    3448:	sub	w19, w19, #0x1
    344c:	cmp	w2, #0x0
    3450:	ccmp	w19, #0x0, #0x1, ge  // ge = tcont
    3454:	b.lt	33d0 <grub_mod_fini+0x3080>  // b.tstop
    3458:	ldr	x1, [x20, #8]
    345c:	ldr	w3, [x1, w19, sxtw #2]
    3460:	ldr	x0, [x22, #8]
    3464:	ldr	w0, [x0, w2, sxtw #2]
    3468:	cmp	w3, w0
    346c:	b.eq	3444 <grub_mod_fini+0x30f4>  // b.none
    3470:	b.ge	3484 <grub_mod_fini+0x3134>  // b.tcont
    3474:	sub	w2, w2, #0x1
    3478:	sub	w21, w21, #0x1
    347c:	str	w0, [x1, w21, sxtw #2]
    3480:	b	344c <grub_mod_fini+0x30fc>
    3484:	sub	w19, w19, #0x1
    3488:	b	344c <grub_mod_fini+0x30fc>
    348c:	add	w2, w2, #0x1
    3490:	sub	w21, w21, w2
    3494:	ldr	x0, [x20, #8]
    3498:	sbfiz	x2, x2, #2, #32
    349c:	ldr	x1, [x22, #8]
    34a0:	add	x0, x0, w21, sxtw #2
    34a4:	bl	0 <grub_memmove>
    34a8:	b	33d4 <grub_mod_fini+0x3084>
    34ac:	add	w3, w2, w19
    34b0:	str	w0, [x1, w3, sxtw #2]
    34b4:	subs	w2, w2, #0x1
    34b8:	b.mi	34ec <grub_mod_fini+0x319c>  // b.first
    34bc:	ldr	x1, [x20, #8]
    34c0:	ldr	w3, [x1, w4, sxtw #2]
    34c4:	ldr	w0, [x1, w2, sxtw #2]
    34c8:	cmp	w3, w0
    34cc:	b.le	34ac <grub_mod_fini+0x315c>
    34d0:	sub	w4, w4, #0x1
    34d4:	add	w0, w2, w19
    34d8:	str	w3, [x1, w0, sxtw #2]
    34dc:	subs	w19, w19, #0x1
    34e0:	b.ne	34bc <grub_mod_fini+0x316c>  // b.any
    34e4:	ldp	x21, x22, [sp, #32]
    34e8:	b	3520 <grub_mod_fini+0x31d0>
    34ec:	ldr	x0, [x20, #8]
    34f0:	sbfiz	x2, x19, #2, #32
    34f4:	add	x1, x0, w21, sxtw #2
    34f8:	bl	0 <grub_memmove>
    34fc:	mov	w19, #0x0                   	// #0
    3500:	ldp	x21, x22, [sp, #32]
    3504:	b	3520 <grub_mod_fini+0x31d0>
    3508:	mov	w19, #0x0                   	// #0
    350c:	b	3520 <grub_mod_fini+0x31d0>
    3510:	mov	w19, #0xc                   	// #12
    3514:	ldp	x21, x22, [sp, #32]
    3518:	b	3520 <grub_mod_fini+0x31d0>
    351c:	ldp	x21, x22, [sp, #32]
    3520:	mov	w0, w19
    3524:	ldp	x19, x20, [sp, #16]
    3528:	ldp	x29, x30, [sp], #48
    352c:	ret
    3530:	ldp	x21, x22, [sp, #32]
    3534:	b	3520 <grub_mod_fini+0x31d0>
    3538:	stp	x29, x30, [sp, #-32]!
    353c:	mov	x29, sp
    3540:	stp	x19, x20, [sp, #16]
    3544:	mov	x19, x0
    3548:	ldr	w0, [x1, #4]
    354c:	str	w0, [x19, #4]
    3550:	cmp	w0, #0x0
    3554:	b.le	35a0 <grub_mod_fini+0x3250>
    3558:	mov	x20, x1
    355c:	str	w0, [x19]
    3560:	sbfiz	x0, x0, #2, #32
    3564:	bl	0 <grub_malloc>
    3568:	str	x0, [x19, #8]
    356c:	cbz	x0, 3590 <grub_mod_fini+0x3240>
    3570:	ldrsw	x2, [x20, #4]
    3574:	lsl	x2, x2, #2
    3578:	ldr	x1, [x20, #8]
    357c:	bl	0 <grub_memmove>
    3580:	mov	w0, #0x0                   	// #0
    3584:	ldp	x19, x20, [sp, #16]
    3588:	ldp	x29, x30, [sp], #32
    358c:	ret
    3590:	str	wzr, [x19, #4]
    3594:	str	wzr, [x19]
    3598:	mov	w0, #0xc                   	// #12
    359c:	b	3584 <grub_mod_fini+0x3234>
    35a0:	mov	x2, #0x10                  	// #16
    35a4:	mov	w1, #0x0                   	// #0
    35a8:	mov	x0, x19
    35ac:	bl	0 <grub_memset>
    35b0:	mov	w0, #0x0                   	// #0
    35b4:	b	3584 <grub_mod_fini+0x3234>
    35b8:	stp	x29, x30, [sp, #-64]!
    35bc:	mov	x29, sp
    35c0:	stp	x19, x20, [sp, #16]
    35c4:	stp	x21, x22, [sp, #32]
    35c8:	mov	x21, x0
    35cc:	mov	x19, x2
    35d0:	cbz	x1, 35f0 <grub_mod_fini+0x32a0>
    35d4:	mov	x20, x1
    35d8:	ldr	w0, [x1, #4]
    35dc:	cmp	w0, #0x0
    35e0:	ccmp	x2, #0x0, #0x4, gt
    35e4:	b.ne	3624 <grub_mod_fini+0x32d4>  // b.any
    35e8:	cmp	w0, #0x0
    35ec:	b.gt	3630 <grub_mod_fini+0x32e0>
    35f0:	cbz	x19, 3600 <grub_mod_fini+0x32b0>
    35f4:	ldr	w0, [x19, #4]
    35f8:	cmp	w0, #0x0
    35fc:	b.gt	36b0 <grub_mod_fini+0x3360>
    3600:	mov	x2, #0x10                  	// #16
    3604:	mov	w1, #0x0                   	// #0
    3608:	mov	x0, x21
    360c:	bl	0 <grub_memset>
    3610:	mov	w0, #0x0                   	// #0
    3614:	ldp	x19, x20, [sp, #16]
    3618:	ldp	x21, x22, [sp, #32]
    361c:	ldp	x29, x30, [sp], #64
    3620:	ret
    3624:	ldr	w1, [x2, #4]
    3628:	cmp	w1, #0x0
    362c:	b.gt	3640 <grub_mod_fini+0x32f0>
    3630:	mov	x1, x20
    3634:	mov	x0, x21
    3638:	bl	3538 <grub_mod_fini+0x31e8>
    363c:	b	3614 <grub_mod_fini+0x32c4>
    3640:	add	w0, w0, w1
    3644:	str	w0, [x21]
    3648:	sbfiz	x0, x0, #2, #32
    364c:	bl	0 <grub_malloc>
    3650:	str	x0, [x21, #8]
    3654:	cbz	x0, 3764 <grub_mod_fini+0x3414>
    3658:	stp	x23, x24, [sp, #48]
    365c:	ldr	w2, [x20, #4]
    3660:	mov	x0, #0x0                   	// #0
    3664:	mov	w22, #0x0                   	// #0
    3668:	mov	w23, #0x0                   	// #0
    366c:	mov	w24, #0x0                   	// #0
    3670:	cmp	w2, #0x0
    3674:	b.gt	36e0 <grub_mod_fini+0x3390>
    3678:	ldr	w0, [x19, #4]
    367c:	cmp	w0, w22
    3680:	b.le	3754 <grub_mod_fini+0x3404>
    3684:	sub	w2, w0, w22
    3688:	ldr	x1, [x19, #8]
    368c:	ldr	x0, [x21, #8]
    3690:	sbfiz	x2, x2, #2, #32
    3694:	add	x1, x1, w22, sxtw #2
    3698:	add	x0, x0, w24, sxtw #2
    369c:	bl	0 <grub_memmove>
    36a0:	ldr	w0, [x19, #4]
    36a4:	sub	w22, w0, w22
    36a8:	add	w24, w24, w22
    36ac:	b	3754 <grub_mod_fini+0x3404>
    36b0:	mov	x1, x19
    36b4:	mov	x0, x21
    36b8:	bl	3538 <grub_mod_fini+0x31e8>
    36bc:	b	3614 <grub_mod_fini+0x32c4>
    36c0:	add	w22, w22, #0x1
    36c4:	add	w24, w3, #0x1
    36c8:	ldr	x1, [x21, #8]
    36cc:	str	w2, [x1, x0, lsl #2]
    36d0:	ldr	w2, [x20, #4]
    36d4:	add	x0, x0, #0x1
    36d8:	cmp	w23, w2
    36dc:	b.ge	3678 <grub_mod_fini+0x3328>  // b.tcont
    36e0:	mov	w3, w0
    36e4:	mov	w24, w0
    36e8:	ldr	w1, [x19, #4]
    36ec:	cmp	w1, w22
    36f0:	b.le	3724 <grub_mod_fini+0x33d4>
    36f4:	ldr	x1, [x20, #8]
    36f8:	ldr	w1, [x1, w23, sxtw #2]
    36fc:	ldr	x2, [x19, #8]
    3700:	ldr	w2, [x2, w22, sxtw #2]
    3704:	cmp	w1, w2
    3708:	b.gt	36c0 <grub_mod_fini+0x3370>
    370c:	cinc	w22, w22, eq  // eq = none
    3710:	add	w23, w23, #0x1
    3714:	add	w24, w3, #0x1
    3718:	ldr	x2, [x21, #8]
    371c:	str	w1, [x2, x0, lsl #2]
    3720:	b	36d0 <grub_mod_fini+0x3380>
    3724:	cmp	w2, w23
    3728:	b.le	3754 <grub_mod_fini+0x3404>
    372c:	sub	w2, w2, w23
    3730:	ldr	x1, [x20, #8]
    3734:	ldr	x0, [x21, #8]
    3738:	sbfiz	x2, x2, #2, #32
    373c:	add	x1, x1, w23, sxtw #2
    3740:	add	x0, x0, w3, sxtw #2
    3744:	bl	0 <grub_memmove>
    3748:	ldr	w0, [x20, #4]
    374c:	sub	w23, w0, w23
    3750:	add	w24, w24, w23
    3754:	str	w24, [x21, #4]
    3758:	mov	w0, #0x0                   	// #0
    375c:	ldp	x23, x24, [sp, #48]
    3760:	b	3614 <grub_mod_fini+0x32c4>
    3764:	mov	w0, #0xc                   	// #12
    3768:	b	3614 <grub_mod_fini+0x32c4>
    376c:	stp	x29, x30, [sp, #-48]!
    3770:	mov	x29, sp
    3774:	stp	x21, x22, [sp, #32]
    3778:	mov	x21, x0
    377c:	ldr	w0, [x1, #4]
    3780:	cbz	w0, 38c8 <grub_mod_fini+0x3578>
    3784:	stp	x19, x20, [sp, #16]
    3788:	mov	x19, x1
    378c:	mov	x20, x2
    3790:	ldr	w1, [x2, #4]
    3794:	cbz	w1, 3910 <grub_mod_fini+0x35c0>
    3798:	add	w0, w0, w1
    379c:	ldr	w22, [x21]
    37a0:	ldr	w1, [x21, #4]
    37a4:	add	w1, w0, w1
    37a8:	cmp	w1, w22
    37ac:	b.gt	37d4 <grub_mod_fini+0x3484>
    37b0:	ldr	w5, [x21, #4]
    37b4:	ldr	w6, [x19, #4]
    37b8:	ldr	w7, [x20, #4]
    37bc:	add	w1, w5, w6
    37c0:	add	w1, w1, w7
    37c4:	sub	w6, w6, #0x1
    37c8:	sub	w7, w7, #0x1
    37cc:	sub	w5, w5, #0x1
    37d0:	b	3858 <grub_mod_fini+0x3508>
    37d4:	add	w22, w0, w22
    37d8:	sbfiz	x1, x22, #2, #32
    37dc:	ldr	x0, [x21, #8]
    37e0:	bl	0 <grub_realloc>
    37e4:	cbz	x0, 391c <grub_mod_fini+0x35cc>
    37e8:	str	x0, [x21, #8]
    37ec:	str	w22, [x21]
    37f0:	b	37b0 <grub_mod_fini+0x3460>
    37f4:	tbnz	w5, #31, 381c <grub_mod_fini+0x34cc>
    37f8:	ldr	x2, [x21, #8]
    37fc:	sxtw	x3, w5
    3800:	mov	w5, w3
    3804:	ldr	w0, [x2, x3, lsl #2]
    3808:	cmp	w4, w0
    380c:	b.ge	383c <grub_mod_fini+0x34ec>  // b.tcont
    3810:	sub	w5, w3, #0x1
    3814:	sub	x3, x3, #0x1
    3818:	tbz	w3, #31, 3800 <grub_mod_fini+0x34b0>
    381c:	sub	w1, w1, #0x1
    3820:	ldr	x0, [x21, #8]
    3824:	str	w4, [x0, w1, sxtw #2]
    3828:	subs	w6, w6, #0x1
    382c:	b.mi	387c <grub_mod_fini+0x352c>  // b.first
    3830:	subs	w7, w7, #0x1
    3834:	b.pl	3858 <grub_mod_fini+0x3508>  // b.nfrst
    3838:	b	387c <grub_mod_fini+0x352c>
    383c:	tbnz	w3, #31, 381c <grub_mod_fini+0x34cc>
    3840:	ldr	w0, [x2, w5, sxtw #2]
    3844:	cmp	w4, w0
    3848:	b.ne	381c <grub_mod_fini+0x34cc>  // b.any
    384c:	b	3828 <grub_mod_fini+0x34d8>
    3850:	subs	w6, w6, #0x1
    3854:	b.mi	387c <grub_mod_fini+0x352c>  // b.first
    3858:	ldr	x0, [x19, #8]
    385c:	ldr	w4, [x0, w6, sxtw #2]
    3860:	ldr	x0, [x20, #8]
    3864:	ldr	w0, [x0, w7, sxtw #2]
    3868:	cmp	w4, w0
    386c:	b.eq	37f4 <grub_mod_fini+0x34a4>  // b.none
    3870:	b.ge	3850 <grub_mod_fini+0x3500>  // b.tcont
    3874:	subs	w7, w7, #0x1
    3878:	b.pl	3858 <grub_mod_fini+0x3508>  // b.nfrst
    387c:	ldr	w0, [x21, #4]
    3880:	sub	w3, w0, #0x1
    3884:	ldr	w2, [x19, #4]
    3888:	add	w2, w0, w2
    388c:	ldr	w4, [x20, #4]
    3890:	add	w2, w2, w4
    3894:	sub	w6, w2, #0x1
    3898:	sub	w2, w2, w1
    389c:	add	w0, w0, w2
    38a0:	str	w0, [x21, #4]
    38a4:	cmp	w2, #0x0
    38a8:	ccmp	w3, #0x0, #0x1, gt
    38ac:	b.ge	38e4 <grub_mod_fini+0x3594>  // b.tcont
    38b0:	ldr	x0, [x21, #8]
    38b4:	sbfiz	x2, x2, #2, #32
    38b8:	add	x1, x0, w1, sxtw #2
    38bc:	bl	0 <grub_memmove>
    38c0:	mov	w0, #0x0                   	// #0
    38c4:	ldp	x19, x20, [sp, #16]
    38c8:	ldp	x21, x22, [sp, #32]
    38cc:	ldp	x29, x30, [sp], #48
    38d0:	ret
    38d4:	add	w5, w3, w2
    38d8:	str	w4, [x0, w5, sxtw #2]
    38dc:	subs	w3, w3, #0x1
    38e0:	b.mi	38b0 <grub_mod_fini+0x3560>  // b.first
    38e4:	ldr	x0, [x21, #8]
    38e8:	ldr	w5, [x0, w6, sxtw #2]
    38ec:	ldr	w4, [x0, w3, sxtw #2]
    38f0:	cmp	w5, w4
    38f4:	b.le	38d4 <grub_mod_fini+0x3584>
    38f8:	sub	w6, w6, #0x1
    38fc:	add	w4, w3, w2
    3900:	str	w5, [x0, w4, sxtw #2]
    3904:	subs	w2, w2, #0x1
    3908:	b.ne	38e4 <grub_mod_fini+0x3594>  // b.any
    390c:	b	38b0 <grub_mod_fini+0x3560>
    3910:	mov	w0, w1
    3914:	ldp	x19, x20, [sp, #16]
    3918:	b	38c8 <grub_mod_fini+0x3578>
    391c:	mov	w0, #0xc                   	// #12
    3920:	ldp	x19, x20, [sp, #16]
    3924:	b	38c8 <grub_mod_fini+0x3578>
    3928:	stp	x29, x30, [sp, #-32]!
    392c:	mov	x29, sp
    3930:	str	x19, [sp, #16]
    3934:	mov	x19, x0
    3938:	ldr	x0, [x0]
    393c:	bl	0 <grub_free>
    3940:	ldr	x0, [x19, #8]
    3944:	bl	0 <grub_free>
    3948:	ldr	x0, [x19, #16]
    394c:	bl	0 <grub_free>
    3950:	ldr	x0, [x19, #24]
    3954:	bl	0 <grub_free>
    3958:	mov	x0, x19
    395c:	bl	0 <grub_free>
    3960:	ldr	x19, [sp, #16]
    3964:	ldp	x29, x30, [sp], #32
    3968:	ret
    396c:	stp	x29, x30, [sp, #-16]!
    3970:	mov	x29, sp
    3974:	ldr	w1, [x0, #8]
    3978:	and	w1, w1, #0x7ffff
    397c:	and	w1, w1, #0xfffc00ff
    3980:	cmp	w1, #0x6
    3984:	b.eq	3998 <grub_mod_fini+0x3648>  // b.none
    3988:	cmp	w1, #0x3
    398c:	b.eq	39a4 <grub_mod_fini+0x3654>  // b.none
    3990:	ldp	x29, x30, [sp], #16
    3994:	ret
    3998:	ldr	x0, [x0]
    399c:	bl	3928 <grub_mod_fini+0x35d8>
    39a0:	b	3990 <grub_mod_fini+0x3640>
    39a4:	ldr	x0, [x0]
    39a8:	bl	0 <grub_free>
    39ac:	b	3990 <grub_mod_fini+0x3640>
    39b0:	stp	x29, x30, [sp, #-16]!
    39b4:	mov	x29, sp
    39b8:	add	x0, x1, #0x28
    39bc:	bl	396c <grub_mod_fini+0x361c>
    39c0:	mov	w0, #0x0                   	// #0
    39c4:	ldp	x29, x30, [sp], #16
    39c8:	ret
    39cc:	stp	x29, x30, [sp, #-96]!
    39d0:	mov	x29, sp
    39d4:	stp	x19, x20, [sp, #16]
    39d8:	stp	x21, x22, [sp, #32]
    39dc:	stp	x23, x24, [sp, #48]
    39e0:	mov	x19, x0
    39e4:	mov	x21, x1
    39e8:	mov	x20, x2
    39ec:	and	w22, w2, #0xff
    39f0:	ldr	x23, [x0, #8]
    39f4:	ldr	x0, [x0, #16]
    39f8:	cmp	x0, x23
    39fc:	b.cs	3ab8 <grub_mod_fini+0x3768>  // b.hs, b.nlast
    3a00:	ldr	x0, [x19, #16]
    3a04:	ldr	x1, [x19]
    3a08:	lsl	x0, x0, #4
    3a0c:	add	x2, x1, x0
    3a10:	str	x21, [x1, x0]
    3a14:	str	x20, [x2, #8]
    3a18:	ldr	x0, [x19, #16]
    3a1c:	ldr	x1, [x19]
    3a20:	add	x0, x1, x0, lsl #4
    3a24:	ldr	w1, [x0, #8]
    3a28:	and	w1, w1, #0xfffc00ff
    3a2c:	str	w1, [x0, #8]
    3a30:	cmp	w22, #0x5
    3a34:	b.eq	3b94 <grub_mod_fini+0x3844>  // b.none
    3a38:	cmp	w22, #0x6
    3a3c:	cset	w2, eq  // eq = none
    3a40:	ldr	x0, [x19, #16]
    3a44:	ldr	x1, [x19]
    3a48:	add	x0, x1, x0, lsl #4
    3a4c:	ldrb	w1, [x0, #10]
    3a50:	bfi	w1, w2, #4, #1
    3a54:	strb	w1, [x0, #10]
    3a58:	ldr	x1, [x19, #16]
    3a5c:	ldr	x0, [x19, #24]
    3a60:	mov	w2, #0xffffffff            	// #-1
    3a64:	str	w2, [x0, x1, lsl #2]
    3a68:	ldr	x3, [x19, #16]
    3a6c:	ldr	x0, [x19, #40]
    3a70:	mov	x2, #0x10                  	// #16
    3a74:	mov	w1, #0x0                   	// #0
    3a78:	add	x0, x0, x3, lsl #4
    3a7c:	bl	0 <grub_memset>
    3a80:	ldr	x3, [x19, #16]
    3a84:	ldr	x0, [x19, #48]
    3a88:	mov	x2, #0x10                  	// #16
    3a8c:	mov	w1, #0x0                   	// #0
    3a90:	add	x0, x0, x3, lsl #4
    3a94:	bl	0 <grub_memset>
    3a98:	ldr	x0, [x19, #16]
    3a9c:	add	x1, x0, #0x1
    3aa0:	str	x1, [x19, #16]
    3aa4:	ldp	x19, x20, [sp, #16]
    3aa8:	ldp	x21, x22, [sp, #32]
    3aac:	ldp	x23, x24, [sp, #48]
    3ab0:	ldp	x29, x30, [sp], #96
    3ab4:	ret
    3ab8:	stp	x25, x26, [sp, #64]
    3abc:	lsl	x25, x23, #1
    3ac0:	mov	x0, #0x7fffffff            	// #2147483647
    3ac4:	cmp	x0, x23, lsl #1
    3ac8:	b.cc	3ba8 <grub_mod_fini+0x3858>  // b.lo, b.ul, b.last
    3acc:	lsl	x24, x23, #5
    3ad0:	mov	x1, x24
    3ad4:	ldr	x0, [x19]
    3ad8:	bl	0 <grub_realloc>
    3adc:	cbz	x0, 3bb4 <grub_mod_fini+0x3864>
    3ae0:	str	x27, [sp, #80]
    3ae4:	str	x0, [x19]
    3ae8:	lsl	x23, x23, #3
    3aec:	mov	x1, x23
    3af0:	ldr	x0, [x19, #24]
    3af4:	bl	0 <grub_realloc>
    3af8:	mov	x26, x0
    3afc:	mov	x1, x23
    3b00:	ldr	x0, [x19, #32]
    3b04:	bl	0 <grub_realloc>
    3b08:	mov	x23, x0
    3b0c:	mov	x1, x24
    3b10:	ldr	x0, [x19, #40]
    3b14:	bl	0 <grub_realloc>
    3b18:	mov	x27, x0
    3b1c:	mov	x1, x24
    3b20:	ldr	x0, [x19, #48]
    3b24:	bl	0 <grub_realloc>
    3b28:	mov	x24, x0
    3b2c:	cmp	x26, #0x0
    3b30:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    3b34:	b.eq	3b64 <grub_mod_fini+0x3814>  // b.none
    3b38:	cmp	x27, #0x0
    3b3c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    3b40:	b.eq	3b64 <grub_mod_fini+0x3814>  // b.none
    3b44:	str	x26, [x19, #24]
    3b48:	str	x23, [x19, #32]
    3b4c:	str	x27, [x19, #40]
    3b50:	str	x0, [x19, #48]
    3b54:	str	x25, [x19, #8]
    3b58:	ldp	x25, x26, [sp, #64]
    3b5c:	ldr	x27, [sp, #80]
    3b60:	b	3a00 <grub_mod_fini+0x36b0>
    3b64:	mov	x0, x26
    3b68:	bl	0 <grub_free>
    3b6c:	mov	x0, x23
    3b70:	bl	0 <grub_free>
    3b74:	mov	x0, x27
    3b78:	bl	0 <grub_free>
    3b7c:	mov	x0, x24
    3b80:	bl	0 <grub_free>
    3b84:	mov	w0, #0xffffffff            	// #-1
    3b88:	ldp	x25, x26, [sp, #64]
    3b8c:	ldr	x27, [sp, #80]
    3b90:	b	3aa4 <grub_mod_fini+0x3754>
    3b94:	ldr	w0, [x19, #164]
    3b98:	mov	w2, #0x1                   	// #1
    3b9c:	cmp	w0, w2
    3ba0:	b.gt	3a40 <grub_mod_fini+0x36f0>
    3ba4:	b	3a38 <grub_mod_fini+0x36e8>
    3ba8:	mov	w0, #0xffffffff            	// #-1
    3bac:	ldp	x25, x26, [sp, #64]
    3bb0:	b	3aa4 <grub_mod_fini+0x3754>
    3bb4:	mov	w0, #0xffffffff            	// #-1
    3bb8:	ldp	x25, x26, [sp, #64]
    3bbc:	b	3aa4 <grub_mod_fini+0x3754>
    3bc0:	stp	x29, x30, [sp, #-32]!
    3bc4:	mov	x29, sp
    3bc8:	stp	x19, x20, [sp, #16]
    3bcc:	mov	x20, x0
    3bd0:	mov	x19, x1
    3bd4:	ldrb	w0, [x1, #48]
    3bd8:	cmp	w0, #0x10
    3bdc:	b.ne	3c04 <grub_mod_fini+0x38b4>  // b.any
    3be0:	ldr	x0, [x1, #8]
    3be4:	ldr	x1, [x0, #24]
    3be8:	str	x1, [x19, #24]
    3bec:	ldr	w0, [x0, #56]
    3bf0:	str	w0, [x19, #56]
    3bf4:	mov	w0, #0x0                   	// #0
    3bf8:	ldp	x19, x20, [sp, #16]
    3bfc:	ldp	x29, x30, [sp], #32
    3c00:	ret
    3c04:	str	x1, [x19, #24]
    3c08:	ldp	x1, x2, [x1, #40]
    3c0c:	mov	x0, x20
    3c10:	bl	39cc <grub_mod_fini+0x367c>
    3c14:	mov	w1, w0
    3c18:	str	w0, [x19, #56]
    3c1c:	cmn	w0, #0x1
    3c20:	b.eq	3c54 <grub_mod_fini+0x3904>  // b.none
    3c24:	ldrb	w2, [x19, #48]
    3c28:	mov	w0, #0x0                   	// #0
    3c2c:	cmp	w2, #0xc
    3c30:	b.ne	3bf8 <grub_mod_fini+0x38a8>  // b.any
    3c34:	ldr	x0, [x20]
    3c38:	add	x1, x0, w1, sxtw #4
    3c3c:	ldr	w0, [x1, #8]
    3c40:	ldr	w2, [x19, #40]
    3c44:	bfi	w0, w2, #8, #10
    3c48:	str	w0, [x1, #8]
    3c4c:	mov	w0, #0x0                   	// #0
    3c50:	b	3bf8 <grub_mod_fini+0x38a8>
    3c54:	mov	w0, #0xc                   	// #12
    3c58:	b	3bf8 <grub_mod_fini+0x38a8>
    3c5c:	stp	x29, x30, [sp, #-48]!
    3c60:	mov	x29, sp
    3c64:	stp	x19, x20, [sp, #16]
    3c68:	stp	x21, x22, [sp, #32]
    3c6c:	mov	x19, x0
    3c70:	mov	w20, w1
    3c74:	mov	w22, w2
    3c78:	sbfiz	x21, x1, #4, #32
    3c7c:	ldr	x1, [x0]
    3c80:	add	x1, x1, x21
    3c84:	ldp	x2, x3, [x1]
    3c88:	mov	x1, x2
    3c8c:	mov	x2, x3
    3c90:	bl	39cc <grub_mod_fini+0x367c>
    3c94:	cmn	w0, #0x1
    3c98:	b.eq	3cf8 <grub_mod_fini+0x39a8>  // b.none
    3c9c:	sbfiz	x3, x0, #4, #32
    3ca0:	ldr	x1, [x19]
    3ca4:	add	x1, x1, x3
    3ca8:	ldr	w2, [x1, #8]
    3cac:	bfi	w2, w22, #8, #10
    3cb0:	str	w2, [x1, #8]
    3cb4:	ldr	x1, [x19]
    3cb8:	add	x5, x1, x3
    3cbc:	add	x1, x1, x21
    3cc0:	ldr	w4, [x1, #8]
    3cc4:	ubfx	x4, x4, #8, #10
    3cc8:	ldr	w2, [x5, #8]
    3ccc:	ubfx	x1, x2, #8, #10
    3cd0:	orr	w4, w4, w1
    3cd4:	bfi	w2, w4, #8, #10
    3cd8:	str	w2, [x5, #8]
    3cdc:	ldr	x1, [x19]
    3ce0:	add	x3, x1, x3
    3ce4:	ldrb	w1, [x3, #10]
    3ce8:	orr	w1, w1, #0x4
    3cec:	strb	w1, [x3, #10]
    3cf0:	ldr	x1, [x19, #32]
    3cf4:	str	w20, [x1, w0, sxtw #2]
    3cf8:	ldp	x19, x20, [sp, #16]
    3cfc:	ldp	x21, x22, [sp, #32]
    3d00:	ldp	x29, x30, [sp], #48
    3d04:	ret
    3d08:	stp	x29, x30, [sp, #-80]!
    3d0c:	mov	x29, sp
    3d10:	stp	x19, x20, [sp, #16]
    3d14:	stp	x21, x22, [sp, #32]
    3d18:	stp	x23, x24, [sp, #48]
    3d1c:	stp	x25, x26, [sp, #64]
    3d20:	mov	x19, x0
    3d24:	mov	w24, w1
    3d28:	mov	w20, w2
    3d2c:	mov	w25, w3
    3d30:	mov	w21, w4
    3d34:	b	3ee0 <grub_mod_fini+0x3b90>
    3d38:	ldr	x0, [x19, #24]
    3d3c:	ldr	w24, [x0, x23, lsl #2]
    3d40:	sxtw	x26, w20
    3d44:	sbfiz	x22, x20, #4, #32
    3d48:	ldr	x0, [x19, #40]
    3d4c:	add	x0, x0, x22
    3d50:	str	wzr, [x0, #4]
    3d54:	mov	w2, w21
    3d58:	mov	w1, w24
    3d5c:	mov	x0, x19
    3d60:	bl	3c5c <grub_mod_fini+0x390c>
    3d64:	mov	w20, w0
    3d68:	cmn	w0, #0x1
    3d6c:	b.eq	3fbc <grub_mod_fini+0x3c6c>  // b.none
    3d70:	ldr	x0, [x19, #24]
    3d74:	ldr	w1, [x0, x23, lsl #2]
    3d78:	str	w1, [x0, x26, lsl #2]
    3d7c:	ldr	x0, [x19, #40]
    3d80:	mov	w1, w20
    3d84:	add	x0, x0, x22
    3d88:	bl	2e94 <grub_mod_fini+0x2b44>
    3d8c:	and	w0, w0, #0xff
    3d90:	cbnz	w0, 3ee0 <grub_mod_fini+0x3b90>
    3d94:	mov	w0, #0xc                   	// #12
    3d98:	b	3fe8 <grub_mod_fini+0x3c98>
    3d9c:	ldr	x1, [x19, #24]
    3da0:	ldr	w2, [x1, x23, lsl #2]
    3da4:	str	w2, [x1, w20, sxtw #2]
    3da8:	b	3fe8 <grub_mod_fini+0x3c98>
    3dac:	ldr	x0, [x2, #8]
    3db0:	ldr	w26, [x0]
    3db4:	sbfiz	x23, x20, #4, #32
    3db8:	add	x1, x1, x23
    3dbc:	str	wzr, [x1, #4]
    3dc0:	cmp	w24, w25
    3dc4:	ccmp	w24, w20, #0x4, eq  // eq = none
    3dc8:	b.ne	3e1c <grub_mod_fini+0x3acc>  // b.any
    3dcc:	ldr	x0, [x19]
    3dd0:	add	x22, x0, x22
    3dd4:	ldr	w0, [x22, #8]
    3dd8:	ubfx	x0, x0, #8, #10
    3ddc:	orr	w21, w21, w0
    3de0:	mov	w2, w21
    3de4:	mov	w1, w26
    3de8:	mov	x0, x19
    3dec:	bl	3c5c <grub_mod_fini+0x390c>
    3df0:	mov	w20, w0
    3df4:	cmn	w0, #0x1
    3df8:	b.eq	3fc4 <grub_mod_fini+0x3c74>  // b.none
    3dfc:	ldr	x0, [x19, #40]
    3e00:	mov	w1, w20
    3e04:	add	x0, x0, x23
    3e08:	bl	2e94 <grub_mod_fini+0x2b44>
    3e0c:	and	w0, w0, #0xff
    3e10:	cbz	w0, 3e3c <grub_mod_fini+0x3aec>
    3e14:	mov	w24, w26
    3e18:	b	3ee0 <grub_mod_fini+0x3b90>
    3e1c:	ldr	x0, [x19, #40]
    3e20:	mov	w1, w26
    3e24:	add	x0, x0, x23
    3e28:	bl	2e94 <grub_mod_fini+0x2b44>
    3e2c:	ands	w0, w0, #0xff
    3e30:	mov	w0, #0xc                   	// #12
    3e34:	csel	w0, w0, wzr, eq  // eq = none
    3e38:	b	3fe8 <grub_mod_fini+0x3c98>
    3e3c:	mov	w0, #0xc                   	// #12
    3e40:	b	3fe8 <grub_mod_fini+0x3c98>
    3e44:	sub	w1, w1, #0x1
    3e48:	mov	x3, x2
    3e4c:	sub	x2, x2, #0x10
    3e50:	sub	x0, x0, #0x4
    3e54:	ldrb	w4, [x3, #10]
    3e58:	tst	x4, #0x4
    3e5c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    3e60:	b.le	3f60 <grub_mod_fini+0x3c10>
    3e64:	ldr	w4, [x0]
    3e68:	cmp	w24, w4
    3e6c:	b.ne	3e44 <grub_mod_fini+0x3af4>  // b.any
    3e70:	ldr	w3, [x3, #8]
    3e74:	ubfx	x3, x3, #8, #10
    3e78:	cmp	w21, w3
    3e7c:	b.ne	3e44 <grub_mod_fini+0x3af4>  // b.any
    3e80:	cmn	w1, #0x1
    3e84:	b.eq	3f60 <grub_mod_fini+0x3c10>  // b.none
    3e88:	ldr	x0, [x19, #40]
    3e8c:	add	x0, x0, x23
    3e90:	bl	2e94 <grub_mod_fini+0x2b44>
    3e94:	and	w0, w0, #0xff
    3e98:	cbz	w0, 3fdc <grub_mod_fini+0x3c8c>
    3e9c:	ldr	x0, [x19, #40]
    3ea0:	add	x22, x0, x22
    3ea4:	ldr	x0, [x22, #8]
    3ea8:	ldr	w24, [x0, #4]
    3eac:	mov	w2, w21
    3eb0:	mov	w1, w24
    3eb4:	mov	x0, x19
    3eb8:	bl	3c5c <grub_mod_fini+0x390c>
    3ebc:	mov	w20, w0
    3ec0:	cmn	w0, #0x1
    3ec4:	b.eq	3fe4 <grub_mod_fini+0x3c94>  // b.none
    3ec8:	ldr	x0, [x19, #40]
    3ecc:	mov	w1, w20
    3ed0:	add	x0, x0, x23
    3ed4:	bl	2e94 <grub_mod_fini+0x2b44>
    3ed8:	and	w0, w0, #0xff
    3edc:	cbz	w0, 3fb4 <grub_mod_fini+0x3c64>
    3ee0:	sxtw	x23, w24
    3ee4:	sbfiz	x22, x24, #4, #32
    3ee8:	ldr	x0, [x19]
    3eec:	add	x0, x0, x22
    3ef0:	ldrb	w0, [x0, #8]
    3ef4:	cmp	w0, #0x4
    3ef8:	b.eq	3d38 <grub_mod_fini+0x39e8>  // b.none
    3efc:	ldr	x1, [x19, #40]
    3f00:	add	x2, x1, x22
    3f04:	ldr	w0, [x2, #4]
    3f08:	cbz	w0, 3d9c <grub_mod_fini+0x3a4c>
    3f0c:	cmp	w0, #0x1
    3f10:	b.eq	3dac <grub_mod_fini+0x3a5c>  // b.none
    3f14:	ldr	x0, [x2, #8]
    3f18:	ldr	w24, [x0]
    3f1c:	sbfiz	x23, x20, #4, #32
    3f20:	add	x1, x1, x23
    3f24:	str	wzr, [x1, #4]
    3f28:	ldr	x1, [x19, #16]
    3f2c:	sub	w1, w1, #0x1
    3f30:	ldr	x4, [x19]
    3f34:	sxtw	x0, w1
    3f38:	add	x3, x4, w1, sxtw #4
    3f3c:	ldrb	w2, [x3, #10]
    3f40:	tst	x2, #0x4
    3f44:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    3f48:	b.le	3f60 <grub_mod_fini+0x3c10>
    3f4c:	sub	x2, x0, #0x1
    3f50:	add	x2, x4, x2, lsl #4
    3f54:	ldr	x4, [x19, #32]
    3f58:	add	x0, x4, x0, lsl #2
    3f5c:	b	3e64 <grub_mod_fini+0x3b14>
    3f60:	mov	w2, w21
    3f64:	mov	w1, w24
    3f68:	mov	x0, x19
    3f6c:	bl	3c5c <grub_mod_fini+0x390c>
    3f70:	mov	w20, w0
    3f74:	cmn	w0, #0x1
    3f78:	b.eq	3fcc <grub_mod_fini+0x3c7c>  // b.none
    3f7c:	ldr	x0, [x19, #40]
    3f80:	mov	w1, w20
    3f84:	add	x0, x0, x23
    3f88:	bl	2e94 <grub_mod_fini+0x2b44>
    3f8c:	and	w0, w0, #0xff
    3f90:	cbz	w0, 3fd4 <grub_mod_fini+0x3c84>
    3f94:	mov	w4, w21
    3f98:	mov	w3, w25
    3f9c:	mov	w2, w20
    3fa0:	mov	w1, w24
    3fa4:	mov	x0, x19
    3fa8:	bl	3d08 <grub_mod_fini+0x39b8>
    3fac:	cbz	w0, 3e9c <grub_mod_fini+0x3b4c>
    3fb0:	b	3fe8 <grub_mod_fini+0x3c98>
    3fb4:	mov	w0, #0xc                   	// #12
    3fb8:	b	3fe8 <grub_mod_fini+0x3c98>
    3fbc:	mov	w0, #0xc                   	// #12
    3fc0:	b	3fe8 <grub_mod_fini+0x3c98>
    3fc4:	mov	w0, #0xc                   	// #12
    3fc8:	b	3fe8 <grub_mod_fini+0x3c98>
    3fcc:	mov	w0, #0xc                   	// #12
    3fd0:	b	3fe8 <grub_mod_fini+0x3c98>
    3fd4:	mov	w0, #0xc                   	// #12
    3fd8:	b	3fe8 <grub_mod_fini+0x3c98>
    3fdc:	mov	w0, #0xc                   	// #12
    3fe0:	b	3fe8 <grub_mod_fini+0x3c98>
    3fe4:	mov	w0, #0xc                   	// #12
    3fe8:	ldp	x19, x20, [sp, #16]
    3fec:	ldp	x21, x22, [sp, #32]
    3ff0:	ldp	x23, x24, [sp, #48]
    3ff4:	ldp	x25, x26, [sp, #64]
    3ff8:	ldp	x29, x30, [sp], #80
    3ffc:	ret
    4000:	stp	x29, x30, [sp, #-128]!
    4004:	mov	x29, sp
    4008:	stp	x19, x20, [sp, #16]
    400c:	stp	x21, x22, [sp, #32]
    4010:	stp	x23, x24, [sp, #48]
    4014:	stp	x27, x28, [sp, #80]
    4018:	mov	x24, x0
    401c:	mov	x19, x1
    4020:	mov	w23, w2
    4024:	and	w27, w3, #0xff
    4028:	sbfiz	x21, x2, #4, #32
    402c:	ldr	x0, [x1, #40]
    4030:	add	x0, x0, x21
    4034:	ldr	w1, [x0, #4]
    4038:	add	w1, w1, #0x1
    403c:	add	x0, sp, #0x70
    4040:	bl	30e0 <grub_mod_fini+0x2d90>
    4044:	mov	w22, w0
    4048:	cbnz	w0, 41c8 <grub_mod_fini+0x3e78>
    404c:	ldr	x0, [x19, #48]
    4050:	add	x0, x0, x21
    4054:	mov	w1, #0xffffffff            	// #-1
    4058:	str	w1, [x0, #4]
    405c:	ldr	x0, [x19]
    4060:	add	x2, x0, x21
    4064:	ldr	w1, [x2, #8]
    4068:	tst	w1, #0x3ff00
    406c:	b.eq	4094 <grub_mod_fini+0x3d44>  // b.none
    4070:	ldr	x1, [x19, #40]
    4074:	add	x1, x1, x21
    4078:	ldr	w3, [x1, #4]
    407c:	cbz	w3, 41f8 <grub_mod_fini+0x3ea8>
    4080:	ldr	x1, [x1, #8]
    4084:	ldrsw	x1, [x1]
    4088:	add	x0, x0, x1, lsl #4
    408c:	ldrb	w0, [x0, #10]
    4090:	tbz	w0, #2, 40cc <grub_mod_fini+0x3d7c>
    4094:	ldr	x0, [x19]
    4098:	add	x0, x0, x21
    409c:	ldrb	w0, [x0, #8]
    40a0:	tbz	w0, #3, 41f8 <grub_mod_fini+0x3ea8>
    40a4:	ldr	x1, [x19, #40]
    40a8:	add	x1, x1, x21
    40ac:	ldr	w0, [x1, #4]
    40b0:	cmp	w0, #0x0
    40b4:	b.le	41f8 <grub_mod_fini+0x3ea8>
    40b8:	stp	x25, x26, [sp, #64]
    40bc:	mov	x20, #0x0                   	// #0
    40c0:	mov	w25, #0x0                   	// #0
    40c4:	mov	w26, #0x1                   	// #1
    40c8:	b	4140 <grub_mod_fini+0x3df0>
    40cc:	ldr	w4, [x2, #8]
    40d0:	ubfx	x4, x4, #8, #10
    40d4:	mov	w3, w23
    40d8:	mov	w2, w23
    40dc:	mov	w1, w23
    40e0:	mov	x0, x19
    40e4:	bl	3d08 <grub_mod_fini+0x39b8>
    40e8:	cbz	w0, 4094 <grub_mod_fini+0x3d44>
    40ec:	mov	w22, w0
    40f0:	b	41c8 <grub_mod_fini+0x3e78>
    40f4:	mov	w25, w26
    40f8:	b	4128 <grub_mod_fini+0x3dd8>
    40fc:	mov	w3, #0x0                   	// #0
    4100:	mov	x1, x19
    4104:	add	x0, sp, #0x60
    4108:	bl	4000 <grub_mod_fini+0x3cb0>
    410c:	cbz	w0, 416c <grub_mod_fini+0x3e1c>
    4110:	mov	w22, w0
    4114:	ldp	x25, x26, [sp, #64]
    4118:	b	41c8 <grub_mod_fini+0x3e78>
    411c:	ldr	x0, [sp, #104]
    4120:	bl	0 <grub_free>
    4124:	mov	w25, w26
    4128:	ldr	x1, [x19, #40]
    412c:	add	x1, x1, x21
    4130:	add	x20, x20, #0x1
    4134:	ldr	w0, [x1, #4]
    4138:	cmp	w0, w20
    413c:	b.le	4190 <grub_mod_fini+0x3e40>
    4140:	ldr	x0, [x1, #8]
    4144:	ldr	w2, [x0, x20, lsl #2]
    4148:	sbfiz	x28, x2, #4, #32
    414c:	ldr	x0, [x19, #48]
    4150:	add	x0, x0, x28
    4154:	ldr	w1, [x0, #4]
    4158:	cmn	w1, #0x1
    415c:	b.eq	40f4 <grub_mod_fini+0x3da4>  // b.none
    4160:	cbz	w1, 40fc <grub_mod_fini+0x3dac>
    4164:	ldp	x0, x1, [x0]
    4168:	stp	x0, x1, [sp, #96]
    416c:	add	x1, sp, #0x60
    4170:	add	x0, sp, #0x70
    4174:	bl	3378 <grub_mod_fini+0x3028>
    4178:	cbnz	w0, 4110 <grub_mod_fini+0x3dc0>
    417c:	ldr	x0, [x19, #48]
    4180:	add	x28, x0, x28
    4184:	ldr	w0, [x28, #4]
    4188:	cbnz	w0, 4128 <grub_mod_fini+0x3dd8>
    418c:	b	411c <grub_mod_fini+0x3dcc>
    4190:	mov	w1, w23
    4194:	add	x0, sp, #0x70
    4198:	bl	2e94 <grub_mod_fini+0x2b44>
    419c:	and	w0, w0, #0xff
    41a0:	cbz	w0, 41ec <grub_mod_fini+0x3e9c>
    41a4:	eor	w27, w27, #0x1
    41a8:	tst	w25, w27
    41ac:	b.eq	41e4 <grub_mod_fini+0x3e94>  // b.none
    41b0:	ldr	x0, [x19, #48]
    41b4:	add	x21, x0, x21
    41b8:	str	wzr, [x21, #4]
    41bc:	ldp	x25, x26, [sp, #64]
    41c0:	ldp	x0, x1, [sp, #112]
    41c4:	stp	x0, x1, [x24]
    41c8:	mov	w0, w22
    41cc:	ldp	x19, x20, [sp, #16]
    41d0:	ldp	x21, x22, [sp, #32]
    41d4:	ldp	x23, x24, [sp, #48]
    41d8:	ldp	x27, x28, [sp, #80]
    41dc:	ldp	x29, x30, [sp], #128
    41e0:	ret
    41e4:	ldp	x25, x26, [sp, #64]
    41e8:	b	420c <grub_mod_fini+0x3ebc>
    41ec:	mov	w22, #0xc                   	// #12
    41f0:	ldp	x25, x26, [sp, #64]
    41f4:	b	41c8 <grub_mod_fini+0x3e78>
    41f8:	mov	w1, w23
    41fc:	add	x0, sp, #0x70
    4200:	bl	2e94 <grub_mod_fini+0x2b44>
    4204:	and	w0, w0, #0xff
    4208:	cbz	w0, 4220 <grub_mod_fini+0x3ed0>
    420c:	ldr	x0, [x19, #48]
    4210:	add	x21, x0, x21
    4214:	ldp	x0, x1, [sp, #112]
    4218:	stp	x0, x1, [x21]
    421c:	b	41c0 <grub_mod_fini+0x3e70>
    4220:	mov	w22, #0xc                   	// #12
    4224:	b	41c8 <grub_mod_fini+0x3e78>
    4228:	stp	x29, x30, [sp, #-32]!
    422c:	mov	x29, sp
    4230:	str	x19, [sp, #16]
    4234:	mov	x19, x0
    4238:	ldr	x0, [x0, #32]
    423c:	bl	0 <grub_free>
    4240:	ldr	x0, [x19, #48]
    4244:	bl	0 <grub_free>
    4248:	ldr	x0, [x19, #56]
    424c:	add	x1, x19, #0x8
    4250:	cmp	x0, x1
    4254:	b.eq	4268 <grub_mod_fini+0x3f18>  // b.none
    4258:	ldr	x0, [x0, #8]
    425c:	bl	0 <grub_free>
    4260:	ldr	x0, [x19, #56]
    4264:	bl	0 <grub_free>
    4268:	ldr	x0, [x19, #16]
    426c:	bl	0 <grub_free>
    4270:	ldr	x0, [x19, #72]
    4274:	bl	0 <grub_free>
    4278:	ldr	x0, [x19, #64]
    427c:	bl	0 <grub_free>
    4280:	mov	x0, x19
    4284:	bl	0 <grub_free>
    4288:	ldr	x19, [sp, #16]
    428c:	ldp	x29, x30, [sp], #32
    4290:	ret
    4294:	stp	x29, x30, [sp, #-112]!
    4298:	mov	x29, sp
    429c:	stp	x19, x20, [sp, #16]
    42a0:	stp	x21, x22, [sp, #32]
    42a4:	str	x0, [sp, #104]
    42a8:	mov	x22, x2
    42ac:	ldr	w2, [x2, #4]
    42b0:	cbz	w2, 4318 <grub_mod_fini+0x3fc8>
    42b4:	stp	x23, x24, [sp, #48]
    42b8:	stp	x25, x26, [sp, #64]
    42bc:	mov	x24, x1
    42c0:	mov	w26, w3
    42c4:	add	w23, w2, w3
    42c8:	cmp	w2, #0x0
    42cc:	b.le	42ec <grub_mod_fini+0x3f9c>
    42d0:	ldr	x3, [x22, #8]
    42d4:	mov	x0, #0x0                   	// #0
    42d8:	ldr	w1, [x3, x0, lsl #2]
    42dc:	add	w23, w23, w1
    42e0:	add	x0, x0, #0x1
    42e4:	cmp	w2, w0
    42e8:	b.gt	42d8 <grub_mod_fini+0x3f88>
    42ec:	ldr	w0, [x24, #132]
    42f0:	and	w0, w23, w0
    42f4:	lsl	x0, x0, #4
    42f8:	ldr	x1, [x24, #64]
    42fc:	add	x2, x1, x0
    4300:	ldr	w21, [x1, x0]
    4304:	cmp	w21, #0x0
    4308:	b.le	4370 <grub_mod_fini+0x4020>
    430c:	ldr	x25, [x2, #8]
    4310:	mov	x19, #0x0                   	// #0
    4314:	b	4330 <grub_mod_fini+0x3fe0>
    4318:	str	wzr, [x0]
    431c:	mov	x20, #0x0                   	// #0
    4320:	b	4538 <grub_mod_fini+0x41e8>
    4324:	add	x19, x19, #0x1
    4328:	cmp	w21, w19
    432c:	b.le	4370 <grub_mod_fini+0x4020>
    4330:	ldr	x20, [x25, x19, lsl #3]
    4334:	ldr	w0, [x20]
    4338:	cmp	w0, w23
    433c:	b.ne	4324 <grub_mod_fini+0x3fd4>  // b.any
    4340:	ldrb	w0, [x20, #80]
    4344:	and	w0, w0, #0xf
    4348:	cmp	w0, w26
    434c:	b.ne	4324 <grub_mod_fini+0x3fd4>  // b.any
    4350:	mov	x1, x22
    4354:	ldr	x0, [x20, #56]
    4358:	bl	127c <grub_mod_fini+0xf2c>
    435c:	and	w0, w0, #0xff
    4360:	cbz	w0, 4324 <grub_mod_fini+0x3fd4>
    4364:	ldp	x23, x24, [sp, #48]
    4368:	ldp	x25, x26, [sp, #64]
    436c:	b	4538 <grub_mod_fini+0x41e8>
    4370:	mov	x0, #0x58                  	// #88
    4374:	bl	0 <grub_zalloc>
    4378:	mov	x20, x0
    437c:	cbz	x0, 4440 <grub_mod_fini+0x40f0>
    4380:	stp	x27, x28, [sp, #80]
    4384:	add	x28, x0, #0x8
    4388:	mov	x1, x22
    438c:	mov	x0, x28
    4390:	bl	3538 <grub_mod_fini+0x31e8>
    4394:	mov	w27, w0
    4398:	cbnz	w0, 43d4 <grub_mod_fini+0x4084>
    439c:	ldrb	w0, [x20, #80]
    43a0:	bfxil	w0, w26, #0, #4
    43a4:	strb	w0, [x20, #80]
    43a8:	str	x28, [x20, #56]
    43ac:	ldr	w0, [x22, #4]
    43b0:	cmp	w0, #0x0
    43b4:	b.le	4518 <grub_mod_fini+0x41c8>
    43b8:	mov	x21, #0x0                   	// #0
    43bc:	and	w0, w26, #0x4
    43c0:	str	w0, [sp, #100]
    43c4:	and	w0, w26, #0x2
    43c8:	str	w0, [sp, #96]
    43cc:	and	w26, w26, #0x1
    43d0:	b	449c <grub_mod_fini+0x414c>
    43d4:	mov	x0, x20
    43d8:	bl	0 <grub_free>
    43dc:	ldp	x27, x28, [sp, #80]
    43e0:	b	4440 <grub_mod_fini+0x40f0>
    43e4:	and	x0, x0, #0xff
    43e8:	orr	w0, w0, #0x10
    43ec:	strb	w0, [x20, #80]
    43f0:	b	44f8 <grub_mod_fini+0x41a8>
    43f4:	ldrb	w0, [x20, #80]
    43f8:	orr	w0, w0, #0x40
    43fc:	strb	w0, [x20, #80]
    4400:	b	44f8 <grub_mod_fini+0x41a8>
    4404:	mov	x0, #0x10                  	// #16
    4408:	bl	0 <grub_malloc>
    440c:	str	x0, [x20, #56]
    4410:	cbz	x0, 4434 <grub_mod_fini+0x40e4>
    4414:	mov	x1, x22
    4418:	bl	3538 <grub_mod_fini+0x31e8>
    441c:	mov	w27, w0
    4420:	cbnz	w0, 455c <grub_mod_fini+0x420c>
    4424:	ldrb	w0, [x20, #80]
    4428:	orr	w0, w0, #0xffffff80
    442c:	strb	w0, [x20, #80]
    4430:	b	4508 <grub_mod_fini+0x41b8>
    4434:	mov	x0, x20
    4438:	bl	4228 <grub_mod_fini+0x3ed8>
    443c:	ldp	x27, x28, [sp, #80]
    4440:	mov	w0, #0xc                   	// #12
    4444:	ldr	x1, [sp, #104]
    4448:	str	w0, [x1]
    444c:	mov	x20, #0x0                   	// #0
    4450:	ldp	x23, x24, [sp, #48]
    4454:	ldp	x25, x26, [sp, #64]
    4458:	b	4538 <grub_mod_fini+0x41e8>
    445c:	tbz	w19, #1, 4464 <grub_mod_fini+0x4114>
    4460:	cbnz	w26, 447c <grub_mod_fini+0x412c>
    4464:	tbz	w19, #4, 4470 <grub_mod_fini+0x4120>
    4468:	ldr	w0, [sp, #96]
    446c:	cbz	w0, 447c <grub_mod_fini+0x412c>
    4470:	tbz	w19, #6, 448c <grub_mod_fini+0x413c>
    4474:	ldr	w0, [sp, #100]
    4478:	cbnz	w0, 448c <grub_mod_fini+0x413c>
    447c:	sub	w1, w25, w27
    4480:	mov	x0, x28
    4484:	bl	134c <grub_mod_fini+0xffc>
    4488:	add	w27, w27, #0x1
    448c:	add	x21, x21, #0x1
    4490:	ldr	w0, [x22, #4]
    4494:	cmp	w0, w21
    4498:	b.le	4518 <grub_mod_fini+0x41c8>
    449c:	mov	w25, w21
    44a0:	ldr	x0, [x22, #8]
    44a4:	ldrsw	x0, [x0, x21, lsl #2]
    44a8:	ldr	x1, [x24]
    44ac:	add	x0, x1, x0, lsl #4
    44b0:	ldrb	w2, [x0, #8]
    44b4:	ldr	w19, [x0, #8]
    44b8:	ubfx	x19, x19, #8, #10
    44bc:	cmp	w19, #0x0
    44c0:	ccmp	w2, #0x1, #0x0, eq  // eq = none
    44c4:	b.eq	448c <grub_mod_fini+0x413c>  // b.none
    44c8:	ldrb	w1, [x20, #80]
    44cc:	ubfx	x3, x1, #5, #1
    44d0:	ldrb	w0, [x0, #10]
    44d4:	ubfx	x0, x0, #4, #1
    44d8:	orr	w3, w3, w0
    44dc:	mov	w0, w1
    44e0:	bfi	w0, w3, #5, #1
    44e4:	strb	w0, [x20, #80]
    44e8:	cmp	w2, #0x2
    44ec:	b.eq	43e4 <grub_mod_fini+0x4094>  // b.none
    44f0:	cmp	w2, #0x4
    44f4:	b.eq	43f4 <grub_mod_fini+0x40a4>  // b.none
    44f8:	cbz	w19, 448c <grub_mod_fini+0x413c>
    44fc:	ldr	x0, [x20, #56]
    4500:	cmp	x28, x0
    4504:	b.eq	4404 <grub_mod_fini+0x40b4>  // b.none
    4508:	tbz	w19, #0, 445c <grub_mod_fini+0x410c>
    450c:	cbz	w26, 447c <grub_mod_fini+0x412c>
    4510:	tbnz	w19, #1, 447c <grub_mod_fini+0x412c>
    4514:	b	4464 <grub_mod_fini+0x4114>
    4518:	mov	w2, w23
    451c:	mov	x1, x20
    4520:	mov	x0, x24
    4524:	bl	3124 <grub_mod_fini+0x2dd4>
    4528:	cbnz	w0, 454c <grub_mod_fini+0x41fc>
    452c:	ldp	x23, x24, [sp, #48]
    4530:	ldp	x25, x26, [sp, #64]
    4534:	ldp	x27, x28, [sp, #80]
    4538:	mov	x0, x20
    453c:	ldp	x19, x20, [sp, #16]
    4540:	ldp	x21, x22, [sp, #32]
    4544:	ldp	x29, x30, [sp], #112
    4548:	ret
    454c:	mov	x0, x20
    4550:	bl	4228 <grub_mod_fini+0x3ed8>
    4554:	ldp	x27, x28, [sp, #80]
    4558:	b	4440 <grub_mod_fini+0x40f0>
    455c:	ldp	x27, x28, [sp, #80]
    4560:	b	4440 <grub_mod_fini+0x40f0>
    4564:	stp	x29, x30, [sp, #-32]!
    4568:	mov	x29, sp
    456c:	stp	x19, x20, [sp, #16]
    4570:	ldr	x20, [x0]
    4574:	ldr	x19, [x20, #112]
    4578:	cbz	x19, 458c <grub_mod_fini+0x423c>
    457c:	mov	x0, x19
    4580:	ldr	x19, [x19]
    4584:	bl	0 <grub_free>
    4588:	cbnz	x19, 457c <grub_mod_fini+0x422c>
    458c:	str	xzr, [x20, #112]
    4590:	mov	w0, #0xf                   	// #15
    4594:	str	w0, [x20, #128]
    4598:	str	xzr, [x20, #104]
    459c:	ldr	x0, [x20, #32]
    45a0:	bl	0 <grub_free>
    45a4:	str	xzr, [x20, #32]
    45a8:	ldp	x19, x20, [sp, #16]
    45ac:	ldp	x29, x30, [sp], #32
    45b0:	ret
    45b4:	stp	x29, x30, [sp, #-32]!
    45b8:	mov	x29, sp
    45bc:	str	x19, [sp, #16]
    45c0:	mov	x19, x0
    45c4:	ldr	x0, [x0, #16]
    45c8:	bl	0 <grub_free>
    45cc:	ldr	x0, [x19, #24]
    45d0:	bl	0 <grub_free>
    45d4:	ldrb	w0, [x19, #99]
    45d8:	cbnz	w0, 45e8 <grub_mod_fini+0x4298>
    45dc:	ldr	x19, [sp, #16]
    45e0:	ldp	x29, x30, [sp], #32
    45e4:	ret
    45e8:	ldr	x0, [x19, #8]
    45ec:	bl	0 <grub_free>
    45f0:	b	45dc <grub_mod_fini+0x428c>
    45f4:	stp	x29, x30, [sp, #-48]!
    45f8:	mov	x29, sp
    45fc:	stp	x19, x20, [sp, #16]
    4600:	stp	x21, x22, [sp, #32]
    4604:	mov	x21, x0
    4608:	ldr	x0, [x0]
    460c:	cbz	x0, 4638 <grub_mod_fini+0x42e8>
    4610:	ldr	x0, [x21, #16]
    4614:	cbz	x0, 4638 <grub_mod_fini+0x42e8>
    4618:	mov	x19, #0x0                   	// #0
    461c:	ldr	x0, [x21]
    4620:	add	x0, x0, x19, lsl #4
    4624:	bl	396c <grub_mod_fini+0x361c>
    4628:	add	x19, x19, #0x1
    462c:	ldr	x0, [x21, #16]
    4630:	cmp	x0, x19
    4634:	b.hi	461c <grub_mod_fini+0x42cc>  // b.pmore
    4638:	ldr	x0, [x21, #24]
    463c:	bl	0 <grub_free>
    4640:	ldr	x0, [x21, #16]
    4644:	cbz	x0, 46a0 <grub_mod_fini+0x4350>
    4648:	mov	x19, #0x0                   	// #0
    464c:	b	466c <grub_mod_fini+0x431c>
    4650:	add	x0, x0, x19, lsl #4
    4654:	ldr	x0, [x0, #8]
    4658:	bl	0 <grub_free>
    465c:	add	x19, x19, #0x1
    4660:	ldr	x0, [x21, #16]
    4664:	cmp	x0, x19
    4668:	b.ls	46a0 <grub_mod_fini+0x4350>  // b.plast
    466c:	ldr	x0, [x21, #48]
    4670:	cbz	x0, 4680 <grub_mod_fini+0x4330>
    4674:	add	x0, x0, x19, lsl #4
    4678:	ldr	x0, [x0, #8]
    467c:	bl	0 <grub_free>
    4680:	ldr	x0, [x21, #56]
    4684:	cbz	x0, 4694 <grub_mod_fini+0x4344>
    4688:	add	x0, x0, x19, lsl #4
    468c:	ldr	x0, [x0, #8]
    4690:	bl	0 <grub_free>
    4694:	ldr	x0, [x21, #40]
    4698:	cbnz	x0, 4650 <grub_mod_fini+0x4300>
    469c:	b	465c <grub_mod_fini+0x430c>
    46a0:	ldr	x0, [x21, #40]
    46a4:	bl	0 <grub_free>
    46a8:	ldr	x0, [x21, #48]
    46ac:	bl	0 <grub_free>
    46b0:	ldr	x0, [x21, #56]
    46b4:	bl	0 <grub_free>
    46b8:	ldr	x0, [x21]
    46bc:	bl	0 <grub_free>
    46c0:	ldr	x0, [x21, #64]
    46c4:	cbz	x0, 4724 <grub_mod_fini+0x43d4>
    46c8:	mov	x22, #0x0                   	// #0
    46cc:	b	46e8 <grub_mod_fini+0x4398>
    46d0:	ldr	x0, [x20, #8]
    46d4:	bl	0 <grub_free>
    46d8:	add	x22, x22, #0x1
    46dc:	ldr	w0, [x21, #132]
    46e0:	cmp	w0, w22
    46e4:	b.cc	4724 <grub_mod_fini+0x43d4>  // b.lo, b.ul, b.last
    46e8:	lsl	x0, x22, #4
    46ec:	ldr	x1, [x21, #64]
    46f0:	add	x20, x1, x0
    46f4:	ldr	w0, [x1, x0]
    46f8:	cmp	w0, #0x0
    46fc:	b.le	46d0 <grub_mod_fini+0x4380>
    4700:	mov	x19, #0x0                   	// #0
    4704:	ldr	x1, [x20, #8]
    4708:	ldr	x0, [x1, x19, lsl #3]
    470c:	bl	4228 <grub_mod_fini+0x3ed8>
    4710:	add	x19, x19, #0x1
    4714:	ldr	w1, [x20]
    4718:	cmp	w1, w19
    471c:	b.gt	4704 <grub_mod_fini+0x43b4>
    4720:	b	46d0 <grub_mod_fini+0x4380>
    4724:	ldr	x0, [x21, #64]
    4728:	bl	0 <grub_free>
    472c:	ldr	x0, [x21, #120]
    4730:	adrp	x1, 0 <grub_mod_init-0x2b0>
    4734:	ldr	x1, [x1]
    4738:	cmp	x0, x1
    473c:	b.eq	4744 <grub_mod_fini+0x43f4>  // b.none
    4740:	bl	0 <grub_free>
    4744:	ldr	x0, [x21, #208]
    4748:	bl	0 <grub_free>
    474c:	mov	x0, x21
    4750:	bl	0 <grub_free>
    4754:	ldp	x19, x20, [sp, #16]
    4758:	ldp	x21, x22, [sp, #32]
    475c:	ldp	x29, x30, [sp], #48
    4760:	ret
    4764:	nop
	...
    4770:	stp	x29, x30, [sp, #-96]!
    4774:	mov	x29, sp
    4778:	stp	x19, x20, [sp, #16]
    477c:	stp	x21, x22, [sp, #32]
    4780:	stp	x23, x24, [sp, #48]
    4784:	mov	x20, x0
    4788:	mov	x21, x1
    478c:	mov	w22, w2
    4790:	mov	w23, w3
    4794:	ldr	w1, [x1, #4]
    4798:	add	x0, sp, #0x50
    479c:	bl	30e0 <grub_mod_fini+0x2d90>
    47a0:	mov	w24, w0
    47a4:	cbnz	w0, 4884 <grub_mod_fini+0x4534>
    47a8:	ldr	w0, [x21, #4]
    47ac:	cmp	w0, #0x0
    47b0:	b.le	48a0 <grub_mod_fini+0x4550>
    47b4:	str	x25, [sp, #64]
    47b8:	mov	x19, #0x0                   	// #0
    47bc:	b	4824 <grub_mod_fini+0x44d4>
    47c0:	add	x4, x4, #0x1
    47c4:	cmp	w0, w4
    47c8:	b.le	4850 <grub_mod_fini+0x4500>
    47cc:	ldr	w6, [x8, x4, lsl #2]
    47d0:	sbfiz	x5, x6, #4, #32
    47d4:	add	x7, x3, x5
    47d8:	ldrb	w7, [x7, #8]
    47dc:	cmp	w23, w7
    47e0:	b.ne	47c0 <grub_mod_fini+0x4470>  // b.any
    47e4:	ldr	w5, [x3, x5]
    47e8:	cmp	w22, w5
    47ec:	b.ne	47c0 <grub_mod_fini+0x4470>  // b.any
    47f0:	cmn	w6, #0x1
    47f4:	b.eq	4850 <grub_mod_fini+0x4500>  // b.none
    47f8:	mov	w4, w23
    47fc:	mov	w3, w22
    4800:	add	x1, sp, #0x50
    4804:	mov	x0, x20
    4808:	bl	2fc8 <grub_mod_fini+0x2c78>
    480c:	mov	w25, w0
    4810:	cbnz	w0, 4874 <grub_mod_fini+0x4524>
    4814:	add	x19, x19, #0x1
    4818:	ldr	w0, [x21, #4]
    481c:	cmp	w0, w19
    4820:	b.le	489c <grub_mod_fini+0x454c>
    4824:	ldr	x0, [x21, #8]
    4828:	ldr	w2, [x0, x19, lsl #2]
    482c:	ldr	x1, [x20, #48]
    4830:	add	x1, x1, w2, sxtw #4
    4834:	ldr	w0, [x1, #4]
    4838:	cmp	w0, #0x0
    483c:	b.le	4850 <grub_mod_fini+0x4500>
    4840:	ldr	x8, [x1, #8]
    4844:	ldr	x3, [x20]
    4848:	mov	x4, #0x0                   	// #0
    484c:	b	47cc <grub_mod_fini+0x447c>
    4850:	add	x0, sp, #0x50
    4854:	bl	3378 <grub_mod_fini+0x3028>
    4858:	mov	w25, w0
    485c:	cbz	w0, 4814 <grub_mod_fini+0x44c4>
    4860:	ldr	x0, [sp, #88]
    4864:	bl	0 <grub_free>
    4868:	mov	w24, w25
    486c:	ldr	x25, [sp, #64]
    4870:	b	4884 <grub_mod_fini+0x4534>
    4874:	ldr	x0, [sp, #88]
    4878:	bl	0 <grub_free>
    487c:	mov	w24, w25
    4880:	ldr	x25, [sp, #64]
    4884:	mov	w0, w24
    4888:	ldp	x19, x20, [sp, #16]
    488c:	ldp	x21, x22, [sp, #32]
    4890:	ldp	x23, x24, [sp, #48]
    4894:	ldp	x29, x30, [sp], #96
    4898:	ret
    489c:	ldr	x25, [sp, #64]
    48a0:	ldr	x0, [x21, #8]
    48a4:	bl	0 <grub_free>
    48a8:	ldp	x0, x1, [sp, #80]
    48ac:	stp	x0, x1, [x21]
    48b0:	b	4884 <grub_mod_fini+0x4534>
    48b4:	stp	x29, x30, [sp, #-112]!
    48b8:	mov	x29, sp
    48bc:	stp	x19, x20, [sp, #16]
    48c0:	stp	x21, x22, [sp, #32]
    48c4:	stp	x23, x24, [sp, #48]
    48c8:	stp	x25, x26, [sp, #64]
    48cc:	mov	x22, x0
    48d0:	mov	w23, w1
    48d4:	mov	x24, x2
    48d8:	mov	x25, x3
    48dc:	ldr	x21, [x0, #56]
    48e0:	add	x21, x21, w1, sxtw #4
    48e4:	mov	x2, #0x10                  	// #16
    48e8:	mov	w1, #0x0                   	// #0
    48ec:	add	x0, sp, #0x60
    48f0:	bl	0 <grub_memset>
    48f4:	ldr	w0, [x21, #4]
    48f8:	cmp	w0, #0x0
    48fc:	b.le	4974 <grub_mod_fini+0x4624>
    4900:	str	x27, [sp, #80]
    4904:	mov	x20, #0x0                   	// #0
    4908:	b	49f0 <grub_mod_fini+0x46a0>
    490c:	ldr	x0, [sp, #104]
    4910:	bl	0 <grub_free>
    4914:	ldr	x27, [sp, #80]
    4918:	b	4980 <grub_mod_fini+0x4630>
    491c:	cmp	w0, #0x0
    4920:	b.le	499c <grub_mod_fini+0x464c>
    4924:	mov	x19, #0x0                   	// #0
    4928:	b	4954 <grub_mod_fini+0x4604>
    492c:	mov	w1, w20
    4930:	mov	x0, x24
    4934:	bl	12e8 <grub_mod_fini+0xf98>
    4938:	sub	w1, w0, #0x1
    493c:	mov	x0, x24
    4940:	bl	134c <grub_mod_fini+0xffc>
    4944:	add	x19, x19, #0x1
    4948:	ldr	w0, [x21, #4]
    494c:	cmp	w0, w19
    4950:	b.le	4970 <grub_mod_fini+0x4620>
    4954:	ldr	x0, [x21, #8]
    4958:	ldr	w20, [x0, x19, lsl #2]
    495c:	mov	w1, w20
    4960:	add	x0, sp, #0x60
    4964:	bl	12e8 <grub_mod_fini+0xf98>
    4968:	cbnz	w0, 4944 <grub_mod_fini+0x45f4>
    496c:	b	492c <grub_mod_fini+0x45dc>
    4970:	ldr	x27, [sp, #80]
    4974:	ldr	x0, [sp, #104]
    4978:	bl	0 <grub_free>
    497c:	mov	w19, #0x0                   	// #0
    4980:	mov	w0, w19
    4984:	ldp	x19, x20, [sp, #16]
    4988:	ldp	x21, x22, [sp, #32]
    498c:	ldp	x23, x24, [sp, #48]
    4990:	ldp	x25, x26, [sp, #64]
    4994:	ldp	x29, x30, [sp], #112
    4998:	ret
    499c:	ldr	x27, [sp, #80]
    49a0:	b	4974 <grub_mod_fini+0x4624>
    49a4:	mov	w1, w26
    49a8:	mov	x0, x21
    49ac:	bl	12e8 <grub_mod_fini+0xf98>
    49b0:	cbnz	w0, 49e0 <grub_mod_fini+0x4690>
    49b4:	mov	w1, w26
    49b8:	mov	x0, x24
    49bc:	bl	12e8 <grub_mod_fini+0xf98>
    49c0:	cbz	w0, 49e0 <grub_mod_fini+0x4690>
    49c4:	ldr	x2, [x22, #56]
    49c8:	add	x2, x2, x19
    49cc:	mov	x1, x25
    49d0:	add	x0, sp, #0x60
    49d4:	bl	376c <grub_mod_fini+0x341c>
    49d8:	mov	w19, w0
    49dc:	cbnz	w0, 490c <grub_mod_fini+0x45bc>
    49e0:	ldr	w0, [x21, #4]
    49e4:	add	x20, x20, #0x1
    49e8:	cmp	w0, w20
    49ec:	b.le	491c <grub_mod_fini+0x45cc>
    49f0:	ldr	x0, [x21, #8]
    49f4:	ldr	w4, [x0, x20, lsl #2]
    49f8:	cmp	w23, w4
    49fc:	b.eq	49e0 <grub_mod_fini+0x4690>  // b.none
    4a00:	sbfiz	x19, x4, #4, #32
    4a04:	ldr	x4, [x22]
    4a08:	add	x4, x4, x19
    4a0c:	ldrb	w0, [x4, #8]
    4a10:	tbz	w0, #3, 49e0 <grub_mod_fini+0x4690>
    4a14:	ldr	x0, [x22, #40]
    4a18:	add	x0, x0, x19
    4a1c:	ldr	x1, [x0, #8]
    4a20:	ldr	w26, [x1]
    4a24:	ldr	w0, [x0, #4]
    4a28:	cmp	w0, #0x1
    4a2c:	b.le	49a4 <grub_mod_fini+0x4654>
    4a30:	ldr	w27, [x1, #4]
    4a34:	mov	w1, w26
    4a38:	mov	x0, x21
    4a3c:	bl	12e8 <grub_mod_fini+0xf98>
    4a40:	cbnz	w0, 4a54 <grub_mod_fini+0x4704>
    4a44:	mov	w1, w26
    4a48:	mov	x0, x24
    4a4c:	bl	12e8 <grub_mod_fini+0xf98>
    4a50:	cbnz	w0, 49c4 <grub_mod_fini+0x4674>
    4a54:	cmp	w27, #0x0
    4a58:	b.le	49e0 <grub_mod_fini+0x4690>
    4a5c:	mov	w1, w27
    4a60:	mov	x0, x21
    4a64:	bl	12e8 <grub_mod_fini+0xf98>
    4a68:	cbnz	w0, 49e0 <grub_mod_fini+0x4690>
    4a6c:	mov	w1, w27
    4a70:	mov	x0, x24
    4a74:	bl	12e8 <grub_mod_fini+0xf98>
    4a78:	cbz	w0, 49e0 <grub_mod_fini+0x4690>
    4a7c:	b	49c4 <grub_mod_fini+0x4674>
    4a80:	stp	x29, x30, [sp, #-64]!
    4a84:	mov	x29, sp
    4a88:	str	x23, [sp, #48]
    4a8c:	mov	x23, x0
    4a90:	ldr	w0, [x0, #172]
    4a94:	cmp	w0, #0x0
    4a98:	b.le	4b30 <grub_mod_fini+0x47e0>
    4a9c:	stp	x19, x20, [sp, #16]
    4aa0:	stp	x21, x22, [sp, #32]
    4aa4:	mov	x22, #0x0                   	// #0
    4aa8:	b	4ac4 <grub_mod_fini+0x4774>
    4aac:	mov	x0, x21
    4ab0:	bl	0 <grub_free>
    4ab4:	add	x22, x22, #0x1
    4ab8:	ldr	w0, [x23, #172]
    4abc:	cmp	w0, w22
    4ac0:	b.le	4b28 <grub_mod_fini+0x47d8>
    4ac4:	ldr	x0, [x23, #184]
    4ac8:	ldr	x21, [x0, x22, lsl #3]
    4acc:	ldr	w0, [x21, #20]
    4ad0:	cmp	w0, #0x0
    4ad4:	b.le	4b04 <grub_mod_fini+0x47b4>
    4ad8:	mov	x19, #0x0                   	// #0
    4adc:	ldr	x1, [x21, #24]
    4ae0:	ldr	x20, [x1, x19, lsl #3]
    4ae4:	ldr	x0, [x20, #16]
    4ae8:	bl	0 <grub_free>
    4aec:	mov	x0, x20
    4af0:	bl	0 <grub_free>
    4af4:	add	x19, x19, #0x1
    4af8:	ldr	w1, [x21, #20]
    4afc:	cmp	w1, w19
    4b00:	b.gt	4adc <grub_mod_fini+0x478c>
    4b04:	ldr	x0, [x21, #24]
    4b08:	bl	0 <grub_free>
    4b0c:	ldr	x0, [x21, #8]
    4b10:	cbz	x0, 4aac <grub_mod_fini+0x475c>
    4b14:	ldr	x0, [x0, #8]
    4b18:	bl	0 <grub_free>
    4b1c:	ldr	x0, [x21, #8]
    4b20:	bl	0 <grub_free>
    4b24:	b	4aac <grub_mod_fini+0x475c>
    4b28:	ldp	x19, x20, [sp, #16]
    4b2c:	ldp	x21, x22, [sp, #32]
    4b30:	str	wzr, [x23, #172]
    4b34:	str	wzr, [x23, #148]
    4b38:	ldr	x23, [sp, #48]
    4b3c:	ldp	x29, x30, [sp], #64
    4b40:	ret
    4b44:	cbz	x0, 4bbc <grub_mod_fini+0x486c>
    4b48:	stp	x29, x30, [sp, #-48]!
    4b4c:	mov	x29, sp
    4b50:	stp	x19, x20, [sp, #16]
    4b54:	mov	x20, x0
    4b58:	ldr	w0, [x0]
    4b5c:	cmp	w0, #0x0
    4b60:	b.le	4ba4 <grub_mod_fini+0x4854>
    4b64:	str	x21, [sp, #32]
    4b68:	mov	x19, #0x0                   	// #0
    4b6c:	lsl	x21, x19, #5
    4b70:	ldr	x1, [x20, #8]
    4b74:	add	x1, x1, x21
    4b78:	ldr	x0, [x1, #24]
    4b7c:	bl	0 <grub_free>
    4b80:	ldr	x1, [x20, #8]
    4b84:	add	x1, x1, x21
    4b88:	ldr	x0, [x1, #8]
    4b8c:	bl	0 <grub_free>
    4b90:	add	x19, x19, #0x1
    4b94:	ldr	w0, [x20]
    4b98:	cmp	w0, w19
    4b9c:	b.gt	4b6c <grub_mod_fini+0x481c>
    4ba0:	ldr	x21, [sp, #32]
    4ba4:	ldr	x0, [x20, #8]
    4ba8:	bl	0 <grub_free>
    4bac:	mov	w0, #0x0                   	// #0
    4bb0:	ldp	x19, x20, [sp, #16]
    4bb4:	ldp	x29, x30, [sp], #48
    4bb8:	ret
    4bbc:	mov	w0, #0x0                   	// #0
    4bc0:	ret
    4bc4:	stp	x29, x30, [sp, #-32]!
    4bc8:	mov	x29, sp
    4bcc:	str	x19, [sp, #16]
    4bd0:	mov	w19, w0
    4bd4:	sub	w0, w0, #0x20
    4bd8:	cmp	w0, #0x5e
    4bdc:	b.ls	4bf0 <grub_mod_fini+0x48a0>  // b.plast
    4be0:	mov	w0, #0x0                   	// #0
    4be4:	ldr	x19, [sp, #16]
    4be8:	ldp	x29, x30, [sp], #32
    4bec:	ret
    4bf0:	mov	w0, w19
    4bf4:	bl	0 <grub_isspace>
    4bf8:	cbnz	w0, 4c1c <grub_mod_fini+0x48cc>
    4bfc:	and	w1, w19, #0xffffffdf
    4c00:	sub	w1, w1, #0x41
    4c04:	cmp	w1, #0x19
    4c08:	b.ls	4be4 <grub_mod_fini+0x4894>  // b.plast
    4c0c:	sub	w19, w19, #0x30
    4c10:	cmp	w19, #0x9
    4c14:	cset	w0, hi  // hi = pmore
    4c18:	b	4be4 <grub_mod_fini+0x4894>
    4c1c:	mov	w0, #0x0                   	// #0
    4c20:	b	4be4 <grub_mod_fini+0x4894>
    4c24:	stp	x29, x30, [sp, #-80]!
    4c28:	mov	x29, sp
    4c2c:	stp	x19, x20, [sp, #16]
    4c30:	stp	x21, x22, [sp, #32]
    4c34:	stp	x23, x24, [sp, #48]
    4c38:	mov	x21, x0
    4c3c:	mov	x19, x1
    4c40:	mov	x20, x2
    4c44:	mov	x23, x3
    4c48:	mov	x22, x4
    4c4c:	tbnz	w5, #22, 4ce4 <grub_mod_fini+0x4994>
    4c50:	ldr	w0, [x20, #52]
    4c54:	ldr	w1, [x23]
    4c58:	cmp	w1, w0
    4c5c:	b.eq	4d28 <grub_mod_fini+0x49d8>  // b.none
    4c60:	str	x25, [sp, #64]
    4c64:	ldr	x25, [x20, #24]
    4c68:	ldr	w24, [x20, #52]
    4c6c:	add	w0, w24, #0x1
    4c70:	str	w0, [x20, #52]
    4c74:	sxtw	x24, w24
    4c78:	mov	w20, #0x0                   	// #0
    4c7c:	adrp	x23, 0 <grub_mod_init-0x2b0>
    4c80:	ldr	x2, [x23]
    4c84:	add	x2, x2, #0x20
    4c88:	ubfiz	x0, x20, #2, #32
    4c8c:	add	x0, x0, w20, uxtw
    4c90:	mov	x1, x22
    4c94:	add	x0, x2, x0, lsl #1
    4c98:	bl	0 <grub_strcmp>
    4c9c:	cbz	w0, 4cb0 <grub_mod_fini+0x4960>
    4ca0:	add	w20, w20, #0x1
    4ca4:	cmp	w20, #0xc
    4ca8:	b.ls	4c80 <grub_mod_fini+0x4930>  // b.plast
    4cac:	mov	w20, #0x0                   	// #0
    4cb0:	str	w20, [x25, x24, lsl #2]
    4cb4:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4cb8:	ldr	x1, [x0]
    4cbc:	mov	x0, x22
    4cc0:	bl	0 <grub_strcmp>
    4cc4:	mov	w20, w0
    4cc8:	cbnz	w0, 4e18 <grub_mod_fini+0x4ac8>
    4ccc:	mov	w2, w0
    4cd0:	mov	x1, #0x1                   	// #1
    4cd4:	cbz	x21, 4ddc <grub_mod_fini+0x4a8c>
    4cd8:	mov	x1, #0x0                   	// #0
    4cdc:	mov	x4, #0x1                   	// #1
    4ce0:	b	4d74 <grub_mod_fini+0x4a24>
    4ce4:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4ce8:	ldr	x1, [x0]
    4cec:	mov	x0, x4
    4cf0:	bl	0 <grub_strcmp>
    4cf4:	cbnz	w0, 4d04 <grub_mod_fini+0x49b4>
    4cf8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4cfc:	ldr	x22, [x0]
    4d00:	b	4c50 <grub_mod_fini+0x4900>
    4d04:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4d08:	ldr	x1, [x0]
    4d0c:	mov	x0, x22
    4d10:	bl	0 <grub_strcmp>
    4d14:	adrp	x1, 0 <grub_mod_init-0x2b0>
    4d18:	ldr	x1, [x1]
    4d1c:	cmp	w0, #0x0
    4d20:	csel	x22, x22, x1, ne  // ne = any
    4d24:	b	4c50 <grub_mod_fini+0x4900>
    4d28:	lsl	w0, w0, #1
    4d2c:	add	w24, w0, #0x1
    4d30:	sbfiz	x1, x24, #2, #32
    4d34:	ldr	x0, [x20, #24]
    4d38:	bl	0 <grub_realloc>
    4d3c:	cbz	x0, 5690 <grub_mod_fini+0x5340>
    4d40:	str	x25, [sp, #64]
    4d44:	str	x0, [x20, #24]
    4d48:	str	w24, [x23]
    4d4c:	b	4c64 <grub_mod_fini+0x4914>
    4d50:	ldrb	w0, [x21, x1]
    4d54:	ubfx	x3, x0, #6, #2
    4d58:	lsl	x0, x4, x0
    4d5c:	ldr	x2, [x19, x3, lsl #3]
    4d60:	orr	x0, x2, x0
    4d64:	str	x0, [x19, x3, lsl #3]
    4d68:	add	x1, x1, #0x1
    4d6c:	cmp	x1, #0x100
    4d70:	b.eq	4d94 <grub_mod_fini+0x4a44>  // b.none
    4d74:	and	w0, w1, #0xffffffdf
    4d78:	sub	w0, w0, #0x41
    4d7c:	cmp	w0, #0x19
    4d80:	b.ls	4d50 <grub_mod_fini+0x4a00>  // b.plast
    4d84:	sub	w0, w1, #0x30
    4d88:	cmp	w0, #0x9
    4d8c:	b.hi	4d68 <grub_mod_fini+0x4a18>  // b.pmore
    4d90:	b	4d50 <grub_mod_fini+0x4a00>
    4d94:	ldr	x25, [sp, #64]
    4d98:	b	4e00 <grub_mod_fini+0x4ab0>
    4d9c:	add	w3, w2, #0x3f
    4da0:	cmp	w2, #0x0
    4da4:	csel	w3, w3, w2, lt  // lt = tstop
    4da8:	asr	w3, w3, #6
    4dac:	sxtw	x3, w3
    4db0:	negs	w0, w2
    4db4:	and	w4, w2, #0x3f
    4db8:	and	w0, w0, #0x3f
    4dbc:	csneg	w4, w4, w0, mi  // mi = first
    4dc0:	lsl	x4, x1, x4
    4dc4:	ldr	x0, [x19, x3, lsl #3]
    4dc8:	orr	x4, x0, x4
    4dcc:	str	x4, [x19, x3, lsl #3]
    4dd0:	add	w2, w2, #0x1
    4dd4:	cmp	w2, #0x100
    4dd8:	b.eq	4dfc <grub_mod_fini+0x4aac>  // b.none
    4ddc:	and	w0, w2, #0xffffffdf
    4de0:	sub	w0, w0, #0x41
    4de4:	cmp	w0, #0x19
    4de8:	b.ls	4d9c <grub_mod_fini+0x4a4c>  // b.plast
    4dec:	sub	w0, w2, #0x30
    4df0:	cmp	w0, #0x9
    4df4:	b.hi	4dd0 <grub_mod_fini+0x4a80>  // b.pmore
    4df8:	b	4d9c <grub_mod_fini+0x4a4c>
    4dfc:	ldr	x25, [sp, #64]
    4e00:	mov	w0, w20
    4e04:	ldp	x19, x20, [sp, #16]
    4e08:	ldp	x21, x22, [sp, #32]
    4e0c:	ldp	x23, x24, [sp, #48]
    4e10:	ldp	x29, x30, [sp], #80
    4e14:	ret
    4e18:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4e1c:	ldr	x1, [x0]
    4e20:	mov	x0, x22
    4e24:	bl	0 <grub_strcmp>
    4e28:	mov	w20, w0
    4e2c:	cbnz	w0, 4ed8 <grub_mod_fini+0x4b88>
    4e30:	mov	w1, w0
    4e34:	mov	w4, #0x40                  	// #64
    4e38:	mov	x3, #0x1                   	// #1
    4e3c:	cbnz	x21, 4e60 <grub_mod_fini+0x4b10>
    4e40:	sub	w0, w1, #0x20
    4e44:	cmp	w0, #0x5e
    4e48:	b.hi	4eac <grub_mod_fini+0x4b5c>  // b.pmore
    4e4c:	add	w1, w1, #0x1
    4e50:	cmp	w1, #0x100
    4e54:	b.ne	4e40 <grub_mod_fini+0x4af0>  // b.any
    4e58:	ldr	x25, [sp, #64]
    4e5c:	b	4e00 <grub_mod_fini+0x4ab0>
    4e60:	mov	x0, #0x0                   	// #0
    4e64:	mov	w5, w4
    4e68:	mov	x4, x3
    4e6c:	sub	w1, w0, #0x20
    4e70:	cmp	w1, #0x5e
    4e74:	b.hi	4e8c <grub_mod_fini+0x4b3c>  // b.pmore
    4e78:	add	x0, x0, #0x1
    4e7c:	cmp	x0, #0x100
    4e80:	b.ne	4e6c <grub_mod_fini+0x4b1c>  // b.any
    4e84:	ldr	x25, [sp, #64]
    4e88:	b	4e00 <grub_mod_fini+0x4ab0>
    4e8c:	ldrb	w2, [x21, x0]
    4e90:	sdiv	w1, w2, w5
    4e94:	sbfiz	x1, x1, #3, #32
    4e98:	lsl	x2, x4, x2
    4e9c:	ldr	x3, [x19, x1]
    4ea0:	orr	x2, x3, x2
    4ea4:	str	x2, [x19, x1]
    4ea8:	b	4e78 <grub_mod_fini+0x4b28>
    4eac:	sdiv	w2, w1, w4
    4eb0:	sbfiz	x2, x2, #3, #32
    4eb4:	negs	w0, w1
    4eb8:	and	w5, w1, #0x3f
    4ebc:	and	w0, w0, #0x3f
    4ec0:	csneg	w0, w5, w0, mi  // mi = first
    4ec4:	lsl	x0, x3, x0
    4ec8:	ldr	x5, [x19, x2]
    4ecc:	orr	x0, x5, x0
    4ed0:	str	x0, [x19, x2]
    4ed4:	b	4e4c <grub_mod_fini+0x4afc>
    4ed8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4edc:	ldr	x1, [x0]
    4ee0:	mov	x0, x22
    4ee4:	bl	0 <grub_strcmp>
    4ee8:	mov	w20, w0
    4eec:	cbnz	w0, 4f8c <grub_mod_fini+0x4c3c>
    4ef0:	mov	w1, #0x1                   	// #1
    4ef4:	mov	x3, #0x1                   	// #1
    4ef8:	cbz	x21, 4f6c <grub_mod_fini+0x4c1c>
    4efc:	mov	w0, w1
    4f00:	mov	w5, #0x40                  	// #64
    4f04:	mov	x4, x3
    4f08:	sub	w1, w0, #0x62
    4f0c:	cmp	w1, #0x19
    4f10:	b.ls	4f28 <grub_mod_fini+0x4bd8>  // b.plast
    4f14:	cmp	w0, #0xff
    4f18:	b.gt	56a4 <grub_mod_fini+0x5354>
    4f1c:	add	w0, w0, #0x1
    4f20:	add	x21, x21, #0x1
    4f24:	b	4f08 <grub_mod_fini+0x4bb8>
    4f28:	ldrb	w2, [x21]
    4f2c:	sdiv	w1, w2, w5
    4f30:	sbfiz	x1, x1, #3, #32
    4f34:	lsl	x2, x4, x2
    4f38:	ldr	x3, [x19, x1]
    4f3c:	orr	x2, x3, x2
    4f40:	str	x2, [x19, x1]
    4f44:	b	4f1c <grub_mod_fini+0x4bcc>
    4f48:	negs	w0, w2
    4f4c:	and	w2, w2, #0x3f
    4f50:	and	w0, w0, #0x3f
    4f54:	csneg	w2, w2, w0, mi  // mi = first
    4f58:	lsl	x0, x3, x2
    4f5c:	ldr	x2, [x19, #8]
    4f60:	orr	x0, x2, x0
    4f64:	str	x0, [x19, #8]
    4f68:	add	w1, w1, #0x1
    4f6c:	sub	w2, w1, #0x1
    4f70:	sub	w0, w1, #0x62
    4f74:	cmp	w0, #0x19
    4f78:	b.ls	4f48 <grub_mod_fini+0x4bf8>  // b.plast
    4f7c:	cmp	w1, #0xff
    4f80:	b.le	4f68 <grub_mod_fini+0x4c18>
    4f84:	ldr	x25, [sp, #64]
    4f88:	b	4e00 <grub_mod_fini+0x4ab0>
    4f8c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    4f90:	ldr	x1, [x0]
    4f94:	mov	x0, x22
    4f98:	bl	0 <grub_strcmp>
    4f9c:	mov	w20, w0
    4fa0:	cbnz	w0, 504c <grub_mod_fini+0x4cfc>
    4fa4:	mov	w22, w0
    4fa8:	mov	x23, #0x1                   	// #1
    4fac:	cbz	x21, 5000 <grub_mod_fini+0x4cb0>
    4fb0:	mov	x22, #0x0                   	// #0
    4fb4:	b	4fc4 <grub_mod_fini+0x4c74>
    4fb8:	add	x22, x22, #0x1
    4fbc:	cmp	x22, #0x100
    4fc0:	b.eq	4fec <grub_mod_fini+0x4c9c>  // b.none
    4fc4:	mov	w0, w22
    4fc8:	bl	0 <grub_isspace>
    4fcc:	cbz	w0, 4fb8 <grub_mod_fini+0x4c68>
    4fd0:	ldrb	w0, [x21, x22]
    4fd4:	ubfx	x2, x0, #6, #2
    4fd8:	lsl	x0, x23, x0
    4fdc:	ldr	x1, [x19, x2, lsl #3]
    4fe0:	orr	x0, x1, x0
    4fe4:	str	x0, [x19, x2, lsl #3]
    4fe8:	b	4fb8 <grub_mod_fini+0x4c68>
    4fec:	ldr	x25, [sp, #64]
    4ff0:	b	4e00 <grub_mod_fini+0x4ab0>
    4ff4:	add	w22, w22, #0x1
    4ff8:	cmp	w22, #0x100
    4ffc:	b.eq	5044 <grub_mod_fini+0x4cf4>  // b.none
    5000:	mov	w0, w22
    5004:	bl	0 <grub_isspace>
    5008:	cbz	w0, 4ff4 <grub_mod_fini+0x4ca4>
    500c:	add	w0, w22, #0x3f
    5010:	cmp	w22, #0x0
    5014:	csel	w0, w0, w22, lt  // lt = tstop
    5018:	asr	w0, w0, #6
    501c:	sxtw	x0, w0
    5020:	negs	w2, w22
    5024:	and	w1, w22, #0x3f
    5028:	and	w2, w2, #0x3f
    502c:	csneg	w1, w1, w2, mi  // mi = first
    5030:	lsl	x1, x23, x1
    5034:	ldr	x2, [x19, x0, lsl #3]
    5038:	orr	x1, x2, x1
    503c:	str	x1, [x19, x0, lsl #3]
    5040:	b	4ff4 <grub_mod_fini+0x4ca4>
    5044:	ldr	x25, [sp, #64]
    5048:	b	4e00 <grub_mod_fini+0x4ab0>
    504c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5050:	ldr	x1, [x0]
    5054:	mov	x0, x22
    5058:	bl	0 <grub_strcmp>
    505c:	mov	w20, w0
    5060:	cbnz	w0, 5118 <grub_mod_fini+0x4dc8>
    5064:	mov	x4, #0x1                   	// #1
    5068:	cbz	x21, 50bc <grub_mod_fini+0x4d6c>
    506c:	mov	x0, #0x0                   	// #0
    5070:	add	x21, x21, x4
    5074:	b	5084 <grub_mod_fini+0x4d34>
    5078:	add	x0, x0, #0x1
    507c:	cmp	x0, #0xff
    5080:	b.eq	50b0 <grub_mod_fini+0x4d60>  // b.none
    5084:	and	w1, w0, #0xffffffdf
    5088:	sub	w1, w1, #0x40
    508c:	cmp	w1, #0x19
    5090:	b.hi	5078 <grub_mod_fini+0x4d28>  // b.pmore
    5094:	ldrb	w1, [x21, x0]
    5098:	ubfx	x3, x1, #6, #2
    509c:	lsl	x1, x4, x1
    50a0:	ldr	x2, [x19, x3, lsl #3]
    50a4:	orr	x1, x2, x1
    50a8:	str	x1, [x19, x3, lsl #3]
    50ac:	b	5078 <grub_mod_fini+0x4d28>
    50b0:	ldr	x25, [sp, #64]
    50b4:	b	4e00 <grub_mod_fini+0x4ab0>
    50b8:	mov	w0, w1
    50bc:	add	w1, w0, #0x1
    50c0:	cmp	w0, #0xff
    50c4:	b.eq	5110 <grub_mod_fini+0x4dc0>  // b.none
    50c8:	and	w0, w0, #0xffffffdf
    50cc:	sub	w0, w0, #0x40
    50d0:	cmp	w0, #0x19
    50d4:	b.hi	50b8 <grub_mod_fini+0x4d68>  // b.pmore
    50d8:	add	w0, w1, #0x3f
    50dc:	cmp	w1, #0x0
    50e0:	csel	w0, w0, w1, lt  // lt = tstop
    50e4:	asr	w0, w0, #6
    50e8:	sxtw	x0, w0
    50ec:	negs	w2, w1
    50f0:	and	w3, w1, #0x3f
    50f4:	and	w2, w2, #0x3f
    50f8:	csneg	w2, w3, w2, mi  // mi = first
    50fc:	lsl	x2, x4, x2
    5100:	ldr	x3, [x19, x0, lsl #3]
    5104:	orr	x2, x3, x2
    5108:	str	x2, [x19, x0, lsl #3]
    510c:	b	50b8 <grub_mod_fini+0x4d68>
    5110:	ldr	x25, [sp, #64]
    5114:	b	4e00 <grub_mod_fini+0x4ab0>
    5118:	adrp	x0, 0 <grub_mod_init-0x2b0>
    511c:	ldr	x1, [x0]
    5120:	mov	x0, x22
    5124:	bl	0 <grub_strcmp>
    5128:	mov	w20, w0
    512c:	cbnz	w0, 51c8 <grub_mod_fini+0x4e78>
    5130:	mov	w0, #0x1                   	// #1
    5134:	mov	x3, #0x1                   	// #1
    5138:	cbz	x21, 51a8 <grub_mod_fini+0x4e58>
    513c:	mov	w5, #0x40                  	// #64
    5140:	mov	x4, x3
    5144:	sub	w1, w0, #0x31
    5148:	cmp	w1, #0x9
    514c:	b.ls	5164 <grub_mod_fini+0x4e14>  // b.plast
    5150:	cmp	w0, #0xff
    5154:	b.gt	56ac <grub_mod_fini+0x535c>
    5158:	add	w0, w0, #0x1
    515c:	add	x21, x21, #0x1
    5160:	b	5144 <grub_mod_fini+0x4df4>
    5164:	ldrb	w2, [x21]
    5168:	sdiv	w1, w2, w5
    516c:	sbfiz	x1, x1, #3, #32
    5170:	lsl	x2, x4, x2
    5174:	ldr	x3, [x19, x1]
    5178:	orr	x2, x3, x2
    517c:	str	x2, [x19, x1]
    5180:	b	5158 <grub_mod_fini+0x4e08>
    5184:	negs	w1, w2
    5188:	and	w2, w2, #0x3f
    518c:	and	w1, w1, #0x3f
    5190:	csneg	w1, w2, w1, mi  // mi = first
    5194:	lsl	x1, x3, x1
    5198:	ldr	x2, [x19]
    519c:	orr	x1, x2, x1
    51a0:	str	x1, [x19]
    51a4:	add	w0, w0, #0x1
    51a8:	sub	w2, w0, #0x1
    51ac:	sub	w1, w0, #0x31
    51b0:	cmp	w1, #0x9
    51b4:	b.ls	5184 <grub_mod_fini+0x4e34>  // b.plast
    51b8:	cmp	w0, #0xff
    51bc:	b.le	51a4 <grub_mod_fini+0x4e54>
    51c0:	ldr	x25, [sp, #64]
    51c4:	b	4e00 <grub_mod_fini+0x4ab0>
    51c8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    51cc:	ldr	x1, [x0]
    51d0:	mov	x0, x22
    51d4:	bl	0 <grub_strcmp>
    51d8:	mov	w20, w0
    51dc:	cbnz	w0, 528c <grub_mod_fini+0x4f3c>
    51e0:	mov	w2, #0x1                   	// #1
    51e4:	cbnz	x21, 51f4 <grub_mod_fini+0x4ea4>
    51e8:	mov	w5, #0x40                  	// #64
    51ec:	mov	x4, #0x1                   	// #1
    51f0:	b	526c <grub_mod_fini+0x4f1c>
    51f4:	mov	w0, #0x1                   	// #1
    51f8:	mov	w5, #0x40                  	// #64
    51fc:	mov	x4, #0x1                   	// #1
    5200:	sub	w1, w0, #0x21
    5204:	cmp	w1, #0x5e
    5208:	b.ls	5220 <grub_mod_fini+0x4ed0>  // b.plast
    520c:	cmp	w0, #0xff
    5210:	b.gt	56b4 <grub_mod_fini+0x5364>
    5214:	add	w0, w0, #0x1
    5218:	add	x21, x21, #0x1
    521c:	b	5200 <grub_mod_fini+0x4eb0>
    5220:	ldrb	w2, [x21]
    5224:	sdiv	w1, w2, w5
    5228:	sbfiz	x1, x1, #3, #32
    522c:	lsl	x2, x4, x2
    5230:	ldr	x3, [x19, x1]
    5234:	orr	x2, x3, x2
    5238:	str	x2, [x19, x1]
    523c:	b	5214 <grub_mod_fini+0x4ec4>
    5240:	sdiv	w3, w1, w5
    5244:	sbfiz	x3, x3, #3, #32
    5248:	negs	w0, w1
    524c:	and	w1, w1, #0x3f
    5250:	and	w0, w0, #0x3f
    5254:	csneg	w0, w1, w0, mi  // mi = first
    5258:	lsl	x0, x4, x0
    525c:	ldr	x1, [x19, x3]
    5260:	orr	x0, x1, x0
    5264:	str	x0, [x19, x3]
    5268:	add	w2, w2, #0x1
    526c:	sub	w1, w2, #0x1
    5270:	sub	w0, w2, #0x21
    5274:	cmp	w0, #0x5e
    5278:	b.ls	5240 <grub_mod_fini+0x4ef0>  // b.plast
    527c:	cmp	w2, #0xff
    5280:	b.le	5268 <grub_mod_fini+0x4f18>
    5284:	ldr	x25, [sp, #64]
    5288:	b	4e00 <grub_mod_fini+0x4ab0>
    528c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5290:	ldr	x1, [x0]
    5294:	mov	x0, x22
    5298:	bl	0 <grub_strcmp>
    529c:	mov	w20, w0
    52a0:	cbnz	w0, 5340 <grub_mod_fini+0x4ff0>
    52a4:	mov	w1, #0x1                   	// #1
    52a8:	mov	x3, #0x1                   	// #1
    52ac:	cbz	x21, 5320 <grub_mod_fini+0x4fd0>
    52b0:	mov	w0, w1
    52b4:	mov	w5, #0x40                  	// #64
    52b8:	mov	x4, x3
    52bc:	sub	w1, w0, #0x42
    52c0:	cmp	w1, #0x19
    52c4:	b.ls	52dc <grub_mod_fini+0x4f8c>  // b.plast
    52c8:	cmp	w0, #0xff
    52cc:	b.gt	56bc <grub_mod_fini+0x536c>
    52d0:	add	w0, w0, #0x1
    52d4:	add	x21, x21, #0x1
    52d8:	b	52bc <grub_mod_fini+0x4f6c>
    52dc:	ldrb	w2, [x21]
    52e0:	sdiv	w1, w2, w5
    52e4:	sbfiz	x1, x1, #3, #32
    52e8:	lsl	x2, x4, x2
    52ec:	ldr	x3, [x19, x1]
    52f0:	orr	x2, x3, x2
    52f4:	str	x2, [x19, x1]
    52f8:	b	52d0 <grub_mod_fini+0x4f80>
    52fc:	negs	w0, w2
    5300:	and	w2, w2, #0x3f
    5304:	and	w0, w0, #0x3f
    5308:	csneg	w0, w2, w0, mi  // mi = first
    530c:	lsl	x0, x3, x0
    5310:	ldr	x2, [x19, #8]
    5314:	orr	x0, x2, x0
    5318:	str	x0, [x19, #8]
    531c:	add	w1, w1, #0x1
    5320:	sub	w2, w1, #0x1
    5324:	sub	w0, w1, #0x42
    5328:	cmp	w0, #0x19
    532c:	b.ls	52fc <grub_mod_fini+0x4fac>  // b.plast
    5330:	cmp	w1, #0xff
    5334:	b.le	531c <grub_mod_fini+0x4fcc>
    5338:	ldr	x25, [sp, #64]
    533c:	b	4e00 <grub_mod_fini+0x4ab0>
    5340:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5344:	ldr	x1, [x0]
    5348:	mov	x0, x22
    534c:	bl	0 <grub_strcmp>
    5350:	mov	w20, w0
    5354:	cbnz	w0, 5404 <grub_mod_fini+0x50b4>
    5358:	mov	x4, #0x1                   	// #1
    535c:	cbnz	x21, 53b0 <grub_mod_fini+0x5060>
    5360:	add	w0, w0, #0x1
    5364:	cmp	w0, #0x100
    5368:	b.eq	53fc <grub_mod_fini+0x50ac>  // b.none
    536c:	cmp	w0, #0x20
    5370:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    5374:	b.ne	5360 <grub_mod_fini+0x5010>  // b.any
    5378:	add	w1, w0, #0x3f
    537c:	cmp	w0, #0x0
    5380:	csel	w1, w1, w0, lt  // lt = tstop
    5384:	asr	w1, w1, #6
    5388:	sxtw	x1, w1
    538c:	negs	w2, w0
    5390:	and	w3, w0, #0x3f
    5394:	and	w2, w2, #0x3f
    5398:	csneg	w2, w3, w2, mi  // mi = first
    539c:	lsl	x2, x4, x2
    53a0:	ldr	x3, [x19, x1, lsl #3]
    53a4:	orr	x2, x3, x2
    53a8:	str	x2, [x19, x1, lsl #3]
    53ac:	b	5360 <grub_mod_fini+0x5010>
    53b0:	mov	x0, #0x0                   	// #0
    53b4:	mov	w5, #0x40                  	// #64
    53b8:	b	53c8 <grub_mod_fini+0x5078>
    53bc:	add	x0, x0, #0x1
    53c0:	cmp	x0, #0x100
    53c4:	b.eq	53f4 <grub_mod_fini+0x50a4>  // b.none
    53c8:	cmp	w0, #0x20
    53cc:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    53d0:	b.ne	53bc <grub_mod_fini+0x506c>  // b.any
    53d4:	ldrb	w2, [x21, x0]
    53d8:	sdiv	w1, w2, w5
    53dc:	sbfiz	x1, x1, #3, #32
    53e0:	lsl	x2, x4, x2
    53e4:	ldr	x3, [x19, x1]
    53e8:	orr	x2, x3, x2
    53ec:	str	x2, [x19, x1]
    53f0:	b	53bc <grub_mod_fini+0x506c>
    53f4:	ldr	x25, [sp, #64]
    53f8:	b	4e00 <grub_mod_fini+0x4ab0>
    53fc:	ldr	x25, [sp, #64]
    5400:	b	4e00 <grub_mod_fini+0x4ab0>
    5404:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5408:	ldr	x1, [x0]
    540c:	mov	x0, x22
    5410:	bl	0 <grub_strcmp>
    5414:	mov	w20, w0
    5418:	cbnz	w0, 54e4 <grub_mod_fini+0x5194>
    541c:	mov	w22, #0x1                   	// #1
    5420:	cbnz	x21, 5430 <grub_mod_fini+0x50e0>
    5424:	mov	w24, #0x40                  	// #64
    5428:	mov	x23, #0x1                   	// #1
    542c:	b	54c4 <grub_mod_fini+0x5174>
    5430:	mov	x22, #0x0                   	// #0
    5434:	mov	w24, #0x40                  	// #64
    5438:	mov	x23, #0x1                   	// #1
    543c:	b	544c <grub_mod_fini+0x50fc>
    5440:	add	x22, x22, #0x1
    5444:	cmp	x22, #0x100
    5448:	b.eq	5484 <grub_mod_fini+0x5134>  // b.none
    544c:	sub	w0, w22, #0x20
    5450:	cmp	w0, #0x5e
    5454:	b.hi	5440 <grub_mod_fini+0x50f0>  // b.pmore
    5458:	mov	w0, w22
    545c:	bl	0 <grub_isspace>
    5460:	cbnz	w0, 5440 <grub_mod_fini+0x50f0>
    5464:	ldrb	w1, [x21, x22]
    5468:	sdiv	w0, w1, w24
    546c:	sbfiz	x0, x0, #3, #32
    5470:	lsl	x1, x23, x1
    5474:	ldr	x2, [x19, x0]
    5478:	orr	x1, x2, x1
    547c:	str	x1, [x19, x0]
    5480:	b	5440 <grub_mod_fini+0x50f0>
    5484:	ldr	x25, [sp, #64]
    5488:	b	4e00 <grub_mod_fini+0x4ab0>
    548c:	mov	w0, w21
    5490:	bl	0 <grub_isspace>
    5494:	cbnz	w0, 54c0 <grub_mod_fini+0x5170>
    5498:	sdiv	w1, w21, w24
    549c:	sbfiz	x1, x1, #3, #32
    54a0:	negs	w0, w21
    54a4:	and	w21, w21, #0x3f
    54a8:	and	w0, w0, #0x3f
    54ac:	csneg	w0, w21, w0, mi  // mi = first
    54b0:	lsl	x0, x23, x0
    54b4:	ldr	x2, [x19, x1]
    54b8:	orr	x0, x2, x0
    54bc:	str	x0, [x19, x1]
    54c0:	add	w22, w22, #0x1
    54c4:	sub	w21, w22, #0x1
    54c8:	sub	w0, w22, #0x21
    54cc:	cmp	w0, #0x5e
    54d0:	b.ls	548c <grub_mod_fini+0x513c>  // b.plast
    54d4:	cmp	w22, #0xff
    54d8:	b.le	54c0 <grub_mod_fini+0x5170>
    54dc:	ldr	x25, [sp, #64]
    54e0:	b	4e00 <grub_mod_fini+0x4ab0>
    54e4:	adrp	x0, 0 <grub_mod_init-0x2b0>
    54e8:	ldr	x1, [x0]
    54ec:	mov	x0, x22
    54f0:	bl	0 <grub_strcmp>
    54f4:	mov	w20, w0
    54f8:	cbnz	w0, 55ac <grub_mod_fini+0x525c>
    54fc:	mov	w22, w0
    5500:	cbnz	x21, 5510 <grub_mod_fini+0x51c0>
    5504:	mov	w23, #0x40                  	// #64
    5508:	mov	x21, #0x1                   	// #1
    550c:	b	556c <grub_mod_fini+0x521c>
    5510:	mov	x22, #0x0                   	// #0
    5514:	mov	w24, #0x40                  	// #64
    5518:	mov	x23, #0x1                   	// #1
    551c:	b	552c <grub_mod_fini+0x51dc>
    5520:	add	x22, x22, #0x1
    5524:	cmp	x22, #0x100
    5528:	b.eq	5558 <grub_mod_fini+0x5208>  // b.none
    552c:	mov	w0, w22
    5530:	bl	4bc4 <grub_mod_fini+0x4874>
    5534:	cbz	w0, 5520 <grub_mod_fini+0x51d0>
    5538:	ldrb	w1, [x21, x22]
    553c:	sdiv	w0, w1, w24
    5540:	sbfiz	x0, x0, #3, #32
    5544:	lsl	x1, x23, x1
    5548:	ldr	x2, [x19, x0]
    554c:	orr	x1, x2, x1
    5550:	str	x1, [x19, x0]
    5554:	b	5520 <grub_mod_fini+0x51d0>
    5558:	ldr	x25, [sp, #64]
    555c:	b	4e00 <grub_mod_fini+0x4ab0>
    5560:	add	w22, w22, #0x1
    5564:	cmp	w22, #0x100
    5568:	b.eq	55a4 <grub_mod_fini+0x5254>  // b.none
    556c:	mov	w0, w22
    5570:	bl	4bc4 <grub_mod_fini+0x4874>
    5574:	cbz	w0, 5560 <grub_mod_fini+0x5210>
    5578:	sdiv	w1, w22, w23
    557c:	sbfiz	x1, x1, #3, #32
    5580:	negs	w0, w22
    5584:	and	w2, w22, #0x3f
    5588:	and	w0, w0, #0x3f
    558c:	csneg	w0, w2, w0, mi  // mi = first
    5590:	lsl	x0, x21, x0
    5594:	ldr	x2, [x19, x1]
    5598:	orr	x0, x2, x0
    559c:	str	x0, [x19, x1]
    55a0:	b	5560 <grub_mod_fini+0x5210>
    55a4:	ldr	x25, [sp, #64]
    55a8:	b	4e00 <grub_mod_fini+0x4ab0>
    55ac:	adrp	x0, 0 <grub_mod_init-0x2b0>
    55b0:	ldr	x1, [x0]
    55b4:	mov	x0, x22
    55b8:	bl	0 <grub_strcmp>
    55bc:	mov	w20, w0
    55c0:	cbnz	w0, 5698 <grub_mod_fini+0x5348>
    55c4:	cbnz	x21, 55d4 <grub_mod_fini+0x5284>
    55c8:	mov	w5, #0x40                  	// #64
    55cc:	mov	x4, #0x1                   	// #1
    55d0:	b	5668 <grub_mod_fini+0x5318>
    55d4:	mov	x0, #0x0                   	// #0
    55d8:	mov	w5, #0x40                  	// #64
    55dc:	mov	x4, #0x1                   	// #1
    55e0:	b	560c <grub_mod_fini+0x52bc>
    55e4:	ldrb	w2, [x21, x0]
    55e8:	sdiv	w1, w2, w5
    55ec:	sbfiz	x1, x1, #3, #32
    55f0:	lsl	x2, x4, x2
    55f4:	ldr	x3, [x19, x1]
    55f8:	orr	x2, x3, x2
    55fc:	str	x2, [x19, x1]
    5600:	add	x0, x0, #0x1
    5604:	cmp	x0, #0x100
    5608:	b.eq	562c <grub_mod_fini+0x52dc>  // b.none
    560c:	sub	w1, w0, #0x30
    5610:	cmp	w1, #0x9
    5614:	b.ls	55e4 <grub_mod_fini+0x5294>  // b.plast
    5618:	and	w1, w0, #0xffffffdf
    561c:	sub	w1, w1, #0x41
    5620:	cmp	w1, #0x5
    5624:	b.hi	5600 <grub_mod_fini+0x52b0>  // b.pmore
    5628:	b	55e4 <grub_mod_fini+0x5294>
    562c:	ldr	x25, [sp, #64]
    5630:	b	4e00 <grub_mod_fini+0x4ab0>
    5634:	sdiv	w2, w0, w5
    5638:	sbfiz	x2, x2, #3, #32
    563c:	negs	w1, w0
    5640:	and	w3, w0, #0x3f
    5644:	and	w1, w1, #0x3f
    5648:	csneg	w1, w3, w1, mi  // mi = first
    564c:	lsl	x1, x4, x1
    5650:	ldr	x3, [x19, x2]
    5654:	orr	x1, x3, x1
    5658:	str	x1, [x19, x2]
    565c:	add	w0, w0, #0x1
    5660:	cmp	w0, #0x100
    5664:	b.eq	5688 <grub_mod_fini+0x5338>  // b.none
    5668:	sub	w1, w0, #0x30
    566c:	cmp	w1, #0x9
    5670:	b.ls	5634 <grub_mod_fini+0x52e4>  // b.plast
    5674:	and	w1, w0, #0xffffffdf
    5678:	sub	w1, w1, #0x41
    567c:	cmp	w1, #0x5
    5680:	b.hi	565c <grub_mod_fini+0x530c>  // b.pmore
    5684:	b	5634 <grub_mod_fini+0x52e4>
    5688:	ldr	x25, [sp, #64]
    568c:	b	4e00 <grub_mod_fini+0x4ab0>
    5690:	mov	w20, #0xc                   	// #12
    5694:	b	4e00 <grub_mod_fini+0x4ab0>
    5698:	mov	w20, #0x4                   	// #4
    569c:	ldr	x25, [sp, #64]
    56a0:	b	4e00 <grub_mod_fini+0x4ab0>
    56a4:	ldr	x25, [sp, #64]
    56a8:	b	4e00 <grub_mod_fini+0x4ab0>
    56ac:	ldr	x25, [sp, #64]
    56b0:	b	4e00 <grub_mod_fini+0x4ab0>
    56b4:	ldr	x25, [sp, #64]
    56b8:	b	4e00 <grub_mod_fini+0x4ab0>
    56bc:	ldr	x25, [sp, #64]
    56c0:	b	4e00 <grub_mod_fini+0x4ab0>
    56c4:	nop
	...
    5730:	stp	x29, x30, [sp, #-112]!
    5734:	mov	x29, sp
    5738:	stp	x19, x20, [sp, #16]
    573c:	stp	x21, x22, [sp, #32]
    5740:	stp	x23, x24, [sp, #48]
    5744:	stp	x25, x26, [sp, #64]
    5748:	mov	x21, x0
    574c:	mov	x25, x1
    5750:	mov	x26, x2
    5754:	mov	x20, x3
    5758:	and	w24, w4, #0xff
    575c:	mov	x23, x5
    5760:	str	wzr, [sp, #108]
    5764:	mov	x0, #0x20                  	// #32
    5768:	bl	0 <grub_zalloc>
    576c:	mov	x19, x0
    5770:	cbz	x0, 58c4 <grub_mod_fini+0x5574>
    5774:	mov	x0, #0x38                  	// #56
    5778:	bl	0 <grub_zalloc>
    577c:	mov	x22, x0
    5780:	cbz	x0, 58d4 <grub_mod_fini+0x5584>
    5784:	ldrb	w0, [x0, #32]
    5788:	bfxil	w0, w24, #0, #1
    578c:	strb	w0, [x22, #32]
    5790:	mov	x5, #0x0                   	// #0
    5794:	mov	x4, x26
    5798:	add	x3, sp, #0x6c
    579c:	mov	x2, x22
    57a0:	mov	x1, x19
    57a4:	mov	x0, x25
    57a8:	bl	4c24 <grub_mod_fini+0x48d4>
    57ac:	mov	w25, w0
    57b0:	cbnz	w0, 58ec <grub_mod_fini+0x559c>
    57b4:	ldrb	w1, [x20]
    57b8:	mov	x3, #0x1                   	// #1
    57bc:	cbz	w1, 57dc <grub_mod_fini+0x548c>
    57c0:	ubfx	x0, x1, #6, #2
    57c4:	lsl	x1, x3, x1
    57c8:	ldr	x2, [x19, x0, lsl #3]
    57cc:	orr	x1, x2, x1
    57d0:	str	x1, [x19, x0, lsl #3]
    57d4:	ldrb	w1, [x20, #1]!
    57d8:	cbnz	w1, 57c0 <grub_mod_fini+0x5470>
    57dc:	cbz	w24, 57fc <grub_mod_fini+0x54ac>
    57e0:	mov	x0, #0x0                   	// #0
    57e4:	ldr	x1, [x19, x0, lsl #3]
    57e8:	mvn	x1, x1
    57ec:	str	x1, [x19, x0, lsl #3]
    57f0:	add	x0, x0, #0x1
    57f4:	cmp	x0, #0x4
    57f8:	b.ne	57e4 <grub_mod_fini+0x5494>  // b.any
    57fc:	ldr	w0, [x21, #164]
    5800:	cmp	w0, #0x1
    5804:	b.le	582c <grub_mod_fini+0x54dc>
    5808:	ldr	x3, [x21, #120]
    580c:	mov	x0, #0x0                   	// #0
    5810:	ldr	x1, [x19, x0]
    5814:	ldr	x2, [x3, x0]
    5818:	and	x1, x1, x2
    581c:	str	x1, [x19, x0]
    5820:	add	x0, x0, #0x8
    5824:	cmp	x0, #0x20
    5828:	b.ne	5810 <grub_mod_fini+0x54c0>  // b.any
    582c:	mov	w0, #0x3                   	// #3
    5830:	strb	w0, [sp, #96]
    5834:	str	x19, [sp, #88]
    5838:	add	x3, sp, #0x58
    583c:	mov	x2, #0x0                   	// #0
    5840:	mov	x1, #0x0                   	// #0
    5844:	mov	x0, x21
    5848:	bl	2ad4 <grub_mod_fini+0x2784>
    584c:	mov	x20, x0
    5850:	cbz	x0, 5914 <grub_mod_fini+0x55c4>
    5854:	ldr	w0, [x21, #164]
    5858:	cmp	w0, #0x1
    585c:	b.le	5908 <grub_mod_fini+0x55b8>
    5860:	mov	w0, #0x6                   	// #6
    5864:	strb	w0, [sp, #96]
    5868:	str	x22, [sp, #88]
    586c:	ldrb	w0, [x21, #160]
    5870:	orr	w0, w0, #0x2
    5874:	strb	w0, [x21, #160]
    5878:	add	x3, sp, #0x58
    587c:	mov	x2, #0x0                   	// #0
    5880:	mov	x1, #0x0                   	// #0
    5884:	mov	x0, x21
    5888:	bl	2ad4 <grub_mod_fini+0x2784>
    588c:	mov	x2, x0
    5890:	cbz	x0, 5914 <grub_mod_fini+0x55c4>
    5894:	mov	w3, #0xa                   	// #10
    5898:	mov	x1, x20
    589c:	mov	x0, x21
    58a0:	bl	2c40 <grub_mod_fini+0x28f0>
    58a4:	mov	x20, x0
    58a8:	mov	x0, x20
    58ac:	ldp	x19, x20, [sp, #16]
    58b0:	ldp	x21, x22, [sp, #32]
    58b4:	ldp	x23, x24, [sp, #48]
    58b8:	ldp	x25, x26, [sp, #64]
    58bc:	ldp	x29, x30, [sp], #112
    58c0:	ret
    58c4:	mov	w0, #0xc                   	// #12
    58c8:	str	w0, [x23]
    58cc:	mov	x20, x19
    58d0:	b	58a8 <grub_mod_fini+0x5558>
    58d4:	mov	x0, x19
    58d8:	bl	0 <grub_free>
    58dc:	mov	w0, #0xc                   	// #12
    58e0:	str	w0, [x23]
    58e4:	mov	x20, x22
    58e8:	b	58a8 <grub_mod_fini+0x5558>
    58ec:	mov	x0, x19
    58f0:	bl	0 <grub_free>
    58f4:	mov	x0, x22
    58f8:	bl	3928 <grub_mod_fini+0x35d8>
    58fc:	str	w25, [x23]
    5900:	mov	x20, #0x0                   	// #0
    5904:	b	58a8 <grub_mod_fini+0x5558>
    5908:	mov	x0, x22
    590c:	bl	3928 <grub_mod_fini+0x35d8>
    5910:	b	58a8 <grub_mod_fini+0x5558>
    5914:	mov	x0, x19
    5918:	bl	0 <grub_free>
    591c:	mov	x0, x22
    5920:	bl	3928 <grub_mod_fini+0x35d8>
    5924:	mov	w0, #0xc                   	// #12
    5928:	str	w0, [x23]
    592c:	mov	x20, #0x0                   	// #0
    5930:	b	58a8 <grub_mod_fini+0x5558>
    5934:	stp	x29, x30, [sp, #-80]!
    5938:	mov	x29, sp
    593c:	stp	x19, x20, [sp, #16]
    5940:	stp	x21, x22, [sp, #32]
    5944:	stp	x23, x24, [sp, #48]
    5948:	mov	x24, x2
    594c:	mov	w20, w3
    5950:	sbfiz	x21, x1, #4, #32
    5954:	ldr	x23, [x0]
    5958:	add	x1, x23, x21
    595c:	ldrb	w22, [x1, #8]
    5960:	cmp	w22, #0x7
    5964:	b.eq	59b4 <grub_mod_fini+0x5664>  // b.none
    5968:	str	x25, [sp, #64]
    596c:	mov	x25, x0
    5970:	mov	w1, w3
    5974:	mov	x0, x2
    5978:	bl	1198 <grub_mod_fini+0xe48>
    597c:	mov	w19, w0
    5980:	cmp	w22, #0x5
    5984:	b.eq	5abc <grub_mod_fini+0x576c>  // b.none
    5988:	cmp	w22, #0x6
    598c:	ccmp	w0, #0x1, #0x4, eq  // eq = none
    5990:	b.gt	5af8 <grub_mod_fini+0x57a8>
    5994:	mov	w19, #0x0                   	// #0
    5998:	ldr	x25, [sp, #64]
    599c:	mov	w0, w19
    59a0:	ldp	x19, x20, [sp, #16]
    59a4:	ldp	x21, x22, [sp, #32]
    59a8:	ldp	x23, x24, [sp, #48]
    59ac:	ldp	x29, x30, [sp], #80
    59b0:	ret
    59b4:	ldr	x0, [x2, #8]
    59b8:	sxtw	x2, w3
    59bc:	add	x3, x0, x2
    59c0:	ldrb	w1, [x0, w20, sxtw]
    59c4:	mov	w19, #0x0                   	// #0
    59c8:	cmp	w1, #0xc1
    59cc:	b.ls	599c <grub_mod_fini+0x564c>  // b.plast
    59d0:	ldr	w5, [x24, #64]
    59d4:	add	w4, w20, #0x1
    59d8:	cmp	w4, w5
    59dc:	b.ge	599c <grub_mod_fini+0x564c>  // b.tcont
    59e0:	ldrb	w0, [x3, #1]
    59e4:	cmp	w1, #0xdf
    59e8:	b.ls	5a40 <grub_mod_fini+0x56f0>  // b.plast
    59ec:	cmp	w1, #0xef
    59f0:	b.hi	5a58 <grub_mod_fini+0x5708>  // b.pmore
    59f4:	cmp	w1, #0xe0
    59f8:	mov	w19, #0x0                   	// #0
    59fc:	mov	w1, #0x9f                  	// #159
    5a00:	ccmp	w0, w1, #0x2, eq  // eq = none
    5a04:	b.ls	599c <grub_mod_fini+0x564c>  // b.plast
    5a08:	mov	w19, #0x3                   	// #3
    5a0c:	add	w20, w19, w20
    5a10:	cmp	w5, w20
    5a14:	b.lt	5d54 <grub_mod_fini+0x5a04>  // b.tstop
    5a18:	mov	x1, #0x1                   	// #1
    5a1c:	ldrb	w0, [x3, x1]
    5a20:	sub	w0, w0, #0x80
    5a24:	and	w0, w0, #0xff
    5a28:	cmp	w0, #0x3f
    5a2c:	b.hi	5d5c <grub_mod_fini+0x5a0c>  // b.pmore
    5a30:	add	x1, x1, #0x1
    5a34:	cmp	w19, w1
    5a38:	b.gt	5a1c <grub_mod_fini+0x56cc>
    5a3c:	b	599c <grub_mod_fini+0x564c>
    5a40:	sub	w0, w0, #0x80
    5a44:	and	w0, w0, #0xff
    5a48:	cmp	w0, #0x40
    5a4c:	cset	w19, cc  // cc = lo, ul, last
    5a50:	lsl	w19, w19, #1
    5a54:	b	599c <grub_mod_fini+0x564c>
    5a58:	cmp	w1, #0xf7
    5a5c:	b.hi	5a7c <grub_mod_fini+0x572c>  // b.pmore
    5a60:	cmp	w1, #0xf0
    5a64:	mov	w19, #0x0                   	// #0
    5a68:	mov	w1, #0x8f                  	// #143
    5a6c:	ccmp	w0, w1, #0x2, eq  // eq = none
    5a70:	b.ls	599c <grub_mod_fini+0x564c>  // b.plast
    5a74:	mov	w19, #0x4                   	// #4
    5a78:	b	5a0c <grub_mod_fini+0x56bc>
    5a7c:	cmp	w1, #0xfb
    5a80:	b.hi	5a9c <grub_mod_fini+0x574c>  // b.pmore
    5a84:	cmp	w1, #0xf8
    5a88:	mov	w1, #0x87                  	// #135
    5a8c:	ccmp	w0, w1, #0x2, eq  // eq = none
    5a90:	b.ls	5d3c <grub_mod_fini+0x59ec>  // b.plast
    5a94:	mov	w19, #0x5                   	// #5
    5a98:	b	5a0c <grub_mod_fini+0x56bc>
    5a9c:	cmp	w1, #0xfd
    5aa0:	b.hi	5d44 <grub_mod_fini+0x59f4>  // b.pmore
    5aa4:	cmp	w1, #0xfc
    5aa8:	mov	w1, #0x83                  	// #131
    5aac:	ccmp	w0, w1, #0x2, eq  // eq = none
    5ab0:	b.ls	5d4c <grub_mod_fini+0x59fc>  // b.plast
    5ab4:	mov	w19, #0x6                   	// #6
    5ab8:	b	5a0c <grub_mod_fini+0x56bc>
    5abc:	cmp	w0, #0x1
    5ac0:	b.le	5d64 <grub_mod_fini+0x5a14>
    5ac4:	ldr	x0, [x25, #200]
    5ac8:	tbnz	w0, #6, 5adc <grub_mod_fini+0x578c>
    5acc:	ldr	x1, [x24, #8]
    5ad0:	ldrb	w1, [x1, w20, sxtw]
    5ad4:	cmp	w1, #0xa
    5ad8:	b.eq	5d70 <grub_mod_fini+0x5a20>  // b.none
    5adc:	tbz	w0, #7, 5da0 <grub_mod_fini+0x5a50>
    5ae0:	ldr	x0, [x24, #8]
    5ae4:	ldrb	w0, [x0, w20, sxtw]
    5ae8:	cmp	w0, #0x0
    5aec:	csel	w19, w19, wzr, ne  // ne = any
    5af0:	ldr	x25, [sp, #64]
    5af4:	b	599c <grub_mod_fini+0x564c>
    5af8:	ldr	x22, [x23, x21]
    5afc:	ldr	x0, [x22, #48]
    5b00:	cbnz	x0, 5b0c <grub_mod_fini+0x57bc>
    5b04:	ldr	w21, [x22, #36]
    5b08:	cbz	w21, 5b48 <grub_mod_fini+0x57f8>
    5b0c:	mov	w1, w20
    5b10:	mov	x0, x24
    5b14:	bl	11f4 <grub_mod_fini+0xea4>
    5b18:	mov	w21, w0
    5b1c:	ldr	w2, [x22, #36]
    5b20:	cmp	w2, #0x0
    5b24:	b.le	5b48 <grub_mod_fini+0x57f8>
    5b28:	ldr	x3, [x22]
    5b2c:	mov	x1, #0x0                   	// #0
    5b30:	ldr	w0, [x3, x1, lsl #2]
    5b34:	cmp	w0, w21
    5b38:	b.eq	5d28 <grub_mod_fini+0x59d8>  // b.none
    5b3c:	add	x1, x1, #0x1
    5b40:	cmp	w2, w1
    5b44:	b.gt	5b30 <grub_mod_fini+0x57e0>
    5b48:	ldr	w0, [x22, #52]
    5b4c:	cmp	w0, #0x0
    5b50:	b.le	5cdc <grub_mod_fini+0x598c>
    5b54:	mov	x20, #0x0                   	// #0
    5b58:	mov	w25, w21
    5b5c:	and	w24, w21, #0xffffffdf
    5b60:	sub	w24, w24, #0x41
    5b64:	mov	w23, w24
    5b68:	b	5c24 <grub_mod_fini+0x58d4>
    5b6c:	cmp	w1, #0x1
    5b70:	b.ne	5c14 <grub_mod_fini+0x58c4>  // b.any
    5b74:	cmp	w23, #0x19
    5b78:	b.ls	5d28 <grub_mod_fini+0x59d8>  // b.plast
    5b7c:	sub	w0, w21, #0x30
    5b80:	cmp	w0, #0x9
    5b84:	cset	w0, ls  // ls = plast
    5b88:	b	5c10 <grub_mod_fini+0x58c0>
    5b8c:	cmp	w1, #0x5
    5b90:	b.eq	5c70 <grub_mod_fini+0x5920>  // b.none
    5b94:	sub	w0, w21, #0x30
    5b98:	cmp	w0, #0x9
    5b9c:	cset	w0, ls  // ls = plast
    5ba0:	b	5c10 <grub_mod_fini+0x58c0>
    5ba4:	cmp	w1, #0xa
    5ba8:	b.eq	5c9c <grub_mod_fini+0x594c>  // b.none
    5bac:	b.ls	5be4 <grub_mod_fini+0x5894>  // b.plast
    5bb0:	cmp	w1, #0xb
    5bb4:	b.eq	5cac <grub_mod_fini+0x595c>  // b.none
    5bb8:	cmp	w1, #0xc
    5bbc:	b.ne	5c14 <grub_mod_fini+0x58c4>  // b.any
    5bc0:	sub	w1, w21, #0x30
    5bc4:	sub	w0, w21, #0x61
    5bc8:	cmp	w1, #0x9
    5bcc:	ccmp	w0, #0x5, #0x0, hi  // hi = pmore
    5bd0:	b.ls	5d28 <grub_mod_fini+0x59d8>  // b.plast
    5bd4:	sub	w0, w21, #0x41
    5bd8:	cmp	w0, #0x5
    5bdc:	cset	w0, ls  // ls = plast
    5be0:	b	5c10 <grub_mod_fini+0x58c0>
    5be4:	cmp	w1, #0x8
    5be8:	b.eq	5c8c <grub_mod_fini+0x593c>  // b.none
    5bec:	cmp	w1, #0x9
    5bf0:	b.ne	5c14 <grub_mod_fini+0x58c4>  // b.any
    5bf4:	cmp	w21, #0x20
    5bf8:	ccmp	w21, #0x9, #0x4, ne  // ne = any
    5bfc:	cset	w0, eq  // eq = none
    5c00:	b	5c10 <grub_mod_fini+0x58c0>
    5c04:	cmp	w21, #0x7f
    5c08:	ccmp	w21, #0x1f, #0x0, ne  // ne = any
    5c0c:	cset	w0, ls  // ls = plast
    5c10:	cbnz	w0, 5d28 <grub_mod_fini+0x59d8>
    5c14:	add	x20, x20, #0x1
    5c18:	ldr	w0, [x22, #52]
    5c1c:	cmp	w0, w20
    5c20:	b.le	5cdc <grub_mod_fini+0x598c>
    5c24:	ldr	x0, [x22, #24]
    5c28:	ldr	w1, [x0, x20, lsl #2]
    5c2c:	cmp	w1, #0x7
    5c30:	b.eq	5c7c <grub_mod_fini+0x592c>  // b.none
    5c34:	b.hi	5ba4 <grub_mod_fini+0x5854>  // b.pmore
    5c38:	cmp	w1, #0x4
    5c3c:	b.eq	5c64 <grub_mod_fini+0x5914>  // b.none
    5c40:	b.hi	5b8c <grub_mod_fini+0x583c>  // b.pmore
    5c44:	cmp	w1, #0x2
    5c48:	b.eq	5c04 <grub_mod_fini+0x58b4>  // b.none
    5c4c:	cmp	w1, #0x3
    5c50:	b.ne	5b6c <grub_mod_fini+0x581c>  // b.any
    5c54:	sub	w0, w21, #0x61
    5c58:	cmp	w0, #0x19
    5c5c:	cset	w0, ls  // ls = plast
    5c60:	b	5c10 <grub_mod_fini+0x58c0>
    5c64:	mov	w0, w25
    5c68:	bl	0 <grub_isspace>
    5c6c:	b	5c10 <grub_mod_fini+0x58c0>
    5c70:	cmp	w23, #0x19
    5c74:	cset	w0, ls  // ls = plast
    5c78:	b	5c10 <grub_mod_fini+0x58c0>
    5c7c:	sub	w0, w21, #0x20
    5c80:	cmp	w0, #0x5e
    5c84:	cset	w0, ls  // ls = plast
    5c88:	b	5c10 <grub_mod_fini+0x58c0>
    5c8c:	sub	w0, w21, #0x41
    5c90:	cmp	w0, #0x19
    5c94:	cset	w0, ls  // ls = plast
    5c98:	b	5c10 <grub_mod_fini+0x58c0>
    5c9c:	sub	w0, w21, #0x21
    5ca0:	cmp	w0, #0x5d
    5ca4:	cset	w0, ls  // ls = plast
    5ca8:	b	5c10 <grub_mod_fini+0x58c0>
    5cac:	sub	w0, w21, #0x20
    5cb0:	cmp	w0, #0x5e
    5cb4:	b.hi	5c14 <grub_mod_fini+0x58c4>  // b.pmore
    5cb8:	mov	w0, w25
    5cbc:	bl	0 <grub_isspace>
    5cc0:	cbnz	w0, 5c14 <grub_mod_fini+0x58c4>
    5cc4:	cmp	w24, #0x19
    5cc8:	b.ls	5c14 <grub_mod_fini+0x58c4>  // b.plast
    5ccc:	sub	w0, w25, #0x30
    5cd0:	cmp	w0, #0x9
    5cd4:	cset	w0, hi  // hi = pmore
    5cd8:	b	5c10 <grub_mod_fini+0x58c0>
    5cdc:	ldr	w0, [x22, #48]
    5ce0:	cmp	w0, #0x0
    5ce4:	b.le	5d88 <grub_mod_fini+0x5a38>
    5ce8:	ldr	x3, [x22, #8]
    5cec:	sub	w2, w0, #0x1
    5cf0:	add	x2, x2, #0x1
    5cf4:	lsl	x2, x2, #2
    5cf8:	mov	x0, #0x0                   	// #0
    5cfc:	b	5d0c <grub_mod_fini+0x59bc>
    5d00:	add	x0, x0, #0x4
    5d04:	cmp	x2, x0
    5d08:	b.eq	5d88 <grub_mod_fini+0x5a38>  // b.none
    5d0c:	ldr	w1, [x3, x0]
    5d10:	cmp	w1, w21
    5d14:	b.gt	5d00 <grub_mod_fini+0x59b0>
    5d18:	ldr	x1, [x22, #16]
    5d1c:	ldr	w1, [x1, x0]
    5d20:	cmp	w1, w21
    5d24:	b.lt	5d00 <grub_mod_fini+0x59b0>  // b.tstop
    5d28:	ldrb	w0, [x22, #32]
    5d2c:	tst	x0, #0x1
    5d30:	csel	w19, w19, wzr, eq  // eq = none
    5d34:	ldr	x25, [sp, #64]
    5d38:	b	599c <grub_mod_fini+0x564c>
    5d3c:	mov	w19, #0x0                   	// #0
    5d40:	b	599c <grub_mod_fini+0x564c>
    5d44:	mov	w19, #0x0                   	// #0
    5d48:	b	599c <grub_mod_fini+0x564c>
    5d4c:	mov	w19, #0x0                   	// #0
    5d50:	b	599c <grub_mod_fini+0x564c>
    5d54:	mov	w19, #0x0                   	// #0
    5d58:	b	599c <grub_mod_fini+0x564c>
    5d5c:	mov	w19, #0x0                   	// #0
    5d60:	b	599c <grub_mod_fini+0x564c>
    5d64:	mov	w19, #0x0                   	// #0
    5d68:	ldr	x25, [sp, #64]
    5d6c:	b	599c <grub_mod_fini+0x564c>
    5d70:	mov	w19, #0x0                   	// #0
    5d74:	ldr	x25, [sp, #64]
    5d78:	b	599c <grub_mod_fini+0x564c>
    5d7c:	mov	w19, #0x0                   	// #0
    5d80:	ldr	x25, [sp, #64]
    5d84:	b	599c <grub_mod_fini+0x564c>
    5d88:	ldrb	w0, [x22, #32]
    5d8c:	tbz	w0, #0, 5d7c <grub_mod_fini+0x5a2c>
    5d90:	cmp	w19, #0x0
    5d94:	csinc	w19, w19, wzr, gt
    5d98:	ldr	x25, [sp, #64]
    5d9c:	b	599c <grub_mod_fini+0x564c>
    5da0:	ldr	x25, [sp, #64]
    5da4:	b	599c <grub_mod_fini+0x564c>
    5da8:	stp	x29, x30, [sp, #-48]!
    5dac:	mov	x29, sp
    5db0:	stp	x19, x20, [sp, #16]
    5db4:	stp	x21, x22, [sp, #32]
    5db8:	mov	x20, x0
    5dbc:	mov	x19, x1
    5dc0:	ldr	w21, [x1, #56]
    5dc4:	ldrb	w2, [x1, #48]
    5dc8:	cmp	w2, #0xb
    5dcc:	b.hi	5e40 <grub_mod_fini+0x5af0>  // b.pmore
    5dd0:	cmp	w2, #0x9
    5dd4:	b.hi	5e64 <grub_mod_fini+0x5b14>  // b.pmore
    5dd8:	cmp	w2, #0x4
    5ddc:	b.eq	5f5c <grub_mod_fini+0x5c0c>  // b.none
    5de0:	b.ls	5e0c <grub_mod_fini+0x5abc>  // b.plast
    5de4:	sub	w1, w2, #0x8
    5de8:	and	w1, w1, #0xff
    5dec:	cmp	w1, #0x1
    5df0:	b.hi	5f98 <grub_mod_fini+0x5c48>  // b.pmore
    5df4:	ldr	x1, [x19, #32]
    5df8:	ldr	x0, [x20, #40]
    5dfc:	ldr	w1, [x1, #56]
    5e00:	add	x0, x0, w21, sxtw #4
    5e04:	bl	2e40 <grub_mod_fini+0x2af0>
    5e08:	b	5e54 <grub_mod_fini+0x5b04>
    5e0c:	cmp	w2, #0x2
    5e10:	b.ne	5fb4 <grub_mod_fini+0x5c64>  // b.any
    5e14:	ldr	x1, [x1, #32]
    5e18:	mov	w0, #0x0                   	// #0
    5e1c:	cbz	x1, 5e54 <grub_mod_fini+0x5b04>
    5e20:	mov	w2, #0x59f                 	// #1439
    5e24:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5e28:	ldr	x1, [x0]
    5e2c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5e30:	ldr	x0, [x0]
    5e34:	bl	0 <grub_printf>
    5e38:	mov	w0, #0x0                   	// #0
    5e3c:	b	5e54 <grub_mod_fini+0x5b04>
    5e40:	cmp	w2, #0xc
    5e44:	b.eq	5df4 <grub_mod_fini+0x5aa4>  // b.none
    5e48:	mov	w0, #0x0                   	// #0
    5e4c:	cmp	w2, #0x10
    5e50:	b.ne	5f98 <grub_mod_fini+0x5c48>  // b.any
    5e54:	ldp	x19, x20, [sp, #16]
    5e58:	ldp	x21, x22, [sp, #32]
    5e5c:	ldp	x29, x30, [sp], #48
    5e60:	ret
    5e64:	ldrb	w0, [x0, #160]
    5e68:	orr	w0, w0, #0x1
    5e6c:	strb	w0, [x20, #160]
    5e70:	ldr	x0, [x1, #8]
    5e74:	cbz	x0, 5ee4 <grub_mod_fini+0x5b94>
    5e78:	ldr	x0, [x0, #24]
    5e7c:	ldr	w22, [x0, #56]
    5e80:	ldr	x0, [x19, #16]
    5e84:	cbz	x0, 5ef0 <grub_mod_fini+0x5ba0>
    5e88:	ldr	x0, [x0, #24]
    5e8c:	ldr	w19, [x0, #56]
    5e90:	tbnz	w22, #31, 5efc <grub_mod_fini+0x5bac>
    5e94:	tbnz	w19, #31, 5f18 <grub_mod_fini+0x5bc8>
    5e98:	sbfiz	x21, x21, #4, #32
    5e9c:	ldr	x0, [x20, #40]
    5ea0:	add	x20, x0, x21
    5ea4:	mov	w1, #0x2                   	// #2
    5ea8:	str	w1, [x0, x21]
    5eac:	mov	x0, #0x8                   	// #8
    5eb0:	bl	0 <grub_malloc>
    5eb4:	str	x0, [x20, #8]
    5eb8:	cbz	x0, 5fcc <grub_mod_fini+0x5c7c>
    5ebc:	cmp	w22, w19
    5ec0:	b.eq	5f34 <grub_mod_fini+0x5be4>  // b.none
    5ec4:	mov	w1, #0x2                   	// #2
    5ec8:	str	w1, [x20, #4]
    5ecc:	b.ge	5f48 <grub_mod_fini+0x5bf8>  // b.tcont
    5ed0:	str	w22, [x0]
    5ed4:	ldr	x0, [x20, #8]
    5ed8:	str	w19, [x0, #4]
    5edc:	mov	w0, #0x0                   	// #0
    5ee0:	b	5e54 <grub_mod_fini+0x5b04>
    5ee4:	ldr	x0, [x1, #32]
    5ee8:	ldr	w22, [x0, #56]
    5eec:	b	5e80 <grub_mod_fini+0x5b30>
    5ef0:	ldr	x0, [x19, #32]
    5ef4:	ldr	w19, [x0, #56]
    5ef8:	b	5e90 <grub_mod_fini+0x5b40>
    5efc:	mov	w2, #0x5af                 	// #1455
    5f00:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5f04:	ldr	x1, [x0]
    5f08:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5f0c:	ldr	x0, [x0]
    5f10:	bl	0 <grub_printf>
    5f14:	b	5e94 <grub_mod_fini+0x5b44>
    5f18:	mov	w2, #0x5b0                 	// #1456
    5f1c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5f20:	ldr	x1, [x0]
    5f24:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5f28:	ldr	x0, [x0]
    5f2c:	bl	0 <grub_printf>
    5f30:	b	5e98 <grub_mod_fini+0x5b48>
    5f34:	mov	w1, #0x1                   	// #1
    5f38:	str	w1, [x20, #4]
    5f3c:	str	w22, [x0]
    5f40:	mov	w0, #0x0                   	// #0
    5f44:	b	5e54 <grub_mod_fini+0x5b04>
    5f48:	str	w19, [x0]
    5f4c:	ldr	x0, [x20, #8]
    5f50:	str	w22, [x0, #4]
    5f54:	mov	w0, #0x0                   	// #0
    5f58:	b	5e54 <grub_mod_fini+0x5b04>
    5f5c:	sxtw	x21, w21
    5f60:	ldr	x0, [x1, #32]
    5f64:	ldr	w1, [x0, #56]
    5f68:	ldr	x0, [x20, #24]
    5f6c:	str	w1, [x0, x21, lsl #2]
    5f70:	ldrb	w1, [x19, #48]
    5f74:	mov	w0, #0x0                   	// #0
    5f78:	cmp	w1, #0x4
    5f7c:	b.ne	5e54 <grub_mod_fini+0x5b04>  // b.any
    5f80:	ldr	x1, [x20, #24]
    5f84:	ldr	x0, [x20, #40]
    5f88:	ldr	w1, [x1, x21, lsl #2]
    5f8c:	add	x0, x0, x21, lsl #4
    5f90:	bl	2e40 <grub_mod_fini+0x2af0>
    5f94:	b	5e54 <grub_mod_fini+0x5b04>
    5f98:	tbz	w2, #3, 5fb4 <grub_mod_fini+0x5c64>
    5f9c:	mov	w2, #0x5c2                 	// #1474
    5fa0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5fa4:	ldr	x1, [x0]
    5fa8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    5fac:	ldr	x0, [x0]
    5fb0:	bl	0 <grub_printf>
    5fb4:	ldr	x0, [x19, #32]
    5fb8:	ldr	w1, [x0, #56]
    5fbc:	ldr	x0, [x20, #24]
    5fc0:	str	w1, [x0, w21, sxtw #2]
    5fc4:	mov	w0, #0x0                   	// #0
    5fc8:	b	5e54 <grub_mod_fini+0x5b04>
    5fcc:	mov	w0, #0xc                   	// #12
    5fd0:	b	5e54 <grub_mod_fini+0x5b04>
    5fd4:	nop
	...
    5fe8:	stp	x29, x30, [sp, #-64]!
    5fec:	mov	x29, sp
    5ff0:	stp	x19, x20, [sp, #16]
    5ff4:	stp	x21, x22, [sp, #32]
    5ff8:	stp	x23, x24, [sp, #48]
    5ffc:	mov	x20, x0
    6000:	mov	x24, x1
    6004:	mov	w23, w2
    6008:	mov	x22, x3
    600c:	mov	x21, x4
    6010:	ldr	w19, [x0]
    6014:	sub	w19, w19, #0x1
    6018:	str	w19, [x0]
    601c:	tbnz	w19, #31, 6090 <grub_mod_fini+0x5d40>
    6020:	sbfiz	x19, x19, #5, #32
    6024:	ldr	x0, [x20, #8]
    6028:	ldr	w0, [x0, x19]
    602c:	str	w0, [x24]
    6030:	ldr	x0, [x20, #8]
    6034:	add	x0, x0, x19
    6038:	sbfiz	x2, x23, #3, #32
    603c:	ldr	x1, [x0, #8]
    6040:	mov	x0, x22
    6044:	bl	0 <grub_memmove>
    6048:	ldr	x0, [x21, #8]
    604c:	bl	0 <grub_free>
    6050:	ldr	x0, [x20, #8]
    6054:	add	x0, x0, x19
    6058:	ldr	x0, [x0, #8]
    605c:	bl	0 <grub_free>
    6060:	ldr	x0, [x20, #8]
    6064:	add	x0, x0, x19
    6068:	ldp	x0, x1, [x0, #16]
    606c:	stp	x0, x1, [x21]
    6070:	ldr	x0, [x20, #8]
    6074:	add	x19, x0, x19
    6078:	ldr	w0, [x19, #4]
    607c:	ldp	x19, x20, [sp, #16]
    6080:	ldp	x21, x22, [sp, #32]
    6084:	ldp	x23, x24, [sp, #48]
    6088:	ldp	x29, x30, [sp], #64
    608c:	ret
    6090:	mov	w2, #0x553                 	// #1363
    6094:	adrp	x0, 0 <grub_mod_init-0x2b0>
    6098:	ldr	x1, [x0]
    609c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    60a0:	ldr	x0, [x0]
    60a4:	bl	0 <grub_printf>
    60a8:	b	6020 <grub_mod_fini+0x5cd0>
    60ac:	nop
	...
    60c0:	ldr	w1, [x0, #64]
    60c4:	ldr	w6, [x0, #52]
    60c8:	cmp	w6, w1
    60cc:	csel	w6, w6, w1, le
    60d0:	ldr	w3, [x0, #44]
    60d4:	cmp	w6, w3
    60d8:	b.le	638c <grub_mod_fini+0x603c>
    60dc:	sub	sp, sp, #0x50
    60e0:	mov	x9, #0x1                   	// #1
    60e4:	mov	w12, #0x3                   	// #3
    60e8:	mov	w11, #0x2                   	// #2
    60ec:	mov	w8, #0x1                   	// #1
    60f0:	adrp	x7, 0 <grub_mod_init-0x2b0>
    60f4:	add	x10, sp, #0x10
    60f8:	mov	w4, #0xffffffff            	// #-1
    60fc:	b	6270 <grub_mod_fini+0x5f20>
    6100:	ldr	w1, [x0, #104]
    6104:	cmp	w1, #0x0
    6108:	ccmp	w2, #0x0, #0x4, gt
    610c:	b.le	6164 <grub_mod_fini+0x5e14>
    6110:	sxtw	x17, w3
    6114:	mov	x13, x17
    6118:	mov	w5, #0x0                   	// #0
    611c:	sub	x17, x10, x17
    6120:	ldr	w1, [x0, #40]
    6124:	add	w1, w3, w1
    6128:	add	w1, w1, w5
    612c:	ldr	x16, [x0]
    6130:	ldrb	w1, [x16, w1, sxtw]
    6134:	ldr	x16, [x0, #80]
    6138:	ldrb	w1, [x16, x1]
    613c:	ldr	x16, [x0, #8]
    6140:	strb	w1, [x16, x13]
    6144:	strb	w1, [x17, x13]
    6148:	add	w5, w5, #0x1
    614c:	add	x13, x13, #0x1
    6150:	ldr	w1, [x0, #104]
    6154:	cmp	w1, w2
    6158:	csel	w1, w1, w2, le
    615c:	cmp	w1, w5
    6160:	b.gt	6120 <grub_mod_fini+0x5dd0>
    6164:	sxtw	x2, w2
    6168:	add	x1, sp, #0x10
    616c:	b	629c <grub_mod_fini+0x5f4c>
    6170:	ldr	w18, [x0, #32]
    6174:	bfi	w5, w18, #6, #26
    6178:	str	w5, [x0, #32]
    617c:	sub	w13, w13, #0x1
    6180:	str	w13, [x0, #36]
    6184:	cmp	w5, #0x1f
    6188:	ccmp	w13, #0x1, #0x0, ls  // ls = plast
    618c:	b.eq	619c <grub_mod_fini+0x5e4c>  // b.none
    6190:	cmp	w13, #0x2
    6194:	ccmp	w5, #0xf, #0x2, eq  // eq = none
    6198:	b.hi	61e4 <grub_mod_fini+0x5e94>  // b.pmore
    619c:	str	wzr, [x0, #32]
    61a0:	str	wzr, [x0, #36]
    61a4:	b	62d0 <grub_mod_fini+0x5f80>
    61a8:	tbz	w5, #7, 61e0 <grub_mod_fini+0x5e90>
    61ac:	and	w13, w5, #0xe0
    61b0:	cmp	w13, #0xc0
    61b4:	b.eq	62fc <grub_mod_fini+0x5fac>  // b.none
    61b8:	and	w13, w5, #0xf0
    61bc:	cmp	w13, #0xe0
    61c0:	b.eq	631c <grub_mod_fini+0x5fcc>  // b.none
    61c4:	and	w13, w5, #0xf8
    61c8:	cmp	w13, #0xf0
    61cc:	b.ne	62d0 <grub_mod_fini+0x5f80>  // b.any
    61d0:	str	w12, [x0, #36]
    61d4:	and	w5, w5, #0x7
    61d8:	str	w5, [x0, #32]
    61dc:	b	61e4 <grub_mod_fini+0x5e94>
    61e0:	str	w5, [x0, #32]
    61e4:	ldr	w5, [x0, #36]
    61e8:	cbnz	w5, 632c <grub_mod_fini+0x5fdc>
    61ec:	cbz	x17, 61f8 <grub_mod_fini+0x5ea8>
    61f0:	ldr	w2, [x0, #32]
    61f4:	str	w2, [x17]
    61f8:	ldr	w2, [x0, #32]
    61fc:	cbz	w2, 62d0 <grub_mod_fini+0x5f80>
    6200:	sub	x1, x1, x16
    6204:	add	x2, x1, #0x1
    6208:	cmn	x1, #0x3
    620c:	b.hi	62d0 <grub_mod_fini+0x5f80>  // b.pmore
    6210:	cmn	x2, #0x2
    6214:	b.eq	6338 <grub_mod_fini+0x5fe8>  // b.none
    6218:	add	w14, w3, #0x1
    621c:	sxtw	x5, w3
    6220:	sbfiz	x1, x3, #2, #32
    6224:	ldr	x13, [x0, #16]
    6228:	ldr	w15, [sp, #12]
    622c:	str	w15, [x13, x5, lsl #2]
    6230:	add	w13, w3, w2
    6234:	cmp	w14, w13
    6238:	b.ge	6370 <grub_mod_fini+0x6020>  // b.tcont
    623c:	add	x1, x1, #0x4
    6240:	sub	w2, w2, #0x2
    6244:	add	x5, x5, #0x2
    6248:	add	x2, x2, x5
    624c:	lsl	x2, x2, #2
    6250:	ldr	x3, [x0, #16]
    6254:	str	w4, [x3, x1]
    6258:	add	x1, x1, #0x4
    625c:	cmp	x2, x1
    6260:	b.ne	6250 <grub_mod_fini+0x5f00>  // b.any
    6264:	mov	w3, w13
    6268:	cmp	w6, w3
    626c:	b.le	6350 <grub_mod_fini+0x6000>
    6270:	sub	w2, w6, w3
    6274:	ldr	w15, [x0, #32]
    6278:	ldr	w14, [x0, #36]
    627c:	ldr	x1, [x0, #80]
    6280:	cbnz	x1, 6100 <grub_mod_fini+0x5db0>
    6284:	ldrsw	x1, [x0, #40]
    6288:	add	x1, x1, w3, sxtw
    628c:	ldr	x5, [x0]
    6290:	adds	x1, x5, x1
    6294:	sxtw	x2, w2
    6298:	b.eq	6378 <grub_mod_fini+0x6028>  // b.none
    629c:	str	wzr, [sp, #12]
    62a0:	add	x2, x1, x2
    62a4:	mov	x16, x1
    62a8:	add	x17, sp, #0xc
    62ac:	cmp	x1, x2
    62b0:	b.cs	6338 <grub_mod_fini+0x5fe8>  // b.hs, b.nlast
    62b4:	ldrb	w5, [x1]
    62b8:	ldr	w13, [x0, #36]
    62bc:	cbz	w13, 61a8 <grub_mod_fini+0x5e58>
    62c0:	and	w18, w5, #0xc0
    62c4:	cmp	w18, #0x80
    62c8:	b.eq	6170 <grub_mod_fini+0x5e20>  // b.none
    62cc:	str	wzr, [x0, #36]
    62d0:	ldr	w1, [x0, #40]
    62d4:	add	w1, w3, w1
    62d8:	ldr	x2, [x0]
    62dc:	ldrb	w1, [x2, w1, sxtw]
    62e0:	str	w1, [sp, #12]
    62e4:	ldr	x2, [x0, #80]
    62e8:	cbnz	x2, 6360 <grub_mod_fini+0x6010>
    62ec:	str	w15, [x0, #32]
    62f0:	str	w14, [x0, #36]
    62f4:	mov	x2, x9
    62f8:	b	6218 <grub_mod_fini+0x5ec8>
    62fc:	str	w8, [x0, #36]
    6300:	and	w5, w5, #0x1f
    6304:	str	w5, [x0, #32]
    6308:	cmp	w5, #0x1
    630c:	b.hi	61e4 <grub_mod_fini+0x5e94>  // b.pmore
    6310:	str	wzr, [x0, #36]
    6314:	str	wzr, [x0, #32]
    6318:	b	62d0 <grub_mod_fini+0x5f80>
    631c:	str	w11, [x0, #36]
    6320:	and	w5, w5, #0xf
    6324:	str	w5, [x0, #32]
    6328:	b	61e4 <grub_mod_fini+0x5e94>
    632c:	add	x1, x1, #0x1
    6330:	cmp	x1, x2
    6334:	b.ne	62b4 <grub_mod_fini+0x5f64>  // b.any
    6338:	ldr	w2, [x0, #52]
    633c:	ldr	w1, [x0, #64]
    6340:	cmp	w2, w1
    6344:	b.ge	62d0 <grub_mod_fini+0x5f80>  // b.tcont
    6348:	str	w15, [x0, #32]
    634c:	str	w14, [x0, #36]
    6350:	str	w3, [x0, #44]
    6354:	str	w3, [x0, #48]
    6358:	add	sp, sp, #0x50
    635c:	ret
    6360:	and	x1, x1, #0xff
    6364:	ldrb	w1, [x2, x1]
    6368:	str	w1, [sp, #12]
    636c:	b	62ec <grub_mod_fini+0x5f9c>
    6370:	mov	w3, w14
    6374:	b	6268 <grub_mod_fini+0x5f18>
    6378:	ldr	x2, [x7]
    637c:	mov	x17, x1
    6380:	sub	x16, x2, #0x1
    6384:	mov	x1, x16
    6388:	b	62b4 <grub_mod_fini+0x5f64>
    638c:	str	w3, [x0, #44]
    6390:	str	w3, [x0, #48]
    6394:	ret
	...
    63a0:	stp	x29, x30, [sp, #-384]!
    63a4:	mov	x29, sp
    63a8:	stp	x19, x20, [sp, #16]
    63ac:	stp	x21, x22, [sp, #32]
    63b0:	stp	x25, x26, [sp, #64]
    63b4:	stp	x27, x28, [sp, #80]
    63b8:	mov	x27, x0
    63bc:	mov	x26, x1
    63c0:	mov	x19, x2
    63c4:	ldr	x25, [x0]
    63c8:	ldr	w0, [x25, #164]
    63cc:	mov	w21, #0x0                   	// #0
    63d0:	cmp	w0, #0x1
    63d4:	b.eq	63fc <grub_mod_fini+0x60ac>  // b.none
    63d8:	ldr	w0, [x26, #12]
    63dc:	cmp	w0, #0x0
    63e0:	b.le	68ac <grub_mod_fini+0x655c>
    63e4:	stp	x23, x24, [sp, #48]
    63e8:	mov	x23, #0x0                   	// #0
    63ec:	mov	w20, #0x1                   	// #1
    63f0:	add	x0, sp, #0x84
    63f4:	str	x0, [sp, #104]
    63f8:	b	6450 <grub_mod_fini+0x6100>
    63fc:	ldr	x21, [x27, #24]
    6400:	ubfx	w21, w21, #22, #1
    6404:	b	63d8 <grub_mod_fini+0x6088>
    6408:	ldrb	w0, [x1, x6]
    640c:	and	x1, x0, #0xff
    6410:	strb	w20, [x19, x1]
    6414:	cbz	w21, 642c <grub_mod_fini+0x60dc>
    6418:	sub	w3, w0, #0x41
    641c:	add	w1, w0, #0x20
    6420:	cmp	w3, #0x1a
    6424:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    6428:	strb	w20, [x19, w0, sxtw]
    642c:	ldr	x0, [x27, #24]
    6430:	tbz	w0, #22, 6440 <grub_mod_fini+0x60f0>
    6434:	ldr	w0, [x25, #164]
    6438:	cmp	w0, #0x1
    643c:	b.gt	64b8 <grub_mod_fini+0x6168>
    6440:	add	x23, x23, #0x1
    6444:	ldr	w0, [x26, #12]
    6448:	cmp	w0, w23
    644c:	b.le	68a8 <grub_mod_fini+0x6558>
    6450:	ldr	x0, [x26, #16]
    6454:	ldr	w2, [x0, x23, lsl #2]
    6458:	sbfiz	x6, x2, #4, #32
    645c:	ldr	x1, [x25]
    6460:	add	x0, x1, x6
    6464:	ldrb	w0, [x0, #8]
    6468:	mov	w22, w0
    646c:	cmp	w0, #0x1
    6470:	b.eq	6408 <grub_mod_fini+0x60b8>  // b.none
    6474:	cmp	w0, #0x3
    6478:	b.eq	66bc <grub_mod_fini+0x636c>  // b.none
    647c:	cmp	w0, #0x6
    6480:	b.eq	6720 <grub_mod_fini+0x63d0>  // b.none
    6484:	and	w1, w0, #0xfffffffd
    6488:	and	w1, w1, #0xff
    648c:	cmp	w1, #0x5
    6490:	ccmp	w0, #0x2, #0x4, ne  // ne = any
    6494:	b.ne	6440 <grub_mod_fini+0x60f0>  // b.any
    6498:	mov	x2, #0x100                 	// #256
    649c:	mov	w1, #0x1                   	// #1
    64a0:	mov	x0, x19
    64a4:	bl	0 <grub_memset>
    64a8:	cmp	w22, #0x2
    64ac:	b.eq	6894 <grub_mod_fini+0x6544>  // b.none
    64b0:	ldp	x23, x24, [sp, #48]
    64b4:	b	68ac <grub_mod_fini+0x655c>
    64b8:	ldr	x0, [x25]
    64bc:	ldrb	w0, [x0, x6]
    64c0:	strb	w0, [sp, #120]
    64c4:	add	w2, w2, #0x1
    64c8:	sxtw	x1, w2
    64cc:	ldr	x0, [x25, #16]
    64d0:	add	x22, sp, #0x79
    64d4:	cmp	x0, w2, sxtw
    64d8:	b.ls	68cc <grub_mod_fini+0x657c>  // b.plast
    64dc:	mov	w5, #0xff                  	// #255
    64e0:	movk	w5, #0x20, lsl #16
    64e4:	mov	w4, #0x1                   	// #1
    64e8:	movk	w4, #0x20, lsl #16
    64ec:	lsl	x2, x1, #4
    64f0:	ldr	x3, [x25]
    64f4:	add	x0, x3, x2
    64f8:	ldr	w0, [x0, #8]
    64fc:	and	w0, w0, w5
    6500:	cmp	w0, w4
    6504:	b.ne	6520 <grub_mod_fini+0x61d0>  // b.any
    6508:	ldrb	w0, [x3, x2]
    650c:	strb	w0, [x22], #1
    6510:	add	x1, x1, #0x1
    6514:	ldr	x0, [x25, #16]
    6518:	cmp	x0, x1
    651c:	b.hi	64ec <grub_mod_fini+0x619c>  // b.pmore
    6520:	mov	x2, #0x8                   	// #8
    6524:	mov	w1, #0x0                   	// #0
    6528:	add	x0, sp, #0x80
    652c:	bl	0 <grub_memset>
    6530:	add	x0, sp, #0x78
    6534:	sub	x4, x22, x0
    6538:	cmp	x22, x0
    653c:	b.ls	68c4 <grub_mod_fini+0x6574>  // b.plast
    6540:	ldr	w1, [sp, #132]
    6544:	ldr	w0, [sp, #128]
    6548:	mov	w6, #0x0                   	// #0
    654c:	mov	w5, #0x0                   	// #0
    6550:	add	x2, sp, #0x78
    6554:	mov	w7, #0x1                   	// #1
    6558:	mov	w8, w7
    655c:	ldrb	w3, [x2]
    6560:	cbz	w1, 6620 <grub_mod_fini+0x62d0>
    6564:	and	w5, w3, #0xc0
    6568:	cmp	w5, #0x80
    656c:	b.eq	6590 <grub_mod_fini+0x6240>  // b.none
    6570:	cbz	w6, 6578 <grub_mod_fini+0x6228>
    6574:	str	w0, [sp, #128]
    6578:	str	wzr, [sp, #132]
    657c:	mov	x0, #0xffffffffffffffff    	// #-1
    6580:	cmp	x4, x0
    6584:	b.ne	6440 <grub_mod_fini+0x60f0>  // b.any
    6588:	mov	w0, #0x0                   	// #0
    658c:	b	65f0 <grub_mod_fini+0x62a0>
    6590:	bfi	w3, w0, #6, #26
    6594:	mov	w0, w3
    6598:	sub	w1, w1, #0x1
    659c:	cmp	w3, #0x1f
    65a0:	ccmp	w1, #0x1, #0x0, ls  // ls = plast
    65a4:	b.eq	6614 <grub_mod_fini+0x62c4>  // b.none
    65a8:	cmp	w3, #0xf
    65ac:	ccmp	w1, #0x2, #0x0, ls  // ls = plast
    65b0:	b.eq	6614 <grub_mod_fini+0x62c4>  // b.none
    65b4:	cbnz	w1, 6674 <grub_mod_fini+0x6324>
    65b8:	mov	w5, #0x1                   	// #1
    65bc:	cbz	w5, 65c4 <grub_mod_fini+0x6274>
    65c0:	str	wzr, [sp, #132]
    65c4:	str	w0, [sp, #128]
    65c8:	cbz	w0, 6958 <grub_mod_fini+0x6608>
    65cc:	add	x1, sp, #0x180
    65d0:	sub	x1, x2, x1
    65d4:	add	x1, x1, #0x109
    65d8:	cmp	x4, x1
    65dc:	b.ne	6440 <grub_mod_fini+0x60f0>  // b.any
    65e0:	sub	w2, w0, #0x41
    65e4:	add	w1, w0, #0x20
    65e8:	cmp	w2, #0x1a
    65ec:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    65f0:	mov	w2, w0
    65f4:	add	x0, sp, #0x78
    65f8:	add	x1, sp, #0x7c
    65fc:	bl	0 <grub_encode_utf8_character>
    6600:	cmn	x0, #0x1
    6604:	b.eq	6440 <grub_mod_fini+0x60f0>  // b.none
    6608:	ldrb	w0, [sp, #120]
    660c:	strb	w20, [x19, x0]
    6610:	b	6440 <grub_mod_fini+0x60f0>
    6614:	str	wzr, [sp, #128]
    6618:	str	wzr, [sp, #132]
    661c:	b	657c <grub_mod_fini+0x622c>
    6620:	tbz	w3, #7, 665c <grub_mod_fini+0x630c>
    6624:	and	w1, w3, #0xe0
    6628:	cmp	w1, #0xc0
    662c:	b.eq	6664 <grub_mod_fini+0x6314>  // b.none
    6630:	and	w1, w3, #0xf0
    6634:	cmp	w1, #0xe0
    6638:	b.eq	66a4 <grub_mod_fini+0x6354>  // b.none
    663c:	and	w1, w3, #0xf8
    6640:	cmp	w1, #0xf0
    6644:	b.eq	66b0 <grub_mod_fini+0x6360>  // b.none
    6648:	cbz	w5, 6650 <grub_mod_fini+0x6300>
    664c:	str	wzr, [sp, #132]
    6650:	cbz	w6, 657c <grub_mod_fini+0x622c>
    6654:	str	w0, [sp, #128]
    6658:	b	657c <grub_mod_fini+0x622c>
    665c:	mov	w0, w3
    6660:	b	65bc <grub_mod_fini+0x626c>
    6664:	and	w0, w3, #0x1f
    6668:	cmp	w0, #0x1
    666c:	b.ls	6698 <grub_mod_fini+0x6348>  // b.plast
    6670:	mov	w1, #0x1                   	// #1
    6674:	add	x2, x2, #0x1
    6678:	mov	w5, w7
    667c:	mov	w6, w8
    6680:	cmp	x2, x22
    6684:	b.cc	655c <grub_mod_fini+0x620c>  // b.lo, b.ul, b.last
    6688:	str	w1, [sp, #132]
    668c:	str	w0, [sp, #128]
    6690:	mov	x0, #0xfffffffffffffffe    	// #-2
    6694:	b	6580 <grub_mod_fini+0x6230>
    6698:	str	wzr, [sp, #132]
    669c:	str	wzr, [sp, #128]
    66a0:	b	657c <grub_mod_fini+0x622c>
    66a4:	and	w0, w3, #0xf
    66a8:	mov	w1, #0x2                   	// #2
    66ac:	b	6674 <grub_mod_fini+0x6324>
    66b0:	and	w0, w3, #0x7
    66b4:	mov	w1, #0x3                   	// #3
    66b8:	b	6674 <grub_mod_fini+0x6324>
    66bc:	mov	x7, #0x0                   	// #0
    66c0:	b	6708 <grub_mod_fini+0x63b8>
    66c4:	add	w1, w1, #0x1
    66c8:	add	x0, x0, #0x1
    66cc:	cmp	w1, #0x40
    66d0:	b.eq	66fc <grub_mod_fini+0x63ac>  // b.none
    66d4:	lsr	x3, x5, x1
    66d8:	tbz	w3, #0, 66c4 <grub_mod_fini+0x6374>
    66dc:	strb	w20, [x19, x0]
    66e0:	cbz	w21, 66c4 <grub_mod_fini+0x6374>
    66e4:	sub	w3, w0, #0x41
    66e8:	add	w2, w0, #0x20
    66ec:	cmp	w3, #0x1a
    66f0:	csel	w4, w2, w0, cc  // cc = lo, ul, last
    66f4:	strb	w20, [x19, w4, sxtw]
    66f8:	b	66c4 <grub_mod_fini+0x6374>
    66fc:	add	x7, x7, #0x8
    6700:	cmp	x7, #0x20
    6704:	b.eq	6440 <grub_mod_fini+0x60f0>  // b.none
    6708:	ldr	x0, [x25]
    670c:	ldr	x0, [x0, x6]
    6710:	ldr	x5, [x0, x7]
    6714:	lsl	x0, x7, #3
    6718:	mov	w1, #0x0                   	// #0
    671c:	b	66d4 <grub_mod_fini+0x6384>
    6720:	ldr	x24, [x1, x6]
    6724:	ldr	w0, [x25, #164]
    6728:	cmp	w0, #0x1
    672c:	b.le	674c <grub_mod_fini+0x63fc>
    6730:	ldr	w0, [x24, #52]
    6734:	cbnz	w0, 6760 <grub_mod_fini+0x6410>
    6738:	ldrb	w0, [x24, #32]
    673c:	tbnz	w0, #0, 676c <grub_mod_fini+0x641c>
    6740:	ldr	w0, [x24, #48]
    6744:	mov	w22, #0x0                   	// #0
    6748:	cbnz	w0, 6764 <grub_mod_fini+0x6414>
    674c:	ldr	w0, [x24, #36]
    6750:	mov	x22, #0x0                   	// #0
    6754:	cmp	w0, #0x0
    6758:	b.gt	67f4 <grub_mod_fini+0x64a4>
    675c:	b	6440 <grub_mod_fini+0x60f0>
    6760:	mov	w22, #0x0                   	// #0
    6764:	mov	x28, #0x8                   	// #8
    6768:	b	68fc <grub_mod_fini+0x65ac>
    676c:	mov	w22, #0x0                   	// #0
    6770:	b	6764 <grub_mod_fini+0x6414>
    6774:	tbz	w22, #7, 67a8 <grub_mod_fini+0x6458>
    6778:	and	w0, w24, #0xe0
    677c:	cmp	w0, #0xc0
    6780:	b.eq	67b4 <grub_mod_fini+0x6464>  // b.none
    6784:	and	w0, w24, #0xf0
    6788:	cmp	w0, #0xe0
    678c:	b.eq	67d8 <grub_mod_fini+0x6488>  // b.none
    6790:	and	w0, w24, #0xf8
    6794:	cmp	w0, #0xf0
    6798:	b.ne	68f0 <grub_mod_fini+0x65a0>  // b.any
    679c:	mov	w0, #0x3                   	// #3
    67a0:	str	w0, [sp, #132]
    67a4:	b	67cc <grub_mod_fini+0x647c>
    67a8:	and	w0, w22, #0xff
    67ac:	str	w0, [sp, #128]
    67b0:	b	68f0 <grub_mod_fini+0x65a0>
    67b4:	mov	w0, #0x1                   	// #1
    67b8:	str	w0, [sp, #132]
    67bc:	and	w0, w24, #0x1f
    67c0:	str	w0, [sp, #128]
    67c4:	cmp	w0, #0x1
    67c8:	b.ls	68f0 <grub_mod_fini+0x65a0>  // b.plast
    67cc:	and	x24, x24, #0xff
    67d0:	strb	w20, [x19, x24]
    67d4:	b	68f0 <grub_mod_fini+0x65a0>
    67d8:	mov	w0, #0x2                   	// #2
    67dc:	str	w0, [sp, #132]
    67e0:	b	67cc <grub_mod_fini+0x647c>
    67e4:	add	x22, x22, #0x1
    67e8:	ldr	w0, [x24, #36]
    67ec:	cmp	w0, w22
    67f0:	b.le	6440 <grub_mod_fini+0x60f0>
    67f4:	mov	x2, #0x8                   	// #8
    67f8:	mov	w1, #0x0                   	// #0
    67fc:	add	x0, sp, #0x78
    6800:	bl	0 <grub_memset>
    6804:	lsl	x28, x22, #2
    6808:	ldr	x0, [x24]
    680c:	ldr	w2, [x0, x22, lsl #2]
    6810:	ldr	x1, [sp, #104]
    6814:	add	x0, sp, #0x80
    6818:	bl	0 <grub_encode_utf8_character>
    681c:	cmn	x0, #0x1
    6820:	b.eq	6848 <grub_mod_fini+0x64f8>  // b.none
    6824:	ldrb	w0, [sp, #128]
    6828:	and	x1, x0, #0xff
    682c:	strb	w20, [x19, x1]
    6830:	cbz	w21, 6848 <grub_mod_fini+0x64f8>
    6834:	sub	w2, w0, #0x41
    6838:	add	w1, w0, #0x20
    683c:	cmp	w2, #0x1a
    6840:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    6844:	strb	w20, [x19, w0, sxtw]
    6848:	ldr	x0, [x27, #24]
    684c:	tbz	w0, #22, 67e4 <grub_mod_fini+0x6494>
    6850:	ldr	w0, [x25, #164]
    6854:	cmp	w0, #0x1
    6858:	b.le	67e4 <grub_mod_fini+0x6494>
    685c:	ldr	x0, [x24]
    6860:	ldr	w0, [x0, x28]
    6864:	sub	w1, w0, #0x41
    6868:	add	w2, w0, #0x20
    686c:	cmp	w1, #0x1a
    6870:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    6874:	ldr	x1, [sp, #104]
    6878:	add	x0, sp, #0x80
    687c:	bl	0 <grub_encode_utf8_character>
    6880:	cmn	x0, #0x1
    6884:	b.eq	67e4 <grub_mod_fini+0x6494>  // b.none
    6888:	ldrb	w0, [sp, #128]
    688c:	strb	w20, [x19, x0]
    6890:	b	67e4 <grub_mod_fini+0x6494>
    6894:	ldrb	w0, [x27, #56]
    6898:	orr	w0, w0, #0x1
    689c:	strb	w0, [x27, #56]
    68a0:	ldp	x23, x24, [sp, #48]
    68a4:	b	68ac <grub_mod_fini+0x655c>
    68a8:	ldp	x23, x24, [sp, #48]
    68ac:	ldp	x19, x20, [sp, #16]
    68b0:	ldp	x21, x22, [sp, #32]
    68b4:	ldp	x25, x26, [sp, #64]
    68b8:	ldp	x27, x28, [sp, #80]
    68bc:	ldp	x29, x30, [sp], #384
    68c0:	ret
    68c4:	mov	x0, #0xfffffffffffffffe    	// #-2
    68c8:	b	6580 <grub_mod_fini+0x6230>
    68cc:	mov	x2, #0x8                   	// #8
    68d0:	mov	w1, #0x0                   	// #0
    68d4:	add	x0, sp, #0x80
    68d8:	bl	0 <grub_memset>
    68dc:	add	x22, sp, #0x79
    68e0:	mov	x4, #0x1                   	// #1
    68e4:	b	6540 <grub_mod_fini+0x61f0>
    68e8:	ldr	w0, [sp, #132]
    68ec:	cbnz	w0, 67cc <grub_mod_fini+0x647c>
    68f0:	add	w22, w22, #0x1
    68f4:	cmp	w22, #0x100
    68f8:	b.eq	6440 <grub_mod_fini+0x60f0>  // b.none
    68fc:	and	w24, w22, #0xff
    6900:	mov	x2, x28
    6904:	mov	w1, #0x0                   	// #0
    6908:	add	x0, sp, #0x80
    690c:	bl	0 <grub_memset>
    6910:	ldr	w0, [sp, #132]
    6914:	cbz	w0, 6774 <grub_mod_fini+0x6424>
    6918:	and	w1, w24, #0xc0
    691c:	cmp	w1, #0x80
    6920:	b.ne	68f0 <grub_mod_fini+0x65a0>  // b.any
    6924:	ldr	w1, [sp, #128]
    6928:	mov	w2, w24
    692c:	bfi	w2, w1, #6, #26
    6930:	str	w2, [sp, #128]
    6934:	sub	w0, w0, #0x1
    6938:	str	w0, [sp, #132]
    693c:	cmp	w0, #0x1
    6940:	ccmp	w2, #0x1f, #0x2, eq  // eq = none
    6944:	b.ls	68f0 <grub_mod_fini+0x65a0>  // b.plast
    6948:	cmp	w2, #0xf
    694c:	ccmp	w0, #0x2, #0x0, ls  // ls = plast
    6950:	b.ne	68e8 <grub_mod_fini+0x6598>  // b.any
    6954:	b	68f0 <grub_mod_fini+0x65a0>
    6958:	cbnz	x4, 6440 <grub_mod_fini+0x60f0>
    695c:	b	65f0 <grub_mod_fini+0x62a0>
    6960:	stp	x29, x30, [sp, #-192]!
    6964:	mov	x29, sp
    6968:	stp	x19, x20, [sp, #16]
    696c:	stp	x21, x22, [sp, #32]
    6970:	mov	x19, x0
    6974:	ldr	w20, [x0, #44]
    6978:	ldr	w0, [x0, #64]
    697c:	ldr	w21, [x19, #52]
    6980:	cmp	w21, w0
    6984:	csel	w21, w21, w0, le
    6988:	ldrb	w0, [x19, #98]
    698c:	cbnz	w0, 6998 <grub_mod_fini+0x6648>
    6990:	ldr	x0, [x19, #80]
    6994:	cbz	x0, 69c0 <grub_mod_fini+0x6670>
    6998:	ldr	w22, [x19, #48]
    699c:	cmp	w20, w21
    69a0:	b.lt	6cd4 <grub_mod_fini+0x6984>  // b.tstop
    69a4:	str	w20, [x19, #44]
    69a8:	str	w22, [x19, #48]
    69ac:	mov	w0, #0x0                   	// #0
    69b0:	ldp	x19, x20, [sp, #16]
    69b4:	ldp	x21, x22, [sp, #32]
    69b8:	ldp	x29, x30, [sp], #192
    69bc:	ret
    69c0:	ldrb	w0, [x19, #100]
    69c4:	cbnz	w0, 6998 <grub_mod_fini+0x6648>
    69c8:	cmp	w20, w21
    69cc:	b.ge	6cc4 <grub_mod_fini+0x6974>  // b.tcont
    69d0:	stp	x23, x24, [sp, #48]
    69d4:	stp	x25, x26, [sp, #64]
    69d8:	mov	w23, #0x3                   	// #3
    69dc:	add	x22, sp, #0x84
    69e0:	b	6bc0 <grub_mod_fini+0x6870>
    69e4:	sub	w1, w0, #0x61
    69e8:	sub	w0, w0, #0x20
    69ec:	cmp	w1, #0x1a
    69f0:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    69f4:	ldr	x0, [x19, #8]
    69f8:	strb	w2, [x0, w20, sxtw]
    69fc:	ldr	x0, [x19, #16]
    6a00:	ldr	x1, [x19, #8]
    6a04:	ldrb	w1, [x1, w20, sxtw]
    6a08:	str	w1, [x0, w20, sxtw #2]
    6a0c:	add	w20, w20, #0x1
    6a10:	b	6bb8 <grub_mod_fini+0x6868>
    6a14:	ldr	w9, [x19, #32]
    6a18:	bfi	w2, w9, #6, #26
    6a1c:	str	w2, [x19, #32]
    6a20:	sub	w3, w3, #0x1
    6a24:	str	w3, [x19, #36]
    6a28:	cmp	w3, #0x1
    6a2c:	ccmp	w2, #0x1f, #0x2, eq  // eq = none
    6a30:	b.ls	6a40 <grub_mod_fini+0x66f0>  // b.plast
    6a34:	cmp	w2, #0xf
    6a38:	ccmp	w3, #0x2, #0x0, ls  // ls = plast
    6a3c:	b.ne	6a88 <grub_mod_fini+0x6738>  // b.any
    6a40:	str	wzr, [x19, #32]
    6a44:	str	wzr, [x19, #36]
    6a48:	b	6c40 <grub_mod_fini+0x68f0>
    6a4c:	tbz	w2, #7, 6a84 <grub_mod_fini+0x6734>
    6a50:	and	w3, w2, #0xe0
    6a54:	cmp	w3, #0xc0
    6a58:	b.eq	6ad8 <grub_mod_fini+0x6788>  // b.none
    6a5c:	and	w3, w2, #0xf0
    6a60:	cmp	w3, #0xe0
    6a64:	b.eq	6af8 <grub_mod_fini+0x67a8>  // b.none
    6a68:	and	w3, w2, #0xf8
    6a6c:	cmp	w3, #0xf0
    6a70:	b.ne	6c40 <grub_mod_fini+0x68f0>  // b.any
    6a74:	str	w23, [x19, #36]
    6a78:	and	w2, w2, #0x7
    6a7c:	str	w2, [x19, #32]
    6a80:	b	6a88 <grub_mod_fini+0x6738>
    6a84:	str	w2, [x19, #32]
    6a88:	ldr	w2, [x19, #36]
    6a8c:	cbnz	w2, 6b08 <grub_mod_fini+0x67b8>
    6a90:	cbz	x7, 6a9c <grub_mod_fini+0x674c>
    6a94:	ldr	w2, [x19, #32]
    6a98:	str	w2, [x7]
    6a9c:	ldr	w2, [x19, #32]
    6aa0:	cbz	w2, 71b0 <grub_mod_fini+0x6e60>
    6aa4:	sub	x0, x0, x8
    6aa8:	add	x25, x0, #0x1
    6aac:	cmn	x0, #0x4
    6ab0:	b.hi	6c74 <grub_mod_fini+0x6924>  // b.pmore
    6ab4:	ldr	w26, [sp, #124]
    6ab8:	sub	w0, w26, #0x61
    6abc:	cmp	w0, #0x19
    6ac0:	b.ls	6b40 <grub_mod_fini+0x67f0>  // b.plast
    6ac4:	ldr	x0, [x19, #8]
    6ac8:	mov	x2, x25
    6acc:	add	x0, x0, x24
    6ad0:	bl	0 <grub_memmove>
    6ad4:	b	6b70 <grub_mod_fini+0x6820>
    6ad8:	str	w12, [x19, #36]
    6adc:	and	w2, w2, #0x1f
    6ae0:	str	w2, [x19, #32]
    6ae4:	cmp	w2, #0x1
    6ae8:	b.hi	6a88 <grub_mod_fini+0x6738>  // b.pmore
    6aec:	str	wzr, [x19, #36]
    6af0:	str	wzr, [x19, #32]
    6af4:	b	6c40 <grub_mod_fini+0x68f0>
    6af8:	str	w13, [x19, #36]
    6afc:	and	w2, w2, #0xf
    6b00:	str	w2, [x19, #32]
    6b04:	b	6a88 <grub_mod_fini+0x6738>
    6b08:	add	x0, x0, #0x1
    6b0c:	cmp	x0, x4
    6b10:	b.ne	6c24 <grub_mod_fini+0x68d4>  // b.any
    6b14:	ldr	w1, [x19, #52]
    6b18:	ldr	w0, [x19, #64]
    6b1c:	cmp	w1, w0
    6b20:	b.lt	6ca0 <grub_mod_fini+0x6950>  // b.tstop
    6b24:	ldrb	w0, [x5, w6, sxtw]
    6b28:	ldr	x1, [x19, #8]
    6b2c:	strb	w0, [x1, x24]
    6b30:	add	w20, w20, #0x1
    6b34:	ldr	x1, [x19, #16]
    6b38:	str	w0, [x1, x24, lsl #2]
    6b3c:	b	6bb8 <grub_mod_fini+0x6868>
    6b40:	sub	w26, w26, #0x20
    6b44:	mov	w2, w26
    6b48:	mov	x1, x22
    6b4c:	add	x0, sp, #0x80
    6b50:	bl	0 <grub_encode_utf8_character>
    6b54:	cmp	x0, x25
    6b58:	b.ne	6c64 <grub_mod_fini+0x6914>  // b.any
    6b5c:	ldr	x0, [x19, #8]
    6b60:	mov	x2, x25
    6b64:	add	x1, sp, #0x80
    6b68:	add	x0, x0, x24
    6b6c:	bl	0 <grub_memmove>
    6b70:	add	w1, w20, #0x1
    6b74:	lsl	x0, x24, #2
    6b78:	ldr	x2, [x19, #16]
    6b7c:	str	w26, [x2, x24, lsl #2]
    6b80:	add	w20, w20, w25
    6b84:	cmp	w1, w20
    6b88:	b.ge	6cb4 <grub_mod_fini+0x6964>  // b.tcont
    6b8c:	add	x0, x0, #0x4
    6b90:	add	x2, x24, #0x2
    6b94:	sub	w25, w25, #0x2
    6b98:	add	x2, x2, x25
    6b9c:	lsl	x2, x2, #2
    6ba0:	mov	w3, #0xffffffff            	// #-1
    6ba4:	ldr	x1, [x19, #16]
    6ba8:	str	w3, [x1, x0]
    6bac:	add	x0, x0, #0x4
    6bb0:	cmp	x0, x2
    6bb4:	b.ne	6ba4 <grub_mod_fini+0x6854>  // b.any
    6bb8:	cmp	w21, w20
    6bbc:	b.le	6cbc <grub_mod_fini+0x696c>
    6bc0:	ldr	x5, [x19]
    6bc4:	ldr	w1, [x19, #40]
    6bc8:	add	w6, w1, w20
    6bcc:	ldrb	w0, [x5, w6, sxtw]
    6bd0:	mov	w2, w0
    6bd4:	tst	w0, #0xffffff80
    6bd8:	b.ne	6be4 <grub_mod_fini+0x6894>  // b.any
    6bdc:	ldr	w3, [x19, #36]
    6be0:	cbz	w3, 69e4 <grub_mod_fini+0x6694>
    6be4:	ldr	w11, [x19, #32]
    6be8:	ldr	w10, [x19, #36]
    6bec:	sxtw	x24, w20
    6bf0:	add	x1, x24, w1, sxtw
    6bf4:	adds	x1, x5, x1
    6bf8:	b.eq	71e8 <grub_mod_fini+0x6e98>  // b.none
    6bfc:	str	wzr, [sp, #124]
    6c00:	sub	w4, w21, w20
    6c04:	add	x4, x1, w4, sxtw
    6c08:	mov	x8, x1
    6c0c:	mov	x0, x1
    6c10:	add	x7, sp, #0x7c
    6c14:	cmp	x1, x4
    6c18:	b.cs	6b14 <grub_mod_fini+0x67c4>  // b.hs, b.nlast
    6c1c:	mov	w13, #0x2                   	// #2
    6c20:	mov	w12, #0x1                   	// #1
    6c24:	ldrb	w2, [x0]
    6c28:	ldr	w3, [x19, #36]
    6c2c:	cbz	w3, 6a4c <grub_mod_fini+0x66fc>
    6c30:	and	w9, w2, #0xc0
    6c34:	cmp	w9, #0x80
    6c38:	b.eq	6a14 <grub_mod_fini+0x66c4>  // b.none
    6c3c:	str	wzr, [x19, #36]
    6c40:	ldrb	w0, [x5, w6, sxtw]
    6c44:	ldr	x1, [x19, #8]
    6c48:	strb	w0, [x1, x24]
    6c4c:	add	w20, w20, #0x1
    6c50:	ldr	x1, [x19, #16]
    6c54:	str	w0, [x1, x24, lsl #2]
    6c58:	str	w11, [x19, #32]
    6c5c:	str	w10, [x19, #36]
    6c60:	b	6bb8 <grub_mod_fini+0x6868>
    6c64:	stp	x27, x28, [sp, #80]
    6c68:	mov	w22, w20
    6c6c:	ldp	x23, x24, [sp, #48]
    6c70:	b	6cdc <grub_mod_fini+0x698c>
    6c74:	cmn	x0, #0x3
    6c78:	b.ls	6b14 <grub_mod_fini+0x67c4>  // b.plast
    6c7c:	ldrb	w0, [x5, w6, sxtw]
    6c80:	ldr	x1, [x19, #8]
    6c84:	strb	w0, [x1, x24]
    6c88:	add	w20, w20, #0x1
    6c8c:	ldr	x1, [x19, #16]
    6c90:	str	w0, [x1, x24, lsl #2]
    6c94:	cmn	x25, #0x1
    6c98:	b.eq	6c58 <grub_mod_fini+0x6908>  // b.none
    6c9c:	b	6bb8 <grub_mod_fini+0x6868>
    6ca0:	str	w11, [x19, #32]
    6ca4:	str	w10, [x19, #36]
    6ca8:	ldp	x23, x24, [sp, #48]
    6cac:	ldp	x25, x26, [sp, #64]
    6cb0:	b	6cc4 <grub_mod_fini+0x6974>
    6cb4:	mov	w20, w1
    6cb8:	b	6bb8 <grub_mod_fini+0x6868>
    6cbc:	ldp	x23, x24, [sp, #48]
    6cc0:	ldp	x25, x26, [sp, #64]
    6cc4:	str	w20, [x19, #44]
    6cc8:	str	w20, [x19, #48]
    6ccc:	mov	w0, #0x0                   	// #0
    6cd0:	b	69b0 <grub_mod_fini+0x6660>
    6cd4:	stp	x25, x26, [sp, #64]
    6cd8:	stp	x27, x28, [sp, #80]
    6cdc:	sub	w1, w21, w20
    6ce0:	ldr	w28, [x19, #32]
    6ce4:	ldr	w27, [x19, #36]
    6ce8:	ldr	x5, [x19, #80]
    6cec:	cbnz	x5, 6d54 <grub_mod_fini+0x6a04>
    6cf0:	ldrsw	x0, [x19, #40]
    6cf4:	add	x0, x0, w22, sxtw
    6cf8:	ldr	x2, [x19]
    6cfc:	adds	x0, x2, x0
    6d00:	sxtw	x1, w1
    6d04:	b.eq	71cc <grub_mod_fini+0x6e7c>  // b.none
    6d08:	str	wzr, [sp, #124]
    6d0c:	add	x1, x0, x1
    6d10:	cmp	x1, x0
    6d14:	b.ls	6eb4 <grub_mod_fini+0x6b64>  // b.plast
    6d18:	mov	x3, x0
    6d1c:	str	x0, [sp, #96]
    6d20:	add	x6, sp, #0x7c
    6d24:	mov	w10, #0x3                   	// #3
    6d28:	mov	w9, #0x2                   	// #2
    6d2c:	mov	w8, #0x1                   	// #1
    6d30:	ldrb	w2, [x0]
    6d34:	ldr	w4, [x19, #36]
    6d38:	cbz	w4, 6de0 <grub_mod_fini+0x6a90>
    6d3c:	and	w7, w2, #0xc0
    6d40:	cmp	w7, #0x80
    6d44:	b.eq	6da8 <grub_mod_fini+0x6a58>  // b.none
    6d48:	str	wzr, [x19, #36]
    6d4c:	mov	x26, #0xffffffffffffffff    	// #-1
    6d50:	b	7160 <grub_mod_fini+0x6e10>
    6d54:	ldr	w2, [x19, #104]
    6d58:	cmp	w1, #0x0
    6d5c:	ccmp	w2, #0x0, #0x4, gt
    6d60:	b.le	6d9c <grub_mod_fini+0x6a4c>
    6d64:	ldr	x4, [x19]
    6d68:	ldr	w6, [x19, #40]
    6d6c:	add	w6, w22, w6
    6d70:	add	x3, sp, #0x80
    6d74:	mov	x0, #0x0                   	// #0
    6d78:	add	x6, x4, w6, sxtw
    6d7c:	ldrb	w4, [x6, x0]
    6d80:	ldrb	w4, [x5, x4]
    6d84:	strb	w4, [x3], #1
    6d88:	add	x0, x0, #0x1
    6d8c:	cmp	w2, w1
    6d90:	csel	w4, w2, w1, le
    6d94:	cmp	w4, w0
    6d98:	b.gt	6d7c <grub_mod_fini+0x6a2c>
    6d9c:	sxtw	x1, w1
    6da0:	add	x0, sp, #0x80
    6da4:	b	6d08 <grub_mod_fini+0x69b8>
    6da8:	ldr	w7, [x19, #32]
    6dac:	bfi	w2, w7, #6, #26
    6db0:	str	w2, [x19, #32]
    6db4:	sub	w4, w4, #0x1
    6db8:	str	w4, [x19, #36]
    6dbc:	cmp	w4, #0x1
    6dc0:	ccmp	w2, #0x1f, #0x2, eq  // eq = none
    6dc4:	b.ls	6dd4 <grub_mod_fini+0x6a84>  // b.plast
    6dc8:	cmp	w2, #0xf
    6dcc:	ccmp	w4, #0x2, #0x0, ls  // ls = plast
    6dd0:	b.ne	6e1c <grub_mod_fini+0x6acc>  // b.any
    6dd4:	str	wzr, [x19, #32]
    6dd8:	str	wzr, [x19, #36]
    6ddc:	b	6d4c <grub_mod_fini+0x69fc>
    6de0:	tbz	w2, #7, 6e18 <grub_mod_fini+0x6ac8>
    6de4:	and	w4, w2, #0xe0
    6de8:	cmp	w4, #0xc0
    6dec:	b.eq	6e78 <grub_mod_fini+0x6b28>  // b.none
    6df0:	and	w4, w2, #0xf0
    6df4:	cmp	w4, #0xe0
    6df8:	b.eq	6e98 <grub_mod_fini+0x6b48>  // b.none
    6dfc:	and	w4, w2, #0xf8
    6e00:	cmp	w4, #0xf0
    6e04:	b.ne	6d4c <grub_mod_fini+0x69fc>  // b.any
    6e08:	str	w10, [x19, #36]
    6e0c:	and	w2, w2, #0x7
    6e10:	str	w2, [x19, #32]
    6e14:	b	6e1c <grub_mod_fini+0x6acc>
    6e18:	str	w2, [x19, #32]
    6e1c:	ldr	w2, [x19, #36]
    6e20:	cbnz	w2, 6ea8 <grub_mod_fini+0x6b58>
    6e24:	cbz	x6, 6e30 <grub_mod_fini+0x6ae0>
    6e28:	ldr	w1, [x19, #32]
    6e2c:	str	w1, [x6]
    6e30:	ldr	w1, [x19, #32]
    6e34:	cbz	w1, 715c <grub_mod_fini+0x6e0c>
    6e38:	stp	x23, x24, [sp, #48]
    6e3c:	sub	x0, x0, x3
    6e40:	add	x23, x0, #0x1
    6e44:	mov	x26, x23
    6e48:	cmn	x0, #0x4
    6e4c:	b.hi	7104 <grub_mod_fini+0x6db4>  // b.pmore
    6e50:	ldr	w24, [sp, #124]
    6e54:	sub	w0, w24, #0x61
    6e58:	cmp	w0, #0x19
    6e5c:	b.ls	6edc <grub_mod_fini+0x6b8c>  // b.plast
    6e60:	ldr	x0, [x19, #8]
    6e64:	mov	x2, x23
    6e68:	ldr	x1, [sp, #96]
    6e6c:	add	x0, x0, w20, sxtw
    6e70:	bl	0 <grub_memmove>
    6e74:	b	6f14 <grub_mod_fini+0x6bc4>
    6e78:	str	w8, [x19, #36]
    6e7c:	and	w2, w2, #0x1f
    6e80:	str	w2, [x19, #32]
    6e84:	cmp	w2, #0x1
    6e88:	b.hi	6e1c <grub_mod_fini+0x6acc>  // b.pmore
    6e8c:	str	wzr, [x19, #36]
    6e90:	str	wzr, [x19, #32]
    6e94:	b	6d4c <grub_mod_fini+0x69fc>
    6e98:	str	w9, [x19, #36]
    6e9c:	and	w2, w2, #0xf
    6ea0:	str	w2, [x19, #32]
    6ea4:	b	6e1c <grub_mod_fini+0x6acc>
    6ea8:	add	x0, x0, #0x1
    6eac:	cmp	x0, x1
    6eb0:	b.ne	6d30 <grub_mod_fini+0x69e0>  // b.any
    6eb4:	mov	x26, #0xfffffffffffffffe    	// #-2
    6eb8:	ldr	w1, [x19, #52]
    6ebc:	ldr	w0, [x19, #64]
    6ec0:	cmp	w1, w0
    6ec4:	b.ge	7160 <grub_mod_fini+0x6e10>  // b.tcont
    6ec8:	str	w28, [x19, #32]
    6ecc:	str	w27, [x19, #36]
    6ed0:	ldp	x25, x26, [sp, #64]
    6ed4:	ldp	x27, x28, [sp, #80]
    6ed8:	b	69a4 <grub_mod_fini+0x6654>
    6edc:	sub	w24, w24, #0x20
    6ee0:	mov	w2, w24
    6ee4:	add	x0, sp, #0x80
    6ee8:	add	x1, sp, #0x84
    6eec:	bl	0 <grub_encode_utf8_character>
    6ef0:	mov	x25, x0
    6ef4:	str	x0, [sp, #104]
    6ef8:	cmp	x0, x23
    6efc:	b.ne	6f7c <grub_mod_fini+0x6c2c>  // b.any
    6f00:	ldr	x0, [x19, #8]
    6f04:	mov	x2, x23
    6f08:	add	x1, sp, #0x80
    6f0c:	add	x0, x0, w20, sxtw
    6f10:	bl	0 <grub_memmove>
    6f14:	ldrb	w0, [x19, #100]
    6f18:	cbnz	w0, 70dc <grub_mod_fini+0x6d8c>
    6f1c:	add	w22, w22, w23
    6f20:	add	w2, w20, #0x1
    6f24:	sxtw	x1, w20
    6f28:	sbfiz	x0, x20, #2, #32
    6f2c:	ldr	x3, [x19, #16]
    6f30:	str	w24, [x3, x1, lsl #2]
    6f34:	add	w20, w20, w23
    6f38:	cmp	w2, w20
    6f3c:	b.ge	7148 <grub_mod_fini+0x6df8>  // b.tcont
    6f40:	add	x0, x0, #0x4
    6f44:	add	x2, x1, #0x2
    6f48:	sub	w23, w23, #0x2
    6f4c:	add	x2, x2, x23
    6f50:	lsl	x2, x2, #2
    6f54:	mov	w3, #0xffffffff            	// #-1
    6f58:	ldr	x1, [x19, #16]
    6f5c:	str	w3, [x1, x0]
    6f60:	add	x0, x0, #0x4
    6f64:	cmp	x2, x0
    6f68:	b.ne	6f58 <grub_mod_fini+0x6c08>  // b.any
    6f6c:	ldp	x23, x24, [sp, #48]
    6f70:	ldp	x25, x26, [sp, #64]
    6f74:	ldp	x27, x28, [sp, #80]
    6f78:	b	699c <grub_mod_fini+0x664c>
    6f7c:	cmn	x0, #0x1
    6f80:	b.eq	70c4 <grub_mod_fini+0x6d74>  // b.none
    6f84:	sxtw	x21, w20
    6f88:	ldrsw	x0, [x19, #52]
    6f8c:	add	x1, x21, x25
    6f90:	cmp	x1, x0
    6f94:	b.ls	6fb0 <grub_mod_fini+0x6c60>  // b.plast
    6f98:	str	w28, [x19, #32]
    6f9c:	str	w27, [x19, #36]
    6fa0:	ldp	x23, x24, [sp, #48]
    6fa4:	ldp	x25, x26, [sp, #64]
    6fa8:	ldp	x27, x28, [sp, #80]
    6fac:	b	69a4 <grub_mod_fini+0x6654>
    6fb0:	ldr	x1, [x19, #24]
    6fb4:	cbz	x1, 70a0 <grub_mod_fini+0x6d50>
    6fb8:	ldrb	w0, [x19, #100]
    6fbc:	cbnz	w0, 6fe4 <grub_mod_fini+0x6c94>
    6fc0:	cbz	x21, 6fdc <grub_mod_fini+0x6c8c>
    6fc4:	mov	x0, #0x0                   	// #0
    6fc8:	ldr	x1, [x19, #24]
    6fcc:	str	w0, [x1, x0, lsl #2]
    6fd0:	add	x0, x0, #0x1
    6fd4:	cmp	x21, x0
    6fd8:	b.ne	6fc8 <grub_mod_fini+0x6c78>  // b.any
    6fdc:	mov	w0, #0x1                   	// #1
    6fe0:	strb	w0, [x19, #100]
    6fe4:	ldr	x0, [x19, #8]
    6fe8:	mov	x2, x25
    6fec:	add	x1, sp, #0x80
    6ff0:	add	x0, x0, x21
    6ff4:	bl	0 <grub_memmove>
    6ff8:	lsl	x0, x21, #2
    6ffc:	ldr	x1, [x19, #16]
    7000:	str	w24, [x1, x21, lsl #2]
    7004:	ldr	x1, [x19, #24]
    7008:	str	w22, [x1, x21, lsl #2]
    700c:	cmp	x25, #0x1
    7010:	b.ls	7054 <grub_mod_fini+0x6d04>  // b.plast
    7014:	add	x0, x0, #0x4
    7018:	mov	x1, #0x1                   	// #1
    701c:	sub	w4, w23, #0x1
    7020:	mov	w3, #0xffffffff            	// #-1
    7024:	cmp	x1, x26
    7028:	csel	w2, w1, w4, cc  // cc = lo, ul, last
    702c:	ldr	x5, [x19, #24]
    7030:	add	w2, w22, w2
    7034:	str	w2, [x5, x0]
    7038:	ldr	x2, [x19, #16]
    703c:	str	w3, [x2, x0]
    7040:	add	x1, x1, #0x1
    7044:	add	x0, x0, #0x4
    7048:	ldr	x2, [sp, #104]
    704c:	cmp	x1, x2
    7050:	b.ne	7024 <grub_mod_fini+0x6cd4>  // b.any
    7054:	sub	w2, w25, w23
    7058:	ldr	w0, [x19, #64]
    705c:	add	w0, w2, w0
    7060:	str	w0, [x19, #64]
    7064:	ldr	w1, [x19, #68]
    7068:	cmp	w1, w22
    706c:	b.le	707c <grub_mod_fini+0x6d2c>
    7070:	ldr	w1, [x19, #72]
    7074:	add	w1, w1, w2
    7078:	str	w1, [x19, #72]
    707c:	ldr	w21, [x19, #52]
    7080:	cmp	w21, w0
    7084:	csel	w21, w21, w0, le
    7088:	add	w20, w20, w25
    708c:	add	w22, w22, w23
    7090:	ldp	x23, x24, [sp, #48]
    7094:	ldp	x25, x26, [sp, #64]
    7098:	ldp	x27, x28, [sp, #80]
    709c:	b	699c <grub_mod_fini+0x664c>
    70a0:	lsl	x0, x0, #2
    70a4:	bl	0 <grub_malloc>
    70a8:	str	x0, [x19, #24]
    70ac:	cbnz	x0, 6fb8 <grub_mod_fini+0x6c68>
    70b0:	mov	w0, #0xc                   	// #12
    70b4:	ldp	x23, x24, [sp, #48]
    70b8:	ldp	x25, x26, [sp, #64]
    70bc:	ldp	x27, x28, [sp, #80]
    70c0:	b	69b0 <grub_mod_fini+0x6660>
    70c4:	ldr	x0, [x19, #8]
    70c8:	mov	x2, x23
    70cc:	ldr	x1, [sp, #96]
    70d0:	add	x0, x0, w20, sxtw
    70d4:	bl	0 <grub_memmove>
    70d8:	b	6f14 <grub_mod_fini+0x6bc4>
    70dc:	sbfiz	x1, x20, #2, #32
    70e0:	mov	x0, #0x0                   	// #0
    70e4:	ldr	x2, [x19, #24]
    70e8:	add	w3, w22, w0
    70ec:	str	w3, [x2, x1]
    70f0:	add	x0, x0, #0x1
    70f4:	add	x1, x1, #0x4
    70f8:	cmp	x0, x26
    70fc:	b.ne	70e4 <grub_mod_fini+0x6d94>  // b.any
    7100:	b	6f1c <grub_mod_fini+0x6bcc>
    7104:	cmn	x0, #0x3
    7108:	b.hi	7114 <grub_mod_fini+0x6dc4>  // b.pmore
    710c:	ldp	x23, x24, [sp, #48]
    7110:	b	6eb8 <grub_mod_fini+0x6b68>
    7114:	ldp	x23, x24, [sp, #48]
    7118:	b	7160 <grub_mod_fini+0x6e10>
    711c:	and	x0, x0, #0xff
    7120:	ldrb	w0, [x5, x0]
    7124:	b	7174 <grub_mod_fini+0x6e24>
    7128:	ldr	x0, [x19, #24]
    712c:	str	w22, [x0, x1, lsl #2]
    7130:	b	718c <grub_mod_fini+0x6e3c>
    7134:	str	w28, [x19, #32]
    7138:	str	w27, [x19, #36]
    713c:	ldp	x25, x26, [sp, #64]
    7140:	ldp	x27, x28, [sp, #80]
    7144:	b	699c <grub_mod_fini+0x664c>
    7148:	mov	w20, w2
    714c:	ldp	x23, x24, [sp, #48]
    7150:	ldp	x25, x26, [sp, #64]
    7154:	ldp	x27, x28, [sp, #80]
    7158:	b	699c <grub_mod_fini+0x664c>
    715c:	mov	x26, #0x0                   	// #0
    7160:	ldr	w0, [x19, #40]
    7164:	add	w0, w22, w0
    7168:	ldr	x1, [x19]
    716c:	ldrb	w0, [x1, w0, sxtw]
    7170:	cbnz	x5, 711c <grub_mod_fini+0x6dcc>
    7174:	mov	w2, w0
    7178:	sxtw	x1, w20
    717c:	ldr	x3, [x19, #8]
    7180:	strb	w0, [x3, w20, sxtw]
    7184:	ldrb	w0, [x19, #100]
    7188:	cbnz	w0, 7128 <grub_mod_fini+0x6dd8>
    718c:	add	w22, w22, #0x1
    7190:	add	w20, w20, #0x1
    7194:	ldr	x0, [x19, #16]
    7198:	str	w2, [x0, x1, lsl #2]
    719c:	cmn	x26, #0x1
    71a0:	b.eq	7134 <grub_mod_fini+0x6de4>  // b.none
    71a4:	ldp	x25, x26, [sp, #64]
    71a8:	ldp	x27, x28, [sp, #80]
    71ac:	b	699c <grub_mod_fini+0x664c>
    71b0:	ldrb	w0, [x5, w6, sxtw]
    71b4:	ldr	x1, [x19, #8]
    71b8:	strb	w0, [x1, x24]
    71bc:	add	w20, w20, #0x1
    71c0:	ldr	x1, [x19, #16]
    71c4:	str	w0, [x1, x24, lsl #2]
    71c8:	b	6bb8 <grub_mod_fini+0x6868>
    71cc:	adrp	x1, 0 <grub_mod_init-0x2b0>
    71d0:	ldr	x1, [x1]
    71d4:	mov	x6, x0
    71d8:	str	x0, [sp, #96]
    71dc:	sub	x3, x1, #0x1
    71e0:	mov	x0, x3
    71e4:	b	6d24 <grub_mod_fini+0x69d4>
    71e8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    71ec:	ldr	x4, [x0]
    71f0:	mov	x7, x1
    71f4:	sub	x8, x4, #0x1
    71f8:	mov	x0, x8
    71fc:	b	6c1c <grub_mod_fini+0x68cc>
	...
    7208:	stp	x29, x30, [sp, #-32]!
    720c:	mov	x29, sp
    7210:	stp	x19, x20, [sp, #16]
    7214:	mov	x19, x0
    7218:	ldr	w0, [x0, #52]
    721c:	mov	w2, #0x3ffffffe            	// #1073741822
    7220:	cmp	w0, w2
    7224:	b.hi	72d8 <grub_mod_fini+0x6f88>  // b.pmore
    7228:	lsl	w0, w0, #1
    722c:	ldr	w2, [x19, #64]
    7230:	cmp	w0, w2
    7234:	csel	w0, w0, w2, le
    7238:	cmp	w0, w1
    723c:	csel	w1, w0, w1, ge  // ge = tcont
    7240:	mov	x0, x19
    7244:	bl	2990 <grub_mod_fini+0x2640>
    7248:	mov	w20, w0
    724c:	cbnz	w0, 7290 <grub_mod_fini+0x6f40>
    7250:	ldr	x0, [x19, #136]
    7254:	cbz	x0, 7270 <grub_mod_fini+0x6f20>
    7258:	ldr	w1, [x19, #52]
    725c:	add	w1, w1, #0x1
    7260:	sbfiz	x1, x1, #3, #32
    7264:	bl	0 <grub_realloc>
    7268:	cbz	x0, 72e0 <grub_mod_fini+0x6f90>
    726c:	str	x0, [x19, #136]
    7270:	ldrb	w0, [x19, #96]
    7274:	cbz	w0, 72ac <grub_mod_fini+0x6f5c>
    7278:	ldr	w0, [x19, #104]
    727c:	cmp	w0, #0x1
    7280:	b.le	72a0 <grub_mod_fini+0x6f50>
    7284:	mov	x0, x19
    7288:	bl	6960 <grub_mod_fini+0x6610>
    728c:	mov	w20, w0
    7290:	mov	w0, w20
    7294:	ldp	x19, x20, [sp, #16]
    7298:	ldp	x29, x30, [sp], #32
    729c:	ret
    72a0:	mov	x0, x19
    72a4:	bl	1a7c <grub_mod_fini+0x172c>
    72a8:	b	7290 <grub_mod_fini+0x6f40>
    72ac:	ldr	w0, [x19, #104]
    72b0:	cmp	w0, #0x1
    72b4:	b.gt	72cc <grub_mod_fini+0x6f7c>
    72b8:	ldr	x0, [x19, #80]
    72bc:	cbz	x0, 7290 <grub_mod_fini+0x6f40>
    72c0:	mov	x0, x19
    72c4:	bl	1218 <grub_mod_fini+0xec8>
    72c8:	b	7290 <grub_mod_fini+0x6f40>
    72cc:	mov	x0, x19
    72d0:	bl	60c0 <grub_mod_fini+0x5d70>
    72d4:	b	7290 <grub_mod_fini+0x6f40>
    72d8:	mov	w20, #0xc                   	// #12
    72dc:	b	7290 <grub_mod_fini+0x6f40>
    72e0:	mov	w20, #0xc                   	// #12
    72e4:	b	7290 <grub_mod_fini+0x6f40>
    72e8:	stp	x29, x30, [sp, #-48]!
    72ec:	mov	x29, sp
    72f0:	stp	x19, x20, [sp, #16]
    72f4:	str	x21, [sp, #32]
    72f8:	mov	x19, x0
    72fc:	mov	w20, w1
    7300:	ldr	w21, [x0, #144]
    7304:	ldr	w0, [x0, #52]
    7308:	cmp	w0, w1
    730c:	b.gt	731c <grub_mod_fini+0x6fcc>
    7310:	ldr	w1, [x19, #64]
    7314:	cmp	w0, w1
    7318:	b.lt	7334 <grub_mod_fini+0x6fe4>  // b.tstop
    731c:	ldr	w0, [x19, #44]
    7320:	cmp	w0, w20
    7324:	b.gt	7344 <grub_mod_fini+0x6ff4>
    7328:	ldr	w1, [x19, #64]
    732c:	cmp	w0, w1
    7330:	b.ge	7344 <grub_mod_fini+0x6ff4>  // b.tcont
    7334:	add	w1, w20, #0x1
    7338:	mov	x0, x19
    733c:	bl	7208 <grub_mod_fini+0x6eb8>
    7340:	cbnz	w0, 7350 <grub_mod_fini+0x7000>
    7344:	mov	w0, #0x0                   	// #0
    7348:	cmp	w21, w20
    734c:	b.lt	7360 <grub_mod_fini+0x7010>  // b.tstop
    7350:	ldp	x19, x20, [sp, #16]
    7354:	ldr	x21, [sp, #32]
    7358:	ldp	x29, x30, [sp], #48
    735c:	ret
    7360:	sub	w2, w20, w21
    7364:	sxtw	x21, w21
    7368:	add	x21, x21, #0x1
    736c:	ldr	x0, [x19, #136]
    7370:	sbfiz	x2, x2, #3, #32
    7374:	mov	w1, #0x0                   	// #0
    7378:	add	x0, x0, x21, lsl #3
    737c:	bl	0 <grub_memset>
    7380:	str	w20, [x19, #144]
    7384:	mov	w0, #0x0                   	// #0
    7388:	b	7350 <grub_mod_fini+0x7000>
    738c:	stp	x29, x30, [sp, #-112]!
    7390:	mov	x29, sp
    7394:	stp	x19, x20, [sp, #16]
    7398:	stp	x21, x22, [sp, #32]
    739c:	stp	x23, x24, [sp, #48]
    73a0:	mov	x19, x0
    73a4:	mov	w22, w1
    73a8:	mov	w23, w2
    73ac:	ldr	w20, [x0, #40]
    73b0:	cmp	w20, w1
    73b4:	b.le	74b8 <grub_mod_fini+0x7168>
    73b8:	ldr	w0, [x0, #104]
    73bc:	cmp	w0, #0x1
    73c0:	b.gt	74c0 <grub_mod_fini+0x7170>
    73c4:	ldr	w0, [x19, #60]
    73c8:	str	w0, [x19, #64]
    73cc:	ldr	w0, [x19, #68]
    73d0:	str	w0, [x19, #72]
    73d4:	str	wzr, [x19, #44]
    73d8:	str	wzr, [x19, #40]
    73dc:	str	wzr, [x19, #48]
    73e0:	strb	wzr, [x19, #100]
    73e4:	tst	x23, #0x1
    73e8:	mov	w0, #0x4                   	// #4
    73ec:	mov	w1, #0x6                   	// #6
    73f0:	csel	w0, w0, w1, ne  // ne = any
    73f4:	str	w0, [x19, #76]
    73f8:	ldrb	w0, [x19, #99]
    73fc:	mov	w20, w22
    7400:	cbnz	w0, 740c <grub_mod_fini+0x70bc>
    7404:	ldr	x0, [x19]
    7408:	str	x0, [x19, #8]
    740c:	cbz	w20, 7478 <grub_mod_fini+0x7128>
    7410:	ldr	w0, [x19, #48]
    7414:	cmp	w0, w20
    7418:	b.le	76f8 <grub_mod_fini+0x73a8>
    741c:	ldrb	w0, [x19, #100]
    7420:	cbnz	w0, 74d4 <grub_mod_fini+0x7184>
    7424:	mov	w2, w23
    7428:	sub	w1, w20, #0x1
    742c:	mov	x0, x19
    7430:	bl	26b8 <grub_mod_fini+0x2368>
    7434:	str	w0, [x19, #76]
    7438:	ldr	w0, [x19, #104]
    743c:	cmp	w0, #0x1
    7440:	b.gt	76c0 <grub_mod_fini+0x7370>
    7444:	ldrb	w0, [x19, #99]
    7448:	cbnz	w0, 76dc <grub_mod_fini+0x738c>
    744c:	ldr	w0, [x19, #44]
    7450:	sub	w0, w0, w20
    7454:	str	w0, [x19, #44]
    7458:	ldr	w0, [x19, #48]
    745c:	sub	w0, w0, w20
    7460:	str	w0, [x19, #48]
    7464:	ldrb	w0, [x19, #99]
    7468:	cbnz	w0, 7478 <grub_mod_fini+0x7128>
    746c:	ldr	x0, [x19, #8]
    7470:	add	x0, x0, w20, sxtw
    7474:	str	x0, [x19, #8]
    7478:	str	w22, [x19, #40]
    747c:	ldr	w0, [x19, #64]
    7480:	sub	w0, w0, w20
    7484:	str	w0, [x19, #64]
    7488:	ldr	w1, [x19, #72]
    748c:	sub	w20, w1, w20
    7490:	str	w20, [x19, #72]
    7494:	ldr	w1, [x19, #104]
    7498:	cmp	w1, #0x1
    749c:	b.le	7cc0 <grub_mod_fini+0x7970>
    74a0:	ldrb	w0, [x19, #96]
    74a4:	cbz	w0, 7cb4 <grub_mod_fini+0x7964>
    74a8:	mov	x0, x19
    74ac:	bl	6960 <grub_mod_fini+0x6610>
    74b0:	cbz	w0, 7ccc <grub_mod_fini+0x797c>
    74b4:	b	7cd4 <grub_mod_fini+0x7984>
    74b8:	sub	w20, w1, w20
    74bc:	b	740c <grub_mod_fini+0x70bc>
    74c0:	mov	x2, #0x8                   	// #8
    74c4:	mov	w1, #0x0                   	// #0
    74c8:	add	x0, x19, #0x20
    74cc:	bl	0 <grub_memset>
    74d0:	b	73c4 <grub_mod_fini+0x7074>
    74d4:	stp	x25, x26, [sp, #64]
    74d8:	ldr	w25, [x19, #44]
    74dc:	ldr	x24, [x19, #24]
    74e0:	mov	w1, w25
    74e4:	mov	w2, #0x0                   	// #0
    74e8:	b	74f8 <grub_mod_fini+0x71a8>
    74ec:	mov	w1, w21
    74f0:	cmp	w2, w1
    74f4:	b.ge	751c <grub_mod_fini+0x71cc>  // b.tcont
    74f8:	add	w21, w2, w1
    74fc:	add	w21, w21, w21, lsr #31
    7500:	asr	w21, w21, #1
    7504:	ldr	w0, [x24, w21, sxtw #2]
    7508:	cmp	w0, w20
    750c:	b.gt	74ec <grub_mod_fini+0x719c>
    7510:	b.ge	7524 <grub_mod_fini+0x71d4>  // b.tcont
    7514:	add	w2, w21, #0x1
    7518:	b	74f0 <grub_mod_fini+0x71a0>
    751c:	cmp	w0, w20
    7520:	cinc	w21, w21, lt  // lt = tstop
    7524:	mov	w2, w23
    7528:	sub	w1, w21, #0x1
    752c:	mov	x0, x19
    7530:	bl	26b8 <grub_mod_fini+0x2368>
    7534:	str	w0, [x19, #76]
    7538:	cmp	w20, w25
    753c:	ccmp	w20, w21, #0x0, lt  // lt = tstop
    7540:	b.eq	761c <grub_mod_fini+0x72cc>  // b.none
    7544:	ldr	w0, [x19, #60]
    7548:	sub	w0, w0, w22
    754c:	add	w0, w0, w20
    7550:	str	w0, [x19, #64]
    7554:	ldr	w0, [x19, #68]
    7558:	sub	w0, w0, w22
    755c:	add	w0, w0, w20
    7560:	str	w0, [x19, #72]
    7564:	strb	wzr, [x19, #100]
    7568:	cmp	w21, #0x0
    756c:	b.le	7598 <grub_mod_fini+0x7248>
    7570:	sxtw	x0, w21
    7574:	sub	x2, x24, #0x4
    7578:	mov	w21, w0
    757c:	ldr	w1, [x2, x0, lsl #2]
    7580:	cmp	w1, w20
    7584:	b.ne	7598 <grub_mod_fini+0x7248>  // b.any
    7588:	sub	w21, w0, #0x1
    758c:	sub	x0, x0, #0x1
    7590:	cmp	w0, #0x0
    7594:	b.gt	7578 <grub_mod_fini+0x7228>
    7598:	cmp	w25, w21
    759c:	b.le	75c8 <grub_mod_fini+0x7278>
    75a0:	ldr	x2, [x19, #16]
    75a4:	sxtw	x0, w21
    75a8:	mov	w21, w0
    75ac:	ldr	w1, [x2, x0, lsl #2]
    75b0:	cmn	w1, #0x1
    75b4:	b.ne	75c8 <grub_mod_fini+0x7278>  // b.any
    75b8:	add	w21, w0, #0x1
    75bc:	add	x0, x0, #0x1
    75c0:	cmp	w25, w0
    75c4:	b.gt	75a8 <grub_mod_fini+0x7258>
    75c8:	cmp	w25, w21
    75cc:	b.eq	76ac <grub_mod_fini+0x735c>  // b.none
    75d0:	ldr	w2, [x24, w21, sxtw #2]
    75d4:	sub	w2, w2, w20
    75d8:	str	w2, [x19, #44]
    75dc:	cbz	w2, 76b0 <grub_mod_fini+0x7360>
    75e0:	cmp	w2, #0x0
    75e4:	b.le	7608 <grub_mod_fini+0x72b8>
    75e8:	mov	x0, #0x0                   	// #0
    75ec:	mov	w3, #0xffffffff            	// #-1
    75f0:	ldr	x1, [x19, #16]
    75f4:	str	w3, [x1, x0, lsl #2]
    75f8:	ldr	w2, [x19, #44]
    75fc:	add	x0, x0, #0x1
    7600:	cmp	w2, w0
    7604:	b.gt	75f0 <grub_mod_fini+0x72a0>
    7608:	sxtw	x2, w2
    760c:	mov	w1, #0xff                  	// #255
    7610:	ldr	x0, [x19, #8]
    7614:	bl	0 <grub_memset>
    7618:	b	76b0 <grub_mod_fini+0x7360>
    761c:	ldr	w0, [x24, w21, sxtw #2]
    7620:	cmp	w0, w20
    7624:	b.ne	7544 <grub_mod_fini+0x71f4>  // b.any
    7628:	ldr	x0, [x19, #16]
    762c:	sxtw	x23, w20
    7630:	sbfiz	x21, x20, #2, #32
    7634:	sub	w2, w25, w20
    7638:	sbfiz	x2, x2, #2, #32
    763c:	add	x1, x0, x21
    7640:	bl	0 <grub_memmove>
    7644:	ldr	x0, [x19, #8]
    7648:	ldr	w2, [x19, #44]
    764c:	sub	w2, w2, w20
    7650:	sxtw	x2, w2
    7654:	add	x1, x0, x23
    7658:	bl	0 <grub_memmove>
    765c:	ldr	w0, [x19, #44]
    7660:	sub	w0, w0, w20
    7664:	str	w0, [x19, #44]
    7668:	ldr	w1, [x19, #48]
    766c:	sub	w1, w1, w20
    7670:	str	w1, [x19, #48]
    7674:	cmp	w0, #0x0
    7678:	b.le	7cac <grub_mod_fini+0x795c>
    767c:	mov	x0, #0x0                   	// #0
    7680:	ldr	x2, [x19, #24]
    7684:	ldr	w1, [x2, x21]
    7688:	sub	w1, w1, w20
    768c:	str	w1, [x2, x0, lsl #2]
    7690:	add	x0, x0, #0x1
    7694:	add	x21, x21, #0x4
    7698:	ldr	w1, [x19, #44]
    769c:	cmp	w1, w0
    76a0:	b.gt	7680 <grub_mod_fini+0x7330>
    76a4:	ldp	x25, x26, [sp, #64]
    76a8:	b	7464 <grub_mod_fini+0x7114>
    76ac:	str	wzr, [x19, #44]
    76b0:	ldr	w0, [x19, #44]
    76b4:	str	w0, [x19, #48]
    76b8:	ldp	x25, x26, [sp, #64]
    76bc:	b	7464 <grub_mod_fini+0x7114>
    76c0:	ldr	x0, [x19, #16]
    76c4:	ldr	w2, [x19, #44]
    76c8:	sub	w2, w2, w20
    76cc:	sbfiz	x2, x2, #2, #32
    76d0:	add	x1, x0, w20, sxtw #2
    76d4:	bl	0 <grub_memmove>
    76d8:	b	7444 <grub_mod_fini+0x70f4>
    76dc:	ldr	x0, [x19, #8]
    76e0:	ldr	w2, [x19, #44]
    76e4:	sub	w2, w2, w20
    76e8:	sxtw	x2, w2
    76ec:	add	x1, x0, w20, sxtw
    76f0:	bl	0 <grub_memmove>
    76f4:	b	744c <grub_mod_fini+0x70fc>
    76f8:	ldr	w24, [x19, #44]
    76fc:	ldrb	w0, [x19, #100]
    7700:	cbnz	w0, 77a4 <grub_mod_fini+0x7454>
    7704:	str	wzr, [x19, #44]
    7708:	ldr	w0, [x19, #104]
    770c:	cmp	w0, #0x1
    7710:	b.le	7c44 <grub_mod_fini+0x78f4>
    7714:	ldrb	w1, [x19, #97]
    7718:	cbz	w1, 7770 <grub_mod_fini+0x7420>
    771c:	stp	x25, x26, [sp, #64]
    7720:	ldr	x1, [x19]
    7724:	ldrsw	x25, [x19, #40]
    7728:	add	x25, x1, x25
    772c:	sub	w0, w20, w0
    7730:	add	x0, x25, w0, sxtw
    7734:	cmp	x1, x0
    7738:	csel	x1, x1, x0, cs  // cs = hs, nlast
    773c:	sxtw	x26, w20
    7740:	sub	x21, x26, #0x1
    7744:	add	x21, x25, x21
    7748:	cmp	x1, x21
    774c:	b.hi	79f4 <grub_mod_fini+0x76a4>  // b.pmore
    7750:	ldrb	w0, [x21]
    7754:	and	w0, w0, #0xc0
    7758:	cmp	w0, #0x80
    775c:	b.ne	77cc <grub_mod_fini+0x747c>  // b.any
    7760:	sub	x21, x21, #0x1
    7764:	cmp	x1, x21
    7768:	b.ls	7750 <grub_mod_fini+0x7400>  // b.plast
    776c:	ldp	x25, x26, [sp, #64]
    7770:	ldr	w2, [x19, #40]
    7774:	ldr	w0, [x19, #48]
    7778:	add	w2, w2, w0
    777c:	cmp	w22, w2
    7780:	b.le	7d10 <grub_mod_fini+0x79c0>
    7784:	adrp	x12, 0 <grub_mod_init-0x2b0>
    7788:	mov	x17, #0xfffffffffffffffe    	// #-2
    778c:	mov	x14, #0x1                   	// #1
    7790:	mov	w18, #0x3                   	// #3
    7794:	mov	w16, #0x2                   	// #2
    7798:	mov	w13, #0x1                   	// #1
    779c:	mov	x15, #0xffffffffffffffff    	// #-1
    77a0:	b	7ad0 <grub_mod_fini+0x7780>
    77a4:	ldr	w0, [x19, #60]
    77a8:	sub	w0, w0, w22
    77ac:	add	w0, w0, w20
    77b0:	str	w0, [x19, #64]
    77b4:	ldr	w0, [x19, #68]
    77b8:	sub	w0, w0, w22
    77bc:	add	w0, w0, w20
    77c0:	str	w0, [x19, #72]
    77c4:	strb	wzr, [x19, #100]
    77c8:	b	7704 <grub_mod_fini+0x73b4>
    77cc:	stp	x27, x28, [sp, #80]
    77d0:	ldrsw	x2, [x19, #64]
    77d4:	add	x2, x25, x2
    77d8:	sub	x27, x2, x21
    77dc:	ldr	x1, [x19, #80]
    77e0:	mov	x28, x21
    77e4:	cbnz	x1, 7890 <grub_mod_fini+0x7540>
    77e8:	mov	x2, #0x8                   	// #8
    77ec:	mov	w1, #0x0                   	// #0
    77f0:	add	x0, sp, #0x68
    77f4:	bl	0 <grub_memset>
    77f8:	add	x2, x28, w27, sxtw
    77fc:	cmp	x2, x28
    7800:	b.ls	79fc <grub_mod_fini+0x76ac>  // b.plast
    7804:	mov	x1, x28
    7808:	mov	w7, #0x3                   	// #3
    780c:	mov	w6, #0x2                   	// #2
    7810:	mov	w5, #0x1                   	// #1
    7814:	ldrb	w0, [x1]
    7818:	ldr	w3, [sp, #108]
    781c:	cbz	w3, 78fc <grub_mod_fini+0x75ac>
    7820:	and	w4, w0, #0xc0
    7824:	cmp	w4, #0x80
    7828:	b.ne	7a08 <grub_mod_fini+0x76b8>  // b.any
    782c:	ldr	w4, [sp, #104]
    7830:	bfi	w0, w4, #6, #26
    7834:	str	w0, [sp, #104]
    7838:	sub	w3, w3, #0x1
    783c:	str	w3, [sp, #108]
    7840:	cmp	w0, #0x1f
    7844:	ccmp	w3, #0x1, #0x0, ls  // ls = plast
    7848:	b.eq	7a14 <grub_mod_fini+0x76c4>  // b.none
    784c:	cmp	w0, #0xf
    7850:	ccmp	w3, #0x2, #0x0, ls  // ls = plast
    7854:	b.eq	78f0 <grub_mod_fini+0x75a0>  // b.none
    7858:	ldr	w0, [sp, #108]
    785c:	cbnz	w0, 794c <grub_mod_fini+0x75fc>
    7860:	ldr	w27, [sp, #104]
    7864:	sub	x28, x1, x28
    7868:	cmp	w27, #0x0
    786c:	csinc	x28, xzr, x28, eq  // eq = none
    7870:	add	x25, x25, x26
    7874:	sub	x21, x25, x21
    7878:	cmp	x21, x28
    787c:	ccmn	x28, #0x3, #0x2, ls  // ls = plast
    7880:	b.ls	7990 <grub_mod_fini+0x7640>  // b.plast
    7884:	ldp	x25, x26, [sp, #64]
    7888:	ldp	x27, x28, [sp, #80]
    788c:	b	7770 <grub_mod_fini+0x7420>
    7890:	cmp	w27, #0x6
    7894:	mov	w2, #0x6                   	// #6
    7898:	csel	w2, w27, w2, le
    789c:	cmp	w27, #0x0
    78a0:	b.le	78e8 <grub_mod_fini+0x7598>
    78a4:	sub	w0, w2, #0x2
    78a8:	sxtw	x0, w0
    78ac:	sxtw	x4, w2
    78b0:	sub	x4, x4, #0x3
    78b4:	sub	w2, w2, #0x1
    78b8:	sub	x4, x4, x2
    78bc:	add	x5, x21, #0x1
    78c0:	ldrb	w2, [x5, x0]
    78c4:	ldrb	w3, [x1, x2]
    78c8:	add	x2, sp, #0x60
    78cc:	add	x2, x0, x2
    78d0:	strb	w3, [x2, #1]
    78d4:	sub	x0, x0, #0x1
    78d8:	cmp	x0, x4
    78dc:	b.ne	78c0 <grub_mod_fini+0x7570>  // b.any
    78e0:	add	x28, sp, #0x60
    78e4:	b	77e8 <grub_mod_fini+0x7498>
    78e8:	add	x28, sp, #0x60
    78ec:	b	77e8 <grub_mod_fini+0x7498>
    78f0:	ldp	x25, x26, [sp, #64]
    78f4:	ldp	x27, x28, [sp, #80]
    78f8:	b	7770 <grub_mod_fini+0x7420>
    78fc:	tbz	w0, #7, 7930 <grub_mod_fini+0x75e0>
    7900:	and	w3, w0, #0xe0
    7904:	cmp	w3, #0xc0
    7908:	b.eq	7938 <grub_mod_fini+0x75e8>  // b.none
    790c:	and	w3, w0, #0xf0
    7910:	cmp	w3, #0xe0
    7914:	b.eq	7970 <grub_mod_fini+0x7620>  // b.none
    7918:	and	w3, w0, #0xf8
    791c:	cmp	w3, #0xf0
    7920:	b.eq	7980 <grub_mod_fini+0x7630>  // b.none
    7924:	ldp	x25, x26, [sp, #64]
    7928:	ldp	x27, x28, [sp, #80]
    792c:	b	7770 <grub_mod_fini+0x7420>
    7930:	str	w0, [sp, #104]
    7934:	b	7860 <grub_mod_fini+0x7510>
    7938:	str	w5, [sp, #108]
    793c:	and	w0, w0, #0x1f
    7940:	str	w0, [sp, #104]
    7944:	cmp	w0, #0x1
    7948:	b.ls	7964 <grub_mod_fini+0x7614>  // b.plast
    794c:	add	x1, x1, #0x1
    7950:	cmp	x2, x1
    7954:	b.ne	7814 <grub_mod_fini+0x74c4>  // b.any
    7958:	ldp	x25, x26, [sp, #64]
    795c:	ldp	x27, x28, [sp, #80]
    7960:	b	7770 <grub_mod_fini+0x7420>
    7964:	ldp	x25, x26, [sp, #64]
    7968:	ldp	x27, x28, [sp, #80]
    796c:	b	7770 <grub_mod_fini+0x7420>
    7970:	str	w6, [sp, #108]
    7974:	and	w0, w0, #0xf
    7978:	str	w0, [sp, #104]
    797c:	b	794c <grub_mod_fini+0x75fc>
    7980:	str	w7, [sp, #108]
    7984:	and	w0, w0, #0x7
    7988:	str	w0, [sp, #104]
    798c:	b	794c <grub_mod_fini+0x75fc>
    7990:	mov	x2, #0x8                   	// #8
    7994:	mov	w1, #0x0                   	// #0
    7998:	add	x0, x19, #0x20
    799c:	bl	0 <grub_memset>
    79a0:	sub	w21, w28, w21
    79a4:	str	w21, [x19, #44]
    79a8:	mov	w1, w27
    79ac:	cmn	w27, #0x1
    79b0:	b.eq	79e8 <grub_mod_fini+0x7698>  // b.none
    79b4:	ldp	x25, x26, [sp, #64]
    79b8:	ldp	x27, x28, [sp, #80]
    79bc:	ldrb	w0, [x19, #102]
    79c0:	cbnz	w0, 7bc4 <grub_mod_fini+0x7874>
    79c4:	mov	w0, #0x0                   	// #0
    79c8:	cmp	w1, #0xa
    79cc:	b.eq	7bec <grub_mod_fini+0x789c>  // b.none
    79d0:	str	w0, [x19, #76]
    79d4:	ldr	w2, [x19, #44]
    79d8:	cbnz	w2, 7c00 <grub_mod_fini+0x78b0>
    79dc:	ldr	w0, [x19, #44]
    79e0:	str	w0, [x19, #48]
    79e4:	b	7464 <grub_mod_fini+0x7114>
    79e8:	ldp	x25, x26, [sp, #64]
    79ec:	ldp	x27, x28, [sp, #80]
    79f0:	b	7770 <grub_mod_fini+0x7420>
    79f4:	ldp	x25, x26, [sp, #64]
    79f8:	b	7770 <grub_mod_fini+0x7420>
    79fc:	ldp	x25, x26, [sp, #64]
    7a00:	ldp	x27, x28, [sp, #80]
    7a04:	b	7770 <grub_mod_fini+0x7420>
    7a08:	ldp	x25, x26, [sp, #64]
    7a0c:	ldp	x27, x28, [sp, #80]
    7a10:	b	7770 <grub_mod_fini+0x7420>
    7a14:	ldp	x25, x26, [sp, #64]
    7a18:	ldp	x27, x28, [sp, #80]
    7a1c:	b	7770 <grub_mod_fini+0x7420>
    7a20:	ldr	w21, [x19, #32]
    7a24:	bfi	w1, w21, #6, #26
    7a28:	str	w1, [x19, #32]
    7a2c:	sub	w3, w3, #0x1
    7a30:	str	w3, [x19, #36]
    7a34:	cmp	w1, #0x1f
    7a38:	ccmp	w3, #0x1, #0x0, ls  // ls = plast
    7a3c:	b.eq	7a4c <grub_mod_fini+0x76fc>  // b.none
    7a40:	cmp	w1, #0xf
    7a44:	ccmp	w3, #0x2, #0x0, ls  // ls = plast
    7a48:	b.ne	7a94 <grub_mod_fini+0x7744>  // b.any
    7a4c:	str	wzr, [x19, #32]
    7a50:	str	wzr, [x19, #36]
    7a54:	b	7b2c <grub_mod_fini+0x77dc>
    7a58:	tbz	w1, #7, 7a90 <grub_mod_fini+0x7740>
    7a5c:	and	w3, w1, #0xe0
    7a60:	cmp	w3, #0xc0
    7a64:	b.eq	7b50 <grub_mod_fini+0x7800>  // b.none
    7a68:	and	w3, w1, #0xf0
    7a6c:	cmp	w3, #0xe0
    7a70:	b.eq	7b70 <grub_mod_fini+0x7820>  // b.none
    7a74:	and	w3, w1, #0xf8
    7a78:	cmp	w3, #0xf0
    7a7c:	b.ne	7b2c <grub_mod_fini+0x77dc>  // b.any
    7a80:	str	w18, [x19, #36]
    7a84:	and	w1, w1, #0x7
    7a88:	str	w1, [x19, #32]
    7a8c:	b	7a94 <grub_mod_fini+0x7744>
    7a90:	str	w1, [x19, #32]
    7a94:	ldr	w1, [x19, #36]
    7a98:	cbnz	w1, 7b80 <grub_mod_fini+0x7830>
    7a9c:	cbz	x7, 7aa8 <grub_mod_fini+0x7758>
    7aa0:	ldr	w3, [x19, #32]
    7aa4:	str	w3, [x7]
    7aa8:	ldr	w3, [x19, #32]
    7aac:	cbz	w3, 7b40 <grub_mod_fini+0x77f0>
    7ab0:	sub	x0, x0, x9
    7ab4:	add	x3, x0, #0x1
    7ab8:	cmn	x0, #0x4
    7abc:	b.hi	7b30 <grub_mod_fini+0x77e0>  // b.pmore
    7ac0:	ldr	w1, [sp, #104]
    7ac4:	add	w2, w2, w3
    7ac8:	cmp	w22, w2
    7acc:	b.le	7b9c <grub_mod_fini+0x784c>
    7ad0:	ldr	w4, [x19, #60]
    7ad4:	sub	w4, w4, w2
    7ad8:	ldr	w10, [x19, #32]
    7adc:	ldr	w11, [x19, #36]
    7ae0:	sxtw	x5, w2
    7ae4:	ldr	x6, [x19]
    7ae8:	adds	x1, x6, x5
    7aec:	b.eq	7d1c <grub_mod_fini+0x79cc>  // b.none
    7af0:	str	wzr, [sp, #104]
    7af4:	add	x8, x1, w4, sxtw
    7af8:	mov	x9, x1
    7afc:	mov	x0, x1
    7b00:	add	x7, sp, #0x68
    7b04:	mov	x3, x17
    7b08:	cmp	x1, x8
    7b0c:	b.cs	7b30 <grub_mod_fini+0x77e0>  // b.hs, b.nlast
    7b10:	ldrb	w1, [x0]
    7b14:	ldr	w3, [x19, #36]
    7b18:	cbz	w3, 7a58 <grub_mod_fini+0x7708>
    7b1c:	and	w21, w1, #0xc0
    7b20:	cmp	w21, #0x80
    7b24:	b.eq	7a20 <grub_mod_fini+0x76d0>  // b.none
    7b28:	str	wzr, [x19, #36]
    7b2c:	mov	x3, x15
    7b30:	cmp	x3, #0x0
    7b34:	ccmp	w4, #0x0, #0x4, ne  // ne = any
    7b38:	b.eq	7b94 <grub_mod_fini+0x7844>  // b.none
    7b3c:	ldrb	w1, [x6, x5]
    7b40:	str	w10, [x19, #32]
    7b44:	str	w11, [x19, #36]
    7b48:	mov	x3, x14
    7b4c:	b	7ac4 <grub_mod_fini+0x7774>
    7b50:	str	w13, [x19, #36]
    7b54:	and	w1, w1, #0x1f
    7b58:	str	w1, [x19, #32]
    7b5c:	cmp	w1, #0x1
    7b60:	b.hi	7a94 <grub_mod_fini+0x7744>  // b.pmore
    7b64:	str	wzr, [x19, #36]
    7b68:	str	wzr, [x19, #32]
    7b6c:	b	7b2c <grub_mod_fini+0x77dc>
    7b70:	str	w16, [x19, #36]
    7b74:	and	w1, w1, #0xf
    7b78:	str	w1, [x19, #32]
    7b7c:	b	7a94 <grub_mod_fini+0x7744>
    7b80:	add	x0, x0, #0x1
    7b84:	cmp	x0, x8
    7b88:	b.ne	7b10 <grub_mod_fini+0x77c0>  // b.any
    7b8c:	mov	x3, x17
    7b90:	b	7b30 <grub_mod_fini+0x77e0>
    7b94:	mov	w1, #0x0                   	// #0
    7b98:	b	7b40 <grub_mod_fini+0x77f0>
    7b9c:	sub	w2, w2, w22
    7ba0:	str	w2, [x19, #44]
    7ba4:	cmn	w1, #0x1
    7ba8:	b.ne	79bc <grub_mod_fini+0x766c>  // b.any
    7bac:	mov	w2, w23
    7bb0:	sub	w1, w24, #0x1
    7bb4:	mov	x0, x19
    7bb8:	bl	26b8 <grub_mod_fini+0x2368>
    7bbc:	str	w0, [x19, #76]
    7bc0:	b	79d4 <grub_mod_fini+0x7684>
    7bc4:	and	w2, w1, #0xffffffdf
    7bc8:	sub	w2, w2, #0x41
    7bcc:	mov	w0, #0x1                   	// #1
    7bd0:	cmp	w2, #0x19
    7bd4:	b.ls	79d0 <grub_mod_fini+0x7680>  // b.plast
    7bd8:	sub	w2, w1, #0x30
    7bdc:	cmp	w1, #0x5f
    7be0:	ccmp	w2, #0x9, #0x0, ne  // ne = any
    7be4:	b.ls	79d0 <grub_mod_fini+0x7680>  // b.plast
    7be8:	b	79c4 <grub_mod_fini+0x7674>
    7bec:	ldrb	w0, [x19, #101]
    7bf0:	cmp	w0, #0x0
    7bf4:	cset	w0, ne  // ne = any
    7bf8:	lsl	w0, w0, #1
    7bfc:	b	79d0 <grub_mod_fini+0x7680>
    7c00:	cmp	w2, #0x0
    7c04:	b.le	7c28 <grub_mod_fini+0x78d8>
    7c08:	mov	x0, #0x0                   	// #0
    7c0c:	mov	w3, #0xffffffff            	// #-1
    7c10:	ldr	x1, [x19, #16]
    7c14:	str	w3, [x1, x0, lsl #2]
    7c18:	ldr	w2, [x19, #44]
    7c1c:	add	x0, x0, #0x1
    7c20:	cmp	w2, w0
    7c24:	b.gt	7c10 <grub_mod_fini+0x78c0>
    7c28:	ldrb	w0, [x19, #99]
    7c2c:	cbz	w0, 79dc <grub_mod_fini+0x768c>
    7c30:	sxtw	x2, w2
    7c34:	mov	w1, #0xff                  	// #255
    7c38:	ldr	x0, [x19, #8]
    7c3c:	bl	0 <grub_memset>
    7c40:	b	79dc <grub_mod_fini+0x768c>
    7c44:	ldr	w0, [x19, #40]
    7c48:	add	w0, w20, w0
    7c4c:	ldr	x1, [x19]
    7c50:	add	x0, x1, w0, sxtw
    7c54:	ldurb	w0, [x0, #-1]
    7c58:	str	wzr, [x19, #48]
    7c5c:	ldr	x1, [x19, #80]
    7c60:	cbz	x1, 7c6c <grub_mod_fini+0x791c>
    7c64:	and	x0, x0, #0xff
    7c68:	ldrb	w0, [x1, x0]
    7c6c:	ubfx	x1, x0, #6, #2
    7c70:	ldr	x2, [x19, #88]
    7c74:	ldr	x1, [x2, x1, lsl #3]
    7c78:	lsr	x1, x1, x0
    7c7c:	mov	w2, #0x1                   	// #1
    7c80:	tbnz	w1, #0, 7c90 <grub_mod_fini+0x7940>
    7c84:	mov	w2, #0x0                   	// #0
    7c88:	cmp	w0, #0xa
    7c8c:	b.eq	7c98 <grub_mod_fini+0x7948>  // b.none
    7c90:	str	w2, [x19, #76]
    7c94:	b	7464 <grub_mod_fini+0x7114>
    7c98:	ldrb	w0, [x19, #101]
    7c9c:	cmp	w0, #0x0
    7ca0:	cset	w2, ne  // ne = any
    7ca4:	lsl	w2, w2, #1
    7ca8:	b	7c90 <grub_mod_fini+0x7940>
    7cac:	ldp	x25, x26, [sp, #64]
    7cb0:	b	7464 <grub_mod_fini+0x7114>
    7cb4:	mov	x0, x19
    7cb8:	bl	60c0 <grub_mod_fini+0x5d70>
    7cbc:	b	7ccc <grub_mod_fini+0x797c>
    7cc0:	ldrb	w1, [x19, #99]
    7cc4:	cbnz	w1, 7ce8 <grub_mod_fini+0x7998>
    7cc8:	str	w0, [x19, #44]
    7ccc:	str	wzr, [x19, #56]
    7cd0:	mov	w0, #0x0                   	// #0
    7cd4:	ldp	x19, x20, [sp, #16]
    7cd8:	ldp	x21, x22, [sp, #32]
    7cdc:	ldp	x23, x24, [sp, #48]
    7ce0:	ldp	x29, x30, [sp], #112
    7ce4:	ret
    7ce8:	ldrb	w0, [x19, #96]
    7cec:	cbnz	w0, 7d04 <grub_mod_fini+0x79b4>
    7cf0:	ldr	x0, [x19, #80]
    7cf4:	cbz	x0, 7ccc <grub_mod_fini+0x797c>
    7cf8:	mov	x0, x19
    7cfc:	bl	1218 <grub_mod_fini+0xec8>
    7d00:	b	7ccc <grub_mod_fini+0x797c>
    7d04:	mov	x0, x19
    7d08:	bl	1a7c <grub_mod_fini+0x172c>
    7d0c:	b	7ccc <grub_mod_fini+0x797c>
    7d10:	sub	w2, w2, w22
    7d14:	str	w2, [x19, #44]
    7d18:	b	7bac <grub_mod_fini+0x785c>
    7d1c:	ldr	x8, [x12]
    7d20:	mov	x7, x1
    7d24:	sub	x9, x8, #0x1
    7d28:	mov	x0, x9
    7d2c:	b	7b10 <grub_mod_fini+0x77c0>
	...
    7d38:	stp	x29, x30, [sp, #-288]!
    7d3c:	mov	x29, sp
    7d40:	stp	x19, x20, [sp, #16]
    7d44:	stp	x23, x24, [sp, #48]
    7d48:	stp	x25, x26, [sp, #64]
    7d4c:	stp	x27, x28, [sp, #80]
    7d50:	mov	x26, x0
    7d54:	mov	x19, x1
    7d58:	mov	x24, x2
    7d5c:	mov	x27, x3
    7d60:	mov	w20, w4
    7d64:	mov	x28, x5
    7d68:	ldr	x23, [x1]
    7d6c:	ldrb	w0, [x2, #8]
    7d70:	cmp	w0, #0x13
    7d74:	b.hi	7f78 <grub_mod_fini+0x7c28>  // b.pmore
    7d78:	cmp	w0, #0x11
    7d7c:	b.hi	893c <grub_mod_fini+0x85ec>  // b.pmore
    7d80:	cmp	w0, #0x8
    7d84:	b.eq	80c4 <grub_mod_fini+0x7d74>  // b.none
    7d88:	b.ls	7e48 <grub_mod_fini+0x7af8>  // b.plast
    7d8c:	cmp	w0, #0xb
    7d90:	b.eq	893c <grub_mod_fini+0x85ec>  // b.none
    7d94:	cmp	w0, #0xc
    7d98:	b.ne	7f54 <grub_mod_fini+0x7c04>  // b.any
    7d9c:	ldr	w1, [x2]
    7da0:	mov	w0, #0x30f                 	// #783
    7da4:	tst	w1, w0
    7da8:	b.eq	7db4 <grub_mod_fini+0x7a64>  // b.none
    7dac:	ldrb	w0, [x23, #160]
    7db0:	tbz	w0, #4, 89b0 <grub_mod_fini+0x8660>
    7db4:	ldr	w0, [x24]
    7db8:	sub	w1, w0, #0x100
    7dbc:	tst	w1, #0xfffffeff
    7dc0:	b.ne	8aac <grub_mod_fini+0x875c>  // b.any
    7dc4:	cmp	w0, #0x100
    7dc8:	b.eq	8a70 <grub_mod_fini+0x8720>  // b.none
    7dcc:	mov	w0, #0x5                   	// #5
    7dd0:	str	w0, [x24]
    7dd4:	mov	x3, x24
    7dd8:	mov	x2, #0x0                   	// #0
    7ddc:	mov	x1, #0x0                   	// #0
    7de0:	mov	x0, x23
    7de4:	bl	2ad4 <grub_mod_fini+0x2784>
    7de8:	mov	x20, x0
    7dec:	mov	w0, #0xa                   	// #10
    7df0:	str	w0, [x24]
    7df4:	mov	x3, x24
    7df8:	mov	x2, #0x0                   	// #0
    7dfc:	mov	x1, #0x0                   	// #0
    7e00:	mov	x0, x23
    7e04:	bl	2ad4 <grub_mod_fini+0x2784>
    7e08:	mov	x19, x0
    7e0c:	mov	w3, #0xa                   	// #10
    7e10:	mov	x2, x0
    7e14:	mov	x1, x20
    7e18:	mov	x0, x23
    7e1c:	bl	2c40 <grub_mod_fini+0x28f0>
    7e20:	str	x0, [sp, #112]
    7e24:	cmp	x20, #0x0
    7e28:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    7e2c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    7e30:	b.eq	8a9c <grub_mod_fini+0x874c>  // b.none
    7e34:	mov	x2, x27
    7e38:	mov	x1, x26
    7e3c:	mov	x0, x24
    7e40:	bl	2238 <grub_mod_fini+0x1ee8>
    7e44:	b	8f58 <grub_mod_fini+0x8c08>
    7e48:	cmp	w0, #0x4
    7e4c:	b.eq	88bc <grub_mod_fini+0x856c>  // b.none
    7e50:	cmp	w0, #0x5
    7e54:	b.ne	7e90 <grub_mod_fini+0x7b40>  // b.any
    7e58:	mov	x3, x2
    7e5c:	mov	x2, #0x0                   	// #0
    7e60:	mov	x1, #0x0                   	// #0
    7e64:	mov	x0, x23
    7e68:	bl	2ad4 <grub_mod_fini+0x2784>
    7e6c:	str	x0, [sp, #112]
    7e70:	cbz	x0, 8ad4 <grub_mod_fini+0x8784>
    7e74:	ldr	w0, [x23, #164]
    7e78:	cmp	w0, #0x1
    7e7c:	b.le	7fbc <grub_mod_fini+0x7c6c>
    7e80:	ldrb	w0, [x23, #160]
    7e84:	orr	w0, w0, #0x2
    7e88:	strb	w0, [x23, #160]
    7e8c:	b	7fbc <grub_mod_fini+0x7c6c>
    7e90:	cmp	w0, #0x1
    7e94:	b.ne	7f4c <grub_mod_fini+0x7bfc>  // b.any
    7e98:	mov	x3, x2
    7e9c:	mov	x2, #0x0                   	// #0
    7ea0:	mov	x1, #0x0                   	// #0
    7ea4:	mov	x0, x23
    7ea8:	bl	2ad4 <grub_mod_fini+0x2784>
    7eac:	str	x0, [sp, #112]
    7eb0:	cbz	x0, 80b8 <grub_mod_fini+0x7d68>
    7eb4:	ldr	w0, [x23, #164]
    7eb8:	mov	w20, #0x10                  	// #16
    7ebc:	cmp	w0, #0x1
    7ec0:	b.le	7fbc <grub_mod_fini+0x7c6c>
    7ec4:	ldr	w0, [x26, #56]
    7ec8:	ldr	w1, [x26, #72]
    7ecc:	cmp	w1, w0
    7ed0:	b.le	7fbc <grub_mod_fini+0x7c6c>
    7ed4:	ldr	w1, [x26, #44]
    7ed8:	cmp	w0, w1
    7edc:	b.eq	7fbc <grub_mod_fini+0x7c6c>  // b.none
    7ee0:	ldr	x1, [x26, #16]
    7ee4:	ldr	w0, [x1, w0, sxtw #2]
    7ee8:	cmn	w0, #0x1
    7eec:	b.ne	7fbc <grub_mod_fini+0x7c6c>  // b.any
    7ef0:	mov	x2, x27
    7ef4:	mov	x1, x26
    7ef8:	mov	x0, x24
    7efc:	bl	2238 <grub_mod_fini+0x1ee8>
    7f00:	mov	x3, x24
    7f04:	mov	x2, #0x0                   	// #0
    7f08:	mov	x1, #0x0                   	// #0
    7f0c:	mov	x0, x23
    7f10:	bl	2ad4 <grub_mod_fini+0x2784>
    7f14:	mov	x19, x0
    7f18:	mov	w3, w20
    7f1c:	mov	x2, x0
    7f20:	ldr	x1, [sp, #112]
    7f24:	mov	x0, x23
    7f28:	bl	2c40 <grub_mod_fini+0x28f0>
    7f2c:	str	x0, [sp, #112]
    7f30:	cmp	x19, #0x0
    7f34:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    7f38:	b.ne	7ec4 <grub_mod_fini+0x7b74>  // b.any
    7f3c:	mov	w0, #0xc                   	// #12
    7f40:	str	w0, [x28]
    7f44:	str	xzr, [sp, #112]
    7f48:	b	8f58 <grub_mod_fini+0x8c08>
    7f4c:	str	xzr, [sp, #112]
    7f50:	b	8f58 <grub_mod_fini+0x8c08>
    7f54:	cmp	w0, #0x9
    7f58:	b.ne	7f70 <grub_mod_fini+0x7c20>  // b.any
    7f5c:	tbnz	w27, #17, 7f98 <grub_mod_fini+0x7c48>
    7f60:	mov	w0, #0x10                  	// #16
    7f64:	str	w0, [x28]
    7f68:	str	xzr, [sp, #112]
    7f6c:	b	8f58 <grub_mod_fini+0x8c08>
    7f70:	str	xzr, [sp, #112]
    7f74:	b	8f58 <grub_mod_fini+0x8c08>
    7f78:	cmp	w0, #0x21
    7f7c:	b.hi	8090 <grub_mod_fini+0x7d40>  // b.pmore
    7f80:	cmp	w0, #0x1f
    7f84:	b.hi	8ae0 <grub_mod_fini+0x8790>  // b.pmore
    7f88:	cmp	w0, #0x17
    7f8c:	b.eq	8938 <grub_mod_fini+0x85e8>  // b.none
    7f90:	cmp	w0, #0x18
    7f94:	b.ne	7ffc <grub_mod_fini+0x7cac>  // b.any
    7f98:	mov	w0, #0x1                   	// #1
    7f9c:	strb	w0, [x24, #8]
    7fa0:	mov	x3, x24
    7fa4:	mov	x2, #0x0                   	// #0
    7fa8:	mov	x1, #0x0                   	// #0
    7fac:	mov	x0, x23
    7fb0:	bl	2ad4 <grub_mod_fini+0x2784>
    7fb4:	str	x0, [sp, #112]
    7fb8:	cbz	x0, 89a4 <grub_mod_fini+0x8654>
    7fbc:	mov	x2, x27
    7fc0:	mov	x1, x26
    7fc4:	mov	x0, x24
    7fc8:	bl	2238 <grub_mod_fini+0x1ee8>
    7fcc:	ldrb	w1, [x24, #8]
    7fd0:	cmp	w1, #0x12
    7fd4:	cset	w19, eq  // eq = none
    7fd8:	sub	w0, w1, #0x12
    7fdc:	and	w0, w0, #0xff
    7fe0:	cmp	w1, #0x17
    7fe4:	ccmp	w1, #0xb, #0x4, ne  // ne = any
    7fe8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    7fec:	b.hi	8f58 <grub_mod_fini+0x8c08>  // b.pmore
    7ff0:	stp	x21, x22, [sp, #32]
    7ff4:	mov	x25, #0x0                   	// #0
    7ff8:	b	8db8 <grub_mod_fini+0x8a68>
    7ffc:	cmp	w0, #0x14
    8000:	b.ne	8088 <grub_mod_fini+0x7d38>  // b.any
    8004:	stp	x21, x22, [sp, #32]
    8008:	str	wzr, [sp, #172]
    800c:	mov	x0, #0x20                  	// #32
    8010:	bl	0 <grub_zalloc>
    8014:	mov	x20, x0
    8018:	mov	x0, #0x38                  	// #56
    801c:	bl	0 <grub_zalloc>
    8020:	mov	x21, x0
    8024:	cmp	x20, #0x0
    8028:	cset	w0, eq  // eq = none
    802c:	cmp	x21, #0x0
    8030:	csinc	w0, w0, wzr, ne  // ne = any
    8034:	str	w0, [sp, #96]
    8038:	cbnz	w0, 81a8 <grub_mod_fini+0x7e58>
    803c:	mov	x2, x27
    8040:	mov	x1, x26
    8044:	mov	x0, x24
    8048:	bl	14a4 <grub_mod_fini+0x1154>
    804c:	str	w0, [sp, #112]
    8050:	ldrb	w0, [x24, #8]
    8054:	cmp	w0, #0x2
    8058:	b.eq	81c4 <grub_mod_fini+0x7e74>  // b.none
    805c:	ldr	w1, [sp, #96]
    8060:	str	w1, [sp, #140]
    8064:	cmp	w0, #0x19
    8068:	b.eq	81cc <grub_mod_fini+0x7e7c>  // b.none
    806c:	ldrb	w0, [x24, #8]
    8070:	cmp	w0, #0x15
    8074:	b.eq	8228 <grub_mod_fini+0x7ed8>  // b.none
    8078:	str	wzr, [sp, #136]
    807c:	mov	w6, #0x1                   	// #1
    8080:	str	wzr, [sp, #132]
    8084:	b	85cc <grub_mod_fini+0x827c>
    8088:	str	xzr, [sp, #112]
    808c:	b	8f58 <grub_mod_fini+0x8c08>
    8090:	cmp	w0, #0x23
    8094:	b.ls	8b24 <grub_mod_fini+0x87d4>  // b.plast
    8098:	cmp	w0, #0x24
    809c:	b.ne	80b0 <grub_mod_fini+0x7d60>  // b.any
    80a0:	mov	w0, #0x5                   	// #5
    80a4:	str	w0, [x5]
    80a8:	str	xzr, [sp, #112]
    80ac:	b	8f58 <grub_mod_fini+0x8c08>
    80b0:	str	xzr, [sp, #112]
    80b4:	b	8f58 <grub_mod_fini+0x8c08>
    80b8:	mov	w0, #0xc                   	// #12
    80bc:	str	w0, [x28]
    80c0:	b	8f58 <grub_mod_fini+0x8c08>
    80c4:	stp	x21, x22, [sp, #32]
    80c8:	ldr	x21, [x1, #48]
    80cc:	add	x0, x21, #0x1
    80d0:	str	x0, [x1, #48]
    80d4:	orr	x2, x3, #0x800000
    80d8:	mov	x1, x26
    80dc:	mov	x0, x24
    80e0:	bl	2238 <grub_mod_fini+0x1ee8>
    80e4:	ldrb	w1, [x24, #8]
    80e8:	mov	x0, #0x0                   	// #0
    80ec:	cmp	w1, #0x9
    80f0:	b.ne	8140 <grub_mod_fini+0x7df0>  // b.any
    80f4:	cmp	x21, #0x8
    80f8:	b.hi	8114 <grub_mod_fini+0x7dc4>  // b.pmore
    80fc:	mov	w1, #0x1                   	// #1
    8100:	lsl	w1, w1, w21
    8104:	sxtw	x1, w1
    8108:	ldr	x2, [x23, #152]
    810c:	orr	x1, x2, x1
    8110:	str	x1, [x23, #152]
    8114:	mov	w3, #0x11                  	// #17
    8118:	mov	x2, #0x0                   	// #0
    811c:	mov	x1, x0
    8120:	mov	x0, x23
    8124:	bl	2c40 <grub_mod_fini+0x28f0>
    8128:	str	x0, [sp, #112]
    812c:	cbz	x0, 819c <grub_mod_fini+0x7e4c>
    8130:	ldr	x0, [sp, #112]
    8134:	str	w21, [x0, #40]
    8138:	ldp	x21, x22, [sp, #32]
    813c:	b	7fbc <grub_mod_fini+0x7c6c>
    8140:	mov	x5, x28
    8144:	add	w4, w20, #0x1
    8148:	mov	x3, x27
    814c:	mov	x2, x24
    8150:	mov	x1, x19
    8154:	mov	x0, x26
    8158:	bl	91b0 <grub_mod_fini+0x8e60>
    815c:	ldr	w1, [x28]
    8160:	cbz	w1, 8170 <grub_mod_fini+0x7e20>
    8164:	str	xzr, [sp, #112]
    8168:	ldp	x21, x22, [sp, #32]
    816c:	b	8f58 <grub_mod_fini+0x8c08>
    8170:	ldrb	w1, [x24, #8]
    8174:	cmp	w1, #0x9
    8178:	b.eq	80f4 <grub_mod_fini+0x7da4>  // b.none
    817c:	cbz	x0, 8190 <grub_mod_fini+0x7e40>
    8180:	mov	x2, #0x0                   	// #0
    8184:	adrp	x1, 0 <grub_mod_init-0x2b0>
    8188:	ldr	x1, [x1]
    818c:	bl	25d0 <grub_mod_fini+0x2280>
    8190:	mov	w0, #0x8                   	// #8
    8194:	str	w0, [x28]
    8198:	b	8164 <grub_mod_fini+0x7e14>
    819c:	mov	w0, #0xc                   	// #12
    81a0:	str	w0, [x28]
    81a4:	b	8164 <grub_mod_fini+0x7e14>
    81a8:	mov	x0, x20
    81ac:	bl	0 <grub_free>
    81b0:	mov	x0, x21
    81b4:	bl	0 <grub_free>
    81b8:	mov	w0, #0xc                   	// #12
    81bc:	str	w0, [x28]
    81c0:	b	8248 <grub_mod_fini+0x7ef8>
    81c4:	str	w0, [x28]
    81c8:	b	8238 <grub_mod_fini+0x7ee8>
    81cc:	ldrb	w0, [x21, #32]
    81d0:	orr	w0, w0, #0x1
    81d4:	strb	w0, [x21, #32]
    81d8:	tbz	w27, #8, 81e8 <grub_mod_fini+0x7e98>
    81dc:	ldr	x0, [x20]
    81e0:	orr	x0, x0, #0x400
    81e4:	str	x0, [x20]
    81e8:	ldr	w0, [x26, #56]
    81ec:	ldr	w1, [sp, #112]
    81f0:	add	w0, w0, w1
    81f4:	str	w0, [x26, #56]
    81f8:	mov	x2, x27
    81fc:	mov	x1, x26
    8200:	mov	x0, x24
    8204:	bl	14a4 <grub_mod_fini+0x1154>
    8208:	str	w0, [sp, #112]
    820c:	ldrb	w0, [x24, #8]
    8210:	mov	w1, #0x1                   	// #1
    8214:	str	w1, [sp, #140]
    8218:	cmp	w0, #0x2
    821c:	b.ne	806c <grub_mod_fini+0x7d1c>  // b.any
    8220:	str	w0, [x28]
    8224:	b	8238 <grub_mod_fini+0x7ee8>
    8228:	mov	w0, #0x1                   	// #1
    822c:	strb	w0, [x24, #8]
    8230:	b	8078 <grub_mod_fini+0x7d28>
    8234:	str	w0, [x28]
    8238:	mov	x0, x20
    823c:	bl	0 <grub_free>
    8240:	mov	x0, x21
    8244:	bl	3928 <grub_mod_fini+0x35d8>
    8248:	ldr	w0, [x28]
    824c:	cbnz	w0, 8f7c <grub_mod_fini+0x8c2c>
    8250:	str	xzr, [sp, #112]
    8254:	ldp	x21, x22, [sp, #32]
    8258:	b	7fbc <grub_mod_fini+0x7c6c>
    825c:	mov	w0, #0x7                   	// #7
    8260:	str	w0, [x28]
    8264:	b	8238 <grub_mod_fini+0x7ee8>
    8268:	ldr	w0, [x26, #56]
    826c:	ldr	w1, [sp, #112]
    8270:	add	w0, w0, w1
    8274:	str	w0, [x26, #56]
    8278:	mov	x2, x27
    827c:	mov	x1, x26
    8280:	add	x0, sp, #0xd0
    8284:	bl	14a4 <grub_mod_fini+0x1154>
    8288:	mov	w3, w0
    828c:	ldrb	w0, [sp, #216]
    8290:	cmp	w0, #0x2
    8294:	b.eq	82bc <grub_mod_fini+0x7f6c>  // b.none
    8298:	cmp	w0, #0x15
    829c:	b.ne	82c8 <grub_mod_fini+0x7f78>  // b.any
    82a0:	ldr	w0, [x26, #56]
    82a4:	ldr	w1, [sp, #112]
    82a8:	sub	w0, w0, w1
    82ac:	str	w0, [x26, #56]
    82b0:	mov	w0, #0x1                   	// #1
    82b4:	strb	w0, [x24, #8]
    82b8:	b	8634 <grub_mod_fini+0x82e4>
    82bc:	mov	w0, #0x7                   	// #7
    82c0:	str	w0, [x28]
    82c4:	b	8238 <grub_mod_fini+0x7ee8>
    82c8:	add	x0, sp, #0x100
    82cc:	str	x0, [sp, #200]
    82d0:	mov	w0, #0x3                   	// #3
    82d4:	str	w0, [sp, #192]
    82d8:	mov	w6, #0x1                   	// #1
    82dc:	mov	x5, x27
    82e0:	mov	x4, x23
    82e4:	add	x2, sp, #0xd0
    82e8:	mov	x1, x26
    82ec:	add	x0, sp, #0xc0
    82f0:	bl	2264 <grub_mod_fini+0x1f14>
    82f4:	mov	w19, w0
    82f8:	cbnz	w0, 83a8 <grub_mod_fini+0x8058>
    82fc:	mov	x2, x27
    8300:	mov	x1, x26
    8304:	mov	x0, x24
    8308:	bl	14a4 <grub_mod_fini+0x1154>
    830c:	str	w0, [sp, #112]
    8310:	ldr	w0, [x23, #164]
    8314:	cmp	w0, #0x1
    8318:	csel	x0, x21, xzr, gt
    831c:	str	x0, [sp, #120]
    8320:	ldr	w1, [sp, #176]
    8324:	sub	w0, w1, #0x2
    8328:	tst	w0, #0xfffffffd
    832c:	b.eq	8fa0 <grub_mod_fini+0x8c50>  // b.none
    8330:	ldr	w0, [sp, #192]
    8334:	sub	w0, w0, #0x2
    8338:	tst	w0, #0xfffffffd
    833c:	b.eq	8fa8 <grub_mod_fini+0x8c58>  // b.none
    8340:	cmp	w1, #0x3
    8344:	b.eq	83b0 <grub_mod_fini+0x8060>  // b.none
    8348:	ldr	w0, [sp, #192]
    834c:	cmp	w0, #0x3
    8350:	b.eq	83c8 <grub_mod_fini+0x8078>  // b.none
    8354:	ldr	w1, [sp, #176]
    8358:	cbnz	w1, 83e0 <grub_mod_fini+0x8090>
    835c:	ldrb	w22, [sp, #184]
    8360:	ldr	w0, [sp, #192]
    8364:	cbnz	w0, 83f8 <grub_mod_fini+0x80a8>
    8368:	ldrb	w2, [sp, #200]
    836c:	cmp	w1, #0x0
    8370:	ccmp	w1, #0x3, #0x4, ne  // ne = any
    8374:	b.ne	8fe0 <grub_mod_fini+0x8c90>  // b.any
    8378:	ldr	x1, [sp, #120]
    837c:	cbz	x1, 8484 <grub_mod_fini+0x8134>
    8380:	tst	w22, #0xffffff80
    8384:	csinv	w22, w22, wzr, eq  // eq = none
    8388:	cmp	w0, #0x0
    838c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
    8390:	b.ne	8410 <grub_mod_fini+0x80c0>  // b.any
    8394:	mov	w25, w2
    8398:	tst	w2, #0xffffff80
    839c:	b.eq	8414 <grub_mod_fini+0x80c4>  // b.none
    83a0:	mov	w0, #0x3                   	// #3
    83a4:	b	8fac <grub_mod_fini+0x8c5c>
    83a8:	str	w0, [x28]
    83ac:	b	8238 <grub_mod_fini+0x7ee8>
    83b0:	ldr	x0, [sp, #184]
    83b4:	bl	0 <grub_strlen>
    83b8:	cmp	x0, #0x1
    83bc:	b.ls	8348 <grub_mod_fini+0x7ff8>  // b.plast
    83c0:	mov	w0, #0x3                   	// #3
    83c4:	b	8fac <grub_mod_fini+0x8c5c>
    83c8:	ldr	x0, [sp, #200]
    83cc:	bl	0 <grub_strlen>
    83d0:	cmp	x0, #0x1
    83d4:	b.ls	8354 <grub_mod_fini+0x8004>  // b.plast
    83d8:	mov	w0, #0x3                   	// #3
    83dc:	b	8fac <grub_mod_fini+0x8c5c>
    83e0:	mov	w22, #0x0                   	// #0
    83e4:	cmp	w1, #0x3
    83e8:	b.ne	8360 <grub_mod_fini+0x8010>  // b.any
    83ec:	ldr	x0, [sp, #184]
    83f0:	ldrb	w22, [x0]
    83f4:	b	8360 <grub_mod_fini+0x8010>
    83f8:	cmp	w0, #0x3
    83fc:	b.eq	8470 <grub_mod_fini+0x8120>  // b.none
    8400:	cmp	w1, #0x0
    8404:	ccmp	w1, #0x3, #0x4, ne  // ne = any
    8408:	b.eq	847c <grub_mod_fini+0x812c>  // b.none
    840c:	ldr	w22, [sp, #184]
    8410:	ldr	w25, [sp, #200]
    8414:	cmn	w22, #0x1
    8418:	ccmn	w25, #0x1, #0x4, ne  // ne = any
    841c:	b.eq	8fb4 <grub_mod_fini+0x8c64>  // b.none
    8420:	tst	x27, #0x10000
    8424:	ccmp	w25, w22, #0x0, ne  // ne = any
    8428:	b.lt	8fbc <grub_mod_fini+0x8c6c>  // b.tstop
    842c:	ldr	x0, [sp, #120]
    8430:	cbz	x0, 8468 <grub_mod_fini+0x8118>
    8434:	ldr	w0, [x0, #48]
    8438:	ldr	w1, [sp, #136]
    843c:	cmp	w0, w1
    8440:	b.eq	8498 <grub_mod_fini+0x8148>  // b.none
    8444:	ldr	x3, [sp, #120]
    8448:	ldrsw	x1, [x3, #48]
    844c:	ldr	x0, [x3, #8]
    8450:	str	w22, [x0, x1, lsl #2]
    8454:	ldr	x1, [x3, #16]
    8458:	ldr	w0, [x3, #48]
    845c:	add	w2, w0, #0x1
    8460:	str	w2, [x3, #48]
    8464:	str	w25, [x1, w0, sxtw #2]
    8468:	mov	x3, #0x1                   	// #1
    846c:	b	8524 <grub_mod_fini+0x81d4>
    8470:	ldr	x2, [sp, #200]
    8474:	ldrb	w2, [x2]
    8478:	b	836c <grub_mod_fini+0x801c>
    847c:	mov	w2, #0x0                   	// #0
    8480:	b	8378 <grub_mod_fini+0x8028>
    8484:	cmp	w0, #0x0
    8488:	ccmp	w0, #0x3, #0x4, ne  // ne = any
    848c:	b.ne	8410 <grub_mod_fini+0x80c0>  // b.any
    8490:	mov	w25, w2
    8494:	b	8414 <grub_mod_fini+0x80c4>
    8498:	ldr	w0, [sp, #136]
    849c:	lsl	w0, w0, #1
    84a0:	add	w0, w0, #0x1
    84a4:	str	w0, [sp, #136]
    84a8:	sbfiz	x0, x0, #2, #32
    84ac:	str	x0, [sp, #152]
    84b0:	mov	x1, x0
    84b4:	ldr	x2, [sp, #120]
    84b8:	ldr	x0, [x2, #8]
    84bc:	bl	0 <grub_realloc>
    84c0:	str	x0, [sp, #144]
    84c4:	ldr	x1, [sp, #152]
    84c8:	ldr	x2, [sp, #120]
    84cc:	ldr	x0, [x2, #16]
    84d0:	bl	0 <grub_realloc>
    84d4:	str	x0, [sp, #152]
    84d8:	ldr	x1, [sp, #144]
    84dc:	cmp	x1, #0x0
    84e0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    84e4:	b.eq	8500 <grub_mod_fini+0x81b0>  // b.none
    84e8:	ldr	x0, [sp, #120]
    84ec:	ldr	x1, [sp, #144]
    84f0:	str	x1, [x0, #8]
    84f4:	ldr	x1, [sp, #152]
    84f8:	str	x1, [x0, #16]
    84fc:	b	8444 <grub_mod_fini+0x80f4>
    8500:	mov	x0, x1
    8504:	bl	0 <grub_free>
    8508:	ldr	x0, [sp, #152]
    850c:	bl	0 <grub_free>
    8510:	mov	w0, #0xc                   	// #12
    8514:	b	8fac <grub_mod_fini+0x8c5c>
    8518:	add	w19, w19, #0x1
    851c:	cmp	w19, #0x100
    8520:	b.eq	8fc4 <grub_mod_fini+0x8c74>  // b.none
    8524:	cmp	w19, w22
    8528:	ccmp	w25, w19, #0x1, ge  // ge = tcont
    852c:	b.lt	8518 <grub_mod_fini+0x81c8>  // b.tstop
    8530:	add	w0, w19, #0x3f
    8534:	cmp	w19, #0x0
    8538:	csel	w0, w0, w19, lt  // lt = tstop
    853c:	asr	w0, w0, #6
    8540:	sxtw	x0, w0
    8544:	negs	w2, w19
    8548:	and	w1, w19, #0x3f
    854c:	and	w2, w2, #0x3f
    8550:	csneg	w1, w1, w2, mi  // mi = first
    8554:	lsl	x1, x3, x1
    8558:	ldr	x2, [x20, x0, lsl #3]
    855c:	orr	x1, x2, x1
    8560:	str	x1, [x20, x0, lsl #3]
    8564:	b	8518 <grub_mod_fini+0x81c8>
    8568:	cbz	w0, 8598 <grub_mod_fini+0x8248>
    856c:	ldr	w0, [x21, #36]
    8570:	ldr	w1, [sp, #132]
    8574:	cmp	w0, w1
    8578:	b.eq	867c <grub_mod_fini+0x832c>  // b.none
    857c:	ldr	x1, [x21]
    8580:	ldr	w0, [x21, #36]
    8584:	add	w2, w0, #0x1
    8588:	str	w2, [x21, #36]
    858c:	ldr	w2, [sp, #184]
    8590:	str	w2, [x1, w0, sxtw #2]
    8594:	b	85b4 <grub_mod_fini+0x8264>
    8598:	ldrb	w1, [sp, #184]
    859c:	ubfx	x2, x1, #6, #2
    85a0:	mov	x0, #0x1                   	// #1
    85a4:	lsl	x1, x0, x1
    85a8:	ldr	x0, [x20, x2, lsl #3]
    85ac:	orr	x0, x0, x1
    85b0:	str	x0, [x20, x2, lsl #3]
    85b4:	ldrb	w0, [x24, #8]
    85b8:	cmp	w0, #0x2
    85bc:	b.eq	8728 <grub_mod_fini+0x83d8>  // b.none
    85c0:	cmp	w0, #0x15
    85c4:	b.eq	8734 <grub_mod_fini+0x83e4>  // b.none
    85c8:	ldr	w6, [sp, #96]
    85cc:	add	x0, sp, #0xe0
    85d0:	str	x0, [sp, #184]
    85d4:	mov	w0, #0x3                   	// #3
    85d8:	str	w0, [sp, #176]
    85dc:	mov	x5, x27
    85e0:	mov	x4, x23
    85e4:	ldr	w3, [sp, #112]
    85e8:	mov	x2, x24
    85ec:	mov	x1, x26
    85f0:	add	x0, sp, #0xb0
    85f4:	bl	2264 <grub_mod_fini+0x1f14>
    85f8:	cbnz	w0, 8234 <grub_mod_fini+0x7ee4>
    85fc:	mov	x2, x27
    8600:	mov	x1, x26
    8604:	mov	x0, x24
    8608:	bl	14a4 <grub_mod_fini+0x1154>
    860c:	str	w0, [sp, #112]
    8610:	ldr	w0, [sp, #176]
    8614:	sub	w0, w0, #0x2
    8618:	tst	w0, #0xfffffffd
    861c:	b.eq	8634 <grub_mod_fini+0x82e4>  // b.none
    8620:	ldrb	w0, [x24, #8]
    8624:	cmp	w0, #0x2
    8628:	b.eq	825c <grub_mod_fini+0x7f0c>  // b.none
    862c:	cmp	w0, #0x16
    8630:	b.eq	8268 <grub_mod_fini+0x7f18>  // b.none
    8634:	ldr	w0, [sp, #176]
    8638:	cmp	w0, #0x2
    863c:	b.eq	86a4 <grub_mod_fini+0x8354>  // b.none
    8640:	b.ls	8568 <grub_mod_fini+0x8218>  // b.plast
    8644:	cmp	w0, #0x3
    8648:	b.eq	86d8 <grub_mod_fini+0x8388>  // b.none
    864c:	cmp	w0, #0x4
    8650:	b.ne	870c <grub_mod_fini+0x83bc>  // b.any
    8654:	mov	x5, x27
    8658:	ldr	x4, [sp, #184]
    865c:	add	x3, sp, #0xac
    8660:	mov	x2, x21
    8664:	mov	x1, x20
    8668:	ldr	x0, [x26, #80]
    866c:	bl	4c24 <grub_mod_fini+0x48d4>
    8670:	str	w0, [x28]
    8674:	cbz	w0, 85b4 <grub_mod_fini+0x8264>
    8678:	b	8238 <grub_mod_fini+0x7ee8>
    867c:	ldr	w0, [sp, #132]
    8680:	lsl	w0, w0, #1
    8684:	add	w0, w0, #0x1
    8688:	str	w0, [sp, #132]
    868c:	sbfiz	x1, x0, #2, #32
    8690:	ldr	x0, [x21]
    8694:	bl	0 <grub_realloc>
    8698:	cbz	x0, 88b0 <grub_mod_fini+0x8560>
    869c:	str	x0, [x21]
    86a0:	b	857c <grub_mod_fini+0x822c>
    86a4:	ldr	x19, [sp, #184]
    86a8:	mov	x0, x19
    86ac:	bl	0 <grub_strlen>
    86b0:	cmp	x0, #0x1
    86b4:	b.ne	8f88 <grub_mod_fini+0x8c38>  // b.any
    86b8:	ldrb	w1, [x19]
    86bc:	ubfx	x2, x1, #6, #2
    86c0:	lsl	x1, x0, x1
    86c4:	ldr	x0, [x20, x2, lsl #3]
    86c8:	orr	x0, x0, x1
    86cc:	str	x0, [x20, x2, lsl #3]
    86d0:	str	wzr, [x28]
    86d4:	b	85b4 <grub_mod_fini+0x8264>
    86d8:	ldr	x19, [sp, #184]
    86dc:	mov	x0, x19
    86e0:	bl	0 <grub_strlen>
    86e4:	cmp	x0, #0x1
    86e8:	b.ne	8f94 <grub_mod_fini+0x8c44>  // b.any
    86ec:	ldrb	w1, [x19]
    86f0:	ubfx	x2, x1, #6, #2
    86f4:	lsl	x1, x0, x1
    86f8:	ldr	x0, [x20, x2, lsl #3]
    86fc:	orr	x0, x0, x1
    8700:	str	x0, [x20, x2, lsl #3]
    8704:	str	wzr, [x28]
    8708:	b	85b4 <grub_mod_fini+0x8264>
    870c:	mov	w2, #0xced                 	// #3309
    8710:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8714:	ldr	x1, [x0]
    8718:	adrp	x0, 0 <grub_mod_init-0x2b0>
    871c:	ldr	x0, [x0]
    8720:	bl	0 <grub_printf>
    8724:	b	85b4 <grub_mod_fini+0x8264>
    8728:	mov	w0, #0x7                   	// #7
    872c:	str	w0, [x28]
    8730:	b	8238 <grub_mod_fini+0x7ee8>
    8734:	ldr	w0, [x26, #56]
    8738:	ldr	w1, [sp, #112]
    873c:	add	w0, w0, w1
    8740:	str	w0, [x26, #56]
    8744:	ldr	w0, [sp, #140]
    8748:	cbz	w0, 8768 <grub_mod_fini+0x8418>
    874c:	mov	x0, #0x0                   	// #0
    8750:	ldr	x1, [x20, x0, lsl #3]
    8754:	mvn	x1, x1
    8758:	str	x1, [x20, x0, lsl #3]
    875c:	add	x0, x0, #0x1
    8760:	cmp	x0, #0x4
    8764:	b.ne	8750 <grub_mod_fini+0x8400>  // b.any
    8768:	ldr	w0, [x23, #164]
    876c:	cmp	w0, #0x1
    8770:	b.le	8798 <grub_mod_fini+0x8448>
    8774:	ldr	x2, [x23, #120]
    8778:	mov	x0, #0x0                   	// #0
    877c:	ldr	x1, [x20, x0]
    8780:	ldr	x3, [x2, x0]
    8784:	and	x1, x1, x3
    8788:	str	x1, [x20, x0]
    878c:	add	x0, x0, #0x8
    8790:	cmp	x0, #0x20
    8794:	b.ne	877c <grub_mod_fini+0x842c>  // b.any
    8798:	ldr	w0, [x21, #36]
    879c:	cbnz	w0, 87cc <grub_mod_fini+0x847c>
    87a0:	ldr	x0, [x21, #40]
    87a4:	cbnz	x0, 87cc <grub_mod_fini+0x847c>
    87a8:	ldr	w0, [x21, #48]
    87ac:	cbnz	w0, 87cc <grub_mod_fini+0x847c>
    87b0:	ldr	w0, [x23, #164]
    87b4:	cmp	w0, #0x1
    87b8:	b.le	8878 <grub_mod_fini+0x8528>
    87bc:	ldr	w0, [x21, #52]
    87c0:	cbnz	w0, 87cc <grub_mod_fini+0x847c>
    87c4:	ldrb	w0, [x21, #32]
    87c8:	tbz	w0, #0, 8878 <grub_mod_fini+0x8528>
    87cc:	ldrb	w0, [x23, #160]
    87d0:	orr	w0, w0, #0x2
    87d4:	strb	w0, [x23, #160]
    87d8:	mov	w0, #0x6                   	// #6
    87dc:	strb	w0, [sp, #264]
    87e0:	str	x21, [sp, #256]
    87e4:	add	x3, sp, #0x100
    87e8:	mov	x2, #0x0                   	// #0
    87ec:	mov	x1, #0x0                   	// #0
    87f0:	mov	x0, x23
    87f4:	bl	2ad4 <grub_mod_fini+0x2784>
    87f8:	str	x0, [sp, #112]
    87fc:	cbz	x0, 88b0 <grub_mod_fini+0x8560>
    8800:	mov	x0, #0x0                   	// #0
    8804:	ldr	x2, [x20, x0, lsl #3]
    8808:	cbnz	x2, 8828 <grub_mod_fini+0x84d8>
    880c:	add	x0, x0, #0x1
    8810:	cmp	x0, #0x4
    8814:	b.ne	8804 <grub_mod_fini+0x84b4>  // b.any
    8818:	mov	x0, x20
    881c:	bl	0 <grub_free>
    8820:	ldp	x21, x22, [sp, #32]
    8824:	b	7fbc <grub_mod_fini+0x7c6c>
    8828:	cmp	w0, #0x3
    882c:	b.gt	8818 <grub_mod_fini+0x84c8>
    8830:	mov	w0, #0x3                   	// #3
    8834:	strb	w0, [sp, #264]
    8838:	str	x20, [sp, #256]
    883c:	add	x3, sp, #0x100
    8840:	mov	x2, #0x0                   	// #0
    8844:	mov	x1, #0x0                   	// #0
    8848:	mov	x0, x23
    884c:	bl	2ad4 <grub_mod_fini+0x2784>
    8850:	mov	x1, x0
    8854:	cbz	x0, 88b0 <grub_mod_fini+0x8560>
    8858:	mov	w3, #0xa                   	// #10
    885c:	ldr	x2, [sp, #112]
    8860:	mov	x0, x23
    8864:	bl	2c40 <grub_mod_fini+0x28f0>
    8868:	str	x0, [sp, #112]
    886c:	cbz	x0, 88b0 <grub_mod_fini+0x8560>
    8870:	ldp	x21, x22, [sp, #32]
    8874:	b	7fbc <grub_mod_fini+0x7c6c>
    8878:	mov	x0, x21
    887c:	bl	3928 <grub_mod_fini+0x35d8>
    8880:	mov	w0, #0x3                   	// #3
    8884:	strb	w0, [sp, #264]
    8888:	str	x20, [sp, #256]
    888c:	add	x3, sp, #0x100
    8890:	mov	x2, #0x0                   	// #0
    8894:	mov	x1, #0x0                   	// #0
    8898:	mov	x0, x23
    889c:	bl	2ad4 <grub_mod_fini+0x2784>
    88a0:	str	x0, [sp, #112]
    88a4:	cbz	x0, 88b0 <grub_mod_fini+0x8560>
    88a8:	ldp	x21, x22, [sp, #32]
    88ac:	b	7fbc <grub_mod_fini+0x7c6c>
    88b0:	mov	w0, #0xc                   	// #12
    88b4:	str	w0, [x28]
    88b8:	b	8238 <grub_mod_fini+0x7ee8>
    88bc:	ldr	w1, [x2]
    88c0:	mov	w0, #0x1                   	// #1
    88c4:	lsl	w0, w0, w1
    88c8:	sxtw	x0, w0
    88cc:	ldr	x1, [x23, #152]
    88d0:	tst	x0, x1
    88d4:	b.eq	891c <grub_mod_fini+0x85cc>  // b.none
    88d8:	ldr	x1, [x23, #144]
    88dc:	orr	x0, x1, x0
    88e0:	str	x0, [x23, #144]
    88e4:	mov	x3, x2
    88e8:	mov	x2, #0x0                   	// #0
    88ec:	mov	x1, #0x0                   	// #0
    88f0:	mov	x0, x23
    88f4:	bl	2ad4 <grub_mod_fini+0x2784>
    88f8:	str	x0, [sp, #112]
    88fc:	cbz	x0, 892c <grub_mod_fini+0x85dc>
    8900:	ldr	w0, [x23, #140]
    8904:	add	w0, w0, #0x1
    8908:	str	w0, [x23, #140]
    890c:	ldrb	w0, [x23, #160]
    8910:	orr	w0, w0, #0x2
    8914:	strb	w0, [x23, #160]
    8918:	b	7fbc <grub_mod_fini+0x7c6c>
    891c:	mov	w0, #0x6                   	// #6
    8920:	str	w0, [x5]
    8924:	str	xzr, [sp, #112]
    8928:	b	8f58 <grub_mod_fini+0x8c08>
    892c:	mov	w0, #0xc                   	// #12
    8930:	str	w0, [x28]
    8934:	b	8f58 <grub_mod_fini+0x8c08>
    8938:	tbnz	w3, #24, 8950 <grub_mod_fini+0x8600>
    893c:	tbnz	w27, #5, 8960 <grub_mod_fini+0x8610>
    8940:	tbnz	w27, #4, 8970 <grub_mod_fini+0x8620>
    8944:	cmp	w0, #0x9
    8948:	b.ne	7f98 <grub_mod_fini+0x7c48>  // b.any
    894c:	b	7f5c <grub_mod_fini+0x7c0c>
    8950:	mov	w0, #0xd                   	// #13
    8954:	str	w0, [x5]
    8958:	str	xzr, [sp, #112]
    895c:	b	8f58 <grub_mod_fini+0x8c08>
    8960:	mov	w0, #0xd                   	// #13
    8964:	str	w0, [x28]
    8968:	str	xzr, [sp, #112]
    896c:	b	8f58 <grub_mod_fini+0x8c08>
    8970:	mov	x2, x27
    8974:	mov	x1, x26
    8978:	mov	x0, x24
    897c:	bl	2238 <grub_mod_fini+0x1ee8>
    8980:	mov	x5, x28
    8984:	mov	w4, w20
    8988:	mov	x3, x27
    898c:	mov	x2, x24
    8990:	mov	x1, x19
    8994:	mov	x0, x26
    8998:	bl	7d38 <grub_mod_fini+0x79e8>
    899c:	str	x0, [sp, #112]
    89a0:	b	8f58 <grub_mod_fini+0x8c08>
    89a4:	mov	w0, #0xc                   	// #12
    89a8:	str	w0, [x28]
    89ac:	b	8f58 <grub_mod_fini+0x8c08>
    89b0:	ldrb	w0, [x23, #160]
    89b4:	orr	w0, w0, #0x10
    89b8:	strb	w0, [x23, #160]
    89bc:	mov	w7, #0x0                   	// #0
    89c0:	mov	w4, #0x0                   	// #0
    89c4:	tbnz	w0, #3, 8a00 <grub_mod_fini+0x86b0>
    89c8:	mov	x0, #0x3ff000000000000     	// #287948901175001088
    89cc:	str	x0, [x23, #168]
    89d0:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
    89d4:	movk	x0, #0x87ff, lsl #16
    89d8:	str	x0, [x23, #176]
    89dc:	ldrb	w0, [x23, #160]
    89e0:	tbz	w0, #2, 89f8 <grub_mod_fini+0x86a8>
    89e4:	mov	x2, #0x10                  	// #16
    89e8:	mov	w1, #0x0                   	// #0
    89ec:	add	x0, x23, #0xb8
    89f0:	bl	0 <grub_memset>
    89f4:	b	7db4 <grub_mod_fini+0x7a64>
    89f8:	mov	w7, #0x80                  	// #128
    89fc:	mov	w4, #0x2                   	// #2
    8a00:	sxtw	x4, w4
    8a04:	add	x5, x23, #0xa8
    8a08:	mov	x6, #0x1                   	// #1
    8a0c:	b	8a64 <grub_mod_fini+0x8714>
    8a10:	lsl	x1, x6, x2
    8a14:	ldr	x3, [x5, x4, lsl #3]
    8a18:	orr	x1, x3, x1
    8a1c:	str	x1, [x5, x4, lsl #3]
    8a20:	add	w2, w2, #0x1
    8a24:	add	w0, w0, #0x1
    8a28:	cmp	w2, #0x40
    8a2c:	b.eq	8a54 <grub_mod_fini+0x8704>  // b.none
    8a30:	and	w1, w0, #0xffffffdf
    8a34:	sub	w1, w1, #0x41
    8a38:	cmp	w1, #0x19
    8a3c:	b.ls	8a10 <grub_mod_fini+0x86c0>  // b.plast
    8a40:	sub	w1, w0, #0x30
    8a44:	cmp	w0, #0x5f
    8a48:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    8a4c:	b.ls	8a10 <grub_mod_fini+0x86c0>  // b.plast
    8a50:	b	8a20 <grub_mod_fini+0x86d0>
    8a54:	add	w7, w7, #0x40
    8a58:	add	x4, x4, #0x1
    8a5c:	cmp	w4, #0x3
    8a60:	b.gt	7db4 <grub_mod_fini+0x7a64>
    8a64:	mov	w0, w7
    8a68:	mov	w2, #0x0                   	// #0
    8a6c:	b	8a30 <grub_mod_fini+0x86e0>
    8a70:	mov	w0, #0x6                   	// #6
    8a74:	str	w0, [x24]
    8a78:	mov	x3, x24
    8a7c:	mov	x2, #0x0                   	// #0
    8a80:	mov	x1, #0x0                   	// #0
    8a84:	mov	x0, x23
    8a88:	bl	2ad4 <grub_mod_fini+0x2784>
    8a8c:	mov	x20, x0
    8a90:	mov	w0, #0x9                   	// #9
    8a94:	str	w0, [x24]
    8a98:	b	7df4 <grub_mod_fini+0x7aa4>
    8a9c:	mov	w0, #0xc                   	// #12
    8aa0:	str	w0, [x28]
    8aa4:	str	xzr, [sp, #112]
    8aa8:	b	8f58 <grub_mod_fini+0x8c08>
    8aac:	mov	x3, x24
    8ab0:	mov	x2, #0x0                   	// #0
    8ab4:	mov	x1, #0x0                   	// #0
    8ab8:	mov	x0, x23
    8abc:	bl	2ad4 <grub_mod_fini+0x2784>
    8ac0:	str	x0, [sp, #112]
    8ac4:	cbnz	x0, 7e34 <grub_mod_fini+0x7ae4>
    8ac8:	mov	w0, #0xc                   	// #12
    8acc:	str	w0, [x28]
    8ad0:	b	8f58 <grub_mod_fini+0x8c08>
    8ad4:	mov	w0, #0xc                   	// #12
    8ad8:	str	w0, [x28]
    8adc:	b	8f58 <grub_mod_fini+0x8c08>
    8ae0:	cmp	w0, #0x21
    8ae4:	cset	w4, eq  // eq = none
    8ae8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8aec:	ldr	x3, [x0]
    8af0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8af4:	ldr	x2, [x0]
    8af8:	ldr	x1, [x26, #80]
    8afc:	mov	x0, x23
    8b00:	bl	5730 <grub_mod_fini+0x53e0>
    8b04:	mov	x1, x0
    8b08:	str	x0, [sp, #112]
    8b0c:	ldr	w0, [x28]
    8b10:	cmp	w0, #0x0
    8b14:	ccmp	x1, #0x0, #0x0, ne  // ne = any
    8b18:	b.ne	7fbc <grub_mod_fini+0x7c6c>  // b.any
    8b1c:	str	xzr, [sp, #112]
    8b20:	b	8f58 <grub_mod_fini+0x8c08>
    8b24:	cset	w4, eq  // eq = none
    8b28:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8b2c:	ldr	x3, [x0]
    8b30:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8b34:	ldr	x2, [x0]
    8b38:	ldr	x1, [x26, #80]
    8b3c:	mov	x0, x23
    8b40:	bl	5730 <grub_mod_fini+0x53e0>
    8b44:	mov	x1, x0
    8b48:	str	x0, [sp, #112]
    8b4c:	ldr	w0, [x28]
    8b50:	cmp	w0, #0x0
    8b54:	ccmp	x1, #0x0, #0x0, ne  // ne = any
    8b58:	b.ne	7fbc <grub_mod_fini+0x7c6c>  // b.any
    8b5c:	str	xzr, [sp, #112]
    8b60:	b	8f58 <grub_mod_fini+0x8c08>
    8b64:	mov	x2, x27
    8b68:	mov	x1, x24
    8b6c:	mov	x0, x26
    8b70:	bl	2508 <grub_mod_fini+0x21b8>
    8b74:	mov	w21, w0
    8b78:	cmn	w0, #0x1
    8b7c:	b.eq	8bbc <grub_mod_fini+0x886c>  // b.none
    8b80:	cmn	w0, #0x2
    8b84:	b.eq	8b9c <grub_mod_fini+0x884c>  // b.none
    8b88:	ldrb	w0, [x24, #8]
    8b8c:	cmp	w0, #0x18
    8b90:	b.eq	8cb0 <grub_mod_fini+0x8960>  // b.none
    8b94:	cmp	w0, #0x1
    8b98:	b.eq	8bd8 <grub_mod_fini+0x8888>  // b.none
    8b9c:	tbnz	w27, #21, 8be8 <grub_mod_fini+0x8898>
    8ba0:	ldrb	w0, [x24, #8]
    8ba4:	cmp	w0, #0x2
    8ba8:	b.ne	8ca0 <grub_mod_fini+0x8950>  // b.any
    8bac:	mov	w0, #0x9                   	// #9
    8bb0:	str	w0, [x28]
    8bb4:	mov	x0, x25
    8bb8:	b	8d6c <grub_mod_fini+0x8a1c>
    8bbc:	ldrb	w0, [x24, #8]
    8bc0:	cmp	w0, #0x1
    8bc4:	b.ne	8c04 <grub_mod_fini+0x88b4>  // b.any
    8bc8:	ldrb	w0, [x24]
    8bcc:	mov	w21, #0x0                   	// #0
    8bd0:	cmp	w0, #0x2c
    8bd4:	b.ne	8c04 <grub_mod_fini+0x88b4>  // b.any
    8bd8:	ldrb	w0, [x24]
    8bdc:	cmp	w0, #0x2c
    8be0:	b.eq	8c14 <grub_mod_fini+0x88c4>  // b.none
    8be4:	tbz	w27, #21, 8ca0 <grub_mod_fini+0x8950>
    8be8:	str	w20, [x26, #56]
    8bec:	ldp	x0, x1, [sp, #96]
    8bf0:	stp	x0, x1, [x24]
    8bf4:	mov	w0, #0x1                   	// #1
    8bf8:	strb	w0, [x24, #8]
    8bfc:	ldr	x0, [sp, #112]
    8c00:	b	8d6c <grub_mod_fini+0x8a1c>
    8c04:	mov	w0, #0xa                   	// #10
    8c08:	str	w0, [x28]
    8c0c:	mov	x0, x25
    8c10:	b	8d6c <grub_mod_fini+0x8a1c>
    8c14:	mov	x2, x27
    8c18:	mov	x1, x24
    8c1c:	mov	x0, x26
    8c20:	bl	2508 <grub_mod_fini+0x21b8>
    8c24:	mov	w22, w0
    8c28:	cmn	w21, #0x2
    8c2c:	ccmn	w0, #0x2, #0x4, ne  // ne = any
    8c30:	b.eq	8b9c <grub_mod_fini+0x884c>  // b.none
    8c34:	cmp	w0, w21
    8c38:	ccmn	w0, #0x1, #0x4, lt  // lt = tstop
    8c3c:	b.ne	8cb8 <grub_mod_fini+0x8968>  // b.any
    8c40:	ldrb	w0, [x24, #8]
    8c44:	cmp	w0, #0x18
    8c48:	b.ne	8cb8 <grub_mod_fini+0x8968>  // b.any
    8c4c:	cmn	w22, #0x1
    8c50:	b.eq	8cc8 <grub_mod_fini+0x8978>  // b.none
    8c54:	mov	w0, #0x7fff                	// #32767
    8c58:	cmp	w22, w0
    8c5c:	cset	x0, gt
    8c60:	cbnz	x0, 8cd8 <grub_mod_fini+0x8988>
    8c64:	mov	x2, x27
    8c68:	mov	x1, x26
    8c6c:	mov	x0, x24
    8c70:	bl	2238 <grub_mod_fini+0x1ee8>
    8c74:	ldr	x3, [sp, #112]
    8c78:	cbz	x3, 8eec <grub_mod_fini+0x8b9c>
    8c7c:	orr	w0, w21, w22
    8c80:	cbnz	w0, 8ce8 <grub_mod_fini+0x8998>
    8c84:	mov	x2, x25
    8c88:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8c8c:	ldr	x1, [x0]
    8c90:	mov	x0, x3
    8c94:	bl	25d0 <grub_mod_fini+0x2280>
    8c98:	mov	x0, x25
    8c9c:	b	8d6c <grub_mod_fini+0x8a1c>
    8ca0:	mov	w0, #0xa                   	// #10
    8ca4:	str	w0, [x28]
    8ca8:	mov	x0, x25
    8cac:	b	8d6c <grub_mod_fini+0x8a1c>
    8cb0:	mov	w22, w21
    8cb4:	b	8c40 <grub_mod_fini+0x88f0>
    8cb8:	mov	w0, #0xa                   	// #10
    8cbc:	str	w0, [x28]
    8cc0:	mov	x0, x25
    8cc4:	b	8d6c <grub_mod_fini+0x8a1c>
    8cc8:	mov	w0, #0x7fff                	// #32767
    8ccc:	cmp	w21, w0
    8cd0:	cset	x0, gt
    8cd4:	b	8c60 <grub_mod_fini+0x8910>
    8cd8:	mov	w0, #0xf                   	// #15
    8cdc:	str	w0, [x28]
    8ce0:	mov	x0, x25
    8ce4:	b	8d6c <grub_mod_fini+0x8a1c>
    8ce8:	cmp	w21, #0x0
    8cec:	b.le	8ec8 <grub_mod_fini+0x8b78>
    8cf0:	cmp	w21, #0x1
    8cf4:	b.le	8eb4 <grub_mod_fini+0x8b64>
    8cf8:	ldr	x19, [sp, #112]
    8cfc:	str	x19, [sp, #96]
    8d00:	mov	w20, #0x2                   	// #2
    8d04:	mov	x1, x23
    8d08:	mov	x0, x19
    8d0c:	bl	2b90 <grub_mod_fini+0x2840>
    8d10:	mov	x19, x0
    8d14:	mov	w3, #0x10                  	// #16
    8d18:	mov	x2, x0
    8d1c:	ldr	x1, [sp, #96]
    8d20:	mov	x0, x23
    8d24:	bl	2c40 <grub_mod_fini+0x28f0>
    8d28:	str	x0, [sp, #96]
    8d2c:	cmp	x19, #0x0
    8d30:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    8d34:	b.eq	8d60 <grub_mod_fini+0x8a10>  // b.none
    8d38:	add	w20, w20, #0x1
    8d3c:	cmp	w21, w20
    8d40:	b.ge	8d04 <grub_mod_fini+0x89b4>  // b.tcont
    8d44:	cmp	w21, w22
    8d48:	b.eq	8fd4 <grub_mod_fini+0x8c84>  // b.none
    8d4c:	mov	x1, x23
    8d50:	mov	x0, x19
    8d54:	bl	2b90 <grub_mod_fini+0x2840>
    8d58:	mov	x19, x0
    8d5c:	cbnz	x0, 8e00 <grub_mod_fini+0x8ab0>
    8d60:	mov	w0, #0xc                   	// #12
    8d64:	str	w0, [x28]
    8d68:	mov	x0, x25
    8d6c:	ldr	w1, [x28]
    8d70:	cmp	w1, #0x0
    8d74:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    8d78:	b.eq	8f04 <grub_mod_fini+0x8bb4>  // b.none
    8d7c:	str	x0, [sp, #112]
    8d80:	tbz	w27, #24, 8d94 <grub_mod_fini+0x8a44>
    8d84:	ldrb	w0, [x24, #8]
    8d88:	cmp	w0, #0xb
    8d8c:	ccmp	w0, #0x17, #0x4, ne  // ne = any
    8d90:	b.eq	8f2c <grub_mod_fini+0x8bdc>  // b.none
    8d94:	ldrb	w1, [x24, #8]
    8d98:	cmp	w1, #0x12
    8d9c:	cset	w19, eq  // eq = none
    8da0:	sub	w0, w1, #0x12
    8da4:	and	w0, w0, #0xff
    8da8:	cmp	w1, #0xb
    8dac:	ccmp	w1, #0x17, #0x4, ne  // ne = any
    8db0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    8db4:	b.hi	8f74 <grub_mod_fini+0x8c24>  // b.pmore
    8db8:	ldr	w20, [x26, #56]
    8dbc:	ldp	x2, x3, [x24]
    8dc0:	stp	x2, x3, [sp, #96]
    8dc4:	cmp	w1, #0x17
    8dc8:	b.eq	8b64 <grub_mod_fini+0x8814>  // b.none
    8dcc:	mov	w21, w19
    8dd0:	mov	w22, #0xffffffff            	// #-1
    8dd4:	cmp	w1, #0x13
    8dd8:	cneg	w22, w22, eq  // eq = none
    8ddc:	mov	x2, x27
    8de0:	mov	x1, x26
    8de4:	mov	x0, x24
    8de8:	bl	2238 <grub_mod_fini+0x1ee8>
    8dec:	ldr	x0, [sp, #112]
    8df0:	cbz	x0, 8efc <grub_mod_fini+0x8bac>
    8df4:	cbnz	w19, 8eb4 <grub_mod_fini+0x8b64>
    8df8:	ldr	x19, [sp, #112]
    8dfc:	str	x25, [sp, #96]
    8e00:	ldrb	w0, [x19, #48]
    8e04:	cmp	w0, #0x11
    8e08:	b.eq	8ed4 <grub_mod_fini+0x8b84>  // b.none
    8e0c:	cmn	w22, #0x1
    8e10:	cset	w3, eq  // eq = none
    8e14:	add	w3, w3, #0xa
    8e18:	mov	x2, x25
    8e1c:	mov	x1, x19
    8e20:	mov	x0, x23
    8e24:	bl	2c40 <grub_mod_fini+0x28f0>
    8e28:	mov	x20, x0
    8e2c:	cbz	x0, 8d60 <grub_mod_fini+0x8a10>
    8e30:	add	w21, w21, #0x2
    8e34:	cmp	w21, w22
    8e38:	b.gt	8e94 <grub_mod_fini+0x8b44>
    8e3c:	mov	x1, x23
    8e40:	mov	x0, x19
    8e44:	bl	2b90 <grub_mod_fini+0x2840>
    8e48:	mov	x19, x0
    8e4c:	mov	w3, #0x10                  	// #16
    8e50:	mov	x2, x0
    8e54:	mov	x1, x20
    8e58:	mov	x0, x23
    8e5c:	bl	2c40 <grub_mod_fini+0x28f0>
    8e60:	mov	x1, x0
    8e64:	cmp	x19, #0x0
    8e68:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    8e6c:	b.eq	8d60 <grub_mod_fini+0x8a10>  // b.none
    8e70:	mov	w3, #0xa                   	// #10
    8e74:	mov	x2, x25
    8e78:	mov	x0, x23
    8e7c:	bl	2c40 <grub_mod_fini+0x28f0>
    8e80:	mov	x20, x0
    8e84:	cbz	x0, 8d60 <grub_mod_fini+0x8a10>
    8e88:	add	w21, w21, #0x1
    8e8c:	cmp	w22, w21
    8e90:	b.ge	8e3c <grub_mod_fini+0x8aec>  // b.tcont
    8e94:	ldr	x0, [sp, #96]
    8e98:	cbz	x0, 8fcc <grub_mod_fini+0x8c7c>
    8e9c:	mov	w3, #0x10                  	// #16
    8ea0:	mov	x2, x20
    8ea4:	ldr	x1, [sp, #96]
    8ea8:	mov	x0, x23
    8eac:	bl	2c40 <grub_mod_fini+0x28f0>
    8eb0:	b	8d6c <grub_mod_fini+0x8a1c>
    8eb4:	cmp	w21, w22
    8eb8:	b.eq	8ef4 <grub_mod_fini+0x8ba4>  // b.none
    8ebc:	ldr	x19, [sp, #112]
    8ec0:	str	x19, [sp, #96]
    8ec4:	b	8d4c <grub_mod_fini+0x89fc>
    8ec8:	ldr	x19, [sp, #112]
    8ecc:	str	x25, [sp, #96]
    8ed0:	b	8e00 <grub_mod_fini+0x8ab0>
    8ed4:	ldrsw	x2, [x19, #40]
    8ed8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8edc:	ldr	x1, [x0]
    8ee0:	mov	x0, x19
    8ee4:	bl	25d0 <grub_mod_fini+0x2280>
    8ee8:	b	8e0c <grub_mod_fini+0x8abc>
    8eec:	ldr	x0, [sp, #112]
    8ef0:	b	8d6c <grub_mod_fini+0x8a1c>
    8ef4:	ldr	x0, [sp, #112]
    8ef8:	b	8d6c <grub_mod_fini+0x8a1c>
    8efc:	ldr	x0, [sp, #112]
    8f00:	b	8d6c <grub_mod_fini+0x8a1c>
    8f04:	ldr	x3, [sp, #112]
    8f08:	cbz	x3, 8ff0 <grub_mod_fini+0x8ca0>
    8f0c:	mov	x2, #0x0                   	// #0
    8f10:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8f14:	ldr	x1, [x0]
    8f18:	mov	x0, x3
    8f1c:	bl	25d0 <grub_mod_fini+0x2280>
    8f20:	str	xzr, [sp, #112]
    8f24:	ldp	x21, x22, [sp, #32]
    8f28:	b	8f58 <grub_mod_fini+0x8c08>
    8f2c:	ldr	x3, [sp, #112]
    8f30:	cbz	x3, 8f48 <grub_mod_fini+0x8bf8>
    8f34:	mov	x2, #0x0                   	// #0
    8f38:	adrp	x0, 0 <grub_mod_init-0x2b0>
    8f3c:	ldr	x1, [x0]
    8f40:	mov	x0, x3
    8f44:	bl	25d0 <grub_mod_fini+0x2280>
    8f48:	mov	w0, #0xd                   	// #13
    8f4c:	str	w0, [x28]
    8f50:	str	xzr, [sp, #112]
    8f54:	ldp	x21, x22, [sp, #32]
    8f58:	ldr	x0, [sp, #112]
    8f5c:	ldp	x19, x20, [sp, #16]
    8f60:	ldp	x23, x24, [sp, #48]
    8f64:	ldp	x25, x26, [sp, #64]
    8f68:	ldp	x27, x28, [sp, #80]
    8f6c:	ldp	x29, x30, [sp], #288
    8f70:	ret
    8f74:	ldp	x21, x22, [sp, #32]
    8f78:	b	8f58 <grub_mod_fini+0x8c08>
    8f7c:	str	xzr, [sp, #112]
    8f80:	ldp	x21, x22, [sp, #32]
    8f84:	b	8f58 <grub_mod_fini+0x8c08>
    8f88:	mov	w0, #0x3                   	// #3
    8f8c:	str	w0, [x28]
    8f90:	b	8238 <grub_mod_fini+0x7ee8>
    8f94:	mov	w0, #0x3                   	// #3
    8f98:	str	w0, [x28]
    8f9c:	b	8238 <grub_mod_fini+0x7ee8>
    8fa0:	mov	w0, #0xb                   	// #11
    8fa4:	b	8fac <grub_mod_fini+0x8c5c>
    8fa8:	mov	w0, #0xb                   	// #11
    8fac:	str	w0, [x28]
    8fb0:	b	8238 <grub_mod_fini+0x7ee8>
    8fb4:	mov	w0, #0x3                   	// #3
    8fb8:	b	8fac <grub_mod_fini+0x8c5c>
    8fbc:	mov	w0, #0xb                   	// #11
    8fc0:	b	8fac <grub_mod_fini+0x8c5c>
    8fc4:	str	wzr, [x28]
    8fc8:	b	85b4 <grub_mod_fini+0x8264>
    8fcc:	str	x20, [sp, #112]
    8fd0:	b	8d80 <grub_mod_fini+0x8a30>
    8fd4:	ldr	x0, [sp, #96]
    8fd8:	str	x0, [sp, #112]
    8fdc:	b	8d80 <grub_mod_fini+0x8a30>
    8fe0:	ldr	w22, [sp, #184]
    8fe4:	ldr	x0, [sp, #120]
    8fe8:	cbnz	x0, 8394 <grub_mod_fini+0x8044>
    8fec:	b	8490 <grub_mod_fini+0x8140>
    8ff0:	ldp	x21, x22, [sp, #32]
    8ff4:	b	8f58 <grub_mod_fini+0x8c08>
	...
    9038:	stp	x29, x30, [sp, #-96]!
    903c:	mov	x29, sp
    9040:	stp	x19, x20, [sp, #16]
    9044:	stp	x21, x22, [sp, #32]
    9048:	stp	x23, x24, [sp, #48]
    904c:	stp	x25, x26, [sp, #64]
    9050:	stp	x27, x28, [sp, #80]
    9054:	mov	x26, x0
    9058:	mov	x25, x1
    905c:	mov	x22, x2
    9060:	mov	x27, x3
    9064:	mov	w23, w4
    9068:	mov	x21, x5
    906c:	ldr	x28, [x1]
    9070:	bl	7d38 <grub_mod_fini+0x79e8>
    9074:	mov	x20, x0
    9078:	ldr	w0, [x21]
    907c:	cmp	w0, #0x0
    9080:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    9084:	b.eq	919c <grub_mod_fini+0x8e4c>  // b.none
    9088:	ldrb	w1, [x22, #8]
    908c:	and	w0, w1, #0xfffffff7
    9090:	and	w0, w0, #0xff
    9094:	cmp	w0, #0x2
    9098:	b.ne	90f4 <grub_mod_fini+0x8da4>  // b.any
    909c:	b	917c <grub_mod_fini+0x8e2c>
    90a0:	cbz	x20, 917c <grub_mod_fini+0x8e2c>
    90a4:	mov	x2, #0x0                   	// #0
    90a8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    90ac:	ldr	x1, [x0]
    90b0:	mov	x0, x20
    90b4:	bl	25d0 <grub_mod_fini+0x2280>
    90b8:	mov	x20, #0x0                   	// #0
    90bc:	b	917c <grub_mod_fini+0x8e2c>
    90c0:	mov	w3, #0x10                  	// #16
    90c4:	mov	x2, x19
    90c8:	mov	x1, x20
    90cc:	mov	x0, x28
    90d0:	bl	2c40 <grub_mod_fini+0x28f0>
    90d4:	mov	x24, x0
    90d8:	cbz	x0, 9148 <grub_mod_fini+0x8df8>
    90dc:	mov	x20, x0
    90e0:	ldrb	w1, [x22, #8]
    90e4:	and	w0, w1, #0xfffffff7
    90e8:	and	w0, w0, #0xff
    90ec:	cmp	w0, #0x2
    90f0:	b.eq	917c <grub_mod_fini+0x8e2c>  // b.none
    90f4:	cmp	w23, #0x0
    90f8:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    90fc:	b.eq	917c <grub_mod_fini+0x8e2c>  // b.none
    9100:	mov	x5, x21
    9104:	mov	w4, w23
    9108:	mov	x3, x27
    910c:	mov	x2, x22
    9110:	mov	x1, x25
    9114:	mov	x0, x26
    9118:	bl	7d38 <grub_mod_fini+0x79e8>
    911c:	mov	x19, x0
    9120:	ldr	w0, [x21]
    9124:	cmp	w0, #0x0
    9128:	ccmp	x19, #0x0, #0x0, ne  // ne = any
    912c:	b.eq	90a0 <grub_mod_fini+0x8d50>  // b.none
    9130:	cmp	x20, #0x0
    9134:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    9138:	b.ne	90c0 <grub_mod_fini+0x8d70>  // b.any
    913c:	cmp	x20, #0x0
    9140:	csel	x20, x20, x19, ne  // ne = any
    9144:	b	90e0 <grub_mod_fini+0x8d90>
    9148:	adrp	x0, 0 <grub_mod_init-0x2b0>
    914c:	ldr	x22, [x0]
    9150:	mov	x2, #0x0                   	// #0
    9154:	mov	x1, x22
    9158:	mov	x0, x19
    915c:	bl	25d0 <grub_mod_fini+0x2280>
    9160:	mov	x2, #0x0                   	// #0
    9164:	mov	x1, x22
    9168:	mov	x0, x20
    916c:	bl	25d0 <grub_mod_fini+0x2280>
    9170:	mov	w0, #0xc                   	// #12
    9174:	str	w0, [x21]
    9178:	mov	x20, x24
    917c:	mov	x0, x20
    9180:	ldp	x19, x20, [sp, #16]
    9184:	ldp	x21, x22, [sp, #32]
    9188:	ldp	x23, x24, [sp, #48]
    918c:	ldp	x25, x26, [sp, #64]
    9190:	ldp	x27, x28, [sp, #80]
    9194:	ldp	x29, x30, [sp], #96
    9198:	ret
    919c:	mov	x20, #0x0                   	// #0
    91a0:	b	917c <grub_mod_fini+0x8e2c>
    91a4:	nop
	...
    91b0:	stp	x29, x30, [sp, #-112]!
    91b4:	mov	x29, sp
    91b8:	stp	x19, x20, [sp, #16]
    91bc:	stp	x21, x22, [sp, #32]
    91c0:	stp	x23, x24, [sp, #48]
    91c4:	stp	x25, x26, [sp, #64]
    91c8:	stp	x27, x28, [sp, #80]
    91cc:	mov	x22, x0
    91d0:	str	x1, [sp, #96]
    91d4:	mov	x20, x2
    91d8:	mov	x25, x3
    91dc:	str	x3, [sp, #104]
    91e0:	mov	w24, w4
    91e4:	mov	x23, x5
    91e8:	ldr	x21, [x1]
    91ec:	ldr	x28, [x21, #152]
    91f0:	bl	9038 <grub_mod_fini+0x8ce8>
    91f4:	mov	x19, x0
    91f8:	ldr	w0, [x23]
    91fc:	cmp	w0, #0x0
    9200:	ccmp	x19, #0x0, #0x0, ne  // ne = any
    9204:	b.eq	9304 <grub_mod_fini+0x8fb4>  // b.none
    9208:	orr	x25, x25, #0x800000
    920c:	mov	w26, #0xa                   	// #10
    9210:	b	9250 <grub_mod_fini+0x8f00>
    9214:	cbz	x19, 92e4 <grub_mod_fini+0x8f94>
    9218:	mov	x2, #0x0                   	// #0
    921c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    9220:	ldr	x1, [x0]
    9224:	mov	x0, x19
    9228:	bl	25d0 <grub_mod_fini+0x2280>
    922c:	mov	x19, #0x0                   	// #0
    9230:	b	92e4 <grub_mod_fini+0x8f94>
    9234:	mov	x2, #0x0                   	// #0
    9238:	mov	w3, w26
    923c:	mov	x1, x19
    9240:	mov	x0, x21
    9244:	bl	2c40 <grub_mod_fini+0x28f0>
    9248:	mov	x19, x0
    924c:	cbz	x0, 92dc <grub_mod_fini+0x8f8c>
    9250:	ldrb	w0, [x20, #8]
    9254:	cmp	w0, #0xa
    9258:	b.ne	92e4 <grub_mod_fini+0x8f94>  // b.any
    925c:	mov	x2, x25
    9260:	mov	x1, x22
    9264:	mov	x0, x20
    9268:	bl	2238 <grub_mod_fini+0x1ee8>
    926c:	ldrb	w1, [x20, #8]
    9270:	and	w0, w1, #0xfffffff7
    9274:	and	w0, w0, #0xff
    9278:	cmp	w0, #0x2
    927c:	b.eq	9234 <grub_mod_fini+0x8ee4>  // b.none
    9280:	cmp	w24, #0x0
    9284:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    9288:	b.eq	92d4 <grub_mod_fini+0x8f84>  // b.none
    928c:	ldr	x27, [x21, #152]
    9290:	str	x28, [x21, #152]
    9294:	mov	x5, x23
    9298:	mov	w4, w24
    929c:	ldr	x3, [sp, #104]
    92a0:	mov	x2, x20
    92a4:	ldr	x1, [sp, #96]
    92a8:	mov	x0, x22
    92ac:	bl	9038 <grub_mod_fini+0x8ce8>
    92b0:	mov	x2, x0
    92b4:	ldr	w0, [x23]
    92b8:	cmp	w0, #0x0
    92bc:	ccmp	x2, #0x0, #0x0, ne  // ne = any
    92c0:	b.eq	9214 <grub_mod_fini+0x8ec4>  // b.none
    92c4:	ldr	x0, [x21, #152]
    92c8:	orr	x27, x0, x27
    92cc:	str	x27, [x21, #152]
    92d0:	b	9238 <grub_mod_fini+0x8ee8>
    92d4:	mov	x2, #0x0                   	// #0
    92d8:	b	9238 <grub_mod_fini+0x8ee8>
    92dc:	mov	w0, #0xc                   	// #12
    92e0:	str	w0, [x23]
    92e4:	mov	x0, x19
    92e8:	ldp	x19, x20, [sp, #16]
    92ec:	ldp	x21, x22, [sp, #32]
    92f0:	ldp	x23, x24, [sp, #48]
    92f4:	ldp	x25, x26, [sp, #64]
    92f8:	ldp	x27, x28, [sp, #80]
    92fc:	ldp	x29, x30, [sp], #112
    9300:	ret
    9304:	mov	x19, #0x0                   	// #0
    9308:	b	92e4 <grub_mod_fini+0x8f94>
    930c:	nop
	...
    9318:	stp	x29, x30, [sp, #-80]!
    931c:	mov	x29, sp
    9320:	stp	x19, x20, [sp, #16]
    9324:	stp	x23, x24, [sp, #48]
    9328:	mov	x24, x0
    932c:	mov	x23, x1
    9330:	ldr	w1, [x2, #4]
    9334:	cbz	w1, 9398 <grub_mod_fini+0x9048>
    9338:	stp	x21, x22, [sp, #32]
    933c:	stp	x25, x26, [sp, #64]
    9340:	mov	x22, x2
    9344:	mov	w21, w1
    9348:	cmp	w1, #0x0
    934c:	b.le	936c <grub_mod_fini+0x901c>
    9350:	ldr	x2, [x2, #8]
    9354:	mov	x3, #0x0                   	// #0
    9358:	ldr	w0, [x2, x3, lsl #2]
    935c:	add	w21, w21, w0
    9360:	add	x3, x3, #0x1
    9364:	cmp	w1, w3
    9368:	b.gt	9358 <grub_mod_fini+0x9008>
    936c:	ldr	w0, [x23, #132]
    9370:	and	w0, w21, w0
    9374:	lsl	x0, x0, #4
    9378:	ldr	x1, [x23, #64]
    937c:	add	x2, x1, x0
    9380:	ldr	w25, [x1, x0]
    9384:	cmp	w25, #0x0
    9388:	b.le	93e0 <grub_mod_fini+0x9090>
    938c:	ldr	x26, [x2, #8]
    9390:	mov	x20, #0x0                   	// #0
    9394:	b	93b0 <grub_mod_fini+0x9060>
    9398:	str	wzr, [x0]
    939c:	mov	x19, #0x0                   	// #0
    93a0:	b	951c <grub_mod_fini+0x91cc>
    93a4:	add	x20, x20, #0x1
    93a8:	cmp	w25, w20
    93ac:	b.le	93e0 <grub_mod_fini+0x9090>
    93b0:	ldr	x19, [x26, x20, lsl #3]
    93b4:	ldr	w0, [x19]
    93b8:	cmp	w21, w0
    93bc:	b.ne	93a4 <grub_mod_fini+0x9054>  // b.any
    93c0:	mov	x1, x22
    93c4:	add	x0, x19, #0x8
    93c8:	bl	127c <grub_mod_fini+0xf2c>
    93cc:	and	w0, w0, #0xff
    93d0:	cbz	w0, 93a4 <grub_mod_fini+0x9054>
    93d4:	ldp	x21, x22, [sp, #32]
    93d8:	ldp	x25, x26, [sp, #64]
    93dc:	b	951c <grub_mod_fini+0x91cc>
    93e0:	mov	x0, #0x58                  	// #88
    93e4:	bl	0 <grub_zalloc>
    93e8:	mov	x19, x0
    93ec:	cbz	x0, 9424 <grub_mod_fini+0x90d4>
    93f0:	add	x20, x0, #0x8
    93f4:	mov	x1, x22
    93f8:	mov	x0, x20
    93fc:	bl	3538 <grub_mod_fini+0x31e8>
    9400:	cbnz	w0, 941c <grub_mod_fini+0x90cc>
    9404:	str	x20, [x19, #56]
    9408:	ldr	w0, [x22, #4]
    940c:	cmp	w0, #0x0
    9410:	b.le	9500 <grub_mod_fini+0x91b0>
    9414:	mov	x0, #0x0                   	// #0
    9418:	b	9490 <grub_mod_fini+0x9140>
    941c:	mov	x0, x19
    9420:	bl	0 <grub_free>
    9424:	mov	w0, #0xc                   	// #12
    9428:	str	w0, [x24]
    942c:	mov	x19, #0x0                   	// #0
    9430:	ldp	x21, x22, [sp, #32]
    9434:	ldp	x25, x26, [sp, #64]
    9438:	b	951c <grub_mod_fini+0x91cc>
    943c:	ldr	w1, [x3, #8]
    9440:	tst	w1, #0x3ff00
    9444:	b.eq	9480 <grub_mod_fini+0x9130>  // b.none
    9448:	ldrb	w1, [x19, #80]
    944c:	ubfx	x2, x1, #5, #1
    9450:	ldrb	w4, [x3, #10]
    9454:	ubfx	x4, x4, #4, #1
    9458:	orr	w2, w2, w4
    945c:	bfi	w1, w2, #5, #1
    9460:	strb	w1, [x19, #80]
    9464:	ldr	w1, [x3, #8]
    9468:	tst	w1, #0x3ff00
    946c:	b.eq	9480 <grub_mod_fini+0x9130>  // b.none
    9470:	b	94f0 <grub_mod_fini+0x91a0>
    9474:	and	x1, x1, #0xff
    9478:	orr	w1, w1, #0x10
    947c:	strb	w1, [x19, #80]
    9480:	add	x0, x0, #0x1
    9484:	ldr	w1, [x22, #4]
    9488:	cmp	w1, w0
    948c:	b.le	9500 <grub_mod_fini+0x91b0>
    9490:	ldr	x1, [x22, #8]
    9494:	ldrsw	x3, [x1, x0, lsl #2]
    9498:	ldr	x1, [x23]
    949c:	add	x3, x1, x3, lsl #4
    94a0:	ldrb	w2, [x3, #8]
    94a4:	cmp	w2, #0x1
    94a8:	b.eq	943c <grub_mod_fini+0x90ec>  // b.none
    94ac:	ldrb	w1, [x19, #80]
    94b0:	ubfx	x4, x1, #5, #1
    94b4:	ldrb	w5, [x3, #10]
    94b8:	ubfx	x5, x5, #4, #1
    94bc:	orr	w4, w4, w5
    94c0:	bfi	w1, w4, #5, #1
    94c4:	strb	w1, [x19, #80]
    94c8:	cmp	w2, #0x2
    94cc:	b.eq	9474 <grub_mod_fini+0x9124>  // b.none
    94d0:	cmp	w2, #0x4
    94d4:	b.ne	94e8 <grub_mod_fini+0x9198>  // b.any
    94d8:	ldrb	w1, [x19, #80]
    94dc:	orr	w1, w1, #0x40
    94e0:	strb	w1, [x19, #80]
    94e4:	b	9480 <grub_mod_fini+0x9130>
    94e8:	cmp	w2, #0xc
    94ec:	b.ne	9464 <grub_mod_fini+0x9114>  // b.any
    94f0:	ldrb	w1, [x19, #80]
    94f4:	orr	w1, w1, #0xffffff80
    94f8:	strb	w1, [x19, #80]
    94fc:	b	9480 <grub_mod_fini+0x9130>
    9500:	mov	w2, w21
    9504:	mov	x1, x19
    9508:	mov	x0, x23
    950c:	bl	3124 <grub_mod_fini+0x2dd4>
    9510:	cbnz	w0, 9530 <grub_mod_fini+0x91e0>
    9514:	ldp	x21, x22, [sp, #32]
    9518:	ldp	x25, x26, [sp, #64]
    951c:	mov	x0, x19
    9520:	ldp	x19, x20, [sp, #16]
    9524:	ldp	x23, x24, [sp, #48]
    9528:	ldp	x29, x30, [sp], #80
    952c:	ret
    9530:	mov	x0, x19
    9534:	bl	4228 <grub_mod_fini+0x3ed8>
    9538:	b	9424 <grub_mod_fini+0x90d4>
    953c:	stp	x29, x30, [sp, #-144]!
    9540:	mov	x29, sp
    9544:	stp	x21, x22, [sp, #32]
    9548:	stp	x23, x24, [sp, #48]
    954c:	stp	x27, x28, [sp, #80]
    9550:	mov	x24, x0
    9554:	mov	x23, x1
    9558:	mov	w22, w2
    955c:	str	w3, [sp, #108]
    9560:	mov	w28, w4
    9564:	mov	w1, w2
    9568:	bl	18f0 <grub_mod_fini+0x15a0>
    956c:	cmn	w0, #0x1
    9570:	b.eq	9754 <grub_mod_fini+0x9404>  // b.none
    9574:	stp	x19, x20, [sp, #16]
    9578:	stp	x25, x26, [sp, #64]
    957c:	ldr	x25, [x24, #112]
    9580:	sbfiz	x27, x0, #2, #32
    9584:	add	x0, x27, w0, sxtw
    9588:	lsl	x27, x0, #2
    958c:	b	9600 <grub_mod_fini+0x92b0>
    9590:	ldr	x0, [x25, #40]
    9594:	add	x21, x0, w21, sxtw #4
    9598:	ldr	x0, [x21, #8]
    959c:	ldr	w19, [x0]
    95a0:	mov	w1, w19
    95a4:	mov	x0, x23
    95a8:	bl	12e8 <grub_mod_fini+0xf98>
    95ac:	cbnz	w0, 9664 <grub_mod_fini+0x9314>
    95b0:	mov	w1, w19
    95b4:	add	x0, sp, #0x78
    95b8:	bl	2e40 <grub_mod_fini+0x2af0>
    95bc:	str	w0, [sp, #140]
    95c0:	mov	w3, w28
    95c4:	ldr	w2, [sp, #108]
    95c8:	add	x1, sp, #0x78
    95cc:	mov	x0, x25
    95d0:	bl	4770 <grub_mod_fini+0x4420>
    95d4:	mov	w19, w0
    95d8:	add	x1, sp, #0x78
    95dc:	mov	x0, x23
    95e0:	bl	3378 <grub_mod_fini+0x3028>
    95e4:	mov	w20, w0
    95e8:	ldr	x0, [sp, #128]
    95ec:	bl	0 <grub_free>
    95f0:	ldr	w0, [sp, #140]
    95f4:	orr	w1, w19, w20
    95f8:	orr	w1, w1, w0
    95fc:	cbnz	w1, 960c <grub_mod_fini+0x92bc>
    9600:	ldr	x20, [x24, #160]
    9604:	add	x20, x20, x27
    9608:	b	9670 <grub_mod_fini+0x9320>
    960c:	cbnz	w0, 975c <grub_mod_fini+0x940c>
    9610:	cmp	w19, #0x0
    9614:	csel	w0, w19, w20, ne  // ne = any
    9618:	ldp	x19, x20, [sp, #16]
    961c:	ldp	x25, x26, [sp, #64]
    9620:	b	9740 <grub_mod_fini+0x93f0>
    9624:	mov	w1, w26
    9628:	add	x0, sp, #0x78
    962c:	bl	2e40 <grub_mod_fini+0x2af0>
    9630:	str	w0, [sp, #140]
    9634:	cbnz	w0, 9768 <grub_mod_fini+0x9418>
    9638:	ldr	x21, [x24, #136]
    963c:	add	x2, sp, #0x78
    9640:	mov	x1, x25
    9644:	add	x0, sp, #0x8c
    9648:	bl	9318 <grub_mod_fini+0x8fc8>
    964c:	str	x0, [x21, x19, lsl #3]
    9650:	ldr	x0, [sp, #128]
    9654:	bl	0 <grub_free>
    9658:	ldr	x0, [x24, #136]
    965c:	ldr	x0, [x0, x19, lsl #3]
    9660:	cbz	x0, 9724 <grub_mod_fini+0x93d4>
    9664:	add	x20, x20, #0x14
    9668:	ldurb	w0, [x20, #-4]
    966c:	cbz	w0, 9738 <grub_mod_fini+0x93e8>
    9670:	ldr	w21, [x20]
    9674:	mov	w1, w21
    9678:	mov	x0, x23
    967c:	bl	12e8 <grub_mod_fini+0xf98>
    9680:	cbz	w0, 9664 <grub_mod_fini+0x9314>
    9684:	ldr	w19, [x20, #12]
    9688:	add	w19, w22, w19
    968c:	ldr	w0, [x20, #8]
    9690:	sub	w19, w19, w0
    9694:	cmp	w22, w19
    9698:	b.eq	9590 <grub_mod_fini+0x9240>  // b.none
    969c:	ldr	x0, [x25, #24]
    96a0:	ldr	w26, [x0, w21, sxtw #2]
    96a4:	sxtw	x19, w19
    96a8:	ldr	x0, [x24, #136]
    96ac:	ldr	x21, [x0, x19, lsl #3]
    96b0:	cbz	x21, 9624 <grub_mod_fini+0x92d4>
    96b4:	add	x21, x21, #0x8
    96b8:	mov	w1, w26
    96bc:	mov	x0, x21
    96c0:	bl	12e8 <grub_mod_fini+0xf98>
    96c4:	cbnz	w0, 9664 <grub_mod_fini+0x9314>
    96c8:	mov	x1, x21
    96cc:	add	x0, sp, #0x78
    96d0:	bl	3538 <grub_mod_fini+0x31e8>
    96d4:	str	w0, [sp, #140]
    96d8:	mov	w1, w26
    96dc:	add	x0, sp, #0x78
    96e0:	bl	2e94 <grub_mod_fini+0x2b44>
    96e4:	and	w0, w0, #0xff
    96e8:	ldr	w1, [sp, #140]
    96ec:	cmp	w1, #0x0
    96f0:	cset	w1, ne  // ne = any
    96f4:	eor	w0, w0, #0x1
    96f8:	orr	w0, w1, w0
    96fc:	cbz	w0, 9638 <grub_mod_fini+0x92e8>
    9700:	ldr	x0, [sp, #128]
    9704:	bl	0 <grub_free>
    9708:	ldr	w0, [sp, #140]
    970c:	cmp	w0, #0x0
    9710:	mov	w1, #0xc                   	// #12
    9714:	csel	w0, w0, w1, ne  // ne = any
    9718:	ldp	x19, x20, [sp, #16]
    971c:	ldp	x25, x26, [sp, #64]
    9720:	b	9740 <grub_mod_fini+0x93f0>
    9724:	ldr	w0, [sp, #140]
    9728:	cbz	w0, 9664 <grub_mod_fini+0x9314>
    972c:	ldp	x19, x20, [sp, #16]
    9730:	ldp	x25, x26, [sp, #64]
    9734:	b	9740 <grub_mod_fini+0x93f0>
    9738:	ldp	x19, x20, [sp, #16]
    973c:	ldp	x25, x26, [sp, #64]
    9740:	ldp	x21, x22, [sp, #32]
    9744:	ldp	x23, x24, [sp, #48]
    9748:	ldp	x27, x28, [sp, #80]
    974c:	ldp	x29, x30, [sp], #144
    9750:	ret
    9754:	mov	w0, #0x0                   	// #0
    9758:	b	9740 <grub_mod_fini+0x93f0>
    975c:	ldp	x19, x20, [sp, #16]
    9760:	ldp	x25, x26, [sp, #64]
    9764:	b	9740 <grub_mod_fini+0x93f0>
    9768:	ldp	x19, x20, [sp, #16]
    976c:	ldp	x25, x26, [sp, #64]
    9770:	b	9740 <grub_mod_fini+0x93f0>
    9774:	cmp	w3, #0x0
    9778:	b.le	982c <grub_mod_fini+0x94dc>
    977c:	stp	x29, x30, [sp, #-96]!
    9780:	mov	x29, sp
    9784:	stp	x19, x20, [sp, #16]
    9788:	stp	x21, x22, [sp, #32]
    978c:	str	x23, [sp, #48]
    9790:	mov	x23, x0
    9794:	mov	x21, x1
    9798:	mov	x22, x2
    979c:	sub	w20, w3, #0x1
    97a0:	add	x20, x20, #0x1
    97a4:	lsl	x20, x20, #3
    97a8:	mov	x19, #0x0                   	// #0
    97ac:	b	97c4 <grub_mod_fini+0x9474>
    97b0:	ldr	x0, [x22, x19]
    97b4:	str	x0, [x21, x19]
    97b8:	add	x19, x19, #0x8
    97bc:	cmp	x19, x20
    97c0:	b.eq	9814 <grub_mod_fini+0x94c4>  // b.none
    97c4:	ldr	x1, [x21, x19]
    97c8:	cbz	x1, 97b0 <grub_mod_fini+0x9460>
    97cc:	ldr	x2, [x22, x19]
    97d0:	cbz	x2, 97b8 <grub_mod_fini+0x9468>
    97d4:	add	x2, x2, #0x8
    97d8:	add	x1, x1, #0x8
    97dc:	add	x0, sp, #0x48
    97e0:	bl	35b8 <grub_mod_fini+0x3268>
    97e4:	str	w0, [sp, #92]
    97e8:	cbnz	w0, 9818 <grub_mod_fini+0x94c8>
    97ec:	add	x2, sp, #0x48
    97f0:	mov	x1, x23
    97f4:	add	x0, sp, #0x5c
    97f8:	bl	9318 <grub_mod_fini+0x8fc8>
    97fc:	str	x0, [x21, x19]
    9800:	ldr	x0, [sp, #80]
    9804:	bl	0 <grub_free>
    9808:	ldr	w0, [sp, #92]
    980c:	cbz	w0, 97b8 <grub_mod_fini+0x9468>
    9810:	b	9818 <grub_mod_fini+0x94c8>
    9814:	mov	w0, #0x0                   	// #0
    9818:	ldp	x19, x20, [sp, #16]
    981c:	ldp	x21, x22, [sp, #32]
    9820:	ldr	x23, [sp, #48]
    9824:	ldp	x29, x30, [sp], #96
    9828:	ret
    982c:	mov	w0, #0x0                   	// #0
    9830:	ret
    9834:	stp	x29, x30, [sp, #-208]!
    9838:	mov	x29, sp
    983c:	stp	x19, x20, [sp, #16]
    9840:	stp	x21, x22, [sp, #32]
    9844:	stp	x23, x24, [sp, #48]
    9848:	mov	x19, x0
    984c:	mov	x7, x1
    9850:	str	x1, [sp, #136]
    9854:	mov	w20, w2
    9858:	mov	w23, w3
    985c:	str	w4, [sp, #156]
    9860:	str	w5, [sp, #124]
    9864:	str	w6, [sp, #132]
    9868:	ldr	x0, [x0, #112]
    986c:	str	x0, [sp, #112]
    9870:	str	wzr, [sp, #204]
    9874:	ldr	x1, [x0]
    9878:	sbfiz	x0, x2, #4, #32
    987c:	ldr	w0, [x1, x0]
    9880:	str	w0, [sp, #128]
    9884:	ldr	w22, [x19, #168]
    9888:	add	w22, w5, w22
    988c:	ldr	w21, [x7, #4]
    9890:	cmp	w22, w21
    9894:	b.ge	9980 <grub_mod_fini+0x9630>  // b.tcont
    9898:	ldr	x0, [sp, #136]
    989c:	ldr	w22, [x0]
    98a0:	cbz	w22, 9dac <grub_mod_fini+0x9a5c>
    98a4:	ldr	x1, [x19, #136]
    98a8:	str	x1, [sp, #144]
    98ac:	ldr	w1, [x19, #56]
    98b0:	str	w1, [sp, #152]
    98b4:	ldr	x21, [x0, #8]
    98b8:	str	x21, [x19, #136]
    98bc:	str	w22, [x19, #56]
    98c0:	str	x19, [sp, #104]
    98c4:	ldr	w2, [x19, #120]
    98c8:	sub	w1, w22, #0x1
    98cc:	mov	x0, x19
    98d0:	bl	26b8 <grub_mod_fini+0x2368>
    98d4:	mov	w24, w0
    98d8:	cmp	w22, w23
    98dc:	b.eq	9de4 <grub_mod_fini+0x9a94>  // b.none
    98e0:	ldr	x21, [x21, w22, sxtw #3]
    98e4:	cbz	x21, 9e28 <grub_mod_fini+0x9ad8>
    98e8:	ldrb	w0, [x21, #80]
    98ec:	tbnz	w0, #6, 99d4 <grub_mod_fini+0x9684>
    98f0:	mov	x2, #0x10                  	// #16
    98f4:	mov	w1, #0x0                   	// #0
    98f8:	add	x0, sp, #0xb8
    98fc:	bl	0 <grub_memset>
    9900:	ldrb	w0, [x21, #80]
    9904:	tbz	w0, #6, 9954 <grub_mod_fini+0x9604>
    9908:	ldr	w0, [sp, #188]
    990c:	cbz	w0, 9930 <grub_mod_fini+0x95e0>
    9910:	ldr	w4, [sp, #132]
    9914:	ldr	w3, [sp, #128]
    9918:	mov	w2, w22
    991c:	add	x1, sp, #0xb8
    9920:	mov	x0, x19
    9924:	bl	953c <grub_mod_fini+0x91ec>
    9928:	str	w0, [sp, #204]
    992c:	cbnz	w0, 99ec <grub_mod_fini+0x969c>
    9930:	mov	w3, w24
    9934:	add	x2, sp, #0xb8
    9938:	ldr	x1, [sp, #112]
    993c:	add	x0, sp, #0xcc
    9940:	bl	4294 <grub_mod_fini+0x3f44>
    9944:	mov	x21, x0
    9948:	cbz	x0, 99fc <grub_mod_fini+0x96ac>
    994c:	ldr	x0, [x19, #136]
    9950:	str	x21, [x0, w22, sxtw #3]
    9954:	ldr	w0, [sp, #124]
    9958:	cmp	w22, w0
    995c:	b.ge	9d0c <grub_mod_fini+0x99bc>  // b.tcont
    9960:	stp	x25, x26, [sp, #64]
    9964:	stp	x27, x28, [sp, #80]
    9968:	mov	w25, w22
    996c:	sxtw	x27, w22
    9970:	add	x27, x27, #0x1
    9974:	lsl	x27, x27, #3
    9978:	str	wzr, [sp, #120]
    997c:	b	9bd0 <grub_mod_fini+0x9880>
    9980:	add	w22, w22, #0x1
    9984:	mov	w0, #0x7fffffff            	// #2147483647
    9988:	sub	w0, w0, w21
    998c:	cmp	w0, w22
    9990:	b.lt	9d64 <grub_mod_fini+0x9a14>  // b.tstop
    9994:	adds	w24, w21, w22
    9998:	b.mi	9d6c <grub_mod_fini+0x9a1c>  // b.first
    999c:	stp	x25, x26, [sp, #64]
    99a0:	sbfiz	x1, x24, #3, #32
    99a4:	mov	x25, x7
    99a8:	ldr	x0, [x7, #8]
    99ac:	bl	0 <grub_realloc>
    99b0:	cbz	x0, 9d74 <grub_mod_fini+0x9a24>
    99b4:	str	x0, [x25, #8]
    99b8:	str	w24, [x25, #4]
    99bc:	sbfiz	x2, x22, #3, #32
    99c0:	mov	w1, #0x0                   	// #0
    99c4:	add	x0, x0, w21, sxtw #3
    99c8:	bl	0 <grub_memset>
    99cc:	ldp	x25, x26, [sp, #64]
    99d0:	b	9898 <grub_mod_fini+0x9548>
    99d4:	add	x1, x21, #0x8
    99d8:	add	x0, sp, #0xb8
    99dc:	bl	3538 <grub_mod_fini+0x31e8>
    99e0:	str	w0, [sp, #204]
    99e4:	cbz	w0, 9900 <grub_mod_fini+0x95b0>
    99e8:	b	9a28 <grub_mod_fini+0x96d8>
    99ec:	ldr	x0, [sp, #192]
    99f0:	bl	0 <grub_free>
    99f4:	ldr	w0, [sp, #204]
    99f8:	b	9a28 <grub_mod_fini+0x96d8>
    99fc:	ldr	w0, [sp, #204]
    9a00:	cbz	w0, 994c <grub_mod_fini+0x95fc>
    9a04:	ldr	x0, [sp, #192]
    9a08:	bl	0 <grub_free>
    9a0c:	ldr	w0, [sp, #204]
    9a10:	b	9a28 <grub_mod_fini+0x96d8>
    9a14:	ldr	x0, [sp, #192]
    9a18:	bl	0 <grub_free>
    9a1c:	ldr	w0, [sp, #204]
    9a20:	ldp	x25, x26, [sp, #64]
    9a24:	ldp	x27, x28, [sp, #80]
    9a28:	ldp	x19, x20, [sp, #16]
    9a2c:	ldp	x21, x22, [sp, #32]
    9a30:	ldp	x23, x24, [sp, #48]
    9a34:	ldp	x29, x30, [sp], #208
    9a38:	ret
    9a3c:	mov	w3, w22
    9a40:	ldr	x2, [sp, #104]
    9a44:	mov	x0, x23
    9a48:	bl	5934 <grub_mod_fini+0x55e4>
    9a4c:	cmp	w0, #0x1
    9a50:	b.le	9c5c <grub_mod_fini+0x990c>
    9a54:	ldr	x1, [x23, #24]
    9a58:	ldr	w28, [x1, x26, lsl #2]
    9a5c:	add	w0, w22, w0
    9a60:	sxtw	x20, w0
    9a64:	ldr	x0, [x19, #136]
    9a68:	ldr	x1, [x0, x20, lsl #3]
    9a6c:	str	wzr, [sp, #172]
    9a70:	cbz	x1, 9a88 <grub_mod_fini+0x9738>
    9a74:	add	x1, x1, #0x8
    9a78:	add	x0, sp, #0xa8
    9a7c:	bl	3378 <grub_mod_fini+0x3028>
    9a80:	str	w0, [sp, #164]
    9a84:	cbnz	w0, 9b28 <grub_mod_fini+0x97d8>
    9a88:	mov	w1, w28
    9a8c:	add	x0, sp, #0xa8
    9a90:	bl	2e94 <grub_mod_fini+0x2b44>
    9a94:	and	w0, w0, #0xff
    9a98:	cbz	w0, 9c38 <grub_mod_fini+0x98e8>
    9a9c:	ldr	x28, [x19, #136]
    9aa0:	add	x2, sp, #0xa8
    9aa4:	mov	x1, x23
    9aa8:	add	x0, sp, #0xa4
    9aac:	bl	9318 <grub_mod_fini+0x8fc8>
    9ab0:	str	x0, [x28, x20, lsl #3]
    9ab4:	ldr	x0, [x19, #136]
    9ab8:	ldr	x0, [x0, x20, lsl #3]
    9abc:	cbz	x0, 9c44 <grub_mod_fini+0x98f4>
    9ac0:	ldr	x0, [x23, #24]
    9ac4:	ldr	w1, [x0, x26, lsl #2]
    9ac8:	add	x0, sp, #0xb8
    9acc:	bl	2e94 <grub_mod_fini+0x2b44>
    9ad0:	and	w0, w0, #0xff
    9ad4:	cbz	w0, 9c64 <grub_mod_fini+0x9914>
    9ad8:	add	x24, x24, #0x1
    9adc:	ldr	w0, [x21, #28]
    9ae0:	cmp	w0, w24
    9ae4:	b.le	9c8c <grub_mod_fini+0x993c>
    9ae8:	ldr	x0, [x21, #32]
    9aec:	ldr	w1, [x0, x24, lsl #2]
    9af0:	sxtw	x26, w1
    9af4:	sbfiz	x28, x1, #4, #32
    9af8:	ldr	x0, [x23]
    9afc:	add	x0, x0, x28
    9b00:	ldrb	w0, [x0, #10]
    9b04:	tbnz	w0, #4, 9a3c <grub_mod_fini+0x96ec>
    9b08:	ldr	x1, [x23]
    9b0c:	mov	w2, w22
    9b10:	add	x1, x1, x28
    9b14:	mov	x0, x19
    9b18:	bl	27a8 <grub_mod_fini+0x2458>
    9b1c:	and	w0, w0, #0xff
    9b20:	cbz	w0, 9ad8 <grub_mod_fini+0x9788>
    9b24:	b	9ac0 <grub_mod_fini+0x9770>
    9b28:	ldr	x0, [sp, #176]
    9b2c:	bl	0 <grub_free>
    9b30:	ldr	w0, [sp, #164]
    9b34:	str	w0, [sp, #204]
    9b38:	cbnz	w0, 9c74 <grub_mod_fini+0x9924>
    9b3c:	add	w20, w25, #0x1
    9b40:	ldr	w0, [sp, #188]
    9b44:	cbz	w0, 9b84 <grub_mod_fini+0x9834>
    9b48:	ldr	w3, [sp, #132]
    9b4c:	ldr	w2, [sp, #128]
    9b50:	add	x1, sp, #0xb8
    9b54:	ldr	x0, [sp, #112]
    9b58:	bl	4770 <grub_mod_fini+0x4420>
    9b5c:	str	w0, [sp, #204]
    9b60:	cbnz	w0, 9c9c <grub_mod_fini+0x994c>
    9b64:	ldr	w4, [sp, #132]
    9b68:	ldr	w3, [sp, #128]
    9b6c:	mov	w2, w20
    9b70:	add	x1, sp, #0xb8
    9b74:	mov	x0, x19
    9b78:	bl	953c <grub_mod_fini+0x91ec>
    9b7c:	str	w0, [sp, #204]
    9b80:	cbnz	w0, 9cb4 <grub_mod_fini+0x9964>
    9b84:	ldr	w2, [x19, #120]
    9b88:	mov	w1, w22
    9b8c:	ldr	x0, [sp, #104]
    9b90:	bl	26b8 <grub_mod_fini+0x2368>
    9b94:	mov	w3, w0
    9b98:	add	x2, sp, #0xb8
    9b9c:	ldr	x1, [sp, #112]
    9ba0:	add	x0, sp, #0xcc
    9ba4:	bl	4294 <grub_mod_fini+0x3f44>
    9ba8:	mov	x21, x0
    9bac:	cbz	x0, 9ccc <grub_mod_fini+0x997c>
    9bb0:	ldr	x0, [x19, #136]
    9bb4:	str	x21, [x0, w20, sxtw #3]
    9bb8:	str	wzr, [sp, #120]
    9bbc:	add	w25, w25, #0x1
    9bc0:	add	x27, x27, #0x8
    9bc4:	ldr	w0, [sp, #124]
    9bc8:	cmp	w0, w20
    9bcc:	b.le	9d54 <grub_mod_fini+0x9a04>
    9bd0:	mov	w22, w25
    9bd4:	ldr	w0, [x19, #168]
    9bd8:	ldr	w1, [sp, #120]
    9bdc:	cmp	w1, w0
    9be0:	b.gt	9d04 <grub_mod_fini+0x99b4>
    9be4:	str	wzr, [sp, #188]
    9be8:	ldr	x0, [x19, #136]
    9bec:	ldr	x1, [x0, x27]
    9bf0:	cbz	x1, 9da0 <grub_mod_fini+0x9a50>
    9bf4:	add	x1, x1, #0x8
    9bf8:	add	x0, sp, #0xb8
    9bfc:	bl	3378 <grub_mod_fini+0x3028>
    9c00:	str	w0, [sp, #204]
    9c04:	cbnz	w0, 9a14 <grub_mod_fini+0x96c4>
    9c08:	cbz	x21, 9b3c <grub_mod_fini+0x97ec>
    9c0c:	ldr	x23, [x19, #112]
    9c10:	str	wzr, [sp, #164]
    9c14:	mov	x2, #0x10                  	// #16
    9c18:	mov	w1, #0x0                   	// #0
    9c1c:	add	x0, sp, #0xa8
    9c20:	bl	0 <grub_memset>
    9c24:	ldr	w0, [x21, #28]
    9c28:	cmp	w0, #0x0
    9c2c:	b.le	9c8c <grub_mod_fini+0x993c>
    9c30:	mov	x24, #0x0                   	// #0
    9c34:	b	9ae8 <grub_mod_fini+0x9798>
    9c38:	ldr	x0, [sp, #176]
    9c3c:	bl	0 <grub_free>
    9c40:	b	9c6c <grub_mod_fini+0x991c>
    9c44:	ldr	w0, [sp, #164]
    9c48:	cbz	w0, 9ac0 <grub_mod_fini+0x9770>
    9c4c:	ldr	x0, [sp, #176]
    9c50:	bl	0 <grub_free>
    9c54:	ldr	w0, [sp, #164]
    9c58:	b	9b34 <grub_mod_fini+0x97e4>
    9c5c:	cbz	w0, 9b08 <grub_mod_fini+0x97b8>
    9c60:	b	9ac0 <grub_mod_fini+0x9770>
    9c64:	ldr	x0, [sp, #176]
    9c68:	bl	0 <grub_free>
    9c6c:	mov	w0, #0xc                   	// #12
    9c70:	str	w0, [sp, #204]
    9c74:	ldr	x0, [sp, #192]
    9c78:	bl	0 <grub_free>
    9c7c:	ldr	w0, [sp, #204]
    9c80:	ldp	x25, x26, [sp, #64]
    9c84:	ldp	x27, x28, [sp, #80]
    9c88:	b	9a28 <grub_mod_fini+0x96d8>
    9c8c:	ldr	x0, [sp, #176]
    9c90:	bl	0 <grub_free>
    9c94:	str	wzr, [sp, #204]
    9c98:	b	9b3c <grub_mod_fini+0x97ec>
    9c9c:	ldr	x0, [sp, #192]
    9ca0:	bl	0 <grub_free>
    9ca4:	ldr	w0, [sp, #204]
    9ca8:	ldp	x25, x26, [sp, #64]
    9cac:	ldp	x27, x28, [sp, #80]
    9cb0:	b	9a28 <grub_mod_fini+0x96d8>
    9cb4:	ldr	x0, [sp, #192]
    9cb8:	bl	0 <grub_free>
    9cbc:	ldr	w0, [sp, #204]
    9cc0:	ldp	x25, x26, [sp, #64]
    9cc4:	ldp	x27, x28, [sp, #80]
    9cc8:	b	9a28 <grub_mod_fini+0x96d8>
    9ccc:	ldr	w0, [sp, #204]
    9cd0:	cbnz	w0, 9cec <grub_mod_fini+0x999c>
    9cd4:	ldr	x0, [x19, #136]
    9cd8:	str	xzr, [x0, w20, sxtw #3]
    9cdc:	ldr	w0, [sp, #120]
    9ce0:	add	w0, w0, #0x1
    9ce4:	str	w0, [sp, #120]
    9ce8:	b	9bbc <grub_mod_fini+0x986c>
    9cec:	ldr	x0, [sp, #192]
    9cf0:	bl	0 <grub_free>
    9cf4:	ldr	w0, [sp, #204]
    9cf8:	ldp	x25, x26, [sp, #64]
    9cfc:	ldp	x27, x28, [sp, #80]
    9d00:	b	9a28 <grub_mod_fini+0x96d8>
    9d04:	ldp	x25, x26, [sp, #64]
    9d08:	ldp	x27, x28, [sp, #80]
    9d0c:	ldr	x0, [sp, #192]
    9d10:	bl	0 <grub_free>
    9d14:	ldr	x0, [x19, #136]
    9d18:	ldr	w1, [sp, #124]
    9d1c:	ldr	x0, [x0, w1, sxtw #3]
    9d20:	cbz	x0, 9d80 <grub_mod_fini+0x9a30>
    9d24:	ldr	x1, [sp, #136]
    9d28:	str	w22, [x1]
    9d2c:	ldr	x1, [sp, #144]
    9d30:	str	x1, [x19, #136]
    9d34:	ldr	w1, [sp, #152]
    9d38:	str	w1, [x19, #56]
    9d3c:	ldr	w1, [sp, #156]
    9d40:	add	x0, x0, #0x8
    9d44:	bl	12e8 <grub_mod_fini+0xf98>
    9d48:	cmp	w0, #0x0
    9d4c:	cset	w0, eq  // eq = none
    9d50:	b	9a28 <grub_mod_fini+0x96d8>
    9d54:	mov	w22, w20
    9d58:	ldp	x25, x26, [sp, #64]
    9d5c:	ldp	x27, x28, [sp, #80]
    9d60:	b	9d0c <grub_mod_fini+0x99bc>
    9d64:	mov	w0, #0xc                   	// #12
    9d68:	b	9a28 <grub_mod_fini+0x96d8>
    9d6c:	mov	w0, #0xc                   	// #12
    9d70:	b	9a28 <grub_mod_fini+0x96d8>
    9d74:	mov	w0, #0xc                   	// #12
    9d78:	ldp	x25, x26, [sp, #64]
    9d7c:	b	9a28 <grub_mod_fini+0x96d8>
    9d80:	ldr	x0, [sp, #136]
    9d84:	str	w22, [x0]
    9d88:	ldr	x0, [sp, #144]
    9d8c:	str	x0, [x19, #136]
    9d90:	ldr	w0, [sp, #152]
    9d94:	str	w0, [x19, #56]
    9d98:	mov	w0, #0x1                   	// #1
    9d9c:	b	9a28 <grub_mod_fini+0x96d8>
    9da0:	cbnz	x21, 9c0c <grub_mod_fini+0x98bc>
    9da4:	add	w20, w25, #0x1
    9da8:	b	9b84 <grub_mod_fini+0x9834>
    9dac:	ldr	x0, [x19, #136]
    9db0:	str	x0, [sp, #144]
    9db4:	ldr	w0, [x19, #56]
    9db8:	str	w0, [sp, #152]
    9dbc:	ldr	x0, [sp, #136]
    9dc0:	ldr	x0, [x0, #8]
    9dc4:	str	x0, [x19, #136]
    9dc8:	str	w23, [x19, #56]
    9dcc:	str	x19, [sp, #104]
    9dd0:	ldr	w2, [x19, #120]
    9dd4:	sub	w1, w23, #0x1
    9dd8:	mov	x0, x19
    9ddc:	bl	26b8 <grub_mod_fini+0x2368>
    9de0:	mov	w24, w0
    9de4:	mov	w1, w20
    9de8:	add	x0, sp, #0xb8
    9dec:	bl	2e40 <grub_mod_fini+0x2af0>
    9df0:	str	w0, [sp, #204]
    9df4:	cbnz	w0, 9a28 <grub_mod_fini+0x96d8>
    9df8:	ldr	w3, [sp, #132]
    9dfc:	ldr	w2, [sp, #128]
    9e00:	add	x1, sp, #0xb8
    9e04:	ldr	x0, [sp, #112]
    9e08:	bl	4770 <grub_mod_fini+0x4420>
    9e0c:	str	w0, [sp, #204]
    9e10:	mov	w22, w23
    9e14:	cbz	w0, 9908 <grub_mod_fini+0x95b8>
    9e18:	ldr	x0, [sp, #192]
    9e1c:	bl	0 <grub_free>
    9e20:	ldr	w0, [sp, #204]
    9e24:	b	9a28 <grub_mod_fini+0x96d8>
    9e28:	mov	x2, #0x10                  	// #16
    9e2c:	mov	w1, #0x0                   	// #0
    9e30:	add	x0, sp, #0xb8
    9e34:	bl	0 <grub_memset>
    9e38:	b	9954 <grub_mod_fini+0x9604>
    9e3c:	stp	x29, x30, [sp, #-80]!
    9e40:	mov	x29, sp
    9e44:	stp	x19, x20, [sp, #16]
    9e48:	stp	x21, x22, [sp, #32]
    9e4c:	stp	x23, x24, [sp, #48]
    9e50:	mov	x19, x0
    9e54:	mov	x23, x1
    9e58:	mov	x22, x2
    9e5c:	mov	w21, w3
    9e60:	mov	w20, w4
    9e64:	mov	x1, x2
    9e68:	mov	w6, #0x8                   	// #8
    9e6c:	mov	w5, w4
    9e70:	mov	w4, w3
    9e74:	ldr	w3, [x2, #4]
    9e78:	ldr	w2, [x1], #8
    9e7c:	bl	9834 <grub_mod_fini+0x94e4>
    9e80:	cbz	w0, 9e98 <grub_mod_fini+0x9b48>
    9e84:	ldp	x19, x20, [sp, #16]
    9e88:	ldp	x21, x22, [sp, #32]
    9e8c:	ldp	x23, x24, [sp, #48]
    9e90:	ldp	x29, x30, [sp], #80
    9e94:	ret
    9e98:	str	x25, [sp, #64]
    9e9c:	ldr	w25, [x23]
    9ea0:	ldr	w24, [x22, #4]
    9ea4:	ldr	w1, [x19, #152]
    9ea8:	ldr	w0, [x19, #148]
    9eac:	cmp	w0, w1
    9eb0:	b.ge	9fa0 <grub_mod_fini+0x9c50>  // b.tcont
    9eb4:	ldr	w0, [x19, #148]
    9eb8:	cmp	w0, #0x0
    9ebc:	b.le	9ee4 <grub_mod_fini+0x9b94>
    9ec0:	sbfiz	x1, x0, #2, #32
    9ec4:	add	x0, x1, w0, sxtw
    9ec8:	lsl	x0, x0, #2
    9ecc:	sub	x0, x0, #0x14
    9ed0:	ldr	x1, [x19, #160]
    9ed4:	add	x0, x1, x0
    9ed8:	ldr	w1, [x0, #4]
    9edc:	cmp	w20, w1
    9ee0:	b.eq	a004 <grub_mod_fini+0x9cb4>  // b.none
    9ee4:	ldrsw	x0, [x19, #148]
    9ee8:	ldr	x1, [x19, #160]
    9eec:	add	x0, x0, x0, lsl #2
    9ef0:	str	w21, [x1, x0, lsl #2]
    9ef4:	ldrsw	x0, [x19, #148]
    9ef8:	ldr	x1, [x19, #160]
    9efc:	add	x0, x0, x0, lsl #2
    9f00:	add	x0, x1, x0, lsl #2
    9f04:	str	w20, [x0, #4]
    9f08:	ldrsw	x0, [x19, #148]
    9f0c:	ldr	x1, [x19, #160]
    9f10:	add	x0, x0, x0, lsl #2
    9f14:	add	x0, x1, x0, lsl #2
    9f18:	str	w25, [x0, #8]
    9f1c:	ldrsw	x0, [x19, #148]
    9f20:	ldr	x1, [x19, #160]
    9f24:	add	x0, x0, x0, lsl #2
    9f28:	add	x0, x1, x0, lsl #2
    9f2c:	str	w24, [x0, #12]
    9f30:	ldrsw	x0, [x19, #148]
    9f34:	ldr	x1, [x19, #160]
    9f38:	add	x0, x0, x0, lsl #2
    9f3c:	add	x0, x1, x0, lsl #2
    9f40:	cmp	w25, w24
    9f44:	csetm	w1, eq  // eq = none
    9f48:	strh	w1, [x0, #18]
    9f4c:	ldr	x1, [x19, #160]
    9f50:	ldr	w0, [x19, #148]
    9f54:	add	w2, w0, #0x1
    9f58:	str	w2, [x19, #148]
    9f5c:	sbfiz	x2, x0, #2, #32
    9f60:	add	x0, x2, w0, sxtw
    9f64:	add	x0, x1, x0, lsl #2
    9f68:	strb	wzr, [x0, #16]
    9f6c:	sub	w24, w24, w25
    9f70:	ldr	w0, [x19, #168]
    9f74:	cmp	w0, w24
    9f78:	b.ge	9f80 <grub_mod_fini+0x9c30>  // b.tcont
    9f7c:	str	w24, [x19, #168]
    9f80:	ldr	w1, [x22, #4]
    9f84:	add	w20, w20, w1
    9f88:	ldr	w1, [x23]
    9f8c:	sub	w1, w20, w1
    9f90:	mov	x0, x19
    9f94:	bl	72e8 <grub_mod_fini+0x6f98>
    9f98:	ldr	x25, [sp, #64]
    9f9c:	b	9e84 <grub_mod_fini+0x9b34>
    9fa0:	lsl	w1, w1, #1
    9fa4:	sbfiz	x0, x1, #2, #32
    9fa8:	add	x1, x0, w1, sxtw
    9fac:	lsl	x1, x1, #2
    9fb0:	ldr	x0, [x19, #160]
    9fb4:	bl	0 <grub_realloc>
    9fb8:	cbz	x0, 9ff0 <grub_mod_fini+0x9ca0>
    9fbc:	str	x0, [x19, #160]
    9fc0:	ldrsw	x2, [x19, #152]
    9fc4:	add	x2, x2, x2, lsl #2
    9fc8:	ldrsw	x1, [x19, #148]
    9fcc:	add	x3, x1, x1, lsl #2
    9fd0:	lsl	x2, x2, #2
    9fd4:	mov	w1, #0x0                   	// #0
    9fd8:	add	x0, x0, x3, lsl #2
    9fdc:	bl	0 <grub_memset>
    9fe0:	ldr	w0, [x19, #152]
    9fe4:	lsl	w0, w0, #1
    9fe8:	str	w0, [x19, #152]
    9fec:	b	9eb4 <grub_mod_fini+0x9b64>
    9ff0:	ldr	x0, [x19, #160]
    9ff4:	bl	0 <grub_free>
    9ff8:	mov	w0, #0xc                   	// #12
    9ffc:	ldr	x25, [sp, #64]
    a000:	b	9e84 <grub_mod_fini+0x9b34>
    a004:	mov	w1, #0x1                   	// #1
    a008:	strb	w1, [x0, #16]
    a00c:	b	9ee4 <grub_mod_fini+0x9b94>
    a010:	stp	x29, x30, [sp, #-224]!
    a014:	mov	x29, sp
    a018:	stp	x19, x20, [sp, #16]
    a01c:	stp	x25, x26, [sp, #64]
    a020:	stp	x27, x28, [sp, #80]
    a024:	mov	x19, x0
    a028:	mov	x26, x1
    a02c:	ldr	x27, [x0, #112]
    a030:	ldr	w0, [x0, #56]
    a034:	mov	w1, w0
    a038:	str	w0, [sp, #176]
    a03c:	ldr	w0, [x26, #4]
    a040:	cmp	w0, #0x0
    a044:	b.le	a6b8 <grub_mod_fini+0xa368>
    a048:	stp	x21, x22, [sp, #32]
    a04c:	stp	x23, x24, [sp, #48]
    a050:	sbfiz	x0, x1, #3, #32
    a054:	str	x0, [sp, #128]
    a058:	mov	x28, #0x0                   	// #0
    a05c:	b	a088 <grub_mod_fini+0x9d38>
    a060:	tbz	w1, #3, a068 <grub_mod_fini+0x9d18>
    a064:	tbnz	w0, #0, a078 <grub_mod_fini+0x9d28>
    a068:	tbz	w1, #5, a070 <grub_mod_fini+0x9d20>
    a06c:	tbz	w0, #1, a078 <grub_mod_fini+0x9d28>
    a070:	tbz	w1, #7, a0e8 <grub_mod_fini+0x9d98>
    a074:	tbnz	w0, #3, a0e8 <grub_mod_fini+0x9d98>
    a078:	add	x28, x28, #0x1
    a07c:	ldr	w0, [x26, #4]
    a080:	cmp	w0, w28
    a084:	b.le	a6b0 <grub_mod_fini+0xa360>
    a088:	ldr	x0, [x26, #8]
    a08c:	ldr	w20, [x0, x28, lsl #2]
    a090:	sxtw	x0, w20
    a094:	str	x0, [sp, #112]
    a098:	sbfiz	x0, x20, #4, #32
    a09c:	str	x0, [sp, #104]
    a0a0:	ldr	x21, [x27]
    a0a4:	add	x21, x21, x0
    a0a8:	ldrb	w0, [x21, #8]
    a0ac:	cmp	w0, #0x4
    a0b0:	b.ne	a078 <grub_mod_fini+0x9d28>  // b.any
    a0b4:	ldr	w0, [x21, #8]
    a0b8:	tst	w0, #0x3ff00
    a0bc:	b.eq	a0e8 <grub_mod_fini+0x9d98>  // b.none
    a0c0:	ldr	w2, [x19, #120]
    a0c4:	ldr	w1, [sp, #176]
    a0c8:	mov	x0, x19
    a0cc:	bl	26b8 <grub_mod_fini+0x2368>
    a0d0:	ldr	w2, [x21, #8]
    a0d4:	ubfx	x1, x2, #8, #10
    a0d8:	tbz	w2, #10, a060 <grub_mod_fini+0x9d10>
    a0dc:	tbz	w0, #0, a078 <grub_mod_fini+0x9d28>
    a0e0:	tbz	w1, #3, a068 <grub_mod_fini+0x9d18>
    a0e4:	b	a078 <grub_mod_fini+0x9d28>
    a0e8:	ldr	w21, [x19, #148]
    a0ec:	ldr	w1, [sp, #176]
    a0f0:	mov	x0, x19
    a0f4:	bl	18f0 <grub_mod_fini+0x15a0>
    a0f8:	cmn	w0, #0x1
    a0fc:	b.eq	a128 <grub_mod_fini+0x9dd8>  // b.none
    a100:	sbfiz	x1, x0, #2, #32
    a104:	add	x0, x1, w0, sxtw
    a108:	ldr	x1, [x19, #160]
    a10c:	add	x0, x1, x0, lsl #2
    a110:	ldr	w1, [x0]
    a114:	cmp	w20, w1
    a118:	b.eq	a49c <grub_mod_fini+0xa14c>  // b.none
    a11c:	add	x0, x0, #0x14
    a120:	ldurb	w1, [x0, #-4]
    a124:	cbnz	w1, a110 <grub_mod_fini+0x9dc0>
    a128:	ldr	x0, [x19, #112]
    a12c:	str	x0, [sp, #136]
    a130:	ldr	x0, [x0]
    a134:	ldr	x1, [sp, #104]
    a138:	ldr	w0, [x0, x1]
    a13c:	str	w0, [sp, #144]
    a140:	ldr	w0, [x19, #172]
    a144:	cmp	w0, #0x0
    a148:	b.le	a49c <grub_mod_fini+0xa14c>
    a14c:	ldr	x0, [x19, #8]
    a150:	mov	x1, #0x0                   	// #0
    a154:	str	x28, [sp, #160]
    a158:	str	x27, [sp, #168]
    a15c:	str	w20, [sp, #120]
    a160:	str	w21, [sp, #180]
    a164:	mov	x27, x0
    a168:	mov	x28, x1
    a16c:	str	x26, [sp, #184]
    a170:	b	a270 <grub_mod_fini+0x9f20>
    a174:	sxtw	x2, w22
    a178:	add	x1, x27, w26, sxtw
    a17c:	add	x0, x27, w23, sxtw
    a180:	bl	0 <grub_memcmp>
    a184:	cbnz	w0, a24c <grub_mod_fini+0x9efc>
    a188:	add	w23, w23, w22
    a18c:	ldr	w4, [sp, #176]
    a190:	ldr	w3, [sp, #120]
    a194:	mov	x2, x25
    a198:	mov	x1, x21
    a19c:	mov	x0, x19
    a1a0:	bl	9e3c <grub_mod_fini+0x9aec>
    a1a4:	ldr	x27, [x19, #8]
    a1a8:	cmp	w0, #0x1
    a1ac:	b.hi	a6e0 <grub_mod_fini+0xa390>  // b.pmore
    a1b0:	add	w0, w28, #0x1
    a1b4:	str	w0, [sp, #96]
    a1b8:	add	x20, x20, #0x1
    a1bc:	ldr	w0, [x21, #20]
    a1c0:	cmp	w0, w20
    a1c4:	b.le	a21c <grub_mod_fini+0x9ecc>
    a1c8:	mov	w28, w20
    a1cc:	str	w20, [sp, #96]
    a1d0:	ldr	x0, [x21, #24]
    a1d4:	ldr	x25, [x0, x20, lsl #3]
    a1d8:	mov	w26, w24
    a1dc:	ldr	w24, [x25, #4]
    a1e0:	sub	w22, w24, w26
    a1e4:	cmp	w22, #0x0
    a1e8:	b.le	a188 <grub_mod_fini+0x9e38>
    a1ec:	add	w1, w22, w23
    a1f0:	ldr	w0, [x19, #44]
    a1f4:	cmp	w1, w0
    a1f8:	b.le	a174 <grub_mod_fini+0x9e24>
    a1fc:	ldr	w0, [x19, #64]
    a200:	cmp	w1, w0
    a204:	b.gt	a24c <grub_mod_fini+0x9efc>
    a208:	mov	x0, x19
    a20c:	bl	72e8 <grub_mod_fini+0x6f98>
    a210:	cbnz	w0, a6d0 <grub_mod_fini+0xa380>
    a214:	ldr	x27, [x19, #8]
    a218:	b	a174 <grub_mod_fini+0x9e24>
    a21c:	ldr	x28, [sp, #152]
    a220:	ldr	w0, [sp, #96]
    a224:	cmp	w0, #0x0
    a228:	cinc	w24, w24, gt
    a22c:	ldr	w26, [sp, #176]
    a230:	cmp	w26, w24
    a234:	b.lt	a260 <grub_mod_fini+0x9f10>  // b.tstop
    a238:	sxtw	x22, w24
    a23c:	ldr	w25, [sp, #144]
    a240:	str	x28, [sp, #96]
    a244:	ldr	x28, [sp, #136]
    a248:	b	a3c8 <grub_mod_fini+0xa078>
    a24c:	ldr	x28, [sp, #152]
    a250:	ldr	w0, [x21, #20]
    a254:	ldr	w1, [sp, #96]
    a258:	cmp	w0, w1
    a25c:	b.le	a2b8 <grub_mod_fini+0x9f68>
    a260:	add	x28, x28, #0x1
    a264:	ldr	w0, [x19, #172]
    a268:	cmp	w0, w28
    a26c:	b.le	a488 <grub_mod_fini+0xa138>
    a270:	ldr	x0, [x19, #184]
    a274:	ldr	x21, [x0, x28, lsl #3]
    a278:	ldrsw	x0, [x21, #4]
    a27c:	ldr	x1, [sp, #136]
    a280:	ldr	x1, [x1]
    a284:	lsl	x0, x0, #4
    a288:	ldr	w0, [x1, x0]
    a28c:	ldr	w1, [sp, #144]
    a290:	cmp	w1, w0
    a294:	b.ne	a260 <grub_mod_fini+0x9f10>  // b.any
    a298:	ldr	w24, [x21]
    a29c:	ldr	w0, [x21, #20]
    a2a0:	cmp	w0, #0x0
    a2a4:	b.le	a2c0 <grub_mod_fini+0x9f70>
    a2a8:	ldr	w23, [sp, #176]
    a2ac:	mov	x20, #0x0                   	// #0
    a2b0:	str	x28, [sp, #152]
    a2b4:	b	a1c8 <grub_mod_fini+0x9e78>
    a2b8:	mov	w24, w26
    a2bc:	b	a220 <grub_mod_fini+0x9ed0>
    a2c0:	ldr	w23, [sp, #176]
    a2c4:	b	a22c <grub_mod_fini+0x9edc>
    a2c8:	ldr	w0, [x19, #64]
    a2cc:	cmp	w0, w23
    a2d0:	b.le	a478 <grub_mod_fini+0xa128>
    a2d4:	add	w1, w23, #0x1
    a2d8:	mov	x0, x19
    a2dc:	bl	7208 <grub_mod_fini+0x6eb8>
    a2e0:	cbnz	w0, a6d0 <grub_mod_fini+0xa380>
    a2e4:	ldr	x27, [x19, #8]
    a2e8:	b	a3e4 <grub_mod_fini+0xa094>
    a2ec:	add	x0, x0, #0x1
    a2f0:	cmp	w4, w0
    a2f4:	b.le	a3b8 <grub_mod_fini+0xa068>
    a2f8:	ldr	w20, [x5, x0, lsl #2]
    a2fc:	sbfiz	x1, x20, #4, #32
    a300:	add	x2, x3, x1
    a304:	ldrb	w2, [x2, #8]
    a308:	cmp	w2, #0x9
    a30c:	b.ne	a2ec <grub_mod_fini+0x9f9c>  // b.any
    a310:	ldr	w1, [x3, x1]
    a314:	cmp	w25, w1
    a318:	b.ne	a2ec <grub_mod_fini+0x9f9c>  // b.any
    a31c:	cmn	w20, #0x1
    a320:	b.eq	a3b8 <grub_mod_fini+0xa068>  // b.none
    a324:	ldr	x0, [x21, #8]
    a328:	cbz	x0, a428 <grub_mod_fini+0xa0d8>
    a32c:	mov	w6, #0x9                   	// #9
    a330:	mov	w5, w24
    a334:	mov	w4, w20
    a338:	ldr	w3, [x21]
    a33c:	ldr	w2, [x21, #4]
    a340:	ldr	x1, [x21, #8]
    a344:	mov	x0, x19
    a348:	bl	9834 <grub_mod_fini+0x94e4>
    a34c:	cmp	w0, #0x1
    a350:	b.eq	a3b8 <grub_mod_fini+0xa068>  // b.none
    a354:	cbnz	w0, a6d0 <grub_mod_fini+0xa380>
    a358:	ldr	w0, [x21, #16]
    a35c:	ldr	w1, [x21, #20]
    a360:	cmp	w1, w0
    a364:	b.eq	a44c <grub_mod_fini+0xa0fc>  // b.none
    a368:	mov	x0, #0x18                  	// #24
    a36c:	bl	0 <grub_zalloc>
    a370:	mov	x2, x0
    a374:	cbz	x0, a6cc <grub_mod_fini+0xa37c>
    a378:	ldrsw	x1, [x21, #20]
    a37c:	ldr	x0, [x21, #24]
    a380:	str	x2, [x0, x1, lsl #3]
    a384:	str	w20, [x2]
    a388:	str	w24, [x2, #4]
    a38c:	ldr	w0, [x21, #20]
    a390:	add	w0, w0, #0x1
    a394:	str	w0, [x21, #20]
    a398:	mov	w4, w26
    a39c:	ldr	w3, [sp, #120]
    a3a0:	mov	x1, x21
    a3a4:	mov	x0, x19
    a3a8:	bl	9e3c <grub_mod_fini+0x9aec>
    a3ac:	ldr	x27, [x19, #8]
    a3b0:	cmp	w0, #0x1
    a3b4:	b.hi	a6e0 <grub_mod_fini+0xa390>  // b.pmore
    a3b8:	add	w24, w24, #0x1
    a3bc:	add	x22, x22, #0x1
    a3c0:	cmp	w26, w24
    a3c4:	b.lt	a470 <grub_mod_fini+0xa120>  // b.tstop
    a3c8:	ldr	w0, [x21]
    a3cc:	sub	w0, w24, w0
    a3d0:	cmp	w0, #0x0
    a3d4:	b.le	a400 <grub_mod_fini+0xa0b0>
    a3d8:	ldr	w0, [x19, #44]
    a3dc:	cmp	w0, w23
    a3e0:	b.le	a2c8 <grub_mod_fini+0x9f78>
    a3e4:	add	w2, w23, #0x1
    a3e8:	add	x0, x27, x22
    a3ec:	ldrb	w1, [x27, w23, sxtw]
    a3f0:	ldurb	w0, [x0, #-1]
    a3f4:	cmp	w1, w0
    a3f8:	b.ne	a480 <grub_mod_fini+0xa130>  // b.any
    a3fc:	mov	w23, w2
    a400:	ldr	x0, [x19, #136]
    a404:	ldr	x0, [x0, x22, lsl #3]
    a408:	cbz	x0, a3b8 <grub_mod_fini+0xa068>
    a40c:	ldr	w4, [x0, #12]
    a410:	cmp	w4, #0x0
    a414:	b.le	a3b8 <grub_mod_fini+0xa068>
    a418:	ldr	x5, [x0, #16]
    a41c:	ldr	x3, [x28]
    a420:	mov	x0, #0x0                   	// #0
    a424:	b	a2f8 <grub_mod_fini+0x9fa8>
    a428:	ldr	w0, [x21]
    a42c:	sub	w0, w24, w0
    a430:	add	w0, w0, #0x1
    a434:	sbfiz	x0, x0, #4, #32
    a438:	bl	0 <grub_zalloc>
    a43c:	str	x0, [x21, #8]
    a440:	cbnz	x0, a32c <grub_mod_fini+0x9fdc>
    a444:	mov	w0, #0xc                   	// #12
    a448:	b	a6d0 <grub_mod_fini+0xa380>
    a44c:	lsl	w0, w0, #1
    a450:	add	w27, w0, #0x1
    a454:	sbfiz	x1, x27, #3, #32
    a458:	ldr	x0, [x21, #24]
    a45c:	bl	0 <grub_realloc>
    a460:	cbz	x0, a6cc <grub_mod_fini+0xa37c>
    a464:	str	x0, [x21, #24]
    a468:	str	w27, [x21, #16]
    a46c:	b	a368 <grub_mod_fini+0xa018>
    a470:	ldr	x28, [sp, #96]
    a474:	b	a260 <grub_mod_fini+0x9f10>
    a478:	ldr	x28, [sp, #96]
    a47c:	b	a260 <grub_mod_fini+0x9f10>
    a480:	ldr	x28, [sp, #96]
    a484:	b	a260 <grub_mod_fini+0x9f10>
    a488:	ldr	x28, [sp, #160]
    a48c:	ldr	x27, [sp, #168]
    a490:	ldr	w20, [sp, #120]
    a494:	ldr	w21, [sp, #180]
    a498:	ldr	x26, [sp, #184]
    a49c:	str	wzr, [sp, #220]
    a4a0:	ldr	w0, [x19, #148]
    a4a4:	cmp	w0, w21
    a4a8:	b.le	a078 <grub_mod_fini+0x9d28>
    a4ac:	ldr	x0, [sp, #112]
    a4b0:	lsl	x0, x0, #2
    a4b4:	str	x0, [sp, #120]
    a4b8:	sbfiz	x22, x21, #2, #32
    a4bc:	add	x22, x22, w21, sxtw
    a4c0:	lsl	x22, x22, #2
    a4c4:	str	x28, [sp, #136]
    a4c8:	str	x26, [sp, #144]
    a4cc:	ldr	w26, [sp, #176]
    a4d0:	b	a574 <grub_mod_fini+0xa224>
    a4d4:	ldr	x1, [x27, #24]
    a4d8:	ldr	x2, [sp, #120]
    a4dc:	ldrsw	x24, [x1, x2]
    a4e0:	ldr	x1, [x27, #48]
    a4e4:	add	x24, x1, x24, lsl #4
    a4e8:	b	a5c0 <grub_mod_fini+0xa270>
    a4ec:	ldr	w3, [sp, #112]
    a4f0:	mov	x2, x24
    a4f4:	mov	x1, x27
    a4f8:	add	x0, sp, #0xdc
    a4fc:	bl	4294 <grub_mod_fini+0x3f44>
    a500:	str	x0, [x25, x23, lsl #3]
    a504:	ldr	x0, [x19, #136]
    a508:	ldr	x0, [x0, x23, lsl #3]
    a50c:	cbnz	x0, a64c <grub_mod_fini+0xa2fc>
    a510:	ldr	w0, [sp, #220]
    a514:	cbz	w0, a64c <grub_mod_fini+0xa2fc>
    a518:	ldp	x21, x22, [sp, #32]
    a51c:	ldp	x23, x24, [sp, #48]
    a520:	b	a534 <grub_mod_fini+0xa1e4>
    a524:	ldr	x0, [sp, #208]
    a528:	bl	0 <grub_free>
    a52c:	ldp	x21, x22, [sp, #32]
    a530:	ldp	x23, x24, [sp, #48]
    a534:	ldr	w0, [sp, #220]
    a538:	ldp	x19, x20, [sp, #16]
    a53c:	ldp	x25, x26, [sp, #64]
    a540:	ldp	x27, x28, [sp, #80]
    a544:	ldp	x29, x30, [sp], #224
    a548:	ret
    a54c:	ldr	w0, [sp, #220]
    a550:	cbz	w0, a64c <grub_mod_fini+0xa2fc>
    a554:	ldp	x21, x22, [sp, #32]
    a558:	ldp	x23, x24, [sp, #48]
    a55c:	b	a534 <grub_mod_fini+0xa1e4>
    a560:	add	w21, w21, #0x1
    a564:	add	x22, x22, #0x14
    a568:	ldr	w0, [x19, #148]
    a56c:	cmp	w0, w21
    a570:	b.le	a6a4 <grub_mod_fini+0xa354>
    a574:	ldr	x0, [x19, #160]
    a578:	add	x1, x0, x22
    a57c:	ldr	w0, [x0, x22]
    a580:	cmp	w0, w20
    a584:	b.ne	a560 <grub_mod_fini+0xa210>  // b.any
    a588:	ldr	w0, [x1, #4]
    a58c:	cmp	w0, w26
    a590:	b.ne	a560 <grub_mod_fini+0xa210>  // b.any
    a594:	ldr	w23, [x1, #12]
    a598:	ldr	w0, [x1, #8]
    a59c:	subs	w28, w23, w0
    a5a0:	b.ne	a4d4 <grub_mod_fini+0xa184>  // b.any
    a5a4:	ldr	x1, [x27, #40]
    a5a8:	ldr	x2, [sp, #104]
    a5ac:	add	x1, x1, x2
    a5b0:	ldr	x1, [x1, #8]
    a5b4:	ldrsw	x24, [x1]
    a5b8:	ldr	x1, [x27, #48]
    a5bc:	add	x24, x1, x24, lsl #4
    a5c0:	add	w23, w23, w26
    a5c4:	sub	w23, w23, w0
    a5c8:	ldr	w2, [x19, #120]
    a5cc:	sub	w1, w23, #0x1
    a5d0:	mov	x0, x19
    a5d4:	bl	26b8 <grub_mod_fini+0x2368>
    a5d8:	str	w0, [sp, #112]
    a5dc:	ldr	x25, [x19, #136]
    a5e0:	sxtw	x23, w23
    a5e4:	ldr	x0, [x25, x23, lsl #3]
    a5e8:	ldr	x1, [sp, #128]
    a5ec:	ldr	x1, [x25, x1]
    a5f0:	str	wzr, [sp, #96]
    a5f4:	cbz	x1, a600 <grub_mod_fini+0xa2b0>
    a5f8:	ldr	w1, [x1, #12]
    a5fc:	str	w1, [sp, #96]
    a600:	cbz	x0, a4ec <grub_mod_fini+0xa19c>
    a604:	mov	x2, x24
    a608:	ldr	x1, [x0, #56]
    a60c:	add	x0, sp, #0xc8
    a610:	bl	35b8 <grub_mod_fini+0x3268>
    a614:	str	w0, [sp, #220]
    a618:	cbnz	w0, a524 <grub_mod_fini+0xa1d4>
    a61c:	ldr	x25, [x19, #136]
    a620:	ldr	w3, [sp, #112]
    a624:	add	x2, sp, #0xc8
    a628:	mov	x1, x27
    a62c:	add	x0, sp, #0xdc
    a630:	bl	4294 <grub_mod_fini+0x3f44>
    a634:	str	x0, [x25, x23, lsl #3]
    a638:	ldr	x0, [sp, #208]
    a63c:	bl	0 <grub_free>
    a640:	ldr	x0, [x19, #136]
    a644:	ldr	x0, [x0, x23, lsl #3]
    a648:	cbz	x0, a54c <grub_mod_fini+0xa1fc>
    a64c:	cbnz	w28, a560 <grub_mod_fini+0xa210>
    a650:	ldr	x0, [x19, #136]
    a654:	ldr	x1, [sp, #128]
    a658:	ldr	x0, [x0, x1]
    a65c:	ldr	w0, [x0, #12]
    a660:	ldr	w1, [sp, #96]
    a664:	cmp	w0, w1
    a668:	b.le	a560 <grub_mod_fini+0xa210>
    a66c:	mov	w2, w26
    a670:	mov	x1, x24
    a674:	mov	x0, x19
    a678:	bl	3238 <grub_mod_fini+0x2ee8>
    a67c:	str	w0, [sp, #220]
    a680:	cbnz	w0, a6c0 <grub_mod_fini+0xa370>
    a684:	mov	x1, x24
    a688:	mov	x0, x19
    a68c:	bl	a010 <grub_mod_fini+0x9cc0>
    a690:	str	w0, [sp, #220]
    a694:	cbz	w0, a560 <grub_mod_fini+0xa210>
    a698:	ldp	x21, x22, [sp, #32]
    a69c:	ldp	x23, x24, [sp, #48]
    a6a0:	b	a534 <grub_mod_fini+0xa1e4>
    a6a4:	ldr	x28, [sp, #136]
    a6a8:	ldr	x26, [sp, #144]
    a6ac:	b	a078 <grub_mod_fini+0x9d28>
    a6b0:	ldp	x21, x22, [sp, #32]
    a6b4:	ldp	x23, x24, [sp, #48]
    a6b8:	str	wzr, [sp, #220]
    a6bc:	b	a534 <grub_mod_fini+0xa1e4>
    a6c0:	ldp	x21, x22, [sp, #32]
    a6c4:	ldp	x23, x24, [sp, #48]
    a6c8:	b	a534 <grub_mod_fini+0xa1e4>
    a6cc:	mov	w0, #0xc                   	// #12
    a6d0:	str	w0, [sp, #220]
    a6d4:	ldp	x21, x22, [sp, #32]
    a6d8:	ldp	x23, x24, [sp, #48]
    a6dc:	b	a534 <grub_mod_fini+0xa1e4>
    a6e0:	str	w0, [sp, #220]
    a6e4:	ldp	x21, x22, [sp, #32]
    a6e8:	ldp	x23, x24, [sp, #48]
    a6ec:	b	a534 <grub_mod_fini+0xa1e4>
    a6f0:	stp	x29, x30, [sp, #-96]!
    a6f4:	mov	x29, sp
    a6f8:	stp	x19, x20, [sp, #16]
    a6fc:	stp	x21, x22, [sp, #32]
    a700:	stp	x23, x24, [sp, #48]
    a704:	mov	x23, x0
    a708:	mov	x20, x1
    a70c:	mov	x19, x2
    a710:	ldr	x22, [x1, #112]
    a714:	ldr	w21, [x1, #56]
    a718:	ldr	w1, [x1, #144]
    a71c:	cmp	w1, w21
    a720:	b.ge	a758 <grub_mod_fini+0xa408>  // b.tcont
    a724:	ldr	x0, [x20, #136]
    a728:	str	x2, [x0, w21, sxtw #3]
    a72c:	str	w21, [x20, #144]
    a730:	ldr	w0, [x22, #140]
    a734:	cmp	w0, #0x0
    a738:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    a73c:	b.ne	a830 <grub_mod_fini+0xa4e0>  // b.any
    a740:	mov	x0, x19
    a744:	ldp	x19, x20, [sp, #16]
    a748:	ldp	x21, x22, [sp, #32]
    a74c:	ldp	x23, x24, [sp, #48]
    a750:	ldp	x29, x30, [sp], #96
    a754:	ret
    a758:	stp	x25, x26, [sp, #64]
    a75c:	sxtw	x24, w21
    a760:	ldr	x25, [x20, #136]
    a764:	ldr	x0, [x25, x24, lsl #3]
    a768:	cbz	x0, a7d4 <grub_mod_fini+0xa484>
    a76c:	ldr	x2, [x0, #56]
    a770:	cbz	x19, a7ec <grub_mod_fini+0xa49c>
    a774:	ldr	x25, [x19, #56]
    a778:	mov	x1, x25
    a77c:	add	x0, sp, #0x50
    a780:	bl	35b8 <grub_mod_fini+0x3268>
    a784:	str	w0, [x23]
    a788:	cbnz	w0, a7e0 <grub_mod_fini+0xa490>
    a78c:	ldr	w1, [x20, #56]
    a790:	ldr	w2, [x20, #120]
    a794:	sub	w1, w1, #0x1
    a798:	mov	x0, x20
    a79c:	bl	26b8 <grub_mod_fini+0x2368>
    a7a0:	ldr	x26, [x20, #136]
    a7a4:	mov	w3, w0
    a7a8:	add	x2, sp, #0x50
    a7ac:	mov	x1, x22
    a7b0:	mov	x0, x23
    a7b4:	bl	4294 <grub_mod_fini+0x3f44>
    a7b8:	mov	x19, x0
    a7bc:	str	x0, [x26, x24, lsl #3]
    a7c0:	cbz	x25, a828 <grub_mod_fini+0xa4d8>
    a7c4:	ldr	x0, [sp, #88]
    a7c8:	bl	0 <grub_free>
    a7cc:	ldp	x25, x26, [sp, #64]
    a7d0:	b	a730 <grub_mod_fini+0xa3e0>
    a7d4:	str	x2, [x25, x24, lsl #3]
    a7d8:	ldp	x25, x26, [sp, #64]
    a7dc:	b	a730 <grub_mod_fini+0xa3e0>
    a7e0:	mov	x19, #0x0                   	// #0
    a7e4:	ldp	x25, x26, [sp, #64]
    a7e8:	b	a740 <grub_mod_fini+0xa3f0>
    a7ec:	ldp	x0, x1, [x2]
    a7f0:	stp	x0, x1, [sp, #80]
    a7f4:	ldr	w2, [x20, #120]
    a7f8:	sub	w1, w21, #0x1
    a7fc:	mov	x0, x20
    a800:	bl	26b8 <grub_mod_fini+0x2368>
    a804:	mov	w3, w0
    a808:	add	x2, sp, #0x50
    a80c:	mov	x1, x22
    a810:	mov	x0, x23
    a814:	bl	4294 <grub_mod_fini+0x3f44>
    a818:	mov	x19, x0
    a81c:	str	x0, [x25, x24, lsl #3]
    a820:	ldp	x25, x26, [sp, #64]
    a824:	b	a730 <grub_mod_fini+0xa3e0>
    a828:	ldp	x25, x26, [sp, #64]
    a82c:	b	a730 <grub_mod_fini+0xa3e0>
    a830:	add	x22, x19, #0x8
    a834:	mov	w2, w21
    a838:	mov	x1, x22
    a83c:	mov	x0, x20
    a840:	bl	3238 <grub_mod_fini+0x2ee8>
    a844:	str	w0, [x23]
    a848:	cbnz	w0, a874 <grub_mod_fini+0xa524>
    a84c:	ldrb	w0, [x19, #80]
    a850:	tbz	w0, #6, a740 <grub_mod_fini+0xa3f0>
    a854:	mov	x1, x22
    a858:	mov	x0, x20
    a85c:	bl	a010 <grub_mod_fini+0x9cc0>
    a860:	str	w0, [x23]
    a864:	cbnz	w0, a87c <grub_mod_fini+0xa52c>
    a868:	ldr	x0, [x20, #136]
    a86c:	ldr	x19, [x0, w21, sxtw #3]
    a870:	b	a740 <grub_mod_fini+0xa3f0>
    a874:	mov	x19, #0x0                   	// #0
    a878:	b	a740 <grub_mod_fini+0xa3f0>
    a87c:	mov	x19, #0x0                   	// #0
    a880:	b	a740 <grub_mod_fini+0xa3f0>
    a884:	stp	x29, x30, [sp, #-224]!
    a888:	mov	x29, sp
    a88c:	stp	x19, x20, [sp, #16]
    a890:	stp	x21, x22, [sp, #32]
    a894:	stp	x23, x24, [sp, #48]
    a898:	stp	x25, x26, [sp, #64]
    a89c:	stp	x27, x28, [sp, #80]
    a8a0:	mov	x21, x0
    a8a4:	mov	x19, x1
    a8a8:	mov	w20, w2
    a8ac:	mov	x24, x3
    a8b0:	ldr	x25, [x0, #112]
    a8b4:	str	wzr, [sp, #220]
    a8b8:	sxtw	x28, w2
    a8bc:	sbfiz	x0, x2, #3, #32
    a8c0:	str	x0, [sp, #128]
    a8c4:	ldr	x0, [x21, #136]
    a8c8:	ldr	x23, [x0, x28, lsl #3]
    a8cc:	cbz	x23, a9a4 <grub_mod_fini+0xa654>
    a8d0:	add	x23, x23, #0x8
    a8d4:	ldr	w0, [x3, #4]
    a8d8:	cbz	w0, a9ac <grub_mod_fini+0xa65c>
    a8dc:	str	wzr, [sp, #176]
    a8e0:	mov	x2, x3
    a8e4:	mov	x1, x25
    a8e8:	add	x0, sp, #0xb0
    a8ec:	bl	9318 <grub_mod_fini+0x8fc8>
    a8f0:	mov	x26, x0
    a8f4:	ldr	w22, [sp, #176]
    a8f8:	cbnz	w22, a9d0 <grub_mod_fini+0xa680>
    a8fc:	ldr	w0, [x0, #40]
    a900:	cbnz	w0, a95c <grub_mod_fini+0xa60c>
    a904:	add	x27, x26, #0x28
    a908:	ldr	w1, [x24, #4]
    a90c:	mov	x0, x27
    a910:	bl	30e0 <grub_mod_fini+0x2d90>
    a914:	str	w0, [sp, #176]
    a918:	cbnz	w0, aeb8 <grub_mod_fini+0xab68>
    a91c:	ldr	w0, [x24, #4]
    a920:	cmp	w0, #0x0
    a924:	b.le	a95c <grub_mod_fini+0xa60c>
    a928:	mov	x22, #0x0                   	// #0
    a92c:	ldr	x0, [x24, #8]
    a930:	ldrsw	x1, [x0, x22, lsl #2]
    a934:	ldr	x0, [x25, #56]
    a938:	add	x1, x0, x1, lsl #4
    a93c:	mov	x0, x27
    a940:	bl	3378 <grub_mod_fini+0x3028>
    a944:	str	w0, [sp, #176]
    a948:	cbnz	w0, aec0 <grub_mod_fini+0xab70>
    a94c:	add	x22, x22, #0x1
    a950:	ldr	w0, [x24, #4]
    a954:	cmp	w0, w22
    a958:	b.gt	a92c <grub_mod_fini+0xa5dc>
    a95c:	add	x2, x26, #0x28
    a960:	mov	x1, x23
    a964:	mov	x0, x24
    a968:	bl	376c <grub_mod_fini+0x341c>
    a96c:	str	w0, [sp, #136]
    a970:	str	w0, [sp, #220]
    a974:	cbnz	w0, aea8 <grub_mod_fini+0xab58>
    a978:	ldr	w0, [x19, #28]
    a97c:	cbnz	w0, a9f0 <grub_mod_fini+0xa6a0>
    a980:	ldr	x22, [x19]
    a984:	mov	x2, x24
    a988:	mov	x1, x25
    a98c:	add	x0, sp, #0xdc
    a990:	bl	9318 <grub_mod_fini+0x8fc8>
    a994:	str	x0, [x22, x28, lsl #3]
    a998:	ldr	w22, [sp, #220]
    a99c:	cbz	w22, a9bc <grub_mod_fini+0xa66c>
    a9a0:	b	a9d0 <grub_mod_fini+0xa680>
    a9a4:	ldr	w0, [x3, #4]
    a9a8:	cbnz	w0, ac00 <grub_mod_fini+0xa8b0>
    a9ac:	ldr	x0, [x19]
    a9b0:	str	xzr, [x0, x28, lsl #3]
    a9b4:	mov	w22, #0x0                   	// #0
    a9b8:	cbz	x23, a9d0 <grub_mod_fini+0xa680>
    a9bc:	ldr	x0, [x21, #136]
    a9c0:	ldr	x0, [x0, x28, lsl #3]
    a9c4:	ldrb	w0, [x0, #80]
    a9c8:	mov	w22, #0x0                   	// #0
    a9cc:	tbnz	w0, #6, ac20 <grub_mod_fini+0xa8d0>
    a9d0:	mov	w0, w22
    a9d4:	ldp	x19, x20, [sp, #16]
    a9d8:	ldp	x21, x22, [sp, #32]
    a9dc:	ldp	x23, x24, [sp, #48]
    a9e0:	ldp	x25, x26, [sp, #64]
    a9e4:	ldp	x27, x28, [sp, #80]
    a9e8:	ldp	x29, x30, [sp], #224
    a9ec:	ret
    a9f0:	ldr	x0, [x21, #160]
    a9f4:	str	x0, [sp, #120]
    a9f8:	ldr	w0, [x19, #28]
    a9fc:	cmp	w0, #0x0
    aa00:	b.le	aeb0 <grub_mod_fini+0xab60>
    aa04:	mov	x27, #0x0                   	// #0
    aa08:	b	aaa0 <grub_mod_fini+0xa750>
    aa0c:	ldr	w6, [x24, #4]
    aa10:	cmp	w6, #0x0
    aa14:	b.le	aa90 <grub_mod_fini+0xa740>
    aa18:	ldr	x7, [x24, #8]
    aa1c:	mov	x0, #0x0                   	// #0
    aa20:	mov	w1, #0xffffffff            	// #-1
    aa24:	str	w1, [sp, #112]
    aa28:	b	aa48 <grub_mod_fini+0xa6f8>
    aa2c:	ldr	w2, [x5, x4]
    aa30:	ldr	w4, [sp, #108]
    aa34:	cmp	w4, w2
    aa38:	csel	w1, w1, w3, ne  // ne = any
    aa3c:	add	x0, x0, #0x1
    aa40:	cmp	w6, w0
    aa44:	b.le	aa84 <grub_mod_fini+0xa734>
    aa48:	ldr	w3, [x7, x0, lsl #2]
    aa4c:	sbfiz	x4, x3, #4, #32
    aa50:	add	x2, x5, x4
    aa54:	ldrb	w2, [x2, #8]
    aa58:	cmp	w2, #0x8
    aa5c:	b.eq	aa2c <grub_mod_fini+0xa6dc>  // b.none
    aa60:	cmp	w2, #0x9
    aa64:	b.ne	aa3c <grub_mod_fini+0xa6ec>  // b.any
    aa68:	ldr	w2, [x5, x4]
    aa6c:	ldr	w4, [sp, #108]
    aa70:	cmp	w4, w2
    aa74:	ldr	w2, [sp, #112]
    aa78:	csel	w2, w2, w3, ne  // ne = any
    aa7c:	str	w2, [sp, #112]
    aa80:	b	aa3c <grub_mod_fini+0xa6ec>
    aa84:	tbz	w1, #31, ab00 <grub_mod_fini+0xa7b0>
    aa88:	ldr	w0, [sp, #112]
    aa8c:	tbz	w0, #31, ab2c <grub_mod_fini+0xa7dc>
    aa90:	add	x27, x27, #0x1
    aa94:	ldr	w0, [x19, #28]
    aa98:	cmp	w0, w27
    aa9c:	b.le	aeb0 <grub_mod_fini+0xab60>
    aaa0:	ldr	x0, [x19, #32]
    aaa4:	ldrsw	x0, [x0, x27, lsl #2]
    aaa8:	add	x0, x0, x0, lsl #2
    aaac:	ldr	x3, [sp, #120]
    aab0:	add	x1, x3, x0, lsl #2
    aab4:	ldr	w2, [x1, #8]
    aab8:	cmp	w20, w2
    aabc:	b.le	aa90 <grub_mod_fini+0xa740>
    aac0:	ldr	w2, [x1, #4]
    aac4:	cmp	w20, w2
    aac8:	b.gt	aa90 <grub_mod_fini+0xa740>
    aacc:	ldr	x5, [x25]
    aad0:	ldrsw	x0, [x3, x0, lsl #2]
    aad4:	lsl	x0, x0, #4
    aad8:	ldr	w0, [x5, x0]
    aadc:	str	w0, [sp, #108]
    aae0:	ldr	w0, [x1, #12]
    aae4:	cmp	w20, w0
    aae8:	b.eq	aa0c <grub_mod_fini+0xa6bc>  // b.none
    aaec:	ldr	w0, [x24, #4]
    aaf0:	mov	x26, #0x0                   	// #0
    aaf4:	cmp	w0, #0x0
    aaf8:	b.gt	abb0 <grub_mod_fini+0xa860>
    aafc:	b	aa90 <grub_mod_fini+0xa740>
    ab00:	mov	x3, x23
    ab04:	mov	x2, x24
    ab08:	mov	x0, x25
    ab0c:	bl	48b4 <grub_mod_fini+0x4564>
    ab10:	mov	w22, w0
    ab14:	cbnz	w0, a9d0 <grub_mod_fini+0xa680>
    ab18:	ldr	w0, [sp, #112]
    ab1c:	tbnz	w0, #31, aa90 <grub_mod_fini+0xa740>
    ab20:	ldr	w0, [x24, #4]
    ab24:	cmp	w0, #0x0
    ab28:	b.le	aa90 <grub_mod_fini+0xa740>
    ab2c:	ldr	w26, [sp, #136]
    ab30:	b	ab44 <grub_mod_fini+0xa7f4>
    ab34:	add	w26, w26, #0x1
    ab38:	ldr	w0, [x24, #4]
    ab3c:	cmp	w26, w0
    ab40:	b.ge	aa90 <grub_mod_fini+0xa740>  // b.tcont
    ab44:	ldr	x0, [x24, #8]
    ab48:	ldr	w0, [x0, w26, sxtw #2]
    ab4c:	str	w0, [sp, #108]
    ab50:	sbfiz	x22, x0, #4, #32
    ab54:	ldr	x0, [x25, #56]
    ab58:	ldr	w1, [sp, #112]
    ab5c:	add	x0, x0, x22
    ab60:	bl	12e8 <grub_mod_fini+0xf98>
    ab64:	cbnz	w0, ab34 <grub_mod_fini+0xa7e4>
    ab68:	ldr	x0, [x25, #48]
    ab6c:	ldr	w1, [sp, #112]
    ab70:	add	x0, x0, x22
    ab74:	bl	12e8 <grub_mod_fini+0xf98>
    ab78:	cbnz	w0, ab34 <grub_mod_fini+0xa7e4>
    ab7c:	mov	x3, x23
    ab80:	mov	x2, x24
    ab84:	ldr	w1, [sp, #108]
    ab88:	mov	x0, x25
    ab8c:	bl	48b4 <grub_mod_fini+0x4564>
    ab90:	mov	w22, w0
    ab94:	cbnz	w0, a9d0 <grub_mod_fini+0xa680>
    ab98:	sub	w26, w26, #0x1
    ab9c:	b	ab34 <grub_mod_fini+0xa7e4>
    aba0:	add	x26, x26, #0x1
    aba4:	ldr	w0, [x24, #4]
    aba8:	cmp	w0, w26
    abac:	b.le	aa90 <grub_mod_fini+0xa740>
    abb0:	ldr	x0, [x24, #8]
    abb4:	ldr	w1, [x0, x26, lsl #2]
    abb8:	sbfiz	x2, x1, #4, #32
    abbc:	ldr	x3, [x25]
    abc0:	add	x0, x3, x2
    abc4:	ldrb	w0, [x0, #8]
    abc8:	sub	w0, w0, #0x8
    abcc:	cmp	w0, #0x1
    abd0:	b.hi	aba0 <grub_mod_fini+0xa850>  // b.pmore
    abd4:	ldr	w0, [x3, x2]
    abd8:	ldr	w2, [sp, #108]
    abdc:	cmp	w2, w0
    abe0:	b.ne	aba0 <grub_mod_fini+0xa850>  // b.any
    abe4:	mov	x3, x23
    abe8:	mov	x2, x24
    abec:	mov	x0, x25
    abf0:	bl	48b4 <grub_mod_fini+0x4564>
    abf4:	mov	w22, w0
    abf8:	cbz	w0, aba0 <grub_mod_fini+0xa850>
    abfc:	b	a9d0 <grub_mod_fini+0xa680>
    ac00:	ldr	x19, [x1]
    ac04:	mov	x2, x3
    ac08:	mov	x1, x25
    ac0c:	add	x0, sp, #0xdc
    ac10:	bl	9318 <grub_mod_fini+0x8fc8>
    ac14:	str	x0, [x19, x28, lsl #3]
    ac18:	ldr	w22, [sp, #220]
    ac1c:	b	a9d0 <grub_mod_fini+0xa680>
    ac20:	mov	w1, w20
    ac24:	mov	x0, x21
    ac28:	bl	18f0 <grub_mod_fini+0x15a0>
    ac2c:	mov	w1, w0
    ac30:	str	w0, [sp, #164]
    ac34:	cmn	w0, #0x1
    ac38:	b.eq	a9d0 <grub_mod_fini+0xa680>  // b.none
    ac3c:	ldr	x28, [x21, #112]
    ac40:	str	xzr, [sp, #176]
    ac44:	ldr	w0, [x23, #4]
    ac48:	cmp	w0, #0x0
    ac4c:	b.le	aea0 <grub_mod_fini+0xab50>
    ac50:	sbfiz	x0, x1, #2, #32
    ac54:	add	x0, x0, w1, sxtw
    ac58:	lsl	x0, x0, #2
    ac5c:	str	x0, [sp, #168]
    ac60:	mov	x27, #0x0                   	// #0
    ac64:	add	x0, x19, #0x18
    ac68:	str	x0, [sp, #152]
    ac6c:	add	x0, sp, #0xc8
    ac70:	str	x0, [sp, #144]
    ac74:	b	ac90 <grub_mod_fini+0xa940>
    ac78:	cmp	w1, #0x4
    ac7c:	b.eq	acd0 <grub_mod_fini+0xa980>  // b.none
    ac80:	add	x27, x27, #0x1
    ac84:	ldr	w0, [x23, #4]
    ac88:	cmp	w0, w27
    ac8c:	b.le	ae80 <grub_mod_fini+0xab30>
    ac90:	ldr	x0, [x23, #8]
    ac94:	ldr	w24, [x0, x27, lsl #2]
    ac98:	sxtw	x2, w24
    ac9c:	sbfiz	x0, x24, #4, #32
    aca0:	mov	x1, x0
    aca4:	str	x0, [sp, #120]
    aca8:	ldr	x0, [x28]
    acac:	add	x0, x0, x1
    acb0:	ldrb	w1, [x0, #8]
    acb4:	ldr	w0, [x19, #16]
    acb8:	cmp	w24, w0
    acbc:	b.ne	ac78 <grub_mod_fini+0xa928>  // b.any
    acc0:	ldr	w0, [x19, #20]
    acc4:	cmp	w20, w0
    acc8:	b.ne	ac78 <grub_mod_fini+0xa928>  // b.any
    accc:	b	ac80 <grub_mod_fini+0xa930>
    acd0:	ldr	x22, [x21, #160]
    acd4:	ldr	x0, [sp, #168]
    acd8:	add	x22, x22, x0
    acdc:	lsl	x1, x2, #2
    ace0:	str	x1, [sp, #136]
    ace4:	str	x0, [sp, #112]
    ace8:	ldr	w0, [sp, #164]
    acec:	str	w0, [sp, #108]
    acf0:	add	w0, w20, #0x1
    acf4:	str	w0, [sp, #160]
    acf8:	b	ada0 <grub_mod_fini+0xaa50>
    acfc:	ldr	x0, [x28, #40]
    ad00:	ldr	x1, [sp, #120]
    ad04:	add	x0, x0, x1
    ad08:	ldr	x0, [x0, #8]
    ad0c:	ldr	w25, [x0]
    ad10:	b	adcc <grub_mod_fini+0xaa7c>
    ad14:	ldp	x0, x1, [x19]
    ad18:	stp	x0, x1, [sp, #176]
    ad1c:	ldp	x0, x1, [x19, #16]
    ad20:	stp	x0, x1, [sp, #192]
    ad24:	ldr	x0, [x19, #32]
    ad28:	str	x0, [sp, #208]
    ad2c:	ldr	x1, [sp, #152]
    ad30:	ldr	x0, [sp, #144]
    ad34:	bl	3538 <grub_mod_fini+0x31e8>
    ad38:	mov	w22, w0
    ad3c:	cbz	w0, ae20 <grub_mod_fini+0xaad0>
    ad40:	b	ae8c <grub_mod_fini+0xab3c>
    ad44:	ldr	x0, [sp, #176]
    ad48:	ldr	x1, [sp, #128]
    ad4c:	str	x25, [x0, x1]
    ad50:	ldr	w1, [sp, #108]
    ad54:	ldr	x22, [sp, #144]
    ad58:	mov	x0, x22
    ad5c:	bl	12e8 <grub_mod_fini+0xf98>
    ad60:	sub	w1, w0, #0x1
    ad64:	mov	x0, x22
    ad68:	bl	134c <grub_mod_fini+0xffc>
    ad6c:	ldr	x22, [x21, #160]
    ad70:	ldr	x0, [sp, #112]
    ad74:	add	x22, x22, x0
    ad78:	ldr	w0, [sp, #108]
    ad7c:	add	w0, w0, #0x1
    ad80:	str	w0, [sp, #108]
    ad84:	add	x1, x22, #0x14
    ad88:	ldr	x0, [sp, #112]
    ad8c:	add	x0, x0, #0x14
    ad90:	str	x0, [sp, #112]
    ad94:	ldrb	w0, [x22, #16]
    ad98:	cbz	w0, ac80 <grub_mod_fini+0xa930>
    ad9c:	mov	x22, x1
    ada0:	ldr	w0, [x22]
    ada4:	cmp	w24, w0
    ada8:	b.ne	ad78 <grub_mod_fini+0xaa28>  // b.any
    adac:	ldr	w0, [x22, #12]
    adb0:	ldr	w1, [x22, #8]
    adb4:	sub	w0, w0, w1
    adb8:	add	w26, w20, w0
    adbc:	cbz	w0, acfc <grub_mod_fini+0xa9ac>
    adc0:	ldr	x0, [x28, #24]
    adc4:	ldr	x1, [sp, #136]
    adc8:	ldr	w25, [x0, x1]
    adcc:	ldr	w0, [x19, #20]
    add0:	cmp	w26, w0
    add4:	b.gt	ad78 <grub_mod_fini+0xaa28>
    add8:	ldr	x0, [x19]
    addc:	ldr	x0, [x0, w26, sxtw #3]
    ade0:	cbz	x0, ad78 <grub_mod_fini+0xaa28>
    ade4:	mov	w1, w25
    ade8:	add	x0, x0, #0x8
    adec:	bl	12e8 <grub_mod_fini+0xf98>
    adf0:	cbz	w0, ad78 <grub_mod_fini+0xaa28>
    adf4:	mov	w5, w26
    adf8:	mov	w4, w25
    adfc:	mov	w3, w20
    ae00:	mov	w2, w24
    ae04:	ldr	x1, [sp, #152]
    ae08:	mov	x0, x21
    ae0c:	bl	1970 <grub_mod_fini+0x1620>
    ae10:	and	w0, w0, #0xff
    ae14:	cbnz	w0, ad78 <grub_mod_fini+0xaa28>
    ae18:	ldr	x0, [sp, #176]
    ae1c:	cbz	x0, ad14 <grub_mod_fini+0xa9c4>
    ae20:	str	w24, [sp, #192]
    ae24:	str	w20, [sp, #196]
    ae28:	ldr	w1, [sp, #108]
    ae2c:	ldr	x0, [sp, #144]
    ae30:	bl	2e94 <grub_mod_fini+0x2b44>
    ae34:	and	w0, w0, #0xff
    ae38:	cbz	w0, ae88 <grub_mod_fini+0xab38>
    ae3c:	ldr	x0, [sp, #176]
    ae40:	ldr	x1, [sp, #128]
    ae44:	ldr	x25, [x0, x1]
    ae48:	add	x1, sp, #0xb0
    ae4c:	mov	x0, x21
    ae50:	bl	aec8 <grub_mod_fini+0xab78>
    ae54:	mov	w22, w0
    ae58:	cbnz	w0, ae8c <grub_mod_fini+0xab3c>
    ae5c:	ldr	x1, [x19, #8]
    ae60:	cbz	x1, ad44 <grub_mod_fini+0xa9f4>
    ae64:	ldr	w3, [sp, #160]
    ae68:	ldr	x2, [sp, #176]
    ae6c:	mov	x0, x28
    ae70:	bl	9774 <grub_mod_fini+0x9424>
    ae74:	mov	w22, w0
    ae78:	cbz	w0, ad44 <grub_mod_fini+0xa9f4>
    ae7c:	b	ae8c <grub_mod_fini+0xab3c>
    ae80:	mov	w22, #0x0                   	// #0
    ae84:	b	ae8c <grub_mod_fini+0xab3c>
    ae88:	mov	w22, #0xc                   	// #12
    ae8c:	ldr	x0, [sp, #176]
    ae90:	cbz	x0, a9d0 <grub_mod_fini+0xa680>
    ae94:	ldr	x0, [sp, #208]
    ae98:	bl	0 <grub_free>
    ae9c:	b	a9d0 <grub_mod_fini+0xa680>
    aea0:	mov	w22, #0x0                   	// #0
    aea4:	b	a9d0 <grub_mod_fini+0xa680>
    aea8:	ldr	w22, [sp, #136]
    aeac:	b	a9d0 <grub_mod_fini+0xa680>
    aeb0:	str	wzr, [sp, #220]
    aeb4:	b	a980 <grub_mod_fini+0xa630>
    aeb8:	mov	w22, #0xc                   	// #12
    aebc:	b	a9d0 <grub_mod_fini+0xa680>
    aec0:	mov	w22, #0xc                   	// #12
    aec4:	b	a9d0 <grub_mod_fini+0xa680>
    aec8:	stp	x29, x30, [sp, #-160]!
    aecc:	mov	x29, sp
    aed0:	stp	x19, x20, [sp, #16]
    aed4:	stp	x21, x22, [sp, #32]
    aed8:	mov	x20, x0
    aedc:	mov	x22, x1
    aee0:	ldr	w19, [x1, #20]
    aee4:	ldr	w1, [x1, #16]
    aee8:	add	x0, sp, #0x90
    aeec:	bl	2e40 <grub_mod_fini+0x2af0>
    aef0:	mov	w21, w0
    aef4:	cbnz	w0, b144 <grub_mod_fini+0xadf4>
    aef8:	add	x3, sp, #0x90
    aefc:	mov	w2, w19
    af00:	mov	x1, x22
    af04:	mov	x0, x20
    af08:	bl	a884 <grub_mod_fini+0xa534>
    af0c:	str	w0, [sp, #140]
    af10:	cbnz	w0, b124 <grub_mod_fini+0xadd4>
    af14:	stp	x23, x24, [sp, #48]
    af18:	stp	x25, x26, [sp, #64]
    af1c:	stp	x27, x28, [sp, #80]
    af20:	sbfiz	x24, x19, #3, #32
    af24:	str	w0, [sp, #112]
    af28:	str	w0, [sp, #136]
    af2c:	add	x0, x22, #0x18
    af30:	str	x0, [sp, #128]
    af34:	b	b0ac <grub_mod_fini+0xad5c>
    af38:	mov	x2, x24
    af3c:	mov	w1, #0x0                   	// #0
    af40:	bl	0 <grub_memset>
    af44:	ldr	x0, [sp, #152]
    af48:	bl	0 <grub_free>
    af4c:	ldr	w21, [sp, #140]
    af50:	ldp	x23, x24, [sp, #48]
    af54:	ldp	x25, x26, [sp, #64]
    af58:	ldp	x27, x28, [sp, #80]
    af5c:	b	b144 <grub_mod_fini+0xadf4>
    af60:	ldr	w0, [x22, #20]
    af64:	str	w0, [sp, #116]
    af68:	ldr	x0, [x20, #112]
    af6c:	mov	w3, w19
    af70:	mov	x2, x20
    af74:	mov	w1, w23
    af78:	str	x0, [sp, #120]
    af7c:	bl	5934 <grub_mod_fini+0x55e4>
    af80:	mov	w21, w0
    af84:	cmp	w0, #0x0
    af88:	b.le	b084 <grub_mod_fini+0xad34>
    af8c:	add	w0, w19, w0
    af90:	ldr	w2, [sp, #116]
    af94:	cmp	w2, w0
    af98:	b.lt	afc0 <grub_mod_fini+0xac70>  // b.tstop
    af9c:	ldr	x1, [x22]
    afa0:	ldr	x0, [x1, w0, sxtw #3]
    afa4:	cbz	x0, b03c <grub_mod_fini+0xacec>
    afa8:	ldr	x1, [sp, #120]
    afac:	ldr	x1, [x1, #24]
    afb0:	ldr	w1, [x1, x28, lsl #2]
    afb4:	add	x0, x0, #0x8
    afb8:	bl	12e8 <grub_mod_fini+0xf98>
    afbc:	cbz	w0, b03c <grub_mod_fini+0xacec>
    afc0:	ldr	w0, [x22, #28]
    afc4:	cbz	w0, aff0 <grub_mod_fini+0xaca0>
    afc8:	ldr	x0, [x25, #24]
    afcc:	mov	w5, w19
    afd0:	mov	w4, w23
    afd4:	add	w3, w19, w21
    afd8:	ldr	w2, [x0, x28, lsl #2]
    afdc:	ldr	x1, [sp, #128]
    afe0:	mov	x0, x20
    afe4:	bl	1970 <grub_mod_fini+0x1620>
    afe8:	and	w0, w0, #0xff
    afec:	cbnz	w0, b004 <grub_mod_fini+0xacb4>
    aff0:	mov	w1, w23
    aff4:	add	x0, sp, #0x90
    aff8:	bl	2e94 <grub_mod_fini+0x2b44>
    affc:	and	w0, w0, #0xff
    b000:	cbz	w0, b12c <grub_mod_fini+0xaddc>
    b004:	add	x26, x26, #0x1
    b008:	ldr	w0, [x27, #28]
    b00c:	cmp	w0, w26
    b010:	b.le	b08c <grub_mod_fini+0xad3c>
    b014:	ldr	x0, [x27, #32]
    b018:	ldr	w23, [x0, x26, lsl #2]
    b01c:	sxtw	x28, w23
    b020:	sbfiz	x0, x23, #4, #32
    b024:	mov	x1, x0
    b028:	str	x0, [sp, #104]
    b02c:	ldr	x0, [x25]
    b030:	add	x0, x0, x1
    b034:	ldrb	w0, [x0, #10]
    b038:	tbnz	w0, #4, af60 <grub_mod_fini+0xac10>
    b03c:	ldr	x1, [x25]
    b040:	mov	w2, w19
    b044:	ldr	x0, [sp, #104]
    b048:	add	x1, x1, x0
    b04c:	mov	x0, x20
    b050:	bl	27a8 <grub_mod_fini+0x2458>
    b054:	and	w0, w0, #0xff
    b058:	cbz	w0, b004 <grub_mod_fini+0xacb4>
    b05c:	ldr	x0, [x22]
    b060:	ldr	x0, [x0, x24]
    b064:	cbz	x0, b004 <grub_mod_fini+0xacb4>
    b068:	ldr	x1, [x25, #24]
    b06c:	ldr	w1, [x1, x28, lsl #2]
    b070:	add	x0, x0, #0x8
    b074:	bl	12e8 <grub_mod_fini+0xf98>
    b078:	cbz	w0, b004 <grub_mod_fini+0xacb4>
    b07c:	mov	w21, #0x1                   	// #1
    b080:	b	afc0 <grub_mod_fini+0xac70>
    b084:	cbz	w0, b03c <grub_mod_fini+0xacec>
    b088:	b	afc0 <grub_mod_fini+0xac70>
    b08c:	add	x3, sp, #0x90
    b090:	mov	w2, w19
    b094:	mov	x1, x22
    b098:	mov	x0, x20
    b09c:	bl	a884 <grub_mod_fini+0xa534>
    b0a0:	mov	w21, w0
    b0a4:	sub	x24, x24, #0x8
    b0a8:	cbnz	w0, b158 <grub_mod_fini+0xae08>
    b0ac:	cmp	w19, #0x0
    b0b0:	b.le	b110 <grub_mod_fini+0xadc0>
    b0b4:	ldr	x0, [x22]
    b0b8:	ldr	x1, [x0, x24]
    b0bc:	cmp	x1, #0x0
    b0c0:	ldr	w1, [sp, #112]
    b0c4:	ldr	w2, [sp, #136]
    b0c8:	csinc	w1, w2, w1, ne  // ne = any
    b0cc:	mov	w2, w1
    b0d0:	str	w1, [sp, #112]
    b0d4:	ldr	w1, [x20, #168]
    b0d8:	cmp	w1, w2
    b0dc:	b.lt	af38 <grub_mod_fini+0xabe8>  // b.tstop
    b0e0:	str	wzr, [sp, #148]
    b0e4:	sub	w19, w19, #0x1
    b0e8:	ldr	x0, [x20, #136]
    b0ec:	add	x0, x0, x24
    b0f0:	ldur	x27, [x0, #-8]
    b0f4:	cbz	x27, b08c <grub_mod_fini+0xad3c>
    b0f8:	ldr	x25, [x20, #112]
    b0fc:	ldr	w0, [x27, #28]
    b100:	cmp	w0, #0x0
    b104:	b.le	b08c <grub_mod_fini+0xad3c>
    b108:	mov	x26, #0x0                   	// #0
    b10c:	b	b014 <grub_mod_fini+0xacc4>
    b110:	ldr	w21, [sp, #140]
    b114:	ldp	x23, x24, [sp, #48]
    b118:	ldp	x25, x26, [sp, #64]
    b11c:	ldp	x27, x28, [sp, #80]
    b120:	b	b13c <grub_mod_fini+0xadec>
    b124:	ldr	w21, [sp, #140]
    b128:	b	b13c <grub_mod_fini+0xadec>
    b12c:	mov	w21, #0xc                   	// #12
    b130:	ldp	x23, x24, [sp, #48]
    b134:	ldp	x25, x26, [sp, #64]
    b138:	ldp	x27, x28, [sp, #80]
    b13c:	ldr	x0, [sp, #152]
    b140:	bl	0 <grub_free>
    b144:	mov	w0, w21
    b148:	ldp	x19, x20, [sp, #16]
    b14c:	ldp	x21, x22, [sp, #32]
    b150:	ldp	x29, x30, [sp], #160
    b154:	ret
    b158:	ldp	x23, x24, [sp, #48]
    b15c:	ldp	x25, x26, [sp, #64]
    b160:	ldp	x27, x28, [sp, #80]
    b164:	b	b13c <grub_mod_fini+0xadec>
    b168:	sub	sp, sp, #0x2a0
    b16c:	stp	x29, x30, [sp]
    b170:	mov	x29, sp
    b174:	stp	x19, x20, [sp, #16]
    b178:	stp	x21, x22, [sp, #32]
    b17c:	stp	x23, x24, [sp, #48]
    b180:	stp	x25, x26, [sp, #64]
    b184:	stp	x27, x28, [sp, #80]
    b188:	mov	x25, x0
    b18c:	str	x1, [sp, #160]
    b190:	str	w2, [sp, #152]
    b194:	mov	w19, w3
    b198:	mov	w21, w4
    b19c:	mov	w22, w5
    b1a0:	str	x7, [sp, #256]
    b1a4:	ldr	w0, [sp, #672]
    b1a8:	str	w0, [sp, #136]
    b1ac:	ldr	x28, [x25]
    b1b0:	add	x0, sp, #0x200
    b1b4:	stp	xzr, xzr, [x0, #-40]
    b1b8:	stp	xzr, xzr, [x0, #-24]
    b1bc:	stp	xzr, xzr, [x0, #-8]
    b1c0:	add	x0, sp, #0x300
    b1c4:	stp	xzr, xzr, [x0, #-248]
    b1c8:	stp	xzr, xzr, [x0, #-232]
    b1cc:	stp	xzr, xzr, [x0, #-216]
    b1d0:	stp	xzr, xzr, [x0, #-200]
    b1d4:	stp	xzr, xzr, [x0, #-184]
    b1d8:	stp	xzr, xzr, [x0, #-168]
    b1dc:	stp	xzr, xzr, [x0, #-152]
    b1e0:	stp	xzr, xzr, [x0, #-136]
    b1e4:	stp	xzr, xzr, [x0, #-120]
    b1e8:	str	x28, [sp, #584]
    b1ec:	ldr	x24, [x25, #32]
    b1f0:	cbz	x24, b208 <grub_mod_fini+0xaeb8>
    b1f4:	ldrb	w0, [x25, #56]
    b1f8:	tst	x0, #0x8
    b1fc:	ccmp	w3, w4, #0x4, ne  // ne = any
    b200:	b.ne	b510 <grub_mod_fini+0xb1c0>  // b.any
    b204:	mov	x24, #0x0                   	// #0
    b208:	ldr	x1, [x25, #48]
    b20c:	sub	w0, w6, #0x1
    b210:	sub	w0, w0, w1
    b214:	cmp	x1, x6
    b218:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
    b21c:	str	w0, [sp, #204]
    b220:	ldr	x0, [x25, #16]
    b224:	cbz	x0, d1d8 <grub_mod_fini+0xce88>
    b228:	ldr	x0, [x28, #72]
    b22c:	cbz	x0, d1e4 <grub_mod_fini+0xce94>
    b230:	ldr	x1, [x28, #80]
    b234:	cbz	x1, d1f0 <grub_mod_fini+0xcea0>
    b238:	ldr	x2, [x28, #88]
    b23c:	cbz	x2, d1fc <grub_mod_fini+0xceac>
    b240:	ldr	x3, [x28, #96]
    b244:	cbz	x3, d208 <grub_mod_fini+0xceb8>
    b248:	ldr	w0, [x0, #12]
    b24c:	cbnz	w0, b284 <grub_mod_fini+0xaf34>
    b250:	ldr	w0, [x1, #12]
    b254:	cbnz	w0, b284 <grub_mod_fini+0xaf34>
    b258:	ldr	w1, [x2, #12]
    b25c:	cbz	w1, b268 <grub_mod_fini+0xaf18>
    b260:	ldrsb	w1, [x25, #56]
    b264:	tbnz	w1, #31, b284 <grub_mod_fini+0xaf34>
    b268:	cmp	w19, #0x0
    b26c:	mov	w1, #0x1                   	// #1
    b270:	str	w1, [sp, #144]
    b274:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    b278:	b.ne	b79c <grub_mod_fini+0xb44c>  // b.any
    b27c:	mov	w21, w0
    b280:	mov	w19, w0
    b284:	mov	w20, #0x1                   	// #1
    b288:	ldr	w0, [sp, #204]
    b28c:	subs	x0, x6, w0, sxtw
    b290:	str	x0, [sp, #192]
    b294:	b.ne	b2a4 <grub_mod_fini+0xaf54>  // b.any
    b298:	ldr	w0, [x28, #140]
    b29c:	cmp	w0, #0x0
    b2a0:	cset	w20, ne  // ne = any
    b2a4:	ldr	x5, [x25, #40]
    b2a8:	str	x5, [sp, #208]
    b2ac:	ldr	x0, [x25, #24]
    b2b0:	ldr	w2, [x28, #164]
    b2b4:	ldr	x1, [x28, #16]
    b2b8:	add	w1, w1, #0x1
    b2bc:	cmp	w1, w2
    b2c0:	csel	w1, w1, w2, ge  // ge = tcont
    b2c4:	ldr	w4, [sp, #152]
    b2c8:	add	w3, w4, #0x1
    b2cc:	cmp	w1, w3
    b2d0:	csel	w1, w1, w3, le
    b2d4:	ldr	x3, [sp, #160]
    b2d8:	str	x3, [sp, #472]
    b2dc:	str	w4, [sp, #536]
    b2e0:	str	w4, [sp, #532]
    b2e4:	str	x5, [sp, #552]
    b2e8:	and	x3, x0, #0x400000
    b2ec:	ubfx	w0, w0, #22, #1
    b2f0:	strb	w0, [sp, #568]
    b2f4:	orr	x0, x3, x5
    b2f8:	cmp	x0, #0x0
    b2fc:	cset	w0, ne  // ne = any
    b300:	strb	w0, [sp, #571]
    b304:	str	w2, [sp, #576]
    b308:	ldrb	w0, [x28, #160]
    b30c:	ubfx	x2, x0, #2, #1
    b310:	strb	w2, [sp, #569]
    b314:	ubfx	x0, x0, #3, #1
    b318:	strb	w0, [sp, #570]
    b31c:	str	w4, [sp, #544]
    b320:	str	w4, [sp, #540]
    b324:	add	x0, sp, #0x1d8
    b328:	bl	2990 <grub_mod_fini+0x2640>
    b32c:	mov	w1, w0
    b330:	str	w0, [sp, #184]
    b334:	cbnz	w0, d15c <grub_mod_fini+0xce0c>
    b338:	add	x0, x28, #0xa8
    b33c:	str	x0, [sp, #560]
    b340:	ldrb	w0, [x28, #160]
    b344:	ubfx	x0, x0, #4, #1
    b348:	strb	w0, [sp, #574]
    b34c:	ldrb	w0, [sp, #571]
    b350:	cbz	w0, d2b0 <grub_mod_fini+0xcf60>
    b354:	mov	w0, w1
    b358:	str	w0, [sp, #516]
    b35c:	str	w0, [sp, #520]
    b360:	str	w22, [sp, #544]
    b364:	str	w22, [sp, #540]
    b368:	ldrb	w0, [x25, #56]
    b36c:	ubfx	x0, x0, #7, #1
    b370:	strb	w0, [sp, #573]
    b374:	ldr	w0, [x28, #140]
    b378:	lsl	w22, w0, #1
    b37c:	ldr	w1, [sp, #136]
    b380:	str	w1, [sp, #592]
    b384:	mov	w1, #0xffffffff            	// #-1
    b388:	str	w1, [sp, #596]
    b38c:	cmp	wzr, w0, lsl #1
    b390:	b.ge	b3c4 <grub_mod_fini+0xb074>  // b.tcont
    b394:	sxtw	x23, w22
    b398:	add	x0, x23, w22, sxtw #2
    b39c:	lsl	x0, x0, #2
    b3a0:	bl	0 <grub_malloc>
    b3a4:	str	x0, [sp, #632]
    b3a8:	lsl	x0, x23, #3
    b3ac:	bl	0 <grub_malloc>
    b3b0:	str	x0, [sp, #656]
    b3b4:	ldr	x1, [sp, #632]
    b3b8:	cmp	x1, #0x0
    b3bc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b3c0:	b.eq	d168 <grub_mod_fini+0xce18>  // b.none
    b3c4:	str	w22, [sp, #624]
    b3c8:	mov	w0, #0x1                   	// #1
    b3cc:	str	w0, [sp, #640]
    b3d0:	str	w22, [sp, #648]
    b3d4:	ldr	x0, [sp, #192]
    b3d8:	cmp	x0, #0x1
    b3dc:	b.ls	b51c <grub_mod_fini+0xb1cc>  // b.plast
    b3e0:	ldr	w0, [sp, #524]
    b3e4:	mov	w1, #0x7ffffffe            	// #2147483646
    b3e8:	cmp	w0, w1
    b3ec:	b.hi	d174 <grub_mod_fini+0xce24>  // b.pmore
    b3f0:	add	w0, w0, #0x1
    b3f4:	sbfiz	x0, x0, #3, #32
    b3f8:	bl	0 <grub_malloc>
    b3fc:	str	x0, [sp, #608]
    b400:	cbz	x0, d180 <grub_mod_fini+0xce30>
    b404:	str	w19, [sp, #668]
    b408:	ldr	x0, [sp, #136]
    b40c:	tst	x0, #0x1
    b410:	mov	w0, #0x4                   	// #4
    b414:	mov	w1, #0x6                   	// #6
    b418:	csel	w0, w0, w1, ne  // ne = any
    b41c:	str	w0, [sp, #548]
    b420:	mov	w0, #0x1                   	// #1
    b424:	cmp	w19, w21
    b428:	cneg	w0, w0, gt
    b42c:	str	w0, [sp, #188]
    b430:	csel	w0, w19, w21, le
    b434:	str	w0, [sp, #148]
    b438:	csel	w0, w19, w21, ge  // ge = tcont
    b43c:	str	w0, [sp, #128]
    b440:	ldr	w0, [x28, #164]
    b444:	str	w0, [sp, #240]
    b448:	mov	w1, #0x8                   	// #8
    b44c:	str	w1, [sp, #156]
    b450:	cbz	x24, b4a4 <grub_mod_fini+0xb154>
    b454:	mov	w2, #0x4                   	// #4
    b458:	cmp	w0, #0x1
    b45c:	b.eq	b47c <grub_mod_fini+0xb12c>  // b.none
    b460:	ldr	x0, [x25, #24]
    b464:	and	x0, x0, #0x400000
    b468:	ldr	x1, [sp, #208]
    b46c:	orr	x0, x1, x0
    b470:	cmp	x0, #0x0
    b474:	ldr	w0, [sp, #184]
    b478:	csel	w2, w0, w2, ne  // ne = any
    b47c:	cmp	w19, w21
    b480:	mov	w0, #0x2                   	// #2
    b484:	ldr	w1, [sp, #184]
    b488:	csel	w0, w1, w0, gt
    b48c:	ldr	x1, [sp, #208]
    b490:	cmp	x1, #0x0
    b494:	cset	w1, ne  // ne = any
    b498:	orr	w1, w1, w2
    b49c:	orr	w0, w1, w0
    b4a0:	str	w0, [sp, #156]
    b4a4:	ldr	w0, [sp, #148]
    b4a8:	cmp	w19, w0
    b4ac:	cset	w1, lt  // lt = tstop
    b4b0:	ldr	w0, [sp, #128]
    b4b4:	cmp	w19, w0
    b4b8:	cset	w0, gt
    b4bc:	orr	w0, w1, w0
    b4c0:	str	w0, [sp, #200]
    b4c4:	cbnz	w0, d18c <grub_mod_fini+0xce3c>
    b4c8:	str	w20, [sp, #100]
    b4cc:	cmp	w19, w21
    b4d0:	add	x0, sp, #0x29c
    b4d4:	csel	x0, x0, xzr, le
    b4d8:	str	x0, [sp, #248]
    b4dc:	cmp	x0, #0x0
    b4e0:	cset	w0, ne  // ne = any
    b4e4:	str	w0, [sp, #244]
    b4e8:	ldr	x0, [sp, #160]
    b4ec:	sub	x0, x0, #0x1
    b4f0:	str	x0, [sp, #272]
    b4f4:	add	x0, sp, #0x190
    b4f8:	str	x0, [sp, #216]
    b4fc:	str	x0, [sp, #288]
    b500:	str	x24, [sp, #176]
    b504:	str	x28, [sp, #168]
    b508:	str	x25, [sp, #224]
    b50c:	b	d318 <grub_mod_fini+0xcfc8>
    b510:	tst	x0, #0x1
    b514:	csel	x24, x24, xzr, eq  // eq = none
    b518:	b	b208 <grub_mod_fini+0xaeb8>
    b51c:	ldrb	w0, [x28, #160]
    b520:	tbnz	w0, #1, b3e0 <grub_mod_fini+0xb090>
    b524:	str	xzr, [sp, #608]
    b528:	b	b404 <grub_mod_fini+0xb0b4>
    b52c:	cmp	w0, #0x3
    b530:	b.gt	b68c <grub_mod_fini+0xb33c>
    b534:	ldr	w20, [sp, #184]
    b538:	ldr	x25, [sp, #176]
    b53c:	ldr	w22, [sp, #188]
    b540:	ldr	w23, [sp, #148]
    b544:	ldr	w24, [sp, #128]
    b548:	ldr	w21, [sp, #152]
    b54c:	b	b820 <grub_mod_fini+0xb4d0>
    b550:	ldr	w2, [sp, #668]
    b554:	ldr	w1, [sp, #128]
    b558:	cmp	w2, w1
    b55c:	b.ge	b5b8 <grub_mod_fini+0xb268>  // b.tcont
    b560:	add	w0, w2, #0x1
    b564:	sxtw	x0, w0
    b568:	mvn	w3, w2
    b56c:	add	w3, w3, w1
    b570:	sxtw	x1, w2
    b574:	add	x1, x1, #0x2
    b578:	add	x3, x3, x1
    b57c:	ldr	w4, [sp, #200]
    b580:	mov	w5, #0x1                   	// #1
    b584:	ldr	x25, [sp, #176]
    b588:	ldr	x6, [sp, #208]
    b58c:	ldr	x7, [sp, #272]
    b590:	ldrb	w1, [x7, x0]
    b594:	ldrb	w1, [x6, x1]
    b598:	ldrb	w1, [x25, x1]
    b59c:	cbnz	w1, b6d4 <grub_mod_fini+0xb384>
    b5a0:	mov	w2, w0
    b5a4:	add	x0, x0, #0x1
    b5a8:	mov	w4, w5
    b5ac:	cmp	x0, x3
    b5b0:	b.ne	b590 <grub_mod_fini+0xb240>  // b.any
    b5b4:	str	w2, [sp, #668]
    b5b8:	ldr	w0, [sp, #668]
    b5bc:	ldr	w1, [sp, #128]
    b5c0:	cmp	w0, w1
    b5c4:	b.eq	b6ec <grub_mod_fini+0xb39c>  // b.none
    b5c8:	ldr	w2, [sp, #136]
    b5cc:	ldr	w1, [sp, #668]
    b5d0:	add	x0, sp, #0x1d8
    b5d4:	bl	738c <grub_mod_fini+0x703c>
    b5d8:	str	w0, [sp, #144]
    b5dc:	cbnz	w0, d1b4 <grub_mod_fini+0xce64>
    b5e0:	ldr	w0, [sp, #240]
    b5e4:	cmp	w0, #0x1
    b5e8:	b.eq	b604 <grub_mod_fini+0xb2b4>  // b.none
    b5ec:	ldr	w0, [sp, #516]
    b5f0:	cbz	w0, b604 <grub_mod_fini+0xb2b4>
    b5f4:	ldr	x0, [sp, #488]
    b5f8:	ldr	w0, [x0]
    b5fc:	cmn	w0, #0x1
    b600:	b.eq	d2f4 <grub_mod_fini+0xcfa4>  // b.none
    b604:	str	wzr, [sp, #640]
    b608:	str	wzr, [sp, #620]
    b60c:	str	wzr, [sp, #616]
    b610:	ldr	x19, [sp, #584]
    b614:	ldr	w0, [sp, #528]
    b618:	mov	w1, w0
    b61c:	str	w0, [sp, #120]
    b620:	str	wzr, [sp, #364]
    b624:	ldr	x27, [x19, #72]
    b628:	ldrsb	w0, [x27, #80]
    b62c:	tbz	w0, #31, b868 <grub_mod_fini+0xb518>
    b630:	ldr	w2, [sp, #592]
    b634:	sub	w1, w1, #0x1
    b638:	add	x0, sp, #0x1d8
    b63c:	bl	26b8 <grub_mod_fini+0x2368>
    b640:	tbnz	w0, #0, b860 <grub_mod_fini+0xb510>
    b644:	cbz	w0, b868 <grub_mod_fini+0xb518>
    b648:	and	w1, w0, #0x6
    b64c:	cmp	w1, #0x6
    b650:	b.eq	b8bc <grub_mod_fini+0xb56c>  // b.none
    b654:	tbnz	w0, #1, b8c4 <grub_mod_fini+0xb574>
    b658:	tbz	w0, #2, b868 <grub_mod_fini+0xb518>
    b65c:	mov	w3, w0
    b660:	ldr	x2, [x27, #56]
    b664:	mov	x1, x19
    b668:	add	x0, sp, #0x16c
    b66c:	bl	4294 <grub_mod_fini+0x3f44>
    b670:	mov	x27, x0
    b674:	cbnz	x0, b868 <grub_mod_fini+0xb518>
    b678:	ldr	x28, [sp, #168]
    b67c:	ldr	w0, [sp, #364]
    b680:	cmp	w0, #0xc
    b684:	b.eq	d264 <grub_mod_fini+0xcf14>  // b.none
    b688:	b	d294 <grub_mod_fini+0xcf44>
    b68c:	ldr	w4, [sp, #668]
    b690:	ldr	w0, [sp, #148]
    b694:	cmp	w0, w4
    b698:	b.gt	b6c4 <grub_mod_fini+0xb374>
    b69c:	sxtw	x0, w4
    b6a0:	ldr	w6, [sp, #200]
    b6a4:	ldr	w7, [sp, #184]
    b6a8:	mov	w8, #0x1                   	// #1
    b6ac:	ldr	x25, [sp, #176]
    b6b0:	ldr	x9, [sp, #208]
    b6b4:	ldr	w11, [sp, #148]
    b6b8:	ldr	x12, [sp, #160]
    b6bc:	ldr	w10, [sp, #152]
    b6c0:	b	b758 <grub_mod_fini+0xb408>
    b6c4:	ldr	x28, [sp, #168]
    b6c8:	mov	w0, #0x1                   	// #1
    b6cc:	str	w0, [sp, #144]
    b6d0:	b	b784 <grub_mod_fini+0xb434>
    b6d4:	cbz	w4, b5c8 <grub_mod_fini+0xb278>
    b6d8:	str	w2, [sp, #668]
    b6dc:	b	b5b8 <grub_mod_fini+0xb268>
    b6e0:	cbz	w4, b5c8 <grub_mod_fini+0xb278>
    b6e4:	str	w2, [sp, #668]
    b6e8:	b	b5b8 <grub_mod_fini+0xb268>
    b6ec:	ldr	w1, [sp, #184]
    b6f0:	ldr	w2, [sp, #152]
    b6f4:	cmp	w0, w2
    b6f8:	b.ge	b704 <grub_mod_fini+0xb3b4>  // b.tcont
    b6fc:	ldr	x1, [sp, #160]
    b700:	ldrb	w1, [x1, w0, sxtw]
    b704:	sxtw	x0, w1
    b708:	ldr	x2, [sp, #208]
    b70c:	cbz	x2, b714 <grub_mod_fini+0xb3c4>
    b710:	ldrb	w0, [x2, w1, sxtw]
    b714:	ldr	x1, [sp, #176]
    b718:	ldrb	w0, [x1, x0]
    b71c:	cbnz	w0, b5c8 <grub_mod_fini+0xb278>
    b720:	ldr	x28, [sp, #168]
    b724:	mov	w0, #0x1                   	// #1
    b728:	str	w0, [sp, #144]
    b72c:	b	b784 <grub_mod_fini+0xb434>
    b730:	sxtw	x2, w1
    b734:	cbz	x9, b73c <grub_mod_fini+0xb3ec>
    b738:	ldrb	w2, [x9, w1, sxtw]
    b73c:	ldrb	w1, [x25, x2]
    b740:	cbnz	w1, b7c0 <grub_mod_fini+0xb470>
    b744:	sub	w4, w3, #0x1
    b748:	sub	x0, x0, #0x1
    b74c:	mov	w6, w8
    b750:	cmp	w11, w0
    b754:	b.gt	b774 <grub_mod_fini+0xb424>
    b758:	mov	w3, w0
    b75c:	mov	w5, w0
    b760:	mov	w1, w7
    b764:	cmp	w10, w0
    b768:	b.le	b730 <grub_mod_fini+0xb3e0>
    b76c:	ldrb	w1, [x12, x0]
    b770:	b	b730 <grub_mod_fini+0xb3e0>
    b774:	ldr	x28, [sp, #168]
    b778:	str	w4, [sp, #668]
    b77c:	mov	w0, #0x1                   	// #1
    b780:	str	w0, [sp, #144]
    b784:	ldr	x0, [sp, #608]
    b788:	bl	0 <grub_free>
    b78c:	ldr	w0, [x28, #140]
    b790:	cbnz	w0, d1bc <grub_mod_fini+0xce6c>
    b794:	add	x0, sp, #0x1d8
    b798:	bl	45b4 <grub_mod_fini+0x4264>
    b79c:	ldr	w0, [sp, #144]
    b7a0:	ldp	x19, x20, [sp, #16]
    b7a4:	ldp	x21, x22, [sp, #32]
    b7a8:	ldp	x23, x24, [sp, #48]
    b7ac:	ldp	x25, x26, [sp, #64]
    b7b0:	ldp	x27, x28, [sp, #80]
    b7b4:	ldp	x29, x30, [sp]
    b7b8:	add	sp, sp, #0x2a0
    b7bc:	ret
    b7c0:	cbz	w6, b7c8 <grub_mod_fini+0xb478>
    b7c4:	str	w4, [sp, #668]
    b7c8:	ldr	w0, [sp, #148]
    b7cc:	cmp	w5, w0
    b7d0:	b.ge	b5c8 <grub_mod_fini+0xb278>  // b.tcont
    b7d4:	ldr	x28, [sp, #168]
    b7d8:	mov	w0, #0x1                   	// #1
    b7dc:	str	w0, [sp, #144]
    b7e0:	b	b784 <grub_mod_fini+0xb434>
    b7e4:	ldr	w2, [sp, #136]
    b7e8:	mov	w1, w19
    b7ec:	add	x0, sp, #0x1d8
    b7f0:	bl	738c <grub_mod_fini+0x703c>
    b7f4:	cbnz	w0, d1a8 <grub_mod_fini+0xce58>
    b7f8:	ldr	w0, [sp, #512]
    b7fc:	sub	w0, w19, w0
    b800:	b	b838 <grub_mod_fini+0xb4e8>
    b804:	ldrb	w0, [x25, w1, sxtw]
    b808:	cbnz	w0, b5c8 <grub_mod_fini+0xb278>
    b80c:	add	w19, w19, w22
    b810:	str	w19, [sp, #668]
    b814:	cmp	w19, w23
    b818:	ccmp	w19, w24, #0x0, ge  // ge = tcont
    b81c:	b.gt	b850 <grub_mod_fini+0xb500>
    b820:	ldr	w19, [sp, #668]
    b824:	ldr	w0, [sp, #512]
    b828:	sub	w0, w19, w0
    b82c:	ldr	w1, [sp, #520]
    b830:	cmp	w1, w0
    b834:	b.ls	b7e4 <grub_mod_fini+0xb494>  // b.plast
    b838:	mov	w1, w20
    b83c:	cmp	w19, w21
    b840:	b.ge	b804 <grub_mod_fini+0xb4b4>  // b.tcont
    b844:	ldr	x1, [sp, #480]
    b848:	ldrb	w1, [x1, w0, uxtw]
    b84c:	b	b804 <grub_mod_fini+0xb4b4>
    b850:	ldr	x28, [sp, #168]
    b854:	mov	w0, #0x1                   	// #1
    b858:	str	w0, [sp, #144]
    b85c:	b	b784 <grub_mod_fini+0xb434>
    b860:	ldr	x27, [x19, #80]
    b864:	cbz	x27, d290 <grub_mod_fini+0xcf40>
    b868:	ldr	x0, [sp, #608]
    b86c:	cbz	x0, b920 <grub_mod_fini+0xb5d0>
    b870:	ldr	w1, [sp, #120]
    b874:	str	x27, [x0, w1, sxtw #3]
    b878:	ldr	w0, [x19, #140]
    b87c:	ldr	w1, [sp, #244]
    b880:	str	w1, [sp, #104]
    b884:	cbnz	w0, b8cc <grub_mod_fini+0xb57c>
    b888:	ldrb	w0, [x27, #80]
    b88c:	ldr	w28, [sp, #144]
    b890:	mov	w26, #0xffffffff            	// #-1
    b894:	tbnz	w0, #4, b92c <grub_mod_fini+0xb5dc>
    b898:	ldr	w1, [sp, #528]
    b89c:	ldr	x0, [sp, #248]
    b8a0:	str	x0, [sp, #112]
    b8a4:	ldr	w0, [sp, #544]
    b8a8:	cmp	w0, w1
    b8ac:	b.le	c8cc <grub_mod_fini+0xc57c>
    b8b0:	mov	x25, x27
    b8b4:	mov	w27, w26
    b8b8:	b	c800 <grub_mod_fini+0xc4b0>
    b8bc:	ldr	x27, [x19, #96]
    b8c0:	b	b864 <grub_mod_fini+0xb514>
    b8c4:	ldr	x27, [x19, #88]
    b8c8:	b	b864 <grub_mod_fini+0xb514>
    b8cc:	add	x19, x27, #0x8
    b8d0:	mov	w2, #0x0                   	// #0
    b8d4:	mov	x1, x19
    b8d8:	add	x0, sp, #0x1d8
    b8dc:	bl	3238 <grub_mod_fini+0x2ee8>
    b8e0:	mov	w26, w0
    b8e4:	str	w0, [sp, #364]
    b8e8:	cbnz	w0, c90c <grub_mod_fini+0xc5bc>
    b8ec:	ldrb	w0, [x27, #80]
    b8f0:	ldr	w1, [sp, #200]
    b8f4:	str	w1, [sp, #104]
    b8f8:	tbz	w0, #6, b888 <grub_mod_fini+0xb538>
    b8fc:	mov	x1, x19
    b900:	add	x0, sp, #0x1d8
    b904:	bl	a010 <grub_mod_fini+0x9cc0>
    b908:	mov	w26, w0
    b90c:	str	w0, [sp, #364]
    b910:	cbnz	w0, c90c <grub_mod_fini+0xc5bc>
    b914:	ldr	w0, [sp, #200]
    b918:	str	w0, [sp, #104]
    b91c:	b	b888 <grub_mod_fini+0xb538>
    b920:	ldr	w0, [sp, #244]
    b924:	str	w0, [sp, #104]
    b928:	b	b888 <grub_mod_fini+0xb538>
    b92c:	ldrsb	w0, [x27, #80]
    b930:	tbnz	w0, #31, b94c <grub_mod_fini+0xb5fc>
    b934:	ldr	w26, [sp, #120]
    b938:	mov	w28, #0x1                   	// #1
    b93c:	ldr	w0, [sp, #100]
    b940:	cbnz	w0, b898 <grub_mod_fini+0xb548>
    b944:	ldr	w26, [sp, #120]
    b948:	b	c90c <grub_mod_fini+0xc5bc>
    b94c:	ldr	w2, [sp, #120]
    b950:	mov	x1, x27
    b954:	add	x0, sp, #0x1d8
    b958:	bl	28d4 <grub_mod_fini+0x2584>
    b95c:	mov	w28, w0
    b960:	cbnz	w0, b934 <grub_mod_fini+0xb5e4>
    b964:	mov	w26, #0xffffffff            	// #-1
    b968:	b	b898 <grub_mod_fini+0xb548>
    b96c:	ldr	w2, [sp, #536]
    b970:	cmp	w0, w2
    b974:	b.ge	c810 <grub_mod_fini+0xc4c0>  // b.tcont
    b978:	add	w1, w1, #0x2
    b97c:	add	x0, sp, #0x1d8
    b980:	bl	7208 <grub_mod_fini+0x6eb8>
    b984:	str	w0, [sp, #364]
    b988:	cbz	w0, c81c <grub_mod_fini+0xc4cc>
    b98c:	ldr	x28, [sp, #168]
    b990:	cmp	w0, #0xc
    b994:	b.eq	d264 <grub_mod_fini+0xcf14>  // b.none
    b998:	mov	w2, #0x46c                 	// #1132
    b99c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    b9a0:	ldr	x1, [x0]
    b9a4:	adrp	x0, 0 <grub_mod_init-0x2b0>
    b9a8:	ldr	x0, [x0]
    b9ac:	bl	0 <grub_printf>
    b9b0:	b	d264 <grub_mod_fini+0xcf14>
    b9b4:	ldr	w2, [sp, #536]
    b9b8:	cmp	w0, w2
    b9bc:	b.ge	c81c <grub_mod_fini+0xc4cc>  // b.tcont
    b9c0:	b	b978 <grub_mod_fini+0xb628>
    b9c4:	ldr	x20, [sp, #584]
    b9c8:	ldr	w0, [x25, #12]
    b9cc:	cmp	w0, #0x0
    b9d0:	b.le	d288 <grub_mod_fini+0xcf38>
    b9d4:	mov	x21, #0x0                   	// #0
    b9d8:	ldr	x23, [sp, #216]
    b9dc:	b	bac0 <grub_mod_fini+0xb770>
    b9e0:	tbz	w1, #3, b9e8 <grub_mod_fini+0xb698>
    b9e4:	tbnz	w0, #0, bab0 <grub_mod_fini+0xb760>
    b9e8:	tbz	w1, #5, b9f0 <grub_mod_fini+0xb6a0>
    b9ec:	tbz	w0, #1, bab0 <grub_mod_fini+0xb760>
    b9f0:	tbz	w1, #7, b9f8 <grub_mod_fini+0xb6a8>
    b9f4:	tbz	w0, #3, bab0 <grub_mod_fini+0xb760>
    b9f8:	ldr	w3, [sp, #528]
    b9fc:	add	x2, sp, #0x1d8
    ba00:	mov	w1, w26
    ba04:	mov	x0, x20
    ba08:	bl	5934 <grub_mod_fini+0x55e4>
    ba0c:	cbz	w0, bab0 <grub_mod_fini+0xb760>
    ba10:	ldr	w19, [sp, #528]
    ba14:	add	w19, w0, w19
    ba18:	ldr	w1, [sp, #640]
    ba1c:	cmp	w1, w0
    ba20:	csel	w0, w1, w0, ge  // ge = tcont
    ba24:	str	w0, [sp, #640]
    ba28:	mov	w1, w19
    ba2c:	add	x0, sp, #0x1d8
    ba30:	bl	72e8 <grub_mod_fini+0x6f98>
    ba34:	str	w0, [sp, #400]
    ba38:	cbnz	w0, bb4c <grub_mod_fini+0xb7fc>
    ba3c:	ldr	x0, [x20, #24]
    ba40:	ldrsw	x2, [x0, x22, lsl #2]
    ba44:	ldr	x0, [x20, #48]
    ba48:	add	x2, x0, x2, lsl #4
    ba4c:	sxtw	x22, w19
    ba50:	ldr	x26, [sp, #608]
    ba54:	ldr	x0, [x26, x22, lsl #3]
    ba58:	cbz	x0, bb10 <grub_mod_fini+0xb7c0>
    ba5c:	ldr	x1, [x0, #56]
    ba60:	add	x0, sp, #0x1b0
    ba64:	bl	35b8 <grub_mod_fini+0x3268>
    ba68:	str	w0, [sp, #400]
    ba6c:	cbnz	w0, bb4c <grub_mod_fini+0xb7fc>
    ba70:	ldr	w2, [sp, #592]
    ba74:	sub	w1, w19, #0x1
    ba78:	add	x0, sp, #0x1d8
    ba7c:	bl	26b8 <grub_mod_fini+0x2368>
    ba80:	ldr	x19, [sp, #608]
    ba84:	mov	w3, w0
    ba88:	add	x2, sp, #0x1b0
    ba8c:	mov	x1, x20
    ba90:	mov	x0, x23
    ba94:	bl	4294 <grub_mod_fini+0x3f44>
    ba98:	str	x0, [x19, x22, lsl #3]
    ba9c:	ldr	x0, [sp, #440]
    baa0:	bl	0 <grub_free>
    baa4:	ldr	x0, [sp, #608]
    baa8:	ldr	x0, [x0, x22, lsl #3]
    baac:	cbz	x0, bb44 <grub_mod_fini+0xb7f4>
    bab0:	add	x21, x21, #0x1
    bab4:	ldr	w0, [x25, #12]
    bab8:	cmp	w0, w21
    babc:	b.le	d288 <grub_mod_fini+0xcf38>
    bac0:	ldr	x0, [x25, #16]
    bac4:	ldr	w26, [x0, x21, lsl #2]
    bac8:	sxtw	x22, w26
    bacc:	ldr	x19, [x20]
    bad0:	add	x19, x19, w26, sxtw #4
    bad4:	ldrb	w0, [x19, #10]
    bad8:	tbz	w0, #4, bab0 <grub_mod_fini+0xb760>
    badc:	ldr	w0, [x19, #8]
    bae0:	tst	w0, #0x3ff00
    bae4:	b.eq	b9f8 <grub_mod_fini+0xb6a8>  // b.none
    bae8:	ldr	w2, [sp, #592]
    baec:	ldr	w1, [sp, #528]
    baf0:	add	x0, sp, #0x1d8
    baf4:	bl	26b8 <grub_mod_fini+0x2368>
    baf8:	ldr	w2, [x19, #8]
    bafc:	ubfx	x1, x2, #8, #10
    bb00:	tbz	w2, #10, b9e0 <grub_mod_fini+0xb690>
    bb04:	tbz	w0, #0, bab0 <grub_mod_fini+0xb760>
    bb08:	tbz	w1, #3, b9e8 <grub_mod_fini+0xb698>
    bb0c:	b	bab0 <grub_mod_fini+0xb760>
    bb10:	ldp	x0, x1, [x2]
    bb14:	stp	x0, x1, [sp, #432]
    bb18:	ldr	w2, [sp, #592]
    bb1c:	sub	w1, w19, #0x1
    bb20:	add	x0, sp, #0x1d8
    bb24:	bl	26b8 <grub_mod_fini+0x2368>
    bb28:	mov	w3, w0
    bb2c:	add	x2, sp, #0x1b0
    bb30:	mov	x1, x20
    bb34:	mov	x0, x23
    bb38:	bl	4294 <grub_mod_fini+0x3f44>
    bb3c:	str	x0, [x26, x22, lsl #3]
    bb40:	b	baa4 <grub_mod_fini+0xb754>
    bb44:	ldr	w0, [sp, #400]
    bb48:	cbz	w0, bab0 <grub_mod_fini+0xb760>
    bb4c:	str	w0, [sp, #364]
    bb50:	ldr	x0, [sp, #608]
    bb54:	cbz	x0, d4f0 <grub_mod_fini+0xd1a0>
    bb58:	mov	x19, #0x0                   	// #0
    bb5c:	b	c880 <grub_mod_fini+0xc530>
    bb60:	ldr	x19, [x23, #72]
    bb64:	cbz	x19, bbb0 <grub_mod_fini+0xb860>
    bb68:	mov	w0, w27
    bb6c:	mov	w27, w28
    bb70:	mov	w24, w26
    bb74:	mov	w22, w25
    bb78:	mov	x25, x23
    bb7c:	mov	w28, w0
    bb80:	ldr	w2, [sp, #592]
    bb84:	ldr	w1, [sp, #528]
    bb88:	sub	w1, w1, #0x1
    bb8c:	add	x0, sp, #0x1d8
    bb90:	bl	26b8 <grub_mod_fini+0x2368>
    bb94:	tbz	w0, #0, bba4 <grub_mod_fini+0xb854>
    bb98:	add	x19, x19, w22, uxtb #3
    bb9c:	ldr	x19, [x19, #2048]
    bba0:	b	c878 <grub_mod_fini+0xc528>
    bba4:	and	x0, x22, #0xff
    bba8:	ldr	x19, [x19, x0, lsl #3]
    bbac:	b	c878 <grub_mod_fini+0xc528>
    bbb0:	ldr	x22, [sp, #584]
    bbb4:	mov	x0, #0x3000                	// #12288
    bbb8:	bl	0 <grub_malloc>
    bbbc:	str	x0, [sp, #232]
    bbc0:	cbz	x0, c710 <grub_mod_fini+0xc3c0>
    bbc4:	str	x0, [sp, #304]
    bbc8:	add	x0, x0, #0x1, lsl #12
    bbcc:	str	x0, [sp, #320]
    bbd0:	str	xzr, [x23, #64]
    bbd4:	str	xzr, [x23, #72]
    bbd8:	mov	x2, #0x20                  	// #32
    bbdc:	mov	w1, #0x0                   	// #0
    bbe0:	add	x0, sp, #0x170
    bbe4:	bl	0 <grub_memset>
    bbe8:	ldr	w0, [x23, #12]
    bbec:	cmp	w0, #0x0
    bbf0:	b.le	d270 <grub_mod_fini+0xcf20>
    bbf4:	ldr	w0, [sp, #144]
    bbf8:	mov	x2, #0x0                   	// #0
    bbfc:	add	x1, sp, #0x170
    bc00:	str	x1, [sp, #312]
    bc04:	str	w28, [sp, #336]
    bc08:	str	w27, [sp, #340]
    bc0c:	str	w26, [sp, #344]
    bc10:	str	w25, [sp, #348]
    bc14:	mov	x28, x23
    bc18:	str	x22, [sp, #280]
    bc1c:	mov	w25, w0
    bc20:	mov	x27, x2
    bc24:	b	c028 <grub_mod_fini+0xbcd8>
    bc28:	ldrb	w1, [x1, x0]
    bc2c:	ubfx	x2, x1, #6, #2
    bc30:	mov	x0, #0x1                   	// #1
    bc34:	lsl	x1, x0, x1
    bc38:	add	x0, sp, #0x170
    bc3c:	ldr	x0, [x0, x2, lsl #3]
    bc40:	orr	x0, x0, x1
    bc44:	add	x1, sp, #0x170
    bc48:	str	x0, [x1, x2, lsl #3]
    bc4c:	cbz	w19, bd18 <grub_mod_fini+0xb9c8>
    bc50:	tbnz	w19, #5, bddc <grub_mod_fini+0xba8c>
    bc54:	tbnz	w19, #7, be08 <grub_mod_fini+0xbab8>
    bc58:	tbz	w19, #2, bcb8 <grub_mod_fini+0xb968>
    bc5c:	cmp	w24, #0x1
    bc60:	b.eq	be1c <grub_mod_fini+0xbacc>  // b.none
    bc64:	ldr	x1, [sp, #280]
    bc68:	ldr	w0, [x1, #164]
    bc6c:	cmp	w0, #0x1
    bc70:	b.le	be38 <grub_mod_fini+0xbae8>
    bc74:	mov	x0, x1
    bc78:	ldr	x6, [x1, #120]
    bc7c:	add	x3, sp, #0x170
    bc80:	mov	x1, #0x0                   	// #0
    bc84:	mov	x2, #0x0                   	// #0
    bc88:	add	x5, x0, #0xa8
    bc8c:	ldr	x0, [x6, x1, lsl #3]
    bc90:	ldr	x4, [x5, x1, lsl #3]
    bc94:	orn	x0, x4, x0
    bc98:	ldr	x4, [x3]
    bc9c:	and	x0, x0, x4
    bca0:	str	x0, [x3], #8
    bca4:	orr	x2, x2, x0
    bca8:	add	x1, x1, #0x1
    bcac:	cmp	x1, #0x4
    bcb0:	b.ne	bc8c <grub_mod_fini+0xb93c>  // b.any
    bcb4:	cbz	x2, c018 <grub_mod_fini+0xbcc8>
    bcb8:	tbz	w19, #3, bd18 <grub_mod_fini+0xb9c8>
    bcbc:	cmp	w24, #0x1
    bcc0:	b.eq	be6c <grub_mod_fini+0xbb1c>  // b.none
    bcc4:	ldr	x1, [sp, #280]
    bcc8:	ldr	w0, [x1, #164]
    bccc:	cmp	w0, #0x1
    bcd0:	b.le	be88 <grub_mod_fini+0xbb38>
    bcd4:	mov	x0, x1
    bcd8:	ldr	x6, [x1, #120]
    bcdc:	add	x3, sp, #0x170
    bce0:	mov	x1, #0x0                   	// #0
    bce4:	mov	x2, #0x0                   	// #0
    bce8:	add	x5, x0, #0xa8
    bcec:	ldr	x0, [x5, x1, lsl #3]
    bcf0:	ldr	x4, [x6, x1, lsl #3]
    bcf4:	and	x0, x0, x4
    bcf8:	ldr	x4, [x3]
    bcfc:	bic	x0, x4, x0
    bd00:	str	x0, [x3], #8
    bd04:	orr	x2, x2, x0
    bd08:	add	x1, x1, #0x1
    bd0c:	cmp	x1, #0x4
    bd10:	b.ne	bcec <grub_mod_fini+0xb99c>  // b.any
    bd14:	cbz	x2, c018 <grub_mod_fini+0xbcc8>
    bd18:	ldr	x0, [sp, #232]
    bd1c:	add	x20, x0, #0xff8
    bd20:	mov	x19, #0x0                   	// #0
    bd24:	cmp	w25, #0x0
    bd28:	b.le	c0b0 <grub_mod_fini+0xbd60>
    bd2c:	str	x27, [sp, #328]
    bd30:	ldr	x27, [sp, #320]
    bd34:	b	bf14 <grub_mod_fini+0xbbc4>
    bd38:	ldr	x4, [x1, x0]
    bd3c:	add	x2, sp, #0x170
    bd40:	mov	x0, #0x0                   	// #0
    bd44:	ldr	x1, [x2]
    bd48:	ldr	x3, [x4, x0]
    bd4c:	orr	x1, x1, x3
    bd50:	str	x1, [x2], #8
    bd54:	add	x0, x0, #0x8
    bd58:	cmp	x0, #0x20
    bd5c:	b.ne	bd44 <grub_mod_fini+0xb9f4>  // b.any
    bd60:	b	bc4c <grub_mod_fini+0xb8fc>
    bd64:	ldr	x1, [sp, #280]
    bd68:	ldr	w0, [x1, #164]
    bd6c:	cmp	w0, #0x1
    bd70:	b.le	bda0 <grub_mod_fini+0xba50>
    bd74:	ldr	x4, [x1, #120]
    bd78:	add	x2, sp, #0x170
    bd7c:	mov	x0, #0x0                   	// #0
    bd80:	ldr	x1, [x2]
    bd84:	ldr	x3, [x4, x0]
    bd88:	orr	x1, x1, x3
    bd8c:	str	x1, [x2], #8
    bd90:	add	x0, x0, #0x8
    bd94:	cmp	x0, #0x20
    bd98:	b.ne	bd80 <grub_mod_fini+0xba30>  // b.any
    bd9c:	b	bdb0 <grub_mod_fini+0xba60>
    bda0:	mov	x2, #0x20                  	// #32
    bda4:	mov	w1, #0xffffffff            	// #-1
    bda8:	ldr	x0, [sp, #312]
    bdac:	bl	0 <grub_memset>
    bdb0:	ldr	x0, [sp, #280]
    bdb4:	ldr	x0, [x0, #200]
    bdb8:	tbnz	w0, #6, bdc8 <grub_mod_fini+0xba78>
    bdbc:	ldr	x1, [sp, #368]
    bdc0:	and	x1, x1, #0xfffffffffffffbff
    bdc4:	str	x1, [sp, #368]
    bdc8:	tbz	w0, #7, bc4c <grub_mod_fini+0xb8fc>
    bdcc:	ldr	x0, [sp, #368]
    bdd0:	and	x0, x0, #0xfffffffffffffffe
    bdd4:	str	x0, [sp, #368]
    bdd8:	b	bc4c <grub_mod_fini+0xb8fc>
    bddc:	ldr	x20, [sp, #368]
    bde0:	and	x20, x20, #0x400
    bde4:	mov	x2, #0x20                  	// #32
    bde8:	mov	w1, #0x0                   	// #0
    bdec:	ldr	x0, [sp, #312]
    bdf0:	bl	0 <grub_memset>
    bdf4:	cbz	x20, c018 <grub_mod_fini+0xbcc8>
    bdf8:	ldr	x0, [sp, #368]
    bdfc:	orr	x0, x0, #0x400
    be00:	str	x0, [sp, #368]
    be04:	b	bc54 <grub_mod_fini+0xb904>
    be08:	mov	x2, #0x20                  	// #32
    be0c:	mov	w1, #0x0                   	// #0
    be10:	ldr	x0, [sp, #312]
    be14:	bl	0 <grub_memset>
    be18:	b	c018 <grub_mod_fini+0xbcc8>
    be1c:	ldrb	w0, [x26, #10]
    be20:	tbnz	w0, #6, bc64 <grub_mod_fini+0xb914>
    be24:	mov	x2, #0x20                  	// #32
    be28:	mov	w1, #0x0                   	// #0
    be2c:	ldr	x0, [sp, #312]
    be30:	bl	0 <grub_memset>
    be34:	b	c018 <grub_mod_fini+0xbcc8>
    be38:	add	x3, sp, #0x170
    be3c:	ldr	x0, [sp, #280]
    be40:	add	x1, x0, #0xa8
    be44:	add	x5, x0, #0xc8
    be48:	mov	x2, #0x0                   	// #0
    be4c:	ldr	x0, [x3]
    be50:	ldr	x4, [x1], #8
    be54:	and	x0, x0, x4
    be58:	str	x0, [x3], #8
    be5c:	orr	x2, x2, x0
    be60:	cmp	x1, x5
    be64:	b.ne	be4c <grub_mod_fini+0xbafc>  // b.any
    be68:	b	bcb4 <grub_mod_fini+0xb964>
    be6c:	ldrb	w0, [x26, #10]
    be70:	tbz	w0, #6, bcc4 <grub_mod_fini+0xb974>
    be74:	mov	x2, #0x20                  	// #32
    be78:	mov	w1, #0x0                   	// #0
    be7c:	ldr	x0, [sp, #312]
    be80:	bl	0 <grub_memset>
    be84:	b	c018 <grub_mod_fini+0xbcc8>
    be88:	add	x3, sp, #0x170
    be8c:	ldr	x0, [sp, #280]
    be90:	add	x1, x0, #0xa8
    be94:	add	x5, x0, #0xc8
    be98:	mov	x2, #0x0                   	// #0
    be9c:	ldr	x0, [x1], #8
    bea0:	ldr	x4, [x3]
    bea4:	bic	x0, x4, x0
    bea8:	str	x0, [x3], #8
    beac:	orr	x2, x2, x0
    beb0:	cmp	x1, x5
    beb4:	b.ne	be9c <grub_mod_fini+0xbb4c>  // b.any
    beb8:	b	bd14 <grub_mod_fini+0xb9c4>
    bebc:	mov	x0, #0x1                   	// #1
    bec0:	mov	x3, #0x0                   	// #0
    bec4:	mov	x7, x20
    bec8:	lsl	x2, x0, #3
    becc:	add	x1, sp, #0x170
    bed0:	add	x1, x2, x1
    bed4:	ldur	x1, [x1, #-8]
    bed8:	ldr	x4, [x20, x0, lsl #3]
    bedc:	and	x1, x1, x4
    bee0:	add	x4, sp, #0x190
    bee4:	add	x2, x2, x4
    bee8:	stur	x1, [x2, #-8]
    beec:	orr	x3, x3, x1
    bef0:	add	x0, x0, #0x1
    bef4:	cmp	x0, #0x5
    bef8:	b.ne	bec8 <grub_mod_fini+0xbb78>  // b.any
    befc:	cbnz	x3, bf4c <grub_mod_fini+0xbbfc>
    bf00:	add	w22, w23, #0x1
    bf04:	add	x19, x19, #0x1
    bf08:	add	x20, x20, #0x20
    bf0c:	cmp	w25, w19
    bf10:	b.le	c00c <grub_mod_fini+0xbcbc>
    bf14:	mov	w23, w19
    bf18:	mov	w22, w19
    bf1c:	cmp	w24, #0x1
    bf20:	b.ne	bebc <grub_mod_fini+0xbb6c>  // b.any
    bf24:	ldrb	w2, [x26]
    bf28:	ubfx	x0, x2, #6, #2
    bf2c:	lsl	x1, x19, #5
    bf30:	add	x0, x1, x0, lsl #3
    bf34:	ldr	x1, [x27, x0]
    bf38:	lsr	x1, x1, x2
    bf3c:	and	x0, x1, #0x1
    bf40:	mov	x3, #0x0                   	// #0
    bf44:	tbz	w1, #0, bf00 <grub_mod_fini+0xbbb0>
    bf48:	b	bec4 <grub_mod_fini+0xbb74>
    bf4c:	add	x0, x20, #0x8
    bf50:	str	x0, [sp, #296]
    bf54:	add	x2, sp, #0x170
    bf58:	mov	x1, #0x1                   	// #1
    bf5c:	mov	x21, #0x0                   	// #0
    bf60:	mov	x5, #0x0                   	// #0
    bf64:	ldr	x3, [x2]
    bf68:	ldr	x0, [x7, x1, lsl #3]
    bf6c:	bic	x4, x0, x3
    bf70:	add	x6, sp, #0x1b0
    bf74:	add	x6, x6, x1, lsl #3
    bf78:	stur	x4, [x6, #-8]
    bf7c:	orr	x5, x5, x4
    bf80:	bic	x0, x3, x0
    bf84:	str	x0, [x2], #8
    bf88:	orr	x21, x21, x0
    bf8c:	add	x1, x1, #0x1
    bf90:	cmp	x1, #0x5
    bf94:	b.ne	bf64 <grub_mod_fini+0xbc14>  // b.any
    bf98:	cbz	x5, bfe0 <grub_mod_fini+0xbc90>
    bf9c:	sbfiz	x0, x25, #5, #32
    bfa0:	mov	x2, #0x20                  	// #32
    bfa4:	add	x1, sp, #0x1b0
    bfa8:	add	x0, x27, x0
    bfac:	bl	0 <grub_memmove>
    bfb0:	mov	x2, #0x20                  	// #32
    bfb4:	ldr	x1, [sp, #288]
    bfb8:	ldr	x0, [sp, #296]
    bfbc:	bl	0 <grub_memmove>
    bfc0:	ldr	x0, [sp, #232]
    bfc4:	add	x1, x0, x19, lsl #4
    bfc8:	sxtw	x0, w25
    bfcc:	ldr	x2, [sp, #304]
    bfd0:	add	x0, x2, x0, lsl #4
    bfd4:	bl	3538 <grub_mod_fini+0x31e8>
    bfd8:	cbnz	w0, c10c <grub_mod_fini+0xbdbc>
    bfdc:	add	w25, w25, #0x1
    bfe0:	ldr	x0, [x28, #16]
    bfe4:	ldr	x1, [sp, #264]
    bfe8:	ldr	w1, [x0, x1]
    bfec:	ldr	x0, [sp, #232]
    bff0:	add	x0, x0, x19, lsl #4
    bff4:	bl	2e94 <grub_mod_fini+0x2b44>
    bff8:	and	w0, w0, #0xff
    bffc:	cbz	w0, c128 <grub_mod_fini+0xbdd8>
    c000:	cbnz	x21, bf00 <grub_mod_fini+0xbbb0>
    c004:	ldr	x27, [sp, #328]
    c008:	b	c010 <grub_mod_fini+0xbcc0>
    c00c:	ldr	x27, [sp, #328]
    c010:	cmp	w22, w25
    c014:	b.eq	c0b8 <grub_mod_fini+0xbd68>  // b.none
    c018:	add	x27, x27, #0x1
    c01c:	ldr	w0, [x28, #12]
    c020:	cmp	w0, w27
    c024:	b.le	c1bc <grub_mod_fini+0xbe6c>
    c028:	lsl	x0, x27, #2
    c02c:	str	x0, [sp, #264]
    c030:	ldr	x0, [x28, #16]
    c034:	ldrsw	x0, [x0, x27, lsl #2]
    c038:	lsl	x0, x0, #4
    c03c:	ldr	x1, [sp, #280]
    c040:	ldr	x1, [x1]
    c044:	add	x26, x1, x0
    c048:	ldrb	w24, [x26, #8]
    c04c:	ldr	w19, [x26, #8]
    c050:	ubfx	x19, x19, #8, #10
    c054:	cmp	w24, #0x1
    c058:	b.eq	bc28 <grub_mod_fini+0xb8d8>  // b.none
    c05c:	cmp	w24, #0x3
    c060:	b.eq	bd38 <grub_mod_fini+0xb9e8>  // b.none
    c064:	cmp	w24, #0x5
    c068:	b.eq	bd64 <grub_mod_fini+0xba14>  // b.none
    c06c:	cmp	w24, #0x7
    c070:	b.ne	c018 <grub_mod_fini+0xbcc8>  // b.any
    c074:	mov	x2, #0x10                  	// #16
    c078:	mov	w1, #0xffffffff            	// #-1
    c07c:	ldr	x0, [sp, #312]
    c080:	bl	0 <grub_memset>
    c084:	ldr	x0, [sp, #280]
    c088:	ldr	x0, [x0, #200]
    c08c:	tbnz	w0, #6, c09c <grub_mod_fini+0xbd4c>
    c090:	ldr	x1, [sp, #368]
    c094:	and	x1, x1, #0xfffffffffffffbff
    c098:	str	x1, [sp, #368]
    c09c:	tbz	w0, #7, bc4c <grub_mod_fini+0xb8fc>
    c0a0:	ldr	x0, [sp, #368]
    c0a4:	and	x0, x0, #0xfffffffffffffffe
    c0a8:	str	x0, [sp, #368]
    c0ac:	b	bc4c <grub_mod_fini+0xb8fc>
    c0b0:	ldr	w22, [sp, #144]
    c0b4:	b	c010 <grub_mod_fini+0xbcc0>
    c0b8:	sxtw	x19, w25
    c0bc:	sbfiz	x0, x25, #5, #32
    c0c0:	mov	x2, #0x20                  	// #32
    c0c4:	ldr	x20, [sp, #312]
    c0c8:	mov	x1, x20
    c0cc:	ldr	x3, [sp, #320]
    c0d0:	add	x0, x3, x0
    c0d4:	bl	0 <grub_memmove>
    c0d8:	ldr	x0, [x28, #16]
    c0dc:	ldr	x1, [sp, #264]
    c0e0:	ldr	w1, [x0, x1]
    c0e4:	ldr	x0, [sp, #304]
    c0e8:	add	x0, x0, x19, lsl #4
    c0ec:	bl	2e40 <grub_mod_fini+0x2af0>
    c0f0:	cbnz	w0, c1a0 <grub_mod_fini+0xbe50>
    c0f4:	add	w25, w25, #0x1
    c0f8:	mov	x2, #0x20                  	// #32
    c0fc:	mov	w1, #0x0                   	// #0
    c100:	mov	x0, x20
    c104:	bl	0 <grub_memset>
    c108:	b	c018 <grub_mod_fini+0xbcc8>
    c10c:	ldr	w27, [sp, #340]
    c110:	ldr	w26, [sp, #344]
    c114:	mov	x23, x28
    c118:	ldr	w28, [sp, #336]
    c11c:	str	w25, [sp, #264]
    c120:	ldr	w25, [sp, #348]
    c124:	b	c140 <grub_mod_fini+0xbdf0>
    c128:	ldr	w27, [sp, #340]
    c12c:	ldr	w26, [sp, #344]
    c130:	mov	x23, x28
    c134:	ldr	w28, [sp, #336]
    c138:	str	w25, [sp, #264]
    c13c:	ldr	w25, [sp, #348]
    c140:	ldr	w0, [sp, #264]
    c144:	cmp	w0, #0x0
    c148:	b.le	d27c <grub_mod_fini+0xcf2c>
    c14c:	ldr	x1, [sp, #232]
    c150:	add	x19, x1, #0x8
    c154:	sub	w20, w0, #0x1
    c158:	add	x0, x1, #0x18
    c15c:	add	x20, x0, x20, lsl #4
    c160:	ldr	x0, [x19], #16
    c164:	bl	0 <grub_free>
    c168:	cmp	x19, x20
    c16c:	b.ne	c160 <grub_mod_fini+0xbe10>  // b.any
    c170:	mov	w0, #0xffffffff            	// #-1
    c174:	str	w0, [sp, #264]
    c178:	ldr	x0, [sp, #232]
    c17c:	bl	0 <grub_free>
    c180:	ldr	w0, [sp, #264]
    c184:	cbz	w0, c26c <grub_mod_fini+0xbf1c>
    c188:	mov	w0, w27
    c18c:	mov	w27, w28
    c190:	mov	w24, w26
    c194:	mov	x25, x23
    c198:	mov	w28, w0
    c19c:	b	c390 <grub_mod_fini+0xc040>
    c1a0:	ldr	w27, [sp, #340]
    c1a4:	ldr	w26, [sp, #344]
    c1a8:	mov	x23, x28
    c1ac:	ldr	w28, [sp, #336]
    c1b0:	str	w25, [sp, #264]
    c1b4:	ldr	w25, [sp, #348]
    c1b8:	b	c140 <grub_mod_fini+0xbdf0>
    c1bc:	ldr	w27, [sp, #340]
    c1c0:	ldr	w26, [sp, #344]
    c1c4:	mov	x23, x28
    c1c8:	ldr	w28, [sp, #336]
    c1cc:	ldr	x22, [sp, #280]
    c1d0:	str	w25, [sp, #264]
    c1d4:	ldr	w25, [sp, #348]
    c1d8:	ldr	w0, [sp, #264]
    c1dc:	cmp	w0, #0x0
    c1e0:	b.le	c178 <grub_mod_fini+0xbe28>
    c1e4:	ldr	w19, [sp, #264]
    c1e8:	add	w1, w19, #0x1
    c1ec:	ldr	x0, [sp, #288]
    c1f0:	bl	30e0 <grub_mod_fini+0x2d90>
    c1f4:	str	w0, [sp, #368]
    c1f8:	cbnz	w0, c2e8 <grub_mod_fini+0xbf98>
    c1fc:	mov	w0, w19
    c200:	sxtw	x19, w19
    c204:	add	w0, w0, w0, lsl #1
    c208:	sbfiz	x0, x0, #3, #32
    c20c:	bl	0 <grub_malloc>
    c210:	str	x0, [sp, #280]
    c214:	cbz	x0, c294 <grub_mod_fini+0xbf44>
    c218:	lsl	x0, x19, #3
    c21c:	ldr	x1, [sp, #280]
    c220:	add	x1, x1, x0
    c224:	str	x1, [sp, #296]
    c228:	add	x0, x1, x0
    c22c:	str	x0, [sp, #304]
    c230:	mov	x2, #0x20                  	// #32
    c234:	mov	w1, #0x0                   	// #0
    c238:	add	x0, sp, #0x1b0
    c23c:	bl	0 <grub_memset>
    c240:	ldr	x0, [sp, #232]
    c244:	add	x24, x0, #0x4
    c248:	add	x21, x0, #0xff8
    c24c:	ldr	w0, [sp, #200]
    c250:	str	w0, [sp, #320]
    c254:	mov	x0, #0x0                   	// #0
    c258:	str	w28, [sp, #312]
    c25c:	str	w25, [sp, #328]
    c260:	mov	x28, x0
    c264:	ldr	x25, [sp, #288]
    c268:	b	c410 <grub_mod_fini+0xc0c0>
    c26c:	mov	x0, #0x800                 	// #2048
    c270:	bl	0 <grub_zalloc>
    c274:	str	x0, [x23, #64]
    c278:	cbnz	x0, c850 <grub_mod_fini+0xc500>
    c27c:	mov	w0, w27
    c280:	mov	w27, w28
    c284:	mov	w24, w26
    c288:	mov	x25, x23
    c28c:	mov	w28, w0
    c290:	b	c390 <grub_mod_fini+0xc040>
    c294:	mov	w0, w27
    c298:	mov	w27, w28
    c29c:	mov	w24, w26
    c2a0:	mov	x25, x23
    c2a4:	ldr	w23, [sp, #264]
    c2a8:	mov	w28, w0
    c2ac:	b	c360 <grub_mod_fini+0xc010>
    c2b0:	mov	w0, w27
    c2b4:	mov	w27, w28
    c2b8:	mov	w24, w26
    c2bc:	mov	x25, x23
    c2c0:	ldr	w23, [sp, #264]
    c2c4:	mov	w28, w0
    c2c8:	b	c358 <grub_mod_fini+0xc008>
    c2cc:	mov	w0, w27
    c2d0:	mov	w27, w28
    c2d4:	mov	w24, w26
    c2d8:	mov	x25, x23
    c2dc:	ldr	w23, [sp, #264]
    c2e0:	mov	w28, w0
    c2e4:	b	c358 <grub_mod_fini+0xc008>
    c2e8:	mov	w0, w27
    c2ec:	mov	w27, w28
    c2f0:	mov	w24, w26
    c2f4:	mov	x25, x23
    c2f8:	ldr	w23, [sp, #264]
    c2fc:	mov	w28, w0
    c300:	b	c360 <grub_mod_fini+0xc010>
    c304:	add	x19, x19, #0x1
    c308:	ldr	w0, [x20]
    c30c:	cmp	w0, w19
    c310:	b.le	c39c <grub_mod_fini+0xc04c>
    c314:	ldur	x0, [x20, #4]
    c318:	ldrsw	x1, [x0, x19, lsl #2]
    c31c:	ldr	x0, [x22, #24]
    c320:	ldr	w0, [x0, x1, lsl #2]
    c324:	cmn	w0, #0x1
    c328:	b.eq	c304 <grub_mod_fini+0xbfb4>  // b.none
    c32c:	ldr	x1, [x22, #48]
    c330:	add	x1, x1, w0, sxtw #4
    c334:	mov	x0, x25
    c338:	bl	3378 <grub_mod_fini+0x3028>
    c33c:	str	w0, [sp, #368]
    c340:	cbz	w0, c304 <grub_mod_fini+0xbfb4>
    c344:	mov	w28, w27
    c348:	ldr	w27, [sp, #312]
    c34c:	mov	w24, w26
    c350:	mov	x25, x23
    c354:	ldr	w23, [sp, #264]
    c358:	ldr	x0, [sp, #280]
    c35c:	bl	0 <grub_free>
    c360:	ldr	x0, [sp, #408]
    c364:	bl	0 <grub_free>
    c368:	ldr	x0, [sp, #232]
    c36c:	add	x20, x0, #0x8
    c370:	ldr	w19, [sp, #144]
    c374:	ldr	x0, [x20], #16
    c378:	bl	0 <grub_free>
    c37c:	add	w19, w19, #0x1
    c380:	cmp	w19, w23
    c384:	b.lt	c374 <grub_mod_fini+0xc024>  // b.tstop
    c388:	ldr	x0, [sp, #232]
    c38c:	bl	0 <grub_free>
    c390:	mov	w0, #0xc                   	// #12
    c394:	str	w0, [sp, #364]
    c398:	b	bb50 <grub_mod_fini+0xb800>
    c39c:	mov	w3, #0x0                   	// #0
    c3a0:	mov	x2, x25
    c3a4:	mov	x1, x22
    c3a8:	add	x0, sp, #0x170
    c3ac:	bl	4294 <grub_mod_fini+0x3f44>
    c3b0:	ldr	x1, [sp, #280]
    c3b4:	str	x0, [x1, x28, lsl #3]
    c3b8:	cbz	x0, c42c <grub_mod_fini+0xc0dc>
    c3bc:	ldrsb	w1, [x0, #80]
    c3c0:	tbnz	w1, #31, c44c <grub_mod_fini+0xc0fc>
    c3c4:	ldr	x1, [sp, #296]
    c3c8:	str	x0, [x1, x28, lsl #3]
    c3cc:	ldr	x1, [sp, #304]
    c3d0:	str	x0, [x1, x28, lsl #3]
    c3d4:	add	x2, sp, #0x1b0
    c3d8:	mov	x0, #0x1                   	// #1
    c3dc:	ldr	x1, [x2]
    c3e0:	ldr	x3, [x21, x0, lsl #3]
    c3e4:	orr	x1, x1, x3
    c3e8:	str	x1, [x2], #8
    c3ec:	add	x0, x0, #0x1
    c3f0:	cmp	x0, #0x5
    c3f4:	b.ne	c3dc <grub_mod_fini+0xc08c>  // b.any
    c3f8:	add	x28, x28, #0x1
    c3fc:	add	x24, x24, #0x10
    c400:	add	x21, x21, #0x20
    c404:	ldr	w0, [sp, #264]
    c408:	cmp	w0, w28
    c40c:	b.le	c4f0 <grub_mod_fini+0xc1a0>
    c410:	str	wzr, [sp, #404]
    c414:	mov	x20, x24
    c418:	ldr	w0, [x24]
    c41c:	cmp	w0, #0x0
    c420:	b.le	c39c <grub_mod_fini+0xc04c>
    c424:	mov	x19, #0x0                   	// #0
    c428:	b	c314 <grub_mod_fini+0xbfc4>
    c42c:	ldr	w1, [sp, #368]
    c430:	cbz	w1, c3bc <grub_mod_fini+0xc06c>
    c434:	mov	w28, w27
    c438:	ldr	w27, [sp, #312]
    c43c:	mov	w24, w26
    c440:	mov	x25, x23
    c444:	ldr	w23, [sp, #264]
    c448:	b	c358 <grub_mod_fini+0xc008>
    c44c:	mov	w3, #0x1                   	// #1
    c450:	mov	x2, x25
    c454:	mov	x1, x22
    c458:	add	x0, sp, #0x170
    c45c:	bl	4294 <grub_mod_fini+0x3f44>
    c460:	ldr	x1, [sp, #296]
    c464:	str	x0, [x1, x28, lsl #3]
    c468:	cbz	x0, c4d0 <grub_mod_fini+0xc180>
    c46c:	ldr	x1, [sp, #280]
    c470:	ldr	x1, [x1, x28, lsl #3]
    c474:	cmp	x0, x1
    c478:	b.eq	c490 <grub_mod_fini+0xc140>  // b.none
    c47c:	ldr	w0, [x22, #164]
    c480:	cmp	w0, #0x2
    c484:	ldr	w0, [sp, #320]
    c488:	csinc	w0, w0, wzr, lt  // lt = tstop
    c48c:	str	w0, [sp, #320]
    c490:	mov	w3, #0x2                   	// #2
    c494:	mov	x2, x25
    c498:	mov	x1, x22
    c49c:	add	x0, sp, #0x170
    c4a0:	bl	4294 <grub_mod_fini+0x3f44>
    c4a4:	ldr	x1, [sp, #304]
    c4a8:	str	x0, [x1, x28, lsl #3]
    c4ac:	cbnz	x0, c3d4 <grub_mod_fini+0xc084>
    c4b0:	ldr	w0, [sp, #368]
    c4b4:	cbz	w0, c3d4 <grub_mod_fini+0xc084>
    c4b8:	mov	w28, w27
    c4bc:	ldr	w27, [sp, #312]
    c4c0:	mov	w24, w26
    c4c4:	mov	x25, x23
    c4c8:	ldr	w23, [sp, #264]
    c4cc:	b	c358 <grub_mod_fini+0xc008>
    c4d0:	ldr	w1, [sp, #368]
    c4d4:	cbz	w1, c46c <grub_mod_fini+0xc11c>
    c4d8:	mov	w28, w27
    c4dc:	ldr	w27, [sp, #312]
    c4e0:	mov	w24, w26
    c4e4:	mov	x25, x23
    c4e8:	ldr	w23, [sp, #264]
    c4ec:	b	c358 <grub_mod_fini+0xc008>
    c4f0:	ldr	w28, [sp, #312]
    c4f4:	ldr	w25, [sp, #328]
    c4f8:	ldr	w0, [sp, #320]
    c4fc:	cbnz	w0, c638 <grub_mod_fini+0xc2e8>
    c500:	mov	x0, #0x800                 	// #2048
    c504:	bl	0 <grub_zalloc>
    c508:	mov	x8, x0
    c50c:	str	x0, [x23, #64]
    c510:	cbz	x0, c2b0 <grub_mod_fini+0xbf60>
    c514:	ldr	x0, [sp, #232]
    c518:	add	x10, x0, #0x1, lsl #12
    c51c:	mov	x9, #0x1000                	// #4096
    c520:	sub	x13, sp, #0xe50
    c524:	sub	x12, x8, #0x40, lsl #12
    c528:	sub	x0, x22, #0xf58
    c52c:	mov	x11, #0x1020                	// #4128
    c530:	ldr	x14, [sp, #280]
    c534:	ldr	x15, [sp, #296]
    c538:	ldr	x1, [x9, x13]
    c53c:	cbz	x1, c55c <grub_mod_fini+0xc20c>
    c540:	add	x4, x12, x9, lsl #6
    c544:	mov	x3, #0x1                   	// #1
    c548:	tbnz	w1, #0, c5e0 <grub_mod_fini+0xc290>
    c54c:	lsl	x3, x3, #1
    c550:	lsr	x1, x1, #1
    c554:	add	x4, x4, #0x8
    c558:	cbnz	x1, c548 <grub_mod_fini+0xc1f8>
    c55c:	add	x10, x10, #0x8
    c560:	add	x9, x9, #0x8
    c564:	cmp	x9, x11
    c568:	b.ne	c538 <grub_mod_fini+0xc1e8>  // b.any
    c56c:	ldr	x0, [sp, #432]
    c570:	tbz	w0, #10, c59c <grub_mod_fini+0xc24c>
    c574:	mov	x0, #0x0                   	// #0
    c578:	ldr	x1, [sp, #232]
    c57c:	add	x2, x1, #0x1, lsl #12
    c580:	ldr	w3, [sp, #264]
    c584:	lsl	x1, x0, #5
    c588:	ldr	x1, [x2, x1]
    c58c:	tbnz	w1, #10, c6f4 <grub_mod_fini+0xc3a4>
    c590:	add	x0, x0, #0x1
    c594:	cmp	w3, w0
    c598:	b.gt	c584 <grub_mod_fini+0xc234>
    c59c:	ldr	x0, [sp, #280]
    c5a0:	bl	0 <grub_free>
    c5a4:	ldr	x0, [sp, #408]
    c5a8:	bl	0 <grub_free>
    c5ac:	ldr	x0, [sp, #232]
    c5b0:	add	x19, x0, #0x8
    c5b4:	ldr	w1, [sp, #264]
    c5b8:	sub	w20, w1, #0x1
    c5bc:	add	x0, x0, #0x18
    c5c0:	add	x20, x0, x20, lsl #4
    c5c4:	ldr	x0, [x19], #16
    c5c8:	bl	0 <grub_free>
    c5cc:	cmp	x20, x19
    c5d0:	b.ne	c5c4 <grub_mod_fini+0xc274>  // b.any
    c5d4:	ldr	x0, [sp, #232]
    c5d8:	bl	0 <grub_free>
    c5dc:	b	c850 <grub_mod_fini+0xc500>
    c5e0:	mov	x7, x10
    c5e4:	ldr	x2, [x10]
    c5e8:	tst	x3, x2
    c5ec:	b.ne	c624 <grub_mod_fini+0xc2d4>  // b.any
    c5f0:	mov	x2, #0x1                   	// #1
    c5f4:	lsl	x5, x2, #5
    c5f8:	ldr	x5, [x7, x5]
    c5fc:	mov	x6, x2
    c600:	add	x2, x2, #0x1
    c604:	tst	x3, x5
    c608:	b.eq	c5f4 <grub_mod_fini+0xc2a4>  // b.none
    c60c:	ldr	x2, [x0, x9]
    c610:	tst	x3, x2
    c614:	b.eq	c62c <grub_mod_fini+0xc2dc>  // b.none
    c618:	ldr	x2, [x15, x6, lsl #3]
    c61c:	str	x2, [x4]
    c620:	b	c54c <grub_mod_fini+0xc1fc>
    c624:	mov	x6, #0x0                   	// #0
    c628:	b	c60c <grub_mod_fini+0xc2bc>
    c62c:	ldr	x2, [x14, x6, lsl #3]
    c630:	str	x2, [x4]
    c634:	b	c54c <grub_mod_fini+0xc1fc>
    c638:	mov	x0, #0x1000                	// #4096
    c63c:	bl	0 <grub_zalloc>
    c640:	mov	x8, x0
    c644:	str	x0, [x23, #72]
    c648:	cbz	x0, c2cc <grub_mod_fini+0xbf7c>
    c64c:	add	x7, x0, #0x800
    c650:	ldr	x0, [sp, #232]
    c654:	add	x6, x0, #0x1, lsl #12
    c658:	mov	x5, #0x0                   	// #0
    c65c:	add	x11, sp, #0x1b0
    c660:	ldr	x12, [sp, #280]
    c664:	ldr	x13, [sp, #296]
    c668:	ldr	x0, [x5, x11]
    c66c:	cbz	x0, c68c <grub_mod_fini+0xc33c>
    c670:	mov	x3, x7
    c674:	mov	x2, #0x1                   	// #1
    c678:	tbnz	w0, #0, c6a4 <grub_mod_fini+0xc354>
    c67c:	lsl	x2, x2, #1
    c680:	lsr	x0, x0, #1
    c684:	add	x3, x3, #0x8
    c688:	cbnz	x0, c678 <grub_mod_fini+0xc328>
    c68c:	add	x7, x7, #0x200
    c690:	add	x6, x6, #0x8
    c694:	add	x5, x5, #0x8
    c698:	cmp	x5, #0x20
    c69c:	b.ne	c668 <grub_mod_fini+0xc318>  // b.any
    c6a0:	b	c56c <grub_mod_fini+0xc21c>
    c6a4:	mov	x10, x6
    c6a8:	ldr	x1, [x6]
    c6ac:	tst	x2, x1
    c6b0:	b.ne	c6ec <grub_mod_fini+0xc39c>  // b.any
    c6b4:	mov	x1, #0x1                   	// #1
    c6b8:	lsl	x4, x1, #5
    c6bc:	ldr	x9, [x10, x4]
    c6c0:	mov	x4, x1
    c6c4:	add	x1, x1, #0x1
    c6c8:	tst	x2, x9
    c6cc:	b.eq	c6b8 <grub_mod_fini+0xc368>  // b.none
    c6d0:	lsl	x4, x4, #3
    c6d4:	ldr	x9, [x12, x4]
    c6d8:	sub	x1, x3, #0x8, lsl #12
    c6dc:	str	x9, [x1, #30720]
    c6e0:	ldr	x1, [x13, x4]
    c6e4:	str	x1, [x3]
    c6e8:	b	c67c <grub_mod_fini+0xc32c>
    c6ec:	mov	x4, #0x0                   	// #0
    c6f0:	b	c6d0 <grub_mod_fini+0xc380>
    c6f4:	ldr	x1, [sp, #304]
    c6f8:	ldr	x0, [x1, x0, lsl #3]
    c6fc:	str	x0, [x8, #80]
    c700:	ldr	w1, [sp, #320]
    c704:	cbz	w1, c59c <grub_mod_fini+0xc24c>
    c708:	str	x0, [x8, #2128]
    c70c:	b	c59c <grub_mod_fini+0xc24c>
    c710:	mov	w0, w27
    c714:	mov	w27, w28
    c718:	mov	w24, w26
    c71c:	mov	x25, x23
    c720:	mov	w28, w0
    c724:	b	c390 <grub_mod_fini+0xc040>
    c728:	ldr	w0, [sp, #364]
    c72c:	cbnz	w0, d260 <grub_mod_fini+0xcf10>
    c730:	ldr	x0, [sp, #608]
    c734:	cbz	x0, c8e0 <grub_mod_fini+0xc590>
    c738:	cmp	w28, #0x0
    c73c:	ldr	w0, [sp, #100]
    c740:	eor	w0, w0, #0x1
    c744:	csel	w0, w0, wzr, ne  // ne = any
    c748:	cbnz	w0, c8e8 <grub_mod_fini+0xc598>
    c74c:	ldr	w3, [sp, #616]
    c750:	ldr	w0, [sp, #528]
    c754:	add	w0, w0, #0x1
    c758:	sxtw	x0, w0
    c75c:	ldr	x1, [sp, #608]
    c760:	sub	x1, x1, #0x8
    c764:	cmp	w3, w0
    c768:	b.lt	c8f0 <grub_mod_fini+0xc5a0>  // b.tstop
    c76c:	ldr	w2, [sp, #528]
    c770:	add	w2, w2, #0x1
    c774:	str	w2, [sp, #528]
    c778:	add	x0, x0, #0x1
    c77c:	ldr	x2, [x1, x0, lsl #3]
    c780:	cbz	x2, c764 <grub_mod_fini+0xc414>
    c784:	mov	x2, #0x0                   	// #0
    c788:	add	x1, sp, #0x1d8
    c78c:	add	x0, sp, #0x16c
    c790:	bl	a6f0 <grub_mod_fini+0xa3a0>
    c794:	ldr	w1, [sp, #364]
    c798:	cmp	w1, #0x0
    c79c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
    c7a0:	b.eq	c74c <grub_mod_fini+0xc3fc>  // b.none
    c7a4:	mov	x19, x0
    c7a8:	cbnz	x0, c898 <grub_mod_fini+0xc548>
    c7ac:	mov	w26, w27
    c7b0:	b	c8f4 <grub_mod_fini+0xc5a4>
    c7b4:	cmp	x19, x25
    c7b8:	ldr	w0, [sp, #104]
    c7bc:	ldr	w1, [sp, #200]
    c7c0:	csel	w0, w0, w1, eq  // eq = none
    c7c4:	str	w0, [sp, #104]
    c7c8:	ldr	w0, [sp, #120]
    c7cc:	csel	w0, w24, w0, eq  // eq = none
    c7d0:	str	w0, [sp, #120]
    c7d4:	b	c8a0 <grub_mod_fini+0xc550>
    c7d8:	ldr	w27, [sp, #528]
    c7dc:	ldr	w0, [sp, #100]
    c7e0:	cbz	w0, c8c4 <grub_mod_fini+0xc574>
    c7e4:	mov	w28, #0x1                   	// #1
    c7e8:	str	xzr, [sp, #112]
    c7ec:	ldr	w1, [sp, #528]
    c7f0:	ldr	w0, [sp, #544]
    c7f4:	cmp	w1, w0
    c7f8:	b.ge	c8d8 <grub_mod_fini+0xc588>  // b.tcont
    c7fc:	mov	x25, x19
    c800:	add	w24, w1, #0x1
    c804:	ldr	w0, [sp, #524]
    c808:	cmp	w24, w0
    c80c:	b.ge	b96c <grub_mod_fini+0xb61c>  // b.tcont
    c810:	ldr	w0, [sp, #516]
    c814:	cmp	w24, w0
    c818:	b.ge	b9b4 <grub_mod_fini+0xb664>  // b.tcont
    c81c:	ldrb	w0, [x25, #80]
    c820:	tbnz	w0, #5, b9c4 <grub_mod_fini+0xb674>
    c824:	ldr	w0, [sp, #528]
    c828:	add	w1, w0, #0x1
    c82c:	str	w1, [sp, #528]
    c830:	ldr	x1, [sp, #480]
    c834:	ldrb	w22, [x1, w0, sxtw]
    c838:	mov	w0, w28
    c83c:	mov	w28, w27
    c840:	mov	w26, w24
    c844:	mov	x23, x25
    c848:	mov	w25, w22
    c84c:	mov	w27, w0
    c850:	ldr	x0, [x23, #64]
    c854:	cbz	x0, bb60 <grub_mod_fini+0xb810>
    c858:	mov	w1, w27
    c85c:	mov	w27, w28
    c860:	mov	w24, w26
    c864:	mov	w22, w25
    c868:	mov	x25, x23
    c86c:	mov	w28, w1
    c870:	and	x1, x22, #0xff
    c874:	ldr	x19, [x0, x1, lsl #3]
    c878:	ldr	x0, [sp, #608]
    c87c:	cbz	x0, c894 <grub_mod_fini+0xc544>
    c880:	mov	x2, x19
    c884:	add	x1, sp, #0x1d8
    c888:	add	x0, sp, #0x16c
    c88c:	bl	a6f0 <grub_mod_fini+0xa3a0>
    c890:	mov	x19, x0
    c894:	cbz	x19, c728 <grub_mod_fini+0xc3d8>
    c898:	ldr	w0, [sp, #104]
    c89c:	cbnz	w0, c7b4 <grub_mod_fini+0xc464>
    c8a0:	ldrb	w0, [x19, #80]
    c8a4:	tbz	w0, #4, c7ec <grub_mod_fini+0xc49c>
    c8a8:	tbz	w0, #7, c7d8 <grub_mod_fini+0xc488>
    c8ac:	ldr	w2, [sp, #528]
    c8b0:	mov	x1, x19
    c8b4:	add	x0, sp, #0x1d8
    c8b8:	bl	28d4 <grub_mod_fini+0x2584>
    c8bc:	cbz	w0, c7ec <grub_mod_fini+0xc49c>
    c8c0:	b	c7d8 <grub_mod_fini+0xc488>
    c8c4:	mov	w26, w27
    c8c8:	b	c90c <grub_mod_fini+0xc5bc>
    c8cc:	ldr	x0, [sp, #248]
    c8d0:	str	x0, [sp, #112]
    c8d4:	b	c8f4 <grub_mod_fini+0xc5a4>
    c8d8:	mov	w26, w27
    c8dc:	b	c8f4 <grub_mod_fini+0xc5a4>
    c8e0:	mov	w26, w27
    c8e4:	b	c8f4 <grub_mod_fini+0xc5a4>
    c8e8:	mov	w26, w27
    c8ec:	b	c8f4 <grub_mod_fini+0xc5a4>
    c8f0:	mov	w26, w27
    c8f4:	ldr	x1, [sp, #112]
    c8f8:	cbz	x1, c90c <grub_mod_fini+0xc5bc>
    c8fc:	ldr	w0, [x1]
    c900:	ldr	w2, [sp, #120]
    c904:	add	w0, w0, w2
    c908:	str	w0, [x1]
    c90c:	cmn	w26, #0x1
    c910:	b.eq	d2ec <grub_mod_fini+0xcf9c>  // b.none
    c914:	cmn	w26, #0x2
    c918:	b.eq	d198 <grub_mod_fini+0xce48>  // b.none
    c91c:	str	w26, [sp, #596]
    c920:	ldr	x0, [sp, #192]
    c924:	cmp	x0, #0x1
    c928:	cset	w23, hi  // hi = pmore
    c92c:	ldr	x25, [sp, #224]
    c930:	ldrb	w0, [x25, #56]
    c934:	tst	x0, #0x10
    c938:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    c93c:	b.ne	d3e0 <grub_mod_fini+0xd090>  // b.any
    c940:	ldr	x28, [sp, #168]
    c944:	ldr	w0, [x28, #140]
    c948:	cbnz	w0, d408 <grub_mod_fini+0xd0b8>
    c94c:	ldr	x1, [sp, #192]
    c950:	cbz	x1, b784 <grub_mod_fini+0xb434>
    c954:	cmp	x1, #0x1
    c958:	b.ls	d23c <grub_mod_fini+0xceec>  // b.plast
    c95c:	ldr	x2, [sp, #256]
    c960:	add	x0, x2, #0x8
    c964:	lsl	x19, x1, #3
    c968:	str	x2, [sp, #128]
    c96c:	add	x2, x2, x19
    c970:	mov	w1, #0xffffffff            	// #-1
    c974:	str	w1, [x0, #4]
    c978:	str	w1, [x0], #8
    c97c:	cmp	x2, x0
    c980:	b.ne	c974 <grub_mod_fini+0xc624>  // b.any
    c984:	ldr	x1, [sp, #256]
    c988:	str	wzr, [x1]
    c98c:	ldr	w0, [sp, #596]
    c990:	str	w0, [x1, #4]
    c994:	ldrb	w0, [x25, #56]
    c998:	tst	x0, #0x10
    c99c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    c9a0:	b.ne	cab8 <grub_mod_fini+0xc768>  // b.any
    c9a4:	ldrb	w6, [sp, #572]
    c9a8:	ldr	w8, [sp, #516]
    c9ac:	ldr	x9, [sp, #496]
    c9b0:	ldr	w4, [sp, #668]
    c9b4:	ldr	x0, [sp, #192]
    c9b8:	lsl	x0, x0, #3
    c9bc:	ldr	x1, [sp, #256]
    c9c0:	add	x5, x0, x1
    c9c4:	ldr	w7, [sp, #520]
    c9c8:	b	d074 <grub_mod_fini+0xcd24>
    c9cc:	sub	x0, x0, #0x1
    c9d0:	tbnz	w0, #31, d3ac <grub_mod_fini+0xd05c>
    c9d4:	mov	w26, w0
    c9d8:	ldr	x1, [x3, x0, lsl #3]
    c9dc:	cbz	x1, c9cc <grub_mod_fini+0xc67c>
    c9e0:	ldrb	w2, [x1, #80]
    c9e4:	tbz	w2, #4, c9cc <grub_mod_fini+0xc67c>
    c9e8:	mov	w2, w0
    c9ec:	add	x0, sp, #0x1d8
    c9f0:	bl	28d4 <grub_mod_fini+0x2584>
    c9f4:	mov	w22, w0
    c9f8:	b	d47c <grub_mod_fini+0xd12c>
    c9fc:	mov	w3, w27
    ca00:	mov	x2, x20
    ca04:	mov	x1, x19
    ca08:	mov	x0, x24
    ca0c:	bl	9774 <grub_mod_fini+0x9424>
    ca10:	mov	w21, w0
    ca14:	mov	x0, x20
    ca18:	bl	0 <grub_free>
    ca1c:	cbz	w21, ca6c <grub_mod_fini+0xc71c>
    ca20:	mov	x20, #0x0                   	// #0
    ca24:	b	d2d4 <grub_mod_fini+0xcf84>
    ca28:	str	x19, [sp, #432]
    ca2c:	str	xzr, [sp, #440]
    ca30:	str	w22, [sp, #448]
    ca34:	str	w26, [sp, #452]
    ca38:	mov	x2, #0x10                  	// #16
    ca3c:	mov	w1, #0x0                   	// #0
    ca40:	add	x0, sp, #0x1c8
    ca44:	bl	0 <grub_memset>
    ca48:	add	x1, sp, #0x1b0
    ca4c:	add	x0, sp, #0x1d8
    ca50:	bl	aec8 <grub_mod_fini+0xab78>
    ca54:	mov	w21, w0
    ca58:	ldr	x0, [sp, #464]
    ca5c:	bl	0 <grub_free>
    ca60:	cbnz	w21, d2d0 <grub_mod_fini+0xcf80>
    ca64:	ldr	x20, [x19]
    ca68:	cbz	x20, d3ac <grub_mod_fini+0xd05c>
    ca6c:	ldr	x28, [sp, #168]
    ca70:	ldr	x25, [sp, #224]
    ca74:	ldr	x0, [sp, #608]
    ca78:	bl	0 <grub_free>
    ca7c:	str	x19, [sp, #608]
    ca80:	str	w22, [sp, #600]
    ca84:	str	w26, [sp, #596]
    ca88:	mov	x0, #0x0                   	// #0
    ca8c:	bl	0 <grub_free>
    ca90:	mov	x0, #0x0                   	// #0
    ca94:	bl	0 <grub_free>
    ca98:	b	c94c <grub_mod_fini+0xc5fc>
    ca9c:	ldr	x28, [sp, #168]
    caa0:	mov	w0, #0x1                   	// #1
    caa4:	str	w0, [sp, #144]
    caa8:	b	b784 <grub_mod_fini+0xb434>
    caac:	ldr	x28, [sp, #168]
    cab0:	ldr	x25, [sp, #224]
    cab4:	b	c94c <grub_mod_fini+0xc5fc>
    cab8:	ldrb	w0, [x28, #160]
    cabc:	tbz	w0, #0, d220 <grub_mod_fini+0xced0>
    cac0:	ldr	w0, [x28, #140]
    cac4:	cmp	w0, #0x0
    cac8:	b.le	d220 <grub_mod_fini+0xced0>
    cacc:	ldr	x26, [x25]
    cad0:	str	wzr, [sp, #432]
    cad4:	mov	w0, #0x2                   	// #2
    cad8:	str	w0, [sp, #436]
    cadc:	str	xzr, [sp, #440]
    cae0:	mov	x0, #0x40                  	// #64
    cae4:	bl	0 <grub_malloc>
    cae8:	str	x0, [sp, #440]
    caec:	cbz	x0, d214 <grub_mod_fini+0xcec4>
    caf0:	add	x25, sp, #0x1b0
    caf4:	ldr	w20, [x26, #136]
    caf8:	mov	x2, #0x10                  	// #16
    cafc:	mov	w1, #0x0                   	// #0
    cb00:	add	x0, sp, #0x190
    cb04:	bl	0 <grub_memset>
    cb08:	mov	x0, x19
    cb0c:	bl	0 <grub_malloc>
    cb10:	str	x0, [sp, #112]
    cb14:	cbz	x0, cb54 <grub_mod_fini+0xc804>
    cb18:	mov	x2, x19
    cb1c:	ldr	x19, [sp, #256]
    cb20:	mov	x1, x19
    cb24:	ldr	x0, [sp, #112]
    cb28:	bl	0 <grub_memmove>
    cb2c:	ldr	w0, [x19]
    cb30:	str	w0, [sp, #368]
    cb34:	ldr	x0, [sp, #192]
    cb38:	sbfiz	x2, x0, #3, #32
    cb3c:	str	x2, [sp, #120]
    cb40:	str	x28, [sp, #104]
    cb44:	str	w0, [sp, #100]
    cb48:	mov	x27, x0
    cb4c:	mov	x28, x19
    cb50:	b	ce60 <grub_mod_fini+0xcb10>
    cb54:	mov	x0, x25
    cb58:	bl	4b44 <grub_mod_fini+0x47f4>
    cb5c:	mov	w0, #0xc                   	// #12
    cb60:	str	w0, [sp, #144]
    cb64:	b	b784 <grub_mod_fini+0xb434>
    cb68:	ldr	w0, [x2, x1]
    cb6c:	add	w0, w0, #0x1
    cb70:	ldr	w1, [sp, #100]
    cb74:	cmp	w1, w0
    cb78:	b.le	ce90 <grub_mod_fini+0xcb40>
    cb7c:	sbfiz	x0, x0, #3, #32
    cb80:	add	x1, x28, x0
    cb84:	str	w3, [x28, x0]
    cb88:	mov	w0, #0xffffffff            	// #-1
    cb8c:	str	w0, [x1, #4]
    cb90:	b	ce90 <grub_mod_fini+0xcb40>
    cb94:	ldr	w0, [x2, x1]
    cb98:	add	w0, w0, #0x1
    cb9c:	ldr	w1, [sp, #100]
    cba0:	cmp	w1, w0
    cba4:	b.le	ce90 <grub_mod_fini+0xcb40>
    cba8:	sbfiz	x0, x0, #3, #32
    cbac:	add	x1, x28, x0
    cbb0:	ldr	w2, [x28, x0]
    cbb4:	cmp	w3, w2
    cbb8:	b.gt	cbdc <grub_mod_fini+0xc88c>
    cbbc:	ldrb	w2, [x4, #10]
    cbc0:	tbz	w2, #3, cbd4 <grub_mod_fini+0xc884>
    cbc4:	ldr	x4, [sp, #112]
    cbc8:	ldr	w0, [x4, x0]
    cbcc:	cmn	w0, #0x1
    cbd0:	b.ne	cbf4 <grub_mod_fini+0xc8a4>  // b.any
    cbd4:	str	w3, [x1, #4]
    cbd8:	b	ce90 <grub_mod_fini+0xcb40>
    cbdc:	str	w3, [x1, #4]
    cbe0:	ldr	x2, [sp, #120]
    cbe4:	mov	x1, x28
    cbe8:	ldr	x0, [sp, #112]
    cbec:	bl	0 <grub_memmove>
    cbf0:	b	ce90 <grub_mod_fini+0xcb40>
    cbf4:	ldr	x2, [sp, #120]
    cbf8:	mov	x1, x4
    cbfc:	mov	x0, x28
    cc00:	bl	0 <grub_memmove>
    cc04:	b	ce90 <grub_mod_fini+0xcb40>
    cc08:	cbz	x25, cc8c <grub_mod_fini+0xc93c>
    cc0c:	ldr	x0, [sp, #128]
    cc10:	mov	x1, #0x0                   	// #0
    cc14:	b	cc28 <grub_mod_fini+0xc8d8>
    cc18:	add	x1, x1, #0x1
    cc1c:	add	x0, x0, #0x8
    cc20:	cmp	x27, x1
    cc24:	b.eq	cc64 <grub_mod_fini+0xc914>  // b.none
    cc28:	ldr	w2, [x0]
    cc2c:	tbnz	w2, #31, cc18 <grub_mod_fini+0xc8c8>
    cc30:	ldr	w2, [x0, #4]
    cc34:	cmn	w2, #0x1
    cc38:	b.ne	cc18 <grub_mod_fini+0xc8c8>  // b.any
    cc3c:	cmp	x27, x1
    cc40:	b.eq	cc84 <grub_mod_fini+0xc934>  // b.none
    cc44:	add	x4, sp, #0x190
    cc48:	mov	x3, x28
    cc4c:	ldr	w2, [sp, #100]
    cc50:	add	x1, sp, #0x170
    cc54:	mov	x0, x25
    cc58:	bl	5fe8 <grub_mod_fini+0x5c98>
    cc5c:	mov	w20, w0
    cc60:	b	ceac <grub_mod_fini+0xcb5c>
    cc64:	ldr	x28, [sp, #104]
    cc68:	ldr	x0, [sp, #408]
    cc6c:	bl	0 <grub_free>
    cc70:	ldr	x0, [sp, #112]
    cc74:	bl	0 <grub_free>
    cc78:	mov	x0, x25
    cc7c:	bl	4b44 <grub_mod_fini+0x47f4>
    cc80:	b	d03c <grub_mod_fini+0xccec>
    cc84:	ldr	x28, [sp, #104]
    cc88:	b	cc68 <grub_mod_fini+0xc918>
    cc8c:	ldr	x28, [sp, #104]
    cc90:	ldr	x0, [sp, #408]
    cc94:	bl	0 <grub_free>
    cc98:	ldr	x0, [sp, #112]
    cc9c:	bl	0 <grub_free>
    cca0:	b	c9a4 <grub_mod_fini+0xc654>
    cca4:	ldrsw	x1, [sp, #368]
    cca8:	ldr	x0, [sp, #608]
    ccac:	ldr	x22, [x0, x1, lsl #3]
    ccb0:	add	x22, x22, #0x8
    ccb4:	ldr	x19, [x21, #40]
    ccb8:	add	x19, x19, x23
    ccbc:	mov	w1, w20
    ccc0:	add	x0, sp, #0x190
    ccc4:	bl	2e94 <grub_mod_fini+0x2b44>
    ccc8:	and	w0, w0, #0xff
    cccc:	cbz	w0, cfc0 <grub_mod_fini+0xcc70>
    ccd0:	ldr	w23, [x19, #4]
    ccd4:	cmp	w23, #0x0
    ccd8:	b.le	cf68 <grub_mod_fini+0xcc18>
    ccdc:	ldr	x24, [x19, #8]
    cce0:	mov	x19, #0x0                   	// #0
    cce4:	mov	w20, #0xffffffff            	// #-1
    cce8:	b	cdbc <grub_mod_fini+0xca6c>
    ccec:	mov	w1, w20
    ccf0:	add	x0, sp, #0x190
    ccf4:	bl	12e8 <grub_mod_fini+0xf98>
    ccf8:	cbnz	w0, cfb0 <grub_mod_fini+0xcc60>
    ccfc:	cbz	x25, ce5c <grub_mod_fini+0xcb0c>
    cd00:	ldr	w22, [sp, #368]
    cd04:	ldr	w19, [x25]
    cd08:	add	w1, w19, #0x1
    cd0c:	str	w1, [x25]
    cd10:	ldr	w0, [x25, #4]
    cd14:	cmp	w1, w0
    cd18:	b.eq	cd88 <grub_mod_fini+0xca38>  // b.none
    cd1c:	sbfiz	x19, x19, #5, #32
    cd20:	ldr	x0, [x25, #8]
    cd24:	str	w22, [x0, x19]
    cd28:	ldr	x0, [x25, #8]
    cd2c:	add	x0, x0, x19
    cd30:	str	w21, [x0, #4]
    cd34:	ldr	x21, [x25, #8]
    cd38:	add	x21, x21, x19
    cd3c:	ldr	x22, [sp, #120]
    cd40:	mov	x0, x22
    cd44:	bl	0 <grub_malloc>
    cd48:	str	x0, [x21, #8]
    cd4c:	ldr	x0, [x25, #8]
    cd50:	add	x0, x0, x19
    cd54:	ldr	x0, [x0, #8]
    cd58:	cbz	x0, cff0 <grub_mod_fini+0xcca0>
    cd5c:	mov	x2, x22
    cd60:	mov	x1, x28
    cd64:	bl	0 <grub_memmove>
    cd68:	ldr	x0, [x25, #8]
    cd6c:	add	x0, x0, x19
    cd70:	add	x1, sp, #0x190
    cd74:	add	x0, x0, #0x10
    cd78:	bl	3538 <grub_mod_fini+0x31e8>
    cd7c:	cbz	w0, ce5c <grub_mod_fini+0xcb0c>
    cd80:	ldr	x28, [sp, #104]
    cd84:	b	cfc4 <grub_mod_fini+0xcc74>
    cd88:	lsl	w0, w0, #1
    cd8c:	sbfiz	x1, x0, #5, #32
    cd90:	ldr	x0, [x25, #8]
    cd94:	bl	0 <grub_realloc>
    cd98:	cbz	x0, cfe8 <grub_mod_fini+0xcc98>
    cd9c:	ldr	w1, [x25, #4]
    cda0:	lsl	w1, w1, #1
    cda4:	str	w1, [x25, #4]
    cda8:	str	x0, [x25, #8]
    cdac:	b	cd1c <grub_mod_fini+0xc9cc>
    cdb0:	add	x19, x19, #0x1
    cdb4:	cmp	w23, w19
    cdb8:	b.le	ce5c <grub_mod_fini+0xcb0c>
    cdbc:	ldr	w21, [x24, x19, lsl #2]
    cdc0:	mov	w1, w21
    cdc4:	mov	x0, x22
    cdc8:	bl	12e8 <grub_mod_fini+0xf98>
    cdcc:	cbz	w0, cdb0 <grub_mod_fini+0xca60>
    cdd0:	cmn	w20, #0x1
    cdd4:	b.ne	ccec <grub_mod_fini+0xc99c>  // b.any
    cdd8:	mov	w20, w21
    cddc:	b	cdb0 <grub_mod_fini+0xca60>
    cde0:	ldr	w3, [sp, #368]
    cde4:	add	x2, sp, #0x1d8
    cde8:	mov	w1, w20
    cdec:	mov	x0, x21
    cdf0:	bl	5934 <grub_mod_fini+0x55e4>
    cdf4:	mov	w19, w0
    cdf8:	cbnz	w0, cf9c <grub_mod_fini+0xcc4c>
    cdfc:	ldr	w19, [sp, #368]
    ce00:	ldr	x1, [x21]
    ce04:	mov	w2, w19
    ce08:	add	x1, x1, x23
    ce0c:	add	x0, sp, #0x1d8
    ce10:	bl	27a8 <grub_mod_fini+0x2458>
    ce14:	and	w0, w0, #0xff
    ce18:	cbz	w0, cf68 <grub_mod_fini+0xcc18>
    ce1c:	ldr	x0, [x21, #24]
    ce20:	ldr	w20, [x0, x22, lsl #2]
    ce24:	add	w19, w19, #0x1
    ce28:	str	w19, [sp, #368]
    ce2c:	cbz	x25, ce58 <grub_mod_fini+0xcb08>
    ce30:	ldr	w0, [sp, #596]
    ce34:	cmp	w19, w0
    ce38:	b.gt	cf68 <grub_mod_fini+0xcc18>
    ce3c:	ldr	x0, [sp, #608]
    ce40:	ldr	x0, [x0, w19, sxtw #3]
    ce44:	cbz	x0, cf68 <grub_mod_fini+0xcc18>
    ce48:	mov	w1, w20
    ce4c:	add	x0, x0, #0x8
    ce50:	bl	12e8 <grub_mod_fini+0xf98>
    ce54:	cbz	w0, cf68 <grub_mod_fini+0xcc18>
    ce58:	str	wzr, [sp, #404]
    ce5c:	tbnz	w20, #31, cf6c <grub_mod_fini+0xcc1c>
    ce60:	ldr	w3, [sp, #368]
    ce64:	ldr	w0, [x28, #4]
    ce68:	cmp	w3, w0
    ce6c:	b.gt	d020 <grub_mod_fini+0xccd0>
    ce70:	sbfiz	x1, x20, #4, #32
    ce74:	ldr	x2, [x26]
    ce78:	add	x4, x2, x1
    ce7c:	ldrb	w0, [x4, #8]
    ce80:	cmp	w0, #0x8
    ce84:	b.eq	cb68 <grub_mod_fini+0xc818>  // b.none
    ce88:	cmp	w0, #0x9
    ce8c:	b.eq	cb94 <grub_mod_fini+0xc844>  // b.none
    ce90:	ldr	w1, [x28, #4]
    ce94:	ldr	w0, [sp, #368]
    ce98:	cmp	w1, w0
    ce9c:	b.ne	ceac <grub_mod_fini+0xcb5c>  // b.any
    cea0:	ldr	w0, [sp, #600]
    cea4:	cmp	w20, w0
    cea8:	b.eq	cc08 <grub_mod_fini+0xc8b8>  // b.none
    ceac:	ldr	x21, [sp, #584]
    ceb0:	sxtw	x22, w20
    ceb4:	sbfiz	x23, x20, #4, #32
    ceb8:	ldr	x2, [x21]
    cebc:	add	x0, x2, x23
    cec0:	ldrb	w1, [x0, #8]
    cec4:	tbnz	w1, #3, cca4 <grub_mod_fini+0xc954>
    cec8:	ldrb	w0, [x0, #10]
    cecc:	tbnz	w0, #4, cde0 <grub_mod_fini+0xca90>
    ced0:	cmp	w1, #0x4
    ced4:	b.ne	cdfc <grub_mod_fini+0xcaac>  // b.any
    ced8:	ldr	w0, [x2, x23]
    cedc:	add	w0, w0, #0x1
    cee0:	sbfiz	x0, x0, #3, #32
    cee4:	add	x1, x28, x0
    cee8:	ldr	w1, [x1, #4]
    ceec:	ldr	w0, [x28, x0]
    cef0:	sub	w19, w1, w0
    cef4:	cbz	x25, cf98 <grub_mod_fini+0xcc48>
    cef8:	cmn	w1, #0x1
    cefc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    cf00:	b.eq	cf68 <grub_mod_fini+0xcc18>  // b.none
    cf04:	cbnz	w19, cf4c <grub_mod_fini+0xcbfc>
    cf08:	mov	w1, w20
    cf0c:	add	x0, sp, #0x190
    cf10:	bl	2e94 <grub_mod_fini+0x2b44>
    cf14:	and	w0, w0, #0xff
    cf18:	cbz	w0, cff8 <grub_mod_fini+0xcca8>
    cf1c:	ldr	x0, [x21, #40]
    cf20:	add	x0, x0, x23
    cf24:	ldr	x0, [x0, #8]
    cf28:	ldr	w20, [x0]
    cf2c:	ldrsw	x1, [sp, #368]
    cf30:	ldr	x0, [sp, #608]
    cf34:	ldr	x0, [x0, x1, lsl #3]
    cf38:	mov	w1, w20
    cf3c:	add	x0, x0, #0x8
    cf40:	bl	12e8 <grub_mod_fini+0xf98>
    cf44:	cbz	w0, cdfc <grub_mod_fini+0xcaac>
    cf48:	b	ce5c <grub_mod_fini+0xcb0c>
    cf4c:	ldr	x3, [sp, #480]
    cf50:	ldrsw	x1, [sp, #368]
    cf54:	sxtw	x2, w19
    cf58:	add	x1, x3, x1
    cf5c:	add	x0, x3, w0, sxtw
    cf60:	bl	0 <grub_memcmp>
    cf64:	cbz	w0, cf9c <grub_mod_fini+0xcc4c>
    cf68:	mov	w20, #0xffffffff            	// #-1
    cf6c:	cmn	w20, #0x2
    cf70:	b.eq	cfb8 <grub_mod_fini+0xcc68>  // b.none
    cf74:	cbz	x25, d000 <grub_mod_fini+0xccb0>
    cf78:	add	x4, sp, #0x190
    cf7c:	mov	x3, x28
    cf80:	ldr	w2, [sp, #100]
    cf84:	add	x1, sp, #0x170
    cf88:	mov	x0, x25
    cf8c:	bl	5fe8 <grub_mod_fini+0x5c98>
    cf90:	mov	w20, w0
    cf94:	b	ce60 <grub_mod_fini+0xcb10>
    cf98:	cbz	w19, cf08 <grub_mod_fini+0xcbb8>
    cf9c:	ldr	x0, [x21, #24]
    cfa0:	ldr	w20, [x0, x22, lsl #2]
    cfa4:	ldr	w0, [sp, #368]
    cfa8:	add	w19, w19, w0
    cfac:	b	ce28 <grub_mod_fini+0xcad8>
    cfb0:	mov	w20, w21
    cfb4:	b	ce5c <grub_mod_fini+0xcb0c>
    cfb8:	ldr	x28, [sp, #104]
    cfbc:	b	cfc4 <grub_mod_fini+0xcc74>
    cfc0:	ldr	x28, [sp, #104]
    cfc4:	ldr	x0, [sp, #408]
    cfc8:	bl	0 <grub_free>
    cfcc:	ldr	x0, [sp, #112]
    cfd0:	bl	0 <grub_free>
    cfd4:	mov	x0, x25
    cfd8:	bl	4b44 <grub_mod_fini+0x47f4>
    cfdc:	mov	w0, #0xc                   	// #12
    cfe0:	str	w0, [sp, #144]
    cfe4:	b	b784 <grub_mod_fini+0xb434>
    cfe8:	ldr	x28, [sp, #104]
    cfec:	b	cfc4 <grub_mod_fini+0xcc74>
    cff0:	ldr	x28, [sp, #104]
    cff4:	b	cfc4 <grub_mod_fini+0xcc74>
    cff8:	ldr	x28, [sp, #104]
    cffc:	b	cfc4 <grub_mod_fini+0xcc74>
    d000:	ldr	x28, [sp, #104]
    d004:	ldr	x0, [sp, #408]
    d008:	bl	0 <grub_free>
    d00c:	ldr	x0, [sp, #112]
    d010:	bl	0 <grub_free>
    d014:	mov	w0, #0x1                   	// #1
    d018:	str	w0, [sp, #144]
    d01c:	b	b784 <grub_mod_fini+0xb434>
    d020:	ldr	x28, [sp, #104]
    d024:	ldr	x0, [sp, #408]
    d028:	bl	0 <grub_free>
    d02c:	ldr	x0, [sp, #112]
    d030:	bl	0 <grub_free>
    d034:	mov	x0, x25
    d038:	bl	4b44 <grub_mod_fini+0x47f4>
    d03c:	cbz	w0, c9a4 <grub_mod_fini+0xc654>
    d040:	str	w0, [sp, #144]
    d044:	b	b784 <grub_mod_fini+0xb434>
    d048:	ldr	w3, [x9, w10, sxtw #2]
    d04c:	str	w3, [x2, #4]
    d050:	ldr	w3, [x2]
    d054:	add	w3, w3, w4
    d058:	str	w3, [x2]
    d05c:	ldr	w3, [x2, #4]
    d060:	add	w3, w3, w4
    d064:	str	w3, [x2, #4]
    d068:	add	x1, x1, #0x8
    d06c:	cmp	x1, x5
    d070:	b.eq	d0b0 <grub_mod_fini+0xcd60>  // b.none
    d074:	mov	x2, x1
    d078:	ldr	w3, [x1]
    d07c:	cmn	w3, #0x1
    d080:	b.eq	d068 <grub_mod_fini+0xcd18>  // b.none
    d084:	cbz	w6, d050 <grub_mod_fini+0xcd00>
    d088:	mov	w10, w7
    d08c:	cmp	w3, w8
    d090:	b.eq	d098 <grub_mod_fini+0xcd48>  // b.none
    d094:	ldr	w10, [x9, w3, sxtw #2]
    d098:	str	w10, [x2]
    d09c:	ldr	w10, [x2, #4]
    d0a0:	mov	w3, w7
    d0a4:	cmp	w8, w10
    d0a8:	b.ne	d048 <grub_mod_fini+0xccf8>  // b.any
    d0ac:	b	d04c <grub_mod_fini+0xccfc>
    d0b0:	ldr	w1, [sp, #204]
    d0b4:	cmp	w1, #0x0
    d0b8:	b.le	d0f0 <grub_mod_fini+0xcda0>
    d0bc:	ldr	x3, [sp, #256]
    d0c0:	add	x0, x3, x0
    d0c4:	sub	w2, w1, #0x1
    d0c8:	ldr	x1, [sp, #192]
    d0cc:	add	x2, x2, x1
    d0d0:	add	x1, x3, #0x8
    d0d4:	add	x2, x1, x2, lsl #3
    d0d8:	mov	w1, #0xffffffff            	// #-1
    d0dc:	str	w1, [x0]
    d0e0:	str	w1, [x0, #4]
    d0e4:	add	x0, x0, #0x8
    d0e8:	cmp	x2, x0
    d0ec:	b.ne	d0dc <grub_mod_fini+0xcd8c>  // b.any
    d0f0:	ldr	x0, [x28, #208]
    d0f4:	cbz	x0, b784 <grub_mod_fini+0xb434>
    d0f8:	ldr	x0, [sp, #192]
    d0fc:	cmp	x0, #0x1
    d100:	b.ls	b784 <grub_mod_fini+0xb434>  // b.plast
    d104:	ldr	x4, [sp, #256]
    d108:	add	x2, x4, #0x8
    d10c:	sub	x3, x0, #0x1
    d110:	mov	x0, #0x0                   	// #0
    d114:	b	d148 <grub_mod_fini+0xcdf8>
    d118:	add	x1, x4, w1, sxtw #3
    d11c:	ldr	w1, [x1, #8]
    d120:	str	w1, [x2]
    d124:	ldr	x1, [x28, #208]
    d128:	ldrsw	x1, [x1, x0, lsl #2]
    d12c:	add	x1, x4, x1, lsl #3
    d130:	ldr	w1, [x1, #12]
    d134:	str	w1, [x2, #4]
    d138:	add	x0, x0, #0x1
    d13c:	add	x2, x2, #0x8
    d140:	cmp	x3, x0
    d144:	b.eq	b784 <grub_mod_fini+0xb434>  // b.none
    d148:	ldr	x1, [x28, #208]
    d14c:	ldr	w1, [x1, x0, lsl #2]
    d150:	cmp	w1, w0
    d154:	b.ne	d118 <grub_mod_fini+0xcdc8>  // b.any
    d158:	b	d138 <grub_mod_fini+0xcde8>
    d15c:	ldr	w0, [sp, #184]
    d160:	str	w0, [sp, #144]
    d164:	b	b784 <grub_mod_fini+0xb434>
    d168:	mov	w0, #0xc                   	// #12
    d16c:	str	w0, [sp, #144]
    d170:	b	b784 <grub_mod_fini+0xb434>
    d174:	mov	w0, #0xc                   	// #12
    d178:	str	w0, [sp, #144]
    d17c:	b	b784 <grub_mod_fini+0xb434>
    d180:	mov	w0, #0xc                   	// #12
    d184:	str	w0, [sp, #144]
    d188:	b	b784 <grub_mod_fini+0xb434>
    d18c:	mov	w0, #0x1                   	// #1
    d190:	str	w0, [sp, #144]
    d194:	b	b784 <grub_mod_fini+0xb434>
    d198:	ldr	x28, [sp, #168]
    d19c:	mov	w0, #0xc                   	// #12
    d1a0:	str	w0, [sp, #144]
    d1a4:	b	b784 <grub_mod_fini+0xb434>
    d1a8:	ldr	x28, [sp, #168]
    d1ac:	str	w0, [sp, #144]
    d1b0:	b	b784 <grub_mod_fini+0xb434>
    d1b4:	ldr	x28, [sp, #168]
    d1b8:	b	b784 <grub_mod_fini+0xb434>
    d1bc:	add	x0, sp, #0x1d8
    d1c0:	bl	4a80 <grub_mod_fini+0x4730>
    d1c4:	ldr	x0, [sp, #656]
    d1c8:	bl	0 <grub_free>
    d1cc:	ldr	x0, [sp, #632]
    d1d0:	bl	0 <grub_free>
    d1d4:	b	b794 <grub_mod_fini+0xb444>
    d1d8:	mov	w0, #0x1                   	// #1
    d1dc:	str	w0, [sp, #144]
    d1e0:	b	b79c <grub_mod_fini+0xb44c>
    d1e4:	mov	w0, #0x1                   	// #1
    d1e8:	str	w0, [sp, #144]
    d1ec:	b	b79c <grub_mod_fini+0xb44c>
    d1f0:	mov	w0, #0x1                   	// #1
    d1f4:	str	w0, [sp, #144]
    d1f8:	b	b79c <grub_mod_fini+0xb44c>
    d1fc:	mov	w0, #0x1                   	// #1
    d200:	str	w0, [sp, #144]
    d204:	b	b79c <grub_mod_fini+0xb44c>
    d208:	mov	w0, #0x1                   	// #1
    d20c:	str	w0, [sp, #144]
    d210:	b	b79c <grub_mod_fini+0xb44c>
    d214:	mov	w0, #0xc                   	// #12
    d218:	str	w0, [sp, #144]
    d21c:	b	b784 <grub_mod_fini+0xb434>
    d220:	ldr	x26, [x25]
    d224:	str	wzr, [sp, #432]
    d228:	mov	w0, #0x2                   	// #2
    d22c:	str	w0, [sp, #436]
    d230:	str	xzr, [sp, #440]
    d234:	mov	x25, #0x0                   	// #0
    d238:	b	caf4 <grub_mod_fini+0xc7a4>
    d23c:	ldr	x1, [sp, #256]
    d240:	str	wzr, [x1]
    d244:	ldr	w0, [sp, #596]
    d248:	str	w0, [x1, #4]
    d24c:	b	c9a4 <grub_mod_fini+0xc654>
    d250:	ldr	x28, [sp, #168]
    d254:	mov	w0, #0xc                   	// #12
    d258:	str	w0, [sp, #144]
    d25c:	b	b784 <grub_mod_fini+0xb434>
    d260:	ldr	x28, [sp, #168]
    d264:	mov	w0, #0xc                   	// #12
    d268:	str	w0, [sp, #144]
    d26c:	b	b784 <grub_mod_fini+0xb434>
    d270:	ldr	w0, [sp, #144]
    d274:	str	w0, [sp, #264]
    d278:	b	c178 <grub_mod_fini+0xbe28>
    d27c:	mov	w0, #0xffffffff            	// #-1
    d280:	str	w0, [sp, #264]
    d284:	b	c178 <grub_mod_fini+0xbe28>
    d288:	str	wzr, [sp, #364]
    d28c:	b	c824 <grub_mod_fini+0xc4d4>
    d290:	ldr	x28, [sp, #168]
    d294:	mov	w2, #0x435                 	// #1077
    d298:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d29c:	ldr	x1, [x0]
    d2a0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d2a4:	ldr	x0, [x0]
    d2a8:	bl	0 <grub_printf>
    d2ac:	b	d264 <grub_mod_fini+0xcf14>
    d2b0:	ldr	x0, [sp, #160]
    d2b4:	str	x0, [sp, #480]
    d2b8:	ldr	w0, [x28, #164]
    d2bc:	cmp	w0, #0x2
    d2c0:	ldr	w0, [sp, #152]
    d2c4:	ldr	w1, [sp, #184]
    d2c8:	csel	w0, w0, w1, lt  // lt = tstop
    d2cc:	b	b358 <grub_mod_fini+0xb008>
    d2d0:	mov	x20, #0x0                   	// #0
    d2d4:	mov	x0, x19
    d2d8:	bl	0 <grub_free>
    d2dc:	mov	x0, x20
    d2e0:	bl	0 <grub_free>
    d2e4:	cmp	w21, #0x1
    d2e8:	b.ne	d3a0 <grub_mod_fini+0xd050>  // b.any
    d2ec:	add	x0, sp, #0x1d8
    d2f0:	bl	4a80 <grub_mod_fini+0x4730>
    d2f4:	ldr	w0, [sp, #668]
    d2f8:	ldr	w1, [sp, #188]
    d2fc:	add	w0, w1, w0
    d300:	str	w0, [sp, #668]
    d304:	ldr	w1, [sp, #148]
    d308:	cmp	w0, w1
    d30c:	ldr	w1, [sp, #128]
    d310:	ccmp	w0, w1, #0x0, ge  // ge = tcont
    d314:	b.gt	ca9c <grub_mod_fini+0xc74c>
    d318:	ldr	w0, [sp, #156]
    d31c:	cmp	w0, #0x7
    d320:	b.eq	b550 <grub_mod_fini+0xb200>  // b.none
    d324:	b.gt	b5c8 <grub_mod_fini+0xb278>
    d328:	cmp	w0, #0x5
    d32c:	b.le	b52c <grub_mod_fini+0xb1dc>
    d330:	ldr	w0, [sp, #156]
    d334:	cmp	w0, #0x6
    d338:	b.ne	b534 <grub_mod_fini+0xb1e4>  // b.any
    d33c:	ldr	w2, [sp, #668]
    d340:	ldr	w1, [sp, #128]
    d344:	cmp	w2, w1
    d348:	b.ge	b5b8 <grub_mod_fini+0xb268>  // b.tcont
    d34c:	add	w0, w2, #0x1
    d350:	sxtw	x0, w0
    d354:	mvn	w3, w2
    d358:	add	w3, w3, w1
    d35c:	sxtw	x1, w2
    d360:	add	x1, x1, #0x2
    d364:	add	x3, x3, x1
    d368:	ldr	w4, [sp, #200]
    d36c:	mov	w5, #0x1                   	// #1
    d370:	ldr	x25, [sp, #176]
    d374:	ldr	x6, [sp, #272]
    d378:	ldrb	w1, [x6, x0]
    d37c:	ldrb	w1, [x25, x1]
    d380:	cbnz	w1, b6e0 <grub_mod_fini+0xb390>
    d384:	mov	w2, w0
    d388:	add	x0, x0, #0x1
    d38c:	mov	w4, w5
    d390:	cmp	x0, x3
    d394:	b.ne	d378 <grub_mod_fini+0xd028>  // b.any
    d398:	str	w2, [sp, #668]
    d39c:	b	b5b8 <grub_mod_fini+0xb268>
    d3a0:	ldr	x28, [sp, #168]
    d3a4:	str	w21, [sp, #144]
    d3a8:	b	b784 <grub_mod_fini+0xb434>
    d3ac:	mov	x0, x19
    d3b0:	bl	0 <grub_free>
    d3b4:	mov	x0, x20
    d3b8:	bl	0 <grub_free>
    d3bc:	b	d2ec <grub_mod_fini+0xcf9c>
    d3c0:	ldr	x28, [sp, #168]
    d3c4:	mov	x0, x19
    d3c8:	bl	0 <grub_free>
    d3cc:	mov	x0, #0x0                   	// #0
    d3d0:	bl	0 <grub_free>
    d3d4:	mov	w0, #0xc                   	// #12
    d3d8:	str	w0, [sp, #144]
    d3dc:	b	b784 <grub_mod_fini+0xb434>
    d3e0:	mov	w2, w26
    d3e4:	ldr	x0, [sp, #608]
    d3e8:	ldr	x1, [x0, w26, sxtw #3]
    d3ec:	add	x0, sp, #0x1d8
    d3f0:	bl	28d4 <grub_mod_fini+0x2584>
    d3f4:	str	w0, [sp, #600]
    d3f8:	ldr	x0, [sp, #168]
    d3fc:	ldrb	w0, [x0, #160]
    d400:	tbnz	w0, #0, d42c <grub_mod_fini+0xd0dc>
    d404:	b	d420 <grub_mod_fini+0xd0d0>
    d408:	mov	w2, w26
    d40c:	ldr	x0, [sp, #608]
    d410:	ldr	x1, [x0, w26, sxtw #3]
    d414:	add	x0, sp, #0x1d8
    d418:	bl	28d4 <grub_mod_fini+0x2584>
    d41c:	str	w0, [sp, #600]
    d420:	ldr	x0, [sp, #168]
    d424:	ldr	w0, [x0, #140]
    d428:	cbz	w0, caac <grub_mod_fini+0xc75c>
    d42c:	ldr	x24, [sp, #584]
    d430:	ldr	w22, [sp, #600]
    d434:	mov	w0, #0x7ffffffe            	// #2147483646
    d438:	cmp	w26, w0
    d43c:	b.hi	d250 <grub_mod_fini+0xcf00>  // b.pmore
    d440:	add	w20, w26, #0x1
    d444:	sbfiz	x20, x20, #3, #32
    d448:	mov	x0, x20
    d44c:	bl	0 <grub_malloc>
    d450:	mov	x19, x0
    d454:	cbz	x0, d3c0 <grub_mod_fini+0xd070>
    d458:	ldr	w0, [x24, #140]
    d45c:	cbz	w0, ca28 <grub_mod_fini+0xc6d8>
    d460:	mov	x0, x20
    d464:	bl	0 <grub_malloc>
    d468:	mov	x20, x0
    d46c:	cbz	x0, d3c0 <grub_mod_fini+0xd070>
    d470:	add	x0, sp, #0x1c8
    d474:	str	x0, [sp, #104]
    d478:	mov	x28, #0x10                  	// #16
    d47c:	add	w27, w26, #0x1
    d480:	sbfiz	x2, x27, #3, #32
    d484:	mov	w1, #0x0                   	// #0
    d488:	mov	x0, x20
    d48c:	bl	0 <grub_memset>
    d490:	str	x19, [sp, #432]
    d494:	str	x20, [sp, #440]
    d498:	str	w22, [sp, #448]
    d49c:	str	w26, [sp, #452]
    d4a0:	mov	x2, x28
    d4a4:	mov	w1, #0x0                   	// #0
    d4a8:	ldr	x0, [sp, #104]
    d4ac:	bl	0 <grub_memset>
    d4b0:	add	x1, sp, #0x1b0
    d4b4:	add	x0, sp, #0x1d8
    d4b8:	bl	aec8 <grub_mod_fini+0xab78>
    d4bc:	mov	w21, w0
    d4c0:	ldr	x0, [sp, #464]
    d4c4:	bl	0 <grub_free>
    d4c8:	cbnz	w21, d2d4 <grub_mod_fini+0xcf84>
    d4cc:	ldr	x0, [x19]
    d4d0:	cbnz	x0, c9fc <grub_mod_fini+0xc6ac>
    d4d4:	ldr	x0, [x20]
    d4d8:	cbnz	x0, c9fc <grub_mod_fini+0xc6ac>
    d4dc:	subs	w26, w26, #0x1
    d4e0:	b.mi	d3ac <grub_mod_fini+0xd05c>  // b.first
    d4e4:	ldr	x3, [sp, #608]
    d4e8:	sxtw	x0, w26
    d4ec:	b	c9d4 <grub_mod_fini+0xc684>
    d4f0:	mov	w26, w27
    d4f4:	ldr	w0, [sp, #364]
    d4f8:	cbz	w0, c8f4 <grub_mod_fini+0xc5a4>
    d4fc:	ldr	x28, [sp, #168]
    d500:	b	d264 <grub_mod_fini+0xcf14>
    d504:	nop
	...
    d518:	stp	x29, x30, [sp, #-240]!
    d51c:	mov	x29, sp
    d520:	stp	x19, x20, [sp, #16]
    d524:	stp	x21, x22, [sp, #32]
    d528:	stp	x23, x24, [sp, #48]
    d52c:	stp	x25, x26, [sp, #64]
    d530:	mov	x21, x0
    d534:	mov	x25, x1
    d538:	mov	x20, x2
    d53c:	mov	x24, x3
    d540:	str	wzr, [sp, #236]
    d544:	ldrb	w0, [x0, #56]
    d548:	str	x3, [x21, #24]
    d54c:	str	xzr, [x21, #16]
    d550:	str	xzr, [x21, #48]
    d554:	mov	w1, #0xffffff90            	// #-112
    d558:	and	w0, w0, w1
    d55c:	strb	w0, [x21, #56]
    d560:	ldr	x19, [x21]
    d564:	ldr	x0, [x21, #8]
    d568:	cmp	x0, #0xd7
    d56c:	b.ls	d750 <grub_mod_fini+0xd400>  // b.plast
    d570:	mov	x2, #0xd8                  	// #216
    d574:	str	x2, [x21, #16]
    d578:	mov	w1, #0x0                   	// #0
    d57c:	mov	x0, x19
    d580:	bl	0 <grub_memset>
    d584:	mov	w0, #0xf                   	// #15
    d588:	str	w0, [x19, #128]
    d58c:	mov	x0, #0x3ffffffe            	// #1073741822
    d590:	cmp	x20, x0
    d594:	b.hi	d7b8 <grub_mod_fini+0xd468>  // b.pmore
    d598:	add	x0, x20, #0x1
    d59c:	str	x0, [x19, #8]
    d5a0:	lsl	x0, x0, #4
    d5a4:	bl	0 <grub_malloc>
    d5a8:	str	x0, [x19]
    d5ac:	cbz	x20, d774 <grub_mod_fini+0xd424>
    d5b0:	mov	w22, #0x1                   	// #1
    d5b4:	lsl	w22, w22, #1
    d5b8:	mov	w0, w22
    d5bc:	cmp	x20, w22, uxtw
    d5c0:	b.cs	d5b4 <grub_mod_fini+0xd264>  // b.hs, b.nlast
    d5c4:	lsl	x0, x0, #4
    d5c8:	bl	0 <grub_zalloc>
    d5cc:	str	x0, [x19, #64]
    d5d0:	sub	w22, w22, #0x1
    d5d4:	str	w22, [x19, #132]
    d5d8:	mov	w0, #0x4                   	// #4
    d5dc:	str	w0, [x19, #164]
    d5e0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d5e4:	ldr	x1, [x0]
    d5e8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d5ec:	ldr	x0, [x0]
    d5f0:	bl	0 <grub_strcmp>
    d5f4:	cbnz	w0, d604 <grub_mod_fini+0xd2b4>
    d5f8:	ldrb	w0, [x19, #160]
    d5fc:	orr	w0, w0, #0x4
    d600:	strb	w0, [x19, #160]
    d604:	ldrb	w0, [x19, #160]
    d608:	and	w0, w0, #0xfffffff7
    d60c:	strb	w0, [x19, #160]
    d610:	ldr	w0, [x19, #164]
    d614:	cmp	w0, #0x1
    d618:	b.le	d630 <grub_mod_fini+0xd2e0>
    d61c:	ldrb	w0, [x19, #160]
    d620:	tbz	w0, #2, d780 <grub_mod_fini+0xd430>
    d624:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d628:	ldr	x0, [x0]
    d62c:	str	x0, [x19, #120]
    d630:	ldr	x0, [x19]
    d634:	cbz	x0, d7b8 <grub_mod_fini+0xd468>
    d638:	stp	x27, x28, [sp, #80]
    d63c:	ldr	x0, [x19, #64]
    d640:	cbz	x0, d7b4 <grub_mod_fini+0xd464>
    d644:	str	wzr, [sp, #236]
    d648:	mov	w22, w20
    d64c:	ldr	x27, [x21, #40]
    d650:	and	x23, x24, #0x400000
    d654:	orr	x26, x27, x23
    d658:	mov	x2, #0x70                  	// #112
    d65c:	mov	w1, #0x0                   	// #0
    d660:	add	x0, sp, #0x78
    d664:	bl	0 <grub_memset>
    d668:	str	x25, [sp, #120]
    d66c:	str	w20, [sp, #184]
    d670:	str	w20, [sp, #180]
    d674:	str	x27, [sp, #200]
    d678:	cmp	x23, #0x0
    d67c:	cset	w0, ne  // ne = any
    d680:	strb	w0, [sp, #216]
    d684:	cmp	x26, #0x0
    d688:	cset	w0, ne  // ne = any
    d68c:	strb	w0, [sp, #219]
    d690:	ldr	w0, [x19, #164]
    d694:	str	w0, [sp, #224]
    d698:	ldrb	w0, [x19, #160]
    d69c:	ubfx	x1, x0, #2, #1
    d6a0:	strb	w1, [sp, #217]
    d6a4:	ubfx	x0, x0, #3, #1
    d6a8:	strb	w0, [sp, #218]
    d6ac:	str	w20, [sp, #192]
    d6b0:	str	w20, [sp, #188]
    d6b4:	cmp	w20, #0x0
    d6b8:	b.gt	d7d8 <grub_mod_fini+0xd488>
    d6bc:	ldrb	w0, [sp, #219]
    d6c0:	cmp	w0, #0x0
    d6c4:	ldr	x0, [sp, #128]
    d6c8:	csel	x25, x0, x25, ne  // ne = any
    d6cc:	str	x25, [sp, #128]
    d6d0:	cbz	x23, d7f8 <grub_mod_fini+0xd4a8>
    d6d4:	ldr	w0, [x19, #164]
    d6d8:	cmp	w0, #0x1
    d6dc:	b.le	d7ec <grub_mod_fini+0xd49c>
    d6e0:	add	x0, sp, #0x78
    d6e4:	bl	6960 <grub_mod_fini+0x6610>
    d6e8:	cbnz	w0, d720 <grub_mod_fini+0xd3d0>
    d6ec:	ldr	w0, [sp, #168]
    d6f0:	cmp	w22, w0
    d6f4:	b.le	d81c <grub_mod_fini+0xd4cc>
    d6f8:	ldr	w1, [sp, #172]
    d6fc:	ldr	w2, [x19, #164]
    d700:	ldr	w0, [sp, #164]
    d704:	add	w0, w0, w2
    d708:	cmp	w1, w0
    d70c:	b.gt	d81c <grub_mod_fini+0xd4cc>
    d710:	lsl	w1, w1, #1
    d714:	add	x0, sp, #0x78
    d718:	bl	2990 <grub_mod_fini+0x2640>
    d71c:	cbz	w0, d6e0 <grub_mod_fini+0xd390>
    d720:	str	w0, [sp, #236]
    d724:	mov	x0, x21
    d728:	bl	4564 <grub_mod_fini+0x4214>
    d72c:	add	x0, sp, #0x78
    d730:	bl	45b4 <grub_mod_fini+0x4264>
    d734:	mov	x0, x19
    d738:	bl	45f4 <grub_mod_fini+0x42a4>
    d73c:	str	xzr, [x21]
    d740:	str	xzr, [x21, #8]
    d744:	ldr	w0, [sp, #236]
    d748:	ldp	x27, x28, [sp, #80]
    d74c:	b	de34 <grub_mod_fini+0xdae4>
    d750:	mov	x1, #0xd8                  	// #216
    d754:	mov	x0, x19
    d758:	bl	0 <grub_realloc>
    d75c:	mov	x19, x0
    d760:	cbz	x0, ded0 <grub_mod_fini+0xdb80>
    d764:	mov	x0, #0xd8                  	// #216
    d768:	str	x0, [x21, #8]
    d76c:	str	x19, [x21]
    d770:	b	d570 <grub_mod_fini+0xd220>
    d774:	mov	x0, #0x1                   	// #1
    d778:	mov	w22, w0
    d77c:	b	d5c4 <grub_mod_fini+0xd274>
    d780:	mov	x0, #0x20                  	// #32
    d784:	bl	0 <grub_zalloc>
    d788:	str	x0, [x19, #120]
    d78c:	cbz	x0, d7b8 <grub_mod_fini+0xd468>
    d790:	mov	x1, #0x0                   	// #0
    d794:	mov	x6, #0x1                   	// #1
    d798:	b	d7a8 <grub_mod_fini+0xd458>
    d79c:	add	x1, x1, #0x8
    d7a0:	cmp	x1, #0x20
    d7a4:	b.eq	d630 <grub_mod_fini+0xd2e0>  // b.none
    d7a8:	lsl	w5, w1, #3
    d7ac:	mov	w0, #0x0                   	// #0
    d7b0:	b	df50 <grub_mod_fini+0xdc00>
    d7b4:	ldp	x27, x28, [sp, #80]
    d7b8:	mov	w0, #0xc                   	// #12
    d7bc:	str	w0, [sp, #236]
    d7c0:	mov	x0, x19
    d7c4:	bl	45f4 <grub_mod_fini+0x42a4>
    d7c8:	str	xzr, [x21]
    d7cc:	str	xzr, [x21, #8]
    d7d0:	ldr	w0, [sp, #236]
    d7d4:	b	de34 <grub_mod_fini+0xdae4>
    d7d8:	add	w1, w20, #0x1
    d7dc:	add	x0, sp, #0x78
    d7e0:	bl	2990 <grub_mod_fini+0x2640>
    d7e4:	cbz	w0, d6bc <grub_mod_fini+0xd36c>
    d7e8:	b	d720 <grub_mod_fini+0xd3d0>
    d7ec:	add	x0, sp, #0x78
    d7f0:	bl	1a7c <grub_mod_fini+0x172c>
    d7f4:	b	d81c <grub_mod_fini+0xd4cc>
    d7f8:	ldr	w0, [x19, #164]
    d7fc:	cmp	w0, #0x1
    d800:	b.gt	d814 <grub_mod_fini+0xd4c4>
    d804:	cbz	x26, d99c <grub_mod_fini+0xd64c>
    d808:	add	x0, sp, #0x78
    d80c:	bl	1218 <grub_mod_fini+0xec8>
    d810:	b	d81c <grub_mod_fini+0xd4cc>
    d814:	add	x0, sp, #0x78
    d818:	bl	60c0 <grub_mod_fini+0x5d70>
    d81c:	str	wzr, [sp, #236]
    d820:	str	xzr, [x21, #48]
    d824:	ldr	x25, [x21]
    d828:	str	x24, [x25, #200]
    d82c:	orr	x2, x24, #0x800000
    d830:	add	x1, sp, #0x78
    d834:	add	x0, sp, #0x68
    d838:	bl	2238 <grub_mod_fini+0x1ee8>
    d83c:	add	x5, sp, #0xec
    d840:	mov	w4, #0x0                   	// #0
    d844:	mov	x3, x24
    d848:	add	x2, sp, #0x68
    d84c:	mov	x1, x21
    d850:	add	x0, sp, #0x78
    d854:	bl	91b0 <grub_mod_fini+0x8e60>
    d858:	mov	x20, x0
    d85c:	ldr	w0, [sp, #236]
    d860:	cmp	w0, #0x0
    d864:	ccmp	x20, #0x0, #0x0, ne  // ne = any
    d868:	b.eq	d9b4 <grub_mod_fini+0xd664>  // b.none
    d86c:	mov	w3, #0x2                   	// #2
    d870:	mov	x2, #0x0                   	// #0
    d874:	mov	x1, #0x0                   	// #0
    d878:	mov	x0, x25
    d87c:	bl	2c40 <grub_mod_fini+0x28f0>
    d880:	mov	x22, x0
    d884:	cbz	x20, d89c <grub_mod_fini+0xd54c>
    d888:	mov	w3, #0x10                  	// #16
    d88c:	mov	x2, x0
    d890:	mov	x1, x20
    d894:	mov	x0, x25
    d898:	bl	2c40 <grub_mod_fini+0x28f0>
    d89c:	cmp	x22, #0x0
    d8a0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    d8a4:	b.eq	d9ac <grub_mod_fini+0xd65c>  // b.none
    d8a8:	str	x0, [x19, #104]
    d8ac:	ldr	x20, [x21]
    d8b0:	ldr	x0, [x20, #8]
    d8b4:	lsl	x0, x0, #2
    d8b8:	bl	0 <grub_malloc>
    d8bc:	str	x0, [x20, #24]
    d8c0:	ldr	x0, [x20, #8]
    d8c4:	lsl	x0, x0, #2
    d8c8:	bl	0 <grub_malloc>
    d8cc:	str	x0, [x20, #32]
    d8d0:	ldr	x0, [x20, #8]
    d8d4:	lsl	x0, x0, #4
    d8d8:	bl	0 <grub_malloc>
    d8dc:	str	x0, [x20, #40]
    d8e0:	ldr	x0, [x20, #8]
    d8e4:	lsl	x0, x0, #4
    d8e8:	bl	0 <grub_malloc>
    d8ec:	str	x0, [x20, #48]
    d8f0:	ldr	x1, [x20, #24]
    d8f4:	cbz	x1, df3c <grub_mod_fini+0xdbec>
    d8f8:	ldr	x1, [x20, #32]
    d8fc:	cbz	x1, df18 <grub_mod_fini+0xdbc8>
    d900:	ldr	x1, [x20, #40]
    d904:	cmp	x1, #0x0
    d908:	cset	w24, eq  // eq = none
    d90c:	cmp	x0, #0x0
    d910:	csinc	w24, w24, wzr, ne  // ne = any
    d914:	cbnz	w24, df20 <grub_mod_fini+0xdbd0>
    d918:	ldr	x0, [x21, #48]
    d91c:	lsl	x0, x0, #2
    d920:	bl	0 <grub_malloc>
    d924:	str	x0, [x20, #208]
    d928:	cbz	x0, d9c4 <grub_mod_fini+0xd674>
    d92c:	ldr	x0, [x21, #48]
    d930:	cbz	x0, d950 <grub_mod_fini+0xd600>
    d934:	mov	x0, #0x0                   	// #0
    d938:	ldr	x1, [x20, #208]
    d93c:	str	w0, [x1, x0, lsl #2]
    d940:	add	x0, x0, #0x1
    d944:	ldr	x1, [x21, #48]
    d948:	cmp	x1, x0
    d94c:	b.hi	d938 <grub_mod_fini+0xd5e8>  // b.pmore
    d950:	mov	x2, x20
    d954:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d958:	ldr	x1, [x0]
    d95c:	ldr	x0, [x20, #104]
    d960:	bl	2644 <grub_mod_fini+0x22f4>
    d964:	ldr	x2, [x21, #48]
    d968:	cbz	x2, d98c <grub_mod_fini+0xd63c>
    d96c:	ldr	x3, [x20, #208]
    d970:	mov	x0, #0x0                   	// #0
    d974:	ldr	w1, [x3, x0, lsl #2]
    d978:	cmp	w1, w0
    d97c:	b.ne	d9bc <grub_mod_fini+0xd66c>  // b.any
    d980:	add	x0, x0, #0x1
    d984:	cmp	x0, x2
    d988:	b.ne	d974 <grub_mod_fini+0xd624>  // b.any
    d98c:	ldr	x0, [x20, #208]
    d990:	bl	0 <grub_free>
    d994:	str	xzr, [x20, #208]
    d998:	b	d9c4 <grub_mod_fini+0xd674>
    d99c:	ldr	w0, [sp, #172]
    d9a0:	str	w0, [sp, #164]
    d9a4:	str	w0, [sp, #168]
    d9a8:	b	d81c <grub_mod_fini+0xd4cc>
    d9ac:	mov	w0, #0xc                   	// #12
    d9b0:	str	w0, [sp, #236]
    d9b4:	str	xzr, [x19, #104]
    d9b8:	b	d724 <grub_mod_fini+0xd3d4>
    d9bc:	cmp	x0, x2
    d9c0:	b.eq	d98c <grub_mod_fini+0xd63c>  // b.none
    d9c4:	mov	x2, x21
    d9c8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d9cc:	ldr	x1, [x0]
    d9d0:	ldr	x0, [x20, #104]
    d9d4:	bl	25d0 <grub_mod_fini+0x2280>
    d9d8:	cbnz	w0, df34 <grub_mod_fini+0xdbe4>
    d9dc:	mov	x2, x20
    d9e0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d9e4:	ldr	x1, [x0]
    d9e8:	ldr	x0, [x20, #104]
    d9ec:	bl	25d0 <grub_mod_fini+0x2280>
    d9f0:	cbnz	w0, df34 <grub_mod_fini+0xdbe4>
    d9f4:	mov	x2, x20
    d9f8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    d9fc:	ldr	x1, [x0]
    da00:	ldr	x0, [x20, #104]
    da04:	bl	2644 <grub_mod_fini+0x22f4>
    da08:	mov	x2, x20
    da0c:	adrp	x0, 0 <grub_mod_init-0x2b0>
    da10:	ldr	x1, [x0]
    da14:	ldr	x0, [x20, #104]
    da18:	bl	2644 <grub_mod_fini+0x22f4>
    da1c:	mov	w27, w0
    da20:	cbnz	w0, df34 <grub_mod_fini+0xdbe4>
    da24:	mov	w25, w24
    da28:	mov	w22, w0
    da2c:	mov	w28, #0x1                   	// #1
    da30:	b	da54 <grub_mod_fini+0xd704>
    da34:	cbz	w25, daa0 <grub_mod_fini+0xd750>
    da38:	mov	w25, w24
    da3c:	mov	w22, w27
    da40:	b	da60 <grub_mod_fini+0xd710>
    da44:	ldr	x0, [sp, #112]
    da48:	bl	0 <grub_free>
    da4c:	mov	w25, #0x1                   	// #1
    da50:	add	w22, w22, #0x1
    da54:	ldr	x0, [x20, #16]
    da58:	cmp	x0, w22, sxtw
    da5c:	b.eq	da34 <grub_mod_fini+0xd6e4>  // b.none
    da60:	sbfiz	x26, x22, #4, #32
    da64:	ldr	x0, [x20, #48]
    da68:	add	x0, x0, x26
    da6c:	ldr	w0, [x0, #4]
    da70:	cbnz	w0, da50 <grub_mod_fini+0xd700>
    da74:	mov	w3, w28
    da78:	mov	w2, w22
    da7c:	mov	x1, x20
    da80:	add	x0, sp, #0x68
    da84:	bl	4000 <grub_mod_fini+0x3cb0>
    da88:	cbnz	w0, df34 <grub_mod_fini+0xdbe4>
    da8c:	ldr	x0, [x20, #48]
    da90:	add	x26, x0, x26
    da94:	ldr	w0, [x26, #4]
    da98:	cbnz	w0, da50 <grub_mod_fini+0xd700>
    da9c:	b	da44 <grub_mod_fini+0xd6f4>
    daa0:	ldrb	w1, [x21, #56]
    daa4:	tbz	w1, #4, dbcc <grub_mod_fini+0xd87c>
    daa8:	ldr	w1, [x20, #140]
    daac:	cbz	w1, db64 <grub_mod_fini+0xd814>
    dab0:	lsl	x0, x0, #4
    dab4:	bl	0 <grub_malloc>
    dab8:	str	x0, [x20, #56]
    dabc:	cbz	x0, df28 <grub_mod_fini+0xdbd8>
    dac0:	ldr	x0, [x20, #16]
    dac4:	cbz	x0, db64 <grub_mod_fini+0xd814>
    dac8:	mov	x22, #0x0                   	// #0
    dacc:	mov	x24, #0x10                  	// #16
    dad0:	ldr	x0, [x20, #56]
    dad4:	mov	x2, x24
    dad8:	mov	w1, #0x0                   	// #0
    dadc:	add	x0, x0, x22, lsl #4
    dae0:	bl	0 <grub_memset>
    dae4:	ldr	x0, [x20, #16]
    dae8:	add	x22, x22, #0x1
    daec:	cmp	x22, x0
    daf0:	b.cc	dad0 <grub_mod_fini+0xd780>  // b.lo, b.ul, b.last
    daf4:	cbz	x0, db64 <grub_mod_fini+0xd814>
    daf8:	mov	x28, #0x0                   	// #0
    dafc:	mov	w26, w28
    db00:	lsl	x24, x28, #4
    db04:	ldr	x0, [x20, #48]
    db08:	add	x0, x0, x24
    db0c:	ldr	x27, [x0, #8]
    db10:	ldr	w0, [x0, #4]
    db14:	cmp	w0, #0x0
    db18:	b.le	db54 <grub_mod_fini+0xd804>
    db1c:	mov	x22, #0x0                   	// #0
    db20:	ldrsw	x2, [x27, x22, lsl #2]
    db24:	ldr	x0, [x20, #56]
    db28:	mov	w1, w26
    db2c:	add	x0, x0, x2, lsl #4
    db30:	bl	2a60 <grub_mod_fini+0x2710>
    db34:	and	w0, w0, #0xff
    db38:	cbz	w0, df30 <grub_mod_fini+0xdbe0>
    db3c:	add	x22, x22, #0x1
    db40:	ldr	x0, [x20, #48]
    db44:	add	x0, x0, x24
    db48:	ldr	w0, [x0, #4]
    db4c:	cmp	w0, w22
    db50:	b.gt	db20 <grub_mod_fini+0xd7d0>
    db54:	add	x28, x28, #0x1
    db58:	ldr	x0, [x20, #16]
    db5c:	cmp	x0, x28
    db60:	b.hi	dafc <grub_mod_fini+0xd7ac>  // b.pmore
    db64:	str	wzr, [sp, #236]
    db68:	ldrb	w1, [x19, #160]
    db6c:	ubfx	x1, x1, #2, #1
    db70:	cmp	x23, #0x0
    db74:	csel	w1, w1, wzr, eq  // eq = none
    db78:	cbnz	w1, dbe0 <grub_mod_fini+0xd890>
    db7c:	ldr	x0, [x19, #104]
    db80:	ldr	x0, [x0, #24]
    db84:	ldr	w0, [x0, #56]
    db88:	str	w0, [x19, #136]
    db8c:	ldr	x1, [x19, #48]
    db90:	add	x1, x1, w0, sxtw #4
    db94:	add	x0, sp, #0x68
    db98:	bl	3538 <grub_mod_fini+0x31e8>
    db9c:	mov	w22, w0
    dba0:	str	w0, [sp, #100]
    dba4:	cbnz	w0, de10 <grub_mod_fini+0xdac0>
    dba8:	ldr	w0, [x19, #140]
    dbac:	cmp	w0, #0x0
    dbb0:	b.le	ddd8 <grub_mod_fini+0xda88>
    dbb4:	ldr	w2, [sp, #108]
    dbb8:	cmp	w2, #0x0
    dbbc:	b.le	ddd8 <grub_mod_fini+0xda88>
    dbc0:	mov	w20, w22
    dbc4:	mov	w23, w22
    dbc8:	b	dd80 <grub_mod_fini+0xda30>
    dbcc:	ldr	x1, [x21, #48]
    dbd0:	cbz	x1, daa8 <grub_mod_fini+0xd758>
    dbd4:	ldrb	w1, [x20, #160]
    dbd8:	tbnz	w1, #0, dab0 <grub_mod_fini+0xd760>
    dbdc:	b	daa8 <grub_mod_fini+0xd758>
    dbe0:	ldr	x0, [x21, #40]
    dbe4:	cbnz	x0, db7c <grub_mod_fini+0xd82c>
    dbe8:	ldr	x7, [x19, #16]
    dbec:	cbz	x7, dd00 <grub_mod_fini+0xd9b0>
    dbf0:	ldr	x4, [x19]
    dbf4:	mov	w8, w25
    dbf8:	mov	x5, #0x0                   	// #0
    dbfc:	mov	w9, w1
    dc00:	mov	x3, #0x1                   	// #1
    dc04:	mov	w2, #0x10001               	// #65537
    dc08:	movk	x2, #0x1, lsl #48
    dc0c:	b	dc54 <grub_mod_fini+0xd904>
    dc10:	cmp	w0, #0x1
    dc14:	b.eq	dc38 <grub_mod_fini+0xd8e8>  // b.none
    dc18:	cmp	w0, #0x3
    dc1c:	b.ne	dc44 <grub_mod_fini+0xd8f4>  // b.any
    dc20:	ldr	x0, [x4]
    dc24:	ldr	x6, [x0, #16]
    dc28:	cbnz	x6, db7c <grub_mod_fini+0xd82c>
    dc2c:	ldr	x0, [x0, #24]
    dc30:	cbz	x0, dc44 <grub_mod_fini+0xd8f4>
    dc34:	b	db7c <grub_mod_fini+0xd82c>
    dc38:	ldrsb	w0, [x4]
    dc3c:	cmp	w0, #0x0
    dc40:	csel	w25, w25, w1, ge  // ge = tcont
    dc44:	add	x5, x5, #0x1
    dc48:	add	x4, x4, #0x10
    dc4c:	cmp	x7, x5
    dc50:	b.eq	ded8 <grub_mod_fini+0xdb88>  // b.none
    dc54:	ldrb	w0, [x4, #8]
    dc58:	cmp	w0, #0x5
    dc5c:	b.eq	dca8 <grub_mod_fini+0xd958>  // b.none
    dc60:	b.ls	dc10 <grub_mod_fini+0xd8c0>  // b.plast
    dc64:	cmp	w0, #0x6
    dc68:	b.eq	db7c <grub_mod_fini+0xd82c>  // b.none
    dc6c:	cmp	w0, #0xc
    dc70:	b.ne	dc44 <grub_mod_fini+0xd8f4>  // b.any
    dc74:	ldr	w0, [x4]
    dc78:	cmp	w0, #0x40
    dc7c:	b.hi	dc9c <grub_mod_fini+0xd94c>  // b.pmore
    dc80:	cmp	w0, #0xf
    dc84:	b.ls	db7c <grub_mod_fini+0xd82c>  // b.plast
    dc88:	sub	w0, w0, #0x10
    dc8c:	lsl	x0, x3, x0
    dc90:	tst	x0, x2
    dc94:	b.eq	db7c <grub_mod_fini+0xd82c>  // b.none
    dc98:	b	dc44 <grub_mod_fini+0xd8f4>
    dc9c:	cmp	w0, #0x80
    dca0:	b.eq	dc44 <grub_mod_fini+0xd8f4>  // b.none
    dca4:	b	db7c <grub_mod_fini+0xd82c>
    dca8:	mov	w8, w9
    dcac:	b	dc44 <grub_mod_fini+0xd8f4>
    dcb0:	ldrsb	w1, [x4, x3]
    dcb4:	tbnz	w1, #31, dcf0 <grub_mod_fini+0xd9a0>
    dcb8:	add	x0, x0, #0x1
    dcbc:	ldr	x1, [x19, #16]
    dcc0:	cmp	x0, x1
    dcc4:	b.cs	deec <grub_mod_fini+0xdb9c>  // b.hs, b.nlast
    dcc8:	lsl	x3, x0, #4
    dccc:	ldr	x4, [x19]
    dcd0:	add	x2, x4, x3
    dcd4:	ldrb	w1, [x2, #8]
    dcd8:	cmp	w1, #0x1
    dcdc:	b.eq	dcb0 <grub_mod_fini+0xd960>  // b.none
    dce0:	cmp	w1, #0x5
    dce4:	b.ne	dcb8 <grub_mod_fini+0xd968>  // b.any
    dce8:	strb	w5, [x2, #8]
    dcec:	b	dcb8 <grub_mod_fini+0xd968>
    dcf0:	ldrb	w1, [x2, #10]
    dcf4:	and	w1, w1, #0xffffffdf
    dcf8:	strb	w1, [x2, #10]
    dcfc:	b	dcb8 <grub_mod_fini+0xd968>
    dd00:	mov	w8, w25
    dd04:	b	deec <grub_mod_fini+0xdb9c>
    dd08:	add	w5, w8, #0x1
    dd0c:	add	x1, x1, #0x1
    dd10:	cmp	w2, w1
    dd14:	b.le	dd48 <grub_mod_fini+0xd9f8>
    dd18:	mov	w8, w1
    dd1c:	mov	w5, w1
    dd20:	ldrsw	x4, [x6, x1, lsl #2]
    dd24:	lsl	x4, x4, #4
    dd28:	add	x9, x0, x4
    dd2c:	ldrb	w9, [x9, #8]
    dd30:	cmp	w9, #0x9
    dd34:	b.ne	dd08 <grub_mod_fini+0xd9b8>  // b.any
    dd38:	ldr	w9, [x0, x4]
    dd3c:	ldr	w4, [x7]
    dd40:	cmp	w9, w4
    dd44:	b.ne	dd08 <grub_mod_fini+0xd9b8>  // b.any
    dd48:	cmp	w2, w5
    dd4c:	b.eq	dd70 <grub_mod_fini+0xda20>  // b.none
    dd50:	ldr	x0, [x19, #40]
    dd54:	add	x3, x0, x3
    dd58:	ldr	x0, [x3, #8]
    dd5c:	ldr	w24, [x0]
    dd60:	mov	w1, w24
    dd64:	add	x0, sp, #0x68
    dd68:	bl	12e8 <grub_mod_fini+0xf98>
    dd6c:	cbz	w0, ddb8 <grub_mod_fini+0xda68>
    dd70:	add	w20, w20, #0x1
    dd74:	ldr	w2, [sp, #108]
    dd78:	cmp	w2, w20
    dd7c:	b.le	ddd8 <grub_mod_fini+0xda88>
    dd80:	ldr	x6, [sp, #112]
    dd84:	ldr	x0, [x19]
    dd88:	ldrsw	x3, [x6, w20, sxtw #2]
    dd8c:	lsl	x3, x3, #4
    dd90:	add	x7, x0, x3
    dd94:	ldrb	w1, [x7, #8]
    dd98:	cmp	w1, #0x4
    dd9c:	b.ne	dd70 <grub_mod_fini+0xda20>  // b.any
    dda0:	cmp	w2, #0x0
    dda4:	b.le	ddb0 <grub_mod_fini+0xda60>
    dda8:	mov	x1, #0x0                   	// #0
    ddac:	b	dd18 <grub_mod_fini+0xd9c8>
    ddb0:	mov	w5, w23
    ddb4:	b	dd48 <grub_mod_fini+0xd9f8>
    ddb8:	ldr	x1, [x19, #48]
    ddbc:	add	x1, x1, w24, sxtw #4
    ddc0:	add	x0, sp, #0x68
    ddc4:	bl	3378 <grub_mod_fini+0x3028>
    ddc8:	mov	w20, w0
    ddcc:	cbz	w0, dd70 <grub_mod_fini+0xda20>
    ddd0:	mov	w22, w0
    ddd4:	b	de10 <grub_mod_fini+0xdac0>
    ddd8:	mov	w3, #0x0                   	// #0
    dddc:	add	x2, sp, #0x68
    dde0:	mov	x1, x19
    dde4:	add	x0, sp, #0x64
    dde8:	bl	4294 <grub_mod_fini+0x3f44>
    ddec:	str	x0, [x19, #72]
    ddf0:	cbz	x0, de4c <grub_mod_fini+0xdafc>
    ddf4:	ldrsb	w1, [x0, #80]
    ddf8:	tbnz	w1, #31, de54 <grub_mod_fini+0xdb04>
    ddfc:	str	x0, [x19, #96]
    de00:	str	x0, [x19, #88]
    de04:	str	x0, [x19, #80]
    de08:	ldr	x0, [sp, #112]
    de0c:	bl	0 <grub_free>
    de10:	str	w22, [sp, #236]
    de14:	mov	x0, x21
    de18:	bl	4564 <grub_mod_fini+0x4214>
    de1c:	add	x0, sp, #0x78
    de20:	bl	45b4 <grub_mod_fini+0x4264>
    de24:	ldr	w0, [sp, #236]
    de28:	cbnz	w0, debc <grub_mod_fini+0xdb6c>
    de2c:	ldr	w0, [sp, #236]
    de30:	ldp	x27, x28, [sp, #80]
    de34:	ldp	x19, x20, [sp, #16]
    de38:	ldp	x21, x22, [sp, #32]
    de3c:	ldp	x23, x24, [sp, #48]
    de40:	ldp	x25, x26, [sp, #64]
    de44:	ldp	x29, x30, [sp], #240
    de48:	ret
    de4c:	ldr	w22, [sp, #100]
    de50:	b	de10 <grub_mod_fini+0xdac0>
    de54:	mov	w3, #0x1                   	// #1
    de58:	add	x2, sp, #0x68
    de5c:	mov	x1, x19
    de60:	add	x0, sp, #0x64
    de64:	bl	4294 <grub_mod_fini+0x3f44>
    de68:	str	x0, [x19, #80]
    de6c:	mov	w3, #0x2                   	// #2
    de70:	add	x2, sp, #0x68
    de74:	mov	x1, x19
    de78:	add	x0, sp, #0x64
    de7c:	bl	4294 <grub_mod_fini+0x3f44>
    de80:	str	x0, [x19, #88]
    de84:	mov	w3, #0x6                   	// #6
    de88:	add	x2, sp, #0x68
    de8c:	mov	x1, x19
    de90:	add	x0, sp, #0x64
    de94:	bl	4294 <grub_mod_fini+0x3f44>
    de98:	str	x0, [x19, #96]
    de9c:	ldr	x1, [x19, #80]
    dea0:	cbz	x1, deb4 <grub_mod_fini+0xdb64>
    dea4:	ldr	x1, [x19, #88]
    dea8:	cmp	x1, #0x0
    deac:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    deb0:	b.ne	de08 <grub_mod_fini+0xdab8>  // b.any
    deb4:	ldr	w22, [sp, #100]
    deb8:	b	de10 <grub_mod_fini+0xdac0>
    debc:	mov	x0, x19
    dec0:	bl	45f4 <grub_mod_fini+0x42a4>
    dec4:	str	xzr, [x21]
    dec8:	str	xzr, [x21, #8]
    decc:	b	de2c <grub_mod_fini+0xdadc>
    ded0:	mov	w0, #0xc                   	// #12
    ded4:	b	de34 <grub_mod_fini+0xdae4>
    ded8:	cmp	w25, #0x0
    dedc:	mov	x0, #0x0                   	// #0
    dee0:	ccmp	w8, #0x0, #0x0, eq  // eq = none
    dee4:	mov	w5, #0x7                   	// #7
    dee8:	b.ne	dcc8 <grub_mod_fini+0xd978>  // b.any
    deec:	mov	w0, #0x1                   	// #1
    def0:	str	w0, [x19, #164]
    def4:	ldrb	w0, [x19, #160]
    def8:	ldr	w1, [x19, #140]
    defc:	cmp	w1, #0x0
    df00:	ccmp	w8, #0x0, #0x0, le
    df04:	cset	w1, ne  // ne = any
    df08:	and	w0, w0, #0xfffffffb
    df0c:	bfi	w0, w1, #1, #1
    df10:	strb	w0, [x19, #160]
    df14:	b	db7c <grub_mod_fini+0xd82c>
    df18:	mov	w0, #0xc                   	// #12
    df1c:	b	df34 <grub_mod_fini+0xdbe4>
    df20:	mov	w0, #0xc                   	// #12
    df24:	b	df34 <grub_mod_fini+0xdbe4>
    df28:	mov	w0, #0xc                   	// #12
    df2c:	b	df34 <grub_mod_fini+0xdbe4>
    df30:	mov	w0, #0xc                   	// #12
    df34:	str	w0, [sp, #236]
    df38:	b	d724 <grub_mod_fini+0xd3d4>
    df3c:	mov	w0, #0xc                   	// #12
    df40:	b	df34 <grub_mod_fini+0xdbe4>
    df44:	add	w0, w0, #0x1
    df48:	cmp	w0, #0x40
    df4c:	b.eq	d79c <grub_mod_fini+0xd44c>  // b.none
    df50:	add	w2, w0, w5
    df54:	tst	w2, #0xffffff80
    df58:	b.ne	df44 <grub_mod_fini+0xdbf4>  // b.any
    df5c:	ldr	x4, [x19, #120]
    df60:	lsl	x2, x6, x0
    df64:	ldr	x3, [x4, x1]
    df68:	orr	x2, x3, x2
    df6c:	str	x2, [x4, x1]
    df70:	b	df44 <grub_mod_fini+0xdbf4>
    df74:	nop
	...

000000000000dfb8 <re_compile_pattern>:
    dfb8:	stp	x29, x30, [sp, #-16]!
    dfbc:	mov	x29, sp
    dfc0:	mov	x4, x0
    dfc4:	mov	x0, x2
    dfc8:	adrp	x2, 0 <grub_mod_init-0x2b0>
    dfcc:	ldr	x2, [x2]
    dfd0:	ldr	x3, [x2]
    dfd4:	ubfx	w5, w3, #25, #1
    dfd8:	ldrb	w2, [x0, #56]
    dfdc:	bfi	w2, w5, #4, #1
    dfe0:	orr	w2, w2, #0xffffff80
    dfe4:	strb	w2, [x0, #56]
    dfe8:	mov	x2, x1
    dfec:	mov	x1, x4
    dff0:	bl	d518 <grub_mod_fini+0xd1c8>
    dff4:	cbz	w0, e018 <re_compile_pattern+0x60>
    dff8:	adrp	x1, 0 <grub_mod_init-0x2b0>
    dffc:	ldr	x1, [x1]
    e000:	add	x2, x1, #0xa8
    e004:	add	x1, x1, #0x228
    e008:	ldr	x0, [x1, w0, sxtw #3]
    e00c:	add	x0, x2, x0
    e010:	ldp	x29, x30, [sp], #16
    e014:	ret
    e018:	mov	x0, #0x0                   	// #0
    e01c:	b	e010 <re_compile_pattern+0x58>
	...

000000000000e030 <re_set_syntax>:
    e030:	mov	x2, x0
    e034:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e038:	ldr	x1, [x0]
    e03c:	ldr	x0, [x1]
    e040:	str	x2, [x1]
    e044:	ret
	...

000000000000e050 <re_compile_fastmap>:
    e050:	stp	x29, x30, [sp, #-48]!
    e054:	mov	x29, sp
    e058:	stp	x19, x20, [sp, #16]
    e05c:	str	x21, [sp, #32]
    e060:	mov	x19, x0
    e064:	ldr	x20, [x0]
    e068:	ldr	x21, [x0, #32]
    e06c:	mov	x2, #0x100                 	// #256
    e070:	mov	w1, #0x0                   	// #0
    e074:	mov	x0, x21
    e078:	bl	0 <grub_memset>
    e07c:	mov	x2, x21
    e080:	ldr	x1, [x20, #72]
    e084:	mov	x0, x19
    e088:	bl	63a0 <grub_mod_fini+0x6050>
    e08c:	ldr	x1, [x20, #80]
    e090:	ldr	x0, [x20, #72]
    e094:	cmp	x0, x1
    e098:	b.eq	e0a8 <re_compile_fastmap+0x58>  // b.none
    e09c:	mov	x2, x21
    e0a0:	mov	x0, x19
    e0a4:	bl	63a0 <grub_mod_fini+0x6050>
    e0a8:	ldr	x1, [x20, #88]
    e0ac:	ldr	x0, [x20, #72]
    e0b0:	cmp	x0, x1
    e0b4:	b.eq	e0c4 <re_compile_fastmap+0x74>  // b.none
    e0b8:	mov	x2, x21
    e0bc:	mov	x0, x19
    e0c0:	bl	63a0 <grub_mod_fini+0x6050>
    e0c4:	ldr	x1, [x20, #96]
    e0c8:	ldr	x0, [x20, #72]
    e0cc:	cmp	x0, x1
    e0d0:	b.eq	e0e0 <re_compile_fastmap+0x90>  // b.none
    e0d4:	mov	x2, x21
    e0d8:	mov	x0, x19
    e0dc:	bl	63a0 <grub_mod_fini+0x6050>
    e0e0:	ldrb	w0, [x19, #56]
    e0e4:	orr	w0, w0, #0x8
    e0e8:	strb	w0, [x19, #56]
    e0ec:	mov	w0, #0x0                   	// #0
    e0f0:	ldp	x19, x20, [sp, #16]
    e0f4:	ldr	x21, [sp, #32]
    e0f8:	ldp	x29, x30, [sp], #48
    e0fc:	ret
    e100:	sub	sp, sp, #0x80
    e104:	stp	x29, x30, [sp, #16]
    e108:	add	x29, sp, #0x10
    e10c:	stp	x19, x20, [sp, #32]
    e110:	stp	x23, x24, [sp, #64]
    e114:	str	x1, [sp, #112]
    e118:	str	w5, [sp, #124]
    e11c:	add	w24, w3, w4
    e120:	cmp	w3, #0x0
    e124:	ccmp	w3, w2, #0x0, ge  // ge = tcont
    e128:	b.gt	e460 <re_compile_fastmap+0x410>
    e12c:	stp	x21, x22, [sp, #48]
    e130:	stp	x25, x26, [sp, #80]
    e134:	stp	x27, x28, [sp, #96]
    e138:	mov	x22, x0
    e13c:	mov	w25, w2
    e140:	mov	w20, w3
    e144:	mov	x19, x6
    e148:	and	w27, w7, #0xff
    e14c:	cmp	w24, w2
    e150:	b.gt	e230 <re_compile_fastmap+0x1e0>
    e154:	cmp	w4, #0x0
    e158:	ccmp	w3, w24, #0x4, ge  // ge = tcont
    e15c:	b.gt	e238 <re_compile_fastmap+0x1e8>
    e160:	tbnz	w24, #31, e484 <re_compile_fastmap+0x434>
    e164:	cmp	w4, #0x0
    e168:	ccmp	w3, w24, #0x0, lt  // lt = tstop
    e16c:	b.le	e484 <re_compile_fastmap+0x434>
    e170:	ldrb	w0, [x22, #56]
    e174:	ubfx	x26, x0, #5, #2
    e178:	cmp	w24, w20
    e17c:	b.le	e18c <re_compile_fastmap+0x13c>
    e180:	ldr	x1, [x22, #32]
    e184:	cbz	x1, e18c <re_compile_fastmap+0x13c>
    e188:	tbz	w0, #3, e240 <re_compile_fastmap+0x1f0>
    e18c:	ldrb	w0, [x22, #56]
    e190:	tbnz	w0, #4, e26c <re_compile_fastmap+0x21c>
    e194:	mov	w21, #0x1                   	// #1
    e198:	cbz	x19, e1b4 <re_compile_fastmap+0x164>
    e19c:	ldrb	w0, [x22, #56]
    e1a0:	and	w0, w0, #0x6
    e1a4:	cmp	w0, #0x4
    e1a8:	b.eq	e24c <re_compile_fastmap+0x1fc>  // b.none
    e1ac:	ldr	x21, [x22, #48]
    e1b0:	add	w21, w21, #0x1
    e1b4:	sxtw	x28, w21
    e1b8:	sbfiz	x0, x21, #3, #32
    e1bc:	bl	0 <grub_malloc>
    e1c0:	mov	x23, x0
    e1c4:	cbz	x0, e468 <re_compile_fastmap+0x418>
    e1c8:	str	w26, [sp]
    e1cc:	mov	x7, x0
    e1d0:	mov	x6, x28
    e1d4:	ldr	w5, [sp, #124]
    e1d8:	mov	w4, w24
    e1dc:	mov	w3, w20
    e1e0:	mov	w2, w25
    e1e4:	ldr	x1, [sp, #112]
    e1e8:	mov	x0, x22
    e1ec:	bl	b168 <grub_mod_fini+0xae18>
    e1f0:	mov	w24, w0
    e1f4:	cbz	w0, e278 <re_compile_fastmap+0x228>
    e1f8:	cmp	w0, #0x1
    e1fc:	cset	w20, eq  // eq = none
    e200:	sub	w20, w20, #0x2
    e204:	mov	x0, x23
    e208:	bl	0 <grub_free>
    e20c:	ldp	x21, x22, [sp, #48]
    e210:	ldp	x25, x26, [sp, #80]
    e214:	ldp	x27, x28, [sp, #96]
    e218:	mov	w0, w20
    e21c:	ldp	x19, x20, [sp, #32]
    e220:	ldp	x23, x24, [sp, #64]
    e224:	ldp	x29, x30, [sp, #16]
    e228:	add	sp, sp, #0x80
    e22c:	ret
    e230:	mov	w24, w2
    e234:	b	e170 <re_compile_fastmap+0x120>
    e238:	mov	w24, w2
    e23c:	b	e170 <re_compile_fastmap+0x120>
    e240:	mov	x0, x22
    e244:	bl	e050 <re_compile_fastmap>
    e248:	b	e18c <re_compile_fastmap+0x13c>
    e24c:	ldr	w0, [x19]
    e250:	ldr	x1, [x22, #48]
    e254:	cmp	x1, w0, uxtw
    e258:	b.cc	e1ac <re_compile_fastmap+0x15c>  // b.lo, b.ul, b.last
    e25c:	cmp	w0, #0x0
    e260:	csel	w21, w0, w21, gt
    e264:	csel	x19, x19, xzr, gt
    e268:	b	e1b4 <re_compile_fastmap+0x164>
    e26c:	mov	w21, #0x1                   	// #1
    e270:	mov	x19, #0x0                   	// #0
    e274:	b	e1b4 <re_compile_fastmap+0x164>
    e278:	cbz	x19, e338 <re_compile_fastmap+0x2e8>
    e27c:	ldrb	w25, [x22, #56]
    e280:	ubfx	x25, x25, #1, #2
    e284:	add	w26, w21, #0x1
    e288:	cbz	w25, e344 <re_compile_fastmap+0x2f4>
    e28c:	cmp	w25, #0x1
    e290:	b.eq	e384 <re_compile_fastmap+0x334>  // b.none
    e294:	cmp	w25, #0x2
    e298:	b.ne	e3dc <re_compile_fastmap+0x38c>  // b.any
    e29c:	ldr	w0, [x19]
    e2a0:	mov	w25, #0x2                   	// #2
    e2a4:	cmp	w0, w21
    e2a8:	b.cc	e3f8 <re_compile_fastmap+0x3a8>  // b.lo, b.ul, b.last
    e2ac:	cmp	w21, #0x0
    e2b0:	b.le	e414 <re_compile_fastmap+0x3c4>
    e2b4:	add	x1, x23, #0x4
    e2b8:	sub	w4, w21, #0x1
    e2bc:	add	x4, x4, #0x1
    e2c0:	lsl	x4, x4, #2
    e2c4:	mov	x0, #0x0                   	// #0
    e2c8:	ldur	w3, [x1, #-4]
    e2cc:	ldr	x2, [x19, #8]
    e2d0:	str	w3, [x2, x0]
    e2d4:	ldr	w3, [x1], #8
    e2d8:	ldr	x2, [x19, #16]
    e2dc:	str	w3, [x2, x0]
    e2e0:	add	x0, x0, #0x4
    e2e4:	cmp	x0, x4
    e2e8:	b.ne	e2c8 <re_compile_fastmap+0x278>  // b.any
    e2ec:	ldr	w0, [x19]
    e2f0:	cmp	w0, w21
    e2f4:	b.ls	e324 <re_compile_fastmap+0x2d4>  // b.plast
    e2f8:	sbfiz	x0, x21, #2, #32
    e2fc:	mov	w1, #0xffffffff            	// #-1
    e300:	ldr	x2, [x19, #16]
    e304:	str	w1, [x2, x0]
    e308:	ldr	x2, [x19, #8]
    e30c:	str	w1, [x2, x0]
    e310:	add	w21, w21, #0x1
    e314:	add	x0, x0, #0x4
    e318:	ldr	w2, [x19]
    e31c:	cmp	w21, w2
    e320:	b.cc	e300 <re_compile_fastmap+0x2b0>  // b.lo, b.ul, b.last
    e324:	ldrb	w0, [x22, #56]
    e328:	bfi	w0, w25, #1, #2
    e32c:	strb	w0, [x22, #56]
    e330:	tst	w0, #0x6
    e334:	b.eq	e47c <re_compile_fastmap+0x42c>  // b.none
    e338:	cbnz	w27, e42c <re_compile_fastmap+0x3dc>
    e33c:	ldr	w20, [x23]
    e340:	b	e204 <re_compile_fastmap+0x1b4>
    e344:	sbfiz	x25, x26, #2, #32
    e348:	mov	x0, x25
    e34c:	bl	0 <grub_malloc>
    e350:	str	x0, [x19, #8]
    e354:	cbz	x0, e41c <re_compile_fastmap+0x3cc>
    e358:	mov	x0, x25
    e35c:	bl	0 <grub_malloc>
    e360:	str	x0, [x19, #16]
    e364:	cbz	x0, e374 <re_compile_fastmap+0x324>
    e368:	str	w26, [x19]
    e36c:	mov	w25, #0x1                   	// #1
    e370:	b	e2ac <re_compile_fastmap+0x25c>
    e374:	ldr	x0, [x19, #8]
    e378:	bl	0 <grub_free>
    e37c:	mov	w25, #0x0                   	// #0
    e380:	b	e324 <re_compile_fastmap+0x2d4>
    e384:	ldr	w0, [x19]
    e388:	cmp	w0, w26
    e38c:	b.cs	e2ac <re_compile_fastmap+0x25c>  // b.hs, b.nlast
    e390:	sbfiz	x28, x26, #2, #32
    e394:	mov	x1, x28
    e398:	ldr	x0, [x19, #8]
    e39c:	bl	0 <grub_realloc>
    e3a0:	str	x0, [sp, #112]
    e3a4:	cbz	x0, e424 <re_compile_fastmap+0x3d4>
    e3a8:	mov	x1, x28
    e3ac:	ldr	x0, [x19, #16]
    e3b0:	bl	0 <grub_realloc>
    e3b4:	cbz	x0, e3cc <re_compile_fastmap+0x37c>
    e3b8:	ldr	x1, [sp, #112]
    e3bc:	str	x1, [x19, #8]
    e3c0:	str	x0, [x19, #16]
    e3c4:	str	w26, [x19]
    e3c8:	b	e2ac <re_compile_fastmap+0x25c>
    e3cc:	ldr	x0, [sp, #112]
    e3d0:	bl	0 <grub_free>
    e3d4:	mov	w25, #0x0                   	// #0
    e3d8:	b	e324 <re_compile_fastmap+0x2d4>
    e3dc:	mov	w2, #0x1f9                 	// #505
    e3e0:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e3e4:	ldr	x1, [x0]
    e3e8:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e3ec:	ldr	x0, [x0]
    e3f0:	bl	0 <grub_printf>
    e3f4:	b	e29c <re_compile_fastmap+0x24c>
    e3f8:	mov	w2, #0x1fb                 	// #507
    e3fc:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e400:	ldr	x1, [x0]
    e404:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e408:	ldr	x0, [x0]
    e40c:	bl	0 <grub_printf>
    e410:	b	e2ac <re_compile_fastmap+0x25c>
    e414:	mov	w21, w24
    e418:	b	e2ec <re_compile_fastmap+0x29c>
    e41c:	mov	w25, #0x0                   	// #0
    e420:	b	e324 <re_compile_fastmap+0x2d4>
    e424:	mov	w25, #0x0                   	// #0
    e428:	b	e324 <re_compile_fastmap+0x2d4>
    e42c:	ldr	w0, [x23]
    e430:	cmp	w0, w20
    e434:	b.ne	e444 <re_compile_fastmap+0x3f4>  // b.any
    e438:	ldr	w3, [x23, #4]
    e43c:	sub	w20, w3, w20
    e440:	b	e204 <re_compile_fastmap+0x1b4>
    e444:	mov	w2, #0x1be                 	// #446
    e448:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e44c:	ldr	x1, [x0]
    e450:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e454:	ldr	x0, [x0]
    e458:	bl	0 <grub_printf>
    e45c:	b	e438 <re_compile_fastmap+0x3e8>
    e460:	mov	w20, #0xffffffff            	// #-1
    e464:	b	e218 <re_compile_fastmap+0x1c8>
    e468:	mov	w20, #0xfffffffe            	// #-2
    e46c:	ldp	x21, x22, [sp, #48]
    e470:	ldp	x25, x26, [sp, #80]
    e474:	ldp	x27, x28, [sp, #96]
    e478:	b	e218 <re_compile_fastmap+0x1c8>
    e47c:	mov	w20, #0xfffffffe            	// #-2
    e480:	b	e204 <re_compile_fastmap+0x1b4>
    e484:	ldrb	w26, [x22, #56]
    e488:	ubfx	x26, x26, #5, #2
    e48c:	mov	w24, #0x0                   	// #0
    e490:	b	e18c <re_compile_fastmap+0x13c>
    e494:	nop
	...
    e4a8:	stp	x29, x30, [sp, #-112]!
    e4ac:	mov	x29, sp
    e4b0:	stp	x19, x20, [sp, #16]
    e4b4:	stp	x27, x28, [sp, #80]
    e4b8:	str	x1, [sp, #104]
    e4bc:	ldr	w27, [sp, #112]
    e4c0:	cmp	w4, #0x0
    e4c4:	ccmp	w27, #0x0, #0x1, ge  // ge = tcont
    e4c8:	ccmp	w2, #0x0, #0x1, ge  // ge = tcont
    e4cc:	b.lt	e5a8 <re_compile_fastmap+0x558>  // b.tstop
    e4d0:	stp	x21, x22, [sp, #32]
    e4d4:	stp	x23, x24, [sp, #48]
    e4d8:	stp	x25, x26, [sp, #64]
    e4dc:	mov	x22, x0
    e4e0:	mov	w19, w2
    e4e4:	mov	x21, x3
    e4e8:	mov	w20, w4
    e4ec:	mov	w23, w5
    e4f0:	mov	w24, w6
    e4f4:	mov	x25, x7
    e4f8:	adds	w28, w2, w4
    e4fc:	b.vs	e5b0 <re_compile_fastmap+0x560>
    e500:	cmp	w4, #0x0
    e504:	b.le	e59c <re_compile_fastmap+0x54c>
    e508:	mov	x26, #0x0                   	// #0
    e50c:	cmp	w2, #0x0
    e510:	b.gt	e564 <re_compile_fastmap+0x514>
    e514:	ldrb	w7, [sp, #120]
    e518:	mov	x6, x25
    e51c:	mov	w5, w27
    e520:	mov	w4, w24
    e524:	mov	w3, w23
    e528:	mov	w2, w28
    e52c:	mov	x1, x21
    e530:	mov	x0, x22
    e534:	bl	e100 <re_compile_fastmap+0xb0>
    e538:	mov	w19, w0
    e53c:	mov	x0, x26
    e540:	bl	0 <grub_free>
    e544:	ldp	x21, x22, [sp, #32]
    e548:	ldp	x23, x24, [sp, #48]
    e54c:	ldp	x25, x26, [sp, #64]
    e550:	mov	w0, w19
    e554:	ldp	x19, x20, [sp, #16]
    e558:	ldp	x27, x28, [sp, #80]
    e55c:	ldp	x29, x30, [sp], #112
    e560:	ret
    e564:	sxtw	x0, w28
    e568:	bl	0 <grub_malloc>
    e56c:	mov	x26, x0
    e570:	cbz	x0, e5c4 <re_compile_fastmap+0x574>
    e574:	sxtw	x19, w19
    e578:	mov	x2, x19
    e57c:	ldr	x1, [sp, #104]
    e580:	bl	0 <grub_memmove>
    e584:	sxtw	x2, w20
    e588:	mov	x1, x21
    e58c:	add	x0, x26, x19
    e590:	bl	0 <grub_memmove>
    e594:	mov	x21, x26
    e598:	b	e514 <re_compile_fastmap+0x4c4>
    e59c:	ldr	x21, [sp, #104]
    e5a0:	mov	x26, #0x0                   	// #0
    e5a4:	b	e514 <re_compile_fastmap+0x4c4>
    e5a8:	mov	w19, #0xfffffffe            	// #-2
    e5ac:	b	e550 <re_compile_fastmap+0x500>
    e5b0:	mov	w19, #0xfffffffe            	// #-2
    e5b4:	ldp	x21, x22, [sp, #32]
    e5b8:	ldp	x23, x24, [sp, #48]
    e5bc:	ldp	x25, x26, [sp, #64]
    e5c0:	b	e550 <re_compile_fastmap+0x500>
    e5c4:	mov	w19, #0xfffffffe            	// #-2
    e5c8:	ldp	x21, x22, [sp, #32]
    e5cc:	ldp	x23, x24, [sp, #48]
    e5d0:	ldp	x25, x26, [sp, #64]
    e5d4:	b	e550 <re_compile_fastmap+0x500>

000000000000e5d8 <regcomp>:
    e5d8:	stp	x29, x30, [sp, #-64]!
    e5dc:	mov	x29, sp
    e5e0:	stp	x19, x20, [sp, #16]
    e5e4:	stp	x21, x22, [sp, #32]
    e5e8:	str	x23, [sp, #48]
    e5ec:	mov	x19, x0
    e5f0:	mov	x22, x1
    e5f4:	mov	w20, w2
    e5f8:	tst	x20, #0x1
    e5fc:	mov	x21, #0xb2fc                	// #45820
    e600:	movk	x21, #0x3, lsl #16
    e604:	mov	x23, #0x2c6                 	// #710
    e608:	movk	x23, #0x101, lsl #16
    e60c:	csel	x23, x21, x23, ne  // ne = any
    e610:	str	xzr, [x0]
    e614:	str	xzr, [x0, #8]
    e618:	str	xzr, [x0, #16]
    e61c:	mov	x0, #0x100                 	// #256
    e620:	bl	0 <grub_malloc>
    e624:	str	x0, [x19, #32]
    e628:	cbz	x0, e6c4 <regcomp+0xec>
    e62c:	sbfiz	x21, x20, #21, #32
    e630:	and	x21, x21, #0x400000
    e634:	orr	x21, x21, x23
    e638:	mov	w1, #0x0                   	// #0
    e63c:	tbz	w20, #2, e64c <regcomp+0x74>
    e640:	and	x21, x21, #0xffffffffffffffbf
    e644:	orr	x21, x21, #0x100
    e648:	mov	w1, #0x1                   	// #1
    e64c:	ldrb	w0, [x19, #56]
    e650:	bfi	w0, w1, #7, #1
    e654:	ubfx	x20, x20, #3, #1
    e658:	bfi	w0, w20, #4, #1
    e65c:	strb	w0, [x19, #56]
    e660:	str	xzr, [x19, #40]
    e664:	mov	x0, x22
    e668:	bl	0 <grub_strlen>
    e66c:	mov	x3, x21
    e670:	mov	x2, x0
    e674:	mov	x1, x22
    e678:	mov	x0, x19
    e67c:	bl	d518 <grub_mod_fini+0xd1c8>
    e680:	mov	w20, w0
    e684:	cmp	w0, #0x10
    e688:	b.eq	e6b0 <regcomp+0xd8>  // b.none
    e68c:	cbnz	w0, e6b4 <regcomp+0xdc>
    e690:	mov	x0, x19
    e694:	bl	e050 <re_compile_fastmap>
    e698:	mov	w0, w20
    e69c:	ldp	x19, x20, [sp, #16]
    e6a0:	ldp	x21, x22, [sp, #32]
    e6a4:	ldr	x23, [sp, #48]
    e6a8:	ldp	x29, x30, [sp], #64
    e6ac:	ret
    e6b0:	mov	w20, #0x8                   	// #8
    e6b4:	ldr	x0, [x19, #32]
    e6b8:	bl	0 <grub_free>
    e6bc:	str	xzr, [x19, #32]
    e6c0:	b	e698 <regcomp+0xc0>
    e6c4:	mov	w20, #0xc                   	// #12
    e6c8:	b	e698 <regcomp+0xc0>

000000000000e6cc <regerror>:
    e6cc:	stp	x29, x30, [sp, #-48]!
    e6d0:	mov	x29, sp
    e6d4:	stp	x19, x20, [sp, #16]
    e6d8:	stp	x21, x22, [sp, #32]
    e6dc:	mov	x22, x2
    e6e0:	mov	x20, x3
    e6e4:	cmp	w0, #0x10
    e6e8:	b.hi	e740 <regerror+0x74>  // b.pmore
    e6ec:	adrp	x1, 0 <grub_mod_init-0x2b0>
    e6f0:	ldr	x1, [x1]
    e6f4:	add	x21, x1, #0xa8
    e6f8:	add	x1, x1, #0x228
    e6fc:	ldr	x0, [x1, w0, sxtw #3]
    e700:	add	x21, x21, x0
    e704:	mov	x0, x21
    e708:	bl	0 <grub_strlen>
    e70c:	add	x19, x0, #0x1
    e710:	cbz	x20, e72c <regerror+0x60>
    e714:	mov	x2, x19
    e718:	cmp	x19, x20
    e71c:	b.hi	e74c <regerror+0x80>  // b.pmore
    e720:	mov	x1, x21
    e724:	mov	x0, x22
    e728:	bl	0 <grub_memmove>
    e72c:	mov	x0, x19
    e730:	ldp	x19, x20, [sp, #16]
    e734:	ldp	x21, x22, [sp, #32]
    e738:	ldp	x29, x30, [sp], #48
    e73c:	ret
    e740:	adrp	x0, 0 <grub_mod_init-0x2b0>
    e744:	ldr	x21, [x0]
    e748:	b	e704 <regerror+0x38>
    e74c:	sub	x2, x20, #0x1
    e750:	strb	wzr, [x22, x2]
    e754:	b	e720 <regerror+0x54>
	...

000000000000e768 <regfree>:
    e768:	stp	x29, x30, [sp, #-32]!
    e76c:	mov	x29, sp
    e770:	str	x19, [sp, #16]
    e774:	mov	x19, x0
    e778:	ldr	x0, [x0]
    e77c:	cbz	x0, e784 <regfree+0x1c>
    e780:	bl	45f4 <grub_mod_fini+0x42a4>
    e784:	str	xzr, [x19]
    e788:	str	xzr, [x19, #8]
    e78c:	ldr	x0, [x19, #32]
    e790:	bl	0 <grub_free>
    e794:	str	xzr, [x19, #32]
    e798:	ldr	x0, [x19, #40]
    e79c:	bl	0 <grub_free>
    e7a0:	str	xzr, [x19, #40]
    e7a4:	ldr	x19, [sp, #16]
    e7a8:	ldp	x29, x30, [sp], #32
    e7ac:	ret

000000000000e7b0 <regexec>:
    e7b0:	tst	w4, #0xfffffff8
    e7b4:	b.ne	e878 <regexec+0xc8>  // b.any
    e7b8:	sub	sp, sp, #0x50
    e7bc:	stp	x29, x30, [sp, #16]
    e7c0:	add	x29, sp, #0x10
    e7c4:	stp	x19, x20, [sp, #32]
    e7c8:	stp	x21, x22, [sp, #48]
    e7cc:	stp	x23, x24, [sp, #64]
    e7d0:	mov	x20, x0
    e7d4:	mov	x22, x1
    e7d8:	mov	x24, x2
    e7dc:	mov	x21, x3
    e7e0:	mov	w19, w4
    e7e4:	and	w23, w4, #0x4
    e7e8:	tbz	w19, #2, e840 <regexec+0x90>
    e7ec:	ldr	w23, [x3]
    e7f0:	ldr	w2, [x3, #4]
    e7f4:	ldrb	w0, [x20, #56]
    e7f8:	tbz	w0, #4, e850 <regexec+0xa0>
    e7fc:	str	w19, [sp]
    e800:	mov	x7, #0x0                   	// #0
    e804:	mov	x6, #0x0                   	// #0
    e808:	mov	w5, w2
    e80c:	mov	w4, w2
    e810:	mov	w3, w23
    e814:	mov	x1, x22
    e818:	mov	x0, x20
    e81c:	bl	b168 <grub_mod_fini+0xae18>
    e820:	cmp	w0, #0x0
    e824:	cset	w0, ne  // ne = any
    e828:	ldp	x19, x20, [sp, #32]
    e82c:	ldp	x21, x22, [sp, #48]
    e830:	ldp	x23, x24, [sp, #64]
    e834:	ldp	x29, x30, [sp, #16]
    e838:	add	sp, sp, #0x50
    e83c:	ret
    e840:	mov	x0, x1
    e844:	bl	0 <grub_strlen>
    e848:	mov	w2, w0
    e84c:	b	e7f4 <regexec+0x44>
    e850:	str	w19, [sp]
    e854:	mov	x7, x21
    e858:	mov	x6, x24
    e85c:	mov	w5, w2
    e860:	mov	w4, w2
    e864:	mov	w3, w23
    e868:	mov	x1, x22
    e86c:	mov	x0, x20
    e870:	bl	b168 <grub_mod_fini+0xae18>
    e874:	b	e820 <regexec+0x70>
    e878:	mov	w0, #0x2                   	// #2
    e87c:	ret

000000000000e880 <re_match>:
    e880:	stp	x29, x30, [sp, #-16]!
    e884:	mov	x29, sp
    e888:	mov	w5, w2
    e88c:	mov	w7, #0x1                   	// #1
    e890:	mov	x6, x4
    e894:	mov	w4, #0x0                   	// #0
    e898:	bl	e100 <re_compile_fastmap+0xb0>
    e89c:	ldp	x29, x30, [sp], #16
    e8a0:	ret

000000000000e8a4 <re_search>:
    e8a4:	stp	x29, x30, [sp, #-16]!
    e8a8:	mov	x29, sp
    e8ac:	mov	w7, #0x0                   	// #0
    e8b0:	mov	x6, x5
    e8b4:	mov	w5, w2
    e8b8:	bl	e100 <re_compile_fastmap+0xb0>
    e8bc:	ldp	x29, x30, [sp], #16
    e8c0:	ret

000000000000e8c4 <re_match_2>:
    e8c4:	sub	sp, sp, #0x20
    e8c8:	stp	x29, x30, [sp, #16]
    e8cc:	add	x29, sp, #0x10
    e8d0:	mov	w8, #0x1                   	// #1
    e8d4:	strb	w8, [sp, #8]
    e8d8:	str	w7, [sp]
    e8dc:	mov	x7, x6
    e8e0:	mov	w6, #0x0                   	// #0
    e8e4:	bl	e4a8 <re_compile_fastmap+0x458>
    e8e8:	ldp	x29, x30, [sp, #16]
    e8ec:	add	sp, sp, #0x20
    e8f0:	ret

000000000000e8f4 <re_search_2>:
    e8f4:	sub	sp, sp, #0x20
    e8f8:	stp	x29, x30, [sp, #16]
    e8fc:	add	x29, sp, #0x10
    e900:	strb	wzr, [sp, #8]
    e904:	ldr	w8, [sp, #32]
    e908:	str	w8, [sp]
    e90c:	bl	e4a8 <re_compile_fastmap+0x458>
    e910:	ldp	x29, x30, [sp, #16]
    e914:	add	sp, sp, #0x20
    e918:	ret

000000000000e91c <re_set_registers>:
    e91c:	cbz	w2, e940 <re_set_registers+0x24>
    e920:	ldrb	w5, [x0, #56]
    e924:	mov	w6, #0x1                   	// #1
    e928:	bfi	w5, w6, #1, #2
    e92c:	strb	w5, [x0, #56]
    e930:	str	w2, [x1]
    e934:	str	x3, [x1, #8]
    e938:	str	x4, [x1, #16]
    e93c:	ret
    e940:	ldrb	w2, [x0, #56]
    e944:	and	w2, w2, #0xfffffff9
    e948:	strb	w2, [x0, #56]
    e94c:	str	wzr, [x1]
    e950:	str	xzr, [x1, #16]
    e954:	str	xzr, [x1, #8]
    e958:	b	e93c <re_set_registers+0x20>
