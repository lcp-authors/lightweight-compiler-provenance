
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha256.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 13000 <PyInit__sha256@@Base+0x11fac>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha256@@Base-0xd4>:
     f80:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	nop
     f98:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
     f9c:	add	x0, x0, #0x690
     fa0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x12fac>
     fa4:	add	x1, x1, #0x690
     fa8:	cmp	x1, x0
     fac:	b.eq	fc4 <_Py_strhex@plt+0x54>  // b.none
     fb0:	adrp	x1, 13000 <PyInit__sha256@@Base+0x11fac>
     fb4:	ldr	x1, [x1, #4008]
     fb8:	cbz	x1, fc4 <_Py_strhex@plt+0x54>
     fbc:	mov	x16, x1
     fc0:	br	x16
     fc4:	ret
     fc8:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
     fcc:	add	x0, x0, #0x690
     fd0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x12fac>
     fd4:	add	x1, x1, #0x690
     fd8:	sub	x1, x1, x0
     fdc:	lsr	x2, x1, #63
     fe0:	add	x1, x2, x1, asr #3
     fe4:	cmp	xzr, x1, asr #1
     fe8:	asr	x1, x1, #1
     fec:	b.eq	1004 <_Py_strhex@plt+0x94>  // b.none
     ff0:	adrp	x2, 13000 <PyInit__sha256@@Base+0x11fac>
     ff4:	ldr	x2, [x2, #4064]
     ff8:	cbz	x2, 1004 <_Py_strhex@plt+0x94>
     ffc:	mov	x16, x2
    1000:	br	x16
    1004:	ret
    1008:	stp	x29, x30, [sp, #-32]!
    100c:	mov	x29, sp
    1010:	str	x19, [sp, #16]
    1014:	adrp	x19, 14000 <PyInit__sha256@@Base+0x12fac>
    1018:	ldrb	w0, [x19, #1680]
    101c:	cbnz	w0, 1044 <_Py_strhex@plt+0xd4>
    1020:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
    1024:	ldr	x0, [x0, #4016]
    1028:	cbz	x0, 1038 <_Py_strhex@plt+0xc8>
    102c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1030:	ldr	x0, [x0, #152]
    1034:	bl	e70 <__cxa_finalize@plt>
    1038:	bl	f98 <_Py_strhex@plt+0x28>
    103c:	mov	w0, #0x1                   	// #1
    1040:	strb	w0, [x19, #1680]
    1044:	ldr	x19, [sp, #16]
    1048:	ldp	x29, x30, [sp], #32
    104c:	ret
    1050:	b	fc8 <_Py_strhex@plt+0x58>

0000000000001054 <PyInit__sha256@@Base>:
    1054:	stp	x29, x30, [sp, #-32]!
    1058:	stp	x20, x19, [sp, #16]
    105c:	mov	x29, sp
    1060:	adrp	x20, 13000 <PyInit__sha256@@Base+0x11fac>
    1064:	ldr	x20, [x20, #4048]
    1068:	adrp	x19, 14000 <PyInit__sha256@@Base+0x12fac>
    106c:	add	x19, x19, #0x350
    1070:	mov	x0, x19
    1074:	str	x20, [x19, #8]
    1078:	bl	ee0 <PyType_Ready@plt>
    107c:	tbnz	w0, #31, 10fc <PyInit__sha256@@Base+0xa8>
    1080:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1084:	add	x0, x0, #0x4f0
    1088:	str	x20, [x0, #8]
    108c:	bl	ee0 <PyType_Ready@plt>
    1090:	tbnz	w0, #31, 10fc <PyInit__sha256@@Base+0xa8>
    1094:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1098:	add	x0, x0, #0x2e8
    109c:	mov	w1, #0x3f5                 	// #1013
    10a0:	bl	f20 <PyModule_Create2@plt>
    10a4:	mov	x20, x0
    10a8:	cbz	x0, 10ec <PyInit__sha256@@Base+0x98>
    10ac:	ldr	x8, [x19]
    10b0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    10b4:	add	x1, x1, #0x5b0
    10b8:	mov	x0, x20
    10bc:	add	x8, x8, #0x1
    10c0:	mov	x2, x19
    10c4:	str	x8, [x19]
    10c8:	bl	f50 <PyModule_AddObject@plt>
    10cc:	ldr	x8, [x19, #416]
    10d0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    10d4:	add	x2, x19, #0x1a0
    10d8:	add	x1, x1, #0x5bb
    10dc:	add	x8, x8, #0x1
    10e0:	mov	x0, x20
    10e4:	str	x8, [x19, #416]
    10e8:	bl	f50 <PyModule_AddObject@plt>
    10ec:	mov	x0, x20
    10f0:	ldp	x20, x19, [sp, #16]
    10f4:	ldp	x29, x30, [sp], #32
    10f8:	ret
    10fc:	mov	x20, xzr
    1100:	mov	x0, x20
    1104:	ldp	x20, x19, [sp, #16]
    1108:	ldp	x29, x30, [sp], #32
    110c:	ret
    1110:	b	ed0 <PyObject_Free@plt>
    1114:	stp	x29, x30, [sp, #-32]!
    1118:	str	x19, [sp, #16]
    111c:	mov	x29, sp
    1120:	ldr	x8, [x0, #8]
    1124:	adrp	x9, 14000 <PyInit__sha256@@Base+0x12fac>
    1128:	add	x9, x9, #0x4f0
    112c:	mov	x19, x0
    1130:	cmp	x8, x9
    1134:	b.eq	118c <PyInit__sha256@@Base+0x138>  // b.none
    1138:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    113c:	add	x0, x0, #0x350
    1140:	bl	f40 <_PyObject_New@plt>
    1144:	cbz	x0, 1180 <PyInit__sha256@@Base+0x12c>
    1148:	ldr	x8, [x19, #120]
    114c:	str	x8, [x0, #120]
    1150:	ldr	x8, [x19, #48]
    1154:	str	x8, [x0, #48]
    1158:	ldp	q1, q0, [x19, #16]
    115c:	stp	q1, q0, [x0, #16]
    1160:	ldur	q0, [x19, #104]
    1164:	ldur	q1, [x19, #88]
    1168:	ldur	q2, [x19, #72]
    116c:	ldur	q3, [x19, #56]
    1170:	stur	q0, [x0, #104]
    1174:	stur	q1, [x0, #88]
    1178:	stur	q2, [x0, #72]
    117c:	stur	q3, [x0, #56]
    1180:	ldr	x19, [sp, #16]
    1184:	ldp	x29, x30, [sp], #32
    1188:	ret
    118c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    1190:	add	x0, x0, #0x4f0
    1194:	bl	f40 <_PyObject_New@plt>
    1198:	cbnz	x0, 1148 <PyInit__sha256@@Base+0xf4>
    119c:	b	1180 <PyInit__sha256@@Base+0x12c>
    11a0:	sub	sp, sp, #0xc0
    11a4:	stp	x29, x30, [sp, #160]
    11a8:	str	x19, [sp, #176]
    11ac:	add	x29, sp, #0xa0
    11b0:	ldr	x8, [x0, #120]
    11b4:	mov	x19, x0
    11b8:	mov	x1, sp
    11bc:	str	x8, [sp, #120]
    11c0:	ldr	x8, [x0, #48]
    11c4:	str	x8, [sp, #48]
    11c8:	ldp	q1, q0, [x0, #16]
    11cc:	stp	q1, q0, [sp, #16]
    11d0:	ldur	q0, [x0, #104]
    11d4:	ldur	q1, [x0, #88]
    11d8:	ldur	q2, [x0, #72]
    11dc:	ldur	q3, [x0, #56]
    11e0:	sub	x0, x29, #0x20
    11e4:	stur	q0, [sp, #104]
    11e8:	stur	q1, [sp, #88]
    11ec:	stur	q2, [sp, #72]
    11f0:	stur	q3, [sp, #56]
    11f4:	bl	143c <PyInit__sha256@@Base+0x3e8>
    11f8:	ldrsw	x1, [x19, #124]
    11fc:	sub	x0, x29, #0x20
    1200:	bl	e80 <PyBytes_FromStringAndSize@plt>
    1204:	ldr	x19, [sp, #176]
    1208:	ldp	x29, x30, [sp, #160]
    120c:	add	sp, sp, #0xc0
    1210:	ret
    1214:	sub	sp, sp, #0xc0
    1218:	stp	x29, x30, [sp, #160]
    121c:	str	x19, [sp, #176]
    1220:	add	x29, sp, #0xa0
    1224:	ldr	x8, [x0, #120]
    1228:	mov	x19, x0
    122c:	mov	x1, sp
    1230:	str	x8, [sp, #120]
    1234:	ldr	x8, [x0, #48]
    1238:	str	x8, [sp, #48]
    123c:	ldp	q1, q0, [x0, #16]
    1240:	stp	q1, q0, [sp, #16]
    1244:	ldur	q0, [x0, #104]
    1248:	ldur	q1, [x0, #88]
    124c:	ldur	q2, [x0, #72]
    1250:	ldur	q3, [x0, #56]
    1254:	sub	x0, x29, #0x20
    1258:	stur	q0, [sp, #104]
    125c:	stur	q1, [sp, #88]
    1260:	stur	q2, [sp, #72]
    1264:	stur	q3, [sp, #56]
    1268:	bl	143c <PyInit__sha256@@Base+0x3e8>
    126c:	ldrsw	x1, [x19, #124]
    1270:	sub	x0, x29, #0x20
    1274:	bl	f70 <_Py_strhex@plt>
    1278:	ldr	x19, [sp, #176]
    127c:	ldp	x29, x30, [sp, #160]
    1280:	add	sp, sp, #0xc0
    1284:	ret
    1288:	sub	sp, sp, #0x90
    128c:	stp	x29, x30, [sp, #80]
    1290:	str	x23, [sp, #96]
    1294:	stp	x22, x21, [sp, #112]
    1298:	stp	x20, x19, [sp, #128]
    129c:	add	x29, sp, #0x50
    12a0:	ldr	x9, [x1, #8]
    12a4:	ldrb	w10, [x9, #171]
    12a8:	tbnz	w10, #4, 130c <PyInit__sha256@@Base+0x2b8>
    12ac:	ldr	x9, [x9, #160]
    12b0:	cbz	x9, 1320 <PyInit__sha256@@Base+0x2cc>
    12b4:	ldr	x9, [x9]
    12b8:	cbz	x9, 1320 <PyInit__sha256@@Base+0x2cc>
    12bc:	mov	x8, x1
    12c0:	mov	x19, x0
    12c4:	mov	x1, sp
    12c8:	mov	x0, x8
    12cc:	mov	w2, wzr
    12d0:	bl	f30 <PyObject_GetBuffer@plt>
    12d4:	cmn	w0, #0x1
    12d8:	b.eq	1338 <PyInit__sha256@@Base+0x2e4>  // b.none
    12dc:	ldr	w8, [sp, #36]
    12e0:	cmp	w8, #0x2
    12e4:	b.lt	1354 <PyInit__sha256@@Base+0x300>  // b.tstop
    12e8:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    12ec:	ldr	x8, [x8, #4024]
    12f0:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    12f4:	add	x1, x1, #0x644
    12f8:	ldr	x0, [x8]
    12fc:	bl	eb0 <PyErr_SetString@plt>
    1300:	mov	x0, sp
    1304:	bl	e60 <PyBuffer_Release@plt>
    1308:	b	1338 <PyInit__sha256@@Base+0x2e4>
    130c:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    1310:	ldr	x8, [x8, #4032]
    1314:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    1318:	add	x1, x1, #0x5eb
    131c:	b	1330 <PyInit__sha256@@Base+0x2dc>
    1320:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    1324:	ldr	x8, [x8, #4032]
    1328:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    132c:	add	x1, x1, #0x61a
    1330:	ldr	x0, [x8]
    1334:	bl	eb0 <PyErr_SetString@plt>
    1338:	mov	x0, xzr
    133c:	ldp	x20, x19, [sp, #128]
    1340:	ldp	x22, x21, [sp, #112]
    1344:	ldr	x23, [sp, #96]
    1348:	ldp	x29, x30, [sp, #80]
    134c:	add	sp, sp, #0x90
    1350:	ret
    1354:	ldr	x23, [sp, #16]
    1358:	ldp	w8, w9, [x19, #48]
    135c:	ldr	x20, [sp]
    1360:	adds	w8, w8, w23, lsl #3
    1364:	b.cc	1370 <PyInit__sha256@@Base+0x31c>  // b.lo, b.ul, b.last
    1368:	add	w9, w9, #0x1
    136c:	str	w9, [x19, #52]
    1370:	ldrsw	x10, [x19, #120]
    1374:	add	w9, w9, w23, lsr #29
    1378:	stp	w8, w9, [x19, #48]
    137c:	cbz	w10, 13cc <PyInit__sha256@@Base+0x378>
    1380:	mov	w8, #0x40                  	// #64
    1384:	sub	w8, w8, w10
    1388:	sxtw	x8, w8
    138c:	cmp	x23, x8
    1390:	add	x9, x19, x10
    1394:	csel	x21, x23, x8, lt  // lt = tstop
    1398:	add	x0, x9, #0x38
    139c:	mov	x1, x20
    13a0:	mov	x2, x21
    13a4:	bl	e50 <memcpy@plt>
    13a8:	ldr	w8, [x19, #120]
    13ac:	add	w8, w8, w21
    13b0:	cmp	w8, #0x40
    13b4:	str	w8, [x19, #120]
    13b8:	b.ne	141c <PyInit__sha256@@Base+0x3c8>  // b.any
    13bc:	mov	x0, x19
    13c0:	add	x20, x20, x21
    13c4:	sub	x23, x23, x21
    13c8:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    13cc:	cmp	x23, #0x40
    13d0:	add	x21, x19, #0x38
    13d4:	b.lt	1404 <PyInit__sha256@@Base+0x3b0>  // b.tstop
    13d8:	ldp	q0, q1, [x20, #32]
    13dc:	ldp	q2, q3, [x20], #64
    13e0:	mov	x0, x19
    13e4:	sub	x22, x23, #0x40
    13e8:	stp	q0, q1, [x21, #32]
    13ec:	stp	q2, q3, [x21]
    13f0:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    13f4:	cmp	x23, #0x7f
    13f8:	mov	x23, x22
    13fc:	b.gt	13d8 <PyInit__sha256@@Base+0x384>
    1400:	b	1408 <PyInit__sha256@@Base+0x3b4>
    1404:	mov	x22, x23
    1408:	mov	x0, x21
    140c:	mov	x1, x20
    1410:	mov	x2, x22
    1414:	bl	e50 <memcpy@plt>
    1418:	str	w22, [x19, #120]
    141c:	mov	x0, sp
    1420:	bl	e60 <PyBuffer_Release@plt>
    1424:	adrp	x0, 13000 <PyInit__sha256@@Base+0x11fac>
    1428:	ldr	x0, [x0, #4056]
    142c:	ldr	x8, [x0]
    1430:	add	x8, x8, #0x1
    1434:	str	x8, [x0]
    1438:	b	133c <PyInit__sha256@@Base+0x2e8>
    143c:	stp	x29, x30, [sp, #-48]!
    1440:	stp	x22, x21, [sp, #16]
    1444:	stp	x20, x19, [sp, #32]
    1448:	mov	x29, sp
    144c:	ldp	w21, w22, [x1, #48]
    1450:	add	x9, x1, #0x38
    1454:	mov	x20, x1
    1458:	mov	x19, x0
    145c:	ubfx	x8, x21, #3, #6
    1460:	add	w11, w8, #0x1
    1464:	mov	w10, #0x80                  	// #128
    1468:	cmp	w8, #0x38
    146c:	add	x0, x9, x11
    1470:	strb	w10, [x9, x8]
    1474:	b.cc	14a4 <PyInit__sha256@@Base+0x450>  // b.lo, b.ul, b.last
    1478:	eor	w2, w8, #0x3f
    147c:	mov	w1, wzr
    1480:	bl	ec0 <memset@plt>
    1484:	mov	x0, x20
    1488:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    148c:	movi	v0.2d, #0x0
    1490:	str	xzr, [x20, #104]
    1494:	stur	q0, [x20, #88]
    1498:	stur	q0, [x20, #72]
    149c:	stur	q0, [x20, #56]
    14a0:	b	14b8 <PyInit__sha256@@Base+0x464>
    14a4:	mov	w9, #0x37                  	// #55
    14a8:	sub	w8, w9, w8
    14ac:	sxtw	x2, w8
    14b0:	mov	w1, wzr
    14b4:	bl	ec0 <memset@plt>
    14b8:	lsr	w8, w22, #24
    14bc:	lsr	w9, w22, #16
    14c0:	lsr	w10, w22, #8
    14c4:	lsr	w11, w21, #24
    14c8:	lsr	w12, w21, #16
    14cc:	lsr	w13, w21, #8
    14d0:	mov	x0, x20
    14d4:	strb	w22, [x20, #115]
    14d8:	strb	w8, [x20, #112]
    14dc:	strb	w9, [x20, #113]
    14e0:	strb	w10, [x20, #114]
    14e4:	strb	w11, [x20, #116]
    14e8:	strb	w12, [x20, #117]
    14ec:	strb	w13, [x20, #118]
    14f0:	strb	w21, [x20, #119]
    14f4:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    14f8:	ldrb	w8, [x20, #19]
    14fc:	strb	w8, [x19]
    1500:	ldrh	w8, [x20, #18]
    1504:	strb	w8, [x19, #1]
    1508:	ldr	w8, [x20, #16]
    150c:	lsr	w8, w8, #8
    1510:	strb	w8, [x19, #2]
    1514:	ldr	w8, [x20, #16]
    1518:	strb	w8, [x19, #3]
    151c:	ldrb	w8, [x20, #23]
    1520:	strb	w8, [x19, #4]
    1524:	ldrh	w8, [x20, #22]
    1528:	strb	w8, [x19, #5]
    152c:	ldr	w8, [x20, #20]
    1530:	lsr	w8, w8, #8
    1534:	strb	w8, [x19, #6]
    1538:	ldr	w8, [x20, #20]
    153c:	strb	w8, [x19, #7]
    1540:	ldrb	w8, [x20, #27]
    1544:	strb	w8, [x19, #8]
    1548:	ldrh	w8, [x20, #26]
    154c:	strb	w8, [x19, #9]
    1550:	ldr	w8, [x20, #24]
    1554:	lsr	w8, w8, #8
    1558:	strb	w8, [x19, #10]
    155c:	ldr	w8, [x20, #24]
    1560:	strb	w8, [x19, #11]
    1564:	ldrb	w8, [x20, #31]
    1568:	strb	w8, [x19, #12]
    156c:	ldrh	w8, [x20, #30]
    1570:	strb	w8, [x19, #13]
    1574:	ldr	w8, [x20, #28]
    1578:	lsr	w8, w8, #8
    157c:	strb	w8, [x19, #14]
    1580:	ldr	w8, [x20, #28]
    1584:	strb	w8, [x19, #15]
    1588:	ldrb	w8, [x20, #35]
    158c:	strb	w8, [x19, #16]
    1590:	ldrh	w8, [x20, #34]
    1594:	strb	w8, [x19, #17]
    1598:	ldr	w8, [x20, #32]
    159c:	lsr	w8, w8, #8
    15a0:	strb	w8, [x19, #18]
    15a4:	ldr	w8, [x20, #32]
    15a8:	strb	w8, [x19, #19]
    15ac:	ldrb	w8, [x20, #39]
    15b0:	strb	w8, [x19, #20]
    15b4:	ldrh	w8, [x20, #38]
    15b8:	strb	w8, [x19, #21]
    15bc:	ldr	w8, [x20, #36]
    15c0:	lsr	w8, w8, #8
    15c4:	strb	w8, [x19, #22]
    15c8:	ldr	w8, [x20, #36]
    15cc:	strb	w8, [x19, #23]
    15d0:	ldrb	w8, [x20, #43]
    15d4:	strb	w8, [x19, #24]
    15d8:	ldrh	w8, [x20, #42]
    15dc:	strb	w8, [x19, #25]
    15e0:	ldr	w8, [x20, #40]
    15e4:	lsr	w8, w8, #8
    15e8:	strb	w8, [x19, #26]
    15ec:	ldr	w8, [x20, #40]
    15f0:	strb	w8, [x19, #27]
    15f4:	ldrb	w8, [x20, #47]
    15f8:	strb	w8, [x19, #28]
    15fc:	ldrh	w8, [x20, #46]
    1600:	strb	w8, [x19, #29]
    1604:	ldr	w8, [x20, #44]
    1608:	lsr	w8, w8, #8
    160c:	strb	w8, [x19, #30]
    1610:	ldr	w8, [x20, #44]
    1614:	strb	w8, [x19, #31]
    1618:	ldp	x20, x19, [sp, #32]
    161c:	ldp	x22, x21, [sp, #16]
    1620:	ldp	x29, x30, [sp], #48
    1624:	ret
    1628:	sub	sp, sp, #0x130
    162c:	str	x29, [sp, #288]
    1630:	ldur	q0, [x0, #56]
    1634:	ldur	q1, [x0, #72]
    1638:	ldur	q2, [x0, #88]
    163c:	ldur	q3, [x0, #104]
    1640:	stp	q0, q1, [sp]
    1644:	ldp	w9, w8, [sp]
    1648:	stp	q2, q3, [sp, #32]
    164c:	rev	w8, w8
    1650:	str	w8, [sp, #4]
    1654:	ldp	w10, w8, [sp, #8]
    1658:	rev	w10, w10
    165c:	rev	w8, w8
    1660:	stp	w10, w8, [sp, #8]
    1664:	ldp	w10, w8, [sp, #16]
    1668:	rev	w10, w10
    166c:	rev	w8, w8
    1670:	stp	w10, w8, [sp, #16]
    1674:	ldp	w10, w8, [sp, #24]
    1678:	rev	w10, w10
    167c:	rev	w8, w8
    1680:	stp	w10, w8, [sp, #24]
    1684:	ldp	w10, w8, [sp, #32]
    1688:	rev	w10, w10
    168c:	rev	w8, w8
    1690:	stp	w10, w8, [sp, #32]
    1694:	ldp	w10, w8, [sp, #40]
    1698:	rev	w10, w10
    169c:	rev	w8, w8
    16a0:	stp	w10, w8, [sp, #40]
    16a4:	ldp	w10, w8, [sp, #48]
    16a8:	rev	w10, w10
    16ac:	str	w10, [sp, #48]
    16b0:	ldp	w10, w11, [sp, #56]
    16b4:	rev	w8, w8
    16b8:	str	w8, [sp, #52]
    16bc:	rev	w8, w10
    16c0:	rev	w10, w9
    16c4:	rev	w9, w11
    16c8:	stp	w8, w9, [sp, #56]
    16cc:	mov	w8, #0x40                  	// #64
    16d0:	mov	x9, sp
    16d4:	str	w10, [sp]
    16d8:	add	x11, x9, x8
    16dc:	ldur	w13, [x11, #-28]
    16e0:	ldur	w12, [x11, #-8]
    16e4:	add	x8, x8, #0x4
    16e8:	cmp	x8, #0x100
    16ec:	add	w10, w10, w13
    16f0:	ldur	w13, [x11, #-60]
    16f4:	ror	w14, w12, #19
    16f8:	eor	w14, w14, w12, lsr #10
    16fc:	eor	w12, w14, w12, ror #17
    1700:	add	w10, w10, w12
    1704:	ror	w12, w13, #18
    1708:	eor	w12, w12, w13, lsr #3
    170c:	eor	w12, w12, w13, ror #7
    1710:	add	w10, w10, w12
    1714:	str	w10, [x11]
    1718:	mov	w10, w13
    171c:	b.ne	16d8 <PyInit__sha256@@Base+0x684>  // b.any
    1720:	ldp	q1, q0, [x0, #16]
    1724:	ldp	w9, w10, [sp]
    1728:	stp	q1, q0, [sp, #256]
    172c:	ldr	w12, [sp, #284]
    1730:	ldr	w13, [sp, #280]
    1734:	ldr	w14, [sp, #272]
    1738:	ldr	w15, [sp, #276]
    173c:	ldr	w8, [sp, #256]
    1740:	ldr	w11, [sp, #260]
    1744:	ldr	w16, [sp, #264]
    1748:	bic	w18, w13, w14
    174c:	add	w9, w12, w9
    1750:	and	w12, w15, w14
    1754:	add	w13, w13, w10
    1758:	orr	w10, w11, w8
    175c:	orr	w12, w12, w18
    1760:	and	w18, w11, w8
    1764:	and	w10, w10, w16
    1768:	orr	w10, w10, w18
    176c:	ror	w18, w14, #6
    1770:	eor	w18, w18, w14, ror #11
    1774:	eor	w18, w18, w14, ror #25
    1778:	add	w9, w9, w18
    177c:	ror	w18, w8, #2
    1780:	eor	w18, w18, w8, ror #13
    1784:	eor	w18, w18, w8, ror #22
    1788:	add	w10, w18, w10
    178c:	mov	w18, #0x2f98                	// #12184
    1790:	ldr	w17, [sp, #268]
    1794:	add	w9, w9, w12
    1798:	movk	w18, #0x428a, lsl #16
    179c:	add	w9, w9, w18
    17a0:	ldp	w12, w18, [sp, #8]
    17a4:	add	w17, w9, w17
    17a8:	add	w10, w10, w9
    17ac:	bic	w9, w15, w17
    17b0:	add	w12, w15, w12
    17b4:	and	w15, w14, w17
    17b8:	orr	w9, w15, w9
    17bc:	orr	w15, w10, w8
    17c0:	add	w9, w13, w9
    17c4:	and	w13, w10, w8
    17c8:	and	w15, w15, w11
    17cc:	orr	w13, w15, w13
    17d0:	ror	w15, w17, #6
    17d4:	eor	w15, w15, w17, ror #11
    17d8:	eor	w15, w15, w17, ror #25
    17dc:	add	w9, w9, w15
    17e0:	ror	w15, w10, #2
    17e4:	eor	w15, w15, w10, ror #13
    17e8:	eor	w15, w15, w10, ror #22
    17ec:	add	w13, w15, w13
    17f0:	mov	w15, #0x4491                	// #17553
    17f4:	movk	w15, #0x7137, lsl #16
    17f8:	add	w9, w9, w15
    17fc:	add	w16, w9, w16
    1800:	add	w18, w14, w18
    1804:	add	w9, w13, w9
    1808:	bic	w13, w14, w16
    180c:	and	w14, w17, w16
    1810:	orr	w13, w14, w13
    1814:	orr	w14, w9, w10
    1818:	add	w12, w12, w13
    181c:	and	w13, w9, w10
    1820:	and	w14, w14, w8
    1824:	orr	w13, w14, w13
    1828:	ror	w14, w16, #6
    182c:	eor	w14, w14, w16, ror #11
    1830:	eor	w14, w14, w16, ror #25
    1834:	add	w12, w12, w14
    1838:	ror	w14, w9, #2
    183c:	mov	w15, #0xfbcf                	// #64463
    1840:	eor	w14, w14, w9, ror #13
    1844:	movk	w15, #0xb5c0, lsl #16
    1848:	eor	w14, w14, w9, ror #22
    184c:	add	w13, w14, w13
    1850:	add	w12, w12, w15
    1854:	ldp	w14, w15, [sp, #16]
    1858:	add	w1, w12, w11
    185c:	add	w11, w13, w12
    1860:	bic	w12, w17, w1
    1864:	and	w13, w16, w1
    1868:	orr	w12, w13, w12
    186c:	orr	w13, w11, w9
    1870:	str	w17, [sp, #268]
    1874:	add	w14, w17, w14
    1878:	and	w17, w11, w9
    187c:	and	w13, w13, w10
    1880:	orr	w13, w13, w17
    1884:	ror	w17, w1, #6
    1888:	eor	w17, w17, w1, ror #11
    188c:	add	w12, w18, w12
    1890:	eor	w17, w17, w1, ror #25
    1894:	add	w12, w12, w17
    1898:	ror	w17, w11, #2
    189c:	eor	w17, w17, w11, ror #13
    18a0:	eor	w17, w17, w11, ror #22
    18a4:	add	w13, w17, w13
    18a8:	mov	w17, #0xdba5                	// #56229
    18ac:	movk	w17, #0xe9b5, lsl #16
    18b0:	add	w12, w12, w17
    18b4:	add	w18, w12, w8
    18b8:	add	w8, w13, w12
    18bc:	bic	w12, w16, w18
    18c0:	and	w13, w1, w18
    18c4:	orr	w12, w13, w12
    18c8:	orr	w13, w8, w11
    18cc:	add	w12, w14, w12
    18d0:	and	w14, w8, w11
    18d4:	and	w13, w13, w9
    18d8:	orr	w13, w13, w14
    18dc:	ror	w14, w18, #6
    18e0:	eor	w14, w14, w18, ror #11
    18e4:	eor	w14, w14, w18, ror #25
    18e8:	mov	w17, #0xc25b                	// #49755
    18ec:	add	w12, w12, w14
    18f0:	ror	w14, w8, #2
    18f4:	movk	w17, #0x3956, lsl #16
    18f8:	eor	w14, w14, w8, ror #13
    18fc:	eor	w14, w14, w8, ror #22
    1900:	add	w12, w12, w17
    1904:	add	w13, w14, w13
    1908:	add	w17, w12, w10
    190c:	str	w10, [sp, #284]
    1910:	add	w10, w13, w12
    1914:	bic	w12, w1, w17
    1918:	and	w13, w18, w17
    191c:	add	w15, w16, w15
    1920:	orr	w12, w13, w12
    1924:	orr	w13, w10, w8
    1928:	add	w12, w15, w12
    192c:	and	w15, w10, w8
    1930:	and	w13, w13, w11
    1934:	orr	w13, w13, w15
    1938:	ror	w15, w17, #6
    193c:	eor	w15, w15, w17, ror #11
    1940:	eor	w15, w15, w17, ror #25
    1944:	add	w12, w12, w15
    1948:	ror	w15, w10, #2
    194c:	eor	w15, w15, w10, ror #13
    1950:	str	w16, [sp, #264]
    1954:	ldp	w14, w16, [sp, #24]
    1958:	eor	w15, w15, w10, ror #22
    195c:	add	w13, w15, w13
    1960:	mov	w15, #0x11f1                	// #4593
    1964:	movk	w15, #0x59f1, lsl #16
    1968:	add	w12, w12, w15
    196c:	str	w1, [sp, #260]
    1970:	add	w14, w14, w1
    1974:	add	w1, w12, w9
    1978:	str	w9, [sp, #280]
    197c:	add	w9, w13, w12
    1980:	bic	w12, w18, w1
    1984:	and	w13, w17, w1
    1988:	orr	w12, w13, w12
    198c:	orr	w13, w9, w10
    1990:	add	w12, w14, w12
    1994:	and	w14, w9, w10
    1998:	and	w13, w13, w8
    199c:	orr	w13, w13, w14
    19a0:	ror	w14, w1, #6
    19a4:	eor	w14, w14, w1, ror #11
    19a8:	eor	w14, w14, w1, ror #25
    19ac:	mov	w15, #0x82a4                	// #33444
    19b0:	add	w12, w12, w14
    19b4:	ror	w14, w9, #2
    19b8:	movk	w15, #0x923f, lsl #16
    19bc:	eor	w14, w14, w9, ror #13
    19c0:	eor	w14, w14, w9, ror #22
    19c4:	add	w12, w12, w15
    19c8:	str	w18, [sp, #256]
    19cc:	add	w16, w16, w18
    19d0:	add	w13, w14, w13
    19d4:	add	w18, w12, w11
    19d8:	str	w11, [sp, #276]
    19dc:	add	w11, w13, w12
    19e0:	bic	w12, w17, w18
    19e4:	and	w13, w1, w18
    19e8:	orr	w12, w13, w12
    19ec:	orr	w13, w11, w9
    19f0:	add	w12, w16, w12
    19f4:	and	w16, w11, w9
    19f8:	and	w13, w13, w10
    19fc:	orr	w13, w13, w16
    1a00:	ror	w16, w18, #6
    1a04:	eor	w16, w16, w18, ror #11
    1a08:	eor	w16, w16, w18, ror #25
    1a0c:	add	w12, w12, w16
    1a10:	ror	w16, w11, #2
    1a14:	eor	w16, w16, w11, ror #13
    1a18:	ldp	w14, w15, [sp, #32]
    1a1c:	eor	w16, w16, w11, ror #22
    1a20:	add	w13, w16, w13
    1a24:	mov	w16, #0x5ed5                	// #24277
    1a28:	movk	w16, #0xab1c, lsl #16
    1a2c:	add	w12, w12, w16
    1a30:	str	w17, [sp, #284]
    1a34:	add	w14, w14, w17
    1a38:	add	w17, w12, w8
    1a3c:	str	w8, [sp, #272]
    1a40:	add	w8, w13, w12
    1a44:	bic	w12, w1, w17
    1a48:	and	w13, w18, w17
    1a4c:	orr	w12, w13, w12
    1a50:	orr	w13, w8, w11
    1a54:	add	w12, w14, w12
    1a58:	and	w14, w8, w11
    1a5c:	and	w13, w13, w9
    1a60:	orr	w13, w13, w14
    1a64:	ror	w14, w17, #6
    1a68:	eor	w14, w14, w17, ror #11
    1a6c:	eor	w14, w14, w17, ror #25
    1a70:	mov	w16, #0xaa98                	// #43672
    1a74:	add	w12, w12, w14
    1a78:	ror	w14, w8, #2
    1a7c:	movk	w16, #0xd807, lsl #16
    1a80:	eor	w14, w14, w8, ror #13
    1a84:	eor	w14, w14, w8, ror #22
    1a88:	add	w12, w12, w16
    1a8c:	str	w1, [sp, #280]
    1a90:	add	w15, w15, w1
    1a94:	add	w13, w14, w13
    1a98:	add	w1, w12, w10
    1a9c:	str	w10, [sp, #268]
    1aa0:	add	w10, w13, w12
    1aa4:	bic	w12, w18, w1
    1aa8:	and	w13, w17, w1
    1aac:	orr	w12, w13, w12
    1ab0:	orr	w13, w10, w8
    1ab4:	add	w12, w15, w12
    1ab8:	and	w15, w10, w8
    1abc:	and	w13, w13, w11
    1ac0:	orr	w13, w13, w15
    1ac4:	ror	w15, w1, #6
    1ac8:	eor	w15, w15, w1, ror #11
    1acc:	eor	w15, w15, w1, ror #25
    1ad0:	add	w12, w12, w15
    1ad4:	ror	w15, w10, #2
    1ad8:	eor	w15, w15, w10, ror #13
    1adc:	ldp	w14, w16, [sp, #40]
    1ae0:	eor	w15, w15, w10, ror #22
    1ae4:	add	w13, w15, w13
    1ae8:	mov	w15, #0x5b01                	// #23297
    1aec:	movk	w15, #0x1283, lsl #16
    1af0:	add	w12, w12, w15
    1af4:	str	w18, [sp, #276]
    1af8:	add	w14, w14, w18
    1afc:	add	w18, w12, w9
    1b00:	str	w9, [sp, #264]
    1b04:	add	w9, w13, w12
    1b08:	bic	w12, w17, w18
    1b0c:	and	w13, w1, w18
    1b10:	orr	w12, w13, w12
    1b14:	orr	w13, w9, w10
    1b18:	add	w12, w14, w12
    1b1c:	and	w14, w9, w10
    1b20:	and	w13, w13, w8
    1b24:	orr	w13, w13, w14
    1b28:	ror	w14, w18, #6
    1b2c:	eor	w14, w14, w18, ror #11
    1b30:	eor	w14, w14, w18, ror #25
    1b34:	mov	w15, #0x85be                	// #34238
    1b38:	add	w12, w12, w14
    1b3c:	ror	w14, w9, #2
    1b40:	movk	w15, #0x2431, lsl #16
    1b44:	eor	w14, w14, w9, ror #13
    1b48:	eor	w14, w14, w9, ror #22
    1b4c:	add	w12, w12, w15
    1b50:	str	w17, [sp, #272]
    1b54:	add	w16, w16, w17
    1b58:	add	w13, w14, w13
    1b5c:	add	w17, w12, w11
    1b60:	str	w11, [sp, #260]
    1b64:	add	w11, w13, w12
    1b68:	bic	w12, w1, w17
    1b6c:	and	w13, w18, w17
    1b70:	orr	w12, w13, w12
    1b74:	orr	w13, w11, w9
    1b78:	add	w12, w16, w12
    1b7c:	and	w16, w11, w9
    1b80:	and	w13, w13, w10
    1b84:	orr	w13, w13, w16
    1b88:	ror	w16, w17, #6
    1b8c:	eor	w16, w16, w17, ror #11
    1b90:	eor	w16, w16, w17, ror #25
    1b94:	add	w12, w12, w16
    1b98:	ror	w16, w11, #2
    1b9c:	eor	w16, w16, w11, ror #13
    1ba0:	ldp	w14, w15, [sp, #48]
    1ba4:	eor	w16, w16, w11, ror #22
    1ba8:	add	w13, w16, w13
    1bac:	mov	w16, #0x7dc3                	// #32195
    1bb0:	movk	w16, #0x550c, lsl #16
    1bb4:	add	w12, w12, w16
    1bb8:	str	w1, [sp, #268]
    1bbc:	add	w14, w14, w1
    1bc0:	add	w1, w12, w8
    1bc4:	str	w8, [sp, #256]
    1bc8:	add	w8, w13, w12
    1bcc:	bic	w12, w18, w1
    1bd0:	and	w13, w17, w1
    1bd4:	orr	w12, w13, w12
    1bd8:	orr	w13, w8, w11
    1bdc:	add	w12, w14, w12
    1be0:	and	w14, w8, w11
    1be4:	and	w13, w13, w9
    1be8:	orr	w13, w13, w14
    1bec:	ror	w14, w1, #6
    1bf0:	eor	w14, w14, w1, ror #11
    1bf4:	eor	w14, w14, w1, ror #25
    1bf8:	mov	w16, #0x5d74                	// #23924
    1bfc:	add	w12, w12, w14
    1c00:	ror	w14, w8, #2
    1c04:	movk	w16, #0x72be, lsl #16
    1c08:	eor	w14, w14, w8, ror #13
    1c0c:	eor	w14, w14, w8, ror #22
    1c10:	add	w12, w12, w16
    1c14:	str	w18, [sp, #264]
    1c18:	add	w15, w15, w18
    1c1c:	add	w13, w14, w13
    1c20:	add	w18, w12, w10
    1c24:	str	w10, [sp, #284]
    1c28:	add	w10, w13, w12
    1c2c:	bic	w12, w17, w18
    1c30:	and	w13, w1, w18
    1c34:	orr	w12, w13, w12
    1c38:	orr	w13, w10, w8
    1c3c:	add	w12, w15, w12
    1c40:	and	w15, w10, w8
    1c44:	and	w13, w13, w11
    1c48:	orr	w13, w13, w15
    1c4c:	ror	w15, w18, #6
    1c50:	eor	w15, w15, w18, ror #11
    1c54:	eor	w15, w15, w18, ror #25
    1c58:	add	w12, w12, w15
    1c5c:	ror	w15, w10, #2
    1c60:	eor	w15, w15, w10, ror #13
    1c64:	ldp	w14, w16, [sp, #56]
    1c68:	eor	w15, w15, w10, ror #22
    1c6c:	add	w13, w15, w13
    1c70:	mov	w15, #0xb1fe                	// #45566
    1c74:	movk	w15, #0x80de, lsl #16
    1c78:	add	w12, w12, w15
    1c7c:	str	w17, [sp, #260]
    1c80:	add	w14, w14, w17
    1c84:	add	w17, w12, w9
    1c88:	str	w9, [sp, #280]
    1c8c:	add	w9, w13, w12
    1c90:	bic	w12, w1, w17
    1c94:	and	w13, w18, w17
    1c98:	orr	w12, w13, w12
    1c9c:	orr	w13, w9, w10
    1ca0:	add	w12, w14, w12
    1ca4:	and	w14, w9, w10
    1ca8:	and	w13, w13, w8
    1cac:	orr	w13, w13, w14
    1cb0:	ror	w14, w17, #6
    1cb4:	eor	w14, w14, w17, ror #11
    1cb8:	eor	w14, w14, w17, ror #25
    1cbc:	mov	w15, #0x6a7                 	// #1703
    1cc0:	add	w12, w12, w14
    1cc4:	ror	w14, w9, #2
    1cc8:	movk	w15, #0x9bdc, lsl #16
    1ccc:	eor	w14, w14, w9, ror #13
    1cd0:	eor	w14, w14, w9, ror #22
    1cd4:	add	w12, w12, w15
    1cd8:	str	w1, [sp, #256]
    1cdc:	add	w16, w16, w1
    1ce0:	add	w13, w14, w13
    1ce4:	add	w1, w12, w11
    1ce8:	str	w11, [sp, #276]
    1cec:	add	w11, w13, w12
    1cf0:	bic	w12, w18, w1
    1cf4:	and	w13, w17, w1
    1cf8:	orr	w12, w13, w12
    1cfc:	orr	w13, w11, w9
    1d00:	add	w12, w16, w12
    1d04:	and	w16, w11, w9
    1d08:	and	w13, w13, w10
    1d0c:	orr	w13, w13, w16
    1d10:	ror	w16, w1, #6
    1d14:	eor	w16, w16, w1, ror #11
    1d18:	eor	w16, w16, w1, ror #25
    1d1c:	add	w12, w12, w16
    1d20:	ror	w16, w11, #2
    1d24:	eor	w16, w16, w11, ror #13
    1d28:	ldp	w14, w15, [sp, #64]
    1d2c:	eor	w16, w16, w11, ror #22
    1d30:	add	w13, w16, w13
    1d34:	mov	w16, #0xf174                	// #61812
    1d38:	movk	w16, #0xc19b, lsl #16
    1d3c:	add	w12, w12, w16
    1d40:	str	w18, [sp, #284]
    1d44:	add	w14, w14, w18
    1d48:	add	w18, w12, w8
    1d4c:	str	w8, [sp, #272]
    1d50:	add	w8, w13, w12
    1d54:	bic	w12, w17, w18
    1d58:	and	w13, w1, w18
    1d5c:	orr	w12, w13, w12
    1d60:	orr	w13, w8, w11
    1d64:	add	w12, w14, w12
    1d68:	and	w14, w8, w11
    1d6c:	and	w13, w13, w9
    1d70:	orr	w13, w13, w14
    1d74:	ror	w14, w18, #6
    1d78:	eor	w14, w14, w18, ror #11
    1d7c:	eor	w14, w14, w18, ror #25
    1d80:	mov	w16, #0x69c1                	// #27073
    1d84:	add	w12, w12, w14
    1d88:	ror	w14, w8, #2
    1d8c:	movk	w16, #0xe49b, lsl #16
    1d90:	eor	w14, w14, w8, ror #13
    1d94:	eor	w14, w14, w8, ror #22
    1d98:	add	w12, w12, w16
    1d9c:	str	w17, [sp, #280]
    1da0:	add	w15, w15, w17
    1da4:	add	w13, w14, w13
    1da8:	add	w17, w12, w10
    1dac:	str	w10, [sp, #268]
    1db0:	add	w10, w13, w12
    1db4:	bic	w12, w1, w17
    1db8:	and	w13, w18, w17
    1dbc:	orr	w12, w13, w12
    1dc0:	orr	w13, w10, w8
    1dc4:	add	w12, w15, w12
    1dc8:	and	w15, w10, w8
    1dcc:	and	w13, w13, w11
    1dd0:	orr	w13, w13, w15
    1dd4:	ror	w15, w17, #6
    1dd8:	eor	w15, w15, w17, ror #11
    1ddc:	eor	w15, w15, w17, ror #25
    1de0:	add	w12, w12, w15
    1de4:	ror	w15, w10, #2
    1de8:	eor	w15, w15, w10, ror #13
    1dec:	ldp	w14, w16, [sp, #72]
    1df0:	eor	w15, w15, w10, ror #22
    1df4:	add	w13, w15, w13
    1df8:	mov	w15, #0x4786                	// #18310
    1dfc:	movk	w15, #0xefbe, lsl #16
    1e00:	add	w12, w12, w15
    1e04:	str	w1, [sp, #276]
    1e08:	add	w14, w14, w1
    1e0c:	add	w1, w12, w9
    1e10:	str	w9, [sp, #264]
    1e14:	add	w9, w13, w12
    1e18:	bic	w12, w18, w1
    1e1c:	and	w13, w17, w1
    1e20:	orr	w12, w13, w12
    1e24:	orr	w13, w9, w10
    1e28:	add	w12, w14, w12
    1e2c:	and	w14, w9, w10
    1e30:	and	w13, w13, w8
    1e34:	orr	w13, w13, w14
    1e38:	ror	w14, w1, #6
    1e3c:	eor	w14, w14, w1, ror #11
    1e40:	eor	w14, w14, w1, ror #25
    1e44:	mov	w15, #0x9dc6                	// #40390
    1e48:	add	w12, w12, w14
    1e4c:	ror	w14, w9, #2
    1e50:	movk	w15, #0xfc1, lsl #16
    1e54:	eor	w14, w14, w9, ror #13
    1e58:	eor	w14, w14, w9, ror #22
    1e5c:	add	w12, w12, w15
    1e60:	str	w18, [sp, #272]
    1e64:	add	w16, w16, w18
    1e68:	add	w13, w14, w13
    1e6c:	add	w18, w12, w11
    1e70:	str	w11, [sp, #260]
    1e74:	add	w11, w13, w12
    1e78:	bic	w12, w17, w18
    1e7c:	and	w13, w1, w18
    1e80:	orr	w12, w13, w12
    1e84:	orr	w13, w11, w9
    1e88:	add	w12, w16, w12
    1e8c:	and	w16, w11, w9
    1e90:	and	w13, w13, w10
    1e94:	orr	w13, w13, w16
    1e98:	ror	w16, w18, #6
    1e9c:	eor	w16, w16, w18, ror #11
    1ea0:	eor	w16, w16, w18, ror #25
    1ea4:	add	w12, w12, w16
    1ea8:	ror	w16, w11, #2
    1eac:	eor	w16, w16, w11, ror #13
    1eb0:	ldp	w14, w15, [sp, #80]
    1eb4:	eor	w16, w16, w11, ror #22
    1eb8:	add	w13, w16, w13
    1ebc:	mov	w16, #0xa1cc                	// #41420
    1ec0:	movk	w16, #0x240c, lsl #16
    1ec4:	add	w12, w12, w16
    1ec8:	str	w17, [sp, #268]
    1ecc:	add	w14, w14, w17
    1ed0:	add	w17, w12, w8
    1ed4:	str	w8, [sp, #256]
    1ed8:	add	w8, w13, w12
    1edc:	bic	w12, w1, w17
    1ee0:	and	w13, w18, w17
    1ee4:	orr	w12, w13, w12
    1ee8:	orr	w13, w8, w11
    1eec:	add	w12, w14, w12
    1ef0:	and	w14, w8, w11
    1ef4:	and	w13, w13, w9
    1ef8:	orr	w13, w13, w14
    1efc:	ror	w14, w17, #6
    1f00:	eor	w14, w14, w17, ror #11
    1f04:	eor	w14, w14, w17, ror #25
    1f08:	mov	w16, #0x2c6f                	// #11375
    1f0c:	add	w12, w12, w14
    1f10:	ror	w14, w8, #2
    1f14:	movk	w16, #0x2de9, lsl #16
    1f18:	eor	w14, w14, w8, ror #13
    1f1c:	eor	w14, w14, w8, ror #22
    1f20:	add	w12, w12, w16
    1f24:	str	w1, [sp, #264]
    1f28:	add	w15, w15, w1
    1f2c:	add	w13, w14, w13
    1f30:	add	w1, w12, w10
    1f34:	str	w10, [sp, #284]
    1f38:	add	w10, w13, w12
    1f3c:	bic	w12, w18, w1
    1f40:	and	w13, w17, w1
    1f44:	orr	w12, w13, w12
    1f48:	orr	w13, w10, w8
    1f4c:	add	w12, w15, w12
    1f50:	and	w15, w10, w8
    1f54:	and	w13, w13, w11
    1f58:	orr	w13, w13, w15
    1f5c:	ror	w15, w1, #6
    1f60:	eor	w15, w15, w1, ror #11
    1f64:	eor	w15, w15, w1, ror #25
    1f68:	add	w12, w12, w15
    1f6c:	ror	w15, w10, #2
    1f70:	eor	w15, w15, w10, ror #13
    1f74:	ldp	w14, w16, [sp, #88]
    1f78:	eor	w15, w15, w10, ror #22
    1f7c:	add	w13, w15, w13
    1f80:	mov	w15, #0x84aa                	// #33962
    1f84:	movk	w15, #0x4a74, lsl #16
    1f88:	add	w12, w12, w15
    1f8c:	str	w18, [sp, #260]
    1f90:	add	w14, w14, w18
    1f94:	add	w18, w12, w9
    1f98:	str	w9, [sp, #280]
    1f9c:	add	w9, w13, w12
    1fa0:	bic	w12, w17, w18
    1fa4:	and	w13, w1, w18
    1fa8:	orr	w12, w13, w12
    1fac:	orr	w13, w9, w10
    1fb0:	add	w12, w14, w12
    1fb4:	and	w14, w9, w10
    1fb8:	and	w13, w13, w8
    1fbc:	orr	w13, w13, w14
    1fc0:	ror	w14, w18, #6
    1fc4:	eor	w14, w14, w18, ror #11
    1fc8:	eor	w14, w14, w18, ror #25
    1fcc:	mov	w15, #0xa9dc                	// #43484
    1fd0:	add	w12, w12, w14
    1fd4:	ror	w14, w9, #2
    1fd8:	movk	w15, #0x5cb0, lsl #16
    1fdc:	eor	w14, w14, w9, ror #13
    1fe0:	eor	w14, w14, w9, ror #22
    1fe4:	add	w12, w12, w15
    1fe8:	str	w17, [sp, #256]
    1fec:	add	w16, w16, w17
    1ff0:	add	w13, w14, w13
    1ff4:	add	w17, w12, w11
    1ff8:	str	w11, [sp, #276]
    1ffc:	add	w11, w13, w12
    2000:	bic	w12, w1, w17
    2004:	and	w13, w18, w17
    2008:	orr	w12, w13, w12
    200c:	orr	w13, w11, w9
    2010:	add	w12, w16, w12
    2014:	and	w16, w11, w9
    2018:	and	w13, w13, w10
    201c:	orr	w13, w13, w16
    2020:	ror	w16, w17, #6
    2024:	eor	w16, w16, w17, ror #11
    2028:	eor	w16, w16, w17, ror #25
    202c:	add	w12, w12, w16
    2030:	ror	w16, w11, #2
    2034:	eor	w16, w16, w11, ror #13
    2038:	ldp	w14, w15, [sp, #96]
    203c:	eor	w16, w16, w11, ror #22
    2040:	add	w13, w16, w13
    2044:	mov	w16, #0x88da                	// #35034
    2048:	movk	w16, #0x76f9, lsl #16
    204c:	add	w12, w12, w16
    2050:	str	w1, [sp, #284]
    2054:	add	w14, w14, w1
    2058:	add	w1, w12, w8
    205c:	str	w8, [sp, #272]
    2060:	add	w8, w13, w12
    2064:	bic	w12, w18, w1
    2068:	and	w13, w17, w1
    206c:	orr	w12, w13, w12
    2070:	orr	w13, w8, w11
    2074:	add	w12, w14, w12
    2078:	and	w14, w8, w11
    207c:	and	w13, w13, w9
    2080:	orr	w13, w13, w14
    2084:	ror	w14, w1, #6
    2088:	eor	w14, w14, w1, ror #11
    208c:	eor	w14, w14, w1, ror #25
    2090:	mov	w16, #0x5152                	// #20818
    2094:	add	w12, w12, w14
    2098:	ror	w14, w8, #2
    209c:	movk	w16, #0x983e, lsl #16
    20a0:	eor	w14, w14, w8, ror #13
    20a4:	eor	w14, w14, w8, ror #22
    20a8:	add	w12, w12, w16
    20ac:	str	w18, [sp, #280]
    20b0:	add	w15, w15, w18
    20b4:	add	w13, w14, w13
    20b8:	add	w18, w12, w10
    20bc:	str	w10, [sp, #268]
    20c0:	add	w10, w13, w12
    20c4:	bic	w12, w17, w18
    20c8:	and	w13, w1, w18
    20cc:	orr	w12, w13, w12
    20d0:	orr	w13, w10, w8
    20d4:	add	w12, w15, w12
    20d8:	and	w15, w10, w8
    20dc:	and	w13, w13, w11
    20e0:	orr	w13, w13, w15
    20e4:	ror	w15, w18, #6
    20e8:	eor	w15, w15, w18, ror #11
    20ec:	eor	w15, w15, w18, ror #25
    20f0:	add	w12, w12, w15
    20f4:	ror	w15, w10, #2
    20f8:	eor	w15, w15, w10, ror #13
    20fc:	ldp	w14, w16, [sp, #104]
    2100:	eor	w15, w15, w10, ror #22
    2104:	add	w13, w15, w13
    2108:	mov	w15, #0xc66d                	// #50797
    210c:	movk	w15, #0xa831, lsl #16
    2110:	add	w12, w12, w15
    2114:	str	w17, [sp, #276]
    2118:	add	w14, w14, w17
    211c:	add	w17, w12, w9
    2120:	str	w9, [sp, #264]
    2124:	add	w9, w13, w12
    2128:	bic	w12, w1, w17
    212c:	and	w13, w18, w17
    2130:	orr	w12, w13, w12
    2134:	orr	w13, w9, w10
    2138:	add	w12, w14, w12
    213c:	and	w14, w9, w10
    2140:	and	w13, w13, w8
    2144:	orr	w13, w13, w14
    2148:	ror	w14, w17, #6
    214c:	eor	w14, w14, w17, ror #11
    2150:	eor	w14, w14, w17, ror #25
    2154:	mov	w15, #0x27c8                	// #10184
    2158:	add	w12, w12, w14
    215c:	ror	w14, w9, #2
    2160:	movk	w15, #0xb003, lsl #16
    2164:	eor	w14, w14, w9, ror #13
    2168:	eor	w14, w14, w9, ror #22
    216c:	add	w12, w12, w15
    2170:	str	w1, [sp, #272]
    2174:	add	w16, w16, w1
    2178:	add	w13, w14, w13
    217c:	add	w1, w12, w11
    2180:	str	w11, [sp, #260]
    2184:	add	w11, w13, w12
    2188:	bic	w12, w18, w1
    218c:	and	w13, w17, w1
    2190:	orr	w12, w13, w12
    2194:	orr	w13, w11, w9
    2198:	add	w12, w16, w12
    219c:	and	w16, w11, w9
    21a0:	and	w13, w13, w10
    21a4:	orr	w13, w13, w16
    21a8:	ror	w16, w1, #6
    21ac:	eor	w16, w16, w1, ror #11
    21b0:	eor	w16, w16, w1, ror #25
    21b4:	add	w12, w12, w16
    21b8:	ror	w16, w11, #2
    21bc:	eor	w16, w16, w11, ror #13
    21c0:	ldp	w14, w15, [sp, #112]
    21c4:	eor	w16, w16, w11, ror #22
    21c8:	add	w13, w16, w13
    21cc:	mov	w16, #0x7fc7                	// #32711
    21d0:	movk	w16, #0xbf59, lsl #16
    21d4:	add	w12, w12, w16
    21d8:	str	w18, [sp, #268]
    21dc:	add	w14, w14, w18
    21e0:	add	w18, w12, w8
    21e4:	str	w8, [sp, #256]
    21e8:	add	w8, w13, w12
    21ec:	bic	w12, w17, w18
    21f0:	and	w13, w1, w18
    21f4:	orr	w12, w13, w12
    21f8:	orr	w13, w8, w11
    21fc:	add	w12, w14, w12
    2200:	and	w14, w8, w11
    2204:	and	w13, w13, w9
    2208:	orr	w13, w13, w14
    220c:	ror	w14, w18, #6
    2210:	eor	w14, w14, w18, ror #11
    2214:	eor	w14, w14, w18, ror #25
    2218:	mov	w16, #0xbf3                 	// #3059
    221c:	add	w12, w12, w14
    2220:	ror	w14, w8, #2
    2224:	movk	w16, #0xc6e0, lsl #16
    2228:	eor	w14, w14, w8, ror #13
    222c:	eor	w14, w14, w8, ror #22
    2230:	add	w12, w12, w16
    2234:	str	w17, [sp, #264]
    2238:	add	w15, w15, w17
    223c:	add	w13, w14, w13
    2240:	add	w17, w12, w10
    2244:	str	w10, [sp, #284]
    2248:	add	w10, w13, w12
    224c:	bic	w12, w1, w17
    2250:	and	w13, w18, w17
    2254:	orr	w12, w13, w12
    2258:	orr	w13, w10, w8
    225c:	add	w12, w15, w12
    2260:	and	w15, w10, w8
    2264:	and	w13, w13, w11
    2268:	orr	w13, w13, w15
    226c:	ror	w15, w17, #6
    2270:	eor	w15, w15, w17, ror #11
    2274:	eor	w15, w15, w17, ror #25
    2278:	add	w12, w12, w15
    227c:	ror	w15, w10, #2
    2280:	eor	w15, w15, w10, ror #13
    2284:	ldp	w14, w16, [sp, #120]
    2288:	eor	w15, w15, w10, ror #22
    228c:	add	w13, w15, w13
    2290:	mov	w15, #0x9147                	// #37191
    2294:	movk	w15, #0xd5a7, lsl #16
    2298:	add	w12, w12, w15
    229c:	str	w1, [sp, #260]
    22a0:	add	w14, w14, w1
    22a4:	add	w1, w12, w9
    22a8:	str	w9, [sp, #280]
    22ac:	add	w9, w13, w12
    22b0:	bic	w12, w18, w1
    22b4:	and	w13, w17, w1
    22b8:	orr	w12, w13, w12
    22bc:	orr	w13, w9, w10
    22c0:	add	w12, w14, w12
    22c4:	and	w14, w9, w10
    22c8:	and	w13, w13, w8
    22cc:	orr	w13, w13, w14
    22d0:	ror	w14, w1, #6
    22d4:	eor	w14, w14, w1, ror #11
    22d8:	eor	w14, w14, w1, ror #25
    22dc:	mov	w15, #0x6351                	// #25425
    22e0:	add	w12, w12, w14
    22e4:	ror	w14, w9, #2
    22e8:	movk	w15, #0x6ca, lsl #16
    22ec:	eor	w14, w14, w9, ror #13
    22f0:	eor	w14, w14, w9, ror #22
    22f4:	add	w12, w12, w15
    22f8:	str	w18, [sp, #256]
    22fc:	add	w16, w16, w18
    2300:	add	w13, w14, w13
    2304:	add	w18, w12, w11
    2308:	str	w11, [sp, #276]
    230c:	add	w11, w13, w12
    2310:	bic	w12, w17, w18
    2314:	and	w13, w1, w18
    2318:	orr	w12, w13, w12
    231c:	orr	w13, w11, w9
    2320:	add	w12, w16, w12
    2324:	and	w16, w11, w9
    2328:	and	w13, w13, w10
    232c:	orr	w13, w13, w16
    2330:	ror	w16, w18, #6
    2334:	eor	w16, w16, w18, ror #11
    2338:	eor	w16, w16, w18, ror #25
    233c:	add	w12, w12, w16
    2340:	ror	w16, w11, #2
    2344:	eor	w16, w16, w11, ror #13
    2348:	ldp	w14, w15, [sp, #128]
    234c:	eor	w16, w16, w11, ror #22
    2350:	add	w13, w16, w13
    2354:	mov	w16, #0x2967                	// #10599
    2358:	movk	w16, #0x1429, lsl #16
    235c:	add	w12, w12, w16
    2360:	str	w17, [sp, #284]
    2364:	add	w14, w14, w17
    2368:	add	w17, w12, w8
    236c:	str	w8, [sp, #272]
    2370:	add	w8, w13, w12
    2374:	bic	w12, w1, w17
    2378:	and	w13, w18, w17
    237c:	orr	w12, w13, w12
    2380:	orr	w13, w8, w11
    2384:	add	w12, w14, w12
    2388:	and	w14, w8, w11
    238c:	and	w13, w13, w9
    2390:	orr	w13, w13, w14
    2394:	ror	w14, w17, #6
    2398:	eor	w14, w14, w17, ror #11
    239c:	eor	w14, w14, w17, ror #25
    23a0:	mov	w16, #0xa85                 	// #2693
    23a4:	add	w12, w12, w14
    23a8:	ror	w14, w8, #2
    23ac:	movk	w16, #0x27b7, lsl #16
    23b0:	eor	w14, w14, w8, ror #13
    23b4:	eor	w14, w14, w8, ror #22
    23b8:	add	w12, w12, w16
    23bc:	str	w1, [sp, #280]
    23c0:	add	w15, w15, w1
    23c4:	add	w13, w14, w13
    23c8:	add	w1, w12, w10
    23cc:	str	w10, [sp, #268]
    23d0:	add	w10, w13, w12
    23d4:	bic	w12, w18, w1
    23d8:	and	w13, w17, w1
    23dc:	orr	w12, w13, w12
    23e0:	orr	w13, w10, w8
    23e4:	add	w12, w15, w12
    23e8:	and	w15, w10, w8
    23ec:	and	w13, w13, w11
    23f0:	orr	w13, w13, w15
    23f4:	ror	w15, w1, #6
    23f8:	eor	w15, w15, w1, ror #11
    23fc:	eor	w15, w15, w1, ror #25
    2400:	add	w12, w12, w15
    2404:	ror	w15, w10, #2
    2408:	eor	w15, w15, w10, ror #13
    240c:	ldp	w14, w16, [sp, #136]
    2410:	eor	w15, w15, w10, ror #22
    2414:	add	w13, w15, w13
    2418:	mov	w15, #0x2138                	// #8504
    241c:	movk	w15, #0x2e1b, lsl #16
    2420:	add	w12, w12, w15
    2424:	str	w18, [sp, #276]
    2428:	add	w14, w14, w18
    242c:	add	w18, w12, w9
    2430:	str	w9, [sp, #264]
    2434:	add	w9, w13, w12
    2438:	bic	w12, w17, w18
    243c:	and	w13, w1, w18
    2440:	orr	w12, w13, w12
    2444:	orr	w13, w9, w10
    2448:	add	w12, w14, w12
    244c:	and	w14, w9, w10
    2450:	and	w13, w13, w8
    2454:	orr	w13, w13, w14
    2458:	ror	w14, w18, #6
    245c:	eor	w14, w14, w18, ror #11
    2460:	eor	w14, w14, w18, ror #25
    2464:	mov	w15, #0x6dfc                	// #28156
    2468:	add	w12, w12, w14
    246c:	ror	w14, w9, #2
    2470:	movk	w15, #0x4d2c, lsl #16
    2474:	eor	w14, w14, w9, ror #13
    2478:	eor	w14, w14, w9, ror #22
    247c:	add	w12, w12, w15
    2480:	str	w17, [sp, #272]
    2484:	add	w16, w16, w17
    2488:	add	w13, w14, w13
    248c:	add	w17, w12, w11
    2490:	str	w11, [sp, #260]
    2494:	add	w11, w13, w12
    2498:	bic	w12, w1, w17
    249c:	and	w13, w18, w17
    24a0:	orr	w12, w13, w12
    24a4:	orr	w13, w11, w9
    24a8:	add	w12, w16, w12
    24ac:	and	w16, w11, w9
    24b0:	and	w13, w13, w10
    24b4:	orr	w13, w13, w16
    24b8:	ror	w16, w17, #6
    24bc:	eor	w16, w16, w17, ror #11
    24c0:	eor	w16, w16, w17, ror #25
    24c4:	add	w12, w12, w16
    24c8:	ror	w16, w11, #2
    24cc:	eor	w16, w16, w11, ror #13
    24d0:	ldp	w14, w15, [sp, #144]
    24d4:	eor	w16, w16, w11, ror #22
    24d8:	add	w13, w16, w13
    24dc:	mov	w16, #0xd13                 	// #3347
    24e0:	movk	w16, #0x5338, lsl #16
    24e4:	add	w12, w12, w16
    24e8:	str	w1, [sp, #268]
    24ec:	add	w14, w14, w1
    24f0:	add	w1, w12, w8
    24f4:	str	w8, [sp, #256]
    24f8:	add	w8, w13, w12
    24fc:	bic	w12, w18, w1
    2500:	and	w13, w17, w1
    2504:	orr	w12, w13, w12
    2508:	orr	w13, w8, w11
    250c:	add	w12, w14, w12
    2510:	and	w14, w8, w11
    2514:	and	w13, w13, w9
    2518:	orr	w13, w13, w14
    251c:	ror	w14, w1, #6
    2520:	eor	w14, w14, w1, ror #11
    2524:	eor	w14, w14, w1, ror #25
    2528:	mov	w16, #0x7354                	// #29524
    252c:	add	w12, w12, w14
    2530:	ror	w14, w8, #2
    2534:	movk	w16, #0x650a, lsl #16
    2538:	eor	w14, w14, w8, ror #13
    253c:	eor	w14, w14, w8, ror #22
    2540:	add	w12, w12, w16
    2544:	str	w18, [sp, #264]
    2548:	add	w15, w15, w18
    254c:	add	w13, w14, w13
    2550:	add	w18, w12, w10
    2554:	str	w10, [sp, #284]
    2558:	add	w10, w13, w12
    255c:	bic	w12, w17, w18
    2560:	and	w13, w1, w18
    2564:	orr	w12, w13, w12
    2568:	orr	w13, w10, w8
    256c:	add	w12, w15, w12
    2570:	and	w15, w10, w8
    2574:	and	w13, w13, w11
    2578:	orr	w13, w13, w15
    257c:	ror	w15, w18, #6
    2580:	eor	w15, w15, w18, ror #11
    2584:	eor	w15, w15, w18, ror #25
    2588:	add	w12, w12, w15
    258c:	ror	w15, w10, #2
    2590:	eor	w15, w15, w10, ror #13
    2594:	ldp	w14, w16, [sp, #152]
    2598:	eor	w15, w15, w10, ror #22
    259c:	add	w13, w15, w13
    25a0:	mov	w15, #0xabb                 	// #2747
    25a4:	movk	w15, #0x766a, lsl #16
    25a8:	add	w12, w12, w15
    25ac:	str	w17, [sp, #260]
    25b0:	add	w14, w14, w17
    25b4:	add	w17, w12, w9
    25b8:	str	w9, [sp, #280]
    25bc:	add	w9, w13, w12
    25c0:	bic	w12, w1, w17
    25c4:	and	w13, w18, w17
    25c8:	orr	w12, w13, w12
    25cc:	orr	w13, w9, w10
    25d0:	add	w12, w14, w12
    25d4:	and	w14, w9, w10
    25d8:	and	w13, w13, w8
    25dc:	orr	w13, w13, w14
    25e0:	ror	w14, w17, #6
    25e4:	eor	w14, w14, w17, ror #11
    25e8:	eor	w14, w14, w17, ror #25
    25ec:	mov	w15, #0xc92e                	// #51502
    25f0:	add	w12, w12, w14
    25f4:	ror	w14, w9, #2
    25f8:	movk	w15, #0x81c2, lsl #16
    25fc:	eor	w14, w14, w9, ror #13
    2600:	eor	w14, w14, w9, ror #22
    2604:	add	w12, w12, w15
    2608:	str	w1, [sp, #256]
    260c:	add	w16, w16, w1
    2610:	add	w13, w14, w13
    2614:	add	w1, w12, w11
    2618:	str	w11, [sp, #276]
    261c:	add	w11, w13, w12
    2620:	bic	w12, w18, w1
    2624:	and	w13, w17, w1
    2628:	orr	w12, w13, w12
    262c:	orr	w13, w11, w9
    2630:	add	w12, w16, w12
    2634:	and	w16, w11, w9
    2638:	and	w13, w13, w10
    263c:	orr	w13, w13, w16
    2640:	ror	w16, w1, #6
    2644:	eor	w16, w16, w1, ror #11
    2648:	eor	w16, w16, w1, ror #25
    264c:	add	w12, w12, w16
    2650:	ror	w16, w11, #2
    2654:	eor	w16, w16, w11, ror #13
    2658:	ldp	w14, w15, [sp, #160]
    265c:	eor	w16, w16, w11, ror #22
    2660:	add	w13, w16, w13
    2664:	mov	w16, #0x2c85                	// #11397
    2668:	movk	w16, #0x9272, lsl #16
    266c:	add	w12, w12, w16
    2670:	str	w18, [sp, #284]
    2674:	add	w14, w14, w18
    2678:	add	w18, w12, w8
    267c:	str	w8, [sp, #272]
    2680:	add	w8, w13, w12
    2684:	bic	w12, w17, w18
    2688:	and	w13, w1, w18
    268c:	orr	w12, w13, w12
    2690:	orr	w13, w8, w11
    2694:	add	w12, w14, w12
    2698:	and	w14, w8, w11
    269c:	and	w13, w13, w9
    26a0:	orr	w13, w13, w14
    26a4:	ror	w14, w18, #6
    26a8:	eor	w14, w14, w18, ror #11
    26ac:	eor	w14, w14, w18, ror #25
    26b0:	mov	w16, #0xe8a1                	// #59553
    26b4:	add	w12, w12, w14
    26b8:	ror	w14, w8, #2
    26bc:	movk	w16, #0xa2bf, lsl #16
    26c0:	eor	w14, w14, w8, ror #13
    26c4:	eor	w14, w14, w8, ror #22
    26c8:	add	w12, w12, w16
    26cc:	str	w17, [sp, #280]
    26d0:	add	w15, w15, w17
    26d4:	add	w13, w14, w13
    26d8:	add	w17, w12, w10
    26dc:	str	w10, [sp, #268]
    26e0:	add	w10, w13, w12
    26e4:	bic	w12, w1, w17
    26e8:	and	w13, w18, w17
    26ec:	orr	w12, w13, w12
    26f0:	orr	w13, w10, w8
    26f4:	add	w12, w15, w12
    26f8:	and	w15, w10, w8
    26fc:	and	w13, w13, w11
    2700:	orr	w13, w13, w15
    2704:	ror	w15, w17, #6
    2708:	eor	w15, w15, w17, ror #11
    270c:	eor	w15, w15, w17, ror #25
    2710:	add	w12, w12, w15
    2714:	ror	w15, w10, #2
    2718:	eor	w15, w15, w10, ror #13
    271c:	ldp	w14, w16, [sp, #168]
    2720:	eor	w15, w15, w10, ror #22
    2724:	add	w13, w15, w13
    2728:	mov	w15, #0x664b                	// #26187
    272c:	movk	w15, #0xa81a, lsl #16
    2730:	add	w12, w12, w15
    2734:	str	w1, [sp, #276]
    2738:	add	w14, w14, w1
    273c:	add	w1, w12, w9
    2740:	str	w9, [sp, #264]
    2744:	add	w9, w13, w12
    2748:	bic	w12, w18, w1
    274c:	and	w13, w17, w1
    2750:	orr	w12, w13, w12
    2754:	orr	w13, w9, w10
    2758:	add	w12, w14, w12
    275c:	and	w14, w9, w10
    2760:	and	w13, w13, w8
    2764:	orr	w13, w13, w14
    2768:	ror	w14, w1, #6
    276c:	eor	w14, w14, w1, ror #11
    2770:	eor	w14, w14, w1, ror #25
    2774:	mov	w15, #0x8b70                	// #35696
    2778:	add	w12, w12, w14
    277c:	ror	w14, w9, #2
    2780:	movk	w15, #0xc24b, lsl #16
    2784:	eor	w14, w14, w9, ror #13
    2788:	eor	w14, w14, w9, ror #22
    278c:	add	w12, w12, w15
    2790:	str	w18, [sp, #272]
    2794:	add	w16, w16, w18
    2798:	add	w13, w14, w13
    279c:	add	w18, w12, w11
    27a0:	str	w11, [sp, #260]
    27a4:	add	w11, w13, w12
    27a8:	bic	w12, w17, w18
    27ac:	and	w13, w1, w18
    27b0:	orr	w12, w13, w12
    27b4:	orr	w13, w11, w9
    27b8:	add	w12, w16, w12
    27bc:	and	w16, w11, w9
    27c0:	and	w13, w13, w10
    27c4:	orr	w13, w13, w16
    27c8:	ror	w16, w18, #6
    27cc:	eor	w16, w16, w18, ror #11
    27d0:	eor	w16, w16, w18, ror #25
    27d4:	add	w12, w12, w16
    27d8:	ror	w16, w11, #2
    27dc:	eor	w16, w16, w11, ror #13
    27e0:	ldp	w14, w15, [sp, #176]
    27e4:	eor	w16, w16, w11, ror #22
    27e8:	add	w13, w16, w13
    27ec:	mov	w16, #0x51a3                	// #20899
    27f0:	movk	w16, #0xc76c, lsl #16
    27f4:	add	w12, w12, w16
    27f8:	str	w17, [sp, #268]
    27fc:	add	w14, w14, w17
    2800:	add	w17, w12, w8
    2804:	str	w8, [sp, #256]
    2808:	add	w8, w13, w12
    280c:	bic	w12, w1, w17
    2810:	and	w13, w18, w17
    2814:	orr	w12, w13, w12
    2818:	orr	w13, w8, w11
    281c:	add	w12, w14, w12
    2820:	and	w14, w8, w11
    2824:	and	w13, w13, w9
    2828:	orr	w13, w13, w14
    282c:	ror	w14, w17, #6
    2830:	eor	w14, w14, w17, ror #11
    2834:	eor	w14, w14, w17, ror #25
    2838:	mov	w16, #0xe819                	// #59417
    283c:	add	w12, w12, w14
    2840:	ror	w14, w8, #2
    2844:	movk	w16, #0xd192, lsl #16
    2848:	eor	w14, w14, w8, ror #13
    284c:	eor	w14, w14, w8, ror #22
    2850:	add	w12, w12, w16
    2854:	str	w1, [sp, #264]
    2858:	add	w15, w15, w1
    285c:	add	w13, w14, w13
    2860:	add	w1, w12, w10
    2864:	str	w10, [sp, #284]
    2868:	add	w10, w13, w12
    286c:	bic	w12, w18, w1
    2870:	and	w13, w17, w1
    2874:	orr	w12, w13, w12
    2878:	orr	w13, w10, w8
    287c:	add	w12, w15, w12
    2880:	and	w15, w10, w8
    2884:	and	w13, w13, w11
    2888:	orr	w13, w13, w15
    288c:	ror	w15, w1, #6
    2890:	eor	w15, w15, w1, ror #11
    2894:	eor	w15, w15, w1, ror #25
    2898:	add	w12, w12, w15
    289c:	ror	w15, w10, #2
    28a0:	eor	w15, w15, w10, ror #13
    28a4:	ldp	w14, w16, [sp, #184]
    28a8:	eor	w15, w15, w10, ror #22
    28ac:	add	w13, w15, w13
    28b0:	mov	w15, #0x624                 	// #1572
    28b4:	movk	w15, #0xd699, lsl #16
    28b8:	add	w12, w12, w15
    28bc:	str	w18, [sp, #260]
    28c0:	add	w14, w14, w18
    28c4:	add	w18, w12, w9
    28c8:	str	w9, [sp, #280]
    28cc:	add	w9, w13, w12
    28d0:	bic	w12, w17, w18
    28d4:	and	w13, w1, w18
    28d8:	orr	w12, w13, w12
    28dc:	orr	w13, w9, w10
    28e0:	add	w12, w14, w12
    28e4:	and	w14, w9, w10
    28e8:	and	w13, w13, w8
    28ec:	orr	w13, w13, w14
    28f0:	ror	w14, w18, #6
    28f4:	eor	w14, w14, w18, ror #11
    28f8:	eor	w14, w14, w18, ror #25
    28fc:	mov	w15, #0x3585                	// #13701
    2900:	add	w12, w12, w14
    2904:	ror	w14, w9, #2
    2908:	movk	w15, #0xf40e, lsl #16
    290c:	eor	w14, w14, w9, ror #13
    2910:	eor	w14, w14, w9, ror #22
    2914:	add	w12, w12, w15
    2918:	str	w17, [sp, #256]
    291c:	add	w16, w16, w17
    2920:	add	w13, w14, w13
    2924:	add	w17, w12, w11
    2928:	str	w11, [sp, #276]
    292c:	add	w11, w13, w12
    2930:	bic	w12, w1, w17
    2934:	and	w13, w18, w17
    2938:	orr	w12, w13, w12
    293c:	orr	w13, w11, w9
    2940:	add	w12, w16, w12
    2944:	and	w16, w11, w9
    2948:	and	w13, w13, w10
    294c:	orr	w13, w13, w16
    2950:	ror	w16, w17, #6
    2954:	eor	w16, w16, w17, ror #11
    2958:	eor	w16, w16, w17, ror #25
    295c:	add	w12, w12, w16
    2960:	ror	w16, w11, #2
    2964:	eor	w16, w16, w11, ror #13
    2968:	ldp	w14, w15, [sp, #192]
    296c:	eor	w16, w16, w11, ror #22
    2970:	add	w13, w16, w13
    2974:	mov	w16, #0xa070                	// #41072
    2978:	movk	w16, #0x106a, lsl #16
    297c:	add	w12, w12, w16
    2980:	str	w1, [sp, #284]
    2984:	add	w14, w14, w1
    2988:	add	w1, w12, w8
    298c:	str	w8, [sp, #272]
    2990:	add	w8, w13, w12
    2994:	bic	w12, w18, w1
    2998:	and	w13, w17, w1
    299c:	orr	w12, w13, w12
    29a0:	orr	w13, w8, w11
    29a4:	add	w12, w14, w12
    29a8:	and	w14, w8, w11
    29ac:	and	w13, w13, w9
    29b0:	orr	w13, w13, w14
    29b4:	ror	w14, w1, #6
    29b8:	eor	w14, w14, w1, ror #11
    29bc:	eor	w14, w14, w1, ror #25
    29c0:	mov	w16, #0xc116                	// #49430
    29c4:	add	w12, w12, w14
    29c8:	ror	w14, w8, #2
    29cc:	movk	w16, #0x19a4, lsl #16
    29d0:	eor	w14, w14, w8, ror #13
    29d4:	eor	w14, w14, w8, ror #22
    29d8:	add	w12, w12, w16
    29dc:	str	w18, [sp, #280]
    29e0:	add	w15, w15, w18
    29e4:	add	w13, w14, w13
    29e8:	add	w18, w12, w10
    29ec:	str	w10, [sp, #268]
    29f0:	add	w10, w13, w12
    29f4:	bic	w12, w17, w18
    29f8:	and	w13, w1, w18
    29fc:	orr	w12, w13, w12
    2a00:	orr	w13, w10, w8
    2a04:	add	w12, w15, w12
    2a08:	and	w15, w10, w8
    2a0c:	and	w13, w13, w11
    2a10:	orr	w13, w13, w15
    2a14:	ror	w15, w18, #6
    2a18:	eor	w15, w15, w18, ror #11
    2a1c:	eor	w15, w15, w18, ror #25
    2a20:	add	w12, w12, w15
    2a24:	ror	w15, w10, #2
    2a28:	eor	w15, w15, w10, ror #13
    2a2c:	ldp	w14, w16, [sp, #200]
    2a30:	eor	w15, w15, w10, ror #22
    2a34:	add	w13, w15, w13
    2a38:	mov	w15, #0x6c08                	// #27656
    2a3c:	movk	w15, #0x1e37, lsl #16
    2a40:	add	w12, w12, w15
    2a44:	str	w17, [sp, #276]
    2a48:	add	w14, w14, w17
    2a4c:	add	w17, w12, w9
    2a50:	str	w9, [sp, #264]
    2a54:	add	w9, w13, w12
    2a58:	bic	w12, w1, w17
    2a5c:	and	w13, w18, w17
    2a60:	orr	w12, w13, w12
    2a64:	orr	w13, w9, w10
    2a68:	add	w12, w14, w12
    2a6c:	and	w14, w9, w10
    2a70:	and	w13, w13, w8
    2a74:	orr	w13, w13, w14
    2a78:	ror	w14, w17, #6
    2a7c:	eor	w14, w14, w17, ror #11
    2a80:	eor	w14, w14, w17, ror #25
    2a84:	mov	w15, #0x774c                	// #30540
    2a88:	add	w12, w12, w14
    2a8c:	ror	w14, w9, #2
    2a90:	movk	w15, #0x2748, lsl #16
    2a94:	eor	w14, w14, w9, ror #13
    2a98:	eor	w14, w14, w9, ror #22
    2a9c:	add	w12, w12, w15
    2aa0:	str	w1, [sp, #272]
    2aa4:	add	w16, w16, w1
    2aa8:	add	w13, w14, w13
    2aac:	add	w1, w12, w11
    2ab0:	str	w11, [sp, #260]
    2ab4:	add	w11, w13, w12
    2ab8:	bic	w12, w18, w1
    2abc:	and	w13, w17, w1
    2ac0:	orr	w12, w13, w12
    2ac4:	orr	w13, w11, w9
    2ac8:	add	w12, w16, w12
    2acc:	and	w16, w11, w9
    2ad0:	and	w13, w13, w10
    2ad4:	orr	w13, w13, w16
    2ad8:	ror	w16, w1, #6
    2adc:	eor	w16, w16, w1, ror #11
    2ae0:	eor	w16, w16, w1, ror #25
    2ae4:	add	w12, w12, w16
    2ae8:	ror	w16, w11, #2
    2aec:	eor	w16, w16, w11, ror #13
    2af0:	ldp	w14, w15, [sp, #208]
    2af4:	eor	w16, w16, w11, ror #22
    2af8:	add	w13, w16, w13
    2afc:	mov	w16, #0xbcb5                	// #48309
    2b00:	movk	w16, #0x34b0, lsl #16
    2b04:	add	w12, w12, w16
    2b08:	str	w18, [sp, #268]
    2b0c:	add	w14, w14, w18
    2b10:	add	w18, w12, w8
    2b14:	str	w8, [sp, #256]
    2b18:	add	w8, w13, w12
    2b1c:	bic	w12, w17, w18
    2b20:	and	w13, w1, w18
    2b24:	orr	w12, w13, w12
    2b28:	orr	w13, w8, w11
    2b2c:	add	w12, w14, w12
    2b30:	and	w14, w8, w11
    2b34:	and	w13, w13, w9
    2b38:	orr	w13, w13, w14
    2b3c:	ror	w14, w18, #6
    2b40:	eor	w14, w14, w18, ror #11
    2b44:	eor	w14, w14, w18, ror #25
    2b48:	mov	w16, #0xcb3                 	// #3251
    2b4c:	add	w12, w12, w14
    2b50:	ror	w14, w8, #2
    2b54:	movk	w16, #0x391c, lsl #16
    2b58:	eor	w14, w14, w8, ror #13
    2b5c:	eor	w14, w14, w8, ror #22
    2b60:	add	w12, w12, w16
    2b64:	str	w17, [sp, #264]
    2b68:	add	w15, w15, w17
    2b6c:	add	w13, w14, w13
    2b70:	add	w17, w12, w10
    2b74:	str	w10, [sp, #284]
    2b78:	add	w10, w13, w12
    2b7c:	bic	w12, w1, w17
    2b80:	and	w13, w18, w17
    2b84:	orr	w12, w13, w12
    2b88:	orr	w13, w10, w8
    2b8c:	add	w12, w15, w12
    2b90:	and	w15, w10, w8
    2b94:	and	w13, w13, w11
    2b98:	orr	w13, w13, w15
    2b9c:	ror	w15, w17, #6
    2ba0:	eor	w15, w15, w17, ror #11
    2ba4:	eor	w15, w15, w17, ror #25
    2ba8:	add	w12, w12, w15
    2bac:	ror	w15, w10, #2
    2bb0:	eor	w15, w15, w10, ror #13
    2bb4:	ldp	w14, w16, [sp, #216]
    2bb8:	eor	w15, w15, w10, ror #22
    2bbc:	add	w13, w15, w13
    2bc0:	mov	w15, #0xaa4a                	// #43594
    2bc4:	movk	w15, #0x4ed8, lsl #16
    2bc8:	add	w12, w12, w15
    2bcc:	str	w1, [sp, #260]
    2bd0:	add	w14, w14, w1
    2bd4:	add	w1, w12, w9
    2bd8:	str	w9, [sp, #280]
    2bdc:	add	w9, w13, w12
    2be0:	bic	w12, w18, w1
    2be4:	and	w13, w17, w1
    2be8:	orr	w12, w13, w12
    2bec:	orr	w13, w9, w10
    2bf0:	add	w12, w14, w12
    2bf4:	and	w14, w9, w10
    2bf8:	and	w13, w13, w8
    2bfc:	orr	w13, w13, w14
    2c00:	ror	w14, w1, #6
    2c04:	eor	w14, w14, w1, ror #11
    2c08:	eor	w14, w14, w1, ror #25
    2c0c:	mov	w15, #0xca4f                	// #51791
    2c10:	add	w12, w12, w14
    2c14:	ror	w14, w9, #2
    2c18:	movk	w15, #0x5b9c, lsl #16
    2c1c:	eor	w14, w14, w9, ror #13
    2c20:	eor	w14, w14, w9, ror #22
    2c24:	add	w12, w12, w15
    2c28:	str	w18, [sp, #256]
    2c2c:	add	w16, w16, w18
    2c30:	add	w13, w14, w13
    2c34:	add	w18, w12, w11
    2c38:	str	w11, [sp, #276]
    2c3c:	add	w11, w13, w12
    2c40:	bic	w12, w17, w18
    2c44:	and	w13, w1, w18
    2c48:	orr	w12, w13, w12
    2c4c:	orr	w13, w11, w9
    2c50:	add	w12, w16, w12
    2c54:	and	w16, w11, w9
    2c58:	and	w13, w13, w10
    2c5c:	orr	w13, w13, w16
    2c60:	ror	w16, w18, #6
    2c64:	eor	w16, w16, w18, ror #11
    2c68:	eor	w16, w16, w18, ror #25
    2c6c:	add	w12, w12, w16
    2c70:	ror	w16, w11, #2
    2c74:	eor	w16, w16, w11, ror #13
    2c78:	ldp	w14, w15, [sp, #224]
    2c7c:	eor	w16, w16, w11, ror #22
    2c80:	add	w13, w16, w13
    2c84:	mov	w16, #0x6ff3                	// #28659
    2c88:	movk	w16, #0x682e, lsl #16
    2c8c:	add	w12, w12, w16
    2c90:	str	w17, [sp, #284]
    2c94:	add	w14, w14, w17
    2c98:	add	w17, w12, w8
    2c9c:	str	w8, [sp, #272]
    2ca0:	add	w8, w13, w12
    2ca4:	bic	w12, w1, w17
    2ca8:	and	w13, w18, w17
    2cac:	orr	w12, w13, w12
    2cb0:	orr	w13, w8, w11
    2cb4:	add	w12, w14, w12
    2cb8:	and	w14, w8, w11
    2cbc:	and	w13, w13, w9
    2cc0:	orr	w13, w13, w14
    2cc4:	ror	w14, w17, #6
    2cc8:	eor	w14, w14, w17, ror #11
    2ccc:	eor	w14, w14, w17, ror #25
    2cd0:	mov	w16, #0x82ee                	// #33518
    2cd4:	add	w12, w12, w14
    2cd8:	ror	w14, w8, #2
    2cdc:	movk	w16, #0x748f, lsl #16
    2ce0:	eor	w14, w14, w8, ror #13
    2ce4:	eor	w14, w14, w8, ror #22
    2ce8:	add	w12, w12, w16
    2cec:	str	w1, [sp, #280]
    2cf0:	add	w15, w15, w1
    2cf4:	add	w13, w14, w13
    2cf8:	add	w1, w12, w10
    2cfc:	str	w10, [sp, #268]
    2d00:	add	w10, w13, w12
    2d04:	bic	w12, w18, w1
    2d08:	and	w13, w17, w1
    2d0c:	orr	w12, w13, w12
    2d10:	orr	w13, w10, w8
    2d14:	add	w12, w15, w12
    2d18:	and	w15, w10, w8
    2d1c:	and	w13, w13, w11
    2d20:	orr	w13, w13, w15
    2d24:	ror	w15, w1, #6
    2d28:	eor	w15, w15, w1, ror #11
    2d2c:	eor	w15, w15, w1, ror #25
    2d30:	add	w12, w12, w15
    2d34:	ror	w15, w10, #2
    2d38:	eor	w15, w15, w10, ror #13
    2d3c:	ldp	w14, w16, [sp, #232]
    2d40:	eor	w15, w15, w10, ror #22
    2d44:	add	w13, w15, w13
    2d48:	mov	w15, #0x636f                	// #25455
    2d4c:	movk	w15, #0x78a5, lsl #16
    2d50:	add	w12, w12, w15
    2d54:	str	w18, [sp, #276]
    2d58:	add	w14, w14, w18
    2d5c:	add	w18, w12, w9
    2d60:	str	w9, [sp, #264]
    2d64:	add	w9, w13, w12
    2d68:	bic	w12, w17, w18
    2d6c:	and	w13, w1, w18
    2d70:	orr	w12, w13, w12
    2d74:	orr	w13, w9, w10
    2d78:	add	w12, w14, w12
    2d7c:	and	w14, w9, w10
    2d80:	and	w13, w13, w8
    2d84:	orr	w13, w13, w14
    2d88:	ror	w14, w18, #6
    2d8c:	eor	w14, w14, w18, ror #11
    2d90:	eor	w14, w14, w18, ror #25
    2d94:	mov	w15, #0x7814                	// #30740
    2d98:	add	w12, w12, w14
    2d9c:	ror	w14, w9, #2
    2da0:	movk	w15, #0x84c8, lsl #16
    2da4:	eor	w14, w14, w9, ror #13
    2da8:	eor	w14, w14, w9, ror #22
    2dac:	add	w12, w12, w15
    2db0:	str	w17, [sp, #272]
    2db4:	add	w16, w16, w17
    2db8:	add	w13, w14, w13
    2dbc:	add	w17, w12, w11
    2dc0:	str	w11, [sp, #260]
    2dc4:	add	w11, w13, w12
    2dc8:	bic	w12, w1, w17
    2dcc:	and	w13, w18, w17
    2dd0:	orr	w12, w13, w12
    2dd4:	orr	w13, w11, w9
    2dd8:	add	w12, w16, w12
    2ddc:	and	w16, w11, w9
    2de0:	and	w13, w13, w10
    2de4:	orr	w13, w13, w16
    2de8:	ror	w16, w17, #6
    2dec:	eor	w16, w16, w17, ror #11
    2df0:	eor	w16, w16, w17, ror #25
    2df4:	add	w12, w12, w16
    2df8:	ror	w16, w11, #2
    2dfc:	eor	w16, w16, w11, ror #13
    2e00:	ldp	w14, w15, [sp, #240]
    2e04:	eor	w16, w16, w11, ror #22
    2e08:	add	w13, w16, w13
    2e0c:	mov	w16, #0x208                 	// #520
    2e10:	movk	w16, #0x8cc7, lsl #16
    2e14:	add	w12, w12, w16
    2e18:	str	w1, [sp, #268]
    2e1c:	add	w14, w14, w1
    2e20:	add	w1, w12, w8
    2e24:	str	w8, [sp, #256]
    2e28:	add	w8, w13, w12
    2e2c:	bic	w12, w18, w1
    2e30:	and	w13, w17, w1
    2e34:	orr	w12, w13, w12
    2e38:	orr	w13, w8, w11
    2e3c:	add	w12, w14, w12
    2e40:	and	w14, w8, w11
    2e44:	and	w13, w13, w9
    2e48:	orr	w13, w13, w14
    2e4c:	ror	w14, w1, #6
    2e50:	eor	w14, w14, w1, ror #11
    2e54:	eor	w14, w14, w1, ror #25
    2e58:	add	w12, w12, w14
    2e5c:	ror	w14, w8, #2
    2e60:	mov	w16, #0xfffa                	// #65530
    2e64:	eor	w14, w14, w8, ror #13
    2e68:	movk	w16, #0x90be, lsl #16
    2e6c:	eor	w14, w14, w8, ror #22
    2e70:	add	w13, w14, w13
    2e74:	add	w12, w12, w16
    2e78:	ldp	w14, w16, [sp, #248]
    2e7c:	str	w10, [sp, #284]
    2e80:	add	w10, w12, w10
    2e84:	str	w17, [sp, #260]
    2e88:	add	w14, w14, w17
    2e8c:	add	w12, w13, w12
    2e90:	bic	w13, w17, w10
    2e94:	and	w17, w1, w10
    2e98:	add	w15, w15, w18
    2e9c:	orr	w13, w17, w13
    2ea0:	orr	w17, w12, w8
    2ea4:	add	w13, w15, w13
    2ea8:	and	w15, w12, w8
    2eac:	and	w17, w17, w11
    2eb0:	orr	w15, w17, w15
    2eb4:	ror	w17, w10, #6
    2eb8:	eor	w17, w17, w10, ror #11
    2ebc:	eor	w17, w17, w10, ror #25
    2ec0:	add	w13, w13, w17
    2ec4:	ror	w17, w12, #2
    2ec8:	eor	w17, w17, w12, ror #13
    2ecc:	eor	w17, w17, w12, ror #22
    2ed0:	add	w15, w17, w15
    2ed4:	mov	w17, #0x6ceb                	// #27883
    2ed8:	movk	w17, #0xa450, lsl #16
    2edc:	add	w13, w13, w17
    2ee0:	str	w9, [sp, #280]
    2ee4:	add	w9, w13, w9
    2ee8:	str	w18, [sp, #264]
    2eec:	add	w13, w15, w13
    2ef0:	bic	w15, w1, w9
    2ef4:	and	w18, w10, w9
    2ef8:	orr	w15, w18, w15
    2efc:	orr	w18, w13, w12
    2f00:	add	w14, w14, w15
    2f04:	and	w15, w13, w12
    2f08:	and	w18, w18, w8
    2f0c:	orr	w15, w18, w15
    2f10:	ror	w18, w9, #6
    2f14:	eor	w18, w18, w9, ror #11
    2f18:	eor	w18, w18, w9, ror #25
    2f1c:	mov	w17, #0xa3f7                	// #41975
    2f20:	add	w14, w14, w18
    2f24:	ror	w18, w13, #2
    2f28:	movk	w17, #0xbef9, lsl #16
    2f2c:	eor	w18, w18, w13, ror #13
    2f30:	eor	w18, w18, w13, ror #22
    2f34:	add	w14, w14, w17
    2f38:	add	w15, w18, w15
    2f3c:	str	w11, [sp, #276]
    2f40:	add	w11, w14, w11
    2f44:	str	w10, [sp, #284]
    2f48:	str	w9, [sp, #280]
    2f4c:	add	w14, w15, w14
    2f50:	ror	w15, w11, #6
    2f54:	bic	w10, w10, w11
    2f58:	and	w9, w9, w11
    2f5c:	add	w16, w16, w1
    2f60:	ror	w17, w14, #2
    2f64:	orr	w9, w9, w10
    2f68:	orr	w10, w14, w13
    2f6c:	eor	w15, w15, w11, ror #11
    2f70:	mov	w18, #0x78f2                	// #30962
    2f74:	str	w12, [sp, #268]
    2f78:	and	w10, w10, w12
    2f7c:	and	w12, w14, w13
    2f80:	eor	w17, w17, w14, ror #13
    2f84:	eor	w15, w15, w11, ror #25
    2f88:	add	w9, w16, w9
    2f8c:	movk	w18, #0xc671, lsl #16
    2f90:	eor	w16, w17, w14, ror #22
    2f94:	orr	w10, w10, w12
    2f98:	add	w9, w9, w15
    2f9c:	add	w10, w16, w10
    2fa0:	add	w9, w9, w18
    2fa4:	str	w8, [sp, #272]
    2fa8:	add	w8, w9, w8
    2fac:	add	w9, w10, w9
    2fb0:	str	w1, [sp, #256]
    2fb4:	str	w13, [sp, #264]
    2fb8:	str	w11, [sp, #276]
    2fbc:	str	w14, [sp, #260]
    2fc0:	str	w8, [sp, #272]
    2fc4:	str	w9, [sp, #256]
    2fc8:	ldp	w10, w12, [x0, #16]
    2fcc:	ldp	w17, w18, [x0, #32]
    2fd0:	ldp	w15, w16, [x0, #24]
    2fd4:	ldr	d0, [x0, #40]
    2fd8:	add	w9, w9, w10
    2fdc:	add	w10, w14, w12
    2fe0:	stp	w9, w10, [x0, #16]
    2fe4:	ldr	w9, [sp, #268]
    2fe8:	add	w8, w8, w17
    2fec:	add	w10, w11, w18
    2ff0:	add	w12, w13, w15
    2ff4:	stp	w8, w10, [x0, #32]
    2ff8:	add	w8, w9, w16
    2ffc:	stp	w12, w8, [x0, #24]
    3000:	ldr	d1, [sp, #280]
    3004:	ldr	x29, [sp, #288]
    3008:	add	v0.2s, v1.2s, v0.2s
    300c:	str	d0, [x0, #40]
    3010:	add	sp, sp, #0x130
    3014:	ret
    3018:	mov	w0, #0x40                  	// #64
    301c:	b	ef0 <PyLong_FromLong@plt>
    3020:	ldr	w8, [x0, #124]
    3024:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    3028:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    302c:	add	x9, x9, #0x5ce
    3030:	add	x10, x10, #0x688
    3034:	cmp	w8, #0x20
    3038:	csel	x0, x10, x9, eq  // eq = none
    303c:	mov	w1, #0x6                   	// #6
    3040:	b	f60 <PyUnicode_FromStringAndSize@plt>
    3044:	sub	sp, sp, #0xa0
    3048:	stp	x29, x30, [sp, #96]
    304c:	str	x23, [sp, #112]
    3050:	stp	x22, x21, [sp, #128]
    3054:	stp	x20, x19, [sp, #144]
    3058:	add	x29, sp, #0x60
    305c:	mov	x19, x2
    3060:	mov	x0, x1
    3064:	cbz	x3, 309c <PyInit__sha256@@Base+0x2048>
    3068:	ldr	x20, [x3, #16]
    306c:	adrp	x4, 14000 <PyInit__sha256@@Base+0x12fac>
    3070:	add	x8, x29, #0x18
    3074:	add	x4, x4, #0x268
    3078:	mov	w6, #0x1                   	// #1
    307c:	mov	x1, x19
    3080:	mov	x2, xzr
    3084:	mov	w5, wzr
    3088:	mov	w7, wzr
    308c:	str	x8, [sp]
    3090:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    3094:	cbnz	x0, 30ac <PyInit__sha256@@Base+0x2058>
    3098:	b	3268 <PyInit__sha256@@Base+0x2214>
    309c:	mov	x20, xzr
    30a0:	cbz	x0, 306c <PyInit__sha256@@Base+0x2018>
    30a4:	cmp	x19, #0x2
    30a8:	b.cs	306c <PyInit__sha256@@Base+0x2018>  // b.hs, b.nlast
    30ac:	cmn	x20, x19
    30b0:	b.eq	3114 <PyInit__sha256@@Base+0x20c0>  // b.none
    30b4:	ldr	x0, [x0]
    30b8:	cbz	x0, 3114 <PyInit__sha256@@Base+0x20c0>
    30bc:	ldr	x8, [x0, #8]
    30c0:	ldrb	w9, [x8, #171]
    30c4:	tbnz	w9, #4, 322c <PyInit__sha256@@Base+0x21d8>
    30c8:	ldr	x8, [x8, #160]
    30cc:	cbz	x8, 3250 <PyInit__sha256@@Base+0x21fc>
    30d0:	ldr	x8, [x8]
    30d4:	cbz	x8, 3250 <PyInit__sha256@@Base+0x21fc>
    30d8:	add	x1, sp, #0x10
    30dc:	mov	w2, wzr
    30e0:	bl	f30 <PyObject_GetBuffer@plt>
    30e4:	cmn	w0, #0x1
    30e8:	b.eq	3268 <PyInit__sha256@@Base+0x2214>  // b.none
    30ec:	ldr	w8, [sp, #52]
    30f0:	cmp	w8, #0x2
    30f4:	b.lt	32ac <PyInit__sha256@@Base+0x2258>  // b.tstop
    30f8:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    30fc:	ldr	x8, [x8, #4024]
    3100:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3104:	add	x1, x1, #0x644
    3108:	ldr	x0, [x8]
    310c:	bl	eb0 <PyErr_SetString@plt>
    3110:	b	316c <PyInit__sha256@@Base+0x2118>
    3114:	mov	w20, wzr
    3118:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    311c:	add	x0, x0, #0x4f0
    3120:	bl	f40 <_PyObject_New@plt>
    3124:	cbz	x0, 3168 <PyInit__sha256@@Base+0x2114>
    3128:	adrp	x8, 3000 <PyInit__sha256@@Base+0x1fac>
    312c:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    3130:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    3134:	ldr	q0, [x8, #1376]
    3138:	ldr	q1, [x9, #1392]
    313c:	ldr	d2, [x10, #1440]
    3140:	mov	x19, x0
    3144:	str	xzr, [x0, #48]
    3148:	stp	q0, q1, [x0, #16]
    314c:	str	d2, [x0, #120]
    3150:	bl	f10 <PyErr_Occurred@plt>
    3154:	cbz	x0, 3178 <PyInit__sha256@@Base+0x2124>
    3158:	ldr	x8, [x19]
    315c:	subs	x8, x8, #0x1
    3160:	str	x8, [x19]
    3164:	b.eq	3240 <PyInit__sha256@@Base+0x21ec>  // b.none
    3168:	cbz	w20, 3268 <PyInit__sha256@@Base+0x2214>
    316c:	add	x0, sp, #0x10
    3170:	bl	e60 <PyBuffer_Release@plt>
    3174:	b	3268 <PyInit__sha256@@Base+0x2214>
    3178:	cbz	w20, 326c <PyInit__sha256@@Base+0x2218>
    317c:	ldr	x23, [sp, #32]
    3180:	ldp	w8, w9, [x19, #48]
    3184:	ldr	x20, [sp, #16]
    3188:	adds	w8, w8, w23, lsl #3
    318c:	b.cc	3198 <PyInit__sha256@@Base+0x2144>  // b.lo, b.ul, b.last
    3190:	add	w9, w9, #0x1
    3194:	str	w9, [x19, #52]
    3198:	ldrsw	x10, [x19, #120]
    319c:	add	w9, w9, w23, lsr #29
    31a0:	stp	w8, w9, [x19, #48]
    31a4:	cbz	w10, 31f4 <PyInit__sha256@@Base+0x21a0>
    31a8:	mov	w8, #0x40                  	// #64
    31ac:	sub	w8, w8, w10
    31b0:	sxtw	x8, w8
    31b4:	cmp	x23, x8
    31b8:	add	x9, x19, x10
    31bc:	csel	x21, x23, x8, lt  // lt = tstop
    31c0:	add	x0, x9, #0x38
    31c4:	mov	x1, x20
    31c8:	mov	x2, x21
    31cc:	bl	e50 <memcpy@plt>
    31d0:	ldr	w8, [x19, #120]
    31d4:	add	w8, w8, w21
    31d8:	cmp	w8, #0x40
    31dc:	str	w8, [x19, #120]
    31e0:	b.ne	32a0 <PyInit__sha256@@Base+0x224c>  // b.any
    31e4:	mov	x0, x19
    31e8:	add	x20, x20, x21
    31ec:	sub	x23, x23, x21
    31f0:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    31f4:	cmp	x23, #0x40
    31f8:	add	x21, x19, #0x38
    31fc:	b.lt	3288 <PyInit__sha256@@Base+0x2234>  // b.tstop
    3200:	ldp	q0, q1, [x20, #32]
    3204:	ldp	q2, q3, [x20], #64
    3208:	mov	x0, x19
    320c:	sub	x22, x23, #0x40
    3210:	stp	q0, q1, [x21, #32]
    3214:	stp	q2, q3, [x21]
    3218:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    321c:	cmp	x23, #0x7f
    3220:	mov	x23, x22
    3224:	b.gt	3200 <PyInit__sha256@@Base+0x21ac>
    3228:	b	328c <PyInit__sha256@@Base+0x2238>
    322c:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3230:	ldr	x8, [x8, #4032]
    3234:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3238:	add	x1, x1, #0x5eb
    323c:	b	3260 <PyInit__sha256@@Base+0x220c>
    3240:	mov	x0, x19
    3244:	bl	e90 <_Py_Dealloc@plt>
    3248:	cbnz	w20, 316c <PyInit__sha256@@Base+0x2118>
    324c:	b	3268 <PyInit__sha256@@Base+0x2214>
    3250:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    3254:	ldr	x8, [x8, #4032]
    3258:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    325c:	add	x1, x1, #0x61a
    3260:	ldr	x0, [x8]
    3264:	bl	eb0 <PyErr_SetString@plt>
    3268:	mov	x19, xzr
    326c:	mov	x0, x19
    3270:	ldp	x20, x19, [sp, #144]
    3274:	ldp	x22, x21, [sp, #128]
    3278:	ldr	x23, [sp, #112]
    327c:	ldp	x29, x30, [sp, #96]
    3280:	add	sp, sp, #0xa0
    3284:	ret
    3288:	mov	x22, x23
    328c:	mov	x0, x21
    3290:	mov	x1, x20
    3294:	mov	x2, x22
    3298:	bl	e50 <memcpy@plt>
    329c:	str	w22, [x19, #120]
    32a0:	add	x0, sp, #0x10
    32a4:	bl	e60 <PyBuffer_Release@plt>
    32a8:	b	326c <PyInit__sha256@@Base+0x2218>
    32ac:	mov	w20, #0x1                   	// #1
    32b0:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    32b4:	add	x0, x0, #0x4f0
    32b8:	bl	f40 <_PyObject_New@plt>
    32bc:	cbnz	x0, 3128 <PyInit__sha256@@Base+0x20d4>
    32c0:	b	3168 <PyInit__sha256@@Base+0x2114>
    32c4:	sub	sp, sp, #0xa0
    32c8:	stp	x29, x30, [sp, #96]
    32cc:	str	x23, [sp, #112]
    32d0:	stp	x22, x21, [sp, #128]
    32d4:	stp	x20, x19, [sp, #144]
    32d8:	add	x29, sp, #0x60
    32dc:	mov	x19, x2
    32e0:	mov	x0, x1
    32e4:	cbz	x3, 331c <PyInit__sha256@@Base+0x22c8>
    32e8:	ldr	x20, [x3, #16]
    32ec:	adrp	x4, 14000 <PyInit__sha256@@Base+0x12fac>
    32f0:	add	x8, x29, #0x18
    32f4:	add	x4, x4, #0x2a8
    32f8:	mov	w6, #0x1                   	// #1
    32fc:	mov	x1, x19
    3300:	mov	x2, xzr
    3304:	mov	w5, wzr
    3308:	mov	w7, wzr
    330c:	str	x8, [sp]
    3310:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    3314:	cbnz	x0, 332c <PyInit__sha256@@Base+0x22d8>
    3318:	b	34e8 <PyInit__sha256@@Base+0x2494>
    331c:	mov	x20, xzr
    3320:	cbz	x0, 32ec <PyInit__sha256@@Base+0x2298>
    3324:	cmp	x19, #0x2
    3328:	b.cs	32ec <PyInit__sha256@@Base+0x2298>  // b.hs, b.nlast
    332c:	cmn	x20, x19
    3330:	b.eq	3394 <PyInit__sha256@@Base+0x2340>  // b.none
    3334:	ldr	x0, [x0]
    3338:	cbz	x0, 3394 <PyInit__sha256@@Base+0x2340>
    333c:	ldr	x8, [x0, #8]
    3340:	ldrb	w9, [x8, #171]
    3344:	tbnz	w9, #4, 34ac <PyInit__sha256@@Base+0x2458>
    3348:	ldr	x8, [x8, #160]
    334c:	cbz	x8, 34d0 <PyInit__sha256@@Base+0x247c>
    3350:	ldr	x8, [x8]
    3354:	cbz	x8, 34d0 <PyInit__sha256@@Base+0x247c>
    3358:	add	x1, sp, #0x10
    335c:	mov	w2, wzr
    3360:	bl	f30 <PyObject_GetBuffer@plt>
    3364:	cmn	w0, #0x1
    3368:	b.eq	34e8 <PyInit__sha256@@Base+0x2494>  // b.none
    336c:	ldr	w8, [sp, #52]
    3370:	cmp	w8, #0x2
    3374:	b.lt	352c <PyInit__sha256@@Base+0x24d8>  // b.tstop
    3378:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    337c:	ldr	x8, [x8, #4024]
    3380:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    3384:	add	x1, x1, #0x644
    3388:	ldr	x0, [x8]
    338c:	bl	eb0 <PyErr_SetString@plt>
    3390:	b	33ec <PyInit__sha256@@Base+0x2398>
    3394:	mov	w20, wzr
    3398:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    339c:	add	x0, x0, #0x350
    33a0:	bl	f40 <_PyObject_New@plt>
    33a4:	cbz	x0, 33e8 <PyInit__sha256@@Base+0x2394>
    33a8:	adrp	x8, 3000 <PyInit__sha256@@Base+0x1fac>
    33ac:	adrp	x9, 3000 <PyInit__sha256@@Base+0x1fac>
    33b0:	adrp	x10, 3000 <PyInit__sha256@@Base+0x1fac>
    33b4:	ldr	q0, [x8, #1408]
    33b8:	ldr	q1, [x9, #1424]
    33bc:	ldr	d2, [x10, #1448]
    33c0:	mov	x19, x0
    33c4:	str	xzr, [x0, #48]
    33c8:	stp	q0, q1, [x0, #16]
    33cc:	str	d2, [x0, #120]
    33d0:	bl	f10 <PyErr_Occurred@plt>
    33d4:	cbz	x0, 33f8 <PyInit__sha256@@Base+0x23a4>
    33d8:	ldr	x8, [x19]
    33dc:	subs	x8, x8, #0x1
    33e0:	str	x8, [x19]
    33e4:	b.eq	34c0 <PyInit__sha256@@Base+0x246c>  // b.none
    33e8:	cbz	w20, 34e8 <PyInit__sha256@@Base+0x2494>
    33ec:	add	x0, sp, #0x10
    33f0:	bl	e60 <PyBuffer_Release@plt>
    33f4:	b	34e8 <PyInit__sha256@@Base+0x2494>
    33f8:	cbz	w20, 34ec <PyInit__sha256@@Base+0x2498>
    33fc:	ldr	x23, [sp, #32]
    3400:	ldp	w8, w9, [x19, #48]
    3404:	ldr	x20, [sp, #16]
    3408:	adds	w8, w8, w23, lsl #3
    340c:	b.cc	3418 <PyInit__sha256@@Base+0x23c4>  // b.lo, b.ul, b.last
    3410:	add	w9, w9, #0x1
    3414:	str	w9, [x19, #52]
    3418:	ldrsw	x10, [x19, #120]
    341c:	add	w9, w9, w23, lsr #29
    3420:	stp	w8, w9, [x19, #48]
    3424:	cbz	w10, 3474 <PyInit__sha256@@Base+0x2420>
    3428:	mov	w8, #0x40                  	// #64
    342c:	sub	w8, w8, w10
    3430:	sxtw	x8, w8
    3434:	cmp	x23, x8
    3438:	add	x9, x19, x10
    343c:	csel	x21, x23, x8, lt  // lt = tstop
    3440:	add	x0, x9, #0x38
    3444:	mov	x1, x20
    3448:	mov	x2, x21
    344c:	bl	e50 <memcpy@plt>
    3450:	ldr	w8, [x19, #120]
    3454:	add	w8, w8, w21
    3458:	cmp	w8, #0x40
    345c:	str	w8, [x19, #120]
    3460:	b.ne	3520 <PyInit__sha256@@Base+0x24cc>  // b.any
    3464:	mov	x0, x19
    3468:	add	x20, x20, x21
    346c:	sub	x23, x23, x21
    3470:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    3474:	cmp	x23, #0x40
    3478:	add	x21, x19, #0x38
    347c:	b.lt	3508 <PyInit__sha256@@Base+0x24b4>  // b.tstop
    3480:	ldp	q0, q1, [x20, #32]
    3484:	ldp	q2, q3, [x20], #64
    3488:	mov	x0, x19
    348c:	sub	x22, x23, #0x40
    3490:	stp	q0, q1, [x21, #32]
    3494:	stp	q2, q3, [x21]
    3498:	bl	1628 <PyInit__sha256@@Base+0x5d4>
    349c:	cmp	x23, #0x7f
    34a0:	mov	x23, x22
    34a4:	b.gt	3480 <PyInit__sha256@@Base+0x242c>
    34a8:	b	350c <PyInit__sha256@@Base+0x24b8>
    34ac:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    34b0:	ldr	x8, [x8, #4032]
    34b4:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    34b8:	add	x1, x1, #0x5eb
    34bc:	b	34e0 <PyInit__sha256@@Base+0x248c>
    34c0:	mov	x0, x19
    34c4:	bl	e90 <_Py_Dealloc@plt>
    34c8:	cbnz	w20, 33ec <PyInit__sha256@@Base+0x2398>
    34cc:	b	34e8 <PyInit__sha256@@Base+0x2494>
    34d0:	adrp	x8, 13000 <PyInit__sha256@@Base+0x11fac>
    34d4:	ldr	x8, [x8, #4032]
    34d8:	adrp	x1, 3000 <PyInit__sha256@@Base+0x1fac>
    34dc:	add	x1, x1, #0x61a
    34e0:	ldr	x0, [x8]
    34e4:	bl	eb0 <PyErr_SetString@plt>
    34e8:	mov	x19, xzr
    34ec:	mov	x0, x19
    34f0:	ldp	x20, x19, [sp, #144]
    34f4:	ldp	x22, x21, [sp, #128]
    34f8:	ldr	x23, [sp, #112]
    34fc:	ldp	x29, x30, [sp, #96]
    3500:	add	sp, sp, #0xa0
    3504:	ret
    3508:	mov	x22, x23
    350c:	mov	x0, x21
    3510:	mov	x1, x20
    3514:	mov	x2, x22
    3518:	bl	e50 <memcpy@plt>
    351c:	str	w22, [x19, #120]
    3520:	add	x0, sp, #0x10
    3524:	bl	e60 <PyBuffer_Release@plt>
    3528:	b	34ec <PyInit__sha256@@Base+0x2498>
    352c:	mov	w20, #0x1                   	// #1
    3530:	adrp	x0, 14000 <PyInit__sha256@@Base+0x12fac>
    3534:	add	x0, x0, #0x350
    3538:	bl	f40 <_PyObject_New@plt>
    353c:	cbnz	x0, 33a8 <PyInit__sha256@@Base+0x2354>
    3540:	b	33e8 <PyInit__sha256@@Base+0x2394>

Disassembly of section .fini:

0000000000003544 <.fini>:
    3544:	stp	x29, x30, [sp, #-16]!
    3548:	mov	x29, sp
    354c:	ldp	x29, x30, [sp], #16
    3550:	ret
