
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000ba28 <.init>:
    ba28:	stp	x29, x30, [sp, #-16]!
    ba2c:	mov	x29, sp
    ba30:	bl	cd40 <__gmpfr_flags@plt>
    ba34:	ldp	x29, x30, [sp], #16
    ba38:	ret

Disassembly of section .plt:

000000000000ba40 <mpfr_agm@plt-0x20>:
    ba40:	stp	x16, x30, [sp, #-16]!
    ba44:	adrp	x16, 76000 <__gmpfr_l2b@@Base+0x2e0>
    ba48:	ldr	x17, [x16, #4088]
    ba4c:	add	x16, x16, #0xff8
    ba50:	br	x17
    ba54:	nop
    ba58:	nop
    ba5c:	nop

000000000000ba60 <mpfr_agm@plt>:
    ba60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ba64:	ldr	x17, [x16]
    ba68:	add	x16, x16, #0x0
    ba6c:	br	x17

000000000000ba70 <memcpy@plt>:
    ba70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ba74:	ldr	x17, [x16, #8]
    ba78:	add	x16, x16, #0x8
    ba7c:	br	x17

000000000000ba80 <__gmpz_get_si@plt>:
    ba80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ba84:	ldr	x17, [x16, #16]
    ba88:	add	x16, x16, #0x10
    ba8c:	br	x17

000000000000ba90 <__gmpz_tdiv_r_2exp@plt>:
    ba90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ba94:	ldr	x17, [x16, #24]
    ba98:	add	x16, x16, #0x18
    ba9c:	br	x17

000000000000baa0 <mpfr_set_ld@plt>:
    baa0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    baa4:	ldr	x17, [x16, #32]
    baa8:	add	x16, x16, #0x20
    baac:	br	x17

000000000000bab0 <mpfr_mul_ui@plt>:
    bab0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bab4:	ldr	x17, [x16, #40]
    bab8:	add	x16, x16, #0x28
    babc:	br	x17

000000000000bac0 <__gmpn_tdiv_qr@plt>:
    bac0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bac4:	ldr	x17, [x16, #48]
    bac8:	add	x16, x16, #0x30
    bacc:	br	x17

000000000000bad0 <mpfr_cot@plt>:
    bad0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bad4:	ldr	x17, [x16, #56]
    bad8:	add	x16, x16, #0x38
    badc:	br	x17

000000000000bae0 <mpfr_set_si_2exp@plt>:
    bae0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bae4:	ldr	x17, [x16, #64]
    bae8:	add	x16, x16, #0x40
    baec:	br	x17

000000000000baf0 <__gmpz_scan1@plt>:
    baf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    baf4:	ldr	x17, [x16, #72]
    baf8:	add	x16, x16, #0x48
    bafc:	br	x17

000000000000bb00 <mpfr_random_deviate_value@plt>:
    bb00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb04:	ldr	x17, [x16, #80]
    bb08:	add	x16, x16, #0x50
    bb0c:	br	x17

000000000000bb10 <strlen@plt>:
    bb10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb14:	ldr	x17, [x16, #88]
    bb18:	add	x16, x16, #0x58
    bb1c:	br	x17

000000000000bb20 <fputs@plt>:
    bb20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb24:	ldr	x17, [x16, #96]
    bb28:	add	x16, x16, #0x60
    bb2c:	br	x17

000000000000bb30 <__gmpz_tdiv_qr@plt>:
    bb30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb34:	ldr	x17, [x16, #104]
    bb38:	add	x16, x16, #0x68
    bb3c:	br	x17

000000000000bb40 <__gmpn_copyd@plt>:
    bb40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb44:	ldr	x17, [x16, #112]
    bb48:	add	x16, x16, #0x70
    bb4c:	br	x17

000000000000bb50 <mpfr_cosh@plt>:
    bb50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb54:	ldr	x17, [x16, #120]
    bb58:	add	x16, x16, #0x78
    bb5c:	br	x17

000000000000bb60 <mpfr_tanh@plt>:
    bb60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb64:	ldr	x17, [x16, #128]
    bb68:	add	x16, x16, #0x80
    bb6c:	br	x17

000000000000bb70 <mpfr_ui_pow_ui@plt>:
    bb70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb74:	ldr	x17, [x16, #136]
    bb78:	add	x16, x16, #0x88
    bb7c:	br	x17

000000000000bb80 <__gmpz_tdiv_q@plt>:
    bb80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb84:	ldr	x17, [x16, #144]
    bb88:	add	x16, x16, #0x90
    bb8c:	br	x17

000000000000bb90 <__gmpfr_ceil_exp2@plt>:
    bb90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bb94:	ldr	x17, [x16, #152]
    bb98:	add	x16, x16, #0x98
    bb9c:	br	x17

000000000000bba0 <mpfr_set_nan@plt>:
    bba0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bba4:	ldr	x17, [x16, #160]
    bba8:	add	x16, x16, #0xa0
    bbac:	br	x17

000000000000bbb0 <__gmpz_cdiv_q_2exp@plt>:
    bbb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bbb4:	ldr	x17, [x16, #168]
    bbb8:	add	x16, x16, #0xa8
    bbbc:	br	x17

000000000000bbc0 <mpfr_sub@plt>:
    bbc0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bbc4:	ldr	x17, [x16, #176]
    bbc8:	add	x16, x16, #0xb0
    bbcc:	br	x17

000000000000bbd0 <__gmpn_set_str@plt>:
    bbd0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bbd4:	ldr	x17, [x16, #184]
    bbd8:	add	x16, x16, #0xb8
    bbdc:	br	x17

000000000000bbe0 <mpfr_mul_2si@plt>:
    bbe0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bbe4:	ldr	x17, [x16, #192]
    bbe8:	add	x16, x16, #0xc0
    bbec:	br	x17

000000000000bbf0 <mpfr_gamma_one_and_two_third@plt>:
    bbf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bbf4:	ldr	x17, [x16, #200]
    bbf8:	add	x16, x16, #0xc8
    bbfc:	br	x17

000000000000bc00 <mpfr_cmp_z@plt>:
    bc00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc04:	ldr	x17, [x16, #208]
    bc08:	add	x16, x16, #0xd0
    bc0c:	br	x17

000000000000bc10 <mpfr_fits_intmax_p@plt>:
    bc10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc14:	ldr	x17, [x16, #216]
    bc18:	add	x16, x16, #0xd8
    bc1c:	br	x17

000000000000bc20 <mpfr_init@plt>:
    bc20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc24:	ldr	x17, [x16, #224]
    bc28:	add	x16, x16, #0xe0
    bc2c:	br	x17

000000000000bc30 <mpfr_tan@plt>:
    bc30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc34:	ldr	x17, [x16, #232]
    bc38:	add	x16, x16, #0xe8
    bc3c:	br	x17

000000000000bc40 <mpfr_fdump@plt>:
    bc40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc44:	ldr	x17, [x16, #240]
    bc48:	add	x16, x16, #0xf0
    bc4c:	br	x17

000000000000bc50 <__gmpz_cmpabs_ui@plt>:
    bc50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc54:	ldr	x17, [x16, #248]
    bc58:	add	x16, x16, #0xf8
    bc5c:	br	x17

000000000000bc60 <mpfr_strtofr@plt>:
    bc60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc64:	ldr	x17, [x16, #256]
    bc68:	add	x16, x16, #0x100
    bc6c:	br	x17

000000000000bc70 <mpfr_vasnprintf_aux@plt>:
    bc70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc74:	ldr	x17, [x16, #264]
    bc78:	add	x16, x16, #0x108
    bc7c:	br	x17

000000000000bc80 <__gmpz_sub_ui@plt>:
    bc80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc84:	ldr	x17, [x16, #272]
    bc88:	add	x16, x16, #0x110
    bc8c:	br	x17

000000000000bc90 <mpfr_ubf_zexp2exp@plt>:
    bc90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bc94:	ldr	x17, [x16, #280]
    bc98:	add	x16, x16, #0x118
    bc9c:	br	x17

000000000000bca0 <__gmp_get_memory_functions@plt>:
    bca0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bca4:	ldr	x17, [x16, #288]
    bca8:	add	x16, x16, #0x120
    bcac:	br	x17

000000000000bcb0 <__gmpz_sqrt@plt>:
    bcb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bcb4:	ldr	x17, [x16, #296]
    bcb8:	add	x16, x16, #0x128
    bcbc:	br	x17

000000000000bcc0 <__gmpfr_int_ceil_log2@plt>:
    bcc0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bcc4:	ldr	x17, [x16, #304]
    bcc8:	add	x16, x16, #0x130
    bccc:	br	x17

000000000000bcd0 <mpfr_mulhigh_n@plt>:
    bcd0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bcd4:	ldr	x17, [x16, #312]
    bcd8:	add	x16, x16, #0x138
    bcdc:	br	x17

000000000000bce0 <mpfr_set_erangeflag@plt>:
    bce0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bce4:	ldr	x17, [x16, #320]
    bce8:	add	x16, x16, #0x140
    bcec:	br	x17

000000000000bcf0 <mpfr_get_ui@plt>:
    bcf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bcf4:	ldr	x17, [x16, #328]
    bcf8:	add	x16, x16, #0x148
    bcfc:	br	x17

000000000000bd00 <__gmpz_set_ui@plt>:
    bd00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd04:	ldr	x17, [x16, #336]
    bd08:	add	x16, x16, #0x150
    bd0c:	br	x17

000000000000bd10 <__gmpn_lshift@plt>:
    bd10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd14:	ldr	x17, [x16, #344]
    bd18:	add	x16, x16, #0x158
    bd1c:	br	x17

000000000000bd20 <__gmpfr_floor_log2@plt>:
    bd20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd24:	ldr	x17, [x16, #352]
    bd28:	add	x16, x16, #0x160
    bd2c:	br	x17

000000000000bd30 <__gmpn_rshift@plt>:
    bd30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd34:	ldr	x17, [x16, #360]
    bd38:	add	x16, x16, #0x168
    bd3c:	br	x17

000000000000bd40 <mpfr_cmp_d@plt>:
    bd40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd44:	ldr	x17, [x16, #368]
    bd48:	add	x16, x16, #0x170
    bd4c:	br	x17

000000000000bd50 <__cxa_finalize@plt>:
    bd50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd54:	ldr	x17, [x16, #376]
    bd58:	add	x16, x16, #0x178
    bd5c:	br	x17

000000000000bd60 <sprintf@plt>:
    bd60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd64:	ldr	x17, [x16, #384]
    bd68:	add	x16, x16, #0x180
    bd6c:	br	x17

000000000000bd70 <putc@plt>:
    bd70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd74:	ldr	x17, [x16, #392]
    bd78:	add	x16, x16, #0x188
    bd7c:	br	x17

000000000000bd80 <mpfr_get_d@plt>:
    bd80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd84:	ldr	x17, [x16, #400]
    bd88:	add	x16, x16, #0x190
    bd8c:	br	x17

000000000000bd90 <mpfr_set_f@plt>:
    bd90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bd94:	ldr	x17, [x16, #408]
    bd98:	add	x16, x16, #0x198
    bd9c:	br	x17

000000000000bda0 <mpfr_mul@plt>:
    bda0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bda4:	ldr	x17, [x16, #416]
    bda8:	add	x16, x16, #0x1a0
    bdac:	br	x17

000000000000bdb0 <mpfr_sub_z@plt>:
    bdb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bdb4:	ldr	x17, [x16, #424]
    bdb8:	add	x16, x16, #0x1a8
    bdbc:	br	x17

000000000000bdc0 <mpfr_neg@plt>:
    bdc0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bdc4:	ldr	x17, [x16, #432]
    bdc8:	add	x16, x16, #0x1b0
    bdcc:	br	x17

000000000000bdd0 <mpfr_exp10@plt>:
    bdd0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bdd4:	ldr	x17, [x16, #440]
    bdd8:	add	x16, x16, #0x1b8
    bddc:	br	x17

000000000000bde0 <mpfr_pow@plt>:
    bde0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bde4:	ldr	x17, [x16, #448]
    bde8:	add	x16, x16, #0x1c0
    bdec:	br	x17

000000000000bdf0 <fputc@plt>:
    bdf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bdf4:	ldr	x17, [x16, #456]
    bdf8:	add	x16, x16, #0x1c8
    bdfc:	br	x17

000000000000be00 <mpfr_cmp2@plt>:
    be00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be04:	ldr	x17, [x16, #464]
    be08:	add	x16, x16, #0x1d0
    be0c:	br	x17

000000000000be10 <mpfr_tmp_allocate@plt>:
    be10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be14:	ldr	x17, [x16, #472]
    be18:	add	x16, x16, #0x1d8
    be1c:	br	x17

000000000000be20 <mpfr_nextbelow@plt>:
    be20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be24:	ldr	x17, [x16, #480]
    be28:	add	x16, x16, #0x1e0
    be2c:	br	x17

000000000000be30 <__gmpz_sub@plt>:
    be30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be34:	ldr	x17, [x16, #488]
    be38:	add	x16, x16, #0x1e8
    be3c:	br	x17

000000000000be40 <mpfr_random_deviate_clear@plt>:
    be40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be44:	ldr	x17, [x16, #496]
    be48:	add	x16, x16, #0x1f0
    be4c:	br	x17

000000000000be50 <mpfr_get_z@plt>:
    be50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be54:	ldr	x17, [x16, #504]
    be58:	add	x16, x16, #0x1f8
    be5c:	br	x17

000000000000be60 <__gmpn_com@plt>:
    be60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be64:	ldr	x17, [x16, #512]
    be68:	add	x16, x16, #0x200
    be6c:	br	x17

000000000000be70 <mpfr_exp_3@plt>:
    be70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be74:	ldr	x17, [x16, #520]
    be78:	add	x16, x16, #0x208
    be7c:	br	x17

000000000000be80 <__gmpz_fdiv_q@plt>:
    be80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be84:	ldr	x17, [x16, #528]
    be88:	add	x16, x16, #0x210
    be8c:	br	x17

000000000000be90 <mpfr_set_d@plt>:
    be90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    be94:	ldr	x17, [x16, #536]
    be98:	add	x16, x16, #0x218
    be9c:	br	x17

000000000000bea0 <mpfr_fits_ulong_p@plt>:
    bea0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bea4:	ldr	x17, [x16, #544]
    bea8:	add	x16, x16, #0x220
    beac:	br	x17

000000000000beb0 <__gmpn_sub_n@plt>:
    beb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    beb4:	ldr	x17, [x16, #552]
    beb8:	add	x16, x16, #0x228
    bebc:	br	x17

000000000000bec0 <mpfr_clear_cache@plt>:
    bec0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bec4:	ldr	x17, [x16, #560]
    bec8:	add	x16, x16, #0x230
    becc:	br	x17

000000000000bed0 <mpfr_div_ui2@plt>:
    bed0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bed4:	ldr	x17, [x16, #568]
    bed8:	add	x16, x16, #0x238
    bedc:	br	x17

000000000000bee0 <__gmpz_fits_slong_p@plt>:
    bee0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bee4:	ldr	x17, [x16, #576]
    bee8:	add	x16, x16, #0x240
    beec:	br	x17

000000000000bef0 <localeconv@plt>:
    bef0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bef4:	ldr	x17, [x16, #584]
    bef8:	add	x16, x16, #0x248
    befc:	br	x17

000000000000bf00 <__gmpz_cdiv_q_ui@plt>:
    bf00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf04:	ldr	x17, [x16, #592]
    bf08:	add	x16, x16, #0x250
    bf0c:	br	x17

000000000000bf10 <mpfr_frac@plt>:
    bf10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf14:	ldr	x17, [x16, #600]
    bf18:	add	x16, x16, #0x258
    bf1c:	br	x17

000000000000bf20 <mpfr_set_prec@plt>:
    bf20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf24:	ldr	x17, [x16, #608]
    bf28:	add	x16, x16, #0x260
    bf2c:	br	x17

000000000000bf30 <__gmpz_cmpabs@plt>:
    bf30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf34:	ldr	x17, [x16, #616]
    bf38:	add	x16, x16, #0x268
    bf3c:	br	x17

000000000000bf40 <mpfr_pow_z@plt>:
    bf40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf44:	ldr	x17, [x16, #624]
    bf48:	add	x16, x16, #0x270
    bf4c:	br	x17

000000000000bf50 <mpfr_powerof2_raw@plt>:
    bf50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf54:	ldr	x17, [x16, #632]
    bf58:	add	x16, x16, #0x278
    bf5c:	br	x17

000000000000bf60 <__gmpz_setbit@plt>:
    bf60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf64:	ldr	x17, [x16, #640]
    bf68:	add	x16, x16, #0x280
    bf6c:	br	x17

000000000000bf70 <__gmpfr_isqrt@plt>:
    bf70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf74:	ldr	x17, [x16, #648]
    bf78:	add	x16, x16, #0x288
    bf7c:	br	x17

000000000000bf80 <mpfr_rint_trunc@plt>:
    bf80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf84:	ldr	x17, [x16, #656]
    bf88:	add	x16, x16, #0x290
    bf8c:	br	x17

000000000000bf90 <mpfr_overflow@plt>:
    bf90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bf94:	ldr	x17, [x16, #664]
    bf98:	add	x16, x16, #0x298
    bf9c:	br	x17

000000000000bfa0 <mpfr_cmp_ui_2exp@plt>:
    bfa0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bfa4:	ldr	x17, [x16, #672]
    bfa8:	add	x16, x16, #0x2a0
    bfac:	br	x17

000000000000bfb0 <__gmpz_divexact@plt>:
    bfb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bfb4:	ldr	x17, [x16, #680]
    bfb8:	add	x16, x16, #0x2a8
    bfbc:	br	x17

000000000000bfc0 <mpfr_pow_ui@plt>:
    bfc0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bfc4:	ldr	x17, [x16, #688]
    bfc8:	add	x16, x16, #0x2b0
    bfcc:	br	x17

000000000000bfd0 <mpfr_ubf_mul_exact@plt>:
    bfd0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bfd4:	ldr	x17, [x16, #696]
    bfd8:	add	x16, x16, #0x2b8
    bfdc:	br	x17

000000000000bfe0 <mpfr_mpz_init@plt>:
    bfe0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bfe4:	ldr	x17, [x16, #704]
    bfe8:	add	x16, x16, #0x2c0
    bfec:	br	x17

000000000000bff0 <__gmpz_set@plt>:
    bff0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    bff4:	ldr	x17, [x16, #712]
    bff8:	add	x16, x16, #0x2c8
    bffc:	br	x17

000000000000c000 <mpfr_bernoulli_freecache@plt>:
    c000:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c004:	ldr	x17, [x16, #720]
    c008:	add	x16, x16, #0x2d0
    c00c:	br	x17

000000000000c010 <__gmpz_fac_ui@plt>:
    c010:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c014:	ldr	x17, [x16, #728]
    c018:	add	x16, x16, #0x2d8
    c01c:	br	x17

000000000000c020 <__gmpz_tstbit@plt>:
    c020:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c024:	ldr	x17, [x16, #736]
    c028:	add	x16, x16, #0x2e0
    c02c:	br	x17

000000000000c030 <__gmpz_mul@plt>:
    c030:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c034:	ldr	x17, [x16, #744]
    c038:	add	x16, x16, #0x2e8
    c03c:	br	x17

000000000000c040 <__gmpfr_set_uj_2exp@plt>:
    c040:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c044:	ldr	x17, [x16, #752]
    c048:	add	x16, x16, #0x2f0
    c04c:	br	x17

000000000000c050 <mpfr_fits_uintmax_p@plt>:
    c050:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c054:	ldr	x17, [x16, #760]
    c058:	add	x16, x16, #0x2f8
    c05c:	br	x17

000000000000c060 <mpfr_sincos_fast@plt>:
    c060:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c064:	ldr	x17, [x16, #768]
    c068:	add	x16, x16, #0x300
    c06c:	br	x17

000000000000c070 <mpfr_z_sub@plt>:
    c070:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c074:	ldr	x17, [x16, #776]
    c078:	add	x16, x16, #0x308
    c07c:	br	x17

000000000000c080 <__gmpz_tdiv_q_ui@plt>:
    c080:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c084:	ldr	x17, [x16, #784]
    c088:	add	x16, x16, #0x310
    c08c:	br	x17

000000000000c090 <__gmp_vasprintf@plt>:
    c090:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c094:	ldr	x17, [x16, #792]
    c098:	add	x16, x16, #0x318
    c09c:	br	x17

000000000000c0a0 <mpfr_sub_si@plt>:
    c0a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c0a4:	ldr	x17, [x16, #800]
    c0a8:	add	x16, x16, #0x320
    c0ac:	br	x17

000000000000c0b0 <mpfr_clear@plt>:
    c0b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c0b4:	ldr	x17, [x16, #808]
    c0b8:	add	x16, x16, #0x328
    c0bc:	br	x17

000000000000c0c0 <__gmpfr_set_sj@plt>:
    c0c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c0c4:	ldr	x17, [x16, #816]
    c0c8:	add	x16, x16, #0x330
    c0cc:	br	x17

000000000000c0d0 <mpfr_log@plt>:
    c0d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c0d4:	ldr	x17, [x16, #824]
    c0d8:	add	x16, x16, #0x338
    c0dc:	br	x17

000000000000c0e0 <mpfr_lgamma@plt>:
    c0e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c0e4:	ldr	x17, [x16, #832]
    c0e8:	add	x16, x16, #0x340
    c0ec:	br	x17

000000000000c0f0 <__gmpfr_cuberoot@plt>:
    c0f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c0f4:	ldr	x17, [x16, #840]
    c0f8:	add	x16, x16, #0x348
    c0fc:	br	x17

000000000000c100 <__gmp_asprintf@plt>:
    c100:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c104:	ldr	x17, [x16, #848]
    c108:	add	x16, x16, #0x350
    c10c:	br	x17

000000000000c110 <mpfr_setmax@plt>:
    c110:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c114:	ldr	x17, [x16, #856]
    c118:	add	x16, x16, #0x358
    c11c:	br	x17

000000000000c120 <__gmpz_swap@plt>:
    c120:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c124:	ldr	x17, [x16, #864]
    c128:	add	x16, x16, #0x360
    c12c:	br	x17

000000000000c130 <mpfr_sub1sp@plt>:
    c130:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c134:	ldr	x17, [x16, #872]
    c138:	add	x16, x16, #0x368
    c13c:	br	x17

000000000000c140 <__gmpz_mul_ui@plt>:
    c140:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c144:	ldr	x17, [x16, #880]
    c148:	add	x16, x16, #0x370
    c14c:	br	x17

000000000000c150 <memset@plt>:
    c150:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c154:	ldr	x17, [x16, #888]
    c158:	add	x16, x16, #0x378
    c15c:	br	x17

000000000000c160 <mpfr_nextabove@plt>:
    c160:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c164:	ldr	x17, [x16, #896]
    c168:	add	x16, x16, #0x380
    c16c:	br	x17

000000000000c170 <__gmpz_fdiv_q_2exp@plt>:
    c170:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c174:	ldr	x17, [x16, #904]
    c178:	add	x16, x16, #0x388
    c17c:	br	x17

000000000000c180 <mpfr_divhigh_n@plt>:
    c180:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c184:	ldr	x17, [x16, #912]
    c188:	add	x16, x16, #0x390
    c18c:	br	x17

000000000000c190 <mpfr_random_deviate_init@plt>:
    c190:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c194:	ldr	x17, [x16, #920]
    c198:	add	x16, x16, #0x398
    c19c:	br	x17

000000000000c1a0 <mpfr_integer_p@plt>:
    c1a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c1a4:	ldr	x17, [x16, #928]
    c1a8:	add	x16, x16, #0x3a0
    c1ac:	br	x17

000000000000c1b0 <mpfr_mpz_clear@plt>:
    c1b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c1b4:	ldr	x17, [x16, #936]
    c1b8:	add	x16, x16, #0x3a8
    c1bc:	br	x17

000000000000c1c0 <__gmpf_set_ui@plt>:
    c1c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c1c4:	ldr	x17, [x16, #944]
    c1c8:	add	x16, x16, #0x3b0
    c1cc:	br	x17

000000000000c1d0 <mpfr_get_si@plt>:
    c1d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c1d4:	ldr	x17, [x16, #952]
    c1d8:	add	x16, x16, #0x3b8
    c1dc:	br	x17

000000000000c1e0 <mpfr_add@plt>:
    c1e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c1e4:	ldr	x17, [x16, #960]
    c1e8:	add	x16, x16, #0x3c0
    c1ec:	br	x17

000000000000c1f0 <mpfr_clears@plt>:
    c1f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c1f4:	ldr	x17, [x16, #968]
    c1f8:	add	x16, x16, #0x3c8
    c1fc:	br	x17

000000000000c200 <mpfr_reallocate_func@plt>:
    c200:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c204:	ldr	x17, [x16, #976]
    c208:	add	x16, x16, #0x3d0
    c20c:	br	x17

000000000000c210 <mpfr_log2@plt>:
    c210:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c214:	ldr	x17, [x16, #984]
    c218:	add	x16, x16, #0x3d8
    c21c:	br	x17

000000000000c220 <mpfr_erf@plt>:
    c220:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c224:	ldr	x17, [x16, #992]
    c228:	add	x16, x16, #0x3e0
    c22c:	br	x17

000000000000c230 <__gmpz_mul_2exp@plt>:
    c230:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c234:	ldr	x17, [x16, #1000]
    c238:	add	x16, x16, #0x3e8
    c23c:	br	x17

000000000000c240 <mpfr_free_pool@plt>:
    c240:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c244:	ldr	x17, [x16, #1008]
    c248:	add	x16, x16, #0x3f0
    c24c:	br	x17

000000000000c250 <mpfr_set_z@plt>:
    c250:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c254:	ldr	x17, [x16, #1016]
    c258:	add	x16, x16, #0x3f8
    c25c:	br	x17

000000000000c260 <mpfr_fma@plt>:
    c260:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c264:	ldr	x17, [x16, #1024]
    c268:	add	x16, x16, #0x400
    c26c:	br	x17

000000000000c270 <mpfr_add_ui@plt>:
    c270:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c274:	ldr	x17, [x16, #1032]
    c278:	add	x16, x16, #0x408
    c27c:	br	x17

000000000000c280 <mpfr_clear_flags@plt>:
    c280:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c284:	ldr	x17, [x16, #1040]
    c288:	add	x16, x16, #0x410
    c28c:	br	x17

000000000000c290 <__gmpz_addmul@plt>:
    c290:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c294:	ldr	x17, [x16, #1048]
    c298:	add	x16, x16, #0x418
    c29c:	br	x17

000000000000c2a0 <getc@plt>:
    c2a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c2a4:	ldr	x17, [x16, #1056]
    c2a8:	add	x16, x16, #0x420
    c2ac:	br	x17

000000000000c2b0 <mpfr_setmin@plt>:
    c2b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c2b4:	ldr	x17, [x16, #1064]
    c2b8:	add	x16, x16, #0x428
    c2bc:	br	x17

000000000000c2c0 <mpfr_mul_2ui@plt>:
    c2c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c2c4:	ldr	x17, [x16, #1072]
    c2c8:	add	x16, x16, #0x430
    c2cc:	br	x17

000000000000c2d0 <__gmp_urandomm_ui@plt>:
    c2d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c2d4:	ldr	x17, [x16, #1080]
    c2d8:	add	x16, x16, #0x438
    c2dc:	br	x17

000000000000c2e0 <__gmpz_root@plt>:
    c2e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c2e4:	ldr	x17, [x16, #1088]
    c2e8:	add	x16, x16, #0x440
    c2ec:	br	x17

000000000000c2f0 <mpfr_ui_div@plt>:
    c2f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c2f4:	ldr	x17, [x16, #1096]
    c2f8:	add	x16, x16, #0x448
    c2fc:	br	x17

000000000000c300 <mpfr_rint@plt>:
    c300:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c304:	ldr	x17, [x16, #1104]
    c308:	add	x16, x16, #0x450
    c30c:	br	x17

000000000000c310 <mpfr_random_deviate_tstbit@plt>:
    c310:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c314:	ldr	x17, [x16, #1112]
    c318:	add	x16, x16, #0x458
    c31c:	br	x17

000000000000c320 <mpfr_sinh@plt>:
    c320:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c324:	ldr	x17, [x16, #1120]
    c328:	add	x16, x16, #0x460
    c32c:	br	x17

000000000000c330 <__gmpz_pow_ui@plt>:
    c330:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c334:	ldr	x17, [x16, #1128]
    c338:	add	x16, x16, #0x468
    c33c:	br	x17

000000000000c340 <mpfr_set_str_binary@plt>:
    c340:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c344:	ldr	x17, [x16, #1136]
    c348:	add	x16, x16, #0x470
    c34c:	br	x17

000000000000c350 <mpfr_can_round_raw@plt>:
    c350:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c354:	ldr	x17, [x16, #1144]
    c358:	add	x16, x16, #0x478
    c35c:	br	x17

000000000000c360 <__gmpz_add_ui@plt>:
    c360:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c364:	ldr	x17, [x16, #1152]
    c368:	add	x16, x16, #0x480
    c36c:	br	x17

000000000000c370 <mpfr_round_p@plt>:
    c370:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c374:	ldr	x17, [x16, #1160]
    c378:	add	x16, x16, #0x488
    c37c:	br	x17

000000000000c380 <mpfr_cache@plt>:
    c380:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c384:	ldr	x17, [x16, #1168]
    c388:	add	x16, x16, #0x490
    c38c:	br	x17

000000000000c390 <__gmon_start__@plt>:
    c390:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c394:	ldr	x17, [x16, #1176]
    c398:	add	x16, x16, #0x498
    c39c:	br	x17

000000000000c3a0 <mpfr_add_d@plt>:
    c3a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c3a4:	ldr	x17, [x16, #1184]
    c3a8:	add	x16, x16, #0x4a0
    c3ac:	br	x17

000000000000c3b0 <__gmpn_sqr@plt>:
    c3b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c3b4:	ldr	x17, [x16, #1192]
    c3b8:	add	x16, x16, #0x4a8
    c3bc:	br	x17

000000000000c3c0 <mpfr_underflow@plt>:
    c3c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c3c4:	ldr	x17, [x16, #1200]
    c3c8:	add	x16, x16, #0x4b0
    c3cc:	br	x17

000000000000c3d0 <mpfr_cmp_si_2exp@plt>:
    c3d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c3d4:	ldr	x17, [x16, #1208]
    c3d8:	add	x16, x16, #0x4b8
    c3dc:	br	x17

000000000000c3e0 <abort@plt>:
    c3e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c3e4:	ldr	x17, [x16, #1216]
    c3e8:	add	x16, x16, #0x4c0
    c3ec:	br	x17

000000000000c3f0 <mpfr_sqr@plt>:
    c3f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c3f4:	ldr	x17, [x16, #1224]
    c3f8:	add	x16, x16, #0x4c8
    c3fc:	br	x17

000000000000c400 <mpfr_tmp_free@plt>:
    c400:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c404:	ldr	x17, [x16, #1232]
    c408:	add	x16, x16, #0x4d0
    c40c:	br	x17

000000000000c410 <mpfr_div_2si@plt>:
    c410:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c414:	ldr	x17, [x16, #1240]
    c418:	add	x16, x16, #0x4d8
    c41c:	br	x17

000000000000c420 <mpfr_cos@plt>:
    c420:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c424:	ldr	x17, [x16, #1248]
    c428:	add	x16, x16, #0x4e0
    c42c:	br	x17

000000000000c430 <__gmpz_realloc2@plt>:
    c430:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c434:	ldr	x17, [x16, #1256]
    c438:	add	x16, x16, #0x4e8
    c43c:	br	x17

000000000000c440 <mpfr_sin@plt>:
    c440:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c444:	ldr	x17, [x16, #1264]
    c448:	add	x16, x16, #0x4f0
    c44c:	br	x17

000000000000c450 <mpfr_nexttozero@plt>:
    c450:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c454:	ldr	x17, [x16, #1272]
    c458:	add	x16, x16, #0x4f8
    c45c:	br	x17

000000000000c460 <__gmpn_mul_n@plt>:
    c460:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c464:	ldr	x17, [x16, #1280]
    c468:	add	x16, x16, #0x500
    c46c:	br	x17

000000000000c470 <mpfr_add_z@plt>:
    c470:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c474:	ldr	x17, [x16, #1288]
    c478:	add	x16, x16, #0x508
    c47c:	br	x17

000000000000c480 <mpfr_sqrhigh_n@plt>:
    c480:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c484:	ldr	x17, [x16, #1296]
    c488:	add	x16, x16, #0x510
    c48c:	br	x17

000000000000c490 <mpfr_swap@plt>:
    c490:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c494:	ldr	x17, [x16, #1304]
    c498:	add	x16, x16, #0x518
    c49c:	br	x17

000000000000c4a0 <__gmpz_scan0@plt>:
    c4a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c4a4:	ldr	x17, [x16, #1312]
    c4a8:	add	x16, x16, #0x520
    c4ac:	br	x17

000000000000c4b0 <__gmpn_submul_1@plt>:
    c4b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c4b4:	ldr	x17, [x16, #1320]
    c4b8:	add	x16, x16, #0x528
    c4bc:	br	x17

000000000000c4c0 <mpfr_mul_z@plt>:
    c4c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c4c4:	ldr	x17, [x16, #1328]
    c4c8:	add	x16, x16, #0x530
    c4cc:	br	x17

000000000000c4d0 <__gmpz_ui_pow_ui@plt>:
    c4d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c4d4:	ldr	x17, [x16, #1336]
    c4d8:	add	x16, x16, #0x538
    c4dc:	br	x17

000000000000c4e0 <mpfr_set_z_2exp@plt>:
    c4e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c4e4:	ldr	x17, [x16, #1344]
    c4e8:	add	x16, x16, #0x540
    c4ec:	br	x17

000000000000c4f0 <mpfr_get_str@plt>:
    c4f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c4f4:	ldr	x17, [x16, #1352]
    c4f8:	add	x16, x16, #0x548
    c4fc:	br	x17

000000000000c500 <mpfr_remquo@plt>:
    c500:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c504:	ldr	x17, [x16, #1360]
    c508:	add	x16, x16, #0x550
    c50c:	br	x17

000000000000c510 <__gmpn_copyi@plt>:
    c510:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c514:	ldr	x17, [x16, #1368]
    c518:	add	x16, x16, #0x558
    c51c:	br	x17

000000000000c520 <mpfr_sub_ui@plt>:
    c520:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c524:	ldr	x17, [x16, #1376]
    c528:	add	x16, x16, #0x560
    c52c:	br	x17

000000000000c530 <mpfr_round_near_x@plt>:
    c530:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c534:	ldr	x17, [x16, #1384]
    c538:	add	x16, x16, #0x568
    c53c:	br	x17

000000000000c540 <__gmp_fprintf@plt>:
    c540:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c544:	ldr	x17, [x16, #1392]
    c548:	add	x16, x16, #0x570
    c54c:	br	x17

000000000000c550 <__gmpq_set_ui@plt>:
    c550:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c554:	ldr	x17, [x16, #1400]
    c558:	add	x16, x16, #0x578
    c55c:	br	x17

000000000000c560 <__gmpz_divexact_ui@plt>:
    c560:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c564:	ldr	x17, [x16, #1408]
    c568:	add	x16, x16, #0x580
    c56c:	br	x17

000000000000c570 <mpfr_get_ld@plt>:
    c570:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c574:	ldr	x17, [x16, #1416]
    c578:	add	x16, x16, #0x588
    c57c:	br	x17

000000000000c580 <mpfr_random_deviate_swap@plt>:
    c580:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c584:	ldr	x17, [x16, #1424]
    c588:	add	x16, x16, #0x590
    c58c:	br	x17

000000000000c590 <__gmpn_add_n@plt>:
    c590:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c594:	ldr	x17, [x16, #1432]
    c598:	add	x16, x16, #0x598
    c59c:	br	x17

000000000000c5a0 <mpfr_set_inf@plt>:
    c5a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c5a4:	ldr	x17, [x16, #1440]
    c5a8:	add	x16, x16, #0x5a0
    c5ac:	br	x17

000000000000c5b0 <mpfr_yn@plt>:
    c5b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c5b4:	ldr	x17, [x16, #1448]
    c5b8:	add	x16, x16, #0x5a8
    c5bc:	br	x17

000000000000c5c0 <mpfr_si_sub@plt>:
    c5c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c5c4:	ldr	x17, [x16, #1456]
    c5c8:	add	x16, x16, #0x5b0
    c5cc:	br	x17

000000000000c5d0 <__gmpn_get_str@plt>:
    c5d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c5d4:	ldr	x17, [x16, #1464]
    c5d8:	add	x16, x16, #0x5b8
    c5dc:	br	x17

000000000000c5e0 <mpfr_set_ui_2exp@plt>:
    c5e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c5e4:	ldr	x17, [x16, #1472]
    c5e8:	add	x16, x16, #0x5c0
    c5ec:	br	x17

000000000000c5f0 <mpfr_lngamma@plt>:
    c5f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c5f4:	ldr	x17, [x16, #1480]
    c5f8:	add	x16, x16, #0x5c8
    c5fc:	br	x17

000000000000c600 <__gmpz_fdiv_q_ui@plt>:
    c600:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c604:	ldr	x17, [x16, #1488]
    c608:	add	x16, x16, #0x5d0
    c60c:	br	x17

000000000000c610 <mpfr_div@plt>:
    c610:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c614:	ldr	x17, [x16, #1496]
    c618:	add	x16, x16, #0x5d8
    c61c:	br	x17

000000000000c620 <__ctype_b_loc@plt>:
    c620:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c624:	ldr	x17, [x16, #1504]
    c628:	add	x16, x16, #0x5e0
    c62c:	br	x17

000000000000c630 <__gmpz_clear@plt>:
    c630:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c634:	ldr	x17, [x16, #1512]
    c638:	add	x16, x16, #0x5e8
    c63c:	br	x17

000000000000c640 <strtol@plt>:
    c640:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c644:	ldr	x17, [x16, #1520]
    c648:	add	x16, x16, #0x5f0
    c64c:	br	x17

000000000000c650 <fread@plt>:
    c650:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c654:	ldr	x17, [x16, #1528]
    c658:	add	x16, x16, #0x5f8
    c65c:	br	x17

000000000000c660 <mpfr_nexttoinf@plt>:
    c660:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c664:	ldr	x17, [x16, #1536]
    c668:	add	x16, x16, #0x600
    c66c:	br	x17

000000000000c670 <__gmpz_mul_si@plt>:
    c670:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c674:	ldr	x17, [x16, #1544]
    c678:	add	x16, x16, #0x608
    c67c:	br	x17

000000000000c680 <mpfr_atan@plt>:
    c680:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c684:	ldr	x17, [x16, #1552]
    c688:	add	x16, x16, #0x610
    c68c:	br	x17

000000000000c690 <mpfr_set4@plt>:
    c690:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c694:	ldr	x17, [x16, #1560]
    c698:	add	x16, x16, #0x618
    c69c:	br	x17

000000000000c6a0 <mpfr_rootn_ui@plt>:
    c6a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c6a4:	ldr	x17, [x16, #1568]
    c6a8:	add	x16, x16, #0x620
    c6ac:	br	x17

000000000000c6b0 <mpfr_set_str@plt>:
    c6b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c6b4:	ldr	x17, [x16, #1576]
    c6b8:	add	x16, x16, #0x628
    c6bc:	br	x17

000000000000c6c0 <__gmpf_neg@plt>:
    c6c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c6c4:	ldr	x17, [x16, #1584]
    c6c8:	add	x16, x16, #0x630
    c6cc:	br	x17

000000000000c6d0 <mpfr_fac_ui@plt>:
    c6d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c6d4:	ldr	x17, [x16, #1592]
    c6d8:	add	x16, x16, #0x638
    c6dc:	br	x17

000000000000c6e0 <mpfr_pow_general@plt>:
    c6e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c6e4:	ldr	x17, [x16, #1600]
    c6e8:	add	x16, x16, #0x640
    c6ec:	br	x17

000000000000c6f0 <mpfr_log1p@plt>:
    c6f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c6f4:	ldr	x17, [x16, #1608]
    c6f8:	add	x16, x16, #0x648
    c6fc:	br	x17

000000000000c700 <mpfr_sgn@plt>:
    c700:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c704:	ldr	x17, [x16, #1616]
    c708:	add	x16, x16, #0x650
    c70c:	br	x17

000000000000c710 <mpfr_round_raw_4@plt>:
    c710:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c714:	ldr	x17, [x16, #1624]
    c718:	add	x16, x16, #0x658
    c71c:	br	x17

000000000000c720 <ungetc@plt>:
    c720:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c724:	ldr	x17, [x16, #1632]
    c728:	add	x16, x16, #0x660
    c72c:	br	x17

000000000000c730 <__gmpz_tdiv_q_2exp@plt>:
    c730:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c734:	ldr	x17, [x16, #1640]
    c738:	add	x16, x16, #0x668
    c73c:	br	x17

000000000000c740 <mpfr_exp@plt>:
    c740:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c744:	ldr	x17, [x16, #1648]
    c748:	add	x16, x16, #0x670
    c74c:	br	x17

000000000000c750 <mpfr_round_raw_2@plt>:
    c750:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c754:	ldr	x17, [x16, #1656]
    c758:	add	x16, x16, #0x678
    c75c:	br	x17

000000000000c760 <__gmpz_cdiv_q@plt>:
    c760:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c764:	ldr	x17, [x16, #1664]
    c768:	add	x16, x16, #0x680
    c76c:	br	x17

000000000000c770 <mpfr_add1@plt>:
    c770:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c774:	ldr	x17, [x16, #1672]
    c778:	add	x16, x16, #0x688
    c77c:	br	x17

000000000000c780 <mpfr_fits_slong_p@plt>:
    c780:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c784:	ldr	x17, [x16, #1680]
    c788:	add	x16, x16, #0x690
    c78c:	br	x17

000000000000c790 <__gmpn_mul@plt>:
    c790:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c794:	ldr	x17, [x16, #1688]
    c798:	add	x16, x16, #0x698
    c79c:	br	x17

000000000000c7a0 <mpfr_gamma@plt>:
    c7a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c7a4:	ldr	x17, [x16, #1696]
    c7a8:	add	x16, x16, #0x6a0
    c7ac:	br	x17

000000000000c7b0 <__gmpn_divrem_1@plt>:
    c7b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c7b4:	ldr	x17, [x16, #1704]
    c7b8:	add	x16, x16, #0x6a8
    c7bc:	br	x17

000000000000c7c0 <mpfr_powerof2_raw2@plt>:
    c7c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c7c4:	ldr	x17, [x16, #1712]
    c7c8:	add	x16, x16, #0x6b0
    c7cc:	br	x17

000000000000c7d0 <mpfr_random_deviate_reset@plt>:
    c7d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c7d4:	ldr	x17, [x16, #1720]
    c7d8:	add	x16, x16, #0x6b8
    c7dc:	br	x17

000000000000c7e0 <mpfr_add_si@plt>:
    c7e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c7e4:	ldr	x17, [x16, #1728]
    c7e8:	add	x16, x16, #0x6c0
    c7ec:	br	x17

000000000000c7f0 <__gmpz_cmp_si@plt>:
    c7f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c7f4:	ldr	x17, [x16, #1736]
    c7f8:	add	x16, x16, #0x6c8
    c7fc:	br	x17

000000000000c800 <mpfr_rand_raw@plt>:
    c800:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c804:	ldr	x17, [x16, #1744]
    c808:	add	x16, x16, #0x6d0
    c80c:	br	x17

000000000000c810 <mpfr_div_si@plt>:
    c810:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c814:	ldr	x17, [x16, #1752]
    c818:	add	x16, x16, #0x6d8
    c81c:	br	x17

000000000000c820 <mpfr_bernoulli_cache@plt>:
    c820:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c824:	ldr	x17, [x16, #1760]
    c828:	add	x16, x16, #0x6e0
    c82c:	br	x17

000000000000c830 <mpfr_sqrt_ui@plt>:
    c830:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c834:	ldr	x17, [x16, #1768]
    c838:	add	x16, x16, #0x6e8
    c83c:	br	x17

000000000000c840 <mpfr_set_q@plt>:
    c840:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c844:	ldr	x17, [x16, #1776]
    c848:	add	x16, x16, #0x6f0
    c84c:	br	x17

000000000000c850 <__gmpn_popcount@plt>:
    c850:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c854:	ldr	x17, [x16, #1784]
    c858:	add	x16, x16, #0x6f8
    c85c:	br	x17

000000000000c860 <mpfr_exp_2@plt>:
    c860:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c864:	ldr	x17, [x16, #1792]
    c868:	add	x16, x16, #0x700
    c86c:	br	x17

000000000000c870 <__gmpz_submul@plt>:
    c870:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c874:	ldr	x17, [x16, #1800]
    c878:	add	x16, x16, #0x708
    c87c:	br	x17

000000000000c880 <mpfr_free_str@plt>:
    c880:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c884:	ldr	x17, [x16, #1808]
    c888:	add	x16, x16, #0x710
    c88c:	br	x17

000000000000c890 <__gmpz_mod@plt>:
    c890:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c894:	ldr	x17, [x16, #1816]
    c898:	add	x16, x16, #0x718
    c89c:	br	x17

000000000000c8a0 <mpfr_si_div@plt>:
    c8a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c8a4:	ldr	x17, [x16, #1824]
    c8a8:	add	x16, x16, #0x720
    c8ac:	br	x17

000000000000c8b0 <mpfr_beta@plt>:
    c8b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c8b4:	ldr	x17, [x16, #1832]
    c8b8:	add	x16, x16, #0x728
    c8bc:	br	x17

000000000000c8c0 <fwrite@plt>:
    c8c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c8c4:	ldr	x17, [x16, #1840]
    c8c8:	add	x16, x16, #0x730
    c8cc:	br	x17

000000000000c8d0 <__gmpz_cmp@plt>:
    c8d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c8d4:	ldr	x17, [x16, #1848]
    c8d8:	add	x16, x16, #0x738
    c8dc:	br	x17

000000000000c8e0 <mpfr_abort_prec_max@plt>:
    c8e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c8e4:	ldr	x17, [x16, #1856]
    c8e8:	add	x16, x16, #0x740
    c8ec:	br	x17

000000000000c8f0 <mpfr_div_2ui@plt>:
    c8f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c8f4:	ldr	x17, [x16, #1864]
    c8f8:	add	x16, x16, #0x748
    c8fc:	br	x17

000000000000c900 <mpfr_mpz_init2@plt>:
    c900:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c904:	ldr	x17, [x16, #1872]
    c908:	add	x16, x16, #0x750
    c90c:	br	x17

000000000000c910 <strcpy@plt>:
    c910:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c914:	ldr	x17, [x16, #1880]
    c918:	add	x16, x16, #0x758
    c91c:	br	x17

000000000000c920 <mpfr_sqrt@plt>:
    c920:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c924:	ldr	x17, [x16, #1888]
    c928:	add	x16, x16, #0x760
    c92c:	br	x17

000000000000c930 <strncat@plt>:
    c930:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c934:	ldr	x17, [x16, #1896]
    c938:	add	x16, x16, #0x768
    c93c:	br	x17

000000000000c940 <__gmpfr_ceil_log2@plt>:
    c940:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c944:	ldr	x17, [x16, #1904]
    c948:	add	x16, x16, #0x770
    c94c:	br	x17

000000000000c950 <mpfr_mul_si@plt>:
    c950:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c954:	ldr	x17, [x16, #1912]
    c958:	add	x16, x16, #0x778
    c95c:	br	x17

000000000000c960 <mpfr_prec_round@plt>:
    c960:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c964:	ldr	x17, [x16, #1920]
    c968:	add	x16, x16, #0x780
    c96c:	br	x17

000000000000c970 <mpfr_min_prec@plt>:
    c970:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c974:	ldr	x17, [x16, #1928]
    c978:	add	x16, x16, #0x788
    c97c:	br	x17

000000000000c980 <mpfr_cmp3@plt>:
    c980:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c984:	ldr	x17, [x16, #1936]
    c988:	add	x16, x16, #0x790
    c98c:	br	x17

000000000000c990 <mpfr_cmpabs@plt>:
    c990:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c994:	ldr	x17, [x16, #1944]
    c998:	add	x16, x16, #0x798
    c99c:	br	x17

000000000000c9a0 <__gmpz_add@plt>:
    c9a0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c9a4:	ldr	x17, [x16, #1952]
    c9a8:	add	x16, x16, #0x7a0
    c9ac:	br	x17

000000000000c9b0 <mpfr_extract@plt>:
    c9b0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c9b4:	ldr	x17, [x16, #1960]
    c9b8:	add	x16, x16, #0x7a8
    c9bc:	br	x17

000000000000c9c0 <mpfr_eint@plt>:
    c9c0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c9c4:	ldr	x17, [x16, #1968]
    c9c8:	add	x16, x16, #0x7b0
    c9cc:	br	x17

000000000000c9d0 <mpfr_digamma@plt>:
    c9d0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c9d4:	ldr	x17, [x16, #1976]
    c9d8:	add	x16, x16, #0x7b8
    c9dc:	br	x17

000000000000c9e0 <mpfr_less_p@plt>:
    c9e0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c9e4:	ldr	x17, [x16, #1984]
    c9e8:	add	x16, x16, #0x7c0
    c9ec:	br	x17

000000000000c9f0 <mpfr_ui_pow@plt>:
    c9f0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    c9f4:	ldr	x17, [x16, #1992]
    c9f8:	add	x16, x16, #0x7c8
    c9fc:	br	x17

000000000000ca00 <mpfr_round_raw@plt>:
    ca00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca04:	ldr	x17, [x16, #2000]
    ca08:	add	x16, x16, #0x7d0
    ca0c:	br	x17

000000000000ca10 <mpfr_random_deviate_less@plt>:
    ca10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca14:	ldr	x17, [x16, #2008]
    ca18:	add	x16, x16, #0x7d8
    ca1c:	br	x17

000000000000ca20 <__gmpn_perfect_square_p@plt>:
    ca20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca24:	ldr	x17, [x16, #2016]
    ca28:	add	x16, x16, #0x7e0
    ca2c:	br	x17

000000000000ca30 <mpfr_ui_sub@plt>:
    ca30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca34:	ldr	x17, [x16, #2024]
    ca38:	add	x16, x16, #0x7e8
    ca3c:	br	x17

000000000000ca40 <mpfr_equal_p@plt>:
    ca40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca44:	ldr	x17, [x16, #2032]
    ca48:	add	x16, x16, #0x7f0
    ca4c:	br	x17

000000000000ca50 <mpfr_sub1@plt>:
    ca50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca54:	ldr	x17, [x16, #2040]
    ca58:	add	x16, x16, #0x7f8
    ca5c:	br	x17

000000000000ca60 <mpfr_init2@plt>:
    ca60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca64:	ldr	x17, [x16, #2048]
    ca68:	add	x16, x16, #0x800
    ca6c:	br	x17

000000000000ca70 <__gmpz_init2@plt>:
    ca70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca74:	ldr	x17, [x16, #2056]
    ca78:	add	x16, x16, #0x808
    ca7c:	br	x17

000000000000ca80 <__gmpn_scan1@plt>:
    ca80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca84:	ldr	x17, [x16, #2064]
    ca88:	add	x16, x16, #0x810
    ca8c:	br	x17

000000000000ca90 <mpfr_ubf_exp_less_p@plt>:
    ca90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ca94:	ldr	x17, [x16, #2072]
    ca98:	add	x16, x16, #0x818
    ca9c:	br	x17

000000000000caa0 <mpfr_get_z_2exp@plt>:
    caa0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    caa4:	ldr	x17, [x16, #2080]
    caa8:	add	x16, x16, #0x820
    caac:	br	x17

000000000000cab0 <strncpy@plt>:
    cab0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cab4:	ldr	x17, [x16, #2088]
    cab8:	add	x16, x16, #0x828
    cabc:	br	x17

000000000000cac0 <mpfr_set_1_2@plt>:
    cac0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cac4:	ldr	x17, [x16, #2096]
    cac8:	add	x16, x16, #0x830
    cacc:	br	x17

000000000000cad0 <__gmpq_div_2exp@plt>:
    cad0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cad4:	ldr	x17, [x16, #2104]
    cad8:	add	x16, x16, #0x838
    cadc:	br	x17

000000000000cae0 <mpfr_ubf_diff_exp@plt>:
    cae0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cae4:	ldr	x17, [x16, #2112]
    cae8:	add	x16, x16, #0x840
    caec:	br	x17

000000000000caf0 <__gmp_urandomb_ui@plt>:
    caf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    caf4:	ldr	x17, [x16, #2120]
    caf8:	add	x16, x16, #0x848
    cafc:	br	x17

000000000000cb00 <__gmpz_cmp_ui@plt>:
    cb00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb04:	ldr	x17, [x16, #2128]
    cb08:	add	x16, x16, #0x850
    cb0c:	br	x17

000000000000cb10 <mpfr_check_range@plt>:
    cb10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb14:	ldr	x17, [x16, #2136]
    cb18:	add	x16, x16, #0x858
    cb1c:	br	x17

000000000000cb20 <mpfr_assert_fail@plt>:
    cb20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb24:	ldr	x17, [x16, #2144]
    cb28:	add	x16, x16, #0x860
    cb2c:	br	x17

000000000000cb30 <__gmpz_init@plt>:
    cb30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb34:	ldr	x17, [x16, #2152]
    cb38:	add	x16, x16, #0x868
    cb3c:	br	x17

000000000000cb40 <__gmpz_sizeinbase@plt>:
    cb40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb44:	ldr	x17, [x16, #2160]
    cb48:	add	x16, x16, #0x870
    cb4c:	br	x17

000000000000cb50 <__gmpz_set_si@plt>:
    cb50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb54:	ldr	x17, [x16, #2168]
    cb58:	add	x16, x16, #0x878
    cb5c:	br	x17

000000000000cb60 <mpfr_ceil_mul@plt>:
    cb60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb64:	ldr	x17, [x16, #2176]
    cb68:	add	x16, x16, #0x880
    cb6c:	br	x17

000000000000cb70 <mpfr_number_p@plt>:
    cb70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb74:	ldr	x17, [x16, #2184]
    cb78:	add	x16, x16, #0x888
    cb7c:	br	x17

000000000000cb80 <mpfr_scale2@plt>:
    cb80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb84:	ldr	x17, [x16, #2192]
    cb88:	add	x16, x16, #0x890
    cb8c:	br	x17

000000000000cb90 <mpfr_add1sp@plt>:
    cb90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cb94:	ldr	x17, [x16, #2200]
    cb98:	add	x16, x16, #0x898
    cb9c:	br	x17

000000000000cba0 <__gmpz_powm_ui@plt>:
    cba0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cba4:	ldr	x17, [x16, #2208]
    cba8:	add	x16, x16, #0x8a0
    cbac:	br	x17

000000000000cbb0 <mpfr_get_d_2exp@plt>:
    cbb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cbb4:	ldr	x17, [x16, #2216]
    cbb8:	add	x16, x16, #0x8a8
    cbbc:	br	x17

000000000000cbc0 <mpfr_mpn_exp@plt>:
    cbc0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cbc4:	ldr	x17, [x16, #2224]
    cbc8:	add	x16, x16, #0x8b0
    cbcc:	br	x17

000000000000cbd0 <printf@plt>:
    cbd0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cbd4:	ldr	x17, [x16, #2232]
    cbd8:	add	x16, x16, #0x8b8
    cbdc:	br	x17

000000000000cbe0 <__errno_location@plt>:
    cbe0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cbe4:	ldr	x17, [x16, #2240]
    cbe8:	add	x16, x16, #0x8c0
    cbec:	br	x17

000000000000cbf0 <mpfr_jn@plt>:
    cbf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cbf4:	ldr	x17, [x16, #2248]
    cbf8:	add	x16, x16, #0x8c8
    cbfc:	br	x17

000000000000cc00 <mpfr_free_func@plt>:
    cc00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc04:	ldr	x17, [x16, #2256]
    cc08:	add	x16, x16, #0x8d0
    cc0c:	br	x17

000000000000cc10 <__gmpz_addmul_ui@plt>:
    cc10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc14:	ldr	x17, [x16, #2264]
    cc18:	add	x16, x16, #0x8d8
    cc1c:	br	x17

000000000000cc20 <mpfr_sin_cos@plt>:
    cc20:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc24:	ldr	x17, [x16, #2272]
    cc28:	add	x16, x16, #0x8e0
    cc2c:	br	x17

000000000000cc30 <mpfr_inits2@plt>:
    cc30:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc34:	ldr	x17, [x16, #2280]
    cc38:	add	x16, x16, #0x8e8
    cc3c:	br	x17

000000000000cc40 <mpfr_div_ui@plt>:
    cc40:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc44:	ldr	x17, [x16, #2288]
    cc48:	add	x16, x16, #0x8f0
    cc4c:	br	x17

000000000000cc50 <mpfr_fmodquo@plt>:
    cc50:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc54:	ldr	x17, [x16, #2296]
    cc58:	add	x16, x16, #0x8f8
    cc5c:	br	x17

000000000000cc60 <mpfr_div_z@plt>:
    cc60:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc64:	ldr	x17, [x16, #2304]
    cc68:	add	x16, x16, #0x900
    cc6c:	br	x17

000000000000cc70 <mpfr_exp2@plt>:
    cc70:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc74:	ldr	x17, [x16, #2312]
    cc78:	add	x16, x16, #0x908
    cc7c:	br	x17

000000000000cc80 <mpfr_odd_p@plt>:
    cc80:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc84:	ldr	x17, [x16, #2320]
    cc88:	add	x16, x16, #0x910
    cc8c:	br	x17

000000000000cc90 <__gmpn_divrem@plt>:
    cc90:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cc94:	ldr	x17, [x16, #2328]
    cc98:	add	x16, x16, #0x918
    cc9c:	br	x17

000000000000cca0 <__gmpn_sqrtrem@plt>:
    cca0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cca4:	ldr	x17, [x16, #2336]
    cca8:	add	x16, x16, #0x920
    ccac:	br	x17

000000000000ccb0 <__gmpn_addmul_1@plt>:
    ccb0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ccb4:	ldr	x17, [x16, #2344]
    ccb8:	add	x16, x16, #0x928
    ccbc:	br	x17

000000000000ccc0 <fprintf@plt>:
    ccc0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ccc4:	ldr	x17, [x16, #2352]
    ccc8:	add	x16, x16, #0x930
    cccc:	br	x17

000000000000ccd0 <mpfr_allocate_func@plt>:
    ccd0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ccd4:	ldr	x17, [x16, #2360]
    ccd8:	add	x16, x16, #0x938
    ccdc:	br	x17

000000000000cce0 <__gmpz_urandomb@plt>:
    cce0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cce4:	ldr	x17, [x16, #2368]
    cce8:	add	x16, x16, #0x940
    ccec:	br	x17

000000000000ccf0 <mpfr_remainder@plt>:
    ccf0:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    ccf4:	ldr	x17, [x16, #2376]
    ccf8:	add	x16, x16, #0x948
    ccfc:	br	x17

000000000000cd00 <mpfr_cbrt@plt>:
    cd00:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cd04:	ldr	x17, [x16, #2384]
    cd08:	add	x16, x16, #0x950
    cd0c:	br	x17

000000000000cd10 <__gmpn_mul_1@plt>:
    cd10:	adrp	x16, 77000 <mpfr_agm@@Base+0x68440>
    cd14:	ldr	x17, [x16, #2392]
    cd18:	add	x16, x16, #0x958
    cd1c:	br	x17

000000000000cd20 <__gmpfr_emin@plt>:
    cd20:	stp	x2, x3, [sp, #-16]!
    cd24:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
    cd28:	adrp	x3, 76000 <__gmpfr_l2b@@Base+0x2e0>
    cd2c:	ldr	x2, [x2, #4064]

000000000000cd30 <__gmpfr_emax@plt>:
    cd30:	add	x3, x3, #0xfe8
    cd34:	br	x2
    cd38:	nop
    cd3c:	nop

Disassembly of section .text:

000000000000cd40 <mpfr_get_emin@@Base-0xd4>:
    cd40:	adrp	x0, 76000 <__gmpfr_l2b@@Base+0x2e0>
    cd44:	ldr	x0, [x0, #4032]
    cd48:	cbz	x0, cd50 <__gmpfr_cache_const_log2@plt>
    cd4c:	b	c390 <__gmon_start__@plt>
    cd50:	ret
    cd54:	nop
    cd58:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cd5c:	add	x0, x0, #0xaa8
    cd60:	adrp	x1, 77000 <mpfr_agm@@Base+0x68440>
    cd64:	add	x1, x1, #0xaa8
    cd68:	cmp	x1, x0
    cd6c:	b.eq	cd84 <*ABS*+0x110@plt+0x4>  // b.none
    cd70:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
    cd74:	ldr	x1, [x1, #3952]
    cd78:	cbz	x1, cd84 <*ABS*+0x110@plt+0x4>
    cd7c:	mov	x16, x1
    cd80:	br	x16
    cd84:	ret
    cd88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cd8c:	add	x0, x0, #0xaa8
    cd90:	adrp	x1, 77000 <mpfr_agm@@Base+0x68440>
    cd94:	add	x1, x1, #0xaa8
    cd98:	sub	x1, x1, x0
    cd9c:	lsr	x2, x1, #63
    cda0:	add	x1, x2, x1, asr #3
    cda4:	cmp	xzr, x1, asr #1
    cda8:	asr	x1, x1, #1
    cdac:	b.eq	cdc4 <__gmpfr_default_rounding_mode@plt+0x4>  // b.none
    cdb0:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
    cdb4:	ldr	x2, [x2, #4056]
    cdb8:	cbz	x2, cdc4 <__gmpfr_default_rounding_mode@plt+0x4>
    cdbc:	mov	x16, x2
    cdc0:	br	x16
    cdc4:	ret
    cdc8:	stp	x29, x30, [sp, #-32]!
    cdcc:	mov	x29, sp
    cdd0:	str	x19, [sp, #16]
    cdd4:	adrp	x19, 77000 <mpfr_agm@@Base+0x68440>
    cdd8:	ldrb	w0, [x19, #2728]
    cddc:	cbnz	w0, ce04 <__gmpfr_cache_const_catalan@plt+0x4>
    cde0:	adrp	x0, 76000 <__gmpfr_l2b@@Base+0x2e0>
    cde4:	ldr	x0, [x0, #3968]
    cde8:	cbz	x0, cdf8 <__gmpfr_cache_const_euler@plt+0x8>
    cdec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cdf0:	ldr	x0, [x0, #2720]
    cdf4:	bl	bd50 <__cxa_finalize@plt>
    cdf8:	bl	cd58 <__gmpfr_cache_const_log2@plt+0x8>
    cdfc:	mov	w0, #0x1                   	// #1
    ce00:	strb	w0, [x19, #2728]
    ce04:	ldr	x19, [sp, #16]
    ce08:	ldp	x29, x30, [sp], #32
    ce0c:	ret
    ce10:	b	cd88 <*ABS*+0x110@plt+0x8>

000000000000ce14 <mpfr_get_emin@@Base>:
    ce14:	stp	x29, x30, [sp, #-16]!
    ce18:	mov	x29, sp
    ce1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ce20:	ldr	x1, [x0, #2576]
    ce24:	add	x0, x0, #0xa10
    ce28:	blr	x1
    ce2c:	mrs	x8, tpidr_el0
    ce30:	ldr	x0, [x8, x0]
    ce34:	ldp	x29, x30, [sp], #16
    ce38:	ret

000000000000ce3c <mpfr_set_emin@@Base>:
    ce3c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    ce40:	add	x9, x0, x9
    ce44:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    ce48:	cmp	x9, x10
    ce4c:	b.hi	ce84 <*ABS*+0x168@plt+0x34>  // b.pmore
    ce50:	stp	x29, x30, [sp, #-16]!
    ce54:	mov	x29, sp
    ce58:	mov	x8, x0
    ce5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ce60:	ldr	x1, [x0, #2576]
    ce64:	add	x0, x0, #0xa10
    ce68:	blr	x1
    ce6c:	mov	x9, x0
    ce70:	mrs	x10, tpidr_el0
    ce74:	mov	w0, wzr
    ce78:	str	x8, [x10, x9]
    ce7c:	ldp	x29, x30, [sp], #16
    ce80:	ret
    ce84:	mov	w0, #0x1                   	// #1
    ce88:	ret

000000000000ce8c <mpfr_get_emin_min@@Base>:
    ce8c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    ce90:	ret

000000000000ce94 <mpfr_get_emin_max@@Base>:
    ce94:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    ce98:	ret

000000000000ce9c <mpfr_get_emax@@Base>:
    ce9c:	stp	x29, x30, [sp, #-16]!
    cea0:	mov	x29, sp
    cea4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cea8:	ldr	x1, [x0, #2608]
    ceac:	add	x0, x0, #0xa30
    ceb0:	blr	x1
    ceb4:	mrs	x8, tpidr_el0
    ceb8:	ldr	x0, [x8, x0]
    cebc:	ldp	x29, x30, [sp], #16
    cec0:	ret

000000000000cec4 <mpfr_set_emax@@Base>:
    cec4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    cec8:	add	x9, x0, x9
    cecc:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    ced0:	cmp	x9, x10
    ced4:	b.hi	cf0c <mpfr_set_emax@@Base+0x48>  // b.pmore
    ced8:	stp	x29, x30, [sp, #-16]!
    cedc:	mov	x29, sp
    cee0:	mov	x8, x0
    cee4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cee8:	ldr	x1, [x0, #2608]
    ceec:	add	x0, x0, #0xa30
    cef0:	blr	x1
    cef4:	mov	x9, x0
    cef8:	mrs	x10, tpidr_el0
    cefc:	mov	w0, wzr
    cf00:	str	x8, [x10, x9]
    cf04:	ldp	x29, x30, [sp], #16
    cf08:	ret
    cf0c:	mov	w0, #0x1                   	// #1
    cf10:	ret

000000000000cf14 <mpfr_get_emax_min@@Base>:
    cf14:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cf18:	ret

000000000000cf1c <mpfr_get_emax_max@@Base>:
    cf1c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cf20:	ret

000000000000cf24 <mpfr_flags_clear@@Base>:
    cf24:	stp	x29, x30, [sp, #-16]!
    cf28:	mov	x29, sp
    cf2c:	eor	w8, w0, #0x3f
    cf30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cf34:	ldr	x1, [x0, #2640]
    cf38:	add	x0, x0, #0xa50
    cf3c:	blr	x1
    cf40:	mrs	x9, tpidr_el0
    cf44:	ldr	w10, [x9, x0]
    cf48:	and	w8, w10, w8
    cf4c:	str	w8, [x9, x0]
    cf50:	ldp	x29, x30, [sp], #16
    cf54:	ret

000000000000cf58 <mpfr_flags_set@@Base>:
    cf58:	stp	x29, x30, [sp, #-16]!
    cf5c:	mov	x29, sp
    cf60:	mov	w8, w0
    cf64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cf68:	ldr	x1, [x0, #2640]
    cf6c:	add	x0, x0, #0xa50
    cf70:	blr	x1
    cf74:	mrs	x9, tpidr_el0
    cf78:	ldr	w10, [x9, x0]
    cf7c:	orr	w8, w10, w8
    cf80:	str	w8, [x9, x0]
    cf84:	ldp	x29, x30, [sp], #16
    cf88:	ret

000000000000cf8c <mpfr_flags_test@@Base>:
    cf8c:	stp	x29, x30, [sp, #-16]!
    cf90:	mov	x29, sp
    cf94:	mov	w8, w0
    cf98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cf9c:	ldr	x1, [x0, #2640]
    cfa0:	add	x0, x0, #0xa50
    cfa4:	blr	x1
    cfa8:	mrs	x9, tpidr_el0
    cfac:	ldr	w9, [x9, x0]
    cfb0:	and	w0, w9, w8
    cfb4:	ldp	x29, x30, [sp], #16
    cfb8:	ret

000000000000cfbc <mpfr_flags_save@@Base>:
    cfbc:	stp	x29, x30, [sp, #-16]!
    cfc0:	mov	x29, sp
    cfc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cfc8:	ldr	x1, [x0, #2640]
    cfcc:	add	x0, x0, #0xa50
    cfd0:	blr	x1
    cfd4:	mrs	x8, tpidr_el0
    cfd8:	ldr	w0, [x8, x0]
    cfdc:	ldp	x29, x30, [sp], #16
    cfe0:	ret

000000000000cfe4 <mpfr_flags_restore@@Base>:
    cfe4:	stp	x29, x30, [sp, #-16]!
    cfe8:	mov	x29, sp
    cfec:	mov	w8, w1
    cff0:	mov	w9, w0
    cff4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    cff8:	ldr	x1, [x0, #2640]
    cffc:	add	x0, x0, #0xa50
    d000:	blr	x1
    d004:	mrs	x10, tpidr_el0
    d008:	ldr	w11, [x10, x0]
    d00c:	eor	w12, w8, #0x3f
    d010:	and	w8, w8, w9
    d014:	and	w11, w11, w12
    d018:	orr	w8, w11, w8
    d01c:	str	w8, [x10, x0]
    d020:	ldp	x29, x30, [sp], #16
    d024:	ret

000000000000d028 <mpfr_clear_flags@@Base>:
    d028:	stp	x29, x30, [sp, #-16]!
    d02c:	mov	x29, sp
    d030:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d034:	ldr	x1, [x0, #2640]
    d038:	add	x0, x0, #0xa50
    d03c:	blr	x1
    d040:	mrs	x8, tpidr_el0
    d044:	str	wzr, [x8, x0]
    d048:	ldp	x29, x30, [sp], #16
    d04c:	ret

000000000000d050 <mpfr_clear_underflow@@Base>:
    d050:	stp	x29, x30, [sp, #-16]!
    d054:	mov	x29, sp
    d058:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d05c:	ldr	x1, [x0, #2640]
    d060:	add	x0, x0, #0xa50
    d064:	blr	x1
    d068:	mrs	x8, tpidr_el0
    d06c:	ldr	w9, [x8, x0]
    d070:	and	w9, w9, #0x3e
    d074:	str	w9, [x8, x0]
    d078:	ldp	x29, x30, [sp], #16
    d07c:	ret

000000000000d080 <mpfr_clear_overflow@@Base>:
    d080:	stp	x29, x30, [sp, #-16]!
    d084:	mov	x29, sp
    d088:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d08c:	ldr	x1, [x0, #2640]
    d090:	add	x0, x0, #0xa50
    d094:	blr	x1
    d098:	mrs	x8, tpidr_el0
    d09c:	ldr	w9, [x8, x0]
    d0a0:	mov	w10, #0x3d                  	// #61
    d0a4:	and	w9, w9, w10
    d0a8:	str	w9, [x8, x0]
    d0ac:	ldp	x29, x30, [sp], #16
    d0b0:	ret

000000000000d0b4 <mpfr_clear_divby0@@Base>:
    d0b4:	stp	x29, x30, [sp, #-16]!
    d0b8:	mov	x29, sp
    d0bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d0c0:	ldr	x1, [x0, #2640]
    d0c4:	add	x0, x0, #0xa50
    d0c8:	blr	x1
    d0cc:	mrs	x8, tpidr_el0
    d0d0:	ldr	w9, [x8, x0]
    d0d4:	and	w9, w9, #0x1f
    d0d8:	str	w9, [x8, x0]
    d0dc:	ldp	x29, x30, [sp], #16
    d0e0:	ret

000000000000d0e4 <mpfr_clear_nanflag@@Base>:
    d0e4:	stp	x29, x30, [sp, #-16]!
    d0e8:	mov	x29, sp
    d0ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d0f0:	ldr	x1, [x0, #2640]
    d0f4:	add	x0, x0, #0xa50
    d0f8:	blr	x1
    d0fc:	mrs	x8, tpidr_el0
    d100:	ldr	w9, [x8, x0]
    d104:	mov	w10, #0x3b                  	// #59
    d108:	and	w9, w9, w10
    d10c:	str	w9, [x8, x0]
    d110:	ldp	x29, x30, [sp], #16
    d114:	ret

000000000000d118 <mpfr_clear_inexflag@@Base>:
    d118:	stp	x29, x30, [sp, #-16]!
    d11c:	mov	x29, sp
    d120:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d124:	ldr	x1, [x0, #2640]
    d128:	add	x0, x0, #0xa50
    d12c:	blr	x1
    d130:	mrs	x8, tpidr_el0
    d134:	ldr	w9, [x8, x0]
    d138:	mov	w10, #0x37                  	// #55
    d13c:	and	w9, w9, w10
    d140:	str	w9, [x8, x0]
    d144:	ldp	x29, x30, [sp], #16
    d148:	ret

000000000000d14c <mpfr_clear_erangeflag@@Base>:
    d14c:	stp	x29, x30, [sp, #-16]!
    d150:	mov	x29, sp
    d154:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d158:	ldr	x1, [x0, #2640]
    d15c:	add	x0, x0, #0xa50
    d160:	blr	x1
    d164:	mrs	x8, tpidr_el0
    d168:	ldr	w9, [x8, x0]
    d16c:	mov	w10, #0x2f                  	// #47
    d170:	and	w9, w9, w10
    d174:	str	w9, [x8, x0]
    d178:	ldp	x29, x30, [sp], #16
    d17c:	ret

000000000000d180 <mpfr_set_underflow@@Base>:
    d180:	stp	x29, x30, [sp, #-16]!
    d184:	mov	x29, sp
    d188:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d18c:	ldr	x1, [x0, #2640]
    d190:	add	x0, x0, #0xa50
    d194:	blr	x1
    d198:	mrs	x8, tpidr_el0
    d19c:	ldr	w9, [x8, x0]
    d1a0:	orr	w9, w9, #0x1
    d1a4:	str	w9, [x8, x0]
    d1a8:	ldp	x29, x30, [sp], #16
    d1ac:	ret

000000000000d1b0 <mpfr_set_overflow@@Base>:
    d1b0:	stp	x29, x30, [sp, #-16]!
    d1b4:	mov	x29, sp
    d1b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d1bc:	ldr	x1, [x0, #2640]
    d1c0:	add	x0, x0, #0xa50
    d1c4:	blr	x1
    d1c8:	mrs	x8, tpidr_el0
    d1cc:	ldr	w9, [x8, x0]
    d1d0:	orr	w9, w9, #0x2
    d1d4:	str	w9, [x8, x0]
    d1d8:	ldp	x29, x30, [sp], #16
    d1dc:	ret

000000000000d1e0 <mpfr_set_divby0@@Base>:
    d1e0:	stp	x29, x30, [sp, #-16]!
    d1e4:	mov	x29, sp
    d1e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d1ec:	ldr	x1, [x0, #2640]
    d1f0:	add	x0, x0, #0xa50
    d1f4:	blr	x1
    d1f8:	mrs	x8, tpidr_el0
    d1fc:	ldr	w9, [x8, x0]
    d200:	orr	w9, w9, #0x20
    d204:	str	w9, [x8, x0]
    d208:	ldp	x29, x30, [sp], #16
    d20c:	ret

000000000000d210 <mpfr_set_nanflag@@Base>:
    d210:	stp	x29, x30, [sp, #-16]!
    d214:	mov	x29, sp
    d218:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d21c:	ldr	x1, [x0, #2640]
    d220:	add	x0, x0, #0xa50
    d224:	blr	x1
    d228:	mrs	x8, tpidr_el0
    d22c:	ldr	w9, [x8, x0]
    d230:	orr	w9, w9, #0x4
    d234:	str	w9, [x8, x0]
    d238:	ldp	x29, x30, [sp], #16
    d23c:	ret

000000000000d240 <mpfr_set_inexflag@@Base>:
    d240:	stp	x29, x30, [sp, #-16]!
    d244:	mov	x29, sp
    d248:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d24c:	ldr	x1, [x0, #2640]
    d250:	add	x0, x0, #0xa50
    d254:	blr	x1
    d258:	mrs	x8, tpidr_el0
    d25c:	ldr	w9, [x8, x0]
    d260:	orr	w9, w9, #0x8
    d264:	str	w9, [x8, x0]
    d268:	ldp	x29, x30, [sp], #16
    d26c:	ret

000000000000d270 <mpfr_set_erangeflag@@Base>:
    d270:	stp	x29, x30, [sp, #-16]!
    d274:	mov	x29, sp
    d278:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d27c:	ldr	x1, [x0, #2640]
    d280:	add	x0, x0, #0xa50
    d284:	blr	x1
    d288:	mrs	x8, tpidr_el0
    d28c:	ldr	w9, [x8, x0]
    d290:	orr	w9, w9, #0x10
    d294:	str	w9, [x8, x0]
    d298:	ldp	x29, x30, [sp], #16
    d29c:	ret

000000000000d2a0 <mpfr_check_range@@Base>:
    d2a0:	stp	x29, x30, [sp, #-48]!
    d2a4:	stp	x20, x19, [sp, #32]
    d2a8:	ldr	x9, [x0, #16]
    d2ac:	mov	x8, #0x4                   	// #4
    d2b0:	movk	x8, #0x8000, lsl #48
    d2b4:	str	x21, [sp, #16]
    d2b8:	cmp	x9, x8
    d2bc:	mov	w8, w1
    d2c0:	mov	x29, sp
    d2c4:	b.lt	d340 <mpfr_check_range@@Base+0xa0>  // b.tstop
    d2c8:	mov	x19, x0
    d2cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d2d0:	ldr	x1, [x0, #2576]
    d2d4:	add	x0, x0, #0xa10
    d2d8:	blr	x1
    d2dc:	mrs	x20, tpidr_el0
    d2e0:	ldr	x10, [x20, x0]
    d2e4:	cmp	x9, x10
    d2e8:	b.lt	d374 <mpfr_check_range@@Base+0xd4>  // b.tstop
    d2ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d2f0:	ldr	x1, [x0, #2608]
    d2f4:	add	x0, x0, #0xa30
    d2f8:	blr	x1
    d2fc:	ldr	x1, [x20, x0]
    d300:	cmp	x9, x1
    d304:	b.gt	d38c <mpfr_check_range@@Base+0xec>
    d308:	cbz	w8, d32c <mpfr_check_range@@Base+0x8c>
    d30c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d310:	ldr	x1, [x0, #2640]
    d314:	add	x0, x0, #0xa50
    d318:	blr	x1
    d31c:	mrs	x9, tpidr_el0
    d320:	ldr	w10, [x9, x0]
    d324:	orr	w10, w10, #0x8
    d328:	str	w10, [x9, x0]
    d32c:	ldp	x20, x19, [sp, #32]
    d330:	ldr	x21, [sp, #16]
    d334:	mov	w0, w8
    d338:	ldp	x29, x30, [sp], #48
    d33c:	ret
    d340:	cbz	w8, d308 <mpfr_check_range@@Base+0x68>
    d344:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    d348:	cmp	x9, x10
    d34c:	b.ne	d308 <mpfr_check_range@@Base+0x68>  // b.any
    d350:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d354:	ldr	x1, [x0, #2640]
    d358:	add	x0, x0, #0xa50
    d35c:	blr	x1
    d360:	mrs	x9, tpidr_el0
    d364:	ldr	w10, [x9, x0]
    d368:	orr	w10, w10, #0x2
    d36c:	str	w10, [x9, x0]
    d370:	b	d30c <mpfr_check_range@@Base+0x6c>
    d374:	cbz	w2, d3b4 <mpfr_check_range@@Base+0x114>
    d378:	mov	x8, x19
    d37c:	ldr	w21, [x8, #8]!
    d380:	cmp	w2, #0x1
    d384:	b.ne	d444 <mpfr_check_range@@Base+0x1a4>  // b.any
    d388:	b	d450 <mpfr_check_range@@Base+0x1b0>
    d38c:	ldr	w21, [x19, #8]
    d390:	cmp	w2, #0x1
    d394:	b.eq	d3a4 <mpfr_check_range@@Base+0x104>  // b.none
    d398:	add	w8, w2, w21, lsr #31
    d39c:	cmp	w8, #0x3
    d3a0:	b.ne	d3d0 <mpfr_check_range@@Base+0x130>  // b.any
    d3a4:	mov	x0, x19
    d3a8:	bl	c110 <mpfr_setmax@plt>
    d3ac:	mov	w8, #0xffffffff            	// #-1
    d3b0:	b	d3dc <mpfr_check_range@@Base+0x13c>
    d3b4:	stp	w8, w2, [x29, #24]
    d3b8:	add	x8, x9, #0x1
    d3bc:	cmp	x8, x10
    d3c0:	b.ge	d40c <mpfr_check_range@@Base+0x16c>  // b.tcont
    d3c4:	ldr	w21, [x19, #8]
    d3c8:	add	x8, x19, #0x8
    d3cc:	b	d450 <mpfr_check_range@@Base+0x1b0>
    d3d0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    d3d4:	str	x8, [x19, #16]
    d3d8:	mov	w8, #0x1                   	// #1
    d3dc:	str	w21, [x19, #8]
    d3e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d3e4:	ldr	x1, [x0, #2640]
    d3e8:	add	x0, x0, #0xa50
    d3ec:	blr	x1
    d3f0:	ldr	w9, [x20, x0]
    d3f4:	mov	w10, #0xa                   	// #10
    d3f8:	cmp	w21, #0x0
    d3fc:	cneg	w8, w8, le
    d400:	orr	w9, w9, w10
    d404:	str	w9, [x20, x0]
    d408:	b	d32c <mpfr_check_range@@Base+0x8c>
    d40c:	mov	x0, x19
    d410:	bl	bf50 <mpfr_powerof2_raw@plt>
    d414:	ldr	w21, [x19, #8]
    d418:	cbz	w0, d43c <mpfr_check_range@@Base+0x19c>
    d41c:	tbnz	w21, #31, d430 <mpfr_check_range@@Base+0x190>
    d420:	ldr	w8, [x29, #24]
    d424:	tbnz	w8, #31, d43c <mpfr_check_range@@Base+0x19c>
    d428:	add	x8, x19, #0x8
    d42c:	b	d450 <mpfr_check_range@@Base+0x1b0>
    d430:	ldr	w8, [x29, #24]
    d434:	cmp	w8, #0x1
    d438:	b.lt	d428 <mpfr_check_range@@Base+0x188>  // b.tstop
    d43c:	ldr	w2, [x29, #28]
    d440:	add	x8, x19, #0x8
    d444:	add	w9, w2, w21, lsr #31
    d448:	cmp	w9, #0x3
    d44c:	b.ne	d460 <mpfr_check_range@@Base+0x1c0>  // b.any
    d450:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    d454:	str	x9, [x19, #16]
    d458:	mov	w9, #0xffffffff            	// #-1
    d45c:	b	d488 <mpfr_check_range@@Base+0x1e8>
    d460:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d464:	ldr	x1, [x0, #2576]
    d468:	add	x0, x0, #0xa10
    d46c:	blr	x1
    d470:	ldr	x1, [x20, x0]
    d474:	mov	x0, x19
    d478:	mov	x19, x8
    d47c:	bl	c2b0 <mpfr_setmin@plt>
    d480:	mov	x8, x19
    d484:	mov	w9, #0x1                   	// #1
    d488:	str	w21, [x8]
    d48c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d490:	ldr	x1, [x0, #2640]
    d494:	add	x0, x0, #0xa50
    d498:	blr	x1
    d49c:	ldr	w8, [x20, x0]
    d4a0:	mov	w10, #0x9                   	// #9
    d4a4:	cmp	w21, #0x0
    d4a8:	orr	w8, w8, w10
    d4ac:	str	w8, [x20, x0]
    d4b0:	cneg	w8, w9, le
    d4b4:	b	d32c <mpfr_check_range@@Base+0x8c>

000000000000d4b8 <mpfr_underflow@@Base>:
    d4b8:	stp	x29, x30, [sp, #-48]!
    d4bc:	str	x21, [sp, #16]
    d4c0:	stp	x20, x19, [sp, #32]
    d4c4:	mov	w19, w2
    d4c8:	mov	x20, x0
    d4cc:	cmp	w1, #0x1
    d4d0:	mrs	x21, tpidr_el0
    d4d4:	mov	x29, sp
    d4d8:	b.eq	d4e8 <mpfr_underflow@@Base+0x30>  // b.none
    d4dc:	add	w8, w1, w19, lsr #31
    d4e0:	cmp	w8, #0x3
    d4e4:	b.ne	d4f8 <mpfr_underflow@@Base+0x40>  // b.any
    d4e8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    d4ec:	str	x8, [x20, #16]
    d4f0:	mov	w8, #0xffffffff            	// #-1
    d4f4:	b	d518 <mpfr_underflow@@Base+0x60>
    d4f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d4fc:	ldr	x1, [x0, #2576]
    d500:	add	x0, x0, #0xa10
    d504:	blr	x1
    d508:	ldr	x1, [x21, x0]
    d50c:	mov	x0, x20
    d510:	bl	c2b0 <mpfr_setmin@plt>
    d514:	mov	w8, #0x1                   	// #1
    d518:	str	w19, [x20, #8]
    d51c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d520:	ldr	x1, [x0, #2640]
    d524:	add	x0, x0, #0xa50
    d528:	blr	x1
    d52c:	ldr	w9, [x21, x0]
    d530:	mov	w10, #0x9                   	// #9
    d534:	cmp	w19, #0x0
    d538:	ldp	x20, x19, [sp, #32]
    d53c:	orr	w9, w9, w10
    d540:	str	w9, [x21, x0]
    d544:	ldr	x21, [sp, #16]
    d548:	cneg	w8, w8, le
    d54c:	mov	w0, w8
    d550:	ldp	x29, x30, [sp], #48
    d554:	ret

000000000000d558 <mpfr_overflow@@Base>:
    d558:	stp	x29, x30, [sp, #-48]!
    d55c:	str	x21, [sp, #16]
    d560:	stp	x20, x19, [sp, #32]
    d564:	mov	w19, w2
    d568:	mov	x20, x0
    d56c:	cmp	w1, #0x1
    d570:	mrs	x21, tpidr_el0
    d574:	mov	x29, sp
    d578:	b.eq	d588 <mpfr_overflow@@Base+0x30>  // b.none
    d57c:	add	w8, w1, w19, lsr #31
    d580:	cmp	w8, #0x3
    d584:	b.ne	d5ac <mpfr_overflow@@Base+0x54>  // b.any
    d588:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d58c:	ldr	x1, [x0, #2608]
    d590:	add	x0, x0, #0xa30
    d594:	blr	x1
    d598:	ldr	x1, [x21, x0]
    d59c:	mov	x0, x20
    d5a0:	bl	c110 <mpfr_setmax@plt>
    d5a4:	mov	w8, #0xffffffff            	// #-1
    d5a8:	b	d5b8 <mpfr_overflow@@Base+0x60>
    d5ac:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    d5b0:	str	x8, [x20, #16]
    d5b4:	mov	w8, #0x1                   	// #1
    d5b8:	str	w19, [x20, #8]
    d5bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d5c0:	ldr	x1, [x0, #2640]
    d5c4:	add	x0, x0, #0xa50
    d5c8:	blr	x1
    d5cc:	ldr	w9, [x21, x0]
    d5d0:	mov	w10, #0xa                   	// #10
    d5d4:	cmp	w19, #0x0
    d5d8:	ldp	x20, x19, [sp, #32]
    d5dc:	orr	w9, w9, w10
    d5e0:	str	w9, [x21, x0]
    d5e4:	ldr	x21, [sp, #16]
    d5e8:	cneg	w8, w8, le
    d5ec:	mov	w0, w8
    d5f0:	ldp	x29, x30, [sp], #48
    d5f4:	ret

000000000000d5f8 <mpfr_underflow_p@@Base>:
    d5f8:	stp	x29, x30, [sp, #-16]!
    d5fc:	mov	x29, sp
    d600:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d604:	ldr	x1, [x0, #2640]
    d608:	add	x0, x0, #0xa50
    d60c:	blr	x1
    d610:	mrs	x8, tpidr_el0
    d614:	ldr	w8, [x8, x0]
    d618:	and	w0, w8, #0x1
    d61c:	ldp	x29, x30, [sp], #16
    d620:	ret

000000000000d624 <mpfr_overflow_p@@Base>:
    d624:	stp	x29, x30, [sp, #-16]!
    d628:	mov	x29, sp
    d62c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d630:	ldr	x1, [x0, #2640]
    d634:	add	x0, x0, #0xa50
    d638:	blr	x1
    d63c:	mrs	x8, tpidr_el0
    d640:	ldr	w8, [x8, x0]
    d644:	and	w0, w8, #0x2
    d648:	ldp	x29, x30, [sp], #16
    d64c:	ret

000000000000d650 <mpfr_divby0_p@@Base>:
    d650:	stp	x29, x30, [sp, #-16]!
    d654:	mov	x29, sp
    d658:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d65c:	ldr	x1, [x0, #2640]
    d660:	add	x0, x0, #0xa50
    d664:	blr	x1
    d668:	mrs	x8, tpidr_el0
    d66c:	ldr	w8, [x8, x0]
    d670:	and	w0, w8, #0x20
    d674:	ldp	x29, x30, [sp], #16
    d678:	ret

000000000000d67c <mpfr_nanflag_p@@Base>:
    d67c:	stp	x29, x30, [sp, #-16]!
    d680:	mov	x29, sp
    d684:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d688:	ldr	x1, [x0, #2640]
    d68c:	add	x0, x0, #0xa50
    d690:	blr	x1
    d694:	mrs	x8, tpidr_el0
    d698:	ldr	w8, [x8, x0]
    d69c:	and	w0, w8, #0x4
    d6a0:	ldp	x29, x30, [sp], #16
    d6a4:	ret

000000000000d6a8 <mpfr_inexflag_p@@Base>:
    d6a8:	stp	x29, x30, [sp, #-16]!
    d6ac:	mov	x29, sp
    d6b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d6b4:	ldr	x1, [x0, #2640]
    d6b8:	add	x0, x0, #0xa50
    d6bc:	blr	x1
    d6c0:	mrs	x8, tpidr_el0
    d6c4:	ldr	w8, [x8, x0]
    d6c8:	and	w0, w8, #0x8
    d6cc:	ldp	x29, x30, [sp], #16
    d6d0:	ret

000000000000d6d4 <mpfr_erangeflag_p@@Base>:
    d6d4:	stp	x29, x30, [sp, #-16]!
    d6d8:	mov	x29, sp
    d6dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d6e0:	ldr	x1, [x0, #2640]
    d6e4:	add	x0, x0, #0xa50
    d6e8:	blr	x1
    d6ec:	mrs	x8, tpidr_el0
    d6f0:	ldr	w8, [x8, x0]
    d6f4:	and	w0, w8, #0x10
    d6f8:	ldp	x29, x30, [sp], #16
    d6fc:	ret

000000000000d700 <mpfr_extract@@Base>:
    d700:	stp	x29, x30, [sp, #-64]!
    d704:	stp	x24, x23, [sp, #16]
    d708:	stp	x22, x21, [sp, #32]
    d70c:	stp	x20, x19, [sp, #48]
    d710:	ldr	x9, [x1]
    d714:	mov	w8, #0x1                   	// #1
    d718:	lsl	x23, x8, x2
    d71c:	cmp	w2, #0x0
    d720:	lsr	x8, x23, #1
    d724:	csinc	x21, x8, xzr, ne  // ne = any
    d728:	sub	x8, x9, #0x1
    d72c:	add	x9, x9, #0x3e
    d730:	cmp	x8, #0x0
    d734:	csel	x8, x9, x8, lt  // lt = tstop
    d738:	asr	x8, x8, #6
    d73c:	mov	x20, x1
    d740:	mov	x19, x0
    d744:	lsr	x9, x21, #31
    d748:	add	x22, x8, #0x1
    d74c:	mov	x29, sp
    d750:	cbnz	x9, d7f8 <mpfr_extract@@Base+0xf8>
    d754:	lsl	x1, x21, #6
    d758:	mov	x0, x19
    d75c:	bl	c430 <__gmpz_realloc2@plt>
    d760:	ldr	x0, [x19, #8]
    d764:	subs	x24, x23, x22
    d768:	b.ls	d79c <mpfr_extract@@Base+0x9c>  // b.plast
    d76c:	lsl	x2, x21, #3
    d770:	mov	w1, wzr
    d774:	bl	c150 <memset@plt>
    d778:	subs	x8, x22, x21
    d77c:	b.cc	d7b8 <mpfr_extract@@Base+0xb8>  // b.lo, b.ul, b.last
    d780:	ldr	x9, [x19, #8]
    d784:	ldr	x1, [x20, #24]
    d788:	add	x0, x9, x24, lsl #3
    d78c:	cmp	x0, x1
    d790:	b.eq	d7b8 <mpfr_extract@@Base+0xb8>  // b.none
    d794:	lsl	x2, x8, #3
    d798:	b	d7b4 <mpfr_extract@@Base+0xb4>
    d79c:	ldr	x8, [x20, #24]
    d7a0:	add	x8, x8, x22, lsl #3
    d7a4:	sub	x1, x8, x23, lsl #3
    d7a8:	cmp	x0, x1
    d7ac:	b.eq	d7b8 <mpfr_extract@@Base+0xb8>  // b.none
    d7b0:	lsl	x2, x21, #3
    d7b4:	bl	ba70 <memcpy@plt>
    d7b8:	mov	x8, x21
    d7bc:	cbz	x21, d7d4 <mpfr_extract@@Base+0xd4>
    d7c0:	ldr	x9, [x19, #8]
    d7c4:	sub	x21, x8, #0x1
    d7c8:	add	x9, x9, x8, lsl #3
    d7cc:	ldur	x9, [x9, #-8]
    d7d0:	cbz	x9, d7b8 <mpfr_extract@@Base+0xb8>
    d7d4:	ldr	w9, [x20, #8]
    d7d8:	cmp	w9, #0x0
    d7dc:	cneg	w8, w8, lt  // lt = tstop
    d7e0:	str	w8, [x19, #4]
    d7e4:	ldp	x20, x19, [sp, #48]
    d7e8:	ldp	x22, x21, [sp, #32]
    d7ec:	ldp	x24, x23, [sp, #16]
    d7f0:	ldp	x29, x30, [sp], #64
    d7f4:	ret
    d7f8:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d7fc:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d800:	add	x0, x0, #0xb80
    d804:	add	x2, x2, #0xb8a
    d808:	mov	w1, #0x28                  	// #40
    d80c:	bl	cb20 <mpfr_assert_fail@plt>
    d810:	b	d754 <mpfr_extract@@Base+0x54>

000000000000d814 <__gmpfr_ceil_exp2@@Base>:
    d814:	str	d8, [sp, #-32]!
    d818:	mov	x8, #0x4090000000000000    	// #4652218415073722368
    d81c:	mov	v8.16b, v0.16b
    d820:	fmov	d0, x8
    d824:	fcmp	d8, d0
    d828:	stp	x29, x30, [sp, #16]
    d82c:	mov	x29, sp
    d830:	b.hi	d870 <__gmpfr_ceil_exp2@@Base+0x5c>  // b.pmore
    d834:	fcvtzs	x8, d8
    d838:	scvtf	d0, x8
    d83c:	fcmp	d0, d8
    d840:	cset	w10, ne  // ne = any
    d844:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
    d848:	add	x8, x10, x8
    d84c:	add	x9, x9, x8, lsl #52
    d850:	ldp	x29, x30, [sp, #16]
    d854:	cmn	x8, #0x3fd
    d858:	and	x8, x9, #0x7ff0000000000000
    d85c:	mov	x9, #0x10000000000000      	// #4503599627370496
    d860:	csel	x8, x9, x8, lt  // lt = tstop
    d864:	fmov	d0, x8
    d868:	ldr	d8, [sp], #32
    d86c:	ret
    d870:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d874:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d878:	add	x0, x0, #0xbae
    d87c:	add	x2, x2, #0xbbb
    d880:	mov	w1, #0x26                  	// #38
    d884:	bl	cb20 <mpfr_assert_fail@plt>
    d888:	b	d834 <__gmpfr_ceil_exp2@@Base+0x20>

000000000000d88c <__gmpfr_ceil_log2@@Base>:
    d88c:	stp	x29, x30, [sp, #-32]!
    d890:	stp	x20, x19, [sp, #16]
    d894:	fmov	x20, d0
    d898:	ubfx	x19, x20, #52, #11
    d89c:	cmp	x19, #0x7fe
    d8a0:	mov	x29, sp
    d8a4:	b.cs	d8d8 <__gmpfr_ceil_log2@@Base+0x4c>  // b.hs, b.nlast
    d8a8:	and	x8, x20, #0x800fffffffffffff
    d8ac:	orr	x8, x8, #0x3ff0000000000000
    d8b0:	fmov	d0, #1.000000000000000000e+00
    d8b4:	fmov	d1, x8
    d8b8:	mov	x9, #0xfffffffffffffc01    	// #-1023
    d8bc:	fcmp	d1, d0
    d8c0:	mov	x8, #0xfffffffffffffc02    	// #-1022
    d8c4:	csel	x8, x8, x9, ne  // ne = any
    d8c8:	add	x0, x8, x19
    d8cc:	ldp	x20, x19, [sp, #16]
    d8d0:	ldp	x29, x30, [sp], #32
    d8d4:	ret
    d8d8:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d8dc:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d8e0:	add	x0, x0, #0xbc7
    d8e4:	add	x2, x2, #0xbd4
    d8e8:	mov	w1, #0x28                  	// #40
    d8ec:	bl	cb20 <mpfr_assert_fail@plt>
    d8f0:	b	d8a8 <__gmpfr_ceil_log2@@Base+0x1c>

000000000000d8f4 <__gmpfr_floor_log2@@Base>:
    d8f4:	stp	x29, x30, [sp, #-32]!
    d8f8:	fmov	x8, d0
    d8fc:	ubfx	x8, x8, #52, #11
    d900:	str	x19, [sp, #16]
    d904:	cmp	x8, #0x7fe
    d908:	sub	x19, x8, #0x3ff
    d90c:	mov	x29, sp
    d910:	b.cs	d924 <__gmpfr_floor_log2@@Base+0x30>  // b.hs, b.nlast
    d914:	mov	x0, x19
    d918:	ldr	x19, [sp, #16]
    d91c:	ldp	x29, x30, [sp], #32
    d920:	ret
    d924:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d928:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    d92c:	add	x0, x0, #0xbdf
    d930:	add	x2, x2, #0xbd4
    d934:	mov	w1, #0x25                  	// #37
    d938:	bl	cb20 <mpfr_assert_fail@plt>
    d93c:	mov	x0, x19
    d940:	ldr	x19, [sp, #16]
    d944:	ldp	x29, x30, [sp], #32
    d948:	ret

000000000000d94c <mpfr_add@@Base>:
    d94c:	sub	sp, sp, #0x30
    d950:	stp	x29, x30, [sp, #32]
    d954:	ldr	x9, [x1, #16]
    d958:	mov	x11, #0x2                   	// #2
    d95c:	movk	x11, #0x8000, lsl #48
    d960:	add	x12, x11, #0x3
    d964:	mov	x8, x1
    d968:	cmp	x9, x12
    d96c:	add	x29, sp, #0x20
    d970:	b.lt	d9d8 <mpfr_add@@Base+0x8c>  // b.tstop
    d974:	ldr	x10, [x2, #16]
    d978:	cmp	x10, x12
    d97c:	b.lt	d9e4 <mpfr_add@@Base+0x98>  // b.tstop
    d980:	ldr	w13, [x8, #8]
    d984:	ldr	w14, [x2, #8]
    d988:	ldr	x11, [x0]
    d98c:	ldr	x12, [x8]
    d990:	cmp	w13, w14
    d994:	b.ne	da20 <mpfr_add@@Base+0xd4>  // b.any
    d998:	cmp	x11, x12
    d99c:	b.ne	d9bc <mpfr_add@@Base+0x70>  // b.any
    d9a0:	ldr	x12, [x2]
    d9a4:	cmp	x11, x12
    d9a8:	b.ne	d9bc <mpfr_add@@Base+0x70>  // b.any
    d9ac:	ldp	x29, x30, [sp, #32]
    d9b0:	mov	x1, x8
    d9b4:	add	sp, sp, #0x30
    d9b8:	b	cb90 <mpfr_add1sp@plt>
    d9bc:	cmp	x9, x10
    d9c0:	b.ge	da44 <mpfr_add@@Base+0xf8>  // b.tcont
    d9c4:	mov	x1, x2
    d9c8:	mov	x2, x8
    d9cc:	ldp	x29, x30, [sp, #32]
    d9d0:	add	sp, sp, #0x30
    d9d4:	b	c770 <mpfr_add1@plt>
    d9d8:	cmp	x9, x11
    d9dc:	b.eq	d9ec <mpfr_add@@Base+0xa0>  // b.none
    d9e0:	ldr	x10, [x2, #16]
    d9e4:	cmp	x10, x11
    d9e8:	b.ne	da54 <mpfr_add@@Base+0x108>  // b.any
    d9ec:	str	x11, [x0, #16]
    d9f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    d9f4:	ldr	x1, [x0, #2640]
    d9f8:	add	x0, x0, #0xa50
    d9fc:	blr	x1
    da00:	mrs	x8, tpidr_el0
    da04:	ldr	w9, [x8, x0]
    da08:	orr	w9, w9, #0x4
    da0c:	str	w9, [x8, x0]
    da10:	ldp	x29, x30, [sp, #32]
    da14:	mov	w0, wzr
    da18:	add	sp, sp, #0x30
    da1c:	ret
    da20:	cmp	x11, x12
    da24:	b.ne	dbc8 <mpfr_add@@Base+0x27c>  // b.any
    da28:	ldr	x9, [x2]
    da2c:	cmp	x11, x9
    da30:	b.ne	dbc8 <mpfr_add@@Base+0x27c>  // b.any
    da34:	ldp	x29, x30, [sp, #32]
    da38:	mov	x1, x8
    da3c:	add	sp, sp, #0x30
    da40:	b	c130 <mpfr_sub1sp@plt>
    da44:	mov	x1, x8
    da48:	ldp	x29, x30, [sp, #32]
    da4c:	add	sp, sp, #0x30
    da50:	b	c770 <mpfr_add1@plt>
    da54:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
    da58:	cmp	x9, x12
    da5c:	b.ne	da84 <mpfr_add@@Base+0x138>  // b.any
    da60:	ldr	w8, [x8, #8]
    da64:	cmp	x10, x12
    da68:	b.ne	da78 <mpfr_add@@Base+0x12c>  // b.any
    da6c:	ldr	w9, [x2, #8]
    da70:	cmp	w8, w9
    da74:	b.ne	d9ec <mpfr_add@@Base+0xa0>  // b.any
    da78:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    da7c:	str	x9, [x0, #16]
    da80:	b	da98 <mpfr_add@@Base+0x14c>
    da84:	cmp	x10, x12
    da88:	b.ne	daac <mpfr_add@@Base+0x160>  // b.any
    da8c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    da90:	str	x8, [x0, #16]
    da94:	ldr	w8, [x2, #8]
    da98:	str	w8, [x0, #8]
    da9c:	ldp	x29, x30, [sp, #32]
    daa0:	mov	w0, wzr
    daa4:	add	sp, sp, #0x30
    daa8:	ret
    daac:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    dab0:	cmp	x9, x12
    dab4:	stur	w3, [x29, #-12]
    dab8:	str	x2, [sp, #8]
    dabc:	stur	x0, [x29, #-8]
    dac0:	b.ne	dafc <mpfr_add@@Base+0x1b0>  // b.any
    dac4:	cmp	x10, x12
    dac8:	b.ne	db18 <mpfr_add@@Base+0x1cc>  // b.any
    dacc:	ldr	w9, [x8, #8]
    dad0:	ldur	w8, [x29, #-12]
    dad4:	cmp	w8, #0x3
    dad8:	b.ne	db78 <mpfr_add@@Base+0x22c>  // b.any
    dadc:	cmp	w9, #0x1
    dae0:	mov	w8, #0xffffffff            	// #-1
    dae4:	b.lt	db90 <mpfr_add@@Base+0x244>  // b.tstop
    dae8:	ldr	x9, [sp, #8]
    daec:	ldr	w9, [x9, #8]
    daf0:	cmp	w9, #0x1
    daf4:	cneg	w8, w8, ge  // ge = tcont
    daf8:	b	db90 <mpfr_add@@Base+0x244>
    dafc:	ldr	w3, [x8, #8]
    db00:	cmp	x10, x12
    db04:	str	x8, [sp]
    db08:	b.ne	db34 <mpfr_add@@Base+0x1e8>  // b.any
    db0c:	ldur	x0, [x29, #-8]
    db10:	ldr	x1, [sp]
    db14:	b	db24 <mpfr_add@@Base+0x1d8>
    db18:	ldr	x1, [sp, #8]
    db1c:	ldur	x0, [x29, #-8]
    db20:	ldr	w3, [x1, #8]
    db24:	ldur	w2, [x29, #-12]
    db28:	ldp	x29, x30, [sp, #32]
    db2c:	add	sp, sp, #0x30
    db30:	b	c690 <mpfr_set4@plt>
    db34:	ldr	x8, [sp, #8]
    db38:	ldr	w8, [x8, #8]
    db3c:	cmp	w3, w8
    db40:	b.ne	dbb0 <mpfr_add@@Base+0x264>  // b.any
    db44:	add	x8, x11, #0x2
    db48:	cmp	x9, x8
    db4c:	b.eq	dbd8 <mpfr_add@@Base+0x28c>  // b.none
    db50:	cmp	x10, x8
    db54:	b.eq	dbd8 <mpfr_add@@Base+0x28c>  // b.none
    db58:	cmp	x9, x10
    db5c:	b.lt	dbe4 <mpfr_add@@Base+0x298>  // b.tstop
    db60:	ldur	x0, [x29, #-8]
    db64:	ldp	x1, x2, [sp]
    db68:	ldur	w3, [x29, #-12]
    db6c:	ldp	x29, x30, [sp, #32]
    db70:	add	sp, sp, #0x30
    db74:	b	c770 <mpfr_add1@plt>
    db78:	mov	w8, #0x1                   	// #1
    db7c:	tbz	w9, #31, db90 <mpfr_add@@Base+0x244>
    db80:	ldr	x9, [sp, #8]
    db84:	ldr	w9, [x9, #8]
    db88:	cmp	w9, #0x0
    db8c:	cneg	w8, w8, lt  // lt = tstop
    db90:	ldur	x9, [x29, #-8]
    db94:	str	w8, [x9, #8]
    db98:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    db9c:	str	x8, [x9, #16]
    dba0:	ldp	x29, x30, [sp, #32]
    dba4:	mov	w0, wzr
    dba8:	add	sp, sp, #0x30
    dbac:	ret
    dbb0:	ldur	x0, [x29, #-8]
    dbb4:	ldp	x1, x2, [sp]
    dbb8:	ldur	w3, [x29, #-12]
    dbbc:	ldp	x29, x30, [sp, #32]
    dbc0:	add	sp, sp, #0x30
    dbc4:	b	ca50 <mpfr_sub1@plt>
    dbc8:	mov	x1, x8
    dbcc:	ldp	x29, x30, [sp, #32]
    dbd0:	add	sp, sp, #0x30
    dbd4:	b	ca50 <mpfr_sub1@plt>
    dbd8:	ldp	x0, x1, [sp]
    dbdc:	bl	ca90 <mpfr_ubf_exp_less_p@plt>
    dbe0:	cbz	w0, db60 <mpfr_add@@Base+0x214>
    dbe4:	ldur	x0, [x29, #-8]
    dbe8:	ldp	x2, x1, [sp]
    dbec:	ldur	w3, [x29, #-12]
    dbf0:	ldp	x29, x30, [sp, #32]
    dbf4:	add	sp, sp, #0x30
    dbf8:	b	c770 <mpfr_add1@plt>

000000000000dbfc <mpfr_add1@@Base>:
    dbfc:	stp	x29, x30, [sp, #-96]!
    dc00:	stp	x28, x27, [sp, #16]
    dc04:	stp	x26, x25, [sp, #32]
    dc08:	stp	x24, x23, [sp, #48]
    dc0c:	stp	x22, x21, [sp, #64]
    dc10:	stp	x20, x19, [sp, #80]
    dc14:	mov	x29, sp
    dc18:	sub	sp, sp, #0x50
    dc1c:	ldr	x4, [x1, #16]
    dc20:	mov	x21, #0x4                   	// #4
    dc24:	movk	x21, #0x8000, lsl #48
    dc28:	mov	x27, x2
    dc2c:	mov	x28, x1
    dc30:	mov	x18, x0
    dc34:	cmp	x4, x21
    dc38:	mrs	x19, tpidr_el0
    dc3c:	stur	x0, [x29, #-24]
    dc40:	b.eq	dd28 <mpfr_add1@@Base+0x12c>  // b.none
    dc44:	stur	xzr, [x29, #-8]
    dc48:	ldr	x20, [x18]
    dc4c:	ldr	x8, [x28]
    dc50:	ldr	x9, [x27]
    dc54:	ldr	x22, [x18, #24]
    dc58:	sub	x10, x20, #0x1
    dc5c:	add	x11, x20, #0x3e
    dc60:	sub	x12, x8, #0x1
    dc64:	cmp	x10, #0x0
    dc68:	ldr	x15, [x28, #24]
    dc6c:	add	x8, x8, #0x3e
    dc70:	sub	x13, x9, #0x1
    dc74:	csel	x10, x11, x10, lt  // lt = tstop
    dc78:	cmp	x12, #0x0
    dc7c:	ldr	x14, [x27, #24]
    dc80:	add	x9, x9, #0x3e
    dc84:	csel	x8, x8, x12, lt  // lt = tstop
    dc88:	cmp	x13, #0x0
    dc8c:	stur	x19, [x29, #-80]
    dc90:	asr	x19, x8, #6
    dc94:	csel	x8, x9, x13, lt  // lt = tstop
    dc98:	asr	x10, x10, #6
    dc9c:	asr	x26, x8, #6
    dca0:	add	x25, x10, #0x1
    dca4:	add	x9, x19, #0x1
    dca8:	cmp	x22, x15
    dcac:	add	x8, x26, #0x1
    dcb0:	stur	x10, [x29, #-48]
    dcb4:	stur	x9, [x29, #-64]
    dcb8:	stur	x8, [x29, #-16]
    dcbc:	stur	x4, [x29, #-32]
    dcc0:	b.eq	dd74 <mpfr_add1@@Base+0x178>  // b.none
    dcc4:	cmp	x22, x14
    dcc8:	stur	x15, [x29, #-72]
    dccc:	b.eq	dcd8 <mpfr_add1@@Base+0xdc>  // b.none
    dcd0:	stur	x14, [x29, #-40]
    dcd4:	b	ddfc <mpfr_add1@@Base+0x200>
    dcd8:	ldur	x8, [x29, #-16]
    dcdc:	lsl	x24, x8, #3
    dce0:	cmp	x24, #0x4, lsl #12
    dce4:	b.hi	ddd8 <mpfr_add1@@Base+0x1dc>  // b.pmore
    dce8:	add	x9, x24, #0xf
    dcec:	mov	x8, sp
    dcf0:	and	x9, x9, #0xfffffffffffffff0
    dcf4:	sub	x0, x8, x9
    dcf8:	mov	sp, x0
    dcfc:	cmp	x22, x0
    dd00:	b.eq	ddf8 <mpfr_add1@@Base+0x1fc>  // b.none
    dd04:	mov	x1, x22
    dd08:	mov	x2, x24
    dd0c:	stur	x0, [x29, #-40]
    dd10:	mov	w23, w3
    dd14:	bl	ba70 <memcpy@plt>
    dd18:	ldur	x4, [x29, #-32]
    dd1c:	mov	w3, w23
    dd20:	ldur	x18, [x29, #-24]
    dd24:	b	ddfc <mpfr_add1@@Base+0x200>
    dd28:	add	x0, x28, #0x20
    dd2c:	mov	w20, w3
    dd30:	bl	bc90 <mpfr_ubf_zexp2exp@plt>
    dd34:	ldur	x18, [x29, #-24]
    dd38:	mov	w3, w20
    dd3c:	mov	x4, x0
    dd40:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    dd44:	ldr	x1, [x0, #2608]
    dd48:	add	x0, x0, #0xa30
    dd4c:	blr	x1
    dd50:	ldr	x8, [x19, x0]
    dd54:	cmp	x4, x8
    dd58:	b.le	dc44 <mpfr_add1@@Base+0x48>
    dd5c:	ldr	w2, [x28, #8]
    dd60:	mov	x0, x18
    dd64:	mov	w1, w3
    dd68:	bl	bf90 <mpfr_overflow@plt>
    dd6c:	mov	w23, w0
    dd70:	b	e5f4 <mpfr_add1@@Base+0x9f8>
    dd74:	ldur	x8, [x29, #-64]
    dd78:	lsl	x24, x8, #3
    dd7c:	cmp	x24, #0x4, lsl #12
    dd80:	b.hi	e8e8 <mpfr_add1@@Base+0xcec>  // b.pmore
    dd84:	add	x9, x24, #0xf
    dd88:	mov	x8, sp
    dd8c:	and	x9, x9, #0xfffffffffffffff0
    dd90:	sub	x0, x8, x9
    dd94:	mov	sp, x0
    dd98:	cmp	x22, x0
    dd9c:	stur	x0, [x29, #-72]
    dda0:	b.eq	ddc8 <mpfr_add1@@Base+0x1cc>  // b.none
    dda4:	mov	x1, x22
    dda8:	mov	x2, x24
    ddac:	mov	x24, x14
    ddb0:	mov	w23, w3
    ddb4:	bl	ba70 <memcpy@plt>
    ddb8:	ldur	x4, [x29, #-32]
    ddbc:	ldur	x0, [x29, #-72]
    ddc0:	mov	w3, w23
    ddc4:	mov	x14, x24
    ddc8:	cmp	x22, x14
    ddcc:	csel	x14, x0, x14, eq  // eq = none
    ddd0:	stur	x14, [x29, #-40]
    ddd4:	b	dd20 <mpfr_add1@@Base+0x124>
    ddd8:	sub	x0, x29, #0x8
    dddc:	mov	x1, x24
    dde0:	mov	w23, w3
    dde4:	bl	be10 <mpfr_tmp_allocate@plt>
    dde8:	ldp	x4, x18, [x29, #-32]
    ddec:	mov	w3, w23
    ddf0:	cmp	x22, x0
    ddf4:	b.ne	dd04 <mpfr_add1@@Base+0x108>  // b.any
    ddf8:	stur	x22, [x29, #-40]
    ddfc:	ldr	w8, [x28, #8]
    de00:	lsl	x23, x25, #6
    de04:	cmp	w3, #0x3
    de08:	str	w8, [x18, #8]
    de0c:	b.eq	de2c <mpfr_add1@@Base+0x230>  // b.none
    de10:	cmp	w3, #0x2
    de14:	b.ne	de3c <mpfr_add1@@Base+0x240>  // b.any
    de18:	ldr	w8, [x28, #8]
    de1c:	cmp	w8, #0x1
    de20:	mov	w8, #0x4                   	// #4
    de24:	csinc	w3, w8, wzr, ge  // ge = tcont
    de28:	b	de3c <mpfr_add1@@Base+0x240>
    de2c:	ldr	w8, [x28, #8]
    de30:	cmp	w8, #0x0
    de34:	mov	w8, #0x4                   	// #4
    de38:	csinc	w3, w8, wzr, lt  // lt = tstop
    de3c:	ldr	x8, [x27, #16]
    de40:	sub	x5, x23, x20
    de44:	stur	w3, [x29, #-52]
    de48:	cmp	x8, x21
    de4c:	mov	x21, x5
    de50:	b.eq	e0a0 <mpfr_add1@@Base+0x4a4>  // b.none
    de54:	sub	x27, x4, x8
    de58:	cmp	x23, x27
    de5c:	b.ls	e0c4 <mpfr_add1@@Base+0x4c8>  // b.plast
    de60:	mvn	x8, x27
    de64:	add	x8, x23, x8
    de68:	add	x9, x8, #0x3f
    de6c:	cmp	x8, #0x0
    de70:	csel	x8, x9, x8, lt  // lt = tstop
    de74:	asr	x8, x8, #6
    de78:	cmp	x8, x26
    de7c:	add	x28, x8, #0x1
    de80:	b.gt	e104 <mpfr_add1@@Base+0x508>
    de84:	add	x8, x27, #0x3f
    de88:	cmp	x27, #0x0
    de8c:	csel	x8, x8, x27, lt  // lt = tstop
    de90:	asr	x20, x8, #6
    de94:	sub	x8, x25, x20
    de98:	add	x24, x22, x8, lsl #3
    de9c:	lsl	x2, x20, #3
    dea0:	mov	x0, x24
    dea4:	mov	w1, wzr
    dea8:	bl	c150 <memset@plt>
    deac:	ldur	x8, [x29, #-16]
    deb0:	ldur	x9, [x29, #-40]
    deb4:	sub	w3, w27, w20, lsl #6
    deb8:	sub	x24, x24, x28, lsl #3
    debc:	sub	x8, x8, x28
    dec0:	add	x1, x9, x8, lsl #3
    dec4:	cbz	w3, e124 <mpfr_add1@@Base+0x528>
    dec8:	mov	x0, x24
    decc:	mov	x2, x28
    ded0:	bl	bd30 <__gmpn_rshift@plt>
    ded4:	ldur	x20, [x29, #-80]
    ded8:	ldur	x26, [x29, #-48]
    dedc:	cmp	x24, x22
    dee0:	b.hi	e1b4 <mpfr_add1@@Base+0x5b8>  // b.pmore
    dee4:	cmp	x19, x26
    dee8:	b.ge	df00 <mpfr_add1@@Base+0x304>  // b.tcont
    deec:	ldp	x2, x3, [x29, #-72]
    def0:	sub	x8, x25, x3
    def4:	add	x0, x22, x8, lsl #3
    def8:	mov	x1, x0
    defc:	b	df18 <mpfr_add1@@Base+0x31c>
    df00:	ldp	x9, x8, [x29, #-72]
    df04:	mov	x0, x22
    df08:	mov	x1, x22
    df0c:	mov	x3, x25
    df10:	sub	x8, x8, x25
    df14:	add	x2, x9, x8, lsl #3
    df18:	bl	c590 <__gmpn_add_n@plt>
    df1c:	ldp	x4, x18, [x29, #-32]
    df20:	ldur	w3, [x29, #-52]
    df24:	mov	x5, x21
    df28:	cbnz	x0, e144 <mpfr_add1@@Base+0x548>
    df2c:	cbz	w5, e1a8 <mpfr_add1@@Base+0x5ac>
    df30:	ldr	x10, [x22]
    df34:	mov	x8, #0xffffffffffffffff    	// #-1
    df38:	lsl	x9, x8, x5
    df3c:	sub	w11, w5, #0x1
    df40:	bic	x8, x10, x9
    df44:	cmp	w5, #0x2
    df48:	and	x10, x10, x9
    df4c:	lsr	x24, x8, x11
    df50:	str	x10, [x22]
    df54:	b.lt	e1bc <mpfr_add1@@Base+0x5c0>  // b.tstop
    df58:	mvn	x9, x9
    df5c:	lsr	x9, x9, #1
    df60:	ands	x8, x8, x9
    df64:	b.eq	df78 <mpfr_add1@@Base+0x37c>  // b.none
    df68:	cmp	x8, x9
    df6c:	b.ne	dfc0 <mpfr_add1@@Base+0x3c4>  // b.any
    df70:	mov	w28, #0x1                   	// #1
    df74:	b	df7c <mpfr_add1@@Base+0x380>
    df78:	mov	w28, wzr
    df7c:	add	x8, x27, #0x3f
    df80:	cmp	x27, #0x0
    df84:	csel	x8, x8, x27, lt  // lt = tstop
    df88:	asr	x9, x8, #6
    df8c:	cmp	x19, x26
    df90:	sub	x10, x25, x9
    df94:	b.gt	e1c4 <mpfr_add1@@Base+0x5c8>
    df98:	cmp	w28, #0x1
    df9c:	b.eq	dfdc <mpfr_add1@@Base+0x3e0>  // b.none
    dfa0:	ldur	x8, [x29, #-16]
    dfa4:	subs	x8, x8, x10
    dfa8:	b.lt	dfd4 <mpfr_add1@@Base+0x3d8>  // b.tstop
    dfac:	cmp	x27, x23
    dfb0:	b.ls	dfc8 <mpfr_add1@@Base+0x3cc>  // b.plast
    dfb4:	bic	w24, w24, w24, asr #31
    dfb8:	mov	w28, #0x1                   	// #1
    dfbc:	b	dfdc <mpfr_add1@@Base+0x3e0>
    dfc0:	mov	w28, #0xffffffff            	// #-1
    dfc4:	b	dfdc <mpfr_add1@@Base+0x3e0>
    dfc8:	sub	x9, x27, x9, lsl #6
    dfcc:	cbnz	w9, e020 <mpfr_add1@@Base+0x424>
    dfd0:	cbnz	x8, e020 <mpfr_add1@@Base+0x424>
    dfd4:	mov	w28, wzr
    dfd8:	bic	w24, w24, w24, asr #31
    dfdc:	cmp	w3, #0x0
    dfe0:	cset	w19, eq  // eq = none
    dfe4:	cmp	w3, #0x5
    dfe8:	b.hi	e28c <mpfr_add1@@Base+0x690>  // b.pmore
    dfec:	adrp	x9, 5d000 <mpfr_free_pool@@Base+0x1b84>
    dff0:	mov	w8, w3
    dff4:	add	x9, x9, #0xbed
    dff8:	adr	x10, e008 <mpfr_add1@@Base+0x40c>
    dffc:	ldrb	w11, [x9, x8]
    e000:	add	x10, x10, x11, lsl #2
    e004:	br	x10
    e008:	cbz	w28, e4a8 <mpfr_add1@@Base+0x8ac>
    e00c:	cbnz	w24, e4b8 <mpfr_add1@@Base+0x8bc>
    e010:	b	e508 <mpfr_add1@@Base+0x90c>
    e014:	orr	w8, w24, w28
    e018:	cbnz	w8, e508 <mpfr_add1@@Base+0x90c>
    e01c:	b	e560 <mpfr_add1@@Base+0x964>
    e020:	cbz	w9, e038 <mpfr_add1@@Base+0x43c>
    e024:	ldur	x12, [x29, #-40]
    e028:	neg	x9, x9
    e02c:	ldr	x10, [x12, x8, lsl #3]
    e030:	lsl	x9, x10, x9
    e034:	b	e044 <mpfr_add1@@Base+0x448>
    e038:	ldur	x12, [x29, #-40]
    e03c:	sub	x8, x8, #0x1
    e040:	ldr	x9, [x12, x8, lsl #3]
    e044:	lsr	x10, x9, #63
    e048:	and	x11, x9, #0x7fffffffffffffff
    e04c:	cmp	w24, #0x0
    e050:	csel	w24, w10, w24, lt  // lt = tstop
    e054:	csel	x9, x11, x9, lt  // lt = tstop
    e058:	cmp	w3, #0x5
    e05c:	b.ne	e070 <mpfr_add1@@Base+0x474>  // b.any
    e060:	cbnz	x9, e070 <mpfr_add1@@Base+0x474>
    e064:	mov	w19, wzr
    e068:	cbnz	w24, e4ac <mpfr_add1@@Base+0x8b0>
    e06c:	b	e560 <mpfr_add1@@Base+0x964>
    e070:	cbz	x9, e07c <mpfr_add1@@Base+0x480>
    e074:	mov	w28, #0x1                   	// #1
    e078:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e07c:	sub	x9, x12, #0x8
    e080:	mov	w28, #0x1                   	// #1
    e084:	cbz	x8, e098 <mpfr_add1@@Base+0x49c>
    e088:	ldr	x10, [x9, x8, lsl #3]
    e08c:	sub	x8, x8, #0x1
    e090:	cbz	x10, e084 <mpfr_add1@@Base+0x488>
    e094:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e098:	mov	w28, wzr
    e09c:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e0a0:	mov	x0, x28
    e0a4:	mov	x1, x27
    e0a8:	bl	cae0 <mpfr_ubf_diff_exp@plt>
    e0ac:	ldp	x4, x18, [x29, #-32]
    e0b0:	ldur	w3, [x29, #-52]
    e0b4:	mov	x5, x21
    e0b8:	mov	x27, x0
    e0bc:	cmp	x23, x27
    e0c0:	b.hi	de60 <mpfr_add1@@Base+0x264>  // b.pmore
    e0c4:	ldur	x26, [x29, #-48]
    e0c8:	cmp	x19, x26
    e0cc:	b.lt	e914 <mpfr_add1@@Base+0xd18>  // b.tstop
    e0d0:	ldp	x9, x8, [x29, #-72]
    e0d4:	ldur	x20, [x29, #-80]
    e0d8:	sub	x8, x8, x25
    e0dc:	add	x1, x9, x8, lsl #3
    e0e0:	cmp	x22, x1
    e0e4:	b.eq	df2c <mpfr_add1@@Base+0x330>  // b.none
    e0e8:	lsl	x2, x25, #3
    e0ec:	mov	x0, x22
    e0f0:	bl	ba70 <memcpy@plt>
    e0f4:	ldp	x4, x18, [x29, #-32]
    e0f8:	ldur	w3, [x29, #-52]
    e0fc:	mov	x5, x21
    e100:	b	df2c <mpfr_add1@@Base+0x330>
    e104:	ldur	x20, [x29, #-16]
    e108:	mov	x0, x22
    e10c:	mov	w1, wzr
    e110:	sub	x8, x28, x20
    e114:	lsl	x2, x8, #3
    e118:	bl	c150 <memset@plt>
    e11c:	mov	x28, x20
    e120:	b	de84 <mpfr_add1@@Base+0x288>
    e124:	ldur	x20, [x29, #-80]
    e128:	ldur	x26, [x29, #-48]
    e12c:	cmp	x24, x1
    e130:	b.eq	dee4 <mpfr_add1@@Base+0x2e8>  // b.none
    e134:	lsl	x2, x28, #3
    e138:	mov	x0, x24
    e13c:	bl	ba70 <memcpy@plt>
    e140:	b	dee4 <mpfr_add1@@Base+0x2e8>
    e144:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e148:	ldr	x1, [x0, #2608]
    e14c:	add	x0, x0, #0xa30
    e150:	blr	x1
    e154:	ldr	x8, [x20, x0]
    e158:	cmp	x4, x8
    e15c:	b.eq	e960 <mpfr_add1@@Base+0xd64>  // b.none
    e160:	ldr	x8, [x22]
    e164:	add	x4, x4, #0x1
    e168:	lsr	x9, x8, x5
    e16c:	and	w24, w9, #0x1
    e170:	cbz	w5, e978 <mpfr_add1@@Base+0xd7c>
    e174:	and	x9, x5, #0xffffffff
    e178:	mov	x10, #0xffffffffffffffff    	// #-1
    e17c:	lsl	x9, x10, x9
    e180:	bics	x10, x8, x9
    e184:	and	x8, x8, x9, lsl #1
    e188:	mov	x26, x4
    e18c:	str	x8, [x22]
    e190:	b.eq	e228 <mpfr_add1@@Base+0x62c>  // b.none
    e194:	mvn	x8, x9
    e198:	cmp	x10, x8
    e19c:	mov	w8, #0x1                   	// #1
    e1a0:	cneg	w28, w8, ne  // ne = any
    e1a4:	b	e22c <mpfr_add1@@Base+0x630>
    e1a8:	mov	w28, #0xffffffff            	// #-1
    e1ac:	mov	w24, #0xffffffff            	// #-1
    e1b0:	b	df7c <mpfr_add1@@Base+0x380>
    e1b4:	stur	x0, [x24, #-8]
    e1b8:	b	dee4 <mpfr_add1@@Base+0x2e8>
    e1bc:	mov	w28, #0xffffffff            	// #-1
    e1c0:	b	df7c <mpfr_add1@@Base+0x380>
    e1c4:	cmp	x10, #0x0
    e1c8:	b.gt	e1d0 <mpfr_add1@@Base+0x5d4>
    e1cc:	cbz	w28, e074 <mpfr_add1@@Base+0x478>
    e1d0:	ldur	x8, [x29, #-64]
    e1d4:	cmp	w3, #0x5
    e1d8:	sub	x8, x8, x25
    e1dc:	b.ne	e2c4 <mpfr_add1@@Base+0x6c8>  // b.any
    e1e0:	ldur	x9, [x29, #-72]
    e1e4:	sub	x9, x9, #0x8
    e1e8:	tbz	x10, #63, e318 <mpfr_add1@@Base+0x71c>
    e1ec:	cmp	w28, #0x0
    e1f0:	b.gt	e860 <mpfr_add1@@Base+0xc64>
    e1f4:	ldr	x11, [x9, x8, lsl #3]
    e1f8:	cmp	w24, #0x0
    e1fc:	orr	x13, x11, #0x8000000000000000
    e200:	lsr	x12, x11, #63
    e204:	csel	x11, x13, x11, lt  // lt = tstop
    e208:	csel	w24, w12, w24, lt  // lt = tstop
    e20c:	cmn	x11, #0x1
    e210:	b.ne	e860 <mpfr_add1@@Base+0xc64>  // b.any
    e214:	sub	x8, x8, #0x1
    e218:	add	x10, x10, #0x1
    e21c:	mov	w28, #0x1                   	// #1
    e220:	cbnz	x8, e1e8 <mpfr_add1@@Base+0x5ec>
    e224:	b	e864 <mpfr_add1@@Base+0xc68>
    e228:	mov	w28, wzr
    e22c:	mov	w3, #0x1                   	// #1
    e230:	mov	x0, x22
    e234:	mov	x1, x22
    e238:	mov	x2, x25
    e23c:	bl	bd30 <__gmpn_rshift@plt>
    e240:	ldur	x8, [x29, #-48]
    e244:	mov	x5, x21
    e248:	lsl	x8, x8, #3
    e24c:	ldr	x9, [x22, x8]
    e250:	eor	x9, x9, #0x8000000000000000
    e254:	str	x9, [x22, x8]
    e258:	cbz	w5, e278 <mpfr_add1@@Base+0x67c>
    e25c:	ldur	x18, [x29, #-24]
    e260:	ldur	w3, [x29, #-52]
    e264:	mov	x4, x26
    e268:	tbz	w28, #31, e284 <mpfr_add1@@Base+0x688>
    e26c:	ldur	x26, [x29, #-48]
    e270:	mov	w28, #0xffffffff            	// #-1
    e274:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e278:	ldur	x18, [x29, #-24]
    e27c:	ldur	w3, [x29, #-52]
    e280:	mov	x4, x26
    e284:	ldur	x26, [x29, #-48]
    e288:	b	df7c <mpfr_add1@@Base+0x380>
    e28c:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    e290:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    e294:	add	x0, x0, #0xbf3
    e298:	add	x2, x2, #0xbfa
    e29c:	mov	w1, #0x221                 	// #545
    e2a0:	mov	x23, x4
    e2a4:	bl	cb20 <mpfr_assert_fail@plt>
    e2a8:	ldur	w3, [x29, #-52]
    e2ac:	ldur	x18, [x29, #-24]
    e2b0:	mov	x5, x21
    e2b4:	mov	x4, x23
    e2b8:	orr	w8, w24, w28
    e2bc:	cbnz	w8, e4b8 <mpfr_add1@@Base+0x8bc>
    e2c0:	b	e560 <mpfr_add1@@Base+0x964>
    e2c4:	ldur	x9, [x29, #-72]
    e2c8:	sub	x9, x9, #0x8
    e2cc:	b	e2fc <mpfr_add1@@Base+0x700>
    e2d0:	orr	x13, x11, #0x8000000000000000
    e2d4:	cmp	w24, #0x0
    e2d8:	lsr	x12, x11, #63
    e2dc:	csel	x11, x13, x11, lt  // lt = tstop
    e2e0:	csel	w24, w12, w24, lt  // lt = tstop
    e2e4:	cmn	x11, #0x1
    e2e8:	mov	w28, #0x1                   	// #1
    e2ec:	b.ne	e864 <mpfr_add1@@Base+0xc68>  // b.any
    e2f0:	sub	x8, x8, #0x1
    e2f4:	add	x10, x10, #0x1
    e2f8:	cbz	x8, e860 <mpfr_add1@@Base+0xc64>
    e2fc:	tbz	x10, #63, e318 <mpfr_add1@@Base+0x71c>
    e300:	ldr	x11, [x9, x8, lsl #3]
    e304:	cmp	w28, #0x1
    e308:	b.lt	e2d0 <mpfr_add1@@Base+0x6d4>  // b.tstop
    e30c:	cmn	x11, #0x1
    e310:	b.eq	e2f0 <mpfr_add1@@Base+0x6f4>  // b.none
    e314:	b	e864 <mpfr_add1@@Base+0xc68>
    e318:	ldur	x9, [x29, #-16]
    e31c:	subs	x11, x9, x10
    e320:	b.lt	e340 <mpfr_add1@@Base+0x744>  // b.tstop
    e324:	add	x9, x27, #0x3f
    e328:	cmp	x27, #0x0
    e32c:	csel	x9, x9, x27, lt  // lt = tstop
    e330:	and	x9, x9, #0xffffffffffffffc0
    e334:	sub	x9, x27, x9
    e338:	cbnz	w9, e39c <mpfr_add1@@Base+0x7a0>
    e33c:	cbnz	x11, e39c <mpfr_add1@@Base+0x7a0>
    e340:	tbz	w28, #31, e36c <mpfr_add1@@Base+0x770>
    e344:	ldur	x9, [x29, #-72]
    e348:	sub	x8, x8, #0x1
    e34c:	cmp	w24, #0x0
    e350:	ldr	x9, [x9, x8, lsl #3]
    e354:	and	x11, x9, #0x7fffffffffffffff
    e358:	lsr	x10, x9, #63
    e35c:	csel	x9, x11, x9, lt  // lt = tstop
    e360:	csel	w24, w10, w24, lt  // lt = tstop
    e364:	cmp	x9, #0x0
    e368:	cset	w28, ne  // ne = any
    e36c:	ldur	w9, [x29, #-52]
    e370:	cmp	w9, #0x5
    e374:	b.eq	e864 <mpfr_add1@@Base+0xc68>  // b.none
    e378:	cbnz	w28, e864 <mpfr_add1@@Base+0xc68>
    e37c:	ldur	x9, [x29, #-72]
    e380:	mov	w28, #0x1                   	// #1
    e384:	sub	x9, x9, #0x8
    e388:	cbz	x8, e8e0 <mpfr_add1@@Base+0xce4>
    e38c:	ldr	x10, [x9, x8, lsl #3]
    e390:	sub	x8, x8, #0x1
    e394:	cbz	x10, e388 <mpfr_add1@@Base+0x78c>
    e398:	b	e864 <mpfr_add1@@Base+0xc68>
    e39c:	cbz	x10, e3a8 <mpfr_add1@@Base+0x7ac>
    e3a0:	ldur	x10, [x29, #-40]
    e3a4:	ldr	x10, [x10, x11, lsl #3]
    e3a8:	tbnz	w28, #31, e3b4 <mpfr_add1@@Base+0x7b8>
    e3ac:	ldur	w3, [x29, #-52]
    e3b0:	b	e484 <mpfr_add1@@Base+0x888>
    e3b4:	cbz	w9, e3dc <mpfr_add1@@Base+0x7e0>
    e3b8:	neg	x12, x9
    e3bc:	subs	x11, x11, #0x1
    e3c0:	lsl	x12, x10, x12
    e3c4:	b.lt	e3e8 <mpfr_add1@@Base+0x7ec>  // b.tstop
    e3c8:	ldur	x10, [x29, #-40]
    e3cc:	ldr	x10, [x10, x11, lsl #3]
    e3d0:	lsr	x13, x10, x9
    e3d4:	add	x12, x13, x12
    e3d8:	b	e3e8 <mpfr_add1@@Base+0x7ec>
    e3dc:	ldur	x12, [x29, #-40]
    e3e0:	sub	x11, x11, #0x1
    e3e4:	ldr	x12, [x12, x11, lsl #3]
    e3e8:	ldur	x13, [x29, #-72]
    e3ec:	sub	x8, x8, #0x1
    e3f0:	ldr	x13, [x13, x8, lsl #3]
    e3f4:	adds	x12, x13, x12
    e3f8:	b.cc	e448 <mpfr_add1@@Base+0x84c>  // b.lo, b.ul, b.last
    e3fc:	tbnz	w24, #31, e408 <mpfr_add1@@Base+0x80c>
    e400:	eor	w24, w24, #0x1
    e404:	cbnz	w24, e448 <mpfr_add1@@Base+0x84c>
    e408:	ldr	x13, [x22]
    e40c:	mov	w14, #0x1                   	// #1
    e410:	lsl	x14, x14, x21
    e414:	adds	x13, x13, x14
    e418:	str	x13, [x22]
    e41c:	b.cc	e448 <mpfr_add1@@Base+0x84c>  // b.lo, b.ul, b.last
    e420:	mov	w13, #0x1                   	// #1
    e424:	ldur	x14, [x29, #-48]
    e428:	cmp	x13, x14
    e42c:	b.gt	e884 <mpfr_add1@@Base+0xc88>
    e430:	lsl	x14, x13, #3
    e434:	ldr	x15, [x22, x14]
    e438:	add	x13, x13, #0x1
    e43c:	adds	x15, x15, #0x1
    e440:	str	x15, [x22, x14]
    e444:	b.cs	e424 <mpfr_add1@@Base+0x828>  // b.hs, b.nlast
    e448:	tbz	w24, #31, e45c <mpfr_add1@@Base+0x860>
    e44c:	lsl	x13, x12, #1
    e450:	bfxil	x13, x12, #62, #1
    e454:	lsr	x24, x12, #63
    e458:	mov	x12, x13
    e45c:	ldur	x20, [x29, #-80]
    e460:	ldur	x18, [x29, #-24]
    e464:	ldur	w3, [x29, #-52]
    e468:	ldur	x26, [x29, #-48]
    e46c:	cmp	x12, #0x0
    e470:	add	x12, x12, #0x1
    e474:	cset	w28, ne  // ne = any
    e478:	cmp	x12, #0x1
    e47c:	mov	x5, x21
    e480:	b.hi	dfdc <mpfr_add1@@Base+0x3e0>  // b.pmore
    e484:	cmp	w3, #0x5
    e488:	b.ne	e640 <mpfr_add1@@Base+0xa44>  // b.any
    e48c:	ldur	x20, [x29, #-80]
    e490:	ldur	x18, [x29, #-24]
    e494:	ldur	w3, [x29, #-52]
    e498:	ldur	x26, [x29, #-48]
    e49c:	mov	w19, wzr
    e4a0:	mov	x5, x21
    e4a4:	cbnz	w28, e00c <mpfr_add1@@Base+0x410>
    e4a8:	cbz	w24, e560 <mpfr_add1@@Base+0x964>
    e4ac:	ldr	x8, [x22]
    e4b0:	lsr	x8, x8, x5
    e4b4:	tbz	w8, #0, e508 <mpfr_add1@@Base+0x90c>
    e4b8:	ldr	w2, [x18, #8]
    e4bc:	ldr	x10, [x22]
    e4c0:	mov	w9, #0x1                   	// #1
    e4c4:	mov	w8, #0xffffffff            	// #-1
    e4c8:	lsl	x9, x9, x5
    e4cc:	cmp	w2, #0x1
    e4d0:	cneg	w23, w8, ge  // ge = tcont
    e4d4:	adds	x8, x10, x9
    e4d8:	str	x8, [x22]
    e4dc:	b.cc	e5ac <mpfr_add1@@Base+0x9b0>  // b.lo, b.ul, b.last
    e4e0:	mov	w8, #0x1                   	// #1
    e4e4:	cmp	x8, x26
    e4e8:	b.gt	e584 <mpfr_add1@@Base+0x988>
    e4ec:	lsl	x9, x8, #3
    e4f0:	ldr	x10, [x22, x9]
    e4f4:	add	x8, x8, #0x1
    e4f8:	adds	x10, x10, #0x1
    e4fc:	str	x10, [x22, x9]
    e500:	b.cs	e4e4 <mpfr_add1@@Base+0x8e8>  // b.hs, b.nlast
    e504:	b	e5ac <mpfr_add1@@Base+0x9b0>
    e508:	ldr	w8, [x18, #8]
    e50c:	cmp	w8, #0x0
    e510:	mov	w8, #0xffffffff            	// #-1
    e514:	cneg	w23, w8, lt  // lt = tstop
    e518:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e51c:	ldr	x1, [x0, #2576]
    e520:	add	x0, x0, #0xa10
    e524:	blr	x1
    e528:	ldr	x8, [x20, x0]
    e52c:	cmp	x4, x8
    e530:	b.ge	e5c8 <mpfr_add1@@Base+0x9cc>  // b.tcont
    e534:	cbz	w19, e628 <mpfr_add1@@Base+0xa2c>
    e538:	sub	x8, x8, #0x1
    e53c:	cmp	x4, x8
    e540:	b.lt	e558 <mpfr_add1@@Base+0x95c>  // b.tstop
    e544:	tbnz	w23, #31, e624 <mpfr_add1@@Base+0xa28>
    e548:	mov	x0, x18
    e54c:	bl	bf50 <mpfr_powerof2_raw@plt>
    e550:	ldur	x18, [x29, #-24]
    e554:	cbz	w0, e624 <mpfr_add1@@Base+0xa28>
    e558:	mov	w3, #0x1                   	// #1
    e55c:	b	e628 <mpfr_add1@@Base+0xa2c>
    e560:	mov	w23, wzr
    e564:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e568:	ldr	x1, [x0, #2576]
    e56c:	add	x0, x0, #0xa10
    e570:	blr	x1
    e574:	ldr	x8, [x20, x0]
    e578:	cmp	x4, x8
    e57c:	b.ge	e5c8 <mpfr_add1@@Base+0x9cc>  // b.tcont
    e580:	b	e534 <mpfr_add1@@Base+0x938>
    e584:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e588:	ldr	x1, [x0, #2608]
    e58c:	add	x0, x0, #0xa30
    e590:	blr	x1
    e594:	ldr	x8, [x20, x0]
    e598:	cmp	x4, x8
    e59c:	b.eq	e964 <mpfr_add1@@Base+0xd68>  // b.none
    e5a0:	add	x4, x4, #0x1
    e5a4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    e5a8:	str	x8, [x22, x26, lsl #3]
    e5ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e5b0:	ldr	x1, [x0, #2576]
    e5b4:	add	x0, x0, #0xa10
    e5b8:	blr	x1
    e5bc:	ldr	x8, [x20, x0]
    e5c0:	cmp	x4, x8
    e5c4:	b.lt	e534 <mpfr_add1@@Base+0x938>  // b.tstop
    e5c8:	str	x4, [x18, #16]
    e5cc:	ldur	x0, [x29, #-8]
    e5d0:	cbnz	x0, e618 <mpfr_add1@@Base+0xa1c>
    e5d4:	cbz	w23, e5f4 <mpfr_add1@@Base+0x9f8>
    e5d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e5dc:	ldr	x1, [x0, #2640]
    e5e0:	add	x0, x0, #0xa50
    e5e4:	blr	x1
    e5e8:	ldr	w8, [x20, x0]
    e5ec:	orr	w8, w8, #0x8
    e5f0:	str	w8, [x20, x0]
    e5f4:	mov	w0, w23
    e5f8:	mov	sp, x29
    e5fc:	ldp	x20, x19, [sp, #80]
    e600:	ldp	x22, x21, [sp, #64]
    e604:	ldp	x24, x23, [sp, #48]
    e608:	ldp	x26, x25, [sp, #32]
    e60c:	ldp	x28, x27, [sp, #16]
    e610:	ldp	x29, x30, [sp], #96
    e614:	ret
    e618:	bl	c400 <mpfr_tmp_free@plt>
    e61c:	cbnz	w23, e5d8 <mpfr_add1@@Base+0x9dc>
    e620:	b	e5f4 <mpfr_add1@@Base+0x9f8>
    e624:	mov	w3, wzr
    e628:	ldr	w2, [x18, #8]
    e62c:	mov	x0, x18
    e630:	mov	w1, w3
    e634:	bl	c3c0 <mpfr_underflow@plt>
    e638:	mov	w23, w0
    e63c:	b	e5cc <mpfr_add1@@Base+0x9d0>
    e640:	mov	w12, #0x40                  	// #64
    e644:	mov	w13, #0x1                   	// #1
    e648:	sub	w12, w12, w9
    e64c:	lsl	x13, x13, x21
    e650:	cbz	w9, e760 <mpfr_add1@@Base+0xb64>
    e654:	ldur	x20, [x29, #-80]
    e658:	ldur	w3, [x29, #-52]
    e65c:	ldur	x26, [x29, #-48]
    e660:	and	x14, x9, #0xffffffff
    e664:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
    e668:	subs	x16, x8, #0x1
    e66c:	b.lt	e84c <mpfr_add1@@Base+0xc50>  // b.tstop
    e670:	tbnz	x11, #63, e340 <mpfr_add1@@Base+0x744>
    e674:	lsl	x8, x10, x12
    e678:	sub	x17, x11, #0x1
    e67c:	cbz	x11, e690 <mpfr_add1@@Base+0xa94>
    e680:	ldur	x10, [x29, #-40]
    e684:	ldr	x10, [x10, x17, lsl #3]
    e688:	lsr	x11, x10, x14
    e68c:	add	x8, x11, x8
    e690:	ldur	x11, [x29, #-72]
    e694:	ldr	x11, [x11, x16, lsl #3]
    e698:	adds	x8, x11, x8
    e69c:	b.cc	e730 <mpfr_add1@@Base+0xb34>  // b.lo, b.ul, b.last
    e6a0:	eor	w28, w28, #0x1
    e6a4:	cbnz	w28, e864 <mpfr_add1@@Base+0xc68>
    e6a8:	eor	w24, w24, #0x1
    e6ac:	cbz	w24, e6b8 <mpfr_add1@@Base+0xabc>
    e6b0:	mov	w28, wzr
    e6b4:	b	e730 <mpfr_add1@@Base+0xb34>
    e6b8:	ldr	x11, [x22]
    e6bc:	adds	x11, x11, x13
    e6c0:	str	x11, [x22]
    e6c4:	b.cc	e6f0 <mpfr_add1@@Base+0xaf4>  // b.lo, b.ul, b.last
    e6c8:	mov	w11, #0x1                   	// #1
    e6cc:	ldur	x18, [x29, #-48]
    e6d0:	cmp	x11, x18
    e6d4:	b.gt	e6fc <mpfr_add1@@Base+0xb00>
    e6d8:	lsl	x18, x11, #3
    e6dc:	ldr	x0, [x22, x18]
    e6e0:	add	x11, x11, #0x1
    e6e4:	adds	x0, x0, #0x1
    e6e8:	str	x0, [x22, x18]
    e6ec:	b.cs	e6cc <mpfr_add1@@Base+0xad0>  // b.hs, b.nlast
    e6f0:	mov	w28, wzr
    e6f4:	mov	w24, wzr
    e6f8:	b	e730 <mpfr_add1@@Base+0xb34>
    e6fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e700:	ldr	x1, [x0, #2608]
    e704:	add	x0, x0, #0xa30
    e708:	blr	x1
    e70c:	ldur	x11, [x29, #-80]
    e710:	ldr	x11, [x11, x0]
    e714:	cmp	x4, x11
    e718:	b.eq	e8a4 <mpfr_add1@@Base+0xca8>  // b.none
    e71c:	ldur	x11, [x29, #-48]
    e720:	mov	w28, wzr
    e724:	mov	w24, wzr
    e728:	add	x4, x4, #0x1
    e72c:	str	x15, [x22, x11, lsl #3]
    e730:	cbz	x8, e738 <mpfr_add1@@Base+0xb3c>
    e734:	cbz	w28, e860 <mpfr_add1@@Base+0xc64>
    e738:	ldur	x18, [x29, #-24]
    e73c:	cmn	x8, #0x1
    e740:	mov	x8, x16
    e744:	mov	x11, x17
    e748:	b.eq	e668 <mpfr_add1@@Base+0xa6c>  // b.none
    e74c:	mov	x5, x21
    e750:	mov	x8, x16
    e754:	mov	x11, x17
    e758:	cbz	w28, e668 <mpfr_add1@@Base+0xa6c>
    e75c:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e760:	ldur	x20, [x29, #-80]
    e764:	ldur	w3, [x29, #-52]
    e768:	ldur	x26, [x29, #-48]
    e76c:	sub	x14, x8, x11
    e770:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
    e774:	subs	x8, x8, #0x1
    e778:	b.lt	e84c <mpfr_add1@@Base+0xc50>  // b.tstop
    e77c:	cbz	x11, e87c <mpfr_add1@@Base+0xc80>
    e780:	ldur	x16, [x29, #-40]
    e784:	ldur	x17, [x29, #-72]
    e788:	sub	x11, x11, #0x1
    e78c:	ldr	x16, [x16, x11, lsl #3]
    e790:	ldr	x17, [x17, x8, lsl #3]
    e794:	adds	x16, x17, x16
    e798:	b.cc	e82c <mpfr_add1@@Base+0xc30>  // b.lo, b.ul, b.last
    e79c:	eor	w28, w28, #0x1
    e7a0:	cbnz	w28, e864 <mpfr_add1@@Base+0xc68>
    e7a4:	eor	w24, w24, #0x1
    e7a8:	cbz	w24, e7b4 <mpfr_add1@@Base+0xbb8>
    e7ac:	mov	w28, wzr
    e7b0:	b	e82c <mpfr_add1@@Base+0xc30>
    e7b4:	ldr	x17, [x22]
    e7b8:	adds	x17, x17, x13
    e7bc:	str	x17, [x22]
    e7c0:	b.cc	e7ec <mpfr_add1@@Base+0xbf0>  // b.lo, b.ul, b.last
    e7c4:	mov	w17, #0x1                   	// #1
    e7c8:	ldur	x18, [x29, #-48]
    e7cc:	cmp	x17, x18
    e7d0:	b.gt	e7f8 <mpfr_add1@@Base+0xbfc>
    e7d4:	lsl	x18, x17, #3
    e7d8:	ldr	x0, [x22, x18]
    e7dc:	add	x17, x17, #0x1
    e7e0:	adds	x0, x0, #0x1
    e7e4:	str	x0, [x22, x18]
    e7e8:	b.cs	e7c8 <mpfr_add1@@Base+0xbcc>  // b.hs, b.nlast
    e7ec:	mov	w28, wzr
    e7f0:	mov	w24, wzr
    e7f4:	b	e82c <mpfr_add1@@Base+0xc30>
    e7f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e7fc:	ldr	x1, [x0, #2608]
    e800:	add	x0, x0, #0xa30
    e804:	blr	x1
    e808:	ldur	x17, [x29, #-80]
    e80c:	ldr	x17, [x17, x0]
    e810:	cmp	x4, x17
    e814:	b.eq	e8a4 <mpfr_add1@@Base+0xca8>  // b.none
    e818:	ldur	x17, [x29, #-48]
    e81c:	mov	w28, wzr
    e820:	mov	w24, wzr
    e824:	add	x4, x4, #0x1
    e828:	str	x15, [x22, x17, lsl #3]
    e82c:	cbz	x16, e834 <mpfr_add1@@Base+0xc38>
    e830:	cbz	w28, e860 <mpfr_add1@@Base+0xc64>
    e834:	ldur	x18, [x29, #-24]
    e838:	cmn	x16, #0x1
    e83c:	b.eq	e774 <mpfr_add1@@Base+0xb78>  // b.none
    e840:	mov	x5, x21
    e844:	cbz	w28, e774 <mpfr_add1@@Base+0xb78>
    e848:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e84c:	cbnz	w28, e864 <mpfr_add1@@Base+0xc68>
    e850:	tbnz	x11, #63, e864 <mpfr_add1@@Base+0xc68>
    e854:	cbz	w9, e8c0 <mpfr_add1@@Base+0xcc4>
    e858:	lsl	x8, x10, x12
    e85c:	cbz	x8, e8c0 <mpfr_add1@@Base+0xcc4>
    e860:	mov	w28, #0x1                   	// #1
    e864:	ldur	x20, [x29, #-80]
    e868:	ldur	x18, [x29, #-24]
    e86c:	ldur	w3, [x29, #-52]
    e870:	ldur	x26, [x29, #-48]
    e874:	mov	x5, x21
    e878:	b	dfdc <mpfr_add1@@Base+0x3e0>
    e87c:	mov	x8, x14
    e880:	b	e340 <mpfr_add1@@Base+0x744>
    e884:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    e888:	ldr	x1, [x0, #2608]
    e88c:	add	x0, x0, #0xa30
    e890:	blr	x1
    e894:	ldur	x13, [x29, #-80]
    e898:	ldr	x13, [x13, x0]
    e89c:	cmp	x4, x13
    e8a0:	b.ne	e984 <mpfr_add1@@Base+0xd88>  // b.any
    e8a4:	ldur	x0, [x29, #-24]
    e8a8:	ldur	w1, [x29, #-52]
    e8ac:	ldr	w2, [x0, #8]
    e8b0:	bl	bf90 <mpfr_overflow@plt>
    e8b4:	ldur	x20, [x29, #-80]
    e8b8:	mov	w23, w0
    e8bc:	b	e5cc <mpfr_add1@@Base+0x9d0>
    e8c0:	ldur	x8, [x29, #-40]
    e8c4:	mov	w28, #0x1                   	// #1
    e8c8:	sub	x8, x8, #0x8
    e8cc:	cbz	x11, e8e0 <mpfr_add1@@Base+0xce4>
    e8d0:	ldr	x9, [x8, x11, lsl #3]
    e8d4:	sub	x11, x11, #0x1
    e8d8:	cbz	x9, e8cc <mpfr_add1@@Base+0xcd0>
    e8dc:	b	e864 <mpfr_add1@@Base+0xc68>
    e8e0:	mov	w28, wzr
    e8e4:	b	e864 <mpfr_add1@@Base+0xc68>
    e8e8:	sub	x0, x29, #0x8
    e8ec:	mov	x1, x24
    e8f0:	stur	x14, [x29, #-40]
    e8f4:	mov	w23, w3
    e8f8:	bl	be10 <mpfr_tmp_allocate@plt>
    e8fc:	ldp	x14, x4, [x29, #-40]
    e900:	mov	w3, w23
    e904:	cmp	x22, x0
    e908:	stur	x0, [x29, #-72]
    e90c:	b.ne	dda4 <mpfr_add1@@Base+0x1a8>  // b.any
    e910:	b	ddc8 <mpfr_add1@@Base+0x1cc>
    e914:	ldur	x8, [x29, #-64]
    e918:	sub	x20, x25, x8
    e91c:	ldur	x8, [x29, #-72]
    e920:	add	x0, x22, x20, lsl #3
    e924:	cmp	x0, x8
    e928:	b.eq	e938 <mpfr_add1@@Base+0xd3c>  // b.none
    e92c:	ldp	x1, x8, [x29, #-72]
    e930:	lsl	x2, x8, #3
    e934:	bl	ba70 <memcpy@plt>
    e938:	lsl	x2, x20, #3
    e93c:	mov	x0, x22
    e940:	mov	w1, wzr
    e944:	bl	c150 <memset@plt>
    e948:	ldur	x20, [x29, #-80]
    e94c:	ldp	x4, x18, [x29, #-32]
    e950:	ldur	w3, [x29, #-52]
    e954:	ldur	x26, [x29, #-48]
    e958:	mov	x5, x21
    e95c:	b	df2c <mpfr_add1@@Base+0x330>
    e960:	ldr	w2, [x18, #8]
    e964:	mov	x0, x18
    e968:	mov	w1, w3
    e96c:	bl	bf90 <mpfr_overflow@plt>
    e970:	mov	w23, w0
    e974:	b	e5cc <mpfr_add1@@Base+0x9d0>
    e978:	mov	x26, x4
    e97c:	mov	w28, #0xffffffff            	// #-1
    e980:	b	e22c <mpfr_add1@@Base+0x630>
    e984:	ldur	x14, [x29, #-48]
    e988:	mov	w24, wzr
    e98c:	add	x4, x4, #0x1
    e990:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
    e994:	str	x13, [x22, x14, lsl #3]
    e998:	b	e45c <mpfr_add1@@Base+0x860>

000000000000e99c <mpfr_add_ui@@Base>:
    e99c:	sub	sp, sp, #0x80
    e9a0:	stp	x20, x19, [sp, #112]
    e9a4:	mov	w19, w3
    e9a8:	mov	x8, x1
    e9ac:	mov	x20, x0
    e9b0:	stp	x29, x30, [sp, #32]
    e9b4:	str	x27, [sp, #48]
    e9b8:	stp	x26, x25, [sp, #64]
    e9bc:	stp	x24, x23, [sp, #80]
    e9c0:	stp	x22, x21, [sp, #96]
    e9c4:	add	x29, sp, #0x20
    e9c8:	cbz	x2, eaec <mpfr_add_ui@@Base+0x150>
    e9cc:	ldr	x10, [x8, #16]
    e9d0:	mov	x9, #0x2                   	// #2
    e9d4:	movk	x9, #0x8000, lsl #48
    e9d8:	add	x11, x9, #0x2
    e9dc:	cmp	x10, x11
    e9e0:	b.lt	eb1c <mpfr_add_ui@@Base+0x180>  // b.tstop
    e9e4:	add	x10, x29, #0x18
    e9e8:	clz	x12, x2
    e9ec:	mov	w9, #0x40                  	// #64
    e9f0:	mov	w11, #0x1                   	// #1
    e9f4:	str	x10, [sp, #24]
    e9f8:	lsl	x10, x2, x12
    e9fc:	str	x9, [sp]
    ea00:	str	w11, [sp, #8]
    ea04:	str	x10, [x29, #24]
    ea08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ea0c:	ldr	x1, [x0, #2640]
    ea10:	add	x0, x0, #0xa50
    ea14:	blr	x1
    ea18:	mrs	x24, tpidr_el0
    ea1c:	ldr	w26, [x24, x0]
    ea20:	mov	x21, x0
    ea24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ea28:	ldr	x1, [x0, #2576]
    ea2c:	add	x0, x0, #0xa10
    ea30:	blr	x1
    ea34:	ldr	x25, [x24, x0]
    ea38:	mov	x22, x0
    ea3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ea40:	ldr	x1, [x0, #2608]
    ea44:	add	x0, x0, #0xa30
    ea48:	blr	x1
    ea4c:	ldr	x27, [x24, x0]
    ea50:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
    ea54:	mov	x23, x0
    ea58:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    ea5c:	str	x11, [x24, x0]
    ea60:	sub	x9, x9, x12
    ea64:	mov	x2, sp
    ea68:	mov	x0, x20
    ea6c:	mov	x1, x8
    ea70:	mov	w3, w19
    ea74:	str	x10, [x24, x22]
    ea78:	str	x9, [sp, #16]
    ea7c:	bl	c1e0 <mpfr_add@plt>
    ea80:	ldr	w8, [x24, x21]
    ea84:	str	x25, [x24, x22]
    ea88:	str	x27, [x24, x23]
    ea8c:	mov	w9, w0
    ea90:	orr	w8, w8, w26
    ea94:	str	w8, [x24, x21]
    ea98:	ldr	x10, [x20, #16]
    ea9c:	cmp	x10, x27
    eaa0:	b.gt	eb64 <mpfr_add_ui@@Base+0x1c8>
    eaa4:	cmp	x10, x25
    eaa8:	b.lt	eb64 <mpfr_add_ui@@Base+0x1c8>  // b.tstop
    eaac:	cbz	w9, eac8 <mpfr_add_ui@@Base+0x12c>
    eab0:	orr	w8, w8, #0x8
    eab4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    eab8:	ldr	x1, [x0, #2640]
    eabc:	add	x0, x0, #0xa50
    eac0:	blr	x1
    eac4:	str	w8, [x24, x0]
    eac8:	ldp	x20, x19, [sp, #112]
    eacc:	ldp	x22, x21, [sp, #96]
    ead0:	ldp	x24, x23, [sp, #80]
    ead4:	ldp	x26, x25, [sp, #64]
    ead8:	ldr	x27, [sp, #48]
    eadc:	ldp	x29, x30, [sp, #32]
    eae0:	mov	w0, w9
    eae4:	add	sp, sp, #0x80
    eae8:	ret
    eaec:	ldr	w3, [x8, #8]
    eaf0:	mov	x0, x20
    eaf4:	mov	w2, w19
    eaf8:	ldp	x20, x19, [sp, #112]
    eafc:	ldp	x22, x21, [sp, #96]
    eb00:	ldp	x24, x23, [sp, #80]
    eb04:	ldp	x26, x25, [sp, #64]
    eb08:	ldr	x27, [sp, #48]
    eb0c:	ldp	x29, x30, [sp, #32]
    eb10:	mov	x1, x8
    eb14:	add	sp, sp, #0x80
    eb18:	b	c690 <mpfr_set4@plt>
    eb1c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
    eb20:	cmp	x10, x11
    eb24:	b.eq	eb7c <mpfr_add_ui@@Base+0x1e0>  // b.none
    eb28:	mov	x8, #0x2                   	// #2
    eb2c:	movk	x8, #0x8000, lsl #48
    eb30:	cmp	x10, x8
    eb34:	b.ne	eb90 <mpfr_add_ui@@Base+0x1f4>  // b.any
    eb38:	str	x9, [x20, #16]
    eb3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    eb40:	ldr	x1, [x0, #2640]
    eb44:	add	x0, x0, #0xa50
    eb48:	blr	x1
    eb4c:	mrs	x8, tpidr_el0
    eb50:	ldr	w10, [x8, x0]
    eb54:	mov	w9, wzr
    eb58:	orr	w10, w10, #0x4
    eb5c:	str	w10, [x8, x0]
    eb60:	b	eac8 <mpfr_add_ui@@Base+0x12c>
    eb64:	mov	x0, x20
    eb68:	mov	w1, w9
    eb6c:	mov	w2, w19
    eb70:	bl	cb10 <mpfr_check_range@plt>
    eb74:	mov	w9, w0
    eb78:	b	eac8 <mpfr_add_ui@@Base+0x12c>
    eb7c:	str	x11, [x20, #16]
    eb80:	ldr	w8, [x8, #8]
    eb84:	mov	w9, wzr
    eb88:	str	w8, [x20, #8]
    eb8c:	b	eac8 <mpfr_add_ui@@Base+0x12c>
    eb90:	mov	x0, x20
    eb94:	mov	w3, w19
    eb98:	ldp	x20, x19, [sp, #112]
    eb9c:	ldp	x22, x21, [sp, #96]
    eba0:	ldp	x24, x23, [sp, #80]
    eba4:	ldp	x26, x25, [sp, #64]
    eba8:	ldr	x27, [sp, #48]
    ebac:	ldp	x29, x30, [sp, #32]
    ebb0:	mov	x1, x2
    ebb4:	mov	x2, xzr
    ebb8:	add	sp, sp, #0x80
    ebbc:	b	c5e0 <mpfr_set_ui_2exp@plt>

000000000000ebc0 <mpfr_agm@@Base>:
    ebc0:	stp	x29, x30, [sp, #-96]!
    ebc4:	stp	x28, x27, [sp, #16]
    ebc8:	stp	x26, x25, [sp, #32]
    ebcc:	stp	x24, x23, [sp, #48]
    ebd0:	stp	x22, x21, [sp, #64]
    ebd4:	stp	x20, x19, [sp, #80]
    ebd8:	mov	x29, sp
    ebdc:	sub	sp, sp, #0x130
    ebe0:	ldr	x8, [x2, #16]
    ebe4:	mov	x11, #0x2                   	// #2
    ebe8:	movk	x11, #0x8000, lsl #48
    ebec:	add	x10, x11, #0x2
    ebf0:	mov	x21, x2
    ebf4:	mov	x23, x1
    ebf8:	cmp	x8, x10
    ebfc:	mov	x19, x0
    ec00:	b.lt	f458 <mpfr_agm@@Base+0x898>  // b.tstop
    ec04:	ldr	x9, [x23, #16]
    ec08:	cmp	x9, x10
    ec0c:	b.lt	f464 <mpfr_agm@@Base+0x8a4>  // b.tstop
    ec10:	ldr	w8, [x21, #8]
    ec14:	tbnz	w8, #31, f560 <mpfr_agm@@Base+0x9a0>
    ec18:	ldr	w8, [x23, #8]
    ec1c:	tbnz	w8, #31, f560 <mpfr_agm@@Base+0x9a0>
    ec20:	ldr	x24, [x19]
    ec24:	mov	w25, w3
    ec28:	subs	x20, x24, #0x1
    ec2c:	b.eq	ec40 <mpfr_agm@@Base+0x80>  // b.none
    ec30:	b.le	f4b0 <mpfr_agm@@Base+0x8f0>
    ec34:	clz	x8, x20
    ec38:	mov	w9, #0x40                  	// #64
    ec3c:	sub	x20, x9, x8
    ec40:	mov	w2, #0x1                   	// #1
    ec44:	mov	x0, x21
    ec48:	mov	x1, x23
    ec4c:	mov	w27, #0x1                   	// #1
    ec50:	bl	c980 <mpfr_cmp3@plt>
    ec54:	cbz	w0, f498 <mpfr_agm@@Base+0x8d8>
    ec58:	sub	x8, x29, #0x28
    ec5c:	stur	x19, [x8, #-256]
    ec60:	add	x8, x20, x24
    ec64:	cmp	w0, #0x0
    ec68:	add	x9, x8, #0xe
    ec6c:	add	x20, x8, #0xf
    ec70:	csel	x22, x23, x21, gt
    ec74:	csel	x21, x21, x23, gt
    ec78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ec7c:	ldr	x1, [x0, #2640]
    ec80:	add	x0, x0, #0xa50
    ec84:	blr	x1
    ec88:	mrs	x28, tpidr_el0
    ec8c:	ldr	w8, [x28, x0]
    ec90:	sub	x10, x29, #0x10
    ec94:	stur	w8, [x10, #-256]
    ec98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ec9c:	ldr	x1, [x0, #2576]
    eca0:	add	x0, x0, #0xa10
    eca4:	blr	x1
    eca8:	ldr	x10, [x28, x0]
    ecac:	sub	x11, x29, #0x18
    ecb0:	mov	x8, x0
    ecb4:	stur	x10, [x11, #-256]
    ecb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ecbc:	ldr	x1, [x0, #2608]
    ecc0:	add	x0, x0, #0xa30
    ecc4:	blr	x1
    ecc8:	ldr	x10, [x28, x0]
    eccc:	sub	x11, x29, #0x20
    ecd0:	cmp	w25, #0x0
    ecd4:	sub	x12, x29, #0xc
    ecd8:	stur	x10, [x11, #-256]
    ecdc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    ece0:	str	x10, [x28, x8]
    ece4:	cinc	x8, x24, eq  // eq = none
    ece8:	sub	x10, x29, #0x8
    ecec:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
    ecf0:	stur	x8, [x10, #-256]
    ecf4:	mov	w8, #0x40                  	// #64
    ecf8:	sub	x10, x29, #0x30
    ecfc:	stur	xzr, [x29, #-256]
    ed00:	stur	xzr, [x29, #-208]
    ed04:	stur	w25, [x12, #-256]
    ed08:	str	x11, [x28, x0]
    ed0c:	stur	x8, [x10, #-256]
    ed10:	add	x8, x9, #0x3f
    ed14:	cmp	x9, #0x0
    ed18:	csel	x8, x8, x9, lt  // lt = tstop
    ed1c:	asr	x8, x8, #6
    ed20:	lsl	x8, x8, #3
    ed24:	add	x26, x8, #0x8
    ed28:	cmp	x26, #0x4, lsl #12
    ed2c:	b.hi	f2d4 <mpfr_agm@@Base+0x714>  // b.pmore
    ed30:	add	x9, x26, #0xf
    ed34:	mov	x8, sp
    ed38:	and	x9, x9, #0xfffffffffffffff0
    ed3c:	sub	x8, x8, x9
    ed40:	mov	sp, x8
    ed44:	stur	x8, [x29, #-16]
    ed48:	mov	x8, sp
    ed4c:	sub	x8, x8, x9
    ed50:	stur	w27, [x29, #-32]
    ed54:	mov	sp, x8
    ed58:	stp	x8, x20, [x29, #-48]
    ed5c:	mov	x8, sp
    ed60:	sub	x8, x8, x9
    ed64:	stur	w27, [x29, #-64]
    ed68:	mov	sp, x8
    ed6c:	stp	x8, x20, [x29, #-80]
    ed70:	mov	x8, sp
    ed74:	sub	x0, x8, x9
    ed78:	stur	x20, [x29, #-104]
    ed7c:	stur	w27, [x29, #-96]
    ed80:	mov	sp, x0
    ed84:	stur	x20, [x29, #-136]
    ed88:	stur	x0, [x29, #-112]
    ed8c:	stur	w27, [x29, #-128]
    ed90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ed94:	ldr	x1, [x0, #2640]
    ed98:	add	x0, x0, #0xa50
    ed9c:	blr	x1
    eda0:	mov	x26, x0
    eda4:	str	wzr, [x28, x0]
    eda8:	sub	x0, x29, #0x28
    edac:	mov	x1, x22
    edb0:	mov	x2, x21
    edb4:	mov	w3, wzr
    edb8:	bl	bda0 <mpfr_mul@plt>
    edbc:	sub	x0, x29, #0x48
    edc0:	mov	x1, x22
    edc4:	mov	x2, x21
    edc8:	mov	w3, wzr
    edcc:	mov	x19, x22
    edd0:	mov	x22, x21
    edd4:	bl	c1e0 <mpfr_add@plt>
    edd8:	ldr	w21, [x28, x26]
    eddc:	tst	w21, #0x3
    ede0:	b.eq	ef60 <mpfr_agm@@Base+0x3a0>  // b.none
    ede4:	ldur	x8, [x29, #-256]
    ede8:	cbnz	x8, ee50 <mpfr_agm@@Base+0x290>
    edec:	ldr	x24, [x19, #16]
    edf0:	ldr	x23, [x22, #16]
    edf4:	tbnz	w21, #1, ee74 <mpfr_agm@@Base+0x2b4>
    edf8:	cmp	x23, #0x0
    edfc:	b.gt	ef04 <mpfr_agm@@Base+0x344>
    ee00:	cmp	x24, x23
    ee04:	b.gt	ef04 <mpfr_agm@@Base+0x344>
    ee08:	add	x8, x24, x23
    ee0c:	mov	x9, #0xc000000000000003    	// #-4611686018427387901
    ee10:	mov	x10, #0x4                   	// #4
    ee14:	sub	x9, x9, x8
    ee18:	movk	x10, #0xc000, lsl #48
    ee1c:	sub	x8, x10, x8
    ee20:	cmp	x9, #0x0
    ee24:	csel	x8, x8, x9, lt  // lt = tstop
    ee28:	cmp	x9, #0x1
    ee2c:	asr	x21, x8, #1
    ee30:	b.gt	eebc <mpfr_agm@@Base+0x2fc>
    ee34:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ee38:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ee3c:	mov	w1, #0xc3                  	// #195
    ee40:	add	x0, x0, #0xc10
    ee44:	add	x2, x2, #0xcde
    ee48:	bl	cb20 <mpfr_assert_fail@plt>
    ee4c:	b	eebc <mpfr_agm@@Base+0x2fc>
    ee50:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ee54:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ee58:	mov	w1, #0x8d                  	// #141
    ee5c:	add	x0, x0, #0xc10
    ee60:	add	x2, x2, #0xc1e
    ee64:	bl	cb20 <mpfr_assert_fail@plt>
    ee68:	ldr	x24, [x19, #16]
    ee6c:	ldr	x23, [x22, #16]
    ee70:	tbz	w21, #1, edf8 <mpfr_agm@@Base+0x238>
    ee74:	add	x8, x23, x24
    ee78:	mov	x9, #0x4000000000000000    	// #4611686018427387904
    ee7c:	cmp	x8, x9
    ee80:	b.lt	eea0 <mpfr_agm@@Base+0x2e0>  // b.tstop
    ee84:	mov	x9, #0x2                   	// #2
    ee88:	movk	x9, #0xc000, lsl #48
    ee8c:	add	x8, x8, x9
    ee90:	cmp	x8, #0x0
    ee94:	cinc	x8, x8, lt  // lt = tstop
    ee98:	neg	x21, x8, asr #1
    ee9c:	b	eebc <mpfr_agm@@Base+0x2fc>
    eea0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    eea4:	cmp	x23, x8
    eea8:	b.ne	ef20 <mpfr_agm@@Base+0x360>  // b.any
    eeac:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
    eeb0:	cmp	x24, x8
    eeb4:	b.le	ef44 <mpfr_agm@@Base+0x384>
    eeb8:	mov	x21, #0xffffffffffffffff    	// #-1
    eebc:	ldr	x8, [x19]
    eec0:	add	x9, x21, x24
    eec4:	stur	x21, [x29, #-256]
    eec8:	stur	x8, [x29, #-168]
    eecc:	ldr	w8, [x19, #8]
    eed0:	stur	w8, [x29, #-160]
    eed4:	ldr	x8, [x19, #24]
    eed8:	stp	x9, x8, [x29, #-152]
    eedc:	ldr	x8, [x22]
    eee0:	add	x9, x21, x23
    eee4:	sub	x21, x29, #0xc8
    eee8:	stur	x8, [x29, #-200]
    eeec:	ldr	w8, [x22, #8]
    eef0:	stur	w8, [x29, #-192]
    eef4:	ldr	x8, [x22, #24]
    eef8:	sub	x22, x29, #0xa8
    eefc:	stp	x9, x8, [x29, #-184]
    ef00:	b	ed90 <mpfr_agm@@Base+0x1d0>
    ef04:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ef08:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ef0c:	mov	w1, #0xc1                  	// #193
    ef10:	add	x0, x0, #0xc10
    ef14:	add	x2, x2, #0xcca
    ef18:	bl	cb20 <mpfr_assert_fail@plt>
    ef1c:	b	ee08 <mpfr_agm@@Base+0x248>
    ef20:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ef24:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ef28:	mov	w1, #0xaf                  	// #175
    ef2c:	add	x0, x0, #0xc10
    ef30:	add	x2, x2, #0xc2b
    ef34:	bl	cb20 <mpfr_assert_fail@plt>
    ef38:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
    ef3c:	cmp	x24, x8
    ef40:	b.gt	eeb8 <mpfr_agm@@Base+0x2f8>
    ef44:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ef48:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    ef4c:	mov	w1, #0xb3                  	// #179
    ef50:	add	x0, x0, #0xc10
    ef54:	add	x2, x2, #0xc7b
    ef58:	bl	cb20 <mpfr_assert_fail@plt>
    ef5c:	b	eeb8 <mpfr_agm@@Base+0x2f8>
    ef60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    ef64:	ldr	x1, [x0, #2640]
    ef68:	add	x0, x0, #0xa50
    ef6c:	blr	x1
    ef70:	str	wzr, [x28, x0]
    ef74:	sub	x0, x29, #0x28
    ef78:	sub	x1, x29, #0x28
    ef7c:	mov	w2, wzr
    ef80:	bl	c920 <mpfr_sqrt@plt>
    ef84:	sub	x0, x29, #0x48
    ef88:	sub	x1, x29, #0x48
    ef8c:	mov	w2, #0x1                   	// #1
    ef90:	mov	w3, wzr
    ef94:	bl	c8f0 <mpfr_div_2ui@plt>
    ef98:	sub	x0, x29, #0x28
    ef9c:	sub	x1, x29, #0x48
    efa0:	sub	x2, x29, #0xd8
    efa4:	bl	be00 <mpfr_cmp2@plt>
    efa8:	mov	x24, xzr
    efac:	mov	w26, wzr
    efb0:	cbz	w0, f1fc <mpfr_agm@@Base+0x63c>
    efb4:	ldur	x8, [x29, #-216]
    efb8:	sub	x23, x20, #0x2
    efbc:	mov	w21, #0x39                  	// #57
    efc0:	mov	x27, x24
    efc4:	cmp	x8, x23
    efc8:	mov	w25, #0x1                   	// #1
    efcc:	b.gt	f208 <mpfr_agm@@Base+0x648>
    efd0:	add	x8, x20, #0x1
    efd4:	add	x9, x20, #0x2
    efd8:	cmp	x8, #0x0
    efdc:	csinc	x8, x9, x20, lt  // lt = tstop
    efe0:	mov	x24, xzr
    efe4:	asr	x26, x8, #1
    efe8:	mov	w25, #0x1                   	// #1
    efec:	sub	x0, x29, #0x88
    eff0:	sub	x1, x29, #0x28
    eff4:	sub	x2, x29, #0x48
    eff8:	mov	w3, wzr
    effc:	bl	c1e0 <mpfr_add@plt>
    f000:	sub	x0, x29, #0x88
    f004:	sub	x1, x29, #0x88
    f008:	mov	w2, #0x1                   	// #1
    f00c:	mov	w3, wzr
    f010:	bl	c8f0 <mpfr_div_2ui@plt>
    f014:	ldur	x8, [x29, #-216]
    f018:	cmp	x20, x8, lsl #2
    f01c:	b.ge	f0bc <mpfr_agm@@Base+0x4fc>  // b.tcont
    f020:	sub	x0, x29, #0xf8
    f024:	mov	x1, x26
    f028:	bl	ca60 <mpfr_init2@plt>
    f02c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f030:	ldr	x1, [x0, #2640]
    f034:	add	x0, x0, #0xa50
    f038:	blr	x1
    f03c:	mov	x27, x0
    f040:	str	wzr, [x28, x0]
    f044:	sub	x0, x29, #0xf8
    f048:	sub	x1, x29, #0x48
    f04c:	sub	x2, x29, #0x28
    f050:	mov	w3, wzr
    f054:	bl	bbc0 <mpfr_sub@plt>
    f058:	sub	x0, x29, #0xf8
    f05c:	sub	x1, x29, #0xf8
    f060:	mov	w2, wzr
    f064:	bl	c3f0 <mpfr_sqr@plt>
    f068:	sub	x0, x29, #0xf8
    f06c:	sub	x1, x29, #0xf8
    f070:	mov	w2, #0x4                   	// #4
    f074:	mov	w3, wzr
    f078:	bl	c8f0 <mpfr_div_2ui@plt>
    f07c:	sub	x0, x29, #0xf8
    f080:	sub	x1, x29, #0xf8
    f084:	sub	x2, x29, #0x88
    f088:	mov	w3, wzr
    f08c:	bl	c610 <mpfr_div@plt>
    f090:	ldrb	w8, [x28, x27]
    f094:	tbz	w8, #0, f190 <mpfr_agm@@Base+0x5d0>
    f098:	sub	x0, x29, #0xf8
    f09c:	bl	c0b0 <mpfr_clear@plt>
    f0a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f0a4:	ldr	x1, [x0, #2640]
    f0a8:	add	x0, x0, #0xa50
    f0ac:	blr	x1
    f0b0:	ldr	w8, [x28, x0]
    f0b4:	and	w8, w8, #0x3e
    f0b8:	str	w8, [x28, x0]
    f0bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f0c0:	ldr	x1, [x0, #2640]
    f0c4:	add	x0, x0, #0xa50
    f0c8:	blr	x1
    f0cc:	mov	x27, x0
    f0d0:	str	wzr, [x28, x0]
    f0d4:	sub	x0, x29, #0x68
    f0d8:	sub	x1, x29, #0x28
    f0dc:	sub	x2, x29, #0x48
    f0e0:	mov	w3, wzr
    f0e4:	bl	bda0 <mpfr_mul@plt>
    f0e8:	ldr	w8, [x28, x27]
    f0ec:	tbnz	w8, #1, f138 <mpfr_agm@@Base+0x578>
    f0f0:	sub	x0, x29, #0x28
    f0f4:	sub	x1, x29, #0x68
    f0f8:	mov	w2, wzr
    f0fc:	bl	c920 <mpfr_sqrt@plt>
    f100:	sub	x0, x29, #0x48
    f104:	sub	x1, x29, #0x88
    f108:	bl	c490 <mpfr_swap@plt>
    f10c:	sub	x0, x29, #0x28
    f110:	sub	x1, x29, #0x48
    f114:	sub	x2, x29, #0xd8
    f118:	add	x25, x25, #0x1
    f11c:	bl	be00 <mpfr_cmp2@plt>
    f120:	mov	x27, xzr
    f124:	cbz	w0, f1b8 <mpfr_agm@@Base+0x5f8>
    f128:	ldur	x8, [x29, #-216]
    f12c:	cmp	x8, x23
    f130:	b.le	efec <mpfr_agm@@Base+0x42c>
    f134:	b	f1b8 <mpfr_agm@@Base+0x5f8>
    f138:	ldur	x9, [x29, #-24]
    f13c:	ldur	x10, [x29, #-56]
    f140:	mov	x12, #0x2                   	// #2
    f144:	movk	x12, #0xc000, lsl #48
    f148:	add	x11, x9, x10
    f14c:	add	x11, x11, x12
    f150:	cmp	x11, #0x0
    f154:	cinc	x11, x11, lt  // lt = tstop
    f158:	asr	x11, x11, #1
    f15c:	sub	x9, x9, x11
    f160:	sub	x10, x10, x11
    f164:	stur	x9, [x29, #-24]
    f168:	mov	w9, #0x3d                  	// #61
    f16c:	sub	x24, x24, x11
    f170:	stur	x10, [x29, #-56]
    f174:	and	w8, w8, w9
    f178:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f17c:	ldr	x1, [x0, #2640]
    f180:	add	x0, x0, #0xa50
    f184:	blr	x1
    f188:	str	w8, [x28, x0]
    f18c:	b	efec <mpfr_agm@@Base+0x42c>
    f190:	sub	x0, x29, #0x48
    f194:	sub	x1, x29, #0x88
    f198:	sub	x2, x29, #0xf8
    f19c:	mov	w3, wzr
    f1a0:	bl	bbc0 <mpfr_sub@plt>
    f1a4:	ldur	x8, [x29, #-120]
    f1a8:	ldur	x9, [x29, #-56]
    f1ac:	sub	x0, x29, #0xf8
    f1b0:	sub	x27, x8, x9
    f1b4:	bl	c0b0 <mpfr_clear@plt>
    f1b8:	add	x8, x25, x25, lsl #3
    f1bc:	lsl	x8, x8, #1
    f1c0:	cmn	x8, #0x32
    f1c4:	add	x8, x8, #0x32
    f1c8:	cset	w26, eq  // eq = none
    f1cc:	cmn	x25, #0x1
    f1d0:	clz	x21, x8
    f1d4:	b.eq	f32c <mpfr_agm@@Base+0x76c>  // b.none
    f1d8:	cmn	x25, #0x2
    f1dc:	b.ne	f208 <mpfr_agm@@Base+0x648>  // b.any
    f1e0:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f1e4:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f1e8:	mov	w1, #0x11a                 	// #282
    f1ec:	add	x0, x0, #0xc10
    f1f0:	add	x2, x2, #0xcea
    f1f4:	bl	cb20 <mpfr_assert_fail@plt>
    f1f8:	b	f208 <mpfr_agm@@Base+0x648>
    f1fc:	mov	w21, #0x39                  	// #57
    f200:	mov	x27, x24
    f204:	mov	w25, #0x1                   	// #1
    f208:	add	x8, x25, #0x1
    f20c:	clz	x8, x8
    f210:	mov	w9, #0x40                  	// #64
    f214:	sub	x8, x9, x8
    f218:	add	x10, x20, #0x3
    f21c:	cmp	x20, #0x0
    f220:	ldur	x9, [x29, #-56]
    f224:	csel	x10, x10, x20, lt  // lt = tstop
    f228:	cmp	x8, x10, asr #2
    f22c:	mov	x8, #0x2                   	// #2
    f230:	movk	x8, #0x8000, lsl #48
    f234:	add	x8, x8, #0x2
    f238:	b.gt	f288 <mpfr_agm@@Base+0x6c8>
    f23c:	cmp	x9, x8
    f240:	b.lt	f288 <mpfr_agm@@Base+0x6c8>  // b.tstop
    f244:	ldur	x8, [x29, #-72]
    f248:	sub	x9, x21, #0x40
    f24c:	ldur	x0, [x29, #-48]
    f250:	sub	x10, x8, #0x1
    f254:	add	x8, x8, #0x3e
    f258:	cmp	x10, #0x0
    f25c:	csel	x8, x8, x10, lt  // lt = tstop
    f260:	cmp	w26, #0x0
    f264:	asr	x8, x8, #6
    f268:	csel	x9, xzr, x9, ne  // ne = any
    f26c:	add	x1, x8, #0x1
    f270:	add	x8, x9, x20
    f274:	sub	x2, x8, x27
    f278:	sub	x8, x29, #0x8
    f27c:	ldur	x3, [x8, #-256]
    f280:	bl	c370 <mpfr_round_p@plt>
    f284:	cbnz	w0, f350 <mpfr_agm@@Base+0x790>
    f288:	sub	x9, x29, #0x30
    f28c:	mov	x8, #0x2                   	// #2
    f290:	ldur	x21, [x9, #-256]
    f294:	movk	x8, #0x8000, lsl #48
    f298:	sub	x8, x8, x20
    f29c:	sub	x8, x8, #0x103
    f2a0:	cmp	x21, x8
    f2a4:	b.gt	f334 <mpfr_agm@@Base+0x774>
    f2a8:	add	x20, x20, x21
    f2ac:	cmp	x20, #0x0
    f2b0:	cinc	x8, x20, lt  // lt = tstop
    f2b4:	asr	x8, x8, #1
    f2b8:	sub	x9, x29, #0x30
    f2bc:	stur	x8, [x9, #-256]
    f2c0:	sub	x9, x20, #0x1
    f2c4:	mov	w27, #0x1                   	// #1
    f2c8:	mov	x21, x22
    f2cc:	mov	x22, x19
    f2d0:	b	ed10 <mpfr_agm@@Base+0x150>
    f2d4:	sub	x0, x29, #0xd0
    f2d8:	mov	x1, x26
    f2dc:	bl	be10 <mpfr_tmp_allocate@plt>
    f2e0:	stur	x0, [x29, #-16]
    f2e4:	sub	x0, x29, #0xd0
    f2e8:	mov	x1, x26
    f2ec:	stur	x20, [x29, #-40]
    f2f0:	stur	w27, [x29, #-32]
    f2f4:	bl	be10 <mpfr_tmp_allocate@plt>
    f2f8:	stur	x0, [x29, #-48]
    f2fc:	sub	x0, x29, #0xd0
    f300:	mov	x1, x26
    f304:	stur	x20, [x29, #-72]
    f308:	stur	w27, [x29, #-64]
    f30c:	bl	be10 <mpfr_tmp_allocate@plt>
    f310:	stur	x0, [x29, #-80]
    f314:	sub	x0, x29, #0xd0
    f318:	mov	x1, x26
    f31c:	stur	x20, [x29, #-104]
    f320:	stur	w27, [x29, #-96]
    f324:	bl	be10 <mpfr_tmp_allocate@plt>
    f328:	b	ed84 <mpfr_agm@@Base+0x1c4>
    f32c:	mov	x8, xzr
    f330:	b	f218 <mpfr_agm@@Base+0x658>
    f334:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f338:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f33c:	mov	w1, #0x11f                 	// #287
    f340:	add	x0, x0, #0xc10
    f344:	add	x2, x2, #0xcf6
    f348:	bl	cb20 <mpfr_assert_fail@plt>
    f34c:	b	f2a8 <mpfr_agm@@Base+0x6e8>
    f350:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f354:	ldr	x1, [x0, #2640]
    f358:	add	x0, x0, #0xa50
    f35c:	blr	x1
    f360:	ldr	w8, [x28, x0]
    f364:	mov	w9, #0x37                  	// #55
    f368:	ldur	x21, [x29, #-256]
    f36c:	tst	w8, w9
    f370:	sub	x9, x29, #0xc
    f374:	ldur	w20, [x9, #-256]
    f378:	sub	x9, x29, #0x18
    f37c:	ldur	x22, [x9, #-256]
    f380:	sub	x9, x29, #0x28
    f384:	ldur	x19, [x9, #-256]
    f388:	b.ne	f4cc <mpfr_agm@@Base+0x90c>  // b.any
    f38c:	ldur	w3, [x29, #-64]
    f390:	sub	x1, x29, #0x48
    f394:	mov	x0, x19
    f398:	mov	w2, w20
    f39c:	bl	c690 <mpfr_set4@plt>
    f3a0:	ldr	x8, [x19, #16]
    f3a4:	add	x9, x24, x21
    f3a8:	mov	w21, w0
    f3ac:	sub	x9, x8, x9
    f3b0:	str	x9, [x19, #16]
    f3b4:	ldur	x8, [x29, #-208]
    f3b8:	cbnz	x8, f4f8 <mpfr_agm@@Base+0x938>
    f3bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f3c0:	ldr	x1, [x0, #2640]
    f3c4:	add	x0, x0, #0xa50
    f3c8:	blr	x1
    f3cc:	sub	x8, x29, #0x10
    f3d0:	ldur	w8, [x8, #-256]
    f3d4:	str	w8, [x28, x0]
    f3d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f3dc:	ldr	x1, [x0, #2576]
    f3e0:	add	x0, x0, #0xa10
    f3e4:	blr	x1
    f3e8:	str	x22, [x28, x0]
    f3ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f3f0:	ldr	x1, [x0, #2608]
    f3f4:	add	x0, x0, #0xa30
    f3f8:	blr	x1
    f3fc:	sub	x10, x29, #0x20
    f400:	ldur	x10, [x10, #-256]
    f404:	cmp	x9, x10
    f408:	str	x10, [x28, x0]
    f40c:	b.gt	f508 <mpfr_agm@@Base+0x948>
    f410:	cmp	x9, x22
    f414:	b.lt	f508 <mpfr_agm@@Base+0x948>  // b.tstop
    f418:	cbz	w21, f434 <mpfr_agm@@Base+0x874>
    f41c:	orr	w8, w8, #0x8
    f420:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f424:	ldr	x1, [x0, #2640]
    f428:	add	x0, x0, #0xa50
    f42c:	blr	x1
    f430:	str	w8, [x28, x0]
    f434:	mov	w0, w21
    f438:	mov	sp, x29
    f43c:	ldp	x20, x19, [sp, #80]
    f440:	ldp	x22, x21, [sp, #64]
    f444:	ldp	x24, x23, [sp, #48]
    f448:	ldp	x26, x25, [sp, #32]
    f44c:	ldp	x28, x27, [sp, #16]
    f450:	ldp	x29, x30, [sp], #96
    f454:	ret
    f458:	cmp	x8, x11
    f45c:	b.eq	f560 <mpfr_agm@@Base+0x9a0>  // b.none
    f460:	ldr	x9, [x23, #16]
    f464:	cmp	x9, x11
    f468:	b.eq	f560 <mpfr_agm@@Base+0x9a0>  // b.none
    f46c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    f470:	cmp	x8, x10
    f474:	b.eq	f520 <mpfr_agm@@Base+0x960>  // b.none
    f478:	cmp	x9, x10
    f47c:	b.eq	f520 <mpfr_agm@@Base+0x960>  // b.none
    f480:	mov	w8, #0x1                   	// #1
    f484:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f488:	mov	w21, wzr
    f48c:	str	w8, [x19, #8]
    f490:	str	x9, [x19, #16]
    f494:	b	f434 <mpfr_agm@@Base+0x874>
    f498:	ldr	w3, [x21, #8]
    f49c:	mov	x0, x19
    f4a0:	mov	x1, x21
    f4a4:	mov	w2, w25
    f4a8:	bl	c690 <mpfr_set4@plt>
    f4ac:	b	f518 <mpfr_agm@@Base+0x958>
    f4b0:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f4b4:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f4b8:	add	x0, x0, #0xc10
    f4bc:	add	x2, x2, #0xc16
    f4c0:	mov	w1, #0x5f                  	// #95
    f4c4:	bl	cb20 <mpfr_assert_fail@plt>
    f4c8:	b	ec34 <mpfr_agm@@Base+0x74>
    f4cc:	tbnz	w8, #1, f58c <mpfr_agm@@Base+0x9cc>
    f4d0:	tbnz	w8, #0, f5bc <mpfr_agm@@Base+0x9fc>
    f4d4:	tbnz	w8, #5, f5ec <mpfr_agm@@Base+0xa2c>
    f4d8:	tbz	w8, #2, f38c <mpfr_agm@@Base+0x7cc>
    f4dc:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f4e0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f4e4:	add	x0, x0, #0xc10
    f4e8:	add	x2, x2, #0xd94
    f4ec:	mov	w1, #0x12a                 	// #298
    f4f0:	bl	cb20 <mpfr_assert_fail@plt>
    f4f4:	b	f38c <mpfr_agm@@Base+0x7cc>
    f4f8:	mov	x0, x8
    f4fc:	bl	c400 <mpfr_tmp_free@plt>
    f500:	ldr	x9, [x19, #16]
    f504:	b	f3bc <mpfr_agm@@Base+0x7fc>
    f508:	mov	x0, x19
    f50c:	mov	w1, w21
    f510:	mov	w2, w20
    f514:	bl	cb10 <mpfr_check_range@plt>
    f518:	mov	w21, w0
    f51c:	b	f434 <mpfr_agm@@Base+0x874>
    f520:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    f524:	cmp	x8, x10
    f528:	b.eq	f560 <mpfr_agm@@Base+0x9a0>  // b.none
    f52c:	cmp	x9, x10
    f530:	b.eq	f560 <mpfr_agm@@Base+0x9a0>  // b.none
    f534:	ldr	w8, [x21, #8]
    f538:	cmp	w8, #0x1
    f53c:	b.lt	f560 <mpfr_agm@@Base+0x9a0>  // b.tstop
    f540:	ldr	w9, [x23, #8]
    f544:	cmp	w9, #0x1
    f548:	b.lt	f560 <mpfr_agm@@Base+0x9a0>  // b.tstop
    f54c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f550:	mov	w21, wzr
    f554:	str	x9, [x19, #16]
    f558:	str	w8, [x19, #8]
    f55c:	b	f434 <mpfr_agm@@Base+0x874>
    f560:	str	x11, [x19, #16]
    f564:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f568:	ldr	x1, [x0, #2640]
    f56c:	add	x0, x0, #0xa50
    f570:	blr	x1
    f574:	mrs	x8, tpidr_el0
    f578:	ldr	w9, [x8, x0]
    f57c:	mov	w21, wzr
    f580:	orr	w9, w9, #0x4
    f584:	str	w9, [x8, x0]
    f588:	b	f434 <mpfr_agm@@Base+0x874>
    f58c:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f590:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f594:	add	x0, x0, #0xc10
    f598:	add	x2, x2, #0xd39
    f59c:	mov	w1, #0x127                 	// #295
    f5a0:	bl	cb20 <mpfr_assert_fail@plt>
    f5a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f5a8:	ldr	x1, [x0, #2640]
    f5ac:	add	x0, x0, #0xa50
    f5b0:	blr	x1
    f5b4:	ldr	w8, [x28, x0]
    f5b8:	tbz	w8, #0, f4d4 <mpfr_agm@@Base+0x914>
    f5bc:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f5c0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f5c4:	add	x0, x0, #0xc10
    f5c8:	add	x2, x2, #0xd57
    f5cc:	mov	w1, #0x128                 	// #296
    f5d0:	bl	cb20 <mpfr_assert_fail@plt>
    f5d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f5d8:	ldr	x1, [x0, #2640]
    f5dc:	add	x0, x0, #0xa50
    f5e0:	blr	x1
    f5e4:	ldr	w8, [x28, x0]
    f5e8:	tbz	w8, #5, f4d8 <mpfr_agm@@Base+0x918>
    f5ec:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f5f0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
    f5f4:	add	x0, x0, #0xc10
    f5f8:	add	x2, x2, #0xd75
    f5fc:	mov	w1, #0x129                 	// #297
    f600:	bl	cb20 <mpfr_assert_fail@plt>
    f604:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f608:	ldr	x1, [x0, #2640]
    f60c:	add	x0, x0, #0xa50
    f610:	blr	x1
    f614:	ldr	w8, [x28, x0]
    f618:	tbz	w8, #2, f38c <mpfr_agm@@Base+0x7cc>
    f61c:	b	f4dc <mpfr_agm@@Base+0x91c>

000000000000f620 <mpfr_clear@@Base>:
    f620:	stp	x29, x30, [sp, #-32]!
    f624:	str	x19, [sp, #16]
    f628:	mov	x19, x0
    f62c:	ldr	x0, [x0, #24]
    f630:	mov	x29, sp
    f634:	ldr	x8, [x0, #-8]!
    f638:	lsl	x8, x8, #3
    f63c:	add	x1, x8, #0x8
    f640:	bl	cc00 <mpfr_free_func@plt>
    f644:	str	xzr, [x19, #24]
    f648:	ldr	x19, [sp, #16]
    f64c:	ldp	x29, x30, [sp], #32
    f650:	ret

000000000000f654 <mpfr_cmp3@@Base>:
    f654:	stp	x29, x30, [sp, #-16]!
    f658:	ldr	x10, [x0, #16]
    f65c:	ldr	w9, [x1, #8]
    f660:	mov	x8, #0x2                   	// #2
    f664:	movk	x8, #0x8000, lsl #48
    f668:	add	x12, x8, #0x2
    f66c:	cmp	x10, x12
    f670:	mul	w9, w9, w2
    f674:	mov	x29, sp
    f678:	b.lt	f774 <mpfr_cmp3@@Base+0x120>  // b.tstop
    f67c:	ldr	x11, [x1, #16]
    f680:	cmp	x11, x12
    f684:	b.lt	f780 <mpfr_cmp3@@Base+0x12c>  // b.tstop
    f688:	ldr	w8, [x0, #8]
    f68c:	cmp	w9, w8
    f690:	b.ne	f6a0 <mpfr_cmp3@@Base+0x4c>  // b.any
    f694:	cmp	x10, x11
    f698:	b.le	f6ac <mpfr_cmp3@@Base+0x58>
    f69c:	mov	w8, w9
    f6a0:	mov	w0, w8
    f6a4:	ldp	x29, x30, [sp], #16
    f6a8:	ret
    f6ac:	b.ge	f6c0 <mpfr_cmp3@@Base+0x6c>  // b.tcont
    f6b0:	neg	w8, w9
    f6b4:	mov	w0, w8
    f6b8:	ldp	x29, x30, [sp], #16
    f6bc:	ret
    f6c0:	ldr	x10, [x0]
    f6c4:	ldr	x11, [x1]
    f6c8:	ldr	x8, [x0, #24]
    f6cc:	sub	x12, x10, #0x1
    f6d0:	add	x10, x10, #0x3e
    f6d4:	cmp	x12, #0x0
    f6d8:	csel	x10, x10, x12, lt  // lt = tstop
    f6dc:	sub	x13, x11, #0x1
    f6e0:	asr	x12, x10, #6
    f6e4:	ldr	x10, [x1, #24]
    f6e8:	add	x11, x11, #0x3e
    f6ec:	cmp	x13, #0x0
    f6f0:	csel	x11, x11, x13, lt  // lt = tstop
    f6f4:	asr	x11, x11, #6
    f6f8:	orr	x13, x11, x12
    f6fc:	tbnz	x13, #63, f724 <mpfr_cmp3@@Base+0xd0>
    f700:	ldr	x13, [x8, x12, lsl #3]
    f704:	ldr	x14, [x10, x11, lsl #3]
    f708:	cmp	x13, x14
    f70c:	b.hi	f754 <mpfr_cmp3@@Base+0x100>  // b.pmore
    f710:	b.cc	f6b0 <mpfr_cmp3@@Base+0x5c>  // b.lo, b.ul, b.last
    f714:	sub	x12, x12, #0x1
    f718:	sub	x11, x11, #0x1
    f71c:	orr	x13, x11, x12
    f720:	tbz	x13, #63, f700 <mpfr_cmp3@@Base+0xac>
    f724:	tbnz	x12, #63, f73c <mpfr_cmp3@@Base+0xe8>
    f728:	ldr	x13, [x8, x12, lsl #3]
    f72c:	cbnz	x13, f754 <mpfr_cmp3@@Base+0x100>
    f730:	cmp	x12, #0x0
    f734:	sub	x12, x12, #0x1
    f738:	b.gt	f728 <mpfr_cmp3@@Base+0xd4>
    f73c:	tbnz	x11, #63, f764 <mpfr_cmp3@@Base+0x110>
    f740:	ldr	x8, [x10, x11, lsl #3]
    f744:	cbnz	x8, f6b0 <mpfr_cmp3@@Base+0x5c>
    f748:	subs	x11, x11, #0x1
    f74c:	b.ge	f740 <mpfr_cmp3@@Base+0xec>  // b.tcont
    f750:	b	f6a0 <mpfr_cmp3@@Base+0x4c>
    f754:	mov	w8, w9
    f758:	mov	w0, w8
    f75c:	ldp	x29, x30, [sp], #16
    f760:	ret
    f764:	mov	w8, wzr
    f768:	mov	w0, w8
    f76c:	ldp	x29, x30, [sp], #16
    f770:	ret
    f774:	cmp	x10, x8
    f778:	b.eq	f788 <mpfr_cmp3@@Base+0x134>  // b.none
    f77c:	ldr	x11, [x1, #16]
    f780:	cmp	x11, x8
    f784:	b.ne	f7b8 <mpfr_cmp3@@Base+0x164>  // b.any
    f788:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f78c:	ldr	x1, [x0, #2640]
    f790:	add	x0, x0, #0xa50
    f794:	blr	x1
    f798:	mrs	x9, tpidr_el0
    f79c:	ldr	w10, [x9, x0]
    f7a0:	mov	w8, wzr
    f7a4:	orr	w10, w10, #0x10
    f7a8:	str	w10, [x9, x0]
    f7ac:	mov	w0, w8
    f7b0:	ldp	x29, x30, [sp], #16
    f7b4:	ret
    f7b8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    f7bc:	cmp	x10, x8
    f7c0:	b.ne	f7dc <mpfr_cmp3@@Base+0x188>  // b.any
    f7c4:	ldr	w10, [x0, #8]
    f7c8:	cmp	w9, w10
    f7cc:	ccmp	x11, x8, #0x0, eq  // eq = none
    f7d0:	csel	w0, wzr, w10, eq  // eq = none
    f7d4:	ldp	x29, x30, [sp], #16
    f7d8:	ret
    f7dc:	cmp	x11, x8
    f7e0:	b.eq	f6b0 <mpfr_cmp3@@Base+0x5c>  // b.none
    f7e4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    f7e8:	cmp	x10, x8
    f7ec:	b.ne	f804 <mpfr_cmp3@@Base+0x1b0>  // b.any
    f7f0:	cmp	x11, x8
    f7f4:	csneg	w8, wzr, w9, eq  // eq = none
    f7f8:	mov	w0, w8
    f7fc:	ldp	x29, x30, [sp], #16
    f800:	ret
    f804:	ldr	w8, [x0, #8]
    f808:	mov	w0, w8
    f80c:	ldp	x29, x30, [sp], #16
    f810:	ret

000000000000f814 <mpfr_cmp@@Base>:
    f814:	mov	w2, #0x1                   	// #1
    f818:	b	c980 <mpfr_cmp3@plt>

000000000000f81c <mpfr_cmpabs@@Base>:
    f81c:	stp	x29, x30, [sp, #-16]!
    f820:	ldr	x8, [x0, #16]
    f824:	mov	x10, #0x2                   	// #2
    f828:	movk	x10, #0x8000, lsl #48
    f82c:	add	x11, x10, #0x2
    f830:	cmp	x8, x11
    f834:	mov	x29, sp
    f838:	b.lt	f904 <mpfr_cmpabs@@Base+0xe8>  // b.tstop
    f83c:	ldr	x9, [x1, #16]
    f840:	cmp	x9, x11
    f844:	b.lt	f910 <mpfr_cmpabs@@Base+0xf4>  // b.tstop
    f848:	cmp	x8, x9
    f84c:	b.le	f85c <mpfr_cmpabs@@Base+0x40>
    f850:	mov	w0, #0x1                   	// #1
    f854:	ldp	x29, x30, [sp], #16
    f858:	ret
    f85c:	b.ge	f86c <mpfr_cmpabs@@Base+0x50>  // b.tcont
    f860:	mov	w0, #0xffffffff            	// #-1
    f864:	ldp	x29, x30, [sp], #16
    f868:	ret
    f86c:	ldr	x8, [x0]
    f870:	ldr	x9, [x1]
    f874:	ldr	x10, [x0, #24]
    f878:	sub	x11, x8, #0x1
    f87c:	add	x8, x8, #0x3e
    f880:	cmp	x11, #0x0
    f884:	csel	x8, x8, x11, lt  // lt = tstop
    f888:	sub	x12, x9, #0x1
    f88c:	asr	x11, x8, #6
    f890:	ldr	x8, [x1, #24]
    f894:	add	x9, x9, #0x3e
    f898:	cmp	x12, #0x0
    f89c:	csel	x9, x9, x12, lt  // lt = tstop
    f8a0:	asr	x9, x9, #6
    f8a4:	orr	x12, x11, x9
    f8a8:	tbnz	x12, #63, f8d0 <mpfr_cmpabs@@Base+0xb4>
    f8ac:	ldr	x12, [x10, x11, lsl #3]
    f8b0:	ldr	x13, [x8, x9, lsl #3]
    f8b4:	cmp	x12, x13
    f8b8:	b.hi	f850 <mpfr_cmpabs@@Base+0x34>  // b.pmore
    f8bc:	b.cc	f860 <mpfr_cmpabs@@Base+0x44>  // b.lo, b.ul, b.last
    f8c0:	sub	x11, x11, #0x1
    f8c4:	sub	x9, x9, #0x1
    f8c8:	orr	x12, x11, x9
    f8cc:	tbz	x12, #63, f8ac <mpfr_cmpabs@@Base+0x90>
    f8d0:	tbnz	x11, #63, f8e8 <mpfr_cmpabs@@Base+0xcc>
    f8d4:	ldr	x12, [x10, x11, lsl #3]
    f8d8:	cbnz	x12, f850 <mpfr_cmpabs@@Base+0x34>
    f8dc:	cmp	x11, #0x0
    f8e0:	sub	x11, x11, #0x1
    f8e4:	b.gt	f8d4 <mpfr_cmpabs@@Base+0xb8>
    f8e8:	mov	w0, wzr
    f8ec:	tbnz	x9, #63, f864 <mpfr_cmpabs@@Base+0x48>
    f8f0:	ldr	x10, [x8, x9, lsl #3]
    f8f4:	cbnz	x10, f860 <mpfr_cmpabs@@Base+0x44>
    f8f8:	subs	x9, x9, #0x1
    f8fc:	b.ge	f8f0 <mpfr_cmpabs@@Base+0xd4>  // b.tcont
    f900:	b	f864 <mpfr_cmpabs@@Base+0x48>
    f904:	cmp	x8, x10
    f908:	b.eq	f918 <mpfr_cmpabs@@Base+0xfc>  // b.none
    f90c:	ldr	x9, [x1, #16]
    f910:	cmp	x9, x10
    f914:	b.ne	f948 <mpfr_cmpabs@@Base+0x12c>  // b.any
    f918:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    f91c:	ldr	x1, [x0, #2640]
    f920:	add	x0, x0, #0xa50
    f924:	blr	x1
    f928:	mov	x8, x0
    f92c:	mrs	x9, tpidr_el0
    f930:	ldr	w10, [x9, x8]
    f934:	mov	w0, wzr
    f938:	orr	w10, w10, #0x10
    f93c:	str	w10, [x9, x8]
    f940:	ldp	x29, x30, [sp], #16
    f944:	ret
    f948:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    f94c:	cmp	x8, x10
    f950:	b.ne	f964 <mpfr_cmpabs@@Base+0x148>  // b.any
    f954:	cmp	x9, x10
    f958:	cset	w0, ne  // ne = any
    f95c:	ldp	x29, x30, [sp], #16
    f960:	ret
    f964:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    f968:	cmp	x9, x10
    f96c:	b.ne	f860 <mpfr_cmpabs@@Base+0x44>  // b.any
    f970:	cmp	x8, x10
    f974:	cset	w0, ne  // ne = any
    f978:	ldp	x29, x30, [sp], #16
    f97c:	ret

000000000000f980 <mpfr_cmp_si_2exp@@Base>:
    f980:	stp	x29, x30, [sp, #-16]!
    f984:	ldr	x10, [x0, #16]
    f988:	cmp	x1, #0x0
    f98c:	mov	w8, #0xffffffff            	// #-1
    f990:	cneg	w9, w8, ge  // ge = tcont
    f994:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    f998:	cmp	x10, x8
    f99c:	mov	x29, sp
    f9a0:	b.le	fa78 <mpfr_cmp_si_2exp@@Base+0xf8>
    f9a4:	ldr	w8, [x0, #8]
    f9a8:	cbz	x1, f9fc <mpfr_cmp_si_2exp@@Base+0x7c>
    f9ac:	cmp	w8, w9
    f9b0:	b.ne	f9fc <mpfr_cmp_si_2exp@@Base+0x7c>  // b.any
    f9b4:	cmp	x1, #0x0
    f9b8:	cneg	x8, x1, mi  // mi = first
    f9bc:	cmp	x10, x2
    f9c0:	b.le	fa0c <mpfr_cmp_si_2exp@@Base+0x8c>
    f9c4:	mov	x11, #0xffffffffffffffbe    	// #-66
    f9c8:	movk	x11, #0x3fff, lsl #48
    f9cc:	cmp	x2, x11
    f9d0:	b.gt	f9e0 <mpfr_cmp_si_2exp@@Base+0x60>
    f9d4:	add	x11, x2, #0x40
    f9d8:	cmp	x10, x11
    f9dc:	b.gt	f9f8 <mpfr_cmp_si_2exp@@Base+0x78>
    f9e0:	clz	x11, x8
    f9e4:	mov	w12, #0x40                  	// #64
    f9e8:	sub	w10, w10, w2
    f9ec:	sub	w12, w12, w11
    f9f0:	cmp	w12, w10
    f9f4:	b.ge	fa08 <mpfr_cmp_si_2exp@@Base+0x88>  // b.tcont
    f9f8:	mov	w8, w9
    f9fc:	mov	w0, w8
    fa00:	ldp	x29, x30, [sp], #16
    fa04:	ret
    fa08:	b.le	fa1c <mpfr_cmp_si_2exp@@Base+0x9c>
    fa0c:	neg	w8, w9
    fa10:	mov	w0, w8
    fa14:	ldp	x29, x30, [sp], #16
    fa18:	ret
    fa1c:	ldr	x10, [x0]
    fa20:	ldr	x12, [x0, #24]
    fa24:	lsl	x8, x8, x11
    fa28:	sub	x13, x10, #0x1
    fa2c:	add	x10, x10, #0x3e
    fa30:	cmp	x13, #0x0
    fa34:	csel	x10, x10, x13, lt  // lt = tstop
    fa38:	asr	x10, x10, #6
    fa3c:	ldr	x13, [x12, x10, lsl #3]
    fa40:	cmp	x13, x8
    fa44:	b.hi	f9f8 <mpfr_cmp_si_2exp@@Base+0x78>  // b.pmore
    fa48:	b.cc	fa0c <mpfr_cmp_si_2exp@@Base+0x8c>  // b.lo, b.ul, b.last
    fa4c:	sub	x8, x12, #0x8
    fa50:	subs	x11, x10, #0x1
    fa54:	b.lt	fa68 <mpfr_cmp_si_2exp@@Base+0xe8>  // b.tstop
    fa58:	ldr	x12, [x8, x10, lsl #3]
    fa5c:	mov	x10, x11
    fa60:	cbz	x12, fa50 <mpfr_cmp_si_2exp@@Base+0xd0>
    fa64:	b	f9f8 <mpfr_cmp_si_2exp@@Base+0x78>
    fa68:	mov	w8, wzr
    fa6c:	mov	w0, w8
    fa70:	ldp	x29, x30, [sp], #16
    fa74:	ret
    fa78:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    fa7c:	cmp	x10, x8
    fa80:	b.eq	faa0 <mpfr_cmp_si_2exp@@Base+0x120>  // b.none
    fa84:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    fa88:	cmp	x10, x8
    fa8c:	b.ne	fab4 <mpfr_cmp_si_2exp@@Base+0x134>  // b.any
    fa90:	ldr	w8, [x0, #8]
    fa94:	mov	w0, w8
    fa98:	ldp	x29, x30, [sp], #16
    fa9c:	ret
    faa0:	cmp	x1, #0x0
    faa4:	csneg	w8, wzr, w9, eq  // eq = none
    faa8:	mov	w0, w8
    faac:	ldp	x29, x30, [sp], #16
    fab0:	ret
    fab4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    fab8:	ldr	x1, [x0, #2640]
    fabc:	add	x0, x0, #0xa50
    fac0:	blr	x1
    fac4:	mrs	x9, tpidr_el0
    fac8:	ldr	w10, [x9, x0]
    facc:	mov	w8, wzr
    fad0:	orr	w10, w10, #0x10
    fad4:	str	w10, [x9, x0]
    fad8:	mov	w0, w8
    fadc:	ldp	x29, x30, [sp], #16
    fae0:	ret

000000000000fae4 <mpfr_cmp_si@@Base>:
    fae4:	stp	x29, x30, [sp, #-16]!
    fae8:	ldr	x10, [x0, #16]
    faec:	cmp	x1, #0x0
    faf0:	mov	w8, #0xffffffff            	// #-1
    faf4:	cneg	w9, w8, ge  // ge = tcont
    faf8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    fafc:	cmp	x10, x8
    fb00:	mov	x29, sp
    fb04:	b.le	fbc4 <mpfr_cmp_si@@Base+0xe0>
    fb08:	ldr	w8, [x0, #8]
    fb0c:	cbz	x1, fb48 <mpfr_cmp_si@@Base+0x64>
    fb10:	cmp	w8, w9
    fb14:	b.ne	fb48 <mpfr_cmp_si@@Base+0x64>  // b.any
    fb18:	cmp	x1, #0x0
    fb1c:	cneg	x8, x1, mi  // mi = first
    fb20:	cmp	x10, #0x0
    fb24:	b.le	fb58 <mpfr_cmp_si@@Base+0x74>
    fb28:	cmp	x10, #0x40
    fb2c:	b.gt	fb44 <mpfr_cmp_si@@Base+0x60>
    fb30:	clz	x11, x8
    fb34:	mov	w12, #0x40                  	// #64
    fb38:	sub	w12, w12, w11
    fb3c:	cmp	w12, w10
    fb40:	b.ge	fb54 <mpfr_cmp_si@@Base+0x70>  // b.tcont
    fb44:	mov	w8, w9
    fb48:	mov	w0, w8
    fb4c:	ldp	x29, x30, [sp], #16
    fb50:	ret
    fb54:	b.le	fb68 <mpfr_cmp_si@@Base+0x84>
    fb58:	neg	w8, w9
    fb5c:	mov	w0, w8
    fb60:	ldp	x29, x30, [sp], #16
    fb64:	ret
    fb68:	ldr	x10, [x0]
    fb6c:	ldr	x12, [x0, #24]
    fb70:	lsl	x8, x8, x11
    fb74:	sub	x13, x10, #0x1
    fb78:	add	x10, x10, #0x3e
    fb7c:	cmp	x13, #0x0
    fb80:	csel	x10, x10, x13, lt  // lt = tstop
    fb84:	asr	x10, x10, #6
    fb88:	ldr	x13, [x12, x10, lsl #3]
    fb8c:	cmp	x13, x8
    fb90:	b.hi	fb44 <mpfr_cmp_si@@Base+0x60>  // b.pmore
    fb94:	b.cc	fb58 <mpfr_cmp_si@@Base+0x74>  // b.lo, b.ul, b.last
    fb98:	sub	x8, x12, #0x8
    fb9c:	subs	x11, x10, #0x1
    fba0:	b.lt	fbb4 <mpfr_cmp_si@@Base+0xd0>  // b.tstop
    fba4:	ldr	x12, [x8, x10, lsl #3]
    fba8:	mov	x10, x11
    fbac:	cbz	x12, fb9c <mpfr_cmp_si@@Base+0xb8>
    fbb0:	b	fb44 <mpfr_cmp_si@@Base+0x60>
    fbb4:	mov	w8, wzr
    fbb8:	mov	w0, w8
    fbbc:	ldp	x29, x30, [sp], #16
    fbc0:	ret
    fbc4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    fbc8:	cmp	x10, x8
    fbcc:	b.eq	fbec <mpfr_cmp_si@@Base+0x108>  // b.none
    fbd0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    fbd4:	cmp	x10, x8
    fbd8:	b.ne	fc00 <mpfr_cmp_si@@Base+0x11c>  // b.any
    fbdc:	ldr	w8, [x0, #8]
    fbe0:	mov	w0, w8
    fbe4:	ldp	x29, x30, [sp], #16
    fbe8:	ret
    fbec:	cmp	x1, #0x0
    fbf0:	csneg	w8, wzr, w9, eq  // eq = none
    fbf4:	mov	w0, w8
    fbf8:	ldp	x29, x30, [sp], #16
    fbfc:	ret
    fc00:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    fc04:	ldr	x1, [x0, #2640]
    fc08:	add	x0, x0, #0xa50
    fc0c:	blr	x1
    fc10:	mrs	x9, tpidr_el0
    fc14:	ldr	w10, [x9, x0]
    fc18:	mov	w8, wzr
    fc1c:	orr	w10, w10, #0x10
    fc20:	str	w10, [x9, x0]
    fc24:	mov	w0, w8
    fc28:	ldp	x29, x30, [sp], #16
    fc2c:	ret

000000000000fc30 <mpfr_cmp_ui_2exp@@Base>:
    fc30:	stp	x29, x30, [sp, #-16]!
    fc34:	ldr	x8, [x0, #16]
    fc38:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fc3c:	mov	x29, sp
    fc40:	cmp	x8, x9
    fc44:	b.le	fd0c <mpfr_cmp_ui_2exp@@Base+0xdc>
    fc48:	ldr	w9, [x0, #8]
    fc4c:	tbnz	w9, #31, fcd0 <mpfr_cmp_ui_2exp@@Base+0xa0>
    fc50:	cbz	x1, fcc0 <mpfr_cmp_ui_2exp@@Base+0x90>
    fc54:	cmp	x8, x2
    fc58:	b.le	fcd0 <mpfr_cmp_ui_2exp@@Base+0xa0>
    fc5c:	mov	x9, #0xffffffffffffffbe    	// #-66
    fc60:	movk	x9, #0x3fff, lsl #48
    fc64:	cmp	x2, x9
    fc68:	b.gt	fc78 <mpfr_cmp_ui_2exp@@Base+0x48>
    fc6c:	add	x9, x2, #0x40
    fc70:	cmp	x8, x9
    fc74:	b.gt	fcc0 <mpfr_cmp_ui_2exp@@Base+0x90>
    fc78:	clz	x9, x1
    fc7c:	mov	w10, #0x40                  	// #64
    fc80:	sub	w8, w8, w2
    fc84:	sub	w10, w10, w9
    fc88:	cmp	w10, w8
    fc8c:	b.lt	fcc0 <mpfr_cmp_ui_2exp@@Base+0x90>  // b.tstop
    fc90:	b.gt	fcd0 <mpfr_cmp_ui_2exp@@Base+0xa0>
    fc94:	ldr	x8, [x0]
    fc98:	ldr	x10, [x0, #24]
    fc9c:	lsl	x9, x1, x9
    fca0:	sub	x11, x8, #0x1
    fca4:	add	x8, x8, #0x3e
    fca8:	cmp	x11, #0x0
    fcac:	csel	x8, x8, x11, lt  // lt = tstop
    fcb0:	asr	x8, x8, #6
    fcb4:	ldr	x11, [x10, x8, lsl #3]
    fcb8:	cmp	x11, x9
    fcbc:	b.ls	fccc <mpfr_cmp_ui_2exp@@Base+0x9c>  // b.plast
    fcc0:	mov	w0, #0x1                   	// #1
    fcc4:	ldp	x29, x30, [sp], #16
    fcc8:	ret
    fccc:	b.cs	fcdc <mpfr_cmp_ui_2exp@@Base+0xac>  // b.hs, b.nlast
    fcd0:	mov	w0, #0xffffffff            	// #-1
    fcd4:	ldp	x29, x30, [sp], #16
    fcd8:	ret
    fcdc:	sub	x9, x10, #0x8
    fce0:	mov	w0, #0x1                   	// #1
    fce4:	subs	x10, x8, #0x1
    fce8:	b.lt	fd00 <mpfr_cmp_ui_2exp@@Base+0xd0>  // b.tstop
    fcec:	ldr	x11, [x9, x8, lsl #3]
    fcf0:	mov	x8, x10
    fcf4:	cbz	x11, fce4 <mpfr_cmp_ui_2exp@@Base+0xb4>
    fcf8:	ldp	x29, x30, [sp], #16
    fcfc:	ret
    fd00:	mov	w0, wzr
    fd04:	ldp	x29, x30, [sp], #16
    fd08:	ret
    fd0c:	b.eq	fd50 <mpfr_cmp_ui_2exp@@Base+0x120>  // b.none
    fd10:	mov	x9, #0x2                   	// #2
    fd14:	movk	x9, #0x8000, lsl #48
    fd18:	cmp	x8, x9
    fd1c:	b.ne	fd5c <mpfr_cmp_ui_2exp@@Base+0x12c>  // b.any
    fd20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    fd24:	ldr	x1, [x0, #2640]
    fd28:	add	x0, x0, #0xa50
    fd2c:	blr	x1
    fd30:	mov	x8, x0
    fd34:	mrs	x9, tpidr_el0
    fd38:	ldr	w10, [x9, x8]
    fd3c:	mov	w0, wzr
    fd40:	orr	w10, w10, #0x10
    fd44:	str	w10, [x9, x8]
    fd48:	ldp	x29, x30, [sp], #16
    fd4c:	ret
    fd50:	ldr	w0, [x0, #8]
    fd54:	ldp	x29, x30, [sp], #16
    fd58:	ret
    fd5c:	cmp	x1, #0x0
    fd60:	csetm	w0, ne  // ne = any
    fd64:	ldp	x29, x30, [sp], #16
    fd68:	ret

000000000000fd6c <mpfr_cmp_ui@@Base>:
    fd6c:	stp	x29, x30, [sp, #-16]!
    fd70:	ldr	x8, [x0, #16]
    fd74:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fd78:	mov	x29, sp
    fd7c:	cmp	x8, x9
    fd80:	b.le	fe30 <mpfr_cmp_ui@@Base+0xc4>
    fd84:	ldr	w9, [x0, #8]
    fd88:	tbnz	w9, #31, fdc4 <mpfr_cmp_ui@@Base+0x58>
    fd8c:	cbz	x1, fdb4 <mpfr_cmp_ui@@Base+0x48>
    fd90:	cmp	x8, #0x1
    fd94:	b.lt	fdc4 <mpfr_cmp_ui@@Base+0x58>  // b.tstop
    fd98:	cmp	x8, #0x40
    fd9c:	b.gt	fdb4 <mpfr_cmp_ui@@Base+0x48>
    fda0:	clz	x9, x1
    fda4:	mov	w10, #0x40                  	// #64
    fda8:	sub	w10, w10, w9
    fdac:	cmp	w10, w8
    fdb0:	b.ge	fdc0 <mpfr_cmp_ui@@Base+0x54>  // b.tcont
    fdb4:	mov	w0, #0x1                   	// #1
    fdb8:	ldp	x29, x30, [sp], #16
    fdbc:	ret
    fdc0:	b.le	fdd0 <mpfr_cmp_ui@@Base+0x64>
    fdc4:	mov	w0, #0xffffffff            	// #-1
    fdc8:	ldp	x29, x30, [sp], #16
    fdcc:	ret
    fdd0:	ldr	x8, [x0]
    fdd4:	ldr	x10, [x0, #24]
    fdd8:	lsl	x9, x1, x9
    fddc:	sub	x11, x8, #0x1
    fde0:	add	x8, x8, #0x3e
    fde4:	cmp	x11, #0x0
    fde8:	csel	x8, x8, x11, lt  // lt = tstop
    fdec:	asr	x8, x8, #6
    fdf0:	ldr	x11, [x10, x8, lsl #3]
    fdf4:	cmp	x11, x9
    fdf8:	b.hi	fdb4 <mpfr_cmp_ui@@Base+0x48>  // b.pmore
    fdfc:	b.cc	fdc4 <mpfr_cmp_ui@@Base+0x58>  // b.lo, b.ul, b.last
    fe00:	sub	x9, x10, #0x8
    fe04:	mov	w0, #0x1                   	// #1
    fe08:	subs	x10, x8, #0x1
    fe0c:	b.lt	fe24 <mpfr_cmp_ui@@Base+0xb8>  // b.tstop
    fe10:	ldr	x11, [x9, x8, lsl #3]
    fe14:	mov	x8, x10
    fe18:	cbz	x11, fe08 <mpfr_cmp_ui@@Base+0x9c>
    fe1c:	ldp	x29, x30, [sp], #16
    fe20:	ret
    fe24:	mov	w0, wzr
    fe28:	ldp	x29, x30, [sp], #16
    fe2c:	ret
    fe30:	b.eq	fe74 <mpfr_cmp_ui@@Base+0x108>  // b.none
    fe34:	mov	x9, #0x2                   	// #2
    fe38:	movk	x9, #0x8000, lsl #48
    fe3c:	cmp	x8, x9
    fe40:	b.ne	fe80 <mpfr_cmp_ui@@Base+0x114>  // b.any
    fe44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
    fe48:	ldr	x1, [x0, #2640]
    fe4c:	add	x0, x0, #0xa50
    fe50:	blr	x1
    fe54:	mov	x8, x0
    fe58:	mrs	x9, tpidr_el0
    fe5c:	ldr	w10, [x9, x8]
    fe60:	mov	w0, wzr
    fe64:	orr	w10, w10, #0x10
    fe68:	str	w10, [x9, x8]
    fe6c:	ldp	x29, x30, [sp], #16
    fe70:	ret
    fe74:	ldr	w0, [x0, #8]
    fe78:	ldp	x29, x30, [sp], #16
    fe7c:	ret
    fe80:	cmp	x1, #0x0
    fe84:	csetm	w0, ne  // ne = any
    fe88:	ldp	x29, x30, [sp], #16
    fe8c:	ret

000000000000fe90 <mpfr_greater_p@@Base>:
    fe90:	stp	x29, x30, [sp, #-16]!
    fe94:	ldr	x9, [x0, #16]
    fe98:	mov	x8, #0x2                   	// #2
    fe9c:	movk	x8, #0x8000, lsl #48
    fea0:	mov	x29, sp
    fea4:	cmp	x9, x8
    fea8:	b.ne	feb8 <mpfr_greater_p@@Base+0x28>  // b.any
    feac:	mov	w0, wzr
    feb0:	ldp	x29, x30, [sp], #16
    feb4:	ret
    feb8:	ldr	x9, [x1, #16]
    febc:	cmp	x9, x8
    fec0:	b.ne	fed0 <mpfr_greater_p@@Base+0x40>  // b.any
    fec4:	mov	w0, wzr
    fec8:	ldp	x29, x30, [sp], #16
    fecc:	ret
    fed0:	mov	w2, #0x1                   	// #1
    fed4:	bl	c980 <mpfr_cmp3@plt>
    fed8:	cmp	w0, #0x0
    fedc:	cset	w0, gt
    fee0:	ldp	x29, x30, [sp], #16
    fee4:	ret

000000000000fee8 <mpfr_greaterequal_p@@Base>:
    fee8:	stp	x29, x30, [sp, #-16]!
    feec:	ldr	x9, [x0, #16]
    fef0:	mov	x8, #0x2                   	// #2
    fef4:	movk	x8, #0x8000, lsl #48
    fef8:	mov	x29, sp
    fefc:	cmp	x9, x8
    ff00:	b.ne	ff10 <mpfr_greaterequal_p@@Base+0x28>  // b.any
    ff04:	mov	w0, wzr
    ff08:	ldp	x29, x30, [sp], #16
    ff0c:	ret
    ff10:	ldr	x9, [x1, #16]
    ff14:	cmp	x9, x8
    ff18:	b.ne	ff28 <mpfr_greaterequal_p@@Base+0x40>  // b.any
    ff1c:	mov	w0, wzr
    ff20:	ldp	x29, x30, [sp], #16
    ff24:	ret
    ff28:	mov	w2, #0x1                   	// #1
    ff2c:	bl	c980 <mpfr_cmp3@plt>
    ff30:	mvn	w8, w0
    ff34:	lsr	w0, w8, #31
    ff38:	ldp	x29, x30, [sp], #16
    ff3c:	ret

000000000000ff40 <mpfr_less_p@@Base>:
    ff40:	stp	x29, x30, [sp, #-16]!
    ff44:	ldr	x9, [x0, #16]
    ff48:	mov	x8, #0x2                   	// #2
    ff4c:	movk	x8, #0x8000, lsl #48
    ff50:	mov	x29, sp
    ff54:	cmp	x9, x8
    ff58:	b.ne	ff68 <mpfr_less_p@@Base+0x28>  // b.any
    ff5c:	mov	w0, wzr
    ff60:	ldp	x29, x30, [sp], #16
    ff64:	ret
    ff68:	ldr	x9, [x1, #16]
    ff6c:	cmp	x9, x8
    ff70:	b.ne	ff80 <mpfr_less_p@@Base+0x40>  // b.any
    ff74:	mov	w0, wzr
    ff78:	ldp	x29, x30, [sp], #16
    ff7c:	ret
    ff80:	mov	w2, #0x1                   	// #1
    ff84:	bl	c980 <mpfr_cmp3@plt>
    ff88:	lsr	w0, w0, #31
    ff8c:	ldp	x29, x30, [sp], #16
    ff90:	ret

000000000000ff94 <mpfr_lessequal_p@@Base>:
    ff94:	stp	x29, x30, [sp, #-16]!
    ff98:	ldr	x9, [x0, #16]
    ff9c:	mov	x8, #0x2                   	// #2
    ffa0:	movk	x8, #0x8000, lsl #48
    ffa4:	mov	x29, sp
    ffa8:	cmp	x9, x8
    ffac:	b.ne	ffbc <mpfr_lessequal_p@@Base+0x28>  // b.any
    ffb0:	mov	w0, wzr
    ffb4:	ldp	x29, x30, [sp], #16
    ffb8:	ret
    ffbc:	ldr	x9, [x1, #16]
    ffc0:	cmp	x9, x8
    ffc4:	b.ne	ffd4 <mpfr_lessequal_p@@Base+0x40>  // b.any
    ffc8:	mov	w0, wzr
    ffcc:	ldp	x29, x30, [sp], #16
    ffd0:	ret
    ffd4:	mov	w2, #0x1                   	// #1
    ffd8:	bl	c980 <mpfr_cmp3@plt>
    ffdc:	cmp	w0, #0x1
    ffe0:	cset	w0, lt  // lt = tstop
    ffe4:	ldp	x29, x30, [sp], #16
    ffe8:	ret

000000000000ffec <mpfr_lessgreater_p@@Base>:
    ffec:	stp	x29, x30, [sp, #-16]!
    fff0:	ldr	x9, [x0, #16]
    fff4:	mov	x8, #0x2                   	// #2
    fff8:	movk	x8, #0x8000, lsl #48
    fffc:	mov	x29, sp
   10000:	cmp	x9, x8
   10004:	b.ne	10014 <mpfr_lessgreater_p@@Base+0x28>  // b.any
   10008:	mov	w0, wzr
   1000c:	ldp	x29, x30, [sp], #16
   10010:	ret
   10014:	ldr	x9, [x1, #16]
   10018:	cmp	x9, x8
   1001c:	b.ne	1002c <mpfr_lessgreater_p@@Base+0x40>  // b.any
   10020:	mov	w0, wzr
   10024:	ldp	x29, x30, [sp], #16
   10028:	ret
   1002c:	mov	w2, #0x1                   	// #1
   10030:	bl	c980 <mpfr_cmp3@plt>
   10034:	cmp	w0, #0x0
   10038:	cset	w0, ne  // ne = any
   1003c:	ldp	x29, x30, [sp], #16
   10040:	ret

0000000000010044 <mpfr_equal_p@@Base>:
   10044:	stp	x29, x30, [sp, #-16]!
   10048:	ldr	x9, [x0, #16]
   1004c:	mov	x8, #0x2                   	// #2
   10050:	movk	x8, #0x8000, lsl #48
   10054:	mov	x29, sp
   10058:	cmp	x9, x8
   1005c:	b.ne	1006c <mpfr_equal_p@@Base+0x28>  // b.any
   10060:	mov	w0, wzr
   10064:	ldp	x29, x30, [sp], #16
   10068:	ret
   1006c:	ldr	x9, [x1, #16]
   10070:	cmp	x9, x8
   10074:	b.ne	10084 <mpfr_equal_p@@Base+0x40>  // b.any
   10078:	mov	w0, wzr
   1007c:	ldp	x29, x30, [sp], #16
   10080:	ret
   10084:	mov	w2, #0x1                   	// #1
   10088:	bl	c980 <mpfr_cmp3@plt>
   1008c:	cmp	w0, #0x0
   10090:	cset	w0, eq  // eq = none
   10094:	ldp	x29, x30, [sp], #16
   10098:	ret

000000000001009c <mpfr_unordered_p@@Base>:
   1009c:	ldr	x9, [x0, #16]
   100a0:	mov	x8, #0x2                   	// #2
   100a4:	movk	x8, #0x8000, lsl #48
   100a8:	cmp	x9, x8
   100ac:	b.ne	100b8 <mpfr_unordered_p@@Base+0x1c>  // b.any
   100b0:	mov	w0, #0x1                   	// #1
   100b4:	ret
   100b8:	ldr	x9, [x1, #16]
   100bc:	cmp	x9, x8
   100c0:	cset	w0, eq  // eq = none
   100c4:	ret

00000000000100c8 <mpfr_div_2exp@@Base>:
   100c8:	b	c8f0 <mpfr_div_2ui@plt>

00000000000100cc <mpfr_div_2si@@Base>:
   100cc:	stp	x29, x30, [sp, #-80]!
   100d0:	stp	x24, x23, [sp, #32]
   100d4:	stp	x22, x21, [sp, #48]
   100d8:	stp	x20, x19, [sp, #64]
   100dc:	ldr	x24, [x1, #16]
   100e0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   100e4:	mov	w20, w3
   100e8:	mov	x8, x1
   100ec:	cmp	x24, x9
   100f0:	mov	x19, x0
   100f4:	str	x25, [sp, #16]
   100f8:	mov	x29, sp
   100fc:	b.le	1051c <mpfr_div_2si@@Base+0x450>
   10100:	mov	x21, x2
   10104:	cmp	x19, x8
   10108:	b.eq	10158 <mpfr_div_2si@@Base+0x8c>  // b.none
   1010c:	ldr	w9, [x8, #8]
   10110:	ldr	x14, [x19]
   10114:	ldr	x22, [x19, #24]
   10118:	str	w9, [x19, #8]
   1011c:	ldr	x11, [x8]
   10120:	cmp	x14, x11
   10124:	b.ne	101c8 <mpfr_div_2si@@Base+0xfc>  // b.any
   10128:	ldr	x1, [x8, #24]
   1012c:	cmp	x22, x1
   10130:	b.eq	10158 <mpfr_div_2si@@Base+0x8c>  // b.none
   10134:	sub	x8, x14, #0x1
   10138:	add	x9, x14, #0x3e
   1013c:	cmp	x8, #0x0
   10140:	csel	x8, x9, x8, lt  // lt = tstop
   10144:	asr	x8, x8, #6
   10148:	lsl	x8, x8, #3
   1014c:	add	x2, x8, #0x8
   10150:	mov	x0, x22
   10154:	bl	ba70 <memcpy@plt>
   10158:	mov	w23, wzr
   1015c:	cmp	x21, #0x1
   10160:	b.lt	103f4 <mpfr_div_2si@@Base+0x328>  // b.tstop
   10164:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10168:	ldr	x1, [x0, #2576]
   1016c:	add	x0, x0, #0xa10
   10170:	blr	x1
   10174:	mrs	x8, tpidr_el0
   10178:	ldr	x8, [x8, x0]
   1017c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   10180:	sub	x9, x9, x21
   10184:	cmp	x8, x9
   10188:	add	x9, x8, x21
   1018c:	b.gt	10198 <mpfr_div_2si@@Base+0xcc>
   10190:	cmp	x24, x9
   10194:	b.ge	10428 <mpfr_div_2si@@Base+0x35c>  // b.tcont
   10198:	cbnz	w20, 10614 <mpfr_div_2si@@Base+0x548>
   1019c:	mov	x10, #0x4000000000000000    	// #4611686018427387904
   101a0:	sub	x10, x10, x21
   101a4:	cmp	x8, x10
   101a8:	b.gt	10608 <mpfr_div_2si@@Base+0x53c>
   101ac:	sub	x8, x9, #0x1
   101b0:	cmp	x24, x8
   101b4:	b.lt	10608 <mpfr_div_2si@@Base+0x53c>  // b.tstop
   101b8:	ldr	w8, [x19, #8]
   101bc:	tbnz	w8, #31, 105f4 <mpfr_div_2si@@Base+0x528>
   101c0:	tbz	w23, #31, 105fc <mpfr_div_2si@@Base+0x530>
   101c4:	b	10610 <mpfr_div_2si@@Base+0x544>
   101c8:	sub	x9, x11, #0x1
   101cc:	add	x10, x11, #0x3e
   101d0:	sub	x12, x14, #0x1
   101d4:	cmp	x9, #0x0
   101d8:	add	x13, x14, #0x3e
   101dc:	csel	x9, x10, x9, lt  // lt = tstop
   101e0:	cmp	x12, #0x0
   101e4:	csel	x10, x13, x12, lt  // lt = tstop
   101e8:	asr	x9, x9, #6
   101ec:	asr	x10, x10, #6
   101f0:	add	x17, x9, #0x1
   101f4:	cmp	x14, x11
   101f8:	add	x12, x10, #0x1
   101fc:	b.ge	10568 <mpfr_div_2si@@Base+0x49c>  // b.tcont
   10200:	ldr	x11, [x8, #24]
   10204:	neg	w13, w14
   10208:	ands	x15, x13, #0x3f
   1020c:	mvn	x16, x10
   10210:	add	x13, x11, x17, lsl #3
   10214:	add	x1, x13, x16, lsl #3
   10218:	b.eq	105a4 <mpfr_div_2si@@Base+0x4d8>  // b.none
   1021c:	ldr	x16, [x1]
   10220:	sub	x15, x15, #0x1
   10224:	mov	w18, #0x1                   	// #1
   10228:	lsl	x18, x18, x15
   1022c:	sub	x0, x18, #0x1
   10230:	and	x15, x16, x18
   10234:	and	x16, x16, x0
   10238:	cbz	w20, 10240 <mpfr_div_2si@@Base+0x174>
   1023c:	cbnz	x15, 10268 <mpfr_div_2si@@Base+0x19c>
   10240:	cbnz	x16, 10268 <mpfr_div_2si@@Base+0x19c>
   10244:	sub	x17, x17, x12
   10248:	cbz	x17, 10268 <mpfr_div_2si@@Base+0x19c>
   1024c:	mvn	x16, x10
   10250:	add	x17, x16, x9
   10254:	ldr	x16, [x11, x17, lsl #3]
   10258:	subs	x17, x17, #0x1
   1025c:	cset	w0, cs  // cs = hs, nlast
   10260:	cbnz	x16, 10268 <mpfr_div_2si@@Base+0x19c>
   10264:	tbnz	w0, #0, 10254 <mpfr_div_2si@@Base+0x188>
   10268:	lsl	x25, x18, #1
   1026c:	cmp	w20, #0x5
   10270:	b.eq	103c4 <mpfr_div_2si@@Base+0x2f8>  // b.none
   10274:	cmp	w20, #0x1
   10278:	b.eq	102a8 <mpfr_div_2si@@Base+0x1dc>  // b.none
   1027c:	cbnz	w20, 10298 <mpfr_div_2si@@Base+0x1cc>
   10280:	cbz	x15, 102a8 <mpfr_div_2si@@Base+0x1dc>
   10284:	cbnz	x16, 102cc <mpfr_div_2si@@Base+0x200>
   10288:	ldr	x15, [x1]
   1028c:	tst	x15, x25
   10290:	b.ne	102cc <mpfr_div_2si@@Base+0x200>  // b.any
   10294:	b	102b0 <mpfr_div_2si@@Base+0x1e4>
   10298:	ldr	w17, [x8, #8]
   1029c:	add	w17, w20, w17, lsr #31
   102a0:	cmp	w17, #0x3
   102a4:	b.ne	102c4 <mpfr_div_2si@@Base+0x1f8>  // b.any
   102a8:	orr	x9, x16, x15
   102ac:	cbz	x9, 103c4 <mpfr_div_2si@@Base+0x2f8>
   102b0:	ldr	w8, [x8, #8]
   102b4:	neg	w23, w8
   102b8:	cmp	x22, x1
   102bc:	b.ne	103d0 <mpfr_div_2si@@Base+0x304>  // b.any
   102c0:	b	103dc <mpfr_div_2si@@Base+0x310>
   102c4:	orr	x15, x16, x15
   102c8:	cbz	x15, 103c4 <mpfr_div_2si@@Base+0x2f8>
   102cc:	ldr	x15, [x1]
   102d0:	ldr	w23, [x8, #8]
   102d4:	adds	x8, x15, x25
   102d8:	str	x8, [x22]
   102dc:	b.cc	10470 <mpfr_div_2si@@Base+0x3a4>  // b.lo, b.ul, b.last
   102e0:	mov	x17, xzr
   102e4:	mov	x15, xzr
   102e8:	mov	x8, x10
   102ec:	add	x14, x15, #0x1
   102f0:	cmp	x14, x10
   102f4:	b.gt	104d4 <mpfr_div_2si@@Base+0x408>
   102f8:	lsl	x15, x15, #3
   102fc:	add	x16, x1, x15
   10300:	ldr	x16, [x16, #8]
   10304:	add	x15, x22, x15
   10308:	sub	x17, x17, #0x8
   1030c:	sub	x8, x8, #0x1
   10310:	adds	x16, x16, #0x1
   10314:	str	x16, [x15, #8]
   10318:	mov	x15, x14
   1031c:	b.cs	102ec <mpfr_div_2si@@Base+0x220>  // b.hs, b.nlast
   10320:	cmp	x1, x22
   10324:	b.eq	103dc <mpfr_div_2si@@Base+0x310>  // b.none
   10328:	cmp	x14, x10
   1032c:	b.ge	103dc <mpfr_div_2si@@Base+0x310>  // b.tcont
   10330:	sub	x15, x10, x14
   10334:	cmp	x15, #0x4
   10338:	add	x16, x14, #0x1
   1033c:	b.cc	103a0 <mpfr_div_2si@@Base+0x2d4>  // b.lo, b.ul, b.last
   10340:	sub	x18, x22, x17
   10344:	add	x0, x18, #0x8
   10348:	cmp	x0, x13
   1034c:	sub	x13, x1, x17
   10350:	b.cs	10364 <mpfr_div_2si@@Base+0x298>  // b.hs, b.nlast
   10354:	add	x12, x22, x12, lsl #3
   10358:	add	x17, x13, #0x8
   1035c:	cmp	x17, x12
   10360:	b.cc	103a0 <mpfr_div_2si@@Base+0x2d4>  // b.lo, b.ul, b.last
   10364:	and	x8, x8, #0xfffffffffffffffc
   10368:	and	x17, x15, #0xfffffffffffffffc
   1036c:	add	x8, x8, x14
   10370:	add	x12, x18, #0x18
   10374:	add	x13, x13, #0x18
   10378:	add	x16, x8, #0x1
   1037c:	mov	x8, x17
   10380:	ldp	q0, q1, [x13, #-16]
   10384:	add	x13, x13, #0x20
   10388:	subs	x8, x8, #0x4
   1038c:	stp	q0, q1, [x12, #-16]
   10390:	add	x12, x12, #0x20
   10394:	b.ne	10380 <mpfr_div_2si@@Base+0x2b4>  // b.any
   10398:	cmp	x15, x17
   1039c:	b.eq	103dc <mpfr_div_2si@@Base+0x310>  // b.none
   103a0:	sub	x8, x16, x10
   103a4:	add	x10, x22, x16, lsl #3
   103a8:	add	x9, x11, x9, lsl #3
   103ac:	ldr	x11, [x9, x8, lsl #3]
   103b0:	add	x8, x8, #0x1
   103b4:	cmp	x8, #0x1
   103b8:	str	x11, [x10], #8
   103bc:	b.ne	103ac <mpfr_div_2si@@Base+0x2e0>  // b.any
   103c0:	b	103dc <mpfr_div_2si@@Base+0x310>
   103c4:	mov	w23, wzr
   103c8:	cmp	x22, x1
   103cc:	b.eq	103dc <mpfr_div_2si@@Base+0x310>  // b.none
   103d0:	lsl	x2, x12, #3
   103d4:	mov	x0, x22
   103d8:	bl	ba70 <memcpy@plt>
   103dc:	ldr	x8, [x22]
   103e0:	neg	x9, x25
   103e4:	and	x8, x8, x9
   103e8:	str	x8, [x22]
   103ec:	cmp	x21, #0x1
   103f0:	b.ge	10164 <mpfr_div_2si@@Base+0x98>  // b.tcont
   103f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   103f8:	ldr	x1, [x0, #2608]
   103fc:	add	x0, x0, #0xa30
   10400:	blr	x1
   10404:	mrs	x8, tpidr_el0
   10408:	ldr	x8, [x8, x0]
   1040c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   10410:	sub	x9, x9, x21
   10414:	cmp	x8, x9
   10418:	b.lt	10544 <mpfr_div_2si@@Base+0x478>  // b.tstop
   1041c:	add	x8, x8, x21
   10420:	cmp	x24, x8
   10424:	b.gt	10544 <mpfr_div_2si@@Base+0x478>
   10428:	sub	x8, x24, x21
   1042c:	str	x8, [x19, #16]
   10430:	cbz	w23, 10454 <mpfr_div_2si@@Base+0x388>
   10434:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10438:	ldr	x1, [x0, #2640]
   1043c:	add	x0, x0, #0xa50
   10440:	blr	x1
   10444:	mrs	x8, tpidr_el0
   10448:	ldr	w9, [x8, x0]
   1044c:	orr	w9, w9, #0x8
   10450:	str	w9, [x8, x0]
   10454:	mov	w0, w23
   10458:	ldp	x20, x19, [sp, #64]
   1045c:	ldp	x22, x21, [sp, #48]
   10460:	ldp	x24, x23, [sp, #32]
   10464:	ldr	x25, [sp, #16]
   10468:	ldp	x29, x30, [sp], #80
   1046c:	ret
   10470:	cmp	x14, #0x41
   10474:	b.lt	103dc <mpfr_div_2si@@Base+0x310>  // b.tstop
   10478:	cmp	x1, x22
   1047c:	b.eq	103dc <mpfr_div_2si@@Base+0x310>  // b.none
   10480:	cmp	x10, #0x4
   10484:	b.cc	104ac <mpfr_div_2si@@Base+0x3e0>  // b.lo, b.ul, b.last
   10488:	add	x8, x22, #0x8
   1048c:	sub	x14, x9, x10
   10490:	cmp	x8, x13
   10494:	add	x8, x11, x14, lsl #3
   10498:	b.cs	104e4 <mpfr_div_2si@@Base+0x418>  // b.hs, b.nlast
   1049c:	add	x12, x22, x12, lsl #3
   104a0:	add	x13, x8, #0x8
   104a4:	cmp	x13, x12
   104a8:	b.cs	104e4 <mpfr_div_2si@@Base+0x418>  // b.hs, b.nlast
   104ac:	mov	w8, #0x1                   	// #1
   104b0:	sub	x10, x8, x10
   104b4:	add	x8, x22, x8, lsl #3
   104b8:	add	x9, x11, x9, lsl #3
   104bc:	ldr	x11, [x9, x10, lsl #3]
   104c0:	add	x10, x10, #0x1
   104c4:	cmp	x10, #0x1
   104c8:	str	x11, [x8], #8
   104cc:	b.ne	104bc <mpfr_div_2si@@Base+0x3f0>  // b.any
   104d0:	b	103dc <mpfr_div_2si@@Base+0x310>
   104d4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   104d8:	add	x24, x24, #0x1
   104dc:	str	x8, [x22, x10, lsl #3]
   104e0:	b	103dc <mpfr_div_2si@@Base+0x310>
   104e4:	and	x12, x10, #0xfffffffffffffffc
   104e8:	add	x13, x8, #0x18
   104ec:	orr	x8, x12, #0x1
   104f0:	add	x14, x22, #0x18
   104f4:	mov	x15, x12
   104f8:	ldp	q0, q1, [x13, #-16]
   104fc:	add	x13, x13, #0x20
   10500:	subs	x15, x15, #0x4
   10504:	stp	q0, q1, [x14, #-16]
   10508:	add	x14, x14, #0x20
   1050c:	b.ne	104f8 <mpfr_div_2si@@Base+0x42c>  // b.any
   10510:	cmp	x10, x12
   10514:	b.eq	103dc <mpfr_div_2si@@Base+0x310>  // b.none
   10518:	b	104b0 <mpfr_div_2si@@Base+0x3e4>
   1051c:	ldr	w3, [x8, #8]
   10520:	mov	x0, x19
   10524:	mov	w2, w20
   10528:	ldp	x20, x19, [sp, #64]
   1052c:	ldp	x22, x21, [sp, #48]
   10530:	ldp	x24, x23, [sp, #32]
   10534:	ldr	x25, [sp, #16]
   10538:	mov	x1, x8
   1053c:	ldp	x29, x30, [sp], #80
   10540:	b	c690 <mpfr_set4@plt>
   10544:	ldr	w2, [x19, #8]
   10548:	mov	x0, x19
   1054c:	mov	w1, w20
   10550:	ldp	x20, x19, [sp, #64]
   10554:	ldp	x22, x21, [sp, #48]
   10558:	ldp	x24, x23, [sp, #32]
   1055c:	ldr	x25, [sp, #16]
   10560:	ldp	x29, x30, [sp], #80
   10564:	b	bf90 <mpfr_overflow@plt>
   10568:	ldr	x1, [x8, #24]
   1056c:	sub	x23, x12, x17
   10570:	add	x0, x22, x23, lsl #3
   10574:	cmp	x0, x1
   10578:	b.eq	10584 <mpfr_div_2si@@Base+0x4b8>  // b.none
   1057c:	lsl	x2, x17, #3
   10580:	bl	ba70 <memcpy@plt>
   10584:	lsl	x2, x23, #3
   10588:	mov	x0, x22
   1058c:	mov	w1, wzr
   10590:	bl	c150 <memset@plt>
   10594:	mov	w23, wzr
   10598:	cmp	x21, #0x1
   1059c:	b.ge	10164 <mpfr_div_2si@@Base+0x98>  // b.tcont
   105a0:	b	103f4 <mpfr_div_2si@@Base+0x328>
   105a4:	ldur	x16, [x1, #-8]
   105a8:	and	x15, x16, #0x8000000000000000
   105ac:	and	x16, x16, #0x7fffffffffffffff
   105b0:	cbz	w20, 105c0 <mpfr_div_2si@@Base+0x4f4>
   105b4:	cbz	x15, 105c0 <mpfr_div_2si@@Base+0x4f4>
   105b8:	mov	w25, #0x1                   	// #1
   105bc:	b	1026c <mpfr_div_2si@@Base+0x1a0>
   105c0:	mov	w25, #0x1                   	// #1
   105c4:	cbnz	x16, 1026c <mpfr_div_2si@@Base+0x1a0>
   105c8:	sub	x17, x9, x12
   105cc:	cbz	x17, 1026c <mpfr_div_2si@@Base+0x1a0>
   105d0:	sub	x16, x9, x10
   105d4:	sub	x17, x16, #0x2
   105d8:	mov	w25, #0x1                   	// #1
   105dc:	ldr	x16, [x11, x17, lsl #3]
   105e0:	subs	x17, x17, #0x1
   105e4:	cset	w18, cs  // cs = hs, nlast
   105e8:	cbnz	x16, 1026c <mpfr_div_2si@@Base+0x1a0>
   105ec:	tbnz	w18, #0, 105dc <mpfr_div_2si@@Base+0x510>
   105f0:	b	1026c <mpfr_div_2si@@Base+0x1a0>
   105f4:	cmp	w23, #0x1
   105f8:	b.ge	10610 <mpfr_div_2si@@Base+0x544>  // b.tcont
   105fc:	mov	x0, x19
   10600:	bl	bf50 <mpfr_powerof2_raw@plt>
   10604:	cbz	w0, 10610 <mpfr_div_2si@@Base+0x544>
   10608:	mov	w20, #0x1                   	// #1
   1060c:	b	10614 <mpfr_div_2si@@Base+0x548>
   10610:	mov	w20, wzr
   10614:	ldr	w2, [x19, #8]
   10618:	mov	x0, x19
   1061c:	mov	w1, w20
   10620:	ldp	x20, x19, [sp, #64]
   10624:	ldp	x22, x21, [sp, #48]
   10628:	ldp	x24, x23, [sp, #32]
   1062c:	ldr	x25, [sp, #16]
   10630:	ldp	x29, x30, [sp], #80
   10634:	b	c3c0 <mpfr_underflow@plt>

0000000000010638 <mpfr_div_2ui@@Base>:
   10638:	stp	x29, x30, [sp, #-80]!
   1063c:	stp	x22, x21, [sp, #48]
   10640:	stp	x20, x19, [sp, #64]
   10644:	mov	w21, w3
   10648:	mov	x8, x1
   1064c:	mov	x19, x0
   10650:	str	x25, [sp, #16]
   10654:	stp	x24, x23, [sp, #32]
   10658:	mov	x29, sp
   1065c:	cbz	x2, 10a2c <mpfr_div_2ui@@Base+0x3f4>
   10660:	ldr	x24, [x8, #16]
   10664:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10668:	cmp	x24, x9
   1066c:	b.le	10a2c <mpfr_div_2ui@@Base+0x3f4>
   10670:	mov	x20, x2
   10674:	cmp	x19, x8
   10678:	b.eq	106c8 <mpfr_div_2ui@@Base+0x90>  // b.none
   1067c:	ldr	w9, [x8, #8]
   10680:	ldr	x14, [x19]
   10684:	ldr	x22, [x19, #24]
   10688:	str	w9, [x19, #8]
   1068c:	ldr	x11, [x8]
   10690:	cmp	x14, x11
   10694:	b.ne	106d0 <mpfr_div_2ui@@Base+0x98>  // b.any
   10698:	ldr	x1, [x8, #24]
   1069c:	cmp	x22, x1
   106a0:	b.eq	106c8 <mpfr_div_2ui@@Base+0x90>  // b.none
   106a4:	sub	x8, x14, #0x1
   106a8:	add	x9, x14, #0x3e
   106ac:	cmp	x8, #0x0
   106b0:	csel	x8, x9, x8, lt  // lt = tstop
   106b4:	asr	x8, x8, #6
   106b8:	lsl	x8, x8, #3
   106bc:	add	x2, x8, #0x8
   106c0:	mov	x0, x22
   106c4:	bl	ba70 <memcpy@plt>
   106c8:	mov	w23, wzr
   106cc:	b	108f4 <mpfr_div_2ui@@Base+0x2bc>
   106d0:	sub	x9, x11, #0x1
   106d4:	add	x10, x11, #0x3e
   106d8:	sub	x12, x14, #0x1
   106dc:	cmp	x9, #0x0
   106e0:	add	x13, x14, #0x3e
   106e4:	csel	x9, x10, x9, lt  // lt = tstop
   106e8:	cmp	x12, #0x0
   106ec:	csel	x10, x13, x12, lt  // lt = tstop
   106f0:	asr	x9, x9, #6
   106f4:	asr	x10, x10, #6
   106f8:	add	x17, x9, #0x1
   106fc:	cmp	x14, x11
   10700:	add	x12, x10, #0x1
   10704:	b.ge	10a70 <mpfr_div_2ui@@Base+0x438>  // b.tcont
   10708:	ldr	x11, [x8, #24]
   1070c:	neg	w13, w14
   10710:	ands	x15, x13, #0x3f
   10714:	mvn	x16, x10
   10718:	add	x13, x11, x17, lsl #3
   1071c:	add	x1, x13, x16, lsl #3
   10720:	b.eq	10aa4 <mpfr_div_2ui@@Base+0x46c>  // b.none
   10724:	ldr	x16, [x1]
   10728:	sub	x15, x15, #0x1
   1072c:	mov	w18, #0x1                   	// #1
   10730:	lsl	x18, x18, x15
   10734:	sub	x0, x18, #0x1
   10738:	and	x15, x16, x18
   1073c:	and	x16, x16, x0
   10740:	cbz	w21, 10748 <mpfr_div_2ui@@Base+0x110>
   10744:	cbnz	x15, 10770 <mpfr_div_2ui@@Base+0x138>
   10748:	cbnz	x16, 10770 <mpfr_div_2ui@@Base+0x138>
   1074c:	sub	x17, x17, x12
   10750:	cbz	x17, 10770 <mpfr_div_2ui@@Base+0x138>
   10754:	mvn	x16, x10
   10758:	add	x17, x16, x9
   1075c:	ldr	x16, [x11, x17, lsl #3]
   10760:	subs	x17, x17, #0x1
   10764:	cset	w0, cs  // cs = hs, nlast
   10768:	cbnz	x16, 10770 <mpfr_div_2ui@@Base+0x138>
   1076c:	tbnz	w0, #0, 1075c <mpfr_div_2ui@@Base+0x124>
   10770:	lsl	x25, x18, #1
   10774:	cmp	w21, #0x5
   10778:	b.eq	108cc <mpfr_div_2ui@@Base+0x294>  // b.none
   1077c:	cmp	w21, #0x1
   10780:	b.eq	107b0 <mpfr_div_2ui@@Base+0x178>  // b.none
   10784:	cbnz	w21, 107a0 <mpfr_div_2ui@@Base+0x168>
   10788:	cbz	x15, 107b0 <mpfr_div_2ui@@Base+0x178>
   1078c:	cbnz	x16, 107d4 <mpfr_div_2ui@@Base+0x19c>
   10790:	ldr	x15, [x1]
   10794:	tst	x15, x25
   10798:	b.ne	107d4 <mpfr_div_2ui@@Base+0x19c>  // b.any
   1079c:	b	107b8 <mpfr_div_2ui@@Base+0x180>
   107a0:	ldr	w17, [x8, #8]
   107a4:	add	w17, w21, w17, lsr #31
   107a8:	cmp	w17, #0x3
   107ac:	b.ne	107cc <mpfr_div_2ui@@Base+0x194>  // b.any
   107b0:	orr	x9, x16, x15
   107b4:	cbz	x9, 108cc <mpfr_div_2ui@@Base+0x294>
   107b8:	ldr	w8, [x8, #8]
   107bc:	neg	w23, w8
   107c0:	cmp	x22, x1
   107c4:	b.ne	108d8 <mpfr_div_2ui@@Base+0x2a0>  // b.any
   107c8:	b	108e4 <mpfr_div_2ui@@Base+0x2ac>
   107cc:	orr	x15, x16, x15
   107d0:	cbz	x15, 108cc <mpfr_div_2ui@@Base+0x294>
   107d4:	ldr	x15, [x1]
   107d8:	ldr	w23, [x8, #8]
   107dc:	adds	x8, x15, x25
   107e0:	str	x8, [x22]
   107e4:	b.cc	10980 <mpfr_div_2ui@@Base+0x348>  // b.lo, b.ul, b.last
   107e8:	mov	x17, xzr
   107ec:	mov	x15, xzr
   107f0:	mov	x8, x10
   107f4:	add	x14, x15, #0x1
   107f8:	cmp	x14, x10
   107fc:	b.gt	109e4 <mpfr_div_2ui@@Base+0x3ac>
   10800:	lsl	x15, x15, #3
   10804:	add	x16, x1, x15
   10808:	ldr	x16, [x16, #8]
   1080c:	add	x15, x22, x15
   10810:	sub	x17, x17, #0x8
   10814:	sub	x8, x8, #0x1
   10818:	adds	x16, x16, #0x1
   1081c:	str	x16, [x15, #8]
   10820:	mov	x15, x14
   10824:	b.cs	107f4 <mpfr_div_2ui@@Base+0x1bc>  // b.hs, b.nlast
   10828:	cmp	x1, x22
   1082c:	b.eq	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.none
   10830:	cmp	x14, x10
   10834:	b.ge	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.tcont
   10838:	sub	x15, x10, x14
   1083c:	cmp	x15, #0x4
   10840:	add	x16, x14, #0x1
   10844:	b.cc	108a8 <mpfr_div_2ui@@Base+0x270>  // b.lo, b.ul, b.last
   10848:	sub	x18, x22, x17
   1084c:	add	x0, x18, #0x8
   10850:	cmp	x0, x13
   10854:	sub	x13, x1, x17
   10858:	b.cs	1086c <mpfr_div_2ui@@Base+0x234>  // b.hs, b.nlast
   1085c:	add	x12, x22, x12, lsl #3
   10860:	add	x17, x13, #0x8
   10864:	cmp	x17, x12
   10868:	b.cc	108a8 <mpfr_div_2ui@@Base+0x270>  // b.lo, b.ul, b.last
   1086c:	and	x8, x8, #0xfffffffffffffffc
   10870:	and	x17, x15, #0xfffffffffffffffc
   10874:	add	x8, x8, x14
   10878:	add	x12, x18, #0x18
   1087c:	add	x13, x13, #0x18
   10880:	add	x16, x8, #0x1
   10884:	mov	x8, x17
   10888:	ldp	q0, q1, [x13, #-16]
   1088c:	add	x13, x13, #0x20
   10890:	subs	x8, x8, #0x4
   10894:	stp	q0, q1, [x12, #-16]
   10898:	add	x12, x12, #0x20
   1089c:	b.ne	10888 <mpfr_div_2ui@@Base+0x250>  // b.any
   108a0:	cmp	x15, x17
   108a4:	b.eq	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.none
   108a8:	sub	x8, x16, x10
   108ac:	add	x10, x22, x16, lsl #3
   108b0:	add	x9, x11, x9, lsl #3
   108b4:	ldr	x11, [x9, x8, lsl #3]
   108b8:	add	x8, x8, #0x1
   108bc:	cmp	x8, #0x1
   108c0:	str	x11, [x10], #8
   108c4:	b.ne	108b4 <mpfr_div_2ui@@Base+0x27c>  // b.any
   108c8:	b	108e4 <mpfr_div_2ui@@Base+0x2ac>
   108cc:	mov	w23, wzr
   108d0:	cmp	x22, x1
   108d4:	b.eq	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.none
   108d8:	lsl	x2, x12, #3
   108dc:	mov	x0, x22
   108e0:	bl	ba70 <memcpy@plt>
   108e4:	ldr	x8, [x22]
   108e8:	neg	x9, x25
   108ec:	and	x8, x8, x9
   108f0:	str	x8, [x22]
   108f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   108f8:	ldr	x1, [x0, #2576]
   108fc:	add	x0, x0, #0xa10
   10900:	blr	x1
   10904:	mrs	x8, tpidr_el0
   10908:	ldr	x9, [x8, x0]
   1090c:	sub	x9, x24, x9
   10910:	add	x9, x9, #0x1
   10914:	cmp	x9, x20
   10918:	b.ls	10a54 <mpfr_div_2ui@@Base+0x41c>  // b.plast
   1091c:	tbz	x20, #63, 1093c <mpfr_div_2ui@@Base+0x304>
   10920:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10924:	add	x11, x20, x9
   10928:	add	x10, x24, #0x2
   1092c:	add	x9, x24, x9
   10930:	cmp	x11, #0x0
   10934:	csinc	x20, x11, xzr, ge  // ge = tcont
   10938:	csel	x24, x10, x9, lt  // lt = tstop
   1093c:	sub	x9, x24, x20
   10940:	str	x9, [x19, #16]
   10944:	cbz	w23, 10964 <mpfr_div_2ui@@Base+0x32c>
   10948:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1094c:	ldr	x1, [x0, #2640]
   10950:	add	x0, x0, #0xa50
   10954:	blr	x1
   10958:	ldr	w9, [x8, x0]
   1095c:	orr	w9, w9, #0x8
   10960:	str	w9, [x8, x0]
   10964:	mov	w0, w23
   10968:	ldp	x20, x19, [sp, #64]
   1096c:	ldp	x22, x21, [sp, #48]
   10970:	ldp	x24, x23, [sp, #32]
   10974:	ldr	x25, [sp, #16]
   10978:	ldp	x29, x30, [sp], #80
   1097c:	ret
   10980:	cmp	x14, #0x41
   10984:	b.lt	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.tstop
   10988:	cmp	x1, x22
   1098c:	b.eq	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.none
   10990:	cmp	x10, #0x4
   10994:	b.cc	109bc <mpfr_div_2ui@@Base+0x384>  // b.lo, b.ul, b.last
   10998:	add	x8, x22, #0x8
   1099c:	sub	x14, x9, x10
   109a0:	cmp	x8, x13
   109a4:	add	x8, x11, x14, lsl #3
   109a8:	b.cs	109f4 <mpfr_div_2ui@@Base+0x3bc>  // b.hs, b.nlast
   109ac:	add	x12, x22, x12, lsl #3
   109b0:	add	x13, x8, #0x8
   109b4:	cmp	x13, x12
   109b8:	b.cs	109f4 <mpfr_div_2ui@@Base+0x3bc>  // b.hs, b.nlast
   109bc:	mov	w8, #0x1                   	// #1
   109c0:	sub	x10, x8, x10
   109c4:	add	x8, x22, x8, lsl #3
   109c8:	add	x9, x11, x9, lsl #3
   109cc:	ldr	x11, [x9, x10, lsl #3]
   109d0:	add	x10, x10, #0x1
   109d4:	cmp	x10, #0x1
   109d8:	str	x11, [x8], #8
   109dc:	b.ne	109cc <mpfr_div_2ui@@Base+0x394>  // b.any
   109e0:	b	108e4 <mpfr_div_2ui@@Base+0x2ac>
   109e4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   109e8:	add	x24, x24, #0x1
   109ec:	str	x8, [x22, x10, lsl #3]
   109f0:	b	108e4 <mpfr_div_2ui@@Base+0x2ac>
   109f4:	and	x12, x10, #0xfffffffffffffffc
   109f8:	add	x13, x8, #0x18
   109fc:	orr	x8, x12, #0x1
   10a00:	add	x14, x22, #0x18
   10a04:	mov	x15, x12
   10a08:	ldp	q0, q1, [x13, #-16]
   10a0c:	add	x13, x13, #0x20
   10a10:	subs	x15, x15, #0x4
   10a14:	stp	q0, q1, [x14, #-16]
   10a18:	add	x14, x14, #0x20
   10a1c:	b.ne	10a08 <mpfr_div_2ui@@Base+0x3d0>  // b.any
   10a20:	cmp	x10, x12
   10a24:	b.eq	108e4 <mpfr_div_2ui@@Base+0x2ac>  // b.none
   10a28:	b	109c0 <mpfr_div_2ui@@Base+0x388>
   10a2c:	ldr	w3, [x8, #8]
   10a30:	mov	x0, x19
   10a34:	mov	w2, w21
   10a38:	ldp	x20, x19, [sp, #64]
   10a3c:	ldp	x22, x21, [sp, #48]
   10a40:	ldp	x24, x23, [sp, #32]
   10a44:	ldr	x25, [sp, #16]
   10a48:	mov	x1, x8
   10a4c:	ldp	x29, x30, [sp], #80
   10a50:	b	c690 <mpfr_set4@plt>
   10a54:	cbnz	w21, 10b14 <mpfr_div_2ui@@Base+0x4dc>
   10a58:	cmp	x9, x20
   10a5c:	b.cc	10b08 <mpfr_div_2ui@@Base+0x4d0>  // b.lo, b.ul, b.last
   10a60:	ldr	w8, [x19, #8]
   10a64:	tbnz	w8, #31, 10af4 <mpfr_div_2ui@@Base+0x4bc>
   10a68:	tbz	w23, #31, 10afc <mpfr_div_2ui@@Base+0x4c4>
   10a6c:	b	10b10 <mpfr_div_2ui@@Base+0x4d8>
   10a70:	ldr	x1, [x8, #24]
   10a74:	sub	x23, x12, x17
   10a78:	add	x0, x22, x23, lsl #3
   10a7c:	cmp	x0, x1
   10a80:	b.eq	10a8c <mpfr_div_2ui@@Base+0x454>  // b.none
   10a84:	lsl	x2, x17, #3
   10a88:	bl	ba70 <memcpy@plt>
   10a8c:	lsl	x2, x23, #3
   10a90:	mov	x0, x22
   10a94:	mov	w1, wzr
   10a98:	bl	c150 <memset@plt>
   10a9c:	mov	w23, wzr
   10aa0:	b	108f4 <mpfr_div_2ui@@Base+0x2bc>
   10aa4:	ldur	x16, [x1, #-8]
   10aa8:	and	x15, x16, #0x8000000000000000
   10aac:	and	x16, x16, #0x7fffffffffffffff
   10ab0:	cbz	w21, 10ac0 <mpfr_div_2ui@@Base+0x488>
   10ab4:	cbz	x15, 10ac0 <mpfr_div_2ui@@Base+0x488>
   10ab8:	mov	w25, #0x1                   	// #1
   10abc:	b	10774 <mpfr_div_2ui@@Base+0x13c>
   10ac0:	mov	w25, #0x1                   	// #1
   10ac4:	cbnz	x16, 10774 <mpfr_div_2ui@@Base+0x13c>
   10ac8:	sub	x17, x9, x12
   10acc:	cbz	x17, 10774 <mpfr_div_2ui@@Base+0x13c>
   10ad0:	sub	x16, x9, x10
   10ad4:	sub	x17, x16, #0x2
   10ad8:	mov	w25, #0x1                   	// #1
   10adc:	ldr	x16, [x11, x17, lsl #3]
   10ae0:	subs	x17, x17, #0x1
   10ae4:	cset	w18, cs  // cs = hs, nlast
   10ae8:	cbnz	x16, 10774 <mpfr_div_2ui@@Base+0x13c>
   10aec:	tbnz	w18, #0, 10adc <mpfr_div_2ui@@Base+0x4a4>
   10af0:	b	10774 <mpfr_div_2ui@@Base+0x13c>
   10af4:	cmp	w23, #0x1
   10af8:	b.ge	10b10 <mpfr_div_2ui@@Base+0x4d8>  // b.tcont
   10afc:	mov	x0, x19
   10b00:	bl	bf50 <mpfr_powerof2_raw@plt>
   10b04:	cbz	w0, 10b10 <mpfr_div_2ui@@Base+0x4d8>
   10b08:	mov	w21, #0x1                   	// #1
   10b0c:	b	10b14 <mpfr_div_2ui@@Base+0x4dc>
   10b10:	mov	w21, wzr
   10b14:	ldr	w2, [x19, #8]
   10b18:	mov	x0, x19
   10b1c:	mov	w1, w21
   10b20:	ldp	x20, x19, [sp, #64]
   10b24:	ldp	x22, x21, [sp, #48]
   10b28:	ldp	x24, x23, [sp, #32]
   10b2c:	ldr	x25, [sp, #16]
   10b30:	ldp	x29, x30, [sp], #80
   10b34:	b	c3c0 <mpfr_underflow@plt>

0000000000010b38 <mpfr_div@@Base>:
   10b38:	stp	x29, x30, [sp, #-96]!
   10b3c:	stp	x28, x27, [sp, #16]
   10b40:	stp	x26, x25, [sp, #32]
   10b44:	stp	x24, x23, [sp, #48]
   10b48:	stp	x22, x21, [sp, #64]
   10b4c:	stp	x20, x19, [sp, #80]
   10b50:	mov	x29, sp
   10b54:	sub	sp, sp, #0xe0
   10b58:	ldr	x8, [x1, #16]
   10b5c:	mov	x12, #0x2                   	// #2
   10b60:	movk	x12, #0x8000, lsl #48
   10b64:	add	x9, x12, #0x2
   10b68:	mov	x26, x2
   10b6c:	mov	x7, x1
   10b70:	cmp	x8, x9
   10b74:	mov	x24, x0
   10b78:	b.lt	11adc <mpfr_div@@Base+0xfa4>  // b.tstop
   10b7c:	ldr	x20, [x26, #16]
   10b80:	cmp	x20, x9
   10b84:	b.lt	11ae8 <mpfr_div@@Base+0xfb0>  // b.tstop
   10b88:	ldr	x28, [x7]
   10b8c:	ldr	x19, [x24]
   10b90:	ldr	x23, [x26]
   10b94:	cmp	x28, x19
   10b98:	b.ne	11108 <mpfr_div@@Base+0x5d0>  // b.any
   10b9c:	cmp	x23, x28
   10ba0:	b.ne	11108 <mpfr_div@@Base+0x5d0>  // b.any
   10ba4:	cmp	x28, #0x3f
   10ba8:	b.gt	10d7c <mpfr_div@@Base+0x244>
   10bac:	ldr	x10, [x7, #24]
   10bb0:	ldr	x11, [x26, #24]
   10bb4:	neg	x13, x28
   10bb8:	mov	w14, #0x1                   	// #1
   10bbc:	ldr	x17, [x10]
   10bc0:	ldr	x12, [x11]
   10bc4:	lsl	x10, x14, x13
   10bc8:	adrp	x16, 5e000 <mpfr_free_pool@@Base+0x2b84>
   10bcc:	add	x16, x16, #0x5b8
   10bd0:	cmp	x17, x12
   10bd4:	csel	x13, x12, xzr, cs  // cs = hs, nlast
   10bd8:	sub	x17, x17, x13
   10bdc:	lsr	x13, x12, #52
   10be0:	and	x13, x13, #0xff8
   10be4:	sub	x13, x13, #0x800
   10be8:	adrp	x15, 5d000 <mpfr_free_pool@@Base+0x1b84>
   10bec:	ldr	x14, [x16, x13]
   10bf0:	add	x15, x15, #0xdb8
   10bf4:	ldr	x13, [x15, x13]
   10bf8:	lsr	x15, x12, #24
   10bfc:	add	x15, x15, #0x1
   10c00:	mov	x11, #0xffffffffffffffff    	// #-1
   10c04:	mul	x14, x14, x15
   10c08:	eor	x11, x11, x14, lsr #40
   10c0c:	mov	x18, #0x1000000000000000    	// #1152921504606846976
   10c10:	add	x11, x13, x11
   10c14:	msub	x15, x11, x15, x18
   10c18:	mul	x15, x15, x11
   10c1c:	and	x13, x12, #0x1
   10c20:	lsr	x15, x15, #47
   10c24:	sub	x16, x12, #0x1
   10c28:	add	x15, x15, x11, lsl #13
   10c2c:	neg	x13, x13
   10c30:	lsr	x16, x16, #1
   10c34:	and	x13, x15, x13
   10c38:	add	x16, x16, #0x1
   10c3c:	lsr	x13, x13, #1
   10c40:	msub	x13, x15, x16, x13
   10c44:	lsl	x16, x15, #31
   10c48:	umulh	x13, x15, x13
   10c4c:	add	x13, x16, x13, lsr #1
   10c50:	umulh	x13, x17, x13
   10c54:	cset	w11, cs  // cs = hs, nlast
   10c58:	add	x13, x13, x17
   10c5c:	ldr	x9, [x24, #24]
   10c60:	sub	x14, x10, #0x1
   10c64:	lsr	x15, x13, x11
   10c68:	add	x16, x15, #0x2
   10c6c:	lsr	x14, x14, #1
   10c70:	and	x16, x16, x14
   10c74:	cmp	x16, #0x3
   10c78:	sub	x8, x8, x20
   10c7c:	b.cc	11ee8 <mpfr_div@@Base+0x13b0>  // b.lo, b.ul, b.last
   10c80:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   10c84:	lsr	x12, x12, x28
   10c88:	and	x12, x15, x12
   10c8c:	mov	w13, #0x1                   	// #1
   10c90:	orr	x14, x15, #0x8000000000000000
   10c94:	neg	x15, x10
   10c98:	and	x14, x14, x15
   10c9c:	str	x14, [x9]
   10ca0:	ldr	w15, [x7, #8]
   10ca4:	ldr	w16, [x26, #8]
   10ca8:	add	x11, x8, x11
   10cac:	mul	w2, w16, w15
   10cb0:	str	w2, [x24, #8]
   10cb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10cb8:	ldr	x1, [x0, #2608]
   10cbc:	add	x0, x0, #0xa30
   10cc0:	blr	x1
   10cc4:	mrs	x8, tpidr_el0
   10cc8:	ldr	x15, [x8, x0]
   10ccc:	cmp	x11, x15
   10cd0:	b.gt	10fd8 <mpfr_div@@Base+0x4a0>
   10cd4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10cd8:	ldr	x1, [x0, #2576]
   10cdc:	add	x0, x0, #0xa10
   10ce0:	blr	x1
   10ce4:	ldr	x15, [x8, x0]
   10ce8:	cmp	x11, x15
   10cec:	b.lt	11f50 <mpfr_div@@Base+0x1418>  // b.tstop
   10cf0:	mov	w21, wzr
   10cf4:	cmp	w3, #0x5
   10cf8:	str	x11, [x24, #16]
   10cfc:	b.eq	11e4c <mpfr_div@@Base+0x1314>  // b.none
   10d00:	orr	x13, x12, x13
   10d04:	cbz	x13, 11e4c <mpfr_div@@Base+0x1314>
   10d08:	cmp	w3, #0x1
   10d0c:	b.eq	117e0 <mpfr_div@@Base+0xca8>  // b.none
   10d10:	cbnz	w3, 117d4 <mpfr_div@@Base+0xc9c>
   10d14:	cbz	x12, 117e0 <mpfr_div@@Base+0xca8>
   10d18:	ldr	x12, [x9]
   10d1c:	adds	x10, x12, x10
   10d20:	str	x10, [x9]
   10d24:	b.ne	10d54 <mpfr_div@@Base+0x21c>  // b.any
   10d28:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   10d2c:	str	x10, [x9]
   10d30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10d34:	ldr	x1, [x0, #2608]
   10d38:	add	x0, x0, #0xa30
   10d3c:	blr	x1
   10d40:	ldr	x9, [x8, x0]
   10d44:	cmp	x11, x9
   10d48:	b.ge	10fd8 <mpfr_div@@Base+0x4a0>  // b.tcont
   10d4c:	add	x9, x11, #0x1
   10d50:	str	x9, [x24, #16]
   10d54:	cbz	w2, 11abc <mpfr_div@@Base+0xf84>
   10d58:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10d5c:	ldr	x1, [x0, #2640]
   10d60:	add	x0, x0, #0xa50
   10d64:	blr	x1
   10d68:	ldr	w9, [x8, x0]
   10d6c:	mov	w21, w2
   10d70:	orr	w9, w9, #0x8
   10d74:	str	w9, [x8, x0]
   10d78:	b	11e4c <mpfr_div@@Base+0x1314>
   10d7c:	cmp	x28, #0x40
   10d80:	b.eq	10fec <mpfr_div@@Base+0x4b4>  // b.none
   10d84:	cmp	x28, #0x7f
   10d88:	b.gt	10fec <mpfr_div@@Base+0x4b4>
   10d8c:	ldr	x10, [x7, #24]
   10d90:	ldr	x11, [x26, #24]
   10d94:	ldr	x9, [x24, #24]
   10d98:	mov	w14, #0x1                   	// #1
   10d9c:	ldp	x16, x15, [x10]
   10da0:	ldp	x13, x12, [x11]
   10da4:	neg	x10, x28
   10da8:	cmp	x15, x12
   10dac:	b.hi	10dc0 <mpfr_div@@Base+0x288>  // b.pmore
   10db0:	mov	w11, wzr
   10db4:	b.ne	10dd0 <mpfr_div@@Base+0x298>  // b.any
   10db8:	cmp	x16, x13
   10dbc:	b.cc	10dd0 <mpfr_div@@Base+0x298>  // b.lo, b.ul, b.last
   10dc0:	subs	x17, x16, x13
   10dc4:	sbc	x15, x15, x12
   10dc8:	mov	w11, #0x1                   	// #1
   10dcc:	mov	x16, x17
   10dd0:	cmn	x12, #0x1
   10dd4:	lsl	x10, x14, x10
   10dd8:	b.eq	12010 <mpfr_div@@Base+0x14d8>  // b.none
   10ddc:	add	x14, x12, #0x1
   10de0:	lsr	x1, x14, #52
   10de4:	adrp	x18, 5e000 <mpfr_free_pool@@Base+0x2b84>
   10de8:	and	x1, x1, #0xff8
   10dec:	add	x18, x18, #0x5b8
   10df0:	sub	x1, x1, #0x800
   10df4:	adrp	x17, 5d000 <mpfr_free_pool@@Base+0x1b84>
   10df8:	ldr	x18, [x18, x1]
   10dfc:	add	x17, x17, #0xdb8
   10e00:	ldr	x17, [x17, x1]
   10e04:	lsr	x1, x14, #24
   10e08:	add	x1, x1, #0x1
   10e0c:	mov	x0, #0xffffffffffffffff    	// #-1
   10e10:	mul	x18, x18, x1
   10e14:	eor	x18, x0, x18, lsr #40
   10e18:	mov	x0, #0x1000000000000000    	// #1152921504606846976
   10e1c:	add	x17, x17, x18
   10e20:	msub	x0, x17, x1, x0
   10e24:	mul	x0, x0, x17
   10e28:	and	x14, x14, #0x1
   10e2c:	lsr	x0, x0, #47
   10e30:	neg	x14, x14
   10e34:	add	x17, x0, x17, lsl #13
   10e38:	lsr	x18, x12, #1
   10e3c:	and	x14, x17, x14
   10e40:	add	x18, x18, #0x1
   10e44:	lsr	x14, x14, #1
   10e48:	msub	x14, x17, x18, x14
   10e4c:	umulh	x14, x17, x14
   10e50:	lsl	x17, x17, #31
   10e54:	add	x18, x17, x14, lsr #1
   10e58:	umulh	x17, x15, x18
   10e5c:	add	x5, x17, x15
   10e60:	mul	x0, x5, x12
   10e64:	umulh	x17, x5, x12
   10e68:	umulh	x1, x5, x13
   10e6c:	mul	x2, x5, x13
   10e70:	adds	x0, x0, x1
   10e74:	sub	x15, x15, x17
   10e78:	cset	w17, cs  // cs = hs, nlast
   10e7c:	cmp	x2, #0x0
   10e80:	cinc	x0, x0, ne  // ne = any
   10e84:	cset	w1, ne  // ne = any
   10e88:	cmp	x0, #0x0
   10e8c:	sub	x15, x15, x17
   10e90:	cset	w17, eq  // eq = none
   10e94:	subs	x4, x16, x0
   10e98:	and	w1, w1, w17
   10e9c:	cset	w17, cc  // cc = lo, ul, last
   10ea0:	umulh	x2, x4, x18
   10ea4:	sub	x15, x15, x17
   10ea8:	adds	x17, x4, x2
   10eac:	sub	x1, x15, x1
   10eb0:	cinc	x15, x5, cs  // cs = hs, nlast
   10eb4:	sub	x14, x10, #0x1
   10eb8:	add	x15, x15, x1
   10ebc:	cbz	x1, 10f64 <mpfr_div@@Base+0x42c>
   10ec0:	cmp	x1, #0x4
   10ec4:	mov	x6, x1
   10ec8:	b.cc	10f40 <mpfr_div@@Base+0x408>  // b.lo, b.ul, b.last
   10ecc:	fmov	d3, x18
   10ed0:	movi	v4.2d, #0x0
   10ed4:	and	x4, x1, #0xfffffffffffffffc
   10ed8:	dup	v2.2d, x17
   10edc:	lsl	x5, x18, #1
   10ee0:	movi	v1.2d, #0x0
   10ee4:	mvn	v3.16b, v3.16b
   10ee8:	mov	v4.d[1], x18
   10eec:	and	x6, x1, #0x3
   10ef0:	movi	v0.2d, #0x0
   10ef4:	madd	x17, x4, x18, x17
   10ef8:	add	v4.2d, v2.2d, v4.2d
   10efc:	dup	v2.2d, x5
   10f00:	mov	v1.d[0], x15
   10f04:	dup	v3.2d, v3.d[0]
   10f08:	mov	x15, x4
   10f0c:	add	v5.2d, v4.2d, v2.2d
   10f10:	cmhi	v4.2d, v4.2d, v3.2d
   10f14:	cmhi	v6.2d, v5.2d, v3.2d
   10f18:	subs	x15, x15, #0x4
   10f1c:	sub	v1.2d, v1.2d, v4.2d
   10f20:	sub	v0.2d, v0.2d, v6.2d
   10f24:	add	v4.2d, v5.2d, v2.2d
   10f28:	b.ne	10f0c <mpfr_div@@Base+0x3d4>  // b.any
   10f2c:	add	v0.2d, v0.2d, v1.2d
   10f30:	addp	d0, v0.2d
   10f34:	cmp	x1, x4
   10f38:	fmov	x15, d0
   10f3c:	b.eq	10f58 <mpfr_div@@Base+0x420>  // b.none
   10f40:	add	x17, x17, x18
   10f44:	cmp	x17, x18
   10f48:	cinc	x15, x15, cc  // cc = lo, ul, last
   10f4c:	subs	x6, x6, #0x1
   10f50:	add	x17, x17, x18
   10f54:	b.ne	10f44 <mpfr_div@@Base+0x40c>  // b.any
   10f58:	add	x17, x2, x16
   10f5c:	sub	x17, x17, x0
   10f60:	madd	x17, x1, x18, x17
   10f64:	add	x18, x17, #0x15
   10f68:	and	x18, x18, x14, lsr #1
   10f6c:	cmp	x18, #0x15
   10f70:	sub	x8, x8, x20
   10f74:	b.ls	12018 <mpfr_div@@Base+0x14e0>  // b.plast
   10f78:	mov	w12, #0x1                   	// #1
   10f7c:	cbz	w11, 10f9c <mpfr_div@@Base+0x464>
   10f80:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   10f84:	and	x11, x17, #0x1
   10f88:	bfxil	x13, x15, #1, #63
   10f8c:	add	x8, x8, #0x1
   10f90:	orr	x12, x12, x11
   10f94:	extr	x17, x15, x17, #1
   10f98:	mov	x15, x13
   10f9c:	neg	x11, x10
   10fa0:	and	x13, x17, x11
   10fa4:	stp	x13, x15, [x9]
   10fa8:	ldr	w11, [x7, #8]
   10fac:	ldr	w16, [x26, #8]
   10fb0:	mul	w2, w16, w11
   10fb4:	str	w2, [x24, #8]
   10fb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   10fbc:	ldr	x1, [x0, #2608]
   10fc0:	add	x0, x0, #0xa30
   10fc4:	blr	x1
   10fc8:	mrs	x11, tpidr_el0
   10fcc:	ldr	x16, [x11, x0]
   10fd0:	cmp	x8, x16
   10fd4:	b.le	11758 <mpfr_div@@Base+0xc20>
   10fd8:	mov	x0, x24
   10fdc:	mov	w1, w3
   10fe0:	bl	bf90 <mpfr_overflow@plt>
   10fe4:	mov	w21, w0
   10fe8:	b	11e4c <mpfr_div@@Base+0x1314>
   10fec:	cmp	x28, #0x40
   10ff0:	mov	x23, x28
   10ff4:	b.ne	11108 <mpfr_div@@Base+0x5d0>  // b.any
   10ff8:	ldr	x11, [x26, #24]
   10ffc:	ldr	x10, [x7, #24]
   11000:	adrp	x15, 5d000 <mpfr_free_pool@@Base+0x1b84>
   11004:	add	x15, x15, #0xdb8
   11008:	ldr	x12, [x11]
   1100c:	ldr	x13, [x10]
   11010:	adrp	x10, 5e000 <mpfr_free_pool@@Base+0x2b84>
   11014:	add	x10, x10, #0x5b8
   11018:	lsr	x17, x12, #52
   1101c:	and	x17, x17, #0xff8
   11020:	sub	x17, x17, #0x800
   11024:	ldr	x10, [x10, x17]
   11028:	ldr	x15, [x15, x17]
   1102c:	lsr	x17, x12, #24
   11030:	add	x17, x17, #0x1
   11034:	mov	x11, #0xffffffffffffffff    	// #-1
   11038:	mul	x10, x10, x17
   1103c:	eor	x10, x11, x10, lsr #40
   11040:	mov	x16, #0x1000000000000000    	// #1152921504606846976
   11044:	add	x10, x15, x10
   11048:	msub	x16, x10, x17, x16
   1104c:	mul	x16, x16, x10
   11050:	mov	x14, xzr
   11054:	and	x11, x12, #0x1
   11058:	lsr	x16, x16, #47
   1105c:	sub	x15, x12, #0x1
   11060:	sub	x11, x14, x11
   11064:	add	x10, x16, x10, lsl #13
   11068:	lsr	x15, x15, #1
   1106c:	and	x11, x10, x11
   11070:	add	x15, x15, #0x1
   11074:	lsr	x11, x11, #1
   11078:	ldr	x9, [x24, #24]
   1107c:	cmp	x13, x12
   11080:	lsl	x16, x10, #31
   11084:	msub	x11, x10, x15, x11
   11088:	umulh	x10, x10, x11
   1108c:	csel	x17, x12, x14, cs  // cs = hs, nlast
   11090:	add	x10, x16, x10, lsr #1
   11094:	sub	x17, x13, x17
   11098:	umulh	x10, x17, x10
   1109c:	add	x10, x10, x17
   110a0:	umulh	x15, x10, x12
   110a4:	mul	x16, x10, x12
   110a8:	subs	x11, x14, x16
   110ac:	sbc	x14, x17, x15
   110b0:	cbnz	x14, 110bc <mpfr_div@@Base+0x584>
   110b4:	cmp	x11, x12
   110b8:	b.cc	110e0 <mpfr_div@@Base+0x5a8>  // b.lo, b.ul, b.last
   110bc:	neg	x15, x12
   110c0:	add	x16, x15, x11
   110c4:	subs	x11, x11, x12
   110c8:	cset	w17, cc  // cc = lo, ul, last
   110cc:	add	x10, x10, #0x1
   110d0:	cmp	x16, x12
   110d4:	sub	x14, x14, x17
   110d8:	b.cs	110c0 <mpfr_div@@Base+0x588>  // b.hs, b.nlast
   110dc:	cbnz	x14, 110c0 <mpfr_div@@Base+0x588>
   110e0:	cmp	x13, x12
   110e4:	sub	x8, x8, x20
   110e8:	b.cc	11808 <mpfr_div@@Base+0xcd0>  // b.lo, b.ul, b.last
   110ec:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   110f0:	bfxil	x12, x10, #1, #63
   110f4:	and	x13, x10, #0x1
   110f8:	add	x8, x8, #0x1
   110fc:	mov	x10, x12
   11100:	str	x12, [x9]
   11104:	b	1182c <mpfr_div@@Base+0xcf4>
   11108:	sub	x9, x28, #0x1
   1110c:	add	x10, x28, #0x3e
   11110:	sub	x11, x23, #0x1
   11114:	ldr	x15, [x24, #24]
   11118:	cmp	x9, #0x0
   1111c:	ldr	x27, [x7, #24]
   11120:	ldr	x17, [x26, #24]
   11124:	add	x12, x23, #0x3e
   11128:	sub	x13, x19, #0x1
   1112c:	csel	x16, x10, x9, lt  // lt = tstop
   11130:	cmp	x11, #0x0
   11134:	add	x14, x19, #0x3e
   11138:	csel	x12, x12, x11, lt  // lt = tstop
   1113c:	cmp	x13, #0x0
   11140:	csel	x11, x14, x13, lt  // lt = tstop
   11144:	cmp	x23, #0x40
   11148:	mrs	x25, tpidr_el0
   1114c:	b.gt	11190 <mpfr_div@@Base+0x658>
   11150:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11154:	ldr	x1, [x0, #2576]
   11158:	add	x0, x0, #0xa10
   1115c:	blr	x1
   11160:	ldr	x9, [x25, x0]
   11164:	sub	x10, x8, #0x40
   11168:	cmp	x9, x10
   1116c:	b.gt	11190 <mpfr_div@@Base+0x658>
   11170:	sub	x8, x8, #0x3f
   11174:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11178:	ldr	x1, [x0, #2608]
   1117c:	add	x0, x0, #0xa30
   11180:	blr	x1
   11184:	ldr	x9, [x25, x0]
   11188:	cmp	x8, x9
   1118c:	b.le	11730 <mpfr_div@@Base+0xbf8>
   11190:	cmp	x19, #0x7c1
   11194:	stp	x15, x17, [x29, #-80]
   11198:	stur	x24, [x29, #-64]
   1119c:	b.lt	11434 <mpfr_div@@Base+0x8fc>  // b.tstop
   111a0:	sub	x0, x29, #0x18
   111a4:	mov	x22, x27
   111a8:	stp	x12, x16, [x29, #-128]
   111ac:	stur	x11, [x29, #-112]
   111b0:	stur	w3, [x29, #-100]
   111b4:	add	x20, x19, #0x40
   111b8:	mov	x21, x7
   111bc:	bl	bfe0 <mpfr_mpz_init@plt>
   111c0:	sub	x0, x29, #0x28
   111c4:	bl	bfe0 <mpfr_mpz_init@plt>
   111c8:	sub	x0, x29, #0x38
   111cc:	bl	bfe0 <mpfr_mpz_init@plt>
   111d0:	sub	x0, x29, #0x28
   111d4:	mov	x1, x21
   111d8:	stur	x21, [x29, #-136]
   111dc:	bl	caa0 <mpfr_get_z_2exp@plt>
   111e0:	stur	x0, [x29, #-88]
   111e4:	sub	x0, x29, #0x38
   111e8:	mov	x1, x26
   111ec:	bl	caa0 <mpfr_get_z_2exp@plt>
   111f0:	mov	x27, x0
   111f4:	sub	x0, x29, #0x38
   111f8:	mov	w1, #0x2                   	// #2
   111fc:	bl	cb40 <__gmpz_sizeinbase@plt>
   11200:	subs	x24, x0, x20
   11204:	b.le	11224 <mpfr_div@@Base+0x6ec>
   11208:	sub	x0, x29, #0x38
   1120c:	sub	x1, x29, #0x38
   11210:	mov	x2, x24
   11214:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   11218:	add	x27, x24, x27
   1121c:	mov	x21, x20
   11220:	b	11228 <mpfr_div@@Base+0x6f0>
   11224:	mov	x21, x0
   11228:	stur	x27, [x29, #-152]
   1122c:	sub	x0, x29, #0x28
   11230:	mov	w1, #0x2                   	// #2
   11234:	bl	cb40 <__gmpz_sizeinbase@plt>
   11238:	ldur	x24, [x29, #-64]
   1123c:	add	x8, x21, x20
   11240:	subs	x21, x0, x8
   11244:	mov	x27, x22
   11248:	b.le	11268 <mpfr_div@@Base+0x730>
   1124c:	sub	x0, x29, #0x28
   11250:	sub	x1, x29, #0x28
   11254:	mov	x2, x21
   11258:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   1125c:	ldur	x8, [x29, #-88]
   11260:	add	x8, x21, x8
   11264:	b	11288 <mpfr_div@@Base+0x750>
   11268:	b.ge	1128c <mpfr_div@@Base+0x754>  // b.tcont
   1126c:	sub	x21, x8, x0
   11270:	sub	x0, x29, #0x28
   11274:	sub	x1, x29, #0x28
   11278:	mov	x2, x21
   1127c:	bl	c230 <__gmpz_mul_2exp@plt>
   11280:	ldur	x8, [x29, #-88]
   11284:	sub	x8, x8, x21
   11288:	stur	x8, [x29, #-88]
   1128c:	sub	x0, x29, #0x18
   11290:	sub	x1, x29, #0x28
   11294:	sub	x2, x29, #0x38
   11298:	bl	bb80 <__gmpz_tdiv_q@plt>
   1129c:	sub	x0, x29, #0x18
   112a0:	mov	w1, #0x2                   	// #2
   112a4:	bl	cb40 <__gmpz_sizeinbase@plt>
   112a8:	sub	x20, x0, x20
   112ac:	add	x21, x20, #0x1
   112b0:	sub	x0, x29, #0x18
   112b4:	mov	x1, x21
   112b8:	bl	baf0 <__gmpz_scan1@plt>
   112bc:	ldur	w8, [x29, #-100]
   112c0:	cmp	w8, #0x0
   112c4:	mov	w8, #0x3f                  	// #63
   112c8:	cinc	x8, x8, ne  // ne = any
   112cc:	add	x20, x20, x8
   112d0:	cmp	x0, x20
   112d4:	b.cs	11404 <mpfr_div@@Base+0x8cc>  // b.hs, b.nlast
   112d8:	sub	x0, x29, #0x18
   112dc:	mov	x1, x21
   112e0:	bl	c4a0 <__gmpz_scan0@plt>
   112e4:	cmp	x0, x20
   112e8:	b.cs	11404 <mpfr_div@@Base+0x8cc>  // b.hs, b.nlast
   112ec:	stur	x27, [x29, #-96]
   112f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   112f4:	ldr	x1, [x0, #2640]
   112f8:	add	x0, x0, #0xa50
   112fc:	blr	x1
   11300:	ldr	w8, [x25, x0]
   11304:	mov	x24, x0
   11308:	stur	w8, [x29, #-160]
   1130c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11310:	ldr	x1, [x0, #2576]
   11314:	add	x0, x0, #0xa10
   11318:	blr	x1
   1131c:	ldr	x21, [x25, x0]
   11320:	mov	x20, x0
   11324:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11328:	ldr	x1, [x0, #2608]
   1132c:	add	x0, x0, #0xa30
   11330:	blr	x1
   11334:	mov	x22, x25
   11338:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   1133c:	str	x8, [x22, x20]
   11340:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   11344:	mov	x27, x0
   11348:	ldr	x25, [x25, x0]
   1134c:	str	x8, [x22, x0]
   11350:	ldur	x0, [x29, #-64]
   11354:	ldur	w2, [x29, #-100]
   11358:	sub	x1, x29, #0x18
   1135c:	bl	c250 <mpfr_set_z@plt>
   11360:	ldur	w14, [x29, #-160]
   11364:	mov	x12, x21
   11368:	str	x12, [x22, x20]
   1136c:	str	x25, [x22, x27]
   11370:	str	w14, [x22, x24]
   11374:	ldur	x24, [x29, #-64]
   11378:	ldur	x10, [x29, #-88]
   1137c:	ldur	x11, [x29, #-152]
   11380:	mov	x8, #0x2                   	// #2
   11384:	ldr	x9, [x24, #16]
   11388:	movk	x8, #0x8000, lsl #48
   1138c:	add	x8, x8, #0x2
   11390:	sub	x10, x10, x11
   11394:	cmp	x9, x8
   11398:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   1139c:	add	x8, x9, x10
   113a0:	cset	w10, ge  // ge = tcont
   113a4:	cmp	x9, x11
   113a8:	mov	x15, #0x3fffffffffffffff    	// #4611686018427387903
   113ac:	cset	w11, ne  // ne = any
   113b0:	cmp	x9, x15
   113b4:	mov	x13, x25
   113b8:	and	w9, w10, w11
   113bc:	cset	w10, ne  // ne = any
   113c0:	mov	w21, w0
   113c4:	mov	x25, x22
   113c8:	cmp	x8, x13
   113cc:	and	w20, w10, w9
   113d0:	str	x8, [x24, #16]
   113d4:	b.gt	1218c <mpfr_div@@Base+0x1654>
   113d8:	cmp	x8, x12
   113dc:	b.lt	1218c <mpfr_div@@Base+0x1654>  // b.tstop
   113e0:	ldur	x27, [x29, #-96]
   113e4:	cbz	w21, 11408 <mpfr_div@@Base+0x8d0>
   113e8:	orr	w8, w14, #0x8
   113ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   113f0:	ldr	x1, [x0, #2640]
   113f4:	add	x0, x0, #0xa50
   113f8:	blr	x1
   113fc:	str	w8, [x25, x0]
   11400:	b	11408 <mpfr_div@@Base+0x8d0>
   11404:	mov	w20, wzr
   11408:	sub	x0, x29, #0x18
   1140c:	bl	c1b0 <mpfr_mpz_clear@plt>
   11410:	sub	x0, x29, #0x28
   11414:	bl	c1b0 <mpfr_mpz_clear@plt>
   11418:	sub	x0, x29, #0x38
   1141c:	bl	c1b0 <mpfr_mpz_clear@plt>
   11420:	ldur	w3, [x29, #-100]
   11424:	ldp	x15, x17, [x29, #-80]
   11428:	ldp	x16, x11, [x29, #-120]
   1142c:	ldp	x7, x12, [x29, #-136]
   11430:	cbnz	w20, 11e4c <mpfr_div@@Base+0x1314>
   11434:	stur	xzr, [x29, #-24]
   11438:	ldr	w8, [x7, #8]
   1143c:	ldr	w9, [x26, #8]
   11440:	asr	x0, x16, #6
   11444:	asr	x18, x12, #6
   11448:	asr	x16, x11, #6
   1144c:	mul	w14, w9, w8
   11450:	str	w14, [x24, #8]
   11454:	ldr	x9, [x27, x0, lsl #3]
   11458:	ldr	x8, [x17, x18, lsl #3]
   1145c:	stp	x27, x18, [x29, #-96]
   11460:	stur	x25, [x29, #-144]
   11464:	cmp	x9, x8
   11468:	b.eq	11b68 <mpfr_div@@Base+0x1030>  // b.none
   1146c:	cset	w20, hi  // hi = pmore
   11470:	add	x8, x18, #0x1
   11474:	stp	x16, x8, [x29, #-120]
   11478:	ldr	x8, [x7, #16]
   1147c:	ldr	x9, [x26, #16]
   11480:	ldr	w10, [x24]
   11484:	cmp	w3, #0x1
   11488:	mov	w11, #0x2                   	// #2
   1148c:	cset	w12, eq  // eq = none
   11490:	cmp	w14, #0x0
   11494:	cinc	w11, w11, ge  // ge = tcont
   11498:	cmp	w11, w3
   1149c:	sub	x8, x8, x9
   114a0:	neg	w9, w10
   114a4:	cset	w10, eq  // eq = none
   114a8:	add	x8, x8, x20
   114ac:	add	x27, x0, #0x1
   114b0:	add	x22, x16, #0x1
   114b4:	cmp	x19, #0x601
   114b8:	stp	x20, x8, [x29, #-160]
   114bc:	and	w28, w9, #0x3f
   114c0:	orr	w8, w12, w10
   114c4:	stur	x0, [x29, #-176]
   114c8:	stur	w14, [x29, #-136]
   114cc:	stur	w11, [x29, #-188]
   114d0:	stur	w8, [x29, #-164]
   114d4:	stur	x28, [x29, #-128]
   114d8:	b.lt	114e4 <mpfr_div@@Base+0x9ac>  // b.tstop
   114dc:	cmp	x23, #0x601
   114e0:	b.ge	11bc0 <mpfr_div@@Base+0x1088>  // b.tcont
   114e4:	orr	w8, w28, w3
   114e8:	mov	x21, x15
   114ec:	mov	x25, x22
   114f0:	cbz	w8, 11c34 <mpfr_div@@Base+0x10fc>
   114f4:	lsl	x24, x25, #4
   114f8:	cmp	x24, #0x4, lsl #12
   114fc:	lsl	x23, x25, #1
   11500:	b.hi	11c60 <mpfr_div@@Base+0x1128>  // b.pmore
   11504:	add	x9, x24, #0xf
   11508:	mov	x8, sp
   1150c:	and	x9, x9, #0xfffffffffffffff0
   11510:	sub	x26, x8, x9
   11514:	mov	sp, x26
   11518:	subs	x9, x27, x23
   1151c:	mov	w28, w3
   11520:	stur	x9, [x29, #-200]
   11524:	b.ge	11c88 <mpfr_div@@Base+0x1150>  // b.tcont
   11528:	sub	x19, x23, x27
   1152c:	lsl	x20, x19, #3
   11530:	mov	x0, x26
   11534:	mov	w1, wzr
   11538:	mov	x2, x20
   1153c:	bl	c150 <memset@plt>
   11540:	ldur	x8, [x29, #-160]
   11544:	add	x0, x26, x20
   11548:	cbz	w8, 11570 <mpfr_div@@Base+0xa38>
   1154c:	ldur	x1, [x29, #-96]
   11550:	mov	w3, #0x1                   	// #1
   11554:	mov	x2, x27
   11558:	bl	bd30 <__gmpn_rshift@plt>
   1155c:	ldur	x10, [x29, #-72]
   11560:	add	x8, x26, x19, lsl #3
   11564:	mov	x20, xzr
   11568:	stur	x0, [x8, #-8]
   1156c:	b	1158c <mpfr_div@@Base+0xa54>
   11570:	ldur	x1, [x29, #-96]
   11574:	cmp	x0, x1
   11578:	b.eq	11584 <mpfr_div@@Base+0xa4c>  // b.none
   1157c:	lsl	x2, x27, #3
   11580:	bl	ba70 <memcpy@plt>
   11584:	ldur	x10, [x29, #-72]
   11588:	mov	x20, xzr
   1158c:	ldur	x8, [x29, #-112]
   11590:	subs	x8, x8, x25
   11594:	stur	x8, [x29, #-184]
   11598:	b.lt	11cb4 <mpfr_div@@Base+0x117c>  // b.tstop
   1159c:	cmp	x21, x10
   115a0:	b.eq	115ac <mpfr_div@@Base+0xa74>  // b.none
   115a4:	add	x4, x10, x8, lsl #3
   115a8:	b	115f4 <mpfr_div@@Base+0xabc>
   115ac:	lsl	x1, x25, #3
   115b0:	cmp	x1, #0x4, lsl #12
   115b4:	b.hi	11ff0 <mpfr_div@@Base+0x14b8>  // b.pmore
   115b8:	add	x9, x1, #0xf
   115bc:	mov	x8, sp
   115c0:	and	x9, x9, #0xfffffffffffffff0
   115c4:	sub	x24, x8, x9
   115c8:	mov	sp, x24
   115cc:	cmp	x10, x24
   115d0:	mov	x4, x10
   115d4:	b.eq	115f4 <mpfr_div@@Base+0xabc>  // b.none
   115d8:	ldur	x8, [x29, #-112]
   115dc:	mov	x0, x24
   115e0:	mov	x1, x10
   115e4:	lsl	x2, x8, #3
   115e8:	bl	ba70 <memcpy@plt>
   115ec:	ldur	x10, [x29, #-72]
   115f0:	mov	x4, x24
   115f4:	ldur	x8, [x29, #-88]
   115f8:	mov	w19, #0x1                   	// #1
   115fc:	sub	x8, x8, x25
   11600:	add	x9, x8, #0x1
   11604:	cmp	x9, #0x1
   11608:	b.lt	11a4c <mpfr_div@@Base+0xf14>  // b.tstop
   1160c:	ldr	x9, [x10, x8, lsl #3]
   11610:	sub	x8, x8, #0x1
   11614:	cbz	x9, 11600 <mpfr_div@@Base+0xac8>
   11618:	mov	x8, xzr
   1161c:	add	x2, x26, x8, lsl #3
   11620:	sub	x3, x23, x8
   11624:	sub	x5, x25, x8
   11628:	mov	x0, x21
   1162c:	mov	x1, xzr
   11630:	stur	x23, [x29, #-208]
   11634:	bl	cc90 <__gmpn_divrem@plt>
   11638:	mov	x24, x0
   1163c:	cbz	x20, 11694 <mpfr_div@@Base+0xb5c>
   11640:	mov	w3, w28
   11644:	ldp	x12, x15, [x29, #-88]
   11648:	ldur	x28, [x29, #-128]
   1164c:	mov	w23, #0x1                   	// #1
   11650:	stur	x20, [x29, #-216]
   11654:	cmp	x25, x22
   11658:	orr	x20, x23, x19
   1165c:	b.eq	116d0 <mpfr_div@@Base+0xb98>  // b.none
   11660:	add	x1, x21, #0x8
   11664:	cmp	x15, x1
   11668:	b.eq	11684 <mpfr_div@@Base+0xb4c>  // b.none
   1166c:	lsl	x2, x22, #3
   11670:	mov	x0, x15
   11674:	mov	w19, w3
   11678:	bl	ba70 <memcpy@plt>
   1167c:	ldp	x12, x15, [x29, #-88]
   11680:	mov	w3, w19
   11684:	ldr	x8, [x21]
   11688:	mov	w9, #0x3f                  	// #63
   1168c:	mov	x19, x8
   11690:	b	116e4 <mpfr_div@@Base+0xbac>
   11694:	mov	w3, w28
   11698:	ldp	x12, x15, [x29, #-88]
   1169c:	ldur	x28, [x29, #-128]
   116a0:	sub	x8, x26, #0x8
   116a4:	mov	w23, #0x1                   	// #1
   116a8:	mov	x9, x25
   116ac:	subs	x10, x9, #0x1
   116b0:	b.lt	11ac4 <mpfr_div@@Base+0xf8c>  // b.tstop
   116b4:	ldr	x11, [x8, x9, lsl #3]
   116b8:	mov	x9, x10
   116bc:	cbz	x11, 116ac <mpfr_div@@Base+0xb74>
   116c0:	stur	x20, [x29, #-216]
   116c4:	cmp	x25, x22
   116c8:	orr	x20, x23, x19
   116cc:	b.ne	11660 <mpfr_div@@Base+0xb28>  // b.any
   116d0:	ldr	x8, [x21]
   116d4:	mov	x9, #0xffffffffffffffff    	// #-1
   116d8:	lsl	x9, x9, x28
   116dc:	bic	x19, x8, x9
   116e0:	sub	w9, w28, #0x1
   116e4:	eor	x8, x8, x19
   116e8:	subs	x22, x12, x25
   116ec:	orr	x10, x20, x19
   116f0:	str	x8, [x21]
   116f4:	b.ge	11cc8 <mpfr_div@@Base+0x1190>  // b.tcont
   116f8:	cbnz	w3, 11d48 <mpfr_div@@Base+0x1210>
   116fc:	mov	w8, #0x1                   	// #1
   11700:	lsl	x8, x8, x9
   11704:	and	x20, x19, x8
   11708:	eor	x8, x20, x19
   1170c:	orr	x24, x8, x23
   11710:	ldur	x22, [x29, #-144]
   11714:	ldur	x11, [x29, #-120]
   11718:	ldur	w8, [x29, #-164]
   1171c:	cbz	w8, 11d64 <mpfr_div@@Base+0x122c>
   11720:	orr	x8, x24, x20
   11724:	cmp	x8, #0x0
   11728:	csetm	w19, ne  // ne = any
   1172c:	b	11dd8 <mpfr_div@@Base+0x12a0>
   11730:	ldr	w8, [x26, #8]
   11734:	ldr	x2, [x17]
   11738:	cmp	w8, #0x1
   1173c:	b.lt	11998 <mpfr_div@@Base+0xe60>  // b.tstop
   11740:	mov	x0, x24
   11744:	mov	x1, x7
   11748:	mov	w19, w3
   1174c:	bl	cc40 <mpfr_div_ui@plt>
   11750:	mov	w21, w0
   11754:	b	119d0 <mpfr_div@@Base+0xe98>
   11758:	mov	w16, #0x7f                  	// #127
   1175c:	mov	w18, #0x1                   	// #1
   11760:	sub	x16, x16, x28
   11764:	lsl	x16, x18, x16
   11768:	and	x16, x17, x16
   1176c:	and	x14, x17, x14
   11770:	eor	x14, x14, x16
   11774:	orr	x12, x14, x12
   11778:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1177c:	ldr	x1, [x0, #2576]
   11780:	add	x0, x0, #0xa10
   11784:	blr	x1
   11788:	ldr	x14, [x11, x0]
   1178c:	cmp	x8, x14
   11790:	b.ge	11904 <mpfr_div@@Base+0xdcc>  // b.tcont
   11794:	cbnz	w3, 117c0 <mpfr_div@@Base+0xc88>
   11798:	sub	x9, x14, #0x1
   1179c:	cmp	x8, x9
   117a0:	b.lt	117bc <mpfr_div@@Base+0xc84>  // b.tstop
   117a4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   117a8:	cmp	x15, x8
   117ac:	mov	w3, wzr
   117b0:	b.ne	117c0 <mpfr_div@@Base+0xc88>  // b.any
   117b4:	orr	x8, x12, x13
   117b8:	cbnz	x8, 117c0 <mpfr_div@@Base+0xc88>
   117bc:	mov	w3, #0x1                   	// #1
   117c0:	mov	x0, x24
   117c4:	mov	w1, w3
   117c8:	bl	c3c0 <mpfr_underflow@plt>
   117cc:	mov	w21, w0
   117d0:	b	11e4c <mpfr_div@@Base+0x1314>
   117d4:	add	w12, w3, w2, lsr #31
   117d8:	cmp	w12, #0x3
   117dc:	b.ne	10d18 <mpfr_div@@Base+0x1e0>  // b.any
   117e0:	cbz	w2, 11abc <mpfr_div@@Base+0xf84>
   117e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   117e8:	ldr	x1, [x0, #2640]
   117ec:	add	x0, x0, #0xa50
   117f0:	blr	x1
   117f4:	ldr	w9, [x8, x0]
   117f8:	neg	w21, w2
   117fc:	orr	w9, w9, #0x8
   11800:	str	w9, [x8, x0]
   11804:	b	11e4c <mpfr_div@@Base+0x1314>
   11808:	lsl	x13, x11, #1
   1180c:	cmp	x13, x11
   11810:	cset	w14, cc  // cc = lo, ul, last
   11814:	subs	x12, x13, x12
   11818:	cset	w13, cs  // cs = hs, nlast
   1181c:	orr	w13, w14, w13
   11820:	cmp	w13, #0x0
   11824:	str	x10, [x9]
   11828:	csel	x11, x12, x11, ne  // ne = any
   1182c:	ldr	w12, [x7, #8]
   11830:	ldr	w14, [x26, #8]
   11834:	mul	w2, w14, w12
   11838:	str	w2, [x24, #8]
   1183c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11840:	ldr	x1, [x0, #2608]
   11844:	add	x0, x0, #0xa30
   11848:	blr	x1
   1184c:	mrs	x12, tpidr_el0
   11850:	ldr	x14, [x12, x0]
   11854:	cmp	x8, x14
   11858:	b.gt	10fd8 <mpfr_div@@Base+0x4a0>
   1185c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11860:	ldr	x1, [x0, #2576]
   11864:	add	x0, x0, #0xa10
   11868:	blr	x1
   1186c:	ldr	x14, [x12, x0]
   11870:	cmp	x8, x14
   11874:	b.lt	12158 <mpfr_div@@Base+0x1620>  // b.tstop
   11878:	mov	w21, wzr
   1187c:	cmp	w3, #0x5
   11880:	str	x8, [x24, #16]
   11884:	b.eq	11e4c <mpfr_div@@Base+0x1314>  // b.none
   11888:	orr	x10, x13, x11
   1188c:	cbz	x10, 11e4c <mpfr_div@@Base+0x1314>
   11890:	cmp	w3, #0x1
   11894:	b.eq	11a60 <mpfr_div@@Base+0xf28>  // b.none
   11898:	cbnz	w3, 11a54 <mpfr_div@@Base+0xf1c>
   1189c:	cbz	x13, 11a60 <mpfr_div@@Base+0xf28>
   118a0:	ldr	x10, [x9]
   118a4:	adds	x10, x10, #0x1
   118a8:	str	x10, [x9]
   118ac:	b.cc	118dc <mpfr_div@@Base+0xda4>  // b.lo, b.ul, b.last
   118b0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   118b4:	str	x10, [x9]
   118b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   118bc:	ldr	x1, [x0, #2608]
   118c0:	add	x0, x0, #0xa30
   118c4:	blr	x1
   118c8:	ldr	x9, [x12, x0]
   118cc:	cmp	x8, x9
   118d0:	b.ge	10fd8 <mpfr_div@@Base+0x4a0>  // b.tcont
   118d4:	add	x8, x8, #0x1
   118d8:	str	x8, [x24, #16]
   118dc:	cbz	w2, 11abc <mpfr_div@@Base+0xf84>
   118e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   118e4:	ldr	x1, [x0, #2640]
   118e8:	add	x0, x0, #0xa50
   118ec:	blr	x1
   118f0:	ldr	w8, [x12, x0]
   118f4:	mov	w21, w2
   118f8:	orr	w8, w8, #0x8
   118fc:	str	w8, [x12, x0]
   11900:	b	11e4c <mpfr_div@@Base+0x1314>
   11904:	mov	w21, wzr
   11908:	cmp	w3, #0x5
   1190c:	str	x8, [x24, #16]
   11910:	b.eq	11e4c <mpfr_div@@Base+0x1314>  // b.none
   11914:	orr	x12, x12, x16
   11918:	cbz	x12, 11e4c <mpfr_div@@Base+0x1314>
   1191c:	cmp	w3, #0x1
   11920:	b.eq	11a94 <mpfr_div@@Base+0xf5c>  // b.none
   11924:	cbnz	w3, 11a88 <mpfr_div@@Base+0xf50>
   11928:	cbz	x16, 11a94 <mpfr_div@@Base+0xf5c>
   1192c:	ldp	x12, x13, [x9]
   11930:	adds	x10, x12, x10
   11934:	str	x10, [x9]
   11938:	cinc	x10, x13, eq  // eq = none
   1193c:	str	x10, [x9, #8]
   11940:	cbnz	x10, 11970 <mpfr_div@@Base+0xe38>
   11944:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   11948:	str	x10, [x9, #8]
   1194c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11950:	ldr	x1, [x0, #2608]
   11954:	add	x0, x0, #0xa30
   11958:	blr	x1
   1195c:	ldr	x9, [x11, x0]
   11960:	cmp	x8, x9
   11964:	b.ge	10fd8 <mpfr_div@@Base+0x4a0>  // b.tcont
   11968:	add	x8, x8, #0x1
   1196c:	str	x8, [x24, #16]
   11970:	cbz	w2, 11abc <mpfr_div@@Base+0xf84>
   11974:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11978:	ldr	x1, [x0, #2640]
   1197c:	add	x0, x0, #0xa50
   11980:	blr	x1
   11984:	ldr	w8, [x11, x0]
   11988:	mov	w21, w2
   1198c:	orr	w8, w8, #0x8
   11990:	str	w8, [x11, x0]
   11994:	b	11e4c <mpfr_div@@Base+0x1314>
   11998:	cmp	w3, #0x3
   1199c:	mov	w8, #0x2                   	// #2
   119a0:	csel	w8, w8, w3, eq  // eq = none
   119a4:	cmp	w3, #0x2
   119a8:	mov	w9, #0x3                   	// #3
   119ac:	mov	w19, w3
   119b0:	csel	w3, w9, w8, eq  // eq = none
   119b4:	mov	x0, x24
   119b8:	mov	x1, x7
   119bc:	bl	cc40 <mpfr_div_ui@plt>
   119c0:	ldr	w8, [x24, #8]
   119c4:	neg	w21, w0
   119c8:	neg	w8, w8
   119cc:	str	w8, [x24, #8]
   119d0:	ldr	x8, [x24, #16]
   119d4:	sub	x8, x8, x20
   119d8:	str	x8, [x24, #16]
   119dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   119e0:	ldr	x1, [x0, #2608]
   119e4:	add	x0, x0, #0xa30
   119e8:	blr	x1
   119ec:	ldr	x9, [x25, x0]
   119f0:	sub	x10, x9, #0x40
   119f4:	cmp	x8, x10
   119f8:	b.gt	12128 <mpfr_div@@Base+0x15f0>
   119fc:	add	x8, x8, #0x40
   11a00:	str	x8, [x24, #16]
   11a04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11a08:	ldr	x1, [x0, #2576]
   11a0c:	add	x0, x0, #0xa10
   11a10:	blr	x1
   11a14:	cmp	x8, x9
   11a18:	b.gt	12138 <mpfr_div@@Base+0x1600>
   11a1c:	ldr	x9, [x25, x0]
   11a20:	cmp	x8, x9
   11a24:	b.lt	12138 <mpfr_div@@Base+0x1600>  // b.tstop
   11a28:	cbz	w21, 11e4c <mpfr_div@@Base+0x1314>
   11a2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11a30:	ldr	x1, [x0, #2640]
   11a34:	add	x0, x0, #0xa50
   11a38:	blr	x1
   11a3c:	ldr	w8, [x25, x0]
   11a40:	orr	w8, w8, #0x8
   11a44:	str	w8, [x25, x0]
   11a48:	b	11e4c <mpfr_div@@Base+0x1314>
   11a4c:	mov	x19, xzr
   11a50:	b	11618 <mpfr_div@@Base+0xae0>
   11a54:	add	w10, w3, w2, lsr #31
   11a58:	cmp	w10, #0x3
   11a5c:	b.ne	118a0 <mpfr_div@@Base+0xd68>  // b.any
   11a60:	cbz	w2, 11abc <mpfr_div@@Base+0xf84>
   11a64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11a68:	ldr	x1, [x0, #2640]
   11a6c:	add	x0, x0, #0xa50
   11a70:	blr	x1
   11a74:	ldr	w8, [x12, x0]
   11a78:	neg	w21, w2
   11a7c:	orr	w8, w8, #0x8
   11a80:	str	w8, [x12, x0]
   11a84:	b	11e4c <mpfr_div@@Base+0x1314>
   11a88:	add	w12, w3, w2, lsr #31
   11a8c:	cmp	w12, #0x3
   11a90:	b.ne	1192c <mpfr_div@@Base+0xdf4>  // b.any
   11a94:	cbz	w2, 11abc <mpfr_div@@Base+0xf84>
   11a98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11a9c:	ldr	x1, [x0, #2640]
   11aa0:	add	x0, x0, #0xa50
   11aa4:	blr	x1
   11aa8:	ldr	w8, [x11, x0]
   11aac:	neg	w21, w2
   11ab0:	orr	w8, w8, #0x8
   11ab4:	str	w8, [x11, x0]
   11ab8:	b	11e4c <mpfr_div@@Base+0x1314>
   11abc:	mov	w21, wzr
   11ac0:	b	11e4c <mpfr_div@@Base+0x1314>
   11ac4:	mov	x23, xzr
   11ac8:	stur	x20, [x29, #-216]
   11acc:	cmp	x25, x22
   11ad0:	orr	x20, x23, x19
   11ad4:	b.eq	116d0 <mpfr_div@@Base+0xb98>  // b.none
   11ad8:	b	11660 <mpfr_div@@Base+0xb28>
   11adc:	cmp	x8, x12
   11ae0:	b.eq	11af0 <mpfr_div@@Base+0xfb8>  // b.none
   11ae4:	ldr	x20, [x26, #16]
   11ae8:	cmp	x20, x12
   11aec:	b.ne	11b1c <mpfr_div@@Base+0xfe4>  // b.any
   11af0:	str	x12, [x24, #16]
   11af4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11af8:	ldr	x1, [x0, #2640]
   11afc:	add	x0, x0, #0xa50
   11b00:	blr	x1
   11b04:	mrs	x8, tpidr_el0
   11b08:	ldr	w9, [x8, x0]
   11b0c:	mov	w21, wzr
   11b10:	orr	w9, w9, #0x4
   11b14:	str	w9, [x8, x0]
   11b18:	b	11e4c <mpfr_div@@Base+0x1314>
   11b1c:	ldr	w10, [x7, #8]
   11b20:	ldr	w11, [x26, #8]
   11b24:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   11b28:	cmp	x8, x9
   11b2c:	mul	w10, w11, w10
   11b30:	str	w10, [x24, #8]
   11b34:	b.ne	11b50 <mpfr_div@@Base+0x1018>  // b.any
   11b38:	cmp	x20, x9
   11b3c:	b.eq	11af0 <mpfr_div@@Base+0xfb8>  // b.none
   11b40:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   11b44:	mov	w21, wzr
   11b48:	str	x8, [x24, #16]
   11b4c:	b	11e4c <mpfr_div@@Base+0x1314>
   11b50:	cmp	x20, x9
   11b54:	b.ne	11f78 <mpfr_div@@Base+0x1440>  // b.any
   11b58:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   11b5c:	mov	w21, wzr
   11b60:	str	x8, [x24, #16]
   11b64:	b	11e4c <mpfr_div@@Base+0x1314>
   11b68:	add	x8, x23, #0x3e
   11b6c:	cmp	x8, #0x7f
   11b70:	b.cc	120f0 <mpfr_div@@Base+0x15b8>  // b.lo, b.ul, b.last
   11b74:	add	x8, x28, #0x3e
   11b78:	cmp	x8, #0x7f
   11b7c:	mov	x10, x9
   11b80:	mov	x8, x18
   11b84:	b.cc	120f8 <mpfr_div@@Base+0x15c0>  // b.lo, b.ul, b.last
   11b88:	sub	x11, x0, #0x1
   11b8c:	sub	x12, x18, #0x1
   11b90:	ldr	x10, [x27, x11, lsl #3]
   11b94:	ldr	x9, [x17, x12, lsl #3]
   11b98:	mov	x8, x12
   11b9c:	cmp	x10, x9
   11ba0:	b.ne	120f8 <mpfr_div@@Base+0x15c0>  // b.any
   11ba4:	subs	x11, x11, #0x1
   11ba8:	cset	w13, cs  // cs = hs, nlast
   11bac:	mov	x9, x10
   11bb0:	subs	x12, x8, #0x1
   11bb4:	b.cc	120f8 <mpfr_div@@Base+0x15c0>  // b.lo, b.ul, b.last
   11bb8:	cbnz	w13, 11b90 <mpfr_div@@Base+0x1058>
   11bbc:	b	120f8 <mpfr_div@@Base+0x15c0>
   11bc0:	ldur	x8, [x29, #-120]
   11bc4:	add	x21, x8, #0x2
   11bc8:	lsl	x24, x21, #4
   11bcc:	cmp	x24, #0x4, lsl #12
   11bd0:	lsl	x19, x21, #1
   11bd4:	b.hi	12a8c <mpfr_div@@Base+0x1f54>  // b.pmore
   11bd8:	add	x9, x24, #0xf
   11bdc:	mov	x8, sp
   11be0:	and	x9, x9, #0xfffffffffffffff0
   11be4:	sub	x25, x8, x9
   11be8:	mov	sp, x25
   11bec:	mov	w23, w3
   11bf0:	subs	x20, x19, x27
   11bf4:	b.le	12ab0 <mpfr_div@@Base+0x1f78>
   11bf8:	ldur	x9, [x29, #-176]
   11bfc:	add	x8, x25, x19, lsl #3
   11c00:	mvn	x9, x9
   11c04:	add	x0, x8, x9, lsl #3
   11c08:	ldur	x8, [x29, #-96]
   11c0c:	cmp	x0, x8
   11c10:	b.eq	11c20 <mpfr_div@@Base+0x10e8>  // b.none
   11c14:	ldur	x1, [x29, #-96]
   11c18:	lsl	x2, x27, #3
   11c1c:	bl	ba70 <memcpy@plt>
   11c20:	lsl	x2, x20, #3
   11c24:	mov	x0, x25
   11c28:	mov	w1, wzr
   11c2c:	bl	c150 <memset@plt>
   11c30:	b	12ad0 <mpfr_div@@Base+0x1f98>
   11c34:	ldur	x8, [x29, #-120]
   11c38:	add	x25, x8, #0x2
   11c3c:	lsl	x1, x25, #3
   11c40:	cmp	x1, #0x4, lsl #12
   11c44:	b.hi	12c84 <mpfr_div@@Base+0x214c>  // b.pmore
   11c48:	add	x9, x1, #0xf
   11c4c:	mov	x8, sp
   11c50:	and	x9, x9, #0xfffffffffffffff0
   11c54:	sub	x21, x8, x9
   11c58:	mov	sp, x21
   11c5c:	b	114f4 <mpfr_div@@Base+0x9bc>
   11c60:	sub	x0, x29, #0x18
   11c64:	mov	x1, x24
   11c68:	mov	w19, w3
   11c6c:	bl	be10 <mpfr_tmp_allocate@plt>
   11c70:	mov	w3, w19
   11c74:	mov	x26, x0
   11c78:	subs	x9, x27, x23
   11c7c:	mov	w28, w3
   11c80:	stur	x9, [x29, #-200]
   11c84:	b.lt	11528 <mpfr_div@@Base+0x9f0>  // b.tstop
   11c88:	ldur	x8, [x29, #-96]
   11c8c:	add	x1, x8, x9, lsl #3
   11c90:	tbz	w20, #0, 11f9c <mpfr_div@@Base+0x1464>
   11c94:	mov	w3, #0x1                   	// #1
   11c98:	mov	x0, x26
   11c9c:	mov	x2, x23
   11ca0:	mov	w20, #0x1                   	// #1
   11ca4:	bl	bd30 <__gmpn_rshift@plt>
   11ca8:	cbz	x0, 11fb0 <mpfr_div@@Base+0x1478>
   11cac:	ldur	x10, [x29, #-72]
   11cb0:	b	1158c <mpfr_div@@Base+0xa54>
   11cb4:	ldur	x8, [x29, #-112]
   11cb8:	mov	x19, xzr
   11cbc:	mov	x4, x10
   11cc0:	sub	x8, x25, x8
   11cc4:	b	1161c <mpfr_div@@Base+0xae4>
   11cc8:	cbz	x10, 11fe0 <mpfr_div@@Base+0x14a8>
   11ccc:	mov	w10, #0x1                   	// #1
   11cd0:	lsl	x9, x10, x9
   11cd4:	and	x9, x19, x9
   11cd8:	cmp	w3, #0x0
   11cdc:	csel	x20, x9, xzr, eq  // eq = none
   11ce0:	mov	x23, x24
   11ce4:	eor	x24, x20, x19
   11ce8:	cmp	x24, #0x1
   11cec:	b.hi	11710 <mpfr_div@@Base+0xbd8>  // b.pmore
   11cf0:	ldur	x9, [x29, #-112]
   11cf4:	stur	w3, [x29, #-100]
   11cf8:	lsl	x1, x9, #3
   11cfc:	cmp	x1, #0x4, lsl #12
   11d00:	b.hi	12cd4 <mpfr_div@@Base+0x219c>  // b.pmore
   11d04:	add	x10, x1, #0xf
   11d08:	mov	x9, sp
   11d0c:	and	x10, x10, #0xfffffffffffffff0
   11d10:	sub	x9, x9, x10
   11d14:	mov	x28, x9
   11d18:	mov	sp, x9
   11d1c:	ldur	x9, [x29, #-184]
   11d20:	eor	x8, x8, x19
   11d24:	mov	x0, x28
   11d28:	str	x8, [x21]
   11d2c:	cmp	x25, x9
   11d30:	b.ge	121a8 <mpfr_div@@Base+0x1670>  // b.tcont
   11d34:	ldur	x1, [x29, #-72]
   11d38:	ldur	x2, [x29, #-184]
   11d3c:	mov	x3, x21
   11d40:	mov	x4, x25
   11d44:	b	121b8 <mpfr_div@@Base+0x1680>
   11d48:	cmp	x10, #0x0
   11d4c:	mov	x20, xzr
   11d50:	cset	w24, ne  // ne = any
   11d54:	ldur	x22, [x29, #-144]
   11d58:	ldur	x11, [x29, #-120]
   11d5c:	ldur	w8, [x29, #-164]
   11d60:	cbnz	w8, 11720 <mpfr_div@@Base+0xbe8>
   11d64:	orr	x8, x24, x20
   11d68:	cbz	x8, 11db8 <mpfr_div@@Base+0x1280>
   11d6c:	cbz	w3, 11dc0 <mpfr_div@@Base+0x1288>
   11d70:	ldr	x8, [x15]
   11d74:	mov	w19, #0x1                   	// #1
   11d78:	lsl	x9, x19, x28
   11d7c:	adds	x8, x8, x9
   11d80:	str	x8, [x15]
   11d84:	b.cc	11dd8 <mpfr_div@@Base+0x12a0>  // b.lo, b.ul, b.last
   11d88:	ldur	x20, [x29, #-64]
   11d8c:	ldur	x24, [x29, #-152]
   11d90:	mov	w8, #0x1                   	// #1
   11d94:	cmp	x8, x11
   11d98:	b.gt	11e70 <mpfr_div@@Base+0x1338>
   11d9c:	lsl	x9, x8, #3
   11da0:	ldr	x10, [x15, x9]
   11da4:	add	x8, x8, #0x1
   11da8:	adds	x10, x10, #0x1
   11dac:	str	x10, [x15, x9]
   11db0:	b.cs	11d94 <mpfr_div@@Base+0x125c>  // b.hs, b.nlast
   11db4:	b	11e84 <mpfr_div@@Base+0x134c>
   11db8:	mov	w19, wzr
   11dbc:	b	11dd8 <mpfr_div@@Base+0x12a0>
   11dc0:	cbz	x20, 11dd4 <mpfr_div@@Base+0x129c>
   11dc4:	cbnz	x24, 11d70 <mpfr_div@@Base+0x1238>
   11dc8:	ldr	x8, [x15]
   11dcc:	lsr	x8, x8, x28
   11dd0:	tbnz	w8, #0, 11d70 <mpfr_div@@Base+0x1238>
   11dd4:	mov	w19, #0xffffffff            	// #-1
   11dd8:	ldur	x20, [x29, #-64]
   11ddc:	ldur	x24, [x29, #-152]
   11de0:	ldur	x0, [x29, #-24]
   11de4:	cbnz	x0, 11e8c <mpfr_div@@Base+0x1354>
   11de8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11dec:	ldr	x1, [x0, #2608]
   11df0:	add	x0, x0, #0xa30
   11df4:	blr	x1
   11df8:	ldr	x8, [x22, x0]
   11dfc:	cmp	x24, x8
   11e00:	b.gt	11eb4 <mpfr_div@@Base+0x137c>
   11e04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11e08:	ldr	x1, [x0, #2576]
   11e0c:	add	x0, x0, #0xa10
   11e10:	blr	x1
   11e14:	ldr	x8, [x22, x0]
   11e18:	cmp	x24, x8
   11e1c:	b.lt	11ec0 <mpfr_div@@Base+0x1388>  // b.tstop
   11e20:	ldur	w8, [x29, #-136]
   11e24:	str	x24, [x20, #16]
   11e28:	mul	w21, w19, w8
   11e2c:	cbz	w21, 11e4c <mpfr_div@@Base+0x1314>
   11e30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11e34:	ldr	x1, [x0, #2640]
   11e38:	add	x0, x0, #0xa50
   11e3c:	blr	x1
   11e40:	ldr	w8, [x22, x0]
   11e44:	orr	w8, w8, #0x8
   11e48:	str	w8, [x22, x0]
   11e4c:	mov	w0, w21
   11e50:	mov	sp, x29
   11e54:	ldp	x20, x19, [sp, #80]
   11e58:	ldp	x22, x21, [sp, #64]
   11e5c:	ldp	x24, x23, [sp, #48]
   11e60:	ldp	x26, x25, [sp, #32]
   11e64:	ldp	x28, x27, [sp, #16]
   11e68:	ldp	x29, x30, [sp], #96
   11e6c:	ret
   11e70:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   11e74:	cmp	x24, x8
   11e78:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   11e7c:	cinc	x24, x24, ne  // ne = any
   11e80:	str	x9, [x15, x11, lsl #3]
   11e84:	mov	w19, #0x1                   	// #1
   11e88:	b	11de0 <mpfr_div@@Base+0x12a8>
   11e8c:	mov	w21, w3
   11e90:	bl	c400 <mpfr_tmp_free@plt>
   11e94:	mov	w3, w21
   11e98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   11e9c:	ldr	x1, [x0, #2608]
   11ea0:	add	x0, x0, #0xa30
   11ea4:	blr	x1
   11ea8:	ldr	x8, [x22, x0]
   11eac:	cmp	x24, x8
   11eb0:	b.le	11e04 <mpfr_div@@Base+0x12cc>
   11eb4:	ldur	w2, [x29, #-136]
   11eb8:	mov	x0, x20
   11ebc:	b	10fdc <mpfr_div@@Base+0x4a4>
   11ec0:	cbnz	w3, 12274 <mpfr_div@@Base+0x173c>
   11ec4:	sub	x8, x8, #0x1
   11ec8:	cmp	x24, x8
   11ecc:	b.lt	11ee0 <mpfr_div@@Base+0x13a8>  // b.tstop
   11ed0:	tbnz	w19, #31, 12270 <mpfr_div@@Base+0x1738>
   11ed4:	mov	x0, x20
   11ed8:	bl	bf50 <mpfr_powerof2_raw@plt>
   11edc:	cbz	w0, 12270 <mpfr_div@@Base+0x1738>
   11ee0:	mov	w3, #0x1                   	// #1
   11ee4:	b	12274 <mpfr_div@@Base+0x173c>
   11ee8:	mov	x18, xzr
   11eec:	umulh	x0, x13, x12
   11ef0:	mul	x1, x13, x12
   11ef4:	subs	x16, x18, x1
   11ef8:	sbc	x17, x17, x0
   11efc:	cbnz	x17, 11f08 <mpfr_div@@Base+0x13d0>
   11f00:	cmp	x16, x12
   11f04:	b.cc	11f30 <mpfr_div@@Base+0x13f8>  // b.lo, b.ul, b.last
   11f08:	neg	x15, x12
   11f0c:	add	x18, x15, x16
   11f10:	subs	x16, x16, x12
   11f14:	cset	w0, cc  // cc = lo, ul, last
   11f18:	add	x13, x13, #0x1
   11f1c:	cmp	x18, x12
   11f20:	sub	x17, x17, x0
   11f24:	b.cs	11f0c <mpfr_div@@Base+0x13d4>  // b.hs, b.nlast
   11f28:	cbnz	x17, 11f0c <mpfr_div@@Base+0x13d4>
   11f2c:	lsr	x15, x13, x11
   11f30:	and	x12, x13, x11
   11f34:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   11f38:	and	x14, x15, x14
   11f3c:	lsr	x13, x13, x28
   11f40:	orr	x14, x12, x14
   11f44:	and	x12, x15, x13
   11f48:	orr	x13, x14, x16
   11f4c:	b	10c90 <mpfr_div@@Base+0x158>
   11f50:	cbnz	w3, 117c0 <mpfr_div@@Base+0xc88>
   11f54:	sub	x8, x15, #0x1
   11f58:	cmp	x11, x8
   11f5c:	b.lt	117bc <mpfr_div@@Base+0xc84>  // b.tstop
   11f60:	mov	w3, wzr
   11f64:	cbnz	x13, 117c0 <mpfr_div@@Base+0xc88>
   11f68:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   11f6c:	cmp	x14, x8
   11f70:	b.eq	117bc <mpfr_div@@Base+0xc84>  // b.none
   11f74:	b	117c0 <mpfr_div@@Base+0xc88>
   11f78:	mov	x10, #0x2                   	// #2
   11f7c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   11f80:	movk	x10, #0x8000, lsl #48
   11f84:	cmp	x20, x9
   11f88:	b.ne	120e4 <mpfr_div@@Base+0x15ac>  // b.any
   11f8c:	cmp	x8, x9
   11f90:	b.ne	121e8 <mpfr_div@@Base+0x16b0>  // b.any
   11f94:	str	x10, [x24, #16]
   11f98:	b	11af4 <mpfr_div@@Base+0xfbc>
   11f9c:	cmp	x1, x26
   11fa0:	b.eq	11fb0 <mpfr_div@@Base+0x1478>  // b.none
   11fa4:	mov	x0, x26
   11fa8:	mov	x2, x24
   11fac:	bl	ba70 <memcpy@plt>
   11fb0:	ldur	x8, [x29, #-176]
   11fb4:	ldur	x10, [x29, #-72]
   11fb8:	mov	w20, #0x1                   	// #1
   11fbc:	sub	x8, x8, x23
   11fc0:	add	x9, x8, #0x1
   11fc4:	cmp	x9, #0x1
   11fc8:	b.lt	11588 <mpfr_div@@Base+0xa50>  // b.tstop
   11fcc:	ldur	x9, [x29, #-96]
   11fd0:	ldr	x9, [x9, x8, lsl #3]
   11fd4:	sub	x8, x8, #0x1
   11fd8:	cbnz	x9, 1158c <mpfr_div@@Base+0xa54>
   11fdc:	b	11fc0 <mpfr_div@@Base+0x1488>
   11fe0:	ldur	x20, [x29, #-64]
   11fe4:	mov	w19, wzr
   11fe8:	ldp	x24, x22, [x29, #-152]
   11fec:	b	11de0 <mpfr_div@@Base+0x12a8>
   11ff0:	sub	x0, x29, #0x18
   11ff4:	bl	be10 <mpfr_tmp_allocate@plt>
   11ff8:	ldur	x10, [x29, #-72]
   11ffc:	mov	x24, x0
   12000:	cmp	x10, x24
   12004:	mov	x4, x10
   12008:	b.ne	115d8 <mpfr_div@@Base+0xaa0>  // b.any
   1200c:	b	115f4 <mpfr_div@@Base+0xabc>
   12010:	mov	x18, xzr
   12014:	b	10e58 <mpfr_div@@Base+0x320>
   12018:	mov	w6, w3
   1201c:	umulh	x0, x17, x13
   12020:	mul	x3, x17, x12
   12024:	umulh	x2, x17, x12
   12028:	mul	x5, x15, x13
   1202c:	msub	x16, x15, x12, x16
   12030:	adds	x0, x0, x3
   12034:	mul	x1, x17, x13
   12038:	sub	x16, x16, x2
   1203c:	cset	w2, cs  // cs = hs, nlast
   12040:	adds	x0, x0, x5
   12044:	umulh	x4, x15, x13
   12048:	sub	x16, x16, x4
   1204c:	cset	w3, cs  // cs = hs, nlast
   12050:	cmp	x1, #0x0
   12054:	sub	x16, x16, x2
   12058:	csetm	x2, ne  // ne = any
   1205c:	sub	x3, x16, x3
   12060:	sub	x16, x2, x0
   12064:	orr	x0, x16, x1
   12068:	cmp	x0, #0x0
   1206c:	cset	w0, ne  // ne = any
   12070:	mneg	x18, x17, x13
   12074:	sub	x0, x3, x0
   12078:	neg	x17, x17
   1207c:	b	120a0 <mpfr_div@@Base+0x1568>
   12080:	cset	w1, eq  // eq = none
   12084:	cmp	x18, x13
   12088:	cset	w2, cc  // cc = lo, ul, last
   1208c:	and	w1, w1, w2
   12090:	subs	x2, x18, x13
   12094:	sbc	x16, x16, x12
   12098:	sub	x0, x0, x1
   1209c:	mov	x18, x2
   120a0:	cbnz	x0, 120b8 <mpfr_div@@Base+0x1580>
   120a4:	cmp	x16, x12
   120a8:	b.hi	120b8 <mpfr_div@@Base+0x1580>  // b.pmore
   120ac:	b.ne	120d0 <mpfr_div@@Base+0x1598>  // b.any
   120b0:	cmp	x18, x13
   120b4:	b.cc	120d0 <mpfr_div@@Base+0x1598>  // b.lo, b.ul, b.last
   120b8:	subs	x17, x17, #0x1
   120bc:	cinc	x15, x15, eq  // eq = none
   120c0:	cmp	x16, x12
   120c4:	b.cs	12080 <mpfr_div@@Base+0x1548>  // b.hs, b.nlast
   120c8:	mov	w1, #0x1                   	// #1
   120cc:	b	12090 <mpfr_div@@Base+0x1558>
   120d0:	orr	x12, x18, x16
   120d4:	neg	x17, x17
   120d8:	mov	w3, w6
   120dc:	cbnz	w11, 10f80 <mpfr_div@@Base+0x448>
   120e0:	b	10f9c <mpfr_div@@Base+0x464>
   120e4:	mov	w21, wzr
   120e8:	str	x9, [x24, #16]
   120ec:	b	11e4c <mpfr_div@@Base+0x1314>
   120f0:	mov	x10, x9
   120f4:	mov	x8, x18
   120f8:	cmp	x10, x9
   120fc:	b.ne	1146c <mpfr_div@@Base+0x934>  // b.any
   12100:	cbz	x8, 12150 <mpfr_div@@Base+0x1618>
   12104:	ldp	x18, x15, [x29, #-88]
   12108:	sub	x9, x17, #0x8
   1210c:	subs	x10, x8, #0x1
   12110:	b.lt	1238c <mpfr_div@@Base+0x1854>  // b.tstop
   12114:	ldr	x11, [x9, x8, lsl #3]
   12118:	mov	w20, wzr
   1211c:	mov	x8, x10
   12120:	cbnz	x11, 11470 <mpfr_div@@Base+0x938>
   12124:	b	1210c <mpfr_div@@Base+0x15d4>
   12128:	ldr	w2, [x24, #8]
   1212c:	mov	x0, x24
   12130:	mov	w1, w19
   12134:	b	10fe0 <mpfr_div@@Base+0x4a8>
   12138:	mov	x0, x24
   1213c:	mov	w1, w21
   12140:	mov	w2, w19
   12144:	bl	cb10 <mpfr_check_range@plt>
   12148:	mov	w21, w0
   1214c:	b	11e4c <mpfr_div@@Base+0x1314>
   12150:	mov	w20, #0x1                   	// #1
   12154:	b	11470 <mpfr_div@@Base+0x938>
   12158:	mov	w1, w3
   1215c:	cbnz	w3, 12184 <mpfr_div@@Base+0x164c>
   12160:	sub	x9, x14, #0x1
   12164:	cmp	x8, x9
   12168:	b.lt	12180 <mpfr_div@@Base+0x1648>  // b.tstop
   1216c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   12170:	cmp	x10, x8
   12174:	mov	w1, wzr
   12178:	b.ne	12184 <mpfr_div@@Base+0x164c>  // b.any
   1217c:	cbnz	x11, 12184 <mpfr_div@@Base+0x164c>
   12180:	mov	w1, #0x1                   	// #1
   12184:	mov	x0, x24
   12188:	b	117c8 <mpfr_div@@Base+0xc90>
   1218c:	ldur	w2, [x29, #-100]
   12190:	mov	x0, x24
   12194:	mov	w1, w21
   12198:	bl	cb10 <mpfr_check_range@plt>
   1219c:	ldur	x27, [x29, #-96]
   121a0:	mov	w21, w0
   121a4:	b	11408 <mpfr_div@@Base+0x8d0>
   121a8:	ldur	x3, [x29, #-72]
   121ac:	ldur	x4, [x29, #-184]
   121b0:	mov	x1, x21
   121b4:	mov	x2, x25
   121b8:	bl	c790 <__gmpn_mul@plt>
   121bc:	cbz	x23, 12218 <mpfr_div@@Base+0x16e0>
   121c0:	ldur	x2, [x29, #-72]
   121c4:	ldur	x3, [x29, #-184]
   121c8:	add	x0, x28, x25, lsl #3
   121cc:	mov	x1, x0
   121d0:	bl	c590 <__gmpn_add_n@plt>
   121d4:	ldr	x8, [x21]
   121d8:	eor	x8, x8, x19
   121dc:	str	x8, [x21]
   121e0:	cbnz	x0, 12708 <mpfr_div@@Base+0x1bd0>
   121e4:	b	12224 <mpfr_div@@Base+0x16ec>
   121e8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   121ec:	str	x8, [x24, #16]
   121f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   121f4:	ldr	x1, [x0, #2640]
   121f8:	add	x0, x0, #0xa50
   121fc:	blr	x1
   12200:	mrs	x8, tpidr_el0
   12204:	ldr	w9, [x8, x0]
   12208:	mov	w21, wzr
   1220c:	orr	w9, w9, #0x20
   12210:	str	w9, [x8, x0]
   12214:	b	11e4c <mpfr_div@@Base+0x1314>
   12218:	ldr	x8, [x21]
   1221c:	eor	x8, x8, x19
   12220:	str	x8, [x21]
   12224:	ldur	x9, [x29, #-184]
   12228:	ldur	x10, [x29, #-88]
   1222c:	mov	x8, xzr
   12230:	mov	x11, x28
   12234:	add	x0, x28, x9, lsl #3
   12238:	add	x9, x26, x25, lsl #3
   1223c:	sub	x9, x9, #0x8
   12240:	add	x10, x28, x10, lsl #3
   12244:	add	x11, x25, x8
   12248:	cmp	x11, #0x1
   1224c:	b.lt	12280 <mpfr_div@@Base+0x1748>  // b.tstop
   12250:	lsl	x11, x8, #3
   12254:	ldr	x12, [x10, x11]
   12258:	ldr	x11, [x9, x11]
   1225c:	sub	x8, x8, #0x1
   12260:	cmp	x12, x11
   12264:	b.eq	12244 <mpfr_div@@Base+0x170c>  // b.none
   12268:	b.hi	12554 <mpfr_div@@Base+0x1a1c>  // b.pmore
   1226c:	b	125e0 <mpfr_div@@Base+0x1aa8>
   12270:	mov	w3, wzr
   12274:	ldur	w2, [x29, #-136]
   12278:	mov	x0, x20
   1227c:	b	117c4 <mpfr_div@@Base+0xc8c>
   12280:	ldur	x8, [x29, #-208]
   12284:	subs	x8, x27, x8
   12288:	b.ge	122ac <mpfr_div@@Base+0x1774>  // b.tcont
   1228c:	mov	x8, x22
   12290:	add	x9, x8, #0x1
   12294:	cmp	x9, #0x1
   12298:	b.lt	127b0 <mpfr_div@@Base+0x1c78>  // b.tstop
   1229c:	ldr	x9, [x28, x8, lsl #3]
   122a0:	sub	x8, x8, #0x1
   122a4:	cbnz	x9, 12554 <mpfr_div@@Base+0x1a1c>
   122a8:	b	12290 <mpfr_div@@Base+0x1758>
   122ac:	ldur	x9, [x29, #-184]
   122b0:	subs	x9, x9, x8
   122b4:	b.ge	12320 <mpfr_div@@Base+0x17e8>  // b.tcont
   122b8:	ldur	x9, [x29, #-184]
   122bc:	cmp	x9, #0x1
   122c0:	sub	x9, x8, x9
   122c4:	b.lt	12398 <mpfr_div@@Base+0x1860>  // b.tstop
   122c8:	ldur	x8, [x29, #-160]
   122cc:	tbz	w8, #0, 123a8 <mpfr_div@@Base+0x1870>
   122d0:	ldur	x8, [x29, #-176]
   122d4:	ldur	x10, [x29, #-208]
   122d8:	mov	x11, x22
   122dc:	sub	x8, x8, x10
   122e0:	ldur	x10, [x29, #-96]
   122e4:	add	x8, x10, x8, lsl #3
   122e8:	add	x10, x8, #0x8
   122ec:	ldr	x8, [x10]
   122f0:	ldr	x12, [x10, #-8]!
   122f4:	ldr	x13, [x28, x11, lsl #3]
   122f8:	add	x14, x11, #0x1
   122fc:	extr	x8, x8, x12, #1
   12300:	cmp	x13, x8
   12304:	csetm	w8, cc  // cc = lo, ul, last
   12308:	csinc	w8, w8, wzr, ls  // ls = plast
   1230c:	cmp	x14, #0x1
   12310:	b.le	123e8 <mpfr_div@@Base+0x18b0>
   12314:	sub	x11, x11, #0x1
   12318:	cbz	w8, 122ec <mpfr_div@@Base+0x17b4>
   1231c:	b	123e8 <mpfr_div@@Base+0x18b0>
   12320:	cmp	x8, #0x1
   12324:	b.lt	123a0 <mpfr_div@@Base+0x1868>  // b.tstop
   12328:	ldur	x10, [x29, #-88]
   1232c:	lsl	x11, x10, #3
   12330:	ldur	x10, [x29, #-160]
   12334:	tbz	w10, #0, 12438 <mpfr_div@@Base+0x1900>
   12338:	ldur	x10, [x29, #-96]
   1233c:	ldr	x12, [x10, x8, lsl #3]
   12340:	ldur	x8, [x29, #-176]
   12344:	ldur	x10, [x29, #-208]
   12348:	sub	x10, x8, x10
   1234c:	sub	x8, x11, x25, lsl #3
   12350:	add	x11, x28, x8
   12354:	ldur	x8, [x29, #-96]
   12358:	add	x14, x10, #0x1
   1235c:	ldr	x13, [x8, x10, lsl #3]
   12360:	ldr	x8, [x11], #-8
   12364:	extr	x12, x12, x13, #1
   12368:	cmp	x8, x12
   1236c:	csetm	w8, cc  // cc = lo, ul, last
   12370:	csinc	w8, w8, wzr, ls  // ls = plast
   12374:	cmp	x14, #0x2
   12378:	b.lt	12478 <mpfr_div@@Base+0x1940>  // b.tstop
   1237c:	sub	x10, x10, #0x1
   12380:	mov	x12, x13
   12384:	cbz	w8, 12354 <mpfr_div@@Base+0x181c>
   12388:	b	12478 <mpfr_div@@Base+0x1940>
   1238c:	ldp	x18, x15, [x29, #-88]
   12390:	mov	w20, #0x1                   	// #1
   12394:	b	11470 <mpfr_div@@Base+0x938>
   12398:	mov	w8, wzr
   1239c:	b	123e8 <mpfr_div@@Base+0x18b0>
   123a0:	mov	w8, wzr
   123a4:	b	12478 <mpfr_div@@Base+0x1940>
   123a8:	ldur	x8, [x29, #-176]
   123ac:	ldur	x10, [x29, #-208]
   123b0:	mov	x11, x22
   123b4:	sub	x8, x8, x10
   123b8:	ldur	x10, [x29, #-96]
   123bc:	add	x10, x10, x8, lsl #3
   123c0:	ldr	x8, [x10], #-8
   123c4:	ldr	x12, [x28, x11, lsl #3]
   123c8:	add	x13, x11, #0x1
   123cc:	cmp	x12, x8
   123d0:	csetm	w8, cc  // cc = lo, ul, last
   123d4:	csinc	w8, w8, wzr, ls  // ls = plast
   123d8:	cmp	x13, #0x1
   123dc:	b.le	123e8 <mpfr_div@@Base+0x18b0>
   123e0:	sub	x11, x11, #0x1
   123e4:	cbz	w8, 123c0 <mpfr_div@@Base+0x1888>
   123e8:	cmp	w8, #0x0
   123ec:	cset	w10, eq  // eq = none
   123f0:	cmp	x9, #0x1
   123f4:	b.lt	1252c <mpfr_div@@Base+0x19f4>  // b.tstop
   123f8:	cbnz	w8, 1252c <mpfr_div@@Base+0x19f4>
   123fc:	ldur	x8, [x29, #-160]
   12400:	tbz	w8, #0, 12500 <mpfr_div@@Base+0x19c8>
   12404:	ldur	x8, [x29, #-96]
   12408:	ldr	x12, [x8, x9, lsl #3]
   1240c:	sub	x8, x8, #0x8
   12410:	ldr	x13, [x8, x9, lsl #3]
   12414:	extr	x11, x12, x13, #1
   12418:	cmp	x11, #0x0
   1241c:	cset	w10, eq  // eq = none
   12420:	cmp	x9, #0x2
   12424:	b.lt	12524 <mpfr_div@@Base+0x19ec>  // b.tstop
   12428:	sub	x9, x9, #0x1
   1242c:	mov	x12, x13
   12430:	tbnz	w10, #0, 12410 <mpfr_div@@Base+0x18d8>
   12434:	b	12524 <mpfr_div@@Base+0x19ec>
   12438:	ldur	x8, [x29, #-176]
   1243c:	ldur	x10, [x29, #-208]
   12440:	sub	x10, x8, x10
   12444:	sub	x8, x11, x25, lsl #3
   12448:	add	x11, x28, x8
   1244c:	ldur	x8, [x29, #-96]
   12450:	add	x13, x10, #0x1
   12454:	ldr	x8, [x8, x10, lsl #3]
   12458:	ldr	x12, [x11], #-8
   1245c:	cmp	x12, x8
   12460:	csetm	w8, cc  // cc = lo, ul, last
   12464:	csinc	w8, w8, wzr, ls  // ls = plast
   12468:	cmp	x13, #0x2
   1246c:	b.lt	12478 <mpfr_div@@Base+0x1940>  // b.tstop
   12470:	sub	x10, x10, #0x1
   12474:	cbz	w8, 1244c <mpfr_div@@Base+0x1914>
   12478:	ldur	x10, [x29, #-160]
   1247c:	cbz	w10, 12490 <mpfr_div@@Base+0x1958>
   12480:	ldur	x10, [x29, #-96]
   12484:	ldr	x10, [x10]
   12488:	lsl	x10, x10, #63
   1248c:	b	12494 <mpfr_div@@Base+0x195c>
   12490:	mov	x10, xzr
   12494:	cmp	x9, #0x1
   12498:	b.lt	124f4 <mpfr_div@@Base+0x19bc>  // b.tstop
   1249c:	cbnz	w8, 124f4 <mpfr_div@@Base+0x19bc>
   124a0:	add	x8, x28, x9, lsl #3
   124a4:	ldur	x8, [x8, #-8]
   124a8:	cmp	x8, x10
   124ac:	csetm	w8, cc  // cc = lo, ul, last
   124b0:	csinc	w8, w8, wzr, ls  // ls = plast
   124b4:	cmp	x9, #0x2
   124b8:	b.lt	1254c <mpfr_div@@Base+0x1a14>  // b.tstop
   124bc:	cbnz	w8, 1254c <mpfr_div@@Base+0x1a14>
   124c0:	ldur	x8, [x29, #-88]
   124c4:	ldur	x9, [x29, #-176]
   124c8:	add	x8, x25, x8
   124cc:	sub	x9, x8, x9
   124d0:	sub	x8, x28, #0x10
   124d4:	ldr	x10, [x8, x9, lsl #3]
   124d8:	sub	x9, x9, #0x1
   124dc:	cmp	x9, #0x2
   124e0:	b.lt	124e8 <mpfr_div@@Base+0x19b0>  // b.tstop
   124e4:	cbz	x10, 124d4 <mpfr_div@@Base+0x199c>
   124e8:	cmp	x10, #0x0
   124ec:	cset	w8, ne  // ne = any
   124f0:	b	1254c <mpfr_div@@Base+0x1a14>
   124f4:	cbnz	w8, 1254c <mpfr_div@@Base+0x1a14>
   124f8:	cbnz	x10, 125e0 <mpfr_div@@Base+0x1aa8>
   124fc:	b	1254c <mpfr_div@@Base+0x1a14>
   12500:	ldur	x8, [x29, #-96]
   12504:	sub	x8, x8, #0x8
   12508:	ldr	x11, [x8, x9, lsl #3]
   1250c:	cmp	x11, #0x0
   12510:	cset	w10, eq  // eq = none
   12514:	cmp	x9, #0x2
   12518:	b.lt	12524 <mpfr_div@@Base+0x19ec>  // b.tstop
   1251c:	sub	x9, x9, #0x1
   12520:	tbnz	w10, #0, 12508 <mpfr_div@@Base+0x19d0>
   12524:	cmp	x11, #0x0
   12528:	csetm	w8, ne  // ne = any
   1252c:	ldur	x9, [x29, #-160]
   12530:	and	w9, w9, w10
   12534:	cmp	w9, #0x1
   12538:	b.ne	1254c <mpfr_div@@Base+0x1a14>  // b.any
   1253c:	ldur	x8, [x29, #-96]
   12540:	ldr	x8, [x8]
   12544:	sbfx	x8, x8, #0, #1
   12548:	b	125dc <mpfr_div@@Base+0x1aa4>
   1254c:	cmp	w8, #0x0
   12550:	b.le	125dc <mpfr_div@@Base+0x1aa4>
   12554:	ldur	x8, [x29, #-216]
   12558:	cbz	x8, 125bc <mpfr_div@@Base+0x1a84>
   1255c:	ldur	x8, [x29, #-200]
   12560:	ldur	x10, [x29, #-184]
   12564:	mov	x9, xzr
   12568:	subs	x8, x8, x10
   1256c:	ldur	x10, [x29, #-160]
   12570:	csel	x8, x8, xzr, gt
   12574:	cbz	w10, 12584 <mpfr_div@@Base+0x1a4c>
   12578:	ldur	x9, [x29, #-96]
   1257c:	ldr	x9, [x9, x8, lsl #3]
   12580:	and	x9, x9, #0x1
   12584:	ldur	x10, [x29, #-200]
   12588:	ldur	x11, [x29, #-184]
   1258c:	cmp	x10, x11
   12590:	b.ge	125c4 <mpfr_div@@Base+0x1a8c>  // b.tcont
   12594:	ldur	x8, [x29, #-200]
   12598:	neg	x10, x8
   1259c:	cbz	x9, 125e8 <mpfr_div@@Base+0x1ab0>
   125a0:	add	x8, x0, x10, lsl #3
   125a4:	ldur	x9, [x8, #-8]
   125a8:	eor	x11, x9, #0x8000000000000000
   125ac:	mvn	x9, x9
   125b0:	stur	x11, [x8, #-8]
   125b4:	lsr	x8, x9, #63
   125b8:	b	125ec <mpfr_div@@Base+0x1ab4>
   125bc:	mov	x19, xzr
   125c0:	b	126bc <mpfr_div@@Base+0x1b84>
   125c4:	cbz	x9, 128c0 <mpfr_div@@Base+0x1d88>
   125c8:	mov	w19, #0x1                   	// #1
   125cc:	ldur	x9, [x29, #-184]
   125d0:	cbnz	x9, 12910 <mpfr_div@@Base+0x1dd8>
   125d4:	mov	x8, x19
   125d8:	b	12674 <mpfr_div@@Base+0x1b3c>
   125dc:	cbz	w8, 127b0 <mpfr_div@@Base+0x1c78>
   125e0:	mov	w24, #0x1                   	// #1
   125e4:	b	127b0 <mpfr_div@@Base+0x1c78>
   125e8:	mov	x8, xzr
   125ec:	ldur	x9, [x29, #-200]
   125f0:	cbz	x9, 12670 <mpfr_div@@Base+0x1b38>
   125f4:	add	x9, x0, x10, lsl #3
   125f8:	ldur	x10, [x29, #-160]
   125fc:	tbz	w10, #0, 129b4 <mpfr_div@@Base+0x1e7c>
   12600:	ldur	x10, [x29, #-176]
   12604:	ldur	x11, [x29, #-208]
   12608:	sub	x10, x10, x11
   1260c:	ldur	x11, [x29, #-96]
   12610:	add	x10, x10, #0x1
   12614:	add	x11, x11, #0x8
   12618:	b	12640 <mpfr_div@@Base+0x1b08>
   1261c:	cmp	x8, #0x0
   12620:	cset	w8, ne  // ne = any
   12624:	cmn	x12, #0x1
   12628:	cset	w13, eq  // eq = none
   1262c:	and	w8, w8, w13
   12630:	str	x12, [x9], #8
   12634:	subs	x10, x10, #0x1
   12638:	add	x11, x11, #0x8
   1263c:	b.eq	12670 <mpfr_div@@Base+0x1b38>  // b.none
   12640:	ldp	x13, x12, [x11, #-8]
   12644:	ldr	x14, [x9]
   12648:	extr	x12, x12, x13, #1
   1264c:	subs	x13, x14, x12
   12650:	cmp	x14, x12
   12654:	sub	x12, x13, x8
   12658:	b.cs	1261c <mpfr_div@@Base+0x1ae4>  // b.hs, b.nlast
   1265c:	mov	w8, #0x1                   	// #1
   12660:	str	x12, [x9], #8
   12664:	subs	x10, x10, #0x1
   12668:	add	x11, x11, #0x8
   1266c:	b.ne	12640 <mpfr_div@@Base+0x1b08>  // b.any
   12670:	mov	x19, xzr
   12674:	ldr	x9, [x0]
   12678:	subs	x8, x9, x8
   1267c:	str	x8, [x0]
   12680:	b.cs	126bc <mpfr_div@@Base+0x1b84>  // b.hs, b.nlast
   12684:	ldur	x8, [x29, #-88]
   12688:	mov	w9, #0x2                   	// #2
   1268c:	lsl	x8, x8, #3
   12690:	sub	x8, x8, x25, lsl #3
   12694:	add	x8, x28, x8
   12698:	sub	x10, x9, #0x1
   1269c:	cmp	x10, x25
   126a0:	b.ge	126bc <mpfr_div@@Base+0x1b84>  // b.tcont
   126a4:	lsl	x10, x9, #3
   126a8:	ldr	x11, [x8, x10]
   126ac:	add	x9, x9, #0x1
   126b0:	sub	x12, x11, #0x1
   126b4:	str	x12, [x8, x10]
   126b8:	cbz	x11, 12698 <mpfr_div@@Base+0x1b60>
   126bc:	mov	x1, x0
   126c0:	mov	x2, x26
   126c4:	mov	x3, x25
   126c8:	bl	beb0 <__gmpn_sub_n@plt>
   126cc:	ldur	x10, [x29, #-72]
   126d0:	ldur	x11, [x29, #-88]
   126d4:	add	x8, x11, #0x1
   126d8:	cmp	x8, #0x1
   126dc:	b.lt	12704 <mpfr_div@@Base+0x1bcc>  // b.tstop
   126e0:	lsl	x8, x11, #3
   126e4:	ldr	x9, [x28, x8]
   126e8:	ldr	x8, [x10, x8]
   126ec:	sub	x11, x11, #0x1
   126f0:	cmp	x9, x8
   126f4:	b.eq	126d4 <mpfr_div@@Base+0x1b9c>  // b.none
   126f8:	b.hi	12708 <mpfr_div@@Base+0x1bd0>  // b.pmore
   126fc:	mov	w19, #0xffffffff            	// #-1
   12700:	b	127a0 <mpfr_div@@Base+0x1c68>
   12704:	cbz	x19, 127a0 <mpfr_div@@Base+0x1c68>
   12708:	ldur	w8, [x29, #-100]
   1270c:	cbz	w8, 12724 <mpfr_div@@Base+0x1bec>
   12710:	ldur	w8, [x29, #-164]
   12714:	cbz	w8, 1278c <mpfr_div@@Base+0x1c54>
   12718:	ldur	x8, [x29, #-128]
   1271c:	cbnz	w8, 12784 <mpfr_div@@Base+0x1c4c>
   12720:	b	12734 <mpfr_div@@Base+0x1bfc>
   12724:	ldur	x8, [x29, #-128]
   12728:	cmp	w8, #0x1
   1272c:	b.ne	127cc <mpfr_div@@Base+0x1c94>  // b.any
   12730:	cbnz	x20, 12798 <mpfr_div@@Base+0x1c60>
   12734:	ldur	x10, [x29, #-80]
   12738:	ldr	x8, [x10]
   1273c:	sub	x9, x8, #0x1
   12740:	str	x9, [x10]
   12744:	cbnz	x8, 12778 <mpfr_div@@Base+0x1c40>
   12748:	ldur	x13, [x29, #-80]
   1274c:	mov	w8, #0x1                   	// #1
   12750:	mov	w9, #0x1                   	// #1
   12754:	ldur	x10, [x29, #-120]
   12758:	cmp	x9, x10
   1275c:	b.gt	1277c <mpfr_div@@Base+0x1c44>
   12760:	lsl	x10, x9, #3
   12764:	ldr	x11, [x13, x10]
   12768:	add	x9, x9, #0x1
   1276c:	sub	x12, x11, #0x1
   12770:	str	x12, [x13, x10]
   12774:	cbz	x11, 12754 <mpfr_div@@Base+0x1c1c>
   12778:	mov	x8, xzr
   1277c:	sub	x23, x23, x8
   12780:	stur	xzr, [x29, #-128]
   12784:	mov	w8, #0xffffffff            	// #-1
   12788:	b	12828 <mpfr_div@@Base+0x1cf0>
   1278c:	ldur	x9, [x29, #-128]
   12790:	mov	w8, #0x1                   	// #1
   12794:	cbz	w9, 12824 <mpfr_div@@Base+0x1cec>
   12798:	mov	w19, #0x1                   	// #1
   1279c:	b	12884 <mpfr_div@@Base+0x1d4c>
   127a0:	cmp	x24, #0x1
   127a4:	b.ne	127dc <mpfr_div@@Base+0x1ca4>  // b.any
   127a8:	cmp	w19, #0x0
   127ac:	cset	w24, ne  // ne = any
   127b0:	ldur	w3, [x29, #-100]
   127b4:	ldur	x22, [x29, #-144]
   127b8:	ldur	x15, [x29, #-80]
   127bc:	ldp	x28, x11, [x29, #-128]
   127c0:	ldur	w8, [x29, #-164]
   127c4:	cbnz	w8, 11720 <mpfr_div@@Base+0xbe8>
   127c8:	b	11d64 <mpfr_div@@Base+0x122c>
   127cc:	cmp	x20, #0x0
   127d0:	mov	w8, #0x1                   	// #1
   127d4:	cneg	w19, w8, ne  // ne = any
   127d8:	b	12884 <mpfr_div@@Base+0x1d4c>
   127dc:	cbnz	x20, 128b4 <mpfr_div@@Base+0x1d7c>
   127e0:	ldur	w12, [x29, #-100]
   127e4:	ldur	w8, [x29, #-188]
   127e8:	cmp	w8, w12
   127ec:	ldur	x8, [x29, #-128]
   127f0:	cset	w9, ne  // ne = any
   127f4:	cmp	w12, #0x1
   127f8:	cset	w10, ne  // ne = any
   127fc:	orr	w8, w19, w8
   12800:	cmp	w8, #0x0
   12804:	cset	w11, ne  // ne = any
   12808:	csetm	w8, ne  // ne = any
   1280c:	mov	w19, #0x1                   	// #1
   12810:	cbz	w12, 12884 <mpfr_div@@Base+0x1d4c>
   12814:	and	w9, w10, w9
   12818:	and	w9, w11, w9
   1281c:	tbz	w9, #0, 12828 <mpfr_div@@Base+0x1cf0>
   12820:	b	12884 <mpfr_div@@Base+0x1d4c>
   12824:	stur	xzr, [x29, #-128]
   12828:	ldur	x11, [x29, #-80]
   1282c:	ldur	x12, [x29, #-128]
   12830:	mov	w10, #0x1                   	// #1
   12834:	ldr	x9, [x11]
   12838:	lsl	x10, x10, x12
   1283c:	subs	x9, x9, x10
   12840:	str	x9, [x11]
   12844:	b.cs	12878 <mpfr_div@@Base+0x1d40>  // b.hs, b.nlast
   12848:	ldur	x14, [x29, #-80]
   1284c:	ldur	x15, [x29, #-120]
   12850:	mov	w9, #0x1                   	// #1
   12854:	mov	w10, #0x1                   	// #1
   12858:	cmp	x10, x15
   1285c:	b.gt	1287c <mpfr_div@@Base+0x1d44>
   12860:	lsl	x11, x10, #3
   12864:	ldr	x12, [x14, x11]
   12868:	add	x10, x10, #0x1
   1286c:	sub	x13, x12, #0x1
   12870:	str	x13, [x14, x11]
   12874:	cbz	x12, 12858 <mpfr_div@@Base+0x1d20>
   12878:	mov	x9, xzr
   1287c:	sub	x23, x23, x9
   12880:	mov	w19, w8
   12884:	cbz	x23, 128b4 <mpfr_div@@Base+0x1d7c>
   12888:	ldp	x24, x22, [x29, #-152]
   1288c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   12890:	ldur	x10, [x29, #-120]
   12894:	ldur	x20, [x29, #-64]
   12898:	cmp	x24, x8
   1289c:	ldur	x8, [x29, #-80]
   128a0:	ldur	w3, [x29, #-100]
   128a4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   128a8:	cinc	x24, x24, ne  // ne = any
   128ac:	str	x9, [x8, x10, lsl #3]
   128b0:	b	11de0 <mpfr_div@@Base+0x12a8>
   128b4:	ldur	x20, [x29, #-64]
   128b8:	ldur	w3, [x29, #-100]
   128bc:	b	11fe8 <mpfr_div@@Base+0x14b0>
   128c0:	ldur	x11, [x29, #-176]
   128c4:	ldur	x12, [x29, #-208]
   128c8:	add	x10, x22, #0x1
   128cc:	mov	w19, #0x1                   	// #1
   128d0:	sub	x11, x11, x12
   128d4:	add	x12, x11, #0x1
   128d8:	cmp	x10, x12
   128dc:	csinc	x10, x10, x11, gt
   128e0:	ldp	x9, x11, [x29, #-96]
   128e4:	add	x10, x25, x10
   128e8:	sub	x9, x9, #0x10
   128ec:	sub	x10, x10, x11
   128f0:	sub	x11, x10, #0x1
   128f4:	cmp	x11, #0x1
   128f8:	b.lt	12cb0 <mpfr_div@@Base+0x2178>  // b.tstop
   128fc:	ldr	x12, [x9, x10, lsl #3]
   12900:	mov	x10, x11
   12904:	cbz	x12, 128f0 <mpfr_div@@Base+0x1db8>
   12908:	ldur	x9, [x29, #-184]
   1290c:	cbz	x9, 125d4 <mpfr_div@@Base+0x1a9c>
   12910:	ldur	x9, [x29, #-160]
   12914:	tbz	w9, #0, 12a18 <mpfr_div@@Base+0x1ee0>
   12918:	ldur	x12, [x29, #-88]
   1291c:	ldur	x9, [x29, #-176]
   12920:	ldur	x11, [x29, #-208]
   12924:	add	x10, x22, #0x1
   12928:	mvn	x8, x12
   1292c:	sub	x11, x9, x11
   12930:	add	x9, x8, x25
   12934:	add	x8, x11, #0x1
   12938:	cmp	x10, x8
   1293c:	csinc	x8, x10, x11, gt
   12940:	ldur	x10, [x29, #-96]
   12944:	add	x8, x25, x8
   12948:	sub	x8, x8, x12
   1294c:	mov	x11, x28
   12950:	add	x10, x10, x8, lsl #3
   12954:	mov	x8, x19
   12958:	b	12980 <mpfr_div@@Base+0x1e48>
   1295c:	cmp	x8, #0x0
   12960:	cset	w8, ne  // ne = any
   12964:	cmn	x12, #0x1
   12968:	cset	w13, eq  // eq = none
   1296c:	and	w8, w8, w13
   12970:	str	x12, [x11], #8
   12974:	adds	x9, x9, #0x1
   12978:	add	x10, x10, #0x8
   1297c:	b.cs	12674 <mpfr_div@@Base+0x1b3c>  // b.hs, b.nlast
   12980:	ldp	x13, x12, [x10, #-8]
   12984:	ldr	x14, [x11]
   12988:	extr	x12, x12, x13, #1
   1298c:	subs	x13, x14, x12
   12990:	cmp	x14, x12
   12994:	sub	x12, x13, x8
   12998:	b.cs	1295c <mpfr_div@@Base+0x1e24>  // b.hs, b.nlast
   1299c:	mov	w8, #0x1                   	// #1
   129a0:	str	x12, [x11], #8
   129a4:	adds	x9, x9, #0x1
   129a8:	add	x10, x10, #0x8
   129ac:	b.cc	12980 <mpfr_div@@Base+0x1e48>  // b.lo, b.ul, b.last
   129b0:	b	12674 <mpfr_div@@Base+0x1b3c>
   129b4:	ldur	x10, [x29, #-176]
   129b8:	ldur	x11, [x29, #-208]
   129bc:	sub	x10, x10, x11
   129c0:	add	x10, x10, #0x1
   129c4:	b	129f4 <mpfr_div@@Base+0x1ebc>
   129c8:	cmp	x8, #0x0
   129cc:	cset	w8, ne  // ne = any
   129d0:	cmn	x11, #0x1
   129d4:	cset	w12, eq  // eq = none
   129d8:	and	w8, w8, w12
   129dc:	str	x11, [x9], #8
   129e0:	ldur	x11, [x29, #-96]
   129e4:	subs	x10, x10, #0x1
   129e8:	add	x11, x11, #0x8
   129ec:	stur	x11, [x29, #-96]
   129f0:	b.eq	12670 <mpfr_div@@Base+0x1b38>  // b.none
   129f4:	ldur	x11, [x29, #-96]
   129f8:	ldr	x12, [x9]
   129fc:	ldr	x11, [x11]
   12a00:	subs	x13, x12, x11
   12a04:	cmp	x12, x11
   12a08:	sub	x11, x13, x8
   12a0c:	b.cs	129c8 <mpfr_div@@Base+0x1e90>  // b.hs, b.nlast
   12a10:	mov	w8, #0x1                   	// #1
   12a14:	b	129dc <mpfr_div@@Base+0x1ea4>
   12a18:	ldur	x9, [x29, #-96]
   12a1c:	mov	x11, x28
   12a20:	add	x9, x9, x8, lsl #3
   12a24:	ldur	x8, [x29, #-88]
   12a28:	mvn	x8, x8
   12a2c:	add	x10, x8, x25
   12a30:	mov	x8, x19
   12a34:	b	12a5c <mpfr_div@@Base+0x1f24>
   12a38:	cmp	x8, #0x0
   12a3c:	cset	w8, ne  // ne = any
   12a40:	cmn	x12, #0x1
   12a44:	cset	w13, eq  // eq = none
   12a48:	and	w8, w8, w13
   12a4c:	str	x12, [x11], #8
   12a50:	adds	x10, x10, #0x1
   12a54:	add	x9, x9, #0x8
   12a58:	b.cs	12674 <mpfr_div@@Base+0x1b3c>  // b.hs, b.nlast
   12a5c:	ldr	x12, [x9]
   12a60:	ldr	x13, [x11]
   12a64:	subs	x14, x13, x12
   12a68:	cmp	x13, x12
   12a6c:	sub	x12, x14, x8
   12a70:	b.cs	12a38 <mpfr_div@@Base+0x1f00>  // b.hs, b.nlast
   12a74:	mov	w8, #0x1                   	// #1
   12a78:	str	x12, [x11], #8
   12a7c:	adds	x10, x10, #0x1
   12a80:	add	x9, x9, #0x8
   12a84:	b.cc	12a5c <mpfr_div@@Base+0x1f24>  // b.lo, b.ul, b.last
   12a88:	b	12674 <mpfr_div@@Base+0x1b3c>
   12a8c:	sub	x0, x29, #0x18
   12a90:	mov	x1, x24
   12a94:	mov	w20, w3
   12a98:	bl	be10 <mpfr_tmp_allocate@plt>
   12a9c:	mov	w3, w20
   12aa0:	mov	x25, x0
   12aa4:	mov	w23, w3
   12aa8:	subs	x20, x19, x27
   12aac:	b.gt	11bf8 <mpfr_div@@Base+0x10c0>
   12ab0:	ldur	x8, [x29, #-96]
   12ab4:	add	x8, x8, x27, lsl #3
   12ab8:	sub	x1, x8, x19, lsl #3
   12abc:	cmp	x1, x25
   12ac0:	b.eq	12ad0 <mpfr_div@@Base+0x1f98>  // b.none
   12ac4:	mov	x0, x25
   12ac8:	mov	x2, x24
   12acc:	bl	ba70 <memcpy@plt>
   12ad0:	ldur	x8, [x29, #-112]
   12ad4:	subs	x20, x21, x8
   12ad8:	b.le	12b3c <mpfr_div@@Base+0x2004>
   12adc:	lsl	x26, x21, #3
   12ae0:	cmp	x26, #0x4, lsl #12
   12ae4:	b.hi	12cc0 <mpfr_div@@Base+0x2188>  // b.pmore
   12ae8:	add	x9, x26, #0xf
   12aec:	mov	x8, sp
   12af0:	and	x9, x9, #0xfffffffffffffff0
   12af4:	sub	x28, x8, x9
   12af8:	mov	sp, x28
   12afc:	ldur	x9, [x29, #-88]
   12b00:	add	x8, x28, x21, lsl #3
   12b04:	mvn	x9, x9
   12b08:	add	x0, x8, x9, lsl #3
   12b0c:	ldur	x8, [x29, #-72]
   12b10:	cmp	x0, x8
   12b14:	b.eq	12b28 <mpfr_div@@Base+0x1ff0>  // b.none
   12b18:	ldur	x8, [x29, #-112]
   12b1c:	ldur	x1, [x29, #-72]
   12b20:	lsl	x2, x8, #3
   12b24:	bl	ba70 <memcpy@plt>
   12b28:	lsl	x2, x20, #3
   12b2c:	mov	x0, x28
   12b30:	mov	w1, wzr
   12b34:	bl	c150 <memset@plt>
   12b38:	b	12b58 <mpfr_div@@Base+0x2020>
   12b3c:	ldur	x8, [x29, #-72]
   12b40:	ldp	x10, x9, [x29, #-120]
   12b44:	lsl	x26, x21, #3
   12b48:	add	x8, x8, x9, lsl #3
   12b4c:	mov	x9, #0xfffffffffffffffe    	// #-2
   12b50:	sub	x9, x9, x10
   12b54:	add	x28, x8, x9, lsl #3
   12b58:	ldur	x20, [x29, #-160]
   12b5c:	cmp	x26, #0x4, lsl #12
   12b60:	b.hi	12c9c <mpfr_div@@Base+0x2164>  // b.pmore
   12b64:	add	x9, x26, #0xf
   12b68:	mov	x8, sp
   12b6c:	and	x9, x9, #0xfffffffffffffff0
   12b70:	sub	x26, x8, x9
   12b74:	mov	sp, x26
   12b78:	mov	x0, x26
   12b7c:	mov	x1, x25
   12b80:	mov	x2, x28
   12b84:	mov	x3, x21
   12b88:	bl	c180 <mpfr_divhigh_n@plt>
   12b8c:	orr	x8, x19, #0x1
   12b90:	clz	x8, x8
   12b94:	orr	x8, x8, #0xffffffffffffffc0
   12b98:	cmp	x0, #0x1
   12b9c:	add	x24, x8, x21, lsl #6
   12ba0:	b.ne	12bc8 <mpfr_div@@Base+0x2090>  // b.any
   12ba4:	mov	w3, #0x1                   	// #1
   12ba8:	mov	x0, x26
   12bac:	mov	x1, x26
   12bb0:	mov	x2, x21
   12bb4:	bl	bd30 <__gmpn_rshift@plt>
   12bb8:	lsl	x8, x22, #3
   12bbc:	ldr	x9, [x26, x8]
   12bc0:	orr	x9, x9, #0x8000000000000000
   12bc4:	str	x9, [x26, x8]
   12bc8:	ldur	x9, [x29, #-64]
   12bcc:	cmp	w23, #0x0
   12bd0:	mov	x0, x26
   12bd4:	mov	x1, x21
   12bd8:	ldr	x8, [x9]
   12bdc:	mov	x2, x24
   12be0:	cinc	x3, x8, eq  // eq = none
   12be4:	bl	c370 <mpfr_round_p@plt>
   12be8:	ldur	x15, [x29, #-80]
   12bec:	ldur	x28, [x29, #-128]
   12bf0:	mov	w3, w23
   12bf4:	cbz	w0, 114e4 <mpfr_div@@Base+0x9ac>
   12bf8:	add	x21, x26, #0x8
   12bfc:	cmp	x15, x21
   12c00:	b.eq	12c20 <mpfr_div@@Base+0x20e8>  // b.none
   12c04:	lsl	x2, x22, #3
   12c08:	mov	x0, x15
   12c0c:	mov	x1, x21
   12c10:	mov	w19, w3
   12c14:	bl	ba70 <memcpy@plt>
   12c18:	ldur	x15, [x29, #-80]
   12c1c:	mov	w3, w19
   12c20:	ldr	x8, [x15]
   12c24:	mov	x9, #0xffffffffffffffff    	// #-1
   12c28:	lsl	x9, x9, x28
   12c2c:	and	x8, x8, x9
   12c30:	str	x8, [x15]
   12c34:	cbz	w3, 12c4c <mpfr_div@@Base+0x2114>
   12c38:	ldur	x22, [x29, #-144]
   12c3c:	ldur	x11, [x29, #-120]
   12c40:	ldur	w8, [x29, #-164]
   12c44:	tbz	w8, #0, 11d70 <mpfr_div@@Base+0x1238>
   12c48:	b	11dd4 <mpfr_div@@Base+0x129c>
   12c4c:	cbz	w28, 12c68 <mpfr_div@@Base+0x2130>
   12c50:	ldur	x9, [x29, #-128]
   12c54:	ldr	x8, [x21]
   12c58:	sub	w9, w9, #0x1
   12c5c:	lsr	x8, x8, x9
   12c60:	and	x8, x8, #0x1
   12c64:	b	12c70 <mpfr_div@@Base+0x2138>
   12c68:	ldr	x8, [x26]
   12c6c:	lsr	x8, x8, #63
   12c70:	ldur	x22, [x29, #-144]
   12c74:	ldur	x15, [x29, #-80]
   12c78:	ldp	x28, x11, [x29, #-128]
   12c7c:	cbnz	x8, 11d70 <mpfr_div@@Base+0x1238>
   12c80:	b	11dd4 <mpfr_div@@Base+0x129c>
   12c84:	sub	x0, x29, #0x18
   12c88:	mov	w19, w3
   12c8c:	bl	be10 <mpfr_tmp_allocate@plt>
   12c90:	mov	w3, w19
   12c94:	mov	x21, x0
   12c98:	b	114f4 <mpfr_div@@Base+0x9bc>
   12c9c:	sub	x0, x29, #0x18
   12ca0:	mov	x1, x26
   12ca4:	bl	be10 <mpfr_tmp_allocate@plt>
   12ca8:	mov	x26, x0
   12cac:	b	12b78 <mpfr_div@@Base+0x2040>
   12cb0:	mov	x19, xzr
   12cb4:	ldur	x9, [x29, #-184]
   12cb8:	cbnz	x9, 12910 <mpfr_div@@Base+0x1dd8>
   12cbc:	b	125d4 <mpfr_div@@Base+0x1a9c>
   12cc0:	sub	x0, x29, #0x18
   12cc4:	mov	x1, x26
   12cc8:	bl	be10 <mpfr_tmp_allocate@plt>
   12ccc:	mov	x28, x0
   12cd0:	b	12afc <mpfr_div@@Base+0x1fc4>
   12cd4:	sub	x0, x29, #0x18
   12cd8:	bl	be10 <mpfr_tmp_allocate@plt>
   12cdc:	ldr	x8, [x21]
   12ce0:	mov	x28, x0
   12ce4:	b	11d1c <mpfr_div@@Base+0x11e4>

0000000000012ce8 <mpfr_div_ui@@Base>:
   12ce8:	stp	x29, x30, [sp, #-96]!
   12cec:	stp	x28, x27, [sp, #16]
   12cf0:	stp	x26, x25, [sp, #32]
   12cf4:	stp	x24, x23, [sp, #48]
   12cf8:	stp	x22, x21, [sp, #64]
   12cfc:	stp	x20, x19, [sp, #80]
   12d00:	mov	x29, sp
   12d04:	sub	sp, sp, #0x20
   12d08:	ldr	x11, [x1, #16]
   12d0c:	mov	x8, #0x2                   	// #2
   12d10:	movk	x8, #0x8000, lsl #48
   12d14:	add	x9, x8, #0x2
   12d18:	mov	x22, x2
   12d1c:	cmp	x11, x9
   12d20:	mov	x19, x0
   12d24:	b.lt	12de8 <mpfr_div_ui@@Base+0x100>  // b.tstop
   12d28:	mov	w10, w3
   12d2c:	subs	x8, x22, #0x1
   12d30:	b.ls	12e14 <mpfr_div_ui@@Base+0x12c>  // b.plast
   12d34:	tst	x22, x8
   12d38:	b.eq	12e2c <mpfr_div_ui@@Base+0x144>  // b.none
   12d3c:	ldr	w8, [x1, #8]
   12d40:	stur	w10, [x29, #-28]
   12d44:	stur	x11, [x29, #-24]
   12d48:	str	w8, [x19, #8]
   12d4c:	stur	xzr, [x29, #-8]
   12d50:	ldr	x8, [x1]
   12d54:	ldr	x9, [x19]
   12d58:	ldr	x23, [x1, #24]
   12d5c:	ldr	x21, [x19, #24]
   12d60:	sub	x10, x8, #0x1
   12d64:	add	x8, x8, #0x3e
   12d68:	sub	x11, x9, #0x1
   12d6c:	cmp	x10, #0x0
   12d70:	add	x9, x9, #0x3e
   12d74:	csel	x8, x8, x10, lt  // lt = tstop
   12d78:	cmp	x11, #0x0
   12d7c:	csel	x9, x9, x11, lt  // lt = tstop
   12d80:	asr	x20, x9, #6
   12d84:	asr	x8, x8, #6
   12d88:	add	x24, x20, #0x2
   12d8c:	add	x28, x8, #0x1
   12d90:	lsl	x1, x24, #3
   12d94:	add	x27, x20, #0x1
   12d98:	cmp	x1, #0x4, lsl #12
   12d9c:	sub	x25, x24, x28
   12da0:	b.hi	12e48 <mpfr_div_ui@@Base+0x160>  // b.pmore
   12da4:	add	x9, x1, #0xf
   12da8:	mov	x8, sp
   12dac:	and	x9, x9, #0xfffffffffffffff0
   12db0:	sub	x26, x8, x9
   12db4:	mov	sp, x26
   12db8:	stur	x19, [x29, #-16]
   12dbc:	tbnz	x25, #63, 12e5c <mpfr_div_ui@@Base+0x174>
   12dc0:	mov	x0, x26
   12dc4:	mov	x1, x25
   12dc8:	mov	x2, x23
   12dcc:	mov	x3, x28
   12dd0:	mov	x4, x22
   12dd4:	bl	c7b0 <__gmpn_divrem_1@plt>
   12dd8:	mov	x24, x0
   12ddc:	mov	w19, wzr
   12de0:	mov	x11, xzr
   12de4:	b	12ea0 <mpfr_div_ui@@Base+0x1b8>
   12de8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   12dec:	cmp	x11, x9
   12df0:	b.eq	1324c <mpfr_div_ui@@Base+0x564>  // b.none
   12df4:	mov	x9, #0x2                   	// #2
   12df8:	movk	x9, #0x8000, lsl #48
   12dfc:	cmp	x11, x9
   12e00:	b.eq	131f0 <mpfr_div_ui@@Base+0x508>  // b.none
   12e04:	cbz	x22, 131f0 <mpfr_div_ui@@Base+0x508>
   12e08:	mov	w8, wzr
   12e0c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   12e10:	b	13250 <mpfr_div_ui@@Base+0x568>
   12e14:	cbz	x22, 13218 <mpfr_div_ui@@Base+0x530>
   12e18:	ldr	w3, [x1, #8]
   12e1c:	mov	x0, x19
   12e20:	mov	w2, w10
   12e24:	bl	c690 <mpfr_set4@plt>
   12e28:	b	131e8 <mpfr_div_ui@@Base+0x500>
   12e2c:	clz	x8, x8
   12e30:	mov	w9, #0x40                  	// #64
   12e34:	sub	x2, x9, x8
   12e38:	mov	x0, x19
   12e3c:	mov	w3, w10
   12e40:	bl	c410 <mpfr_div_2si@plt>
   12e44:	b	131e8 <mpfr_div_ui@@Base+0x500>
   12e48:	sub	x0, x29, #0x8
   12e4c:	bl	be10 <mpfr_tmp_allocate@plt>
   12e50:	mov	x26, x0
   12e54:	stur	x19, [x29, #-16]
   12e58:	tbz	x25, #63, 12dc0 <mpfr_div_ui@@Base+0xd8>
   12e5c:	sub	x2, x23, x25, lsl #3
   12e60:	mov	x0, x26
   12e64:	mov	x1, xzr
   12e68:	mov	x3, x24
   12e6c:	mov	x4, x22
   12e70:	neg	x19, x25
   12e74:	bl	c7b0 <__gmpn_divrem_1@plt>
   12e78:	mov	x24, x0
   12e7c:	mov	x8, xzr
   12e80:	ldr	x9, [x23, x8, lsl #3]
   12e84:	cbnz	x9, 12e94 <mpfr_div_ui@@Base+0x1ac>
   12e88:	add	x8, x8, #0x1
   12e8c:	cmp	x8, x19
   12e90:	b.lt	12e80 <mpfr_div_ui@@Base+0x198>  // b.tstop
   12e94:	cmp	x9, #0x0
   12e98:	cset	w11, ne  // ne = any
   12e9c:	mov	w19, #0x1                   	// #1
   12ea0:	ldur	x8, [x29, #-16]
   12ea4:	ldr	w9, [x8]
   12ea8:	ldr	x8, [x26, x27, lsl #3]
   12eac:	neg	w9, w9
   12eb0:	and	w28, w9, #0x3f
   12eb4:	cbz	x8, 12f18 <mpfr_div_ui@@Base+0x230>
   12eb8:	mov	x1, x26
   12ebc:	ldr	x9, [x1], #8
   12ec0:	clz	x22, x8
   12ec4:	mov	x0, x21
   12ec8:	mov	x2, x27
   12ecc:	mov	w3, w22
   12ed0:	mov	x23, x11
   12ed4:	lsl	x19, x9, x22
   12ed8:	bl	bd10 <__gmpn_lshift@plt>
   12edc:	ldr	x8, [x26]
   12ee0:	ldr	x9, [x21]
   12ee4:	neg	x10, x22
   12ee8:	lsr	x8, x8, x10
   12eec:	orr	x8, x9, x8
   12ef0:	str	x8, [x21]
   12ef4:	cbz	w28, 12f70 <mpfr_div_ui@@Base+0x288>
   12ef8:	sub	w9, w28, #0x1
   12efc:	mov	w10, #0x1                   	// #1
   12f00:	lsl	x9, x10, x9
   12f04:	and	x25, x8, x9
   12f08:	sub	x9, x9, #0x1
   12f0c:	and	x8, x8, x9
   12f10:	orr	x8, x8, x19
   12f14:	b	12f78 <mpfr_div_ui@@Base+0x290>
   12f18:	cmp	x21, x26
   12f1c:	b.eq	12f38 <mpfr_div_ui@@Base+0x250>  // b.none
   12f20:	lsl	x2, x27, #3
   12f24:	mov	x0, x21
   12f28:	mov	x1, x26
   12f2c:	mov	x27, x11
   12f30:	bl	ba70 <memcpy@plt>
   12f34:	mov	x11, x27
   12f38:	ldur	x8, [x29, #-24]
   12f3c:	sub	x27, x8, #0x40
   12f40:	cbz	w28, 13074 <mpfr_div_ui@@Base+0x38c>
   12f44:	ldr	x8, [x26]
   12f48:	sub	w9, w28, #0x1
   12f4c:	mov	w10, #0x1                   	// #1
   12f50:	lsl	x9, x10, x9
   12f54:	ldur	w26, [x29, #-28]
   12f58:	sub	x10, x9, #0x1
   12f5c:	and	x25, x8, x9
   12f60:	and	x8, x8, x10
   12f64:	orr	x9, x11, x24
   12f68:	orr	x19, x9, x8
   12f6c:	b	12f8c <mpfr_div_ui@@Base+0x2a4>
   12f70:	and	x25, x19, #0x8000000000000000
   12f74:	and	x8, x19, #0x7fffffffffffffff
   12f78:	orr	x9, x23, x24
   12f7c:	orr	x19, x9, x8
   12f80:	ldur	x8, [x29, #-24]
   12f84:	ldur	w26, [x29, #-28]
   12f88:	sub	x27, x8, x22
   12f8c:	ldr	x8, [x21]
   12f90:	mov	w9, #0x1                   	// #1
   12f94:	lsl	x22, x9, x28
   12f98:	neg	x9, x22
   12f9c:	and	x8, x8, x9
   12fa0:	str	x8, [x21]
   12fa4:	ldur	x0, [x29, #-8]
   12fa8:	cbnz	x0, 131b0 <mpfr_div_ui@@Base+0x4c8>
   12fac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   12fb0:	ldr	x1, [x0, #2576]
   12fb4:	add	x0, x0, #0xa10
   12fb8:	blr	x1
   12fbc:	mrs	x9, tpidr_el0
   12fc0:	ldr	x8, [x9, x0]
   12fc4:	sub	x8, x8, #0x1
   12fc8:	cmp	x27, x8
   12fcc:	b.lt	131b8 <mpfr_div_ui@@Base+0x4d0>  // b.tstop
   12fd0:	orr	x8, x19, x25
   12fd4:	cbz	x8, 131d0 <mpfr_div_ui@@Base+0x4e8>
   12fd8:	sub	w8, w26, #0x1
   12fdc:	cmp	w8, #0x4
   12fe0:	b.hi	13010 <mpfr_div_ui@@Base+0x328>  // b.pmore
   12fe4:	adrp	x10, 5e000 <mpfr_free_pool@@Base+0x2b84>
   12fe8:	add	x10, x10, #0xdb8
   12fec:	adr	x11, 13000 <mpfr_div_ui@@Base+0x318>
   12ff0:	ldrb	w12, [x10, x8]
   12ff4:	add	x11, x11, x12, lsl #2
   12ff8:	ldur	x13, [x29, #-16]
   12ffc:	br	x11
   13000:	ldr	w8, [x13, #8]
   13004:	cmp	w8, #0x1
   13008:	b.ge	13038 <mpfr_div_ui@@Base+0x350>  // b.tcont
   1300c:	b	1302c <mpfr_div_ui@@Base+0x344>
   13010:	cbz	x25, 130d8 <mpfr_div_ui@@Base+0x3f0>
   13014:	cbz	x19, 13164 <mpfr_div_ui@@Base+0x47c>
   13018:	ldur	x13, [x29, #-16]
   1301c:	ldr	w8, [x13, #8]
   13020:	b	1303c <mpfr_div_ui@@Base+0x354>
   13024:	ldr	w8, [x13, #8]
   13028:	tbnz	w8, #31, 13038 <mpfr_div_ui@@Base+0x350>
   1302c:	mov	w26, #0x1                   	// #1
   13030:	b	130dc <mpfr_div_ui@@Base+0x3f4>
   13034:	ldr	w8, [x13, #8]
   13038:	mov	w26, #0x4                   	// #4
   1303c:	ldr	x10, [x21]
   13040:	adds	x10, x10, x22
   13044:	str	x10, [x21]
   13048:	b.cc	130e4 <mpfr_div_ui@@Base+0x3fc>  // b.lo, b.ul, b.last
   1304c:	mov	w10, #0x1                   	// #1
   13050:	cmp	x10, x20
   13054:	b.gt	130b0 <mpfr_div_ui@@Base+0x3c8>
   13058:	lsl	x11, x10, #3
   1305c:	ldr	x12, [x21, x11]
   13060:	add	x10, x10, #0x1
   13064:	adds	x12, x12, #0x1
   13068:	str	x12, [x21, x11]
   1306c:	b.cs	13050 <mpfr_div_ui@@Base+0x368>  // b.hs, b.nlast
   13070:	b	130e4 <mpfr_div_ui@@Base+0x3fc>
   13074:	sub	x8, x22, x24
   13078:	cmp	x24, x8
   1307c:	b.cs	130c0 <mpfr_div_ui@@Base+0x3d8>  // b.hs, b.nlast
   13080:	cmp	x24, x22, lsr #1
   13084:	cset	w8, ne  // ne = any
   13088:	eor	w9, w19, #0x1
   1308c:	orr	w8, w9, w8
   13090:	tbnz	w8, #0, 130a0 <mpfr_div_ui@@Base+0x3b8>
   13094:	mvn	x8, x25
   13098:	ldr	x9, [x23, x8, lsl #3]
   1309c:	tbnz	x9, #63, 1317c <mpfr_div_ui@@Base+0x494>
   130a0:	ldur	w26, [x29, #-28]
   130a4:	mov	x25, xzr
   130a8:	orr	x19, x11, x24
   130ac:	b	12f8c <mpfr_div_ui@@Base+0x2a4>
   130b0:	add	x27, x27, #0x1
   130b4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   130b8:	str	x10, [x21, x20, lsl #3]
   130bc:	b	130e4 <mpfr_div_ui@@Base+0x3fc>
   130c0:	ldur	w26, [x29, #-28]
   130c4:	lsl	x8, x24, #1
   130c8:	sub	x8, x8, x22
   130cc:	orr	x19, x11, x8
   130d0:	mov	w25, #0x1                   	// #1
   130d4:	b	12f8c <mpfr_div_ui@@Base+0x2a4>
   130d8:	ldur	x13, [x29, #-16]
   130dc:	ldr	w8, [x13, #8]
   130e0:	neg	w8, w8
   130e4:	str	x27, [x13, #16]
   130e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   130ec:	ldr	x1, [x0, #2576]
   130f0:	add	x0, x0, #0xa10
   130f4:	blr	x1
   130f8:	ldr	x10, [x9, x0]
   130fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13100:	ldr	x1, [x0, #2608]
   13104:	add	x0, x0, #0xa30
   13108:	blr	x1
   1310c:	cmp	x27, x10
   13110:	b.lt	131d8 <mpfr_div_ui@@Base+0x4f0>  // b.tstop
   13114:	ldr	x10, [x9, x0]
   13118:	cmp	x27, x10
   1311c:	b.gt	131d8 <mpfr_div_ui@@Base+0x4f0>
   13120:	cbz	w8, 13140 <mpfr_div_ui@@Base+0x458>
   13124:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13128:	ldr	x1, [x0, #2640]
   1312c:	add	x0, x0, #0xa50
   13130:	blr	x1
   13134:	ldr	w10, [x9, x0]
   13138:	orr	w10, w10, #0x8
   1313c:	str	w10, [x9, x0]
   13140:	mov	w0, w8
   13144:	mov	sp, x29
   13148:	ldp	x20, x19, [sp, #80]
   1314c:	ldp	x22, x21, [sp, #64]
   13150:	ldp	x24, x23, [sp, #48]
   13154:	ldp	x26, x25, [sp, #32]
   13158:	ldp	x28, x27, [sp, #16]
   1315c:	ldp	x29, x30, [sp], #96
   13160:	ret
   13164:	ldur	x13, [x29, #-16]
   13168:	ldr	x10, [x21]
   1316c:	ldr	w8, [x13, #8]
   13170:	and	x10, x10, x22
   13174:	cbnz	x10, 1303c <mpfr_div_ui@@Base+0x354>
   13178:	b	130e0 <mpfr_div_ui@@Base+0x3f8>
   1317c:	lsl	x19, x9, #1
   13180:	lsr	x25, x9, #63
   13184:	cbnz	x19, 1319c <mpfr_div_ui@@Base+0x4b4>
   13188:	mov	w19, #0x1                   	// #1
   1318c:	cbz	x8, 131a4 <mpfr_div_ui@@Base+0x4bc>
   13190:	ldr	x9, [x23], #8
   13194:	sub	x8, x8, #0x1
   13198:	cbz	x9, 1318c <mpfr_div_ui@@Base+0x4a4>
   1319c:	ldur	w26, [x29, #-28]
   131a0:	b	12f8c <mpfr_div_ui@@Base+0x2a4>
   131a4:	ldur	w26, [x29, #-28]
   131a8:	mov	x19, xzr
   131ac:	b	12f8c <mpfr_div_ui@@Base+0x2a4>
   131b0:	bl	c400 <mpfr_tmp_free@plt>
   131b4:	b	12fac <mpfr_div_ui@@Base+0x2c4>
   131b8:	ldur	x0, [x29, #-16]
   131bc:	cmp	w26, #0x0
   131c0:	csinc	w1, w26, wzr, ne  // ne = any
   131c4:	ldr	w2, [x0, #8]
   131c8:	bl	c3c0 <mpfr_underflow@plt>
   131cc:	b	131e8 <mpfr_div_ui@@Base+0x500>
   131d0:	ldur	x13, [x29, #-16]
   131d4:	b	130e4 <mpfr_div_ui@@Base+0x3fc>
   131d8:	mov	x0, x13
   131dc:	mov	w1, w8
   131e0:	mov	w2, w26
   131e4:	bl	cb10 <mpfr_check_range@plt>
   131e8:	mov	w8, w0
   131ec:	b	13140 <mpfr_div_ui@@Base+0x458>
   131f0:	str	x8, [x19, #16]
   131f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   131f8:	ldr	x1, [x0, #2640]
   131fc:	add	x0, x0, #0xa50
   13200:	blr	x1
   13204:	mrs	x9, tpidr_el0
   13208:	ldr	w10, [x9, x0]
   1320c:	mov	w8, wzr
   13210:	orr	w10, w10, #0x4
   13214:	b	1313c <mpfr_div_ui@@Base+0x454>
   13218:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1321c:	str	x8, [x19, #16]
   13220:	ldr	w8, [x1, #8]
   13224:	str	w8, [x19, #8]
   13228:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1322c:	ldr	x1, [x0, #2640]
   13230:	add	x0, x0, #0xa50
   13234:	blr	x1
   13238:	mrs	x9, tpidr_el0
   1323c:	ldr	w10, [x9, x0]
   13240:	mov	w8, wzr
   13244:	orr	w10, w10, #0x20
   13248:	b	1313c <mpfr_div_ui@@Base+0x454>
   1324c:	mov	w8, wzr
   13250:	str	x9, [x19, #16]
   13254:	ldr	w9, [x1, #8]
   13258:	str	w9, [x19, #8]
   1325c:	b	13140 <mpfr_div_ui@@Base+0x458>

0000000000013260 <mpfr_fdump@@Base>:
   13260:	sub	sp, sp, #0x80
   13264:	stp	x29, x30, [sp, #32]
   13268:	stp	x28, x27, [sp, #48]
   1326c:	stp	x26, x25, [sp, #64]
   13270:	stp	x24, x23, [sp, #80]
   13274:	stp	x22, x21, [sp, #96]
   13278:	stp	x20, x19, [sp, #112]
   1327c:	ldr	w8, [x1, #8]
   13280:	mov	x20, x1
   13284:	mov	x19, x0
   13288:	add	x29, sp, #0x20
   1328c:	tbnz	w8, #31, 132c8 <mpfr_fdump@@Base+0x68>
   13290:	ldr	x8, [x20, #16]
   13294:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   13298:	cmp	x8, x9
   1329c:	b.eq	132e4 <mpfr_fdump@@Base+0x84>  // b.none
   132a0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   132a4:	cmp	x8, x9
   132a8:	b.eq	132f4 <mpfr_fdump@@Base+0x94>  // b.none
   132ac:	mov	x9, #0x2                   	// #2
   132b0:	movk	x9, #0x8000, lsl #48
   132b4:	cmp	x8, x9
   132b8:	b.ne	13310 <mpfr_fdump@@Base+0xb0>  // b.any
   132bc:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   132c0:	add	x0, x0, #0xdbd
   132c4:	b	132fc <mpfr_fdump@@Base+0x9c>
   132c8:	mov	w0, #0x2d                  	// #45
   132cc:	mov	x1, x19
   132d0:	bl	bdf0 <fputc@plt>
   132d4:	ldr	x8, [x20, #16]
   132d8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   132dc:	cmp	x8, x9
   132e0:	b.ne	132a0 <mpfr_fdump@@Base+0x40>  // b.any
   132e4:	mov	w0, #0x30                  	// #48
   132e8:	mov	x1, x19
   132ec:	bl	bdf0 <fputc@plt>
   132f0:	b	134e4 <mpfr_fdump@@Base+0x284>
   132f4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   132f8:	add	x0, x0, #0x5fd
   132fc:	mov	w1, #0x5                   	// #5
   13300:	mov	w2, #0x1                   	// #1
   13304:	mov	x3, x19
   13308:	bl	c8c0 <fwrite@plt>
   1330c:	b	134e4 <mpfr_fdump@@Base+0x284>
   13310:	ldr	x8, [x20, #24]
   13314:	ldr	x28, [x20]
   13318:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   1331c:	add	x0, x0, #0xdc3
   13320:	mov	w1, #0x2                   	// #2
   13324:	mov	w2, #0x1                   	// #1
   13328:	mov	x3, x19
   1332c:	str	x8, [sp, #16]
   13330:	bl	c8c0 <fwrite@plt>
   13334:	cmn	x28, #0x3e
   13338:	b.lt	13418 <mpfr_fdump@@Base+0x1b8>  // b.tstop
   1333c:	sub	x9, x28, #0x1
   13340:	add	x10, x28, #0x3e
   13344:	cmp	x9, #0x0
   13348:	csel	x9, x10, x9, lt  // lt = tstop
   1334c:	mov	w22, wzr
   13350:	mov	w8, wzr
   13354:	mov	w23, #0x30                  	// #48
   13358:	sub	x24, x29, #0x4
   1335c:	mov	w25, #0x54                  	// #84
   13360:	asr	x27, x9, #6
   13364:	str	x20, [sp, #8]
   13368:	b	13380 <mpfr_fdump@@Base+0x120>
   1336c:	mov	x28, x20
   13370:	cmp	x27, #0x0
   13374:	sub	x27, x27, #0x1
   13378:	mov	w8, #0x1                   	// #1
   1337c:	b.le	1340c <mpfr_fdump@@Base+0x1ac>
   13380:	ldr	x9, [sp, #16]
   13384:	ldr	x26, [x9, x27, lsl #3]
   13388:	tbnz	w8, #0, 133a0 <mpfr_fdump@@Base+0x140>
   1338c:	tbnz	x26, #63, 133a0 <mpfr_fdump@@Base+0x140>
   13390:	add	w8, w22, #0x1
   13394:	mov	w9, #0x4e                  	// #78
   13398:	strb	w9, [x24, w22, sxtw]
   1339c:	mov	w22, w8
   133a0:	sub	x20, x28, #0x40
   133a4:	sub	x28, x28, #0x1
   133a8:	mov	x21, #0x8000000000000000    	// #-9223372036854775808
   133ac:	b	133bc <mpfr_fdump@@Base+0x15c>
   133b0:	lsr	x21, x21, #1
   133b4:	sub	x28, x28, #0x1
   133b8:	cbz	x21, 1336c <mpfr_fdump@@Base+0x10c>
   133bc:	tst	x21, x26
   133c0:	cinc	w0, w23, ne  // ne = any
   133c4:	mov	x1, x19
   133c8:	bl	bd70 <putc@plt>
   133cc:	cbnz	x28, 133b0 <mpfr_fdump@@Base+0x150>
   133d0:	sub	x8, x21, #0x1
   133d4:	tst	x8, x26
   133d8:	b.eq	133f8 <mpfr_fdump@@Base+0x198>  // b.none
   133dc:	mov	w0, #0x5b                  	// #91
   133e0:	mov	x1, x19
   133e4:	bl	bd70 <putc@plt>
   133e8:	add	w8, w22, #0x1
   133ec:	strb	w25, [x24, w22, sxtw]
   133f0:	mov	w22, w8
   133f4:	b	133b0 <mpfr_fdump@@Base+0x150>
   133f8:	mov	x28, xzr
   133fc:	cmp	x27, #0x0
   13400:	sub	x27, x27, #0x1
   13404:	mov	w8, #0x1                   	// #1
   13408:	b.gt	13380 <mpfr_fdump@@Base+0x120>
   1340c:	ldr	x20, [sp, #8]
   13410:	tbz	x28, #63, 13428 <mpfr_fdump@@Base+0x1c8>
   13414:	b	1341c <mpfr_fdump@@Base+0x1bc>
   13418:	mov	w22, wzr
   1341c:	mov	w0, #0x5d                  	// #93
   13420:	mov	x1, x19
   13424:	bl	bd70 <putc@plt>
   13428:	ldr	x21, [x20, #16]
   1342c:	mov	x8, #0x4                   	// #4
   13430:	movk	x8, #0x8000, lsl #48
   13434:	cmp	x21, x8
   13438:	b.ne	13458 <mpfr_fdump@@Base+0x1f8>  // b.any
   1343c:	adrp	x1, 5e000 <mpfr_free_pool@@Base+0x2b84>
   13440:	add	x2, x20, #0x20
   13444:	add	x1, x1, #0xdc6
   13448:	mov	x0, x19
   1344c:	bl	c540 <__gmp_fprintf@plt>
   13450:	mov	w8, #0x55                  	// #85
   13454:	b	134b4 <mpfr_fdump@@Base+0x254>
   13458:	adrp	x1, 5e000 <mpfr_free_pool@@Base+0x2b84>
   1345c:	add	x1, x1, #0xdcb
   13460:	mov	x0, x19
   13464:	mov	x2, x21
   13468:	bl	ccc0 <fprintf@plt>
   1346c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13470:	ldr	x1, [x0, #2576]
   13474:	add	x0, x0, #0xa10
   13478:	blr	x1
   1347c:	mrs	x8, tpidr_el0
   13480:	ldr	x9, [x8, x0]
   13484:	cmp	x21, x9
   13488:	b.ge	13494 <mpfr_fdump@@Base+0x234>  // b.tcont
   1348c:	mov	w8, #0x3c                  	// #60
   13490:	b	134b4 <mpfr_fdump@@Base+0x254>
   13494:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13498:	ldr	x1, [x0, #2608]
   1349c:	add	x0, x0, #0xa30
   134a0:	blr	x1
   134a4:	ldr	x8, [x8, x0]
   134a8:	cmp	x21, x8
   134ac:	b.le	134c4 <mpfr_fdump@@Base+0x264>
   134b0:	mov	w8, #0x3e                  	// #62
   134b4:	add	w9, w22, #0x1
   134b8:	sub	x10, x29, #0x4
   134bc:	strb	w8, [x10, w22, sxtw]
   134c0:	mov	w22, w9
   134c4:	cbz	w22, 134e4 <mpfr_fdump@@Base+0x284>
   134c8:	adrp	x1, 5e000 <mpfr_free_pool@@Base+0x2b84>
   134cc:	sub	x8, x29, #0x4
   134d0:	add	x1, x1, #0xdd0
   134d4:	sub	x2, x29, #0x4
   134d8:	mov	x0, x19
   134dc:	strb	wzr, [x8, w22, sxtw]
   134e0:	bl	ccc0 <fprintf@plt>
   134e4:	mov	w0, #0xa                   	// #10
   134e8:	mov	x1, x19
   134ec:	bl	bd70 <putc@plt>
   134f0:	ldp	x20, x19, [sp, #112]
   134f4:	ldp	x22, x21, [sp, #96]
   134f8:	ldp	x24, x23, [sp, #80]
   134fc:	ldp	x26, x25, [sp, #64]
   13500:	ldp	x28, x27, [sp, #48]
   13504:	ldp	x29, x30, [sp, #32]
   13508:	add	sp, sp, #0x80
   1350c:	ret

0000000000013510 <mpfr_dump@@Base>:
   13510:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   13514:	ldr	x8, [x8, #4000]
   13518:	mov	x1, x0
   1351c:	ldr	x8, [x8]
   13520:	mov	x0, x8
   13524:	b	bc40 <mpfr_fdump@plt>

0000000000013528 <mpfr_eq@@Base>:
   13528:	ldr	x8, [x0, #16]
   1352c:	mov	x10, #0x2                   	// #2
   13530:	movk	x10, #0x8000, lsl #48
   13534:	add	x11, x10, #0x2
   13538:	cmp	x8, x11
   1353c:	b.lt	13724 <mpfr_eq@@Base+0x1fc>  // b.tstop
   13540:	ldr	x9, [x1, #16]
   13544:	cmp	x9, x11
   13548:	b.lt	13730 <mpfr_eq@@Base+0x208>  // b.tstop
   1354c:	cmp	x8, x9
   13550:	mov	w8, wzr
   13554:	b.ne	1371c <mpfr_eq@@Base+0x1f4>  // b.any
   13558:	ldr	w9, [x0, #8]
   1355c:	ldr	w10, [x1, #8]
   13560:	cmp	w9, w10
   13564:	b.ne	1371c <mpfr_eq@@Base+0x1f4>  // b.any
   13568:	ldr	x8, [x0]
   1356c:	ldr	x9, [x1]
   13570:	sub	x10, x8, #0x1
   13574:	add	x8, x8, #0x3e
   13578:	sub	x11, x9, #0x1
   1357c:	cmp	x10, #0x0
   13580:	add	x9, x9, #0x3e
   13584:	csel	x8, x8, x10, lt  // lt = tstop
   13588:	cmp	x11, #0x0
   1358c:	csel	x9, x9, x11, lt  // lt = tstop
   13590:	asr	x8, x8, #6
   13594:	asr	x9, x9, #6
   13598:	cmp	x9, x8
   1359c:	add	x10, x9, #0x1
   135a0:	csel	x11, x1, x0, gt
   135a4:	csel	x13, x0, x1, gt
   135a8:	add	x12, x8, #0x1
   135ac:	csinc	x10, x10, x8, gt
   135b0:	ldr	x8, [x13, #24]
   135b4:	ldr	x11, [x11, #24]
   135b8:	csinc	x9, x12, x9, gt
   135bc:	cmp	x10, x9
   135c0:	b.le	13658 <mpfr_eq@@Base+0x130>
   135c4:	lsl	x12, x9, #6
   135c8:	cmp	x12, x2
   135cc:	mov	x13, x9
   135d0:	b.cs	13660 <mpfr_eq@@Base+0x138>  // b.hs, b.nlast
   135d4:	mvn	w14, w13
   135d8:	sub	x15, x2, x12
   135dc:	add	w14, w14, w10
   135e0:	cmp	x15, #0x3f
   135e4:	mvn	w16, w14
   135e8:	lsr	w17, w16, #31
   135ec:	cset	w16, hi  // hi = pmore
   135f0:	tbnz	w14, #31, 13628 <mpfr_eq@@Base+0x100>
   135f4:	cmp	x15, #0x40
   135f8:	b.cc	13628 <mpfr_eq@@Base+0x100>  // b.lo, b.ul, b.last
   135fc:	ldr	x16, [x11, w14, uxtw #3]
   13600:	cbnz	x16, 13648 <mpfr_eq@@Base+0x120>
   13604:	sub	x15, x15, #0x40
   13608:	cmp	w14, #0x0
   1360c:	cset	w17, gt
   13610:	cmp	x15, #0x3f
   13614:	cset	w16, hi  // hi = pmore
   13618:	subs	w14, w14, #0x1
   1361c:	b.lt	13628 <mpfr_eq@@Base+0x100>  // b.tstop
   13620:	cmp	x15, #0x3f
   13624:	b.hi	135fc <mpfr_eq@@Base+0xd4>  // b.pmore
   13628:	cbz	w17, 13660 <mpfr_eq@@Base+0x138>
   1362c:	cmp	x15, #0x3f
   13630:	b.hi	13644 <mpfr_eq@@Base+0x11c>  // b.pmore
   13634:	ldr	x17, [x11, w14, uxtw #3]
   13638:	neg	x15, x15
   1363c:	lsr	x15, x17, x15
   13640:	cbnz	x15, 13650 <mpfr_eq@@Base+0x128>
   13644:	cbz	w16, 13660 <mpfr_eq@@Base+0x138>
   13648:	ldr	x14, [x11, w14, uxtw #3]
   1364c:	cbz	x14, 13660 <mpfr_eq@@Base+0x138>
   13650:	mov	w0, wzr
   13654:	ret
   13658:	lsl	x12, x10, #6
   1365c:	mov	x13, x10
   13660:	sub	x14, x2, #0x1
   13664:	cmp	x12, x2
   13668:	lsr	x14, x14, #6
   1366c:	csel	x15, x12, x2, cc  // cc = lo, ul, last
   13670:	add	x12, x14, #0x1
   13674:	cmp	x13, x12
   13678:	csinc	x12, x13, x14, ls  // ls = plast
   1367c:	csel	x13, x2, x15, hi  // hi = pmore
   13680:	cmp	x12, #0x2
   13684:	sub	x15, x12, #0x1
   13688:	b.lt	136dc <mpfr_eq@@Base+0x1b4>  // b.tstop
   1368c:	cmp	x13, #0x40
   13690:	b.cc	136dc <mpfr_eq@@Base+0x1b4>  // b.lo, b.ul, b.last
   13694:	add	x14, x8, x9, lsl #3
   13698:	add	x17, x11, x10, lsl #3
   1369c:	sub	x16, x14, #0x8
   136a0:	sub	x17, x17, #0x8
   136a4:	ldr	x14, [x17]
   136a8:	ldr	x18, [x16]
   136ac:	cmp	x14, x18
   136b0:	b.ne	13650 <mpfr_eq@@Base+0x128>  // b.any
   136b4:	sub	x13, x13, #0x40
   136b8:	cmp	x15, #0x2
   136bc:	sub	x14, x15, #0x1
   136c0:	b.lt	136e0 <mpfr_eq@@Base+0x1b8>  // b.tstop
   136c4:	sub	x16, x16, #0x8
   136c8:	cmp	x13, #0x3f
   136cc:	sub	x17, x17, #0x8
   136d0:	mov	x15, x14
   136d4:	b.hi	136a4 <mpfr_eq@@Base+0x17c>  // b.pmore
   136d8:	b	136e0 <mpfr_eq@@Base+0x1b8>
   136dc:	mov	x14, x15
   136e0:	sub	x10, x10, x12
   136e4:	add	x10, x11, x10, lsl #3
   136e8:	ldr	x10, [x10, x14, lsl #3]
   136ec:	sub	x11, x9, x12
   136f0:	ands	x9, x13, #0x3f
   136f4:	add	x8, x8, x11, lsl #3
   136f8:	b.eq	13710 <mpfr_eq@@Base+0x1e8>  // b.none
   136fc:	ldr	x8, [x8, x14, lsl #3]
   13700:	neg	x9, x9
   13704:	lsr	x10, x10, x9
   13708:	lsr	x8, x8, x9
   1370c:	b	13714 <mpfr_eq@@Base+0x1ec>
   13710:	ldr	x8, [x8, x14, lsl #3]
   13714:	cmp	x10, x8
   13718:	cset	w8, eq  // eq = none
   1371c:	mov	w0, w8
   13720:	ret
   13724:	cmp	x8, x10
   13728:	b.eq	13650 <mpfr_eq@@Base+0x128>  // b.none
   1372c:	ldr	x9, [x1, #16]
   13730:	cmp	x9, x10
   13734:	b.eq	13650 <mpfr_eq@@Base+0x128>  // b.none
   13738:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1373c:	cmp	x8, x10
   13740:	b.ne	1375c <mpfr_eq@@Base+0x234>  // b.any
   13744:	cmp	x9, x10
   13748:	b.ne	1375c <mpfr_eq@@Base+0x234>  // b.any
   1374c:	ldr	w8, [x0, #8]
   13750:	ldr	w9, [x1, #8]
   13754:	cmp	w8, w9
   13758:	b	13718 <mpfr_eq@@Base+0x1f0>
   1375c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   13760:	cmp	x8, x10
   13764:	cset	w8, eq  // eq = none
   13768:	cmp	x9, x10
   1376c:	cset	w9, eq  // eq = none
   13770:	and	w0, w8, w9
   13774:	ret

0000000000013778 <mpfr_exp10@@Base>:
   13778:	mov	w3, w2
   1377c:	mov	x2, x1
   13780:	mov	w1, #0xa                   	// #10
   13784:	b	c9f0 <mpfr_ui_pow@plt>

0000000000013788 <mpfr_exp2@@Base>:
   13788:	sub	sp, sp, #0xb0
   1378c:	stp	x29, x30, [sp, #80]
   13790:	stp	x28, x27, [sp, #96]
   13794:	stp	x26, x25, [sp, #112]
   13798:	stp	x24, x23, [sp, #128]
   1379c:	stp	x22, x21, [sp, #144]
   137a0:	stp	x20, x19, [sp, #160]
   137a4:	ldr	x8, [x1, #16]
   137a8:	mov	x10, #0x4                   	// #4
   137ac:	movk	x10, #0x8000, lsl #48
   137b0:	mov	w20, w2
   137b4:	mov	x22, x1
   137b8:	cmp	x8, x10
   137bc:	mov	x19, x0
   137c0:	add	x29, sp, #0x50
   137c4:	b.lt	13b48 <mpfr_exp2@@Base+0x3c0>  // b.tstop
   137c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   137cc:	ldr	x1, [x0, #2576]
   137d0:	add	x0, x0, #0xa10
   137d4:	blr	x1
   137d8:	mrs	x26, tpidr_el0
   137dc:	ldr	x8, [x26, x0]
   137e0:	mov	x0, x22
   137e4:	mov	x2, xzr
   137e8:	sub	x1, x8, #0x2
   137ec:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   137f0:	cmp	w0, #0x0
   137f4:	b.le	13b94 <mpfr_exp2@@Base+0x40c>
   137f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   137fc:	ldr	x1, [x0, #2608]
   13800:	add	x0, x0, #0xa30
   13804:	blr	x1
   13808:	ldr	x1, [x26, x0]
   1380c:	mov	x0, x22
   13810:	mov	x2, xzr
   13814:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   13818:	tbz	w0, #31, 13bac <mpfr_exp2@@Base+0x424>
   1381c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13820:	ldr	x1, [x0, #2640]
   13824:	add	x0, x0, #0xa50
   13828:	blr	x1
   1382c:	ldr	w25, [x26, x0]
   13830:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13834:	ldr	x1, [x0, #2576]
   13838:	add	x0, x0, #0xa10
   1383c:	blr	x1
   13840:	ldr	x27, [x26, x0]
   13844:	mov	x8, x0
   13848:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1384c:	ldr	x1, [x0, #2608]
   13850:	add	x0, x0, #0xa30
   13854:	blr	x1
   13858:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1385c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   13860:	ldr	x28, [x26, x0]
   13864:	str	x9, [x26, x8]
   13868:	str	x10, [x26, x0]
   1386c:	ldr	x8, [x22, #16]
   13870:	tbz	x8, #63, 13888 <mpfr_exp2@@Base+0x100>
   13874:	ldr	x9, [x19]
   13878:	neg	x2, x8
   1387c:	add	x8, x9, #0x1
   13880:	cmp	x8, x2
   13884:	b.cc	13be4 <mpfr_exp2@@Base+0x45c>  // b.lo, b.ul, b.last
   13888:	mov	w1, #0x1                   	// #1
   1388c:	mov	x0, x22
   13890:	bl	c1d0 <mpfr_get_si@plt>
   13894:	ldr	x1, [x22]
   13898:	mov	x21, x0
   1389c:	sub	x0, x29, #0x20
   138a0:	bl	ca60 <mpfr_init2@plt>
   138a4:	sub	x0, x29, #0x20
   138a8:	mov	x1, x22
   138ac:	mov	x2, x21
   138b0:	mov	w3, wzr
   138b4:	bl	c0a0 <mpfr_sub_si@plt>
   138b8:	ldur	x8, [x29, #-16]
   138bc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   138c0:	cmp	x8, x9
   138c4:	b.ne	138f0 <mpfr_exp2@@Base+0x168>  // b.any
   138c8:	mov	w1, #0x1                   	// #1
   138cc:	mov	x0, x19
   138d0:	mov	x2, xzr
   138d4:	mov	w3, wzr
   138d8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   138dc:	mov	w22, wzr
   138e0:	sub	x0, x29, #0x20
   138e4:	bl	c0b0 <mpfr_clear@plt>
   138e8:	cbnz	w20, 13a7c <mpfr_exp2@@Base+0x2f4>
   138ec:	b	13a48 <mpfr_exp2@@Base+0x2c0>
   138f0:	ldr	x24, [x19]
   138f4:	subs	x23, x24, #0x1
   138f8:	add	x22, x24, #0x5
   138fc:	b.eq	13bc0 <mpfr_exp2@@Base+0x438>  // b.none
   13900:	b.le	13bc8 <mpfr_exp2@@Base+0x440>
   13904:	clz	x8, x23
   13908:	mov	w9, #0x40                  	// #64
   1390c:	sub	x8, x9, x8
   13910:	add	x22, x22, x8
   13914:	add	x0, sp, #0x10
   13918:	mov	x1, x22
   1391c:	bl	ca60 <mpfr_init2@plt>
   13920:	cmp	w20, #0x0
   13924:	mov	w8, #0x40                  	// #64
   13928:	cinc	x24, x24, eq  // eq = none
   1392c:	str	x8, [sp, #8]
   13930:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13934:	ldr	x1, [x0, #2624]
   13938:	add	x0, x0, #0xa40
   1393c:	blr	x1
   13940:	add	x1, x26, x0
   13944:	add	x0, sp, #0x10
   13948:	mov	w2, #0x2                   	// #2
   1394c:	bl	c380 <mpfr_cache@plt>
   13950:	add	x0, sp, #0x10
   13954:	sub	x1, x29, #0x20
   13958:	add	x2, sp, #0x10
   1395c:	mov	w3, #0x2                   	// #2
   13960:	bl	bda0 <mpfr_mul@plt>
   13964:	ldr	x23, [sp, #32]
   13968:	add	x0, sp, #0x10
   1396c:	add	x1, sp, #0x10
   13970:	mov	w2, wzr
   13974:	bl	c740 <mpfr_exp@plt>
   13978:	ldr	x8, [sp, #32]
   1397c:	mov	x9, #0x4                   	// #4
   13980:	movk	x9, #0x8000, lsl #48
   13984:	cmp	x8, x9
   13988:	b.lt	139c0 <mpfr_exp2@@Base+0x238>  // b.tstop
   1398c:	ldr	x8, [sp, #16]
   13990:	sub	x9, x22, x23
   13994:	sub	x2, x9, #0x2
   13998:	ldr	x0, [sp, #40]
   1399c:	sub	x9, x8, #0x1
   139a0:	add	x8, x8, #0x3e
   139a4:	cmp	x9, #0x0
   139a8:	csel	x8, x8, x9, lt  // lt = tstop
   139ac:	asr	x8, x8, #6
   139b0:	add	x1, x8, #0x1
   139b4:	mov	x3, x24
   139b8:	bl	c370 <mpfr_round_p@plt>
   139bc:	cbnz	w0, 13a1c <mpfr_exp2@@Base+0x294>
   139c0:	mov	x8, #0x4                   	// #4
   139c4:	ldr	x23, [sp, #8]
   139c8:	movk	x8, #0x8000, lsl #48
   139cc:	sub	x8, x8, x22
   139d0:	sub	x8, x8, #0x105
   139d4:	cmp	x23, x8
   139d8:	b.gt	13a00 <mpfr_exp2@@Base+0x278>
   139dc:	add	x22, x23, x22
   139e0:	cmp	x22, #0x0
   139e4:	cinc	x8, x22, lt  // lt = tstop
   139e8:	asr	x8, x8, #1
   139ec:	add	x0, sp, #0x10
   139f0:	mov	x1, x22
   139f4:	str	x8, [sp, #8]
   139f8:	bl	bf20 <mpfr_set_prec@plt>
   139fc:	b	13930 <mpfr_exp2@@Base+0x1a8>
   13a00:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
   13a04:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   13a08:	mov	w1, #0x86                  	// #134
   13a0c:	add	x0, x0, #0xbb4
   13a10:	add	x2, x2, #0xde2
   13a14:	bl	cb20 <mpfr_assert_fail@plt>
   13a18:	b	139dc <mpfr_exp2@@Base+0x254>
   13a1c:	ldr	w3, [sp, #24]
   13a20:	add	x1, sp, #0x10
   13a24:	mov	x0, x19
   13a28:	mov	w2, w20
   13a2c:	bl	c690 <mpfr_set4@plt>
   13a30:	mov	w22, w0
   13a34:	add	x0, sp, #0x10
   13a38:	bl	c0b0 <mpfr_clear@plt>
   13a3c:	sub	x0, x29, #0x20
   13a40:	bl	c0b0 <mpfr_clear@plt>
   13a44:	cbnz	w20, 13a7c <mpfr_exp2@@Base+0x2f4>
   13a48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13a4c:	ldr	x1, [x0, #2576]
   13a50:	add	x0, x0, #0xa10
   13a54:	blr	x1
   13a58:	ldr	x8, [x26, x0]
   13a5c:	sub	x8, x8, #0x1
   13a60:	cmp	x21, x8
   13a64:	b.ne	13a7c <mpfr_exp2@@Base+0x2f4>  // b.any
   13a68:	ldr	x8, [x19, #16]
   13a6c:	cbnz	x8, 13a7c <mpfr_exp2@@Base+0x2f4>
   13a70:	mov	x0, x19
   13a74:	bl	bf50 <mpfr_powerof2_raw@plt>
   13a78:	cbnz	w0, 13ccc <mpfr_exp2@@Base+0x544>
   13a7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13a80:	ldr	x1, [x0, #2640]
   13a84:	add	x0, x0, #0xa50
   13a88:	blr	x1
   13a8c:	mov	x23, x0
   13a90:	str	wzr, [x26, x0]
   13a94:	mov	x0, x19
   13a98:	mov	x1, x19
   13a9c:	mov	x2, x21
   13aa0:	mov	w3, w20
   13aa4:	bl	bbe0 <mpfr_mul_2si@plt>
   13aa8:	ldr	w9, [x26, x23]
   13aac:	ldr	x10, [x19, #16]
   13ab0:	cmp	w0, #0x0
   13ab4:	csel	w8, w22, w0, eq  // eq = none
   13ab8:	orr	w9, w9, w25
   13abc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13ac0:	ldr	x1, [x0, #2640]
   13ac4:	add	x0, x0, #0xa50
   13ac8:	blr	x1
   13acc:	str	w9, [x26, x0]
   13ad0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13ad4:	ldr	x1, [x0, #2576]
   13ad8:	add	x0, x0, #0xa10
   13adc:	blr	x1
   13ae0:	str	x27, [x26, x0]
   13ae4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13ae8:	ldr	x1, [x0, #2608]
   13aec:	add	x0, x0, #0xa30
   13af0:	blr	x1
   13af4:	cmp	x10, x28
   13af8:	str	x28, [x26, x0]
   13afc:	b.gt	13c78 <mpfr_exp2@@Base+0x4f0>
   13b00:	cmp	x10, x27
   13b04:	b.lt	13c78 <mpfr_exp2@@Base+0x4f0>  // b.tstop
   13b08:	cbz	w8, 13b24 <mpfr_exp2@@Base+0x39c>
   13b0c:	orr	w9, w9, #0x8
   13b10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13b14:	ldr	x1, [x0, #2640]
   13b18:	add	x0, x0, #0xa50
   13b1c:	blr	x1
   13b20:	str	w9, [x26, x0]
   13b24:	ldp	x20, x19, [sp, #160]
   13b28:	ldp	x22, x21, [sp, #144]
   13b2c:	ldp	x24, x23, [sp, #128]
   13b30:	ldp	x26, x25, [sp, #112]
   13b34:	ldp	x28, x27, [sp, #96]
   13b38:	ldp	x29, x30, [sp, #80]
   13b3c:	mov	w0, w8
   13b40:	add	sp, sp, #0xb0
   13b44:	ret
   13b48:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   13b4c:	cmp	x8, x9
   13b50:	b.eq	13c8c <mpfr_exp2@@Base+0x504>  // b.none
   13b54:	mov	x9, #0x2                   	// #2
   13b58:	movk	x9, #0x8000, lsl #48
   13b5c:	cmp	x8, x9
   13b60:	b.ne	13cb0 <mpfr_exp2@@Base+0x528>  // b.any
   13b64:	sub	x8, x10, #0x2
   13b68:	str	x8, [x19, #16]
   13b6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13b70:	ldr	x1, [x0, #2640]
   13b74:	add	x0, x0, #0xa50
   13b78:	blr	x1
   13b7c:	mrs	x9, tpidr_el0
   13b80:	ldr	w10, [x9, x0]
   13b84:	mov	w8, wzr
   13b88:	orr	w10, w10, #0x4
   13b8c:	str	w10, [x9, x0]
   13b90:	b	13b24 <mpfr_exp2@@Base+0x39c>
   13b94:	cmp	w20, #0x0
   13b98:	csinc	w1, w20, wzr, ne  // ne = any
   13b9c:	mov	w2, #0x1                   	// #1
   13ba0:	mov	x0, x19
   13ba4:	bl	c3c0 <mpfr_underflow@plt>
   13ba8:	b	13cc4 <mpfr_exp2@@Base+0x53c>
   13bac:	mov	w2, #0x1                   	// #1
   13bb0:	mov	x0, x19
   13bb4:	mov	w1, w20
   13bb8:	bl	bf90 <mpfr_overflow@plt>
   13bbc:	b	13cc4 <mpfr_exp2@@Base+0x53c>
   13bc0:	mov	x8, xzr
   13bc4:	b	13910 <mpfr_exp2@@Base+0x188>
   13bc8:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x1b84>
   13bcc:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   13bd0:	add	x0, x0, #0xbb4
   13bd4:	add	x2, x2, #0xdd9
   13bd8:	mov	w1, #0x73                  	// #115
   13bdc:	bl	cb20 <mpfr_assert_fail@plt>
   13be0:	b	13904 <mpfr_exp2@@Base+0x17c>
   13be4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13be8:	ldr	x1, [x0, #2640]
   13bec:	add	x0, x0, #0xa50
   13bf0:	blr	x1
   13bf4:	str	wzr, [x26, x0]
   13bf8:	ldr	w8, [x22, #8]
   13bfc:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   13c00:	ldr	x1, [x1, #3944]
   13c04:	mov	x0, x19
   13c08:	cmp	w8, #0x0
   13c0c:	cset	w3, gt
   13c10:	mov	w4, w20
   13c14:	bl	c530 <mpfr_round_near_x@plt>
   13c18:	cbz	w0, 13888 <mpfr_exp2@@Base+0x100>
   13c1c:	mov	w8, w0
   13c20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13c24:	ldr	x1, [x0, #2640]
   13c28:	add	x0, x0, #0xa50
   13c2c:	blr	x1
   13c30:	ldr	w9, [x26, x0]
   13c34:	orr	w9, w9, w25
   13c38:	str	w9, [x26, x0]
   13c3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13c40:	ldr	x1, [x0, #2576]
   13c44:	add	x0, x0, #0xa10
   13c48:	blr	x1
   13c4c:	str	x27, [x26, x0]
   13c50:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13c54:	ldr	x1, [x0, #2608]
   13c58:	add	x0, x0, #0xa30
   13c5c:	blr	x1
   13c60:	str	x28, [x26, x0]
   13c64:	ldr	x10, [x19, #16]
   13c68:	cmp	x10, x28
   13c6c:	b.gt	13c78 <mpfr_exp2@@Base+0x4f0>
   13c70:	cmp	x10, x27
   13c74:	b.ge	13b0c <mpfr_exp2@@Base+0x384>  // b.tcont
   13c78:	mov	x0, x19
   13c7c:	mov	w1, w8
   13c80:	mov	w2, w20
   13c84:	bl	cb10 <mpfr_check_range@plt>
   13c88:	b	13cc4 <mpfr_exp2@@Base+0x53c>
   13c8c:	ldr	w10, [x22, #8]
   13c90:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   13c94:	mov	w12, #0x1                   	// #1
   13c98:	mov	w8, wzr
   13c9c:	cmp	w10, #0x0
   13ca0:	csel	x9, x9, x11, gt
   13ca4:	str	x9, [x19, #16]
   13ca8:	str	w12, [x19, #8]
   13cac:	b	13b24 <mpfr_exp2@@Base+0x39c>
   13cb0:	mov	w1, #0x1                   	// #1
   13cb4:	mov	x0, x19
   13cb8:	mov	x2, xzr
   13cbc:	mov	w3, w20
   13cc0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   13cc4:	mov	w8, w0
   13cc8:	b	13b24 <mpfr_exp2@@Base+0x39c>
   13ccc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13cd0:	ldr	x1, [x0, #2576]
   13cd4:	add	x0, x0, #0xa10
   13cd8:	blr	x1
   13cdc:	ldr	x10, [x26, x0]
   13ce0:	orr	w9, w25, #0x1
   13ce4:	mov	w8, #0x1                   	// #1
   13ce8:	str	x10, [x19, #16]
   13cec:	b	13abc <mpfr_exp2@@Base+0x334>

0000000000013cf0 <mpfr_exp_3@@Base>:
   13cf0:	sub	sp, sp, #0x160
   13cf4:	stp	x29, x30, [sp, #256]
   13cf8:	stp	x28, x27, [sp, #272]
   13cfc:	stp	x26, x25, [sp, #288]
   13d00:	stp	x24, x23, [sp, #304]
   13d04:	stp	x22, x21, [sp, #320]
   13d08:	stp	x20, x19, [sp, #336]
   13d0c:	add	x29, sp, #0x100
   13d10:	mov	w24, w2
   13d14:	mov	x20, x1
   13d18:	mov	x23, x0
   13d1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13d20:	ldr	x1, [x0, #2640]
   13d24:	add	x0, x0, #0xa50
   13d28:	blr	x1
   13d2c:	mrs	x11, tpidr_el0
   13d30:	ldr	w22, [x11, x0]
   13d34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13d38:	ldr	x1, [x0, #2576]
   13d3c:	add	x0, x0, #0xa10
   13d40:	blr	x1
   13d44:	ldr	x19, [x11, x0]
   13d48:	mov	x8, x0
   13d4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   13d50:	ldr	x1, [x0, #2608]
   13d54:	add	x0, x0, #0xa30
   13d58:	blr	x1
   13d5c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   13d60:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   13d64:	ldr	x21, [x11, x0]
   13d68:	str	x9, [x11, x8]
   13d6c:	str	x10, [x11, x0]
   13d70:	ldr	x1, [x20]
   13d74:	str	x11, [sp, #96]
   13d78:	str	x21, [sp, #16]
   13d7c:	cmp	x1, #0x1
   13d80:	b.eq	144f4 <mpfr_exp_3@@Base+0x804>  // b.none
   13d84:	b.le	144fc <mpfr_exp_3@@Base+0x80c>
   13d88:	sub	x8, x1, #0x1
   13d8c:	clz	x8, x8
   13d90:	mov	w9, #0x3a                  	// #58
   13d94:	sub	w8, w9, w8
   13d98:	bic	w8, w8, w8, asr #31
   13d9c:	str	x8, [sp, #88]
   13da0:	ldr	x21, [x20, #16]
   13da4:	sub	x0, x29, #0x48
   13da8:	bl	ca60 <mpfr_init2@plt>
   13dac:	ldr	w3, [x20, #8]
   13db0:	sub	x0, x29, #0x48
   13db4:	mov	w2, #0x3                   	// #3
   13db8:	mov	x1, x20
   13dbc:	bl	c690 <mpfr_set4@plt>
   13dc0:	cmp	x21, #0x1
   13dc4:	str	x19, [sp, #24]
   13dc8:	b.lt	13df0 <mpfr_exp_3@@Base+0x100>  // b.tstop
   13dcc:	sub	x0, x29, #0x48
   13dd0:	mov	x1, x20
   13dd4:	mov	x2, x21
   13dd8:	mov	w3, wzr
   13ddc:	bl	c8f0 <mpfr_div_2ui@plt>
   13de0:	ldur	x8, [x29, #-56]
   13de4:	mov	x25, x21
   13de8:	mov	x21, x8
   13dec:	b	13df4 <mpfr_exp_3@@Base+0x104>
   13df0:	mov	x25, xzr
   13df4:	ldr	x19, [x23]
   13df8:	ldr	x8, [sp, #88]
   13dfc:	str	x23, [sp, #48]
   13e00:	str	w22, [sp, #12]
   13e04:	str	w24, [sp, #36]
   13e08:	add	x8, x19, x8
   13e0c:	cmp	x8, #0x1
   13e10:	b.eq	1451c <mpfr_exp_3@@Base+0x82c>  // b.none
   13e14:	mov	x8, x19
   13e18:	b.le	14524 <mpfr_exp_3@@Base+0x834>
   13e1c:	ldr	x9, [sp, #88]
   13e20:	add	x8, x9, x8
   13e24:	sub	x8, x8, #0x1
   13e28:	clz	x8, x8
   13e2c:	mov	w9, #0x40                  	// #64
   13e30:	sub	x8, x9, x8
   13e34:	add	x8, x8, x19
   13e38:	add	x9, x25, #0x22
   13e3c:	add	x20, x9, x8
   13e40:	sub	x0, x29, #0x28
   13e44:	mov	x1, x20
   13e48:	str	x8, [sp, #112]
   13e4c:	str	x9, [sp, #56]
   13e50:	sub	x19, x29, #0x28
   13e54:	bl	ca60 <mpfr_init2@plt>
   13e58:	sub	x0, x29, #0x68
   13e5c:	mov	x1, x20
   13e60:	sub	x22, x29, #0x68
   13e64:	bl	ca60 <mpfr_init2@plt>
   13e68:	sub	x0, x29, #0x78
   13e6c:	bl	bfe0 <mpfr_mpz_init@plt>
   13e70:	mov	w8, #0x60                  	// #96
   13e74:	cmp	x25, #0x0
   13e78:	sub	x8, x8, x21
   13e7c:	stp	x8, x25, [sp, #72]
   13e80:	csel	x8, x19, x22, gt
   13e84:	str	x8, [sp, #64]
   13e88:	ldr	w8, [sp, #36]
   13e8c:	sub	x28, x25, #0x1
   13e90:	cmp	w8, #0x0
   13e94:	cset	w8, eq  // eq = none
   13e98:	str	x8, [sp, #40]
   13e9c:	mov	w8, #0x40                  	// #64
   13ea0:	str	x8, [sp, #104]
   13ea4:	subs	x19, x20, #0x1
   13ea8:	b.eq	14364 <mpfr_exp_3@@Base+0x674>  // b.none
   13eac:	b.le	1436c <mpfr_exp_3@@Base+0x67c>
   13eb0:	clz	x8, x19
   13eb4:	mov	w9, #0x40                  	// #64
   13eb8:	sub	w24, w9, w8
   13ebc:	sub	w22, w24, #0x4
   13ec0:	add	w8, w22, w22, lsl #1
   13ec4:	sbfiz	x0, x8, #4, #32
   13ec8:	sub	w26, w24, #0x6
   13ecc:	sxtw	x25, w8
   13ed0:	str	x0, [sp, #128]
   13ed4:	bl	ccd0 <mpfr_allocate_func@plt>
   13ed8:	subs	w19, w24, #0x5
   13edc:	mov	x27, x0
   13ee0:	b.lt	13f04 <mpfr_exp_3@@Base+0x214>  // b.tstop
   13ee4:	mov	x23, xzr
   13ee8:	mov	x20, x27
   13eec:	mov	x0, x20
   13ef0:	bl	bfe0 <mpfr_mpz_init@plt>
   13ef4:	add	x23, x23, #0x1
   13ef8:	cmp	x23, x25
   13efc:	add	x20, x20, #0x10
   13f00:	b.lt	13eec <mpfr_exp_3@@Base+0x1fc>  // b.tstop
   13f04:	lsl	w8, w22, #1
   13f08:	sbfiz	x0, x8, #3, #32
   13f0c:	str	x0, [sp, #120]
   13f10:	bl	ccd0 <mpfr_allocate_func@plt>
   13f14:	mov	x20, x0
   13f18:	sub	x0, x29, #0x78
   13f1c:	sub	x1, x29, #0x48
   13f20:	mov	w2, wzr
   13f24:	bl	c9b0 <mpfr_extract@plt>
   13f28:	ldr	x2, [sp, #72]
   13f2c:	sub	x0, x29, #0x68
   13f30:	sub	x1, x29, #0x78
   13f34:	mov	w3, w19
   13f38:	mov	x4, x27
   13f3c:	mov	x5, x20
   13f40:	bl	145c8 <mpfr_exp_3@@Base+0x8d8>
   13f44:	sub	x0, x29, #0x68
   13f48:	sub	x1, x29, #0x68
   13f4c:	mov	w2, #0x3                   	// #3
   13f50:	bl	c3f0 <mpfr_sqr@plt>
   13f54:	sub	x0, x29, #0x68
   13f58:	sub	x1, x29, #0x68
   13f5c:	mov	w2, #0x3                   	// #3
   13f60:	bl	c3f0 <mpfr_sqr@plt>
   13f64:	sub	x0, x29, #0x68
   13f68:	sub	x1, x29, #0x68
   13f6c:	mov	w2, #0x3                   	// #3
   13f70:	bl	c3f0 <mpfr_sqr@plt>
   13f74:	sub	x0, x29, #0x68
   13f78:	sub	x1, x29, #0x68
   13f7c:	mov	w2, #0x3                   	// #3
   13f80:	bl	c3f0 <mpfr_sqr@plt>
   13f84:	sub	x0, x29, #0x68
   13f88:	sub	x1, x29, #0x68
   13f8c:	mov	w2, #0x3                   	// #3
   13f90:	bl	c3f0 <mpfr_sqr@plt>
   13f94:	sub	x0, x29, #0x68
   13f98:	sub	x1, x29, #0x68
   13f9c:	mov	w2, #0x3                   	// #3
   13fa0:	bl	c3f0 <mpfr_sqr@plt>
   13fa4:	sub	x0, x29, #0x68
   13fa8:	sub	x1, x29, #0x68
   13fac:	mov	w2, #0x3                   	// #3
   13fb0:	bl	c3f0 <mpfr_sqr@plt>
   13fb4:	sub	x0, x29, #0x68
   13fb8:	sub	x1, x29, #0x68
   13fbc:	mov	w2, #0x3                   	// #3
   13fc0:	bl	c3f0 <mpfr_sqr@plt>
   13fc4:	sub	x0, x29, #0x68
   13fc8:	sub	x1, x29, #0x68
   13fcc:	mov	w2, #0x3                   	// #3
   13fd0:	bl	c3f0 <mpfr_sqr@plt>
   13fd4:	sub	x0, x29, #0x68
   13fd8:	sub	x1, x29, #0x68
   13fdc:	mov	w2, #0x3                   	// #3
   13fe0:	bl	c3f0 <mpfr_sqr@plt>
   13fe4:	sub	x0, x29, #0x68
   13fe8:	sub	x1, x29, #0x68
   13fec:	mov	w2, #0x3                   	// #3
   13ff0:	bl	c3f0 <mpfr_sqr@plt>
   13ff4:	sub	x0, x29, #0x68
   13ff8:	sub	x1, x29, #0x68
   13ffc:	mov	w2, #0x3                   	// #3
   14000:	bl	c3f0 <mpfr_sqr@plt>
   14004:	sub	x0, x29, #0x68
   14008:	sub	x1, x29, #0x68
   1400c:	mov	w2, #0x3                   	// #3
   14010:	bl	c3f0 <mpfr_sqr@plt>
   14014:	sub	x0, x29, #0x68
   14018:	sub	x1, x29, #0x68
   1401c:	mov	w2, #0x3                   	// #3
   14020:	bl	c3f0 <mpfr_sqr@plt>
   14024:	sub	x0, x29, #0x68
   14028:	sub	x1, x29, #0x68
   1402c:	mov	w2, #0x3                   	// #3
   14030:	bl	c3f0 <mpfr_sqr@plt>
   14034:	sub	x0, x29, #0x68
   14038:	sub	x1, x29, #0x68
   1403c:	mov	w2, #0x3                   	// #3
   14040:	bl	c3f0 <mpfr_sqr@plt>
   14044:	sub	x0, x29, #0x68
   14048:	sub	x1, x29, #0x68
   1404c:	mov	w2, #0x3                   	// #3
   14050:	bl	c3f0 <mpfr_sqr@plt>
   14054:	sub	x0, x29, #0x68
   14058:	sub	x1, x29, #0x68
   1405c:	mov	w2, #0x3                   	// #3
   14060:	bl	c3f0 <mpfr_sqr@plt>
   14064:	sub	x0, x29, #0x68
   14068:	sub	x1, x29, #0x68
   1406c:	mov	w2, #0x3                   	// #3
   14070:	bl	c3f0 <mpfr_sqr@plt>
   14074:	sub	x0, x29, #0x68
   14078:	sub	x1, x29, #0x68
   1407c:	mov	w2, #0x3                   	// #3
   14080:	bl	c3f0 <mpfr_sqr@plt>
   14084:	sub	x0, x29, #0x68
   14088:	sub	x1, x29, #0x68
   1408c:	mov	w2, #0x3                   	// #3
   14090:	bl	c3f0 <mpfr_sqr@plt>
   14094:	sub	x0, x29, #0x68
   14098:	sub	x1, x29, #0x68
   1409c:	mov	w2, #0x3                   	// #3
   140a0:	bl	c3f0 <mpfr_sqr@plt>
   140a4:	sub	x0, x29, #0x68
   140a8:	sub	x1, x29, #0x68
   140ac:	mov	w2, #0x3                   	// #3
   140b0:	bl	c3f0 <mpfr_sqr@plt>
   140b4:	sub	x0, x29, #0x68
   140b8:	sub	x1, x29, #0x68
   140bc:	mov	w2, #0x3                   	// #3
   140c0:	bl	c3f0 <mpfr_sqr@plt>
   140c4:	sub	x0, x29, #0x68
   140c8:	sub	x1, x29, #0x68
   140cc:	mov	w2, #0x3                   	// #3
   140d0:	bl	c3f0 <mpfr_sqr@plt>
   140d4:	sub	x0, x29, #0x68
   140d8:	sub	x1, x29, #0x68
   140dc:	mov	w2, #0x3                   	// #3
   140e0:	bl	c3f0 <mpfr_sqr@plt>
   140e4:	sub	x0, x29, #0x68
   140e8:	sub	x1, x29, #0x68
   140ec:	mov	w2, #0x3                   	// #3
   140f0:	bl	c3f0 <mpfr_sqr@plt>
   140f4:	sub	x0, x29, #0x68
   140f8:	sub	x1, x29, #0x68
   140fc:	mov	w2, #0x3                   	// #3
   14100:	bl	c3f0 <mpfr_sqr@plt>
   14104:	sub	x0, x29, #0x68
   14108:	sub	x1, x29, #0x68
   1410c:	mov	w2, #0x3                   	// #3
   14110:	bl	c3f0 <mpfr_sqr@plt>
   14114:	sub	x0, x29, #0x68
   14118:	sub	x1, x29, #0x68
   1411c:	mov	w2, #0x3                   	// #3
   14120:	bl	c3f0 <mpfr_sqr@plt>
   14124:	sub	x0, x29, #0x68
   14128:	sub	x1, x29, #0x68
   1412c:	mov	w2, #0x3                   	// #3
   14130:	bl	c3f0 <mpfr_sqr@plt>
   14134:	sub	x0, x29, #0x68
   14138:	sub	x1, x29, #0x68
   1413c:	mov	w2, #0x3                   	// #3
   14140:	bl	c3f0 <mpfr_sqr@plt>
   14144:	ldr	x8, [sp, #88]
   14148:	cmp	w26, w8
   1414c:	csel	w19, w8, w26, gt
   14150:	cmp	w19, #0x1
   14154:	b.lt	141e4 <mpfr_exp_3@@Base+0x4f4>  // b.tstop
   14158:	mov	w23, wzr
   1415c:	mov	w22, #0x80                  	// #128
   14160:	add	w2, w23, #0x1
   14164:	sub	x0, x29, #0x78
   14168:	sub	x1, x29, #0x48
   1416c:	bl	c9b0 <mpfr_extract@plt>
   14170:	ldur	w8, [x29, #-116]
   14174:	cbz	w8, 141a8 <mpfr_exp_3@@Base+0x4b8>
   14178:	sub	x2, x22, x21
   1417c:	sub	x0, x29, #0x28
   14180:	sub	x1, x29, #0x78
   14184:	mov	w3, w26
   14188:	mov	x4, x27
   1418c:	mov	x5, x20
   14190:	bl	145c8 <mpfr_exp_3@@Base+0x8d8>
   14194:	sub	x0, x29, #0x68
   14198:	sub	x1, x29, #0x68
   1419c:	sub	x2, x29, #0x28
   141a0:	mov	w3, #0x3                   	// #3
   141a4:	bl	bda0 <mpfr_mul@plt>
   141a8:	lsr	x8, x22, #62
   141ac:	cbnz	x8, 141c8 <mpfr_exp_3@@Base+0x4d8>
   141b0:	add	w23, w23, #0x1
   141b4:	lsl	x22, x22, #1
   141b8:	cmp	w23, w19
   141bc:	sub	w26, w26, #0x1
   141c0:	b.lt	14160 <mpfr_exp_3@@Base+0x470>  // b.tstop
   141c4:	b	141e4 <mpfr_exp_3@@Base+0x4f4>
   141c8:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   141cc:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   141d0:	mov	w1, #0xf5                  	// #245
   141d4:	add	x0, x0, #0xe26
   141d8:	add	x2, x2, #0xe71
   141dc:	bl	cb20 <mpfr_assert_fail@plt>
   141e0:	b	141b0 <mpfr_exp_3@@Base+0x4c0>
   141e4:	cmp	w24, #0x5
   141e8:	b.lt	1420c <mpfr_exp_3@@Base+0x51c>  // b.tstop
   141ec:	mov	x22, xzr
   141f0:	mov	x19, x27
   141f4:	mov	x0, x19
   141f8:	bl	c1b0 <mpfr_mpz_clear@plt>
   141fc:	add	x22, x22, #0x1
   14200:	cmp	x22, x25
   14204:	add	x19, x19, #0x10
   14208:	b.lt	141f4 <mpfr_exp_3@@Base+0x504>  // b.tstop
   1420c:	ldr	x1, [sp, #128]
   14210:	mov	x0, x27
   14214:	bl	cc00 <mpfr_free_func@plt>
   14218:	ldr	x1, [sp, #120]
   1421c:	mov	x0, x20
   14220:	bl	cc00 <mpfr_free_func@plt>
   14224:	ldr	x8, [sp, #80]
   14228:	cmp	x8, #0x1
   1422c:	b.lt	142b8 <mpfr_exp_3@@Base+0x5c8>  // b.tstop
   14230:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14234:	ldr	x1, [x0, #2640]
   14238:	add	x0, x0, #0xa50
   1423c:	blr	x1
   14240:	cmp	x8, #0x2
   14244:	ldr	x8, [sp, #96]
   14248:	ldr	x20, [sp, #112]
   1424c:	ldr	x24, [sp, #64]
   14250:	mov	x22, #0x4                   	// #4
   14254:	movk	x22, #0x8000, lsl #48
   14258:	str	wzr, [x8, x0]
   1425c:	b.lt	14280 <mpfr_exp_3@@Base+0x590>  // b.tstop
   14260:	mov	x19, xzr
   14264:	sub	x0, x29, #0x68
   14268:	sub	x1, x29, #0x68
   1426c:	mov	w2, #0x3                   	// #3
   14270:	bl	c3f0 <mpfr_sqr@plt>
   14274:	add	x19, x19, #0x1
   14278:	cmp	x28, x19
   1427c:	b.gt	14264 <mpfr_exp_3@@Base+0x574>
   14280:	sub	x0, x29, #0x28
   14284:	sub	x1, x29, #0x68
   14288:	mov	w2, #0x3                   	// #3
   1428c:	bl	c3f0 <mpfr_sqr@plt>
   14290:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14294:	ldr	x1, [x0, #2640]
   14298:	add	x0, x0, #0xa50
   1429c:	blr	x1
   142a0:	ldr	x8, [sp, #96]
   142a4:	ldr	w8, [x8, x0]
   142a8:	tbnz	w8, #1, 144d0 <mpfr_exp_3@@Base+0x7e0>
   142ac:	tbnz	w8, #0, 143a4 <mpfr_exp_3@@Base+0x6b4>
   142b0:	mov	w19, wzr
   142b4:	b	142cc <mpfr_exp_3@@Base+0x5dc>
   142b8:	ldr	x20, [sp, #112]
   142bc:	ldr	x24, [sp, #64]
   142c0:	mov	x22, #0x4                   	// #4
   142c4:	mov	w19, wzr
   142c8:	movk	x22, #0x8000, lsl #48
   142cc:	ldr	x8, [x24, #16]
   142d0:	cmp	x8, x22
   142d4:	b.lt	14314 <mpfr_exp_3@@Base+0x624>  // b.tstop
   142d8:	ldr	x8, [x24]
   142dc:	ldr	x9, [sp, #48]
   142e0:	ldr	x0, [x24, #24]
   142e4:	mov	x2, x20
   142e8:	sub	x10, x8, #0x1
   142ec:	add	x8, x8, #0x3e
   142f0:	cmp	x10, #0x0
   142f4:	csel	x8, x8, x10, lt  // lt = tstop
   142f8:	asr	x8, x8, #6
   142fc:	ldr	x9, [x9]
   14300:	add	x1, x8, #0x1
   14304:	ldr	x8, [sp, #40]
   14308:	add	x3, x9, x8
   1430c:	bl	c370 <mpfr_round_p@plt>
   14310:	cbnz	w0, 14404 <mpfr_exp_3@@Base+0x714>
   14314:	ldr	x19, [sp, #104]
   14318:	sub	x8, x22, x20
   1431c:	sub	x8, x8, #0x105
   14320:	cmp	x19, x8
   14324:	b.gt	14388 <mpfr_exp_3@@Base+0x698>
   14328:	add	x20, x20, x19
   1432c:	cmp	x20, #0x0
   14330:	cinc	x8, x20, lt  // lt = tstop
   14334:	asr	x8, x8, #1
   14338:	stp	x8, x20, [sp, #104]
   1433c:	ldr	x8, [sp, #56]
   14340:	sub	x0, x29, #0x28
   14344:	add	x20, x8, x20
   14348:	mov	x1, x20
   1434c:	bl	bf20 <mpfr_set_prec@plt>
   14350:	sub	x0, x29, #0x68
   14354:	mov	x1, x20
   14358:	bl	bf20 <mpfr_set_prec@plt>
   1435c:	subs	x19, x20, #0x1
   14360:	b.ne	13eac <mpfr_exp_3@@Base+0x1bc>  // b.any
   14364:	mov	w24, wzr
   14368:	b	13ebc <mpfr_exp_3@@Base+0x1cc>
   1436c:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14370:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14374:	mov	w1, #0xd8                  	// #216
   14378:	add	x0, x0, #0xe26
   1437c:	add	x2, x2, #0xe66
   14380:	bl	cb20 <mpfr_assert_fail@plt>
   14384:	b	13eb0 <mpfr_exp_3@@Base+0x1c0>
   14388:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   1438c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14390:	mov	w1, #0x146                 	// #326
   14394:	add	x0, x0, #0xe26
   14398:	add	x2, x2, #0xe95
   1439c:	bl	cb20 <mpfr_assert_fail@plt>
   143a0:	b	14328 <mpfr_exp_3@@Base+0x638>
   143a4:	sub	x0, x29, #0x68
   143a8:	sub	x1, x29, #0x68
   143ac:	mov	w2, #0x1                   	// #1
   143b0:	mov	w3, #0x3                   	// #3
   143b4:	mov	w19, #0x1                   	// #1
   143b8:	bl	c2c0 <mpfr_mul_2ui@plt>
   143bc:	sub	x0, x29, #0x28
   143c0:	sub	x1, x29, #0x68
   143c4:	mov	w2, #0x3                   	// #3
   143c8:	bl	c3f0 <mpfr_sqr@plt>
   143cc:	ldur	x8, [x29, #-24]
   143d0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   143d4:	cmp	x8, x9
   143d8:	b.ne	142cc <mpfr_exp_3@@Base+0x5dc>  // b.any
   143dc:	ldr	w8, [sp, #36]
   143e0:	ldr	x0, [sp, #48]
   143e4:	mov	w2, #0x1                   	// #1
   143e8:	cmp	w8, #0x0
   143ec:	csinc	w1, w8, wzr, ne  // ne = any
   143f0:	bl	c3c0 <mpfr_underflow@plt>
   143f4:	ldr	w22, [sp, #12]
   143f8:	mov	w20, w0
   143fc:	orr	w22, w22, #0x1
   14400:	b	144ec <mpfr_exp_3@@Base+0x7fc>
   14404:	ldr	w3, [x24, #8]
   14408:	ldr	x23, [sp, #48]
   1440c:	mov	x1, x24
   14410:	ldr	w24, [sp, #36]
   14414:	mov	x0, x23
   14418:	mov	w2, w24
   1441c:	bl	c690 <mpfr_set4@plt>
   14420:	mov	w20, w0
   14424:	cbz	w19, 14444 <mpfr_exp_3@@Base+0x754>
   14428:	ldr	x19, [x23, #16]
   1442c:	ldr	x21, [sp, #16]
   14430:	cmp	x19, x22
   14434:	ldr	w22, [sp, #12]
   14438:	b.ge	14544 <mpfr_exp_3@@Base+0x854>  // b.tcont
   1443c:	ldr	x19, [sp, #24]
   14440:	b	1444c <mpfr_exp_3@@Base+0x75c>
   14444:	ldp	x21, x19, [sp, #16]
   14448:	ldr	w22, [sp, #12]
   1444c:	sub	x0, x29, #0x78
   14450:	bl	c1b0 <mpfr_mpz_clear@plt>
   14454:	sub	x0, x29, #0x68
   14458:	bl	c0b0 <mpfr_clear@plt>
   1445c:	sub	x0, x29, #0x28
   14460:	bl	c0b0 <mpfr_clear@plt>
   14464:	sub	x0, x29, #0x48
   14468:	bl	c0b0 <mpfr_clear@plt>
   1446c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14470:	ldr	x1, [x0, #2640]
   14474:	add	x0, x0, #0xa50
   14478:	blr	x1
   1447c:	ldr	x8, [sp, #96]
   14480:	str	w22, [x8, x0]
   14484:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14488:	ldr	x1, [x0, #2576]
   1448c:	add	x0, x0, #0xa10
   14490:	blr	x1
   14494:	str	x19, [x8, x0]
   14498:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1449c:	ldr	x1, [x0, #2608]
   144a0:	add	x0, x0, #0xa30
   144a4:	blr	x1
   144a8:	str	x21, [x8, x0]
   144ac:	mov	w0, w20
   144b0:	ldp	x20, x19, [sp, #336]
   144b4:	ldp	x22, x21, [sp, #320]
   144b8:	ldp	x24, x23, [sp, #304]
   144bc:	ldp	x26, x25, [sp, #288]
   144c0:	ldp	x28, x27, [sp, #272]
   144c4:	ldp	x29, x30, [sp, #256]
   144c8:	add	sp, sp, #0x160
   144cc:	ret
   144d0:	ldr	x0, [sp, #48]
   144d4:	ldr	w1, [sp, #36]
   144d8:	mov	w2, #0x1                   	// #1
   144dc:	bl	bf90 <mpfr_overflow@plt>
   144e0:	ldr	w22, [sp, #12]
   144e4:	mov	w20, w0
   144e8:	orr	w22, w22, #0x2
   144ec:	ldp	x21, x19, [sp, #16]
   144f0:	b	1444c <mpfr_exp_3@@Base+0x75c>
   144f4:	str	xzr, [sp, #88]
   144f8:	b	13da0 <mpfr_exp_3@@Base+0xb0>
   144fc:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14500:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14504:	add	x0, x0, #0xe26
   14508:	add	x2, x2, #0xe2d
   1450c:	mov	w1, #0xb7                  	// #183
   14510:	bl	cb20 <mpfr_assert_fail@plt>
   14514:	ldr	x1, [x20]
   14518:	b	13d88 <mpfr_exp_3@@Base+0x98>
   1451c:	mov	x8, xzr
   14520:	b	13e34 <mpfr_exp_3@@Base+0x144>
   14524:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14528:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   1452c:	add	x0, x0, #0xe26
   14530:	add	x2, x2, #0xe45
   14534:	mov	w1, #0xcb                  	// #203
   14538:	bl	cb20 <mpfr_assert_fail@plt>
   1453c:	ldr	x8, [x23]
   14540:	b	13e1c <mpfr_exp_3@@Base+0x12c>
   14544:	mov	x2, #0xfffffffffffffffe    	// #-2
   14548:	mov	x0, x23
   1454c:	mov	x1, x23
   14550:	mov	w3, w24
   14554:	bl	bbe0 <mpfr_mul_2si@plt>
   14558:	cbz	w0, 1443c <mpfr_exp_3@@Base+0x74c>
   1455c:	mov	w8, w0
   14560:	cbnz	w24, 145b8 <mpfr_exp_3@@Base+0x8c8>
   14564:	tbz	w20, #31, 145b8 <mpfr_exp_3@@Base+0x8c8>
   14568:	ldr	x9, [x23, #16]
   1456c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   14570:	cmp	x9, x10
   14574:	b.ne	145b8 <mpfr_exp_3@@Base+0x8c8>  // b.any
   14578:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1457c:	ldr	x1, [x0, #2576]
   14580:	add	x0, x0, #0xa10
   14584:	blr	x1
   14588:	ldr	x9, [sp, #96]
   1458c:	ldr	x9, [x9, x0]
   14590:	add	x9, x9, #0x1
   14594:	cmp	x19, x9
   14598:	ldr	x19, [sp, #24]
   1459c:	b.ne	145bc <mpfr_exp_3@@Base+0x8cc>  // b.any
   145a0:	ldr	x0, [sp, #48]
   145a4:	mov	w1, #0x2                   	// #2
   145a8:	mov	w2, #0x1                   	// #1
   145ac:	bl	c3c0 <mpfr_underflow@plt>
   145b0:	mov	w8, w0
   145b4:	b	145bc <mpfr_exp_3@@Base+0x8cc>
   145b8:	ldr	x19, [sp, #24]
   145bc:	orr	w22, w22, #0x1
   145c0:	mov	w20, w8
   145c4:	b	1444c <mpfr_exp_3@@Base+0x75c>
   145c8:	sub	sp, sp, #0xf0
   145cc:	stp	x29, x30, [sp, #144]
   145d0:	stp	x28, x27, [sp, #160]
   145d4:	stp	x26, x25, [sp, #176]
   145d8:	stp	x24, x23, [sp, #192]
   145dc:	stp	x22, x21, [sp, #208]
   145e0:	stp	x20, x19, [sp, #224]
   145e4:	ldr	x22, [x0]
   145e8:	mov	x23, x5
   145ec:	mov	x20, x4
   145f0:	mov	w24, w3
   145f4:	mov	x25, x2
   145f8:	cmp	w3, #0x3f
   145fc:	mov	x27, x1
   14600:	add	x29, sp, #0x90
   14604:	str	x0, [sp, #16]
   14608:	b.cs	14a7c <mpfr_exp_3@@Base+0xd8c>  // b.hs, b.nlast
   1460c:	sxtw	x8, w24
   14610:	add	x8, x8, #0x1
   14614:	lsl	w19, w8, #1
   14618:	mov	x0, x27
   1461c:	mov	x1, xzr
   14620:	add	x21, x20, x8, lsl #4
   14624:	stur	x20, [x29, #-8]
   14628:	add	x20, x20, w19, sxtw #4
   1462c:	str	x8, [sp, #24]
   14630:	add	x28, x23, x8, lsl #3
   14634:	bl	baf0 <__gmpz_scan1@plt>
   14638:	mov	x26, x0
   1463c:	tbnz	x0, #63, 14a98 <mpfr_exp_3@@Base+0xda8>
   14640:	mov	x0, x27
   14644:	mov	x1, x27
   14648:	mov	x2, x26
   1464c:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   14650:	mov	x0, x20
   14654:	mov	x1, x27
   14658:	str	x20, [sp, #8]
   1465c:	bl	bff0 <__gmpz_set@plt>
   14660:	cmp	w24, #0x2
   14664:	mov	w8, w24
   14668:	stur	x8, [x29, #-40]
   1466c:	b.lt	14698 <mpfr_exp_3@@Base+0x9a8>  // b.tstop
   14670:	ldur	x8, [x29, #-40]
   14674:	ldr	x1, [sp, #8]
   14678:	sub	x20, x8, #0x1
   1467c:	add	x27, x1, #0x10
   14680:	mov	x0, x27
   14684:	mov	x2, x1
   14688:	bl	c030 <__gmpz_mul@plt>
   1468c:	subs	x20, x20, #0x1
   14690:	mov	x1, x27
   14694:	b.ne	1467c <mpfr_exp_3@@Base+0x98c>  // b.any
   14698:	sub	x8, x25, x26
   1469c:	ldur	x25, [x29, #-8]
   146a0:	mov	w1, #0x1                   	// #1
   146a4:	stur	x8, [x29, #-24]
   146a8:	mov	x0, x25
   146ac:	bl	bd00 <__gmpz_set_ui@plt>
   146b0:	mov	w1, #0x1                   	// #1
   146b4:	mov	x0, x21
   146b8:	bl	bd00 <__gmpz_set_ui@plt>
   146bc:	mov	x26, xzr
   146c0:	cmp	x22, #0x1
   146c4:	str	xzr, [x23]
   146c8:	str	xzr, [x28]
   146cc:	b.lt	14974 <mpfr_exp_3@@Base+0xc84>  // b.tstop
   146d0:	cbz	w24, 14974 <mpfr_exp_3@@Base+0xc84>
   146d4:	ldr	x9, [sp, #24]
   146d8:	sxtw	x8, w19
   146dc:	mov	x24, xzr
   146e0:	mov	w27, wzr
   146e4:	lsl	x10, x9, #4
   146e8:	stp	x10, x22, [sp, #56]
   146ec:	sub	x10, x23, #0x8
   146f0:	stp	x10, x28, [sp, #40]
   146f4:	mov	w10, #0x1                   	// #1
   146f8:	lsl	x8, x8, #4
   146fc:	lsl	x20, x9, #3
   14700:	str	x8, [sp, #32]
   14704:	str	x21, [sp, #72]
   14708:	stur	x20, [x29, #-32]
   1470c:	add	w27, w27, #0x1
   14710:	sbfiz	x19, x27, #4, #32
   14714:	add	x23, x10, #0x1
   14718:	add	x0, x25, x19
   1471c:	mov	x1, x23
   14720:	mov	x26, x10
   14724:	str	xzr, [x28, w27, sxtw #3]
   14728:	bl	bd00 <__gmpz_set_ui@plt>
   1472c:	add	x0, x21, x19
   14730:	mov	x1, x23
   14734:	bl	bd00 <__gmpz_set_ui@plt>
   14738:	mov	x10, x23
   1473c:	tbnz	w10, #0, 14870 <mpfr_exp_3@@Base+0xb80>
   14740:	ldr	x9, [sp, #56]
   14744:	sxtw	x8, w27
   14748:	lsl	x23, x8, #4
   1474c:	stp	x27, x26, [x29, #-56]
   14750:	add	x22, x9, x23
   14754:	ldp	x19, x9, [sp, #32]
   14758:	mov	x21, xzr
   1475c:	mov	x26, x10
   14760:	stur	x10, [x29, #-64]
   14764:	add	x20, x9, x8, lsl #3
   14768:	add	x27, x25, x22
   1476c:	add	x24, x25, x19
   14770:	mov	x0, x27
   14774:	mov	x1, x27
   14778:	mov	x2, x24
   1477c:	bl	c030 <__gmpz_mul@plt>
   14780:	ldur	x8, [x29, #-8]
   14784:	sub	x28, x27, #0x10
   14788:	mov	x0, x28
   1478c:	mov	x1, x28
   14790:	add	x25, x8, x23
   14794:	mov	x2, x25
   14798:	bl	c030 <__gmpz_mul@plt>
   1479c:	ldur	x8, [x29, #-24]
   147a0:	mov	x0, x28
   147a4:	mov	x1, x28
   147a8:	lsl	x2, x8, x21
   147ac:	stur	x2, [x29, #-16]
   147b0:	bl	c230 <__gmpz_mul_2exp@plt>
   147b4:	mov	x0, x28
   147b8:	mov	x1, x28
   147bc:	mov	x2, x27
   147c0:	bl	c9a0 <__gmpz_add@plt>
   147c4:	sub	x0, x25, #0x10
   147c8:	mov	x1, x0
   147cc:	mov	x2, x25
   147d0:	bl	c030 <__gmpz_mul@plt>
   147d4:	ldur	x10, [x29, #-32]
   147d8:	add	x21, x21, #0x1
   147dc:	mov	w9, w26
   147e0:	lsr	x26, x26, #1
   147e4:	ldr	x8, [x20, x10]
   147e8:	sub	x22, x22, #0x10
   147ec:	sub	x23, x23, #0x10
   147f0:	add	x19, x19, #0x10
   147f4:	add	x8, x8, #0x1
   147f8:	str	x8, [x20, x10]
   147fc:	ldr	w8, [x25, #4]
   14800:	ldr	x10, [x25, #8]
   14804:	ldr	w11, [x24, #4]
   14808:	ldr	x12, [x24, #8]
   1480c:	cmp	w8, #0x0
   14810:	cneg	w8, w8, mi  // mi = first
   14814:	add	x10, x10, w8, uxtw #3
   14818:	ldur	x10, [x10, #-8]
   1481c:	cmp	w11, #0x0
   14820:	ldp	x13, x25, [x29, #-16]
   14824:	cneg	w11, w11, mi  // mi = first
   14828:	add	x12, x12, w11, uxtw #3
   1482c:	ldur	x12, [x12, #-8]
   14830:	clz	x10, x10
   14834:	mvn	x10, x10
   14838:	add	x10, x13, x10
   1483c:	ldr	x13, [x20]
   14840:	clz	x12, x12
   14844:	add	x8, x10, x8, lsl #6
   14848:	add	x8, x8, x12
   1484c:	add	x8, x8, x13
   14850:	sub	x24, x8, x11, lsl #6
   14854:	stp	x24, x24, [x20], #-8
   14858:	tbz	w9, #1, 14768 <mpfr_exp_3@@Base+0xa78>
   1485c:	ldp	x27, x26, [x29, #-56]
   14860:	ldr	x28, [sp, #48]
   14864:	ldur	x10, [x29, #-64]
   14868:	sub	w27, w27, w21
   1486c:	ldp	x22, x21, [sp, #64]
   14870:	cmp	x24, x22
   14874:	b.ge	14884 <mpfr_exp_3@@Base+0xb94>  // b.tcont
   14878:	ldur	x8, [x29, #-40]
   1487c:	lsr	x8, x10, x8
   14880:	cbz	x8, 1470c <mpfr_exp_3@@Base+0xa1c>
   14884:	cmp	w27, #0x1
   14888:	b.lt	14974 <mpfr_exp_3@@Base+0xc84>  // b.tstop
   1488c:	sbfiz	x8, x27, #4, #32
   14890:	sub	x10, x8, #0x10
   14894:	stur	x10, [x29, #-32]
   14898:	ldr	x10, [sp, #56]
   1489c:	mov	w20, w27
   148a0:	sbfiz	x9, x27, #3, #32
   148a4:	ldur	x27, [x29, #-24]
   148a8:	ldr	x21, [sp, #8]
   148ac:	lsl	x11, x20, #4
   148b0:	add	x8, x10, x8
   148b4:	stur	x26, [x29, #-48]
   148b8:	mov	x19, xzr
   148bc:	sub	x26, x9, #0x8
   148c0:	add	x9, x10, x11
   148c4:	sub	x8, x8, #0x10
   148c8:	mov	x22, x25
   148cc:	stur	x11, [x29, #-16]
   148d0:	stur	x9, [x29, #-40]
   148d4:	stur	x8, [x29, #-56]
   148d8:	ldur	x9, [x29, #-40]
   148dc:	ldr	x8, [x28, x26]
   148e0:	add	x23, x22, x9
   148e4:	add	x2, x21, x8, lsl #4
   148e8:	mov	x0, x23
   148ec:	mov	x1, x23
   148f0:	bl	c030 <__gmpz_mul@plt>
   148f4:	ldur	x8, [x29, #-56]
   148f8:	add	x24, x22, x8
   148fc:	ldur	x8, [x29, #-16]
   14900:	mov	x0, x24
   14904:	mov	x1, x24
   14908:	add	x25, x22, x8
   1490c:	mov	x2, x25
   14910:	bl	c030 <__gmpz_mul@plt>
   14914:	ldr	x8, [x28, x20, lsl #3]
   14918:	mov	w9, #0x1                   	// #1
   1491c:	mov	x0, x24
   14920:	mov	x1, x24
   14924:	lsl	x8, x9, x8
   14928:	add	x19, x8, x19
   1492c:	mul	x2, x19, x27
   14930:	bl	c230 <__gmpz_mul_2exp@plt>
   14934:	mov	x0, x24
   14938:	mov	x1, x24
   1493c:	mov	x2, x23
   14940:	bl	c9a0 <__gmpz_add@plt>
   14944:	ldur	x8, [x29, #-32]
   14948:	mov	x2, x25
   1494c:	add	x0, x22, x8
   14950:	mov	x1, x0
   14954:	bl	c030 <__gmpz_mul@plt>
   14958:	sub	x22, x22, #0x10
   1495c:	subs	x20, x20, #0x1
   14960:	sub	x26, x26, #0x8
   14964:	b.gt	148d8 <mpfr_exp_3@@Base+0xbe8>
   14968:	ldur	x25, [x29, #-8]
   1496c:	ldp	x22, x21, [sp, #64]
   14970:	ldur	x26, [x29, #-48]
   14974:	ldr	x8, [sp, #24]
   14978:	add	x8, x25, x8, lsl #4
   1497c:	ldr	w9, [x8, #4]
   14980:	ldr	x8, [x8, #8]
   14984:	cmp	w9, #0x0
   14988:	cneg	w9, w9, mi  // mi = first
   1498c:	add	x8, x8, w9, uxtw #3
   14990:	ldur	x8, [x8, #-8]
   14994:	lsl	x9, x9, #6
   14998:	clz	x8, x8
   1499c:	sub	x8, x9, x8
   149a0:	subs	x24, x8, x22, lsl #1
   149a4:	b.mi	149bc <mpfr_exp_3@@Base+0xccc>  // b.first
   149a8:	mov	x0, x21
   149ac:	mov	x1, x21
   149b0:	mov	x2, x24
   149b4:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   149b8:	b	149cc <mpfr_exp_3@@Base+0xcdc>
   149bc:	neg	x2, x24
   149c0:	mov	x0, x21
   149c4:	mov	x1, x21
   149c8:	bl	c230 <__gmpz_mul_2exp@plt>
   149cc:	ldr	w8, [x25, #4]
   149d0:	ldr	x9, [x25, #8]
   149d4:	cmp	w8, #0x0
   149d8:	cneg	w8, w8, mi  // mi = first
   149dc:	add	x9, x9, w8, uxtw #3
   149e0:	ldur	x9, [x9, #-8]
   149e4:	lsl	x8, x8, #6
   149e8:	clz	x9, x9
   149ec:	sub	x8, x8, x9
   149f0:	sub	x23, x8, x22
   149f4:	cmp	x23, #0x1
   149f8:	b.lt	14a10 <mpfr_exp_3@@Base+0xd20>  // b.tstop
   149fc:	mov	x0, x25
   14a00:	mov	x1, x25
   14a04:	mov	x2, x23
   14a08:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   14a0c:	b	14a20 <mpfr_exp_3@@Base+0xd30>
   14a10:	neg	x2, x23
   14a14:	mov	x0, x25
   14a18:	mov	x1, x25
   14a1c:	bl	c230 <__gmpz_mul_2exp@plt>
   14a20:	ldur	x20, [x29, #-24]
   14a24:	mov	x0, x21
   14a28:	mov	x1, x21
   14a2c:	mov	x2, x25
   14a30:	bl	bb80 <__gmpz_tdiv_q@plt>
   14a34:	ldr	x19, [sp, #16]
   14a38:	mov	w2, #0x3                   	// #3
   14a3c:	mov	x1, x21
   14a40:	mov	x0, x19
   14a44:	bl	c250 <mpfr_set_z@plt>
   14a48:	ldr	x8, [x19, #16]
   14a4c:	msub	x9, x26, x20, x24
   14a50:	sub	x9, x9, x23
   14a54:	add	x8, x9, x8
   14a58:	str	x8, [x19, #16]
   14a5c:	ldp	x20, x19, [sp, #224]
   14a60:	ldp	x22, x21, [sp, #208]
   14a64:	ldp	x24, x23, [sp, #192]
   14a68:	ldp	x26, x25, [sp, #176]
   14a6c:	ldp	x28, x27, [sp, #160]
   14a70:	ldp	x29, x30, [sp, #144]
   14a74:	add	sp, sp, #0xf0
   14a78:	ret
   14a7c:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14a80:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14a84:	add	x0, x0, #0xe26
   14a88:	add	x2, x2, #0xee3
   14a8c:	mov	w1, #0x34                  	// #52
   14a90:	bl	cb20 <mpfr_assert_fail@plt>
   14a94:	b	1460c <mpfr_exp_3@@Base+0x91c>
   14a98:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14a9c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   14aa0:	add	x0, x0, #0xe26
   14aa4:	add	x2, x2, #0xf06
   14aa8:	mov	w1, #0x3d                  	// #61
   14aac:	bl	cb20 <mpfr_assert_fail@plt>
   14ab0:	b	14640 <mpfr_exp_3@@Base+0x950>

0000000000014ab4 <mpfr_exp@@Base>:
   14ab4:	sub	sp, sp, #0xa0
   14ab8:	stp	x29, x30, [sp, #64]
   14abc:	stp	x28, x27, [sp, #80]
   14ac0:	stp	x26, x25, [sp, #96]
   14ac4:	stp	x24, x23, [sp, #112]
   14ac8:	stp	x22, x21, [sp, #128]
   14acc:	stp	x20, x19, [sp, #144]
   14ad0:	ldr	x9, [x1, #16]
   14ad4:	mov	x8, #0x2                   	// #2
   14ad8:	movk	x8, #0x8000, lsl #48
   14adc:	add	x10, x8, #0x2
   14ae0:	mov	w20, w2
   14ae4:	mov	x21, x1
   14ae8:	cmp	x9, x10
   14aec:	mov	x19, x0
   14af0:	add	x29, sp, #0x40
   14af4:	b.lt	14ca4 <mpfr_exp@@Base+0x1f0>  // b.tstop
   14af8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14afc:	ldr	x1, [x0, #2608]
   14b00:	add	x0, x0, #0xa30
   14b04:	blr	x1
   14b08:	mrs	x27, tpidr_el0
   14b0c:	ldr	x22, [x27, x0]
   14b10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14b14:	ldr	x1, [x0, #2464]
   14b18:	add	x0, x0, #0x9a0
   14b1c:	blr	x1
   14b20:	ldr	x8, [x27, x0]
   14b24:	cmp	x22, x8
   14b28:	b.ne	14cec <mpfr_exp@@Base+0x238>  // b.any
   14b2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14b30:	ldr	x1, [x0, #2400]
   14b34:	add	x0, x0, #0x960
   14b38:	blr	x1
   14b3c:	add	x1, x27, x0
   14b40:	mov	w2, #0x1                   	// #1
   14b44:	mov	x0, x21
   14b48:	bl	c980 <mpfr_cmp3@plt>
   14b4c:	tbz	w0, #31, 14df8 <mpfr_exp@@Base+0x344>
   14b50:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14b54:	ldr	x1, [x0, #2576]
   14b58:	add	x0, x0, #0xa10
   14b5c:	blr	x1
   14b60:	ldr	x22, [x27, x0]
   14b64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14b68:	ldr	x1, [x0, #2480]
   14b6c:	add	x0, x0, #0x9b0
   14b70:	blr	x1
   14b74:	ldr	x8, [x27, x0]
   14b78:	cmp	x22, x8
   14b7c:	b.ne	14e0c <mpfr_exp@@Base+0x358>  // b.any
   14b80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14b84:	ldr	x1, [x0, #2432]
   14b88:	add	x0, x0, #0x980
   14b8c:	blr	x1
   14b90:	add	x1, x27, x0
   14b94:	mov	w2, #0x1                   	// #1
   14b98:	mov	x0, x21
   14b9c:	bl	c980 <mpfr_cmp3@plt>
   14ba0:	cmp	w0, #0x0
   14ba4:	b.le	14f48 <mpfr_exp@@Base+0x494>
   14ba8:	ldr	x9, [x21, #16]
   14bac:	ldr	x8, [x19]
   14bb0:	tbz	x9, #63, 14bc0 <mpfr_exp@@Base+0x10c>
   14bb4:	neg	x9, x9
   14bb8:	cmp	x8, x9
   14bbc:	b.cc	14f60 <mpfr_exp@@Base+0x4ac>  // b.lo, b.ul, b.last
   14bc0:	mov	w9, #0x61a8                	// #25000
   14bc4:	cmp	x8, x9
   14bc8:	b.ge	14fc8 <mpfr_exp@@Base+0x514>  // b.tcont
   14bcc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14bd0:	ldr	x1, [x0, #2640]
   14bd4:	add	x0, x0, #0xa50
   14bd8:	blr	x1
   14bdc:	ldr	w28, [x27, x0]
   14be0:	mov	x22, x0
   14be4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14be8:	ldr	x1, [x0, #2576]
   14bec:	add	x0, x0, #0xa10
   14bf0:	blr	x1
   14bf4:	ldr	x25, [x27, x0]
   14bf8:	mov	x23, x0
   14bfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14c00:	ldr	x1, [x0, #2608]
   14c04:	add	x0, x0, #0xa30
   14c08:	blr	x1
   14c0c:	ldr	x26, [x27, x0]
   14c10:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   14c14:	str	x8, [x27, x23]
   14c18:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   14c1c:	mov	x24, x0
   14c20:	str	x8, [x27, x0]
   14c24:	mov	x0, x19
   14c28:	mov	x1, x21
   14c2c:	mov	w2, w20
   14c30:	bl	c860 <mpfr_exp_2@plt>
   14c34:	ldr	w9, [x27, x22]
   14c38:	mov	w8, w0
   14c3c:	str	x25, [x27, x23]
   14c40:	str	x26, [x27, x24]
   14c44:	orr	w9, w9, w28
   14c48:	str	w9, [x27, x22]
   14c4c:	ldr	x9, [x19, #16]
   14c50:	cmp	x9, x25
   14c54:	b.lt	15008 <mpfr_exp@@Base+0x554>  // b.tstop
   14c58:	cmp	x9, x26
   14c5c:	b.gt	15008 <mpfr_exp@@Base+0x554>
   14c60:	cbz	w8, 14c80 <mpfr_exp@@Base+0x1cc>
   14c64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14c68:	ldr	x1, [x0, #2640]
   14c6c:	add	x0, x0, #0xa50
   14c70:	blr	x1
   14c74:	ldr	w9, [x27, x0]
   14c78:	orr	w9, w9, #0x8
   14c7c:	str	w9, [x27, x0]
   14c80:	ldp	x20, x19, [sp, #144]
   14c84:	ldp	x22, x21, [sp, #128]
   14c88:	ldp	x24, x23, [sp, #112]
   14c8c:	ldp	x26, x25, [sp, #96]
   14c90:	ldp	x28, x27, [sp, #80]
   14c94:	ldp	x29, x30, [sp, #64]
   14c98:	mov	w0, w8
   14c9c:	add	sp, sp, #0xa0
   14ca0:	ret
   14ca4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   14ca8:	cmp	x9, x10
   14cac:	b.eq	15054 <mpfr_exp@@Base+0x5a0>  // b.none
   14cb0:	mov	x10, #0x2                   	// #2
   14cb4:	movk	x10, #0x8000, lsl #48
   14cb8:	cmp	x9, x10
   14cbc:	b.ne	15078 <mpfr_exp@@Base+0x5c4>  // b.any
   14cc0:	str	x8, [x19, #16]
   14cc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14cc8:	ldr	x1, [x0, #2640]
   14ccc:	add	x0, x0, #0xa50
   14cd0:	blr	x1
   14cd4:	mrs	x9, tpidr_el0
   14cd8:	ldr	w10, [x9, x0]
   14cdc:	mov	w8, wzr
   14ce0:	orr	w10, w10, #0x4
   14ce4:	str	w10, [x9, x0]
   14ce8:	b	14c80 <mpfr_exp@@Base+0x1cc>
   14cec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14cf0:	ldr	x1, [x0, #2640]
   14cf4:	add	x0, x0, #0xa50
   14cf8:	blr	x1
   14cfc:	ldr	w8, [x27, x0]
   14d00:	mov	x23, x0
   14d04:	str	w8, [sp, #20]
   14d08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14d0c:	ldr	x1, [x0, #2576]
   14d10:	add	x0, x0, #0xa10
   14d14:	blr	x1
   14d18:	ldr	x28, [x27, x0]
   14d1c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   14d20:	mov	x24, x0
   14d24:	str	x8, [x27, x0]
   14d28:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14d2c:	ldr	x1, [x0, #2608]
   14d30:	add	x0, x0, #0xa30
   14d34:	blr	x1
   14d38:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   14d3c:	mov	w9, #0x40                  	// #64
   14d40:	sub	x10, x29, #0x8
   14d44:	mov	w11, #0x1                   	// #1
   14d48:	mov	x25, x0
   14d4c:	str	x8, [x27, x0]
   14d50:	str	x9, [sp, #24]
   14d54:	str	x10, [sp, #48]
   14d58:	str	w11, [sp, #32]
   14d5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14d60:	ldr	x1, [x0, #2400]
   14d64:	add	x0, x0, #0x960
   14d68:	blr	x1
   14d6c:	add	x26, x27, x0
   14d70:	mov	w8, #0x20                  	// #32
   14d74:	str	x8, [x26]
   14d78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14d7c:	ldr	x1, [x0, #2416]
   14d80:	add	x0, x0, #0x970
   14d84:	blr	x1
   14d88:	add	x8, x27, x0
   14d8c:	add	x0, sp, #0x18
   14d90:	mov	x1, x22
   14d94:	mov	x2, xzr
   14d98:	mov	w3, wzr
   14d9c:	str	x8, [x26, #24]
   14da0:	str	w11, [x26, #8]
   14da4:	bl	bae0 <mpfr_set_si_2exp@plt>
   14da8:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   14dac:	adrp	x9, 76000 <__gmpfr_l2b@@Base+0x2e0>
   14db0:	ldr	x8, [x8, #4048]
   14db4:	ldr	x9, [x9, #3992]
   14db8:	cmp	x22, #0x0
   14dbc:	add	x2, sp, #0x18
   14dc0:	mov	w3, #0x2                   	// #2
   14dc4:	csel	x1, x9, x8, lt  // lt = tstop
   14dc8:	mov	x0, x26
   14dcc:	bl	bda0 <mpfr_mul@plt>
   14dd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14dd4:	ldr	x1, [x0, #2464]
   14dd8:	add	x0, x0, #0x9a0
   14ddc:	blr	x1
   14de0:	ldr	w8, [sp, #20]
   14de4:	str	x22, [x27, x0]
   14de8:	str	x28, [x27, x24]
   14dec:	str	x22, [x27, x25]
   14df0:	str	w8, [x27, x23]
   14df4:	b	14b2c <mpfr_exp@@Base+0x78>
   14df8:	mov	w2, #0x1                   	// #1
   14dfc:	mov	x0, x19
   14e00:	mov	w1, w20
   14e04:	bl	bf90 <mpfr_overflow@plt>
   14e08:	b	15018 <mpfr_exp@@Base+0x564>
   14e0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14e10:	ldr	x1, [x0, #2640]
   14e14:	add	x0, x0, #0xa50
   14e18:	blr	x1
   14e1c:	ldr	w8, [x27, x0]
   14e20:	mov	x23, x0
   14e24:	str	w8, [sp, #20]
   14e28:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14e2c:	ldr	x1, [x0, #2608]
   14e30:	add	x0, x0, #0xa30
   14e34:	blr	x1
   14e38:	ldr	x8, [x27, x0]
   14e3c:	mov	x24, x0
   14e40:	str	x8, [sp, #8]
   14e44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14e48:	ldr	x1, [x0, #2576]
   14e4c:	add	x0, x0, #0xa10
   14e50:	blr	x1
   14e54:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   14e58:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   14e5c:	mov	w10, #0x3f                  	// #63
   14e60:	sub	x11, x29, #0x8
   14e64:	mov	w12, #0x1                   	// #1
   14e68:	mov	x25, x0
   14e6c:	str	x8, [x27, x0]
   14e70:	str	x9, [x27, x24]
   14e74:	str	x10, [sp, #24]
   14e78:	str	x11, [sp, #48]
   14e7c:	str	w12, [sp, #32]
   14e80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14e84:	ldr	x1, [x0, #2432]
   14e88:	add	x0, x0, #0x980
   14e8c:	blr	x1
   14e90:	add	x26, x27, x0
   14e94:	mov	w8, #0x20                  	// #32
   14e98:	str	x8, [x26]
   14e9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14ea0:	ldr	x1, [x0, #2448]
   14ea4:	add	x0, x0, #0x990
   14ea8:	blr	x1
   14eac:	add	x8, x27, x0
   14eb0:	add	x0, sp, #0x18
   14eb4:	mov	x1, x22
   14eb8:	mov	x2, xzr
   14ebc:	mov	w3, wzr
   14ec0:	str	x8, [x26, #24]
   14ec4:	str	w12, [x26, #8]
   14ec8:	bl	bae0 <mpfr_set_si_2exp@plt>
   14ecc:	add	x0, sp, #0x18
   14ed0:	add	x1, sp, #0x18
   14ed4:	mov	w2, #0x2                   	// #2
   14ed8:	mov	w3, wzr
   14edc:	mov	w28, #0x2                   	// #2
   14ee0:	bl	c520 <mpfr_sub_ui@plt>
   14ee4:	cmp	x22, #0x0
   14ee8:	cinc	w2, w28, ge  // ge = tcont
   14eec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14ef0:	ldr	x1, [x0, #2624]
   14ef4:	add	x0, x0, #0xa40
   14ef8:	blr	x1
   14efc:	add	x1, x27, x0
   14f00:	mov	x0, x26
   14f04:	bl	c380 <mpfr_cache@plt>
   14f08:	add	x2, sp, #0x18
   14f0c:	mov	w3, #0x3                   	// #3
   14f10:	mov	x0, x26
   14f14:	mov	x1, x26
   14f18:	bl	bda0 <mpfr_mul@plt>
   14f1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14f20:	ldr	x1, [x0, #2480]
   14f24:	add	x0, x0, #0x9b0
   14f28:	blr	x1
   14f2c:	ldr	w8, [sp, #20]
   14f30:	str	x22, [x27, x0]
   14f34:	str	x22, [x27, x25]
   14f38:	str	w8, [x27, x23]
   14f3c:	ldr	x8, [sp, #8]
   14f40:	str	x8, [x27, x24]
   14f44:	b	14b80 <mpfr_exp@@Base+0xcc>
   14f48:	cmp	w20, #0x0
   14f4c:	csinc	w1, w20, wzr, ne  // ne = any
   14f50:	mov	w2, #0x1                   	// #1
   14f54:	mov	x0, x19
   14f58:	bl	c3c0 <mpfr_underflow@plt>
   14f5c:	b	15018 <mpfr_exp@@Base+0x564>
   14f60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14f64:	ldr	x1, [x0, #2576]
   14f68:	add	x0, x0, #0xa10
   14f6c:	blr	x1
   14f70:	ldr	x25, [x27, x0]
   14f74:	mov	x8, x0
   14f78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14f7c:	ldr	x1, [x0, #2608]
   14f80:	add	x0, x0, #0xa30
   14f84:	blr	x1
   14f88:	ldr	x26, [x27, x0]
   14f8c:	ldr	w21, [x21, #8]
   14f90:	str	xzr, [x27, x8]
   14f94:	mov	w8, #0x2                   	// #2
   14f98:	str	x8, [x27, x0]
   14f9c:	orr	w8, w20, #0x2
   14fa0:	mov	w9, #0x1                   	// #1
   14fa4:	cmp	w8, #0x3
   14fa8:	str	w9, [x19, #8]
   14fac:	b.ne	15020 <mpfr_exp@@Base+0x56c>  // b.any
   14fb0:	tbz	w21, #31, 15020 <mpfr_exp@@Base+0x56c>
   14fb4:	mov	x0, x19
   14fb8:	mov	x1, xzr
   14fbc:	bl	c110 <mpfr_setmax@plt>
   14fc0:	mov	w8, #0xffffffff            	// #-1
   14fc4:	b	150ac <mpfr_exp@@Base+0x5f8>
   14fc8:	mov	x0, x19
   14fcc:	mov	x1, x21
   14fd0:	mov	w2, w20
   14fd4:	bl	be70 <mpfr_exp_3@plt>
   14fd8:	mov	w8, w0
   14fdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14fe0:	ldr	x1, [x0, #2576]
   14fe4:	add	x0, x0, #0xa10
   14fe8:	blr	x1
   14fec:	ldr	x25, [x27, x0]
   14ff0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   14ff4:	ldr	x1, [x0, #2608]
   14ff8:	add	x0, x0, #0xa30
   14ffc:	blr	x1
   15000:	ldr	x26, [x27, x0]
   15004:	b	14c4c <mpfr_exp@@Base+0x198>
   15008:	mov	x0, x19
   1500c:	mov	w1, w8
   15010:	mov	w2, w20
   15014:	bl	cb10 <mpfr_check_range@plt>
   15018:	mov	w8, w0
   1501c:	b	14c80 <mpfr_exp@@Base+0x1cc>
   15020:	mov	w1, #0x1                   	// #1
   15024:	mov	x0, x19
   15028:	bl	c2b0 <mpfr_setmin@plt>
   1502c:	cmp	w21, #0x1
   15030:	b.lt	150a8 <mpfr_exp@@Base+0x5f4>  // b.tstop
   15034:	cmp	w20, #0x4
   15038:	b.eq	15044 <mpfr_exp@@Base+0x590>  // b.none
   1503c:	cmp	w20, #0x2
   15040:	b.ne	150a8 <mpfr_exp@@Base+0x5f4>  // b.any
   15044:	mov	x0, x19
   15048:	bl	c160 <mpfr_nextabove@plt>
   1504c:	mov	w8, #0x1                   	// #1
   15050:	b	150ac <mpfr_exp@@Base+0x5f8>
   15054:	ldr	w9, [x21, #8]
   15058:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   1505c:	mov	w12, #0x1                   	// #1
   15060:	mov	w8, wzr
   15064:	cmp	w9, #0x0
   15068:	csel	x9, x10, x11, gt
   1506c:	str	x9, [x19, #16]
   15070:	str	w12, [x19, #8]
   15074:	b	14c80 <mpfr_exp@@Base+0x1cc>
   15078:	mov	x0, x19
   1507c:	mov	w3, w20
   15080:	ldp	x20, x19, [sp, #144]
   15084:	ldp	x22, x21, [sp, #128]
   15088:	ldp	x24, x23, [sp, #112]
   1508c:	ldp	x26, x25, [sp, #96]
   15090:	ldp	x28, x27, [sp, #80]
   15094:	ldp	x29, x30, [sp, #64]
   15098:	mov	w1, #0x1                   	// #1
   1509c:	mov	x2, xzr
   150a0:	add	sp, sp, #0xa0
   150a4:	b	c5e0 <mpfr_set_ui_2exp@plt>
   150a8:	neg	w8, w21
   150ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   150b0:	ldr	x1, [x0, #2576]
   150b4:	add	x0, x0, #0xa10
   150b8:	blr	x1
   150bc:	str	x25, [x27, x0]
   150c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   150c4:	ldr	x1, [x0, #2608]
   150c8:	add	x0, x0, #0xa30
   150cc:	blr	x1
   150d0:	str	x26, [x27, x0]
   150d4:	b	14c4c <mpfr_exp@@Base+0x198>

00000000000150d8 <mpfr_frac@@Base>:
   150d8:	sub	sp, sp, #0x90
   150dc:	stp	x29, x30, [sp, #48]
   150e0:	stp	x28, x27, [sp, #64]
   150e4:	stp	x26, x25, [sp, #80]
   150e8:	stp	x24, x23, [sp, #96]
   150ec:	stp	x22, x21, [sp, #112]
   150f0:	stp	x20, x19, [sp, #128]
   150f4:	ldr	x8, [x1, #16]
   150f8:	mov	x9, #0x2                   	// #2
   150fc:	movk	x9, #0x8000, lsl #48
   15100:	mov	x20, x0
   15104:	cmp	x8, x9
   15108:	add	x29, sp, #0x30
   1510c:	b.eq	15454 <mpfr_frac@@Base+0x37c>  // b.none
   15110:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15114:	mov	x21, x1
   15118:	cmp	x8, x9
   1511c:	b.eq	1543c <mpfr_frac@@Base+0x364>  // b.none
   15120:	mov	x0, x21
   15124:	mov	w19, w2
   15128:	bl	c1a0 <mpfr_integer_p@plt>
   1512c:	cbnz	w0, 1543c <mpfr_frac@@Base+0x364>
   15130:	ldr	x8, [x21, #16]
   15134:	cmp	x8, #0x0
   15138:	b.le	15190 <mpfr_frac@@Base+0xb8>
   1513c:	ldr	x9, [x21]
   15140:	ldr	x22, [x21, #24]
   15144:	str	w19, [sp, #8]
   15148:	and	x19, x8, #0x3f
   1514c:	sub	x10, x9, #0x1
   15150:	add	x9, x9, #0x3e
   15154:	cmp	x10, #0x0
   15158:	csel	x9, x9, x10, lt  // lt = tstop
   1515c:	asr	x9, x9, #6
   15160:	lsr	x10, x8, #6
   15164:	sub	x23, x9, x10
   15168:	ldr	x9, [x22, x23, lsl #3]
   1516c:	lsl	x24, x9, x8
   15170:	cbz	x24, 151ac <mpfr_frac@@Base+0xd4>
   15174:	clz	x27, x24
   15178:	add	w25, w27, w19
   1517c:	cmp	w25, #0x40
   15180:	neg	x26, x27
   15184:	b.cs	15494 <mpfr_frac@@Base+0x3bc>  // b.hs, b.nlast
   15188:	lsl	x28, x24, x27
   1518c:	b	151d8 <mpfr_frac@@Base+0x100>
   15190:	ldr	w3, [x21, #8]
   15194:	mov	x0, x20
   15198:	mov	x1, x21
   1519c:	mov	w2, w19
   151a0:	bl	c690 <mpfr_set4@plt>
   151a4:	mov	w8, w0
   151a8:	b	15410 <mpfr_frac@@Base+0x338>
   151ac:	add	x24, x22, x23, lsl #3
   151b0:	ldr	x8, [x24, #-8]!
   151b4:	sub	x19, x19, #0x40
   151b8:	sub	x23, x23, #0x1
   151bc:	cbz	x8, 151b0 <mpfr_frac@@Base+0xd8>
   151c0:	add	x9, x23, #0x1
   151c4:	cmp	x9, #0x0
   151c8:	b.le	154b0 <mpfr_frac@@Base+0x3d8>
   151cc:	clz	x25, x8
   151d0:	sub	x26, x19, x25
   151d4:	lsl	x28, x8, x25
   151d8:	ldr	x8, [x20]
   151dc:	mov	x24, x20
   151e0:	sub	x9, x8, #0x1
   151e4:	add	x8, x8, #0x3e
   151e8:	cmp	x9, #0x0
   151ec:	csel	x8, x8, x9, lt  // lt = tstop
   151f0:	asr	x27, x8, #6
   151f4:	cmp	x27, x23
   151f8:	b.lt	15230 <mpfr_frac@@Base+0x158>  // b.tstop
   151fc:	ldr	w8, [x21, #8]
   15200:	subs	x19, x27, x23
   15204:	str	w8, [x24, #8]
   15208:	b.lt	1526c <mpfr_frac@@Base+0x194>  // b.tstop
   1520c:	ldr	x21, [x24, #24]
   15210:	cbz	w25, 1528c <mpfr_frac@@Base+0x1b4>
   15214:	cbz	x23, 152a8 <mpfr_frac@@Base+0x1d0>
   15218:	add	x0, x21, x19, lsl #3
   1521c:	mov	x1, x22
   15220:	mov	x2, x23
   15224:	mov	w3, w25
   15228:	bl	bd10 <__gmpn_lshift@plt>
   1522c:	b	152ac <mpfr_frac@@Base+0x1d4>
   15230:	lsl	x8, x23, #6
   15234:	add	x1, x8, #0x40
   15238:	add	x0, sp, #0x10
   1523c:	add	x24, sp, #0x10
   15240:	bl	ca60 <mpfr_init2@plt>
   15244:	ldr	x8, [sp, #16]
   15248:	sub	x9, x8, #0x1
   1524c:	add	x8, x8, #0x3e
   15250:	cmp	x9, #0x0
   15254:	csel	x8, x8, x9, lt  // lt = tstop
   15258:	asr	x27, x8, #6
   1525c:	ldr	w8, [x21, #8]
   15260:	subs	x19, x27, x23
   15264:	str	w8, [x24, #8]
   15268:	b.ge	1520c <mpfr_frac@@Base+0x134>  // b.tcont
   1526c:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15270:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15274:	add	x0, x0, #0xf20
   15278:	add	x2, x2, #0xf3d
   1527c:	mov	w1, #0x6b                  	// #107
   15280:	bl	cb20 <mpfr_assert_fail@plt>
   15284:	ldr	x21, [x24, #24]
   15288:	cbnz	w25, 15214 <mpfr_frac@@Base+0x13c>
   1528c:	add	x0, x21, x19, lsl #3
   15290:	add	x2, x23, #0x1
   15294:	mov	x1, x22
   15298:	bl	bb40 <__gmpn_copyd@plt>
   1529c:	cmp	x19, #0x1
   152a0:	b.ge	152bc <mpfr_frac@@Base+0x1e4>  // b.tcont
   152a4:	b	152cc <mpfr_frac@@Base+0x1f4>
   152a8:	mov	x0, xzr
   152ac:	orr	x8, x0, x28
   152b0:	str	x8, [x21, x27, lsl #3]
   152b4:	cmp	x19, #0x1
   152b8:	b.lt	152cc <mpfr_frac@@Base+0x1f4>  // b.tstop
   152bc:	lsl	x2, x19, #3
   152c0:	mov	x0, x21
   152c4:	mov	w1, wzr
   152c8:	bl	c150 <memset@plt>
   152cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   152d0:	ldr	x1, [x0, #2640]
   152d4:	add	x0, x0, #0xa50
   152d8:	blr	x1
   152dc:	mrs	x22, tpidr_el0
   152e0:	ldr	w23, [x22, x0]
   152e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   152e8:	ldr	x1, [x0, #2576]
   152ec:	add	x0, x0, #0xa10
   152f0:	blr	x1
   152f4:	ldr	x25, [x22, x0]
   152f8:	mov	x8, x0
   152fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15300:	ldr	x1, [x0, #2608]
   15304:	add	x0, x0, #0xa30
   15308:	blr	x1
   1530c:	ldr	x28, [x22, x0]
   15310:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   15314:	str	x9, [x22, x8]
   15318:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   1531c:	cmp	x24, x20
   15320:	str	x8, [x22, x0]
   15324:	b.eq	1535c <mpfr_frac@@Base+0x284>  // b.none
   15328:	ldr	w19, [sp, #8]
   1532c:	ldr	w3, [x24, #8]
   15330:	mov	x0, x20
   15334:	mov	x1, x24
   15338:	mov	w2, w19
   1533c:	str	xzr, [x24, #16]
   15340:	bl	c690 <mpfr_set4@plt>
   15344:	str	w0, [sp, #12]
   15348:	mov	x0, x24
   1534c:	bl	c0b0 <mpfr_clear@plt>
   15350:	ldr	x8, [x20, #16]
   15354:	add	x9, x8, x26
   15358:	b	153a0 <mpfr_frac@@Base+0x2c8>
   1535c:	ldr	w8, [x20, #8]
   15360:	ldr	w19, [sp, #8]
   15364:	ldr	x4, [x20]
   15368:	lsl	x9, x27, #6
   1536c:	add	x2, x9, #0x40
   15370:	lsr	w3, w8, #31
   15374:	add	x6, sp, #0xc
   15378:	mov	x0, x21
   1537c:	mov	x1, x21
   15380:	mov	w5, w19
   15384:	str	x26, [x20, #16]
   15388:	bl	ca00 <mpfr_round_raw@plt>
   1538c:	cbz	w0, 15434 <mpfr_frac@@Base+0x35c>
   15390:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   15394:	str	x8, [x21, x27, lsl #3]
   15398:	ldr	x8, [x20, #16]
   1539c:	add	x9, x8, #0x1
   153a0:	str	x9, [x20, #16]
   153a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   153a8:	ldr	x1, [x0, #2640]
   153ac:	add	x0, x0, #0xa50
   153b0:	blr	x1
   153b4:	str	w23, [x22, x0]
   153b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   153bc:	ldr	x1, [x0, #2576]
   153c0:	add	x0, x0, #0xa10
   153c4:	blr	x1
   153c8:	str	x25, [x22, x0]
   153cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   153d0:	ldr	x1, [x0, #2608]
   153d4:	add	x0, x0, #0xa30
   153d8:	blr	x1
   153dc:	ldr	w8, [sp, #12]
   153e0:	cmp	x9, x28
   153e4:	str	x28, [x22, x0]
   153e8:	b.gt	15480 <mpfr_frac@@Base+0x3a8>
   153ec:	cmp	x9, x25
   153f0:	b.lt	15480 <mpfr_frac@@Base+0x3a8>  // b.tstop
   153f4:	cbz	w8, 15410 <mpfr_frac@@Base+0x338>
   153f8:	orr	w9, w23, #0x8
   153fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15400:	ldr	x1, [x0, #2640]
   15404:	add	x0, x0, #0xa50
   15408:	blr	x1
   1540c:	str	w9, [x22, x0]
   15410:	ldp	x20, x19, [sp, #128]
   15414:	ldp	x22, x21, [sp, #112]
   15418:	ldp	x24, x23, [sp, #96]
   1541c:	ldp	x26, x25, [sp, #80]
   15420:	ldp	x28, x27, [sp, #64]
   15424:	ldp	x29, x30, [sp, #48]
   15428:	mov	w0, w8
   1542c:	add	sp, sp, #0x90
   15430:	ret
   15434:	ldr	x9, [x20, #16]
   15438:	b	153a4 <mpfr_frac@@Base+0x2cc>
   1543c:	ldr	w9, [x21, #8]
   15440:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   15444:	mov	w8, wzr
   15448:	str	x10, [x20, #16]
   1544c:	str	w9, [x20, #8]
   15450:	b	15410 <mpfr_frac@@Base+0x338>
   15454:	str	x9, [x20, #16]
   15458:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1545c:	ldr	x1, [x0, #2640]
   15460:	add	x0, x0, #0xa50
   15464:	blr	x1
   15468:	mrs	x9, tpidr_el0
   1546c:	ldr	w10, [x9, x0]
   15470:	mov	w8, wzr
   15474:	orr	w10, w10, #0x4
   15478:	str	w10, [x9, x0]
   1547c:	b	15410 <mpfr_frac@@Base+0x338>
   15480:	mov	x0, x20
   15484:	mov	w1, w8
   15488:	mov	w2, w19
   1548c:	bl	cb10 <mpfr_check_range@plt>
   15490:	b	151a4 <mpfr_frac@@Base+0xcc>
   15494:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15498:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   1549c:	add	x0, x0, #0xf20
   154a0:	add	x2, x2, #0xf27
   154a4:	mov	w1, #0x50                  	// #80
   154a8:	bl	cb20 <mpfr_assert_fail@plt>
   154ac:	b	15188 <mpfr_frac@@Base+0xb0>
   154b0:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   154b4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   154b8:	add	x0, x0, #0xf20
   154bc:	add	x2, x2, #0xf35
   154c0:	mov	w1, #0x59                  	// #89
   154c4:	bl	cb20 <mpfr_assert_fail@plt>
   154c8:	ldr	x8, [x24]
   154cc:	b	151cc <mpfr_frac@@Base+0xf4>

00000000000154d0 <mpfr_frexp@@Base>:
   154d0:	stp	x29, x30, [sp, #-80]!
   154d4:	stp	x26, x25, [sp, #16]
   154d8:	stp	x24, x23, [sp, #32]
   154dc:	stp	x22, x21, [sp, #48]
   154e0:	stp	x20, x19, [sp, #64]
   154e4:	ldr	x8, [x2, #16]
   154e8:	mov	x9, #0x2                   	// #2
   154ec:	movk	x9, #0x8000, lsl #48
   154f0:	add	x10, x9, #0x2
   154f4:	mov	x22, x2
   154f8:	mov	x20, x1
   154fc:	cmp	x8, x10
   15500:	mov	x23, x0
   15504:	mov	x29, sp
   15508:	b.lt	155cc <mpfr_frexp@@Base+0xfc>  // b.tstop
   1550c:	mov	w21, w3
   15510:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15514:	ldr	x1, [x0, #2640]
   15518:	add	x0, x0, #0xa50
   1551c:	blr	x1
   15520:	mrs	x25, tpidr_el0
   15524:	ldr	w26, [x25, x0]
   15528:	str	wzr, [x25, x0]
   1552c:	ldr	w3, [x22, #8]
   15530:	mov	x24, x0
   15534:	mov	x0, x20
   15538:	mov	x1, x22
   1553c:	mov	w2, w21
   15540:	bl	c690 <mpfr_set4@plt>
   15544:	ldr	w8, [x25, x24]
   15548:	mov	w19, w0
   1554c:	str	w26, [x25, x24]
   15550:	tbnz	w8, #1, 15600 <mpfr_frexp@@Base+0x130>
   15554:	ldr	x8, [x20, #16]
   15558:	str	x8, [x23]
   1555c:	str	xzr, [x20, #16]
   15560:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15564:	ldr	x1, [x0, #2576]
   15568:	add	x0, x0, #0xa10
   1556c:	blr	x1
   15570:	ldr	x8, [x25, x0]
   15574:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15578:	ldr	x1, [x0, #2608]
   1557c:	add	x0, x0, #0xa30
   15580:	blr	x1
   15584:	cmp	x8, #0x0
   15588:	b.gt	15648 <mpfr_frexp@@Base+0x178>
   1558c:	ldr	x8, [x25, x0]
   15590:	tbnz	x8, #63, 15648 <mpfr_frexp@@Base+0x178>
   15594:	cbz	w19, 155b0 <mpfr_frexp@@Base+0xe0>
   15598:	orr	w8, w26, #0x8
   1559c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   155a0:	ldr	x1, [x0, #2640]
   155a4:	add	x0, x0, #0xa50
   155a8:	blr	x1
   155ac:	str	w8, [x25, x0]
   155b0:	mov	w0, w19
   155b4:	ldp	x20, x19, [sp, #64]
   155b8:	ldp	x22, x21, [sp, #48]
   155bc:	ldp	x24, x23, [sp, #32]
   155c0:	ldp	x26, x25, [sp, #16]
   155c4:	ldp	x29, x30, [sp], #80
   155c8:	ret
   155cc:	cmp	x8, x9
   155d0:	b.ne	1566c <mpfr_frexp@@Base+0x19c>  // b.any
   155d4:	str	x9, [x20, #16]
   155d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   155dc:	ldr	x1, [x0, #2640]
   155e0:	add	x0, x0, #0xa50
   155e4:	blr	x1
   155e8:	mrs	x8, tpidr_el0
   155ec:	ldr	w9, [x8, x0]
   155f0:	mov	w19, wzr
   155f4:	orr	w9, w9, #0x4
   155f8:	str	w9, [x8, x0]
   155fc:	b	155b0 <mpfr_frexp@@Base+0xe0>
   15600:	ldr	x8, [x22, #16]
   15604:	mov	x2, #0xffffffffffffffff    	// #-1
   15608:	mov	x0, x20
   1560c:	mov	w3, w21
   15610:	add	x8, x8, #0x1
   15614:	str	x8, [x23]
   15618:	ldrsw	x1, [x22, #8]
   1561c:	bl	bae0 <mpfr_set_si_2exp@plt>
   15620:	cmp	w0, #0x0
   15624:	csel	w19, w19, w0, eq  // eq = none
   15628:	cbz	w19, 155b0 <mpfr_frexp@@Base+0xe0>
   1562c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15630:	ldr	x1, [x0, #2640]
   15634:	add	x0, x0, #0xa50
   15638:	blr	x1
   1563c:	ldr	w8, [x25, x0]
   15640:	orr	w8, w8, #0x8
   15644:	b	155ac <mpfr_frexp@@Base+0xdc>
   15648:	mov	x0, x20
   1564c:	mov	w1, w19
   15650:	mov	w2, w21
   15654:	ldp	x20, x19, [sp, #64]
   15658:	ldp	x22, x21, [sp, #48]
   1565c:	ldp	x24, x23, [sp, #32]
   15660:	ldp	x26, x25, [sp, #16]
   15664:	ldp	x29, x30, [sp], #80
   15668:	b	cb10 <mpfr_check_range@plt>
   1566c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15670:	cmp	x8, x9
   15674:	b.ne	1568c <mpfr_frexp@@Base+0x1bc>  // b.any
   15678:	str	x9, [x20, #16]
   1567c:	ldr	w8, [x22, #8]
   15680:	mov	w19, wzr
   15684:	str	w8, [x20, #8]
   15688:	b	155b0 <mpfr_frexp@@Base+0xe0>
   1568c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   15690:	str	x8, [x20, #16]
   15694:	ldr	w8, [x22, #8]
   15698:	mov	w19, wzr
   1569c:	str	w8, [x20, #8]
   156a0:	str	xzr, [x23]
   156a4:	b	155b0 <mpfr_frexp@@Base+0xe0>

00000000000156a8 <mpfr_get_d@@Base>:
   156a8:	sub	sp, sp, #0x40
   156ac:	stp	x29, x30, [sp, #16]
   156b0:	stp	x22, x21, [sp, #32]
   156b4:	stp	x20, x19, [sp, #48]
   156b8:	ldr	x19, [x0, #16]
   156bc:	mov	x8, #0x2                   	// #2
   156c0:	movk	x8, #0x8000, lsl #48
   156c4:	add	x9, x8, #0x2
   156c8:	cmp	x19, x9
   156cc:	add	x29, sp, #0x10
   156d0:	b.lt	157a8 <mpfr_get_d@@Base+0x100>  // b.tstop
   156d4:	ldr	w20, [x0, #8]
   156d8:	mov	w8, #0x2                   	// #2
   156dc:	cmp	w20, #0x0
   156e0:	cinc	w8, w8, lt  // lt = tstop
   156e4:	cmp	w1, #0x4
   156e8:	csel	w5, w8, w1, eq  // eq = none
   156ec:	cmn	x19, #0x432
   156f0:	b.le	157bc <mpfr_get_d@@Base+0x114>
   156f4:	cmp	x19, #0x401
   156f8:	b.ge	157f4 <mpfr_get_d@@Base+0x14c>  // b.tcont
   156fc:	add	w8, w19, #0x432
   15700:	cmn	x19, #0x3fd
   15704:	mov	w9, #0x35                  	// #53
   15708:	ldr	x1, [x0, #24]
   1570c:	ldr	x2, [x0]
   15710:	csel	w22, w8, w9, lt  // lt = tstop
   15714:	sub	w8, w22, #0x1
   15718:	lsr	w3, w20, #31
   1571c:	add	w9, w22, #0x3e
   15720:	cmp	w8, #0x0
   15724:	sxtw	x4, w22
   15728:	add	x0, sp, #0x8
   1572c:	csel	w21, w9, w8, lt  // lt = tstop
   15730:	bl	c710 <mpfr_round_raw_4@plt>
   15734:	cbnz	w0, 15818 <mpfr_get_d@@Base+0x170>
   15738:	ldr	d0, [sp, #8]
   1573c:	mov	x8, #0x3bf0000000000000    	// #4318952042648305664
   15740:	fmov	d2, x8
   15744:	cmp	w22, #0x41
   15748:	ucvtf	d1, d0
   1574c:	fmul	d0, d1, d2
   15750:	b.lt	15780 <mpfr_get_d@@Base+0xd8>  // b.tstop
   15754:	asr	w9, w21, #6
   15758:	add	w9, w9, #0x1
   1575c:	mov	w8, #0x1                   	// #1
   15760:	sxtw	x9, w9
   15764:	mov	x10, #0x3bf0000000000000    	// #4318952042648305664
   15768:	fadd	d0, d0, d1
   1576c:	add	x8, x8, #0x1
   15770:	fmov	d2, x10
   15774:	cmp	x8, x9
   15778:	fmul	d0, d0, d2
   1577c:	b.lt	15768 <mpfr_get_d@@Base+0xc0>  // b.tstop
   15780:	mov	w0, w19
   15784:	bl	cb80 <mpfr_scale2@plt>
   15788:	fneg	d1, d0
   1578c:	cmp	w20, #0x0
   15790:	fcsel	d0, d1, d0, lt  // lt = tstop
   15794:	ldp	x20, x19, [sp, #48]
   15798:	ldp	x22, x21, [sp, #32]
   1579c:	ldp	x29, x30, [sp, #16]
   157a0:	add	sp, sp, #0x40
   157a4:	ret
   157a8:	cmp	x19, x8
   157ac:	b.ne	15820 <mpfr_get_d@@Base+0x178>  // b.any
   157b0:	mov	x8, #0x7ff8000000000000    	// #9221120237041090560
   157b4:	fmov	d0, x8
   157b8:	b	15794 <mpfr_get_d@@Base+0xec>
   157bc:	tbnz	w20, #31, 15848 <mpfr_get_d@@Base+0x1a0>
   157c0:	cmp	w5, #0x2
   157c4:	b.eq	157e8 <mpfr_get_d@@Base+0x140>  // b.none
   157c8:	fmov	d0, xzr
   157cc:	cbnz	w5, 15794 <mpfr_get_d@@Base+0xec>
   157d0:	mov	w1, #0x1                   	// #1
   157d4:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   157d8:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   157dc:	fmov	d0, xzr
   157e0:	cmp	w0, #0x1
   157e4:	b.lt	15794 <mpfr_get_d@@Base+0xec>  // b.tstop
   157e8:	mov	x8, #0x1                   	// #1
   157ec:	fmov	d0, x8
   157f0:	b	15794 <mpfr_get_d@@Base+0xec>
   157f4:	tbnz	w20, #31, 15870 <mpfr_get_d@@Base+0x1c8>
   157f8:	orr	w8, w5, #0x2
   157fc:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   15800:	mov	x10, #0x7fefffffffffffff    	// #9218868437227405311
   15804:	cmp	w8, #0x3
   15808:	fmov	d0, x9
   1580c:	fmov	d1, x10
   15810:	fcsel	d0, d1, d0, eq  // eq = none
   15814:	b	15794 <mpfr_get_d@@Base+0xec>
   15818:	fmov	d0, #1.000000000000000000e+00
   1581c:	b	15780 <mpfr_get_d@@Base+0xd8>
   15820:	ldr	w8, [x0, #8]
   15824:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15828:	cmp	x19, x9
   1582c:	b.ne	15890 <mpfr_get_d@@Base+0x1e8>  // b.any
   15830:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   15834:	mov	x10, #0xfff0000000000000    	// #-4503599627370496
   15838:	cmp	w8, #0x0
   1583c:	fmov	d0, x9
   15840:	fmov	d1, x10
   15844:	b	15790 <mpfr_get_d@@Base+0xe8>
   15848:	cmp	w5, #0x3
   1584c:	b.eq	158a4 <mpfr_get_d@@Base+0x1fc>  // b.none
   15850:	cbnz	w5, 15864 <mpfr_get_d@@Base+0x1bc>
   15854:	mov	x1, #0xffffffffffffffff    	// #-1
   15858:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1585c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   15860:	tbnz	w0, #31, 158a4 <mpfr_get_d@@Base+0x1fc>
   15864:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   15868:	fmov	d0, x8
   1586c:	b	15794 <mpfr_get_d@@Base+0xec>
   15870:	sub	w8, w5, #0x1
   15874:	mov	x9, #0xfff0000000000000    	// #-4503599627370496
   15878:	mov	x10, #0xffefffffffffffff    	// #-4503599627370497
   1587c:	cmp	w8, #0x2
   15880:	fmov	d0, x9
   15884:	fmov	d1, x10
   15888:	fcsel	d0, d1, d0, cc  // cc = lo, ul, last
   1588c:	b	15794 <mpfr_get_d@@Base+0xec>
   15890:	cmp	w8, #0x0
   15894:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   15898:	fmov	d0, xzr
   1589c:	fmov	d1, x8
   158a0:	b	15790 <mpfr_get_d@@Base+0xe8>
   158a4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   158a8:	fmov	d0, x8
   158ac:	b	15794 <mpfr_get_d@@Base+0xec>

00000000000158b0 <mpfr_get_d1@@Base>:
   158b0:	stp	x29, x30, [sp, #-16]!
   158b4:	mov	x29, sp
   158b8:	mov	x8, x0
   158bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   158c0:	ldr	x1, [x0, #2704]
   158c4:	add	x0, x0, #0xa90
   158c8:	blr	x1
   158cc:	mrs	x9, tpidr_el0
   158d0:	ldr	w1, [x9, x0]
   158d4:	mov	x0, x8
   158d8:	ldp	x29, x30, [sp], #16
   158dc:	b	bd80 <mpfr_get_d@plt>

00000000000158e0 <mpfr_get_d_2exp@@Base>:
   158e0:	sub	sp, sp, #0x50
   158e4:	stp	x29, x30, [sp, #32]
   158e8:	stp	x20, x19, [sp, #64]
   158ec:	ldr	x8, [x1, #16]
   158f0:	str	x21, [sp, #48]
   158f4:	mov	x21, #0x4                   	// #4
   158f8:	movk	x21, #0x8000, lsl #48
   158fc:	mov	x20, x1
   15900:	cmp	x8, x21
   15904:	mov	x19, x0
   15908:	add	x29, sp, #0x20
   1590c:	b.lt	159c8 <mpfr_get_d_2exp@@Base+0xe8>  // b.tstop
   15910:	ldr	x8, [x20]
   15914:	mov	x0, sp
   15918:	mov	w1, w2
   1591c:	str	x8, [sp]
   15920:	ldr	w8, [x20, #8]
   15924:	str	w8, [sp, #8]
   15928:	ldr	x8, [x20, #24]
   1592c:	stp	xzr, x8, [sp, #16]
   15930:	bl	bd80 <mpfr_get_d@plt>
   15934:	ldr	x8, [x20, #16]
   15938:	cmp	x8, x21
   1593c:	b.ge	15948 <mpfr_get_d_2exp@@Base+0x68>  // b.tcont
   15940:	mov	x20, xzr
   15944:	b	159a0 <mpfr_get_d_2exp@@Base+0xc0>
   15948:	fmov	d1, #1.000000000000000000e+00
   1594c:	fcmp	d0, d1
   15950:	fmov	d2, #5.000000000000000000e-01
   15954:	b.ne	15974 <mpfr_get_d_2exp@@Base+0x94>  // b.any
   15958:	add	x20, x8, #0x1
   1595c:	mov	v0.16b, v2.16b
   15960:	fcmp	d0, d2
   15964:	b.lt	15988 <mpfr_get_d_2exp@@Base+0xa8>  // b.tstop
   15968:	fcmp	d0, d1
   1596c:	b.mi	159a0 <mpfr_get_d_2exp@@Base+0xc0>  // b.first
   15970:	b	15988 <mpfr_get_d_2exp@@Base+0xa8>
   15974:	fmov	d3, #-1.000000000000000000e+00
   15978:	fcmp	d0, d3
   1597c:	b.ne	159b8 <mpfr_get_d_2exp@@Base+0xd8>  // b.any
   15980:	add	x20, x8, #0x1
   15984:	fmov	d0, #-5.000000000000000000e-01
   15988:	fmov	d1, #-5.000000000000000000e-01
   1598c:	fcmp	d0, d1
   15990:	b.hi	15a14 <mpfr_get_d_2exp@@Base+0x134>  // b.pmore
   15994:	fmov	d1, #-1.000000000000000000e+00
   15998:	fcmp	d0, d1
   1599c:	b.le	15a14 <mpfr_get_d_2exp@@Base+0x134>
   159a0:	str	x20, [x19]
   159a4:	ldp	x20, x19, [sp, #64]
   159a8:	ldr	x21, [sp, #48]
   159ac:	ldp	x29, x30, [sp, #32]
   159b0:	add	sp, sp, #0x50
   159b4:	ret
   159b8:	mov	x20, x8
   159bc:	fcmp	d0, d2
   159c0:	b.ge	15968 <mpfr_get_d_2exp@@Base+0x88>  // b.tcont
   159c4:	b	15988 <mpfr_get_d_2exp@@Base+0xa8>
   159c8:	str	xzr, [x19]
   159cc:	ldr	x9, [x20, #16]
   159d0:	sub	x8, x21, #0x2
   159d4:	cmp	x9, x8
   159d8:	b.ne	159e8 <mpfr_get_d_2exp@@Base+0x108>  // b.any
   159dc:	mov	x8, #0x7ff8000000000000    	// #9221120237041090560
   159e0:	fmov	d0, x8
   159e4:	b	159a4 <mpfr_get_d_2exp@@Base+0xc4>
   159e8:	ldr	w8, [x20, #8]
   159ec:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   159f0:	cmp	x9, x10
   159f4:	b.ne	15a38 <mpfr_get_d_2exp@@Base+0x158>  // b.any
   159f8:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   159fc:	mov	x10, #0xfff0000000000000    	// #-4503599627370496
   15a00:	cmp	w8, #0x0
   15a04:	fmov	d0, x9
   15a08:	fmov	d1, x10
   15a0c:	fcsel	d0, d1, d0, lt  // lt = tstop
   15a10:	b	159a4 <mpfr_get_d_2exp@@Base+0xc4>
   15a14:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15a18:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15a1c:	add	x0, x0, #0xf46
   15a20:	add	x2, x2, #0xf4e
   15a24:	mov	w1, #0xae                  	// #174
   15a28:	str	d0, [x29, #24]
   15a2c:	bl	cb20 <mpfr_assert_fail@plt>
   15a30:	ldr	d0, [x29, #24]
   15a34:	b	159a0 <mpfr_get_d_2exp@@Base+0xc0>
   15a38:	cmp	w8, #0x0
   15a3c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   15a40:	fmov	d0, xzr
   15a44:	fmov	d1, x8
   15a48:	fcsel	d0, d1, d0, lt  // lt = tstop
   15a4c:	b	159a4 <mpfr_get_d_2exp@@Base+0xc4>

0000000000015a50 <mpfr_get_exp@@Base>:
   15a50:	stp	x29, x30, [sp, #-32]!
   15a54:	str	x19, [sp, #16]
   15a58:	mov	x19, x0
   15a5c:	ldr	x0, [x0, #16]
   15a60:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   15a64:	mov	x29, sp
   15a68:	cmp	x0, x8
   15a6c:	b.le	15a7c <mpfr_get_exp@@Base+0x2c>
   15a70:	ldr	x19, [sp, #16]
   15a74:	ldp	x29, x30, [sp], #32
   15a78:	ret
   15a7c:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15a80:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   15a84:	add	x0, x0, #0xf87
   15a88:	add	x2, x2, #0xf91
   15a8c:	mov	w1, #0x1d                  	// #29
   15a90:	bl	cb20 <mpfr_assert_fail@plt>
   15a94:	ldr	x0, [x19, #16]
   15a98:	ldr	x19, [sp, #16]
   15a9c:	ldp	x29, x30, [sp], #32
   15aa0:	ret

0000000000015aa4 <mpfr_ceil_mul@@Base>:
   15aa4:	sub	sp, sp, #0x40
   15aa8:	stp	x29, x30, [sp, #32]
   15aac:	str	x19, [sp, #48]
   15ab0:	adrp	x11, 76000 <__gmpfr_l2b@@Base+0x2e0>
   15ab4:	ldr	x11, [x11, #4024]
   15ab8:	sxtw	x9, w1
   15abc:	add	x29, sp, #0x20
   15ac0:	mov	x8, x0
   15ac4:	sxtw	x10, w2
   15ac8:	add	x9, x11, x9, lsl #6
   15acc:	mov	w12, #0x3f                  	// #63
   15ad0:	add	x13, x29, #0x18
   15ad4:	mov	w14, #0x1                   	// #1
   15ad8:	add	x9, x9, x10, lsl #5
   15adc:	mov	x0, sp
   15ae0:	mov	w3, #0x2                   	// #2
   15ae4:	mov	x1, x8
   15ae8:	mov	x2, xzr
   15aec:	str	x12, [sp]
   15af0:	str	x13, [sp, #24]
   15af4:	sub	x19, x9, #0x80
   15af8:	str	w14, [sp, #8]
   15afc:	bl	bae0 <mpfr_set_si_2exp@plt>
   15b00:	mov	x0, sp
   15b04:	mov	x1, sp
   15b08:	mov	w3, #0x2                   	// #2
   15b0c:	mov	x2, x19
   15b10:	bl	bda0 <mpfr_mul@plt>
   15b14:	mov	x0, sp
   15b18:	mov	w1, #0x2                   	// #2
   15b1c:	bl	c1d0 <mpfr_get_si@plt>
   15b20:	ldr	x19, [sp, #48]
   15b24:	ldp	x29, x30, [sp, #32]
   15b28:	add	sp, sp, #0x40
   15b2c:	ret

0000000000015b30 <mpfr_get_str@@Base>:
   15b30:	stp	x29, x30, [sp, #-96]!
   15b34:	stp	x28, x27, [sp, #16]
   15b38:	stp	x26, x25, [sp, #32]
   15b3c:	stp	x24, x23, [sp, #48]
   15b40:	stp	x22, x21, [sp, #64]
   15b44:	stp	x20, x19, [sp, #80]
   15b48:	mov	x29, sp
   15b4c:	sub	sp, sp, #0x100
   15b50:	cmn	w2, #0x24
   15b54:	stur	x3, [x29, #-88]
   15b58:	b.ge	15b64 <mpfr_get_str@@Base+0x34>  // b.tcont
   15b5c:	mov	x0, xzr
   15b60:	b	1671c <mpfr_get_str@@Base+0xbec>
   15b64:	mov	w24, w2
   15b68:	mov	x20, x0
   15b6c:	cmp	w2, #0x3e
   15b70:	mov	x0, xzr
   15b74:	b.gt	1671c <mpfr_get_str@@Base+0xbec>
   15b78:	add	w8, w24, #0x1
   15b7c:	cmp	w8, #0x3
   15b80:	b.cc	1671c <mpfr_get_str@@Base+0xbec>  // b.lo, b.ul, b.last
   15b84:	sub	w9, w24, #0x2
   15b88:	adrp	x10, 5f000 <mpfr_l2b_3_1__tab@@Base>
   15b8c:	adrp	x11, 5f000 <mpfr_l2b_3_1__tab@@Base>
   15b90:	ldr	x8, [x4, #16]
   15b94:	mov	x12, #0xfffffffffffffeff    	// #-257
   15b98:	add	x10, x10, #0x5bd
   15b9c:	add	x11, x11, #0x598
   15ba0:	cmp	w9, #0x23
   15ba4:	movk	x12, #0x7fff, lsl #48
   15ba8:	csel	x27, x11, x10, cc  // cc = lo, ul, last
   15bac:	cmp	w24, #0x0
   15bb0:	add	x9, x12, #0x103
   15bb4:	cneg	w10, w24, mi  // mi = first
   15bb8:	cmp	w5, #0x5
   15bbc:	mov	x28, x4
   15bc0:	csel	w19, wzr, w5, eq  // eq = none
   15bc4:	cmp	x8, x9
   15bc8:	stur	x10, [x29, #-112]
   15bcc:	b.eq	1673c <mpfr_get_str@@Base+0xc0c>  // b.none
   15bd0:	ldr	w21, [x28, #8]
   15bd4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15bd8:	cmp	x8, x9
   15bdc:	lsr	x22, x21, #31
   15be0:	b.eq	16788 <mpfr_get_str@@Base+0xc58>  // b.none
   15be4:	mov	x23, x1
   15be8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15bec:	ldr	x1, [x0, #2640]
   15bf0:	add	x0, x0, #0xa50
   15bf4:	blr	x1
   15bf8:	mrs	x10, tpidr_el0
   15bfc:	ldr	w8, [x10, x0]
   15c00:	stur	w8, [x29, #-212]
   15c04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15c08:	ldr	x1, [x0, #2576]
   15c0c:	add	x0, x0, #0xa10
   15c10:	blr	x1
   15c14:	ldr	x9, [x10, x0]
   15c18:	mov	x8, x0
   15c1c:	stur	x9, [x29, #-208]
   15c20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15c24:	ldr	x1, [x0, #2608]
   15c28:	add	x0, x0, #0xa30
   15c2c:	blr	x1
   15c30:	ldr	x9, [x10, x0]
   15c34:	stur	x23, [x29, #-120]
   15c38:	stp	x9, x10, [x29, #-200]
   15c3c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   15c40:	str	x9, [x10, x8]
   15c44:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   15c48:	str	x8, [x10, x0]
   15c4c:	ldur	x8, [x29, #-88]
   15c50:	cbz	x8, 15ce0 <mpfr_get_str@@Base+0x1b0>
   15c54:	cbz	x20, 15d6c <mpfr_get_str@@Base+0x23c>
   15c58:	stur	x20, [x29, #-80]
   15c5c:	tbnz	w21, #31, 15d88 <mpfr_get_str@@Base+0x258>
   15c60:	ldr	x8, [x28, #16]
   15c64:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   15c68:	cmp	x8, x9
   15c6c:	b.ne	15da8 <mpfr_get_str@@Base+0x278>  // b.any
   15c70:	ldp	x19, x21, [x29, #-88]
   15c74:	mov	w1, #0x30                  	// #48
   15c78:	mov	x0, x21
   15c7c:	mov	x2, x19
   15c80:	bl	c150 <memset@plt>
   15c84:	strb	wzr, [x21, x19]
   15c88:	str	xzr, [x23]
   15c8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15c90:	ldr	x1, [x0, #2640]
   15c94:	add	x0, x0, #0xa50
   15c98:	blr	x1
   15c9c:	ldur	x8, [x29, #-192]
   15ca0:	ldur	w9, [x29, #-212]
   15ca4:	str	w9, [x8, x0]
   15ca8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15cac:	ldr	x1, [x0, #2576]
   15cb0:	add	x0, x0, #0xa10
   15cb4:	blr	x1
   15cb8:	ldur	x9, [x29, #-208]
   15cbc:	str	x9, [x8, x0]
   15cc0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   15cc4:	ldr	x1, [x0, #2608]
   15cc8:	add	x0, x0, #0xa30
   15ccc:	blr	x1
   15cd0:	ldur	x9, [x29, #-200]
   15cd4:	str	x9, [x8, x0]
   15cd8:	mov	x0, x20
   15cdc:	b	1671c <mpfr_get_str@@Base+0xbec>
   15ce0:	ldur	x15, [x29, #-112]
   15ce4:	adrp	x10, 76000 <__gmpfr_l2b@@Base+0x2e0>
   15ce8:	ldr	x8, [x28]
   15cec:	ldr	x10, [x10, #4024]
   15cf0:	sxtw	x9, w15
   15cf4:	sub	w14, w15, #0x1
   15cf8:	tst	w15, w14
   15cfc:	add	x9, x10, x9, lsl #6
   15d00:	mov	x23, x20
   15d04:	sub	x20, x9, #0x60
   15d08:	cset	w9, eq  // eq = none
   15d0c:	mov	w11, #0x3f                  	// #63
   15d10:	sub	x12, x29, #0x30
   15d14:	mov	w13, #0x1                   	// #1
   15d18:	sub	x1, x8, x9
   15d1c:	sub	x0, x29, #0x28
   15d20:	mov	w3, #0x2                   	// #2
   15d24:	mov	x2, xzr
   15d28:	stur	x11, [x29, #-40]
   15d2c:	stur	x12, [x29, #-16]
   15d30:	stur	w13, [x29, #-32]
   15d34:	bl	bae0 <mpfr_set_si_2exp@plt>
   15d38:	mov	x2, x20
   15d3c:	mov	x20, x23
   15d40:	ldur	x23, [x29, #-120]
   15d44:	sub	x0, x29, #0x28
   15d48:	sub	x1, x29, #0x28
   15d4c:	mov	w3, #0x2                   	// #2
   15d50:	bl	bda0 <mpfr_mul@plt>
   15d54:	sub	x0, x29, #0x28
   15d58:	mov	w1, #0x2                   	// #2
   15d5c:	bl	c1d0 <mpfr_get_si@plt>
   15d60:	add	x8, x0, #0x1
   15d64:	stur	x8, [x29, #-88]
   15d68:	cbnz	x20, 15c58 <mpfr_get_str@@Base+0x128>
   15d6c:	ldur	x9, [x29, #-88]
   15d70:	add	w8, w22, #0x1
   15d74:	add	x0, x9, x8
   15d78:	bl	ccd0 <mpfr_allocate_func@plt>
   15d7c:	mov	x20, x0
   15d80:	stur	x20, [x29, #-80]
   15d84:	tbz	w21, #31, 15c60 <mpfr_get_str@@Base+0x130>
   15d88:	mov	w8, #0x2d                  	// #45
   15d8c:	mov	x9, x20
   15d90:	strb	w8, [x9], #1
   15d94:	stur	x9, [x29, #-80]
   15d98:	ldr	x8, [x28, #16]
   15d9c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   15da0:	cmp	x8, x9
   15da4:	b.eq	15c70 <mpfr_get_str@@Base+0x140>  // b.none
   15da8:	ldr	x9, [x28, #24]
   15dac:	ldur	x11, [x29, #-112]
   15db0:	stur	x20, [x29, #-240]
   15db4:	stur	x28, [x29, #-96]
   15db8:	stur	x9, [x29, #-64]
   15dbc:	sub	w9, w11, #0x1
   15dc0:	tst	w11, w9
   15dc4:	b.ne	15ea8 <mpfr_get_str@@Base+0x378>  // b.any
   15dc8:	mov	w9, w11
   15dcc:	mov	w10, #0x3f                  	// #63
   15dd0:	clz	x9, x9
   15dd4:	sub	w9, w10, w9
   15dd8:	sub	x11, x8, #0x1
   15ddc:	sxtw	x24, w9
   15de0:	ldur	x12, [x29, #-88]
   15de4:	sdiv	x9, x11, x24
   15de8:	msub	x8, x9, x24, x8
   15dec:	cmp	x8, #0x1
   15df0:	csel	x11, x24, xzr, lt  // lt = tstop
   15df4:	sub	x12, x12, #0x1
   15df8:	add	x28, x11, x8
   15dfc:	madd	x26, x12, x24, x28
   15e00:	cset	w10, lt  // lt = tstop
   15e04:	sub	x8, x26, #0x1
   15e08:	sub	x21, x9, x10
   15e0c:	add	x9, x26, #0x3e
   15e10:	cmp	x8, #0x0
   15e14:	csel	x8, x9, x8, lt  // lt = tstop
   15e18:	asr	x8, x8, #6
   15e1c:	add	x25, x8, #0x2
   15e20:	lsl	x1, x25, #3
   15e24:	add	x20, x8, #0x1
   15e28:	cmp	x1, #0x4, lsl #12
   15e2c:	stur	xzr, [x29, #-48]
   15e30:	b.hi	167bc <mpfr_get_str@@Base+0xc8c>  // b.pmore
   15e34:	add	x9, x1, #0xf
   15e38:	mov	x8, sp
   15e3c:	and	x9, x9, #0xfffffffffffffff0
   15e40:	sub	x22, x8, x9
   15e44:	mov	sp, x22
   15e48:	ldur	x9, [x29, #-96]
   15e4c:	lsl	x8, x20, #6
   15e50:	sub	x23, x8, x26
   15e54:	ldr	x2, [x9]
   15e58:	ldr	w8, [x9, #8]
   15e5c:	lsr	w3, w8, #31
   15e60:	ldur	x1, [x29, #-64]
   15e64:	sub	x6, x29, #0x28
   15e68:	mov	x0, x22
   15e6c:	mov	x4, x26
   15e70:	mov	w5, w19
   15e74:	bl	ca00 <mpfr_round_raw@plt>
   15e78:	sxtw	x8, w0
   15e7c:	str	x8, [x22, x20, lsl #3]
   15e80:	cbz	w0, 16650 <mpfr_get_str@@Base+0xb20>
   15e84:	cmp	x28, x24
   15e88:	b.ne	1664c <mpfr_get_str@@Base+0xb1c>  // b.any
   15e8c:	mov	x0, x22
   15e90:	mov	x1, x22
   15e94:	mov	x2, x25
   15e98:	mov	w3, w24
   15e9c:	bl	bd30 <__gmpn_rshift@plt>
   15ea0:	add	x21, x21, #0x1
   15ea4:	b	16650 <mpfr_get_str@@Base+0xb20>
   15ea8:	adrp	x12, 76000 <__gmpfr_l2b@@Base+0x2e0>
   15eac:	ldr	x12, [x12, #4024]
   15eb0:	cmp	w19, #0x3
   15eb4:	mov	w9, #0x2                   	// #2
   15eb8:	mov	w10, #0x3                   	// #3
   15ebc:	csel	w9, w9, w19, eq  // eq = none
   15ec0:	cmp	w19, #0x2
   15ec4:	sxtw	x11, w11
   15ec8:	csel	w9, w10, w9, eq  // eq = none
   15ecc:	cmp	w21, #0x0
   15ed0:	add	x11, x12, x11, lsl #6
   15ed4:	mov	w22, #0x3f                  	// #63
   15ed8:	sub	x23, x29, #0x30
   15edc:	mov	w21, #0x1                   	// #1
   15ee0:	csel	w9, w9, w19, lt  // lt = tstop
   15ee4:	sub	x1, x8, #0x1
   15ee8:	sub	x0, x29, #0x28
   15eec:	mov	w3, #0x2                   	// #2
   15ef0:	mov	x2, xzr
   15ef4:	stur	x22, [x29, #-40]
   15ef8:	stur	x23, [x29, #-16]
   15efc:	stur	w21, [x29, #-32]
   15f00:	stur	w9, [x29, #-104]
   15f04:	sub	x19, x11, #0x80
   15f08:	sub	x20, x11, #0x60
   15f0c:	bl	bae0 <mpfr_set_si_2exp@plt>
   15f10:	sub	x0, x29, #0x28
   15f14:	sub	x1, x29, #0x28
   15f18:	mov	w3, #0x2                   	// #2
   15f1c:	mov	x2, x20
   15f20:	bl	bda0 <mpfr_mul@plt>
   15f24:	sub	x0, x29, #0x28
   15f28:	mov	w1, #0x2                   	// #2
   15f2c:	bl	c1d0 <mpfr_get_si@plt>
   15f30:	stur	x23, [x29, #-16]
   15f34:	ldur	x23, [x29, #-88]
   15f38:	mov	x27, x0
   15f3c:	sub	x0, x29, #0x28
   15f40:	mov	w3, #0x2                   	// #2
   15f44:	mov	x1, x23
   15f48:	mov	x2, xzr
   15f4c:	stur	x22, [x29, #-40]
   15f50:	stur	w21, [x29, #-32]
   15f54:	bl	bae0 <mpfr_set_si_2exp@plt>
   15f58:	sub	x0, x29, #0x28
   15f5c:	sub	x1, x29, #0x28
   15f60:	mov	w3, #0x2                   	// #2
   15f64:	mov	x2, x19
   15f68:	bl	bda0 <mpfr_mul@plt>
   15f6c:	sub	x0, x29, #0x28
   15f70:	mov	w1, #0x2                   	// #2
   15f74:	bl	c1d0 <mpfr_get_si@plt>
   15f78:	sub	x8, x27, x23
   15f7c:	subs	x9, x23, x27
   15f80:	add	x20, x0, #0x1
   15f84:	csel	x25, x8, x9, lt  // lt = tstop
   15f88:	cbz	x0, 167f0 <mpfr_get_str@@Base+0xcc0>
   15f8c:	mov	x19, x0
   15f90:	cmp	x0, #0x0
   15f94:	b.le	16804 <mpfr_get_str@@Base+0xcd4>
   15f98:	clz	x8, x19
   15f9c:	mov	w9, #0x40                  	// #64
   15fa0:	sub	x8, x9, x8
   15fa4:	ldur	x22, [x29, #-120]
   15fa8:	add	x19, x20, x8
   15fac:	cbz	x25, 15fd8 <mpfr_get_str@@Base+0x4a8>
   15fb0:	mov	x20, x19
   15fb4:	subs	x19, x25, #0x1
   15fb8:	b.eq	16828 <mpfr_get_str@@Base+0xcf8>  // b.none
   15fbc:	b.le	16830 <mpfr_get_str@@Base+0xd00>
   15fc0:	clz	x8, x19
   15fc4:	mov	w9, #0x40                  	// #64
   15fc8:	sub	x8, x9, x8
   15fcc:	add	x8, x8, x8, lsl #1
   15fd0:	mov	x19, x20
   15fd4:	add	x19, x8, x20
   15fd8:	mov	w8, #0x40                  	// #64
   15fdc:	stur	x8, [x29, #-248]
   15fe0:	stur	w24, [x29, #-100]
   15fe4:	sub	x8, x19, #0x1
   15fe8:	add	x9, x19, #0x3e
   15fec:	cmp	x8, #0x0
   15ff0:	csel	x8, x9, x8, lt  // lt = tstop
   15ff4:	asr	x8, x8, #6
   15ff8:	stur	x19, [x29, #-256]
   15ffc:	add	x19, x8, #0x1
   16000:	lsl	x9, x8, #3
   16004:	stur	x8, [x29, #-168]
   16008:	mvn	x8, x8
   1600c:	stur	x8, [x29, #-136]
   16010:	lsl	x8, x19, #1
   16014:	stur	x9, [x29, #-224]
   16018:	add	x9, x9, #0x10
   1601c:	stur	x8, [x29, #-128]
   16020:	neg	x8, x8
   16024:	lsl	x21, x19, #3
   16028:	lsl	x10, x19, #4
   1602c:	stur	x9, [x29, #-176]
   16030:	lsl	x9, x19, #7
   16034:	stur	x8, [x29, #-232]
   16038:	lsl	x8, x19, #6
   1603c:	stur	x10, [x29, #-160]
   16040:	stur	x9, [x29, #-184]
   16044:	stur	x8, [x29, #-144]
   16048:	stur	x21, [x29, #-72]
   1604c:	cmp	x21, #0x4, lsl #12
   16050:	stur	xzr, [x29, #-48]
   16054:	b.hi	16358 <mpfr_get_str@@Base+0x828>  // b.pmore
   16058:	add	x9, x21, #0xf
   1605c:	mov	x8, sp
   16060:	and	x9, x9, #0xfffffffffffffff0
   16064:	sub	x24, x8, x9
   16068:	mov	sp, x24
   1606c:	ldr	x8, [x28]
   16070:	stur	x25, [x29, #-56]
   16074:	sub	x9, x8, #0x1
   16078:	add	x8, x8, #0x3e
   1607c:	cmp	x9, #0x0
   16080:	csel	x8, x8, x9, lt  // lt = tstop
   16084:	asr	x28, x8, #6
   16088:	cmp	x23, x27
   1608c:	add	x21, x28, #0x1
   16090:	b.ne	160ec <mpfr_get_str@@Base+0x5bc>  // b.any
   16094:	subs	x20, x21, x19
   16098:	b.ls	1616c <mpfr_get_str@@Base+0x63c>  // b.plast
   1609c:	ldur	x0, [x29, #-64]
   160a0:	mov	x1, xzr
   160a4:	bl	ca80 <__gmpn_scan1@plt>
   160a8:	cmp	x0, x20, lsl #6
   160ac:	cset	w25, cs  // cs = hs, nlast
   160b0:	cmp	x21, x19
   160b4:	eor	w26, w25, #0x1
   160b8:	b.cc	1617c <mpfr_get_str@@Base+0x64c>  // b.lo, b.ul, b.last
   160bc:	ldur	x8, [x29, #-64]
   160c0:	ldur	x9, [x29, #-136]
   160c4:	ldur	x28, [x29, #-96]
   160c8:	add	x8, x8, x21, lsl #3
   160cc:	ldur	x21, [x29, #-72]
   160d0:	add	x1, x8, x9, lsl #3
   160d4:	cmp	x1, x24
   160d8:	b.eq	161b8 <mpfr_get_str@@Base+0x688>  // b.none
   160dc:	mov	x0, x24
   160e0:	mov	x2, x21
   160e4:	bl	ba70 <memcpy@plt>
   160e8:	b	161b8 <mpfr_get_str@@Base+0x688>
   160ec:	sub	x1, x29, #0x28
   160f0:	mov	x0, x24
   160f4:	ldur	x2, [x29, #-112]
   160f8:	mov	x3, x25
   160fc:	mov	x4, x19
   16100:	bl	cbc0 <mpfr_mpn_exp@plt>
   16104:	cmn	x0, #0x1
   16108:	mov	x20, x0
   1610c:	cset	w22, eq  // eq = none
   16110:	cmp	x23, x27
   16114:	b.le	161cc <mpfr_get_str@@Base+0x69c>
   16118:	ldur	x10, [x29, #-64]
   1611c:	ldur	x11, [x29, #-136]
   16120:	cmn	x20, #0x1
   16124:	cset	w9, eq  // eq = none
   16128:	add	x8, x10, x21, lsl #3
   1612c:	add	x8, x8, x11, lsl #3
   16130:	subs	x22, x21, x19
   16134:	csel	x25, x8, x10, cs  // cs = hs, nlast
   16138:	cset	w8, ls  // ls = plast
   1613c:	csel	x23, x19, x21, cs  // cs = hs, nlast
   16140:	and	w21, w8, w9
   16144:	b.ls	16268 <mpfr_get_str@@Base+0x738>  // b.plast
   16148:	ldur	x28, [x29, #-96]
   1614c:	cmn	x20, #0x1
   16150:	b.ne	1626c <mpfr_get_str@@Base+0x73c>  // b.any
   16154:	ldur	x0, [x29, #-64]
   16158:	mov	x1, xzr
   1615c:	bl	ca80 <__gmpn_scan1@plt>
   16160:	cmp	x0, x22, lsl #6
   16164:	cset	w21, cs  // cs = hs, nlast
   16168:	b	1626c <mpfr_get_str@@Base+0x73c>
   1616c:	mov	w25, #0x1                   	// #1
   16170:	cmp	x21, x19
   16174:	eor	w26, w25, #0x1
   16178:	b.cs	160bc <mpfr_get_str@@Base+0x58c>  // b.hs, b.nlast
   1617c:	ldur	x1, [x29, #-64]
   16180:	add	x8, x24, x19, lsl #3
   16184:	mvn	x9, x28
   16188:	add	x0, x8, x9, lsl #3
   1618c:	cmp	x0, x1
   16190:	b.eq	1619c <mpfr_get_str@@Base+0x66c>  // b.none
   16194:	lsl	x2, x21, #3
   16198:	bl	ba70 <memcpy@plt>
   1619c:	sub	x8, x19, x21
   161a0:	lsl	x2, x8, #3
   161a4:	mov	x0, x24
   161a8:	mov	w1, wzr
   161ac:	bl	c150 <memset@plt>
   161b0:	ldur	x28, [x29, #-96]
   161b4:	ldur	x21, [x29, #-72]
   161b8:	ldr	x8, [x28, #16]
   161bc:	ldur	x9, [x29, #-144]
   161c0:	sub	x8, x8, x9
   161c4:	stur	x8, [x29, #-40]
   161c8:	b	164e4 <mpfr_get_str@@Base+0x9b4>
   161cc:	ldur	x1, [x29, #-160]
   161d0:	cmp	x1, #0x4, lsl #12
   161d4:	b.hi	1636c <mpfr_get_str@@Base+0x83c>  // b.pmore
   161d8:	add	x9, x1, #0xf
   161dc:	mov	x8, sp
   161e0:	and	x9, x9, #0xfffffffffffffff0
   161e4:	sub	x25, x8, x9
   161e8:	mov	sp, x25
   161ec:	ldur	x1, [x29, #-176]
   161f0:	cmp	x1, #0x4, lsl #12
   161f4:	b.hi	16384 <mpfr_get_str@@Base+0x854>  // b.pmore
   161f8:	add	x9, x1, #0xf
   161fc:	mov	x8, sp
   16200:	and	x9, x9, #0xfffffffffffffff0
   16204:	sub	x26, x8, x9
   16208:	mov	sp, x26
   1620c:	ldur	x1, [x29, #-72]
   16210:	stur	w22, [x29, #-148]
   16214:	cmp	x1, #0x4, lsl #12
   16218:	b.hi	163a0 <mpfr_get_str@@Base+0x870>  // b.pmore
   1621c:	add	x9, x1, #0xf
   16220:	mov	x8, sp
   16224:	and	x9, x9, #0xfffffffffffffff0
   16228:	sub	x23, x8, x9
   1622c:	mov	sp, x23
   16230:	ldur	x4, [x29, #-128]
   16234:	subs	x22, x4, x21
   16238:	b.hi	163b8 <mpfr_get_str@@Base+0x888>  // b.pmore
   1623c:	ldur	x8, [x29, #-64]
   16240:	ldur	x9, [x29, #-232]
   16244:	ldur	x28, [x29, #-96]
   16248:	add	x8, x8, x21, lsl #3
   1624c:	add	x1, x8, x9, lsl #3
   16250:	cmp	x1, x25
   16254:	b.eq	163f0 <mpfr_get_str@@Base+0x8c0>  // b.none
   16258:	ldur	x2, [x29, #-160]
   1625c:	mov	x0, x25
   16260:	bl	ba70 <memcpy@plt>
   16264:	b	163ec <mpfr_get_str@@Base+0x8bc>
   16268:	ldur	x28, [x29, #-96]
   1626c:	add	x8, x23, x19
   16270:	cmp	x20, #0x1
   16274:	mov	w9, #0x2                   	// #2
   16278:	lsl	x1, x8, #3
   1627c:	csinc	x26, x9, x20, lt  // lt = tstop
   16280:	cmp	x1, #0x4, lsl #12
   16284:	b.hi	16568 <mpfr_get_str@@Base+0xa38>  // b.pmore
   16288:	add	x9, x1, #0xf
   1628c:	mov	x8, sp
   16290:	and	x9, x9, #0xfffffffffffffff0
   16294:	sub	x20, x8, x9
   16298:	mov	sp, x20
   1629c:	mov	x0, x20
   162a0:	mov	x1, x24
   162a4:	mov	x2, x19
   162a8:	mov	x3, x25
   162ac:	mov	x4, x23
   162b0:	bl	c790 <__gmpn_mul@plt>
   162b4:	ldr	x8, [x28, #16]
   162b8:	ldur	x9, [x29, #-40]
   162bc:	mov	x0, x20
   162c0:	mov	x1, xzr
   162c4:	add	x8, x9, x8
   162c8:	stur	x8, [x29, #-40]
   162cc:	bl	ca80 <__gmpn_scan1@plt>
   162d0:	ldur	x8, [x29, #-168]
   162d4:	cmp	x0, x23, lsl #6
   162d8:	cset	w9, cs  // cs = hs, nlast
   162dc:	and	w25, w21, w9
   162e0:	add	x8, x23, x8
   162e4:	ldr	x8, [x20, x8, lsl #3]
   162e8:	add	x20, x20, x23, lsl #3
   162ec:	tbnz	x8, #63, 16330 <mpfr_get_str@@Base+0x800>
   162f0:	mov	w3, #0x1                   	// #1
   162f4:	mov	x0, x24
   162f8:	mov	x1, x20
   162fc:	mov	x2, x19
   16300:	bl	bd10 <__gmpn_lshift@plt>
   16304:	ldur	x8, [x20, #-8]
   16308:	ldr	x9, [x24]
   1630c:	ldur	x22, [x29, #-120]
   16310:	ldur	x23, [x29, #-88]
   16314:	ldur	x21, [x29, #-72]
   16318:	orr	x8, x9, x8, lsr #63
   1631c:	str	x8, [x24]
   16320:	ldur	x8, [x29, #-40]
   16324:	sub	x8, x8, #0x1
   16328:	stur	x8, [x29, #-40]
   1632c:	b	164e4 <mpfr_get_str@@Base+0x9b4>
   16330:	ldur	x22, [x29, #-120]
   16334:	ldur	x23, [x29, #-88]
   16338:	ldur	x21, [x29, #-72]
   1633c:	cmp	x20, x24
   16340:	b.eq	164e4 <mpfr_get_str@@Base+0x9b4>  // b.none
   16344:	mov	x0, x24
   16348:	mov	x1, x20
   1634c:	mov	x2, x21
   16350:	bl	ba70 <memcpy@plt>
   16354:	b	164e4 <mpfr_get_str@@Base+0x9b4>
   16358:	sub	x0, x29, #0x30
   1635c:	mov	x1, x21
   16360:	bl	be10 <mpfr_tmp_allocate@plt>
   16364:	mov	x24, x0
   16368:	b	1606c <mpfr_get_str@@Base+0x53c>
   1636c:	sub	x0, x29, #0x30
   16370:	bl	be10 <mpfr_tmp_allocate@plt>
   16374:	mov	x25, x0
   16378:	ldur	x1, [x29, #-176]
   1637c:	cmp	x1, #0x4, lsl #12
   16380:	b.ls	161f8 <mpfr_get_str@@Base+0x6c8>  // b.plast
   16384:	sub	x0, x29, #0x30
   16388:	bl	be10 <mpfr_tmp_allocate@plt>
   1638c:	mov	x26, x0
   16390:	ldur	x1, [x29, #-72]
   16394:	stur	w22, [x29, #-148]
   16398:	cmp	x1, #0x4, lsl #12
   1639c:	b.ls	1621c <mpfr_get_str@@Base+0x6ec>  // b.plast
   163a0:	sub	x0, x29, #0x30
   163a4:	bl	be10 <mpfr_tmp_allocate@plt>
   163a8:	mov	x23, x0
   163ac:	ldur	x4, [x29, #-128]
   163b0:	subs	x22, x4, x21
   163b4:	b.ls	1623c <mpfr_get_str@@Base+0x70c>  // b.plast
   163b8:	ldur	x1, [x29, #-64]
   163bc:	add	x8, x25, x4, lsl #3
   163c0:	mvn	x9, x28
   163c4:	add	x0, x8, x9, lsl #3
   163c8:	cmp	x0, x1
   163cc:	b.eq	163d8 <mpfr_get_str@@Base+0x8a8>  // b.none
   163d0:	lsl	x2, x21, #3
   163d4:	bl	ba70 <memcpy@plt>
   163d8:	lsl	x2, x22, #3
   163dc:	mov	x0, x25
   163e0:	mov	w1, wzr
   163e4:	bl	c150 <memset@plt>
   163e8:	ldur	x28, [x29, #-96]
   163ec:	ldur	x4, [x29, #-128]
   163f0:	ldur	w22, [x29, #-148]
   163f4:	subs	x21, x21, x4
   163f8:	b.ls	1641c <mpfr_get_str@@Base+0x8ec>  // b.plast
   163fc:	cmn	x20, #0x1
   16400:	b.ne	1641c <mpfr_get_str@@Base+0x8ec>  // b.any
   16404:	ldur	x0, [x29, #-64]
   16408:	mov	x1, xzr
   1640c:	bl	ca80 <__gmpn_scan1@plt>
   16410:	ldur	x4, [x29, #-128]
   16414:	cmp	x0, x21, lsl #6
   16418:	cset	w22, cs  // cs = hs, nlast
   1641c:	mov	x0, x26
   16420:	mov	x1, x23
   16424:	mov	x2, xzr
   16428:	mov	x3, x25
   1642c:	mov	x5, x24
   16430:	mov	x6, x19
   16434:	bl	bac0 <__gmpn_tdiv_qr@plt>
   16438:	ldr	x8, [x28, #16]
   1643c:	ldur	x10, [x29, #-184]
   16440:	ldur	x9, [x29, #-40]
   16444:	sub	x8, x8, x10
   16448:	sub	x8, x8, x9
   1644c:	stur	x8, [x29, #-40]
   16450:	cbz	w22, 1646c <mpfr_get_str@@Base+0x93c>
   16454:	mov	x0, x23
   16458:	mov	x1, x19
   1645c:	bl	c850 <__gmpn_popcount@plt>
   16460:	cmp	x0, #0x0
   16464:	cset	w25, eq  // eq = none
   16468:	b	16470 <mpfr_get_str@@Base+0x940>
   1646c:	mov	w25, wzr
   16470:	ldr	x8, [x26, x19, lsl #3]
   16474:	ldur	x22, [x29, #-120]
   16478:	ldur	x23, [x29, #-88]
   1647c:	ldur	x21, [x29, #-72]
   16480:	cmp	x8, #0x1
   16484:	b.ne	164bc <mpfr_get_str@@Base+0x98c>  // b.any
   16488:	mov	w3, #0x1                   	// #1
   1648c:	mov	x0, x24
   16490:	mov	x1, x26
   16494:	mov	x2, x19
   16498:	bl	bd30 <__gmpn_rshift@plt>
   1649c:	ldur	x9, [x29, #-224]
   164a0:	ldr	x8, [x24, x9]
   164a4:	orr	x8, x8, #0x8000000000000000
   164a8:	str	x8, [x24, x9]
   164ac:	ldur	x8, [x29, #-40]
   164b0:	add	x8, x8, #0x1
   164b4:	stur	x8, [x29, #-40]
   164b8:	b	164d4 <mpfr_get_str@@Base+0x9a4>
   164bc:	cmp	x24, x26
   164c0:	b.eq	164d4 <mpfr_get_str@@Base+0x9a4>  // b.none
   164c4:	mov	x0, x24
   164c8:	mov	x1, x26
   164cc:	mov	x2, x21
   164d0:	bl	ba70 <memcpy@plt>
   164d4:	add	x8, x20, #0x2
   164d8:	cmn	x20, #0x1
   164dc:	mov	w9, #0x2                   	// #2
   164e0:	csel	x26, x9, x8, eq  // eq = none
   164e4:	ldur	w8, [x29, #-104]
   164e8:	ldur	x4, [x29, #-40]
   164ec:	cmp	w25, #0x0
   164f0:	csinv	x5, x26, xzr, eq  // eq = none
   164f4:	str	w8, [sp, #-16]!
   164f8:	ldur	x0, [x29, #-80]
   164fc:	ldur	w6, [x29, #-100]
   16500:	mov	x1, x22
   16504:	mov	x2, x24
   16508:	mov	x3, x19
   1650c:	mov	x7, x23
   16510:	bl	16854 <mpfr_get_str@@Base+0xd24>
   16514:	add	sp, sp, #0x10
   16518:	ldur	x8, [x29, #-48]
   1651c:	mov	w20, w0
   16520:	cbnz	x8, 16550 <mpfr_get_str@@Base+0xa20>
   16524:	ldur	x25, [x29, #-56]
   16528:	cmn	w20, #0x3
   1652c:	b.ne	16578 <mpfr_get_str@@Base+0xa48>  // b.any
   16530:	cmp	x23, x27
   16534:	sub	x8, x25, #0x1
   16538:	add	x27, x27, #0x1
   1653c:	csinc	x25, x8, x25, gt
   16540:	cmp	x21, #0x4, lsl #12
   16544:	stur	xzr, [x29, #-48]
   16548:	b.ls	16058 <mpfr_get_str@@Base+0x528>  // b.plast
   1654c:	b	16358 <mpfr_get_str@@Base+0x828>
   16550:	mov	x0, x8
   16554:	bl	c400 <mpfr_tmp_free@plt>
   16558:	ldur	x25, [x29, #-56]
   1655c:	cmn	w20, #0x3
   16560:	b.eq	16530 <mpfr_get_str@@Base+0xa00>  // b.none
   16564:	b	16578 <mpfr_get_str@@Base+0xa48>
   16568:	sub	x0, x29, #0x30
   1656c:	bl	be10 <mpfr_tmp_allocate@plt>
   16570:	mov	x20, x0
   16574:	b	1629c <mpfr_get_str@@Base+0x76c>
   16578:	cbz	w20, 165d8 <mpfr_get_str@@Base+0xaa8>
   1657c:	cmp	w20, #0x3
   16580:	b.ne	165e4 <mpfr_get_str@@Base+0xab4>  // b.any
   16584:	ldp	x19, x9, [x29, #-256]
   16588:	mov	x8, #0xfffffffffffffeff    	// #-257
   1658c:	movk	x8, #0x7fff, lsl #48
   16590:	sub	x8, x8, x19
   16594:	cmp	x9, x8
   16598:	mov	x8, x9
   1659c:	b.gt	165b8 <mpfr_get_str@@Base+0xa88>
   165a0:	add	x19, x19, x8
   165a4:	cmp	x19, #0x0
   165a8:	cinc	x8, x19, lt  // lt = tstop
   165ac:	asr	x8, x8, #1
   165b0:	stur	x8, [x29, #-248]
   165b4:	b	15fe4 <mpfr_get_str@@Base+0x4b4>
   165b8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   165bc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   165c0:	mov	w1, #0x9f9                 	// #2553
   165c4:	add	x0, x0, #0x603
   165c8:	add	x2, x2, #0x622
   165cc:	bl	cb20 <mpfr_assert_fail@plt>
   165d0:	ldur	x8, [x29, #-248]
   165d4:	b	165a0 <mpfr_get_str@@Base+0xa70>
   165d8:	ldur	x9, [x29, #-240]
   165dc:	ldur	w10, [x29, #-212]
   165e0:	b	165f0 <mpfr_get_str@@Base+0xac0>
   165e4:	ldur	w10, [x29, #-212]
   165e8:	ldur	x9, [x29, #-240]
   165ec:	orr	w10, w10, #0x8
   165f0:	ldr	x8, [x22]
   165f4:	add	x8, x8, x27
   165f8:	str	x8, [x22]
   165fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   16600:	ldr	x1, [x0, #2640]
   16604:	add	x0, x0, #0xa50
   16608:	blr	x1
   1660c:	ldur	x8, [x29, #-192]
   16610:	str	w10, [x8, x0]
   16614:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   16618:	ldr	x1, [x0, #2576]
   1661c:	add	x0, x0, #0xa10
   16620:	blr	x1
   16624:	ldur	x10, [x29, #-208]
   16628:	str	x10, [x8, x0]
   1662c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   16630:	ldr	x1, [x0, #2608]
   16634:	add	x0, x0, #0xa30
   16638:	blr	x1
   1663c:	ldur	x10, [x29, #-200]
   16640:	str	x10, [x8, x0]
   16644:	mov	x0, x9
   16648:	b	1671c <mpfr_get_str@@Base+0xbec>
   1664c:	mov	x20, x25
   16650:	cbz	x23, 16678 <mpfr_get_str@@Base+0xb48>
   16654:	mov	x0, x22
   16658:	mov	x1, x22
   1665c:	mov	x2, x20
   16660:	mov	w3, w23
   16664:	bl	bd30 <__gmpn_rshift@plt>
   16668:	sub	x8, x20, #0x1
   1666c:	ldr	x9, [x22, x8, lsl #3]
   16670:	cmp	x9, #0x0
   16674:	csel	x20, x8, x20, eq  // eq = none
   16678:	ldur	x0, [x29, #-80]
   1667c:	ldp	x19, x1, [x29, #-120]
   16680:	mov	x2, x22
   16684:	mov	x3, x20
   16688:	bl	c5d0 <__gmpn_get_str@plt>
   1668c:	ldur	x11, [x29, #-88]
   16690:	cbz	x11, 166b0 <mpfr_get_str@@Base+0xb80>
   16694:	ldur	x8, [x29, #-80]
   16698:	mov	x9, x11
   1669c:	ldrb	w10, [x8]
   166a0:	subs	x9, x9, #0x1
   166a4:	ldrb	w10, [x27, x10]
   166a8:	strb	w10, [x8], #1
   166ac:	b.ne	1669c <mpfr_get_str@@Base+0xb6c>  // b.any
   166b0:	ldur	x8, [x29, #-80]
   166b4:	ldur	w20, [x29, #-212]
   166b8:	strb	wzr, [x8, x11]
   166bc:	add	x8, x21, #0x1
   166c0:	str	x8, [x19]
   166c4:	ldur	x0, [x29, #-48]
   166c8:	ldur	x19, [x29, #-240]
   166cc:	cbnz	x0, 16820 <mpfr_get_str@@Base+0xcf0>
   166d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   166d4:	ldr	x1, [x0, #2640]
   166d8:	add	x0, x0, #0xa50
   166dc:	blr	x1
   166e0:	ldur	x8, [x29, #-192]
   166e4:	str	w20, [x8, x0]
   166e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   166ec:	ldr	x1, [x0, #2576]
   166f0:	add	x0, x0, #0xa10
   166f4:	blr	x1
   166f8:	ldur	x9, [x29, #-208]
   166fc:	str	x9, [x8, x0]
   16700:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   16704:	ldr	x1, [x0, #2608]
   16708:	add	x0, x0, #0xa30
   1670c:	blr	x1
   16710:	ldur	x9, [x29, #-200]
   16714:	str	x9, [x8, x0]
   16718:	mov	x0, x19
   1671c:	mov	sp, x29
   16720:	ldp	x20, x19, [sp, #80]
   16724:	ldp	x22, x21, [sp, #64]
   16728:	ldp	x24, x23, [sp, #48]
   1672c:	ldp	x26, x25, [sp, #32]
   16730:	ldp	x28, x27, [sp, #16]
   16734:	ldp	x29, x30, [sp], #96
   16738:	ret
   1673c:	cbnz	x20, 1674c <mpfr_get_str@@Base+0xc1c>
   16740:	mov	w0, #0x6                   	// #6
   16744:	bl	ccd0 <mpfr_allocate_func@plt>
   16748:	mov	x20, x0
   1674c:	mov	w9, #0x4e40                	// #20032
   16750:	mov	w8, #0x40                  	// #64
   16754:	movk	w9, #0x4e61, lsl #16
   16758:	strh	w8, [x20, #4]
   1675c:	str	w9, [x20]
   16760:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   16764:	ldr	x1, [x0, #2640]
   16768:	add	x0, x0, #0xa50
   1676c:	blr	x1
   16770:	mrs	x8, tpidr_el0
   16774:	ldr	w9, [x8, x0]
   16778:	orr	w9, w9, #0x4
   1677c:	str	w9, [x8, x0]
   16780:	mov	x0, x20
   16784:	b	1671c <mpfr_get_str@@Base+0xbec>
   16788:	cbnz	x20, 16798 <mpfr_get_str@@Base+0xc68>
   1678c:	orr	x0, x22, #0x6
   16790:	bl	ccd0 <mpfr_allocate_func@plt>
   16794:	mov	x20, x0
   16798:	adrp	x8, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1679c:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   167a0:	add	x8, x8, #0x5fd
   167a4:	add	x9, x9, #0x5fc
   167a8:	cmp	w21, #0x0
   167ac:	csel	x1, x9, x8, lt  // lt = tstop
   167b0:	mov	x0, x20
   167b4:	bl	c910 <strcpy@plt>
   167b8:	b	1671c <mpfr_get_str@@Base+0xbec>
   167bc:	sub	x0, x29, #0x30
   167c0:	bl	be10 <mpfr_tmp_allocate@plt>
   167c4:	ldur	x10, [x29, #-96]
   167c8:	lsl	x9, x20, #6
   167cc:	mov	x22, x0
   167d0:	sub	x23, x9, x26
   167d4:	ldr	x8, [x10, #16]
   167d8:	ldr	x2, [x10]
   167dc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   167e0:	cmp	x8, x10
   167e4:	b.ne	1684c <mpfr_get_str@@Base+0xd1c>  // b.any
   167e8:	mov	w3, wzr
   167ec:	b	15e60 <mpfr_get_str@@Base+0x330>
   167f0:	mov	x8, xzr
   167f4:	ldur	x22, [x29, #-120]
   167f8:	add	x19, x20, x8
   167fc:	cbnz	x25, 15fb0 <mpfr_get_str@@Base+0x480>
   16800:	b	15fd8 <mpfr_get_str@@Base+0x4a8>
   16804:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16808:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1680c:	add	x0, x0, #0x603
   16810:	add	x2, x2, #0x60d
   16814:	mov	w1, #0x983                 	// #2435
   16818:	bl	cb20 <mpfr_assert_fail@plt>
   1681c:	b	15f98 <mpfr_get_str@@Base+0x468>
   16820:	bl	c400 <mpfr_tmp_free@plt>
   16824:	b	166d0 <mpfr_get_str@@Base+0xba0>
   16828:	mov	x8, xzr
   1682c:	b	15fd0 <mpfr_get_str@@Base+0x4a0>
   16830:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16834:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16838:	add	x0, x0, #0x603
   1683c:	add	x2, x2, #0x618
   16840:	mov	w1, #0x985                 	// #2437
   16844:	bl	cb20 <mpfr_assert_fail@plt>
   16848:	b	15fc0 <mpfr_get_str@@Base+0x490>
   1684c:	ldur	x9, [x29, #-96]
   16850:	b	15e58 <mpfr_get_str@@Base+0x328>
   16854:	stp	x29, x30, [sp, #-96]!
   16858:	stp	x28, x27, [sp, #16]
   1685c:	stp	x26, x25, [sp, #32]
   16860:	stp	x24, x23, [sp, #48]
   16864:	stp	x22, x21, [sp, #64]
   16868:	stp	x20, x19, [sp, #80]
   1686c:	mov	x29, sp
   16870:	sub	sp, sp, #0x30
   16874:	mov	w22, w6
   16878:	mov	x20, x5
   1687c:	mov	x25, x4
   16880:	mov	x26, x3
   16884:	mov	x27, x2
   16888:	mov	x24, x1
   1688c:	cmp	x4, #0x1
   16890:	mov	x21, x0
   16894:	stur	x7, [x29, #-24]
   16898:	b.ge	16b2c <mpfr_get_str@@Base+0xffc>  // b.tcont
   1689c:	lsl	x28, x26, #6
   168a0:	neg	x8, x28
   168a4:	cmp	x8, x25
   168a8:	b.ge	16b54 <mpfr_get_str@@Base+0x1024>  // b.tcont
   168ac:	ldr	w5, [x29, #96]
   168b0:	sub	w8, w22, #0x2
   168b4:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   168b8:	adrp	x10, 5f000 <mpfr_l2b_3_1__tab@@Base>
   168bc:	add	x9, x9, #0x5bd
   168c0:	add	x10, x10, #0x598
   168c4:	cmp	w8, #0x23
   168c8:	csel	x23, x10, x9, cc  // cc = lo, ul, last
   168cc:	cmp	w22, #0x0
   168d0:	cneg	w22, w22, mi  // mi = first
   168d4:	stur	xzr, [x29, #-16]
   168d8:	stur	x20, [x29, #-48]
   168dc:	tbnz	x20, #63, 16914 <mpfr_get_str@@Base+0xde4>
   168e0:	sub	x2, x28, x20
   168e4:	add	x20, x28, x25
   168e8:	cmp	w5, #0x0
   168ec:	cinc	x3, x20, eq  // eq = none
   168f0:	mov	x0, x27
   168f4:	mov	x1, x26
   168f8:	mov	w19, w5
   168fc:	bl	c370 <mpfr_round_p@plt>
   16900:	mov	w5, w19
   16904:	cbnz	w0, 16918 <mpfr_get_str@@Base+0xde8>
   16908:	mov	w8, #0x3                   	// #3
   1690c:	stur	w8, [x29, #-4]
   16910:	b	16af8 <mpfr_get_str@@Base+0xfc8>
   16914:	add	x20, x28, x25
   16918:	add	x8, x25, #0x3f
   1691c:	cmp	x25, #0x0
   16920:	csel	x8, x8, x25, lt  // lt = tstop
   16924:	stur	x24, [x29, #-32]
   16928:	ldur	x24, [x29, #-24]
   1692c:	asr	x9, x8, #6
   16930:	and	x8, x8, #0xffffffffffffffc0
   16934:	mov	x19, x21
   16938:	sub	x21, x25, x8
   1693c:	sub	x25, x27, x9, lsl #3
   16940:	sub	x6, x29, #0x4
   16944:	mov	x0, x25
   16948:	mov	x1, x27
   1694c:	mov	x2, x28
   16950:	mov	w3, wzr
   16954:	mov	x4, x20
   16958:	stur	w22, [x29, #-36]
   1695c:	neg	x22, x9
   16960:	mov	w28, w5
   16964:	bl	ca00 <mpfr_round_raw@plt>
   16968:	cbz	w0, 16988 <mpfr_get_str@@Base+0xe58>
   1696c:	cbz	x21, 169a4 <mpfr_get_str@@Base+0xe74>
   16970:	mvn	x8, x21
   16974:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   16978:	lsr	x8, x9, x8
   1697c:	add	x9, x27, x26, lsl #3
   16980:	stur	x8, [x9, #-8]
   16984:	b	169b8 <mpfr_get_str@@Base+0xe88>
   16988:	cbz	x21, 169b8 <mpfr_get_str@@Base+0xe88>
   1698c:	sub	x2, x26, x22
   16990:	neg	w3, w21
   16994:	mov	x0, x25
   16998:	mov	x1, x25
   1699c:	bl	bd30 <__gmpn_rshift@plt>
   169a0:	b	169b8 <mpfr_get_str@@Base+0xe88>
   169a4:	sxtw	x8, w0
   169a8:	add	x9, x27, x26, lsl #3
   169ac:	sub	x22, x22, #0x1
   169b0:	stur	x8, [x9, #-8]
   169b4:	str	xzr, [x27, x22, lsl #3]
   169b8:	add	x1, x24, #0x3
   169bc:	mov	x21, x19
   169c0:	mov	x19, x24
   169c4:	cmp	x1, #0x4, lsl #12
   169c8:	b.hi	16b78 <mpfr_get_str@@Base+0x1048>  // b.pmore
   169cc:	add	x9, x1, #0xf
   169d0:	mov	x8, sp
   169d4:	and	x9, x9, #0xfffffffffffffff0
   169d8:	sub	x25, x8, x9
   169dc:	mov	sp, x25
   169e0:	add	x2, x27, x22, lsl #3
   169e4:	sub	x3, x26, x22
   169e8:	ldur	w22, [x29, #-36]
   169ec:	ldur	x24, [x29, #-32]
   169f0:	mov	x0, x25
   169f4:	mov	w1, w22
   169f8:	bl	c5d0 <__gmpn_get_str@plt>
   169fc:	mov	x26, x0
   16a00:	subs	x20, x0, x19
   16a04:	b.cc	16b88 <mpfr_get_str@@Base+0x1058>  // b.lo, b.ul, b.last
   16a08:	add	x8, x19, #0x1
   16a0c:	cmp	x26, x8
   16a10:	str	x20, [x24]
   16a14:	b.ne	16ad4 <mpfr_get_str@@Base+0xfa4>  // b.any
   16a18:	ldur	w8, [x29, #-4]
   16a1c:	cbnz	w8, 16a2c <mpfr_get_str@@Base+0xefc>
   16a20:	add	x9, x26, x25
   16a24:	ldurb	w9, [x9, #-1]
   16a28:	cbz	w9, 16ad4 <mpfr_get_str@@Base+0xfa4>
   16a2c:	cmp	w28, #0x4
   16a30:	b.eq	16a6c <mpfr_get_str@@Base+0xf3c>  // b.none
   16a34:	cmp	w28, #0x2
   16a38:	b.eq	16a6c <mpfr_get_str@@Base+0xf3c>  // b.none
   16a3c:	cbnz	w28, 16acc <mpfr_get_str@@Base+0xf9c>
   16a40:	add	x9, x26, x25
   16a44:	ldurb	w9, [x9, #-1]
   16a48:	lsl	w9, w9, #1
   16a4c:	cmp	w9, w22
   16a50:	b.ne	16ac8 <mpfr_get_str@@Base+0xf98>  // b.any
   16a54:	ldur	x9, [x29, #-48]
   16a58:	tbz	x9, #63, 16b24 <mpfr_get_str@@Base+0xff4>
   16a5c:	cbnz	w8, 16b24 <mpfr_get_str@@Base+0xff4>
   16a60:	add	x8, x26, x25
   16a64:	ldurb	w8, [x8, #-2]
   16a68:	tbz	w8, #0, 16acc <mpfr_get_str@@Base+0xf9c>
   16a6c:	add	x8, x26, x25
   16a70:	ldurb	w8, [x8, #-1]
   16a74:	cbz	w8, 16ac0 <mpfr_get_str@@Base+0xf90>
   16a78:	cmp	x26, #0x1
   16a7c:	b.ls	16bb4 <mpfr_get_str@@Base+0x1084>  // b.plast
   16a80:	add	x10, x26, x25
   16a84:	mov	x9, x10
   16a88:	ldrb	w8, [x9, #-2]!
   16a8c:	sub	w11, w22, #0x1
   16a90:	cmp	w11, w8
   16a94:	b.ne	16ab8 <mpfr_get_str@@Base+0xf88>  // b.any
   16a98:	sub	x9, x10, #0x3
   16a9c:	ldrb	w10, [x9]
   16aa0:	strb	wzr, [x9, #1]
   16aa4:	sub	x9, x9, #0x1
   16aa8:	cmp	w8, w10
   16aac:	b.eq	16a9c <mpfr_get_str@@Base+0xf6c>  // b.none
   16ab0:	add	x9, x9, #0x1
   16ab4:	mov	w8, w10
   16ab8:	add	w8, w8, #0x1
   16abc:	strb	w8, [x9]
   16ac0:	mov	w8, #0x1                   	// #1
   16ac4:	b	16ad0 <mpfr_get_str@@Base+0xfa0>
   16ac8:	b.ge	16a6c <mpfr_get_str@@Base+0xf3c>  // b.tcont
   16acc:	mov	w8, #0xffffffff            	// #-1
   16ad0:	stur	w8, [x29, #-4]
   16ad4:	cbz	x19, 16af4 <mpfr_get_str@@Base+0xfc4>
   16ad8:	mov	x8, x21
   16adc:	mov	x9, x19
   16ae0:	ldrb	w10, [x25], #1
   16ae4:	subs	x9, x9, #0x1
   16ae8:	ldrb	w10, [x23, x10]
   16aec:	strb	w10, [x8], #1
   16af0:	b.ne	16ae0 <mpfr_get_str@@Base+0xfb0>  // b.any
   16af4:	strb	wzr, [x21, x19]
   16af8:	ldur	x0, [x29, #-16]
   16afc:	cbnz	x0, 16b70 <mpfr_get_str@@Base+0x1040>
   16b00:	ldur	w0, [x29, #-4]
   16b04:	mov	sp, x29
   16b08:	ldp	x20, x19, [sp, #80]
   16b0c:	ldp	x22, x21, [sp, #64]
   16b10:	ldp	x24, x23, [sp, #48]
   16b14:	ldp	x26, x25, [sp, #32]
   16b18:	ldp	x28, x27, [sp, #16]
   16b1c:	ldp	x29, x30, [sp], #96
   16b20:	ret
   16b24:	mov	w8, #0xfffffffd            	// #-3
   16b28:	b	1690c <mpfr_get_str@@Base+0xddc>
   16b2c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16b30:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16b34:	add	x0, x0, #0x603
   16b38:	add	x2, x2, #0x668
   16b3c:	mov	w1, #0x62                  	// #98
   16b40:	bl	cb20 <mpfr_assert_fail@plt>
   16b44:	lsl	x28, x26, #6
   16b48:	neg	x8, x28
   16b4c:	cmp	x8, x25
   16b50:	b.lt	168ac <mpfr_get_str@@Base+0xd7c>  // b.tstop
   16b54:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16b58:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16b5c:	add	x0, x0, #0x603
   16b60:	add	x2, x2, #0x66f
   16b64:	mov	w1, #0x64                  	// #100
   16b68:	bl	cb20 <mpfr_assert_fail@plt>
   16b6c:	b	168ac <mpfr_get_str@@Base+0xd7c>
   16b70:	bl	c400 <mpfr_tmp_free@plt>
   16b74:	b	16b00 <mpfr_get_str@@Base+0xfd0>
   16b78:	sub	x0, x29, #0x10
   16b7c:	bl	be10 <mpfr_tmp_allocate@plt>
   16b80:	mov	x25, x0
   16b84:	b	169e0 <mpfr_get_str@@Base+0xeb0>
   16b88:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16b8c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16b90:	add	x0, x0, #0x603
   16b94:	add	x2, x2, #0x683
   16b98:	mov	w1, #0x9d                  	// #157
   16b9c:	bl	cb20 <mpfr_assert_fail@plt>
   16ba0:	add	x8, x19, #0x1
   16ba4:	cmp	x26, x8
   16ba8:	str	x20, [x24]
   16bac:	b.eq	16a18 <mpfr_get_str@@Base+0xee8>  // b.none
   16bb0:	b	16ad4 <mpfr_get_str@@Base+0xfa4>
   16bb4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16bb8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16bbc:	add	x0, x0, #0x603
   16bc0:	add	x2, x2, #0x690
   16bc4:	mov	w1, #0xd2                  	// #210
   16bc8:	bl	cb20 <mpfr_assert_fail@plt>
   16bcc:	b	16a80 <mpfr_get_str@@Base+0xf50>

0000000000016bd0 <mpfr_free_str@@Base>:
   16bd0:	stp	x29, x30, [sp, #-32]!
   16bd4:	str	x19, [sp, #16]
   16bd8:	mov	x29, sp
   16bdc:	mov	x19, x0
   16be0:	bl	bb10 <strlen@plt>
   16be4:	add	x1, x0, #0x1
   16be8:	mov	x0, x19
   16bec:	ldr	x19, [sp, #16]
   16bf0:	ldp	x29, x30, [sp], #32
   16bf4:	b	cc00 <mpfr_free_func@plt>

0000000000016bf8 <mpfr_init@@Base>:
   16bf8:	stp	x29, x30, [sp, #-16]!
   16bfc:	mov	x29, sp
   16c00:	mov	x8, x0
   16c04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   16c08:	ldr	x1, [x0, #2592]
   16c0c:	add	x0, x0, #0xa20
   16c10:	blr	x1
   16c14:	mrs	x9, tpidr_el0
   16c18:	ldr	x1, [x9, x0]
   16c1c:	mov	x0, x8
   16c20:	ldp	x29, x30, [sp], #16
   16c24:	b	ca60 <mpfr_init2@plt>

0000000000016c28 <__gmpfr_inp_str@@Base>:
   16c28:	sub	sp, sp, #0x70
   16c2c:	stp	x29, x30, [sp, #16]
   16c30:	stp	x22, x21, [sp, #80]
   16c34:	add	x29, sp, #0x10
   16c38:	mov	x21, x0
   16c3c:	mov	w0, #0x64                  	// #100
   16c40:	stp	x28, x27, [sp, #32]
   16c44:	stp	x26, x25, [sp, #48]
   16c48:	stp	x24, x23, [sp, #64]
   16c4c:	stp	x20, x19, [sp, #96]
   16c50:	stur	w3, [x29, #-4]
   16c54:	mov	w19, w2
   16c58:	mov	x23, x1
   16c5c:	bl	ccd0 <mpfr_allocate_func@plt>
   16c60:	mov	x22, x0
   16c64:	mov	x28, #0xffffffffffffffff    	// #-1
   16c68:	mov	x0, x23
   16c6c:	bl	c2a0 <getc@plt>
   16c70:	mov	w24, w0
   16c74:	bl	c620 <__ctype_b_loc@plt>
   16c78:	ldr	x8, [x0]
   16c7c:	add	x28, x28, #0x1
   16c80:	ldrh	w8, [x8, w24, sxtw #1]
   16c84:	tbnz	w8, #13, 16c68 <__gmpfr_inp_str@@Base+0x40>
   16c88:	mov	x25, x0
   16c8c:	mov	x20, xzr
   16c90:	mov	w26, #0x64                  	// #100
   16c94:	cmp	x20, x26
   16c98:	b.cc	16cbc <__gmpfr_inp_str@@Base+0x94>  // b.lo, b.ul, b.last
   16c9c:	add	x8, x26, x26, lsl #1
   16ca0:	lsr	x27, x8, #1
   16ca4:	mov	x0, x22
   16ca8:	mov	x1, x26
   16cac:	mov	x2, x27
   16cb0:	bl	c200 <mpfr_reallocate_func@plt>
   16cb4:	mov	x22, x0
   16cb8:	mov	x26, x27
   16cbc:	cmn	w24, #0x1
   16cc0:	b.eq	16cf4 <__gmpfr_inp_str@@Base+0xcc>  // b.none
   16cc4:	ldr	x8, [x25]
   16cc8:	ldrh	w8, [x8, w24, sxtw #1]
   16ccc:	tbnz	w8, #13, 16cf4 <__gmpfr_inp_str@@Base+0xcc>
   16cd0:	mov	x0, x23
   16cd4:	add	x27, x20, #0x1
   16cd8:	strb	w24, [x22, x20]
   16cdc:	bl	c2a0 <getc@plt>
   16ce0:	mov	w24, w0
   16ce4:	mov	x20, x27
   16ce8:	cmp	x20, x26
   16cec:	b.cs	16c9c <__gmpfr_inp_str@@Base+0x74>  // b.hs, b.nlast
   16cf0:	b	16cbc <__gmpfr_inp_str@@Base+0x94>
   16cf4:	mov	w0, w24
   16cf8:	mov	x1, x23
   16cfc:	bl	c720 <ungetc@plt>
   16d00:	ldur	w3, [x29, #-4]
   16d04:	mov	x0, x21
   16d08:	mov	x1, x22
   16d0c:	mov	w2, w19
   16d10:	strb	wzr, [x22, x20]
   16d14:	bl	c6b0 <mpfr_set_str@plt>
   16d18:	mov	w19, w0
   16d1c:	mov	x0, x22
   16d20:	mov	x1, x26
   16d24:	bl	cc00 <mpfr_free_func@plt>
   16d28:	add	x8, x28, x20
   16d2c:	cmn	w19, #0x1
   16d30:	ldp	x20, x19, [sp, #96]
   16d34:	ldp	x22, x21, [sp, #80]
   16d38:	ldp	x24, x23, [sp, #64]
   16d3c:	ldp	x26, x25, [sp, #48]
   16d40:	ldp	x28, x27, [sp, #32]
   16d44:	ldp	x29, x30, [sp, #16]
   16d48:	csel	x0, xzr, x8, eq  // eq = none
   16d4c:	add	sp, sp, #0x70
   16d50:	ret

0000000000016d54 <mpfr_integer_p@@Base>:
   16d54:	stp	x29, x30, [sp, #-48]!
   16d58:	stp	x20, x19, [sp, #32]
   16d5c:	ldr	x19, [x0, #16]
   16d60:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   16d64:	str	x21, [sp, #16]
   16d68:	mov	x29, sp
   16d6c:	cmp	x19, x8
   16d70:	b.le	16df4 <mpfr_integer_p@@Base+0xa0>
   16d74:	cmp	x19, #0x1
   16d78:	b.lt	16dcc <mpfr_integer_p@@Base+0x78>  // b.tstop
   16d7c:	ldr	x8, [x0]
   16d80:	cmp	x19, x8
   16d84:	b.cs	16de0 <mpfr_integer_p@@Base+0x8c>  // b.hs, b.nlast
   16d88:	sub	x9, x8, #0x1
   16d8c:	add	x8, x8, #0x3e
   16d90:	cmp	x9, #0x0
   16d94:	ldr	x21, [x0, #24]
   16d98:	csel	x8, x8, x9, lt  // lt = tstop
   16d9c:	asr	x8, x8, #6
   16da0:	subs	x20, x8, x19, lsr #6
   16da4:	b.mi	16e10 <mpfr_integer_p@@Base+0xbc>  // b.first
   16da8:	ldr	x8, [x21, x20, lsl #3]
   16dac:	lsl	x8, x8, x19
   16db0:	cbnz	x8, 16dcc <mpfr_integer_p@@Base+0x78>
   16db4:	sub	x8, x21, #0x8
   16db8:	subs	x9, x20, #0x1
   16dbc:	b.lt	16de0 <mpfr_integer_p@@Base+0x8c>  // b.tstop
   16dc0:	ldr	x10, [x8, x20, lsl #3]
   16dc4:	mov	x20, x9
   16dc8:	cbz	x10, 16db8 <mpfr_integer_p@@Base+0x64>
   16dcc:	mov	w0, wzr
   16dd0:	ldp	x20, x19, [sp, #32]
   16dd4:	ldr	x21, [sp, #16]
   16dd8:	ldp	x29, x30, [sp], #48
   16ddc:	ret
   16de0:	mov	w0, #0x1                   	// #1
   16de4:	ldp	x20, x19, [sp, #32]
   16de8:	ldr	x21, [sp, #16]
   16dec:	ldp	x29, x30, [sp], #48
   16df0:	ret
   16df4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   16df8:	cmp	x19, x8
   16dfc:	cset	w0, eq  // eq = none
   16e00:	ldp	x20, x19, [sp, #32]
   16e04:	ldr	x21, [sp, #16]
   16e08:	ldp	x29, x30, [sp], #48
   16e0c:	ret
   16e10:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16e14:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   16e18:	add	x0, x0, #0x69d
   16e1c:	add	x2, x2, #0x6a9
   16e20:	mov	w1, #0x34                  	// #52
   16e24:	bl	cb20 <mpfr_assert_fail@plt>
   16e28:	ldr	x8, [x21, x20, lsl #3]
   16e2c:	lsl	x8, x8, x19
   16e30:	cbnz	x8, 16dcc <mpfr_integer_p@@Base+0x78>
   16e34:	b	16db4 <mpfr_integer_p@@Base+0x60>

0000000000016e38 <mpfr_inf_p@@Base>:
   16e38:	ldr	x8, [x0, #16]
   16e3c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   16e40:	cmp	x8, x9
   16e44:	cset	w0, eq  // eq = none
   16e48:	ret

0000000000016e4c <mpfr_nan_p@@Base>:
   16e4c:	ldr	x8, [x0, #16]
   16e50:	mov	x9, #0x2                   	// #2
   16e54:	movk	x9, #0x8000, lsl #48
   16e58:	cmp	x8, x9
   16e5c:	cset	w0, eq  // eq = none
   16e60:	ret

0000000000016e64 <mpfr_number_p@@Base>:
   16e64:	ldr	x8, [x0, #16]
   16e68:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   16e6c:	orr	x8, x8, #0x1
   16e70:	cmp	x8, x9
   16e74:	cset	w0, ne  // ne = any
   16e78:	ret

0000000000016e7c <mpfr_const_log2_internal@@Base>:
   16e7c:	stp	x29, x30, [sp, #-96]!
   16e80:	stp	x28, x27, [sp, #16]
   16e84:	stp	x26, x25, [sp, #32]
   16e88:	stp	x24, x23, [sp, #48]
   16e8c:	stp	x22, x21, [sp, #64]
   16e90:	stp	x20, x19, [sp, #80]
   16e94:	mov	x29, sp
   16e98:	sub	sp, sp, #0x100
   16e9c:	ldr	x22, [x0]
   16ea0:	mov	w8, #0x9                   	// #9
   16ea4:	mov	x9, #0xfffffffffffffeff    	// #-257
   16ea8:	movk	x9, #0x7fff, lsl #48
   16eac:	cmp	x22, #0x42d
   16eb0:	cinc	x8, x8, cs  // cs = hs, nlast
   16eb4:	add	x24, x8, x22
   16eb8:	cmp	x24, x9
   16ebc:	stur	xzr, [x29, #-224]
   16ec0:	b.gt	17248 <mpfr_const_log2_internal@@Base+0x3cc>
   16ec4:	sub	x8, x24, #0x1
   16ec8:	add	x9, x24, #0x3e
   16ecc:	cmp	x8, #0x0
   16ed0:	csel	x8, x9, x8, lt  // lt = tstop
   16ed4:	asr	x8, x8, #6
   16ed8:	mov	w19, w1
   16edc:	cmp	x24, #0x201
   16ee0:	add	x23, x8, #0x1
   16ee4:	stur	x0, [x29, #-240]
   16ee8:	b.lt	16efc <mpfr_const_log2_internal@@Base+0x80>  // b.tstop
   16eec:	lsl	x21, x23, #4
   16ef0:	mov	x0, x21
   16ef4:	bl	ccd0 <mpfr_allocate_func@plt>
   16ef8:	b	16f08 <mpfr_const_log2_internal@@Base+0x8c>
   16efc:	sub	x8, x29, #0xd8
   16f00:	mov	x21, xzr
   16f04:	add	x0, x8, #0x10
   16f08:	add	x8, x0, x23, lsl #3
   16f0c:	cmp	w19, #0x0
   16f10:	mov	x23, #0x5555555555555555    	// #6148914691236517205
   16f14:	mov	w20, #0x1                   	// #1
   16f18:	mov	w25, #0x40                  	// #64
   16f1c:	movk	x23, #0x5556
   16f20:	stp	x8, x24, [x29, #-48]
   16f24:	cinc	x8, x22, eq  // eq = none
   16f28:	stp	x21, x0, [x29, #-216]
   16f2c:	stur	x0, [x29, #-16]
   16f30:	stur	w20, [x29, #-32]
   16f34:	stur	x24, [x29, #-72]
   16f38:	stur	x8, [x29, #-248]
   16f3c:	stur	w19, [x29, #-228]
   16f40:	smulh	x8, x24, x23
   16f44:	add	x9, x24, #0x2
   16f48:	add	x19, x8, x8, lsr #63
   16f4c:	cmp	x9, #0x5
   16f50:	add	x26, x19, #0x1
   16f54:	stur	w20, [x29, #-64]
   16f58:	stur	x25, [x29, #-256]
   16f5c:	b.cc	1705c <mpfr_const_log2_internal@@Base+0x1e0>  // b.lo, b.ul, b.last
   16f60:	cmp	x26, #0x1
   16f64:	b.ls	17068 <mpfr_const_log2_internal@@Base+0x1ec>  // b.plast
   16f68:	clz	x8, x19
   16f6c:	mov	w9, #0x41                  	// #65
   16f70:	sub	x21, x9, x8
   16f74:	add	x8, x21, x21, lsl #1
   16f78:	lsl	x1, x8, #4
   16f7c:	cmp	x1, #0x4, lsl #12
   16f80:	b.hi	17084 <mpfr_const_log2_internal@@Base+0x208>  // b.pmore
   16f84:	add	x9, x1, #0xf
   16f88:	mov	x8, sp
   16f8c:	and	x9, x9, #0xfffffffffffffff0
   16f90:	sub	x25, x8, x9
   16f94:	mov	sp, x25
   16f98:	add	x28, x25, x21, lsl #4
   16f9c:	add	x27, x25, x21, lsl #5
   16fa0:	cbz	x21, 1709c <mpfr_const_log2_internal@@Base+0x220>
   16fa4:	lsl	x23, x21, #4
   16fa8:	mov	x19, xzr
   16fac:	add	x20, x25, x23
   16fb0:	add	x0, x25, x19
   16fb4:	bl	bfe0 <mpfr_mpz_init@plt>
   16fb8:	add	x0, x20, x19
   16fbc:	bl	bfe0 <mpfr_mpz_init@plt>
   16fc0:	add	x0, x27, x19
   16fc4:	bl	bfe0 <mpfr_mpz_init@plt>
   16fc8:	add	x19, x19, #0x10
   16fcc:	cmp	x23, x19
   16fd0:	b.ne	16fb0 <mpfr_const_log2_internal@@Base+0x134>  // b.any
   16fd4:	mov	x0, x25
   16fd8:	mov	x1, x28
   16fdc:	mov	x2, x27
   16fe0:	mov	x3, xzr
   16fe4:	mov	x4, x26
   16fe8:	mov	w5, wzr
   16fec:	bl	17280 <mpfr_const_log2@@Base+0x34>
   16ff0:	sub	x0, x29, #0x28
   16ff4:	mov	x1, x25
   16ff8:	mov	w2, wzr
   16ffc:	bl	c250 <mpfr_set_z@plt>
   17000:	sub	x0, x29, #0x48
   17004:	mov	x1, x27
   17008:	mov	w2, wzr
   1700c:	bl	c250 <mpfr_set_z@plt>
   17010:	sub	x0, x29, #0x28
   17014:	sub	x1, x29, #0x28
   17018:	sub	x2, x29, #0x48
   1701c:	mov	w3, wzr
   17020:	bl	c610 <mpfr_div@plt>
   17024:	cbz	x21, 170ec <mpfr_const_log2_internal@@Base+0x270>
   17028:	mov	x19, xzr
   1702c:	add	x21, x25, x21, lsl #5
   17030:	add	x20, x25, x23
   17034:	add	x0, x25, x19
   17038:	bl	c1b0 <mpfr_mpz_clear@plt>
   1703c:	add	x0, x20, x19
   17040:	bl	c1b0 <mpfr_mpz_clear@plt>
   17044:	add	x0, x21, x19
   17048:	bl	c1b0 <mpfr_mpz_clear@plt>
   1704c:	add	x19, x19, #0x10
   17050:	cmp	x23, x19
   17054:	b.ne	17034 <mpfr_const_log2_internal@@Base+0x1b8>  // b.any
   17058:	b	170ec <mpfr_const_log2_internal@@Base+0x270>
   1705c:	mov	w1, #0x30                  	// #48
   17060:	mov	w21, #0x1                   	// #1
   17064:	b	16f84 <mpfr_const_log2_internal@@Base+0x108>
   17068:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1706c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17070:	mov	w1, #0x94                  	// #148
   17074:	add	x0, x0, #0x6b1
   17078:	add	x2, x2, #0x6be
   1707c:	bl	cb20 <mpfr_assert_fail@plt>
   17080:	b	16f68 <mpfr_const_log2_internal@@Base+0xec>
   17084:	sub	x0, x29, #0xe0
   17088:	bl	be10 <mpfr_tmp_allocate@plt>
   1708c:	mov	x25, x0
   17090:	add	x28, x25, x21, lsl #4
   17094:	add	x27, x25, x21, lsl #5
   17098:	cbnz	x21, 16fa4 <mpfr_const_log2_internal@@Base+0x128>
   1709c:	mov	x0, x25
   170a0:	mov	x1, x28
   170a4:	mov	x2, x27
   170a8:	mov	x3, xzr
   170ac:	mov	x4, x26
   170b0:	mov	w5, wzr
   170b4:	bl	17280 <mpfr_const_log2@@Base+0x34>
   170b8:	sub	x0, x29, #0x28
   170bc:	mov	x1, x25
   170c0:	mov	w2, wzr
   170c4:	bl	c250 <mpfr_set_z@plt>
   170c8:	sub	x0, x29, #0x48
   170cc:	mov	x1, x27
   170d0:	mov	w2, wzr
   170d4:	bl	c250 <mpfr_set_z@plt>
   170d8:	sub	x0, x29, #0x28
   170dc:	sub	x1, x29, #0x28
   170e0:	sub	x2, x29, #0x48
   170e4:	mov	w3, wzr
   170e8:	bl	c610 <mpfr_div@plt>
   170ec:	mov	w8, #0x93e0                	// #37856
   170f0:	movk	w8, #0x4, lsl #16
   170f4:	mov	x19, #0xfffffffffffffeff    	// #-257
   170f8:	cmp	x22, x8
   170fc:	movk	x19, #0x7fff, lsl #48
   17100:	b.cc	171ec <mpfr_const_log2_internal@@Base+0x370>  // b.lo, b.ul, b.last
   17104:	ldur	x8, [x29, #-24]
   17108:	add	x9, x19, #0x105
   1710c:	cmp	x8, x9
   17110:	b.lt	17144 <mpfr_const_log2_internal@@Base+0x2c8>  // b.tstop
   17114:	ldur	x8, [x29, #-40]
   17118:	ldur	x0, [x29, #-16]
   1711c:	ldur	x3, [x29, #-248]
   17120:	sub	x2, x24, #0x2
   17124:	sub	x9, x8, #0x1
   17128:	add	x8, x8, #0x3e
   1712c:	cmp	x9, #0x0
   17130:	csel	x8, x8, x9, lt  // lt = tstop
   17134:	asr	x8, x8, #6
   17138:	add	x1, x8, #0x1
   1713c:	bl	c370 <mpfr_round_p@plt>
   17140:	cbnz	w0, 171ec <mpfr_const_log2_internal@@Base+0x370>
   17144:	ldur	x20, [x29, #-256]
   17148:	sub	x8, x19, x24
   1714c:	cmp	x20, x8
   17150:	b.gt	171d0 <mpfr_const_log2_internal@@Base+0x354>
   17154:	add	x24, x24, x20
   17158:	cmp	x24, #0x0
   1715c:	mov	x23, #0x5555555555555555    	// #6148914691236517205
   17160:	cinc	x8, x24, lt  // lt = tstop
   17164:	cmp	x24, x19
   17168:	mov	w20, #0x1                   	// #1
   1716c:	movk	x23, #0x5556
   17170:	b.gt	17248 <mpfr_const_log2_internal@@Base+0x3cc>
   17174:	asr	x25, x8, #1
   17178:	sub	x8, x24, #0x1
   1717c:	add	x9, x24, #0x3e
   17180:	cmp	x8, #0x0
   17184:	ldur	x1, [x29, #-216]
   17188:	csel	x8, x9, x8, lt  // lt = tstop
   1718c:	asr	x8, x8, #6
   17190:	add	x21, x8, #0x1
   17194:	lsl	x2, x21, #4
   17198:	stur	x2, [x29, #-216]
   1719c:	cbz	x1, 171ac <mpfr_const_log2_internal@@Base+0x330>
   171a0:	ldur	x0, [x29, #-208]
   171a4:	bl	c200 <mpfr_reallocate_func@plt>
   171a8:	b	171b4 <mpfr_const_log2_internal@@Base+0x338>
   171ac:	mov	x0, x2
   171b0:	bl	ccd0 <mpfr_allocate_func@plt>
   171b4:	add	x8, x0, x21, lsl #3
   171b8:	stur	x0, [x29, #-208]
   171bc:	stur	x0, [x29, #-16]
   171c0:	stur	w20, [x29, #-32]
   171c4:	stur	x24, [x29, #-72]
   171c8:	stp	x8, x24, [x29, #-48]
   171cc:	b	16f40 <mpfr_const_log2_internal@@Base+0xc4>
   171d0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   171d4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   171d8:	mov	w1, #0xb1                  	// #177
   171dc:	add	x0, x0, #0x6b1
   171e0:	add	x2, x2, #0x6c6
   171e4:	bl	cb20 <mpfr_assert_fail@plt>
   171e8:	b	17154 <mpfr_const_log2_internal@@Base+0x2d8>
   171ec:	ldur	w3, [x29, #-32]
   171f0:	ldur	x0, [x29, #-240]
   171f4:	ldur	w2, [x29, #-228]
   171f8:	sub	x1, x29, #0x28
   171fc:	bl	c690 <mpfr_set4@plt>
   17200:	ldur	x1, [x29, #-216]
   17204:	mov	w19, w0
   17208:	cbz	x1, 17214 <mpfr_const_log2_internal@@Base+0x398>
   1720c:	ldur	x0, [x29, #-208]
   17210:	bl	cc00 <mpfr_free_func@plt>
   17214:	ldur	x0, [x29, #-224]
   17218:	cbnz	x0, 17240 <mpfr_const_log2_internal@@Base+0x3c4>
   1721c:	mov	w0, w19
   17220:	mov	sp, x29
   17224:	ldp	x20, x19, [sp, #80]
   17228:	ldp	x22, x21, [sp, #64]
   1722c:	ldp	x24, x23, [sp, #48]
   17230:	ldp	x26, x25, [sp, #32]
   17234:	ldp	x28, x27, [sp, #16]
   17238:	ldp	x29, x30, [sp], #96
   1723c:	ret
   17240:	bl	c400 <mpfr_tmp_free@plt>
   17244:	b	1721c <mpfr_const_log2_internal@@Base+0x3a0>
   17248:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000001724c <mpfr_const_log2@@Base>:
   1724c:	stp	x29, x30, [sp, #-16]!
   17250:	mov	x29, sp
   17254:	mov	w2, w1
   17258:	mov	x8, x0
   1725c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17260:	ldr	x1, [x0, #2624]
   17264:	add	x0, x0, #0xa40
   17268:	blr	x1
   1726c:	mrs	x9, tpidr_el0
   17270:	add	x1, x9, x0
   17274:	mov	x0, x8
   17278:	ldp	x29, x30, [sp], #16
   1727c:	b	c380 <mpfr_cache@plt>
   17280:	stp	x29, x30, [sp, #-96]!
   17284:	add	x8, x3, #0x1
   17288:	stp	x24, x23, [sp, #48]
   1728c:	stp	x22, x21, [sp, #64]
   17290:	stp	x20, x19, [sp, #80]
   17294:	mov	x23, x3
   17298:	mov	x20, x2
   1729c:	mov	x19, x1
   172a0:	cmp	x8, x4
   172a4:	mov	x21, x0
   172a8:	str	x27, [sp, #16]
   172ac:	stp	x26, x25, [sp, #32]
   172b0:	mov	x29, sp
   172b4:	b.ne	1731c <mpfr_const_log2@@Base+0xd0>  // b.any
   172b8:	cbz	x23, 1747c <mpfr_const_log2@@Base+0x230>
   172bc:	mov	x0, x19
   172c0:	mov	x1, x23
   172c4:	bl	bd00 <__gmpz_set_ui@plt>
   172c8:	ldr	w8, [x19, #4]
   172cc:	lsr	x9, x23, #61
   172d0:	neg	w8, w8
   172d4:	str	w8, [x19, #4]
   172d8:	cbz	x9, 17488 <mpfr_const_log2@@Base+0x23c>
   172dc:	mov	x0, x20
   172e0:	mov	x1, x23
   172e4:	bl	bd00 <__gmpz_set_ui@plt>
   172e8:	mov	w2, #0x1                   	// #1
   172ec:	mov	x0, x20
   172f0:	mov	x1, x20
   172f4:	bl	c230 <__gmpz_mul_2exp@plt>
   172f8:	mov	w2, #0x1                   	// #1
   172fc:	mov	x0, x20
   17300:	mov	x1, x20
   17304:	bl	c360 <__gmpz_add_ui@plt>
   17308:	mov	w2, #0x2                   	// #2
   1730c:	mov	x0, x20
   17310:	mov	x1, x20
   17314:	bl	c230 <__gmpz_mul_2exp@plt>
   17318:	b	17498 <mpfr_const_log2@@Base+0x24c>
   1731c:	mov	x24, x4
   17320:	lsr	x8, x4, #1
   17324:	and	w9, w23, w24
   17328:	add	x8, x8, x23, lsr #1
   1732c:	and	x9, x9, #0x1
   17330:	add	x26, x8, x9
   17334:	mov	w22, w5
   17338:	mov	w5, #0x1                   	// #1
   1733c:	mov	x0, x21
   17340:	mov	x1, x19
   17344:	mov	x2, x20
   17348:	mov	x3, x23
   1734c:	mov	x4, x26
   17350:	bl	17280 <mpfr_const_log2@@Base+0x34>
   17354:	add	x27, x21, #0x10
   17358:	add	x25, x19, #0x10
   1735c:	add	x23, x20, #0x10
   17360:	mov	x0, x27
   17364:	mov	x1, x25
   17368:	mov	x2, x23
   1736c:	mov	x3, x26
   17370:	mov	x4, x24
   17374:	mov	w5, w22
   17378:	bl	17280 <mpfr_const_log2@@Base+0x34>
   1737c:	mov	x0, x21
   17380:	mov	x1, x21
   17384:	mov	x2, x23
   17388:	bl	c030 <__gmpz_mul@plt>
   1738c:	mov	x0, x27
   17390:	mov	x1, x27
   17394:	mov	x2, x19
   17398:	bl	c030 <__gmpz_mul@plt>
   1739c:	mov	x0, x21
   173a0:	mov	x1, x21
   173a4:	mov	x2, x27
   173a8:	bl	c9a0 <__gmpz_add@plt>
   173ac:	cbz	w22, 173c0 <mpfr_const_log2@@Base+0x174>
   173b0:	mov	x0, x19
   173b4:	mov	x1, x19
   173b8:	mov	x2, x25
   173bc:	bl	c030 <__gmpz_mul@plt>
   173c0:	mov	x0, x20
   173c4:	mov	x1, x20
   173c8:	mov	x2, x23
   173cc:	bl	c030 <__gmpz_mul@plt>
   173d0:	mov	x0, x21
   173d4:	mov	x1, xzr
   173d8:	bl	baf0 <__gmpz_scan1@plt>
   173dc:	cbz	x0, 17460 <mpfr_const_log2@@Base+0x214>
   173e0:	mov	x23, x0
   173e4:	mov	x0, x20
   173e8:	mov	x1, xzr
   173ec:	bl	baf0 <__gmpz_scan1@plt>
   173f0:	cmp	x0, x23
   173f4:	csel	x23, x0, x23, cc  // cc = lo, ul, last
   173f8:	cbz	w22, 17410 <mpfr_const_log2@@Base+0x1c4>
   173fc:	mov	x0, x19
   17400:	mov	x1, xzr
   17404:	bl	baf0 <__gmpz_scan1@plt>
   17408:	cmp	x0, x23
   1740c:	csel	x23, x0, x23, cc  // cc = lo, ul, last
   17410:	cbz	x23, 17460 <mpfr_const_log2@@Base+0x214>
   17414:	mov	x0, x21
   17418:	mov	x1, x21
   1741c:	mov	x2, x23
   17420:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   17424:	mov	x0, x20
   17428:	mov	x1, x20
   1742c:	mov	x2, x23
   17430:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   17434:	cbz	w22, 17460 <mpfr_const_log2@@Base+0x214>
   17438:	mov	x0, x19
   1743c:	mov	x1, x19
   17440:	mov	x2, x23
   17444:	ldp	x20, x19, [sp, #80]
   17448:	ldp	x22, x21, [sp, #64]
   1744c:	ldp	x24, x23, [sp, #48]
   17450:	ldp	x26, x25, [sp, #32]
   17454:	ldr	x27, [sp, #16]
   17458:	ldp	x29, x30, [sp], #96
   1745c:	b	c170 <__gmpz_fdiv_q_2exp@plt>
   17460:	ldp	x20, x19, [sp, #80]
   17464:	ldp	x22, x21, [sp, #64]
   17468:	ldp	x24, x23, [sp, #48]
   1746c:	ldp	x26, x25, [sp, #32]
   17470:	ldr	x27, [sp, #16]
   17474:	ldp	x29, x30, [sp], #96
   17478:	ret
   1747c:	mov	w1, #0x3                   	// #3
   17480:	mov	x0, x19
   17484:	bl	bd00 <__gmpz_set_ui@plt>
   17488:	mov	w1, #0x4                   	// #4
   1748c:	bfi	x1, x23, #3, #61
   17490:	mov	x0, x20
   17494:	bl	bd00 <__gmpz_set_ui@plt>
   17498:	mov	x0, x21
   1749c:	mov	x1, x19
   174a0:	ldp	x20, x19, [sp, #80]
   174a4:	ldp	x22, x21, [sp, #64]
   174a8:	ldp	x24, x23, [sp, #48]
   174ac:	ldp	x26, x25, [sp, #32]
   174b0:	ldr	x27, [sp, #16]
   174b4:	ldp	x29, x30, [sp], #96
   174b8:	b	bff0 <__gmpz_set@plt>

00000000000174bc <mpfr_log@@Base>:
   174bc:	sub	sp, sp, #0x160
   174c0:	stp	x29, x30, [sp, #256]
   174c4:	stp	x28, x27, [sp, #272]
   174c8:	stp	x26, x25, [sp, #288]
   174cc:	stp	x24, x23, [sp, #304]
   174d0:	stp	x22, x21, [sp, #320]
   174d4:	stp	x20, x19, [sp, #336]
   174d8:	ldr	x25, [x1, #16]
   174dc:	mov	x22, #0x2                   	// #2
   174e0:	movk	x22, #0x8000, lsl #48
   174e4:	add	x8, x22, #0x2
   174e8:	mov	x21, x1
   174ec:	cmp	x25, x8
   174f0:	mov	x19, x0
   174f4:	add	x29, sp, #0x100
   174f8:	str	w2, [sp, #36]
   174fc:	b.lt	179a0 <mpfr_log@@Base+0x4e4>  // b.tstop
   17500:	ldr	w8, [x21, #8]
   17504:	tbnz	w8, #31, 17a64 <mpfr_log@@Base+0x5a8>
   17508:	cmp	x25, #0x1
   1750c:	b.ne	17528 <mpfr_log@@Base+0x6c>  // b.any
   17510:	mov	w1, #0x1                   	// #1
   17514:	mov	x0, x21
   17518:	mov	x2, xzr
   1751c:	mov	w20, #0x1                   	// #1
   17520:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   17524:	cbz	w0, 17a30 <mpfr_log@@Base+0x574>
   17528:	ldr	x27, [x19]
   1752c:	subs	x20, x27, #0x1
   17530:	b.eq	179f4 <mpfr_log@@Base+0x538>  // b.none
   17534:	b.le	17a14 <mpfr_log@@Base+0x558>
   17538:	clz	x8, x20
   1753c:	mov	w9, #0x80                  	// #128
   17540:	sub	w8, w9, w8, lsl #1
   17544:	sxtw	x8, w8
   17548:	add	x9, x8, x27
   1754c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17550:	ldr	x1, [x0, #2640]
   17554:	add	x0, x0, #0xa50
   17558:	blr	x1
   1755c:	mrs	x26, tpidr_el0
   17560:	ldr	w12, [x26, x0]
   17564:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17568:	ldr	x1, [x0, #2576]
   1756c:	add	x0, x0, #0xa10
   17570:	blr	x1
   17574:	ldr	x13, [x26, x0]
   17578:	mov	x8, x0
   1757c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17580:	ldr	x1, [x0, #2608]
   17584:	add	x0, x0, #0xa30
   17588:	blr	x1
   1758c:	ldr	x14, [x26, x0]
   17590:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   17594:	str	x10, [x26, x8]
   17598:	sub	x8, x22, #0x10d
   1759c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   175a0:	cmp	x9, x8
   175a4:	str	x11, [x26, x0]
   175a8:	b.gt	17a90 <mpfr_log@@Base+0x5d4>
   175ac:	add	x8, x9, #0x9
   175b0:	add	x10, x9, #0x48
   175b4:	cmp	x8, #0x0
   175b8:	csel	x8, x10, x8, lt  // lt = tstop
   175bc:	asr	x8, x8, #6
   175c0:	add	x23, x9, #0xa
   175c4:	cmp	x9, #0x1f7
   175c8:	add	x28, x8, #0x1
   175cc:	str	w12, [sp, #32]
   175d0:	stp	x14, x13, [sp, #16]
   175d4:	b.lt	175e8 <mpfr_log@@Base+0x12c>  // b.tstop
   175d8:	lsl	x22, x28, #4
   175dc:	mov	x0, x22
   175e0:	bl	ccd0 <mpfr_allocate_func@plt>
   175e4:	b	175f4 <mpfr_log@@Base+0x138>
   175e8:	add	x8, sp, #0x28
   175ec:	mov	x22, xzr
   175f0:	add	x0, x8, #0x10
   175f4:	ldr	w9, [sp, #36]
   175f8:	stp	x22, x0, [sp, #40]
   175fc:	stur	x23, [x29, #-40]
   17600:	stur	x0, [x29, #-16]
   17604:	adrp	x22, 76000 <__gmpfr_l2b@@Base+0x2e0>
   17608:	adrp	x24, 76000 <__gmpfr_l2b@@Base+0x2e0>
   1760c:	ldr	x22, [x22, #3984]
   17610:	ldr	x24, [x24, #3944]
   17614:	cmp	w9, #0x0
   17618:	mov	x9, #0x2                   	// #2
   1761c:	add	x8, x0, x28, lsl #3
   17620:	mov	x20, #0x4                   	// #4
   17624:	movk	x9, #0x8000, lsl #48
   17628:	mov	w10, #0x1                   	// #1
   1762c:	movk	x20, #0x8000, lsl #48
   17630:	sub	x9, x9, #0x103
   17634:	stur	x8, [x29, #-48]
   17638:	cinc	x27, x27, eq  // eq = none
   1763c:	mov	w8, #0x40                  	// #64
   17640:	stur	w10, [x29, #-32]
   17644:	stur	x23, [x29, #-72]
   17648:	stp	x9, x8, [sp]
   1764c:	add	x8, x23, #0x3
   17650:	add	x9, x23, #0x4
   17654:	cmp	x8, #0x0
   17658:	csel	x8, x9, x8, lt  // lt = tstop
   1765c:	asr	x8, x8, #1
   17660:	sub	x28, x8, x25
   17664:	sub	x0, x29, #0x48
   17668:	mov	x1, x21
   1766c:	mov	x2, x28
   17670:	mov	w3, wzr
   17674:	stur	w10, [x29, #-64]
   17678:	bl	bbe0 <mpfr_mul_2si@plt>
   1767c:	sub	x0, x29, #0x28
   17680:	sub	x2, x29, #0x48
   17684:	mov	x1, x22
   17688:	mov	w3, wzr
   1768c:	bl	c610 <mpfr_div@plt>
   17690:	sub	x0, x29, #0x48
   17694:	sub	x2, x29, #0x28
   17698:	mov	x1, x24
   1769c:	mov	w3, wzr
   176a0:	bl	ba60 <mpfr_agm@plt>
   176a4:	sub	x0, x29, #0x48
   176a8:	sub	x1, x29, #0x48
   176ac:	mov	w2, #0x1                   	// #1
   176b0:	mov	w3, wzr
   176b4:	bl	c2c0 <mpfr_mul_2ui@plt>
   176b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   176bc:	ldr	x1, [x0, #2688]
   176c0:	add	x0, x0, #0xa80
   176c4:	blr	x1
   176c8:	add	x1, x26, x0
   176cc:	sub	x0, x29, #0x28
   176d0:	mov	w2, wzr
   176d4:	bl	c380 <mpfr_cache@plt>
   176d8:	sub	x0, x29, #0x48
   176dc:	sub	x1, x29, #0x28
   176e0:	sub	x2, x29, #0x48
   176e4:	mov	w3, wzr
   176e8:	bl	c610 <mpfr_div@plt>
   176ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   176f0:	ldr	x1, [x0, #2624]
   176f4:	add	x0, x0, #0xa40
   176f8:	blr	x1
   176fc:	add	x1, x26, x0
   17700:	sub	x0, x29, #0x28
   17704:	mov	w2, wzr
   17708:	bl	c380 <mpfr_cache@plt>
   1770c:	sub	x0, x29, #0x28
   17710:	sub	x1, x29, #0x28
   17714:	mov	x2, x28
   17718:	mov	w3, wzr
   1771c:	bl	c950 <mpfr_mul_si@plt>
   17720:	sub	x0, x29, #0x28
   17724:	sub	x1, x29, #0x48
   17728:	sub	x2, x29, #0x28
   1772c:	mov	w3, wzr
   17730:	bl	bbc0 <mpfr_sub@plt>
   17734:	ldur	x8, [x29, #-24]
   17738:	mov	x10, #0x4                   	// #4
   1773c:	movk	x10, #0x8000, lsl #48
   17740:	cmp	x8, x20
   17744:	b.lt	177b0 <mpfr_log@@Base+0x2f4>  // b.tstop
   17748:	ldur	x9, [x29, #-56]
   1774c:	cmp	x9, x10
   17750:	b.lt	177b0 <mpfr_log@@Base+0x2f4>  // b.tstop
   17754:	ldur	x10, [x29, #-40]
   17758:	sub	x8, x9, x8
   1775c:	ldur	x0, [x29, #-16]
   17760:	bic	x28, x8, x8, asr #63
   17764:	sub	x9, x10, #0x1
   17768:	add	x10, x10, #0x3e
   1776c:	cmp	x9, #0x0
   17770:	csel	x9, x10, x9, lt  // lt = tstop
   17774:	sub	x8, x23, x28
   17778:	asr	x9, x9, #6
   1777c:	add	x1, x9, #0x1
   17780:	sub	x2, x8, #0x4
   17784:	mov	x3, x27
   17788:	bl	c370 <mpfr_round_p@plt>
   1778c:	cbnz	w0, 178dc <mpfr_log@@Base+0x420>
   17790:	subs	x20, x23, #0x1
   17794:	b.eq	17898 <mpfr_log@@Base+0x3dc>  // b.none
   17798:	b.le	178c0 <mpfr_log@@Base+0x404>
   1779c:	clz	x8, x20
   177a0:	mov	w9, #0x40                  	// #64
   177a4:	sub	x8, x9, x8
   177a8:	add	x8, x8, x28
   177ac:	b	177c8 <mpfr_log@@Base+0x30c>
   177b0:	subs	x28, x23, #0x1
   177b4:	b.eq	17890 <mpfr_log@@Base+0x3d4>  // b.none
   177b8:	b.le	178a4 <mpfr_log@@Base+0x3e8>
   177bc:	clz	x8, x28
   177c0:	mov	w9, #0x40                  	// #64
   177c4:	sub	x8, x9, x8
   177c8:	add	x23, x8, x23
   177cc:	mov	x8, #0x2                   	// #2
   177d0:	ldr	x20, [sp, #8]
   177d4:	movk	x8, #0x8000, lsl #48
   177d8:	sub	x8, x8, x23
   177dc:	sub	x8, x8, #0x103
   177e0:	cmp	x20, x8
   177e4:	b.gt	17874 <mpfr_log@@Base+0x3b8>
   177e8:	ldr	x9, [sp]
   177ec:	add	x23, x23, x20
   177f0:	cmp	x23, #0x0
   177f4:	cinc	x8, x23, lt  // lt = tstop
   177f8:	cmp	x23, x9
   177fc:	b.gt	17a90 <mpfr_log@@Base+0x5d4>
   17800:	asr	x8, x8, #1
   17804:	str	x8, [sp, #8]
   17808:	sub	x8, x23, #0x1
   1780c:	add	x9, x23, #0x3e
   17810:	cmp	x8, #0x0
   17814:	ldr	x1, [sp, #40]
   17818:	csel	x8, x9, x8, lt  // lt = tstop
   1781c:	asr	x8, x8, #6
   17820:	add	x28, x8, #0x1
   17824:	lsl	x2, x28, #4
   17828:	str	x2, [sp, #40]
   1782c:	cbz	x1, 1783c <mpfr_log@@Base+0x380>
   17830:	ldr	x0, [sp, #48]
   17834:	bl	c200 <mpfr_reallocate_func@plt>
   17838:	b	17844 <mpfr_log@@Base+0x388>
   1783c:	mov	x0, x2
   17840:	bl	ccd0 <mpfr_allocate_func@plt>
   17844:	mov	w10, #0x1                   	// #1
   17848:	add	x8, x0, x28, lsl #3
   1784c:	str	x0, [sp, #48]
   17850:	stur	x0, [x29, #-16]
   17854:	stur	w10, [x29, #-32]
   17858:	stur	x23, [x29, #-72]
   1785c:	stp	x8, x23, [x29, #-48]
   17860:	adrp	x22, 76000 <__gmpfr_l2b@@Base+0x2e0>
   17864:	ldr	x22, [x22, #3984]
   17868:	mov	x20, #0x4                   	// #4
   1786c:	movk	x20, #0x8000, lsl #48
   17870:	b	1764c <mpfr_log@@Base+0x190>
   17874:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17878:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   1787c:	mov	w1, #0xb5                  	// #181
   17880:	add	x0, x0, #0x709
   17884:	add	x2, x2, #0xcf6
   17888:	bl	cb20 <mpfr_assert_fail@plt>
   1788c:	b	177e8 <mpfr_log@@Base+0x32c>
   17890:	mov	x8, xzr
   17894:	b	177c8 <mpfr_log@@Base+0x30c>
   17898:	mov	x8, xzr
   1789c:	add	x8, xzr, x28
   178a0:	b	177c8 <mpfr_log@@Base+0x30c>
   178a4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   178a8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   178ac:	mov	w1, #0xb2                  	// #178
   178b0:	add	x0, x0, #0x709
   178b4:	add	x2, x2, #0x70f
   178b8:	bl	cb20 <mpfr_assert_fail@plt>
   178bc:	b	177bc <mpfr_log@@Base+0x300>
   178c0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   178c4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   178c8:	mov	w1, #0xac                  	// #172
   178cc:	add	x0, x0, #0x709
   178d0:	add	x2, x2, #0x70f
   178d4:	bl	cb20 <mpfr_assert_fail@plt>
   178d8:	b	1779c <mpfr_log@@Base+0x2e0>
   178dc:	ldur	w3, [x29, #-32]
   178e0:	ldr	w2, [sp, #36]
   178e4:	sub	x1, x29, #0x28
   178e8:	mov	x0, x19
   178ec:	bl	c690 <mpfr_set4@plt>
   178f0:	ldr	x1, [sp, #40]
   178f4:	mov	w21, w0
   178f8:	cbz	x1, 17904 <mpfr_log@@Base+0x448>
   178fc:	ldr	x0, [sp, #48]
   17900:	bl	cc00 <mpfr_free_func@plt>
   17904:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17908:	ldr	x1, [x0, #2640]
   1790c:	add	x0, x0, #0xa50
   17910:	blr	x1
   17914:	ldr	w9, [sp, #32]
   17918:	str	w9, [x26, x0]
   1791c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17920:	ldr	x1, [x0, #2576]
   17924:	add	x0, x0, #0xa10
   17928:	blr	x1
   1792c:	ldr	x10, [sp, #24]
   17930:	str	x10, [x26, x0]
   17934:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17938:	ldr	x1, [x0, #2608]
   1793c:	add	x0, x0, #0xa30
   17940:	blr	x1
   17944:	ldr	x11, [sp, #16]
   17948:	str	x11, [x26, x0]
   1794c:	ldr	x8, [x19, #16]
   17950:	cmp	x8, x11
   17954:	b.gt	179fc <mpfr_log@@Base+0x540>
   17958:	cmp	x8, x10
   1795c:	b.lt	179fc <mpfr_log@@Base+0x540>  // b.tstop
   17960:	cbz	w21, 1797c <mpfr_log@@Base+0x4c0>
   17964:	orr	w8, w9, #0x8
   17968:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1796c:	ldr	x1, [x0, #2640]
   17970:	add	x0, x0, #0xa50
   17974:	blr	x1
   17978:	str	w8, [x26, x0]
   1797c:	mov	w0, w21
   17980:	ldp	x20, x19, [sp, #336]
   17984:	ldp	x22, x21, [sp, #320]
   17988:	ldp	x24, x23, [sp, #304]
   1798c:	ldp	x26, x25, [sp, #288]
   17990:	ldp	x28, x27, [sp, #272]
   17994:	ldp	x29, x30, [sp, #256]
   17998:	add	sp, sp, #0x160
   1799c:	ret
   179a0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   179a4:	cmp	x25, x8
   179a8:	b.eq	17a44 <mpfr_log@@Base+0x588>  // b.none
   179ac:	mov	x8, #0x2                   	// #2
   179b0:	movk	x8, #0x8000, lsl #48
   179b4:	cmp	x25, x8
   179b8:	b.eq	17a64 <mpfr_log@@Base+0x5a8>  // b.none
   179bc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   179c0:	mov	w9, #0xffffffff            	// #-1
   179c4:	str	x8, [x19, #16]
   179c8:	str	w9, [x19, #8]
   179cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   179d0:	ldr	x1, [x0, #2640]
   179d4:	add	x0, x0, #0xa50
   179d8:	blr	x1
   179dc:	mrs	x8, tpidr_el0
   179e0:	ldr	w9, [x8, x0]
   179e4:	mov	w21, wzr
   179e8:	orr	w9, w9, #0x20
   179ec:	str	w9, [x8, x0]
   179f0:	b	1797c <mpfr_log@@Base+0x4c0>
   179f4:	mov	x8, xzr
   179f8:	b	17548 <mpfr_log@@Base+0x8c>
   179fc:	ldr	w2, [sp, #36]
   17a00:	mov	x0, x19
   17a04:	mov	w1, w21
   17a08:	bl	cb10 <mpfr_check_range@plt>
   17a0c:	mov	w21, w0
   17a10:	b	1797c <mpfr_log@@Base+0x4c0>
   17a14:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17a18:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   17a1c:	add	x0, x0, #0x709
   17a20:	add	x2, x2, #0xc16
   17a24:	mov	w1, #0x70                  	// #112
   17a28:	bl	cb20 <mpfr_assert_fail@plt>
   17a2c:	b	17538 <mpfr_log@@Base+0x7c>
   17a30:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   17a34:	mov	w21, wzr
   17a38:	str	x8, [x19, #16]
   17a3c:	str	w20, [x19, #8]
   17a40:	b	1797c <mpfr_log@@Base+0x4c0>
   17a44:	ldr	w8, [x21, #8]
   17a48:	tbnz	w8, #31, 17a64 <mpfr_log@@Base+0x5a8>
   17a4c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   17a50:	mov	w9, #0x1                   	// #1
   17a54:	mov	w21, wzr
   17a58:	str	x8, [x19, #16]
   17a5c:	str	w9, [x19, #8]
   17a60:	b	1797c <mpfr_log@@Base+0x4c0>
   17a64:	str	x22, [x19, #16]
   17a68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17a6c:	ldr	x1, [x0, #2640]
   17a70:	add	x0, x0, #0xa50
   17a74:	blr	x1
   17a78:	mrs	x8, tpidr_el0
   17a7c:	ldr	w9, [x8, x0]
   17a80:	mov	w21, wzr
   17a84:	orr	w9, w9, #0x4
   17a88:	str	w9, [x8, x0]
   17a8c:	b	1797c <mpfr_log@@Base+0x4c0>
   17a90:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000017a94 <mpfr_modf@@Base>:
   17a94:	stp	x29, x30, [sp, #-48]!
   17a98:	stp	x22, x21, [sp, #16]
   17a9c:	stp	x20, x19, [sp, #32]
   17aa0:	mov	w22, w3
   17aa4:	mov	x19, x1
   17aa8:	mov	x20, x0
   17aac:	cmp	x0, x1
   17ab0:	mov	x21, x2
   17ab4:	mov	x29, sp
   17ab8:	b.eq	17c88 <mpfr_modf@@Base+0x1f4>  // b.none
   17abc:	ldr	x8, [x21, #16]
   17ac0:	mov	x9, #0x2                   	// #2
   17ac4:	movk	x9, #0x8000, lsl #48
   17ac8:	add	x10, x9, #0x2
   17acc:	cmp	x8, x10
   17ad0:	b.lt	17ca4 <mpfr_modf@@Base+0x210>  // b.tstop
   17ad4:	cmp	x8, #0x0
   17ad8:	b.le	17b1c <mpfr_modf@@Base+0x88>
   17adc:	ldr	x9, [x21]
   17ae0:	cmp	x8, x9
   17ae4:	b.ge	17b40 <mpfr_modf@@Base+0xac>  // b.tcont
   17ae8:	cmp	x20, x21
   17aec:	b.eq	17bb0 <mpfr_modf@@Base+0x11c>  // b.none
   17af0:	mov	x0, x20
   17af4:	mov	x1, x21
   17af8:	mov	w2, w22
   17afc:	bl	bf80 <mpfr_rint_trunc@plt>
   17b00:	mov	w20, w0
   17b04:	mov	x0, x19
   17b08:	mov	x1, x21
   17b0c:	mov	w2, w22
   17b10:	bl	bf10 <mpfr_frac@plt>
   17b14:	mov	w19, w0
   17b18:	b	17be0 <mpfr_modf@@Base+0x14c>
   17b1c:	cmp	x19, x21
   17b20:	b.eq	17b64 <mpfr_modf@@Base+0xd0>  // b.none
   17b24:	ldr	w3, [x21, #8]
   17b28:	mov	x0, x19
   17b2c:	mov	x1, x21
   17b30:	mov	w2, w22
   17b34:	bl	c690 <mpfr_set4@plt>
   17b38:	mov	w8, w0
   17b3c:	b	17b68 <mpfr_modf@@Base+0xd4>
   17b40:	cmp	x20, x21
   17b44:	b.eq	17c30 <mpfr_modf@@Base+0x19c>  // b.none
   17b48:	ldr	w3, [x21, #8]
   17b4c:	mov	x0, x20
   17b50:	mov	x1, x21
   17b54:	mov	w2, w22
   17b58:	bl	c690 <mpfr_set4@plt>
   17b5c:	mov	w8, w0
   17b60:	b	17c34 <mpfr_modf@@Base+0x1a0>
   17b64:	mov	w8, wzr
   17b68:	ldr	w9, [x21, #8]
   17b6c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   17b70:	str	x10, [x20, #16]
   17b74:	str	w9, [x20, #8]
   17b78:	cbz	w8, 17c74 <mpfr_modf@@Base+0x1e0>
   17b7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17b80:	ldr	x1, [x0, #2640]
   17b84:	add	x0, x0, #0xa50
   17b88:	blr	x1
   17b8c:	mrs	x9, tpidr_el0
   17b90:	ldr	w10, [x9, x0]
   17b94:	cmp	w8, #0x1
   17b98:	mov	w8, #0x4                   	// #4
   17b9c:	mov	w11, #0x8                   	// #8
   17ba0:	orr	w10, w10, #0x8
   17ba4:	str	w10, [x9, x0]
   17ba8:	csel	w8, w11, w8, lt  // lt = tstop
   17bac:	b	17c74 <mpfr_modf@@Base+0x1e0>
   17bb0:	cmp	x20, x19
   17bb4:	b.eq	17d18 <mpfr_modf@@Base+0x284>  // b.none
   17bb8:	mov	x0, x19
   17bbc:	mov	x1, x20
   17bc0:	mov	w2, w22
   17bc4:	bl	bf10 <mpfr_frac@plt>
   17bc8:	mov	w19, w0
   17bcc:	mov	x0, x20
   17bd0:	mov	x1, x20
   17bd4:	mov	w2, w22
   17bd8:	bl	bf80 <mpfr_rint_trunc@plt>
   17bdc:	mov	w20, w0
   17be0:	cmp	w20, #0x1
   17be4:	mov	w8, #0x1                   	// #1
   17be8:	cinc	w8, w8, lt  // lt = tstop
   17bec:	cmp	w20, #0x0
   17bf0:	mov	w9, #0x4                   	// #4
   17bf4:	mov	w10, #0x8                   	// #8
   17bf8:	csel	w8, wzr, w8, eq  // eq = none
   17bfc:	cmp	w19, #0x1
   17c00:	csel	w9, w10, w9, lt  // lt = tstop
   17c04:	cmp	w19, #0x0
   17c08:	csel	w9, wzr, w9, eq  // eq = none
   17c0c:	orr	w8, w9, w8
   17c10:	cbz	w8, 17c74 <mpfr_modf@@Base+0x1e0>
   17c14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17c18:	ldr	x1, [x0, #2640]
   17c1c:	add	x0, x0, #0xa50
   17c20:	blr	x1
   17c24:	mrs	x9, tpidr_el0
   17c28:	ldr	w10, [x9, x0]
   17c2c:	b	17c6c <mpfr_modf@@Base+0x1d8>
   17c30:	mov	w8, wzr
   17c34:	ldr	w9, [x21, #8]
   17c38:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   17c3c:	str	x10, [x19, #16]
   17c40:	str	w9, [x19, #8]
   17c44:	cbz	w8, 17c74 <mpfr_modf@@Base+0x1e0>
   17c48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17c4c:	ldr	x1, [x0, #2640]
   17c50:	add	x0, x0, #0xa50
   17c54:	blr	x1
   17c58:	mrs	x9, tpidr_el0
   17c5c:	ldr	w10, [x9, x0]
   17c60:	cmp	w8, #0x1
   17c64:	mov	w8, #0x1                   	// #1
   17c68:	cinc	w8, w8, lt  // lt = tstop
   17c6c:	orr	w10, w10, #0x8
   17c70:	str	w10, [x9, x0]
   17c74:	ldp	x20, x19, [sp, #32]
   17c78:	ldp	x22, x21, [sp, #16]
   17c7c:	mov	w0, w8
   17c80:	ldp	x29, x30, [sp], #48
   17c84:	ret
   17c88:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17c8c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17c90:	add	x0, x0, #0x717
   17c94:	add	x2, x2, #0x71e
   17c98:	mov	w1, #0x2b                  	// #43
   17c9c:	bl	cb20 <mpfr_assert_fail@plt>
   17ca0:	b	17abc <mpfr_modf@@Base+0x28>
   17ca4:	cmp	x8, x9
   17ca8:	b.ne	17cd8 <mpfr_modf@@Base+0x244>  // b.any
   17cac:	str	x9, [x20, #16]
   17cb0:	str	x9, [x19, #16]
   17cb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17cb8:	ldr	x1, [x0, #2640]
   17cbc:	add	x0, x0, #0xa50
   17cc0:	blr	x1
   17cc4:	mrs	x9, tpidr_el0
   17cc8:	ldr	w10, [x9, x0]
   17ccc:	mov	w8, wzr
   17cd0:	orr	w10, w10, #0x4
   17cd4:	b	17c70 <mpfr_modf@@Base+0x1dc>
   17cd8:	ldr	w9, [x21, #8]
   17cdc:	str	w9, [x20, #8]
   17ce0:	ldr	w10, [x21, #8]
   17ce4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17ce8:	cmp	x8, x9
   17cec:	mov	w8, wzr
   17cf0:	str	w10, [x19, #8]
   17cf4:	b.ne	17d08 <mpfr_modf@@Base+0x274>  // b.any
   17cf8:	str	x9, [x20, #16]
   17cfc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   17d00:	str	x9, [x19, #16]
   17d04:	b	17c74 <mpfr_modf@@Base+0x1e0>
   17d08:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   17d0c:	str	x9, [x20, #16]
   17d10:	str	x9, [x19, #16]
   17d14:	b	17c74 <mpfr_modf@@Base+0x1e0>
   17d18:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17d1c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   17d20:	add	x0, x0, #0x717
   17d24:	add	x2, x2, #0x729
   17d28:	mov	w1, #0x60                  	// #96
   17d2c:	bl	cb20 <mpfr_assert_fail@plt>
   17d30:	b	17bb8 <mpfr_modf@@Base+0x124>

0000000000017d34 <mpfr_mul_2exp@@Base>:
   17d34:	b	c2c0 <mpfr_mul_2ui@plt>

0000000000017d38 <mpfr_mul_2si@@Base>:
   17d38:	stp	x29, x30, [sp, #-80]!
   17d3c:	stp	x24, x23, [sp, #32]
   17d40:	stp	x22, x21, [sp, #48]
   17d44:	stp	x20, x19, [sp, #64]
   17d48:	ldr	x24, [x1, #16]
   17d4c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   17d50:	mov	w20, w3
   17d54:	mov	x8, x1
   17d58:	cmp	x24, x9
   17d5c:	mov	x19, x0
   17d60:	str	x25, [sp, #16]
   17d64:	mov	x29, sp
   17d68:	b.le	18174 <mpfr_mul_2si@@Base+0x43c>
   17d6c:	mov	x21, x2
   17d70:	cmp	x19, x8
   17d74:	b.eq	17dc4 <mpfr_mul_2si@@Base+0x8c>  // b.none
   17d78:	ldr	w9, [x8, #8]
   17d7c:	ldr	x14, [x19]
   17d80:	ldr	x22, [x19, #24]
   17d84:	str	w9, [x19, #8]
   17d88:	ldr	x11, [x8]
   17d8c:	cmp	x14, x11
   17d90:	b.ne	17e24 <mpfr_mul_2si@@Base+0xec>  // b.any
   17d94:	ldr	x1, [x8, #24]
   17d98:	cmp	x22, x1
   17d9c:	b.eq	17dc4 <mpfr_mul_2si@@Base+0x8c>  // b.none
   17da0:	sub	x8, x14, #0x1
   17da4:	add	x9, x14, #0x3e
   17da8:	cmp	x8, #0x0
   17dac:	csel	x8, x9, x8, lt  // lt = tstop
   17db0:	asr	x8, x8, #6
   17db4:	lsl	x8, x8, #3
   17db8:	add	x2, x8, #0x8
   17dbc:	mov	x0, x22
   17dc0:	bl	ba70 <memcpy@plt>
   17dc4:	mov	w23, wzr
   17dc8:	tbnz	x21, #63, 1804c <mpfr_mul_2si@@Base+0x314>
   17dcc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   17dd0:	ldr	x1, [x0, #2608]
   17dd4:	add	x0, x0, #0xa30
   17dd8:	blr	x1
   17ddc:	mrs	x8, tpidr_el0
   17de0:	ldr	x8, [x8, x0]
   17de4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   17de8:	add	x9, x21, x9
   17dec:	cmp	x8, x9
   17df0:	b.lt	17e00 <mpfr_mul_2si@@Base+0xc8>  // b.tstop
   17df4:	sub	x8, x8, x21
   17df8:	cmp	x24, x8
   17dfc:	b.le	18080 <mpfr_mul_2si@@Base+0x348>
   17e00:	ldr	w2, [x19, #8]
   17e04:	mov	x0, x19
   17e08:	mov	w1, w20
   17e0c:	ldp	x20, x19, [sp, #64]
   17e10:	ldp	x22, x21, [sp, #48]
   17e14:	ldp	x24, x23, [sp, #32]
   17e18:	ldr	x25, [sp, #16]
   17e1c:	ldp	x29, x30, [sp], #80
   17e20:	b	bf90 <mpfr_overflow@plt>
   17e24:	sub	x9, x11, #0x1
   17e28:	add	x10, x11, #0x3e
   17e2c:	sub	x12, x14, #0x1
   17e30:	cmp	x9, #0x0
   17e34:	add	x13, x14, #0x3e
   17e38:	csel	x9, x10, x9, lt  // lt = tstop
   17e3c:	cmp	x12, #0x0
   17e40:	csel	x10, x13, x12, lt  // lt = tstop
   17e44:	asr	x9, x9, #6
   17e48:	asr	x10, x10, #6
   17e4c:	add	x17, x9, #0x1
   17e50:	cmp	x14, x11
   17e54:	add	x12, x10, #0x1
   17e58:	b.ge	181d0 <mpfr_mul_2si@@Base+0x498>  // b.tcont
   17e5c:	ldr	x11, [x8, #24]
   17e60:	neg	w13, w14
   17e64:	ands	x15, x13, #0x3f
   17e68:	mvn	x16, x10
   17e6c:	add	x13, x11, x17, lsl #3
   17e70:	add	x1, x13, x16, lsl #3
   17e74:	b.eq	18208 <mpfr_mul_2si@@Base+0x4d0>  // b.none
   17e78:	ldr	x16, [x1]
   17e7c:	sub	x15, x15, #0x1
   17e80:	mov	w18, #0x1                   	// #1
   17e84:	lsl	x18, x18, x15
   17e88:	sub	x0, x18, #0x1
   17e8c:	and	x15, x16, x18
   17e90:	and	x16, x16, x0
   17e94:	cbz	w20, 17e9c <mpfr_mul_2si@@Base+0x164>
   17e98:	cbnz	x15, 17ec4 <mpfr_mul_2si@@Base+0x18c>
   17e9c:	cbnz	x16, 17ec4 <mpfr_mul_2si@@Base+0x18c>
   17ea0:	sub	x17, x17, x12
   17ea4:	cbz	x17, 17ec4 <mpfr_mul_2si@@Base+0x18c>
   17ea8:	mvn	x16, x10
   17eac:	add	x17, x16, x9
   17eb0:	ldr	x16, [x11, x17, lsl #3]
   17eb4:	subs	x17, x17, #0x1
   17eb8:	cset	w0, cs  // cs = hs, nlast
   17ebc:	cbnz	x16, 17ec4 <mpfr_mul_2si@@Base+0x18c>
   17ec0:	tbnz	w0, #0, 17eb0 <mpfr_mul_2si@@Base+0x178>
   17ec4:	lsl	x25, x18, #1
   17ec8:	cmp	w20, #0x5
   17ecc:	b.eq	18020 <mpfr_mul_2si@@Base+0x2e8>  // b.none
   17ed0:	cmp	w20, #0x1
   17ed4:	b.eq	17f04 <mpfr_mul_2si@@Base+0x1cc>  // b.none
   17ed8:	cbnz	w20, 17ef4 <mpfr_mul_2si@@Base+0x1bc>
   17edc:	cbz	x15, 17f04 <mpfr_mul_2si@@Base+0x1cc>
   17ee0:	cbnz	x16, 17f28 <mpfr_mul_2si@@Base+0x1f0>
   17ee4:	ldr	x15, [x1]
   17ee8:	tst	x15, x25
   17eec:	b.ne	17f28 <mpfr_mul_2si@@Base+0x1f0>  // b.any
   17ef0:	b	17f0c <mpfr_mul_2si@@Base+0x1d4>
   17ef4:	ldr	w17, [x8, #8]
   17ef8:	add	w17, w20, w17, lsr #31
   17efc:	cmp	w17, #0x3
   17f00:	b.ne	17f20 <mpfr_mul_2si@@Base+0x1e8>  // b.any
   17f04:	orr	x9, x16, x15
   17f08:	cbz	x9, 18020 <mpfr_mul_2si@@Base+0x2e8>
   17f0c:	ldr	w8, [x8, #8]
   17f10:	neg	w23, w8
   17f14:	cmp	x22, x1
   17f18:	b.ne	1802c <mpfr_mul_2si@@Base+0x2f4>  // b.any
   17f1c:	b	18038 <mpfr_mul_2si@@Base+0x300>
   17f20:	orr	x15, x16, x15
   17f24:	cbz	x15, 18020 <mpfr_mul_2si@@Base+0x2e8>
   17f28:	ldr	x15, [x1]
   17f2c:	ldr	w23, [x8, #8]
   17f30:	adds	x8, x15, x25
   17f34:	str	x8, [x22]
   17f38:	b.cc	180c8 <mpfr_mul_2si@@Base+0x390>  // b.lo, b.ul, b.last
   17f3c:	mov	x17, xzr
   17f40:	mov	x15, xzr
   17f44:	mov	x8, x10
   17f48:	add	x14, x15, #0x1
   17f4c:	cmp	x14, x10
   17f50:	b.gt	1812c <mpfr_mul_2si@@Base+0x3f4>
   17f54:	lsl	x15, x15, #3
   17f58:	add	x16, x1, x15
   17f5c:	ldr	x16, [x16, #8]
   17f60:	add	x15, x22, x15
   17f64:	sub	x17, x17, #0x8
   17f68:	sub	x8, x8, #0x1
   17f6c:	adds	x16, x16, #0x1
   17f70:	str	x16, [x15, #8]
   17f74:	mov	x15, x14
   17f78:	b.cs	17f48 <mpfr_mul_2si@@Base+0x210>  // b.hs, b.nlast
   17f7c:	cmp	x1, x22
   17f80:	b.eq	18038 <mpfr_mul_2si@@Base+0x300>  // b.none
   17f84:	cmp	x14, x10
   17f88:	b.ge	18038 <mpfr_mul_2si@@Base+0x300>  // b.tcont
   17f8c:	sub	x15, x10, x14
   17f90:	cmp	x15, #0x4
   17f94:	add	x16, x14, #0x1
   17f98:	b.cc	17ffc <mpfr_mul_2si@@Base+0x2c4>  // b.lo, b.ul, b.last
   17f9c:	sub	x18, x22, x17
   17fa0:	add	x0, x18, #0x8
   17fa4:	cmp	x0, x13
   17fa8:	sub	x13, x1, x17
   17fac:	b.cs	17fc0 <mpfr_mul_2si@@Base+0x288>  // b.hs, b.nlast
   17fb0:	add	x12, x22, x12, lsl #3
   17fb4:	add	x17, x13, #0x8
   17fb8:	cmp	x17, x12
   17fbc:	b.cc	17ffc <mpfr_mul_2si@@Base+0x2c4>  // b.lo, b.ul, b.last
   17fc0:	and	x8, x8, #0xfffffffffffffffc
   17fc4:	and	x17, x15, #0xfffffffffffffffc
   17fc8:	add	x8, x8, x14
   17fcc:	add	x12, x18, #0x18
   17fd0:	add	x13, x13, #0x18
   17fd4:	add	x16, x8, #0x1
   17fd8:	mov	x8, x17
   17fdc:	ldp	q0, q1, [x13, #-16]
   17fe0:	add	x13, x13, #0x20
   17fe4:	subs	x8, x8, #0x4
   17fe8:	stp	q0, q1, [x12, #-16]
   17fec:	add	x12, x12, #0x20
   17ff0:	b.ne	17fdc <mpfr_mul_2si@@Base+0x2a4>  // b.any
   17ff4:	cmp	x15, x17
   17ff8:	b.eq	18038 <mpfr_mul_2si@@Base+0x300>  // b.none
   17ffc:	sub	x8, x16, x10
   18000:	add	x10, x22, x16, lsl #3
   18004:	add	x9, x11, x9, lsl #3
   18008:	ldr	x11, [x9, x8, lsl #3]
   1800c:	add	x8, x8, #0x1
   18010:	cmp	x8, #0x1
   18014:	str	x11, [x10], #8
   18018:	b.ne	18008 <mpfr_mul_2si@@Base+0x2d0>  // b.any
   1801c:	b	18038 <mpfr_mul_2si@@Base+0x300>
   18020:	mov	w23, wzr
   18024:	cmp	x22, x1
   18028:	b.eq	18038 <mpfr_mul_2si@@Base+0x300>  // b.none
   1802c:	lsl	x2, x12, #3
   18030:	mov	x0, x22
   18034:	bl	ba70 <memcpy@plt>
   18038:	ldr	x8, [x22]
   1803c:	neg	x9, x25
   18040:	and	x8, x8, x9
   18044:	str	x8, [x22]
   18048:	tbz	x21, #63, 17dcc <mpfr_mul_2si@@Base+0x94>
   1804c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18050:	ldr	x1, [x0, #2576]
   18054:	add	x0, x0, #0xa10
   18058:	blr	x1
   1805c:	mrs	x8, tpidr_el0
   18060:	ldr	x8, [x8, x0]
   18064:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   18068:	add	x9, x21, x9
   1806c:	cmp	x8, x9
   18070:	b.gt	1819c <mpfr_mul_2si@@Base+0x464>
   18074:	sub	x9, x8, x21
   18078:	cmp	x24, x9
   1807c:	b.lt	1819c <mpfr_mul_2si@@Base+0x464>  // b.tstop
   18080:	add	x8, x24, x21
   18084:	str	x8, [x19, #16]
   18088:	cbz	w23, 180ac <mpfr_mul_2si@@Base+0x374>
   1808c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18090:	ldr	x1, [x0, #2640]
   18094:	add	x0, x0, #0xa50
   18098:	blr	x1
   1809c:	mrs	x8, tpidr_el0
   180a0:	ldr	w9, [x8, x0]
   180a4:	orr	w9, w9, #0x8
   180a8:	str	w9, [x8, x0]
   180ac:	mov	w0, w23
   180b0:	ldp	x20, x19, [sp, #64]
   180b4:	ldp	x22, x21, [sp, #48]
   180b8:	ldp	x24, x23, [sp, #32]
   180bc:	ldr	x25, [sp, #16]
   180c0:	ldp	x29, x30, [sp], #80
   180c4:	ret
   180c8:	cmp	x14, #0x41
   180cc:	b.lt	18038 <mpfr_mul_2si@@Base+0x300>  // b.tstop
   180d0:	cmp	x1, x22
   180d4:	b.eq	18038 <mpfr_mul_2si@@Base+0x300>  // b.none
   180d8:	cmp	x10, #0x4
   180dc:	b.cc	18104 <mpfr_mul_2si@@Base+0x3cc>  // b.lo, b.ul, b.last
   180e0:	add	x8, x22, #0x8
   180e4:	sub	x14, x9, x10
   180e8:	cmp	x8, x13
   180ec:	add	x8, x11, x14, lsl #3
   180f0:	b.cs	1813c <mpfr_mul_2si@@Base+0x404>  // b.hs, b.nlast
   180f4:	add	x12, x22, x12, lsl #3
   180f8:	add	x13, x8, #0x8
   180fc:	cmp	x13, x12
   18100:	b.cs	1813c <mpfr_mul_2si@@Base+0x404>  // b.hs, b.nlast
   18104:	mov	w8, #0x1                   	// #1
   18108:	sub	x10, x8, x10
   1810c:	add	x8, x22, x8, lsl #3
   18110:	add	x9, x11, x9, lsl #3
   18114:	ldr	x11, [x9, x10, lsl #3]
   18118:	add	x10, x10, #0x1
   1811c:	cmp	x10, #0x1
   18120:	str	x11, [x8], #8
   18124:	b.ne	18114 <mpfr_mul_2si@@Base+0x3dc>  // b.any
   18128:	b	18038 <mpfr_mul_2si@@Base+0x300>
   1812c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18130:	add	x24, x24, #0x1
   18134:	str	x8, [x22, x10, lsl #3]
   18138:	b	18038 <mpfr_mul_2si@@Base+0x300>
   1813c:	and	x12, x10, #0xfffffffffffffffc
   18140:	add	x13, x8, #0x18
   18144:	orr	x8, x12, #0x1
   18148:	add	x14, x22, #0x18
   1814c:	mov	x15, x12
   18150:	ldp	q0, q1, [x13, #-16]
   18154:	add	x13, x13, #0x20
   18158:	subs	x15, x15, #0x4
   1815c:	stp	q0, q1, [x14, #-16]
   18160:	add	x14, x14, #0x20
   18164:	b.ne	18150 <mpfr_mul_2si@@Base+0x418>  // b.any
   18168:	cmp	x10, x12
   1816c:	b.eq	18038 <mpfr_mul_2si@@Base+0x300>  // b.none
   18170:	b	18108 <mpfr_mul_2si@@Base+0x3d0>
   18174:	ldr	w3, [x8, #8]
   18178:	mov	x0, x19
   1817c:	mov	w2, w20
   18180:	ldp	x20, x19, [sp, #64]
   18184:	ldp	x22, x21, [sp, #48]
   18188:	ldp	x24, x23, [sp, #32]
   1818c:	ldr	x25, [sp, #16]
   18190:	mov	x1, x8
   18194:	ldp	x29, x30, [sp], #80
   18198:	b	c690 <mpfr_set4@plt>
   1819c:	cbnz	w20, 18270 <mpfr_mul_2si@@Base+0x538>
   181a0:	mov	x9, #0x4000000000000000    	// #4611686018427387904
   181a4:	add	x9, x21, x9
   181a8:	cmp	x8, x9
   181ac:	b.gt	1826c <mpfr_mul_2si@@Base+0x534>
   181b0:	mvn	x9, x21
   181b4:	add	x8, x8, x9
   181b8:	cmp	x24, x8
   181bc:	b.lt	1826c <mpfr_mul_2si@@Base+0x534>  // b.tstop
   181c0:	ldr	w8, [x19, #8]
   181c4:	tbnz	w8, #31, 18258 <mpfr_mul_2si@@Base+0x520>
   181c8:	tbz	w23, #31, 18260 <mpfr_mul_2si@@Base+0x528>
   181cc:	b	18294 <mpfr_mul_2si@@Base+0x55c>
   181d0:	ldr	x1, [x8, #24]
   181d4:	sub	x23, x12, x17
   181d8:	add	x0, x22, x23, lsl #3
   181dc:	cmp	x0, x1
   181e0:	b.eq	181ec <mpfr_mul_2si@@Base+0x4b4>  // b.none
   181e4:	lsl	x2, x17, #3
   181e8:	bl	ba70 <memcpy@plt>
   181ec:	lsl	x2, x23, #3
   181f0:	mov	x0, x22
   181f4:	mov	w1, wzr
   181f8:	bl	c150 <memset@plt>
   181fc:	mov	w23, wzr
   18200:	tbz	x21, #63, 17dcc <mpfr_mul_2si@@Base+0x94>
   18204:	b	1804c <mpfr_mul_2si@@Base+0x314>
   18208:	ldur	x16, [x1, #-8]
   1820c:	and	x15, x16, #0x8000000000000000
   18210:	and	x16, x16, #0x7fffffffffffffff
   18214:	cbz	w20, 18224 <mpfr_mul_2si@@Base+0x4ec>
   18218:	cbz	x15, 18224 <mpfr_mul_2si@@Base+0x4ec>
   1821c:	mov	w25, #0x1                   	// #1
   18220:	b	17ec8 <mpfr_mul_2si@@Base+0x190>
   18224:	mov	w25, #0x1                   	// #1
   18228:	cbnz	x16, 17ec8 <mpfr_mul_2si@@Base+0x190>
   1822c:	sub	x17, x9, x12
   18230:	cbz	x17, 17ec8 <mpfr_mul_2si@@Base+0x190>
   18234:	sub	x16, x9, x10
   18238:	sub	x17, x16, #0x2
   1823c:	mov	w25, #0x1                   	// #1
   18240:	ldr	x16, [x11, x17, lsl #3]
   18244:	subs	x17, x17, #0x1
   18248:	cset	w18, cs  // cs = hs, nlast
   1824c:	cbnz	x16, 17ec8 <mpfr_mul_2si@@Base+0x190>
   18250:	tbnz	w18, #0, 18240 <mpfr_mul_2si@@Base+0x508>
   18254:	b	17ec8 <mpfr_mul_2si@@Base+0x190>
   18258:	cmp	w23, #0x1
   1825c:	b.ge	18294 <mpfr_mul_2si@@Base+0x55c>  // b.tcont
   18260:	mov	x0, x19
   18264:	bl	bf50 <mpfr_powerof2_raw@plt>
   18268:	cbz	w0, 18294 <mpfr_mul_2si@@Base+0x55c>
   1826c:	mov	w20, #0x1                   	// #1
   18270:	ldr	w2, [x19, #8]
   18274:	mov	x0, x19
   18278:	mov	w1, w20
   1827c:	ldp	x20, x19, [sp, #64]
   18280:	ldp	x22, x21, [sp, #48]
   18284:	ldp	x24, x23, [sp, #32]
   18288:	ldr	x25, [sp, #16]
   1828c:	ldp	x29, x30, [sp], #80
   18290:	b	c3c0 <mpfr_underflow@plt>
   18294:	mov	w20, wzr
   18298:	b	18270 <mpfr_mul_2si@@Base+0x538>

000000000001829c <mpfr_mul_2ui@@Base>:
   1829c:	stp	x29, x30, [sp, #-64]!
   182a0:	stp	x22, x21, [sp, #32]
   182a4:	stp	x20, x19, [sp, #48]
   182a8:	mov	w19, w3
   182ac:	mov	x20, x0
   182b0:	cmp	x0, x1
   182b4:	mov	x21, x2
   182b8:	str	x23, [sp, #16]
   182bc:	mov	x29, sp
   182c0:	b.eq	182dc <mpfr_mul_2ui@@Base+0x40>  // b.none
   182c4:	ldr	w3, [x1, #8]
   182c8:	mov	x0, x20
   182cc:	mov	w2, w19
   182d0:	bl	c690 <mpfr_set4@plt>
   182d4:	mov	w22, w0
   182d8:	b	182e0 <mpfr_mul_2ui@@Base+0x44>
   182dc:	mov	w22, wzr
   182e0:	ldr	x8, [x20, #16]
   182e4:	mov	x9, #0x4                   	// #4
   182e8:	movk	x9, #0x8000, lsl #48
   182ec:	cmp	x8, x9
   182f0:	b.lt	18360 <mpfr_mul_2ui@@Base+0xc4>  // b.tstop
   182f4:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   182f8:	tbz	x21, #63, 18320 <mpfr_mul_2ui@@Base+0x84>
   182fc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   18300:	mov	x0, x20
   18304:	mov	x1, x20
   18308:	mov	w3, w19
   1830c:	add	x21, x21, x23
   18310:	bl	c2c0 <mpfr_mul_2ui@plt>
   18314:	cbz	w0, 182f8 <mpfr_mul_2ui@@Base+0x5c>
   18318:	mov	w22, w0
   1831c:	b	18360 <mpfr_mul_2ui@@Base+0xc4>
   18320:	ldr	x8, [x20, #16]
   18324:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18328:	ldr	x1, [x0, #2608]
   1832c:	add	x0, x0, #0xa30
   18330:	blr	x1
   18334:	mrs	x9, tpidr_el0
   18338:	ldr	x9, [x9, x0]
   1833c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   18340:	add	x10, x21, x10
   18344:	cmp	x9, x10
   18348:	b.lt	18378 <mpfr_mul_2ui@@Base+0xdc>  // b.tstop
   1834c:	sub	x9, x9, x21
   18350:	cmp	x8, x9
   18354:	b.gt	18378 <mpfr_mul_2ui@@Base+0xdc>
   18358:	add	x8, x8, x21
   1835c:	str	x8, [x20, #16]
   18360:	mov	w0, w22
   18364:	ldp	x20, x19, [sp, #48]
   18368:	ldp	x22, x21, [sp, #32]
   1836c:	ldr	x23, [sp, #16]
   18370:	ldp	x29, x30, [sp], #64
   18374:	ret
   18378:	ldr	w2, [x20, #8]
   1837c:	mov	x0, x20
   18380:	mov	w1, w19
   18384:	ldp	x20, x19, [sp, #48]
   18388:	ldp	x22, x21, [sp, #32]
   1838c:	ldr	x23, [sp, #16]
   18390:	ldp	x29, x30, [sp], #64
   18394:	b	bf90 <mpfr_overflow@plt>

0000000000018398 <mpfr_mul@@Base>:
   18398:	stp	x29, x30, [sp, #-96]!
   1839c:	stp	x28, x27, [sp, #16]
   183a0:	stp	x26, x25, [sp, #32]
   183a4:	stp	x24, x23, [sp, #48]
   183a8:	stp	x22, x21, [sp, #64]
   183ac:	stp	x20, x19, [sp, #80]
   183b0:	mov	x29, sp
   183b4:	sub	sp, sp, #0xe0
   183b8:	ldr	x28, [x1, #16]
   183bc:	mov	x8, #0x2                   	// #2
   183c0:	movk	x8, #0x8000, lsl #48
   183c4:	add	x9, x8, #0x2
   183c8:	mov	w5, w3
   183cc:	mov	x22, x2
   183d0:	mov	x26, x1
   183d4:	cmp	x28, x9
   183d8:	mov	x3, x0
   183dc:	b.lt	18fa0 <mpfr_mul@@Base+0xc08>  // b.tstop
   183e0:	ldr	x21, [x22, #16]
   183e4:	cmp	x21, x9
   183e8:	b.lt	18fac <mpfr_mul@@Base+0xc14>  // b.tstop
   183ec:	ldr	x27, [x3]
   183f0:	ldr	x23, [x26]
   183f4:	ldr	x19, [x22]
   183f8:	cmp	x27, x23
   183fc:	b.ne	188fc <mpfr_mul@@Base+0x564>  // b.any
   18400:	cmp	x27, x19
   18404:	b.ne	188fc <mpfr_mul@@Base+0x564>  // b.any
   18408:	cmp	x27, #0x3f
   1840c:	b.gt	184fc <mpfr_mul@@Base+0x164>
   18410:	ldr	x8, [x26, #24]
   18414:	ldr	x10, [x22, #24]
   18418:	ldr	x9, [x3, #24]
   1841c:	ldr	x11, [x8]
   18420:	ldr	x12, [x10]
   18424:	neg	x8, x27
   18428:	mov	w10, #0x1                   	// #1
   1842c:	lsl	x10, x10, x8
   18430:	add	x8, x21, x28
   18434:	mul	x13, x12, x11
   18438:	umulh	x15, x11, x12
   1843c:	tbnz	x15, #63, 1844c <mpfr_mul@@Base+0xb4>
   18440:	sub	x8, x8, #0x1
   18444:	extr	x15, x15, x13, #63
   18448:	lsl	x13, x13, #1
   1844c:	neg	x16, x10
   18450:	and	x14, x15, x16
   18454:	str	x14, [x9]
   18458:	ldr	w11, [x26, #8]
   1845c:	ldr	w12, [x22, #8]
   18460:	mul	w2, w12, w11
   18464:	str	w2, [x3, #8]
   18468:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1846c:	ldr	x1, [x0, #2608]
   18470:	add	x0, x0, #0xa30
   18474:	blr	x1
   18478:	mrs	x11, tpidr_el0
   1847c:	ldr	x12, [x11, x0]
   18480:	cmp	x8, x12
   18484:	b.gt	18f94 <mpfr_mul@@Base+0xbfc>
   18488:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   1848c:	sub	x17, x10, #0x1
   18490:	lsr	x12, x12, x27
   18494:	and	x12, x15, x12
   18498:	and	x15, x15, x17
   1849c:	eor	x15, x15, x12
   184a0:	orr	x13, x15, x13
   184a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   184a8:	ldr	x1, [x0, #2576]
   184ac:	add	x0, x0, #0xa10
   184b0:	blr	x1
   184b4:	ldr	x15, [x11, x0]
   184b8:	cmp	x8, x15
   184bc:	b.lt	19288 <mpfr_mul@@Base+0xef0>  // b.tstop
   184c0:	mov	w23, wzr
   184c4:	cmp	w5, #0x5
   184c8:	str	x8, [x3, #16]
   184cc:	b.eq	18f24 <mpfr_mul@@Base+0xb8c>  // b.none
   184d0:	orr	x14, x13, x12
   184d4:	cbz	x14, 18f24 <mpfr_mul@@Base+0xb8c>
   184d8:	cmp	w5, #0x1
   184dc:	b.eq	18ef8 <mpfr_mul@@Base+0xb60>  // b.none
   184e0:	cbnz	w5, 18d60 <mpfr_mul@@Base+0x9c8>
   184e4:	cbz	x12, 18ef8 <mpfr_mul@@Base+0xb60>
   184e8:	cbnz	x13, 18d6c <mpfr_mul@@Base+0x9d4>
   184ec:	ldr	x12, [x9]
   184f0:	tst	x12, x10
   184f4:	b.ne	18d6c <mpfr_mul@@Base+0x9d4>  // b.any
   184f8:	b	18ef8 <mpfr_mul@@Base+0xb60>
   184fc:	cmp	x27, #0x40
   18500:	b.eq	1869c <mpfr_mul@@Base+0x304>  // b.none
   18504:	cmp	x27, #0x7f
   18508:	b.gt	1869c <mpfr_mul@@Base+0x304>
   1850c:	ldr	x11, [x26, #24]
   18510:	ldr	x15, [x22, #24]
   18514:	neg	x9, x27
   18518:	mov	w14, #0x1                   	// #1
   1851c:	ldp	x17, x12, [x11]
   18520:	ldp	x16, x10, [x15]
   18524:	umulh	x11, x12, x10
   18528:	umulh	x18, x12, x16
   1852c:	ldr	x8, [x3, #24]
   18530:	mul	x15, x10, x12
   18534:	adds	x15, x18, x15
   18538:	lsl	x9, x14, x9
   1853c:	umulh	x18, x17, x10
   18540:	cinc	x11, x11, cs  // cs = hs, nlast
   18544:	adds	x15, x18, x15
   18548:	sub	x13, x9, #0x1
   1854c:	add	x18, x15, #0x2
   18550:	and	x18, x18, x13, lsr #2
   18554:	cinc	x11, x11, cs  // cs = hs, nlast
   18558:	cmp	x18, #0x2
   1855c:	b.ls	1930c <mpfr_mul@@Base+0xf74>  // b.plast
   18560:	mov	w16, #0x1                   	// #1
   18564:	add	x10, x21, x28
   18568:	tbnz	x11, #63, 1857c <mpfr_mul@@Base+0x1e4>
   1856c:	sub	x10, x10, #0x1
   18570:	extr	x11, x11, x15, #63
   18574:	extr	x15, x15, x16, #63
   18578:	lsl	x16, x16, #1
   1857c:	neg	x18, x9
   18580:	and	x17, x15, x18
   18584:	stp	x17, x11, [x8]
   18588:	ldr	w12, [x26, #8]
   1858c:	ldr	w0, [x22, #8]
   18590:	mul	w2, w0, w12
   18594:	str	w2, [x3, #8]
   18598:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1859c:	ldr	x1, [x0, #2608]
   185a0:	add	x0, x0, #0xa30
   185a4:	blr	x1
   185a8:	mrs	x12, tpidr_el0
   185ac:	ldr	x0, [x12, x0]
   185b0:	cmp	x10, x0
   185b4:	b.gt	18f94 <mpfr_mul@@Base+0xbfc>
   185b8:	mov	w0, #0x7f                  	// #127
   185bc:	mov	w1, #0x1                   	// #1
   185c0:	sub	x0, x0, x27
   185c4:	lsl	x0, x1, x0
   185c8:	and	x13, x15, x13
   185cc:	and	x15, x15, x0
   185d0:	eor	x13, x13, x15
   185d4:	orr	x14, x16, x14
   185d8:	orr	x13, x14, x13
   185dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   185e0:	ldr	x1, [x0, #2576]
   185e4:	add	x0, x0, #0xa10
   185e8:	blr	x1
   185ec:	ldr	x14, [x12, x0]
   185f0:	cmp	x10, x14
   185f4:	b.lt	19360 <mpfr_mul@@Base+0xfc8>  // b.tstop
   185f8:	mov	w23, wzr
   185fc:	cmp	w5, #0x5
   18600:	str	x10, [x3, #16]
   18604:	b.eq	18f24 <mpfr_mul@@Base+0xb8c>  // b.none
   18608:	orr	x11, x13, x15
   1860c:	cbz	x11, 18f24 <mpfr_mul@@Base+0xb8c>
   18610:	cmp	w5, #0x1
   18614:	b.eq	18e1c <mpfr_mul@@Base+0xa84>  // b.none
   18618:	cbnz	w5, 18e10 <mpfr_mul@@Base+0xa78>
   1861c:	cbz	x15, 18e1c <mpfr_mul@@Base+0xa84>
   18620:	cbnz	x13, 18630 <mpfr_mul@@Base+0x298>
   18624:	ldr	x11, [x8]
   18628:	tst	x11, x9
   1862c:	b.eq	18e1c <mpfr_mul@@Base+0xa84>  // b.none
   18630:	ldp	x11, x13, [x8]
   18634:	adds	x9, x11, x9
   18638:	str	x9, [x8]
   1863c:	cinc	x9, x13, eq  // eq = none
   18640:	str	x9, [x8, #8]
   18644:	cbnz	x9, 18674 <mpfr_mul@@Base+0x2dc>
   18648:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   1864c:	str	x9, [x8, #8]
   18650:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18654:	ldr	x1, [x0, #2608]
   18658:	add	x0, x0, #0xa30
   1865c:	blr	x1
   18660:	ldr	x8, [x12, x0]
   18664:	cmp	x10, x8
   18668:	b.ge	18f94 <mpfr_mul@@Base+0xbfc>  // b.tcont
   1866c:	add	x8, x10, #0x1
   18670:	str	x8, [x3, #16]
   18674:	cbz	w2, 18f20 <mpfr_mul@@Base+0xb88>
   18678:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1867c:	ldr	x1, [x0, #2640]
   18680:	add	x0, x0, #0xa50
   18684:	blr	x1
   18688:	ldr	w8, [x12, x0]
   1868c:	mov	w23, w2
   18690:	orr	w8, w8, #0x8
   18694:	str	w8, [x12, x0]
   18698:	b	18f24 <mpfr_mul@@Base+0xb8c>
   1869c:	cmp	x27, #0x40
   186a0:	b.ne	1875c <mpfr_mul@@Base+0x3c4>  // b.any
   186a4:	ldr	x8, [x26, #24]
   186a8:	ldr	x9, [x22, #24]
   186ac:	ldr	x10, [x8]
   186b0:	ldr	x11, [x9]
   186b4:	ldr	x9, [x3, #24]
   186b8:	add	x8, x21, x28
   186bc:	umulh	x12, x10, x11
   186c0:	mul	x10, x11, x10
   186c4:	tbnz	x12, #63, 186d4 <mpfr_mul@@Base+0x33c>
   186c8:	sub	x8, x8, #0x1
   186cc:	extr	x12, x12, x10, #63
   186d0:	lsl	x10, x10, #1
   186d4:	str	x12, [x9]
   186d8:	ldr	w11, [x26, #8]
   186dc:	ldr	w13, [x22, #8]
   186e0:	mul	w2, w13, w11
   186e4:	str	w2, [x3, #8]
   186e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   186ec:	ldr	x1, [x0, #2608]
   186f0:	add	x0, x0, #0xa30
   186f4:	blr	x1
   186f8:	mrs	x11, tpidr_el0
   186fc:	ldr	x13, [x11, x0]
   18700:	cmp	x8, x13
   18704:	b.gt	18f94 <mpfr_mul@@Base+0xbfc>
   18708:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1870c:	ldr	x1, [x0, #2576]
   18710:	add	x0, x0, #0xa10
   18714:	blr	x1
   18718:	ldr	x13, [x11, x0]
   1871c:	cmp	x8, x13
   18720:	b.lt	19448 <mpfr_mul@@Base+0x10b0>  // b.tstop
   18724:	mov	w23, wzr
   18728:	cmp	w5, #0x5
   1872c:	str	x8, [x3, #16]
   18730:	b.eq	18f24 <mpfr_mul@@Base+0xb8c>  // b.none
   18734:	cbz	x10, 18f24 <mpfr_mul@@Base+0xb8c>
   18738:	cmp	w5, #0x1
   1873c:	b.eq	18ef8 <mpfr_mul@@Base+0xb60>  // b.none
   18740:	cbnz	w5, 18e44 <mpfr_mul@@Base+0xaac>
   18744:	tbz	x10, #63, 18ef8 <mpfr_mul@@Base+0xb60>
   18748:	and	x10, x10, #0x7fffffffffffffff
   1874c:	cbnz	x10, 18e50 <mpfr_mul@@Base+0xab8>
   18750:	ldrb	w10, [x9]
   18754:	tbz	w10, #0, 18ef8 <mpfr_mul@@Base+0xb60>
   18758:	b	18e50 <mpfr_mul@@Base+0xab8>
   1875c:	sub	x8, x27, #0x81
   18760:	cmp	x8, #0x3e
   18764:	b.hi	188fc <mpfr_mul@@Base+0x564>  // b.pmore
   18768:	ldr	x1, [x26, #24]
   1876c:	ldr	x2, [x22, #24]
   18770:	neg	x8, x27
   18774:	mov	w9, #0x1                   	// #1
   18778:	lsl	x20, x9, x8
   1877c:	ldp	x11, x8, [x1, #8]
   18780:	ldp	x13, x9, [x2, #8]
   18784:	ldr	x12, [x2]
   18788:	mov	w10, #0x2                   	// #2
   1878c:	umulh	x12, x8, x12
   18790:	mul	x15, x13, x8
   18794:	mul	x16, x11, x9
   18798:	adds	x15, x16, x15
   1879c:	cset	w16, cs  // cs = hs, nlast
   187a0:	csinc	x10, x10, xzr, cs  // cs = hs, nlast
   187a4:	adds	x12, x12, x15
   187a8:	ldr	x14, [x1]
   187ac:	csel	x10, x16, x10, cc  // cc = lo, ul, last
   187b0:	umulh	x15, x11, x13
   187b4:	adds	x12, x12, x15
   187b8:	ldr	x19, [x3, #24]
   187bc:	umulh	x14, x14, x9
   187c0:	cinc	x10, x10, cs  // cs = hs, nlast
   187c4:	adds	x12, x14, x12
   187c8:	sub	x23, x20, #0x1
   187cc:	add	x14, x12, #0x4
   187d0:	and	x14, x14, x23, lsr #2
   187d4:	cinc	x10, x10, cs  // cs = hs, nlast
   187d8:	cmp	x14, #0x5
   187dc:	b.cc	194a8 <mpfr_mul@@Base+0x1110>  // b.lo, b.ul, b.last
   187e0:	umulh	x13, x8, x13
   187e4:	umulh	x15, x8, x9
   187e8:	madd	x8, x9, x8, x13
   187ec:	umulh	x11, x11, x9
   187f0:	mov	w16, #0x2                   	// #2
   187f4:	add	x17, x11, x8
   187f8:	cmp	x8, x13
   187fc:	add	x9, x10, x17
   18800:	cset	w8, cc  // cc = lo, ul, last
   18804:	csinc	x13, x16, xzr, cc  // cc = lo, ul, last
   18808:	cmp	x17, x11
   1880c:	csel	x8, x8, x13, cs  // cs = hs, nlast
   18810:	cmp	x9, x10
   18814:	cinc	x8, x8, cc  // cc = lo, ul, last
   18818:	mov	w14, #0x1                   	// #1
   1881c:	add	x10, x8, x15
   18820:	mov	w16, #0x1                   	// #1
   18824:	add	x8, x21, x28
   18828:	tbnz	x10, #63, 18840 <mpfr_mul@@Base+0x4a8>
   1882c:	sub	x8, x8, #0x1
   18830:	extr	x10, x10, x9, #63
   18834:	extr	x9, x9, x12, #63
   18838:	extr	x12, x12, x16, #63
   1883c:	lsl	x16, x16, #1
   18840:	neg	x17, x20
   18844:	and	x13, x12, x17
   18848:	stp	x9, x10, [x19, #8]
   1884c:	str	x13, [x19]
   18850:	ldr	w11, [x26, #8]
   18854:	ldr	w15, [x22, #8]
   18858:	mul	w2, w15, w11
   1885c:	str	w2, [x3, #8]
   18860:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18864:	ldr	x1, [x0, #2608]
   18868:	add	x0, x0, #0xa30
   1886c:	blr	x1
   18870:	mrs	x11, tpidr_el0
   18874:	ldr	x15, [x11, x0]
   18878:	cmp	x8, x15
   1887c:	b.gt	18f94 <mpfr_mul@@Base+0xbfc>
   18880:	mov	w15, #0xbf                  	// #191
   18884:	mov	w18, #0x1                   	// #1
   18888:	sub	x15, x15, x27
   1888c:	lsl	x15, x18, x15
   18890:	and	x0, x12, x23
   18894:	and	x15, x12, x15
   18898:	eor	x12, x0, x15
   1889c:	orr	x14, x16, x14
   188a0:	orr	x12, x14, x12
   188a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   188a8:	ldr	x1, [x0, #2576]
   188ac:	add	x0, x0, #0xa10
   188b0:	blr	x1
   188b4:	ldr	x14, [x11, x0]
   188b8:	cmp	x8, x14
   188bc:	b.lt	194e0 <mpfr_mul@@Base+0x1148>  // b.tstop
   188c0:	mov	w23, wzr
   188c4:	cmp	w5, #0x5
   188c8:	str	x8, [x3, #16]
   188cc:	b.eq	18f24 <mpfr_mul@@Base+0xb8c>  // b.none
   188d0:	orr	x9, x12, x15
   188d4:	cbz	x9, 18f24 <mpfr_mul@@Base+0xb8c>
   188d8:	cmp	w5, #0x1
   188dc:	b.eq	18ef8 <mpfr_mul@@Base+0xb60>  // b.none
   188e0:	cbnz	w5, 18eec <mpfr_mul@@Base+0xb54>
   188e4:	cbz	x15, 18ef8 <mpfr_mul@@Base+0xb60>
   188e8:	cbnz	x12, 18f48 <mpfr_mul@@Base+0xbb0>
   188ec:	ldr	x9, [x19]
   188f0:	tst	x9, x20
   188f4:	b.ne	18f48 <mpfr_mul@@Base+0xbb0>  // b.any
   188f8:	b	18ef8 <mpfr_mul@@Base+0xb60>
   188fc:	ldr	w17, [x26, #8]
   18900:	ldr	w0, [x22, #8]
   18904:	add	x20, x19, x23
   18908:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   1890c:	cmp	x20, x8
   18910:	b.cs	19004 <mpfr_mul@@Base+0xc6c>  // b.hs, b.nlast
   18914:	sub	x8, x23, #0x1
   18918:	add	x9, x23, #0x3e
   1891c:	sub	x10, x19, #0x1
   18920:	cmp	x8, #0x0
   18924:	add	x11, x19, #0x3e
   18928:	csel	x8, x9, x8, lt  // lt = tstop
   1892c:	cmp	x10, #0x0
   18930:	asr	x24, x8, #6
   18934:	csel	x8, x11, x10, lt  // lt = tstop
   18938:	sub	x12, x20, #0x1
   1893c:	asr	x14, x8, #6
   18940:	add	x13, x20, #0x3e
   18944:	cmp	x12, #0x0
   18948:	add	x19, x24, #0x1
   1894c:	add	x23, x14, #0x1
   18950:	csel	x8, x13, x12, lt  // lt = tstop
   18954:	add	x6, x23, x19
   18958:	asr	x18, x8, #6
   1895c:	lsl	x1, x6, #3
   18960:	add	x16, x18, #0x1
   18964:	cmp	x1, #0x4, lsl #12
   18968:	stur	xzr, [x29, #-64]
   1896c:	b.hi	19038 <mpfr_mul@@Base+0xca0>  // b.pmore
   18970:	add	x9, x1, #0xf
   18974:	mov	x8, sp
   18978:	and	x9, x9, #0xfffffffffffffff0
   1897c:	sub	x25, x8, x9
   18980:	mov	sp, x25
   18984:	cmp	x24, x14
   18988:	csel	x2, x23, x19, lt  // lt = tstop
   1898c:	csel	x4, x19, x23, lt  // lt = tstop
   18990:	csel	x10, x26, x22, lt  // lt = tstop
   18994:	csel	x11, x22, x26, lt  // lt = tstop
   18998:	cmp	x2, #0x2
   1899c:	stp	x10, x11, [x29, #-136]
   189a0:	b.gt	18a84 <mpfr_mul@@Base+0x6ec>
   189a4:	ldr	x9, [x11, #24]
   189a8:	ldr	x10, [x10, #24]
   189ac:	cmp	x2, #0x1
   189b0:	ldr	x11, [x9]
   189b4:	ldr	x12, [x10]
   189b8:	umulh	x8, x11, x12
   189bc:	mul	x11, x12, x11
   189c0:	stp	x11, x8, [x25]
   189c4:	b.eq	18a2c <mpfr_mul@@Base+0x694>  // b.none
   189c8:	ldr	x11, [x9, #8]
   189cc:	ldr	x13, [x10]
   189d0:	mov	x12, xzr
   189d4:	umulh	x14, x11, x13
   189d8:	mul	x13, x13, x11
   189dc:	adds	x11, x8, x13
   189e0:	adc	x8, x14, x12
   189e4:	cmp	x4, #0x1
   189e8:	stp	x11, x8, [x25, #8]
   189ec:	b.eq	18a2c <mpfr_mul@@Base+0x694>  // b.none
   189f0:	ldr	x10, [x10, #8]
   189f4:	ldp	x13, x9, [x9]
   189f8:	mov	x12, xzr
   189fc:	umulh	x15, x9, x10
   18a00:	umulh	x14, x13, x10
   18a04:	mul	x9, x9, x10
   18a08:	mul	x13, x10, x13
   18a0c:	adds	x10, x14, x9
   18a10:	adc	x9, x15, x12
   18a14:	adds	x12, x11, x13
   18a18:	adc	x8, x8, x10
   18a1c:	cmp	x8, x10
   18a20:	stp	x12, x8, [x25, #8]
   18a24:	cinc	x8, x9, cc  // cc = lo, ul, last
   18a28:	str	x8, [x25, #24]
   18a2c:	sub	x9, x6, x16
   18a30:	lsr	x19, x8, #63
   18a34:	add	x26, x25, x9, lsl #3
   18a38:	tbnz	x8, #63, 18ad4 <mpfr_mul@@Base+0x73c>
   18a3c:	stur	x3, [x29, #-112]
   18a40:	mov	w3, #0x1                   	// #1
   18a44:	mov	w23, w0
   18a48:	mov	x0, x26
   18a4c:	mov	x1, x26
   18a50:	mov	x2, x16
   18a54:	mov	x22, x18
   18a58:	mov	w27, w17
   18a5c:	mov	w24, w5
   18a60:	mov	x25, x16
   18a64:	bl	bd10 <__gmpn_lshift@plt>
   18a68:	ldur	x3, [x29, #-112]
   18a6c:	mov	w0, w23
   18a70:	mov	w17, w27
   18a74:	mov	x16, x25
   18a78:	mov	x18, x22
   18a7c:	mov	w5, w24
   18a80:	b	18ad4 <mpfr_mul@@Base+0x73c>
   18a84:	cmp	x4, #0x15
   18a88:	stp	x16, x3, [x29, #-120]
   18a8c:	stp	w0, w17, [x29, #-104]
   18a90:	b.ge	1915c <mpfr_mul@@Base+0xdc4>  // b.tcont
   18a94:	mov	x23, x6
   18a98:	mov	x22, x18
   18a9c:	mov	w24, w5
   18aa0:	ldr	x1, [x11, #24]
   18aa4:	ldr	x3, [x10, #24]
   18aa8:	mov	x0, x25
   18aac:	bl	c790 <__gmpn_mul@plt>
   18ab0:	ldur	x16, [x29, #-120]
   18ab4:	lsr	x19, x0, #63
   18ab8:	sub	x8, x23, x16
   18abc:	add	x26, x25, x8, lsl #3
   18ac0:	tbz	x0, #63, 1922c <mpfr_mul@@Base+0xe94>
   18ac4:	ldur	x3, [x29, #-112]
   18ac8:	mov	w5, w24
   18acc:	mov	x18, x22
   18ad0:	ldp	w0, w17, [x29, #-104]
   18ad4:	ldr	x11, [x3]
   18ad8:	add	x8, x21, x28
   18adc:	add	x21, x19, x8
   18ae0:	ldr	x25, [x3, #24]
   18ae4:	sub	x8, x11, #0x1
   18ae8:	add	x9, x11, #0x3e
   18aec:	cmp	x8, #0x0
   18af0:	csel	x8, x9, x8, lt  // lt = tstop
   18af4:	asr	x8, x8, #6
   18af8:	mul	w24, w0, w17
   18afc:	sub	x27, x21, #0x1
   18b00:	cmp	x11, x20
   18b04:	add	x9, x8, #0x1
   18b08:	b.ge	19070 <mpfr_mul@@Base+0xcd8>  // b.tcont
   18b0c:	neg	w12, w11
   18b10:	add	x10, x26, x16, lsl #3
   18b14:	mvn	x13, x8
   18b18:	ands	x12, x12, #0x3f
   18b1c:	add	x1, x10, x13, lsl #3
   18b20:	b.eq	190e8 <mpfr_mul@@Base+0xd50>  // b.none
   18b24:	ldr	x13, [x1]
   18b28:	sub	x12, x12, #0x1
   18b2c:	mov	w14, #0x1                   	// #1
   18b30:	lsl	x14, x14, x12
   18b34:	sub	x15, x14, #0x1
   18b38:	and	x12, x13, x14
   18b3c:	and	x13, x13, x15
   18b40:	cbz	w5, 18b84 <mpfr_mul@@Base+0x7ec>
   18b44:	cbz	x12, 18b84 <mpfr_mul@@Base+0x7ec>
   18b48:	lsl	x19, x14, #1
   18b4c:	cmp	w5, #0x5
   18b50:	b.eq	18cd0 <mpfr_mul@@Base+0x938>  // b.none
   18b54:	cmp	w5, #0x1
   18b58:	b.eq	18bbc <mpfr_mul@@Base+0x824>  // b.none
   18b5c:	cbnz	w5, 18bb0 <mpfr_mul@@Base+0x818>
   18b60:	cbz	x12, 18bbc <mpfr_mul@@Base+0x824>
   18b64:	cbnz	x13, 18bdc <mpfr_mul@@Base+0x844>
   18b68:	ldr	x12, [x1]
   18b6c:	tst	x12, x19
   18b70:	b.ne	18bdc <mpfr_mul@@Base+0x844>  // b.any
   18b74:	neg	w23, w24
   18b78:	cmp	x25, x1
   18b7c:	b.ne	18cdc <mpfr_mul@@Base+0x944>  // b.any
   18b80:	b	18d90 <mpfr_mul@@Base+0x9f8>
   18b84:	cbnz	x13, 18b48 <mpfr_mul@@Base+0x7b0>
   18b88:	sub	x15, x16, x9
   18b8c:	cbz	x15, 18b48 <mpfr_mul@@Base+0x7b0>
   18b90:	mvn	x13, x8
   18b94:	add	x15, x13, x18
   18b98:	ldr	x13, [x26, x15, lsl #3]
   18b9c:	subs	x15, x15, #0x1
   18ba0:	cset	w16, cs  // cs = hs, nlast
   18ba4:	cbnz	x13, 18b48 <mpfr_mul@@Base+0x7b0>
   18ba8:	tbnz	w16, #0, 18b98 <mpfr_mul@@Base+0x800>
   18bac:	b	18b48 <mpfr_mul@@Base+0x7b0>
   18bb0:	add	w14, w5, w24, lsr #31
   18bb4:	cmp	w14, #0x3
   18bb8:	b.ne	18bd4 <mpfr_mul@@Base+0x83c>  // b.any
   18bbc:	orr	x8, x13, x12
   18bc0:	cmp	x8, #0x0
   18bc4:	csneg	w23, wzr, w24, eq  // eq = none
   18bc8:	cmp	x25, x1
   18bcc:	b.ne	18cdc <mpfr_mul@@Base+0x944>  // b.any
   18bd0:	b	18d90 <mpfr_mul@@Base+0x9f8>
   18bd4:	orr	x12, x13, x12
   18bd8:	cbz	x12, 18cd0 <mpfr_mul@@Base+0x938>
   18bdc:	ldr	x12, [x1]
   18be0:	adds	x12, x12, x19
   18be4:	str	x12, [x25]
   18be8:	b.cc	18cfc <mpfr_mul@@Base+0x964>  // b.lo, b.ul, b.last
   18bec:	mov	x15, xzr
   18bf0:	mov	x13, xzr
   18bf4:	mov	x11, x8
   18bf8:	add	x12, x13, #0x1
   18bfc:	cmp	x12, x8
   18c00:	b.gt	18d80 <mpfr_mul@@Base+0x9e8>
   18c04:	lsl	x13, x13, #3
   18c08:	add	x14, x1, x13
   18c0c:	ldr	x14, [x14, #8]
   18c10:	add	x13, x25, x13
   18c14:	sub	x15, x15, #0x8
   18c18:	sub	x11, x11, #0x1
   18c1c:	adds	x14, x14, #0x1
   18c20:	str	x14, [x13, #8]
   18c24:	mov	x13, x12
   18c28:	b.cs	18bf8 <mpfr_mul@@Base+0x860>  // b.hs, b.nlast
   18c2c:	cmp	x1, x25
   18c30:	b.eq	18d8c <mpfr_mul@@Base+0x9f4>  // b.none
   18c34:	cmp	x12, x8
   18c38:	b.ge	18d8c <mpfr_mul@@Base+0x9f4>  // b.tcont
   18c3c:	sub	x13, x8, x12
   18c40:	cmp	x13, #0x4
   18c44:	add	x14, x12, #0x1
   18c48:	b.cc	18cac <mpfr_mul@@Base+0x914>  // b.lo, b.ul, b.last
   18c4c:	sub	x16, x25, x15
   18c50:	add	x17, x16, #0x8
   18c54:	cmp	x17, x10
   18c58:	sub	x10, x1, x15
   18c5c:	b.cs	18c70 <mpfr_mul@@Base+0x8d8>  // b.hs, b.nlast
   18c60:	add	x9, x25, x9, lsl #3
   18c64:	add	x15, x10, #0x8
   18c68:	cmp	x15, x9
   18c6c:	b.cc	18cac <mpfr_mul@@Base+0x914>  // b.lo, b.ul, b.last
   18c70:	and	x11, x11, #0xfffffffffffffffc
   18c74:	and	x15, x13, #0xfffffffffffffffc
   18c78:	add	x11, x11, x12
   18c7c:	add	x9, x16, #0x18
   18c80:	add	x10, x10, #0x18
   18c84:	add	x14, x11, #0x1
   18c88:	mov	x11, x15
   18c8c:	ldp	q0, q1, [x10, #-16]
   18c90:	add	x10, x10, #0x20
   18c94:	subs	x11, x11, #0x4
   18c98:	stp	q0, q1, [x9, #-16]
   18c9c:	add	x9, x9, #0x20
   18ca0:	b.ne	18c8c <mpfr_mul@@Base+0x8f4>  // b.any
   18ca4:	cmp	x13, x15
   18ca8:	b.eq	18d8c <mpfr_mul@@Base+0x9f4>  // b.none
   18cac:	sub	x8, x14, x8
   18cb0:	add	x9, x25, x14, lsl #3
   18cb4:	add	x10, x26, x18, lsl #3
   18cb8:	ldr	x11, [x10, x8, lsl #3]
   18cbc:	add	x8, x8, #0x1
   18cc0:	cmp	x8, #0x1
   18cc4:	str	x11, [x9], #8
   18cc8:	b.ne	18cb8 <mpfr_mul@@Base+0x920>  // b.any
   18ccc:	b	18d8c <mpfr_mul@@Base+0x9f4>
   18cd0:	mov	w23, wzr
   18cd4:	cmp	x25, x1
   18cd8:	b.eq	18d90 <mpfr_mul@@Base+0x9f8>  // b.none
   18cdc:	lsl	x2, x9, #3
   18ce0:	mov	x0, x25
   18ce4:	mov	x20, x3
   18ce8:	mov	w26, w5
   18cec:	bl	ba70 <memcpy@plt>
   18cf0:	mov	w5, w26
   18cf4:	mov	x3, x20
   18cf8:	b	18d90 <mpfr_mul@@Base+0x9f8>
   18cfc:	cmp	x11, #0x41
   18d00:	b.lt	18d8c <mpfr_mul@@Base+0x9f4>  // b.tstop
   18d04:	cmp	x1, x25
   18d08:	b.eq	18d8c <mpfr_mul@@Base+0x9f4>  // b.none
   18d0c:	cmp	x8, #0x4
   18d10:	b.cc	18d38 <mpfr_mul@@Base+0x9a0>  // b.lo, b.ul, b.last
   18d14:	add	x11, x25, #0x8
   18d18:	sub	x12, x18, x8
   18d1c:	cmp	x11, x10
   18d20:	add	x11, x26, x12, lsl #3
   18d24:	b.cs	18eb4 <mpfr_mul@@Base+0xb1c>  // b.hs, b.nlast
   18d28:	add	x9, x25, x9, lsl #3
   18d2c:	add	x10, x11, #0x8
   18d30:	cmp	x10, x9
   18d34:	b.cs	18eb4 <mpfr_mul@@Base+0xb1c>  // b.hs, b.nlast
   18d38:	mov	w9, #0x1                   	// #1
   18d3c:	sub	x8, x9, x8
   18d40:	add	x9, x25, x9, lsl #3
   18d44:	add	x10, x26, x18, lsl #3
   18d48:	ldr	x11, [x10, x8, lsl #3]
   18d4c:	add	x8, x8, #0x1
   18d50:	cmp	x8, #0x1
   18d54:	str	x11, [x9], #8
   18d58:	b.ne	18d48 <mpfr_mul@@Base+0x9b0>  // b.any
   18d5c:	b	18d8c <mpfr_mul@@Base+0x9f4>
   18d60:	add	w12, w5, w2, lsr #31
   18d64:	cmp	w12, #0x3
   18d68:	b.eq	18ef8 <mpfr_mul@@Base+0xb60>  // b.none
   18d6c:	ldr	x12, [x9]
   18d70:	adds	x10, x12, x10
   18d74:	str	x10, [x9]
   18d78:	b.ne	18e8c <mpfr_mul@@Base+0xaf4>  // b.any
   18d7c:	b	18e60 <mpfr_mul@@Base+0xac8>
   18d80:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   18d84:	mov	x27, x21
   18d88:	str	x9, [x25, x8, lsl #3]
   18d8c:	mov	w23, w24
   18d90:	ldr	x8, [x25]
   18d94:	neg	x9, x19
   18d98:	and	x8, x8, x9
   18d9c:	str	x8, [x25]
   18da0:	ldur	x0, [x29, #-64]
   18da4:	cbnz	x0, 190b8 <mpfr_mul@@Base+0xd20>
   18da8:	str	x27, [x3, #16]
   18dac:	str	w24, [x3, #8]
   18db0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18db4:	ldr	x1, [x0, #2608]
   18db8:	add	x0, x0, #0xa30
   18dbc:	blr	x1
   18dc0:	mrs	x8, tpidr_el0
   18dc4:	ldr	x9, [x8, x0]
   18dc8:	cmp	x27, x9
   18dcc:	b.gt	190d0 <mpfr_mul@@Base+0xd38>
   18dd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18dd4:	ldr	x1, [x0, #2576]
   18dd8:	add	x0, x0, #0xa10
   18ddc:	blr	x1
   18de0:	ldr	x9, [x8, x0]
   18de4:	cmp	x27, x9
   18de8:	b.lt	19104 <mpfr_mul@@Base+0xd6c>  // b.tstop
   18dec:	cbz	w23, 18f24 <mpfr_mul@@Base+0xb8c>
   18df0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18df4:	ldr	x1, [x0, #2640]
   18df8:	add	x0, x0, #0xa50
   18dfc:	blr	x1
   18e00:	ldr	w9, [x8, x0]
   18e04:	orr	w9, w9, #0x8
   18e08:	str	w9, [x8, x0]
   18e0c:	b	18f24 <mpfr_mul@@Base+0xb8c>
   18e10:	add	w11, w5, w2, lsr #31
   18e14:	cmp	w11, #0x3
   18e18:	b.ne	18630 <mpfr_mul@@Base+0x298>  // b.any
   18e1c:	cbz	w2, 18f20 <mpfr_mul@@Base+0xb88>
   18e20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18e24:	ldr	x1, [x0, #2640]
   18e28:	add	x0, x0, #0xa50
   18e2c:	blr	x1
   18e30:	ldr	w8, [x12, x0]
   18e34:	neg	w23, w2
   18e38:	orr	w8, w8, #0x8
   18e3c:	str	w8, [x12, x0]
   18e40:	b	18f24 <mpfr_mul@@Base+0xb8c>
   18e44:	add	w10, w5, w2, lsr #31
   18e48:	cmp	w10, #0x3
   18e4c:	b.eq	18ef8 <mpfr_mul@@Base+0xb60>  // b.none
   18e50:	ldr	x10, [x9]
   18e54:	adds	x10, x10, #0x1
   18e58:	str	x10, [x9]
   18e5c:	b.cc	18e8c <mpfr_mul@@Base+0xaf4>  // b.lo, b.ul, b.last
   18e60:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   18e64:	str	x10, [x9]
   18e68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18e6c:	ldr	x1, [x0, #2608]
   18e70:	add	x0, x0, #0xa30
   18e74:	blr	x1
   18e78:	ldr	x9, [x11, x0]
   18e7c:	cmp	x8, x9
   18e80:	b.ge	18f94 <mpfr_mul@@Base+0xbfc>  // b.tcont
   18e84:	add	x8, x8, #0x1
   18e88:	str	x8, [x3, #16]
   18e8c:	cbz	w2, 18f20 <mpfr_mul@@Base+0xb88>
   18e90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18e94:	ldr	x1, [x0, #2640]
   18e98:	add	x0, x0, #0xa50
   18e9c:	blr	x1
   18ea0:	ldr	w8, [x11, x0]
   18ea4:	mov	w23, w2
   18ea8:	orr	w8, w8, #0x8
   18eac:	str	w8, [x11, x0]
   18eb0:	b	18f24 <mpfr_mul@@Base+0xb8c>
   18eb4:	and	x10, x8, #0xfffffffffffffffc
   18eb8:	add	x11, x11, #0x18
   18ebc:	orr	x9, x10, #0x1
   18ec0:	add	x12, x25, #0x18
   18ec4:	mov	x13, x10
   18ec8:	ldp	q0, q1, [x11, #-16]
   18ecc:	add	x11, x11, #0x20
   18ed0:	subs	x13, x13, #0x4
   18ed4:	stp	q0, q1, [x12, #-16]
   18ed8:	add	x12, x12, #0x20
   18edc:	b.ne	18ec8 <mpfr_mul@@Base+0xb30>  // b.any
   18ee0:	cmp	x8, x10
   18ee4:	b.ne	18d3c <mpfr_mul@@Base+0x9a4>  // b.any
   18ee8:	b	18d8c <mpfr_mul@@Base+0x9f4>
   18eec:	add	w9, w5, w2, lsr #31
   18ef0:	cmp	w9, #0x3
   18ef4:	b.ne	18f48 <mpfr_mul@@Base+0xbb0>  // b.any
   18ef8:	cbz	w2, 18f20 <mpfr_mul@@Base+0xb88>
   18efc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18f00:	ldr	x1, [x0, #2640]
   18f04:	add	x0, x0, #0xa50
   18f08:	blr	x1
   18f0c:	ldr	w8, [x11, x0]
   18f10:	neg	w23, w2
   18f14:	orr	w8, w8, #0x8
   18f18:	str	w8, [x11, x0]
   18f1c:	b	18f24 <mpfr_mul@@Base+0xb8c>
   18f20:	mov	w23, wzr
   18f24:	mov	w0, w23
   18f28:	mov	sp, x29
   18f2c:	ldp	x20, x19, [sp, #80]
   18f30:	ldp	x22, x21, [sp, #64]
   18f34:	ldp	x24, x23, [sp, #48]
   18f38:	ldp	x26, x25, [sp, #32]
   18f3c:	ldp	x28, x27, [sp, #16]
   18f40:	ldp	x29, x30, [sp], #96
   18f44:	ret
   18f48:	ldp	x9, x10, [x19]
   18f4c:	ldr	x12, [x19, #16]
   18f50:	adds	x9, x9, x20
   18f54:	cinc	x10, x10, eq  // eq = none
   18f58:	stp	x9, x10, [x19]
   18f5c:	orr	x9, x10, x9
   18f60:	cmp	x9, #0x0
   18f64:	cinc	x9, x12, eq  // eq = none
   18f68:	str	x9, [x19, #16]
   18f6c:	cbnz	x9, 18e8c <mpfr_mul@@Base+0xaf4>
   18f70:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   18f74:	str	x9, [x19, #16]
   18f78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18f7c:	ldr	x1, [x0, #2608]
   18f80:	add	x0, x0, #0xa30
   18f84:	blr	x1
   18f88:	ldr	x9, [x11, x0]
   18f8c:	cmp	x8, x9
   18f90:	b.lt	18e84 <mpfr_mul@@Base+0xaec>  // b.tstop
   18f94:	mov	x0, x3
   18f98:	mov	w1, w5
   18f9c:	b	190dc <mpfr_mul@@Base+0xd44>
   18fa0:	cmp	x28, x8
   18fa4:	b.eq	18fb4 <mpfr_mul@@Base+0xc1c>  // b.none
   18fa8:	ldr	x21, [x22, #16]
   18fac:	cmp	x21, x8
   18fb0:	b.ne	18fdc <mpfr_mul@@Base+0xc44>  // b.any
   18fb4:	str	x8, [x3, #16]
   18fb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   18fbc:	ldr	x1, [x0, #2640]
   18fc0:	add	x0, x0, #0xa50
   18fc4:	blr	x1
   18fc8:	mrs	x8, tpidr_el0
   18fcc:	ldr	w9, [x8, x0]
   18fd0:	mov	w23, wzr
   18fd4:	orr	w9, w9, #0x4
   18fd8:	b	18e08 <mpfr_mul@@Base+0xa70>
   18fdc:	ldr	w9, [x26, #8]
   18fe0:	ldr	w11, [x22, #8]
   18fe4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18fe8:	cmp	x28, x10
   18fec:	mul	w9, w11, w9
   18ff0:	b.ne	19134 <mpfr_mul@@Base+0xd9c>  // b.any
   18ff4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   18ff8:	cmp	x21, x10
   18ffc:	b.eq	18fb4 <mpfr_mul@@Base+0xc1c>  // b.none
   19000:	b	19148 <mpfr_mul@@Base+0xdb0>
   19004:	stp	w0, w17, [x29, #-104]
   19008:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1900c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   19010:	add	x0, x0, #0x733
   19014:	add	x2, x2, #0x739
   19018:	mov	w1, #0x318                 	// #792
   1901c:	mov	x24, x3
   19020:	mov	w25, w5
   19024:	bl	cb20 <mpfr_assert_fail@plt>
   19028:	ldp	w0, w17, [x29, #-104]
   1902c:	mov	w5, w25
   19030:	mov	x3, x24
   19034:	b	18914 <mpfr_mul@@Base+0x57c>
   19038:	stp	w0, w17, [x29, #-104]
   1903c:	sub	x0, x29, #0x40
   19040:	stp	x6, x18, [x29, #-160]
   19044:	stp	x16, x3, [x29, #-120]
   19048:	mov	w25, w5
   1904c:	stur	x14, [x29, #-144]
   19050:	bl	be10 <mpfr_tmp_allocate@plt>
   19054:	ldp	x18, x14, [x29, #-152]
   19058:	ldur	x6, [x29, #-160]
   1905c:	ldp	x16, x3, [x29, #-120]
   19060:	mov	w5, w25
   19064:	mov	x25, x0
   19068:	ldp	w0, w17, [x29, #-104]
   1906c:	b	18984 <mpfr_mul@@Base+0x5ec>
   19070:	sub	x19, x9, x16
   19074:	add	x0, x25, x19, lsl #3
   19078:	mov	w28, w5
   1907c:	mov	x20, x3
   19080:	cmp	x0, x26
   19084:	b.eq	19094 <mpfr_mul@@Base+0xcfc>  // b.none
   19088:	lsl	x2, x16, #3
   1908c:	mov	x1, x26
   19090:	bl	ba70 <memcpy@plt>
   19094:	lsl	x2, x19, #3
   19098:	mov	x0, x25
   1909c:	mov	w1, wzr
   190a0:	bl	c150 <memset@plt>
   190a4:	mov	w23, wzr
   190a8:	mov	x3, x20
   190ac:	mov	w5, w28
   190b0:	ldur	x0, [x29, #-64]
   190b4:	cbz	x0, 18da8 <mpfr_mul@@Base+0xa10>
   190b8:	mov	x19, x3
   190bc:	mov	w20, w5
   190c0:	bl	c400 <mpfr_tmp_free@plt>
   190c4:	mov	w5, w20
   190c8:	mov	x3, x19
   190cc:	b	18da8 <mpfr_mul@@Base+0xa10>
   190d0:	mov	x0, x3
   190d4:	mov	w1, w5
   190d8:	mov	w2, w24
   190dc:	bl	bf90 <mpfr_overflow@plt>
   190e0:	mov	w23, w0
   190e4:	b	18f24 <mpfr_mul@@Base+0xb8c>
   190e8:	ldur	x13, [x1, #-8]
   190ec:	and	x12, x13, #0x8000000000000000
   190f0:	and	x13, x13, #0x7fffffffffffffff
   190f4:	cbz	w5, 1924c <mpfr_mul@@Base+0xeb4>
   190f8:	cbz	x12, 1924c <mpfr_mul@@Base+0xeb4>
   190fc:	mov	w19, #0x1                   	// #1
   19100:	b	18b4c <mpfr_mul@@Base+0x7b4>
   19104:	cbnz	w5, 19490 <mpfr_mul@@Base+0x10f8>
   19108:	mov	x19, x3
   1910c:	cmp	x21, x9
   19110:	b.lt	1912c <mpfr_mul@@Base+0xd94>  // b.tstop
   19114:	ldur	x0, [x29, #-128]
   19118:	bl	bf50 <mpfr_powerof2_raw@plt>
   1911c:	cbz	w0, 19488 <mpfr_mul@@Base+0x10f0>
   19120:	ldur	x0, [x29, #-136]
   19124:	bl	bf50 <mpfr_powerof2_raw@plt>
   19128:	cbz	w0, 19488 <mpfr_mul@@Base+0x10f0>
   1912c:	mov	w5, #0x1                   	// #1
   19130:	b	1948c <mpfr_mul@@Base+0x10f4>
   19134:	cmp	x21, x10
   19138:	b.ne	192f8 <mpfr_mul@@Base+0xf60>  // b.any
   1913c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   19140:	cmp	x28, x10
   19144:	b.eq	18fb4 <mpfr_mul@@Base+0xc1c>  // b.none
   19148:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1914c:	mov	w23, wzr
   19150:	str	w9, [x3, #8]
   19154:	str	x8, [x3, #16]
   19158:	b	18f24 <mpfr_mul@@Base+0xb8c>
   1915c:	ldr	x13, [x11, #24]
   19160:	ldr	x12, [x10, #24]
   19164:	ldr	x8, [x13]
   19168:	stp	x4, x2, [x29, #-184]
   1916c:	cbnz	x8, 19178 <mpfr_mul@@Base+0xde0>
   19170:	ldr	x9, [x13, #8]
   19174:	cbz	x9, 19694 <mpfr_mul@@Base+0x12fc>
   19178:	ldr	x9, [x12]
   1917c:	cbnz	x9, 19188 <mpfr_mul@@Base+0xdf0>
   19180:	ldr	x9, [x12, #8]
   19184:	cbz	x9, 19694 <mpfr_mul@@Base+0x12fc>
   19188:	ldr	x8, [x3]
   1918c:	stur	w5, [x29, #-164]
   19190:	sub	x9, x8, #0x1
   19194:	add	x8, x8, #0x3e
   19198:	cmp	x9, #0x0
   1919c:	csel	x8, x8, x9, lt  // lt = tstop
   191a0:	asr	x8, x8, #6
   191a4:	add	x7, x8, #0x2
   191a8:	cmp	x7, x4
   191ac:	csel	x26, x7, x4, lt  // lt = tstop
   191b0:	cmn	x26, #0x1
   191b4:	lsl	x23, x26, #6
   191b8:	b.eq	195b4 <mpfr_mul@@Base+0x121c>  // b.none
   191bc:	tbnz	x26, #63, 19644 <mpfr_mul@@Base+0x12ac>
   191c0:	add	x8, x26, #0x1
   191c4:	clz	x8, x8
   191c8:	mov	w9, #0x40                  	// #64
   191cc:	sub	x8, x9, x8
   191d0:	sub	x15, x23, x8
   191d4:	sub	x8, x2, x26
   191d8:	sub	x9, x4, x26
   191dc:	add	x1, x13, x8, lsl #3
   191e0:	sub	x8, x15, #0x5
   191e4:	cmp	x27, x8
   191e8:	add	x8, x12, x9, lsl #3
   191ec:	stur	x15, [x29, #-152]
   191f0:	b.gt	195bc <mpfr_mul@@Base+0x1224>
   191f4:	mov	x22, x18
   191f8:	lsl	x12, x26, #1
   191fc:	mov	x9, x26
   19200:	add	x26, x25, x6, lsl #3
   19204:	mov	x24, x14
   19208:	mov	x23, x6
   1920c:	cmp	x11, x10
   19210:	sub	x0, x26, x12, lsl #3
   19214:	stur	x9, [x29, #-144]
   19218:	b.eq	193d8 <mpfr_mul@@Base+0x1040>  // b.none
   1921c:	mov	x2, x8
   19220:	mov	x3, x9
   19224:	bl	bcd0 <mpfr_mulhigh_n@plt>
   19228:	b	193e0 <mpfr_mul@@Base+0x1048>
   1922c:	mov	w3, #0x1                   	// #1
   19230:	mov	x0, x26
   19234:	mov	x1, x26
   19238:	mov	x2, x16
   1923c:	mov	x23, x16
   19240:	bl	bd10 <__gmpn_lshift@plt>
   19244:	mov	x16, x23
   19248:	b	18ac4 <mpfr_mul@@Base+0x72c>
   1924c:	mov	w19, #0x1                   	// #1
   19250:	cbnz	x13, 18b4c <mpfr_mul@@Base+0x7b4>
   19254:	sub	x14, x18, x9
   19258:	cbz	x14, 18b4c <mpfr_mul@@Base+0x7b4>
   1925c:	sub	x13, x18, x8
   19260:	mov	x14, x18
   19264:	sub	x15, x13, #0x2
   19268:	mov	w19, #0x1                   	// #1
   1926c:	ldr	x13, [x26, x15, lsl #3]
   19270:	subs	x15, x15, #0x1
   19274:	cset	w16, cs  // cs = hs, nlast
   19278:	cbnz	x13, 19280 <mpfr_mul@@Base+0xee8>
   1927c:	tbnz	w16, #0, 1926c <mpfr_mul@@Base+0xed4>
   19280:	mov	x18, x14
   19284:	b	18b4c <mpfr_mul@@Base+0x7b4>
   19288:	cmp	x14, x16
   1928c:	sub	x15, x15, #0x1
   19290:	b.ne	192c4 <mpfr_mul@@Base+0xf2c>  // b.any
   19294:	cmp	x8, x15
   19298:	b.ne	192c4 <mpfr_mul@@Base+0xf2c>  // b.any
   1929c:	cbnz	w5, 192a4 <mpfr_mul@@Base+0xf0c>
   192a0:	cbnz	x12, 184c0 <mpfr_mul@@Base+0x128>
   192a4:	cmp	w5, #0x4
   192a8:	b.eq	192bc <mpfr_mul@@Base+0xf24>  // b.none
   192ac:	mvn	w16, w2
   192b0:	add	w16, w5, w16, lsr #31
   192b4:	cmp	w16, #0x3
   192b8:	b.ne	192c4 <mpfr_mul@@Base+0xf2c>  // b.any
   192bc:	orr	x16, x13, x12
   192c0:	cbnz	x16, 184c0 <mpfr_mul@@Base+0x128>
   192c4:	cbnz	w5, 192ec <mpfr_mul@@Base+0xf54>
   192c8:	cmp	x8, x15
   192cc:	b.lt	192e8 <mpfr_mul@@Base+0xf50>  // b.tstop
   192d0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   192d4:	cmp	x14, x8
   192d8:	mov	w5, wzr
   192dc:	b.ne	192ec <mpfr_mul@@Base+0xf54>  // b.any
   192e0:	orr	x8, x13, x12
   192e4:	cbnz	x8, 192ec <mpfr_mul@@Base+0xf54>
   192e8:	mov	w5, #0x1                   	// #1
   192ec:	mov	x0, x3
   192f0:	mov	w1, w5
   192f4:	b	1949c <mpfr_mul@@Base+0x1104>
   192f8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   192fc:	mov	w23, wzr
   19300:	str	w9, [x3, #8]
   19304:	str	x8, [x3, #16]
   19308:	b	18f24 <mpfr_mul@@Base+0xb8c>
   1930c:	mul	x12, x16, x12
   19310:	umulh	x18, x17, x16
   19314:	adds	x12, x18, x12
   19318:	cinc	x15, x15, cs  // cs = hs, nlast
   1931c:	mul	x10, x17, x10
   19320:	mul	x14, x17, x16
   19324:	cset	w17, cs  // cs = hs, nlast
   19328:	cmp	x15, #0x0
   1932c:	cset	w18, eq  // eq = none
   19330:	adds	x16, x12, x10
   19334:	cinc	x15, x15, cs  // cs = hs, nlast
   19338:	and	w10, w17, w18
   1933c:	cset	w12, cs  // cs = hs, nlast
   19340:	cmp	x15, #0x0
   19344:	add	x10, x11, x10
   19348:	cset	w11, eq  // eq = none
   1934c:	and	w11, w12, w11
   19350:	add	x11, x10, x11
   19354:	add	x10, x21, x28
   19358:	tbz	x11, #63, 1856c <mpfr_mul@@Base+0x1d4>
   1935c:	b	1857c <mpfr_mul@@Base+0x1e4>
   19360:	cmp	x17, x18
   19364:	sub	x14, x14, #0x1
   19368:	b.ne	193a4 <mpfr_mul@@Base+0x100c>  // b.any
   1936c:	cmn	x11, #0x1
   19370:	b.ne	193a4 <mpfr_mul@@Base+0x100c>  // b.any
   19374:	cmp	x10, x14
   19378:	b.ne	193a4 <mpfr_mul@@Base+0x100c>  // b.any
   1937c:	cbnz	w5, 19384 <mpfr_mul@@Base+0xfec>
   19380:	cbnz	x15, 185f8 <mpfr_mul@@Base+0x260>
   19384:	cmp	w5, #0x4
   19388:	b.eq	1939c <mpfr_mul@@Base+0x1004>  // b.none
   1938c:	mvn	w16, w2
   19390:	add	w16, w5, w16, lsr #31
   19394:	cmp	w16, #0x3
   19398:	b.ne	193a4 <mpfr_mul@@Base+0x100c>  // b.any
   1939c:	orr	x16, x13, x15
   193a0:	cbnz	x16, 185f8 <mpfr_mul@@Base+0x260>
   193a4:	mov	w1, w5
   193a8:	cbnz	w5, 1953c <mpfr_mul@@Base+0x11a4>
   193ac:	cmp	x10, x14
   193b0:	b.lt	19538 <mpfr_mul@@Base+0x11a0>  // b.tstop
   193b4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   193b8:	cmp	x11, x8
   193bc:	b.ne	193cc <mpfr_mul@@Base+0x1034>  // b.any
   193c0:	orr	x8, x13, x15
   193c4:	orr	x8, x8, x17
   193c8:	cbz	x8, 19538 <mpfr_mul@@Base+0x11a0>
   193cc:	mov	w1, wzr
   193d0:	mov	x0, x3
   193d4:	b	1949c <mpfr_mul@@Base+0x1104>
   193d8:	mov	x2, x9
   193dc:	bl	c480 <mpfr_sqrhigh_n@plt>
   193e0:	add	x8, x19, x24
   193e4:	ldr	x8, [x25, x8, lsl #3]
   193e8:	ldur	w10, [x29, #-164]
   193ec:	ldur	x1, [x29, #-120]
   193f0:	mov	x9, x23
   193f4:	lsr	x19, x8, #63
   193f8:	tbz	x8, #63, 19618 <mpfr_mul@@Base+0x1280>
   193fc:	sub	x8, x9, x1
   19400:	ldur	x9, [x29, #-152]
   19404:	cmp	w10, #0x5
   19408:	csinc	w10, w10, wzr, ne  // ne = any
   1940c:	add	x26, x25, x8, lsl #3
   19410:	add	x9, x9, x19
   19414:	cmp	w10, #0x0
   19418:	sub	x2, x9, #0x1
   1941c:	cinc	x3, x27, eq  // eq = none
   19420:	mov	x0, x26
   19424:	mov	w24, w10
   19428:	bl	c370 <mpfr_round_p@plt>
   1942c:	cbz	w0, 19438 <mpfr_mul@@Base+0x10a0>
   19430:	ldp	x16, x3, [x29, #-120]
   19434:	b	18ac8 <mpfr_mul@@Base+0x730>
   19438:	ldur	x2, [x29, #-176]
   1943c:	ldp	x10, x11, [x29, #-136]
   19440:	ldur	x4, [x29, #-184]
   19444:	b	18aa0 <mpfr_mul@@Base+0x708>
   19448:	cmn	x12, #0x1
   1944c:	sub	x13, x13, #0x1
   19450:	b.ne	19560 <mpfr_mul@@Base+0x11c8>  // b.any
   19454:	cmp	x8, x13
   19458:	b.ne	19560 <mpfr_mul@@Base+0x11c8>  // b.any
   1945c:	cbnz	w5, 19464 <mpfr_mul@@Base+0x10cc>
   19460:	tbnz	x10, #63, 18724 <mpfr_mul@@Base+0x38c>
   19464:	mov	x0, x3
   19468:	mov	w14, w5
   1946c:	cmp	w5, #0x4
   19470:	b.ne	19544 <mpfr_mul@@Base+0x11ac>  // b.any
   19474:	mov	x3, x0
   19478:	mov	w5, w14
   1947c:	cbnz	x10, 18724 <mpfr_mul@@Base+0x38c>
   19480:	mov	w1, #0x4                   	// #4
   19484:	b	1949c <mpfr_mul@@Base+0x1104>
   19488:	mov	w5, wzr
   1948c:	mov	x3, x19
   19490:	mov	x0, x3
   19494:	mov	w1, w5
   19498:	mov	w2, w24
   1949c:	bl	c3c0 <mpfr_underflow@plt>
   194a0:	mov	w23, w0
   194a4:	b	18f24 <mpfr_mul@@Base+0xb8c>
   194a8:	sub	x0, x29, #0x38
   194ac:	mov	x24, x3
   194b0:	mov	w3, #0x3                   	// #3
   194b4:	mov	w25, w5
   194b8:	bl	c460 <__gmpn_mul_n@plt>
   194bc:	ldp	x11, x8, [x29, #-56]
   194c0:	ldp	x9, x10, [x29, #-24]
   194c4:	ldp	x16, x12, [x29, #-40]
   194c8:	mov	w5, w25
   194cc:	mov	x3, x24
   194d0:	orr	x14, x11, x8
   194d4:	add	x8, x21, x28
   194d8:	tbz	x10, #63, 1882c <mpfr_mul@@Base+0x494>
   194dc:	b	18840 <mpfr_mul@@Base+0x4a8>
   194e0:	cmp	x13, x17
   194e4:	sub	x14, x14, #0x1
   194e8:	b.ne	19528 <mpfr_mul@@Base+0x1190>  // b.any
   194ec:	and	x16, x9, x10
   194f0:	cmn	x16, #0x1
   194f4:	b.ne	19528 <mpfr_mul@@Base+0x1190>  // b.any
   194f8:	cmp	x8, x14
   194fc:	b.ne	19528 <mpfr_mul@@Base+0x1190>  // b.any
   19500:	cbnz	w5, 19508 <mpfr_mul@@Base+0x1170>
   19504:	cbnz	x15, 188c0 <mpfr_mul@@Base+0x528>
   19508:	cmp	w5, #0x4
   1950c:	b.eq	19520 <mpfr_mul@@Base+0x1188>  // b.none
   19510:	mvn	w16, w2
   19514:	add	w16, w5, w16, lsr #31
   19518:	cmp	w16, #0x3
   1951c:	b.ne	19528 <mpfr_mul@@Base+0x1190>  // b.any
   19520:	orr	x16, x12, x15
   19524:	cbnz	x16, 188c0 <mpfr_mul@@Base+0x528>
   19528:	mov	w1, w5
   1952c:	cbnz	w5, 1953c <mpfr_mul@@Base+0x11a4>
   19530:	cmp	x8, x14
   19534:	b.ge	19590 <mpfr_mul@@Base+0x11f8>  // b.tcont
   19538:	mov	w1, #0x1                   	// #1
   1953c:	mov	x0, x3
   19540:	b	1949c <mpfr_mul@@Base+0x1104>
   19544:	mov	x3, x0
   19548:	mov	w5, w14
   1954c:	cbz	x10, 19560 <mpfr_mul@@Base+0x11c8>
   19550:	mvn	w14, w2
   19554:	add	w14, w5, w14, lsr #31
   19558:	cmp	w14, #0x3
   1955c:	b.eq	18724 <mpfr_mul@@Base+0x38c>  // b.none
   19560:	mov	x0, x3
   19564:	mov	w1, w5
   19568:	cbnz	w5, 1949c <mpfr_mul@@Base+0x1104>
   1956c:	cmp	x8, x13
   19570:	b.lt	19588 <mpfr_mul@@Base+0x11f0>  // b.tstop
   19574:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   19578:	cmp	x12, x8
   1957c:	mov	w1, wzr
   19580:	b.ne	1949c <mpfr_mul@@Base+0x1104>  // b.any
   19584:	cbnz	x10, 1949c <mpfr_mul@@Base+0x1104>
   19588:	mov	w1, #0x1                   	// #1
   1958c:	b	1949c <mpfr_mul@@Base+0x1104>
   19590:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   19594:	cmp	x10, x8
   19598:	mov	w1, wzr
   1959c:	b.ne	1953c <mpfr_mul@@Base+0x11a4>  // b.any
   195a0:	cbnz	x9, 1953c <mpfr_mul@@Base+0x11a4>
   195a4:	orr	x8, x12, x15
   195a8:	orr	x8, x8, x13
   195ac:	cbnz	x8, 193cc <mpfr_mul@@Base+0x1034>
   195b0:	b	19538 <mpfr_mul@@Base+0x11a0>
   195b4:	mov	x8, xzr
   195b8:	b	191d0 <mpfr_mul@@Base+0xe38>
   195bc:	mov	x23, x6
   195c0:	mov	w24, w5
   195c4:	stur	x28, [x29, #-216]
   195c8:	mov	x28, x18
   195cc:	cmp	x2, #0x16
   195d0:	stur	x1, [x29, #-160]
   195d4:	stur	x14, [x29, #-144]
   195d8:	stp	x21, x27, [x29, #-208]
   195dc:	stur	x8, [x29, #-192]
   195e0:	b.lt	198a4 <mpfr_mul@@Base+0x150c>  // b.tstop
   195e4:	ldur	x8, [x29, #-152]
   195e8:	add	x9, x8, #0x3b
   195ec:	ldur	x8, [x29, #-200]
   195f0:	cmp	x8, x9
   195f4:	b.gt	198a4 <mpfr_mul@@Base+0x150c>
   195f8:	ldur	x8, [x29, #-176]
   195fc:	mov	x22, x7
   19600:	cmp	x8, x26
   19604:	b.le	19730 <mpfr_mul@@Base+0x1398>
   19608:	ldur	x8, [x29, #-160]
   1960c:	sub	x8, x8, #0x8
   19610:	stur	x8, [x29, #-160]
   19614:	b	19784 <mpfr_mul@@Base+0x13ec>
   19618:	ldur	x9, [x29, #-144]
   1961c:	mov	w3, #0x1                   	// #1
   19620:	sub	x8, x26, x9, lsl #3
   19624:	sub	x0, x8, #0x8
   19628:	add	x2, x9, #0x1
   1962c:	mov	x1, x0
   19630:	bl	bd10 <__gmpn_lshift@plt>
   19634:	ldur	x1, [x29, #-120]
   19638:	ldur	w10, [x29, #-164]
   1963c:	mov	x9, x23
   19640:	b	193fc <mpfr_mul@@Base+0x1064>
   19644:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   19648:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   1964c:	add	x0, x0, #0x733
   19650:	add	x2, x2, #0xcea
   19654:	mov	w1, #0x398                 	// #920
   19658:	stp	x6, x18, [x29, #-160]
   1965c:	mov	x22, x11
   19660:	stur	x14, [x29, #-144]
   19664:	stp	x13, x12, [x29, #-200]
   19668:	stur	x7, [x29, #-208]
   1966c:	bl	cb20 <mpfr_assert_fail@plt>
   19670:	ldp	x7, x13, [x29, #-208]
   19674:	ldp	x12, x4, [x29, #-192]
   19678:	ldp	x18, x14, [x29, #-152]
   1967c:	ldur	x6, [x29, #-160]
   19680:	ldur	x10, [x29, #-136]
   19684:	ldur	w5, [x29, #-164]
   19688:	ldur	x2, [x29, #-176]
   1968c:	mov	x11, x22
   19690:	b	191c0 <mpfr_mul@@Base+0xe28>
   19694:	ldur	x0, [x29, #-64]
   19698:	mov	x24, x13
   1969c:	mov	x23, x12
   196a0:	mov	x22, x11
   196a4:	mov	x21, x10
   196a8:	mov	w20, w5
   196ac:	mov	x19, x3
   196b0:	cbnz	x0, 198e4 <mpfr_mul@@Base+0x154c>
   196b4:	cbnz	x8, 196cc <mpfr_mul@@Base+0x1334>
   196b8:	ldr	x9, [x24, #8]!
   196bc:	ldur	x8, [x29, #-176]
   196c0:	sub	x8, x8, #0x1
   196c4:	stur	x8, [x29, #-176]
   196c8:	cbz	x9, 196b8 <mpfr_mul@@Base+0x1320>
   196cc:	ldr	x8, [x23]
   196d0:	cbnz	x8, 196e8 <mpfr_mul@@Base+0x1350>
   196d4:	ldr	x8, [x23, #8]!
   196d8:	ldur	x9, [x29, #-184]
   196dc:	sub	x9, x9, #0x1
   196e0:	stur	x9, [x29, #-184]
   196e4:	cbz	x8, 196d4 <mpfr_mul@@Base+0x133c>
   196e8:	ldr	w8, [x22, #8]
   196ec:	cmp	x22, x21
   196f0:	stur	w8, [x29, #-48]
   196f4:	ldur	x8, [x29, #-176]
   196f8:	ldr	x9, [x22, #16]
   196fc:	lsl	x8, x8, #6
   19700:	stp	x9, x24, [x29, #-40]
   19704:	stur	x8, [x29, #-56]
   19708:	b.eq	19888 <mpfr_mul@@Base+0x14f0>  // b.none
   1970c:	ldr	w8, [x21, #8]
   19710:	ldur	x9, [x29, #-184]
   19714:	sub	x2, x29, #0x60
   19718:	stur	w8, [x29, #-88]
   1971c:	ldr	x8, [x21, #16]
   19720:	lsl	x9, x9, #6
   19724:	stur	x9, [x29, #-96]
   19728:	stp	x8, x23, [x29, #-80]
   1972c:	b	1988c <mpfr_mul@@Base+0x14f4>
   19730:	lsl	x27, x26, #3
   19734:	add	x1, x27, #0x8
   19738:	cmp	x1, #0x4, lsl #12
   1973c:	b.hi	198f4 <mpfr_mul@@Base+0x155c>  // b.pmore
   19740:	add	x9, x1, #0xf
   19744:	mov	x8, sp
   19748:	and	x9, x9, #0xfffffffffffffff0
   1974c:	sub	x8, x8, x9
   19750:	stur	x8, [x29, #-160]
   19754:	mov	sp, x8
   19758:	ldur	x0, [x29, #-160]
   1975c:	ldur	x8, [x29, #-128]
   19760:	str	xzr, [x0], #8
   19764:	ldr	x9, [x8, #24]
   19768:	ldur	x8, [x29, #-176]
   1976c:	add	x8, x9, x8, lsl #3
   19770:	sub	x1, x8, x26, lsl #3
   19774:	cmp	x1, x0
   19778:	b.eq	19784 <mpfr_mul@@Base+0x13ec>  // b.none
   1977c:	mov	x2, x27
   19780:	bl	ba70 <memcpy@plt>
   19784:	ldp	x8, x9, [x29, #-136]
   19788:	cmp	x9, x8
   1978c:	b.eq	197fc <mpfr_mul@@Base+0x1464>  // b.none
   19790:	ldur	x8, [x29, #-184]
   19794:	cmp	x22, x8
   19798:	b.ge	197ac <mpfr_mul@@Base+0x1414>  // b.tcont
   1979c:	ldur	x8, [x29, #-192]
   197a0:	sub	x8, x8, #0x8
   197a4:	stur	x8, [x29, #-192]
   197a8:	b	197fc <mpfr_mul@@Base+0x1464>
   197ac:	lsl	x27, x26, #3
   197b0:	add	x1, x27, #0x8
   197b4:	cmp	x1, #0x4, lsl #12
   197b8:	b.hi	19904 <mpfr_mul@@Base+0x156c>  // b.pmore
   197bc:	add	x9, x1, #0xf
   197c0:	mov	x8, sp
   197c4:	and	x9, x9, #0xfffffffffffffff0
   197c8:	sub	x8, x8, x9
   197cc:	stur	x8, [x29, #-192]
   197d0:	mov	sp, x8
   197d4:	ldp	x0, x9, [x29, #-192]
   197d8:	ldur	x8, [x29, #-136]
   197dc:	str	xzr, [x0], #8
   197e0:	ldr	x8, [x8, #24]
   197e4:	add	x8, x8, x9, lsl #3
   197e8:	sub	x1, x8, x26, lsl #3
   197ec:	cmp	x1, x0
   197f0:	b.eq	197fc <mpfr_mul@@Base+0x1464>  // b.none
   197f4:	mov	x2, x27
   197f8:	bl	ba70 <memcpy@plt>
   197fc:	add	x8, x26, #0x1
   19800:	cmn	x26, #0x2
   19804:	mov	x27, x8
   19808:	lsl	x21, x8, #6
   1980c:	b.eq	198b4 <mpfr_mul@@Base+0x151c>  // b.none
   19810:	b.le	198bc <mpfr_mul@@Base+0x1524>
   19814:	add	x8, x26, #0x2
   19818:	clz	x8, x8
   1981c:	mov	w9, #0x40                  	// #64
   19820:	sub	x8, x9, x8
   19824:	lsl	x9, x27, #1
   19828:	subs	x26, x9, x23
   1982c:	sub	x8, x21, x8
   19830:	stur	x9, [x29, #-224]
   19834:	stur	x8, [x29, #-152]
   19838:	b.le	19860 <mpfr_mul@@Base+0x14c8>
   1983c:	lsl	x1, x27, #4
   19840:	cmp	x1, #0x4, lsl #12
   19844:	b.hi	198d8 <mpfr_mul@@Base+0x1540>  // b.pmore
   19848:	add	x9, x1, #0xf
   1984c:	mov	x8, sp
   19850:	and	x9, x9, #0xfffffffffffffff0
   19854:	sub	x0, x8, x9
   19858:	mov	sp, x0
   1985c:	add	x25, x0, x26, lsl #3
   19860:	mov	x9, x27
   19864:	mov	x22, x28
   19868:	ldp	x28, x21, [x29, #-216]
   1986c:	ldp	x27, x8, [x29, #-200]
   19870:	ldp	x10, x11, [x29, #-136]
   19874:	ldur	x14, [x29, #-144]
   19878:	ldur	x1, [x29, #-160]
   1987c:	ldur	x12, [x29, #-224]
   19880:	mov	x6, x23
   19884:	b	19200 <mpfr_mul@@Base+0xe68>
   19888:	sub	x2, x29, #0x38
   1988c:	sub	x1, x29, #0x38
   19890:	mov	x0, x19
   19894:	mov	w3, w20
   19898:	bl	bda0 <mpfr_mul@plt>
   1989c:	mov	w23, w0
   198a0:	b	18f24 <mpfr_mul@@Base+0xb8c>
   198a4:	ldur	x2, [x29, #-176]
   198a8:	mov	x22, x28
   198ac:	ldp	x28, x21, [x29, #-216]
   198b0:	b	1943c <mpfr_mul@@Base+0x10a4>
   198b4:	mov	x8, xzr
   198b8:	b	19824 <mpfr_mul@@Base+0x148c>
   198bc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   198c0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   198c4:	add	x0, x0, #0x733
   198c8:	add	x2, x2, #0xcea
   198cc:	mov	w1, #0x3c0                 	// #960
   198d0:	bl	cb20 <mpfr_assert_fail@plt>
   198d4:	b	19814 <mpfr_mul@@Base+0x147c>
   198d8:	sub	x0, x29, #0x40
   198dc:	bl	be10 <mpfr_tmp_allocate@plt>
   198e0:	b	1985c <mpfr_mul@@Base+0x14c4>
   198e4:	bl	c400 <mpfr_tmp_free@plt>
   198e8:	ldr	x8, [x24]
   198ec:	cbnz	x8, 196cc <mpfr_mul@@Base+0x1334>
   198f0:	b	196b8 <mpfr_mul@@Base+0x1320>
   198f4:	sub	x0, x29, #0x40
   198f8:	bl	be10 <mpfr_tmp_allocate@plt>
   198fc:	stur	x0, [x29, #-160]
   19900:	b	19758 <mpfr_mul@@Base+0x13c0>
   19904:	sub	x0, x29, #0x40
   19908:	bl	be10 <mpfr_tmp_allocate@plt>
   1990c:	stur	x0, [x29, #-192]
   19910:	b	197d4 <mpfr_mul@@Base+0x143c>

0000000000019914 <mpfr_mul_ui@@Base>:
   19914:	stp	x29, x30, [sp, #-80]!
   19918:	stp	x26, x25, [sp, #16]
   1991c:	stp	x24, x23, [sp, #32]
   19920:	stp	x22, x21, [sp, #48]
   19924:	stp	x20, x19, [sp, #64]
   19928:	mov	x29, sp
   1992c:	sub	sp, sp, #0x10
   19930:	ldr	x9, [x1, #16]
   19934:	mov	x8, #0x2                   	// #2
   19938:	movk	x8, #0x8000, lsl #48
   1993c:	add	x10, x8, #0x2
   19940:	mov	x22, x2
   19944:	mov	x20, x1
   19948:	cmp	x9, x10
   1994c:	mov	x19, x0
   19950:	b.lt	19d90 <mpfr_mul_ui@@Base+0x47c>  // b.tstop
   19954:	mov	w21, w3
   19958:	subs	x8, x22, #0x1
   1995c:	b.hi	19980 <mpfr_mul_ui@@Base+0x6c>  // b.pmore
   19960:	cbz	x22, 19dac <mpfr_mul_ui@@Base+0x498>
   19964:	ldr	w3, [x20, #8]
   19968:	mov	x0, x19
   1996c:	mov	x1, x20
   19970:	mov	w2, w21
   19974:	bl	c690 <mpfr_set4@plt>
   19978:	mov	w25, w0
   1997c:	b	19dc0 <mpfr_mul_ui@@Base+0x4ac>
   19980:	tst	x22, x8
   19984:	b.eq	19df8 <mpfr_mul_ui@@Base+0x4e4>  // b.none
   19988:	ldr	x8, [x20]
   1998c:	stur	xzr, [x29, #-8]
   19990:	sub	x9, x8, #0x1
   19994:	add	x8, x8, #0x3e
   19998:	cmp	x9, #0x0
   1999c:	csel	x8, x8, x9, lt  // lt = tstop
   199a0:	asr	x8, x8, #6
   199a4:	add	x25, x8, #0x2
   199a8:	lsl	x1, x25, #3
   199ac:	cmp	x1, #0x4, lsl #12
   199b0:	add	x23, x8, #0x1
   199b4:	b.hi	19e1c <mpfr_mul_ui@@Base+0x508>  // b.pmore
   199b8:	add	x9, x1, #0xf
   199bc:	mov	x8, sp
   199c0:	and	x9, x9, #0xfffffffffffffff0
   199c4:	sub	x24, x8, x9
   199c8:	mov	sp, x24
   199cc:	ldr	x1, [x20, #24]
   199d0:	mov	x0, x24
   199d4:	mov	x2, x23
   199d8:	mov	x3, x22
   199dc:	bl	cd10 <__gmpn_mul_1@plt>
   199e0:	str	x0, [x24, x23, lsl #3]
   199e4:	tbnz	x0, #63, 19e2c <mpfr_mul_ui@@Base+0x518>
   199e8:	clz	x22, x0
   199ec:	mov	x0, x24
   199f0:	mov	x1, x24
   199f4:	mov	x2, x25
   199f8:	mov	w3, w22
   199fc:	bl	bd10 <__gmpn_lshift@plt>
   19a00:	ldr	x11, [x19]
   19a04:	lsl	x10, x25, #6
   19a08:	mov	w8, #0x3e                  	// #62
   19a0c:	sub	x9, x10, #0x1
   19a10:	bfi	x8, x25, #6, #58
   19a14:	cmp	x9, #0x0
   19a18:	csel	x8, x8, x9, lt  // lt = tstop
   19a1c:	sub	x9, x11, #0x1
   19a20:	ldr	x23, [x19, #24]
   19a24:	add	x12, x11, #0x3e
   19a28:	cmp	x9, #0x0
   19a2c:	csel	x9, x12, x9, lt  // lt = tstop
   19a30:	asr	x8, x8, #6
   19a34:	asr	x9, x9, #6
   19a38:	add	x14, x8, #0x1
   19a3c:	cmp	x11, x10
   19a40:	add	x10, x9, #0x1
   19a44:	b.ge	19e34 <mpfr_mul_ui@@Base+0x520>  // b.tcont
   19a48:	neg	w12, w11
   19a4c:	add	x13, x24, x14, lsl #3
   19a50:	mvn	x15, x9
   19a54:	ands	x12, x12, #0x3f
   19a58:	add	x1, x13, x15, lsl #3
   19a5c:	b.eq	19e74 <mpfr_mul_ui@@Base+0x560>  // b.none
   19a60:	ldr	x13, [x1]
   19a64:	sub	x12, x12, #0x1
   19a68:	mov	w15, #0x1                   	// #1
   19a6c:	lsl	x15, x15, x12
   19a70:	sub	x16, x15, #0x1
   19a74:	and	x12, x13, x15
   19a78:	and	x13, x13, x16
   19a7c:	cbz	w21, 19a84 <mpfr_mul_ui@@Base+0x170>
   19a80:	cbnz	x12, 19aac <mpfr_mul_ui@@Base+0x198>
   19a84:	cbnz	x13, 19aac <mpfr_mul_ui@@Base+0x198>
   19a88:	sub	x14, x14, x10
   19a8c:	cbz	x14, 19aac <mpfr_mul_ui@@Base+0x198>
   19a90:	mvn	x13, x9
   19a94:	add	x14, x13, x8
   19a98:	ldr	x13, [x24, x14, lsl #3]
   19a9c:	subs	x14, x14, #0x1
   19aa0:	cset	w16, cs  // cs = hs, nlast
   19aa4:	cbnz	x13, 19aac <mpfr_mul_ui@@Base+0x198>
   19aa8:	tbnz	w16, #0, 19a98 <mpfr_mul_ui@@Base+0x184>
   19aac:	lsl	x26, x15, #1
   19ab0:	cmp	w21, #0x5
   19ab4:	b.eq	19c2c <mpfr_mul_ui@@Base+0x318>  // b.none
   19ab8:	cmp	w21, #0x1
   19abc:	b.eq	19aec <mpfr_mul_ui@@Base+0x1d8>  // b.none
   19ac0:	cbnz	w21, 19adc <mpfr_mul_ui@@Base+0x1c8>
   19ac4:	cbz	x12, 19aec <mpfr_mul_ui@@Base+0x1d8>
   19ac8:	cbnz	x13, 19b10 <mpfr_mul_ui@@Base+0x1fc>
   19acc:	ldr	x12, [x1]
   19ad0:	tst	x12, x26
   19ad4:	b.ne	19b10 <mpfr_mul_ui@@Base+0x1fc>  // b.any
   19ad8:	b	19af4 <mpfr_mul_ui@@Base+0x1e0>
   19adc:	ldr	w14, [x20, #8]
   19ae0:	add	w14, w21, w14, lsr #31
   19ae4:	cmp	w14, #0x3
   19ae8:	b.ne	19b08 <mpfr_mul_ui@@Base+0x1f4>  // b.any
   19aec:	orr	x8, x13, x12
   19af0:	cbz	x8, 19c2c <mpfr_mul_ui@@Base+0x318>
   19af4:	ldr	w8, [x20, #8]
   19af8:	neg	w25, w8
   19afc:	cmp	x23, x1
   19b00:	b.ne	19c38 <mpfr_mul_ui@@Base+0x324>  // b.any
   19b04:	b	19c44 <mpfr_mul_ui@@Base+0x330>
   19b08:	orr	x12, x13, x12
   19b0c:	cbz	x12, 19c2c <mpfr_mul_ui@@Base+0x318>
   19b10:	ldr	x12, [x1]
   19b14:	ldr	w25, [x20, #8]
   19b18:	adds	x12, x12, x26
   19b1c:	str	x12, [x23]
   19b20:	b.cc	19cd4 <mpfr_mul_ui@@Base+0x3c0>  // b.lo, b.ul, b.last
   19b24:	lsl	x12, x8, #3
   19b28:	lsl	x13, x9, #3
   19b2c:	sub	x13, x12, x13
   19b30:	mov	x11, xzr
   19b34:	mov	x16, xzr
   19b38:	add	x15, x24, x13
   19b3c:	mov	x12, x9
   19b40:	add	x14, x16, #0x1
   19b44:	cmp	x14, x9
   19b48:	b.gt	19d40 <mpfr_mul_ui@@Base+0x42c>
   19b4c:	lsl	x16, x16, #3
   19b50:	add	x17, x15, x16
   19b54:	ldr	x17, [x17, #8]
   19b58:	add	x16, x23, x16
   19b5c:	sub	x11, x11, #0x8
   19b60:	sub	x12, x12, #0x1
   19b64:	adds	x17, x17, #0x1
   19b68:	str	x17, [x16, #8]
   19b6c:	mov	x16, x14
   19b70:	b.cs	19b40 <mpfr_mul_ui@@Base+0x22c>  // b.hs, b.nlast
   19b74:	cmp	x1, x23
   19b78:	b.eq	19c44 <mpfr_mul_ui@@Base+0x330>  // b.none
   19b7c:	cmp	x14, x9
   19b80:	b.ge	19c44 <mpfr_mul_ui@@Base+0x330>  // b.tcont
   19b84:	sub	x15, x9, x14
   19b88:	cmp	x15, #0x4
   19b8c:	add	x16, x14, #0x1
   19b90:	b.cc	19c08 <mpfr_mul_ui@@Base+0x2f4>  // b.lo, b.ul, b.last
   19b94:	sub	x17, x23, x11
   19b98:	add	x18, x24, x8, lsl #3
   19b9c:	add	x0, x17, #0x8
   19ba0:	add	x18, x18, #0x8
   19ba4:	cmp	x18, x0
   19ba8:	b.ls	19bc4 <mpfr_mul_ui@@Base+0x2b0>  // b.plast
   19bac:	add	x18, x24, x13
   19bb0:	sub	x18, x18, x11
   19bb4:	add	x10, x23, x10, lsl #3
   19bb8:	add	x18, x18, #0x8
   19bbc:	cmp	x18, x10
   19bc0:	b.cc	19c08 <mpfr_mul_ui@@Base+0x2f4>  // b.lo, b.ul, b.last
   19bc4:	add	x16, x24, x13
   19bc8:	and	x12, x12, #0xfffffffffffffffc
   19bcc:	and	x13, x15, #0xfffffffffffffffc
   19bd0:	sub	x11, x16, x11
   19bd4:	add	x12, x12, x14
   19bd8:	add	x10, x17, #0x18
   19bdc:	add	x11, x11, #0x18
   19be0:	add	x16, x12, #0x1
   19be4:	mov	x12, x13
   19be8:	ldp	q0, q1, [x11, #-16]
   19bec:	add	x11, x11, #0x20
   19bf0:	subs	x12, x12, #0x4
   19bf4:	stp	q0, q1, [x10, #-16]
   19bf8:	add	x10, x10, #0x20
   19bfc:	b.ne	19be8 <mpfr_mul_ui@@Base+0x2d4>  // b.any
   19c00:	cmp	x15, x13
   19c04:	b.eq	19c44 <mpfr_mul_ui@@Base+0x330>  // b.none
   19c08:	sub	x9, x16, x9
   19c0c:	add	x10, x23, x16, lsl #3
   19c10:	add	x8, x24, x8, lsl #3
   19c14:	ldr	x11, [x8, x9, lsl #3]
   19c18:	add	x9, x9, #0x1
   19c1c:	cmp	x9, #0x1
   19c20:	str	x11, [x10], #8
   19c24:	b.ne	19c14 <mpfr_mul_ui@@Base+0x300>  // b.any
   19c28:	b	19c44 <mpfr_mul_ui@@Base+0x330>
   19c2c:	mov	w25, wzr
   19c30:	cmp	x23, x1
   19c34:	b.eq	19c44 <mpfr_mul_ui@@Base+0x330>  // b.none
   19c38:	lsl	x2, x10, #3
   19c3c:	mov	x0, x23
   19c40:	bl	ba70 <memcpy@plt>
   19c44:	ldr	x8, [x23]
   19c48:	neg	x9, x26
   19c4c:	and	x8, x8, x9
   19c50:	str	x8, [x23]
   19c54:	ldur	x0, [x29, #-8]
   19c58:	cbnz	x0, 19e6c <mpfr_mul_ui@@Base+0x558>
   19c5c:	mov	w8, #0x40                  	// #64
   19c60:	sub	w9, w8, w22
   19c64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   19c68:	ldr	x1, [x0, #2608]
   19c6c:	add	x0, x0, #0xa30
   19c70:	blr	x1
   19c74:	mrs	x8, tpidr_el0
   19c78:	ldr	x10, [x8, x0]
   19c7c:	sxtw	x9, w9
   19c80:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   19c84:	add	x11, x9, x11
   19c88:	cmp	x10, x11
   19c8c:	b.lt	19de0 <mpfr_mul_ui@@Base+0x4cc>  // b.tstop
   19c90:	ldr	x11, [x20, #16]
   19c94:	sub	x10, x10, x9
   19c98:	cmp	x11, x10
   19c9c:	b.gt	19de0 <mpfr_mul_ui@@Base+0x4cc>
   19ca0:	add	x9, x11, x9
   19ca4:	str	x9, [x19, #16]
   19ca8:	ldr	w9, [x20, #8]
   19cac:	str	w9, [x19, #8]
   19cb0:	cbz	w25, 19dc0 <mpfr_mul_ui@@Base+0x4ac>
   19cb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   19cb8:	ldr	x1, [x0, #2640]
   19cbc:	add	x0, x0, #0xa50
   19cc0:	blr	x1
   19cc4:	ldr	w9, [x8, x0]
   19cc8:	orr	w9, w9, #0x8
   19ccc:	str	w9, [x8, x0]
   19cd0:	b	19dc0 <mpfr_mul_ui@@Base+0x4ac>
   19cd4:	cmp	x11, #0x41
   19cd8:	b.lt	19c44 <mpfr_mul_ui@@Base+0x330>  // b.tstop
   19cdc:	cmp	x1, x23
   19ce0:	b.eq	19c44 <mpfr_mul_ui@@Base+0x330>  // b.none
   19ce4:	cmp	x9, #0x4
   19ce8:	b.cc	19d18 <mpfr_mul_ui@@Base+0x404>  // b.lo, b.ul, b.last
   19cec:	lsl	x12, x8, #3
   19cf0:	add	x11, x12, #0x8
   19cf4:	add	x13, x23, #0x8
   19cf8:	add	x14, x24, x11
   19cfc:	cmp	x14, x13
   19d00:	b.ls	19d50 <mpfr_mul_ui@@Base+0x43c>  // b.plast
   19d04:	sub	x11, x11, x9, lsl #3
   19d08:	add	x10, x23, x10, lsl #3
   19d0c:	add	x11, x24, x11
   19d10:	cmp	x11, x10
   19d14:	b.cs	19d50 <mpfr_mul_ui@@Base+0x43c>  // b.hs, b.nlast
   19d18:	mov	w10, #0x1                   	// #1
   19d1c:	sub	x9, x10, x9
   19d20:	add	x10, x23, x10, lsl #3
   19d24:	add	x8, x24, x8, lsl #3
   19d28:	ldr	x11, [x8, x9, lsl #3]
   19d2c:	add	x9, x9, #0x1
   19d30:	cmp	x9, #0x1
   19d34:	str	x11, [x10], #8
   19d38:	b.ne	19d28 <mpfr_mul_ui@@Base+0x414>  // b.any
   19d3c:	b	19c44 <mpfr_mul_ui@@Base+0x330>
   19d40:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   19d44:	sub	w22, w22, #0x1
   19d48:	str	x8, [x23, x9, lsl #3]
   19d4c:	b	19c44 <mpfr_mul_ui@@Base+0x330>
   19d50:	sub	x12, x12, x9, lsl #3
   19d54:	and	x11, x9, #0xfffffffffffffffc
   19d58:	add	x12, x12, x24
   19d5c:	orr	x10, x11, #0x1
   19d60:	add	x12, x12, #0x18
   19d64:	add	x13, x23, #0x18
   19d68:	mov	x14, x11
   19d6c:	ldp	q0, q1, [x12, #-16]
   19d70:	add	x12, x12, #0x20
   19d74:	subs	x14, x14, #0x4
   19d78:	stp	q0, q1, [x13, #-16]
   19d7c:	add	x13, x13, #0x20
   19d80:	b.ne	19d6c <mpfr_mul_ui@@Base+0x458>  // b.any
   19d84:	cmp	x9, x11
   19d88:	b.eq	19c44 <mpfr_mul_ui@@Base+0x330>  // b.none
   19d8c:	b	19d1c <mpfr_mul_ui@@Base+0x408>
   19d90:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19d94:	cmp	x9, x10
   19d98:	b.eq	19e90 <mpfr_mul_ui@@Base+0x57c>  // b.none
   19d9c:	mov	x10, #0x2                   	// #2
   19da0:	movk	x10, #0x8000, lsl #48
   19da4:	cmp	x9, x10
   19da8:	b.eq	19ea0 <mpfr_mul_ui@@Base+0x58c>  // b.none
   19dac:	mov	w25, wzr
   19db0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   19db4:	str	x8, [x19, #16]
   19db8:	ldr	w8, [x20, #8]
   19dbc:	str	w8, [x19, #8]
   19dc0:	mov	w0, w25
   19dc4:	mov	sp, x29
   19dc8:	ldp	x20, x19, [sp, #64]
   19dcc:	ldp	x22, x21, [sp, #48]
   19dd0:	ldp	x24, x23, [sp, #32]
   19dd4:	ldp	x26, x25, [sp, #16]
   19dd8:	ldp	x29, x30, [sp], #80
   19ddc:	ret
   19de0:	ldr	w2, [x20, #8]
   19de4:	mov	x0, x19
   19de8:	mov	w1, w21
   19dec:	bl	bf90 <mpfr_overflow@plt>
   19df0:	mov	w25, w0
   19df4:	b	19dc0 <mpfr_mul_ui@@Base+0x4ac>
   19df8:	clz	x8, x8
   19dfc:	mov	w9, #0x40                  	// #64
   19e00:	sub	x2, x9, x8
   19e04:	mov	x0, x19
   19e08:	mov	x1, x20
   19e0c:	mov	w3, w21
   19e10:	bl	bbe0 <mpfr_mul_2si@plt>
   19e14:	mov	w25, w0
   19e18:	b	19dc0 <mpfr_mul_ui@@Base+0x4ac>
   19e1c:	sub	x0, x29, #0x8
   19e20:	bl	be10 <mpfr_tmp_allocate@plt>
   19e24:	mov	x24, x0
   19e28:	b	199cc <mpfr_mul_ui@@Base+0xb8>
   19e2c:	mov	w22, wzr
   19e30:	b	19a00 <mpfr_mul_ui@@Base+0xec>
   19e34:	sub	x25, x10, x14
   19e38:	add	x0, x23, x25, lsl #3
   19e3c:	cmp	x0, x24
   19e40:	b.eq	19e50 <mpfr_mul_ui@@Base+0x53c>  // b.none
   19e44:	lsl	x2, x14, #3
   19e48:	mov	x1, x24
   19e4c:	bl	ba70 <memcpy@plt>
   19e50:	lsl	x2, x25, #3
   19e54:	mov	x0, x23
   19e58:	mov	w1, wzr
   19e5c:	bl	c150 <memset@plt>
   19e60:	mov	w25, wzr
   19e64:	ldur	x0, [x29, #-8]
   19e68:	cbz	x0, 19c5c <mpfr_mul_ui@@Base+0x348>
   19e6c:	bl	c400 <mpfr_tmp_free@plt>
   19e70:	b	19c5c <mpfr_mul_ui@@Base+0x348>
   19e74:	ldur	x13, [x1, #-8]
   19e78:	and	x12, x13, #0x8000000000000000
   19e7c:	and	x13, x13, #0x7fffffffffffffff
   19e80:	cbz	w21, 19ec8 <mpfr_mul_ui@@Base+0x5b4>
   19e84:	cbz	x12, 19ec8 <mpfr_mul_ui@@Base+0x5b4>
   19e88:	mov	w26, #0x1                   	// #1
   19e8c:	b	19ab0 <mpfr_mul_ui@@Base+0x19c>
   19e90:	cbz	x22, 19ea0 <mpfr_mul_ui@@Base+0x58c>
   19e94:	mov	w25, wzr
   19e98:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   19e9c:	b	19db4 <mpfr_mul_ui@@Base+0x4a0>
   19ea0:	str	x8, [x19, #16]
   19ea4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   19ea8:	ldr	x1, [x0, #2640]
   19eac:	add	x0, x0, #0xa50
   19eb0:	blr	x1
   19eb4:	mrs	x8, tpidr_el0
   19eb8:	ldr	w9, [x8, x0]
   19ebc:	mov	w25, wzr
   19ec0:	orr	w9, w9, #0x4
   19ec4:	b	19ccc <mpfr_mul_ui@@Base+0x3b8>
   19ec8:	mov	w26, #0x1                   	// #1
   19ecc:	cbnz	x13, 19ab0 <mpfr_mul_ui@@Base+0x19c>
   19ed0:	sub	x14, x8, x10
   19ed4:	cbz	x14, 19ab0 <mpfr_mul_ui@@Base+0x19c>
   19ed8:	sub	x13, x8, x9
   19edc:	sub	x14, x13, #0x2
   19ee0:	mov	w26, #0x1                   	// #1
   19ee4:	ldr	x13, [x24, x14, lsl #3]
   19ee8:	subs	x14, x14, #0x1
   19eec:	cset	w15, cs  // cs = hs, nlast
   19ef0:	cbnz	x13, 19ab0 <mpfr_mul_ui@@Base+0x19c>
   19ef4:	tbnz	w15, #0, 19ee4 <mpfr_mul_ui@@Base+0x5d0>
   19ef8:	b	19ab0 <mpfr_mul_ui@@Base+0x19c>

0000000000019efc <mpfr_neg@@Base>:
   19efc:	stp	x29, x30, [sp, #-16]!
   19f00:	cmp	x0, x1
   19f04:	mov	x29, sp
   19f08:	b.ne	19f38 <mpfr_neg@@Base+0x3c>  // b.any
   19f0c:	ldr	w8, [x0, #8]
   19f10:	ldr	x9, [x0, #16]
   19f14:	mov	x10, #0x2                   	// #2
   19f18:	movk	x10, #0x8000, lsl #48
   19f1c:	neg	w8, w8
   19f20:	cmp	x9, x10
   19f24:	str	w8, [x0, #8]
   19f28:	b.eq	19f48 <mpfr_neg@@Base+0x4c>  // b.none
   19f2c:	mov	w0, wzr
   19f30:	ldp	x29, x30, [sp], #16
   19f34:	ret
   19f38:	ldr	w8, [x1, #8]
   19f3c:	neg	w3, w8
   19f40:	ldp	x29, x30, [sp], #16
   19f44:	b	c690 <mpfr_set4@plt>
   19f48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   19f4c:	ldr	x1, [x0, #2640]
   19f50:	add	x0, x0, #0xa50
   19f54:	blr	x1
   19f58:	mrs	x8, tpidr_el0
   19f5c:	ldr	w9, [x8, x0]
   19f60:	orr	w9, w9, #0x4
   19f64:	str	w9, [x8, x0]
   19f68:	mov	w0, wzr
   19f6c:	ldp	x29, x30, [sp], #16
   19f70:	ret

0000000000019f74 <mpfr_nexttozero@@Base>:
   19f74:	sub	sp, sp, #0x20
   19f78:	stp	x29, x30, [sp, #16]
   19f7c:	ldr	x9, [x0, #16]
   19f80:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   19f84:	mov	x8, x0
   19f88:	add	x29, sp, #0x10
   19f8c:	cmp	x9, x10
   19f90:	b.le	1a004 <mpfr_nexttozero@@Base+0x90>
   19f94:	ldr	x9, [x8, #24]
   19f98:	ldr	x10, [x8]
   19f9c:	mov	w11, #0x1                   	// #1
   19fa0:	ldr	x15, [x9]
   19fa4:	sub	x12, x10, #0x1
   19fa8:	add	x13, x10, #0x3e
   19fac:	neg	w14, w10
   19fb0:	cmp	x12, #0x0
   19fb4:	csel	x10, x13, x12, lt  // lt = tstop
   19fb8:	lsl	x11, x11, x14
   19fbc:	asr	x10, x10, #6
   19fc0:	subs	x11, x15, x11
   19fc4:	str	x11, [x9]
   19fc8:	b.cs	19ff0 <mpfr_nexttozero@@Base+0x7c>  // b.hs, b.nlast
   19fcc:	mov	w11, #0x1                   	// #1
   19fd0:	cmp	x11, x10
   19fd4:	b.gt	19ff0 <mpfr_nexttozero@@Base+0x7c>
   19fd8:	lsl	x12, x11, #3
   19fdc:	ldr	x13, [x9, x12]
   19fe0:	add	x11, x11, #0x1
   19fe4:	sub	x14, x13, #0x1
   19fe8:	str	x14, [x9, x12]
   19fec:	cbz	x13, 19fd0 <mpfr_nexttozero@@Base+0x5c>
   19ff0:	ldr	x11, [x9, x10, lsl #3]
   19ff4:	tbz	x11, #63, 1a030 <mpfr_nexttozero@@Base+0xbc>
   19ff8:	ldp	x29, x30, [sp, #16]
   19ffc:	add	sp, sp, #0x20
   1a000:	ret
   1a004:	b.ne	1a078 <mpfr_nexttozero@@Base+0x104>  // b.any
   1a008:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a00c:	ldr	x1, [x0, #2608]
   1a010:	add	x0, x0, #0xa30
   1a014:	blr	x1
   1a018:	mrs	x9, tpidr_el0
   1a01c:	ldr	x1, [x9, x0]
   1a020:	ldp	x29, x30, [sp, #16]
   1a024:	mov	x0, x8
   1a028:	add	sp, sp, #0x20
   1a02c:	b	c110 <mpfr_setmax@plt>
   1a030:	ldr	x11, [x8, #16]
   1a034:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a038:	ldr	x1, [x0, #2576]
   1a03c:	add	x0, x0, #0xa10
   1a040:	blr	x1
   1a044:	mrs	x12, tpidr_el0
   1a048:	ldr	x12, [x12, x0]
   1a04c:	cmp	x11, x12
   1a050:	b.eq	1a0b8 <mpfr_nexttozero@@Base+0x144>  // b.none
   1a054:	sub	x11, x11, #0x1
   1a058:	str	x11, [x8, #16]
   1a05c:	lsl	x8, x10, #3
   1a060:	ldr	x10, [x9, x8]
   1a064:	orr	x10, x10, #0x8000000000000000
   1a068:	str	x10, [x9, x8]
   1a06c:	ldp	x29, x30, [sp, #16]
   1a070:	add	sp, sp, #0x20
   1a074:	ret
   1a078:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a07c:	cmp	x9, x10
   1a080:	b.ne	1a0cc <mpfr_nexttozero@@Base+0x158>  // b.any
   1a084:	ldr	w9, [x8, #8]
   1a088:	neg	w9, w9
   1a08c:	str	w9, [x8, #8]
   1a090:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a094:	ldr	x1, [x0, #2576]
   1a098:	add	x0, x0, #0xa10
   1a09c:	blr	x1
   1a0a0:	mrs	x9, tpidr_el0
   1a0a4:	ldr	x1, [x9, x0]
   1a0a8:	ldp	x29, x30, [sp, #16]
   1a0ac:	mov	x0, x8
   1a0b0:	add	sp, sp, #0x20
   1a0b4:	b	c2b0 <mpfr_setmin@plt>
   1a0b8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1a0bc:	str	x9, [x8, #16]
   1a0c0:	ldp	x29, x30, [sp, #16]
   1a0c4:	add	sp, sp, #0x20
   1a0c8:	ret
   1a0cc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a0d0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a0d4:	add	x0, x0, #0x786
   1a0d8:	add	x2, x2, #0x78d
   1a0dc:	mov	w1, #0x2b                  	// #43
   1a0e0:	str	x8, [sp, #8]
   1a0e4:	bl	cb20 <mpfr_assert_fail@plt>
   1a0e8:	ldr	x8, [sp, #8]
   1a0ec:	b	1a084 <mpfr_nexttozero@@Base+0x110>

000000000001a0f0 <mpfr_nexttoinf@@Base>:
   1a0f0:	stp	x29, x30, [sp, #-16]!
   1a0f4:	ldr	x9, [x0, #16]
   1a0f8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1a0fc:	mov	x8, x0
   1a100:	mov	x29, sp
   1a104:	cmp	x9, x10
   1a108:	b.le	1a1ac <mpfr_nexttoinf@@Base+0xbc>
   1a10c:	ldr	x10, [x8]
   1a110:	ldr	x9, [x8, #24]
   1a114:	sub	x11, x10, #0x1
   1a118:	ldr	x14, [x9]
   1a11c:	add	x12, x10, #0x3e
   1a120:	cmp	x11, #0x0
   1a124:	neg	w13, w10
   1a128:	csel	x10, x12, x11, lt  // lt = tstop
   1a12c:	mov	w11, #0x1                   	// #1
   1a130:	lsl	x11, x11, x13
   1a134:	adds	x11, x14, x11
   1a138:	str	x11, [x9]
   1a13c:	b.cc	1a168 <mpfr_nexttoinf@@Base+0x78>  // b.lo, b.ul, b.last
   1a140:	asr	x10, x10, #6
   1a144:	mov	w11, #0x1                   	// #1
   1a148:	cmp	x11, x10
   1a14c:	b.gt	1a170 <mpfr_nexttoinf@@Base+0x80>
   1a150:	lsl	x12, x11, #3
   1a154:	ldr	x13, [x9, x12]
   1a158:	add	x11, x11, #0x1
   1a15c:	adds	x13, x13, #0x1
   1a160:	str	x13, [x9, x12]
   1a164:	b.cs	1a148 <mpfr_nexttoinf@@Base+0x58>  // b.hs, b.nlast
   1a168:	ldp	x29, x30, [sp], #16
   1a16c:	ret
   1a170:	ldr	x11, [x8, #16]
   1a174:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a178:	ldr	x1, [x0, #2608]
   1a17c:	add	x0, x0, #0xa30
   1a180:	blr	x1
   1a184:	mrs	x12, tpidr_el0
   1a188:	ldr	x12, [x12, x0]
   1a18c:	cmp	x11, x12
   1a190:	b.eq	1a1dc <mpfr_nexttoinf@@Base+0xec>  // b.none
   1a194:	add	x11, x11, #0x1
   1a198:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   1a19c:	str	x11, [x8, #16]
   1a1a0:	str	x12, [x9, x10, lsl #3]
   1a1a4:	ldp	x29, x30, [sp], #16
   1a1a8:	ret
   1a1ac:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a1b0:	cmp	x9, x10
   1a1b4:	b.ne	1a168 <mpfr_nexttoinf@@Base+0x78>  // b.any
   1a1b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a1bc:	ldr	x1, [x0, #2576]
   1a1c0:	add	x0, x0, #0xa10
   1a1c4:	blr	x1
   1a1c8:	mrs	x9, tpidr_el0
   1a1cc:	ldr	x1, [x9, x0]
   1a1d0:	mov	x0, x8
   1a1d4:	ldp	x29, x30, [sp], #16
   1a1d8:	b	c2b0 <mpfr_setmin@plt>
   1a1dc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a1e0:	str	x9, [x8, #16]
   1a1e4:	ldp	x29, x30, [sp], #16
   1a1e8:	ret

000000000001a1ec <mpfr_nextabove@@Base>:
   1a1ec:	stp	x29, x30, [sp, #-16]!
   1a1f0:	ldr	x9, [x0, #16]
   1a1f4:	mov	x10, #0x2                   	// #2
   1a1f8:	movk	x10, #0x8000, lsl #48
   1a1fc:	mov	x29, sp
   1a200:	cmp	x9, x10
   1a204:	b.eq	1a2cc <mpfr_nextabove@@Base+0xe0>  // b.none
   1a208:	ldr	w11, [x0, #8]
   1a20c:	mov	x8, x0
   1a210:	tbnz	w11, #31, 1a284 <mpfr_nextabove@@Base+0x98>
   1a214:	add	x10, x10, #0x2
   1a218:	cmp	x9, x10
   1a21c:	b.lt	1a2f4 <mpfr_nextabove@@Base+0x108>  // b.tstop
   1a220:	ldr	x10, [x8]
   1a224:	ldr	x9, [x8, #24]
   1a228:	sub	x11, x10, #0x1
   1a22c:	ldr	x14, [x9]
   1a230:	add	x12, x10, #0x3e
   1a234:	cmp	x11, #0x0
   1a238:	neg	w13, w10
   1a23c:	csel	x10, x12, x11, lt  // lt = tstop
   1a240:	mov	w11, #0x1                   	// #1
   1a244:	lsl	x11, x11, x13
   1a248:	adds	x11, x14, x11
   1a24c:	str	x11, [x9]
   1a250:	b.cc	1a27c <mpfr_nextabove@@Base+0x90>  // b.lo, b.ul, b.last
   1a254:	asr	x10, x10, #6
   1a258:	mov	w11, #0x1                   	// #1
   1a25c:	cmp	x11, x10
   1a260:	b.gt	1a290 <mpfr_nextabove@@Base+0xa4>
   1a264:	lsl	x12, x11, #3
   1a268:	ldr	x13, [x9, x12]
   1a26c:	add	x11, x11, #0x1
   1a270:	adds	x13, x13, #0x1
   1a274:	str	x13, [x9, x12]
   1a278:	b.cs	1a25c <mpfr_nextabove@@Base+0x70>  // b.hs, b.nlast
   1a27c:	ldp	x29, x30, [sp], #16
   1a280:	ret
   1a284:	mov	x0, x8
   1a288:	ldp	x29, x30, [sp], #16
   1a28c:	b	c450 <mpfr_nexttozero@plt>
   1a290:	ldr	x11, [x8, #16]
   1a294:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a298:	ldr	x1, [x0, #2608]
   1a29c:	add	x0, x0, #0xa30
   1a2a0:	blr	x1
   1a2a4:	mrs	x12, tpidr_el0
   1a2a8:	ldr	x12, [x12, x0]
   1a2ac:	cmp	x11, x12
   1a2b0:	b.eq	1a324 <mpfr_nextabove@@Base+0x138>  // b.none
   1a2b4:	add	x11, x11, #0x1
   1a2b8:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   1a2bc:	str	x11, [x8, #16]
   1a2c0:	str	x12, [x9, x10, lsl #3]
   1a2c4:	ldp	x29, x30, [sp], #16
   1a2c8:	ret
   1a2cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a2d0:	ldr	x1, [x0, #2640]
   1a2d4:	add	x0, x0, #0xa50
   1a2d8:	blr	x1
   1a2dc:	mrs	x8, tpidr_el0
   1a2e0:	ldr	w9, [x8, x0]
   1a2e4:	orr	w9, w9, #0x4
   1a2e8:	str	w9, [x8, x0]
   1a2ec:	ldp	x29, x30, [sp], #16
   1a2f0:	ret
   1a2f4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a2f8:	cmp	x9, x10
   1a2fc:	b.ne	1a27c <mpfr_nextabove@@Base+0x90>  // b.any
   1a300:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a304:	ldr	x1, [x0, #2576]
   1a308:	add	x0, x0, #0xa10
   1a30c:	blr	x1
   1a310:	mrs	x9, tpidr_el0
   1a314:	ldr	x1, [x9, x0]
   1a318:	mov	x0, x8
   1a31c:	ldp	x29, x30, [sp], #16
   1a320:	b	c2b0 <mpfr_setmin@plt>
   1a324:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a328:	str	x9, [x8, #16]
   1a32c:	ldp	x29, x30, [sp], #16
   1a330:	ret

000000000001a334 <mpfr_nextbelow@@Base>:
   1a334:	stp	x29, x30, [sp, #-16]!
   1a338:	ldr	x9, [x0, #16]
   1a33c:	mov	x10, #0x2                   	// #2
   1a340:	movk	x10, #0x8000, lsl #48
   1a344:	mov	x29, sp
   1a348:	cmp	x9, x10
   1a34c:	b.eq	1a414 <mpfr_nextbelow@@Base+0xe0>  // b.none
   1a350:	ldr	w11, [x0, #8]
   1a354:	mov	x8, x0
   1a358:	tbnz	w11, #31, 1a368 <mpfr_nextbelow@@Base+0x34>
   1a35c:	mov	x0, x8
   1a360:	ldp	x29, x30, [sp], #16
   1a364:	b	c450 <mpfr_nexttozero@plt>
   1a368:	add	x10, x10, #0x2
   1a36c:	cmp	x9, x10
   1a370:	b.lt	1a43c <mpfr_nextbelow@@Base+0x108>  // b.tstop
   1a374:	ldr	x10, [x8]
   1a378:	ldr	x9, [x8, #24]
   1a37c:	sub	x11, x10, #0x1
   1a380:	ldr	x14, [x9]
   1a384:	add	x12, x10, #0x3e
   1a388:	cmp	x11, #0x0
   1a38c:	neg	w13, w10
   1a390:	csel	x10, x12, x11, lt  // lt = tstop
   1a394:	mov	w11, #0x1                   	// #1
   1a398:	lsl	x11, x11, x13
   1a39c:	adds	x11, x14, x11
   1a3a0:	str	x11, [x9]
   1a3a4:	b.cc	1a3d0 <mpfr_nextbelow@@Base+0x9c>  // b.lo, b.ul, b.last
   1a3a8:	asr	x10, x10, #6
   1a3ac:	mov	w11, #0x1                   	// #1
   1a3b0:	cmp	x11, x10
   1a3b4:	b.gt	1a3d8 <mpfr_nextbelow@@Base+0xa4>
   1a3b8:	lsl	x12, x11, #3
   1a3bc:	ldr	x13, [x9, x12]
   1a3c0:	add	x11, x11, #0x1
   1a3c4:	adds	x13, x13, #0x1
   1a3c8:	str	x13, [x9, x12]
   1a3cc:	b.cs	1a3b0 <mpfr_nextbelow@@Base+0x7c>  // b.hs, b.nlast
   1a3d0:	ldp	x29, x30, [sp], #16
   1a3d4:	ret
   1a3d8:	ldr	x11, [x8, #16]
   1a3dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a3e0:	ldr	x1, [x0, #2608]
   1a3e4:	add	x0, x0, #0xa30
   1a3e8:	blr	x1
   1a3ec:	mrs	x12, tpidr_el0
   1a3f0:	ldr	x12, [x12, x0]
   1a3f4:	cmp	x11, x12
   1a3f8:	b.eq	1a46c <mpfr_nextbelow@@Base+0x138>  // b.none
   1a3fc:	add	x11, x11, #0x1
   1a400:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   1a404:	str	x11, [x8, #16]
   1a408:	str	x12, [x9, x10, lsl #3]
   1a40c:	ldp	x29, x30, [sp], #16
   1a410:	ret
   1a414:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a418:	ldr	x1, [x0, #2640]
   1a41c:	add	x0, x0, #0xa50
   1a420:	blr	x1
   1a424:	mrs	x8, tpidr_el0
   1a428:	ldr	w9, [x8, x0]
   1a42c:	orr	w9, w9, #0x4
   1a430:	str	w9, [x8, x0]
   1a434:	ldp	x29, x30, [sp], #16
   1a438:	ret
   1a43c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1a440:	cmp	x9, x10
   1a444:	b.ne	1a3d0 <mpfr_nextbelow@@Base+0x9c>  // b.any
   1a448:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a44c:	ldr	x1, [x0, #2576]
   1a450:	add	x0, x0, #0xa10
   1a454:	blr	x1
   1a458:	mrs	x9, tpidr_el0
   1a45c:	ldr	x1, [x9, x0]
   1a460:	mov	x0, x8
   1a464:	ldp	x29, x30, [sp], #16
   1a468:	b	c2b0 <mpfr_setmin@plt>
   1a46c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a470:	str	x9, [x8, #16]
   1a474:	ldp	x29, x30, [sp], #16
   1a478:	ret

000000000001a47c <mpfr_nexttoward@@Base>:
   1a47c:	stp	x29, x30, [sp, #-32]!
   1a480:	ldr	x9, [x0, #16]
   1a484:	mov	x8, #0x2                   	// #2
   1a488:	movk	x8, #0x8000, lsl #48
   1a48c:	str	x19, [sp, #16]
   1a490:	cmp	x9, x8
   1a494:	mov	x29, sp
   1a498:	b.eq	1a4e4 <mpfr_nexttoward@@Base+0x68>  // b.none
   1a49c:	ldr	x9, [x1, #16]
   1a4a0:	mov	x19, x0
   1a4a4:	cmp	x9, x8
   1a4a8:	b.eq	1a4e0 <mpfr_nexttoward@@Base+0x64>  // b.none
   1a4ac:	mov	w2, #0x1                   	// #1
   1a4b0:	mov	x0, x19
   1a4b4:	bl	c980 <mpfr_cmp3@plt>
   1a4b8:	cbz	w0, 1a504 <mpfr_nexttoward@@Base+0x88>
   1a4bc:	tbnz	w0, #31, 1a4d0 <mpfr_nexttoward@@Base+0x54>
   1a4c0:	mov	x0, x19
   1a4c4:	ldr	x19, [sp, #16]
   1a4c8:	ldp	x29, x30, [sp], #32
   1a4cc:	b	be20 <mpfr_nextbelow@plt>
   1a4d0:	mov	x0, x19
   1a4d4:	ldr	x19, [sp, #16]
   1a4d8:	ldp	x29, x30, [sp], #32
   1a4dc:	b	c160 <mpfr_nextabove@plt>
   1a4e0:	str	x8, [x19, #16]
   1a4e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1a4e8:	ldr	x1, [x0, #2640]
   1a4ec:	add	x0, x0, #0xa50
   1a4f0:	blr	x1
   1a4f4:	mrs	x8, tpidr_el0
   1a4f8:	ldr	w9, [x8, x0]
   1a4fc:	orr	w9, w9, #0x4
   1a500:	str	w9, [x8, x0]
   1a504:	ldr	x19, [sp, #16]
   1a508:	ldp	x29, x30, [sp], #32
   1a50c:	ret

000000000001a510 <__gmpfr_out_str@@Base>:
   1a510:	stp	x29, x30, [sp, #-64]!
   1a514:	sub	w8, w1, #0x2
   1a518:	str	x23, [sp, #16]
   1a51c:	stp	x22, x21, [sp, #32]
   1a520:	stp	x20, x19, [sp, #48]
   1a524:	mov	w22, w4
   1a528:	mov	x20, x3
   1a52c:	mov	x23, x2
   1a530:	mov	w21, w1
   1a534:	cmp	w8, #0x3d
   1a538:	mov	x19, x0
   1a53c:	mov	x29, sp
   1a540:	b.cs	1a688 <__gmpfr_out_str@@Base+0x178>  // b.hs, b.nlast
   1a544:	ldr	x8, [x20, #16]
   1a548:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a54c:	cmp	x8, x9
   1a550:	b.le	1a6b0 <__gmpfr_out_str@@Base+0x1a0>
   1a554:	add	x1, x29, #0x18
   1a558:	mov	x0, xzr
   1a55c:	mov	w2, w21
   1a560:	mov	x3, x23
   1a564:	mov	x4, x20
   1a568:	mov	w5, w22
   1a56c:	bl	c4f0 <mpfr_get_str@plt>
   1a570:	mov	x22, x0
   1a574:	bl	bb10 <strlen@plt>
   1a578:	mov	x8, x0
   1a57c:	ldrb	w0, [x22]
   1a580:	add	x20, x8, #0x1
   1a584:	mov	x23, x22
   1a588:	cmp	w0, #0x2d
   1a58c:	b.ne	1a5a8 <__gmpfr_out_str@@Base+0x98>  // b.any
   1a590:	mov	x1, x19
   1a594:	bl	bdf0 <fputc@plt>
   1a598:	cmn	w0, #0x1
   1a59c:	b.eq	1a660 <__gmpfr_out_str@@Base+0x150>  // b.none
   1a5a0:	add	x23, x22, #0x1
   1a5a4:	ldrb	w0, [x23]
   1a5a8:	mov	x1, x19
   1a5ac:	bl	bdf0 <fputc@plt>
   1a5b0:	cmn	w0, #0x1
   1a5b4:	b.eq	1a660 <__gmpfr_out_str@@Base+0x150>  // b.none
   1a5b8:	bl	bef0 <localeconv@plt>
   1a5bc:	ldr	x8, [x0]
   1a5c0:	ldrb	w8, [x8, #1]
   1a5c4:	cbz	w8, 1a644 <__gmpfr_out_str@@Base+0x134>
   1a5c8:	mov	w0, #0x2e                  	// #46
   1a5cc:	mov	x1, x19
   1a5d0:	bl	bdf0 <fputc@plt>
   1a5d4:	cmn	w0, #0x1
   1a5d8:	b.eq	1a660 <__gmpfr_out_str@@Base+0x150>  // b.none
   1a5dc:	add	x0, x23, #0x1
   1a5e0:	mov	x1, x19
   1a5e4:	bl	bb20 <fputs@plt>
   1a5e8:	mov	w23, w0
   1a5ec:	mov	x0, x22
   1a5f0:	mov	x1, x20
   1a5f4:	bl	cc00 <mpfr_free_func@plt>
   1a5f8:	cmn	w23, #0x1
   1a5fc:	b.eq	1a66c <__gmpfr_out_str@@Base+0x15c>  // b.none
   1a600:	ldr	x8, [x29, #24]
   1a604:	subs	x2, x8, #0x1
   1a608:	str	x2, [x29, #24]
   1a60c:	b.eq	1a670 <__gmpfr_out_str@@Base+0x160>  // b.none
   1a610:	adrp	x8, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a614:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a618:	add	x8, x8, #0x7ef
   1a61c:	add	x9, x9, #0x7ea
   1a620:	cmp	w21, #0xb
   1a624:	csel	x1, x9, x8, lt  // lt = tstop
   1a628:	mov	x0, x19
   1a62c:	bl	ccc0 <fprintf@plt>
   1a630:	cmp	w0, #0x0
   1a634:	csel	w8, wzr, w0, lt  // lt = tstop
   1a638:	tbnz	w0, #31, 1a66c <__gmpfr_out_str@@Base+0x15c>
   1a63c:	add	x20, x20, x8
   1a640:	b	1a670 <__gmpfr_out_str@@Base+0x160>
   1a644:	bl	bef0 <localeconv@plt>
   1a648:	ldr	x8, [x0]
   1a64c:	ldrb	w0, [x8]
   1a650:	mov	x1, x19
   1a654:	bl	bdf0 <fputc@plt>
   1a658:	cmn	w0, #0x1
   1a65c:	b.ne	1a5dc <__gmpfr_out_str@@Base+0xcc>  // b.any
   1a660:	mov	x0, x22
   1a664:	mov	x1, x20
   1a668:	bl	cc00 <mpfr_free_func@plt>
   1a66c:	mov	x20, xzr
   1a670:	mov	x0, x20
   1a674:	ldp	x20, x19, [sp, #48]
   1a678:	ldp	x22, x21, [sp, #32]
   1a67c:	ldr	x23, [sp, #16]
   1a680:	ldp	x29, x30, [sp], #64
   1a684:	ret
   1a688:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a68c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a690:	add	x0, x0, #0x7c5
   1a694:	add	x2, x2, #0x7cf
   1a698:	mov	w1, #0x2c                  	// #44
   1a69c:	bl	cb20 <mpfr_assert_fail@plt>
   1a6a0:	ldr	x8, [x20, #16]
   1a6a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1a6a8:	cmp	x8, x9
   1a6ac:	b.gt	1a554 <__gmpfr_out_str@@Base+0x44>
   1a6b0:	b.eq	1a6d0 <__gmpfr_out_str@@Base+0x1c0>  // b.none
   1a6b4:	mov	x9, #0x2                   	// #2
   1a6b8:	movk	x9, #0x8000, lsl #48
   1a6bc:	cmp	x8, x9
   1a6c0:	b.ne	1a6e8 <__gmpfr_out_str@@Base+0x1d8>  // b.any
   1a6c4:	adrp	x1, 5e000 <mpfr_free_pool@@Base+0x2b84>
   1a6c8:	add	x1, x1, #0xdbd
   1a6cc:	b	1a704 <__gmpfr_out_str@@Base+0x1f4>
   1a6d0:	ldr	w8, [x20, #8]
   1a6d4:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a6d8:	adrp	x10, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a6dc:	add	x9, x9, #0x5fc
   1a6e0:	add	x10, x10, #0x5fd
   1a6e4:	b	1a6fc <__gmpfr_out_str@@Base+0x1ec>
   1a6e8:	ldr	w8, [x20, #8]
   1a6ec:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a6f0:	adrp	x10, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   1a6f4:	add	x9, x9, #0x7e7
   1a6f8:	add	x10, x10, #0x582
   1a6fc:	cmp	w8, #0x0
   1a700:	csel	x1, x10, x9, gt
   1a704:	mov	x0, x19
   1a708:	bl	ccc0 <fprintf@plt>
   1a70c:	bic	w20, w0, w0, asr #31
   1a710:	b	1a670 <__gmpfr_out_str@@Base+0x160>

000000000001a714 <mpfr_printf@@Base>:
   1a714:	sub	sp, sp, #0x120
   1a718:	stp	x29, x30, [sp, #256]
   1a71c:	add	x29, sp, #0x100
   1a720:	mov	x10, #0xffffffffffffffc8    	// #-56
   1a724:	mov	x11, sp
   1a728:	add	x12, sp, #0x80
   1a72c:	movk	x10, #0xff80, lsl #32
   1a730:	add	x13, x29, #0x20
   1a734:	add	x11, x11, #0x80
   1a738:	add	x12, x12, #0x38
   1a73c:	sub	x9, x29, #0x48
   1a740:	stp	x11, x10, [x29, #-56]
   1a744:	stp	x13, x12, [x29, #-72]
   1a748:	stp	q0, q1, [sp]
   1a74c:	ldp	q0, q1, [x9]
   1a750:	mov	x8, x0
   1a754:	stp	x1, x2, [sp, #128]
   1a758:	stp	x3, x4, [sp, #144]
   1a75c:	sub	x0, x29, #0x28
   1a760:	sub	x4, x29, #0x20
   1a764:	mov	x1, xzr
   1a768:	mov	x2, xzr
   1a76c:	mov	x3, x8
   1a770:	stp	x28, x19, [sp, #272]
   1a774:	stp	x5, x6, [sp, #160]
   1a778:	str	x7, [sp, #176]
   1a77c:	stp	q2, q3, [sp, #32]
   1a780:	stp	q4, q5, [sp, #64]
   1a784:	stp	q6, q7, [sp, #96]
   1a788:	stp	q0, q1, [x29, #-32]
   1a78c:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1a790:	tbnz	w0, #31, 1a7b8 <mpfr_printf@@Base+0xa4>
   1a794:	ldur	x1, [x29, #-40]
   1a798:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a79c:	add	x0, x0, #0x7f4
   1a7a0:	bl	cbd0 <printf@plt>
   1a7a4:	ldur	x8, [x29, #-40]
   1a7a8:	mov	w19, w0
   1a7ac:	mov	x0, x8
   1a7b0:	bl	c880 <mpfr_free_str@plt>
   1a7b4:	b	1a7c8 <mpfr_printf@@Base+0xb4>
   1a7b8:	ldur	x0, [x29, #-40]
   1a7bc:	cbz	x0, 1a7c4 <mpfr_printf@@Base+0xb0>
   1a7c0:	bl	c880 <mpfr_free_str@plt>
   1a7c4:	mov	w19, #0xffffffff            	// #-1
   1a7c8:	mov	w0, w19
   1a7cc:	ldp	x28, x19, [sp, #272]
   1a7d0:	ldp	x29, x30, [sp, #256]
   1a7d4:	add	sp, sp, #0x120
   1a7d8:	ret

000000000001a7dc <__gmpfr_vasprintf@@Base>:
   1a7dc:	sub	sp, sp, #0x30
   1a7e0:	stp	x29, x30, [sp, #32]
   1a7e4:	ldp	q1, q0, [x2]
   1a7e8:	mov	x3, x1
   1a7ec:	mov	x4, sp
   1a7f0:	mov	x1, xzr
   1a7f4:	mov	x2, xzr
   1a7f8:	add	x29, sp, #0x20
   1a7fc:	stp	q1, q0, [sp]
   1a800:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1a804:	ldp	x29, x30, [sp, #32]
   1a808:	add	sp, sp, #0x30
   1a80c:	ret

000000000001a810 <__gmpfr_vprintf@@Base>:
   1a810:	sub	sp, sp, #0x40
   1a814:	stp	x29, x30, [sp, #32]
   1a818:	str	x19, [sp, #48]
   1a81c:	ldp	q1, q0, [x1]
   1a820:	add	x29, sp, #0x20
   1a824:	mov	x3, x0
   1a828:	add	x0, x29, #0x18
   1a82c:	mov	x4, sp
   1a830:	mov	x1, xzr
   1a834:	mov	x2, xzr
   1a838:	stp	q1, q0, [sp]
   1a83c:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1a840:	ldr	x1, [x29, #24]
   1a844:	tbnz	w0, #31, 1a868 <__gmpfr_vprintf@@Base+0x58>
   1a848:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a84c:	add	x0, x0, #0x7f4
   1a850:	bl	cbd0 <printf@plt>
   1a854:	ldr	x8, [x29, #24]
   1a858:	mov	w19, w0
   1a85c:	mov	x0, x8
   1a860:	bl	c880 <mpfr_free_str@plt>
   1a864:	b	1a878 <__gmpfr_vprintf@@Base+0x68>
   1a868:	cbz	x1, 1a874 <__gmpfr_vprintf@@Base+0x64>
   1a86c:	mov	x0, x1
   1a870:	bl	c880 <mpfr_free_str@plt>
   1a874:	mov	w19, #0xffffffff            	// #-1
   1a878:	mov	w0, w19
   1a87c:	ldr	x19, [sp, #48]
   1a880:	ldp	x29, x30, [sp, #32]
   1a884:	add	sp, sp, #0x40
   1a888:	ret

000000000001a88c <__gmpfr_fprintf@@Base>:
   1a88c:	sub	sp, sp, #0x120
   1a890:	stp	x29, x30, [sp, #256]
   1a894:	add	x29, sp, #0x100
   1a898:	mov	x10, #0xffffffffffffffd0    	// #-48
   1a89c:	mov	x11, sp
   1a8a0:	sub	x12, x29, #0x78
   1a8a4:	movk	x10, #0xff80, lsl #32
   1a8a8:	add	x13, x29, #0x20
   1a8ac:	add	x11, x11, #0x80
   1a8b0:	add	x12, x12, #0x30
   1a8b4:	sub	x9, x29, #0x48
   1a8b8:	stp	x11, x10, [x29, #-56]
   1a8bc:	stp	x13, x12, [x29, #-72]
   1a8c0:	stp	x2, x3, [x29, #-120]
   1a8c4:	stp	x4, x5, [x29, #-104]
   1a8c8:	stp	x6, x7, [x29, #-88]
   1a8cc:	stp	q1, q2, [sp, #16]
   1a8d0:	str	q0, [sp]
   1a8d4:	ldp	q0, q1, [x9]
   1a8d8:	mov	x8, x1
   1a8dc:	stp	x28, x19, [sp, #272]
   1a8e0:	mov	x19, x0
   1a8e4:	sub	x0, x29, #0x28
   1a8e8:	sub	x4, x29, #0x20
   1a8ec:	mov	x1, xzr
   1a8f0:	mov	x2, xzr
   1a8f4:	mov	x3, x8
   1a8f8:	stp	q3, q4, [sp, #48]
   1a8fc:	stp	q5, q6, [sp, #80]
   1a900:	str	q7, [sp, #112]
   1a904:	stp	q0, q1, [x29, #-32]
   1a908:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1a90c:	tbnz	w0, #31, 1a938 <__gmpfr_fprintf@@Base+0xac>
   1a910:	ldur	x2, [x29, #-40]
   1a914:	adrp	x1, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a918:	add	x1, x1, #0x7f4
   1a91c:	mov	x0, x19
   1a920:	bl	ccc0 <fprintf@plt>
   1a924:	ldur	x8, [x29, #-40]
   1a928:	mov	w19, w0
   1a92c:	mov	x0, x8
   1a930:	bl	c880 <mpfr_free_str@plt>
   1a934:	b	1a948 <__gmpfr_fprintf@@Base+0xbc>
   1a938:	ldur	x0, [x29, #-40]
   1a93c:	cbz	x0, 1a944 <__gmpfr_fprintf@@Base+0xb8>
   1a940:	bl	c880 <mpfr_free_str@plt>
   1a944:	mov	w19, #0xffffffff            	// #-1
   1a948:	mov	w0, w19
   1a94c:	ldp	x28, x19, [sp, #272]
   1a950:	ldp	x29, x30, [sp, #256]
   1a954:	add	sp, sp, #0x120
   1a958:	ret

000000000001a95c <__gmpfr_vfprintf@@Base>:
   1a95c:	sub	sp, sp, #0x40
   1a960:	stp	x29, x30, [sp, #32]
   1a964:	str	x19, [sp, #48]
   1a968:	ldp	q1, q0, [x2]
   1a96c:	add	x29, sp, #0x20
   1a970:	mov	x3, x1
   1a974:	mov	x19, x0
   1a978:	add	x0, x29, #0x18
   1a97c:	mov	x4, sp
   1a980:	mov	x1, xzr
   1a984:	mov	x2, xzr
   1a988:	stp	q1, q0, [sp]
   1a98c:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1a990:	ldr	x2, [x29, #24]
   1a994:	tbnz	w0, #31, 1a9bc <__gmpfr_vfprintf@@Base+0x60>
   1a998:	adrp	x1, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1a99c:	add	x1, x1, #0x7f4
   1a9a0:	mov	x0, x19
   1a9a4:	bl	ccc0 <fprintf@plt>
   1a9a8:	ldr	x8, [x29, #24]
   1a9ac:	mov	w19, w0
   1a9b0:	mov	x0, x8
   1a9b4:	bl	c880 <mpfr_free_str@plt>
   1a9b8:	b	1a9cc <__gmpfr_vfprintf@@Base+0x70>
   1a9bc:	cbz	x2, 1a9c8 <__gmpfr_vfprintf@@Base+0x6c>
   1a9c0:	mov	x0, x2
   1a9c4:	bl	c880 <mpfr_free_str@plt>
   1a9c8:	mov	w19, #0xffffffff            	// #-1
   1a9cc:	mov	w0, w19
   1a9d0:	ldr	x19, [sp, #48]
   1a9d4:	ldp	x29, x30, [sp, #32]
   1a9d8:	add	sp, sp, #0x40
   1a9dc:	ret

000000000001a9e0 <mpfr_sprintf@@Base>:
   1a9e0:	sub	sp, sp, #0x130
   1a9e4:	stp	x29, x30, [sp, #256]
   1a9e8:	add	x29, sp, #0x100
   1a9ec:	mov	x10, #0xffffffffffffffd0    	// #-48
   1a9f0:	mov	x11, sp
   1a9f4:	sub	x12, x29, #0x78
   1a9f8:	movk	x10, #0xff80, lsl #32
   1a9fc:	add	x13, x29, #0x30
   1aa00:	add	x11, x11, #0x80
   1aa04:	add	x12, x12, #0x30
   1aa08:	sub	x9, x29, #0x48
   1aa0c:	stp	x11, x10, [x29, #-56]
   1aa10:	stp	x13, x12, [x29, #-72]
   1aa14:	stp	x2, x3, [x29, #-120]
   1aa18:	stp	x4, x5, [x29, #-104]
   1aa1c:	stp	x6, x7, [x29, #-88]
   1aa20:	stp	q1, q2, [sp, #16]
   1aa24:	str	q0, [sp]
   1aa28:	ldp	q0, q1, [x9]
   1aa2c:	mov	x8, x1
   1aa30:	stp	x20, x19, [sp, #288]
   1aa34:	mov	x19, x0
   1aa38:	sub	x0, x29, #0x28
   1aa3c:	sub	x4, x29, #0x20
   1aa40:	mov	x1, xzr
   1aa44:	mov	x2, xzr
   1aa48:	mov	x3, x8
   1aa4c:	stp	x28, x21, [sp, #272]
   1aa50:	stp	q3, q4, [sp, #48]
   1aa54:	stp	q5, q6, [sp, #80]
   1aa58:	str	q7, [sp, #112]
   1aa5c:	stp	q0, q1, [x29, #-32]
   1aa60:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1aa64:	tbnz	w0, #31, 1aa94 <mpfr_sprintf@@Base+0xb4>
   1aa68:	ldur	x21, [x29, #-40]
   1aa6c:	mov	x0, x21
   1aa70:	bl	bb10 <strlen@plt>
   1aa74:	mov	x20, x0
   1aa78:	add	x2, x0, #0x1
   1aa7c:	mov	x0, x19
   1aa80:	mov	x1, x21
   1aa84:	bl	ba70 <memcpy@plt>
   1aa88:	mov	x0, x21
   1aa8c:	bl	c880 <mpfr_free_str@plt>
   1aa90:	b	1aaa4 <mpfr_sprintf@@Base+0xc4>
   1aa94:	ldur	x0, [x29, #-40]
   1aa98:	cbz	x0, 1aaa0 <mpfr_sprintf@@Base+0xc0>
   1aa9c:	bl	c880 <mpfr_free_str@plt>
   1aaa0:	mov	w20, #0xffffffff            	// #-1
   1aaa4:	mov	w0, w20
   1aaa8:	ldp	x20, x19, [sp, #288]
   1aaac:	ldp	x28, x21, [sp, #272]
   1aab0:	ldp	x29, x30, [sp, #256]
   1aab4:	add	sp, sp, #0x130
   1aab8:	ret

000000000001aabc <__gmpfr_vsprintf@@Base>:
   1aabc:	sub	sp, sp, #0x50
   1aac0:	stp	x29, x30, [sp, #32]
   1aac4:	str	x21, [sp, #48]
   1aac8:	stp	x20, x19, [sp, #64]
   1aacc:	ldp	q1, q0, [x2]
   1aad0:	add	x29, sp, #0x20
   1aad4:	mov	x3, x1
   1aad8:	mov	x19, x0
   1aadc:	add	x0, x29, #0x18
   1aae0:	mov	x4, sp
   1aae4:	mov	x1, xzr
   1aae8:	mov	x2, xzr
   1aaec:	stp	q1, q0, [sp]
   1aaf0:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1aaf4:	ldr	x21, [x29, #24]
   1aaf8:	tbnz	w0, #31, 1ab24 <__gmpfr_vsprintf@@Base+0x68>
   1aafc:	mov	x0, x21
   1ab00:	bl	bb10 <strlen@plt>
   1ab04:	mov	x20, x0
   1ab08:	add	x2, x0, #0x1
   1ab0c:	mov	x0, x19
   1ab10:	mov	x1, x21
   1ab14:	bl	ba70 <memcpy@plt>
   1ab18:	mov	x0, x21
   1ab1c:	bl	c880 <mpfr_free_str@plt>
   1ab20:	b	1ab34 <__gmpfr_vsprintf@@Base+0x78>
   1ab24:	cbz	x21, 1ab30 <__gmpfr_vsprintf@@Base+0x74>
   1ab28:	mov	x0, x21
   1ab2c:	bl	c880 <mpfr_free_str@plt>
   1ab30:	mov	w20, #0xffffffff            	// #-1
   1ab34:	mov	w0, w20
   1ab38:	ldp	x20, x19, [sp, #64]
   1ab3c:	ldr	x21, [sp, #48]
   1ab40:	ldp	x29, x30, [sp, #32]
   1ab44:	add	sp, sp, #0x50
   1ab48:	ret

000000000001ab4c <mpfr_snprintf@@Base>:
   1ab4c:	sub	sp, sp, #0x100
   1ab50:	stp	x29, x30, [sp, #240]
   1ab54:	add	x29, sp, #0xf0
   1ab58:	mov	x9, #0xffffffffffffffd8    	// #-40
   1ab5c:	mov	x10, sp
   1ab60:	sub	x11, x29, #0x68
   1ab64:	movk	x9, #0xff80, lsl #32
   1ab68:	add	x12, x29, #0x10
   1ab6c:	add	x10, x10, #0x80
   1ab70:	add	x11, x11, #0x28
   1ab74:	stp	x10, x9, [x29, #-16]
   1ab78:	stp	x12, x11, [x29, #-32]
   1ab7c:	stp	x3, x4, [x29, #-104]
   1ab80:	stp	x5, x6, [x29, #-88]
   1ab84:	stur	x7, [x29, #-72]
   1ab88:	stp	q1, q2, [sp, #16]
   1ab8c:	str	q0, [sp]
   1ab90:	ldp	q0, q1, [x29, #-32]
   1ab94:	mov	x8, x2
   1ab98:	mov	x2, x1
   1ab9c:	mov	x1, x0
   1aba0:	sub	x4, x29, #0x40
   1aba4:	mov	x0, xzr
   1aba8:	mov	x3, x8
   1abac:	stp	q3, q4, [sp, #48]
   1abb0:	stp	q5, q6, [sp, #80]
   1abb4:	str	q7, [sp, #112]
   1abb8:	stp	q0, q1, [x29, #-64]
   1abbc:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1abc0:	ldp	x29, x30, [sp, #240]
   1abc4:	add	sp, sp, #0x100
   1abc8:	ret

000000000001abcc <__gmpfr_vsnprintf@@Base>:
   1abcc:	sub	sp, sp, #0x30
   1abd0:	stp	x29, x30, [sp, #32]
   1abd4:	ldp	q1, q0, [x3]
   1abd8:	mov	x8, x2
   1abdc:	mov	x2, x1
   1abe0:	mov	x1, x0
   1abe4:	mov	x4, sp
   1abe8:	mov	x0, xzr
   1abec:	mov	x3, x8
   1abf0:	add	x29, sp, #0x20
   1abf4:	stp	q1, q0, [sp]
   1abf8:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1abfc:	ldp	x29, x30, [sp, #32]
   1ac00:	add	sp, sp, #0x30
   1ac04:	ret

000000000001ac08 <mpfr_asprintf@@Base>:
   1ac08:	sub	sp, sp, #0x110
   1ac0c:	stp	x29, x30, [sp, #240]
   1ac10:	add	x29, sp, #0xf0
   1ac14:	mov	x9, #0xffffffffffffffd0    	// #-48
   1ac18:	mov	x10, sp
   1ac1c:	sub	x11, x29, #0x70
   1ac20:	movk	x9, #0xff80, lsl #32
   1ac24:	add	x12, x29, #0x20
   1ac28:	add	x10, x10, #0x80
   1ac2c:	add	x11, x11, #0x30
   1ac30:	stp	x10, x9, [x29, #-48]
   1ac34:	stp	x12, x11, [x29, #-64]
   1ac38:	stp	x2, x3, [x29, #-112]
   1ac3c:	stp	x4, x5, [x29, #-96]
   1ac40:	stp	x6, x7, [x29, #-80]
   1ac44:	stp	q1, q2, [sp, #16]
   1ac48:	str	q0, [sp]
   1ac4c:	ldp	q0, q1, [x29, #-64]
   1ac50:	mov	x8, x1
   1ac54:	sub	x4, x29, #0x20
   1ac58:	mov	x1, xzr
   1ac5c:	mov	x2, xzr
   1ac60:	mov	x3, x8
   1ac64:	stp	x28, x19, [sp, #256]
   1ac68:	mov	x19, x0
   1ac6c:	stp	q3, q4, [sp, #48]
   1ac70:	stp	q5, q6, [sp, #80]
   1ac74:	str	q7, [sp, #112]
   1ac78:	stp	q0, q1, [x29, #-32]
   1ac7c:	bl	bc70 <mpfr_vasnprintf_aux@plt>
   1ac80:	tbnz	w0, #31, 1ac94 <mpfr_asprintf@@Base+0x8c>
   1ac84:	ldp	x28, x19, [sp, #256]
   1ac88:	ldp	x29, x30, [sp, #240]
   1ac8c:	add	sp, sp, #0x110
   1ac90:	ret
   1ac94:	ldr	x0, [x19]
   1ac98:	cbz	x0, 1aca0 <mpfr_asprintf@@Base+0x98>
   1ac9c:	bl	c880 <mpfr_free_str@plt>
   1aca0:	mov	w0, #0xffffffff            	// #-1
   1aca4:	ldp	x28, x19, [sp, #256]
   1aca8:	ldp	x29, x30, [sp, #240]
   1acac:	add	sp, sp, #0x110
   1acb0:	ret

000000000001acb4 <mpfr_vasnprintf_aux@@Base>:
   1acb4:	stp	x29, x30, [sp, #-96]!
   1acb8:	stp	x28, x27, [sp, #16]
   1acbc:	stp	x26, x25, [sp, #32]
   1acc0:	stp	x24, x23, [sp, #48]
   1acc4:	stp	x22, x21, [sp, #64]
   1acc8:	stp	x20, x19, [sp, #80]
   1accc:	mov	x29, sp
   1acd0:	sub	sp, sp, #0x1f0
   1acd4:	mov	x19, sp
   1acd8:	mov	x20, x3
   1acdc:	str	x1, [x19, #168]
   1ace0:	mov	x27, x0
   1ace4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1ace8:	ldr	x1, [x0, #2640]
   1acec:	add	x0, x0, #0xa50
   1acf0:	blr	x1
   1acf4:	mrs	x28, tpidr_el0
   1acf8:	ldr	w25, [x28, x0]
   1acfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1ad00:	ldr	x1, [x0, #2576]
   1ad04:	add	x0, x0, #0xa10
   1ad08:	blr	x1
   1ad0c:	ldr	x21, [x28, x0]
   1ad10:	mov	x8, x0
   1ad14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1ad18:	ldr	x1, [x0, #2608]
   1ad1c:	add	x0, x0, #0xa30
   1ad20:	blr	x1
   1ad24:	ldr	x24, [x28, x0]
   1ad28:	orr	x11, x27, x2
   1ad2c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1ad30:	cmp	x11, #0x0
   1ad34:	str	x9, [x28, x8]
   1ad38:	cset	w8, ne  // ne = any
   1ad3c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   1ad40:	lsl	x26, x8, #12
   1ad44:	str	x10, [x28, x0]
   1ad48:	str	x8, [x19, #176]
   1ad4c:	cbz	x11, 1ad70 <mpfr_vasnprintf_aux@@Base+0xbc>
   1ad50:	mov	x0, x26
   1ad54:	mov	x22, x2
   1ad58:	mov	x23, x4
   1ad5c:	bl	ccd0 <mpfr_allocate_func@plt>
   1ad60:	mov	x4, x23
   1ad64:	mov	x2, x22
   1ad68:	mov	x10, x0
   1ad6c:	strb	wzr, [x0]
   1ad70:	ldp	q1, q0, [x4]
   1ad74:	stp	q1, q0, [x19, #240]
   1ad78:	ldrb	w22, [x20]
   1ad7c:	cbz	w22, 1e7c8 <mpfr_vasnprintf_aux@@Base+0x3b14>
   1ad80:	sub	x8, x29, #0xd0
   1ad84:	add	x12, x8, #0x30
   1ad88:	add	x11, x8, #0x18
   1ad8c:	str	x12, [x19, #152]
   1ad90:	add	x12, x8, #0x50
   1ad94:	add	x8, x8, #0x68
   1ad98:	cmp	x27, #0x0
   1ad9c:	stp	x8, x12, [x19, #136]
   1ada0:	mov	w8, #0x4255                	// #16981
   1ada4:	str	x21, [x19, #184]
   1ada8:	sub	x9, x29, #0x30
   1adac:	movk	w8, #0x46, lsl #16
   1adb0:	mov	w12, #0x6275                	// #25205
   1adb4:	csinc	x21, x2, xzr, eq  // eq = none
   1adb8:	mov	w14, #0x2f                  	// #47
   1adbc:	mov	w15, #0xcccd                	// #52429
   1adc0:	adrp	x18, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1adc4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1adc8:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1adcc:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1add0:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1add4:	adrp	x1, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1add8:	movk	w12, #0x66, lsl #16
   1addc:	str	x21, [x19, #160]
   1ade0:	orr	x21, x9, #0x1
   1ade4:	add	w8, w8, #0xbf4
   1ade8:	str	w25, [x19, #196]
   1adec:	mov	w25, wzr
   1adf0:	mov	x23, xzr
   1adf4:	add	x3, x4, #0x18
   1adf8:	movk	w14, #0x8000, lsl #16
   1adfc:	movk	w15, #0xccc, lsl #16
   1ae00:	mov	w16, #0x7fffffff            	// #2147483647
   1ae04:	mov	w17, #0x80000001            	// #-2147483647
   1ae08:	add	x18, x18, #0x959
   1ae0c:	add	x0, x0, #0x965
   1ae10:	add	x13, x13, #0x86f
   1ae14:	mov	w5, #0x1                   	// #1
   1ae18:	mov	w6, #0x8301                	// #33537
   1ae1c:	add	x7, x7, #0x9d0
   1ae20:	add	x30, x30, #0x9b8
   1ae24:	add	x1, x1, #0x99a
   1ae28:	str	x21, [x19, #128]
   1ae2c:	add	x9, x9, #0x22
   1ae30:	str	w8, [x19, #124]
   1ae34:	add	w8, w12, #0xbf4
   1ae38:	mov	x21, x20
   1ae3c:	stp	x26, x27, [x19, #208]
   1ae40:	str	w8, [x19, #120]
   1ae44:	str	x10, [x19, #200]
   1ae48:	add	x26, x20, #0x2
   1ae4c:	mov	x27, x20
   1ae50:	ands	w8, w22, #0xff
   1ae54:	b.eq	1e6f8 <mpfr_vasnprintf_aux@@Base+0x3a44>  // b.none
   1ae58:	cmp	w8, #0x25
   1ae5c:	b.eq	1ae74 <mpfr_vasnprintf_aux@@Base+0x1c0>  // b.none
   1ae60:	ldrb	w22, [x27, #1]!
   1ae64:	add	x26, x26, #0x1
   1ae68:	ands	w8, w22, #0xff
   1ae6c:	b.ne	1ae58 <mpfr_vasnprintf_aux@@Base+0x1a4>  // b.any
   1ae70:	b	1e6f8 <mpfr_vasnprintf_aux@@Base+0x3a44>
   1ae74:	ldrb	w8, [x27, #1]
   1ae78:	cmp	w8, #0x25
   1ae7c:	b.ne	1ae94 <mpfr_vasnprintf_aux@@Base+0x1e0>  // b.any
   1ae80:	mov	x20, x27
   1ae84:	ldrb	w22, [x20, #2]!
   1ae88:	mov	w25, #0x1                   	// #1
   1ae8c:	cbnz	w22, 1ae48 <mpfr_vasnprintf_aux@@Base+0x194>
   1ae90:	b	1e8f0 <mpfr_vasnprintf_aux@@Base+0x3c3c>
   1ae94:	ldr	w22, [x19, #76]
   1ae98:	adrp	x20, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ae9c:	str	x9, [x19, #96]
   1aea0:	stp	x24, x10, [x19, #56]
   1aea4:	add	x9, x27, #0x1
   1aea8:	and	w22, w22, #0xffffffe0
   1aeac:	mov	w24, #0x20                  	// #32
   1aeb0:	add	x20, x20, #0x7f8
   1aeb4:	str	x11, [x19, #80]
   1aeb8:	b	1aed0 <mpfr_vasnprintf_aux@@Base+0x21c>
   1aebc:	orr	w22, w22, #0x4
   1aec0:	mov	w8, w24
   1aec4:	mov	w24, w8
   1aec8:	ldrb	w8, [x9, #1]!
   1aecc:	add	x26, x26, #0x1
   1aed0:	and	w10, w8, #0xff
   1aed4:	sub	w10, w10, #0x20
   1aed8:	cmp	w10, #0x10
   1aedc:	b.hi	1af10 <mpfr_vasnprintf_aux@@Base+0x25c>  // b.pmore
   1aee0:	adr	x11, 1aebc <mpfr_vasnprintf_aux@@Base+0x208>
   1aee4:	ldrb	w12, [x20, x10]
   1aee8:	add	x11, x11, x12, lsl #2
   1aeec:	br	x11
   1aef0:	orr	w22, w22, #0x2
   1aef4:	b	1aec0 <mpfr_vasnprintf_aux@@Base+0x20c>
   1aef8:	orr	w22, w22, #0x10
   1aefc:	b	1aec0 <mpfr_vasnprintf_aux@@Base+0x20c>
   1af00:	orr	w22, w22, #0x1
   1af04:	b	1aec0 <mpfr_vasnprintf_aux@@Base+0x20c>
   1af08:	orr	w22, w22, #0x8
   1af0c:	b	1aec0 <mpfr_vasnprintf_aux@@Base+0x20c>
   1af10:	mov	w9, wzr
   1af14:	and	w10, w8, #0xff
   1af18:	sub	w8, w10, #0x30
   1af1c:	cmp	w8, #0xa
   1af20:	b.cs	1af5c <mpfr_vasnprintf_aux@@Base+0x2a8>  // b.hs, b.nlast
   1af24:	add	w11, w9, w9, lsl #2
   1af28:	cmp	w9, w15
   1af2c:	lsl	w11, w11, #1
   1af30:	ldrb	w8, [x26], #1
   1af34:	csel	w11, w11, w16, lt  // lt = tstop
   1af38:	sub	w9, w14, w10
   1af3c:	add	w10, w11, w10
   1af40:	sub	w10, w10, #0x30
   1af44:	cmp	w11, w9
   1af48:	csel	w9, w16, w10, gt
   1af4c:	and	w10, w8, #0xff
   1af50:	sub	w8, w10, #0x30
   1af54:	cmp	w8, #0xa
   1af58:	b.cc	1af24 <mpfr_vasnprintf_aux@@Base+0x270>  // b.lo, b.ul, b.last
   1af5c:	cmp	w10, #0x2a
   1af60:	b.ne	1af8c <mpfr_vasnprintf_aux@@Base+0x2d8>  // b.any
   1af64:	ldrsw	x8, [x3]
   1af68:	mov	w11, #0x3                   	// #3
   1af6c:	tbz	w8, #31, 1af98 <mpfr_vasnprintf_aux@@Base+0x2e4>
   1af70:	add	w9, w8, #0x8
   1af74:	cmn	w8, #0x8
   1af78:	str	w9, [x3]
   1af7c:	b.gt	1af98 <mpfr_vasnprintf_aux@@Base+0x2e4>
   1af80:	ldr	x9, [x4, #8]
   1af84:	add	x8, x9, x8
   1af88:	b	1afa4 <mpfr_vasnprintf_aux@@Base+0x2f0>
   1af8c:	sub	x26, x26, #0x1
   1af90:	mov	w11, #0x3                   	// #3
   1af94:	b	1afa8 <mpfr_vasnprintf_aux@@Base+0x2f4>
   1af98:	ldr	x8, [x4]
   1af9c:	add	x9, x8, #0x8
   1afa0:	str	x9, [x4]
   1afa4:	ldr	w9, [x8]
   1afa8:	str	x3, [x19, #88]
   1afac:	tbnz	w9, #31, 1afcc <mpfr_vasnprintf_aux@@Base+0x318>
   1afb0:	str	w9, [x19, #40]
   1afb4:	ldrb	w9, [x26]
   1afb8:	cmp	w9, #0x2e
   1afbc:	b.eq	1afec <mpfr_vasnprintf_aux@@Base+0x338>  // b.none
   1afc0:	mov	w8, #0xffffffff            	// #-1
   1afc4:	str	x8, [x19, #48]
   1afc8:	b	1b09c <mpfr_vasnprintf_aux@@Base+0x3e8>
   1afcc:	orr	w22, w22, #0x4
   1afd0:	cmp	w9, w17
   1afd4:	neg	w8, w9
   1afd8:	str	w8, [x19, #40]
   1afdc:	b.le	1cb94 <mpfr_vasnprintf_aux@@Base+0x1ee0>
   1afe0:	ldrb	w9, [x26]
   1afe4:	cmp	w9, #0x2e
   1afe8:	b.ne	1afc0 <mpfr_vasnprintf_aux@@Base+0x30c>  // b.any
   1afec:	mov	x8, xzr
   1aff0:	mov	w10, wzr
   1aff4:	add	x9, x26, x8
   1aff8:	ldrb	w9, [x9, #1]
   1affc:	sub	w11, w9, #0x30
   1b000:	cmp	w11, #0xa
   1b004:	b.cs	1b034 <mpfr_vasnprintf_aux@@Base+0x380>  // b.hs, b.nlast
   1b008:	add	w11, w10, w10, lsl #2
   1b00c:	cmp	w10, w15
   1b010:	lsl	w11, w11, #1
   1b014:	csel	w11, w11, w16, lt  // lt = tstop
   1b018:	sub	w10, w14, w9
   1b01c:	add	w9, w11, w9
   1b020:	cmp	w11, w10
   1b024:	sub	w9, w9, #0x30
   1b028:	csel	w10, w16, w9, gt
   1b02c:	add	x8, x8, #0x1
   1b030:	b	1aff4 <mpfr_vasnprintf_aux@@Base+0x340>
   1b034:	cmp	w9, #0x2a
   1b038:	mov	w11, #0x3                   	// #3
   1b03c:	b.ne	1b064 <mpfr_vasnprintf_aux@@Base+0x3b0>  // b.any
   1b040:	ldrsw	x9, [x3]
   1b044:	tbz	w9, #31, 1b078 <mpfr_vasnprintf_aux@@Base+0x3c4>
   1b048:	add	w10, w9, #0x8
   1b04c:	cmn	w9, #0x8
   1b050:	str	w10, [x3]
   1b054:	b.gt	1b078 <mpfr_vasnprintf_aux@@Base+0x3c4>
   1b058:	ldr	x10, [x4, #8]
   1b05c:	add	x9, x10, x9
   1b060:	b	1b084 <mpfr_vasnprintf_aux@@Base+0x3d0>
   1b064:	cmp	x8, #0x0
   1b068:	csinv	w10, w10, wzr, ne  // ne = any
   1b06c:	add	x8, x8, #0x1
   1b070:	str	x10, [x19, #48]
   1b074:	b	1b098 <mpfr_vasnprintf_aux@@Base+0x3e4>
   1b078:	ldr	x9, [x4]
   1b07c:	add	x10, x9, #0x8
   1b080:	str	x10, [x4]
   1b084:	ldr	w9, [x9]
   1b088:	str	x9, [x19, #48]
   1b08c:	add	x9, x26, x8
   1b090:	ldrb	w9, [x9, #2]
   1b094:	add	x8, x8, #0x2
   1b098:	add	x26, x26, x8
   1b09c:	sub	w8, w9, #0x46
   1b0a0:	cmp	w8, #0x34
   1b0a4:	mov	w3, wzr
   1b0a8:	str	w22, [x19, #76]
   1b0ac:	str	wzr, [x19, #104]
   1b0b0:	b.hi	1b210 <mpfr_vasnprintf_aux@@Base+0x55c>  // b.pmore
   1b0b4:	adrp	x12, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b0b8:	add	x12, x12, #0x809
   1b0bc:	adr	x9, 1b0d4 <mpfr_vasnprintf_aux@@Base+0x420>
   1b0c0:	ldrb	w10, [x12, x8]
   1b0c4:	add	x9, x9, x10, lsl #2
   1b0c8:	mov	x10, #0x71                  	// #113
   1b0cc:	movk	x10, #0x73, lsl #32
   1b0d0:	br	x9
   1b0d4:	mov	w3, wzr
   1b0d8:	add	x26, x26, #0x1
   1b0dc:	mov	w8, #0x9                   	// #9
   1b0e0:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b0e4:	ldrb	w8, [x26, #1]!
   1b0e8:	mov	w3, wzr
   1b0ec:	cmp	w8, #0x6c
   1b0f0:	cinc	w8, w11, eq  // eq = none
   1b0f4:	b	1b204 <mpfr_vasnprintf_aux@@Base+0x550>
   1b0f8:	mov	w3, wzr
   1b0fc:	add	x26, x26, #0x1
   1b100:	mov	w8, #0xe                   	// #14
   1b104:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b108:	mov	w3, wzr
   1b10c:	add	x26, x26, #0x1
   1b110:	mov	w8, #0x6                   	// #6
   1b114:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b118:	mov	w3, wzr
   1b11c:	add	x26, x26, #0x1
   1b120:	mov	w8, #0xa                   	// #10
   1b124:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b128:	mov	w3, wzr
   1b12c:	add	x26, x26, #0x1
   1b130:	mov	w8, #0x7                   	// #7
   1b134:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b138:	mov	w3, wzr
   1b13c:	add	x26, x26, #0x1
   1b140:	mov	w8, #0xc                   	// #12
   1b144:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b148:	mov	w3, wzr
   1b14c:	add	x26, x26, #0x1
   1b150:	mov	w8, #0xb                   	// #11
   1b154:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b158:	mov	w3, wzr
   1b15c:	add	x26, x26, #0x1
   1b160:	mov	w8, #0x8                   	// #8
   1b164:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b168:	mov	x20, x26
   1b16c:	ldrb	w22, [x20, #1]!
   1b170:	mov	w3, wzr
   1b174:	mov	w9, #0xf                   	// #15
   1b178:	str	w9, [x19, #104]
   1b17c:	sub	w8, w22, #0x2a
   1b180:	cmp	w8, #0x30
   1b184:	b.hi	1b278 <mpfr_vasnprintf_aux@@Base+0x5c4>  // b.pmore
   1b188:	adrp	x11, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b18c:	add	x11, x11, #0x83e
   1b190:	adr	x9, 1b1a8 <mpfr_vasnprintf_aux@@Base+0x4f4>
   1b194:	ldrb	w10, [x11, x8]
   1b198:	add	x9, x9, x10, lsl #2
   1b19c:	mov	x10, #0x71                  	// #113
   1b1a0:	movk	x10, #0x73, lsl #32
   1b1a4:	br	x9
   1b1a8:	ldr	x11, [x19, #88]
   1b1ac:	add	x26, x26, #0x2
   1b1b0:	ldrsw	x8, [x11]
   1b1b4:	tbz	w8, #31, 1b258 <mpfr_vasnprintf_aux@@Base+0x5a4>
   1b1b8:	add	w9, w8, #0x8
   1b1bc:	cmn	w8, #0x8
   1b1c0:	str	w9, [x11]
   1b1c4:	b.gt	1b258 <mpfr_vasnprintf_aux@@Base+0x5a4>
   1b1c8:	ldr	x9, [x4, #8]
   1b1cc:	add	x8, x9, x8
   1b1d0:	b	1b264 <mpfr_vasnprintf_aux@@Base+0x5b0>
   1b1d4:	mov	w3, wzr
   1b1d8:	add	x26, x26, #0x1
   1b1dc:	mov	w8, #0xd                   	// #13
   1b1e0:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b1e4:	mov	w3, wzr
   1b1e8:	add	x26, x26, #0x1
   1b1ec:	mov	w8, #0x5                   	// #5
   1b1f0:	b	1b26c <mpfr_vasnprintf_aux@@Base+0x5b8>
   1b1f4:	ldrb	w8, [x26, #1]!
   1b1f8:	mov	w3, wzr
   1b1fc:	cmp	w8, #0x68
   1b200:	cinc	w8, w5, ne  // ne = any
   1b204:	str	w8, [x19, #104]
   1b208:	cinc	x26, x26, eq  // eq = none
   1b20c:	b	1b270 <mpfr_vasnprintf_aux@@Base+0x5bc>
   1b210:	mov	x10, #0x71                  	// #113
   1b214:	movk	x10, #0x73, lsl #32
   1b218:	b	1b270 <mpfr_vasnprintf_aux@@Base+0x5bc>
   1b21c:	mov	w3, wzr
   1b220:	add	x26, x26, #0x2
   1b224:	b	1b268 <mpfr_vasnprintf_aux@@Base+0x5b4>
   1b228:	add	x26, x26, #0x2
   1b22c:	mov	w3, #0x1                   	// #1
   1b230:	b	1b268 <mpfr_vasnprintf_aux@@Base+0x5b4>
   1b234:	add	x26, x26, #0x2
   1b238:	mov	w3, #0x3                   	// #3
   1b23c:	b	1b268 <mpfr_vasnprintf_aux@@Base+0x5b4>
   1b240:	add	x26, x26, #0x2
   1b244:	mov	w3, #0x2                   	// #2
   1b248:	b	1b268 <mpfr_vasnprintf_aux@@Base+0x5b4>
   1b24c:	add	x26, x26, #0x2
   1b250:	mov	w3, #0x4                   	// #4
   1b254:	b	1b268 <mpfr_vasnprintf_aux@@Base+0x5b4>
   1b258:	ldr	x8, [x4]
   1b25c:	add	x9, x8, #0x8
   1b260:	str	x9, [x4]
   1b264:	ldr	w3, [x8]
   1b268:	mov	w8, #0xf                   	// #15
   1b26c:	str	w8, [x19, #104]
   1b270:	ldrb	w22, [x26]
   1b274:	mov	x20, x26
   1b278:	sub	w12, w22, #0x41
   1b27c:	cmp	w12, #0x37
   1b280:	b.hi	1b4b0 <mpfr_vasnprintf_aux@@Base+0x7fc>  // b.pmore
   1b284:	adr	x8, 1b29c <mpfr_vasnprintf_aux@@Base+0x5e8>
   1b288:	ldrb	w9, [x13, x12]
   1b28c:	add	x8, x8, x9, lsl #2
   1b290:	ldr	x11, [x19, #80]
   1b294:	ldr	x9, [x19, #96]
   1b298:	br	x8
   1b29c:	ldr	w26, [x19, #104]
   1b2a0:	cmp	w26, #0xf
   1b2a4:	b.hi	1b304 <mpfr_vasnprintf_aux@@Base+0x650>  // b.pmore
   1b2a8:	lsl	w8, w5, w26
   1b2ac:	tst	w8, w6
   1b2b0:	b.ne	1b2d8 <mpfr_vasnprintf_aux@@Base+0x624>  // b.any
   1b2b4:	b	1b304 <mpfr_vasnprintf_aux@@Base+0x650>
   1b2b8:	ldr	w26, [x19, #104]
   1b2bc:	cmp	w26, #0xe
   1b2c0:	b.hi	1b304 <mpfr_vasnprintf_aux@@Base+0x650>  // b.pmore
   1b2c4:	lsl	w8, w5, w26
   1b2c8:	mov	w9, #0x7cff                	// #31999
   1b2cc:	tst	w8, w9
   1b2d0:	ldr	x9, [x19, #96]
   1b2d4:	b.eq	1b304 <mpfr_vasnprintf_aux@@Base+0x650>  // b.none
   1b2d8:	cmp	w22, #0x6e
   1b2dc:	add	x20, x20, #0x1
   1b2e0:	b.eq	1b3d0 <mpfr_vasnprintf_aux@@Base+0x71c>  // b.none
   1b2e4:	cmp	w26, #0xf
   1b2e8:	b.ne	1b350 <mpfr_vasnprintf_aux@@Base+0x69c>  // b.any
   1b2ec:	cmp	w12, #0x26
   1b2f0:	b.hi	1b300 <mpfr_vasnprintf_aux@@Base+0x64c>  // b.pmore
   1b2f4:	lsl	x8, x5, x12
   1b2f8:	tst	x8, x10
   1b2fc:	b.ne	1b4bc <mpfr_vasnprintf_aux@@Base+0x808>  // b.any
   1b300:	ldrb	w22, [x20]
   1b304:	ldp	x24, x10, [x19, #56]
   1b308:	ldr	x3, [x19, #88]
   1b30c:	cbnz	w22, 1ae48 <mpfr_vasnprintf_aux@@Base+0x194>
   1b310:	b	1e6fc <mpfr_vasnprintf_aux@@Base+0x3a48>
   1b314:	ldr	w26, [x19, #104]
   1b318:	cbz	w26, 1b2d8 <mpfr_vasnprintf_aux@@Base+0x624>
   1b31c:	cmp	w26, #0x3
   1b320:	b.eq	1b2d8 <mpfr_vasnprintf_aux@@Base+0x624>  // b.none
   1b324:	b	1b304 <mpfr_vasnprintf_aux@@Base+0x650>
   1b328:	ldr	w26, [x19, #104]
   1b32c:	cbz	w26, 1b344 <mpfr_vasnprintf_aux@@Base+0x690>
   1b330:	mov	w22, #0x70                  	// #112
   1b334:	b	1b304 <mpfr_vasnprintf_aux@@Base+0x650>
   1b338:	ldr	w26, [x19, #104]
   1b33c:	cmp	w26, #0xf
   1b340:	b.ne	1b4a8 <mpfr_vasnprintf_aux@@Base+0x7f4>  // b.any
   1b344:	add	x20, x20, #0x1
   1b348:	cmp	w26, #0xf
   1b34c:	b.eq	1b2ec <mpfr_vasnprintf_aux@@Base+0x638>  // b.none
   1b350:	sub	w8, w26, #0x1
   1b354:	cmp	w8, #0xd
   1b358:	b.hi	1b9d8 <mpfr_vasnprintf_aux@@Base+0xd24>  // b.pmore
   1b35c:	adrp	x11, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b360:	add	x11, x11, #0x8a8
   1b364:	adr	x9, 1b374 <mpfr_vasnprintf_aux@@Base+0x6c0>
   1b368:	ldrh	w10, [x11, x8, lsl #1]
   1b36c:	add	x9, x9, x10, lsl #2
   1b370:	br	x9
   1b374:	ldr	x8, [x19, #88]
   1b378:	mov	x10, x8
   1b37c:	ldr	w8, [x8]
   1b380:	tbz	w8, #31, 1b394 <mpfr_vasnprintf_aux@@Base+0x6e0>
   1b384:	add	w9, w8, #0x8
   1b388:	cmn	w8, #0x7
   1b38c:	str	w9, [x10]
   1b390:	b.lt	1b3a0 <mpfr_vasnprintf_aux@@Base+0x6ec>  // b.tstop
   1b394:	ldr	x8, [x4]
   1b398:	add	x8, x8, #0x8
   1b39c:	str	x8, [x4]
   1b3a0:	ldr	x24, [x19, #56]
   1b3a4:	mov	w14, #0x2f                  	// #47
   1b3a8:	mov	w15, #0xcccd                	// #52429
   1b3ac:	mov	w25, #0x1                   	// #1
   1b3b0:	movk	w14, #0x8000, lsl #16
   1b3b4:	movk	w15, #0xccc, lsl #16
   1b3b8:	mov	w16, #0x7fffffff            	// #2147483647
   1b3bc:	mov	w17, #0x80000001            	// #-2147483647
   1b3c0:	mov	x3, x10
   1b3c4:	b	1c368 <mpfr_vasnprintf_aux@@Base+0x16b4>
   1b3c8:	ldr	w26, [x19, #104]
   1b3cc:	add	x20, x20, #0x1
   1b3d0:	ldr	x8, [x19, #88]
   1b3d4:	ldrsw	x8, [x8]
   1b3d8:	tbz	w8, #31, 1b3fc <mpfr_vasnprintf_aux@@Base+0x748>
   1b3dc:	ldr	x10, [x19, #88]
   1b3e0:	add	w9, w8, #0x8
   1b3e4:	cmn	w8, #0x8
   1b3e8:	str	w9, [x10]
   1b3ec:	b.gt	1b3fc <mpfr_vasnprintf_aux@@Base+0x748>
   1b3f0:	ldr	x9, [x4, #8]
   1b3f4:	add	x8, x9, x8
   1b3f8:	b	1b408 <mpfr_vasnprintf_aux@@Base+0x754>
   1b3fc:	ldr	x8, [x4]
   1b400:	add	x9, x8, #0x8
   1b404:	str	x9, [x4]
   1b408:	ldr	x0, [x8]
   1b40c:	ldr	x24, [x19, #56]
   1b410:	sub	x10, x27, x21
   1b414:	cbz	w25, 1b4e8 <mpfr_vasnprintf_aux@@Base+0x834>
   1b418:	add	x1, x10, #0x1
   1b41c:	cmp	x1, #0x4, lsl #12
   1b420:	mov	x26, x4
   1b424:	mov	x25, x2
   1b428:	stur	xzr, [x29, #-48]
   1b42c:	str	w3, [x19, #32]
   1b430:	str	x0, [x19, #48]
   1b434:	b.hi	1ce2c <mpfr_vasnprintf_aux@@Base+0x2178>  // b.pmore
   1b438:	add	x9, x1, #0xf
   1b43c:	mov	x8, sp
   1b440:	and	x9, x9, #0xfffffffffffffff0
   1b444:	sub	x22, x8, x9
   1b448:	mov	sp, x22
   1b44c:	mov	x0, x22
   1b450:	mov	x1, x21
   1b454:	mov	x2, x10
   1b458:	mov	x21, x10
   1b45c:	bl	cab0 <strncpy@plt>
   1b460:	strb	wzr, [x22, x21]
   1b464:	ldp	q0, q1, [x19, #240]
   1b468:	sub	x0, x29, #0x48
   1b46c:	sub	x2, x29, #0xd0
   1b470:	mov	x1, x22
   1b474:	stp	q0, q1, [x29, #-208]
   1b478:	bl	c090 <__gmp_vasprintf@plt>
   1b47c:	tbnz	w0, #31, 1eaa0 <mpfr_vasnprintf_aux@@Base+0x3dec>
   1b480:	ldur	x21, [x29, #-72]
   1b484:	cmn	x23, #0x1
   1b488:	b.eq	1b760 <mpfr_vasnprintf_aux@@Base+0xaac>  // b.none
   1b48c:	mov	w10, w0
   1b490:	adds	x23, x23, x10
   1b494:	cset	w8, cs  // cs = hs, nlast
   1b498:	orr	x8, x8, x23, lsr #63
   1b49c:	cbz	x8, 1b5f4 <mpfr_vasnprintf_aux@@Base+0x940>
   1b4a0:	mov	x23, #0xffffffffffffffff    	// #-1
   1b4a4:	b	1b760 <mpfr_vasnprintf_aux@@Base+0xaac>
   1b4a8:	mov	w22, #0x62                  	// #98
   1b4ac:	b	1b304 <mpfr_vasnprintf_aux@@Base+0x650>
   1b4b0:	ldr	x11, [x19, #80]
   1b4b4:	ldr	x9, [x19, #96]
   1b4b8:	b	1b304 <mpfr_vasnprintf_aux@@Base+0x650>
   1b4bc:	ldr	x8, [x19, #88]
   1b4c0:	ldrsw	x8, [x8]
   1b4c4:	tbz	w8, #31, 1b514 <mpfr_vasnprintf_aux@@Base+0x860>
   1b4c8:	ldr	x10, [x19, #88]
   1b4cc:	add	w9, w8, #0x8
   1b4d0:	cmn	w8, #0x8
   1b4d4:	str	w9, [x10]
   1b4d8:	b.gt	1b514 <mpfr_vasnprintf_aux@@Base+0x860>
   1b4dc:	ldr	x9, [x4, #8]
   1b4e0:	add	x8, x9, x8
   1b4e4:	b	1b520 <mpfr_vasnprintf_aux@@Base+0x86c>
   1b4e8:	cmp	x21, x27
   1b4ec:	b.eq	1b7c4 <mpfr_vasnprintf_aux@@Base+0xb10>  // b.none
   1b4f0:	cmn	x23, #0x1
   1b4f4:	b.eq	1b7c4 <mpfr_vasnprintf_aux@@Base+0xb10>  // b.none
   1b4f8:	adds	x23, x10, x23
   1b4fc:	cset	w8, cs  // cs = hs, nlast
   1b500:	orr	x8, x8, x23, lsr #63
   1b504:	cbz	x8, 1b6f0 <mpfr_vasnprintf_aux@@Base+0xa3c>
   1b508:	ldr	w26, [x19, #104]
   1b50c:	mov	x23, #0xffffffffffffffff    	// #-1
   1b510:	b	1b7c4 <mpfr_vasnprintf_aux@@Base+0xb10>
   1b514:	ldr	x8, [x4]
   1b518:	add	x9, x8, #0x8
   1b51c:	str	x9, [x4]
   1b520:	ldr	x8, [x8]
   1b524:	sub	x10, x27, x21
   1b528:	str	x2, [x19, #112]
   1b52c:	str	w3, [x19, #32]
   1b530:	stp	x4, x8, [x19, #16]
   1b534:	cbz	w25, 1b5c0 <mpfr_vasnprintf_aux@@Base+0x90c>
   1b538:	add	x1, x10, #0x1
   1b53c:	cmp	x1, #0x4, lsl #12
   1b540:	mov	x25, x12
   1b544:	mov	x27, x4
   1b548:	stur	xzr, [x29, #-48]
   1b54c:	b.hi	1cf3c <mpfr_vasnprintf_aux@@Base+0x2288>  // b.pmore
   1b550:	add	x9, x1, #0xf
   1b554:	mov	x8, sp
   1b558:	and	x9, x9, #0xfffffffffffffff0
   1b55c:	sub	x26, x8, x9
   1b560:	mov	sp, x26
   1b564:	mov	x0, x26
   1b568:	mov	x1, x21
   1b56c:	mov	x2, x10
   1b570:	mov	x21, x10
   1b574:	bl	cab0 <strncpy@plt>
   1b578:	strb	wzr, [x26, x21]
   1b57c:	ldp	q0, q1, [x19, #240]
   1b580:	sub	x0, x29, #0x48
   1b584:	sub	x2, x29, #0xd0
   1b588:	mov	x1, x26
   1b58c:	stp	q0, q1, [x29, #-208]
   1b590:	bl	c090 <__gmp_vasprintf@plt>
   1b594:	tbnz	w0, #31, 1eaa0 <mpfr_vasnprintf_aux@@Base+0x3dec>
   1b598:	ldur	x26, [x29, #-72]
   1b59c:	cmn	x23, #0x1
   1b5a0:	b.eq	1bd94 <mpfr_vasnprintf_aux@@Base+0x10e0>  // b.none
   1b5a4:	mov	w21, w0
   1b5a8:	adds	x23, x23, x21
   1b5ac:	cset	w8, cs  // cs = hs, nlast
   1b5b0:	orr	x8, x8, x23, lsr #63
   1b5b4:	cbz	x8, 1b644 <mpfr_vasnprintf_aux@@Base+0x990>
   1b5b8:	mov	x23, #0xffffffffffffffff    	// #-1
   1b5bc:	b	1bd94 <mpfr_vasnprintf_aux@@Base+0x10e0>
   1b5c0:	mov	x25, x12
   1b5c4:	cmp	x21, x27
   1b5c8:	b.eq	1bdac <mpfr_vasnprintf_aux@@Base+0x10f8>  // b.none
   1b5cc:	cmn	x23, #0x1
   1b5d0:	b.eq	1bdac <mpfr_vasnprintf_aux@@Base+0x10f8>  // b.none
   1b5d4:	adds	x23, x10, x23
   1b5d8:	cset	w8, cs  // cs = hs, nlast
   1b5dc:	orr	x8, x8, x23, lsr #63
   1b5e0:	str	x23, [x19, #104]
   1b5e4:	cbz	x8, 1bd40 <mpfr_vasnprintf_aux@@Base+0x108c>
   1b5e8:	ldr	x4, [x19, #16]
   1b5ec:	mov	x23, #0xffffffffffffffff    	// #-1
   1b5f0:	b	1bda8 <mpfr_vasnprintf_aux@@Base+0x10f4>
   1b5f4:	ldr	x9, [x19, #208]
   1b5f8:	cbz	x9, 1b758 <mpfr_vasnprintf_aux@@Base+0xaa4>
   1b5fc:	mvn	x8, x10
   1b600:	mov	x24, x10
   1b604:	cmp	x9, x8
   1b608:	b.cs	1d104 <mpfr_vasnprintf_aux@@Base+0x2450>  // b.hs, b.nlast
   1b60c:	ldr	x8, [x19, #64]
   1b610:	ldp	x10, x9, [x19, #200]
   1b614:	add	x8, x8, x24
   1b618:	add	x9, x10, x9
   1b61c:	cmp	x8, x9
   1b620:	b.cs	1d120 <mpfr_vasnprintf_aux@@Base+0x246c>  // b.hs, b.nlast
   1b624:	ldr	x0, [x19, #64]
   1b628:	mov	x1, x21
   1b62c:	mov	x2, x24
   1b630:	bl	c930 <strncat@plt>
   1b634:	ldur	x21, [x29, #-72]
   1b638:	add	x0, x0, x24
   1b63c:	str	x0, [x19, #64]
   1b640:	b	1b75c <mpfr_vasnprintf_aux@@Base+0xaa8>
   1b644:	ldr	x8, [x19, #208]
   1b648:	cbz	x8, 1bd90 <mpfr_vasnprintf_aux@@Base+0x10dc>
   1b64c:	ldr	x9, [x19, #208]
   1b650:	mvn	x8, x21
   1b654:	cmp	x9, x8
   1b658:	b.cs	1d1cc <mpfr_vasnprintf_aux@@Base+0x2518>  // b.hs, b.nlast
   1b65c:	ldr	x8, [x19, #64]
   1b660:	ldp	x10, x9, [x19, #200]
   1b664:	add	x8, x8, x21
   1b668:	add	x9, x10, x9
   1b66c:	cmp	x8, x9
   1b670:	b.cs	1d1e8 <mpfr_vasnprintf_aux@@Base+0x2534>  // b.hs, b.nlast
   1b674:	ldr	x0, [x19, #64]
   1b678:	mov	x1, x26
   1b67c:	mov	x2, x21
   1b680:	bl	c930 <strncat@plt>
   1b684:	ldur	x26, [x29, #-72]
   1b688:	add	x0, x0, x21
   1b68c:	str	x0, [x19, #64]
   1b690:	b	1bd94 <mpfr_vasnprintf_aux@@Base+0x10e0>
   1b694:	ldr	x8, [x19, #88]
   1b698:	ldr	w8, [x8]
   1b69c:	tbz	w8, #31, 1b6b4 <mpfr_vasnprintf_aux@@Base+0xa00>
   1b6a0:	add	w9, w8, #0x8
   1b6a4:	cmn	w8, #0x7
   1b6a8:	ldr	x8, [x19, #88]
   1b6ac:	str	w9, [x8]
   1b6b0:	b.lt	1b6c0 <mpfr_vasnprintf_aux@@Base+0xa0c>  // b.tstop
   1b6b4:	ldr	x8, [x4]
   1b6b8:	add	x8, x8, #0x8
   1b6bc:	str	x8, [x4]
   1b6c0:	ldr	x24, [x19, #56]
   1b6c4:	ldp	x3, x9, [x19, #88]
   1b6c8:	mov	w14, #0x2f                  	// #47
   1b6cc:	mov	w15, #0xcccd                	// #52429
   1b6d0:	mov	w25, #0x1                   	// #1
   1b6d4:	movk	w14, #0x8000, lsl #16
   1b6d8:	movk	w15, #0xccc, lsl #16
   1b6dc:	mov	w16, #0x7fffffff            	// #2147483647
   1b6e0:	mov	w17, #0x80000001            	// #-2147483647
   1b6e4:	mov	w5, #0x1                   	// #1
   1b6e8:	mov	w6, #0x8301                	// #33537
   1b6ec:	b	1df28 <mpfr_vasnprintf_aux@@Base+0x3274>
   1b6f0:	ldr	x8, [x19, #208]
   1b6f4:	mov	x22, x23
   1b6f8:	mov	x23, x18
   1b6fc:	mov	x26, x4
   1b700:	mov	x25, x2
   1b704:	str	x0, [x19, #48]
   1b708:	str	w3, [x19, #32]
   1b70c:	cbz	x8, 1c4f0 <mpfr_vasnprintf_aux@@Base+0x183c>
   1b710:	ldr	x9, [x19, #208]
   1b714:	mvn	x8, x10
   1b718:	mov	x27, x10
   1b71c:	cmp	x9, x8
   1b720:	b.cs	1d2e4 <mpfr_vasnprintf_aux@@Base+0x2630>  // b.hs, b.nlast
   1b724:	ldr	x8, [x19, #64]
   1b728:	ldp	x10, x9, [x19, #200]
   1b72c:	add	x8, x8, x27
   1b730:	add	x9, x10, x9
   1b734:	cmp	x8, x9
   1b738:	b.cs	1d2fc <mpfr_vasnprintf_aux@@Base+0x2648>  // b.hs, b.nlast
   1b73c:	ldr	x0, [x19, #64]
   1b740:	mov	x1, x21
   1b744:	mov	x2, x27
   1b748:	bl	c930 <strncat@plt>
   1b74c:	add	x0, x0, x27
   1b750:	str	x0, [x19, #64]
   1b754:	b	1c4f4 <mpfr_vasnprintf_aux@@Base+0x1840>
   1b758:	str	xzr, [x19, #208]
   1b75c:	ldr	x24, [x19, #56]
   1b760:	mov	x0, x21
   1b764:	bl	c880 <mpfr_free_str@plt>
   1b768:	ldur	x0, [x29, #-48]
   1b76c:	cbnz	x0, 1ce44 <mpfr_vasnprintf_aux@@Base+0x2190>
   1b770:	mov	w14, #0x2f                  	// #47
   1b774:	mov	w15, #0xcccd                	// #52429
   1b778:	adrp	x18, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b77c:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b780:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b784:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b788:	mov	x2, x25
   1b78c:	mov	x4, x26
   1b790:	movk	w14, #0x8000, lsl #16
   1b794:	movk	w15, #0xccc, lsl #16
   1b798:	mov	w16, #0x7fffffff            	// #2147483647
   1b79c:	mov	w17, #0x80000001            	// #-2147483647
   1b7a0:	add	x18, x18, #0x959
   1b7a4:	add	x13, x13, #0x86f
   1b7a8:	mov	w5, #0x1                   	// #1
   1b7ac:	mov	w6, #0x8301                	// #33537
   1b7b0:	add	x7, x7, #0x9d0
   1b7b4:	add	x30, x30, #0x9b8
   1b7b8:	ldr	w3, [x19, #32]
   1b7bc:	ldr	w26, [x19, #104]
   1b7c0:	ldr	x0, [x19, #48]
   1b7c4:	sub	w8, w26, #0x1
   1b7c8:	cmp	w8, #0xe
   1b7cc:	b.hi	1b884 <mpfr_vasnprintf_aux@@Base+0xbd0>  // b.pmore
   1b7d0:	adrp	x11, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b7d4:	add	x11, x11, #0x93a
   1b7d8:	adr	x9, 1b7e8 <mpfr_vasnprintf_aux@@Base+0xb34>
   1b7dc:	ldrb	w10, [x11, x8]
   1b7e0:	add	x9, x9, x10, lsl #2
   1b7e4:	br	x9
   1b7e8:	str	x23, [x0]
   1b7ec:	ldr	x3, [x19, #88]
   1b7f0:	b	1b95c <mpfr_vasnprintf_aux@@Base+0xca8>
   1b7f4:	ldr	x8, [x19, #88]
   1b7f8:	mov	x27, x13
   1b7fc:	mov	x26, x18
   1b800:	mov	x21, x2
   1b804:	mov	x25, x8
   1b808:	ldrsw	x8, [x8]
   1b80c:	tbz	w8, #31, 1b970 <mpfr_vasnprintf_aux@@Base+0xcbc>
   1b810:	add	w9, w8, #0x8
   1b814:	cmn	w8, #0x8
   1b818:	str	w9, [x25]
   1b81c:	b.gt	1b970 <mpfr_vasnprintf_aux@@Base+0xcbc>
   1b820:	ldr	x9, [x4, #8]
   1b824:	mov	x10, x4
   1b828:	add	x8, x9, x8
   1b82c:	b	1b980 <mpfr_vasnprintf_aux@@Base+0xccc>
   1b830:	mov	x1, x23
   1b834:	mov	x21, x2
   1b838:	mov	x2, xzr
   1b83c:	mov	x22, x4
   1b840:	mov	x26, x7
   1b844:	mov	x27, x30
   1b848:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   1b84c:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b850:	mov	x30, x27
   1b854:	mov	x7, x26
   1b858:	mov	w6, #0x8301                	// #33537
   1b85c:	mov	w5, #0x1                   	// #1
   1b860:	add	x13, x13, #0x86f
   1b864:	b	1b930 <mpfr_vasnprintf_aux@@Base+0xc7c>
   1b868:	mov	x1, x23
   1b86c:	mov	x21, x2
   1b870:	mov	x22, x4
   1b874:	mov	x27, x13
   1b878:	mov	x26, x7
   1b87c:	bl	bd00 <__gmpz_set_ui@plt>
   1b880:	b	1b918 <mpfr_vasnprintf_aux@@Base+0xc64>
   1b884:	str	w23, [x0]
   1b888:	b	1b7ec <mpfr_vasnprintf_aux@@Base+0xb38>
   1b88c:	strb	w23, [x0]
   1b890:	b	1b7ec <mpfr_vasnprintf_aux@@Base+0xb38>
   1b894:	strh	w23, [x0]
   1b898:	b	1b7ec <mpfr_vasnprintf_aux@@Base+0xb38>
   1b89c:	str	x2, [x19, #112]
   1b8a0:	mov	w2, #0x1                   	// #1
   1b8a4:	mov	x1, x23
   1b8a8:	mov	x22, x4
   1b8ac:	mov	x27, x13
   1b8b0:	mov	x26, x7
   1b8b4:	mov	x21, x30
   1b8b8:	bl	c550 <__gmpq_set_ui@plt>
   1b8bc:	ldr	x3, [x19, #88]
   1b8c0:	ldr	x2, [x19, #112]
   1b8c4:	adrp	x18, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b8c8:	mov	w15, #0xcccd                	// #52429
   1b8cc:	mov	w14, #0x2f                  	// #47
   1b8d0:	mov	x30, x21
   1b8d4:	mov	x7, x26
   1b8d8:	mov	w6, #0x8301                	// #33537
   1b8dc:	mov	w5, #0x1                   	// #1
   1b8e0:	mov	x13, x27
   1b8e4:	add	x18, x18, #0x959
   1b8e8:	mov	w17, #0x80000001            	// #-2147483647
   1b8ec:	mov	w16, #0x7fffffff            	// #2147483647
   1b8f0:	movk	w15, #0xccc, lsl #16
   1b8f4:	movk	w14, #0x8000, lsl #16
   1b8f8:	mov	x4, x22
   1b8fc:	b	1b95c <mpfr_vasnprintf_aux@@Base+0xca8>
   1b900:	mov	x1, x23
   1b904:	mov	x21, x2
   1b908:	mov	x22, x4
   1b90c:	mov	x27, x13
   1b910:	mov	x26, x7
   1b914:	bl	c1c0 <__gmpf_set_ui@plt>
   1b918:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b91c:	add	x30, x30, #0x9b8
   1b920:	mov	x7, x26
   1b924:	mov	w6, #0x8301                	// #33537
   1b928:	mov	w5, #0x1                   	// #1
   1b92c:	mov	x13, x27
   1b930:	ldr	x3, [x19, #88]
   1b934:	adrp	x18, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b938:	mov	w15, #0xcccd                	// #52429
   1b93c:	mov	w14, #0x2f                  	// #47
   1b940:	add	x18, x18, #0x959
   1b944:	mov	w17, #0x80000001            	// #-2147483647
   1b948:	mov	w16, #0x7fffffff            	// #2147483647
   1b94c:	movk	w15, #0xccc, lsl #16
   1b950:	movk	w14, #0x8000, lsl #16
   1b954:	mov	x4, x22
   1b958:	mov	x2, x21
   1b95c:	ldp	q1, q0, [x4]
   1b960:	mov	w25, wzr
   1b964:	mov	x21, x20
   1b968:	stp	q1, q0, [x19, #240]
   1b96c:	b	1df24 <mpfr_vasnprintf_aux@@Base+0x3270>
   1b970:	ldr	x8, [x4]
   1b974:	mov	x10, x4
   1b978:	add	x9, x8, #0x8
   1b97c:	str	x9, [x4]
   1b980:	ldr	x8, [x8]
   1b984:	tbnz	x8, #63, 1bbd0 <mpfr_vasnprintf_aux@@Base+0xf1c>
   1b988:	ldr	x24, [x19, #56]
   1b98c:	mov	w14, #0x2f                  	// #47
   1b990:	mov	w15, #0xcccd                	// #52429
   1b994:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b998:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1b99c:	mov	x2, x21
   1b9a0:	mov	x4, x10
   1b9a4:	mov	x3, x25
   1b9a8:	movk	w14, #0x8000, lsl #16
   1b9ac:	movk	w15, #0xccc, lsl #16
   1b9b0:	mov	w16, #0x7fffffff            	// #2147483647
   1b9b4:	mov	w17, #0x80000001            	// #-2147483647
   1b9b8:	mov	x18, x26
   1b9bc:	mov	x13, x27
   1b9c0:	mov	w5, #0x1                   	// #1
   1b9c4:	mov	w6, #0x8301                	// #33537
   1b9c8:	add	x7, x7, #0x9d0
   1b9cc:	add	x30, x30, #0x9b8
   1b9d0:	cbnz	x8, 1bc1c <mpfr_vasnprintf_aux@@Base+0xf68>
   1b9d4:	b	1b95c <mpfr_vasnprintf_aux@@Base+0xca8>
   1b9d8:	mov	x8, x12
   1b9dc:	ldr	x12, [x19, #88]
   1b9e0:	mov	x27, x23
   1b9e4:	mov	x26, x30
   1b9e8:	mov	x22, x7
   1b9ec:	mov	x1, x13
   1b9f0:	mov	x0, x18
   1b9f4:	mov	x11, x4
   1b9f8:	mov	x10, x2
   1b9fc:	cmp	w8, #0x37
   1ba00:	mov	w25, #0x1                   	// #1
   1ba04:	str	x28, [x19, #32]
   1ba08:	b.hi	1c488 <mpfr_vasnprintf_aux@@Base+0x17d4>  // b.pmore
   1ba0c:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ba10:	mov	x14, x8
   1ba14:	add	x13, x13, #0x8ca
   1ba18:	adr	x8, 1ba74 <mpfr_vasnprintf_aux@@Base+0xdc0>
   1ba1c:	ldrh	w9, [x13, x14, lsl #1]
   1ba20:	add	x8, x8, x9, lsl #2
   1ba24:	ldr	x24, [x19, #56]
   1ba28:	ldr	x28, [x19, #32]
   1ba2c:	ldr	x9, [x19, #96]
   1ba30:	mov	w14, #0x2f                  	// #47
   1ba34:	mov	w15, #0xcccd                	// #52429
   1ba38:	mov	x2, x10
   1ba3c:	mov	x4, x11
   1ba40:	mov	x3, x12
   1ba44:	movk	w14, #0x8000, lsl #16
   1ba48:	movk	w15, #0xccc, lsl #16
   1ba4c:	mov	w16, #0x7fffffff            	// #2147483647
   1ba50:	mov	w17, #0x80000001            	// #-2147483647
   1ba54:	mov	x18, x0
   1ba58:	mov	x13, x1
   1ba5c:	mov	w5, #0x1                   	// #1
   1ba60:	mov	w6, #0x8301                	// #33537
   1ba64:	mov	x7, x22
   1ba68:	mov	x30, x26
   1ba6c:	mov	x23, x27
   1ba70:	br	x8
   1ba74:	ldr	w8, [x3]
   1ba78:	tbz	w8, #31, 1c498 <mpfr_vasnprintf_aux@@Base+0x17e4>
   1ba7c:	add	w9, w8, #0x8
   1ba80:	cmn	w8, #0x7
   1ba84:	str	w9, [x12]
   1ba88:	b.lt	1c484 <mpfr_vasnprintf_aux@@Base+0x17d0>  // b.tstop
   1ba8c:	b	1c498 <mpfr_vasnprintf_aux@@Base+0x17e4>
   1ba90:	mov	x3, x13
   1ba94:	ldr	x13, [x19, #88]
   1ba98:	ldr	w8, [x4, #28]
   1ba9c:	mov	x10, x4
   1baa0:	tbz	w8, #31, 1bc80 <mpfr_vasnprintf_aux@@Base+0xfcc>
   1baa4:	add	w9, w8, #0x10
   1baa8:	cmn	w8, #0xf
   1baac:	str	w9, [x10, #28]
   1bab0:	b.ge	1bc80 <mpfr_vasnprintf_aux@@Base+0xfcc>  // b.tcont
   1bab4:	ldr	x24, [x19, #56]
   1bab8:	mov	w25, #0x1                   	// #1
   1babc:	mov	x4, x10
   1bac0:	b	1c344 <mpfr_vasnprintf_aux@@Base+0x1690>
   1bac4:	mov	x3, x13
   1bac8:	ldr	x13, [x19, #88]
   1bacc:	sub	w8, w22, #0x58
   1bad0:	mov	w9, #0x1                   	// #1
   1bad4:	cmp	w8, #0x20
   1bad8:	mov	w25, #0x1                   	// #1
   1badc:	b.hi	1c340 <mpfr_vasnprintf_aux@@Base+0x168c>  // b.pmore
   1bae0:	mov	x10, #0x1001                	// #4097
   1bae4:	movk	x10, #0x2082, lsl #16
   1bae8:	lsl	x9, x9, x8
   1baec:	movk	x10, #0x1, lsl #32
   1baf0:	tst	x9, x10
   1baf4:	b.eq	1c580 <mpfr_vasnprintf_aux@@Base+0x18cc>  // b.none
   1baf8:	ldr	w8, [x13]
   1bafc:	tbz	w8, #31, 1c330 <mpfr_vasnprintf_aux@@Base+0x167c>
   1bb00:	add	w9, w8, #0x8
   1bb04:	cmn	w8, #0x7
   1bb08:	str	w9, [x13]
   1bb0c:	b.ge	1c330 <mpfr_vasnprintf_aux@@Base+0x167c>  // b.tcont
   1bb10:	mov	w25, #0x1                   	// #1
   1bb14:	b	1c340 <mpfr_vasnprintf_aux@@Base+0x168c>
   1bb18:	ldr	x8, [x19, #88]
   1bb1c:	mov	x11, x8
   1bb20:	ldr	w8, [x8]
   1bb24:	tbz	w8, #31, 1bb3c <mpfr_vasnprintf_aux@@Base+0xe88>
   1bb28:	add	w9, w8, #0x8
   1bb2c:	cmn	w8, #0x7
   1bb30:	mov	w8, w9
   1bb34:	str	w9, [x11]
   1bb38:	b.lt	1bb50 <mpfr_vasnprintf_aux@@Base+0xe9c>  // b.tstop
   1bb3c:	ldr	x9, [x4]
   1bb40:	mov	x10, x4
   1bb44:	add	x9, x9, #0x8
   1bb48:	str	x9, [x4]
   1bb4c:	mov	w9, w8
   1bb50:	tbz	w9, #31, 1bb64 <mpfr_vasnprintf_aux@@Base+0xeb0>
   1bb54:	add	w8, w9, #0x8
   1bb58:	cmn	w9, #0x7
   1bb5c:	str	w8, [x11]
   1bb60:	b.lt	1bb70 <mpfr_vasnprintf_aux@@Base+0xebc>  // b.tstop
   1bb64:	ldr	x8, [x4]
   1bb68:	add	x8, x8, #0x8
   1bb6c:	str	x8, [x4]
   1bb70:	ldr	x24, [x19, #56]
   1bb74:	mov	w14, #0x2f                  	// #47
   1bb78:	mov	w15, #0xcccd                	// #52429
   1bb7c:	mov	w25, #0x1                   	// #1
   1bb80:	movk	w14, #0x8000, lsl #16
   1bb84:	movk	w15, #0xccc, lsl #16
   1bb88:	mov	w16, #0x7fffffff            	// #2147483647
   1bb8c:	mov	w17, #0x80000001            	// #-2147483647
   1bb90:	mov	x3, x11
   1bb94:	b	1c368 <mpfr_vasnprintf_aux@@Base+0x16b4>
   1bb98:	ldr	x8, [x19, #88]
   1bb9c:	str	x28, [x19, #32]
   1bba0:	mov	x28, x4
   1bba4:	str	x2, [x19, #112]
   1bba8:	ldrsw	x8, [x8]
   1bbac:	tbz	w8, #31, 1bca0 <mpfr_vasnprintf_aux@@Base+0xfec>
   1bbb0:	ldr	x10, [x19, #88]
   1bbb4:	add	w9, w8, #0x8
   1bbb8:	cmn	w8, #0x8
   1bbbc:	str	w9, [x10]
   1bbc0:	b.gt	1bca0 <mpfr_vasnprintf_aux@@Base+0xfec>
   1bbc4:	ldr	x9, [x28, #8]
   1bbc8:	add	x8, x9, x8
   1bbcc:	b	1bcb0 <mpfr_vasnprintf_aux@@Base+0xffc>
   1bbd0:	ldr	x24, [x19, #56]
   1bbd4:	mov	w14, #0x2f                  	// #47
   1bbd8:	mov	w15, #0xcccd                	// #52429
   1bbdc:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1bbe0:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1bbe4:	neg	x8, x8
   1bbe8:	mov	x2, x21
   1bbec:	mov	x4, x10
   1bbf0:	mov	x3, x25
   1bbf4:	movk	w14, #0x8000, lsl #16
   1bbf8:	movk	w15, #0xccc, lsl #16
   1bbfc:	mov	w16, #0x7fffffff            	// #2147483647
   1bc00:	mov	w17, #0x80000001            	// #-2147483647
   1bc04:	mov	x18, x26
   1bc08:	mov	x13, x27
   1bc0c:	mov	w5, #0x1                   	// #1
   1bc10:	mov	w6, #0x8301                	// #33537
   1bc14:	add	x7, x7, #0x9d0
   1bc18:	add	x30, x30, #0x9b8
   1bc1c:	cmp	x8, #0x1
   1bc20:	str	x23, [x0]
   1bc24:	b.eq	1b95c <mpfr_vasnprintf_aux@@Base+0xca8>  // b.none
   1bc28:	lsl	x8, x8, #3
   1bc2c:	add	x0, x0, #0x8
   1bc30:	sub	x2, x8, #0x8
   1bc34:	mov	w1, wzr
   1bc38:	mov	x22, x4
   1bc3c:	bl	c150 <memset@plt>
   1bc40:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1bc44:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1bc48:	mov	w15, #0xcccd                	// #52429
   1bc4c:	mov	w14, #0x2f                  	// #47
   1bc50:	add	x30, x30, #0x9b8
   1bc54:	add	x7, x7, #0x9d0
   1bc58:	mov	w6, #0x8301                	// #33537
   1bc5c:	mov	w5, #0x1                   	// #1
   1bc60:	mov	x13, x27
   1bc64:	mov	x18, x26
   1bc68:	mov	w17, #0x80000001            	// #-2147483647
   1bc6c:	mov	w16, #0x7fffffff            	// #2147483647
   1bc70:	movk	w15, #0xccc, lsl #16
   1bc74:	movk	w14, #0x8000, lsl #16
   1bc78:	mov	x3, x25
   1bc7c:	b	1b954 <mpfr_vasnprintf_aux@@Base+0xca0>
   1bc80:	ldr	x8, [x10]
   1bc84:	mov	x4, x10
   1bc88:	mov	w25, #0x1                   	// #1
   1bc8c:	add	x8, x8, #0xf
   1bc90:	and	x8, x8, #0xfffffffffffffff0
   1bc94:	add	x8, x8, #0x10
   1bc98:	str	x8, [x10]
   1bc9c:	b	1c340 <mpfr_vasnprintf_aux@@Base+0x168c>
   1bca0:	ldr	x8, [x28]
   1bca4:	mov	x10, x28
   1bca8:	add	x9, x8, #0x8
   1bcac:	str	x9, [x28]
   1bcb0:	ldr	x8, [x8]
   1bcb4:	sub	x26, x27, x21
   1bcb8:	str	x8, [x19, #104]
   1bcbc:	cbz	w25, 1c544 <mpfr_vasnprintf_aux@@Base+0x1890>
   1bcc0:	add	x1, x26, #0x1
   1bcc4:	cmp	x1, #0x4, lsl #12
   1bcc8:	str	xzr, [x19, #232]
   1bccc:	b.hi	1d364 <mpfr_vasnprintf_aux@@Base+0x26b0>  // b.pmore
   1bcd0:	add	x9, x1, #0xf
   1bcd4:	mov	x8, sp
   1bcd8:	and	x9, x9, #0xfffffffffffffff0
   1bcdc:	sub	x25, x8, x9
   1bce0:	mov	sp, x25
   1bce4:	mov	x0, x25
   1bce8:	mov	x1, x21
   1bcec:	mov	x2, x26
   1bcf0:	bl	cab0 <strncpy@plt>
   1bcf4:	strb	wzr, [x25, x26]
   1bcf8:	ldp	q0, q1, [x19, #240]
   1bcfc:	add	x0, x19, #0xe0
   1bd00:	sub	x2, x29, #0xd0
   1bd04:	mov	x1, x25
   1bd08:	stp	q0, q1, [x29, #-208]
   1bd0c:	bl	c090 <__gmp_vasprintf@plt>
   1bd10:	tbnz	w0, #31, 1ebf0 <mpfr_vasnprintf_aux@@Base+0x3f3c>
   1bd14:	ldr	x26, [x19, #224]
   1bd18:	cmn	x23, #0x1
   1bd1c:	b.eq	1cc80 <mpfr_vasnprintf_aux@@Base+0x1fcc>  // b.none
   1bd20:	mov	w21, w0
   1bd24:	mov	x9, x23
   1bd28:	adds	x9, x23, x21
   1bd2c:	cset	w8, cs  // cs = hs, nlast
   1bd30:	orr	x8, x8, x9, lsr #63
   1bd34:	cbz	x8, 1cb38 <mpfr_vasnprintf_aux@@Base+0x1e84>
   1bd38:	mov	x23, #0xffffffffffffffff    	// #-1
   1bd3c:	b	1cc80 <mpfr_vasnprintf_aux@@Base+0x1fcc>
   1bd40:	ldr	x8, [x19, #208]
   1bd44:	cbz	x8, 1c570 <mpfr_vasnprintf_aux@@Base+0x18bc>
   1bd48:	ldr	x9, [x19, #208]
   1bd4c:	mvn	x8, x10
   1bd50:	mov	x27, x10
   1bd54:	cmp	x9, x8
   1bd58:	b.cs	1d37c <mpfr_vasnprintf_aux@@Base+0x26c8>  // b.hs, b.nlast
   1bd5c:	ldr	x8, [x19, #64]
   1bd60:	ldp	x10, x9, [x19, #200]
   1bd64:	add	x8, x8, x27
   1bd68:	add	x9, x10, x9
   1bd6c:	cmp	x8, x9
   1bd70:	b.cs	1d398 <mpfr_vasnprintf_aux@@Base+0x26e4>  // b.hs, b.nlast
   1bd74:	ldr	x0, [x19, #64]
   1bd78:	mov	x1, x21
   1bd7c:	mov	x2, x27
   1bd80:	bl	c930 <strncat@plt>
   1bd84:	add	x0, x0, x27
   1bd88:	str	x0, [x19, #64]
   1bd8c:	b	1c574 <mpfr_vasnprintf_aux@@Base+0x18c0>
   1bd90:	str	xzr, [x19, #208]
   1bd94:	mov	x0, x26
   1bd98:	bl	c880 <mpfr_free_str@plt>
   1bd9c:	ldur	x0, [x29, #-48]
   1bda0:	cbnz	x0, 1cf54 <mpfr_vasnprintf_aux@@Base+0x22a0>
   1bda4:	mov	x4, x27
   1bda8:	ldr	x11, [x19, #80]
   1bdac:	ldurh	w8, [x29, #-216]
   1bdb0:	ldurb	w9, [x29, #-214]
   1bdb4:	ldp	q0, q1, [x4]
   1bdb8:	and	w10, w24, #0xff
   1bdbc:	sturh	w8, [x29, #-212]
   1bdc0:	sturb	w9, [x29, #-210]
   1bdc4:	ldurh	w8, [x29, #-220]
   1bdc8:	ldr	w9, [x19, #76]
   1bdcc:	cmp	w10, #0x30
   1bdd0:	stur	xzr, [x29, #-200]
   1bdd4:	strh	w8, [x19, #228]
   1bdd8:	cset	w8, eq  // eq = none
   1bddc:	tst	w9, #0x4
   1bde0:	mov	w9, #0x2                   	// #2
   1bde4:	csel	w21, w8, w9, eq  // eq = none
   1bde8:	ldr	x8, [x19, #152]
   1bdec:	sturb	wzr, [x29, #-192]
   1bdf0:	stur	wzr, [x29, #-136]
   1bdf4:	stur	w21, [x29, #-208]
   1bdf8:	stp	xzr, xzr, [x11]
   1bdfc:	strb	wzr, [x11, #16]
   1be00:	stp	xzr, xzr, [x8]
   1be04:	stur	xzr, [x8, #13]
   1be08:	ldr	x8, [x19, #144]
   1be0c:	ldur	w10, [x29, #-224]
   1be10:	mov	w0, #0x10                  	// #16
   1be14:	stp	q0, q1, [x19, #240]
   1be18:	stp	xzr, xzr, [x8]
   1be1c:	str	wzr, [x8, #16]
   1be20:	ldr	x8, [x19, #136]
   1be24:	str	w10, [x19, #224]
   1be28:	stp	xzr, xzr, [x8]
   1be2c:	bl	ccd0 <mpfr_allocate_func@plt>
   1be30:	stur	x0, [x29, #-88]
   1be34:	stp	xzr, xzr, [x0]
   1be38:	ldr	x8, [x19, #24]
   1be3c:	mov	x12, x25
   1be40:	ldr	x27, [x19, #48]
   1be44:	cmp	w12, #0x7
   1be48:	ldr	x8, [x8, #16]
   1be4c:	mov	w10, #0x71                  	// #113
   1be50:	mov	x11, #0x4                   	// #4
   1be54:	cset	w9, cc  // cc = lo, ul, last
   1be58:	lsr	w10, w10, w12
   1be5c:	movk	x11, #0x8000, lsl #48
   1be60:	cmp	x8, x11
   1be64:	and	w25, w10, w9
   1be68:	b.lt	1ce4c <mpfr_vasnprintf_aux@@Base+0x2198>  // b.tstop
   1be6c:	mov	w10, #0x1                   	// #1
   1be70:	b.eq	1cec4 <mpfr_vasnprintf_aux@@Base+0x2210>  // b.none
   1be74:	cmp	w12, #0x25
   1be78:	b.hi	1c188 <mpfr_vasnprintf_aux@@Base+0x14d4>  // b.pmore
   1be7c:	mov	x11, #0x1                   	// #1
   1be80:	lsl	x9, x10, x12
   1be84:	movk	x11, #0x3, lsl #32
   1be88:	tst	x9, x11
   1be8c:	b.ne	1bf24 <mpfr_vasnprintf_aux@@Base+0x1270>  // b.any
   1be90:	lsl	x9, x10, x12
   1be94:	tst	x9, #0x1000000010
   1be98:	b.ne	1bf7c <mpfr_vasnprintf_aux@@Base+0x12c8>  // b.any
   1be9c:	lsl	x9, x10, x12
   1bea0:	tst	x9, #0x2000000020
   1bea4:	b.eq	1c188 <mpfr_vasnprintf_aux@@Base+0x14d4>  // b.none
   1bea8:	ldr	w10, [x19, #76]
   1beac:	ldurb	w8, [x29, #-210]
   1beb0:	ldurh	w9, [x29, #-212]
   1beb4:	ldr	w21, [x19, #40]
   1beb8:	sturb	w10, [x29, #-48]
   1bebc:	ldr	x10, [x19, #128]
   1bec0:	cmp	w27, #0x0
   1bec4:	ldr	x1, [x19, #24]
   1bec8:	sub	x0, x29, #0xd0
   1becc:	strb	w8, [x10, #2]
   1bed0:	strh	w9, [x10]
   1bed4:	mov	w10, #0x6                   	// #6
   1bed8:	csel	w10, w10, w27, lt  // lt = tstop
   1bedc:	stp	w21, w10, [x29, #-44]
   1bee0:	ldr	x10, [x19, #160]
   1bee4:	ldr	w8, [x19, #224]
   1bee8:	ldrh	w9, [x19, #228]
   1beec:	sub	x2, x29, #0x30
   1bef0:	stur	x10, [x29, #-32]
   1bef4:	mov	w10, #0xf                   	// #15
   1bef8:	stur	w10, [x29, #-24]
   1befc:	ldr	w10, [x19, #32]
   1bf00:	mov	x3, xzr
   1bf04:	sturb	w22, [x29, #-16]
   1bf08:	sturb	w24, [x29, #-15]
   1bf0c:	stur	w10, [x29, #-20]
   1bf10:	ldr	x10, [x19, #96]
   1bf14:	strh	w9, [x10, #4]
   1bf18:	str	w8, [x10]
   1bf1c:	bl	1ec94 <mpfr_vasnprintf_aux@@Base+0x3fe0>
   1bf20:	b	1bfe8 <mpfr_vasnprintf_aux@@Base+0x1334>
   1bf24:	ldurh	w8, [x29, #-212]
   1bf28:	ldurb	w9, [x29, #-210]
   1bf2c:	ldr	w10, [x19, #224]
   1bf30:	ldrh	w11, [x19, #228]
   1bf34:	sturh	w8, [x29, #-52]
   1bf38:	ldr	x8, [x19, #24]
   1bf3c:	sturb	w9, [x29, #-50]
   1bf40:	str	w10, [x19, #232]
   1bf44:	strh	w11, [x19, #236]
   1bf48:	ldr	w8, [x8, #8]
   1bf4c:	tbnz	w8, #31, 1bff4 <mpfr_vasnprintf_aux@@Base+0x1340>
   1bf50:	ldr	w9, [x19, #76]
   1bf54:	mov	w8, #0xa                   	// #10
   1bf58:	mov	w26, #0x1                   	// #1
   1bf5c:	tst	w9, w8
   1bf60:	b.eq	1c000 <mpfr_vasnprintf_aux@@Base+0x134c>  // b.none
   1bf64:	ldr	w8, [x19, #76]
   1bf68:	mov	w9, #0x20                  	// #32
   1bf6c:	tst	w8, #0x8
   1bf70:	mov	w8, #0x2b                  	// #43
   1bf74:	csel	w8, w9, w8, eq  // eq = none
   1bf78:	b	1bffc <mpfr_vasnprintf_aux@@Base+0x1348>
   1bf7c:	ldr	w10, [x19, #76]
   1bf80:	ldurb	w8, [x29, #-210]
   1bf84:	ldurh	w9, [x29, #-212]
   1bf88:	ldr	w21, [x19, #40]
   1bf8c:	sturb	w10, [x29, #-48]
   1bf90:	ldr	x10, [x19, #128]
   1bf94:	ldr	x1, [x19, #24]
   1bf98:	sub	x0, x29, #0xd0
   1bf9c:	sub	x2, x29, #0x30
   1bfa0:	strb	w8, [x10, #2]
   1bfa4:	strh	w9, [x10]
   1bfa8:	ldr	x10, [x19, #160]
   1bfac:	ldr	w8, [x19, #224]
   1bfb0:	ldrh	w9, [x19, #228]
   1bfb4:	mov	x3, xzr
   1bfb8:	stur	x10, [x29, #-32]
   1bfbc:	mov	w10, #0xf                   	// #15
   1bfc0:	stur	w10, [x29, #-24]
   1bfc4:	ldr	w10, [x19, #32]
   1bfc8:	stp	w21, w27, [x29, #-44]
   1bfcc:	sturb	w22, [x29, #-16]
   1bfd0:	sturb	w24, [x29, #-15]
   1bfd4:	stur	w10, [x29, #-20]
   1bfd8:	ldr	x10, [x19, #96]
   1bfdc:	strh	w9, [x10, #4]
   1bfe0:	str	w8, [x10]
   1bfe4:	bl	1f2ec <mpfr_vasnprintf_aux@@Base+0x4638>
   1bfe8:	cmn	w0, #0x1
   1bfec:	b.ne	1c7e0 <mpfr_vasnprintf_aux@@Base+0x1b2c>  // b.any
   1bff0:	b	1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1bff4:	mov	w26, #0x1                   	// #1
   1bff8:	mov	w8, #0x2d                  	// #45
   1bffc:	sturb	w8, [x29, #-192]
   1c000:	orr	w8, w22, #0x20
   1c004:	cmp	w8, #0x61
   1c008:	b.ne	1c064 <mpfr_vasnprintf_aux@@Base+0x13b0>  // b.any
   1c00c:	mov	w8, #0x2                   	// #2
   1c010:	mov	w0, #0x3                   	// #3
   1c014:	stur	x8, [x29, #-176]
   1c018:	bl	ccd0 <mpfr_allocate_func@plt>
   1c01c:	mov	w8, #0x30                  	// #48
   1c020:	strb	w8, [x0]
   1c024:	cmp	w22, #0x41
   1c028:	mov	w8, #0x78                  	// #120
   1c02c:	mov	w9, #0x58                  	// #88
   1c030:	csel	w8, w9, w8, eq  // eq = none
   1c034:	strb	w8, [x0, #1]
   1c038:	strb	wzr, [x0, #2]
   1c03c:	ldur	x8, [x29, #-88]
   1c040:	mov	x21, x0
   1c044:	mov	x25, x8
   1c048:	ldr	x8, [x8, #8]
   1c04c:	cbnz	x8, 1c044 <mpfr_vasnprintf_aux@@Base+0x1390>
   1c050:	mov	w0, #0x10                  	// #16
   1c054:	bl	ccd0 <mpfr_allocate_func@plt>
   1c058:	str	x0, [x25, #8]
   1c05c:	stp	x21, xzr, [x0]
   1c060:	stur	x21, [x29, #-184]
   1c064:	cmp	w22, #0x62
   1c068:	stur	x26, [x29, #-152]
   1c06c:	cbz	w27, 1c148 <mpfr_vasnprintf_aux@@Base+0x1494>
   1c070:	ldr	w10, [x19, #76]
   1c074:	ldurb	w9, [x29, #-50]
   1c078:	ldr	x12, [x19, #128]
   1c07c:	sxtw	x8, w27
   1c080:	sturb	w10, [x29, #-48]
   1c084:	ldurh	w10, [x29, #-52]
   1c088:	strb	w9, [x12, #2]
   1c08c:	ldr	w11, [x19, #232]
   1c090:	ldrh	w9, [x19, #236]
   1c094:	strh	w10, [x12]
   1c098:	mov	w10, #0x2                   	// #2
   1c09c:	mov	w12, #0x10                  	// #16
   1c0a0:	csel	w1, w10, w12, eq  // eq = none
   1c0a4:	cmp	w27, #0x0
   1c0a8:	csinc	x2, xzr, x8, lt  // lt = tstop
   1c0ac:	ldr	w8, [x19, #40]
   1c0b0:	ldr	x3, [x19, #24]
   1c0b4:	sub	x0, x29, #0x48
   1c0b8:	sub	x4, x29, #0x30
   1c0bc:	stp	w8, w27, [x29, #-44]
   1c0c0:	ldr	x8, [x19, #160]
   1c0c4:	sturb	w22, [x29, #-16]
   1c0c8:	sturb	w24, [x29, #-15]
   1c0cc:	stur	x8, [x29, #-32]
   1c0d0:	mov	w8, #0xf                   	// #15
   1c0d4:	stur	w8, [x29, #-24]
   1c0d8:	ldr	w8, [x19, #32]
   1c0dc:	stur	w8, [x29, #-20]
   1c0e0:	ldr	x8, [x19, #96]
   1c0e4:	strh	w9, [x8, #4]
   1c0e8:	str	w11, [x8]
   1c0ec:	bl	1f5a4 <mpfr_vasnprintf_aux@@Base+0x48f0>
   1c0f0:	ldur	x8, [x29, #-88]
   1c0f4:	mov	x21, x0
   1c0f8:	mov	x24, x8
   1c0fc:	ldr	x8, [x8, #8]
   1c100:	cbnz	x8, 1c0f8 <mpfr_vasnprintf_aux@@Base+0x1444>
   1c104:	mov	w0, #0x10                  	// #16
   1c108:	bl	ccd0 <mpfr_allocate_func@plt>
   1c10c:	str	x0, [x24, #8]
   1c110:	stp	x21, xzr, [x0]
   1c114:	ldr	x8, [x19, #24]
   1c118:	ldr	w9, [x8, #8]
   1c11c:	ldur	x8, [x29, #-72]
   1c120:	cmp	w9, #0x0
   1c124:	cinc	x21, x21, lt  // lt = tstop
   1c128:	cmp	w22, #0x62
   1c12c:	stur	x21, [x29, #-160]
   1c130:	b.ne	1c29c <mpfr_vasnprintf_aux@@Base+0x15e8>  // b.any
   1c134:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   1c138:	cmp	x8, x9
   1c13c:	b.eq	1d18c <mpfr_vasnprintf_aux@@Base+0x24d8>  // b.none
   1c140:	sub	x8, x8, #0x1
   1c144:	b	1c600 <mpfr_vasnprintf_aux@@Base+0x194c>
   1c148:	ldr	w12, [x19, #32]
   1c14c:	mov	w8, #0x4                   	// #4
   1c150:	csinc	x8, x8, xzr, ne  // ne = any
   1c154:	cmp	w12, #0x1
   1c158:	b.eq	1c3c8 <mpfr_vasnprintf_aux@@Base+0x1714>  // b.none
   1c15c:	mov	w10, w12
   1c160:	cmp	w12, #0x2
   1c164:	b.eq	1c374 <mpfr_vasnprintf_aux@@Base+0x16c0>  // b.none
   1c168:	mov	w12, w10
   1c16c:	cmp	w10, #0x3
   1c170:	b.ne	1c384 <mpfr_vasnprintf_aux@@Base+0x16d0>  // b.any
   1c174:	ldr	x9, [x19, #24]
   1c178:	ldr	w9, [x9, #8]
   1c17c:	cmp	w9, #0x0
   1c180:	b.gt	1c3c8 <mpfr_vasnprintf_aux@@Base+0x1714>
   1c184:	b	1c384 <mpfr_vasnprintf_aux@@Base+0x16d0>
   1c188:	ldr	x9, [x19, #24]
   1c18c:	cmp	w27, #0x0
   1c190:	csinc	w10, w27, wzr, ne  // ne = any
   1c194:	mov	w11, #0x6                   	// #6
   1c198:	ldr	x9, [x9]
   1c19c:	csel	w25, w11, w10, lt  // lt = tstop
   1c1a0:	cmp	x8, #0x1
   1c1a4:	sub	x9, x9, x8
   1c1a8:	b.lt	1c1c8 <mpfr_vasnprintf_aux@@Base+0x1514>  // b.tstop
   1c1ac:	mov	x10, #0x5555555555555555    	// #6148914691236517205
   1c1b0:	add	x8, x8, #0x2
   1c1b4:	movk	x10, #0x5556
   1c1b8:	smulh	x8, x8, x10
   1c1bc:	add	x8, x8, x8, lsr #63
   1c1c0:	bic	x9, x9, x9, asr #63
   1c1c4:	add	x9, x9, x8
   1c1c8:	ldr	x4, [x19, #24]
   1c1cc:	ldr	w5, [x19, #32]
   1c1d0:	sxtw	x26, w25
   1c1d4:	cmp	x9, x26
   1c1d8:	csel	x3, x9, x26, lt  // lt = tstop
   1c1dc:	sub	x1, x29, #0x48
   1c1e0:	mov	w2, #0xa                   	// #10
   1c1e4:	mov	x0, xzr
   1c1e8:	bl	c4f0 <mpfr_get_str@plt>
   1c1ec:	ldur	x8, [x29, #-88]
   1c1f0:	mov	x21, x0
   1c1f4:	stur	x0, [x29, #-64]
   1c1f8:	mov	x27, x8
   1c1fc:	ldr	x8, [x8, #8]
   1c200:	cbnz	x8, 1c1f8 <mpfr_vasnprintf_aux@@Base+0x1544>
   1c204:	mov	w0, #0x10                  	// #16
   1c208:	bl	ccd0 <mpfr_allocate_func@plt>
   1c20c:	str	x0, [x27, #8]
   1c210:	stp	x21, xzr, [x0]
   1c214:	ldur	x8, [x29, #-72]
   1c218:	cmp	x8, x26
   1c21c:	b.gt	1c2b0 <mpfr_vasnprintf_aux@@Base+0x15fc>
   1c220:	cmn	x8, #0x3
   1c224:	b.lt	1c2b0 <mpfr_vasnprintf_aux@@Base+0x15fc>  // b.tstop
   1c228:	ldr	w11, [x19, #76]
   1c22c:	ldurb	w9, [x29, #-210]
   1c230:	ldurh	w10, [x29, #-212]
   1c234:	sub	w8, w25, w8
   1c238:	sturb	w11, [x29, #-48]
   1c23c:	ldr	x11, [x19, #128]
   1c240:	ldr	x1, [x19, #24]
   1c244:	sub	x0, x29, #0xd0
   1c248:	sub	x2, x29, #0x30
   1c24c:	strb	w9, [x11, #2]
   1c250:	strh	w10, [x11]
   1c254:	ldr	w11, [x19, #40]
   1c258:	ldr	w9, [x19, #224]
   1c25c:	ldrh	w10, [x19, #228]
   1c260:	sub	x3, x29, #0x48
   1c264:	stp	w11, w8, [x29, #-44]
   1c268:	ldr	x8, [x19, #160]
   1c26c:	sturb	w22, [x29, #-16]
   1c270:	sturb	w24, [x29, #-15]
   1c274:	stur	x8, [x29, #-32]
   1c278:	mov	w8, #0xf                   	// #15
   1c27c:	stur	w8, [x29, #-24]
   1c280:	ldr	w8, [x19, #32]
   1c284:	stur	w8, [x29, #-20]
   1c288:	ldr	x8, [x19, #96]
   1c28c:	strh	w10, [x8, #4]
   1c290:	str	w9, [x8]
   1c294:	bl	1ec94 <mpfr_vasnprintf_aux@@Base+0x3fe0>
   1c298:	b	1c320 <mpfr_vasnprintf_aux@@Base+0x166c>
   1c29c:	mov	x9, #0xe000000000000001    	// #-2305843009213693951
   1c2a0:	cmp	x8, x9
   1c2a4:	b.le	1d1ac <mpfr_vasnprintf_aux@@Base+0x24f8>
   1c2a8:	lsl	x8, x8, #2
   1c2ac:	b	1c5fc <mpfr_vasnprintf_aux@@Base+0x1948>
   1c2b0:	ldr	w11, [x19, #76]
   1c2b4:	ldurb	w8, [x29, #-210]
   1c2b8:	ldurh	w10, [x29, #-212]
   1c2bc:	sub	w9, w25, #0x1
   1c2c0:	sturb	w11, [x29, #-48]
   1c2c4:	ldr	x11, [x19, #128]
   1c2c8:	ldr	x1, [x19, #24]
   1c2cc:	sub	x0, x29, #0xd0
   1c2d0:	sub	x2, x29, #0x30
   1c2d4:	strb	w8, [x11, #2]
   1c2d8:	strh	w10, [x11]
   1c2dc:	ldr	w11, [x19, #40]
   1c2e0:	ldr	w8, [x19, #224]
   1c2e4:	ldrh	w10, [x19, #228]
   1c2e8:	sub	x3, x29, #0x48
   1c2ec:	stp	w11, w9, [x29, #-44]
   1c2f0:	ldr	x9, [x19, #160]
   1c2f4:	sturb	w22, [x29, #-16]
   1c2f8:	sturb	w24, [x29, #-15]
   1c2fc:	stur	x9, [x29, #-32]
   1c300:	mov	w9, #0xf                   	// #15
   1c304:	stur	w9, [x29, #-24]
   1c308:	ldr	w9, [x19, #32]
   1c30c:	stur	w9, [x29, #-20]
   1c310:	ldr	x9, [x19, #96]
   1c314:	strh	w10, [x9, #4]
   1c318:	str	w8, [x9]
   1c31c:	bl	1f2ec <mpfr_vasnprintf_aux@@Base+0x4638>
   1c320:	cmn	w0, #0x1
   1c324:	b.eq	1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>  // b.none
   1c328:	ldr	w21, [x19, #40]
   1c32c:	b	1c7e0 <mpfr_vasnprintf_aux@@Base+0x1b2c>
   1c330:	ldr	x8, [x4]
   1c334:	mov	w25, #0x1                   	// #1
   1c338:	add	x8, x8, #0x8
   1c33c:	str	x8, [x4]
   1c340:	ldr	x24, [x19, #56]
   1c344:	mov	x8, x13
   1c348:	mov	w14, #0x2f                  	// #47
   1c34c:	mov	w15, #0xcccd                	// #52429
   1c350:	movk	w14, #0x8000, lsl #16
   1c354:	movk	w15, #0xccc, lsl #16
   1c358:	mov	w16, #0x7fffffff            	// #2147483647
   1c35c:	mov	w17, #0x80000001            	// #-2147483647
   1c360:	mov	x13, x3
   1c364:	mov	x3, x8
   1c368:	mov	w5, #0x1                   	// #1
   1c36c:	mov	w6, #0x8301                	// #33537
   1c370:	b	1df24 <mpfr_vasnprintf_aux@@Base+0x3270>
   1c374:	ldr	x9, [x19, #24]
   1c378:	mov	w12, w10
   1c37c:	ldr	w9, [x9, #8]
   1c380:	tbnz	w9, #31, 1c3c8 <mpfr_vasnprintf_aux@@Base+0x1714>
   1c384:	ldr	x9, [x19, #24]
   1c388:	ldr	x9, [x9]
   1c38c:	cmp	x9, x8
   1c390:	b.le	1c3c8 <mpfr_vasnprintf_aux@@Base+0x1714>
   1c394:	ldr	x10, [x19, #24]
   1c398:	sub	x11, x9, #0x1
   1c39c:	add	x9, x9, #0x3e
   1c3a0:	cmp	x11, #0x0
   1c3a4:	ldr	x10, [x10, #24]
   1c3a8:	csel	x9, x9, x11, lt  // lt = tstop
   1c3ac:	asr	x9, x9, #6
   1c3b0:	mov	x11, #0xffffffffffffffff    	// #-1
   1c3b4:	ldr	x9, [x10, x9, lsl #3]
   1c3b8:	neg	x10, x8
   1c3bc:	lsl	x10, x11, x10
   1c3c0:	bics	xzr, x10, x9
   1c3c4:	b.eq	1cadc <mpfr_vasnprintf_aux@@Base+0x1e28>  // b.none
   1c3c8:	cmp	w22, #0x62
   1c3cc:	b.ne	1c418 <mpfr_vasnprintf_aux@@Base+0x1764>  // b.any
   1c3d0:	mov	w0, #0x2                   	// #2
   1c3d4:	bl	ccd0 <mpfr_allocate_func@plt>
   1c3d8:	mov	w8, #0x31                  	// #49
   1c3dc:	strh	w8, [x0]
   1c3e0:	ldur	x8, [x29, #-88]
   1c3e4:	mov	x21, x0
   1c3e8:	mov	x24, x8
   1c3ec:	ldr	x8, [x8, #8]
   1c3f0:	cbnz	x8, 1c3e8 <mpfr_vasnprintf_aux@@Base+0x1734>
   1c3f4:	mov	w0, #0x10                  	// #16
   1c3f8:	bl	ccd0 <mpfr_allocate_func@plt>
   1c3fc:	str	x0, [x24, #8]
   1c400:	stp	x21, xzr, [x0]
   1c404:	ldr	x8, [x19, #24]
   1c408:	stur	x21, [x29, #-160]
   1c40c:	ldr	x8, [x8, #16]
   1c410:	sub	x8, x8, #0x1
   1c414:	b	1c600 <mpfr_vasnprintf_aux@@Base+0x194c>
   1c418:	ldr	x9, [x19, #24]
   1c41c:	ldr	x8, [x9]
   1c420:	ldr	x9, [x9, #24]
   1c424:	sub	x10, x8, #0x1
   1c428:	add	x8, x8, #0x3e
   1c42c:	cmp	x10, #0x0
   1c430:	csel	x8, x8, x10, lt  // lt = tstop
   1c434:	asr	x8, x8, #6
   1c438:	ldr	x8, [x9, x8, lsl #3]
   1c43c:	cmp	w12, #0x4
   1c440:	lsr	x24, x8, #60
   1c444:	b.eq	1c5ac <mpfr_vasnprintf_aux@@Base+0x18f8>  // b.none
   1c448:	cmp	w12, #0x3
   1c44c:	b.eq	1c594 <mpfr_vasnprintf_aux@@Base+0x18e0>  // b.none
   1c450:	cmp	w12, #0x2
   1c454:	b.ne	1c5a4 <mpfr_vasnprintf_aux@@Base+0x18f0>  // b.any
   1c458:	ldr	x8, [x19, #24]
   1c45c:	ldr	w8, [x8, #8]
   1c460:	cmp	w8, #0x0
   1c464:	b.gt	1c5ac <mpfr_vasnprintf_aux@@Base+0x18f8>
   1c468:	b	1c5b0 <mpfr_vasnprintf_aux@@Base+0x18fc>
   1c46c:	ldr	w8, [x4, #28]
   1c470:	tbz	w8, #31, 1c498 <mpfr_vasnprintf_aux@@Base+0x17e4>
   1c474:	add	w9, w8, #0x10
   1c478:	cmn	w8, #0xf
   1c47c:	str	w9, [x11, #28]
   1c480:	b.ge	1c498 <mpfr_vasnprintf_aux@@Base+0x17e4>  // b.tcont
   1c484:	mov	w25, #0x1                   	// #1
   1c488:	ldr	x24, [x19, #56]
   1c48c:	mov	x2, x10
   1c490:	mov	x4, x11
   1c494:	b	1c4b4 <mpfr_vasnprintf_aux@@Base+0x1800>
   1c498:	ldr	x8, [x11]
   1c49c:	mov	x4, x11
   1c4a0:	mov	w25, #0x1                   	// #1
   1c4a4:	mov	x2, x10
   1c4a8:	add	x8, x8, #0x8
   1c4ac:	str	x8, [x11]
   1c4b0:	ldr	x24, [x19, #56]
   1c4b4:	mov	w14, #0x2f                  	// #47
   1c4b8:	mov	w15, #0xcccd                	// #52429
   1c4bc:	mov	x3, x12
   1c4c0:	movk	w14, #0x8000, lsl #16
   1c4c4:	movk	w15, #0xccc, lsl #16
   1c4c8:	mov	w16, #0x7fffffff            	// #2147483647
   1c4cc:	mov	w17, #0x80000001            	// #-2147483647
   1c4d0:	mov	x18, x0
   1c4d4:	mov	x13, x1
   1c4d8:	mov	w5, #0x1                   	// #1
   1c4dc:	mov	w6, #0x8301                	// #33537
   1c4e0:	mov	x7, x22
   1c4e4:	mov	x30, x26
   1c4e8:	mov	x23, x27
   1c4ec:	b	1ce1c <mpfr_vasnprintf_aux@@Base+0x2168>
   1c4f0:	str	xzr, [x19, #208]
   1c4f4:	ldr	x24, [x19, #56]
   1c4f8:	mov	w14, #0x2f                  	// #47
   1c4fc:	mov	w15, #0xcccd                	// #52429
   1c500:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1c504:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1c508:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1c50c:	mov	x2, x25
   1c510:	mov	x4, x26
   1c514:	movk	w14, #0x8000, lsl #16
   1c518:	movk	w15, #0xccc, lsl #16
   1c51c:	mov	w16, #0x7fffffff            	// #2147483647
   1c520:	mov	w17, #0x80000001            	// #-2147483647
   1c524:	mov	x18, x23
   1c528:	add	x13, x13, #0x86f
   1c52c:	mov	w5, #0x1                   	// #1
   1c530:	mov	w6, #0x8301                	// #33537
   1c534:	add	x7, x7, #0x9d0
   1c538:	add	x30, x30, #0x9b8
   1c53c:	mov	x23, x22
   1c540:	b	1b7b8 <mpfr_vasnprintf_aux@@Base+0xb04>
   1c544:	cmp	x21, x27
   1c548:	b.eq	1cc90 <mpfr_vasnprintf_aux@@Base+0x1fdc>  // b.none
   1c54c:	cmn	x23, #0x1
   1c550:	b.eq	1cc90 <mpfr_vasnprintf_aux@@Base+0x1fdc>  // b.none
   1c554:	mov	x9, x23
   1c558:	adds	x9, x26, x23
   1c55c:	cset	w8, cs  // cs = hs, nlast
   1c560:	orr	x8, x8, x9, lsr #63
   1c564:	cbz	x8, 1cc2c <mpfr_vasnprintf_aux@@Base+0x1f78>
   1c568:	mov	x23, #0xffffffffffffffff    	// #-1
   1c56c:	b	1cc90 <mpfr_vasnprintf_aux@@Base+0x1fdc>
   1c570:	str	xzr, [x19, #208]
   1c574:	ldr	x4, [x19, #16]
   1c578:	ldr	x23, [x19, #104]
   1c57c:	b	1bda8 <mpfr_vasnprintf_aux@@Base+0x10f4>
   1c580:	cmp	x8, #0xb
   1c584:	b.eq	1baf8 <mpfr_vasnprintf_aux@@Base+0xe44>  // b.none
   1c588:	cmp	x8, #0x1b
   1c58c:	b.eq	1baf8 <mpfr_vasnprintf_aux@@Base+0xe44>  // b.none
   1c590:	b	1c340 <mpfr_vasnprintf_aux@@Base+0x168c>
   1c594:	ldr	x8, [x19, #24]
   1c598:	ldr	w8, [x8, #8]
   1c59c:	tbz	w8, #31, 1c5b0 <mpfr_vasnprintf_aux@@Base+0x18fc>
   1c5a0:	b	1c5ac <mpfr_vasnprintf_aux@@Base+0x18f8>
   1c5a4:	cbnz	w12, 1c5b0 <mpfr_vasnprintf_aux@@Base+0x18fc>
   1c5a8:	tbz	x8, #59, 1c5b0 <mpfr_vasnprintf_aux@@Base+0x18fc>
   1c5ac:	add	x24, x24, #0x1
   1c5b0:	mov	w0, #0x2                   	// #2
   1c5b4:	bl	ccd0 <mpfr_allocate_func@plt>
   1c5b8:	adrp	x8, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1c5bc:	add	x8, x8, #0xa60
   1c5c0:	ldrb	w8, [x8, x24]
   1c5c4:	strb	wzr, [x0, #1]
   1c5c8:	mov	x21, x0
   1c5cc:	strb	w8, [x0]
   1c5d0:	ldur	x8, [x29, #-88]
   1c5d4:	mov	x24, x8
   1c5d8:	ldr	x8, [x8, #8]
   1c5dc:	cbnz	x8, 1c5d4 <mpfr_vasnprintf_aux@@Base+0x1920>
   1c5e0:	mov	w0, #0x10                  	// #16
   1c5e4:	bl	ccd0 <mpfr_allocate_func@plt>
   1c5e8:	str	x0, [x24, #8]
   1c5ec:	stp	x21, xzr, [x0]
   1c5f0:	ldr	x8, [x19, #24]
   1c5f4:	stur	x21, [x29, #-160]
   1c5f8:	ldr	x8, [x8, #16]
   1c5fc:	sub	x8, x8, #0x4
   1c600:	ldr	x24, [x19, #48]
   1c604:	adrp	x12, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1c608:	cmp	w22, #0x41
   1c60c:	add	x12, x12, #0x8c4
   1c610:	stur	x8, [x29, #-72]
   1c614:	b.ne	1c678 <mpfr_vasnprintf_aux@@Base+0x19c4>  // b.any
   1c618:	mov	x8, x21
   1c61c:	b	1c62c <mpfr_vasnprintf_aux@@Base+0x1978>
   1c620:	mov	w9, #0x45                  	// #69
   1c624:	strb	w9, [x8]
   1c628:	add	x8, x8, #0x1
   1c62c:	ldrb	w10, [x8]
   1c630:	sub	w9, w10, #0x61
   1c634:	cmp	w9, #0x5
   1c638:	b.hi	1c658 <mpfr_vasnprintf_aux@@Base+0x19a4>  // b.pmore
   1c63c:	adr	x10, 1c620 <mpfr_vasnprintf_aux@@Base+0x196c>
   1c640:	ldrb	w11, [x12, x9]
   1c644:	add	x10, x10, x11, lsl #2
   1c648:	mov	w9, #0x41                  	// #65
   1c64c:	br	x10
   1c650:	mov	w9, #0x42                  	// #66
   1c654:	b	1c624 <mpfr_vasnprintf_aux@@Base+0x1970>
   1c658:	cbnz	w10, 1c628 <mpfr_vasnprintf_aux@@Base+0x1974>
   1c65c:	b	1c678 <mpfr_vasnprintf_aux@@Base+0x19c4>
   1c660:	mov	w9, #0x43                  	// #67
   1c664:	b	1c624 <mpfr_vasnprintf_aux@@Base+0x1970>
   1c668:	mov	w9, #0x44                  	// #68
   1c66c:	b	1c624 <mpfr_vasnprintf_aux@@Base+0x1970>
   1c670:	mov	w9, #0x46                  	// #70
   1c674:	b	1c624 <mpfr_vasnprintf_aux@@Base+0x1970>
   1c678:	cbnz	w24, 1c698 <mpfr_vasnprintf_aux@@Base+0x19e4>
   1c67c:	cmp	w22, #0x62
   1c680:	b.eq	1c698 <mpfr_vasnprintf_aux@@Base+0x19e4>  // b.none
   1c684:	ldr	w8, [x19, #76]
   1c688:	tbnz	w8, #0, 1c6e8 <mpfr_vasnprintf_aux@@Base+0x1a34>
   1c68c:	ldur	x8, [x29, #-120]
   1c690:	cbz	x8, 1c710 <mpfr_vasnprintf_aux@@Base+0x1a5c>
   1c694:	b	1c6e8 <mpfr_vasnprintf_aux@@Base+0x1a34>
   1c698:	add	x25, x21, #0x1
   1c69c:	mov	x0, x25
   1c6a0:	bl	bb10 <strlen@plt>
   1c6a4:	tbz	w24, #31, 1c6c4 <mpfr_vasnprintf_aux@@Base+0x1a10>
   1c6a8:	subs	x8, x0, #0x1
   1c6ac:	b.cc	1c6c0 <mpfr_vasnprintf_aux@@Base+0x1a0c>  // b.lo, b.ul, b.last
   1c6b0:	ldrb	w9, [x21, x0]
   1c6b4:	mov	x0, x8
   1c6b8:	cmp	w9, #0x30
   1c6bc:	b.eq	1c6a8 <mpfr_vasnprintf_aux@@Base+0x19f4>  // b.none
   1c6c0:	add	x0, x8, #0x1
   1c6c4:	lsr	x8, x0, #31
   1c6c8:	cbnz	x8, 1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1c6cc:	ldr	x8, [x19, #48]
   1c6d0:	cbz	x0, 1c684 <mpfr_vasnprintf_aux@@Base+0x19d0>
   1c6d4:	subs	w8, w8, w0
   1c6d8:	stp	x25, x0, [x29, #-128]
   1c6dc:	b.le	1c6e8 <mpfr_vasnprintf_aux@@Base+0x1a34>
   1c6e0:	stur	w8, [x29, #-112]
   1c6e4:	b	1c684 <mpfr_vasnprintf_aux@@Base+0x19d0>
   1c6e8:	bl	bef0 <localeconv@plt>
   1c6ec:	ldr	x8, [x0]
   1c6f0:	ldrb	w8, [x8, #1]
   1c6f4:	cbz	w8, 1c700 <mpfr_vasnprintf_aux@@Base+0x1a4c>
   1c6f8:	mov	w8, #0x2e                  	// #46
   1c6fc:	b	1c70c <mpfr_vasnprintf_aux@@Base+0x1a58>
   1c700:	bl	bef0 <localeconv@plt>
   1c704:	ldr	x8, [x0]
   1c708:	ldrb	w8, [x8]
   1c70c:	sturb	w8, [x29, #-140]
   1c710:	ldur	x8, [x29, #-72]
   1c714:	mov	w9, #0x3                   	// #3
   1c718:	stur	x9, [x29, #-96]
   1c71c:	cmp	x8, #0x0
   1c720:	cneg	x8, x8, mi  // mi = first
   1c724:	cmp	x8, #0xa
   1c728:	b.cc	1c758 <mpfr_vasnprintf_aux@@Base+0x1aa4>  // b.lo, b.ul, b.last
   1c72c:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   1c730:	mov	w9, #0x3                   	// #3
   1c734:	movk	x11, #0xcccd
   1c738:	umulh	x10, x8, x11
   1c73c:	cmp	x8, #0x63
   1c740:	lsr	x8, x10, #3
   1c744:	add	x9, x9, #0x1
   1c748:	b.hi	1c738 <mpfr_vasnprintf_aux@@Base+0x1a84>  // b.pmore
   1c74c:	add	x0, x9, #0x1
   1c750:	stur	x9, [x29, #-96]
   1c754:	b	1c75c <mpfr_vasnprintf_aux@@Base+0x1aa8>
   1c758:	mov	w0, #0x4                   	// #4
   1c75c:	bl	ccd0 <mpfr_allocate_func@plt>
   1c760:	ldur	x8, [x29, #-88]
   1c764:	mov	x21, x0
   1c768:	mov	x24, x8
   1c76c:	ldr	x8, [x8, #8]
   1c770:	cbnz	x8, 1c768 <mpfr_vasnprintf_aux@@Base+0x1ab4>
   1c774:	mov	w0, #0x10                  	// #16
   1c778:	bl	ccd0 <mpfr_allocate_func@plt>
   1c77c:	cmp	w22, #0x41
   1c780:	mov	w8, #0x70                  	// #112
   1c784:	mov	w9, #0x50                  	// #80
   1c788:	str	x0, [x24, #8]
   1c78c:	stp	x21, xzr, [x0]
   1c790:	csel	w8, w9, w8, eq  // eq = none
   1c794:	sub	x0, x29, #0x30
   1c798:	stur	x21, [x29, #-104]
   1c79c:	sturb	w8, [x29, #-48]
   1c7a0:	sturb	wzr, [x29, #-47]
   1c7a4:	bl	bb10 <strlen@plt>
   1c7a8:	ldur	x2, [x29, #-72]
   1c7ac:	sub	x8, x29, #0x30
   1c7b0:	mov	w9, #0x2b25                	// #11045
   1c7b4:	add	x8, x8, x0
   1c7b8:	movk	w9, #0x312e, lsl #16
   1c7bc:	str	w9, [x8]
   1c7c0:	mov	w9, #0x6c31                	// #27697
   1c7c4:	movk	w9, #0x64, lsl #16
   1c7c8:	sub	x1, x29, #0x30
   1c7cc:	mov	x0, x21
   1c7d0:	stur	w9, [x8, #3]
   1c7d4:	bl	bd60 <sprintf@plt>
   1c7d8:	ldr	w21, [x19, #40]
   1c7dc:	tbnz	w0, #31, 1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1c7e0:	ldur	x8, [x29, #-176]
   1c7e4:	tbnz	x8, #63, 1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1c7e8:	ldur	x9, [x29, #-152]
   1c7ec:	tbnz	x9, #63, 1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1c7f0:	ldurb	w22, [x29, #-192]
   1c7f4:	ldursw	x10, [x29, #-144]
   1c7f8:	ldurb	w11, [x29, #-168]
   1c7fc:	add	w8, w9, w8
   1c800:	cmp	w22, #0x0
   1c804:	cinc	w8, w8, ne  // ne = any
   1c808:	add	w8, w10, w8
   1c80c:	cbz	w11, 1c82c <mpfr_vasnprintf_aux@@Base+0x1b78>
   1c810:	add	x9, x9, x10
   1c814:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1c818:	sub	x9, x9, #0x1
   1c81c:	movk	x10, #0xaaab
   1c820:	umulh	x9, x9, x10
   1c824:	lsr	x9, x9, #1
   1c828:	add	w8, w8, w9
   1c82c:	ldur	x9, [x29, #-120]
   1c830:	tbnz	x9, #63, 1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1c834:	ldur	x10, [x29, #-96]
   1c838:	tbnz	x10, #63, 1c8d8 <mpfr_vasnprintf_aux@@Base+0x1c24>
   1c83c:	ldurb	w11, [x29, #-140]
   1c840:	ldur	w12, [x29, #-136]
   1c844:	ldur	w13, [x29, #-112]
   1c848:	add	w8, w8, w9
   1c84c:	add	w8, w8, w10
   1c850:	cmp	w11, #0x0
   1c854:	add	w8, w8, w12
   1c858:	cinc	w8, w8, ne  // ne = any
   1c85c:	add	w8, w8, w13
   1c860:	subs	w9, w21, w8
   1c864:	b.ls	1c870 <mpfr_vasnprintf_aux@@Base+0x1bbc>  // b.plast
   1c868:	mov	w8, w21
   1c86c:	stur	x9, [x29, #-200]
   1c870:	ldr	x9, [x19, #160]
   1c874:	cbz	x9, 1c924 <mpfr_vasnprintf_aux@@Base+0x1c70>
   1c878:	ldur	w8, [x29, #-208]
   1c87c:	cbz	w8, 1c97c <mpfr_vasnprintf_aux@@Base+0x1cc8>
   1c880:	cbz	w22, 1c94c <mpfr_vasnprintf_aux@@Base+0x1c98>
   1c884:	adds	x23, x23, #0x1
   1c888:	b.eq	1c948 <mpfr_vasnprintf_aux@@Base+0x1c94>  // b.none
   1c88c:	b.mi	1c948 <mpfr_vasnprintf_aux@@Base+0x1c94>  // b.first
   1c890:	ldr	x8, [x19, #208]
   1c894:	cbz	x8, 1c9f8 <mpfr_vasnprintf_aux@@Base+0x1d44>
   1c898:	ldr	x8, [x19, #208]
   1c89c:	cmn	x8, #0x2
   1c8a0:	b.cs	1d25c <mpfr_vasnprintf_aux@@Base+0x25a8>  // b.hs, b.nlast
   1c8a4:	ldr	x8, [x19, #64]
   1c8a8:	ldp	x10, x9, [x19, #200]
   1c8ac:	add	x8, x8, #0x1
   1c8b0:	add	x9, x10, x9
   1c8b4:	cmp	x8, x9
   1c8b8:	b.cs	1d278 <mpfr_vasnprintf_aux@@Base+0x25c4>  // b.hs, b.nlast
   1c8bc:	ldr	x8, [x19, #64]
   1c8c0:	strb	w22, [x8]
   1c8c4:	strb	wzr, [x8, #1]!
   1c8c8:	str	x8, [x19, #64]
   1c8cc:	ldur	x21, [x29, #-184]
   1c8d0:	cbnz	x21, 1c954 <mpfr_vasnprintf_aux@@Base+0x1ca0>
   1c8d4:	b	1ca58 <mpfr_vasnprintf_aux@@Base+0x1da4>
   1c8d8:	ldur	x21, [x29, #-88]
   1c8dc:	ldr	x24, [x19, #56]
   1c8e0:	cbnz	x21, 1c914 <mpfr_vasnprintf_aux@@Base+0x1c60>
   1c8e4:	stur	xzr, [x29, #-184]
   1c8e8:	stur	xzr, [x29, #-160]
   1c8ec:	stur	xzr, [x29, #-128]
   1c8f0:	stur	xzr, [x29, #-104]
   1c8f4:	mov	x23, #0xffffffffffffffff    	// #-1
   1c8f8:	b	1ded0 <mpfr_vasnprintf_aux@@Base+0x321c>
   1c8fc:	ldr	x22, [x21, #8]
   1c900:	mov	w1, #0x10                  	// #16
   1c904:	mov	x0, x21
   1c908:	bl	cc00 <mpfr_free_func@plt>
   1c90c:	mov	x21, x22
   1c910:	cbz	x22, 1c8e4 <mpfr_vasnprintf_aux@@Base+0x1c30>
   1c914:	ldr	x0, [x21]
   1c918:	cbz	x0, 1c8fc <mpfr_vasnprintf_aux@@Base+0x1c48>
   1c91c:	bl	c880 <mpfr_free_str@plt>
   1c920:	b	1c8fc <mpfr_vasnprintf_aux@@Base+0x1c48>
   1c924:	cmn	x23, #0x1
   1c928:	b.eq	1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>  // b.none
   1c92c:	mov	w8, w8
   1c930:	adds	x8, x23, x8
   1c934:	cset	w9, cs  // cs = hs, nlast
   1c938:	orr	x9, x9, x8, lsr #63
   1c93c:	cmp	x9, #0x0
   1c940:	csinv	x23, x8, xzr, eq  // eq = none
   1c944:	b	1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>
   1c948:	mov	x23, #0xffffffffffffffff    	// #-1
   1c94c:	ldur	x21, [x29, #-184]
   1c950:	cbz	x21, 1ca58 <mpfr_vasnprintf_aux@@Base+0x1da4>
   1c954:	cmn	x23, #0x1
   1c958:	b.eq	1ca58 <mpfr_vasnprintf_aux@@Base+0x1da4>  // b.none
   1c95c:	ldur	x25, [x29, #-176]
   1c960:	mov	x9, x23
   1c964:	adds	x9, x25, x23
   1c968:	cset	w8, cs  // cs = hs, nlast
   1c96c:	orr	x8, x8, x9, lsr #63
   1c970:	cbz	x8, 1c9a8 <mpfr_vasnprintf_aux@@Base+0x1cf4>
   1c974:	mov	x23, #0xffffffffffffffff    	// #-1
   1c978:	b	1ca58 <mpfr_vasnprintf_aux@@Base+0x1da4>
   1c97c:	ldur	x21, [x29, #-200]
   1c980:	cbz	x21, 1c880 <mpfr_vasnprintf_aux@@Base+0x1bcc>
   1c984:	cmn	x23, #0x1
   1c988:	b.eq	1c880 <mpfr_vasnprintf_aux@@Base+0x1bcc>  // b.none
   1c98c:	mov	x9, x23
   1c990:	adds	x9, x21, x23
   1c994:	cset	w8, cs  // cs = hs, nlast
   1c998:	orr	x8, x8, x9, lsr #63
   1c99c:	cbz	x8, 1ca08 <mpfr_vasnprintf_aux@@Base+0x1d54>
   1c9a0:	mov	x23, #0xffffffffffffffff    	// #-1
   1c9a4:	b	1c880 <mpfr_vasnprintf_aux@@Base+0x1bcc>
   1c9a8:	ldr	x8, [x19, #208]
   1c9ac:	mov	x23, x9
   1c9b0:	cbz	x8, 1ca54 <mpfr_vasnprintf_aux@@Base+0x1da0>
   1c9b4:	ldr	x9, [x19, #208]
   1c9b8:	mvn	x8, x25
   1c9bc:	cmp	x9, x8
   1c9c0:	b.cs	1d3f0 <mpfr_vasnprintf_aux@@Base+0x273c>  // b.hs, b.nlast
   1c9c4:	ldr	x8, [x19, #64]
   1c9c8:	ldp	x10, x9, [x19, #200]
   1c9cc:	add	x8, x8, x25
   1c9d0:	add	x9, x10, x9
   1c9d4:	cmp	x8, x9
   1c9d8:	b.cs	1d40c <mpfr_vasnprintf_aux@@Base+0x2758>  // b.hs, b.nlast
   1c9dc:	ldr	x0, [x19, #64]
   1c9e0:	mov	x1, x21
   1c9e4:	mov	x2, x25
   1c9e8:	bl	c930 <strncat@plt>
   1c9ec:	add	x0, x0, x25
   1c9f0:	str	x0, [x19, #64]
   1c9f4:	b	1ca58 <mpfr_vasnprintf_aux@@Base+0x1da4>
   1c9f8:	str	xzr, [x19, #208]
   1c9fc:	ldur	x21, [x29, #-184]
   1ca00:	cbnz	x21, 1c954 <mpfr_vasnprintf_aux@@Base+0x1ca0>
   1ca04:	b	1ca58 <mpfr_vasnprintf_aux@@Base+0x1da4>
   1ca08:	ldr	x8, [x19, #208]
   1ca0c:	mov	x23, x9
   1ca10:	cbz	x8, 1cc24 <mpfr_vasnprintf_aux@@Base+0x1f70>
   1ca14:	ldr	x9, [x19, #208]
   1ca18:	mvn	x8, x21
   1ca1c:	cmp	x9, x8
   1ca20:	b.cs	1df74 <mpfr_vasnprintf_aux@@Base+0x32c0>  // b.hs, b.nlast
   1ca24:	ldr	x8, [x19, #64]
   1ca28:	ldp	x10, x9, [x19, #200]
   1ca2c:	add	x8, x8, x21
   1ca30:	add	x9, x10, x9
   1ca34:	cmp	x8, x9
   1ca38:	b.cs	1df90 <mpfr_vasnprintf_aux@@Base+0x32dc>  // b.hs, b.nlast
   1ca3c:	cmp	x21, #0x1
   1ca40:	b.ne	1dfe4 <mpfr_vasnprintf_aux@@Base+0x3330>  // b.any
   1ca44:	ldr	x8, [x19, #64]
   1ca48:	mov	w9, #0x20                  	// #32
   1ca4c:	strb	w9, [x8]
   1ca50:	b	1dff4 <mpfr_vasnprintf_aux@@Base+0x3340>
   1ca54:	str	xzr, [x19, #208]
   1ca58:	ldur	w8, [x29, #-208]
   1ca5c:	cmp	w8, #0x1
   1ca60:	b.ne	1d5d0 <mpfr_vasnprintf_aux@@Base+0x291c>  // b.any
   1ca64:	ldur	x21, [x29, #-200]
   1ca68:	cbz	x21, 1d5d0 <mpfr_vasnprintf_aux@@Base+0x291c>
   1ca6c:	cmn	x23, #0x1
   1ca70:	b.eq	1ca88 <mpfr_vasnprintf_aux@@Base+0x1dd4>  // b.none
   1ca74:	mov	x9, x23
   1ca78:	adds	x9, x21, x23
   1ca7c:	cset	w8, cs  // cs = hs, nlast
   1ca80:	orr	x8, x8, x9, lsr #63
   1ca84:	cbz	x8, 1ca90 <mpfr_vasnprintf_aux@@Base+0x1ddc>
   1ca88:	mov	x24, #0xffffffffffffffff    	// #-1
   1ca8c:	b	1d5d4 <mpfr_vasnprintf_aux@@Base+0x2920>
   1ca90:	ldr	x8, [x19, #208]
   1ca94:	mov	x23, x9
   1ca98:	cbz	x8, 1cb8c <mpfr_vasnprintf_aux@@Base+0x1ed8>
   1ca9c:	ldr	x9, [x19, #208]
   1caa0:	mvn	x8, x21
   1caa4:	cmp	x9, x8
   1caa8:	b.cs	1d540 <mpfr_vasnprintf_aux@@Base+0x288c>  // b.hs, b.nlast
   1caac:	ldr	x8, [x19, #64]
   1cab0:	ldp	x10, x9, [x19, #200]
   1cab4:	add	x8, x8, x21
   1cab8:	add	x9, x10, x9
   1cabc:	cmp	x8, x9
   1cac0:	b.cs	1d55c <mpfr_vasnprintf_aux@@Base+0x28a8>  // b.hs, b.nlast
   1cac4:	cmp	x21, #0x1
   1cac8:	b.ne	1d5b0 <mpfr_vasnprintf_aux@@Base+0x28fc>  // b.any
   1cacc:	ldr	x8, [x19, #64]
   1cad0:	mov	w9, #0x30                  	// #48
   1cad4:	strb	w9, [x8]
   1cad8:	b	1d5c0 <mpfr_vasnprintf_aux@@Base+0x290c>
   1cadc:	eor	x8, x8, #0x3f
   1cae0:	lsl	x8, x26, x8
   1cae4:	cmp	w12, #0x0
   1cae8:	csinv	x8, x8, x10, eq  // eq = none
   1caec:	tst	x9, x8
   1caf0:	b.eq	1c3c8 <mpfr_vasnprintf_aux@@Base+0x1714>  // b.none
   1caf4:	mov	w0, #0x2                   	// #2
   1caf8:	bl	ccd0 <mpfr_allocate_func@plt>
   1cafc:	mov	w8, #0x31                  	// #49
   1cb00:	strh	w8, [x0]
   1cb04:	ldur	x8, [x29, #-88]
   1cb08:	mov	x21, x0
   1cb0c:	mov	x24, x8
   1cb10:	ldr	x8, [x8, #8]
   1cb14:	cbnz	x8, 1cb0c <mpfr_vasnprintf_aux@@Base+0x1e58>
   1cb18:	mov	w0, #0x10                  	// #16
   1cb1c:	bl	ccd0 <mpfr_allocate_func@plt>
   1cb20:	str	x0, [x24, #8]
   1cb24:	stp	x21, xzr, [x0]
   1cb28:	ldr	x8, [x19, #24]
   1cb2c:	stur	x21, [x29, #-160]
   1cb30:	ldr	x8, [x8, #16]
   1cb34:	b	1c600 <mpfr_vasnprintf_aux@@Base+0x194c>
   1cb38:	ldr	x8, [x19, #208]
   1cb3c:	mov	x23, x9
   1cb40:	cbz	x8, 1cc7c <mpfr_vasnprintf_aux@@Base+0x1fc8>
   1cb44:	ldr	x9, [x19, #208]
   1cb48:	mvn	x8, x21
   1cb4c:	cmp	x9, x8
   1cb50:	b.cs	1e00c <mpfr_vasnprintf_aux@@Base+0x3358>  // b.hs, b.nlast
   1cb54:	ldr	x8, [x19, #64]
   1cb58:	ldp	x10, x9, [x19, #200]
   1cb5c:	add	x8, x8, x21
   1cb60:	add	x9, x10, x9
   1cb64:	cmp	x8, x9
   1cb68:	b.cs	1e028 <mpfr_vasnprintf_aux@@Base+0x3374>  // b.hs, b.nlast
   1cb6c:	ldr	x0, [x19, #64]
   1cb70:	mov	x1, x26
   1cb74:	mov	x2, x21
   1cb78:	bl	c930 <strncat@plt>
   1cb7c:	ldr	x26, [x19, #224]
   1cb80:	add	x0, x0, x21
   1cb84:	str	x0, [x19, #64]
   1cb88:	b	1cc80 <mpfr_vasnprintf_aux@@Base+0x1fcc>
   1cb8c:	str	xzr, [x19, #208]
   1cb90:	b	1d5d0 <mpfr_vasnprintf_aux@@Base+0x291c>
   1cb94:	str	w22, [x19, #76]
   1cb98:	mov	x22, x0
   1cb9c:	mov	w1, #0x815                 	// #2069
   1cba0:	mov	x0, x18
   1cba4:	str	x2, [x19, #112]
   1cba8:	mov	x2, x22
   1cbac:	mov	x20, x18
   1cbb0:	str	x4, [x19, #16]
   1cbb4:	bl	cb20 <mpfr_assert_fail@plt>
   1cbb8:	mov	x0, x22
   1cbbc:	ldr	w22, [x19, #76]
   1cbc0:	ldr	x3, [x19, #88]
   1cbc4:	ldr	x4, [x19, #16]
   1cbc8:	ldr	x2, [x19, #112]
   1cbcc:	adrp	x1, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cbd0:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cbd4:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cbd8:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cbdc:	mov	w15, #0xcccd                	// #52429
   1cbe0:	mov	w14, #0x2f                  	// #47
   1cbe4:	mov	w11, #0x3                   	// #3
   1cbe8:	add	x1, x1, #0x99a
   1cbec:	add	x30, x30, #0x9b8
   1cbf0:	add	x7, x7, #0x9d0
   1cbf4:	mov	w6, #0x8301                	// #33537
   1cbf8:	mov	w5, #0x1                   	// #1
   1cbfc:	add	x13, x13, #0x86f
   1cc00:	mov	x18, x20
   1cc04:	mov	w17, #0x80000001            	// #-2147483647
   1cc08:	mov	w16, #0x7fffffff            	// #2147483647
   1cc0c:	movk	w15, #0xccc, lsl #16
   1cc10:	movk	w14, #0x8000, lsl #16
   1cc14:	ldrb	w9, [x26]
   1cc18:	cmp	w9, #0x2e
   1cc1c:	b.eq	1afec <mpfr_vasnprintf_aux@@Base+0x338>  // b.none
   1cc20:	b	1afc0 <mpfr_vasnprintf_aux@@Base+0x30c>
   1cc24:	str	xzr, [x19, #208]
   1cc28:	b	1c880 <mpfr_vasnprintf_aux@@Base+0x1bcc>
   1cc2c:	ldr	x8, [x19, #208]
   1cc30:	mov	x23, x9
   1cc34:	cbz	x8, 1ce24 <mpfr_vasnprintf_aux@@Base+0x2170>
   1cc38:	ldr	x9, [x19, #208]
   1cc3c:	mvn	x8, x26
   1cc40:	cmp	x9, x8
   1cc44:	b.cs	1e1d8 <mpfr_vasnprintf_aux@@Base+0x3524>  // b.hs, b.nlast
   1cc48:	ldr	x8, [x19, #64]
   1cc4c:	ldp	x10, x9, [x19, #200]
   1cc50:	add	x8, x8, x26
   1cc54:	add	x9, x10, x9
   1cc58:	cmp	x8, x9
   1cc5c:	b.cs	1e1f4 <mpfr_vasnprintf_aux@@Base+0x3540>  // b.hs, b.nlast
   1cc60:	ldr	x0, [x19, #64]
   1cc64:	mov	x1, x21
   1cc68:	mov	x2, x26
   1cc6c:	bl	c930 <strncat@plt>
   1cc70:	add	x0, x0, x26
   1cc74:	str	x0, [x19, #64]
   1cc78:	b	1cc90 <mpfr_vasnprintf_aux@@Base+0x1fdc>
   1cc7c:	str	xzr, [x19, #208]
   1cc80:	mov	x0, x26
   1cc84:	bl	c880 <mpfr_free_str@plt>
   1cc88:	ldr	x0, [x19, #232]
   1cc8c:	cbnz	x0, 1d374 <mpfr_vasnprintf_aux@@Base+0x26c0>
   1cc90:	and	w8, w24, #0xff
   1cc94:	ldr	w10, [x19, #76]
   1cc98:	cmp	w8, #0x30
   1cc9c:	adrp	x8, 64000 <mpfr_bases@@Base+0x758>
   1cca0:	adrp	x9, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   1cca4:	add	x8, x8, #0xd3
   1cca8:	add	x9, x9, #0x582
   1ccac:	csel	x2, x9, x8, eq  // eq = none
   1ccb0:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ccb4:	tst	w10, #0x1
   1ccb8:	add	x9, x9, #0x992
   1ccbc:	csel	x3, x8, x9, eq  // eq = none
   1ccc0:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ccc4:	tst	w10, #0x8
   1ccc8:	add	x9, x9, #0x994
   1cccc:	csel	x4, x8, x9, eq  // eq = none
   1ccd0:	adrp	x9, 64000 <mpfr_bases@@Base+0x758>
   1ccd4:	tst	w10, #0x2
   1ccd8:	add	x9, x9, #0xb7
   1ccdc:	ldp	q0, q1, [x28]
   1cce0:	csel	x5, x8, x9, eq  // eq = none
   1cce4:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cce8:	tst	w10, #0x4
   1ccec:	add	x9, x9, #0x996
   1ccf0:	csel	x6, x8, x9, eq  // eq = none
   1ccf4:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ccf8:	tst	w10, #0x10
   1ccfc:	add	x9, x9, #0x998
   1cd00:	sub	x0, x29, #0x30
   1cd04:	stp	q0, q1, [x19, #240]
   1cd08:	csel	x7, x8, x9, eq  // eq = none
   1cd0c:	str	w22, [sp, #-16]!
   1cd10:	adrp	x1, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cd14:	add	x1, x1, #0x97d
   1cd18:	bl	bd60 <sprintf@plt>
   1cd1c:	add	sp, sp, #0x10
   1cd20:	ldr	w2, [x19, #40]
   1cd24:	ldr	x4, [x19, #104]
   1cd28:	sub	x0, x29, #0x48
   1cd2c:	sub	x1, x29, #0x30
   1cd30:	ldr	x3, [x19, #48]
   1cd34:	bl	c100 <__gmp_asprintf@plt>
   1cd38:	ldur	x21, [x29, #-72]
   1cd3c:	cmn	x23, #0x1
   1cd40:	b.eq	1cdbc <mpfr_vasnprintf_aux@@Base+0x2108>  // b.none
   1cd44:	sxtw	x25, w0
   1cd48:	mov	x9, x23
   1cd4c:	adds	x9, x23, x25
   1cd50:	cset	w8, cs  // cs = hs, nlast
   1cd54:	orr	x8, x8, x9, lsr #63
   1cd58:	cbz	x8, 1cd64 <mpfr_vasnprintf_aux@@Base+0x20b0>
   1cd5c:	mov	x23, #0xffffffffffffffff    	// #-1
   1cd60:	b	1cdbc <mpfr_vasnprintf_aux@@Base+0x2108>
   1cd64:	ldr	x8, [x19, #208]
   1cd68:	mov	x23, x9
   1cd6c:	cbz	x8, 1cdb8 <mpfr_vasnprintf_aux@@Base+0x2104>
   1cd70:	ldr	x9, [x19, #208]
   1cd74:	mvn	x8, x25
   1cd78:	cmp	x9, x8
   1cd7c:	b.cs	1e07c <mpfr_vasnprintf_aux@@Base+0x33c8>  // b.hs, b.nlast
   1cd80:	ldr	x8, [x19, #64]
   1cd84:	ldp	x10, x9, [x19, #200]
   1cd88:	add	x8, x8, x25
   1cd8c:	add	x9, x10, x9
   1cd90:	cmp	x8, x9
   1cd94:	b.cs	1e098 <mpfr_vasnprintf_aux@@Base+0x33e4>  // b.hs, b.nlast
   1cd98:	ldr	x0, [x19, #64]
   1cd9c:	mov	x1, x21
   1cda0:	mov	x2, x25
   1cda4:	bl	c930 <strncat@plt>
   1cda8:	ldur	x21, [x29, #-72]
   1cdac:	add	x0, x0, x25
   1cdb0:	str	x0, [x19, #64]
   1cdb4:	b	1cdbc <mpfr_vasnprintf_aux@@Base+0x2108>
   1cdb8:	str	xzr, [x19, #208]
   1cdbc:	mov	x0, x21
   1cdc0:	bl	c880 <mpfr_free_str@plt>
   1cdc4:	ldr	x24, [x19, #56]
   1cdc8:	ldr	x2, [x19, #112]
   1cdcc:	ldr	x3, [x19, #88]
   1cdd0:	mov	w14, #0x2f                  	// #47
   1cdd4:	mov	w15, #0xcccd                	// #52429
   1cdd8:	adrp	x18, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cddc:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cde0:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cde4:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1cde8:	mov	w25, wzr
   1cdec:	mov	x21, x20
   1cdf0:	mov	x4, x28
   1cdf4:	movk	w14, #0x8000, lsl #16
   1cdf8:	movk	w15, #0xccc, lsl #16
   1cdfc:	mov	w16, #0x7fffffff            	// #2147483647
   1ce00:	mov	w17, #0x80000001            	// #-2147483647
   1ce04:	add	x18, x18, #0x959
   1ce08:	add	x13, x13, #0x86f
   1ce0c:	mov	w5, #0x1                   	// #1
   1ce10:	mov	w6, #0x8301                	// #33537
   1ce14:	add	x7, x7, #0x9d0
   1ce18:	add	x30, x30, #0x9b8
   1ce1c:	ldr	x28, [x19, #32]
   1ce20:	b	1df24 <mpfr_vasnprintf_aux@@Base+0x3270>
   1ce24:	str	xzr, [x19, #208]
   1ce28:	b	1cc90 <mpfr_vasnprintf_aux@@Base+0x1fdc>
   1ce2c:	sub	x0, x29, #0x30
   1ce30:	str	x10, [x19, #40]
   1ce34:	bl	be10 <mpfr_tmp_allocate@plt>
   1ce38:	ldr	x10, [x19, #40]
   1ce3c:	mov	x22, x0
   1ce40:	b	1b44c <mpfr_vasnprintf_aux@@Base+0x798>
   1ce44:	bl	c400 <mpfr_tmp_free@plt>
   1ce48:	b	1b770 <mpfr_vasnprintf_aux@@Base+0xabc>
   1ce4c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1ce50:	cmp	x8, x9
   1ce54:	str	x12, [x19, #8]
   1ce58:	str	x28, [x19, #32]
   1ce5c:	str	x23, [x19, #104]
   1ce60:	b.eq	1cf5c <mpfr_vasnprintf_aux@@Base+0x22a8>  // b.none
   1ce64:	mov	x9, #0x2                   	// #2
   1ce68:	movk	x9, #0x8000, lsl #48
   1ce6c:	cmp	x8, x9
   1ce70:	b.ne	1cfc8 <mpfr_vasnprintf_aux@@Base+0x2314>  // b.any
   1ce74:	cmp	w21, #0x1
   1ce78:	b.ne	1ce80 <mpfr_vasnprintf_aux@@Base+0x21cc>  // b.any
   1ce7c:	stur	wzr, [x29, #-208]
   1ce80:	mov	w8, #0x3                   	// #3
   1ce84:	mov	w0, #0x4                   	// #4
   1ce88:	stur	x8, [x29, #-152]
   1ce8c:	bl	ccd0 <mpfr_allocate_func@plt>
   1ce90:	mov	w8, #0x616e                	// #24942
   1ce94:	mov	w9, #0x414e                	// #16718
   1ce98:	cmp	w25, #0x0
   1ce9c:	movk	w8, #0x6e, lsl #16
   1cea0:	movk	w9, #0x4e, lsl #16
   1cea4:	csel	w8, w9, w8, ne  // ne = any
   1cea8:	str	w8, [x0]
   1ceac:	ldur	x8, [x29, #-88]
   1ceb0:	mov	x21, x0
   1ceb4:	mov	x22, x8
   1ceb8:	ldr	x8, [x8, #8]
   1cebc:	cbnz	x8, 1ceb4 <mpfr_vasnprintf_aux@@Base+0x2200>
   1cec0:	b	1cfb0 <mpfr_vasnprintf_aux@@Base+0x22fc>
   1cec4:	cmp	w21, #0x1
   1cec8:	b.ne	1ced0 <mpfr_vasnprintf_aux@@Base+0x221c>  // b.any
   1cecc:	stur	wzr, [x29, #-208]
   1ced0:	ldr	x8, [x19, #24]
   1ced4:	ldr	w8, [x8, #8]
   1ced8:	tbz	w8, #31, 1cee4 <mpfr_vasnprintf_aux@@Base+0x2230>
   1cedc:	mov	w8, #0x2d                  	// #45
   1cee0:	sturb	w8, [x29, #-192]
   1cee4:	mov	w8, #0x3                   	// #3
   1cee8:	mov	w0, #0x4                   	// #4
   1ceec:	stur	x8, [x29, #-152]
   1cef0:	bl	ccd0 <mpfr_allocate_func@plt>
   1cef4:	mov	w8, #0x4255                	// #16981
   1cef8:	mov	w9, #0x6275                	// #25205
   1cefc:	cmp	w25, #0x0
   1cf00:	movk	w8, #0x46, lsl #16
   1cf04:	movk	w9, #0x66, lsl #16
   1cf08:	csel	w8, w8, w9, ne  // ne = any
   1cf0c:	str	w8, [x0]
   1cf10:	ldur	x8, [x29, #-88]
   1cf14:	mov	x21, x0
   1cf18:	mov	x22, x8
   1cf1c:	ldr	x8, [x8, #8]
   1cf20:	cbnz	x8, 1cf18 <mpfr_vasnprintf_aux@@Base+0x2264>
   1cf24:	mov	w0, #0x10                  	// #16
   1cf28:	bl	ccd0 <mpfr_allocate_func@plt>
   1cf2c:	str	x0, [x22, #8]
   1cf30:	stp	x21, xzr, [x0]
   1cf34:	stur	x21, [x29, #-160]
   1cf38:	b	1c328 <mpfr_vasnprintf_aux@@Base+0x1674>
   1cf3c:	sub	x0, x29, #0x30
   1cf40:	str	x10, [x19, #104]
   1cf44:	bl	be10 <mpfr_tmp_allocate@plt>
   1cf48:	ldr	x10, [x19, #104]
   1cf4c:	mov	x26, x0
   1cf50:	b	1b564 <mpfr_vasnprintf_aux@@Base+0x8b0>
   1cf54:	bl	c400 <mpfr_tmp_free@plt>
   1cf58:	b	1bda4 <mpfr_vasnprintf_aux@@Base+0x10f0>
   1cf5c:	cmp	w21, #0x1
   1cf60:	b.ne	1cf68 <mpfr_vasnprintf_aux@@Base+0x22b4>  // b.any
   1cf64:	stur	wzr, [x29, #-208]
   1cf68:	ldr	x8, [x19, #24]
   1cf6c:	ldr	w8, [x8, #8]
   1cf70:	tbz	w8, #31, 1cf7c <mpfr_vasnprintf_aux@@Base+0x22c8>
   1cf74:	mov	w8, #0x2d                  	// #45
   1cf78:	sturb	w8, [x29, #-192]
   1cf7c:	mov	w8, #0x3                   	// #3
   1cf80:	mov	w0, #0x4                   	// #4
   1cf84:	stur	x8, [x29, #-152]
   1cf88:	bl	ccd0 <mpfr_allocate_func@plt>
   1cf8c:	ldp	w9, w8, [x19, #120]
   1cf90:	cmp	w25, #0x0
   1cf94:	mov	x21, x0
   1cf98:	csel	w8, w8, w9, ne  // ne = any
   1cf9c:	str	w8, [x0]
   1cfa0:	ldur	x8, [x29, #-88]
   1cfa4:	mov	x22, x8
   1cfa8:	ldr	x8, [x8, #8]
   1cfac:	cbnz	x8, 1cfa4 <mpfr_vasnprintf_aux@@Base+0x22f0>
   1cfb0:	mov	w0, #0x10                  	// #16
   1cfb4:	bl	ccd0 <mpfr_allocate_func@plt>
   1cfb8:	str	x0, [x22, #8]
   1cfbc:	stp	x21, xzr, [x0]
   1cfc0:	stur	x21, [x29, #-160]
   1cfc4:	b	1d534 <mpfr_vasnprintf_aux@@Base+0x2880>
   1cfc8:	ldr	x8, [x19, #24]
   1cfcc:	ldr	w8, [x8, #8]
   1cfd0:	tbnz	w8, #31, 1cffc <mpfr_vasnprintf_aux@@Base+0x2348>
   1cfd4:	ldr	w9, [x19, #76]
   1cfd8:	mov	w8, #0xa                   	// #10
   1cfdc:	tst	w9, w8
   1cfe0:	b.eq	1d004 <mpfr_vasnprintf_aux@@Base+0x2350>  // b.none
   1cfe4:	ldr	w8, [x19, #76]
   1cfe8:	mov	w9, #0x20                  	// #32
   1cfec:	tst	w8, #0x8
   1cff0:	mov	w8, #0x2b                  	// #43
   1cff4:	csel	w8, w9, w8, eq  // eq = none
   1cff8:	b	1d000 <mpfr_vasnprintf_aux@@Base+0x234c>
   1cffc:	mov	w8, #0x2d                  	// #45
   1d000:	sturb	w8, [x29, #-192]
   1d004:	orr	w8, w22, #0x20
   1d008:	cmp	w8, #0x61
   1d00c:	b.ne	1d068 <mpfr_vasnprintf_aux@@Base+0x23b4>  // b.any
   1d010:	mov	w8, #0x2                   	// #2
   1d014:	mov	w0, #0x3                   	// #3
   1d018:	stur	x8, [x29, #-176]
   1d01c:	bl	ccd0 <mpfr_allocate_func@plt>
   1d020:	mov	w8, #0x30                  	// #48
   1d024:	strb	w8, [x0]
   1d028:	cmp	w25, #0x0
   1d02c:	mov	w8, #0x78                  	// #120
   1d030:	mov	w9, #0x58                  	// #88
   1d034:	csel	w8, w9, w8, ne  // ne = any
   1d038:	strb	w8, [x0, #1]
   1d03c:	strb	wzr, [x0, #2]
   1d040:	ldur	x8, [x29, #-88]
   1d044:	mov	x21, x0
   1d048:	mov	x24, x8
   1d04c:	ldr	x8, [x8, #8]
   1d050:	cbnz	x8, 1d048 <mpfr_vasnprintf_aux@@Base+0x2394>
   1d054:	mov	w0, #0x10                  	// #16
   1d058:	bl	ccd0 <mpfr_allocate_func@plt>
   1d05c:	str	x0, [x24, #8]
   1d060:	stp	x21, xzr, [x0]
   1d064:	stur	x21, [x29, #-184]
   1d068:	mov	w8, #0x1                   	// #1
   1d06c:	mov	w0, #0x2                   	// #2
   1d070:	stur	x8, [x29, #-152]
   1d074:	bl	ccd0 <mpfr_allocate_func@plt>
   1d078:	mov	w8, #0x30                  	// #48
   1d07c:	strh	w8, [x0]
   1d080:	ldur	x24, [x29, #-88]
   1d084:	mov	x21, x0
   1d088:	mov	x8, x24
   1d08c:	mov	x27, x8
   1d090:	ldr	x8, [x8, #8]
   1d094:	cbnz	x8, 1d08c <mpfr_vasnprintf_aux@@Base+0x23d8>
   1d098:	mov	w0, #0x10                  	// #16
   1d09c:	bl	ccd0 <mpfr_allocate_func@plt>
   1d0a0:	str	x0, [x27, #8]
   1d0a4:	stp	x21, xzr, [x0]
   1d0a8:	ldr	x8, [x19, #48]
   1d0ac:	stur	x21, [x29, #-160]
   1d0b0:	subs	w27, w8, #0x1
   1d0b4:	b.lt	1d0e4 <mpfr_vasnprintf_aux@@Base+0x2430>  // b.tstop
   1d0b8:	orr	w8, w22, #0x20
   1d0bc:	cmp	w8, #0x67
   1d0c0:	b.ne	1d0cc <mpfr_vasnprintf_aux@@Base+0x2418>  // b.any
   1d0c4:	ldr	w8, [x19, #76]
   1d0c8:	tbz	w8, #0, 1d470 <mpfr_vasnprintf_aux@@Base+0x27bc>
   1d0cc:	bl	bef0 <localeconv@plt>
   1d0d0:	ldr	x8, [x0]
   1d0d4:	ldrb	w8, [x8, #1]
   1d0d8:	cbz	w8, 1d2b4 <mpfr_vasnprintf_aux@@Base+0x2600>
   1d0dc:	mov	w8, #0x2e                  	// #46
   1d0e0:	b	1d2c0 <mpfr_vasnprintf_aux@@Base+0x260c>
   1d0e4:	ldr	w8, [x19, #76]
   1d0e8:	tbz	w8, #0, 1d470 <mpfr_vasnprintf_aux@@Base+0x27bc>
   1d0ec:	bl	bef0 <localeconv@plt>
   1d0f0:	ldr	x8, [x0]
   1d0f4:	ldrb	w8, [x8, #1]
   1d0f8:	cbz	w8, 1d460 <mpfr_vasnprintf_aux@@Base+0x27ac>
   1d0fc:	mov	w8, #0x2e                  	// #46
   1d100:	b	1d46c <mpfr_vasnprintf_aux@@Base+0x27b8>
   1d104:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d108:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d10c:	mov	w1, #0x27e                 	// #638
   1d110:	add	x0, x0, #0x959
   1d114:	add	x2, x2, #0x99a
   1d118:	bl	cb20 <mpfr_assert_fail@plt>
   1d11c:	b	1b60c <mpfr_vasnprintf_aux@@Base+0x958>
   1d120:	add	x22, x24, #0x1, lsl #12
   1d124:	and	x9, x22, #0x1fffff000
   1d128:	cmp	x9, x24
   1d12c:	mov	x8, x24
   1d130:	str	x9, [x19, #40]
   1d134:	b.cc	1e24c <mpfr_vasnprintf_aux@@Base+0x3598>  // b.lo, b.ul, b.last
   1d138:	ldr	x8, [x19, #40]
   1d13c:	cbz	x8, 1e24c <mpfr_vasnprintf_aux@@Base+0x3598>
   1d140:	ldr	x9, [x19, #208]
   1d144:	orr	x8, x22, #0xfff
   1d148:	eor	x8, x8, #0xfffffffffffff000
   1d14c:	cmp	x9, x8
   1d150:	ldr	x8, [x19, #200]
   1d154:	ldr	x9, [x19, #64]
   1d158:	sub	x8, x9, x8
   1d15c:	str	x8, [x19, #64]
   1d160:	b.cs	1e268 <mpfr_vasnprintf_aux@@Base+0x35b4>  // b.hs, b.nlast
   1d164:	ldp	x0, x1, [x19, #200]
   1d168:	ldr	x8, [x19, #40]
   1d16c:	add	x22, x8, x1
   1d170:	mov	x2, x22
   1d174:	bl	c200 <mpfr_reallocate_func@plt>
   1d178:	ldr	x8, [x19, #64]
   1d17c:	stp	x0, x22, [x19, #200]
   1d180:	add	x8, x0, x8
   1d184:	str	x8, [x19, #64]
   1d188:	b	1b624 <mpfr_vasnprintf_aux@@Base+0x970>
   1d18c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d190:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d194:	mov	w1, #0x428                 	// #1064
   1d198:	add	x0, x0, #0x959
   1d19c:	add	x2, x2, #0xa3c
   1d1a0:	bl	cb20 <mpfr_assert_fail@plt>
   1d1a4:	ldur	x8, [x29, #-72]
   1d1a8:	b	1c140 <mpfr_vasnprintf_aux@@Base+0x148c>
   1d1ac:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d1b0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d1b4:	mov	w1, #0x41f                 	// #1055
   1d1b8:	add	x0, x0, #0x959
   1d1bc:	add	x2, x2, #0xa0e
   1d1c0:	bl	cb20 <mpfr_assert_fail@plt>
   1d1c4:	ldur	x8, [x29, #-72]
   1d1c8:	b	1c2a8 <mpfr_vasnprintf_aux@@Base+0x15f4>
   1d1cc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d1d0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d1d4:	mov	w1, #0x27e                 	// #638
   1d1d8:	add	x0, x0, #0x959
   1d1dc:	add	x2, x2, #0x99a
   1d1e0:	bl	cb20 <mpfr_assert_fail@plt>
   1d1e4:	b	1b65c <mpfr_vasnprintf_aux@@Base+0x9a8>
   1d1e8:	add	x8, x21, #0x1, lsl #12
   1d1ec:	str	x8, [x19, #8]
   1d1f0:	and	x8, x8, #0x1fffff000
   1d1f4:	cmp	x8, x21
   1d1f8:	str	x8, [x19, #104]
   1d1fc:	b.cc	1e284 <mpfr_vasnprintf_aux@@Base+0x35d0>  // b.lo, b.ul, b.last
   1d200:	ldr	x8, [x19, #104]
   1d204:	cbz	x8, 1e284 <mpfr_vasnprintf_aux@@Base+0x35d0>
   1d208:	ldr	x8, [x19, #8]
   1d20c:	ldr	x9, [x19, #208]
   1d210:	orr	x8, x8, #0xfff
   1d214:	eor	x8, x8, #0xfffffffffffff000
   1d218:	cmp	x9, x8
   1d21c:	ldr	x8, [x19, #200]
   1d220:	ldr	x9, [x19, #64]
   1d224:	sub	x8, x9, x8
   1d228:	str	x8, [x19, #64]
   1d22c:	b.cs	1e2a0 <mpfr_vasnprintf_aux@@Base+0x35ec>  // b.hs, b.nlast
   1d230:	ldp	x0, x1, [x19, #200]
   1d234:	ldr	x8, [x19, #104]
   1d238:	add	x2, x8, x1
   1d23c:	str	x2, [x19, #104]
   1d240:	bl	c200 <mpfr_reallocate_func@plt>
   1d244:	ldr	x8, [x19, #64]
   1d248:	add	x8, x0, x8
   1d24c:	str	x8, [x19, #64]
   1d250:	ldr	x8, [x19, #104]
   1d254:	stp	x0, x8, [x19, #200]
   1d258:	b	1b674 <mpfr_vasnprintf_aux@@Base+0x9c0>
   1d25c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d260:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d264:	mov	w1, #0x29a                 	// #666
   1d268:	add	x0, x0, #0x959
   1d26c:	add	x2, x2, #0x9d0
   1d270:	bl	cb20 <mpfr_assert_fail@plt>
   1d274:	b	1c8a4 <mpfr_vasnprintf_aux@@Base+0x1bf0>
   1d278:	ldr	x8, [x19, #208]
   1d27c:	mov	x9, #0xffffffffffffefff    	// #-4097
   1d280:	cmp	x8, x9
   1d284:	ldr	x8, [x19, #200]
   1d288:	ldr	x9, [x19, #64]
   1d28c:	sub	x24, x9, x8
   1d290:	b.cs	1e2bc <mpfr_vasnprintf_aux@@Base+0x3608>  // b.hs, b.nlast
   1d294:	ldp	x0, x1, [x19, #200]
   1d298:	add	x21, x1, #0x1, lsl #12
   1d29c:	mov	x2, x21
   1d2a0:	bl	c200 <mpfr_reallocate_func@plt>
   1d2a4:	add	x8, x0, x24
   1d2a8:	stp	x0, x21, [x19, #200]
   1d2ac:	str	x8, [x19, #64]
   1d2b0:	b	1c8bc <mpfr_vasnprintf_aux@@Base+0x1c08>
   1d2b4:	bl	bef0 <localeconv@plt>
   1d2b8:	ldr	x8, [x0]
   1d2bc:	ldrb	w8, [x8]
   1d2c0:	orr	w9, w22, #0x20
   1d2c4:	cmp	w9, #0x67
   1d2c8:	sturb	w8, [x29, #-140]
   1d2cc:	b.ne	1d2d8 <mpfr_vasnprintf_aux@@Base+0x2624>  // b.any
   1d2d0:	mov	w8, w27
   1d2d4:	str	x8, [x19, #48]
   1d2d8:	ldr	x8, [x19, #48]
   1d2dc:	stur	w8, [x29, #-112]
   1d2e0:	b	1d470 <mpfr_vasnprintf_aux@@Base+0x27bc>
   1d2e4:	mov	x10, x1
   1d2e8:	mov	w1, #0x27e                 	// #638
   1d2ec:	mov	x0, x23
   1d2f0:	mov	x2, x10
   1d2f4:	bl	cb20 <mpfr_assert_fail@plt>
   1d2f8:	b	1b724 <mpfr_vasnprintf_aux@@Base+0xa70>
   1d2fc:	add	x9, x27, #0x1, lsl #12
   1d300:	and	x24, x9, #0xfffffffffffff000
   1d304:	cmp	x24, x27
   1d308:	mov	x8, x27
   1d30c:	str	x9, [x19, #40]
   1d310:	b.cc	1e2f4 <mpfr_vasnprintf_aux@@Base+0x3640>  // b.lo, b.ul, b.last
   1d314:	cbz	x24, 1e2f4 <mpfr_vasnprintf_aux@@Base+0x3640>
   1d318:	ldr	x8, [x19, #40]
   1d31c:	ldr	x9, [x19, #208]
   1d320:	orr	x8, x8, #0xfff
   1d324:	eor	x8, x8, #0xfffffffffffff000
   1d328:	cmp	x9, x8
   1d32c:	ldr	x8, [x19, #200]
   1d330:	ldr	x9, [x19, #64]
   1d334:	sub	x8, x9, x8
   1d338:	str	x8, [x19, #64]
   1d33c:	b.cs	1e30c <mpfr_vasnprintf_aux@@Base+0x3658>  // b.hs, b.nlast
   1d340:	ldp	x0, x1, [x19, #200]
   1d344:	add	x24, x24, x1
   1d348:	mov	x2, x24
   1d34c:	bl	c200 <mpfr_reallocate_func@plt>
   1d350:	ldr	x8, [x19, #64]
   1d354:	stp	x0, x24, [x19, #200]
   1d358:	add	x8, x0, x8
   1d35c:	str	x8, [x19, #64]
   1d360:	b	1b73c <mpfr_vasnprintf_aux@@Base+0xa88>
   1d364:	add	x0, x19, #0xe8
   1d368:	bl	be10 <mpfr_tmp_allocate@plt>
   1d36c:	mov	x25, x0
   1d370:	b	1bce4 <mpfr_vasnprintf_aux@@Base+0x1030>
   1d374:	bl	c400 <mpfr_tmp_free@plt>
   1d378:	b	1cc90 <mpfr_vasnprintf_aux@@Base+0x1fdc>
   1d37c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d380:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d384:	mov	w1, #0x27e                 	// #638
   1d388:	add	x0, x0, #0x959
   1d38c:	add	x2, x2, #0x99a
   1d390:	bl	cb20 <mpfr_assert_fail@plt>
   1d394:	b	1bd5c <mpfr_vasnprintf_aux@@Base+0x10a8>
   1d398:	add	x26, x27, #0x1, lsl #12
   1d39c:	and	x23, x26, #0xfffffffffffff000
   1d3a0:	cmp	x23, x27
   1d3a4:	mov	x8, x27
   1d3a8:	b.cc	1e324 <mpfr_vasnprintf_aux@@Base+0x3670>  // b.lo, b.ul, b.last
   1d3ac:	cbz	x23, 1e324 <mpfr_vasnprintf_aux@@Base+0x3670>
   1d3b0:	ldr	x9, [x19, #208]
   1d3b4:	orr	x8, x26, #0xfff
   1d3b8:	eor	x8, x8, #0xfffffffffffff000
   1d3bc:	cmp	x9, x8
   1d3c0:	ldr	x8, [x19, #200]
   1d3c4:	ldr	x9, [x19, #64]
   1d3c8:	sub	x26, x9, x8
   1d3cc:	b.cs	1e340 <mpfr_vasnprintf_aux@@Base+0x368c>  // b.hs, b.nlast
   1d3d0:	ldp	x0, x1, [x19, #200]
   1d3d4:	add	x23, x23, x1
   1d3d8:	mov	x2, x23
   1d3dc:	bl	c200 <mpfr_reallocate_func@plt>
   1d3e0:	add	x8, x0, x26
   1d3e4:	stp	x0, x23, [x19, #200]
   1d3e8:	str	x8, [x19, #64]
   1d3ec:	b	1bd74 <mpfr_vasnprintf_aux@@Base+0x10c0>
   1d3f0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d3f4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d3f8:	mov	w1, #0x27e                 	// #638
   1d3fc:	add	x0, x0, #0x959
   1d400:	add	x2, x2, #0x99a
   1d404:	bl	cb20 <mpfr_assert_fail@plt>
   1d408:	b	1c9c4 <mpfr_vasnprintf_aux@@Base+0x1d10>
   1d40c:	add	x24, x25, #0x1, lsl #12
   1d410:	and	x22, x24, #0xfffffffffffff000
   1d414:	cmp	x22, x25
   1d418:	b.cc	1e35c <mpfr_vasnprintf_aux@@Base+0x36a8>  // b.lo, b.ul, b.last
   1d41c:	cbz	x22, 1e35c <mpfr_vasnprintf_aux@@Base+0x36a8>
   1d420:	ldr	x9, [x19, #208]
   1d424:	orr	x8, x24, #0xfff
   1d428:	eor	x8, x8, #0xfffffffffffff000
   1d42c:	cmp	x9, x8
   1d430:	ldr	x8, [x19, #200]
   1d434:	ldr	x9, [x19, #64]
   1d438:	sub	x24, x9, x8
   1d43c:	b.cs	1e378 <mpfr_vasnprintf_aux@@Base+0x36c4>  // b.hs, b.nlast
   1d440:	ldp	x0, x1, [x19, #200]
   1d444:	add	x22, x22, x1
   1d448:	mov	x2, x22
   1d44c:	bl	c200 <mpfr_reallocate_func@plt>
   1d450:	add	x8, x0, x24
   1d454:	stp	x0, x22, [x19, #200]
   1d458:	str	x8, [x19, #64]
   1d45c:	b	1c9dc <mpfr_vasnprintf_aux@@Base+0x1d28>
   1d460:	bl	bef0 <localeconv@plt>
   1d464:	ldr	x8, [x0]
   1d468:	ldrb	w8, [x8]
   1d46c:	sturb	w8, [x29, #-140]
   1d470:	ldr	x8, [x19, #8]
   1d474:	ldr	x23, [x19, #104]
   1d478:	ldr	x28, [x19, #32]
   1d47c:	ldr	w21, [x19, #40]
   1d480:	cmp	w8, #0x24
   1d484:	b.hi	1c7e0 <mpfr_vasnprintf_aux@@Base+0x1b2c>  // b.pmore
   1d488:	ldr	x9, [x19, #8]
   1d48c:	mov	w8, #0x1                   	// #1
   1d490:	lsl	x8, x8, x9
   1d494:	mov	x9, #0x11                  	// #17
   1d498:	movk	x9, #0x13, lsl #32
   1d49c:	tst	x8, x9
   1d4a0:	b.eq	1c7e0 <mpfr_vasnprintf_aux@@Base+0x1b2c>  // b.none
   1d4a4:	orr	w21, w22, #0x20
   1d4a8:	cmp	w21, #0x65
   1d4ac:	mov	w8, #0x3                   	// #3
   1d4b0:	cinc	x8, x8, eq  // eq = none
   1d4b4:	add	x0, x8, #0x1
   1d4b8:	stur	x8, [x29, #-96]
   1d4bc:	bl	ccd0 <mpfr_allocate_func@plt>
   1d4c0:	cmp	w21, #0x65
   1d4c4:	mov	x21, x0
   1d4c8:	b.ne	1d4f8 <mpfr_vasnprintf_aux@@Base+0x2844>  // b.any
   1d4cc:	adrp	x8, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d4d0:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d4d4:	cmp	w25, #0x0
   1d4d8:	add	x8, x8, #0xa09
   1d4dc:	add	x9, x9, #0xa04
   1d4e0:	csel	x8, x9, x8, ne  // ne = any
   1d4e4:	ldrb	w9, [x8, #4]
   1d4e8:	ldr	w8, [x8]
   1d4ec:	strb	w9, [x21, #4]
   1d4f0:	str	w8, [x21]
   1d4f4:	b	1d514 <mpfr_vasnprintf_aux@@Base+0x2860>
   1d4f8:	mov	w9, #0x2b50                	// #11088
   1d4fc:	movk	w9, #0x30, lsl #16
   1d500:	orr	w8, w9, #0x20
   1d504:	cmp	w25, #0x0
   1d508:	csel	w8, w9, w8, ne  // ne = any
   1d50c:	str	w8, [x21]
   1d510:	ldur	x24, [x29, #-88]
   1d514:	mov	x22, x24
   1d518:	ldr	x24, [x24, #8]
   1d51c:	cbnz	x24, 1d514 <mpfr_vasnprintf_aux@@Base+0x2860>
   1d520:	mov	w0, #0x10                  	// #16
   1d524:	bl	ccd0 <mpfr_allocate_func@plt>
   1d528:	str	x0, [x22, #8]
   1d52c:	stp	x21, xzr, [x0]
   1d530:	stur	x21, [x29, #-104]
   1d534:	ldr	x23, [x19, #104]
   1d538:	ldr	x28, [x19, #32]
   1d53c:	b	1c328 <mpfr_vasnprintf_aux@@Base+0x1674>
   1d540:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d544:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d548:	mov	w1, #0x29a                 	// #666
   1d54c:	add	x0, x0, #0x959
   1d550:	add	x2, x2, #0x9d0
   1d554:	bl	cb20 <mpfr_assert_fail@plt>
   1d558:	b	1caac <mpfr_vasnprintf_aux@@Base+0x1df8>
   1d55c:	add	x24, x21, #0x1, lsl #12
   1d560:	and	x22, x24, #0xfffffffffffff000
   1d564:	cmp	x22, x21
   1d568:	b.cc	1e4e4 <mpfr_vasnprintf_aux@@Base+0x3830>  // b.lo, b.ul, b.last
   1d56c:	ldr	x9, [x19, #208]
   1d570:	orr	x8, x24, #0xfff
   1d574:	eor	x8, x8, #0xfffffffffffff000
   1d578:	cmp	x9, x8
   1d57c:	ldr	x8, [x19, #200]
   1d580:	ldr	x9, [x19, #64]
   1d584:	sub	x24, x9, x8
   1d588:	b.cs	1e500 <mpfr_vasnprintf_aux@@Base+0x384c>  // b.hs, b.nlast
   1d58c:	ldp	x0, x1, [x19, #200]
   1d590:	add	x22, x22, x1
   1d594:	mov	x2, x22
   1d598:	bl	c200 <mpfr_reallocate_func@plt>
   1d59c:	add	x8, x0, x24
   1d5a0:	stp	x0, x22, [x19, #200]
   1d5a4:	str	x8, [x19, #64]
   1d5a8:	cmp	x21, #0x1
   1d5ac:	b.eq	1cacc <mpfr_vasnprintf_aux@@Base+0x1e18>  // b.none
   1d5b0:	ldr	x0, [x19, #64]
   1d5b4:	mov	w1, #0x30                  	// #48
   1d5b8:	mov	x2, x21
   1d5bc:	bl	c150 <memset@plt>
   1d5c0:	ldr	x8, [x19, #64]
   1d5c4:	add	x8, x8, x21
   1d5c8:	str	x8, [x19, #64]
   1d5cc:	strb	wzr, [x8]
   1d5d0:	mov	x24, x23
   1d5d4:	ldur	x25, [x29, #-160]
   1d5d8:	cbz	x25, 1d6ec <mpfr_vasnprintf_aux@@Base+0x2a38>
   1d5dc:	ldurb	w22, [x29, #-168]
   1d5e0:	ldur	x21, [x29, #-152]
   1d5e4:	cbnz	w22, 1d710 <mpfr_vasnprintf_aux@@Base+0x2a5c>
   1d5e8:	cmn	x24, #0x1
   1d5ec:	b.eq	1d600 <mpfr_vasnprintf_aux@@Base+0x294c>  // b.none
   1d5f0:	adds	x24, x21, x24
   1d5f4:	cset	w8, cs  // cs = hs, nlast
   1d5f8:	orr	x8, x8, x24, lsr #63
   1d5fc:	cbz	x8, 1d684 <mpfr_vasnprintf_aux@@Base+0x29d0>
   1d600:	mov	x23, #0xffffffffffffffff    	// #-1
   1d604:	ldursw	x21, [x29, #-144]
   1d608:	cbz	w21, 1d878 <mpfr_vasnprintf_aux@@Base+0x2bc4>
   1d60c:	cmn	x23, #0x1
   1d610:	b.eq	1d878 <mpfr_vasnprintf_aux@@Base+0x2bc4>  // b.none
   1d614:	mov	x9, x23
   1d618:	adds	x9, x23, x21
   1d61c:	cset	w8, cs  // cs = hs, nlast
   1d620:	orr	x8, x8, x9, lsr #63
   1d624:	cbz	x8, 1d638 <mpfr_vasnprintf_aux@@Base+0x2984>
   1d628:	mov	x23, #0xffffffffffffffff    	// #-1
   1d62c:	ldurb	w22, [x29, #-140]
   1d630:	cbnz	w22, 1d880 <mpfr_vasnprintf_aux@@Base+0x2bcc>
   1d634:	b	1d8d0 <mpfr_vasnprintf_aux@@Base+0x2c1c>
   1d638:	ldr	x8, [x19, #208]
   1d63c:	mov	x23, x9
   1d640:	cbz	x8, 1d6d4 <mpfr_vasnprintf_aux@@Base+0x2a20>
   1d644:	ldr	x9, [x19, #208]
   1d648:	mvn	x8, x21
   1d64c:	cmp	x9, x8
   1d650:	b.cs	1d7e8 <mpfr_vasnprintf_aux@@Base+0x2b34>  // b.hs, b.nlast
   1d654:	ldr	x8, [x19, #64]
   1d658:	ldp	x10, x9, [x19, #200]
   1d65c:	add	x8, x8, x21
   1d660:	add	x9, x10, x9
   1d664:	cmp	x8, x9
   1d668:	b.cs	1d804 <mpfr_vasnprintf_aux@@Base+0x2b50>  // b.hs, b.nlast
   1d66c:	cmp	w21, #0x1
   1d670:	b.ne	1d858 <mpfr_vasnprintf_aux@@Base+0x2ba4>  // b.any
   1d674:	ldr	x8, [x19, #64]
   1d678:	mov	w9, #0x30                  	// #48
   1d67c:	strb	w9, [x8]
   1d680:	b	1d868 <mpfr_vasnprintf_aux@@Base+0x2bb4>
   1d684:	ldr	x8, [x19, #208]
   1d688:	mov	x23, x24
   1d68c:	cbz	x8, 1d6e4 <mpfr_vasnprintf_aux@@Base+0x2a30>
   1d690:	ldr	x9, [x19, #208]
   1d694:	mvn	x8, x21
   1d698:	cmp	x9, x8
   1d69c:	b.cs	1ddc4 <mpfr_vasnprintf_aux@@Base+0x3110>  // b.hs, b.nlast
   1d6a0:	ldr	x8, [x19, #64]
   1d6a4:	ldp	x10, x9, [x19, #200]
   1d6a8:	add	x8, x8, x21
   1d6ac:	add	x9, x10, x9
   1d6b0:	cmp	x8, x9
   1d6b4:	b.cs	1dde0 <mpfr_vasnprintf_aux@@Base+0x312c>  // b.hs, b.nlast
   1d6b8:	ldr	x0, [x19, #64]
   1d6bc:	mov	x1, x25
   1d6c0:	mov	x2, x21
   1d6c4:	bl	c930 <strncat@plt>
   1d6c8:	add	x0, x0, x21
   1d6cc:	str	x0, [x19, #64]
   1d6d0:	b	1d604 <mpfr_vasnprintf_aux@@Base+0x2950>
   1d6d4:	str	xzr, [x19, #208]
   1d6d8:	ldurb	w22, [x29, #-140]
   1d6dc:	cbnz	w22, 1d880 <mpfr_vasnprintf_aux@@Base+0x2bcc>
   1d6e0:	b	1d8d0 <mpfr_vasnprintf_aux@@Base+0x2c1c>
   1d6e4:	str	xzr, [x19, #208]
   1d6e8:	b	1d604 <mpfr_vasnprintf_aux@@Base+0x2950>
   1d6ec:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d6f0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d6f4:	mov	w1, #0x7a3                 	// #1955
   1d6f8:	add	x0, x0, #0x959
   1d6fc:	add	x2, x2, #0x9ec
   1d700:	bl	cb20 <mpfr_assert_fail@plt>
   1d704:	ldp	x25, x21, [x29, #-160]
   1d708:	ldurb	w22, [x29, #-168]
   1d70c:	cbz	w22, 1d5e8 <mpfr_vasnprintf_aux@@Base+0x2934>
   1d710:	ldursw	x8, [x29, #-144]
   1d714:	mvn	x9, x8
   1d718:	cmp	x21, x9
   1d71c:	b.hi	1dcf8 <mpfr_vasnprintf_aux@@Base+0x3044>  // b.pmore
   1d720:	add	x8, x21, x8
   1d724:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1d728:	mov	x26, x25
   1d72c:	sub	x25, x8, #0x1
   1d730:	movk	x9, #0xaaab
   1d734:	umulh	x9, x25, x9
   1d738:	mov	x10, x24
   1d73c:	lsr	x24, x9, #1
   1d740:	mvn	x9, x24
   1d744:	cmp	x8, x9
   1d748:	b.hi	1dcf8 <mpfr_vasnprintf_aux@@Base+0x3044>  // b.pmore
   1d74c:	cmn	x10, #0x1
   1d750:	b.eq	1dcf8 <mpfr_vasnprintf_aux@@Base+0x3044>  // b.none
   1d754:	add	x27, x24, x8
   1d758:	adds	x8, x27, x10
   1d75c:	cset	w9, cs  // cs = hs, nlast
   1d760:	orr	x9, x9, x8, lsr #63
   1d764:	cmp	x9, #0x0
   1d768:	csinv	x23, x8, xzr, eq  // eq = none
   1d76c:	cbnz	x9, 1dcf8 <mpfr_vasnprintf_aux@@Base+0x3044>
   1d770:	ldr	x9, [x19, #208]
   1d774:	cbz	x9, 1e0ec <mpfr_vasnprintf_aux@@Base+0x3438>
   1d778:	ldr	x9, [x19, #208]
   1d77c:	mvn	x8, x27
   1d780:	cmp	x9, x8
   1d784:	add	x8, x24, x24, lsl #1
   1d788:	str	x8, [x19, #104]
   1d78c:	b.cs	1e58c <mpfr_vasnprintf_aux@@Base+0x38d8>  // b.hs, b.nlast
   1d790:	ldr	x8, [x19, #64]
   1d794:	ldp	x10, x9, [x19, #200]
   1d798:	add	x8, x8, x27
   1d79c:	add	x9, x10, x9
   1d7a0:	cmp	x8, x9
   1d7a4:	ldr	x8, [x19, #104]
   1d7a8:	sub	x8, x25, x8
   1d7ac:	str	x8, [x19, #104]
   1d7b0:	b.cs	1e5a8 <mpfr_vasnprintf_aux@@Base+0x38f4>  // b.hs, b.nlast
   1d7b4:	ldr	x8, [x19, #104]
   1d7b8:	cmp	x8, x21
   1d7bc:	add	x8, x8, #0x1
   1d7c0:	str	x8, [x19, #104]
   1d7c4:	b.cs	1e100 <mpfr_vasnprintf_aux@@Base+0x344c>  // b.hs, b.nlast
   1d7c8:	ldr	x27, [x19, #104]
   1d7cc:	ldr	x0, [x19, #64]
   1d7d0:	mov	x1, x26
   1d7d4:	mov	x2, x27
   1d7d8:	bl	ba70 <memcpy@plt>
   1d7dc:	add	x26, x26, x27
   1d7e0:	sub	x21, x21, x27
   1d7e4:	b	1e12c <mpfr_vasnprintf_aux@@Base+0x3478>
   1d7e8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d7ec:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d7f0:	mov	w1, #0x29a                 	// #666
   1d7f4:	add	x0, x0, #0x959
   1d7f8:	add	x2, x2, #0x9d0
   1d7fc:	bl	cb20 <mpfr_assert_fail@plt>
   1d800:	b	1d654 <mpfr_vasnprintf_aux@@Base+0x29a0>
   1d804:	add	x24, x21, #0x1, lsl #12
   1d808:	and	x22, x24, #0xfffffffffffff000
   1d80c:	cmp	x22, x21
   1d810:	b.cc	1e474 <mpfr_vasnprintf_aux@@Base+0x37c0>  // b.lo, b.ul, b.last
   1d814:	ldr	x9, [x19, #208]
   1d818:	orr	x8, x24, #0xfff
   1d81c:	eor	x8, x8, #0xfffffffffffff000
   1d820:	cmp	x9, x8
   1d824:	ldr	x8, [x19, #200]
   1d828:	ldr	x9, [x19, #64]
   1d82c:	sub	x24, x9, x8
   1d830:	b.cs	1e490 <mpfr_vasnprintf_aux@@Base+0x37dc>  // b.hs, b.nlast
   1d834:	ldp	x0, x1, [x19, #200]
   1d838:	add	x22, x22, x1
   1d83c:	mov	x2, x22
   1d840:	bl	c200 <mpfr_reallocate_func@plt>
   1d844:	add	x8, x0, x24
   1d848:	stp	x0, x22, [x19, #200]
   1d84c:	str	x8, [x19, #64]
   1d850:	cmp	w21, #0x1
   1d854:	b.eq	1d674 <mpfr_vasnprintf_aux@@Base+0x29c0>  // b.none
   1d858:	ldr	x0, [x19, #64]
   1d85c:	mov	w1, #0x30                  	// #48
   1d860:	mov	x2, x21
   1d864:	bl	c150 <memset@plt>
   1d868:	ldr	x8, [x19, #64]
   1d86c:	add	x8, x8, x21
   1d870:	str	x8, [x19, #64]
   1d874:	strb	wzr, [x8]
   1d878:	ldurb	w22, [x29, #-140]
   1d87c:	cbz	w22, 1d8d0 <mpfr_vasnprintf_aux@@Base+0x2c1c>
   1d880:	adds	x23, x23, #0x1
   1d884:	b.eq	1d8cc <mpfr_vasnprintf_aux@@Base+0x2c18>  // b.none
   1d888:	b.mi	1d8cc <mpfr_vasnprintf_aux@@Base+0x2c18>  // b.first
   1d88c:	ldr	x8, [x19, #208]
   1d890:	cbz	x8, 1d948 <mpfr_vasnprintf_aux@@Base+0x2c94>
   1d894:	ldr	x8, [x19, #208]
   1d898:	cmn	x8, #0x2
   1d89c:	b.cs	1d958 <mpfr_vasnprintf_aux@@Base+0x2ca4>  // b.hs, b.nlast
   1d8a0:	ldr	x8, [x19, #64]
   1d8a4:	ldp	x10, x9, [x19, #200]
   1d8a8:	add	x8, x8, #0x1
   1d8ac:	add	x9, x10, x9
   1d8b0:	cmp	x8, x9
   1d8b4:	b.cs	1d974 <mpfr_vasnprintf_aux@@Base+0x2cc0>  // b.hs, b.nlast
   1d8b8:	ldr	x8, [x19, #64]
   1d8bc:	strb	w22, [x8]
   1d8c0:	strb	wzr, [x8, #1]!
   1d8c4:	str	x8, [x19, #64]
   1d8c8:	b	1d8d0 <mpfr_vasnprintf_aux@@Base+0x2c1c>
   1d8cc:	mov	x23, #0xffffffffffffffff    	// #-1
   1d8d0:	ldursw	x21, [x29, #-136]
   1d8d4:	cbz	w21, 1da40 <mpfr_vasnprintf_aux@@Base+0x2d8c>
   1d8d8:	cmn	x23, #0x1
   1d8dc:	b.eq	1da40 <mpfr_vasnprintf_aux@@Base+0x2d8c>  // b.none
   1d8e0:	mov	x9, x23
   1d8e4:	adds	x9, x23, x21
   1d8e8:	cset	w8, cs  // cs = hs, nlast
   1d8ec:	orr	x8, x8, x9, lsr #63
   1d8f0:	cbz	x8, 1d8fc <mpfr_vasnprintf_aux@@Base+0x2c48>
   1d8f4:	mov	x23, #0xffffffffffffffff    	// #-1
   1d8f8:	b	1da40 <mpfr_vasnprintf_aux@@Base+0x2d8c>
   1d8fc:	ldr	x8, [x19, #208]
   1d900:	mov	x23, x9
   1d904:	cbz	x8, 1d950 <mpfr_vasnprintf_aux@@Base+0x2c9c>
   1d908:	ldr	x9, [x19, #208]
   1d90c:	mvn	x8, x21
   1d910:	cmp	x9, x8
   1d914:	b.cs	1d9b0 <mpfr_vasnprintf_aux@@Base+0x2cfc>  // b.hs, b.nlast
   1d918:	ldr	x8, [x19, #64]
   1d91c:	ldp	x10, x9, [x19, #200]
   1d920:	add	x8, x8, x21
   1d924:	add	x9, x10, x9
   1d928:	cmp	x8, x9
   1d92c:	b.cs	1d9cc <mpfr_vasnprintf_aux@@Base+0x2d18>  // b.hs, b.nlast
   1d930:	cmp	w21, #0x1
   1d934:	b.ne	1da20 <mpfr_vasnprintf_aux@@Base+0x2d6c>  // b.any
   1d938:	ldr	x8, [x19, #64]
   1d93c:	mov	w9, #0x30                  	// #48
   1d940:	strb	w9, [x8]
   1d944:	b	1da30 <mpfr_vasnprintf_aux@@Base+0x2d7c>
   1d948:	str	xzr, [x19, #208]
   1d94c:	b	1d8d0 <mpfr_vasnprintf_aux@@Base+0x2c1c>
   1d950:	str	xzr, [x19, #208]
   1d954:	b	1da40 <mpfr_vasnprintf_aux@@Base+0x2d8c>
   1d958:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d95c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d960:	mov	w1, #0x29a                 	// #666
   1d964:	add	x0, x0, #0x959
   1d968:	add	x2, x2, #0x9d0
   1d96c:	bl	cb20 <mpfr_assert_fail@plt>
   1d970:	b	1d8a0 <mpfr_vasnprintf_aux@@Base+0x2bec>
   1d974:	ldr	x8, [x19, #208]
   1d978:	mov	x9, #0xffffffffffffefff    	// #-4097
   1d97c:	cmp	x8, x9
   1d980:	ldr	x8, [x19, #200]
   1d984:	ldr	x9, [x19, #64]
   1d988:	sub	x24, x9, x8
   1d98c:	b.cs	1e2d8 <mpfr_vasnprintf_aux@@Base+0x3624>  // b.hs, b.nlast
   1d990:	ldp	x0, x1, [x19, #200]
   1d994:	add	x21, x1, #0x1, lsl #12
   1d998:	mov	x2, x21
   1d99c:	bl	c200 <mpfr_reallocate_func@plt>
   1d9a0:	add	x8, x0, x24
   1d9a4:	stp	x0, x21, [x19, #200]
   1d9a8:	str	x8, [x19, #64]
   1d9ac:	b	1d8b8 <mpfr_vasnprintf_aux@@Base+0x2c04>
   1d9b0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d9b4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1d9b8:	mov	w1, #0x29a                 	// #666
   1d9bc:	add	x0, x0, #0x959
   1d9c0:	add	x2, x2, #0x9d0
   1d9c4:	bl	cb20 <mpfr_assert_fail@plt>
   1d9c8:	b	1d918 <mpfr_vasnprintf_aux@@Base+0x2c64>
   1d9cc:	add	x24, x21, #0x1, lsl #12
   1d9d0:	and	x22, x24, #0xfffffffffffff000
   1d9d4:	cmp	x22, x21
   1d9d8:	b.cc	1e394 <mpfr_vasnprintf_aux@@Base+0x36e0>  // b.lo, b.ul, b.last
   1d9dc:	ldr	x9, [x19, #208]
   1d9e0:	orr	x8, x24, #0xfff
   1d9e4:	eor	x8, x8, #0xfffffffffffff000
   1d9e8:	cmp	x9, x8
   1d9ec:	ldr	x8, [x19, #200]
   1d9f0:	ldr	x9, [x19, #64]
   1d9f4:	sub	x24, x9, x8
   1d9f8:	b.cs	1e3b0 <mpfr_vasnprintf_aux@@Base+0x36fc>  // b.hs, b.nlast
   1d9fc:	ldp	x0, x1, [x19, #200]
   1da00:	add	x22, x22, x1
   1da04:	mov	x2, x22
   1da08:	bl	c200 <mpfr_reallocate_func@plt>
   1da0c:	add	x8, x0, x24
   1da10:	stp	x0, x22, [x19, #200]
   1da14:	str	x8, [x19, #64]
   1da18:	cmp	w21, #0x1
   1da1c:	b.eq	1d938 <mpfr_vasnprintf_aux@@Base+0x2c84>  // b.none
   1da20:	ldr	x0, [x19, #64]
   1da24:	mov	w1, #0x30                  	// #48
   1da28:	mov	x2, x21
   1da2c:	bl	c150 <memset@plt>
   1da30:	ldr	x8, [x19, #64]
   1da34:	add	x8, x8, x21
   1da38:	str	x8, [x19, #64]
   1da3c:	strb	wzr, [x8]
   1da40:	ldur	x21, [x29, #-128]
   1da44:	cbz	x21, 1dac4 <mpfr_vasnprintf_aux@@Base+0x2e10>
   1da48:	cmn	x23, #0x1
   1da4c:	b.eq	1dac4 <mpfr_vasnprintf_aux@@Base+0x2e10>  // b.none
   1da50:	ldur	x25, [x29, #-120]
   1da54:	mov	x9, x23
   1da58:	adds	x9, x25, x23
   1da5c:	cset	w8, cs  // cs = hs, nlast
   1da60:	orr	x8, x8, x9, lsr #63
   1da64:	cbz	x8, 1da70 <mpfr_vasnprintf_aux@@Base+0x2dbc>
   1da68:	mov	x23, #0xffffffffffffffff    	// #-1
   1da6c:	b	1dac4 <mpfr_vasnprintf_aux@@Base+0x2e10>
   1da70:	ldr	x8, [x19, #208]
   1da74:	mov	x23, x9
   1da78:	cbz	x8, 1dac0 <mpfr_vasnprintf_aux@@Base+0x2e0c>
   1da7c:	ldr	x9, [x19, #208]
   1da80:	mvn	x8, x25
   1da84:	cmp	x9, x8
   1da88:	b.cs	1db44 <mpfr_vasnprintf_aux@@Base+0x2e90>  // b.hs, b.nlast
   1da8c:	ldr	x8, [x19, #64]
   1da90:	ldp	x10, x9, [x19, #200]
   1da94:	add	x8, x8, x25
   1da98:	add	x9, x10, x9
   1da9c:	cmp	x8, x9
   1daa0:	b.cs	1db60 <mpfr_vasnprintf_aux@@Base+0x2eac>  // b.hs, b.nlast
   1daa4:	ldr	x0, [x19, #64]
   1daa8:	mov	x1, x21
   1daac:	mov	x2, x25
   1dab0:	bl	c930 <strncat@plt>
   1dab4:	add	x0, x0, x25
   1dab8:	str	x0, [x19, #64]
   1dabc:	b	1dac4 <mpfr_vasnprintf_aux@@Base+0x2e10>
   1dac0:	str	xzr, [x19, #208]
   1dac4:	ldursw	x21, [x29, #-112]
   1dac8:	cbz	w21, 1dc44 <mpfr_vasnprintf_aux@@Base+0x2f90>
   1dacc:	cmn	x23, #0x1
   1dad0:	b.eq	1dc44 <mpfr_vasnprintf_aux@@Base+0x2f90>  // b.none
   1dad4:	mov	x9, x23
   1dad8:	adds	x9, x23, x21
   1dadc:	cset	w8, cs  // cs = hs, nlast
   1dae0:	orr	x8, x8, x9, lsr #63
   1dae4:	cbz	x8, 1daf0 <mpfr_vasnprintf_aux@@Base+0x2e3c>
   1dae8:	mov	x23, #0xffffffffffffffff    	// #-1
   1daec:	b	1dc44 <mpfr_vasnprintf_aux@@Base+0x2f90>
   1daf0:	ldr	x8, [x19, #208]
   1daf4:	mov	x23, x9
   1daf8:	cbz	x8, 1db3c <mpfr_vasnprintf_aux@@Base+0x2e88>
   1dafc:	ldr	x9, [x19, #208]
   1db00:	mvn	x8, x21
   1db04:	cmp	x9, x8
   1db08:	b.cs	1dbb4 <mpfr_vasnprintf_aux@@Base+0x2f00>  // b.hs, b.nlast
   1db0c:	ldr	x8, [x19, #64]
   1db10:	ldp	x10, x9, [x19, #200]
   1db14:	add	x8, x8, x21
   1db18:	add	x9, x10, x9
   1db1c:	cmp	x8, x9
   1db20:	b.cs	1dbd0 <mpfr_vasnprintf_aux@@Base+0x2f1c>  // b.hs, b.nlast
   1db24:	cmp	w21, #0x1
   1db28:	b.ne	1dc24 <mpfr_vasnprintf_aux@@Base+0x2f70>  // b.any
   1db2c:	ldr	x8, [x19, #64]
   1db30:	mov	w9, #0x30                  	// #48
   1db34:	strb	w9, [x8]
   1db38:	b	1dc34 <mpfr_vasnprintf_aux@@Base+0x2f80>
   1db3c:	str	xzr, [x19, #208]
   1db40:	b	1dc44 <mpfr_vasnprintf_aux@@Base+0x2f90>
   1db44:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1db48:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1db4c:	mov	w1, #0x27e                 	// #638
   1db50:	add	x0, x0, #0x959
   1db54:	add	x2, x2, #0x99a
   1db58:	bl	cb20 <mpfr_assert_fail@plt>
   1db5c:	b	1da8c <mpfr_vasnprintf_aux@@Base+0x2dd8>
   1db60:	add	x24, x25, #0x1, lsl #12
   1db64:	and	x22, x24, #0xfffffffffffff000
   1db68:	cmp	x22, x25
   1db6c:	b.cc	1e43c <mpfr_vasnprintf_aux@@Base+0x3788>  // b.lo, b.ul, b.last
   1db70:	cbz	x22, 1e43c <mpfr_vasnprintf_aux@@Base+0x3788>
   1db74:	ldr	x9, [x19, #208]
   1db78:	orr	x8, x24, #0xfff
   1db7c:	eor	x8, x8, #0xfffffffffffff000
   1db80:	cmp	x9, x8
   1db84:	ldr	x8, [x19, #200]
   1db88:	ldr	x9, [x19, #64]
   1db8c:	sub	x24, x9, x8
   1db90:	b.cs	1e3cc <mpfr_vasnprintf_aux@@Base+0x3718>  // b.hs, b.nlast
   1db94:	ldp	x0, x1, [x19, #200]
   1db98:	add	x22, x22, x1
   1db9c:	mov	x2, x22
   1dba0:	bl	c200 <mpfr_reallocate_func@plt>
   1dba4:	add	x8, x0, x24
   1dba8:	stp	x0, x22, [x19, #200]
   1dbac:	str	x8, [x19, #64]
   1dbb0:	b	1daa4 <mpfr_vasnprintf_aux@@Base+0x2df0>
   1dbb4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1dbb8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1dbbc:	mov	w1, #0x29a                 	// #666
   1dbc0:	add	x0, x0, #0x959
   1dbc4:	add	x2, x2, #0x9d0
   1dbc8:	bl	cb20 <mpfr_assert_fail@plt>
   1dbcc:	b	1db0c <mpfr_vasnprintf_aux@@Base+0x2e58>
   1dbd0:	add	x24, x21, #0x1, lsl #12
   1dbd4:	and	x22, x24, #0xfffffffffffff000
   1dbd8:	cmp	x22, x21
   1dbdc:	b.cc	1e3e8 <mpfr_vasnprintf_aux@@Base+0x3734>  // b.lo, b.ul, b.last
   1dbe0:	ldr	x9, [x19, #208]
   1dbe4:	orr	x8, x24, #0xfff
   1dbe8:	eor	x8, x8, #0xfffffffffffff000
   1dbec:	cmp	x9, x8
   1dbf0:	ldr	x8, [x19, #200]
   1dbf4:	ldr	x9, [x19, #64]
   1dbf8:	sub	x24, x9, x8
   1dbfc:	b.cs	1e404 <mpfr_vasnprintf_aux@@Base+0x3750>  // b.hs, b.nlast
   1dc00:	ldp	x0, x1, [x19, #200]
   1dc04:	add	x22, x22, x1
   1dc08:	mov	x2, x22
   1dc0c:	bl	c200 <mpfr_reallocate_func@plt>
   1dc10:	add	x8, x0, x24
   1dc14:	stp	x0, x22, [x19, #200]
   1dc18:	str	x8, [x19, #64]
   1dc1c:	cmp	w21, #0x1
   1dc20:	b.eq	1db2c <mpfr_vasnprintf_aux@@Base+0x2e78>  // b.none
   1dc24:	ldr	x0, [x19, #64]
   1dc28:	mov	w1, #0x30                  	// #48
   1dc2c:	mov	x2, x21
   1dc30:	bl	c150 <memset@plt>
   1dc34:	ldr	x8, [x19, #64]
   1dc38:	add	x8, x8, x21
   1dc3c:	str	x8, [x19, #64]
   1dc40:	strb	wzr, [x8]
   1dc44:	ldur	x21, [x29, #-104]
   1dc48:	cbz	x21, 1dcc8 <mpfr_vasnprintf_aux@@Base+0x3014>
   1dc4c:	cmn	x23, #0x1
   1dc50:	b.eq	1dcc8 <mpfr_vasnprintf_aux@@Base+0x3014>  // b.none
   1dc54:	ldur	x25, [x29, #-96]
   1dc58:	mov	x9, x23
   1dc5c:	adds	x9, x25, x23
   1dc60:	cset	w8, cs  // cs = hs, nlast
   1dc64:	orr	x8, x8, x9, lsr #63
   1dc68:	cbz	x8, 1dc74 <mpfr_vasnprintf_aux@@Base+0x2fc0>
   1dc6c:	mov	x23, #0xffffffffffffffff    	// #-1
   1dc70:	b	1dcc8 <mpfr_vasnprintf_aux@@Base+0x3014>
   1dc74:	ldr	x8, [x19, #208]
   1dc78:	mov	x23, x9
   1dc7c:	cbz	x8, 1dcc4 <mpfr_vasnprintf_aux@@Base+0x3010>
   1dc80:	ldr	x9, [x19, #208]
   1dc84:	mvn	x8, x25
   1dc88:	cmp	x9, x8
   1dc8c:	b.cs	1dd54 <mpfr_vasnprintf_aux@@Base+0x30a0>  // b.hs, b.nlast
   1dc90:	ldr	x8, [x19, #64]
   1dc94:	ldp	x10, x9, [x19, #200]
   1dc98:	add	x8, x8, x25
   1dc9c:	add	x9, x10, x9
   1dca0:	cmp	x8, x9
   1dca4:	b.cs	1dd70 <mpfr_vasnprintf_aux@@Base+0x30bc>  // b.hs, b.nlast
   1dca8:	ldr	x0, [x19, #64]
   1dcac:	mov	x1, x21
   1dcb0:	mov	x2, x25
   1dcb4:	bl	c930 <strncat@plt>
   1dcb8:	add	x0, x0, x25
   1dcbc:	str	x0, [x19, #64]
   1dcc0:	b	1dcc8 <mpfr_vasnprintf_aux@@Base+0x3014>
   1dcc4:	str	xzr, [x19, #208]
   1dcc8:	ldur	w8, [x29, #-208]
   1dccc:	cmp	w8, #0x2
   1dcd0:	b.ne	1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>  // b.any
   1dcd4:	ldur	x21, [x29, #-200]
   1dcd8:	cbz	x21, 1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>
   1dcdc:	cmn	x23, #0x1
   1dce0:	b.eq	1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>  // b.none
   1dce4:	mov	x9, x23
   1dce8:	adds	x9, x21, x23
   1dcec:	cset	w8, cs  // cs = hs, nlast
   1dcf0:	orr	x8, x8, x9, lsr #63
   1dcf4:	cbz	x8, 1dd00 <mpfr_vasnprintf_aux@@Base+0x304c>
   1dcf8:	mov	x23, #0xffffffffffffffff    	// #-1
   1dcfc:	b	1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>
   1dd00:	ldr	x8, [x19, #208]
   1dd04:	mov	x23, x9
   1dd08:	cbz	x8, 1dd4c <mpfr_vasnprintf_aux@@Base+0x3098>
   1dd0c:	ldr	x9, [x19, #208]
   1dd10:	mvn	x8, x21
   1dd14:	cmp	x9, x8
   1dd18:	b.cs	1de34 <mpfr_vasnprintf_aux@@Base+0x3180>  // b.hs, b.nlast
   1dd1c:	ldr	x8, [x19, #64]
   1dd20:	ldp	x10, x9, [x19, #200]
   1dd24:	add	x8, x8, x21
   1dd28:	add	x9, x10, x9
   1dd2c:	cmp	x8, x9
   1dd30:	b.cs	1de50 <mpfr_vasnprintf_aux@@Base+0x319c>  // b.hs, b.nlast
   1dd34:	cmp	x21, #0x1
   1dd38:	b.ne	1dea4 <mpfr_vasnprintf_aux@@Base+0x31f0>  // b.any
   1dd3c:	ldr	x8, [x19, #64]
   1dd40:	mov	w9, #0x20                  	// #32
   1dd44:	strb	w9, [x8]
   1dd48:	b	1deb4 <mpfr_vasnprintf_aux@@Base+0x3200>
   1dd4c:	str	xzr, [x19, #208]
   1dd50:	b	1dec4 <mpfr_vasnprintf_aux@@Base+0x3210>
   1dd54:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1dd58:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1dd5c:	mov	w1, #0x27e                 	// #638
   1dd60:	add	x0, x0, #0x959
   1dd64:	add	x2, x2, #0x99a
   1dd68:	bl	cb20 <mpfr_assert_fail@plt>
   1dd6c:	b	1dc90 <mpfr_vasnprintf_aux@@Base+0x2fdc>
   1dd70:	add	x24, x25, #0x1, lsl #12
   1dd74:	and	x22, x24, #0xfffffffffffff000
   1dd78:	cmp	x22, x25
   1dd7c:	b.cc	1e458 <mpfr_vasnprintf_aux@@Base+0x37a4>  // b.lo, b.ul, b.last
   1dd80:	cbz	x22, 1e458 <mpfr_vasnprintf_aux@@Base+0x37a4>
   1dd84:	ldr	x9, [x19, #208]
   1dd88:	orr	x8, x24, #0xfff
   1dd8c:	eor	x8, x8, #0xfffffffffffff000
   1dd90:	cmp	x9, x8
   1dd94:	ldr	x8, [x19, #200]
   1dd98:	ldr	x9, [x19, #64]
   1dd9c:	sub	x24, x9, x8
   1dda0:	b.cs	1e420 <mpfr_vasnprintf_aux@@Base+0x376c>  // b.hs, b.nlast
   1dda4:	ldp	x0, x1, [x19, #200]
   1dda8:	add	x22, x22, x1
   1ddac:	mov	x2, x22
   1ddb0:	bl	c200 <mpfr_reallocate_func@plt>
   1ddb4:	add	x8, x0, x24
   1ddb8:	stp	x0, x22, [x19, #200]
   1ddbc:	str	x8, [x19, #64]
   1ddc0:	b	1dca8 <mpfr_vasnprintf_aux@@Base+0x2ff4>
   1ddc4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ddc8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ddcc:	mov	w1, #0x27e                 	// #638
   1ddd0:	add	x0, x0, #0x959
   1ddd4:	add	x2, x2, #0x99a
   1ddd8:	bl	cb20 <mpfr_assert_fail@plt>
   1dddc:	b	1d6a0 <mpfr_vasnprintf_aux@@Base+0x29ec>
   1dde0:	add	x24, x21, #0x1, lsl #12
   1dde4:	and	x22, x24, #0xfffffffffffff000
   1dde8:	cmp	x22, x21
   1ddec:	b.cc	1e4ac <mpfr_vasnprintf_aux@@Base+0x37f8>  // b.lo, b.ul, b.last
   1ddf0:	cbz	x22, 1e4ac <mpfr_vasnprintf_aux@@Base+0x37f8>
   1ddf4:	ldr	x9, [x19, #208]
   1ddf8:	orr	x8, x24, #0xfff
   1ddfc:	eor	x8, x8, #0xfffffffffffff000
   1de00:	cmp	x9, x8
   1de04:	ldr	x8, [x19, #200]
   1de08:	ldr	x9, [x19, #64]
   1de0c:	sub	x24, x9, x8
   1de10:	b.cs	1e4c8 <mpfr_vasnprintf_aux@@Base+0x3814>  // b.hs, b.nlast
   1de14:	ldp	x0, x1, [x19, #200]
   1de18:	add	x22, x22, x1
   1de1c:	mov	x2, x22
   1de20:	bl	c200 <mpfr_reallocate_func@plt>
   1de24:	add	x8, x0, x24
   1de28:	stp	x0, x22, [x19, #200]
   1de2c:	str	x8, [x19, #64]
   1de30:	b	1d6b8 <mpfr_vasnprintf_aux@@Base+0x2a04>
   1de34:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1de38:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1de3c:	mov	w1, #0x29a                 	// #666
   1de40:	add	x0, x0, #0x959
   1de44:	add	x2, x2, #0x9d0
   1de48:	bl	cb20 <mpfr_assert_fail@plt>
   1de4c:	b	1dd1c <mpfr_vasnprintf_aux@@Base+0x3068>
   1de50:	add	x24, x21, #0x1, lsl #12
   1de54:	and	x22, x24, #0xfffffffffffff000
   1de58:	cmp	x22, x21
   1de5c:	b.cc	1e51c <mpfr_vasnprintf_aux@@Base+0x3868>  // b.lo, b.ul, b.last
   1de60:	ldr	x9, [x19, #208]
   1de64:	orr	x8, x24, #0xfff
   1de68:	eor	x8, x8, #0xfffffffffffff000
   1de6c:	cmp	x9, x8
   1de70:	ldr	x8, [x19, #200]
   1de74:	ldr	x9, [x19, #64]
   1de78:	sub	x24, x9, x8
   1de7c:	b.cs	1e538 <mpfr_vasnprintf_aux@@Base+0x3884>  // b.hs, b.nlast
   1de80:	ldp	x0, x1, [x19, #200]
   1de84:	add	x22, x22, x1
   1de88:	mov	x2, x22
   1de8c:	bl	c200 <mpfr_reallocate_func@plt>
   1de90:	add	x8, x0, x24
   1de94:	stp	x0, x22, [x19, #200]
   1de98:	str	x8, [x19, #64]
   1de9c:	cmp	x21, #0x1
   1dea0:	b.eq	1dd3c <mpfr_vasnprintf_aux@@Base+0x3088>  // b.none
   1dea4:	ldr	x0, [x19, #64]
   1dea8:	mov	w1, #0x20                  	// #32
   1deac:	mov	x2, x21
   1deb0:	bl	c150 <memset@plt>
   1deb4:	ldr	x8, [x19, #64]
   1deb8:	add	x8, x8, x21
   1debc:	str	x8, [x19, #64]
   1dec0:	strb	wzr, [x8]
   1dec4:	ldr	x24, [x19, #56]
   1dec8:	ldur	x21, [x29, #-88]
   1decc:	cbnz	x21, 1df64 <mpfr_vasnprintf_aux@@Base+0x32b0>
   1ded0:	ldr	x2, [x19, #112]
   1ded4:	ldr	x4, [x19, #16]
   1ded8:	ldr	x3, [x19, #88]
   1dedc:	mov	w14, #0x2f                  	// #47
   1dee0:	mov	w15, #0xcccd                	// #52429
   1dee4:	adrp	x18, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1dee8:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1deec:	adrp	x7, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1def0:	adrp	x30, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1def4:	mov	w25, wzr
   1def8:	mov	x21, x20
   1defc:	movk	w14, #0x8000, lsl #16
   1df00:	movk	w15, #0xccc, lsl #16
   1df04:	mov	w16, #0x7fffffff            	// #2147483647
   1df08:	mov	w17, #0x80000001            	// #-2147483647
   1df0c:	add	x18, x18, #0x959
   1df10:	add	x13, x13, #0x86f
   1df14:	mov	w5, #0x1                   	// #1
   1df18:	mov	w6, #0x8301                	// #33537
   1df1c:	add	x7, x7, #0x9d0
   1df20:	add	x30, x30, #0x9b8
   1df24:	ldr	x9, [x19, #96]
   1df28:	ldrb	w22, [x20]
   1df2c:	ldr	x10, [x19, #64]
   1df30:	ldr	x11, [x19, #80]
   1df34:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1df38:	adrp	x1, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1df3c:	add	x0, x0, #0x965
   1df40:	add	x1, x1, #0x99a
   1df44:	cbnz	w22, 1ae48 <mpfr_vasnprintf_aux@@Base+0x194>
   1df48:	b	1e6fc <mpfr_vasnprintf_aux@@Base+0x3a48>
   1df4c:	ldr	x22, [x21, #8]
   1df50:	mov	w1, #0x10                  	// #16
   1df54:	mov	x0, x21
   1df58:	bl	cc00 <mpfr_free_func@plt>
   1df5c:	mov	x21, x22
   1df60:	cbz	x22, 1ded0 <mpfr_vasnprintf_aux@@Base+0x321c>
   1df64:	ldr	x0, [x21]
   1df68:	cbz	x0, 1df4c <mpfr_vasnprintf_aux@@Base+0x3298>
   1df6c:	bl	c880 <mpfr_free_str@plt>
   1df70:	b	1df4c <mpfr_vasnprintf_aux@@Base+0x3298>
   1df74:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1df78:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1df7c:	mov	w1, #0x29a                 	// #666
   1df80:	add	x0, x0, #0x959
   1df84:	add	x2, x2, #0x9d0
   1df88:	bl	cb20 <mpfr_assert_fail@plt>
   1df8c:	b	1ca24 <mpfr_vasnprintf_aux@@Base+0x1d70>
   1df90:	add	x24, x21, #0x1, lsl #12
   1df94:	and	x22, x24, #0xfffffffffffff000
   1df98:	cmp	x22, x21
   1df9c:	b.cc	1e554 <mpfr_vasnprintf_aux@@Base+0x38a0>  // b.lo, b.ul, b.last
   1dfa0:	ldr	x9, [x19, #208]
   1dfa4:	orr	x8, x24, #0xfff
   1dfa8:	eor	x8, x8, #0xfffffffffffff000
   1dfac:	cmp	x9, x8
   1dfb0:	ldr	x8, [x19, #200]
   1dfb4:	ldr	x9, [x19, #64]
   1dfb8:	sub	x24, x9, x8
   1dfbc:	b.cs	1e570 <mpfr_vasnprintf_aux@@Base+0x38bc>  // b.hs, b.nlast
   1dfc0:	ldp	x0, x1, [x19, #200]
   1dfc4:	add	x22, x22, x1
   1dfc8:	mov	x2, x22
   1dfcc:	bl	c200 <mpfr_reallocate_func@plt>
   1dfd0:	add	x8, x0, x24
   1dfd4:	stp	x0, x22, [x19, #200]
   1dfd8:	str	x8, [x19, #64]
   1dfdc:	cmp	x21, #0x1
   1dfe0:	b.eq	1ca44 <mpfr_vasnprintf_aux@@Base+0x1d90>  // b.none
   1dfe4:	ldr	x0, [x19, #64]
   1dfe8:	mov	w1, #0x20                  	// #32
   1dfec:	mov	x2, x21
   1dff0:	bl	c150 <memset@plt>
   1dff4:	ldr	x8, [x19, #64]
   1dff8:	add	x8, x8, x21
   1dffc:	strb	wzr, [x8]
   1e000:	ldurb	w22, [x29, #-192]
   1e004:	str	x8, [x19, #64]
   1e008:	b	1c880 <mpfr_vasnprintf_aux@@Base+0x1bcc>
   1e00c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e010:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e014:	mov	w1, #0x27e                 	// #638
   1e018:	add	x0, x0, #0x959
   1e01c:	add	x2, x2, #0x99a
   1e020:	bl	cb20 <mpfr_assert_fail@plt>
   1e024:	b	1cb54 <mpfr_vasnprintf_aux@@Base+0x1ea0>
   1e028:	add	x27, x21, #0x1, lsl #12
   1e02c:	and	x25, x27, #0x1fffff000
   1e030:	cmp	x25, x21
   1e034:	b.cc	1e618 <mpfr_vasnprintf_aux@@Base+0x3964>  // b.lo, b.ul, b.last
   1e038:	cbz	x25, 1e618 <mpfr_vasnprintf_aux@@Base+0x3964>
   1e03c:	ldr	x9, [x19, #208]
   1e040:	orr	x8, x27, #0xfff
   1e044:	eor	x8, x8, #0xfffffffffffff000
   1e048:	cmp	x9, x8
   1e04c:	ldr	x8, [x19, #200]
   1e050:	ldr	x9, [x19, #64]
   1e054:	sub	x27, x9, x8
   1e058:	b.cs	1e634 <mpfr_vasnprintf_aux@@Base+0x3980>  // b.hs, b.nlast
   1e05c:	ldp	x0, x1, [x19, #200]
   1e060:	add	x25, x25, x1
   1e064:	mov	x2, x25
   1e068:	bl	c200 <mpfr_reallocate_func@plt>
   1e06c:	add	x8, x0, x27
   1e070:	stp	x0, x25, [x19, #200]
   1e074:	str	x8, [x19, #64]
   1e078:	b	1cb6c <mpfr_vasnprintf_aux@@Base+0x1eb8>
   1e07c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e080:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e084:	mov	w1, #0x27e                 	// #638
   1e088:	add	x0, x0, #0x959
   1e08c:	add	x2, x2, #0x99a
   1e090:	bl	cb20 <mpfr_assert_fail@plt>
   1e094:	b	1cd80 <mpfr_vasnprintf_aux@@Base+0x20cc>
   1e098:	add	x24, x25, #0x1, lsl #12
   1e09c:	and	x22, x24, #0xfffffffffffff000
   1e0a0:	cmp	x22, x25
   1e0a4:	b.cc	1e650 <mpfr_vasnprintf_aux@@Base+0x399c>  // b.lo, b.ul, b.last
   1e0a8:	cbz	x22, 1e650 <mpfr_vasnprintf_aux@@Base+0x399c>
   1e0ac:	ldr	x9, [x19, #208]
   1e0b0:	orr	x8, x24, #0xfff
   1e0b4:	eor	x8, x8, #0xfffffffffffff000
   1e0b8:	cmp	x9, x8
   1e0bc:	ldr	x8, [x19, #200]
   1e0c0:	ldr	x9, [x19, #64]
   1e0c4:	sub	x24, x9, x8
   1e0c8:	b.cs	1e66c <mpfr_vasnprintf_aux@@Base+0x39b8>  // b.hs, b.nlast
   1e0cc:	ldp	x0, x1, [x19, #200]
   1e0d0:	add	x22, x22, x1
   1e0d4:	mov	x2, x22
   1e0d8:	bl	c200 <mpfr_reallocate_func@plt>
   1e0dc:	add	x8, x0, x24
   1e0e0:	stp	x0, x22, [x19, #200]
   1e0e4:	str	x8, [x19, #64]
   1e0e8:	b	1cd98 <mpfr_vasnprintf_aux@@Base+0x20e4>
   1e0ec:	str	xzr, [x19, #208]
   1e0f0:	mov	x23, x8
   1e0f4:	ldurb	w22, [x29, #-140]
   1e0f8:	cbnz	w22, 1d880 <mpfr_vasnprintf_aux@@Base+0x2bcc>
   1e0fc:	b	1d8d0 <mpfr_vasnprintf_aux@@Base+0x2c1c>
   1e100:	ldr	x27, [x19, #64]
   1e104:	mov	x1, x26
   1e108:	mov	x2, x21
   1e10c:	mov	x0, x27
   1e110:	bl	ba70 <memcpy@plt>
   1e114:	ldr	x8, [x19, #104]
   1e118:	add	x0, x27, x21
   1e11c:	mov	w1, #0x30                  	// #48
   1e120:	sub	x2, x8, x21
   1e124:	bl	c150 <memset@plt>
   1e128:	mov	x21, xzr
   1e12c:	ldr	x8, [x19, #64]
   1e130:	ldr	x9, [x19, #104]
   1e134:	cmp	x25, #0x3
   1e138:	add	x8, x8, x9
   1e13c:	str	x8, [x19, #64]
   1e140:	b.cc	1e1d0 <mpfr_vasnprintf_aux@@Base+0x351c>  // b.lo, b.ul, b.last
   1e144:	mov	x25, xzr
   1e148:	ldr	x0, [x19, #64]
   1e14c:	strb	w22, [x0], #1
   1e150:	cbz	x21, 1e18c <mpfr_vasnprintf_aux@@Base+0x34d8>
   1e154:	subs	x8, x21, #0x3
   1e158:	b.cc	1e1a0 <mpfr_vasnprintf_aux@@Base+0x34ec>  // b.lo, b.ul, b.last
   1e15c:	ldrb	w9, [x26, #2]
   1e160:	ldrh	w10, [x26], #3
   1e164:	mov	x21, x8
   1e168:	strb	w9, [x0, #2]
   1e16c:	strh	w10, [x0]
   1e170:	ldr	x8, [x19, #64]
   1e174:	add	x25, x25, #0x1
   1e178:	cmp	x25, x24
   1e17c:	add	x8, x8, #0x4
   1e180:	str	x8, [x19, #64]
   1e184:	b.cc	1e148 <mpfr_vasnprintf_aux@@Base+0x3494>  // b.lo, b.ul, b.last
   1e188:	b	1e1d0 <mpfr_vasnprintf_aux@@Base+0x351c>
   1e18c:	mov	w8, #0x30                  	// #48
   1e190:	strb	w8, [x0, #2]
   1e194:	mov	w8, #0x3030                	// #12336
   1e198:	strh	w8, [x0]
   1e19c:	b	1e170 <mpfr_vasnprintf_aux@@Base+0x34bc>
   1e1a0:	mov	x1, x26
   1e1a4:	mov	x2, x21
   1e1a8:	bl	ba70 <memcpy@plt>
   1e1ac:	ldr	x8, [x19, #64]
   1e1b0:	mov	w1, #0x30                  	// #48
   1e1b4:	add	x8, x8, x21
   1e1b8:	add	x0, x8, #0x1
   1e1bc:	mov	w8, #0x3                   	// #3
   1e1c0:	sub	x2, x8, x21
   1e1c4:	bl	c150 <memset@plt>
   1e1c8:	mov	x21, xzr
   1e1cc:	b	1e170 <mpfr_vasnprintf_aux@@Base+0x34bc>
   1e1d0:	ldr	x8, [x19, #64]
   1e1d4:	b	1d874 <mpfr_vasnprintf_aux@@Base+0x2bc0>
   1e1d8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e1dc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e1e0:	mov	w1, #0x27e                 	// #638
   1e1e4:	add	x0, x0, #0x959
   1e1e8:	add	x2, x2, #0x99a
   1e1ec:	bl	cb20 <mpfr_assert_fail@plt>
   1e1f0:	b	1cc48 <mpfr_vasnprintf_aux@@Base+0x1f94>
   1e1f4:	add	x27, x26, #0x1, lsl #12
   1e1f8:	and	x25, x27, #0xfffffffffffff000
   1e1fc:	cmp	x25, x26
   1e200:	mov	x8, x26
   1e204:	b.cc	1e688 <mpfr_vasnprintf_aux@@Base+0x39d4>  // b.lo, b.ul, b.last
   1e208:	cbz	x25, 1e688 <mpfr_vasnprintf_aux@@Base+0x39d4>
   1e20c:	ldr	x9, [x19, #208]
   1e210:	orr	x8, x27, #0xfff
   1e214:	eor	x8, x8, #0xfffffffffffff000
   1e218:	cmp	x9, x8
   1e21c:	ldr	x8, [x19, #200]
   1e220:	ldr	x9, [x19, #64]
   1e224:	sub	x27, x9, x8
   1e228:	b.cs	1e6a4 <mpfr_vasnprintf_aux@@Base+0x39f0>  // b.hs, b.nlast
   1e22c:	ldp	x0, x1, [x19, #200]
   1e230:	add	x25, x25, x1
   1e234:	mov	x2, x25
   1e238:	bl	c200 <mpfr_reallocate_func@plt>
   1e23c:	add	x8, x0, x27
   1e240:	stp	x0, x25, [x19, #200]
   1e244:	str	x8, [x19, #64]
   1e248:	b	1cc60 <mpfr_vasnprintf_aux@@Base+0x1fac>
   1e24c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e250:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e254:	mov	w1, #0x260                 	// #608
   1e258:	add	x0, x0, #0x959
   1e25c:	add	x2, x2, #0x9b8
   1e260:	bl	cb20 <mpfr_assert_fail@plt>
   1e264:	b	1d140 <mpfr_vasnprintf_aux@@Base+0x248c>
   1e268:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e26c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e270:	mov	w1, #0x265                 	// #613
   1e274:	add	x0, x0, #0x959
   1e278:	add	x2, x2, #0x9d0
   1e27c:	bl	cb20 <mpfr_assert_fail@plt>
   1e280:	b	1d164 <mpfr_vasnprintf_aux@@Base+0x24b0>
   1e284:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e288:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e28c:	mov	w1, #0x260                 	// #608
   1e290:	add	x0, x0, #0x959
   1e294:	add	x2, x2, #0x9b8
   1e298:	bl	cb20 <mpfr_assert_fail@plt>
   1e29c:	b	1d208 <mpfr_vasnprintf_aux@@Base+0x2554>
   1e2a0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2a4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2a8:	mov	w1, #0x265                 	// #613
   1e2ac:	add	x0, x0, #0x959
   1e2b0:	add	x2, x2, #0x9d0
   1e2b4:	bl	cb20 <mpfr_assert_fail@plt>
   1e2b8:	b	1d230 <mpfr_vasnprintf_aux@@Base+0x257c>
   1e2bc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2c0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2c4:	mov	w1, #0x265                 	// #613
   1e2c8:	add	x0, x0, #0x959
   1e2cc:	add	x2, x2, #0x9d0
   1e2d0:	bl	cb20 <mpfr_assert_fail@plt>
   1e2d4:	b	1d294 <mpfr_vasnprintf_aux@@Base+0x25e0>
   1e2d8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2dc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2e0:	mov	w1, #0x265                 	// #613
   1e2e4:	add	x0, x0, #0x959
   1e2e8:	add	x2, x2, #0x9d0
   1e2ec:	bl	cb20 <mpfr_assert_fail@plt>
   1e2f0:	b	1d990 <mpfr_vasnprintf_aux@@Base+0x2cdc>
   1e2f4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e2f8:	mov	w1, #0x260                 	// #608
   1e2fc:	mov	x0, x23
   1e300:	add	x2, x2, #0x9b8
   1e304:	bl	cb20 <mpfr_assert_fail@plt>
   1e308:	b	1d318 <mpfr_vasnprintf_aux@@Base+0x2664>
   1e30c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e310:	mov	w1, #0x265                 	// #613
   1e314:	mov	x0, x23
   1e318:	add	x2, x2, #0x9d0
   1e31c:	bl	cb20 <mpfr_assert_fail@plt>
   1e320:	b	1d340 <mpfr_vasnprintf_aux@@Base+0x268c>
   1e324:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e328:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e32c:	mov	w1, #0x260                 	// #608
   1e330:	add	x0, x0, #0x959
   1e334:	add	x2, x2, #0x9b8
   1e338:	bl	cb20 <mpfr_assert_fail@plt>
   1e33c:	b	1d3b0 <mpfr_vasnprintf_aux@@Base+0x26fc>
   1e340:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e344:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e348:	mov	w1, #0x265                 	// #613
   1e34c:	add	x0, x0, #0x959
   1e350:	add	x2, x2, #0x9d0
   1e354:	bl	cb20 <mpfr_assert_fail@plt>
   1e358:	b	1d3d0 <mpfr_vasnprintf_aux@@Base+0x271c>
   1e35c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e360:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e364:	mov	w1, #0x260                 	// #608
   1e368:	add	x0, x0, #0x959
   1e36c:	add	x2, x2, #0x9b8
   1e370:	bl	cb20 <mpfr_assert_fail@plt>
   1e374:	b	1d420 <mpfr_vasnprintf_aux@@Base+0x276c>
   1e378:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e37c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e380:	mov	w1, #0x265                 	// #613
   1e384:	add	x0, x0, #0x959
   1e388:	add	x2, x2, #0x9d0
   1e38c:	bl	cb20 <mpfr_assert_fail@plt>
   1e390:	b	1d440 <mpfr_vasnprintf_aux@@Base+0x278c>
   1e394:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e398:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e39c:	mov	w1, #0x260                 	// #608
   1e3a0:	add	x0, x0, #0x959
   1e3a4:	add	x2, x2, #0x9b8
   1e3a8:	bl	cb20 <mpfr_assert_fail@plt>
   1e3ac:	b	1d9dc <mpfr_vasnprintf_aux@@Base+0x2d28>
   1e3b0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e3b4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e3b8:	mov	w1, #0x265                 	// #613
   1e3bc:	add	x0, x0, #0x959
   1e3c0:	add	x2, x2, #0x9d0
   1e3c4:	bl	cb20 <mpfr_assert_fail@plt>
   1e3c8:	b	1d9fc <mpfr_vasnprintf_aux@@Base+0x2d48>
   1e3cc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e3d0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e3d4:	mov	w1, #0x265                 	// #613
   1e3d8:	add	x0, x0, #0x959
   1e3dc:	add	x2, x2, #0x9d0
   1e3e0:	bl	cb20 <mpfr_assert_fail@plt>
   1e3e4:	b	1db94 <mpfr_vasnprintf_aux@@Base+0x2ee0>
   1e3e8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e3ec:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e3f0:	mov	w1, #0x260                 	// #608
   1e3f4:	add	x0, x0, #0x959
   1e3f8:	add	x2, x2, #0x9b8
   1e3fc:	bl	cb20 <mpfr_assert_fail@plt>
   1e400:	b	1dbe0 <mpfr_vasnprintf_aux@@Base+0x2f2c>
   1e404:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e408:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e40c:	mov	w1, #0x265                 	// #613
   1e410:	add	x0, x0, #0x959
   1e414:	add	x2, x2, #0x9d0
   1e418:	bl	cb20 <mpfr_assert_fail@plt>
   1e41c:	b	1dc00 <mpfr_vasnprintf_aux@@Base+0x2f4c>
   1e420:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e424:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e428:	mov	w1, #0x265                 	// #613
   1e42c:	add	x0, x0, #0x959
   1e430:	add	x2, x2, #0x9d0
   1e434:	bl	cb20 <mpfr_assert_fail@plt>
   1e438:	b	1dda4 <mpfr_vasnprintf_aux@@Base+0x30f0>
   1e43c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e440:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e444:	mov	w1, #0x260                 	// #608
   1e448:	add	x0, x0, #0x959
   1e44c:	add	x2, x2, #0x9b8
   1e450:	bl	cb20 <mpfr_assert_fail@plt>
   1e454:	b	1db74 <mpfr_vasnprintf_aux@@Base+0x2ec0>
   1e458:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e45c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e460:	mov	w1, #0x260                 	// #608
   1e464:	add	x0, x0, #0x959
   1e468:	add	x2, x2, #0x9b8
   1e46c:	bl	cb20 <mpfr_assert_fail@plt>
   1e470:	b	1dd84 <mpfr_vasnprintf_aux@@Base+0x30d0>
   1e474:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e478:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e47c:	mov	w1, #0x260                 	// #608
   1e480:	add	x0, x0, #0x959
   1e484:	add	x2, x2, #0x9b8
   1e488:	bl	cb20 <mpfr_assert_fail@plt>
   1e48c:	b	1d814 <mpfr_vasnprintf_aux@@Base+0x2b60>
   1e490:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e494:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e498:	mov	w1, #0x265                 	// #613
   1e49c:	add	x0, x0, #0x959
   1e4a0:	add	x2, x2, #0x9d0
   1e4a4:	bl	cb20 <mpfr_assert_fail@plt>
   1e4a8:	b	1d834 <mpfr_vasnprintf_aux@@Base+0x2b80>
   1e4ac:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e4b0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e4b4:	mov	w1, #0x260                 	// #608
   1e4b8:	add	x0, x0, #0x959
   1e4bc:	add	x2, x2, #0x9b8
   1e4c0:	bl	cb20 <mpfr_assert_fail@plt>
   1e4c4:	b	1ddf4 <mpfr_vasnprintf_aux@@Base+0x3140>
   1e4c8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e4cc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e4d0:	mov	w1, #0x265                 	// #613
   1e4d4:	add	x0, x0, #0x959
   1e4d8:	add	x2, x2, #0x9d0
   1e4dc:	bl	cb20 <mpfr_assert_fail@plt>
   1e4e0:	b	1de14 <mpfr_vasnprintf_aux@@Base+0x3160>
   1e4e4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e4e8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e4ec:	mov	w1, #0x260                 	// #608
   1e4f0:	add	x0, x0, #0x959
   1e4f4:	add	x2, x2, #0x9b8
   1e4f8:	bl	cb20 <mpfr_assert_fail@plt>
   1e4fc:	b	1d56c <mpfr_vasnprintf_aux@@Base+0x28b8>
   1e500:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e504:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e508:	mov	w1, #0x265                 	// #613
   1e50c:	add	x0, x0, #0x959
   1e510:	add	x2, x2, #0x9d0
   1e514:	bl	cb20 <mpfr_assert_fail@plt>
   1e518:	b	1d58c <mpfr_vasnprintf_aux@@Base+0x28d8>
   1e51c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e520:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e524:	mov	w1, #0x260                 	// #608
   1e528:	add	x0, x0, #0x959
   1e52c:	add	x2, x2, #0x9b8
   1e530:	bl	cb20 <mpfr_assert_fail@plt>
   1e534:	b	1de60 <mpfr_vasnprintf_aux@@Base+0x31ac>
   1e538:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e53c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e540:	mov	w1, #0x265                 	// #613
   1e544:	add	x0, x0, #0x959
   1e548:	add	x2, x2, #0x9d0
   1e54c:	bl	cb20 <mpfr_assert_fail@plt>
   1e550:	b	1de80 <mpfr_vasnprintf_aux@@Base+0x31cc>
   1e554:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e558:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e55c:	mov	w1, #0x260                 	// #608
   1e560:	add	x0, x0, #0x959
   1e564:	add	x2, x2, #0x9b8
   1e568:	bl	cb20 <mpfr_assert_fail@plt>
   1e56c:	b	1dfa0 <mpfr_vasnprintf_aux@@Base+0x32ec>
   1e570:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e574:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e578:	mov	w1, #0x265                 	// #613
   1e57c:	add	x0, x0, #0x959
   1e580:	add	x2, x2, #0x9d0
   1e584:	bl	cb20 <mpfr_assert_fail@plt>
   1e588:	b	1dfc0 <mpfr_vasnprintf_aux@@Base+0x330c>
   1e58c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e590:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e594:	mov	w1, #0x2d6                 	// #726
   1e598:	add	x0, x0, #0x959
   1e59c:	add	x2, x2, #0xab7
   1e5a0:	bl	cb20 <mpfr_assert_fail@plt>
   1e5a4:	b	1d790 <mpfr_vasnprintf_aux@@Base+0x2adc>
   1e5a8:	add	x8, x27, #0x1, lsl #12
   1e5ac:	str	x8, [x19, #40]
   1e5b0:	and	x8, x8, #0xfffffffffffff000
   1e5b4:	cmp	x8, x27
   1e5b8:	str	x8, [x19, #48]
   1e5bc:	b.cc	1e6c0 <mpfr_vasnprintf_aux@@Base+0x3a0c>  // b.lo, b.ul, b.last
   1e5c0:	ldr	x8, [x19, #48]
   1e5c4:	cbz	x8, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x3a0c>
   1e5c8:	ldr	x8, [x19, #40]
   1e5cc:	ldr	x9, [x19, #208]
   1e5d0:	orr	x8, x8, #0xfff
   1e5d4:	eor	x8, x8, #0xfffffffffffff000
   1e5d8:	cmp	x9, x8
   1e5dc:	ldr	x8, [x19, #200]
   1e5e0:	ldr	x9, [x19, #64]
   1e5e4:	sub	x8, x9, x8
   1e5e8:	str	x8, [x19, #64]
   1e5ec:	b.cs	1e6dc <mpfr_vasnprintf_aux@@Base+0x3a28>  // b.hs, b.nlast
   1e5f0:	ldp	x0, x1, [x19, #200]
   1e5f4:	ldr	x8, [x19, #48]
   1e5f8:	add	x27, x8, x1
   1e5fc:	mov	x2, x27
   1e600:	bl	c200 <mpfr_reallocate_func@plt>
   1e604:	ldr	x8, [x19, #64]
   1e608:	stp	x0, x27, [x19, #200]
   1e60c:	add	x8, x0, x8
   1e610:	str	x8, [x19, #64]
   1e614:	b	1d7b4 <mpfr_vasnprintf_aux@@Base+0x2b00>
   1e618:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e61c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e620:	mov	w1, #0x260                 	// #608
   1e624:	add	x0, x0, #0x959
   1e628:	add	x2, x2, #0x9b8
   1e62c:	bl	cb20 <mpfr_assert_fail@plt>
   1e630:	b	1e03c <mpfr_vasnprintf_aux@@Base+0x3388>
   1e634:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e638:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e63c:	mov	w1, #0x265                 	// #613
   1e640:	add	x0, x0, #0x959
   1e644:	add	x2, x2, #0x9d0
   1e648:	bl	cb20 <mpfr_assert_fail@plt>
   1e64c:	b	1e05c <mpfr_vasnprintf_aux@@Base+0x33a8>
   1e650:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e654:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e658:	mov	w1, #0x260                 	// #608
   1e65c:	add	x0, x0, #0x959
   1e660:	add	x2, x2, #0x9b8
   1e664:	bl	cb20 <mpfr_assert_fail@plt>
   1e668:	b	1e0ac <mpfr_vasnprintf_aux@@Base+0x33f8>
   1e66c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e670:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e674:	mov	w1, #0x265                 	// #613
   1e678:	add	x0, x0, #0x959
   1e67c:	add	x2, x2, #0x9d0
   1e680:	bl	cb20 <mpfr_assert_fail@plt>
   1e684:	b	1e0cc <mpfr_vasnprintf_aux@@Base+0x3418>
   1e688:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e68c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e690:	mov	w1, #0x260                 	// #608
   1e694:	add	x0, x0, #0x959
   1e698:	add	x2, x2, #0x9b8
   1e69c:	bl	cb20 <mpfr_assert_fail@plt>
   1e6a0:	b	1e20c <mpfr_vasnprintf_aux@@Base+0x3558>
   1e6a4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e6a8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e6ac:	mov	w1, #0x265                 	// #613
   1e6b0:	add	x0, x0, #0x959
   1e6b4:	add	x2, x2, #0x9d0
   1e6b8:	bl	cb20 <mpfr_assert_fail@plt>
   1e6bc:	b	1e22c <mpfr_vasnprintf_aux@@Base+0x3578>
   1e6c0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e6c4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e6c8:	mov	w1, #0x260                 	// #608
   1e6cc:	add	x0, x0, #0x959
   1e6d0:	add	x2, x2, #0x9b8
   1e6d4:	bl	cb20 <mpfr_assert_fail@plt>
   1e6d8:	b	1e5c8 <mpfr_vasnprintf_aux@@Base+0x3914>
   1e6dc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e6e0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1e6e4:	mov	w1, #0x265                 	// #613
   1e6e8:	add	x0, x0, #0x959
   1e6ec:	add	x2, x2, #0x9d0
   1e6f0:	bl	cb20 <mpfr_assert_fail@plt>
   1e6f4:	b	1e5f0 <mpfr_vasnprintf_aux@@Base+0x393c>
   1e6f8:	mov	x20, x27
   1e6fc:	ldr	x27, [x19, #216]
   1e700:	cmp	x21, x20
   1e704:	b.eq	1e904 <mpfr_vasnprintf_aux@@Base+0x3c50>  // b.none
   1e708:	sub	x26, x20, x21
   1e70c:	cbz	w25, 1e7d8 <mpfr_vasnprintf_aux@@Base+0x3b24>
   1e710:	add	x1, x26, #0x1
   1e714:	mov	x22, x10
   1e718:	cmp	x1, #0x4, lsl #12
   1e71c:	str	x2, [x19, #112]
   1e720:	stur	xzr, [x29, #-48]
   1e724:	b.hi	1ea88 <mpfr_vasnprintf_aux@@Base+0x3dd4>  // b.pmore
   1e728:	add	x9, x1, #0xf
   1e72c:	mov	x8, sp
   1e730:	and	x9, x9, #0xfffffffffffffff0
   1e734:	sub	x27, x8, x9
   1e738:	mov	sp, x27
   1e73c:	ldr	x20, [x19, #200]
   1e740:	mov	x0, x27
   1e744:	mov	x1, x21
   1e748:	mov	x2, x26
   1e74c:	bl	cab0 <strncpy@plt>
   1e750:	strb	wzr, [x27, x26]
   1e754:	ldp	q0, q1, [x19, #240]
   1e758:	sub	x0, x29, #0x48
   1e75c:	sub	x2, x29, #0xd0
   1e760:	mov	x1, x27
   1e764:	stp	q0, q1, [x29, #-208]
   1e768:	bl	c090 <__gmp_vasprintf@plt>
   1e76c:	ldr	w25, [x19, #196]
   1e770:	tbnz	w0, #31, 1e804 <mpfr_vasnprintf_aux@@Base+0x3b50>
   1e774:	ldur	x21, [x29, #-72]
   1e778:	ldr	x27, [x19, #216]
   1e77c:	cmn	x23, #0x1
   1e780:	b.eq	1e824 <mpfr_vasnprintf_aux@@Base+0x3b70>  // b.none
   1e784:	mov	w26, w0
   1e788:	adds	x23, x23, x26
   1e78c:	cset	w8, cs  // cs = hs, nlast
   1e790:	orr	x8, x8, x23, lsr #63
   1e794:	cbz	x8, 1e850 <mpfr_vasnprintf_aux@@Base+0x3b9c>
   1e798:	ldr	x26, [x19, #208]
   1e79c:	mov	x23, #0xffffffffffffffff    	// #-1
   1e7a0:	mov	x0, x21
   1e7a4:	bl	c880 <mpfr_free_str@plt>
   1e7a8:	ldur	x0, [x29, #-48]
   1e7ac:	cbnz	x0, 1e838 <mpfr_vasnprintf_aux@@Base+0x3b84>
   1e7b0:	ldr	x21, [x19, #184]
   1e7b4:	ldr	x2, [x19, #112]
   1e7b8:	mov	x10, x20
   1e7bc:	cmn	x23, #0x1
   1e7c0:	b.ne	1e918 <mpfr_vasnprintf_aux@@Base+0x3c64>  // b.any
   1e7c4:	b	1e9f0 <mpfr_vasnprintf_aux@@Base+0x3d3c>
   1e7c8:	mov	x23, xzr
   1e7cc:	cmn	x23, #0x1
   1e7d0:	b.ne	1e918 <mpfr_vasnprintf_aux@@Base+0x3c64>  // b.any
   1e7d4:	b	1e9f0 <mpfr_vasnprintf_aux@@Base+0x3d3c>
   1e7d8:	cmn	x23, #0x1
   1e7dc:	b.eq	1e840 <mpfr_vasnprintf_aux@@Base+0x3b8c>  // b.none
   1e7e0:	ldr	w25, [x19, #196]
   1e7e4:	ldr	x20, [x19, #200]
   1e7e8:	adds	x23, x26, x23
   1e7ec:	cset	w8, cs  // cs = hs, nlast
   1e7f0:	orr	x8, x8, x23, lsr #63
   1e7f4:	cbz	x8, 1e89c <mpfr_vasnprintf_aux@@Base+0x3be8>
   1e7f8:	ldr	x21, [x19, #184]
   1e7fc:	ldr	x26, [x19, #208]
   1e800:	b	1e9f4 <mpfr_vasnprintf_aux@@Base+0x3d40>
   1e804:	ldur	x0, [x29, #-48]
   1e808:	ldr	x27, [x19, #216]
   1e80c:	cbnz	x0, 1ea98 <mpfr_vasnprintf_aux@@Base+0x3de4>
   1e810:	ldr	x21, [x19, #184]
   1e814:	ldr	x26, [x19, #208]
   1e818:	cmn	x23, #0x1
   1e81c:	b.ne	1ea04 <mpfr_vasnprintf_aux@@Base+0x3d50>  // b.any
   1e820:	b	1e9f4 <mpfr_vasnprintf_aux@@Base+0x3d40>
   1e824:	ldr	x26, [x19, #208]
   1e828:	mov	x0, x21
   1e82c:	bl	c880 <mpfr_free_str@plt>
   1e830:	ldur	x0, [x29, #-48]
   1e834:	cbz	x0, 1e7b0 <mpfr_vasnprintf_aux@@Base+0x3afc>
   1e838:	bl	c400 <mpfr_tmp_free@plt>
   1e83c:	b	1e7b0 <mpfr_vasnprintf_aux@@Base+0x3afc>
   1e840:	ldr	x21, [x19, #184]
   1e844:	ldr	w25, [x19, #196]
   1e848:	ldp	x20, x26, [x19, #200]
   1e84c:	b	1e9f4 <mpfr_vasnprintf_aux@@Base+0x3d40>
   1e850:	ldr	x20, [x19, #208]
   1e854:	str	x23, [x19, #104]
   1e858:	cbz	x20, 1e9bc <mpfr_vasnprintf_aux@@Base+0x3d08>
   1e85c:	mvn	x8, x26
   1e860:	cmp	x20, x8
   1e864:	b.cs	1eac0 <mpfr_vasnprintf_aux@@Base+0x3e0c>  // b.hs, b.nlast
   1e868:	ldr	x10, [x19, #200]
   1e86c:	add	x8, x22, x26
   1e870:	add	x9, x10, x20
   1e874:	cmp	x8, x9
   1e878:	b.cs	1eadc <mpfr_vasnprintf_aux@@Base+0x3e28>  // b.hs, b.nlast
   1e87c:	mov	x20, x10
   1e880:	mov	x0, x22
   1e884:	mov	x1, x21
   1e888:	mov	x2, x26
   1e88c:	bl	c930 <strncat@plt>
   1e890:	ldur	x21, [x29, #-72]
   1e894:	ldr	x26, [x19, #208]
   1e898:	b	1e9c4 <mpfr_vasnprintf_aux@@Base+0x3d10>
   1e89c:	ldr	x22, [x19, #208]
   1e8a0:	cbz	x22, 1e9dc <mpfr_vasnprintf_aux@@Base+0x3d28>
   1e8a4:	mvn	x8, x26
   1e8a8:	cmp	x22, x8
   1e8ac:	b.cs	1eb34 <mpfr_vasnprintf_aux@@Base+0x3e80>  // b.hs, b.nlast
   1e8b0:	add	x8, x10, x26
   1e8b4:	add	x9, x20, x22
   1e8b8:	cmp	x8, x9
   1e8bc:	b.cs	1eb80 <mpfr_vasnprintf_aux@@Base+0x3ecc>  // b.hs, b.nlast
   1e8c0:	mov	x22, x2
   1e8c4:	mov	x0, x10
   1e8c8:	mov	x1, x21
   1e8cc:	mov	x2, x26
   1e8d0:	bl	c930 <strncat@plt>
   1e8d4:	ldr	x21, [x19, #184]
   1e8d8:	mov	x10, x20
   1e8dc:	mov	x2, x22
   1e8e0:	ldr	x26, [x19, #208]
   1e8e4:	cmn	x23, #0x1
   1e8e8:	b.ne	1e918 <mpfr_vasnprintf_aux@@Base+0x3c64>  // b.any
   1e8ec:	b	1e9f0 <mpfr_vasnprintf_aux@@Base+0x3d3c>
   1e8f0:	add	x20, x27, #0x2
   1e8f4:	mov	w25, #0x1                   	// #1
   1e8f8:	ldr	x27, [x19, #216]
   1e8fc:	cmp	x21, x20
   1e900:	b.ne	1e708 <mpfr_vasnprintf_aux@@Base+0x3a54>  // b.any
   1e904:	ldp	x10, x26, [x19, #200]
   1e908:	ldr	x21, [x19, #184]
   1e90c:	ldr	w25, [x19, #196]
   1e910:	cmn	x23, #0x1
   1e914:	b.eq	1e9f0 <mpfr_vasnprintf_aux@@Base+0x3d3c>  // b.none
   1e918:	mov	w8, #0x7fffffff            	// #2147483647
   1e91c:	cmp	x23, x8
   1e920:	b.gt	1e9f0 <mpfr_vasnprintf_aux@@Base+0x3d3c>
   1e924:	cbz	x27, 1e944 <mpfr_vasnprintf_aux@@Base+0x3c90>
   1e928:	add	w8, w23, #0x1
   1e92c:	sxtw	x2, w8
   1e930:	mov	x0, x10
   1e934:	mov	x1, x26
   1e938:	bl	c200 <mpfr_reallocate_func@plt>
   1e93c:	str	x0, [x27]
   1e940:	b	1e97c <mpfr_vasnprintf_aux@@Base+0x3cc8>
   1e944:	cbz	x2, 1e97c <mpfr_vasnprintf_aux@@Base+0x3cc8>
   1e948:	sxtw	x8, w23
   1e94c:	ldr	x0, [x19, #168]
   1e950:	sub	x9, x2, #0x1
   1e954:	cmp	x8, x2
   1e958:	csel	x20, x8, x9, cc  // cc = lo, ul, last
   1e95c:	mov	x1, x10
   1e960:	mov	x2, x20
   1e964:	mov	x22, x10
   1e968:	bl	cab0 <strncpy@plt>
   1e96c:	strb	wzr, [x0, x20]
   1e970:	mov	x0, x22
   1e974:	mov	x1, x26
   1e978:	bl	cc00 <mpfr_free_func@plt>
   1e97c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1e980:	ldr	x1, [x0, #2640]
   1e984:	add	x0, x0, #0xa50
   1e988:	blr	x1
   1e98c:	str	w25, [x28, x0]
   1e990:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1e994:	ldr	x1, [x0, #2576]
   1e998:	add	x0, x0, #0xa10
   1e99c:	blr	x1
   1e9a0:	str	x21, [x28, x0]
   1e9a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1e9a8:	ldr	x1, [x0, #2608]
   1e9ac:	add	x0, x0, #0xa30
   1e9b0:	blr	x1
   1e9b4:	str	x24, [x28, x0]
   1e9b8:	b	1ea64 <mpfr_vasnprintf_aux@@Base+0x3db0>
   1e9bc:	ldr	x20, [x19, #200]
   1e9c0:	mov	x26, xzr
   1e9c4:	ldr	x23, [x19, #104]
   1e9c8:	mov	x0, x21
   1e9cc:	bl	c880 <mpfr_free_str@plt>
   1e9d0:	ldur	x0, [x29, #-48]
   1e9d4:	cbz	x0, 1e7b0 <mpfr_vasnprintf_aux@@Base+0x3afc>
   1e9d8:	b	1e838 <mpfr_vasnprintf_aux@@Base+0x3b84>
   1e9dc:	ldr	x21, [x19, #184]
   1e9e0:	mov	x26, xzr
   1e9e4:	mov	x10, x20
   1e9e8:	cmn	x23, #0x1
   1e9ec:	b.ne	1e918 <mpfr_vasnprintf_aux@@Base+0x3c64>  // b.any
   1e9f0:	mov	x20, x10
   1e9f4:	orr	w25, w25, #0x10
   1e9f8:	bl	cbe0 <__errno_location@plt>
   1e9fc:	mov	w8, #0x4b                  	// #75
   1ea00:	str	w8, [x0]
   1ea04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1ea08:	ldr	x1, [x0, #2640]
   1ea0c:	add	x0, x0, #0xa50
   1ea10:	blr	x1
   1ea14:	str	w25, [x28, x0]
   1ea18:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1ea1c:	ldr	x1, [x0, #2576]
   1ea20:	add	x0, x0, #0xa10
   1ea24:	blr	x1
   1ea28:	str	x21, [x28, x0]
   1ea2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1ea30:	ldr	x1, [x0, #2608]
   1ea34:	add	x0, x0, #0xa30
   1ea38:	blr	x1
   1ea3c:	str	x24, [x28, x0]
   1ea40:	cbz	x27, 1ea4c <mpfr_vasnprintf_aux@@Base+0x3d98>
   1ea44:	str	xzr, [x27]
   1ea48:	b	1ea54 <mpfr_vasnprintf_aux@@Base+0x3da0>
   1ea4c:	ldr	x8, [x19, #176]
   1ea50:	cbz	w8, 1ea60 <mpfr_vasnprintf_aux@@Base+0x3dac>
   1ea54:	mov	x0, x20
   1ea58:	mov	x1, x26
   1ea5c:	bl	cc00 <mpfr_free_func@plt>
   1ea60:	mov	w23, #0xffffffff            	// #-1
   1ea64:	mov	w0, w23
   1ea68:	mov	sp, x29
   1ea6c:	ldp	x20, x19, [sp, #80]
   1ea70:	ldp	x22, x21, [sp, #64]
   1ea74:	ldp	x24, x23, [sp, #48]
   1ea78:	ldp	x26, x25, [sp, #32]
   1ea7c:	ldp	x28, x27, [sp, #16]
   1ea80:	ldp	x29, x30, [sp], #96
   1ea84:	ret
   1ea88:	sub	x0, x29, #0x30
   1ea8c:	bl	be10 <mpfr_tmp_allocate@plt>
   1ea90:	mov	x27, x0
   1ea94:	b	1e73c <mpfr_vasnprintf_aux@@Base+0x3a88>
   1ea98:	bl	c400 <mpfr_tmp_free@plt>
   1ea9c:	b	1e810 <mpfr_vasnprintf_aux@@Base+0x3b5c>
   1eaa0:	ldur	x0, [x29, #-48]
   1eaa4:	cbnz	x0, 1ec14 <mpfr_vasnprintf_aux@@Base+0x3f60>
   1eaa8:	ldr	x24, [x19, #56]
   1eaac:	ldr	x21, [x19, #184]
   1eab0:	ldr	w25, [x19, #196]
   1eab4:	ldp	x26, x27, [x19, #208]
   1eab8:	ldr	x20, [x19, #200]
   1eabc:	b	1e818 <mpfr_vasnprintf_aux@@Base+0x3b64>
   1eac0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1eac4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1eac8:	add	x0, x0, #0x959
   1eacc:	add	x2, x2, #0x99a
   1ead0:	mov	w1, #0x27e                 	// #638
   1ead4:	bl	cb20 <mpfr_assert_fail@plt>
   1ead8:	b	1e868 <mpfr_vasnprintf_aux@@Base+0x3bb4>
   1eadc:	add	x25, x26, #0x1, lsl #12
   1eae0:	and	x20, x25, #0x1fffff000
   1eae4:	cmp	x20, x26
   1eae8:	b.cc	1ec38 <mpfr_vasnprintf_aux@@Base+0x3f84>  // b.lo, b.ul, b.last
   1eaec:	cbz	x20, 1ec38 <mpfr_vasnprintf_aux@@Base+0x3f84>
   1eaf0:	ldr	x9, [x19, #208]
   1eaf4:	orr	x8, x25, #0xfff
   1eaf8:	eor	x8, x8, #0xfffffffffffff000
   1eafc:	cmp	x9, x8
   1eb00:	ldr	x8, [x19, #200]
   1eb04:	sub	x25, x22, x8
   1eb08:	b.cs	1ec1c <mpfr_vasnprintf_aux@@Base+0x3f68>  // b.hs, b.nlast
   1eb0c:	ldp	x0, x1, [x19, #200]
   1eb10:	add	x27, x20, x1
   1eb14:	mov	x2, x27
   1eb18:	bl	c200 <mpfr_reallocate_func@plt>
   1eb1c:	add	x22, x0, x25
   1eb20:	str	x27, [x19, #208]
   1eb24:	ldr	w25, [x19, #196]
   1eb28:	ldr	x27, [x19, #216]
   1eb2c:	mov	x20, x0
   1eb30:	b	1e880 <mpfr_vasnprintf_aux@@Base+0x3bcc>
   1eb34:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1eb38:	str	x2, [x19, #112]
   1eb3c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1eb40:	add	x0, x0, #0x959
   1eb44:	add	x2, x2, #0x99a
   1eb48:	mov	w1, #0x27e                 	// #638
   1eb4c:	mov	x20, x28
   1eb50:	mov	x28, x23
   1eb54:	mov	x23, x10
   1eb58:	bl	cb20 <mpfr_assert_fail@plt>
   1eb5c:	mov	x10, x23
   1eb60:	mov	x23, x28
   1eb64:	mov	x28, x20
   1eb68:	ldr	x2, [x19, #112]
   1eb6c:	ldr	x20, [x19, #200]
   1eb70:	add	x8, x10, x26
   1eb74:	add	x9, x20, x22
   1eb78:	cmp	x8, x9
   1eb7c:	b.cc	1e8c0 <mpfr_vasnprintf_aux@@Base+0x3c0c>  // b.lo, b.ul, b.last
   1eb80:	add	x25, x26, #0x1, lsl #12
   1eb84:	and	x20, x25, #0xfffffffffffff000
   1eb88:	str	x28, [x19, #32]
   1eb8c:	mov	x28, x23
   1eb90:	mov	x23, x10
   1eb94:	mov	x22, x2
   1eb98:	cmp	x20, x26
   1eb9c:	b.cc	1ec70 <mpfr_vasnprintf_aux@@Base+0x3fbc>  // b.lo, b.ul, b.last
   1eba0:	cbz	x20, 1ec70 <mpfr_vasnprintf_aux@@Base+0x3fbc>
   1eba4:	ldr	x9, [x19, #208]
   1eba8:	orr	x8, x25, #0xfff
   1ebac:	eor	x8, x8, #0xfffffffffffff000
   1ebb0:	cmp	x9, x8
   1ebb4:	ldr	x8, [x19, #200]
   1ebb8:	sub	x25, x23, x8
   1ebbc:	b.cs	1ec54 <mpfr_vasnprintf_aux@@Base+0x3fa0>  // b.hs, b.nlast
   1ebc0:	ldp	x0, x1, [x19, #200]
   1ebc4:	add	x27, x20, x1
   1ebc8:	mov	x2, x27
   1ebcc:	bl	c200 <mpfr_reallocate_func@plt>
   1ebd0:	add	x10, x0, x25
   1ebd4:	str	x27, [x19, #208]
   1ebd8:	ldr	w25, [x19, #196]
   1ebdc:	ldr	x27, [x19, #216]
   1ebe0:	mov	x23, x28
   1ebe4:	ldr	x28, [x19, #32]
   1ebe8:	mov	x20, x0
   1ebec:	b	1e8c4 <mpfr_vasnprintf_aux@@Base+0x3c10>
   1ebf0:	ldr	x0, [x19, #232]
   1ebf4:	cbnz	x0, 1ec8c <mpfr_vasnprintf_aux@@Base+0x3fd8>
   1ebf8:	ldr	x24, [x19, #56]
   1ebfc:	ldr	x21, [x19, #184]
   1ec00:	ldr	w25, [x19, #196]
   1ec04:	ldp	x26, x27, [x19, #208]
   1ec08:	ldr	x20, [x19, #200]
   1ec0c:	ldr	x28, [x19, #32]
   1ec10:	b	1e818 <mpfr_vasnprintf_aux@@Base+0x3b64>
   1ec14:	bl	c400 <mpfr_tmp_free@plt>
   1ec18:	b	1eaa8 <mpfr_vasnprintf_aux@@Base+0x3df4>
   1ec1c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec20:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec24:	add	x0, x0, #0x959
   1ec28:	add	x2, x2, #0x9d0
   1ec2c:	mov	w1, #0x265                 	// #613
   1ec30:	bl	cb20 <mpfr_assert_fail@plt>
   1ec34:	b	1eb0c <mpfr_vasnprintf_aux@@Base+0x3e58>
   1ec38:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec3c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec40:	add	x0, x0, #0x959
   1ec44:	add	x2, x2, #0x9b8
   1ec48:	mov	w1, #0x260                 	// #608
   1ec4c:	bl	cb20 <mpfr_assert_fail@plt>
   1ec50:	b	1eaf0 <mpfr_vasnprintf_aux@@Base+0x3e3c>
   1ec54:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec58:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec5c:	add	x0, x0, #0x959
   1ec60:	add	x2, x2, #0x9d0
   1ec64:	mov	w1, #0x265                 	// #613
   1ec68:	bl	cb20 <mpfr_assert_fail@plt>
   1ec6c:	b	1ebc0 <mpfr_vasnprintf_aux@@Base+0x3f0c>
   1ec70:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec74:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ec78:	add	x0, x0, #0x959
   1ec7c:	add	x2, x2, #0x9b8
   1ec80:	mov	w1, #0x260                 	// #608
   1ec84:	bl	cb20 <mpfr_assert_fail@plt>
   1ec88:	b	1eba4 <mpfr_vasnprintf_aux@@Base+0x3ef0>
   1ec8c:	bl	c400 <mpfr_tmp_free@plt>
   1ec90:	b	1ebf8 <mpfr_vasnprintf_aux@@Base+0x3f44>
   1ec94:	sub	sp, sp, #0x80
   1ec98:	stp	x29, x30, [sp, #48]
   1ec9c:	stp	x26, x25, [sp, #64]
   1eca0:	stp	x24, x23, [sp, #80]
   1eca4:	stp	x22, x21, [sp, #96]
   1eca8:	stp	x20, x19, [sp, #112]
   1ecac:	ldrb	w8, [x2, #32]
   1ecb0:	mov	x22, x3
   1ecb4:	mov	x20, x2
   1ecb8:	mov	x21, x1
   1ecbc:	orr	w25, w8, #0x20
   1ecc0:	and	w8, w25, #0xff
   1ecc4:	cmp	w8, #0x67
   1ecc8:	mov	x19, x0
   1eccc:	add	x29, sp, #0x30
   1ecd0:	b.ne	1ed08 <mpfr_vasnprintf_aux@@Base+0x4054>  // b.any
   1ecd4:	ldrb	w8, [x20]
   1ecd8:	and	w24, w8, #0x1
   1ecdc:	ldr	w8, [x21, #8]
   1ece0:	tbnz	w8, #31, 1ed14 <mpfr_vasnprintf_aux@@Base+0x4060>
   1ece4:	ldrb	w8, [x20]
   1ece8:	mov	w9, #0xa                   	// #10
   1ecec:	tst	w8, w9
   1ecf0:	b.eq	1ed1c <mpfr_vasnprintf_aux@@Base+0x4068>  // b.none
   1ecf4:	tst	w8, #0x8
   1ecf8:	mov	w8, #0x2b                  	// #43
   1ecfc:	mov	w9, #0x20                  	// #32
   1ed00:	csel	w8, w9, w8, eq  // eq = none
   1ed04:	b	1ed18 <mpfr_vasnprintf_aux@@Base+0x4064>
   1ed08:	mov	w24, #0x1                   	// #1
   1ed0c:	ldr	w8, [x21, #8]
   1ed10:	tbz	w8, #31, 1ece4 <mpfr_vasnprintf_aux@@Base+0x4030>
   1ed14:	mov	w8, #0x2d                  	// #45
   1ed18:	strb	w8, [x19, #16]
   1ed1c:	ldr	x8, [x21, #16]
   1ed20:	cmp	x8, #0x0
   1ed24:	b.le	1ed50 <mpfr_vasnprintf_aux@@Base+0x409c>
   1ed28:	mov	x0, x21
   1ed2c:	bl	1f6e4 <mpfr_vasnprintf_aux@@Base+0x4a30>
   1ed30:	mov	w8, #0x7fffffff            	// #2147483647
   1ed34:	cmp	x0, x8
   1ed38:	stur	x0, [x29, #-8]
   1ed3c:	b.gt	1f0ac <mpfr_vasnprintf_aux@@Base+0x43f8>
   1ed40:	cbz	x22, 1ee98 <mpfr_vasnprintf_aux@@Base+0x41e4>
   1ed44:	ldp	x23, x22, [x22]
   1ed48:	stur	x23, [x29, #-8]
   1ed4c:	b	1eef0 <mpfr_vasnprintf_aux@@Base+0x423c>
   1ed50:	mov	w8, #0x1                   	// #1
   1ed54:	mov	w0, #0x2                   	// #2
   1ed58:	str	x8, [x19, #56]
   1ed5c:	bl	ccd0 <mpfr_allocate_func@plt>
   1ed60:	mov	w8, #0x30                  	// #48
   1ed64:	strh	w8, [x0]
   1ed68:	ldr	x8, [x19, #120]
   1ed6c:	mov	x23, x0
   1ed70:	mov	x26, x8
   1ed74:	ldr	x8, [x8, #8]
   1ed78:	cbnz	x8, 1ed70 <mpfr_vasnprintf_aux@@Base+0x40bc>
   1ed7c:	mov	w0, #0x10                  	// #16
   1ed80:	bl	ccd0 <mpfr_allocate_func@plt>
   1ed84:	str	x0, [x26, #8]
   1ed88:	stp	x23, xzr, [x0]
   1ed8c:	str	x23, [x19, #48]
   1ed90:	ldr	w8, [x20, #8]
   1ed94:	cbz	w8, 1ee40 <mpfr_vasnprintf_aux@@Base+0x418c>
   1ed98:	mov	x0, x21
   1ed9c:	bl	1f6e4 <mpfr_vasnprintf_aux@@Base+0x4a30>
   1eda0:	stur	x0, [x29, #-8]
   1eda4:	ldr	w8, [x20, #8]
   1eda8:	sxtw	x9, w8
   1edac:	neg	x10, x9
   1edb0:	cmp	x0, x10
   1edb4:	b.ge	1efc0 <mpfr_vasnprintf_aux@@Base+0x430c>  // b.tcont
   1edb8:	ldr	w9, [x20, #28]
   1edbc:	sub	w10, w9, #0x1
   1edc0:	cmp	w10, #0x4
   1edc4:	b.hi	1f1ec <mpfr_vasnprintf_aux@@Base+0x4538>  // b.pmore
   1edc8:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1edcc:	add	x9, x9, #0x94a
   1edd0:	adr	x11, 1ede0 <mpfr_vasnprintf_aux@@Base+0x412c>
   1edd4:	ldrh	w12, [x9, x10, lsl #1]
   1edd8:	add	x11, x11, x12, lsl #2
   1eddc:	br	x11
   1ede0:	ldr	w9, [x21, #8]
   1ede4:	cmp	w9, #0x0
   1ede8:	b.le	1f28c <mpfr_vasnprintf_aux@@Base+0x45d8>
   1edec:	sub	w8, w8, #0x1
   1edf0:	mov	w9, #0x1                   	// #1
   1edf4:	mov	w0, #0x2                   	// #2
   1edf8:	str	w8, [x19, #72]
   1edfc:	str	x9, [x19, #88]
   1ee00:	bl	ccd0 <mpfr_allocate_func@plt>
   1ee04:	mov	w8, #0x31                  	// #49
   1ee08:	strh	w8, [x0]
   1ee0c:	ldr	x8, [x19, #120]
   1ee10:	mov	x21, x0
   1ee14:	mov	x22, x8
   1ee18:	ldr	x8, [x8, #8]
   1ee1c:	cbnz	x8, 1ee14 <mpfr_vasnprintf_aux@@Base+0x4160>
   1ee20:	mov	w0, #0x10                  	// #16
   1ee24:	bl	ccd0 <mpfr_allocate_func@plt>
   1ee28:	str	x0, [x22, #8]
   1ee2c:	stp	x21, xzr, [x0]
   1ee30:	str	x21, [x19, #80]
   1ee34:	ldrb	w8, [x20]
   1ee38:	tbz	w8, #0, 1f174 <mpfr_vasnprintf_aux@@Base+0x44c0>
   1ee3c:	b	1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1ee40:	ldr	x8, [x21]
   1ee44:	mov	w9, #0x1                   	// #1
   1ee48:	str	w9, [sp, #8]
   1ee4c:	str	x8, [sp]
   1ee50:	ldr	q0, [x21, #16]
   1ee54:	str	q0, [sp, #16]
   1ee58:	ldr	w8, [x20, #28]
   1ee5c:	cmp	w8, #0x4
   1ee60:	b.hi	1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>  // b.pmore
   1ee64:	adrp	x9, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1ee68:	add	x9, x9, #0x954
   1ee6c:	adr	x10, 1ee7c <mpfr_vasnprintf_aux@@Base+0x41c8>
   1ee70:	ldrb	w11, [x9, x8]
   1ee74:	add	x10, x10, x11, lsl #2
   1ee78:	br	x10
   1ee7c:	fmov	d0, #5.000000000000000000e-01
   1ee80:	mov	x0, sp
   1ee84:	bl	bd40 <mpfr_cmp_d@plt>
   1ee88:	cmp	w0, #0x1
   1ee8c:	b.lt	1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>  // b.tstop
   1ee90:	ldr	x23, [x19, #48]
   1ee94:	b	1f164 <mpfr_vasnprintf_aux@@Base+0x44b0>
   1ee98:	ldrsw	x8, [x20, #8]
   1ee9c:	ldr	x9, [x20, #32]
   1eea0:	ldp	q0, q1, [x20]
   1eea4:	mov	x4, sp
   1eea8:	add	x8, x0, x8
   1eeac:	add	x2, x8, #0x1
   1eeb0:	sub	x0, x29, #0x8
   1eeb4:	mov	w1, #0xa                   	// #10
   1eeb8:	mov	x3, x21
   1eebc:	str	x9, [sp, #32]
   1eec0:	stp	q0, q1, [sp]
   1eec4:	bl	1f5a4 <mpfr_vasnprintf_aux@@Base+0x48f0>
   1eec8:	ldr	x8, [x19, #120]
   1eecc:	mov	x22, x0
   1eed0:	mov	x23, x8
   1eed4:	ldr	x8, [x8, #8]
   1eed8:	cbnz	x8, 1eed0 <mpfr_vasnprintf_aux@@Base+0x421c>
   1eedc:	mov	w0, #0x10                  	// #16
   1eee0:	bl	ccd0 <mpfr_allocate_func@plt>
   1eee4:	str	x0, [x23, #8]
   1eee8:	stp	x22, xzr, [x0]
   1eeec:	ldur	x23, [x29, #-8]
   1eef0:	ldr	w8, [x21, #8]
   1eef4:	cmp	w8, #0x0
   1eef8:	cinc	x21, x22, lt  // lt = tstop
   1eefc:	mov	x0, x21
   1ef00:	str	x21, [x19, #48]
   1ef04:	bl	bb10 <strlen@plt>
   1ef08:	mov	x22, x0
   1ef0c:	cmp	x23, x0
   1ef10:	b.ls	1ef64 <mpfr_vasnprintf_aux@@Base+0x42b0>  // b.plast
   1ef14:	sub	w8, w23, w22
   1ef18:	mov	x23, x22
   1ef1c:	str	w8, [x19, #64]
   1ef20:	str	x23, [x19, #56]
   1ef24:	ldrb	w8, [x20]
   1ef28:	tbz	w8, #4, 1ef70 <mpfr_vasnprintf_aux@@Base+0x42bc>
   1ef2c:	bl	bef0 <localeconv@plt>
   1ef30:	ldr	x8, [x0, #8]
   1ef34:	ldrb	w8, [x8]
   1ef38:	cbz	w8, 1ef50 <mpfr_vasnprintf_aux@@Base+0x429c>
   1ef3c:	bl	bef0 <localeconv@plt>
   1ef40:	ldr	x8, [x0, #8]
   1ef44:	ldrb	w8, [x8, #1]
   1ef48:	cbz	w8, 1f0b4 <mpfr_vasnprintf_aux@@Base+0x4400>
   1ef4c:	mov	w8, wzr
   1ef50:	ldr	x23, [x19, #56]
   1ef54:	strb	w8, [x19, #40]
   1ef58:	sub	x25, x22, x23
   1ef5c:	tbnz	w24, #0, 1ef98 <mpfr_vasnprintf_aux@@Base+0x42e4>
   1ef60:	b	1ef78 <mpfr_vasnprintf_aux@@Base+0x42c4>
   1ef64:	str	x23, [x19, #56]
   1ef68:	ldrb	w8, [x20]
   1ef6c:	tbnz	w8, #4, 1ef2c <mpfr_vasnprintf_aux@@Base+0x4278>
   1ef70:	sub	x25, x22, x23
   1ef74:	tbnz	w24, #0, 1ef98 <mpfr_vasnprintf_aux@@Base+0x42e4>
   1ef78:	add	x8, x22, x21
   1ef7c:	add	x25, x25, #0x1
   1ef80:	sub	x8, x8, #0x1
   1ef84:	ldrb	w9, [x8], #-1
   1ef88:	subs	x25, x25, #0x1
   1ef8c:	b.eq	1ef98 <mpfr_vasnprintf_aux@@Base+0x42e4>  // b.none
   1ef90:	cmp	w9, #0x30
   1ef94:	b.eq	1ef84 <mpfr_vasnprintf_aux@@Base+0x42d0>  // b.none
   1ef98:	cbz	x25, 1f0e8 <mpfr_vasnprintf_aux@@Base+0x4434>
   1ef9c:	lsr	x8, x25, #31
   1efa0:	cbnz	x8, 1f0ac <mpfr_vasnprintf_aux@@Base+0x43f8>
   1efa4:	add	x21, x21, x23
   1efa8:	bl	bef0 <localeconv@plt>
   1efac:	ldr	x8, [x0]
   1efb0:	ldrb	w8, [x8, #1]
   1efb4:	cbz	w8, 1f0d4 <mpfr_vasnprintf_aux@@Base+0x4420>
   1efb8:	mov	w8, #0x2e                  	// #46
   1efbc:	b	1f0e0 <mpfr_vasnprintf_aux@@Base+0x442c>
   1efc0:	cbz	x22, 1efd0 <mpfr_vasnprintf_aux@@Base+0x431c>
   1efc4:	ldp	x23, x22, [x22]
   1efc8:	stur	x23, [x29, #-8]
   1efcc:	b	1f024 <mpfr_vasnprintf_aux@@Base+0x4370>
   1efd0:	ldr	x8, [x20, #32]
   1efd4:	ldp	q0, q1, [x20]
   1efd8:	add	x9, x0, x9
   1efdc:	add	x2, x9, #0x1
   1efe0:	sub	x0, x29, #0x8
   1efe4:	mov	x4, sp
   1efe8:	mov	w1, #0xa                   	// #10
   1efec:	mov	x3, x21
   1eff0:	str	x8, [sp, #32]
   1eff4:	stp	q0, q1, [sp]
   1eff8:	bl	1f5a4 <mpfr_vasnprintf_aux@@Base+0x48f0>
   1effc:	ldr	x8, [x19, #120]
   1f000:	mov	x22, x0
   1f004:	mov	x23, x8
   1f008:	ldr	x8, [x8, #8]
   1f00c:	cbnz	x8, 1f004 <mpfr_vasnprintf_aux@@Base+0x4350>
   1f010:	mov	w0, #0x10                  	// #16
   1f014:	bl	ccd0 <mpfr_allocate_func@plt>
   1f018:	str	x0, [x23, #8]
   1f01c:	stp	x22, xzr, [x0]
   1f020:	ldur	x23, [x29, #-8]
   1f024:	ldr	w8, [x21, #8]
   1f028:	cmp	w8, #0x0
   1f02c:	cinc	x21, x22, lt  // lt = tstop
   1f030:	cmp	x23, #0x1
   1f034:	b.ne	1f06c <mpfr_vasnprintf_aux@@Base+0x43b8>  // b.any
   1f038:	ldr	x8, [x19, #48]
   1f03c:	and	w9, w25, #0xff
   1f040:	mov	w10, #0x31                  	// #49
   1f044:	cmp	w9, #0x67
   1f048:	strb	w10, [x8]
   1f04c:	b.ne	1f058 <mpfr_vasnprintf_aux@@Base+0x43a4>  // b.any
   1f050:	ldrb	w8, [x20]
   1f054:	tbz	w8, #0, 1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>
   1f058:	ldr	w8, [x20, #8]
   1f05c:	str	w8, [x19, #72]
   1f060:	ldrb	w8, [x20]
   1f064:	tbz	w8, #0, 1f174 <mpfr_vasnprintf_aux@@Base+0x44c0>
   1f068:	b	1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1f06c:	neg	w22, w23
   1f070:	mov	x0, x21
   1f074:	str	x21, [x19, #80]
   1f078:	str	w22, [x19, #72]
   1f07c:	bl	bb10 <strlen@plt>
   1f080:	tbnz	w24, #0, 1f0a4 <mpfr_vasnprintf_aux@@Base+0x43f0>
   1f084:	sub	x8, x21, #0x1
   1f088:	subs	x9, x0, #0x1
   1f08c:	b.cc	1f0a0 <mpfr_vasnprintf_aux@@Base+0x43ec>  // b.lo, b.ul, b.last
   1f090:	ldrb	w10, [x8, x0]
   1f094:	mov	x0, x9
   1f098:	cmp	w10, #0x30
   1f09c:	b.eq	1f088 <mpfr_vasnprintf_aux@@Base+0x43d4>  // b.none
   1f0a0:	add	x0, x9, #0x1
   1f0a4:	lsr	x8, x0, #31
   1f0a8:	cbz	x8, 1f110 <mpfr_vasnprintf_aux@@Base+0x445c>
   1f0ac:	mov	w0, #0xffffffff            	// #-1
   1f0b0:	b	1f2b4 <mpfr_vasnprintf_aux@@Base+0x4600>
   1f0b4:	bl	bef0 <localeconv@plt>
   1f0b8:	ldr	x8, [x0, #8]
   1f0bc:	ldrb	w8, [x8]
   1f0c0:	ldr	x23, [x19, #56]
   1f0c4:	strb	w8, [x19, #40]
   1f0c8:	sub	x25, x22, x23
   1f0cc:	tbz	w24, #0, 1ef78 <mpfr_vasnprintf_aux@@Base+0x42c4>
   1f0d0:	b	1ef98 <mpfr_vasnprintf_aux@@Base+0x42e4>
   1f0d4:	bl	bef0 <localeconv@plt>
   1f0d8:	ldr	x8, [x0]
   1f0dc:	ldrb	w8, [x8]
   1f0e0:	strb	w8, [x19, #68]
   1f0e4:	stp	x21, x25, [x19, #80]
   1f0e8:	cbz	w24, 1f1bc <mpfr_vasnprintf_aux@@Base+0x4508>
   1f0ec:	ldrsw	x8, [x20, #8]
   1f0f0:	cmp	x25, x8
   1f0f4:	b.cs	1f1bc <mpfr_vasnprintf_aux@@Base+0x4508>  // b.hs, b.nlast
   1f0f8:	bl	bef0 <localeconv@plt>
   1f0fc:	ldr	x8, [x0]
   1f100:	ldrb	w8, [x8, #1]
   1f104:	cbz	w8, 1f19c <mpfr_vasnprintf_aux@@Base+0x44e8>
   1f108:	mov	w8, #0x2e                  	// #46
   1f10c:	b	1f1a8 <mpfr_vasnprintf_aux@@Base+0x44f4>
   1f110:	and	w8, w25, #0xff
   1f114:	cmp	w8, #0x67
   1f118:	str	x0, [x19, #88]
   1f11c:	b.ne	1f128 <mpfr_vasnprintf_aux@@Base+0x4474>  // b.any
   1f120:	ldrb	w8, [x20]
   1f124:	tbz	w8, #0, 1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>
   1f128:	ldr	w8, [x20, #8]
   1f12c:	cmp	w8, #0x1
   1f130:	b.lt	1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>  // b.tstop
   1f134:	add	x9, x0, w22, sxtw
   1f138:	cmp	x9, x8
   1f13c:	b.cs	1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>  // b.hs, b.nlast
   1f140:	sub	w9, w23, w0
   1f144:	add	w8, w9, w8
   1f148:	str	w8, [x19, #96]
   1f14c:	ldrb	w8, [x20]
   1f150:	tbz	w8, #0, 1f174 <mpfr_vasnprintf_aux@@Base+0x44c0>
   1f154:	b	1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1f158:	ldr	w8, [x21, #8]
   1f15c:	cmp	w8, #0x0
   1f160:	b.le	1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>
   1f164:	mov	w8, #0x31                  	// #49
   1f168:	strb	w8, [x23]
   1f16c:	ldrb	w8, [x20]
   1f170:	tbnz	w8, #0, 1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1f174:	ldr	w8, [x19, #72]
   1f178:	cbnz	w8, 1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1f17c:	ldr	x8, [x19, #88]
   1f180:	cbnz	x8, 1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1f184:	ldr	w8, [x19, #96]
   1f188:	cbnz	w8, 1f298 <mpfr_vasnprintf_aux@@Base+0x45e4>
   1f18c:	b	1f1c4 <mpfr_vasnprintf_aux@@Base+0x4510>
   1f190:	ldr	w8, [x21, #8]
   1f194:	tbz	w8, #31, 1f16c <mpfr_vasnprintf_aux@@Base+0x44b8>
   1f198:	b	1f164 <mpfr_vasnprintf_aux@@Base+0x44b0>
   1f19c:	bl	bef0 <localeconv@plt>
   1f1a0:	ldr	x8, [x0]
   1f1a4:	ldrb	w8, [x8]
   1f1a8:	strb	w8, [x19, #68]
   1f1ac:	ldr	w8, [x20, #8]
   1f1b0:	ldr	w9, [x19, #88]
   1f1b4:	sub	w8, w8, w9
   1f1b8:	str	w8, [x19, #96]
   1f1bc:	ldrb	w8, [x20]
   1f1c0:	tbnz	w8, #0, 1f1cc <mpfr_vasnprintf_aux@@Base+0x4518>
   1f1c4:	mov	w0, wzr
   1f1c8:	b	1f2b4 <mpfr_vasnprintf_aux@@Base+0x4600>
   1f1cc:	bl	bef0 <localeconv@plt>
   1f1d0:	ldr	x8, [x0]
   1f1d4:	ldrb	w8, [x8, #1]
   1f1d8:	cbnz	w8, 1f2a8 <mpfr_vasnprintf_aux@@Base+0x45f4>
   1f1dc:	bl	bef0 <localeconv@plt>
   1f1e0:	ldr	x8, [x0]
   1f1e4:	ldrb	w8, [x8]
   1f1e8:	b	1f2ac <mpfr_vasnprintf_aux@@Base+0x45f8>
   1f1ec:	ldr	x8, [x21]
   1f1f0:	mov	w10, #0x38                  	// #56
   1f1f4:	cmp	x8, #0x38
   1f1f8:	csel	x22, x8, x10, gt
   1f1fc:	cbnz	w9, 1f2d0 <mpfr_vasnprintf_aux@@Base+0x461c>
   1f200:	add	x22, x22, #0x8
   1f204:	mov	x0, sp
   1f208:	mov	x1, x22
   1f20c:	bl	ca60 <mpfr_init2@plt>
   1f210:	mov	x0, sp
   1f214:	mov	x1, x22
   1f218:	bl	bf20 <mpfr_set_prec@plt>
   1f21c:	ldrsw	x8, [x20, #8]
   1f220:	mov	x0, sp
   1f224:	mov	x2, xzr
   1f228:	mov	w3, wzr
   1f22c:	neg	x1, x8
   1f230:	bl	bae0 <mpfr_set_si_2exp@plt>
   1f234:	mov	x0, sp
   1f238:	mov	x1, sp
   1f23c:	mov	w2, #0x3                   	// #3
   1f240:	bl	bdd0 <mpfr_exp10@plt>
   1f244:	mov	x0, sp
   1f248:	mov	x1, sp
   1f24c:	mov	w2, #0x1                   	// #1
   1f250:	mov	w3, wzr
   1f254:	bl	c8f0 <mpfr_div_2ui@plt>
   1f258:	mov	x0, sp
   1f25c:	mov	x1, x21
   1f260:	bl	c990 <mpfr_cmpabs@plt>
   1f264:	add	x22, x22, #0x8
   1f268:	cbz	w0, 1f210 <mpfr_vasnprintf_aux@@Base+0x455c>
   1f26c:	mov	w23, w0
   1f270:	mov	x0, sp
   1f274:	bl	c0b0 <mpfr_clear@plt>
   1f278:	ldr	w8, [x20, #8]
   1f27c:	tbz	w23, #31, 1f28c <mpfr_vasnprintf_aux@@Base+0x45d8>
   1f280:	b	1edec <mpfr_vasnprintf_aux@@Base+0x4138>
   1f284:	ldr	w9, [x21, #8]
   1f288:	tbnz	w9, #31, 1edec <mpfr_vasnprintf_aux@@Base+0x4138>
   1f28c:	str	w8, [x19, #72]
   1f290:	ldrb	w8, [x20]
   1f294:	tbz	w8, #0, 1f174 <mpfr_vasnprintf_aux@@Base+0x44c0>
   1f298:	bl	bef0 <localeconv@plt>
   1f29c:	ldr	x8, [x0]
   1f2a0:	ldrb	w8, [x8, #1]
   1f2a4:	cbz	w8, 1f1dc <mpfr_vasnprintf_aux@@Base+0x4528>
   1f2a8:	mov	w8, #0x2e                  	// #46
   1f2ac:	mov	w0, wzr
   1f2b0:	strb	w8, [x19, #68]
   1f2b4:	ldp	x20, x19, [sp, #112]
   1f2b8:	ldp	x22, x21, [sp, #96]
   1f2bc:	ldp	x24, x23, [sp, #80]
   1f2c0:	ldp	x26, x25, [sp, #64]
   1f2c4:	ldp	x29, x30, [sp, #48]
   1f2c8:	add	sp, sp, #0x80
   1f2cc:	ret
   1f2d0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1f2d4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1f2d8:	add	x0, x0, #0x959
   1f2dc:	add	x2, x2, #0xa95
   1f2e0:	mov	w1, #0x58f                 	// #1423
   1f2e4:	bl	cb20 <mpfr_assert_fail@plt>
   1f2e8:	b	1f200 <mpfr_vasnprintf_aux@@Base+0x454c>
   1f2ec:	sub	sp, sp, #0x80
   1f2f0:	stp	x29, x30, [sp, #48]
   1f2f4:	stp	x26, x25, [sp, #64]
   1f2f8:	stp	x24, x23, [sp, #80]
   1f2fc:	stp	x22, x21, [sp, #96]
   1f300:	stp	x20, x19, [sp, #112]
   1f304:	ldrb	w8, [x2, #32]
   1f308:	mov	w9, #0x65                  	// #101
   1f30c:	mov	w10, #0x45                  	// #69
   1f310:	mov	x20, x2
   1f314:	orr	w11, w8, #0x2
   1f318:	orr	w24, w8, #0x20
   1f31c:	and	w8, w11, #0xff
   1f320:	and	w11, w24, #0xff
   1f324:	cmp	w8, #0x47
   1f328:	mov	x21, x1
   1f32c:	csel	w23, w10, w9, eq  // eq = none
   1f330:	cmp	w11, #0x67
   1f334:	mov	x19, x0
   1f338:	add	x29, sp, #0x30
   1f33c:	b.ne	1f374 <mpfr_vasnprintf_aux@@Base+0x46c0>  // b.any
   1f340:	ldrb	w8, [x20]
   1f344:	and	w25, w8, #0x1
   1f348:	ldr	w8, [x21, #8]
   1f34c:	tbnz	w8, #31, 1f388 <mpfr_vasnprintf_aux@@Base+0x46d4>
   1f350:	ldrb	w9, [x20]
   1f354:	mov	w10, #0xa                   	// #10
   1f358:	tst	w9, w10
   1f35c:	b.eq	1f390 <mpfr_vasnprintf_aux@@Base+0x46dc>  // b.none
   1f360:	tst	w9, #0x8
   1f364:	mov	w9, #0x2b                  	// #43
   1f368:	mov	w10, #0x20                  	// #32
   1f36c:	csel	w9, w10, w9, eq  // eq = none
   1f370:	b	1f38c <mpfr_vasnprintf_aux@@Base+0x46d8>
   1f374:	ldr	w8, [x20, #8]
   1f378:	cmp	w8, #0x0
   1f37c:	cset	w25, gt
   1f380:	ldr	w8, [x21, #8]
   1f384:	tbz	w8, #31, 1f350 <mpfr_vasnprintf_aux@@Base+0x469c>
   1f388:	mov	w9, #0x2d                  	// #45
   1f38c:	strb	w9, [x19, #16]
   1f390:	mov	w9, #0x1                   	// #1
   1f394:	str	x9, [x19, #56]
   1f398:	cbz	x3, 1f3a8 <mpfr_vasnprintf_aux@@Base+0x46f4>
   1f39c:	ldp	x9, x22, [x3]
   1f3a0:	stur	x9, [x29, #-8]
   1f3a4:	b	1f400 <mpfr_vasnprintf_aux@@Base+0x474c>
   1f3a8:	ldrsw	x8, [x20, #8]
   1f3ac:	ldr	x9, [x20, #32]
   1f3b0:	ldp	q0, q1, [x20]
   1f3b4:	sub	x0, x29, #0x8
   1f3b8:	cmp	w8, #0x0
   1f3bc:	csinc	x2, xzr, x8, lt  // lt = tstop
   1f3c0:	mov	x4, sp
   1f3c4:	mov	w1, #0xa                   	// #10
   1f3c8:	mov	x3, x21
   1f3cc:	str	x9, [sp, #32]
   1f3d0:	stp	q0, q1, [sp]
   1f3d4:	bl	1f5a4 <mpfr_vasnprintf_aux@@Base+0x48f0>
   1f3d8:	ldr	x8, [x19, #120]
   1f3dc:	mov	x22, x0
   1f3e0:	mov	x26, x8
   1f3e4:	ldr	x8, [x8, #8]
   1f3e8:	cbnz	x8, 1f3e0 <mpfr_vasnprintf_aux@@Base+0x472c>
   1f3ec:	mov	w0, #0x10                  	// #16
   1f3f0:	bl	ccd0 <mpfr_allocate_func@plt>
   1f3f4:	str	x0, [x26, #8]
   1f3f8:	stp	x22, xzr, [x0]
   1f3fc:	ldr	w8, [x21, #8]
   1f400:	cmp	w8, #0x0
   1f404:	cinc	x26, x22, lt  // lt = tstop
   1f408:	str	x26, [x19, #48]
   1f40c:	ldr	w22, [x20, #8]
   1f410:	cbz	w22, 1f480 <mpfr_vasnprintf_aux@@Base+0x47cc>
   1f414:	add	x21, x26, #0x1
   1f418:	mov	x0, x21
   1f41c:	bl	bb10 <strlen@plt>
   1f420:	tbnz	w25, #0, 1f440 <mpfr_vasnprintf_aux@@Base+0x478c>
   1f424:	subs	x8, x0, #0x1
   1f428:	b.cc	1f43c <mpfr_vasnprintf_aux@@Base+0x4788>  // b.lo, b.ul, b.last
   1f42c:	ldrb	w9, [x26, x0]
   1f430:	mov	x0, x8
   1f434:	cmp	w9, #0x30
   1f438:	b.eq	1f424 <mpfr_vasnprintf_aux@@Base+0x4770>  // b.none
   1f43c:	add	x0, x8, #0x1
   1f440:	lsr	x8, x0, #31
   1f444:	cbz	x8, 1f450 <mpfr_vasnprintf_aux@@Base+0x479c>
   1f448:	mov	w0, #0xffffffff            	// #-1
   1f44c:	b	1f588 <mpfr_vasnprintf_aux@@Base+0x48d4>
   1f450:	cbz	x0, 1f480 <mpfr_vasnprintf_aux@@Base+0x47cc>
   1f454:	and	w8, w24, #0xff
   1f458:	cmp	w8, #0x67
   1f45c:	stp	x21, x0, [x19, #80]
   1f460:	b.ne	1f46c <mpfr_vasnprintf_aux@@Base+0x47b8>  // b.any
   1f464:	ldrb	w8, [x20]
   1f468:	tbz	w8, #0, 1f480 <mpfr_vasnprintf_aux@@Base+0x47cc>
   1f46c:	cmp	w22, #0x1
   1f470:	b.lt	1f480 <mpfr_vasnprintf_aux@@Base+0x47cc>  // b.tstop
   1f474:	subs	w8, w22, w0
   1f478:	b.le	1f480 <mpfr_vasnprintf_aux@@Base+0x47cc>
   1f47c:	str	w8, [x19, #96]
   1f480:	ldr	x8, [x19, #88]
   1f484:	cbnz	x8, 1f490 <mpfr_vasnprintf_aux@@Base+0x47dc>
   1f488:	ldrb	w8, [x20]
   1f48c:	tbz	w8, #0, 1f4b8 <mpfr_vasnprintf_aux@@Base+0x4804>
   1f490:	bl	bef0 <localeconv@plt>
   1f494:	ldr	x8, [x0]
   1f498:	ldrb	w8, [x8, #1]
   1f49c:	cbz	w8, 1f4a8 <mpfr_vasnprintf_aux@@Base+0x47f4>
   1f4a0:	mov	w8, #0x2e                  	// #46
   1f4a4:	b	1f4b4 <mpfr_vasnprintf_aux@@Base+0x4800>
   1f4a8:	bl	bef0 <localeconv@plt>
   1f4ac:	ldr	x8, [x0]
   1f4b0:	ldrb	w8, [x8]
   1f4b4:	strb	w8, [x19, #68]
   1f4b8:	ldur	x8, [x29, #-8]
   1f4bc:	mov	w9, #0x1                   	// #1
   1f4c0:	mov	w10, #0x3                   	// #3
   1f4c4:	sub	x11, x8, #0x1
   1f4c8:	sub	x9, x9, x8
   1f4cc:	cmp	x8, #0x0
   1f4d0:	csel	x9, x11, x9, gt
   1f4d4:	cmp	x9, #0xa
   1f4d8:	stur	x11, [x29, #-8]
   1f4dc:	str	x10, [x19, #112]
   1f4e0:	b.cc	1f50c <mpfr_vasnprintf_aux@@Base+0x4858>  // b.lo, b.ul, b.last
   1f4e4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1f4e8:	mov	w8, #0x3                   	// #3
   1f4ec:	movk	x10, #0xcccd
   1f4f0:	umulh	x11, x9, x10
   1f4f4:	cmp	x9, #0x63
   1f4f8:	lsr	x9, x11, #3
   1f4fc:	add	x8, x8, #0x1
   1f500:	b.hi	1f4f0 <mpfr_vasnprintf_aux@@Base+0x483c>  // b.pmore
   1f504:	cmp	x8, #0x3
   1f508:	b.hi	1f510 <mpfr_vasnprintf_aux@@Base+0x485c>  // b.pmore
   1f50c:	mov	w8, #0x4                   	// #4
   1f510:	add	x0, x8, #0x1
   1f514:	str	x8, [x19, #112]
   1f518:	bl	ccd0 <mpfr_allocate_func@plt>
   1f51c:	ldr	x8, [x19, #120]
   1f520:	mov	x20, x0
   1f524:	mov	x21, x8
   1f528:	ldr	x8, [x8, #8]
   1f52c:	cbnz	x8, 1f524 <mpfr_vasnprintf_aux@@Base+0x4870>
   1f530:	mov	w0, #0x10                  	// #16
   1f534:	bl	ccd0 <mpfr_allocate_func@plt>
   1f538:	str	x0, [x21, #8]
   1f53c:	stp	x20, xzr, [x0]
   1f540:	mov	x0, sp
   1f544:	str	x20, [x19, #104]
   1f548:	strb	w23, [sp]
   1f54c:	strb	wzr, [sp, #1]
   1f550:	mov	x19, sp
   1f554:	bl	bb10 <strlen@plt>
   1f558:	mov	w9, #0x2b25                	// #11045
   1f55c:	ldur	x2, [x29, #-8]
   1f560:	add	x8, x19, x0
   1f564:	movk	w9, #0x322e, lsl #16
   1f568:	str	w9, [x8]
   1f56c:	mov	w9, #0x6c32                	// #27698
   1f570:	movk	w9, #0x64, lsl #16
   1f574:	mov	x1, sp
   1f578:	mov	x0, x20
   1f57c:	stur	w9, [x8, #3]
   1f580:	bl	bd60 <sprintf@plt>
   1f584:	asr	w0, w0, #31
   1f588:	ldp	x20, x19, [sp, #112]
   1f58c:	ldp	x22, x21, [sp, #96]
   1f590:	ldp	x24, x23, [sp, #80]
   1f594:	ldp	x26, x25, [sp, #64]
   1f598:	ldp	x29, x30, [sp, #48]
   1f59c:	add	sp, sp, #0x80
   1f5a0:	ret
   1f5a4:	stp	x29, x30, [sp, #-96]!
   1f5a8:	stp	x26, x25, [sp, #32]
   1f5ac:	stp	x24, x23, [sp, #48]
   1f5b0:	stp	x22, x21, [sp, #64]
   1f5b4:	stp	x20, x19, [sp, #80]
   1f5b8:	ldr	x8, [x4, #16]
   1f5bc:	mov	x22, x4
   1f5c0:	mov	x19, x3
   1f5c4:	mov	x20, x2
   1f5c8:	mov	w21, w1
   1f5cc:	mov	x23, x0
   1f5d0:	str	x27, [sp, #16]
   1f5d4:	mov	x29, sp
   1f5d8:	cbnz	x8, 1f694 <mpfr_vasnprintf_aux@@Base+0x49e0>
   1f5dc:	cmp	x20, #0x9
   1f5e0:	b.cc	1f694 <mpfr_vasnprintf_aux@@Base+0x49e0>  // b.lo, b.ul, b.last
   1f5e4:	cmp	w21, #0x25
   1f5e8:	mov	w8, #0x3c                  	// #60
   1f5ec:	mov	w9, #0x56                  	// #86
   1f5f0:	mov	w10, #0x2f                  	// #47
   1f5f4:	csel	w8, w9, w8, lt  // lt = tstop
   1f5f8:	cmp	w21, #0xb
   1f5fc:	adrp	x25, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1f600:	csel	w8, w10, w8, lt  // lt = tstop
   1f604:	adrp	x26, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1f608:	mov	w24, #0x8                   	// #8
   1f60c:	add	x25, x25, #0x959
   1f610:	add	w27, w8, w21
   1f614:	add	x26, x26, #0xa78
   1f618:	mov	w5, #0x1                   	// #1
   1f61c:	mov	x0, xzr
   1f620:	mov	x1, x23
   1f624:	mov	w2, w21
   1f628:	mov	x3, x24
   1f62c:	mov	x4, x19
   1f630:	bl	c4f0 <mpfr_get_str@plt>
   1f634:	mov	x8, x0
   1f638:	ldrb	w9, [x8], #1
   1f63c:	cmp	w9, #0x2d
   1f640:	csel	x8, x0, x8, ne  // ne = any
   1f644:	sub	x9, x8, #0x1
   1f648:	ldrb	w10, [x9, #1]!
   1f64c:	cmp	w10, w27, uxtb
   1f650:	b.eq	1f648 <mpfr_vasnprintf_aux@@Base+0x4994>  // b.none
   1f654:	add	x8, x8, x24
   1f658:	cmp	x9, x8
   1f65c:	b.cc	1f6c8 <mpfr_vasnprintf_aux@@Base+0x4a14>  // b.lo, b.ul, b.last
   1f660:	bl	c880 <mpfr_free_str@plt>
   1f664:	tbnz	x24, #63, 1f678 <mpfr_vasnprintf_aux@@Base+0x49c4>
   1f668:	lsl	x24, x24, #1
   1f66c:	cmp	x24, x20
   1f670:	b.cc	1f618 <mpfr_vasnprintf_aux@@Base+0x4964>  // b.lo, b.ul, b.last
   1f674:	b	1f694 <mpfr_vasnprintf_aux@@Base+0x49e0>
   1f678:	mov	w1, #0x3df                 	// #991
   1f67c:	mov	x0, x25
   1f680:	mov	x2, x26
   1f684:	bl	cb20 <mpfr_assert_fail@plt>
   1f688:	lsl	x24, x24, #1
   1f68c:	cmp	x24, x20
   1f690:	b.cc	1f618 <mpfr_vasnprintf_aux@@Base+0x4964>  // b.lo, b.ul, b.last
   1f694:	ldr	w5, [x22, #28]
   1f698:	mov	x1, x23
   1f69c:	mov	w2, w21
   1f6a0:	mov	x3, x20
   1f6a4:	mov	x4, x19
   1f6a8:	ldp	x20, x19, [sp, #80]
   1f6ac:	ldp	x22, x21, [sp, #64]
   1f6b0:	ldp	x24, x23, [sp, #48]
   1f6b4:	ldp	x26, x25, [sp, #32]
   1f6b8:	ldr	x27, [sp, #16]
   1f6bc:	mov	x0, xzr
   1f6c0:	ldp	x29, x30, [sp], #96
   1f6c4:	b	c4f0 <mpfr_get_str@plt>
   1f6c8:	ldp	x20, x19, [sp, #80]
   1f6cc:	ldp	x22, x21, [sp, #64]
   1f6d0:	ldp	x24, x23, [sp, #48]
   1f6d4:	ldp	x26, x25, [sp, #32]
   1f6d8:	ldr	x27, [sp, #16]
   1f6dc:	ldp	x29, x30, [sp], #96
   1f6e0:	ret
   1f6e4:	sub	sp, sp, #0x50
   1f6e8:	stp	x29, x30, [sp, #32]
   1f6ec:	stp	x20, x19, [sp, #64]
   1f6f0:	ldr	x8, [x0]
   1f6f4:	mov	w9, #0x40                  	// #64
   1f6f8:	mov	x19, x0
   1f6fc:	mov	x0, sp
   1f700:	cmp	x8, #0x40
   1f704:	csel	x1, x8, x9, gt
   1f708:	str	x21, [sp, #48]
   1f70c:	add	x29, sp, #0x20
   1f710:	bl	ca60 <mpfr_init2@plt>
   1f714:	ldr	x0, [x19, #16]
   1f718:	mov	w1, #0xa                   	// #10
   1f71c:	mov	w2, #0x1                   	// #1
   1f720:	bl	cb60 <mpfr_ceil_mul@plt>
   1f724:	sub	x21, x0, #0x1
   1f728:	mov	x20, x0
   1f72c:	mov	x0, sp
   1f730:	mov	w3, #0x2                   	// #2
   1f734:	mov	x1, x21
   1f738:	mov	x2, xzr
   1f73c:	bl	bae0 <mpfr_set_si_2exp@plt>
   1f740:	mov	x0, sp
   1f744:	mov	x2, sp
   1f748:	mov	w1, #0xa                   	// #10
   1f74c:	mov	w3, #0x2                   	// #2
   1f750:	bl	c9f0 <mpfr_ui_pow@plt>
   1f754:	mov	x1, sp
   1f758:	mov	x0, x19
   1f75c:	bl	c990 <mpfr_cmpabs@plt>
   1f760:	sub	x8, x20, #0x2
   1f764:	cmp	w0, #0x0
   1f768:	mov	x0, sp
   1f76c:	csel	x19, x8, x21, lt  // lt = tstop
   1f770:	bl	c0b0 <mpfr_clear@plt>
   1f774:	mov	x0, x19
   1f778:	ldp	x20, x19, [sp, #64]
   1f77c:	ldr	x21, [sp, #48]
   1f780:	ldp	x29, x30, [sp, #32]
   1f784:	add	sp, sp, #0x50
   1f788:	ret

000000000001f78c <mpfr_const_pi_internal@@Base>:
   1f78c:	sub	sp, sp, #0x1b0
   1f790:	stp	x29, x30, [sp, #336]
   1f794:	stp	x28, x27, [sp, #352]
   1f798:	stp	x26, x25, [sp, #368]
   1f79c:	stp	x24, x23, [sp, #384]
   1f7a0:	stp	x22, x21, [sp, #400]
   1f7a4:	stp	x20, x19, [sp, #416]
   1f7a8:	ldr	x22, [x0]
   1f7ac:	mov	x10, #0x1c72                	// #7282
   1f7b0:	movk	x10, #0x71c7, lsl #16
   1f7b4:	movk	x10, #0xc71c, lsl #32
   1f7b8:	add	x9, x22, #0x10
   1f7bc:	mov	w19, w1
   1f7c0:	mov	x20, x0
   1f7c4:	mov	x26, xzr
   1f7c8:	movk	x10, #0x1c71, lsl #48
   1f7cc:	mov	x8, x9
   1f7d0:	add	x29, sp, #0x150
   1f7d4:	smulh	x12, x9, x10
   1f7d8:	add	x11, x26, #0x2
   1f7dc:	add	x12, x12, x12, lsr #63
   1f7e0:	add	x26, x26, #0x1
   1f7e4:	asr	x11, x12, x11
   1f7e8:	add	x8, x8, #0x3
   1f7ec:	add	x9, x9, #0x2
   1f7f0:	cbnz	x11, 1f7d4 <mpfr_const_pi_internal@@Base+0x48>
   1f7f4:	mov	x24, #0xfffffffffffffef1    	// #-271
   1f7f8:	movk	x24, #0x7fff, lsl #48
   1f7fc:	sub	x9, x8, #0xd
   1f800:	cmp	x9, x24
   1f804:	b.gt	1fb90 <mpfr_const_pi_internal@@Base+0x404>
   1f808:	add	x9, x8, #0x3f
   1f80c:	cmp	x8, #0x0
   1f810:	csel	x9, x9, x8, lt  // lt = tstop
   1f814:	asr	x9, x9, #6
   1f818:	add	x23, x9, #0x1
   1f81c:	add	x9, x23, x23, lsl #2
   1f820:	cmp	x9, #0x11
   1f824:	add	x28, x8, #0x1
   1f828:	b.lt	1f83c <mpfr_const_pi_internal@@Base+0xb0>  // b.tstop
   1f82c:	lsl	x21, x9, #3
   1f830:	mov	x0, x21
   1f834:	bl	ccd0 <mpfr_allocate_func@plt>
   1f838:	b	1f848 <mpfr_const_pi_internal@@Base+0xbc>
   1f83c:	add	x8, sp, #0x18
   1f840:	mov	x21, xzr
   1f844:	add	x0, x8, #0x10
   1f848:	add	x8, x0, x23, lsl #3
   1f84c:	add	x9, x0, x23, lsl #4
   1f850:	mov	w11, #0x18                  	// #24
   1f854:	add	x10, x0, x23, lsl #5
   1f858:	cmp	w19, #0x0
   1f85c:	stp	x8, x28, [x29, #-48]
   1f860:	sub	x8, x24, x26
   1f864:	stp	x9, x28, [x29, #-80]
   1f868:	mov	w9, #0x40                  	// #64
   1f86c:	stp	x21, x0, [sp, #24]
   1f870:	mov	w21, #0x1                   	// #1
   1f874:	str	x9, [sp, #8]
   1f878:	madd	x9, x23, x11, x0
   1f87c:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   1f880:	str	x10, [sp, #192]
   1f884:	cinc	x10, x22, eq  // eq = none
   1f888:	add	x8, x8, #0xd
   1f88c:	stur	x0, [x29, #-16]
   1f890:	stp	x9, x28, [x29, #-112]
   1f894:	stur	x28, [x29, #-136]
   1f898:	str	x28, [sp, #168]
   1f89c:	stur	w21, [x29, #-32]
   1f8a0:	stur	w21, [x29, #-64]
   1f8a4:	stur	w21, [x29, #-96]
   1f8a8:	stur	w21, [x29, #-128]
   1f8ac:	str	x10, [sp, #16]
   1f8b0:	str	x8, [sp]
   1f8b4:	sub	x0, x29, #0x28
   1f8b8:	mov	w1, #0x1                   	// #1
   1f8bc:	mov	x2, xzr
   1f8c0:	mov	w3, wzr
   1f8c4:	str	w21, [sp, #176]
   1f8c8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   1f8cc:	sub	x0, x29, #0x48
   1f8d0:	mov	w1, #0x1                   	// #1
   1f8d4:	mov	x2, xzr
   1f8d8:	mov	w3, wzr
   1f8dc:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   1f8e0:	sub	x0, x29, #0x68
   1f8e4:	mov	w1, #0x1                   	// #1
   1f8e8:	mov	x2, #0xffffffffffffffff    	// #-1
   1f8ec:	mov	w3, wzr
   1f8f0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   1f8f4:	sub	x0, x29, #0x88
   1f8f8:	mov	w1, #0x1                   	// #1
   1f8fc:	mov	x2, #0xfffffffffffffffe    	// #-2
   1f900:	mov	w3, wzr
   1f904:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   1f908:	mov	x25, xzr
   1f90c:	sub	x24, x28, #0x6
   1f910:	add	x27, x28, #0x1
   1f914:	add	x0, sp, #0xa8
   1f918:	sub	x1, x29, #0x48
   1f91c:	sub	x2, x29, #0x68
   1f920:	mov	w3, wzr
   1f924:	bl	c1e0 <mpfr_add@plt>
   1f928:	add	x0, sp, #0xa8
   1f92c:	add	x1, sp, #0xa8
   1f930:	mov	w2, #0x2                   	// #2
   1f934:	mov	w3, wzr
   1f938:	bl	c8f0 <mpfr_div_2ui@plt>
   1f93c:	sub	x0, x29, #0x68
   1f940:	sub	x1, x29, #0x68
   1f944:	mov	w2, wzr
   1f948:	bl	c920 <mpfr_sqrt@plt>
   1f94c:	sub	x0, x29, #0x28
   1f950:	sub	x1, x29, #0x28
   1f954:	sub	x2, x29, #0x68
   1f958:	mov	w3, wzr
   1f95c:	bl	c1e0 <mpfr_add@plt>
   1f960:	sub	x0, x29, #0x28
   1f964:	sub	x1, x29, #0x28
   1f968:	mov	w2, #0x1                   	// #1
   1f96c:	mov	w3, wzr
   1f970:	bl	c8f0 <mpfr_div_2ui@plt>
   1f974:	sub	x0, x29, #0x48
   1f978:	sub	x1, x29, #0x28
   1f97c:	sub	x2, x29, #0x28
   1f980:	mov	w3, wzr
   1f984:	bl	bda0 <mpfr_mul@plt>
   1f988:	sub	x0, x29, #0x68
   1f98c:	sub	x1, x29, #0x48
   1f990:	add	x2, sp, #0xa8
   1f994:	mov	w3, wzr
   1f998:	bl	bbc0 <mpfr_sub@plt>
   1f99c:	sub	x0, x29, #0x68
   1f9a0:	sub	x1, x29, #0x68
   1f9a4:	mov	w2, #0x1                   	// #1
   1f9a8:	mov	w3, wzr
   1f9ac:	bl	c2c0 <mpfr_mul_2ui@plt>
   1f9b0:	add	x0, sp, #0xa8
   1f9b4:	sub	x1, x29, #0x48
   1f9b8:	sub	x2, x29, #0x68
   1f9bc:	mov	w3, wzr
   1f9c0:	bl	bbc0 <mpfr_sub@plt>
   1f9c4:	ldr	x8, [sp, #184]
   1f9c8:	add	x0, sp, #0xa8
   1f9cc:	add	x1, sp, #0xa8
   1f9d0:	mov	x2, x25
   1f9d4:	cmp	x8, x23
   1f9d8:	mov	w3, wzr
   1f9dc:	csneg	x22, x28, x8, eq  // eq = none
   1f9e0:	bl	c2c0 <mpfr_mul_2ui@plt>
   1f9e4:	sub	x0, x29, #0x88
   1f9e8:	sub	x1, x29, #0x88
   1f9ec:	add	x2, sp, #0xa8
   1f9f0:	mov	w3, wzr
   1f9f4:	bl	bbc0 <mpfr_sub@plt>
   1f9f8:	sub	x27, x27, #0x1
   1f9fc:	add	x25, x25, #0x1
   1fa00:	cmp	x22, x27
   1fa04:	sub	x24, x24, #0x2
   1fa08:	b.lt	1f914 <mpfr_const_pi_internal@@Base+0x188>  // b.tstop
   1fa0c:	sub	x0, x29, #0x48
   1fa10:	sub	x1, x29, #0x68
   1fa14:	sub	x2, x29, #0x88
   1fa18:	mov	w3, wzr
   1fa1c:	bl	c610 <mpfr_div@plt>
   1fa20:	ldur	x8, [x29, #-56]
   1fa24:	mov	x22, #0xfffffffffffffef1    	// #-271
   1fa28:	movk	x22, #0x7fff, lsl #48
   1fa2c:	add	x9, x22, #0x113
   1fa30:	cmp	x8, x9
   1fa34:	b.lt	1fa68 <mpfr_const_pi_internal@@Base+0x2dc>  // b.tstop
   1fa38:	ldur	x8, [x29, #-72]
   1fa3c:	ldur	x0, [x29, #-48]
   1fa40:	ldr	x3, [sp, #16]
   1fa44:	mov	x2, x24
   1fa48:	sub	x9, x8, #0x1
   1fa4c:	add	x8, x8, #0x3e
   1fa50:	cmp	x9, #0x0
   1fa54:	csel	x8, x8, x9, lt  // lt = tstop
   1fa58:	asr	x8, x8, #6
   1fa5c:	add	x1, x8, #0x1
   1fa60:	bl	c370 <mpfr_round_p@plt>
   1fa64:	cbnz	w0, 1fb44 <mpfr_const_pi_internal@@Base+0x3b8>
   1fa68:	ldp	x8, x24, [sp]
   1fa6c:	sub	x8, x8, x28
   1fa70:	cmp	x24, x8
   1fa74:	b.gt	1fb28 <mpfr_const_pi_internal@@Base+0x39c>
   1fa78:	add	x8, x28, x24
   1fa7c:	add	x8, x26, x8
   1fa80:	add	x28, x8, #0x1
   1fa84:	add	x10, x22, #0xe
   1fa88:	add	x9, x8, #0x2
   1fa8c:	cmp	x28, #0x0
   1fa90:	csinc	x9, x9, x8, lt  // lt = tstop
   1fa94:	cmp	x28, x10
   1fa98:	b.gt	1fb90 <mpfr_const_pi_internal@@Base+0x404>
   1fa9c:	asr	x9, x9, #1
   1faa0:	str	x9, [sp, #8]
   1faa4:	add	x9, x8, #0x3f
   1faa8:	cmp	x8, #0x0
   1faac:	csel	x8, x9, x8, lt  // lt = tstop
   1fab0:	ldr	x1, [sp, #24]
   1fab4:	asr	x8, x8, #6
   1fab8:	add	x24, x8, #0x1
   1fabc:	add	x8, x24, x24, lsl #2
   1fac0:	lsl	x2, x8, #3
   1fac4:	str	x2, [sp, #24]
   1fac8:	cbz	x1, 1fad8 <mpfr_const_pi_internal@@Base+0x34c>
   1facc:	ldr	x0, [sp, #32]
   1fad0:	bl	c200 <mpfr_reallocate_func@plt>
   1fad4:	b	1fae0 <mpfr_const_pi_internal@@Base+0x354>
   1fad8:	mov	x0, x2
   1fadc:	bl	ccd0 <mpfr_allocate_func@plt>
   1fae0:	mov	w10, #0x18                  	// #24
   1fae4:	add	x8, x0, x24, lsl #3
   1fae8:	add	x9, x0, x24, lsl #4
   1faec:	madd	x10, x24, x10, x0
   1faf0:	add	x11, x0, x24, lsl #5
   1faf4:	str	x0, [sp, #32]
   1faf8:	stur	x0, [x29, #-16]
   1fafc:	stp	x8, x28, [x29, #-48]
   1fb00:	stur	w21, [x29, #-32]
   1fb04:	stp	x9, x28, [x29, #-80]
   1fb08:	stur	w21, [x29, #-64]
   1fb0c:	stp	x10, x28, [x29, #-112]
   1fb10:	stur	w21, [x29, #-96]
   1fb14:	stur	x28, [x29, #-136]
   1fb18:	stur	w21, [x29, #-128]
   1fb1c:	str	x28, [sp, #168]
   1fb20:	str	x11, [sp, #192]
   1fb24:	b	1f8b4 <mpfr_const_pi_internal@@Base+0x128>
   1fb28:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1fb2c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   1fb30:	mov	w1, #0x6c                  	// #108
   1fb34:	add	x0, x0, #0xada
   1fb38:	add	x2, x2, #0xcf6
   1fb3c:	bl	cb20 <mpfr_assert_fail@plt>
   1fb40:	b	1fa78 <mpfr_const_pi_internal@@Base+0x2ec>
   1fb44:	ldur	w3, [x29, #-64]
   1fb48:	sub	x1, x29, #0x48
   1fb4c:	mov	x0, x20
   1fb50:	mov	w2, w19
   1fb54:	bl	c690 <mpfr_set4@plt>
   1fb58:	ldr	x1, [sp, #24]
   1fb5c:	mov	w19, w0
   1fb60:	cbz	x1, 1fb6c <mpfr_const_pi_internal@@Base+0x3e0>
   1fb64:	ldr	x0, [sp, #32]
   1fb68:	bl	cc00 <mpfr_free_func@plt>
   1fb6c:	mov	w0, w19
   1fb70:	ldp	x20, x19, [sp, #416]
   1fb74:	ldp	x22, x21, [sp, #400]
   1fb78:	ldp	x24, x23, [sp, #384]
   1fb7c:	ldp	x26, x25, [sp, #368]
   1fb80:	ldp	x28, x27, [sp, #352]
   1fb84:	ldp	x29, x30, [sp, #336]
   1fb88:	add	sp, sp, #0x1b0
   1fb8c:	ret
   1fb90:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000001fb94 <mpfr_const_pi@@Base>:
   1fb94:	stp	x29, x30, [sp, #-16]!
   1fb98:	mov	x29, sp
   1fb9c:	mov	w2, w1
   1fba0:	mov	x8, x0
   1fba4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1fba8:	ldr	x1, [x0, #2688]
   1fbac:	add	x0, x0, #0xa80
   1fbb0:	blr	x1
   1fbb4:	mrs	x9, tpidr_el0
   1fbb8:	add	x1, x9, x0
   1fbbc:	mov	x0, x8
   1fbc0:	ldp	x29, x30, [sp], #16
   1fbc4:	b	c380 <mpfr_cache@plt>

000000000001fbc8 <mpfr_pow_general@@Base>:
   1fbc8:	sub	sp, sp, #0x150
   1fbcc:	stp	x29, x30, [sp, #240]
   1fbd0:	stp	x28, x27, [sp, #256]
   1fbd4:	stp	x26, x25, [sp, #272]
   1fbd8:	stp	x24, x23, [sp, #288]
   1fbdc:	stp	x22, x21, [sp, #304]
   1fbe0:	stp	x20, x19, [sp, #320]
   1fbe4:	ldr	x8, [x1]
   1fbe8:	mov	w9, #0x1                   	// #1
   1fbec:	ldr	x22, [x0]
   1fbf0:	str	w9, [sp, #48]
   1fbf4:	str	x8, [sp, #40]
   1fbf8:	ldr	q0, [x1, #16]
   1fbfc:	mov	w21, w3
   1fc00:	mov	x19, x0
   1fc04:	mov	x24, x2
   1fc08:	stur	q0, [sp, #56]
   1fc0c:	ldr	w8, [x1, #8]
   1fc10:	add	x29, sp, #0xf0
   1fc14:	str	x5, [sp, #16]
   1fc18:	str	w4, [sp]
   1fc1c:	tbnz	w8, #31, 20200 <mpfr_pow_general@@Base+0x638>
   1fc20:	str	wzr, [sp, #28]
   1fc24:	subs	x23, x22, #0x1
   1fc28:	add	x20, x22, #0x9
   1fc2c:	b.eq	20238 <mpfr_pow_general@@Base+0x670>  // b.none
   1fc30:	b.le	20290 <mpfr_pow_general@@Base+0x6c8>
   1fc34:	clz	x8, x23
   1fc38:	mov	w9, #0x40                  	// #64
   1fc3c:	sub	x8, x9, x8
   1fc40:	add	x25, x20, x8
   1fc44:	sub	x0, x29, #0x68
   1fc48:	mov	x1, x25
   1fc4c:	bl	ca60 <mpfr_init2@plt>
   1fc50:	cmp	w21, #0x0
   1fc54:	mov	w8, #0x40                  	// #64
   1fc58:	str	wzr, [sp, #4]
   1fc5c:	mov	w0, wzr
   1fc60:	str	x8, [sp, #8]
   1fc64:	mov	w26, #0x2                   	// #2
   1fc68:	mrs	x20, tpidr_el0
   1fc6c:	cinc	x8, x22, eq  // eq = none
   1fc70:	str	x8, [sp, #32]
   1fc74:	mov	w23, w0
   1fc78:	ldr	w8, [x24, #8]
   1fc7c:	sub	x0, x29, #0x68
   1fc80:	add	x1, sp, #0x28
   1fc84:	cmp	w8, #0x0
   1fc88:	cinc	w2, w26, lt  // lt = tstop
   1fc8c:	bl	c0d0 <mpfr_log@plt>
   1fc90:	sub	x0, x29, #0x68
   1fc94:	sub	x2, x29, #0x68
   1fc98:	mov	w3, #0x2                   	// #2
   1fc9c:	mov	x1, x24
   1fca0:	bl	bda0 <mpfr_mul@plt>
   1fca4:	cbz	w23, 1fcf0 <mpfr_pow_general@@Base+0x128>
   1fca8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1fcac:	ldr	x1, [x0, #2624]
   1fcb0:	add	x0, x0, #0xa40
   1fcb4:	blr	x1
   1fcb8:	add	x1, x20, x0
   1fcbc:	add	x0, sp, #0x68
   1fcc0:	mov	w2, #0x3                   	// #3
   1fcc4:	bl	c380 <mpfr_cache@plt>
   1fcc8:	add	x0, sp, #0x68
   1fccc:	add	x1, sp, #0x68
   1fcd0:	add	x2, sp, #0x48
   1fcd4:	mov	w3, #0x3                   	// #3
   1fcd8:	bl	bda0 <mpfr_mul@plt>
   1fcdc:	sub	x0, x29, #0x68
   1fce0:	sub	x1, x29, #0x68
   1fce4:	add	x2, sp, #0x68
   1fce8:	mov	w3, #0x2                   	// #2
   1fcec:	bl	bbc0 <mpfr_sub@plt>
   1fcf0:	ldur	x26, [x29, #-88]
   1fcf4:	ldr	x27, [sp, #88]
   1fcf8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1fcfc:	ldr	x1, [x0, #2640]
   1fd00:	add	x0, x0, #0xa50
   1fd04:	blr	x1
   1fd08:	mov	x28, x0
   1fd0c:	str	wzr, [x20, x0]
   1fd10:	sub	x0, x29, #0x68
   1fd14:	sub	x1, x29, #0x68
   1fd18:	mov	w2, wzr
   1fd1c:	bl	c740 <mpfr_exp@plt>
   1fd20:	ldur	x8, [x29, #-88]
   1fd24:	mov	x9, #0xfffffffffffffeff    	// #-257
   1fd28:	movk	x9, #0x7fff, lsl #48
   1fd2c:	add	x9, x9, #0x105
   1fd30:	cmp	x8, x9
   1fd34:	b.lt	1fd40 <mpfr_pow_general@@Base+0x178>  // b.tstop
   1fd38:	ldr	w9, [x20, x28]
   1fd3c:	tbz	w9, #0, 1fe88 <mpfr_pow_general@@Base+0x2c0>
   1fd40:	cbnz	w23, 1fd78 <mpfr_pow_general@@Base+0x1b0>
   1fd44:	mov	x9, #0xfffffffffffffeff    	// #-257
   1fd48:	movk	x9, #0x7fff, lsl #48
   1fd4c:	add	x9, x9, #0x103
   1fd50:	cmp	x8, x9
   1fd54:	mov	w26, #0x2                   	// #2
   1fd58:	b.eq	1fd98 <mpfr_pow_general@@Base+0x1d0>  // b.none
   1fd5c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1fd60:	cmp	x8, x9
   1fd64:	b.eq	1fdc0 <mpfr_pow_general@@Base+0x1f8>  // b.none
   1fd68:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1fd6c:	cmp	x8, x9
   1fd70:	b.ne	1fe1c <mpfr_pow_general@@Base+0x254>  // b.any
   1fd74:	b	202ac <mpfr_pow_general@@Base+0x6e4>
   1fd78:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1fd7c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1fd80:	mov	w1, #0xcd                  	// #205
   1fd84:	add	x0, x0, #0xae5
   1fd88:	add	x2, x2, #0xaf4
   1fd8c:	bl	cb20 <mpfr_assert_fail@plt>
   1fd90:	ldur	x8, [x29, #-88]
   1fd94:	b	1fd44 <mpfr_pow_general@@Base+0x17c>
   1fd98:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1fd9c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   1fda0:	mov	w1, #0xce                  	// #206
   1fda4:	add	x0, x0, #0xae5
   1fda8:	add	x2, x2, #0xb00
   1fdac:	bl	cb20 <mpfr_assert_fail@plt>
   1fdb0:	ldur	x8, [x29, #-88]
   1fdb4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1fdb8:	cmp	x8, x9
   1fdbc:	b.ne	1fd68 <mpfr_pow_general@@Base+0x1a0>  // b.any
   1fdc0:	ldr	w8, [x24, #8]
   1fdc4:	sub	x0, x29, #0x68
   1fdc8:	add	x1, sp, #0x28
   1fdcc:	cmp	w8, #0x0
   1fdd0:	cinc	w2, w26, ge  // ge = tcont
   1fdd4:	bl	c0d0 <mpfr_log@plt>
   1fdd8:	sub	x0, x29, #0x68
   1fddc:	sub	x2, x29, #0x68
   1fde0:	mov	w3, #0x3                   	// #3
   1fde4:	mov	x1, x24
   1fde8:	bl	bda0 <mpfr_mul@plt>
   1fdec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   1fdf0:	ldr	x1, [x0, #2640]
   1fdf4:	add	x0, x0, #0xa50
   1fdf8:	blr	x1
   1fdfc:	mov	x28, x0
   1fe00:	str	wzr, [x20, x0]
   1fe04:	sub	x0, x29, #0x68
   1fe08:	sub	x1, x29, #0x68
   1fe0c:	mov	w2, #0x3                   	// #3
   1fe10:	bl	c740 <mpfr_exp@plt>
   1fe14:	ldrb	w8, [x20, x28]
   1fe18:	tbnz	w8, #1, 202e4 <mpfr_pow_general@@Base+0x71c>
   1fe1c:	cmp	x25, #0x3f
   1fe20:	b.gt	1fe34 <mpfr_pow_general@@Base+0x26c>
   1fe24:	sub	x0, x29, #0x68
   1fe28:	mov	w1, #0x40                  	// #64
   1fe2c:	bl	bf20 <mpfr_set_prec@plt>
   1fe30:	mov	w25, #0x40                  	// #64
   1fe34:	add	x0, sp, #0x68
   1fe38:	mov	x1, x25
   1fe3c:	bl	ca60 <mpfr_init2@plt>
   1fe40:	add	x0, sp, #0x48
   1fe44:	mov	w1, #0x40                  	// #64
   1fe48:	bl	ca60 <mpfr_init2@plt>
   1fe4c:	add	x0, sp, #0x48
   1fe50:	add	x1, sp, #0x28
   1fe54:	mov	w2, wzr
   1fe58:	bl	c210 <mpfr_log2@plt>
   1fe5c:	add	x0, sp, #0x48
   1fe60:	add	x2, sp, #0x48
   1fe64:	mov	x1, x24
   1fe68:	mov	w3, wzr
   1fe6c:	bl	bda0 <mpfr_mul@plt>
   1fe70:	add	x0, sp, #0x48
   1fe74:	add	x1, sp, #0x48
   1fe78:	mov	w2, #0xffffffff            	// #-1
   1fe7c:	bl	c300 <mpfr_rint@plt>
   1fe80:	mov	w23, #0x1                   	// #1
   1fe84:	b	1fc78 <mpfr_pow_general@@Base+0xb0>
   1fe88:	add	x8, x26, #0x3
   1fe8c:	cmn	x26, #0x2
   1fe90:	ldur	x9, [x29, #-104]
   1fe94:	csinc	x8, x8, xzr, gt
   1fe98:	cmp	x27, x8
   1fe9c:	csel	x10, x27, x8, gt
   1fea0:	cmp	w23, #0x0
   1fea4:	csinc	x8, x8, x10, eq  // eq = none
   1fea8:	sub	x10, x9, #0x1
   1feac:	ldur	x0, [x29, #-80]
   1feb0:	add	x9, x9, #0x3e
   1feb4:	cmp	x10, #0x0
   1feb8:	ldr	x3, [sp, #32]
   1febc:	csel	x9, x9, x10, lt  // lt = tstop
   1fec0:	asr	x9, x9, #6
   1fec4:	add	x1, x9, #0x1
   1fec8:	sub	x2, x25, x8
   1fecc:	bl	c370 <mpfr_round_p@plt>
   1fed0:	cbnz	w0, 200d4 <mpfr_pow_general@@Base+0x50c>
   1fed4:	ldp	w8, w9, [sp]
   1fed8:	orr	w8, w9, w8
   1fedc:	cbnz	w8, 2005c <mpfr_pow_general@@Base+0x494>
   1fee0:	ldr	w8, [x24, #8]
   1fee4:	tbnz	w8, #31, 20054 <mpfr_pow_general@@Base+0x48c>
   1fee8:	sub	x0, x29, #0x28
   1feec:	bl	bfe0 <mpfr_mpz_init@plt>
   1fef0:	sub	x0, x29, #0x28
   1fef4:	mov	x1, x24
   1fef8:	bl	caa0 <mpfr_get_z_2exp@plt>
   1fefc:	mov	x26, x0
   1ff00:	sub	x0, x29, #0x28
   1ff04:	mov	x1, xzr
   1ff08:	bl	baf0 <__gmpz_scan1@plt>
   1ff0c:	mov	x28, x0
   1ff10:	sub	x0, x29, #0x28
   1ff14:	sub	x1, x29, #0x28
   1ff18:	mov	x2, x28
   1ff1c:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   1ff20:	sub	x0, x29, #0x18
   1ff24:	add	x27, x28, x26
   1ff28:	bl	bfe0 <mpfr_mpz_init@plt>
   1ff2c:	sub	x0, x29, #0x18
   1ff30:	add	x1, sp, #0x28
   1ff34:	bl	caa0 <mpfr_get_z_2exp@plt>
   1ff38:	mov	x26, x0
   1ff3c:	sub	x0, x29, #0x18
   1ff40:	mov	x1, xzr
   1ff44:	bl	baf0 <__gmpz_scan1@plt>
   1ff48:	mov	x28, x0
   1ff4c:	sub	x0, x29, #0x18
   1ff50:	sub	x1, x29, #0x18
   1ff54:	mov	x2, x28
   1ff58:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   1ff5c:	add	x26, x28, x26
   1ff60:	cbz	x27, 1ffcc <mpfr_pow_general@@Base+0x404>
   1ff64:	tbz	w26, #0, 1ff7c <mpfr_pow_general@@Base+0x3b4>
   1ff68:	sub	x0, x29, #0x18
   1ff6c:	sub	x1, x29, #0x18
   1ff70:	mov	w2, #0x1                   	// #1
   1ff74:	bl	c230 <__gmpz_mul_2exp@plt>
   1ff78:	sub	x26, x26, #0x1
   1ff7c:	ldur	w1, [x29, #-20]
   1ff80:	cmp	w1, #0x1
   1ff84:	b.lt	1ffb8 <mpfr_pow_general@@Base+0x3f0>  // b.tstop
   1ff88:	ldur	x0, [x29, #-16]
   1ff8c:	bl	ca20 <__gmpn_perfect_square_p@plt>
   1ff90:	cbz	w0, 1ffc4 <mpfr_pow_general@@Base+0x3fc>
   1ff94:	sub	x0, x29, #0x18
   1ff98:	sub	x1, x29, #0x18
   1ff9c:	bl	bcb0 <__gmpz_sqrt@plt>
   1ffa0:	cmp	x26, #0x0
   1ffa4:	cinc	x8, x26, lt  // lt = tstop
   1ffa8:	adds	x27, x27, #0x1
   1ffac:	asr	x26, x8, #1
   1ffb0:	b.cc	1ff64 <mpfr_pow_general@@Base+0x39c>  // b.lo, b.ul, b.last
   1ffb4:	b	1ffcc <mpfr_pow_general@@Base+0x404>
   1ffb8:	mvn	w8, w1
   1ffbc:	lsr	w0, w8, #31
   1ffc0:	cbnz	w0, 1ff94 <mpfr_pow_general@@Base+0x3cc>
   1ffc4:	mov	w26, #0x1                   	// #1
   1ffc8:	b	20040 <mpfr_pow_general@@Base+0x478>
   1ffcc:	ldur	w8, [x29, #-20]
   1ffd0:	ldur	x9, [x29, #-16]
   1ffd4:	sub	x0, x29, #0x48
   1ffd8:	cmp	w8, #0x0
   1ffdc:	cneg	w8, w8, mi  // mi = first
   1ffe0:	add	x9, x9, w8, uxtw #3
   1ffe4:	ldur	x9, [x9, #-8]
   1ffe8:	lsl	x8, x8, #6
   1ffec:	clz	x9, x9
   1fff0:	sub	x1, x8, x9
   1fff4:	bl	ca60 <mpfr_init2@plt>
   1fff8:	sub	x0, x29, #0x48
   1fffc:	sub	x1, x29, #0x18
   20000:	mov	w2, wzr
   20004:	bl	c250 <mpfr_set_z@plt>
   20008:	sub	x0, x29, #0x48
   2000c:	sub	x1, x29, #0x48
   20010:	mov	x2, x26
   20014:	mov	w3, wzr
   20018:	bl	bbe0 <mpfr_mul_2si@plt>
   2001c:	sub	x1, x29, #0x48
   20020:	sub	x2, x29, #0x28
   20024:	mov	x0, x19
   20028:	mov	w3, w21
   2002c:	bl	bf40 <mpfr_pow_z@plt>
   20030:	mov	w22, w0
   20034:	sub	x0, x29, #0x48
   20038:	bl	c0b0 <mpfr_clear@plt>
   2003c:	mov	w26, wzr
   20040:	sub	x0, x29, #0x18
   20044:	bl	c1b0 <mpfr_mpz_clear@plt>
   20048:	sub	x0, x29, #0x28
   2004c:	bl	c1b0 <mpfr_mpz_clear@plt>
   20050:	cbz	w26, 200ec <mpfr_pow_general@@Base+0x524>
   20054:	mov	w8, #0x1                   	// #1
   20058:	str	w8, [sp, #4]
   2005c:	ldr	x9, [sp, #8]
   20060:	mov	x8, #0xfffffffffffffeff    	// #-257
   20064:	movk	x8, #0x7fff, lsl #48
   20068:	sub	x8, x8, x25
   2006c:	mov	w26, #0x2                   	// #2
   20070:	cmp	x9, x8
   20074:	b.gt	200b4 <mpfr_pow_general@@Base+0x4ec>
   20078:	add	x25, x25, x9
   2007c:	cmp	x25, #0x0
   20080:	cinc	x8, x25, lt  // lt = tstop
   20084:	asr	x8, x8, #1
   20088:	sub	x0, x29, #0x68
   2008c:	mov	x1, x25
   20090:	str	x8, [sp, #8]
   20094:	bl	bf20 <mpfr_set_prec@plt>
   20098:	mov	w0, wzr
   2009c:	cbz	w23, 1fc74 <mpfr_pow_general@@Base+0xac>
   200a0:	add	x0, sp, #0x68
   200a4:	mov	x1, x25
   200a8:	bl	bf20 <mpfr_set_prec@plt>
   200ac:	mov	w0, w23
   200b0:	b	1fc74 <mpfr_pow_general@@Base+0xac>
   200b4:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   200b8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   200bc:	mov	w1, #0x113                 	// #275
   200c0:	add	x0, x0, #0xae5
   200c4:	add	x2, x2, #0xb39
   200c8:	bl	cb20 <mpfr_assert_fail@plt>
   200cc:	ldr	x9, [sp, #8]
   200d0:	b	20078 <mpfr_pow_general@@Base+0x4b0>
   200d4:	ldur	w3, [x29, #-96]
   200d8:	sub	x1, x29, #0x68
   200dc:	mov	x0, x19
   200e0:	mov	w2, w21
   200e4:	bl	c690 <mpfr_set4@plt>
   200e8:	mov	w22, w0
   200ec:	cbz	w23, 201c0 <mpfr_pow_general@@Base+0x5f8>
   200f0:	add	x0, sp, #0x48
   200f4:	mov	w1, wzr
   200f8:	bl	c1d0 <mpfr_get_si@plt>
   200fc:	mov	x23, x0
   20100:	cbnz	w21, 20154 <mpfr_pow_general@@Base+0x58c>
   20104:	tbz	w22, #31, 20154 <mpfr_pow_general@@Base+0x58c>
   20108:	tbz	x23, #63, 20154 <mpfr_pow_general@@Base+0x58c>
   2010c:	ldr	x8, [x19, #16]
   20110:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20114:	ldr	x1, [x0, #2576]
   20118:	add	x0, x0, #0xa10
   2011c:	blr	x1
   20120:	ldr	x9, [x20, x0]
   20124:	mvn	x10, x23
   20128:	add	x9, x9, x10
   2012c:	cmp	x8, x9
   20130:	b.ne	20154 <mpfr_pow_general@@Base+0x58c>  // b.any
   20134:	mov	x0, x19
   20138:	bl	bf50 <mpfr_powerof2_raw@plt>
   2013c:	cbz	w0, 20154 <mpfr_pow_general@@Base+0x58c>
   20140:	ldr	x8, [x19]
   20144:	cmp	x8, #0x2
   20148:	b.lt	20240 <mpfr_pow_general@@Base+0x678>  // b.tstop
   2014c:	mov	x0, x19
   20150:	bl	c160 <mpfr_nextabove@plt>
   20154:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20158:	ldr	x1, [x0, #2640]
   2015c:	add	x0, x0, #0xa50
   20160:	blr	x1
   20164:	str	wzr, [x20, x0]
   20168:	mov	x0, x19
   2016c:	mov	x1, x19
   20170:	mov	x2, x23
   20174:	mov	w3, w21
   20178:	bl	bbe0 <mpfr_mul_2si@plt>
   2017c:	mov	w21, w0
   20180:	cbz	w21, 201b0 <mpfr_pow_general@@Base+0x5e8>
   20184:	ldr	x10, [sp, #16]
   20188:	cbz	x10, 201ac <mpfr_pow_general@@Base+0x5e4>
   2018c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20190:	ldr	x1, [x0, #2640]
   20194:	add	x0, x0, #0xa50
   20198:	blr	x1
   2019c:	ldr	w8, [x20, x0]
   201a0:	ldr	w9, [x10]
   201a4:	orr	w8, w9, w8
   201a8:	str	w8, [x10]
   201ac:	mov	w22, w21
   201b0:	add	x0, sp, #0x68
   201b4:	add	x1, sp, #0x48
   201b8:	mov	x2, xzr
   201bc:	bl	c1f0 <mpfr_clears@plt>
   201c0:	sub	x0, x29, #0x68
   201c4:	bl	c0b0 <mpfr_clear@plt>
   201c8:	ldr	w8, [sp, #28]
   201cc:	cbz	w8, 201dc <mpfr_pow_general@@Base+0x614>
   201d0:	mov	w8, #0xffffffff            	// #-1
   201d4:	neg	w22, w22
   201d8:	str	w8, [x19, #8]
   201dc:	mov	w0, w22
   201e0:	ldp	x20, x19, [sp, #320]
   201e4:	ldp	x22, x21, [sp, #304]
   201e8:	ldp	x24, x23, [sp, #288]
   201ec:	ldp	x26, x25, [sp, #272]
   201f0:	ldp	x28, x27, [sp, #256]
   201f4:	ldp	x29, x30, [sp, #240]
   201f8:	add	sp, sp, #0x150
   201fc:	ret
   20200:	mov	x0, x24
   20204:	bl	cc80 <mpfr_odd_p@plt>
   20208:	cbz	w0, 1fc20 <mpfr_pow_general@@Base+0x58>
   2020c:	cmp	w21, #0x3
   20210:	mov	w8, #0x2                   	// #2
   20214:	mov	w9, #0x3                   	// #3
   20218:	csel	w8, w8, w21, eq  // eq = none
   2021c:	cmp	w21, #0x2
   20220:	csel	w21, w9, w8, eq  // eq = none
   20224:	mov	w8, #0x1                   	// #1
   20228:	str	w8, [sp, #28]
   2022c:	subs	x23, x22, #0x1
   20230:	add	x20, x22, #0x9
   20234:	b.ne	1fc30 <mpfr_pow_general@@Base+0x68>  // b.any
   20238:	mov	x8, xzr
   2023c:	b	1fc40 <mpfr_pow_general@@Base+0x78>
   20240:	add	x1, x8, #0x1
   20244:	sub	x0, x29, #0x48
   20248:	bl	ca60 <mpfr_init2@plt>
   2024c:	ldr	w3, [x19, #8]
   20250:	sub	x0, x29, #0x48
   20254:	mov	w2, #0x1                   	// #1
   20258:	mov	x1, x19
   2025c:	bl	c690 <mpfr_set4@plt>
   20260:	sub	x0, x29, #0x48
   20264:	bl	c160 <mpfr_nextabove@plt>
   20268:	sub	x1, x29, #0x48
   2026c:	mov	x0, x19
   20270:	mov	x2, x23
   20274:	mov	w3, wzr
   20278:	bl	bbe0 <mpfr_mul_2si@plt>
   2027c:	mov	w21, w0
   20280:	sub	x0, x29, #0x48
   20284:	bl	c0b0 <mpfr_clear@plt>
   20288:	cbnz	w21, 20184 <mpfr_pow_general@@Base+0x5bc>
   2028c:	b	201b0 <mpfr_pow_general@@Base+0x5e8>
   20290:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20294:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20298:	add	x0, x0, #0xae5
   2029c:	add	x2, x2, #0xaeb
   202a0:	mov	w1, #0x9f                  	// #159
   202a4:	bl	cb20 <mpfr_assert_fail@plt>
   202a8:	b	1fc34 <mpfr_pow_general@@Base+0x6c>
   202ac:	cmp	w21, #0x0
   202b0:	csinc	w1, w21, wzr, ne  // ne = any
   202b4:	mov	w2, #0x1                   	// #1
   202b8:	mov	x0, x19
   202bc:	bl	c3c0 <mpfr_underflow@plt>
   202c0:	ldr	x8, [sp, #16]
   202c4:	mov	w22, w0
   202c8:	cbz	x8, 200ec <mpfr_pow_general@@Base+0x524>
   202cc:	ldr	x10, [sp, #16]
   202d0:	mov	w9, #0x9                   	// #9
   202d4:	ldr	w8, [x10]
   202d8:	orr	w8, w8, w9
   202dc:	str	w8, [x10]
   202e0:	b	200ec <mpfr_pow_general@@Base+0x524>
   202e4:	mov	w2, #0x1                   	// #1
   202e8:	mov	x0, x19
   202ec:	mov	w1, w21
   202f0:	bl	bf90 <mpfr_overflow@plt>
   202f4:	ldr	x8, [sp, #16]
   202f8:	mov	w22, w0
   202fc:	cbz	x8, 200ec <mpfr_pow_general@@Base+0x524>
   20300:	ldr	x10, [sp, #16]
   20304:	mov	w9, #0xa                   	// #10
   20308:	b	202d4 <mpfr_pow_general@@Base+0x70c>

000000000002030c <mpfr_pow@@Base>:
   2030c:	sub	sp, sp, #0xa0
   20310:	stp	x29, x30, [sp, #64]
   20314:	stp	x26, x25, [sp, #96]
   20318:	stp	x24, x23, [sp, #112]
   2031c:	stp	x22, x21, [sp, #128]
   20320:	stp	x20, x19, [sp, #144]
   20324:	ldr	x8, [x1, #16]
   20328:	mov	x24, #0x2                   	// #2
   2032c:	ldr	x9, [x2, #16]
   20330:	movk	x24, #0x8000, lsl #48
   20334:	add	x10, x24, #0x2
   20338:	mov	w20, w3
   2033c:	mov	x21, x2
   20340:	mov	x22, x1
   20344:	cmp	x8, x10
   20348:	mov	x19, x0
   2034c:	str	x27, [sp, #80]
   20350:	add	x29, sp, #0x40
   20354:	b.lt	20a14 <mpfr_pow@@Base+0x708>  // b.tstop
   20358:	cmp	x9, x10
   2035c:	b.lt	20a14 <mpfr_pow@@Base+0x708>  // b.tstop
   20360:	mov	x0, x21
   20364:	bl	c1a0 <mpfr_integer_p@plt>
   20368:	mov	w23, w0
   2036c:	cbnz	w0, 203a4 <mpfr_pow@@Base+0x98>
   20370:	ldr	w8, [x22, #8]
   20374:	tbz	w8, #31, 203a4 <mpfr_pow@@Base+0x98>
   20378:	str	x24, [x19, #16]
   2037c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20380:	ldr	x1, [x0, #2640]
   20384:	add	x0, x0, #0xa50
   20388:	blr	x1
   2038c:	mrs	x8, tpidr_el0
   20390:	ldr	w9, [x8, x0]
   20394:	mov	w24, wzr
   20398:	orr	w9, w9, #0x4
   2039c:	str	w9, [x8, x0]
   203a0:	b	209f0 <mpfr_pow@@Base+0x6e4>
   203a4:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   203a8:	ldr	x1, [x1, #3944]
   203ac:	mov	x0, x22
   203b0:	bl	c990 <mpfr_cmpabs@plt>
   203b4:	cbz	w0, 20580 <mpfr_pow@@Base+0x274>
   203b8:	mov	w24, w0
   203bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   203c0:	ldr	x1, [x0, #2608]
   203c4:	add	x0, x0, #0xa30
   203c8:	blr	x1
   203cc:	mrs	x27, tpidr_el0
   203d0:	ldr	x9, [x27, x0]
   203d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   203d8:	ldr	x1, [x0, #2576]
   203dc:	add	x0, x0, #0xa10
   203e0:	blr	x1
   203e4:	ldr	x10, [x27, x0]
   203e8:	mov	w8, #0x3fffffff            	// #1073741823
   203ec:	cmp	x9, x8
   203f0:	b.lt	20424 <mpfr_pow@@Base+0x118>  // b.tstop
   203f4:	mov	x8, #0xffffffffc0000001    	// #-1073741823
   203f8:	cmp	x10, x8
   203fc:	b.gt	20424 <mpfr_pow@@Base+0x118>
   20400:	ldr	x8, [x21, #16]
   20404:	cmp	x8, #0xf
   20408:	b.gt	20424 <mpfr_pow@@Base+0x118>
   2040c:	ldr	x8, [x22, #16]
   20410:	mov	w11, #0x7ffe                	// #32766
   20414:	add	x8, x8, x11
   20418:	mov	w11, #0xfffe                	// #65534
   2041c:	cmp	x8, x11
   20420:	b.cc	20708 <mpfr_pow@@Base+0x3fc>  // b.lo, b.ul, b.last
   20424:	ldr	w11, [x21, #8]
   20428:	mul	w8, w11, w24
   2042c:	cmp	w8, #0x1
   20430:	b.lt	205c0 <mpfr_pow@@Base+0x2b4>  // b.tstop
   20434:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20438:	ldr	x1, [x0, #2640]
   2043c:	add	x0, x0, #0xa50
   20440:	blr	x1
   20444:	ldr	w8, [x27, x0]
   20448:	stp	x10, x9, [x29, #-16]
   2044c:	stur	w8, [x29, #-24]
   20450:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20454:	ldr	x1, [x0, #2576]
   20458:	add	x0, x0, #0xa10
   2045c:	blr	x1
   20460:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   20464:	str	x8, [x27, x0]
   20468:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2046c:	ldr	x1, [x0, #2608]
   20470:	add	x0, x0, #0xa30
   20474:	blr	x1
   20478:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2047c:	str	x8, [x27, x0]
   20480:	add	x0, sp, #0x8
   20484:	mov	w1, #0x35                  	// #53
   20488:	bl	ca60 <mpfr_init2@plt>
   2048c:	ldr	w8, [x22, #8]
   20490:	mov	x25, x22
   20494:	cmp	w8, #0x0
   20498:	b.gt	204b8 <mpfr_pow@@Base+0x1ac>
   2049c:	cmp	w24, #0x1
   204a0:	mov	w8, #0x1                   	// #1
   204a4:	cinc	w2, w8, lt  // lt = tstop
   204a8:	add	x0, sp, #0x8
   204ac:	mov	x1, x22
   204b0:	add	x25, sp, #0x8
   204b4:	bl	bdc0 <mpfr_neg@plt>
   204b8:	add	x0, sp, #0x8
   204bc:	mov	w2, #0x1                   	// #1
   204c0:	mov	x1, x25
   204c4:	bl	c210 <mpfr_log2@plt>
   204c8:	add	x0, sp, #0x8
   204cc:	add	x1, sp, #0x8
   204d0:	mov	w3, #0x1                   	// #1
   204d4:	mov	x2, x21
   204d8:	bl	bda0 <mpfr_mul@plt>
   204dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   204e0:	ldr	x1, [x0, #2608]
   204e4:	add	x0, x0, #0xa30
   204e8:	blr	x1
   204ec:	ldr	x1, [x27, x0]
   204f0:	mov	x25, x0
   204f4:	add	x0, sp, #0x8
   204f8:	mov	x2, xzr
   204fc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   20500:	mov	w26, w0
   20504:	add	x0, sp, #0x8
   20508:	bl	c0b0 <mpfr_clear@plt>
   2050c:	ldur	w8, [x29, #-24]
   20510:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20514:	ldr	x1, [x0, #2640]
   20518:	add	x0, x0, #0xa50
   2051c:	blr	x1
   20520:	ldur	x10, [x29, #-16]
   20524:	str	w8, [x27, x0]
   20528:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2052c:	ldr	x1, [x0, #2576]
   20530:	add	x0, x0, #0xa10
   20534:	blr	x1
   20538:	ldur	x9, [x29, #-8]
   2053c:	cmp	w26, #0x0
   20540:	str	x10, [x27, x0]
   20544:	str	x9, [x27, x25]
   20548:	b.le	205bc <mpfr_pow@@Base+0x2b0>
   2054c:	ldr	w8, [x22, #8]
   20550:	mov	w22, #0x1                   	// #1
   20554:	tbz	w8, #31, 20568 <mpfr_pow@@Base+0x25c>
   20558:	mov	x0, x21
   2055c:	bl	cc80 <mpfr_odd_p@plt>
   20560:	cmp	w0, #0x0
   20564:	cneg	w22, w22, ne  // ne = any
   20568:	mov	x0, x19
   2056c:	mov	w1, w20
   20570:	mov	w2, w22
   20574:	bl	bf90 <mpfr_overflow@plt>
   20578:	mov	w24, w0
   2057c:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20580:	ldr	w8, [x22, #8]
   20584:	tbnz	w8, #31, 20590 <mpfr_pow@@Base+0x284>
   20588:	mov	w1, #0x1                   	// #1
   2058c:	b	205a4 <mpfr_pow@@Base+0x298>
   20590:	mov	x0, x21
   20594:	bl	cc80 <mpfr_odd_p@plt>
   20598:	cmp	w0, #0x0
   2059c:	mov	w8, #0x1                   	// #1
   205a0:	cneg	x1, x8, ne  // ne = any
   205a4:	mov	x0, x19
   205a8:	mov	x2, xzr
   205ac:	mov	w3, w20
   205b0:	bl	bae0 <mpfr_set_si_2exp@plt>
   205b4:	mov	w24, w0
   205b8:	b	209f0 <mpfr_pow@@Base+0x6e4>
   205bc:	ldr	w11, [x21, #8]
   205c0:	ldr	x8, [x22, #16]
   205c4:	tbnz	w11, #31, 205d0 <mpfr_pow@@Base+0x2c4>
   205c8:	tbz	x8, #63, 20708 <mpfr_pow@@Base+0x3fc>
   205cc:	b	205d8 <mpfr_pow@@Base+0x2cc>
   205d0:	cmp	x8, #0x1
   205d4:	b.le	20708 <mpfr_pow@@Base+0x3fc>
   205d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   205dc:	ldr	x1, [x0, #2640]
   205e0:	add	x0, x0, #0xa50
   205e4:	blr	x1
   205e8:	ldr	w11, [x27, x0]
   205ec:	stp	x10, x9, [x29, #-16]
   205f0:	stur	w11, [x29, #-24]
   205f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   205f8:	ldr	x1, [x0, #2576]
   205fc:	add	x0, x0, #0xa10
   20600:	blr	x1
   20604:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   20608:	str	x9, [x27, x0]
   2060c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20610:	ldr	x1, [x0, #2608]
   20614:	add	x0, x0, #0xa30
   20618:	blr	x1
   2061c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   20620:	mov	w10, #0x40                  	// #64
   20624:	add	x11, x29, #0x18
   20628:	mov	w12, #0x1                   	// #1
   2062c:	str	x9, [x27, x0]
   20630:	add	x0, sp, #0x8
   20634:	mov	x1, x8
   20638:	mov	x2, xzr
   2063c:	mov	w3, wzr
   20640:	str	x10, [sp, #8]
   20644:	str	x11, [sp, #32]
   20648:	str	w12, [sp, #16]
   2064c:	bl	bae0 <mpfr_set_si_2exp@plt>
   20650:	cbnz	w0, 20b60 <mpfr_pow@@Base+0x854>
   20654:	ldr	w8, [x21, #8]
   20658:	tbz	w8, #31, 20674 <mpfr_pow@@Base+0x368>
   2065c:	add	x0, sp, #0x8
   20660:	add	x1, sp, #0x8
   20664:	mov	w2, #0x1                   	// #1
   20668:	mov	w3, wzr
   2066c:	bl	c520 <mpfr_sub_ui@plt>
   20670:	cbnz	w0, 20c2c <mpfr_pow@@Base+0x920>
   20674:	add	x0, sp, #0x8
   20678:	add	x1, sp, #0x8
   2067c:	mov	w3, #0x2                   	// #2
   20680:	mov	x2, x21
   20684:	bl	bda0 <mpfr_mul@plt>
   20688:	ldr	w8, [x21, #8]
   2068c:	tbz	w8, #31, 20698 <mpfr_pow@@Base+0x38c>
   20690:	add	x0, sp, #0x8
   20694:	bl	c160 <mpfr_nextabove@plt>
   20698:	add	x0, sp, #0x8
   2069c:	mov	w1, #0x2                   	// #2
   206a0:	bl	c1d0 <mpfr_get_si@plt>
   206a4:	ldur	w9, [x29, #-24]
   206a8:	mov	x8, x0
   206ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   206b0:	ldr	x1, [x0, #2640]
   206b4:	add	x0, x0, #0xa50
   206b8:	blr	x1
   206bc:	ldur	x10, [x29, #-16]
   206c0:	str	w9, [x27, x0]
   206c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   206c8:	ldr	x1, [x0, #2576]
   206cc:	add	x0, x0, #0xa10
   206d0:	blr	x1
   206d4:	ldur	x9, [x29, #-8]
   206d8:	str	x10, [x27, x0]
   206dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   206e0:	ldr	x1, [x0, #2608]
   206e4:	add	x0, x0, #0xa30
   206e8:	blr	x1
   206ec:	cmp	w20, #0x0
   206f0:	mov	w11, #0x1                   	// #1
   206f4:	cinc	x11, x11, eq  // eq = none
   206f8:	sub	x10, x10, x11
   206fc:	cmp	x8, x10
   20700:	str	x9, [x27, x0]
   20704:	b.le	20b84 <mpfr_pow@@Base+0x878>
   20708:	cbz	w23, 20754 <mpfr_pow@@Base+0x448>
   2070c:	ldr	x8, [x21, #16]
   20710:	cmp	x8, #0x100
   20714:	b.gt	20754 <mpfr_pow@@Base+0x448>
   20718:	add	x0, sp, #0x8
   2071c:	bl	bfe0 <mpfr_mpz_init@plt>
   20720:	add	x0, sp, #0x8
   20724:	mov	x1, x21
   20728:	mov	w2, wzr
   2072c:	bl	be50 <mpfr_get_z@plt>
   20730:	add	x2, sp, #0x8
   20734:	mov	x0, x19
   20738:	mov	x1, x22
   2073c:	mov	w3, w20
   20740:	bl	bf40 <mpfr_pow_z@plt>
   20744:	mov	w24, w0
   20748:	add	x0, sp, #0x8
   2074c:	bl	c1b0 <mpfr_mpz_clear@plt>
   20750:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20754:	mov	x0, x22
   20758:	bl	bf50 <mpfr_powerof2_raw@plt>
   2075c:	cbz	w0, 20868 <mpfr_pow@@Base+0x55c>
   20760:	ldr	x23, [x22, #16]
   20764:	ldr	w22, [x22, #8]
   20768:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2076c:	ldr	x1, [x0, #2640]
   20770:	add	x0, x0, #0xa50
   20774:	blr	x1
   20778:	ldr	w8, [x27, x0]
   2077c:	stur	w8, [x29, #-24]
   20780:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20784:	ldr	x1, [x0, #2576]
   20788:	add	x0, x0, #0xa10
   2078c:	blr	x1
   20790:	ldr	x9, [x27, x0]
   20794:	mov	x8, x0
   20798:	stur	x9, [x29, #-16]
   2079c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   207a0:	ldr	x1, [x0, #2608]
   207a4:	add	x0, x0, #0xa30
   207a8:	blr	x1
   207ac:	ldr	x9, [x27, x0]
   207b0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   207b4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   207b8:	str	x10, [x27, x8]
   207bc:	stur	x9, [x29, #-8]
   207c0:	str	x11, [x27, x0]
   207c4:	ldr	x8, [x21]
   207c8:	add	x0, sp, #0x8
   207cc:	add	x1, x8, #0x40
   207d0:	bl	ca60 <mpfr_init2@plt>
   207d4:	sub	x2, x23, #0x1
   207d8:	add	x0, sp, #0x8
   207dc:	mov	x1, x21
   207e0:	mov	w3, wzr
   207e4:	bl	c950 <mpfr_mul_si@plt>
   207e8:	cbnz	w0, 20b44 <mpfr_pow@@Base+0x838>
   207ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   207f0:	ldr	x1, [x0, #2640]
   207f4:	add	x0, x0, #0xa50
   207f8:	blr	x1
   207fc:	str	wzr, [x27, x0]
   20800:	add	x1, sp, #0x8
   20804:	mov	x0, x19
   20808:	mov	w2, w20
   2080c:	bl	cc70 <mpfr_exp2@plt>
   20810:	mov	w24, w0
   20814:	add	x0, sp, #0x8
   20818:	bl	c0b0 <mpfr_clear@plt>
   2081c:	tbz	w22, #31, 20840 <mpfr_pow@@Base+0x534>
   20820:	mov	x0, x21
   20824:	bl	cc80 <mpfr_odd_p@plt>
   20828:	cbz	w0, 20840 <mpfr_pow@@Base+0x534>
   2082c:	mov	x0, x19
   20830:	mov	x1, x19
   20834:	mov	w2, w20
   20838:	bl	bdc0 <mpfr_neg@plt>
   2083c:	neg	w24, w24
   20840:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20844:	ldr	x1, [x0, #2640]
   20848:	add	x0, x0, #0xa50
   2084c:	blr	x1
   20850:	ldr	w8, [x27, x0]
   20854:	ldur	w10, [x29, #-24]
   20858:	ldur	x9, [x29, #-16]
   2085c:	orr	w8, w10, w8
   20860:	stur	w8, [x29, #-24]
   20864:	b	20990 <mpfr_pow@@Base+0x684>
   20868:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2086c:	ldr	x1, [x0, #2640]
   20870:	add	x0, x0, #0xa50
   20874:	blr	x1
   20878:	ldr	w8, [x27, x0]
   2087c:	stur	w8, [x29, #-24]
   20880:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20884:	ldr	x1, [x0, #2576]
   20888:	add	x0, x0, #0xa10
   2088c:	blr	x1
   20890:	ldr	x9, [x27, x0]
   20894:	mov	x8, x0
   20898:	stur	x9, [x29, #-16]
   2089c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   208a0:	ldr	x1, [x0, #2608]
   208a4:	add	x0, x0, #0xa30
   208a8:	blr	x1
   208ac:	ldr	x9, [x27, x0]
   208b0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   208b4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   208b8:	str	x10, [x27, x8]
   208bc:	stur	x9, [x29, #-8]
   208c0:	str	x11, [x27, x0]
   208c4:	ldr	w8, [x22, #8]
   208c8:	cmp	w8, #0x1
   208cc:	b.lt	208e8 <mpfr_pow@@Base+0x5dc>  // b.tstop
   208d0:	ldr	x8, [x22, #16]
   208d4:	mov	w9, #0x1                   	// #1
   208d8:	cmp	w24, #0x0
   208dc:	sub	x9, x9, x8
   208e0:	csel	x8, x8, x9, gt
   208e4:	b	2090c <mpfr_pow@@Base+0x600>
   208e8:	mov	x1, #0xffffffffffffffff    	// #-1
   208ec:	mov	x0, x22
   208f0:	mov	x2, xzr
   208f4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   208f8:	ldr	x8, [x22, #16]
   208fc:	mov	w9, #0x1                   	// #1
   20900:	cmp	w0, #0x0
   20904:	sub	x9, x9, x8
   20908:	csel	x8, x9, x8, gt
   2090c:	subs	x25, x8, #0x1
   20910:	b.eq	20bc0 <mpfr_pow@@Base+0x8b4>  // b.none
   20914:	b.le	20bc8 <mpfr_pow@@Base+0x8bc>
   20918:	clz	x8, x25
   2091c:	mov	w9, #0x40                  	// #64
   20920:	sub	x8, x9, x8
   20924:	ldr	x9, [x21, #16]
   20928:	add	x8, x9, x8
   2092c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20930:	ldr	x1, [x0, #2640]
   20934:	add	x0, x0, #0xa50
   20938:	blr	x1
   2093c:	str	wzr, [x27, x0]
   20940:	tbz	x8, #63, 20958 <mpfr_pow@@Base+0x64c>
   20944:	ldr	x9, [x19]
   20948:	neg	x2, x8
   2094c:	add	x8, x9, #0x1
   20950:	cmp	x8, x2
   20954:	b.cc	20c48 <mpfr_pow@@Base+0x93c>  // b.lo, b.ul, b.last
   20958:	sub	x5, x29, #0x18
   2095c:	mov	x0, x19
   20960:	mov	x1, x22
   20964:	mov	x2, x21
   20968:	mov	w3, w20
   2096c:	mov	w4, w23
   20970:	bl	c6e0 <mpfr_pow_general@plt>
   20974:	ldur	w8, [x29, #-24]
   20978:	mov	w24, w0
   2097c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20980:	ldr	x1, [x0, #2640]
   20984:	add	x0, x0, #0xa50
   20988:	blr	x1
   2098c:	ldur	x9, [x29, #-16]
   20990:	str	w8, [x27, x0]
   20994:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20998:	ldr	x1, [x0, #2576]
   2099c:	add	x0, x0, #0xa10
   209a0:	blr	x1
   209a4:	ldur	x11, [x29, #-8]
   209a8:	str	x9, [x27, x0]
   209ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   209b0:	ldr	x1, [x0, #2608]
   209b4:	add	x0, x0, #0xa30
   209b8:	blr	x1
   209bc:	str	x11, [x27, x0]
   209c0:	ldr	x10, [x19, #16]
   209c4:	cmp	x10, x11
   209c8:	b.gt	20cf0 <mpfr_pow@@Base+0x9e4>
   209cc:	cmp	x10, x9
   209d0:	b.lt	20cf0 <mpfr_pow@@Base+0x9e4>  // b.tstop
   209d4:	cbz	w24, 209f0 <mpfr_pow@@Base+0x6e4>
   209d8:	orr	w8, w8, #0x8
   209dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   209e0:	ldr	x1, [x0, #2640]
   209e4:	add	x0, x0, #0xa50
   209e8:	blr	x1
   209ec:	str	w8, [x27, x0]
   209f0:	mov	w0, w24
   209f4:	ldp	x20, x19, [sp, #144]
   209f8:	ldp	x22, x21, [sp, #128]
   209fc:	ldp	x24, x23, [sp, #112]
   20a00:	ldp	x26, x25, [sp, #96]
   20a04:	ldr	x27, [sp, #80]
   20a08:	ldp	x29, x30, [sp, #64]
   20a0c:	add	sp, sp, #0xa0
   20a10:	ret
   20a14:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   20a18:	cmp	x9, x10
   20a1c:	b.eq	20a44 <mpfr_pow@@Base+0x738>  // b.none
   20a20:	cmp	x8, x24
   20a24:	b.eq	20378 <mpfr_pow@@Base+0x6c>  // b.none
   20a28:	cmp	x9, x24
   20a2c:	b.ne	20a60 <mpfr_pow@@Base+0x754>  // b.any
   20a30:	mov	w1, #0x1                   	// #1
   20a34:	mov	x0, x22
   20a38:	mov	x2, xzr
   20a3c:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   20a40:	cbnz	w0, 20378 <mpfr_pow@@Base+0x6c>
   20a44:	mov	w1, #0x1                   	// #1
   20a48:	mov	x0, x19
   20a4c:	mov	x2, xzr
   20a50:	mov	w3, w20
   20a54:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   20a58:	mov	w24, w0
   20a5c:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20a60:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   20a64:	cmp	x9, x10
   20a68:	b.ne	20a9c <mpfr_pow@@Base+0x790>  // b.any
   20a6c:	cmp	x8, x10
   20a70:	b.ne	20ae4 <mpfr_pow@@Base+0x7d8>  // b.any
   20a74:	ldr	w8, [x21, #8]
   20a78:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   20a7c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   20a80:	mov	w11, #0x1                   	// #1
   20a84:	cmp	w8, #0x0
   20a88:	csel	x8, x10, x9, gt
   20a8c:	mov	w24, wzr
   20a90:	str	x8, [x19, #16]
   20a94:	str	w11, [x19, #8]
   20a98:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20a9c:	ldr	w9, [x22, #8]
   20aa0:	mov	w20, #0x1                   	// #1
   20aa4:	cmp	x8, x10
   20aa8:	b.ne	20b1c <mpfr_pow@@Base+0x810>  // b.any
   20aac:	tbz	w9, #31, 20ac0 <mpfr_pow@@Base+0x7b4>
   20ab0:	mov	x0, x21
   20ab4:	bl	cc80 <mpfr_odd_p@plt>
   20ab8:	cmp	w0, #0x0
   20abc:	cneg	w20, w20, ne  // ne = any
   20ac0:	ldr	w8, [x21, #8]
   20ac4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   20ac8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   20acc:	mov	w24, wzr
   20ad0:	cmp	w8, #0x0
   20ad4:	csel	x8, x10, x9, gt
   20ad8:	str	x8, [x19, #16]
   20adc:	str	w20, [x19, #8]
   20ae0:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20ae4:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   20ae8:	ldr	x1, [x1, #3944]
   20aec:	mov	x0, x22
   20af0:	bl	c990 <mpfr_cmpabs@plt>
   20af4:	ldr	w8, [x21, #8]
   20af8:	mov	w9, #0x1                   	// #1
   20afc:	str	w9, [x19, #8]
   20b00:	mul	w8, w8, w0
   20b04:	cmp	w8, #0x1
   20b08:	b.lt	20be4 <mpfr_pow@@Base+0x8d8>  // b.tstop
   20b0c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   20b10:	mov	w24, wzr
   20b14:	str	x8, [x19, #16]
   20b18:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20b1c:	tbz	w9, #31, 20b30 <mpfr_pow@@Base+0x824>
   20b20:	mov	x0, x21
   20b24:	bl	cc80 <mpfr_odd_p@plt>
   20b28:	cmp	w0, #0x0
   20b2c:	cneg	w20, w20, ne  // ne = any
   20b30:	ldr	w8, [x21, #8]
   20b34:	tbnz	w8, #31, 20bf8 <mpfr_pow@@Base+0x8ec>
   20b38:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   20b3c:	str	x8, [x19, #16]
   20b40:	b	20c20 <mpfr_pow@@Base+0x914>
   20b44:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20b48:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20b4c:	add	x0, x0, #0xae5
   20b50:	add	x2, x2, #0xb8c
   20b54:	mov	w1, #0x289                 	// #649
   20b58:	bl	cb20 <mpfr_assert_fail@plt>
   20b5c:	b	207ec <mpfr_pow@@Base+0x4e0>
   20b60:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20b64:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20b68:	add	x0, x0, #0xae5
   20b6c:	add	x2, x2, #0xb81
   20b70:	mov	w1, #0x24b                 	// #587
   20b74:	bl	cb20 <mpfr_assert_fail@plt>
   20b78:	ldr	w8, [x21, #8]
   20b7c:	tbz	w8, #31, 20674 <mpfr_pow@@Base+0x368>
   20b80:	b	2065c <mpfr_pow@@Base+0x350>
   20b84:	ldr	w8, [x22, #8]
   20b88:	cmp	w20, #0x0
   20b8c:	csinc	w22, w20, wzr, ne  // ne = any
   20b90:	mov	w20, #0x1                   	// #1
   20b94:	tbz	w8, #31, 20ba8 <mpfr_pow@@Base+0x89c>
   20b98:	mov	x0, x21
   20b9c:	bl	cc80 <mpfr_odd_p@plt>
   20ba0:	cmp	w0, #0x0
   20ba4:	cneg	w20, w20, ne  // ne = any
   20ba8:	mov	x0, x19
   20bac:	mov	w1, w22
   20bb0:	mov	w2, w20
   20bb4:	bl	c3c0 <mpfr_underflow@plt>
   20bb8:	mov	w24, w0
   20bbc:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20bc0:	mov	x8, xzr
   20bc4:	b	20924 <mpfr_pow@@Base+0x618>
   20bc8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20bcc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20bd0:	add	x0, x0, #0xae5
   20bd4:	add	x2, x2, #0xb99
   20bd8:	mov	w1, #0x2aa                 	// #682
   20bdc:	bl	cb20 <mpfr_assert_fail@plt>
   20be0:	b	20918 <mpfr_pow@@Base+0x60c>
   20be4:	tbz	w8, #31, 20a44 <mpfr_pow@@Base+0x738>
   20be8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   20bec:	mov	w24, wzr
   20bf0:	str	x8, [x19, #16]
   20bf4:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20bf8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   20bfc:	str	x8, [x19, #16]
   20c00:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20c04:	ldr	x1, [x0, #2640]
   20c08:	add	x0, x0, #0xa50
   20c0c:	blr	x1
   20c10:	mrs	x8, tpidr_el0
   20c14:	ldr	w9, [x8, x0]
   20c18:	orr	w9, w9, #0x20
   20c1c:	str	w9, [x8, x0]
   20c20:	mov	w24, wzr
   20c24:	str	w20, [x19, #8]
   20c28:	b	209f0 <mpfr_pow@@Base+0x6e4>
   20c2c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20c30:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20c34:	add	x0, x0, #0xae5
   20c38:	add	x2, x2, #0xb81
   20c3c:	mov	w1, #0x24f                 	// #591
   20c40:	bl	cb20 <mpfr_assert_fail@plt>
   20c44:	b	20674 <mpfr_pow@@Base+0x368>
   20c48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20c4c:	ldr	x1, [x0, #2640]
   20c50:	add	x0, x0, #0xa50
   20c54:	blr	x1
   20c58:	str	wzr, [x27, x0]
   20c5c:	ldr	w8, [x21, #8]
   20c60:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   20c64:	ldr	x1, [x1, #3944]
   20c68:	mov	x0, x19
   20c6c:	cmp	w8, #0x0
   20c70:	cset	w8, gt
   20c74:	eor	w3, w8, w24, lsr #31
   20c78:	mov	w4, w20
   20c7c:	bl	c530 <mpfr_round_near_x@plt>
   20c80:	cbz	w0, 20958 <mpfr_pow@@Base+0x64c>
   20c84:	mov	w24, w0
   20c88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20c8c:	ldr	x1, [x0, #2640]
   20c90:	add	x0, x0, #0xa50
   20c94:	blr	x1
   20c98:	ldr	w8, [x27, x0]
   20c9c:	ldur	w10, [x29, #-24]
   20ca0:	ldur	x9, [x29, #-16]
   20ca4:	orr	w8, w10, w8
   20ca8:	stur	w8, [x29, #-24]
   20cac:	str	w8, [x27, x0]
   20cb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20cb4:	ldr	x1, [x0, #2576]
   20cb8:	add	x0, x0, #0xa10
   20cbc:	blr	x1
   20cc0:	ldur	x11, [x29, #-8]
   20cc4:	str	x9, [x27, x0]
   20cc8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20ccc:	ldr	x1, [x0, #2608]
   20cd0:	add	x0, x0, #0xa30
   20cd4:	blr	x1
   20cd8:	str	x11, [x27, x0]
   20cdc:	ldr	x10, [x19, #16]
   20ce0:	cmp	x10, x11
   20ce4:	b.gt	20cf0 <mpfr_pow@@Base+0x9e4>
   20ce8:	cmp	x10, x9
   20cec:	b.ge	209d8 <mpfr_pow@@Base+0x6cc>  // b.tcont
   20cf0:	mov	x0, x19
   20cf4:	mov	w1, w24
   20cf8:	mov	w2, w20
   20cfc:	bl	cb10 <mpfr_check_range@plt>
   20d00:	mov	w24, w0
   20d04:	b	209f0 <mpfr_pow@@Base+0x6e4>

0000000000020d08 <mpfr_pow_si@@Base>:
   20d08:	sub	sp, sp, #0xf0
   20d0c:	stp	x22, x21, [sp, #208]
   20d10:	stp	x20, x19, [sp, #224]
   20d14:	mov	w20, w3
   20d18:	mov	x22, x2
   20d1c:	mov	x21, x1
   20d20:	mov	x19, x0
   20d24:	stp	x29, x30, [sp, #144]
   20d28:	stp	x28, x27, [sp, #160]
   20d2c:	stp	x26, x25, [sp, #176]
   20d30:	stp	x24, x23, [sp, #192]
   20d34:	add	x29, sp, #0x90
   20d38:	tbnz	x2, #63, 20d6c <mpfr_pow_si@@Base+0x64>
   20d3c:	mov	x0, x19
   20d40:	mov	x1, x21
   20d44:	mov	x2, x22
   20d48:	mov	w3, w20
   20d4c:	ldp	x20, x19, [sp, #224]
   20d50:	ldp	x22, x21, [sp, #208]
   20d54:	ldp	x24, x23, [sp, #192]
   20d58:	ldp	x26, x25, [sp, #176]
   20d5c:	ldp	x28, x27, [sp, #160]
   20d60:	ldp	x29, x30, [sp, #144]
   20d64:	add	sp, sp, #0xf0
   20d68:	b	bfc0 <mpfr_pow_ui@plt>
   20d6c:	ldr	x8, [x21, #16]
   20d70:	mov	x10, #0x2                   	// #2
   20d74:	movk	x10, #0x8000, lsl #48
   20d78:	add	x9, x10, #0x2
   20d7c:	cmp	x8, x9
   20d80:	b.lt	21190 <mpfr_pow_si@@Base+0x488>  // b.tstop
   20d84:	ldrsw	x1, [x21, #8]
   20d88:	sub	x2, x8, #0x1
   20d8c:	mov	x0, x21
   20d90:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   20d94:	cbz	w0, 20e58 <mpfr_pow_si@@Base+0x150>
   20d98:	ldr	x27, [x19]
   20d9c:	neg	x8, x22
   20da0:	clz	x23, x8
   20da4:	str	x8, [sp, #40]
   20da8:	subs	x24, x27, #0x1
   20dac:	b.eq	211d8 <mpfr_pow_si@@Base+0x4d0>  // b.none
   20db0:	b.le	21244 <mpfr_pow_si@@Base+0x53c>
   20db4:	clz	x8, x24
   20db8:	mov	w9, #0x40                  	// #64
   20dbc:	sub	x8, x9, x8
   20dc0:	sub	x9, x27, x23
   20dc4:	add	x8, x9, x8
   20dc8:	add	x24, x8, #0x43
   20dcc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20dd0:	ldr	x1, [x0, #2640]
   20dd4:	add	x0, x0, #0xa50
   20dd8:	blr	x1
   20ddc:	mrs	x28, tpidr_el0
   20de0:	ldr	w8, [x28, x0]
   20de4:	str	w8, [sp, #36]
   20de8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20dec:	ldr	x1, [x0, #2576]
   20df0:	add	x0, x0, #0xa10
   20df4:	blr	x1
   20df8:	ldr	x9, [x28, x0]
   20dfc:	mov	x8, x0
   20e00:	str	x9, [sp, #24]
   20e04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20e08:	ldr	x1, [x0, #2608]
   20e0c:	add	x0, x0, #0xa30
   20e10:	blr	x1
   20e14:	ldr	x9, [x28, x0]
   20e18:	mov	x1, x24
   20e1c:	str	x9, [sp, #16]
   20e20:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   20e24:	str	x9, [x28, x8]
   20e28:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   20e2c:	str	x8, [x28, x0]
   20e30:	sub	x0, x29, #0x20
   20e34:	bl	ca60 <mpfr_init2@plt>
   20e38:	ldr	x8, [x21, #16]
   20e3c:	cmp	x8, #0x1
   20e40:	b.lt	20ea4 <mpfr_pow_si@@Base+0x19c>  // b.tstop
   20e44:	ldr	w8, [x21, #8]
   20e48:	cmp	w8, #0x0
   20e4c:	mov	w8, #0x2                   	// #2
   20e50:	cinc	w25, w8, le
   20e54:	b	20ea8 <mpfr_pow_si@@Base+0x1a0>
   20e58:	ldr	x9, [x21, #16]
   20e5c:	cmn	x22, #0x1
   20e60:	sub	x8, x9, #0x1
   20e64:	b.eq	210b4 <mpfr_pow_si@@Base+0x3ac>  // b.none
   20e68:	cmp	x9, #0x2
   20e6c:	b.lt	210b4 <mpfr_pow_si@@Base+0x3ac>  // b.tstop
   20e70:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20e74:	ldr	x1, [x0, #2576]
   20e78:	add	x0, x0, #0xa10
   20e7c:	blr	x1
   20e80:	mrs	x9, tpidr_el0
   20e84:	ldr	x9, [x9, x0]
   20e88:	sub	x9, x9, #0x1
   20e8c:	sdiv	x9, x9, x22
   20e90:	cmp	x8, x9
   20e94:	b.le	210ec <mpfr_pow_si@@Base+0x3e4>
   20e98:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   20e9c:	tbz	w22, #0, 210f4 <mpfr_pow_si@@Base+0x3ec>
   20ea0:	b	21104 <mpfr_pow_si@@Base+0x3fc>
   20ea4:	mov	w25, #0x1                   	// #1
   20ea8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20eac:	ldr	x1, [x0, #2640]
   20eb0:	add	x0, x0, #0xa50
   20eb4:	blr	x1
   20eb8:	mov	x26, x0
   20ebc:	str	wzr, [x28, x0]
   20ec0:	sub	x0, x29, #0x20
   20ec4:	mov	w1, #0x1                   	// #1
   20ec8:	mov	x2, x21
   20ecc:	mov	w3, w25
   20ed0:	bl	c2f0 <mpfr_ui_div@plt>
   20ed4:	ldrb	w8, [x28, x26]
   20ed8:	tbnz	w8, #1, 21130 <mpfr_pow_si@@Base+0x428>
   20edc:	cmp	w20, #0x0
   20ee0:	sub	x23, x23, #0x42
   20ee4:	mov	w8, #0x40                  	// #64
   20ee8:	cinc	x27, x27, eq  // eq = none
   20eec:	str	x8, [sp, #8]
   20ef0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20ef4:	ldr	x1, [x0, #2640]
   20ef8:	add	x0, x0, #0xa50
   20efc:	blr	x1
   20f00:	ldr	x2, [sp, #40]
   20f04:	mov	x26, x0
   20f08:	str	wzr, [x28, x0]
   20f0c:	sub	x0, x29, #0x20
   20f10:	sub	x1, x29, #0x20
   20f14:	mov	w3, w20
   20f18:	bl	bfc0 <mpfr_pow_ui@plt>
   20f1c:	ldr	w8, [x28, x26]
   20f20:	tbnz	w8, #1, 21130 <mpfr_pow_si@@Base+0x428>
   20f24:	tbnz	w8, #0, 211e0 <mpfr_pow_si@@Base+0x4d8>
   20f28:	ldur	x8, [x29, #-16]
   20f2c:	mov	x26, #0x2                   	// #2
   20f30:	movk	x26, #0x8000, lsl #48
   20f34:	add	x9, x26, #0x2
   20f38:	cmp	x8, x9
   20f3c:	b.lt	20f70 <mpfr_pow_si@@Base+0x268>  // b.tstop
   20f40:	ldur	x8, [x29, #-32]
   20f44:	ldur	x0, [x29, #-8]
   20f48:	add	x2, x23, x24
   20f4c:	mov	x3, x27
   20f50:	sub	x9, x8, #0x1
   20f54:	add	x8, x8, #0x3e
   20f58:	cmp	x9, #0x0
   20f5c:	csel	x8, x8, x9, lt  // lt = tstop
   20f60:	asr	x8, x8, #6
   20f64:	add	x1, x8, #0x1
   20f68:	bl	c370 <mpfr_round_p@plt>
   20f6c:	cbnz	w0, 20ff8 <mpfr_pow_si@@Base+0x2f0>
   20f70:	sub	x8, x26, x24
   20f74:	ldr	x26, [sp, #8]
   20f78:	sub	x8, x8, #0x103
   20f7c:	cmp	x26, x8
   20f80:	b.gt	20fdc <mpfr_pow_si@@Base+0x2d4>
   20f84:	add	x24, x24, x26
   20f88:	cmp	x24, #0x0
   20f8c:	cinc	x8, x24, lt  // lt = tstop
   20f90:	asr	x8, x8, #1
   20f94:	sub	x0, x29, #0x20
   20f98:	mov	x1, x24
   20f9c:	str	x8, [sp, #8]
   20fa0:	bl	bf20 <mpfr_set_prec@plt>
   20fa4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   20fa8:	ldr	x1, [x0, #2640]
   20fac:	add	x0, x0, #0xa50
   20fb0:	blr	x1
   20fb4:	mov	x26, x0
   20fb8:	str	wzr, [x28, x0]
   20fbc:	sub	x0, x29, #0x20
   20fc0:	mov	w1, #0x1                   	// #1
   20fc4:	mov	x2, x21
   20fc8:	mov	w3, w25
   20fcc:	bl	c2f0 <mpfr_ui_div@plt>
   20fd0:	ldrb	w8, [x28, x26]
   20fd4:	tbz	w8, #1, 20ef0 <mpfr_pow_si@@Base+0x1e8>
   20fd8:	b	21130 <mpfr_pow_si@@Base+0x428>
   20fdc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   20fe0:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   20fe4:	mov	w1, #0xed                  	// #237
   20fe8:	add	x0, x0, #0xba4
   20fec:	add	x2, x2, #0xde2
   20ff0:	bl	cb20 <mpfr_assert_fail@plt>
   20ff4:	b	20f84 <mpfr_pow_si@@Base+0x27c>
   20ff8:	ldur	w3, [x29, #-24]
   20ffc:	sub	x1, x29, #0x20
   21000:	mov	x0, x19
   21004:	mov	w2, w20
   21008:	bl	c690 <mpfr_set4@plt>
   2100c:	mov	w21, w0
   21010:	sub	x0, x29, #0x20
   21014:	bl	c0b0 <mpfr_clear@plt>
   21018:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2101c:	ldr	x1, [x0, #2640]
   21020:	add	x0, x0, #0xa50
   21024:	blr	x1
   21028:	ldr	w9, [sp, #36]
   2102c:	str	w9, [x28, x0]
   21030:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21034:	ldr	x1, [x0, #2576]
   21038:	add	x0, x0, #0xa10
   2103c:	blr	x1
   21040:	ldr	x10, [sp, #24]
   21044:	str	x10, [x28, x0]
   21048:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2104c:	ldr	x1, [x0, #2608]
   21050:	add	x0, x0, #0xa30
   21054:	blr	x1
   21058:	ldr	x11, [sp, #16]
   2105c:	str	x11, [x28, x0]
   21060:	ldr	x8, [x19, #16]
   21064:	cmp	x8, x11
   21068:	b.gt	21260 <mpfr_pow_si@@Base+0x558>
   2106c:	cmp	x8, x10
   21070:	b.lt	21260 <mpfr_pow_si@@Base+0x558>  // b.tstop
   21074:	cbz	w21, 21090 <mpfr_pow_si@@Base+0x388>
   21078:	orr	w8, w9, #0x8
   2107c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21080:	ldr	x1, [x0, #2640]
   21084:	add	x0, x0, #0xa50
   21088:	blr	x1
   2108c:	str	w8, [x28, x0]
   21090:	mov	w0, w21
   21094:	ldp	x20, x19, [sp, #224]
   21098:	ldp	x22, x21, [sp, #208]
   2109c:	ldp	x24, x23, [sp, #192]
   210a0:	ldp	x26, x25, [sp, #176]
   210a4:	ldp	x28, x27, [sp, #160]
   210a8:	ldp	x29, x30, [sp, #144]
   210ac:	add	sp, sp, #0xf0
   210b0:	ret
   210b4:	cmn	x22, #0x1
   210b8:	b.eq	210ec <mpfr_pow_si@@Base+0x3e4>  // b.none
   210bc:	cmp	x9, #0x0
   210c0:	b.gt	210ec <mpfr_pow_si@@Base+0x3e4>
   210c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   210c8:	ldr	x1, [x0, #2608]
   210cc:	add	x0, x0, #0xa30
   210d0:	blr	x1
   210d4:	mrs	x10, tpidr_el0
   210d8:	ldr	x10, [x10, x0]
   210dc:	sub	x10, x10, #0x1
   210e0:	sdiv	x10, x10, x22
   210e4:	cmp	x9, x10
   210e8:	b.le	210fc <mpfr_pow_si@@Base+0x3f4>
   210ec:	mul	x2, x8, x22
   210f0:	tbnz	w22, #0, 21104 <mpfr_pow_si@@Base+0x3fc>
   210f4:	mov	w1, #0x1                   	// #1
   210f8:	b	21108 <mpfr_pow_si@@Base+0x400>
   210fc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   21100:	tbz	w22, #0, 210f4 <mpfr_pow_si@@Base+0x3ec>
   21104:	ldrsw	x1, [x21, #8]
   21108:	mov	x0, x19
   2110c:	mov	w3, w20
   21110:	ldp	x20, x19, [sp, #224]
   21114:	ldp	x22, x21, [sp, #208]
   21118:	ldp	x24, x23, [sp, #192]
   2111c:	ldp	x26, x25, [sp, #176]
   21120:	ldp	x28, x27, [sp, #160]
   21124:	ldp	x29, x30, [sp, #144]
   21128:	add	sp, sp, #0xf0
   2112c:	b	bae0 <mpfr_set_si_2exp@plt>
   21130:	sub	x0, x29, #0x20
   21134:	bl	c0b0 <mpfr_clear@plt>
   21138:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2113c:	ldr	x1, [x0, #2640]
   21140:	add	x0, x0, #0xa50
   21144:	blr	x1
   21148:	ldr	w8, [sp, #36]
   2114c:	str	w8, [x28, x0]
   21150:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21154:	ldr	x1, [x0, #2576]
   21158:	add	x0, x0, #0xa10
   2115c:	blr	x1
   21160:	ldr	x8, [sp, #24]
   21164:	str	x8, [x28, x0]
   21168:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2116c:	ldr	x1, [x0, #2608]
   21170:	add	x0, x0, #0xa30
   21174:	blr	x1
   21178:	ldr	x8, [sp, #16]
   2117c:	str	x8, [x28, x0]
   21180:	ldr	x8, [sp, #40]
   21184:	tbnz	w8, #0, 211c4 <mpfr_pow_si@@Base+0x4bc>
   21188:	mov	w2, #0x1                   	// #1
   2118c:	b	211c8 <mpfr_pow_si@@Base+0x4c0>
   21190:	cmp	x8, x10
   21194:	b.ne	21274 <mpfr_pow_si@@Base+0x56c>  // b.any
   21198:	str	x10, [x19, #16]
   2119c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   211a0:	ldr	x1, [x0, #2640]
   211a4:	add	x0, x0, #0xa50
   211a8:	blr	x1
   211ac:	mrs	x8, tpidr_el0
   211b0:	ldr	w9, [x8, x0]
   211b4:	mov	w21, wzr
   211b8:	orr	w9, w9, #0x4
   211bc:	str	w9, [x8, x0]
   211c0:	b	21090 <mpfr_pow_si@@Base+0x388>
   211c4:	ldr	w2, [x21, #8]
   211c8:	mov	x0, x19
   211cc:	mov	w1, w20
   211d0:	bl	bf90 <mpfr_overflow@plt>
   211d4:	b	21374 <mpfr_pow_si@@Base+0x66c>
   211d8:	mov	x8, xzr
   211dc:	b	20dc0 <mpfr_pow_si@@Base+0xb8>
   211e0:	sub	x0, x29, #0x20
   211e4:	bl	c0b0 <mpfr_clear@plt>
   211e8:	cbz	w20, 212e0 <mpfr_pow_si@@Base+0x5d8>
   211ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   211f0:	ldr	x1, [x0, #2640]
   211f4:	add	x0, x0, #0xa50
   211f8:	blr	x1
   211fc:	ldr	w8, [sp, #36]
   21200:	str	w8, [x28, x0]
   21204:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21208:	ldr	x1, [x0, #2576]
   2120c:	add	x0, x0, #0xa10
   21210:	blr	x1
   21214:	ldr	x8, [sp, #24]
   21218:	str	x8, [x28, x0]
   2121c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21220:	ldr	x1, [x0, #2608]
   21224:	add	x0, x0, #0xa30
   21228:	blr	x1
   2122c:	ldr	x8, [sp, #16]
   21230:	str	x8, [x28, x0]
   21234:	ldr	x8, [sp, #40]
   21238:	tbnz	w8, #0, 21364 <mpfr_pow_si@@Base+0x65c>
   2123c:	mov	w2, #0x1                   	// #1
   21240:	b	21368 <mpfr_pow_si@@Base+0x660>
   21244:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   21248:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2124c:	add	x0, x0, #0xba4
   21250:	add	x2, x2, #0xdd9
   21254:	mov	w1, #0x9d                  	// #157
   21258:	bl	cb20 <mpfr_assert_fail@plt>
   2125c:	b	20db4 <mpfr_pow_si@@Base+0xac>
   21260:	mov	x0, x19
   21264:	mov	w1, w21
   21268:	mov	w2, w20
   2126c:	bl	cb10 <mpfr_check_range@plt>
   21270:	b	21374 <mpfr_pow_si@@Base+0x66c>
   21274:	ldr	w10, [x21, #8]
   21278:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2127c:	cmp	w10, #0x0
   21280:	cset	w10, gt
   21284:	tst	x22, #0x1
   21288:	cset	w11, eq  // eq = none
   2128c:	cmp	x8, x9
   21290:	orr	w8, w11, w10
   21294:	b.ne	212a4 <mpfr_pow_si@@Base+0x59c>  // b.any
   21298:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2129c:	str	x9, [x19, #16]
   212a0:	b	212c8 <mpfr_pow_si@@Base+0x5c0>
   212a4:	str	x9, [x19, #16]
   212a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   212ac:	ldr	x1, [x0, #2640]
   212b0:	add	x0, x0, #0xa50
   212b4:	blr	x1
   212b8:	mrs	x9, tpidr_el0
   212bc:	ldr	w10, [x9, x0]
   212c0:	orr	w10, w10, #0x20
   212c4:	str	w10, [x9, x0]
   212c8:	cmp	w8, #0x0
   212cc:	mov	w8, #0x1                   	// #1
   212d0:	cneg	w8, w8, eq  // eq = none
   212d4:	mov	w21, wzr
   212d8:	str	w8, [x19, #8]
   212dc:	b	21090 <mpfr_pow_si@@Base+0x388>
   212e0:	sub	x0, x29, #0x40
   212e4:	mov	w1, #0x2                   	// #2
   212e8:	bl	ca60 <mpfr_init2@plt>
   212ec:	add	x0, sp, #0x30
   212f0:	mov	w1, #0x40                  	// #64
   212f4:	bl	ca60 <mpfr_init2@plt>
   212f8:	add	x0, sp, #0x30
   212fc:	mov	x1, x22
   21300:	mov	x2, xzr
   21304:	mov	w3, wzr
   21308:	bl	bae0 <mpfr_set_si_2exp@plt>
   2130c:	cbnz	w0, 2137c <mpfr_pow_si@@Base+0x674>
   21310:	sub	x0, x29, #0x40
   21314:	add	x2, sp, #0x30
   21318:	mov	w4, #0x1                   	// #1
   2131c:	mov	x1, x21
   21320:	mov	w3, wzr
   21324:	mov	x5, xzr
   21328:	bl	c6e0 <mpfr_pow_general@plt>
   2132c:	mov	w21, w0
   21330:	add	x0, sp, #0x30
   21334:	bl	c0b0 <mpfr_clear@plt>
   21338:	ldur	w3, [x29, #-56]
   2133c:	sub	x1, x29, #0x40
   21340:	mov	x0, x19
   21344:	mov	w2, wzr
   21348:	bl	c690 <mpfr_set4@plt>
   2134c:	sub	x0, x29, #0x40
   21350:	bl	c0b0 <mpfr_clear@plt>
   21354:	ldr	w8, [sp, #36]
   21358:	orr	w8, w8, #0x1
   2135c:	str	w8, [sp, #36]
   21360:	b	21018 <mpfr_pow_si@@Base+0x310>
   21364:	ldr	w2, [x21, #8]
   21368:	mov	x0, x19
   2136c:	mov	w1, w20
   21370:	bl	c3c0 <mpfr_underflow@plt>
   21374:	mov	w21, w0
   21378:	b	21090 <mpfr_pow_si@@Base+0x388>
   2137c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   21380:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   21384:	add	x0, x0, #0xba4
   21388:	add	x2, x2, #0xb8c
   2138c:	mov	w1, #0xd8                  	// #216
   21390:	bl	cb20 <mpfr_assert_fail@plt>
   21394:	b	21310 <mpfr_pow_si@@Base+0x608>

0000000000021398 <mpfr_pow_ui@@Base>:
   21398:	sub	sp, sp, #0xc0
   2139c:	stp	x24, x23, [sp, #144]
   213a0:	stp	x20, x19, [sp, #176]
   213a4:	mov	w23, w3
   213a8:	mov	x19, x0
   213ac:	stp	x29, x30, [sp, #96]
   213b0:	stp	x28, x27, [sp, #112]
   213b4:	stp	x26, x25, [sp, #128]
   213b8:	stp	x22, x21, [sp, #160]
   213bc:	add	x29, sp, #0x60
   213c0:	cbz	x2, 2172c <mpfr_pow_ui@@Base+0x394>
   213c4:	ldr	x9, [x1, #16]
   213c8:	mov	x8, #0x4                   	// #4
   213cc:	movk	x8, #0x8000, lsl #48
   213d0:	mov	x22, x2
   213d4:	mov	x21, x1
   213d8:	cmp	x9, x8
   213dc:	b.lt	21740 <mpfr_pow_ui@@Base+0x3a8>  // b.tstop
   213e0:	cmp	x22, #0x2
   213e4:	b.ls	21794 <mpfr_pow_ui@@Base+0x3fc>  // b.plast
   213e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   213ec:	ldr	x1, [x0, #2640]
   213f0:	add	x0, x0, #0xa50
   213f4:	blr	x1
   213f8:	mrs	x24, tpidr_el0
   213fc:	ldr	w8, [x24, x0]
   21400:	str	w8, [sp, #40]
   21404:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21408:	ldr	x1, [x0, #2576]
   2140c:	add	x0, x0, #0xa10
   21410:	blr	x1
   21414:	ldr	x9, [x24, x0]
   21418:	mov	x8, x0
   2141c:	str	x9, [sp, #32]
   21420:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21424:	ldr	x1, [x0, #2608]
   21428:	add	x0, x0, #0xa30
   2142c:	blr	x1
   21430:	ldr	x9, [x24, x0]
   21434:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   21438:	str	x10, [x24, x0]
   2143c:	str	x9, [sp, #24]
   21440:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   21444:	str	x9, [x24, x8]
   21448:	ldr	x8, [x19]
   2144c:	cmp	x8, #0x1
   21450:	add	x20, x8, #0x43
   21454:	b.eq	217ac <mpfr_pow_ui@@Base+0x414>  // b.none
   21458:	b.le	2183c <mpfr_pow_ui@@Base+0x4a4>
   2145c:	sub	x8, x8, #0x1
   21460:	clz	x8, x8
   21464:	mov	w9, #0x40                  	// #64
   21468:	sub	x8, x9, x8
   2146c:	add	x26, x20, x8
   21470:	sub	x0, x29, #0x20
   21474:	mov	x1, x26
   21478:	bl	ca60 <mpfr_init2@plt>
   2147c:	ldr	w8, [x21, #8]
   21480:	mov	w9, #0x2                   	// #2
   21484:	mov	w10, #0x40                  	// #64
   21488:	mov	w20, #0x27                  	// #39
   2148c:	cmp	w8, #0x0
   21490:	cinc	w25, w9, le
   21494:	cmp	w23, #0x0
   21498:	cset	w8, eq  // eq = none
   2149c:	str	w23, [sp, #44]
   214a0:	stp	x10, x8, [sp, #8]
   214a4:	mov	x23, x19
   214a8:	str	x26, [sp]
   214ac:	sub	x27, x26, #0x1
   214b0:	mov	w26, #0xfffffffd            	// #-3
   214b4:	mov	x8, x22
   214b8:	lsr	x8, x8, #1
   214bc:	add	w26, w26, #0x1
   214c0:	sub	x27, x27, #0x1
   214c4:	cbnz	x8, 214b8 <mpfr_pow_ui@@Base+0x120>
   214c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   214cc:	ldr	x1, [x0, #2640]
   214d0:	add	x0, x0, #0xa50
   214d4:	blr	x1
   214d8:	str	wzr, [x24, x0]
   214dc:	sub	x0, x29, #0x20
   214e0:	mov	w3, #0x2                   	// #2
   214e4:	mov	x1, x21
   214e8:	mov	x2, x21
   214ec:	bl	bda0 <mpfr_mul@plt>
   214f0:	add	w8, w26, #0x1
   214f4:	mov	w28, w0
   214f8:	lsr	x8, x22, x8
   214fc:	add	w19, w26, #0x2
   21500:	tbz	w8, #0, 2151c <mpfr_pow_ui@@Base+0x184>
   21504:	sub	x0, x29, #0x20
   21508:	sub	x1, x29, #0x20
   2150c:	mov	x2, x21
   21510:	mov	w3, w25
   21514:	bl	bda0 <mpfr_mul@plt>
   21518:	orr	w28, w0, w28
   2151c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21520:	ldr	x1, [x0, #2640]
   21524:	add	x0, x0, #0xa50
   21528:	blr	x1
   2152c:	ldr	w8, [x24, x0]
   21530:	cmp	w19, #0x2
   21534:	b.cc	2163c <mpfr_pow_ui@@Base+0x2a4>  // b.lo, b.ul, b.last
   21538:	and	w9, w8, w20
   2153c:	mov	x19, x23
   21540:	cbnz	w9, 215a4 <mpfr_pow_ui@@Base+0x20c>
   21544:	mov	w26, w26
   21548:	sub	x0, x29, #0x20
   2154c:	sub	x1, x29, #0x20
   21550:	sub	x2, x29, #0x20
   21554:	mov	w3, #0x2                   	// #2
   21558:	bl	bda0 <mpfr_mul@plt>
   2155c:	lsr	x8, x22, x26
   21560:	orr	w28, w0, w28
   21564:	tbz	w8, #0, 21580 <mpfr_pow_ui@@Base+0x1e8>
   21568:	sub	x0, x29, #0x20
   2156c:	sub	x1, x29, #0x20
   21570:	mov	x2, x21
   21574:	mov	w3, w25
   21578:	bl	bda0 <mpfr_mul@plt>
   2157c:	orr	w28, w0, w28
   21580:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21584:	ldr	x1, [x0, #2640]
   21588:	add	x0, x0, #0xa50
   2158c:	blr	x1
   21590:	ldr	w8, [x24, x0]
   21594:	subs	x26, x26, #0x1
   21598:	b.lt	215a4 <mpfr_pow_ui@@Base+0x20c>  // b.tstop
   2159c:	and	w9, w8, w20
   215a0:	cbz	w9, 21548 <mpfr_pow_ui@@Base+0x1b0>
   215a4:	and	w26, w8, #0x3
   215a8:	cbz	w28, 21668 <mpfr_pow_ui@@Base+0x2d0>
   215ac:	cbnz	w26, 21668 <mpfr_pow_ui@@Base+0x2d0>
   215b0:	ldur	x8, [x29, #-16]
   215b4:	mov	x9, #0x4                   	// #4
   215b8:	movk	x9, #0x8000, lsl #48
   215bc:	cmp	x8, x9
   215c0:	b.lt	215fc <mpfr_pow_ui@@Base+0x264>  // b.tstop
   215c4:	ldur	x8, [x29, #-32]
   215c8:	ldr	x9, [x19]
   215cc:	ldur	x0, [x29, #-8]
   215d0:	mov	x2, x27
   215d4:	sub	x10, x8, #0x1
   215d8:	add	x8, x8, #0x3e
   215dc:	cmp	x10, #0x0
   215e0:	csel	x8, x8, x10, lt  // lt = tstop
   215e4:	asr	x8, x8, #6
   215e8:	add	x1, x8, #0x1
   215ec:	ldr	x8, [sp, #16]
   215f0:	add	x3, x9, x8
   215f4:	bl	c370 <mpfr_round_p@plt>
   215f8:	cbnz	w0, 21668 <mpfr_pow_ui@@Base+0x2d0>
   215fc:	ldp	x26, x23, [sp]
   21600:	mov	x8, #0x4                   	// #4
   21604:	movk	x8, #0x8000, lsl #48
   21608:	sub	x8, x8, x26
   2160c:	sub	x8, x8, #0x105
   21610:	cmp	x23, x8
   21614:	b.gt	2164c <mpfr_pow_ui@@Base+0x2b4>
   21618:	add	x26, x26, x23
   2161c:	cmp	x26, #0x0
   21620:	cinc	x8, x26, lt  // lt = tstop
   21624:	asr	x8, x8, #1
   21628:	sub	x0, x29, #0x20
   2162c:	mov	x1, x26
   21630:	str	x8, [sp, #8]
   21634:	bl	bf20 <mpfr_set_prec@plt>
   21638:	b	214a4 <mpfr_pow_ui@@Base+0x10c>
   2163c:	mov	x19, x23
   21640:	and	w26, w8, #0x3
   21644:	cbnz	w28, 215ac <mpfr_pow_ui@@Base+0x214>
   21648:	b	21668 <mpfr_pow_ui@@Base+0x2d0>
   2164c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   21650:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   21654:	mov	w1, #0x86                  	// #134
   21658:	add	x0, x0, #0x38d
   2165c:	add	x2, x2, #0x622
   21660:	bl	cb20 <mpfr_assert_fail@plt>
   21664:	b	21618 <mpfr_pow_ui@@Base+0x280>
   21668:	cbnz	w26, 217b4 <mpfr_pow_ui@@Base+0x41c>
   2166c:	ldr	w20, [sp, #44]
   21670:	ldur	w3, [x29, #-24]
   21674:	sub	x1, x29, #0x20
   21678:	mov	x0, x19
   2167c:	mov	w2, w20
   21680:	bl	c690 <mpfr_set4@plt>
   21684:	mov	w23, w0
   21688:	sub	x0, x29, #0x20
   2168c:	bl	c0b0 <mpfr_clear@plt>
   21690:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21694:	ldr	x1, [x0, #2640]
   21698:	add	x0, x0, #0xa50
   2169c:	blr	x1
   216a0:	ldr	w9, [sp, #40]
   216a4:	str	w9, [x24, x0]
   216a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   216ac:	ldr	x1, [x0, #2576]
   216b0:	add	x0, x0, #0xa10
   216b4:	blr	x1
   216b8:	ldr	x10, [sp, #32]
   216bc:	str	x10, [x24, x0]
   216c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   216c4:	ldr	x1, [x0, #2608]
   216c8:	add	x0, x0, #0xa30
   216cc:	blr	x1
   216d0:	ldr	x11, [sp, #24]
   216d4:	str	x11, [x24, x0]
   216d8:	ldr	x8, [x19, #16]
   216dc:	cmp	x8, x11
   216e0:	b.gt	2185c <mpfr_pow_ui@@Base+0x4c4>
   216e4:	cmp	x8, x10
   216e8:	b.lt	2185c <mpfr_pow_ui@@Base+0x4c4>  // b.tstop
   216ec:	cbz	w23, 21708 <mpfr_pow_ui@@Base+0x370>
   216f0:	orr	w8, w9, #0x8
   216f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   216f8:	ldr	x1, [x0, #2640]
   216fc:	add	x0, x0, #0xa50
   21700:	blr	x1
   21704:	str	w8, [x24, x0]
   21708:	mov	w0, w23
   2170c:	ldp	x20, x19, [sp, #176]
   21710:	ldp	x22, x21, [sp, #160]
   21714:	ldp	x24, x23, [sp, #144]
   21718:	ldp	x26, x25, [sp, #128]
   2171c:	ldp	x28, x27, [sp, #112]
   21720:	ldp	x29, x30, [sp, #96]
   21724:	add	sp, sp, #0xc0
   21728:	ret
   2172c:	mov	w1, #0x1                   	// #1
   21730:	mov	x0, x19
   21734:	mov	w3, w23
   21738:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   2173c:	b	21884 <mpfr_pow_ui@@Base+0x4ec>
   21740:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   21744:	cmp	x9, x8
   21748:	b.eq	2188c <mpfr_pow_ui@@Base+0x4f4>  // b.none
   2174c:	mov	x8, #0x2                   	// #2
   21750:	movk	x8, #0x8000, lsl #48
   21754:	cmp	x9, x8
   21758:	b.ne	218b4 <mpfr_pow_ui@@Base+0x51c>  // b.any
   2175c:	mov	x8, #0x4                   	// #4
   21760:	movk	x8, #0x8000, lsl #48
   21764:	sub	x8, x8, #0x2
   21768:	str	x8, [x19, #16]
   2176c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   21770:	ldr	x1, [x0, #2640]
   21774:	add	x0, x0, #0xa50
   21778:	blr	x1
   2177c:	mrs	x8, tpidr_el0
   21780:	ldr	w9, [x8, x0]
   21784:	mov	w23, wzr
   21788:	orr	w9, w9, #0x4
   2178c:	str	w9, [x8, x0]
   21790:	b	21708 <mpfr_pow_ui@@Base+0x370>
   21794:	b.ne	21870 <mpfr_pow_ui@@Base+0x4d8>  // b.any
   21798:	mov	x0, x19
   2179c:	mov	x1, x21
   217a0:	mov	w2, w23
   217a4:	bl	c3f0 <mpfr_sqr@plt>
   217a8:	b	21884 <mpfr_pow_ui@@Base+0x4ec>
   217ac:	mov	x8, xzr
   217b0:	b	2146c <mpfr_pow_ui@@Base+0xd4>
   217b4:	sub	x0, x29, #0x20
   217b8:	bl	c0b0 <mpfr_clear@plt>
   217bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   217c0:	ldr	x1, [x0, #2640]
   217c4:	add	x0, x0, #0xa50
   217c8:	blr	x1
   217cc:	ldr	w8, [sp, #40]
   217d0:	str	w8, [x24, x0]
   217d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   217d8:	ldr	x1, [x0, #2576]
   217dc:	add	x0, x0, #0xa10
   217e0:	blr	x1
   217e4:	ldr	x8, [sp, #32]
   217e8:	str	x8, [x24, x0]
   217ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   217f0:	ldr	x1, [x0, #2608]
   217f4:	add	x0, x0, #0xa30
   217f8:	blr	x1
   217fc:	ldr	x8, [sp, #24]
   21800:	str	x8, [x24, x0]
   21804:	add	x0, sp, #0x30
   21808:	bl	bfe0 <mpfr_mpz_init@plt>
   2180c:	add	x0, sp, #0x30
   21810:	mov	x1, x22
   21814:	bl	bd00 <__gmpz_set_ui@plt>
   21818:	ldr	w3, [sp, #44]
   2181c:	add	x2, sp, #0x30
   21820:	mov	x0, x19
   21824:	mov	x1, x21
   21828:	bl	bf40 <mpfr_pow_z@plt>
   2182c:	mov	w23, w0
   21830:	add	x0, sp, #0x30
   21834:	bl	c1b0 <mpfr_mpz_clear@plt>
   21838:	b	21708 <mpfr_pow_ui@@Base+0x370>
   2183c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   21840:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   21844:	add	x0, x0, #0x38d
   21848:	add	x2, x2, #0xbad
   2184c:	mov	w1, #0x5e                  	// #94
   21850:	bl	cb20 <mpfr_assert_fail@plt>
   21854:	ldr	x8, [x19]
   21858:	b	2145c <mpfr_pow_ui@@Base+0xc4>
   2185c:	mov	x0, x19
   21860:	mov	w1, w23
   21864:	mov	w2, w20
   21868:	bl	cb10 <mpfr_check_range@plt>
   2186c:	b	21884 <mpfr_pow_ui@@Base+0x4ec>
   21870:	ldr	w3, [x21, #8]
   21874:	mov	x0, x19
   21878:	mov	x1, x21
   2187c:	mov	w2, w23
   21880:	bl	c690 <mpfr_set4@plt>
   21884:	mov	w23, w0
   21888:	b	21708 <mpfr_pow_ui@@Base+0x370>
   2188c:	ldr	w9, [x21, #8]
   21890:	and	x10, x22, #0x1
   21894:	mov	w11, #0x1                   	// #1
   21898:	mov	w23, wzr
   2189c:	cmn	w9, #0x1
   218a0:	ccmp	x10, #0x0, #0x4, le
   218a4:	cneg	w9, w11, ne  // ne = any
   218a8:	str	w9, [x19, #8]
   218ac:	str	x8, [x19, #16]
   218b0:	b	21708 <mpfr_pow_ui@@Base+0x370>
   218b4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   218b8:	str	x8, [x19, #16]
   218bc:	tbz	w22, #0, 218dc <mpfr_pow_ui@@Base+0x544>
   218c0:	ldr	w8, [x21, #8]
   218c4:	cmp	w8, #0x1
   218c8:	b.ge	218dc <mpfr_pow_ui@@Base+0x544>  // b.tcont
   218cc:	mov	w8, #0xffffffff            	// #-1
   218d0:	mov	w23, wzr
   218d4:	str	w8, [x19, #8]
   218d8:	b	21708 <mpfr_pow_ui@@Base+0x370>
   218dc:	mov	w8, #0x1                   	// #1
   218e0:	mov	w23, wzr
   218e4:	str	w8, [x19, #8]
   218e8:	b	21708 <mpfr_pow_ui@@Base+0x370>

00000000000218ec <mpfr_print_mant_binary@@Base>:
   218ec:	stp	x29, x30, [sp, #-80]!
   218f0:	stp	x20, x19, [sp, #64]
   218f4:	mov	x20, x1
   218f8:	mov	x1, x0
   218fc:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   21900:	add	x0, x0, #0xbc5
   21904:	stp	x26, x25, [sp, #16]
   21908:	stp	x24, x23, [sp, #32]
   2190c:	stp	x22, x21, [sp, #48]
   21910:	mov	x29, sp
   21914:	mov	x19, x2
   21918:	bl	cbd0 <printf@plt>
   2191c:	adrp	x21, 76000 <__gmpfr_l2b@@Base+0x2e0>
   21920:	ldr	x21, [x21, #4000]
   21924:	cmn	x19, #0x3e
   21928:	mov	x22, xzr
   2192c:	b.lt	219bc <mpfr_print_mant_binary@@Base+0xd0>  // b.tstop
   21930:	sub	x8, x19, #0x1
   21934:	add	x9, x19, #0x3e
   21938:	cmp	x8, #0x0
   2193c:	mov	w10, #0x1                   	// #1
   21940:	csel	x8, x9, x8, lt  // lt = tstop
   21944:	sub	x23, x10, x19
   21948:	asr	x24, x8, #6
   2194c:	mov	w25, #0x30                  	// #48
   21950:	b	21974 <mpfr_print_mant_binary@@Base+0x88>
   21954:	ldr	x1, [x21]
   21958:	mov	w0, #0x2e                  	// #46
   2195c:	add	x22, x22, #0x40
   21960:	bl	bd70 <putc@plt>
   21964:	cmp	x24, #0x0
   21968:	sub	x24, x24, #0x1
   2196c:	add	x23, x23, #0x40
   21970:	b.le	219bc <mpfr_print_mant_binary@@Base+0xd0>
   21974:	mov	x26, xzr
   21978:	b	21988 <mpfr_print_mant_binary@@Base+0x9c>
   2197c:	sub	x26, x26, #0x1
   21980:	cmn	w26, #0x40
   21984:	b.eq	21954 <mpfr_print_mant_binary@@Base+0x68>  // b.none
   21988:	ldr	x8, [x20, x24, lsl #3]
   2198c:	add	x9, x26, #0x3f
   21990:	ldr	x1, [x21]
   21994:	lsr	x8, x8, x9
   21998:	tst	x8, #0x1
   2199c:	cinc	w0, w25, ne  // ne = any
   219a0:	bl	bd70 <putc@plt>
   219a4:	cmp	x23, x26
   219a8:	b.ne	2197c <mpfr_print_mant_binary@@Base+0x90>  // b.any
   219ac:	ldr	x1, [x21]
   219b0:	mov	w0, #0x5b                  	// #91
   219b4:	bl	bd70 <putc@plt>
   219b8:	b	2197c <mpfr_print_mant_binary@@Base+0x90>
   219bc:	cmp	x22, x19
   219c0:	b.lt	219d0 <mpfr_print_mant_binary@@Base+0xe4>  // b.tstop
   219c4:	ldr	x1, [x21]
   219c8:	mov	w0, #0x5d                  	// #93
   219cc:	bl	bd70 <putc@plt>
   219d0:	ldr	x1, [x21]
   219d4:	ldp	x20, x19, [sp, #64]
   219d8:	ldp	x22, x21, [sp, #48]
   219dc:	ldp	x24, x23, [sp, #32]
   219e0:	ldp	x26, x25, [sp, #16]
   219e4:	mov	w0, #0xa                   	// #10
   219e8:	ldp	x29, x30, [sp], #80
   219ec:	b	bd70 <putc@plt>

00000000000219f0 <mpfr_print_rnd_mode@@Base>:
   219f0:	cmp	w0, #0x5
   219f4:	b.hi	21a08 <mpfr_print_rnd_mode@@Base+0x18>  // b.pmore
   219f8:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   219fc:	add	x8, x8, #0xc60
   21a00:	ldr	x0, [x8, w0, sxtw #3]
   21a04:	ret
   21a08:	mov	x0, xzr
   21a0c:	ret

0000000000021a10 <mpfr_reldiff@@Base>:
   21a10:	sub	sp, sp, #0x50
   21a14:	stp	x29, x30, [sp, #32]
   21a18:	stp	x22, x21, [sp, #48]
   21a1c:	stp	x20, x19, [sp, #64]
   21a20:	ldr	x9, [x1, #16]
   21a24:	mov	x8, #0x2                   	// #2
   21a28:	movk	x8, #0x8000, lsl #48
   21a2c:	add	x11, x8, #0x2
   21a30:	mov	w21, w3
   21a34:	mov	x22, x2
   21a38:	mov	x20, x1
   21a3c:	cmp	x9, x11
   21a40:	mov	x19, x0
   21a44:	add	x29, sp, #0x20
   21a48:	b.lt	21ae8 <mpfr_reldiff@@Base+0xd8>  // b.tstop
   21a4c:	ldr	x10, [x22, #16]
   21a50:	cmp	x10, x11
   21a54:	b.lt	21af4 <mpfr_reldiff@@Base+0xe4>  // b.tstop
   21a58:	cmp	x19, x20
   21a5c:	b.ne	21a80 <mpfr_reldiff@@Base+0x70>  // b.any
   21a60:	ldr	x1, [x20]
   21a64:	mov	x0, sp
   21a68:	bl	ca60 <mpfr_init2@plt>
   21a6c:	ldr	w3, [x20, #8]
   21a70:	mov	x0, sp
   21a74:	mov	x1, x20
   21a78:	mov	w2, wzr
   21a7c:	bl	c690 <mpfr_set4@plt>
   21a80:	mov	x0, x19
   21a84:	mov	x1, x20
   21a88:	mov	x2, x22
   21a8c:	mov	w3, w21
   21a90:	bl	bbc0 <mpfr_sub@plt>
   21a94:	mov	w3, #0x1                   	// #1
   21a98:	mov	x0, x19
   21a9c:	mov	x1, x19
   21aa0:	mov	w2, w21
   21aa4:	bl	c690 <mpfr_set4@plt>
   21aa8:	cmp	x19, x20
   21aac:	mov	x8, sp
   21ab0:	csel	x2, x8, x20, eq  // eq = none
   21ab4:	mov	x0, x19
   21ab8:	mov	x1, x19
   21abc:	mov	w3, w21
   21ac0:	bl	c610 <mpfr_div@plt>
   21ac4:	cmp	x19, x20
   21ac8:	b.ne	21ad4 <mpfr_reldiff@@Base+0xc4>  // b.any
   21acc:	mov	x0, sp
   21ad0:	bl	c0b0 <mpfr_clear@plt>
   21ad4:	ldp	x20, x19, [sp, #64]
   21ad8:	ldp	x22, x21, [sp, #48]
   21adc:	ldp	x29, x30, [sp, #32]
   21ae0:	add	sp, sp, #0x50
   21ae4:	ret
   21ae8:	cmp	x9, x8
   21aec:	b.eq	21b24 <mpfr_reldiff@@Base+0x114>  // b.none
   21af0:	ldr	x10, [x22, #16]
   21af4:	cmp	x10, x8
   21af8:	b.eq	21b24 <mpfr_reldiff@@Base+0x114>  // b.none
   21afc:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   21b00:	cmp	x9, x11
   21b04:	b.ne	21b2c <mpfr_reldiff@@Base+0x11c>  // b.any
   21b08:	cmp	x10, x11
   21b0c:	b.ne	21b24 <mpfr_reldiff@@Base+0x114>  // b.any
   21b10:	ldr	w9, [x22, #8]
   21b14:	ldr	w10, [x20, #8]
   21b18:	cmp	w9, w10
   21b1c:	b.ne	21b24 <mpfr_reldiff@@Base+0x114>  // b.any
   21b20:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   21b24:	str	x8, [x19, #16]
   21b28:	b	21ad4 <mpfr_reldiff@@Base+0xc4>
   21b2c:	cmp	x10, x11
   21b30:	b.ne	21b48 <mpfr_reldiff@@Base+0x138>  // b.any
   21b34:	ldr	w8, [x20, #8]
   21b38:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   21b3c:	str	x9, [x19, #16]
   21b40:	str	w8, [x19, #8]
   21b44:	b	21ad4 <mpfr_reldiff@@Base+0xc4>
   21b48:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   21b4c:	cmp	x9, x8
   21b50:	b.ne	21a58 <mpfr_reldiff@@Base+0x48>  // b.any
   21b54:	ldrsw	x1, [x22, #8]
   21b58:	mov	x0, x19
   21b5c:	mov	x2, xzr
   21b60:	mov	w3, w21
   21b64:	bl	bae0 <mpfr_set_si_2exp@plt>
   21b68:	b	21ad4 <mpfr_reldiff@@Base+0xc4>

0000000000021b6c <mpfr_round_raw@@Base>:
   21b6c:	stp	x29, x30, [sp, #-32]!
   21b70:	stp	x20, x19, [sp, #16]
   21b74:	cmp	w5, #0x5
   21b78:	mov	x19, x0
   21b7c:	mov	x29, sp
   21b80:	b.ne	21b94 <mpfr_round_raw@@Base+0x28>  // b.any
   21b84:	mov	w11, wzr
   21b88:	mov	w5, #0x1                   	// #1
   21b8c:	str	wzr, [x6]
   21b90:	b	21b98 <mpfr_round_raw@@Base+0x2c>
   21b94:	mov	w11, #0x1                   	// #1
   21b98:	sub	x8, x2, #0x1
   21b9c:	add	x9, x2, #0x3e
   21ba0:	cmp	x8, #0x0
   21ba4:	add	x10, x4, #0x3f
   21ba8:	csel	x8, x9, x8, lt  // lt = tstop
   21bac:	cmp	x4, #0x0
   21bb0:	asr	x9, x8, #6
   21bb4:	csel	x10, x10, x4, lt  // lt = tstop
   21bb8:	cmp	x2, x4
   21bbc:	add	x8, x9, #0x1
   21bc0:	asr	x10, x10, #6
   21bc4:	and	w12, w4, #0x3f
   21bc8:	b.le	22180 <mpfr_round_raw@@Base+0x614>
   21bcc:	cbnz	w11, 21be4 <mpfr_round_raw@@Base+0x78>
   21bd0:	cmp	w5, #0x1
   21bd4:	b.eq	21d40 <mpfr_round_raw@@Base+0x1d4>  // b.none
   21bd8:	add	w11, w5, w3
   21bdc:	cmp	w11, #0x3
   21be0:	b.eq	21d40 <mpfr_round_raw@@Base+0x1d4>  // b.none
   21be4:	sub	x14, x9, x10
   21be8:	ldr	x17, [x1, x14, lsl #3]
   21bec:	neg	w15, w12
   21bf0:	mov	x16, #0xffffffffffffffff    	// #-1
   21bf4:	cmp	w12, #0x0
   21bf8:	lsl	x15, x16, x15
   21bfc:	mov	w11, #0x40                  	// #64
   21c00:	csinv	x20, x15, xzr, ne  // ne = any
   21c04:	csinv	x15, x16, x15, eq  // eq = none
   21c08:	add	w16, w5, #0x1
   21c0c:	sub	w13, w11, w12
   21c10:	cset	w11, ne  // ne = any
   21c14:	cinc	x2, x10, ne  // ne = any
   21c18:	cmp	w16, #0x1
   21c1c:	and	x15, x17, x15
   21c20:	b.hi	21c98 <mpfr_round_raw@@Base+0x12c>  // b.pmore
   21c24:	eor	w16, w12, #0x3f
   21c28:	mov	w17, #0x1                   	// #1
   21c2c:	lsl	x16, x17, x16
   21c30:	tst	x15, x16
   21c34:	b.eq	21cf0 <mpfr_round_raw@@Base+0x184>  // b.none
   21c38:	cmn	w5, #0x1
   21c3c:	b.eq	21c90 <mpfr_round_raw@@Base+0x124>  // b.none
   21c40:	bics	xzr, x15, x16
   21c44:	bic	x17, x15, x16
   21c48:	cset	w15, eq  // eq = none
   21c4c:	cbnz	x17, 21c78 <mpfr_round_raw@@Base+0x10c>
   21c50:	cmp	x14, #0x1
   21c54:	b.lt	21c78 <mpfr_round_raw@@Base+0x10c>  // b.tstop
   21c58:	sub	x16, x1, #0x8
   21c5c:	ldr	x17, [x16, x14, lsl #3]
   21c60:	cmp	x17, #0x0
   21c64:	cset	w15, eq  // eq = none
   21c68:	cbnz	x17, 21c78 <mpfr_round_raw@@Base+0x10c>
   21c6c:	cmp	x14, #0x1
   21c70:	sub	x14, x14, #0x1
   21c74:	b.gt	21c5c <mpfr_round_raw@@Base+0xf0>
   21c78:	cbz	w15, 21d84 <mpfr_round_raw@@Base+0x218>
   21c7c:	sub	x14, x8, x2
   21c80:	ldr	x14, [x1, x14, lsl #3]
   21c84:	eor	x15, x20, x20, lsl #1
   21c88:	tst	x14, x15
   21c8c:	b.eq	220ec <mpfr_round_raw@@Base+0x580>  // b.none
   21c90:	mov	w15, #0x2                   	// #2
   21c94:	b	21d88 <mpfr_round_raw@@Base+0x21c>
   21c98:	cmp	w5, #0x1
   21c9c:	b.eq	21cf0 <mpfr_round_raw@@Base+0x184>  // b.none
   21ca0:	add	w16, w5, w3
   21ca4:	cmp	w16, #0x3
   21ca8:	b.eq	21cf0 <mpfr_round_raw@@Base+0x184>  // b.none
   21cac:	cmp	x15, #0x0
   21cb0:	cset	w16, eq  // eq = none
   21cb4:	cbnz	x15, 21ce0 <mpfr_round_raw@@Base+0x174>
   21cb8:	cmp	x14, #0x1
   21cbc:	b.lt	21ce0 <mpfr_round_raw@@Base+0x174>  // b.tstop
   21cc0:	sub	x15, x1, #0x8
   21cc4:	ldr	x17, [x15, x14, lsl #3]
   21cc8:	cmp	x17, #0x0
   21ccc:	cset	w16, eq  // eq = none
   21cd0:	cbnz	x17, 21ce0 <mpfr_round_raw@@Base+0x174>
   21cd4:	cmp	x14, #0x1
   21cd8:	sub	x14, x14, #0x1
   21cdc:	b.gt	21cc4 <mpfr_round_raw@@Base+0x158>
   21ce0:	cbz	w16, 21f38 <mpfr_round_raw@@Base+0x3cc>
   21ce4:	str	wzr, [x6]
   21ce8:	add	x8, x1, x8, lsl #3
   21cec:	b	21d5c <mpfr_round_raw@@Base+0x1f0>
   21cf0:	cmp	x15, #0x0
   21cf4:	cset	w9, eq  // eq = none
   21cf8:	cbnz	x15, 21d24 <mpfr_round_raw@@Base+0x1b8>
   21cfc:	cmp	x14, #0x1
   21d00:	b.lt	21d24 <mpfr_round_raw@@Base+0x1b8>  // b.tstop
   21d04:	sub	x10, x1, #0x8
   21d08:	ldr	x11, [x10, x14, lsl #3]
   21d0c:	cmp	x11, #0x0
   21d10:	cset	w9, eq  // eq = none
   21d14:	cbnz	x11, 21d24 <mpfr_round_raw@@Base+0x1b8>
   21d18:	cmp	x14, #0x1
   21d1c:	sub	x14, x14, #0x1
   21d20:	b.gt	21d08 <mpfr_round_raw@@Base+0x19c>
   21d24:	lsl	w10, w3, #1
   21d28:	cmp	w9, #0x0
   21d2c:	sub	w9, w10, #0x1
   21d30:	csel	w9, wzr, w9, ne  // ne = any
   21d34:	add	x8, x1, x8, lsl #3
   21d38:	str	w9, [x6]
   21d3c:	b	21d5c <mpfr_round_raw@@Base+0x1f0>
   21d40:	neg	w9, w12
   21d44:	mov	x11, #0xffffffffffffffff    	// #-1
   21d48:	cmp	w12, #0x0
   21d4c:	lsl	x9, x11, x9
   21d50:	add	x8, x1, x8, lsl #3
   21d54:	cinc	x2, x10, ne  // ne = any
   21d58:	csinv	x20, x9, xzr, ne  // ne = any
   21d5c:	sub	x1, x8, x2, lsl #3
   21d60:	mov	x0, x19
   21d64:	bl	c510 <__gmpn_copyi@plt>
   21d68:	mov	w0, wzr
   21d6c:	ldr	x8, [x19]
   21d70:	and	x8, x8, x20
   21d74:	str	x8, [x19]
   21d78:	ldp	x20, x19, [sp, #16]
   21d7c:	ldp	x29, x30, [sp], #32
   21d80:	ret
   21d84:	mov	w15, #0x1                   	// #1
   21d88:	lsl	w16, w3, w15
   21d8c:	add	x14, x1, x8, lsl #3
   21d90:	sub	w8, w15, w16
   21d94:	sub	x16, x14, x2, lsl #3
   21d98:	str	w8, [x6]
   21d9c:	ldr	x15, [x16]
   21da0:	mov	w8, #0x1                   	// #1
   21da4:	lsl	x8, x8, x13
   21da8:	cmp	w12, #0x0
   21dac:	csinc	x8, x8, xzr, ne  // ne = any
   21db0:	adds	x8, x15, x8
   21db4:	str	x8, [x19]
   21db8:	b.cc	21ec0 <mpfr_round_raw@@Base+0x354>  // b.lo, b.ul, b.last
   21dbc:	add	x17, x10, x11
   21dc0:	sub	x15, x9, x17
   21dc4:	mov	x12, xzr
   21dc8:	sub	x13, x17, #0x1
   21dcc:	add	x18, x1, x15, lsl #3
   21dd0:	mov	w8, #0x1                   	// #1
   21dd4:	cmp	x8, x2
   21dd8:	b.ge	2206c <mpfr_round_raw@@Base+0x500>  // b.tcont
   21ddc:	add	x0, x18, x12
   21de0:	ldr	x0, [x0, #16]
   21de4:	add	x3, x19, x12
   21de8:	add	x8, x8, #0x1
   21dec:	add	x12, x12, #0x8
   21df0:	adds	x0, x0, #0x1
   21df4:	sub	x13, x13, #0x1
   21df8:	str	x0, [x3, #8]
   21dfc:	b.cs	21dd4 <mpfr_round_raw@@Base+0x268>  // b.hs, b.nlast
   21e00:	cmp	x16, x19
   21e04:	mov	w0, wzr
   21e08:	b.eq	21d6c <mpfr_round_raw@@Base+0x200>  // b.none
   21e0c:	cmp	x8, x2
   21e10:	b.ge	21d6c <mpfr_round_raw@@Base+0x200>  // b.tcont
   21e14:	sub	x16, x17, x8
   21e18:	cmp	x16, #0x4
   21e1c:	b.cc	21e90 <mpfr_round_raw@@Base+0x324>  // b.lo, b.ul, b.last
   21e20:	add	x17, x19, x12
   21e24:	add	x17, x17, #0x8
   21e28:	cmp	x17, x14
   21e2c:	b.cs	21e4c <mpfr_round_raw@@Base+0x2e0>  // b.hs, b.nlast
   21e30:	add	x17, x1, x15, lsl #3
   21e34:	add	x14, x10, x11
   21e38:	add	x17, x17, x12
   21e3c:	add	x14, x19, x14, lsl #3
   21e40:	add	x17, x17, #0x10
   21e44:	cmp	x17, x14
   21e48:	b.cc	21e90 <mpfr_round_raw@@Base+0x324>  // b.lo, b.ul, b.last
   21e4c:	add	x15, x1, x15, lsl #3
   21e50:	add	x17, x19, x12
   21e54:	and	x14, x16, #0xfffffffffffffffc
   21e58:	and	x18, x13, #0xfffffffffffffffc
   21e5c:	add	x12, x15, x12
   21e60:	add	x13, x17, #0x18
   21e64:	add	x12, x12, #0x20
   21e68:	add	x8, x18, x8
   21e6c:	mov	x15, x14
   21e70:	ldp	q0, q1, [x12, #-16]
   21e74:	add	x12, x12, #0x20
   21e78:	subs	x15, x15, #0x4
   21e7c:	stp	q0, q1, [x13, #-16]
   21e80:	add	x13, x13, #0x20
   21e84:	b.ne	21e70 <mpfr_round_raw@@Base+0x304>  // b.any
   21e88:	cmp	x16, x14
   21e8c:	b.eq	21d68 <mpfr_round_raw@@Base+0x1fc>  // b.none
   21e90:	add	x11, x10, x11
   21e94:	add	x9, x8, x9
   21e98:	sub	x9, x9, x11
   21e9c:	add	x9, x1, x9, lsl #3
   21ea0:	add	x10, x19, x8, lsl #3
   21ea4:	sub	x8, x11, x8
   21ea8:	add	x9, x9, #0x8
   21eac:	ldr	x11, [x9], #8
   21eb0:	subs	x8, x8, #0x1
   21eb4:	str	x11, [x10], #8
   21eb8:	b.ne	21eac <mpfr_round_raw@@Base+0x340>  // b.any
   21ebc:	b	21d68 <mpfr_round_raw@@Base+0x1fc>
   21ec0:	cmp	x2, #0x2
   21ec4:	mov	w0, wzr
   21ec8:	b.lt	21d6c <mpfr_round_raw@@Base+0x200>  // b.tstop
   21ecc:	cmp	x16, x19
   21ed0:	b.eq	21d6c <mpfr_round_raw@@Base+0x200>  // b.none
   21ed4:	add	x8, x10, x11
   21ed8:	sub	x12, x8, #0x1
   21edc:	cmp	x12, #0x4
   21ee0:	b.cc	21f08 <mpfr_round_raw@@Base+0x39c>  // b.lo, b.ul, b.last
   21ee4:	add	x13, x19, #0x8
   21ee8:	cmp	x13, x14
   21eec:	b.cs	220f8 <mpfr_round_raw@@Base+0x58c>  // b.hs, b.nlast
   21ef0:	sub	x14, x9, x8
   21ef4:	add	x14, x1, x14, lsl #3
   21ef8:	add	x13, x19, x8, lsl #3
   21efc:	add	x14, x14, #0x10
   21f00:	cmp	x14, x13
   21f04:	b.cs	220f8 <mpfr_round_raw@@Base+0x58c>  // b.hs, b.nlast
   21f08:	mov	w10, #0x1                   	// #1
   21f0c:	add	x9, x10, x9
   21f10:	sub	x11, x8, x10
   21f14:	sub	x8, x9, x8
   21f18:	add	x8, x1, x8, lsl #3
   21f1c:	add	x12, x19, x10, lsl #3
   21f20:	add	x8, x8, #0x8
   21f24:	ldr	x9, [x8], #8
   21f28:	subs	x11, x11, #0x1
   21f2c:	str	x9, [x12], #8
   21f30:	b.ne	21f24 <mpfr_round_raw@@Base+0x3b8>  // b.any
   21f34:	b	21d68 <mpfr_round_raw@@Base+0x1fc>
   21f38:	mov	w15, #0x1                   	// #1
   21f3c:	add	x14, x1, x8, lsl #3
   21f40:	sub	w8, w15, w3, lsl #1
   21f44:	str	w8, [x6]
   21f48:	sub	x16, x14, x2, lsl #3
   21f4c:	ldr	x8, [x16]
   21f50:	lsl	x13, x15, x13
   21f54:	cmp	w12, #0x0
   21f58:	csinc	x12, x13, xzr, ne  // ne = any
   21f5c:	adds	x8, x8, x12
   21f60:	str	x8, [x19]
   21f64:	b.cc	22074 <mpfr_round_raw@@Base+0x508>  // b.lo, b.ul, b.last
   21f68:	add	x17, x10, x11
   21f6c:	sub	x15, x9, x17
   21f70:	mov	x12, xzr
   21f74:	sub	x13, x17, #0x1
   21f78:	add	x18, x1, x15, lsl #3
   21f7c:	mov	w8, #0x1                   	// #1
   21f80:	cmp	x8, x2
   21f84:	b.ge	2206c <mpfr_round_raw@@Base+0x500>  // b.tcont
   21f88:	add	x0, x18, x12
   21f8c:	ldr	x0, [x0, #16]
   21f90:	add	x3, x19, x12
   21f94:	add	x8, x8, #0x1
   21f98:	add	x12, x12, #0x8
   21f9c:	adds	x0, x0, #0x1
   21fa0:	sub	x13, x13, #0x1
   21fa4:	str	x0, [x3, #8]
   21fa8:	b.cs	21f80 <mpfr_round_raw@@Base+0x414>  // b.hs, b.nlast
   21fac:	cmp	x16, x19
   21fb0:	mov	w0, wzr
   21fb4:	b.eq	21d6c <mpfr_round_raw@@Base+0x200>  // b.none
   21fb8:	cmp	x8, x2
   21fbc:	b.ge	21d6c <mpfr_round_raw@@Base+0x200>  // b.tcont
   21fc0:	sub	x16, x17, x8
   21fc4:	cmp	x16, #0x4
   21fc8:	b.cc	2203c <mpfr_round_raw@@Base+0x4d0>  // b.lo, b.ul, b.last
   21fcc:	add	x17, x19, x12
   21fd0:	add	x17, x17, #0x8
   21fd4:	cmp	x17, x14
   21fd8:	b.cs	21ff8 <mpfr_round_raw@@Base+0x48c>  // b.hs, b.nlast
   21fdc:	add	x17, x1, x15, lsl #3
   21fe0:	add	x14, x10, x11
   21fe4:	add	x17, x17, x12
   21fe8:	add	x14, x19, x14, lsl #3
   21fec:	add	x17, x17, #0x10
   21ff0:	cmp	x17, x14
   21ff4:	b.cc	2203c <mpfr_round_raw@@Base+0x4d0>  // b.lo, b.ul, b.last
   21ff8:	add	x15, x1, x15, lsl #3
   21ffc:	add	x17, x19, x12
   22000:	and	x14, x16, #0xfffffffffffffffc
   22004:	and	x18, x13, #0xfffffffffffffffc
   22008:	add	x12, x15, x12
   2200c:	add	x13, x17, #0x18
   22010:	add	x12, x12, #0x20
   22014:	add	x8, x18, x8
   22018:	mov	x15, x14
   2201c:	ldp	q0, q1, [x12, #-16]
   22020:	add	x12, x12, #0x20
   22024:	subs	x15, x15, #0x4
   22028:	stp	q0, q1, [x13, #-16]
   2202c:	add	x13, x13, #0x20
   22030:	b.ne	2201c <mpfr_round_raw@@Base+0x4b0>  // b.any
   22034:	cmp	x16, x14
   22038:	b.eq	21d68 <mpfr_round_raw@@Base+0x1fc>  // b.none
   2203c:	add	x11, x10, x11
   22040:	add	x9, x8, x9
   22044:	sub	x9, x9, x11
   22048:	add	x9, x1, x9, lsl #3
   2204c:	add	x10, x19, x8, lsl #3
   22050:	sub	x8, x11, x8
   22054:	add	x9, x9, #0x8
   22058:	ldr	x11, [x9], #8
   2205c:	subs	x8, x8, #0x1
   22060:	str	x11, [x10], #8
   22064:	b.ne	22058 <mpfr_round_raw@@Base+0x4ec>  // b.any
   22068:	b	21d68 <mpfr_round_raw@@Base+0x1fc>
   2206c:	mov	w0, #0x1                   	// #1
   22070:	b	21d6c <mpfr_round_raw@@Base+0x200>
   22074:	cmp	x2, #0x2
   22078:	mov	w0, wzr
   2207c:	b.lt	21d6c <mpfr_round_raw@@Base+0x200>  // b.tstop
   22080:	cmp	x16, x19
   22084:	b.eq	21d6c <mpfr_round_raw@@Base+0x200>  // b.none
   22088:	add	x8, x10, x11
   2208c:	sub	x12, x8, #0x1
   22090:	cmp	x12, #0x4
   22094:	b.cc	220bc <mpfr_round_raw@@Base+0x550>  // b.lo, b.ul, b.last
   22098:	add	x13, x19, #0x8
   2209c:	cmp	x13, x14
   220a0:	b.cs	2213c <mpfr_round_raw@@Base+0x5d0>  // b.hs, b.nlast
   220a4:	sub	x14, x9, x8
   220a8:	add	x14, x1, x14, lsl #3
   220ac:	add	x13, x19, x8, lsl #3
   220b0:	add	x14, x14, #0x10
   220b4:	cmp	x14, x13
   220b8:	b.cs	2213c <mpfr_round_raw@@Base+0x5d0>  // b.hs, b.nlast
   220bc:	mov	w10, #0x1                   	// #1
   220c0:	add	x9, x10, x9
   220c4:	sub	x11, x8, x10
   220c8:	sub	x8, x9, x8
   220cc:	add	x8, x1, x8, lsl #3
   220d0:	add	x12, x19, x10, lsl #3
   220d4:	add	x8, x8, #0x8
   220d8:	ldr	x9, [x8], #8
   220dc:	subs	x11, x11, #0x1
   220e0:	str	x9, [x12], #8
   220e4:	b.ne	220d8 <mpfr_round_raw@@Base+0x56c>  // b.any
   220e8:	b	21d68 <mpfr_round_raw@@Base+0x1fc>
   220ec:	lsl	w9, w3, #2
   220f0:	sub	w9, w9, #0x2
   220f4:	b	21d34 <mpfr_round_raw@@Base+0x1c8>
   220f8:	add	x11, x10, x11
   220fc:	sub	x11, x9, x11
   22100:	and	x13, x12, #0xfffffffffffffffc
   22104:	add	x11, x1, x11, lsl #3
   22108:	orr	x10, x13, #0x1
   2210c:	add	x11, x11, #0x20
   22110:	add	x14, x19, #0x18
   22114:	mov	x15, x13
   22118:	ldp	q0, q1, [x11, #-16]
   2211c:	subs	x15, x15, #0x4
   22120:	add	x11, x11, #0x20
   22124:	stp	q0, q1, [x14, #-16]
   22128:	add	x14, x14, #0x20
   2212c:	b.ne	22118 <mpfr_round_raw@@Base+0x5ac>  // b.any
   22130:	cmp	x12, x13
   22134:	b.eq	21d68 <mpfr_round_raw@@Base+0x1fc>  // b.none
   22138:	b	21f0c <mpfr_round_raw@@Base+0x3a0>
   2213c:	add	x11, x10, x11
   22140:	sub	x11, x9, x11
   22144:	and	x13, x12, #0xfffffffffffffffc
   22148:	add	x11, x1, x11, lsl #3
   2214c:	orr	x10, x13, #0x1
   22150:	add	x11, x11, #0x20
   22154:	add	x14, x19, #0x18
   22158:	mov	x15, x13
   2215c:	ldp	q0, q1, [x11, #-16]
   22160:	subs	x15, x15, #0x4
   22164:	add	x11, x11, #0x20
   22168:	stp	q0, q1, [x14, #-16]
   2216c:	add	x14, x14, #0x20
   22170:	b.ne	2215c <mpfr_round_raw@@Base+0x5f0>  // b.any
   22174:	cmp	x12, x13
   22178:	b.eq	21d68 <mpfr_round_raw@@Base+0x1fc>  // b.none
   2217c:	b	220c0 <mpfr_round_raw@@Base+0x554>
   22180:	sub	x11, x10, x9
   22184:	mvn	x9, x9
   22188:	cmp	w12, #0x0
   2218c:	add	x9, x10, x9
   22190:	csel	x9, x9, x11, eq  // eq = none
   22194:	lsl	x20, x9, #3
   22198:	add	x0, x19, x20
   2219c:	mov	x2, x8
   221a0:	str	wzr, [x6]
   221a4:	bl	bb40 <__gmpn_copyd@plt>
   221a8:	mov	x0, x19
   221ac:	mov	w1, wzr
   221b0:	mov	x2, x20
   221b4:	bl	c150 <memset@plt>
   221b8:	mov	w0, wzr
   221bc:	ldp	x20, x19, [sp, #16]
   221c0:	ldp	x29, x30, [sp], #32
   221c4:	ret

00000000000221c8 <mpfr_round_raw_2@@Base>:
   221c8:	cmp	w4, #0x5
   221cc:	b.ne	221d8 <mpfr_round_raw_2@@Base+0x10>  // b.any
   221d0:	mov	w0, wzr
   221d4:	ret
   221d8:	cmp	x1, x3
   221dc:	mov	w8, wzr
   221e0:	b.le	222cc <mpfr_round_raw_2@@Base+0x104>
   221e4:	cmp	w4, #0x1
   221e8:	b.eq	222cc <mpfr_round_raw_2@@Base+0x104>  // b.none
   221ec:	add	w9, w4, w2
   221f0:	cmp	w9, #0x3
   221f4:	b.eq	222cc <mpfr_round_raw_2@@Base+0x104>  // b.none
   221f8:	sub	x8, x1, #0x1
   221fc:	add	x9, x1, #0x3e
   22200:	cmp	x8, #0x0
   22204:	add	x10, x3, #0x3f
   22208:	and	w12, w3, #0x3f
   2220c:	csel	x8, x9, x8, lt  // lt = tstop
   22210:	cmp	x3, #0x0
   22214:	mov	x11, #0xffffffffffffffff    	// #-1
   22218:	neg	w13, w12
   2221c:	csel	x10, x10, x3, lt  // lt = tstop
   22220:	lsl	x9, x11, x13
   22224:	asr	x8, x8, #6
   22228:	asr	x13, x10, #6
   2222c:	sub	x8, x8, x13
   22230:	ldr	x13, [x0, x8, lsl #3]
   22234:	tst	w3, #0x3f
   22238:	csinv	x11, x11, x9, eq  // eq = none
   2223c:	add	w14, w4, #0x1
   22240:	cset	w10, ne  // ne = any
   22244:	csinv	x9, x9, xzr, ne  // ne = any
   22248:	cmp	w14, #0x2
   2224c:	and	x11, x13, x11
   22250:	b.cs	222d4 <mpfr_round_raw_2@@Base+0x10c>  // b.hs, b.nlast
   22254:	eor	w12, w12, #0x3f
   22258:	mov	w13, #0x1                   	// #1
   2225c:	lsl	x12, x13, x12
   22260:	tst	x11, x12
   22264:	b.eq	221d0 <mpfr_round_raw_2@@Base+0x8>  // b.none
   22268:	cmn	w4, #0x1
   2226c:	b.eq	222c8 <mpfr_round_raw_2@@Base+0x100>  // b.none
   22270:	bics	xzr, x11, x12
   22274:	bic	x13, x11, x12
   22278:	cset	w11, eq  // eq = none
   2227c:	cbnz	x13, 222ac <mpfr_round_raw_2@@Base+0xe4>
   22280:	cmp	x8, #0x1
   22284:	b.lt	222ac <mpfr_round_raw_2@@Base+0xe4>  // b.tstop
   22288:	sub	x12, x0, #0x8
   2228c:	mov	x13, x8
   22290:	ldr	x14, [x12, x13, lsl #3]
   22294:	cmp	x14, #0x0
   22298:	cset	w11, eq  // eq = none
   2229c:	cbnz	x14, 222ac <mpfr_round_raw_2@@Base+0xe4>
   222a0:	cmp	x13, #0x1
   222a4:	sub	x13, x13, #0x1
   222a8:	b.gt	22290 <mpfr_round_raw_2@@Base+0xc8>
   222ac:	cbz	w11, 222c8 <mpfr_round_raw_2@@Base+0x100>
   222b0:	sub	x8, x8, x10
   222b4:	add	x8, x0, x8, lsl #3
   222b8:	ldr	x8, [x8, #8]
   222bc:	eor	x9, x9, x9, lsl #1
   222c0:	tst	x8, x9
   222c4:	b.eq	221d0 <mpfr_round_raw_2@@Base+0x8>  // b.none
   222c8:	mov	w8, #0x1                   	// #1
   222cc:	mov	w0, w8
   222d0:	ret
   222d4:	cmp	x11, #0x0
   222d8:	cset	w9, eq  // eq = none
   222dc:	cbnz	x11, 22308 <mpfr_round_raw_2@@Base+0x140>
   222e0:	cmp	x8, #0x1
   222e4:	b.lt	22308 <mpfr_round_raw_2@@Base+0x140>  // b.tstop
   222e8:	sub	x10, x0, #0x8
   222ec:	ldr	x11, [x10, x8, lsl #3]
   222f0:	cmp	x11, #0x0
   222f4:	cset	w9, eq  // eq = none
   222f8:	cbnz	x11, 22308 <mpfr_round_raw_2@@Base+0x140>
   222fc:	cmp	x8, #0x1
   22300:	sub	x8, x8, #0x1
   22304:	b.gt	222ec <mpfr_round_raw_2@@Base+0x124>
   22308:	eor	w0, w9, #0x1
   2230c:	ret

0000000000022310 <mpfr_round_raw_4@@Base>:
   22310:	stp	x29, x30, [sp, #-32]!
   22314:	cmp	w5, #0x5
   22318:	sub	x8, x2, #0x1
   2231c:	add	x9, x2, #0x3e
   22320:	csinc	w15, w5, wzr, ne  // ne = any
   22324:	cmp	x8, #0x0
   22328:	add	x10, x4, #0x3f
   2232c:	csel	x8, x9, x8, lt  // lt = tstop
   22330:	cmp	x4, #0x0
   22334:	asr	x9, x8, #6
   22338:	csel	x10, x10, x4, lt  // lt = tstop
   2233c:	stp	x20, x19, [sp, #16]
   22340:	mov	x19, x0
   22344:	cmp	x2, x4
   22348:	add	x8, x9, #0x1
   2234c:	asr	x10, x10, #6
   22350:	and	w12, w4, #0x3f
   22354:	mov	x29, sp
   22358:	b.le	22884 <mpfr_round_raw_4@@Base+0x574>
   2235c:	cmp	w15, #0x1
   22360:	b.eq	22548 <mpfr_round_raw_4@@Base+0x238>  // b.none
   22364:	add	w11, w15, w3
   22368:	cmp	w11, #0x3
   2236c:	b.eq	22548 <mpfr_round_raw_4@@Base+0x238>  // b.none
   22370:	sub	x14, x9, x10
   22374:	ldr	x18, [x1, x14, lsl #3]
   22378:	neg	w16, w12
   2237c:	mov	x17, #0xffffffffffffffff    	// #-1
   22380:	cmp	w12, #0x0
   22384:	lsl	x16, x17, x16
   22388:	mov	w11, #0x40                  	// #64
   2238c:	csinv	x20, x16, xzr, ne  // ne = any
   22390:	csinv	x16, x17, x16, eq  // eq = none
   22394:	add	w17, w15, #0x1
   22398:	sub	w13, w11, w12
   2239c:	cset	w11, ne  // ne = any
   223a0:	cinc	x2, x10, ne  // ne = any
   223a4:	cmp	w17, #0x2
   223a8:	and	x16, x18, x16
   223ac:	b.cs	2258c <mpfr_round_raw_4@@Base+0x27c>  // b.hs, b.nlast
   223b0:	eor	w17, w12, #0x3f
   223b4:	mov	w18, #0x1                   	// #1
   223b8:	lsl	x17, x18, x17
   223bc:	tst	x16, x17
   223c0:	b.eq	226fc <mpfr_round_raw_4@@Base+0x3ec>  // b.none
   223c4:	cmn	w15, #0x1
   223c8:	b.eq	2241c <mpfr_round_raw_4@@Base+0x10c>  // b.none
   223cc:	bics	xzr, x16, x17
   223d0:	bic	x18, x16, x17
   223d4:	cset	w15, eq  // eq = none
   223d8:	cbnz	x18, 22404 <mpfr_round_raw_4@@Base+0xf4>
   223dc:	cmp	x14, #0x1
   223e0:	b.lt	22404 <mpfr_round_raw_4@@Base+0xf4>  // b.tstop
   223e4:	sub	x16, x1, #0x8
   223e8:	ldr	x17, [x16, x14, lsl #3]
   223ec:	cmp	x17, #0x0
   223f0:	cset	w15, eq  // eq = none
   223f4:	cbnz	x17, 22404 <mpfr_round_raw_4@@Base+0xf4>
   223f8:	cmp	x14, #0x1
   223fc:	sub	x14, x14, #0x1
   22400:	b.gt	223e8 <mpfr_round_raw_4@@Base+0xd8>
   22404:	cbz	w15, 2241c <mpfr_round_raw_4@@Base+0x10c>
   22408:	sub	x14, x8, x2
   2240c:	ldr	x14, [x1, x14, lsl #3]
   22410:	eor	x15, x20, x20, lsl #1
   22414:	tst	x14, x15
   22418:	b.eq	226fc <mpfr_round_raw_4@@Base+0x3ec>  // b.none
   2241c:	add	x14, x1, x8, lsl #3
   22420:	sub	x16, x14, x2, lsl #3
   22424:	ldr	x15, [x16]
   22428:	mov	w8, #0x1                   	// #1
   2242c:	lsl	x8, x8, x13
   22430:	cmp	w12, #0x0
   22434:	csinc	x8, x8, xzr, ne  // ne = any
   22438:	adds	x8, x15, x8
   2243c:	str	x8, [x19]
   22440:	b.cc	2270c <mpfr_round_raw_4@@Base+0x3fc>  // b.lo, b.ul, b.last
   22444:	add	x17, x10, x11
   22448:	sub	x15, x9, x17
   2244c:	mov	x12, xzr
   22450:	sub	x13, x17, #0x1
   22454:	add	x18, x1, x15, lsl #3
   22458:	mov	w8, #0x1                   	// #1
   2245c:	cmp	x8, x2
   22460:	b.ge	22704 <mpfr_round_raw_4@@Base+0x3f4>  // b.tcont
   22464:	add	x0, x18, x12
   22468:	ldr	x0, [x0, #16]
   2246c:	add	x3, x19, x12
   22470:	add	x8, x8, #0x1
   22474:	add	x12, x12, #0x8
   22478:	adds	x0, x0, #0x1
   2247c:	sub	x13, x13, #0x1
   22480:	str	x0, [x3, #8]
   22484:	b.cs	2245c <mpfr_round_raw_4@@Base+0x14c>  // b.hs, b.nlast
   22488:	cmp	x16, x19
   2248c:	mov	w0, wzr
   22490:	b.eq	22574 <mpfr_round_raw_4@@Base+0x264>  // b.none
   22494:	cmp	x8, x2
   22498:	b.ge	22574 <mpfr_round_raw_4@@Base+0x264>  // b.tcont
   2249c:	sub	x16, x17, x8
   224a0:	cmp	x16, #0x4
   224a4:	b.cc	22518 <mpfr_round_raw_4@@Base+0x208>  // b.lo, b.ul, b.last
   224a8:	add	x17, x19, x12
   224ac:	add	x17, x17, #0x8
   224b0:	cmp	x17, x14
   224b4:	b.cs	224d4 <mpfr_round_raw_4@@Base+0x1c4>  // b.hs, b.nlast
   224b8:	add	x17, x1, x15, lsl #3
   224bc:	add	x14, x10, x11
   224c0:	add	x17, x17, x12
   224c4:	add	x14, x19, x14, lsl #3
   224c8:	add	x17, x17, #0x10
   224cc:	cmp	x17, x14
   224d0:	b.cc	22518 <mpfr_round_raw_4@@Base+0x208>  // b.lo, b.ul, b.last
   224d4:	add	x15, x1, x15, lsl #3
   224d8:	add	x17, x19, x12
   224dc:	and	x14, x16, #0xfffffffffffffffc
   224e0:	and	x18, x13, #0xfffffffffffffffc
   224e4:	add	x12, x15, x12
   224e8:	add	x13, x17, #0x18
   224ec:	add	x12, x12, #0x20
   224f0:	add	x8, x18, x8
   224f4:	mov	x15, x14
   224f8:	ldp	q0, q1, [x12, #-16]
   224fc:	add	x12, x12, #0x20
   22500:	subs	x15, x15, #0x4
   22504:	stp	q0, q1, [x13, #-16]
   22508:	add	x13, x13, #0x20
   2250c:	b.ne	224f8 <mpfr_round_raw_4@@Base+0x1e8>  // b.any
   22510:	cmp	x16, x14
   22514:	b.eq	22570 <mpfr_round_raw_4@@Base+0x260>  // b.none
   22518:	add	x11, x10, x11
   2251c:	add	x9, x8, x9
   22520:	sub	x9, x9, x11
   22524:	add	x9, x1, x9, lsl #3
   22528:	add	x10, x19, x8, lsl #3
   2252c:	sub	x8, x11, x8
   22530:	add	x9, x9, #0x8
   22534:	ldr	x11, [x9], #8
   22538:	subs	x8, x8, #0x1
   2253c:	str	x11, [x10], #8
   22540:	b.ne	22534 <mpfr_round_raw_4@@Base+0x224>  // b.any
   22544:	b	22570 <mpfr_round_raw_4@@Base+0x260>
   22548:	neg	w9, w12
   2254c:	mov	x11, #0xffffffffffffffff    	// #-1
   22550:	cmp	w12, #0x0
   22554:	lsl	x9, x11, x9
   22558:	add	x8, x1, x8, lsl #3
   2255c:	cinc	x2, x10, ne  // ne = any
   22560:	csinv	x20, x9, xzr, ne  // ne = any
   22564:	sub	x1, x8, x2, lsl #3
   22568:	mov	x0, x19
   2256c:	bl	c510 <__gmpn_copyi@plt>
   22570:	mov	w0, wzr
   22574:	ldr	x8, [x19]
   22578:	and	x8, x8, x20
   2257c:	str	x8, [x19]
   22580:	ldp	x20, x19, [sp, #16]
   22584:	ldp	x29, x30, [sp], #32
   22588:	ret
   2258c:	cmp	x16, #0x0
   22590:	cset	w15, eq  // eq = none
   22594:	cbnz	x16, 225c0 <mpfr_round_raw_4@@Base+0x2b0>
   22598:	cmp	x14, #0x1
   2259c:	b.lt	225c0 <mpfr_round_raw_4@@Base+0x2b0>  // b.tstop
   225a0:	sub	x16, x1, #0x8
   225a4:	ldr	x17, [x16, x14, lsl #3]
   225a8:	cmp	x17, #0x0
   225ac:	cset	w15, eq  // eq = none
   225b0:	cbnz	x17, 225c0 <mpfr_round_raw_4@@Base+0x2b0>
   225b4:	cmp	x14, #0x1
   225b8:	sub	x14, x14, #0x1
   225bc:	b.gt	225a4 <mpfr_round_raw_4@@Base+0x294>
   225c0:	add	x14, x1, x8, lsl #3
   225c4:	sub	x8, x14, x2, lsl #3
   225c8:	cbz	w15, 225d8 <mpfr_round_raw_4@@Base+0x2c8>
   225cc:	mov	x0, x19
   225d0:	mov	x1, x8
   225d4:	b	2256c <mpfr_round_raw_4@@Base+0x25c>
   225d8:	ldr	x16, [x8]
   225dc:	mov	w15, #0x1                   	// #1
   225e0:	lsl	x13, x15, x13
   225e4:	cmp	w12, #0x0
   225e8:	csinc	x12, x13, xzr, ne  // ne = any
   225ec:	adds	x12, x16, x12
   225f0:	str	x12, [x19]
   225f4:	b.cc	22784 <mpfr_round_raw_4@@Base+0x474>  // b.lo, b.ul, b.last
   225f8:	add	x17, x10, x11
   225fc:	sub	x16, x9, x17
   22600:	mov	x13, xzr
   22604:	sub	x15, x17, #0x1
   22608:	add	x18, x1, x16, lsl #3
   2260c:	mov	w12, #0x1                   	// #1
   22610:	cmp	x12, x2
   22614:	b.ge	22704 <mpfr_round_raw_4@@Base+0x3f4>  // b.tcont
   22618:	add	x0, x18, x13
   2261c:	ldr	x0, [x0, #16]
   22620:	add	x3, x19, x13
   22624:	add	x12, x12, #0x1
   22628:	add	x13, x13, #0x8
   2262c:	adds	x0, x0, #0x1
   22630:	sub	x15, x15, #0x1
   22634:	str	x0, [x3, #8]
   22638:	b.cs	22610 <mpfr_round_raw_4@@Base+0x300>  // b.hs, b.nlast
   2263c:	cmp	x8, x19
   22640:	mov	w0, wzr
   22644:	b.eq	22574 <mpfr_round_raw_4@@Base+0x264>  // b.none
   22648:	cmp	x12, x2
   2264c:	b.ge	22574 <mpfr_round_raw_4@@Base+0x264>  // b.tcont
   22650:	sub	x8, x17, x12
   22654:	cmp	x8, #0x4
   22658:	b.cc	226cc <mpfr_round_raw_4@@Base+0x3bc>  // b.lo, b.ul, b.last
   2265c:	add	x17, x19, x13
   22660:	add	x17, x17, #0x8
   22664:	cmp	x17, x14
   22668:	b.cs	22688 <mpfr_round_raw_4@@Base+0x378>  // b.hs, b.nlast
   2266c:	add	x17, x1, x16, lsl #3
   22670:	add	x14, x10, x11
   22674:	add	x17, x17, x13
   22678:	add	x14, x19, x14, lsl #3
   2267c:	add	x17, x17, #0x10
   22680:	cmp	x17, x14
   22684:	b.cc	226cc <mpfr_round_raw_4@@Base+0x3bc>  // b.lo, b.ul, b.last
   22688:	add	x16, x1, x16, lsl #3
   2268c:	add	x17, x19, x13
   22690:	and	x14, x8, #0xfffffffffffffffc
   22694:	and	x18, x15, #0xfffffffffffffffc
   22698:	add	x13, x16, x13
   2269c:	add	x15, x17, #0x18
   226a0:	add	x13, x13, #0x20
   226a4:	add	x12, x18, x12
   226a8:	mov	x16, x14
   226ac:	ldp	q0, q1, [x13, #-16]
   226b0:	add	x13, x13, #0x20
   226b4:	subs	x16, x16, #0x4
   226b8:	stp	q0, q1, [x15, #-16]
   226bc:	add	x15, x15, #0x20
   226c0:	b.ne	226ac <mpfr_round_raw_4@@Base+0x39c>  // b.any
   226c4:	cmp	x8, x14
   226c8:	b.eq	22570 <mpfr_round_raw_4@@Base+0x260>  // b.none
   226cc:	add	x10, x10, x11
   226d0:	add	x11, x12, x9
   226d4:	sub	x9, x10, x12
   226d8:	sub	x10, x11, x10
   226dc:	add	x10, x1, x10, lsl #3
   226e0:	add	x8, x19, x12, lsl #3
   226e4:	add	x10, x10, #0x8
   226e8:	ldr	x11, [x10], #8
   226ec:	subs	x9, x9, #0x1
   226f0:	str	x11, [x8], #8
   226f4:	b.ne	226e8 <mpfr_round_raw_4@@Base+0x3d8>  // b.any
   226f8:	b	22570 <mpfr_round_raw_4@@Base+0x260>
   226fc:	add	x8, x1, x8, lsl #3
   22700:	b	22564 <mpfr_round_raw_4@@Base+0x254>
   22704:	mov	w0, #0x1                   	// #1
   22708:	b	22574 <mpfr_round_raw_4@@Base+0x264>
   2270c:	cmp	x2, #0x2
   22710:	mov	w0, wzr
   22714:	b.lt	22574 <mpfr_round_raw_4@@Base+0x264>  // b.tstop
   22718:	cmp	x16, x19
   2271c:	b.eq	22574 <mpfr_round_raw_4@@Base+0x264>  // b.none
   22720:	add	x8, x10, x11
   22724:	sub	x12, x8, #0x1
   22728:	cmp	x12, #0x4
   2272c:	b.cc	22754 <mpfr_round_raw_4@@Base+0x444>  // b.lo, b.ul, b.last
   22730:	add	x13, x19, #0x8
   22734:	cmp	x13, x14
   22738:	b.cs	227fc <mpfr_round_raw_4@@Base+0x4ec>  // b.hs, b.nlast
   2273c:	sub	x14, x9, x8
   22740:	add	x14, x1, x14, lsl #3
   22744:	add	x13, x19, x8, lsl #3
   22748:	add	x14, x14, #0x10
   2274c:	cmp	x14, x13
   22750:	b.cs	227fc <mpfr_round_raw_4@@Base+0x4ec>  // b.hs, b.nlast
   22754:	mov	w10, #0x1                   	// #1
   22758:	add	x9, x10, x9
   2275c:	sub	x11, x8, x10
   22760:	sub	x8, x9, x8
   22764:	add	x8, x1, x8, lsl #3
   22768:	add	x12, x19, x10, lsl #3
   2276c:	add	x8, x8, #0x8
   22770:	ldr	x9, [x8], #8
   22774:	subs	x11, x11, #0x1
   22778:	str	x9, [x12], #8
   2277c:	b.ne	22770 <mpfr_round_raw_4@@Base+0x460>  // b.any
   22780:	b	22570 <mpfr_round_raw_4@@Base+0x260>
   22784:	cmp	x2, #0x2
   22788:	mov	w0, wzr
   2278c:	b.lt	22574 <mpfr_round_raw_4@@Base+0x264>  // b.tstop
   22790:	cmp	x8, x19
   22794:	b.eq	22574 <mpfr_round_raw_4@@Base+0x264>  // b.none
   22798:	add	x8, x10, x11
   2279c:	sub	x12, x8, #0x1
   227a0:	cmp	x12, #0x4
   227a4:	b.cc	227cc <mpfr_round_raw_4@@Base+0x4bc>  // b.lo, b.ul, b.last
   227a8:	add	x13, x19, #0x8
   227ac:	cmp	x13, x14
   227b0:	b.cs	22840 <mpfr_round_raw_4@@Base+0x530>  // b.hs, b.nlast
   227b4:	sub	x14, x9, x8
   227b8:	add	x14, x1, x14, lsl #3
   227bc:	add	x13, x19, x8, lsl #3
   227c0:	add	x14, x14, #0x10
   227c4:	cmp	x14, x13
   227c8:	b.cs	22840 <mpfr_round_raw_4@@Base+0x530>  // b.hs, b.nlast
   227cc:	mov	w10, #0x1                   	// #1
   227d0:	add	x9, x10, x9
   227d4:	sub	x11, x8, x10
   227d8:	sub	x8, x9, x8
   227dc:	add	x8, x1, x8, lsl #3
   227e0:	add	x12, x19, x10, lsl #3
   227e4:	add	x8, x8, #0x8
   227e8:	ldr	x9, [x8], #8
   227ec:	subs	x11, x11, #0x1
   227f0:	str	x9, [x12], #8
   227f4:	b.ne	227e8 <mpfr_round_raw_4@@Base+0x4d8>  // b.any
   227f8:	b	22570 <mpfr_round_raw_4@@Base+0x260>
   227fc:	add	x11, x10, x11
   22800:	sub	x11, x9, x11
   22804:	and	x13, x12, #0xfffffffffffffffc
   22808:	add	x11, x1, x11, lsl #3
   2280c:	orr	x10, x13, #0x1
   22810:	add	x11, x11, #0x20
   22814:	add	x14, x19, #0x18
   22818:	mov	x15, x13
   2281c:	ldp	q0, q1, [x11, #-16]
   22820:	subs	x15, x15, #0x4
   22824:	add	x11, x11, #0x20
   22828:	stp	q0, q1, [x14, #-16]
   2282c:	add	x14, x14, #0x20
   22830:	b.ne	2281c <mpfr_round_raw_4@@Base+0x50c>  // b.any
   22834:	cmp	x12, x13
   22838:	b.eq	22570 <mpfr_round_raw_4@@Base+0x260>  // b.none
   2283c:	b	22758 <mpfr_round_raw_4@@Base+0x448>
   22840:	add	x11, x10, x11
   22844:	sub	x11, x9, x11
   22848:	and	x13, x12, #0xfffffffffffffffc
   2284c:	add	x11, x1, x11, lsl #3
   22850:	orr	x10, x13, #0x1
   22854:	add	x11, x11, #0x20
   22858:	add	x14, x19, #0x18
   2285c:	mov	x15, x13
   22860:	ldp	q0, q1, [x11, #-16]
   22864:	subs	x15, x15, #0x4
   22868:	add	x11, x11, #0x20
   2286c:	stp	q0, q1, [x14, #-16]
   22870:	add	x14, x14, #0x20
   22874:	b.ne	22860 <mpfr_round_raw_4@@Base+0x550>  // b.any
   22878:	cmp	x12, x13
   2287c:	b.eq	22570 <mpfr_round_raw_4@@Base+0x260>  // b.none
   22880:	b	227d0 <mpfr_round_raw_4@@Base+0x4c0>
   22884:	sub	x11, x10, x9
   22888:	mvn	x9, x9
   2288c:	cmp	w12, #0x0
   22890:	add	x9, x10, x9
   22894:	csel	x9, x9, x11, eq  // eq = none
   22898:	lsl	x20, x9, #3
   2289c:	add	x0, x19, x20
   228a0:	mov	x2, x8
   228a4:	bl	bb40 <__gmpn_copyd@plt>
   228a8:	mov	x0, x19
   228ac:	mov	w1, wzr
   228b0:	mov	x2, x20
   228b4:	bl	c150 <memset@plt>
   228b8:	mov	w0, wzr
   228bc:	ldp	x20, x19, [sp, #16]
   228c0:	ldp	x29, x30, [sp], #32
   228c4:	ret

00000000000228c8 <mpfr_prec_round@@Base>:
   228c8:	stp	x29, x30, [sp, #-80]!
   228cc:	str	x25, [sp, #16]
   228d0:	stp	x24, x23, [sp, #32]
   228d4:	stp	x22, x21, [sp, #48]
   228d8:	stp	x20, x19, [sp, #64]
   228dc:	mov	x29, sp
   228e0:	sub	sp, sp, #0x10
   228e4:	mov	x22, #0xfffffffffffffeff    	// #-257
   228e8:	movk	x22, #0x7fff, lsl #48
   228ec:	sub	x23, x1, #0x1
   228f0:	mov	w21, w2
   228f4:	mov	x19, x1
   228f8:	cmp	x23, x22
   228fc:	mov	x20, x0
   22900:	b.cs	229d8 <mpfr_prec_round@@Base+0x110>  // b.hs, b.nlast
   22904:	ldr	x9, [x20]
   22908:	add	x8, x23, #0x3f
   2290c:	cmp	x23, #0x0
   22910:	csel	x8, x8, x23, lt  // lt = tstop
   22914:	asr	x25, x8, #6
   22918:	sub	x8, x9, #0x1
   2291c:	add	x9, x9, #0x3e
   22920:	cmp	x8, #0x0
   22924:	csel	x8, x9, x8, lt  // lt = tstop
   22928:	cmp	x25, x8, asr #6
   2292c:	add	x23, x25, #0x1
   22930:	b.gt	229f4 <mpfr_prec_round@@Base+0x12c>
   22934:	ldr	x8, [x20, #16]
   22938:	add	x9, x22, #0x105
   2293c:	cmp	x8, x9
   22940:	b.lt	22a28 <mpfr_prec_round@@Base+0x160>  // b.tstop
   22944:	lsl	x22, x23, #3
   22948:	cmp	x22, #0x4, lsl #12
   2294c:	stur	xzr, [x29, #-8]
   22950:	b.hi	22a64 <mpfr_prec_round@@Base+0x19c>  // b.pmore
   22954:	add	x9, x22, #0xf
   22958:	mov	x8, sp
   2295c:	and	x9, x9, #0xfffffffffffffff0
   22960:	sub	x24, x8, x9
   22964:	mov	sp, x24
   22968:	ldr	x23, [x20, #24]
   2296c:	ldr	w8, [x20, #8]
   22970:	ldr	x2, [x20]
   22974:	add	x6, x29, #0x1c
   22978:	mov	x0, x24
   2297c:	lsr	w3, w8, #31
   22980:	mov	x1, x23
   22984:	mov	x4, x19
   22988:	mov	w5, w21
   2298c:	bl	ca00 <mpfr_round_raw@plt>
   22990:	str	x19, [x20]
   22994:	cbnz	w0, 22a78 <mpfr_prec_round@@Base+0x1b0>
   22998:	cmp	x23, x24
   2299c:	b.eq	229b0 <mpfr_prec_round@@Base+0xe8>  // b.none
   229a0:	mov	x0, x23
   229a4:	mov	x1, x24
   229a8:	mov	x2, x22
   229ac:	bl	ba70 <memcpy@plt>
   229b0:	ldur	x0, [x29, #-8]
   229b4:	cbnz	x0, 22ac8 <mpfr_prec_round@@Base+0x200>
   229b8:	ldr	w0, [x29, #28]
   229bc:	mov	sp, x29
   229c0:	ldp	x20, x19, [sp, #64]
   229c4:	ldp	x22, x21, [sp, #48]
   229c8:	ldp	x24, x23, [sp, #32]
   229cc:	ldr	x25, [sp, #16]
   229d0:	ldp	x29, x30, [sp], #80
   229d4:	ret
   229d8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   229dc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   229e0:	add	x0, x0, #0xbf1
   229e4:	add	x2, x2, #0xbfe
   229e8:	mov	w1, #0x3b                  	// #59
   229ec:	bl	cb20 <mpfr_assert_fail@plt>
   229f0:	b	22904 <mpfr_prec_round@@Base+0x3c>
   229f4:	ldr	x0, [x20, #24]
   229f8:	ldr	x8, [x0, #-8]!
   229fc:	cmp	x25, x8
   22a00:	b.lt	22934 <mpfr_prec_round@@Base+0x6c>  // b.tstop
   22a04:	lsl	x8, x8, #3
   22a08:	lsl	x9, x23, #3
   22a0c:	add	x1, x8, #0x8
   22a10:	add	x2, x9, #0x8
   22a14:	bl	c200 <mpfr_reallocate_func@plt>
   22a18:	add	x8, x0, #0x8
   22a1c:	str	x8, [x20, #24]
   22a20:	str	x23, [x0]
   22a24:	b	22934 <mpfr_prec_round@@Base+0x6c>
   22a28:	add	x9, x22, #0x103
   22a2c:	cmp	x8, x9
   22a30:	str	x19, [x20]
   22a34:	b.ne	22ad0 <mpfr_prec_round@@Base+0x208>  // b.any
   22a38:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   22a3c:	ldr	x1, [x0, #2640]
   22a40:	add	x0, x0, #0xa50
   22a44:	blr	x1
   22a48:	mov	x8, x0
   22a4c:	mrs	x9, tpidr_el0
   22a50:	ldr	w10, [x9, x8]
   22a54:	mov	w0, wzr
   22a58:	orr	w10, w10, #0x4
   22a5c:	str	w10, [x9, x8]
   22a60:	b	229bc <mpfr_prec_round@@Base+0xf4>
   22a64:	sub	x0, x29, #0x8
   22a68:	mov	x1, x22
   22a6c:	bl	be10 <mpfr_tmp_allocate@plt>
   22a70:	mov	x24, x0
   22a74:	b	22968 <mpfr_prec_round@@Base+0xa0>
   22a78:	ldr	x8, [x20, #16]
   22a7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   22a80:	ldr	x1, [x0, #2608]
   22a84:	add	x0, x0, #0xa30
   22a88:	blr	x1
   22a8c:	mrs	x9, tpidr_el0
   22a90:	ldr	x9, [x9, x0]
   22a94:	cmp	x8, x9
   22a98:	b.eq	22ad8 <mpfr_prec_round@@Base+0x210>  // b.none
   22a9c:	add	x8, x8, #0x1
   22aa0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   22aa4:	cmp	x19, #0x41
   22aa8:	str	x8, [x20, #16]
   22aac:	str	x9, [x23, x25, lsl #3]
   22ab0:	b.lt	229b0 <mpfr_prec_round@@Base+0xe8>  // b.tstop
   22ab4:	lsl	x2, x25, #3
   22ab8:	mov	x0, x23
   22abc:	mov	w1, wzr
   22ac0:	bl	c150 <memset@plt>
   22ac4:	b	229b0 <mpfr_prec_round@@Base+0xe8>
   22ac8:	bl	c400 <mpfr_tmp_free@plt>
   22acc:	b	229b8 <mpfr_prec_round@@Base+0xf0>
   22ad0:	mov	w0, wzr
   22ad4:	b	229bc <mpfr_prec_round@@Base+0xf4>
   22ad8:	ldr	w2, [x20, #8]
   22adc:	mov	x0, x20
   22ae0:	mov	w1, w21
   22ae4:	bl	bf90 <mpfr_overflow@plt>
   22ae8:	b	229b0 <mpfr_prec_round@@Base+0xe8>

0000000000022aec <mpfr_can_round@@Base>:
   22aec:	ldr	x8, [x0, #16]
   22af0:	mov	x9, #0x4                   	// #4
   22af4:	movk	x9, #0x8000, lsl #48
   22af8:	cmp	x8, x9
   22afc:	b.lt	22b3c <mpfr_can_round@@Base+0x50>  // b.tstop
   22b00:	ldr	x9, [x0]
   22b04:	ldr	x8, [x0, #24]
   22b08:	mov	x6, x4
   22b0c:	mov	w4, w2
   22b10:	sub	x10, x9, #0x1
   22b14:	add	x9, x9, #0x3e
   22b18:	cmp	x10, #0x0
   22b1c:	ldr	w2, [x0, #8]
   22b20:	csel	x9, x9, x10, lt  // lt = tstop
   22b24:	asr	x9, x9, #6
   22b28:	mov	w5, w3
   22b2c:	mov	x3, x1
   22b30:	add	x1, x9, #0x1
   22b34:	mov	x0, x8
   22b38:	b	c350 <mpfr_can_round_raw@plt>
   22b3c:	mov	w0, wzr
   22b40:	ret

0000000000022b44 <mpfr_can_round_raw@@Base>:
   22b44:	stp	x29, x30, [sp, #-96]!
   22b48:	stp	x28, x27, [sp, #16]
   22b4c:	stp	x26, x25, [sp, #32]
   22b50:	stp	x24, x23, [sp, #48]
   22b54:	stp	x22, x21, [sp, #64]
   22b58:	stp	x20, x19, [sp, #80]
   22b5c:	mov	x29, sp
   22b60:	sub	sp, sp, #0x70
   22b64:	mov	x26, x6
   22b68:	mov	w21, w5
   22b6c:	mov	w23, w4
   22b70:	mov	w22, w2
   22b74:	cmp	x6, #0x0
   22b78:	mov	x18, x0
   22b7c:	stp	x1, x0, [x29, #-24]
   22b80:	b.le	23768 <mpfr_can_round_raw@@Base+0xc24>
   22b84:	mov	w12, wzr
   22b88:	lsr	w2, w22, #31
   22b8c:	cbz	w23, 22bac <mpfr_can_round_raw@@Base+0x68>
   22b90:	cmp	w23, #0x5
   22b94:	b.eq	22bac <mpfr_can_round_raw@@Base+0x68>  // b.none
   22b98:	add	w8, w2, w23
   22b9c:	cmp	w8, #0x3
   22ba0:	ccmp	w23, #0x1, #0x4, ne  // ne = any
   22ba4:	mov	w8, #0x4                   	// #4
   22ba8:	csinc	w12, w8, wzr, ne  // ne = any
   22bac:	cmp	w12, #0x0
   22bb0:	cset	w8, ne  // ne = any
   22bb4:	cmp	w21, #0x5
   22bb8:	csel	w8, w8, w21, eq  // eq = none
   22bbc:	cbz	w8, 22be8 <mpfr_can_round_raw@@Base+0xa4>
   22bc0:	add	w9, w8, w2
   22bc4:	cmp	w9, #0x3
   22bc8:	ccmp	w8, #0x1, #0x4, ne  // ne = any
   22bcc:	mov	w8, #0x4                   	// #4
   22bd0:	csinc	w19, w8, wzr, ne  // ne = any
   22bd4:	cmp	w12, #0x0
   22bd8:	cinc	x8, x26, eq  // eq = none
   22bdc:	cmp	x8, x3
   22be0:	b.le	22bfc <mpfr_can_round_raw@@Base+0xb8>
   22be4:	b	23b04 <mpfr_can_round_raw@@Base+0xfc0>
   22be8:	mov	w19, wzr
   22bec:	cmp	w12, #0x0
   22bf0:	cinc	x8, x26, eq  // eq = none
   22bf4:	cmp	x8, x3
   22bf8:	b.gt	23b04 <mpfr_can_round_raw@@Base+0xfc0>
   22bfc:	b.ne	22c14 <mpfr_can_round_raw@@Base+0xd0>  // b.any
   22c00:	cmp	w12, #0x4
   22c04:	mov	w28, wzr
   22c08:	b.eq	23598 <mpfr_can_round_raw@@Base+0xa54>  // b.none
   22c0c:	cmp	w19, #0x1
   22c10:	b.eq	23598 <mpfr_can_round_raw@@Base+0xa54>  // b.none
   22c14:	lsl	x21, x1, #6
   22c18:	cmp	x21, x26
   22c1c:	b.lt	2379c <mpfr_can_round_raw@@Base+0xc58>  // b.tstop
   22c20:	cmp	x21, x3
   22c24:	b.lt	237e4 <mpfr_can_round_raw@@Base+0xca0>  // b.tstop
   22c28:	stp	x8, x3, [x29, #-72]
   22c2c:	sub	x8, x3, #0x1
   22c30:	add	x9, x3, #0x3e
   22c34:	sub	x10, x26, #0x1
   22c38:	cmp	x8, #0x0
   22c3c:	add	x11, x26, #0x3e
   22c40:	csel	x8, x9, x8, lt  // lt = tstop
   22c44:	cmp	x10, #0x0
   22c48:	asr	x23, x8, #6
   22c4c:	csel	x8, x11, x10, lt  // lt = tstop
   22c50:	asr	x22, x8, #6
   22c54:	sub	x27, x1, x22
   22c58:	sub	x21, x23, x22
   22c5c:	lsl	x28, x27, #3
   22c60:	neg	w25, w3
   22c64:	neg	w24, w26
   22c68:	and	x20, x8, #0xffffffffffffffc0
   22c6c:	cmp	x28, #0x4, lsl #12
   22c70:	add	x10, x21, #0x1
   22c74:	stur	xzr, [x29, #-8]
   22c78:	stur	w2, [x29, #-28]
   22c7c:	stur	x10, [x29, #-88]
   22c80:	b.hi	23828 <mpfr_can_round_raw@@Base+0xce4>  // b.pmore
   22c84:	add	x9, x28, #0xf
   22c88:	mov	x8, sp
   22c8c:	and	x9, x9, #0xfffffffffffffff0
   22c90:	sub	x0, x8, x9
   22c94:	mov	sp, x0
   22c98:	and	w8, w24, #0x3f
   22c9c:	and	w25, w25, #0x3f
   22ca0:	stur	x8, [x29, #-56]
   22ca4:	subs	x8, x27, x10
   22ca8:	sub	x3, x26, x20
   22cac:	stp	x3, x0, [x29, #-48]
   22cb0:	b.le	22cdc <mpfr_can_round_raw@@Base+0x198>
   22cb4:	cmp	x0, x18
   22cb8:	b.eq	22cdc <mpfr_can_round_raw@@Base+0x198>  // b.none
   22cbc:	ldur	x1, [x29, #-16]
   22cc0:	lsl	x2, x8, #3
   22cc4:	mov	w20, w12
   22cc8:	bl	ba70 <memcpy@plt>
   22ccc:	ldp	x3, x0, [x29, #-48]
   22cd0:	ldp	x1, x18, [x29, #-24]
   22cd4:	ldur	w2, [x29, #-28]
   22cd8:	mov	w12, w20
   22cdc:	lsl	x24, x27, #6
   22ce0:	mov	w4, w19
   22ce4:	cbz	w12, 22e80 <mpfr_can_round_raw@@Base+0x33c>
   22ce8:	cmp	w12, #0x1
   22cec:	b.ne	22fcc <mpfr_can_round_raw@@Base+0x488>  // b.any
   22cf0:	stur	x27, [x29, #-72]
   22cf4:	sub	x27, x27, #0x1
   22cf8:	ldr	x8, [x18, x27, lsl #3]
   22cfc:	ldur	x9, [x29, #-56]
   22d00:	mov	x0, x18
   22d04:	mov	x1, x24
   22d08:	mov	w19, w4
   22d0c:	lsr	x8, x8, x9
   22d10:	and	x20, x8, #0x1
   22d14:	bl	c750 <mpfr_round_raw_2@plt>
   22d18:	ldur	x18, [x29, #-16]
   22d1c:	sxtw	x8, w0
   22d20:	mvn	x9, x21
   22d24:	eor	x20, x20, x8
   22d28:	lsl	x9, x9, #3
   22d2c:	add	x8, x18, x28
   22d30:	ldr	x10, [x8, x9]
   22d34:	ldur	x0, [x29, #-40]
   22d38:	mov	w12, #0x1                   	// #1
   22d3c:	lsl	x12, x12, x25
   22d40:	adds	x10, x10, x12
   22d44:	add	x11, x0, x28
   22d48:	str	x10, [x11, x9]
   22d4c:	b.cc	23024 <mpfr_can_round_raw@@Base+0x4e0>  // b.lo, b.ul, b.last
   22d50:	ldur	x1, [x29, #-24]
   22d54:	ldur	w2, [x29, #-28]
   22d58:	ldur	x3, [x29, #-48]
   22d5c:	lsl	x9, x23, #3
   22d60:	lsl	x10, x1, #3
   22d64:	sub	x11, x1, x23
   22d68:	sub	x14, x9, x0
   22d6c:	sub	x13, x9, x18
   22d70:	sub	x9, x10, x9
   22d74:	mov	x16, xzr
   22d78:	add	x9, x0, x9
   22d7c:	add	x15, x18, x11, lsl #3
   22d80:	mov	x11, x21
   22d84:	mov	w4, w19
   22d88:	add	x12, x16, #0x1
   22d8c:	cmp	x12, x21
   22d90:	b.gt	23170 <mpfr_can_round_raw@@Base+0x62c>
   22d94:	lsl	x16, x16, #3
   22d98:	ldr	x17, [x15, x16]
   22d9c:	sub	x14, x14, #0x8
   22da0:	sub	x13, x13, #0x8
   22da4:	sub	x11, x11, #0x1
   22da8:	adds	x17, x17, #0x1
   22dac:	str	x17, [x9, x16]
   22db0:	mov	x16, x12
   22db4:	b.cs	22d88 <mpfr_can_round_raw@@Base+0x244>  // b.hs, b.nlast
   22db8:	mov	w9, wzr
   22dbc:	cmp	x0, x18
   22dc0:	mov	w15, #0x1                   	// #1
   22dc4:	b.eq	231ac <mpfr_can_round_raw@@Base+0x668>  // b.none
   22dc8:	cmp	x12, x21
   22dcc:	b.ge	231ac <mpfr_can_round_raw@@Base+0x668>  // b.tcont
   22dd0:	sub	x15, x21, x12
   22dd4:	cmp	x15, #0x4
   22dd8:	add	x9, x12, #0x1
   22ddc:	b.cc	22e3c <mpfr_can_round_raw@@Base+0x2f8>  // b.lo, b.ul, b.last
   22de0:	sub	x14, x10, x14
   22de4:	cmp	x14, x8
   22de8:	sub	x13, x10, x13
   22dec:	b.cs	22e00 <mpfr_can_round_raw@@Base+0x2bc>  // b.hs, b.nlast
   22df0:	sub	x8, x10, x22, lsl #3
   22df4:	add	x8, x0, x8
   22df8:	cmp	x8, x13
   22dfc:	b.hi	22e3c <mpfr_can_round_raw@@Base+0x2f8>  // b.pmore
   22e00:	and	x9, x11, #0xfffffffffffffffc
   22e04:	add	x10, x13, #0x10
   22e08:	and	x13, x15, #0xfffffffffffffffc
   22e0c:	add	x9, x9, x12
   22e10:	add	x8, x14, #0x10
   22e14:	add	x9, x9, #0x1
   22e18:	mov	x11, x13
   22e1c:	ldp	q0, q1, [x10, #-16]
   22e20:	subs	x11, x11, #0x4
   22e24:	add	x10, x10, #0x20
   22e28:	stp	q0, q1, [x8, #-16]
   22e2c:	add	x8, x8, #0x20
   22e30:	b.ne	22e1c <mpfr_can_round_raw@@Base+0x2d8>  // b.any
   22e34:	cmp	x15, x13
   22e38:	b.eq	230c4 <mpfr_can_round_raw@@Base+0x580>  // b.none
   22e3c:	add	x8, x9, x22
   22e40:	mvn	x10, x23
   22e44:	lsl	x11, x9, #3
   22e48:	add	x9, x9, x1
   22e4c:	add	x8, x10, x8
   22e50:	add	x10, x11, x1, lsl #3
   22e54:	sub	x9, x9, x23
   22e58:	sub	x10, x10, x23, lsl #3
   22e5c:	add	x11, x18, x9, lsl #3
   22e60:	add	x9, x10, x0
   22e64:	sub	x9, x9, #0x8
   22e68:	sub	x10, x11, #0x8
   22e6c:	ldr	x11, [x10], #8
   22e70:	adds	x8, x8, #0x1
   22e74:	str	x11, [x9], #8
   22e78:	b.cc	22e6c <mpfr_can_round_raw@@Base+0x328>  // b.lo, b.ul, b.last
   22e7c:	b	230c4 <mpfr_can_round_raw@@Base+0x580>
   22e80:	mvn	x5, x21
   22e84:	lsl	x9, x5, #3
   22e88:	add	x8, x18, x28
   22e8c:	ldr	x10, [x8, x9]
   22e90:	stur	w12, [x29, #-92]
   22e94:	mov	w12, #0x1                   	// #1
   22e98:	lsl	x6, x12, x25
   22e9c:	add	x11, x0, x28
   22ea0:	adds	x10, x10, x6
   22ea4:	str	x10, [x11, x9]
   22ea8:	stp	x6, x5, [x29, #-112]
   22eac:	b.cc	230dc <mpfr_can_round_raw@@Base+0x598>  // b.lo, b.ul, b.last
   22eb0:	lsl	x9, x1, #3
   22eb4:	lsl	x10, x23, #3
   22eb8:	sub	x12, x1, x23
   22ebc:	sub	x14, x10, x0
   22ec0:	sub	x13, x10, x18
   22ec4:	sub	x10, x9, x10
   22ec8:	mov	x16, xzr
   22ecc:	add	x11, x0, x10
   22ed0:	add	x15, x18, x12, lsl #3
   22ed4:	mov	x10, x21
   22ed8:	add	x12, x16, #0x1
   22edc:	cmp	x12, x21
   22ee0:	b.gt	231c8 <mpfr_can_round_raw@@Base+0x684>
   22ee4:	lsl	x16, x16, #3
   22ee8:	ldr	x17, [x15, x16]
   22eec:	sub	x14, x14, #0x8
   22ef0:	sub	x13, x13, #0x8
   22ef4:	sub	x10, x10, #0x1
   22ef8:	adds	x17, x17, #0x1
   22efc:	str	x17, [x11, x16]
   22f00:	mov	x16, x12
   22f04:	b.cs	22ed8 <mpfr_can_round_raw@@Base+0x394>  // b.hs, b.nlast
   22f08:	cmp	x0, x18
   22f0c:	mov	w25, wzr
   22f10:	b.eq	23238 <mpfr_can_round_raw@@Base+0x6f4>  // b.none
   22f14:	cmp	x12, x21
   22f18:	b.ge	23238 <mpfr_can_round_raw@@Base+0x6f4>  // b.tcont
   22f1c:	sub	x15, x21, x12
   22f20:	cmp	x15, #0x4
   22f24:	add	x11, x12, #0x1
   22f28:	b.cc	22f88 <mpfr_can_round_raw@@Base+0x444>  // b.lo, b.ul, b.last
   22f2c:	sub	x14, x9, x14
   22f30:	cmp	x14, x8
   22f34:	sub	x13, x9, x13
   22f38:	b.cs	22f4c <mpfr_can_round_raw@@Base+0x408>  // b.hs, b.nlast
   22f3c:	sub	x8, x9, x22, lsl #3
   22f40:	add	x8, x0, x8
   22f44:	cmp	x8, x13
   22f48:	b.hi	22f88 <mpfr_can_round_raw@@Base+0x444>  // b.pmore
   22f4c:	and	x10, x10, #0xfffffffffffffffc
   22f50:	add	x9, x13, #0x10
   22f54:	and	x13, x15, #0xfffffffffffffffc
   22f58:	add	x10, x10, x12
   22f5c:	add	x8, x14, #0x10
   22f60:	add	x11, x10, #0x1
   22f64:	mov	x10, x13
   22f68:	ldp	q0, q1, [x9, #-16]
   22f6c:	subs	x10, x10, #0x4
   22f70:	add	x9, x9, #0x20
   22f74:	stp	q0, q1, [x8, #-16]
   22f78:	add	x8, x8, #0x20
   22f7c:	b.ne	22f68 <mpfr_can_round_raw@@Base+0x424>  // b.any
   22f80:	cmp	x15, x13
   22f84:	b.eq	23168 <mpfr_can_round_raw@@Base+0x624>  // b.none
   22f88:	add	x8, x11, x22
   22f8c:	mvn	x9, x23
   22f90:	lsl	x10, x11, #3
   22f94:	add	x11, x11, x1
   22f98:	add	x8, x9, x8
   22f9c:	add	x9, x10, x1, lsl #3
   22fa0:	sub	x10, x11, x23
   22fa4:	sub	x9, x9, x23, lsl #3
   22fa8:	add	x10, x18, x10, lsl #3
   22fac:	add	x9, x9, x0
   22fb0:	sub	x9, x9, #0x8
   22fb4:	sub	x10, x10, #0x8
   22fb8:	ldr	x11, [x10], #8
   22fbc:	adds	x8, x8, #0x1
   22fc0:	str	x11, [x9], #8
   22fc4:	b.cc	22fb8 <mpfr_can_round_raw@@Base+0x474>  // b.lo, b.ul, b.last
   22fc8:	b	23168 <mpfr_can_round_raw@@Base+0x624>
   22fcc:	add	x8, x18, x27, lsl #3
   22fd0:	ldur	x8, [x8, #-8]
   22fd4:	ldur	x9, [x29, #-56]
   22fd8:	mov	x0, x18
   22fdc:	mov	x1, x24
   22fe0:	stur	x23, [x29, #-80]
   22fe4:	lsr	x8, x8, x9
   22fe8:	stur	w12, [x29, #-92]
   22fec:	mov	x23, x26
   22ff0:	mov	x26, x27
   22ff4:	and	x20, x8, #0x1
   22ff8:	mov	x19, x18
   22ffc:	mov	x27, x24
   23000:	mov	w24, w4
   23004:	bl	c750 <mpfr_round_raw_2@plt>
   23008:	ldur	x1, [x29, #-24]
   2300c:	sxtw	x8, w0
   23010:	mov	w9, #0x1                   	// #1
   23014:	mvn	x6, x21
   23018:	eor	x20, x20, x8
   2301c:	lsl	x12, x9, x25
   23020:	b	2327c <mpfr_can_round_raw@@Base+0x738>
   23024:	ldur	x13, [x29, #-24]
   23028:	mov	w9, wzr
   2302c:	cmp	x21, #0x1
   23030:	mov	w15, #0x1                   	// #1
   23034:	b.lt	235fc <mpfr_can_round_raw@@Base+0xab8>  // b.tstop
   23038:	ldur	w2, [x29, #-28]
   2303c:	ldur	x3, [x29, #-48]
   23040:	cmp	x0, x18
   23044:	mov	w4, w19
   23048:	b.eq	231ac <mpfr_can_round_raw@@Base+0x668>  // b.none
   2304c:	cmp	x21, #0x4
   23050:	b.cc	23080 <mpfr_can_round_raw@@Base+0x53c>  // b.lo, b.ul, b.last
   23054:	lsl	x9, x13, #3
   23058:	sub	x11, x9, x23, lsl #3
   2305c:	add	x10, x0, x11
   23060:	sub	x12, x13, x23
   23064:	cmp	x10, x8
   23068:	add	x8, x18, x12, lsl #3
   2306c:	b.cs	236e0 <mpfr_can_round_raw@@Base+0xb9c>  // b.hs, b.nlast
   23070:	sub	x9, x9, x22, lsl #3
   23074:	add	x9, x0, x9
   23078:	cmp	x9, x8
   2307c:	b.ls	236e0 <mpfr_can_round_raw@@Base+0xb9c>  // b.plast
   23080:	mov	w8, #0x1                   	// #1
   23084:	add	x9, x8, x22
   23088:	mvn	x10, x23
   2308c:	lsl	x11, x8, #3
   23090:	add	x12, x8, x13
   23094:	add	x8, x10, x9
   23098:	add	x9, x11, x13, lsl #3
   2309c:	sub	x10, x12, x23
   230a0:	sub	x9, x9, x23, lsl #3
   230a4:	add	x10, x18, x10, lsl #3
   230a8:	add	x9, x9, x0
   230ac:	sub	x9, x9, #0x8
   230b0:	sub	x10, x10, #0x8
   230b4:	ldr	x11, [x10], #8
   230b8:	adds	x8, x8, #0x1
   230bc:	str	x11, [x9], #8
   230c0:	b.cc	230b4 <mpfr_can_round_raw@@Base+0x570>  // b.lo, b.ul, b.last
   230c4:	mov	w9, wzr
   230c8:	mov	w15, #0x1                   	// #1
   230cc:	ldur	x10, [x29, #-64]
   230d0:	cmp	x10, x26
   230d4:	b.eq	231b8 <mpfr_can_round_raw@@Base+0x674>  // b.none
   230d8:	b	231bc <mpfr_can_round_raw@@Base+0x678>
   230dc:	cmp	x21, #0x1
   230e0:	mov	w25, wzr
   230e4:	b.lt	23238 <mpfr_can_round_raw@@Base+0x6f4>  // b.tstop
   230e8:	cmp	x0, x18
   230ec:	b.eq	23238 <mpfr_can_round_raw@@Base+0x6f4>  // b.none
   230f0:	cmp	x21, #0x4
   230f4:	b.cc	23124 <mpfr_can_round_raw@@Base+0x5e0>  // b.lo, b.ul, b.last
   230f8:	lsl	x9, x1, #3
   230fc:	sub	x11, x9, x23, lsl #3
   23100:	add	x10, x0, x11
   23104:	sub	x12, x1, x23
   23108:	cmp	x10, x8
   2310c:	add	x8, x18, x12, lsl #3
   23110:	b.cs	2371c <mpfr_can_round_raw@@Base+0xbd8>  // b.hs, b.nlast
   23114:	sub	x9, x9, x22, lsl #3
   23118:	add	x9, x0, x9
   2311c:	cmp	x9, x8
   23120:	b.ls	2371c <mpfr_can_round_raw@@Base+0xbd8>  // b.plast
   23124:	mov	w8, #0x1                   	// #1
   23128:	add	x9, x8, x22
   2312c:	mvn	x10, x23
   23130:	lsl	x11, x8, #3
   23134:	add	x12, x8, x1
   23138:	add	x8, x10, x9
   2313c:	add	x9, x11, x1, lsl #3
   23140:	sub	x10, x12, x23
   23144:	sub	x9, x9, x23, lsl #3
   23148:	add	x10, x18, x10, lsl #3
   2314c:	add	x9, x9, x0
   23150:	sub	x9, x9, #0x8
   23154:	sub	x10, x10, #0x8
   23158:	ldr	x11, [x10], #8
   2315c:	adds	x8, x8, #0x1
   23160:	str	x11, [x9], #8
   23164:	b.cc	23158 <mpfr_can_round_raw@@Base+0x614>  // b.lo, b.ul, b.last
   23168:	mov	w25, wzr
   2316c:	b	23238 <mpfr_can_round_raw@@Base+0x6f4>
   23170:	ldur	x10, [x29, #-64]
   23174:	cmp	x26, #0x81
   23178:	b.lt	231fc <mpfr_can_round_raw@@Base+0x6b8>  // b.tstop
   2317c:	mov	x10, xzr
   23180:	ldr	x11, [x8, x10, lsl #3]
   23184:	add	x12, x10, #0x2
   23188:	cmn	x11, #0x1
   2318c:	cset	w9, eq  // eq = none
   23190:	cmp	x12, x22
   23194:	b.ge	231a4 <mpfr_can_round_raw@@Base+0x660>  // b.tcont
   23198:	cmn	x11, #0x1
   2319c:	add	x10, x10, #0x1
   231a0:	b.eq	23180 <mpfr_can_round_raw@@Base+0x63c>  // b.none
   231a4:	cmn	x11, #0x1
   231a8:	cset	w15, ne  // ne = any
   231ac:	ldur	x10, [x29, #-64]
   231b0:	cmp	x10, x26
   231b4:	b.ne	231bc <mpfr_can_round_raw@@Base+0x678>  // b.any
   231b8:	tbnz	w15, #0, 23564 <mpfr_can_round_raw@@Base+0xa20>
   231bc:	tbnz	w9, #0, 231fc <mpfr_can_round_raw@@Base+0x6b8>
   231c0:	ldr	x9, [x0, x27, lsl #3]
   231c4:	b	2356c <mpfr_can_round_raw@@Base+0xa28>
   231c8:	cmp	x26, #0x81
   231cc:	b.lt	23234 <mpfr_can_round_raw@@Base+0x6f0>  // b.tstop
   231d0:	mov	x9, xzr
   231d4:	ldr	x10, [x8, x9, lsl #3]
   231d8:	add	x11, x9, #0x2
   231dc:	cmn	x10, #0x1
   231e0:	cset	w25, eq  // eq = none
   231e4:	cmp	x11, x22
   231e8:	b.ge	23238 <mpfr_can_round_raw@@Base+0x6f4>  // b.tcont
   231ec:	cmn	x10, #0x1
   231f0:	add	x9, x9, #0x1
   231f4:	b.eq	231d4 <mpfr_can_round_raw@@Base+0x690>  // b.none
   231f8:	b	23238 <mpfr_can_round_raw@@Base+0x6f4>
   231fc:	cmp	w4, #0x1
   23200:	b.eq	23564 <mpfr_can_round_raw@@Base+0xa20>  // b.none
   23204:	cmp	w4, #0x4
   23208:	b.ne	23758 <mpfr_can_round_raw@@Base+0xc14>  // b.any
   2320c:	cmp	x10, x26
   23210:	mov	w28, wzr
   23214:	b.le	23590 <mpfr_can_round_raw@@Base+0xa4c>
   23218:	ldur	x8, [x29, #-72]
   2321c:	ldur	x9, [x29, #-88]
   23220:	cmp	x8, x9
   23224:	b.ne	23590 <mpfr_can_round_raw@@Base+0xa4c>  // b.any
   23228:	ldr	x8, [x0]
   2322c:	cmp	x8, #0x0
   23230:	b	2358c <mpfr_can_round_raw@@Base+0xa48>
   23234:	mov	w25, #0x1                   	// #1
   23238:	add	x8, x0, x27, lsl #3
   2323c:	ldur	x20, [x8, #-8]
   23240:	mov	x1, x24
   23244:	stur	x23, [x29, #-80]
   23248:	mov	x23, x26
   2324c:	mov	x26, x27
   23250:	mov	x27, x24
   23254:	mov	w24, w4
   23258:	bl	c750 <mpfr_round_raw_2@plt>
   2325c:	cbnz	w25, 2393c <mpfr_can_round_raw@@Base+0xdf8>
   23260:	ldur	x8, [x29, #-56]
   23264:	ldp	x1, x19, [x29, #-24]
   23268:	ldp	x12, x6, [x29, #-112]
   2326c:	sxtw	x9, w0
   23270:	lsr	x8, x20, x8
   23274:	and	x8, x8, #0x1
   23278:	eor	x20, x8, x9
   2327c:	lsl	x9, x6, #3
   23280:	add	x8, x19, x28
   23284:	add	x13, x8, x9
   23288:	ldr	x10, [x13]
   2328c:	ldur	x0, [x29, #-40]
   23290:	subs	x10, x10, x12
   23294:	add	x11, x0, x28
   23298:	str	x10, [x11, x9]
   2329c:	b.cs	23420 <mpfr_can_round_raw@@Base+0x8dc>  // b.hs, b.nlast
   232a0:	lsl	x10, x1, #3
   232a4:	add	x11, x0, x9
   232a8:	add	x14, x6, x1
   232ac:	ldur	w2, [x29, #-28]
   232b0:	ldur	x3, [x29, #-48]
   232b4:	mov	x12, #0xffffffffffffffe8    	// #-24
   232b8:	add	x11, x11, x10
   232bc:	add	x10, x9, x10
   232c0:	lsl	x14, x14, #3
   232c4:	mov	x16, #0xfffffffffffffff8    	// #-8
   232c8:	sub	x9, x12, x11
   232cc:	add	x11, x19, x14
   232d0:	add	x12, x0, x14
   232d4:	sub	x17, x10, x22, lsl #3
   232d8:	mov	x15, xzr
   232dc:	neg	x10, x11
   232e0:	sub	x14, x16, x12
   232e4:	add	x16, x0, x17
   232e8:	mov	x11, x21
   232ec:	mov	w4, w24
   232f0:	mov	x24, x27
   232f4:	add	x12, x15, #0x1
   232f8:	cmp	x12, x21
   232fc:	b.gt	235bc <mpfr_can_round_raw@@Base+0xa78>
   23300:	lsl	x15, x15, #3
   23304:	add	x17, x13, x15
   23308:	ldr	x17, [x17, #8]
   2330c:	add	x15, x16, x15
   23310:	sub	x9, x9, #0x8
   23314:	sub	x10, x10, #0x8
   23318:	sub	x18, x17, #0x1
   2331c:	sub	x14, x14, #0x8
   23320:	str	x18, [x15, #8]
   23324:	sub	x11, x11, #0x1
   23328:	mov	x15, x12
   2332c:	cbz	x17, 232f4 <mpfr_can_round_raw@@Base+0x7b0>
   23330:	ldur	x18, [x29, #-80]
   23334:	cmp	x0, x19
   23338:	b.eq	234e4 <mpfr_can_round_raw@@Base+0x9a0>  // b.none
   2333c:	cmp	x12, x21
   23340:	b.ge	234e4 <mpfr_can_round_raw@@Base+0x9a0>  // b.tcont
   23344:	sub	x13, x21, x12
   23348:	cmp	x13, #0x4
   2334c:	add	x8, x12, #0x1
   23350:	b.cc	233dc <mpfr_can_round_raw@@Base+0x898>  // b.lo, b.ul, b.last
   23354:	neg	x15, x22, lsl #3
   23358:	add	x16, x6, x18
   2335c:	sub	x17, x15, x14
   23360:	add	x14, x16, x1
   23364:	sub	x16, x14, x22, lsl #1
   23368:	add	x16, x19, x16, lsl #3
   2336c:	add	x16, x16, #0x8
   23370:	cmp	x17, x16
   23374:	b.cs	23398 <mpfr_can_round_raw@@Base+0x854>  // b.hs, b.nlast
   23378:	lsl	x14, x14, #3
   2337c:	sub	x14, x14, x22, lsl #4
   23380:	sub	x15, x15, x10
   23384:	add	x14, x14, x0
   23388:	add	x14, x14, #0x8
   2338c:	add	x15, x15, #0x8
   23390:	cmp	x14, x15
   23394:	b.hi	233dc <mpfr_can_round_raw@@Base+0x898>  // b.pmore
   23398:	neg	x8, x22, lsl #3
   2339c:	and	x11, x11, #0xfffffffffffffffc
   233a0:	and	x14, x13, #0xfffffffffffffffc
   233a4:	sub	x9, x8, x9
   233a8:	sub	x8, x8, x10
   233ac:	add	x11, x11, x12
   233b0:	add	x10, x8, #0x18
   233b4:	add	x8, x11, #0x1
   233b8:	mov	x11, x14
   233bc:	ldp	q0, q1, [x10, #-16]
   233c0:	subs	x11, x11, #0x4
   233c4:	add	x10, x10, #0x20
   233c8:	stp	q0, q1, [x9, #-16]
   233cc:	add	x9, x9, #0x20
   233d0:	b.ne	233bc <mpfr_can_round_raw@@Base+0x878>  // b.any
   233d4:	cmp	x13, x14
   233d8:	b.eq	234e4 <mpfr_can_round_raw@@Base+0x9a0>  // b.none
   233dc:	add	x9, x8, x22
   233e0:	mvn	x10, x18
   233e4:	lsl	x11, x8, #3
   233e8:	add	x12, x8, x6
   233ec:	add	x8, x10, x9
   233f0:	add	x9, x11, x6, lsl #3
   233f4:	add	x10, x12, x1
   233f8:	add	x9, x9, x1, lsl #3
   233fc:	sub	x10, x10, x22
   23400:	sub	x9, x9, x22, lsl #3
   23404:	add	x9, x0, x9
   23408:	add	x10, x19, x10, lsl #3
   2340c:	ldr	x11, [x10], #8
   23410:	adds	x8, x8, #0x1
   23414:	str	x11, [x9], #8
   23418:	b.cc	2340c <mpfr_can_round_raw@@Base+0x8c8>  // b.lo, b.ul, b.last
   2341c:	b	234e4 <mpfr_can_round_raw@@Base+0x9a0>
   23420:	ldur	w2, [x29, #-28]
   23424:	ldur	x3, [x29, #-48]
   23428:	ldur	x13, [x29, #-80]
   2342c:	cmp	x21, #0x1
   23430:	mov	w4, w24
   23434:	mov	x24, x27
   23438:	b.lt	234e4 <mpfr_can_round_raw@@Base+0x9a0>  // b.tstop
   2343c:	cmp	x0, x19
   23440:	b.eq	234e4 <mpfr_can_round_raw@@Base+0x9a0>  // b.none
   23444:	cmp	x21, #0x4
   23448:	b.cc	234a0 <mpfr_can_round_raw@@Base+0x95c>  // b.lo, b.ul, b.last
   2344c:	add	x8, x6, x1
   23450:	add	x10, x6, x13
   23454:	lsl	x11, x8, #3
   23458:	add	x10, x10, x1
   2345c:	sub	x11, x11, x22, lsl #3
   23460:	sub	x12, x10, x22, lsl #1
   23464:	add	x11, x11, x0
   23468:	add	x12, x19, x12, lsl #3
   2346c:	sub	x8, x8, x22
   23470:	add	x11, x11, #0x8
   23474:	add	x12, x12, #0x8
   23478:	cmp	x11, x12
   2347c:	add	x8, x19, x8, lsl #3
   23480:	b.cs	23618 <mpfr_can_round_raw@@Base+0xad4>  // b.hs, b.nlast
   23484:	lsl	x10, x10, #3
   23488:	sub	x10, x10, x22, lsl #4
   2348c:	add	x10, x10, x0
   23490:	add	x10, x10, #0x8
   23494:	add	x11, x8, #0x8
   23498:	cmp	x10, x11
   2349c:	b.ls	23618 <mpfr_can_round_raw@@Base+0xad4>  // b.plast
   234a0:	mov	w8, #0x1                   	// #1
   234a4:	add	x9, x8, x22
   234a8:	mvn	x10, x13
   234ac:	lsl	x11, x8, #3
   234b0:	add	x12, x8, x6
   234b4:	add	x8, x10, x9
   234b8:	add	x9, x11, x6, lsl #3
   234bc:	add	x10, x12, x1
   234c0:	add	x9, x9, x1, lsl #3
   234c4:	sub	x10, x10, x22
   234c8:	sub	x9, x9, x22, lsl #3
   234cc:	add	x9, x0, x9
   234d0:	add	x10, x19, x10, lsl #3
   234d4:	ldr	x11, [x10], #8
   234d8:	adds	x8, x8, #0x1
   234dc:	str	x11, [x9], #8
   234e0:	b.cc	234d4 <mpfr_can_round_raw@@Base+0x990>  // b.lo, b.ul, b.last
   234e4:	sub	x10, x26, #0x1
   234e8:	ldr	x9, [x0, x10, lsl #3]
   234ec:	mov	x11, xzr
   234f0:	mov	x12, x9
   234f4:	cmp	x11, x22
   234f8:	b.ne	23544 <mpfr_can_round_raw@@Base+0xa00>  // b.any
   234fc:	tbnz	x12, #63, 23544 <mpfr_can_round_raw@@Base+0xa00>
   23500:	cmp	w4, #0x1
   23504:	b.eq	23564 <mpfr_can_round_raw@@Base+0xa20>  // b.none
   23508:	ldur	w8, [x29, #-92]
   2350c:	mov	w28, wzr
   23510:	cmp	w8, #0x0
   23514:	cset	w8, eq  // eq = none
   23518:	cmp	w4, #0x4
   2351c:	cset	w9, eq  // eq = none
   23520:	and	w8, w8, w9
   23524:	tbnz	w8, #0, 23590 <mpfr_can_round_raw@@Base+0xa4c>
   23528:	cbnz	x20, 23590 <mpfr_can_round_raw@@Base+0xa4c>
   2352c:	add	x3, x3, #0x1
   23530:	mov	x1, x24
   23534:	bl	c750 <mpfr_round_raw_2@plt>
   23538:	cmp	w0, #0x0
   2353c:	cset	w28, ne  // ne = any
   23540:	b	23590 <mpfr_can_round_raw@@Base+0xa4c>
   23544:	ldp	x11, x8, [x29, #-72]
   23548:	cmp	x11, x8
   2354c:	b.ne	2356c <mpfr_can_round_raw@@Base+0xa28>  // b.any
   23550:	cbnz	w4, 23564 <mpfr_can_round_raw@@Base+0xa20>
   23554:	ldr	x8, [x19, x10, lsl #3]
   23558:	ldur	x9, [x29, #-56]
   2355c:	lsr	x8, x8, x9
   23560:	tbz	w8, #0, 2365c <mpfr_can_round_raw@@Base+0xb18>
   23564:	mov	w28, wzr
   23568:	b	23590 <mpfr_can_round_raw@@Base+0xa4c>
   2356c:	ldur	x8, [x29, #-56]
   23570:	mov	x1, x24
   23574:	lsr	x8, x9, x8
   23578:	and	x19, x8, #0x1
   2357c:	bl	c750 <mpfr_round_raw_2@plt>
   23580:	sxtw	x8, w0
   23584:	eor	x8, x19, x8
   23588:	cmp	x20, x8
   2358c:	cset	w28, eq  // eq = none
   23590:	ldur	x0, [x29, #-8]
   23594:	cbnz	x0, 23850 <mpfr_can_round_raw@@Base+0xd0c>
   23598:	mov	w0, w28
   2359c:	mov	sp, x29
   235a0:	ldp	x20, x19, [sp, #80]
   235a4:	ldp	x22, x21, [sp, #64]
   235a8:	ldp	x24, x23, [sp, #48]
   235ac:	ldp	x26, x25, [sp, #32]
   235b0:	ldp	x28, x27, [sp, #16]
   235b4:	ldp	x29, x30, [sp], #96
   235b8:	ret
   235bc:	sub	x10, x26, #0x1
   235c0:	ldr	x9, [x0, x10, lsl #3]
   235c4:	cmp	x23, #0x41
   235c8:	b.lt	234ec <mpfr_can_round_raw@@Base+0x9a8>  // b.tstop
   235cc:	mov	x11, xzr
   235d0:	mov	w13, #0x1                   	// #1
   235d4:	ldr	x14, [x8, x11, lsl #3]
   235d8:	add	x11, x11, #0x1
   235dc:	subs	x12, x14, x13
   235e0:	cset	w15, cc  // cc = lo, ul, last
   235e4:	cmp	x11, x22
   235e8:	b.ge	234f4 <mpfr_can_round_raw@@Base+0x9b0>  // b.tcont
   235ec:	cmp	x14, x13
   235f0:	mov	x13, x15
   235f4:	b.cc	235d4 <mpfr_can_round_raw@@Base+0xa90>  // b.lo, b.ul, b.last
   235f8:	b	234f4 <mpfr_can_round_raw@@Base+0x9b0>
   235fc:	ldur	w2, [x29, #-28]
   23600:	ldur	x3, [x29, #-48]
   23604:	mov	w4, w19
   23608:	ldur	x10, [x29, #-64]
   2360c:	cmp	x10, x26
   23610:	b.eq	231b8 <mpfr_can_round_raw@@Base+0x674>  // b.none
   23614:	b	231bc <mpfr_can_round_raw@@Base+0x678>
   23618:	add	x9, x9, x1, lsl #3
   2361c:	sub	x9, x9, x22, lsl #3
   23620:	and	x10, x21, #0xfffffffffffffffc
   23624:	add	x9, x9, x0
   23628:	add	x11, x8, #0x18
   2362c:	orr	x8, x10, #0x1
   23630:	add	x9, x9, #0x18
   23634:	mov	x12, x10
   23638:	ldp	q0, q1, [x11, #-16]
   2363c:	subs	x12, x12, #0x4
   23640:	add	x11, x11, #0x20
   23644:	stp	q0, q1, [x9, #-16]
   23648:	add	x9, x9, #0x20
   2364c:	b.ne	23638 <mpfr_can_round_raw@@Base+0xaf4>  // b.any
   23650:	cmp	x21, x10
   23654:	b.eq	234e4 <mpfr_can_round_raw@@Base+0x9a0>  // b.none
   23658:	b	234a4 <mpfr_can_round_raw@@Base+0x960>
   2365c:	cmp	x24, x3
   23660:	b.le	23760 <mpfr_can_round_raw@@Base+0xc1c>
   23664:	sub	x8, x24, #0x1
   23668:	add	x9, x24, #0x3e
   2366c:	cmp	x8, #0x0
   23670:	add	x10, x3, #0x3f
   23674:	csel	x8, x9, x8, lt  // lt = tstop
   23678:	cmp	x3, #0x0
   2367c:	csel	x9, x10, x3, lt  // lt = tstop
   23680:	asr	x8, x8, #6
   23684:	sub	x8, x8, x9, asr #6
   23688:	and	w11, w3, #0x3f
   2368c:	ldr	x9, [x19, x8, lsl #3]
   23690:	mov	x10, #0xffffffffffffffff    	// #-1
   23694:	neg	w11, w11
   23698:	tst	w3, #0x3f
   2369c:	lsl	x11, x10, x11
   236a0:	csinv	x10, x10, x11, eq  // eq = none
   236a4:	tst	x9, x10
   236a8:	cset	w28, eq  // eq = none
   236ac:	cmp	x8, #0x1
   236b0:	b.lt	23590 <mpfr_can_round_raw@@Base+0xa4c>  // b.tstop
   236b4:	and	x9, x9, x10
   236b8:	cbnz	x9, 23590 <mpfr_can_round_raw@@Base+0xa4c>
   236bc:	sub	x9, x19, #0x8
   236c0:	ldr	x10, [x9, x8, lsl #3]
   236c4:	cmp	x10, #0x0
   236c8:	cset	w28, eq  // eq = none
   236cc:	cmp	x8, #0x2
   236d0:	b.lt	23590 <mpfr_can_round_raw@@Base+0xa4c>  // b.tstop
   236d4:	sub	x8, x8, #0x1
   236d8:	cbz	x10, 236c0 <mpfr_can_round_raw@@Base+0xb7c>
   236dc:	b	23590 <mpfr_can_round_raw@@Base+0xa4c>
   236e0:	and	x9, x21, #0xfffffffffffffffc
   236e4:	add	x11, x11, x0
   236e8:	add	x10, x8, #0x10
   236ec:	orr	x8, x9, #0x1
   236f0:	add	x11, x11, #0x10
   236f4:	mov	x12, x9
   236f8:	ldp	q0, q1, [x10, #-16]
   236fc:	subs	x12, x12, #0x4
   23700:	add	x10, x10, #0x20
   23704:	stp	q0, q1, [x11, #-16]
   23708:	add	x11, x11, #0x20
   2370c:	b.ne	236f8 <mpfr_can_round_raw@@Base+0xbb4>  // b.any
   23710:	cmp	x21, x9
   23714:	b.eq	230c4 <mpfr_can_round_raw@@Base+0x580>  // b.none
   23718:	b	23084 <mpfr_can_round_raw@@Base+0x540>
   2371c:	and	x9, x21, #0xfffffffffffffffc
   23720:	add	x11, x11, x0
   23724:	add	x10, x8, #0x10
   23728:	orr	x8, x9, #0x1
   2372c:	add	x11, x11, #0x10
   23730:	mov	x12, x9
   23734:	ldp	q0, q1, [x10, #-16]
   23738:	subs	x12, x12, #0x4
   2373c:	add	x10, x10, #0x20
   23740:	stp	q0, q1, [x11, #-16]
   23744:	add	x11, x11, #0x20
   23748:	b.ne	23734 <mpfr_can_round_raw@@Base+0xbf0>  // b.any
   2374c:	cmp	x21, x9
   23750:	b.ne	23128 <mpfr_can_round_raw@@Base+0x5e4>  // b.any
   23754:	b	23168 <mpfr_can_round_raw@@Base+0x624>
   23758:	cmp	x20, #0x0
   2375c:	b	2358c <mpfr_can_round_raw@@Base+0xa48>
   23760:	mov	w28, #0x1                   	// #1
   23764:	b	23590 <mpfr_can_round_raw@@Base+0xa4c>
   23768:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   2376c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   23770:	add	x0, x0, #0xbf1
   23774:	add	x2, x2, #0xc4c
   23778:	mov	w1, #0xbf                  	// #191
   2377c:	mov	x20, x3
   23780:	bl	cb20 <mpfr_assert_fail@plt>
   23784:	ldp	x1, x18, [x29, #-24]
   23788:	mov	x3, x20
   2378c:	mov	w12, wzr
   23790:	lsr	w2, w22, #31
   23794:	cbnz	w23, 22b90 <mpfr_can_round_raw@@Base+0x4c>
   23798:	b	22bac <mpfr_can_round_raw@@Base+0x68>
   2379c:	cmp	w12, w19
   237a0:	cset	w8, eq  // eq = none
   237a4:	cmp	w19, #0x0
   237a8:	cset	w9, eq  // eq = none
   237ac:	cmp	x26, x3
   237b0:	mov	w28, wzr
   237b4:	b.ge	23598 <mpfr_can_round_raw@@Base+0xa54>  // b.tcont
   237b8:	orr	w8, w8, w9
   237bc:	cbz	w8, 23598 <mpfr_can_round_raw@@Base+0xa54>
   237c0:	add	x8, x26, #0x1
   237c4:	cmp	x8, x3
   237c8:	b.ne	23a64 <mpfr_can_round_raw@@Base+0xf20>  // b.any
   237cc:	cmp	w12, #0x1
   237d0:	b.eq	23a64 <mpfr_can_round_raw@@Base+0xf20>  // b.none
   237d4:	mov	x0, x18
   237d8:	bl	c7c0 <mpfr_powerof2_raw2@plt>
   237dc:	cbnz	w0, 23b04 <mpfr_can_round_raw@@Base+0xfc0>
   237e0:	b	23a64 <mpfr_can_round_raw@@Base+0xf20>
   237e4:	mov	x0, x18
   237e8:	mov	w22, w12
   237ec:	mov	x20, x3
   237f0:	bl	c7c0 <mpfr_powerof2_raw2@plt>
   237f4:	cbz	w0, 23858 <mpfr_can_round_raw@@Base+0xd14>
   237f8:	cmp	w19, #0x4
   237fc:	b.eq	23808 <mpfr_can_round_raw@@Base+0xcc4>  // b.none
   23800:	cmp	w19, #0x1
   23804:	b.ne	23810 <mpfr_can_round_raw@@Base+0xccc>  // b.any
   23808:	cmp	w22, w19
   2380c:	b.ne	23b04 <mpfr_can_round_raw@@Base+0xfc0>  // b.any
   23810:	cmp	w22, #0x1
   23814:	b.eq	23a64 <mpfr_can_round_raw@@Base+0xf20>  // b.none
   23818:	add	x8, x26, #0x1
   2381c:	cmp	x8, x20
   23820:	cset	w28, lt  // lt = tstop
   23824:	b	23598 <mpfr_can_round_raw@@Base+0xa54>
   23828:	sub	x0, x29, #0x8
   2382c:	mov	x1, x28
   23830:	stur	x23, [x29, #-80]
   23834:	mov	w23, w12
   23838:	bl	be10 <mpfr_tmp_allocate@plt>
   2383c:	mov	w12, w23
   23840:	ldp	x10, x23, [x29, #-88]
   23844:	ldp	x1, x18, [x29, #-24]
   23848:	ldur	w2, [x29, #-28]
   2384c:	b	22c98 <mpfr_can_round_raw@@Base+0x154>
   23850:	bl	c400 <mpfr_tmp_free@plt>
   23854:	b	23598 <mpfr_can_round_raw@@Base+0xa54>
   23858:	cbz	w19, 23980 <mpfr_can_round_raw@@Base+0xe3c>
   2385c:	cmp	w22, w19
   23860:	b.ne	23a6c <mpfr_can_round_raw@@Base+0xf28>  // b.any
   23864:	cmp	x21, x26
   23868:	mov	w28, #0x1                   	// #1
   2386c:	b.le	23598 <mpfr_can_round_raw@@Base+0xa54>
   23870:	ldp	x11, x10, [x29, #-24]
   23874:	cbnz	w22, 23598 <mpfr_can_round_raw@@Base+0xa54>
   23878:	add	x8, x26, #0x3f
   2387c:	cmp	x26, #0x0
   23880:	csel	x8, x8, x26, lt  // lt = tstop
   23884:	mov	x9, #0xffffffffffffffff    	// #-1
   23888:	eor	x8, x9, x8, asr #6
   2388c:	add	x8, x8, x11
   23890:	ldr	x8, [x10, x8, lsl #3]
   23894:	mov	x13, x26
   23898:	mvn	w9, w13
   2389c:	mov	x12, x26
   238a0:	lsr	x8, x8, x9
   238a4:	tbz	w8, #0, 23a64 <mpfr_can_round_raw@@Base+0xf20>
   238a8:	add	x8, x12, #0x1
   238ac:	cmp	x21, x8
   238b0:	b.le	23b04 <mpfr_can_round_raw@@Base+0xfc0>
   238b4:	sub	x9, x21, #0x1
   238b8:	add	x10, x21, #0x3e
   238bc:	cmp	x9, #0x0
   238c0:	add	x11, x8, #0x3f
   238c4:	csel	x9, x10, x9, lt  // lt = tstop
   238c8:	cmp	x8, #0x0
   238cc:	and	w12, w8, #0x3f
   238d0:	csel	x10, x11, x8, lt  // lt = tstop
   238d4:	tst	w8, #0x3f
   238d8:	asr	x8, x9, #6
   238dc:	ldur	x9, [x29, #-16]
   238e0:	sub	x8, x8, x10, asr #6
   238e4:	mov	x11, #0xffffffffffffffff    	// #-1
   238e8:	ldr	x10, [x9, x8, lsl #3]
   238ec:	neg	w9, w12
   238f0:	lsl	x9, x11, x9
   238f4:	csinv	x11, x11, x9, eq  // eq = none
   238f8:	tst	x10, x11
   238fc:	cset	w9, eq  // eq = none
   23900:	cmp	x8, #0x1
   23904:	b.lt	23934 <mpfr_can_round_raw@@Base+0xdf0>  // b.tstop
   23908:	and	x10, x10, x11
   2390c:	cbnz	x10, 23934 <mpfr_can_round_raw@@Base+0xdf0>
   23910:	ldur	x9, [x29, #-16]
   23914:	sub	x10, x9, #0x8
   23918:	ldr	x11, [x10, x8, lsl #3]
   2391c:	cmp	x11, #0x0
   23920:	cset	w9, eq  // eq = none
   23924:	cmp	x8, #0x2
   23928:	b.lt	23934 <mpfr_can_round_raw@@Base+0xdf0>  // b.tstop
   2392c:	sub	x8, x8, #0x1
   23930:	cbz	x11, 23918 <mpfr_can_round_raw@@Base+0xdd4>
   23934:	tbnz	w9, #0, 23b04 <mpfr_can_round_raw@@Base+0xfc0>
   23938:	b	23a64 <mpfr_can_round_raw@@Base+0xf20>
   2393c:	cmp	w24, #0x1
   23940:	b.eq	23564 <mpfr_can_round_raw@@Base+0xa20>  // b.none
   23944:	ldur	x9, [x29, #-64]
   23948:	add	x8, x23, #0x1
   2394c:	cmp	x8, x9
   23950:	cset	w28, lt  // lt = tstop
   23954:	cmp	w24, #0x4
   23958:	b.ne	23590 <mpfr_can_round_raw@@Base+0xa4c>  // b.any
   2395c:	cmp	x8, x9
   23960:	mov	w28, wzr
   23964:	b.ge	23590 <mpfr_can_round_raw@@Base+0xa4c>  // b.tcont
   23968:	ldur	x8, [x29, #-88]
   2396c:	cmp	x26, x8
   23970:	ldur	x8, [x29, #-40]
   23974:	b.ne	23590 <mpfr_can_round_raw@@Base+0xa4c>  // b.any
   23978:	ldr	x8, [x8]
   2397c:	b	2322c <mpfr_can_round_raw@@Base+0x6e8>
   23980:	add	x8, x26, #0x1
   23984:	cmp	x8, x20
   23988:	b.ne	23998 <mpfr_can_round_raw@@Base+0xe54>  // b.any
   2398c:	ldur	x9, [x29, #-16]
   23990:	ldrb	w9, [x9]
   23994:	tbnz	w9, #0, 23b04 <mpfr_can_round_raw@@Base+0xfc0>
   23998:	cmp	x21, x26
   2399c:	b.le	23a64 <mpfr_can_round_raw@@Base+0xf20>
   239a0:	mov	x13, x26
   239a4:	add	x9, x13, #0x3f
   239a8:	cmp	x13, #0x0
   239ac:	csel	x9, x9, x13, lt  // lt = tstop
   239b0:	mov	x10, #0xffffffffffffffff    	// #-1
   239b4:	eor	x9, x10, x9, asr #6
   239b8:	ldur	x10, [x29, #-24]
   239bc:	mov	x11, x26
   239c0:	add	x9, x9, x10
   239c4:	ldur	x10, [x29, #-16]
   239c8:	ldr	x9, [x10, x9, lsl #3]
   239cc:	mvn	w10, w11
   239d0:	lsr	x9, x9, x10
   239d4:	tbz	w9, #0, 23a64 <mpfr_can_round_raw@@Base+0xf20>
   239d8:	cmp	x21, x8
   239dc:	b.le	23b0c <mpfr_can_round_raw@@Base+0xfc8>
   239e0:	sub	x9, x21, #0x1
   239e4:	add	x10, x21, #0x3e
   239e8:	cmp	x9, #0x0
   239ec:	add	x11, x8, #0x3f
   239f0:	csel	x9, x10, x9, lt  // lt = tstop
   239f4:	cmp	x8, #0x0
   239f8:	and	w12, w8, #0x3f
   239fc:	csel	x10, x11, x8, lt  // lt = tstop
   23a00:	tst	w8, #0x3f
   23a04:	asr	x8, x9, #6
   23a08:	ldur	x9, [x29, #-16]
   23a0c:	sub	x8, x8, x10, asr #6
   23a10:	mov	x11, #0xffffffffffffffff    	// #-1
   23a14:	ldr	x10, [x9, x8, lsl #3]
   23a18:	neg	w9, w12
   23a1c:	lsl	x9, x11, x9
   23a20:	csinv	x11, x11, x9, eq  // eq = none
   23a24:	tst	x10, x11
   23a28:	cset	w9, eq  // eq = none
   23a2c:	cmp	x8, #0x1
   23a30:	b.lt	23b10 <mpfr_can_round_raw@@Base+0xfcc>  // b.tstop
   23a34:	and	x10, x10, x11
   23a38:	cbnz	x10, 23b10 <mpfr_can_round_raw@@Base+0xfcc>
   23a3c:	ldur	x9, [x29, #-16]
   23a40:	sub	x10, x9, #0x8
   23a44:	ldr	x11, [x10, x8, lsl #3]
   23a48:	cmp	x11, #0x0
   23a4c:	cset	w9, eq  // eq = none
   23a50:	cmp	x8, #0x2
   23a54:	b.lt	23b10 <mpfr_can_round_raw@@Base+0xfcc>  // b.tstop
   23a58:	sub	x8, x8, #0x1
   23a5c:	cbz	x11, 23a44 <mpfr_can_round_raw@@Base+0xf00>
   23a60:	b	23b10 <mpfr_can_round_raw@@Base+0xfcc>
   23a64:	mov	w28, #0x1                   	// #1
   23a68:	b	23598 <mpfr_can_round_raw@@Base+0xa54>
   23a6c:	cmp	x21, x26
   23a70:	b.le	23b04 <mpfr_can_round_raw@@Base+0xfc0>
   23a74:	sub	x8, x21, #0x1
   23a78:	mov	x10, x26
   23a7c:	add	x9, x21, #0x3e
   23a80:	cmp	x8, #0x0
   23a84:	add	x10, x10, #0x3f
   23a88:	csel	x8, x9, x8, lt  // lt = tstop
   23a8c:	cmp	x26, #0x0
   23a90:	csel	x10, x10, x26, lt  // lt = tstop
   23a94:	asr	x8, x8, #6
   23a98:	sub	x8, x8, x10, asr #6
   23a9c:	ldur	x10, [x29, #-16]
   23aa0:	mov	x11, x26
   23aa4:	and	w9, w11, #0x3f
   23aa8:	tst	w11, #0x3f
   23aac:	ldr	x10, [x10, x8, lsl #3]
   23ab0:	mov	x11, #0xffffffffffffffff    	// #-1
   23ab4:	neg	w9, w9
   23ab8:	lsl	x9, x11, x9
   23abc:	csinv	x11, x11, x9, eq  // eq = none
   23ac0:	tst	x10, x11
   23ac4:	cset	w9, eq  // eq = none
   23ac8:	cmp	x8, #0x1
   23acc:	b.lt	23afc <mpfr_can_round_raw@@Base+0xfb8>  // b.tstop
   23ad0:	and	x10, x10, x11
   23ad4:	cbnz	x10, 23afc <mpfr_can_round_raw@@Base+0xfb8>
   23ad8:	ldur	x9, [x29, #-16]
   23adc:	sub	x10, x9, #0x8
   23ae0:	ldr	x11, [x10, x8, lsl #3]
   23ae4:	cmp	x11, #0x0
   23ae8:	cset	w9, eq  // eq = none
   23aec:	cmp	x8, #0x2
   23af0:	b.lt	23afc <mpfr_can_round_raw@@Base+0xfb8>  // b.tstop
   23af4:	sub	x8, x8, #0x1
   23af8:	cbz	x11, 23ae0 <mpfr_can_round_raw@@Base+0xf9c>
   23afc:	eor	w28, w9, #0x1
   23b00:	b	23598 <mpfr_can_round_raw@@Base+0xa54>
   23b04:	mov	w28, wzr
   23b08:	b	23598 <mpfr_can_round_raw@@Base+0xa54>
   23b0c:	mov	w9, #0x1                   	// #1
   23b10:	eor	w28, w9, #0x1
   23b14:	cbz	w22, 23598 <mpfr_can_round_raw@@Base+0xa54>
   23b18:	ldp	x11, x10, [x29, #-24]
   23b1c:	tbnz	w28, #0, 23598 <mpfr_can_round_raw@@Base+0xa54>
   23b20:	sub	x8, x13, #0x1
   23b24:	add	x9, x13, #0x3e
   23b28:	cmp	x8, #0x0
   23b2c:	csel	x8, x9, x8, lt  // lt = tstop
   23b30:	mov	x9, #0xffffffffffffffff    	// #-1
   23b34:	eor	x8, x9, x8, asr #6
   23b38:	add	x8, x8, x11
   23b3c:	ldr	x8, [x10, x8, lsl #3]
   23b40:	neg	w9, w13
   23b44:	cmp	w22, #0x1
   23b48:	cset	w10, eq  // eq = none
   23b4c:	lsr	x8, x8, x9
   23b50:	tst	x8, #0x1
   23b54:	cset	w8, eq  // eq = none
   23b58:	eor	w28, w10, w8
   23b5c:	b	23598 <mpfr_can_round_raw@@Base+0xa54>

0000000000023b60 <mpfr_set4@@Base>:
   23b60:	stp	x29, x30, [sp, #-48]!
   23b64:	stp	x20, x19, [sp, #32]
   23b68:	str	w3, [x0, #8]
   23b6c:	ldr	x9, [x1, #16]
   23b70:	mov	x10, #0x2                   	// #2
   23b74:	movk	x10, #0x8000, lsl #48
   23b78:	add	x11, x10, #0x2
   23b7c:	str	x9, [x0, #16]
   23b80:	ldr	x9, [x1, #16]
   23b84:	str	x21, [sp, #16]
   23b88:	mov	x29, sp
   23b8c:	cmp	x9, x11
   23b90:	b.lt	23f30 <mpfr_set4@@Base+0x3d0>  // b.tstop
   23b94:	ldr	x11, [x1]
   23b98:	ldr	x14, [x0]
   23b9c:	ldr	x20, [x0, #24]
   23ba0:	mov	x8, x0
   23ba4:	cmp	x11, x14
   23ba8:	b.ne	23be4 <mpfr_set4@@Base+0x84>  // b.any
   23bac:	ldr	x1, [x1, #24]
   23bb0:	cmp	x20, x1
   23bb4:	b.eq	23bdc <mpfr_set4@@Base+0x7c>  // b.none
   23bb8:	sub	x8, x11, #0x1
   23bbc:	add	x9, x11, #0x3e
   23bc0:	cmp	x8, #0x0
   23bc4:	csel	x8, x9, x8, lt  // lt = tstop
   23bc8:	asr	x8, x8, #6
   23bcc:	lsl	x8, x8, #3
   23bd0:	add	x2, x8, #0x8
   23bd4:	mov	x0, x20
   23bd8:	bl	ba70 <memcpy@plt>
   23bdc:	mov	w19, wzr
   23be0:	b	23e30 <mpfr_set4@@Base+0x2d0>
   23be4:	sub	x9, x11, #0x1
   23be8:	add	x10, x11, #0x3e
   23bec:	sub	x12, x14, #0x1
   23bf0:	cmp	x9, #0x0
   23bf4:	add	x13, x14, #0x3e
   23bf8:	csel	x9, x10, x9, lt  // lt = tstop
   23bfc:	cmp	x12, #0x0
   23c00:	csel	x10, x13, x12, lt  // lt = tstop
   23c04:	asr	x9, x9, #6
   23c08:	asr	x10, x10, #6
   23c0c:	add	x17, x9, #0x1
   23c10:	cmp	x14, x11
   23c14:	add	x12, x10, #0x1
   23c18:	b.ge	23f5c <mpfr_set4@@Base+0x3fc>  // b.tcont
   23c1c:	ldr	x11, [x1, #24]
   23c20:	neg	w13, w14
   23c24:	ands	x15, x13, #0x3f
   23c28:	mvn	x16, x10
   23c2c:	add	x13, x11, x17, lsl #3
   23c30:	mov	w19, w3
   23c34:	add	x1, x13, x16, lsl #3
   23c38:	b.eq	23f8c <mpfr_set4@@Base+0x42c>  // b.none
   23c3c:	ldr	x16, [x1]
   23c40:	sub	x15, x15, #0x1
   23c44:	mov	w18, #0x1                   	// #1
   23c48:	lsl	x18, x18, x15
   23c4c:	sub	x0, x18, #0x1
   23c50:	and	x15, x16, x18
   23c54:	and	x16, x16, x0
   23c58:	cbz	w2, 23c60 <mpfr_set4@@Base+0x100>
   23c5c:	cbnz	x15, 23c88 <mpfr_set4@@Base+0x128>
   23c60:	cbnz	x16, 23c88 <mpfr_set4@@Base+0x128>
   23c64:	sub	x17, x17, x12
   23c68:	cbz	x17, 23c88 <mpfr_set4@@Base+0x128>
   23c6c:	mvn	x16, x10
   23c70:	add	x17, x16, x9
   23c74:	ldr	x16, [x11, x17, lsl #3]
   23c78:	subs	x17, x17, #0x1
   23c7c:	cset	w0, cs  // cs = hs, nlast
   23c80:	cbnz	x16, 23c88 <mpfr_set4@@Base+0x128>
   23c84:	tbnz	w0, #0, 23c74 <mpfr_set4@@Base+0x114>
   23c88:	lsl	x21, x18, #1
   23c8c:	cmp	w2, #0x5
   23c90:	b.eq	23de4 <mpfr_set4@@Base+0x284>  // b.none
   23c94:	cmp	w2, #0x1
   23c98:	b.eq	23cd0 <mpfr_set4@@Base+0x170>  // b.none
   23c9c:	cbnz	w2, 23cc4 <mpfr_set4@@Base+0x164>
   23ca0:	cbz	x15, 23cd0 <mpfr_set4@@Base+0x170>
   23ca4:	cbnz	x16, 23cf0 <mpfr_set4@@Base+0x190>
   23ca8:	ldr	x15, [x1]
   23cac:	tst	x15, x21
   23cb0:	b.ne	23cf0 <mpfr_set4@@Base+0x190>  // b.any
   23cb4:	neg	w19, w19
   23cb8:	cmp	x20, x1
   23cbc:	b.ne	23df0 <mpfr_set4@@Base+0x290>  // b.any
   23cc0:	b	23dfc <mpfr_set4@@Base+0x29c>
   23cc4:	add	w17, w2, w19, lsr #31
   23cc8:	cmp	w17, #0x3
   23ccc:	b.ne	23ce8 <mpfr_set4@@Base+0x188>  // b.any
   23cd0:	orr	x8, x16, x15
   23cd4:	cmp	x8, #0x0
   23cd8:	csneg	w19, wzr, w19, eq  // eq = none
   23cdc:	cmp	x20, x1
   23ce0:	b.ne	23df0 <mpfr_set4@@Base+0x290>  // b.any
   23ce4:	b	23dfc <mpfr_set4@@Base+0x29c>
   23ce8:	orr	x15, x16, x15
   23cec:	cbz	x15, 23de4 <mpfr_set4@@Base+0x284>
   23cf0:	ldr	x15, [x1]
   23cf4:	adds	x15, x15, x21
   23cf8:	str	x15, [x20]
   23cfc:	b.cc	23e44 <mpfr_set4@@Base+0x2e4>  // b.lo, b.ul, b.last
   23d00:	mov	x17, xzr
   23d04:	mov	x16, xzr
   23d08:	mov	x14, x10
   23d0c:	add	x15, x16, #0x1
   23d10:	cmp	x15, x10
   23d14:	b.gt	23ea8 <mpfr_set4@@Base+0x348>
   23d18:	lsl	x16, x16, #3
   23d1c:	add	x18, x1, x16
   23d20:	ldr	x18, [x18, #8]
   23d24:	add	x16, x20, x16
   23d28:	sub	x17, x17, #0x8
   23d2c:	sub	x14, x14, #0x1
   23d30:	adds	x18, x18, #0x1
   23d34:	str	x18, [x16, #8]
   23d38:	mov	x16, x15
   23d3c:	b.cs	23d0c <mpfr_set4@@Base+0x1ac>  // b.hs, b.nlast
   23d40:	cmp	x1, x20
   23d44:	b.eq	23dfc <mpfr_set4@@Base+0x29c>  // b.none
   23d48:	cmp	x15, x10
   23d4c:	b.ge	23dfc <mpfr_set4@@Base+0x29c>  // b.tcont
   23d50:	sub	x8, x10, x15
   23d54:	cmp	x8, #0x4
   23d58:	add	x16, x15, #0x1
   23d5c:	b.cc	23dc0 <mpfr_set4@@Base+0x260>  // b.lo, b.ul, b.last
   23d60:	sub	x18, x20, x17
   23d64:	add	x0, x18, #0x8
   23d68:	cmp	x0, x13
   23d6c:	sub	x13, x1, x17
   23d70:	b.cs	23d84 <mpfr_set4@@Base+0x224>  // b.hs, b.nlast
   23d74:	add	x12, x20, x12, lsl #3
   23d78:	add	x17, x13, #0x8
   23d7c:	cmp	x17, x12
   23d80:	b.cc	23dc0 <mpfr_set4@@Base+0x260>  // b.lo, b.ul, b.last
   23d84:	and	x14, x14, #0xfffffffffffffffc
   23d88:	and	x17, x8, #0xfffffffffffffffc
   23d8c:	add	x14, x14, x15
   23d90:	add	x12, x18, #0x18
   23d94:	add	x13, x13, #0x18
   23d98:	add	x16, x14, #0x1
   23d9c:	mov	x14, x17
   23da0:	ldp	q0, q1, [x13, #-16]
   23da4:	add	x13, x13, #0x20
   23da8:	subs	x14, x14, #0x4
   23dac:	stp	q0, q1, [x12, #-16]
   23db0:	add	x12, x12, #0x20
   23db4:	b.ne	23da0 <mpfr_set4@@Base+0x240>  // b.any
   23db8:	cmp	x8, x17
   23dbc:	b.eq	23dfc <mpfr_set4@@Base+0x29c>  // b.none
   23dc0:	sub	x8, x16, x10
   23dc4:	add	x10, x20, x16, lsl #3
   23dc8:	add	x9, x11, x9, lsl #3
   23dcc:	ldr	x11, [x9, x8, lsl #3]
   23dd0:	add	x8, x8, #0x1
   23dd4:	cmp	x8, #0x1
   23dd8:	str	x11, [x10], #8
   23ddc:	b.ne	23dcc <mpfr_set4@@Base+0x26c>  // b.any
   23de0:	b	23dfc <mpfr_set4@@Base+0x29c>
   23de4:	mov	w19, wzr
   23de8:	cmp	x20, x1
   23dec:	b.eq	23dfc <mpfr_set4@@Base+0x29c>  // b.none
   23df0:	lsl	x2, x12, #3
   23df4:	mov	x0, x20
   23df8:	bl	ba70 <memcpy@plt>
   23dfc:	ldr	x8, [x20]
   23e00:	neg	x9, x21
   23e04:	and	x8, x8, x9
   23e08:	str	x8, [x20]
   23e0c:	cbz	w19, 23e30 <mpfr_set4@@Base+0x2d0>
   23e10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   23e14:	ldr	x1, [x0, #2640]
   23e18:	add	x0, x0, #0xa50
   23e1c:	blr	x1
   23e20:	mrs	x8, tpidr_el0
   23e24:	ldr	w9, [x8, x0]
   23e28:	orr	w9, w9, #0x8
   23e2c:	str	w9, [x8, x0]
   23e30:	mov	w0, w19
   23e34:	ldp	x20, x19, [sp, #32]
   23e38:	ldr	x21, [sp, #16]
   23e3c:	ldp	x29, x30, [sp], #48
   23e40:	ret
   23e44:	cmp	x14, #0x41
   23e48:	b.lt	23dfc <mpfr_set4@@Base+0x29c>  // b.tstop
   23e4c:	cmp	x1, x20
   23e50:	b.eq	23dfc <mpfr_set4@@Base+0x29c>  // b.none
   23e54:	cmp	x10, #0x4
   23e58:	b.cc	23e80 <mpfr_set4@@Base+0x320>  // b.lo, b.ul, b.last
   23e5c:	add	x8, x20, #0x8
   23e60:	sub	x14, x9, x10
   23e64:	cmp	x8, x13
   23e68:	add	x8, x11, x14, lsl #3
   23e6c:	b.cs	23ef8 <mpfr_set4@@Base+0x398>  // b.hs, b.nlast
   23e70:	add	x12, x20, x12, lsl #3
   23e74:	add	x13, x8, #0x8
   23e78:	cmp	x13, x12
   23e7c:	b.cs	23ef8 <mpfr_set4@@Base+0x398>  // b.hs, b.nlast
   23e80:	mov	w8, #0x1                   	// #1
   23e84:	sub	x10, x8, x10
   23e88:	add	x8, x20, x8, lsl #3
   23e8c:	add	x9, x11, x9, lsl #3
   23e90:	ldr	x11, [x9, x10, lsl #3]
   23e94:	add	x10, x10, #0x1
   23e98:	cmp	x10, #0x1
   23e9c:	str	x11, [x8], #8
   23ea0:	b.ne	23e90 <mpfr_set4@@Base+0x330>  // b.any
   23ea4:	b	23dfc <mpfr_set4@@Base+0x29c>
   23ea8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   23eac:	str	x9, [x20, x10, lsl #3]
   23eb0:	ldr	x9, [x8, #16]
   23eb4:	add	x10, x9, #0x1
   23eb8:	str	x10, [x8, #16]
   23ebc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   23ec0:	ldr	x1, [x0, #2608]
   23ec4:	add	x0, x0, #0xa30
   23ec8:	blr	x1
   23ecc:	mrs	x10, tpidr_el0
   23ed0:	ldr	x10, [x10, x0]
   23ed4:	cmp	x9, x10
   23ed8:	b.lt	23dfc <mpfr_set4@@Base+0x29c>  // b.tstop
   23edc:	mov	w1, w2
   23ee0:	mov	w2, w19
   23ee4:	ldp	x20, x19, [sp, #32]
   23ee8:	ldr	x21, [sp, #16]
   23eec:	mov	x0, x8
   23ef0:	ldp	x29, x30, [sp], #48
   23ef4:	b	bf90 <mpfr_overflow@plt>
   23ef8:	and	x12, x10, #0xfffffffffffffffc
   23efc:	add	x13, x8, #0x18
   23f00:	orr	x8, x12, #0x1
   23f04:	add	x14, x20, #0x18
   23f08:	mov	x15, x12
   23f0c:	ldp	q0, q1, [x13, #-16]
   23f10:	add	x13, x13, #0x20
   23f14:	subs	x15, x15, #0x4
   23f18:	stp	q0, q1, [x14, #-16]
   23f1c:	add	x14, x14, #0x20
   23f20:	b.ne	23f0c <mpfr_set4@@Base+0x3ac>  // b.any
   23f24:	cmp	x10, x12
   23f28:	b.eq	23dfc <mpfr_set4@@Base+0x29c>  // b.none
   23f2c:	b	23e84 <mpfr_set4@@Base+0x324>
   23f30:	cmp	x9, x10
   23f34:	b.ne	23bdc <mpfr_set4@@Base+0x7c>  // b.any
   23f38:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   23f3c:	ldr	x1, [x0, #2640]
   23f40:	add	x0, x0, #0xa50
   23f44:	blr	x1
   23f48:	mrs	x8, tpidr_el0
   23f4c:	ldr	w9, [x8, x0]
   23f50:	mov	w19, wzr
   23f54:	orr	w9, w9, #0x4
   23f58:	b	23e2c <mpfr_set4@@Base+0x2cc>
   23f5c:	ldr	x1, [x1, #24]
   23f60:	sub	x19, x12, x17
   23f64:	add	x0, x20, x19, lsl #3
   23f68:	cmp	x0, x1
   23f6c:	b.eq	23f78 <mpfr_set4@@Base+0x418>  // b.none
   23f70:	lsl	x2, x17, #3
   23f74:	bl	ba70 <memcpy@plt>
   23f78:	lsl	x2, x19, #3
   23f7c:	mov	x0, x20
   23f80:	mov	w1, wzr
   23f84:	bl	c150 <memset@plt>
   23f88:	b	23bdc <mpfr_set4@@Base+0x7c>
   23f8c:	ldur	x16, [x1, #-8]
   23f90:	and	x15, x16, #0x8000000000000000
   23f94:	and	x16, x16, #0x7fffffffffffffff
   23f98:	cbz	w2, 23fa8 <mpfr_set4@@Base+0x448>
   23f9c:	cbz	x15, 23fa8 <mpfr_set4@@Base+0x448>
   23fa0:	mov	w21, #0x1                   	// #1
   23fa4:	b	23c8c <mpfr_set4@@Base+0x12c>
   23fa8:	mov	w21, #0x1                   	// #1
   23fac:	cbnz	x16, 23c8c <mpfr_set4@@Base+0x12c>
   23fb0:	sub	x17, x9, x12
   23fb4:	cbz	x17, 23c8c <mpfr_set4@@Base+0x12c>
   23fb8:	sub	x16, x9, x10
   23fbc:	sub	x17, x16, #0x2
   23fc0:	mov	w21, #0x1                   	// #1
   23fc4:	ldr	x16, [x11, x17, lsl #3]
   23fc8:	subs	x17, x17, #0x1
   23fcc:	cset	w18, cs  // cs = hs, nlast
   23fd0:	cbnz	x16, 23c8c <mpfr_set4@@Base+0x12c>
   23fd4:	tbnz	w18, #0, 23fc4 <mpfr_set4@@Base+0x464>
   23fd8:	b	23c8c <mpfr_set4@@Base+0x12c>

0000000000023fdc <mpfr_set@@Base>:
   23fdc:	ldr	w3, [x1, #8]
   23fe0:	b	c690 <mpfr_set4@plt>

0000000000023fe4 <mpfr_abs@@Base>:
   23fe4:	mov	w3, #0x1                   	// #1
   23fe8:	b	c690 <mpfr_set4@plt>

0000000000023fec <mpfr_set_1_2@@Base>:
   23fec:	stp	x29, x30, [sp, #-64]!
   23ff0:	stp	x24, x23, [sp, #16]
   23ff4:	stp	x22, x21, [sp, #32]
   23ff8:	stp	x20, x19, [sp, #48]
   23ffc:	ldr	x8, [x1, #16]
   24000:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   24004:	mov	w20, w3
   24008:	mov	w21, w2
   2400c:	mov	x22, x1
   24010:	cmp	x8, x9
   24014:	mov	x19, x0
   24018:	mov	x29, sp
   2401c:	b.le	2422c <mpfr_set_1_2@@Base+0x240>
   24020:	ldr	x24, [x19]
   24024:	cmp	x24, #0x3f
   24028:	b.gt	24070 <mpfr_set_1_2@@Base+0x84>
   2402c:	ldr	x11, [x22]
   24030:	mov	w9, #0x40                  	// #64
   24034:	ldr	x8, [x19, #24]
   24038:	ldr	x10, [x22, #24]
   2403c:	sub	x9, x9, x24
   24040:	mov	w12, #0x1                   	// #1
   24044:	lsl	x9, x12, x9
   24048:	cmp	x11, #0x40
   2404c:	sub	x12, x9, #0x1
   24050:	b.gt	240cc <mpfr_set_1_2@@Base+0xe0>
   24054:	ldr	x11, [x10]
   24058:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   2405c:	lsr	x10, x10, x24
   24060:	and	x10, x11, x10
   24064:	and	x12, x11, x12
   24068:	eor	x12, x12, x10
   2406c:	b	240e8 <mpfr_set_1_2@@Base+0xfc>
   24070:	ldr	w3, [x22, #8]
   24074:	mov	x0, x19
   24078:	mov	x1, x22
   2407c:	mov	w2, w21
   24080:	bl	c690 <mpfr_set4@plt>
   24084:	mov	w23, w0
   24088:	cbnz	w21, 240c0 <mpfr_set_1_2@@Base+0xd4>
   2408c:	mul	w8, w23, w20
   24090:	cmp	w8, #0x1
   24094:	b.lt	240c0 <mpfr_set_1_2@@Base+0xd4>  // b.tstop
   24098:	mov	x0, x22
   2409c:	bl	c970 <mpfr_min_prec@plt>
   240a0:	add	x8, x24, #0x1
   240a4:	cmp	x0, x8
   240a8:	b.ne	240c0 <mpfr_set_1_2@@Base+0xd4>  // b.any
   240ac:	mov	x0, x19
   240b0:	cmp	w20, #0x1
   240b4:	b.lt	2420c <mpfr_set_1_2@@Base+0x220>  // b.tstop
   240b8:	bl	be20 <mpfr_nextbelow@plt>
   240bc:	b	24210 <mpfr_set_1_2@@Base+0x224>
   240c0:	cmp	w23, #0x0
   240c4:	csel	w2, w20, w23, eq  // eq = none
   240c8:	b	24214 <mpfr_set_1_2@@Base+0x228>
   240cc:	ldp	x14, x11, [x10]
   240d0:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   240d4:	lsr	x10, x13, x24
   240d8:	and	x10, x11, x10
   240dc:	and	x12, x11, x12
   240e0:	eor	x12, x12, x10
   240e4:	orr	x12, x12, x14
   240e8:	neg	x13, x9
   240ec:	and	x11, x11, x13
   240f0:	str	x11, [x8]
   240f4:	ldr	w2, [x22, #8]
   240f8:	str	w2, [x19, #8]
   240fc:	ldr	x13, [x22, #16]
   24100:	mul	w11, w2, w20
   24104:	cmp	w11, #0x1
   24108:	str	x13, [x19, #16]
   2410c:	b.lt	2418c <mpfr_set_1_2@@Base+0x1a0>  // b.tstop
   24110:	cmp	x10, #0x0
   24114:	cset	w13, ne  // ne = any
   24118:	cmp	x12, #0x0
   2411c:	cset	w14, eq  // eq = none
   24120:	tst	w14, w13
   24124:	csinc	x12, x12, xzr, eq  // eq = none
   24128:	csel	x10, xzr, x10, ne  // ne = any
   2412c:	orr	x13, x10, x12
   24130:	cbz	x13, 2419c <mpfr_set_1_2@@Base+0x1b0>
   24134:	cmp	w21, #0x1
   24138:	b.eq	241e0 <mpfr_set_1_2@@Base+0x1f4>  // b.none
   2413c:	cbnz	w21, 241d4 <mpfr_set_1_2@@Base+0x1e8>
   24140:	cbz	x10, 241e0 <mpfr_set_1_2@@Base+0x1f4>
   24144:	cbnz	x12, 24154 <mpfr_set_1_2@@Base+0x168>
   24148:	ldr	x10, [x8]
   2414c:	tst	x10, x9
   24150:	b.eq	241e0 <mpfr_set_1_2@@Base+0x1f4>  // b.none
   24154:	ldr	x10, [x8]
   24158:	adds	x9, x10, x9
   2415c:	str	x9, [x8]
   24160:	b.eq	24248 <mpfr_set_1_2@@Base+0x25c>  // b.none
   24164:	cbz	w2, 24214 <mpfr_set_1_2@@Base+0x228>
   24168:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2416c:	ldr	x1, [x0, #2640]
   24170:	add	x0, x0, #0xa50
   24174:	blr	x1
   24178:	mrs	x8, tpidr_el0
   2417c:	ldr	w9, [x8, x0]
   24180:	orr	w9, w9, #0x8
   24184:	str	w9, [x8, x0]
   24188:	b	24214 <mpfr_set_1_2@@Base+0x228>
   2418c:	sxtw	x13, w20
   24190:	orr	x12, x12, x13
   24194:	orr	x13, x10, x12
   24198:	cbnz	x13, 24134 <mpfr_set_1_2@@Base+0x148>
   2419c:	mov	w2, wzr
   241a0:	cbz	w20, 24214 <mpfr_set_1_2@@Base+0x228>
   241a4:	cmp	w11, #0x1
   241a8:	b.lt	24214 <mpfr_set_1_2@@Base+0x228>  // b.tstop
   241ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   241b0:	ldr	x1, [x0, #2640]
   241b4:	add	x0, x0, #0xa50
   241b8:	blr	x1
   241bc:	mrs	x8, tpidr_el0
   241c0:	ldr	w9, [x8, x0]
   241c4:	mov	w2, w20
   241c8:	orr	w9, w9, #0x8
   241cc:	str	w9, [x8, x0]
   241d0:	b	24214 <mpfr_set_1_2@@Base+0x228>
   241d4:	add	w10, w21, w2, lsr #31
   241d8:	cmp	w10, #0x3
   241dc:	b.ne	24154 <mpfr_set_1_2@@Base+0x168>  // b.any
   241e0:	cbz	w2, 24214 <mpfr_set_1_2@@Base+0x228>
   241e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   241e8:	ldr	x1, [x0, #2640]
   241ec:	add	x0, x0, #0xa50
   241f0:	blr	x1
   241f4:	mrs	x8, tpidr_el0
   241f8:	ldr	w9, [x8, x0]
   241fc:	neg	w2, w2
   24200:	orr	w9, w9, #0x8
   24204:	str	w9, [x8, x0]
   24208:	b	24214 <mpfr_set_1_2@@Base+0x228>
   2420c:	bl	c160 <mpfr_nextabove@plt>
   24210:	neg	w2, w20
   24214:	ldp	x20, x19, [sp, #48]
   24218:	ldp	x22, x21, [sp, #32]
   2421c:	ldp	x24, x23, [sp, #16]
   24220:	mov	w0, w2
   24224:	ldp	x29, x30, [sp], #64
   24228:	ret
   2422c:	ldr	w3, [x22, #8]
   24230:	mov	x0, x19
   24234:	mov	x1, x22
   24238:	mov	w2, w21
   2423c:	bl	c690 <mpfr_set4@plt>
   24240:	mov	w2, w20
   24244:	b	24214 <mpfr_set_1_2@@Base+0x228>
   24248:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2424c:	str	x9, [x8]
   24250:	ldr	x8, [x19, #16]
   24254:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24258:	ldr	x1, [x0, #2608]
   2425c:	add	x0, x0, #0xa30
   24260:	blr	x1
   24264:	mrs	x9, tpidr_el0
   24268:	ldr	x9, [x9, x0]
   2426c:	cmp	x8, x9
   24270:	b.ge	24284 <mpfr_set_1_2@@Base+0x298>  // b.tcont
   24274:	add	x8, x8, #0x1
   24278:	str	x8, [x19, #16]
   2427c:	cbnz	w2, 24168 <mpfr_set_1_2@@Base+0x17c>
   24280:	b	24214 <mpfr_set_1_2@@Base+0x228>
   24284:	mov	x0, x19
   24288:	mov	w1, w21
   2428c:	ldp	x20, x19, [sp, #48]
   24290:	ldp	x22, x21, [sp, #32]
   24294:	ldp	x24, x23, [sp, #16]
   24298:	ldp	x29, x30, [sp], #64
   2429c:	b	bf90 <mpfr_overflow@plt>

00000000000242a0 <mpfr_setmax@@Base>:
   242a0:	stp	x29, x30, [sp, #-16]!
   242a4:	ldr	x10, [x0]
   242a8:	ldr	x8, [x0, #24]
   242ac:	mov	x11, #0xffffffffffffffff    	// #-1
   242b0:	mov	x29, sp
   242b4:	sub	x9, x10, #0x1
   242b8:	add	x12, x10, #0x3e
   242bc:	cmp	x9, #0x0
   242c0:	csel	x9, x12, x9, lt  // lt = tstop
   242c4:	asr	x9, x9, #6
   242c8:	lsl	w12, w9, #6
   242cc:	sub	w12, w12, w10
   242d0:	lsl	x11, x11, x12
   242d4:	cmp	x10, #0x41
   242d8:	str	x1, [x0, #16]
   242dc:	str	x11, [x8]
   242e0:	b.lt	242fc <mpfr_setmax@@Base+0x5c>  // b.tstop
   242e4:	cmp	x9, #0x1
   242e8:	add	x0, x8, #0x8
   242ec:	csinc	x8, x9, xzr, gt
   242f0:	lsl	x2, x8, #3
   242f4:	mov	w1, #0xff                  	// #255
   242f8:	bl	c150 <memset@plt>
   242fc:	ldp	x29, x30, [sp], #16
   24300:	ret

0000000000024304 <mpfr_setmin@@Base>:
   24304:	ldr	x8, [x0]
   24308:	str	x1, [x0, #16]
   2430c:	ldr	x0, [x0, #24]
   24310:	mov	w1, wzr
   24314:	sub	x9, x8, #0x1
   24318:	add	x8, x8, #0x3e
   2431c:	cmp	x9, #0x0
   24320:	csel	x8, x8, x9, lt  // lt = tstop
   24324:	asr	x8, x8, #6
   24328:	lsl	x2, x8, #3
   2432c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   24330:	str	x8, [x0, x2]
   24334:	b	c150 <memset@plt>

0000000000024338 <mpfr_set_d@@Base>:
   24338:	sub	sp, sp, #0x70
   2433c:	stp	x20, x19, [sp, #96]
   24340:	fcmp	d0, d0
   24344:	mov	x19, x0
   24348:	stp	x29, x30, [sp, #48]
   2434c:	stp	x24, x23, [sp, #64]
   24350:	stp	x22, x21, [sp, #80]
   24354:	add	x29, sp, #0x30
   24358:	b.vs	244d0 <mpfr_set_d@@Base+0x198>
   2435c:	fcmp	d0, #0.0
   24360:	b.eq	24504 <mpfr_set_d@@Base+0x1cc>  // b.none
   24364:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
   24368:	fmov	d1, x8
   2436c:	fcmp	d0, d1
   24370:	b.gt	24528 <mpfr_set_d@@Base+0x1f0>
   24374:	mov	x8, #0xffefffffffffffff    	// #-4503599627370497
   24378:	fmov	d1, x8
   2437c:	fcmp	d0, d1
   24380:	b.mi	24528 <mpfr_set_d@@Base+0x1f0>  // b.first
   24384:	mov	w20, w1
   24388:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2438c:	ldr	x1, [x0, #2640]
   24390:	add	x0, x0, #0xa50
   24394:	blr	x1
   24398:	mrs	x21, tpidr_el0
   2439c:	ldr	w22, [x21, x0]
   243a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   243a4:	ldr	x1, [x0, #2576]
   243a8:	add	x0, x0, #0xa10
   243ac:	blr	x1
   243b0:	ldr	x23, [x21, x0]
   243b4:	mov	x8, x0
   243b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   243bc:	ldr	x1, [x0, #2608]
   243c0:	add	x0, x0, #0xa30
   243c4:	blr	x1
   243c8:	ldr	x24, [x21, x0]
   243cc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   243d0:	str	x9, [x21, x8]
   243d4:	fmov	x8, d0
   243d8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   243dc:	add	x11, sp, #0x8
   243e0:	mov	w12, #0x35                  	// #53
   243e4:	ubfx	x9, x8, #52, #11
   243e8:	lsl	x8, x8, #11
   243ec:	str	x10, [x21, x0]
   243f0:	str	x11, [sp, #40]
   243f4:	str	x12, [sp, #16]
   243f8:	cbz	w9, 24408 <mpfr_set_d@@Base+0xd0>
   243fc:	orr	x8, x8, #0x8000000000000000
   24400:	sub	w9, w9, #0x3fe
   24404:	b	2441c <mpfr_set_d@@Base+0xe4>
   24408:	and	x8, x8, #0x7ffffffffffff800
   2440c:	mov	w9, #0xfffffc03            	// #-1021
   24410:	clz	x10, x8
   24414:	lsl	x8, x8, x10
   24418:	sub	w9, w9, w10
   2441c:	str	x8, [sp, #8]
   24420:	sxtw	x8, w9
   24424:	fcmp	d0, #0.0
   24428:	mov	w9, #0xffffffff            	// #-1
   2442c:	csinc	w3, w9, wzr, mi  // mi = first
   24430:	add	x1, sp, #0x10
   24434:	mov	x0, x19
   24438:	mov	w2, w20
   2443c:	str	x8, [sp, #32]
   24440:	bl	c690 <mpfr_set4@plt>
   24444:	mov	w8, w0
   24448:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2444c:	ldr	x1, [x0, #2640]
   24450:	add	x0, x0, #0xa50
   24454:	blr	x1
   24458:	str	w22, [x21, x0]
   2445c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24460:	ldr	x1, [x0, #2576]
   24464:	add	x0, x0, #0xa10
   24468:	blr	x1
   2446c:	str	x23, [x21, x0]
   24470:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24474:	ldr	x1, [x0, #2608]
   24478:	add	x0, x0, #0xa30
   2447c:	blr	x1
   24480:	str	x24, [x21, x0]
   24484:	ldr	x9, [x19, #16]
   24488:	cmp	x9, x24
   2448c:	b.gt	24548 <mpfr_set_d@@Base+0x210>
   24490:	cmp	x9, x23
   24494:	b.lt	24548 <mpfr_set_d@@Base+0x210>  // b.tstop
   24498:	cbz	w8, 244b4 <mpfr_set_d@@Base+0x17c>
   2449c:	orr	w9, w22, #0x8
   244a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   244a4:	ldr	x1, [x0, #2640]
   244a8:	add	x0, x0, #0xa50
   244ac:	blr	x1
   244b0:	str	w9, [x21, x0]
   244b4:	ldp	x20, x19, [sp, #96]
   244b8:	ldp	x22, x21, [sp, #80]
   244bc:	ldp	x24, x23, [sp, #64]
   244c0:	ldp	x29, x30, [sp, #48]
   244c4:	mov	w0, w8
   244c8:	add	sp, sp, #0x70
   244cc:	ret
   244d0:	mov	x8, #0x2                   	// #2
   244d4:	movk	x8, #0x8000, lsl #48
   244d8:	str	x8, [x19, #16]
   244dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   244e0:	ldr	x1, [x0, #2640]
   244e4:	add	x0, x0, #0xa50
   244e8:	blr	x1
   244ec:	mrs	x9, tpidr_el0
   244f0:	ldr	w10, [x9, x0]
   244f4:	mov	w8, wzr
   244f8:	orr	w10, w10, #0x4
   244fc:	str	w10, [x9, x0]
   24500:	b	244b4 <mpfr_set_d@@Base+0x17c>
   24504:	fmov	x10, d0
   24508:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2450c:	cmp	x10, #0x0
   24510:	mov	w10, #0xffffffff            	// #-1
   24514:	str	x9, [x19, #16]
   24518:	cneg	w9, w10, ge  // ge = tcont
   2451c:	mov	w8, wzr
   24520:	str	w9, [x19, #8]
   24524:	b	244b4 <mpfr_set_d@@Base+0x17c>
   24528:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2452c:	fcmp	d0, #0.0
   24530:	mov	w10, #0xffffffff            	// #-1
   24534:	str	x9, [x19, #16]
   24538:	csinc	w9, w10, wzr, le
   2453c:	mov	w8, wzr
   24540:	str	w9, [x19, #8]
   24544:	b	244b4 <mpfr_set_d@@Base+0x17c>
   24548:	mov	x0, x19
   2454c:	mov	w1, w8
   24550:	mov	w2, w20
   24554:	bl	cb10 <mpfr_check_range@plt>
   24558:	mov	w8, w0
   2455c:	b	244b4 <mpfr_set_d@@Base+0x17c>

0000000000024560 <mpfr_set_default_prec@@Base>:
   24560:	stp	x29, x30, [sp, #-32]!
   24564:	mov	x9, #0xfffffffffffffeff    	// #-257
   24568:	sub	x8, x0, #0x1
   2456c:	movk	x9, #0x7fff, lsl #48
   24570:	str	x19, [sp, #16]
   24574:	mov	x19, x0
   24578:	cmp	x8, x9
   2457c:	mov	x29, sp
   24580:	b.cs	245a8 <mpfr_set_default_prec@@Base+0x48>  // b.hs, b.nlast
   24584:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24588:	ldr	x1, [x0, #2592]
   2458c:	add	x0, x0, #0xa20
   24590:	blr	x1
   24594:	mrs	x8, tpidr_el0
   24598:	str	x19, [x8, x0]
   2459c:	ldr	x19, [sp, #16]
   245a0:	ldp	x29, x30, [sp], #32
   245a4:	ret
   245a8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   245ac:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   245b0:	add	x0, x0, #0xc56
   245b4:	add	x2, x2, #0xbfe
   245b8:	mov	w1, #0x20                  	// #32
   245bc:	bl	cb20 <mpfr_assert_fail@plt>
   245c0:	b	24584 <mpfr_set_default_prec@@Base+0x24>

00000000000245c4 <mpfr_get_default_prec@@Base>:
   245c4:	stp	x29, x30, [sp, #-16]!
   245c8:	mov	x29, sp
   245cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   245d0:	ldr	x1, [x0, #2592]
   245d4:	add	x0, x0, #0xa20
   245d8:	blr	x1
   245dc:	mrs	x8, tpidr_el0
   245e0:	ldr	x0, [x8, x0]
   245e4:	ldp	x29, x30, [sp], #16
   245e8:	ret

00000000000245ec <mpfr_set_exp@@Base>:
   245ec:	stp	x29, x30, [sp, #-16]!
   245f0:	ldr	x13, [x0, #16]
   245f4:	mov	x29, sp
   245f8:	mov	x8, x0
   245fc:	mov	x9, x1
   24600:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24604:	ldr	x1, [x0, #2576]
   24608:	add	x0, x0, #0xa10
   2460c:	blr	x1
   24610:	mrs	x11, tpidr_el0
   24614:	ldr	x12, [x11, x0]
   24618:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2461c:	ldr	x1, [x0, #2608]
   24620:	add	x0, x0, #0xa30
   24624:	blr	x1
   24628:	mov	x14, #0x4                   	// #4
   2462c:	movk	x14, #0x8000, lsl #48
   24630:	mov	x10, x0
   24634:	cmp	x13, x14
   24638:	mov	w0, #0x1                   	// #1
   2463c:	b.lt	2465c <mpfr_set_exp@@Base+0x70>  // b.tstop
   24640:	cmp	x12, x9
   24644:	b.gt	2465c <mpfr_set_exp@@Base+0x70>
   24648:	ldr	x10, [x11, x10]
   2464c:	cmp	x10, x9
   24650:	b.lt	2465c <mpfr_set_exp@@Base+0x70>  // b.tstop
   24654:	mov	w0, wzr
   24658:	str	x9, [x8, #16]
   2465c:	ldp	x29, x30, [sp], #16
   24660:	ret

0000000000024664 <mpfr_set_default_rounding_mode@@Base>:
   24664:	cmp	w0, #0x5
   24668:	b.hi	24694 <mpfr_set_default_rounding_mode@@Base+0x30>  // b.pmore
   2466c:	stp	x29, x30, [sp, #-16]!
   24670:	mov	x29, sp
   24674:	mov	w8, w0
   24678:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2467c:	ldr	x1, [x0, #2704]
   24680:	add	x0, x0, #0xa90
   24684:	blr	x1
   24688:	mrs	x9, tpidr_el0
   2468c:	str	w8, [x9, x0]
   24690:	ldp	x29, x30, [sp], #16
   24694:	ret

0000000000024698 <mpfr_get_default_rounding_mode@@Base>:
   24698:	stp	x29, x30, [sp, #-16]!
   2469c:	mov	x29, sp
   246a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   246a4:	ldr	x1, [x0, #2704]
   246a8:	add	x0, x0, #0xa90
   246ac:	blr	x1
   246b0:	mrs	x8, tpidr_el0
   246b4:	ldr	w0, [x8, x0]
   246b8:	ldp	x29, x30, [sp], #16
   246bc:	ret

00000000000246c0 <mpfr_set_f@@Base>:
   246c0:	stp	x29, x30, [sp, #-96]!
   246c4:	stp	x28, x27, [sp, #16]
   246c8:	stp	x26, x25, [sp, #32]
   246cc:	stp	x24, x23, [sp, #48]
   246d0:	stp	x22, x21, [sp, #64]
   246d4:	stp	x20, x19, [sp, #80]
   246d8:	mov	x29, sp
   246dc:	sub	sp, sp, #0x20
   246e0:	ldr	w8, [x1, #4]
   246e4:	mov	x20, x0
   246e8:	cmp	w8, #0x0
   246ec:	cneg	w24, w8, mi  // mi = first
   246f0:	cbz	w24, 24788 <mpfr_set_f@@Base+0xc8>
   246f4:	ldr	w9, [x20, #8]
   246f8:	mov	w19, w2
   246fc:	mov	x21, x1
   24700:	mul	w8, w9, w8
   24704:	tbz	w8, #31, 24710 <mpfr_set_f@@Base+0x50>
   24708:	neg	w8, w9
   2470c:	str	w8, [x20, #8]
   24710:	ldr	x25, [x21, #16]
   24714:	ldr	x8, [x20]
   24718:	ldr	x23, [x20, #24]
   2471c:	add	x10, x25, x24, lsl #3
   24720:	sub	x9, x8, #0x1
   24724:	ldur	x10, [x10, #-8]
   24728:	add	x8, x8, #0x3e
   2472c:	cmp	x9, #0x0
   24730:	csel	x8, x8, x9, lt  // lt = tstop
   24734:	asr	x26, x8, #6
   24738:	cmp	x26, x24
   2473c:	clz	x22, x10
   24740:	b.ge	247a0 <mpfr_set_f@@Base+0xe0>  // b.tcont
   24744:	lsl	x8, x24, #6
   24748:	cmp	w24, #0x800
   2474c:	lsl	x28, x24, #3
   24750:	stp	x8, xzr, [x29, #-24]
   24754:	b.hi	247f8 <mpfr_set_f@@Base+0x138>  // b.pmore
   24758:	add	x9, x28, #0xf
   2475c:	mov	x8, sp
   24760:	and	x9, x9, #0xffffffff0
   24764:	sub	x27, x8, x9
   24768:	mov	sp, x27
   2476c:	cbz	w22, 2480c <mpfr_set_f@@Base+0x14c>
   24770:	mov	x0, x27
   24774:	mov	x1, x25
   24778:	mov	x2, x24
   2477c:	mov	w3, w22
   24780:	bl	bd10 <__gmpn_lshift@plt>
   24784:	b	24824 <mpfr_set_f@@Base+0x164>
   24788:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2478c:	mov	w10, #0x1                   	// #1
   24790:	mov	w8, wzr
   24794:	str	x9, [x20, #16]
   24798:	str	w10, [x20, #8]
   2479c:	b	24908 <mpfr_set_f@@Base+0x248>
   247a0:	add	x26, x26, #0x1
   247a4:	add	x8, x23, x26, lsl #3
   247a8:	sub	x0, x8, x24, lsl #3
   247ac:	cbz	w22, 247c4 <mpfr_set_f@@Base+0x104>
   247b0:	mov	x1, x25
   247b4:	mov	x2, x24
   247b8:	mov	w3, w22
   247bc:	bl	bd10 <__gmpn_lshift@plt>
   247c0:	b	247d8 <mpfr_set_f@@Base+0x118>
   247c4:	cmp	x0, x25
   247c8:	b.eq	247d8 <mpfr_set_f@@Base+0x118>  // b.none
   247cc:	lsl	x2, x24, #3
   247d0:	mov	x1, x25
   247d4:	bl	ba70 <memcpy@plt>
   247d8:	sub	x8, x26, x24
   247dc:	lsl	x2, x8, #3
   247e0:	mov	x0, x23
   247e4:	mov	w1, wzr
   247e8:	bl	c150 <memset@plt>
   247ec:	mov	x8, xzr
   247f0:	stur	wzr, [x29, #-4]
   247f4:	b	2485c <mpfr_set_f@@Base+0x19c>
   247f8:	sub	x0, x29, #0x10
   247fc:	mov	x1, x28
   24800:	bl	be10 <mpfr_tmp_allocate@plt>
   24804:	mov	x27, x0
   24808:	cbnz	w22, 24770 <mpfr_set_f@@Base+0xb0>
   2480c:	cmp	x25, x27
   24810:	b.eq	24824 <mpfr_set_f@@Base+0x164>  // b.none
   24814:	mov	x0, x27
   24818:	mov	x1, x25
   2481c:	mov	x2, x28
   24820:	bl	ba70 <memcpy@plt>
   24824:	ldr	w8, [x21, #4]
   24828:	ldr	x4, [x20]
   2482c:	ldur	x2, [x29, #-24]
   24830:	sub	x6, x29, #0x4
   24834:	lsr	w3, w8, #31
   24838:	mov	x0, x23
   2483c:	mov	x1, x27
   24840:	mov	w5, w19
   24844:	bl	ca00 <mpfr_round_raw@plt>
   24848:	mov	w24, w0
   2484c:	cbnz	w0, 2492c <mpfr_set_f@@Base+0x26c>
   24850:	ldur	x0, [x29, #-16]
   24854:	cbnz	x0, 2493c <mpfr_set_f@@Base+0x27c>
   24858:	sxtw	x8, w24
   2485c:	ldr	x11, [x21, #8]
   24860:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24864:	ldr	x1, [x0, #2608]
   24868:	add	x0, x0, #0xa30
   2486c:	blr	x1
   24870:	mrs	x9, tpidr_el0
   24874:	ldr	x10, [x9, x0]
   24878:	sub	x12, x10, #0x1
   2487c:	add	x13, x10, #0x3e
   24880:	cmp	x12, #0x0
   24884:	csel	x12, x13, x12, lt  // lt = tstop
   24888:	asr	x12, x12, #6
   2488c:	add	x12, x12, #0x1
   24890:	cmp	x11, x12
   24894:	b.le	248b0 <mpfr_set_f@@Base+0x1f0>
   24898:	ldr	w2, [x20, #8]
   2489c:	mov	x0, x20
   248a0:	mov	w1, w19
   248a4:	bl	bf90 <mpfr_overflow@plt>
   248a8:	mov	w8, w0
   248ac:	b	24908 <mpfr_set_f@@Base+0x248>
   248b0:	lsl	x11, x11, #6
   248b4:	sub	x11, x11, x22
   248b8:	add	x11, x11, x8
   248bc:	str	x11, [x20, #16]
   248c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   248c4:	ldr	x1, [x0, #2576]
   248c8:	add	x0, x0, #0xa10
   248cc:	blr	x1
   248d0:	ldur	w8, [x29, #-4]
   248d4:	cmp	x11, x10
   248d8:	b.gt	24944 <mpfr_set_f@@Base+0x284>
   248dc:	ldr	x10, [x9, x0]
   248e0:	cmp	x11, x10
   248e4:	b.lt	24944 <mpfr_set_f@@Base+0x284>  // b.tstop
   248e8:	cbz	w8, 24908 <mpfr_set_f@@Base+0x248>
   248ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   248f0:	ldr	x1, [x0, #2640]
   248f4:	add	x0, x0, #0xa50
   248f8:	blr	x1
   248fc:	ldr	w10, [x9, x0]
   24900:	orr	w10, w10, #0x8
   24904:	str	w10, [x9, x0]
   24908:	mov	w0, w8
   2490c:	mov	sp, x29
   24910:	ldp	x20, x19, [sp, #80]
   24914:	ldp	x22, x21, [sp, #64]
   24918:	ldp	x24, x23, [sp, #48]
   2491c:	ldp	x26, x25, [sp, #32]
   24920:	ldp	x28, x27, [sp, #16]
   24924:	ldp	x29, x30, [sp], #96
   24928:	ret
   2492c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   24930:	str	x8, [x23, x26, lsl #3]
   24934:	ldur	x0, [x29, #-16]
   24938:	cbz	x0, 24858 <mpfr_set_f@@Base+0x198>
   2493c:	bl	c400 <mpfr_tmp_free@plt>
   24940:	b	24858 <mpfr_set_f@@Base+0x198>
   24944:	mov	x0, x20
   24948:	mov	w1, w8
   2494c:	mov	w2, w19
   24950:	bl	cb10 <mpfr_check_range@plt>
   24954:	b	248a8 <mpfr_set_f@@Base+0x1e8>

0000000000024958 <mpfr_set_prec_raw@@Base>:
   24958:	stp	x29, x30, [sp, #-32]!
   2495c:	mov	x9, #0xfffffffffffffeff    	// #-257
   24960:	sub	x8, x1, #0x1
   24964:	movk	x9, #0x7fff, lsl #48
   24968:	stp	x20, x19, [sp, #16]
   2496c:	mov	x19, x1
   24970:	cmp	x8, x9
   24974:	mov	x20, x0
   24978:	mov	x29, sp
   2497c:	b.cs	249a0 <mpfr_set_prec_raw@@Base+0x48>  // b.hs, b.nlast
   24980:	ldr	x8, [x20, #24]
   24984:	ldur	x8, [x8, #-8]
   24988:	cmp	x19, x8, lsl #6
   2498c:	b.gt	249c8 <mpfr_set_prec_raw@@Base+0x70>
   24990:	str	x19, [x20]
   24994:	ldp	x20, x19, [sp, #16]
   24998:	ldp	x29, x30, [sp], #32
   2499c:	ret
   249a0:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   249a4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   249a8:	add	x0, x0, #0xc65
   249ac:	add	x2, x2, #0xc73
   249b0:	mov	w1, #0x1c                  	// #28
   249b4:	bl	cb20 <mpfr_assert_fail@plt>
   249b8:	ldr	x8, [x20, #24]
   249bc:	ldur	x8, [x8, #-8]
   249c0:	cmp	x19, x8, lsl #6
   249c4:	b.le	24990 <mpfr_set_prec_raw@@Base+0x38>
   249c8:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   249cc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   249d0:	add	x0, x0, #0xc65
   249d4:	add	x2, x2, #0xcbb
   249d8:	mov	w1, #0x1d                  	// #29
   249dc:	bl	cb20 <mpfr_assert_fail@plt>
   249e0:	str	x19, [x20]
   249e4:	ldp	x20, x19, [sp, #16]
   249e8:	ldp	x29, x30, [sp], #32
   249ec:	ret

00000000000249f0 <mpfr_set_prec@@Base>:
   249f0:	stp	x29, x30, [sp, #-48]!
   249f4:	stp	x22, x21, [sp, #16]
   249f8:	mov	x21, #0xfffffffffffffeff    	// #-257
   249fc:	movk	x21, #0x7fff, lsl #48
   24a00:	sub	x22, x1, #0x1
   24a04:	stp	x20, x19, [sp, #32]
   24a08:	mov	x19, x1
   24a0c:	cmp	x22, x21
   24a10:	mov	x20, x0
   24a14:	mov	x29, sp
   24a18:	b.cs	24a7c <mpfr_set_prec@@Base+0x8c>  // b.hs, b.nlast
   24a1c:	ldr	x0, [x20, #24]
   24a20:	add	x9, x22, #0x3f
   24a24:	cmp	x22, #0x0
   24a28:	csel	x9, x9, x22, lt  // lt = tstop
   24a2c:	ldr	x8, [x0, #-8]!
   24a30:	asr	x9, x9, #6
   24a34:	cmp	x9, x8
   24a38:	b.lt	24a60 <mpfr_set_prec@@Base+0x70>  // b.tstop
   24a3c:	add	x22, x9, #0x1
   24a40:	lsl	x8, x8, #3
   24a44:	add	x1, x8, #0x8
   24a48:	lsl	x8, x22, #3
   24a4c:	add	x2, x8, #0x8
   24a50:	bl	c200 <mpfr_reallocate_func@plt>
   24a54:	add	x8, x0, #0x8
   24a58:	str	x8, [x20, #24]
   24a5c:	str	x22, [x0]
   24a60:	add	x8, x21, #0x103
   24a64:	str	x19, [x20]
   24a68:	str	x8, [x20, #16]
   24a6c:	ldp	x20, x19, [sp, #32]
   24a70:	ldp	x22, x21, [sp, #16]
   24a74:	ldp	x29, x30, [sp], #48
   24a78:	ret
   24a7c:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   24a80:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   24a84:	add	x0, x0, #0xd17
   24a88:	add	x2, x2, #0xc73
   24a8c:	mov	w1, #0x1f                  	// #31
   24a90:	bl	cb20 <mpfr_assert_fail@plt>
   24a94:	b	24a1c <mpfr_set_prec@@Base+0x2c>

0000000000024a98 <mpfr_get_prec@@Base>:
   24a98:	ldr	x0, [x0]
   24a9c:	ret

0000000000024aa0 <mpfr_set_q@@Base>:
   24aa0:	sub	sp, sp, #0xb0
   24aa4:	stp	x29, x30, [sp, #80]
   24aa8:	stp	x28, x27, [sp, #96]
   24aac:	stp	x26, x25, [sp, #112]
   24ab0:	stp	x24, x23, [sp, #128]
   24ab4:	stp	x22, x21, [sp, #144]
   24ab8:	stp	x20, x19, [sp, #160]
   24abc:	ldr	w9, [x1, #4]
   24ac0:	ldr	w8, [x1, #20]
   24ac4:	mov	x19, x0
   24ac8:	add	x29, sp, #0x50
   24acc:	cbz	w9, 24d50 <mpfr_set_q@@Base+0x2b0>
   24ad0:	cbz	w8, 24d6c <mpfr_set_q@@Base+0x2cc>
   24ad4:	mov	x21, x1
   24ad8:	str	w2, [sp, #12]
   24adc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24ae0:	ldr	x1, [x0, #2640]
   24ae4:	add	x0, x0, #0xa50
   24ae8:	blr	x1
   24aec:	mrs	x26, tpidr_el0
   24af0:	ldr	w12, [x26, x0]
   24af4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24af8:	ldr	x1, [x0, #2576]
   24afc:	add	x0, x0, #0xa10
   24b00:	blr	x1
   24b04:	ldr	x13, [x26, x0]
   24b08:	mov	x8, x0
   24b0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24b10:	ldr	x1, [x0, #2608]
   24b14:	add	x0, x0, #0xa30
   24b18:	blr	x1
   24b1c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   24b20:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   24b24:	ldr	x27, [x26, x0]
   24b28:	str	x10, [x26, x8]
   24b2c:	str	x11, [x26, x0]
   24b30:	ldr	x23, [x21, #8]
   24b34:	cmp	w9, #0x0
   24b38:	cneg	w20, w9, mi  // mi = first
   24b3c:	mov	x24, x20
   24b40:	ldr	x8, [x23]
   24b44:	str	w12, [sp, #8]
   24b48:	str	x13, [sp]
   24b4c:	cbnz	x8, 24b5c <mpfr_set_q@@Base+0xbc>
   24b50:	ldr	x8, [x23, #8]!
   24b54:	sub	x24, x24, #0x1
   24b58:	cbz	x8, 24b50 <mpfr_set_q@@Base+0xb0>
   24b5c:	add	x8, x23, x24, lsl #3
   24b60:	ldur	x8, [x8, #-8]
   24b64:	sub	x0, x29, #0x20
   24b68:	clz	x22, x8
   24b6c:	lsl	x8, x24, #6
   24b70:	sub	x8, x8, x22
   24b74:	cmp	x8, #0x1
   24b78:	csinc	x1, x8, xzr, gt
   24b7c:	bl	ca60 <mpfr_init2@plt>
   24b80:	ldur	x0, [x29, #-8]
   24b84:	cbz	w22, 24d8c <mpfr_set_q@@Base+0x2ec>
   24b88:	mov	x1, x23
   24b8c:	mov	x2, x24
   24b90:	mov	w3, w22
   24b94:	bl	bd10 <__gmpn_lshift@plt>
   24b98:	ldr	w8, [x21, #4]
   24b9c:	stur	xzr, [x29, #-16]
   24ba0:	cmp	w8, #0x0
   24ba4:	cset	w8, ne  // ne = any
   24ba8:	csinv	w8, w8, wzr, ge  // ge = tcont
   24bac:	stur	w8, [x29, #-24]
   24bb0:	ldr	x24, [x21, #24]
   24bb4:	ldr	w8, [x21, #20]
   24bb8:	ldr	x9, [x24]
   24bbc:	cmp	w8, #0x0
   24bc0:	cneg	w28, w8, mi  // mi = first
   24bc4:	mov	x25, x28
   24bc8:	cbnz	x9, 24bd8 <mpfr_set_q@@Base+0x138>
   24bcc:	ldr	x8, [x24, #8]!
   24bd0:	sub	x25, x25, #0x1
   24bd4:	cbz	x8, 24bcc <mpfr_set_q@@Base+0x12c>
   24bd8:	add	x8, x24, x25, lsl #3
   24bdc:	ldur	x8, [x8, #-8]
   24be0:	add	x0, sp, #0x10
   24be4:	clz	x23, x8
   24be8:	lsl	x8, x25, #6
   24bec:	sub	x8, x8, x23
   24bf0:	cmp	x8, #0x1
   24bf4:	csinc	x1, x8, xzr, gt
   24bf8:	bl	ca60 <mpfr_init2@plt>
   24bfc:	ldr	x0, [sp, #40]
   24c00:	cbz	w23, 24da4 <mpfr_set_q@@Base+0x304>
   24c04:	mov	x1, x24
   24c08:	mov	x2, x25
   24c0c:	mov	w3, w23
   24c10:	bl	bd10 <__gmpn_lshift@plt>
   24c14:	ldr	w8, [x21, #20]
   24c18:	sub	x20, x20, x28
   24c1c:	mov	x9, #0x100000000000000     	// #72057594037927936
   24c20:	str	xzr, [sp, #32]
   24c24:	cmp	w8, #0x0
   24c28:	cset	w8, ne  // ne = any
   24c2c:	csinv	w8, w8, wzr, ge  // ge = tcont
   24c30:	cmp	x20, x9
   24c34:	str	w8, [sp, #24]
   24c38:	b.ge	24dbc <mpfr_set_q@@Base+0x31c>  // b.tcont
   24c3c:	ldr	w24, [sp, #12]
   24c40:	mov	x8, #0xfeffffffffffffff    	// #-72057594037927937
   24c44:	cmp	x20, x8
   24c48:	b.le	24e14 <mpfr_set_q@@Base+0x374>
   24c4c:	sub	x1, x29, #0x20
   24c50:	add	x2, sp, #0x10
   24c54:	mov	x0, x19
   24c58:	mov	w3, w24
   24c5c:	bl	c610 <mpfr_div@plt>
   24c60:	lsl	x8, x20, #6
   24c64:	sub	x8, x8, x22
   24c68:	mov	w21, w0
   24c6c:	add	x2, x8, x23
   24c70:	mov	x0, x19
   24c74:	mov	x1, x19
   24c78:	mov	w3, w24
   24c7c:	bl	bbe0 <mpfr_mul_2si@plt>
   24c80:	mov	w8, w0
   24c84:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24c88:	ldr	x1, [x0, #2640]
   24c8c:	add	x0, x0, #0xa50
   24c90:	blr	x1
   24c94:	ldr	w9, [sp, #8]
   24c98:	str	w9, [x26, x0]
   24c9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24ca0:	ldr	x1, [x0, #2576]
   24ca4:	add	x0, x0, #0xa10
   24ca8:	blr	x1
   24cac:	ldr	x10, [sp]
   24cb0:	str	x10, [x26, x0]
   24cb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24cb8:	ldr	x1, [x0, #2608]
   24cbc:	add	x0, x0, #0xa30
   24cc0:	blr	x1
   24cc4:	str	x27, [x26, x0]
   24cc8:	cbnz	w8, 24e70 <mpfr_set_q@@Base+0x3d0>
   24ccc:	ldr	x8, [x19, #16]
   24cd0:	cmp	x8, x27
   24cd4:	b.gt	24e78 <mpfr_set_q@@Base+0x3d8>
   24cd8:	cmp	x8, x10
   24cdc:	b.lt	24e78 <mpfr_set_q@@Base+0x3d8>  // b.tstop
   24ce0:	cbz	w21, 24cfc <mpfr_set_q@@Base+0x25c>
   24ce4:	orr	w8, w9, #0x8
   24ce8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24cec:	ldr	x1, [x0, #2640]
   24cf0:	add	x0, x0, #0xa50
   24cf4:	blr	x1
   24cf8:	str	w8, [x26, x0]
   24cfc:	add	x0, sp, #0x10
   24d00:	bl	c0b0 <mpfr_clear@plt>
   24d04:	sub	x0, x29, #0x20
   24d08:	bl	c0b0 <mpfr_clear@plt>
   24d0c:	cbz	w21, 24d2c <mpfr_set_q@@Base+0x28c>
   24d10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24d14:	ldr	x1, [x0, #2640]
   24d18:	add	x0, x0, #0xa50
   24d1c:	blr	x1
   24d20:	ldr	w8, [x26, x0]
   24d24:	orr	w8, w8, #0x8
   24d28:	str	w8, [x26, x0]
   24d2c:	mov	w0, w21
   24d30:	ldp	x20, x19, [sp, #160]
   24d34:	ldp	x22, x21, [sp, #144]
   24d38:	ldp	x24, x23, [sp, #128]
   24d3c:	ldp	x26, x25, [sp, #112]
   24d40:	ldp	x28, x27, [sp, #96]
   24d44:	ldp	x29, x30, [sp, #80]
   24d48:	add	sp, sp, #0xb0
   24d4c:	ret
   24d50:	cbz	w8, 24e90 <mpfr_set_q@@Base+0x3f0>
   24d54:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   24d58:	mov	w9, #0x1                   	// #1
   24d5c:	mov	w21, wzr
   24d60:	str	x8, [x19, #16]
   24d64:	str	w9, [x19, #8]
   24d68:	b	24d2c <mpfr_set_q@@Base+0x28c>
   24d6c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   24d70:	cmp	w9, #0x0
   24d74:	mov	w9, #0x1                   	// #1
   24d78:	str	x8, [x19, #16]
   24d7c:	cneg	w8, w9, lt  // lt = tstop
   24d80:	mov	w21, wzr
   24d84:	str	w8, [x19, #8]
   24d88:	b	24d2c <mpfr_set_q@@Base+0x28c>
   24d8c:	cmp	x0, x23
   24d90:	b.eq	24b98 <mpfr_set_q@@Base+0xf8>  // b.none
   24d94:	lsl	x2, x24, #3
   24d98:	mov	x1, x23
   24d9c:	bl	ba70 <memcpy@plt>
   24da0:	b	24b98 <mpfr_set_q@@Base+0xf8>
   24da4:	cmp	x0, x24
   24da8:	b.eq	24c14 <mpfr_set_q@@Base+0x174>  // b.none
   24dac:	lsl	x2, x25, #3
   24db0:	mov	x1, x24
   24db4:	bl	ba70 <memcpy@plt>
   24db8:	b	24c14 <mpfr_set_q@@Base+0x174>
   24dbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24dc0:	ldr	x1, [x0, #2640]
   24dc4:	add	x0, x0, #0xa50
   24dc8:	blr	x1
   24dcc:	ldr	w8, [sp, #8]
   24dd0:	str	w8, [x26, x0]
   24dd4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24dd8:	ldr	x1, [x0, #2576]
   24ddc:	add	x0, x0, #0xa10
   24de0:	blr	x1
   24de4:	ldr	x8, [sp]
   24de8:	str	x8, [x26, x0]
   24dec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24df0:	ldr	x1, [x0, #2608]
   24df4:	add	x0, x0, #0xa30
   24df8:	blr	x1
   24dfc:	str	x27, [x26, x0]
   24e00:	ldr	w2, [x19, #8]
   24e04:	ldr	w1, [sp, #12]
   24e08:	mov	x0, x19
   24e0c:	bl	bf90 <mpfr_overflow@plt>
   24e10:	b	24e88 <mpfr_set_q@@Base+0x3e8>
   24e14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24e18:	ldr	x1, [x0, #2640]
   24e1c:	add	x0, x0, #0xa50
   24e20:	blr	x1
   24e24:	ldr	w8, [sp, #8]
   24e28:	str	w8, [x26, x0]
   24e2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24e30:	ldr	x1, [x0, #2576]
   24e34:	add	x0, x0, #0xa10
   24e38:	blr	x1
   24e3c:	ldr	x8, [sp]
   24e40:	str	x8, [x26, x0]
   24e44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24e48:	ldr	x1, [x0, #2608]
   24e4c:	add	x0, x0, #0xa30
   24e50:	blr	x1
   24e54:	str	x27, [x26, x0]
   24e58:	ldr	w2, [x19, #8]
   24e5c:	cmp	w24, #0x0
   24e60:	csinc	w1, w24, wzr, ne  // ne = any
   24e64:	mov	x0, x19
   24e68:	bl	c3c0 <mpfr_underflow@plt>
   24e6c:	b	24e88 <mpfr_set_q@@Base+0x3e8>
   24e70:	mov	w21, w8
   24e74:	b	24cfc <mpfr_set_q@@Base+0x25c>
   24e78:	mov	x0, x19
   24e7c:	mov	w1, w21
   24e80:	mov	w2, w24
   24e84:	bl	cb10 <mpfr_check_range@plt>
   24e88:	mov	w21, w0
   24e8c:	b	24cfc <mpfr_set_q@@Base+0x25c>
   24e90:	mov	x8, #0x2                   	// #2
   24e94:	movk	x8, #0x8000, lsl #48
   24e98:	str	x8, [x19, #16]
   24e9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24ea0:	ldr	x1, [x0, #2640]
   24ea4:	add	x0, x0, #0xa50
   24ea8:	blr	x1
   24eac:	mrs	x8, tpidr_el0
   24eb0:	ldr	w9, [x8, x0]
   24eb4:	mov	w21, wzr
   24eb8:	orr	w9, w9, #0x4
   24ebc:	str	w9, [x8, x0]
   24ec0:	b	24d2c <mpfr_set_q@@Base+0x28c>

0000000000024ec4 <mpfr_set_si@@Base>:
   24ec4:	mov	w3, w2
   24ec8:	mov	x2, xzr
   24ecc:	b	bae0 <mpfr_set_si_2exp@plt>

0000000000024ed0 <mpfr_set_str@@Base>:
   24ed0:	sub	sp, sp, #0x20
   24ed4:	stp	x29, x30, [sp, #16]
   24ed8:	ldrb	w8, [x1]
   24edc:	add	x29, sp, #0x10
   24ee0:	cbz	w8, 24f10 <mpfr_set_str@@Base+0x40>
   24ee4:	mov	w4, w3
   24ee8:	mov	w3, w2
   24eec:	add	x2, sp, #0x8
   24ef0:	bl	bc60 <mpfr_strtofr@plt>
   24ef4:	ldr	x8, [sp, #8]
   24ef8:	ldrb	w8, [x8]
   24efc:	cmp	w8, #0x0
   24f00:	csetm	w0, ne  // ne = any
   24f04:	ldp	x29, x30, [sp, #16]
   24f08:	add	sp, sp, #0x20
   24f0c:	ret
   24f10:	mov	w0, #0xffffffff            	// #-1
   24f14:	ldp	x29, x30, [sp, #16]
   24f18:	add	sp, sp, #0x20
   24f1c:	ret

0000000000024f20 <mpfr_init_set_str@@Base>:
   24f20:	sub	sp, sp, #0x40
   24f24:	stp	x29, x30, [sp, #16]
   24f28:	stp	x22, x21, [sp, #32]
   24f2c:	stp	x20, x19, [sp, #48]
   24f30:	add	x29, sp, #0x10
   24f34:	mov	w19, w3
   24f38:	mov	w20, w2
   24f3c:	mov	x21, x1
   24f40:	mov	x22, x0
   24f44:	bl	bc20 <mpfr_init@plt>
   24f48:	ldrb	w8, [x21]
   24f4c:	cbz	w8, 24f8c <mpfr_init_set_str@@Base+0x6c>
   24f50:	add	x2, sp, #0x8
   24f54:	mov	x0, x22
   24f58:	mov	x1, x21
   24f5c:	mov	w3, w20
   24f60:	mov	w4, w19
   24f64:	bl	bc60 <mpfr_strtofr@plt>
   24f68:	ldr	x8, [sp, #8]
   24f6c:	ldrb	w8, [x8]
   24f70:	cmp	w8, #0x0
   24f74:	csetm	w0, ne  // ne = any
   24f78:	ldp	x20, x19, [sp, #48]
   24f7c:	ldp	x22, x21, [sp, #32]
   24f80:	ldp	x29, x30, [sp, #16]
   24f84:	add	sp, sp, #0x40
   24f88:	ret
   24f8c:	mov	w0, #0xffffffff            	// #-1
   24f90:	b	24f78 <mpfr_init_set_str@@Base+0x58>

0000000000024f94 <mpfr_set_str_binary@@Base>:
   24f94:	stp	x29, x30, [sp, #-16]!
   24f98:	ldrb	w8, [x1]
   24f9c:	mov	x29, sp
   24fa0:	cmp	w8, #0x2d
   24fa4:	b.eq	24fe4 <mpfr_set_str_binary@@Base+0x50>  // b.none
   24fa8:	cmp	w8, #0x4e
   24fac:	b.ne	25010 <mpfr_set_str_binary@@Base+0x7c>  // b.any
   24fb0:	mov	x8, #0x2                   	// #2
   24fb4:	movk	x8, #0x8000, lsl #48
   24fb8:	str	x8, [x0, #16]
   24fbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   24fc0:	ldr	x1, [x0, #2640]
   24fc4:	add	x0, x0, #0xa50
   24fc8:	blr	x1
   24fcc:	mrs	x8, tpidr_el0
   24fd0:	ldr	w9, [x8, x0]
   24fd4:	orr	w9, w9, #0x4
   24fd8:	str	w9, [x8, x0]
   24fdc:	ldp	x29, x30, [sp], #16
   24fe0:	ret
   24fe4:	mov	w8, #0x1                   	// #1
   24fe8:	ldrb	w8, [x1, x8]
   24fec:	cmp	w8, #0x49
   24ff0:	b.eq	25024 <mpfr_set_str_binary@@Base+0x90>  // b.none
   24ff4:	mov	w3, #0x2                   	// #2
   24ff8:	mov	w4, #0x1                   	// #1
   24ffc:	mov	x2, xzr
   25000:	bl	bc60 <mpfr_strtofr@plt>
   25004:	cbnz	w0, 25048 <mpfr_set_str_binary@@Base+0xb4>
   25008:	ldp	x29, x30, [sp], #16
   2500c:	ret
   25010:	cmp	w8, #0x2b
   25014:	cset	w8, eq  // eq = none
   25018:	ldrb	w8, [x1, x8]
   2501c:	cmp	w8, #0x49
   25020:	b.ne	24ff4 <mpfr_set_str_binary@@Base+0x60>  // b.any
   25024:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   25028:	str	x8, [x0, #16]
   2502c:	ldrb	w8, [x1]
   25030:	cmp	w8, #0x2d
   25034:	mov	w8, #0xffffffff            	// #-1
   25038:	cneg	w8, w8, ne  // ne = any
   2503c:	str	w8, [x0, #8]
   25040:	ldp	x29, x30, [sp], #16
   25044:	ret
   25048:	adrp	x0, 5f000 <mpfr_l2b_3_1__tab@@Base>
   2504c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   25050:	add	x0, x0, #0xd22
   25054:	add	x2, x2, #0xd30
   25058:	mov	w1, #0x36                  	// #54
   2505c:	ldp	x29, x30, [sp], #16
   25060:	b	cb20 <mpfr_assert_fail@plt>

0000000000025064 <mpfr_set_ui@@Base>:
   25064:	mov	w3, w2
   25068:	mov	x2, xzr
   2506c:	b	c5e0 <mpfr_set_ui_2exp@plt>

0000000000025070 <mpfr_set_z@@Base>:
   25070:	mov	w3, w2
   25074:	mov	x2, xzr
   25078:	b	c4e0 <mpfr_set_z_2exp@plt>

000000000002507c <mpfr_sqrt@@Base>:
   2507c:	stp	x29, x30, [sp, #-96]!
   25080:	stp	x28, x27, [sp, #16]
   25084:	stp	x26, x25, [sp, #32]
   25088:	stp	x24, x23, [sp, #48]
   2508c:	stp	x22, x21, [sp, #64]
   25090:	stp	x20, x19, [sp, #80]
   25094:	mov	x29, sp
   25098:	sub	sp, sp, #0x80
   2509c:	ldr	x10, [x1, #16]
   250a0:	mov	x8, #0x2                   	// #2
   250a4:	movk	x8, #0x8000, lsl #48
   250a8:	add	x9, x8, #0x2
   250ac:	mov	x22, x1
   250b0:	cmp	x10, x9
   250b4:	mov	x25, x0
   250b8:	b.lt	25d58 <mpfr_sqrt@@Base+0xcdc>  // b.tstop
   250bc:	ldr	w9, [x22, #8]
   250c0:	tbnz	w9, #31, 25d60 <mpfr_sqrt@@Base+0xce4>
   250c4:	mov	w8, #0x1                   	// #1
   250c8:	str	w8, [x25, #8]
   250cc:	ldr	x20, [x25]
   250d0:	ldr	x8, [x22]
   250d4:	mov	w3, w2
   250d8:	cmp	x20, x8
   250dc:	b.ne	25448 <mpfr_sqrt@@Base+0x3cc>  // b.any
   250e0:	cmp	x20, #0x3f
   250e4:	b.gt	252cc <mpfr_sqrt@@Base+0x250>
   250e8:	ldr	x11, [x22, #24]
   250ec:	neg	x9, x20
   250f0:	mov	w12, #0x1                   	// #1
   250f4:	lsl	x9, x12, x9
   250f8:	ldr	x12, [x11]
   250fc:	and	x13, x10, #0x1
   25100:	add	x10, x13, x10
   25104:	adrp	x14, 5f000 <mpfr_l2b_3_1__tab@@Base>
   25108:	lsr	x13, x12, x13
   2510c:	lsr	x12, x13, #51
   25110:	and	x12, x12, #0x1ff8
   25114:	add	x14, x14, #0xde0
   25118:	adrp	x15, 61000 <mpfr_l2b_62_1__tab@@Base+0x1a78>
   2511c:	sub	x12, x12, #0x800
   25120:	add	x15, x15, #0x5e0
   25124:	ldr	x14, [x14, x12]
   25128:	ldr	x12, [x15, x12]
   2512c:	lsr	x15, x13, #27
   25130:	add	x16, x15, #0x1
   25134:	lsl	x17, x14, #57
   25138:	msub	x12, x12, x16, x17
   2513c:	lsr	x12, x12, #47
   25140:	mvn	x15, x15
   25144:	add	x12, x12, x14, lsl #11
   25148:	mul	x14, x12, x15
   2514c:	lsl	x15, x12, #10
   25150:	mul	x14, x14, x12
   25154:	umulh	x12, x12, x14
   25158:	lsr	x16, x13, #31
   2515c:	add	x12, x15, x12, lsr #6
   25160:	ldr	x8, [x25, #24]
   25164:	mul	x14, x12, x16
   25168:	lsr	x14, x14, #32
   2516c:	cmp	x10, #0x0
   25170:	msub	x15, x14, x14, x13
   25174:	mov	x16, #0x1ffffffff           	// #8589934591
   25178:	sub	x11, x9, #0x1
   2517c:	cinc	x10, x10, lt  // lt = tstop
   25180:	cmp	x15, x16
   25184:	lsl	x16, x14, #1
   25188:	b.cc	251ac <mpfr_sqrt@@Base+0x130>  // b.lo, b.ul, b.last
   2518c:	add	x16, x16, #0x1
   25190:	mov	x17, #0x1fffffffe           	// #8589934590
   25194:	sub	x15, x15, x16
   25198:	add	x14, x14, #0x1
   2519c:	cmp	x15, x17
   251a0:	add	x16, x16, #0x2
   251a4:	b.hi	25194 <mpfr_sqrt@@Base+0x118>  // b.pmore
   251a8:	sub	x16, x16, #0x1
   251ac:	orr	x17, x16, #0x1
   251b0:	cmp	x15, x16
   251b4:	csel	x17, x17, xzr, hi  // hi = pmore
   251b8:	cinc	x16, x14, hi  // hi = pmore
   251bc:	sub	x14, x15, x17
   251c0:	mul	x12, x14, x12
   251c4:	extr	x12, x16, x12, #32
   251c8:	add	x14, x12, #0x7
   251cc:	and	x14, x14, x11, lsr #1
   251d0:	cmp	x14, #0x7
   251d4:	asr	x10, x10, #1
   251d8:	b.ls	25ec0 <mpfr_sqrt@@Base+0xe44>  // b.plast
   251dc:	mov	w17, #0x1                   	// #1
   251e0:	neg	x16, x9
   251e4:	and	x15, x12, x16
   251e8:	str	x15, [x8]
   251ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   251f0:	ldr	x1, [x0, #2608]
   251f4:	add	x0, x0, #0xa30
   251f8:	blr	x1
   251fc:	mrs	x13, tpidr_el0
   25200:	ldr	x14, [x13, x0]
   25204:	cmp	x10, x14
   25208:	b.gt	25e44 <mpfr_sqrt@@Base+0xdc8>
   2520c:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   25210:	lsr	x14, x14, x20
   25214:	and	x14, x12, x14
   25218:	and	x11, x12, x11
   2521c:	eor	x11, x11, x14
   25220:	orr	x11, x11, x17
   25224:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25228:	ldr	x1, [x0, #2576]
   2522c:	add	x0, x0, #0xa10
   25230:	blr	x1
   25234:	ldr	x12, [x13, x0]
   25238:	cmp	x10, x12
   2523c:	b.lt	25f28 <mpfr_sqrt@@Base+0xeac>  // b.tstop
   25240:	mov	w22, wzr
   25244:	cmp	w3, #0x5
   25248:	str	x10, [x25, #16]
   2524c:	b.eq	25bc0 <mpfr_sqrt@@Base+0xb44>  // b.none
   25250:	cbz	x11, 25bc0 <mpfr_sqrt@@Base+0xb44>
   25254:	cmp	w3, #0x3
   25258:	b.eq	257e4 <mpfr_sqrt@@Base+0x768>  // b.none
   2525c:	cmp	w3, #0x1
   25260:	b.eq	257e4 <mpfr_sqrt@@Base+0x768>  // b.none
   25264:	cbnz	w3, 2526c <mpfr_sqrt@@Base+0x1f0>
   25268:	cbz	x14, 257e4 <mpfr_sqrt@@Base+0x768>
   2526c:	ldr	x11, [x8]
   25270:	adds	x9, x11, x9
   25274:	str	x9, [x8]
   25278:	b.ne	252a8 <mpfr_sqrt@@Base+0x22c>  // b.any
   2527c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   25280:	str	x9, [x8]
   25284:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25288:	ldr	x1, [x0, #2608]
   2528c:	add	x0, x0, #0xa30
   25290:	blr	x1
   25294:	ldr	x8, [x13, x0]
   25298:	cmp	x10, x8
   2529c:	b.ge	25e44 <mpfr_sqrt@@Base+0xdc8>  // b.tcont
   252a0:	add	x8, x10, #0x1
   252a4:	str	x8, [x25, #16]
   252a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   252ac:	ldr	x1, [x0, #2640]
   252b0:	add	x0, x0, #0xa50
   252b4:	blr	x1
   252b8:	ldr	w8, [x13, x0]
   252bc:	mov	w22, #0x1                   	// #1
   252c0:	orr	w8, w8, #0x8
   252c4:	str	w8, [x13, x0]
   252c8:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   252cc:	cmp	x20, #0x40
   252d0:	b.eq	25300 <mpfr_sqrt@@Base+0x284>  // b.none
   252d4:	cmp	x20, #0x7f
   252d8:	b.gt	25300 <mpfr_sqrt@@Base+0x284>
   252dc:	ldr	x8, [x22, #24]
   252e0:	ldr	x21, [x25, #24]
   252e4:	mov	w13, #0x80                  	// #128
   252e8:	ldr	x12, [x8, #8]
   252ec:	tbnz	w10, #0, 25808 <mpfr_sqrt@@Base+0x78c>
   252f0:	ldr	x8, [x8]
   252f4:	mov	x9, xzr
   252f8:	mov	x11, x12
   252fc:	b	2581c <mpfr_sqrt@@Base+0x7a0>
   25300:	cmp	x20, #0x40
   25304:	b.ne	25448 <mpfr_sqrt@@Base+0x3cc>  // b.any
   25308:	ldr	x9, [x22, #24]
   2530c:	and	x11, x10, #0x1
   25310:	adrp	x13, 5f000 <mpfr_l2b_3_1__tab@@Base>
   25314:	add	x13, x13, #0xde0
   25318:	ldr	x12, [x9]
   2531c:	add	x9, x10, x11
   25320:	adrp	x14, 61000 <mpfr_l2b_62_1__tab@@Base+0x1a78>
   25324:	add	x14, x14, #0x5e0
   25328:	and	w10, w10, w12
   2532c:	lsr	x11, x12, x11
   25330:	lsl	x12, x10, #63
   25334:	lsr	x10, x11, #51
   25338:	and	x10, x10, #0x1ff8
   2533c:	sub	x10, x10, #0x800
   25340:	ldr	x13, [x13, x10]
   25344:	ldr	x10, [x14, x10]
   25348:	lsr	x14, x11, #27
   2534c:	add	x15, x14, #0x1
   25350:	lsl	x16, x13, #57
   25354:	msub	x10, x10, x15, x16
   25358:	lsr	x10, x10, #47
   2535c:	mvn	x14, x14
   25360:	add	x10, x10, x13, lsl #11
   25364:	mul	x13, x10, x14
   25368:	lsl	x14, x10, #10
   2536c:	mul	x13, x13, x10
   25370:	umulh	x10, x10, x13
   25374:	lsr	x15, x11, #31
   25378:	add	x10, x14, x10, lsr #6
   2537c:	ldr	x8, [x25, #24]
   25380:	mul	x13, x10, x15
   25384:	lsr	x13, x13, #32
   25388:	cmp	x9, #0x0
   2538c:	msub	x14, x13, x13, x11
   25390:	mov	x15, #0x1ffffffff           	// #8589934591
   25394:	cinc	x9, x9, lt  // lt = tstop
   25398:	cmp	x14, x15
   2539c:	lsl	x15, x13, #1
   253a0:	b.cc	253c4 <mpfr_sqrt@@Base+0x348>  // b.lo, b.ul, b.last
   253a4:	add	x15, x15, #0x1
   253a8:	mov	x16, #0x1fffffffe           	// #8589934590
   253ac:	sub	x14, x14, x15
   253b0:	add	x13, x13, #0x1
   253b4:	cmp	x14, x16
   253b8:	add	x15, x15, #0x2
   253bc:	b.hi	253ac <mpfr_sqrt@@Base+0x330>  // b.pmore
   253c0:	sub	x15, x15, #0x1
   253c4:	orr	x16, x15, #0x1
   253c8:	cmp	x14, x15
   253cc:	csel	x16, x16, xzr, hi  // hi = pmore
   253d0:	sub	x14, x14, x16
   253d4:	cinc	x13, x13, hi  // hi = pmore
   253d8:	mul	x10, x14, x10
   253dc:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   253e0:	cmp	w13, #0x0
   253e4:	extr	x10, x13, x10, #32
   253e8:	csel	x10, x15, x10, ge  // ge = tcont
   253ec:	asr	x9, x9, #1
   253f0:	umulh	x14, x10, x10
   253f4:	mul	x15, x10, x10
   253f8:	subs	x13, x12, x15
   253fc:	sbc	x11, x11, x14
   25400:	cbz	x11, 25be4 <mpfr_sqrt@@Base+0xb68>
   25404:	lsl	x12, x10, #1
   25408:	b	25430 <mpfr_sqrt@@Base+0x3b4>
   2540c:	subs	x13, x13, x10
   25410:	add	x10, x10, #0x1
   25414:	cset	w14, cc  // cc = lo, ul, last
   25418:	subs	x13, x13, x10
   2541c:	sub	x11, x11, x14
   25420:	cset	w14, cc  // cc = lo, ul, last
   25424:	subs	x11, x11, x14
   25428:	add	x12, x12, #0x2
   2542c:	b.eq	25be4 <mpfr_sqrt@@Base+0xb68>  // b.none
   25430:	cmp	x11, #0x1
   25434:	b.ne	2540c <mpfr_sqrt@@Base+0x390>  // b.any
   25438:	cmp	x13, x12
   2543c:	b.hi	2540c <mpfr_sqrt@@Base+0x390>  // b.pmore
   25440:	mov	w12, #0x1                   	// #1
   25444:	b	25be8 <mpfr_sqrt@@Base+0xb6c>
   25448:	neg	w9, w20
   2544c:	sub	x11, x20, #0x1
   25450:	stur	xzr, [x29, #-32]
   25454:	add	x12, x20, #0x3e
   25458:	and	w16, w9, #0x3f
   2545c:	cmp	x11, #0x0
   25460:	ldr	x23, [x25, #24]
   25464:	orr	w15, w16, w3
   25468:	csel	x9, x12, x11, lt  // lt = tstop
   2546c:	mov	w13, #0x40                  	// #64
   25470:	sub	x14, x8, #0x1
   25474:	cmp	w15, #0x0
   25478:	asr	x11, x9, #6
   2547c:	add	x8, x8, #0x3e
   25480:	cset	w12, eq  // eq = none
   25484:	csel	w21, w13, w16, eq  // eq = none
   25488:	cinc	x28, x11, eq  // eq = none
   2548c:	cmp	x14, #0x0
   25490:	csel	x19, x8, x14, lt  // lt = tstop
   25494:	cmp	w21, #0x40
   25498:	add	x27, x28, #0x1
   2549c:	stp	w15, w3, [x29, #-72]
   254a0:	stur	w16, [x29, #-108]
   254a4:	stur	x23, [x29, #-88]
   254a8:	b.cc	254cc <mpfr_sqrt@@Base+0x450>  // b.lo, b.ul, b.last
   254ac:	lsl	x1, x27, #3
   254b0:	cmp	x1, #0x4, lsl #12
   254b4:	b.hi	25e58 <mpfr_sqrt@@Base+0xddc>  // b.pmore
   254b8:	add	x9, x1, #0xf
   254bc:	mov	x8, sp
   254c0:	and	x9, x9, #0xfffffffffffffff0
   254c4:	sub	x23, x8, x9
   254c8:	mov	sp, x23
   254cc:	ldr	x26, [x22, #24]
   254d0:	lsl	x24, x27, #1
   254d4:	stp	x27, x28, [x29, #-104]
   254d8:	lsl	x27, x27, #4
   254dc:	asr	x20, x19, #6
   254e0:	cmp	x27, #0x4, lsl #12
   254e4:	and	w19, w10, #0x1
   254e8:	stur	x25, [x29, #-80]
   254ec:	b.hi	25d88 <mpfr_sqrt@@Base+0xd0c>  // b.pmore
   254f0:	add	x9, x27, #0xf
   254f4:	mov	x8, sp
   254f8:	and	x9, x9, #0xfffffffffffffff0
   254fc:	sub	x25, x8, x9
   25500:	mov	sp, x25
   25504:	cmp	x20, x24
   25508:	add	x28, x20, #0x1
   2550c:	b.ge	25db4 <mpfr_sqrt@@Base+0xd38>  // b.tcont
   25510:	subs	x27, x24, x28
   25514:	b.eq	25528 <mpfr_sqrt@@Base+0x4ac>  // b.none
   25518:	lsl	x2, x27, #3
   2551c:	mov	x0, x25
   25520:	mov	w1, wzr
   25524:	bl	c150 <memset@plt>
   25528:	cbnz	w19, 25558 <mpfr_sqrt@@Base+0x4dc>
   2552c:	add	x8, x25, x24, lsl #3
   25530:	mvn	x9, x20
   25534:	add	x0, x8, x9, lsl #3
   25538:	cmp	x0, x26
   2553c:	b.eq	2554c <mpfr_sqrt@@Base+0x4d0>  // b.none
   25540:	lsl	x2, x28, #3
   25544:	mov	x1, x26
   25548:	bl	ba70 <memcpy@plt>
   2554c:	ldur	x28, [x29, #-80]
   25550:	mov	x27, xzr
   25554:	b	255a0 <mpfr_sqrt@@Base+0x524>
   25558:	cbz	x27, 25584 <mpfr_sqrt@@Base+0x508>
   2555c:	add	x20, x25, x27, lsl #3
   25560:	mov	w3, #0x1                   	// #1
   25564:	mov	x0, x20
   25568:	mov	x1, x26
   2556c:	mov	x2, x28
   25570:	bl	bd30 <__gmpn_rshift@plt>
   25574:	ldur	x28, [x29, #-80]
   25578:	mov	x27, xzr
   2557c:	stur	x0, [x20, #-8]
   25580:	b	255a0 <mpfr_sqrt@@Base+0x524>
   25584:	mov	w3, #0x1                   	// #1
   25588:	mov	x0, x25
   2558c:	mov	x1, x26
   25590:	mov	x2, x28
   25594:	bl	bd30 <__gmpn_rshift@plt>
   25598:	ldur	x28, [x29, #-80]
   2559c:	mov	x27, x0
   255a0:	mov	x0, x23
   255a4:	mov	x1, xzr
   255a8:	mov	x2, x25
   255ac:	mov	x3, x24
   255b0:	bl	cca0 <__gmpn_sqrtrem@plt>
   255b4:	ldr	x10, [x23]
   255b8:	mov	w8, #0x1                   	// #1
   255bc:	lsl	x9, x8, x21
   255c0:	cmp	w21, #0x40
   255c4:	sub	x8, x9, #0x1
   255c8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   255cc:	and	x8, x10, x8
   255d0:	sub	x11, x10, x8
   255d4:	str	x11, [x23]
   255d8:	ldr	x12, [x22, #16]
   255dc:	ldur	w24, [x29, #-68]
   255e0:	orr	x10, x0, x27
   255e4:	add	x14, x12, x19
   255e8:	cmp	x14, #0x0
   255ec:	orr	w13, w24, #0x2
   255f0:	cinc	x14, x14, lt  // lt = tstop
   255f4:	orr	x12, x8, x10
   255f8:	cmp	w13, #0x3
   255fc:	asr	x20, x14, #1
   25600:	b.eq	25730 <mpfr_sqrt@@Base+0x6b4>  // b.none
   25604:	cbz	x12, 25730 <mpfr_sqrt@@Base+0x6b4>
   25608:	ldur	x14, [x29, #-104]
   2560c:	cbz	w24, 25744 <mpfr_sqrt@@Base+0x6c8>
   25610:	ldur	w9, [x29, #-72]
   25614:	add	x8, x23, #0x8
   25618:	mov	w12, #0x1                   	// #1
   2561c:	cmp	w9, #0x0
   25620:	ldur	w9, [x29, #-108]
   25624:	csel	x8, x8, x23, eq  // eq = none
   25628:	ldr	x11, [x8]
   2562c:	csel	w10, wzr, w9, eq  // eq = none
   25630:	ldp	x9, x18, [x29, #-96]
   25634:	lsl	x10, x12, x10
   25638:	csel	x9, x9, x14, eq  // eq = none
   2563c:	adds	x10, x11, x10
   25640:	str	x10, [x18]
   25644:	b.cc	25778 <mpfr_sqrt@@Base+0x6fc>  // b.lo, b.ul, b.last
   25648:	mov	x12, xzr
   2564c:	sub	x11, x9, #0x1
   25650:	mov	w10, #0x1                   	// #1
   25654:	cmp	x10, x9
   25658:	b.ge	25b30 <mpfr_sqrt@@Base+0xab4>  // b.tcont
   2565c:	add	x13, x8, x12
   25660:	ldr	x13, [x13, #8]
   25664:	add	x14, x18, x12
   25668:	add	x10, x10, #0x1
   2566c:	add	x12, x12, #0x8
   25670:	adds	x13, x13, #0x1
   25674:	sub	x11, x11, #0x1
   25678:	str	x13, [x14, #8]
   2567c:	b.cs	25654 <mpfr_sqrt@@Base+0x5d8>  // b.hs, b.nlast
   25680:	cmp	x8, x18
   25684:	mov	w22, #0x1                   	// #1
   25688:	b.eq	25b44 <mpfr_sqrt@@Base+0xac8>  // b.none
   2568c:	subs	x13, x9, x10
   25690:	b.le	25b44 <mpfr_sqrt@@Base+0xac8>
   25694:	cmp	x13, #0x4
   25698:	b.cc	2570c <mpfr_sqrt@@Base+0x690>  // b.lo, b.ul, b.last
   2569c:	add	x15, x18, x12
   256a0:	lsl	x14, x9, #3
   256a4:	add	x15, x15, #0x8
   256a8:	add	x16, x8, x14
   256ac:	cmp	x15, x16
   256b0:	b.cs	256c8 <mpfr_sqrt@@Base+0x64c>  // b.hs, b.nlast
   256b4:	add	x15, x8, x12
   256b8:	add	x14, x18, x14
   256bc:	add	x15, x15, #0x8
   256c0:	cmp	x15, x14
   256c4:	b.cc	2570c <mpfr_sqrt@@Base+0x690>  // b.lo, b.ul, b.last
   256c8:	sub	x15, x9, x10
   256cc:	add	x14, x18, x12
   256d0:	add	x16, x8, x12
   256d4:	and	x17, x11, #0xfffffffffffffffc
   256d8:	and	x12, x13, #0xfffffffffffffffc
   256dc:	add	x11, x14, #0x18
   256e0:	add	x14, x16, #0x18
   256e4:	add	x10, x17, x10
   256e8:	and	x15, x15, #0xfffffffffffffffc
   256ec:	ldp	q0, q1, [x14, #-16]
   256f0:	add	x14, x14, #0x20
   256f4:	subs	x15, x15, #0x4
   256f8:	stp	q0, q1, [x11, #-16]
   256fc:	add	x11, x11, #0x20
   25700:	b.ne	256ec <mpfr_sqrt@@Base+0x670>  // b.any
   25704:	cmp	x13, x12
   25708:	b.eq	25b40 <mpfr_sqrt@@Base+0xac4>  // b.none
   2570c:	lsl	x11, x10, #3
   25710:	sub	x9, x9, x10
   25714:	add	x10, x18, x11
   25718:	add	x8, x8, x11
   2571c:	ldr	x11, [x8], #8
   25720:	subs	x9, x9, #0x1
   25724:	str	x11, [x10], #8
   25728:	b.ne	2571c <mpfr_sqrt@@Base+0x6a0>  // b.any
   2572c:	b	25b40 <mpfr_sqrt@@Base+0xac4>
   25730:	cmp	x12, #0x0
   25734:	csetm	w22, ne  // ne = any
   25738:	ldur	w8, [x29, #-72]
   2573c:	cbnz	w8, 25b44 <mpfr_sqrt@@Base+0xac8>
   25740:	b	25b10 <mpfr_sqrt@@Base+0xa94>
   25744:	cmp	w21, #0x3f
   25748:	b.hi	25b00 <mpfr_sqrt@@Base+0xa84>  // b.pmore
   2574c:	sub	w12, w21, #0x1
   25750:	mov	w13, #0x1                   	// #1
   25754:	lsl	x12, x13, x12
   25758:	tst	x8, x12
   2575c:	b.eq	25b04 <mpfr_sqrt@@Base+0xa88>  // b.none
   25760:	cmp	x8, x12
   25764:	b.ne	25610 <mpfr_sqrt@@Base+0x594>  // b.any
   25768:	and	x8, x11, x9
   2576c:	orr	x8, x8, x10
   25770:	cbz	x8, 25b04 <mpfr_sqrt@@Base+0xa88>
   25774:	b	25610 <mpfr_sqrt@@Base+0x594>
   25778:	cmp	x9, #0x2
   2577c:	mov	w22, #0x1                   	// #1
   25780:	b.lt	25b44 <mpfr_sqrt@@Base+0xac8>  // b.tstop
   25784:	cmp	x8, x18
   25788:	b.eq	25b44 <mpfr_sqrt@@Base+0xac8>  // b.none
   2578c:	sub	x10, x9, #0x1
   25790:	cmp	x10, #0x4
   25794:	b.cc	257bc <mpfr_sqrt@@Base+0x740>  // b.lo, b.ul, b.last
   25798:	lsl	x11, x9, #3
   2579c:	add	x12, x18, #0x8
   257a0:	add	x13, x8, x11
   257a4:	cmp	x12, x13
   257a8:	b.cs	25d20 <mpfr_sqrt@@Base+0xca4>  // b.hs, b.nlast
   257ac:	add	x11, x18, x11
   257b0:	add	x12, x8, #0x8
   257b4:	cmp	x12, x11
   257b8:	b.cs	25d20 <mpfr_sqrt@@Base+0xca4>  // b.hs, b.nlast
   257bc:	mov	w11, #0x1                   	// #1
   257c0:	sub	x9, x9, x11
   257c4:	lsl	x11, x11, #3
   257c8:	add	x10, x18, x11
   257cc:	add	x8, x8, x11
   257d0:	ldr	x11, [x8], #8
   257d4:	subs	x9, x9, #0x1
   257d8:	str	x11, [x10], #8
   257dc:	b.ne	257d0 <mpfr_sqrt@@Base+0x754>  // b.any
   257e0:	b	25b40 <mpfr_sqrt@@Base+0xac4>
   257e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   257e8:	ldr	x1, [x0, #2640]
   257ec:	add	x0, x0, #0xa50
   257f0:	blr	x1
   257f4:	ldr	w8, [x13, x0]
   257f8:	mov	w22, #0xffffffff            	// #-1
   257fc:	orr	w8, w8, #0x8
   25800:	str	w8, [x13, x0]
   25804:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   25808:	ldr	x9, [x8]
   2580c:	lsr	x11, x12, #1
   25810:	add	x10, x10, #0x1
   25814:	extr	x8, x12, x9, #1
   25818:	lsl	x9, x9, #63
   2581c:	stur	x9, [x29, #-24]
   25820:	lsr	x9, x11, #51
   25824:	adrp	x12, 5f000 <mpfr_l2b_3_1__tab@@Base>
   25828:	and	x9, x9, #0x1ff8
   2582c:	add	x12, x12, #0xde0
   25830:	adrp	x14, 61000 <mpfr_l2b_62_1__tab@@Base+0x1a78>
   25834:	sub	x9, x9, #0x800
   25838:	add	x14, x14, #0x5e0
   2583c:	ldr	x12, [x12, x9]
   25840:	ldr	x9, [x14, x9]
   25844:	lsr	x16, x11, #27
   25848:	add	x14, x16, #0x1
   2584c:	lsl	x17, x12, #57
   25850:	msub	x9, x9, x14, x17
   25854:	cmp	x10, #0x0
   25858:	lsr	x9, x9, #47
   2585c:	cinc	x14, x10, lt  // lt = tstop
   25860:	mvn	x10, x16
   25864:	add	x9, x9, x12, lsl #11
   25868:	mul	x10, x9, x10
   2586c:	lsl	x12, x9, #10
   25870:	mul	x10, x10, x9
   25874:	umulh	x9, x9, x10
   25878:	add	x9, x12, x9, lsr #6
   2587c:	mul	x10, x9, x9
   25880:	umulh	x10, x10, x11
   25884:	mov	x17, #0x2000000000000000    	// #2305843009213693952
   25888:	add	x10, x10, #0x2
   2588c:	sub	x10, x17, x10, lsr #1
   25890:	mul	x10, x9, x10
   25894:	lsr	x10, x10, #29
   25898:	add	x10, x10, x9, lsl #33
   2589c:	umulh	x9, x10, x11
   258a0:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   258a4:	add	x9, x9, x11
   258a8:	cmp	x9, x18
   258ac:	csel	x9, x9, x18, hi  // hi = pmore
   258b0:	mov	x15, xzr
   258b4:	stp	x8, x11, [x29, #-16]
   258b8:	umulh	x16, x9, x9
   258bc:	mul	x17, x9, x9
   258c0:	subs	x12, x15, x17
   258c4:	sbc	x11, x11, x16
   258c8:	cmp	x11, #0x10
   258cc:	mov	w15, #0x1                   	// #1
   258d0:	b.cc	25ac0 <mpfr_sqrt@@Base+0xa44>  // b.lo, b.ul, b.last
   258d4:	lsr	x17, x9, #60
   258d8:	lsl	x18, x9, #4
   258dc:	subs	x0, x12, x18
   258e0:	sbc	x11, x11, x17
   258e4:	add	x9, x9, #0x8
   258e8:	mov	x16, xzr
   258ec:	subs	x12, x0, #0x40
   258f0:	sbc	x11, x11, x16
   258f4:	cmp	x11, #0x8
   258f8:	sub	x13, x13, x20
   258fc:	b.cs	25acc <mpfr_sqrt@@Base+0xa50>  // b.hs, b.nlast
   25900:	asr	x23, x14, #1
   25904:	cmp	x11, #0x4
   25908:	lsl	x24, x15, x13
   2590c:	b.cc	25930 <mpfr_sqrt@@Base+0x8b4>  // b.lo, b.ul, b.last
   25910:	lsr	x14, x9, #62
   25914:	lsl	x15, x9, #2
   25918:	subs	x16, x12, x15
   2591c:	sbc	x11, x11, x14
   25920:	add	x9, x9, #0x2
   25924:	mov	x13, xzr
   25928:	subs	x12, x16, #0x4
   2592c:	sbc	x11, x11, x13
   25930:	sub	x19, x24, #0x1
   25934:	lsl	x13, x9, #1
   25938:	b	2595c <mpfr_sqrt@@Base+0x8e0>
   2593c:	lsl	x14, x9, #1
   25940:	lsr	x15, x9, #63
   25944:	orr	x14, x14, #0x1
   25948:	subs	x16, x12, x14
   2594c:	sbc	x11, x11, x15
   25950:	add	x9, x9, #0x1
   25954:	add	x13, x13, #0x2
   25958:	mov	x12, x16
   2595c:	cmp	x11, #0x1
   25960:	mov	x14, x13
   25964:	b.hi	25940 <mpfr_sqrt@@Base+0x8c4>  // b.pmore
   25968:	b.ne	25974 <mpfr_sqrt@@Base+0x8f8>  // b.any
   2596c:	cmp	x12, x13
   25970:	b.hi	2593c <mpfr_sqrt@@Base+0x8c0>  // b.pmore
   25974:	adds	x8, x12, x8
   25978:	cinc	x11, x11, cs  // cs = hs, nlast
   2597c:	extr	x8, x11, x8, #1
   25980:	lsr	x12, x11, #1
   25984:	umulh	x13, x10, x8
   25988:	adds	x11, x13, x8
   2598c:	adds	x10, x11, x10
   25990:	cset	w14, cs  // cs = hs, nlast
   25994:	cmp	x12, #0x0
   25998:	cset	w15, ne  // ne = any
   2599c:	csel	x11, x11, x10, eq  // eq = none
   259a0:	cmn	x13, x8
   259a4:	and	w8, w14, w15
   259a8:	add	x10, x11, #0x1a
   259ac:	cinc	x8, x8, cs  // cs = hs, nlast
   259b0:	and	x10, x10, x19, lsr #1
   259b4:	add	x8, x8, x12
   259b8:	cmp	x10, #0x1e
   259bc:	add	x8, x8, x9
   259c0:	stp	x11, x8, [x21]
   259c4:	b.ls	25f9c <mpfr_sqrt@@Base+0xf20>  // b.plast
   259c8:	mov	w13, #0x1                   	// #1
   259cc:	neg	x12, x24
   259d0:	and	x10, x11, x12
   259d4:	str	x10, [x21]
   259d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   259dc:	ldr	x1, [x0, #2608]
   259e0:	add	x0, x0, #0xa30
   259e4:	blr	x1
   259e8:	mrs	x8, tpidr_el0
   259ec:	ldr	x9, [x8, x0]
   259f0:	cmp	x23, x9
   259f4:	b.gt	25e44 <mpfr_sqrt@@Base+0xdc8>
   259f8:	mov	w9, #0x7f                  	// #127
   259fc:	mov	w14, #0x1                   	// #1
   25a00:	sub	x9, x9, x20
   25a04:	lsl	x9, x14, x9
   25a08:	and	x9, x11, x9
   25a0c:	and	x11, x11, x19
   25a10:	eor	x11, x11, x9
   25a14:	orr	x11, x11, x13
   25a18:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25a1c:	ldr	x1, [x0, #2576]
   25a20:	add	x0, x0, #0xa10
   25a24:	blr	x1
   25a28:	ldr	x13, [x8, x0]
   25a2c:	cmp	x23, x13
   25a30:	b.lt	260e4 <mpfr_sqrt@@Base+0x1068>  // b.tstop
   25a34:	mov	w22, wzr
   25a38:	cmp	w3, #0x5
   25a3c:	str	x23, [x25, #16]
   25a40:	b.eq	25bc0 <mpfr_sqrt@@Base+0xb44>  // b.none
   25a44:	cbz	x11, 25bc0 <mpfr_sqrt@@Base+0xb44>
   25a48:	cmp	w3, #0x3
   25a4c:	b.eq	25cc4 <mpfr_sqrt@@Base+0xc48>  // b.none
   25a50:	cmp	w3, #0x1
   25a54:	b.eq	25cc4 <mpfr_sqrt@@Base+0xc48>  // b.none
   25a58:	cbnz	w3, 25a60 <mpfr_sqrt@@Base+0x9e4>
   25a5c:	cbz	x9, 25cc4 <mpfr_sqrt@@Base+0xc48>
   25a60:	ldp	x9, x10, [x21]
   25a64:	adds	x9, x9, x24
   25a68:	str	x9, [x21]
   25a6c:	cinc	x9, x10, eq  // eq = none
   25a70:	str	x9, [x21, #8]
   25a74:	cbnz	x9, 25aa4 <mpfr_sqrt@@Base+0xa28>
   25a78:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   25a7c:	str	x9, [x21, #8]
   25a80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25a84:	ldr	x1, [x0, #2608]
   25a88:	add	x0, x0, #0xa30
   25a8c:	blr	x1
   25a90:	ldr	x9, [x8, x0]
   25a94:	cmp	x23, x9
   25a98:	b.ge	25e44 <mpfr_sqrt@@Base+0xdc8>  // b.tcont
   25a9c:	add	x9, x23, #0x1
   25aa0:	str	x9, [x25, #16]
   25aa4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25aa8:	ldr	x1, [x0, #2640]
   25aac:	add	x0, x0, #0xa50
   25ab0:	blr	x1
   25ab4:	ldr	w9, [x8, x0]
   25ab8:	mov	w22, #0x1                   	// #1
   25abc:	b	25bb8 <mpfr_sqrt@@Base+0xb3c>
   25ac0:	cmp	x11, #0x8
   25ac4:	sub	x13, x13, x20
   25ac8:	b.cc	25900 <mpfr_sqrt@@Base+0x884>  // b.lo, b.ul, b.last
   25acc:	lsr	x17, x9, #61
   25ad0:	lsl	x18, x9, #3
   25ad4:	subs	x0, x12, x18
   25ad8:	sbc	x11, x11, x17
   25adc:	add	x9, x9, #0x4
   25ae0:	mov	x16, xzr
   25ae4:	subs	x12, x0, #0x10
   25ae8:	sbc	x11, x11, x16
   25aec:	asr	x23, x14, #1
   25af0:	cmp	x11, #0x4
   25af4:	lsl	x24, x15, x13
   25af8:	b.cs	25910 <mpfr_sqrt@@Base+0x894>  // b.hs, b.nlast
   25afc:	b	25930 <mpfr_sqrt@@Base+0x8b4>
   25b00:	tbnz	x8, #63, 25ce0 <mpfr_sqrt@@Base+0xc64>
   25b04:	mov	w22, #0xffffffff            	// #-1
   25b08:	ldur	w8, [x29, #-72]
   25b0c:	cbnz	w8, 25b44 <mpfr_sqrt@@Base+0xac8>
   25b10:	ldur	x0, [x29, #-88]
   25b14:	add	x1, x23, #0x8
   25b18:	cmp	x0, x1
   25b1c:	b.eq	25b44 <mpfr_sqrt@@Base+0xac8>  // b.none
   25b20:	ldur	x8, [x29, #-96]
   25b24:	lsl	x2, x8, #3
   25b28:	bl	ba70 <memcpy@plt>
   25b2c:	b	25b44 <mpfr_sqrt@@Base+0xac8>
   25b30:	add	x20, x20, #0x1
   25b34:	add	x8, x18, x9, lsl #3
   25b38:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   25b3c:	stur	x9, [x8, #-8]
   25b40:	mov	w22, #0x1                   	// #1
   25b44:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   25b48:	add	x8, x20, x8
   25b4c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   25b50:	cmp	x8, x9
   25b54:	b.cs	25de0 <mpfr_sqrt@@Base+0xd64>  // b.hs, b.nlast
   25b58:	str	x20, [x28, #16]
   25b5c:	ldur	x0, [x29, #-32]
   25b60:	cbnz	x0, 25e04 <mpfr_sqrt@@Base+0xd88>
   25b64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25b68:	ldr	x1, [x0, #2576]
   25b6c:	add	x0, x0, #0xa10
   25b70:	blr	x1
   25b74:	mrs	x8, tpidr_el0
   25b78:	ldr	x9, [x8, x0]
   25b7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25b80:	ldr	x1, [x0, #2608]
   25b84:	add	x0, x0, #0xa30
   25b88:	blr	x1
   25b8c:	cmp	x20, x9
   25b90:	b.lt	25e10 <mpfr_sqrt@@Base+0xd94>  // b.tstop
   25b94:	ldr	x9, [x8, x0]
   25b98:	cmp	x20, x9
   25b9c:	b.gt	25e10 <mpfr_sqrt@@Base+0xd94>
   25ba0:	cbz	w22, 25bc0 <mpfr_sqrt@@Base+0xb44>
   25ba4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25ba8:	ldr	x1, [x0, #2640]
   25bac:	add	x0, x0, #0xa50
   25bb0:	blr	x1
   25bb4:	ldr	w9, [x8, x0]
   25bb8:	orr	w9, w9, #0x8
   25bbc:	str	w9, [x8, x0]
   25bc0:	mov	w0, w22
   25bc4:	mov	sp, x29
   25bc8:	ldp	x20, x19, [sp, #80]
   25bcc:	ldp	x22, x21, [sp, #64]
   25bd0:	ldp	x24, x23, [sp, #48]
   25bd4:	ldp	x26, x25, [sp, #32]
   25bd8:	ldp	x28, x27, [sp, #16]
   25bdc:	ldp	x29, x30, [sp], #96
   25be0:	ret
   25be4:	mov	w12, wzr
   25be8:	cmp	x13, x10
   25bec:	cset	w14, hi  // hi = pmore
   25bf0:	str	x10, [x8]
   25bf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25bf8:	ldr	x1, [x0, #2608]
   25bfc:	add	x0, x0, #0xa30
   25c00:	blr	x1
   25c04:	mrs	x11, tpidr_el0
   25c08:	ldr	x15, [x11, x0]
   25c0c:	cmp	x9, x15
   25c10:	b.gt	25e44 <mpfr_sqrt@@Base+0xdc8>
   25c14:	orr	w14, w12, w14
   25c18:	orr	x12, x13, x14
   25c1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25c20:	ldr	x1, [x0, #2576]
   25c24:	add	x0, x0, #0xa10
   25c28:	blr	x1
   25c2c:	ldr	x13, [x11, x0]
   25c30:	cmp	x9, x13
   25c34:	b.lt	261a0 <mpfr_sqrt@@Base+0x1124>  // b.tstop
   25c38:	mov	w22, wzr
   25c3c:	cmp	w3, #0x5
   25c40:	str	x9, [x25, #16]
   25c44:	b.eq	25bc0 <mpfr_sqrt@@Base+0xb44>  // b.none
   25c48:	cbz	x12, 25bc0 <mpfr_sqrt@@Base+0xb44>
   25c4c:	cmp	w3, #0x3
   25c50:	b.eq	25cfc <mpfr_sqrt@@Base+0xc80>  // b.none
   25c54:	cmp	w3, #0x1
   25c58:	b.eq	25cfc <mpfr_sqrt@@Base+0xc80>  // b.none
   25c5c:	cbnz	w3, 25c64 <mpfr_sqrt@@Base+0xbe8>
   25c60:	tbz	w14, #0, 25cfc <mpfr_sqrt@@Base+0xc80>
   25c64:	ldr	x10, [x8]
   25c68:	adds	x10, x10, #0x1
   25c6c:	str	x10, [x8]
   25c70:	b.cc	25ca0 <mpfr_sqrt@@Base+0xc24>  // b.lo, b.ul, b.last
   25c74:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   25c78:	str	x10, [x8]
   25c7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25c80:	ldr	x1, [x0, #2608]
   25c84:	add	x0, x0, #0xa30
   25c88:	blr	x1
   25c8c:	ldr	x8, [x11, x0]
   25c90:	cmp	x9, x8
   25c94:	b.ge	25e44 <mpfr_sqrt@@Base+0xdc8>  // b.tcont
   25c98:	add	x8, x9, #0x1
   25c9c:	str	x8, [x25, #16]
   25ca0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25ca4:	ldr	x1, [x0, #2640]
   25ca8:	add	x0, x0, #0xa50
   25cac:	blr	x1
   25cb0:	ldr	w8, [x11, x0]
   25cb4:	mov	w22, #0x1                   	// #1
   25cb8:	orr	w8, w8, #0x8
   25cbc:	str	w8, [x11, x0]
   25cc0:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   25cc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25cc8:	ldr	x1, [x0, #2640]
   25ccc:	add	x0, x0, #0xa50
   25cd0:	blr	x1
   25cd4:	ldr	w9, [x8, x0]
   25cd8:	mov	w22, #0xffffffff            	// #-1
   25cdc:	b	25bb8 <mpfr_sqrt@@Base+0xb3c>
   25ce0:	cbnz	x10, 25610 <mpfr_sqrt@@Base+0x594>
   25ce4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   25ce8:	cmp	x8, x9
   25cec:	b.ne	25610 <mpfr_sqrt@@Base+0x594>  // b.any
   25cf0:	ldrb	w8, [x23, #8]
   25cf4:	tbnz	w8, #0, 25610 <mpfr_sqrt@@Base+0x594>
   25cf8:	b	25b04 <mpfr_sqrt@@Base+0xa88>
   25cfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25d00:	ldr	x1, [x0, #2640]
   25d04:	add	x0, x0, #0xa50
   25d08:	blr	x1
   25d0c:	ldr	w8, [x11, x0]
   25d10:	mov	w22, #0xffffffff            	// #-1
   25d14:	orr	w8, w8, #0x8
   25d18:	str	w8, [x11, x0]
   25d1c:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   25d20:	and	x12, x10, #0xfffffffffffffffc
   25d24:	add	x13, x8, #0x18
   25d28:	orr	x11, x12, #0x1
   25d2c:	add	x14, x18, #0x18
   25d30:	mov	x15, x12
   25d34:	ldp	q0, q1, [x13, #-16]
   25d38:	add	x13, x13, #0x20
   25d3c:	subs	x15, x15, #0x4
   25d40:	stp	q0, q1, [x14, #-16]
   25d44:	add	x14, x14, #0x20
   25d48:	b.ne	25d34 <mpfr_sqrt@@Base+0xcb8>  // b.any
   25d4c:	cmp	x10, x12
   25d50:	b.ne	257c0 <mpfr_sqrt@@Base+0x744>  // b.any
   25d54:	b	25b40 <mpfr_sqrt@@Base+0xac4>
   25d58:	cmp	x10, x8
   25d5c:	b.ne	25e24 <mpfr_sqrt@@Base+0xda8>  // b.any
   25d60:	str	x8, [x25, #16]
   25d64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   25d68:	ldr	x1, [x0, #2640]
   25d6c:	add	x0, x0, #0xa50
   25d70:	blr	x1
   25d74:	mrs	x8, tpidr_el0
   25d78:	ldr	w9, [x8, x0]
   25d7c:	mov	w22, wzr
   25d80:	orr	w9, w9, #0x4
   25d84:	b	25bbc <mpfr_sqrt@@Base+0xb40>
   25d88:	sub	x0, x29, #0x20
   25d8c:	mov	x1, x27
   25d90:	mov	x25, x11
   25d94:	mov	x28, x12
   25d98:	bl	be10 <mpfr_tmp_allocate@plt>
   25d9c:	mov	x12, x28
   25da0:	mov	x11, x25
   25da4:	mov	x25, x0
   25da8:	cmp	x20, x24
   25dac:	add	x28, x20, #0x1
   25db0:	b.lt	25510 <mpfr_sqrt@@Base+0x494>  // b.tstop
   25db4:	sub	x28, x28, x24
   25db8:	add	x1, x26, x28, lsl #3
   25dbc:	stp	x12, x11, [x29, #-128]
   25dc0:	cbnz	w19, 25e7c <mpfr_sqrt@@Base+0xe00>
   25dc4:	cmp	x1, x25
   25dc8:	b.eq	25dd8 <mpfr_sqrt@@Base+0xd5c>  // b.none
   25dcc:	mov	x0, x25
   25dd0:	mov	x2, x27
   25dd4:	bl	ba70 <memcpy@plt>
   25dd8:	mov	x27, xzr
   25ddc:	b	25e90 <mpfr_sqrt@@Base+0xe14>
   25de0:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   25de4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   25de8:	add	x0, x0, #0x9e
   25dec:	add	x2, x2, #0xd39
   25df0:	mov	w1, #0x2b5                 	// #693
   25df4:	bl	cb20 <mpfr_assert_fail@plt>
   25df8:	str	x20, [x28, #16]
   25dfc:	ldur	x0, [x29, #-32]
   25e00:	cbz	x0, 25b64 <mpfr_sqrt@@Base+0xae8>
   25e04:	bl	c400 <mpfr_tmp_free@plt>
   25e08:	ldr	x20, [x28, #16]
   25e0c:	b	25b64 <mpfr_sqrt@@Base+0xae8>
   25e10:	mov	x0, x28
   25e14:	mov	w1, w22
   25e18:	mov	w2, w24
   25e1c:	bl	cb10 <mpfr_check_range@plt>
   25e20:	b	26244 <mpfr_sqrt@@Base+0x11c8>
   25e24:	ldr	w9, [x22, #8]
   25e28:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   25e2c:	cmp	x10, x11
   25e30:	b.ne	25f78 <mpfr_sqrt@@Base+0xefc>  // b.any
   25e34:	mov	w22, wzr
   25e38:	str	w9, [x25, #8]
   25e3c:	str	x11, [x25, #16]
   25e40:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   25e44:	mov	w2, #0x1                   	// #1
   25e48:	mov	x0, x25
   25e4c:	mov	w1, w3
   25e50:	bl	bf90 <mpfr_overflow@plt>
   25e54:	b	26244 <mpfr_sqrt@@Base+0x11c8>
   25e58:	sub	x0, x29, #0x20
   25e5c:	mov	x20, x11
   25e60:	mov	x23, x12
   25e64:	bl	be10 <mpfr_tmp_allocate@plt>
   25e68:	ldr	x10, [x22, #16]
   25e6c:	mov	x12, x23
   25e70:	mov	x11, x20
   25e74:	mov	x23, x0
   25e78:	b	254cc <mpfr_sqrt@@Base+0x450>
   25e7c:	mov	w3, #0x1                   	// #1
   25e80:	mov	x0, x25
   25e84:	mov	x2, x24
   25e88:	bl	bd30 <__gmpn_rshift@plt>
   25e8c:	mov	x27, x0
   25e90:	ldp	x9, x8, [x29, #-128]
   25e94:	cbz	x28, 25f94 <mpfr_sqrt@@Base+0xf18>
   25e98:	ldur	x28, [x29, #-80]
   25e9c:	cbnz	x27, 255a0 <mpfr_sqrt@@Base+0x524>
   25ea0:	add	x8, x8, x9
   25ea4:	sub	x8, x20, x8, lsl #1
   25ea8:	sub	x8, x8, #0x2
   25eac:	ldr	x27, [x26, x8, lsl #3]
   25eb0:	subs	x8, x8, #0x1
   25eb4:	b.cc	255a0 <mpfr_sqrt@@Base+0x524>  // b.lo, b.ul, b.last
   25eb8:	cbz	x27, 25eac <mpfr_sqrt@@Base+0xe30>
   25ebc:	b	255a0 <mpfr_sqrt@@Base+0x524>
   25ec0:	cmp	w16, #0x0
   25ec4:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   25ec8:	mov	x14, xzr
   25ecc:	csel	x12, x15, x12, ge  // ge = tcont
   25ed0:	umulh	x16, x12, x12
   25ed4:	mul	x17, x12, x12
   25ed8:	subs	x15, x14, x17
   25edc:	sbc	x13, x13, x16
   25ee0:	cbz	x13, 26198 <mpfr_sqrt@@Base+0x111c>
   25ee4:	lsl	x16, x12, #1
   25ee8:	mov	w14, #0x1                   	// #1
   25eec:	b	25f14 <mpfr_sqrt@@Base+0xe98>
   25ef0:	subs	x15, x15, x12
   25ef4:	add	x12, x12, #0x1
   25ef8:	cset	w17, cc  // cc = lo, ul, last
   25efc:	subs	x15, x15, x12
   25f00:	sub	x13, x13, x17
   25f04:	cset	w17, cc  // cc = lo, ul, last
   25f08:	subs	x13, x13, x17
   25f0c:	add	x16, x16, #0x2
   25f10:	b.eq	26194 <mpfr_sqrt@@Base+0x1118>  // b.none
   25f14:	cmp	x13, #0x1
   25f18:	b.ne	25ef0 <mpfr_sqrt@@Base+0xe74>  // b.any
   25f1c:	cmp	x15, x16
   25f20:	b.hi	25ef0 <mpfr_sqrt@@Base+0xe74>  // b.pmore
   25f24:	b	26198 <mpfr_sqrt@@Base+0x111c>
   25f28:	cmp	w3, #0x4
   25f2c:	b.eq	26140 <mpfr_sqrt@@Base+0x10c4>  // b.none
   25f30:	cmp	w3, #0x2
   25f34:	b.eq	26140 <mpfr_sqrt@@Base+0x10c4>  // b.none
   25f38:	cbnz	w3, 2615c <mpfr_sqrt@@Base+0x10e0>
   25f3c:	sub	x12, x12, #0x1
   25f40:	cmp	x10, x12
   25f44:	b.ne	25f54 <mpfr_sqrt@@Base+0xed8>  // b.any
   25f48:	cmp	x15, x16
   25f4c:	b.ne	25f54 <mpfr_sqrt@@Base+0xed8>  // b.any
   25f50:	cbnz	x14, 25240 <mpfr_sqrt@@Base+0x1c4>
   25f54:	cmp	x10, x12
   25f58:	b.lt	25f70 <mpfr_sqrt@@Base+0xef4>  // b.tstop
   25f5c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   25f60:	cmp	x15, x8
   25f64:	mov	w3, wzr
   25f68:	b.ne	2615c <mpfr_sqrt@@Base+0x10e0>  // b.any
   25f6c:	cbnz	x11, 2615c <mpfr_sqrt@@Base+0x10e0>
   25f70:	mov	w3, #0x1                   	// #1
   25f74:	b	2615c <mpfr_sqrt@@Base+0x10e0>
   25f78:	tbnz	w9, #31, 25d60 <mpfr_sqrt@@Base+0xce4>
   25f7c:	mov	w8, #0x1                   	// #1
   25f80:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   25f84:	mov	w22, wzr
   25f88:	str	w8, [x25, #8]
   25f8c:	str	x9, [x25, #16]
   25f90:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   25f94:	ldur	x28, [x29, #-80]
   25f98:	b	255a0 <mpfr_sqrt@@Base+0x524>
   25f9c:	sub	x0, x29, #0x40
   25fa0:	mov	w2, #0x2                   	// #2
   25fa4:	mov	x1, x21
   25fa8:	mov	w22, w3
   25fac:	stur	xzr, [x29, #-32]
   25fb0:	bl	c3b0 <__gmpn_sqr@plt>
   25fb4:	sub	x0, x29, #0x40
   25fb8:	sub	x1, x29, #0x20
   25fbc:	sub	x2, x29, #0x40
   25fc0:	mov	w3, #0x3                   	// #3
   25fc4:	bl	beb0 <__gmpn_sub_n@plt>
   25fc8:	ldp	x10, x8, [x21]
   25fcc:	ldur	x9, [x29, #-48]
   25fd0:	extr	x8, x8, x10, #63
   25fd4:	lsl	x10, x10, #1
   25fd8:	tbz	x9, #63, 26074 <mpfr_sqrt@@Base+0xff8>
   25fdc:	ldp	x11, x12, [x29, #-64]
   25fe0:	mov	w13, #0x1                   	// #1
   25fe4:	cmp	x10, #0x0
   25fe8:	add	x11, x11, x10
   25fec:	cset	w14, eq  // eq = none
   25ff0:	sub	x10, x10, #0x2
   25ff4:	sub	x11, x11, #0x1
   25ff8:	sub	x8, x8, x14
   25ffc:	cmp	x11, x10
   26000:	add	x12, x8, x12
   26004:	cinc	x12, x12, cc  // cc = lo, ul, last
   26008:	cset	w14, cc  // cc = lo, ul, last
   2600c:	cmp	x12, x8
   26010:	cset	w16, eq  // eq = none
   26014:	cset	w15, cc  // cc = lo, ul, last
   26018:	and	w14, w14, w16
   2601c:	orr	w14, w15, w14
   26020:	cmp	w14, #0x0
   26024:	cinc	x14, x13, ne  // ne = any
   26028:	adds	x9, x14, x9
   2602c:	b.mi	25fe4 <mpfr_sqrt@@Base+0xf68>  // b.first
   26030:	stp	x11, x12, [x29, #-64]
   26034:	stur	x9, [x29, #-48]
   26038:	b	26074 <mpfr_sqrt@@Base+0xff8>
   2603c:	mov	x12, x0
   26040:	mov	w13, #0x2                   	// #2
   26044:	cmp	x11, x10
   26048:	sub	x9, x9, x13
   2604c:	sub	x12, x12, x8
   26050:	orr	x13, x10, #0x1
   26054:	cset	w14, ls  // ls = plast
   26058:	sub	x11, x11, x13
   2605c:	cmn	x10, #0x2
   26060:	sub	x12, x12, x14
   26064:	add	x10, x10, #0x2
   26068:	stp	x12, x9, [x29, #-56]
   2606c:	stur	x11, [x29, #-64]
   26070:	cinc	x8, x8, eq  // eq = none
   26074:	cmp	x9, #0x2
   26078:	b.cc	26084 <mpfr_sqrt@@Base+0x1008>  // b.lo, b.ul, b.last
   2607c:	ldur	x12, [x29, #-56]
   26080:	b	26098 <mpfr_sqrt@@Base+0x101c>
   26084:	cmp	x9, #0x1
   26088:	b.ne	2616c <mpfr_sqrt@@Base+0x10f0>  // b.any
   2608c:	ldur	x12, [x29, #-56]
   26090:	cmp	x12, x8
   26094:	b.ls	260ac <mpfr_sqrt@@Base+0x1030>  // b.plast
   26098:	ldur	x11, [x29, #-64]
   2609c:	cmp	x12, x8
   260a0:	mov	x0, x12
   260a4:	b.cc	2603c <mpfr_sqrt@@Base+0xfc0>  // b.lo, b.ul, b.last
   260a8:	b	260c0 <mpfr_sqrt@@Base+0x1044>
   260ac:	b.ne	2616c <mpfr_sqrt@@Base+0x10f0>  // b.any
   260b0:	ldur	x11, [x29, #-64]
   260b4:	mov	x12, x8
   260b8:	cmp	x11, x10
   260bc:	b.ls	2616c <mpfr_sqrt@@Base+0x10f0>  // b.plast
   260c0:	cmp	x12, x8
   260c4:	b.ne	260dc <mpfr_sqrt@@Base+0x1060>  // b.any
   260c8:	cmp	x11, x10
   260cc:	mov	x0, x8
   260d0:	mov	w13, #0x1                   	// #1
   260d4:	b.ls	2603c <mpfr_sqrt@@Base+0xfc0>  // b.plast
   260d8:	b	26044 <mpfr_sqrt@@Base+0xfc8>
   260dc:	mov	w13, #0x1                   	// #1
   260e0:	b	26044 <mpfr_sqrt@@Base+0xfc8>
   260e4:	mov	x0, x25
   260e8:	cmp	w3, #0x4
   260ec:	b.eq	261e4 <mpfr_sqrt@@Base+0x1168>  // b.none
   260f0:	cmp	w3, #0x2
   260f4:	b.eq	261e4 <mpfr_sqrt@@Base+0x1168>  // b.none
   260f8:	mov	w1, w3
   260fc:	cbnz	w3, 2623c <mpfr_sqrt@@Base+0x11c0>
   26100:	sub	x13, x13, #0x1
   26104:	cmp	x23, x13
   26108:	b.ne	26118 <mpfr_sqrt@@Base+0x109c>  // b.any
   2610c:	ldr	x14, [x21, #8]
   26110:	cmn	x14, #0x1
   26114:	b.eq	2624c <mpfr_sqrt@@Base+0x11d0>  // b.none
   26118:	cmp	x23, x13
   2611c:	b.lt	261dc <mpfr_sqrt@@Base+0x1160>  // b.tstop
   26120:	orr	x8, x11, x10
   26124:	mov	w1, wzr
   26128:	cbnz	x8, 2623c <mpfr_sqrt@@Base+0x11c0>
   2612c:	ldr	x8, [x21, #8]
   26130:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   26134:	cmp	x8, x9
   26138:	b.eq	261dc <mpfr_sqrt@@Base+0x1160>  // b.none
   2613c:	b	2623c <mpfr_sqrt@@Base+0x11c0>
   26140:	sub	x12, x12, #0x1
   26144:	cmp	x10, x12
   26148:	b.ne	2615c <mpfr_sqrt@@Base+0x10e0>  // b.any
   2614c:	cmp	x15, x16
   26150:	b.ne	2615c <mpfr_sqrt@@Base+0x10e0>  // b.any
   26154:	orr	x12, x11, x14
   26158:	cbnz	x12, 25240 <mpfr_sqrt@@Base+0x1c4>
   2615c:	mov	w2, #0x1                   	// #1
   26160:	mov	x0, x25
   26164:	mov	w1, w3
   26168:	b	26240 <mpfr_sqrt@@Base+0x11c4>
   2616c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   26170:	extr	x11, x8, x10, #1
   26174:	bfxil	x9, x8, #1, #63
   26178:	stp	x11, x9, [x21]
   2617c:	ldp	x10, x8, [x29, #-56]
   26180:	ldur	x9, [x29, #-64]
   26184:	mov	w3, w22
   26188:	orr	x8, x9, x8
   2618c:	orr	x13, x8, x10
   26190:	b	259cc <mpfr_sqrt@@Base+0x950>
   26194:	mov	x14, xzr
   26198:	orr	x17, x14, x15
   2619c:	b	251e0 <mpfr_sqrt@@Base+0x164>
   261a0:	mov	x0, x25
   261a4:	mov	w1, w3
   261a8:	cmp	w3, #0x4
   261ac:	b.eq	2621c <mpfr_sqrt@@Base+0x11a0>  // b.none
   261b0:	cmp	w1, #0x2
   261b4:	b.eq	2621c <mpfr_sqrt@@Base+0x11a0>  // b.none
   261b8:	cbnz	w1, 2623c <mpfr_sqrt@@Base+0x11c0>
   261bc:	sub	x8, x13, #0x1
   261c0:	cmp	x9, x8
   261c4:	b.lt	261dc <mpfr_sqrt@@Base+0x1160>  // b.tstop
   261c8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   261cc:	cmp	x10, x8
   261d0:	mov	w1, wzr
   261d4:	b.ne	2623c <mpfr_sqrt@@Base+0x11c0>  // b.any
   261d8:	cbnz	x12, 2623c <mpfr_sqrt@@Base+0x11c0>
   261dc:	mov	w1, #0x1                   	// #1
   261e0:	b	2623c <mpfr_sqrt@@Base+0x11c0>
   261e4:	sub	x13, x13, #0x1
   261e8:	mov	w1, w3
   261ec:	cmp	x23, x13
   261f0:	b.ne	2623c <mpfr_sqrt@@Base+0x11c0>  // b.any
   261f4:	ldr	x13, [x21, #8]
   261f8:	cmn	x13, #0x1
   261fc:	b.ne	2623c <mpfr_sqrt@@Base+0x11c0>  // b.any
   26200:	cmp	x10, x12
   26204:	b.ne	2623c <mpfr_sqrt@@Base+0x11c0>  // b.any
   26208:	orr	x10, x11, x9
   2620c:	mov	x25, x0
   26210:	mov	w3, w1
   26214:	cbnz	x10, 25a34 <mpfr_sqrt@@Base+0x9b8>
   26218:	b	2623c <mpfr_sqrt@@Base+0x11c0>
   2621c:	sub	x13, x13, #0x1
   26220:	cmp	x9, x13
   26224:	b.ne	2623c <mpfr_sqrt@@Base+0x11c0>  // b.any
   26228:	cmn	x10, #0x1
   2622c:	b.ne	2623c <mpfr_sqrt@@Base+0x11c0>  // b.any
   26230:	mov	x25, x0
   26234:	mov	w3, w1
   26238:	cbnz	x12, 25c38 <mpfr_sqrt@@Base+0xbbc>
   2623c:	mov	w2, #0x1                   	// #1
   26240:	bl	c3c0 <mpfr_underflow@plt>
   26244:	mov	w22, w0
   26248:	b	25bc0 <mpfr_sqrt@@Base+0xb44>
   2624c:	cmp	x10, x12
   26250:	b.ne	26118 <mpfr_sqrt@@Base+0x109c>  // b.any
   26254:	mov	x25, x0
   26258:	mov	w3, w1
   2625c:	cbnz	x9, 25a34 <mpfr_sqrt@@Base+0x9b8>
   26260:	b	26118 <mpfr_sqrt@@Base+0x109c>

0000000000026264 <mpfr_sqrt_ui@@Base>:
   26264:	sub	sp, sp, #0x80
   26268:	stp	x20, x19, [sp, #112]
   2626c:	mov	x19, x0
   26270:	stp	x29, x30, [sp, #32]
   26274:	str	x27, [sp, #48]
   26278:	stp	x26, x25, [sp, #64]
   2627c:	stp	x24, x23, [sp, #80]
   26280:	stp	x22, x21, [sp, #96]
   26284:	add	x29, sp, #0x20
   26288:	cbz	x1, 26368 <mpfr_sqrt_ui@@Base+0x104>
   2628c:	add	x9, x29, #0x18
   26290:	clz	x11, x1
   26294:	mov	w8, #0x40                  	// #64
   26298:	mov	w10, #0x1                   	// #1
   2629c:	str	x9, [sp, #24]
   262a0:	lsl	x9, x1, x11
   262a4:	mov	w20, w2
   262a8:	str	x8, [sp]
   262ac:	str	w10, [sp, #8]
   262b0:	str	x9, [x29, #24]
   262b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   262b8:	ldr	x1, [x0, #2640]
   262bc:	add	x0, x0, #0xa50
   262c0:	blr	x1
   262c4:	mrs	x24, tpidr_el0
   262c8:	ldr	w25, [x24, x0]
   262cc:	mov	x21, x0
   262d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   262d4:	ldr	x1, [x0, #2576]
   262d8:	add	x0, x0, #0xa10
   262dc:	blr	x1
   262e0:	ldr	x26, [x24, x0]
   262e4:	mov	x22, x0
   262e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   262ec:	ldr	x1, [x0, #2608]
   262f0:	add	x0, x0, #0xa30
   262f4:	blr	x1
   262f8:	ldr	x27, [x24, x0]
   262fc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   26300:	mov	x23, x0
   26304:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   26308:	str	x10, [x24, x0]
   2630c:	sub	x8, x8, x11
   26310:	mov	x1, sp
   26314:	mov	x0, x19
   26318:	str	x9, [x24, x22]
   2631c:	str	x8, [sp, #16]
   26320:	bl	c920 <mpfr_sqrt@plt>
   26324:	str	w25, [x24, x21]
   26328:	str	x26, [x24, x22]
   2632c:	str	x27, [x24, x23]
   26330:	ldr	x9, [x19, #16]
   26334:	mov	w8, w0
   26338:	cmp	x9, x27
   2633c:	b.gt	263a0 <mpfr_sqrt_ui@@Base+0x13c>
   26340:	cmp	x9, x26
   26344:	b.lt	263a0 <mpfr_sqrt_ui@@Base+0x13c>  // b.tstop
   26348:	cbz	w8, 2637c <mpfr_sqrt_ui@@Base+0x118>
   2634c:	orr	w9, w25, #0x8
   26350:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   26354:	ldr	x1, [x0, #2640]
   26358:	add	x0, x0, #0xa50
   2635c:	blr	x1
   26360:	str	w9, [x24, x0]
   26364:	b	2637c <mpfr_sqrt_ui@@Base+0x118>
   26368:	mov	w8, wzr
   2636c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   26370:	mov	w10, #0x1                   	// #1
   26374:	str	x9, [x19, #16]
   26378:	str	w10, [x19, #8]
   2637c:	ldp	x20, x19, [sp, #112]
   26380:	ldp	x22, x21, [sp, #96]
   26384:	ldp	x24, x23, [sp, #80]
   26388:	ldp	x26, x25, [sp, #64]
   2638c:	ldr	x27, [sp, #48]
   26390:	ldp	x29, x30, [sp, #32]
   26394:	mov	w0, w8
   26398:	add	sp, sp, #0x80
   2639c:	ret
   263a0:	mov	x0, x19
   263a4:	mov	w1, w8
   263a8:	mov	w2, w20
   263ac:	bl	cb10 <mpfr_check_range@plt>
   263b0:	mov	w8, w0
   263b4:	b	2637c <mpfr_sqrt_ui@@Base+0x118>

00000000000263b8 <mpfr_sub@@Base>:
   263b8:	sub	sp, sp, #0x30
   263bc:	stp	x29, x30, [sp, #16]
   263c0:	ldr	x9, [x1, #16]
   263c4:	mov	x10, #0x2                   	// #2
   263c8:	movk	x10, #0x8000, lsl #48
   263cc:	add	x12, x10, #0x3
   263d0:	str	x19, [sp, #32]
   263d4:	mov	x8, x1
   263d8:	cmp	x9, x12
   263dc:	mov	x19, x0
   263e0:	add	x29, sp, #0x10
   263e4:	b.lt	26450 <mpfr_sub@@Base+0x98>  // b.tstop
   263e8:	ldr	x11, [x2, #16]
   263ec:	cmp	x11, x12
   263f0:	b.lt	2645c <mpfr_sub@@Base+0xa4>  // b.tstop
   263f4:	ldr	w10, [x8, #8]
   263f8:	ldr	w12, [x2, #8]
   263fc:	cmp	w10, w12
   26400:	b.ne	26494 <mpfr_sub@@Base+0xdc>  // b.any
   26404:	ldr	x9, [x19]
   26408:	ldr	x10, [x8]
   2640c:	cmp	x9, x10
   26410:	b.ne	26438 <mpfr_sub@@Base+0x80>  // b.any
   26414:	ldr	x10, [x2]
   26418:	cmp	x9, x10
   2641c:	b.ne	26438 <mpfr_sub@@Base+0x80>  // b.any
   26420:	mov	x0, x19
   26424:	ldr	x19, [sp, #32]
   26428:	ldp	x29, x30, [sp, #16]
   2642c:	mov	x1, x8
   26430:	add	sp, sp, #0x30
   26434:	b	c130 <mpfr_sub1sp@plt>
   26438:	mov	x0, x19
   2643c:	mov	x1, x8
   26440:	ldr	x19, [sp, #32]
   26444:	ldp	x29, x30, [sp, #16]
   26448:	add	sp, sp, #0x30
   2644c:	b	ca50 <mpfr_sub1@plt>
   26450:	cmp	x9, x10
   26454:	b.eq	26464 <mpfr_sub@@Base+0xac>  // b.none
   26458:	ldr	x11, [x2, #16]
   2645c:	cmp	x11, x10
   26460:	b.ne	264f4 <mpfr_sub@@Base+0x13c>  // b.any
   26464:	str	x10, [x19, #16]
   26468:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2646c:	ldr	x1, [x0, #2640]
   26470:	add	x0, x0, #0xa50
   26474:	blr	x1
   26478:	mov	x8, x0
   2647c:	mrs	x9, tpidr_el0
   26480:	ldr	w10, [x9, x8]
   26484:	mov	w0, wzr
   26488:	orr	w10, w10, #0x4
   2648c:	str	w10, [x9, x8]
   26490:	b	2666c <mpfr_sub@@Base+0x2b4>
   26494:	cmp	x9, x11
   26498:	b.ge	2652c <mpfr_sub@@Base+0x174>  // b.tcont
   2649c:	ldr	x9, [x19]
   264a0:	ldr	x11, [x8]
   264a4:	cmp	w3, #0x3
   264a8:	mov	w10, #0x2                   	// #2
   264ac:	csel	w10, w10, w3, eq  // eq = none
   264b0:	cmp	w3, #0x2
   264b4:	mov	w12, #0x3                   	// #3
   264b8:	csel	w3, w12, w10, eq  // eq = none
   264bc:	cmp	x9, x11
   264c0:	b.ne	266b4 <mpfr_sub@@Base+0x2fc>  // b.any
   264c4:	ldr	x10, [x2]
   264c8:	cmp	x9, x10
   264cc:	b.ne	266b4 <mpfr_sub@@Base+0x2fc>  // b.any
   264d0:	mov	x0, x19
   264d4:	mov	x1, x2
   264d8:	mov	x2, x8
   264dc:	bl	cb90 <mpfr_add1sp@plt>
   264e0:	ldr	w8, [x19, #8]
   264e4:	neg	w0, w0
   264e8:	neg	w8, w8
   264ec:	str	w8, [x19, #8]
   264f0:	b	2666c <mpfr_sub@@Base+0x2b4>
   264f4:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   264f8:	cmp	x9, x12
   264fc:	b.ne	26560 <mpfr_sub@@Base+0x1a8>  // b.any
   26500:	ldr	w8, [x8, #8]
   26504:	cmp	x11, x12
   26508:	b.ne	26518 <mpfr_sub@@Base+0x160>  // b.any
   2650c:	ldr	w9, [x2, #8]
   26510:	cmp	w8, w9
   26514:	b.eq	26464 <mpfr_sub@@Base+0xac>  // b.none
   26518:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2651c:	mov	w0, wzr
   26520:	str	x9, [x19, #16]
   26524:	str	w8, [x19, #8]
   26528:	b	2666c <mpfr_sub@@Base+0x2b4>
   2652c:	ldr	x9, [x19]
   26530:	ldr	x10, [x8]
   26534:	cmp	x9, x10
   26538:	b.ne	266c4 <mpfr_sub@@Base+0x30c>  // b.any
   2653c:	ldr	x10, [x2]
   26540:	cmp	x9, x10
   26544:	b.ne	266c4 <mpfr_sub@@Base+0x30c>  // b.any
   26548:	mov	x0, x19
   2654c:	ldr	x19, [sp, #32]
   26550:	ldp	x29, x30, [sp, #16]
   26554:	mov	x1, x8
   26558:	add	sp, sp, #0x30
   2655c:	b	cb90 <mpfr_add1sp@plt>
   26560:	cmp	x11, x12
   26564:	b.ne	26584 <mpfr_sub@@Base+0x1cc>  // b.any
   26568:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2656c:	str	x8, [x19, #16]
   26570:	ldr	w8, [x2, #8]
   26574:	mov	w0, wzr
   26578:	neg	w8, w8
   2657c:	str	w8, [x19, #8]
   26580:	b	2666c <mpfr_sub@@Base+0x2b4>
   26584:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   26588:	cmp	x9, x12
   2658c:	str	w3, [x29, #28]
   26590:	str	x2, [sp, #8]
   26594:	b.ne	265d0 <mpfr_sub@@Base+0x218>  // b.any
   26598:	cmp	x11, x12
   2659c:	b.ne	265fc <mpfr_sub@@Base+0x244>  // b.any
   265a0:	ldr	w9, [x8, #8]
   265a4:	ldr	w8, [x29, #28]
   265a8:	cmp	w8, #0x3
   265ac:	b.ne	26644 <mpfr_sub@@Base+0x28c>  // b.any
   265b0:	cmp	w9, #0x1
   265b4:	mov	w8, #0xffffffff            	// #-1
   265b8:	b.lt	2665c <mpfr_sub@@Base+0x2a4>  // b.tstop
   265bc:	ldr	x9, [sp, #8]
   265c0:	ldr	w9, [x9, #8]
   265c4:	cmp	w9, #0x0
   265c8:	cneg	w8, w8, lt  // lt = tstop
   265cc:	b	2665c <mpfr_sub@@Base+0x2a4>
   265d0:	ldr	w3, [x8, #8]
   265d4:	cmp	x11, x12
   265d8:	str	x8, [sp]
   265dc:	b.ne	26618 <mpfr_sub@@Base+0x260>  // b.any
   265e0:	mov	x0, x19
   265e4:	ldr	x1, [sp]
   265e8:	ldr	w2, [x29, #28]
   265ec:	ldr	x19, [sp, #32]
   265f0:	ldp	x29, x30, [sp, #16]
   265f4:	add	sp, sp, #0x30
   265f8:	b	c690 <mpfr_set4@plt>
   265fc:	mov	x0, x19
   26600:	ldr	x1, [sp, #8]
   26604:	ldr	w2, [x29, #28]
   26608:	ldr	x19, [sp, #32]
   2660c:	ldp	x29, x30, [sp, #16]
   26610:	add	sp, sp, #0x30
   26614:	b	bdc0 <mpfr_neg@plt>
   26618:	ldr	x8, [sp, #8]
   2661c:	ldr	w8, [x8, #8]
   26620:	cmp	w3, w8
   26624:	b.ne	2667c <mpfr_sub@@Base+0x2c4>  // b.any
   26628:	ldp	x1, x2, [sp]
   2662c:	ldr	w3, [x29, #28]
   26630:	mov	x0, x19
   26634:	ldr	x19, [sp, #32]
   26638:	ldp	x29, x30, [sp, #16]
   2663c:	add	sp, sp, #0x30
   26640:	b	ca50 <mpfr_sub1@plt>
   26644:	mov	w8, #0x1                   	// #1
   26648:	tbz	w9, #31, 2665c <mpfr_sub@@Base+0x2a4>
   2664c:	ldr	x9, [sp, #8]
   26650:	ldr	w9, [x9, #8]
   26654:	cmp	w9, #0x1
   26658:	cneg	w8, w8, ge  // ge = tcont
   2665c:	str	w8, [x19, #8]
   26660:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   26664:	mov	w0, wzr
   26668:	str	x8, [x19, #16]
   2666c:	ldr	x19, [sp, #32]
   26670:	ldp	x29, x30, [sp, #16]
   26674:	add	sp, sp, #0x30
   26678:	ret
   2667c:	add	x8, x10, #0x2
   26680:	cmp	x9, x8
   26684:	b.eq	266dc <mpfr_sub@@Base+0x324>  // b.none
   26688:	cmp	x11, x8
   2668c:	b.eq	266dc <mpfr_sub@@Base+0x324>  // b.none
   26690:	cmp	x9, x11
   26694:	b.lt	266e8 <mpfr_sub@@Base+0x330>  // b.tstop
   26698:	ldp	x1, x2, [sp]
   2669c:	ldr	w3, [x29, #28]
   266a0:	mov	x0, x19
   266a4:	ldr	x19, [sp, #32]
   266a8:	ldp	x29, x30, [sp, #16]
   266ac:	add	sp, sp, #0x30
   266b0:	b	c770 <mpfr_add1@plt>
   266b4:	mov	x0, x19
   266b8:	mov	x1, x2
   266bc:	mov	x2, x8
   266c0:	b	2670c <mpfr_sub@@Base+0x354>
   266c4:	mov	x0, x19
   266c8:	mov	x1, x8
   266cc:	ldr	x19, [sp, #32]
   266d0:	ldp	x29, x30, [sp, #16]
   266d4:	add	sp, sp, #0x30
   266d8:	b	c770 <mpfr_add1@plt>
   266dc:	ldp	x0, x1, [sp]
   266e0:	bl	ca90 <mpfr_ubf_exp_less_p@plt>
   266e4:	cbz	w0, 26698 <mpfr_sub@@Base+0x2e0>
   266e8:	ldr	w8, [x29, #28]
   266ec:	ldp	x2, x1, [sp]
   266f0:	mov	w9, #0x2                   	// #2
   266f4:	mov	x0, x19
   266f8:	cmp	w8, #0x3
   266fc:	csel	w9, w9, w8, eq  // eq = none
   26700:	cmp	w8, #0x2
   26704:	mov	w8, #0x3                   	// #3
   26708:	csel	w3, w8, w9, eq  // eq = none
   2670c:	bl	c770 <mpfr_add1@plt>
   26710:	b	264e0 <mpfr_sub@@Base+0x128>

0000000000026714 <mpfr_sub1@@Base>:
   26714:	stp	x29, x30, [sp, #-96]!
   26718:	stp	x28, x27, [sp, #16]
   2671c:	stp	x26, x25, [sp, #32]
   26720:	stp	x24, x23, [sp, #48]
   26724:	stp	x22, x21, [sp, #64]
   26728:	stp	x20, x19, [sp, #80]
   2672c:	mov	x29, sp
   26730:	sub	sp, sp, #0x50
   26734:	stur	xzr, [x29, #-16]
   26738:	ldr	x8, [x0]
   2673c:	ldr	x20, [x0, #24]
   26740:	mov	x19, x2
   26744:	mov	x22, x1
   26748:	sub	x9, x8, #0x1
   2674c:	mov	x23, x0
   26750:	add	x8, x8, #0x3e
   26754:	cmp	x9, #0x0
   26758:	sub	x2, x29, #0x8
   2675c:	mov	x0, x1
   26760:	mov	x1, x19
   26764:	mov	w25, w3
   26768:	csel	x21, x8, x9, lt  // lt = tstop
   2676c:	bl	be00 <mpfr_cmp2@plt>
   26770:	cbz	w0, 26edc <mpfr_sub1@@Base+0x7c8>
   26774:	ldr	w8, [x22, #8]
   26778:	cmp	w0, #0x0
   2677c:	stur	w25, [x29, #-28]
   26780:	csel	x25, x19, x22, lt  // lt = tstop
   26784:	cneg	w8, w8, lt  // lt = tstop
   26788:	str	w8, [x23, #8]
   2678c:	ldr	x24, [x25, #16]
   26790:	mov	x8, #0x4                   	// #4
   26794:	asr	x9, x21, #6
   26798:	movk	x8, #0x8000, lsl #48
   2679c:	stur	x9, [x29, #-48]
   267a0:	csel	x19, x22, x19, lt  // lt = tstop
   267a4:	cmp	x24, x8
   267a8:	add	x9, x9, #0x1
   267ac:	stur	x9, [x29, #-24]
   267b0:	b.eq	26efc <mpfr_sub1@@Base+0x7e8>  // b.none
   267b4:	ldr	x9, [x19, #16]
   267b8:	cmp	x9, x8
   267bc:	b.eq	26f08 <mpfr_sub1@@Base+0x7f4>  // b.none
   267c0:	sub	x28, x24, x9
   267c4:	ldr	x26, [x23]
   267c8:	ldr	x10, [x25]
   267cc:	cmp	x26, x10
   267d0:	csel	x8, x26, x10, gt
   267d4:	add	x8, x8, #0x2
   267d8:	cmp	x8, x28
   267dc:	b.le	26f1c <mpfr_sub1@@Base+0x808>
   267e0:	sub	x8, x10, #0x1
   267e4:	add	x9, x10, #0x3e
   267e8:	ldur	x10, [x29, #-8]
   267ec:	cmp	x8, #0x0
   267f0:	csel	x8, x9, x8, lt  // lt = tstop
   267f4:	stp	x24, x26, [x29, #-64]
   267f8:	neg	w9, w10
   267fc:	and	w26, w9, #0x3f
   26800:	add	x9, x10, x26
   26804:	asr	x8, x8, #6
   26808:	add	x10, x9, #0x3f
   2680c:	cmp	x9, #0x0
   26810:	add	x27, x8, #0x1
   26814:	csel	x21, x10, x9, lt  // lt = tstop
   26818:	stur	x23, [x29, #-40]
   2681c:	cbz	w26, 26f44 <mpfr_sub1@@Base+0x830>
   26820:	add	x22, x8, #0x2
   26824:	lsl	x1, x22, #3
   26828:	cmp	x1, #0x4, lsl #12
   2682c:	b.hi	270e0 <mpfr_sub1@@Base+0x9cc>  // b.pmore
   26830:	add	x9, x1, #0xf
   26834:	mov	x8, sp
   26838:	and	x9, x9, #0xfffffffffffffff0
   2683c:	sub	x24, x8, x9
   26840:	mov	sp, x24
   26844:	ldr	x1, [x25, #24]
   26848:	add	x0, x24, #0x8
   2684c:	mov	x2, x27
   26850:	mov	w3, w26
   26854:	bl	bd30 <__gmpn_rshift@plt>
   26858:	mov	x27, x22
   2685c:	str	x0, [x24]
   26860:	ldr	x8, [x19]
   26864:	ldur	w9, [x29, #-8]
   26868:	sub	x10, x8, #0x1
   2686c:	add	x8, x8, #0x3e
   26870:	cmp	x10, #0x0
   26874:	csel	x8, x8, x10, lt  // lt = tstop
   26878:	sub	w9, w28, w9
   2687c:	asr	x8, x8, #6
   26880:	ands	w22, w9, #0x3f
   26884:	add	x23, x8, #0x1
   26888:	b.eq	26f98 <mpfr_sub1@@Base+0x884>  // b.none
   2688c:	add	x25, x8, #0x2
   26890:	lsl	x1, x25, #3
   26894:	cmp	x1, #0x4, lsl #12
   26898:	b.hi	270f0 <mpfr_sub1@@Base+0x9dc>  // b.pmore
   2689c:	add	x9, x1, #0xf
   268a0:	mov	x8, sp
   268a4:	and	x9, x9, #0xfffffffffffffff0
   268a8:	sub	x26, x8, x9
   268ac:	mov	sp, x26
   268b0:	ldr	x1, [x19, #24]
   268b4:	add	x0, x26, #0x8
   268b8:	mov	x2, x23
   268bc:	mov	w3, w22
   268c0:	bl	bd30 <__gmpn_rshift@plt>
   268c4:	mov	x23, x25
   268c8:	str	x0, [x26]
   268cc:	ldur	x10, [x29, #-8]
   268d0:	ldur	x19, [x29, #-24]
   268d4:	asr	x8, x21, #6
   268d8:	subs	x9, x28, x10
   268dc:	b.le	268f4 <mpfr_sub1@@Base+0x1e0>
   268e0:	add	x10, x9, #0x3f
   268e4:	cmp	x9, #0x0
   268e8:	csel	x9, x10, x9, lt  // lt = tstop
   268ec:	neg	x21, x9, asr #6
   268f0:	b	2690c <mpfr_sub1@@Base+0x1f8>
   268f4:	sub	x9, x10, x28
   268f8:	add	x10, x9, #0x3f
   268fc:	add	x9, x9, #0x7e
   26900:	cmp	x10, #0x0
   26904:	csel	x9, x9, x10, lt  // lt = tstop
   26908:	asr	x21, x9, #6
   2690c:	ldur	x28, [x29, #-48]
   26910:	add	x22, x8, x19
   26914:	subs	x9, x22, x27
   26918:	b.gt	26fe0 <mpfr_sub1@@Base+0x8cc>
   2691c:	add	x8, x24, x27, lsl #3
   26920:	sub	x1, x8, x22, lsl #3
   26924:	cmp	x20, x1
   26928:	b.eq	26938 <mpfr_sub1@@Base+0x224>  // b.none
   2692c:	lsl	x2, x19, #3
   26930:	mov	x0, x20
   26934:	bl	ba70 <memcpy@plt>
   26938:	ldur	w25, [x29, #-28]
   2693c:	add	x19, x21, x19
   26940:	cmp	x19, #0x1
   26944:	b.lt	26a4c <mpfr_sub1@@Base+0x338>  // b.tstop
   26948:	tbnz	x21, #63, 2697c <mpfr_sub1@@Base+0x268>
   2694c:	cmp	x23, x19
   26950:	b.ge	269b8 <mpfr_sub1@@Base+0x2a4>  // b.tcont
   26954:	subs	x8, x21, x23
   26958:	b.ge	26a4c <mpfr_sub1@@Base+0x338>  // b.tcont
   2695c:	ldur	x9, [x29, #-24]
   26960:	sub	x3, x23, x21
   26964:	mov	x2, x26
   26968:	add	x9, x20, x9, lsl #3
   2696c:	add	x0, x9, x8, lsl #3
   26970:	mov	x1, x0
   26974:	bl	beb0 <__gmpn_sub_n@plt>
   26978:	b	26a4c <mpfr_sub1@@Base+0x338>
   2697c:	stur	x27, [x29, #-72]
   26980:	mov	x3, x23
   26984:	mov	x27, x24
   26988:	mov	x24, x28
   2698c:	cmp	x23, x19
   26990:	b.ge	269d4 <mpfr_sub1@@Base+0x2c0>  // b.tcont
   26994:	ldur	x28, [x29, #-24]
   26998:	mov	x2, x26
   2699c:	mov	x23, x3
   269a0:	add	x8, x20, x28, lsl #3
   269a4:	add	x8, x8, x21, lsl #3
   269a8:	sub	x0, x8, x3, lsl #3
   269ac:	mov	x1, x0
   269b0:	bl	beb0 <__gmpn_sub_n@plt>
   269b4:	b	269f4 <mpfr_sub1@@Base+0x2e0>
   269b8:	ldur	x3, [x29, #-24]
   269bc:	add	x8, x26, x23, lsl #3
   269c0:	sub	x2, x8, x19, lsl #3
   269c4:	mov	x0, x20
   269c8:	mov	x1, x20
   269cc:	bl	beb0 <__gmpn_sub_n@plt>
   269d0:	b	26a4c <mpfr_sub1@@Base+0x338>
   269d4:	add	x8, x26, x3, lsl #3
   269d8:	mov	x23, x3
   269dc:	sub	x2, x8, x19, lsl #3
   269e0:	mov	x0, x20
   269e4:	mov	x1, x20
   269e8:	mov	x3, x19
   269ec:	bl	beb0 <__gmpn_sub_n@plt>
   269f0:	ldur	x28, [x29, #-24]
   269f4:	add	x8, x20, x28, lsl #3
   269f8:	lsl	x9, x21, #3
   269fc:	ldr	x10, [x8, x9]
   26a00:	mov	x28, x24
   26a04:	mov	x24, x27
   26a08:	ldur	x27, [x29, #-72]
   26a0c:	subs	x10, x10, x0
   26a10:	str	x10, [x8, x9]
   26a14:	b.cs	26a4c <mpfr_sub1@@Base+0x338>  // b.hs, b.nlast
   26a18:	add	x9, x21, x28
   26a1c:	neg	x8, x21
   26a20:	add	x9, x20, x9, lsl #3
   26a24:	mov	w10, #0x2                   	// #2
   26a28:	sub	x11, x10, #0x1
   26a2c:	cmp	x11, x8
   26a30:	b.ge	26a4c <mpfr_sub1@@Base+0x338>  // b.tcont
   26a34:	lsl	x11, x10, #3
   26a38:	ldr	x12, [x9, x11]
   26a3c:	add	x10, x10, #0x1
   26a40:	sub	x13, x12, #0x1
   26a44:	str	x13, [x9, x11]
   26a48:	cbz	x12, 26a28 <mpfr_sub1@@Base+0x314>
   26a4c:	ldur	x8, [x29, #-24]
   26a50:	ldur	x11, [x29, #-56]
   26a54:	ldr	x9, [x20]
   26a58:	mov	w10, #0x1                   	// #1
   26a5c:	lsl	x8, x8, #6
   26a60:	sub	x14, x8, x11
   26a64:	lsl	x8, x10, x14
   26a68:	sub	x10, x8, #0x1
   26a6c:	and	x10, x9, x10
   26a70:	sub	x9, x9, x10
   26a74:	cmp	w25, #0x5
   26a78:	str	x9, [x20]
   26a7c:	b.eq	26aac <mpfr_sub1@@Base+0x398>  // b.none
   26a80:	cbnz	w25, 26ac0 <mpfr_sub1@@Base+0x3ac>
   26a84:	cbz	w14, 2723c <mpfr_sub1@@Base+0xb28>
   26a88:	sub	w11, w14, #0x1
   26a8c:	mov	w12, #0x1                   	// #1
   26a90:	lsl	x11, x12, x11
   26a94:	cmp	x10, x11
   26a98:	b.ls	26afc <mpfr_sub1@@Base+0x3e8>  // b.plast
   26a9c:	ldur	x22, [x29, #-40]
   26aa0:	ldur	x27, [x29, #-64]
   26aa4:	mov	w25, wzr
   26aa8:	b	26d8c <mpfr_sub1@@Base+0x678>
   26aac:	mov	w19, wzr
   26ab0:	mov	w21, wzr
   26ab4:	ldur	x22, [x29, #-40]
   26ab8:	ldur	x27, [x29, #-64]
   26abc:	b	26ddc <mpfr_sub1@@Base+0x6c8>
   26ac0:	ldur	x11, [x29, #-40]
   26ac4:	ldr	w11, [x11, #8]
   26ac8:	add	w11, w25, w11, lsr #31
   26acc:	cmp	w11, #0x3
   26ad0:	csinc	w25, w25, wzr, ne  // ne = any
   26ad4:	cbz	x10, 26b28 <mpfr_sub1@@Base+0x414>
   26ad8:	ldur	x22, [x29, #-40]
   26adc:	ldur	x27, [x29, #-64]
   26ae0:	cmp	w25, #0x1
   26ae4:	b.ne	26d8c <mpfr_sub1@@Base+0x678>  // b.any
   26ae8:	mov	w8, #0x1                   	// #1
   26aec:	mov	w21, wzr
   26af0:	stur	w8, [x29, #-28]
   26af4:	mov	w19, #0xffffffff            	// #-1
   26af8:	b	26ddc <mpfr_sub1@@Base+0x6c8>
   26afc:	cbz	x10, 26b18 <mpfr_sub1@@Base+0x404>
   26b00:	cmp	x10, x11
   26b04:	b.cs	26b18 <mpfr_sub1@@Base+0x404>  // b.hs, b.nlast
   26b08:	mov	w21, wzr
   26b0c:	stur	wzr, [x29, #-28]
   26b10:	mov	w19, #0xffffffff            	// #-1
   26b14:	b	26ab4 <mpfr_sub1@@Base+0x3a0>
   26b18:	cmp	x10, #0x0
   26b1c:	cset	w10, ne  // ne = any
   26b20:	mov	w25, wzr
   26b24:	lsl	w10, w10, #1
   26b28:	sub	x11, x27, x22
   26b2c:	sub	x13, x23, x19
   26b30:	cmp	x11, #0x0
   26b34:	cset	w16, gt
   26b38:	cmp	x13, #0x0
   26b3c:	cset	w15, gt
   26b40:	b.gt	26ba8 <mpfr_sub1@@Base+0x494>
   26b44:	cmp	x11, #0x1
   26b48:	b.ge	26ba8 <mpfr_sub1@@Base+0x494>  // b.tcont
   26b4c:	ldur	x22, [x29, #-40]
   26b50:	ldur	x27, [x29, #-64]
   26b54:	mov	w19, wzr
   26b58:	cbnz	w25, 26c40 <mpfr_sub1@@Base+0x52c>
   26b5c:	cbz	w10, 26c40 <mpfr_sub1@@Base+0x52c>
   26b60:	tst	x9, x8
   26b64:	b.eq	26d58 <mpfr_sub1@@Base+0x644>  // b.none
   26b68:	tbz	w10, #31, 26aa4 <mpfr_sub1@@Base+0x390>
   26b6c:	subs	x8, x9, x8
   26b70:	str	x8, [x20]
   26b74:	b.cs	26d4c <mpfr_sub1@@Base+0x638>  // b.hs, b.nlast
   26b78:	mov	w8, #0x1                   	// #1
   26b7c:	mov	w19, #0xffffffff            	// #-1
   26b80:	cmp	x8, x28
   26b84:	b.gt	26d4c <mpfr_sub1@@Base+0x638>
   26b88:	lsl	x9, x8, #3
   26b8c:	ldr	x10, [x20, x9]
   26b90:	add	x8, x8, #0x1
   26b94:	sub	x11, x10, #0x1
   26b98:	str	x11, [x20, x9]
   26b9c:	cbz	x10, 26b80 <mpfr_sub1@@Base+0x46c>
   26ba0:	mov	w21, wzr
   26ba4:	b	26de8 <mpfr_sub1@@Base+0x6d4>
   26ba8:	ldur	x22, [x29, #-40]
   26bac:	ldur	x27, [x29, #-64]
   26bb0:	cmp	w25, #0x1
   26bb4:	orr	w12, w25, w14
   26bb8:	b.ne	26c48 <mpfr_sub1@@Base+0x534>  // b.any
   26bbc:	mov	w14, wzr
   26bc0:	tbz	w16, #0, 26bd4 <mpfr_sub1@@Base+0x4c0>
   26bc4:	sub	x11, x11, #0x1
   26bc8:	ldr	x16, [x24, x11, lsl #3]
   26bcc:	tbnz	w15, #0, 26bdc <mpfr_sub1@@Base+0x4c8>
   26bd0:	b	26be8 <mpfr_sub1@@Base+0x4d4>
   26bd4:	mov	x16, xzr
   26bd8:	tbz	w15, #0, 26be8 <mpfr_sub1@@Base+0x4d4>
   26bdc:	cmp	x13, x23
   26be0:	sub	x13, x13, #0x1
   26be4:	b.le	26c34 <mpfr_sub1@@Base+0x520>
   26be8:	mov	x15, xzr
   26bec:	cbnz	w10, 26c00 <mpfr_sub1@@Base+0x4ec>
   26bf0:	cmp	x16, x15
   26bf4:	orr	w10, w14, #0xfffffffe
   26bf8:	cset	w15, hi  // hi = pmore
   26bfc:	csel	w10, w10, w15, cc  // cc = lo, ul, last
   26c00:	orr	w14, w12, w14
   26c04:	tbnz	w10, #31, 26b6c <mpfr_sub1@@Base+0x458>
   26c08:	cbnz	w10, 26ae8 <mpfr_sub1@@Base+0x3d4>
   26c0c:	cmp	x11, #0x0
   26c10:	cset	w16, gt
   26c14:	cmp	x13, #0x0
   26c18:	mov	w10, wzr
   26c1c:	cset	w15, gt
   26c20:	mov	w14, #0x1                   	// #1
   26c24:	b.gt	26bc0 <mpfr_sub1@@Base+0x4ac>
   26c28:	cmp	x11, #0x0
   26c2c:	b.gt	26bc0 <mpfr_sub1@@Base+0x4ac>
   26c30:	b	26d70 <mpfr_sub1@@Base+0x65c>
   26c34:	ldr	x15, [x26, x13, lsl #3]
   26c38:	cbnz	w10, 26c00 <mpfr_sub1@@Base+0x4ec>
   26c3c:	b	26bf0 <mpfr_sub1@@Base+0x4dc>
   26c40:	mov	w21, w19
   26c44:	b	26dd8 <mpfr_sub1@@Base+0x6c4>
   26c48:	mov	w17, wzr
   26c4c:	mov	w19, #0x1                   	// #1
   26c50:	tbz	w16, #0, 26c64 <mpfr_sub1@@Base+0x550>
   26c54:	sub	x11, x11, #0x1
   26c58:	ldr	x16, [x24, x11, lsl #3]
   26c5c:	tbnz	w15, #0, 26c6c <mpfr_sub1@@Base+0x558>
   26c60:	b	26c78 <mpfr_sub1@@Base+0x564>
   26c64:	mov	x16, xzr
   26c68:	tbz	w15, #0, 26c78 <mpfr_sub1@@Base+0x564>
   26c6c:	cmp	x13, x23
   26c70:	sub	x13, x13, #0x1
   26c74:	b.le	26c98 <mpfr_sub1@@Base+0x584>
   26c78:	mov	x15, xzr
   26c7c:	cbz	w10, 26ca0 <mpfr_sub1@@Base+0x58c>
   26c80:	orr	w17, w12, w17
   26c84:	cbz	w17, 26cb8 <mpfr_sub1@@Base+0x5a4>
   26c88:	tbnz	w10, #31, 26cfc <mpfr_sub1@@Base+0x5e8>
   26c8c:	cbz	w10, 26d28 <mpfr_sub1@@Base+0x614>
   26c90:	cbz	w25, 26cd8 <mpfr_sub1@@Base+0x5c4>
   26c94:	b	26d8c <mpfr_sub1@@Base+0x678>
   26c98:	ldr	x15, [x26, x13, lsl #3]
   26c9c:	cbnz	w10, 26c80 <mpfr_sub1@@Base+0x56c>
   26ca0:	cmp	x16, x15
   26ca4:	orr	w10, w17, #0xfffffffe
   26ca8:	cset	w18, hi  // hi = pmore
   26cac:	csel	w10, w10, w18, cc  // cc = lo, ul, last
   26cb0:	orr	w17, w12, w17
   26cb4:	cbnz	w17, 26c88 <mpfr_sub1@@Base+0x574>
   26cb8:	tbnz	w10, #31, 26cec <mpfr_sub1@@Base+0x5d8>
   26cbc:	eor	x17, x16, #0x8000000000000000
   26cc0:	cmp	x15, #0x0
   26cc4:	csel	x16, x16, x17, ge  // ge = tcont
   26cc8:	cbz	w10, 26d28 <mpfr_sub1@@Base+0x614>
   26ccc:	orr	x15, x15, #0x8000000000000000
   26cd0:	mov	w10, #0x2                   	// #2
   26cd4:	cbnz	w25, 26d8c <mpfr_sub1@@Base+0x678>
   26cd8:	cmp	x16, x15
   26cdc:	b.hi	26d7c <mpfr_sub1@@Base+0x668>  // b.pmore
   26ce0:	cmp	x16, x15
   26ce4:	b.cs	26d28 <mpfr_sub1@@Base+0x614>  // b.hs, b.nlast
   26ce8:	b	26ebc <mpfr_sub1@@Base+0x7a8>
   26cec:	tbnz	x15, #63, 26cf8 <mpfr_sub1@@Base+0x5e4>
   26cf0:	eor	x16, x16, #0x8000000000000000
   26cf4:	b	26cfc <mpfr_sub1@@Base+0x5e8>
   26cf8:	eor	x15, x15, #0x8000000000000000
   26cfc:	cbnz	w25, 26dbc <mpfr_sub1@@Base+0x6a8>
   26d00:	mov	w21, wzr
   26d04:	cmn	w10, #0x1
   26d08:	b.eq	26ed0 <mpfr_sub1@@Base+0x7bc>  // b.none
   26d0c:	cmp	w14, #0x0
   26d10:	b.gt	26ed0 <mpfr_sub1@@Base+0x7bc>
   26d14:	cmp	x16, x15
   26d18:	mov	w15, w21
   26d1c:	stur	w21, [x29, #-28]
   26d20:	b.hi	26ddc <mpfr_sub1@@Base+0x6c8>  // b.pmore
   26d24:	b.cc	26b6c <mpfr_sub1@@Base+0x458>  // b.lo, b.ul, b.last
   26d28:	cmp	x11, #0x0
   26d2c:	cset	w16, gt
   26d30:	cmp	x13, #0x0
   26d34:	cset	w15, gt
   26d38:	mov	w17, #0x1                   	// #1
   26d3c:	b.gt	26c50 <mpfr_sub1@@Base+0x53c>
   26d40:	cmp	x11, #0x0
   26d44:	b.gt	26c50 <mpfr_sub1@@Base+0x53c>
   26d48:	b	26b54 <mpfr_sub1@@Base+0x440>
   26d4c:	mov	w21, wzr
   26d50:	mov	w19, #0xffffffff            	// #-1
   26d54:	b	26de8 <mpfr_sub1@@Base+0x6d4>
   26d58:	cmp	w10, #0x1
   26d5c:	mov	w8, #0x1                   	// #1
   26d60:	mov	w21, wzr
   26d64:	stur	wzr, [x29, #-28]
   26d68:	cneg	w19, w8, ge  // ge = tcont
   26d6c:	b	26ddc <mpfr_sub1@@Base+0x6c8>
   26d70:	mov	w19, w10
   26d74:	mov	w21, w10
   26d78:	b	26dd8 <mpfr_sub1@@Base+0x6c4>
   26d7c:	cmp	w10, #0x2
   26d80:	mov	w21, wzr
   26d84:	b.ne	26ecc <mpfr_sub1@@Base+0x7b8>  // b.any
   26d88:	mov	w25, w21
   26d8c:	adds	x8, x9, x8
   26d90:	str	x8, [x20]
   26d94:	b.cc	26dbc <mpfr_sub1@@Base+0x6a8>  // b.lo, b.ul, b.last
   26d98:	mov	w8, #0x1                   	// #1
   26d9c:	cmp	x8, x28
   26da0:	b.gt	26dc8 <mpfr_sub1@@Base+0x6b4>
   26da4:	lsl	x9, x8, #3
   26da8:	ldr	x10, [x20, x9]
   26dac:	add	x8, x8, #0x1
   26db0:	adds	x10, x10, #0x1
   26db4:	str	x10, [x20, x9]
   26db8:	b.cs	26d9c <mpfr_sub1@@Base+0x688>  // b.hs, b.nlast
   26dbc:	mov	w21, wzr
   26dc0:	mov	w19, #0x1                   	// #1
   26dc4:	b	26dd8 <mpfr_sub1@@Base+0x6c4>
   26dc8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   26dcc:	mov	w19, #0x1                   	// #1
   26dd0:	mov	w21, #0x1                   	// #1
   26dd4:	str	x8, [x20, x28, lsl #3]
   26dd8:	stur	w25, [x29, #-28]
   26ddc:	ldr	x8, [x20, x28, lsl #3]
   26de0:	tbz	x8, #63, 27100 <mpfr_sub1@@Base+0x9ec>
   26de4:	ldur	w25, [x29, #-28]
   26de8:	ldur	x0, [x29, #-16]
   26dec:	cbnz	x0, 27018 <mpfr_sub1@@Base+0x904>
   26df0:	ldur	x8, [x29, #-8]
   26df4:	cbz	x8, 27024 <mpfr_sub1@@Base+0x910>
   26df8:	sub	x8, x8, x21
   26dfc:	stur	x8, [x29, #-8]
   26e00:	sub	x20, x27, x8
   26e04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   26e08:	ldr	x1, [x0, #2608]
   26e0c:	add	x0, x0, #0xa30
   26e10:	blr	x1
   26e14:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   26e18:	cmp	x27, x8
   26e1c:	mrs	x21, tpidr_el0
   26e20:	b.ne	26e30 <mpfr_sub1@@Base+0x71c>  // b.any
   26e24:	ldr	x8, [x21, x0]
   26e28:	cmp	x20, x8
   26e2c:	b.le	27084 <mpfr_sub1@@Base+0x970>
   26e30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   26e34:	ldr	x1, [x0, #2576]
   26e38:	add	x0, x0, #0xa10
   26e3c:	blr	x1
   26e40:	ldr	x8, [x21, x0]
   26e44:	cmp	x20, x8
   26e48:	b.lt	270b8 <mpfr_sub1@@Base+0x9a4>  // b.tstop
   26e4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   26e50:	ldr	x1, [x0, #2608]
   26e54:	add	x0, x0, #0xa30
   26e58:	blr	x1
   26e5c:	ldr	x8, [x21, x0]
   26e60:	cmp	x20, x8
   26e64:	b.gt	2706c <mpfr_sub1@@Base+0x958>
   26e68:	ldr	w8, [x22, #8]
   26e6c:	str	x20, [x22, #16]
   26e70:	mul	w24, w8, w19
   26e74:	cbz	w24, 26e98 <mpfr_sub1@@Base+0x784>
   26e78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   26e7c:	ldr	x1, [x0, #2640]
   26e80:	add	x0, x0, #0xa50
   26e84:	blr	x1
   26e88:	mrs	x8, tpidr_el0
   26e8c:	ldr	w9, [x8, x0]
   26e90:	orr	w9, w9, #0x8
   26e94:	str	w9, [x8, x0]
   26e98:	mov	w0, w24
   26e9c:	mov	sp, x29
   26ea0:	ldp	x20, x19, [sp, #80]
   26ea4:	ldp	x22, x21, [sp, #64]
   26ea8:	ldp	x24, x23, [sp, #48]
   26eac:	ldp	x26, x25, [sp, #32]
   26eb0:	ldp	x28, x27, [sp, #16]
   26eb4:	ldp	x29, x30, [sp], #96
   26eb8:	ret
   26ebc:	mov	w21, wzr
   26ec0:	stur	wzr, [x29, #-28]
   26ec4:	mov	w19, #0xffffffff            	// #-1
   26ec8:	b	26ddc <mpfr_sub1@@Base+0x6c8>
   26ecc:	mov	w19, #0xffffffff            	// #-1
   26ed0:	mov	w8, w21
   26ed4:	stur	w21, [x29, #-28]
   26ed8:	b	26ddc <mpfr_sub1@@Base+0x6c8>
   26edc:	cmp	w25, #0x3
   26ee0:	mov	w8, #0xffffffff            	// #-1
   26ee4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   26ee8:	cneg	w8, w8, ne  // ne = any
   26eec:	mov	w24, wzr
   26ef0:	str	w8, [x23, #8]
   26ef4:	str	x9, [x23, #16]
   26ef8:	b	26e98 <mpfr_sub1@@Base+0x784>
   26efc:	add	x0, x25, #0x20
   26f00:	bl	bc90 <mpfr_ubf_zexp2exp@plt>
   26f04:	mov	x24, x0
   26f08:	mov	x0, x25
   26f0c:	mov	x1, x19
   26f10:	bl	cae0 <mpfr_ubf_diff_exp@plt>
   26f14:	mov	x28, x0
   26f18:	b	267c4 <mpfr_sub1@@Base+0xb0>
   26f1c:	ldur	w8, [x29, #-28]
   26f20:	cmp	w8, #0x5
   26f24:	b.ne	27110 <mpfr_sub1@@Base+0x9fc>  // b.any
   26f28:	ldr	w3, [x23, #8]
   26f2c:	mov	w2, #0x1                   	// #1
   26f30:	mov	x0, x23
   26f34:	mov	x1, x25
   26f38:	bl	c690 <mpfr_set4@plt>
   26f3c:	mov	w24, w0
   26f40:	b	26e98 <mpfr_sub1@@Base+0x784>
   26f44:	ldr	x24, [x25, #24]
   26f48:	cmp	x20, x24
   26f4c:	b.ne	26860 <mpfr_sub1@@Base+0x14c>  // b.any
   26f50:	lsl	x22, x27, #3
   26f54:	mov	x23, x27
   26f58:	cmp	x22, #0x4, lsl #12
   26f5c:	b.hi	27630 <mpfr_sub1@@Base+0xf1c>  // b.pmore
   26f60:	add	x9, x22, #0xf
   26f64:	mov	x8, sp
   26f68:	and	x9, x9, #0xfffffffffffffff0
   26f6c:	sub	x8, x8, x9
   26f70:	mov	x24, x8
   26f74:	mov	sp, x8
   26f78:	cmp	x20, x24
   26f7c:	b.eq	27648 <mpfr_sub1@@Base+0xf34>  // b.none
   26f80:	mov	x0, x24
   26f84:	mov	x1, x20
   26f88:	mov	x2, x22
   26f8c:	bl	ba70 <memcpy@plt>
   26f90:	mov	x27, x23
   26f94:	b	26860 <mpfr_sub1@@Base+0x14c>
   26f98:	ldr	x26, [x19, #24]
   26f9c:	cmp	x20, x26
   26fa0:	b.ne	268cc <mpfr_sub1@@Base+0x1b8>  // b.any
   26fa4:	lsl	x19, x23, #3
   26fa8:	cmp	x19, #0x4, lsl #12
   26fac:	b.hi	2756c <mpfr_sub1@@Base+0xe58>  // b.pmore
   26fb0:	add	x9, x19, #0xf
   26fb4:	mov	x8, sp
   26fb8:	and	x9, x9, #0xfffffffffffffff0
   26fbc:	sub	x26, x8, x9
   26fc0:	mov	sp, x26
   26fc4:	cmp	x20, x26
   26fc8:	b.eq	27584 <mpfr_sub1@@Base+0xe70>  // b.none
   26fcc:	mov	x0, x26
   26fd0:	mov	x1, x20
   26fd4:	mov	x2, x19
   26fd8:	bl	ba70 <memcpy@plt>
   26fdc:	b	268cc <mpfr_sub1@@Base+0x1b8>
   26fe0:	subs	x25, x27, x8
   26fe4:	b.le	27228 <mpfr_sub1@@Base+0xb14>
   26fe8:	lsl	x19, x9, #3
   26fec:	mov	x0, x20
   26ff0:	mov	w1, wzr
   26ff4:	mov	x2, x19
   26ff8:	bl	c150 <memset@plt>
   26ffc:	add	x0, x20, x19
   27000:	ldur	x19, [x29, #-24]
   27004:	cmp	x0, x24
   27008:	b.eq	26938 <mpfr_sub1@@Base+0x224>  // b.none
   2700c:	lsl	x2, x25, #3
   27010:	mov	x1, x24
   27014:	b	26934 <mpfr_sub1@@Base+0x220>
   27018:	bl	c400 <mpfr_tmp_free@plt>
   2701c:	ldur	x8, [x29, #-8]
   27020:	cbnz	x8, 26df8 <mpfr_sub1@@Base+0x6e4>
   27024:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27028:	ldr	x1, [x0, #2608]
   2702c:	add	x0, x0, #0xa30
   27030:	blr	x1
   27034:	mrs	x8, tpidr_el0
   27038:	ldr	x9, [x8, x0]
   2703c:	sub	x9, x9, x21
   27040:	cmp	x27, x9
   27044:	b.gt	2706c <mpfr_sub1@@Base+0x958>
   27048:	add	x20, x27, x21
   2704c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27050:	ldr	x1, [x0, #2576]
   27054:	add	x0, x0, #0xa10
   27058:	blr	x1
   2705c:	ldr	x8, [x8, x0]
   27060:	cmp	x20, x8
   27064:	b.ge	26e68 <mpfr_sub1@@Base+0x754>  // b.tcont
   27068:	b	270b8 <mpfr_sub1@@Base+0x9a4>
   2706c:	ldr	w2, [x22, #8]
   27070:	mov	x0, x22
   27074:	mov	w1, w25
   27078:	bl	bf90 <mpfr_overflow@plt>
   2707c:	mov	w24, w0
   27080:	b	26e98 <mpfr_sub1@@Base+0x784>
   27084:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   27088:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2708c:	add	x0, x0, #0xde0
   27090:	add	x2, x2, #0xde7
   27094:	mov	w1, #0x298                 	// #664
   27098:	bl	cb20 <mpfr_assert_fail@plt>
   2709c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   270a0:	ldr	x1, [x0, #2576]
   270a4:	add	x0, x0, #0xa10
   270a8:	blr	x1
   270ac:	ldr	x8, [x21, x0]
   270b0:	cmp	x20, x8
   270b4:	b.ge	26e4c <mpfr_sub1@@Base+0x738>  // b.tcont
   270b8:	cbnz	w25, 272b0 <mpfr_sub1@@Base+0xb9c>
   270bc:	sub	x8, x8, #0x1
   270c0:	cmp	x20, x8
   270c4:	b.lt	270d8 <mpfr_sub1@@Base+0x9c4>  // b.tstop
   270c8:	tbnz	w19, #31, 272ac <mpfr_sub1@@Base+0xb98>
   270cc:	mov	x0, x22
   270d0:	bl	bf50 <mpfr_powerof2_raw@plt>
   270d4:	cbz	w0, 272ac <mpfr_sub1@@Base+0xb98>
   270d8:	mov	w25, #0x1                   	// #1
   270dc:	b	272b0 <mpfr_sub1@@Base+0xb9c>
   270e0:	sub	x0, x29, #0x10
   270e4:	bl	be10 <mpfr_tmp_allocate@plt>
   270e8:	mov	x24, x0
   270ec:	b	26844 <mpfr_sub1@@Base+0x130>
   270f0:	sub	x0, x29, #0x10
   270f4:	bl	be10 <mpfr_tmp_allocate@plt>
   270f8:	mov	x26, x0
   270fc:	b	268b0 <mpfr_sub1@@Base+0x19c>
   27100:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   27104:	mov	w21, #0x1                   	// #1
   27108:	str	x8, [x20, x28, lsl #3]
   2710c:	b	26de4 <mpfr_sub1@@Base+0x6d0>
   27110:	sub	x8, x10, #0x1
   27114:	add	x9, x10, #0x3e
   27118:	sub	x11, x26, #0x1
   2711c:	cmp	x8, #0x0
   27120:	ldr	x22, [x23, #24]
   27124:	add	x12, x26, #0x3e
   27128:	csel	x8, x9, x8, lt  // lt = tstop
   2712c:	cmp	x11, #0x0
   27130:	csel	x9, x12, x11, lt  // lt = tstop
   27134:	asr	x8, x8, #6
   27138:	asr	x9, x9, #6
   2713c:	add	x15, x8, #0x1
   27140:	cmp	x26, x10
   27144:	add	x11, x9, #0x1
   27148:	str	x24, [x23, #16]
   2714c:	b.ge	2744c <mpfr_sub1@@Base+0xd38>  // b.tcont
   27150:	ldr	x10, [x25, #24]
   27154:	neg	w12, w26
   27158:	ands	x13, x12, #0x3f
   2715c:	mvn	x14, x9
   27160:	add	x12, x10, x15, lsl #3
   27164:	add	x1, x12, x14, lsl #3
   27168:	b.eq	27540 <mpfr_sub1@@Base+0xe2c>  // b.none
   2716c:	ldr	x14, [x1]
   27170:	sub	x13, x13, #0x1
   27174:	mov	w16, #0x1                   	// #1
   27178:	ldur	w21, [x29, #-28]
   2717c:	lsl	x16, x16, x13
   27180:	sub	x17, x16, #0x1
   27184:	and	x13, x14, x16
   27188:	and	x14, x14, x17
   2718c:	cbz	w21, 27248 <mpfr_sub1@@Base+0xb34>
   27190:	cbz	x13, 27248 <mpfr_sub1@@Base+0xb34>
   27194:	lsl	x19, x16, #1
   27198:	cmp	w21, #0x1
   2719c:	b.eq	27284 <mpfr_sub1@@Base+0xb70>  // b.none
   271a0:	cbnz	w21, 27274 <mpfr_sub1@@Base+0xb60>
   271a4:	cbz	x13, 27284 <mpfr_sub1@@Base+0xb70>
   271a8:	mov	x2, x26
   271ac:	cbz	x14, 275f4 <mpfr_sub1@@Base+0xee0>
   271b0:	ldr	w24, [x23, #8]
   271b4:	ldr	x13, [x1]
   271b8:	adds	x13, x13, x19
   271bc:	str	x13, [x22]
   271c0:	b.cs	272e4 <mpfr_sub1@@Base+0xbd0>  // b.hs, b.nlast
   271c4:	cmp	x2, #0x41
   271c8:	b.lt	273e8 <mpfr_sub1@@Base+0xcd4>  // b.tstop
   271cc:	cmp	x1, x22
   271d0:	b.eq	273e8 <mpfr_sub1@@Base+0xcd4>  // b.none
   271d4:	cmp	x9, #0x4
   271d8:	b.cc	27200 <mpfr_sub1@@Base+0xaec>  // b.lo, b.ul, b.last
   271dc:	add	x13, x22, #0x8
   271e0:	sub	x14, x8, x9
   271e4:	cmp	x13, x12
   271e8:	add	x13, x10, x14, lsl #3
   271ec:	b.cs	27414 <mpfr_sub1@@Base+0xd00>  // b.hs, b.nlast
   271f0:	add	x11, x22, x11, lsl #3
   271f4:	add	x12, x13, #0x8
   271f8:	cmp	x12, x11
   271fc:	b.cs	27414 <mpfr_sub1@@Base+0xd00>  // b.hs, b.nlast
   27200:	mov	w11, #0x1                   	// #1
   27204:	sub	x9, x11, x9
   27208:	add	x11, x22, x11, lsl #3
   2720c:	add	x8, x10, x8, lsl #3
   27210:	ldr	x10, [x8, x9, lsl #3]
   27214:	add	x9, x9, #0x1
   27218:	cmp	x9, #0x1
   2721c:	str	x10, [x11], #8
   27220:	b.ne	27210 <mpfr_sub1@@Base+0xafc>  // b.any
   27224:	b	273e8 <mpfr_sub1@@Base+0xcd4>
   27228:	lsl	x2, x19, #3
   2722c:	mov	x0, x20
   27230:	mov	w1, wzr
   27234:	bl	c150 <memset@plt>
   27238:	b	26938 <mpfr_sub1@@Base+0x224>
   2723c:	mov	w10, wzr
   27240:	mov	w25, wzr
   27244:	b	26b28 <mpfr_sub1@@Base+0x414>
   27248:	cbnz	x14, 27194 <mpfr_sub1@@Base+0xa80>
   2724c:	sub	x15, x15, x11
   27250:	cbz	x15, 27194 <mpfr_sub1@@Base+0xa80>
   27254:	mvn	x14, x9
   27258:	add	x15, x14, x8
   2725c:	ldr	x14, [x10, x15, lsl #3]
   27260:	subs	x15, x15, #0x1
   27264:	cset	w17, cs  // cs = hs, nlast
   27268:	cbnz	x14, 27194 <mpfr_sub1@@Base+0xa80>
   2726c:	tbnz	w17, #0, 2725c <mpfr_sub1@@Base+0xb48>
   27270:	b	27194 <mpfr_sub1@@Base+0xa80>
   27274:	ldr	w24, [x23, #8]
   27278:	add	w15, w21, w24, lsr #31
   2727c:	cmp	w15, #0x3
   27280:	b.ne	272c8 <mpfr_sub1@@Base+0xbb4>  // b.any
   27284:	orr	x8, x14, x13
   27288:	cbz	x8, 2758c <mpfr_sub1@@Base+0xe78>
   2728c:	ldr	w8, [x23, #8]
   27290:	neg	w24, w8
   27294:	cmp	x22, x1
   27298:	b.eq	273f0 <mpfr_sub1@@Base+0xcdc>  // b.none
   2729c:	lsl	x2, x11, #3
   272a0:	mov	x0, x22
   272a4:	bl	ba70 <memcpy@plt>
   272a8:	b	273f0 <mpfr_sub1@@Base+0xcdc>
   272ac:	mov	w25, wzr
   272b0:	ldr	w2, [x22, #8]
   272b4:	mov	x0, x22
   272b8:	mov	w1, w25
   272bc:	bl	c3c0 <mpfr_underflow@plt>
   272c0:	mov	w24, w0
   272c4:	b	26e98 <mpfr_sub1@@Base+0x784>
   272c8:	mov	x2, x26
   272cc:	orr	x13, x14, x13
   272d0:	cbz	x13, 27618 <mpfr_sub1@@Base+0xf04>
   272d4:	ldr	x13, [x1]
   272d8:	adds	x13, x13, x19
   272dc:	str	x13, [x22]
   272e0:	b.cc	271c4 <mpfr_sub1@@Base+0xab0>  // b.lo, b.ul, b.last
   272e4:	mov	x17, xzr
   272e8:	mov	x15, xzr
   272ec:	mov	x13, x9
   272f0:	add	x14, x15, #0x1
   272f4:	cmp	x14, x9
   272f8:	b.gt	273c8 <mpfr_sub1@@Base+0xcb4>
   272fc:	lsl	x15, x15, #3
   27300:	add	x16, x1, x15
   27304:	ldr	x16, [x16, #8]
   27308:	add	x15, x22, x15
   2730c:	sub	x17, x17, #0x8
   27310:	sub	x13, x13, #0x1
   27314:	adds	x16, x16, #0x1
   27318:	str	x16, [x15, #8]
   2731c:	mov	x15, x14
   27320:	b.cs	272f0 <mpfr_sub1@@Base+0xbdc>  // b.hs, b.nlast
   27324:	cmp	x1, x22
   27328:	b.eq	273e8 <mpfr_sub1@@Base+0xcd4>  // b.none
   2732c:	cmp	x14, x9
   27330:	b.ge	273e8 <mpfr_sub1@@Base+0xcd4>  // b.tcont
   27334:	sub	x15, x9, x14
   27338:	cmp	x15, #0x4
   2733c:	add	x16, x14, #0x1
   27340:	b.cc	273a4 <mpfr_sub1@@Base+0xc90>  // b.lo, b.ul, b.last
   27344:	sub	x18, x22, x17
   27348:	add	x0, x18, #0x8
   2734c:	cmp	x0, x12
   27350:	sub	x12, x1, x17
   27354:	b.cs	27368 <mpfr_sub1@@Base+0xc54>  // b.hs, b.nlast
   27358:	add	x11, x22, x11, lsl #3
   2735c:	add	x17, x12, #0x8
   27360:	cmp	x17, x11
   27364:	b.cc	273a4 <mpfr_sub1@@Base+0xc90>  // b.lo, b.ul, b.last
   27368:	and	x13, x13, #0xfffffffffffffffc
   2736c:	and	x17, x15, #0xfffffffffffffffc
   27370:	add	x13, x13, x14
   27374:	add	x11, x18, #0x18
   27378:	add	x12, x12, #0x18
   2737c:	add	x16, x13, #0x1
   27380:	mov	x13, x17
   27384:	ldp	q0, q1, [x12, #-16]
   27388:	add	x12, x12, #0x20
   2738c:	subs	x13, x13, #0x4
   27390:	stp	q0, q1, [x11, #-16]
   27394:	add	x11, x11, #0x20
   27398:	b.ne	27384 <mpfr_sub1@@Base+0xc70>  // b.any
   2739c:	cmp	x15, x17
   273a0:	b.eq	273e8 <mpfr_sub1@@Base+0xcd4>  // b.none
   273a4:	sub	x9, x16, x9
   273a8:	add	x11, x22, x16, lsl #3
   273ac:	add	x8, x10, x8, lsl #3
   273b0:	ldr	x10, [x8, x9, lsl #3]
   273b4:	add	x9, x9, #0x1
   273b8:	cmp	x9, #0x1
   273bc:	str	x10, [x11], #8
   273c0:	b.ne	273b0 <mpfr_sub1@@Base+0xc9c>  // b.any
   273c4:	b	273e8 <mpfr_sub1@@Base+0xcd4>
   273c8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   273cc:	str	x8, [x22, x9, lsl #3]
   273d0:	ldr	x8, [x23, #16]
   273d4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   273d8:	cmp	x8, x9
   273dc:	b.eq	273e8 <mpfr_sub1@@Base+0xcd4>  // b.none
   273e0:	add	x8, x8, #0x1
   273e4:	str	x8, [x23, #16]
   273e8:	ldur	w21, [x29, #-28]
   273ec:	mov	x26, x2
   273f0:	ldr	x8, [x22]
   273f4:	neg	x9, x19
   273f8:	and	x8, x8, x9
   273fc:	str	x8, [x22]
   27400:	cbz	w24, 2747c <mpfr_sub1@@Base+0xd68>
   27404:	ldr	w2, [x23, #8]
   27408:	cmp	w24, w2, lsl #1
   2740c:	b.ne	274f8 <mpfr_sub1@@Base+0xde4>  // b.any
   27410:	b	27498 <mpfr_sub1@@Base+0xd84>
   27414:	and	x12, x9, #0xfffffffffffffffc
   27418:	add	x13, x13, #0x18
   2741c:	orr	x11, x12, #0x1
   27420:	add	x14, x22, #0x18
   27424:	mov	x15, x12
   27428:	ldp	q0, q1, [x13, #-16]
   2742c:	add	x13, x13, #0x20
   27430:	subs	x15, x15, #0x4
   27434:	stp	q0, q1, [x14, #-16]
   27438:	add	x14, x14, #0x20
   2743c:	b.ne	27428 <mpfr_sub1@@Base+0xd14>  // b.any
   27440:	cmp	x9, x12
   27444:	b.eq	273e8 <mpfr_sub1@@Base+0xcd4>  // b.none
   27448:	b	27204 <mpfr_sub1@@Base+0xaf0>
   2744c:	ldr	x1, [x25, #24]
   27450:	sub	x19, x11, x15
   27454:	add	x0, x22, x19, lsl #3
   27458:	cmp	x0, x1
   2745c:	b.eq	27468 <mpfr_sub1@@Base+0xd54>  // b.none
   27460:	lsl	x2, x15, #3
   27464:	bl	ba70 <memcpy@plt>
   27468:	lsl	x2, x19, #3
   2746c:	mov	x0, x22
   27470:	mov	w1, wzr
   27474:	bl	c150 <memset@plt>
   27478:	ldur	w21, [x29, #-28]
   2747c:	cmp	w21, #0x1
   27480:	b.eq	27498 <mpfr_sub1@@Base+0xd84>  // b.none
   27484:	ldr	w2, [x23, #8]
   27488:	add	w8, w21, w2, lsr #31
   2748c:	cmp	w8, #0x3
   27490:	mov	w24, w2
   27494:	b.ne	274f8 <mpfr_sub1@@Base+0xde4>  // b.any
   27498:	ldur	x8, [x29, #-24]
   2749c:	ldr	x9, [x20]
   274a0:	ldur	x12, [x29, #-48]
   274a4:	mov	w10, #0x1                   	// #1
   274a8:	lsl	w8, w8, #6
   274ac:	sub	w8, w8, w26
   274b0:	lsl	x8, x10, x8
   274b4:	subs	x8, x9, x8
   274b8:	str	x8, [x20]
   274bc:	b.cs	274e4 <mpfr_sub1@@Base+0xdd0>  // b.hs, b.nlast
   274c0:	mov	w8, #0x1                   	// #1
   274c4:	cmp	x8, x12
   274c8:	b.gt	274e4 <mpfr_sub1@@Base+0xdd0>
   274cc:	lsl	x9, x8, #3
   274d0:	ldr	x10, [x20, x9]
   274d4:	add	x8, x8, #0x1
   274d8:	sub	x11, x10, #0x1
   274dc:	str	x11, [x20, x9]
   274e0:	cbz	x10, 274c4 <mpfr_sub1@@Base+0xdb0>
   274e4:	ldr	x8, [x20, x12, lsl #3]
   274e8:	tbz	x8, #63, 275c8 <mpfr_sub1@@Base+0xeb4>
   274ec:	ldr	w2, [x23, #8]
   274f0:	ldur	w21, [x29, #-28]
   274f4:	neg	w24, w2
   274f8:	ldr	x9, [x23, #16]
   274fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27500:	ldr	x1, [x0, #2608]
   27504:	add	x0, x0, #0xa30
   27508:	blr	x1
   2750c:	mrs	x8, tpidr_el0
   27510:	ldr	x10, [x8, x0]
   27514:	cmp	x9, x10
   27518:	b.gt	27534 <mpfr_sub1@@Base+0xe20>
   2751c:	cbz	w24, 26e98 <mpfr_sub1@@Base+0x784>
   27520:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27524:	ldr	x1, [x0, #2640]
   27528:	add	x0, x0, #0xa50
   2752c:	blr	x1
   27530:	b	26e8c <mpfr_sub1@@Base+0x778>
   27534:	mov	x0, x23
   27538:	mov	w1, w21
   2753c:	b	27078 <mpfr_sub1@@Base+0x964>
   27540:	ldur	x14, [x1, #-8]
   27544:	ldur	w15, [x29, #-28]
   27548:	and	x13, x14, #0x8000000000000000
   2754c:	and	x14, x14, #0x7fffffffffffffff
   27550:	cbz	w15, 27594 <mpfr_sub1@@Base+0xe80>
   27554:	cbz	x13, 27594 <mpfr_sub1@@Base+0xe80>
   27558:	mov	w19, #0x1                   	// #1
   2755c:	ldur	w21, [x29, #-28]
   27560:	cmp	w21, #0x1
   27564:	b.ne	271a0 <mpfr_sub1@@Base+0xa8c>  // b.any
   27568:	b	27284 <mpfr_sub1@@Base+0xb70>
   2756c:	sub	x0, x29, #0x10
   27570:	mov	x1, x19
   27574:	bl	be10 <mpfr_tmp_allocate@plt>
   27578:	mov	x26, x0
   2757c:	cmp	x20, x26
   27580:	b.ne	26fcc <mpfr_sub1@@Base+0x8b8>  // b.any
   27584:	mov	x26, x20
   27588:	b	268cc <mpfr_sub1@@Base+0x1b8>
   2758c:	mov	w24, wzr
   27590:	b	27294 <mpfr_sub1@@Base+0xb80>
   27594:	mov	w19, #0x1                   	// #1
   27598:	cbnz	x14, 2755c <mpfr_sub1@@Base+0xe48>
   2759c:	sub	x15, x8, x11
   275a0:	cbz	x15, 2755c <mpfr_sub1@@Base+0xe48>
   275a4:	sub	x14, x8, x9
   275a8:	sub	x15, x14, #0x2
   275ac:	mov	w19, #0x1                   	// #1
   275b0:	ldr	x14, [x10, x15, lsl #3]
   275b4:	subs	x15, x15, #0x1
   275b8:	cset	w16, cs  // cs = hs, nlast
   275bc:	cbnz	x14, 2755c <mpfr_sub1@@Base+0xe48>
   275c0:	tbnz	w16, #0, 275b0 <mpfr_sub1@@Base+0xe9c>
   275c4:	b	2755c <mpfr_sub1@@Base+0xe48>
   275c8:	ldr	x8, [x23, #16]
   275cc:	mov	x9, x23
   275d0:	mov	x10, x20
   275d4:	sub	x8, x8, #0x1
   275d8:	str	x8, [x23, #16]
   275dc:	ldur	x8, [x29, #-48]
   275e0:	lsl	x8, x8, #3
   275e4:	ldr	x9, [x20, x8]
   275e8:	orr	x9, x9, #0x8000000000000000
   275ec:	str	x9, [x20, x8]
   275f0:	b	274ec <mpfr_sub1@@Base+0xdd8>
   275f4:	ldr	x13, [x1]
   275f8:	ldr	w14, [x23, #8]
   275fc:	tst	x13, x19
   27600:	b.eq	27620 <mpfr_sub1@@Base+0xf0c>  // b.none
   27604:	lsl	w24, w14, #1
   27608:	adds	x13, x13, x19
   2760c:	str	x13, [x22]
   27610:	b.cs	272e4 <mpfr_sub1@@Base+0xbd0>  // b.hs, b.nlast
   27614:	b	271c4 <mpfr_sub1@@Base+0xab0>
   27618:	mov	w24, wzr
   2761c:	b	27624 <mpfr_sub1@@Base+0xf10>
   27620:	neg	w24, w14, lsl #1
   27624:	ldur	w21, [x29, #-28]
   27628:	mov	x26, x2
   2762c:	b	27294 <mpfr_sub1@@Base+0xb80>
   27630:	sub	x0, x29, #0x10
   27634:	mov	x1, x22
   27638:	bl	be10 <mpfr_tmp_allocate@plt>
   2763c:	mov	x24, x0
   27640:	cmp	x20, x24
   27644:	b.ne	26f80 <mpfr_sub1@@Base+0x86c>  // b.any
   27648:	mov	x24, x20
   2764c:	mov	x27, x23
   27650:	b	26860 <mpfr_sub1@@Base+0x14c>

0000000000027654 <mpfr_sub_ui@@Base>:
   27654:	sub	sp, sp, #0x80
   27658:	stp	x20, x19, [sp, #112]
   2765c:	mov	w19, w3
   27660:	mov	x8, x1
   27664:	mov	x20, x0
   27668:	stp	x29, x30, [sp, #32]
   2766c:	str	x27, [sp, #48]
   27670:	stp	x26, x25, [sp, #64]
   27674:	stp	x24, x23, [sp, #80]
   27678:	stp	x22, x21, [sp, #96]
   2767c:	add	x29, sp, #0x20
   27680:	cbz	x2, 277a4 <mpfr_sub_ui@@Base+0x150>
   27684:	ldr	x10, [x8, #16]
   27688:	mov	x9, #0x2                   	// #2
   2768c:	movk	x9, #0x8000, lsl #48
   27690:	add	x11, x9, #0x2
   27694:	cmp	x10, x11
   27698:	b.lt	277d4 <mpfr_sub_ui@@Base+0x180>  // b.tstop
   2769c:	add	x10, x29, #0x18
   276a0:	clz	x12, x2
   276a4:	mov	w9, #0x40                  	// #64
   276a8:	mov	w11, #0x1                   	// #1
   276ac:	str	x10, [sp, #24]
   276b0:	lsl	x10, x2, x12
   276b4:	str	x9, [sp]
   276b8:	str	w11, [sp, #8]
   276bc:	str	x10, [x29, #24]
   276c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   276c4:	ldr	x1, [x0, #2640]
   276c8:	add	x0, x0, #0xa50
   276cc:	blr	x1
   276d0:	mrs	x24, tpidr_el0
   276d4:	ldr	w26, [x24, x0]
   276d8:	mov	x21, x0
   276dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   276e0:	ldr	x1, [x0, #2576]
   276e4:	add	x0, x0, #0xa10
   276e8:	blr	x1
   276ec:	ldr	x25, [x24, x0]
   276f0:	mov	x22, x0
   276f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   276f8:	ldr	x1, [x0, #2608]
   276fc:	add	x0, x0, #0xa30
   27700:	blr	x1
   27704:	ldr	x27, [x24, x0]
   27708:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   2770c:	mov	x23, x0
   27710:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   27714:	str	x11, [x24, x0]
   27718:	sub	x9, x9, x12
   2771c:	mov	x2, sp
   27720:	mov	x0, x20
   27724:	mov	x1, x8
   27728:	mov	w3, w19
   2772c:	str	x10, [x24, x22]
   27730:	str	x9, [sp, #16]
   27734:	bl	bbc0 <mpfr_sub@plt>
   27738:	ldr	w8, [x24, x21]
   2773c:	str	x25, [x24, x22]
   27740:	str	x27, [x24, x23]
   27744:	mov	w9, w0
   27748:	orr	w8, w8, w26
   2774c:	str	w8, [x24, x21]
   27750:	ldr	x10, [x20, #16]
   27754:	cmp	x10, x27
   27758:	b.gt	2781c <mpfr_sub_ui@@Base+0x1c8>
   2775c:	cmp	x10, x25
   27760:	b.lt	2781c <mpfr_sub_ui@@Base+0x1c8>  // b.tstop
   27764:	cbz	w9, 27780 <mpfr_sub_ui@@Base+0x12c>
   27768:	orr	w8, w8, #0x8
   2776c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27770:	ldr	x1, [x0, #2640]
   27774:	add	x0, x0, #0xa50
   27778:	blr	x1
   2777c:	str	w8, [x24, x0]
   27780:	ldp	x20, x19, [sp, #112]
   27784:	ldp	x22, x21, [sp, #96]
   27788:	ldp	x24, x23, [sp, #80]
   2778c:	ldp	x26, x25, [sp, #64]
   27790:	ldr	x27, [sp, #48]
   27794:	ldp	x29, x30, [sp, #32]
   27798:	mov	w0, w9
   2779c:	add	sp, sp, #0x80
   277a0:	ret
   277a4:	ldr	w3, [x8, #8]
   277a8:	mov	x0, x20
   277ac:	mov	w2, w19
   277b0:	ldp	x20, x19, [sp, #112]
   277b4:	ldp	x22, x21, [sp, #96]
   277b8:	ldp	x24, x23, [sp, #80]
   277bc:	ldp	x26, x25, [sp, #64]
   277c0:	ldr	x27, [sp, #48]
   277c4:	ldp	x29, x30, [sp, #32]
   277c8:	mov	x1, x8
   277cc:	add	sp, sp, #0x80
   277d0:	b	c690 <mpfr_set4@plt>
   277d4:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   277d8:	cmp	x10, x11
   277dc:	b.eq	27834 <mpfr_sub_ui@@Base+0x1e0>  // b.none
   277e0:	mov	x11, #0x2                   	// #2
   277e4:	movk	x11, #0x8000, lsl #48
   277e8:	cmp	x10, x11
   277ec:	b.ne	2769c <mpfr_sub_ui@@Base+0x48>  // b.any
   277f0:	str	x9, [x20, #16]
   277f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   277f8:	ldr	x1, [x0, #2640]
   277fc:	add	x0, x0, #0xa50
   27800:	blr	x1
   27804:	mrs	x8, tpidr_el0
   27808:	ldr	w10, [x8, x0]
   2780c:	mov	w9, wzr
   27810:	orr	w10, w10, #0x4
   27814:	str	w10, [x8, x0]
   27818:	b	27780 <mpfr_sub_ui@@Base+0x12c>
   2781c:	mov	x0, x20
   27820:	mov	w1, w9
   27824:	mov	w2, w19
   27828:	bl	cb10 <mpfr_check_range@plt>
   2782c:	mov	w9, w0
   27830:	b	27780 <mpfr_sub_ui@@Base+0x12c>
   27834:	str	x11, [x20, #16]
   27838:	ldr	w8, [x8, #8]
   2783c:	mov	w9, wzr
   27840:	str	w8, [x20, #8]
   27844:	b	27780 <mpfr_sub_ui@@Base+0x12c>

0000000000027848 <mpfr_rint@@Base>:
   27848:	sub	sp, sp, #0x80
   2784c:	stp	x29, x30, [sp, #32]
   27850:	stp	x28, x27, [sp, #48]
   27854:	stp	x26, x25, [sp, #64]
   27858:	stp	x24, x23, [sp, #80]
   2785c:	stp	x22, x21, [sp, #96]
   27860:	stp	x20, x19, [sp, #112]
   27864:	ldr	x16, [x1, #16]
   27868:	mov	x8, #0x2                   	// #2
   2786c:	movk	x8, #0x8000, lsl #48
   27870:	add	x9, x8, #0x2
   27874:	cmp	x16, x9
   27878:	mov	x22, x0
   2787c:	add	x29, sp, #0x20
   27880:	b.lt	27da4 <mpfr_rint@@Base+0x55c>  // b.tstop
   27884:	ldr	w8, [x1, #8]
   27888:	mov	w20, w2
   2788c:	cmp	w2, #0x1
   27890:	str	w8, [x22, #8]
   27894:	ldrsw	x19, [x1, #8]
   27898:	b.eq	278b4 <mpfr_rint@@Base+0x6c>  // b.none
   2789c:	cmp	w20, #0x2
   278a0:	b.eq	278bc <mpfr_rint@@Base+0x74>  // b.none
   278a4:	cmp	w20, #0x3
   278a8:	b.ne	278c8 <mpfr_rint@@Base+0x80>  // b.any
   278ac:	ubfx	x23, x19, #31, #1
   278b0:	b	278d4 <mpfr_rint@@Base+0x8c>
   278b4:	mov	w23, wzr
   278b8:	b	278d4 <mpfr_rint@@Base+0x8c>
   278bc:	cmp	w19, #0x0
   278c0:	cset	w23, gt
   278c4:	b	278d4 <mpfr_rint@@Base+0x8c>
   278c8:	cmp	w20, #0x4
   278cc:	mov	w8, #0x1                   	// #1
   278d0:	cneg	w23, w8, ne  // ne = any
   278d4:	cmp	x16, #0x0
   278d8:	b.le	27dd4 <mpfr_rint@@Base+0x58c>
   278dc:	ldr	x8, [x1]
   278e0:	ldr	x9, [x22]
   278e4:	sub	x10, x16, #0x1
   278e8:	stur	w20, [x29, #-12]
   278ec:	sub	x12, x8, #0x1
   278f0:	add	x8, x8, #0x3e
   278f4:	sub	x13, x9, #0x1
   278f8:	cmp	x12, #0x0
   278fc:	add	x14, x9, #0x3e
   27900:	neg	w9, w9
   27904:	csel	x8, x8, x12, lt  // lt = tstop
   27908:	cmp	x13, #0x0
   2790c:	ldr	x17, [x1, #24]
   27910:	ldr	x20, [x22, #24]
   27914:	add	x11, x16, #0x3e
   27918:	and	w15, w9, #0x3f
   2791c:	csel	x9, x14, x13, lt  // lt = tstop
   27920:	cmp	x10, #0x0
   27924:	stur	x19, [x29, #-8]
   27928:	asr	x19, x9, #6
   2792c:	csel	x9, x11, x10, lt  // lt = tstop
   27930:	asr	x25, x8, #6
   27934:	asr	x9, x9, #6
   27938:	add	x8, x25, #0x1
   2793c:	add	x21, x19, #0x1
   27940:	cmp	x9, x25
   27944:	str	x16, [x22, #16]
   27948:	str	x16, [sp, #8]
   2794c:	b.le	2796c <mpfr_rint@@Base+0x124>
   27950:	mov	w27, wzr
   27954:	mov	w24, wzr
   27958:	mov	x28, x8
   2795c:	subs	x26, x21, x28
   27960:	str	x22, [sp]
   27964:	b.lt	279b0 <mpfr_rint@@Base+0x168>  // b.tstop
   27968:	b	27a28 <mpfr_rint@@Base+0x1e0>
   2796c:	add	x28, x9, #0x1
   27970:	and	x27, x16, #0x3f
   27974:	sub	x9, x8, x28
   27978:	cbz	w27, 27988 <mpfr_rint@@Base+0x140>
   2797c:	ldr	x10, [x17, x9, lsl #3]
   27980:	lsl	x10, x10, x27
   27984:	cbnz	x10, 279a0 <mpfr_rint@@Base+0x158>
   27988:	sub	x10, x17, #0x8
   2798c:	subs	x11, x9, #0x1
   27990:	b.lt	27a18 <mpfr_rint@@Base+0x1d0>  // b.tstop
   27994:	ldr	x12, [x10, x9, lsl #3]
   27998:	mov	x9, x11
   2799c:	cbz	x12, 2798c <mpfr_rint@@Base+0x144>
   279a0:	mov	w24, #0x2                   	// #2
   279a4:	subs	x26, x21, x28
   279a8:	str	x22, [sp]
   279ac:	b.ge	27a28 <mpfr_rint@@Base+0x1e0>  // b.tcont
   279b0:	sub	x22, x8, x21
   279b4:	add	x1, x17, x22, lsl #3
   279b8:	cmp	x20, x1
   279bc:	b.eq	279dc <mpfr_rint@@Base+0x194>  // b.none
   279c0:	lsl	x2, x21, #3
   279c4:	mov	x0, x20
   279c8:	mov	x26, x15
   279cc:	mov	x27, x17
   279d0:	bl	ba70 <memcpy@plt>
   279d4:	mov	x17, x27
   279d8:	mov	x15, x26
   279dc:	mov	w27, w24
   279e0:	tbz	w23, #31, 27b10 <mpfr_rint@@Base+0x2c8>
   279e4:	ldur	w8, [x29, #-12]
   279e8:	cbnz	w8, 27a00 <mpfr_rint@@Base+0x1b8>
   279ec:	ldr	x8, [x20]
   279f0:	mov	w9, #0x1                   	// #1
   279f4:	lsl	x9, x9, x15
   279f8:	tst	x8, x9
   279fc:	b.eq	27cbc <mpfr_rint@@Base+0x474>  // b.none
   27a00:	cbz	w15, 27b04 <mpfr_rint@@Base+0x2bc>
   27a04:	ldr	x8, [x20]
   27a08:	sub	w9, w15, #0x1
   27a0c:	lsr	x8, x8, x9
   27a10:	and	w23, w8, #0x1
   27a14:	b	27b10 <mpfr_rint@@Base+0x2c8>
   27a18:	mov	w24, wzr
   27a1c:	subs	x26, x21, x28
   27a20:	str	x22, [sp]
   27a24:	b.lt	279b0 <mpfr_rint@@Base+0x168>  // b.tstop
   27a28:	cmp	x20, x17
   27a2c:	sub	x19, x8, x28
   27a30:	b.eq	27a5c <mpfr_rint@@Base+0x214>  // b.none
   27a34:	add	x0, x20, x26, lsl #3
   27a38:	add	x1, x17, x19, lsl #3
   27a3c:	cmp	x0, x1
   27a40:	b.eq	27a5c <mpfr_rint@@Base+0x214>  // b.none
   27a44:	lsl	x2, x28, #3
   27a48:	mov	x21, x15
   27a4c:	mov	x22, x17
   27a50:	bl	ba70 <memcpy@plt>
   27a54:	mov	x17, x22
   27a58:	mov	x15, x21
   27a5c:	mov	w8, #0x40                  	// #64
   27a60:	sub	w8, w8, w27
   27a64:	cmp	w27, #0x0
   27a68:	add	x22, x20, x26, lsl #3
   27a6c:	csel	w8, wzr, w8, eq  // eq = none
   27a70:	cbnz	x26, 27aa8 <mpfr_rint@@Base+0x260>
   27a74:	cmp	w8, w15
   27a78:	mov	w27, w24
   27a7c:	b.ge	27ab8 <mpfr_rint@@Base+0x270>  // b.tcont
   27a80:	cbnz	w27, 27ab0 <mpfr_rint@@Base+0x268>
   27a84:	ldr	x9, [x22]
   27a88:	mov	w10, #0x1                   	// #1
   27a8c:	lsl	x11, x10, x15
   27a90:	lsl	x8, x10, x8
   27a94:	sub	x8, x11, x8
   27a98:	tst	x9, x8
   27a9c:	cset	w27, ne  // ne = any
   27aa0:	tbz	w23, #31, 27c5c <mpfr_rint@@Base+0x414>
   27aa4:	b	27ac0 <mpfr_rint@@Base+0x278>
   27aa8:	mov	w15, w8
   27aac:	mov	w27, w24
   27ab0:	tbz	w23, #31, 27c5c <mpfr_rint@@Base+0x414>
   27ab4:	b	27ac0 <mpfr_rint@@Base+0x278>
   27ab8:	mov	w15, w8
   27abc:	tbz	w23, #31, 27c5c <mpfr_rint@@Base+0x414>
   27ac0:	cbnz	x19, 27ad0 <mpfr_rint@@Base+0x288>
   27ac4:	cbnz	w15, 27ad0 <mpfr_rint@@Base+0x288>
   27ac8:	mov	w23, wzr
   27acc:	b	27c5c <mpfr_rint@@Base+0x414>
   27ad0:	ldur	w8, [x29, #-12]
   27ad4:	cbnz	w8, 27aec <mpfr_rint@@Base+0x2a4>
   27ad8:	ldr	x8, [x22]
   27adc:	mov	w9, #0x1                   	// #1
   27ae0:	lsl	x9, x9, x15
   27ae4:	tst	x8, x9
   27ae8:	b.eq	27cd8 <mpfr_rint@@Base+0x490>  // b.none
   27aec:	cbz	w15, 27c50 <mpfr_rint@@Base+0x408>
   27af0:	ldr	x8, [x22]
   27af4:	sub	w9, w15, #0x1
   27af8:	lsr	x8, x8, x9
   27afc:	and	w23, w8, #0x1
   27b00:	b	27c5c <mpfr_rint@@Base+0x414>
   27b04:	add	x8, x17, x22, lsl #3
   27b08:	ldur	x8, [x8, #-8]
   27b0c:	lsr	x23, x8, #63
   27b10:	cbz	w27, 27b6c <mpfr_rint@@Base+0x324>
   27b14:	mov	x22, x20
   27b18:	mov	x28, x21
   27b1c:	cbnz	w15, 27c78 <mpfr_rint@@Base+0x430>
   27b20:	cbz	w27, 27c94 <mpfr_rint@@Base+0x44c>
   27b24:	mrs	x9, tpidr_el0
   27b28:	cbz	w23, 27c24 <mpfr_rint@@Base+0x3dc>
   27b2c:	ldr	x8, [x22]
   27b30:	mov	w10, #0x1                   	// #1
   27b34:	lsl	x10, x10, x15
   27b38:	adds	x8, x8, x10
   27b3c:	str	x8, [x22]
   27b40:	b.cc	27c24 <mpfr_rint@@Base+0x3dc>  // b.lo, b.ul, b.last
   27b44:	mov	w8, #0x1                   	// #1
   27b48:	cmp	x8, x28
   27b4c:	b.ge	27bbc <mpfr_rint@@Base+0x374>  // b.tcont
   27b50:	lsl	x10, x8, #3
   27b54:	ldr	x11, [x22, x10]
   27b58:	add	x8, x8, #0x1
   27b5c:	adds	x11, x11, #0x1
   27b60:	str	x11, [x22, x10]
   27b64:	b.cs	27b48 <mpfr_rint@@Base+0x300>  // b.hs, b.nlast
   27b68:	b	27c24 <mpfr_rint@@Base+0x3dc>
   27b6c:	cbz	w15, 27b90 <mpfr_rint@@Base+0x348>
   27b70:	ldr	x8, [x20]
   27b74:	neg	w9, w15
   27b78:	lsl	x9, x8, x9
   27b7c:	cbz	x9, 27b90 <mpfr_rint@@Base+0x348>
   27b80:	mov	w27, #0x1                   	// #1
   27b84:	mov	x28, x21
   27b88:	mov	x22, x20
   27b8c:	b	27c80 <mpfr_rint@@Base+0x438>
   27b90:	sub	x8, x17, #0x8
   27b94:	subs	x9, x22, #0x1
   27b98:	b.lt	27bf8 <mpfr_rint@@Base+0x3b0>  // b.tstop
   27b9c:	ldr	x10, [x8, x22, lsl #3]
   27ba0:	mov	x22, x9
   27ba4:	cbz	x10, 27b94 <mpfr_rint@@Base+0x34c>
   27ba8:	mov	w27, #0x1                   	// #1
   27bac:	mov	x22, x20
   27bb0:	mov	x28, x21
   27bb4:	cbnz	w15, 27c78 <mpfr_rint@@Base+0x430>
   27bb8:	b	27b20 <mpfr_rint@@Base+0x2d8>
   27bbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27bc0:	ldr	x1, [x0, #2608]
   27bc4:	add	x0, x0, #0xa30
   27bc8:	blr	x1
   27bcc:	ldr	x8, [x9, x0]
   27bd0:	ldr	x10, [sp, #8]
   27bd4:	cmp	x10, x8
   27bd8:	b.ne	27c0c <mpfr_rint@@Base+0x3c4>  // b.any
   27bdc:	ldr	x0, [sp]
   27be0:	ldur	w1, [x29, #-12]
   27be4:	ldur	x2, [x29, #-8]
   27be8:	bl	bf90 <mpfr_overflow@plt>
   27bec:	cmp	w0, #0x0
   27bf0:	cneg	w8, w27, lt  // lt = tstop
   27bf4:	b	27c98 <mpfr_rint@@Base+0x450>
   27bf8:	mov	w27, wzr
   27bfc:	mov	x22, x20
   27c00:	mov	x28, x21
   27c04:	cbnz	w15, 27c78 <mpfr_rint@@Base+0x430>
   27c08:	b	27b20 <mpfr_rint@@Base+0x2d8>
   27c0c:	ldr	x12, [sp]
   27c10:	add	x8, x10, #0x1
   27c14:	add	x10, x22, x28, lsl #3
   27c18:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   27c1c:	str	x8, [x12, #16]
   27c20:	stur	x11, [x10, #-8]
   27c24:	ldur	x8, [x29, #-8]
   27c28:	cmp	w23, w8, lsr #31
   27c2c:	cneg	w8, w27, eq  // eq = none
   27c30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27c34:	ldr	x1, [x0, #2640]
   27c38:	add	x0, x0, #0xa50
   27c3c:	blr	x1
   27c40:	ldr	w10, [x9, x0]
   27c44:	orr	w10, w10, #0x8
   27c48:	str	w10, [x9, x0]
   27c4c:	b	27c98 <mpfr_rint@@Base+0x450>
   27c50:	add	x8, x17, x19, lsl #3
   27c54:	ldur	x8, [x8, #-8]
   27c58:	lsr	x23, x8, #63
   27c5c:	lsl	x2, x26, #3
   27c60:	mov	x0, x20
   27c64:	mov	w1, wzr
   27c68:	mov	x19, x15
   27c6c:	bl	c150 <memset@plt>
   27c70:	mov	x15, x19
   27c74:	cbz	w15, 27b20 <mpfr_rint@@Base+0x2d8>
   27c78:	ldr	x8, [x22]
   27c7c:	mov	x20, x22
   27c80:	mov	x9, #0xffffffffffffffff    	// #-1
   27c84:	lsl	x9, x9, x15
   27c88:	and	x8, x8, x9
   27c8c:	str	x8, [x20]
   27c90:	cbnz	w27, 27b24 <mpfr_rint@@Base+0x2dc>
   27c94:	mov	w8, wzr
   27c98:	ldp	x20, x19, [sp, #112]
   27c9c:	ldp	x22, x21, [sp, #96]
   27ca0:	ldp	x24, x23, [sp, #80]
   27ca4:	ldp	x26, x25, [sp, #64]
   27ca8:	ldp	x28, x27, [sp, #48]
   27cac:	ldp	x29, x30, [sp, #32]
   27cb0:	mov	w0, w8
   27cb4:	add	sp, sp, #0x80
   27cb8:	ret
   27cbc:	cbz	w15, 27cf4 <mpfr_rint@@Base+0x4ac>
   27cc0:	sub	x9, x9, #0x1
   27cc4:	sub	w10, w15, #0x1
   27cc8:	mov	w11, #0x1                   	// #1
   27ccc:	and	x8, x8, x9
   27cd0:	lsl	x9, x11, x10
   27cd4:	b	27d00 <mpfr_rint@@Base+0x4b8>
   27cd8:	cbz	w15, 27d54 <mpfr_rint@@Base+0x50c>
   27cdc:	sub	x9, x9, #0x1
   27ce0:	sub	w10, w15, #0x1
   27ce4:	mov	w11, #0x1                   	// #1
   27ce8:	and	x8, x8, x9
   27cec:	lsl	x9, x11, x10
   27cf0:	b	27d60 <mpfr_rint@@Base+0x518>
   27cf4:	add	x8, x17, x22, lsl #3
   27cf8:	ldur	x8, [x8, #-8]
   27cfc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   27d00:	cmp	x8, x9
   27d04:	cset	w23, hi  // hi = pmore
   27d08:	b.ne	27b10 <mpfr_rint@@Base+0x2c8>  // b.any
   27d0c:	cmp	w15, #0x0
   27d10:	cset	w8, eq  // eq = none
   27d14:	mvn	x9, x8
   27d18:	cmn	x22, x9
   27d1c:	b.mi	27b10 <mpfr_rint@@Base+0x2c8>  // b.first
   27d20:	sub	x9, x25, x19
   27d24:	add	x10, x19, x8
   27d28:	sub	x8, x9, x8
   27d2c:	sub	x9, x25, x10
   27d30:	add	x9, x17, x9, lsl #3
   27d34:	sub	x9, x9, #0x8
   27d38:	ldr	x10, [x9]
   27d3c:	cbnz	x10, 27d94 <mpfr_rint@@Base+0x54c>
   27d40:	sub	x8, x8, #0x1
   27d44:	cmp	x8, #0x1
   27d48:	sub	x9, x9, #0x8
   27d4c:	b.ge	27d38 <mpfr_rint@@Base+0x4f0>  // b.tcont
   27d50:	b	27b10 <mpfr_rint@@Base+0x2c8>
   27d54:	add	x8, x17, x19, lsl #3
   27d58:	ldur	x8, [x8, #-8]
   27d5c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   27d60:	cmp	x8, x9
   27d64:	cset	w23, hi  // hi = pmore
   27d68:	b.ne	27c5c <mpfr_rint@@Base+0x414>  // b.any
   27d6c:	cmp	w15, #0x0
   27d70:	cset	w8, eq  // eq = none
   27d74:	mvn	x8, x8
   27d78:	adds	x8, x19, x8
   27d7c:	b.mi	27c5c <mpfr_rint@@Base+0x414>  // b.first
   27d80:	ldr	x9, [x17, x8, lsl #3]
   27d84:	cbnz	x9, 27d9c <mpfr_rint@@Base+0x554>
   27d88:	subs	x8, x8, #0x1
   27d8c:	b.ge	27d80 <mpfr_rint@@Base+0x538>  // b.tcont
   27d90:	b	27c5c <mpfr_rint@@Base+0x414>
   27d94:	mov	w23, #0x1                   	// #1
   27d98:	b	27b10 <mpfr_rint@@Base+0x2c8>
   27d9c:	mov	w23, #0x1                   	// #1
   27da0:	b	27c5c <mpfr_rint@@Base+0x414>
   27da4:	cmp	x16, x8
   27da8:	b.ne	27e04 <mpfr_rint@@Base+0x5bc>  // b.any
   27dac:	str	x8, [x22, #16]
   27db0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27db4:	ldr	x1, [x0, #2640]
   27db8:	add	x0, x0, #0xa50
   27dbc:	blr	x1
   27dc0:	mrs	x9, tpidr_el0
   27dc4:	ldr	w10, [x9, x0]
   27dc8:	mov	w8, wzr
   27dcc:	orr	w10, w10, #0x4
   27dd0:	b	27c48 <mpfr_rint@@Base+0x400>
   27dd4:	cbz	w23, 27e34 <mpfr_rint@@Base+0x5ec>
   27dd8:	cmp	w23, #0x0
   27ddc:	b.le	27e30 <mpfr_rint@@Base+0x5e8>
   27de0:	mov	x0, x22
   27de4:	mov	x1, x19
   27de8:	mov	x2, xzr
   27dec:	mov	w3, w20
   27df0:	bl	bae0 <mpfr_set_si_2exp@plt>
   27df4:	cmp	w19, #0x0
   27df8:	mov	w8, #0x2                   	// #2
   27dfc:	cneg	w8, w8, le
   27e00:	b	27e48 <mpfr_rint@@Base+0x600>
   27e04:	ldr	w8, [x1, #8]
   27e08:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   27e0c:	cmp	x16, x9
   27e10:	str	w8, [x22, #8]
   27e14:	mov	w8, wzr
   27e18:	b.ne	27e24 <mpfr_rint@@Base+0x5dc>  // b.any
   27e1c:	str	x9, [x22, #16]
   27e20:	b	27c98 <mpfr_rint@@Base+0x450>
   27e24:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   27e28:	str	x9, [x22, #16]
   27e2c:	b	27c98 <mpfr_rint@@Base+0x450>
   27e30:	cbz	x16, 27e60 <mpfr_rint@@Base+0x618>
   27e34:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   27e38:	cmp	w19, #0x0
   27e3c:	mov	w9, #0xfffffffe            	// #-2
   27e40:	str	x8, [x22, #16]
   27e44:	cneg	w8, w9, le
   27e48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27e4c:	ldr	x1, [x0, #2640]
   27e50:	add	x0, x0, #0xa50
   27e54:	blr	x1
   27e58:	mrs	x9, tpidr_el0
   27e5c:	b	27c40 <mpfr_rint@@Base+0x3f8>
   27e60:	cmn	w20, #0x1
   27e64:	b.eq	27de0 <mpfr_rint@@Base+0x598>  // b.none
   27e68:	mov	x0, x1
   27e6c:	bl	bf50 <mpfr_powerof2_raw@plt>
   27e70:	cbnz	w0, 27e34 <mpfr_rint@@Base+0x5ec>
   27e74:	b	27de0 <mpfr_rint@@Base+0x598>

0000000000027e78 <mpfr_roundeven@@Base>:
   27e78:	mov	w2, wzr
   27e7c:	b	c300 <mpfr_rint@plt>

0000000000027e80 <mpfr_round@@Base>:
   27e80:	mov	w2, #0xffffffff            	// #-1
   27e84:	b	c300 <mpfr_rint@plt>

0000000000027e88 <mpfr_trunc@@Base>:
   27e88:	mov	w2, #0x1                   	// #1
   27e8c:	b	c300 <mpfr_rint@plt>

0000000000027e90 <mpfr_ceil@@Base>:
   27e90:	mov	w2, #0x2                   	// #2
   27e94:	b	c300 <mpfr_rint@plt>

0000000000027e98 <mpfr_floor@@Base>:
   27e98:	mov	w2, #0x3                   	// #3
   27e9c:	b	c300 <mpfr_rint@plt>

0000000000027ea0 <mpfr_rint_roundeven@@Base>:
   27ea0:	sub	sp, sp, #0x60
   27ea4:	stp	x29, x30, [sp, #32]
   27ea8:	stp	x24, x23, [sp, #48]
   27eac:	stp	x22, x21, [sp, #64]
   27eb0:	stp	x20, x19, [sp, #80]
   27eb4:	ldr	x8, [x1, #16]
   27eb8:	mov	x9, #0x4                   	// #4
   27ebc:	movk	x9, #0x8000, lsl #48
   27ec0:	mov	w19, w2
   27ec4:	mov	x21, x1
   27ec8:	cmp	x8, x9
   27ecc:	mov	x20, x0
   27ed0:	add	x29, sp, #0x20
   27ed4:	b.lt	27ee4 <mpfr_rint_roundeven@@Base+0x44>  // b.tstop
   27ed8:	mov	x0, x21
   27edc:	bl	c1a0 <mpfr_integer_p@plt>
   27ee0:	cbz	w0, 27f0c <mpfr_rint_roundeven@@Base+0x6c>
   27ee4:	ldr	w3, [x21, #8]
   27ee8:	mov	x0, x20
   27eec:	mov	x1, x21
   27ef0:	mov	w2, w19
   27ef4:	ldp	x20, x19, [sp, #80]
   27ef8:	ldp	x22, x21, [sp, #64]
   27efc:	ldp	x24, x23, [sp, #48]
   27f00:	ldp	x29, x30, [sp, #32]
   27f04:	add	sp, sp, #0x60
   27f08:	b	c690 <mpfr_set4@plt>
   27f0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   27f10:	ldr	x1, [x0, #2640]
   27f14:	add	x0, x0, #0xa50
   27f18:	blr	x1
   27f1c:	mrs	x23, tpidr_el0
   27f20:	ldr	x1, [x21]
   27f24:	ldr	w24, [x23, x0]
   27f28:	mov	x22, x0
   27f2c:	mov	x0, sp
   27f30:	bl	ca60 <mpfr_init2@plt>
   27f34:	mov	x0, sp
   27f38:	mov	x1, x21
   27f3c:	mov	w2, wzr
   27f40:	str	wzr, [x23, x22]
   27f44:	bl	c300 <mpfr_rint@plt>
   27f48:	ldr	w8, [x23, x22]
   27f4c:	str	w24, [x23, x22]
   27f50:	tbnz	w8, #1, 27f90 <mpfr_rint_roundeven@@Base+0xf0>
   27f54:	ldr	w3, [sp, #8]
   27f58:	mov	x1, sp
   27f5c:	mov	x0, x20
   27f60:	mov	w2, w19
   27f64:	bl	c690 <mpfr_set4@plt>
   27f68:	mov	w19, w0
   27f6c:	mov	x0, sp
   27f70:	bl	c0b0 <mpfr_clear@plt>
   27f74:	mov	w0, w19
   27f78:	ldp	x20, x19, [sp, #80]
   27f7c:	ldp	x22, x21, [sp, #64]
   27f80:	ldp	x24, x23, [sp, #48]
   27f84:	ldp	x29, x30, [sp, #32]
   27f88:	add	sp, sp, #0x60
   27f8c:	ret
   27f90:	ldr	w2, [x21, #8]
   27f94:	mov	x0, x20
   27f98:	mov	w1, w19
   27f9c:	bl	bf90 <mpfr_overflow@plt>
   27fa0:	b	27f68 <mpfr_rint_roundeven@@Base+0xc8>

0000000000027fa4 <mpfr_rint_round@@Base>:
   27fa4:	sub	sp, sp, #0x60
   27fa8:	stp	x29, x30, [sp, #32]
   27fac:	stp	x24, x23, [sp, #48]
   27fb0:	stp	x22, x21, [sp, #64]
   27fb4:	stp	x20, x19, [sp, #80]
   27fb8:	ldr	x8, [x1, #16]
   27fbc:	mov	x9, #0x4                   	// #4
   27fc0:	movk	x9, #0x8000, lsl #48
   27fc4:	mov	w19, w2
   27fc8:	mov	x21, x1
   27fcc:	cmp	x8, x9
   27fd0:	mov	x20, x0
   27fd4:	add	x29, sp, #0x20
   27fd8:	b.lt	27fe8 <mpfr_rint_round@@Base+0x44>  // b.tstop
   27fdc:	mov	x0, x21
   27fe0:	bl	c1a0 <mpfr_integer_p@plt>
   27fe4:	cbz	w0, 28010 <mpfr_rint_round@@Base+0x6c>
   27fe8:	ldr	w3, [x21, #8]
   27fec:	mov	x0, x20
   27ff0:	mov	x1, x21
   27ff4:	mov	w2, w19
   27ff8:	ldp	x20, x19, [sp, #80]
   27ffc:	ldp	x22, x21, [sp, #64]
   28000:	ldp	x24, x23, [sp, #48]
   28004:	ldp	x29, x30, [sp, #32]
   28008:	add	sp, sp, #0x60
   2800c:	b	c690 <mpfr_set4@plt>
   28010:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28014:	ldr	x1, [x0, #2640]
   28018:	add	x0, x0, #0xa50
   2801c:	blr	x1
   28020:	mrs	x23, tpidr_el0
   28024:	ldr	x1, [x21]
   28028:	ldr	w24, [x23, x0]
   2802c:	mov	x22, x0
   28030:	mov	x0, sp
   28034:	bl	ca60 <mpfr_init2@plt>
   28038:	mov	x0, sp
   2803c:	mov	w2, #0xffffffff            	// #-1
   28040:	mov	x1, x21
   28044:	str	wzr, [x23, x22]
   28048:	bl	c300 <mpfr_rint@plt>
   2804c:	ldr	w8, [x23, x22]
   28050:	str	w24, [x23, x22]
   28054:	tbnz	w8, #1, 28094 <mpfr_rint_round@@Base+0xf0>
   28058:	ldr	w3, [sp, #8]
   2805c:	mov	x1, sp
   28060:	mov	x0, x20
   28064:	mov	w2, w19
   28068:	bl	c690 <mpfr_set4@plt>
   2806c:	mov	w19, w0
   28070:	mov	x0, sp
   28074:	bl	c0b0 <mpfr_clear@plt>
   28078:	mov	w0, w19
   2807c:	ldp	x20, x19, [sp, #80]
   28080:	ldp	x22, x21, [sp, #64]
   28084:	ldp	x24, x23, [sp, #48]
   28088:	ldp	x29, x30, [sp, #32]
   2808c:	add	sp, sp, #0x60
   28090:	ret
   28094:	ldr	w2, [x21, #8]
   28098:	mov	x0, x20
   2809c:	mov	w1, w19
   280a0:	bl	bf90 <mpfr_overflow@plt>
   280a4:	b	2806c <mpfr_rint_round@@Base+0xc8>

00000000000280a8 <mpfr_rint_trunc@@Base>:
   280a8:	sub	sp, sp, #0x60
   280ac:	stp	x29, x30, [sp, #32]
   280b0:	stp	x24, x23, [sp, #48]
   280b4:	stp	x22, x21, [sp, #64]
   280b8:	stp	x20, x19, [sp, #80]
   280bc:	ldr	x8, [x1, #16]
   280c0:	mov	x9, #0x4                   	// #4
   280c4:	movk	x9, #0x8000, lsl #48
   280c8:	mov	w19, w2
   280cc:	mov	x21, x1
   280d0:	cmp	x8, x9
   280d4:	mov	x20, x0
   280d8:	add	x29, sp, #0x20
   280dc:	b.lt	280ec <mpfr_rint_trunc@@Base+0x44>  // b.tstop
   280e0:	mov	x0, x21
   280e4:	bl	c1a0 <mpfr_integer_p@plt>
   280e8:	cbz	w0, 28114 <mpfr_rint_trunc@@Base+0x6c>
   280ec:	ldr	w3, [x21, #8]
   280f0:	mov	x0, x20
   280f4:	mov	x1, x21
   280f8:	mov	w2, w19
   280fc:	ldp	x20, x19, [sp, #80]
   28100:	ldp	x22, x21, [sp, #64]
   28104:	ldp	x24, x23, [sp, #48]
   28108:	ldp	x29, x30, [sp, #32]
   2810c:	add	sp, sp, #0x60
   28110:	b	c690 <mpfr_set4@plt>
   28114:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28118:	ldr	x1, [x0, #2640]
   2811c:	add	x0, x0, #0xa50
   28120:	blr	x1
   28124:	mrs	x23, tpidr_el0
   28128:	ldr	x1, [x21]
   2812c:	ldr	w24, [x23, x0]
   28130:	mov	x22, x0
   28134:	mov	x0, sp
   28138:	bl	ca60 <mpfr_init2@plt>
   2813c:	mov	x0, sp
   28140:	mov	w2, #0x1                   	// #1
   28144:	mov	x1, x21
   28148:	bl	c300 <mpfr_rint@plt>
   2814c:	ldr	w3, [sp, #8]
   28150:	mov	x1, sp
   28154:	mov	x0, x20
   28158:	mov	w2, w19
   2815c:	str	w24, [x23, x22]
   28160:	bl	c690 <mpfr_set4@plt>
   28164:	mov	w19, w0
   28168:	mov	x0, sp
   2816c:	bl	c0b0 <mpfr_clear@plt>
   28170:	mov	w0, w19
   28174:	ldp	x20, x19, [sp, #80]
   28178:	ldp	x22, x21, [sp, #64]
   2817c:	ldp	x24, x23, [sp, #48]
   28180:	ldp	x29, x30, [sp, #32]
   28184:	add	sp, sp, #0x60
   28188:	ret

000000000002818c <mpfr_rint_ceil@@Base>:
   2818c:	sub	sp, sp, #0x60
   28190:	stp	x29, x30, [sp, #32]
   28194:	stp	x24, x23, [sp, #48]
   28198:	stp	x22, x21, [sp, #64]
   2819c:	stp	x20, x19, [sp, #80]
   281a0:	ldr	x8, [x1, #16]
   281a4:	mov	x9, #0x4                   	// #4
   281a8:	movk	x9, #0x8000, lsl #48
   281ac:	mov	w19, w2
   281b0:	mov	x21, x1
   281b4:	cmp	x8, x9
   281b8:	mov	x20, x0
   281bc:	add	x29, sp, #0x20
   281c0:	b.lt	281d0 <mpfr_rint_ceil@@Base+0x44>  // b.tstop
   281c4:	mov	x0, x21
   281c8:	bl	c1a0 <mpfr_integer_p@plt>
   281cc:	cbz	w0, 281f8 <mpfr_rint_ceil@@Base+0x6c>
   281d0:	ldr	w3, [x21, #8]
   281d4:	mov	x0, x20
   281d8:	mov	x1, x21
   281dc:	mov	w2, w19
   281e0:	ldp	x20, x19, [sp, #80]
   281e4:	ldp	x22, x21, [sp, #64]
   281e8:	ldp	x24, x23, [sp, #48]
   281ec:	ldp	x29, x30, [sp, #32]
   281f0:	add	sp, sp, #0x60
   281f4:	b	c690 <mpfr_set4@plt>
   281f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   281fc:	ldr	x1, [x0, #2640]
   28200:	add	x0, x0, #0xa50
   28204:	blr	x1
   28208:	mrs	x23, tpidr_el0
   2820c:	ldr	x1, [x21]
   28210:	ldr	w24, [x23, x0]
   28214:	mov	x22, x0
   28218:	mov	x0, sp
   2821c:	bl	ca60 <mpfr_init2@plt>
   28220:	mov	x0, sp
   28224:	mov	w2, #0x2                   	// #2
   28228:	mov	x1, x21
   2822c:	str	wzr, [x23, x22]
   28230:	bl	c300 <mpfr_rint@plt>
   28234:	ldr	w8, [x23, x22]
   28238:	str	w24, [x23, x22]
   2823c:	tbnz	w8, #1, 2827c <mpfr_rint_ceil@@Base+0xf0>
   28240:	ldr	w3, [sp, #8]
   28244:	mov	x1, sp
   28248:	mov	x0, x20
   2824c:	mov	w2, w19
   28250:	bl	c690 <mpfr_set4@plt>
   28254:	mov	w19, w0
   28258:	mov	x0, sp
   2825c:	bl	c0b0 <mpfr_clear@plt>
   28260:	mov	w0, w19
   28264:	ldp	x20, x19, [sp, #80]
   28268:	ldp	x22, x21, [sp, #64]
   2826c:	ldp	x24, x23, [sp, #48]
   28270:	ldp	x29, x30, [sp, #32]
   28274:	add	sp, sp, #0x60
   28278:	ret
   2827c:	mov	w2, #0x1                   	// #1
   28280:	mov	x0, x20
   28284:	mov	w1, w19
   28288:	bl	bf90 <mpfr_overflow@plt>
   2828c:	b	28254 <mpfr_rint_ceil@@Base+0xc8>

0000000000028290 <mpfr_rint_floor@@Base>:
   28290:	sub	sp, sp, #0x60
   28294:	stp	x29, x30, [sp, #32]
   28298:	stp	x24, x23, [sp, #48]
   2829c:	stp	x22, x21, [sp, #64]
   282a0:	stp	x20, x19, [sp, #80]
   282a4:	ldr	x8, [x1, #16]
   282a8:	mov	x9, #0x4                   	// #4
   282ac:	movk	x9, #0x8000, lsl #48
   282b0:	mov	w19, w2
   282b4:	mov	x21, x1
   282b8:	cmp	x8, x9
   282bc:	mov	x20, x0
   282c0:	add	x29, sp, #0x20
   282c4:	b.lt	282d4 <mpfr_rint_floor@@Base+0x44>  // b.tstop
   282c8:	mov	x0, x21
   282cc:	bl	c1a0 <mpfr_integer_p@plt>
   282d0:	cbz	w0, 282fc <mpfr_rint_floor@@Base+0x6c>
   282d4:	ldr	w3, [x21, #8]
   282d8:	mov	x0, x20
   282dc:	mov	x1, x21
   282e0:	mov	w2, w19
   282e4:	ldp	x20, x19, [sp, #80]
   282e8:	ldp	x22, x21, [sp, #64]
   282ec:	ldp	x24, x23, [sp, #48]
   282f0:	ldp	x29, x30, [sp, #32]
   282f4:	add	sp, sp, #0x60
   282f8:	b	c690 <mpfr_set4@plt>
   282fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28300:	ldr	x1, [x0, #2640]
   28304:	add	x0, x0, #0xa50
   28308:	blr	x1
   2830c:	mrs	x23, tpidr_el0
   28310:	ldr	x1, [x21]
   28314:	ldr	w24, [x23, x0]
   28318:	mov	x22, x0
   2831c:	mov	x0, sp
   28320:	bl	ca60 <mpfr_init2@plt>
   28324:	mov	x0, sp
   28328:	mov	w2, #0x3                   	// #3
   2832c:	mov	x1, x21
   28330:	str	wzr, [x23, x22]
   28334:	bl	c300 <mpfr_rint@plt>
   28338:	ldr	w8, [x23, x22]
   2833c:	str	w24, [x23, x22]
   28340:	tbnz	w8, #1, 28380 <mpfr_rint_floor@@Base+0xf0>
   28344:	ldr	w3, [sp, #8]
   28348:	mov	x1, sp
   2834c:	mov	x0, x20
   28350:	mov	w2, w19
   28354:	bl	c690 <mpfr_set4@plt>
   28358:	mov	w19, w0
   2835c:	mov	x0, sp
   28360:	bl	c0b0 <mpfr_clear@plt>
   28364:	mov	w0, w19
   28368:	ldp	x20, x19, [sp, #80]
   2836c:	ldp	x22, x21, [sp, #64]
   28370:	ldp	x24, x23, [sp, #48]
   28374:	ldp	x29, x30, [sp, #32]
   28378:	add	sp, sp, #0x60
   2837c:	ret
   28380:	mov	w2, #0xffffffff            	// #-1
   28384:	mov	x0, x20
   28388:	mov	w1, w19
   2838c:	bl	bf90 <mpfr_overflow@plt>
   28390:	b	28358 <mpfr_rint_floor@@Base+0xc8>

0000000000028394 <mpfr_ui_div@@Base>:
   28394:	sub	sp, sp, #0x80
   28398:	stp	x29, x30, [sp, #32]
   2839c:	stp	x26, x25, [sp, #64]
   283a0:	stp	x24, x23, [sp, #80]
   283a4:	stp	x22, x21, [sp, #96]
   283a8:	stp	x20, x19, [sp, #112]
   283ac:	ldr	x9, [x2, #16]
   283b0:	mov	x8, #0x2                   	// #2
   283b4:	movk	x8, #0x8000, lsl #48
   283b8:	add	x10, x8, #0x2
   283bc:	cmp	x9, x10
   283c0:	mov	x19, x0
   283c4:	str	x27, [sp, #48]
   283c8:	add	x29, sp, #0x20
   283cc:	b.lt	284d8 <mpfr_ui_div@@Base+0x144>  // b.tstop
   283d0:	cbz	x1, 28530 <mpfr_ui_div@@Base+0x19c>
   283d4:	add	x9, x29, #0x18
   283d8:	clz	x11, x1
   283dc:	mov	w8, #0x40                  	// #64
   283e0:	mov	w10, #0x1                   	// #1
   283e4:	str	x9, [sp, #24]
   283e8:	lsl	x9, x1, x11
   283ec:	mov	w20, w3
   283f0:	str	x8, [sp]
   283f4:	str	w10, [sp, #8]
   283f8:	str	x9, [x29, #24]
   283fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28400:	ldr	x1, [x0, #2640]
   28404:	add	x0, x0, #0xa50
   28408:	blr	x1
   2840c:	mrs	x24, tpidr_el0
   28410:	ldr	w26, [x24, x0]
   28414:	mov	x21, x0
   28418:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2841c:	ldr	x1, [x0, #2576]
   28420:	add	x0, x0, #0xa10
   28424:	blr	x1
   28428:	ldr	x25, [x24, x0]
   2842c:	mov	x22, x0
   28430:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28434:	ldr	x1, [x0, #2608]
   28438:	add	x0, x0, #0xa30
   2843c:	blr	x1
   28440:	ldr	x27, [x24, x0]
   28444:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   28448:	mov	x23, x0
   2844c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   28450:	str	x10, [x24, x0]
   28454:	sub	x8, x8, x11
   28458:	mov	x1, sp
   2845c:	mov	x0, x19
   28460:	str	x9, [x24, x22]
   28464:	str	x8, [sp, #16]
   28468:	bl	c610 <mpfr_div@plt>
   2846c:	ldr	w8, [x24, x21]
   28470:	str	x25, [x24, x22]
   28474:	str	x27, [x24, x23]
   28478:	orr	w9, w8, w26
   2847c:	str	w9, [x24, x21]
   28480:	ldr	x10, [x19, #16]
   28484:	mov	w8, w0
   28488:	cmp	x10, x27
   2848c:	b.gt	28548 <mpfr_ui_div@@Base+0x1b4>
   28490:	cmp	x10, x25
   28494:	b.lt	28548 <mpfr_ui_div@@Base+0x1b4>  // b.tstop
   28498:	cbz	w8, 284b4 <mpfr_ui_div@@Base+0x120>
   2849c:	orr	w9, w9, #0x8
   284a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   284a4:	ldr	x1, [x0, #2640]
   284a8:	add	x0, x0, #0xa50
   284ac:	blr	x1
   284b0:	str	w9, [x24, x0]
   284b4:	ldp	x20, x19, [sp, #112]
   284b8:	ldp	x22, x21, [sp, #96]
   284bc:	ldp	x24, x23, [sp, #80]
   284c0:	ldp	x26, x25, [sp, #64]
   284c4:	ldr	x27, [sp, #48]
   284c8:	ldp	x29, x30, [sp, #32]
   284cc:	mov	w0, w8
   284d0:	add	sp, sp, #0x80
   284d4:	ret
   284d8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   284dc:	cmp	x9, x10
   284e0:	b.eq	28530 <mpfr_ui_div@@Base+0x19c>  // b.none
   284e4:	mov	x10, #0x2                   	// #2
   284e8:	movk	x10, #0x8000, lsl #48
   284ec:	cmp	x9, x10
   284f0:	b.eq	28560 <mpfr_ui_div@@Base+0x1cc>  // b.none
   284f4:	cbz	x1, 28560 <mpfr_ui_div@@Base+0x1cc>
   284f8:	ldr	w8, [x2, #8]
   284fc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   28500:	str	x9, [x19, #16]
   28504:	str	w8, [x19, #8]
   28508:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2850c:	ldr	x1, [x0, #2640]
   28510:	add	x0, x0, #0xa50
   28514:	blr	x1
   28518:	mrs	x9, tpidr_el0
   2851c:	ldr	w10, [x9, x0]
   28520:	mov	w8, wzr
   28524:	orr	w10, w10, #0x20
   28528:	str	w10, [x9, x0]
   2852c:	b	284b4 <mpfr_ui_div@@Base+0x120>
   28530:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   28534:	str	x9, [x19, #16]
   28538:	ldr	w9, [x2, #8]
   2853c:	mov	w8, wzr
   28540:	str	w9, [x19, #8]
   28544:	b	284b4 <mpfr_ui_div@@Base+0x120>
   28548:	mov	x0, x19
   2854c:	mov	w1, w8
   28550:	mov	w2, w20
   28554:	bl	cb10 <mpfr_check_range@plt>
   28558:	mov	w8, w0
   2855c:	b	284b4 <mpfr_ui_div@@Base+0x120>
   28560:	str	x8, [x19, #16]
   28564:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28568:	ldr	x1, [x0, #2640]
   2856c:	add	x0, x0, #0xa50
   28570:	blr	x1
   28574:	mrs	x9, tpidr_el0
   28578:	ldr	w10, [x9, x0]
   2857c:	mov	w8, wzr
   28580:	orr	w10, w10, #0x4
   28584:	str	w10, [x9, x0]
   28588:	b	284b4 <mpfr_ui_div@@Base+0x120>

000000000002858c <mpfr_ui_sub@@Base>:
   2858c:	sub	sp, sp, #0x80
   28590:	stp	x20, x19, [sp, #112]
   28594:	mov	w19, w3
   28598:	mov	x20, x0
   2859c:	stp	x29, x30, [sp, #32]
   285a0:	str	x27, [sp, #48]
   285a4:	stp	x26, x25, [sp, #64]
   285a8:	stp	x24, x23, [sp, #80]
   285ac:	stp	x22, x21, [sp, #96]
   285b0:	add	x29, sp, #0x20
   285b4:	cbz	x1, 286d4 <mpfr_ui_sub@@Base+0x148>
   285b8:	ldr	x9, [x2, #16]
   285bc:	mov	x8, #0x2                   	// #2
   285c0:	movk	x8, #0x8000, lsl #48
   285c4:	add	x10, x8, #0x2
   285c8:	cmp	x9, x10
   285cc:	b.lt	28700 <mpfr_ui_sub@@Base+0x174>  // b.tstop
   285d0:	add	x9, x29, #0x18
   285d4:	clz	x11, x1
   285d8:	mov	w8, #0x40                  	// #64
   285dc:	mov	w10, #0x1                   	// #1
   285e0:	str	x9, [sp, #24]
   285e4:	lsl	x9, x1, x11
   285e8:	str	x8, [sp]
   285ec:	str	w10, [sp, #8]
   285f0:	str	x9, [x29, #24]
   285f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   285f8:	ldr	x1, [x0, #2640]
   285fc:	add	x0, x0, #0xa50
   28600:	blr	x1
   28604:	mrs	x24, tpidr_el0
   28608:	ldr	w26, [x24, x0]
   2860c:	mov	x21, x0
   28610:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28614:	ldr	x1, [x0, #2576]
   28618:	add	x0, x0, #0xa10
   2861c:	blr	x1
   28620:	ldr	x25, [x24, x0]
   28624:	mov	x22, x0
   28628:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2862c:	ldr	x1, [x0, #2608]
   28630:	add	x0, x0, #0xa30
   28634:	blr	x1
   28638:	ldr	x27, [x24, x0]
   2863c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   28640:	mov	x23, x0
   28644:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   28648:	str	x10, [x24, x0]
   2864c:	sub	x8, x8, x11
   28650:	mov	x1, sp
   28654:	mov	x0, x20
   28658:	mov	w3, w19
   2865c:	str	x9, [x24, x22]
   28660:	str	x8, [sp, #16]
   28664:	bl	bbc0 <mpfr_sub@plt>
   28668:	ldr	w8, [x24, x21]
   2866c:	str	x25, [x24, x22]
   28670:	str	x27, [x24, x23]
   28674:	orr	w9, w8, w26
   28678:	str	w9, [x24, x21]
   2867c:	ldr	x10, [x20, #16]
   28680:	mov	w8, w0
   28684:	cmp	x10, x27
   28688:	b.gt	28748 <mpfr_ui_sub@@Base+0x1bc>
   2868c:	cmp	x10, x25
   28690:	b.lt	28748 <mpfr_ui_sub@@Base+0x1bc>  // b.tstop
   28694:	cbz	w8, 286b0 <mpfr_ui_sub@@Base+0x124>
   28698:	orr	w9, w9, #0x8
   2869c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   286a0:	ldr	x1, [x0, #2640]
   286a4:	add	x0, x0, #0xa50
   286a8:	blr	x1
   286ac:	str	w9, [x24, x0]
   286b0:	ldp	x20, x19, [sp, #112]
   286b4:	ldp	x22, x21, [sp, #96]
   286b8:	ldp	x24, x23, [sp, #80]
   286bc:	ldp	x26, x25, [sp, #64]
   286c0:	ldr	x27, [sp, #48]
   286c4:	ldp	x29, x30, [sp, #32]
   286c8:	mov	w0, w8
   286cc:	add	sp, sp, #0x80
   286d0:	ret
   286d4:	mov	x0, x20
   286d8:	mov	x1, x2
   286dc:	mov	w2, w19
   286e0:	ldp	x20, x19, [sp, #112]
   286e4:	ldp	x22, x21, [sp, #96]
   286e8:	ldp	x24, x23, [sp, #80]
   286ec:	ldp	x26, x25, [sp, #64]
   286f0:	ldr	x27, [sp, #48]
   286f4:	ldp	x29, x30, [sp, #32]
   286f8:	add	sp, sp, #0x80
   286fc:	b	bdc0 <mpfr_neg@plt>
   28700:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   28704:	cmp	x9, x10
   28708:	b.eq	28760 <mpfr_ui_sub@@Base+0x1d4>  // b.none
   2870c:	mov	x10, #0x2                   	// #2
   28710:	movk	x10, #0x8000, lsl #48
   28714:	cmp	x9, x10
   28718:	b.ne	28778 <mpfr_ui_sub@@Base+0x1ec>  // b.any
   2871c:	str	x8, [x20, #16]
   28720:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28724:	ldr	x1, [x0, #2640]
   28728:	add	x0, x0, #0xa50
   2872c:	blr	x1
   28730:	mrs	x9, tpidr_el0
   28734:	ldr	w10, [x9, x0]
   28738:	mov	w8, wzr
   2873c:	orr	w10, w10, #0x4
   28740:	str	w10, [x9, x0]
   28744:	b	286b0 <mpfr_ui_sub@@Base+0x124>
   28748:	mov	x0, x20
   2874c:	mov	w1, w8
   28750:	mov	w2, w19
   28754:	bl	cb10 <mpfr_check_range@plt>
   28758:	mov	w8, w0
   2875c:	b	286b0 <mpfr_ui_sub@@Base+0x124>
   28760:	str	x10, [x20, #16]
   28764:	ldr	w9, [x2, #8]
   28768:	mov	w8, wzr
   2876c:	neg	w9, w9
   28770:	str	w9, [x20, #8]
   28774:	b	286b0 <mpfr_ui_sub@@Base+0x124>
   28778:	mov	x0, x20
   2877c:	mov	w3, w19
   28780:	ldp	x20, x19, [sp, #112]
   28784:	ldp	x22, x21, [sp, #96]
   28788:	ldp	x24, x23, [sp, #80]
   2878c:	ldp	x26, x25, [sp, #64]
   28790:	ldr	x27, [sp, #48]
   28794:	ldp	x29, x30, [sp, #32]
   28798:	mov	x2, xzr
   2879c:	add	sp, sp, #0x80
   287a0:	b	c5e0 <mpfr_set_ui_2exp@plt>

00000000000287a4 <mpfr_urandom@@Base>:
   287a4:	sub	sp, sp, #0x70
   287a8:	stp	x29, x30, [sp, #16]
   287ac:	stp	x28, x27, [sp, #32]
   287b0:	stp	x26, x25, [sp, #48]
   287b4:	stp	x24, x23, [sp, #64]
   287b8:	stp	x22, x21, [sp, #80]
   287bc:	stp	x20, x19, [sp, #96]
   287c0:	add	x29, sp, #0x10
   287c4:	str	w2, [sp, #4]
   287c8:	mov	x21, x1
   287cc:	mov	x20, x0
   287d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   287d4:	ldr	x1, [x0, #2640]
   287d8:	add	x0, x0, #0xa50
   287dc:	blr	x1
   287e0:	mrs	x23, tpidr_el0
   287e4:	ldr	w8, [x23, x0]
   287e8:	str	w8, [sp]
   287ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   287f0:	ldr	x1, [x0, #2576]
   287f4:	add	x0, x0, #0xa10
   287f8:	blr	x1
   287fc:	ldr	x25, [x23, x0]
   28800:	mov	x8, x0
   28804:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28808:	ldr	x1, [x0, #2608]
   2880c:	add	x0, x0, #0xa30
   28810:	blr	x1
   28814:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   28818:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2881c:	ldr	x26, [x23, x0]
   28820:	str	x9, [x23, x8]
   28824:	str	x10, [x23, x0]
   28828:	ldr	x22, [x20, #24]
   2882c:	ldr	x28, [x20]
   28830:	mov	x27, xzr
   28834:	mov	w8, #0x1                   	// #1
   28838:	mov	w19, #0x8                   	// #8
   2883c:	mov	x24, #0xbfffffffffffffff    	// #-4611686018427387905
   28840:	str	xzr, [x20, #16]
   28844:	str	w8, [x20, #8]
   28848:	mov	w2, #0x8                   	// #8
   2884c:	mov	x0, x22
   28850:	mov	x1, x21
   28854:	bl	c800 <mpfr_rand_raw@plt>
   28858:	ldr	x8, [x22]
   2885c:	clz	x9, x8
   28860:	cmp	x8, #0x0
   28864:	sub	w8, w9, #0x38
   28868:	csel	w8, w19, w8, eq  // eq = none
   2886c:	cmp	x27, x24
   28870:	sxtw	x9, w8
   28874:	csel	x9, x9, xzr, gt
   28878:	cmp	w8, #0x8
   2887c:	sub	x27, x27, x9
   28880:	b.eq	28848 <mpfr_urandom@@Base+0xa4>  // b.none
   28884:	subs	x2, x28, #0x1
   28888:	b.eq	289b4 <mpfr_urandom@@Base+0x210>  // b.none
   2888c:	mov	x0, x22
   28890:	mov	x1, x21
   28894:	bl	c800 <mpfr_rand_raw@plt>
   28898:	ldr	x8, [x20]
   2889c:	sub	x9, x8, #0x1
   288a0:	add	x8, x8, #0x3e
   288a4:	cmp	x9, #0x0
   288a8:	csel	x8, x8, x9, lt  // lt = tstop
   288ac:	asr	x19, x8, #6
   288b0:	add	x2, x19, #0x1
   288b4:	lsl	x8, x2, #6
   288b8:	subs	x3, x8, x28
   288bc:	b.eq	288cc <mpfr_urandom@@Base+0x128>  // b.none
   288c0:	mov	x0, x22
   288c4:	mov	x1, x22
   288c8:	bl	bd10 <__gmpn_lshift@plt>
   288cc:	lsl	x8, x19, #3
   288d0:	ldr	x9, [x22, x8]
   288d4:	orr	x9, x9, #0x8000000000000000
   288d8:	str	x9, [x22, x8]
   288dc:	add	x0, sp, #0x8
   288e0:	mov	w2, #0x1                   	// #1
   288e4:	mov	x1, x21
   288e8:	bl	c800 <mpfr_rand_raw@plt>
   288ec:	ldr	w19, [sp, #4]
   288f0:	cmp	w19, #0x2
   288f4:	b.eq	28910 <mpfr_urandom@@Base+0x16c>  // b.none
   288f8:	cmp	w19, #0x4
   288fc:	b.eq	28910 <mpfr_urandom@@Base+0x16c>  // b.none
   28900:	mov	w8, #0xffffffff            	// #-1
   28904:	cbnz	w19, 2891c <mpfr_urandom@@Base+0x178>
   28908:	ldr	x9, [sp, #8]
   2890c:	cbz	x9, 2891c <mpfr_urandom@@Base+0x178>
   28910:	mov	x0, x20
   28914:	bl	c160 <mpfr_nextabove@plt>
   28918:	mov	w8, #0x1                   	// #1
   2891c:	ldr	x9, [x20, #16]
   28920:	add	x9, x9, x27
   28924:	str	x9, [x20, #16]
   28928:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2892c:	ldr	x1, [x0, #2640]
   28930:	add	x0, x0, #0xa50
   28934:	blr	x1
   28938:	ldr	w10, [sp]
   2893c:	str	w10, [x23, x0]
   28940:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28944:	ldr	x1, [x0, #2576]
   28948:	add	x0, x0, #0xa10
   2894c:	blr	x1
   28950:	str	x25, [x23, x0]
   28954:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28958:	ldr	x1, [x0, #2608]
   2895c:	add	x0, x0, #0xa30
   28960:	blr	x1
   28964:	cmp	x9, x26
   28968:	str	x26, [x23, x0]
   2896c:	b.gt	289c0 <mpfr_urandom@@Base+0x21c>
   28970:	cmp	x9, x25
   28974:	b.lt	289c0 <mpfr_urandom@@Base+0x21c>  // b.tstop
   28978:	orr	w9, w10, #0x8
   2897c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28980:	ldr	x1, [x0, #2640]
   28984:	add	x0, x0, #0xa50
   28988:	blr	x1
   2898c:	str	w9, [x23, x0]
   28990:	ldp	x20, x19, [sp, #96]
   28994:	ldp	x22, x21, [sp, #80]
   28998:	ldp	x24, x23, [sp, #64]
   2899c:	ldp	x26, x25, [sp, #48]
   289a0:	ldp	x28, x27, [sp, #32]
   289a4:	ldp	x29, x30, [sp, #16]
   289a8:	mov	w0, w8
   289ac:	add	sp, sp, #0x70
   289b0:	ret
   289b4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   289b8:	str	x8, [x22]
   289bc:	b	288dc <mpfr_urandom@@Base+0x138>
   289c0:	mov	x0, x20
   289c4:	mov	w1, w8
   289c8:	mov	w2, w19
   289cc:	bl	cb10 <mpfr_check_range@plt>
   289d0:	mov	w8, w0
   289d4:	b	28990 <mpfr_urandom@@Base+0x1ec>

00000000000289d8 <mpfr_rand_raw@@Base>:
   289d8:	sub	sp, sp, #0x40
   289dc:	str	x21, [sp, #32]
   289e0:	stp	x20, x19, [sp, #48]
   289e4:	mov	x20, x2
   289e8:	mov	x21, x1
   289ec:	cmp	x2, #0x0
   289f0:	mov	x19, x0
   289f4:	stp	x29, x30, [sp, #16]
   289f8:	add	x29, sp, #0x10
   289fc:	b.le	28a64 <mpfr_rand_raw@@Base+0x8c>
   28a00:	mov	x0, sp
   28a04:	bl	bfe0 <mpfr_mpz_init@plt>
   28a08:	mov	x0, sp
   28a0c:	mov	x1, x21
   28a10:	mov	x2, x20
   28a14:	bl	cce0 <__gmpz_urandomb@plt>
   28a18:	ldr	x1, [sp, #8]
   28a1c:	cmp	x1, x19
   28a20:	b.eq	28a48 <mpfr_rand_raw@@Base+0x70>  // b.none
   28a24:	sub	x8, x20, #0x1
   28a28:	add	x9, x20, #0x3e
   28a2c:	cmp	x8, #0x0
   28a30:	csel	x8, x9, x8, lt  // lt = tstop
   28a34:	asr	x8, x8, #6
   28a38:	lsl	x8, x8, #3
   28a3c:	add	x2, x8, #0x8
   28a40:	mov	x0, x19
   28a44:	bl	ba70 <memcpy@plt>
   28a48:	mov	x0, sp
   28a4c:	bl	c1b0 <mpfr_mpz_clear@plt>
   28a50:	ldp	x20, x19, [sp, #48]
   28a54:	ldr	x21, [sp, #32]
   28a58:	ldp	x29, x30, [sp, #16]
   28a5c:	add	sp, sp, #0x40
   28a60:	ret
   28a64:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28a68:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28a6c:	add	x0, x0, #0xe1f
   28a70:	add	x2, x2, #0xe2a
   28a74:	mov	w1, #0x26                  	// #38
   28a78:	bl	cb20 <mpfr_assert_fail@plt>
   28a7c:	b	28a00 <mpfr_rand_raw@@Base+0x28>

0000000000028a80 <mpfr_urandomb@@Base>:
   28a80:	sub	sp, sp, #0x60
   28a84:	stp	x29, x30, [sp, #16]
   28a88:	stp	x24, x23, [sp, #48]
   28a8c:	stp	x22, x21, [sp, #64]
   28a90:	stp	x20, x19, [sp, #80]
   28a94:	ldr	x24, [x0]
   28a98:	mov	w8, #0x1                   	// #1
   28a9c:	str	w8, [x0, #8]
   28aa0:	ldr	x19, [x0, #24]
   28aa4:	sub	x8, x24, #0x1
   28aa8:	add	x9, x24, #0x3e
   28aac:	cmp	x8, #0x0
   28ab0:	csel	x8, x9, x8, lt  // lt = tstop
   28ab4:	str	x25, [sp, #32]
   28ab8:	asr	x25, x8, #6
   28abc:	add	x21, x25, #0x1
   28ac0:	mov	x23, x1
   28ac4:	mov	x20, x0
   28ac8:	cmp	x24, #0x0
   28acc:	lsl	w22, w21, #6
   28ad0:	add	x29, sp, #0x10
   28ad4:	b.le	28c0c <mpfr_urandomb@@Base+0x18c>
   28ad8:	mov	x0, sp
   28adc:	sub	w22, w22, w24
   28ae0:	bl	bfe0 <mpfr_mpz_init@plt>
   28ae4:	mov	x0, sp
   28ae8:	mov	x1, x23
   28aec:	mov	x2, x24
   28af0:	bl	cce0 <__gmpz_urandomb@plt>
   28af4:	ldr	x1, [sp, #8]
   28af8:	cmp	x1, x19
   28afc:	b.eq	28b10 <mpfr_urandomb@@Base+0x90>  // b.none
   28b00:	lsl	x8, x25, #3
   28b04:	add	x2, x8, #0x8
   28b08:	mov	x0, x19
   28b0c:	bl	ba70 <memcpy@plt>
   28b10:	mov	x0, sp
   28b14:	bl	c1b0 <mpfr_mpz_clear@plt>
   28b18:	cbz	w22, 28b30 <mpfr_urandomb@@Base+0xb0>
   28b1c:	mov	x0, x19
   28b20:	mov	x1, x19
   28b24:	mov	x2, x21
   28b28:	mov	w3, w22
   28b2c:	bl	bd10 <__gmpn_lshift@plt>
   28b30:	cbz	x21, 28b58 <mpfr_urandomb@@Base+0xd8>
   28b34:	mov	x21, xzr
   28b38:	mov	x22, xzr
   28b3c:	ldr	x8, [x19, x25, lsl #3]
   28b40:	cbnz	x8, 28b68 <mpfr_urandomb@@Base+0xe8>
   28b44:	sub	x25, x25, #0x1
   28b48:	sub	x22, x22, #0x40
   28b4c:	cmn	x25, #0x1
   28b50:	sub	x21, x21, #0x8
   28b54:	b.ne	28b3c <mpfr_urandomb@@Base+0xbc>  // b.any
   28b58:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   28b5c:	mov	w0, wzr
   28b60:	str	x8, [x20, #16]
   28b64:	b	28bf0 <mpfr_urandomb@@Base+0x170>
   28b68:	clz	x3, x8
   28b6c:	sub	x8, x22, x3
   28b70:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28b74:	ldr	x1, [x0, #2576]
   28b78:	add	x0, x0, #0xa10
   28b7c:	blr	x1
   28b80:	mrs	x9, tpidr_el0
   28b84:	ldr	x10, [x9, x0]
   28b88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28b8c:	ldr	x1, [x0, #2608]
   28b90:	add	x0, x0, #0xa30
   28b94:	blr	x1
   28b98:	cmp	x8, x10
   28b9c:	b.lt	28c28 <mpfr_urandomb@@Base+0x1a8>  // b.tstop
   28ba0:	ldr	x10, [x9, x0]
   28ba4:	cmp	x8, x10
   28ba8:	b.gt	28c28 <mpfr_urandomb@@Base+0x1a8>
   28bac:	add	x2, x25, #0x1
   28bb0:	str	x8, [x20, #16]
   28bb4:	cbz	w3, 28bcc <mpfr_urandomb@@Base+0x14c>
   28bb8:	sub	x0, x19, x21
   28bbc:	mov	x1, x19
   28bc0:	bl	bd10 <__gmpn_lshift@plt>
   28bc4:	cbnz	x22, 28bdc <mpfr_urandomb@@Base+0x15c>
   28bc8:	b	28bec <mpfr_urandomb@@Base+0x16c>
   28bcc:	cbz	x22, 28bec <mpfr_urandomb@@Base+0x16c>
   28bd0:	sub	x0, x19, x21
   28bd4:	mov	x1, x19
   28bd8:	bl	bb40 <__gmpn_copyd@plt>
   28bdc:	neg	x2, x21
   28be0:	mov	x0, x19
   28be4:	mov	w1, wzr
   28be8:	bl	c150 <memset@plt>
   28bec:	mov	w0, wzr
   28bf0:	ldp	x20, x19, [sp, #80]
   28bf4:	ldp	x22, x21, [sp, #64]
   28bf8:	ldp	x24, x23, [sp, #48]
   28bfc:	ldr	x25, [sp, #32]
   28c00:	ldp	x29, x30, [sp, #16]
   28c04:	add	sp, sp, #0x60
   28c08:	ret
   28c0c:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28c10:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28c14:	add	x0, x0, #0xe1f
   28c18:	add	x2, x2, #0xe2a
   28c1c:	mov	w1, #0x26                  	// #38
   28c20:	bl	cb20 <mpfr_assert_fail@plt>
   28c24:	b	28ad8 <mpfr_urandomb@@Base+0x58>
   28c28:	mov	x8, #0x2                   	// #2
   28c2c:	movk	x8, #0x8000, lsl #48
   28c30:	str	x8, [x20, #16]
   28c34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28c38:	ldr	x1, [x0, #2640]
   28c3c:	add	x0, x0, #0xa50
   28c40:	blr	x1
   28c44:	ldr	w8, [x9, x0]
   28c48:	orr	w8, w8, #0x4
   28c4c:	str	w8, [x9, x0]
   28c50:	mov	w0, #0x1                   	// #1
   28c54:	b	28bf0 <mpfr_urandomb@@Base+0x170>

0000000000028c58 <mpfr_get_z_2exp@@Base>:
   28c58:	stp	x29, x30, [sp, #-48]!
   28c5c:	stp	x22, x21, [sp, #16]
   28c60:	stp	x20, x19, [sp, #32]
   28c64:	ldr	x8, [x1, #16]
   28c68:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   28c6c:	mov	x19, x0
   28c70:	mov	x29, sp
   28c74:	cmp	x8, x9
   28c78:	b.le	28d14 <mpfr_get_z_2exp@@Base+0xbc>
   28c7c:	ldr	x8, [x1]
   28c80:	mov	x9, #0x1fffff0000          	// #137438887936
   28c84:	movk	x9, #0xffc1
   28c88:	mov	x20, x1
   28c8c:	sub	x10, x8, #0x1
   28c90:	add	x11, x8, #0x3e
   28c94:	cmp	x10, #0x0
   28c98:	csel	x10, x11, x10, lt  // lt = tstop
   28c9c:	asr	x22, x10, #6
   28ca0:	cmp	x8, x9
   28ca4:	add	x21, x22, #0x1
   28ca8:	b.ge	28d54 <mpfr_get_z_2exp@@Base+0xfc>  // b.tcont
   28cac:	lsl	x1, x21, #6
   28cb0:	mov	x0, x19
   28cb4:	bl	c430 <__gmpz_realloc2@plt>
   28cb8:	ldr	w8, [x20]
   28cbc:	ldr	x0, [x19, #8]
   28cc0:	ldr	x1, [x20, #24]
   28cc4:	neg	w8, w8
   28cc8:	ands	w3, w8, #0x3f
   28ccc:	b.eq	28d70 <mpfr_get_z_2exp@@Base+0x118>  // b.none
   28cd0:	mov	x2, x21
   28cd4:	bl	bd30 <__gmpn_rshift@plt>
   28cd8:	ldr	w8, [x20, #8]
   28cdc:	mvn	w9, w22
   28ce0:	cmp	w8, #0x0
   28ce4:	csel	x8, x9, x21, lt  // lt = tstop
   28ce8:	str	w8, [x19, #4]
   28cec:	ldr	x8, [x20, #16]
   28cf0:	ldr	x9, [x20]
   28cf4:	eor	x10, x8, #0x8000000000000000
   28cf8:	cmp	x10, x9
   28cfc:	b.cc	28d84 <mpfr_get_z_2exp@@Base+0x12c>  // b.lo, b.ul, b.last
   28d00:	sub	x0, x8, x9
   28d04:	ldp	x20, x19, [sp, #32]
   28d08:	ldp	x22, x21, [sp, #16]
   28d0c:	ldp	x29, x30, [sp], #48
   28d10:	ret
   28d14:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   28d18:	cmp	x8, x9
   28d1c:	b.ne	28db8 <mpfr_get_z_2exp@@Base+0x160>  // b.any
   28d20:	mov	x0, x19
   28d24:	mov	x1, xzr
   28d28:	bl	bd00 <__gmpz_set_ui@plt>
   28d2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28d30:	ldr	x1, [x0, #2576]
   28d34:	add	x0, x0, #0xa10
   28d38:	blr	x1
   28d3c:	mrs	x8, tpidr_el0
   28d40:	ldr	x0, [x8, x0]
   28d44:	ldp	x20, x19, [sp, #32]
   28d48:	ldp	x22, x21, [sp, #16]
   28d4c:	ldp	x29, x30, [sp], #48
   28d50:	ret
   28d54:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28d58:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28d5c:	add	x0, x0, #0xe35
   28d60:	add	x2, x2, #0xe41
   28d64:	mov	w1, #0x3c                  	// #60
   28d68:	bl	cb20 <mpfr_assert_fail@plt>
   28d6c:	b	28cac <mpfr_get_z_2exp@@Base+0x54>
   28d70:	cmp	x0, x1
   28d74:	b.eq	28cd8 <mpfr_get_z_2exp@@Base+0x80>  // b.none
   28d78:	lsl	x2, x21, #3
   28d7c:	bl	ba70 <memcpy@plt>
   28d80:	b	28cd8 <mpfr_get_z_2exp@@Base+0x80>
   28d84:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28d88:	ldr	x1, [x0, #2640]
   28d8c:	add	x0, x0, #0xa50
   28d90:	blr	x1
   28d94:	mrs	x8, tpidr_el0
   28d98:	ldr	w9, [x8, x0]
   28d9c:	orr	w9, w9, #0x10
   28da0:	str	w9, [x8, x0]
   28da4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   28da8:	ldp	x20, x19, [sp, #32]
   28dac:	ldp	x22, x21, [sp, #16]
   28db0:	ldp	x29, x30, [sp], #48
   28db4:	ret
   28db8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28dbc:	ldr	x1, [x0, #2640]
   28dc0:	add	x0, x0, #0xa50
   28dc4:	blr	x1
   28dc8:	mrs	x8, tpidr_el0
   28dcc:	ldr	w9, [x8, x0]
   28dd0:	orr	w9, w9, #0x10
   28dd4:	str	w9, [x8, x0]
   28dd8:	b	28d20 <mpfr_get_z_2exp@@Base+0xc8>

0000000000028ddc <mpfr_swap@@Base>:
   28ddc:	ldr	x8, [x0]
   28de0:	ldr	x9, [x1]
   28de4:	str	x8, [x1]
   28de8:	str	x9, [x0]
   28dec:	ldr	w8, [x0, #8]
   28df0:	ldr	w9, [x1, #8]
   28df4:	str	w8, [x1, #8]
   28df8:	str	w9, [x0, #8]
   28dfc:	ldr	q0, [x0, #16]
   28e00:	ldr	q1, [x1, #16]
   28e04:	str	q0, [x1, #16]
   28e08:	str	q1, [x0, #16]
   28e0c:	ret

0000000000028e10 <mpfr_fac_ui@@Base>:
   28e10:	sub	sp, sp, #0xa0
   28e14:	stp	x20, x19, [sp, #144]
   28e18:	mov	w19, w2
   28e1c:	subs	x9, x1, #0x1
   28e20:	mov	x20, x0
   28e24:	stp	x29, x30, [sp, #64]
   28e28:	stp	x28, x27, [sp, #80]
   28e2c:	stp	x26, x25, [sp, #96]
   28e30:	stp	x24, x23, [sp, #112]
   28e34:	stp	x22, x21, [sp, #128]
   28e38:	add	x29, sp, #0x40
   28e3c:	b.ls	290fc <mpfr_fac_ui@@Base+0x2ec>  // b.plast
   28e40:	mov	x25, #0xfffffffffffffeff    	// #-257
   28e44:	mov	x21, x1
   28e48:	movk	x25, #0x7fff, lsl #48
   28e4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28e50:	ldr	x1, [x0, #2640]
   28e54:	add	x0, x0, #0xa50
   28e58:	blr	x1
   28e5c:	mrs	x12, tpidr_el0
   28e60:	ldr	w8, [x12, x0]
   28e64:	str	w8, [sp, #20]
   28e68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28e6c:	ldr	x1, [x0, #2576]
   28e70:	add	x0, x0, #0xa10
   28e74:	blr	x1
   28e78:	ldr	x10, [x12, x0]
   28e7c:	mov	x8, x0
   28e80:	str	x10, [sp, #8]
   28e84:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   28e88:	ldr	x1, [x0, #2608]
   28e8c:	add	x0, x0, #0xa30
   28e90:	blr	x1
   28e94:	ldr	x10, [x12, x0]
   28e98:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   28e9c:	str	x11, [x12, x0]
   28ea0:	add	x0, sp, #0x20
   28ea4:	str	x10, [sp]
   28ea8:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   28eac:	str	x10, [x12, x8]
   28eb0:	ldr	x24, [x20]
   28eb4:	clz	x8, x9
   28eb8:	mov	w9, #0x87                  	// #135
   28ebc:	sub	w8, w9, w8, lsl #1
   28ec0:	add	x22, x24, w8, sxtw
   28ec4:	mov	x1, x22
   28ec8:	str	x12, [sp, #24]
   28ecc:	bl	ca60 <mpfr_init2@plt>
   28ed0:	cmp	w19, #0x0
   28ed4:	mov	w23, #0x40                  	// #64
   28ed8:	cinc	x26, x24, eq  // eq = none
   28edc:	mov	w27, #0x1                   	// #1
   28ee0:	add	x0, sp, #0x20
   28ee4:	mov	w1, #0x1                   	// #1
   28ee8:	mov	x2, xzr
   28eec:	mov	w3, w27
   28ef0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   28ef4:	mov	w28, w0
   28ef8:	mov	w24, #0x2                   	// #2
   28efc:	add	x0, sp, #0x20
   28f00:	add	x1, sp, #0x20
   28f04:	mov	x2, x24
   28f08:	mov	w3, w27
   28f0c:	bl	bab0 <mpfr_mul_ui@plt>
   28f10:	cmp	w28, #0x0
   28f14:	add	x24, x24, #0x1
   28f18:	csel	w28, w0, w28, eq  // eq = none
   28f1c:	cmp	x24, x21
   28f20:	b.ls	28efc <mpfr_fac_ui@@Base+0xec>  // b.plast
   28f24:	subs	x24, x22, #0x1
   28f28:	b.eq	28fe8 <mpfr_fac_ui@@Base+0x1d8>  // b.none
   28f2c:	cmp	x22, #0x1
   28f30:	b.le	28ff4 <mpfr_fac_ui@@Base+0x1e4>
   28f34:	clz	x8, x24
   28f38:	mov	w9, #0x40                  	// #64
   28f3c:	sub	x8, x9, x8
   28f40:	cbz	w28, 2903c <mpfr_fac_ui@@Base+0x22c>
   28f44:	ldr	x9, [sp, #48]
   28f48:	add	x10, x25, #0x105
   28f4c:	cmp	x9, x10
   28f50:	b.lt	28fbc <mpfr_fac_ui@@Base+0x1ac>  // b.tstop
   28f54:	ldr	x9, [sp, #32]
   28f58:	sub	x2, x24, x8
   28f5c:	ldr	x0, [sp, #56]
   28f60:	mov	x3, x26
   28f64:	sub	x8, x9, #0x1
   28f68:	add	x9, x9, #0x3e
   28f6c:	cmp	x8, #0x0
   28f70:	csel	x8, x9, x8, lt  // lt = tstop
   28f74:	asr	x8, x8, #6
   28f78:	add	x1, x8, #0x1
   28f7c:	bl	c370 <mpfr_round_p@plt>
   28f80:	cbz	w0, 28fbc <mpfr_fac_ui@@Base+0x1ac>
   28f84:	ldr	w3, [sp, #40]
   28f88:	add	x1, sp, #0x20
   28f8c:	mov	x0, x20
   28f90:	mov	w2, w19
   28f94:	bl	c690 <mpfr_set4@plt>
   28f98:	tbz	w28, #31, 28fa4 <mpfr_fac_ui@@Base+0x194>
   28f9c:	cmp	w0, #0x1
   28fa0:	b.lt	29054 <mpfr_fac_ui@@Base+0x244>  // b.tstop
   28fa4:	cmp	w28, #0x1
   28fa8:	b.lt	28fb0 <mpfr_fac_ui@@Base+0x1a0>  // b.tstop
   28fac:	tbz	w0, #31, 29054 <mpfr_fac_ui@@Base+0x244>
   28fb0:	cmp	w27, #0x1
   28fb4:	mov	w8, #0x1                   	// #1
   28fb8:	cinc	w27, w8, eq  // eq = none
   28fbc:	sub	x8, x25, x22
   28fc0:	cmp	x23, x8
   28fc4:	b.gt	29020 <mpfr_fac_ui@@Base+0x210>
   28fc8:	add	x22, x22, x23
   28fcc:	cmp	x22, #0x0
   28fd0:	cinc	x8, x22, lt  // lt = tstop
   28fd4:	add	x0, sp, #0x20
   28fd8:	mov	x1, x22
   28fdc:	asr	x23, x8, #1
   28fe0:	bl	bf20 <mpfr_set_prec@plt>
   28fe4:	b	28ee0 <mpfr_fac_ui@@Base+0xd0>
   28fe8:	mov	x8, xzr
   28fec:	cbnz	w28, 28f44 <mpfr_fac_ui@@Base+0x134>
   28ff0:	b	2903c <mpfr_fac_ui@@Base+0x22c>
   28ff4:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28ff8:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   28ffc:	mov	w1, #0x4d                  	// #77
   29000:	add	x0, x0, #0xe52
   29004:	add	x2, x2, #0xe5e
   29008:	bl	cb20 <mpfr_assert_fail@plt>
   2900c:	clz	x8, x24
   29010:	mov	w9, #0x40                  	// #64
   29014:	sub	x8, x9, x8
   29018:	cbnz	w28, 28f44 <mpfr_fac_ui@@Base+0x134>
   2901c:	b	2903c <mpfr_fac_ui@@Base+0x22c>
   29020:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29024:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   29028:	mov	w1, #0x64                  	// #100
   2902c:	add	x0, x0, #0xe52
   29030:	add	x2, x2, #0xde2
   29034:	bl	cb20 <mpfr_assert_fail@plt>
   29038:	b	28fc8 <mpfr_fac_ui@@Base+0x1b8>
   2903c:	ldr	w3, [sp, #40]
   29040:	add	x1, sp, #0x20
   29044:	mov	x0, x20
   29048:	mov	w2, w19
   2904c:	bl	c690 <mpfr_set4@plt>
   29050:	mov	w28, w0
   29054:	add	x0, sp, #0x20
   29058:	bl	c0b0 <mpfr_clear@plt>
   2905c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29060:	ldr	x1, [x0, #2640]
   29064:	add	x0, x0, #0xa50
   29068:	blr	x1
   2906c:	ldr	x9, [sp, #24]
   29070:	ldr	w10, [sp, #20]
   29074:	str	w10, [x9, x0]
   29078:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2907c:	ldr	x1, [x0, #2576]
   29080:	add	x0, x0, #0xa10
   29084:	blr	x1
   29088:	ldr	x11, [sp, #8]
   2908c:	str	x11, [x9, x0]
   29090:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29094:	ldr	x1, [x0, #2608]
   29098:	add	x0, x0, #0xa30
   2909c:	blr	x1
   290a0:	ldr	x12, [sp]
   290a4:	str	x12, [x9, x0]
   290a8:	ldr	x8, [x20, #16]
   290ac:	cmp	x8, x12
   290b0:	b.gt	29114 <mpfr_fac_ui@@Base+0x304>
   290b4:	cmp	x8, x11
   290b8:	b.lt	29114 <mpfr_fac_ui@@Base+0x304>  // b.tstop
   290bc:	cbz	w28, 290d8 <mpfr_fac_ui@@Base+0x2c8>
   290c0:	orr	w8, w10, #0x8
   290c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   290c8:	ldr	x1, [x0, #2640]
   290cc:	add	x0, x0, #0xa50
   290d0:	blr	x1
   290d4:	str	w8, [x9, x0]
   290d8:	mov	w0, w28
   290dc:	ldp	x20, x19, [sp, #144]
   290e0:	ldp	x22, x21, [sp, #128]
   290e4:	ldp	x24, x23, [sp, #112]
   290e8:	ldp	x26, x25, [sp, #96]
   290ec:	ldp	x28, x27, [sp, #80]
   290f0:	ldp	x29, x30, [sp, #64]
   290f4:	add	sp, sp, #0xa0
   290f8:	ret
   290fc:	mov	w1, #0x1                   	// #1
   29100:	mov	x0, x20
   29104:	mov	x2, xzr
   29108:	mov	w3, w19
   2910c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   29110:	b	29124 <mpfr_fac_ui@@Base+0x314>
   29114:	mov	x0, x20
   29118:	mov	w1, w28
   2911c:	mov	w2, w19
   29120:	bl	cb10 <mpfr_check_range@plt>
   29124:	mov	w28, w0
   29128:	b	290d8 <mpfr_fac_ui@@Base+0x2c8>

000000000002912c <mpfr_cosh@@Base>:
   2912c:	sub	sp, sp, #0x160
   29130:	stp	x29, x30, [sp, #256]
   29134:	stp	x28, x27, [sp, #272]
   29138:	stp	x26, x25, [sp, #288]
   2913c:	stp	x24, x23, [sp, #304]
   29140:	stp	x22, x21, [sp, #320]
   29144:	stp	x20, x19, [sp, #336]
   29148:	ldr	x9, [x1, #16]
   2914c:	mov	x11, #0xfffffffffffffeff    	// #-257
   29150:	movk	x11, #0x7fff, lsl #48
   29154:	add	x8, x11, #0x105
   29158:	mov	w26, w2
   2915c:	cmp	x9, x8
   29160:	mov	x20, x0
   29164:	add	x29, sp, #0x100
   29168:	b.lt	29510 <mpfr_cosh@@Base+0x3e4>  // b.tstop
   2916c:	mov	x22, x1
   29170:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29174:	ldr	x1, [x0, #2640]
   29178:	add	x0, x0, #0xa50
   2917c:	blr	x1
   29180:	mrs	x25, tpidr_el0
   29184:	ldr	w19, [x25, x0]
   29188:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2918c:	ldr	x1, [x0, #2576]
   29190:	add	x0, x0, #0xa10
   29194:	blr	x1
   29198:	ldr	x27, [x25, x0]
   2919c:	mov	x8, x0
   291a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   291a4:	ldr	x1, [x0, #2608]
   291a8:	add	x0, x0, #0xa30
   291ac:	blr	x1
   291b0:	ldr	x28, [x25, x0]
   291b4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   291b8:	str	x10, [x25, x8]
   291bc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   291c0:	str	x8, [x25, x0]
   291c4:	tbz	x9, #63, 291dc <mpfr_cosh@@Base+0xb0>
   291c8:	ldr	x8, [x20]
   291cc:	neg	x2, x9, lsl #1
   291d0:	add	x8, x8, #0x1
   291d4:	cmp	x2, x8
   291d8:	b.hi	295a8 <mpfr_cosh@@Base+0x47c>  // b.pmore
   291dc:	ldr	x8, [x22]
   291e0:	mov	w10, #0x1                   	// #1
   291e4:	stur	x8, [x29, #-40]
   291e8:	ldr	x8, [x22, #24]
   291ec:	stur	w10, [x29, #-32]
   291f0:	stp	x9, x8, [x29, #-24]
   291f4:	ldr	x22, [x20]
   291f8:	subs	x23, x22, #0x1
   291fc:	add	x21, x22, #0x3
   29200:	b.eq	29570 <mpfr_cosh@@Base+0x444>  // b.none
   29204:	b.le	29584 <mpfr_cosh@@Base+0x458>
   29208:	clz	x8, x23
   2920c:	mov	w9, #0x40                  	// #64
   29210:	sub	x8, x9, x8
   29214:	add	x23, x21, x8
   29218:	cmp	x23, x11
   2921c:	b.gt	29580 <mpfr_cosh@@Base+0x454>
   29220:	sub	x8, x23, #0x1
   29224:	add	x9, x23, #0x3e
   29228:	cmp	x8, #0x0
   2922c:	csel	x8, x9, x8, lt  // lt = tstop
   29230:	str	x27, [sp]
   29234:	asr	x8, x8, #6
   29238:	mov	x27, #0xfffffffffffffeff    	// #-257
   2923c:	mov	w24, w26
   29240:	cmp	x23, #0x201
   29244:	add	x26, x8, #0x1
   29248:	movk	x27, #0x7fff, lsl #48
   2924c:	b.lt	29260 <mpfr_cosh@@Base+0x134>  // b.tstop
   29250:	lsl	x21, x26, #4
   29254:	mov	x0, x21
   29258:	bl	ccd0 <mpfr_allocate_func@plt>
   2925c:	b	2926c <mpfr_cosh@@Base+0x140>
   29260:	add	x8, sp, #0x8
   29264:	mov	x21, xzr
   29268:	add	x0, x8, #0x10
   2926c:	mov	w9, #0x1                   	// #1
   29270:	add	x8, x0, x26, lsl #3
   29274:	stp	x21, x0, [sp, #8]
   29278:	stur	x0, [x29, #-48]
   2927c:	stur	x23, [x29, #-104]
   29280:	stur	w9, [x29, #-64]
   29284:	stp	x8, x23, [x29, #-80]
   29288:	stur	w9, [x29, #-96]
   2928c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29290:	ldr	x1, [x0, #2640]
   29294:	add	x0, x0, #0xa50
   29298:	blr	x1
   2929c:	mov	x21, x0
   292a0:	str	wzr, [x25, x0]
   292a4:	sub	x0, x29, #0x68
   292a8:	sub	x1, x29, #0x28
   292ac:	mov	w2, #0x3                   	// #3
   292b0:	bl	c740 <mpfr_exp@plt>
   292b4:	ldrb	w8, [x25, x21]
   292b8:	mov	w26, w24
   292bc:	tbnz	w8, #1, 294ec <mpfr_cosh@@Base+0x3c0>
   292c0:	cmp	w26, #0x0
   292c4:	mov	w21, #0x40                  	// #64
   292c8:	cinc	x22, x22, eq  // eq = none
   292cc:	sub	x0, x29, #0x48
   292d0:	sub	x2, x29, #0x68
   292d4:	mov	w1, #0x1                   	// #1
   292d8:	mov	w3, #0x2                   	// #2
   292dc:	bl	c2f0 <mpfr_ui_div@plt>
   292e0:	sub	x0, x29, #0x48
   292e4:	sub	x1, x29, #0x68
   292e8:	sub	x2, x29, #0x48
   292ec:	mov	w3, #0x2                   	// #2
   292f0:	bl	c1e0 <mpfr_add@plt>
   292f4:	sub	x0, x29, #0x48
   292f8:	sub	x1, x29, #0x48
   292fc:	mov	w2, #0x1                   	// #1
   29300:	mov	w3, wzr
   29304:	bl	c8f0 <mpfr_div_2ui@plt>
   29308:	ldur	x8, [x29, #-56]
   2930c:	add	x9, x27, #0x105
   29310:	cmp	x8, x9
   29314:	b.lt	29348 <mpfr_cosh@@Base+0x21c>  // b.tstop
   29318:	ldur	x8, [x29, #-72]
   2931c:	ldur	x0, [x29, #-48]
   29320:	sub	x2, x23, #0x3
   29324:	mov	x3, x22
   29328:	sub	x9, x8, #0x1
   2932c:	add	x8, x8, #0x3e
   29330:	cmp	x9, #0x0
   29334:	csel	x8, x8, x9, lt  // lt = tstop
   29338:	asr	x8, x8, #6
   2933c:	add	x1, x8, #0x1
   29340:	bl	c370 <mpfr_round_p@plt>
   29344:	cbnz	w0, 29434 <mpfr_cosh@@Base+0x308>
   29348:	mov	x9, #0xfffffffffffffeff    	// #-257
   2934c:	movk	x9, #0x7fff, lsl #48
   29350:	sub	x8, x9, x23
   29354:	cmp	x21, x8
   29358:	b.gt	29410 <mpfr_cosh@@Base+0x2e4>
   2935c:	add	x23, x23, x21
   29360:	cmp	x23, #0x0
   29364:	cinc	x8, x23, lt  // lt = tstop
   29368:	cmp	x23, x9
   2936c:	b.gt	29580 <mpfr_cosh@@Base+0x454>
   29370:	asr	x21, x8, #1
   29374:	sub	x8, x23, #0x1
   29378:	add	x9, x23, #0x3e
   2937c:	cmp	x8, #0x0
   29380:	ldr	x1, [sp, #8]
   29384:	csel	x8, x9, x8, lt  // lt = tstop
   29388:	asr	x8, x8, #6
   2938c:	mov	x27, #0xfffffffffffffeff    	// #-257
   29390:	add	x26, x8, #0x1
   29394:	movk	x27, #0x7fff, lsl #48
   29398:	lsl	x2, x26, #4
   2939c:	str	x2, [sp, #8]
   293a0:	cbz	x1, 293b0 <mpfr_cosh@@Base+0x284>
   293a4:	ldr	x0, [sp, #16]
   293a8:	bl	c200 <mpfr_reallocate_func@plt>
   293ac:	b	293b8 <mpfr_cosh@@Base+0x28c>
   293b0:	mov	x0, x2
   293b4:	bl	ccd0 <mpfr_allocate_func@plt>
   293b8:	mov	w9, #0x1                   	// #1
   293bc:	add	x8, x0, x26, lsl #3
   293c0:	str	x0, [sp, #16]
   293c4:	stur	x0, [x29, #-48]
   293c8:	stur	w9, [x29, #-64]
   293cc:	stur	x23, [x29, #-104]
   293d0:	stp	x8, x23, [x29, #-80]
   293d4:	stur	w9, [x29, #-96]
   293d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   293dc:	ldr	x1, [x0, #2640]
   293e0:	add	x0, x0, #0xa50
   293e4:	blr	x1
   293e8:	mov	x26, x0
   293ec:	str	wzr, [x25, x0]
   293f0:	sub	x0, x29, #0x68
   293f4:	sub	x1, x29, #0x28
   293f8:	mov	w2, #0x3                   	// #3
   293fc:	bl	c740 <mpfr_exp@plt>
   29400:	ldrb	w8, [x25, x26]
   29404:	mov	w26, w24
   29408:	tbz	w8, #1, 292cc <mpfr_cosh@@Base+0x1a0>
   2940c:	b	294ec <mpfr_cosh@@Base+0x3c0>
   29410:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29414:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   29418:	mov	w1, #0x76                  	// #118
   2941c:	add	x0, x0, #0xe6c
   29420:	add	x2, x2, #0xde2
   29424:	bl	cb20 <mpfr_assert_fail@plt>
   29428:	mov	x9, #0xfffffffffffffeff    	// #-257
   2942c:	movk	x9, #0x7fff, lsl #48
   29430:	b	2935c <mpfr_cosh@@Base+0x230>
   29434:	ldur	w3, [x29, #-64]
   29438:	sub	x1, x29, #0x48
   2943c:	mov	x0, x20
   29440:	mov	w2, w26
   29444:	bl	c690 <mpfr_set4@plt>
   29448:	mov	w21, w0
   2944c:	ldp	x27, x1, [sp]
   29450:	cbz	x1, 2945c <mpfr_cosh@@Base+0x330>
   29454:	ldr	x0, [sp, #16]
   29458:	bl	cc00 <mpfr_free_func@plt>
   2945c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29460:	ldr	x1, [x0, #2640]
   29464:	add	x0, x0, #0xa50
   29468:	blr	x1
   2946c:	str	w19, [x25, x0]
   29470:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29474:	ldr	x1, [x0, #2576]
   29478:	add	x0, x0, #0xa10
   2947c:	blr	x1
   29480:	str	x27, [x25, x0]
   29484:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29488:	ldr	x1, [x0, #2608]
   2948c:	add	x0, x0, #0xa30
   29490:	blr	x1
   29494:	str	x28, [x25, x0]
   29498:	ldr	x8, [x20, #16]
   2949c:	cmp	x8, x28
   294a0:	b.gt	2955c <mpfr_cosh@@Base+0x430>
   294a4:	cmp	x8, x27
   294a8:	b.lt	2955c <mpfr_cosh@@Base+0x430>  // b.tstop
   294ac:	cbz	w21, 294c8 <mpfr_cosh@@Base+0x39c>
   294b0:	orr	w8, w19, #0x8
   294b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   294b8:	ldr	x1, [x0, #2640]
   294bc:	add	x0, x0, #0xa50
   294c0:	blr	x1
   294c4:	str	w8, [x25, x0]
   294c8:	mov	w0, w21
   294cc:	ldp	x20, x19, [sp, #336]
   294d0:	ldp	x22, x21, [sp, #320]
   294d4:	ldp	x24, x23, [sp, #304]
   294d8:	ldp	x26, x25, [sp, #288]
   294dc:	ldp	x28, x27, [sp, #272]
   294e0:	ldp	x29, x30, [sp, #256]
   294e4:	add	sp, sp, #0x160
   294e8:	ret
   294ec:	mov	w2, #0x1                   	// #1
   294f0:	mov	x0, x20
   294f4:	mov	w1, w26
   294f8:	bl	bf90 <mpfr_overflow@plt>
   294fc:	mov	w21, w0
   29500:	orr	w19, w19, #0x2
   29504:	ldp	x27, x1, [sp]
   29508:	cbnz	x1, 29454 <mpfr_cosh@@Base+0x328>
   2950c:	b	2945c <mpfr_cosh@@Base+0x330>
   29510:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   29514:	cmp	x9, x8
   29518:	b.eq	295cc <mpfr_cosh@@Base+0x4a0>  // b.none
   2951c:	mov	x8, #0x2                   	// #2
   29520:	movk	x8, #0x8000, lsl #48
   29524:	cmp	x9, x8
   29528:	b.ne	295e0 <mpfr_cosh@@Base+0x4b4>  // b.any
   2952c:	add	x8, x11, #0x103
   29530:	str	x8, [x20, #16]
   29534:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29538:	ldr	x1, [x0, #2640]
   2953c:	add	x0, x0, #0xa50
   29540:	blr	x1
   29544:	mrs	x8, tpidr_el0
   29548:	ldr	w9, [x8, x0]
   2954c:	mov	w21, wzr
   29550:	orr	w9, w9, #0x4
   29554:	str	w9, [x8, x0]
   29558:	b	294c8 <mpfr_cosh@@Base+0x39c>
   2955c:	mov	x0, x20
   29560:	mov	w1, w21
   29564:	mov	w2, w26
   29568:	bl	cb10 <mpfr_check_range@plt>
   2956c:	b	295f4 <mpfr_cosh@@Base+0x4c8>
   29570:	mov	x8, xzr
   29574:	add	x23, x21, x8
   29578:	cmp	x23, x11
   2957c:	b.le	29220 <mpfr_cosh@@Base+0xf4>
   29580:	bl	c8e0 <mpfr_abort_prec_max@plt>
   29584:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29588:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2958c:	add	x0, x0, #0xe6c
   29590:	add	x2, x2, #0xdd9
   29594:	mov	w1, #0x53                  	// #83
   29598:	bl	cb20 <mpfr_assert_fail@plt>
   2959c:	mov	x11, #0xfffffffffffffeff    	// #-257
   295a0:	movk	x11, #0x7fff, lsl #48
   295a4:	b	29208 <mpfr_cosh@@Base+0xdc>
   295a8:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   295ac:	ldr	x1, [x1, #3944]
   295b0:	mov	w3, #0x1                   	// #1
   295b4:	mov	x0, x20
   295b8:	mov	w4, w26
   295bc:	bl	c530 <mpfr_round_near_x@plt>
   295c0:	cbz	w0, 295fc <mpfr_cosh@@Base+0x4d0>
   295c4:	mov	w21, w0
   295c8:	b	2945c <mpfr_cosh@@Base+0x330>
   295cc:	str	x8, [x20, #16]
   295d0:	mov	w8, #0x1                   	// #1
   295d4:	mov	w21, wzr
   295d8:	str	w8, [x20, #8]
   295dc:	b	294c8 <mpfr_cosh@@Base+0x39c>
   295e0:	mov	w1, #0x1                   	// #1
   295e4:	mov	x0, x20
   295e8:	mov	x2, xzr
   295ec:	mov	w3, w26
   295f0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   295f4:	mov	w21, w0
   295f8:	b	294c8 <mpfr_cosh@@Base+0x39c>
   295fc:	ldr	x9, [x22, #16]
   29600:	mov	x11, #0xfffffffffffffeff    	// #-257
   29604:	movk	x11, #0x7fff, lsl #48
   29608:	b	291dc <mpfr_cosh@@Base+0xb0>

000000000002960c <mpfr_sinh@@Base>:
   2960c:	sub	sp, sp, #0x180
   29610:	stp	x29, x30, [sp, #288]
   29614:	stp	x28, x27, [sp, #304]
   29618:	stp	x26, x25, [sp, #320]
   2961c:	stp	x24, x23, [sp, #336]
   29620:	stp	x22, x21, [sp, #352]
   29624:	stp	x20, x19, [sp, #368]
   29628:	ldr	x20, [x1, #16]
   2962c:	mov	x23, #0xfffffffffffffeff    	// #-257
   29630:	movk	x23, #0x7fff, lsl #48
   29634:	add	x8, x23, #0x105
   29638:	mov	x21, x1
   2963c:	cmp	x20, x8
   29640:	mov	x19, x0
   29644:	add	x29, sp, #0x120
   29648:	b.lt	29ae0 <mpfr_sinh@@Base+0x4d4>  // b.tstop
   2964c:	mov	w27, w2
   29650:	tbz	x20, #63, 2966c <mpfr_sinh@@Base+0x60>
   29654:	ldr	x8, [x19]
   29658:	mov	w9, #0x2                   	// #2
   2965c:	sub	x2, x9, x20, lsl #1
   29660:	add	x8, x8, #0x1
   29664:	cmp	x2, x8
   29668:	b.hi	29b68 <mpfr_sinh@@Base+0x55c>  // b.pmore
   2966c:	ldr	x9, [x21]
   29670:	mov	w10, #0x1                   	// #1
   29674:	stur	x9, [x29, #-40]
   29678:	ldr	x8, [x21, #24]
   2967c:	stur	w10, [x29, #-32]
   29680:	stp	x20, x8, [x29, #-24]
   29684:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29688:	ldr	x1, [x0, #2640]
   2968c:	add	x0, x0, #0xa50
   29690:	blr	x1
   29694:	mrs	x25, tpidr_el0
   29698:	ldr	w26, [x25, x0]
   2969c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   296a0:	ldr	x1, [x0, #2576]
   296a4:	add	x0, x0, #0xa10
   296a8:	blr	x1
   296ac:	ldr	x10, [x25, x0]
   296b0:	mov	x8, x0
   296b4:	str	x10, [sp, #24]
   296b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   296bc:	ldr	x1, [x0, #2608]
   296c0:	add	x0, x0, #0xa30
   296c4:	blr	x1
   296c8:	ldr	x10, [x25, x0]
   296cc:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   296d0:	str	x11, [x25, x0]
   296d4:	str	w26, [sp, #36]
   296d8:	str	x10, [sp, #16]
   296dc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   296e0:	str	x10, [x25, x8]
   296e4:	ldr	x8, [x19]
   296e8:	cmp	x9, x8
   296ec:	csel	x22, x9, x8, gt
   296f0:	subs	x24, x22, #0x1
   296f4:	b.eq	29b18 <mpfr_sinh@@Base+0x50c>  // b.none
   296f8:	b.le	29b38 <mpfr_sinh@@Base+0x52c>
   296fc:	clz	x8, x24
   29700:	mov	w9, #0x40                  	// #64
   29704:	sub	x8, x9, x8
   29708:	neg	x9, x20, lsl #1
   2970c:	and	x9, x9, x20, asr #63
   29710:	add	x8, x22, x8
   29714:	add	x8, x8, x9
   29718:	add	x26, x8, #0x4
   2971c:	cmp	x26, x23
   29720:	b.gt	29bd8 <mpfr_sinh@@Base+0x5cc>
   29724:	sub	x8, x26, #0x1
   29728:	add	x9, x26, #0x3e
   2972c:	cmp	x8, #0x0
   29730:	csel	x8, x9, x8, lt  // lt = tstop
   29734:	asr	x8, x8, #6
   29738:	cmp	x26, #0x201
   2973c:	add	x20, x8, #0x1
   29740:	b.lt	29754 <mpfr_sinh@@Base+0x148>  // b.tstop
   29744:	lsl	x22, x20, #4
   29748:	mov	x0, x22
   2974c:	bl	ccd0 <mpfr_allocate_func@plt>
   29750:	b	29760 <mpfr_sinh@@Base+0x154>
   29754:	add	x8, sp, #0x28
   29758:	mov	x22, xzr
   2975c:	add	x0, x8, #0x10
   29760:	cmp	w27, #0x0
   29764:	stp	x22, x0, [sp, #40]
   29768:	mov	w22, #0x1                   	// #1
   2976c:	add	x8, x0, x20, lsl #3
   29770:	str	w27, [sp, #12]
   29774:	mov	w20, #0x40                  	// #64
   29778:	cset	w27, eq  // eq = none
   2977c:	stur	x0, [x29, #-48]
   29780:	stur	w22, [x29, #-64]
   29784:	stur	x26, [x29, #-104]
   29788:	stp	x8, x26, [x29, #-80]
   2978c:	stur	w22, [x29, #-96]
   29790:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29794:	ldr	x1, [x0, #2640]
   29798:	add	x0, x0, #0xa50
   2979c:	blr	x1
   297a0:	mov	x24, x0
   297a4:	str	wzr, [x25, x0]
   297a8:	sub	x0, x29, #0x48
   297ac:	sub	x1, x29, #0x28
   297b0:	mov	w2, #0x3                   	// #3
   297b4:	bl	c740 <mpfr_exp@plt>
   297b8:	ldrb	w8, [x25, x24]
   297bc:	tbnz	w8, #1, 298f0 <mpfr_sinh@@Base+0x2e4>
   297c0:	ldur	x28, [x29, #-56]
   297c4:	sub	x0, x29, #0x68
   297c8:	sub	x2, x29, #0x48
   297cc:	mov	w1, #0x1                   	// #1
   297d0:	mov	w3, #0x2                   	// #2
   297d4:	bl	c2f0 <mpfr_ui_div@plt>
   297d8:	sub	x0, x29, #0x48
   297dc:	sub	x1, x29, #0x48
   297e0:	sub	x2, x29, #0x68
   297e4:	mov	w3, wzr
   297e8:	bl	bbc0 <mpfr_sub@plt>
   297ec:	sub	x0, x29, #0x48
   297f0:	sub	x1, x29, #0x48
   297f4:	mov	w2, #0x1                   	// #1
   297f8:	mov	w3, wzr
   297fc:	bl	c8f0 <mpfr_div_2ui@plt>
   29800:	ldur	x8, [x29, #-56]
   29804:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   29808:	mov	x24, x26
   2980c:	cmp	x8, x9
   29810:	b.ne	29870 <mpfr_sinh@@Base+0x264>  // b.any
   29814:	add	x24, x24, x26
   29818:	sub	x8, x23, x24
   2981c:	cmp	x20, x8
   29820:	b.gt	299fc <mpfr_sinh@@Base+0x3f0>
   29824:	add	x26, x24, x20
   29828:	cmp	x26, #0x0
   2982c:	cinc	x8, x26, lt  // lt = tstop
   29830:	cmp	x26, x23
   29834:	b.gt	29bd8 <mpfr_sinh@@Base+0x5cc>
   29838:	asr	x20, x8, #1
   2983c:	sub	x8, x26, #0x1
   29840:	add	x9, x26, #0x3e
   29844:	cmp	x8, #0x0
   29848:	ldr	x1, [sp, #40]
   2984c:	csel	x8, x9, x8, lt  // lt = tstop
   29850:	asr	x8, x8, #6
   29854:	add	x24, x8, #0x1
   29858:	lsl	x2, x24, #4
   2985c:	str	x2, [sp, #40]
   29860:	cbz	x1, 298cc <mpfr_sinh@@Base+0x2c0>
   29864:	ldr	x0, [sp, #48]
   29868:	bl	c200 <mpfr_reallocate_func@plt>
   2986c:	b	298d4 <mpfr_sinh@@Base+0x2c8>
   29870:	sub	x9, x28, x8
   29874:	cmn	x9, #0x2
   29878:	mov	x11, #0xfffffffffffffffe    	// #-2
   2987c:	csel	x9, x9, x11, gt
   29880:	add	x10, x23, #0x105
   29884:	sub	x9, x26, x9
   29888:	cmp	x8, x10
   2988c:	sub	x24, x9, #0x3
   29890:	b.lt	29814 <mpfr_sinh@@Base+0x208>  // b.tstop
   29894:	ldur	x8, [x29, #-72]
   29898:	ldr	x9, [x19]
   2989c:	ldur	x0, [x29, #-48]
   298a0:	mov	x2, x24
   298a4:	sub	x10, x8, #0x1
   298a8:	add	x8, x8, #0x3e
   298ac:	cmp	x10, #0x0
   298b0:	csel	x8, x8, x10, lt  // lt = tstop
   298b4:	asr	x8, x8, #6
   298b8:	add	x1, x8, #0x1
   298bc:	add	x3, x9, x27
   298c0:	bl	c370 <mpfr_round_p@plt>
   298c4:	cbnz	w0, 29a18 <mpfr_sinh@@Base+0x40c>
   298c8:	b	29814 <mpfr_sinh@@Base+0x208>
   298cc:	mov	x0, x2
   298d0:	bl	ccd0 <mpfr_allocate_func@plt>
   298d4:	add	x8, x0, x24, lsl #3
   298d8:	str	x0, [sp, #48]
   298dc:	stur	x0, [x29, #-48]
   298e0:	stur	w22, [x29, #-64]
   298e4:	stur	x26, [x29, #-104]
   298e8:	stp	x8, x26, [x29, #-80]
   298ec:	b	2978c <mpfr_sinh@@Base+0x180>
   298f0:	sub	x0, x29, #0x68
   298f4:	sub	x1, x29, #0x28
   298f8:	mov	w2, #0x1                   	// #1
   298fc:	mov	w3, #0x3                   	// #3
   29900:	bl	c8f0 <mpfr_div_2ui@plt>
   29904:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29908:	ldr	x1, [x0, #2640]
   2990c:	add	x0, x0, #0xa50
   29910:	blr	x1
   29914:	mov	x24, x0
   29918:	str	wzr, [x25, x0]
   2991c:	sub	x0, x29, #0x48
   29920:	sub	x1, x29, #0x68
   29924:	mov	w2, #0x3                   	// #3
   29928:	bl	bb50 <mpfr_cosh@plt>
   2992c:	ldrb	w8, [x25, x24]
   29930:	tbnz	w8, #1, 29ba4 <mpfr_sinh@@Base+0x598>
   29934:	sub	x0, x29, #0x68
   29938:	sub	x1, x29, #0x68
   2993c:	mov	w2, #0x3                   	// #3
   29940:	bl	c320 <mpfr_sinh@plt>
   29944:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29948:	ldr	x1, [x0, #2640]
   2994c:	add	x0, x0, #0xa50
   29950:	blr	x1
   29954:	mov	x24, x0
   29958:	str	wzr, [x25, x0]
   2995c:	sub	x0, x29, #0x48
   29960:	sub	x1, x29, #0x48
   29964:	sub	x2, x29, #0x68
   29968:	mov	w3, #0x3                   	// #3
   2996c:	bl	bda0 <mpfr_mul@plt>
   29970:	ldrb	w8, [x25, x24]
   29974:	tbnz	w8, #1, 29ba4 <mpfr_sinh@@Base+0x598>
   29978:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2997c:	ldr	x1, [x0, #2640]
   29980:	add	x0, x0, #0xa50
   29984:	blr	x1
   29988:	mov	x24, x0
   2998c:	str	wzr, [x25, x0]
   29990:	sub	x0, x29, #0x48
   29994:	sub	x1, x29, #0x48
   29998:	mov	w2, #0x1                   	// #1
   2999c:	mov	w3, wzr
   299a0:	bl	c2c0 <mpfr_mul_2ui@plt>
   299a4:	ldrb	w8, [x25, x24]
   299a8:	tbnz	w8, #1, 29ba4 <mpfr_sinh@@Base+0x598>
   299ac:	ldur	x8, [x29, #-56]
   299b0:	add	x9, x23, #0x105
   299b4:	mov	x24, x26
   299b8:	cmp	x8, x9
   299bc:	b.lt	29814 <mpfr_sinh@@Base+0x208>  // b.tstop
   299c0:	ldur	x8, [x29, #-72]
   299c4:	ldr	x9, [x19]
   299c8:	ldur	x0, [x29, #-48]
   299cc:	sub	x2, x26, #0x3
   299d0:	sub	x10, x8, #0x1
   299d4:	add	x8, x8, #0x3e
   299d8:	cmp	x10, #0x0
   299dc:	csel	x8, x8, x10, lt  // lt = tstop
   299e0:	asr	x8, x8, #6
   299e4:	add	x1, x8, #0x1
   299e8:	add	x3, x9, x27
   299ec:	bl	c370 <mpfr_round_p@plt>
   299f0:	mov	x24, x26
   299f4:	cbnz	w0, 29a18 <mpfr_sinh@@Base+0x40c>
   299f8:	b	29814 <mpfr_sinh@@Base+0x208>
   299fc:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29a00:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   29a04:	mov	w1, #0xaf                  	// #175
   29a08:	add	x0, x0, #0xec8
   29a0c:	add	x2, x2, #0xde2
   29a10:	bl	cb20 <mpfr_assert_fail@plt>
   29a14:	b	29824 <mpfr_sinh@@Base+0x218>
   29a18:	ldr	w20, [sp, #12]
   29a1c:	ldr	w3, [x21, #8]
   29a20:	sub	x1, x29, #0x48
   29a24:	mov	x0, x19
   29a28:	mov	w2, w20
   29a2c:	bl	c690 <mpfr_set4@plt>
   29a30:	mov	w22, w0
   29a34:	ldr	x1, [sp, #40]
   29a38:	ldr	w21, [sp, #36]
   29a3c:	cbz	x1, 29a48 <mpfr_sinh@@Base+0x43c>
   29a40:	ldr	x0, [sp, #48]
   29a44:	bl	cc00 <mpfr_free_func@plt>
   29a48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29a4c:	ldr	x1, [x0, #2640]
   29a50:	add	x0, x0, #0xa50
   29a54:	blr	x1
   29a58:	str	w21, [x25, x0]
   29a5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29a60:	ldr	x1, [x0, #2576]
   29a64:	add	x0, x0, #0xa10
   29a68:	blr	x1
   29a6c:	ldr	x9, [sp, #24]
   29a70:	str	x9, [x25, x0]
   29a74:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29a78:	ldr	x1, [x0, #2608]
   29a7c:	add	x0, x0, #0xa30
   29a80:	blr	x1
   29a84:	ldr	x10, [sp, #16]
   29a88:	str	x10, [x25, x0]
   29a8c:	ldr	x8, [x19, #16]
   29a90:	cmp	x8, x10
   29a94:	b.gt	29b20 <mpfr_sinh@@Base+0x514>
   29a98:	cmp	x8, x9
   29a9c:	b.lt	29b20 <mpfr_sinh@@Base+0x514>  // b.tstop
   29aa0:	cbz	w22, 29abc <mpfr_sinh@@Base+0x4b0>
   29aa4:	orr	w8, w21, #0x8
   29aa8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29aac:	ldr	x1, [x0, #2640]
   29ab0:	add	x0, x0, #0xa50
   29ab4:	blr	x1
   29ab8:	str	w8, [x25, x0]
   29abc:	mov	w0, w22
   29ac0:	ldp	x20, x19, [sp, #368]
   29ac4:	ldp	x22, x21, [sp, #352]
   29ac8:	ldp	x24, x23, [sp, #336]
   29acc:	ldp	x26, x25, [sp, #320]
   29ad0:	ldp	x28, x27, [sp, #304]
   29ad4:	ldp	x29, x30, [sp, #288]
   29ad8:	add	sp, sp, #0x180
   29adc:	ret
   29ae0:	add	x8, x23, #0x103
   29ae4:	cmp	x20, x8
   29ae8:	b.ne	29b54 <mpfr_sinh@@Base+0x548>  // b.any
   29aec:	str	x8, [x19, #16]
   29af0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29af4:	ldr	x1, [x0, #2640]
   29af8:	add	x0, x0, #0xa50
   29afc:	blr	x1
   29b00:	mrs	x8, tpidr_el0
   29b04:	ldr	w9, [x8, x0]
   29b08:	mov	w22, wzr
   29b0c:	orr	w9, w9, #0x4
   29b10:	str	w9, [x8, x0]
   29b14:	b	29abc <mpfr_sinh@@Base+0x4b0>
   29b18:	mov	x8, xzr
   29b1c:	b	29708 <mpfr_sinh@@Base+0xfc>
   29b20:	mov	x0, x19
   29b24:	mov	w1, w22
   29b28:	mov	w2, w20
   29b2c:	bl	cb10 <mpfr_check_range@plt>
   29b30:	mov	w22, w0
   29b34:	b	29abc <mpfr_sinh@@Base+0x4b0>
   29b38:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29b3c:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29b40:	add	x0, x0, #0xec8
   29b44:	add	x2, x2, #0xe5e
   29b48:	mov	w1, #0x52                  	// #82
   29b4c:	bl	cb20 <mpfr_assert_fail@plt>
   29b50:	b	296fc <mpfr_sinh@@Base+0xf0>
   29b54:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   29b58:	cmp	x20, x8
   29b5c:	b.ne	29b8c <mpfr_sinh@@Base+0x580>  // b.any
   29b60:	mov	w22, wzr
   29b64:	b	29b94 <mpfr_sinh@@Base+0x588>
   29b68:	mov	w3, #0x1                   	// #1
   29b6c:	mov	x0, x19
   29b70:	mov	x1, x21
   29b74:	mov	w4, w27
   29b78:	bl	c530 <mpfr_round_near_x@plt>
   29b7c:	mov	w22, w0
   29b80:	cbnz	w0, 29abc <mpfr_sinh@@Base+0x4b0>
   29b84:	ldr	x20, [x21, #16]
   29b88:	b	2966c <mpfr_sinh@@Base+0x60>
   29b8c:	mov	w22, wzr
   29b90:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   29b94:	str	x8, [x19, #16]
   29b98:	ldr	w8, [x21, #8]
   29b9c:	str	w8, [x19, #8]
   29ba0:	b	29abc <mpfr_sinh@@Base+0x4b0>
   29ba4:	ldr	w20, [sp, #12]
   29ba8:	ldr	w2, [x21, #8]
   29bac:	mov	x0, x19
   29bb0:	mov	w1, w20
   29bb4:	bl	bf90 <mpfr_overflow@plt>
   29bb8:	ldr	w8, [sp, #36]
   29bbc:	mov	w22, w0
   29bc0:	orr	w8, w8, #0x2
   29bc4:	str	w8, [sp, #36]
   29bc8:	ldr	x1, [sp, #40]
   29bcc:	mov	w21, w8
   29bd0:	cbnz	x1, 29a40 <mpfr_sinh@@Base+0x434>
   29bd4:	b	29a48 <mpfr_sinh@@Base+0x43c>
   29bd8:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000029bdc <mpfr_tanh@@Base>:
   29bdc:	sub	sp, sp, #0x170
   29be0:	stp	x29, x30, [sp, #272]
   29be4:	stp	x28, x27, [sp, #288]
   29be8:	stp	x26, x25, [sp, #304]
   29bec:	stp	x24, x23, [sp, #320]
   29bf0:	stp	x22, x21, [sp, #336]
   29bf4:	stp	x20, x19, [sp, #352]
   29bf8:	ldr	x8, [x1, #16]
   29bfc:	mov	x24, #0xfffffffffffffeff    	// #-257
   29c00:	movk	x24, #0x7fff, lsl #48
   29c04:	add	x9, x24, #0x105
   29c08:	mov	x22, x1
   29c0c:	cmp	x8, x9
   29c10:	mov	x20, x0
   29c14:	add	x29, sp, #0x110
   29c18:	str	w2, [sp, #20]
   29c1c:	b.lt	2a014 <mpfr_tanh@@Base+0x438>  // b.tstop
   29c20:	tbz	x8, #63, 29c3c <mpfr_tanh@@Base+0x60>
   29c24:	ldr	x9, [x20]
   29c28:	mov	w10, #0x1                   	// #1
   29c2c:	sub	x2, x10, x8, lsl #1
   29c30:	add	x9, x9, #0x1
   29c34:	cmp	x2, x9
   29c38:	b.hi	2a100 <mpfr_tanh@@Base+0x524>  // b.pmore
   29c3c:	ldr	x9, [x22]
   29c40:	mov	w19, #0x1                   	// #1
   29c44:	stur	x9, [x29, #-40]
   29c48:	ldr	x9, [x22, #24]
   29c4c:	stur	w19, [x29, #-32]
   29c50:	stp	x8, x9, [x29, #-24]
   29c54:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29c58:	ldr	x1, [x0, #2640]
   29c5c:	add	x0, x0, #0xa50
   29c60:	blr	x1
   29c64:	mrs	x25, tpidr_el0
   29c68:	ldr	w26, [x25, x0]
   29c6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29c70:	ldr	x1, [x0, #2576]
   29c74:	add	x0, x0, #0xa10
   29c78:	blr	x1
   29c7c:	ldr	x27, [x25, x0]
   29c80:	mov	x8, x0
   29c84:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29c88:	ldr	x1, [x0, #2608]
   29c8c:	add	x0, x0, #0xa30
   29c90:	blr	x1
   29c94:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   29c98:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   29c9c:	ldr	x28, [x25, x0]
   29ca0:	str	x9, [x25, x8]
   29ca4:	str	x10, [x25, x0]
   29ca8:	ldr	x23, [x20]
   29cac:	ldr	w21, [x22, #8]
   29cb0:	sub	x0, x29, #0x28
   29cb4:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   29cb8:	mov	x2, xzr
   29cbc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   29cc0:	str	w26, [sp, #16]
   29cc4:	tbz	w0, #31, 2a060 <mpfr_tanh@@Base+0x484>
   29cc8:	subs	x19, x23, #0x1
   29ccc:	b.eq	2a0dc <mpfr_tanh@@Base+0x500>  // b.none
   29cd0:	b.le	2a0e4 <mpfr_tanh@@Base+0x508>
   29cd4:	clz	x8, x19
   29cd8:	mov	w9, #0x40                  	// #64
   29cdc:	sub	x8, x9, x8
   29ce0:	ldur	x9, [x29, #-24]
   29ce4:	ldur	x10, [x29, #-40]
   29ce8:	add	x8, x23, x8
   29cec:	neg	x11, x9
   29cf0:	and	x9, x11, x9, asr #63
   29cf4:	add	x8, x8, x9
   29cf8:	add	x8, x8, #0x4
   29cfc:	cmp	x8, x10
   29d00:	csel	x22, x10, x8, lt  // lt = tstop
   29d04:	cmp	x22, x24
   29d08:	b.gt	2a158 <mpfr_tanh@@Base+0x57c>
   29d0c:	sub	x8, x22, #0x1
   29d10:	add	x9, x22, #0x3e
   29d14:	cmp	x8, #0x0
   29d18:	csel	x8, x9, x8, lt  // lt = tstop
   29d1c:	asr	x8, x8, #6
   29d20:	mov	x26, #0xfffffffffffffeff    	// #-257
   29d24:	cmp	x22, #0x201
   29d28:	add	x19, x8, #0x1
   29d2c:	movk	x26, #0x7fff, lsl #48
   29d30:	b.lt	29d44 <mpfr_tanh@@Base+0x168>  // b.tstop
   29d34:	lsl	x0, x19, #4
   29d38:	str	x0, [sp, #24]
   29d3c:	bl	ccd0 <mpfr_allocate_func@plt>
   29d40:	b	29d50 <mpfr_tanh@@Base+0x174>
   29d44:	add	x8, sp, #0x18
   29d48:	add	x0, x8, #0x10
   29d4c:	str	xzr, [sp, #24]
   29d50:	str	x0, [sp, #32]
   29d54:	stur	x0, [x29, #-48]
   29d58:	mov	w9, #0x1                   	// #1
   29d5c:	add	x8, x0, x19, lsl #3
   29d60:	sub	x0, x29, #0x68
   29d64:	sub	x1, x29, #0x28
   29d68:	mov	w2, #0x1                   	// #1
   29d6c:	mov	w3, wzr
   29d70:	stur	x22, [x29, #-104]
   29d74:	stur	w9, [x29, #-64]
   29d78:	stp	x8, x22, [x29, #-80]
   29d7c:	stur	w9, [x29, #-96]
   29d80:	bl	c2c0 <mpfr_mul_2ui@plt>
   29d84:	sub	x0, x29, #0x68
   29d88:	sub	x1, x29, #0x68
   29d8c:	mov	w2, wzr
   29d90:	bl	c740 <mpfr_exp@plt>
   29d94:	ldur	x19, [x29, #-88]
   29d98:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   29d9c:	cmp	x19, x8
   29da0:	b.eq	2a084 <mpfr_tanh@@Base+0x4a8>  // b.none
   29da4:	ldr	w8, [sp, #20]
   29da8:	mov	w24, #0x3                   	// #3
   29dac:	cmp	w8, #0x0
   29db0:	mov	w8, #0x40                  	// #64
   29db4:	cinc	x23, x23, eq  // eq = none
   29db8:	str	x8, [sp, #8]
   29dbc:	sub	x0, x29, #0x48
   29dc0:	sub	x1, x29, #0x68
   29dc4:	mov	w2, #0x1                   	// #1
   29dc8:	mov	w3, #0x3                   	// #3
   29dcc:	bl	c270 <mpfr_add_ui@plt>
   29dd0:	sub	x0, x29, #0x68
   29dd4:	sub	x1, x29, #0x68
   29dd8:	mov	w2, #0x1                   	// #1
   29ddc:	mov	w3, #0x2                   	// #2
   29de0:	bl	c520 <mpfr_sub_ui@plt>
   29de4:	ldur	x8, [x29, #-88]
   29de8:	sub	x0, x29, #0x48
   29dec:	sub	x1, x29, #0x68
   29df0:	sub	x2, x29, #0x48
   29df4:	mov	w3, wzr
   29df8:	sub	x19, x19, x8
   29dfc:	bl	c610 <mpfr_div@plt>
   29e00:	cmp	x19, #0x3
   29e04:	ldur	x8, [x29, #-56]
   29e08:	csinc	x9, x24, x19, lt  // lt = tstop
   29e0c:	cmp	x22, #0x0
   29e10:	cinc	x10, x22, lt  // lt = tstop
   29e14:	cmp	x9, x10, asr #1
   29e18:	b.gt	29e60 <mpfr_tanh@@Base+0x284>
   29e1c:	add	x10, x26, #0x105
   29e20:	cmp	x8, x10
   29e24:	b.lt	29e60 <mpfr_tanh@@Base+0x284>  // b.tstop
   29e28:	ldur	x8, [x29, #-72]
   29e2c:	mvn	x9, x9
   29e30:	add	x2, x22, x9
   29e34:	ldur	x0, [x29, #-48]
   29e38:	sub	x9, x8, #0x1
   29e3c:	add	x8, x8, #0x3e
   29e40:	cmp	x9, #0x0
   29e44:	csel	x8, x8, x9, lt  // lt = tstop
   29e48:	asr	x8, x8, #6
   29e4c:	add	x1, x8, #0x1
   29e50:	mov	x3, x23
   29e54:	bl	c370 <mpfr_round_p@plt>
   29e58:	cbnz	w0, 29f58 <mpfr_tanh@@Base+0x37c>
   29e5c:	ldur	x8, [x29, #-56]
   29e60:	cmp	x8, #0x1
   29e64:	b.eq	2a084 <mpfr_tanh@@Base+0x4a8>  // b.none
   29e68:	ldr	x24, [sp, #8]
   29e6c:	mov	x19, #0xfffffffffffffeff    	// #-257
   29e70:	movk	x19, #0x7fff, lsl #48
   29e74:	sub	x8, x19, x22
   29e78:	cmp	x24, x8
   29e7c:	b.gt	29f3c <mpfr_tanh@@Base+0x360>
   29e80:	add	x22, x22, x24
   29e84:	cmp	x22, #0x0
   29e88:	mov	x26, #0xfffffffffffffeff    	// #-257
   29e8c:	cinc	x8, x22, lt  // lt = tstop
   29e90:	movk	x26, #0x7fff, lsl #48
   29e94:	cmp	x22, x19
   29e98:	b.gt	2a158 <mpfr_tanh@@Base+0x57c>
   29e9c:	asr	x10, x8, #1
   29ea0:	sub	x8, x22, #0x1
   29ea4:	add	x9, x22, #0x3e
   29ea8:	cmp	x8, #0x0
   29eac:	ldr	x1, [sp, #24]
   29eb0:	csel	x8, x9, x8, lt  // lt = tstop
   29eb4:	asr	x8, x8, #6
   29eb8:	add	x19, x8, #0x1
   29ebc:	lsl	x2, x19, #4
   29ec0:	str	x2, [sp, #24]
   29ec4:	str	x10, [sp, #8]
   29ec8:	cbz	x1, 29ed8 <mpfr_tanh@@Base+0x2fc>
   29ecc:	ldr	x0, [sp, #32]
   29ed0:	bl	c200 <mpfr_reallocate_func@plt>
   29ed4:	b	29ee0 <mpfr_tanh@@Base+0x304>
   29ed8:	mov	x0, x2
   29edc:	bl	ccd0 <mpfr_allocate_func@plt>
   29ee0:	str	x0, [sp, #32]
   29ee4:	stur	x0, [x29, #-48]
   29ee8:	mov	w9, #0x1                   	// #1
   29eec:	add	x8, x0, x19, lsl #3
   29ef0:	sub	x0, x29, #0x68
   29ef4:	sub	x1, x29, #0x28
   29ef8:	mov	w2, #0x1                   	// #1
   29efc:	mov	w3, wzr
   29f00:	stur	w9, [x29, #-64]
   29f04:	stur	x22, [x29, #-104]
   29f08:	stp	x8, x22, [x29, #-80]
   29f0c:	stur	w9, [x29, #-96]
   29f10:	bl	c2c0 <mpfr_mul_2ui@plt>
   29f14:	sub	x0, x29, #0x68
   29f18:	sub	x1, x29, #0x68
   29f1c:	mov	w2, wzr
   29f20:	bl	c740 <mpfr_exp@plt>
   29f24:	ldur	x19, [x29, #-88]
   29f28:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   29f2c:	mov	w24, #0x3                   	// #3
   29f30:	cmp	x19, x8
   29f34:	b.ne	29dbc <mpfr_tanh@@Base+0x1e0>  // b.any
   29f38:	b	2a084 <mpfr_tanh@@Base+0x4a8>
   29f3c:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   29f40:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   29f44:	mov	w1, #0x9a                  	// #154
   29f48:	add	x0, x0, #0xed0
   29f4c:	add	x2, x2, #0xde2
   29f50:	bl	cb20 <mpfr_assert_fail@plt>
   29f54:	b	29e80 <mpfr_tanh@@Base+0x2a4>
   29f58:	ldr	w2, [sp, #20]
   29f5c:	sub	x1, x29, #0x48
   29f60:	mov	x0, x20
   29f64:	mov	w3, w21
   29f68:	bl	c690 <mpfr_set4@plt>
   29f6c:	mov	w21, w0
   29f70:	ldr	x1, [sp, #24]
   29f74:	ldr	w19, [sp, #16]
   29f78:	cbz	x1, 29f84 <mpfr_tanh@@Base+0x3a8>
   29f7c:	ldr	x0, [sp, #32]
   29f80:	bl	cc00 <mpfr_free_func@plt>
   29f84:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29f88:	ldr	x1, [x0, #2640]
   29f8c:	add	x0, x0, #0xa50
   29f90:	blr	x1
   29f94:	str	w19, [x25, x0]
   29f98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29f9c:	ldr	x1, [x0, #2576]
   29fa0:	add	x0, x0, #0xa10
   29fa4:	blr	x1
   29fa8:	str	x27, [x25, x0]
   29fac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29fb0:	ldr	x1, [x0, #2608]
   29fb4:	add	x0, x0, #0xa30
   29fb8:	blr	x1
   29fbc:	str	x28, [x25, x0]
   29fc0:	ldr	x8, [x20, #16]
   29fc4:	cmp	x8, x28
   29fc8:	b.gt	2a0c8 <mpfr_tanh@@Base+0x4ec>
   29fcc:	cmp	x8, x27
   29fd0:	b.lt	2a0c8 <mpfr_tanh@@Base+0x4ec>  // b.tstop
   29fd4:	cbz	w21, 29ff0 <mpfr_tanh@@Base+0x414>
   29fd8:	orr	w8, w19, #0x8
   29fdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   29fe0:	ldr	x1, [x0, #2640]
   29fe4:	add	x0, x0, #0xa50
   29fe8:	blr	x1
   29fec:	str	w8, [x25, x0]
   29ff0:	mov	w0, w21
   29ff4:	ldp	x20, x19, [sp, #352]
   29ff8:	ldp	x22, x21, [sp, #336]
   29ffc:	ldp	x24, x23, [sp, #320]
   2a000:	ldp	x26, x25, [sp, #304]
   2a004:	ldp	x28, x27, [sp, #288]
   2a008:	ldp	x29, x30, [sp, #272]
   2a00c:	add	sp, sp, #0x170
   2a010:	ret
   2a014:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2a018:	cmp	x8, x9
   2a01c:	b.eq	2a124 <mpfr_tanh@@Base+0x548>  // b.none
   2a020:	mov	x9, #0x2                   	// #2
   2a024:	movk	x9, #0x8000, lsl #48
   2a028:	cmp	x8, x9
   2a02c:	b.ne	2a140 <mpfr_tanh@@Base+0x564>  // b.any
   2a030:	add	x8, x24, #0x103
   2a034:	str	x8, [x20, #16]
   2a038:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a03c:	ldr	x1, [x0, #2640]
   2a040:	add	x0, x0, #0xa50
   2a044:	blr	x1
   2a048:	mrs	x8, tpidr_el0
   2a04c:	ldr	w9, [x8, x0]
   2a050:	mov	w21, wzr
   2a054:	orr	w9, w9, #0x4
   2a058:	str	w9, [x8, x0]
   2a05c:	b	29ff0 <mpfr_tanh@@Base+0x414>
   2a060:	add	x8, sp, #0x18
   2a064:	add	x9, x8, #0x10
   2a068:	add	x8, x8, #0x18
   2a06c:	stur	w19, [x29, #-64]
   2a070:	stur	x19, [x29, #-104]
   2a074:	stp	xzr, x9, [sp, #24]
   2a078:	stur	x9, [x29, #-48]
   2a07c:	stp	x8, x19, [x29, #-80]
   2a080:	stur	w19, [x29, #-96]
   2a084:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   2a088:	ldr	x1, [x1, #3944]
   2a08c:	mov	x0, x20
   2a090:	mov	w2, wzr
   2a094:	mov	w3, w21
   2a098:	bl	c690 <mpfr_set4@plt>
   2a09c:	ldr	w8, [sp, #20]
   2a0a0:	cmp	w8, #0x1
   2a0a4:	b.eq	2a0b8 <mpfr_tanh@@Base+0x4dc>  // b.none
   2a0a8:	ldr	w8, [sp, #20]
   2a0ac:	add	w8, w8, w21, lsr #31
   2a0b0:	cmp	w8, #0x3
   2a0b4:	b.ne	29f70 <mpfr_tanh@@Base+0x394>  // b.any
   2a0b8:	mov	x0, x20
   2a0bc:	neg	w21, w21
   2a0c0:	bl	c450 <mpfr_nexttozero@plt>
   2a0c4:	b	29f70 <mpfr_tanh@@Base+0x394>
   2a0c8:	ldr	w2, [sp, #20]
   2a0cc:	mov	x0, x20
   2a0d0:	mov	w1, w21
   2a0d4:	bl	cb10 <mpfr_check_range@plt>
   2a0d8:	b	2a138 <mpfr_tanh@@Base+0x55c>
   2a0dc:	mov	x8, xzr
   2a0e0:	b	29ce0 <mpfr_tanh@@Base+0x104>
   2a0e4:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2a0e8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2a0ec:	add	x0, x0, #0xed0
   2a0f0:	add	x2, x2, #0xdd9
   2a0f4:	mov	w1, #0x60                  	// #96
   2a0f8:	bl	cb20 <mpfr_assert_fail@plt>
   2a0fc:	b	29cd4 <mpfr_tanh@@Base+0xf8>
   2a100:	ldr	w4, [sp, #20]
   2a104:	mov	x0, x20
   2a108:	mov	x1, x22
   2a10c:	mov	w3, wzr
   2a110:	bl	c530 <mpfr_round_near_x@plt>
   2a114:	mov	w21, w0
   2a118:	cbnz	w0, 29ff0 <mpfr_tanh@@Base+0x414>
   2a11c:	ldr	x8, [x22, #16]
   2a120:	b	29c3c <mpfr_tanh@@Base+0x60>
   2a124:	ldrsw	x1, [x22, #8]
   2a128:	ldr	w3, [sp, #20]
   2a12c:	mov	x0, x20
   2a130:	mov	x2, xzr
   2a134:	bl	bae0 <mpfr_set_si_2exp@plt>
   2a138:	mov	w21, w0
   2a13c:	b	29ff0 <mpfr_tanh@@Base+0x414>
   2a140:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2a144:	str	x8, [x20, #16]
   2a148:	ldr	w8, [x22, #8]
   2a14c:	mov	w21, wzr
   2a150:	str	w8, [x20, #8]
   2a154:	b	29ff0 <mpfr_tanh@@Base+0x414>
   2a158:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002a15c <mpfr_sinh_cosh@@Base>:
   2a15c:	sub	sp, sp, #0x1b0
   2a160:	stp	x28, x27, [sp, #352]
   2a164:	stp	x22, x21, [sp, #400]
   2a168:	mov	x28, x1
   2a16c:	mov	x21, x0
   2a170:	cmp	x0, x1
   2a174:	mov	x22, x2
   2a178:	stp	x29, x30, [sp, #336]
   2a17c:	stp	x26, x25, [sp, #368]
   2a180:	stp	x24, x23, [sp, #384]
   2a184:	stp	x20, x19, [sp, #416]
   2a188:	add	x29, sp, #0x150
   2a18c:	str	w3, [sp, #52]
   2a190:	b.eq	2a6c8 <mpfr_sinh_cosh@@Base+0x56c>  // b.none
   2a194:	ldr	x8, [x22, #16]
   2a198:	mov	x19, #0x2                   	// #2
   2a19c:	movk	x19, #0x8000, lsl #48
   2a1a0:	add	x9, x19, #0x2
   2a1a4:	cmp	x8, x9
   2a1a8:	b.lt	2a6e4 <mpfr_sinh_cosh@@Base+0x588>  // b.tstop
   2a1ac:	ldr	x9, [x22]
   2a1b0:	mov	w10, #0x1                   	// #1
   2a1b4:	stur	x9, [x29, #-40]
   2a1b8:	ldr	x9, [x22, #24]
   2a1bc:	stur	w10, [x29, #-32]
   2a1c0:	stp	x8, x9, [x29, #-24]
   2a1c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a1c8:	ldr	x1, [x0, #2640]
   2a1cc:	add	x0, x0, #0xa50
   2a1d0:	blr	x1
   2a1d4:	mrs	x26, tpidr_el0
   2a1d8:	ldr	w25, [x26, x0]
   2a1dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a1e0:	ldr	x1, [x0, #2576]
   2a1e4:	add	x0, x0, #0xa10
   2a1e8:	blr	x1
   2a1ec:	ldr	x24, [x26, x0]
   2a1f0:	mov	x8, x0
   2a1f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a1f8:	ldr	x1, [x0, #2608]
   2a1fc:	add	x0, x0, #0xa30
   2a200:	blr	x1
   2a204:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2a208:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2a20c:	ldr	x27, [x26, x0]
   2a210:	str	x9, [x26, x8]
   2a214:	str	x10, [x26, x0]
   2a218:	ldr	x8, [x28]
   2a21c:	ldr	x9, [x21]
   2a220:	cmp	x8, x9
   2a224:	csel	x20, x8, x9, gt
   2a228:	subs	x23, x20, #0x1
   2a22c:	b.eq	2a720 <mpfr_sinh_cosh@@Base+0x5c4>  // b.none
   2a230:	b.le	2a798 <mpfr_sinh_cosh@@Base+0x63c>
   2a234:	clz	x8, x23
   2a238:	mov	w9, #0x40                  	// #64
   2a23c:	sub	x8, x9, x8
   2a240:	add	x8, x8, x20
   2a244:	sub	x9, x19, #0x107
   2a248:	cmp	x8, x9
   2a24c:	b.gt	2a734 <mpfr_sinh_cosh@@Base+0x5d8>
   2a250:	add	x9, x8, #0x3
   2a254:	add	x10, x8, #0x42
   2a258:	cmp	x9, #0x0
   2a25c:	csel	x9, x10, x9, lt  // lt = tstop
   2a260:	asr	x9, x9, #6
   2a264:	str	w25, [sp, #12]
   2a268:	add	x25, x9, #0x1
   2a26c:	add	x9, x25, x25, lsl #1
   2a270:	mov	x19, #0x2                   	// #2
   2a274:	cmp	x9, #0x11
   2a278:	add	x20, x8, #0x4
   2a27c:	movk	x19, #0x8000, lsl #48
   2a280:	str	x28, [sp, #40]
   2a284:	stp	x27, x24, [sp, #16]
   2a288:	b.lt	2a29c <mpfr_sinh_cosh@@Base+0x140>  // b.tstop
   2a28c:	lsl	x23, x9, #3
   2a290:	mov	x0, x23
   2a294:	bl	ccd0 <mpfr_allocate_func@plt>
   2a298:	b	2a2a8 <mpfr_sinh_cosh@@Base+0x14c>
   2a29c:	add	x8, sp, #0x38
   2a2a0:	mov	x23, xzr
   2a2a4:	add	x0, x8, #0x10
   2a2a8:	mov	w24, #0x1                   	// #1
   2a2ac:	add	x8, x0, x25, lsl #3
   2a2b0:	add	x9, x0, x25, lsl #4
   2a2b4:	stp	x23, x0, [sp, #56]
   2a2b8:	stur	x0, [x29, #-48]
   2a2bc:	stur	x20, [x29, #-136]
   2a2c0:	stur	w24, [x29, #-64]
   2a2c4:	stp	x8, x20, [x29, #-80]
   2a2c8:	stur	w24, [x29, #-96]
   2a2cc:	stp	x9, x20, [x29, #-112]
   2a2d0:	stur	w24, [x29, #-128]
   2a2d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a2d8:	ldr	x1, [x0, #2640]
   2a2dc:	add	x0, x0, #0xa50
   2a2e0:	blr	x1
   2a2e4:	mov	x23, x0
   2a2e8:	str	wzr, [x26, x0]
   2a2ec:	sub	x0, x29, #0x48
   2a2f0:	sub	x1, x29, #0x28
   2a2f4:	mov	w2, #0x3                   	// #3
   2a2f8:	bl	c740 <mpfr_exp@plt>
   2a2fc:	ldrb	w8, [x26, x23]
   2a300:	tbnz	w8, #1, 2a680 <mpfr_sinh_cosh@@Base+0x524>
   2a304:	ldr	w8, [sp, #52]
   2a308:	mov	w23, #0x40                  	// #64
   2a30c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   2a310:	cmp	w8, #0x0
   2a314:	sub	x8, x19, #0x103
   2a318:	cset	w28, eq  // eq = none
   2a31c:	str	x8, [sp, #32]
   2a320:	ldur	x27, [x29, #-56]
   2a324:	sub	x0, x29, #0x88
   2a328:	sub	x2, x29, #0x48
   2a32c:	mov	w1, #0x1                   	// #1
   2a330:	mov	w3, #0x2                   	// #2
   2a334:	bl	c2f0 <mpfr_ui_div@plt>
   2a338:	sub	x0, x29, #0x68
   2a33c:	sub	x1, x29, #0x48
   2a340:	sub	x2, x29, #0x88
   2a344:	mov	w3, #0x2                   	// #2
   2a348:	bl	c1e0 <mpfr_add@plt>
   2a34c:	sub	x0, x29, #0x48
   2a350:	sub	x1, x29, #0x48
   2a354:	sub	x2, x29, #0x88
   2a358:	mov	w3, wzr
   2a35c:	bl	bbc0 <mpfr_sub@plt>
   2a360:	sub	x0, x29, #0x68
   2a364:	sub	x1, x29, #0x68
   2a368:	mov	w2, #0x1                   	// #1
   2a36c:	mov	w3, wzr
   2a370:	bl	c8f0 <mpfr_div_2ui@plt>
   2a374:	sub	x0, x29, #0x48
   2a378:	sub	x1, x29, #0x48
   2a37c:	mov	w2, #0x1                   	// #1
   2a380:	mov	w3, wzr
   2a384:	bl	c8f0 <mpfr_div_2ui@plt>
   2a388:	ldur	x8, [x29, #-56]
   2a38c:	cmp	x8, x25
   2a390:	mov	x25, x20
   2a394:	b.ne	2a400 <mpfr_sinh_cosh@@Base+0x2a4>  // b.any
   2a398:	add	x20, x25, x20
   2a39c:	sub	x8, x19, x20
   2a3a0:	sub	x8, x8, #0x103
   2a3a4:	cmp	x23, x8
   2a3a8:	b.gt	2a508 <mpfr_sinh_cosh@@Base+0x3ac>
   2a3ac:	ldr	x9, [sp, #32]
   2a3b0:	add	x20, x20, x23
   2a3b4:	cmp	x20, #0x0
   2a3b8:	cinc	x8, x20, lt  // lt = tstop
   2a3bc:	cmp	x20, x9
   2a3c0:	b.gt	2a734 <mpfr_sinh_cosh@@Base+0x5d8>
   2a3c4:	asr	x23, x8, #1
   2a3c8:	sub	x8, x20, #0x1
   2a3cc:	add	x9, x20, #0x3e
   2a3d0:	cmp	x8, #0x0
   2a3d4:	csel	x8, x9, x8, lt  // lt = tstop
   2a3d8:	ldr	x1, [sp, #56]
   2a3dc:	asr	x8, x8, #6
   2a3e0:	add	x25, x8, #0x1
   2a3e4:	add	x8, x25, x25, lsl #1
   2a3e8:	lsl	x2, x8, #3
   2a3ec:	str	x2, [sp, #56]
   2a3f0:	cbz	x1, 2a4a0 <mpfr_sinh_cosh@@Base+0x344>
   2a3f4:	ldr	x0, [sp, #64]
   2a3f8:	bl	c200 <mpfr_reallocate_func@plt>
   2a3fc:	b	2a4a8 <mpfr_sinh_cosh@@Base+0x34c>
   2a400:	sub	x9, x27, x8
   2a404:	cmn	x9, #0x2
   2a408:	mov	x10, #0xfffffffffffffffe    	// #-2
   2a40c:	csel	x9, x9, x10, gt
   2a410:	add	x27, x19, #0x2
   2a414:	sub	x9, x20, x9
   2a418:	cmp	x8, x27
   2a41c:	sub	x25, x9, #0x3
   2a420:	b.lt	2a398 <mpfr_sinh_cosh@@Base+0x23c>  // b.tstop
   2a424:	ldur	x8, [x29, #-72]
   2a428:	ldr	x9, [x21]
   2a42c:	ldur	x0, [x29, #-48]
   2a430:	mov	x2, x25
   2a434:	sub	x10, x8, #0x1
   2a438:	add	x8, x8, #0x3e
   2a43c:	cmp	x10, #0x0
   2a440:	csel	x8, x8, x10, lt  // lt = tstop
   2a444:	asr	x8, x8, #6
   2a448:	add	x1, x8, #0x1
   2a44c:	add	x3, x9, x28
   2a450:	bl	c370 <mpfr_round_p@plt>
   2a454:	cbz	w0, 2a398 <mpfr_sinh_cosh@@Base+0x23c>
   2a458:	ldur	x8, [x29, #-88]
   2a45c:	cmp	x8, x27
   2a460:	b.lt	2a398 <mpfr_sinh_cosh@@Base+0x23c>  // b.tstop
   2a464:	ldur	x8, [x29, #-104]
   2a468:	ldr	x9, [sp, #40]
   2a46c:	ldur	x0, [x29, #-80]
   2a470:	mov	x2, x25
   2a474:	sub	x10, x8, #0x1
   2a478:	ldr	x9, [x9]
   2a47c:	add	x8, x8, #0x3e
   2a480:	cmp	x10, #0x0
   2a484:	csel	x8, x8, x10, lt  // lt = tstop
   2a488:	asr	x8, x8, #6
   2a48c:	add	x1, x8, #0x1
   2a490:	add	x3, x9, x28
   2a494:	bl	c370 <mpfr_round_p@plt>
   2a498:	cbnz	w0, 2a524 <mpfr_sinh_cosh@@Base+0x3c8>
   2a49c:	b	2a398 <mpfr_sinh_cosh@@Base+0x23c>
   2a4a0:	mov	x0, x2
   2a4a4:	bl	ccd0 <mpfr_allocate_func@plt>
   2a4a8:	add	x8, x0, x25, lsl #3
   2a4ac:	add	x9, x0, x25, lsl #4
   2a4b0:	str	x0, [sp, #64]
   2a4b4:	stur	x0, [x29, #-48]
   2a4b8:	stur	w24, [x29, #-64]
   2a4bc:	stur	w24, [x29, #-96]
   2a4c0:	stur	x20, [x29, #-136]
   2a4c4:	stp	x8, x20, [x29, #-80]
   2a4c8:	stp	x9, x20, [x29, #-112]
   2a4cc:	stur	w24, [x29, #-128]
   2a4d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a4d4:	ldr	x1, [x0, #2640]
   2a4d8:	add	x0, x0, #0xa50
   2a4dc:	blr	x1
   2a4e0:	mov	x25, x0
   2a4e4:	str	wzr, [x26, x0]
   2a4e8:	sub	x0, x29, #0x48
   2a4ec:	sub	x1, x29, #0x28
   2a4f0:	mov	w2, #0x3                   	// #3
   2a4f4:	bl	c740 <mpfr_exp@plt>
   2a4f8:	ldrb	w8, [x26, x25]
   2a4fc:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   2a500:	tbz	w8, #1, 2a320 <mpfr_sinh_cosh@@Base+0x1c4>
   2a504:	b	2a680 <mpfr_sinh_cosh@@Base+0x524>
   2a508:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2a50c:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2a510:	mov	w1, #0x94                  	// #148
   2a514:	add	x0, x0, #0xe67
   2a518:	add	x2, x2, #0xe7c
   2a51c:	bl	cb20 <mpfr_assert_fail@plt>
   2a520:	b	2a3ac <mpfr_sinh_cosh@@Base+0x250>
   2a524:	ldr	w20, [sp, #52]
   2a528:	ldr	w3, [x22, #8]
   2a52c:	sub	x1, x29, #0x48
   2a530:	mov	x0, x21
   2a534:	mov	w2, w20
   2a538:	bl	c690 <mpfr_set4@plt>
   2a53c:	ldr	x19, [sp, #40]
   2a540:	ldur	w3, [x29, #-96]
   2a544:	mov	w22, w0
   2a548:	sub	x1, x29, #0x68
   2a54c:	mov	x0, x19
   2a550:	mov	w2, w20
   2a554:	bl	c690 <mpfr_set4@plt>
   2a558:	ldr	w25, [sp, #12]
   2a55c:	mov	w23, w0
   2a560:	ldr	x1, [sp, #56]
   2a564:	ldp	x24, x20, [sp, #16]
   2a568:	cbz	x1, 2a574 <mpfr_sinh_cosh@@Base+0x418>
   2a56c:	ldr	x0, [sp, #64]
   2a570:	bl	cc00 <mpfr_free_func@plt>
   2a574:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a578:	ldr	x1, [x0, #2640]
   2a57c:	add	x0, x0, #0xa50
   2a580:	blr	x1
   2a584:	str	w25, [x26, x0]
   2a588:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a58c:	ldr	x1, [x0, #2576]
   2a590:	add	x0, x0, #0xa10
   2a594:	blr	x1
   2a598:	str	x20, [x26, x0]
   2a59c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a5a0:	ldr	x1, [x0, #2608]
   2a5a4:	add	x0, x0, #0xa30
   2a5a8:	blr	x1
   2a5ac:	str	x24, [x26, x0]
   2a5b0:	ldr	x8, [x21, #16]
   2a5b4:	cmp	x8, x24
   2a5b8:	b.gt	2a738 <mpfr_sinh_cosh@@Base+0x5dc>
   2a5bc:	cmp	x8, x20
   2a5c0:	b.lt	2a738 <mpfr_sinh_cosh@@Base+0x5dc>  // b.tstop
   2a5c4:	cbz	w22, 2a5e0 <mpfr_sinh_cosh@@Base+0x484>
   2a5c8:	orr	w8, w25, #0x8
   2a5cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a5d0:	ldr	x1, [x0, #2640]
   2a5d4:	add	x0, x0, #0xa50
   2a5d8:	blr	x1
   2a5dc:	str	w8, [x26, x0]
   2a5e0:	ldr	x8, [x19, #16]
   2a5e4:	cmp	x8, x20
   2a5e8:	b.lt	2a780 <mpfr_sinh_cosh@@Base+0x624>  // b.tstop
   2a5ec:	cmp	x8, x24
   2a5f0:	b.gt	2a780 <mpfr_sinh_cosh@@Base+0x624>
   2a5f4:	cbz	w23, 2a63c <mpfr_sinh_cosh@@Base+0x4e0>
   2a5f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a5fc:	ldr	x1, [x0, #2640]
   2a600:	add	x0, x0, #0xa50
   2a604:	blr	x1
   2a608:	ldr	w8, [x26, x0]
   2a60c:	orr	w8, w8, #0x8
   2a610:	str	w8, [x26, x0]
   2a614:	cmp	w22, #0x1
   2a618:	mov	w8, #0x1                   	// #1
   2a61c:	cinc	w8, w8, lt  // lt = tstop
   2a620:	cmp	w22, #0x0
   2a624:	csel	w8, wzr, w8, eq  // eq = none
   2a628:	cmp	w23, #0x0
   2a62c:	cset	w9, eq  // eq = none
   2a630:	b.le	2a650 <mpfr_sinh_cosh@@Base+0x4f4>
   2a634:	mov	w10, #0x4                   	// #4
   2a638:	b	2a654 <mpfr_sinh_cosh@@Base+0x4f8>
   2a63c:	cmp	w22, #0x1
   2a640:	mov	w9, #0x1                   	// #1
   2a644:	cinc	w8, w9, lt  // lt = tstop
   2a648:	cmp	w22, #0x0
   2a64c:	csel	w8, wzr, w8, eq  // eq = none
   2a650:	mov	w10, #0x8                   	// #8
   2a654:	cmp	w9, #0x0
   2a658:	csel	w9, wzr, w10, ne  // ne = any
   2a65c:	orr	w0, w9, w8
   2a660:	ldp	x20, x19, [sp, #416]
   2a664:	ldp	x22, x21, [sp, #400]
   2a668:	ldp	x24, x23, [sp, #384]
   2a66c:	ldp	x26, x25, [sp, #368]
   2a670:	ldp	x28, x27, [sp, #352]
   2a674:	ldp	x29, x30, [sp, #336]
   2a678:	add	sp, sp, #0x1b0
   2a67c:	ret
   2a680:	ldr	x19, [sp, #40]
   2a684:	ldr	w20, [sp, #52]
   2a688:	mov	w2, #0x1                   	// #1
   2a68c:	mov	x0, x19
   2a690:	mov	w1, w20
   2a694:	bl	bf90 <mpfr_overflow@plt>
   2a698:	mov	w23, w0
   2a69c:	mov	x0, x21
   2a6a0:	mov	x1, x22
   2a6a4:	mov	w2, w20
   2a6a8:	bl	c320 <mpfr_sinh@plt>
   2a6ac:	ldr	w25, [sp, #12]
   2a6b0:	mov	w22, w0
   2a6b4:	orr	w25, w25, #0x2
   2a6b8:	ldr	x1, [sp, #56]
   2a6bc:	ldp	x24, x20, [sp, #16]
   2a6c0:	cbnz	x1, 2a56c <mpfr_sinh_cosh@@Base+0x410>
   2a6c4:	b	2a574 <mpfr_sinh_cosh@@Base+0x418>
   2a6c8:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2a6cc:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2a6d0:	add	x0, x0, #0xe67
   2a6d4:	add	x2, x2, #0xe73
   2a6d8:	mov	w1, #0x28                  	// #40
   2a6dc:	bl	cb20 <mpfr_assert_fail@plt>
   2a6e0:	b	2a194 <mpfr_sinh_cosh@@Base+0x38>
   2a6e4:	cmp	x8, x19
   2a6e8:	b.ne	2a7b4 <mpfr_sinh_cosh@@Base+0x658>  // b.any
   2a6ec:	str	x19, [x28, #16]
   2a6f0:	str	x19, [x21, #16]
   2a6f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a6f8:	ldr	x1, [x0, #2640]
   2a6fc:	add	x0, x0, #0xa50
   2a700:	blr	x1
   2a704:	mov	x8, x0
   2a708:	mrs	x9, tpidr_el0
   2a70c:	ldr	w10, [x9, x8]
   2a710:	mov	w0, wzr
   2a714:	orr	w10, w10, #0x4
   2a718:	str	w10, [x9, x8]
   2a71c:	b	2a660 <mpfr_sinh_cosh@@Base+0x504>
   2a720:	mov	x8, xzr
   2a724:	add	x8, x8, x20
   2a728:	sub	x9, x19, #0x107
   2a72c:	cmp	x8, x9
   2a730:	b.le	2a250 <mpfr_sinh_cosh@@Base+0xf4>
   2a734:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2a738:	ldr	w2, [sp, #52]
   2a73c:	mov	x0, x21
   2a740:	mov	w1, w22
   2a744:	bl	cb10 <mpfr_check_range@plt>
   2a748:	mov	w22, w0
   2a74c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a750:	ldr	x1, [x0, #2576]
   2a754:	add	x0, x0, #0xa10
   2a758:	blr	x1
   2a75c:	ldr	x20, [x26, x0]
   2a760:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a764:	ldr	x1, [x0, #2608]
   2a768:	add	x0, x0, #0xa30
   2a76c:	blr	x1
   2a770:	ldr	x24, [x26, x0]
   2a774:	ldr	x8, [x19, #16]
   2a778:	cmp	x8, x20
   2a77c:	b.ge	2a5ec <mpfr_sinh_cosh@@Base+0x490>  // b.tcont
   2a780:	ldr	w2, [sp, #52]
   2a784:	mov	x0, x19
   2a788:	mov	w1, w23
   2a78c:	bl	cb10 <mpfr_check_range@plt>
   2a790:	mov	w23, w0
   2a794:	b	2a614 <mpfr_sinh_cosh@@Base+0x4b8>
   2a798:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2a79c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   2a7a0:	add	x0, x0, #0xe67
   2a7a4:	add	x2, x2, #0x6be
   2a7a8:	mov	w1, #0x60                  	// #96
   2a7ac:	bl	cb20 <mpfr_assert_fail@plt>
   2a7b0:	b	2a234 <mpfr_sinh_cosh@@Base+0xd8>
   2a7b4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2a7b8:	cmp	x8, x9
   2a7bc:	b.ne	2a7e0 <mpfr_sinh_cosh@@Base+0x684>  // b.any
   2a7c0:	str	x9, [x21, #16]
   2a7c4:	ldr	w8, [x22, #8]
   2a7c8:	mov	w10, #0x1                   	// #1
   2a7cc:	mov	w0, wzr
   2a7d0:	str	w8, [x21, #8]
   2a7d4:	str	x9, [x28, #16]
   2a7d8:	str	w10, [x28, #8]
   2a7dc:	b	2a660 <mpfr_sinh_cosh@@Base+0x504>
   2a7e0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2a7e4:	str	x8, [x21, #16]
   2a7e8:	ldr	w8, [x22, #8]
   2a7ec:	ldr	w3, [sp, #52]
   2a7f0:	mov	w1, #0x1                   	// #1
   2a7f4:	mov	x0, x28
   2a7f8:	mov	x2, xzr
   2a7fc:	str	w8, [x21, #8]
   2a800:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   2a804:	cmp	w0, #0x1
   2a808:	mov	w8, #0x4                   	// #4
   2a80c:	mov	w9, #0x8                   	// #8
   2a810:	csel	w8, w9, w8, lt  // lt = tstop
   2a814:	cmp	w0, #0x0
   2a818:	csel	w0, wzr, w8, eq  // eq = none
   2a81c:	b	2a660 <mpfr_sinh_cosh@@Base+0x504>

000000000002a820 <mpfr_acosh@@Base>:
   2a820:	sub	sp, sp, #0xb0
   2a824:	stp	x29, x30, [sp, #80]
   2a828:	stp	x28, x27, [sp, #96]
   2a82c:	stp	x26, x25, [sp, #112]
   2a830:	stp	x24, x23, [sp, #128]
   2a834:	stp	x22, x21, [sp, #144]
   2a838:	stp	x20, x19, [sp, #160]
   2a83c:	ldr	x8, [x1, #16]
   2a840:	mov	x22, #0x2                   	// #2
   2a844:	movk	x22, #0x8000, lsl #48
   2a848:	add	x9, x22, #0x2
   2a84c:	mov	x21, x1
   2a850:	cmp	x8, x9
   2a854:	mov	x19, x0
   2a858:	add	x29, sp, #0x50
   2a85c:	b.lt	2abc8 <mpfr_acosh@@Base+0x3a8>  // b.tstop
   2a860:	mov	w20, w2
   2a864:	mov	w1, #0x1                   	// #1
   2a868:	mov	x0, x21
   2a86c:	mov	x2, xzr
   2a870:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   2a874:	tbnz	w0, #31, 2abec <mpfr_acosh@@Base+0x3cc>
   2a878:	cbz	w0, 2ac18 <mpfr_acosh@@Base+0x3f8>
   2a87c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a880:	ldr	x1, [x0, #2640]
   2a884:	add	x0, x0, #0xa50
   2a888:	blr	x1
   2a88c:	mrs	x27, tpidr_el0
   2a890:	ldr	w23, [x27, x0]
   2a894:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a898:	ldr	x1, [x0, #2576]
   2a89c:	add	x0, x0, #0xa10
   2a8a0:	blr	x1
   2a8a4:	ldr	x25, [x27, x0]
   2a8a8:	mov	x8, x0
   2a8ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a8b0:	ldr	x1, [x0, #2608]
   2a8b4:	add	x0, x0, #0xa30
   2a8b8:	blr	x1
   2a8bc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2a8c0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2a8c4:	ldr	x28, [x27, x0]
   2a8c8:	str	x9, [x27, x8]
   2a8cc:	str	x10, [x27, x0]
   2a8d0:	ldr	x24, [x19]
   2a8d4:	subs	x26, x24, #0x1
   2a8d8:	add	x22, x24, #0x4
   2a8dc:	b.eq	2ac30 <mpfr_acosh@@Base+0x410>  // b.none
   2a8e0:	b.le	2ac50 <mpfr_acosh@@Base+0x430>
   2a8e4:	clz	x8, x26
   2a8e8:	mov	w9, #0x40                  	// #64
   2a8ec:	sub	x8, x9, x8
   2a8f0:	add	x22, x22, x8
   2a8f4:	sub	x0, x29, #0x20
   2a8f8:	mov	x1, x22
   2a8fc:	bl	ca60 <mpfr_init2@plt>
   2a900:	cmp	w20, #0x0
   2a904:	mov	w8, #0x40                  	// #64
   2a908:	cinc	x24, x24, eq  // eq = none
   2a90c:	str	x8, [sp, #8]
   2a910:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2a914:	ldr	x1, [x0, #2640]
   2a918:	add	x0, x0, #0xa50
   2a91c:	blr	x1
   2a920:	mov	x26, x0
   2a924:	str	wzr, [x27, x0]
   2a928:	sub	x0, x29, #0x20
   2a92c:	mov	w3, #0x3                   	// #3
   2a930:	mov	x1, x21
   2a934:	mov	x2, x21
   2a938:	bl	bda0 <mpfr_mul@plt>
   2a93c:	ldrb	w8, [x27, x26]
   2a940:	tbnz	w8, #1, 2aa40 <mpfr_acosh@@Base+0x220>
   2a944:	ldur	x26, [x29, #-16]
   2a948:	sub	x0, x29, #0x20
   2a94c:	sub	x1, x29, #0x20
   2a950:	mov	w2, #0x1                   	// #1
   2a954:	mov	w3, #0x3                   	// #3
   2a958:	bl	c520 <mpfr_sub_ui@plt>
   2a95c:	ldur	x8, [x29, #-16]
   2a960:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2a964:	cmp	x8, x9
   2a968:	b.eq	2aaa4 <mpfr_acosh@@Base+0x284>  // b.none
   2a96c:	sub	x0, x29, #0x20
   2a970:	sub	x1, x29, #0x20
   2a974:	mov	w2, wzr
   2a978:	sub	x26, x26, x8
   2a97c:	bl	c920 <mpfr_sqrt@plt>
   2a980:	sub	x0, x29, #0x20
   2a984:	sub	x1, x29, #0x20
   2a988:	mov	x2, x21
   2a98c:	mov	w3, wzr
   2a990:	bl	c1e0 <mpfr_add@plt>
   2a994:	sub	x0, x29, #0x20
   2a998:	sub	x1, x29, #0x20
   2a99c:	mov	w2, wzr
   2a9a0:	bl	c0d0 <mpfr_log@plt>
   2a9a4:	ldur	x9, [x29, #-16]
   2a9a8:	cmp	x26, #0x1
   2a9ac:	csinc	x8, x26, xzr, gt
   2a9b0:	mov	x26, #0x2                   	// #2
   2a9b4:	sub	x8, x8, x9
   2a9b8:	add	x10, x8, #0x3
   2a9bc:	add	x8, x8, #0x4
   2a9c0:	cmp	x10, #0x0
   2a9c4:	csel	x8, xzr, x8, lt  // lt = tstop
   2a9c8:	movk	x26, #0x8000, lsl #48
   2a9cc:	add	x10, x26, #0x2
   2a9d0:	cmp	x9, x10
   2a9d4:	b.lt	2aa08 <mpfr_acosh@@Base+0x1e8>  // b.tstop
   2a9d8:	ldur	x9, [x29, #-32]
   2a9dc:	ldur	x0, [x29, #-8]
   2a9e0:	sub	x2, x22, x8
   2a9e4:	mov	x3, x24
   2a9e8:	sub	x10, x9, #0x1
   2a9ec:	add	x9, x9, #0x3e
   2a9f0:	cmp	x10, #0x0
   2a9f4:	csel	x9, x9, x10, lt  // lt = tstop
   2a9f8:	asr	x9, x9, #6
   2a9fc:	add	x1, x9, #0x1
   2aa00:	bl	c370 <mpfr_round_p@plt>
   2aa04:	cbnz	w0, 2ab18 <mpfr_acosh@@Base+0x2f8>
   2aa08:	sub	x8, x26, x22
   2aa0c:	ldr	x26, [sp, #8]
   2aa10:	sub	x8, x8, #0x103
   2aa14:	cmp	x26, x8
   2aa18:	b.gt	2aafc <mpfr_acosh@@Base+0x2dc>
   2aa1c:	add	x22, x22, x26
   2aa20:	cmp	x22, #0x0
   2aa24:	cinc	x8, x22, lt  // lt = tstop
   2aa28:	asr	x8, x8, #1
   2aa2c:	sub	x0, x29, #0x20
   2aa30:	mov	x1, x22
   2aa34:	str	x8, [sp, #8]
   2aa38:	bl	bf20 <mpfr_set_prec@plt>
   2aa3c:	b	2a910 <mpfr_acosh@@Base+0xf0>
   2aa40:	sub	x0, x29, #0x20
   2aa44:	mov	x1, x21
   2aa48:	mov	w2, wzr
   2aa4c:	bl	c0d0 <mpfr_log@plt>
   2aa50:	ldur	x8, [x29, #-16]
   2aa54:	add	x0, sp, #0x10
   2aa58:	subs	x8, x22, x8
   2aa5c:	csinc	x1, x8, xzr, gt
   2aa60:	bl	ca60 <mpfr_init2@plt>
   2aa64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2aa68:	ldr	x1, [x0, #2624]
   2aa6c:	add	x0, x0, #0xa40
   2aa70:	blr	x1
   2aa74:	add	x1, x27, x0
   2aa78:	add	x0, sp, #0x10
   2aa7c:	mov	w2, wzr
   2aa80:	bl	c380 <mpfr_cache@plt>
   2aa84:	sub	x0, x29, #0x20
   2aa88:	sub	x1, x29, #0x20
   2aa8c:	add	x2, sp, #0x10
   2aa90:	mov	w3, wzr
   2aa94:	bl	c1e0 <mpfr_add@plt>
   2aa98:	add	x0, sp, #0x10
   2aa9c:	bl	c0b0 <mpfr_clear@plt>
   2aaa0:	b	2aadc <mpfr_acosh@@Base+0x2bc>
   2aaa4:	sub	x0, x29, #0x20
   2aaa8:	mov	w2, #0x1                   	// #1
   2aaac:	mov	w3, #0x3                   	// #3
   2aab0:	mov	x1, x21
   2aab4:	bl	c520 <mpfr_sub_ui@plt>
   2aab8:	sub	x0, x29, #0x20
   2aabc:	sub	x1, x29, #0x20
   2aac0:	mov	w2, #0x1                   	// #1
   2aac4:	mov	w3, wzr
   2aac8:	bl	c2c0 <mpfr_mul_2ui@plt>
   2aacc:	sub	x0, x29, #0x20
   2aad0:	sub	x1, x29, #0x20
   2aad4:	mov	w2, wzr
   2aad8:	bl	c920 <mpfr_sqrt@plt>
   2aadc:	ldur	x9, [x29, #-16]
   2aae0:	mov	x26, #0x2                   	// #2
   2aae4:	movk	x26, #0x8000, lsl #48
   2aae8:	mov	w8, #0x1                   	// #1
   2aaec:	add	x10, x26, #0x2
   2aaf0:	cmp	x9, x10
   2aaf4:	b.ge	2a9d8 <mpfr_acosh@@Base+0x1b8>  // b.tcont
   2aaf8:	b	2aa08 <mpfr_acosh@@Base+0x1e8>
   2aafc:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2ab00:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2ab04:	mov	w1, #0x92                  	// #146
   2ab08:	add	x0, x0, #0xebf
   2ab0c:	add	x2, x2, #0xde2
   2ab10:	bl	cb20 <mpfr_assert_fail@plt>
   2ab14:	b	2aa1c <mpfr_acosh@@Base+0x1fc>
   2ab18:	ldur	w3, [x29, #-24]
   2ab1c:	sub	x1, x29, #0x20
   2ab20:	mov	x0, x19
   2ab24:	mov	w2, w20
   2ab28:	bl	c690 <mpfr_set4@plt>
   2ab2c:	mov	w21, w0
   2ab30:	sub	x0, x29, #0x20
   2ab34:	bl	c0b0 <mpfr_clear@plt>
   2ab38:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ab3c:	ldr	x1, [x0, #2640]
   2ab40:	add	x0, x0, #0xa50
   2ab44:	blr	x1
   2ab48:	str	w23, [x27, x0]
   2ab4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ab50:	ldr	x1, [x0, #2576]
   2ab54:	add	x0, x0, #0xa10
   2ab58:	blr	x1
   2ab5c:	str	x25, [x27, x0]
   2ab60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ab64:	ldr	x1, [x0, #2608]
   2ab68:	add	x0, x0, #0xa30
   2ab6c:	blr	x1
   2ab70:	str	x28, [x27, x0]
   2ab74:	ldr	x8, [x19, #16]
   2ab78:	cmp	x8, x28
   2ab7c:	b.gt	2ac38 <mpfr_acosh@@Base+0x418>
   2ab80:	cmp	x8, x25
   2ab84:	b.lt	2ac38 <mpfr_acosh@@Base+0x418>  // b.tstop
   2ab88:	cbz	w21, 2aba4 <mpfr_acosh@@Base+0x384>
   2ab8c:	orr	w8, w23, #0x8
   2ab90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ab94:	ldr	x1, [x0, #2640]
   2ab98:	add	x0, x0, #0xa50
   2ab9c:	blr	x1
   2aba0:	str	w8, [x27, x0]
   2aba4:	mov	w0, w21
   2aba8:	ldp	x20, x19, [sp, #160]
   2abac:	ldp	x22, x21, [sp, #144]
   2abb0:	ldp	x24, x23, [sp, #128]
   2abb4:	ldp	x26, x25, [sp, #112]
   2abb8:	ldp	x28, x27, [sp, #96]
   2abbc:	ldp	x29, x30, [sp, #80]
   2abc0:	add	sp, sp, #0xb0
   2abc4:	ret
   2abc8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2abcc:	cmp	x8, x9
   2abd0:	b.ne	2abec <mpfr_acosh@@Base+0x3cc>  // b.any
   2abd4:	ldr	w8, [x21, #8]
   2abd8:	cmp	w8, #0x1
   2abdc:	b.lt	2abec <mpfr_acosh@@Base+0x3cc>  // b.tstop
   2abe0:	mov	w21, wzr
   2abe4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2abe8:	b	2ac20 <mpfr_acosh@@Base+0x400>
   2abec:	str	x22, [x19, #16]
   2abf0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2abf4:	ldr	x1, [x0, #2640]
   2abf8:	add	x0, x0, #0xa50
   2abfc:	blr	x1
   2ac00:	mrs	x8, tpidr_el0
   2ac04:	ldr	w9, [x8, x0]
   2ac08:	mov	w21, wzr
   2ac0c:	orr	w9, w9, #0x4
   2ac10:	str	w9, [x8, x0]
   2ac14:	b	2aba4 <mpfr_acosh@@Base+0x384>
   2ac18:	mov	w21, wzr
   2ac1c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2ac20:	mov	w9, #0x1                   	// #1
   2ac24:	str	x8, [x19, #16]
   2ac28:	str	w9, [x19, #8]
   2ac2c:	b	2aba4 <mpfr_acosh@@Base+0x384>
   2ac30:	mov	x8, xzr
   2ac34:	b	2a8f0 <mpfr_acosh@@Base+0xd0>
   2ac38:	mov	x0, x19
   2ac3c:	mov	w1, w21
   2ac40:	mov	w2, w20
   2ac44:	bl	cb10 <mpfr_check_range@plt>
   2ac48:	mov	w21, w0
   2ac4c:	b	2aba4 <mpfr_acosh@@Base+0x384>
   2ac50:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2ac54:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2ac58:	add	x0, x0, #0xebf
   2ac5c:	add	x2, x2, #0xdd9
   2ac60:	mov	w1, #0x53                  	// #83
   2ac64:	bl	cb20 <mpfr_assert_fail@plt>
   2ac68:	b	2a8e4 <mpfr_acosh@@Base+0xc4>

000000000002ac6c <mpfr_asinh@@Base>:
   2ac6c:	sub	sp, sp, #0x90
   2ac70:	stp	x29, x30, [sp, #48]
   2ac74:	stp	x28, x27, [sp, #64]
   2ac78:	stp	x26, x25, [sp, #80]
   2ac7c:	stp	x24, x23, [sp, #96]
   2ac80:	stp	x22, x21, [sp, #112]
   2ac84:	stp	x20, x19, [sp, #128]
   2ac88:	ldr	x8, [x1, #16]
   2ac8c:	mov	x10, #0x2                   	// #2
   2ac90:	movk	x10, #0x8000, lsl #48
   2ac94:	add	x9, x10, #0x2
   2ac98:	mov	x21, x1
   2ac9c:	cmp	x8, x9
   2aca0:	mov	x19, x0
   2aca4:	add	x29, sp, #0x30
   2aca8:	str	w2, [sp, #12]
   2acac:	b.lt	2af44 <mpfr_asinh@@Base+0x2d8>  // b.tstop
   2acb0:	tbz	x8, #63, 2accc <mpfr_asinh@@Base+0x60>
   2acb4:	ldr	x9, [x19]
   2acb8:	mov	w10, #0x2                   	// #2
   2acbc:	sub	x2, x10, x8, lsl #1
   2acc0:	add	x8, x9, #0x1
   2acc4:	cmp	x2, x8
   2acc8:	b.hi	2afcc <mpfr_asinh@@Base+0x360>  // b.pmore
   2accc:	ldr	x25, [x19]
   2acd0:	ldr	w22, [x21, #8]
   2acd4:	subs	x23, x25, #0x1
   2acd8:	add	x20, x25, #0x4
   2acdc:	b.eq	2af78 <mpfr_asinh@@Base+0x30c>  // b.none
   2ace0:	b.le	2af98 <mpfr_asinh@@Base+0x32c>
   2ace4:	clz	x8, x23
   2ace8:	mov	w9, #0x40                  	// #64
   2acec:	sub	x8, x9, x8
   2acf0:	add	x23, x20, x8
   2acf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2acf8:	ldr	x1, [x0, #2640]
   2acfc:	add	x0, x0, #0xa50
   2ad00:	blr	x1
   2ad04:	mrs	x28, tpidr_el0
   2ad08:	ldr	w24, [x28, x0]
   2ad0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ad10:	ldr	x1, [x0, #2576]
   2ad14:	add	x0, x0, #0xa10
   2ad18:	blr	x1
   2ad1c:	ldr	x26, [x28, x0]
   2ad20:	mov	x8, x0
   2ad24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ad28:	ldr	x1, [x0, #2608]
   2ad2c:	add	x0, x0, #0xa30
   2ad30:	blr	x1
   2ad34:	ldr	x27, [x28, x0]
   2ad38:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2ad3c:	str	x9, [x28, x8]
   2ad40:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2ad44:	str	x8, [x28, x0]
   2ad48:	add	x0, sp, #0x10
   2ad4c:	mov	x1, x23
   2ad50:	bl	ca60 <mpfr_init2@plt>
   2ad54:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   2ad58:	adrp	x9, 76000 <__gmpfr_l2b@@Base+0x2e0>
   2ad5c:	ldr	x8, [x8, #4016]
   2ad60:	ldr	x9, [x9, #3960]
   2ad64:	cmp	w22, #0x0
   2ad68:	mov	w10, #0x40                  	// #64
   2ad6c:	str	x10, [sp]
   2ad70:	csel	x20, x9, x8, lt  // lt = tstop
   2ad74:	ldr	w8, [sp, #12]
   2ad78:	cmp	w8, #0x0
   2ad7c:	cinc	x25, x25, eq  // eq = none
   2ad80:	add	x0, sp, #0x10
   2ad84:	mov	w3, #0x3                   	// #3
   2ad88:	mov	x1, x21
   2ad8c:	mov	x2, x21
   2ad90:	bl	bda0 <mpfr_mul@plt>
   2ad94:	add	x0, sp, #0x10
   2ad98:	add	x1, sp, #0x10
   2ad9c:	mov	w2, #0x1                   	// #1
   2ada0:	mov	w3, #0x3                   	// #3
   2ada4:	bl	c270 <mpfr_add_ui@plt>
   2ada8:	add	x0, sp, #0x10
   2adac:	add	x1, sp, #0x10
   2adb0:	mov	w2, wzr
   2adb4:	bl	c920 <mpfr_sqrt@plt>
   2adb8:	add	x0, sp, #0x10
   2adbc:	add	x1, sp, #0x10
   2adc0:	mov	x2, x21
   2adc4:	mov	w3, wzr
   2adc8:	blr	x20
   2adcc:	add	x0, sp, #0x10
   2add0:	add	x1, sp, #0x10
   2add4:	mov	w2, wzr
   2add8:	bl	c0d0 <mpfr_log@plt>
   2addc:	ldr	x8, [sp, #32]
   2ade0:	mov	x9, #0x2                   	// #2
   2ade4:	movk	x9, #0x8000, lsl #48
   2ade8:	add	x9, x9, #0x2
   2adec:	cmp	x8, x9
   2adf0:	b.lt	2ae30 <mpfr_asinh@@Base+0x1c4>  // b.tstop
   2adf4:	ldr	x9, [sp, #16]
   2adf8:	sub	x8, x8, #0x5
   2adfc:	cmn	x8, #0x1
   2ae00:	csinv	x8, x8, xzr, lt  // lt = tstop
   2ae04:	add	x2, x8, x23
   2ae08:	sub	x8, x9, #0x1
   2ae0c:	ldr	x0, [sp, #40]
   2ae10:	add	x9, x9, #0x3e
   2ae14:	cmp	x8, #0x0
   2ae18:	csel	x8, x9, x8, lt  // lt = tstop
   2ae1c:	asr	x8, x8, #6
   2ae20:	add	x1, x8, #0x1
   2ae24:	mov	x3, x25
   2ae28:	bl	c370 <mpfr_round_p@plt>
   2ae2c:	cbnz	w0, 2ae94 <mpfr_asinh@@Base+0x228>
   2ae30:	mov	x8, #0x2                   	// #2
   2ae34:	ldr	x9, [sp]
   2ae38:	movk	x8, #0x8000, lsl #48
   2ae3c:	sub	x8, x8, x23
   2ae40:	sub	x8, x8, #0x103
   2ae44:	cmp	x9, x8
   2ae48:	mov	x8, x9
   2ae4c:	b.gt	2ae74 <mpfr_asinh@@Base+0x208>
   2ae50:	add	x23, x23, x8
   2ae54:	cmp	x23, #0x0
   2ae58:	cinc	x8, x23, lt  // lt = tstop
   2ae5c:	asr	x8, x8, #1
   2ae60:	add	x0, sp, #0x10
   2ae64:	mov	x1, x23
   2ae68:	str	x8, [sp]
   2ae6c:	bl	bf20 <mpfr_set_prec@plt>
   2ae70:	b	2ad80 <mpfr_asinh@@Base+0x114>
   2ae74:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2ae78:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2ae7c:	mov	w1, #0x6c                  	// #108
   2ae80:	add	x0, x0, #0xec7
   2ae84:	add	x2, x2, #0xde2
   2ae88:	bl	cb20 <mpfr_assert_fail@plt>
   2ae8c:	ldr	x8, [sp]
   2ae90:	b	2ae50 <mpfr_asinh@@Base+0x1e4>
   2ae94:	ldr	w2, [sp, #12]
   2ae98:	add	x1, sp, #0x10
   2ae9c:	mov	x0, x19
   2aea0:	mov	w3, w22
   2aea4:	bl	c690 <mpfr_set4@plt>
   2aea8:	mov	w22, w0
   2aeac:	add	x0, sp, #0x10
   2aeb0:	bl	c0b0 <mpfr_clear@plt>
   2aeb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2aeb8:	ldr	x1, [x0, #2640]
   2aebc:	add	x0, x0, #0xa50
   2aec0:	blr	x1
   2aec4:	str	w24, [x28, x0]
   2aec8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2aecc:	ldr	x1, [x0, #2576]
   2aed0:	add	x0, x0, #0xa10
   2aed4:	blr	x1
   2aed8:	str	x26, [x28, x0]
   2aedc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2aee0:	ldr	x1, [x0, #2608]
   2aee4:	add	x0, x0, #0xa30
   2aee8:	blr	x1
   2aeec:	str	x27, [x28, x0]
   2aef0:	ldr	x8, [x19, #16]
   2aef4:	cmp	x8, x27
   2aef8:	b.gt	2af80 <mpfr_asinh@@Base+0x314>
   2aefc:	cmp	x8, x26
   2af00:	b.lt	2af80 <mpfr_asinh@@Base+0x314>  // b.tstop
   2af04:	cbz	w22, 2af20 <mpfr_asinh@@Base+0x2b4>
   2af08:	orr	w8, w24, #0x8
   2af0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2af10:	ldr	x1, [x0, #2640]
   2af14:	add	x0, x0, #0xa50
   2af18:	blr	x1
   2af1c:	str	w8, [x28, x0]
   2af20:	mov	w0, w22
   2af24:	ldp	x20, x19, [sp, #128]
   2af28:	ldp	x22, x21, [sp, #112]
   2af2c:	ldp	x24, x23, [sp, #96]
   2af30:	ldp	x26, x25, [sp, #80]
   2af34:	ldp	x28, x27, [sp, #64]
   2af38:	ldp	x29, x30, [sp, #48]
   2af3c:	add	sp, sp, #0x90
   2af40:	ret
   2af44:	cmp	x8, x10
   2af48:	b.ne	2afb4 <mpfr_asinh@@Base+0x348>  // b.any
   2af4c:	str	x10, [x19, #16]
   2af50:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2af54:	ldr	x1, [x0, #2640]
   2af58:	add	x0, x0, #0xa50
   2af5c:	blr	x1
   2af60:	mrs	x8, tpidr_el0
   2af64:	ldr	w9, [x8, x0]
   2af68:	mov	w22, wzr
   2af6c:	orr	w9, w9, #0x4
   2af70:	str	w9, [x8, x0]
   2af74:	b	2af20 <mpfr_asinh@@Base+0x2b4>
   2af78:	mov	x8, xzr
   2af7c:	b	2acf0 <mpfr_asinh@@Base+0x84>
   2af80:	ldr	w2, [sp, #12]
   2af84:	mov	x0, x19
   2af88:	mov	w1, w22
   2af8c:	bl	cb10 <mpfr_check_range@plt>
   2af90:	mov	w22, w0
   2af94:	b	2af20 <mpfr_asinh@@Base+0x2b4>
   2af98:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2af9c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2afa0:	add	x0, x0, #0xec7
   2afa4:	add	x2, x2, #0xdd9
   2afa8:	mov	w1, #0x50                  	// #80
   2afac:	bl	cb20 <mpfr_assert_fail@plt>
   2afb0:	b	2ace4 <mpfr_asinh@@Base+0x78>
   2afb4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2afb8:	cmp	x8, x9
   2afbc:	b.ne	2afec <mpfr_asinh@@Base+0x380>  // b.any
   2afc0:	mov	w22, wzr
   2afc4:	str	x9, [x19, #16]
   2afc8:	b	2aff8 <mpfr_asinh@@Base+0x38c>
   2afcc:	ldr	w4, [sp, #12]
   2afd0:	mov	x0, x19
   2afd4:	mov	x1, x21
   2afd8:	mov	w3, wzr
   2afdc:	bl	c530 <mpfr_round_near_x@plt>
   2afe0:	mov	w22, w0
   2afe4:	cbnz	w0, 2af20 <mpfr_asinh@@Base+0x2b4>
   2afe8:	b	2accc <mpfr_asinh@@Base+0x60>
   2afec:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2aff0:	mov	w22, wzr
   2aff4:	str	x8, [x19, #16]
   2aff8:	ldr	w8, [x21, #8]
   2affc:	str	w8, [x19, #8]
   2b000:	b	2af20 <mpfr_asinh@@Base+0x2b4>

000000000002b004 <mpfr_atanh@@Base>:
   2b004:	sub	sp, sp, #0x150
   2b008:	stp	x29, x30, [sp, #240]
   2b00c:	stp	x28, x27, [sp, #256]
   2b010:	stp	x26, x25, [sp, #272]
   2b014:	stp	x24, x23, [sp, #288]
   2b018:	stp	x22, x21, [sp, #304]
   2b01c:	stp	x20, x19, [sp, #320]
   2b020:	ldr	x9, [x1, #16]
   2b024:	mov	x28, #0x2                   	// #2
   2b028:	movk	x28, #0x8000, lsl #48
   2b02c:	add	x8, x28, #0x2
   2b030:	mov	x21, x1
   2b034:	cmp	x9, x8
   2b038:	mov	x19, x0
   2b03c:	add	x29, sp, #0xf0
   2b040:	b.lt	2b45c <mpfr_atanh@@Base+0x458>  // b.tstop
   2b044:	cmp	x9, #0x1
   2b048:	b.ge	2b480 <mpfr_atanh@@Base+0x47c>  // b.tcont
   2b04c:	mov	w26, w2
   2b050:	tbnz	x9, #63, 2b05c <mpfr_atanh@@Base+0x58>
   2b054:	mov	x9, xzr
   2b058:	b	2b074 <mpfr_atanh@@Base+0x70>
   2b05c:	ldr	x8, [x19]
   2b060:	mov	w10, #0x1                   	// #1
   2b064:	sub	x2, x10, x9, lsl #1
   2b068:	add	x8, x8, #0x1
   2b06c:	cmp	x2, x8
   2b070:	b.hi	2b530 <mpfr_atanh@@Base+0x52c>  // b.pmore
   2b074:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b078:	ldr	x1, [x0, #2640]
   2b07c:	add	x0, x0, #0xa50
   2b080:	blr	x1
   2b084:	mrs	x27, tpidr_el0
   2b088:	ldr	w8, [x27, x0]
   2b08c:	str	w8, [sp, #36]
   2b090:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b094:	ldr	x1, [x0, #2576]
   2b098:	add	x0, x0, #0xa10
   2b09c:	blr	x1
   2b0a0:	ldr	x25, [x27, x0]
   2b0a4:	mov	x8, x0
   2b0a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b0ac:	ldr	x1, [x0, #2608]
   2b0b0:	add	x0, x0, #0xa30
   2b0b4:	blr	x1
   2b0b8:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   2b0bc:	str	x10, [x27, x8]
   2b0c0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2b0c4:	ldr	x20, [x27, x0]
   2b0c8:	str	x8, [x27, x0]
   2b0cc:	ldr	x8, [x21]
   2b0d0:	mov	w11, #0x1                   	// #1
   2b0d4:	str	x8, [sp, #104]
   2b0d8:	ldr	x10, [x21, #24]
   2b0dc:	str	w11, [sp, #112]
   2b0e0:	stp	x9, x10, [sp, #120]
   2b0e4:	ldr	x22, [x19]
   2b0e8:	cmp	x8, x22
   2b0ec:	csel	x23, x8, x22, gt
   2b0f0:	subs	x24, x23, #0x1
   2b0f4:	b.eq	2b4f4 <mpfr_atanh@@Base+0x4f0>  // b.none
   2b0f8:	b.le	2b514 <mpfr_atanh@@Base+0x510>
   2b0fc:	clz	x8, x24
   2b100:	mov	w9, #0x40                  	// #64
   2b104:	sub	x8, x9, x8
   2b108:	add	x8, x23, x8
   2b10c:	add	x23, x8, #0x4
   2b110:	add	x0, sp, #0x48
   2b114:	mov	x1, x23
   2b118:	bl	ca60 <mpfr_init2@plt>
   2b11c:	add	x0, sp, #0x28
   2b120:	mov	x1, x23
   2b124:	bl	ca60 <mpfr_init2@plt>
   2b128:	cmp	w26, #0x0
   2b12c:	mov	w24, #0x40                  	// #64
   2b130:	cinc	x8, x22, eq  // eq = none
   2b134:	str	x8, [sp, #24]
   2b138:	mov	x0, x22
   2b13c:	bl	bcc0 <__gmpfr_int_ceil_log2@plt>
   2b140:	add	w8, w0, #0x1
   2b144:	ldr	x9, [sp, #120]
   2b148:	sxtw	x8, w8
   2b14c:	sdiv	x8, x22, x8
   2b150:	mvn	x8, x8
   2b154:	cmp	x9, x8
   2b158:	b.le	2b1d4 <mpfr_atanh@@Base+0x1d0>
   2b15c:	add	x0, sp, #0x28
   2b160:	add	x2, sp, #0x68
   2b164:	mov	w1, #0x1                   	// #1
   2b168:	mov	w3, #0x2                   	// #2
   2b16c:	bl	ca30 <mpfr_ui_sub@plt>
   2b170:	add	x0, sp, #0x48
   2b174:	add	x1, sp, #0x68
   2b178:	mov	w2, #0x1                   	// #1
   2b17c:	mov	w3, #0x3                   	// #3
   2b180:	bl	c270 <mpfr_add_ui@plt>
   2b184:	add	x0, sp, #0x48
   2b188:	add	x1, sp, #0x48
   2b18c:	add	x2, sp, #0x28
   2b190:	mov	w3, wzr
   2b194:	bl	c610 <mpfr_div@plt>
   2b198:	add	x0, sp, #0x48
   2b19c:	add	x1, sp, #0x48
   2b1a0:	mov	w2, wzr
   2b1a4:	bl	c0d0 <mpfr_log@plt>
   2b1a8:	add	x0, sp, #0x48
   2b1ac:	add	x1, sp, #0x48
   2b1b0:	mov	w2, #0x1                   	// #1
   2b1b4:	mov	w3, wzr
   2b1b8:	bl	c8f0 <mpfr_div_2ui@plt>
   2b1bc:	ldr	x8, [sp, #88]
   2b1c0:	sub	x9, x8, #0x5
   2b1c4:	cmn	x9, #0x1
   2b1c8:	csinv	x9, x9, xzr, lt  // lt = tstop
   2b1cc:	add	x2, x9, x23
   2b1d0:	b	2b2e8 <mpfr_atanh@@Base+0x2e4>
   2b1d4:	ldr	x28, [sp, #72]
   2b1d8:	sub	x0, x29, #0x48
   2b1dc:	str	x24, [sp, #8]
   2b1e0:	str	w26, [sp, #20]
   2b1e4:	mov	x1, x28
   2b1e8:	bl	ca60 <mpfr_init2@plt>
   2b1ec:	sub	x0, x29, #0x68
   2b1f0:	mov	x1, x28
   2b1f4:	bl	ca60 <mpfr_init2@plt>
   2b1f8:	sub	x0, x29, #0x28
   2b1fc:	mov	x1, x28
   2b200:	bl	ca60 <mpfr_init2@plt>
   2b204:	ldr	w3, [sp, #112]
   2b208:	sub	x0, x29, #0x48
   2b20c:	add	x1, sp, #0x68
   2b210:	mov	w2, #0x5                   	// #5
   2b214:	bl	c690 <mpfr_set4@plt>
   2b218:	ldur	w3, [x29, #-64]
   2b21c:	add	x0, sp, #0x48
   2b220:	sub	x1, x29, #0x48
   2b224:	mov	w2, #0x5                   	// #5
   2b228:	bl	c690 <mpfr_set4@plt>
   2b22c:	sub	x0, x29, #0x28
   2b230:	add	x1, sp, #0x68
   2b234:	add	x2, sp, #0x68
   2b238:	mov	w3, #0x5                   	// #5
   2b23c:	bl	bda0 <mpfr_mul@plt>
   2b240:	mov	w26, #0xb                   	// #11
   2b244:	sub	x0, x29, #0x48
   2b248:	sub	x1, x29, #0x48
   2b24c:	sub	x2, x29, #0x28
   2b250:	mov	w3, #0x5                   	// #5
   2b254:	sub	x24, x26, #0x8
   2b258:	bl	bda0 <mpfr_mul@plt>
   2b25c:	sub	x0, x29, #0x68
   2b260:	sub	x1, x29, #0x48
   2b264:	mov	w3, #0x5                   	// #5
   2b268:	mov	x2, x24
   2b26c:	bl	cc40 <mpfr_div_ui@plt>
   2b270:	ldr	x8, [sp, #88]
   2b274:	ldur	x9, [x29, #-88]
   2b278:	sub	x8, x8, x28
   2b27c:	cmp	x9, x8
   2b280:	b.le	2b2a0 <mpfr_atanh@@Base+0x29c>
   2b284:	add	x0, sp, #0x48
   2b288:	add	x1, sp, #0x48
   2b28c:	sub	x2, x29, #0x68
   2b290:	mov	w3, #0x5                   	// #5
   2b294:	bl	c1e0 <mpfr_add@plt>
   2b298:	add	x26, x26, #0x2
   2b29c:	b	2b244 <mpfr_atanh@@Base+0x240>
   2b2a0:	lsr	x0, x26, #1
   2b2a4:	bl	bcc0 <__gmpfr_int_ceil_log2@plt>
   2b2a8:	add	w8, w0, #0x2
   2b2ac:	mov	w24, w0
   2b2b0:	cmp	x28, w8, sxtw
   2b2b4:	b.le	2b368 <mpfr_atanh@@Base+0x364>
   2b2b8:	sub	x0, x29, #0x48
   2b2bc:	bl	c0b0 <mpfr_clear@plt>
   2b2c0:	sub	x0, x29, #0x68
   2b2c4:	bl	c0b0 <mpfr_clear@plt>
   2b2c8:	sub	x0, x29, #0x28
   2b2cc:	bl	c0b0 <mpfr_clear@plt>
   2b2d0:	ldr	x8, [sp, #88]
   2b2d4:	sub	x2, x23, w24, sxtw
   2b2d8:	ldr	w26, [sp, #20]
   2b2dc:	ldr	x24, [sp, #8]
   2b2e0:	mov	x28, #0x2                   	// #2
   2b2e4:	movk	x28, #0x8000, lsl #48
   2b2e8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2b2ec:	cmp	x8, x9
   2b2f0:	b.eq	2b3a0 <mpfr_atanh@@Base+0x39c>  // b.none
   2b2f4:	add	x9, x28, #0x2
   2b2f8:	cmp	x8, x9
   2b2fc:	b.lt	2b32c <mpfr_atanh@@Base+0x328>  // b.tstop
   2b300:	ldr	x8, [sp, #72]
   2b304:	ldr	x0, [sp, #96]
   2b308:	ldr	x3, [sp, #24]
   2b30c:	sub	x9, x8, #0x1
   2b310:	add	x8, x8, #0x3e
   2b314:	cmp	x9, #0x0
   2b318:	csel	x8, x8, x9, lt  // lt = tstop
   2b31c:	asr	x8, x8, #6
   2b320:	add	x1, x8, #0x1
   2b324:	bl	c370 <mpfr_round_p@plt>
   2b328:	cbnz	w0, 2b3a0 <mpfr_atanh@@Base+0x39c>
   2b32c:	sub	x8, x28, x23
   2b330:	sub	x8, x8, #0x103
   2b334:	cmp	x24, x8
   2b338:	b.gt	2b384 <mpfr_atanh@@Base+0x380>
   2b33c:	add	x23, x23, x24
   2b340:	cmp	x23, #0x0
   2b344:	cinc	x8, x23, lt  // lt = tstop
   2b348:	add	x0, sp, #0x48
   2b34c:	mov	x1, x23
   2b350:	asr	x24, x8, #1
   2b354:	bl	bf20 <mpfr_set_prec@plt>
   2b358:	add	x0, sp, #0x28
   2b35c:	mov	x1, x23
   2b360:	bl	bf20 <mpfr_set_prec@plt>
   2b364:	b	2b138 <mpfr_atanh@@Base+0x134>
   2b368:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2b36c:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2b370:	mov	w1, #0x56                  	// #86
   2b374:	add	x0, x0, #0xecf
   2b378:	add	x2, x2, #0xed7
   2b37c:	bl	cb20 <mpfr_assert_fail@plt>
   2b380:	b	2b2b8 <mpfr_atanh@@Base+0x2b4>
   2b384:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2b388:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   2b38c:	mov	w1, #0xca                  	// #202
   2b390:	add	x0, x0, #0xecf
   2b394:	add	x2, x2, #0xde2
   2b398:	bl	cb20 <mpfr_assert_fail@plt>
   2b39c:	b	2b33c <mpfr_atanh@@Base+0x338>
   2b3a0:	ldr	w3, [x21, #8]
   2b3a4:	add	x1, sp, #0x48
   2b3a8:	mov	x0, x19
   2b3ac:	mov	w2, w26
   2b3b0:	bl	c690 <mpfr_set4@plt>
   2b3b4:	mov	w22, w0
   2b3b8:	add	x0, sp, #0x48
   2b3bc:	bl	c0b0 <mpfr_clear@plt>
   2b3c0:	add	x0, sp, #0x28
   2b3c4:	bl	c0b0 <mpfr_clear@plt>
   2b3c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b3cc:	ldr	x1, [x0, #2640]
   2b3d0:	add	x0, x0, #0xa50
   2b3d4:	blr	x1
   2b3d8:	ldr	w9, [sp, #36]
   2b3dc:	str	w9, [x27, x0]
   2b3e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b3e4:	ldr	x1, [x0, #2576]
   2b3e8:	add	x0, x0, #0xa10
   2b3ec:	blr	x1
   2b3f0:	str	x25, [x27, x0]
   2b3f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b3f8:	ldr	x1, [x0, #2608]
   2b3fc:	add	x0, x0, #0xa30
   2b400:	blr	x1
   2b404:	str	x20, [x27, x0]
   2b408:	ldr	x8, [x19, #16]
   2b40c:	cmp	x8, x20
   2b410:	b.gt	2b4fc <mpfr_atanh@@Base+0x4f8>
   2b414:	cmp	x8, x25
   2b418:	b.lt	2b4fc <mpfr_atanh@@Base+0x4f8>  // b.tstop
   2b41c:	cbz	w22, 2b438 <mpfr_atanh@@Base+0x434>
   2b420:	orr	w8, w9, #0x8
   2b424:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b428:	ldr	x1, [x0, #2640]
   2b42c:	add	x0, x0, #0xa50
   2b430:	blr	x1
   2b434:	str	w8, [x27, x0]
   2b438:	mov	w0, w22
   2b43c:	ldp	x20, x19, [sp, #320]
   2b440:	ldp	x22, x21, [sp, #304]
   2b444:	ldp	x24, x23, [sp, #288]
   2b448:	ldp	x26, x25, [sp, #272]
   2b44c:	ldp	x28, x27, [sp, #256]
   2b450:	ldp	x29, x30, [sp, #240]
   2b454:	add	sp, sp, #0x150
   2b458:	ret
   2b45c:	and	x8, x9, #0xfffffffffffffffe
   2b460:	cmp	x8, x28
   2b464:	b.eq	2b4c8 <mpfr_atanh@@Base+0x4c4>  // b.none
   2b468:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2b46c:	str	x8, [x19, #16]
   2b470:	ldr	w8, [x21, #8]
   2b474:	mov	w22, wzr
   2b478:	str	w8, [x19, #8]
   2b47c:	b	2b438 <mpfr_atanh@@Base+0x434>
   2b480:	b.ne	2b4c8 <mpfr_atanh@@Base+0x4c4>  // b.any
   2b484:	mov	x0, x21
   2b488:	bl	bf50 <mpfr_powerof2_raw@plt>
   2b48c:	cbz	w0, 2b4c8 <mpfr_atanh@@Base+0x4c4>
   2b490:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2b494:	str	x8, [x19, #16]
   2b498:	ldr	w8, [x21, #8]
   2b49c:	str	w8, [x19, #8]
   2b4a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b4a4:	ldr	x1, [x0, #2640]
   2b4a8:	add	x0, x0, #0xa50
   2b4ac:	blr	x1
   2b4b0:	mrs	x8, tpidr_el0
   2b4b4:	ldr	w9, [x8, x0]
   2b4b8:	mov	w22, wzr
   2b4bc:	orr	w9, w9, #0x20
   2b4c0:	str	w9, [x8, x0]
   2b4c4:	b	2b438 <mpfr_atanh@@Base+0x434>
   2b4c8:	str	x28, [x19, #16]
   2b4cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b4d0:	ldr	x1, [x0, #2640]
   2b4d4:	add	x0, x0, #0xa50
   2b4d8:	blr	x1
   2b4dc:	mrs	x8, tpidr_el0
   2b4e0:	ldr	w9, [x8, x0]
   2b4e4:	mov	w22, wzr
   2b4e8:	orr	w9, w9, #0x4
   2b4ec:	str	w9, [x8, x0]
   2b4f0:	b	2b438 <mpfr_atanh@@Base+0x434>
   2b4f4:	mov	x8, xzr
   2b4f8:	b	2b108 <mpfr_atanh@@Base+0x104>
   2b4fc:	mov	x0, x19
   2b500:	mov	w1, w22
   2b504:	mov	w2, w26
   2b508:	bl	cb10 <mpfr_check_range@plt>
   2b50c:	mov	w22, w0
   2b510:	b	2b438 <mpfr_atanh@@Base+0x434>
   2b514:	adrp	x0, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2b518:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2b51c:	add	x0, x0, #0xecf
   2b520:	add	x2, x2, #0xe5e
   2b524:	mov	w1, #0xa1                  	// #161
   2b528:	bl	cb20 <mpfr_assert_fail@plt>
   2b52c:	b	2b0fc <mpfr_atanh@@Base+0xf8>
   2b530:	mov	w3, #0x1                   	// #1
   2b534:	mov	x0, x19
   2b538:	mov	x1, x21
   2b53c:	mov	w4, w26
   2b540:	bl	c530 <mpfr_round_near_x@plt>
   2b544:	mov	w22, w0
   2b548:	cbnz	w0, 2b438 <mpfr_atanh@@Base+0x434>
   2b54c:	ldr	x9, [x21, #16]
   2b550:	b	2b074 <mpfr_atanh@@Base+0x70>

000000000002b554 <mpfr_atan@@Base>:
   2b554:	stp	x29, x30, [sp, #-96]!
   2b558:	stp	x28, x27, [sp, #16]
   2b55c:	stp	x26, x25, [sp, #32]
   2b560:	stp	x24, x23, [sp, #48]
   2b564:	stp	x22, x21, [sp, #64]
   2b568:	stp	x20, x19, [sp, #80]
   2b56c:	mov	x29, sp
   2b570:	sub	sp, sp, #0x1, lsl #12
   2b574:	sub	sp, sp, #0x2c0
   2b578:	ldr	x8, [x1, #16]
   2b57c:	mov	x20, #0xfffffffffffffeff    	// #-257
   2b580:	movk	x20, #0x7fff, lsl #48
   2b584:	add	x9, x20, #0x105
   2b588:	mov	w25, w2
   2b58c:	mov	x24, x1
   2b590:	cmp	x8, x9
   2b594:	mov	x26, x0
   2b598:	b.lt	2c6c0 <mpfr_atan@@Base+0x116c>  // b.tstop
   2b59c:	tbz	x8, #63, 2b5b8 <mpfr_atan@@Base+0x64>
   2b5a0:	ldr	x9, [x26]
   2b5a4:	mov	w10, #0x1                   	// #1
   2b5a8:	sub	x2, x10, x8, lsl #1
   2b5ac:	add	x9, x9, #0x1
   2b5b0:	cmp	x2, x9
   2b5b4:	b.hi	2c758 <mpfr_atan@@Base+0x1204>  // b.pmore
   2b5b8:	ldr	x9, [x24]
   2b5bc:	mov	w10, #0x1                   	// #1
   2b5c0:	str	x24, [sp, #64]
   2b5c4:	str	x9, [sp, #3736]
   2b5c8:	ldr	x9, [x24, #24]
   2b5cc:	str	w10, [sp, #3744]
   2b5d0:	str	x8, [sp, #3752]
   2b5d4:	str	x9, [sp, #3760]
   2b5d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b5dc:	ldr	x1, [x0, #2640]
   2b5e0:	add	x0, x0, #0xa50
   2b5e4:	blr	x1
   2b5e8:	mrs	x27, tpidr_el0
   2b5ec:	ldr	w8, [x27, x0]
   2b5f0:	str	w8, [sp, #92]
   2b5f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b5f8:	ldr	x1, [x0, #2576]
   2b5fc:	add	x0, x0, #0xa10
   2b600:	blr	x1
   2b604:	ldr	x9, [x27, x0]
   2b608:	mov	x8, x0
   2b60c:	str	x9, [sp, #80]
   2b610:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2b614:	ldr	x1, [x0, #2608]
   2b618:	add	x0, x0, #0xa30
   2b61c:	blr	x1
   2b620:	ldr	x9, [x27, x0]
   2b624:	mov	w1, #0x1                   	// #1
   2b628:	mov	x2, xzr
   2b62c:	str	x9, [sp, #72]
   2b630:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2b634:	str	x9, [x27, x8]
   2b638:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2b63c:	str	x8, [x27, x0]
   2b640:	add	x0, sp, #0xe98
   2b644:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   2b648:	cbz	w0, 2c70c <mpfr_atan@@Base+0x11b8>
   2b64c:	ldr	x19, [x26]
   2b650:	mov	w24, w0
   2b654:	cmp	x19, #0x1
   2b658:	b.eq	2c730 <mpfr_atan@@Base+0x11dc>  // b.none
   2b65c:	mov	x8, x19
   2b660:	b.le	2c738 <mpfr_atan@@Base+0x11e4>
   2b664:	sub	x8, x8, #0x1
   2b668:	clz	x8, x8
   2b66c:	mov	w9, #0x40                  	// #64
   2b670:	sub	x8, x9, x8
   2b674:	add	x19, x8, x19
   2b678:	add	x23, x19, #0x44
   2b67c:	add	x0, sp, #0xe08
   2b680:	mov	x1, x23
   2b684:	bl	c900 <mpfr_mpz_init2@plt>
   2b688:	sub	x8, x20, #0x44
   2b68c:	cmp	x19, x8
   2b690:	b.gt	2c9b8 <mpfr_atan@@Base+0x1464>
   2b694:	add	x8, x19, #0x43
   2b698:	add	x9, x19, #0x82
   2b69c:	cmp	x8, #0x0
   2b6a0:	csel	x8, x9, x8, lt  // lt = tstop
   2b6a4:	asr	x8, x8, #6
   2b6a8:	add	x21, x19, #0x4
   2b6ac:	cmp	x19, #0xbd
   2b6b0:	add	x20, x8, #0x1
   2b6b4:	b.lt	2b6c8 <mpfr_atan@@Base+0x174>  // b.tstop
   2b6b8:	lsl	x0, x20, #5
   2b6bc:	str	x0, [sp, #328]
   2b6c0:	bl	ccd0 <mpfr_allocate_func@plt>
   2b6c4:	b	2b6d4 <mpfr_atan@@Base+0x180>
   2b6c8:	add	x8, sp, #0x148
   2b6cc:	add	x0, x8, #0x10
   2b6d0:	str	xzr, [sp, #328]
   2b6d4:	add	x9, x0, x20, lsl #4
   2b6d8:	cmp	w25, #0x0
   2b6dc:	add	x12, sp, #0x1d8
   2b6e0:	add	x10, sp, #0x1, lsl #12
   2b6e4:	str	x9, [sp, #3632]
   2b6e8:	cset	w9, eq  // eq = none
   2b6ec:	add	x10, x10, #0xb8
   2b6f0:	str	x9, [sp, #56]
   2b6f4:	add	x9, x12, #0x20
   2b6f8:	add	x8, x0, x20, lsl #3
   2b6fc:	mov	w28, #0x18                  	// #24
   2b700:	add	x13, sp, #0xeb8
   2b704:	str	x9, [sp, #48]
   2b708:	sub	x9, x10, #0x8
   2b70c:	mov	w19, wzr
   2b710:	mov	w11, #0x1                   	// #1
   2b714:	mov	w14, #0x40                  	// #64
   2b718:	mov	w15, #0x2                   	// #2
   2b71c:	str	x8, [sp, #3664]
   2b720:	madd	x8, x20, x28, x0
   2b724:	str	x9, [sp, #184]
   2b728:	sub	x9, x13, #0x8
   2b72c:	mov	w22, #0x40                  	// #64
   2b730:	str	x0, [sp, #336]
   2b734:	str	x23, [sp, #3672]
   2b738:	str	x0, [sp, #3696]
   2b73c:	str	x23, [sp, #3640]
   2b740:	str	x23, [sp, #3608]
   2b744:	str	x23, [sp, #3704]
   2b748:	str	w11, [sp, #3680]
   2b74c:	str	w11, [sp, #3648]
   2b750:	str	w11, [sp, #3616]
   2b754:	str	w11, [sp, #3712]
   2b758:	str	x9, [sp, #208]
   2b75c:	str	x8, [sp, #3728]
   2b760:	str	w24, [sp, #148]
   2b764:	ldr	x8, [sp, #3752]
   2b768:	str	x21, [sp, #152]
   2b76c:	str	x22, [sp, #32]
   2b770:	sub	x9, x15, x8
   2b774:	cmp	x8, #0x0
   2b778:	csinc	x8, x9, xzr, lt  // lt = tstop
   2b77c:	add	x20, x8, x21
   2b780:	cmn	x20, #0x2
   2b784:	b.eq	2b81c <mpfr_atan@@Base+0x2c8>  // b.none
   2b788:	b.le	2b848 <mpfr_atan@@Base+0x2f4>
   2b78c:	add	x8, x20, #0x2
   2b790:	clz	x8, x8
   2b794:	sub	w8, w14, w8
   2b798:	str	x8, [sp, #168]
   2b79c:	add	w8, w8, w8, lsl #1
   2b7a0:	cmp	w8, #0x3
   2b7a4:	add	x21, x20, #0x1
   2b7a8:	str	w8, [sp, #196]
   2b7ac:	b.eq	2b868 <mpfr_atan@@Base+0x314>  // b.none
   2b7b0:	b.le	2b828 <mpfr_atan@@Base+0x2d4>
   2b7b4:	ldr	w8, [sp, #196]
   2b7b8:	sub	w8, w8, #0x3
   2b7bc:	sxtw	x8, w8
   2b7c0:	clz	x8, x8
   2b7c4:	sub	x22, x14, x8
   2b7c8:	ldr	x8, [x26]
   2b7cc:	add	x23, x22, x21
   2b7d0:	cmp	x8, #0x65
   2b7d4:	b.lt	2b880 <mpfr_atan@@Base+0x32c>  // b.tstop
   2b7d8:	cmp	x23, #0x1
   2b7dc:	b.eq	2c584 <mpfr_atan@@Base+0x1030>  // b.none
   2b7e0:	b.le	2c58c <mpfr_atan@@Base+0x1038>
   2b7e4:	add	x8, x22, x20
   2b7e8:	clz	x8, x8
   2b7ec:	sub	w8, w14, w8
   2b7f0:	cmp	w8, #0x0
   2b7f4:	cinc	w8, w8, lt  // lt = tstop
   2b7f8:	asr	w8, w8, #1
   2b7fc:	sub	w8, w8, #0x3
   2b800:	sxtw	x20, w8
   2b804:	sbfiz	x8, x8, #1, #32
   2b808:	mov	x22, #0xfffffffffffffeff    	// #-257
   2b80c:	add	x8, x8, #0x9
   2b810:	movk	x22, #0x7fff, lsl #48
   2b814:	add	x23, x8, x23
   2b818:	b	2b890 <mpfr_atan@@Base+0x33c>
   2b81c:	str	xzr, [sp, #168]
   2b820:	str	wzr, [sp, #196]
   2b824:	mov	x21, #0xffffffffffffffff    	// #-1
   2b828:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2b82c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2b830:	mov	w1, #0x178                 	// #376
   2b834:	add	x0, x0, #0xd8
   2b838:	add	x2, x2, #0x115
   2b83c:	bl	cb20 <mpfr_assert_fail@plt>
   2b840:	mov	w14, #0x40                  	// #64
   2b844:	b	2b7b4 <mpfr_atan@@Base+0x260>
   2b848:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2b84c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2b850:	mov	w1, #0x176                 	// #374
   2b854:	add	x0, x0, #0xd8
   2b858:	add	x2, x2, #0xfa
   2b85c:	bl	cb20 <mpfr_assert_fail@plt>
   2b860:	mov	w14, #0x40                  	// #64
   2b864:	b	2b78c <mpfr_atan@@Base+0x238>
   2b868:	mov	x22, xzr
   2b86c:	str	w8, [sp, #196]
   2b870:	ldr	x8, [x26]
   2b874:	add	x23, x22, x21
   2b878:	cmp	x8, #0x65
   2b87c:	b.ge	2b7d8 <mpfr_atan@@Base+0x284>  // b.tcont
   2b880:	mov	x22, #0xfffffffffffffeff    	// #-257
   2b884:	mov	x20, xzr
   2b888:	mov	x8, xzr
   2b88c:	movk	x22, #0x7fff, lsl #48
   2b890:	cmp	x23, x22
   2b894:	b.gt	2c9b8 <mpfr_atan@@Base+0x1464>
   2b898:	str	x8, [sp, #104]
   2b89c:	sub	x8, x23, #0x1
   2b8a0:	add	x9, x23, #0x3e
   2b8a4:	cmp	x8, #0x0
   2b8a8:	ldr	x1, [sp, #328]
   2b8ac:	csel	x8, x9, x8, lt  // lt = tstop
   2b8b0:	asr	x8, x8, #6
   2b8b4:	add	x21, x8, #0x1
   2b8b8:	lsl	x2, x21, #5
   2b8bc:	str	x2, [sp, #328]
   2b8c0:	cbz	x1, 2b8d0 <mpfr_atan@@Base+0x37c>
   2b8c4:	ldr	x0, [sp, #336]
   2b8c8:	bl	c200 <mpfr_reallocate_func@plt>
   2b8cc:	b	2b8d8 <mpfr_atan@@Base+0x384>
   2b8d0:	mov	x0, x2
   2b8d4:	bl	ccd0 <mpfr_allocate_func@plt>
   2b8d8:	add	x8, x0, x21, lsl #3
   2b8dc:	str	x8, [sp, #3664]
   2b8e0:	ldr	w8, [sp, #196]
   2b8e4:	add	x9, x0, x21, lsl #4
   2b8e8:	madd	x10, x21, x28, x0
   2b8ec:	mov	w11, #0x1                   	// #1
   2b8f0:	add	w8, w8, #0x3
   2b8f4:	cmp	w19, w8
   2b8f8:	mov	w28, #0x1                   	// #1
   2b8fc:	str	x0, [sp, #336]
   2b900:	str	x0, [sp, #3696]
   2b904:	str	x23, [sp, #3672]
   2b908:	str	w11, [sp, #3680]
   2b90c:	str	x23, [sp, #3640]
   2b910:	str	w11, [sp, #3648]
   2b914:	str	x23, [sp, #3608]
   2b918:	str	w11, [sp, #3616]
   2b91c:	str	x23, [sp, #3704]
   2b920:	str	x9, [sp, #3632]
   2b924:	str	x10, [sp, #3728]
   2b928:	str	x8, [sp, #160]
   2b92c:	str	w11, [sp, #3712]
   2b930:	b.cs	2b960 <mpfr_atan@@Base+0x40c>  // b.hs, b.nlast
   2b934:	add	x9, sp, #0x1d8
   2b938:	add	x24, x9, w19, uxtw #4
   2b93c:	ldr	x9, [sp, #160]
   2b940:	mov	w8, w19
   2b944:	sub	x19, x9, x8
   2b948:	mov	x0, x24
   2b94c:	mov	x1, x23
   2b950:	bl	c900 <mpfr_mpz_init2@plt>
   2b954:	subs	x19, x19, #0x1
   2b958:	add	x24, x24, #0x10
   2b95c:	b.ne	2b948 <mpfr_atan@@Base+0x3f4>  // b.any
   2b960:	ldr	w24, [sp, #148]
   2b964:	ldr	x21, [sp, #152]
   2b968:	cmp	w24, #0x1
   2b96c:	b.lt	2ba38 <mpfr_atan@@Base+0x4e4>  // b.tstop
   2b970:	add	x0, sp, #0xe58
   2b974:	add	x2, sp, #0xe98
   2b978:	mov	w1, #0x1                   	// #1
   2b97c:	mov	w3, wzr
   2b980:	bl	c2f0 <mpfr_ui_div@plt>
   2b984:	ldr	x8, [sp, #3688]
   2b988:	neg	x19, x20
   2b98c:	cmp	x8, x19
   2b990:	b.le	2ba5c <mpfr_atan@@Base+0x508>
   2b994:	cmp	w24, #0x0
   2b998:	b.le	2ba68 <mpfr_atan@@Base+0x514>
   2b99c:	mov	x23, xzr
   2b9a0:	b	2b9c0 <mpfr_atan@@Base+0x46c>
   2b9a4:	add	x2, sp, #0xe98
   2b9a8:	mov	w3, wzr
   2b9ac:	bl	bda0 <mpfr_mul@plt>
   2b9b0:	ldr	x8, [sp, #3688]
   2b9b4:	add	x23, x23, #0x1
   2b9b8:	cmp	x8, x19
   2b9bc:	b.le	2badc <mpfr_atan@@Base+0x588>
   2b9c0:	add	x0, sp, #0xe38
   2b9c4:	add	x1, sp, #0xe58
   2b9c8:	mov	w2, wzr
   2b9cc:	mov	x20, x8
   2b9d0:	bl	c3f0 <mpfr_sqr@plt>
   2b9d4:	add	x0, sp, #0xe38
   2b9d8:	add	x1, sp, #0xe38
   2b9dc:	mov	w2, #0x1                   	// #1
   2b9e0:	mov	w3, wzr
   2b9e4:	bl	c270 <mpfr_add_ui@plt>
   2b9e8:	add	x0, sp, #0xe38
   2b9ec:	add	x1, sp, #0xe38
   2b9f0:	mov	w2, wzr
   2b9f4:	bl	c920 <mpfr_sqrt@plt>
   2b9f8:	add	x0, sp, #0xe38
   2b9fc:	add	x1, sp, #0xe38
   2ba00:	mov	w2, #0x1                   	// #1
   2ba04:	mov	w3, wzr
   2ba08:	bl	c520 <mpfr_sub_ui@plt>
   2ba0c:	add	x0, sp, #0xe58
   2ba10:	add	x1, sp, #0xe38
   2ba14:	cbz	x23, 2b9a4 <mpfr_atan@@Base+0x450>
   2ba18:	add	x2, sp, #0xe58
   2ba1c:	mov	w3, wzr
   2ba20:	bl	c610 <mpfr_div@plt>
   2ba24:	ldr	x8, [sp, #3688]
   2ba28:	add	x23, x23, #0x1
   2ba2c:	cmp	x8, x19
   2ba30:	b.gt	2b9c0 <mpfr_atan@@Base+0x46c>
   2ba34:	b	2badc <mpfr_atan@@Base+0x588>
   2ba38:	ldr	w3, [sp, #3744]
   2ba3c:	add	x0, sp, #0xe58
   2ba40:	add	x1, sp, #0xe98
   2ba44:	mov	w2, wzr
   2ba48:	bl	c690 <mpfr_set4@plt>
   2ba4c:	ldr	x8, [sp, #3688]
   2ba50:	neg	x19, x20
   2ba54:	cmp	x8, x19
   2ba58:	b.gt	2b994 <mpfr_atan@@Base+0x440>
   2ba5c:	mov	x9, xzr
   2ba60:	str	xzr, [sp, #112]
   2ba64:	b	2bae8 <mpfr_atan@@Base+0x594>
   2ba68:	mov	x23, xzr
   2ba6c:	add	x0, sp, #0xe38
   2ba70:	add	x1, sp, #0xe58
   2ba74:	mov	w2, wzr
   2ba78:	mov	x20, x8
   2ba7c:	bl	c3f0 <mpfr_sqr@plt>
   2ba80:	add	x0, sp, #0xe38
   2ba84:	add	x1, sp, #0xe38
   2ba88:	mov	w2, #0x1                   	// #1
   2ba8c:	mov	w3, wzr
   2ba90:	bl	c270 <mpfr_add_ui@plt>
   2ba94:	add	x0, sp, #0xe38
   2ba98:	add	x1, sp, #0xe38
   2ba9c:	mov	w2, wzr
   2baa0:	bl	c920 <mpfr_sqrt@plt>
   2baa4:	add	x0, sp, #0xe38
   2baa8:	add	x1, sp, #0xe38
   2baac:	mov	w2, #0x1                   	// #1
   2bab0:	mov	w3, wzr
   2bab4:	bl	c520 <mpfr_sub_ui@plt>
   2bab8:	add	x0, sp, #0xe58
   2babc:	add	x1, sp, #0xe38
   2bac0:	add	x2, sp, #0xe58
   2bac4:	mov	w3, wzr
   2bac8:	bl	c610 <mpfr_div@plt>
   2bacc:	ldr	x8, [sp, #3688]
   2bad0:	add	x23, x23, #0x1
   2bad4:	cmp	x8, x19
   2bad8:	b.gt	2ba6c <mpfr_atan@@Base+0x518>
   2badc:	mov	w9, #0x9                   	// #9
   2bae0:	sub	x9, x9, x20, lsl #1
   2bae4:	str	x23, [sp, #112]
   2bae8:	ldr	x19, [sp, #168]
   2baec:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   2baf0:	str	x9, [sp, #96]
   2baf4:	str	x20, [sp, #3720]
   2baf8:	cmp	w19, #0x1
   2bafc:	b.lt	2c480 <mpfr_atan@@Base+0xf2c>  // b.tstop
   2bb00:	cmp	x8, x20
   2bb04:	b.eq	2c480 <mpfr_atan@@Base+0xf2c>  // b.none
   2bb08:	ldr	x8, [sp, #48]
   2bb0c:	lsl	x10, x19, #4
   2bb10:	lsl	x11, x19, #5
   2bb14:	mov	x9, xzr
   2bb18:	add	x8, x8, x10
   2bb1c:	stp	x8, x19, [sp, #120]
   2bb20:	add	x8, sp, #0x1d8
   2bb24:	add	x8, x8, x11
   2bb28:	mov	w23, #0x1                   	// #1
   2bb2c:	str	x10, [sp, #200]
   2bb30:	str	x8, [sp, #264]
   2bb34:	add	x0, sp, #0xe38
   2bb38:	add	x1, sp, #0xe58
   2bb3c:	mov	x2, x23
   2bb40:	mov	w3, wzr
   2bb44:	str	x11, [sp, #232]
   2bb48:	str	x9, [sp, #136]
   2bb4c:	bl	c2c0 <mpfr_mul_2ui@plt>
   2bb50:	add	x0, sp, #0xe38
   2bb54:	add	x1, sp, #0xe38
   2bb58:	mov	w2, #0x1                   	// #1
   2bb5c:	bl	c300 <mpfr_rint@plt>
   2bb60:	ldr	x8, [sp, #3656]
   2bb64:	lsl	x12, x23, #1
   2bb68:	cmp	x8, x20
   2bb6c:	b.eq	2c400 <mpfr_atan@@Base+0xeac>  // b.none
   2bb70:	add	x0, sp, #0xe08
   2bb74:	add	x1, sp, #0xe38
   2bb78:	str	x12, [sp, #40]
   2bb7c:	bl	caa0 <mpfr_get_z_2exp@plt>
   2bb80:	neg	x2, x0
   2bb84:	add	x0, sp, #0xe08
   2bb88:	add	x1, sp, #0xe08
   2bb8c:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   2bb90:	add	x0, sp, #0xe38
   2bb94:	add	x1, sp, #0xe08
   2bb98:	mov	w2, wzr
   2bb9c:	bl	c250 <mpfr_set_z@plt>
   2bba0:	add	x0, sp, #0xe38
   2bba4:	add	x1, sp, #0xe38
   2bba8:	mov	x2, x23
   2bbac:	mov	w3, wzr
   2bbb0:	bl	c8f0 <mpfr_div_2ui@plt>
   2bbb4:	ldr	x8, [sp, #3608]
   2bbb8:	cmp	x8, #0xc0
   2bbbc:	str	x8, [sp, #256]
   2bbc0:	b.gt	2bc24 <mpfr_atan@@Base+0x6d0>
   2bbc4:	sub	x8, x23, #0x1
   2bbc8:	cmp	x8, #0x7
   2bbcc:	b.hi	2bc24 <mpfr_atan@@Base+0x6d0>  // b.pmore
   2bbd0:	adrp	x11, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2bbd4:	add	x11, x11, #0xee8
   2bbd8:	adr	x9, 2bbf0 <mpfr_atan@@Base+0x69c>
   2bbdc:	ldrh	w10, [x11, x8, lsl #1]
   2bbe0:	add	x9, x9, x10, lsl #2
   2bbe4:	ldr	x8, [sp, #256]
   2bbe8:	neg	x19, x8
   2bbec:	br	x9
   2bbf0:	ldr	x9, [sp, #256]
   2bbf4:	ldr	x23, [sp, #3632]
   2bbf8:	sub	x8, x9, #0x1
   2bbfc:	add	x9, x9, #0x3e
   2bc00:	cmp	x8, #0x0
   2bc04:	csel	x8, x9, x8, lt  // lt = tstop
   2bc08:	asr	x8, x8, #6
   2bc0c:	adrp	x9, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2bc10:	add	x2, x8, #0x1
   2bc14:	mvn	x8, x8
   2bc18:	add	x9, x9, #0xef8
   2bc1c:	add	x8, x9, x8, lsl #3
   2bc20:	b	2c358 <mpfr_atan@@Base+0xe04>
   2bc24:	ldr	x8, [sp, #168]
   2bc28:	ldr	x9, [sp, #136]
   2bc2c:	add	x0, sp, #0xe08
   2bc30:	add	x1, sp, #0xe08
   2bc34:	add	x2, sp, #0xe08
   2bc38:	sub	x19, x8, x9
   2bc3c:	add	x21, x19, #0x1
   2bc40:	bl	c030 <__gmpz_mul@plt>
   2bc44:	add	x0, sp, #0xe08
   2bc48:	mov	x1, xzr
   2bc4c:	bl	baf0 <__gmpz_scan1@plt>
   2bc50:	cbz	x0, 2bc74 <mpfr_atan@@Base+0x720>
   2bc54:	mov	x23, x0
   2bc58:	add	x0, sp, #0xe08
   2bc5c:	add	x1, sp, #0xe08
   2bc60:	mov	x2, x23
   2bc64:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   2bc68:	ldr	x8, [sp, #40]
   2bc6c:	sub	x24, x8, x23
   2bc70:	b	2bc78 <mpfr_atan@@Base+0x724>
   2bc74:	ldr	x24, [sp, #40]
   2bc78:	add	x8, sp, #0x1d8
   2bc7c:	add	x0, sp, #0xe08
   2bc80:	mov	w1, #0x1                   	// #1
   2bc84:	add	x20, x8, x21, lsl #4
   2bc88:	add	x23, x8, x21, lsl #5
   2bc8c:	str	xzr, [sp, #4280]
   2bc90:	bl	cb00 <__gmpz_cmp_ui@plt>
   2bc94:	str	x24, [sp, #280]
   2bc98:	str	x23, [sp, #248]
   2bc9c:	str	w25, [sp, #4]
   2bca0:	stp	x27, x26, [sp, #16]
   2bca4:	str	x21, [sp, #8]
   2bca8:	str	x20, [sp, #176]
   2bcac:	cbz	w0, 2c074 <mpfr_atan@@Base+0xb20>
   2bcb0:	add	x1, sp, #0xe08
   2bcb4:	mov	x0, x20
   2bcb8:	bl	bff0 <__gmpz_set@plt>
   2bcbc:	cmp	x19, #0x1
   2bcc0:	b.lt	2bce4 <mpfr_atan@@Base+0x790>  // b.tstop
   2bcc4:	ldp	x27, x20, [sp, #120]
   2bcc8:	sub	x1, x27, #0x10
   2bccc:	mov	x0, x27
   2bcd0:	mov	x2, x1
   2bcd4:	bl	c030 <__gmpz_mul@plt>
   2bcd8:	subs	x20, x20, #0x1
   2bcdc:	add	x27, x27, #0x10
   2bce0:	b.ne	2bcc8 <mpfr_atan@@Base+0x774>  // b.any
   2bce4:	mov	x28, xzr
   2bce8:	mov	w25, wzr
   2bcec:	and	x8, x19, #0xffffffff
   2bcf0:	str	x8, [sp, #224]
   2bcf4:	b	2bd1c <mpfr_atan@@Base+0x7c8>
   2bcf8:	ldr	x8, [sp, #216]
   2bcfc:	ldr	x24, [sp, #280]
   2bd00:	ldp	x28, x23, [sp, #240]
   2bd04:	sub	w8, w8, w11
   2bd08:	add	w25, w8, #0x1
   2bd0c:	ldr	x8, [sp, #224]
   2bd10:	lsr	x8, x28, x8
   2bd14:	cbnz	x8, 2bf20 <mpfr_atan@@Base+0x9cc>
   2bd18:	cbnz	w10, 2bf20 <mpfr_atan@@Base+0x9cc>
   2bd1c:	sxtw	x20, w25
   2bd20:	add	x9, x20, #0x1
   2bd24:	lsl	x19, x9, #4
   2bd28:	lsl	x8, x28, #1
   2bd2c:	add	x27, x23, x19
   2bd30:	orr	x1, x8, #0x3
   2bd34:	mov	x0, x27
   2bd38:	str	x9, [sp, #320]
   2bd3c:	bl	bd00 <__gmpz_set_ui@plt>
   2bd40:	add	x22, sp, #0x1d8
   2bd44:	mov	x26, x28
   2bd48:	add	x28, x22, x19
   2bd4c:	mov	w19, #0x1                   	// #1
   2bd50:	bfi	x19, x26, #1, #63
   2bd54:	add	x1, sp, #0xe08
   2bd58:	mov	x0, x28
   2bd5c:	mov	x2, x19
   2bd60:	bl	c140 <__gmpz_mul_ui@plt>
   2bd64:	sbfiz	x21, x25, #4, #32
   2bd68:	add	x22, x22, x21
   2bd6c:	mov	x0, x22
   2bd70:	mov	x1, x27
   2bd74:	mov	x2, x24
   2bd78:	bl	c230 <__gmpz_mul_2exp@plt>
   2bd7c:	mov	x0, x22
   2bd80:	mov	x1, x22
   2bd84:	mov	x2, x28
   2bd88:	mov	x28, x26
   2bd8c:	bl	be30 <__gmpz_sub@plt>
   2bd90:	add	x0, x23, x21
   2bd94:	mov	x1, x27
   2bd98:	mov	x2, x19
   2bd9c:	bl	c140 <__gmpz_mul_ui@plt>
   2bda0:	add	x28, x26, #0x2
   2bda4:	add	x8, sp, #0xeb8
   2bda8:	mov	w9, #0x1                   	// #1
   2bdac:	str	x9, [x8, w25, sxtw #3]
   2bdb0:	tbnz	w28, #1, 2bf08 <mpfr_atan@@Base+0x9b4>
   2bdb4:	ldr	x9, [sp, #184]
   2bdb8:	sub	x8, x20, #0x1
   2bdbc:	str	x8, [sp, #272]
   2bdc0:	lsl	x8, x20, #3
   2bdc4:	add	x13, x9, x8
   2bdc8:	ldp	x25, x9, [sp, #200]
   2bdcc:	mov	x11, xzr
   2bdd0:	mov	w10, wzr
   2bdd4:	ubfx	x12, x28, #1, #31
   2bdd8:	lsl	x21, x20, #4
   2bddc:	add	x26, x9, x8
   2bde0:	str	x28, [sp, #240]
   2bde4:	str	x20, [sp, #216]
   2bde8:	b	2be1c <mpfr_atan@@Base+0x8c8>
   2bdec:	ldr	x9, [sp, #256]
   2bdf0:	ldr	w10, [sp, #320]
   2bdf4:	str	x8, [x13], #-8
   2bdf8:	sub	x21, x21, #0x10
   2bdfc:	cmp	x8, x9
   2be00:	ldp	x9, x11, [sp, #304]
   2be04:	sub	x26, x26, #0x8
   2be08:	csinc	w10, w10, wzr, le
   2be0c:	add	x25, x25, #0x10
   2be10:	lsr	x12, x9, #1
   2be14:	mov	w8, w9
   2be18:	tbnz	w9, #1, 2bcf8 <mpfr_atan@@Base+0x7a4>
   2be1c:	ldr	x8, [sp, #264]
   2be20:	add	x20, sp, #0x1d8
   2be24:	add	x19, x20, x21
   2be28:	mov	x0, x19
   2be2c:	add	x28, x8, x21
   2be30:	add	x22, x28, #0x10
   2be34:	mov	x1, x19
   2be38:	mov	x2, x22
   2be3c:	stp	x13, x12, [sp, #296]
   2be40:	str	w10, [sp, #320]
   2be44:	str	x11, [sp, #288]
   2be48:	add	x23, x11, #0x1
   2be4c:	bl	c030 <__gmpz_mul@plt>
   2be50:	add	x20, x20, x25
   2be54:	add	x2, x20, #0x20
   2be58:	mov	x0, x19
   2be5c:	mov	x1, x19
   2be60:	bl	c030 <__gmpz_mul@plt>
   2be64:	sub	x27, x19, #0x10
   2be68:	add	x28, x28, #0x20
   2be6c:	mov	x0, x27
   2be70:	mov	x1, x27
   2be74:	mov	x2, x28
   2be78:	bl	c030 <__gmpz_mul@plt>
   2be7c:	ldr	x24, [sp, #280]
   2be80:	mov	x0, x27
   2be84:	mov	x1, x27
   2be88:	str	x23, [sp, #312]
   2be8c:	lsl	x2, x24, x23
   2be90:	bl	c230 <__gmpz_mul_2exp@plt>
   2be94:	mov	x0, x27
   2be98:	mov	x1, x27
   2be9c:	mov	x2, x19
   2bea0:	bl	c9a0 <__gmpz_add@plt>
   2bea4:	mov	x0, x22
   2bea8:	mov	x1, x22
   2beac:	mov	x2, x28
   2beb0:	bl	c030 <__gmpz_mul@plt>
   2beb4:	ldr	w8, [x20, #52]
   2beb8:	ldp	x12, x13, [sp, #288]
   2bebc:	ldr	x10, [x20, #56]
   2bec0:	mov	x11, #0xffffffffffffffff    	// #-1
   2bec4:	cmp	w8, #0x0
   2bec8:	add	x9, x12, #0x2
   2becc:	cneg	w8, w8, mi  // mi = first
   2bed0:	str	x9, [x26]
   2bed4:	add	x10, x10, w8, uxtw #3
   2bed8:	ldur	x10, [x10, #-8]
   2bedc:	lsl	x9, x24, x9
   2bee0:	eor	x8, x11, x8, lsl #6
   2bee4:	clz	x10, x10
   2bee8:	add	x9, x9, x10
   2beec:	ldr	x10, [sp, #272]
   2bef0:	add	x8, x8, x9
   2bef4:	cmp	x10, x12
   2bef8:	b.eq	2bdec <mpfr_atan@@Base+0x898>  // b.none
   2befc:	ldur	x9, [x13, #-8]
   2bf00:	add	x8, x9, x8
   2bf04:	b	2bdec <mpfr_atan@@Base+0x898>
   2bf08:	ldr	x24, [sp, #280]
   2bf0c:	ldr	x25, [sp, #320]
   2bf10:	mov	w10, wzr
   2bf14:	ldr	x8, [sp, #224]
   2bf18:	lsr	x8, x28, x8
   2bf1c:	cbz	x8, 2bd18 <mpfr_atan@@Base+0x7c4>
   2bf20:	cmp	w25, #0x2
   2bf24:	b.lt	2c00c <mpfr_atan@@Base+0xab8>  // b.tstop
   2bf28:	mov	w8, w25
   2bf2c:	add	x21, x8, #0x1
   2bf30:	ldr	x8, [sp, #208]
   2bf34:	add	x9, sp, #0x1d8
   2bf38:	add	x19, x9, w25, uxtw #4
   2bf3c:	ldr	w24, [sp, #148]
   2bf40:	add	x23, x8, w25, uxtw #3
   2bf44:	ldr	w25, [sp, #4]
   2bf48:	ldr	x8, [sp, #232]
   2bf4c:	mov	x20, xzr
   2bf50:	str	x28, [sp, #240]
   2bf54:	b	2bfc8 <mpfr_atan@@Base+0xa74>
   2bf58:	sub	x19, x19, #0x20
   2bf5c:	add	x22, x28, #0x10
   2bf60:	mov	x0, x19
   2bf64:	mov	x1, x19
   2bf68:	mov	x2, x22
   2bf6c:	bl	c030 <__gmpz_mul@plt>
   2bf70:	ldr	x8, [x23], #-8
   2bf74:	mov	w9, #0x1                   	// #1
   2bf78:	mov	x0, x19
   2bf7c:	mov	x1, x19
   2bf80:	lsl	x8, x9, x8
   2bf84:	add	x20, x8, x20
   2bf88:	ldr	x8, [sp, #280]
   2bf8c:	mul	x2, x20, x8
   2bf90:	bl	c230 <__gmpz_mul_2exp@plt>
   2bf94:	mov	x0, x19
   2bf98:	mov	x1, x19
   2bf9c:	mov	x2, x27
   2bfa0:	bl	c9a0 <__gmpz_add@plt>
   2bfa4:	mov	x0, x28
   2bfa8:	mov	x1, x28
   2bfac:	mov	x2, x22
   2bfb0:	bl	c030 <__gmpz_mul@plt>
   2bfb4:	ldr	x8, [sp, #232]
   2bfb8:	sub	x21, x21, #0x1
   2bfbc:	cmp	x21, #0x2
   2bfc0:	mov	x19, x27
   2bfc4:	b.le	2c018 <mpfr_atan@@Base+0xac4>
   2bfc8:	sub	x27, x19, #0x10
   2bfcc:	add	x28, x19, x8
   2bfd0:	mov	x0, x27
   2bfd4:	mov	x1, x27
   2bfd8:	mov	x2, x28
   2bfdc:	bl	c030 <__gmpz_mul@plt>
   2bfe0:	add	x0, sp, #0xe08
   2bfe4:	mov	w1, #0x1                   	// #1
   2bfe8:	bl	cb00 <__gmpz_cmp_ui@plt>
   2bfec:	cbz	w0, 2bf58 <mpfr_atan@@Base+0xa04>
   2bff0:	ldur	x8, [x23, #-8]
   2bff4:	ldr	x9, [sp, #176]
   2bff8:	mov	x0, x27
   2bffc:	mov	x1, x27
   2c000:	add	x2, x9, x8, lsl #4
   2c004:	bl	c030 <__gmpz_mul@plt>
   2c008:	b	2bf58 <mpfr_atan@@Base+0xa04>
   2c00c:	ldr	w25, [sp, #4]
   2c010:	ldr	w24, [sp, #148]
   2c014:	b	2c01c <mpfr_atan@@Base+0xac8>
   2c018:	ldp	x28, x23, [sp, #240]
   2c01c:	ldr	w8, [sp, #476]
   2c020:	ldr	x9, [sp, #480]
   2c024:	ldr	x21, [sp, #152]
   2c028:	mov	x22, #0xfffffffffffffeff    	// #-257
   2c02c:	cmp	w8, #0x0
   2c030:	cneg	w8, w8, mi  // mi = first
   2c034:	add	x9, x9, w8, uxtw #3
   2c038:	ldur	x9, [x9, #-8]
   2c03c:	lsl	x8, x8, #6
   2c040:	movk	x22, #0x7fff, lsl #48
   2c044:	clz	x9, x9
   2c048:	sub	x8, x8, x9
   2c04c:	ldr	x9, [sp, #256]
   2c050:	subs	x19, x8, x9, lsl #1
   2c054:	ldr	x8, [sp, #8]
   2c058:	lsl	x20, x8, #1
   2c05c:	b.mi	2c1e8 <mpfr_atan@@Base+0xc94>  // b.first
   2c060:	add	x0, sp, #0x1d8
   2c064:	add	x1, sp, #0x1d8
   2c068:	mov	x2, x19
   2c06c:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   2c070:	b	2c1f8 <mpfr_atan@@Base+0xca4>
   2c074:	ldr	x9, [sp, #256]
   2c078:	mov	w8, #0x1                   	// #1
   2c07c:	lsl	x8, x8, x19
   2c080:	udiv	x9, x9, x24
   2c084:	cmp	x9, x8
   2c088:	csinc	x20, x8, x9, hi  // hi = pmore
   2c08c:	cbz	x20, 2c45c <mpfr_atan@@Base+0xf08>
   2c090:	mov	x28, xzr
   2c094:	mov	w21, wzr
   2c098:	str	x20, [sp, #312]
   2c09c:	b	2c0ac <mpfr_atan@@Base+0xb58>
   2c0a0:	cmp	x20, x28
   2c0a4:	mov	w21, w25
   2c0a8:	b.ls	2bf20 <mpfr_atan@@Base+0x9cc>  // b.plast
   2c0ac:	sxtw	x26, w21
   2c0b0:	add	x25, x26, #0x1
   2c0b4:	lsl	x8, x28, #1
   2c0b8:	add	x19, x23, x25, lsl #4
   2c0bc:	orr	x1, x8, #0x3
   2c0c0:	mov	x0, x19
   2c0c4:	bl	bd00 <__gmpz_set_ui@plt>
   2c0c8:	sbfiz	x23, x21, #4, #32
   2c0cc:	add	x8, sp, #0x1d8
   2c0d0:	add	x22, x8, x23
   2c0d4:	mov	x0, x22
   2c0d8:	mov	x1, x19
   2c0dc:	mov	x2, x24
   2c0e0:	bl	c230 <__gmpz_mul_2exp@plt>
   2c0e4:	mov	w27, #0x1                   	// #1
   2c0e8:	bfi	x27, x28, #1, #63
   2c0ec:	mov	x0, x22
   2c0f0:	mov	x1, x22
   2c0f4:	mov	x2, x27
   2c0f8:	bl	bc80 <__gmpz_sub_ui@plt>
   2c0fc:	ldr	x8, [sp, #248]
   2c100:	mov	x1, x19
   2c104:	mov	x2, x27
   2c108:	add	x0, x8, x23
   2c10c:	ldr	x23, [sp, #248]
   2c110:	bl	c140 <__gmpz_mul_ui@plt>
   2c114:	add	x28, x28, #0x2
   2c118:	add	x8, sp, #0xeb8
   2c11c:	mov	w9, #0x1                   	// #1
   2c120:	str	x9, [x8, w21, sxtw #3]
   2c124:	tbnz	w28, #1, 2c0a0 <mpfr_atan@@Base+0xb4c>
   2c128:	add	x8, sp, #0x1d8
   2c12c:	add	x27, x8, x26, lsl #4
   2c130:	ldr	x8, [sp, #208]
   2c134:	mov	x20, x24
   2c138:	ldr	x24, [sp, #232]
   2c13c:	mov	x25, xzr
   2c140:	ubfx	x21, x28, #1, #31
   2c144:	add	x23, x8, x26, lsl #3
   2c148:	str	x28, [sp, #240]
   2c14c:	str	x26, [sp, #320]
   2c150:	add	x28, x27, x24
   2c154:	add	x19, x28, #0x10
   2c158:	mov	x0, x27
   2c15c:	mov	x1, x27
   2c160:	mov	x2, x19
   2c164:	add	x26, x25, #0x1
   2c168:	bl	c030 <__gmpz_mul@plt>
   2c16c:	sub	x22, x27, #0x10
   2c170:	add	x28, x28, #0x20
   2c174:	mov	x0, x22
   2c178:	mov	x1, x22
   2c17c:	mov	x2, x28
   2c180:	bl	c030 <__gmpz_mul@plt>
   2c184:	lsl	x2, x20, x26
   2c188:	mov	x0, x22
   2c18c:	mov	x1, x22
   2c190:	bl	c230 <__gmpz_mul_2exp@plt>
   2c194:	mov	x0, x22
   2c198:	mov	x1, x22
   2c19c:	mov	x2, x27
   2c1a0:	bl	c9a0 <__gmpz_add@plt>
   2c1a4:	mov	x0, x19
   2c1a8:	mov	x1, x19
   2c1ac:	mov	x2, x28
   2c1b0:	bl	c030 <__gmpz_mul@plt>
   2c1b4:	add	x8, x25, #0x2
   2c1b8:	mov	w9, w21
   2c1bc:	lsr	x21, x21, #1
   2c1c0:	str	x8, [x23], #-8
   2c1c4:	mov	x25, x26
   2c1c8:	mov	x27, x22
   2c1cc:	tbz	w9, #1, 2c150 <mpfr_atan@@Base+0xbfc>
   2c1d0:	mov	x24, x20
   2c1d4:	ldp	x28, x23, [sp, #240]
   2c1d8:	ldp	x20, x8, [sp, #312]
   2c1dc:	sub	w8, w8, w25
   2c1e0:	add	w25, w8, #0x1
   2c1e4:	b	2c0a0 <mpfr_atan@@Base+0xb4c>
   2c1e8:	neg	x2, x19
   2c1ec:	add	x0, sp, #0x1d8
   2c1f0:	add	x1, sp, #0x1d8
   2c1f4:	bl	c230 <__gmpz_mul_2exp@plt>
   2c1f8:	add	x8, sp, #0x1d8
   2c1fc:	add	x8, x8, x20, lsl #4
   2c200:	ldr	w9, [x8, #4]
   2c204:	ldr	x8, [x8, #8]
   2c208:	mov	x26, x28
   2c20c:	mov	w28, #0x1                   	// #1
   2c210:	cmp	w9, #0x0
   2c214:	cneg	w9, w9, mi  // mi = first
   2c218:	add	x8, x8, w9, uxtw #3
   2c21c:	ldur	x8, [x8, #-8]
   2c220:	lsl	x9, x9, #6
   2c224:	clz	x8, x8
   2c228:	sub	x8, x9, x8
   2c22c:	ldr	x9, [sp, #256]
   2c230:	subs	x27, x8, x9
   2c234:	b.mi	2c24c <mpfr_atan@@Base+0xcf8>  // b.first
   2c238:	mov	x0, x23
   2c23c:	mov	x1, x23
   2c240:	mov	x2, x27
   2c244:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   2c248:	b	2c25c <mpfr_atan@@Base+0xd08>
   2c24c:	neg	x2, x27
   2c250:	mov	x0, x23
   2c254:	mov	x1, x23
   2c258:	bl	c230 <__gmpz_mul_2exp@plt>
   2c25c:	add	x0, sp, #0x1d8
   2c260:	add	x1, sp, #0x1d8
   2c264:	mov	x2, x23
   2c268:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   2c26c:	bl	bb80 <__gmpz_tdiv_q@plt>
   2c270:	add	x0, sp, #0xe18
   2c274:	add	x1, sp, #0x1d8
   2c278:	mov	w2, #0x3                   	// #3
   2c27c:	bl	c250 <mpfr_set_z@plt>
   2c280:	ldr	x10, [sp, #280]
   2c284:	sub	w9, w26, #0x1
   2c288:	sxtw	x9, w9
   2c28c:	ldr	x8, [sp, #3624]
   2c290:	msub	x9, x9, x10, x19
   2c294:	sub	x9, x9, x27
   2c298:	ldp	x27, x26, [sp, #16]
   2c29c:	add	x8, x9, x8
   2c2a0:	b	2c37c <mpfr_atan@@Base+0xe28>
   2c2a4:	ldr	x9, [sp, #256]
   2c2a8:	ldr	x23, [sp, #3632]
   2c2ac:	sub	x8, x9, #0x1
   2c2b0:	add	x9, x9, #0x3e
   2c2b4:	cmp	x8, #0x0
   2c2b8:	csel	x8, x9, x8, lt  // lt = tstop
   2c2bc:	asr	x8, x8, #6
   2c2c0:	adrp	x9, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2c2c4:	add	x2, x8, #0x1
   2c2c8:	mvn	x8, x8
   2c2cc:	add	x9, x9, #0xef8
   2c2d0:	add	x8, x9, x8, lsl #3
   2c2d4:	add	x1, x8, #0x30
   2c2d8:	b	2c35c <mpfr_atan@@Base+0xe08>
   2c2dc:	ldr	x8, [sp, #3600]
   2c2e0:	ldr	w9, [sp, #3596]
   2c2e4:	ldr	x11, [sp, #256]
   2c2e8:	ldr	x23, [sp, #3632]
   2c2ec:	ldr	x8, [x8]
   2c2f0:	cmp	w9, #0x0
   2c2f4:	sub	x10, x11, #0x1
   2c2f8:	add	x11, x11, #0x3e
   2c2fc:	csinc	x8, x28, x8, eq  // eq = none
   2c300:	b	2c330 <mpfr_atan@@Base+0xddc>
   2c304:	ldr	x8, [sp, #3600]
   2c308:	ldr	w9, [sp, #3596]
   2c30c:	ldr	x11, [sp, #256]
   2c310:	ldr	x23, [sp, #3632]
   2c314:	ldr	x8, [x8]
   2c318:	cmp	w9, #0x0
   2c31c:	mov	w9, #0x4                   	// #4
   2c320:	sub	x10, x11, #0x1
   2c324:	add	x8, x8, #0x4
   2c328:	add	x11, x11, #0x3e
   2c32c:	csel	x8, x9, x8, eq  // eq = none
   2c330:	cmp	x10, #0x0
   2c334:	csel	x9, x11, x10, lt  // lt = tstop
   2c338:	adrp	x11, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   2c33c:	mov	w10, #0x18                  	// #24
   2c340:	add	x11, x11, #0xef8
   2c344:	asr	x9, x9, #6
   2c348:	madd	x8, x8, x10, x11
   2c34c:	add	x2, x9, #0x1
   2c350:	mvn	x9, x9
   2c354:	add	x8, x8, x9, lsl #3
   2c358:	add	x1, x8, #0x18
   2c35c:	mov	x0, x23
   2c360:	bl	c510 <__gmpn_copyi@plt>
   2c364:	ldr	x9, [x23]
   2c368:	mov	x10, #0xffffffffffffffff    	// #-1
   2c36c:	lsl	x10, x10, x19
   2c370:	mov	x8, xzr
   2c374:	and	x9, x9, x10
   2c378:	str	x9, [x23]
   2c37c:	add	x0, sp, #0xe18
   2c380:	add	x1, sp, #0xe18
   2c384:	add	x2, sp, #0xe38
   2c388:	mov	w3, wzr
   2c38c:	str	x8, [sp, #3624]
   2c390:	bl	bda0 <mpfr_mul@plt>
   2c394:	add	x0, sp, #0xe78
   2c398:	add	x1, sp, #0xe78
   2c39c:	add	x2, sp, #0xe18
   2c3a0:	mov	w3, wzr
   2c3a4:	bl	c1e0 <mpfr_add@plt>
   2c3a8:	add	x0, sp, #0xe18
   2c3ac:	add	x1, sp, #0xe58
   2c3b0:	add	x2, sp, #0xe38
   2c3b4:	mov	w3, wzr
   2c3b8:	bl	bbc0 <mpfr_sub@plt>
   2c3bc:	add	x0, sp, #0xe58
   2c3c0:	add	x1, sp, #0xe58
   2c3c4:	add	x2, sp, #0xe38
   2c3c8:	mov	w3, wzr
   2c3cc:	bl	bda0 <mpfr_mul@plt>
   2c3d0:	add	x0, sp, #0xe58
   2c3d4:	add	x1, sp, #0xe58
   2c3d8:	mov	w2, #0x1                   	// #1
   2c3dc:	mov	w3, wzr
   2c3e0:	bl	c270 <mpfr_add_ui@plt>
   2c3e4:	add	x0, sp, #0xe58
   2c3e8:	add	x1, sp, #0xe18
   2c3ec:	add	x2, sp, #0xe58
   2c3f0:	mov	w3, wzr
   2c3f4:	bl	c610 <mpfr_div@plt>
   2c3f8:	ldr	x19, [sp, #168]
   2c3fc:	ldr	x12, [sp, #40]
   2c400:	ldr	x9, [sp, #136]
   2c404:	ldr	x11, [sp, #232]
   2c408:	add	x9, x9, #0x1
   2c40c:	cmp	x9, x19
   2c410:	b.cs	2c480 <mpfr_atan@@Base+0xf2c>  // b.hs, b.nlast
   2c414:	ldr	x10, [sp, #128]
   2c418:	ldr	x8, [sp, #3688]
   2c41c:	sub	x11, x11, #0x20
   2c420:	mov	x23, x12
   2c424:	sub	x10, x10, #0x1
   2c428:	str	x10, [sp, #128]
   2c42c:	ldr	x10, [sp, #120]
   2c430:	cmp	x8, x20
   2c434:	sub	x10, x10, #0x10
   2c438:	str	x10, [sp, #120]
   2c43c:	ldr	x10, [sp, #264]
   2c440:	sub	x10, x10, #0x20
   2c444:	str	x10, [sp, #264]
   2c448:	ldr	x10, [sp, #200]
   2c44c:	sub	x10, x10, #0x10
   2c450:	str	x10, [sp, #200]
   2c454:	b.ne	2bb34 <mpfr_atan@@Base+0x5e0>  // b.any
   2c458:	b	2c480 <mpfr_atan@@Base+0xf2c>
   2c45c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c460:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c464:	mov	w1, #0xda                  	// #218
   2c468:	add	x0, x0, #0xd8
   2c46c:	add	x2, x2, #0x16c
   2c470:	bl	cb20 <mpfr_assert_fail@plt>
   2c474:	ldr	w24, [sp, #148]
   2c478:	mov	x28, xzr
   2c47c:	b	2c01c <mpfr_atan@@Base+0xac8>
   2c480:	add	x0, sp, #0xe78
   2c484:	add	x1, sp, #0xe78
   2c488:	add	x2, sp, #0xe58
   2c48c:	mov	w3, wzr
   2c490:	bl	c1e0 <mpfr_add@plt>
   2c494:	ldr	x2, [sp, #112]
   2c498:	add	x0, sp, #0xe78
   2c49c:	add	x1, sp, #0xe78
   2c4a0:	mov	w3, wzr
   2c4a4:	bl	c2c0 <mpfr_mul_2ui@plt>
   2c4a8:	cmp	w24, #0x1
   2c4ac:	b.lt	2c4f8 <mpfr_atan@@Base+0xfa4>  // b.tstop
   2c4b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c4b4:	ldr	x1, [x0, #2688]
   2c4b8:	add	x0, x0, #0xa80
   2c4bc:	blr	x1
   2c4c0:	add	x1, x27, x0
   2c4c4:	add	x0, sp, #0xe38
   2c4c8:	mov	w2, wzr
   2c4cc:	bl	c380 <mpfr_cache@plt>
   2c4d0:	add	x0, sp, #0xe38
   2c4d4:	add	x1, sp, #0xe38
   2c4d8:	mov	w2, #0x1                   	// #1
   2c4dc:	mov	w3, wzr
   2c4e0:	bl	c8f0 <mpfr_div_2ui@plt>
   2c4e4:	add	x0, sp, #0xe78
   2c4e8:	add	x1, sp, #0xe38
   2c4ec:	add	x2, sp, #0xe78
   2c4f0:	mov	w3, wzr
   2c4f4:	bl	bbc0 <mpfr_sub@plt>
   2c4f8:	ldr	x8, [sp, #3720]
   2c4fc:	ldr	x20, [sp, #160]
   2c500:	add	x9, x22, #0x105
   2c504:	str	w28, [sp, #3712]
   2c508:	cmp	x8, x9
   2c50c:	b.lt	2c550 <mpfr_atan@@Base+0xffc>  // b.tstop
   2c510:	ldp	x11, x9, [sp, #96]
   2c514:	ldr	x8, [sp, #3704]
   2c518:	ldr	x10, [x26]
   2c51c:	ldr	x0, [sp, #3728]
   2c520:	add	x9, x9, x21
   2c524:	sub	x2, x9, x11
   2c528:	sub	x9, x8, #0x1
   2c52c:	add	x8, x8, #0x3e
   2c530:	cmp	x9, #0x0
   2c534:	csel	x8, x8, x9, lt  // lt = tstop
   2c538:	asr	x8, x8, #6
   2c53c:	add	x1, x8, #0x1
   2c540:	ldr	x8, [sp, #56]
   2c544:	add	x3, x10, x8
   2c548:	bl	c370 <mpfr_round_p@plt>
   2c54c:	cbnz	w0, 2c5c8 <mpfr_atan@@Base+0x1074>
   2c550:	ldr	x19, [sp, #32]
   2c554:	sub	x8, x22, x21
   2c558:	cmp	x19, x8
   2c55c:	b.gt	2c5ac <mpfr_atan@@Base+0x1058>
   2c560:	add	x21, x21, x19
   2c564:	cmp	x21, #0x0
   2c568:	cinc	x8, x21, lt  // lt = tstop
   2c56c:	asr	x22, x8, #1
   2c570:	mov	w19, w20
   2c574:	mov	w28, #0x18                  	// #24
   2c578:	mov	w14, #0x40                  	// #64
   2c57c:	mov	w15, #0x2                   	// #2
   2c580:	b	2b764 <mpfr_atan@@Base+0x210>
   2c584:	mov	w8, wzr
   2c588:	b	2b7f0 <mpfr_atan@@Base+0x29c>
   2c58c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c590:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   2c594:	mov	w1, #0x17f                 	// #383
   2c598:	add	x0, x0, #0xd8
   2c59c:	add	x2, x2, #0x60d
   2c5a0:	bl	cb20 <mpfr_assert_fail@plt>
   2c5a4:	mov	w14, #0x40                  	// #64
   2c5a8:	b	2b7e4 <mpfr_atan@@Base+0x290>
   2c5ac:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c5b0:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c5b4:	mov	w1, #0x1f6                 	// #502
   2c5b8:	add	x0, x0, #0xd8
   2c5bc:	add	x2, x2, #0x122
   2c5c0:	bl	cb20 <mpfr_assert_fail@plt>
   2c5c4:	b	2c560 <mpfr_atan@@Base+0x100c>
   2c5c8:	ldr	x8, [sp, #64]
   2c5cc:	add	x1, sp, #0xe78
   2c5d0:	mov	x0, x26
   2c5d4:	mov	w2, w25
   2c5d8:	ldr	w3, [x8, #8]
   2c5dc:	bl	c690 <mpfr_set4@plt>
   2c5e0:	ldr	w8, [sp, #196]
   2c5e4:	mov	w22, w0
   2c5e8:	cmn	w8, #0x2
   2c5ec:	b.lt	2c608 <mpfr_atan@@Base+0x10b4>  // b.tstop
   2c5f0:	add	x21, sp, #0x1d8
   2c5f4:	mov	x0, x21
   2c5f8:	bl	c1b0 <mpfr_mpz_clear@plt>
   2c5fc:	subs	x20, x20, #0x1
   2c600:	add	x21, x21, #0x10
   2c604:	b.ne	2c5f4 <mpfr_atan@@Base+0x10a0>  // b.any
   2c608:	add	x0, sp, #0xe08
   2c60c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2c610:	ldr	x1, [sp, #328]
   2c614:	cbz	x1, 2c620 <mpfr_atan@@Base+0x10cc>
   2c618:	ldr	x0, [sp, #336]
   2c61c:	bl	cc00 <mpfr_free_func@plt>
   2c620:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c624:	ldr	x1, [x0, #2640]
   2c628:	add	x0, x0, #0xa50
   2c62c:	blr	x1
   2c630:	ldr	w9, [sp, #92]
   2c634:	str	w9, [x27, x0]
   2c638:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c63c:	ldr	x1, [x0, #2576]
   2c640:	add	x0, x0, #0xa10
   2c644:	blr	x1
   2c648:	ldr	x10, [sp, #80]
   2c64c:	str	x10, [x27, x0]
   2c650:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c654:	ldr	x1, [x0, #2608]
   2c658:	add	x0, x0, #0xa30
   2c65c:	blr	x1
   2c660:	ldr	x11, [sp, #72]
   2c664:	str	x11, [x27, x0]
   2c668:	ldr	x8, [x26, #16]
   2c66c:	cmp	x8, x11
   2c670:	b.gt	2c9a0 <mpfr_atan@@Base+0x144c>
   2c674:	cmp	x8, x10
   2c678:	b.lt	2c9a0 <mpfr_atan@@Base+0x144c>  // b.tstop
   2c67c:	cbz	w22, 2c698 <mpfr_atan@@Base+0x1144>
   2c680:	orr	w8, w9, #0x8
   2c684:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c688:	ldr	x1, [x0, #2640]
   2c68c:	add	x0, x0, #0xa50
   2c690:	blr	x1
   2c694:	str	w8, [x27, x0]
   2c698:	mov	w0, w22
   2c69c:	add	sp, sp, #0x1, lsl #12
   2c6a0:	add	sp, sp, #0x2c0
   2c6a4:	ldp	x20, x19, [sp, #80]
   2c6a8:	ldp	x22, x21, [sp, #64]
   2c6ac:	ldp	x24, x23, [sp, #48]
   2c6b0:	ldp	x26, x25, [sp, #32]
   2c6b4:	ldp	x28, x27, [sp, #16]
   2c6b8:	ldp	x29, x30, [sp], #96
   2c6bc:	ret
   2c6c0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2c6c4:	cmp	x8, x9
   2c6c8:	b.eq	2c784 <mpfr_atan@@Base+0x1230>  // b.none
   2c6cc:	mov	x9, #0x2                   	// #2
   2c6d0:	movk	x9, #0x8000, lsl #48
   2c6d4:	cmp	x8, x9
   2c6d8:	b.ne	2c80c <mpfr_atan@@Base+0x12b8>  // b.any
   2c6dc:	add	x8, x20, #0x103
   2c6e0:	str	x8, [x26, #16]
   2c6e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c6e8:	ldr	x1, [x0, #2640]
   2c6ec:	add	x0, x0, #0xa50
   2c6f0:	blr	x1
   2c6f4:	mrs	x8, tpidr_el0
   2c6f8:	ldr	w9, [x8, x0]
   2c6fc:	mov	w22, wzr
   2c700:	orr	w9, w9, #0x4
   2c704:	str	w9, [x8, x0]
   2c708:	b	2c698 <mpfr_atan@@Base+0x1144>
   2c70c:	ldr	x8, [sp, #64]
   2c710:	mov	w2, w25
   2c714:	ldr	w19, [x8, #8]
   2c718:	cmp	w19, #0x0
   2c71c:	b.gt	2c830 <mpfr_atan@@Base+0x12dc>
   2c720:	cmp	w25, #0x2
   2c724:	b.ne	2c824 <mpfr_atan@@Base+0x12d0>  // b.any
   2c728:	mov	w2, #0x3                   	// #3
   2c72c:	b	2c830 <mpfr_atan@@Base+0x12dc>
   2c730:	mov	x8, xzr
   2c734:	b	2b674 <mpfr_atan@@Base+0x120>
   2c738:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c73c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2c740:	add	x0, x0, #0xd8
   2c744:	add	x2, x2, #0xdf
   2c748:	mov	w1, #0x166                 	// #358
   2c74c:	bl	cb20 <mpfr_assert_fail@plt>
   2c750:	ldr	x8, [x26]
   2c754:	b	2b664 <mpfr_atan@@Base+0x110>
   2c758:	mov	x0, x26
   2c75c:	mov	x1, x24
   2c760:	mov	w3, wzr
   2c764:	mov	w4, w25
   2c768:	bl	c530 <mpfr_round_near_x@plt>
   2c76c:	mov	w22, w0
   2c770:	cbnz	w0, 2c698 <mpfr_atan@@Base+0x1144>
   2c774:	ldr	x8, [x24, #16]
   2c778:	mov	x20, #0xfffffffffffffeff    	// #-257
   2c77c:	movk	x20, #0x7fff, lsl #48
   2c780:	b	2b5b8 <mpfr_atan@@Base+0x64>
   2c784:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c788:	ldr	x1, [x0, #2640]
   2c78c:	add	x0, x0, #0xa50
   2c790:	blr	x1
   2c794:	mrs	x19, tpidr_el0
   2c798:	ldr	w20, [x19, x0]
   2c79c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c7a0:	ldr	x1, [x0, #2576]
   2c7a4:	add	x0, x0, #0xa10
   2c7a8:	blr	x1
   2c7ac:	ldr	x21, [x19, x0]
   2c7b0:	mov	x8, x0
   2c7b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c7b8:	ldr	x1, [x0, #2608]
   2c7bc:	add	x0, x0, #0xa30
   2c7c0:	blr	x1
   2c7c4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2c7c8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2c7cc:	ldr	x23, [x19, x0]
   2c7d0:	str	x9, [x19, x8]
   2c7d4:	str	x10, [x19, x0]
   2c7d8:	ldr	w8, [x24, #8]
   2c7dc:	cmp	w8, #0x1
   2c7e0:	b.lt	2c8d8 <mpfr_atan@@Base+0x1384>  // b.tstop
   2c7e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c7e8:	ldr	x1, [x0, #2688]
   2c7ec:	add	x0, x0, #0xa80
   2c7f0:	blr	x1
   2c7f4:	add	x1, x19, x0
   2c7f8:	mov	x0, x26
   2c7fc:	mov	w2, w25
   2c800:	bl	c380 <mpfr_cache@plt>
   2c804:	mov	w22, w0
   2c808:	b	2c91c <mpfr_atan@@Base+0x13c8>
   2c80c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2c810:	str	x8, [x26, #16]
   2c814:	ldr	w8, [x24, #8]
   2c818:	mov	w22, wzr
   2c81c:	str	w8, [x26, #8]
   2c820:	b	2c698 <mpfr_atan@@Base+0x1144>
   2c824:	cmp	w25, #0x3
   2c828:	mov	w8, #0x2                   	// #2
   2c82c:	csel	w2, w8, w25, eq  // eq = none
   2c830:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c834:	ldr	x1, [x0, #2688]
   2c838:	add	x0, x0, #0xa80
   2c83c:	blr	x1
   2c840:	add	x1, x27, x0
   2c844:	mov	x0, x26
   2c848:	bl	c380 <mpfr_cache@plt>
   2c84c:	mov	w22, w0
   2c850:	tbz	w19, #31, 2c864 <mpfr_atan@@Base+0x1310>
   2c854:	ldr	w8, [x26, #8]
   2c858:	neg	w22, w22
   2c85c:	neg	w8, w8
   2c860:	str	w8, [x26, #8]
   2c864:	mov	w2, #0x2                   	// #2
   2c868:	mov	x0, x26
   2c86c:	mov	x1, x26
   2c870:	mov	w3, w25
   2c874:	bl	c8f0 <mpfr_div_2ui@plt>
   2c878:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c87c:	ldr	x1, [x0, #2640]
   2c880:	add	x0, x0, #0xa50
   2c884:	blr	x1
   2c888:	ldr	w9, [sp, #92]
   2c88c:	str	w9, [x27, x0]
   2c890:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c894:	ldr	x1, [x0, #2576]
   2c898:	add	x0, x0, #0xa10
   2c89c:	blr	x1
   2c8a0:	ldr	x10, [sp, #80]
   2c8a4:	str	x10, [x27, x0]
   2c8a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c8ac:	ldr	x1, [x0, #2608]
   2c8b0:	add	x0, x0, #0xa30
   2c8b4:	blr	x1
   2c8b8:	ldr	x11, [sp, #72]
   2c8bc:	str	x11, [x27, x0]
   2c8c0:	ldr	x8, [x26, #16]
   2c8c4:	cmp	x8, x11
   2c8c8:	b.gt	2c9a0 <mpfr_atan@@Base+0x144c>
   2c8cc:	cmp	x8, x10
   2c8d0:	b.ge	2c67c <mpfr_atan@@Base+0x1128>  // b.tcont
   2c8d4:	b	2c9a0 <mpfr_atan@@Base+0x144c>
   2c8d8:	cmp	w25, #0x3
   2c8dc:	mov	w8, #0x2                   	// #2
   2c8e0:	csel	w8, w8, w25, eq  // eq = none
   2c8e4:	cmp	w25, #0x2
   2c8e8:	mov	w9, #0x3                   	// #3
   2c8ec:	csel	w2, w9, w8, eq  // eq = none
   2c8f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c8f4:	ldr	x1, [x0, #2688]
   2c8f8:	add	x0, x0, #0xa80
   2c8fc:	blr	x1
   2c900:	add	x1, x19, x0
   2c904:	mov	x0, x26
   2c908:	bl	c380 <mpfr_cache@plt>
   2c90c:	ldr	w8, [x26, #8]
   2c910:	neg	w22, w0
   2c914:	neg	w8, w8
   2c918:	str	w8, [x26, #8]
   2c91c:	mov	w2, #0x1                   	// #1
   2c920:	mov	x0, x26
   2c924:	mov	x1, x26
   2c928:	mov	w3, w25
   2c92c:	bl	c8f0 <mpfr_div_2ui@plt>
   2c930:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c934:	ldr	x1, [x0, #2640]
   2c938:	add	x0, x0, #0xa50
   2c93c:	blr	x1
   2c940:	str	w20, [x19, x0]
   2c944:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c948:	ldr	x1, [x0, #2576]
   2c94c:	add	x0, x0, #0xa10
   2c950:	blr	x1
   2c954:	str	x21, [x19, x0]
   2c958:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c95c:	ldr	x1, [x0, #2608]
   2c960:	add	x0, x0, #0xa30
   2c964:	blr	x1
   2c968:	str	x23, [x19, x0]
   2c96c:	ldr	x8, [x26, #16]
   2c970:	cmp	x8, x23
   2c974:	b.gt	2c9a0 <mpfr_atan@@Base+0x144c>
   2c978:	cmp	x8, x21
   2c97c:	b.lt	2c9a0 <mpfr_atan@@Base+0x144c>  // b.tstop
   2c980:	cbz	w22, 2c698 <mpfr_atan@@Base+0x1144>
   2c984:	orr	w8, w20, #0x8
   2c988:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2c98c:	ldr	x1, [x0, #2640]
   2c990:	add	x0, x0, #0xa50
   2c994:	blr	x1
   2c998:	str	w8, [x19, x0]
   2c99c:	b	2c698 <mpfr_atan@@Base+0x1144>
   2c9a0:	mov	x0, x26
   2c9a4:	mov	w1, w22
   2c9a8:	mov	w2, w25
   2c9ac:	bl	cb10 <mpfr_check_range@plt>
   2c9b0:	mov	w22, w0
   2c9b4:	b	2c698 <mpfr_atan@@Base+0x1144>
   2c9b8:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002c9bc <mpfr_cmp2@@Base>:
   2c9bc:	sub	sp, sp, #0x80
   2c9c0:	stp	x29, x30, [sp, #32]
   2c9c4:	stp	x28, x27, [sp, #48]
   2c9c8:	stp	x26, x25, [sp, #64]
   2c9cc:	stp	x24, x23, [sp, #80]
   2c9d0:	stp	x22, x21, [sp, #96]
   2c9d4:	stp	x20, x19, [sp, #112]
   2c9d8:	str	xzr, [sp, #16]
   2c9dc:	ldr	x8, [x0, #16]
   2c9e0:	mov	x9, #0x4                   	// #4
   2c9e4:	movk	x9, #0x8000, lsl #48
   2c9e8:	mov	x19, x2
   2c9ec:	mov	x20, x0
   2c9f0:	cmp	x8, x9
   2c9f4:	mov	x22, x1
   2c9f8:	add	x29, sp, #0x20
   2c9fc:	b.eq	2cad4 <mpfr_cmp2@@Base+0x118>  // b.none
   2ca00:	ldr	x10, [x22, #16]
   2ca04:	cmp	x10, x9
   2ca08:	b.eq	2cad4 <mpfr_cmp2@@Base+0x118>  // b.none
   2ca0c:	sub	x21, x8, x10
   2ca10:	tbnz	x21, #63, 2cae8 <mpfr_cmp2@@Base+0x12c>
   2ca14:	ldr	x8, [x20]
   2ca18:	ldr	x9, [x22]
   2ca1c:	ldr	x23, [x20, #24]
   2ca20:	ldr	x22, [x22, #24]
   2ca24:	sub	x10, x8, #0x1
   2ca28:	add	x8, x8, #0x3e
   2ca2c:	sub	x11, x9, #0x1
   2ca30:	cmp	x10, #0x0
   2ca34:	add	x9, x9, #0x3e
   2ca38:	csel	x8, x8, x10, lt  // lt = tstop
   2ca3c:	cmp	x11, #0x0
   2ca40:	csel	x9, x9, x11, lt  // lt = tstop
   2ca44:	asr	x8, x8, #6
   2ca48:	asr	x26, x9, #6
   2ca4c:	cbz	x21, 2ca58 <mpfr_cmp2@@Base+0x9c>
   2ca50:	mov	w20, #0x1                   	// #1
   2ca54:	b	2cb28 <mpfr_cmp2@@Base+0x16c>
   2ca58:	mov	x24, xzr
   2ca5c:	orr	x9, x26, x8
   2ca60:	tbnz	x9, #63, 2ca88 <mpfr_cmp2@@Base+0xcc>
   2ca64:	ldr	x9, [x23, x8, lsl #3]
   2ca68:	ldr	x10, [x22, x26, lsl #3]
   2ca6c:	cmp	x9, x10
   2ca70:	b.ne	2ca88 <mpfr_cmp2@@Base+0xcc>  // b.any
   2ca74:	sub	x8, x8, #0x1
   2ca78:	sub	x26, x26, #0x1
   2ca7c:	orr	x9, x26, x8
   2ca80:	add	x24, x24, #0x40
   2ca84:	tbz	x9, #63, 2ca64 <mpfr_cmp2@@Base+0xa8>
   2ca88:	tbnz	x8, #63, 2cd08 <mpfr_cmp2@@Base+0x34c>
   2ca8c:	ldr	x9, [x23, x8, lsl #3]
   2ca90:	tbnz	x26, #63, 2cd14 <mpfr_cmp2@@Base+0x358>
   2ca94:	ldr	x10, [x22, x26, lsl #3]
   2ca98:	mov	x21, xzr
   2ca9c:	mov	x25, xzr
   2caa0:	cmp	x9, x10
   2caa4:	csel	x10, x26, x8, cc  // cc = lo, ul, last
   2caa8:	csel	x26, x8, x26, cc  // cc = lo, ul, last
   2caac:	csel	x11, x23, x22, cc  // cc = lo, ul, last
   2cab0:	ldr	x9, [x11, x26, lsl #3]
   2cab4:	mov	w8, #0xffffffff            	// #-1
   2cab8:	cneg	w20, w8, cs  // cs = hs, nlast
   2cabc:	csel	x23, x22, x23, cc  // cc = lo, ul, last
   2cac0:	str	x9, [sp, #16]
   2cac4:	mov	x8, x10
   2cac8:	mov	x22, x11
   2cacc:	sub	x26, x26, #0x1
   2cad0:	b	2cb54 <mpfr_cmp2@@Base+0x198>
   2cad4:	mov	x0, x20
   2cad8:	mov	x1, x22
   2cadc:	bl	cae0 <mpfr_ubf_diff_exp@plt>
   2cae0:	mov	x21, x0
   2cae4:	tbz	x21, #63, 2ca14 <mpfr_cmp2@@Base+0x58>
   2cae8:	ldr	x8, [x22]
   2caec:	ldr	x9, [x20]
   2caf0:	ldr	x23, [x22, #24]
   2caf4:	ldr	x22, [x20, #24]
   2caf8:	sub	x10, x8, #0x1
   2cafc:	add	x8, x8, #0x3e
   2cb00:	cmp	x10, #0x0
   2cb04:	csel	x8, x8, x10, lt  // lt = tstop
   2cb08:	sub	x10, x9, #0x1
   2cb0c:	add	x9, x9, #0x3e
   2cb10:	cmp	x10, #0x0
   2cb14:	csel	x9, x9, x10, lt  // lt = tstop
   2cb18:	neg	x21, x21
   2cb1c:	asr	x8, x8, #6
   2cb20:	asr	x26, x9, #6
   2cb24:	mov	w20, #0xffffffff            	// #-1
   2cb28:	cmp	x21, #0x3f
   2cb2c:	b.hi	2cc48 <mpfr_cmp2@@Base+0x28c>  // b.pmore
   2cb30:	lsl	x10, x26, #3
   2cb34:	ldr	x9, [x22, x10]
   2cb38:	neg	x11, x21
   2cb3c:	mov	x24, xzr
   2cb40:	sub	x26, x26, #0x1
   2cb44:	lsr	x9, x9, x21
   2cb48:	str	x9, [sp, #16]
   2cb4c:	ldr	x10, [x22, x10]
   2cb50:	lsl	x25, x10, x11
   2cb54:	ldr	x10, [x23, x8, lsl #3]
   2cb58:	cmp	x26, #0x0
   2cb5c:	cset	w12, ge  // ge = tcont
   2cb60:	cmp	x25, #0x0
   2cb64:	sub	x11, x10, x9
   2cb68:	cset	w13, ne  // ne = any
   2cb6c:	cmp	x11, #0x1
   2cb70:	sub	x10, x8, #0x1
   2cb74:	str	x11, [sp, #8]
   2cb78:	b.ne	2cb84 <mpfr_cmp2@@Base+0x1c8>  // b.any
   2cb7c:	orr	w9, w12, w13
   2cb80:	cbnz	w9, 2cc5c <mpfr_cmp2@@Base+0x2a0>
   2cb84:	clz	x8, x11
   2cb88:	mov	w9, #0x3f                  	// #63
   2cb8c:	sub	w9, w9, w8
   2cb90:	mov	w12, #0x1                   	// #1
   2cb94:	lsl	x9, x12, x9
   2cb98:	cmp	x11, x9
   2cb9c:	add	x8, x8, x24
   2cba0:	b.eq	2cbcc <mpfr_cmp2@@Base+0x210>  // b.none
   2cba4:	str	x8, [x19]
   2cba8:	mov	w0, w20
   2cbac:	ldp	x20, x19, [sp, #112]
   2cbb0:	ldp	x22, x21, [sp, #96]
   2cbb4:	ldp	x24, x23, [sp, #80]
   2cbb8:	ldp	x26, x25, [sp, #64]
   2cbbc:	ldp	x28, x27, [sp, #48]
   2cbc0:	ldp	x29, x30, [sp, #32]
   2cbc4:	add	sp, sp, #0x80
   2cbc8:	ret
   2cbcc:	mov	x9, x26
   2cbd0:	tbnz	x10, #63, 2cc3c <mpfr_cmp2@@Base+0x280>
   2cbd4:	tbz	x9, #63, 2cbdc <mpfr_cmp2@@Base+0x220>
   2cbd8:	cbz	x25, 2cba4 <mpfr_cmp2@@Base+0x1e8>
   2cbdc:	subs	x12, x21, #0x40
   2cbe0:	b.cc	2cbf0 <mpfr_cmp2@@Base+0x234>  // b.lo, b.ul, b.last
   2cbe4:	ldr	x11, [sp, #16]
   2cbe8:	mov	x21, x12
   2cbec:	b	2cc28 <mpfr_cmp2@@Base+0x26c>
   2cbf0:	str	x25, [sp, #16]
   2cbf4:	tbnz	x9, #63, 2cc1c <mpfr_cmp2@@Base+0x260>
   2cbf8:	ldr	x11, [x22, x9, lsl #3]
   2cbfc:	lsr	x11, x11, x21
   2cc00:	add	x11, x11, x25
   2cc04:	str	x11, [sp, #16]
   2cc08:	cbz	x21, 2cc24 <mpfr_cmp2@@Base+0x268>
   2cc0c:	ldr	x12, [x22, x9, lsl #3]
   2cc10:	neg	x13, x21
   2cc14:	lsl	x25, x12, x13
   2cc18:	b	2cc24 <mpfr_cmp2@@Base+0x268>
   2cc1c:	mov	x11, x25
   2cc20:	mov	x25, xzr
   2cc24:	sub	x9, x9, #0x1
   2cc28:	ldr	x12, [x23, x10, lsl #3]
   2cc2c:	cmp	x12, x11
   2cc30:	b.ne	2cd6c <mpfr_cmp2@@Base+0x3b0>  // b.any
   2cc34:	subs	x10, x10, #0x1
   2cc38:	b.ge	2cbd4 <mpfr_cmp2@@Base+0x218>  // b.tcont
   2cc3c:	cbz	x25, 2cd4c <mpfr_cmp2@@Base+0x390>
   2cc40:	add	x8, x8, #0x1
   2cc44:	b	2cba4 <mpfr_cmp2@@Base+0x1e8>
   2cc48:	mov	x24, xzr
   2cc4c:	mov	x9, xzr
   2cc50:	mov	x25, xzr
   2cc54:	sub	x21, x21, #0x40
   2cc58:	b	2cb54 <mpfr_cmp2@@Base+0x198>
   2cc5c:	lsr	x9, x26, #63
   2cc60:	eor	w10, w9, #0x1
   2cc64:	sub	x27, x23, #0x8
   2cc68:	cbz	x21, 2cd9c <mpfr_cmp2@@Base+0x3e0>
   2cc6c:	subs	x28, x8, #0x1
   2cc70:	b.lt	2cc7c <mpfr_cmp2@@Base+0x2c0>  // b.tstop
   2cc74:	ldr	x8, [x27, x8, lsl #3]
   2cc78:	b	2cc80 <mpfr_cmp2@@Base+0x2c4>
   2cc7c:	mov	x8, xzr
   2cc80:	stur	x8, [x29, #-8]
   2cc84:	str	x25, [sp, #16]
   2cc88:	tbz	w10, #0, 2cca8 <mpfr_cmp2@@Base+0x2ec>
   2cc8c:	lsl	x8, x26, #3
   2cc90:	ldr	x9, [x22, x8]
   2cc94:	add	x9, x25, x9, lsr #1
   2cc98:	str	x9, [sp, #16]
   2cc9c:	ldr	x8, [x22, x8]
   2cca0:	lsl	x25, x8, #63
   2cca4:	b	2ccac <mpfr_cmp2@@Base+0x2f0>
   2cca8:	mov	x25, xzr
   2ccac:	add	x0, sp, #0x8
   2ccb0:	sub	x1, x29, #0x8
   2ccb4:	add	x2, sp, #0x10
   2ccb8:	mov	w3, #0x1                   	// #1
   2ccbc:	bl	beb0 <__gmpn_sub_n@plt>
   2ccc0:	ldr	x11, [sp, #8]
   2ccc4:	cmp	x26, #0x0
   2ccc8:	cset	w10, gt
   2cccc:	cmp	x25, #0x0
   2ccd0:	cset	w8, ne  // ne = any
   2ccd4:	cmp	x0, #0x1
   2ccd8:	sub	x9, x26, #0x1
   2ccdc:	cset	w12, eq  // eq = none
   2cce0:	cmp	x11, #0x1
   2cce4:	add	x24, x24, #0x40
   2cce8:	b.ne	2ce10 <mpfr_cmp2@@Base+0x454>  // b.any
   2ccec:	cmp	x0, #0x1
   2ccf0:	b.ne	2ce10 <mpfr_cmp2@@Base+0x454>  // b.any
   2ccf4:	orr	w13, w10, w8
   2ccf8:	mov	x8, x28
   2ccfc:	mov	x26, x9
   2cd00:	tbz	w13, #0, 2ce10 <mpfr_cmp2@@Base+0x454>
   2cd04:	b	2cc6c <mpfr_cmp2@@Base+0x2b0>
   2cd08:	tbz	x26, #63, 2ce2c <mpfr_cmp2@@Base+0x470>
   2cd0c:	mov	w20, wzr
   2cd10:	b	2cba8 <mpfr_cmp2@@Base+0x1ec>
   2cd14:	mov	w20, #0x1                   	// #1
   2cd18:	mov	x22, x23
   2cd1c:	mov	x26, x8
   2cd20:	cbnz	x9, 2cd40 <mpfr_cmp2@@Base+0x384>
   2cd24:	sub	x8, x22, #0x8
   2cd28:	subs	x10, x26, #0x1
   2cd2c:	b.lt	2cd0c <mpfr_cmp2@@Base+0x350>  // b.tstop
   2cd30:	ldr	x9, [x8, x26, lsl #3]
   2cd34:	add	x24, x24, #0x40
   2cd38:	mov	x26, x10
   2cd3c:	cbz	x9, 2cd28 <mpfr_cmp2@@Base+0x36c>
   2cd40:	clz	x8, x9
   2cd44:	orr	x8, x8, x24
   2cd48:	b	2cba4 <mpfr_cmp2@@Base+0x1e8>
   2cd4c:	tbnz	x9, #63, 2cd74 <mpfr_cmp2@@Base+0x3b8>
   2cd50:	ldr	x10, [x22, x9, lsl #3]
   2cd54:	cbnz	x10, 2cd74 <mpfr_cmp2@@Base+0x3b8>
   2cd58:	sub	x10, x9, #0x1
   2cd5c:	cmp	x9, #0x0
   2cd60:	mov	x9, x10
   2cd64:	b.gt	2cd50 <mpfr_cmp2@@Base+0x394>
   2cd68:	b	2cd78 <mpfr_cmp2@@Base+0x3bc>
   2cd6c:	cinc	x8, x8, cc  // cc = lo, ul, last
   2cd70:	b	2cba4 <mpfr_cmp2@@Base+0x1e8>
   2cd74:	mov	x10, x9
   2cd78:	mvn	x9, x10
   2cd7c:	add	x8, x8, x9, lsr #63
   2cd80:	b	2cba4 <mpfr_cmp2@@Base+0x1e8>
   2cd84:	cmp	x0, #0x1
   2cd88:	b.ne	2ce10 <mpfr_cmp2@@Base+0x454>  // b.any
   2cd8c:	orr	w13, w10, w8
   2cd90:	mov	x8, x28
   2cd94:	mov	x26, x9
   2cd98:	tbz	w13, #0, 2ce10 <mpfr_cmp2@@Base+0x454>
   2cd9c:	subs	x28, x8, #0x1
   2cda0:	b.lt	2cdac <mpfr_cmp2@@Base+0x3f0>  // b.tstop
   2cda4:	ldr	x8, [x27, x8, lsl #3]
   2cda8:	b	2cdb0 <mpfr_cmp2@@Base+0x3f4>
   2cdac:	mov	x8, xzr
   2cdb0:	stur	x8, [x29, #-8]
   2cdb4:	str	x25, [sp, #16]
   2cdb8:	tbz	w10, #0, 2cdcc <mpfr_cmp2@@Base+0x410>
   2cdbc:	ldr	x8, [x22, x26, lsl #3]
   2cdc0:	add	x8, x8, x25
   2cdc4:	str	x8, [sp, #16]
   2cdc8:	b	2cdd0 <mpfr_cmp2@@Base+0x414>
   2cdcc:	mov	x25, xzr
   2cdd0:	add	x0, sp, #0x8
   2cdd4:	sub	x1, x29, #0x8
   2cdd8:	add	x2, sp, #0x10
   2cddc:	mov	w3, #0x1                   	// #1
   2cde0:	bl	beb0 <__gmpn_sub_n@plt>
   2cde4:	ldr	x11, [sp, #8]
   2cde8:	cmp	x26, #0x0
   2cdec:	cset	w10, gt
   2cdf0:	cmp	x25, #0x0
   2cdf4:	cset	w8, ne  // ne = any
   2cdf8:	cmp	x0, #0x1
   2cdfc:	sub	x9, x26, #0x1
   2ce00:	cset	w12, eq  // eq = none
   2ce04:	cmp	x11, #0x1
   2ce08:	add	x24, x24, #0x40
   2ce0c:	b.eq	2cd84 <mpfr_cmp2@@Base+0x3c8>  // b.none
   2ce10:	sub	x10, x28, #0x1
   2ce14:	tbz	w12, #0, 2ce20 <mpfr_cmp2@@Base+0x464>
   2ce18:	mov	x26, x9
   2ce1c:	b	2cb84 <mpfr_cmp2@@Base+0x1c8>
   2ce20:	sub	x8, x24, #0x1
   2ce24:	cbnz	x11, 2cba4 <mpfr_cmp2@@Base+0x1e8>
   2ce28:	b	2cbd0 <mpfr_cmp2@@Base+0x214>
   2ce2c:	ldr	x9, [x22, x26, lsl #3]
   2ce30:	mov	w20, #0xffffffff            	// #-1
   2ce34:	cbnz	x9, 2cd40 <mpfr_cmp2@@Base+0x384>
   2ce38:	b	2cd24 <mpfr_cmp2@@Base+0x368>

000000000002ce3c <mpfr_exp_2@@Base>:
   2ce3c:	sub	sp, sp, #0x1d0
   2ce40:	stp	x29, x30, [sp, #368]
   2ce44:	stp	x28, x27, [sp, #384]
   2ce48:	stp	x26, x25, [sp, #400]
   2ce4c:	stp	x24, x23, [sp, #416]
   2ce50:	stp	x22, x21, [sp, #432]
   2ce54:	stp	x20, x19, [sp, #448]
   2ce58:	ldr	x19, [x1, #16]
   2ce5c:	ldr	x28, [x0]
   2ce60:	mov	x27, x1
   2ce64:	mov	w23, w2
   2ce68:	cmn	x19, #0x1
   2ce6c:	add	x29, sp, #0x170
   2ce70:	str	x0, [sp, #32]
   2ce74:	b.lt	2cf08 <mpfr_exp_2@@Base+0xcc>  // b.tstop
   2ce78:	mov	w8, #0x3f                  	// #63
   2ce7c:	add	x9, sp, #0x60
   2ce80:	mov	w10, #0x1                   	// #1
   2ce84:	stur	x8, [x29, #-112]
   2ce88:	stur	x9, [x29, #-88]
   2ce8c:	stur	w10, [x29, #-104]
   2ce90:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   2ce94:	ldr	x2, [x2, #3992]
   2ce98:	sub	x0, x29, #0x70
   2ce9c:	mov	x1, x27
   2cea0:	mov	w3, wzr
   2cea4:	bl	c610 <mpfr_div@plt>
   2cea8:	ldur	x8, [x29, #-96]
   2ceac:	cmp	x8, #0x0
   2ceb0:	b.le	2cf08 <mpfr_exp_2@@Base+0xcc>
   2ceb4:	ldur	x9, [x29, #-88]
   2ceb8:	ldur	w10, [x29, #-104]
   2cebc:	neg	x8, x8
   2cec0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   2cec4:	ldr	x9, [x9]
   2cec8:	lsr	x8, x9, x8
   2cecc:	cmp	x8, #0x0
   2ced0:	csneg	x9, x11, x8, lt  // lt = tstop
   2ced4:	cmp	w10, #0x0
   2ced8:	csel	x22, x8, x9, gt
   2cedc:	cbz	x22, 2cf38 <mpfr_exp_2@@Base+0xfc>
   2cee0:	cmp	x22, #0x0
   2cee4:	cneg	x8, x22, mi  // mi = first
   2cee8:	add	x8, x8, #0x1
   2ceec:	clz	x8, x8
   2cef0:	mov	w9, #0x40                  	// #64
   2cef4:	sub	w8, w9, w8
   2cef8:	str	x8, [sp, #88]
   2cefc:	cmp	x28, #0x63
   2cf00:	b.le	2cf18 <mpfr_exp_2@@Base+0xdc>
   2cf04:	b	2cf44 <mpfr_exp_2@@Base+0x108>
   2cf08:	mov	x22, xzr
   2cf0c:	str	xzr, [sp, #88]
   2cf10:	cmp	x28, #0x63
   2cf14:	b.gt	2cf44 <mpfr_exp_2@@Base+0x108>
   2cf18:	add	x8, x28, #0x1
   2cf1c:	add	x9, x28, #0x2
   2cf20:	cmp	x8, #0x0
   2cf24:	csinc	x8, x9, x28, lt  // lt = tstop
   2cf28:	asr	x0, x8, #1
   2cf2c:	bl	bf70 <__gmpfr_isqrt@plt>
   2cf30:	add	x0, x0, #0x3
   2cf34:	b	2cf4c <mpfr_exp_2@@Base+0x110>
   2cf38:	str	xzr, [sp, #88]
   2cf3c:	cmp	x28, #0x63
   2cf40:	b.le	2cf18 <mpfr_exp_2@@Base+0xdc>
   2cf44:	lsl	x0, x28, #2
   2cf48:	bl	c0f0 <__gmpfr_cuberoot@plt>
   2cf4c:	sub	x8, x28, #0x1
   2cf50:	udiv	x8, x8, x0
   2cf54:	lsl	x21, x8, #1
   2cf58:	mov	x24, x0
   2cf5c:	cmn	x21, #0x14
   2cf60:	b.eq	2d5a0 <mpfr_exp_2@@Base+0x764>  // b.none
   2cf64:	bic	x9, x19, x19, asr #63
   2cf68:	add	x8, x21, #0x13
   2cf6c:	add	x9, x28, x9
   2cf70:	clz	x8, x8
   2cf74:	add	x9, x9, x24, lsl #1
   2cf78:	sub	x8, x9, x8
   2cf7c:	str	x24, [sp, #80]
   2cf80:	add	x24, x8, #0x4a
   2cf84:	ldr	x8, [sp, #88]
   2cf88:	mov	x20, #0xfffffffffffffeff    	// #-257
   2cf8c:	movk	x20, #0x7fff, lsl #48
   2cf90:	sxtw	x8, w8
   2cf94:	add	x19, x24, x8
   2cf98:	cmp	x19, x20
   2cf9c:	str	x8, [sp, #16]
   2cfa0:	b.gt	2d5bc <mpfr_exp_2@@Base+0x780>
   2cfa4:	sub	x8, x19, #0x1
   2cfa8:	add	x9, x19, #0x3e
   2cfac:	cmp	x8, #0x0
   2cfb0:	csel	x8, x9, x8, lt  // lt = tstop
   2cfb4:	asr	x8, x8, #6
   2cfb8:	cmp	x19, #0x201
   2cfbc:	add	x21, x8, #0x1
   2cfc0:	b.lt	2cfd4 <mpfr_exp_2@@Base+0x198>  // b.tstop
   2cfc4:	lsl	x0, x21, #4
   2cfc8:	str	x0, [sp, #96]
   2cfcc:	bl	ccd0 <mpfr_allocate_func@plt>
   2cfd0:	b	2cfe0 <mpfr_exp_2@@Base+0x1a4>
   2cfd4:	add	x8, sp, #0x60
   2cfd8:	add	x0, x8, #0x10
   2cfdc:	str	xzr, [sp, #96]
   2cfe0:	str	x0, [sp, #104]
   2cfe4:	stur	x19, [x29, #-112]
   2cfe8:	stp	x0, x19, [x29, #-88]
   2cfec:	mov	w19, #0x1                   	// #1
   2cff0:	add	x8, x0, x21, lsl #3
   2cff4:	sub	x0, x29, #0x80
   2cff8:	stur	w19, [x29, #-104]
   2cffc:	stur	x8, [x29, #-56]
   2d000:	stur	w19, [x29, #-72]
   2d004:	bl	bfe0 <mpfr_mpz_init@plt>
   2d008:	mrs	x9, tpidr_el0
   2d00c:	ldr	x21, [sp, #80]
   2d010:	mov	x8, #0xfffffffffffffffe    	// #-2
   2d014:	cmp	w23, #0x0
   2d018:	stp	x28, x27, [sp, #64]
   2d01c:	sub	x8, x8, x21
   2d020:	stp	x8, x9, [sp, #48]
   2d024:	cinc	x8, x28, eq  // eq = none
   2d028:	str	x8, [sp, #40]
   2d02c:	mov	w8, #0x40                  	// #64
   2d030:	str	x8, [sp, #24]
   2d034:	cmp	x22, #0x0
   2d038:	cinc	w25, w19, lt  // lt = tstop
   2d03c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2d040:	ldr	x1, [x0, #2624]
   2d044:	add	x0, x0, #0xa40
   2d048:	blr	x1
   2d04c:	add	x1, x9, x0
   2d050:	sub	x0, x29, #0x50
   2d054:	mov	w2, w25
   2d058:	cneg	x26, x22, mi  // mi = first
   2d05c:	bl	c380 <mpfr_cache@plt>
   2d060:	sub	x0, x29, #0x70
   2d064:	sub	x1, x29, #0x50
   2d068:	mov	x2, x26
   2d06c:	mov	w3, w25
   2d070:	bl	bab0 <mpfr_mul_ui@plt>
   2d074:	tbz	x22, #63, 2d084 <mpfr_exp_2@@Base+0x248>
   2d078:	ldur	w8, [x29, #-104]
   2d07c:	neg	w8, w8
   2d080:	stur	w8, [x29, #-104]
   2d084:	sub	x0, x29, #0x70
   2d088:	sub	x2, x29, #0x70
   2d08c:	mov	w3, #0x2                   	// #2
   2d090:	mov	x1, x27
   2d094:	bl	bbc0 <mpfr_sub@plt>
   2d098:	ldur	x9, [x29, #-96]
   2d09c:	ldur	w11, [x29, #-104]
   2d0a0:	add	x10, x20, #0x105
   2d0a4:	cmp	x9, x10
   2d0a8:	cset	w8, lt  // lt = tstop
   2d0ac:	tbz	w11, #31, 2d0d4 <mpfr_exp_2@@Base+0x298>
   2d0b0:	cmp	x9, x10
   2d0b4:	b.lt	2d0d4 <mpfr_exp_2@@Base+0x298>  // b.tstop
   2d0b8:	sub	x0, x29, #0x70
   2d0bc:	sub	x1, x29, #0x70
   2d0c0:	sub	x2, x29, #0x50
   2d0c4:	mov	w3, #0x2                   	// #2
   2d0c8:	sub	x22, x22, #0x1
   2d0cc:	bl	c1e0 <mpfr_add@plt>
   2d0d0:	b	2d098 <mpfr_exp_2@@Base+0x25c>
   2d0d4:	tbnz	w8, #0, 2d444 <mpfr_exp_2@@Base+0x608>
   2d0d8:	ldr	x8, [sp, #88]
   2d0dc:	cmp	w8, #0x1
   2d0e0:	b.lt	2d0f4 <mpfr_exp_2@@Base+0x2b8>  // b.tstop
   2d0e4:	sub	x0, x29, #0x70
   2d0e8:	mov	w2, #0x2                   	// #2
   2d0ec:	mov	x1, x24
   2d0f0:	bl	c960 <mpfr_prec_round@plt>
   2d0f4:	sub	x0, x29, #0x70
   2d0f8:	sub	x1, x29, #0x70
   2d0fc:	mov	w3, #0x2                   	// #2
   2d100:	mov	x2, x21
   2d104:	bl	c8f0 <mpfr_div_2ui@plt>
   2d108:	cmp	x28, #0x63
   2d10c:	b.gt	2d2f8 <mpfr_exp_2@@Base+0x4bc>
   2d110:	sub	x8, x19, x24
   2d114:	sub	x0, x29, #0x18
   2d118:	str	w23, [sp, #12]
   2d11c:	stur	x8, [x29, #-48]
   2d120:	bl	bfe0 <mpfr_mpz_init@plt>
   2d124:	sub	x0, x29, #0x28
   2d128:	bl	bfe0 <mpfr_mpz_init@plt>
   2d12c:	sub	x0, x29, #0x18
   2d130:	mov	w1, #0x1                   	// #1
   2d134:	bl	bd00 <__gmpz_set_ui@plt>
   2d138:	sub	x0, x29, #0x80
   2d13c:	mov	w1, #0x1                   	// #1
   2d140:	bl	bd00 <__gmpz_set_ui@plt>
   2d144:	sub	x26, x24, #0x1
   2d148:	sub	x0, x29, #0x80
   2d14c:	sub	x1, x29, #0x80
   2d150:	mov	x2, x26
   2d154:	bl	c230 <__gmpz_mul_2exp@plt>
   2d158:	sub	x0, x29, #0x28
   2d15c:	sub	x1, x29, #0x70
   2d160:	bl	caa0 <mpfr_get_z_2exp@plt>
   2d164:	mov	x25, x0
   2d168:	mov	x27, xzr
   2d16c:	add	x23, x26, x24
   2d170:	mov	w19, #0x3                   	// #3
   2d174:	mov	w21, #0x2                   	// #2
   2d178:	sub	x0, x29, #0x18
   2d17c:	sub	x1, x29, #0x18
   2d180:	sub	x2, x29, #0x28
   2d184:	sub	x26, x21, #0x1
   2d188:	bl	c030 <__gmpz_mul@plt>
   2d18c:	ldur	w8, [x29, #-124]
   2d190:	ldur	x9, [x29, #-120]
   2d194:	ldur	w10, [x29, #-20]
   2d198:	ldur	x11, [x29, #-16]
   2d19c:	cmp	w8, #0x0
   2d1a0:	cneg	w8, w8, mi  // mi = first
   2d1a4:	cmp	w10, #0x0
   2d1a8:	add	x9, x9, w8, uxtw #3
   2d1ac:	cneg	w10, w10, mi  // mi = first
   2d1b0:	ldur	x9, [x9, #-8]
   2d1b4:	add	x11, x11, w10, uxtw #3
   2d1b8:	ldur	x11, [x11, #-8]
   2d1bc:	add	x28, x27, x25
   2d1c0:	add	x12, x23, x28
   2d1c4:	clz	x9, x9
   2d1c8:	add	x9, x12, x9
   2d1cc:	clz	x11, x11
   2d1d0:	sub	x8, x9, x8, lsl #6
   2d1d4:	lsl	x10, x10, #6
   2d1d8:	sub	x8, x8, x11
   2d1dc:	add	x8, x8, x10
   2d1e0:	sub	x9, x10, x11
   2d1e4:	subs	x27, x9, x8
   2d1e8:	cset	w9, hi  // hi = pmore
   2d1ec:	sub	x0, x29, #0x18
   2d1f0:	sub	x1, x29, #0x18
   2d1f4:	orr	x8, x9, x8, lsr #63
   2d1f8:	cbz	x8, 2d2d8 <mpfr_exp_2@@Base+0x49c>
   2d1fc:	mov	x2, x27
   2d200:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d204:	cmp	x26, #0x2
   2d208:	b.cc	2d244 <mpfr_exp_2@@Base+0x408>  // b.lo, b.ul, b.last
   2d20c:	sub	x8, x21, #0x2
   2d210:	tst	x26, x8
   2d214:	b.eq	2d22c <mpfr_exp_2@@Base+0x3f0>  // b.none
   2d218:	sub	x0, x29, #0x18
   2d21c:	sub	x1, x29, #0x18
   2d220:	mov	x2, x26
   2d224:	bl	c600 <__gmpz_fdiv_q_ui@plt>
   2d228:	b	2d244 <mpfr_exp_2@@Base+0x408>
   2d22c:	clz	x8, x8
   2d230:	mov	w9, #0x40                  	// #64
   2d234:	sub	x2, x9, x8
   2d238:	sub	x0, x29, #0x18
   2d23c:	sub	x1, x29, #0x18
   2d240:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d244:	ldur	w8, [x29, #-20]
   2d248:	cbz	w8, 2d3ac <mpfr_exp_2@@Base+0x570>
   2d24c:	sub	x0, x29, #0x80
   2d250:	sub	x1, x29, #0x80
   2d254:	sub	x2, x29, #0x18
   2d258:	add	x27, x27, x28
   2d25c:	bl	c9a0 <__gmpz_add@plt>
   2d260:	ldur	w8, [x29, #-20]
   2d264:	ldur	w10, [x29, #-36]
   2d268:	ldur	x9, [x29, #-16]
   2d26c:	ldur	x11, [x29, #-32]
   2d270:	cmp	w8, #0x0
   2d274:	cneg	w8, w8, mi  // mi = first
   2d278:	cmp	w10, #0x0
   2d27c:	add	x9, x9, w8, uxtw #3
   2d280:	cneg	w10, w10, mi  // mi = first
   2d284:	ldur	x9, [x9, #-8]
   2d288:	add	x11, x11, w10, uxtw #3
   2d28c:	ldur	x11, [x11, #-8]
   2d290:	lsl	x8, x8, #6
   2d294:	clz	x9, x9
   2d298:	sub	x8, x8, x9
   2d29c:	clz	x9, x11
   2d2a0:	lsl	x10, x10, #6
   2d2a4:	sub	x9, x10, x9
   2d2a8:	subs	x26, x9, x8
   2d2ac:	cset	w9, hi  // hi = pmore
   2d2b0:	sub	x0, x29, #0x28
   2d2b4:	sub	x1, x29, #0x28
   2d2b8:	orr	x8, x9, x8, lsr #63
   2d2bc:	cbz	x8, 2d2ec <mpfr_exp_2@@Base+0x4b0>
   2d2c0:	mov	x2, x26
   2d2c4:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d2c8:	add	x25, x26, x25
   2d2cc:	add	x21, x21, #0x1
   2d2d0:	add	x19, x19, #0x3
   2d2d4:	b	2d178 <mpfr_exp_2@@Base+0x33c>
   2d2d8:	bl	bff0 <__gmpz_set@plt>
   2d2dc:	mov	x27, xzr
   2d2e0:	cmp	x26, #0x2
   2d2e4:	b.cs	2d20c <mpfr_exp_2@@Base+0x3d0>  // b.hs, b.nlast
   2d2e8:	b	2d244 <mpfr_exp_2@@Base+0x408>
   2d2ec:	bl	bff0 <__gmpz_set@plt>
   2d2f0:	mov	x26, xzr
   2d2f4:	b	2d2c8 <mpfr_exp_2@@Base+0x48c>
   2d2f8:	sub	x0, x29, #0x80
   2d2fc:	sub	x1, x29, #0x70
   2d300:	sub	x3, x29, #0x30
   2d304:	mov	x2, x24
   2d308:	bl	2d5c0 <mpfr_exp_2@@Base+0x784>
   2d30c:	mov	x25, x0
   2d310:	cbz	x21, 2d3d0 <mpfr_exp_2@@Base+0x594>
   2d314:	ldur	x26, [x29, #-48]
   2d318:	mov	w28, w23
   2d31c:	lsr	x19, x24, #63
   2d320:	sub	x0, x29, #0x80
   2d324:	sub	x1, x29, #0x80
   2d328:	sub	x2, x29, #0x80
   2d32c:	bl	c030 <__gmpz_mul@plt>
   2d330:	ldur	w8, [x29, #-124]
   2d334:	ldur	x9, [x29, #-120]
   2d338:	lsl	x23, x26, #1
   2d33c:	sub	x0, x29, #0x80
   2d340:	cmp	w8, #0x0
   2d344:	cneg	w8, w8, mi  // mi = first
   2d348:	add	x9, x9, w8, uxtw #3
   2d34c:	ldur	x9, [x9, #-8]
   2d350:	lsl	x8, x8, #6
   2d354:	sub	x1, x29, #0x80
   2d358:	clz	x9, x9
   2d35c:	sub	x8, x8, x9
   2d360:	subs	x27, x8, x24
   2d364:	cset	w8, hi  // hi = pmore
   2d368:	orr	x8, x19, x8
   2d36c:	cbz	x8, 2d388 <mpfr_exp_2@@Base+0x54c>
   2d370:	mov	x2, x27
   2d374:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d378:	subs	x21, x21, #0x1
   2d37c:	add	x26, x27, x23
   2d380:	b.ne	2d320 <mpfr_exp_2@@Base+0x4e4>  // b.any
   2d384:	b	2d39c <mpfr_exp_2@@Base+0x560>
   2d388:	bl	bff0 <__gmpz_set@plt>
   2d38c:	mov	x27, xzr
   2d390:	subs	x21, x21, #0x1
   2d394:	add	x26, x27, x23
   2d398:	b.ne	2d320 <mpfr_exp_2@@Base+0x4e4>  // b.any
   2d39c:	mov	w23, w28
   2d3a0:	ldp	x28, x27, [sp, #64]
   2d3a4:	stur	x26, [x29, #-48]
   2d3a8:	b	2d3d4 <mpfr_exp_2@@Base+0x598>
   2d3ac:	sub	x0, x29, #0x18
   2d3b0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d3b4:	sub	x0, x29, #0x28
   2d3b8:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d3bc:	mul	x25, x19, x21
   2d3c0:	ldr	w23, [sp, #12]
   2d3c4:	ldp	x28, x27, [sp, #64]
   2d3c8:	ldr	x21, [sp, #80]
   2d3cc:	cbnz	x21, 2d314 <mpfr_exp_2@@Base+0x4d8>
   2d3d0:	ldur	x26, [x29, #-48]
   2d3d4:	sub	x0, x29, #0x50
   2d3d8:	sub	x1, x29, #0x80
   2d3dc:	mov	x2, x26
   2d3e0:	mov	w3, wzr
   2d3e4:	bl	c4e0 <mpfr_set_z_2exp@plt>
   2d3e8:	subs	x19, x25, #0x1
   2d3ec:	b.eq	2d4e4 <mpfr_exp_2@@Base+0x6a8>  // b.none
   2d3f0:	cbz	x25, 2d4fc <mpfr_exp_2@@Base+0x6c0>
   2d3f4:	clz	x8, x19
   2d3f8:	mov	w9, #0x40                  	// #64
   2d3fc:	sub	x8, x9, x8
   2d400:	ldur	x9, [x29, #-64]
   2d404:	add	x10, x20, #0x105
   2d408:	cmp	x9, x10
   2d40c:	b.lt	2d444 <mpfr_exp_2@@Base+0x608>  // b.tstop
   2d410:	ldur	x9, [x29, #-80]
   2d414:	ldp	x3, x10, [sp, #40]
   2d418:	ldur	x0, [x29, #-56]
   2d41c:	sub	x11, x9, #0x1
   2d420:	add	x9, x9, #0x3e
   2d424:	cmp	x11, #0x0
   2d428:	csel	x9, x9, x11, lt  // lt = tstop
   2d42c:	add	x10, x10, x24
   2d430:	asr	x9, x9, #6
   2d434:	add	x1, x9, #0x1
   2d438:	sub	x2, x10, x8
   2d43c:	bl	c370 <mpfr_round_p@plt>
   2d440:	cbnz	w0, 2d534 <mpfr_exp_2@@Base+0x6f8>
   2d444:	ldr	x19, [sp, #24]
   2d448:	sub	x8, x20, x24
   2d44c:	cmp	x19, x8
   2d450:	b.gt	2d518 <mpfr_exp_2@@Base+0x6dc>
   2d454:	ldr	x8, [sp, #16]
   2d458:	add	x24, x24, x19
   2d45c:	cmp	x24, #0x0
   2d460:	add	x19, x24, x8
   2d464:	cinc	x8, x24, lt  // lt = tstop
   2d468:	cmp	x19, x20
   2d46c:	b.gt	2d5bc <mpfr_exp_2@@Base+0x780>
   2d470:	asr	x8, x8, #1
   2d474:	str	x8, [sp, #24]
   2d478:	sub	x8, x19, #0x1
   2d47c:	add	x9, x19, #0x3e
   2d480:	cmp	x8, #0x0
   2d484:	ldr	x1, [sp, #96]
   2d488:	csel	x8, x9, x8, lt  // lt = tstop
   2d48c:	asr	x8, x8, #6
   2d490:	add	x21, x8, #0x1
   2d494:	lsl	x2, x21, #4
   2d498:	str	x2, [sp, #96]
   2d49c:	cbz	x1, 2d4ac <mpfr_exp_2@@Base+0x670>
   2d4a0:	ldr	x0, [sp, #104]
   2d4a4:	bl	c200 <mpfr_reallocate_func@plt>
   2d4a8:	b	2d4b4 <mpfr_exp_2@@Base+0x678>
   2d4ac:	mov	x0, x2
   2d4b0:	bl	ccd0 <mpfr_allocate_func@plt>
   2d4b4:	mov	w8, #0x1                   	// #1
   2d4b8:	stur	w8, [x29, #-104]
   2d4bc:	add	x8, x0, x21, lsl #3
   2d4c0:	ldr	x21, [sp, #80]
   2d4c4:	ldr	x9, [sp, #56]
   2d4c8:	stur	x19, [x29, #-112]
   2d4cc:	stp	x0, x19, [x29, #-88]
   2d4d0:	mov	w19, #0x1                   	// #1
   2d4d4:	str	x0, [sp, #104]
   2d4d8:	stur	x8, [x29, #-56]
   2d4dc:	stur	w19, [x29, #-72]
   2d4e0:	b	2d034 <mpfr_exp_2@@Base+0x1f8>
   2d4e4:	mov	x8, xzr
   2d4e8:	ldur	x9, [x29, #-64]
   2d4ec:	add	x10, x20, #0x105
   2d4f0:	cmp	x9, x10
   2d4f4:	b.ge	2d410 <mpfr_exp_2@@Base+0x5d4>  // b.tcont
   2d4f8:	b	2d444 <mpfr_exp_2@@Base+0x608>
   2d4fc:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2d500:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2d504:	mov	w1, #0xf5                  	// #245
   2d508:	add	x0, x0, #0x173
   2d50c:	add	x2, x2, #0x18c
   2d510:	bl	cb20 <mpfr_assert_fail@plt>
   2d514:	b	2d3f4 <mpfr_exp_2@@Base+0x5b8>
   2d518:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2d51c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2d520:	mov	w1, #0x102                 	// #258
   2d524:	add	x0, x0, #0x173
   2d528:	add	x2, x2, #0x194
   2d52c:	bl	cb20 <mpfr_assert_fail@plt>
   2d530:	b	2d454 <mpfr_exp_2@@Base+0x618>
   2d534:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2d538:	ldr	x1, [x0, #2640]
   2d53c:	add	x0, x0, #0xa50
   2d540:	blr	x1
   2d544:	ldr	x8, [sp, #56]
   2d548:	sub	x1, x29, #0x50
   2d54c:	mov	x2, x22
   2d550:	mov	w3, w23
   2d554:	str	wzr, [x8, x0]
   2d558:	ldr	x0, [sp, #32]
   2d55c:	bl	bbe0 <mpfr_mul_2si@plt>
   2d560:	mov	w19, w0
   2d564:	sub	x0, x29, #0x80
   2d568:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d56c:	ldr	x1, [sp, #96]
   2d570:	cbz	x1, 2d57c <mpfr_exp_2@@Base+0x740>
   2d574:	ldr	x0, [sp, #104]
   2d578:	bl	cc00 <mpfr_free_func@plt>
   2d57c:	mov	w0, w19
   2d580:	ldp	x20, x19, [sp, #448]
   2d584:	ldp	x22, x21, [sp, #432]
   2d588:	ldp	x24, x23, [sp, #416]
   2d58c:	ldp	x26, x25, [sp, #400]
   2d590:	ldp	x28, x27, [sp, #384]
   2d594:	ldp	x29, x30, [sp, #368]
   2d598:	add	sp, sp, #0x1d0
   2d59c:	ret
   2d5a0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2d5a4:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2d5a8:	add	x0, x0, #0x173
   2d5ac:	add	x2, x2, #0x17b
   2d5b0:	mov	w1, #0x9f                  	// #159
   2d5b4:	bl	cb20 <mpfr_assert_fail@plt>
   2d5b8:	b	2cf64 <mpfr_exp_2@@Base+0x128>
   2d5bc:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2d5c0:	stp	x29, x30, [sp, #-96]!
   2d5c4:	stp	x28, x27, [sp, #16]
   2d5c8:	stp	x26, x25, [sp, #32]
   2d5cc:	stp	x24, x23, [sp, #48]
   2d5d0:	stp	x22, x21, [sp, #64]
   2d5d4:	stp	x20, x19, [sp, #80]
   2d5d8:	mov	x29, sp
   2d5dc:	sub	sp, sp, #0x70
   2d5e0:	stp	x0, x3, [x29, #-72]
   2d5e4:	ldr	x8, [x1, #16]
   2d5e8:	mov	x24, x1
   2d5ec:	stur	x2, [x29, #-80]
   2d5f0:	neg	x8, x8
   2d5f4:	sdiv	x0, x2, x8
   2d5f8:	bl	bf70 <__gmpfr_isqrt@plt>
   2d5fc:	cmp	x0, #0x2
   2d600:	mov	w8, #0x2                   	// #2
   2d604:	csel	x27, x0, x8, hi  // hi = pmore
   2d608:	add	x19, x27, #0x1
   2d60c:	lsl	x1, x19, #4
   2d610:	cmp	x1, #0x4, lsl #12
   2d614:	stur	xzr, [x29, #-56]
   2d618:	b.hi	2da68 <mpfr_exp_2@@Base+0xc2c>  // b.pmore
   2d61c:	add	x9, x1, #0xf
   2d620:	mov	x8, sp
   2d624:	and	x9, x9, #0xfffffffffffffff0
   2d628:	sub	x22, x8, x9
   2d62c:	mov	sp, x22
   2d630:	lsl	x1, x19, #3
   2d634:	cmp	x1, #0x4, lsl #12
   2d638:	b.hi	2da80 <mpfr_exp_2@@Base+0xc44>  // b.pmore
   2d63c:	add	x9, x1, #0xf
   2d640:	mov	x8, sp
   2d644:	and	x9, x9, #0xfffffffffffffff0
   2d648:	sub	x23, x8, x9
   2d64c:	mov	sp, x23
   2d650:	sub	x0, x29, #0x30
   2d654:	bl	bfe0 <mpfr_mpz_init@plt>
   2d658:	sub	x0, x29, #0x20
   2d65c:	bl	bfe0 <mpfr_mpz_init@plt>
   2d660:	sub	x0, x29, #0x10
   2d664:	bl	bfe0 <mpfr_mpz_init@plt>
   2d668:	ldur	x0, [x29, #-72]
   2d66c:	mov	x1, xzr
   2d670:	bl	bd00 <__gmpz_set_ui@plt>
   2d674:	ldur	x9, [x29, #-80]
   2d678:	mov	w8, #0x1                   	// #1
   2d67c:	mov	x19, xzr
   2d680:	mov	x25, x22
   2d684:	sub	x20, x8, x9
   2d688:	ldur	x8, [x29, #-64]
   2d68c:	str	x20, [x8]
   2d690:	mov	x0, x25
   2d694:	bl	bfe0 <mpfr_mpz_init@plt>
   2d698:	add	x19, x19, #0x1
   2d69c:	cmp	x19, x27
   2d6a0:	add	x25, x25, #0x10
   2d6a4:	b.ls	2d690 <mpfr_exp_2@@Base+0x854>  // b.plast
   2d6a8:	add	x25, x22, #0x10
   2d6ac:	mov	x0, x25
   2d6b0:	mov	x1, x24
   2d6b4:	bl	caa0 <mpfr_get_z_2exp@plt>
   2d6b8:	subs	x2, x20, x0
   2d6bc:	str	x0, [x23, #8]
   2d6c0:	b.le	2da90 <mpfr_exp_2@@Base+0xc54>
   2d6c4:	mov	x0, x25
   2d6c8:	mov	x1, x25
   2d6cc:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d6d0:	sub	x0, x29, #0x10
   2d6d4:	mov	x1, x25
   2d6d8:	mov	x2, x25
   2d6dc:	str	x20, [x23, #8]
   2d6e0:	bl	c030 <__gmpz_mul@plt>
   2d6e4:	ldur	x8, [x29, #-80]
   2d6e8:	add	x0, x22, #0x20
   2d6ec:	sub	x1, x29, #0x10
   2d6f0:	sub	x24, x8, #0x1
   2d6f4:	mov	x2, x24
   2d6f8:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d6fc:	cmp	x27, #0x3
   2d700:	str	x20, [x23, #16]
   2d704:	b.cs	2da0c <mpfr_exp_2@@Base+0xbd0>  // b.hs, b.nlast
   2d708:	mov	w1, #0x1                   	// #1
   2d70c:	mov	x0, x22
   2d710:	bl	bd00 <__gmpz_set_ui@plt>
   2d714:	mov	x0, x22
   2d718:	mov	x1, x22
   2d71c:	mov	x2, x24
   2d720:	bl	c230 <__gmpz_mul_2exp@plt>
   2d724:	sub	x0, x29, #0x20
   2d728:	mov	w1, #0x1                   	// #1
   2d72c:	str	x20, [x23]
   2d730:	bl	bd00 <__gmpz_set_ui@plt>
   2d734:	ldur	x24, [x29, #-80]
   2d738:	sub	x20, x27, #0x1
   2d73c:	add	x8, x22, x27, lsl #4
   2d740:	mov	x28, xzr
   2d744:	neg	x9, x24
   2d748:	stur	x9, [x29, #-104]
   2d74c:	add	x9, x22, x20, lsl #4
   2d750:	mov	x25, xzr
   2d754:	stp	x9, x8, [x29, #-96]
   2d758:	sub	x8, x8, #0x20
   2d75c:	stur	x8, [x29, #-112]
   2d760:	mov	w8, #0x1                   	// #1
   2d764:	sub	x19, x8, x24
   2d768:	cbz	x28, 2d7b8 <mpfr_exp_2@@Base+0x97c>
   2d76c:	mov	x21, xzr
   2d770:	mov	x26, x22
   2d774:	ldr	x8, [x23, x21, lsl #3]
   2d778:	subs	x2, x19, x8
   2d77c:	b.le	2d7a4 <mpfr_exp_2@@Base+0x968>
   2d780:	mov	x0, x26
   2d784:	mov	x1, x26
   2d788:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d78c:	str	x19, [x23, x21, lsl #3]
   2d790:	add	x21, x21, #0x1
   2d794:	cmp	x21, x27
   2d798:	add	x26, x26, #0x10
   2d79c:	b.cc	2d774 <mpfr_exp_2@@Base+0x938>  // b.lo, b.ul, b.last
   2d7a0:	b	2d7b8 <mpfr_exp_2@@Base+0x97c>
   2d7a4:	sub	x2, x8, x19
   2d7a8:	mov	x0, x26
   2d7ac:	mov	x1, x26
   2d7b0:	bl	c230 <__gmpz_mul_2exp@plt>
   2d7b4:	b	2d78c <mpfr_exp_2@@Base+0x950>
   2d7b8:	ldr	x8, [x23, x20, lsl #3]
   2d7bc:	subs	x2, x19, x8
   2d7c0:	b.le	2d960 <mpfr_exp_2@@Base+0xb24>
   2d7c4:	ldur	x1, [x29, #-96]
   2d7c8:	sub	x0, x29, #0x10
   2d7cc:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d7d0:	cbz	x20, 2d808 <mpfr_exp_2@@Base+0x9cc>
   2d7d4:	ldur	x26, [x29, #-112]
   2d7d8:	mov	x21, x20
   2d7dc:	add	x2, x28, x21
   2d7e0:	sub	x0, x29, #0x10
   2d7e4:	sub	x1, x29, #0x10
   2d7e8:	bl	c600 <__gmpz_fdiv_q_ui@plt>
   2d7ec:	sub	x0, x29, #0x10
   2d7f0:	sub	x1, x29, #0x10
   2d7f4:	mov	x2, x26
   2d7f8:	bl	c9a0 <__gmpz_add@plt>
   2d7fc:	sub	x21, x21, #0x1
   2d800:	sub	x26, x26, #0x10
   2d804:	cbnz	x21, 2d7dc <mpfr_exp_2@@Base+0x9a0>
   2d808:	sub	x0, x29, #0x10
   2d80c:	sub	x1, x29, #0x10
   2d810:	sub	x2, x29, #0x20
   2d814:	bl	c030 <__gmpz_mul@plt>
   2d818:	ldur	x8, [x29, #-64]
   2d81c:	add	x9, x19, x25
   2d820:	ldr	x8, [x8]
   2d824:	subs	x2, x8, x9
   2d828:	b.le	2d978 <mpfr_exp_2@@Base+0xb3c>
   2d82c:	sub	x0, x29, #0x10
   2d830:	sub	x1, x29, #0x10
   2d834:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d838:	ldur	x0, [x29, #-72]
   2d83c:	sub	x2, x29, #0x10
   2d840:	mov	x1, x0
   2d844:	bl	c9a0 <__gmpz_add@plt>
   2d848:	ldur	x2, [x29, #-88]
   2d84c:	sub	x0, x29, #0x10
   2d850:	sub	x1, x29, #0x20
   2d854:	bl	c030 <__gmpz_mul@plt>
   2d858:	ldr	x19, [x23, x27, lsl #3]
   2d85c:	sub	x0, x29, #0x30
   2d860:	mov	w1, #0x1                   	// #1
   2d864:	bl	bd00 <__gmpz_set_ui@plt>
   2d868:	mov	w21, #0x1                   	// #1
   2d86c:	add	x2, x28, x21
   2d870:	sub	x0, x29, #0x30
   2d874:	sub	x1, x29, #0x30
   2d878:	bl	c140 <__gmpz_mul_ui@plt>
   2d87c:	add	x21, x21, #0x1
   2d880:	cmp	x21, x27
   2d884:	b.ls	2d86c <mpfr_exp_2@@Base+0xa30>  // b.plast
   2d888:	sub	x0, x29, #0x10
   2d88c:	sub	x1, x29, #0x10
   2d890:	sub	x2, x29, #0x30
   2d894:	bl	be80 <__gmpz_fdiv_q@plt>
   2d898:	ldur	w8, [x29, #-12]
   2d89c:	add	x28, x28, x27
   2d8a0:	cbz	w8, 2d9a8 <mpfr_exp_2@@Base+0xb6c>
   2d8a4:	ldur	x9, [x29, #-8]
   2d8a8:	cmp	w8, #0x0
   2d8ac:	cneg	w8, w8, mi  // mi = first
   2d8b0:	add	x19, x19, x25
   2d8b4:	add	x9, x9, w8, uxtw #3
   2d8b8:	ldur	x9, [x9, #-8]
   2d8bc:	lsl	x8, x8, #6
   2d8c0:	sub	x0, x29, #0x20
   2d8c4:	sub	x1, x29, #0x10
   2d8c8:	clz	x9, x9
   2d8cc:	sub	x8, x8, x9
   2d8d0:	subs	x26, x8, x24
   2d8d4:	cset	w8, hi  // hi = pmore
   2d8d8:	orr	x8, x8, x24, lsr #63
   2d8dc:	cbz	x8, 2d98c <mpfr_exp_2@@Base+0xb50>
   2d8e0:	mov	x2, x26
   2d8e4:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2d8e8:	ldur	w8, [x29, #-28]
   2d8ec:	add	x25, x19, x26
   2d8f0:	cbz	w8, 2d9a0 <mpfr_exp_2@@Base+0xb64>
   2d8f4:	ldur	x9, [x29, #-24]
   2d8f8:	cmp	w8, #0x0
   2d8fc:	cneg	w8, w8, mi  // mi = first
   2d900:	add	x9, x9, w8, uxtw #3
   2d904:	ldur	x9, [x9, #-8]
   2d908:	lsl	x8, x8, #6
   2d90c:	clz	x9, x9
   2d910:	sub	x8, x8, x9
   2d914:	ldp	x10, x11, [x29, #-72]
   2d918:	ldur	x12, [x29, #-80]
   2d91c:	add	x8, x8, x25
   2d920:	ldr	w9, [x10, #4]
   2d924:	ldr	x10, [x10, #8]
   2d928:	ldr	x11, [x11]
   2d92c:	add	x12, x8, x12
   2d930:	cmp	w9, #0x0
   2d934:	cneg	w9, w9, mi  // mi = first
   2d938:	add	x10, x10, w9, uxtw #3
   2d93c:	ldur	x10, [x10, #-8]
   2d940:	sub	x11, x12, x11
   2d944:	clz	x10, x10
   2d948:	add	x10, x11, x10
   2d94c:	ldur	x11, [x29, #-104]
   2d950:	sub	x24, x10, x9, lsl #6
   2d954:	cmp	x8, x11
   2d958:	b.hi	2d760 <mpfr_exp_2@@Base+0x924>  // b.pmore
   2d95c:	b	2d9a8 <mpfr_exp_2@@Base+0xb6c>
   2d960:	ldur	x1, [x29, #-96]
   2d964:	sub	x2, x8, x19
   2d968:	sub	x0, x29, #0x10
   2d96c:	bl	c230 <__gmpz_mul_2exp@plt>
   2d970:	cbnz	x20, 2d7d4 <mpfr_exp_2@@Base+0x998>
   2d974:	b	2d808 <mpfr_exp_2@@Base+0x9cc>
   2d978:	sub	x2, x9, x8
   2d97c:	sub	x0, x29, #0x10
   2d980:	sub	x1, x29, #0x10
   2d984:	bl	c230 <__gmpz_mul_2exp@plt>
   2d988:	b	2d838 <mpfr_exp_2@@Base+0x9fc>
   2d98c:	bl	bff0 <__gmpz_set@plt>
   2d990:	mov	x26, xzr
   2d994:	ldur	w8, [x29, #-28]
   2d998:	add	x25, x19, x26
   2d99c:	cbnz	w8, 2d8f4 <mpfr_exp_2@@Base+0xab8>
   2d9a0:	mov	w8, #0x1                   	// #1
   2d9a4:	b	2d914 <mpfr_exp_2@@Base+0xad8>
   2d9a8:	mov	x19, xzr
   2d9ac:	mov	x0, x22
   2d9b0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d9b4:	add	x19, x19, #0x1
   2d9b8:	cmp	x19, x27
   2d9bc:	add	x22, x22, #0x10
   2d9c0:	b.ls	2d9ac <mpfr_exp_2@@Base+0xb70>  // b.plast
   2d9c4:	ldur	x0, [x29, #-56]
   2d9c8:	cbnz	x0, 2daa4 <mpfr_exp_2@@Base+0xc68>
   2d9cc:	sub	x0, x29, #0x20
   2d9d0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d9d4:	sub	x0, x29, #0x10
   2d9d8:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d9dc:	sub	x0, x29, #0x30
   2d9e0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2d9e4:	add	x8, x28, #0x4
   2d9e8:	mul	x0, x8, x28
   2d9ec:	mov	sp, x29
   2d9f0:	ldp	x20, x19, [sp, #80]
   2d9f4:	ldp	x22, x21, [sp, #64]
   2d9f8:	ldp	x24, x23, [sp, #48]
   2d9fc:	ldp	x26, x25, [sp, #32]
   2da00:	ldp	x28, x27, [sp, #16]
   2da04:	ldp	x29, x30, [sp], #96
   2da08:	ret
   2da0c:	add	x26, x22, #0x30
   2da10:	mov	w19, #0x3                   	// #3
   2da14:	b	2da54 <mpfr_exp_2@@Base+0xc18>
   2da18:	lsl	x8, x19, #3
   2da1c:	and	x8, x8, #0xfffffffffffffff0
   2da20:	add	x1, x22, x8
   2da24:	sub	x0, x29, #0x10
   2da28:	mov	x2, x1
   2da2c:	bl	c030 <__gmpz_mul@plt>
   2da30:	sub	x1, x29, #0x10
   2da34:	mov	x0, x26
   2da38:	mov	x2, x24
   2da3c:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2da40:	str	x20, [x23, x19, lsl #3]
   2da44:	add	x19, x19, #0x1
   2da48:	cmp	x19, x27
   2da4c:	add	x26, x26, #0x10
   2da50:	b.hi	2d708 <mpfr_exp_2@@Base+0x8cc>  // b.pmore
   2da54:	tbz	w19, #0, 2da18 <mpfr_exp_2@@Base+0xbdc>
   2da58:	sub	x1, x26, #0x10
   2da5c:	sub	x0, x29, #0x10
   2da60:	mov	x2, x25
   2da64:	b	2da2c <mpfr_exp_2@@Base+0xbf0>
   2da68:	sub	x0, x29, #0x38
   2da6c:	bl	be10 <mpfr_tmp_allocate@plt>
   2da70:	mov	x22, x0
   2da74:	lsl	x1, x19, #3
   2da78:	cmp	x1, #0x4, lsl #12
   2da7c:	b.ls	2d63c <mpfr_exp_2@@Base+0x800>  // b.plast
   2da80:	sub	x0, x29, #0x38
   2da84:	bl	be10 <mpfr_tmp_allocate@plt>
   2da88:	mov	x23, x0
   2da8c:	b	2d650 <mpfr_exp_2@@Base+0x814>
   2da90:	sub	x2, x0, x20
   2da94:	mov	x0, x25
   2da98:	mov	x1, x25
   2da9c:	bl	c230 <__gmpz_mul_2exp@plt>
   2daa0:	b	2d6d0 <mpfr_exp_2@@Base+0x894>
   2daa4:	bl	c400 <mpfr_tmp_free@plt>
   2daa8:	b	2d9cc <mpfr_exp_2@@Base+0xb90>

000000000002daac <mpfr_asin@@Base>:
   2daac:	sub	sp, sp, #0x90
   2dab0:	stp	x29, x30, [sp, #48]
   2dab4:	stp	x28, x27, [sp, #64]
   2dab8:	stp	x26, x25, [sp, #80]
   2dabc:	stp	x24, x23, [sp, #96]
   2dac0:	stp	x22, x21, [sp, #112]
   2dac4:	stp	x20, x19, [sp, #128]
   2dac8:	ldr	x8, [x1, #16]
   2dacc:	mov	x23, #0x2                   	// #2
   2dad0:	movk	x23, #0x8000, lsl #48
   2dad4:	add	x9, x23, #0x2
   2dad8:	mov	x21, x1
   2dadc:	cmp	x8, x9
   2dae0:	mov	x19, x0
   2dae4:	add	x29, sp, #0x30
   2dae8:	b.lt	2dd8c <mpfr_asin@@Base+0x2e0>  // b.tstop
   2daec:	mov	w20, w2
   2daf0:	tbz	x8, #63, 2db0c <mpfr_asin@@Base+0x60>
   2daf4:	ldr	x9, [x19]
   2daf8:	mov	w10, #0x2                   	// #2
   2dafc:	sub	x2, x10, x8, lsl #1
   2db00:	add	x8, x9, #0x1
   2db04:	cmp	x2, x8
   2db08:	b.hi	2de44 <mpfr_asin@@Base+0x398>  // b.pmore
   2db0c:	ldr	x1, [x21]
   2db10:	add	x0, sp, #0x10
   2db14:	bl	ca60 <mpfr_init2@plt>
   2db18:	add	x0, sp, #0x10
   2db1c:	mov	w3, #0x1                   	// #1
   2db20:	mov	x1, x21
   2db24:	mov	w2, wzr
   2db28:	bl	c690 <mpfr_set4@plt>
   2db2c:	add	x0, sp, #0x10
   2db30:	mov	w1, #0x1                   	// #1
   2db34:	mov	x2, xzr
   2db38:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   2db3c:	mov	w22, w0
   2db40:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2db44:	ldr	x1, [x0, #2640]
   2db48:	add	x0, x0, #0xa50
   2db4c:	blr	x1
   2db50:	mrs	x25, tpidr_el0
   2db54:	ldr	w26, [x25, x0]
   2db58:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2db5c:	ldr	x1, [x0, #2576]
   2db60:	add	x0, x0, #0xa10
   2db64:	blr	x1
   2db68:	ldr	x27, [x25, x0]
   2db6c:	mov	x8, x0
   2db70:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2db74:	ldr	x1, [x0, #2608]
   2db78:	add	x0, x0, #0xa30
   2db7c:	blr	x1
   2db80:	ldr	x28, [x25, x0]
   2db84:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2db88:	str	x9, [x25, x8]
   2db8c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2db90:	str	x8, [x25, x0]
   2db94:	add	x0, sp, #0x10
   2db98:	tbz	w22, #31, 2ddc4 <mpfr_asin@@Base+0x318>
   2db9c:	add	x2, sp, #0x10
   2dba0:	mov	w1, #0x1                   	// #1
   2dba4:	mov	w3, #0x3                   	// #3
   2dba8:	bl	ca30 <mpfr_ui_sub@plt>
   2dbac:	ldr	x8, [sp, #32]
   2dbb0:	ldr	x10, [x19]
   2dbb4:	mov	w9, #0x2                   	// #2
   2dbb8:	cmp	w20, #0x0
   2dbbc:	sub	x24, x9, x8
   2dbc0:	add	x8, x10, x24
   2dbc4:	mov	w11, #0x40                  	// #64
   2dbc8:	cset	w22, eq  // eq = none
   2dbcc:	add	x23, x8, #0xa
   2dbd0:	str	x11, [sp, #8]
   2dbd4:	add	x0, sp, #0x10
   2dbd8:	mov	x1, x23
   2dbdc:	bl	bf20 <mpfr_set_prec@plt>
   2dbe0:	add	x0, sp, #0x10
   2dbe4:	mov	x1, x21
   2dbe8:	mov	w2, wzr
   2dbec:	bl	c3f0 <mpfr_sqr@plt>
   2dbf0:	add	x0, sp, #0x10
   2dbf4:	add	x2, sp, #0x10
   2dbf8:	mov	w1, #0x1                   	// #1
   2dbfc:	mov	w3, wzr
   2dc00:	bl	ca30 <mpfr_ui_sub@plt>
   2dc04:	add	x0, sp, #0x10
   2dc08:	add	x1, sp, #0x10
   2dc0c:	mov	w2, wzr
   2dc10:	bl	c920 <mpfr_sqrt@plt>
   2dc14:	add	x0, sp, #0x10
   2dc18:	add	x2, sp, #0x10
   2dc1c:	mov	x1, x21
   2dc20:	mov	w3, wzr
   2dc24:	bl	c610 <mpfr_div@plt>
   2dc28:	add	x0, sp, #0x10
   2dc2c:	add	x1, sp, #0x10
   2dc30:	mov	w2, wzr
   2dc34:	bl	c680 <mpfr_atan@plt>
   2dc38:	ldr	x8, [sp, #32]
   2dc3c:	mov	x9, #0x2                   	// #2
   2dc40:	movk	x9, #0x8000, lsl #48
   2dc44:	add	x9, x9, #0x2
   2dc48:	cmp	x8, x9
   2dc4c:	b.lt	2dc84 <mpfr_asin@@Base+0x1d8>  // b.tstop
   2dc50:	ldr	x8, [sp, #16]
   2dc54:	ldr	x9, [x19]
   2dc58:	ldr	x0, [sp, #40]
   2dc5c:	sub	x2, x23, x24
   2dc60:	sub	x10, x8, #0x1
   2dc64:	add	x8, x8, #0x3e
   2dc68:	cmp	x10, #0x0
   2dc6c:	csel	x8, x8, x10, lt  // lt = tstop
   2dc70:	asr	x8, x8, #6
   2dc74:	add	x1, x8, #0x1
   2dc78:	add	x3, x9, x22
   2dc7c:	bl	c370 <mpfr_round_p@plt>
   2dc80:	cbnz	w0, 2dcdc <mpfr_asin@@Base+0x230>
   2dc84:	mov	x8, #0x2                   	// #2
   2dc88:	ldr	x9, [sp, #8]
   2dc8c:	movk	x8, #0x8000, lsl #48
   2dc90:	sub	x8, x8, x23
   2dc94:	sub	x8, x8, #0x103
   2dc98:	cmp	x9, x8
   2dc9c:	mov	x8, x9
   2dca0:	b.gt	2dcbc <mpfr_asin@@Base+0x210>
   2dca4:	add	x23, x23, x8
   2dca8:	cmp	x23, #0x0
   2dcac:	cinc	x8, x23, lt  // lt = tstop
   2dcb0:	asr	x8, x8, #1
   2dcb4:	str	x8, [sp, #8]
   2dcb8:	b	2dbd4 <mpfr_asin@@Base+0x128>
   2dcbc:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2dcc0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   2dcc4:	mov	w1, #0x73                  	// #115
   2dcc8:	add	x0, x0, #0x1d7
   2dccc:	add	x2, x2, #0x622
   2dcd0:	bl	cb20 <mpfr_assert_fail@plt>
   2dcd4:	ldr	x8, [sp, #8]
   2dcd8:	b	2dca4 <mpfr_asin@@Base+0x1f8>
   2dcdc:	ldr	w3, [sp, #24]
   2dce0:	add	x1, sp, #0x10
   2dce4:	mov	x0, x19
   2dce8:	mov	w2, w20
   2dcec:	bl	c690 <mpfr_set4@plt>
   2dcf0:	mov	w22, w0
   2dcf4:	add	x0, sp, #0x10
   2dcf8:	bl	c0b0 <mpfr_clear@plt>
   2dcfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2dd00:	ldr	x1, [x0, #2640]
   2dd04:	add	x0, x0, #0xa50
   2dd08:	blr	x1
   2dd0c:	str	w26, [x25, x0]
   2dd10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2dd14:	ldr	x1, [x0, #2576]
   2dd18:	add	x0, x0, #0xa10
   2dd1c:	blr	x1
   2dd20:	str	x27, [x25, x0]
   2dd24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2dd28:	ldr	x1, [x0, #2608]
   2dd2c:	add	x0, x0, #0xa30
   2dd30:	blr	x1
   2dd34:	str	x28, [x25, x0]
   2dd38:	ldr	x8, [x19, #16]
   2dd3c:	cmp	x8, x28
   2dd40:	b.gt	2de14 <mpfr_asin@@Base+0x368>
   2dd44:	cmp	x8, x27
   2dd48:	b.lt	2de14 <mpfr_asin@@Base+0x368>  // b.tstop
   2dd4c:	cbz	w22, 2dd68 <mpfr_asin@@Base+0x2bc>
   2dd50:	orr	w8, w26, #0x8
   2dd54:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2dd58:	ldr	x1, [x0, #2640]
   2dd5c:	add	x0, x0, #0xa50
   2dd60:	blr	x1
   2dd64:	str	w8, [x25, x0]
   2dd68:	mov	w0, w22
   2dd6c:	ldp	x20, x19, [sp, #128]
   2dd70:	ldp	x22, x21, [sp, #112]
   2dd74:	ldp	x24, x23, [sp, #96]
   2dd78:	ldp	x26, x25, [sp, #80]
   2dd7c:	ldp	x28, x27, [sp, #64]
   2dd80:	ldp	x29, x30, [sp, #48]
   2dd84:	add	sp, sp, #0x90
   2dd88:	ret
   2dd8c:	and	x8, x8, #0xfffffffffffffffe
   2dd90:	cmp	x8, x23
   2dd94:	b.ne	2de2c <mpfr_asin@@Base+0x380>  // b.any
   2dd98:	str	x23, [x19, #16]
   2dd9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2dda0:	ldr	x1, [x0, #2640]
   2dda4:	add	x0, x0, #0xa50
   2dda8:	blr	x1
   2ddac:	mrs	x8, tpidr_el0
   2ddb0:	ldr	w9, [x8, x0]
   2ddb4:	mov	w22, wzr
   2ddb8:	orr	w9, w9, #0x4
   2ddbc:	str	w9, [x8, x0]
   2ddc0:	b	2dd68 <mpfr_asin@@Base+0x2bc>
   2ddc4:	bl	c0b0 <mpfr_clear@plt>
   2ddc8:	cbz	w22, 2de64 <mpfr_asin@@Base+0x3b8>
   2ddcc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ddd0:	ldr	x1, [x0, #2576]
   2ddd4:	add	x0, x0, #0xa10
   2ddd8:	blr	x1
   2dddc:	str	x27, [x25, x0]
   2dde0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2dde4:	ldr	x1, [x0, #2608]
   2dde8:	add	x0, x0, #0xa30
   2ddec:	blr	x1
   2ddf0:	str	x28, [x25, x0]
   2ddf4:	str	x23, [x19, #16]
   2ddf8:	orr	w8, w26, #0x4
   2ddfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2de00:	ldr	x1, [x0, #2640]
   2de04:	add	x0, x0, #0xa50
   2de08:	blr	x1
   2de0c:	mov	w22, wzr
   2de10:	b	2dd64 <mpfr_asin@@Base+0x2b8>
   2de14:	mov	x0, x19
   2de18:	mov	w1, w22
   2de1c:	mov	w2, w20
   2de20:	bl	cb10 <mpfr_check_range@plt>
   2de24:	mov	w22, w0
   2de28:	b	2dd68 <mpfr_asin@@Base+0x2bc>
   2de2c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2de30:	str	x8, [x19, #16]
   2de34:	ldr	w8, [x21, #8]
   2de38:	mov	w22, wzr
   2de3c:	str	w8, [x19, #8]
   2de40:	b	2dd68 <mpfr_asin@@Base+0x2bc>
   2de44:	mov	w3, #0x1                   	// #1
   2de48:	mov	x0, x19
   2de4c:	mov	x1, x21
   2de50:	mov	w4, w20
   2de54:	bl	c530 <mpfr_round_near_x@plt>
   2de58:	mov	w22, w0
   2de5c:	cbnz	w0, 2dd68 <mpfr_asin@@Base+0x2bc>
   2de60:	b	2db0c <mpfr_asin@@Base+0x60>
   2de64:	ldr	w8, [x21, #8]
   2de68:	cmp	w8, #0x1
   2de6c:	b.lt	2de98 <mpfr_asin@@Base+0x3ec>  // b.tstop
   2de70:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2de74:	ldr	x1, [x0, #2688]
   2de78:	add	x0, x0, #0xa80
   2de7c:	blr	x1
   2de80:	add	x1, x25, x0
   2de84:	mov	x0, x19
   2de88:	mov	w2, w20
   2de8c:	bl	c380 <mpfr_cache@plt>
   2de90:	mov	w22, w0
   2de94:	b	2dedc <mpfr_asin@@Base+0x430>
   2de98:	cmp	w20, #0x3
   2de9c:	mov	w8, #0x2                   	// #2
   2dea0:	csel	w8, w8, w20, eq  // eq = none
   2dea4:	cmp	w20, #0x2
   2dea8:	mov	w9, #0x3                   	// #3
   2deac:	csel	w2, w9, w8, eq  // eq = none
   2deb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2deb4:	ldr	x1, [x0, #2688]
   2deb8:	add	x0, x0, #0xa80
   2debc:	blr	x1
   2dec0:	add	x1, x25, x0
   2dec4:	mov	x0, x19
   2dec8:	bl	c380 <mpfr_cache@plt>
   2decc:	ldr	w8, [x19, #8]
   2ded0:	neg	w22, w0
   2ded4:	neg	w8, w8
   2ded8:	str	w8, [x19, #8]
   2dedc:	mov	w2, #0x1                   	// #1
   2dee0:	mov	x0, x19
   2dee4:	mov	x1, x19
   2dee8:	mov	w3, w20
   2deec:	bl	c8f0 <mpfr_div_2ui@plt>
   2def0:	b	2dcfc <mpfr_asin@@Base+0x250>

000000000002def4 <mpfr_const_euler_internal@@Base>:
   2def4:	sub	sp, sp, #0x130
   2def8:	stp	x29, x30, [sp, #208]
   2defc:	stp	x28, x27, [sp, #224]
   2df00:	stp	x26, x25, [sp, #240]
   2df04:	stp	x24, x23, [sp, #256]
   2df08:	stp	x22, x21, [sp, #272]
   2df0c:	stp	x20, x19, [sp, #288]
   2df10:	ldr	x27, [x0]
   2df14:	mov	w24, w1
   2df18:	mov	x25, x0
   2df1c:	add	x0, sp, #0x18
   2df20:	add	x26, x27, #0x18
   2df24:	mov	x1, x26
   2df28:	add	x29, sp, #0xd0
   2df2c:	bl	ca60 <mpfr_init2@plt>
   2df30:	add	x0, sp, #0x68
   2df34:	add	x23, sp, #0x68
   2df38:	bl	bfe0 <mpfr_mpz_init@plt>
   2df3c:	add	x19, x23, #0x10
   2df40:	mov	x0, x19
   2df44:	bl	bfe0 <mpfr_mpz_init@plt>
   2df48:	add	x20, x23, #0x20
   2df4c:	mov	x0, x20
   2df50:	bl	bfe0 <mpfr_mpz_init@plt>
   2df54:	add	x21, x23, #0x30
   2df58:	mov	x0, x21
   2df5c:	bl	bfe0 <mpfr_mpz_init@plt>
   2df60:	add	x22, x23, #0x40
   2df64:	mov	x0, x22
   2df68:	bl	bfe0 <mpfr_mpz_init@plt>
   2df6c:	add	x23, x23, #0x50
   2df70:	mov	x0, x23
   2df74:	bl	bfe0 <mpfr_mpz_init@plt>
   2df78:	add	x0, sp, #0x58
   2df7c:	bl	bfe0 <mpfr_mpz_init@plt>
   2df80:	add	x0, sp, #0x48
   2df84:	bl	bfe0 <mpfr_mpz_init@plt>
   2df88:	add	x0, sp, #0x38
   2df8c:	bl	bfe0 <mpfr_mpz_init@plt>
   2df90:	cmp	w24, #0x0
   2df94:	cinc	x8, x27, eq  // eq = none
   2df98:	str	x8, [sp, #16]
   2df9c:	mov	w8, #0x40                  	// #64
   2dfa0:	add	x1, x26, #0x5
   2dfa4:	add	x0, sp, #0x58
   2dfa8:	str	x8, [sp, #8]
   2dfac:	bl	bd00 <__gmpz_set_ui@plt>
   2dfb0:	mov	w2, #0x3882                	// #14466
   2dfb4:	add	x0, sp, #0x58
   2dfb8:	add	x1, sp, #0x58
   2dfbc:	movk	w2, #0xd, lsl #16
   2dfc0:	bl	c140 <__gmpz_mul_ui@plt>
   2dfc4:	mov	w2, #0x9680                	// #38528
   2dfc8:	add	x0, sp, #0x58
   2dfcc:	add	x1, sp, #0x58
   2dfd0:	movk	w2, #0x98, lsl #16
   2dfd4:	bl	bf00 <__gmpz_cdiv_q_ui@plt>
   2dfd8:	ldr	x8, [sp, #96]
   2dfdc:	ldr	w9, [sp, #92]
   2dfe0:	add	x0, sp, #0x58
   2dfe4:	ldr	x8, [x8]
   2dfe8:	cmp	w9, #0x0
   2dfec:	csel	x27, xzr, x8, eq  // eq = none
   2dff0:	mov	x1, x27
   2dff4:	bl	bd00 <__gmpz_set_ui@plt>
   2dff8:	mov	w2, #0xd882                	// #55426
   2dffc:	add	x0, sp, #0x58
   2e000:	add	x1, sp, #0x58
   2e004:	movk	w2, #0x4b, lsl #16
   2e008:	bl	c140 <__gmpz_mul_ui@plt>
   2e00c:	mov	w2, #0x4240                	// #16960
   2e010:	add	x0, sp, #0x58
   2e014:	add	x1, sp, #0x58
   2e018:	movk	w2, #0xf, lsl #16
   2e01c:	bl	bf00 <__gmpz_cdiv_q_ui@plt>
   2e020:	add	x0, sp, #0x58
   2e024:	add	x1, sp, #0x58
   2e028:	mov	w2, #0x1                   	// #1
   2e02c:	bl	c360 <__gmpz_add_ui@plt>
   2e030:	ldr	x8, [sp, #96]
   2e034:	ldr	w9, [sp, #92]
   2e038:	add	x0, sp, #0x68
   2e03c:	mov	x1, xzr
   2e040:	ldr	x8, [x8]
   2e044:	cmp	w9, #0x0
   2e048:	mov	x3, x27
   2e04c:	mov	w4, wzr
   2e050:	csel	x2, xzr, x8, eq  // eq = none
   2e054:	bl	2e31c <mpfr_const_euler@@Base+0x34>
   2e058:	mov	x0, x20
   2e05c:	mov	x1, x20
   2e060:	mov	x2, x19
   2e064:	bl	c9a0 <__gmpz_add@plt>
   2e068:	add	x0, sp, #0x58
   2e06c:	mov	x1, x20
   2e070:	mov	x2, x22
   2e074:	bl	c030 <__gmpz_mul@plt>
   2e078:	add	x0, sp, #0x48
   2e07c:	mov	x1, x23
   2e080:	mov	x2, x26
   2e084:	bl	c230 <__gmpz_mul_2exp@plt>
   2e088:	add	x0, sp, #0x38
   2e08c:	add	x1, sp, #0x48
   2e090:	add	x2, sp, #0x58
   2e094:	bl	bb80 <__gmpz_tdiv_q@plt>
   2e098:	lsl	x4, x27, #1
   2e09c:	mov	x0, x21
   2e0a0:	mov	x1, x22
   2e0a4:	mov	x2, x23
   2e0a8:	mov	x3, xzr
   2e0ac:	mov	x5, x27
   2e0b0:	mov	w6, wzr
   2e0b4:	bl	2e6c8 <mpfr_const_euler@@Base+0x3e0>
   2e0b8:	add	x0, sp, #0x58
   2e0bc:	mov	x1, x19
   2e0c0:	mov	x2, x19
   2e0c4:	bl	c030 <__gmpz_mul@plt>
   2e0c8:	add	x0, sp, #0x58
   2e0cc:	add	x1, sp, #0x58
   2e0d0:	mov	x2, x23
   2e0d4:	bl	c030 <__gmpz_mul@plt>
   2e0d8:	add	x0, sp, #0x48
   2e0dc:	mov	x1, x20
   2e0e0:	mov	x2, x20
   2e0e4:	bl	c030 <__gmpz_mul@plt>
   2e0e8:	add	x0, sp, #0x48
   2e0ec:	add	x1, sp, #0x48
   2e0f0:	mov	x2, x22
   2e0f4:	bl	c030 <__gmpz_mul@plt>
   2e0f8:	add	x0, sp, #0x58
   2e0fc:	add	x1, sp, #0x58
   2e100:	mov	x2, x26
   2e104:	bl	c230 <__gmpz_mul_2exp@plt>
   2e108:	add	x0, sp, #0x58
   2e10c:	add	x1, sp, #0x58
   2e110:	add	x2, sp, #0x48
   2e114:	bl	bb80 <__gmpz_tdiv_q@plt>
   2e118:	add	x0, sp, #0x38
   2e11c:	add	x1, sp, #0x38
   2e120:	add	x2, sp, #0x58
   2e124:	bl	be30 <__gmpz_sub@plt>
   2e128:	subs	x28, x27, #0x1
   2e12c:	b.eq	2e21c <mpfr_const_euler_internal@@Base+0x328>  // b.none
   2e130:	cbz	x27, 2e224 <mpfr_const_euler_internal@@Base+0x330>
   2e134:	clz	x8, x28
   2e138:	mov	w9, #0x40                  	// #64
   2e13c:	sub	x8, x9, x8
   2e140:	add	x1, x8, x26
   2e144:	add	x0, sp, #0x18
   2e148:	bl	bf20 <mpfr_set_prec@plt>
   2e14c:	add	x0, sp, #0x18
   2e150:	mov	w3, #0x1                   	// #1
   2e154:	mov	x1, x27
   2e158:	mov	x2, xzr
   2e15c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   2e160:	add	x0, sp, #0x18
   2e164:	add	x1, sp, #0x18
   2e168:	mov	w2, #0x1                   	// #1
   2e16c:	bl	c0d0 <mpfr_log@plt>
   2e170:	add	x0, sp, #0x18
   2e174:	add	x1, sp, #0x18
   2e178:	mov	w3, #0x1                   	// #1
   2e17c:	mov	x2, x26
   2e180:	bl	c2c0 <mpfr_mul_2ui@plt>
   2e184:	add	x0, sp, #0x18
   2e188:	add	x1, sp, #0x38
   2e18c:	add	x2, sp, #0x18
   2e190:	mov	w3, #0x1                   	// #1
   2e194:	bl	c070 <mpfr_z_sub@plt>
   2e198:	add	x0, sp, #0x18
   2e19c:	add	x1, sp, #0x18
   2e1a0:	mov	w3, #0x1                   	// #1
   2e1a4:	mov	x2, x26
   2e1a8:	bl	c8f0 <mpfr_div_2ui@plt>
   2e1ac:	ldr	x8, [sp, #40]
   2e1b0:	mov	x9, #0xfffffffffffffeff    	// #-257
   2e1b4:	movk	x9, #0x7fff, lsl #48
   2e1b8:	add	x9, x9, #0x105
   2e1bc:	cmp	x8, x9
   2e1c0:	b.lt	2e1f0 <mpfr_const_euler_internal@@Base+0x2fc>  // b.tstop
   2e1c4:	ldp	x3, x8, [sp, #16]
   2e1c8:	ldr	x0, [sp, #48]
   2e1cc:	sub	x2, x26, #0x3
   2e1d0:	sub	x9, x8, #0x1
   2e1d4:	add	x8, x8, #0x3e
   2e1d8:	cmp	x9, #0x0
   2e1dc:	csel	x8, x8, x9, lt  // lt = tstop
   2e1e0:	asr	x8, x8, #6
   2e1e4:	add	x1, x8, #0x1
   2e1e8:	bl	c370 <mpfr_round_p@plt>
   2e1ec:	cbnz	w0, 2e25c <mpfr_const_euler_internal@@Base+0x368>
   2e1f0:	ldr	x27, [sp, #8]
   2e1f4:	mov	x8, #0xfffffffffffffeff    	// #-257
   2e1f8:	movk	x8, #0x7fff, lsl #48
   2e1fc:	sub	x8, x8, x26
   2e200:	cmp	x27, x8
   2e204:	b.gt	2e240 <mpfr_const_euler_internal@@Base+0x34c>
   2e208:	add	x26, x26, x27
   2e20c:	cmp	x26, #0x0
   2e210:	cinc	x8, x26, lt  // lt = tstop
   2e214:	asr	x8, x8, #1
   2e218:	b	2dfa0 <mpfr_const_euler_internal@@Base+0xac>
   2e21c:	mov	x8, xzr
   2e220:	b	2e140 <mpfr_const_euler_internal@@Base+0x24c>
   2e224:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2e228:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2e22c:	mov	w1, #0xf9                  	// #249
   2e230:	add	x0, x0, #0x1de
   2e234:	add	x2, x2, #0x1ec
   2e238:	bl	cb20 <mpfr_assert_fail@plt>
   2e23c:	b	2e134 <mpfr_const_euler_internal@@Base+0x240>
   2e240:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2e244:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2e248:	mov	w1, #0x107                 	// #263
   2e24c:	add	x0, x0, #0x1de
   2e250:	add	x2, x2, #0x1f4
   2e254:	bl	cb20 <mpfr_assert_fail@plt>
   2e258:	b	2e208 <mpfr_const_euler_internal@@Base+0x314>
   2e25c:	ldr	w3, [sp, #32]
   2e260:	add	x1, sp, #0x18
   2e264:	mov	x0, x25
   2e268:	mov	w2, w24
   2e26c:	bl	c690 <mpfr_set4@plt>
   2e270:	mov	w24, w0
   2e274:	add	x0, sp, #0x18
   2e278:	bl	c0b0 <mpfr_clear@plt>
   2e27c:	add	x0, sp, #0x58
   2e280:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e284:	add	x0, sp, #0x48
   2e288:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e28c:	add	x0, sp, #0x38
   2e290:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e294:	add	x0, sp, #0x68
   2e298:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e29c:	mov	x0, x19
   2e2a0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e2a4:	mov	x0, x20
   2e2a8:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e2ac:	mov	x0, x21
   2e2b0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e2b4:	mov	x0, x22
   2e2b8:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e2bc:	mov	x0, x23
   2e2c0:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e2c4:	mov	w0, w24
   2e2c8:	ldp	x20, x19, [sp, #288]
   2e2cc:	ldp	x22, x21, [sp, #272]
   2e2d0:	ldp	x24, x23, [sp, #256]
   2e2d4:	ldp	x26, x25, [sp, #240]
   2e2d8:	ldp	x28, x27, [sp, #224]
   2e2dc:	ldp	x29, x30, [sp, #208]
   2e2e0:	add	sp, sp, #0x130
   2e2e4:	ret

000000000002e2e8 <mpfr_const_euler@@Base>:
   2e2e8:	stp	x29, x30, [sp, #-16]!
   2e2ec:	mov	x29, sp
   2e2f0:	mov	w2, w1
   2e2f4:	mov	x8, x0
   2e2f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2e2fc:	ldr	x1, [x0, #2672]
   2e300:	add	x0, x0, #0xa70
   2e304:	blr	x1
   2e308:	mrs	x9, tpidr_el0
   2e30c:	add	x1, x9, x0
   2e310:	mov	x0, x8
   2e314:	ldp	x29, x30, [sp], #16
   2e318:	b	c380 <mpfr_cache@plt>
   2e31c:	sub	sp, sp, #0x190
   2e320:	sub	x8, x2, x1
   2e324:	stp	x24, x23, [sp, #352]
   2e328:	stp	x22, x21, [sp, #368]
   2e32c:	stp	x20, x19, [sp, #384]
   2e330:	mov	x21, x3
   2e334:	mov	x24, x1
   2e338:	cmp	x8, #0x1
   2e33c:	mov	x19, x0
   2e340:	stp	x29, x30, [sp, #304]
   2e344:	stp	x28, x27, [sp, #320]
   2e348:	stp	x26, x25, [sp, #336]
   2e34c:	add	x29, sp, #0x130
   2e350:	b.ne	2e3e0 <mpfr_const_euler@@Base+0xf8>  // b.any
   2e354:	mov	x0, x19
   2e358:	mov	x1, x21
   2e35c:	bl	bd00 <__gmpz_set_ui@plt>
   2e360:	mov	x0, x19
   2e364:	mov	x1, x19
   2e368:	mov	x2, x19
   2e36c:	bl	c030 <__gmpz_mul@plt>
   2e370:	add	x20, x19, #0x10
   2e374:	add	x21, x24, #0x1
   2e378:	mov	x0, x20
   2e37c:	mov	x1, x21
   2e380:	bl	bd00 <__gmpz_set_ui@plt>
   2e384:	mov	x0, x20
   2e388:	mov	x1, x20
   2e38c:	mov	x2, x20
   2e390:	bl	c030 <__gmpz_mul@plt>
   2e394:	add	x0, x19, #0x30
   2e398:	mov	w1, #0x1                   	// #1
   2e39c:	bl	bd00 <__gmpz_set_ui@plt>
   2e3a0:	add	x0, x19, #0x40
   2e3a4:	mov	x1, x21
   2e3a8:	bl	bd00 <__gmpz_set_ui@plt>
   2e3ac:	add	x0, x19, #0x20
   2e3b0:	mov	x1, x19
   2e3b4:	bl	bff0 <__gmpz_set@plt>
   2e3b8:	add	x0, x19, #0x50
   2e3bc:	mov	x1, x19
   2e3c0:	ldp	x20, x19, [sp, #384]
   2e3c4:	ldp	x22, x21, [sp, #368]
   2e3c8:	ldp	x24, x23, [sp, #352]
   2e3cc:	ldp	x26, x25, [sp, #336]
   2e3d0:	ldp	x28, x27, [sp, #320]
   2e3d4:	ldp	x29, x30, [sp, #304]
   2e3d8:	add	sp, sp, #0x190
   2e3dc:	b	bff0 <__gmpz_set@plt>
   2e3e0:	add	x8, x2, x24
   2e3e4:	sub	x0, x29, #0x68
   2e3e8:	mov	w20, w4
   2e3ec:	mov	x26, x2
   2e3f0:	lsr	x27, x8, #1
   2e3f4:	sub	x25, x29, #0x68
   2e3f8:	bl	bfe0 <mpfr_mpz_init@plt>
   2e3fc:	add	x0, x25, #0x10
   2e400:	str	x0, [sp, #40]
   2e404:	bl	bfe0 <mpfr_mpz_init@plt>
   2e408:	add	x0, x25, #0x20
   2e40c:	str	x0, [sp, #32]
   2e410:	bl	bfe0 <mpfr_mpz_init@plt>
   2e414:	add	x0, x25, #0x30
   2e418:	str	x0, [sp]
   2e41c:	bl	bfe0 <mpfr_mpz_init@plt>
   2e420:	add	x23, x25, #0x40
   2e424:	mov	x0, x23
   2e428:	bl	bfe0 <mpfr_mpz_init@plt>
   2e42c:	add	x0, x25, #0x50
   2e430:	str	x0, [sp, #24]
   2e434:	bl	bfe0 <mpfr_mpz_init@plt>
   2e438:	add	x0, sp, #0x68
   2e43c:	add	x22, sp, #0x68
   2e440:	bl	bfe0 <mpfr_mpz_init@plt>
   2e444:	add	x25, x22, #0x10
   2e448:	mov	x0, x25
   2e44c:	bl	bfe0 <mpfr_mpz_init@plt>
   2e450:	add	x0, x22, #0x20
   2e454:	str	x0, [sp, #16]
   2e458:	bl	bfe0 <mpfr_mpz_init@plt>
   2e45c:	add	x0, x22, #0x30
   2e460:	str	x0, [sp, #48]
   2e464:	bl	bfe0 <mpfr_mpz_init@plt>
   2e468:	add	x28, x22, #0x40
   2e46c:	mov	x0, x28
   2e470:	bl	bfe0 <mpfr_mpz_init@plt>
   2e474:	add	x0, x22, #0x50
   2e478:	str	x0, [sp, #8]
   2e47c:	bl	bfe0 <mpfr_mpz_init@plt>
   2e480:	sub	x0, x29, #0x68
   2e484:	mov	w4, #0x1                   	// #1
   2e488:	mov	x1, x24
   2e48c:	mov	x2, x27
   2e490:	mov	x3, x21
   2e494:	bl	2e31c <mpfr_const_euler@@Base+0x34>
   2e498:	add	x0, sp, #0x68
   2e49c:	mov	w4, #0x1                   	// #1
   2e4a0:	mov	x1, x27
   2e4a4:	mov	x2, x26
   2e4a8:	mov	x3, x21
   2e4ac:	bl	2e31c <mpfr_const_euler@@Base+0x34>
   2e4b0:	add	x0, sp, #0x58
   2e4b4:	bl	bfe0 <mpfr_mpz_init@plt>
   2e4b8:	add	x0, sp, #0x48
   2e4bc:	bl	bfe0 <mpfr_mpz_init@plt>
   2e4c0:	add	x0, sp, #0x38
   2e4c4:	bl	bfe0 <mpfr_mpz_init@plt>
   2e4c8:	cbz	w20, 2e568 <mpfr_const_euler@@Base+0x280>
   2e4cc:	sub	x1, x29, #0x68
   2e4d0:	add	x2, sp, #0x68
   2e4d4:	mov	x0, x19
   2e4d8:	bl	c030 <__gmpz_mul@plt>
   2e4dc:	ldr	x21, [sp, #40]
   2e4e0:	add	x0, x19, #0x10
   2e4e4:	mov	x2, x25
   2e4e8:	mov	x1, x21
   2e4ec:	bl	c030 <__gmpz_mul@plt>
   2e4f0:	add	x0, x19, #0x40
   2e4f4:	mov	x1, x23
   2e4f8:	mov	x2, x28
   2e4fc:	bl	c030 <__gmpz_mul@plt>
   2e500:	ldr	x26, [sp, #16]
   2e504:	add	x0, sp, #0x58
   2e508:	sub	x1, x29, #0x68
   2e50c:	mov	x2, x26
   2e510:	bl	c030 <__gmpz_mul@plt>
   2e514:	ldr	x22, [sp, #32]
   2e518:	add	x0, sp, #0x38
   2e51c:	mov	x1, x25
   2e520:	mov	x2, x22
   2e524:	bl	c030 <__gmpz_mul@plt>
   2e528:	add	x0, x19, #0x20
   2e52c:	add	x1, sp, #0x58
   2e530:	add	x2, sp, #0x38
   2e534:	bl	c9a0 <__gmpz_add@plt>
   2e538:	ldr	x24, [sp]
   2e53c:	add	x20, x19, #0x30
   2e540:	mov	x0, x20
   2e544:	mov	x2, x28
   2e548:	mov	x1, x24
   2e54c:	bl	c030 <__gmpz_mul@plt>
   2e550:	ldr	x1, [sp, #48]
   2e554:	mov	x0, x20
   2e558:	mov	x2, x23
   2e55c:	bl	c290 <__gmpz_addmul@plt>
   2e560:	mov	x20, x24
   2e564:	b	2e5c8 <mpfr_const_euler@@Base+0x2e0>
   2e568:	ldr	x21, [sp, #40]
   2e56c:	add	x0, x19, #0x10
   2e570:	mov	x2, x25
   2e574:	mov	x1, x21
   2e578:	bl	c030 <__gmpz_mul@plt>
   2e57c:	add	x0, x19, #0x40
   2e580:	mov	x1, x23
   2e584:	mov	x2, x28
   2e588:	bl	c030 <__gmpz_mul@plt>
   2e58c:	ldr	x26, [sp, #16]
   2e590:	add	x0, sp, #0x58
   2e594:	sub	x1, x29, #0x68
   2e598:	mov	x2, x26
   2e59c:	bl	c030 <__gmpz_mul@plt>
   2e5a0:	ldr	x22, [sp, #32]
   2e5a4:	add	x0, sp, #0x38
   2e5a8:	mov	x1, x25
   2e5ac:	mov	x2, x22
   2e5b0:	bl	c030 <__gmpz_mul@plt>
   2e5b4:	add	x0, x19, #0x20
   2e5b8:	add	x1, sp, #0x58
   2e5bc:	add	x2, sp, #0x38
   2e5c0:	bl	c9a0 <__gmpz_add@plt>
   2e5c4:	ldr	x20, [sp]
   2e5c8:	ldr	x27, [sp, #8]
   2e5cc:	add	x0, sp, #0x48
   2e5d0:	sub	x1, x29, #0x68
   2e5d4:	mov	x2, x27
   2e5d8:	bl	c030 <__gmpz_mul@plt>
   2e5dc:	add	x0, sp, #0x48
   2e5e0:	add	x1, sp, #0x48
   2e5e4:	mov	x2, x23
   2e5e8:	bl	c030 <__gmpz_mul@plt>
   2e5ec:	ldr	x24, [sp, #24]
   2e5f0:	add	x0, sp, #0x38
   2e5f4:	mov	x1, x25
   2e5f8:	mov	x2, x24
   2e5fc:	bl	c030 <__gmpz_mul@plt>
   2e600:	add	x0, sp, #0x38
   2e604:	add	x1, sp, #0x58
   2e608:	mov	x2, x20
   2e60c:	bl	c290 <__gmpz_addmul@plt>
   2e610:	add	x0, sp, #0x38
   2e614:	add	x1, sp, #0x38
   2e618:	mov	x2, x28
   2e61c:	bl	c030 <__gmpz_mul@plt>
   2e620:	add	x0, x19, #0x50
   2e624:	add	x1, sp, #0x48
   2e628:	add	x2, sp, #0x38
   2e62c:	bl	c9a0 <__gmpz_add@plt>
   2e630:	sub	x0, x29, #0x68
   2e634:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e638:	mov	x0, x21
   2e63c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e640:	mov	x0, x22
   2e644:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e648:	mov	x0, x20
   2e64c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e650:	mov	x0, x23
   2e654:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e658:	mov	x0, x24
   2e65c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e660:	add	x0, sp, #0x68
   2e664:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e668:	mov	x0, x25
   2e66c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e670:	mov	x0, x26
   2e674:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e678:	ldr	x0, [sp, #48]
   2e67c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e680:	mov	x0, x28
   2e684:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e688:	mov	x0, x27
   2e68c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e690:	add	x0, sp, #0x58
   2e694:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e698:	add	x0, sp, #0x48
   2e69c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e6a0:	add	x0, sp, #0x38
   2e6a4:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e6a8:	ldp	x20, x19, [sp, #384]
   2e6ac:	ldp	x22, x21, [sp, #368]
   2e6b0:	ldp	x24, x23, [sp, #352]
   2e6b4:	ldp	x26, x25, [sp, #336]
   2e6b8:	ldp	x28, x27, [sp, #320]
   2e6bc:	ldp	x29, x30, [sp, #304]
   2e6c0:	add	sp, sp, #0x190
   2e6c4:	ret
   2e6c8:	sub	sp, sp, #0x80
   2e6cc:	sub	x8, x4, x3
   2e6d0:	stp	x24, x23, [sp, #80]
   2e6d4:	stp	x22, x21, [sp, #96]
   2e6d8:	stp	x20, x19, [sp, #112]
   2e6dc:	mov	x22, x5
   2e6e0:	mov	x24, x3
   2e6e4:	mov	x21, x2
   2e6e8:	mov	x19, x1
   2e6ec:	cmp	x8, #0x1
   2e6f0:	mov	x20, x0
   2e6f4:	stp	x29, x30, [sp, #48]
   2e6f8:	stp	x26, x25, [sp, #64]
   2e6fc:	add	x29, sp, #0x30
   2e700:	b.ne	2e758 <mpfr_const_euler@@Base+0x470>  // b.any
   2e704:	cbz	x24, 2e848 <mpfr_const_euler@@Base+0x560>
   2e708:	lsl	x8, x24, #1
   2e70c:	sub	x1, x8, #0x1
   2e710:	mov	x0, x20
   2e714:	bl	bd00 <__gmpz_set_ui@plt>
   2e718:	mov	w2, #0x3                   	// #3
   2e71c:	mov	x0, x20
   2e720:	mov	x1, x20
   2e724:	bl	c330 <__gmpz_pow_ui@plt>
   2e728:	lsl	x1, x24, #5
   2e72c:	mov	x0, x19
   2e730:	bl	bd00 <__gmpz_set_ui@plt>
   2e734:	mov	x0, x19
   2e738:	mov	x1, x19
   2e73c:	mov	x2, x22
   2e740:	bl	c140 <__gmpz_mul_ui@plt>
   2e744:	mov	x0, x19
   2e748:	mov	x1, x19
   2e74c:	mov	x2, x22
   2e750:	bl	c140 <__gmpz_mul_ui@plt>
   2e754:	b	2e860 <mpfr_const_euler@@Base+0x578>
   2e758:	add	x8, x4, x24
   2e75c:	sub	x0, x29, #0x10
   2e760:	mov	w23, w6
   2e764:	mov	x25, x4
   2e768:	lsr	x26, x8, #1
   2e76c:	bl	bfe0 <mpfr_mpz_init@plt>
   2e770:	add	x0, sp, #0x10
   2e774:	bl	bfe0 <mpfr_mpz_init@plt>
   2e778:	mov	x0, sp
   2e77c:	bl	bfe0 <mpfr_mpz_init@plt>
   2e780:	mov	w6, #0x1                   	// #1
   2e784:	mov	x0, x20
   2e788:	mov	x1, x19
   2e78c:	mov	x2, x21
   2e790:	mov	x3, x24
   2e794:	mov	x4, x26
   2e798:	mov	x5, x22
   2e79c:	bl	2e6c8 <mpfr_const_euler@@Base+0x3e0>
   2e7a0:	sub	x0, x29, #0x10
   2e7a4:	add	x1, sp, #0x10
   2e7a8:	mov	x2, sp
   2e7ac:	mov	w6, #0x1                   	// #1
   2e7b0:	mov	x3, x26
   2e7b4:	mov	x4, x25
   2e7b8:	mov	x5, x22
   2e7bc:	bl	2e6c8 <mpfr_const_euler@@Base+0x3e0>
   2e7c0:	add	x2, sp, #0x10
   2e7c4:	mov	x0, x21
   2e7c8:	mov	x1, x21
   2e7cc:	bl	c030 <__gmpz_mul@plt>
   2e7d0:	mov	x0, sp
   2e7d4:	mov	x1, sp
   2e7d8:	mov	x2, x20
   2e7dc:	bl	c030 <__gmpz_mul@plt>
   2e7e0:	mov	x2, sp
   2e7e4:	mov	x0, x21
   2e7e8:	mov	x1, x21
   2e7ec:	bl	c9a0 <__gmpz_add@plt>
   2e7f0:	cbz	w23, 2e804 <mpfr_const_euler@@Base+0x51c>
   2e7f4:	sub	x2, x29, #0x10
   2e7f8:	mov	x0, x20
   2e7fc:	mov	x1, x20
   2e800:	bl	c030 <__gmpz_mul@plt>
   2e804:	add	x2, sp, #0x10
   2e808:	mov	x0, x19
   2e80c:	mov	x1, x19
   2e810:	bl	c030 <__gmpz_mul@plt>
   2e814:	sub	x0, x29, #0x10
   2e818:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e81c:	add	x0, sp, #0x10
   2e820:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e824:	mov	x0, sp
   2e828:	bl	c1b0 <mpfr_mpz_clear@plt>
   2e82c:	ldp	x20, x19, [sp, #112]
   2e830:	ldp	x22, x21, [sp, #96]
   2e834:	ldp	x24, x23, [sp, #80]
   2e838:	ldp	x26, x25, [sp, #64]
   2e83c:	ldp	x29, x30, [sp, #48]
   2e840:	add	sp, sp, #0x80
   2e844:	ret
   2e848:	mov	w1, #0x1                   	// #1
   2e84c:	mov	x0, x20
   2e850:	bl	bd00 <__gmpz_set_ui@plt>
   2e854:	lsl	x1, x22, #2
   2e858:	mov	x0, x19
   2e85c:	bl	bd00 <__gmpz_set_ui@plt>
   2e860:	mov	x0, x21
   2e864:	mov	x1, x20
   2e868:	ldp	x20, x19, [sp, #112]
   2e86c:	ldp	x22, x21, [sp, #96]
   2e870:	ldp	x24, x23, [sp, #80]
   2e874:	ldp	x26, x25, [sp, #64]
   2e878:	ldp	x29, x30, [sp, #48]
   2e87c:	add	sp, sp, #0x80
   2e880:	b	bff0 <__gmpz_set@plt>

000000000002e884 <mpfr_cos@@Base>:
   2e884:	stp	x29, x30, [sp, #-96]!
   2e888:	stp	x28, x27, [sp, #16]
   2e88c:	stp	x26, x25, [sp, #32]
   2e890:	stp	x24, x23, [sp, #48]
   2e894:	stp	x22, x21, [sp, #64]
   2e898:	stp	x20, x19, [sp, #80]
   2e89c:	mov	x29, sp
   2e8a0:	sub	sp, sp, #0x1b0
   2e8a4:	ldr	x10, [x1, #16]
   2e8a8:	mov	x24, #0xfffffffffffffeff    	// #-257
   2e8ac:	movk	x24, #0x7fff, lsl #48
   2e8b0:	add	x8, x24, #0x105
   2e8b4:	mov	w26, w2
   2e8b8:	cmp	x10, x8
   2e8bc:	mov	x19, x0
   2e8c0:	b.lt	2ef98 <mpfr_cos@@Base+0x714>  // b.tstop
   2e8c4:	mov	x28, x1
   2e8c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2e8cc:	ldr	x1, [x0, #2640]
   2e8d0:	add	x0, x0, #0xa50
   2e8d4:	blr	x1
   2e8d8:	mrs	x25, tpidr_el0
   2e8dc:	ldr	w23, [x25, x0]
   2e8e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2e8e4:	ldr	x1, [x0, #2576]
   2e8e8:	add	x0, x0, #0xa10
   2e8ec:	blr	x1
   2e8f0:	ldr	x21, [x25, x0]
   2e8f4:	mov	x8, x0
   2e8f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2e8fc:	ldr	x1, [x0, #2608]
   2e900:	add	x0, x0, #0xa30
   2e904:	blr	x1
   2e908:	ldr	x27, [x25, x0]
   2e90c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2e910:	str	x9, [x25, x8]
   2e914:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2e918:	str	x8, [x25, x0]
   2e91c:	tbz	x10, #63, 2e938 <mpfr_cos@@Base+0xb4>
   2e920:	ldr	x8, [x19]
   2e924:	mov	w9, #0x1                   	// #1
   2e928:	sub	x2, x9, x10, lsl #1
   2e92c:	add	x8, x8, #0x1
   2e930:	cmp	x2, x8
   2e934:	b.hi	2f018 <mpfr_cos@@Base+0x794>  // b.pmore
   2e938:	ldr	x20, [x19]
   2e93c:	mov	w8, #0x7530                	// #30000
   2e940:	cmp	x20, x8
   2e944:	b.lt	2e96c <mpfr_cos@@Base+0xe8>  // b.tstop
   2e948:	mov	x0, xzr
   2e94c:	mov	x1, x19
   2e950:	mov	x2, x28
   2e954:	mov	w3, w26
   2e958:	bl	c060 <mpfr_sincos_fast@plt>
   2e95c:	asr	w8, w0, #2
   2e960:	cmp	w8, #0x2
   2e964:	csinv	w22, w8, wzr, ne  // ne = any
   2e968:	b	2f130 <mpfr_cos@@Base+0x8ac>
   2e96c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   2e970:	movk	x8, #0x5556
   2e974:	smulh	x8, x20, x8
   2e978:	add	x0, x8, x8, lsr #63
   2e97c:	str	x10, [sp, #80]
   2e980:	str	w23, [sp, #36]
   2e984:	stp	x21, x19, [sp, #40]
   2e988:	bl	bf70 <__gmpfr_isqrt@plt>
   2e98c:	subs	x19, x20, #0x1
   2e990:	mov	x23, x0
   2e994:	b.eq	2efec <mpfr_cos@@Base+0x768>  // b.none
   2e998:	ldr	x10, [sp, #80]
   2e99c:	b.le	2eff8 <mpfr_cos@@Base+0x774>
   2e9a0:	clz	x8, x19
   2e9a4:	mov	w9, #0x80                  	// #128
   2e9a8:	sub	w8, w9, w8, lsl #1
   2e9ac:	sxtw	x8, w8
   2e9b0:	add	x9, x20, x23, lsl #1
   2e9b4:	add	x19, x9, x8
   2e9b8:	cmp	x10, #0x3
   2e9bc:	add	x22, x19, #0x4
   2e9c0:	b.lt	2ea04 <mpfr_cos@@Base+0x180>  // b.tstop
   2e9c4:	add	x8, x22, x10
   2e9c8:	add	x9, x24, #0x2
   2e9cc:	cmp	x8, x9
   2e9d0:	sub	x24, x8, #0x1
   2e9d4:	b.ge	2f0b8 <mpfr_cos@@Base+0x834>  // b.tcont
   2e9d8:	sub	x0, x29, #0xb8
   2e9dc:	mov	x1, x24
   2e9e0:	bl	ca60 <mpfr_init2@plt>
   2e9e4:	sub	x0, x29, #0x98
   2e9e8:	mov	x1, x22
   2e9ec:	bl	ca60 <mpfr_init2@plt>
   2e9f0:	mov	x24, #0xfffffffffffffeff    	// #-257
   2e9f4:	mov	w8, #0x1                   	// #1
   2e9f8:	movk	x24, #0x7fff, lsl #48
   2e9fc:	str	w8, [sp, #100]
   2ea00:	b	2ea08 <mpfr_cos@@Base+0x184>
   2ea04:	str	wzr, [sp, #100]
   2ea08:	sub	x8, x24, #0x4
   2ea0c:	cmp	x19, x8
   2ea10:	b.gt	2f1d8 <mpfr_cos@@Base+0x954>
   2ea14:	add	x8, x19, #0x3
   2ea18:	add	x9, x19, #0x42
   2ea1c:	cmp	x8, #0x0
   2ea20:	csel	x8, x9, x8, lt  // lt = tstop
   2ea24:	asr	x8, x8, #6
   2ea28:	cmp	x19, #0x1fd
   2ea2c:	add	x19, x8, #0x1
   2ea30:	b.lt	2ea44 <mpfr_cos@@Base+0x1c0>  // b.tstop
   2ea34:	lsl	x0, x19, #4
   2ea38:	str	x0, [sp, #104]
   2ea3c:	bl	ccd0 <mpfr_allocate_func@plt>
   2ea40:	b	2ea50 <mpfr_cos@@Base+0x1cc>
   2ea44:	add	x8, sp, #0x68
   2ea48:	add	x0, x8, #0x10
   2ea4c:	str	xzr, [sp, #104]
   2ea50:	add	x8, x0, x19, lsl #3
   2ea54:	cmp	w26, #0x0
   2ea58:	stp	x8, x22, [x29, #-96]
   2ea5c:	cinc	x8, x20, eq  // eq = none
   2ea60:	mov	w9, #0x1                   	// #1
   2ea64:	add	x23, x23, #0x1
   2ea68:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   2ea6c:	stp	x8, x28, [sp, #56]
   2ea70:	mov	w8, #0x40                  	// #64
   2ea74:	str	x0, [sp, #112]
   2ea78:	str	xzr, [sp]
   2ea7c:	stur	x0, [x29, #-64]
   2ea80:	stur	x22, [x29, #-120]
   2ea84:	stur	w9, [x29, #-80]
   2ea88:	stur	w9, [x29, #-112]
   2ea8c:	str	x8, [sp, #88]
   2ea90:	stp	x23, x27, [sp, #16]
   2ea94:	ldr	w8, [sp, #100]
   2ea98:	cbz	w8, 2eb04 <mpfr_cos@@Base+0x280>
   2ea9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2eaa0:	ldr	x1, [x0, #2688]
   2eaa4:	add	x0, x0, #0xa80
   2eaa8:	blr	x1
   2eaac:	add	x1, x25, x0
   2eab0:	sub	x0, x29, #0xb8
   2eab4:	mov	w2, wzr
   2eab8:	bl	c380 <mpfr_cache@plt>
   2eabc:	sub	x0, x29, #0xb8
   2eac0:	sub	x1, x29, #0xb8
   2eac4:	mov	w2, #0x1                   	// #1
   2eac8:	mov	w3, wzr
   2eacc:	bl	c2c0 <mpfr_mul_2ui@plt>
   2ead0:	sub	x0, x29, #0x98
   2ead4:	sub	x2, x29, #0xb8
   2ead8:	mov	x1, x28
   2eadc:	mov	w3, wzr
   2eae0:	bl	ccf0 <mpfr_remainder@plt>
   2eae4:	ldur	x8, [x29, #-136]
   2eae8:	cmp	x8, x19
   2eaec:	b.eq	2eea8 <mpfr_cos@@Base+0x624>  // b.none
   2eaf0:	sub	x0, x29, #0x58
   2eaf4:	sub	x1, x29, #0x98
   2eaf8:	sub	x2, x29, #0x98
   2eafc:	mov	w3, #0x2                   	// #2
   2eb00:	b	2eb14 <mpfr_cos@@Base+0x290>
   2eb04:	sub	x0, x29, #0x58
   2eb08:	mov	w3, #0x2                   	// #2
   2eb0c:	mov	x1, x28
   2eb10:	mov	x2, x28
   2eb14:	bl	bda0 <mpfr_mul@plt>
   2eb18:	ldur	x8, [x29, #-72]
   2eb1c:	sub	x0, x29, #0x18
   2eb20:	bic	x9, x8, x8, asr #63
   2eb24:	add	x21, x23, x9, lsr #1
   2eb28:	lsl	x9, x21, #1
   2eb2c:	sub	x8, x8, x9
   2eb30:	str	x9, [sp, #72]
   2eb34:	stur	x8, [x29, #-72]
   2eb38:	bl	bfe0 <mpfr_mpz_init@plt>
   2eb3c:	sub	x0, x29, #0x38
   2eb40:	bl	bfe0 <mpfr_mpz_init@plt>
   2eb44:	sub	x0, x29, #0x28
   2eb48:	bl	bfe0 <mpfr_mpz_init@plt>
   2eb4c:	sub	x0, x29, #0x18
   2eb50:	sub	x1, x29, #0x58
   2eb54:	bl	caa0 <mpfr_get_z_2exp@plt>
   2eb58:	mov	x28, x0
   2eb5c:	sub	x0, x29, #0x18
   2eb60:	mov	x1, xzr
   2eb64:	bl	baf0 <__gmpz_scan1@plt>
   2eb68:	mov	x23, x0
   2eb6c:	sub	x0, x29, #0x18
   2eb70:	sub	x1, x29, #0x18
   2eb74:	mov	x2, x23
   2eb78:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2eb7c:	ldur	x8, [x29, #-72]
   2eb80:	ldur	x24, [x29, #-120]
   2eb84:	neg	x8, x8
   2eb88:	sdiv	x8, x24, x8
   2eb8c:	cmp	x8, #0x0
   2eb90:	cinc	x8, x8, eq  // eq = none
   2eb94:	subs	x20, x8, #0x1
   2eb98:	b.eq	2ef58 <mpfr_cos@@Base+0x6d4>  // b.none
   2eb9c:	cbz	x8, 2ef60 <mpfr_cos@@Base+0x6dc>
   2eba0:	clz	x8, x20
   2eba4:	mov	w9, #0x84                  	// #132
   2eba8:	sub	w8, w9, w8, lsl #1
   2ebac:	sxtw	x20, w8
   2ebb0:	sub	x0, x29, #0x38
   2ebb4:	mov	w1, #0x1                   	// #1
   2ebb8:	bl	bd00 <__gmpz_set_ui@plt>
   2ebbc:	add	x27, x20, x24
   2ebc0:	sub	x0, x29, #0x38
   2ebc4:	sub	x1, x29, #0x38
   2ebc8:	mov	x2, x27
   2ebcc:	bl	c230 <__gmpz_mul_2exp@plt>
   2ebd0:	sub	x0, x29, #0x28
   2ebd4:	sub	x1, x29, #0x38
   2ebd8:	bl	bff0 <__gmpz_set@plt>
   2ebdc:	sub	x0, x29, #0x28
   2ebe0:	mov	w1, #0x2                   	// #2
   2ebe4:	bl	cb40 <__gmpz_sizeinbase@plt>
   2ebe8:	cmp	x0, x20
   2ebec:	b.ge	2ebf8 <mpfr_cos@@Base+0x374>  // b.tcont
   2ebf0:	mov	x20, xzr
   2ebf4:	b	2ecd4 <mpfr_cos@@Base+0x450>
   2ebf8:	mov	x24, x0
   2ebfc:	str	w26, [sp, #12]
   2ec00:	mov	x26, xzr
   2ec04:	add	x28, x23, x28
   2ec08:	b	2ec2c <mpfr_cos@@Base+0x3a8>
   2ec0c:	bl	c9a0 <__gmpz_add@plt>
   2ec10:	sub	x0, x29, #0x28
   2ec14:	mov	w1, #0x2                   	// #2
   2ec18:	bl	cb40 <__gmpz_sizeinbase@plt>
   2ec1c:	mov	x24, x0
   2ec20:	cmp	x0, x20
   2ec24:	add	x26, x26, #0x2
   2ec28:	b.lt	2eccc <mpfr_cos@@Base+0x448>  // b.tstop
   2ec2c:	sub	x0, x29, #0x18
   2ec30:	mov	w1, #0x2                   	// #2
   2ec34:	add	x23, x26, #0x1
   2ec38:	bl	cb40 <__gmpz_sizeinbase@plt>
   2ec3c:	subs	x24, x0, x24
   2ec40:	b.le	2ec58 <mpfr_cos@@Base+0x3d4>
   2ec44:	sub	x0, x29, #0x18
   2ec48:	sub	x1, x29, #0x18
   2ec4c:	mov	x2, x24
   2ec50:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2ec54:	add	x28, x24, x28
   2ec58:	sub	x0, x29, #0x28
   2ec5c:	sub	x1, x29, #0x28
   2ec60:	sub	x2, x29, #0x18
   2ec64:	bl	c030 <__gmpz_mul@plt>
   2ec68:	neg	x2, x28
   2ec6c:	sub	x0, x29, #0x28
   2ec70:	sub	x1, x29, #0x28
   2ec74:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   2ec78:	lsr	x8, x23, #32
   2ec7c:	cbnz	x8, 2ec8c <mpfr_cos@@Base+0x408>
   2ec80:	add	x8, x26, #0x2
   2ec84:	mul	x2, x8, x23
   2ec88:	b	2eca0 <mpfr_cos@@Base+0x41c>
   2ec8c:	sub	x0, x29, #0x28
   2ec90:	sub	x1, x29, #0x28
   2ec94:	mov	x2, x23
   2ec98:	bl	c600 <__gmpz_fdiv_q_ui@plt>
   2ec9c:	add	x2, x26, #0x2
   2eca0:	sub	x0, x29, #0x28
   2eca4:	sub	x1, x29, #0x28
   2eca8:	bl	c600 <__gmpz_fdiv_q_ui@plt>
   2ecac:	and	x8, x23, #0x3
   2ecb0:	sub	x0, x29, #0x38
   2ecb4:	sub	x1, x29, #0x38
   2ecb8:	sub	x2, x29, #0x28
   2ecbc:	cmp	x8, #0x1
   2ecc0:	b.ne	2ec0c <mpfr_cos@@Base+0x388>  // b.any
   2ecc4:	bl	be30 <__gmpz_sub@plt>
   2ecc8:	b	2ec10 <mpfr_cos@@Base+0x38c>
   2eccc:	lsr	x20, x26, #1
   2ecd0:	ldr	w26, [sp, #12]
   2ecd4:	sub	x0, x29, #0x78
   2ecd8:	sub	x1, x29, #0x38
   2ecdc:	mov	w2, wzr
   2ece0:	bl	c250 <mpfr_set_z@plt>
   2ece4:	sub	x0, x29, #0x78
   2ece8:	sub	x1, x29, #0x78
   2ecec:	mov	x2, x27
   2ecf0:	mov	w3, wzr
   2ecf4:	bl	c8f0 <mpfr_div_2ui@plt>
   2ecf8:	sub	x0, x29, #0x18
   2ecfc:	bl	c1b0 <mpfr_mpz_clear@plt>
   2ed00:	sub	x0, x29, #0x38
   2ed04:	bl	c1b0 <mpfr_mpz_clear@plt>
   2ed08:	sub	x0, x29, #0x28
   2ed0c:	bl	c1b0 <mpfr_mpz_clear@plt>
   2ed10:	ldur	x8, [x29, #-88]
   2ed14:	ldur	x0, [x29, #-64]
   2ed18:	mov	w10, #0x1                   	// #1
   2ed1c:	mov	w1, wzr
   2ed20:	sub	x9, x8, #0x1
   2ed24:	add	x8, x8, #0x3e
   2ed28:	cmp	x9, #0x0
   2ed2c:	csel	x8, x8, x9, lt  // lt = tstop
   2ed30:	asr	x8, x8, #6
   2ed34:	lsl	x23, x8, #3
   2ed38:	mov	x2, x23
   2ed3c:	stur	w10, [x29, #-80]
   2ed40:	stur	x10, [x29, #-72]
   2ed44:	bl	c150 <memset@plt>
   2ed48:	ldur	x8, [x29, #-64]
   2ed4c:	ldr	x28, [sp, #64]
   2ed50:	cmp	x21, #0x1
   2ed54:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2ed58:	str	x9, [x8, x23]
   2ed5c:	b.lt	2edb0 <mpfr_cos@@Base+0x52c>  // b.tstop
   2ed60:	mov	x24, xzr
   2ed64:	sub	x0, x29, #0x78
   2ed68:	sub	x1, x29, #0x78
   2ed6c:	mov	w2, #0x2                   	// #2
   2ed70:	bl	c3f0 <mpfr_sqr@plt>
   2ed74:	ldur	x8, [x29, #-104]
   2ed78:	sub	x0, x29, #0x78
   2ed7c:	sub	x1, x29, #0x78
   2ed80:	sub	x2, x29, #0x58
   2ed84:	add	x8, x8, #0x1
   2ed88:	mov	w3, wzr
   2ed8c:	stur	x8, [x29, #-104]
   2ed90:	bl	bbc0 <mpfr_sub@plt>
   2ed94:	ldur	x23, [x29, #-104]
   2ed98:	cmp	x23, x19
   2ed9c:	b.eq	2ee9c <mpfr_cos@@Base+0x618>  // b.none
   2eda0:	add	x24, x24, #0x1
   2eda4:	cmp	x24, x21
   2eda8:	b.lt	2ed64 <mpfr_cos@@Base+0x4e0>  // b.tstop
   2edac:	b	2edb4 <mpfr_cos@@Base+0x530>
   2edb0:	ldur	x23, [x29, #-104]
   2edb4:	mov	w27, w26
   2edb8:	clz	x8, x20
   2edbc:	lsl	x8, x8, #2
   2edc0:	mov	w10, #0x102                 	// #258
   2edc4:	ldr	w11, [sp, #100]
   2edc8:	sub	x8, x10, x8
   2edcc:	cmp	x20, #0x0
   2edd0:	orr	x8, x8, #0x1
   2edd4:	mov	w10, #0x3                   	// #3
   2edd8:	csel	x8, x10, x8, eq  // eq = none
   2eddc:	cmp	x21, #0x0
   2ede0:	mov	w10, #0x4                   	// #4
   2ede4:	csinc	x10, x10, xzr, eq  // eq = none
   2ede8:	cmp	w11, #0x0
   2edec:	csel	x10, x10, xzr, ne  // ne = any
   2edf0:	add	x8, x8, x10
   2edf4:	mov	x24, #0xfffffffffffffeff    	// #-257
   2edf8:	subs	x10, x8, #0x1
   2edfc:	ldr	x26, [sp, #56]
   2ee00:	movk	x24, #0x7fff, lsl #48
   2ee04:	clz	x10, x10
   2ee08:	cmp	x8, #0x1
   2ee0c:	mov	w8, #0x40                  	// #64
   2ee10:	add	x9, x24, #0x105
   2ee14:	sub	x8, x8, x10
   2ee18:	csel	x8, xzr, x8, eq  // eq = none
   2ee1c:	cmp	x23, x9
   2ee20:	b.lt	2ee78 <mpfr_cos@@Base+0x5f4>  // b.tstop
   2ee24:	ldur	x9, [x29, #-120]
   2ee28:	ldr	x10, [sp, #72]
   2ee2c:	ldur	x0, [x29, #-96]
   2ee30:	mov	x3, x26
   2ee34:	add	x21, x8, x10
   2ee38:	sub	x8, x9, #0x1
   2ee3c:	add	x9, x9, #0x3e
   2ee40:	cmp	x8, #0x0
   2ee44:	csel	x8, x9, x8, lt  // lt = tstop
   2ee48:	sub	x20, x22, x21
   2ee4c:	asr	x8, x8, #6
   2ee50:	add	x1, x8, #0x1
   2ee54:	add	x2, x20, x23
   2ee58:	bl	c370 <mpfr_round_p@plt>
   2ee5c:	cbnz	w0, 2f0dc <mpfr_cos@@Base+0x858>
   2ee60:	cmp	x23, #0x1
   2ee64:	b.ne	2ee78 <mpfr_cos@@Base+0x5f4>  // b.any
   2ee68:	cmp	x22, x21
   2ee6c:	b.le	2ee78 <mpfr_cos@@Base+0x5f4>
   2ee70:	cmp	x20, x26
   2ee74:	b.ge	2f0d4 <mpfr_cos@@Base+0x850>  // b.tcont
   2ee78:	ldr	x8, [sp]
   2ee7c:	cmp	x8, x23
   2ee80:	b.le	2ee90 <mpfr_cos@@Base+0x60c>
   2ee84:	add	x8, x22, x8
   2ee88:	sub	x22, x8, x23
   2ee8c:	str	x23, [sp]
   2ee90:	ldr	x23, [sp, #16]
   2ee94:	mov	w26, w27
   2ee98:	b	2eea8 <mpfr_cos@@Base+0x624>
   2ee9c:	ldr	x23, [sp, #16]
   2eea0:	mov	x24, #0xfffffffffffffeff    	// #-257
   2eea4:	movk	x24, #0x7fff, lsl #48
   2eea8:	ldr	x20, [sp, #88]
   2eeac:	sub	x8, x24, x22
   2eeb0:	cmp	x20, x8
   2eeb4:	b.gt	2ef7c <mpfr_cos@@Base+0x6f8>
   2eeb8:	add	x22, x22, x20
   2eebc:	cmp	x22, #0x0
   2eec0:	cinc	x8, x22, lt  // lt = tstop
   2eec4:	cmp	x22, x24
   2eec8:	b.gt	2f1d8 <mpfr_cos@@Base+0x954>
   2eecc:	asr	x8, x8, #1
   2eed0:	sub	x20, x22, #0x1
   2eed4:	str	x8, [sp, #88]
   2eed8:	add	x8, x22, #0x3e
   2eedc:	cmp	x20, #0x0
   2eee0:	ldr	x1, [sp, #104]
   2eee4:	csel	x8, x8, x20, lt  // lt = tstop
   2eee8:	asr	x8, x8, #6
   2eeec:	add	x21, x8, #0x1
   2eef0:	lsl	x2, x21, #4
   2eef4:	str	x2, [sp, #104]
   2eef8:	cbz	x1, 2ef08 <mpfr_cos@@Base+0x684>
   2eefc:	ldr	x0, [sp, #112]
   2ef00:	bl	c200 <mpfr_reallocate_func@plt>
   2ef04:	b	2ef10 <mpfr_cos@@Base+0x68c>
   2ef08:	mov	x0, x2
   2ef0c:	bl	ccd0 <mpfr_allocate_func@plt>
   2ef10:	add	x8, x0, x21, lsl #3
   2ef14:	stp	x8, x22, [x29, #-96]
   2ef18:	ldr	w8, [sp, #100]
   2ef1c:	mov	w9, #0x1                   	// #1
   2ef20:	str	x0, [sp, #112]
   2ef24:	stur	x0, [x29, #-64]
   2ef28:	stur	w9, [x29, #-80]
   2ef2c:	stur	x22, [x29, #-120]
   2ef30:	stur	w9, [x29, #-112]
   2ef34:	cbz	w8, 2ea94 <mpfr_cos@@Base+0x210>
   2ef38:	sub	x0, x29, #0x98
   2ef3c:	mov	x1, x22
   2ef40:	bl	bf20 <mpfr_set_prec@plt>
   2ef44:	ldr	x8, [sp, #80]
   2ef48:	sub	x0, x29, #0xb8
   2ef4c:	add	x1, x20, x8
   2ef50:	bl	bf20 <mpfr_set_prec@plt>
   2ef54:	b	2ea94 <mpfr_cos@@Base+0x210>
   2ef58:	mov	w20, #0x4                   	// #4
   2ef5c:	b	2ebb0 <mpfr_cos@@Base+0x32c>
   2ef60:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2ef64:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2ef68:	mov	w1, #0x4e                  	// #78
   2ef6c:	add	x0, x0, #0x4b1
   2ef70:	add	x2, x2, #0x2ca
   2ef74:	bl	cb20 <mpfr_assert_fail@plt>
   2ef78:	b	2eba0 <mpfr_cos@@Base+0x31c>
   2ef7c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2ef80:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2ef84:	mov	w1, #0x117                 	// #279
   2ef88:	add	x0, x0, #0x4b1
   2ef8c:	add	x2, x2, #0x287
   2ef90:	bl	cb20 <mpfr_assert_fail@plt>
   2ef94:	b	2eeb8 <mpfr_cos@@Base+0x634>
   2ef98:	and	x9, x10, #0xfffffffffffffffe
   2ef9c:	add	x8, x24, #0x103
   2efa0:	cmp	x9, x8
   2efa4:	b.ne	2efd4 <mpfr_cos@@Base+0x750>  // b.any
   2efa8:	str	x8, [x19, #16]
   2efac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2efb0:	ldr	x1, [x0, #2640]
   2efb4:	add	x0, x0, #0xa50
   2efb8:	blr	x1
   2efbc:	mrs	x8, tpidr_el0
   2efc0:	ldr	w9, [x8, x0]
   2efc4:	mov	w22, wzr
   2efc8:	orr	w9, w9, #0x4
   2efcc:	str	w9, [x8, x0]
   2efd0:	b	2f19c <mpfr_cos@@Base+0x918>
   2efd4:	mov	w1, #0x1                   	// #1
   2efd8:	mov	x0, x19
   2efdc:	mov	x2, xzr
   2efe0:	mov	w3, w26
   2efe4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   2efe8:	b	2f1d0 <mpfr_cos@@Base+0x94c>
   2efec:	ldr	x10, [sp, #80]
   2eff0:	mov	x8, xzr
   2eff4:	b	2e9b0 <mpfr_cos@@Base+0x12c>
   2eff8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2effc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f000:	add	x0, x0, #0x4b1
   2f004:	add	x2, x2, #0x238
   2f008:	mov	w1, #0xb1                  	// #177
   2f00c:	bl	cb20 <mpfr_assert_fail@plt>
   2f010:	ldr	x10, [sp, #80]
   2f014:	b	2e9a0 <mpfr_cos@@Base+0x11c>
   2f018:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f01c:	ldr	x1, [x0, #2640]
   2f020:	add	x0, x0, #0xa50
   2f024:	blr	x1
   2f028:	str	wzr, [x25, x0]
   2f02c:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   2f030:	ldr	x1, [x1, #3944]
   2f034:	mov	x0, x19
   2f038:	mov	w3, wzr
   2f03c:	mov	w4, w26
   2f040:	mov	x20, x10
   2f044:	bl	c530 <mpfr_round_near_x@plt>
   2f048:	mov	x10, x20
   2f04c:	cbz	w0, 2e938 <mpfr_cos@@Base+0xb4>
   2f050:	mov	w22, w0
   2f054:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f058:	ldr	x1, [x0, #2640]
   2f05c:	add	x0, x0, #0xa50
   2f060:	blr	x1
   2f064:	ldr	w8, [x25, x0]
   2f068:	orr	w8, w8, w23
   2f06c:	str	w8, [x25, x0]
   2f070:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f074:	ldr	x1, [x0, #2576]
   2f078:	add	x0, x0, #0xa10
   2f07c:	blr	x1
   2f080:	str	x21, [x25, x0]
   2f084:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f088:	ldr	x1, [x0, #2608]
   2f08c:	add	x0, x0, #0xa30
   2f090:	blr	x1
   2f094:	str	x27, [x25, x0]
   2f098:	ldr	x9, [x19, #16]
   2f09c:	mov	x0, x19
   2f0a0:	cmp	x9, x27
   2f0a4:	b.gt	2f1c4 <mpfr_cos@@Base+0x940>
   2f0a8:	cmp	x9, x21
   2f0ac:	b.lt	2f1c4 <mpfr_cos@@Base+0x940>  // b.tstop
   2f0b0:	orr	w8, w8, #0x8
   2f0b4:	b	2f188 <mpfr_cos@@Base+0x904>
   2f0b8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f0bc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f0c0:	add	x0, x0, #0x4b1
   2f0c4:	add	x2, x2, #0x244
   2f0c8:	mov	w1, #0xb9                  	// #185
   2f0cc:	bl	cb20 <mpfr_assert_fail@plt>
   2f0d0:	b	2e9d8 <mpfr_cos@@Base+0x154>
   2f0d4:	sub	x0, x29, #0x78
   2f0d8:	bl	c450 <mpfr_nexttozero@plt>
   2f0dc:	ldr	x19, [sp, #48]
   2f0e0:	ldur	w3, [x29, #-112]
   2f0e4:	sub	x1, x29, #0x78
   2f0e8:	mov	w2, w27
   2f0ec:	mov	x0, x19
   2f0f0:	mov	w26, w27
   2f0f4:	bl	c690 <mpfr_set4@plt>
   2f0f8:	ldr	x1, [sp, #104]
   2f0fc:	mov	w22, w0
   2f100:	cbz	x1, 2f10c <mpfr_cos@@Base+0x888>
   2f104:	ldr	x0, [sp, #112]
   2f108:	bl	cc00 <mpfr_free_func@plt>
   2f10c:	ldr	x21, [sp, #40]
   2f110:	ldr	w23, [sp, #36]
   2f114:	ldr	w8, [sp, #100]
   2f118:	ldr	x27, [sp, #24]
   2f11c:	cbz	w8, 2f130 <mpfr_cos@@Base+0x8ac>
   2f120:	sub	x0, x29, #0x98
   2f124:	bl	c0b0 <mpfr_clear@plt>
   2f128:	sub	x0, x29, #0xb8
   2f12c:	bl	c0b0 <mpfr_clear@plt>
   2f130:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f134:	ldr	x1, [x0, #2640]
   2f138:	add	x0, x0, #0xa50
   2f13c:	blr	x1
   2f140:	str	w23, [x25, x0]
   2f144:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f148:	ldr	x1, [x0, #2576]
   2f14c:	add	x0, x0, #0xa10
   2f150:	blr	x1
   2f154:	str	x21, [x25, x0]
   2f158:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f15c:	ldr	x1, [x0, #2608]
   2f160:	add	x0, x0, #0xa30
   2f164:	blr	x1
   2f168:	str	x27, [x25, x0]
   2f16c:	ldr	x8, [x19, #16]
   2f170:	cmp	x8, x27
   2f174:	b.gt	2f1c0 <mpfr_cos@@Base+0x93c>
   2f178:	cmp	x8, x21
   2f17c:	b.lt	2f1c0 <mpfr_cos@@Base+0x93c>  // b.tstop
   2f180:	cbz	w22, 2f19c <mpfr_cos@@Base+0x918>
   2f184:	orr	w8, w23, #0x8
   2f188:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f18c:	ldr	x1, [x0, #2640]
   2f190:	add	x0, x0, #0xa50
   2f194:	blr	x1
   2f198:	str	w8, [x25, x0]
   2f19c:	mov	w0, w22
   2f1a0:	add	sp, sp, #0x1b0
   2f1a4:	ldp	x20, x19, [sp, #80]
   2f1a8:	ldp	x22, x21, [sp, #64]
   2f1ac:	ldp	x24, x23, [sp, #48]
   2f1b0:	ldp	x26, x25, [sp, #32]
   2f1b4:	ldp	x28, x27, [sp, #16]
   2f1b8:	ldp	x29, x30, [sp], #96
   2f1bc:	ret
   2f1c0:	mov	x0, x19
   2f1c4:	mov	w1, w22
   2f1c8:	mov	w2, w26
   2f1cc:	bl	cb10 <mpfr_check_range@plt>
   2f1d0:	mov	w22, w0
   2f1d4:	b	2f19c <mpfr_cos@@Base+0x918>
   2f1d8:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002f1dc <mpfr_sin@@Base>:
   2f1dc:	sub	sp, sp, #0xe0
   2f1e0:	stp	x29, x30, [sp, #128]
   2f1e4:	stp	x28, x27, [sp, #144]
   2f1e8:	stp	x26, x25, [sp, #160]
   2f1ec:	stp	x24, x23, [sp, #176]
   2f1f0:	stp	x22, x21, [sp, #192]
   2f1f4:	stp	x20, x19, [sp, #208]
   2f1f8:	ldr	x24, [x1, #16]
   2f1fc:	mov	x23, #0x2                   	// #2
   2f200:	movk	x23, #0x8000, lsl #48
   2f204:	add	x8, x23, #0x2
   2f208:	mov	x21, x1
   2f20c:	cmp	x24, x8
   2f210:	mov	x25, x0
   2f214:	add	x29, sp, #0x80
   2f218:	b.lt	2f678 <mpfr_sin@@Base+0x49c>  // b.tstop
   2f21c:	mov	w26, w2
   2f220:	neg	x20, x24, lsl #1
   2f224:	tbz	x24, #63, 2f23c <mpfr_sin@@Base+0x60>
   2f228:	ldr	x8, [x25]
   2f22c:	add	x2, x20, #0x2
   2f230:	add	x8, x8, #0x1
   2f234:	cmp	x2, x8
   2f238:	b.hi	2f714 <mpfr_sin@@Base+0x538>  // b.pmore
   2f23c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f240:	ldr	x1, [x0, #2640]
   2f244:	add	x0, x0, #0xa50
   2f248:	blr	x1
   2f24c:	mrs	x11, tpidr_el0
   2f250:	ldr	w8, [x11, x0]
   2f254:	str	w8, [sp, #36]
   2f258:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f25c:	ldr	x1, [x0, #2576]
   2f260:	add	x0, x0, #0xa10
   2f264:	blr	x1
   2f268:	ldr	x9, [x11, x0]
   2f26c:	mov	x8, x0
   2f270:	str	x9, [sp, #24]
   2f274:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f278:	ldr	x1, [x0, #2608]
   2f27c:	add	x0, x0, #0xa30
   2f280:	blr	x1
   2f284:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f288:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f28c:	ldr	x22, [x11, x0]
   2f290:	str	x9, [x11, x8]
   2f294:	str	x10, [x11, x0]
   2f298:	ldr	x27, [x25]
   2f29c:	mov	w8, #0x7530                	// #30000
   2f2a0:	str	x11, [sp, #56]
   2f2a4:	str	x22, [sp, #16]
   2f2a8:	cmp	x27, x8
   2f2ac:	b.lt	2f2d4 <mpfr_sin@@Base+0xf8>  // b.tstop
   2f2b0:	mov	x0, x25
   2f2b4:	mov	x1, xzr
   2f2b8:	mov	x2, x21
   2f2bc:	mov	w3, w26
   2f2c0:	bl	c060 <mpfr_sincos_fast@plt>
   2f2c4:	and	w8, w0, #0x3
   2f2c8:	cmp	w8, #0x2
   2f2cc:	csinv	w22, w8, wzr, ne  // ne = any
   2f2d0:	b	2f5d4 <mpfr_sin@@Base+0x3f8>
   2f2d4:	subs	x19, x27, #0x1
   2f2d8:	b.eq	2f6c8 <mpfr_sin@@Base+0x4ec>  // b.none
   2f2dc:	b.le	2f6e0 <mpfr_sin@@Base+0x504>
   2f2e0:	clz	x8, x19
   2f2e4:	mov	w9, #0x40                  	// #64
   2f2e8:	sub	x8, x9, x8
   2f2ec:	add	x8, x8, x27
   2f2f0:	add	x22, x8, #0x7
   2f2f4:	str	w26, [sp, #12]
   2f2f8:	tbz	x24, #63, 2f310 <mpfr_sin@@Base+0x134>
   2f2fc:	sub	x8, x23, x8
   2f300:	sub	x8, x8, #0x10a
   2f304:	cmp	x20, x8
   2f308:	b.gt	2f734 <mpfr_sin@@Base+0x558>
   2f30c:	add	x22, x22, x20
   2f310:	sub	x0, x29, #0x20
   2f314:	mov	x26, x25
   2f318:	bl	bc20 <mpfr_init@plt>
   2f31c:	add	x0, sp, #0x40
   2f320:	bl	bc20 <mpfr_init@plt>
   2f324:	ldr	w8, [sp, #12]
   2f328:	mov	w20, #0x40                  	// #64
   2f32c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   2f330:	cmp	w8, #0x0
   2f334:	sub	x8, x23, #0x101
   2f338:	str	x8, [sp, #48]
   2f33c:	cinc	x8, x27, eq  // eq = none
   2f340:	str	x8, [sp, #40]
   2f344:	cmp	x24, #0x2
   2f348:	b.lt	2f408 <mpfr_sin@@Base+0x22c>  // b.tstop
   2f34c:	ldr	x9, [sp, #48]
   2f350:	add	x8, x22, x24
   2f354:	sub	x27, x8, #0x1
   2f358:	cmp	x8, x9
   2f35c:	b.ge	2f588 <mpfr_sin@@Base+0x3ac>  // b.tcont
   2f360:	sub	x0, x29, #0x20
   2f364:	mov	x1, x27
   2f368:	bl	bf20 <mpfr_set_prec@plt>
   2f36c:	add	x0, sp, #0x40
   2f370:	mov	x1, x22
   2f374:	bl	bf20 <mpfr_set_prec@plt>
   2f378:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f37c:	ldr	x1, [x0, #2688]
   2f380:	add	x0, x0, #0xa80
   2f384:	blr	x1
   2f388:	ldr	x8, [sp, #56]
   2f38c:	mov	w2, wzr
   2f390:	add	x1, x8, x0
   2f394:	sub	x0, x29, #0x20
   2f398:	bl	c380 <mpfr_cache@plt>
   2f39c:	sub	x0, x29, #0x20
   2f3a0:	sub	x1, x29, #0x20
   2f3a4:	mov	w2, #0x1                   	// #1
   2f3a8:	mov	w3, wzr
   2f3ac:	bl	c2c0 <mpfr_mul_2ui@plt>
   2f3b0:	add	x0, sp, #0x40
   2f3b4:	sub	x2, x29, #0x20
   2f3b8:	mov	x1, x21
   2f3bc:	mov	w3, wzr
   2f3c0:	bl	ccf0 <mpfr_remainder@plt>
   2f3c4:	sub	x0, x29, #0x20
   2f3c8:	sub	x1, x29, #0x20
   2f3cc:	mov	w2, #0x1                   	// #1
   2f3d0:	mov	w3, wzr
   2f3d4:	bl	c8f0 <mpfr_div_2ui@plt>
   2f3d8:	ldr	w8, [sp, #72]
   2f3dc:	sub	x0, x29, #0x20
   2f3e0:	sub	x1, x29, #0x20
   2f3e4:	add	x2, sp, #0x40
   2f3e8:	mov	w3, #0x1                   	// #1
   2f3ec:	cmp	w8, #0x1
   2f3f0:	b.lt	2f518 <mpfr_sin@@Base+0x33c>  // b.tstop
   2f3f4:	bl	bbc0 <mpfr_sub@plt>
   2f3f8:	ldr	x9, [sp, #80]
   2f3fc:	cmp	x9, x25
   2f400:	b.eq	2f4ec <mpfr_sin@@Base+0x310>  // b.none
   2f404:	b	2f528 <mpfr_sin@@Base+0x34c>
   2f408:	mov	x19, xzr
   2f40c:	mov	x27, x21
   2f410:	ldr	w28, [x27, #8]
   2f414:	sub	x0, x29, #0x20
   2f418:	mov	x1, x22
   2f41c:	bl	bf20 <mpfr_set_prec@plt>
   2f420:	sub	x0, x29, #0x20
   2f424:	mov	w2, #0x4                   	// #4
   2f428:	mov	x1, x27
   2f42c:	bl	c420 <mpfr_cos@plt>
   2f430:	sub	x0, x29, #0x20
   2f434:	sub	x1, x29, #0x20
   2f438:	sub	x2, x29, #0x20
   2f43c:	mov	w3, #0x2                   	// #2
   2f440:	bl	bda0 <mpfr_mul@plt>
   2f444:	sub	x0, x29, #0x20
   2f448:	sub	x2, x29, #0x20
   2f44c:	mov	w1, #0x1                   	// #1
   2f450:	mov	w3, #0x1                   	// #1
   2f454:	bl	ca30 <mpfr_ui_sub@plt>
   2f458:	sub	x0, x29, #0x20
   2f45c:	sub	x1, x29, #0x20
   2f460:	mov	w2, #0x1                   	// #1
   2f464:	bl	c920 <mpfr_sqrt@plt>
   2f468:	tbz	w28, #31, 2f478 <mpfr_sin@@Base+0x29c>
   2f46c:	ldur	w8, [x29, #-24]
   2f470:	neg	w8, w8
   2f474:	stur	w8, [x29, #-24]
   2f478:	ldur	x8, [x29, #-16]
   2f47c:	cmp	x8, x25
   2f480:	b.eq	2f574 <mpfr_sin@@Base+0x398>  // b.none
   2f484:	add	x9, x22, x19
   2f488:	add	x10, x23, #0x2
   2f48c:	add	x9, x9, x8, lsl #1
   2f490:	cmp	x8, x10
   2f494:	sub	x27, x9, #0x3
   2f498:	b.lt	2f4d0 <mpfr_sin@@Base+0x2f4>  // b.tstop
   2f49c:	ldur	x8, [x29, #-32]
   2f4a0:	ldur	x0, [x29, #-8]
   2f4a4:	ldr	x3, [sp, #40]
   2f4a8:	mov	x2, x27
   2f4ac:	sub	x9, x8, #0x1
   2f4b0:	add	x8, x8, #0x3e
   2f4b4:	cmp	x9, #0x0
   2f4b8:	csel	x8, x8, x9, lt  // lt = tstop
   2f4bc:	asr	x8, x8, #6
   2f4c0:	add	x1, x8, #0x1
   2f4c4:	bl	c370 <mpfr_round_p@plt>
   2f4c8:	cbnz	w0, 2f5a4 <mpfr_sin@@Base+0x3c8>
   2f4cc:	ldur	x8, [x29, #-16]
   2f4d0:	ldr	x9, [x26]
   2f4d4:	subs	x9, x9, x27
   2f4d8:	csel	x9, x9, xzr, gt
   2f4dc:	cmp	x8, #0x1
   2f4e0:	add	x8, x9, x22
   2f4e4:	cset	w9, eq  // eq = none
   2f4e8:	lsl	x22, x8, x9
   2f4ec:	sub	x8, x23, x22
   2f4f0:	sub	x8, x8, #0x103
   2f4f4:	cmp	x20, x8
   2f4f8:	b.gt	2f558 <mpfr_sin@@Base+0x37c>
   2f4fc:	add	x22, x22, x20
   2f500:	cmp	x22, #0x0
   2f504:	cinc	x8, x22, lt  // lt = tstop
   2f508:	asr	x20, x8, #1
   2f50c:	cmp	x24, #0x2
   2f510:	b.lt	2f408 <mpfr_sin@@Base+0x22c>  // b.tstop
   2f514:	b	2f34c <mpfr_sin@@Base+0x170>
   2f518:	bl	c1e0 <mpfr_add@plt>
   2f51c:	ldr	x9, [sp, #80]
   2f520:	cmp	x9, x25
   2f524:	b.eq	2f4ec <mpfr_sin@@Base+0x310>  // b.none
   2f528:	mov	w8, #0x3                   	// #3
   2f52c:	sub	x8, x8, x22
   2f530:	cmp	x9, x8
   2f534:	b.lt	2f4ec <mpfr_sin@@Base+0x310>  // b.tstop
   2f538:	ldur	x9, [x29, #-16]
   2f53c:	cmp	x9, x25
   2f540:	b.eq	2f4ec <mpfr_sin@@Base+0x310>  // b.none
   2f544:	cmp	x9, x8
   2f548:	b.lt	2f4ec <mpfr_sin@@Base+0x310>  // b.tstop
   2f54c:	add	x27, sp, #0x40
   2f550:	mov	x19, #0xffffffffffffffff    	// #-1
   2f554:	b	2f410 <mpfr_sin@@Base+0x234>
   2f558:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f55c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f560:	mov	w1, #0xb9                  	// #185
   2f564:	add	x0, x0, #0x1d8
   2f568:	add	x2, x2, #0x287
   2f56c:	bl	cb20 <mpfr_assert_fail@plt>
   2f570:	b	2f4fc <mpfr_sin@@Base+0x320>
   2f574:	ldr	x8, [x21]
   2f578:	cmp	x22, x8
   2f57c:	csel	x8, x22, x8, gt
   2f580:	lsl	x22, x8, #1
   2f584:	b	2f4ec <mpfr_sin@@Base+0x310>
   2f588:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f58c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f590:	mov	w1, #0x74                  	// #116
   2f594:	add	x0, x0, #0x1d8
   2f598:	add	x2, x2, #0x244
   2f59c:	bl	cb20 <mpfr_assert_fail@plt>
   2f5a0:	b	2f360 <mpfr_sin@@Base+0x184>
   2f5a4:	mov	x25, x26
   2f5a8:	mov	x0, x26
   2f5ac:	ldr	w26, [sp, #12]
   2f5b0:	ldur	w3, [x29, #-24]
   2f5b4:	sub	x1, x29, #0x20
   2f5b8:	mov	w2, w26
   2f5bc:	bl	c690 <mpfr_set4@plt>
   2f5c0:	mov	w22, w0
   2f5c4:	sub	x0, x29, #0x20
   2f5c8:	bl	c0b0 <mpfr_clear@plt>
   2f5cc:	add	x0, sp, #0x40
   2f5d0:	bl	c0b0 <mpfr_clear@plt>
   2f5d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f5d8:	ldr	x1, [x0, #2640]
   2f5dc:	add	x0, x0, #0xa50
   2f5e0:	blr	x1
   2f5e4:	ldr	x8, [sp, #56]
   2f5e8:	ldr	w9, [sp, #36]
   2f5ec:	str	w9, [x8, x0]
   2f5f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f5f4:	ldr	x1, [x0, #2576]
   2f5f8:	add	x0, x0, #0xa10
   2f5fc:	blr	x1
   2f600:	ldr	x10, [sp, #24]
   2f604:	str	x10, [x8, x0]
   2f608:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f60c:	ldr	x1, [x0, #2608]
   2f610:	add	x0, x0, #0xa30
   2f614:	blr	x1
   2f618:	ldr	x11, [sp, #16]
   2f61c:	str	x11, [x8, x0]
   2f620:	ldr	x8, [x25, #16]
   2f624:	cmp	x8, x11
   2f628:	b.gt	2f6b0 <mpfr_sin@@Base+0x4d4>
   2f62c:	cmp	x8, x10
   2f630:	b.lt	2f6b0 <mpfr_sin@@Base+0x4d4>  // b.tstop
   2f634:	cbz	w22, 2f654 <mpfr_sin@@Base+0x478>
   2f638:	orr	w8, w9, #0x8
   2f63c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f640:	ldr	x1, [x0, #2640]
   2f644:	add	x0, x0, #0xa50
   2f648:	blr	x1
   2f64c:	ldr	x9, [sp, #56]
   2f650:	str	w8, [x9, x0]
   2f654:	mov	w0, w22
   2f658:	ldp	x20, x19, [sp, #208]
   2f65c:	ldp	x22, x21, [sp, #192]
   2f660:	ldp	x24, x23, [sp, #176]
   2f664:	ldp	x26, x25, [sp, #160]
   2f668:	ldp	x28, x27, [sp, #144]
   2f66c:	ldp	x29, x30, [sp, #128]
   2f670:	add	sp, sp, #0xe0
   2f674:	ret
   2f678:	and	x8, x24, #0xfffffffffffffffe
   2f67c:	cmp	x8, x23
   2f680:	b.ne	2f6fc <mpfr_sin@@Base+0x520>  // b.any
   2f684:	str	x23, [x25, #16]
   2f688:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f68c:	ldr	x1, [x0, #2640]
   2f690:	add	x0, x0, #0xa50
   2f694:	blr	x1
   2f698:	mrs	x8, tpidr_el0
   2f69c:	ldr	w9, [x8, x0]
   2f6a0:	mov	w22, wzr
   2f6a4:	orr	w9, w9, #0x4
   2f6a8:	str	w9, [x8, x0]
   2f6ac:	b	2f654 <mpfr_sin@@Base+0x478>
   2f6b0:	mov	x0, x25
   2f6b4:	mov	w1, w22
   2f6b8:	mov	w2, w26
   2f6bc:	bl	cb10 <mpfr_check_range@plt>
   2f6c0:	mov	w22, w0
   2f6c4:	b	2f654 <mpfr_sin@@Base+0x478>
   2f6c8:	mov	x8, xzr
   2f6cc:	add	x8, x8, x27
   2f6d0:	add	x22, x8, #0x7
   2f6d4:	str	w26, [sp, #12]
   2f6d8:	tbz	x24, #63, 2f310 <mpfr_sin@@Base+0x134>
   2f6dc:	b	2f2fc <mpfr_sin@@Base+0x120>
   2f6e0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f6e4:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f6e8:	add	x0, x0, #0x1d8
   2f6ec:	add	x2, x2, #0x238
   2f6f0:	mov	w1, #0x55                  	// #85
   2f6f4:	bl	cb20 <mpfr_assert_fail@plt>
   2f6f8:	b	2f2e0 <mpfr_sin@@Base+0x104>
   2f6fc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2f700:	str	x8, [x25, #16]
   2f704:	ldr	w8, [x21, #8]
   2f708:	mov	w22, wzr
   2f70c:	str	w8, [x25, #8]
   2f710:	b	2f654 <mpfr_sin@@Base+0x478>
   2f714:	mov	x0, x25
   2f718:	mov	x1, x21
   2f71c:	mov	w3, wzr
   2f720:	mov	w4, w26
   2f724:	bl	c530 <mpfr_round_near_x@plt>
   2f728:	mov	w22, w0
   2f72c:	cbnz	w0, 2f654 <mpfr_sin@@Base+0x478>
   2f730:	b	2f23c <mpfr_sin@@Base+0x60>
   2f734:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f738:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f73c:	add	x0, x0, #0x1d8
   2f740:	add	x2, x2, #0x2d5
   2f744:	mov	w1, #0x60                  	// #96
   2f748:	bl	cb20 <mpfr_assert_fail@plt>
   2f74c:	b	2f30c <mpfr_sin@@Base+0x130>

000000000002f750 <mpfr_tan@@Base>:
   2f750:	sub	sp, sp, #0x150
   2f754:	stp	x29, x30, [sp, #240]
   2f758:	stp	x28, x27, [sp, #256]
   2f75c:	stp	x26, x25, [sp, #272]
   2f760:	stp	x24, x23, [sp, #288]
   2f764:	stp	x22, x21, [sp, #304]
   2f768:	stp	x20, x19, [sp, #320]
   2f76c:	ldr	x8, [x1, #16]
   2f770:	mov	x26, #0xfffffffffffffeff    	// #-257
   2f774:	movk	x26, #0x7fff, lsl #48
   2f778:	add	x9, x26, #0x105
   2f77c:	mov	x21, x1
   2f780:	cmp	x8, x9
   2f784:	mov	x19, x0
   2f788:	add	x29, sp, #0xf0
   2f78c:	b.lt	2fa78 <mpfr_tan@@Base+0x328>  // b.tstop
   2f790:	mov	w20, w2
   2f794:	tbz	x8, #63, 2f7b0 <mpfr_tan@@Base+0x60>
   2f798:	ldr	x9, [x19]
   2f79c:	mov	w10, #0x1                   	// #1
   2f7a0:	sub	x2, x10, x8, lsl #1
   2f7a4:	add	x8, x9, #0x1
   2f7a8:	cmp	x2, x8
   2f7ac:	b.hi	2fb18 <mpfr_tan@@Base+0x3c8>  // b.pmore
   2f7b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f7b4:	ldr	x1, [x0, #2640]
   2f7b8:	add	x0, x0, #0xa50
   2f7bc:	blr	x1
   2f7c0:	mrs	x25, tpidr_el0
   2f7c4:	ldr	w8, [x25, x0]
   2f7c8:	str	w8, [sp, #20]
   2f7cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f7d0:	ldr	x1, [x0, #2576]
   2f7d4:	add	x0, x0, #0xa10
   2f7d8:	blr	x1
   2f7dc:	ldr	x28, [x25, x0]
   2f7e0:	mov	x8, x0
   2f7e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f7e8:	ldr	x1, [x0, #2608]
   2f7ec:	add	x0, x0, #0xa30
   2f7f0:	blr	x1
   2f7f4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f7f8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f7fc:	ldr	x24, [x25, x0]
   2f800:	str	x9, [x25, x8]
   2f804:	str	x10, [x25, x0]
   2f808:	ldr	x23, [x19]
   2f80c:	subs	x22, x23, #0x1
   2f810:	b.eq	2fab4 <mpfr_tan@@Base+0x364>  // b.none
   2f814:	b.le	2fae4 <mpfr_tan@@Base+0x394>
   2f818:	clz	x8, x22
   2f81c:	mov	w9, #0x40                  	// #64
   2f820:	sub	x8, x9, x8
   2f824:	add	x8, x8, x23
   2f828:	sub	x9, x26, #0xd
   2f82c:	cmp	x8, x9
   2f830:	b.gt	2fac8 <mpfr_tan@@Base+0x378>
   2f834:	add	x9, x8, #0xc
   2f838:	add	x10, x8, #0x4b
   2f83c:	cmp	x9, #0x0
   2f840:	csel	x9, x10, x9, lt  // lt = tstop
   2f844:	asr	x9, x9, #6
   2f848:	add	x27, x8, #0xd
   2f84c:	cmp	x8, #0x1f4
   2f850:	add	x26, x9, #0x1
   2f854:	b.lt	2f868 <mpfr_tan@@Base+0x118>  // b.tstop
   2f858:	lsl	x22, x26, #4
   2f85c:	mov	x0, x22
   2f860:	bl	ccd0 <mpfr_allocate_func@plt>
   2f864:	b	2f874 <mpfr_tan@@Base+0x124>
   2f868:	add	x8, sp, #0x18
   2f86c:	mov	x22, xzr
   2f870:	add	x0, x8, #0x10
   2f874:	cmp	w20, #0x0
   2f878:	stp	x22, x0, [sp, #24]
   2f87c:	mov	w22, #0x1                   	// #1
   2f880:	add	x8, x0, x26, lsl #3
   2f884:	mov	w9, #0x40                  	// #64
   2f888:	cinc	x23, x23, eq  // eq = none
   2f88c:	stur	x0, [x29, #-16]
   2f890:	str	x9, [sp, #8]
   2f894:	stur	w22, [x29, #-32]
   2f898:	stur	x27, [x29, #-72]
   2f89c:	stp	x8, x27, [x29, #-48]
   2f8a0:	sub	x0, x29, #0x28
   2f8a4:	sub	x1, x29, #0x48
   2f8a8:	mov	x2, x21
   2f8ac:	mov	w3, wzr
   2f8b0:	stur	w22, [x29, #-64]
   2f8b4:	bl	cc20 <mpfr_sin_cos@plt>
   2f8b8:	sub	x0, x29, #0x48
   2f8bc:	sub	x1, x29, #0x28
   2f8c0:	sub	x2, x29, #0x48
   2f8c4:	mov	w3, wzr
   2f8c8:	bl	c610 <mpfr_div@plt>
   2f8cc:	ldur	x8, [x29, #-56]
   2f8d0:	mov	x26, #0xfffffffffffffeff    	// #-257
   2f8d4:	movk	x26, #0x7fff, lsl #48
   2f8d8:	add	x9, x26, #0x105
   2f8dc:	cmp	x8, x9
   2f8e0:	b.lt	2f914 <mpfr_tan@@Base+0x1c4>  // b.tstop
   2f8e4:	ldur	x8, [x29, #-72]
   2f8e8:	ldur	x0, [x29, #-48]
   2f8ec:	sub	x2, x27, #0x2
   2f8f0:	mov	x3, x23
   2f8f4:	sub	x9, x8, #0x1
   2f8f8:	add	x8, x8, #0x3e
   2f8fc:	cmp	x9, #0x0
   2f900:	csel	x8, x8, x9, lt  // lt = tstop
   2f904:	asr	x8, x8, #6
   2f908:	add	x1, x8, #0x1
   2f90c:	bl	c370 <mpfr_round_p@plt>
   2f910:	cbnz	w0, 2f9bc <mpfr_tan@@Base+0x26c>
   2f914:	ldr	x9, [sp, #8]
   2f918:	sub	x8, x26, x27
   2f91c:	cmp	x9, x8
   2f920:	mov	x8, x9
   2f924:	b.gt	2f99c <mpfr_tan@@Base+0x24c>
   2f928:	add	x27, x27, x8
   2f92c:	cmp	x27, #0x0
   2f930:	cinc	x8, x27, lt  // lt = tstop
   2f934:	cmp	x27, x26
   2f938:	b.gt	2fac8 <mpfr_tan@@Base+0x378>
   2f93c:	asr	x8, x8, #1
   2f940:	str	x8, [sp, #8]
   2f944:	sub	x8, x27, #0x1
   2f948:	add	x9, x27, #0x3e
   2f94c:	cmp	x8, #0x0
   2f950:	ldr	x1, [sp, #24]
   2f954:	csel	x8, x9, x8, lt  // lt = tstop
   2f958:	asr	x8, x8, #6
   2f95c:	add	x26, x8, #0x1
   2f960:	lsl	x2, x26, #4
   2f964:	str	x2, [sp, #24]
   2f968:	cbz	x1, 2f978 <mpfr_tan@@Base+0x228>
   2f96c:	ldr	x0, [sp, #32]
   2f970:	bl	c200 <mpfr_reallocate_func@plt>
   2f974:	b	2f980 <mpfr_tan@@Base+0x230>
   2f978:	mov	x0, x2
   2f97c:	bl	ccd0 <mpfr_allocate_func@plt>
   2f980:	add	x8, x0, x26, lsl #3
   2f984:	str	x0, [sp, #32]
   2f988:	stur	x0, [x29, #-16]
   2f98c:	stur	w22, [x29, #-32]
   2f990:	stur	x27, [x29, #-72]
   2f994:	stp	x8, x27, [x29, #-48]
   2f998:	b	2f8a0 <mpfr_tan@@Base+0x150>
   2f99c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f9a0:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2f9a4:	mov	w1, #0x50                  	// #80
   2f9a8:	add	x0, x0, #0xd9
   2f9ac:	add	x2, x2, #0x287
   2f9b0:	bl	cb20 <mpfr_assert_fail@plt>
   2f9b4:	ldr	x8, [sp, #8]
   2f9b8:	b	2f928 <mpfr_tan@@Base+0x1d8>
   2f9bc:	ldur	w3, [x29, #-64]
   2f9c0:	sub	x1, x29, #0x48
   2f9c4:	mov	x0, x19
   2f9c8:	mov	w2, w20
   2f9cc:	bl	c690 <mpfr_set4@plt>
   2f9d0:	ldr	x1, [sp, #24]
   2f9d4:	mov	w22, w0
   2f9d8:	cbz	x1, 2f9e4 <mpfr_tan@@Base+0x294>
   2f9dc:	ldr	x0, [sp, #32]
   2f9e0:	bl	cc00 <mpfr_free_func@plt>
   2f9e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2f9e8:	ldr	x1, [x0, #2640]
   2f9ec:	add	x0, x0, #0xa50
   2f9f0:	blr	x1
   2f9f4:	ldr	w9, [sp, #20]
   2f9f8:	str	w9, [x25, x0]
   2f9fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fa00:	ldr	x1, [x0, #2576]
   2fa04:	add	x0, x0, #0xa10
   2fa08:	blr	x1
   2fa0c:	str	x28, [x25, x0]
   2fa10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fa14:	ldr	x1, [x0, #2608]
   2fa18:	add	x0, x0, #0xa30
   2fa1c:	blr	x1
   2fa20:	str	x24, [x25, x0]
   2fa24:	ldr	x8, [x19, #16]
   2fa28:	cmp	x8, x24
   2fa2c:	b.gt	2facc <mpfr_tan@@Base+0x37c>
   2fa30:	cmp	x8, x28
   2fa34:	b.lt	2facc <mpfr_tan@@Base+0x37c>  // b.tstop
   2fa38:	cbz	w22, 2fa54 <mpfr_tan@@Base+0x304>
   2fa3c:	orr	w8, w9, #0x8
   2fa40:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fa44:	ldr	x1, [x0, #2640]
   2fa48:	add	x0, x0, #0xa50
   2fa4c:	blr	x1
   2fa50:	str	w8, [x25, x0]
   2fa54:	mov	w0, w22
   2fa58:	ldp	x20, x19, [sp, #320]
   2fa5c:	ldp	x22, x21, [sp, #304]
   2fa60:	ldp	x24, x23, [sp, #288]
   2fa64:	ldp	x26, x25, [sp, #272]
   2fa68:	ldp	x28, x27, [sp, #256]
   2fa6c:	ldp	x29, x30, [sp, #240]
   2fa70:	add	sp, sp, #0x150
   2fa74:	ret
   2fa78:	and	x9, x8, #0xfffffffffffffffe
   2fa7c:	add	x8, x26, #0x103
   2fa80:	cmp	x9, x8
   2fa84:	b.ne	2fb00 <mpfr_tan@@Base+0x3b0>  // b.any
   2fa88:	str	x8, [x19, #16]
   2fa8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fa90:	ldr	x1, [x0, #2640]
   2fa94:	add	x0, x0, #0xa50
   2fa98:	blr	x1
   2fa9c:	mrs	x8, tpidr_el0
   2faa0:	ldr	w9, [x8, x0]
   2faa4:	mov	w22, wzr
   2faa8:	orr	w9, w9, #0x4
   2faac:	str	w9, [x8, x0]
   2fab0:	b	2fa54 <mpfr_tan@@Base+0x304>
   2fab4:	mov	x8, xzr
   2fab8:	add	x8, x8, x23
   2fabc:	sub	x9, x26, #0xd
   2fac0:	cmp	x8, x9
   2fac4:	b.le	2f834 <mpfr_tan@@Base+0xe4>
   2fac8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2facc:	mov	x0, x19
   2fad0:	mov	w1, w22
   2fad4:	mov	w2, w20
   2fad8:	bl	cb10 <mpfr_check_range@plt>
   2fadc:	mov	w22, w0
   2fae0:	b	2fa54 <mpfr_tan@@Base+0x304>
   2fae4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2fae8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   2faec:	add	x0, x0, #0xd9
   2faf0:	add	x2, x2, #0x238
   2faf4:	mov	w1, #0x42                  	// #66
   2faf8:	bl	cb20 <mpfr_assert_fail@plt>
   2fafc:	b	2f818 <mpfr_tan@@Base+0xc8>
   2fb00:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2fb04:	str	x8, [x19, #16]
   2fb08:	ldr	w8, [x21, #8]
   2fb0c:	mov	w22, wzr
   2fb10:	str	w8, [x19, #8]
   2fb14:	b	2fa54 <mpfr_tan@@Base+0x304>
   2fb18:	mov	w3, #0x1                   	// #1
   2fb1c:	mov	x0, x19
   2fb20:	mov	x1, x21
   2fb24:	mov	w4, w20
   2fb28:	bl	c530 <mpfr_round_near_x@plt>
   2fb2c:	mov	w22, w0
   2fb30:	cbnz	w0, 2fa54 <mpfr_tan@@Base+0x304>
   2fb34:	b	2f7b0 <mpfr_tan@@Base+0x60>

000000000002fb38 <mpfr_fma@@Base>:
   2fb38:	stp	x29, x30, [sp, #-96]!
   2fb3c:	stp	x28, x27, [sp, #16]
   2fb40:	stp	x26, x25, [sp, #32]
   2fb44:	stp	x24, x23, [sp, #48]
   2fb48:	stp	x22, x21, [sp, #64]
   2fb4c:	stp	x20, x19, [sp, #80]
   2fb50:	mov	x29, sp
   2fb54:	sub	sp, sp, #0x110
   2fb58:	ldr	x10, [x1, #16]
   2fb5c:	mov	x26, #0x2                   	// #2
   2fb60:	movk	x26, #0x8000, lsl #48
   2fb64:	add	x8, x26, #0x2
   2fb68:	mov	w19, w4
   2fb6c:	mov	x21, x3
   2fb70:	mov	x22, x2
   2fb74:	mov	x23, x1
   2fb78:	cmp	x10, x8
   2fb7c:	b.lt	2ff8c <mpfr_fma@@Base+0x454>  // b.tstop
   2fb80:	ldr	x11, [x22, #16]
   2fb84:	cmp	x11, x8
   2fb88:	b.lt	2ff98 <mpfr_fma@@Base+0x460>  // b.tstop
   2fb8c:	ldr	x9, [x21, #16]
   2fb90:	add	x8, x26, #0x2
   2fb94:	cmp	x9, x8
   2fb98:	b.lt	2ffa0 <mpfr_fma@@Base+0x468>  // b.tstop
   2fb9c:	ldr	x8, [x23]
   2fba0:	ldr	x12, [x22]
   2fba4:	stur	x0, [x29, #-256]
   2fba8:	add	x20, x11, x10
   2fbac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fbb0:	ldr	x1, [x0, #2608]
   2fbb4:	add	x0, x0, #0xa30
   2fbb8:	blr	x1
   2fbbc:	mrs	x25, tpidr_el0
   2fbc0:	ldr	x28, [x25, x0]
   2fbc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fbc8:	ldr	x1, [x0, #2576]
   2fbcc:	add	x0, x0, #0xa10
   2fbd0:	blr	x1
   2fbd4:	ldr	x27, [x25, x0]
   2fbd8:	cmp	x8, x12
   2fbdc:	b.ne	2fd58 <mpfr_fma@@Base+0x220>  // b.any
   2fbe0:	cmp	x20, x28
   2fbe4:	b.gt	2fd58 <mpfr_fma@@Base+0x220>
   2fbe8:	cmp	x20, x27
   2fbec:	b.le	2fd58 <mpfr_fma@@Base+0x220>
   2fbf0:	cmp	x8, #0x3f
   2fbf4:	b.gt	2fc80 <mpfr_fma@@Base+0x148>
   2fbf8:	ldr	x10, [x21]
   2fbfc:	cmp	x10, x8
   2fc00:	b.ne	2fc8c <mpfr_fma@@Base+0x154>  // b.any
   2fc04:	ldur	x10, [x29, #-256]
   2fc08:	ldr	x10, [x10]
   2fc0c:	cmp	x10, x8
   2fc10:	b.ne	2fc8c <mpfr_fma@@Base+0x154>  // b.any
   2fc14:	ldr	x10, [x23, #24]
   2fc18:	ldr	x11, [x22, #24]
   2fc1c:	lsl	x12, x8, #1
   2fc20:	sub	x13, x29, #0xf8
   2fc24:	ldr	x14, [x10]
   2fc28:	ldr	x11, [x11]
   2fc2c:	sub	x10, x29, #0xc8
   2fc30:	stp	x9, x10, [x29, #-168]
   2fc34:	umulh	x10, x14, x11
   2fc38:	mul	x11, x11, x14
   2fc3c:	stur	x12, [x29, #-40]
   2fc40:	stur	x13, [x29, #-16]
   2fc44:	stur	x12, [x29, #-184]
   2fc48:	stp	x11, x10, [x29, #-248]
   2fc4c:	ldr	w12, [x23, #8]
   2fc50:	ldr	w13, [x22, #8]
   2fc54:	cmp	x8, #0x20
   2fc58:	mul	w12, w13, w12
   2fc5c:	stur	w12, [x29, #-32]
   2fc60:	ldr	w12, [x21, #8]
   2fc64:	stur	w12, [x29, #-176]
   2fc68:	b.gt	2ff18 <mpfr_fma@@Base+0x3e0>
   2fc6c:	tbnz	x10, #63, 2ff40 <mpfr_fma@@Base+0x408>
   2fc70:	lsl	x8, x10, #1
   2fc74:	stur	x8, [x29, #-248]
   2fc78:	sub	x20, x20, #0x1
   2fc7c:	b	2ff44 <mpfr_fma@@Base+0x40c>
   2fc80:	mov	w9, #0x1400                	// #5120
   2fc84:	cmp	x8, x9
   2fc88:	b.gt	2fd58 <mpfr_fma@@Base+0x220>
   2fc8c:	sub	x9, x8, #0x1
   2fc90:	add	x8, x8, #0x3e
   2fc94:	cmp	x9, #0x0
   2fc98:	csel	x8, x8, x9, lt  // lt = tstop
   2fc9c:	asr	x8, x8, #6
   2fca0:	add	x25, x8, #0x1
   2fca4:	lsl	x1, x25, #4
   2fca8:	lsl	x24, x25, #1
   2fcac:	cmp	x1, #0x4, lsl #12
   2fcb0:	stur	xzr, [x29, #-184]
   2fcb4:	b.hi	30114 <mpfr_fma@@Base+0x5dc>  // b.pmore
   2fcb8:	add	x9, x1, #0xf
   2fcbc:	mov	x8, sp
   2fcc0:	and	x9, x9, #0xfffffffffffffff0
   2fcc4:	sub	x26, x8, x9
   2fcc8:	mov	sp, x26
   2fccc:	lsl	x8, x25, #7
   2fcd0:	mov	w9, #0x1                   	// #1
   2fcd4:	stur	x26, [x29, #-16]
   2fcd8:	stur	x8, [x29, #-40]
   2fcdc:	stur	w9, [x29, #-32]
   2fce0:	ldr	x1, [x23, #24]
   2fce4:	ldr	x2, [x22, #24]
   2fce8:	mov	x0, x26
   2fcec:	mov	x3, x25
   2fcf0:	bl	c460 <__gmpn_mul_n@plt>
   2fcf4:	add	x8, x26, x24, lsl #3
   2fcf8:	ldur	x8, [x8, #-8]
   2fcfc:	tbnz	x8, #63, 2fd18 <mpfr_fma@@Base+0x1e0>
   2fd00:	mov	w3, #0x1                   	// #1
   2fd04:	mov	x0, x26
   2fd08:	mov	x1, x26
   2fd0c:	mov	x2, x24
   2fd10:	bl	bd10 <__gmpn_lshift@plt>
   2fd14:	sub	x20, x20, #0x1
   2fd18:	stur	x20, [x29, #-24]
   2fd1c:	ldr	w8, [x23, #8]
   2fd20:	ldr	w9, [x22, #8]
   2fd24:	ldur	x0, [x29, #-256]
   2fd28:	sub	x1, x29, #0x28
   2fd2c:	mov	x2, x21
   2fd30:	mul	w8, w9, w8
   2fd34:	mov	w3, w19
   2fd38:	stur	w8, [x29, #-32]
   2fd3c:	bl	c1e0 <mpfr_add@plt>
   2fd40:	ldur	x8, [x29, #-184]
   2fd44:	mov	w24, w0
   2fd48:	cbz	x8, 2fef4 <mpfr_fma@@Base+0x3bc>
   2fd4c:	mov	x0, x8
   2fd50:	bl	c400 <mpfr_tmp_free@plt>
   2fd54:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   2fd58:	sub	x9, x29, #0x4
   2fd5c:	stur	w19, [x9, #-256]
   2fd60:	add	x19, x12, x8
   2fd64:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   2fd68:	cmp	x19, x8
   2fd6c:	b.ge	3032c <mpfr_fma@@Base+0x7f4>  // b.tcont
   2fd70:	cmp	x19, #0x401
   2fd74:	b.lt	2fdd0 <mpfr_fma@@Base+0x298>  // b.tstop
   2fd78:	sub	x8, x19, #0x1
   2fd7c:	add	x9, x19, #0x3e
   2fd80:	cmp	x8, #0x0
   2fd84:	csel	x8, x9, x8, lt  // lt = tstop
   2fd88:	asr	x8, x8, #6
   2fd8c:	lsl	x8, x8, #3
   2fd90:	add	x24, x8, #0x8
   2fd94:	mov	x0, x24
   2fd98:	bl	ccd0 <mpfr_allocate_func@plt>
   2fd9c:	mov	x8, x0
   2fda0:	stur	x0, [x29, #-176]
   2fda4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fda8:	ldr	x1, [x0, #2576]
   2fdac:	add	x0, x0, #0xa10
   2fdb0:	blr	x1
   2fdb4:	ldr	x27, [x25, x0]
   2fdb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fdbc:	ldr	x1, [x0, #2608]
   2fdc0:	add	x0, x0, #0xa30
   2fdc4:	blr	x1
   2fdc8:	ldr	x28, [x25, x0]
   2fdcc:	b	2fde0 <mpfr_fma@@Base+0x2a8>
   2fdd0:	sub	x8, x29, #0xb8
   2fdd4:	mov	x24, xzr
   2fdd8:	add	x8, x8, #0x10
   2fddc:	stur	x8, [x29, #-176]
   2fde0:	stur	x8, [x29, #-16]
   2fde4:	mov	w8, #0x1                   	// #1
   2fde8:	stur	x24, [x29, #-184]
   2fdec:	stur	x19, [x29, #-40]
   2fdf0:	stur	w8, [x29, #-32]
   2fdf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fdf8:	ldr	x1, [x0, #2640]
   2fdfc:	add	x0, x0, #0xa50
   2fe00:	blr	x1
   2fe04:	ldr	w19, [x25, x0]
   2fe08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fe0c:	ldr	x1, [x0, #2576]
   2fe10:	add	x0, x0, #0xa10
   2fe14:	blr	x1
   2fe18:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2fe1c:	str	x8, [x25, x0]
   2fe20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fe24:	ldr	x1, [x0, #2608]
   2fe28:	add	x0, x0, #0xa30
   2fe2c:	blr	x1
   2fe30:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2fe34:	str	x8, [x25, x0]
   2fe38:	sub	x0, x29, #0x28
   2fe3c:	mov	x1, x23
   2fe40:	mov	x2, x22
   2fe44:	mov	w3, wzr
   2fe48:	bl	bda0 <mpfr_mul@plt>
   2fe4c:	cbnz	w0, 3000c <mpfr_fma@@Base+0x4d4>
   2fe50:	ldur	x20, [x29, #-256]
   2fe54:	sub	x8, x29, #0x4
   2fe58:	ldur	w3, [x8, #-256]
   2fe5c:	sub	x1, x29, #0x28
   2fe60:	mov	x0, x20
   2fe64:	mov	x2, x21
   2fe68:	bl	c1e0 <mpfr_add@plt>
   2fe6c:	ldur	x1, [x29, #-184]
   2fe70:	mov	w24, w0
   2fe74:	cbz	x1, 2fe80 <mpfr_fma@@Base+0x348>
   2fe78:	ldur	x0, [x29, #-176]
   2fe7c:	bl	cc00 <mpfr_free_func@plt>
   2fe80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fe84:	ldr	x1, [x0, #2640]
   2fe88:	add	x0, x0, #0xa50
   2fe8c:	blr	x1
   2fe90:	ldr	w8, [x25, x0]
   2fe94:	orr	w8, w8, w19
   2fe98:	str	w8, [x25, x0]
   2fe9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fea0:	ldr	x1, [x0, #2576]
   2fea4:	add	x0, x0, #0xa10
   2fea8:	blr	x1
   2feac:	str	x27, [x25, x0]
   2feb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2feb4:	ldr	x1, [x0, #2608]
   2feb8:	add	x0, x0, #0xa30
   2febc:	blr	x1
   2fec0:	str	x28, [x25, x0]
   2fec4:	ldr	x9, [x20, #16]
   2fec8:	cmp	x9, x28
   2fecc:	b.gt	300b0 <mpfr_fma@@Base+0x578>
   2fed0:	cmp	x9, x27
   2fed4:	b.lt	300b0 <mpfr_fma@@Base+0x578>  // b.tstop
   2fed8:	cbz	w24, 2fef4 <mpfr_fma@@Base+0x3bc>
   2fedc:	orr	w8, w8, #0x8
   2fee0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2fee4:	ldr	x1, [x0, #2640]
   2fee8:	add	x0, x0, #0xa50
   2feec:	blr	x1
   2fef0:	str	w8, [x25, x0]
   2fef4:	mov	w0, w24
   2fef8:	mov	sp, x29
   2fefc:	ldp	x20, x19, [sp, #80]
   2ff00:	ldp	x22, x21, [sp, #64]
   2ff04:	ldp	x24, x23, [sp, #48]
   2ff08:	ldp	x26, x25, [sp, #32]
   2ff0c:	ldp	x28, x27, [sp, #16]
   2ff10:	ldp	x29, x30, [sp], #96
   2ff14:	ret
   2ff18:	ldr	x8, [x21, #24]
   2ff1c:	ldr	x8, [x8]
   2ff20:	stp	xzr, x8, [x29, #-200]
   2ff24:	tbnz	x10, #63, 2ff58 <mpfr_fma@@Base+0x420>
   2ff28:	extr	x8, x10, x11, #63
   2ff2c:	lsl	x9, x11, #1
   2ff30:	sub	x10, x20, #0x1
   2ff34:	stp	x9, x8, [x29, #-248]
   2ff38:	stur	x10, [x29, #-24]
   2ff3c:	b	2ff5c <mpfr_fma@@Base+0x424>
   2ff40:	stur	x10, [x29, #-248]
   2ff44:	stur	x20, [x29, #-24]
   2ff48:	ldr	x8, [x21, #24]
   2ff4c:	ldr	x8, [x8]
   2ff50:	stur	x8, [x29, #-200]
   2ff54:	b	2ff5c <mpfr_fma@@Base+0x424>
   2ff58:	stur	x20, [x29, #-24]
   2ff5c:	sub	x0, x29, #0x28
   2ff60:	sub	x1, x29, #0x28
   2ff64:	sub	x2, x29, #0xb8
   2ff68:	mov	w3, w19
   2ff6c:	bl	c1e0 <mpfr_add@plt>
   2ff70:	mov	w3, w0
   2ff74:	ldur	x0, [x29, #-256]
   2ff78:	sub	x1, x29, #0x28
   2ff7c:	mov	w2, w19
   2ff80:	bl	cac0 <mpfr_set_1_2@plt>
   2ff84:	mov	w24, w0
   2ff88:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   2ff8c:	cmp	x10, x26
   2ff90:	b.eq	2ffac <mpfr_fma@@Base+0x474>  // b.none
   2ff94:	ldr	x11, [x22, #16]
   2ff98:	cmp	x11, x26
   2ff9c:	b.eq	2ffac <mpfr_fma@@Base+0x474>  // b.none
   2ffa0:	ldr	x8, [x21, #16]
   2ffa4:	cmp	x8, x26
   2ffa8:	b.ne	2ffd8 <mpfr_fma@@Base+0x4a0>  // b.any
   2ffac:	str	x26, [x0, #16]
   2ffb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   2ffb4:	ldr	x1, [x0, #2640]
   2ffb8:	add	x0, x0, #0xa50
   2ffbc:	blr	x1
   2ffc0:	mrs	x8, tpidr_el0
   2ffc4:	ldr	w9, [x8, x0]
   2ffc8:	mov	w24, wzr
   2ffcc:	orr	w9, w9, #0x4
   2ffd0:	str	w9, [x8, x0]
   2ffd4:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   2ffd8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2ffdc:	cmp	x10, x9
   2ffe0:	b.eq	300c8 <mpfr_fma@@Base+0x590>  // b.none
   2ffe4:	cmp	x11, x9
   2ffe8:	b.eq	300c8 <mpfr_fma@@Base+0x590>  // b.none
   2ffec:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2fff0:	cmp	x8, x9
   2fff4:	b.ne	30238 <mpfr_fma@@Base+0x700>  // b.any
   2fff8:	str	x9, [x0, #16]
   2fffc:	ldr	w8, [x21, #8]
   30000:	mov	w24, wzr
   30004:	str	w8, [x0, #8]
   30008:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   3000c:	ldur	x8, [x29, #-24]
   30010:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   30014:	cmp	x8, x9
   30018:	b.ne	30124 <mpfr_fma@@Base+0x5ec>  // b.any
   3001c:	ldur	x1, [x29, #-184]
   30020:	ldur	w24, [x29, #-32]
   30024:	cbz	x1, 30030 <mpfr_fma@@Base+0x4f8>
   30028:	ldur	x0, [x29, #-176]
   3002c:	bl	cc00 <mpfr_free_func@plt>
   30030:	ldr	w8, [x21, #8]
   30034:	cmp	w24, w8
   30038:	b.eq	3005c <mpfr_fma@@Base+0x524>  // b.none
   3003c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30040:	ldr	x1, [x0, #2608]
   30044:	add	x0, x0, #0xa30
   30048:	blr	x1
   3004c:	ldr	x8, [x25, x0]
   30050:	add	x8, x8, #0x3
   30054:	cmp	x20, x8
   30058:	b.lt	30170 <mpfr_fma@@Base+0x638>  // b.tstop
   3005c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30060:	ldr	x1, [x0, #2640]
   30064:	add	x0, x0, #0xa50
   30068:	blr	x1
   3006c:	str	w19, [x25, x0]
   30070:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30074:	ldr	x1, [x0, #2576]
   30078:	add	x0, x0, #0xa10
   3007c:	blr	x1
   30080:	str	x27, [x25, x0]
   30084:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30088:	ldr	x1, [x0, #2608]
   3008c:	add	x0, x0, #0xa30
   30090:	blr	x1
   30094:	sub	x8, x29, #0x4
   30098:	str	x28, [x25, x0]
   3009c:	ldur	x0, [x29, #-256]
   300a0:	ldur	w1, [x8, #-256]
   300a4:	mov	w2, w24
   300a8:	bl	bf90 <mpfr_overflow@plt>
   300ac:	b	2ff84 <mpfr_fma@@Base+0x44c>
   300b0:	sub	x8, x29, #0x4
   300b4:	ldur	w2, [x8, #-256]
   300b8:	mov	x0, x20
   300bc:	mov	w1, w24
   300c0:	bl	cb10 <mpfr_check_range@plt>
   300c4:	b	2ff84 <mpfr_fma@@Base+0x44c>
   300c8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   300cc:	cmp	x10, x9
   300d0:	b.eq	2ffac <mpfr_fma@@Base+0x474>  // b.none
   300d4:	cmp	x11, x9
   300d8:	b.eq	2ffac <mpfr_fma@@Base+0x474>  // b.none
   300dc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   300e0:	cmp	x8, x9
   300e4:	b.ne	30288 <mpfr_fma@@Base+0x750>  // b.any
   300e8:	ldr	w8, [x23, #8]
   300ec:	ldr	w9, [x22, #8]
   300f0:	ldr	w10, [x21, #8]
   300f4:	mul	w8, w9, w8
   300f8:	cmp	w8, w10
   300fc:	b.ne	2ffac <mpfr_fma@@Base+0x474>  // b.any
   30100:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   30104:	mov	w24, wzr
   30108:	str	x9, [x0, #16]
   3010c:	str	w8, [x0, #8]
   30110:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   30114:	sub	x0, x29, #0xb8
   30118:	bl	be10 <mpfr_tmp_allocate@plt>
   3011c:	mov	x26, x0
   30120:	b	2fccc <mpfr_fma@@Base+0x194>
   30124:	ldr	x8, [x21, #16]
   30128:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3012c:	ldr	x1, [x0, #2576]
   30130:	add	x0, x0, #0xa10
   30134:	blr	x1
   30138:	ldur	x9, [x29, #-256]
   3013c:	ldr	x10, [x21]
   30140:	ldr	x1, [x25, x0]
   30144:	ldr	x9, [x9]
   30148:	sub	x8, x8, x1
   3014c:	add	x11, x9, #0x1
   30150:	cmp	x10, x11
   30154:	csinc	x9, x10, x9, gt
   30158:	cmp	x8, x9
   3015c:	b.ge	30260 <mpfr_fma@@Base+0x728>  // b.tcont
   30160:	ldur	x1, [x29, #-184]
   30164:	cbz	x1, 30170 <mpfr_fma@@Base+0x638>
   30168:	ldur	x0, [x29, #-176]
   3016c:	bl	cc00 <mpfr_free_func@plt>
   30170:	stur	xzr, [x29, #-200]
   30174:	ldr	x8, [x23]
   30178:	ldr	x9, [x22]
   3017c:	sub	x10, x8, #0x1
   30180:	add	x8, x8, #0x3e
   30184:	cmp	x10, #0x0
   30188:	csel	x8, x8, x10, lt  // lt = tstop
   3018c:	sub	x10, x9, #0x1
   30190:	add	x9, x9, #0x3e
   30194:	cmp	x10, #0x0
   30198:	asr	x8, x8, #6
   3019c:	csel	x9, x9, x10, lt  // lt = tstop
   301a0:	add	x8, x8, x9, asr #6
   301a4:	add	x20, x8, #0x2
   301a8:	lsl	x1, x20, #3
   301ac:	cmp	x1, #0x4, lsl #12
   301b0:	b.hi	30318 <mpfr_fma@@Base+0x7e0>  // b.pmore
   301b4:	add	x9, x1, #0xf
   301b8:	mov	x8, sp
   301bc:	and	x9, x9, #0xfffffffffffffff0
   301c0:	sub	x0, x8, x9
   301c4:	mov	sp, x0
   301c8:	lsl	x8, x20, #6
   301cc:	stur	x0, [x29, #-224]
   301d0:	mov	w9, #0x1                   	// #1
   301d4:	sub	x0, x29, #0xf8
   301d8:	mov	x1, x23
   301dc:	mov	x2, x22
   301e0:	stur	x8, [x29, #-248]
   301e4:	stur	w9, [x29, #-240]
   301e8:	sub	x20, x29, #0xf8
   301ec:	bl	bfd0 <mpfr_ubf_mul_exact@plt>
   301f0:	bl	c280 <mpfr_clear_flags@plt>
   301f4:	sub	x8, x29, #0x4
   301f8:	ldur	x0, [x29, #-256]
   301fc:	ldur	w3, [x8, #-256]
   30200:	sub	x1, x29, #0xf8
   30204:	mov	x2, x21
   30208:	bl	c1e0 <mpfr_add@plt>
   3020c:	ldur	x8, [x29, #-232]
   30210:	add	x9, x26, #0x2
   30214:	mov	w24, w0
   30218:	cmp	x8, x9
   3021c:	b.ne	30228 <mpfr_fma@@Base+0x6f0>  // b.any
   30220:	add	x0, x20, #0x20
   30224:	bl	c1b0 <mpfr_mpz_clear@plt>
   30228:	ldur	x0, [x29, #-200]
   3022c:	cbnz	x0, 30324 <mpfr_fma@@Base+0x7ec>
   30230:	ldur	x20, [x29, #-256]
   30234:	b	2fe80 <mpfr_fma@@Base+0x348>
   30238:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3023c:	cmp	x10, x9
   30240:	b.eq	302a4 <mpfr_fma@@Base+0x76c>  // b.none
   30244:	cmp	x11, x9
   30248:	b.eq	302a4 <mpfr_fma@@Base+0x76c>  // b.none
   3024c:	mov	x1, x23
   30250:	mov	x2, x22
   30254:	mov	w3, w19
   30258:	bl	bda0 <mpfr_mul@plt>
   3025c:	b	2ff84 <mpfr_fma@@Base+0x44c>
   30260:	mov	w8, #0x1                   	// #1
   30264:	sub	x0, x29, #0x28
   30268:	stur	x8, [x29, #-40]
   3026c:	bl	c2b0 <mpfr_setmin@plt>
   30270:	ldr	w8, [x23, #8]
   30274:	ldr	w9, [x22, #8]
   30278:	mul	w8, w9, w8
   3027c:	stur	w8, [x29, #-32]
   30280:	bl	c280 <mpfr_clear_flags@plt>
   30284:	b	2fe50 <mpfr_fma@@Base+0x318>
   30288:	str	x9, [x0, #16]
   3028c:	ldr	w8, [x23, #8]
   30290:	ldr	w9, [x22, #8]
   30294:	mov	w24, wzr
   30298:	mul	w8, w9, w8
   3029c:	str	w8, [x0, #8]
   302a0:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   302a4:	cmp	x8, x9
   302a8:	b.ne	302dc <mpfr_fma@@Base+0x7a4>  // b.any
   302ac:	ldr	w8, [x23, #8]
   302b0:	ldr	w9, [x22, #8]
   302b4:	cmp	w19, #0x3
   302b8:	mul	w9, w9, w8
   302bc:	b.ne	302f0 <mpfr_fma@@Base+0x7b8>  // b.any
   302c0:	cmp	w9, #0x1
   302c4:	mov	w8, #0xffffffff            	// #-1
   302c8:	b.lt	30304 <mpfr_fma@@Base+0x7cc>  // b.tstop
   302cc:	ldr	w9, [x21, #8]
   302d0:	cmp	w9, #0x1
   302d4:	cneg	w8, w8, ge  // ge = tcont
   302d8:	b	30304 <mpfr_fma@@Base+0x7cc>
   302dc:	ldr	w3, [x21, #8]
   302e0:	mov	x1, x21
   302e4:	mov	w2, w19
   302e8:	bl	c690 <mpfr_set4@plt>
   302ec:	b	2ff84 <mpfr_fma@@Base+0x44c>
   302f0:	mov	w8, #0x1                   	// #1
   302f4:	tbz	w9, #31, 30304 <mpfr_fma@@Base+0x7cc>
   302f8:	ldr	w9, [x21, #8]
   302fc:	cmp	w9, #0x0
   30300:	cneg	w8, w8, lt  // lt = tstop
   30304:	str	w8, [x0, #8]
   30308:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3030c:	mov	w24, wzr
   30310:	str	x8, [x0, #16]
   30314:	b	2fef4 <mpfr_fma@@Base+0x3bc>
   30318:	sub	x0, x29, #0xc8
   3031c:	bl	be10 <mpfr_tmp_allocate@plt>
   30320:	b	301c8 <mpfr_fma@@Base+0x690>
   30324:	bl	c400 <mpfr_tmp_free@plt>
   30328:	b	30230 <mpfr_fma@@Base+0x6f8>
   3032c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   30330:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   30334:	add	x0, x0, #0x314
   30338:	add	x2, x2, #0x31a
   3033c:	mov	w1, #0xd5                  	// #213
   30340:	bl	cb20 <mpfr_assert_fail@plt>
   30344:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000030348 <mpfr_fms@@Base>:
   30348:	sub	sp, sp, #0x30
   3034c:	stp	x29, x30, [sp, #32]
   30350:	ldr	x8, [x3]
   30354:	add	x29, sp, #0x20
   30358:	str	x8, [sp]
   3035c:	ldr	w8, [x3, #8]
   30360:	neg	w8, w8
   30364:	str	w8, [sp, #8]
   30368:	ldr	q0, [x3, #16]
   3036c:	mov	x3, sp
   30370:	str	q0, [sp, #16]
   30374:	bl	c260 <mpfr_fma@plt>
   30378:	ldp	x29, x30, [sp, #32]
   3037c:	add	sp, sp, #0x30
   30380:	ret

0000000000030384 <mpfr_hypot@@Base>:
   30384:	sub	sp, sp, #0xf0
   30388:	stp	x29, x30, [sp, #144]
   3038c:	stp	x28, x27, [sp, #160]
   30390:	stp	x26, x25, [sp, #176]
   30394:	stp	x24, x23, [sp, #192]
   30398:	stp	x22, x21, [sp, #208]
   3039c:	stp	x20, x19, [sp, #224]
   303a0:	ldr	x8, [x1, #16]
   303a4:	mov	x11, #0x2                   	// #2
   303a8:	movk	x11, #0x8000, lsl #48
   303ac:	add	x10, x11, #0x2
   303b0:	mov	w20, w3
   303b4:	mov	x22, x2
   303b8:	mov	x23, x1
   303bc:	cmp	x8, x10
   303c0:	mov	x26, x0
   303c4:	add	x29, sp, #0x90
   303c8:	b.lt	30764 <mpfr_hypot@@Base+0x3e0>  // b.tstop
   303cc:	ldr	x9, [x22, #16]
   303d0:	cmp	x9, x10
   303d4:	b.lt	30774 <mpfr_hypot@@Base+0x3f0>  // b.tstop
   303d8:	mov	x0, x23
   303dc:	mov	x1, x22
   303e0:	bl	c990 <mpfr_cmpabs@plt>
   303e4:	cmp	w0, #0x0
   303e8:	csel	x21, x23, x22, lt  // lt = tstop
   303ec:	csel	x22, x22, x23, lt  // lt = tstop
   303f0:	ldr	x25, [x26]
   303f4:	ldr	x8, [x22]
   303f8:	ldr	x24, [x22, #16]
   303fc:	ldr	x9, [x21, #16]
   30400:	mov	w10, #0x2                   	// #2
   30404:	cmp	x8, x25
   30408:	csel	x11, x8, x25, gt
   3040c:	cmp	w20, #0x0
   30410:	sub	x9, x24, x9
   30414:	cinc	x11, x11, eq  // eq = none
   30418:	cmp	w20, #0x4
   3041c:	csel	w20, w10, w20, eq  // eq = none
   30420:	cmp	x9, x11, lsl #1
   30424:	b.ls	30474 <mpfr_hypot@@Base+0xf0>  // b.plast
   30428:	cmp	w20, #0x2
   3042c:	b.eq	307c4 <mpfr_hypot@@Base+0x440>  // b.none
   30430:	cmp	x8, x25
   30434:	b.gt	3085c <mpfr_hypot@@Base+0x4d8>
   30438:	mov	w3, #0x1                   	// #1
   3043c:	mov	x0, x26
   30440:	mov	x1, x22
   30444:	mov	w2, w20
   30448:	bl	c690 <mpfr_set4@plt>
   3044c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30450:	ldr	x1, [x0, #2640]
   30454:	add	x0, x0, #0xa50
   30458:	blr	x1
   3045c:	mrs	x8, tpidr_el0
   30460:	ldr	w9, [x8, x0]
   30464:	mov	w22, #0xffffffff            	// #-1
   30468:	orr	w9, w9, #0x8
   3046c:	str	w9, [x8, x0]
   30470:	b	30740 <mpfr_hypot@@Base+0x3bc>
   30474:	ldr	x9, [x21]
   30478:	cmp	x8, x9
   3047c:	csel	x8, x8, x9, gt
   30480:	subs	x19, x25, #0x1
   30484:	stp	x26, x8, [sp, #32]
   30488:	b.eq	3081c <mpfr_hypot@@Base+0x498>  // b.none
   3048c:	b.le	30948 <mpfr_hypot@@Base+0x5c4>
   30490:	clz	x8, x19
   30494:	mov	w9, #0x40                  	// #64
   30498:	sub	x8, x9, x8
   3049c:	add	x8, x25, x8
   304a0:	add	x23, x8, #0x4
   304a4:	sub	x0, x29, #0x20
   304a8:	mov	x1, x23
   304ac:	bl	ca60 <mpfr_init2@plt>
   304b0:	sub	x0, x29, #0x40
   304b4:	mov	x1, x23
   304b8:	bl	ca60 <mpfr_init2@plt>
   304bc:	add	x0, sp, #0x30
   304c0:	mov	x1, x23
   304c4:	bl	ca60 <mpfr_init2@plt>
   304c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   304cc:	ldr	x1, [x0, #2640]
   304d0:	add	x0, x0, #0xa50
   304d4:	blr	x1
   304d8:	mrs	x27, tpidr_el0
   304dc:	ldr	w8, [x27, x0]
   304e0:	str	w8, [sp, #28]
   304e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   304e8:	ldr	x1, [x0, #2576]
   304ec:	add	x0, x0, #0xa10
   304f0:	blr	x1
   304f4:	ldr	x9, [x27, x0]
   304f8:	mov	x8, x0
   304fc:	str	x9, [sp, #16]
   30500:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30504:	ldr	x1, [x0, #2608]
   30508:	add	x0, x0, #0xa30
   3050c:	blr	x1
   30510:	ldr	x26, [x27, x0]
   30514:	mov	x11, #0x1fffffffffffffff    	// #2305843009213693951
   30518:	cmp	w20, #0x0
   3051c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   30520:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   30524:	str	w20, [sp, #24]
   30528:	mov	w12, #0x40                  	// #64
   3052c:	mov	w20, #0x2                   	// #2
   30530:	sub	x24, x11, x24
   30534:	cinc	x25, x25, eq  // eq = none
   30538:	str	x12, [sp, #8]
   3053c:	str	x9, [x27, x8]
   30540:	str	x10, [x27, x0]
   30544:	sub	x0, x29, #0x40
   30548:	mov	w3, #0x1                   	// #1
   3054c:	mov	x1, x22
   30550:	mov	x2, x24
   30554:	mov	w19, #0x4                   	// #4
   30558:	bl	bbe0 <mpfr_mul_2si@plt>
   3055c:	mov	w28, w0
   30560:	add	x0, sp, #0x30
   30564:	mov	w3, #0x1                   	// #1
   30568:	mov	x1, x21
   3056c:	mov	x2, x24
   30570:	bl	bbe0 <mpfr_mul_2si@plt>
   30574:	orr	w28, w0, w28
   30578:	sub	x0, x29, #0x40
   3057c:	sub	x1, x29, #0x40
   30580:	mov	w2, #0x1                   	// #1
   30584:	bl	c3f0 <mpfr_sqr@plt>
   30588:	orr	w28, w28, w0
   3058c:	sub	x0, x29, #0x20
   30590:	add	x1, sp, #0x30
   30594:	add	x2, sp, #0x30
   30598:	sub	x3, x29, #0x40
   3059c:	mov	w4, #0x1                   	// #1
   305a0:	bl	c260 <mpfr_fma@plt>
   305a4:	orr	w28, w28, w0
   305a8:	sub	x0, x29, #0x20
   305ac:	sub	x1, x29, #0x20
   305b0:	mov	w2, #0x1                   	// #1
   305b4:	bl	c920 <mpfr_sqrt@plt>
   305b8:	ldr	x8, [sp, #40]
   305bc:	orr	w9, w28, w0
   305c0:	mov	x28, #0x2                   	// #2
   305c4:	movk	x28, #0x8000, lsl #48
   305c8:	cmp	x23, x8
   305cc:	csel	x8, x19, x20, lt  // lt = tstop
   305d0:	cbz	w9, 30684 <mpfr_hypot@@Base+0x300>
   305d4:	ldur	x9, [x29, #-16]
   305d8:	add	x10, x28, #0x2
   305dc:	cmp	x9, x10
   305e0:	b.lt	30614 <mpfr_hypot@@Base+0x290>  // b.tstop
   305e4:	ldur	x9, [x29, #-32]
   305e8:	ldur	x0, [x29, #-8]
   305ec:	sub	x2, x23, x8
   305f0:	mov	x3, x25
   305f4:	sub	x10, x9, #0x1
   305f8:	add	x9, x9, #0x3e
   305fc:	cmp	x10, #0x0
   30600:	csel	x9, x9, x10, lt  // lt = tstop
   30604:	asr	x9, x9, #6
   30608:	add	x1, x9, #0x1
   3060c:	bl	c370 <mpfr_round_p@plt>
   30610:	cbnz	w0, 30684 <mpfr_hypot@@Base+0x300>
   30614:	ldr	x20, [sp, #8]
   30618:	sub	x8, x28, x23
   3061c:	sub	x8, x8, #0x103
   30620:	cmp	x20, x8
   30624:	b.gt	30668 <mpfr_hypot@@Base+0x2e4>
   30628:	add	x23, x23, x20
   3062c:	cmp	x23, #0x0
   30630:	cinc	x8, x23, lt  // lt = tstop
   30634:	asr	x8, x8, #1
   30638:	sub	x0, x29, #0x20
   3063c:	mov	x1, x23
   30640:	str	x8, [sp, #8]
   30644:	bl	bf20 <mpfr_set_prec@plt>
   30648:	sub	x0, x29, #0x40
   3064c:	mov	x1, x23
   30650:	bl	bf20 <mpfr_set_prec@plt>
   30654:	add	x0, sp, #0x30
   30658:	mov	x1, x23
   3065c:	bl	bf20 <mpfr_set_prec@plt>
   30660:	mov	w20, #0x2                   	// #2
   30664:	b	30544 <mpfr_hypot@@Base+0x1c0>
   30668:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3066c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   30670:	mov	w1, #0xbd                  	// #189
   30674:	add	x0, x0, #0x364
   30678:	add	x2, x2, #0xde2
   3067c:	bl	cb20 <mpfr_assert_fail@plt>
   30680:	b	30628 <mpfr_hypot@@Base+0x2a4>
   30684:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30688:	ldr	x1, [x0, #2640]
   3068c:	add	x0, x0, #0xa50
   30690:	blr	x1
   30694:	ldr	x25, [sp, #32]
   30698:	ldr	w20, [sp, #24]
   3069c:	mov	x21, x0
   306a0:	str	wzr, [x27, x0]
   306a4:	sub	x1, x29, #0x20
   306a8:	mov	x0, x25
   306ac:	mov	x2, x24
   306b0:	mov	w3, w20
   306b4:	bl	c410 <mpfr_div_2si@plt>
   306b8:	ldr	w23, [x27, x21]
   306bc:	mov	w22, w0
   306c0:	sub	x0, x29, #0x20
   306c4:	bl	c0b0 <mpfr_clear@plt>
   306c8:	add	x0, sp, #0x30
   306cc:	bl	c0b0 <mpfr_clear@plt>
   306d0:	sub	x0, x29, #0x40
   306d4:	bl	c0b0 <mpfr_clear@plt>
   306d8:	ldr	w9, [sp, #28]
   306dc:	str	w9, [x27, x21]
   306e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   306e4:	ldr	x1, [x0, #2576]
   306e8:	add	x0, x0, #0xa10
   306ec:	blr	x1
   306f0:	ldr	x10, [sp, #16]
   306f4:	str	x10, [x27, x0]
   306f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   306fc:	ldr	x1, [x0, #2608]
   30700:	add	x0, x0, #0xa30
   30704:	blr	x1
   30708:	str	x26, [x27, x0]
   3070c:	tbnz	w23, #1, 30824 <mpfr_hypot@@Base+0x4a0>
   30710:	ldr	x8, [x25, #16]
   30714:	cmp	x8, x26
   30718:	b.gt	30848 <mpfr_hypot@@Base+0x4c4>
   3071c:	cmp	x8, x10
   30720:	b.lt	30848 <mpfr_hypot@@Base+0x4c4>  // b.tstop
   30724:	cbz	w22, 30740 <mpfr_hypot@@Base+0x3bc>
   30728:	orr	w8, w9, #0x8
   3072c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30730:	ldr	x1, [x0, #2640]
   30734:	add	x0, x0, #0xa50
   30738:	blr	x1
   3073c:	str	w8, [x27, x0]
   30740:	mov	w0, w22
   30744:	ldp	x20, x19, [sp, #224]
   30748:	ldp	x22, x21, [sp, #208]
   3074c:	ldp	x24, x23, [sp, #192]
   30750:	ldp	x26, x25, [sp, #176]
   30754:	ldp	x28, x27, [sp, #160]
   30758:	ldp	x29, x30, [sp, #144]
   3075c:	add	sp, sp, #0xf0
   30760:	ret
   30764:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   30768:	cmp	x8, x9
   3076c:	b.eq	30780 <mpfr_hypot@@Base+0x3fc>  // b.none
   30770:	ldr	x9, [x22, #16]
   30774:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   30778:	cmp	x9, x10
   3077c:	b.ne	30798 <mpfr_hypot@@Base+0x414>  // b.any
   30780:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   30784:	mov	w9, #0x1                   	// #1
   30788:	mov	w22, wzr
   3078c:	str	x8, [x26, #16]
   30790:	str	w9, [x26, #8]
   30794:	b	30740 <mpfr_hypot@@Base+0x3bc>
   30798:	cmp	x8, x11
   3079c:	b.eq	30964 <mpfr_hypot@@Base+0x5e0>  // b.none
   307a0:	cmp	x9, x11
   307a4:	b.eq	30964 <mpfr_hypot@@Base+0x5e0>  // b.none
   307a8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   307ac:	mov	w3, #0x1                   	// #1
   307b0:	mov	x0, x26
   307b4:	cmp	x8, x9
   307b8:	b.ne	30990 <mpfr_hypot@@Base+0x60c>  // b.any
   307bc:	mov	x1, x22
   307c0:	b	30994 <mpfr_hypot@@Base+0x610>
   307c4:	mov	w2, #0x2                   	// #2
   307c8:	mov	w3, #0x1                   	// #1
   307cc:	mov	x0, x26
   307d0:	mov	x1, x22
   307d4:	bl	c690 <mpfr_set4@plt>
   307d8:	cbnz	w0, 307f4 <mpfr_hypot@@Base+0x470>
   307dc:	mov	x0, x26
   307e0:	bl	c660 <mpfr_nexttoinf@plt>
   307e4:	ldr	x8, [x26, #16]
   307e8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   307ec:	cmp	x8, x9
   307f0:	b.eq	30c18 <mpfr_hypot@@Base+0x894>  // b.none
   307f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   307f8:	ldr	x1, [x0, #2640]
   307fc:	add	x0, x0, #0xa50
   30800:	blr	x1
   30804:	mrs	x8, tpidr_el0
   30808:	ldr	w9, [x8, x0]
   3080c:	mov	w22, #0x1                   	// #1
   30810:	orr	w9, w9, #0x8
   30814:	str	w9, [x8, x0]
   30818:	b	30740 <mpfr_hypot@@Base+0x3bc>
   3081c:	mov	x8, xzr
   30820:	b	3049c <mpfr_hypot@@Base+0x118>
   30824:	orr	w9, w9, #0x2
   30828:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3082c:	ldr	x1, [x0, #2640]
   30830:	add	x0, x0, #0xa50
   30834:	blr	x1
   30838:	str	w9, [x27, x0]
   3083c:	ldr	x8, [x25, #16]
   30840:	cmp	x8, x26
   30844:	b.le	3071c <mpfr_hypot@@Base+0x398>
   30848:	mov	x0, x25
   3084c:	mov	w1, w22
   30850:	mov	w2, w20
   30854:	bl	cb10 <mpfr_check_range@plt>
   30858:	b	3099c <mpfr_hypot@@Base+0x618>
   3085c:	mov	w9, #0x1                   	// #1
   30860:	sub	x10, x8, #0x1
   30864:	str	x24, [x26, #16]
   30868:	add	x8, x8, #0x3e
   3086c:	str	w9, [x26, #8]
   30870:	cmp	x10, #0x0
   30874:	sub	x11, x25, #0x1
   30878:	csel	x9, x8, x10, lt  // lt = tstop
   3087c:	ldr	x8, [x22, #24]
   30880:	add	x12, x25, #0x3e
   30884:	cmp	x11, #0x0
   30888:	ldr	x21, [x26, #24]
   3088c:	asr	x9, x9, #6
   30890:	csel	x10, x12, x11, lt  // lt = tstop
   30894:	add	x16, x9, #0x1
   30898:	asr	x10, x10, #6
   3089c:	neg	w13, w25
   308a0:	add	x12, x8, x16, lsl #3
   308a4:	mvn	x14, x10
   308a8:	ands	x13, x13, #0x3f
   308ac:	add	x11, x10, #0x1
   308b0:	add	x1, x12, x14, lsl #3
   308b4:	b.eq	309ac <mpfr_hypot@@Base+0x628>  // b.none
   308b8:	ldr	x14, [x1]
   308bc:	sub	x13, x13, #0x1
   308c0:	mov	w15, #0x1                   	// #1
   308c4:	lsl	x15, x15, x13
   308c8:	sub	x17, x15, #0x1
   308cc:	and	x13, x14, x15
   308d0:	and	x14, x14, x17
   308d4:	cbz	w20, 308dc <mpfr_hypot@@Base+0x558>
   308d8:	cbnz	x13, 30904 <mpfr_hypot@@Base+0x580>
   308dc:	cbnz	x14, 30904 <mpfr_hypot@@Base+0x580>
   308e0:	sub	x16, x16, x11
   308e4:	cbz	x16, 30904 <mpfr_hypot@@Base+0x580>
   308e8:	mvn	x14, x10
   308ec:	add	x16, x14, x9
   308f0:	ldr	x14, [x8, x16, lsl #3]
   308f4:	subs	x16, x16, #0x1
   308f8:	cset	w17, cs  // cs = hs, nlast
   308fc:	cbnz	x14, 30904 <mpfr_hypot@@Base+0x580>
   30900:	tbnz	w17, #0, 308f0 <mpfr_hypot@@Base+0x56c>
   30904:	lsl	x23, x15, #1
   30908:	cmp	w20, #0x5
   3090c:	b.hi	30a08 <mpfr_hypot@@Base+0x684>  // b.pmore
   30910:	adrp	x16, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   30914:	mov	w15, w20
   30918:	add	x16, x16, #0x35e
   3091c:	adr	x17, 3092c <mpfr_hypot@@Base+0x5a8>
   30920:	ldrb	w18, [x16, x15]
   30924:	add	x17, x17, x18, lsl #2
   30928:	br	x17
   3092c:	cmp	x21, x1
   30930:	b.eq	30940 <mpfr_hypot@@Base+0x5bc>  // b.none
   30934:	lsl	x2, x11, #3
   30938:	mov	x0, x21
   3093c:	bl	ba70 <memcpy@plt>
   30940:	mov	w22, #0xffffffff            	// #-1
   30944:	b	30bac <mpfr_hypot@@Base+0x828>
   30948:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3094c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   30950:	add	x0, x0, #0x364
   30954:	add	x2, x2, #0xaeb
   30958:	mov	w1, #0x8c                  	// #140
   3095c:	bl	cb20 <mpfr_assert_fail@plt>
   30960:	b	30490 <mpfr_hypot@@Base+0x10c>
   30964:	str	x11, [x26, #16]
   30968:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3096c:	ldr	x1, [x0, #2640]
   30970:	add	x0, x0, #0xa50
   30974:	blr	x1
   30978:	mrs	x8, tpidr_el0
   3097c:	ldr	w9, [x8, x0]
   30980:	mov	w22, wzr
   30984:	orr	w9, w9, #0x4
   30988:	str	w9, [x8, x0]
   3098c:	b	30740 <mpfr_hypot@@Base+0x3bc>
   30990:	mov	x1, x23
   30994:	mov	w2, w20
   30998:	bl	c690 <mpfr_set4@plt>
   3099c:	mov	w22, w0
   309a0:	b	30740 <mpfr_hypot@@Base+0x3bc>
   309a4:	cbnz	x13, 30a10 <mpfr_hypot@@Base+0x68c>
   309a8:	b	3092c <mpfr_hypot@@Base+0x5a8>
   309ac:	ldur	x14, [x1, #-8]
   309b0:	mov	w17, w20
   309b4:	and	x13, x14, #0x8000000000000000
   309b8:	and	x14, x14, #0x7fffffffffffffff
   309bc:	cbz	w20, 309cc <mpfr_hypot@@Base+0x648>
   309c0:	cbz	x13, 309cc <mpfr_hypot@@Base+0x648>
   309c4:	mov	w23, #0x1                   	// #1
   309c8:	b	309fc <mpfr_hypot@@Base+0x678>
   309cc:	mov	w23, #0x1                   	// #1
   309d0:	cbnz	x14, 309fc <mpfr_hypot@@Base+0x678>
   309d4:	sub	x15, x9, x11
   309d8:	cbz	x15, 309fc <mpfr_hypot@@Base+0x678>
   309dc:	sub	x14, x9, x10
   309e0:	sub	x15, x14, #0x2
   309e4:	mov	w23, #0x1                   	// #1
   309e8:	ldr	x14, [x8, x15, lsl #3]
   309ec:	subs	x15, x15, #0x1
   309f0:	cset	w16, cs  // cs = hs, nlast
   309f4:	cbnz	x14, 309fc <mpfr_hypot@@Base+0x678>
   309f8:	tbnz	w16, #0, 309e8 <mpfr_hypot@@Base+0x664>
   309fc:	mov	w20, w17
   30a00:	cmp	w20, #0x5
   30a04:	b.ls	30910 <mpfr_hypot@@Base+0x58c>  // b.plast
   30a08:	orr	x13, x14, x13
   30a0c:	cbz	x13, 3092c <mpfr_hypot@@Base+0x5a8>
   30a10:	ldr	x13, [x1]
   30a14:	adds	x13, x13, x23
   30a18:	str	x13, [x21]
   30a1c:	b.cc	30b08 <mpfr_hypot@@Base+0x784>  // b.lo, b.ul, b.last
   30a20:	mov	x16, xzr
   30a24:	mov	x15, xzr
   30a28:	mov	x13, x10
   30a2c:	add	x14, x15, #0x1
   30a30:	cmp	x14, x10
   30a34:	b.gt	30b70 <mpfr_hypot@@Base+0x7ec>
   30a38:	lsl	x15, x15, #3
   30a3c:	add	x17, x1, x15
   30a40:	ldr	x17, [x17, #8]
   30a44:	add	x15, x21, x15
   30a48:	sub	x16, x16, #0x8
   30a4c:	sub	x13, x13, #0x1
   30a50:	adds	x17, x17, #0x1
   30a54:	str	x17, [x15, #8]
   30a58:	mov	x15, x14
   30a5c:	b.cs	30a2c <mpfr_hypot@@Base+0x6a8>  // b.hs, b.nlast
   30a60:	cmp	x1, x21
   30a64:	mov	w22, #0x1                   	// #1
   30a68:	b.eq	30bac <mpfr_hypot@@Base+0x828>  // b.none
   30a6c:	cmp	x14, x10
   30a70:	b.ge	30bac <mpfr_hypot@@Base+0x828>  // b.tcont
   30a74:	sub	x15, x10, x14
   30a78:	cmp	x15, #0x4
   30a7c:	add	x17, x14, #0x1
   30a80:	b.cc	30ae4 <mpfr_hypot@@Base+0x760>  // b.lo, b.ul, b.last
   30a84:	sub	x18, x21, x16
   30a88:	add	x0, x18, #0x8
   30a8c:	cmp	x0, x12
   30a90:	sub	x12, x1, x16
   30a94:	b.cs	30aa8 <mpfr_hypot@@Base+0x724>  // b.hs, b.nlast
   30a98:	add	x11, x21, x11, lsl #3
   30a9c:	add	x16, x12, #0x8
   30aa0:	cmp	x16, x11
   30aa4:	b.cc	30ae4 <mpfr_hypot@@Base+0x760>  // b.lo, b.ul, b.last
   30aa8:	and	x13, x13, #0xfffffffffffffffc
   30aac:	and	x16, x15, #0xfffffffffffffffc
   30ab0:	add	x13, x13, x14
   30ab4:	add	x11, x18, #0x18
   30ab8:	add	x12, x12, #0x18
   30abc:	add	x17, x13, #0x1
   30ac0:	mov	x13, x16
   30ac4:	ldp	q0, q1, [x12, #-16]
   30ac8:	add	x12, x12, #0x20
   30acc:	subs	x13, x13, #0x4
   30ad0:	stp	q0, q1, [x11, #-16]
   30ad4:	add	x11, x11, #0x20
   30ad8:	b.ne	30ac4 <mpfr_hypot@@Base+0x740>  // b.any
   30adc:	cmp	x15, x16
   30ae0:	b.eq	30ba8 <mpfr_hypot@@Base+0x824>  // b.none
   30ae4:	sub	x10, x17, x10
   30ae8:	add	x11, x21, x17, lsl #3
   30aec:	add	x8, x8, x9, lsl #3
   30af0:	ldr	x9, [x8, x10, lsl #3]
   30af4:	add	x10, x10, #0x1
   30af8:	cmp	x10, #0x1
   30afc:	str	x9, [x11], #8
   30b00:	b.ne	30af0 <mpfr_hypot@@Base+0x76c>  // b.any
   30b04:	b	30ba8 <mpfr_hypot@@Base+0x824>
   30b08:	cmp	x25, #0x41
   30b0c:	mov	w22, #0x1                   	// #1
   30b10:	b.lt	30bac <mpfr_hypot@@Base+0x828>  // b.tstop
   30b14:	cmp	x1, x21
   30b18:	b.eq	30bac <mpfr_hypot@@Base+0x828>  // b.none
   30b1c:	cmp	x10, #0x4
   30b20:	b.cc	30b48 <mpfr_hypot@@Base+0x7c4>  // b.lo, b.ul, b.last
   30b24:	add	x13, x21, #0x8
   30b28:	sub	x14, x9, x10
   30b2c:	cmp	x13, x12
   30b30:	add	x13, x8, x14, lsl #3
   30b34:	b.cs	30be0 <mpfr_hypot@@Base+0x85c>  // b.hs, b.nlast
   30b38:	add	x11, x21, x11, lsl #3
   30b3c:	add	x12, x13, #0x8
   30b40:	cmp	x12, x11
   30b44:	b.cs	30be0 <mpfr_hypot@@Base+0x85c>  // b.hs, b.nlast
   30b48:	mov	w11, #0x1                   	// #1
   30b4c:	sub	x10, x11, x10
   30b50:	add	x11, x21, x11, lsl #3
   30b54:	add	x8, x8, x9, lsl #3
   30b58:	ldr	x9, [x8, x10, lsl #3]
   30b5c:	add	x10, x10, #0x1
   30b60:	cmp	x10, #0x1
   30b64:	str	x9, [x11], #8
   30b68:	b.ne	30b58 <mpfr_hypot@@Base+0x7d4>  // b.any
   30b6c:	b	30ba8 <mpfr_hypot@@Base+0x824>
   30b70:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   30b74:	str	x8, [x21, x10, lsl #3]
   30b78:	ldr	x8, [x26, #16]
   30b7c:	mov	x10, x26
   30b80:	add	x9, x8, #0x1
   30b84:	str	x9, [x26, #16]
   30b88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30b8c:	ldr	x1, [x0, #2608]
   30b90:	add	x0, x0, #0xa30
   30b94:	blr	x1
   30b98:	mrs	x9, tpidr_el0
   30b9c:	ldr	x9, [x9, x0]
   30ba0:	cmp	x8, x9
   30ba4:	b.ge	30c3c <mpfr_hypot@@Base+0x8b8>  // b.tcont
   30ba8:	mov	w22, #0x1                   	// #1
   30bac:	ldr	x8, [x21]
   30bb0:	neg	x9, x23
   30bb4:	and	x8, x8, x9
   30bb8:	str	x8, [x21]
   30bbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30bc0:	ldr	x1, [x0, #2640]
   30bc4:	add	x0, x0, #0xa50
   30bc8:	blr	x1
   30bcc:	mrs	x8, tpidr_el0
   30bd0:	ldr	w9, [x8, x0]
   30bd4:	orr	w9, w9, #0x8
   30bd8:	str	w9, [x8, x0]
   30bdc:	b	30740 <mpfr_hypot@@Base+0x3bc>
   30be0:	and	x12, x10, #0xfffffffffffffffc
   30be4:	add	x13, x13, #0x18
   30be8:	orr	x11, x12, #0x1
   30bec:	add	x14, x21, #0x18
   30bf0:	mov	x15, x12
   30bf4:	ldp	q0, q1, [x13, #-16]
   30bf8:	add	x13, x13, #0x20
   30bfc:	subs	x15, x15, #0x4
   30c00:	stp	q0, q1, [x14, #-16]
   30c04:	add	x14, x14, #0x20
   30c08:	b.ne	30bf4 <mpfr_hypot@@Base+0x870>  // b.any
   30c0c:	cmp	x10, x12
   30c10:	b.ne	30b4c <mpfr_hypot@@Base+0x7c8>  // b.any
   30c14:	b	30ba8 <mpfr_hypot@@Base+0x824>
   30c18:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30c1c:	ldr	x1, [x0, #2640]
   30c20:	add	x0, x0, #0xa50
   30c24:	blr	x1
   30c28:	mrs	x8, tpidr_el0
   30c2c:	ldr	w9, [x8, x0]
   30c30:	orr	w9, w9, #0x2
   30c34:	str	w9, [x8, x0]
   30c38:	b	307f4 <mpfr_hypot@@Base+0x470>
   30c3c:	mov	w2, #0x1                   	// #1
   30c40:	mov	x0, x26
   30c44:	mov	w1, w20
   30c48:	bl	bf90 <mpfr_overflow@plt>
   30c4c:	b	3099c <mpfr_hypot@@Base+0x618>

0000000000030c50 <mpfr_log1p@@Base>:
   30c50:	sub	sp, sp, #0xe0
   30c54:	stp	x29, x30, [sp, #128]
   30c58:	stp	x28, x27, [sp, #144]
   30c5c:	stp	x26, x25, [sp, #160]
   30c60:	stp	x24, x23, [sp, #176]
   30c64:	stp	x22, x21, [sp, #192]
   30c68:	stp	x20, x19, [sp, #208]
   30c6c:	ldr	x8, [x1, #16]
   30c70:	mov	x28, #0x2                   	// #2
   30c74:	movk	x28, #0x8000, lsl #48
   30c78:	add	x9, x28, #0x2
   30c7c:	mov	x21, x1
   30c80:	cmp	x8, x9
   30c84:	mov	x24, x0
   30c88:	add	x29, sp, #0x80
   30c8c:	b.lt	31088 <mpfr_log1p@@Base+0x438>  // b.tstop
   30c90:	mov	w25, w2
   30c94:	tbnz	x8, #63, 31008 <mpfr_log1p@@Base+0x3b8>
   30c98:	mov	x1, #0xffffffffffffffff    	// #-1
   30c9c:	mov	x0, x21
   30ca0:	mov	x2, xzr
   30ca4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   30ca8:	cmp	w0, #0x0
   30cac:	b.le	310bc <mpfr_log1p@@Base+0x46c>
   30cb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30cb4:	ldr	x1, [x0, #2640]
   30cb8:	add	x0, x0, #0xa50
   30cbc:	blr	x1
   30cc0:	mrs	x27, tpidr_el0
   30cc4:	ldr	w20, [x27, x0]
   30cc8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30ccc:	ldr	x1, [x0, #2576]
   30cd0:	add	x0, x0, #0xa10
   30cd4:	blr	x1
   30cd8:	ldr	x26, [x27, x0]
   30cdc:	mov	x8, x0
   30ce0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30ce4:	ldr	x1, [x0, #2608]
   30ce8:	add	x0, x0, #0xa30
   30cec:	blr	x1
   30cf0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   30cf4:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   30cf8:	ldr	x19, [x27, x0]
   30cfc:	str	x9, [x27, x8]
   30d00:	str	x10, [x27, x0]
   30d04:	ldr	x22, [x24]
   30d08:	subs	x23, x22, #0x1
   30d0c:	b.eq	310ec <mpfr_log1p@@Base+0x49c>  // b.none
   30d10:	b.le	3110c <mpfr_log1p@@Base+0x4bc>
   30d14:	clz	x8, x23
   30d18:	mov	w9, #0x40                  	// #64
   30d1c:	sub	x8, x9, x8
   30d20:	ldr	x9, [x21, #16]
   30d24:	add	x8, x22, x8
   30d28:	add	x0, sp, #0x20
   30d2c:	neg	x10, x9
   30d30:	and	x9, x10, x9, asr #63
   30d34:	add	x8, x8, x9
   30d38:	add	x23, x8, #0x6
   30d3c:	mov	x1, x23
   30d40:	bl	ca60 <mpfr_init2@plt>
   30d44:	cmp	w25, #0x0
   30d48:	mov	w8, #0x40                  	// #64
   30d4c:	str	x8, [sp, #8]
   30d50:	cinc	x8, x22, eq  // eq = none
   30d54:	stp	x8, x24, [sp, #16]
   30d58:	mov	x0, x22
   30d5c:	bl	bcc0 <__gmpfr_int_ceil_log2@plt>
   30d60:	add	w8, w0, #0x1
   30d64:	ldr	x9, [x21, #16]
   30d68:	sxtw	x8, w8
   30d6c:	sdiv	x8, x22, x8
   30d70:	neg	x8, x8
   30d74:	cmp	x9, x8
   30d78:	b.le	30db8 <mpfr_log1p@@Base+0x168>
   30d7c:	add	x0, sp, #0x20
   30d80:	mov	w2, #0x1                   	// #1
   30d84:	mov	x1, x21
   30d88:	mov	w3, wzr
   30d8c:	bl	c270 <mpfr_add_ui@plt>
   30d90:	cbz	w0, 31074 <mpfr_log1p@@Base+0x424>
   30d94:	add	x0, sp, #0x20
   30d98:	add	x1, sp, #0x20
   30d9c:	mov	w2, wzr
   30da0:	bl	c0d0 <mpfr_log@plt>
   30da4:	ldr	x8, [sp, #48]
   30da8:	mov	w9, #0x2                   	// #2
   30dac:	sub	x9, x9, x8
   30db0:	bic	x24, x9, x9, asr #63
   30db4:	b	30ea4 <mpfr_log1p@@Base+0x254>
   30db8:	ldr	x28, [sp, #32]
   30dbc:	sub	x0, x29, #0x20
   30dc0:	str	w25, [sp, #4]
   30dc4:	mov	x1, x28
   30dc8:	bl	ca60 <mpfr_init2@plt>
   30dcc:	add	x0, sp, #0x40
   30dd0:	mov	x1, x28
   30dd4:	bl	ca60 <mpfr_init2@plt>
   30dd8:	ldr	w3, [x21, #8]
   30ddc:	sub	x0, x29, #0x20
   30de0:	mov	w2, #0x5                   	// #5
   30de4:	mov	x1, x21
   30de8:	bl	c690 <mpfr_set4@plt>
   30dec:	ldur	w3, [x29, #-24]
   30df0:	add	x0, sp, #0x20
   30df4:	sub	x1, x29, #0x20
   30df8:	mov	w2, #0x5                   	// #5
   30dfc:	bl	c690 <mpfr_set4@plt>
   30e00:	mov	w24, #0xc                   	// #12
   30e04:	mov	w25, #0x2                   	// #2
   30e08:	b	30e18 <mpfr_log1p@@Base+0x1c8>
   30e0c:	bl	bbc0 <mpfr_sub@plt>
   30e10:	add	x25, x25, #0x1
   30e14:	add	x24, x24, #0x2
   30e18:	sub	x0, x29, #0x20
   30e1c:	sub	x1, x29, #0x20
   30e20:	mov	w3, #0x5                   	// #5
   30e24:	mov	x2, x21
   30e28:	bl	bda0 <mpfr_mul@plt>
   30e2c:	add	x0, sp, #0x40
   30e30:	sub	x1, x29, #0x20
   30e34:	mov	w3, #0x5                   	// #5
   30e38:	mov	x2, x25
   30e3c:	bl	cc40 <mpfr_div_ui@plt>
   30e40:	ldr	x8, [sp, #48]
   30e44:	ldr	x9, [sp, #80]
   30e48:	sub	x8, x8, x28
   30e4c:	cmp	x9, x8
   30e50:	b.le	30e70 <mpfr_log1p@@Base+0x220>
   30e54:	add	x0, sp, #0x20
   30e58:	add	x1, sp, #0x20
   30e5c:	add	x2, sp, #0x40
   30e60:	mov	w3, #0x5                   	// #5
   30e64:	tbz	w25, #0, 30e0c <mpfr_log1p@@Base+0x1bc>
   30e68:	bl	c1e0 <mpfr_add@plt>
   30e6c:	b	30e10 <mpfr_log1p@@Base+0x1c0>
   30e70:	mov	x0, x24
   30e74:	bl	bcc0 <__gmpfr_int_ceil_log2@plt>
   30e78:	sxtw	x24, w0
   30e7c:	cmp	x28, x24
   30e80:	b.le	30f1c <mpfr_log1p@@Base+0x2cc>
   30e84:	sub	x0, x29, #0x20
   30e88:	bl	c0b0 <mpfr_clear@plt>
   30e8c:	add	x0, sp, #0x40
   30e90:	bl	c0b0 <mpfr_clear@plt>
   30e94:	ldr	x8, [sp, #48]
   30e98:	ldr	w25, [sp, #4]
   30e9c:	mov	x28, #0x2                   	// #2
   30ea0:	movk	x28, #0x8000, lsl #48
   30ea4:	add	x9, x28, #0x2
   30ea8:	cmp	x8, x9
   30eac:	b.lt	30ee0 <mpfr_log1p@@Base+0x290>  // b.tstop
   30eb0:	ldr	x8, [sp, #32]
   30eb4:	ldr	x0, [sp, #56]
   30eb8:	ldr	x3, [sp, #16]
   30ebc:	sub	x2, x23, x24
   30ec0:	sub	x9, x8, #0x1
   30ec4:	add	x8, x8, #0x3e
   30ec8:	cmp	x9, #0x0
   30ecc:	csel	x8, x8, x9, lt  // lt = tstop
   30ed0:	asr	x8, x8, #6
   30ed4:	add	x1, x8, #0x1
   30ed8:	bl	c370 <mpfr_round_p@plt>
   30edc:	cbnz	w0, 30f54 <mpfr_log1p@@Base+0x304>
   30ee0:	ldr	x24, [sp, #8]
   30ee4:	sub	x8, x28, x23
   30ee8:	sub	x8, x8, #0x103
   30eec:	cmp	x24, x8
   30ef0:	b.gt	30f38 <mpfr_log1p@@Base+0x2e8>
   30ef4:	add	x23, x23, x24
   30ef8:	cmp	x23, #0x0
   30efc:	cinc	x8, x23, lt  // lt = tstop
   30f00:	asr	x8, x8, #1
   30f04:	add	x0, sp, #0x20
   30f08:	mov	x1, x23
   30f0c:	str	x8, [sp, #8]
   30f10:	bl	bf20 <mpfr_set_prec@plt>
   30f14:	ldr	x24, [sp, #24]
   30f18:	b	30d58 <mpfr_log1p@@Base+0x108>
   30f1c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   30f20:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   30f24:	mov	w1, #0x56                  	// #86
   30f28:	add	x0, x0, #0x36c
   30f2c:	add	x2, x2, #0x374
   30f30:	bl	cb20 <mpfr_assert_fail@plt>
   30f34:	b	30e84 <mpfr_log1p@@Base+0x234>
   30f38:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   30f3c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   30f40:	mov	w1, #0xe7                  	// #231
   30f44:	add	x0, x0, #0x36c
   30f48:	add	x2, x2, #0xde2
   30f4c:	bl	cb20 <mpfr_assert_fail@plt>
   30f50:	b	30ef4 <mpfr_log1p@@Base+0x2a4>
   30f54:	ldr	x24, [sp, #24]
   30f58:	ldr	w3, [sp, #40]
   30f5c:	add	x1, sp, #0x20
   30f60:	mov	w2, w25
   30f64:	mov	x0, x24
   30f68:	bl	c690 <mpfr_set4@plt>
   30f6c:	mov	w22, w0
   30f70:	add	x0, sp, #0x20
   30f74:	bl	c0b0 <mpfr_clear@plt>
   30f78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30f7c:	ldr	x1, [x0, #2640]
   30f80:	add	x0, x0, #0xa50
   30f84:	blr	x1
   30f88:	str	w20, [x27, x0]
   30f8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30f90:	ldr	x1, [x0, #2576]
   30f94:	add	x0, x0, #0xa10
   30f98:	blr	x1
   30f9c:	str	x26, [x27, x0]
   30fa0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30fa4:	ldr	x1, [x0, #2608]
   30fa8:	add	x0, x0, #0xa30
   30fac:	blr	x1
   30fb0:	str	x19, [x27, x0]
   30fb4:	ldr	x8, [x24, #16]
   30fb8:	cmp	x8, x19
   30fbc:	b.gt	310f4 <mpfr_log1p@@Base+0x4a4>
   30fc0:	cmp	x8, x26
   30fc4:	b.lt	310f4 <mpfr_log1p@@Base+0x4a4>  // b.tstop
   30fc8:	cbz	w22, 30fe4 <mpfr_log1p@@Base+0x394>
   30fcc:	orr	w8, w20, #0x8
   30fd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   30fd4:	ldr	x1, [x0, #2640]
   30fd8:	add	x0, x0, #0xa50
   30fdc:	blr	x1
   30fe0:	str	w8, [x27, x0]
   30fe4:	mov	w0, w22
   30fe8:	ldp	x20, x19, [sp, #208]
   30fec:	ldp	x22, x21, [sp, #192]
   30ff0:	ldp	x24, x23, [sp, #176]
   30ff4:	ldp	x26, x25, [sp, #160]
   30ff8:	ldp	x28, x27, [sp, #144]
   30ffc:	ldp	x29, x30, [sp, #128]
   31000:	add	sp, sp, #0xe0
   31004:	ret
   31008:	ldr	w9, [x21, #8]
   3100c:	cmp	w9, #0x1
   31010:	b.lt	31040 <mpfr_log1p@@Base+0x3f0>  // b.tstop
   31014:	cmn	x8, #0x2
   31018:	b.gt	30c98 <mpfr_log1p@@Base+0x48>
   3101c:	ldr	x9, [x24]
   31020:	mvn	x2, x8
   31024:	add	x8, x9, #0x1
   31028:	cmp	x8, x2
   3102c:	b.cs	30c98 <mpfr_log1p@@Base+0x48>  // b.hs, b.nlast
   31030:	mov	x0, x24
   31034:	mov	x1, x21
   31038:	mov	w3, wzr
   3103c:	b	31060 <mpfr_log1p@@Base+0x410>
   31040:	ldr	x9, [x24]
   31044:	neg	x2, x8
   31048:	add	x8, x9, #0x1
   3104c:	cmp	x8, x2
   31050:	b.cs	30c98 <mpfr_log1p@@Base+0x48>  // b.hs, b.nlast
   31054:	mov	w3, #0x1                   	// #1
   31058:	mov	x0, x24
   3105c:	mov	x1, x21
   31060:	mov	w4, w25
   31064:	bl	c530 <mpfr_round_near_x@plt>
   31068:	mov	w22, w0
   3106c:	cbnz	w0, 30fe4 <mpfr_log1p@@Base+0x394>
   31070:	b	30c98 <mpfr_log1p@@Base+0x48>
   31074:	add	x1, sp, #0x20
   31078:	mov	x0, x24
   3107c:	mov	w2, w25
   31080:	bl	c0d0 <mpfr_log@plt>
   31084:	b	30f6c <mpfr_log1p@@Base+0x31c>
   31088:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3108c:	cmp	x8, x9
   31090:	b.eq	31160 <mpfr_log1p@@Base+0x510>  // b.none
   31094:	mov	x9, #0x2                   	// #2
   31098:	movk	x9, #0x8000, lsl #48
   3109c:	cmp	x8, x9
   310a0:	b.eq	310c0 <mpfr_log1p@@Base+0x470>  // b.none
   310a4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   310a8:	str	x8, [x24, #16]
   310ac:	ldr	w8, [x21, #8]
   310b0:	mov	w22, wzr
   310b4:	str	w8, [x24, #8]
   310b8:	b	30fe4 <mpfr_log1p@@Base+0x394>
   310bc:	cbz	w0, 31128 <mpfr_log1p@@Base+0x4d8>
   310c0:	str	x28, [x24, #16]
   310c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   310c8:	ldr	x1, [x0, #2640]
   310cc:	add	x0, x0, #0xa50
   310d0:	blr	x1
   310d4:	mrs	x8, tpidr_el0
   310d8:	ldr	w9, [x8, x0]
   310dc:	mov	w22, wzr
   310e0:	orr	w9, w9, #0x4
   310e4:	str	w9, [x8, x0]
   310e8:	b	30fe4 <mpfr_log1p@@Base+0x394>
   310ec:	mov	x8, xzr
   310f0:	b	30d20 <mpfr_log1p@@Base+0xd0>
   310f4:	mov	x0, x24
   310f8:	mov	w1, w22
   310fc:	mov	w2, w25
   31100:	bl	cb10 <mpfr_check_range@plt>
   31104:	mov	w22, w0
   31108:	b	30fe4 <mpfr_log1p@@Base+0x394>
   3110c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   31110:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   31114:	add	x0, x0, #0x36c
   31118:	add	x2, x2, #0xdd9
   3111c:	mov	w1, #0xb9                  	// #185
   31120:	bl	cb20 <mpfr_assert_fail@plt>
   31124:	b	30d14 <mpfr_log1p@@Base+0xc4>
   31128:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3112c:	mov	w9, #0xffffffff            	// #-1
   31130:	str	x8, [x24, #16]
   31134:	str	w9, [x24, #8]
   31138:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3113c:	ldr	x1, [x0, #2640]
   31140:	add	x0, x0, #0xa50
   31144:	blr	x1
   31148:	mrs	x8, tpidr_el0
   3114c:	ldr	w9, [x8, x0]
   31150:	mov	w22, wzr
   31154:	orr	w9, w9, #0x20
   31158:	str	w9, [x8, x0]
   3115c:	b	30fe4 <mpfr_log1p@@Base+0x394>
   31160:	ldr	w8, [x21, #8]
   31164:	cmp	w8, #0x1
   31168:	b.lt	310c0 <mpfr_log1p@@Base+0x470>  // b.tstop
   3116c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31170:	mov	w9, #0x1                   	// #1
   31174:	mov	w22, wzr
   31178:	str	x8, [x24, #16]
   3117c:	str	w9, [x24, #8]
   31180:	b	30fe4 <mpfr_log1p@@Base+0x394>

0000000000031184 <mpfr_expm1@@Base>:
   31184:	sub	sp, sp, #0x90
   31188:	stp	x29, x30, [sp, #48]
   3118c:	stp	x28, x27, [sp, #64]
   31190:	stp	x26, x25, [sp, #80]
   31194:	stp	x24, x23, [sp, #96]
   31198:	stp	x22, x21, [sp, #112]
   3119c:	stp	x20, x19, [sp, #128]
   311a0:	ldr	x23, [x1, #16]
   311a4:	mov	x8, #0x4                   	// #4
   311a8:	movk	x8, #0x8000, lsl #48
   311ac:	mov	w20, w2
   311b0:	mov	x21, x1
   311b4:	cmp	x23, x8
   311b8:	mov	x19, x0
   311bc:	add	x29, sp, #0x30
   311c0:	b.lt	31540 <mpfr_expm1@@Base+0x3bc>  // b.tstop
   311c4:	tbz	x23, #63, 31210 <mpfr_expm1@@Base+0x8c>
   311c8:	ldr	w8, [x21, #8]
   311cc:	cmp	w8, #0x1
   311d0:	b.lt	311f8 <mpfr_expm1@@Base+0x74>  // b.tstop
   311d4:	ldr	x8, [x19]
   311d8:	neg	x2, x23
   311dc:	add	x8, x8, #0x1
   311e0:	cmp	x8, x2
   311e4:	b.cs	31210 <mpfr_expm1@@Base+0x8c>  // b.hs, b.nlast
   311e8:	mov	w3, #0x1                   	// #1
   311ec:	mov	x0, x19
   311f0:	mov	x1, x21
   311f4:	b	316e8 <mpfr_expm1@@Base+0x564>
   311f8:	ldr	x8, [x19]
   311fc:	mov	w9, #0x1                   	// #1
   31200:	sub	x2, x9, x23
   31204:	add	x8, x8, #0x1
   31208:	cmp	x2, x8
   3120c:	b.hi	316dc <mpfr_expm1@@Base+0x558>  // b.pmore
   31210:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31214:	ldr	x1, [x0, #2640]
   31218:	add	x0, x0, #0xa50
   3121c:	blr	x1
   31220:	mrs	x27, tpidr_el0
   31224:	ldr	w26, [x27, x0]
   31228:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3122c:	ldr	x1, [x0, #2576]
   31230:	add	x0, x0, #0xa10
   31234:	blr	x1
   31238:	ldr	x25, [x27, x0]
   3123c:	mov	x8, x0
   31240:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31244:	ldr	x1, [x0, #2608]
   31248:	add	x0, x0, #0xa30
   3124c:	blr	x1
   31250:	ldr	x28, [x27, x0]
   31254:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   31258:	str	x9, [x27, x8]
   3125c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   31260:	cmp	x23, #0x6
   31264:	str	x8, [x27, x0]
   31268:	b.lt	312e8 <mpfr_expm1@@Base+0x164>  // b.tstop
   3126c:	ldr	w8, [x21, #8]
   31270:	tbz	w8, #31, 312e8 <mpfr_expm1@@Base+0x164>
   31274:	mov	w8, #0x40                  	// #64
   31278:	sub	x9, x29, #0x8
   3127c:	mov	w10, #0x1                   	// #1
   31280:	str	x8, [sp, #8]
   31284:	str	x9, [sp, #32]
   31288:	str	w10, [sp, #16]
   3128c:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   31290:	ldr	x2, [x2, #4048]
   31294:	add	x0, sp, #0x8
   31298:	mov	w3, #0x2                   	// #2
   3129c:	mov	x1, x21
   312a0:	bl	c610 <mpfr_div@plt>
   312a4:	add	x0, sp, #0x8
   312a8:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   312ac:	mov	x2, xzr
   312b0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   312b4:	cmp	w0, #0x1
   312b8:	b.lt	312d4 <mpfr_expm1@@Base+0x150>  // b.tstop
   312bc:	add	x0, sp, #0x8
   312c0:	mov	w1, #0x2                   	// #2
   312c4:	bl	c1d0 <mpfr_get_si@plt>
   312c8:	tbz	x0, #63, 312e8 <mpfr_expm1@@Base+0x164>
   312cc:	neg	x2, x0
   312d0:	b	312d8 <mpfr_expm1@@Base+0x154>
   312d4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   312d8:	ldr	x8, [x19]
   312dc:	add	x8, x8, #0x1
   312e0:	cmp	x2, x8
   312e4:	b.hi	31630 <mpfr_expm1@@Base+0x4ac>  // b.pmore
   312e8:	ldr	x24, [x19]
   312ec:	str	x28, [sp]
   312f0:	subs	x22, x24, #0x1
   312f4:	b.eq	315c8 <mpfr_expm1@@Base+0x444>  // b.none
   312f8:	b.le	315d0 <mpfr_expm1@@Base+0x44c>
   312fc:	clz	x8, x22
   31300:	mov	w9, #0x40                  	// #64
   31304:	sub	x8, x9, x8
   31308:	mov	w9, #0x6                   	// #6
   3130c:	sub	x10, x9, x23
   31310:	cmp	x23, #0x0
   31314:	csel	x9, x10, x9, lt  // lt = tstop
   31318:	add	x9, x9, x24
   3131c:	add	x22, x9, x8
   31320:	add	x0, sp, #0x8
   31324:	mov	x1, x22
   31328:	bl	ca60 <mpfr_init2@plt>
   3132c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31330:	ldr	x1, [x0, #2640]
   31334:	add	x0, x0, #0xa50
   31338:	blr	x1
   3133c:	mov	x23, x0
   31340:	str	wzr, [x27, x0]
   31344:	add	x0, sp, #0x8
   31348:	mov	x1, x21
   3134c:	mov	w2, wzr
   31350:	bl	c740 <mpfr_exp@plt>
   31354:	ldr	w8, [x27, x23]
   31358:	tbnz	w8, #1, 31524 <mpfr_expm1@@Base+0x3a0>
   3135c:	cmp	w20, #0x0
   31360:	mov	w23, #0x40                  	// #64
   31364:	cinc	x24, x24, eq  // eq = none
   31368:	tbnz	w8, #0, 31594 <mpfr_expm1@@Base+0x410>
   3136c:	mov	w28, w26
   31370:	mov	w26, w20
   31374:	ldr	x20, [sp, #24]
   31378:	add	x0, sp, #0x8
   3137c:	add	x1, sp, #0x8
   31380:	mov	w2, #0x1                   	// #1
   31384:	mov	w3, wzr
   31388:	bl	c520 <mpfr_sub_ui@plt>
   3138c:	ldr	x8, [sp, #24]
   31390:	mov	x9, #0x4                   	// #4
   31394:	movk	x9, #0x8000, lsl #48
   31398:	cmp	x8, x9
   3139c:	b.lt	313dc <mpfr_expm1@@Base+0x258>  // b.tstop
   313a0:	ldr	x9, [sp, #8]
   313a4:	sub	x8, x20, x8
   313a8:	bic	x8, x8, x8, asr #63
   313ac:	mvn	x8, x8
   313b0:	add	x2, x22, x8
   313b4:	sub	x8, x9, #0x1
   313b8:	ldr	x0, [sp, #32]
   313bc:	add	x9, x9, #0x3e
   313c0:	cmp	x8, #0x0
   313c4:	csel	x8, x9, x8, lt  // lt = tstop
   313c8:	asr	x8, x8, #6
   313cc:	add	x1, x8, #0x1
   313d0:	mov	x3, x24
   313d4:	bl	c370 <mpfr_round_p@plt>
   313d8:	cbnz	w0, 31468 <mpfr_expm1@@Base+0x2e4>
   313dc:	mov	x8, #0x4                   	// #4
   313e0:	movk	x8, #0x8000, lsl #48
   313e4:	sub	x8, x8, x22
   313e8:	sub	x8, x8, #0x105
   313ec:	cmp	x23, x8
   313f0:	b.gt	3144c <mpfr_expm1@@Base+0x2c8>
   313f4:	add	x22, x23, x22
   313f8:	cmp	x22, #0x0
   313fc:	cinc	x8, x22, lt  // lt = tstop
   31400:	add	x0, sp, #0x8
   31404:	mov	x1, x22
   31408:	asr	x23, x8, #1
   3140c:	bl	bf20 <mpfr_set_prec@plt>
   31410:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31414:	ldr	x1, [x0, #2640]
   31418:	add	x0, x0, #0xa50
   3141c:	blr	x1
   31420:	mov	x20, x0
   31424:	str	wzr, [x27, x0]
   31428:	add	x0, sp, #0x8
   3142c:	mov	x1, x21
   31430:	mov	w2, wzr
   31434:	bl	c740 <mpfr_exp@plt>
   31438:	ldr	w8, [x27, x20]
   3143c:	mov	w20, w26
   31440:	mov	w26, w28
   31444:	tbz	w8, #1, 31368 <mpfr_expm1@@Base+0x1e4>
   31448:	b	31524 <mpfr_expm1@@Base+0x3a0>
   3144c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   31450:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   31454:	mov	w1, #0xa5                  	// #165
   31458:	add	x0, x0, #0x37a
   3145c:	add	x2, x2, #0xde2
   31460:	bl	cb20 <mpfr_assert_fail@plt>
   31464:	b	313f4 <mpfr_expm1@@Base+0x270>
   31468:	ldr	w3, [sp, #16]
   3146c:	add	x1, sp, #0x8
   31470:	mov	x0, x19
   31474:	mov	w2, w26
   31478:	mov	w20, w26
   3147c:	bl	c690 <mpfr_set4@plt>
   31480:	mov	w22, w0
   31484:	mov	w26, w28
   31488:	ldr	x21, [sp]
   3148c:	add	x0, sp, #0x8
   31490:	bl	c0b0 <mpfr_clear@plt>
   31494:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31498:	ldr	x1, [x0, #2640]
   3149c:	add	x0, x0, #0xa50
   314a0:	blr	x1
   314a4:	str	w26, [x27, x0]
   314a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   314ac:	ldr	x1, [x0, #2576]
   314b0:	add	x0, x0, #0xa10
   314b4:	blr	x1
   314b8:	str	x25, [x27, x0]
   314bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   314c0:	ldr	x1, [x0, #2608]
   314c4:	add	x0, x0, #0xa30
   314c8:	blr	x1
   314cc:	str	x21, [x27, x0]
   314d0:	ldr	x8, [x19, #16]
   314d4:	cmp	x8, x21
   314d8:	b.gt	316c4 <mpfr_expm1@@Base+0x540>
   314dc:	cmp	x8, x25
   314e0:	b.lt	316c4 <mpfr_expm1@@Base+0x540>  // b.tstop
   314e4:	cbz	w22, 31500 <mpfr_expm1@@Base+0x37c>
   314e8:	orr	w8, w26, #0x8
   314ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   314f0:	ldr	x1, [x0, #2640]
   314f4:	add	x0, x0, #0xa50
   314f8:	blr	x1
   314fc:	str	w8, [x27, x0]
   31500:	mov	w0, w22
   31504:	ldp	x20, x19, [sp, #128]
   31508:	ldp	x22, x21, [sp, #112]
   3150c:	ldp	x24, x23, [sp, #96]
   31510:	ldp	x26, x25, [sp, #80]
   31514:	ldp	x28, x27, [sp, #64]
   31518:	ldp	x29, x30, [sp, #48]
   3151c:	add	sp, sp, #0x90
   31520:	ret
   31524:	mov	w2, #0x1                   	// #1
   31528:	mov	x0, x19
   3152c:	mov	w1, w20
   31530:	bl	bf90 <mpfr_overflow@plt>
   31534:	mov	w22, w0
   31538:	orr	w26, w26, #0x2
   3153c:	b	31488 <mpfr_expm1@@Base+0x304>
   31540:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31544:	cmp	x23, x8
   31548:	b.eq	315f4 <mpfr_expm1@@Base+0x470>  // b.none
   3154c:	mov	x8, #0x2                   	// #2
   31550:	movk	x8, #0x8000, lsl #48
   31554:	cmp	x23, x8
   31558:	b.ne	31618 <mpfr_expm1@@Base+0x494>  // b.any
   3155c:	mov	x8, #0x4                   	// #4
   31560:	movk	x8, #0x8000, lsl #48
   31564:	sub	x8, x8, #0x2
   31568:	str	x8, [x19, #16]
   3156c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31570:	ldr	x1, [x0, #2640]
   31574:	add	x0, x0, #0xa50
   31578:	blr	x1
   3157c:	mrs	x8, tpidr_el0
   31580:	ldr	w9, [x8, x0]
   31584:	mov	w22, wzr
   31588:	orr	w9, w9, #0x4
   3158c:	str	w9, [x8, x0]
   31590:	b	31500 <mpfr_expm1@@Base+0x37c>
   31594:	mov	x1, #0xffffffffffffffff    	// #-1
   31598:	mov	x0, x19
   3159c:	mov	x2, xzr
   315a0:	mov	w3, w20
   315a4:	bl	bae0 <mpfr_set_si_2exp@plt>
   315a8:	ldr	x21, [sp]
   315ac:	sub	w8, w20, #0x1
   315b0:	cmp	w8, #0x1
   315b4:	b.hi	315ec <mpfr_expm1@@Base+0x468>  // b.pmore
   315b8:	mov	x0, x19
   315bc:	bl	c450 <mpfr_nexttozero@plt>
   315c0:	mov	w22, #0x1                   	// #1
   315c4:	b	3148c <mpfr_expm1@@Base+0x308>
   315c8:	mov	x8, xzr
   315cc:	b	31308 <mpfr_expm1@@Base+0x184>
   315d0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   315d4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   315d8:	add	x0, x0, #0x37a
   315dc:	add	x2, x2, #0xdd9
   315e0:	mov	w1, #0x72                  	// #114
   315e4:	bl	cb20 <mpfr_assert_fail@plt>
   315e8:	b	312fc <mpfr_expm1@@Base+0x178>
   315ec:	mov	w22, #0xffffffff            	// #-1
   315f0:	b	3148c <mpfr_expm1@@Base+0x308>
   315f4:	ldr	w8, [x21, #8]
   315f8:	cmp	w8, #0x1
   315fc:	b.lt	316fc <mpfr_expm1@@Base+0x578>  // b.tstop
   31600:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31604:	mov	w9, #0x1                   	// #1
   31608:	mov	w22, wzr
   3160c:	str	x8, [x19, #16]
   31610:	str	w9, [x19, #8]
   31614:	b	31500 <mpfr_expm1@@Base+0x37c>
   31618:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3161c:	str	x8, [x19, #16]
   31620:	ldr	w8, [x21, #8]
   31624:	mov	w22, wzr
   31628:	str	w8, [x19, #8]
   3162c:	b	31500 <mpfr_expm1@@Base+0x37c>
   31630:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31634:	ldr	x1, [x0, #2640]
   31638:	add	x0, x0, #0xa50
   3163c:	blr	x1
   31640:	str	wzr, [x27, x0]
   31644:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   31648:	ldr	x1, [x1, #4008]
   3164c:	mov	x0, x19
   31650:	mov	w3, wzr
   31654:	mov	w4, w20
   31658:	bl	c530 <mpfr_round_near_x@plt>
   3165c:	cbz	w0, 312e8 <mpfr_expm1@@Base+0x164>
   31660:	mov	w22, w0
   31664:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31668:	ldr	x1, [x0, #2640]
   3166c:	add	x0, x0, #0xa50
   31670:	blr	x1
   31674:	ldr	w8, [x27, x0]
   31678:	orr	w8, w8, w26
   3167c:	str	w8, [x27, x0]
   31680:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31684:	ldr	x1, [x0, #2576]
   31688:	add	x0, x0, #0xa10
   3168c:	blr	x1
   31690:	str	x25, [x27, x0]
   31694:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31698:	ldr	x1, [x0, #2608]
   3169c:	add	x0, x0, #0xa30
   316a0:	blr	x1
   316a4:	str	x28, [x27, x0]
   316a8:	ldr	x9, [x19, #16]
   316ac:	cmp	x9, x28
   316b0:	b.gt	316c4 <mpfr_expm1@@Base+0x540>
   316b4:	cmp	x9, x25
   316b8:	b.lt	316c4 <mpfr_expm1@@Base+0x540>  // b.tstop
   316bc:	orr	w8, w8, #0x8
   316c0:	b	314ec <mpfr_expm1@@Base+0x368>
   316c4:	mov	x0, x19
   316c8:	mov	w1, w22
   316cc:	mov	w2, w20
   316d0:	bl	cb10 <mpfr_check_range@plt>
   316d4:	mov	w22, w0
   316d8:	b	31500 <mpfr_expm1@@Base+0x37c>
   316dc:	mov	x0, x19
   316e0:	mov	x1, x21
   316e4:	mov	w3, wzr
   316e8:	mov	w4, w20
   316ec:	bl	c530 <mpfr_round_near_x@plt>
   316f0:	mov	w22, w0
   316f4:	cbnz	w0, 31500 <mpfr_expm1@@Base+0x37c>
   316f8:	b	31210 <mpfr_expm1@@Base+0x8c>
   316fc:	mov	x0, x19
   31700:	mov	w3, w20
   31704:	ldp	x20, x19, [sp, #128]
   31708:	ldp	x22, x21, [sp, #112]
   3170c:	ldp	x24, x23, [sp, #96]
   31710:	ldp	x26, x25, [sp, #80]
   31714:	ldp	x28, x27, [sp, #64]
   31718:	ldp	x29, x30, [sp, #48]
   3171c:	mov	x1, #0xffffffffffffffff    	// #-1
   31720:	mov	x2, xzr
   31724:	add	sp, sp, #0x90
   31728:	b	bae0 <mpfr_set_si_2exp@plt>

000000000003172c <mpfr_log2@@Base>:
   3172c:	sub	sp, sp, #0xa0
   31730:	stp	x29, x30, [sp, #64]
   31734:	stp	x28, x27, [sp, #80]
   31738:	stp	x26, x25, [sp, #96]
   3173c:	stp	x24, x23, [sp, #112]
   31740:	stp	x22, x21, [sp, #128]
   31744:	stp	x20, x19, [sp, #144]
   31748:	ldr	x8, [x1, #16]
   3174c:	mov	x9, #0x2                   	// #2
   31750:	movk	x9, #0x8000, lsl #48
   31754:	add	x9, x9, #0x2
   31758:	mov	x21, x1
   3175c:	cmp	x8, x9
   31760:	mov	x19, x0
   31764:	add	x29, sp, #0x40
   31768:	b.lt	319e8 <mpfr_log2@@Base+0x2bc>  // b.tstop
   3176c:	ldr	w8, [x21, #8]
   31770:	tbnz	w8, #31, 31ae0 <mpfr_log2@@Base+0x3b4>
   31774:	mov	w20, w2
   31778:	mov	w1, #0x1                   	// #1
   3177c:	mov	x0, x21
   31780:	mov	x2, xzr
   31784:	mov	w22, #0x1                   	// #1
   31788:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   3178c:	cbz	w0, 31a3c <mpfr_log2@@Base+0x310>
   31790:	ldr	x8, [x21, #16]
   31794:	mov	w1, #0x1                   	// #1
   31798:	mov	x0, x21
   3179c:	sub	x2, x8, #0x1
   317a0:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   317a4:	cbz	w0, 31a50 <mpfr_log2@@Base+0x324>
   317a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   317ac:	ldr	x1, [x0, #2640]
   317b0:	add	x0, x0, #0xa50
   317b4:	blr	x1
   317b8:	mrs	x27, tpidr_el0
   317bc:	ldr	w28, [x27, x0]
   317c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   317c4:	ldr	x1, [x0, #2576]
   317c8:	add	x0, x0, #0xa10
   317cc:	blr	x1
   317d0:	ldr	x23, [x27, x0]
   317d4:	mov	x8, x0
   317d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   317dc:	ldr	x1, [x0, #2608]
   317e0:	add	x0, x0, #0xa30
   317e4:	blr	x1
   317e8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   317ec:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   317f0:	ldr	x25, [x27, x0]
   317f4:	str	x9, [x27, x8]
   317f8:	str	x10, [x27, x0]
   317fc:	ldr	x24, [x19]
   31800:	subs	x26, x24, #0x1
   31804:	add	x22, x24, #0x3
   31808:	b.eq	31a84 <mpfr_log2@@Base+0x358>  // b.none
   3180c:	b.le	31aa4 <mpfr_log2@@Base+0x378>
   31810:	clz	x8, x26
   31814:	mov	w9, #0x40                  	// #64
   31818:	sub	x8, x9, x8
   3181c:	add	x22, x22, x8
   31820:	add	x0, sp, #0x20
   31824:	mov	x1, x22
   31828:	bl	ca60 <mpfr_init2@plt>
   3182c:	mov	x0, sp
   31830:	mov	x1, x22
   31834:	bl	ca60 <mpfr_init2@plt>
   31838:	cmp	w20, #0x0
   3183c:	mov	w26, #0x40                  	// #64
   31840:	cinc	x24, x24, eq  // eq = none
   31844:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31848:	ldr	x1, [x0, #2624]
   3184c:	add	x0, x0, #0xa40
   31850:	blr	x1
   31854:	add	x1, x27, x0
   31858:	add	x0, sp, #0x20
   3185c:	mov	w2, #0x3                   	// #3
   31860:	bl	c380 <mpfr_cache@plt>
   31864:	mov	x0, sp
   31868:	mov	x1, x21
   3186c:	mov	w2, wzr
   31870:	bl	c0d0 <mpfr_log@plt>
   31874:	add	x0, sp, #0x20
   31878:	mov	x1, sp
   3187c:	add	x2, sp, #0x20
   31880:	mov	w3, wzr
   31884:	bl	c610 <mpfr_div@plt>
   31888:	ldr	x8, [sp, #48]
   3188c:	mov	x9, #0x2                   	// #2
   31890:	movk	x9, #0x8000, lsl #48
   31894:	add	x9, x9, #0x2
   31898:	cmp	x8, x9
   3189c:	b.lt	318d0 <mpfr_log2@@Base+0x1a4>  // b.tstop
   318a0:	ldr	x8, [sp, #32]
   318a4:	ldr	x0, [sp, #56]
   318a8:	sub	x2, x22, #0x3
   318ac:	mov	x3, x24
   318b0:	sub	x9, x8, #0x1
   318b4:	add	x8, x8, #0x3e
   318b8:	cmp	x9, #0x0
   318bc:	csel	x8, x8, x9, lt  // lt = tstop
   318c0:	asr	x8, x8, #6
   318c4:	add	x1, x8, #0x1
   318c8:	bl	c370 <mpfr_round_p@plt>
   318cc:	cbnz	w0, 31930 <mpfr_log2@@Base+0x204>
   318d0:	mov	x8, #0x2                   	// #2
   318d4:	movk	x8, #0x8000, lsl #48
   318d8:	sub	x8, x8, x22
   318dc:	sub	x8, x8, #0x103
   318e0:	cmp	x26, x8
   318e4:	b.gt	31914 <mpfr_log2@@Base+0x1e8>
   318e8:	add	x22, x22, x26
   318ec:	cmp	x22, #0x0
   318f0:	cinc	x8, x22, lt  // lt = tstop
   318f4:	add	x0, sp, #0x20
   318f8:	mov	x1, x22
   318fc:	asr	x26, x8, #1
   31900:	bl	bf20 <mpfr_set_prec@plt>
   31904:	mov	x0, sp
   31908:	mov	x1, x22
   3190c:	bl	bf20 <mpfr_set_prec@plt>
   31910:	b	31844 <mpfr_log2@@Base+0x118>
   31914:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   31918:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   3191c:	mov	w1, #0x80                  	// #128
   31920:	add	x0, x0, #0x3f1
   31924:	add	x2, x2, #0xde2
   31928:	bl	cb20 <mpfr_assert_fail@plt>
   3192c:	b	318e8 <mpfr_log2@@Base+0x1bc>
   31930:	ldr	w3, [sp, #40]
   31934:	add	x1, sp, #0x20
   31938:	mov	x0, x19
   3193c:	mov	w2, w20
   31940:	bl	c690 <mpfr_set4@plt>
   31944:	mov	w21, w0
   31948:	add	x0, sp, #0x20
   3194c:	bl	c0b0 <mpfr_clear@plt>
   31950:	mov	x0, sp
   31954:	bl	c0b0 <mpfr_clear@plt>
   31958:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3195c:	ldr	x1, [x0, #2640]
   31960:	add	x0, x0, #0xa50
   31964:	blr	x1
   31968:	str	w28, [x27, x0]
   3196c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31970:	ldr	x1, [x0, #2576]
   31974:	add	x0, x0, #0xa10
   31978:	blr	x1
   3197c:	str	x23, [x27, x0]
   31980:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31984:	ldr	x1, [x0, #2608]
   31988:	add	x0, x0, #0xa30
   3198c:	blr	x1
   31990:	str	x25, [x27, x0]
   31994:	ldr	x8, [x19, #16]
   31998:	cmp	x8, x25
   3199c:	b.gt	31a8c <mpfr_log2@@Base+0x360>
   319a0:	cmp	x8, x23
   319a4:	b.lt	31a8c <mpfr_log2@@Base+0x360>  // b.tstop
   319a8:	cbz	w21, 319c4 <mpfr_log2@@Base+0x298>
   319ac:	orr	w8, w28, #0x8
   319b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   319b4:	ldr	x1, [x0, #2640]
   319b8:	add	x0, x0, #0xa50
   319bc:	blr	x1
   319c0:	str	w8, [x27, x0]
   319c4:	mov	w0, w21
   319c8:	ldp	x20, x19, [sp, #144]
   319cc:	ldp	x22, x21, [sp, #128]
   319d0:	ldp	x24, x23, [sp, #112]
   319d4:	ldp	x26, x25, [sp, #96]
   319d8:	ldp	x28, x27, [sp, #80]
   319dc:	ldp	x29, x30, [sp, #64]
   319e0:	add	sp, sp, #0xa0
   319e4:	ret
   319e8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   319ec:	cmp	x8, x9
   319f0:	b.eq	31ac0 <mpfr_log2@@Base+0x394>  // b.none
   319f4:	mov	x9, #0x2                   	// #2
   319f8:	movk	x9, #0x8000, lsl #48
   319fc:	cmp	x8, x9
   31a00:	b.eq	31ae0 <mpfr_log2@@Base+0x3b4>  // b.none
   31a04:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31a08:	mov	w9, #0xffffffff            	// #-1
   31a0c:	str	x8, [x19, #16]
   31a10:	str	w9, [x19, #8]
   31a14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31a18:	ldr	x1, [x0, #2640]
   31a1c:	add	x0, x0, #0xa50
   31a20:	blr	x1
   31a24:	mrs	x8, tpidr_el0
   31a28:	ldr	w9, [x8, x0]
   31a2c:	mov	w21, wzr
   31a30:	orr	w9, w9, #0x20
   31a34:	str	w9, [x8, x0]
   31a38:	b	319c4 <mpfr_log2@@Base+0x298>
   31a3c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   31a40:	mov	w21, wzr
   31a44:	str	x8, [x19, #16]
   31a48:	str	w22, [x19, #8]
   31a4c:	b	319c4 <mpfr_log2@@Base+0x298>
   31a50:	ldr	x8, [x21, #16]
   31a54:	mov	x0, x19
   31a58:	mov	w3, w20
   31a5c:	ldp	x20, x19, [sp, #144]
   31a60:	ldp	x22, x21, [sp, #128]
   31a64:	ldp	x24, x23, [sp, #112]
   31a68:	ldp	x26, x25, [sp, #96]
   31a6c:	ldp	x28, x27, [sp, #80]
   31a70:	ldp	x29, x30, [sp, #64]
   31a74:	sub	x1, x8, #0x1
   31a78:	mov	x2, xzr
   31a7c:	add	sp, sp, #0xa0
   31a80:	b	bae0 <mpfr_set_si_2exp@plt>
   31a84:	mov	x8, xzr
   31a88:	b	3181c <mpfr_log2@@Base+0xf0>
   31a8c:	mov	x0, x19
   31a90:	mov	w1, w21
   31a94:	mov	w2, w20
   31a98:	bl	cb10 <mpfr_check_range@plt>
   31a9c:	mov	w21, w0
   31aa0:	b	319c4 <mpfr_log2@@Base+0x298>
   31aa4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   31aa8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   31aac:	add	x0, x0, #0x3f1
   31ab0:	add	x2, x2, #0xdd9
   31ab4:	mov	w1, #0x6b                  	// #107
   31ab8:	bl	cb20 <mpfr_assert_fail@plt>
   31abc:	b	31810 <mpfr_log2@@Base+0xe4>
   31ac0:	ldr	w8, [x21, #8]
   31ac4:	tbnz	w8, #31, 31ae0 <mpfr_log2@@Base+0x3b4>
   31ac8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31acc:	mov	w9, #0x1                   	// #1
   31ad0:	mov	w21, wzr
   31ad4:	str	x8, [x19, #16]
   31ad8:	str	w9, [x19, #8]
   31adc:	b	319c4 <mpfr_log2@@Base+0x298>
   31ae0:	mov	x8, #0x2                   	// #2
   31ae4:	movk	x8, #0x8000, lsl #48
   31ae8:	str	x8, [x19, #16]
   31aec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31af0:	ldr	x1, [x0, #2640]
   31af4:	add	x0, x0, #0xa50
   31af8:	blr	x1
   31afc:	mrs	x8, tpidr_el0
   31b00:	ldr	w9, [x8, x0]
   31b04:	mov	w21, wzr
   31b08:	orr	w9, w9, #0x4
   31b0c:	str	w9, [x8, x0]
   31b10:	b	319c4 <mpfr_log2@@Base+0x298>

0000000000031b14 <mpfr_log10@@Base>:
   31b14:	sub	sp, sp, #0xb0
   31b18:	stp	x29, x30, [sp, #80]
   31b1c:	stp	x28, x27, [sp, #96]
   31b20:	stp	x26, x25, [sp, #112]
   31b24:	stp	x24, x23, [sp, #128]
   31b28:	stp	x22, x21, [sp, #144]
   31b2c:	stp	x20, x19, [sp, #160]
   31b30:	ldr	x8, [x1, #16]
   31b34:	mov	x10, #0x2                   	// #2
   31b38:	movk	x10, #0x8000, lsl #48
   31b3c:	add	x9, x10, #0x2
   31b40:	mov	x21, x1
   31b44:	cmp	x8, x9
   31b48:	mov	x19, x0
   31b4c:	add	x29, sp, #0x50
   31b50:	b.lt	31e3c <mpfr_log10@@Base+0x328>  // b.tstop
   31b54:	ldr	w8, [x21, #8]
   31b58:	tbnz	w8, #31, 31eec <mpfr_log10@@Base+0x3d8>
   31b5c:	mov	w20, w2
   31b60:	mov	w1, #0x1                   	// #1
   31b64:	mov	x0, x21
   31b68:	mov	x2, xzr
   31b6c:	mov	w22, #0x1                   	// #1
   31b70:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   31b74:	cbz	w0, 31e08 <mpfr_log10@@Base+0x2f4>
   31b78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31b7c:	ldr	x1, [x0, #2640]
   31b80:	add	x0, x0, #0xa50
   31b84:	blr	x1
   31b88:	mrs	x26, tpidr_el0
   31b8c:	ldr	w28, [x26, x0]
   31b90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31b94:	ldr	x1, [x0, #2576]
   31b98:	add	x0, x0, #0xa10
   31b9c:	blr	x1
   31ba0:	ldr	x23, [x26, x0]
   31ba4:	mov	x8, x0
   31ba8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31bac:	ldr	x1, [x0, #2608]
   31bb0:	add	x0, x0, #0xa30
   31bb4:	blr	x1
   31bb8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   31bbc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   31bc0:	ldr	x25, [x26, x0]
   31bc4:	str	x9, [x26, x8]
   31bc8:	str	x10, [x26, x0]
   31bcc:	ldr	x24, [x19]
   31bd0:	subs	x27, x24, #0x1
   31bd4:	add	x22, x24, #0x4
   31bd8:	b.eq	31e90 <mpfr_log10@@Base+0x37c>  // b.none
   31bdc:	b.le	31eb0 <mpfr_log10@@Base+0x39c>
   31be0:	clz	x8, x27
   31be4:	mov	w9, #0x40                  	// #64
   31be8:	sub	x8, x9, x8
   31bec:	add	x22, x22, x8
   31bf0:	sub	x0, x29, #0x20
   31bf4:	mov	x1, x22
   31bf8:	bl	ca60 <mpfr_init2@plt>
   31bfc:	add	x0, sp, #0x10
   31c00:	mov	x1, x22
   31c04:	bl	ca60 <mpfr_init2@plt>
   31c08:	cmp	w20, #0x0
   31c0c:	mov	x27, #0x2                   	// #2
   31c10:	mov	w8, #0x40                  	// #64
   31c14:	cinc	x24, x24, eq  // eq = none
   31c18:	movk	x27, #0x8000, lsl #48
   31c1c:	str	x8, [sp, #8]
   31c20:	sub	x0, x29, #0x20
   31c24:	mov	w1, #0xa                   	// #10
   31c28:	mov	x2, xzr
   31c2c:	mov	w3, wzr
   31c30:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   31c34:	sub	x0, x29, #0x20
   31c38:	sub	x1, x29, #0x20
   31c3c:	mov	w2, #0x3                   	// #3
   31c40:	bl	c0d0 <mpfr_log@plt>
   31c44:	add	x0, sp, #0x10
   31c48:	mov	x1, x21
   31c4c:	mov	w2, wzr
   31c50:	bl	c0d0 <mpfr_log@plt>
   31c54:	sub	x0, x29, #0x20
   31c58:	add	x1, sp, #0x10
   31c5c:	sub	x2, x29, #0x20
   31c60:	mov	w3, wzr
   31c64:	bl	c610 <mpfr_div@plt>
   31c68:	ldur	x8, [x29, #-16]
   31c6c:	add	x9, x27, #0x2
   31c70:	cmp	x8, x9
   31c74:	b.lt	31ca8 <mpfr_log10@@Base+0x194>  // b.tstop
   31c78:	ldur	x8, [x29, #-32]
   31c7c:	ldur	x0, [x29, #-8]
   31c80:	sub	x2, x22, #0x4
   31c84:	mov	x3, x24
   31c88:	sub	x9, x8, #0x1
   31c8c:	add	x8, x8, #0x3e
   31c90:	cmp	x9, #0x0
   31c94:	csel	x8, x8, x9, lt  // lt = tstop
   31c98:	asr	x8, x8, #6
   31c9c:	add	x1, x8, #0x1
   31ca0:	bl	c370 <mpfr_round_p@plt>
   31ca4:	cbnz	w0, 31d70 <mpfr_log10@@Base+0x25c>
   31ca8:	ldur	w8, [x29, #-24]
   31cac:	cmp	w8, #0x1
   31cb0:	b.lt	31d08 <mpfr_log10@@Base+0x1f4>  // b.tstop
   31cb4:	sub	x0, x29, #0x20
   31cb8:	bl	c1a0 <mpfr_integer_p@plt>
   31cbc:	cbz	w0, 31d08 <mpfr_log10@@Base+0x1f4>
   31cc0:	sub	x0, x29, #0x20
   31cc4:	mov	w1, wzr
   31cc8:	bl	bea0 <mpfr_fits_ulong_p@plt>
   31ccc:	cbz	w0, 31d08 <mpfr_log10@@Base+0x1f4>
   31cd0:	sub	x0, x29, #0x20
   31cd4:	mov	w1, wzr
   31cd8:	bl	bcf0 <mpfr_get_ui@plt>
   31cdc:	mov	x2, x0
   31ce0:	add	x0, sp, #0x10
   31ce4:	mov	w1, #0xa                   	// #10
   31ce8:	mov	w3, wzr
   31cec:	bl	bb70 <mpfr_ui_pow_ui@plt>
   31cf0:	cbnz	w0, 31d08 <mpfr_log10@@Base+0x1f4>
   31cf4:	add	x1, sp, #0x10
   31cf8:	mov	w2, #0x1                   	// #1
   31cfc:	mov	x0, x21
   31d00:	bl	c980 <mpfr_cmp3@plt>
   31d04:	cbz	w0, 31d70 <mpfr_log10@@Base+0x25c>
   31d08:	ldr	x9, [sp, #8]
   31d0c:	sub	x8, x27, x22
   31d10:	sub	x8, x8, #0x103
   31d14:	cmp	x9, x8
   31d18:	mov	x8, x9
   31d1c:	b.gt	31d50 <mpfr_log10@@Base+0x23c>
   31d20:	add	x22, x8, x22
   31d24:	cmp	x22, #0x0
   31d28:	cinc	x8, x22, lt  // lt = tstop
   31d2c:	asr	x8, x8, #1
   31d30:	sub	x0, x29, #0x20
   31d34:	mov	x1, x22
   31d38:	str	x8, [sp, #8]
   31d3c:	bl	bf20 <mpfr_set_prec@plt>
   31d40:	add	x0, sp, #0x10
   31d44:	mov	x1, x22
   31d48:	bl	bf20 <mpfr_set_prec@plt>
   31d4c:	b	31c20 <mpfr_log10@@Base+0x10c>
   31d50:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   31d54:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   31d58:	mov	w1, #0x88                  	// #136
   31d5c:	add	x0, x0, #0x382
   31d60:	add	x2, x2, #0xde2
   31d64:	bl	cb20 <mpfr_assert_fail@plt>
   31d68:	ldr	x8, [sp, #8]
   31d6c:	b	31d20 <mpfr_log10@@Base+0x20c>
   31d70:	ldur	w3, [x29, #-24]
   31d74:	sub	x1, x29, #0x20
   31d78:	mov	x0, x19
   31d7c:	mov	w2, w20
   31d80:	bl	c690 <mpfr_set4@plt>
   31d84:	mov	w21, w0
   31d88:	sub	x0, x29, #0x20
   31d8c:	bl	c0b0 <mpfr_clear@plt>
   31d90:	add	x0, sp, #0x10
   31d94:	bl	c0b0 <mpfr_clear@plt>
   31d98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31d9c:	ldr	x1, [x0, #2640]
   31da0:	add	x0, x0, #0xa50
   31da4:	blr	x1
   31da8:	str	w28, [x26, x0]
   31dac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31db0:	ldr	x1, [x0, #2576]
   31db4:	add	x0, x0, #0xa10
   31db8:	blr	x1
   31dbc:	str	x23, [x26, x0]
   31dc0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31dc4:	ldr	x1, [x0, #2608]
   31dc8:	add	x0, x0, #0xa30
   31dcc:	blr	x1
   31dd0:	str	x25, [x26, x0]
   31dd4:	ldr	x8, [x19, #16]
   31dd8:	cmp	x8, x25
   31ddc:	b.gt	31e98 <mpfr_log10@@Base+0x384>
   31de0:	cmp	x8, x23
   31de4:	b.lt	31e98 <mpfr_log10@@Base+0x384>  // b.tstop
   31de8:	cbz	w21, 31e18 <mpfr_log10@@Base+0x304>
   31dec:	orr	w8, w28, #0x8
   31df0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31df4:	ldr	x1, [x0, #2640]
   31df8:	add	x0, x0, #0xa50
   31dfc:	blr	x1
   31e00:	str	w8, [x26, x0]
   31e04:	b	31e18 <mpfr_log10@@Base+0x304>
   31e08:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   31e0c:	mov	w21, wzr
   31e10:	str	x8, [x19, #16]
   31e14:	str	w22, [x19, #8]
   31e18:	mov	w0, w21
   31e1c:	ldp	x20, x19, [sp, #160]
   31e20:	ldp	x22, x21, [sp, #144]
   31e24:	ldp	x24, x23, [sp, #128]
   31e28:	ldp	x26, x25, [sp, #112]
   31e2c:	ldp	x28, x27, [sp, #96]
   31e30:	ldp	x29, x30, [sp, #80]
   31e34:	add	sp, sp, #0xb0
   31e38:	ret
   31e3c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   31e40:	cmp	x8, x9
   31e44:	b.eq	31ecc <mpfr_log10@@Base+0x3b8>  // b.none
   31e48:	mov	x9, #0x2                   	// #2
   31e4c:	movk	x9, #0x8000, lsl #48
   31e50:	cmp	x8, x9
   31e54:	b.eq	31eec <mpfr_log10@@Base+0x3d8>  // b.none
   31e58:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31e5c:	mov	w9, #0xffffffff            	// #-1
   31e60:	str	x8, [x19, #16]
   31e64:	str	w9, [x19, #8]
   31e68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31e6c:	ldr	x1, [x0, #2640]
   31e70:	add	x0, x0, #0xa50
   31e74:	blr	x1
   31e78:	mrs	x8, tpidr_el0
   31e7c:	ldr	w9, [x8, x0]
   31e80:	mov	w21, wzr
   31e84:	orr	w9, w9, #0x20
   31e88:	str	w9, [x8, x0]
   31e8c:	b	31e18 <mpfr_log10@@Base+0x304>
   31e90:	mov	x8, xzr
   31e94:	b	31bec <mpfr_log10@@Base+0xd8>
   31e98:	mov	x0, x19
   31e9c:	mov	w1, w21
   31ea0:	mov	w2, w20
   31ea4:	bl	cb10 <mpfr_check_range@plt>
   31ea8:	mov	w21, w0
   31eac:	b	31e18 <mpfr_log10@@Base+0x304>
   31eb0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   31eb4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   31eb8:	add	x0, x0, #0x382
   31ebc:	add	x2, x2, #0xdd9
   31ec0:	mov	w1, #0x69                  	// #105
   31ec4:	bl	cb20 <mpfr_assert_fail@plt>
   31ec8:	b	31be0 <mpfr_log10@@Base+0xcc>
   31ecc:	ldr	w8, [x21, #8]
   31ed0:	tbnz	w8, #31, 31eec <mpfr_log10@@Base+0x3d8>
   31ed4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   31ed8:	mov	w9, #0x1                   	// #1
   31edc:	mov	w21, wzr
   31ee0:	str	x8, [x19, #16]
   31ee4:	str	w9, [x19, #8]
   31ee8:	b	31e18 <mpfr_log10@@Base+0x304>
   31eec:	str	x10, [x19, #16]
   31ef0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31ef4:	ldr	x1, [x0, #2640]
   31ef8:	add	x0, x0, #0xa50
   31efc:	blr	x1
   31f00:	mrs	x8, tpidr_el0
   31f04:	ldr	w9, [x8, x0]
   31f08:	mov	w21, wzr
   31f0c:	orr	w9, w9, #0x4
   31f10:	str	w9, [x8, x0]
   31f14:	b	31e18 <mpfr_log10@@Base+0x304>

0000000000031f18 <mpfr_ui_pow@@Base>:
   31f18:	sub	sp, sp, #0x90
   31f1c:	stp	x29, x30, [sp, #48]
   31f20:	stp	x28, x27, [sp, #64]
   31f24:	stp	x26, x25, [sp, #80]
   31f28:	stp	x24, x23, [sp, #96]
   31f2c:	stp	x22, x21, [sp, #112]
   31f30:	stp	x20, x19, [sp, #128]
   31f34:	add	x29, sp, #0x30
   31f38:	mov	w19, w3
   31f3c:	mov	x21, x2
   31f40:	mov	x8, x1
   31f44:	mov	x20, x0
   31f48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31f4c:	ldr	x1, [x0, #2640]
   31f50:	add	x0, x0, #0xa50
   31f54:	blr	x1
   31f58:	mrs	x25, tpidr_el0
   31f5c:	ldr	w27, [x25, x0]
   31f60:	mov	x22, x0
   31f64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31f68:	ldr	x1, [x0, #2576]
   31f6c:	add	x0, x0, #0xa10
   31f70:	blr	x1
   31f74:	ldr	x26, [x25, x0]
   31f78:	mov	x23, x0
   31f7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   31f80:	ldr	x1, [x0, #2608]
   31f84:	add	x0, x0, #0xa30
   31f88:	blr	x1
   31f8c:	ldr	x28, [x25, x0]
   31f90:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   31f94:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   31f98:	mov	x24, x0
   31f9c:	mov	w11, #0x40                  	// #64
   31fa0:	add	x12, sp, #0x8
   31fa4:	str	x9, [x25, x23]
   31fa8:	str	x10, [x25, x0]
   31fac:	mov	w9, #0x1                   	// #1
   31fb0:	add	x0, sp, #0x10
   31fb4:	mov	x1, x8
   31fb8:	mov	x2, xzr
   31fbc:	mov	w3, wzr
   31fc0:	str	x11, [sp, #16]
   31fc4:	str	x12, [sp, #40]
   31fc8:	str	w9, [sp, #24]
   31fcc:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   31fd0:	add	x1, sp, #0x10
   31fd4:	mov	x0, x20
   31fd8:	mov	x2, x21
   31fdc:	mov	w3, w19
   31fe0:	bl	bde0 <mpfr_pow@plt>
   31fe4:	ldr	w8, [x25, x22]
   31fe8:	str	x26, [x25, x23]
   31fec:	str	x28, [x25, x24]
   31ff0:	orr	w9, w8, w27
   31ff4:	str	w9, [x25, x22]
   31ff8:	ldr	x10, [x20, #16]
   31ffc:	mov	w8, w0
   32000:	cmp	x10, x28
   32004:	b.gt	32050 <mpfr_ui_pow@@Base+0x138>
   32008:	cmp	x10, x26
   3200c:	b.lt	32050 <mpfr_ui_pow@@Base+0x138>  // b.tstop
   32010:	cbz	w8, 3202c <mpfr_ui_pow@@Base+0x114>
   32014:	orr	w9, w9, #0x8
   32018:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3201c:	ldr	x1, [x0, #2640]
   32020:	add	x0, x0, #0xa50
   32024:	blr	x1
   32028:	str	w9, [x25, x0]
   3202c:	ldp	x20, x19, [sp, #128]
   32030:	ldp	x22, x21, [sp, #112]
   32034:	ldp	x24, x23, [sp, #96]
   32038:	ldp	x26, x25, [sp, #80]
   3203c:	ldp	x28, x27, [sp, #64]
   32040:	ldp	x29, x30, [sp, #48]
   32044:	mov	w0, w8
   32048:	add	sp, sp, #0x90
   3204c:	ret
   32050:	mov	x0, x20
   32054:	mov	w1, w8
   32058:	mov	w2, w19
   3205c:	bl	cb10 <mpfr_check_range@plt>
   32060:	mov	w8, w0
   32064:	b	3202c <mpfr_ui_pow@@Base+0x114>

0000000000032068 <mpfr_ui_pow_ui@@Base>:
   32068:	sub	sp, sp, #0xc0
   3206c:	stp	x24, x23, [sp, #144]
   32070:	stp	x22, x21, [sp, #160]
   32074:	stp	x20, x19, [sp, #176]
   32078:	mov	w24, w3
   3207c:	mov	x21, x1
   32080:	cmp	x2, #0x1
   32084:	mov	x20, x0
   32088:	stp	x29, x30, [sp, #96]
   3208c:	stp	x28, x27, [sp, #112]
   32090:	stp	x26, x25, [sp, #128]
   32094:	add	x29, sp, #0x60
   32098:	b.ls	32338 <mpfr_ui_pow_ui@@Base+0x2d0>  // b.plast
   3209c:	cmp	x21, #0x1
   320a0:	b.ls	32348 <mpfr_ui_pow_ui@@Base+0x2e0>  // b.plast
   320a4:	mov	x22, x2
   320a8:	clz	x19, x2
   320ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   320b0:	ldr	x1, [x0, #2640]
   320b4:	add	x0, x0, #0xa50
   320b8:	blr	x1
   320bc:	mrs	x27, tpidr_el0
   320c0:	ldr	w28, [x27, x0]
   320c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   320c8:	ldr	x1, [x0, #2576]
   320cc:	add	x0, x0, #0xa10
   320d0:	blr	x1
   320d4:	ldr	x9, [x27, x0]
   320d8:	mov	x8, x0
   320dc:	stur	x9, [x29, #-40]
   320e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   320e4:	ldr	x1, [x0, #2608]
   320e8:	add	x0, x0, #0xa30
   320ec:	blr	x1
   320f0:	ldr	x9, [x27, x0]
   320f4:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   320f8:	str	x10, [x27, x0]
   320fc:	sub	x0, x29, #0x20
   32100:	str	x9, [sp, #48]
   32104:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32108:	str	x9, [x27, x8]
   3210c:	ldr	x8, [x20]
   32110:	sub	x8, x8, x19
   32114:	add	x23, x8, #0x43
   32118:	mov	x1, x23
   3211c:	bl	ca60 <mpfr_init2@plt>
   32120:	mov	w8, #0x3e                  	// #62
   32124:	sub	x9, x19, #0x3f
   32128:	cmp	w24, #0x0
   3212c:	str	x9, [sp, #32]
   32130:	mov	w9, #0x40                  	// #64
   32134:	sub	w25, w8, w19
   32138:	str	x9, [sp, #16]
   3213c:	cset	w9, eq  // eq = none
   32140:	add	x8, x25, #0x2
   32144:	str	x9, [sp, #40]
   32148:	str	x8, [sp, #24]
   3214c:	sub	x0, x29, #0x20
   32150:	mov	w3, #0x2                   	// #2
   32154:	mov	x1, x21
   32158:	mov	x2, xzr
   3215c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   32160:	cmp	x19, #0x3f
   32164:	mov	w26, w0
   32168:	b.ne	32174 <mpfr_ui_pow_ui@@Base+0x10c>  // b.any
   3216c:	mov	w8, #0x1                   	// #1
   32170:	b	321d4 <mpfr_ui_pow_ui@@Base+0x16c>
   32174:	stp	w28, w24, [sp, #8]
   32178:	ldr	x24, [sp, #32]
   3217c:	mov	x28, x25
   32180:	b	32190 <mpfr_ui_pow_ui@@Base+0x128>
   32184:	adds	x24, x24, #0x1
   32188:	sub	x28, x28, #0x1
   3218c:	b.cs	321cc <mpfr_ui_pow_ui@@Base+0x164>  // b.hs, b.nlast
   32190:	sub	x0, x29, #0x20
   32194:	sub	x1, x29, #0x20
   32198:	sub	x2, x29, #0x20
   3219c:	mov	w3, #0x2                   	// #2
   321a0:	bl	bda0 <mpfr_mul@plt>
   321a4:	lsr	x8, x22, x28
   321a8:	orr	w26, w0, w26
   321ac:	tbz	w8, #0, 32184 <mpfr_ui_pow_ui@@Base+0x11c>
   321b0:	sub	x0, x29, #0x20
   321b4:	sub	x1, x29, #0x20
   321b8:	mov	w3, #0x2                   	// #2
   321bc:	mov	x2, x21
   321c0:	bl	bab0 <mpfr_mul_ui@plt>
   321c4:	orr	w26, w0, w26
   321c8:	b	32184 <mpfr_ui_pow_ui@@Base+0x11c>
   321cc:	ldr	x8, [sp, #24]
   321d0:	ldp	w28, w24, [sp, #8]
   321d4:	cbz	w26, 32280 <mpfr_ui_pow_ui@@Base+0x218>
   321d8:	ldur	x9, [x29, #-16]
   321dc:	mov	x10, #0xfffffffffffffeff    	// #-257
   321e0:	movk	x10, #0x7fff, lsl #48
   321e4:	add	x10, x10, #0x105
   321e8:	cmp	x9, x10
   321ec:	b.lt	32228 <mpfr_ui_pow_ui@@Base+0x1c0>  // b.tstop
   321f0:	ldur	x9, [x29, #-32]
   321f4:	sub	x2, x23, x8
   321f8:	ldr	x8, [x20]
   321fc:	ldur	x0, [x29, #-8]
   32200:	sub	x10, x9, #0x1
   32204:	add	x9, x9, #0x3e
   32208:	cmp	x10, #0x0
   3220c:	csel	x9, x9, x10, lt  // lt = tstop
   32210:	asr	x9, x9, #6
   32214:	add	x1, x9, #0x1
   32218:	ldr	x9, [sp, #40]
   3221c:	add	x3, x8, x9
   32220:	bl	c370 <mpfr_round_p@plt>
   32224:	cbnz	w0, 32280 <mpfr_ui_pow_ui@@Base+0x218>
   32228:	ldr	x26, [sp, #16]
   3222c:	mov	x8, #0xfffffffffffffeff    	// #-257
   32230:	movk	x8, #0x7fff, lsl #48
   32234:	sub	x8, x8, x23
   32238:	cmp	x26, x8
   3223c:	b.gt	32264 <mpfr_ui_pow_ui@@Base+0x1fc>
   32240:	add	x23, x23, x26
   32244:	cmp	x23, #0x0
   32248:	cinc	x8, x23, lt  // lt = tstop
   3224c:	asr	x8, x8, #1
   32250:	sub	x0, x29, #0x20
   32254:	mov	x1, x23
   32258:	str	x8, [sp, #16]
   3225c:	bl	bf20 <mpfr_set_prec@plt>
   32260:	b	3214c <mpfr_ui_pow_ui@@Base+0xe4>
   32264:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32268:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   3226c:	mov	w1, #0x54                  	// #84
   32270:	add	x0, x0, #0x38a
   32274:	add	x2, x2, #0x622
   32278:	bl	cb20 <mpfr_assert_fail@plt>
   3227c:	b	32240 <mpfr_ui_pow_ui@@Base+0x1d8>
   32280:	ldur	w3, [x29, #-24]
   32284:	sub	x1, x29, #0x20
   32288:	mov	x0, x20
   3228c:	mov	w2, w24
   32290:	bl	c690 <mpfr_set4@plt>
   32294:	mov	w21, w0
   32298:	sub	x0, x29, #0x20
   3229c:	bl	c0b0 <mpfr_clear@plt>
   322a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   322a4:	ldr	x1, [x0, #2640]
   322a8:	add	x0, x0, #0xa50
   322ac:	blr	x1
   322b0:	str	w28, [x27, x0]
   322b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   322b8:	ldr	x1, [x0, #2576]
   322bc:	add	x0, x0, #0xa10
   322c0:	blr	x1
   322c4:	ldur	x9, [x29, #-40]
   322c8:	str	x9, [x27, x0]
   322cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   322d0:	ldr	x1, [x0, #2608]
   322d4:	add	x0, x0, #0xa30
   322d8:	blr	x1
   322dc:	ldr	x10, [sp, #48]
   322e0:	str	x10, [x27, x0]
   322e4:	ldr	x8, [x20, #16]
   322e8:	cmp	x8, x10
   322ec:	b.gt	32364 <mpfr_ui_pow_ui@@Base+0x2fc>
   322f0:	cmp	x8, x9
   322f4:	b.lt	32364 <mpfr_ui_pow_ui@@Base+0x2fc>  // b.tstop
   322f8:	cbz	w21, 32314 <mpfr_ui_pow_ui@@Base+0x2ac>
   322fc:	orr	w8, w28, #0x8
   32300:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32304:	ldr	x1, [x0, #2640]
   32308:	add	x0, x0, #0xa50
   3230c:	blr	x1
   32310:	str	w8, [x27, x0]
   32314:	mov	w0, w21
   32318:	ldp	x20, x19, [sp, #176]
   3231c:	ldp	x22, x21, [sp, #160]
   32320:	ldp	x24, x23, [sp, #144]
   32324:	ldp	x26, x25, [sp, #128]
   32328:	ldp	x28, x27, [sp, #112]
   3232c:	ldp	x29, x30, [sp, #96]
   32330:	add	sp, sp, #0xc0
   32334:	ret
   32338:	b.ne	3234c <mpfr_ui_pow_ui@@Base+0x2e4>  // b.any
   3233c:	mov	x0, x20
   32340:	mov	x1, x21
   32344:	b	32354 <mpfr_ui_pow_ui@@Base+0x2ec>
   32348:	b.ne	3237c <mpfr_ui_pow_ui@@Base+0x314>  // b.any
   3234c:	mov	w1, #0x1                   	// #1
   32350:	mov	x0, x20
   32354:	mov	x2, xzr
   32358:	mov	w3, w24
   3235c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   32360:	b	32374 <mpfr_ui_pow_ui@@Base+0x30c>
   32364:	mov	x0, x20
   32368:	mov	w1, w21
   3236c:	mov	w2, w24
   32370:	bl	cb10 <mpfr_check_range@plt>
   32374:	mov	w21, w0
   32378:	b	32314 <mpfr_ui_pow_ui@@Base+0x2ac>
   3237c:	mov	w8, #0x1                   	// #1
   32380:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   32384:	mov	w21, wzr
   32388:	str	w8, [x20, #8]
   3238c:	str	x9, [x20, #16]
   32390:	b	32314 <mpfr_ui_pow_ui@@Base+0x2ac>

0000000000032394 <mpfr_min@@Base>:
   32394:	stp	x29, x30, [sp, #-48]!
   32398:	stp	x22, x21, [sp, #16]
   3239c:	stp	x20, x19, [sp, #32]
   323a0:	ldr	x9, [x1, #16]
   323a4:	mov	x8, #0x2                   	// #2
   323a8:	movk	x8, #0x8000, lsl #48
   323ac:	add	x11, x8, #0x2
   323b0:	mov	w19, w3
   323b4:	mov	x20, x2
   323b8:	mov	x22, x1
   323bc:	cmp	x9, x11
   323c0:	mov	x21, x0
   323c4:	mov	x29, sp
   323c8:	b.lt	32400 <mpfr_min@@Base+0x6c>  // b.tstop
   323cc:	ldr	x10, [x20, #16]
   323d0:	cmp	x10, x11
   323d4:	b.lt	3244c <mpfr_min@@Base+0xb8>  // b.tstop
   323d8:	mov	w2, #0x1                   	// #1
   323dc:	mov	x0, x22
   323e0:	mov	x1, x20
   323e4:	bl	c980 <mpfr_cmp3@plt>
   323e8:	cmp	w0, #0x0
   323ec:	b.le	32454 <mpfr_min@@Base+0xc0>
   323f0:	ldr	w3, [x20, #8]
   323f4:	mov	x0, x21
   323f8:	mov	x1, x20
   323fc:	b	32460 <mpfr_min@@Base+0xcc>
   32400:	ldr	x10, [x20, #16]
   32404:	cmp	x9, x8
   32408:	b.ne	3244c <mpfr_min@@Base+0xb8>  // b.any
   3240c:	cmp	x10, x8
   32410:	b.ne	323f0 <mpfr_min@@Base+0x5c>  // b.any
   32414:	str	x8, [x21, #16]
   32418:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3241c:	ldr	x1, [x0, #2640]
   32420:	add	x0, x0, #0xa50
   32424:	blr	x1
   32428:	mrs	x8, tpidr_el0
   3242c:	ldr	w9, [x8, x0]
   32430:	orr	w9, w9, #0x4
   32434:	str	w9, [x8, x0]
   32438:	ldp	x20, x19, [sp, #32]
   3243c:	ldp	x22, x21, [sp, #16]
   32440:	mov	w0, wzr
   32444:	ldp	x29, x30, [sp], #48
   32448:	ret
   3244c:	cmp	x10, x8
   32450:	b.ne	32474 <mpfr_min@@Base+0xe0>  // b.any
   32454:	ldr	w3, [x22, #8]
   32458:	mov	x0, x21
   3245c:	mov	x1, x22
   32460:	mov	w2, w19
   32464:	ldp	x20, x19, [sp, #32]
   32468:	ldp	x22, x21, [sp, #16]
   3246c:	ldp	x29, x30, [sp], #48
   32470:	b	c690 <mpfr_set4@plt>
   32474:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   32478:	cmp	x9, x8
   3247c:	b.ne	323d8 <mpfr_min@@Base+0x44>  // b.any
   32480:	cmp	x10, x8
   32484:	b.ne	323d8 <mpfr_min@@Base+0x44>  // b.any
   32488:	ldr	w3, [x22, #8]
   3248c:	tbz	w3, #31, 323f0 <mpfr_min@@Base+0x5c>
   32490:	b	32458 <mpfr_min@@Base+0xc4>

0000000000032494 <mpfr_max@@Base>:
   32494:	stp	x29, x30, [sp, #-48]!
   32498:	stp	x22, x21, [sp, #16]
   3249c:	stp	x20, x19, [sp, #32]
   324a0:	ldr	x9, [x1, #16]
   324a4:	mov	x8, #0x2                   	// #2
   324a8:	movk	x8, #0x8000, lsl #48
   324ac:	add	x11, x8, #0x2
   324b0:	mov	w19, w3
   324b4:	mov	x20, x2
   324b8:	mov	x22, x1
   324bc:	cmp	x9, x11
   324c0:	mov	x21, x0
   324c4:	mov	x29, sp
   324c8:	b.lt	32500 <mpfr_max@@Base+0x6c>  // b.tstop
   324cc:	ldr	x10, [x20, #16]
   324d0:	cmp	x10, x11
   324d4:	b.lt	3254c <mpfr_max@@Base+0xb8>  // b.tstop
   324d8:	mov	w2, #0x1                   	// #1
   324dc:	mov	x0, x22
   324e0:	mov	x1, x20
   324e4:	bl	c980 <mpfr_cmp3@plt>
   324e8:	cmp	w0, #0x0
   324ec:	b.le	32570 <mpfr_max@@Base+0xdc>
   324f0:	ldr	w3, [x22, #8]
   324f4:	mov	x0, x21
   324f8:	mov	x1, x22
   324fc:	b	3257c <mpfr_max@@Base+0xe8>
   32500:	ldr	x10, [x20, #16]
   32504:	cmp	x9, x8
   32508:	b.ne	3254c <mpfr_max@@Base+0xb8>  // b.any
   3250c:	cmp	x10, x8
   32510:	b.ne	32570 <mpfr_max@@Base+0xdc>  // b.any
   32514:	str	x8, [x21, #16]
   32518:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3251c:	ldr	x1, [x0, #2640]
   32520:	add	x0, x0, #0xa50
   32524:	blr	x1
   32528:	mrs	x8, tpidr_el0
   3252c:	ldr	w9, [x8, x0]
   32530:	orr	w9, w9, #0x4
   32534:	str	w9, [x8, x0]
   32538:	ldp	x20, x19, [sp, #32]
   3253c:	ldp	x22, x21, [sp, #16]
   32540:	mov	w0, wzr
   32544:	ldp	x29, x30, [sp], #48
   32548:	ret
   3254c:	cmp	x10, x8
   32550:	b.eq	324f0 <mpfr_max@@Base+0x5c>  // b.none
   32554:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   32558:	cmp	x9, x8
   3255c:	b.ne	324d8 <mpfr_max@@Base+0x44>  // b.any
   32560:	cmp	x10, x8
   32564:	b.ne	324d8 <mpfr_max@@Base+0x44>  // b.any
   32568:	ldr	w3, [x22, #8]
   3256c:	tbz	w3, #31, 324f4 <mpfr_max@@Base+0x60>
   32570:	ldr	w3, [x20, #8]
   32574:	mov	x0, x21
   32578:	mov	x1, x20
   3257c:	mov	w2, w19
   32580:	ldp	x20, x19, [sp, #32]
   32584:	ldp	x22, x21, [sp, #16]
   32588:	ldp	x29, x30, [sp], #48
   3258c:	b	c690 <mpfr_set4@plt>

0000000000032590 <mpfr_dim@@Base>:
   32590:	stp	x29, x30, [sp, #-64]!
   32594:	stp	x22, x21, [sp, #32]
   32598:	stp	x20, x19, [sp, #48]
   3259c:	ldr	x9, [x1, #16]
   325a0:	mov	x8, #0x2                   	// #2
   325a4:	movk	x8, #0x8000, lsl #48
   325a8:	mov	x22, x0
   325ac:	cmp	x9, x8
   325b0:	str	x23, [sp, #16]
   325b4:	mov	x29, sp
   325b8:	b.eq	325cc <mpfr_dim@@Base+0x3c>  // b.none
   325bc:	ldr	x9, [x2, #16]
   325c0:	mov	x20, x2
   325c4:	cmp	x9, x8
   325c8:	b.ne	32608 <mpfr_dim@@Base+0x78>  // b.any
   325cc:	str	x8, [x22, #16]
   325d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   325d4:	ldr	x1, [x0, #2640]
   325d8:	add	x0, x0, #0xa50
   325dc:	blr	x1
   325e0:	mrs	x8, tpidr_el0
   325e4:	ldr	w9, [x8, x0]
   325e8:	orr	w9, w9, #0x4
   325ec:	str	w9, [x8, x0]
   325f0:	ldp	x20, x19, [sp, #48]
   325f4:	ldp	x22, x21, [sp, #32]
   325f8:	ldr	x23, [sp, #16]
   325fc:	mov	w0, wzr
   32600:	ldp	x29, x30, [sp], #64
   32604:	ret
   32608:	mov	x21, x1
   3260c:	mov	w2, #0x1                   	// #1
   32610:	mov	x0, x1
   32614:	mov	x1, x20
   32618:	mov	w19, w3
   3261c:	mov	w23, #0x1                   	// #1
   32620:	bl	c980 <mpfr_cmp3@plt>
   32624:	cmp	w0, #0x1
   32628:	b.lt	32650 <mpfr_dim@@Base+0xc0>  // b.tstop
   3262c:	mov	x0, x22
   32630:	mov	x1, x21
   32634:	mov	x2, x20
   32638:	mov	w3, w19
   3263c:	ldp	x20, x19, [sp, #48]
   32640:	ldp	x22, x21, [sp, #32]
   32644:	ldr	x23, [sp, #16]
   32648:	ldp	x29, x30, [sp], #64
   3264c:	b	bbc0 <mpfr_sub@plt>
   32650:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   32654:	str	x8, [x22, #16]
   32658:	str	w23, [x22, #8]
   3265c:	b	325f0 <mpfr_dim@@Base+0x60>

0000000000032660 <mpfr_signbit@@Base>:
   32660:	ldr	w8, [x0, #8]
   32664:	lsr	w0, w8, #31
   32668:	ret

000000000003266c <mpfr_copysign@@Base>:
   3266c:	mov	w8, w3
   32670:	ldr	w3, [x2, #8]
   32674:	mov	w2, w8
   32678:	b	c690 <mpfr_set4@plt>

000000000003267c <mpfr_setsign@@Base>:
   3267c:	mov	w8, w3
   32680:	cmp	w2, #0x0
   32684:	mov	w9, #0x1                   	// #1
   32688:	cneg	w3, w9, ne  // ne = any
   3268c:	mov	w2, w8
   32690:	b	c690 <mpfr_set4@plt>

0000000000032694 <mpfr_mul_z@@Base>:
   32694:	sub	sp, sp, #0x70
   32698:	stp	x20, x19, [sp, #96]
   3269c:	mov	x20, x0
   326a0:	mov	x0, x2
   326a4:	stp	x29, x30, [sp, #32]
   326a8:	stp	x26, x25, [sp, #48]
   326ac:	stp	x24, x23, [sp, #64]
   326b0:	stp	x22, x21, [sp, #80]
   326b4:	add	x29, sp, #0x20
   326b8:	mov	w19, w3
   326bc:	mov	x22, x2
   326c0:	mov	x21, x1
   326c4:	bl	bee0 <__gmpz_fits_slong_p@plt>
   326c8:	cbz	w0, 32700 <mpfr_mul_z@@Base+0x6c>
   326cc:	mov	x0, x22
   326d0:	bl	ba80 <__gmpz_get_si@plt>
   326d4:	mov	x2, x0
   326d8:	mov	x0, x20
   326dc:	mov	x1, x21
   326e0:	mov	w3, w19
   326e4:	ldp	x20, x19, [sp, #96]
   326e8:	ldp	x22, x21, [sp, #80]
   326ec:	ldp	x24, x23, [sp, #64]
   326f0:	ldp	x26, x25, [sp, #48]
   326f4:	ldp	x29, x30, [sp, #32]
   326f8:	add	sp, sp, #0x70
   326fc:	b	c950 <mpfr_mul_si@plt>
   32700:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32704:	ldr	x1, [x0, #2640]
   32708:	add	x0, x0, #0xa50
   3270c:	blr	x1
   32710:	mrs	x23, tpidr_el0
   32714:	ldr	w26, [x23, x0]
   32718:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3271c:	ldr	x1, [x0, #2576]
   32720:	add	x0, x0, #0xa10
   32724:	blr	x1
   32728:	ldr	x24, [x23, x0]
   3272c:	mov	x8, x0
   32730:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32734:	ldr	x1, [x0, #2608]
   32738:	add	x0, x0, #0xa30
   3273c:	blr	x1
   32740:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32744:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   32748:	ldr	x25, [x23, x0]
   3274c:	str	x9, [x23, x8]
   32750:	str	x10, [x23, x0]
   32754:	ldr	w8, [x22, #4]
   32758:	cmp	w8, #0x0
   3275c:	cneg	w8, w8, mi  // mi = first
   32760:	cmp	w8, #0x2
   32764:	b.cs	32770 <mpfr_mul_z@@Base+0xdc>  // b.hs, b.nlast
   32768:	mov	w1, #0x40                  	// #64
   3276c:	b	32788 <mpfr_mul_z@@Base+0xf4>
   32770:	ldr	x9, [x22, #8]
   32774:	add	x9, x9, x8, lsl #3
   32778:	ldur	x9, [x9, #-8]
   3277c:	lsl	x8, x8, #6
   32780:	clz	x9, x9
   32784:	sub	x1, x8, x9
   32788:	mov	x0, sp
   3278c:	bl	ca60 <mpfr_init2@plt>
   32790:	mov	x0, sp
   32794:	mov	x1, x22
   32798:	mov	w2, wzr
   3279c:	bl	c250 <mpfr_set_z@plt>
   327a0:	cbnz	w0, 3285c <mpfr_mul_z@@Base+0x1c8>
   327a4:	mov	x2, sp
   327a8:	mov	x0, x20
   327ac:	mov	x1, x21
   327b0:	mov	w3, w19
   327b4:	bl	bda0 <mpfr_mul@plt>
   327b8:	mov	w21, w0
   327bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   327c0:	ldr	x1, [x0, #2640]
   327c4:	add	x0, x0, #0xa50
   327c8:	blr	x1
   327cc:	ldr	w8, [x23, x0]
   327d0:	mov	x22, x0
   327d4:	mov	x0, sp
   327d8:	orr	w26, w8, w26
   327dc:	bl	c0b0 <mpfr_clear@plt>
   327e0:	str	w26, [x23, x22]
   327e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   327e8:	ldr	x1, [x0, #2576]
   327ec:	add	x0, x0, #0xa10
   327f0:	blr	x1
   327f4:	str	x24, [x23, x0]
   327f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   327fc:	ldr	x1, [x0, #2608]
   32800:	add	x0, x0, #0xa30
   32804:	blr	x1
   32808:	str	x25, [x23, x0]
   3280c:	ldr	x8, [x20, #16]
   32810:	cmp	x8, x25
   32814:	b.gt	32878 <mpfr_mul_z@@Base+0x1e4>
   32818:	cmp	x8, x24
   3281c:	b.lt	32878 <mpfr_mul_z@@Base+0x1e4>  // b.tstop
   32820:	cbz	w21, 3283c <mpfr_mul_z@@Base+0x1a8>
   32824:	orr	w8, w26, #0x8
   32828:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3282c:	ldr	x1, [x0, #2640]
   32830:	add	x0, x0, #0xa50
   32834:	blr	x1
   32838:	str	w8, [x23, x0]
   3283c:	mov	w0, w21
   32840:	ldp	x20, x19, [sp, #96]
   32844:	ldp	x22, x21, [sp, #80]
   32848:	ldp	x24, x23, [sp, #64]
   3284c:	ldp	x26, x25, [sp, #48]
   32850:	ldp	x29, x30, [sp, #32]
   32854:	add	sp, sp, #0x70
   32858:	ret
   3285c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32860:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32864:	add	x0, x0, #0x396
   32868:	add	x2, x2, #0x3f8
   3286c:	mov	w1, #0x31                  	// #49
   32870:	bl	cb20 <mpfr_assert_fail@plt>
   32874:	b	327a4 <mpfr_mul_z@@Base+0x110>
   32878:	mov	x0, x20
   3287c:	mov	w1, w21
   32880:	mov	w2, w19
   32884:	bl	cb10 <mpfr_check_range@plt>
   32888:	mov	w21, w0
   3288c:	b	3283c <mpfr_mul_z@@Base+0x1a8>

0000000000032890 <mpfr_div_z@@Base>:
   32890:	sub	sp, sp, #0x70
   32894:	stp	x20, x19, [sp, #96]
   32898:	mov	x20, x0
   3289c:	mov	x0, x2
   328a0:	stp	x29, x30, [sp, #32]
   328a4:	stp	x26, x25, [sp, #48]
   328a8:	stp	x24, x23, [sp, #64]
   328ac:	stp	x22, x21, [sp, #80]
   328b0:	add	x29, sp, #0x20
   328b4:	mov	w19, w3
   328b8:	mov	x22, x2
   328bc:	mov	x21, x1
   328c0:	bl	bee0 <__gmpz_fits_slong_p@plt>
   328c4:	cbz	w0, 328fc <mpfr_div_z@@Base+0x6c>
   328c8:	mov	x0, x22
   328cc:	bl	ba80 <__gmpz_get_si@plt>
   328d0:	mov	x2, x0
   328d4:	mov	x0, x20
   328d8:	mov	x1, x21
   328dc:	mov	w3, w19
   328e0:	ldp	x20, x19, [sp, #96]
   328e4:	ldp	x22, x21, [sp, #80]
   328e8:	ldp	x24, x23, [sp, #64]
   328ec:	ldp	x26, x25, [sp, #48]
   328f0:	ldp	x29, x30, [sp, #32]
   328f4:	add	sp, sp, #0x70
   328f8:	b	c810 <mpfr_div_si@plt>
   328fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32900:	ldr	x1, [x0, #2640]
   32904:	add	x0, x0, #0xa50
   32908:	blr	x1
   3290c:	mrs	x23, tpidr_el0
   32910:	ldr	w26, [x23, x0]
   32914:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32918:	ldr	x1, [x0, #2576]
   3291c:	add	x0, x0, #0xa10
   32920:	blr	x1
   32924:	ldr	x24, [x23, x0]
   32928:	mov	x8, x0
   3292c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32930:	ldr	x1, [x0, #2608]
   32934:	add	x0, x0, #0xa30
   32938:	blr	x1
   3293c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32940:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   32944:	ldr	x25, [x23, x0]
   32948:	str	x9, [x23, x8]
   3294c:	str	x10, [x23, x0]
   32950:	ldr	w8, [x22, #4]
   32954:	cmp	w8, #0x0
   32958:	cneg	w8, w8, mi  // mi = first
   3295c:	cmp	w8, #0x2
   32960:	b.cs	3296c <mpfr_div_z@@Base+0xdc>  // b.hs, b.nlast
   32964:	mov	w1, #0x40                  	// #64
   32968:	b	32984 <mpfr_div_z@@Base+0xf4>
   3296c:	ldr	x9, [x22, #8]
   32970:	add	x9, x9, x8, lsl #3
   32974:	ldur	x9, [x9, #-8]
   32978:	lsl	x8, x8, #6
   3297c:	clz	x9, x9
   32980:	sub	x1, x8, x9
   32984:	mov	x0, sp
   32988:	bl	ca60 <mpfr_init2@plt>
   3298c:	mov	x0, sp
   32990:	mov	x1, x22
   32994:	mov	w2, wzr
   32998:	bl	c250 <mpfr_set_z@plt>
   3299c:	cbnz	w0, 32a58 <mpfr_div_z@@Base+0x1c8>
   329a0:	mov	x2, sp
   329a4:	mov	x0, x20
   329a8:	mov	x1, x21
   329ac:	mov	w3, w19
   329b0:	bl	c610 <mpfr_div@plt>
   329b4:	mov	w21, w0
   329b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   329bc:	ldr	x1, [x0, #2640]
   329c0:	add	x0, x0, #0xa50
   329c4:	blr	x1
   329c8:	ldr	w8, [x23, x0]
   329cc:	mov	x22, x0
   329d0:	mov	x0, sp
   329d4:	orr	w26, w8, w26
   329d8:	bl	c0b0 <mpfr_clear@plt>
   329dc:	str	w26, [x23, x22]
   329e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   329e4:	ldr	x1, [x0, #2576]
   329e8:	add	x0, x0, #0xa10
   329ec:	blr	x1
   329f0:	str	x24, [x23, x0]
   329f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   329f8:	ldr	x1, [x0, #2608]
   329fc:	add	x0, x0, #0xa30
   32a00:	blr	x1
   32a04:	str	x25, [x23, x0]
   32a08:	ldr	x8, [x20, #16]
   32a0c:	cmp	x8, x25
   32a10:	b.gt	32a74 <mpfr_div_z@@Base+0x1e4>
   32a14:	cmp	x8, x24
   32a18:	b.lt	32a74 <mpfr_div_z@@Base+0x1e4>  // b.tstop
   32a1c:	cbz	w21, 32a38 <mpfr_div_z@@Base+0x1a8>
   32a20:	orr	w8, w26, #0x8
   32a24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32a28:	ldr	x1, [x0, #2640]
   32a2c:	add	x0, x0, #0xa50
   32a30:	blr	x1
   32a34:	str	w8, [x23, x0]
   32a38:	mov	w0, w21
   32a3c:	ldp	x20, x19, [sp, #96]
   32a40:	ldp	x22, x21, [sp, #80]
   32a44:	ldp	x24, x23, [sp, #64]
   32a48:	ldp	x26, x25, [sp, #48]
   32a4c:	ldp	x29, x30, [sp, #32]
   32a50:	add	sp, sp, #0x70
   32a54:	ret
   32a58:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32a5c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32a60:	add	x0, x0, #0x396
   32a64:	add	x2, x2, #0x3f8
   32a68:	mov	w1, #0x31                  	// #49
   32a6c:	bl	cb20 <mpfr_assert_fail@plt>
   32a70:	b	329a0 <mpfr_div_z@@Base+0x110>
   32a74:	mov	x0, x20
   32a78:	mov	w1, w21
   32a7c:	mov	w2, w19
   32a80:	bl	cb10 <mpfr_check_range@plt>
   32a84:	mov	w21, w0
   32a88:	b	32a38 <mpfr_div_z@@Base+0x1a8>

0000000000032a8c <mpfr_add_z@@Base>:
   32a8c:	sub	sp, sp, #0x70
   32a90:	stp	x20, x19, [sp, #96]
   32a94:	mov	x20, x0
   32a98:	mov	x0, x2
   32a9c:	stp	x29, x30, [sp, #32]
   32aa0:	stp	x26, x25, [sp, #48]
   32aa4:	stp	x24, x23, [sp, #64]
   32aa8:	stp	x22, x21, [sp, #80]
   32aac:	add	x29, sp, #0x20
   32ab0:	mov	w19, w3
   32ab4:	mov	x22, x2
   32ab8:	mov	x21, x1
   32abc:	bl	bee0 <__gmpz_fits_slong_p@plt>
   32ac0:	cbz	w0, 32af8 <mpfr_add_z@@Base+0x6c>
   32ac4:	mov	x0, x22
   32ac8:	bl	ba80 <__gmpz_get_si@plt>
   32acc:	mov	x2, x0
   32ad0:	mov	x0, x20
   32ad4:	mov	x1, x21
   32ad8:	mov	w3, w19
   32adc:	ldp	x20, x19, [sp, #96]
   32ae0:	ldp	x22, x21, [sp, #80]
   32ae4:	ldp	x24, x23, [sp, #64]
   32ae8:	ldp	x26, x25, [sp, #48]
   32aec:	ldp	x29, x30, [sp, #32]
   32af0:	add	sp, sp, #0x70
   32af4:	b	c7e0 <mpfr_add_si@plt>
   32af8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32afc:	ldr	x1, [x0, #2640]
   32b00:	add	x0, x0, #0xa50
   32b04:	blr	x1
   32b08:	mrs	x23, tpidr_el0
   32b0c:	ldr	w26, [x23, x0]
   32b10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32b14:	ldr	x1, [x0, #2576]
   32b18:	add	x0, x0, #0xa10
   32b1c:	blr	x1
   32b20:	ldr	x24, [x23, x0]
   32b24:	mov	x8, x0
   32b28:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32b2c:	ldr	x1, [x0, #2608]
   32b30:	add	x0, x0, #0xa30
   32b34:	blr	x1
   32b38:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32b3c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   32b40:	ldr	x25, [x23, x0]
   32b44:	str	x9, [x23, x8]
   32b48:	str	x10, [x23, x0]
   32b4c:	ldr	w8, [x22, #4]
   32b50:	cmp	w8, #0x0
   32b54:	cneg	w8, w8, mi  // mi = first
   32b58:	cmp	w8, #0x2
   32b5c:	b.cs	32b68 <mpfr_add_z@@Base+0xdc>  // b.hs, b.nlast
   32b60:	mov	w1, #0x40                  	// #64
   32b64:	b	32b80 <mpfr_add_z@@Base+0xf4>
   32b68:	ldr	x9, [x22, #8]
   32b6c:	add	x9, x9, x8, lsl #3
   32b70:	ldur	x9, [x9, #-8]
   32b74:	lsl	x8, x8, #6
   32b78:	clz	x9, x9
   32b7c:	sub	x1, x8, x9
   32b80:	mov	x0, sp
   32b84:	bl	ca60 <mpfr_init2@plt>
   32b88:	mov	x0, sp
   32b8c:	mov	x1, x22
   32b90:	mov	w2, wzr
   32b94:	bl	c250 <mpfr_set_z@plt>
   32b98:	cbnz	w0, 32c54 <mpfr_add_z@@Base+0x1c8>
   32b9c:	mov	x2, sp
   32ba0:	mov	x0, x20
   32ba4:	mov	x1, x21
   32ba8:	mov	w3, w19
   32bac:	bl	c1e0 <mpfr_add@plt>
   32bb0:	mov	w21, w0
   32bb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32bb8:	ldr	x1, [x0, #2640]
   32bbc:	add	x0, x0, #0xa50
   32bc0:	blr	x1
   32bc4:	ldr	w8, [x23, x0]
   32bc8:	mov	x22, x0
   32bcc:	mov	x0, sp
   32bd0:	orr	w26, w8, w26
   32bd4:	bl	c0b0 <mpfr_clear@plt>
   32bd8:	str	w26, [x23, x22]
   32bdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32be0:	ldr	x1, [x0, #2576]
   32be4:	add	x0, x0, #0xa10
   32be8:	blr	x1
   32bec:	str	x24, [x23, x0]
   32bf0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32bf4:	ldr	x1, [x0, #2608]
   32bf8:	add	x0, x0, #0xa30
   32bfc:	blr	x1
   32c00:	str	x25, [x23, x0]
   32c04:	ldr	x8, [x20, #16]
   32c08:	cmp	x8, x25
   32c0c:	b.gt	32c70 <mpfr_add_z@@Base+0x1e4>
   32c10:	cmp	x8, x24
   32c14:	b.lt	32c70 <mpfr_add_z@@Base+0x1e4>  // b.tstop
   32c18:	cbz	w21, 32c34 <mpfr_add_z@@Base+0x1a8>
   32c1c:	orr	w8, w26, #0x8
   32c20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32c24:	ldr	x1, [x0, #2640]
   32c28:	add	x0, x0, #0xa50
   32c2c:	blr	x1
   32c30:	str	w8, [x23, x0]
   32c34:	mov	w0, w21
   32c38:	ldp	x20, x19, [sp, #96]
   32c3c:	ldp	x22, x21, [sp, #80]
   32c40:	ldp	x24, x23, [sp, #64]
   32c44:	ldp	x26, x25, [sp, #48]
   32c48:	ldp	x29, x30, [sp, #32]
   32c4c:	add	sp, sp, #0x70
   32c50:	ret
   32c54:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32c58:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32c5c:	add	x0, x0, #0x396
   32c60:	add	x2, x2, #0x3f8
   32c64:	mov	w1, #0x31                  	// #49
   32c68:	bl	cb20 <mpfr_assert_fail@plt>
   32c6c:	b	32b9c <mpfr_add_z@@Base+0x110>
   32c70:	mov	x0, x20
   32c74:	mov	w1, w21
   32c78:	mov	w2, w19
   32c7c:	bl	cb10 <mpfr_check_range@plt>
   32c80:	mov	w21, w0
   32c84:	b	32c34 <mpfr_add_z@@Base+0x1a8>

0000000000032c88 <mpfr_sub_z@@Base>:
   32c88:	sub	sp, sp, #0x70
   32c8c:	stp	x20, x19, [sp, #96]
   32c90:	mov	x20, x0
   32c94:	mov	x0, x2
   32c98:	stp	x29, x30, [sp, #32]
   32c9c:	stp	x26, x25, [sp, #48]
   32ca0:	stp	x24, x23, [sp, #64]
   32ca4:	stp	x22, x21, [sp, #80]
   32ca8:	add	x29, sp, #0x20
   32cac:	mov	w19, w3
   32cb0:	mov	x22, x2
   32cb4:	mov	x21, x1
   32cb8:	bl	bee0 <__gmpz_fits_slong_p@plt>
   32cbc:	cbz	w0, 32cf4 <mpfr_sub_z@@Base+0x6c>
   32cc0:	mov	x0, x22
   32cc4:	bl	ba80 <__gmpz_get_si@plt>
   32cc8:	mov	x2, x0
   32ccc:	mov	x0, x20
   32cd0:	mov	x1, x21
   32cd4:	mov	w3, w19
   32cd8:	ldp	x20, x19, [sp, #96]
   32cdc:	ldp	x22, x21, [sp, #80]
   32ce0:	ldp	x24, x23, [sp, #64]
   32ce4:	ldp	x26, x25, [sp, #48]
   32ce8:	ldp	x29, x30, [sp, #32]
   32cec:	add	sp, sp, #0x70
   32cf0:	b	c0a0 <mpfr_sub_si@plt>
   32cf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32cf8:	ldr	x1, [x0, #2640]
   32cfc:	add	x0, x0, #0xa50
   32d00:	blr	x1
   32d04:	mrs	x23, tpidr_el0
   32d08:	ldr	w26, [x23, x0]
   32d0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32d10:	ldr	x1, [x0, #2576]
   32d14:	add	x0, x0, #0xa10
   32d18:	blr	x1
   32d1c:	ldr	x24, [x23, x0]
   32d20:	mov	x8, x0
   32d24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32d28:	ldr	x1, [x0, #2608]
   32d2c:	add	x0, x0, #0xa30
   32d30:	blr	x1
   32d34:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32d38:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   32d3c:	ldr	x25, [x23, x0]
   32d40:	str	x9, [x23, x8]
   32d44:	str	x10, [x23, x0]
   32d48:	ldr	w8, [x22, #4]
   32d4c:	cmp	w8, #0x0
   32d50:	cneg	w8, w8, mi  // mi = first
   32d54:	cmp	w8, #0x2
   32d58:	b.cs	32d64 <mpfr_sub_z@@Base+0xdc>  // b.hs, b.nlast
   32d5c:	mov	w1, #0x40                  	// #64
   32d60:	b	32d7c <mpfr_sub_z@@Base+0xf4>
   32d64:	ldr	x9, [x22, #8]
   32d68:	add	x9, x9, x8, lsl #3
   32d6c:	ldur	x9, [x9, #-8]
   32d70:	lsl	x8, x8, #6
   32d74:	clz	x9, x9
   32d78:	sub	x1, x8, x9
   32d7c:	mov	x0, sp
   32d80:	bl	ca60 <mpfr_init2@plt>
   32d84:	mov	x0, sp
   32d88:	mov	x1, x22
   32d8c:	mov	w2, wzr
   32d90:	bl	c250 <mpfr_set_z@plt>
   32d94:	cbnz	w0, 32e50 <mpfr_sub_z@@Base+0x1c8>
   32d98:	mov	x2, sp
   32d9c:	mov	x0, x20
   32da0:	mov	x1, x21
   32da4:	mov	w3, w19
   32da8:	bl	bbc0 <mpfr_sub@plt>
   32dac:	mov	w21, w0
   32db0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32db4:	ldr	x1, [x0, #2640]
   32db8:	add	x0, x0, #0xa50
   32dbc:	blr	x1
   32dc0:	ldr	w8, [x23, x0]
   32dc4:	mov	x22, x0
   32dc8:	mov	x0, sp
   32dcc:	orr	w26, w8, w26
   32dd0:	bl	c0b0 <mpfr_clear@plt>
   32dd4:	str	w26, [x23, x22]
   32dd8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32ddc:	ldr	x1, [x0, #2576]
   32de0:	add	x0, x0, #0xa10
   32de4:	blr	x1
   32de8:	str	x24, [x23, x0]
   32dec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32df0:	ldr	x1, [x0, #2608]
   32df4:	add	x0, x0, #0xa30
   32df8:	blr	x1
   32dfc:	str	x25, [x23, x0]
   32e00:	ldr	x8, [x20, #16]
   32e04:	cmp	x8, x25
   32e08:	b.gt	32e6c <mpfr_sub_z@@Base+0x1e4>
   32e0c:	cmp	x8, x24
   32e10:	b.lt	32e6c <mpfr_sub_z@@Base+0x1e4>  // b.tstop
   32e14:	cbz	w21, 32e30 <mpfr_sub_z@@Base+0x1a8>
   32e18:	orr	w8, w26, #0x8
   32e1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32e20:	ldr	x1, [x0, #2640]
   32e24:	add	x0, x0, #0xa50
   32e28:	blr	x1
   32e2c:	str	w8, [x23, x0]
   32e30:	mov	w0, w21
   32e34:	ldp	x20, x19, [sp, #96]
   32e38:	ldp	x22, x21, [sp, #80]
   32e3c:	ldp	x24, x23, [sp, #64]
   32e40:	ldp	x26, x25, [sp, #48]
   32e44:	ldp	x29, x30, [sp, #32]
   32e48:	add	sp, sp, #0x70
   32e4c:	ret
   32e50:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32e54:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   32e58:	add	x0, x0, #0x396
   32e5c:	add	x2, x2, #0x3f8
   32e60:	mov	w1, #0x31                  	// #49
   32e64:	bl	cb20 <mpfr_assert_fail@plt>
   32e68:	b	32d98 <mpfr_sub_z@@Base+0x110>
   32e6c:	mov	x0, x20
   32e70:	mov	w1, w21
   32e74:	mov	w2, w19
   32e78:	bl	cb10 <mpfr_check_range@plt>
   32e7c:	mov	w21, w0
   32e80:	b	32e30 <mpfr_sub_z@@Base+0x1a8>

0000000000032e84 <mpfr_z_sub@@Base>:
   32e84:	sub	sp, sp, #0x70
   32e88:	stp	x20, x19, [sp, #96]
   32e8c:	mov	x20, x0
   32e90:	mov	x0, x1
   32e94:	stp	x29, x30, [sp, #32]
   32e98:	stp	x26, x25, [sp, #48]
   32e9c:	stp	x24, x23, [sp, #64]
   32ea0:	stp	x22, x21, [sp, #80]
   32ea4:	add	x29, sp, #0x20
   32ea8:	mov	w19, w3
   32eac:	mov	x21, x2
   32eb0:	mov	x22, x1
   32eb4:	bl	bee0 <__gmpz_fits_slong_p@plt>
   32eb8:	cbz	w0, 32ef0 <mpfr_z_sub@@Base+0x6c>
   32ebc:	mov	x0, x22
   32ec0:	bl	ba80 <__gmpz_get_si@plt>
   32ec4:	mov	x1, x0
   32ec8:	mov	x0, x20
   32ecc:	mov	x2, x21
   32ed0:	mov	w3, w19
   32ed4:	ldp	x20, x19, [sp, #96]
   32ed8:	ldp	x22, x21, [sp, #80]
   32edc:	ldp	x24, x23, [sp, #64]
   32ee0:	ldp	x26, x25, [sp, #48]
   32ee4:	ldp	x29, x30, [sp, #32]
   32ee8:	add	sp, sp, #0x70
   32eec:	b	c5c0 <mpfr_si_sub@plt>
   32ef0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32ef4:	ldr	x1, [x0, #2640]
   32ef8:	add	x0, x0, #0xa50
   32efc:	blr	x1
   32f00:	mrs	x23, tpidr_el0
   32f04:	ldr	w26, [x23, x0]
   32f08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32f0c:	ldr	x1, [x0, #2576]
   32f10:	add	x0, x0, #0xa10
   32f14:	blr	x1
   32f18:	ldr	x24, [x23, x0]
   32f1c:	mov	x8, x0
   32f20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32f24:	ldr	x1, [x0, #2608]
   32f28:	add	x0, x0, #0xa30
   32f2c:	blr	x1
   32f30:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   32f34:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   32f38:	ldr	x25, [x23, x0]
   32f3c:	str	x9, [x23, x8]
   32f40:	str	x10, [x23, x0]
   32f44:	ldr	w8, [x22, #4]
   32f48:	cmp	w8, #0x0
   32f4c:	cneg	w8, w8, mi  // mi = first
   32f50:	cmp	w8, #0x2
   32f54:	b.cs	32f60 <mpfr_z_sub@@Base+0xdc>  // b.hs, b.nlast
   32f58:	mov	w1, #0x40                  	// #64
   32f5c:	b	32f78 <mpfr_z_sub@@Base+0xf4>
   32f60:	ldr	x9, [x22, #8]
   32f64:	add	x9, x9, x8, lsl #3
   32f68:	ldur	x9, [x9, #-8]
   32f6c:	lsl	x8, x8, #6
   32f70:	clz	x9, x9
   32f74:	sub	x1, x8, x9
   32f78:	mov	x0, sp
   32f7c:	bl	ca60 <mpfr_init2@plt>
   32f80:	mov	x0, sp
   32f84:	mov	x1, x22
   32f88:	mov	w2, wzr
   32f8c:	bl	c250 <mpfr_set_z@plt>
   32f90:	cbnz	w0, 3304c <mpfr_z_sub@@Base+0x1c8>
   32f94:	mov	x1, sp
   32f98:	mov	x0, x20
   32f9c:	mov	x2, x21
   32fa0:	mov	w3, w19
   32fa4:	bl	bbc0 <mpfr_sub@plt>
   32fa8:	mov	w21, w0
   32fac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32fb0:	ldr	x1, [x0, #2640]
   32fb4:	add	x0, x0, #0xa50
   32fb8:	blr	x1
   32fbc:	ldr	w8, [x23, x0]
   32fc0:	mov	x22, x0
   32fc4:	mov	x0, sp
   32fc8:	orr	w26, w8, w26
   32fcc:	bl	c0b0 <mpfr_clear@plt>
   32fd0:	str	w26, [x23, x22]
   32fd4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32fd8:	ldr	x1, [x0, #2576]
   32fdc:	add	x0, x0, #0xa10
   32fe0:	blr	x1
   32fe4:	str	x24, [x23, x0]
   32fe8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   32fec:	ldr	x1, [x0, #2608]
   32ff0:	add	x0, x0, #0xa30
   32ff4:	blr	x1
   32ff8:	str	x25, [x23, x0]
   32ffc:	ldr	x8, [x20, #16]
   33000:	cmp	x8, x25
   33004:	b.gt	33068 <mpfr_z_sub@@Base+0x1e4>
   33008:	cmp	x8, x24
   3300c:	b.lt	33068 <mpfr_z_sub@@Base+0x1e4>  // b.tstop
   33010:	cbz	w21, 3302c <mpfr_z_sub@@Base+0x1a8>
   33014:	orr	w8, w26, #0x8
   33018:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3301c:	ldr	x1, [x0, #2640]
   33020:	add	x0, x0, #0xa50
   33024:	blr	x1
   33028:	str	w8, [x23, x0]
   3302c:	mov	w0, w21
   33030:	ldp	x20, x19, [sp, #96]
   33034:	ldp	x22, x21, [sp, #80]
   33038:	ldp	x24, x23, [sp, #64]
   3303c:	ldp	x26, x25, [sp, #48]
   33040:	ldp	x29, x30, [sp, #32]
   33044:	add	sp, sp, #0x70
   33048:	ret
   3304c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33050:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33054:	add	x0, x0, #0x396
   33058:	add	x2, x2, #0x3f8
   3305c:	mov	w1, #0x31                  	// #49
   33060:	bl	cb20 <mpfr_assert_fail@plt>
   33064:	b	32f94 <mpfr_z_sub@@Base+0x110>
   33068:	mov	x0, x20
   3306c:	mov	w1, w21
   33070:	mov	w2, w19
   33074:	bl	cb10 <mpfr_check_range@plt>
   33078:	mov	w21, w0
   3307c:	b	3302c <mpfr_z_sub@@Base+0x1a8>

0000000000033080 <mpfr_cmp_z@@Base>:
   33080:	sub	sp, sp, #0x50
   33084:	stp	x29, x30, [sp, #32]
   33088:	stp	x22, x21, [sp, #48]
   3308c:	stp	x20, x19, [sp, #64]
   33090:	ldr	x8, [x0, #16]
   33094:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   33098:	mov	x19, x0
   3309c:	mov	x20, x1
   330a0:	cmp	x8, x9
   330a4:	add	x29, sp, #0x20
   330a8:	b.le	3319c <mpfr_cmp_z@@Base+0x11c>
   330ac:	mov	x0, x20
   330b0:	bl	bee0 <__gmpz_fits_slong_p@plt>
   330b4:	cbz	w0, 330d8 <mpfr_cmp_z@@Base+0x58>
   330b8:	mov	x0, x20
   330bc:	bl	ba80 <__gmpz_get_si@plt>
   330c0:	mov	x1, x0
   330c4:	mov	x0, x19
   330c8:	mov	x2, xzr
   330cc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   330d0:	mov	w19, w0
   330d4:	b	33184 <mpfr_cmp_z@@Base+0x104>
   330d8:	ldr	w8, [x20, #4]
   330dc:	cmp	w8, #0x0
   330e0:	cneg	w8, w8, mi  // mi = first
   330e4:	cmp	w8, #0x2
   330e8:	b.cs	330f4 <mpfr_cmp_z@@Base+0x74>  // b.hs, b.nlast
   330ec:	mov	w1, #0x40                  	// #64
   330f0:	b	3310c <mpfr_cmp_z@@Base+0x8c>
   330f4:	ldr	x9, [x20, #8]
   330f8:	add	x9, x9, x8, lsl #3
   330fc:	ldur	x9, [x9, #-8]
   33100:	lsl	x8, x8, #6
   33104:	clz	x9, x9
   33108:	sub	x1, x8, x9
   3310c:	mov	x0, sp
   33110:	bl	ca60 <mpfr_init2@plt>
   33114:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33118:	ldr	x1, [x0, #2640]
   3311c:	add	x0, x0, #0xa50
   33120:	blr	x1
   33124:	mrs	x21, tpidr_el0
   33128:	ldr	w22, [x21, x0]
   3312c:	mov	x0, sp
   33130:	mov	x1, x20
   33134:	mov	w2, wzr
   33138:	bl	c250 <mpfr_set_z@plt>
   3313c:	cbz	w0, 33168 <mpfr_cmp_z@@Base+0xe8>
   33140:	mov	x0, sp
   33144:	mov	x1, sp
   33148:	mov	w2, #0x2                   	// #2
   3314c:	mov	w3, #0x1                   	// #1
   33150:	bl	c8f0 <mpfr_div_2ui@plt>
   33154:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33158:	ldr	x1, [x0, #2640]
   3315c:	add	x0, x0, #0xa50
   33160:	blr	x1
   33164:	str	w22, [x21, x0]
   33168:	mov	x1, sp
   3316c:	mov	w2, #0x1                   	// #1
   33170:	mov	x0, x19
   33174:	bl	c980 <mpfr_cmp3@plt>
   33178:	mov	w19, w0
   3317c:	mov	x0, sp
   33180:	bl	c0b0 <mpfr_clear@plt>
   33184:	mov	w0, w19
   33188:	ldp	x20, x19, [sp, #64]
   3318c:	ldp	x22, x21, [sp, #48]
   33190:	ldp	x29, x30, [sp, #32]
   33194:	add	sp, sp, #0x50
   33198:	ret
   3319c:	ldr	w8, [x20, #4]
   331a0:	cmp	w8, #0x0
   331a4:	cset	w8, ne  // ne = any
   331a8:	csinv	x1, x8, xzr, ge  // ge = tcont
   331ac:	b	330c4 <mpfr_cmp_z@@Base+0x44>

00000000000331b0 <mpfr_mul_q@@Base>:
   331b0:	mov	w4, w3
   331b4:	add	x3, x2, #0x10
   331b8:	b	331bc <mpfr_mul_q@@Base+0xc>
   331bc:	sub	sp, sp, #0xa0
   331c0:	stp	x29, x30, [sp, #64]
   331c4:	stp	x28, x27, [sp, #80]
   331c8:	stp	x26, x25, [sp, #96]
   331cc:	stp	x24, x23, [sp, #112]
   331d0:	stp	x22, x21, [sp, #128]
   331d4:	stp	x20, x19, [sp, #144]
   331d8:	ldr	w9, [x2, #4]
   331dc:	ldr	w8, [x3, #4]
   331e0:	mov	x21, x3
   331e4:	mov	x23, x1
   331e8:	mov	x19, x0
   331ec:	add	x29, sp, #0x40
   331f0:	cbz	w9, 3334c <mpfr_mul_q@@Base+0x19c>
   331f4:	mov	x22, x2
   331f8:	cbz	w8, 3336c <mpfr_mul_q@@Base+0x1bc>
   331fc:	mov	w20, w4
   33200:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33204:	ldr	x1, [x0, #2640]
   33208:	add	x0, x0, #0xa50
   3320c:	blr	x1
   33210:	mrs	x24, tpidr_el0
   33214:	ldr	w25, [x24, x0]
   33218:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3321c:	ldr	x1, [x0, #2576]
   33220:	add	x0, x0, #0xa10
   33224:	blr	x1
   33228:	ldr	x26, [x24, x0]
   3322c:	mov	x8, x0
   33230:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33234:	ldr	x1, [x0, #2608]
   33238:	add	x0, x0, #0xa30
   3323c:	blr	x1
   33240:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   33244:	str	x10, [x24, x8]
   33248:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3324c:	ldr	x27, [x24, x0]
   33250:	str	x8, [x24, x0]
   33254:	ldr	x8, [x22, #8]
   33258:	cmp	w9, #0x0
   3325c:	cneg	w9, w9, mi  // mi = first
   33260:	ldr	x10, [x23]
   33264:	add	x8, x8, w9, uxtw #3
   33268:	ldur	x8, [x8, #-8]
   3326c:	lsl	x9, x9, #6
   33270:	add	x0, sp, #0x20
   33274:	clz	x8, x8
   33278:	sub	x8, x9, x8
   3327c:	add	x1, x8, x10
   33280:	bl	ca60 <mpfr_init2@plt>
   33284:	add	x0, sp, #0x20
   33288:	mov	x1, x23
   3328c:	mov	x2, x22
   33290:	mov	w3, wzr
   33294:	bl	c4c0 <mpfr_mul_z@plt>
   33298:	cbnz	w0, 333a0 <mpfr_mul_q@@Base+0x1f0>
   3329c:	add	x1, sp, #0x20
   332a0:	mov	x0, x19
   332a4:	mov	x2, x21
   332a8:	mov	w3, w20
   332ac:	bl	cc60 <mpfr_div_z@plt>
   332b0:	mov	w21, w0
   332b4:	add	x0, sp, #0x20
   332b8:	bl	c0b0 <mpfr_clear@plt>
   332bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   332c0:	ldr	x1, [x0, #2640]
   332c4:	add	x0, x0, #0xa50
   332c8:	blr	x1
   332cc:	str	w25, [x24, x0]
   332d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   332d4:	ldr	x1, [x0, #2576]
   332d8:	add	x0, x0, #0xa10
   332dc:	blr	x1
   332e0:	str	x26, [x24, x0]
   332e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   332e8:	ldr	x1, [x0, #2608]
   332ec:	add	x0, x0, #0xa30
   332f0:	blr	x1
   332f4:	str	x27, [x24, x0]
   332f8:	ldr	x8, [x19, #16]
   332fc:	cmp	x8, x27
   33300:	b.gt	33460 <mpfr_mul_q@@Base+0x2b0>
   33304:	cmp	x8, x26
   33308:	b.lt	33460 <mpfr_mul_q@@Base+0x2b0>  // b.tstop
   3330c:	cbz	w21, 33328 <mpfr_mul_q@@Base+0x178>
   33310:	orr	w8, w25, #0x8
   33314:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33318:	ldr	x1, [x0, #2640]
   3331c:	add	x0, x0, #0xa50
   33320:	blr	x1
   33324:	str	w8, [x24, x0]
   33328:	mov	w0, w21
   3332c:	ldp	x20, x19, [sp, #144]
   33330:	ldp	x22, x21, [sp, #128]
   33334:	ldp	x24, x23, [sp, #112]
   33338:	ldp	x26, x25, [sp, #96]
   3333c:	ldp	x28, x27, [sp, #80]
   33340:	ldp	x29, x30, [sp, #64]
   33344:	add	sp, sp, #0xa0
   33348:	ret
   3334c:	cbz	w8, 33478 <mpfr_mul_q@@Base+0x2c8>
   33350:	mov	x0, x19
   33354:	mov	x1, x23
   33358:	mov	x2, xzr
   3335c:	mov	w3, wzr
   33360:	bl	bab0 <mpfr_mul_ui@plt>
   33364:	ldr	w8, [x21, #4]
   33368:	b	33384 <mpfr_mul_q@@Base+0x1d4>
   3336c:	mov	x0, x19
   33370:	mov	x1, x23
   33374:	mov	x2, xzr
   33378:	mov	w3, wzr
   3337c:	bl	cc40 <mpfr_div_ui@plt>
   33380:	ldr	w8, [x22, #4]
   33384:	mov	w21, wzr
   33388:	tbz	w8, #31, 33328 <mpfr_mul_q@@Base+0x178>
   3338c:	ldr	w8, [x19, #8]
   33390:	mov	w21, wzr
   33394:	neg	w8, w8
   33398:	str	w8, [x19, #8]
   3339c:	b	33328 <mpfr_mul_q@@Base+0x178>
   333a0:	ldr	x8, [x23]
   333a4:	str	x8, [sp]
   333a8:	ldr	w8, [x23, #8]
   333ac:	str	xzr, [sp, #16]
   333b0:	str	w8, [sp, #8]
   333b4:	ldp	x28, x8, [x23, #16]
   333b8:	str	x8, [sp, #24]
   333bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   333c0:	ldr	x1, [x0, #2640]
   333c4:	add	x0, x0, #0xa50
   333c8:	blr	x1
   333cc:	mov	x23, x0
   333d0:	str	wzr, [x24, x0]
   333d4:	add	x0, sp, #0x20
   333d8:	mov	x1, sp
   333dc:	mov	x2, x22
   333e0:	mov	w3, wzr
   333e4:	bl	c4c0 <mpfr_mul_z@plt>
   333e8:	add	x1, sp, #0x20
   333ec:	mov	x0, x19
   333f0:	mov	x2, x21
   333f4:	mov	w3, w20
   333f8:	bl	cc60 <mpfr_div_z@plt>
   333fc:	ldrb	w8, [x24, x23]
   33400:	mov	w9, #0x27                  	// #39
   33404:	mov	w21, w0
   33408:	tst	w8, w9
   3340c:	b.ne	3348c <mpfr_mul_q@@Base+0x2dc>  // b.any
   33410:	ldr	x8, [x19, #16]
   33414:	add	x8, x8, x28
   33418:	str	x8, [x19, #16]
   3341c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33420:	ldr	x1, [x0, #2576]
   33424:	add	x0, x0, #0xa10
   33428:	blr	x1
   3342c:	ldr	x9, [x24, x0]
   33430:	cmp	x8, x9
   33434:	b.lt	334a8 <mpfr_mul_q@@Base+0x2f8>  // b.tstop
   33438:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3343c:	cmp	x8, x9
   33440:	b.gt	332b4 <mpfr_mul_q@@Base+0x104>
   33444:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33448:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3344c:	add	x0, x0, #0x396
   33450:	add	x2, x2, #0x444
   33454:	mov	w1, #0xec                  	// #236
   33458:	bl	cb20 <mpfr_assert_fail@plt>
   3345c:	b	332b4 <mpfr_mul_q@@Base+0x104>
   33460:	mov	x0, x19
   33464:	mov	w1, w21
   33468:	mov	w2, w20
   3346c:	bl	cb10 <mpfr_check_range@plt>
   33470:	mov	w21, w0
   33474:	b	33328 <mpfr_mul_q@@Base+0x178>
   33478:	mov	x8, #0x2                   	// #2
   3347c:	movk	x8, #0x8000, lsl #48
   33480:	mov	w21, wzr
   33484:	str	x8, [x19, #16]
   33488:	b	33328 <mpfr_mul_q@@Base+0x178>
   3348c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33490:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33494:	add	x0, x0, #0x396
   33498:	add	x2, x2, #0x3ff
   3349c:	mov	w1, #0xe8                  	// #232
   334a0:	bl	cb20 <mpfr_assert_fail@plt>
   334a4:	b	33410 <mpfr_mul_q@@Base+0x260>
   334a8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   334ac:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   334b0:	add	x0, x0, #0x396
   334b4:	add	x2, x2, #0x423
   334b8:	mov	w1, #0xeb                  	// #235
   334bc:	bl	cb20 <mpfr_assert_fail@plt>
   334c0:	ldr	x8, [x19, #16]
   334c4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   334c8:	cmp	x8, x9
   334cc:	b.gt	332b4 <mpfr_mul_q@@Base+0x104>
   334d0:	b	33444 <mpfr_mul_q@@Base+0x294>

00000000000334d4 <mpfr_div_q@@Base>:
   334d4:	mov	w4, w3
   334d8:	mov	x3, x2
   334dc:	add	x2, x2, #0x10
   334e0:	b	331bc <mpfr_mul_q@@Base+0xc>

00000000000334e4 <mpfr_add_q@@Base>:
   334e4:	sub	sp, sp, #0xb0
   334e8:	stp	x29, x30, [sp, #80]
   334ec:	stp	x28, x27, [sp, #96]
   334f0:	stp	x26, x25, [sp, #112]
   334f4:	stp	x24, x23, [sp, #128]
   334f8:	stp	x22, x21, [sp, #144]
   334fc:	stp	x20, x19, [sp, #160]
   33500:	ldr	x8, [x1, #16]
   33504:	mov	x10, #0x2                   	// #2
   33508:	movk	x10, #0x8000, lsl #48
   3350c:	add	x9, x10, #0x2
   33510:	mov	w20, w3
   33514:	mov	x27, x2
   33518:	mov	x21, x1
   3351c:	cmp	x8, x9
   33520:	mov	x19, x0
   33524:	add	x29, sp, #0x50
   33528:	b.lt	337c4 <mpfr_add_q@@Base+0x2e0>  // b.tstop
   3352c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33530:	ldr	x1, [x0, #2640]
   33534:	add	x0, x0, #0xa50
   33538:	blr	x1
   3353c:	mrs	x28, tpidr_el0
   33540:	ldr	w24, [x28, x0]
   33544:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33548:	ldr	x1, [x0, #2576]
   3354c:	add	x0, x0, #0xa10
   33550:	blr	x1
   33554:	ldr	x25, [x28, x0]
   33558:	mov	x8, x0
   3355c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33560:	ldr	x1, [x0, #2608]
   33564:	add	x0, x0, #0xa30
   33568:	blr	x1
   3356c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   33570:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   33574:	ldr	x26, [x28, x0]
   33578:	str	x9, [x28, x8]
   3357c:	str	x10, [x28, x0]
   33580:	ldr	x8, [x19]
   33584:	sub	x0, x29, #0x20
   33588:	add	x23, x8, #0xa
   3358c:	mov	x1, x23
   33590:	bl	ca60 <mpfr_init2@plt>
   33594:	add	x0, sp, #0x10
   33598:	mov	x1, x23
   3359c:	bl	ca60 <mpfr_init2@plt>
   335a0:	add	x0, sp, #0x10
   335a4:	mov	x1, x27
   335a8:	mov	w2, wzr
   335ac:	bl	c840 <mpfr_set_q@plt>
   335b0:	cbz	w0, 337ac <mpfr_add_q@@Base+0x2c8>
   335b4:	cmp	w20, #0x0
   335b8:	mov	w8, #0x40                  	// #64
   335bc:	cset	w22, eq  // eq = none
   335c0:	stp	x27, x8, [sp]
   335c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   335c8:	ldr	x1, [x0, #2640]
   335cc:	add	x0, x0, #0xa50
   335d0:	blr	x1
   335d4:	mov	x27, x0
   335d8:	str	wzr, [x28, x0]
   335dc:	sub	x0, x29, #0x20
   335e0:	add	x2, sp, #0x10
   335e4:	mov	x1, x21
   335e8:	mov	w3, wzr
   335ec:	bl	c1e0 <mpfr_add@plt>
   335f0:	ldrb	w8, [x28, x27]
   335f4:	tst	w8, #0x3
   335f8:	b.ne	336bc <mpfr_add_q@@Base+0x1d8>  // b.any
   335fc:	ldur	x8, [x29, #-16]
   33600:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   33604:	mov	x27, #0x2                   	// #2
   33608:	movk	x27, #0x8000, lsl #48
   3360c:	cmp	x8, x9
   33610:	b.eq	33664 <mpfr_add_q@@Base+0x180>  // b.none
   33614:	add	x9, x27, #0x2
   33618:	cmp	x8, x9
   3361c:	b.lt	33664 <mpfr_add_q@@Base+0x180>  // b.tstop
   33620:	ldr	x9, [sp, #32]
   33624:	ldur	x10, [x29, #-32]
   33628:	ldr	x11, [x19]
   3362c:	ldur	x0, [x29, #-8]
   33630:	sub	x8, x9, x8
   33634:	sub	x9, x10, #0x1
   33638:	add	x10, x10, #0x3e
   3363c:	bic	x8, x8, x8, asr #63
   33640:	cmp	x9, #0x0
   33644:	mvn	x8, x8
   33648:	csel	x9, x10, x9, lt  // lt = tstop
   3364c:	add	x2, x23, x8
   33650:	asr	x8, x9, #6
   33654:	add	x1, x8, #0x1
   33658:	add	x3, x11, x22
   3365c:	bl	c370 <mpfr_round_p@plt>
   33660:	cbnz	w0, 336f4 <mpfr_add_q@@Base+0x210>
   33664:	sub	x8, x27, x23
   33668:	ldr	x27, [sp, #8]
   3366c:	sub	x8, x8, #0x103
   33670:	cmp	x27, x8
   33674:	b.gt	336d8 <mpfr_add_q@@Base+0x1f4>
   33678:	add	x23, x27, x23
   3367c:	cmp	x23, #0x0
   33680:	cinc	x8, x23, lt  // lt = tstop
   33684:	asr	x8, x8, #1
   33688:	sub	x0, x29, #0x20
   3368c:	mov	x1, x23
   33690:	str	x8, [sp, #8]
   33694:	bl	bf20 <mpfr_set_prec@plt>
   33698:	add	x0, sp, #0x10
   3369c:	mov	x1, x23
   336a0:	bl	bf20 <mpfr_set_prec@plt>
   336a4:	ldr	x1, [sp]
   336a8:	add	x0, sp, #0x10
   336ac:	mov	w2, wzr
   336b0:	bl	c840 <mpfr_set_q@plt>
   336b4:	cbnz	w0, 335c4 <mpfr_add_q@@Base+0xe0>
   336b8:	b	337ac <mpfr_add_q@@Base+0x2c8>
   336bc:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   336c0:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   336c4:	mov	w1, #0x144                 	// #324
   336c8:	add	x0, x0, #0x396
   336cc:	add	x2, x2, #0x39f
   336d0:	bl	cb20 <mpfr_assert_fail@plt>
   336d4:	b	335fc <mpfr_add_q@@Base+0x118>
   336d8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   336dc:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   336e0:	mov	w1, #0x153                 	// #339
   336e4:	add	x0, x0, #0x396
   336e8:	add	x2, x2, #0xcf6
   336ec:	bl	cb20 <mpfr_assert_fail@plt>
   336f0:	b	33678 <mpfr_add_q@@Base+0x194>
   336f4:	ldur	w3, [x29, #-24]
   336f8:	sub	x1, x29, #0x20
   336fc:	mov	x0, x19
   33700:	mov	w2, w20
   33704:	bl	c690 <mpfr_set4@plt>
   33708:	mov	w21, w0
   3370c:	sub	x0, x29, #0x20
   33710:	bl	c0b0 <mpfr_clear@plt>
   33714:	add	x0, sp, #0x10
   33718:	bl	c0b0 <mpfr_clear@plt>
   3371c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33720:	ldr	x1, [x0, #2640]
   33724:	add	x0, x0, #0xa50
   33728:	blr	x1
   3372c:	str	w24, [x28, x0]
   33730:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33734:	ldr	x1, [x0, #2576]
   33738:	add	x0, x0, #0xa10
   3373c:	blr	x1
   33740:	str	x25, [x28, x0]
   33744:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33748:	ldr	x1, [x0, #2608]
   3374c:	add	x0, x0, #0xa30
   33750:	blr	x1
   33754:	str	x26, [x28, x0]
   33758:	ldr	x8, [x19, #16]
   3375c:	cmp	x8, x26
   33760:	b.gt	3380c <mpfr_add_q@@Base+0x328>
   33764:	cmp	x8, x25
   33768:	b.lt	3380c <mpfr_add_q@@Base+0x328>  // b.tstop
   3376c:	cbz	w21, 33788 <mpfr_add_q@@Base+0x2a4>
   33770:	orr	w8, w24, #0x8
   33774:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33778:	ldr	x1, [x0, #2640]
   3377c:	add	x0, x0, #0xa50
   33780:	blr	x1
   33784:	str	w8, [x28, x0]
   33788:	mov	w0, w21
   3378c:	ldp	x20, x19, [sp, #160]
   33790:	ldp	x22, x21, [sp, #144]
   33794:	ldp	x24, x23, [sp, #128]
   33798:	ldp	x26, x25, [sp, #112]
   3379c:	ldp	x28, x27, [sp, #96]
   337a0:	ldp	x29, x30, [sp, #80]
   337a4:	add	sp, sp, #0xb0
   337a8:	ret
   337ac:	add	x2, sp, #0x10
   337b0:	mov	x0, x19
   337b4:	mov	x1, x21
   337b8:	mov	w3, w20
   337bc:	bl	c1e0 <mpfr_add@plt>
   337c0:	b	33708 <mpfr_add_q@@Base+0x224>
   337c4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   337c8:	cmp	x8, x9
   337cc:	b.eq	33820 <mpfr_add_q@@Base+0x33c>  // b.none
   337d0:	mov	x9, #0x2                   	// #2
   337d4:	movk	x9, #0x8000, lsl #48
   337d8:	cmp	x8, x9
   337dc:	b.ne	33830 <mpfr_add_q@@Base+0x34c>  // b.any
   337e0:	str	x10, [x19, #16]
   337e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   337e8:	ldr	x1, [x0, #2640]
   337ec:	add	x0, x0, #0xa50
   337f0:	blr	x1
   337f4:	mrs	x8, tpidr_el0
   337f8:	ldr	w9, [x8, x0]
   337fc:	mov	w21, wzr
   33800:	orr	w9, w9, #0x4
   33804:	str	w9, [x8, x0]
   33808:	b	33788 <mpfr_add_q@@Base+0x2a4>
   3380c:	mov	x0, x19
   33810:	mov	w1, w21
   33814:	mov	w2, w20
   33818:	bl	cb10 <mpfr_check_range@plt>
   3381c:	b	33848 <mpfr_add_q@@Base+0x364>
   33820:	ldr	w8, [x27, #20]
   33824:	cbz	w8, 33850 <mpfr_add_q@@Base+0x36c>
   33828:	ldr	w8, [x21, #8]
   3382c:	b	33878 <mpfr_add_q@@Base+0x394>
   33830:	ldr	w8, [x27, #4]
   33834:	cbz	w8, 3388c <mpfr_add_q@@Base+0x3a8>
   33838:	mov	x0, x19
   3383c:	mov	x1, x27
   33840:	mov	w2, w20
   33844:	bl	c840 <mpfr_set_q@plt>
   33848:	mov	w21, w0
   3384c:	b	33788 <mpfr_add_q@@Base+0x2a4>
   33850:	ldr	w9, [x27, #4]
   33854:	ldr	w8, [x21, #8]
   33858:	mov	x10, #0x2                   	// #2
   3385c:	movk	x10, #0x8000, lsl #48
   33860:	cmp	w9, #0x0
   33864:	cset	w9, ne  // ne = any
   33868:	csinv	w9, w9, wzr, ge  // ge = tcont
   3386c:	mul	w9, w9, w8
   33870:	cmp	w9, #0x0
   33874:	b.le	337e0 <mpfr_add_q@@Base+0x2fc>
   33878:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3387c:	mov	w21, wzr
   33880:	str	x9, [x19, #16]
   33884:	str	w8, [x19, #8]
   33888:	b	33788 <mpfr_add_q@@Base+0x2a4>
   3388c:	ldr	w3, [x21, #8]
   33890:	mov	x0, x19
   33894:	mov	x1, x21
   33898:	mov	w2, w20
   3389c:	bl	c690 <mpfr_set4@plt>
   338a0:	b	33848 <mpfr_add_q@@Base+0x364>

00000000000338a4 <mpfr_sub_q@@Base>:
   338a4:	sub	sp, sp, #0xb0
   338a8:	stp	x29, x30, [sp, #80]
   338ac:	stp	x28, x27, [sp, #96]
   338b0:	stp	x26, x25, [sp, #112]
   338b4:	stp	x24, x23, [sp, #128]
   338b8:	stp	x22, x21, [sp, #144]
   338bc:	stp	x20, x19, [sp, #160]
   338c0:	ldr	x8, [x1, #16]
   338c4:	mov	x9, #0x2                   	// #2
   338c8:	movk	x9, #0x8000, lsl #48
   338cc:	add	x9, x9, #0x2
   338d0:	mov	w20, w3
   338d4:	mov	x27, x2
   338d8:	mov	x21, x1
   338dc:	cmp	x8, x9
   338e0:	mov	x19, x0
   338e4:	add	x29, sp, #0x50
   338e8:	b.lt	33ba4 <mpfr_sub_q@@Base+0x300>  // b.tstop
   338ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   338f0:	ldr	x1, [x0, #2640]
   338f4:	add	x0, x0, #0xa50
   338f8:	blr	x1
   338fc:	mrs	x28, tpidr_el0
   33900:	ldr	w24, [x28, x0]
   33904:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33908:	ldr	x1, [x0, #2576]
   3390c:	add	x0, x0, #0xa10
   33910:	blr	x1
   33914:	ldr	x25, [x28, x0]
   33918:	mov	x8, x0
   3391c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33920:	ldr	x1, [x0, #2608]
   33924:	add	x0, x0, #0xa30
   33928:	blr	x1
   3392c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   33930:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   33934:	ldr	x26, [x28, x0]
   33938:	str	x9, [x28, x8]
   3393c:	str	x10, [x28, x0]
   33940:	ldr	x8, [x19]
   33944:	sub	x0, x29, #0x20
   33948:	add	x23, x8, #0xa
   3394c:	mov	x1, x23
   33950:	bl	ca60 <mpfr_init2@plt>
   33954:	add	x0, sp, #0x10
   33958:	mov	x1, x23
   3395c:	bl	ca60 <mpfr_init2@plt>
   33960:	add	x0, sp, #0x10
   33964:	mov	x1, x27
   33968:	mov	w2, wzr
   3396c:	bl	c840 <mpfr_set_q@plt>
   33970:	cbz	w0, 33b8c <mpfr_sub_q@@Base+0x2e8>
   33974:	cmp	w20, #0x0
   33978:	mov	w8, #0x40                  	// #64
   3397c:	cset	w22, eq  // eq = none
   33980:	stp	x27, x8, [sp]
   33984:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33988:	ldr	x1, [x0, #2640]
   3398c:	add	x0, x0, #0xa50
   33990:	blr	x1
   33994:	mov	x27, x0
   33998:	str	wzr, [x28, x0]
   3399c:	sub	x0, x29, #0x20
   339a0:	add	x2, sp, #0x10
   339a4:	mov	x1, x21
   339a8:	mov	w3, wzr
   339ac:	bl	bbc0 <mpfr_sub@plt>
   339b0:	ldrb	w8, [x28, x27]
   339b4:	tst	w8, #0x3
   339b8:	b.ne	33a88 <mpfr_sub_q@@Base+0x1e4>  // b.any
   339bc:	ldur	x8, [x29, #-16]
   339c0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   339c4:	cmp	x8, x9
   339c8:	b.eq	33a24 <mpfr_sub_q@@Base+0x180>  // b.none
   339cc:	mov	x9, #0x2                   	// #2
   339d0:	movk	x9, #0x8000, lsl #48
   339d4:	add	x9, x9, #0x2
   339d8:	cmp	x8, x9
   339dc:	b.lt	33a24 <mpfr_sub_q@@Base+0x180>  // b.tstop
   339e0:	ldr	x9, [sp, #32]
   339e4:	ldur	x10, [x29, #-32]
   339e8:	ldr	x11, [x19]
   339ec:	ldur	x0, [x29, #-8]
   339f0:	sub	x8, x9, x8
   339f4:	sub	x9, x10, #0x1
   339f8:	add	x10, x10, #0x3e
   339fc:	bic	x8, x8, x8, asr #63
   33a00:	cmp	x9, #0x0
   33a04:	mvn	x8, x8
   33a08:	csel	x9, x10, x9, lt  // lt = tstop
   33a0c:	add	x2, x23, x8
   33a10:	asr	x8, x9, #6
   33a14:	add	x1, x8, #0x1
   33a18:	add	x3, x11, x22
   33a1c:	bl	c370 <mpfr_round_p@plt>
   33a20:	cbnz	w0, 33ad4 <mpfr_sub_q@@Base+0x230>
   33a24:	mov	x8, #0x2                   	// #2
   33a28:	ldr	x9, [sp, #8]
   33a2c:	movk	x8, #0x8000, lsl #48
   33a30:	sub	x8, x8, x23
   33a34:	sub	x8, x8, #0x103
   33a38:	cmp	x9, x8
   33a3c:	mov	x8, x9
   33a40:	b.gt	33ab4 <mpfr_sub_q@@Base+0x210>
   33a44:	add	x23, x8, x23
   33a48:	cmp	x23, #0x0
   33a4c:	cinc	x8, x23, lt  // lt = tstop
   33a50:	asr	x8, x8, #1
   33a54:	sub	x0, x29, #0x20
   33a58:	mov	x1, x23
   33a5c:	str	x8, [sp, #8]
   33a60:	bl	bf20 <mpfr_set_prec@plt>
   33a64:	add	x0, sp, #0x10
   33a68:	mov	x1, x23
   33a6c:	bl	bf20 <mpfr_set_prec@plt>
   33a70:	ldr	x1, [sp]
   33a74:	add	x0, sp, #0x10
   33a78:	mov	w2, wzr
   33a7c:	bl	c840 <mpfr_set_q@plt>
   33a80:	cbnz	w0, 33984 <mpfr_sub_q@@Base+0xe0>
   33a84:	b	33b8c <mpfr_sub_q@@Base+0x2e8>
   33a88:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33a8c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33a90:	mov	w1, #0x1a3                 	// #419
   33a94:	add	x0, x0, #0x396
   33a98:	add	x2, x2, #0x39f
   33a9c:	bl	cb20 <mpfr_assert_fail@plt>
   33aa0:	ldur	x8, [x29, #-16]
   33aa4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   33aa8:	cmp	x8, x9
   33aac:	b.ne	339cc <mpfr_sub_q@@Base+0x128>  // b.any
   33ab0:	b	33a24 <mpfr_sub_q@@Base+0x180>
   33ab4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   33ab8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   33abc:	mov	w1, #0x1b3                 	// #435
   33ac0:	add	x0, x0, #0x396
   33ac4:	add	x2, x2, #0xcf6
   33ac8:	bl	cb20 <mpfr_assert_fail@plt>
   33acc:	ldr	x8, [sp, #8]
   33ad0:	b	33a44 <mpfr_sub_q@@Base+0x1a0>
   33ad4:	ldur	w3, [x29, #-24]
   33ad8:	sub	x1, x29, #0x20
   33adc:	mov	x0, x19
   33ae0:	mov	w2, w20
   33ae4:	bl	c690 <mpfr_set4@plt>
   33ae8:	mov	w21, w0
   33aec:	sub	x0, x29, #0x20
   33af0:	bl	c0b0 <mpfr_clear@plt>
   33af4:	add	x0, sp, #0x10
   33af8:	bl	c0b0 <mpfr_clear@plt>
   33afc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33b00:	ldr	x1, [x0, #2640]
   33b04:	add	x0, x0, #0xa50
   33b08:	blr	x1
   33b0c:	str	w24, [x28, x0]
   33b10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33b14:	ldr	x1, [x0, #2576]
   33b18:	add	x0, x0, #0xa10
   33b1c:	blr	x1
   33b20:	str	x25, [x28, x0]
   33b24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33b28:	ldr	x1, [x0, #2608]
   33b2c:	add	x0, x0, #0xa30
   33b30:	blr	x1
   33b34:	str	x26, [x28, x0]
   33b38:	ldr	x8, [x19, #16]
   33b3c:	cmp	x8, x26
   33b40:	b.gt	33bf4 <mpfr_sub_q@@Base+0x350>
   33b44:	cmp	x8, x25
   33b48:	b.lt	33bf4 <mpfr_sub_q@@Base+0x350>  // b.tstop
   33b4c:	cbz	w21, 33b68 <mpfr_sub_q@@Base+0x2c4>
   33b50:	orr	w8, w24, #0x8
   33b54:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33b58:	ldr	x1, [x0, #2640]
   33b5c:	add	x0, x0, #0xa50
   33b60:	blr	x1
   33b64:	str	w8, [x28, x0]
   33b68:	mov	w0, w21
   33b6c:	ldp	x20, x19, [sp, #160]
   33b70:	ldp	x22, x21, [sp, #144]
   33b74:	ldp	x24, x23, [sp, #128]
   33b78:	ldp	x26, x25, [sp, #112]
   33b7c:	ldp	x28, x27, [sp, #96]
   33b80:	ldp	x29, x30, [sp, #80]
   33b84:	add	sp, sp, #0xb0
   33b88:	ret
   33b8c:	add	x2, sp, #0x10
   33b90:	mov	x0, x19
   33b94:	mov	x1, x21
   33b98:	mov	w3, w20
   33b9c:	bl	bbc0 <mpfr_sub@plt>
   33ba0:	b	33ae8 <mpfr_sub_q@@Base+0x244>
   33ba4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   33ba8:	cmp	x8, x9
   33bac:	b.eq	33c0c <mpfr_sub_q@@Base+0x368>  // b.none
   33bb0:	mov	x9, #0x2                   	// #2
   33bb4:	movk	x9, #0x8000, lsl #48
   33bb8:	cmp	x8, x9
   33bbc:	b.ne	33c1c <mpfr_sub_q@@Base+0x378>  // b.any
   33bc0:	mov	x8, #0x2                   	// #2
   33bc4:	movk	x8, #0x8000, lsl #48
   33bc8:	str	x8, [x19, #16]
   33bcc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33bd0:	ldr	x1, [x0, #2640]
   33bd4:	add	x0, x0, #0xa50
   33bd8:	blr	x1
   33bdc:	mrs	x8, tpidr_el0
   33be0:	ldr	w9, [x8, x0]
   33be4:	mov	w21, wzr
   33be8:	orr	w9, w9, #0x4
   33bec:	str	w9, [x8, x0]
   33bf0:	b	33b68 <mpfr_sub_q@@Base+0x2c4>
   33bf4:	mov	x0, x19
   33bf8:	mov	w1, w21
   33bfc:	mov	w2, w20
   33c00:	bl	cb10 <mpfr_check_range@plt>
   33c04:	mov	w21, w0
   33c08:	b	33b68 <mpfr_sub_q@@Base+0x2c4>
   33c0c:	ldr	w8, [x27, #20]
   33c10:	cbz	w8, 33c5c <mpfr_sub_q@@Base+0x3b8>
   33c14:	ldr	w8, [x21, #8]
   33c18:	b	33c78 <mpfr_sub_q@@Base+0x3d4>
   33c1c:	ldr	w8, [x27, #4]
   33c20:	cbz	w8, 33c8c <mpfr_sub_q@@Base+0x3e8>
   33c24:	cmp	w20, #0x3
   33c28:	mov	w8, #0x2                   	// #2
   33c2c:	csel	w8, w8, w20, eq  // eq = none
   33c30:	cmp	w20, #0x2
   33c34:	mov	w9, #0x3                   	// #3
   33c38:	csel	w2, w9, w8, eq  // eq = none
   33c3c:	mov	x0, x19
   33c40:	mov	x1, x27
   33c44:	bl	c840 <mpfr_set_q@plt>
   33c48:	ldr	w8, [x19, #8]
   33c4c:	neg	w21, w0
   33c50:	neg	w8, w8
   33c54:	str	w8, [x19, #8]
   33c58:	b	33b68 <mpfr_sub_q@@Base+0x2c4>
   33c5c:	ldr	w9, [x27, #4]
   33c60:	ldr	w8, [x21, #8]
   33c64:	cmp	w9, #0x0
   33c68:	cset	w9, ne  // ne = any
   33c6c:	csinv	w9, w9, wzr, ge  // ge = tcont
   33c70:	mul	w9, w9, w8
   33c74:	tbz	w9, #31, 33bc0 <mpfr_sub_q@@Base+0x31c>
   33c78:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   33c7c:	mov	w21, wzr
   33c80:	str	x9, [x19, #16]
   33c84:	str	w8, [x19, #8]
   33c88:	b	33b68 <mpfr_sub_q@@Base+0x2c4>
   33c8c:	ldr	w3, [x21, #8]
   33c90:	mov	x0, x19
   33c94:	mov	x1, x21
   33c98:	mov	w2, w20
   33c9c:	bl	c690 <mpfr_set4@plt>
   33ca0:	b	33c04 <mpfr_sub_q@@Base+0x360>

0000000000033ca4 <mpfr_cmp_q@@Base>:
   33ca4:	sub	sp, sp, #0x80
   33ca8:	stp	x29, x30, [sp, #32]
   33cac:	stp	x28, x27, [sp, #48]
   33cb0:	stp	x26, x25, [sp, #64]
   33cb4:	stp	x24, x23, [sp, #80]
   33cb8:	stp	x22, x21, [sp, #96]
   33cbc:	stp	x20, x19, [sp, #112]
   33cc0:	ldr	w8, [x1, #20]
   33cc4:	mov	x20, x1
   33cc8:	mov	x19, x0
   33ccc:	add	x29, sp, #0x20
   33cd0:	cbz	w8, 33dd0 <mpfr_cmp_q@@Base+0x12c>
   33cd4:	ldr	x9, [x19, #16]
   33cd8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   33cdc:	cmp	x9, x10
   33ce0:	b.le	33e2c <mpfr_cmp_q@@Base+0x188>
   33ce4:	add	x21, x20, #0x10
   33ce8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33cec:	ldr	x1, [x0, #2640]
   33cf0:	add	x0, x0, #0xa50
   33cf4:	blr	x1
   33cf8:	mrs	x25, tpidr_el0
   33cfc:	ldr	w26, [x25, x0]
   33d00:	mov	x22, x0
   33d04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33d08:	ldr	x1, [x0, #2576]
   33d0c:	add	x0, x0, #0xa10
   33d10:	blr	x1
   33d14:	ldr	x27, [x25, x0]
   33d18:	mov	x23, x0
   33d1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33d20:	ldr	x1, [x0, #2608]
   33d24:	add	x0, x0, #0xa30
   33d28:	blr	x1
   33d2c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   33d30:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   33d34:	ldr	x28, [x25, x0]
   33d38:	str	x9, [x25, x23]
   33d3c:	str	x10, [x25, x0]
   33d40:	ldr	x9, [x20, #24]
   33d44:	cmp	w8, #0x0
   33d48:	cneg	w8, w8, mi  // mi = first
   33d4c:	ldr	x10, [x19]
   33d50:	add	x9, x9, w8, uxtw #3
   33d54:	ldur	x9, [x9, #-8]
   33d58:	lsl	x8, x8, #6
   33d5c:	mov	x24, x0
   33d60:	mov	x0, sp
   33d64:	clz	x9, x9
   33d68:	sub	x8, x8, x9
   33d6c:	add	x1, x8, x10
   33d70:	bl	ca60 <mpfr_init2@plt>
   33d74:	mov	x0, sp
   33d78:	mov	x1, x19
   33d7c:	mov	x2, x21
   33d80:	mov	w3, wzr
   33d84:	bl	c4c0 <mpfr_mul_z@plt>
   33d88:	mov	x0, sp
   33d8c:	mov	x1, x20
   33d90:	bl	bc00 <mpfr_cmp_z@plt>
   33d94:	mov	w19, w0
   33d98:	mov	x0, sp
   33d9c:	bl	c0b0 <mpfr_clear@plt>
   33da0:	str	w26, [x25, x22]
   33da4:	str	x27, [x25, x23]
   33da8:	str	x28, [x25, x24]
   33dac:	mov	w0, w19
   33db0:	ldp	x20, x19, [sp, #112]
   33db4:	ldp	x22, x21, [sp, #96]
   33db8:	ldp	x24, x23, [sp, #80]
   33dbc:	ldp	x26, x25, [sp, #64]
   33dc0:	ldp	x28, x27, [sp, #48]
   33dc4:	ldp	x29, x30, [sp, #32]
   33dc8:	add	sp, sp, #0x80
   33dcc:	ret
   33dd0:	mov	x0, sp
   33dd4:	mov	w1, #0x1                   	// #1
   33dd8:	bl	ca60 <mpfr_init2@plt>
   33ddc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33de0:	ldr	x1, [x0, #2640]
   33de4:	add	x0, x0, #0xa50
   33de8:	blr	x1
   33dec:	mrs	x22, tpidr_el0
   33df0:	ldr	w23, [x22, x0]
   33df4:	mov	x21, x0
   33df8:	mov	x0, sp
   33dfc:	mov	x1, x20
   33e00:	mov	w2, wzr
   33e04:	bl	c840 <mpfr_set_q@plt>
   33e08:	mov	x1, sp
   33e0c:	mov	w2, #0x1                   	// #1
   33e10:	mov	x0, x19
   33e14:	str	w23, [x22, x21]
   33e18:	bl	c980 <mpfr_cmp3@plt>
   33e1c:	mov	w19, w0
   33e20:	mov	x0, sp
   33e24:	bl	c0b0 <mpfr_clear@plt>
   33e28:	b	33dac <mpfr_cmp_q@@Base+0x108>
   33e2c:	ldr	w8, [x20, #4]
   33e30:	mov	x0, x19
   33e34:	mov	x2, xzr
   33e38:	cmp	w8, #0x0
   33e3c:	cset	w8, ne  // ne = any
   33e40:	csinv	x1, x8, xzr, ge  // ge = tcont
   33e44:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   33e48:	mov	w19, w0
   33e4c:	b	33dac <mpfr_cmp_q@@Base+0x108>

0000000000033e50 <mpfr_cmp_f@@Base>:
   33e50:	sub	sp, sp, #0x80
   33e54:	stp	x29, x30, [sp, #32]
   33e58:	stp	x26, x25, [sp, #64]
   33e5c:	stp	x24, x23, [sp, #80]
   33e60:	stp	x22, x21, [sp, #96]
   33e64:	stp	x20, x19, [sp, #112]
   33e68:	ldr	x8, [x0, #16]
   33e6c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   33e70:	mov	x19, x0
   33e74:	mov	x20, x1
   33e78:	cmp	x8, x9
   33e7c:	str	x27, [sp, #48]
   33e80:	add	x29, sp, #0x20
   33e84:	b.le	33f5c <mpfr_cmp_f@@Base+0x10c>
   33e88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33e8c:	ldr	x1, [x0, #2640]
   33e90:	add	x0, x0, #0xa50
   33e94:	blr	x1
   33e98:	mrs	x24, tpidr_el0
   33e9c:	ldr	w25, [x24, x0]
   33ea0:	mov	x21, x0
   33ea4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33ea8:	ldr	x1, [x0, #2576]
   33eac:	add	x0, x0, #0xa10
   33eb0:	blr	x1
   33eb4:	ldr	x26, [x24, x0]
   33eb8:	mov	x22, x0
   33ebc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   33ec0:	ldr	x1, [x0, #2608]
   33ec4:	add	x0, x0, #0xa30
   33ec8:	blr	x1
   33ecc:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   33ed0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   33ed4:	ldr	x27, [x24, x0]
   33ed8:	str	x8, [x24, x22]
   33edc:	str	x9, [x24, x0]
   33ee0:	ldr	w8, [x20, #4]
   33ee4:	mov	w1, #0x1                   	// #1
   33ee8:	mov	x23, x0
   33eec:	mov	x0, sp
   33ef0:	cmp	w8, #0x0
   33ef4:	cneg	w8, w8, mi  // mi = first
   33ef8:	bfi	w1, w8, #6, #26
   33efc:	bl	ca60 <mpfr_init2@plt>
   33f00:	mov	x0, sp
   33f04:	mov	x1, x20
   33f08:	mov	w2, wzr
   33f0c:	bl	bd90 <mpfr_set_f@plt>
   33f10:	mov	x1, sp
   33f14:	mov	w2, #0x1                   	// #1
   33f18:	mov	x0, x19
   33f1c:	bl	c980 <mpfr_cmp3@plt>
   33f20:	mov	w19, w0
   33f24:	mov	x0, sp
   33f28:	bl	c0b0 <mpfr_clear@plt>
   33f2c:	str	w25, [x24, x21]
   33f30:	str	x26, [x24, x22]
   33f34:	str	x27, [x24, x23]
   33f38:	mov	w0, w19
   33f3c:	ldp	x20, x19, [sp, #112]
   33f40:	ldp	x22, x21, [sp, #96]
   33f44:	ldp	x24, x23, [sp, #80]
   33f48:	ldp	x26, x25, [sp, #64]
   33f4c:	ldr	x27, [sp, #48]
   33f50:	ldp	x29, x30, [sp, #32]
   33f54:	add	sp, sp, #0x80
   33f58:	ret
   33f5c:	ldr	w8, [x20, #4]
   33f60:	mov	x0, x19
   33f64:	mov	x2, xzr
   33f68:	cmp	w8, #0x0
   33f6c:	cset	w8, ne  // ne = any
   33f70:	csinv	x1, x8, xzr, ge  // ge = tcont
   33f74:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   33f78:	mov	w19, w0
   33f7c:	b	33f38 <mpfr_cmp_f@@Base+0xe8>

0000000000033f80 <mpfr_init2@@Base>:
   33f80:	stp	x29, x30, [sp, #-48]!
   33f84:	stp	x22, x21, [sp, #16]
   33f88:	stp	x20, x19, [sp, #32]
   33f8c:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   33f90:	ldr	x8, [x8, #4040]
   33f94:	mov	x20, x1
   33f98:	mov	x19, x0
   33f9c:	mov	x29, sp
   33fa0:	ldr	w8, [x8]
   33fa4:	cmp	w8, #0x40
   33fa8:	b.ne	34010 <mpfr_init2@@Base+0x90>  // b.any
   33fac:	mov	x21, #0xfffffffffffffeff    	// #-257
   33fb0:	movk	x21, #0x7fff, lsl #48
   33fb4:	sub	x22, x20, #0x1
   33fb8:	cmp	x22, x21
   33fbc:	b.cs	3402c <mpfr_init2@@Base+0xac>  // b.hs, b.nlast
   33fc0:	add	x8, x22, #0x3f
   33fc4:	cmp	x22, #0x0
   33fc8:	csel	x8, x8, x22, lt  // lt = tstop
   33fcc:	asr	x8, x8, #6
   33fd0:	add	x22, x8, #0x1
   33fd4:	lsl	x8, x22, #3
   33fd8:	add	x0, x8, #0x8
   33fdc:	bl	ccd0 <mpfr_allocate_func@plt>
   33fe0:	mov	w8, #0x1                   	// #1
   33fe4:	add	x9, x0, #0x8
   33fe8:	add	x10, x21, #0x103
   33fec:	str	x20, [x19]
   33ff0:	str	w8, [x19, #8]
   33ff4:	str	x9, [x19, #24]
   33ff8:	str	x22, [x0]
   33ffc:	str	x10, [x19, #16]
   34000:	ldp	x20, x19, [sp, #32]
   34004:	ldp	x22, x21, [sp, #16]
   34008:	ldp	x29, x30, [sp], #48
   3400c:	ret
   34010:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34014:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34018:	add	x0, x0, #0x47e
   3401c:	add	x2, x2, #0x486
   34020:	mov	w1, #0x27                  	// #39
   34024:	bl	cb20 <mpfr_assert_fail@plt>
   34028:	b	33fac <mpfr_init2@@Base+0x2c>
   3402c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34030:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   34034:	add	x0, x0, #0x47e
   34038:	add	x2, x2, #0xc73
   3403c:	mov	w1, #0x34                  	// #52
   34040:	bl	cb20 <mpfr_assert_fail@plt>
   34044:	b	33fc0 <mpfr_init2@@Base+0x40>

0000000000034048 <mpfr_acos@@Base>:
   34048:	sub	sp, sp, #0xd0
   3404c:	stp	x29, x30, [sp, #112]
   34050:	stp	x28, x27, [sp, #128]
   34054:	stp	x26, x25, [sp, #144]
   34058:	stp	x24, x23, [sp, #160]
   3405c:	stp	x22, x21, [sp, #176]
   34060:	stp	x20, x19, [sp, #192]
   34064:	ldr	x8, [x1, #16]
   34068:	mov	x23, #0x2                   	// #2
   3406c:	movk	x23, #0x8000, lsl #48
   34070:	add	x9, x23, #0x2
   34074:	mov	w19, w2
   34078:	cmp	x8, x9
   3407c:	mov	x20, x0
   34080:	add	x29, sp, #0x70
   34084:	b.lt	343ac <mpfr_acos@@Base+0x364>  // b.tstop
   34088:	mov	x21, x1
   3408c:	ldr	w24, [x1, #8]
   34090:	ldr	x1, [x1]
   34094:	sub	x0, x29, #0x20
   34098:	bl	ca60 <mpfr_init2@plt>
   3409c:	sub	x0, x29, #0x20
   340a0:	mov	w3, #0x1                   	// #1
   340a4:	mov	x1, x21
   340a8:	mov	w2, wzr
   340ac:	bl	c690 <mpfr_set4@plt>
   340b0:	sub	x0, x29, #0x20
   340b4:	mov	w1, #0x1                   	// #1
   340b8:	mov	x2, xzr
   340bc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   340c0:	tbz	w0, #31, 3448c <mpfr_acos@@Base+0x444>
   340c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   340c8:	ldr	x1, [x0, #2640]
   340cc:	add	x0, x0, #0xa50
   340d0:	blr	x1
   340d4:	mrs	x26, tpidr_el0
   340d8:	ldr	w27, [x26, x0]
   340dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   340e0:	ldr	x1, [x0, #2576]
   340e4:	add	x0, x0, #0xa10
   340e8:	blr	x1
   340ec:	ldr	x28, [x26, x0]
   340f0:	mov	x8, x0
   340f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   340f8:	ldr	x1, [x0, #2608]
   340fc:	add	x0, x0, #0xa30
   34100:	blr	x1
   34104:	ldr	x23, [x26, x0]
   34108:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3410c:	str	x9, [x26, x8]
   34110:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   34114:	str	x8, [x26, x0]
   34118:	sub	x0, x29, #0x20
   3411c:	sub	x2, x29, #0x20
   34120:	mov	w1, #0x1                   	// #1
   34124:	mov	w3, #0x3                   	// #3
   34128:	bl	ca30 <mpfr_ui_sub@plt>
   3412c:	ldur	x8, [x29, #-16]
   34130:	cmp	w24, #0x0
   34134:	cset	w9, gt
   34138:	sub	x0, x29, #0x20
   3413c:	lsl	x8, x8, x9
   34140:	mov	w9, #0x2                   	// #2
   34144:	sub	x24, x9, x8
   34148:	bl	c0b0 <mpfr_clear@plt>
   3414c:	ldr	x22, [x20]
   34150:	subs	x25, x22, #0x1
   34154:	b.eq	344e0 <mpfr_acos@@Base+0x498>  // b.none
   34158:	b.le	344e8 <mpfr_acos@@Base+0x4a0>
   3415c:	clz	x8, x25
   34160:	mov	w9, #0x4a                  	// #74
   34164:	sub	x8, x9, x8
   34168:	add	x9, x22, x24
   3416c:	add	x22, x9, x8
   34170:	add	x0, sp, #0x10
   34174:	mov	x1, x22
   34178:	bl	ca60 <mpfr_init2@plt>
   3417c:	add	x0, sp, #0x30
   34180:	mov	x1, x22
   34184:	bl	ca60 <mpfr_init2@plt>
   34188:	cmp	w19, #0x0
   3418c:	mov	w8, #0x40                  	// #64
   34190:	cset	w25, eq  // eq = none
   34194:	str	x8, [sp, #8]
   34198:	add	x0, sp, #0x10
   3419c:	mov	x1, x21
   341a0:	mov	w2, wzr
   341a4:	bl	c3f0 <mpfr_sqr@plt>
   341a8:	add	x0, sp, #0x10
   341ac:	add	x2, sp, #0x10
   341b0:	mov	w1, #0x1                   	// #1
   341b4:	mov	w3, wzr
   341b8:	bl	ca30 <mpfr_ui_sub@plt>
   341bc:	add	x0, sp, #0x10
   341c0:	add	x1, sp, #0x10
   341c4:	mov	w2, wzr
   341c8:	bl	c920 <mpfr_sqrt@plt>
   341cc:	add	x0, sp, #0x10
   341d0:	add	x2, sp, #0x10
   341d4:	mov	x1, x21
   341d8:	mov	w3, wzr
   341dc:	bl	c610 <mpfr_div@plt>
   341e0:	add	x0, sp, #0x30
   341e4:	add	x1, sp, #0x10
   341e8:	mov	w2, wzr
   341ec:	bl	c680 <mpfr_atan@plt>
   341f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   341f4:	ldr	x1, [x0, #2688]
   341f8:	add	x0, x0, #0xa80
   341fc:	blr	x1
   34200:	add	x1, x26, x0
   34204:	add	x0, sp, #0x10
   34208:	mov	w2, wzr
   3420c:	bl	c380 <mpfr_cache@plt>
   34210:	add	x0, sp, #0x10
   34214:	add	x1, sp, #0x10
   34218:	mov	w2, #0x1                   	// #1
   3421c:	mov	w3, wzr
   34220:	bl	c8f0 <mpfr_div_2ui@plt>
   34224:	add	x0, sp, #0x30
   34228:	add	x1, sp, #0x10
   3422c:	add	x2, sp, #0x30
   34230:	mov	w3, wzr
   34234:	bl	bbc0 <mpfr_sub@plt>
   34238:	ldr	x8, [sp, #64]
   3423c:	mov	x9, #0x2                   	// #2
   34240:	movk	x9, #0x8000, lsl #48
   34244:	add	x9, x9, #0x2
   34248:	cmp	x8, x9
   3424c:	b.lt	34284 <mpfr_acos@@Base+0x23c>  // b.tstop
   34250:	ldr	x8, [sp, #48]
   34254:	ldr	x9, [x20]
   34258:	ldr	x0, [sp, #72]
   3425c:	sub	x2, x22, x24
   34260:	sub	x10, x8, #0x1
   34264:	add	x8, x8, #0x3e
   34268:	cmp	x10, #0x0
   3426c:	csel	x8, x8, x10, lt  // lt = tstop
   34270:	asr	x8, x8, #6
   34274:	add	x1, x8, #0x1
   34278:	add	x3, x9, x25
   3427c:	bl	c370 <mpfr_round_p@plt>
   34280:	cbnz	w0, 342f4 <mpfr_acos@@Base+0x2ac>
   34284:	mov	x8, #0x2                   	// #2
   34288:	ldr	x9, [sp, #8]
   3428c:	movk	x8, #0x8000, lsl #48
   34290:	sub	x8, x8, x22
   34294:	sub	x8, x8, #0x103
   34298:	cmp	x9, x8
   3429c:	mov	x8, x9
   342a0:	b.gt	342d4 <mpfr_acos@@Base+0x28c>
   342a4:	add	x22, x22, x8
   342a8:	cmp	x22, #0x0
   342ac:	cinc	x8, x22, lt  // lt = tstop
   342b0:	asr	x8, x8, #1
   342b4:	add	x0, sp, #0x10
   342b8:	mov	x1, x22
   342bc:	str	x8, [sp, #8]
   342c0:	bl	bf20 <mpfr_set_prec@plt>
   342c4:	add	x0, sp, #0x30
   342c8:	mov	x1, x22
   342cc:	bl	bf20 <mpfr_set_prec@plt>
   342d0:	b	34198 <mpfr_acos@@Base+0x150>
   342d4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   342d8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   342dc:	mov	w1, #0x86                  	// #134
   342e0:	add	x0, x0, #0x4a6
   342e4:	add	x2, x2, #0x622
   342e8:	bl	cb20 <mpfr_assert_fail@plt>
   342ec:	ldr	x8, [sp, #8]
   342f0:	b	342a4 <mpfr_acos@@Base+0x25c>
   342f4:	ldr	w3, [sp, #56]
   342f8:	add	x1, sp, #0x30
   342fc:	mov	x0, x20
   34300:	mov	w2, w19
   34304:	bl	c690 <mpfr_set4@plt>
   34308:	mov	w21, w0
   3430c:	add	x0, sp, #0x10
   34310:	bl	c0b0 <mpfr_clear@plt>
   34314:	add	x0, sp, #0x30
   34318:	bl	c0b0 <mpfr_clear@plt>
   3431c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34320:	ldr	x1, [x0, #2640]
   34324:	add	x0, x0, #0xa50
   34328:	blr	x1
   3432c:	str	w27, [x26, x0]
   34330:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34334:	ldr	x1, [x0, #2576]
   34338:	add	x0, x0, #0xa10
   3433c:	blr	x1
   34340:	str	x28, [x26, x0]
   34344:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34348:	ldr	x1, [x0, #2608]
   3434c:	add	x0, x0, #0xa30
   34350:	blr	x1
   34354:	str	x23, [x26, x0]
   34358:	ldr	x8, [x20, #16]
   3435c:	cmp	x8, x23
   34360:	b.gt	344c8 <mpfr_acos@@Base+0x480>
   34364:	cmp	x8, x28
   34368:	b.lt	344c8 <mpfr_acos@@Base+0x480>  // b.tstop
   3436c:	cbz	w21, 34388 <mpfr_acos@@Base+0x340>
   34370:	orr	w8, w27, #0x8
   34374:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34378:	ldr	x1, [x0, #2640]
   3437c:	add	x0, x0, #0xa50
   34380:	blr	x1
   34384:	str	w8, [x26, x0]
   34388:	mov	w0, w21
   3438c:	ldp	x20, x19, [sp, #192]
   34390:	ldp	x22, x21, [sp, #176]
   34394:	ldp	x24, x23, [sp, #160]
   34398:	ldp	x26, x25, [sp, #144]
   3439c:	ldp	x28, x27, [sp, #128]
   343a0:	ldp	x29, x30, [sp, #112]
   343a4:	add	sp, sp, #0xd0
   343a8:	ret
   343ac:	and	x8, x8, #0xfffffffffffffffe
   343b0:	cmp	x8, x23
   343b4:	b.eq	3449c <mpfr_acos@@Base+0x454>  // b.none
   343b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   343bc:	ldr	x1, [x0, #2640]
   343c0:	add	x0, x0, #0xa50
   343c4:	blr	x1
   343c8:	mrs	x25, tpidr_el0
   343cc:	ldr	w26, [x25, x0]
   343d0:	mov	x22, x0
   343d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   343d8:	ldr	x1, [x0, #2576]
   343dc:	add	x0, x0, #0xa10
   343e0:	blr	x1
   343e4:	ldr	x27, [x25, x0]
   343e8:	mov	x23, x0
   343ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   343f0:	ldr	x1, [x0, #2608]
   343f4:	add	x0, x0, #0xa30
   343f8:	blr	x1
   343fc:	ldr	x28, [x25, x0]
   34400:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   34404:	str	x8, [x25, x23]
   34408:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3440c:	mov	x24, x0
   34410:	str	x8, [x25, x0]
   34414:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34418:	ldr	x1, [x0, #2688]
   3441c:	add	x0, x0, #0xa80
   34420:	blr	x1
   34424:	add	x1, x25, x0
   34428:	mov	x0, x20
   3442c:	mov	w2, w19
   34430:	bl	c380 <mpfr_cache@plt>
   34434:	mov	w21, w0
   34438:	mov	w2, #0x1                   	// #1
   3443c:	mov	x0, x20
   34440:	mov	x1, x20
   34444:	mov	w3, w19
   34448:	bl	c8f0 <mpfr_div_2ui@plt>
   3444c:	str	w26, [x25, x22]
   34450:	str	x27, [x25, x23]
   34454:	str	x28, [x25, x24]
   34458:	ldr	x8, [x20, #16]
   3445c:	cmp	x8, x28
   34460:	b.gt	344c8 <mpfr_acos@@Base+0x480>
   34464:	cmp	x8, x27
   34468:	b.lt	344c8 <mpfr_acos@@Base+0x480>  // b.tstop
   3446c:	cbz	w21, 34388 <mpfr_acos@@Base+0x340>
   34470:	orr	w8, w26, #0x8
   34474:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34478:	ldr	x1, [x0, #2640]
   3447c:	add	x0, x0, #0xa50
   34480:	blr	x1
   34484:	str	w8, [x25, x0]
   34488:	b	34388 <mpfr_acos@@Base+0x340>
   3448c:	mov	w22, w0
   34490:	sub	x0, x29, #0x20
   34494:	bl	c0b0 <mpfr_clear@plt>
   34498:	cbz	w22, 34504 <mpfr_acos@@Base+0x4bc>
   3449c:	str	x23, [x20, #16]
   344a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   344a4:	ldr	x1, [x0, #2640]
   344a8:	add	x0, x0, #0xa50
   344ac:	blr	x1
   344b0:	mrs	x8, tpidr_el0
   344b4:	ldr	w9, [x8, x0]
   344b8:	mov	w21, wzr
   344bc:	orr	w9, w9, #0x4
   344c0:	str	w9, [x8, x0]
   344c4:	b	34388 <mpfr_acos@@Base+0x340>
   344c8:	mov	x0, x20
   344cc:	mov	w1, w21
   344d0:	mov	w2, w19
   344d4:	bl	cb10 <mpfr_check_range@plt>
   344d8:	mov	w21, w0
   344dc:	b	34388 <mpfr_acos@@Base+0x340>
   344e0:	mov	w8, #0xa                   	// #10
   344e4:	b	34168 <mpfr_acos@@Base+0x120>
   344e8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   344ec:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   344f0:	add	x0, x0, #0x4a6
   344f4:	add	x2, x2, #0x60d
   344f8:	mov	w1, #0x60                  	// #96
   344fc:	bl	cb20 <mpfr_assert_fail@plt>
   34500:	b	3415c <mpfr_acos@@Base+0x114>
   34504:	cmp	w24, #0x1
   34508:	b.lt	34524 <mpfr_acos@@Base+0x4dc>  // b.tstop
   3450c:	mov	w8, #0x1                   	// #1
   34510:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   34514:	mov	w21, wzr
   34518:	str	w8, [x20, #8]
   3451c:	str	x9, [x20, #16]
   34520:	b	34388 <mpfr_acos@@Base+0x340>
   34524:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34528:	ldr	x1, [x0, #2688]
   3452c:	add	x0, x0, #0xa80
   34530:	blr	x1
   34534:	mrs	x8, tpidr_el0
   34538:	add	x1, x8, x0
   3453c:	mov	x0, x20
   34540:	mov	w2, w19
   34544:	bl	c380 <mpfr_cache@plt>
   34548:	b	344d8 <mpfr_acos@@Base+0x490>

000000000003454c <mpfr_sin_cos@@Base>:
   3454c:	sub	sp, sp, #0xe0
   34550:	stp	x24, x23, [sp, #176]
   34554:	stp	x22, x21, [sp, #192]
   34558:	mov	x23, x0
   3455c:	cmp	x0, x1
   34560:	mov	x22, x2
   34564:	stp	x29, x30, [sp, #128]
   34568:	stp	x28, x27, [sp, #144]
   3456c:	stp	x26, x25, [sp, #160]
   34570:	stp	x20, x19, [sp, #208]
   34574:	add	x29, sp, #0x80
   34578:	str	w3, [sp, #36]
   3457c:	str	x1, [sp, #48]
   34580:	b.eq	34694 <mpfr_sin_cos@@Base+0x148>  // b.none
   34584:	ldr	x28, [x22, #16]
   34588:	mov	x19, #0x2                   	// #2
   3458c:	movk	x19, #0x8000, lsl #48
   34590:	add	x8, x19, #0x2
   34594:	cmp	x28, x8
   34598:	b.lt	346b0 <mpfr_sin_cos@@Base+0x164>  // b.tstop
   3459c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   345a0:	ldr	x1, [x0, #2640]
   345a4:	add	x0, x0, #0xa50
   345a8:	blr	x1
   345ac:	mrs	x11, tpidr_el0
   345b0:	ldr	w14, [x11, x0]
   345b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   345b8:	ldr	x1, [x0, #2576]
   345bc:	add	x0, x0, #0xa10
   345c0:	blr	x1
   345c4:	ldr	x13, [x11, x0]
   345c8:	mov	x8, x0
   345cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   345d0:	ldr	x1, [x0, #2608]
   345d4:	add	x0, x0, #0xa30
   345d8:	blr	x1
   345dc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   345e0:	str	x9, [x11, x8]
   345e4:	ldr	x9, [sp, #48]
   345e8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   345ec:	ldr	x12, [x11, x0]
   345f0:	str	x10, [x11, x0]
   345f4:	ldr	x8, [x23]
   345f8:	ldr	x9, [x9]
   345fc:	str	x11, [sp, #56]
   34600:	str	x23, [sp, #40]
   34604:	cmp	x8, x9
   34608:	csel	x20, x8, x9, gt
   3460c:	subs	x21, x20, #0x1
   34610:	b.eq	346f0 <mpfr_sin_cos@@Base+0x1a4>  // b.none
   34614:	b.le	34c78 <mpfr_sin_cos@@Base+0x72c>
   34618:	clz	x8, x21
   3461c:	mov	w9, #0x40                  	// #64
   34620:	sub	x8, x9, x8
   34624:	add	x8, x20, x8
   34628:	add	x23, x8, #0xd
   3462c:	tbnz	x28, #63, 34700 <mpfr_sin_cos@@Base+0x1b4>
   34630:	mov	w8, #0x7530                	// #30000
   34634:	cmp	x20, x8
   34638:	b.lt	347cc <mpfr_sin_cos@@Base+0x280>  // b.tstop
   3463c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34640:	ldr	x1, [x0, #2640]
   34644:	add	x0, x0, #0xa50
   34648:	blr	x1
   3464c:	ldr	x8, [sp, #56]
   34650:	str	w14, [x8, x0]
   34654:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34658:	ldr	x1, [x0, #2576]
   3465c:	add	x0, x0, #0xa10
   34660:	blr	x1
   34664:	str	x13, [x8, x0]
   34668:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3466c:	ldr	x1, [x0, #2608]
   34670:	add	x0, x0, #0xa30
   34674:	blr	x1
   34678:	str	x12, [x8, x0]
   3467c:	ldp	x0, x1, [sp, #40]
   34680:	ldr	w3, [sp, #36]
   34684:	mov	x2, x22
   34688:	bl	c060 <mpfr_sincos_fast@plt>
   3468c:	mov	w8, w0
   34690:	b	34c54 <mpfr_sin_cos@@Base+0x708>
   34694:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34698:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3469c:	add	x0, x0, #0x4ad
   346a0:	add	x2, x2, #0x4b7
   346a4:	mov	w1, #0x28                  	// #40
   346a8:	bl	cb20 <mpfr_assert_fail@plt>
   346ac:	b	34584 <mpfr_sin_cos@@Base+0x38>
   346b0:	and	x8, x28, #0xfffffffffffffffe
   346b4:	cmp	x8, x19
   346b8:	b.ne	34cb0 <mpfr_sin_cos@@Base+0x764>  // b.any
   346bc:	ldr	x8, [sp, #48]
   346c0:	str	x19, [x23, #16]
   346c4:	str	x19, [x8, #16]
   346c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   346cc:	ldr	x1, [x0, #2640]
   346d0:	add	x0, x0, #0xa50
   346d4:	blr	x1
   346d8:	mrs	x9, tpidr_el0
   346dc:	ldr	w10, [x9, x0]
   346e0:	mov	w8, wzr
   346e4:	orr	w10, w10, #0x4
   346e8:	str	w10, [x9, x0]
   346ec:	b	34c54 <mpfr_sin_cos@@Base+0x708>
   346f0:	mov	x8, xzr
   346f4:	add	x8, x20, x8
   346f8:	add	x23, x8, #0xd
   346fc:	tbz	x28, #63, 34630 <mpfr_sin_cos@@Base+0xe4>
   34700:	ldr	x8, [sp, #40]
   34704:	neg	x21, x28, lsl #1
   34708:	cmp	x8, x22
   3470c:	b.eq	347a4 <mpfr_sin_cos@@Base+0x258>  // b.none
   34710:	ldr	x8, [x8]
   34714:	add	x2, x21, #0x2
   34718:	add	x8, x8, #0x1
   3471c:	cmp	x2, x8
   34720:	b.ls	347bc <mpfr_sin_cos@@Base+0x270>  // b.plast
   34724:	ldr	x0, [sp, #40]
   34728:	ldr	w4, [sp, #36]
   3472c:	mov	x1, x22
   34730:	mov	w3, wzr
   34734:	stp	x13, x12, [sp, #16]
   34738:	mov	w25, w14
   3473c:	bl	c530 <mpfr_round_near_x@plt>
   34740:	ldp	x13, x12, [sp, #16]
   34744:	mov	w14, w25
   34748:	cbz	w0, 347bc <mpfr_sin_cos@@Base+0x270>
   3474c:	ldr	x8, [sp, #48]
   34750:	orr	x2, x21, #0x1
   34754:	ldr	x8, [x8]
   34758:	add	x8, x8, #0x1
   3475c:	cmp	x2, x8
   34760:	b.ls	347bc <mpfr_sin_cos@@Base+0x270>  // b.plast
   34764:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   34768:	mov	w24, w0
   3476c:	ldr	x1, [x1, #3944]
   34770:	ldr	x0, [sp, #48]
   34774:	ldr	w4, [sp, #36]
   34778:	mov	w3, wzr
   3477c:	bl	c530 <mpfr_round_near_x@plt>
   34780:	ldp	x13, x12, [sp, #16]
   34784:	mov	w14, w25
   34788:	mov	w25, w0
   3478c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34790:	ldr	x1, [x0, #2640]
   34794:	add	x0, x0, #0xa50
   34798:	blr	x1
   3479c:	cbnz	w25, 34dd4 <mpfr_sin_cos@@Base+0x888>
   347a0:	b	347bc <mpfr_sin_cos@@Base+0x270>
   347a4:	ldr	x8, [sp, #48]
   347a8:	orr	x2, x21, #0x1
   347ac:	ldr	x8, [x8]
   347b0:	add	x8, x8, #0x1
   347b4:	cmp	x2, x8
   347b8:	b.hi	34d58 <mpfr_sin_cos@@Base+0x80c>  // b.pmore
   347bc:	sub	x23, x23, x28, lsl #1
   347c0:	mov	w8, #0x7530                	// #30000
   347c4:	cmp	x20, x8
   347c8:	b.ge	3463c <mpfr_sin_cos@@Base+0xf0>  // b.tcont
   347cc:	sub	x0, x29, #0x20
   347d0:	str	w14, [sp, #12]
   347d4:	stp	x13, x12, [sp, #16]
   347d8:	bl	bc20 <mpfr_init@plt>
   347dc:	add	x0, sp, #0x40
   347e0:	bl	bc20 <mpfr_init@plt>
   347e4:	ldr	w8, [sp, #36]
   347e8:	sub	x24, x28, #0x1
   347ec:	mov	w20, #0x40                  	// #64
   347f0:	cmp	w8, #0x0
   347f4:	cset	w21, eq  // eq = none
   347f8:	cmp	x28, #0x2
   347fc:	b.lt	348ac <mpfr_sin_cos@@Base+0x360>  // b.tstop
   34800:	add	x1, x24, x23
   34804:	sub	x0, x29, #0x20
   34808:	bl	bf20 <mpfr_set_prec@plt>
   3480c:	add	x0, sp, #0x40
   34810:	mov	x1, x23
   34814:	bl	bf20 <mpfr_set_prec@plt>
   34818:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3481c:	ldr	x1, [x0, #2688]
   34820:	add	x0, x0, #0xa80
   34824:	blr	x1
   34828:	ldr	x8, [sp, #56]
   3482c:	mov	w2, wzr
   34830:	add	x1, x8, x0
   34834:	sub	x0, x29, #0x20
   34838:	bl	c380 <mpfr_cache@plt>
   3483c:	sub	x0, x29, #0x20
   34840:	sub	x1, x29, #0x20
   34844:	mov	w2, #0x1                   	// #1
   34848:	mov	w3, wzr
   3484c:	bl	c2c0 <mpfr_mul_2ui@plt>
   34850:	add	x0, sp, #0x40
   34854:	sub	x2, x29, #0x20
   34858:	mov	x1, x22
   3485c:	mov	w3, wzr
   34860:	bl	ccf0 <mpfr_remainder@plt>
   34864:	sub	x0, x29, #0x20
   34868:	sub	x1, x29, #0x20
   3486c:	mov	w2, #0x1                   	// #1
   34870:	mov	w3, wzr
   34874:	bl	c8f0 <mpfr_div_2ui@plt>
   34878:	ldr	w8, [sp, #72]
   3487c:	sub	x0, x29, #0x20
   34880:	sub	x1, x29, #0x20
   34884:	add	x2, sp, #0x40
   34888:	mov	w3, #0x1                   	// #1
   3488c:	cmp	w8, #0x1
   34890:	b.lt	349c0 <mpfr_sin_cos@@Base+0x474>  // b.tstop
   34894:	bl	bbc0 <mpfr_sub@plt>
   34898:	ldr	x8, [sp, #80]
   3489c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   348a0:	cmp	x8, x9
   348a4:	b.ne	349d4 <mpfr_sin_cos@@Base+0x488>  // b.any
   348a8:	b	34a80 <mpfr_sin_cos@@Base+0x534>
   348ac:	mov	w25, wzr
   348b0:	mov	x26, x22
   348b4:	ldr	w27, [x26, #8]
   348b8:	sub	x0, x29, #0x20
   348bc:	mov	x1, x23
   348c0:	bl	bf20 <mpfr_set_prec@plt>
   348c4:	sub	x0, x29, #0x20
   348c8:	mov	w2, #0x1                   	// #1
   348cc:	mov	x1, x26
   348d0:	bl	c420 <mpfr_cos@plt>
   348d4:	ldur	x8, [x29, #-16]
   348d8:	add	x9, x19, #0x2
   348dc:	cmp	x8, x9
   348e0:	b.lt	34a80 <mpfr_sin_cos@@Base+0x534>  // b.tstop
   348e4:	ldur	x9, [x29, #-32]
   348e8:	ldr	x10, [sp, #48]
   348ec:	add	x8, x23, x8
   348f0:	cmp	w25, #0x0
   348f4:	sub	x8, x8, #0x3
   348f8:	ldr	x10, [x10]
   348fc:	csel	x2, x23, x8, eq  // eq = none
   34900:	sub	x8, x9, #0x1
   34904:	ldur	x0, [x29, #-8]
   34908:	add	x9, x9, #0x3e
   3490c:	cmp	x8, #0x0
   34910:	csel	x8, x9, x8, lt  // lt = tstop
   34914:	asr	x8, x8, #6
   34918:	add	x1, x8, #0x1
   3491c:	add	x3, x10, x21
   34920:	bl	c370 <mpfr_round_p@plt>
   34924:	cbz	w0, 34a80 <mpfr_sin_cos@@Base+0x534>
   34928:	ldur	x1, [x29, #-32]
   3492c:	add	x0, sp, #0x40
   34930:	bl	bf20 <mpfr_set_prec@plt>
   34934:	add	x0, sp, #0x40
   34938:	sub	x1, x29, #0x20
   3493c:	bl	c490 <mpfr_swap@plt>
   34940:	sub	x0, x29, #0x20
   34944:	add	x1, sp, #0x40
   34948:	mov	w2, #0x2                   	// #2
   3494c:	bl	c3f0 <mpfr_sqr@plt>
   34950:	sub	x0, x29, #0x20
   34954:	sub	x2, x29, #0x20
   34958:	mov	w1, #0x1                   	// #1
   3495c:	mov	w3, wzr
   34960:	bl	ca30 <mpfr_ui_sub@plt>
   34964:	sub	x0, x29, #0x20
   34968:	sub	x1, x29, #0x20
   3496c:	mov	w2, wzr
   34970:	bl	c920 <mpfr_sqrt@plt>
   34974:	ldur	x8, [x29, #-16]
   34978:	bfi	w25, w25, #1, #1
   3497c:	add	w9, w25, #0x3
   34980:	tbz	w27, #31, 34990 <mpfr_sin_cos@@Base+0x444>
   34984:	ldur	w10, [x29, #-24]
   34988:	neg	w10, w10
   3498c:	stur	w10, [x29, #-24]
   34990:	add	x10, x8, x23
   34994:	sub	x9, x8, x9
   34998:	add	x11, x19, #0x2
   3499c:	cmp	x8, x11
   349a0:	add	x26, x10, x9
   349a4:	b.ge	349fc <mpfr_sin_cos@@Base+0x4b0>  // b.tcont
   349a8:	ldr	x8, [sp, #40]
   349ac:	ldr	x8, [x8]
   349b0:	subs	x8, x8, x26
   349b4:	csel	x8, x8, xzr, gt
   349b8:	add	x23, x8, x23
   349bc:	b	34a80 <mpfr_sin_cos@@Base+0x534>
   349c0:	bl	c1e0 <mpfr_add@plt>
   349c4:	ldr	x8, [sp, #80]
   349c8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   349cc:	cmp	x8, x9
   349d0:	b.eq	34a80 <mpfr_sin_cos@@Base+0x534>  // b.none
   349d4:	mov	w9, #0x3                   	// #3
   349d8:	sub	x9, x9, x23
   349dc:	cmp	x8, x9
   349e0:	b.lt	34a80 <mpfr_sin_cos@@Base+0x534>  // b.tstop
   349e4:	ldur	x8, [x29, #-16]
   349e8:	cmp	x8, x9
   349ec:	b.lt	34a80 <mpfr_sin_cos@@Base+0x534>  // b.tstop
   349f0:	add	x26, sp, #0x40
   349f4:	mov	w25, #0x1                   	// #1
   349f8:	b	348b4 <mpfr_sin_cos@@Base+0x368>
   349fc:	ldur	x8, [x29, #-32]
   34a00:	ldr	x27, [sp, #40]
   34a04:	ldur	x0, [x29, #-8]
   34a08:	mov	x2, x26
   34a0c:	sub	x10, x8, #0x1
   34a10:	ldr	x9, [x27]
   34a14:	add	x8, x8, #0x3e
   34a18:	cmp	x10, #0x0
   34a1c:	csel	x8, x8, x10, lt  // lt = tstop
   34a20:	asr	x8, x8, #6
   34a24:	add	x1, x8, #0x1
   34a28:	add	x3, x9, x21
   34a2c:	bl	c370 <mpfr_round_p@plt>
   34a30:	cbnz	w0, 34ad4 <mpfr_sin_cos@@Base+0x588>
   34a34:	ldr	x8, [x27]
   34a38:	ldur	x9, [x29, #-16]
   34a3c:	subs	x8, x8, x26
   34a40:	csel	x8, x8, xzr, gt
   34a44:	cmp	x9, #0x1
   34a48:	add	x23, x8, x23
   34a4c:	b.ne	34a80 <mpfr_sin_cos@@Base+0x534>  // b.any
   34a50:	ldur	x8, [x29, #-32]
   34a54:	ldur	x9, [x29, #-8]
   34a58:	sub	x10, x8, #0x1
   34a5c:	add	x8, x8, #0x3e
   34a60:	cmp	x10, #0x0
   34a64:	csel	x8, x8, x10, lt  // lt = tstop
   34a68:	asr	x8, x8, #6
   34a6c:	ldr	x8, [x9, x8, lsl #3]
   34a70:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   34a74:	cmp	x8, x9
   34a78:	cset	w8, eq  // eq = none
   34a7c:	lsl	x23, x23, x8
   34a80:	sub	x8, x19, x23
   34a84:	sub	x8, x8, #0x103
   34a88:	cmp	x20, x8
   34a8c:	b.gt	34ab8 <mpfr_sin_cos@@Base+0x56c>
   34a90:	add	x23, x23, x20
   34a94:	cmp	x23, #0x0
   34a98:	cinc	x8, x23, lt  // lt = tstop
   34a9c:	sub	x0, x29, #0x20
   34aa0:	mov	x1, x23
   34aa4:	asr	x20, x8, #1
   34aa8:	bl	bf20 <mpfr_set_prec@plt>
   34aac:	cmp	x28, #0x2
   34ab0:	b.lt	348ac <mpfr_sin_cos@@Base+0x360>  // b.tstop
   34ab4:	b	34800 <mpfr_sin_cos@@Base+0x2b4>
   34ab8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34abc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34ac0:	mov	w1, #0xd2                  	// #210
   34ac4:	add	x0, x0, #0x4ad
   34ac8:	add	x2, x2, #0x287
   34acc:	bl	cb20 <mpfr_assert_fail@plt>
   34ad0:	b	34a90 <mpfr_sin_cos@@Base+0x544>
   34ad4:	ldr	w19, [sp, #36]
   34ad8:	ldur	w3, [x29, #-24]
   34adc:	sub	x1, x29, #0x20
   34ae0:	mov	x0, x27
   34ae4:	mov	w2, w19
   34ae8:	bl	c690 <mpfr_set4@plt>
   34aec:	ldr	w3, [sp, #72]
   34af0:	mov	w24, w0
   34af4:	ldr	x0, [sp, #48]
   34af8:	add	x1, sp, #0x40
   34afc:	mov	w2, w19
   34b00:	bl	c690 <mpfr_set4@plt>
   34b04:	mov	w25, w0
   34b08:	sub	x0, x29, #0x20
   34b0c:	bl	c0b0 <mpfr_clear@plt>
   34b10:	add	x0, sp, #0x40
   34b14:	bl	c0b0 <mpfr_clear@plt>
   34b18:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34b1c:	ldr	x1, [x0, #2640]
   34b20:	add	x0, x0, #0xa50
   34b24:	blr	x1
   34b28:	ldr	x8, [sp, #56]
   34b2c:	ldr	w9, [sp, #12]
   34b30:	str	w9, [x8, x0]
   34b34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34b38:	ldr	x1, [x0, #2576]
   34b3c:	add	x0, x0, #0xa10
   34b40:	blr	x1
   34b44:	ldr	x11, [sp, #16]
   34b48:	str	x11, [x8, x0]
   34b4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34b50:	ldr	x1, [x0, #2608]
   34b54:	add	x0, x0, #0xa30
   34b58:	blr	x1
   34b5c:	ldr	x10, [sp, #24]
   34b60:	str	x10, [x8, x0]
   34b64:	ldr	x8, [x27, #16]
   34b68:	cmp	x8, x10
   34b6c:	b.gt	34cf0 <mpfr_sin_cos@@Base+0x7a4>
   34b70:	cmp	x8, x11
   34b74:	b.lt	34cf0 <mpfr_sin_cos@@Base+0x7a4>  // b.tstop
   34b78:	cbz	w24, 34b98 <mpfr_sin_cos@@Base+0x64c>
   34b7c:	orr	w8, w9, #0x8
   34b80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34b84:	ldr	x1, [x0, #2640]
   34b88:	add	x0, x0, #0xa50
   34b8c:	blr	x1
   34b90:	ldr	x9, [sp, #56]
   34b94:	str	w8, [x9, x0]
   34b98:	ldr	x8, [sp, #48]
   34b9c:	ldr	x8, [x8, #16]
   34ba0:	cmp	x8, x11
   34ba4:	b.lt	34d40 <mpfr_sin_cos@@Base+0x7f4>  // b.tstop
   34ba8:	cmp	x8, x10
   34bac:	b.gt	34d40 <mpfr_sin_cos@@Base+0x7f4>
   34bb0:	cbz	w25, 34c0c <mpfr_sin_cos@@Base+0x6c0>
   34bb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34bb8:	ldr	x1, [x0, #2640]
   34bbc:	add	x0, x0, #0xa50
   34bc0:	blr	x1
   34bc4:	ldr	x9, [sp, #56]
   34bc8:	ldr	w8, [x9, x0]
   34bcc:	orr	w8, w8, #0x8
   34bd0:	str	w8, [x9, x0]
   34bd4:	cmp	w24, #0x1
   34bd8:	mov	w8, #0x1                   	// #1
   34bdc:	cinc	w8, w8, lt  // lt = tstop
   34be0:	cmp	w24, #0x0
   34be4:	csel	w8, wzr, w8, eq  // eq = none
   34be8:	cmp	w25, #0x0
   34bec:	cset	w9, eq  // eq = none
   34bf0:	b.le	34c20 <mpfr_sin_cos@@Base+0x6d4>
   34bf4:	mov	w10, #0x4                   	// #4
   34bf8:	cmp	w9, #0x0
   34bfc:	csel	w9, wzr, w10, ne  // ne = any
   34c00:	orr	w8, w9, w8
   34c04:	cbnz	w8, 34c34 <mpfr_sin_cos@@Base+0x6e8>
   34c08:	b	34c54 <mpfr_sin_cos@@Base+0x708>
   34c0c:	cmp	w24, #0x1
   34c10:	mov	w9, #0x1                   	// #1
   34c14:	cinc	w8, w9, lt  // lt = tstop
   34c18:	cmp	w24, #0x0
   34c1c:	csel	w8, wzr, w8, eq  // eq = none
   34c20:	mov	w10, #0x8                   	// #8
   34c24:	cmp	w9, #0x0
   34c28:	csel	w9, wzr, w10, ne  // ne = any
   34c2c:	orr	w8, w9, w8
   34c30:	cbz	w8, 34c54 <mpfr_sin_cos@@Base+0x708>
   34c34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34c38:	ldr	x1, [x0, #2640]
   34c3c:	add	x0, x0, #0xa50
   34c40:	blr	x1
   34c44:	ldr	x10, [sp, #56]
   34c48:	ldr	w9, [x10, x0]
   34c4c:	orr	w9, w9, #0x8
   34c50:	str	w9, [x10, x0]
   34c54:	ldp	x20, x19, [sp, #208]
   34c58:	ldp	x22, x21, [sp, #192]
   34c5c:	ldp	x24, x23, [sp, #176]
   34c60:	ldp	x26, x25, [sp, #160]
   34c64:	ldp	x28, x27, [sp, #144]
   34c68:	ldp	x29, x30, [sp, #128]
   34c6c:	mov	w0, w8
   34c70:	add	sp, sp, #0xe0
   34c74:	ret
   34c78:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34c7c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   34c80:	add	x0, x0, #0x4ad
   34c84:	add	x2, x2, #0x60d
   34c88:	mov	w1, #0x47                  	// #71
   34c8c:	mov	x23, x12
   34c90:	mov	x24, x13
   34c94:	mov	w25, w14
   34c98:	bl	cb20 <mpfr_assert_fail@plt>
   34c9c:	ldr	x28, [x22, #16]
   34ca0:	mov	w14, w25
   34ca4:	mov	x13, x24
   34ca8:	mov	x12, x23
   34cac:	b	34618 <mpfr_sin_cos@@Base+0xcc>
   34cb0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34cb4:	str	x8, [x23, #16]
   34cb8:	ldr	w8, [x22, #8]
   34cbc:	ldr	x0, [sp, #48]
   34cc0:	ldr	w3, [sp, #36]
   34cc4:	mov	w1, #0x1                   	// #1
   34cc8:	mov	x2, xzr
   34ccc:	str	w8, [x23, #8]
   34cd0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   34cd4:	cmp	w0, #0x1
   34cd8:	mov	w8, #0x4                   	// #4
   34cdc:	mov	w9, #0x8                   	// #8
   34ce0:	csel	w8, w9, w8, lt  // lt = tstop
   34ce4:	cmp	w0, #0x0
   34ce8:	csel	w8, wzr, w8, eq  // eq = none
   34cec:	b	34c54 <mpfr_sin_cos@@Base+0x708>
   34cf0:	ldr	w2, [sp, #36]
   34cf4:	mov	x0, x27
   34cf8:	mov	w1, w24
   34cfc:	bl	cb10 <mpfr_check_range@plt>
   34d00:	mov	w24, w0
   34d04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34d08:	ldr	x1, [x0, #2576]
   34d0c:	add	x0, x0, #0xa10
   34d10:	blr	x1
   34d14:	ldr	x8, [sp, #56]
   34d18:	ldr	x11, [x8, x0]
   34d1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34d20:	ldr	x1, [x0, #2608]
   34d24:	add	x0, x0, #0xa30
   34d28:	blr	x1
   34d2c:	ldr	x10, [x8, x0]
   34d30:	ldr	x8, [sp, #48]
   34d34:	ldr	x8, [x8, #16]
   34d38:	cmp	x8, x11
   34d3c:	b.ge	34ba8 <mpfr_sin_cos@@Base+0x65c>  // b.tcont
   34d40:	ldr	x0, [sp, #48]
   34d44:	ldr	w2, [sp, #36]
   34d48:	mov	w1, w25
   34d4c:	bl	cb10 <mpfr_check_range@plt>
   34d50:	mov	w25, w0
   34d54:	b	34bd4 <mpfr_sin_cos@@Base+0x688>
   34d58:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   34d5c:	ldr	x1, [x1, #3944]
   34d60:	ldr	x0, [sp, #48]
   34d64:	ldr	w4, [sp, #36]
   34d68:	mov	w3, wzr
   34d6c:	stp	x13, x12, [sp, #16]
   34d70:	mov	w24, w14
   34d74:	bl	c530 <mpfr_round_near_x@plt>
   34d78:	ldp	x13, x12, [sp, #16]
   34d7c:	mov	w14, w24
   34d80:	cbz	w0, 347bc <mpfr_sin_cos@@Base+0x270>
   34d84:	ldr	x8, [sp, #40]
   34d88:	add	x2, x21, #0x2
   34d8c:	ldr	x8, [x8]
   34d90:	add	x8, x8, #0x1
   34d94:	cmp	x2, x8
   34d98:	b.ls	347bc <mpfr_sin_cos@@Base+0x270>  // b.plast
   34d9c:	mov	w25, w0
   34da0:	ldr	x0, [sp, #40]
   34da4:	ldr	w4, [sp, #36]
   34da8:	mov	w3, wzr
   34dac:	mov	x1, x0
   34db0:	bl	c530 <mpfr_round_near_x@plt>
   34db4:	ldp	x13, x12, [sp, #16]
   34db8:	mov	w14, w24
   34dbc:	mov	w24, w0
   34dc0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34dc4:	ldr	x1, [x0, #2640]
   34dc8:	add	x0, x0, #0xa50
   34dcc:	blr	x1
   34dd0:	cbz	w24, 347bc <mpfr_sin_cos@@Base+0x270>
   34dd4:	ldr	x8, [sp, #56]
   34dd8:	ldr	x27, [sp, #40]
   34ddc:	ldr	w8, [x8, x0]
   34de0:	orr	w14, w8, w14
   34de4:	str	w14, [sp, #12]
   34de8:	b	34b18 <mpfr_sin_cos@@Base+0x5cc>

0000000000034dec <mpfr_sincos_fast@@Base>:
   34dec:	sub	sp, sp, #0x190
   34df0:	stp	x26, x25, [sp, #336]
   34df4:	stp	x22, x21, [sp, #368]
   34df8:	stp	x20, x19, [sp, #384]
   34dfc:	mov	w25, w3
   34e00:	mov	x20, x1
   34e04:	mov	x21, x0
   34e08:	cmp	x0, x1
   34e0c:	mov	x22, x2
   34e10:	stp	x29, x30, [sp, #304]
   34e14:	stp	x28, x27, [sp, #320]
   34e18:	stp	x24, x23, [sp, #352]
   34e1c:	add	x29, sp, #0x130
   34e20:	b.eq	34e40 <mpfr_sincos_fast@@Base+0x54>  // b.none
   34e24:	cbz	x21, 34e5c <mpfr_sincos_fast@@Base+0x70>
   34e28:	ldr	x19, [x21]
   34e2c:	cbz	x20, 34e60 <mpfr_sincos_fast@@Base+0x74>
   34e30:	ldr	x8, [x20]
   34e34:	cmp	x19, x8
   34e38:	csel	x19, x8, x19, lt  // lt = tstop
   34e3c:	b	34e60 <mpfr_sincos_fast@@Base+0x74>
   34e40:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34e44:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   34e48:	add	x0, x0, #0x4ad
   34e4c:	add	x2, x2, #0x4be
   34e50:	mov	w1, #0x247                 	// #583
   34e54:	bl	cb20 <mpfr_assert_fail@plt>
   34e58:	cbnz	x21, 34e28 <mpfr_sincos_fast@@Base+0x3c>
   34e5c:	ldr	x19, [x20]
   34e60:	subs	x23, x19, #0x1
   34e64:	b.eq	352bc <mpfr_sincos_fast@@Base+0x4d0>  // b.none
   34e68:	b.le	352c4 <mpfr_sincos_fast@@Base+0x4d8>
   34e6c:	clz	x8, x23
   34e70:	mov	w9, #0x49                  	// #73
   34e74:	sub	x8, x9, x8
   34e78:	mov	x27, #0xfffffffffffffeff    	// #-257
   34e7c:	movk	x27, #0x7fff, lsl #48
   34e80:	add	x23, x8, x19
   34e84:	cmp	x23, x27
   34e88:	b.gt	352e0 <mpfr_sincos_fast@@Base+0x4f4>
   34e8c:	sub	x8, x23, #0x1
   34e90:	add	x9, x23, #0x3e
   34e94:	cmp	x8, #0x0
   34e98:	csel	x8, x9, x8, lt  // lt = tstop
   34e9c:	asr	x8, x8, #6
   34ea0:	cmp	x23, #0x201
   34ea4:	add	x19, x8, #0x1
   34ea8:	b.lt	34ebc <mpfr_sincos_fast@@Base+0xd0>  // b.tstop
   34eac:	lsl	x24, x19, #4
   34eb0:	mov	x0, x24
   34eb4:	bl	ccd0 <mpfr_allocate_func@plt>
   34eb8:	b	34ec8 <mpfr_sincos_fast@@Base+0xdc>
   34ebc:	add	x8, sp, #0x38
   34ec0:	mov	x24, xzr
   34ec4:	add	x0, x8, #0x10
   34ec8:	cmp	w25, #0x0
   34ecc:	stp	x24, x0, [sp, #56]
   34ed0:	mov	w28, #0x1                   	// #1
   34ed4:	add	x8, x0, x19, lsl #3
   34ed8:	str	w25, [sp, #12]
   34edc:	mov	w24, #0x40                  	// #64
   34ee0:	cset	w25, eq  // eq = none
   34ee4:	stur	x0, [x29, #-48]
   34ee8:	stur	w28, [x29, #-64]
   34eec:	stur	x23, [x29, #-104]
   34ef0:	stp	x8, x23, [x29, #-80]
   34ef4:	b	34f18 <mpfr_sincos_fast@@Base+0x12c>
   34ef8:	ldr	x0, [sp, #64]
   34efc:	bl	c200 <mpfr_reallocate_func@plt>
   34f00:	add	x8, x0, x19, lsl #3
   34f04:	str	x0, [sp, #64]
   34f08:	stur	x0, [x29, #-48]
   34f0c:	stur	w28, [x29, #-64]
   34f10:	stur	x23, [x29, #-104]
   34f14:	stp	x8, x23, [x29, #-80]
   34f18:	stur	w28, [x29, #-96]
   34f1c:	ldr	w8, [x22, #8]
   34f20:	cmp	w8, #0x1
   34f24:	b.lt	34f48 <mpfr_sincos_fast@@Base+0x15c>  // b.tstop
   34f28:	mov	w1, #0xed51                	// #60753
   34f2c:	movk	w1, #0x6487, lsl #16
   34f30:	mov	x2, #0xffffffffffffffe1    	// #-31
   34f34:	mov	x0, x22
   34f38:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   34f3c:	cmp	w0, #0x0
   34f40:	b.le	350a0 <mpfr_sincos_fast@@Base+0x2b4>
   34f44:	ldr	w8, [x22, #8]
   34f48:	tbnz	w8, #31, 35048 <mpfr_sincos_fast@@Base+0x25c>
   34f4c:	sub	x0, x29, #0x28
   34f50:	mov	x1, x23
   34f54:	bl	ca60 <mpfr_init2@plt>
   34f58:	ldr	x8, [x22, #16]
   34f5c:	add	x0, sp, #0x10
   34f60:	bic	x8, x8, x8, asr #63
   34f64:	add	x1, x8, x23
   34f68:	bl	ca60 <mpfr_init2@plt>
   34f6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   34f70:	ldr	x1, [x0, #2688]
   34f74:	add	x0, x0, #0xa80
   34f78:	blr	x1
   34f7c:	mrs	x8, tpidr_el0
   34f80:	add	x1, x8, x0
   34f84:	add	x0, sp, #0x10
   34f88:	mov	w2, wzr
   34f8c:	bl	c380 <mpfr_cache@plt>
   34f90:	add	x0, sp, #0x10
   34f94:	add	x1, sp, #0x10
   34f98:	mov	w2, #0x1                   	// #1
   34f9c:	mov	w3, wzr
   34fa0:	bl	c8f0 <mpfr_div_2ui@plt>
   34fa4:	sub	x0, x29, #0x28
   34fa8:	add	x1, sp, #0x30
   34fac:	add	x3, sp, #0x10
   34fb0:	mov	x2, x22
   34fb4:	mov	w4, wzr
   34fb8:	bl	c500 <mpfr_remquo@plt>
   34fbc:	ldur	w8, [x29, #-32]
   34fc0:	tbnz	w8, #31, 351a8 <mpfr_sincos_fast@@Base+0x3bc>
   34fc4:	sub	x0, x29, #0x48
   34fc8:	sub	x1, x29, #0x68
   34fcc:	sub	x2, x29, #0x28
   34fd0:	bl	352e4 <mpfr_sincos_fast@@Base+0x4f8>
   34fd4:	mov	w26, w0
   34fd8:	ldr	x8, [sp, #48]
   34fdc:	sxtw	x19, w26
   34fe0:	tbz	w8, #1, 35008 <mpfr_sincos_fast@@Base+0x21c>
   34fe4:	sub	x0, x29, #0x48
   34fe8:	sub	x1, x29, #0x48
   34fec:	mov	w2, wzr
   34ff0:	bl	bdc0 <mpfr_neg@plt>
   34ff4:	sub	x0, x29, #0x68
   34ff8:	sub	x1, x29, #0x68
   34ffc:	mov	w2, wzr
   35000:	bl	bdc0 <mpfr_neg@plt>
   35004:	ldr	x8, [sp, #48]
   35008:	add	x26, x19, #0x1
   3500c:	tbz	w8, #0, 3502c <mpfr_sincos_fast@@Base+0x240>
   35010:	sub	x0, x29, #0x48
   35014:	sub	x1, x29, #0x48
   35018:	mov	w2, wzr
   3501c:	bl	bdc0 <mpfr_neg@plt>
   35020:	sub	x0, x29, #0x48
   35024:	sub	x1, x29, #0x68
   35028:	bl	c490 <mpfr_swap@plt>
   3502c:	sub	x0, x29, #0x28
   35030:	bl	c0b0 <mpfr_clear@plt>
   35034:	add	x0, sp, #0x10
   35038:	bl	c0b0 <mpfr_clear@plt>
   3503c:	ldur	x19, [x29, #-88]
   35040:	cbnz	x21, 350bc <mpfr_sincos_fast@@Base+0x2d0>
   35044:	b	35104 <mpfr_sincos_fast@@Base+0x318>
   35048:	mov	x1, #0xffffffffffff12af    	// #-60753
   3504c:	movk	x1, #0x9b78, lsl #16
   35050:	mov	x2, #0xffffffffffffffe1    	// #-31
   35054:	mov	x0, x22
   35058:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3505c:	tbnz	w0, #31, 34f4c <mpfr_sincos_fast@@Base+0x160>
   35060:	ldr	x8, [x22]
   35064:	stur	w28, [x29, #-32]
   35068:	sub	x0, x29, #0x48
   3506c:	sub	x1, x29, #0x68
   35070:	stur	x8, [x29, #-40]
   35074:	ldr	q0, [x22, #16]
   35078:	sub	x2, x29, #0x28
   3507c:	stur	q0, [x29, #-24]
   35080:	bl	352e4 <mpfr_sincos_fast@@Base+0x4f8>
   35084:	ldur	w8, [x29, #-64]
   35088:	sxtw	x26, w0
   3508c:	neg	w8, w8
   35090:	stur	w8, [x29, #-64]
   35094:	ldur	x19, [x29, #-88]
   35098:	cbnz	x21, 350bc <mpfr_sincos_fast@@Base+0x2d0>
   3509c:	b	35104 <mpfr_sincos_fast@@Base+0x318>
   350a0:	sub	x0, x29, #0x48
   350a4:	sub	x1, x29, #0x68
   350a8:	mov	x2, x22
   350ac:	bl	352e4 <mpfr_sincos_fast@@Base+0x4f8>
   350b0:	sxtw	x26, w0
   350b4:	ldur	x19, [x29, #-88]
   350b8:	cbz	x21, 35104 <mpfr_sincos_fast@@Base+0x318>
   350bc:	ldur	x8, [x29, #-56]
   350c0:	add	x9, x27, #0x105
   350c4:	cmp	x8, x9
   350c8:	b.lt	35150 <mpfr_sincos_fast@@Base+0x364>  // b.tstop
   350cc:	ldur	x9, [x29, #-72]
   350d0:	sub	x10, x23, x26
   350d4:	ldr	x11, [x21]
   350d8:	add	x2, x10, x8
   350dc:	sub	x8, x9, #0x1
   350e0:	ldur	x0, [x29, #-48]
   350e4:	add	x9, x9, #0x3e
   350e8:	cmp	x8, #0x0
   350ec:	csel	x8, x9, x8, lt  // lt = tstop
   350f0:	asr	x8, x8, #6
   350f4:	add	x1, x8, #0x1
   350f8:	add	x3, x11, x25
   350fc:	bl	c370 <mpfr_round_p@plt>
   35100:	cbz	w0, 35150 <mpfr_sincos_fast@@Base+0x364>
   35104:	cbz	x20, 35208 <mpfr_sincos_fast@@Base+0x41c>
   35108:	ldur	x8, [x29, #-88]
   3510c:	add	x9, x27, #0x105
   35110:	cmp	x8, x9
   35114:	b.lt	35150 <mpfr_sincos_fast@@Base+0x364>  // b.tstop
   35118:	ldur	x8, [x29, #-104]
   3511c:	sub	x9, x23, x26
   35120:	ldr	x10, [x20]
   35124:	add	x2, x9, x19
   35128:	sub	x9, x8, #0x1
   3512c:	ldur	x0, [x29, #-80]
   35130:	add	x8, x8, #0x3e
   35134:	cmp	x9, #0x0
   35138:	csel	x8, x8, x9, lt  // lt = tstop
   3513c:	asr	x8, x8, #6
   35140:	add	x1, x8, #0x1
   35144:	add	x3, x10, x25
   35148:	bl	c370 <mpfr_round_p@plt>
   3514c:	cbnz	w0, 35208 <mpfr_sincos_fast@@Base+0x41c>
   35150:	sub	x8, x27, x23
   35154:	cmp	x24, x8
   35158:	b.gt	351ec <mpfr_sincos_fast@@Base+0x400>
   3515c:	add	x23, x23, x24
   35160:	cmp	x23, #0x0
   35164:	cinc	x8, x23, lt  // lt = tstop
   35168:	cmp	x23, x27
   3516c:	b.gt	352e0 <mpfr_sincos_fast@@Base+0x4f4>
   35170:	asr	x24, x8, #1
   35174:	sub	x8, x23, #0x1
   35178:	add	x9, x23, #0x3e
   3517c:	cmp	x8, #0x0
   35180:	ldr	x1, [sp, #56]
   35184:	csel	x8, x9, x8, lt  // lt = tstop
   35188:	asr	x8, x8, #6
   3518c:	add	x19, x8, #0x1
   35190:	lsl	x2, x19, #4
   35194:	str	x2, [sp, #56]
   35198:	cbnz	x1, 34ef8 <mpfr_sincos_fast@@Base+0x10c>
   3519c:	mov	x0, x2
   351a0:	bl	ccd0 <mpfr_allocate_func@plt>
   351a4:	b	34f00 <mpfr_sincos_fast@@Base+0x114>
   351a8:	sub	x0, x29, #0x28
   351ac:	sub	x1, x29, #0x28
   351b0:	mov	w2, wzr
   351b4:	bl	bdc0 <mpfr_neg@plt>
   351b8:	sub	x0, x29, #0x48
   351bc:	sub	x1, x29, #0x68
   351c0:	sub	x2, x29, #0x28
   351c4:	bl	352e4 <mpfr_sincos_fast@@Base+0x4f8>
   351c8:	mov	w26, w0
   351cc:	sub	x0, x29, #0x48
   351d0:	sub	x1, x29, #0x48
   351d4:	mov	w2, wzr
   351d8:	bl	bdc0 <mpfr_neg@plt>
   351dc:	ldr	x8, [sp, #48]
   351e0:	sxtw	x19, w26
   351e4:	tbnz	w8, #1, 34fe4 <mpfr_sincos_fast@@Base+0x1f8>
   351e8:	b	35008 <mpfr_sincos_fast@@Base+0x21c>
   351ec:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   351f0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   351f4:	mov	w1, #0x28f                 	// #655
   351f8:	add	x0, x0, #0x4ad
   351fc:	add	x2, x2, #0x6c6
   35200:	bl	cb20 <mpfr_assert_fail@plt>
   35204:	b	3515c <mpfr_sincos_fast@@Base+0x370>
   35208:	cbz	x21, 352a4 <mpfr_sincos_fast@@Base+0x4b8>
   3520c:	ldr	w19, [sp, #12]
   35210:	ldur	w3, [x29, #-64]
   35214:	sub	x1, x29, #0x48
   35218:	mov	x0, x21
   3521c:	mov	w2, w19
   35220:	bl	c690 <mpfr_set4@plt>
   35224:	mov	w21, w0
   35228:	cbz	x20, 352ac <mpfr_sincos_fast@@Base+0x4c0>
   3522c:	ldur	w3, [x29, #-96]
   35230:	sub	x1, x29, #0x68
   35234:	mov	x0, x20
   35238:	mov	w2, w19
   3523c:	bl	c690 <mpfr_set4@plt>
   35240:	mov	w19, w0
   35244:	ldr	x1, [sp, #56]
   35248:	cbz	x1, 35254 <mpfr_sincos_fast@@Base+0x468>
   3524c:	ldr	x0, [sp, #64]
   35250:	bl	cc00 <mpfr_free_func@plt>
   35254:	cmp	w21, #0x1
   35258:	mov	w8, #0x1                   	// #1
   3525c:	cinc	w8, w8, lt  // lt = tstop
   35260:	cmp	w21, #0x0
   35264:	mov	w9, #0x4                   	// #4
   35268:	mov	w10, #0x8                   	// #8
   3526c:	csel	w8, wzr, w8, eq  // eq = none
   35270:	cmp	w19, #0x1
   35274:	csel	w9, w10, w9, lt  // lt = tstop
   35278:	cmp	w19, #0x0
   3527c:	ldp	x20, x19, [sp, #384]
   35280:	ldp	x22, x21, [sp, #368]
   35284:	ldp	x24, x23, [sp, #352]
   35288:	ldp	x26, x25, [sp, #336]
   3528c:	ldp	x28, x27, [sp, #320]
   35290:	ldp	x29, x30, [sp, #304]
   35294:	csel	w9, wzr, w9, eq  // eq = none
   35298:	orr	w0, w9, w8
   3529c:	add	sp, sp, #0x190
   352a0:	ret
   352a4:	ldr	w19, [sp, #12]
   352a8:	cbnz	x20, 3522c <mpfr_sincos_fast@@Base+0x440>
   352ac:	mov	w19, wzr
   352b0:	ldr	x1, [sp, #56]
   352b4:	cbnz	x1, 3524c <mpfr_sincos_fast@@Base+0x460>
   352b8:	b	35254 <mpfr_sincos_fast@@Base+0x468>
   352bc:	mov	w8, #0x9                   	// #9
   352c0:	b	34e78 <mpfr_sincos_fast@@Base+0x8c>
   352c4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   352c8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   352cc:	add	x0, x0, #0x4ad
   352d0:	add	x2, x2, #0x4c5
   352d4:	mov	w1, #0x24e                 	// #590
   352d8:	bl	cb20 <mpfr_assert_fail@plt>
   352dc:	b	34e6c <mpfr_sincos_fast@@Base+0x80>
   352e0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   352e4:	stp	x29, x30, [sp, #-96]!
   352e8:	stp	x28, x27, [sp, #16]
   352ec:	stp	x26, x25, [sp, #32]
   352f0:	stp	x24, x23, [sp, #48]
   352f4:	stp	x22, x21, [sp, #64]
   352f8:	stp	x20, x19, [sp, #80]
   352fc:	mov	x29, sp
   35300:	sub	sp, sp, #0x1, lsl #12
   35304:	sub	sp, sp, #0x590
   35308:	stp	x0, x1, [sp]
   3530c:	ldr	x8, [x2]
   35310:	ldr	x27, [x0]
   35314:	add	x0, sp, #0xe8
   35318:	mov	x19, x2
   3531c:	mov	x1, x8
   35320:	bl	ca60 <mpfr_init2@plt>
   35324:	add	x0, sp, #0x168
   35328:	bl	bfe0 <mpfr_mpz_init@plt>
   3532c:	add	x0, sp, #0x158
   35330:	bl	bfe0 <mpfr_mpz_init@plt>
   35334:	add	x0, sp, #0x148
   35338:	bl	bfe0 <mpfr_mpz_init@plt>
   3533c:	add	x0, sp, #0x138
   35340:	bl	bfe0 <mpfr_mpz_init@plt>
   35344:	add	x0, sp, #0x128
   35348:	bl	bfe0 <mpfr_mpz_init@plt>
   3534c:	add	x0, sp, #0x118
   35350:	bl	bfe0 <mpfr_mpz_init@plt>
   35354:	add	x0, sp, #0x108
   35358:	bl	bfe0 <mpfr_mpz_init@plt>
   3535c:	ldr	w3, [x19, #8]
   35360:	add	x0, sp, #0xe8
   35364:	mov	x1, x19
   35368:	mov	w2, wzr
   3536c:	bl	c690 <mpfr_set4@plt>
   35370:	add	x0, sp, #0x168
   35374:	mov	w1, #0x1                   	// #1
   35378:	bl	bd00 <__gmpz_set_ui@plt>
   3537c:	add	x0, sp, #0x158
   35380:	mov	x1, xzr
   35384:	bl	bd00 <__gmpz_set_ui@plt>
   35388:	add	x0, sp, #0x148
   3538c:	mov	w1, #0x1                   	// #1
   35390:	bl	bd00 <__gmpz_set_ui@plt>
   35394:	add	x0, sp, #0xe8
   35398:	bl	c700 <mpfr_sgn@plt>
   3539c:	mov	w22, wzr
   353a0:	cmp	x27, #0x1
   353a4:	mov	x21, xzr
   353a8:	b.lt	35e34 <mpfr_sincos_fast@@Base+0x1048>  // b.tstop
   353ac:	cbz	w0, 35e34 <mpfr_sincos_fast@@Base+0x1048>
   353b0:	add	x8, sp, #0x1, lsl #12
   353b4:	add	x8, x8, #0x188
   353b8:	add	x9, sp, #0xd88
   353bc:	add	x8, x8, #0x10
   353c0:	add	x14, sp, #0x988
   353c4:	str	x8, [sp, #56]
   353c8:	add	x8, x9, #0x10
   353cc:	add	x10, sp, #0x178
   353d0:	str	x8, [sp, #48]
   353d4:	add	x8, x14, #0x10
   353d8:	add	x11, sp, #0x378
   353dc:	stp	x8, x27, [sp, #104]
   353e0:	add	x8, x10, #0x8
   353e4:	add	x12, sp, #0x578
   353e8:	str	x8, [sp, #168]
   353ec:	sub	x8, x11, #0x8
   353f0:	add	x13, sp, #0x778
   353f4:	str	x8, [sp, #96]
   353f8:	sub	x8, x12, #0x8
   353fc:	mov	x21, xzr
   35400:	mov	x22, xzr
   35404:	lsr	x24, x27, #1
   35408:	mov	w25, #0x1                   	// #1
   3540c:	str	x8, [sp, #88]
   35410:	sub	x8, x13, #0x8
   35414:	mov	w20, #0x1                   	// #1
   35418:	str	x8, [sp, #80]
   3541c:	str	x24, [sp, #16]
   35420:	cmp	x20, x24
   35424:	lsl	x19, x20, #1
   35428:	b.le	354a8 <mpfr_sincos_fast@@Base+0x6bc>
   3542c:	add	x0, sp, #0x128
   35430:	add	x1, sp, #0xe8
   35434:	bl	caa0 <mpfr_get_z_2exp@plt>
   35438:	mvn	x8, x0
   3543c:	add	x0, sp, #0x138
   35440:	mov	w1, #0x1                   	// #1
   35444:	add	x28, x20, x8
   35448:	bl	bd00 <__gmpz_set_ui@plt>
   3544c:	add	x0, sp, #0x118
   35450:	mov	w1, #0x1                   	// #1
   35454:	bl	bd00 <__gmpz_set_ui@plt>
   35458:	add	x0, sp, #0x118
   3545c:	add	x1, sp, #0x118
   35460:	mov	x2, x28
   35464:	bl	c230 <__gmpz_mul_2exp@plt>
   35468:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3546c:	str	w25, [sp, #240]
   35470:	str	x8, [sp, #248]
   35474:	cmp	x20, #0x1
   35478:	b.ne	35c3c <mpfr_sincos_fast@@Base+0xe50>  // b.any
   3547c:	add	x0, sp, #0x168
   35480:	add	x1, sp, #0x138
   35484:	bl	c120 <__gmpz_swap@plt>
   35488:	add	x0, sp, #0x158
   3548c:	add	x1, sp, #0x128
   35490:	bl	c120 <__gmpz_swap@plt>
   35494:	add	x0, sp, #0x148
   35498:	add	x1, sp, #0x118
   3549c:	bl	c120 <__gmpz_swap@plt>
   354a0:	mov	x21, x28
   354a4:	b	35d94 <mpfr_sincos_fast@@Base+0xfa8>
   354a8:	add	x0, sp, #0xe8
   354ac:	add	x1, sp, #0xe8
   354b0:	mov	x2, x20
   354b4:	mov	w3, wzr
   354b8:	bl	c2c0 <mpfr_mul_2ui@plt>
   354bc:	add	x0, sp, #0x108
   354c0:	add	x1, sp, #0xe8
   354c4:	mov	w2, #0x1                   	// #1
   354c8:	bl	be50 <mpfr_get_z@plt>
   354cc:	ldr	w8, [sp, #268]
   354d0:	cbz	w8, 35d94 <mpfr_sincos_fast@@Base+0xfa8>
   354d4:	add	x0, sp, #0xe8
   354d8:	add	x1, sp, #0xe8
   354dc:	add	x2, sp, #0x108
   354e0:	mov	w3, wzr
   354e4:	bl	bdb0 <mpfr_sub_z@plt>
   354e8:	ldr	w8, [sp, #268]
   354ec:	cbz	w8, 35db4 <mpfr_sincos_fast@@Base+0xfc8>
   354f0:	add	x0, sp, #0x978
   354f4:	stp	x20, x19, [sp, #64]
   354f8:	sub	x23, x19, #0x1
   354fc:	bl	bfe0 <mpfr_mpz_init@plt>
   35500:	add	x0, sp, #0x108
   35504:	mov	x1, xzr
   35508:	bl	baf0 <__gmpz_scan1@plt>
   3550c:	mov	x19, x0
   35510:	add	x0, sp, #0x978
   35514:	add	x1, sp, #0x108
   35518:	mov	x2, x19
   3551c:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35520:	add	x0, sp, #0x978
   35524:	add	x1, sp, #0x978
   35528:	add	x2, sp, #0x978
   3552c:	bl	c030 <__gmpz_mul@plt>
   35530:	add	x0, sp, #0x1, lsl #12
   35534:	sub	x19, x23, x19
   35538:	add	x0, x0, #0x188
   3553c:	lsl	x26, x19, #1
   35540:	bl	bfe0 <mpfr_mpz_init@plt>
   35544:	add	x0, sp, #0x1, lsl #12
   35548:	add	x0, x0, #0x188
   3554c:	mov	w1, #0x6                   	// #6
   35550:	bl	bd00 <__gmpz_set_ui@plt>
   35554:	add	x0, sp, #0xd88
   35558:	bl	bfe0 <mpfr_mpz_init@plt>
   3555c:	add	x0, sp, #0xd88
   35560:	mov	w1, #0x6                   	// #6
   35564:	bl	bd00 <__gmpz_set_ui@plt>
   35568:	add	x0, sp, #0x988
   3556c:	bl	bfe0 <mpfr_mpz_init@plt>
   35570:	add	x0, sp, #0x988
   35574:	add	x1, sp, #0x978
   35578:	bl	bff0 <__gmpz_set@plt>
   3557c:	ldr	x0, [sp, #56]
   35580:	bl	bfe0 <mpfr_mpz_init@plt>
   35584:	ldr	x0, [sp, #48]
   35588:	bl	bfe0 <mpfr_mpz_init@plt>
   3558c:	ldr	x20, [sp, #104]
   35590:	mov	x0, x20
   35594:	bl	bfe0 <mpfr_mpz_init@plt>
   35598:	add	x1, sp, #0x978
   3559c:	add	x2, sp, #0x978
   355a0:	mov	x0, x20
   355a4:	bl	c030 <__gmpz_mul@plt>
   355a8:	ldr	w8, [sp, #2460]
   355ac:	ldr	x9, [sp, #2464]
   355b0:	add	x0, sp, #0x1, lsl #12
   355b4:	add	x1, sp, #0x1, lsl #12
   355b8:	cmp	w8, #0x0
   355bc:	cneg	w8, w8, mi  // mi = first
   355c0:	add	x9, x9, w8, uxtw #3
   355c4:	ldur	x9, [x9, #-8]
   355c8:	lsl	x8, x8, #6
   355cc:	add	x0, x0, #0x188
   355d0:	add	x1, x1, #0x188
   355d4:	clz	x9, x9
   355d8:	sub	x20, x8, x9
   355dc:	mov	x2, x26
   355e0:	str	x20, [sp, #384]
   355e4:	bl	c230 <__gmpz_mul_2exp@plt>
   355e8:	add	x0, sp, #0x1, lsl #12
   355ec:	add	x1, sp, #0x1, lsl #12
   355f0:	add	x0, x0, #0x188
   355f4:	add	x1, x1, #0x188
   355f8:	add	x2, sp, #0x978
   355fc:	bl	be30 <__gmpz_sub@plt>
   35600:	ldr	w8, [sp, #2428]
   35604:	ldr	w10, [sp, #268]
   35608:	ldr	x9, [sp, #2432]
   3560c:	ldr	x11, [sp, #272]
   35610:	cmp	w8, #0x0
   35614:	cneg	w8, w8, mi  // mi = first
   35618:	cmp	w10, #0x0
   3561c:	str	x25, [sp, #1912]
   35620:	add	x9, x9, w8, uxtw #3
   35624:	cneg	w10, w10, mi  // mi = first
   35628:	ldur	x9, [x9, #-8]
   3562c:	add	x11, x11, w10, uxtw #3
   35630:	ldur	x11, [x11, #-8]
   35634:	add	x12, x26, x23
   35638:	clz	x9, x9
   3563c:	add	x9, x12, x9
   35640:	clz	x11, x11
   35644:	sub	x10, x11, x10, lsl #6
   35648:	sub	x8, x9, x8, lsl #6
   3564c:	add	x8, x8, x10
   35650:	cmp	x8, x27
   35654:	str	x26, [sp, #192]
   35658:	str	x8, [sp, #1400]
   3565c:	b.ge	359ac <mpfr_sincos_fast@@Base+0xbc0>  // b.tcont
   35660:	add	x11, sp, #0x1, lsl #12
   35664:	stp	x23, x22, [sp, #24]
   35668:	mov	w24, wzr
   3566c:	lsl	x8, x19, #2
   35670:	mov	w12, #0x2                   	// #2
   35674:	mov	w26, #0x2                   	// #2
   35678:	add	x11, x11, #0x188
   3567c:	add	x22, sp, #0xd88
   35680:	str	x21, [sp, #40]
   35684:	stp	x8, x20, [sp, #128]
   35688:	b	356b0 <mpfr_sincos_fast@@Base+0x8c4>
   3568c:	ldr	x9, [sp, #152]
   35690:	ldp	x27, x12, [sp, #112]
   35694:	add	x11, sp, #0x1, lsl #12
   35698:	add	x11, x11, #0x188
   3569c:	sub	w24, w9, w21
   356a0:	add	x22, sp, #0xd88
   356a4:	ldr	w26, [sp, #148]
   356a8:	cmp	x8, x27
   356ac:	b.ge	359bc <mpfr_sincos_fast@@Base+0xbd0>  // b.tcont
   356b0:	sxtw	x25, w24
   356b4:	add	x20, x25, #0x2
   356b8:	mov	x28, x27
   356bc:	cmp	w20, w26
   356c0:	add	w24, w24, #0x1
   356c4:	str	x12, [sp, #160]
   356c8:	b.ge	356e4 <mpfr_sincos_fast@@Base+0x8f8>  // b.tcont
   356cc:	ldr	x27, [sp, #136]
   356d0:	add	x21, sp, #0x1, lsl #12
   356d4:	str	w26, [sp, #148]
   356d8:	sxtw	x22, w24
   356dc:	add	x21, x21, #0x188
   356e0:	b	3575c <mpfr_sincos_fast@@Base+0x970>
   356e4:	lsl	x19, x20, #4
   356e8:	add	w26, w26, #0x1
   356ec:	add	x0, x11, x19
   356f0:	add	x21, sp, #0x1, lsl #12
   356f4:	str	w26, [sp, #148]
   356f8:	add	x21, x21, #0x188
   356fc:	bl	bfe0 <mpfr_mpz_init@plt>
   35700:	add	x0, x22, x19
   35704:	bl	bfe0 <mpfr_mpz_init@plt>
   35708:	add	x23, sp, #0x988
   3570c:	add	x19, x23, x19
   35710:	mov	x0, x19
   35714:	bl	bfe0 <mpfr_mpz_init@plt>
   35718:	add	x1, x23, w24, sxtw #4
   3571c:	mov	x0, x19
   35720:	mov	x2, x1
   35724:	sxtw	x22, w24
   35728:	bl	c030 <__gmpz_mul@plt>
   3572c:	ldr	w8, [x19, #4]
   35730:	ldr	x9, [x19, #8]
   35734:	cmp	w8, #0x0
   35738:	cneg	w8, w8, mi  // mi = first
   3573c:	add	x9, x9, w8, uxtw #3
   35740:	ldur	x9, [x9, #-8]
   35744:	lsl	x8, x8, #6
   35748:	clz	x9, x9
   3574c:	sub	x8, x8, x9
   35750:	add	x9, sp, #0x178
   35754:	str	x8, [x9, x20, lsl #3]
   35758:	ldr	x27, [sp, #384]
   3575c:	lsl	x20, x22, #3
   35760:	str	x22, [sp, #152]
   35764:	lsl	x26, x22, #4
   35768:	ldr	x22, [sp, #160]
   3576c:	add	x8, sp, #0x778
   35770:	mov	w9, #0x1                   	// #1
   35774:	str	x9, [x8, x20]
   35778:	add	x8, sp, #0xd88
   3577c:	lsl	x19, x22, #1
   35780:	add	x23, x8, x26
   35784:	orr	x1, x19, #0x2
   35788:	mov	x0, x23
   3578c:	bl	bd00 <__gmpz_set_ui@plt>
   35790:	orr	x2, x19, #0x3
   35794:	mov	x0, x23
   35798:	mov	x1, x23
   3579c:	bl	c140 <__gmpz_mul_ui@plt>
   357a0:	ldr	x2, [sp, #192]
   357a4:	str	x26, [sp, #184]
   357a8:	add	x26, x21, x26
   357ac:	mov	x0, x26
   357b0:	mov	x1, x23
   357b4:	bl	c230 <__gmpz_mul_2exp@plt>
   357b8:	add	x2, sp, #0x978
   357bc:	mov	x0, x26
   357c0:	mov	x1, x26
   357c4:	bl	be30 <__gmpz_sub@plt>
   357c8:	mov	x0, x23
   357cc:	mov	x1, x23
   357d0:	mov	x2, x19
   357d4:	bl	c140 <__gmpz_mul_ui@plt>
   357d8:	mov	w2, #0x1                   	// #1
   357dc:	bfi	x2, x22, #1, #63
   357e0:	mov	x0, x23
   357e4:	mov	x1, x23
   357e8:	bl	c140 <__gmpz_mul_ui@plt>
   357ec:	ldr	w8, [x23, #4]
   357f0:	ldr	x9, [x23, #8]
   357f4:	mvn	x10, x27
   357f8:	str	x27, [sp, #136]
   357fc:	cmp	w8, #0x0
   35800:	cneg	w8, w8, mi  // mi = first
   35804:	add	x9, x9, w8, uxtw #3
   35808:	ldur	x9, [x9, #-8]
   3580c:	lsl	x8, x8, #6
   35810:	clz	x9, x9
   35814:	sub	x8, x8, x9
   35818:	ldr	x9, [sp, #128]
   3581c:	add	x9, x9, x10
   35820:	add	x8, x9, x8
   35824:	add	x9, sp, #0x578
   35828:	str	x8, [x9, x20]
   3582c:	cbz	w24, 35844 <mpfr_sincos_fast@@Base+0xa58>
   35830:	add	x9, sp, #0x378
   35834:	ldr	x9, [x9, x25, lsl #3]
   35838:	add	x10, sp, #0x378
   3583c:	add	x8, x9, x8
   35840:	b	35848 <mpfr_sincos_fast@@Base+0xa5c>
   35844:	add	x10, sp, #0x378
   35848:	ldr	x9, [sp, #160]
   3584c:	add	x11, sp, #0x1, lsl #12
   35850:	mov	x27, x28
   35854:	add	x11, x11, #0x188
   35858:	add	x12, x9, #0x2
   3585c:	ldr	x9, [sp, #152]
   35860:	add	x22, sp, #0xd88
   35864:	str	x8, [x10, x9, lsl #3]
   35868:	tbnz	w12, #1, 356a4 <mpfr_sincos_fast@@Base+0x8b8>
   3586c:	sub	x8, x9, #0x1
   35870:	str	x8, [sp, #176]
   35874:	ldp	x8, x26, [sp, #96]
   35878:	mov	x21, xzr
   3587c:	add	x27, sp, #0xd88
   35880:	str	x12, [sp, #120]
   35884:	add	x10, x8, x20
   35888:	ldr	x8, [sp, #88]
   3588c:	add	x28, x8, x20
   35890:	ldr	x8, [sp, #80]
   35894:	add	x22, x8, x20
   35898:	add	x20, sp, #0x1, lsl #12
   3589c:	add	x20, x20, #0x188
   358a0:	b	358c8 <mpfr_sincos_fast@@Base+0xadc>
   358a4:	ldp	x12, x9, [sp, #200]
   358a8:	ldr	x21, [sp, #216]
   358ac:	str	x8, [x10], #-8
   358b0:	add	x26, x26, #0x10
   358b4:	sub	x20, x20, #0x10
   358b8:	sub	x27, x27, #0x10
   358bc:	sub	x28, x28, #0x8
   358c0:	sub	x22, x22, #0x8
   358c4:	tbnz	w9, #2, 3568c <mpfr_sincos_fast@@Base+0x8a0>
   358c8:	ldr	x24, [sp, #184]
   358cc:	lsr	x8, x12, #1
   358d0:	mov	x2, x26
   358d4:	str	x10, [sp, #224]
   358d8:	add	x19, x20, x24
   358dc:	mov	x0, x19
   358e0:	mov	x1, x19
   358e4:	add	x25, x21, #0x1
   358e8:	stp	x8, x12, [sp, #200]
   358ec:	bl	c030 <__gmpz_mul@plt>
   358f0:	sub	x23, x19, #0x10
   358f4:	add	x24, x27, x24
   358f8:	mov	x0, x23
   358fc:	mov	x1, x23
   35900:	mov	x2, x24
   35904:	bl	c030 <__gmpz_mul@plt>
   35908:	ldr	x8, [sp, #192]
   3590c:	str	x25, [sp, #216]
   35910:	mov	x0, x23
   35914:	mov	x1, x23
   35918:	lsl	x25, x8, x25
   3591c:	mov	x2, x25
   35920:	bl	c230 <__gmpz_mul_2exp@plt>
   35924:	mov	x0, x23
   35928:	mov	x1, x23
   3592c:	mov	x2, x19
   35930:	bl	c9a0 <__gmpz_add@plt>
   35934:	sub	x0, x24, #0x10
   35938:	mov	x1, x0
   3593c:	mov	x2, x24
   35940:	bl	c030 <__gmpz_mul@plt>
   35944:	ldr	x8, [x22]
   35948:	ldr	w9, [x24, #4]
   3594c:	ldr	x10, [x24, #8]
   35950:	ldr	x11, [sp, #168]
   35954:	add	x8, x8, #0x1
   35958:	cmp	w9, #0x0
   3595c:	str	x8, [x22]
   35960:	cneg	w8, w9, mi  // mi = first
   35964:	add	x9, x10, w8, uxtw #3
   35968:	ldur	x9, [x9, #-8]
   3596c:	ldr	x11, [x11, x21, lsl #3]
   35970:	ldr	x10, [x28]
   35974:	clz	x9, x9
   35978:	mvn	x11, x11
   3597c:	sub	x9, x25, x9
   35980:	add	x9, x9, x11
   35984:	add	x8, x9, x8, lsl #6
   35988:	ldr	x9, [sp, #176]
   3598c:	add	x8, x8, x10
   35990:	ldr	x10, [sp, #224]
   35994:	str	x8, [x28]
   35998:	cmp	x9, x21
   3599c:	b.eq	358a4 <mpfr_sincos_fast@@Base+0xab8>  // b.none
   359a0:	ldur	x9, [x10, #-8]
   359a4:	add	x8, x9, x8
   359a8:	b	358a4 <mpfr_sincos_fast@@Base+0xab8>
   359ac:	ldr	x27, [sp, #192]
   359b0:	mov	w26, #0x2                   	// #2
   359b4:	mov	w10, #0x1                   	// #1
   359b8:	b	35aa8 <mpfr_sincos_fast@@Base+0xcbc>
   359bc:	ldr	x8, [sp, #160]
   359c0:	cmp	w24, #0x1
   359c4:	orr	x10, x8, #0x1
   359c8:	b.lt	35a98 <mpfr_sincos_fast@@Base+0xcac>  // b.tstop
   359cc:	ldr	x27, [sp, #192]
   359d0:	mov	w8, w24
   359d4:	add	x9, sp, #0x778
   359d8:	str	x10, [sp, #224]
   359dc:	add	x10, sp, #0xd88
   359e0:	add	x25, x9, w24, uxtw #3
   359e4:	lsl	x9, x8, #4
   359e8:	mov	x21, xzr
   359ec:	add	x23, x11, x9
   359f0:	add	x26, x10, x9
   359f4:	add	x22, x8, #0x1
   359f8:	mov	x24, x25
   359fc:	mov	w20, #0x1                   	// #1
   35a00:	add	x28, sp, #0x988
   35a04:	ldr	x8, [x24, #-8]!
   35a08:	mov	x0, x23
   35a0c:	mov	x1, x23
   35a10:	add	x2, x28, x8, lsl #4
   35a14:	bl	c030 <__gmpz_mul@plt>
   35a18:	sub	x19, x23, #0x10
   35a1c:	mov	x0, x19
   35a20:	mov	x1, x19
   35a24:	mov	x2, x26
   35a28:	bl	c030 <__gmpz_mul@plt>
   35a2c:	ldr	x8, [x25]
   35a30:	mov	x0, x19
   35a34:	mov	x1, x19
   35a38:	lsl	x8, x20, x8
   35a3c:	add	x21, x8, x21
   35a40:	mul	x2, x21, x27
   35a44:	bl	c230 <__gmpz_mul_2exp@plt>
   35a48:	mov	x0, x19
   35a4c:	mov	x1, x19
   35a50:	mov	x2, x23
   35a54:	bl	c9a0 <__gmpz_add@plt>
   35a58:	sub	x23, x26, #0x10
   35a5c:	mov	x0, x23
   35a60:	mov	x1, x23
   35a64:	mov	x2, x26
   35a68:	bl	c030 <__gmpz_mul@plt>
   35a6c:	sub	x22, x22, #0x1
   35a70:	cmp	x22, #0x1
   35a74:	mov	x25, x24
   35a78:	mov	x26, x23
   35a7c:	mov	x23, x19
   35a80:	b.gt	35a04 <mpfr_sincos_fast@@Base+0xc18>
   35a84:	ldp	x22, x21, [sp, #32]
   35a88:	ldp	x24, x23, [sp, #16]
   35a8c:	ldr	w26, [sp, #148]
   35a90:	ldr	x10, [sp, #224]
   35a94:	b	35aa4 <mpfr_sincos_fast@@Base+0xcb8>
   35a98:	ldp	x22, x21, [sp, #32]
   35a9c:	ldp	x24, x23, [sp, #16]
   35aa0:	ldr	x27, [sp, #192]
   35aa4:	mov	w25, #0x1                   	// #1
   35aa8:	ldr	w8, [sp, #3468]
   35aac:	ldr	x9, [sp, #3472]
   35ab0:	madd	x20, x10, x27, x23
   35ab4:	ldr	x27, [sp, #112]
   35ab8:	cmp	w8, #0x0
   35abc:	cneg	w8, w8, mi  // mi = first
   35ac0:	add	x9, x9, w8, uxtw #3
   35ac4:	ldur	x9, [x9, #-8]
   35ac8:	lsl	x8, x8, #6
   35acc:	add	x0, sp, #0x138
   35ad0:	add	x1, sp, #0xd88
   35ad4:	clz	x9, x9
   35ad8:	sub	x8, x8, x9
   35adc:	subs	x8, x8, x27
   35ae0:	csel	x19, x8, xzr, gt
   35ae4:	mov	x2, x19
   35ae8:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35aec:	ldr	w8, [sp, #4492]
   35af0:	ldr	x9, [sp, #4496]
   35af4:	add	x20, x20, x19
   35af8:	add	x0, sp, #0x1, lsl #12
   35afc:	cmp	w8, #0x0
   35b00:	cneg	w8, w8, mi  // mi = first
   35b04:	add	x9, x9, w8, uxtw #3
   35b08:	ldur	x9, [x9, #-8]
   35b0c:	lsl	x8, x8, #6
   35b10:	add	x1, sp, #0x1, lsl #12
   35b14:	add	x0, x0, #0x188
   35b18:	clz	x9, x9
   35b1c:	sub	x8, x8, x9
   35b20:	subs	x8, x8, x27
   35b24:	csel	x19, x8, xzr, gt
   35b28:	add	x1, x1, #0x188
   35b2c:	mov	x2, x19
   35b30:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35b34:	add	x1, sp, #0x1, lsl #12
   35b38:	add	x0, sp, #0x128
   35b3c:	add	x1, x1, #0x188
   35b40:	add	x2, sp, #0x108
   35b44:	sub	x20, x20, x19
   35b48:	bl	c030 <__gmpz_mul@plt>
   35b4c:	ldr	w8, [sp, #300]
   35b50:	ldr	x9, [sp, #304]
   35b54:	add	x0, sp, #0x128
   35b58:	add	x1, sp, #0x128
   35b5c:	cmp	w8, #0x0
   35b60:	cneg	w8, w8, mi  // mi = first
   35b64:	add	x9, x9, w8, uxtw #3
   35b68:	ldur	x9, [x9, #-8]
   35b6c:	lsl	x8, x8, #6
   35b70:	clz	x9, x9
   35b74:	sub	x8, x8, x9
   35b78:	subs	x8, x8, x27
   35b7c:	csel	x19, x8, xzr, gt
   35b80:	mov	x2, x19
   35b84:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35b88:	add	x0, sp, #0x978
   35b8c:	sub	x28, x20, x19
   35b90:	bl	c1b0 <mpfr_mpz_clear@plt>
   35b94:	cmp	w26, #0x1
   35b98:	b.lt	35bdc <mpfr_sincos_fast@@Base+0xdf0>  // b.tstop
   35b9c:	add	x19, sp, #0x1, lsl #12
   35ba0:	mov	w20, w26
   35ba4:	add	x23, sp, #0x988
   35ba8:	add	x26, sp, #0xd88
   35bac:	add	x19, x19, #0x188
   35bb0:	mov	x0, x19
   35bb4:	bl	c1b0 <mpfr_mpz_clear@plt>
   35bb8:	mov	x0, x26
   35bbc:	bl	c1b0 <mpfr_mpz_clear@plt>
   35bc0:	mov	x0, x23
   35bc4:	bl	c1b0 <mpfr_mpz_clear@plt>
   35bc8:	subs	x20, x20, #0x1
   35bcc:	add	x23, x23, #0x10
   35bd0:	add	x26, x26, #0x10
   35bd4:	add	x19, x19, #0x10
   35bd8:	b.ne	35bb0 <mpfr_sincos_fast@@Base+0xdc4>  // b.any
   35bdc:	add	x0, sp, #0x138
   35be0:	mov	w1, #0x2                   	// #2
   35be4:	bl	cb40 <__gmpz_sizeinbase@plt>
   35be8:	add	x8, x0, x28
   35bec:	cmp	x8, x27
   35bf0:	b.cc	35de8 <mpfr_sincos_fast@@Base+0xffc>  // b.lo, b.ul, b.last
   35bf4:	add	x0, sp, #0x118
   35bf8:	add	x1, sp, #0x138
   35bfc:	add	x2, sp, #0x138
   35c00:	bl	c030 <__gmpz_mul@plt>
   35c04:	lsl	x2, x28, #1
   35c08:	add	x0, sp, #0x118
   35c0c:	add	x1, sp, #0x118
   35c10:	bl	c230 <__gmpz_mul_2exp@plt>
   35c14:	add	x0, sp, #0x118
   35c18:	add	x1, sp, #0x128
   35c1c:	add	x2, sp, #0x128
   35c20:	bl	c870 <__gmpz_submul@plt>
   35c24:	add	x0, sp, #0x118
   35c28:	add	x1, sp, #0x118
   35c2c:	bl	bcb0 <__gmpz_sqrt@plt>
   35c30:	ldp	x20, x19, [sp, #64]
   35c34:	cmp	x20, #0x1
   35c38:	b.eq	3547c <mpfr_sincos_fast@@Base+0x690>  // b.none
   35c3c:	add	x0, sp, #0x108
   35c40:	add	x1, sp, #0x158
   35c44:	add	x2, sp, #0x148
   35c48:	bl	c9a0 <__gmpz_add@plt>
   35c4c:	add	x0, sp, #0x148
   35c50:	add	x1, sp, #0x148
   35c54:	add	x2, sp, #0x118
   35c58:	bl	c030 <__gmpz_mul@plt>
   35c5c:	add	x0, sp, #0x118
   35c60:	add	x1, sp, #0x118
   35c64:	add	x2, sp, #0x128
   35c68:	bl	c9a0 <__gmpz_add@plt>
   35c6c:	add	x0, sp, #0x128
   35c70:	add	x1, sp, #0x158
   35c74:	add	x2, sp, #0x128
   35c78:	bl	c030 <__gmpz_mul@plt>
   35c7c:	add	x0, sp, #0x108
   35c80:	add	x1, sp, #0x108
   35c84:	add	x2, sp, #0x118
   35c88:	bl	c030 <__gmpz_mul@plt>
   35c8c:	add	x0, sp, #0x158
   35c90:	add	x1, sp, #0x108
   35c94:	add	x2, sp, #0x128
   35c98:	bl	be30 <__gmpz_sub@plt>
   35c9c:	add	x0, sp, #0x158
   35ca0:	add	x1, sp, #0x158
   35ca4:	add	x2, sp, #0x148
   35ca8:	bl	be30 <__gmpz_sub@plt>
   35cac:	add	x0, sp, #0x148
   35cb0:	add	x1, sp, #0x148
   35cb4:	add	x2, sp, #0x128
   35cb8:	bl	be30 <__gmpz_sub@plt>
   35cbc:	add	x0, sp, #0x168
   35cc0:	add	x1, sp, #0x168
   35cc4:	add	x2, sp, #0x138
   35cc8:	bl	c030 <__gmpz_mul@plt>
   35ccc:	ldr	w8, [sp, #364]
   35cd0:	ldr	x9, [sp, #368]
   35cd4:	mov	x23, x19
   35cd8:	add	x0, sp, #0x168
   35cdc:	cmp	w8, #0x0
   35ce0:	cneg	w8, w8, mi  // mi = first
   35ce4:	add	x9, x9, w8, uxtw #3
   35ce8:	ldur	x9, [x9, #-8]
   35cec:	lsl	x8, x8, #6
   35cf0:	add	x1, sp, #0x168
   35cf4:	add	x20, x28, x21
   35cf8:	clz	x9, x9
   35cfc:	sub	x8, x8, x9
   35d00:	subs	x8, x8, x27
   35d04:	csel	x19, x8, xzr, gt
   35d08:	mov	x2, x19
   35d0c:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35d10:	ldr	w8, [sp, #348]
   35d14:	ldr	w10, [sp, #332]
   35d18:	ldr	x9, [sp, #352]
   35d1c:	ldr	x11, [sp, #336]
   35d20:	cmp	w8, #0x0
   35d24:	cneg	w8, w8, mi  // mi = first
   35d28:	cmp	w10, #0x0
   35d2c:	add	x9, x9, w8, uxtw #3
   35d30:	cneg	w10, w10, mi  // mi = first
   35d34:	ldur	x9, [x9, #-8]
   35d38:	add	x11, x11, w10, uxtw #3
   35d3c:	ldur	x11, [x11, #-8]
   35d40:	lsl	x8, x8, #6
   35d44:	clz	x9, x9
   35d48:	sub	x8, x8, x9
   35d4c:	clz	x9, x11
   35d50:	lsl	x10, x10, #6
   35d54:	sub	x9, x10, x9
   35d58:	cmp	x8, x9
   35d5c:	csel	x8, x8, x9, cc  // cc = lo, ul, last
   35d60:	subs	x8, x8, x27
   35d64:	add	x20, x20, x19
   35d68:	csel	x19, xzr, x8, cc  // cc = lo, ul, last
   35d6c:	add	x0, sp, #0x158
   35d70:	add	x1, sp, #0x158
   35d74:	mov	x2, x19
   35d78:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35d7c:	add	x0, sp, #0x148
   35d80:	add	x1, sp, #0x148
   35d84:	mov	x2, x19
   35d88:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   35d8c:	sub	x21, x20, x19
   35d90:	mov	x19, x23
   35d94:	add	x0, sp, #0xe8
   35d98:	add	x22, x22, #0x1
   35d9c:	bl	c700 <mpfr_sgn@plt>
   35da0:	cmp	x19, x27
   35da4:	b.gt	35e04 <mpfr_sincos_fast@@Base+0x1018>
   35da8:	mov	x20, x19
   35dac:	cbnz	w0, 35420 <mpfr_sincos_fast@@Base+0x634>
   35db0:	b	35e04 <mpfr_sincos_fast@@Base+0x1018>
   35db4:	add	x0, sp, #0x138
   35db8:	mov	w1, #0x1                   	// #1
   35dbc:	bl	bd00 <__gmpz_set_ui@plt>
   35dc0:	add	x0, sp, #0x128
   35dc4:	mov	w1, #0x1                   	// #1
   35dc8:	bl	bd00 <__gmpz_set_ui@plt>
   35dcc:	add	x0, sp, #0x118
   35dd0:	mov	w1, #0x1                   	// #1
   35dd4:	bl	bd00 <__gmpz_set_ui@plt>
   35dd8:	mov	x28, xzr
   35ddc:	cmp	x20, #0x1
   35de0:	b.eq	3547c <mpfr_sincos_fast@@Base+0x690>  // b.none
   35de4:	b	35c3c <mpfr_sincos_fast@@Base+0xe50>
   35de8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   35dec:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   35df0:	mov	w1, #0x1be                 	// #446
   35df4:	add	x0, x0, #0x4ad
   35df8:	add	x2, x2, #0x4cd
   35dfc:	bl	cb20 <mpfr_assert_fail@plt>
   35e00:	b	35bf4 <mpfr_sincos_fast@@Base+0xe08>
   35e04:	mov	w8, #0xb                   	// #11
   35e08:	mul	x8, x22, x8
   35e0c:	cmp	x8, #0x2
   35e10:	b.cc	35e30 <mpfr_sincos_fast@@Base+0x1044>  // b.lo, b.ul, b.last
   35e14:	mov	w22, wzr
   35e18:	add	x9, x8, #0x1
   35e1c:	lsr	x8, x9, #1
   35e20:	cmp	x9, #0x3
   35e24:	add	w22, w22, #0x1
   35e28:	b.hi	35e18 <mpfr_sincos_fast@@Base+0x102c>  // b.pmore
   35e2c:	b	35e34 <mpfr_sincos_fast@@Base+0x1048>
   35e30:	mov	w22, wzr
   35e34:	ldr	x19, [sp]
   35e38:	add	x1, sp, #0x158
   35e3c:	mov	w2, wzr
   35e40:	mov	x0, x19
   35e44:	bl	c250 <mpfr_set_z@plt>
   35e48:	add	x2, sp, #0x168
   35e4c:	mov	x0, x19
   35e50:	mov	x1, x19
   35e54:	mov	w3, wzr
   35e58:	bl	cc60 <mpfr_div_z@plt>
   35e5c:	mov	x0, x19
   35e60:	mov	x1, x19
   35e64:	mov	x2, x21
   35e68:	mov	w3, wzr
   35e6c:	bl	c8f0 <mpfr_div_2ui@plt>
   35e70:	ldr	x19, [sp, #8]
   35e74:	add	x1, sp, #0x148
   35e78:	mov	w2, wzr
   35e7c:	mov	x0, x19
   35e80:	bl	c250 <mpfr_set_z@plt>
   35e84:	add	x2, sp, #0x168
   35e88:	mov	x0, x19
   35e8c:	mov	x1, x19
   35e90:	mov	w3, wzr
   35e94:	bl	cc60 <mpfr_div_z@plt>
   35e98:	mov	x0, x19
   35e9c:	mov	x1, x19
   35ea0:	mov	x2, x21
   35ea4:	mov	w3, wzr
   35ea8:	bl	c8f0 <mpfr_div_2ui@plt>
   35eac:	add	x0, sp, #0x168
   35eb0:	bl	c1b0 <mpfr_mpz_clear@plt>
   35eb4:	add	x0, sp, #0x158
   35eb8:	bl	c1b0 <mpfr_mpz_clear@plt>
   35ebc:	add	x0, sp, #0x148
   35ec0:	bl	c1b0 <mpfr_mpz_clear@plt>
   35ec4:	add	x0, sp, #0x138
   35ec8:	bl	c1b0 <mpfr_mpz_clear@plt>
   35ecc:	add	x0, sp, #0x128
   35ed0:	bl	c1b0 <mpfr_mpz_clear@plt>
   35ed4:	add	x0, sp, #0x118
   35ed8:	bl	c1b0 <mpfr_mpz_clear@plt>
   35edc:	add	x0, sp, #0x108
   35ee0:	bl	c1b0 <mpfr_mpz_clear@plt>
   35ee4:	add	x0, sp, #0xe8
   35ee8:	bl	c0b0 <mpfr_clear@plt>
   35eec:	mov	w0, w22
   35ef0:	add	sp, sp, #0x1, lsl #12
   35ef4:	add	sp, sp, #0x590
   35ef8:	ldp	x20, x19, [sp, #80]
   35efc:	ldp	x22, x21, [sp, #64]
   35f00:	ldp	x24, x23, [sp, #48]
   35f04:	ldp	x26, x25, [sp, #32]
   35f08:	ldp	x28, x27, [sp, #16]
   35f0c:	ldp	x29, x30, [sp], #96
   35f10:	ret

0000000000035f14 <mpfr_set_nan@@Base>:
   35f14:	stp	x29, x30, [sp, #-16]!
   35f18:	mov	x8, #0x2                   	// #2
   35f1c:	movk	x8, #0x8000, lsl #48
   35f20:	mov	x29, sp
   35f24:	str	x8, [x0, #16]
   35f28:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   35f2c:	ldr	x1, [x0, #2640]
   35f30:	add	x0, x0, #0xa50
   35f34:	blr	x1
   35f38:	mrs	x8, tpidr_el0
   35f3c:	ldr	w9, [x8, x0]
   35f40:	orr	w9, w9, #0x4
   35f44:	str	w9, [x8, x0]
   35f48:	ldp	x29, x30, [sp], #16
   35f4c:	ret

0000000000035f50 <mpfr_set_inf@@Base>:
   35f50:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35f54:	cmp	w1, #0x0
   35f58:	mov	w9, #0x1                   	// #1
   35f5c:	str	x8, [x0, #16]
   35f60:	cneg	w8, w9, lt  // lt = tstop
   35f64:	str	w8, [x0, #8]
   35f68:	ret

0000000000035f6c <mpfr_set_zero@@Base>:
   35f6c:	mov	w8, #0x1                   	// #1
   35f70:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   35f74:	str	w8, [x0, #8]
   35f78:	str	x9, [x0, #16]
   35f7c:	tbnz	w1, #31, 35f84 <mpfr_set_zero@@Base+0x18>
   35f80:	ret
   35f84:	mov	w8, #0xffffffff            	// #-1
   35f88:	str	w8, [x0, #8]
   35f8c:	ret

0000000000035f90 <mpfr_powerof2_raw@@Base>:
   35f90:	ldr	x8, [x0]
   35f94:	ldr	x9, [x0, #24]
   35f98:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   35f9c:	sub	x10, x8, #0x1
   35fa0:	add	x8, x8, #0x3e
   35fa4:	cmp	x10, #0x0
   35fa8:	csel	x8, x8, x10, lt  // lt = tstop
   35fac:	asr	x8, x8, #6
   35fb0:	ldr	x10, [x9, x8, lsl #3]
   35fb4:	cmp	x10, x11
   35fb8:	b.ne	35fd4 <mpfr_powerof2_raw@@Base+0x44>  // b.any
   35fbc:	sub	x9, x9, #0x8
   35fc0:	subs	x10, x8, #0x1
   35fc4:	b.lt	35fdc <mpfr_powerof2_raw@@Base+0x4c>  // b.tstop
   35fc8:	ldr	x11, [x9, x8, lsl #3]
   35fcc:	mov	x8, x10
   35fd0:	cbz	x11, 35fc0 <mpfr_powerof2_raw@@Base+0x30>
   35fd4:	mov	w0, wzr
   35fd8:	ret
   35fdc:	mov	w0, #0x1                   	// #1
   35fe0:	ret

0000000000035fe4 <mpfr_powerof2_raw2@@Base>:
   35fe4:	add	x8, x0, x1, lsl #3
   35fe8:	ldur	x8, [x8, #-8]
   35fec:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   35ff0:	cmp	x8, x9
   35ff4:	b.ne	36014 <mpfr_powerof2_raw2@@Base+0x30>  // b.any
   35ff8:	sub	x8, x0, #0x10
   35ffc:	sub	x9, x1, #0x1
   36000:	cmp	x9, #0x1
   36004:	b.lt	3601c <mpfr_powerof2_raw2@@Base+0x38>  // b.tstop
   36008:	ldr	x10, [x8, x1, lsl #3]
   3600c:	mov	x1, x9
   36010:	cbz	x10, 35ffc <mpfr_powerof2_raw2@@Base+0x18>
   36014:	mov	w0, wzr
   36018:	ret
   3601c:	mov	w0, #0x1                   	// #1
   36020:	ret

0000000000036024 <mpfr_gamma@@Base>:
   36024:	sub	sp, sp, #0x1b0
   36028:	stp	x29, x30, [sp, #336]
   3602c:	stp	x28, x27, [sp, #352]
   36030:	stp	x26, x25, [sp, #368]
   36034:	stp	x24, x23, [sp, #384]
   36038:	stp	x22, x21, [sp, #400]
   3603c:	stp	x20, x19, [sp, #416]
   36040:	ldr	x9, [x1, #16]
   36044:	mov	x25, #0x2                   	// #2
   36048:	movk	x25, #0x8000, lsl #48
   3604c:	add	x8, x25, #0x2
   36050:	mov	x21, x1
   36054:	cmp	x9, x8
   36058:	mov	x19, x0
   3605c:	add	x29, sp, #0x150
   36060:	b.lt	36d4c <mpfr_gamma@@Base+0xd28>  // b.tstop
   36064:	ldr	x8, [x21]
   36068:	ldr	x10, [x19]
   3606c:	mov	w22, w2
   36070:	cmp	x8, x10
   36074:	csel	x8, x8, x10, gt
   36078:	neg	x8, x8, lsl #1
   3607c:	cmp	x9, x8
   36080:	b.le	36348 <mpfr_gamma@@Base+0x324>
   36084:	mov	x0, x21
   36088:	bl	c1a0 <mpfr_integer_p@plt>
   3608c:	mov	w23, w0
   36090:	cbz	w0, 3609c <mpfr_gamma@@Base+0x78>
   36094:	ldr	w8, [x21, #8]
   36098:	tbnz	w8, #31, 36dd0 <mpfr_gamma@@Base+0xdac>
   3609c:	mov	w1, #0x1                   	// #1
   360a0:	mov	x0, x21
   360a4:	mov	x2, xzr
   360a8:	str	w22, [sp, #12]
   360ac:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   360b0:	cbz	w0, 363e8 <mpfr_gamma@@Base+0x3c4>
   360b4:	mov	w22, w0
   360b8:	cbz	w23, 362a8 <mpfr_gamma@@Base+0x284>
   360bc:	mov	x0, x21
   360c0:	mov	w1, wzr
   360c4:	bl	bea0 <mpfr_fits_ulong_p@plt>
   360c8:	cbz	w0, 362a8 <mpfr_gamma@@Base+0x284>
   360cc:	ldr	x26, [x19]
   360d0:	mov	x0, x21
   360d4:	mov	w1, wzr
   360d8:	bl	bcf0 <mpfr_get_ui@plt>
   360dc:	mov	w8, #0x68d8                	// #26840
   360e0:	movk	w8, #0x2ab, lsl #16
   360e4:	cmp	x0, x8
   360e8:	b.hi	362a8 <mpfr_gamma@@Base+0x284>  // b.pmore
   360ec:	sub	x23, x0, #0x1
   360f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   360f4:	ldr	x1, [x0, #2640]
   360f8:	add	x0, x0, #0xa50
   360fc:	blr	x1
   36100:	mrs	x27, tpidr_el0
   36104:	ldr	w28, [x27, x0]
   36108:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3610c:	ldr	x1, [x0, #2576]
   36110:	add	x0, x0, #0xa10
   36114:	blr	x1
   36118:	ldr	x9, [x27, x0]
   3611c:	mov	x8, x0
   36120:	str	x9, [sp]
   36124:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36128:	ldr	x1, [x0, #2608]
   3612c:	add	x0, x0, #0xa30
   36130:	blr	x1
   36134:	ldr	x20, [x27, x0]
   36138:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3613c:	str	x9, [x27, x8]
   36140:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   36144:	str	x8, [x27, x0]
   36148:	add	x0, sp, #0x28
   3614c:	mov	w1, #0x26                  	// #38
   36150:	bl	ca60 <mpfr_init2@plt>
   36154:	sub	x0, x29, #0x28
   36158:	mov	w1, #0x26                  	// #38
   3615c:	bl	ca60 <mpfr_init2@plt>
   36160:	add	x0, sp, #0x28
   36164:	mov	w3, #0x1                   	// #1
   36168:	mov	x1, x23
   3616c:	mov	x2, xzr
   36170:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   36174:	adrp	x1, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   36178:	add	x1, x1, #0x545
   3617c:	sub	x0, x29, #0x28
   36180:	bl	c340 <mpfr_set_str_binary@plt>
   36184:	add	x0, sp, #0x28
   36188:	add	x1, sp, #0x28
   3618c:	sub	x2, x29, #0x28
   36190:	mov	w3, #0x1                   	// #1
   36194:	bl	c610 <mpfr_div@plt>
   36198:	add	x0, sp, #0x28
   3619c:	add	x1, sp, #0x28
   361a0:	mov	w3, #0x1                   	// #1
   361a4:	mov	x2, x23
   361a8:	bl	bfc0 <mpfr_pow_ui@plt>
   361ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   361b0:	ldr	x1, [x0, #2688]
   361b4:	add	x0, x0, #0xa80
   361b8:	blr	x1
   361bc:	add	x1, x27, x0
   361c0:	sub	x0, x29, #0x28
   361c4:	mov	w2, #0x1                   	// #1
   361c8:	bl	c380 <mpfr_cache@plt>
   361cc:	lsl	x2, x23, #1
   361d0:	sub	x0, x29, #0x28
   361d4:	sub	x1, x29, #0x28
   361d8:	mov	w3, #0x1                   	// #1
   361dc:	bl	bab0 <mpfr_mul_ui@plt>
   361e0:	sub	x0, x29, #0x28
   361e4:	sub	x1, x29, #0x28
   361e8:	mov	w2, #0x1                   	// #1
   361ec:	bl	c920 <mpfr_sqrt@plt>
   361f0:	add	x0, sp, #0x28
   361f4:	add	x1, sp, #0x28
   361f8:	sub	x2, x29, #0x28
   361fc:	mov	w3, #0x1                   	// #1
   36200:	bl	bda0 <mpfr_mul@plt>
   36204:	add	x0, sp, #0x28
   36208:	add	x1, sp, #0x28
   3620c:	mov	w2, #0x1                   	// #1
   36210:	bl	c210 <mpfr_log2@plt>
   36214:	add	x0, sp, #0x28
   36218:	mov	w1, #0x2                   	// #2
   3621c:	bl	bcf0 <mpfr_get_ui@plt>
   36220:	cmp	x23, #0x2
   36224:	mov	x24, x0
   36228:	b.cc	36244 <mpfr_gamma@@Base+0x220>  // b.lo, b.ul, b.last
   3622c:	mov	w8, #0x2                   	// #2
   36230:	udiv	x9, x23, x8
   36234:	lsl	x8, x8, #1
   36238:	cmp	x8, x23
   3623c:	sub	x24, x24, x9
   36240:	b.ls	36230 <mpfr_gamma@@Base+0x20c>  // b.plast
   36244:	add	x0, sp, #0x28
   36248:	bl	c0b0 <mpfr_clear@plt>
   3624c:	sub	x0, x29, #0x28
   36250:	bl	c0b0 <mpfr_clear@plt>
   36254:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36258:	ldr	x1, [x0, #2640]
   3625c:	add	x0, x0, #0xa50
   36260:	blr	x1
   36264:	str	w28, [x27, x0]
   36268:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3626c:	ldr	x1, [x0, #2576]
   36270:	add	x0, x0, #0xa10
   36274:	blr	x1
   36278:	ldr	x8, [sp]
   3627c:	str	x8, [x27, x0]
   36280:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36284:	ldr	x1, [x0, #2608]
   36288:	add	x0, x0, #0xa30
   3628c:	blr	x1
   36290:	ldr	w8, [sp, #12]
   36294:	str	x20, [x27, x0]
   36298:	cmp	w8, #0x0
   3629c:	cinc	x8, x26, eq  // eq = none
   362a0:	cmp	x24, x8
   362a4:	b.ls	367c8 <mpfr_gamma@@Base+0x7a4>  // b.plast
   362a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   362ac:	ldr	x1, [x0, #2640]
   362b0:	add	x0, x0, #0xa50
   362b4:	blr	x1
   362b8:	mrs	x26, tpidr_el0
   362bc:	ldr	w28, [x26, x0]
   362c0:	str	w28, [sp, #16]
   362c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   362c8:	ldr	x1, [x0, #2576]
   362cc:	add	x0, x0, #0xa10
   362d0:	blr	x1
   362d4:	ldr	x27, [x26, x0]
   362d8:	mov	x8, x0
   362dc:	str	x27, [sp, #24]
   362e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   362e4:	ldr	x1, [x0, #2608]
   362e8:	add	x0, x0, #0xa30
   362ec:	blr	x1
   362f0:	ldr	x24, [x26, x0]
   362f4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   362f8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   362fc:	cmp	w22, #0x1
   36300:	str	x9, [x26, x8]
   36304:	str	x24, [sp, #32]
   36308:	str	x10, [x26, x0]
   3630c:	b.lt	364ac <mpfr_gamma@@Base+0x488>  // b.tstop
   36310:	ldr	x8, [x21, #16]
   36314:	cmp	x8, #0x19
   36318:	b.gt	3664c <mpfr_gamma@@Base+0x628>
   3631c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36320:	ldr	x1, [x0, #2576]
   36324:	add	x0, x0, #0xa10
   36328:	blr	x1
   3632c:	str	x27, [x26, x0]
   36330:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36334:	ldr	x1, [x0, #2608]
   36338:	add	x0, x0, #0xa30
   3633c:	blr	x1
   36340:	str	x24, [x26, x0]
   36344:	b	367a0 <mpfr_gamma@@Base+0x77c>
   36348:	ldr	w28, [x21, #8]
   3634c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36350:	ldr	x1, [x0, #2640]
   36354:	add	x0, x0, #0xa50
   36358:	blr	x1
   3635c:	mrs	x24, tpidr_el0
   36360:	ldr	w25, [x24, x0]
   36364:	str	w25, [sp, #16]
   36368:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3636c:	ldr	x1, [x0, #2576]
   36370:	add	x0, x0, #0xa10
   36374:	blr	x1
   36378:	ldr	x26, [x24, x0]
   3637c:	mov	x8, x0
   36380:	str	x26, [sp, #24]
   36384:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36388:	ldr	x1, [x0, #2608]
   3638c:	add	x0, x0, #0xa30
   36390:	blr	x1
   36394:	ldr	x27, [x24, x0]
   36398:	mov	x12, #0x2                   	// #2
   3639c:	movk	x12, #0xc000, lsl #48
   363a0:	mov	w20, wzr
   363a4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   363a8:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   363ac:	cmp	x9, x12
   363b0:	str	x10, [x24, x8]
   363b4:	str	x27, [sp, #32]
   363b8:	str	x11, [x24, x0]
   363bc:	b.ne	36404 <mpfr_gamma@@Base+0x3e0>  // b.any
   363c0:	cmp	w28, #0x1
   363c4:	b.lt	36404 <mpfr_gamma@@Base+0x3e0>  // b.tstop
   363c8:	orr	w8, w22, #0x2
   363cc:	cmp	w8, #0x3
   363d0:	b.ne	36400 <mpfr_gamma@@Base+0x3dc>  // b.any
   363d4:	mov	x0, x21
   363d8:	bl	bf50 <mpfr_powerof2_raw@plt>
   363dc:	cmp	w0, #0x0
   363e0:	cset	w20, ne  // ne = any
   363e4:	b	36404 <mpfr_gamma@@Base+0x3e0>
   363e8:	ldr	w3, [sp, #12]
   363ec:	mov	w1, #0x1                   	// #1
   363f0:	mov	x0, x19
   363f4:	mov	x2, xzr
   363f8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   363fc:	b	367d8 <mpfr_gamma@@Base+0x7b4>
   36400:	mov	w20, wzr
   36404:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36408:	ldr	x1, [x0, #2640]
   3640c:	add	x0, x0, #0xa50
   36410:	blr	x1
   36414:	mov	x23, x0
   36418:	str	wzr, [x24, x0]
   3641c:	mov	w1, #0x1                   	// #1
   36420:	mov	x0, x19
   36424:	mov	x2, x21
   36428:	mov	w3, w22
   3642c:	bl	c2f0 <mpfr_ui_div@plt>
   36430:	mov	w21, w22
   36434:	cbz	w0, 3645c <mpfr_gamma@@Base+0x438>
   36438:	ldr	w8, [x24, x23]
   3643c:	mov	w22, w0
   36440:	tst	w8, #0x2
   36444:	cset	w9, eq  // eq = none
   36448:	orr	w9, w20, w9
   3644c:	tbnz	w9, #0, 365e0 <mpfr_gamma@@Base+0x5bc>
   36450:	orr	w25, w8, w25
   36454:	str	w25, [sp, #16]
   36458:	b	365e0 <mpfr_gamma@@Base+0x5bc>
   3645c:	tst	w21, #0xfffffffd
   36460:	mov	w11, w21
   36464:	b.eq	365d8 <mpfr_gamma@@Base+0x5b4>  // b.none
   36468:	cmp	w11, #0x1
   3646c:	cset	w9, eq  // eq = none
   36470:	cmp	w28, #0x0
   36474:	cset	w8, gt
   36478:	cset	w10, lt  // lt = tstop
   3647c:	cmp	w11, #0x4
   36480:	mov	w21, w11
   36484:	and	w10, w9, w10
   36488:	cset	w9, eq  // eq = none
   3648c:	mov	w22, #0x1                   	// #1
   36490:	tbnz	w10, #0, 365e0 <mpfr_gamma@@Base+0x5bc>
   36494:	and	w8, w9, w8
   36498:	tbnz	w8, #0, 365e0 <mpfr_gamma@@Base+0x5bc>
   3649c:	mov	x0, x19
   364a0:	bl	be20 <mpfr_nextbelow@plt>
   364a4:	mov	w22, #0xffffffff            	// #-1
   364a8:	b	365e0 <mpfr_gamma@@Base+0x5bc>
   364ac:	ldr	w9, [x21, #8]
   364b0:	tbz	w9, #31, 368ec <mpfr_gamma@@Base+0x8c8>
   364b4:	sub	x0, x29, #0x28
   364b8:	mov	w1, #0x35                  	// #53
   364bc:	bl	ca60 <mpfr_init2@plt>
   364c0:	sub	x0, x29, #0x68
   364c4:	mov	w1, #0x35                  	// #53
   364c8:	bl	ca60 <mpfr_init2@plt>
   364cc:	sub	x0, x29, #0x88
   364d0:	mov	w1, #0x35                  	// #53
   364d4:	bl	ca60 <mpfr_init2@plt>
   364d8:	sub	x0, x29, #0x28
   364dc:	mov	w1, #0x2                   	// #2
   364e0:	mov	w3, #0x3                   	// #3
   364e4:	mov	x2, x21
   364e8:	bl	ca30 <mpfr_ui_sub@plt>
   364ec:	sub	x0, x29, #0x28
   364f0:	sub	x1, x29, #0x28
   364f4:	mov	w2, #0x3                   	// #3
   364f8:	bl	c0d0 <mpfr_log@plt>
   364fc:	sub	x0, x29, #0x28
   36500:	sub	x1, x29, #0x28
   36504:	mov	w2, #0x1                   	// #1
   36508:	mov	w3, #0x3                   	// #3
   3650c:	bl	c520 <mpfr_sub_ui@plt>
   36510:	sub	x0, x29, #0x28
   36514:	sub	x1, x29, #0x28
   36518:	mov	w3, #0x2                   	// #2
   3651c:	mov	x2, x21
   36520:	bl	bda0 <mpfr_mul@plt>
   36524:	ldr	x8, [x21]
   36528:	ldr	x9, [x21, #16]
   3652c:	sub	x0, x29, #0x68
   36530:	sub	x10, x8, x9
   36534:	add	x10, x10, #0x2
   36538:	cmp	x9, #0x2
   3653c:	csinc	x8, x10, x8, lt  // lt = tstop
   36540:	add	x22, x8, #0x11
   36544:	mov	x1, x22
   36548:	bl	bf20 <mpfr_set_prec@plt>
   3654c:	sub	x0, x29, #0x88
   36550:	mov	x1, x22
   36554:	bl	bf20 <mpfr_set_prec@plt>
   36558:	sub	x0, x29, #0x68
   3655c:	mov	w1, #0x2                   	// #2
   36560:	mov	x2, x21
   36564:	mov	w3, wzr
   36568:	bl	ca30 <mpfr_ui_sub@plt>
   3656c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36570:	ldr	x1, [x0, #2688]
   36574:	add	x0, x0, #0xa80
   36578:	blr	x1
   3657c:	add	x1, x26, x0
   36580:	sub	x0, x29, #0x88
   36584:	mov	w2, wzr
   36588:	bl	c380 <mpfr_cache@plt>
   3658c:	sub	x0, x29, #0x88
   36590:	sub	x1, x29, #0x88
   36594:	sub	x2, x29, #0x68
   36598:	mov	w3, wzr
   3659c:	bl	bda0 <mpfr_mul@plt>
   365a0:	sub	x0, x29, #0x68
   365a4:	sub	x1, x29, #0x88
   365a8:	mov	w2, wzr
   365ac:	bl	c440 <mpfr_sin@plt>
   365b0:	ldur	x8, [x29, #-88]
   365b4:	mov	x9, #0x2                   	// #2
   365b8:	movk	x9, #0x8000, lsl #48
   365bc:	cmp	x8, x9
   365c0:	b.gt	367e0 <mpfr_gamma@@Base+0x7bc>
   365c4:	cmp	x8, x25
   365c8:	b.ne	365d0 <mpfr_gamma@@Base+0x5ac>  // b.any
   365cc:	bl	bce0 <mpfr_set_erangeflag@plt>
   365d0:	mov	w22, wzr
   365d4:	b	367e8 <mpfr_gamma@@Base+0x7c4>
   365d8:	mov	w21, w11
   365dc:	mov	w22, #0x1                   	// #1
   365e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   365e4:	ldr	x1, [x0, #2640]
   365e8:	add	x0, x0, #0xa50
   365ec:	blr	x1
   365f0:	str	w25, [x24, x0]
   365f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   365f8:	ldr	x1, [x0, #2576]
   365fc:	add	x0, x0, #0xa10
   36600:	blr	x1
   36604:	str	x26, [x24, x0]
   36608:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3660c:	ldr	x1, [x0, #2608]
   36610:	add	x0, x0, #0xa30
   36614:	blr	x1
   36618:	str	x27, [x24, x0]
   3661c:	ldr	x8, [x19, #16]
   36620:	cmp	x8, x27
   36624:	b.gt	36d9c <mpfr_gamma@@Base+0xd78>
   36628:	cmp	x8, x26
   3662c:	b.lt	36d9c <mpfr_gamma@@Base+0xd78>  // b.tstop
   36630:	orr	w8, w25, #0x8
   36634:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36638:	ldr	x1, [x0, #2640]
   3663c:	add	x0, x0, #0xa50
   36640:	blr	x1
   36644:	str	w8, [x24, x0]
   36648:	b	36df8 <mpfr_gamma@@Base+0xdd4>
   3664c:	add	x8, sp, #0x28
   36650:	mov	w9, #0x35                  	// #53
   36654:	adrp	x1, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   36658:	mov	w10, #0x1                   	// #1
   3665c:	add	x11, x8, #0x10
   36660:	stur	x9, [x29, #-40]
   36664:	stur	x9, [x29, #-72]
   36668:	stur	x9, [x29, #-104]
   3666c:	add	x9, x8, #0x18
   36670:	add	x8, x8, #0x20
   36674:	add	x1, x1, #0x500
   36678:	sub	x0, x29, #0x68
   3667c:	stur	w10, [x29, #-32]
   36680:	stur	w10, [x29, #-64]
   36684:	stp	xzr, x11, [sp, #40]
   36688:	stur	x11, [x29, #-16]
   3668c:	stur	x9, [x29, #-48]
   36690:	stur	x8, [x29, #-80]
   36694:	stur	w10, [x29, #-96]
   36698:	bl	c340 <mpfr_set_str_binary@plt>
   3669c:	sub	x0, x29, #0x28
   366a0:	sub	x2, x29, #0x68
   366a4:	mov	w3, #0x1                   	// #1
   366a8:	mov	x1, x21
   366ac:	bl	bda0 <mpfr_mul@plt>
   366b0:	sub	x0, x29, #0x48
   366b4:	mov	w2, #0x2                   	// #2
   366b8:	mov	w3, #0x1                   	// #1
   366bc:	mov	x1, x21
   366c0:	bl	c520 <mpfr_sub_ui@plt>
   366c4:	sub	x0, x29, #0x28
   366c8:	sub	x1, x29, #0x28
   366cc:	sub	x2, x29, #0x48
   366d0:	mov	w3, #0x1                   	// #1
   366d4:	bl	bde0 <mpfr_pow@plt>
   366d8:	sub	x0, x29, #0x28
   366dc:	sub	x1, x29, #0x28
   366e0:	sub	x2, x29, #0x68
   366e4:	mov	w3, #0x1                   	// #1
   366e8:	bl	bda0 <mpfr_mul@plt>
   366ec:	sub	x0, x29, #0x28
   366f0:	sub	x1, x29, #0x28
   366f4:	sub	x2, x29, #0x68
   366f8:	mov	w3, #0x1                   	// #1
   366fc:	bl	bda0 <mpfr_mul@plt>
   36700:	sub	x0, x29, #0x28
   36704:	sub	x1, x29, #0x28
   36708:	mov	w3, #0x1                   	// #1
   3670c:	mov	x2, x21
   36710:	bl	bda0 <mpfr_mul@plt>
   36714:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36718:	ldr	x1, [x0, #2640]
   3671c:	add	x0, x0, #0xa50
   36720:	blr	x1
   36724:	mov	x22, x0
   36728:	str	wzr, [x26, x0]
   3672c:	sub	x0, x29, #0x28
   36730:	sub	x1, x29, #0x28
   36734:	mov	w2, #0x1                   	// #1
   36738:	mov	w3, #0x1                   	// #1
   3673c:	bl	c2c0 <mpfr_mul_2ui@plt>
   36740:	ldr	w22, [x26, x22]
   36744:	ldr	x1, [sp, #40]
   36748:	ldur	x20, [x29, #-24]
   3674c:	cbz	x1, 36758 <mpfr_gamma@@Base+0x734>
   36750:	ldr	x0, [sp, #48]
   36754:	bl	cc00 <mpfr_free_func@plt>
   36758:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3675c:	ldr	x1, [x0, #2640]
   36760:	add	x0, x0, #0xa50
   36764:	blr	x1
   36768:	str	w28, [x26, x0]
   3676c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36770:	ldr	x1, [x0, #2576]
   36774:	add	x0, x0, #0xa10
   36778:	blr	x1
   3677c:	str	x27, [x26, x0]
   36780:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36784:	ldr	x1, [x0, #2608]
   36788:	add	x0, x0, #0xa30
   3678c:	blr	x1
   36790:	str	x24, [x26, x0]
   36794:	tbnz	w22, #1, 367b4 <mpfr_gamma@@Base+0x790>
   36798:	cmp	x20, x24
   3679c:	b.gt	367b4 <mpfr_gamma@@Base+0x790>
   367a0:	ldr	w2, [sp, #12]
   367a4:	mov	x0, x19
   367a8:	mov	x1, x21
   367ac:	bl	36e90 <mpfr_gamma@@Base+0xe6c>
   367b0:	b	367d8 <mpfr_gamma@@Base+0x7b4>
   367b4:	ldr	w1, [sp, #12]
   367b8:	mov	w2, #0x1                   	// #1
   367bc:	mov	x0, x19
   367c0:	bl	bf90 <mpfr_overflow@plt>
   367c4:	b	367d8 <mpfr_gamma@@Base+0x7b4>
   367c8:	ldr	w2, [sp, #12]
   367cc:	mov	x0, x19
   367d0:	mov	x1, x23
   367d4:	bl	c6d0 <mpfr_fac_ui@plt>
   367d8:	mov	w22, w0
   367dc:	b	36df8 <mpfr_gamma@@Base+0xdd4>
   367e0:	ldur	w8, [x29, #-96]
   367e4:	neg	w22, w8
   367e8:	sub	x0, x29, #0x68
   367ec:	sub	x1, x29, #0x68
   367f0:	mov	w3, #0x1                   	// #1
   367f4:	mov	w2, wzr
   367f8:	bl	c690 <mpfr_set4@plt>
   367fc:	sub	x0, x29, #0x88
   36800:	sub	x1, x29, #0x88
   36804:	mov	w2, #0x3                   	// #3
   36808:	mov	w3, #0x2                   	// #2
   3680c:	bl	bab0 <mpfr_mul_ui@plt>
   36810:	sub	x0, x29, #0x88
   36814:	sub	x1, x29, #0x88
   36818:	mov	w2, #0x1                   	// #1
   3681c:	mov	w3, #0x2                   	// #2
   36820:	bl	c270 <mpfr_add_ui@plt>
   36824:	ldur	x2, [x29, #-104]
   36828:	sub	x0, x29, #0x88
   3682c:	sub	x1, x29, #0x88
   36830:	mov	w3, #0x2                   	// #2
   36834:	bl	c8f0 <mpfr_div_2ui@plt>
   36838:	sub	x0, x29, #0x88
   3683c:	sub	x1, x29, #0x68
   36840:	mov	w2, #0x1                   	// #1
   36844:	bl	c980 <mpfr_cmp3@plt>
   36848:	tbnz	w0, #31, 36868 <mpfr_gamma@@Base+0x844>
   3684c:	sub	x0, x29, #0x28
   36850:	bl	c0b0 <mpfr_clear@plt>
   36854:	sub	x0, x29, #0x68
   36858:	bl	c0b0 <mpfr_clear@plt>
   3685c:	sub	x0, x29, #0x88
   36860:	bl	c0b0 <mpfr_clear@plt>
   36864:	b	368e8 <mpfr_gamma@@Base+0x8c4>
   36868:	sub	x0, x29, #0x68
   3686c:	sub	x1, x29, #0x68
   36870:	sub	x2, x29, #0x88
   36874:	mov	w3, #0x1                   	// #1
   36878:	bl	bbc0 <mpfr_sub@plt>
   3687c:	sub	x0, x29, #0x68
   36880:	sub	x2, x29, #0x68
   36884:	mov	w1, #0xc                   	// #12
   36888:	mov	w3, #0x2                   	// #2
   3688c:	bl	c2f0 <mpfr_ui_div@plt>
   36890:	sub	x0, x29, #0x68
   36894:	sub	x1, x29, #0x68
   36898:	mov	w2, #0x2                   	// #2
   3689c:	bl	c210 <mpfr_log2@plt>
   368a0:	sub	x0, x29, #0x28
   368a4:	sub	x1, x29, #0x68
   368a8:	sub	x2, x29, #0x28
   368ac:	mov	w3, #0x2                   	// #2
   368b0:	bl	c1e0 <mpfr_add@plt>
   368b4:	sub	x1, x27, #0x2
   368b8:	sub	x0, x29, #0x28
   368bc:	mov	x2, xzr
   368c0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   368c4:	mov	w23, w0
   368c8:	sub	x0, x29, #0x28
   368cc:	bl	c0b0 <mpfr_clear@plt>
   368d0:	sub	x0, x29, #0x68
   368d4:	bl	c0b0 <mpfr_clear@plt>
   368d8:	sub	x0, x29, #0x88
   368dc:	bl	c0b0 <mpfr_clear@plt>
   368e0:	cmp	w23, #0x0
   368e4:	b.le	36cf4 <mpfr_gamma@@Base+0xcd0>
   368e8:	ldr	w9, [x21, #8]
   368ec:	ldr	x8, [x19]
   368f0:	cmp	w9, #0x1
   368f4:	b.lt	3690c <mpfr_gamma@@Base+0x8e8>  // b.tstop
   368f8:	ldr	x9, [x21]
   368fc:	ldr	x10, [x21, #16]
   36900:	add	x11, x9, #0x1
   36904:	sub	x12, x9, x10
   36908:	b	36924 <mpfr_gamma@@Base+0x900>
   3690c:	ldr	x10, [x21, #16]
   36910:	ldr	x9, [x21]
   36914:	neg	x12, x10
   36918:	add	x11, x9, #0x1
   3691c:	and	x12, x12, x10, asr #63
   36920:	add	x12, x11, x12
   36924:	cmp	x8, x12
   36928:	sub	x9, x9, x10
   3692c:	csel	x8, x12, x8, lt  // lt = tstop
   36930:	add	x9, x9, #0x2
   36934:	cmp	x10, #0x2
   36938:	csel	x9, x9, x11, lt  // lt = tstop
   3693c:	cmp	x8, x9
   36940:	csel	x20, x9, x8, lt  // lt = tstop
   36944:	subs	x22, x20, #0x1
   36948:	b.eq	36e1c <mpfr_gamma@@Base+0xdf8>  // b.none
   3694c:	b.le	36e58 <mpfr_gamma@@Base+0xe34>
   36950:	clz	x8, x22
   36954:	mov	w9, #0x40                  	// #64
   36958:	sub	x8, x9, x8
   3695c:	add	x22, x8, x20
   36960:	add	x27, x22, #0x14
   36964:	cmp	x27, #0x1
   36968:	b.eq	36e30 <mpfr_gamma@@Base+0xe0c>  // b.none
   3696c:	cmn	x22, #0x13
   36970:	b.le	36e74 <mpfr_gamma@@Base+0xe50>
   36974:	add	x8, x22, #0x13
   36978:	clz	x8, x8
   3697c:	mov	w9, #0x40                  	// #64
   36980:	sub	x8, x9, x8
   36984:	add	x8, x8, x27
   36988:	sub	x23, x25, #0x117
   3698c:	cmp	x8, x23
   36990:	b.gt	36e44 <mpfr_gamma@@Base+0xe20>
   36994:	add	x9, x8, #0x13
   36998:	add	x10, x8, #0x52
   3699c:	cmp	x9, #0x0
   369a0:	csel	x9, x10, x9, lt  // lt = tstop
   369a4:	asr	x9, x9, #6
   369a8:	add	x20, x8, #0x14
   369ac:	cmp	x8, #0xed
   369b0:	add	x24, x9, #0x1
   369b4:	b.lt	369c8 <mpfr_gamma@@Base+0x9a4>  // b.tstop
   369b8:	lsl	x0, x24, #5
   369bc:	str	x0, [sp, #40]
   369c0:	bl	ccd0 <mpfr_allocate_func@plt>
   369c4:	b	369d4 <mpfr_gamma@@Base+0x9b0>
   369c8:	add	x8, sp, #0x28
   369cc:	add	x0, x8, #0x10
   369d0:	str	xzr, [sp, #40]
   369d4:	add	x8, x0, x24, lsl #3
   369d8:	stp	x8, x20, [x29, #-80]
   369dc:	mov	w8, #0x18                  	// #24
   369e0:	str	x0, [sp, #48]
   369e4:	stur	x0, [x29, #-16]
   369e8:	mov	w28, #0x1                   	// #1
   369ec:	add	x9, x0, x24, lsl #4
   369f0:	madd	x8, x24, x8, x0
   369f4:	sub	x0, x29, #0x98
   369f8:	stur	x20, [x29, #-136]
   369fc:	stur	w28, [x29, #-32]
   36a00:	stur	w28, [x29, #-96]
   36a04:	stp	x9, x20, [x29, #-112]
   36a08:	stur	w28, [x29, #-128]
   36a0c:	stp	x8, x20, [x29, #-48]
   36a10:	stur	w28, [x29, #-64]
   36a14:	bl	bfe0 <mpfr_mpz_init@plt>
   36a18:	cmp	x22, x23
   36a1c:	ldr	w22, [sp, #12]
   36a20:	b.gt	36e44 <mpfr_gamma@@Base+0xe20>
   36a24:	ldr	x1, [sp, #40]
   36a28:	cmp	w22, #0x0
   36a2c:	mov	w24, #0x40                  	// #64
   36a30:	cset	w23, eq  // eq = none
   36a34:	sub	x8, x27, #0x1
   36a38:	add	x9, x27, #0x3e
   36a3c:	cmp	x8, #0x0
   36a40:	csel	x8, x9, x8, lt  // lt = tstop
   36a44:	asr	x8, x8, #6
   36a48:	add	x20, x8, #0x1
   36a4c:	lsl	x2, x20, #5
   36a50:	str	x2, [sp, #40]
   36a54:	cbz	x1, 36a64 <mpfr_gamma@@Base+0xa40>
   36a58:	ldr	x0, [sp, #48]
   36a5c:	bl	c200 <mpfr_reallocate_func@plt>
   36a60:	b	36a6c <mpfr_gamma@@Base+0xa48>
   36a64:	mov	x0, x2
   36a68:	bl	ccd0 <mpfr_allocate_func@plt>
   36a6c:	mov	w10, #0x18                  	// #24
   36a70:	str	x0, [sp, #48]
   36a74:	stur	x0, [x29, #-16]
   36a78:	add	x8, x0, x20, lsl #3
   36a7c:	add	x9, x0, x20, lsl #4
   36a80:	madd	x10, x20, x10, x0
   36a84:	sub	x0, x29, #0x28
   36a88:	mov	w1, #0x2                   	// #2
   36a8c:	mov	x2, x21
   36a90:	mov	w3, wzr
   36a94:	stp	x10, x27, [x29, #-48]
   36a98:	stur	w28, [x29, #-32]
   36a9c:	stp	x9, x27, [x29, #-112]
   36aa0:	stur	w28, [x29, #-96]
   36aa4:	stur	x27, [x29, #-136]
   36aa8:	stur	w28, [x29, #-128]
   36aac:	stp	x8, x27, [x29, #-80]
   36ab0:	stur	w28, [x29, #-64]
   36ab4:	bl	ca30 <mpfr_ui_sub@plt>
   36ab8:	sub	x0, x29, #0x68
   36abc:	sub	x1, x29, #0x28
   36ac0:	mov	w2, wzr
   36ac4:	bl	c7a0 <mpfr_gamma@plt>
   36ac8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36acc:	ldr	x1, [x0, #2688]
   36ad0:	add	x0, x0, #0xa80
   36ad4:	blr	x1
   36ad8:	add	x1, x26, x0
   36adc:	sub	x0, x29, #0x88
   36ae0:	mov	w2, wzr
   36ae4:	bl	c380 <mpfr_cache@plt>
   36ae8:	sub	x0, x29, #0x48
   36aec:	sub	x1, x29, #0x88
   36af0:	sub	x2, x29, #0x28
   36af4:	mov	w3, wzr
   36af8:	bl	bda0 <mpfr_mul@plt>
   36afc:	ldur	x20, [x29, #-56]
   36b00:	sub	x0, x29, #0x48
   36b04:	sub	x1, x29, #0x48
   36b08:	mov	w2, wzr
   36b0c:	bl	c440 <mpfr_sin@plt>
   36b10:	ldur	x8, [x29, #-88]
   36b14:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   36b18:	cmp	x8, x9
   36b1c:	b.ne	36b78 <mpfr_gamma@@Base+0xb54>  // b.any
   36b20:	add	x2, sp, #0x10
   36b24:	sub	x3, x29, #0x68
   36b28:	sub	x4, x29, #0x88
   36b2c:	mov	x0, x19
   36b30:	mov	x1, x21
   36b34:	mov	w5, w22
   36b38:	bl	37cf4 <mpfr_gamma@@Base+0x1cd0>
   36b3c:	cbnz	w0, 36c5c <mpfr_gamma@@Base+0xc38>
   36b40:	sub	x8, x25, x27
   36b44:	sub	x8, x8, #0x103
   36b48:	cmp	x24, x8
   36b4c:	b.gt	36c2c <mpfr_gamma@@Base+0xc08>
   36b50:	add	x27, x27, x24
   36b54:	ldr	x1, [sp, #40]
   36b58:	ldr	w22, [sp, #12]
   36b5c:	cmp	x27, #0x0
   36b60:	sub	x8, x25, #0x103
   36b64:	cinc	x9, x27, lt  // lt = tstop
   36b68:	cmp	x27, x8
   36b6c:	asr	x24, x9, #1
   36b70:	b.le	36a34 <mpfr_gamma@@Base+0xa10>
   36b74:	b	36e44 <mpfr_gamma@@Base+0xe20>
   36b78:	ldur	x22, [x29, #-56]
   36b7c:	sub	x0, x29, #0x28
   36b80:	mov	w2, #0x1                   	// #1
   36b84:	mov	x1, x21
   36b88:	mov	w3, wzr
   36b8c:	bl	c520 <mpfr_sub_ui@plt>
   36b90:	sub	x0, x29, #0x28
   36b94:	sub	x1, x29, #0x88
   36b98:	sub	x2, x29, #0x28
   36b9c:	mov	w3, wzr
   36ba0:	bl	bda0 <mpfr_mul@plt>
   36ba4:	sub	x0, x29, #0x48
   36ba8:	sub	x1, x29, #0x48
   36bac:	sub	x2, x29, #0x68
   36bb0:	mov	w3, wzr
   36bb4:	bl	bda0 <mpfr_mul@plt>
   36bb8:	sub	x0, x29, #0x48
   36bbc:	sub	x1, x29, #0x28
   36bc0:	sub	x2, x29, #0x48
   36bc4:	mov	w3, wzr
   36bc8:	bl	c610 <mpfr_div@plt>
   36bcc:	ldur	x8, [x29, #-56]
   36bd0:	add	x9, x25, #0x2
   36bd4:	cmp	x8, x9
   36bd8:	b.lt	36b40 <mpfr_gamma@@Base+0xb1c>  // b.tstop
   36bdc:	ldur	x9, [x29, #-72]
   36be0:	sub	x8, x20, x22
   36be4:	add	x8, x8, #0x1
   36be8:	add	x10, x8, #0x4
   36bec:	cmp	x8, #0x3
   36bf0:	mov	w8, #0x6                   	// #6
   36bf4:	csel	x8, x8, x10, lt  // lt = tstop
   36bf8:	sub	x10, x9, #0x1
   36bfc:	add	x9, x9, #0x3e
   36c00:	cmp	x10, #0x0
   36c04:	csel	x9, x9, x10, lt  // lt = tstop
   36c08:	ldr	x10, [x19]
   36c0c:	ldur	x0, [x29, #-48]
   36c10:	sub	x2, x27, x8
   36c14:	asr	x8, x9, #6
   36c18:	add	x1, x8, #0x1
   36c1c:	add	x3, x10, x23
   36c20:	bl	c370 <mpfr_round_p@plt>
   36c24:	cbnz	w0, 36c48 <mpfr_gamma@@Base+0xc24>
   36c28:	b	36b40 <mpfr_gamma@@Base+0xb1c>
   36c2c:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   36c30:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   36c34:	mov	w1, #0x1d2                 	// #466
   36c38:	add	x0, x0, #0xb7
   36c3c:	add	x2, x2, #0x122
   36c40:	bl	cb20 <mpfr_assert_fail@plt>
   36c44:	b	36b50 <mpfr_gamma@@Base+0xb2c>
   36c48:	ldur	w3, [x29, #-64]
   36c4c:	ldr	w2, [sp, #12]
   36c50:	sub	x1, x29, #0x48
   36c54:	mov	x0, x19
   36c58:	bl	c690 <mpfr_set4@plt>
   36c5c:	ldr	x1, [sp, #40]
   36c60:	mov	w22, w0
   36c64:	cbz	x1, 36c70 <mpfr_gamma@@Base+0xc4c>
   36c68:	ldr	x0, [sp, #48]
   36c6c:	bl	cc00 <mpfr_free_func@plt>
   36c70:	sub	x0, x29, #0x98
   36c74:	bl	c1b0 <mpfr_mpz_clear@plt>
   36c78:	ldr	w8, [sp, #16]
   36c7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36c80:	ldr	x1, [x0, #2640]
   36c84:	add	x0, x0, #0xa50
   36c88:	blr	x1
   36c8c:	ldr	x9, [sp, #24]
   36c90:	str	w8, [x26, x0]
   36c94:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36c98:	ldr	x1, [x0, #2576]
   36c9c:	add	x0, x0, #0xa10
   36ca0:	blr	x1
   36ca4:	ldr	x11, [sp, #32]
   36ca8:	str	x9, [x26, x0]
   36cac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36cb0:	ldr	x1, [x0, #2608]
   36cb4:	add	x0, x0, #0xa30
   36cb8:	blr	x1
   36cbc:	str	x11, [x26, x0]
   36cc0:	ldr	x10, [x19, #16]
   36cc4:	cmp	x10, x11
   36cc8:	b.gt	36e48 <mpfr_gamma@@Base+0xe24>
   36ccc:	cmp	x10, x9
   36cd0:	b.lt	36e48 <mpfr_gamma@@Base+0xe24>  // b.tstop
   36cd4:	cbz	w22, 36df8 <mpfr_gamma@@Base+0xdd4>
   36cd8:	orr	w8, w8, #0x8
   36cdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36ce0:	ldr	x1, [x0, #2640]
   36ce4:	add	x0, x0, #0xa50
   36ce8:	blr	x1
   36cec:	str	w8, [x26, x0]
   36cf0:	b	36df8 <mpfr_gamma@@Base+0xdd4>
   36cf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36cf8:	ldr	x1, [x0, #2640]
   36cfc:	add	x0, x0, #0xa50
   36d00:	blr	x1
   36d04:	str	w28, [x26, x0]
   36d08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36d0c:	ldr	x1, [x0, #2576]
   36d10:	add	x0, x0, #0xa10
   36d14:	blr	x1
   36d18:	str	x27, [x26, x0]
   36d1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36d20:	ldr	x1, [x0, #2608]
   36d24:	add	x0, x0, #0xa30
   36d28:	blr	x1
   36d2c:	ldr	w8, [sp, #12]
   36d30:	str	x24, [x26, x0]
   36d34:	mov	x0, x19
   36d38:	mov	w2, w22
   36d3c:	cmp	w8, #0x0
   36d40:	csinc	w1, w8, wzr, ne  // ne = any
   36d44:	bl	c3c0 <mpfr_underflow@plt>
   36d48:	b	367d8 <mpfr_gamma@@Base+0x7b4>
   36d4c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   36d50:	cmp	x9, x8
   36d54:	b.eq	36db0 <mpfr_gamma@@Base+0xd8c>  // b.none
   36d58:	mov	x8, #0x2                   	// #2
   36d5c:	movk	x8, #0x8000, lsl #48
   36d60:	cmp	x9, x8
   36d64:	b.eq	36dd0 <mpfr_gamma@@Base+0xdac>  // b.none
   36d68:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   36d6c:	str	x8, [x19, #16]
   36d70:	ldr	w8, [x21, #8]
   36d74:	str	w8, [x19, #8]
   36d78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36d7c:	ldr	x1, [x0, #2640]
   36d80:	add	x0, x0, #0xa50
   36d84:	blr	x1
   36d88:	mrs	x8, tpidr_el0
   36d8c:	ldr	w9, [x8, x0]
   36d90:	mov	w22, wzr
   36d94:	orr	w9, w9, #0x20
   36d98:	b	36df4 <mpfr_gamma@@Base+0xdd0>
   36d9c:	mov	x0, x19
   36da0:	mov	w1, w22
   36da4:	mov	w2, w21
   36da8:	bl	cb10 <mpfr_check_range@plt>
   36dac:	b	367d8 <mpfr_gamma@@Base+0x7b4>
   36db0:	ldr	w8, [x21, #8]
   36db4:	tbnz	w8, #31, 36dd0 <mpfr_gamma@@Base+0xdac>
   36db8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   36dbc:	mov	w9, #0x1                   	// #1
   36dc0:	mov	w22, wzr
   36dc4:	str	x8, [x19, #16]
   36dc8:	str	w9, [x19, #8]
   36dcc:	b	36df8 <mpfr_gamma@@Base+0xdd4>
   36dd0:	str	x25, [x19, #16]
   36dd4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36dd8:	ldr	x1, [x0, #2640]
   36ddc:	add	x0, x0, #0xa50
   36de0:	blr	x1
   36de4:	mrs	x8, tpidr_el0
   36de8:	ldr	w9, [x8, x0]
   36dec:	mov	w22, wzr
   36df0:	orr	w9, w9, #0x4
   36df4:	str	w9, [x8, x0]
   36df8:	mov	w0, w22
   36dfc:	ldp	x20, x19, [sp, #416]
   36e00:	ldp	x22, x21, [sp, #400]
   36e04:	ldp	x24, x23, [sp, #384]
   36e08:	ldp	x26, x25, [sp, #368]
   36e0c:	ldp	x28, x27, [sp, #352]
   36e10:	ldp	x29, x30, [sp, #336]
   36e14:	add	sp, sp, #0x1b0
   36e18:	ret
   36e1c:	mov	x8, xzr
   36e20:	add	x22, x8, x20
   36e24:	add	x27, x22, #0x14
   36e28:	cmp	x27, #0x1
   36e2c:	b.ne	3696c <mpfr_gamma@@Base+0x948>  // b.any
   36e30:	mov	x8, xzr
   36e34:	add	x8, x8, x27
   36e38:	sub	x23, x25, #0x117
   36e3c:	cmp	x8, x23
   36e40:	b.le	36994 <mpfr_gamma@@Base+0x970>
   36e44:	bl	c8e0 <mpfr_abort_prec_max@plt>
   36e48:	ldr	w2, [sp, #12]
   36e4c:	mov	x0, x19
   36e50:	mov	w1, w22
   36e54:	b	36da8 <mpfr_gamma@@Base+0xd84>
   36e58:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   36e5c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   36e60:	add	x0, x0, #0xb7
   36e64:	add	x2, x2, #0x536
   36e68:	mov	w1, #0x18f                 	// #399
   36e6c:	bl	cb20 <mpfr_assert_fail@plt>
   36e70:	b	36950 <mpfr_gamma@@Base+0x92c>
   36e74:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   36e78:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   36e7c:	add	x0, x0, #0xb7
   36e80:	add	x2, x2, #0x536
   36e84:	mov	w1, #0x192                 	// #402
   36e88:	bl	cb20 <mpfr_assert_fail@plt>
   36e8c:	b	36974 <mpfr_gamma@@Base+0x950>
   36e90:	sub	sp, sp, #0x1b0
   36e94:	stp	x24, x23, [sp, #384]
   36e98:	mov	x24, x1
   36e9c:	stp	x20, x19, [sp, #416]
   36ea0:	str	w2, [sp, #68]
   36ea4:	mov	x20, x0
   36ea8:	mov	w1, #0x1                   	// #1
   36eac:	mov	x0, x24
   36eb0:	mov	x2, xzr
   36eb4:	str	d8, [sp, #320]
   36eb8:	stp	x29, x30, [sp, #336]
   36ebc:	stp	x28, x27, [sp, #352]
   36ec0:	stp	x26, x25, [sp, #368]
   36ec4:	stp	x22, x21, [sp, #400]
   36ec8:	add	x29, sp, #0x140
   36ecc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   36ed0:	mov	w19, w0
   36ed4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36ed8:	ldr	x1, [x0, #2640]
   36edc:	add	x0, x0, #0xa50
   36ee0:	blr	x1
   36ee4:	mrs	x12, tpidr_el0
   36ee8:	ldr	w8, [x12, x0]
   36eec:	str	w8, [sp, #128]
   36ef0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36ef4:	ldr	x1, [x0, #2576]
   36ef8:	add	x0, x0, #0xa10
   36efc:	blr	x1
   36f00:	ldr	x9, [x12, x0]
   36f04:	mov	x8, x0
   36f08:	str	x9, [sp, #136]
   36f0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   36f10:	ldr	x1, [x0, #2608]
   36f14:	add	x0, x0, #0xa30
   36f18:	blr	x1
   36f1c:	ldr	x9, [x12, x0]
   36f20:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   36f24:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   36f28:	str	x10, [x12, x8]
   36f2c:	str	x9, [sp, #144]
   36f30:	str	x11, [x12, x0]
   36f34:	ldr	x23, [x20]
   36f38:	sub	x0, x29, #0x28
   36f3c:	mov	w1, #0x1                   	// #1
   36f40:	str	x12, [sp, #120]
   36f44:	bl	ca60 <mpfr_init2@plt>
   36f48:	sub	x0, x29, #0x48
   36f4c:	mov	w1, #0x1                   	// #1
   36f50:	bl	ca60 <mpfr_init2@plt>
   36f54:	sub	x0, x29, #0x68
   36f58:	mov	w1, #0x1                   	// #1
   36f5c:	bl	ca60 <mpfr_init2@plt>
   36f60:	sub	x0, x29, #0x88
   36f64:	mov	w1, #0x1                   	// #1
   36f68:	bl	ca60 <mpfr_init2@plt>
   36f6c:	add	x0, sp, #0x98
   36f70:	mov	w1, #0x1                   	// #1
   36f74:	bl	ca60 <mpfr_init2@plt>
   36f78:	str	x24, [x29, #8]
   36f7c:	str	x20, [sp, #48]
   36f80:	tbnz	w19, #31, 3788c <mpfr_gamma@@Base+0x1868>
   36f84:	subs	x19, x23, #0x1
   36f88:	b.eq	37c54 <mpfr_gamma@@Base+0x1c30>  // b.none
   36f8c:	b.le	37c6c <mpfr_gamma@@Base+0x1c48>
   36f90:	clz	x8, x19
   36f94:	mov	w9, #0x40                  	// #64
   36f98:	sub	x8, x9, x8
   36f9c:	add	x19, x8, x23
   36fa0:	subs	x20, x19, #0x1
   36fa4:	b.eq	37c64 <mpfr_gamma@@Base+0x1c40>  // b.none
   36fa8:	b.le	37c88 <mpfr_gamma@@Base+0x1c64>
   36fac:	clz	x8, x20
   36fb0:	mov	w9, #0x4d                  	// #77
   36fb4:	sub	x8, x9, x8
   36fb8:	add	x25, x8, x19
   36fbc:	ldr	w8, [sp, #68]
   36fc0:	fmov	d8, #2.500000000000000000e+00
   36fc4:	mov	w21, #0x80000000            	// #-2147483648
   36fc8:	cmp	w8, #0x0
   36fcc:	mov	w8, #0x40                  	// #64
   36fd0:	str	x8, [sp, #16]
   36fd4:	cinc	x8, x23, eq  // eq = none
   36fd8:	str	x8, [sp, #8]
   36fdc:	sub	x0, x29, #0x28
   36fe0:	mov	w1, #0x35                  	// #53
   36fe4:	bl	bf20 <mpfr_set_prec@plt>
   36fe8:	cmp	x25, #0x64
   36fec:	b.gt	37000 <mpfr_gamma@@Base+0xfdc>
   36ff0:	sub	x0, x29, #0x28
   36ff4:	mov	w1, #0x266                 	// #614
   36ff8:	mov	x2, #0xfffffffffffffff6    	// #-10
   36ffc:	b	37088 <mpfr_gamma@@Base+0x1064>
   37000:	cmp	x25, #0x1f4
   37004:	b.gt	37018 <mpfr_gamma@@Base+0xff4>
   37008:	sub	x0, x29, #0x28
   3700c:	mov	w1, #0x333                 	// #819
   37010:	mov	x2, #0xfffffffffffffff6    	// #-10
   37014:	b	37088 <mpfr_gamma@@Base+0x1064>
   37018:	cmp	x25, #0x3e8
   3701c:	b.gt	37030 <mpfr_gamma@@Base+0x100c>
   37020:	sub	x0, x29, #0x28
   37024:	mov	w1, #0x533                 	// #1331
   37028:	mov	x2, #0xfffffffffffffff6    	// #-10
   3702c:	b	37088 <mpfr_gamma@@Base+0x1064>
   37030:	cmp	x25, #0x7d0
   37034:	b.gt	37048 <mpfr_gamma@@Base+0x1024>
   37038:	sub	x0, x29, #0x28
   3703c:	mov	w1, #0x6cd                 	// #1741
   37040:	mov	x2, #0xfffffffffffffff6    	// #-10
   37044:	b	37088 <mpfr_gamma@@Base+0x1064>
   37048:	mov	w8, #0x1388                	// #5000
   3704c:	cmp	x25, x8
   37050:	b.gt	37064 <mpfr_gamma@@Base+0x1040>
   37054:	sub	x0, x29, #0x28
   37058:	mov	w1, #0x8cd                 	// #2253
   3705c:	mov	x2, #0xfffffffffffffff6    	// #-10
   37060:	b	37088 <mpfr_gamma@@Base+0x1064>
   37064:	mov	w8, #0x2710                	// #10000
   37068:	sub	x0, x29, #0x28
   3706c:	cmp	x25, x8
   37070:	b.gt	37080 <mpfr_gamma@@Base+0x105c>
   37074:	mov	w1, #0xd9a                 	// #3482
   37078:	mov	x2, #0xfffffffffffffff6    	// #-10
   3707c:	b	37088 <mpfr_gamma@@Base+0x1064>
   37080:	mov	w1, #0x9                   	// #9
   37084:	mov	x2, #0xffffffffffffffff    	// #-1
   37088:	mov	w3, wzr
   3708c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   37090:	sub	x0, x29, #0x28
   37094:	mov	w1, #0x4                   	// #4
   37098:	mov	x2, #0xfffffffffffffffc    	// #-4
   3709c:	mov	w3, #0x2                   	// #2
   370a0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   370a4:	sub	x0, x29, #0x28
   370a8:	sub	x1, x29, #0x28
   370ac:	mov	w3, #0x2                   	// #2
   370b0:	mov	x2, x25
   370b4:	bl	bab0 <mpfr_mul_ui@plt>
   370b8:	sub	x1, x29, #0x28
   370bc:	mov	w2, #0x1                   	// #1
   370c0:	mov	x0, x24
   370c4:	bl	c980 <mpfr_cmp3@plt>
   370c8:	tbnz	w0, #31, 370d4 <mpfr_gamma@@Base+0x10b0>
   370cc:	mov	w27, #0x3                   	// #3
   370d0:	b	37100 <mpfr_gamma@@Base+0x10dc>
   370d4:	sub	x0, x29, #0x28
   370d8:	sub	x1, x29, #0x28
   370dc:	mov	w3, #0x2                   	// #2
   370e0:	mov	x2, x24
   370e4:	bl	bbc0 <mpfr_sub@plt>
   370e8:	sub	x0, x29, #0x28
   370ec:	mov	w1, #0x2                   	// #2
   370f0:	bl	bcf0 <mpfr_get_ui@plt>
   370f4:	cmp	x0, #0x3
   370f8:	mov	w8, #0x3                   	// #3
   370fc:	csel	x27, x0, x8, hi  // hi = pmore
   37100:	sub	x0, x29, #0x28
   37104:	mov	x1, x25
   37108:	bl	bf20 <mpfr_set_prec@plt>
   3710c:	sub	x0, x29, #0x48
   37110:	mov	x1, x25
   37114:	bl	bf20 <mpfr_set_prec@plt>
   37118:	sub	x0, x29, #0x68
   3711c:	mov	x1, x25
   37120:	bl	bf20 <mpfr_set_prec@plt>
   37124:	sub	x0, x29, #0x88
   37128:	mov	x1, x25
   3712c:	bl	bf20 <mpfr_set_prec@plt>
   37130:	add	x0, sp, #0x98
   37134:	mov	x1, x25
   37138:	bl	bf20 <mpfr_set_prec@plt>
   3713c:	add	x0, sp, #0x98
   37140:	mov	x1, x24
   37144:	mov	x2, x27
   37148:	mov	w3, wzr
   3714c:	bl	c270 <mpfr_add_ui@plt>
   37150:	sub	x0, x29, #0x28
   37154:	add	x1, sp, #0x98
   37158:	mov	w2, wzr
   3715c:	bl	c0d0 <mpfr_log@plt>
   37160:	sub	x0, x29, #0x48
   37164:	add	x1, sp, #0x98
   37168:	mov	w2, #0x1                   	// #1
   3716c:	mov	w3, wzr
   37170:	bl	c2c0 <mpfr_mul_2ui@plt>
   37174:	sub	x0, x29, #0x48
   37178:	sub	x1, x29, #0x48
   3717c:	mov	w2, #0x1                   	// #1
   37180:	mov	w3, wzr
   37184:	bl	c520 <mpfr_sub_ui@plt>
   37188:	sub	x0, x29, #0x28
   3718c:	sub	x1, x29, #0x28
   37190:	sub	x2, x29, #0x48
   37194:	mov	w3, wzr
   37198:	bl	bda0 <mpfr_mul@plt>
   3719c:	sub	x0, x29, #0x28
   371a0:	sub	x1, x29, #0x28
   371a4:	mov	w2, #0x1                   	// #1
   371a8:	mov	w3, wzr
   371ac:	bl	c8f0 <mpfr_div_2ui@plt>
   371b0:	sub	x0, x29, #0x28
   371b4:	sub	x1, x29, #0x28
   371b8:	add	x2, sp, #0x98
   371bc:	mov	w3, wzr
   371c0:	bl	bbc0 <mpfr_sub@plt>
   371c4:	sub	x0, x29, #0x68
   371c8:	add	x2, sp, #0x98
   371cc:	mov	w1, #0x1                   	// #1
   371d0:	mov	w3, wzr
   371d4:	bl	c2f0 <mpfr_ui_div@plt>
   371d8:	sub	x0, x29, #0x48
   371dc:	sub	x1, x29, #0x68
   371e0:	mov	w2, #0xc                   	// #12
   371e4:	mov	w3, wzr
   371e8:	bl	cc40 <mpfr_div_ui@plt>
   371ec:	ldur	w3, [x29, #-64]
   371f0:	sub	x0, x29, #0x88
   371f4:	sub	x1, x29, #0x48
   371f8:	mov	w2, wzr
   371fc:	bl	c690 <mpfr_set4@plt>
   37200:	sub	x0, x29, #0x28
   37204:	sub	x1, x29, #0x28
   37208:	sub	x2, x29, #0x88
   3720c:	mov	w3, wzr
   37210:	bl	c1e0 <mpfr_add@plt>
   37214:	sub	x0, x29, #0x68
   37218:	sub	x1, x29, #0x68
   3721c:	sub	x2, x29, #0x68
   37220:	mov	w3, wzr
   37224:	bl	bda0 <mpfr_mul@plt>
   37228:	ldur	x8, [x29, #-120]
   3722c:	ldur	x9, [x29, #-24]
   37230:	add	x8, x8, x25
   37234:	cmp	x8, x9
   37238:	b.ge	372f4 <mpfr_gamma@@Base+0x12d0>  // b.tcont
   3723c:	mov	w28, #0x2                   	// #2
   37240:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37244:	ldr	x1, [x0, #2688]
   37248:	add	x0, x0, #0xa80
   3724c:	blr	x1
   37250:	ldr	x8, [sp, #120]
   37254:	mov	w2, wzr
   37258:	add	x1, x8, x0
   3725c:	sub	x0, x29, #0x88
   37260:	bl	c380 <mpfr_cache@plt>
   37264:	sub	x0, x29, #0x88
   37268:	sub	x1, x29, #0x88
   3726c:	mov	w2, #0x1                   	// #1
   37270:	mov	w3, wzr
   37274:	bl	c2c0 <mpfr_mul_2ui@plt>
   37278:	ldr	w3, [x24, #8]
   3727c:	sub	x0, x29, #0x48
   37280:	mov	x1, x24
   37284:	mov	w2, wzr
   37288:	bl	c690 <mpfr_set4@plt>
   3728c:	mov	w8, #0x2                   	// #2
   37290:	mov	w0, #0x40                  	// #64
   37294:	mov	w9, #0x20                  	// #32
   37298:	mov	w20, #0x3                   	// #3
   3729c:	mov	x10, x8
   372a0:	mul	x8, x20, x20
   372a4:	add	x20, x20, #0x1
   372a8:	add	x9, x9, #0x10
   372ac:	add	x0, x0, #0x20
   372b0:	cmp	x8, x27
   372b4:	add	x8, x10, #0x1
   372b8:	b.cc	3729c <mpfr_gamma@@Base+0x1278>  // b.lo, b.ul, b.last
   372bc:	str	x10, [sp, #104]
   372c0:	str	x9, [sp, #72]
   372c4:	str	x0, [sp, #24]
   372c8:	bl	ccd0 <mpfr_allocate_func@plt>
   372cc:	sub	x26, x20, #0x2
   372d0:	mov	x23, x0
   372d4:	cmp	x26, #0x2
   372d8:	sub	x22, x20, #0x1
   372dc:	b.cs	3741c <mpfr_gamma@@Base+0x13f8>  // b.hs, b.nlast
   372e0:	add	x0, x23, #0x40
   372e4:	mov	x1, x24
   372e8:	mov	w2, wzr
   372ec:	bl	c3f0 <mpfr_sqr@plt>
   372f0:	b	374b4 <mpfr_gamma@@Base+0x1490>
   372f4:	mov	w22, #0x5                   	// #5
   372f8:	mov	w28, #0x2                   	// #2
   372fc:	b	373c0 <mpfr_gamma@@Base+0x139c>
   37300:	sub	x0, x29, #0x48
   37304:	sub	x1, x29, #0x48
   37308:	mov	w3, wzr
   3730c:	bl	bab0 <mpfr_mul_ui@plt>
   37310:	sub	x0, x29, #0x48
   37314:	sub	x1, x29, #0x48
   37318:	mov	x2, x20
   3731c:	mov	w3, wzr
   37320:	bl	bab0 <mpfr_mul_ui@plt>
   37324:	sub	x0, x29, #0x48
   37328:	sub	x1, x29, #0x48
   3732c:	mov	x2, x19
   37330:	mov	w3, wzr
   37334:	bl	cc40 <mpfr_div_ui@plt>
   37338:	sub	x2, x22, #0x2
   3733c:	sub	x0, x29, #0x48
   37340:	sub	x1, x29, #0x48
   37344:	mov	w3, wzr
   37348:	bl	cc40 <mpfr_div_ui@plt>
   3734c:	sub	x0, x29, #0x48
   37350:	sub	x1, x29, #0x48
   37354:	mov	x2, x19
   37358:	mov	w3, wzr
   3735c:	bl	cc40 <mpfr_div_ui@plt>
   37360:	mov	x2, x22
   37364:	sub	x0, x29, #0x48
   37368:	sub	x1, x29, #0x48
   3736c:	mov	w3, wzr
   37370:	bl	cc40 <mpfr_div_ui@plt>
   37374:	mov	x0, x28
   37378:	bl	c820 <mpfr_bernoulli_cache@plt>
   3737c:	mov	x2, x0
   37380:	sub	x0, x29, #0x88
   37384:	sub	x1, x29, #0x48
   37388:	mov	w3, wzr
   3738c:	bl	c4c0 <mpfr_mul_z@plt>
   37390:	sub	x0, x29, #0x28
   37394:	sub	x1, x29, #0x28
   37398:	sub	x2, x29, #0x88
   3739c:	mov	w3, wzr
   373a0:	bl	c1e0 <mpfr_add@plt>
   373a4:	ldur	x8, [x29, #-120]
   373a8:	ldur	x9, [x29, #-24]
   373ac:	add	x28, x28, #0x1
   373b0:	add	x22, x22, #0x2
   373b4:	add	x8, x8, x25
   373b8:	cmp	x8, x9
   373bc:	b.lt	37240 <mpfr_gamma@@Base+0x121c>  // b.tstop
   373c0:	sub	x0, x29, #0x48
   373c4:	sub	x1, x29, #0x48
   373c8:	sub	x2, x29, #0x68
   373cc:	mov	w3, wzr
   373d0:	bl	bda0 <mpfr_mul@plt>
   373d4:	sub	x19, x22, #0x1
   373d8:	sub	x2, x22, #0x3
   373dc:	cmp	x28, x21
   373e0:	sub	x20, x22, #0x4
   373e4:	b.hi	37300 <mpfr_gamma@@Base+0x12dc>  // b.pmore
   373e8:	mul	x2, x2, x20
   373ec:	sub	x0, x29, #0x48
   373f0:	sub	x1, x29, #0x48
   373f4:	mov	w3, wzr
   373f8:	bl	bab0 <mpfr_mul_ui@plt>
   373fc:	sub	x8, x22, #0x2
   37400:	mul	x2, x8, x19
   37404:	sub	x0, x29, #0x48
   37408:	sub	x1, x29, #0x48
   3740c:	mov	w3, wzr
   37410:	bl	cc40 <mpfr_div_ui@plt>
   37414:	mul	x2, x22, x19
   37418:	b	37364 <mpfr_gamma@@Base+0x1340>
   3741c:	add	x19, x23, #0x40
   37420:	mov	w21, #0x2                   	// #2
   37424:	mov	x0, x19
   37428:	mov	x1, x25
   3742c:	bl	ca60 <mpfr_init2@plt>
   37430:	add	x21, x21, #0x1
   37434:	cmp	x21, x26
   37438:	add	x19, x19, #0x20
   3743c:	b.ls	37424 <mpfr_gamma@@Base+0x1400>  // b.plast
   37440:	add	x0, x23, #0x40
   37444:	mov	x1, x24
   37448:	mov	w2, wzr
   3744c:	bl	c3f0 <mpfr_sqr@plt>
   37450:	cmp	x26, #0x3
   37454:	b.cc	374b4 <mpfr_gamma@@Base+0x1490>  // b.lo, b.ul, b.last
   37458:	add	x19, x23, #0x60
   3745c:	mov	w21, #0x3                   	// #3
   37460:	b	37488 <mpfr_gamma@@Base+0x1464>
   37464:	sub	x1, x19, #0x20
   37468:	mov	x0, x19
   3746c:	mov	x2, x24
   37470:	mov	w3, wzr
   37474:	bl	bda0 <mpfr_mul@plt>
   37478:	add	x21, x21, #0x1
   3747c:	cmp	x21, x26
   37480:	add	x19, x19, #0x20
   37484:	b.hi	374b4 <mpfr_gamma@@Base+0x1490>  // b.pmore
   37488:	tbnz	w21, #0, 37464 <mpfr_gamma@@Base+0x1440>
   3748c:	lsl	x8, x21, #4
   37490:	and	x8, x8, #0xffffffffffffffe0
   37494:	add	x1, x23, x8
   37498:	mov	x0, x19
   3749c:	mov	w2, wzr
   374a0:	bl	c3f0 <mpfr_sqr@plt>
   374a4:	add	x21, x21, #0x1
   374a8:	cmp	x21, x26
   374ac:	add	x19, x19, #0x20
   374b0:	b.ls	37488 <mpfr_gamma@@Base+0x1464>  // b.plast
   374b4:	ldr	x0, [sp, #72]
   374b8:	str	x23, [sp, #56]
   374bc:	bl	ccd0 <mpfr_allocate_func@plt>
   374c0:	mov	x19, x0
   374c4:	mov	x23, xzr
   374c8:	mov	x21, x0
   374cc:	mov	x0, x21
   374d0:	bl	bfe0 <mpfr_mpz_init@plt>
   374d4:	add	x23, x23, #0x1
   374d8:	cmp	x23, x26
   374dc:	add	x21, x21, #0x10
   374e0:	b.ls	374cc <mpfr_gamma@@Base+0x14a8>  // b.plast
   374e4:	cmp	x22, x27
   374e8:	stp	x28, x25, [sp, #32]
   374ec:	b.ls	374f8 <mpfr_gamma@@Base+0x14d4>  // b.plast
   374f0:	mov	w28, #0x1                   	// #1
   374f4:	b	3763c <mpfr_gamma@@Base+0x1618>
   374f8:	ldr	x8, [sp, #56]
   374fc:	cmp	x20, #0x2
   37500:	b.eq	37858 <mpfr_gamma@@Base+0x1834>  // b.none
   37504:	add	x9, x19, #0x10
   37508:	add	x8, x8, #0x20
   3750c:	mov	w21, #0x1                   	// #1
   37510:	stp	x8, x9, [sp, #80]
   37514:	str	x27, [sp, #96]
   37518:	mov	w1, #0x1                   	// #1
   3751c:	mov	x0, x19
   37520:	str	x22, [sp, #112]
   37524:	bl	bd00 <__gmpz_set_ui@plt>
   37528:	mov	x28, xzr
   3752c:	mov	x22, xzr
   37530:	mov	x25, x19
   37534:	b	3755c <mpfr_gamma@@Base+0x1538>
   37538:	mov	x0, x19
   3753c:	mov	x1, x19
   37540:	mov	x2, x20
   37544:	bl	c140 <__gmpz_mul_ui@plt>
   37548:	sub	x28, x28, #0x1
   3754c:	cmp	x26, x24
   37550:	add	x25, x25, #0x10
   37554:	mov	x22, x24
   37558:	b.eq	375b0 <mpfr_gamma@@Base+0x158c>  // b.none
   3755c:	add	x24, x22, #0x1
   37560:	add	x0, x19, x24, lsl #4
   37564:	add	x1, x19, x22, lsl #4
   37568:	bl	bff0 <__gmpz_set@plt>
   3756c:	add	x20, x22, x21
   37570:	cbz	x22, 37538 <mpfr_gamma@@Base+0x1514>
   37574:	mov	x23, x25
   37578:	mov	x27, x28
   3757c:	mov	x0, x23
   37580:	mov	x1, x23
   37584:	mov	x2, x20
   37588:	bl	c140 <__gmpz_mul_ui@plt>
   3758c:	sub	x22, x23, #0x10
   37590:	mov	x0, x23
   37594:	mov	x1, x23
   37598:	mov	x2, x22
   3759c:	bl	c9a0 <__gmpz_add@plt>
   375a0:	adds	x27, x27, #0x1
   375a4:	mov	x23, x22
   375a8:	b.cc	3757c <mpfr_gamma@@Base+0x1558>  // b.lo, b.ul, b.last
   375ac:	b	37538 <mpfr_gamma@@Base+0x1514>
   375b0:	sub	x0, x29, #0x68
   375b4:	mov	x1, x19
   375b8:	mov	w2, wzr
   375bc:	bl	c250 <mpfr_set_z@plt>
   375c0:	ldp	x22, x20, [sp, #80]
   375c4:	ldr	x23, [sp, #104]
   375c8:	ldr	x24, [x29, #8]
   375cc:	mov	x21, xzr
   375d0:	cmp	x21, #0x0
   375d4:	csel	x1, x24, x22, eq  // eq = none
   375d8:	add	x0, sp, #0x98
   375dc:	mov	x2, x20
   375e0:	mov	w3, wzr
   375e4:	bl	c4c0 <mpfr_mul_z@plt>
   375e8:	sub	x0, x29, #0x68
   375ec:	sub	x1, x29, #0x68
   375f0:	add	x2, sp, #0x98
   375f4:	mov	w3, wzr
   375f8:	bl	c1e0 <mpfr_add@plt>
   375fc:	sub	x23, x23, #0x1
   37600:	add	x20, x20, #0x10
   37604:	add	x22, x22, #0x20
   37608:	sub	x21, x21, #0x1
   3760c:	cbnz	x23, 375d0 <mpfr_gamma@@Base+0x15ac>
   37610:	sub	x0, x29, #0x48
   37614:	sub	x1, x29, #0x48
   37618:	sub	x2, x29, #0x68
   3761c:	mov	w3, wzr
   37620:	bl	bda0 <mpfr_mul@plt>
   37624:	ldr	x28, [sp, #112]
   37628:	ldr	x27, [sp, #96]
   3762c:	add	x22, x28, x26
   37630:	cmp	x22, x27
   37634:	mov	x21, x28
   37638:	b.ls	37518 <mpfr_gamma@@Base+0x14f4>  // b.plast
   3763c:	mov	x21, xzr
   37640:	mov	x20, x19
   37644:	mov	x0, x20
   37648:	bl	c1b0 <mpfr_mpz_clear@plt>
   3764c:	add	x21, x21, #0x1
   37650:	cmp	x21, x26
   37654:	add	x20, x20, #0x10
   37658:	b.ls	37644 <mpfr_gamma@@Base+0x1620>  // b.plast
   3765c:	ldr	x1, [sp, #72]
   37660:	mov	x0, x19
   37664:	bl	cc00 <mpfr_free_func@plt>
   37668:	ldp	x22, x25, [sp, #32]
   3766c:	ldr	x23, [sp, #56]
   37670:	cmp	x26, #0x2
   37674:	mov	w21, #0x80000000            	// #-2147483648
   37678:	b.cc	3769c <mpfr_gamma@@Base+0x1678>  // b.lo, b.ul, b.last
   3767c:	add	x20, x23, #0x40
   37680:	mov	w19, #0x2                   	// #2
   37684:	mov	x0, x20
   37688:	bl	c0b0 <mpfr_clear@plt>
   3768c:	add	x19, x19, #0x1
   37690:	cmp	x19, x26
   37694:	add	x20, x20, #0x20
   37698:	b.ls	37684 <mpfr_gamma@@Base+0x1660>  // b.plast
   3769c:	ldr	x1, [sp, #24]
   376a0:	mov	x0, x23
   376a4:	bl	cc00 <mpfr_free_func@plt>
   376a8:	cmp	x28, x27
   376ac:	b.cs	376e4 <mpfr_gamma@@Base+0x16c0>  // b.hs, b.nlast
   376b0:	sub	x0, x29, #0x68
   376b4:	mov	x1, x24
   376b8:	mov	x2, x28
   376bc:	mov	w3, wzr
   376c0:	bl	c270 <mpfr_add_ui@plt>
   376c4:	sub	x0, x29, #0x48
   376c8:	sub	x1, x29, #0x48
   376cc:	sub	x2, x29, #0x68
   376d0:	mov	w3, wzr
   376d4:	bl	bda0 <mpfr_mul@plt>
   376d8:	add	x28, x28, #0x1
   376dc:	cmp	x27, x28
   376e0:	b.ne	376b0 <mpfr_gamma@@Base+0x168c>  // b.any
   376e4:	sub	x0, x29, #0x48
   376e8:	sub	x1, x29, #0x48
   376ec:	sub	x2, x29, #0x48
   376f0:	mov	w3, wzr
   376f4:	bl	bda0 <mpfr_mul@plt>
   376f8:	sub	x0, x29, #0x88
   376fc:	sub	x1, x29, #0x88
   37700:	sub	x2, x29, #0x48
   37704:	mov	w3, wzr
   37708:	bl	c610 <mpfr_div@plt>
   3770c:	ldur	x20, [x29, #-24]
   37710:	sub	x0, x29, #0x28
   37714:	sub	x1, x29, #0x28
   37718:	mov	w2, wzr
   3771c:	bl	c740 <mpfr_exp@plt>
   37720:	ldur	x8, [x29, #-24]
   37724:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   37728:	cmp	x8, x9
   3772c:	b.ne	37784 <mpfr_gamma@@Base+0x1760>  // b.any
   37730:	ldr	x0, [sp, #48]
   37734:	ldr	w5, [sp, #68]
   37738:	add	x2, sp, #0x80
   3773c:	sub	x3, x29, #0x28
   37740:	sub	x4, x29, #0x48
   37744:	mov	x1, x24
   37748:	bl	37cf4 <mpfr_gamma@@Base+0x1cd0>
   3774c:	cbnz	w0, 37c34 <mpfr_gamma@@Base+0x1c10>
   37750:	ldr	x19, [sp, #16]
   37754:	mov	x8, #0xfffffffffffffeff    	// #-257
   37758:	movk	x8, #0x7fff, lsl #48
   3775c:	sub	x8, x8, x25
   37760:	cmp	x19, x8
   37764:	b.gt	3783c <mpfr_gamma@@Base+0x1818>
   37768:	add	x25, x25, x19
   3776c:	cmp	x25, #0x0
   37770:	ldr	x24, [x29, #8]
   37774:	cinc	x8, x25, lt  // lt = tstop
   37778:	asr	x8, x8, #1
   3777c:	str	x8, [sp, #16]
   37780:	b	36fdc <mpfr_gamma@@Base+0xfb8>
   37784:	sub	x0, x29, #0x48
   37788:	sub	x1, x29, #0x88
   3778c:	mov	w2, wzr
   37790:	bl	c920 <mpfr_sqrt@plt>
   37794:	sub	x0, x29, #0x28
   37798:	sub	x1, x29, #0x28
   3779c:	sub	x2, x29, #0x48
   377a0:	mov	w3, wzr
   377a4:	bl	bda0 <mpfr_mul@plt>
   377a8:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   377ac:	movk	x8, #0xcccd
   377b0:	umulh	x8, x22, x8
   377b4:	lsr	x8, x8, #2
   377b8:	add	x8, x8, x8, lsl #1
   377bc:	add	x0, x8, #0x12
   377c0:	bl	bcc0 <__gmpfr_int_ceil_log2@plt>
   377c4:	ucvtf	d0, x27
   377c8:	fadd	d0, d0, d0
   377cc:	fadd	d0, d0, d8
   377d0:	mov	w19, w0
   377d4:	bl	c940 <__gmpfr_ceil_log2@plt>
   377d8:	ldur	x8, [x29, #-24]
   377dc:	mov	x9, #0xfffffffffffffeff    	// #-257
   377e0:	movk	x9, #0x7fff, lsl #48
   377e4:	add	x9, x9, #0x105
   377e8:	cmp	x8, x9
   377ec:	b.lt	37750 <mpfr_gamma@@Base+0x172c>  // b.tstop
   377f0:	ldur	x10, [x29, #-40]
   377f4:	add	w9, w19, #0x2
   377f8:	add	x9, x20, w9, sxtw
   377fc:	ldur	x8, [x29, #-16]
   37800:	cmp	x9, x0
   37804:	sub	x11, x10, #0x1
   37808:	csel	x9, x0, x9, lt  // lt = tstop
   3780c:	add	x10, x10, #0x3e
   37810:	cmp	x11, #0x0
   37814:	ldr	x3, [sp, #8]
   37818:	csel	x10, x10, x11, lt  // lt = tstop
   3781c:	mvn	x9, x9
   37820:	asr	x10, x10, #6
   37824:	add	x1, x10, #0x1
   37828:	add	x2, x25, x9
   3782c:	mov	x0, x8
   37830:	bl	c370 <mpfr_round_p@plt>
   37834:	cbnz	w0, 37b48 <mpfr_gamma@@Base+0x1b24>
   37838:	b	37750 <mpfr_gamma@@Base+0x172c>
   3783c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37840:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   37844:	mov	w1, #0x2b8                 	// #696
   37848:	add	x0, x0, #0x56d
   3784c:	add	x2, x2, #0x6c6
   37850:	bl	cb20 <mpfr_assert_fail@plt>
   37854:	b	37768 <mpfr_gamma@@Base+0x1744>
   37858:	mov	w1, #0x1                   	// #1
   3785c:	mov	x0, x19
   37860:	bl	bd00 <__gmpz_set_ui@plt>
   37864:	sub	x0, x29, #0x68
   37868:	mov	x1, x19
   3786c:	mov	w2, wzr
   37870:	bl	c250 <mpfr_set_z@plt>
   37874:	sub	x0, x29, #0x48
   37878:	sub	x1, x29, #0x48
   3787c:	sub	x2, x29, #0x68
   37880:	mov	w3, wzr
   37884:	bl	bda0 <mpfr_mul@plt>
   37888:	b	37858 <mpfr_gamma@@Base+0x1834>
   3788c:	subs	x19, x23, #0x1
   37890:	b.eq	37ca4 <mpfr_gamma@@Base+0x1c80>  // b.none
   37894:	b.le	37cbc <mpfr_gamma@@Base+0x1c98>
   37898:	clz	x8, x19
   3789c:	mov	w9, #0x40                  	// #64
   378a0:	sub	x8, x9, x8
   378a4:	add	x19, x8, x23
   378a8:	subs	x20, x19, #0x1
   378ac:	b.eq	37cb4 <mpfr_gamma@@Base+0x1c90>  // b.none
   378b0:	b.le	37cd8 <mpfr_gamma@@Base+0x1cb4>
   378b4:	clz	x8, x20
   378b8:	mov	w9, #0x4e                  	// #78
   378bc:	sub	x8, x9, x8
   378c0:	add	x22, x8, x19
   378c4:	ldr	w8, [sp, #68]
   378c8:	adrp	x24, 5f000 <mpfr_l2b_3_1__tab@@Base>
   378cc:	mov	w20, #0x40                  	// #64
   378d0:	mov	w25, #0x2                   	// #2
   378d4:	cmp	w8, #0x0
   378d8:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   378dc:	ldr	d8, [x8, #1272]
   378e0:	mov	w26, #0x3                   	// #3
   378e4:	mov	w27, #0x1                   	// #1
   378e8:	cinc	x19, x23, eq  // eq = none
   378ec:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   378f0:	add	x24, x24, #0x6c6
   378f4:	sub	x0, x29, #0x28
   378f8:	mov	x1, x22
   378fc:	bl	bf20 <mpfr_set_prec@plt>
   37900:	sub	x0, x29, #0x48
   37904:	mov	x1, x22
   37908:	bl	bf20 <mpfr_set_prec@plt>
   3790c:	sub	x0, x29, #0x68
   37910:	mov	x1, x22
   37914:	bl	bf20 <mpfr_set_prec@plt>
   37918:	sub	x0, x29, #0x88
   3791c:	mov	x1, x22
   37920:	bl	bf20 <mpfr_set_prec@plt>
   37924:	ldr	x2, [x29, #8]
   37928:	sub	x0, x29, #0x28
   3792c:	mov	w1, #0x2                   	// #2
   37930:	mov	w3, #0x3                   	// #3
   37934:	bl	ca30 <mpfr_ui_sub@plt>
   37938:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3793c:	ldr	x1, [x0, #2688]
   37940:	add	x0, x0, #0xa80
   37944:	blr	x1
   37948:	ldr	x8, [sp, #120]
   3794c:	mov	w2, wzr
   37950:	add	x1, x8, x0
   37954:	sub	x0, x29, #0x48
   37958:	bl	c380 <mpfr_cache@plt>
   3795c:	sub	x0, x29, #0x68
   37960:	sub	x1, x29, #0x28
   37964:	mov	w2, wzr
   37968:	bl	c5f0 <mpfr_lngamma@plt>
   3796c:	ldur	x8, [x29, #-88]
   37970:	cmp	x8, x28
   37974:	b.ne	37980 <mpfr_gamma@@Base+0x195c>  // b.any
   37978:	mov	w23, #0x1                   	// #1
   3797c:	b	379ac <mpfr_gamma@@Base+0x1988>
   37980:	ldur	x21, [x29, #-24]
   37984:	scvtf	d0, x21
   37988:	fmul	d0, d0, d8
   3798c:	bl	c940 <__gmpfr_ceil_log2@plt>
   37990:	ldur	x8, [x29, #-88]
   37994:	add	x9, x21, x0
   37998:	sub	x8, x9, x8
   3799c:	add	x9, x8, #0x1
   379a0:	add	x8, x8, #0x2
   379a4:	cmp	x9, #0x0
   379a8:	csel	x23, xzr, x8, lt  // lt = tstop
   379ac:	sub	x0, x29, #0x28
   379b0:	sub	x1, x29, #0x28
   379b4:	sub	x2, x29, #0x48
   379b8:	mov	w3, wzr
   379bc:	bl	bda0 <mpfr_mul@plt>
   379c0:	ldur	x21, [x29, #-24]
   379c4:	sub	x0, x29, #0x28
   379c8:	sub	x1, x29, #0x28
   379cc:	mov	w2, wzr
   379d0:	bl	c440 <mpfr_sin@plt>
   379d4:	ldur	x8, [x29, #-24]
   379d8:	ldr	x1, [x29, #8]
   379dc:	sub	x0, x29, #0x88
   379e0:	mov	w2, #0x1                   	// #1
   379e4:	sub	x8, x21, x8
   379e8:	add	x9, x8, #0x3
   379ec:	add	x8, x8, #0x6
   379f0:	cmp	x9, #0x0
   379f4:	mov	w3, wzr
   379f8:	csel	x21, x25, x8, lt  // lt = tstop
   379fc:	bl	c520 <mpfr_sub_ui@plt>
   37a00:	sub	x0, x29, #0x88
   37a04:	sub	x1, x29, #0x88
   37a08:	sub	x2, x29, #0x48
   37a0c:	mov	w3, wzr
   37a10:	bl	bda0 <mpfr_mul@plt>
   37a14:	sub	x0, x29, #0x88
   37a18:	sub	x1, x29, #0x88
   37a1c:	sub	x2, x29, #0x28
   37a20:	mov	w3, wzr
   37a24:	bl	c610 <mpfr_div@plt>
   37a28:	sub	x0, x29, #0x88
   37a2c:	sub	x1, x29, #0x88
   37a30:	mov	w3, #0x1                   	// #1
   37a34:	mov	w2, wzr
   37a38:	bl	c690 <mpfr_set4@plt>
   37a3c:	cmp	x21, #0x2
   37a40:	sub	x0, x29, #0x88
   37a44:	sub	x1, x29, #0x88
   37a48:	mov	w2, wzr
   37a4c:	csinc	x21, x26, x21, lt  // lt = tstop
   37a50:	bl	c0d0 <mpfr_log@plt>
   37a54:	add	x8, x21, #0x2
   37a58:	cmp	x8, x22
   37a5c:	b.le	37a68 <mpfr_gamma@@Base+0x1a44>
   37a60:	add	x22, x8, x22
   37a64:	b	37b08 <mpfr_gamma@@Base+0x1ae4>
   37a68:	ldur	x8, [x29, #-120]
   37a6c:	ldur	x9, [x29, #-88]
   37a70:	sub	x0, x29, #0x28
   37a74:	sub	x1, x29, #0x88
   37a78:	sub	x10, x27, x8
   37a7c:	cmp	x8, x28
   37a80:	csel	x10, xzr, x10, eq  // eq = none
   37a84:	add	x10, x10, x21
   37a88:	csel	x8, xzr, x8, eq  // eq = none
   37a8c:	cmp	x10, #0x0
   37a90:	add	x21, x9, x23
   37a94:	csinc	x9, xzr, x10, lt  // lt = tstop
   37a98:	sub	x2, x29, #0x68
   37a9c:	mov	w3, wzr
   37aa0:	add	x23, x9, x8
   37aa4:	bl	bbc0 <mpfr_sub@plt>
   37aa8:	ldur	x8, [x29, #-24]
   37aac:	cmp	x23, x21
   37ab0:	mov	x9, #0xfffffffffffffeff    	// #-257
   37ab4:	movk	x9, #0x7fff, lsl #48
   37ab8:	csel	x10, x21, x23, lt  // lt = tstop
   37abc:	add	x9, x9, #0x105
   37ac0:	sub	x10, x10, x8
   37ac4:	cmp	x8, x9
   37ac8:	add	x8, x10, #0x1
   37acc:	b.lt	37b08 <mpfr_gamma@@Base+0x1ae4>  // b.tstop
   37ad0:	ldur	x9, [x29, #-40]
   37ad4:	cmp	x8, #0x0
   37ad8:	ldur	x0, [x29, #-16]
   37adc:	csinc	x8, xzr, x8, lt  // lt = tstop
   37ae0:	sub	x10, x9, #0x1
   37ae4:	add	x9, x9, #0x3e
   37ae8:	cmp	x10, #0x0
   37aec:	csel	x9, x9, x10, lt  // lt = tstop
   37af0:	asr	x9, x9, #6
   37af4:	add	x1, x9, #0x1
   37af8:	sub	x2, x22, x8
   37afc:	mov	x3, x19
   37b00:	bl	c370 <mpfr_round_p@plt>
   37b04:	cbnz	w0, 37b48 <mpfr_gamma@@Base+0x1b24>
   37b08:	mov	x8, #0xfffffffffffffeff    	// #-257
   37b0c:	movk	x8, #0x7fff, lsl #48
   37b10:	sub	x8, x8, x22
   37b14:	cmp	x20, x8
   37b18:	b.gt	37b30 <mpfr_gamma@@Base+0x1b0c>
   37b1c:	add	x22, x22, x20
   37b20:	cmp	x22, #0x0
   37b24:	cinc	x8, x22, lt  // lt = tstop
   37b28:	asr	x20, x8, #1
   37b2c:	b	378f4 <mpfr_gamma@@Base+0x18d0>
   37b30:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37b34:	mov	w1, #0x1a5                 	// #421
   37b38:	add	x0, x0, #0x56d
   37b3c:	mov	x2, x24
   37b40:	bl	cb20 <mpfr_assert_fail@plt>
   37b44:	b	37b1c <mpfr_gamma@@Base+0x1af8>
   37b48:	ldr	x20, [sp, #48]
   37b4c:	ldur	w3, [x29, #-32]
   37b50:	ldr	w2, [sp, #68]
   37b54:	sub	x1, x29, #0x28
   37b58:	mov	x0, x20
   37b5c:	bl	c690 <mpfr_set4@plt>
   37b60:	mov	w19, w0
   37b64:	sub	x0, x29, #0x28
   37b68:	bl	c0b0 <mpfr_clear@plt>
   37b6c:	sub	x0, x29, #0x48
   37b70:	bl	c0b0 <mpfr_clear@plt>
   37b74:	sub	x0, x29, #0x68
   37b78:	bl	c0b0 <mpfr_clear@plt>
   37b7c:	sub	x0, x29, #0x88
   37b80:	bl	c0b0 <mpfr_clear@plt>
   37b84:	add	x0, sp, #0x98
   37b88:	bl	c0b0 <mpfr_clear@plt>
   37b8c:	ldr	w8, [sp, #128]
   37b90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37b94:	ldr	x1, [x0, #2640]
   37b98:	add	x0, x0, #0xa50
   37b9c:	blr	x1
   37ba0:	ldr	x10, [sp, #120]
   37ba4:	ldr	x9, [sp, #136]
   37ba8:	str	w8, [x10, x0]
   37bac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37bb0:	ldr	x1, [x0, #2576]
   37bb4:	add	x0, x0, #0xa10
   37bb8:	blr	x1
   37bbc:	ldr	x11, [sp, #144]
   37bc0:	str	x9, [x10, x0]
   37bc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37bc8:	ldr	x1, [x0, #2608]
   37bcc:	add	x0, x0, #0xa30
   37bd0:	blr	x1
   37bd4:	str	x11, [x10, x0]
   37bd8:	ldr	x10, [x20, #16]
   37bdc:	cmp	x10, x11
   37be0:	b.gt	37c3c <mpfr_gamma@@Base+0x1c18>
   37be4:	cmp	x10, x9
   37be8:	b.lt	37c3c <mpfr_gamma@@Base+0x1c18>  // b.tstop
   37bec:	cbz	w19, 37c0c <mpfr_gamma@@Base+0x1be8>
   37bf0:	orr	w8, w8, #0x8
   37bf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37bf8:	ldr	x1, [x0, #2640]
   37bfc:	add	x0, x0, #0xa50
   37c00:	blr	x1
   37c04:	ldr	x9, [sp, #120]
   37c08:	str	w8, [x9, x0]
   37c0c:	mov	w0, w19
   37c10:	ldp	x20, x19, [sp, #416]
   37c14:	ldp	x22, x21, [sp, #400]
   37c18:	ldp	x24, x23, [sp, #384]
   37c1c:	ldp	x26, x25, [sp, #368]
   37c20:	ldp	x28, x27, [sp, #352]
   37c24:	ldp	x29, x30, [sp, #336]
   37c28:	ldr	d8, [sp, #320]
   37c2c:	add	sp, sp, #0x1b0
   37c30:	ret
   37c34:	ldr	x20, [sp, #48]
   37c38:	b	37b60 <mpfr_gamma@@Base+0x1b3c>
   37c3c:	ldr	w2, [sp, #68]
   37c40:	mov	x0, x20
   37c44:	mov	w1, w19
   37c48:	bl	cb10 <mpfr_check_range@plt>
   37c4c:	mov	w19, w0
   37c50:	b	37c0c <mpfr_gamma@@Base+0x1be8>
   37c54:	mov	x8, xzr
   37c58:	add	x19, x8, x23
   37c5c:	subs	x20, x19, #0x1
   37c60:	b.ne	36fa8 <mpfr_gamma@@Base+0xf84>  // b.any
   37c64:	mov	w8, #0xd                   	// #13
   37c68:	b	36fb8 <mpfr_gamma@@Base+0xf94>
   37c6c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37c70:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37c74:	add	x0, x0, #0x56d
   37c78:	add	x2, x2, #0x238
   37c7c:	mov	w1, #0x1b0                 	// #432
   37c80:	bl	cb20 <mpfr_assert_fail@plt>
   37c84:	b	36f90 <mpfr_gamma@@Base+0xf6c>
   37c88:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37c8c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37c90:	add	x0, x0, #0x56d
   37c94:	add	x2, x2, #0x4c5
   37c98:	mov	w1, #0x1b1                 	// #433
   37c9c:	bl	cb20 <mpfr_assert_fail@plt>
   37ca0:	b	36fac <mpfr_gamma@@Base+0xf88>
   37ca4:	mov	x8, xzr
   37ca8:	add	x19, x8, x23
   37cac:	subs	x20, x19, #0x1
   37cb0:	b.ne	378b0 <mpfr_gamma@@Base+0x188c>  // b.any
   37cb4:	mov	w8, #0xe                   	// #14
   37cb8:	b	378c0 <mpfr_gamma@@Base+0x189c>
   37cbc:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37cc0:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37cc4:	add	x0, x0, #0x56d
   37cc8:	add	x2, x2, #0x238
   37ccc:	mov	w1, #0x14a                 	// #330
   37cd0:	bl	cb20 <mpfr_assert_fail@plt>
   37cd4:	b	37898 <mpfr_gamma@@Base+0x1874>
   37cd8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37cdc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37ce0:	add	x0, x0, #0x56d
   37ce4:	add	x2, x2, #0x4c5
   37ce8:	mov	w1, #0x14b                 	// #331
   37cec:	bl	cb20 <mpfr_assert_fail@plt>
   37cf0:	b	378b4 <mpfr_gamma@@Base+0x1890>
   37cf4:	sub	sp, sp, #0x130
   37cf8:	stp	x29, x30, [sp, #208]
   37cfc:	str	x28, [sp, #224]
   37d00:	stp	x26, x25, [sp, #240]
   37d04:	stp	x24, x23, [sp, #256]
   37d08:	stp	x22, x21, [sp, #272]
   37d0c:	stp	x20, x19, [sp, #288]
   37d10:	add	x29, sp, #0xd0
   37d14:	mov	w23, w5
   37d18:	mov	x21, x4
   37d1c:	mov	x22, x3
   37d20:	mov	x19, x2
   37d24:	mov	x2, x1
   37d28:	mov	x20, x0
   37d2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37d30:	ldr	x1, [x0, #2640]
   37d34:	add	x0, x0, #0xa50
   37d38:	blr	x1
   37d3c:	mrs	x25, tpidr_el0
   37d40:	mov	x24, x0
   37d44:	str	wzr, [x25, x0]
   37d48:	add	x1, x29, #0x1c
   37d4c:	mov	w3, #0x3                   	// #3
   37d50:	mov	x0, x22
   37d54:	bl	c0e0 <mpfr_lgamma@plt>
   37d58:	ldr	w24, [x25, x24]
   37d5c:	cbz	w0, 37ef8 <mpfr_gamma@@Base+0x1ed4>
   37d60:	ldr	w3, [x22, #8]
   37d64:	tbnz	w24, #1, 37f18 <mpfr_gamma@@Base+0x1ef4>
   37d68:	mov	x0, x21
   37d6c:	mov	x1, x22
   37d70:	mov	w2, wzr
   37d74:	bl	c690 <mpfr_set4@plt>
   37d78:	mov	x0, x21
   37d7c:	bl	c160 <mpfr_nextabove@plt>
   37d80:	ldr	w8, [x29, #28]
   37d84:	ldr	x24, [x20]
   37d88:	cmp	w23, #0x3
   37d8c:	mov	w9, #0x2                   	// #2
   37d90:	mov	w10, #0x3                   	// #3
   37d94:	csel	w9, w9, w23, eq  // eq = none
   37d98:	cmp	w23, #0x2
   37d9c:	mov	x11, #0x7fffffffffffff00    	// #9223372036854775552
   37da0:	csel	w9, w10, w9, eq  // eq = none
   37da4:	cmp	w8, #0x0
   37da8:	csel	w23, w9, w23, lt  // lt = tstop
   37dac:	cmp	x24, x11
   37db0:	b.ge	37f84 <mpfr_gamma@@Base+0x1f60>  // b.tcont
   37db4:	sub	x8, x24, #0x1
   37db8:	add	x9, x24, #0x3e
   37dbc:	cmp	x8, #0x0
   37dc0:	csel	x8, x9, x8, lt  // lt = tstop
   37dc4:	asr	x8, x8, #6
   37dc8:	cmp	x24, #0x201
   37dcc:	add	x26, x8, #0x1
   37dd0:	b.lt	37de4 <mpfr_gamma@@Base+0x1dc0>  // b.tstop
   37dd4:	lsl	x0, x26, #4
   37dd8:	str	x0, [sp]
   37ddc:	bl	ccd0 <mpfr_allocate_func@plt>
   37de0:	b	37df0 <mpfr_gamma@@Base+0x1dcc>
   37de4:	mov	x8, sp
   37de8:	add	x0, x8, #0x10
   37dec:	str	xzr, [sp]
   37df0:	mov	w8, #0x1                   	// #1
   37df4:	add	x9, x0, x26, lsl #3
   37df8:	str	x0, [sp, #8]
   37dfc:	stur	x0, [x29, #-8]
   37e00:	stur	x24, [x29, #-64]
   37e04:	stur	w8, [x29, #-24]
   37e08:	stp	x9, x24, [x29, #-40]
   37e0c:	stur	w8, [x29, #-56]
   37e10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37e14:	ldr	x1, [x0, #2640]
   37e18:	add	x0, x0, #0xa50
   37e1c:	blr	x1
   37e20:	mov	x24, x0
   37e24:	str	wzr, [x25, x0]
   37e28:	sub	x0, x29, #0x20
   37e2c:	mov	x1, x22
   37e30:	mov	w2, w23
   37e34:	bl	c740 <mpfr_exp@plt>
   37e38:	ldr	w26, [x25, x24]
   37e3c:	mov	w22, w0
   37e40:	sub	x0, x29, #0x40
   37e44:	mov	x1, x21
   37e48:	mov	w2, w23
   37e4c:	str	wzr, [x25, x24]
   37e50:	bl	c740 <mpfr_exp@plt>
   37e54:	ldr	w21, [x25, x24]
   37e58:	mov	w23, w0
   37e5c:	sub	x0, x29, #0x20
   37e60:	sub	x1, x29, #0x40
   37e64:	bl	ca40 <mpfr_equal_p@plt>
   37e68:	cmp	w26, w21
   37e6c:	mov	w21, wzr
   37e70:	b.ne	37ec4 <mpfr_gamma@@Base+0x1ea0>  // b.any
   37e74:	cbz	w0, 37ec4 <mpfr_gamma@@Base+0x1ea0>
   37e78:	cmp	w22, #0x0
   37e7c:	cset	w8, gt
   37e80:	cmp	w23, #0x0
   37e84:	cset	w9, gt
   37e88:	and	w8, w8, w9
   37e8c:	tbnz	w8, #0, 37e98 <mpfr_gamma@@Base+0x1e74>
   37e90:	and	w8, w23, w22
   37e94:	tbz	w8, #31, 37f68 <mpfr_gamma@@Base+0x1f44>
   37e98:	ldr	w3, [x29, #28]
   37e9c:	sub	x1, x29, #0x20
   37ea0:	mov	x0, x20
   37ea4:	mov	w2, wzr
   37ea8:	bl	c690 <mpfr_set4@plt>
   37eac:	ldr	w8, [x29, #28]
   37eb0:	ldr	w9, [x19]
   37eb4:	cmp	w8, #0x0
   37eb8:	orr	w8, w9, w26
   37ebc:	cneg	w21, w22, lt  // lt = tstop
   37ec0:	str	w8, [x19]
   37ec4:	ldr	x1, [sp]
   37ec8:	cbz	x1, 37ed4 <mpfr_gamma@@Base+0x1eb0>
   37ecc:	ldr	x0, [sp, #8]
   37ed0:	bl	cc00 <mpfr_free_func@plt>
   37ed4:	mov	w0, w21
   37ed8:	ldp	x20, x19, [sp, #288]
   37edc:	ldp	x22, x21, [sp, #272]
   37ee0:	ldp	x24, x23, [sp, #256]
   37ee4:	ldp	x26, x25, [sp, #240]
   37ee8:	ldr	x28, [sp, #224]
   37eec:	ldp	x29, x30, [sp, #208]
   37ef0:	add	sp, sp, #0x130
   37ef4:	ret
   37ef8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37efc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37f00:	add	x0, x0, #0x56d
   37f04:	add	x2, x2, #0x579
   37f08:	mov	w1, #0x4b                  	// #75
   37f0c:	bl	cb20 <mpfr_assert_fail@plt>
   37f10:	ldr	w3, [x22, #8]
   37f14:	tbz	w24, #1, 37d68 <mpfr_gamma@@Base+0x1d44>
   37f18:	ldr	w8, [x19]
   37f1c:	cmp	w3, #0x1
   37f20:	b.lt	37f44 <mpfr_gamma@@Base+0x1f20>  // b.tstop
   37f24:	orr	w8, w8, #0x2
   37f28:	str	w8, [x19]
   37f2c:	ldr	w2, [x29, #28]
   37f30:	mov	x0, x20
   37f34:	mov	w1, w23
   37f38:	bl	bf90 <mpfr_overflow@plt>
   37f3c:	mov	w21, w0
   37f40:	b	37ed4 <mpfr_gamma@@Base+0x1eb0>
   37f44:	orr	w8, w8, #0x1
   37f48:	str	w8, [x19]
   37f4c:	ldr	w2, [x29, #28]
   37f50:	cmp	w23, #0x0
   37f54:	csinc	w1, w23, wzr, ne  // ne = any
   37f58:	mov	x0, x20
   37f5c:	bl	c3c0 <mpfr_underflow@plt>
   37f60:	mov	w21, w0
   37f64:	b	37ed4 <mpfr_gamma@@Base+0x1eb0>
   37f68:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37f6c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   37f70:	add	x0, x0, #0x56d
   37f74:	add	x2, x2, #0x584
   37f78:	mov	w1, #0x69                  	// #105
   37f7c:	bl	cb20 <mpfr_assert_fail@plt>
   37f80:	b	37e98 <mpfr_gamma@@Base+0x1e74>
   37f84:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000037f88 <mpfr_set_ld@@Base>:
   37f88:	sub	sp, sp, #0x1d0
   37f8c:	stp	x29, x30, [sp, #368]
   37f90:	add	x29, sp, #0x170
   37f94:	str	x28, [sp, #384]
   37f98:	stp	x26, x25, [sp, #400]
   37f9c:	stp	x24, x23, [sp, #416]
   37fa0:	stp	x22, x21, [sp, #432]
   37fa4:	stp	x20, x19, [sp, #448]
   37fa8:	stur	q0, [x29, #-80]
   37fac:	ldur	x8, [x29, #-72]
   37fb0:	mov	w20, w1
   37fb4:	mov	x19, x0
   37fb8:	mvn	x9, x8
   37fbc:	tst	x9, #0x7fff000000000000
   37fc0:	b.ne	38014 <mpfr_set_ld@@Base+0x8c>  // b.any
   37fc4:	ldur	x9, [x29, #-80]
   37fc8:	lsr	x10, x9, #32
   37fcc:	orr	w9, w10, w9
   37fd0:	orr	w9, w9, w8
   37fd4:	ubfx	x8, x8, #32, #16
   37fd8:	orr	w8, w8, w9
   37fdc:	cbz	w8, 38014 <mpfr_set_ld@@Base+0x8c>
   37fe0:	mov	x8, #0x2                   	// #2
   37fe4:	movk	x8, #0x8000, lsl #48
   37fe8:	str	x8, [x19, #16]
   37fec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   37ff0:	ldr	x1, [x0, #2640]
   37ff4:	add	x0, x0, #0xa50
   37ff8:	blr	x1
   37ffc:	mrs	x8, tpidr_el0
   38000:	ldr	w9, [x8, x0]
   38004:	mov	w21, wzr
   38008:	orr	w9, w9, #0x4
   3800c:	str	w9, [x8, x0]
   38010:	b	3805c <mpfr_set_ld@@Base+0xd4>
   38014:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38018:	ldr	q1, [x8, #1472]
   3801c:	str	q0, [sp, #176]
   38020:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38024:	cmp	w0, #0x0
   38028:	b.le	38034 <mpfr_set_ld@@Base+0xac>
   3802c:	mov	w1, #0x1                   	// #1
   38030:	b	38050 <mpfr_set_ld@@Base+0xc8>
   38034:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38038:	ldr	q1, [x8, #1488]
   3803c:	ldr	q0, [sp, #176]
   38040:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38044:	cmp	w0, #0x0
   38048:	b.ge	38080 <mpfr_set_ld@@Base+0xf8>  // b.tcont
   3804c:	mov	w1, #0xffffffff            	// #-1
   38050:	mov	x0, x19
   38054:	bl	c5a0 <mpfr_set_inf@plt>
   38058:	mov	w21, wzr
   3805c:	mov	w0, w21
   38060:	ldp	x20, x19, [sp, #448]
   38064:	ldp	x22, x21, [sp, #432]
   38068:	ldp	x24, x23, [sp, #416]
   3806c:	ldp	x26, x25, [sp, #400]
   38070:	ldr	x28, [sp, #384]
   38074:	ldp	x29, x30, [sp, #368]
   38078:	add	sp, sp, #0x1d0
   3807c:	ret
   38080:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38084:	ldr	q1, [x8, #1504]
   38088:	ldr	q0, [sp, #176]
   3808c:	stur	q1, [x29, #-112]
   38090:	bl	5c040 <mpfr_free_pool@@Base+0xbc4>
   38094:	cbnz	w0, 380b4 <mpfr_set_ld@@Base+0x12c>
   38098:	ldr	q0, [sp, #176]
   3809c:	bl	5d7e8 <mpfr_free_pool@@Base+0x236c>
   380a0:	mov	x0, x19
   380a4:	mov	w1, w20
   380a8:	bl	be90 <mpfr_set_d@plt>
   380ac:	mov	w21, w0
   380b0:	b	3805c <mpfr_set_ld@@Base+0xd4>
   380b4:	sub	x0, x29, #0x20
   380b8:	mov	w1, #0x71                  	// #113
   380bc:	bl	ca60 <mpfr_init2@plt>
   380c0:	sub	x0, x29, #0x40
   380c4:	mov	w1, #0x35                  	// #53
   380c8:	bl	ca60 <mpfr_init2@plt>
   380cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   380d0:	ldr	x1, [x0, #2640]
   380d4:	add	x0, x0, #0xa50
   380d8:	blr	x1
   380dc:	mrs	x22, tpidr_el0
   380e0:	ldr	w23, [x22, x0]
   380e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   380e8:	ldr	x1, [x0, #2576]
   380ec:	add	x0, x0, #0xa10
   380f0:	blr	x1
   380f4:	ldr	x24, [x22, x0]
   380f8:	mov	x8, x0
   380fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38100:	ldr	x1, [x0, #2608]
   38104:	add	x0, x0, #0xa30
   38108:	blr	x1
   3810c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   38110:	str	x9, [x22, x8]
   38114:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38118:	ldr	q0, [x8, #1520]
   3811c:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38120:	ldr	x25, [x22, x0]
   38124:	mov	w21, wzr
   38128:	stur	q0, [x29, #-160]
   3812c:	ldr	q0, [x8, #1552]
   38130:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38134:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   38138:	stur	q0, [x29, #-144]
   3813c:	ldr	q0, [x8, #1600]
   38140:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38144:	str	q0, [sp, #128]
   38148:	ldr	q0, [x8, #1632]
   3814c:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38150:	str	q0, [sp, #112]
   38154:	ldr	q0, [x8, #1664]
   38158:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3815c:	str	q0, [sp, #96]
   38160:	ldr	q0, [x8, #1680]
   38164:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38168:	str	q0, [sp, #80]
   3816c:	ldr	q0, [x8, #1712]
   38170:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38174:	str	q0, [sp, #64]
   38178:	ldr	q0, [x8, #1696]
   3817c:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38180:	str	q0, [sp, #48]
   38184:	ldr	q0, [x8, #1568]
   38188:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3818c:	stur	q0, [x29, #-176]
   38190:	ldr	q0, [x8, #1648]
   38194:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38198:	str	q0, [sp, #32]
   3819c:	ldr	q0, [x8, #1616]
   381a0:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   381a4:	str	q0, [sp, #16]
   381a8:	ldr	q0, [x8, #1584]
   381ac:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   381b0:	str	q0, [sp]
   381b4:	ldr	q0, [x8, #1536]
   381b8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   381bc:	str	x8, [x22, x0]
   381c0:	str	q0, [sp, #160]
   381c4:	ldr	q0, [sp, #176]
   381c8:	stur	x26, [x29, #-16]
   381cc:	b	381e8 <mpfr_set_ld@@Base+0x260>
   381d0:	ldp	q1, q0, [x29, #-112]
   381d4:	stur	q0, [x29, #-96]
   381d8:	ldur	q0, [x29, #-96]
   381dc:	bl	5c040 <mpfr_free_pool@@Base+0xbc4>
   381e0:	ldur	q0, [x29, #-96]
   381e4:	cbz	w0, 386c8 <mpfr_set_ld@@Base+0x740>
   381e8:	ldur	q1, [x29, #-160]
   381ec:	stur	q0, [x29, #-96]
   381f0:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   381f4:	cmp	w0, #0x0
   381f8:	b.gt	3841c <mpfr_set_ld@@Base+0x494>
   381fc:	ldur	q0, [x29, #-96]
   38200:	ldr	q1, [sp, #160]
   38204:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38208:	cmp	w0, #0x0
   3820c:	b.lt	3841c <mpfr_set_ld@@Base+0x494>  // b.tstop
   38210:	ldur	q0, [x29, #-144]
   38214:	ldur	q1, [x29, #-96]
   38218:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   3821c:	stur	q0, [x29, #-128]
   38220:	ldp	q1, q0, [x29, #-112]
   38224:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38228:	ldur	q0, [x29, #-128]
   3822c:	cmp	w0, #0x0
   38230:	b.lt	38238 <mpfr_set_ld@@Base+0x2b0>  // b.tstop
   38234:	ldur	q0, [x29, #-96]
   38238:	ldur	q1, [x29, #-176]
   3823c:	str	q0, [sp, #144]
   38240:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38244:	cmp	w0, #0x0
   38248:	b.ge	38604 <mpfr_set_ld@@Base+0x67c>  // b.tcont
   3824c:	ldr	q0, [sp, #144]
   38250:	ldr	q1, [sp]
   38254:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38258:	cmp	w0, #0x0
   3825c:	b.gt	38298 <mpfr_set_ld@@Base+0x310>
   38260:	ldur	q0, [x29, #-96]
   38264:	ldr	q1, [sp, #128]
   38268:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   3826c:	sub	x0, x29, #0x20
   38270:	sub	x1, x29, #0x20
   38274:	mov	w2, #0x2000                	// #8192
   38278:	mov	w3, #0x1                   	// #1
   3827c:	stur	q0, [x29, #-96]
   38280:	sub	w21, w21, #0x2, lsl #12
   38284:	bl	bbe0 <mpfr_mul_2si@plt>
   38288:	ldur	q0, [x29, #-144]
   3828c:	ldur	q1, [x29, #-96]
   38290:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   38294:	stur	q0, [x29, #-128]
   38298:	ldp	q1, q0, [x29, #-112]
   3829c:	stur	q0, [x29, #-96]
   382a0:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   382a4:	ldur	q0, [x29, #-128]
   382a8:	cmp	w0, #0x0
   382ac:	b.lt	382b4 <mpfr_set_ld@@Base+0x32c>  // b.tstop
   382b0:	ldur	q0, [x29, #-96]
   382b4:	ldr	q1, [sp, #16]
   382b8:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   382bc:	cmp	w0, #0x0
   382c0:	b.gt	382fc <mpfr_set_ld@@Base+0x374>
   382c4:	ldur	q0, [x29, #-96]
   382c8:	ldr	q1, [sp, #112]
   382cc:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   382d0:	sub	x0, x29, #0x20
   382d4:	sub	x1, x29, #0x20
   382d8:	mov	w2, #0x1000                	// #4096
   382dc:	mov	w3, #0x1                   	// #1
   382e0:	stur	q0, [x29, #-96]
   382e4:	sub	w21, w21, #0x1, lsl #12
   382e8:	bl	bbe0 <mpfr_mul_2si@plt>
   382ec:	ldur	q0, [x29, #-144]
   382f0:	ldur	q1, [x29, #-96]
   382f4:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   382f8:	stur	q0, [x29, #-128]
   382fc:	ldp	q1, q0, [x29, #-112]
   38300:	stur	q0, [x29, #-96]
   38304:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38308:	ldur	q0, [x29, #-128]
   3830c:	cmp	w0, #0x0
   38310:	b.lt	38318 <mpfr_set_ld@@Base+0x390>  // b.tstop
   38314:	ldur	q0, [x29, #-96]
   38318:	ldr	q1, [sp, #32]
   3831c:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38320:	cmp	w0, #0x0
   38324:	b.gt	38360 <mpfr_set_ld@@Base+0x3d8>
   38328:	ldur	q0, [x29, #-96]
   3832c:	ldr	q1, [sp, #96]
   38330:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   38334:	sub	x0, x29, #0x20
   38338:	sub	x1, x29, #0x20
   3833c:	mov	w2, #0x800                 	// #2048
   38340:	mov	w3, #0x1                   	// #1
   38344:	stur	q0, [x29, #-96]
   38348:	sub	w21, w21, #0x800
   3834c:	bl	bbe0 <mpfr_mul_2si@plt>
   38350:	ldur	q0, [x29, #-144]
   38354:	ldur	q1, [x29, #-96]
   38358:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   3835c:	stur	q0, [x29, #-128]
   38360:	ldp	q1, q0, [x29, #-112]
   38364:	stur	q0, [x29, #-96]
   38368:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   3836c:	ldur	q0, [x29, #-128]
   38370:	cmp	w0, #0x0
   38374:	b.lt	3837c <mpfr_set_ld@@Base+0x3f4>  // b.tstop
   38378:	ldur	q0, [x29, #-96]
   3837c:	ldur	q1, [x29, #-176]
   38380:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38384:	cmp	w0, #0x0
   38388:	b.gt	383c4 <mpfr_set_ld@@Base+0x43c>
   3838c:	ldur	q0, [x29, #-96]
   38390:	ldr	q1, [sp, #80]
   38394:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   38398:	sub	x0, x29, #0x20
   3839c:	sub	x1, x29, #0x20
   383a0:	mov	w2, #0x400                 	// #1024
   383a4:	mov	w3, #0x1                   	// #1
   383a8:	stur	q0, [x29, #-96]
   383ac:	sub	w21, w21, #0x400
   383b0:	bl	bbe0 <mpfr_mul_2si@plt>
   383b4:	ldur	q0, [x29, #-144]
   383b8:	ldur	q1, [x29, #-96]
   383bc:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   383c0:	stur	q0, [x29, #-128]
   383c4:	ldp	q1, q0, [x29, #-112]
   383c8:	stur	q0, [x29, #-96]
   383cc:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   383d0:	ldur	q0, [x29, #-128]
   383d4:	cmp	w0, #0x0
   383d8:	b.lt	383e0 <mpfr_set_ld@@Base+0x458>  // b.tstop
   383dc:	ldur	q0, [x29, #-96]
   383e0:	ldr	q1, [sp, #48]
   383e4:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   383e8:	cmp	w0, #0x0
   383ec:	b.gt	381d0 <mpfr_set_ld@@Base+0x248>
   383f0:	ldur	q0, [x29, #-96]
   383f4:	ldr	q1, [sp, #64]
   383f8:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   383fc:	sub	x0, x29, #0x20
   38400:	sub	x1, x29, #0x20
   38404:	mov	w2, #0x200                 	// #512
   38408:	mov	w3, #0x1                   	// #1
   3840c:	stur	q0, [x29, #-96]
   38410:	sub	w21, w21, #0x200
   38414:	bl	bbe0 <mpfr_mul_2si@plt>
   38418:	b	385f8 <mpfr_set_ld@@Base+0x670>
   3841c:	ldur	q0, [x29, #-144]
   38420:	ldur	q1, [x29, #-96]
   38424:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   38428:	stur	q0, [x29, #-128]
   3842c:	ldp	q1, q0, [x29, #-112]
   38430:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38434:	ldur	q0, [x29, #-128]
   38438:	cmp	w0, #0x0
   3843c:	b.lt	38444 <mpfr_set_ld@@Base+0x4bc>  // b.tstop
   38440:	ldur	q0, [x29, #-96]
   38444:	ldr	q1, [sp, #128]
   38448:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   3844c:	tbnz	w0, #31, 38488 <mpfr_set_ld@@Base+0x500>
   38450:	ldur	q0, [x29, #-96]
   38454:	ldr	q1, [sp]
   38458:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   3845c:	sub	x0, x29, #0x20
   38460:	sub	x1, x29, #0x20
   38464:	mov	w2, #0x2000                	// #8192
   38468:	mov	w3, #0x1                   	// #1
   3846c:	stur	q0, [x29, #-96]
   38470:	add	w21, w21, #0x2, lsl #12
   38474:	bl	c410 <mpfr_div_2si@plt>
   38478:	ldur	q0, [x29, #-144]
   3847c:	ldur	q1, [x29, #-96]
   38480:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   38484:	stur	q0, [x29, #-128]
   38488:	ldp	q1, q0, [x29, #-112]
   3848c:	stur	q0, [x29, #-96]
   38490:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38494:	ldur	q0, [x29, #-128]
   38498:	cmp	w0, #0x0
   3849c:	b.lt	384a4 <mpfr_set_ld@@Base+0x51c>  // b.tstop
   384a0:	ldur	q0, [x29, #-96]
   384a4:	ldr	q1, [sp, #112]
   384a8:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   384ac:	tbnz	w0, #31, 384e8 <mpfr_set_ld@@Base+0x560>
   384b0:	ldur	q0, [x29, #-96]
   384b4:	ldr	q1, [sp, #16]
   384b8:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   384bc:	sub	x0, x29, #0x20
   384c0:	sub	x1, x29, #0x20
   384c4:	mov	w2, #0x1000                	// #4096
   384c8:	mov	w3, #0x1                   	// #1
   384cc:	stur	q0, [x29, #-96]
   384d0:	add	w21, w21, #0x1, lsl #12
   384d4:	bl	c410 <mpfr_div_2si@plt>
   384d8:	ldur	q0, [x29, #-144]
   384dc:	ldur	q1, [x29, #-96]
   384e0:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   384e4:	stur	q0, [x29, #-128]
   384e8:	ldp	q1, q0, [x29, #-112]
   384ec:	stur	q0, [x29, #-96]
   384f0:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   384f4:	ldur	q0, [x29, #-128]
   384f8:	cmp	w0, #0x0
   384fc:	b.lt	38504 <mpfr_set_ld@@Base+0x57c>  // b.tstop
   38500:	ldur	q0, [x29, #-96]
   38504:	ldr	q1, [sp, #96]
   38508:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   3850c:	tbnz	w0, #31, 38548 <mpfr_set_ld@@Base+0x5c0>
   38510:	ldur	q0, [x29, #-96]
   38514:	ldr	q1, [sp, #32]
   38518:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   3851c:	sub	x0, x29, #0x20
   38520:	sub	x1, x29, #0x20
   38524:	mov	w2, #0x800                 	// #2048
   38528:	mov	w3, #0x1                   	// #1
   3852c:	stur	q0, [x29, #-96]
   38530:	add	w21, w21, #0x800
   38534:	bl	c410 <mpfr_div_2si@plt>
   38538:	ldur	q0, [x29, #-144]
   3853c:	ldur	q1, [x29, #-96]
   38540:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   38544:	stur	q0, [x29, #-128]
   38548:	ldp	q1, q0, [x29, #-112]
   3854c:	stur	q0, [x29, #-96]
   38550:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38554:	ldur	q0, [x29, #-128]
   38558:	cmp	w0, #0x0
   3855c:	b.lt	38564 <mpfr_set_ld@@Base+0x5dc>  // b.tstop
   38560:	ldur	q0, [x29, #-96]
   38564:	ldr	q1, [sp, #80]
   38568:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   3856c:	tbnz	w0, #31, 385a8 <mpfr_set_ld@@Base+0x620>
   38570:	ldur	q0, [x29, #-96]
   38574:	ldur	q1, [x29, #-176]
   38578:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   3857c:	sub	x0, x29, #0x20
   38580:	sub	x1, x29, #0x20
   38584:	mov	w2, #0x400                 	// #1024
   38588:	mov	w3, #0x1                   	// #1
   3858c:	stur	q0, [x29, #-96]
   38590:	add	w21, w21, #0x400
   38594:	bl	c410 <mpfr_div_2si@plt>
   38598:	ldur	q0, [x29, #-144]
   3859c:	ldur	q1, [x29, #-96]
   385a0:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   385a4:	stur	q0, [x29, #-128]
   385a8:	ldp	q1, q0, [x29, #-112]
   385ac:	stur	q0, [x29, #-96]
   385b0:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   385b4:	ldur	q0, [x29, #-128]
   385b8:	cmp	w0, #0x0
   385bc:	b.lt	385c4 <mpfr_set_ld@@Base+0x63c>  // b.tstop
   385c0:	ldur	q0, [x29, #-96]
   385c4:	ldr	q1, [sp, #64]
   385c8:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   385cc:	tbnz	w0, #31, 381d0 <mpfr_set_ld@@Base+0x248>
   385d0:	ldur	q0, [x29, #-96]
   385d4:	ldr	q1, [sp, #48]
   385d8:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   385dc:	sub	x0, x29, #0x20
   385e0:	sub	x1, x29, #0x20
   385e4:	mov	w2, #0x200                 	// #512
   385e8:	mov	w3, #0x1                   	// #1
   385ec:	stur	q0, [x29, #-96]
   385f0:	add	w21, w21, #0x200
   385f4:	bl	c410 <mpfr_div_2si@plt>
   385f8:	ldur	q0, [x29, #-96]
   385fc:	ldur	q1, [x29, #-112]
   38600:	b	381d4 <mpfr_set_ld@@Base+0x24c>
   38604:	ldur	q0, [x29, #-96]
   38608:	bl	5d7e8 <mpfr_free_pool@@Base+0x236c>
   3860c:	sub	x0, x29, #0x40
   38610:	mov	w1, #0x1                   	// #1
   38614:	bl	be90 <mpfr_set_d@plt>
   38618:	sub	x0, x29, #0x20
   3861c:	sub	x1, x29, #0x20
   38620:	sub	x2, x29, #0x40
   38624:	mov	w3, #0x1                   	// #1
   38628:	bl	c1e0 <mpfr_add@plt>
   3862c:	cbnz	w0, 38660 <mpfr_set_ld@@Base+0x6d8>
   38630:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38634:	ldr	x1, [x0, #2704]
   38638:	add	x0, x0, #0xa90
   3863c:	blr	x1
   38640:	ldr	w1, [x22, x0]
   38644:	sub	x0, x29, #0x40
   38648:	bl	bd80 <mpfr_get_d@plt>
   3864c:	bl	5d698 <mpfr_free_pool@@Base+0x221c>
   38650:	mov	v1.16b, v0.16b
   38654:	ldur	q0, [x29, #-96]
   38658:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   3865c:	b	385fc <mpfr_set_ld@@Base+0x674>
   38660:	sub	x0, x29, #0x20
   38664:	bl	cb70 <mpfr_number_p@plt>
   38668:	cbz	w0, 386c8 <mpfr_set_ld@@Base+0x740>
   3866c:	ldr	x9, [x19]
   38670:	ldur	x8, [x29, #-32]
   38674:	add	x1, x9, #0x1
   38678:	cmp	x8, x1
   3867c:	b.eq	38690 <mpfr_set_ld@@Base+0x708>  // b.none
   38680:	sub	x0, x29, #0x20
   38684:	bl	bf20 <mpfr_set_prec@plt>
   38688:	mov	w21, wzr
   3868c:	b	381c4 <mpfr_set_ld@@Base+0x23c>
   38690:	ldur	x8, [x29, #-8]
   38694:	mvn	w10, w9
   38698:	mov	x11, #0x100000000           	// #4294967296
   3869c:	lsl	x10, x11, x10
   386a0:	ldr	x9, [x8]
   386a4:	asr	x10, x10, #32
   386a8:	cbnz	w20, 386c0 <mpfr_set_ld@@Base+0x738>
   386ac:	ldur	w11, [x29, #-24]
   386b0:	and	x12, x9, x10
   386b4:	cmp	x12, x11, lsr #31
   386b8:	mov	w11, #0x2                   	// #2
   386bc:	cinc	w20, w11, eq  // eq = none
   386c0:	orr	x9, x9, x10
   386c4:	str	x9, [x8]
   386c8:	sxtw	x2, w21
   386cc:	sub	x1, x29, #0x20
   386d0:	mov	x0, x19
   386d4:	mov	w3, w20
   386d8:	bl	bbe0 <mpfr_mul_2si@plt>
   386dc:	mov	w21, w0
   386e0:	sub	x0, x29, #0x20
   386e4:	bl	c0b0 <mpfr_clear@plt>
   386e8:	sub	x0, x29, #0x40
   386ec:	bl	c0b0 <mpfr_clear@plt>
   386f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   386f4:	ldr	x1, [x0, #2640]
   386f8:	add	x0, x0, #0xa50
   386fc:	blr	x1
   38700:	str	w23, [x22, x0]
   38704:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38708:	ldr	x1, [x0, #2576]
   3870c:	add	x0, x0, #0xa10
   38710:	blr	x1
   38714:	str	x24, [x22, x0]
   38718:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3871c:	ldr	x1, [x0, #2608]
   38720:	add	x0, x0, #0xa30
   38724:	blr	x1
   38728:	str	x25, [x22, x0]
   3872c:	ldr	x8, [x19, #16]
   38730:	cmp	x8, x25
   38734:	b.gt	38760 <mpfr_set_ld@@Base+0x7d8>
   38738:	cmp	x8, x24
   3873c:	b.lt	38760 <mpfr_set_ld@@Base+0x7d8>  // b.tstop
   38740:	cbz	w21, 3805c <mpfr_set_ld@@Base+0xd4>
   38744:	orr	w8, w23, #0x8
   38748:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3874c:	ldr	x1, [x0, #2640]
   38750:	add	x0, x0, #0xa50
   38754:	blr	x1
   38758:	str	w8, [x22, x0]
   3875c:	b	3805c <mpfr_set_ld@@Base+0xd4>
   38760:	mov	x0, x19
   38764:	mov	w1, w21
   38768:	mov	w2, w20
   3876c:	bl	cb10 <mpfr_check_range@plt>
   38770:	mov	w21, w0
   38774:	b	3805c <mpfr_set_ld@@Base+0xd4>

0000000000038778 <mpfr_get_ld@@Base>:
   38778:	sub	sp, sp, #0xb0
   3877c:	stp	x29, x30, [sp, #104]
   38780:	stp	x24, x23, [sp, #128]
   38784:	stp	x22, x21, [sp, #144]
   38788:	stp	x20, x19, [sp, #160]
   3878c:	ldr	x8, [x0, #16]
   38790:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   38794:	mov	x19, x0
   38798:	mov	w20, w1
   3879c:	cmp	x8, x9
   387a0:	str	d8, [sp, #96]
   387a4:	str	x25, [sp, #120]
   387a8:	add	x29, sp, #0x60
   387ac:	b.le	38a14 <mpfr_get_ld@@Base+0x29c>
   387b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   387b4:	ldr	x1, [x0, #2640]
   387b8:	add	x0, x0, #0xa50
   387bc:	blr	x1
   387c0:	mrs	x21, tpidr_el0
   387c4:	ldr	w22, [x21, x0]
   387c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   387cc:	ldr	x1, [x0, #2576]
   387d0:	add	x0, x0, #0xa10
   387d4:	blr	x1
   387d8:	ldr	x23, [x21, x0]
   387dc:	mov	x8, x0
   387e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   387e4:	ldr	x1, [x0, #2608]
   387e8:	add	x0, x0, #0xa30
   387ec:	blr	x1
   387f0:	ldr	x24, [x21, x0]
   387f4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   387f8:	str	x9, [x21, x8]
   387fc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   38800:	str	x8, [x21, x0]
   38804:	sub	x0, x29, #0x20
   38808:	mov	w1, #0x71                  	// #113
   3880c:	bl	ca60 <mpfr_init2@plt>
   38810:	add	x0, sp, #0x20
   38814:	mov	w1, #0x71                  	// #113
   38818:	bl	ca60 <mpfr_init2@plt>
   3881c:	ldr	w3, [x19, #8]
   38820:	sub	x0, x29, #0x20
   38824:	mov	x1, x19
   38828:	mov	w2, w20
   3882c:	bl	c690 <mpfr_set4@plt>
   38830:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38834:	ldur	x20, [x29, #-16]
   38838:	ldur	w19, [x29, #-24]
   3883c:	ldr	q0, [x8, #1504]
   38840:	mov	w8, #0x1                   	// #1
   38844:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   38848:	stur	xzr, [x29, #-16]
   3884c:	str	q0, [sp, #16]
   38850:	stur	w8, [x29, #-24]
   38854:	sub	x0, x29, #0x20
   38858:	mov	w1, wzr
   3885c:	bl	bd80 <mpfr_get_d@plt>
   38860:	mov	v8.16b, v0.16b
   38864:	bl	5d698 <mpfr_free_pool@@Base+0x221c>
   38868:	mov	v1.16b, v0.16b
   3886c:	ldr	q0, [sp, #16]
   38870:	bl	5b518 <mpfr_free_pool@@Base+0x9c>
   38874:	str	q0, [sp, #16]
   38878:	add	x0, sp, #0x20
   3887c:	mov	v0.16b, v8.16b
   38880:	mov	w1, wzr
   38884:	bl	be90 <mpfr_set_d@plt>
   38888:	sub	x0, x29, #0x20
   3888c:	sub	x1, x29, #0x20
   38890:	add	x2, sp, #0x20
   38894:	mov	w3, wzr
   38898:	bl	bbc0 <mpfr_sub@plt>
   3889c:	ldur	x8, [x29, #-16]
   388a0:	cmp	x8, x25
   388a4:	b.ne	38854 <mpfr_get_ld@@Base+0xdc>  // b.any
   388a8:	add	x0, sp, #0x20
   388ac:	bl	c0b0 <mpfr_clear@plt>
   388b0:	sub	x0, x29, #0x20
   388b4:	bl	c0b0 <mpfr_clear@plt>
   388b8:	cbz	x20, 38900 <mpfr_get_ld@@Base+0x188>
   388bc:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   388c0:	ldr	q1, [x8, #1728]
   388c4:	ldr	q0, [sp, #16]
   388c8:	str	q1, [sp]
   388cc:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   388d0:	cmp	w0, #0x0
   388d4:	b.ge	38908 <mpfr_get_ld@@Base+0x190>  // b.tcont
   388d8:	ldr	q0, [sp, #16]
   388dc:	mov	v1.16b, v0.16b
   388e0:	bl	5b518 <mpfr_free_pool@@Base+0x9c>
   388e4:	ldr	q1, [sp]
   388e8:	str	q0, [sp, #16]
   388ec:	sub	x20, x20, #0x1
   388f0:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   388f4:	ldr	q0, [sp, #16]
   388f8:	tbnz	w0, #31, 388dc <mpfr_get_ld@@Base+0x164>
   388fc:	b	3890c <mpfr_get_ld@@Base+0x194>
   38900:	ldr	q0, [sp, #16]
   38904:	b	38954 <mpfr_get_ld@@Base+0x1dc>
   38908:	ldr	q0, [sp, #16]
   3890c:	cmp	x20, #0x0
   38910:	adrp	x9, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38914:	cset	w8, gt
   38918:	add	x9, x9, #0x700
   3891c:	ldr	q1, [x9, w8, uxtw #4]
   38920:	cneg	x20, x20, mi  // mi = first
   38924:	stp	q1, q0, [sp]
   38928:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   3892c:	tst	x20, #0x1
   38930:	mov	v1.16b, v0.16b
   38934:	b.eq	38944 <mpfr_get_ld@@Base+0x1cc>  // b.none
   38938:	lsr	x20, x20, #1
   3893c:	cbnz	x20, 389e4 <mpfr_get_ld@@Base+0x26c>
   38940:	b	38950 <mpfr_get_ld@@Base+0x1d8>
   38944:	ldr	q1, [sp, #16]
   38948:	lsr	x20, x20, #1
   3894c:	cbnz	x20, 389e4 <mpfr_get_ld@@Base+0x26c>
   38950:	mov	v0.16b, v1.16b
   38954:	str	q0, [sp, #16]
   38958:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3895c:	ldr	q0, [x8, #1552]
   38960:	ldr	q1, [sp, #16]
   38964:	bl	5cbb8 <mpfr_free_pool@@Base+0x173c>
   38968:	ldr	q1, [sp, #16]
   3896c:	cmp	w19, #0x0
   38970:	b.ge	38978 <mpfr_get_ld@@Base+0x200>  // b.tcont
   38974:	mov	v1.16b, v0.16b
   38978:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3897c:	ldr	x1, [x0, #2640]
   38980:	add	x0, x0, #0xa50
   38984:	blr	x1
   38988:	str	w22, [x21, x0]
   3898c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38990:	ldr	x1, [x0, #2576]
   38994:	add	x0, x0, #0xa10
   38998:	blr	x1
   3899c:	str	x23, [x21, x0]
   389a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   389a4:	ldr	x1, [x0, #2608]
   389a8:	add	x0, x0, #0xa30
   389ac:	blr	x1
   389b0:	str	x24, [x21, x0]
   389b4:	ldp	x20, x19, [sp, #160]
   389b8:	ldp	x22, x21, [sp, #144]
   389bc:	ldp	x24, x23, [sp, #128]
   389c0:	ldr	x25, [sp, #120]
   389c4:	ldp	x29, x30, [sp, #104]
   389c8:	ldr	d8, [sp, #96]
   389cc:	mov	v0.16b, v1.16b
   389d0:	add	sp, sp, #0xb0
   389d4:	ret
   389d8:	asr	x20, x20, #1
   389dc:	mov	v1.16b, v0.16b
   389e0:	cbz	x20, 38954 <mpfr_get_ld@@Base+0x1dc>
   389e4:	ldr	q0, [sp]
   389e8:	str	q1, [sp, #16]
   389ec:	mov	v1.16b, v0.16b
   389f0:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   389f4:	mov	v1.16b, v0.16b
   389f8:	ldr	q0, [sp, #16]
   389fc:	str	q1, [sp]
   38a00:	bl	5c3d0 <mpfr_free_pool@@Base+0xf54>
   38a04:	tst	x20, #0x1
   38a08:	b.ne	389d8 <mpfr_get_ld@@Base+0x260>  // b.any
   38a0c:	ldr	q0, [sp, #16]
   38a10:	b	389d8 <mpfr_get_ld@@Base+0x260>
   38a14:	mov	x0, x19
   38a18:	mov	w1, w20
   38a1c:	bl	bd80 <mpfr_get_d@plt>
   38a20:	bl	5d698 <mpfr_free_pool@@Base+0x221c>
   38a24:	mov	v1.16b, v0.16b
   38a28:	b	389b4 <mpfr_get_ld@@Base+0x23c>

0000000000038a2c <mpfr_get_ld_2exp@@Base>:
   38a2c:	sub	sp, sp, #0x70
   38a30:	stp	x29, x30, [sp, #64]
   38a34:	stp	x22, x21, [sp, #80]
   38a38:	stp	x20, x19, [sp, #96]
   38a3c:	ldr	x8, [x1, #16]
   38a40:	mov	x22, #0x4                   	// #4
   38a44:	movk	x22, #0x8000, lsl #48
   38a48:	mov	x20, x1
   38a4c:	cmp	x8, x22
   38a50:	mov	x19, x0
   38a54:	add	x29, sp, #0x40
   38a58:	b.lt	38b64 <mpfr_get_ld_2exp@@Base+0x138>  // b.tstop
   38a5c:	ldr	x8, [x20]
   38a60:	add	x0, sp, #0x20
   38a64:	mov	w1, w2
   38a68:	str	x8, [sp, #32]
   38a6c:	ldr	w8, [x20, #8]
   38a70:	str	w8, [sp, #40]
   38a74:	ldr	x8, [x20, #24]
   38a78:	stp	xzr, x8, [sp, #48]
   38a7c:	bl	c570 <mpfr_get_ld@plt>
   38a80:	ldr	x21, [x20, #16]
   38a84:	cmp	x21, x22
   38a88:	b.ge	38a94 <mpfr_get_ld_2exp@@Base+0x68>  // b.tcont
   38a8c:	mov	x20, xzr
   38a90:	b	38b4c <mpfr_get_ld_2exp@@Base+0x120>
   38a94:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38a98:	ldr	q1, [x8, #1728]
   38a9c:	stp	q1, q0, [sp]
   38aa0:	bl	5c040 <mpfr_free_pool@@Base+0xbc4>
   38aa4:	adrp	x22, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38aa8:	cbnz	w0, 38ad8 <mpfr_get_ld_2exp@@Base+0xac>
   38aac:	ldr	q0, [x22, #1776]
   38ab0:	add	x20, x21, #0x1
   38ab4:	ldr	q1, [x22, #1776]
   38ab8:	str	q0, [sp, #16]
   38abc:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38ac0:	tbnz	w0, #31, 38b14 <mpfr_get_ld_2exp@@Base+0xe8>
   38ac4:	ldp	q1, q0, [sp]
   38ac8:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38acc:	ldr	q0, [sp, #16]
   38ad0:	tbnz	w0, #31, 38b4c <mpfr_get_ld_2exp@@Base+0x120>
   38ad4:	b	38b18 <mpfr_get_ld_2exp@@Base+0xec>
   38ad8:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38adc:	ldr	q1, [x8, #1744]
   38ae0:	ldr	q0, [sp, #16]
   38ae4:	bl	5c040 <mpfr_free_pool@@Base+0xbc4>
   38ae8:	cbnz	w0, 38afc <mpfr_get_ld_2exp@@Base+0xd0>
   38aec:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38af0:	ldr	q0, [x8, #1760]
   38af4:	add	x20, x21, #0x1
   38af8:	b	38b18 <mpfr_get_ld_2exp@@Base+0xec>
   38afc:	ldr	q0, [sp, #16]
   38b00:	mov	x20, x21
   38b04:	ldr	q1, [x22, #1776]
   38b08:	str	q0, [sp, #16]
   38b0c:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38b10:	tbz	w0, #31, 38ac4 <mpfr_get_ld_2exp@@Base+0x98>
   38b14:	ldr	q0, [sp, #16]
   38b18:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38b1c:	ldr	q1, [x8, #1760]
   38b20:	str	q0, [sp, #16]
   38b24:	bl	5c290 <mpfr_free_pool@@Base+0xe14>
   38b28:	cmp	w0, #0x0
   38b2c:	b.gt	38b78 <mpfr_get_ld_2exp@@Base+0x14c>
   38b30:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38b34:	ldr	q1, [x8, #1744]
   38b38:	ldr	q0, [sp, #16]
   38b3c:	bl	5c148 <mpfr_free_pool@@Base+0xccc>
   38b40:	cmp	w0, #0x0
   38b44:	b.le	38b78 <mpfr_get_ld_2exp@@Base+0x14c>
   38b48:	ldr	q0, [sp, #16]
   38b4c:	str	x20, [x19]
   38b50:	ldp	x20, x19, [sp, #96]
   38b54:	ldp	x22, x21, [sp, #80]
   38b58:	ldp	x29, x30, [sp, #64]
   38b5c:	add	sp, sp, #0x70
   38b60:	ret
   38b64:	mov	x0, x19
   38b68:	mov	x1, x20
   38b6c:	bl	cbb0 <mpfr_get_d_2exp@plt>
   38b70:	bl	5d698 <mpfr_free_pool@@Base+0x221c>
   38b74:	b	38b50 <mpfr_get_ld_2exp@@Base+0x124>
   38b78:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   38b7c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   38b80:	add	x0, x0, #0x720
   38b84:	add	x2, x2, #0xf4e
   38b88:	mov	w1, #0x10f                 	// #271
   38b8c:	bl	cb20 <mpfr_assert_fail@plt>
   38b90:	b	38b48 <mpfr_get_ld_2exp@@Base+0x11c>

0000000000038b94 <mpfr_cbrt@@Base>:
   38b94:	sub	sp, sp, #0x70
   38b98:	stp	x29, x30, [sp, #16]
   38b9c:	stp	x28, x27, [sp, #32]
   38ba0:	stp	x26, x25, [sp, #48]
   38ba4:	stp	x24, x23, [sp, #64]
   38ba8:	stp	x22, x21, [sp, #80]
   38bac:	stp	x20, x19, [sp, #96]
   38bb0:	ldr	x8, [x1, #16]
   38bb4:	mov	x9, #0x2                   	// #2
   38bb8:	movk	x9, #0x8000, lsl #48
   38bbc:	add	x10, x9, #0x2
   38bc0:	mov	x21, x1
   38bc4:	cmp	x8, x10
   38bc8:	mov	x19, x0
   38bcc:	add	x29, sp, #0x10
   38bd0:	b.lt	38ec4 <mpfr_cbrt@@Base+0x330>  // b.tstop
   38bd4:	mov	w20, w2
   38bd8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38bdc:	ldr	x1, [x0, #2640]
   38be0:	add	x0, x0, #0xa50
   38be4:	blr	x1
   38be8:	mrs	x24, tpidr_el0
   38bec:	ldr	w25, [x24, x0]
   38bf0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38bf4:	ldr	x1, [x0, #2576]
   38bf8:	add	x0, x0, #0xa10
   38bfc:	blr	x1
   38c00:	ldr	x26, [x24, x0]
   38c04:	mov	x8, x0
   38c08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38c0c:	ldr	x1, [x0, #2608]
   38c10:	add	x0, x0, #0xa30
   38c14:	blr	x1
   38c18:	ldr	x27, [x24, x0]
   38c1c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   38c20:	str	x9, [x24, x8]
   38c24:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   38c28:	str	x8, [x24, x0]
   38c2c:	mov	x0, sp
   38c30:	bl	bfe0 <mpfr_mpz_init@plt>
   38c34:	mov	x0, sp
   38c38:	mov	x1, x21
   38c3c:	bl	caa0 <mpfr_get_z_2exp@plt>
   38c40:	ldr	w28, [x21, #8]
   38c44:	ldr	w8, [sp, #4]
   38c48:	mov	x21, x0
   38c4c:	tbz	w28, #31, 38c58 <mpfr_cbrt@@Base+0xc4>
   38c50:	neg	w8, w8
   38c54:	str	w8, [sp, #4]
   38c58:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   38c5c:	movk	x9, #0x5556
   38c60:	smulh	x12, x21, x9
   38c64:	add	x12, x12, x12, lsr #63
   38c68:	add	x12, x12, x12, lsl #1
   38c6c:	ldr	x10, [sp, #8]
   38c70:	sub	x12, x21, x12
   38c74:	add	x13, x12, #0x3
   38c78:	cmp	x12, #0x0
   38c7c:	csel	x22, x13, x12, lt  // lt = tstop
   38c80:	cmp	w8, #0x0
   38c84:	cneg	w8, w8, mi  // mi = first
   38c88:	add	x10, x10, w8, uxtw #3
   38c8c:	ldur	x10, [x10, #-8]
   38c90:	ldr	x11, [x19]
   38c94:	cmp	w20, #0x0
   38c98:	clz	x10, x10
   38c9c:	cinc	x23, x11, eq  // eq = none
   38ca0:	sub	x10, x10, x22
   38ca4:	add	x11, x23, x23, lsl #1
   38ca8:	sub	x8, x10, x8, lsl #6
   38cac:	add	x8, x8, x11
   38cb0:	smulh	x8, x8, x9
   38cb4:	add	x8, x8, x8, lsr #63
   38cb8:	add	x8, x8, x8, lsl #1
   38cbc:	adds	x8, x8, x22
   38cc0:	b.mi	38ccc <mpfr_cbrt@@Base+0x138>  // b.first
   38cc4:	mov	x22, x8
   38cc8:	b	38cd4 <mpfr_cbrt@@Base+0x140>
   38ccc:	cmp	x22, #0x1
   38cd0:	b.lt	38ce8 <mpfr_cbrt@@Base+0x154>  // b.tstop
   38cd4:	mov	x0, sp
   38cd8:	mov	x1, sp
   38cdc:	mov	x2, x22
   38ce0:	bl	c230 <__gmpz_mul_2exp@plt>
   38ce4:	sub	x21, x21, x22
   38ce8:	mov	x0, sp
   38cec:	mov	x1, sp
   38cf0:	mov	w2, #0x3                   	// #3
   38cf4:	bl	c2e0 <__gmpz_root@plt>
   38cf8:	ldr	w8, [sp, #4]
   38cfc:	ldr	x9, [sp, #8]
   38d00:	cmp	w8, #0x0
   38d04:	cneg	w8, w8, mi  // mi = first
   38d08:	add	x9, x9, w8, uxtw #3
   38d0c:	ldur	x9, [x9, #-8]
   38d10:	lsl	x8, x8, #6
   38d14:	clz	x9, x9
   38d18:	sub	x8, x8, x9
   38d1c:	sub	x22, x8, x23
   38d20:	cmp	x22, #0x1
   38d24:	b.lt	38d60 <mpfr_cbrt@@Base+0x1cc>  // b.tstop
   38d28:	cbz	w0, 38d6c <mpfr_cbrt@@Base+0x1d8>
   38d2c:	mov	x0, sp
   38d30:	mov	x1, xzr
   38d34:	bl	baf0 <__gmpz_scan1@plt>
   38d38:	mov	x23, x0
   38d3c:	mov	x0, sp
   38d40:	mov	x1, sp
   38d44:	mov	x2, x22
   38d48:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   38d4c:	add	x8, x22, x22, lsl #1
   38d50:	cmp	x23, x22
   38d54:	add	x21, x8, x21
   38d58:	b.lt	38d84 <mpfr_cbrt@@Base+0x1f0>  // b.tstop
   38d5c:	b	38d64 <mpfr_cbrt@@Base+0x1d0>
   38d60:	cbz	w0, 38d84 <mpfr_cbrt@@Base+0x1f0>
   38d64:	mov	w22, wzr
   38d68:	b	38de8 <mpfr_cbrt@@Base+0x254>
   38d6c:	mov	x0, sp
   38d70:	mov	x1, sp
   38d74:	mov	x2, x22
   38d78:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   38d7c:	add	x8, x22, x22, lsl #1
   38d80:	add	x21, x8, x21
   38d84:	cmp	w20, #0x3
   38d88:	mov	w8, #0x2                   	// #2
   38d8c:	mov	w9, #0x3                   	// #3
   38d90:	csel	w8, w8, w20, eq  // eq = none
   38d94:	cmp	w20, #0x2
   38d98:	csel	w8, w9, w8, eq  // eq = none
   38d9c:	cmp	w28, #0x0
   38da0:	csel	w20, w8, w20, lt  // lt = tstop
   38da4:	cmp	w20, #0x4
   38da8:	b.eq	38dc8 <mpfr_cbrt@@Base+0x234>  // b.none
   38dac:	cmp	w20, #0x2
   38db0:	b.eq	38dc8 <mpfr_cbrt@@Base+0x234>  // b.none
   38db4:	cbnz	w20, 38de4 <mpfr_cbrt@@Base+0x250>
   38db8:	mov	x0, sp
   38dbc:	mov	x1, xzr
   38dc0:	bl	c020 <__gmpz_tstbit@plt>
   38dc4:	cbz	w0, 38de0 <mpfr_cbrt@@Base+0x24c>
   38dc8:	mov	x0, sp
   38dcc:	mov	x1, sp
   38dd0:	mov	w2, #0x1                   	// #1
   38dd4:	mov	w22, #0x1                   	// #1
   38dd8:	bl	c360 <__gmpz_add_ui@plt>
   38ddc:	b	38de8 <mpfr_cbrt@@Base+0x254>
   38de0:	mov	w20, wzr
   38de4:	mov	w22, #0xffffffff            	// #-1
   38de8:	mov	x1, sp
   38dec:	mov	x0, x19
   38df0:	mov	w2, wzr
   38df4:	bl	c250 <mpfr_set_z@plt>
   38df8:	ldr	x8, [x19, #16]
   38dfc:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   38e00:	movk	x9, #0x5556
   38e04:	smulh	x9, x21, x9
   38e08:	add	x9, x9, x9, lsr #63
   38e0c:	add	w22, w0, w22
   38e10:	add	x8, x8, x9
   38e14:	str	x8, [x19, #16]
   38e18:	tbz	w28, #31, 38e2c <mpfr_cbrt@@Base+0x298>
   38e1c:	ldr	w8, [x19, #8]
   38e20:	neg	w22, w22
   38e24:	neg	w8, w8
   38e28:	str	w8, [x19, #8]
   38e2c:	mov	x0, sp
   38e30:	bl	c1b0 <mpfr_mpz_clear@plt>
   38e34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38e38:	ldr	x1, [x0, #2640]
   38e3c:	add	x0, x0, #0xa50
   38e40:	blr	x1
   38e44:	str	w25, [x24, x0]
   38e48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38e4c:	ldr	x1, [x0, #2576]
   38e50:	add	x0, x0, #0xa10
   38e54:	blr	x1
   38e58:	str	x26, [x24, x0]
   38e5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38e60:	ldr	x1, [x0, #2608]
   38e64:	add	x0, x0, #0xa30
   38e68:	blr	x1
   38e6c:	str	x27, [x24, x0]
   38e70:	ldr	x8, [x19, #16]
   38e74:	cmp	x8, x27
   38e78:	b.gt	38ef8 <mpfr_cbrt@@Base+0x364>
   38e7c:	cmp	x8, x26
   38e80:	b.lt	38ef8 <mpfr_cbrt@@Base+0x364>  // b.tstop
   38e84:	cbz	w22, 38ea0 <mpfr_cbrt@@Base+0x30c>
   38e88:	orr	w8, w25, #0x8
   38e8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38e90:	ldr	x1, [x0, #2640]
   38e94:	add	x0, x0, #0xa50
   38e98:	blr	x1
   38e9c:	str	w8, [x24, x0]
   38ea0:	mov	w0, w22
   38ea4:	ldp	x20, x19, [sp, #96]
   38ea8:	ldp	x22, x21, [sp, #80]
   38eac:	ldp	x24, x23, [sp, #64]
   38eb0:	ldp	x26, x25, [sp, #48]
   38eb4:	ldp	x28, x27, [sp, #32]
   38eb8:	ldp	x29, x30, [sp, #16]
   38ebc:	add	sp, sp, #0x70
   38ec0:	ret
   38ec4:	cmp	x8, x9
   38ec8:	b.ne	38f10 <mpfr_cbrt@@Base+0x37c>  // b.any
   38ecc:	str	x9, [x19, #16]
   38ed0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38ed4:	ldr	x1, [x0, #2640]
   38ed8:	add	x0, x0, #0xa50
   38edc:	blr	x1
   38ee0:	mrs	x8, tpidr_el0
   38ee4:	ldr	w9, [x8, x0]
   38ee8:	mov	w22, wzr
   38eec:	orr	w9, w9, #0x4
   38ef0:	str	w9, [x8, x0]
   38ef4:	b	38ea0 <mpfr_cbrt@@Base+0x30c>
   38ef8:	mov	x0, x19
   38efc:	mov	w1, w22
   38f00:	mov	w2, w20
   38f04:	bl	cb10 <mpfr_check_range@plt>
   38f08:	mov	w22, w0
   38f0c:	b	38ea0 <mpfr_cbrt@@Base+0x30c>
   38f10:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   38f14:	cmp	x8, x9
   38f18:	b.ne	38f28 <mpfr_cbrt@@Base+0x394>  // b.any
   38f1c:	mov	w22, wzr
   38f20:	str	x9, [x19, #16]
   38f24:	b	38f34 <mpfr_cbrt@@Base+0x3a0>
   38f28:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   38f2c:	mov	w22, wzr
   38f30:	str	x8, [x19, #16]
   38f34:	ldr	w8, [x21, #8]
   38f38:	str	w8, [x19, #8]
   38f3c:	b	38ea0 <mpfr_cbrt@@Base+0x30c>

0000000000038f40 <mpfr_fits_sshort_p@@Base>:
   38f40:	sub	sp, sp, #0x60
   38f44:	stp	x29, x30, [sp, #32]
   38f48:	stp	x24, x23, [sp, #48]
   38f4c:	stp	x22, x21, [sp, #64]
   38f50:	stp	x20, x19, [sp, #80]
   38f54:	ldr	x23, [x0, #16]
   38f58:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   38f5c:	add	x29, sp, #0x20
   38f60:	cmp	x23, x8
   38f64:	b.le	39054 <mpfr_fits_sshort_p@@Base+0x114>
   38f68:	cmp	x23, #0x1
   38f6c:	b.lt	38ff4 <mpfr_fits_sshort_p@@Base+0xb4>  // b.tstop
   38f70:	ldr	w24, [x0, #8]
   38f74:	mov	w8, #0xf                   	// #15
   38f78:	mov	x19, x0
   38f7c:	cmp	w24, #0x0
   38f80:	cinc	w8, w8, lt  // lt = tstop
   38f84:	sub	w9, w8, #0x1
   38f88:	cmp	x23, w9, sxtw
   38f8c:	b.le	38ff4 <mpfr_fits_sshort_p@@Base+0xb4>
   38f90:	add	w9, w8, #0x1
   38f94:	cmp	x23, x9
   38f98:	b.ge	39014 <mpfr_fits_sshort_p@@Base+0xd4>  // b.tcont
   38f9c:	mov	w20, w1
   38fa0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   38fa4:	ldr	x1, [x0, #2640]
   38fa8:	add	x0, x0, #0xa50
   38fac:	blr	x1
   38fb0:	mrs	x21, tpidr_el0
   38fb4:	ldr	w22, [x21, x0]
   38fb8:	mov	w1, w8
   38fbc:	mov	x0, sp
   38fc0:	bl	ca60 <mpfr_init2@plt>
   38fc4:	ldr	w3, [x19, #8]
   38fc8:	cmp	w20, #0x5
   38fcc:	mov	w8, #0x4                   	// #4
   38fd0:	csel	w2, w8, w20, eq  // eq = none
   38fd4:	mov	x0, sp
   38fd8:	mov	x1, x19
   38fdc:	bl	c690 <mpfr_set4@plt>
   38fe0:	tbnz	w24, #31, 3901c <mpfr_fits_sshort_p@@Base+0xdc>
   38fe4:	ldr	x8, [sp, #16]
   38fe8:	cmp	x8, x23
   38fec:	cset	w19, eq  // eq = none
   38ff0:	b	39034 <mpfr_fits_sshort_p@@Base+0xf4>
   38ff4:	mov	w19, #0x1                   	// #1
   38ff8:	mov	w0, w19
   38ffc:	ldp	x20, x19, [sp, #80]
   39000:	ldp	x22, x21, [sp, #64]
   39004:	ldp	x24, x23, [sp, #48]
   39008:	ldp	x29, x30, [sp, #32]
   3900c:	add	sp, sp, #0x60
   39010:	ret
   39014:	mov	w19, wzr
   39018:	b	38ff8 <mpfr_fits_sshort_p@@Base+0xb8>
   3901c:	mov	x0, sp
   39020:	mov	x1, #0xffffffffffff8000    	// #-32768
   39024:	mov	x2, xzr
   39028:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3902c:	mvn	w8, w0
   39030:	lsr	w19, w8, #31
   39034:	mov	x0, sp
   39038:	bl	c0b0 <mpfr_clear@plt>
   3903c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39040:	ldr	x1, [x0, #2640]
   39044:	add	x0, x0, #0xa50
   39048:	blr	x1
   3904c:	str	w22, [x21, x0]
   39050:	b	38ff8 <mpfr_fits_sshort_p@@Base+0xb8>
   39054:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   39058:	cmp	x23, x8
   3905c:	cset	w19, eq  // eq = none
   39060:	b	38ff8 <mpfr_fits_sshort_p@@Base+0xb8>

0000000000039064 <mpfr_fits_sint_p@@Base>:
   39064:	sub	sp, sp, #0x60
   39068:	stp	x29, x30, [sp, #32]
   3906c:	stp	x24, x23, [sp, #48]
   39070:	stp	x22, x21, [sp, #64]
   39074:	stp	x20, x19, [sp, #80]
   39078:	ldr	x23, [x0, #16]
   3907c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   39080:	add	x29, sp, #0x20
   39084:	cmp	x23, x8
   39088:	b.le	39178 <mpfr_fits_sint_p@@Base+0x114>
   3908c:	cmp	x23, #0x1
   39090:	b.lt	39118 <mpfr_fits_sint_p@@Base+0xb4>  // b.tstop
   39094:	ldr	w24, [x0, #8]
   39098:	mov	w8, #0x1f                  	// #31
   3909c:	mov	x19, x0
   390a0:	cmp	w24, #0x0
   390a4:	cinc	w8, w8, lt  // lt = tstop
   390a8:	sub	w9, w8, #0x1
   390ac:	cmp	x23, w9, sxtw
   390b0:	b.le	39118 <mpfr_fits_sint_p@@Base+0xb4>
   390b4:	add	w9, w8, #0x1
   390b8:	cmp	x23, x9
   390bc:	b.ge	39138 <mpfr_fits_sint_p@@Base+0xd4>  // b.tcont
   390c0:	mov	w20, w1
   390c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   390c8:	ldr	x1, [x0, #2640]
   390cc:	add	x0, x0, #0xa50
   390d0:	blr	x1
   390d4:	mrs	x21, tpidr_el0
   390d8:	ldr	w22, [x21, x0]
   390dc:	mov	w1, w8
   390e0:	mov	x0, sp
   390e4:	bl	ca60 <mpfr_init2@plt>
   390e8:	ldr	w3, [x19, #8]
   390ec:	cmp	w20, #0x5
   390f0:	mov	w8, #0x4                   	// #4
   390f4:	csel	w2, w8, w20, eq  // eq = none
   390f8:	mov	x0, sp
   390fc:	mov	x1, x19
   39100:	bl	c690 <mpfr_set4@plt>
   39104:	tbnz	w24, #31, 39140 <mpfr_fits_sint_p@@Base+0xdc>
   39108:	ldr	x8, [sp, #16]
   3910c:	cmp	x8, x23
   39110:	cset	w19, eq  // eq = none
   39114:	b	39158 <mpfr_fits_sint_p@@Base+0xf4>
   39118:	mov	w19, #0x1                   	// #1
   3911c:	mov	w0, w19
   39120:	ldp	x20, x19, [sp, #80]
   39124:	ldp	x22, x21, [sp, #64]
   39128:	ldp	x24, x23, [sp, #48]
   3912c:	ldp	x29, x30, [sp, #32]
   39130:	add	sp, sp, #0x60
   39134:	ret
   39138:	mov	w19, wzr
   3913c:	b	3911c <mpfr_fits_sint_p@@Base+0xb8>
   39140:	mov	x0, sp
   39144:	mov	x1, #0xffffffff80000000    	// #-2147483648
   39148:	mov	x2, xzr
   3914c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   39150:	mvn	w8, w0
   39154:	lsr	w19, w8, #31
   39158:	mov	x0, sp
   3915c:	bl	c0b0 <mpfr_clear@plt>
   39160:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39164:	ldr	x1, [x0, #2640]
   39168:	add	x0, x0, #0xa50
   3916c:	blr	x1
   39170:	str	w22, [x21, x0]
   39174:	b	3911c <mpfr_fits_sint_p@@Base+0xb8>
   39178:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3917c:	cmp	x23, x8
   39180:	cset	w19, eq  // eq = none
   39184:	b	3911c <mpfr_fits_sint_p@@Base+0xb8>

0000000000039188 <mpfr_fits_slong_p@@Base>:
   39188:	sub	sp, sp, #0x60
   3918c:	stp	x29, x30, [sp, #32]
   39190:	stp	x24, x23, [sp, #48]
   39194:	stp	x22, x21, [sp, #64]
   39198:	stp	x20, x19, [sp, #80]
   3919c:	ldr	x23, [x0, #16]
   391a0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   391a4:	add	x29, sp, #0x20
   391a8:	cmp	x23, x8
   391ac:	b.le	3929c <mpfr_fits_slong_p@@Base+0x114>
   391b0:	cmp	x23, #0x1
   391b4:	b.lt	3923c <mpfr_fits_slong_p@@Base+0xb4>  // b.tstop
   391b8:	ldr	w24, [x0, #8]
   391bc:	mov	w8, #0x3f                  	// #63
   391c0:	mov	x19, x0
   391c4:	cmp	w24, #0x0
   391c8:	cinc	w8, w8, lt  // lt = tstop
   391cc:	sub	w9, w8, #0x1
   391d0:	cmp	x23, w9, sxtw
   391d4:	b.le	3923c <mpfr_fits_slong_p@@Base+0xb4>
   391d8:	add	w9, w8, #0x1
   391dc:	cmp	x23, x9
   391e0:	b.ge	3925c <mpfr_fits_slong_p@@Base+0xd4>  // b.tcont
   391e4:	mov	w20, w1
   391e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   391ec:	ldr	x1, [x0, #2640]
   391f0:	add	x0, x0, #0xa50
   391f4:	blr	x1
   391f8:	mrs	x21, tpidr_el0
   391fc:	ldr	w22, [x21, x0]
   39200:	mov	w1, w8
   39204:	mov	x0, sp
   39208:	bl	ca60 <mpfr_init2@plt>
   3920c:	ldr	w3, [x19, #8]
   39210:	cmp	w20, #0x5
   39214:	mov	w8, #0x4                   	// #4
   39218:	csel	w2, w8, w20, eq  // eq = none
   3921c:	mov	x0, sp
   39220:	mov	x1, x19
   39224:	bl	c690 <mpfr_set4@plt>
   39228:	tbnz	w24, #31, 39264 <mpfr_fits_slong_p@@Base+0xdc>
   3922c:	ldr	x8, [sp, #16]
   39230:	cmp	x8, x23
   39234:	cset	w19, eq  // eq = none
   39238:	b	3927c <mpfr_fits_slong_p@@Base+0xf4>
   3923c:	mov	w19, #0x1                   	// #1
   39240:	mov	w0, w19
   39244:	ldp	x20, x19, [sp, #80]
   39248:	ldp	x22, x21, [sp, #64]
   3924c:	ldp	x24, x23, [sp, #48]
   39250:	ldp	x29, x30, [sp, #32]
   39254:	add	sp, sp, #0x60
   39258:	ret
   3925c:	mov	w19, wzr
   39260:	b	39240 <mpfr_fits_slong_p@@Base+0xb8>
   39264:	mov	x0, sp
   39268:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3926c:	mov	x2, xzr
   39270:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   39274:	mvn	w8, w0
   39278:	lsr	w19, w8, #31
   3927c:	mov	x0, sp
   39280:	bl	c0b0 <mpfr_clear@plt>
   39284:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39288:	ldr	x1, [x0, #2640]
   3928c:	add	x0, x0, #0xa50
   39290:	blr	x1
   39294:	str	w22, [x21, x0]
   39298:	b	39240 <mpfr_fits_slong_p@@Base+0xb8>
   3929c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   392a0:	cmp	x23, x8
   392a4:	cset	w19, eq  // eq = none
   392a8:	b	39240 <mpfr_fits_slong_p@@Base+0xb8>

00000000000392ac <mpfr_fits_ushort_p@@Base>:
   392ac:	sub	sp, sp, #0x60
   392b0:	stp	x29, x30, [sp, #32]
   392b4:	stp	x24, x23, [sp, #48]
   392b8:	stp	x22, x21, [sp, #64]
   392bc:	stp	x20, x19, [sp, #80]
   392c0:	ldr	x22, [x0, #16]
   392c4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   392c8:	add	x29, sp, #0x20
   392cc:	cmp	x22, x8
   392d0:	b.le	393ac <mpfr_fits_ushort_p@@Base+0x100>
   392d4:	ldr	w8, [x0, #8]
   392d8:	mov	x19, x0
   392dc:	mov	w20, w1
   392e0:	tbnz	w8, #31, 39354 <mpfr_fits_ushort_p@@Base+0xa8>
   392e4:	cmp	x22, #0xf
   392e8:	b.le	3938c <mpfr_fits_ushort_p@@Base+0xe0>
   392ec:	cmp	x22, #0x10
   392f0:	b.ne	3935c <mpfr_fits_ushort_p@@Base+0xb0>  // b.any
   392f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   392f8:	ldr	x1, [x0, #2640]
   392fc:	add	x0, x0, #0xa50
   39300:	blr	x1
   39304:	mrs	x23, tpidr_el0
   39308:	ldr	w24, [x23, x0]
   3930c:	mov	x21, x0
   39310:	mov	x0, sp
   39314:	mov	w1, #0x10                  	// #16
   39318:	bl	ca60 <mpfr_init2@plt>
   3931c:	ldr	w3, [x19, #8]
   39320:	cmp	w20, #0x5
   39324:	mov	w8, #0x2                   	// #2
   39328:	csel	w2, w8, w20, eq  // eq = none
   3932c:	mov	x0, sp
   39330:	mov	x1, x19
   39334:	bl	c690 <mpfr_set4@plt>
   39338:	ldr	x8, [sp, #16]
   3933c:	mov	x0, sp
   39340:	cmp	x8, x22
   39344:	cset	w19, eq  // eq = none
   39348:	bl	c0b0 <mpfr_clear@plt>
   3934c:	str	w24, [x23, x21]
   39350:	b	39390 <mpfr_fits_ushort_p@@Base+0xe4>
   39354:	cmp	x22, #0x0
   39358:	b.le	39364 <mpfr_fits_ushort_p@@Base+0xb8>
   3935c:	mov	w19, wzr
   39360:	b	39390 <mpfr_fits_ushort_p@@Base+0xe4>
   39364:	cbz	w20, 39378 <mpfr_fits_ushort_p@@Base+0xcc>
   39368:	sub	w8, w20, #0x1
   3936c:	cmp	w8, #0x2
   39370:	cset	w19, cc  // cc = lo, ul, last
   39374:	b	39390 <mpfr_fits_ushort_p@@Base+0xe4>
   39378:	tbnz	x22, #63, 3938c <mpfr_fits_ushort_p@@Base+0xe0>
   3937c:	mov	x0, x19
   39380:	bl	bf50 <mpfr_powerof2_raw@plt>
   39384:	mov	w19, w0
   39388:	b	39390 <mpfr_fits_ushort_p@@Base+0xe4>
   3938c:	mov	w19, #0x1                   	// #1
   39390:	mov	w0, w19
   39394:	ldp	x20, x19, [sp, #80]
   39398:	ldp	x22, x21, [sp, #64]
   3939c:	ldp	x24, x23, [sp, #48]
   393a0:	ldp	x29, x30, [sp, #32]
   393a4:	add	sp, sp, #0x60
   393a8:	ret
   393ac:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   393b0:	cmp	x22, x8
   393b4:	cset	w19, eq  // eq = none
   393b8:	b	39390 <mpfr_fits_ushort_p@@Base+0xe4>

00000000000393bc <mpfr_fits_uint_p@@Base>:
   393bc:	sub	sp, sp, #0x60
   393c0:	stp	x29, x30, [sp, #32]
   393c4:	stp	x24, x23, [sp, #48]
   393c8:	stp	x22, x21, [sp, #64]
   393cc:	stp	x20, x19, [sp, #80]
   393d0:	ldr	x22, [x0, #16]
   393d4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   393d8:	add	x29, sp, #0x20
   393dc:	cmp	x22, x8
   393e0:	b.le	394bc <mpfr_fits_uint_p@@Base+0x100>
   393e4:	ldr	w8, [x0, #8]
   393e8:	mov	x19, x0
   393ec:	mov	w20, w1
   393f0:	tbnz	w8, #31, 39464 <mpfr_fits_uint_p@@Base+0xa8>
   393f4:	cmp	x22, #0x1f
   393f8:	b.le	3949c <mpfr_fits_uint_p@@Base+0xe0>
   393fc:	cmp	x22, #0x20
   39400:	b.ne	3946c <mpfr_fits_uint_p@@Base+0xb0>  // b.any
   39404:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39408:	ldr	x1, [x0, #2640]
   3940c:	add	x0, x0, #0xa50
   39410:	blr	x1
   39414:	mrs	x23, tpidr_el0
   39418:	ldr	w24, [x23, x0]
   3941c:	mov	x21, x0
   39420:	mov	x0, sp
   39424:	mov	w1, #0x20                  	// #32
   39428:	bl	ca60 <mpfr_init2@plt>
   3942c:	ldr	w3, [x19, #8]
   39430:	cmp	w20, #0x5
   39434:	mov	w8, #0x2                   	// #2
   39438:	csel	w2, w8, w20, eq  // eq = none
   3943c:	mov	x0, sp
   39440:	mov	x1, x19
   39444:	bl	c690 <mpfr_set4@plt>
   39448:	ldr	x8, [sp, #16]
   3944c:	mov	x0, sp
   39450:	cmp	x8, x22
   39454:	cset	w19, eq  // eq = none
   39458:	bl	c0b0 <mpfr_clear@plt>
   3945c:	str	w24, [x23, x21]
   39460:	b	394a0 <mpfr_fits_uint_p@@Base+0xe4>
   39464:	cmp	x22, #0x0
   39468:	b.le	39474 <mpfr_fits_uint_p@@Base+0xb8>
   3946c:	mov	w19, wzr
   39470:	b	394a0 <mpfr_fits_uint_p@@Base+0xe4>
   39474:	cbz	w20, 39488 <mpfr_fits_uint_p@@Base+0xcc>
   39478:	sub	w8, w20, #0x1
   3947c:	cmp	w8, #0x2
   39480:	cset	w19, cc  // cc = lo, ul, last
   39484:	b	394a0 <mpfr_fits_uint_p@@Base+0xe4>
   39488:	tbnz	x22, #63, 3949c <mpfr_fits_uint_p@@Base+0xe0>
   3948c:	mov	x0, x19
   39490:	bl	bf50 <mpfr_powerof2_raw@plt>
   39494:	mov	w19, w0
   39498:	b	394a0 <mpfr_fits_uint_p@@Base+0xe4>
   3949c:	mov	w19, #0x1                   	// #1
   394a0:	mov	w0, w19
   394a4:	ldp	x20, x19, [sp, #80]
   394a8:	ldp	x22, x21, [sp, #64]
   394ac:	ldp	x24, x23, [sp, #48]
   394b0:	ldp	x29, x30, [sp, #32]
   394b4:	add	sp, sp, #0x60
   394b8:	ret
   394bc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   394c0:	cmp	x22, x8
   394c4:	cset	w19, eq  // eq = none
   394c8:	b	394a0 <mpfr_fits_uint_p@@Base+0xe4>

00000000000394cc <mpfr_fits_ulong_p@@Base>:
   394cc:	sub	sp, sp, #0x60
   394d0:	stp	x29, x30, [sp, #32]
   394d4:	stp	x24, x23, [sp, #48]
   394d8:	stp	x22, x21, [sp, #64]
   394dc:	stp	x20, x19, [sp, #80]
   394e0:	ldr	x22, [x0, #16]
   394e4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   394e8:	add	x29, sp, #0x20
   394ec:	cmp	x22, x8
   394f0:	b.le	395cc <mpfr_fits_ulong_p@@Base+0x100>
   394f4:	ldr	w8, [x0, #8]
   394f8:	mov	x19, x0
   394fc:	mov	w20, w1
   39500:	tbnz	w8, #31, 39574 <mpfr_fits_ulong_p@@Base+0xa8>
   39504:	cmp	x22, #0x3f
   39508:	b.le	395ac <mpfr_fits_ulong_p@@Base+0xe0>
   3950c:	cmp	x22, #0x40
   39510:	b.ne	3957c <mpfr_fits_ulong_p@@Base+0xb0>  // b.any
   39514:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39518:	ldr	x1, [x0, #2640]
   3951c:	add	x0, x0, #0xa50
   39520:	blr	x1
   39524:	mrs	x23, tpidr_el0
   39528:	ldr	w24, [x23, x0]
   3952c:	mov	x21, x0
   39530:	mov	x0, sp
   39534:	mov	w1, #0x40                  	// #64
   39538:	bl	ca60 <mpfr_init2@plt>
   3953c:	ldr	w3, [x19, #8]
   39540:	cmp	w20, #0x5
   39544:	mov	w8, #0x2                   	// #2
   39548:	csel	w2, w8, w20, eq  // eq = none
   3954c:	mov	x0, sp
   39550:	mov	x1, x19
   39554:	bl	c690 <mpfr_set4@plt>
   39558:	ldr	x8, [sp, #16]
   3955c:	mov	x0, sp
   39560:	cmp	x8, x22
   39564:	cset	w19, eq  // eq = none
   39568:	bl	c0b0 <mpfr_clear@plt>
   3956c:	str	w24, [x23, x21]
   39570:	b	395b0 <mpfr_fits_ulong_p@@Base+0xe4>
   39574:	cmp	x22, #0x0
   39578:	b.le	39584 <mpfr_fits_ulong_p@@Base+0xb8>
   3957c:	mov	w19, wzr
   39580:	b	395b0 <mpfr_fits_ulong_p@@Base+0xe4>
   39584:	cbz	w20, 39598 <mpfr_fits_ulong_p@@Base+0xcc>
   39588:	sub	w8, w20, #0x1
   3958c:	cmp	w8, #0x2
   39590:	cset	w19, cc  // cc = lo, ul, last
   39594:	b	395b0 <mpfr_fits_ulong_p@@Base+0xe4>
   39598:	tbnz	x22, #63, 395ac <mpfr_fits_ulong_p@@Base+0xe0>
   3959c:	mov	x0, x19
   395a0:	bl	bf50 <mpfr_powerof2_raw@plt>
   395a4:	mov	w19, w0
   395a8:	b	395b0 <mpfr_fits_ulong_p@@Base+0xe4>
   395ac:	mov	w19, #0x1                   	// #1
   395b0:	mov	w0, w19
   395b4:	ldp	x20, x19, [sp, #80]
   395b8:	ldp	x22, x21, [sp, #64]
   395bc:	ldp	x24, x23, [sp, #48]
   395c0:	ldp	x29, x30, [sp, #32]
   395c4:	add	sp, sp, #0x60
   395c8:	ret
   395cc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   395d0:	cmp	x22, x8
   395d4:	cset	w19, eq  // eq = none
   395d8:	b	395b0 <mpfr_fits_ulong_p@@Base+0xe4>

00000000000395dc <mpfr_fits_uintmax_p@@Base>:
   395dc:	sub	sp, sp, #0x60
   395e0:	stp	x29, x30, [sp, #32]
   395e4:	stp	x24, x23, [sp, #48]
   395e8:	stp	x22, x21, [sp, #64]
   395ec:	stp	x20, x19, [sp, #80]
   395f0:	ldr	x22, [x0, #16]
   395f4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   395f8:	add	x29, sp, #0x20
   395fc:	cmp	x22, x8
   39600:	b.le	396dc <mpfr_fits_uintmax_p@@Base+0x100>
   39604:	ldr	w8, [x0, #8]
   39608:	mov	x19, x0
   3960c:	mov	w20, w1
   39610:	tbnz	w8, #31, 39684 <mpfr_fits_uintmax_p@@Base+0xa8>
   39614:	cmp	x22, #0x3f
   39618:	b.le	396bc <mpfr_fits_uintmax_p@@Base+0xe0>
   3961c:	cmp	x22, #0x40
   39620:	b.ne	3968c <mpfr_fits_uintmax_p@@Base+0xb0>  // b.any
   39624:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39628:	ldr	x1, [x0, #2640]
   3962c:	add	x0, x0, #0xa50
   39630:	blr	x1
   39634:	mrs	x23, tpidr_el0
   39638:	ldr	w24, [x23, x0]
   3963c:	mov	x21, x0
   39640:	mov	x0, sp
   39644:	mov	w1, #0x40                  	// #64
   39648:	bl	ca60 <mpfr_init2@plt>
   3964c:	ldr	w3, [x19, #8]
   39650:	cmp	w20, #0x5
   39654:	mov	w8, #0x2                   	// #2
   39658:	csel	w2, w8, w20, eq  // eq = none
   3965c:	mov	x0, sp
   39660:	mov	x1, x19
   39664:	bl	c690 <mpfr_set4@plt>
   39668:	ldr	x8, [sp, #16]
   3966c:	mov	x0, sp
   39670:	cmp	x8, x22
   39674:	cset	w19, eq  // eq = none
   39678:	bl	c0b0 <mpfr_clear@plt>
   3967c:	str	w24, [x23, x21]
   39680:	b	396c0 <mpfr_fits_uintmax_p@@Base+0xe4>
   39684:	cmp	x22, #0x0
   39688:	b.le	39694 <mpfr_fits_uintmax_p@@Base+0xb8>
   3968c:	mov	w19, wzr
   39690:	b	396c0 <mpfr_fits_uintmax_p@@Base+0xe4>
   39694:	cbz	w20, 396a8 <mpfr_fits_uintmax_p@@Base+0xcc>
   39698:	sub	w8, w20, #0x1
   3969c:	cmp	w8, #0x2
   396a0:	cset	w19, cc  // cc = lo, ul, last
   396a4:	b	396c0 <mpfr_fits_uintmax_p@@Base+0xe4>
   396a8:	tbnz	x22, #63, 396bc <mpfr_fits_uintmax_p@@Base+0xe0>
   396ac:	mov	x0, x19
   396b0:	bl	bf50 <mpfr_powerof2_raw@plt>
   396b4:	mov	w19, w0
   396b8:	b	396c0 <mpfr_fits_uintmax_p@@Base+0xe4>
   396bc:	mov	w19, #0x1                   	// #1
   396c0:	mov	w0, w19
   396c4:	ldp	x20, x19, [sp, #80]
   396c8:	ldp	x22, x21, [sp, #64]
   396cc:	ldp	x24, x23, [sp, #48]
   396d0:	ldp	x29, x30, [sp, #32]
   396d4:	add	sp, sp, #0x60
   396d8:	ret
   396dc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   396e0:	cmp	x22, x8
   396e4:	cset	w19, eq  // eq = none
   396e8:	b	396c0 <mpfr_fits_uintmax_p@@Base+0xe4>

00000000000396ec <mpfr_fits_intmax_p@@Base>:
   396ec:	sub	sp, sp, #0x90
   396f0:	stp	x29, x30, [sp, #64]
   396f4:	stp	x24, x23, [sp, #96]
   396f8:	stp	x22, x21, [sp, #112]
   396fc:	stp	x20, x19, [sp, #128]
   39700:	ldr	x24, [x0, #16]
   39704:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   39708:	str	x25, [sp, #80]
   3970c:	add	x29, sp, #0x40
   39710:	cmp	x24, x8
   39714:	b.le	39830 <mpfr_fits_intmax_p@@Base+0x144>
   39718:	cmp	x24, #0x1
   3971c:	b.lt	397a8 <mpfr_fits_intmax_p@@Base+0xbc>  // b.tstop
   39720:	ldr	w25, [x0, #8]
   39724:	mov	w8, #0x3f                  	// #63
   39728:	mov	x19, x0
   3972c:	cmp	w25, #0x0
   39730:	cinc	w8, w8, lt  // lt = tstop
   39734:	sub	w9, w8, #0x1
   39738:	cmp	x24, w9, sxtw
   3973c:	b.le	397a8 <mpfr_fits_intmax_p@@Base+0xbc>
   39740:	add	w9, w8, #0x1
   39744:	cmp	x24, x9
   39748:	b.ge	397cc <mpfr_fits_intmax_p@@Base+0xe0>  // b.tcont
   3974c:	mov	w20, w1
   39750:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39754:	ldr	x1, [x0, #2640]
   39758:	add	x0, x0, #0xa50
   3975c:	blr	x1
   39760:	mrs	x22, tpidr_el0
   39764:	ldr	w23, [x22, x0]
   39768:	mov	w21, w8
   3976c:	add	x0, sp, #0x20
   39770:	mov	x1, x21
   39774:	bl	ca60 <mpfr_init2@plt>
   39778:	ldr	w3, [x19, #8]
   3977c:	cmp	w20, #0x5
   39780:	mov	w8, #0x4                   	// #4
   39784:	csel	w2, w8, w20, eq  // eq = none
   39788:	add	x0, sp, #0x20
   3978c:	mov	x1, x19
   39790:	bl	c690 <mpfr_set4@plt>
   39794:	tbnz	w25, #31, 397d4 <mpfr_fits_intmax_p@@Base+0xe8>
   39798:	ldr	x8, [sp, #48]
   3979c:	cmp	x8, x24
   397a0:	cset	w19, eq  // eq = none
   397a4:	b	39810 <mpfr_fits_intmax_p@@Base+0x124>
   397a8:	mov	w19, #0x1                   	// #1
   397ac:	mov	w0, w19
   397b0:	ldp	x20, x19, [sp, #128]
   397b4:	ldp	x22, x21, [sp, #112]
   397b8:	ldp	x24, x23, [sp, #96]
   397bc:	ldr	x25, [sp, #80]
   397c0:	ldp	x29, x30, [sp, #64]
   397c4:	add	sp, sp, #0x90
   397c8:	ret
   397cc:	mov	w19, wzr
   397d0:	b	397ac <mpfr_fits_intmax_p@@Base+0xc0>
   397d4:	mov	x0, sp
   397d8:	mov	x1, x21
   397dc:	bl	ca60 <mpfr_init2@plt>
   397e0:	mov	x0, sp
   397e4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   397e8:	mov	w2, wzr
   397ec:	bl	c0c0 <__gmpfr_set_sj@plt>
   397f0:	add	x0, sp, #0x20
   397f4:	mov	x1, sp
   397f8:	mov	w2, #0x1                   	// #1
   397fc:	bl	c980 <mpfr_cmp3@plt>
   39800:	mvn	w8, w0
   39804:	mov	x0, sp
   39808:	lsr	w19, w8, #31
   3980c:	bl	c0b0 <mpfr_clear@plt>
   39810:	add	x0, sp, #0x20
   39814:	bl	c0b0 <mpfr_clear@plt>
   39818:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3981c:	ldr	x1, [x0, #2640]
   39820:	add	x0, x0, #0xa50
   39824:	blr	x1
   39828:	str	w23, [x22, x0]
   3982c:	b	397ac <mpfr_fits_intmax_p@@Base+0xc0>
   39830:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   39834:	cmp	x24, x8
   39838:	cset	w19, eq  // eq = none
   3983c:	b	397ac <mpfr_fits_intmax_p@@Base+0xc0>

0000000000039840 <mpfr_get_si@@Base>:
   39840:	sub	sp, sp, #0x70
   39844:	stp	x29, x30, [sp, #32]
   39848:	stp	x26, x25, [sp, #48]
   3984c:	stp	x24, x23, [sp, #64]
   39850:	stp	x22, x21, [sp, #80]
   39854:	stp	x20, x19, [sp, #96]
   39858:	add	x29, sp, #0x20
   3985c:	mov	w20, w1
   39860:	mov	x19, x0
   39864:	bl	c780 <mpfr_fits_slong_p@plt>
   39868:	cbz	w0, 399b0 <mpfr_get_si@@Base+0x170>
   3986c:	ldr	x8, [x19, #16]
   39870:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   39874:	cmp	x8, x25
   39878:	b.ne	39884 <mpfr_get_si@@Base+0x44>  // b.any
   3987c:	mov	x19, xzr
   39880:	b	39990 <mpfr_get_si@@Base+0x150>
   39884:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39888:	ldr	x1, [x0, #2640]
   3988c:	add	x0, x0, #0xa50
   39890:	blr	x1
   39894:	mrs	x22, tpidr_el0
   39898:	ldr	w26, [x22, x0]
   3989c:	mov	x21, x0
   398a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   398a4:	ldr	x1, [x0, #2576]
   398a8:	add	x0, x0, #0xa10
   398ac:	blr	x1
   398b0:	ldr	x23, [x22, x0]
   398b4:	mov	x8, x0
   398b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   398bc:	ldr	x1, [x0, #2608]
   398c0:	add	x0, x0, #0xa30
   398c4:	blr	x1
   398c8:	ldr	x24, [x22, x0]
   398cc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   398d0:	str	x9, [x22, x8]
   398d4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   398d8:	str	x8, [x22, x0]
   398dc:	mov	x0, sp
   398e0:	mov	w1, #0x3f                  	// #63
   398e4:	bl	ca60 <mpfr_init2@plt>
   398e8:	mov	x0, sp
   398ec:	mov	x1, x19
   398f0:	mov	w2, w20
   398f4:	bl	c300 <mpfr_rint@plt>
   398f8:	ldr	x8, [sp, #16]
   398fc:	ldr	w9, [x22, x21]
   39900:	cmp	x8, x25
   39904:	orr	w20, w9, w26
   39908:	b.eq	399f8 <mpfr_get_si@@Base+0x1b8>  // b.none
   3990c:	ldr	x9, [sp]
   39910:	ldr	x10, [sp, #24]
   39914:	neg	x8, x8
   39918:	sub	x11, x9, #0x1
   3991c:	add	x9, x9, #0x3e
   39920:	cmp	x11, #0x0
   39924:	csel	x9, x9, x11, lt  // lt = tstop
   39928:	asr	x9, x9, #6
   3992c:	ldr	x9, [x10, x9, lsl #3]
   39930:	ldr	w10, [x19, #8]
   39934:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   39938:	lsr	x8, x9, x8
   3993c:	cmp	x8, #0x0
   39940:	csneg	x9, x11, x8, lt  // lt = tstop
   39944:	cmp	w10, #0x0
   39948:	csel	x19, x8, x9, gt
   3994c:	mov	x0, sp
   39950:	bl	c0b0 <mpfr_clear@plt>
   39954:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39958:	ldr	x1, [x0, #2640]
   3995c:	add	x0, x0, #0xa50
   39960:	blr	x1
   39964:	str	w20, [x22, x0]
   39968:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3996c:	ldr	x1, [x0, #2576]
   39970:	add	x0, x0, #0xa10
   39974:	blr	x1
   39978:	str	x23, [x22, x0]
   3997c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39980:	ldr	x1, [x0, #2608]
   39984:	add	x0, x0, #0xa30
   39988:	blr	x1
   3998c:	str	x24, [x22, x0]
   39990:	mov	x0, x19
   39994:	ldp	x20, x19, [sp, #96]
   39998:	ldp	x22, x21, [sp, #80]
   3999c:	ldp	x24, x23, [sp, #64]
   399a0:	ldp	x26, x25, [sp, #48]
   399a4:	ldp	x29, x30, [sp, #32]
   399a8:	add	sp, sp, #0x70
   399ac:	ret
   399b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   399b4:	ldr	x1, [x0, #2640]
   399b8:	add	x0, x0, #0xa50
   399bc:	blr	x1
   399c0:	mrs	x8, tpidr_el0
   399c4:	ldr	w9, [x8, x0]
   399c8:	orr	w9, w9, #0x10
   399cc:	str	w9, [x8, x0]
   399d0:	ldr	x8, [x19, #16]
   399d4:	mov	x9, #0x2                   	// #2
   399d8:	movk	x9, #0x8000, lsl #48
   399dc:	cmp	x8, x9
   399e0:	b.eq	3987c <mpfr_get_si@@Base+0x3c>  // b.none
   399e4:	ldr	w8, [x19, #8]
   399e8:	cmp	w8, #0x0
   399ec:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   399f0:	cinv	x19, x8, ge  // ge = tcont
   399f4:	b	39990 <mpfr_get_si@@Base+0x150>
   399f8:	mov	x19, xzr
   399fc:	b	3994c <mpfr_get_si@@Base+0x10c>

0000000000039a00 <mpfr_get_ui@@Base>:
   39a00:	sub	sp, sp, #0x70
   39a04:	stp	x29, x30, [sp, #32]
   39a08:	stp	x26, x25, [sp, #48]
   39a0c:	stp	x24, x23, [sp, #64]
   39a10:	stp	x22, x21, [sp, #80]
   39a14:	stp	x20, x19, [sp, #96]
   39a18:	add	x29, sp, #0x20
   39a1c:	mov	w20, w1
   39a20:	mov	x19, x0
   39a24:	bl	bea0 <mpfr_fits_ulong_p@plt>
   39a28:	cbz	w0, 39b60 <mpfr_get_ui@@Base+0x160>
   39a2c:	ldr	x8, [x19, #16]
   39a30:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   39a34:	cmp	x8, x25
   39a38:	b.ne	39a44 <mpfr_get_ui@@Base+0x44>  // b.any
   39a3c:	mov	x19, xzr
   39a40:	b	39b40 <mpfr_get_ui@@Base+0x140>
   39a44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39a48:	ldr	x1, [x0, #2640]
   39a4c:	add	x0, x0, #0xa50
   39a50:	blr	x1
   39a54:	mrs	x22, tpidr_el0
   39a58:	ldr	w26, [x22, x0]
   39a5c:	mov	x21, x0
   39a60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39a64:	ldr	x1, [x0, #2576]
   39a68:	add	x0, x0, #0xa10
   39a6c:	blr	x1
   39a70:	ldr	x23, [x22, x0]
   39a74:	mov	x8, x0
   39a78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39a7c:	ldr	x1, [x0, #2608]
   39a80:	add	x0, x0, #0xa30
   39a84:	blr	x1
   39a88:	ldr	x24, [x22, x0]
   39a8c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   39a90:	str	x9, [x22, x8]
   39a94:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   39a98:	str	x8, [x22, x0]
   39a9c:	mov	x0, sp
   39aa0:	mov	w1, #0x40                  	// #64
   39aa4:	bl	ca60 <mpfr_init2@plt>
   39aa8:	mov	x0, sp
   39aac:	mov	x1, x19
   39ab0:	mov	w2, w20
   39ab4:	bl	c300 <mpfr_rint@plt>
   39ab8:	ldr	x8, [sp, #16]
   39abc:	ldr	w9, [x22, x21]
   39ac0:	cmp	x8, x25
   39ac4:	orr	w20, w9, w26
   39ac8:	b.ne	39ad4 <mpfr_get_ui@@Base+0xd4>  // b.any
   39acc:	mov	x19, xzr
   39ad0:	b	39afc <mpfr_get_ui@@Base+0xfc>
   39ad4:	ldr	x9, [sp]
   39ad8:	ldr	x10, [sp, #24]
   39adc:	neg	x8, x8
   39ae0:	sub	x11, x9, #0x1
   39ae4:	add	x9, x9, #0x3e
   39ae8:	cmp	x11, #0x0
   39aec:	csel	x9, x9, x11, lt  // lt = tstop
   39af0:	asr	x9, x9, #6
   39af4:	ldr	x9, [x10, x9, lsl #3]
   39af8:	lsr	x19, x9, x8
   39afc:	mov	x0, sp
   39b00:	bl	c0b0 <mpfr_clear@plt>
   39b04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39b08:	ldr	x1, [x0, #2640]
   39b0c:	add	x0, x0, #0xa50
   39b10:	blr	x1
   39b14:	str	w20, [x22, x0]
   39b18:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39b1c:	ldr	x1, [x0, #2576]
   39b20:	add	x0, x0, #0xa10
   39b24:	blr	x1
   39b28:	str	x23, [x22, x0]
   39b2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39b30:	ldr	x1, [x0, #2608]
   39b34:	add	x0, x0, #0xa30
   39b38:	blr	x1
   39b3c:	str	x24, [x22, x0]
   39b40:	mov	x0, x19
   39b44:	ldp	x20, x19, [sp, #96]
   39b48:	ldp	x22, x21, [sp, #80]
   39b4c:	ldp	x24, x23, [sp, #64]
   39b50:	ldp	x26, x25, [sp, #48]
   39b54:	ldp	x29, x30, [sp, #32]
   39b58:	add	sp, sp, #0x70
   39b5c:	ret
   39b60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39b64:	ldr	x1, [x0, #2640]
   39b68:	add	x0, x0, #0xa50
   39b6c:	blr	x1
   39b70:	mrs	x8, tpidr_el0
   39b74:	ldr	w9, [x8, x0]
   39b78:	orr	w9, w9, #0x10
   39b7c:	str	w9, [x8, x0]
   39b80:	ldr	x8, [x19, #16]
   39b84:	mov	x9, #0x2                   	// #2
   39b88:	movk	x9, #0x8000, lsl #48
   39b8c:	cmp	x8, x9
   39b90:	b.eq	39a3c <mpfr_get_ui@@Base+0x3c>  // b.none
   39b94:	ldr	w8, [x19, #8]
   39b98:	mov	w9, #0xffffffff            	// #-1
   39b9c:	eor	w8, w9, w8, asr #31
   39ba0:	sxtw	x19, w8
   39ba4:	b	39b40 <mpfr_get_ui@@Base+0x140>

0000000000039ba8 <mpfr_zeta@@Base>:
   39ba8:	stp	x29, x30, [sp, #-96]!
   39bac:	stp	x28, x27, [sp, #16]
   39bb0:	stp	x26, x25, [sp, #32]
   39bb4:	stp	x24, x23, [sp, #48]
   39bb8:	stp	x22, x21, [sp, #64]
   39bbc:	stp	x20, x19, [sp, #80]
   39bc0:	mov	x29, sp
   39bc4:	sub	sp, sp, #0x1a0
   39bc8:	ldr	x8, [x1, #16]
   39bcc:	mov	x25, #0xfffffffffffffeff    	// #-257
   39bd0:	movk	x25, #0x7fff, lsl #48
   39bd4:	add	x9, x25, #0x105
   39bd8:	mov	w20, w2
   39bdc:	mov	x21, x1
   39be0:	cmp	x8, x9
   39be4:	mov	x19, x0
   39be8:	b.lt	3a618 <mpfr_zeta@@Base+0xa70>  // b.tstop
   39bec:	ldr	x9, [x19]
   39bf0:	ldr	w26, [x21, #8]
   39bf4:	add	x10, x8, #0x1
   39bf8:	neg	x9, x9
   39bfc:	cmp	x10, x9
   39c00:	b.ge	39c98 <mpfr_zeta@@Base+0xf0>  // b.tcont
   39c04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39c08:	ldr	x1, [x0, #2640]
   39c0c:	add	x0, x0, #0xa50
   39c10:	blr	x1
   39c14:	mrs	x22, tpidr_el0
   39c18:	ldr	w23, [x22, x0]
   39c1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39c20:	ldr	x1, [x0, #2576]
   39c24:	add	x0, x0, #0xa10
   39c28:	blr	x1
   39c2c:	ldr	x24, [x22, x0]
   39c30:	mov	x8, x0
   39c34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39c38:	ldr	x1, [x0, #2608]
   39c3c:	add	x0, x0, #0xa30
   39c40:	blr	x1
   39c44:	ldr	x25, [x22, x0]
   39c48:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   39c4c:	str	x9, [x22, x8]
   39c50:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   39c54:	str	x8, [x22, x0]
   39c58:	mov	x1, #0xffffffffffffffff    	// #-1
   39c5c:	mov	x2, #0xffffffffffffffff    	// #-1
   39c60:	mov	x0, x19
   39c64:	mov	w3, w20
   39c68:	bl	bae0 <mpfr_set_si_2exp@plt>
   39c6c:	cmp	w20, #0x4
   39c70:	mov	w8, #0x3                   	// #3
   39c74:	csel	w20, w8, w20, eq  // eq = none
   39c78:	sub	w8, w20, #0x1
   39c7c:	cmp	w8, #0x1
   39c80:	b.hi	39d38 <mpfr_zeta@@Base+0x190>  // b.pmore
   39c84:	tbz	w26, #31, 39d38 <mpfr_zeta@@Base+0x190>
   39c88:	mov	x0, x19
   39c8c:	bl	c160 <mpfr_nextabove@plt>
   39c90:	mov	w21, #0x1                   	// #1
   39c94:	b	39dd4 <mpfr_zeta@@Base+0x22c>
   39c98:	tbnz	w26, #31, 39d58 <mpfr_zeta@@Base+0x1b0>
   39c9c:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   39ca0:	ldr	x1, [x1, #3944]
   39ca4:	mov	w2, #0x1                   	// #1
   39ca8:	mov	x0, x21
   39cac:	mov	w22, #0x1                   	// #1
   39cb0:	bl	c980 <mpfr_cmp3@plt>
   39cb4:	mrs	x24, tpidr_el0
   39cb8:	cbz	w0, 39d8c <mpfr_zeta@@Base+0x1e4>
   39cbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39cc0:	ldr	x1, [x0, #2640]
   39cc4:	add	x0, x0, #0xa50
   39cc8:	blr	x1
   39ccc:	ldr	w27, [x24, x0]
   39cd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39cd4:	ldr	x1, [x0, #2576]
   39cd8:	add	x0, x0, #0xa10
   39cdc:	blr	x1
   39ce0:	ldr	x22, [x24, x0]
   39ce4:	mov	x8, x0
   39ce8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39cec:	ldr	x1, [x0, #2608]
   39cf0:	add	x0, x0, #0xa30
   39cf4:	blr	x1
   39cf8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   39cfc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   39d00:	ldr	x23, [x24, x0]
   39d04:	str	x9, [x24, x8]
   39d08:	str	x10, [x24, x0]
   39d0c:	ldr	w9, [x21, #8]
   39d10:	ldr	x8, [x21, #16]
   39d14:	cmp	w9, #0x1
   39d18:	b.lt	39e40 <mpfr_zeta@@Base+0x298>  // b.tstop
   39d1c:	tbnz	x8, #63, 39e40 <mpfr_zeta@@Base+0x298>
   39d20:	mov	x0, x19
   39d24:	mov	x1, x21
   39d28:	mov	w2, w20
   39d2c:	bl	3a6bc <mpfr_zeta@@Base+0xb14>
   39d30:	mov	w21, w0
   39d34:	b	3a588 <mpfr_zeta@@Base+0x9e0>
   39d38:	cmp	w20, #0x3
   39d3c:	b.ne	39db8 <mpfr_zeta@@Base+0x210>  // b.any
   39d40:	cmp	w26, #0x1
   39d44:	b.lt	39db8 <mpfr_zeta@@Base+0x210>  // b.tstop
   39d48:	mov	x0, x19
   39d4c:	bl	be20 <mpfr_nextbelow@plt>
   39d50:	mov	w21, #0xffffffff            	// #-1
   39d54:	b	39dd4 <mpfr_zeta@@Base+0x22c>
   39d58:	ldp	q1, q0, [x21]
   39d5c:	sub	x8, x8, #0x1
   39d60:	add	x0, sp, #0x80
   39d64:	stp	q1, q0, [sp, #128]
   39d68:	str	x8, [sp, #144]
   39d6c:	bl	c1a0 <mpfr_integer_p@plt>
   39d70:	cbz	w0, 39c9c <mpfr_zeta@@Base+0xf4>
   39d74:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   39d78:	mov	w9, #0x1                   	// #1
   39d7c:	mov	w21, wzr
   39d80:	str	x8, [x19, #16]
   39d84:	str	w9, [x19, #8]
   39d88:	b	3a5f4 <mpfr_zeta@@Base+0xa4c>
   39d8c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   39d90:	str	x8, [x19, #16]
   39d94:	str	w22, [x19, #8]
   39d98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39d9c:	ldr	x1, [x0, #2640]
   39da0:	add	x0, x0, #0xa50
   39da4:	blr	x1
   39da8:	ldr	w8, [x24, x0]
   39dac:	mov	w21, wzr
   39db0:	orr	w8, w8, #0x20
   39db4:	b	3a5f0 <mpfr_zeta@@Base+0xa48>
   39db8:	cmp	w20, #0x2
   39dbc:	mov	w21, #0x1                   	// #1
   39dc0:	b.eq	39dd4 <mpfr_zeta@@Base+0x22c>  // b.none
   39dc4:	cmp	w26, #0x0
   39dc8:	cneg	w8, w21, le
   39dcc:	cmp	w20, #0x3
   39dd0:	csinv	w21, w8, wzr, ne  // ne = any
   39dd4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39dd8:	ldr	x1, [x0, #2640]
   39ddc:	add	x0, x0, #0xa50
   39de0:	blr	x1
   39de4:	str	w23, [x22, x0]
   39de8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39dec:	ldr	x1, [x0, #2576]
   39df0:	add	x0, x0, #0xa10
   39df4:	blr	x1
   39df8:	str	x24, [x22, x0]
   39dfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39e00:	ldr	x1, [x0, #2608]
   39e04:	add	x0, x0, #0xa30
   39e08:	blr	x1
   39e0c:	str	x25, [x22, x0]
   39e10:	ldr	x8, [x19, #16]
   39e14:	cmp	x8, x25
   39e18:	b.gt	3a64c <mpfr_zeta@@Base+0xaa4>
   39e1c:	cmp	x8, x24
   39e20:	b.lt	3a64c <mpfr_zeta@@Base+0xaa4>  // b.tstop
   39e24:	orr	w8, w23, #0x8
   39e28:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   39e2c:	ldr	x1, [x0, #2640]
   39e30:	add	x0, x0, #0xa50
   39e34:	blr	x1
   39e38:	str	w8, [x22, x0]
   39e3c:	b	3a5f4 <mpfr_zeta@@Base+0xa4c>
   39e40:	stp	x23, x22, [sp, #24]
   39e44:	ldr	x22, [x19]
   39e48:	ldr	x23, [x21]
   39e4c:	cmp	x8, #0x0
   39e50:	add	x1, sp, #0x80
   39e54:	sub	x2, x29, #0x28
   39e58:	sub	x3, x29, #0x48
   39e5c:	mov	w0, #0x40                  	// #64
   39e60:	mov	x4, xzr
   39e64:	csneg	x26, xzr, x8, gt
   39e68:	bl	cc30 <mpfr_inits2@plt>
   39e6c:	mov	w1, #0x1                   	// #1
   39e70:	mov	x0, x21
   39e74:	mov	x2, xzr
   39e78:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   39e7c:	tbnz	w0, #31, 39e98 <mpfr_zeta@@Base+0x2f0>
   39e80:	add	x0, sp, #0x80
   39e84:	mov	w2, #0x1                   	// #1
   39e88:	mov	w3, #0x2                   	// #2
   39e8c:	mov	x1, x21
   39e90:	bl	c520 <mpfr_sub_ui@plt>
   39e94:	b	39eac <mpfr_zeta@@Base+0x304>
   39e98:	add	x0, sp, #0x80
   39e9c:	mov	w1, #0x1                   	// #1
   39ea0:	mov	w3, #0x2                   	// #2
   39ea4:	mov	x2, x21
   39ea8:	bl	ca30 <mpfr_ui_sub@plt>
   39eac:	mov	x8, #0xfffffffffffffff2    	// #-14
   39eb0:	sub	x2, x8, x22
   39eb4:	sub	x0, x29, #0x28
   39eb8:	mov	w1, #0x1                   	// #1
   39ebc:	mov	w3, #0x2                   	// #2
   39ec0:	add	x26, x23, x26
   39ec4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   39ec8:	ldr	x8, [sp, #144]
   39ecc:	add	x23, x22, #0xe
   39ed0:	add	x0, sp, #0x80
   39ed4:	cmp	x8, x23
   39ed8:	b.ge	39ef0 <mpfr_zeta@@Base+0x348>  // b.tcont
   39edc:	mov	w1, #0x1                   	// #1
   39ee0:	mov	w3, #0x2                   	// #2
   39ee4:	mov	x2, x23
   39ee8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   39eec:	b	39f00 <mpfr_zeta@@Base+0x358>
   39ef0:	add	x1, sp, #0x80
   39ef4:	mov	w2, #0x1                   	// #1
   39ef8:	mov	w3, #0x2                   	// #2
   39efc:	bl	c2c0 <mpfr_mul_2ui@plt>
   39f00:	sub	x0, x29, #0x28
   39f04:	sub	x1, x29, #0x28
   39f08:	mov	w2, #0x1                   	// #1
   39f0c:	mov	w3, #0x2                   	// #2
   39f10:	add	x26, x26, #0x2
   39f14:	bl	c270 <mpfr_add_ui@plt>
   39f18:	add	x0, sp, #0x80
   39f1c:	add	x1, sp, #0x80
   39f20:	sub	x2, x29, #0x28
   39f24:	mov	w3, #0x2                   	// #2
   39f28:	bl	bda0 <mpfr_mul@plt>
   39f2c:	sub	x0, x29, #0x48
   39f30:	add	x1, sp, #0x80
   39f34:	mov	w2, #0x1                   	// #1
   39f38:	mov	w3, #0x2                   	// #2
   39f3c:	bl	c270 <mpfr_add_ui@plt>
   39f40:	ldur	x8, [x29, #-56]
   39f44:	cmp	x8, #0x3
   39f48:	b.gt	39f64 <mpfr_zeta@@Base+0x3bc>
   39f4c:	add	x0, sp, #0x80
   39f50:	mov	w1, #0x8                   	// #8
   39f54:	mov	w3, #0x2                   	// #2
   39f58:	mov	x2, xzr
   39f5c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   39f60:	b	39f78 <mpfr_zeta@@Base+0x3d0>
   39f64:	ldur	w3, [x29, #-64]
   39f68:	add	x0, sp, #0x80
   39f6c:	sub	x1, x29, #0x48
   39f70:	mov	w2, #0x2                   	// #2
   39f74:	bl	c690 <mpfr_set4@plt>
   39f78:	add	x0, sp, #0x80
   39f7c:	add	x1, sp, #0x80
   39f80:	mov	w3, #0x2                   	// #2
   39f84:	mov	x2, x23
   39f88:	bl	c8f0 <mpfr_div_2ui@plt>
   39f8c:	add	x0, sp, #0x80
   39f90:	add	x1, sp, #0x80
   39f94:	mov	w2, #0x1                   	// #1
   39f98:	mov	w3, #0x2                   	// #2
   39f9c:	bl	c270 <mpfr_add_ui@plt>
   39fa0:	add	x0, sp, #0x80
   39fa4:	add	x1, sp, #0x80
   39fa8:	sub	x2, x29, #0x28
   39fac:	mov	w3, #0x2                   	// #2
   39fb0:	bl	bda0 <mpfr_mul@plt>
   39fb4:	sub	x0, x29, #0x28
   39fb8:	sub	x1, x29, #0x48
   39fbc:	mov	w2, #0xd                   	// #13
   39fc0:	mov	w3, #0x2                   	// #2
   39fc4:	bl	c270 <mpfr_add_ui@plt>
   39fc8:	sub	x0, x29, #0x28
   39fcc:	sub	x1, x29, #0x28
   39fd0:	add	x2, sp, #0x80
   39fd4:	mov	w3, #0x2                   	// #2
   39fd8:	bl	bda0 <mpfr_mul@plt>
   39fdc:	add	x0, sp, #0x80
   39fe0:	add	x1, sp, #0x80
   39fe4:	mov	w2, #0x2                   	// #2
   39fe8:	bl	c3f0 <mpfr_sqr@plt>
   39fec:	sub	x0, x29, #0x28
   39ff0:	sub	x1, x29, #0x28
   39ff4:	add	x2, sp, #0x80
   39ff8:	mov	w3, #0x2                   	// #2
   39ffc:	bl	bda0 <mpfr_mul@plt>
   3a000:	ldur	x23, [x29, #-24]
   3a004:	add	x0, sp, #0x80
   3a008:	sub	x1, x29, #0x28
   3a00c:	sub	x2, x29, #0x48
   3a010:	mov	x3, xzr
   3a014:	bl	c1f0 <mpfr_clears@plt>
   3a018:	add	x8, x23, x22
   3a01c:	cmp	x8, x26
   3a020:	csel	x8, x8, x26, gt
   3a024:	sub	x9, x25, #0xa
   3a028:	cmp	x8, x9
   3a02c:	str	x23, [sp, #16]
   3a030:	b.gt	3a6b8 <mpfr_zeta@@Base+0xb10>
   3a034:	add	x9, x8, #0x9
   3a038:	add	x10, x8, #0x48
   3a03c:	cmp	x9, #0x0
   3a040:	csel	x9, x10, x9, lt  // lt = tstop
   3a044:	asr	x9, x9, #6
   3a048:	add	x23, x8, #0xa
   3a04c:	cmp	x8, #0xf7
   3a050:	add	x28, x9, #0x1
   3a054:	str	w27, [sp, #44]
   3a058:	str	x22, [sp, #48]
   3a05c:	b.lt	3a070 <mpfr_zeta@@Base+0x4c8>  // b.tstop
   3a060:	lsl	x0, x28, #5
   3a064:	str	x0, [sp, #128]
   3a068:	bl	ccd0 <mpfr_allocate_func@plt>
   3a06c:	b	3a07c <mpfr_zeta@@Base+0x4d4>
   3a070:	add	x8, sp, #0x80
   3a074:	add	x0, x8, #0x10
   3a078:	str	xzr, [sp, #128]
   3a07c:	mov	w11, #0x40                  	// #64
   3a080:	str	x0, [sp, #136]
   3a084:	stur	x23, [x29, #-40]
   3a088:	stur	x0, [x29, #-16]
   3a08c:	stur	x23, [x29, #-72]
   3a090:	stur	x23, [x29, #-104]
   3a094:	add	x9, x0, x28, lsl #4
   3a098:	stur	x23, [x29, #-136]
   3a09c:	str	x11, [sp, #56]
   3a0a0:	adrp	x22, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3a0a4:	ldr	x22, [x22, #3944]
   3a0a8:	stur	x9, [x29, #-80]
   3a0ac:	ldr	x9, [sp, #48]
   3a0b0:	add	x8, x0, x28, lsl #3
   3a0b4:	mov	w10, #0x18                  	// #24
   3a0b8:	cmp	w20, #0x0
   3a0bc:	mov	w27, #0x1                   	// #1
   3a0c0:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   3a0c4:	stur	x8, [x29, #-48]
   3a0c8:	madd	x8, x28, x10, x0
   3a0cc:	cinc	x9, x9, eq  // eq = none
   3a0d0:	stur	w27, [x29, #-32]
   3a0d4:	stur	w27, [x29, #-64]
   3a0d8:	stur	w27, [x29, #-96]
   3a0dc:	stur	w27, [x29, #-128]
   3a0e0:	str	x9, [sp, #8]
   3a0e4:	stur	x8, [x29, #-112]
   3a0e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a0ec:	ldr	x1, [x0, #2688]
   3a0f0:	add	x0, x0, #0xa80
   3a0f4:	blr	x1
   3a0f8:	add	x1, x24, x0
   3a0fc:	sub	x0, x29, #0x88
   3a100:	mov	w2, #0x3                   	// #3
   3a104:	bl	c380 <mpfr_cache@plt>
   3a108:	sub	x0, x29, #0x48
   3a10c:	mov	x1, x22
   3a110:	mov	x2, x21
   3a114:	mov	w3, wzr
   3a118:	bl	bbc0 <mpfr_sub@plt>
   3a11c:	sub	x0, x29, #0x68
   3a120:	sub	x1, x29, #0x48
   3a124:	mov	w2, wzr
   3a128:	bl	c7a0 <mpfr_gamma@plt>
   3a12c:	ldur	x8, [x29, #-88]
   3a130:	mov	x28, #0x8000000000000003    	// #-9223372036854775805
   3a134:	sub	x0, x29, #0x28
   3a138:	sub	x1, x29, #0x48
   3a13c:	cmp	x8, x26
   3a140:	b.ne	3a28c <mpfr_zeta@@Base+0x6e4>  // b.any
   3a144:	sub	x3, x29, #0x68
   3a148:	sub	x4, x29, #0x88
   3a14c:	mov	w5, #0x3                   	// #3
   3a150:	mov	x2, x21
   3a154:	bl	3b308 <mpfr_zeta@@Base+0x1760>
   3a158:	ldur	x8, [x29, #-24]
   3a15c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a160:	ldr	x1, [x0, #2608]
   3a164:	add	x0, x0, #0xa30
   3a168:	blr	x1
   3a16c:	cmp	x8, x28
   3a170:	b.eq	3a49c <mpfr_zeta@@Base+0x8f4>  // b.none
   3a174:	ldr	x9, [x24, x0]
   3a178:	cmp	x8, x9
   3a17c:	b.eq	3a49c <mpfr_zeta@@Base+0x8f4>  // b.none
   3a180:	ldur	x1, [x29, #-40]
   3a184:	add	x0, sp, #0x60
   3a188:	bl	ca60 <mpfr_init2@plt>
   3a18c:	add	x0, sp, #0x60
   3a190:	sub	x1, x29, #0x48
   3a194:	sub	x3, x29, #0x68
   3a198:	sub	x4, x29, #0x88
   3a19c:	mov	w5, #0x2                   	// #2
   3a1a0:	mov	x2, x21
   3a1a4:	bl	3b308 <mpfr_zeta@@Base+0x1760>
   3a1a8:	ldr	x8, [sp, #112]
   3a1ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a1b0:	ldr	x1, [x0, #2608]
   3a1b4:	add	x0, x0, #0xa30
   3a1b8:	blr	x1
   3a1bc:	cmp	x8, x28
   3a1c0:	b.eq	3a22c <mpfr_zeta@@Base+0x684>  // b.none
   3a1c4:	ldr	x9, [x24, x0]
   3a1c8:	cmp	x8, x9
   3a1cc:	b.eq	3a22c <mpfr_zeta@@Base+0x684>  // b.none
   3a1d0:	ldr	x28, [sp, #48]
   3a1d4:	add	x0, sp, #0x40
   3a1d8:	mov	x1, x28
   3a1dc:	bl	ca60 <mpfr_init2@plt>
   3a1e0:	ldur	w3, [x29, #-32]
   3a1e4:	add	x0, sp, #0x40
   3a1e8:	sub	x1, x29, #0x28
   3a1ec:	mov	w2, w20
   3a1f0:	bl	c690 <mpfr_set4@plt>
   3a1f4:	add	x0, sp, #0x60
   3a1f8:	mov	x1, x28
   3a1fc:	mov	w2, w20
   3a200:	bl	c960 <mpfr_prec_round@plt>
   3a204:	add	x0, sp, #0x40
   3a208:	add	x1, sp, #0x60
   3a20c:	mov	w2, #0x1                   	// #1
   3a210:	bl	c980 <mpfr_cmp3@plt>
   3a214:	mov	w28, w0
   3a218:	add	x0, sp, #0x60
   3a21c:	bl	c0b0 <mpfr_clear@plt>
   3a220:	add	x0, sp, #0x40
   3a224:	bl	c0b0 <mpfr_clear@plt>
   3a228:	cbz	w28, 3a4f8 <mpfr_zeta@@Base+0x950>
   3a22c:	ldr	x26, [sp, #56]
   3a230:	sub	x8, x25, x23
   3a234:	cmp	x26, x8
   3a238:	b.gt	3a464 <mpfr_zeta@@Base+0x8bc>
   3a23c:	add	x23, x23, x26
   3a240:	cmp	x23, #0x0
   3a244:	cinc	x8, x23, lt  // lt = tstop
   3a248:	cmp	x23, x25
   3a24c:	b.gt	3a6b8 <mpfr_zeta@@Base+0xb10>
   3a250:	asr	x8, x8, #1
   3a254:	str	x8, [sp, #56]
   3a258:	sub	x8, x23, #0x1
   3a25c:	add	x9, x23, #0x3e
   3a260:	cmp	x8, #0x0
   3a264:	ldr	x1, [sp, #128]
   3a268:	csel	x8, x9, x8, lt  // lt = tstop
   3a26c:	asr	x8, x8, #6
   3a270:	add	x28, x8, #0x1
   3a274:	lsl	x2, x28, #5
   3a278:	str	x2, [sp, #128]
   3a27c:	cbz	x1, 3a41c <mpfr_zeta@@Base+0x874>
   3a280:	ldr	x0, [sp, #136]
   3a284:	bl	c200 <mpfr_reallocate_func@plt>
   3a288:	b	3a424 <mpfr_zeta@@Base+0x87c>
   3a28c:	mov	w2, wzr
   3a290:	bl	3a6bc <mpfr_zeta@@Base+0xb14>
   3a294:	sub	x0, x29, #0x28
   3a298:	sub	x1, x29, #0x28
   3a29c:	sub	x2, x29, #0x68
   3a2a0:	mov	w3, wzr
   3a2a4:	bl	bda0 <mpfr_mul@plt>
   3a2a8:	sub	x0, x29, #0x68
   3a2ac:	sub	x1, x29, #0x88
   3a2b0:	mov	w2, #0x1                   	// #1
   3a2b4:	mov	w3, wzr
   3a2b8:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a2bc:	sub	x0, x29, #0x48
   3a2c0:	sub	x1, x29, #0x48
   3a2c4:	mov	w2, wzr
   3a2c8:	bl	bdc0 <mpfr_neg@plt>
   3a2cc:	sub	x0, x29, #0x68
   3a2d0:	sub	x1, x29, #0x68
   3a2d4:	sub	x2, x29, #0x48
   3a2d8:	mov	w3, wzr
   3a2dc:	bl	bde0 <mpfr_pow@plt>
   3a2e0:	sub	x0, x29, #0x28
   3a2e4:	sub	x1, x29, #0x28
   3a2e8:	sub	x2, x29, #0x68
   3a2ec:	mov	w3, wzr
   3a2f0:	bl	bda0 <mpfr_mul@plt>
   3a2f4:	sub	x0, x29, #0x28
   3a2f8:	sub	x1, x29, #0x28
   3a2fc:	mov	w2, #0x1                   	// #1
   3a300:	mov	w3, wzr
   3a304:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a308:	sub	x0, x29, #0x68
   3a30c:	sub	x2, x29, #0x88
   3a310:	mov	x1, x21
   3a314:	mov	w3, wzr
   3a318:	bl	bda0 <mpfr_mul@plt>
   3a31c:	sub	x0, x29, #0x88
   3a320:	sub	x1, x29, #0x68
   3a324:	mov	w2, #0x1                   	// #1
   3a328:	mov	w3, wzr
   3a32c:	bl	c8f0 <mpfr_div_2ui@plt>
   3a330:	sub	x0, x29, #0x68
   3a334:	sub	x1, x29, #0x88
   3a338:	mov	w2, wzr
   3a33c:	bl	c440 <mpfr_sin@plt>
   3a340:	ldur	x28, [x29, #-88]
   3a344:	tbz	x28, #63, 3a3c4 <mpfr_zeta@@Base+0x81c>
   3a348:	neg	x8, x28
   3a34c:	sub	x9, x25, x23
   3a350:	cmp	x9, x8
   3a354:	b.le	3a480 <mpfr_zeta@@Base+0x8d8>
   3a358:	sub	x1, x23, x28
   3a35c:	add	x0, sp, #0x40
   3a360:	bl	ca60 <mpfr_init2@plt>
   3a364:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a368:	ldr	x1, [x0, #2688]
   3a36c:	add	x0, x0, #0xa80
   3a370:	blr	x1
   3a374:	add	x1, x24, x0
   3a378:	add	x0, sp, #0x40
   3a37c:	mov	w2, #0x3                   	// #3
   3a380:	bl	c380 <mpfr_cache@plt>
   3a384:	add	x0, sp, #0x40
   3a388:	add	x2, sp, #0x40
   3a38c:	mov	x1, x21
   3a390:	mov	w3, wzr
   3a394:	bl	bda0 <mpfr_mul@plt>
   3a398:	add	x0, sp, #0x40
   3a39c:	add	x1, sp, #0x40
   3a3a0:	mov	w2, #0x1                   	// #1
   3a3a4:	mov	w3, wzr
   3a3a8:	bl	c8f0 <mpfr_div_2ui@plt>
   3a3ac:	sub	x0, x29, #0x68
   3a3b0:	add	x1, sp, #0x40
   3a3b4:	mov	w2, wzr
   3a3b8:	bl	c440 <mpfr_sin@plt>
   3a3bc:	add	x0, sp, #0x40
   3a3c0:	bl	c0b0 <mpfr_clear@plt>
   3a3c4:	sub	x0, x29, #0x28
   3a3c8:	sub	x1, x29, #0x28
   3a3cc:	sub	x2, x29, #0x68
   3a3d0:	mov	w3, wzr
   3a3d4:	bl	bda0 <mpfr_mul@plt>
   3a3d8:	ldur	x8, [x29, #-24]
   3a3dc:	add	x9, x25, #0x105
   3a3e0:	cmp	x8, x9
   3a3e4:	b.lt	3a22c <mpfr_zeta@@Base+0x684>  // b.tstop
   3a3e8:	ldur	x8, [x29, #-40]
   3a3ec:	ldur	x0, [x29, #-16]
   3a3f0:	sub	x9, x8, #0x1
   3a3f4:	add	x8, x8, #0x3e
   3a3f8:	cmp	x9, #0x0
   3a3fc:	csel	x8, x8, x9, lt  // lt = tstop
   3a400:	asr	x8, x8, #6
   3a404:	add	x1, x8, #0x1
   3a408:	ldp	x3, x8, [sp, #8]
   3a40c:	sub	x2, x23, x8
   3a410:	bl	c370 <mpfr_round_p@plt>
   3a414:	cbnz	w0, 3a558 <mpfr_zeta@@Base+0x9b0>
   3a418:	b	3a22c <mpfr_zeta@@Base+0x684>
   3a41c:	mov	x0, x2
   3a420:	bl	ccd0 <mpfr_allocate_func@plt>
   3a424:	mov	w10, #0x18                  	// #24
   3a428:	add	x8, x0, x28, lsl #3
   3a42c:	add	x9, x0, x28, lsl #4
   3a430:	madd	x10, x28, x10, x0
   3a434:	str	x0, [sp, #136]
   3a438:	stur	x0, [x29, #-16]
   3a43c:	stp	x8, x23, [x29, #-48]
   3a440:	stur	w27, [x29, #-32]
   3a444:	stp	x9, x23, [x29, #-80]
   3a448:	stur	w27, [x29, #-64]
   3a44c:	stp	x10, x23, [x29, #-112]
   3a450:	stur	w27, [x29, #-96]
   3a454:	stur	x23, [x29, #-136]
   3a458:	stur	w27, [x29, #-128]
   3a45c:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   3a460:	b	3a0e8 <mpfr_zeta@@Base+0x540>
   3a464:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a468:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a46c:	mov	w1, #0x290                 	// #656
   3a470:	add	x0, x0, #0x750
   3a474:	add	x2, x2, #0x799
   3a478:	bl	cb20 <mpfr_assert_fail@plt>
   3a47c:	b	3a23c <mpfr_zeta@@Base+0x694>
   3a480:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a484:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a488:	mov	w1, #0x281                 	// #641
   3a48c:	add	x0, x0, #0x750
   3a490:	add	x2, x2, #0x757
   3a494:	bl	cb20 <mpfr_assert_fail@plt>
   3a498:	b	3a358 <mpfr_zeta@@Base+0x7b0>
   3a49c:	sub	x0, x29, #0x48
   3a4a0:	mov	w2, #0x2                   	// #2
   3a4a4:	mov	x1, x21
   3a4a8:	mov	w3, wzr
   3a4ac:	bl	c8f0 <mpfr_div_2ui@plt>
   3a4b0:	sub	x0, x29, #0x48
   3a4b4:	sub	x1, x29, #0x48
   3a4b8:	mov	w2, wzr
   3a4bc:	bl	bf10 <mpfr_frac@plt>
   3a4c0:	sub	x0, x29, #0x48
   3a4c4:	mov	x1, #0xffffffffffffffff    	// #-1
   3a4c8:	mov	x2, #0xffffffffffffffff    	// #-1
   3a4cc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3a4d0:	cmp	w0, #0x1
   3a4d4:	mov	w8, #0x1                   	// #1
   3a4d8:	cneg	w2, w8, ge  // ge = tcont
   3a4dc:	mov	x0, x19
   3a4e0:	mov	w1, w20
   3a4e4:	bl	bf90 <mpfr_overflow@plt>
   3a4e8:	ldr	w27, [sp, #44]
   3a4ec:	mov	w21, w0
   3a4f0:	orr	w27, w27, #0x2
   3a4f4:	b	3a574 <mpfr_zeta@@Base+0x9cc>
   3a4f8:	sub	x0, x29, #0x48
   3a4fc:	mov	w2, #0x2                   	// #2
   3a500:	mov	x1, x21
   3a504:	mov	w3, wzr
   3a508:	bl	c8f0 <mpfr_div_2ui@plt>
   3a50c:	sub	x0, x29, #0x48
   3a510:	sub	x1, x29, #0x48
   3a514:	mov	w2, wzr
   3a518:	bl	bf10 <mpfr_frac@plt>
   3a51c:	sub	x0, x29, #0x48
   3a520:	mov	x1, #0xffffffffffffffff    	// #-1
   3a524:	mov	x2, #0xffffffffffffffff    	// #-1
   3a528:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3a52c:	cmp	w0, #0x1
   3a530:	b.lt	3a544 <mpfr_zeta@@Base+0x99c>  // b.tstop
   3a534:	sub	x0, x29, #0x28
   3a538:	sub	x1, x29, #0x28
   3a53c:	mov	w2, w20
   3a540:	bl	bdc0 <mpfr_neg@plt>
   3a544:	sub	x0, x29, #0x28
   3a548:	sub	x1, x29, #0x28
   3a54c:	mov	w2, #0x1                   	// #1
   3a550:	mov	w3, w20
   3a554:	bl	c2c0 <mpfr_mul_2ui@plt>
   3a558:	ldur	w3, [x29, #-32]
   3a55c:	sub	x1, x29, #0x28
   3a560:	mov	x0, x19
   3a564:	mov	w2, w20
   3a568:	bl	c690 <mpfr_set4@plt>
   3a56c:	ldr	w27, [sp, #44]
   3a570:	mov	w21, w0
   3a574:	ldr	x1, [sp, #128]
   3a578:	ldp	x23, x22, [sp, #24]
   3a57c:	cbz	x1, 3a588 <mpfr_zeta@@Base+0x9e0>
   3a580:	ldr	x0, [sp, #136]
   3a584:	bl	cc00 <mpfr_free_func@plt>
   3a588:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a58c:	ldr	x1, [x0, #2640]
   3a590:	add	x0, x0, #0xa50
   3a594:	blr	x1
   3a598:	str	w27, [x24, x0]
   3a59c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a5a0:	ldr	x1, [x0, #2576]
   3a5a4:	add	x0, x0, #0xa10
   3a5a8:	blr	x1
   3a5ac:	str	x22, [x24, x0]
   3a5b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a5b4:	ldr	x1, [x0, #2608]
   3a5b8:	add	x0, x0, #0xa30
   3a5bc:	blr	x1
   3a5c0:	str	x23, [x24, x0]
   3a5c4:	ldr	x8, [x19, #16]
   3a5c8:	cmp	x8, x23
   3a5cc:	b.gt	3a64c <mpfr_zeta@@Base+0xaa4>
   3a5d0:	cmp	x8, x22
   3a5d4:	b.lt	3a64c <mpfr_zeta@@Base+0xaa4>  // b.tstop
   3a5d8:	cbz	w21, 3a5f4 <mpfr_zeta@@Base+0xa4c>
   3a5dc:	orr	w8, w27, #0x8
   3a5e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a5e4:	ldr	x1, [x0, #2640]
   3a5e8:	add	x0, x0, #0xa50
   3a5ec:	blr	x1
   3a5f0:	str	w8, [x24, x0]
   3a5f4:	mov	w0, w21
   3a5f8:	add	sp, sp, #0x1a0
   3a5fc:	ldp	x20, x19, [sp, #80]
   3a600:	ldp	x22, x21, [sp, #64]
   3a604:	ldp	x24, x23, [sp, #48]
   3a608:	ldp	x26, x25, [sp, #32]
   3a60c:	ldp	x28, x27, [sp, #16]
   3a610:	ldp	x29, x30, [sp], #96
   3a614:	ret
   3a618:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3a61c:	cmp	x8, x9
   3a620:	b.eq	3a660 <mpfr_zeta@@Base+0xab8>  // b.none
   3a624:	mov	x9, #0x2                   	// #2
   3a628:	movk	x9, #0x8000, lsl #48
   3a62c:	cmp	x8, x9
   3a630:	b.eq	3a688 <mpfr_zeta@@Base+0xae0>  // b.none
   3a634:	mov	x1, #0xffffffffffffffff    	// #-1
   3a638:	mov	x2, #0xffffffffffffffff    	// #-1
   3a63c:	mov	x0, x19
   3a640:	mov	w3, w20
   3a644:	bl	bae0 <mpfr_set_si_2exp@plt>
   3a648:	b	3a680 <mpfr_zeta@@Base+0xad8>
   3a64c:	mov	x0, x19
   3a650:	mov	w1, w21
   3a654:	mov	w2, w20
   3a658:	bl	cb10 <mpfr_check_range@plt>
   3a65c:	b	3a680 <mpfr_zeta@@Base+0xad8>
   3a660:	ldr	w8, [x21, #8]
   3a664:	cmp	w8, #0x1
   3a668:	b.lt	3a688 <mpfr_zeta@@Base+0xae0>  // b.tstop
   3a66c:	mov	w1, #0x1                   	// #1
   3a670:	mov	x0, x19
   3a674:	mov	x2, xzr
   3a678:	mov	w3, wzr
   3a67c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   3a680:	mov	w21, w0
   3a684:	b	3a5f4 <mpfr_zeta@@Base+0xa4c>
   3a688:	add	x8, x25, #0x103
   3a68c:	str	x8, [x19, #16]
   3a690:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3a694:	ldr	x1, [x0, #2640]
   3a698:	add	x0, x0, #0xa50
   3a69c:	blr	x1
   3a6a0:	mrs	x8, tpidr_el0
   3a6a4:	ldr	w9, [x8, x0]
   3a6a8:	mov	w21, wzr
   3a6ac:	orr	w9, w9, #0x4
   3a6b0:	str	w9, [x8, x0]
   3a6b4:	b	3a5f4 <mpfr_zeta@@Base+0xa4c>
   3a6b8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3a6bc:	stp	d15, d14, [sp, #-160]!
   3a6c0:	stp	d13, d12, [sp, #16]
   3a6c4:	stp	d11, d10, [sp, #32]
   3a6c8:	stp	d9, d8, [sp, #48]
   3a6cc:	stp	x29, x30, [sp, #64]
   3a6d0:	stp	x28, x27, [sp, #80]
   3a6d4:	stp	x26, x25, [sp, #96]
   3a6d8:	stp	x24, x23, [sp, #112]
   3a6dc:	stp	x22, x21, [sp, #128]
   3a6e0:	stp	x20, x19, [sp, #144]
   3a6e4:	mov	x29, sp
   3a6e8:	sub	sp, sp, #0x290
   3a6ec:	ldr	x8, [x1, #16]
   3a6f0:	ldr	x23, [x0]
   3a6f4:	ldr	x24, [x1]
   3a6f8:	mov	x20, x1
   3a6fc:	mov	x21, x0
   3a700:	cmp	x8, #0x4
   3a704:	mov	w27, w2
   3a708:	b.lt	3a738 <mpfr_zeta@@Base+0xb90>  // b.tstop
   3a70c:	sub	x9, x8, #0x1
   3a710:	mov	w10, #0x1                   	// #1
   3a714:	cmp	x8, #0x3f
   3a718:	lsl	x8, x10, x9
   3a71c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   3a720:	csel	x2, x9, x8, gt
   3a724:	cmp	x2, #0x1
   3a728:	b.lt	3a738 <mpfr_zeta@@Base+0xb90>  // b.tstop
   3a72c:	add	x8, x23, #0x1
   3a730:	cmp	x2, x8
   3a734:	b.hi	3b2e0 <mpfr_zeta@@Base+0x1738>  // b.pmore
   3a738:	subs	x19, x23, #0x1
   3a73c:	b.eq	3b2bc <mpfr_zeta@@Base+0x1714>  // b.none
   3a740:	b.le	3b2c4 <mpfr_zeta@@Base+0x171c>
   3a744:	clz	x8, x19
   3a748:	mov	w9, #0x40                  	// #64
   3a74c:	sub	x8, x9, x8
   3a750:	ldr	x9, [x20, #16]
   3a754:	mov	x28, #0xfffffffffffffeff    	// #-257
   3a758:	add	x8, x23, x8
   3a75c:	add	x0, sp, #0xf8
   3a760:	cmp	x24, x9
   3a764:	csel	x1, x24, x9, gt
   3a768:	movk	x28, #0x7fff, lsl #48
   3a76c:	add	x26, x8, #0xa
   3a770:	bl	ca60 <mpfr_init2@plt>
   3a774:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3a778:	ldr	x2, [x2, #3944]
   3a77c:	add	x0, sp, #0xf8
   3a780:	mov	x1, x20
   3a784:	mov	w3, wzr
   3a788:	bl	bbc0 <mpfr_sub@plt>
   3a78c:	adrp	x10, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a790:	adrp	x11, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a794:	adrp	x12, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a798:	adrp	x13, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3a79c:	add	x8, sp, #0x68
   3a7a0:	ldr	d10, [x10, #1840]
   3a7a4:	ldr	d11, [x11, #1848]
   3a7a8:	ldr	d12, [x12, #1856]
   3a7ac:	ldr	d13, [x13, #1864]
   3a7b0:	add	x10, x8, #0x10
   3a7b4:	mov	w14, #0x1                   	// #1
   3a7b8:	sub	x9, x29, #0xb8
   3a7bc:	cmp	w27, #0x0
   3a7c0:	stp	xzr, x10, [sp, #104]
   3a7c4:	str	x10, [sp, #400]
   3a7c8:	add	x10, x8, #0x20
   3a7cc:	mov	w25, #0x40                  	// #64
   3a7d0:	fmov	d9, #-1.000000000000000000e+00
   3a7d4:	add	x11, x8, #0x18
   3a7d8:	add	x8, x8, #0x28
   3a7dc:	add	x9, x9, #0x10
   3a7e0:	cinc	x23, x23, eq  // eq = none
   3a7e4:	stp	x10, x14, [sp, #336]
   3a7e8:	mov	w10, #0x40                  	// #64
   3a7ec:	str	w14, [sp, #384]
   3a7f0:	str	w14, [sp, #352]
   3a7f4:	str	w14, [sp, #320]
   3a7f8:	str	x14, [sp, #280]
   3a7fc:	str	w14, [sp, #288]
   3a800:	str	x9, [sp, #72]
   3a804:	stp	x11, x14, [sp, #368]
   3a808:	stp	x8, x14, [sp, #304]
   3a80c:	ldr	x8, [sp, #264]
   3a810:	sub	x11, x26, #0x3
   3a814:	sub	x9, x26, #0x2
   3a818:	cmp	x11, #0x0
   3a81c:	csel	x9, x9, x11, lt  // lt = tstop
   3a820:	neg	x9, x9, asr #1
   3a824:	cmp	x8, x9
   3a828:	str	x10, [sp, #56]
   3a82c:	str	x11, [sp, #80]
   3a830:	b.le	3a8a0 <mpfr_zeta@@Base+0xcf8>
   3a834:	scvtf	d14, x26
   3a838:	mov	x0, x20
   3a83c:	mov	w1, wzr
   3a840:	fmul	d15, d14, d10
   3a844:	bl	bd80 <mpfr_get_d@plt>
   3a848:	mov	v8.16b, v0.16b
   3a84c:	fadd	d15, d15, d11
   3a850:	bl	bd20 <__gmpfr_floor_log2@plt>
   3a854:	scvtf	d0, x0
   3a858:	fmul	d0, d0, d10
   3a85c:	fsub	d0, d12, d0
   3a860:	fmul	d0, d8, d0
   3a864:	fadd	d0, d15, d0
   3a868:	fcmp	d0, #0.0
   3a86c:	b.ls	3a8e8 <mpfr_zeta@@Base+0xd40>  // b.plast
   3a870:	fcvtzs	w8, d0
   3a874:	cmp	w8, #0x0
   3a878:	cinc	w8, w8, lt  // lt = tstop
   3a87c:	asr	w8, w8, #1
   3a880:	add	w8, w8, #0x1
   3a884:	scvtf	d0, w8
   3a888:	fadd	d0, d0, d0
   3a88c:	fadd	d0, d8, d0
   3a890:	fadd	d0, d0, d9
   3a894:	fdiv	d8, d0, d13
   3a898:	str	x8, [sp, #88]
   3a89c:	b	3a8fc <mpfr_zeta@@Base+0xd54>
   3a8a0:	add	x8, x26, #0x3
   3a8a4:	cmp	x8, x24
   3a8a8:	csel	x19, x8, x24, gt
   3a8ac:	cmp	x19, x28
   3a8b0:	b.gt	3b304 <mpfr_zeta@@Base+0x175c>
   3a8b4:	sub	x8, x19, #0x1
   3a8b8:	add	x9, x19, #0x3e
   3a8bc:	cmp	x8, #0x0
   3a8c0:	ldr	x1, [sp, #104]
   3a8c4:	csel	x8, x9, x8, lt  // lt = tstop
   3a8c8:	asr	x8, x8, #6
   3a8cc:	add	x22, x8, #0x1
   3a8d0:	lsl	x2, x22, #5
   3a8d4:	str	x2, [sp, #104]
   3a8d8:	cbz	x1, 3a9c4 <mpfr_zeta@@Base+0xe1c>
   3a8dc:	ldr	x0, [sp, #112]
   3a8e0:	bl	c200 <mpfr_reallocate_func@plt>
   3a8e4:	b	3a9cc <mpfr_zeta@@Base+0xe24>
   3a8e8:	fadd	d0, d14, d9
   3a8ec:	fdiv	d0, d0, d8
   3a8f0:	bl	bb90 <__gmpfr_ceil_exp2@plt>
   3a8f4:	mov	v8.16b, v0.16b
   3a8f8:	str	xzr, [sp, #88]
   3a8fc:	subs	x19, x26, #0x1
   3a900:	b.eq	3b210 <mpfr_zeta@@Base+0x1668>  // b.none
   3a904:	b.le	3b218 <mpfr_zeta@@Base+0x1670>
   3a908:	clz	x8, x19
   3a90c:	sub	w8, w25, w8
   3a910:	add	w8, w8, w8, lsl #1
   3a914:	ldr	x19, [sp, #88]
   3a918:	cmp	w8, #0x0
   3a91c:	cinc	w8, w8, lt  // lt = tstop
   3a920:	asr	w8, w8, #1
   3a924:	add	w8, w8, #0x4
   3a928:	add	w9, w19, #0x1
   3a92c:	add	x8, x26, w8, sxtw
   3a930:	cmp	x8, x24
   3a934:	sbfiz	x0, x9, #5, #32
   3a938:	csel	x25, x24, x8, lt  // lt = tstop
   3a93c:	str	x9, [sp, #64]
   3a940:	str	x0, [sp, #24]
   3a944:	bl	ccd0 <mpfr_allocate_func@plt>
   3a948:	cmp	w19, #0x1
   3a94c:	str	x0, [sp, #96]
   3a950:	b.lt	3a980 <mpfr_zeta@@Base+0xdd8>  // b.tstop
   3a954:	ldr	x8, [sp, #64]
   3a958:	ldr	x9, [sp, #96]
   3a95c:	mov	w8, w8
   3a960:	add	x22, x9, #0x20
   3a964:	sub	x19, x8, #0x1
   3a968:	mov	x0, x22
   3a96c:	mov	x1, x25
   3a970:	bl	ca60 <mpfr_init2@plt>
   3a974:	subs	x19, x19, #0x1
   3a978:	add	x22, x22, #0x20
   3a97c:	b.ne	3a968 <mpfr_zeta@@Base+0xdc0>  // b.any
   3a980:	cmp	x25, x28
   3a984:	b.gt	3b304 <mpfr_zeta@@Base+0x175c>
   3a988:	sub	x8, x25, #0x1
   3a98c:	add	x9, x25, #0x3e
   3a990:	cmp	x8, #0x0
   3a994:	ldr	x1, [sp, #104]
   3a998:	csel	x8, x9, x8, lt  // lt = tstop
   3a99c:	asr	x8, x8, #6
   3a9a0:	add	x19, x8, #0x1
   3a9a4:	lsl	x2, x19, #5
   3a9a8:	str	x2, [sp, #104]
   3a9ac:	stp	x24, x20, [sp, #40]
   3a9b0:	str	x26, [sp, #32]
   3a9b4:	cbz	x1, 3aa5c <mpfr_zeta@@Base+0xeb4>
   3a9b8:	ldr	x0, [sp, #112]
   3a9bc:	bl	c200 <mpfr_reallocate_func@plt>
   3a9c0:	b	3aa64 <mpfr_zeta@@Base+0xebc>
   3a9c4:	mov	x0, x2
   3a9c8:	bl	ccd0 <mpfr_allocate_func@plt>
   3a9cc:	mov	w10, #0x18                  	// #24
   3a9d0:	mov	w11, #0x1                   	// #1
   3a9d4:	add	x8, x0, x22, lsl #3
   3a9d8:	add	x9, x0, x22, lsl #4
   3a9dc:	madd	x10, x22, x10, x0
   3a9e0:	str	x0, [sp, #112]
   3a9e4:	str	x0, [sp, #400]
   3a9e8:	str	w11, [sp, #384]
   3a9ec:	str	w11, [sp, #352]
   3a9f0:	str	x19, [sp, #280]
   3a9f4:	str	w11, [sp, #320]
   3a9f8:	stp	x8, x19, [sp, #368]
   3a9fc:	stp	x9, x19, [sp, #336]
   3aa00:	stp	x10, x19, [sp, #304]
   3aa04:	str	w11, [sp, #288]
   3aa08:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3aa0c:	ldr	x1, [x1, #3944]
   3aa10:	add	x0, sp, #0x138
   3aa14:	add	x2, sp, #0xf8
   3aa18:	mov	w3, wzr
   3aa1c:	bl	c610 <mpfr_div@plt>
   3aa20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3aa24:	ldr	x1, [x0, #2672]
   3aa28:	add	x0, x0, #0xa70
   3aa2c:	blr	x1
   3aa30:	mrs	x8, tpidr_el0
   3aa34:	add	x1, x8, x0
   3aa38:	add	x0, sp, #0x118
   3aa3c:	mov	w2, wzr
   3aa40:	bl	c380 <mpfr_cache@plt>
   3aa44:	add	x0, sp, #0x138
   3aa48:	add	x1, sp, #0x138
   3aa4c:	add	x2, sp, #0x118
   3aa50:	mov	w3, wzr
   3aa54:	bl	c1e0 <mpfr_add@plt>
   3aa58:	b	3b1ac <mpfr_zeta@@Base+0x1604>
   3aa5c:	mov	x0, x2
   3aa60:	bl	ccd0 <mpfr_allocate_func@plt>
   3aa64:	ldr	x12, [sp, #88]
   3aa68:	mov	w10, #0x18                  	// #24
   3aa6c:	add	x8, x0, x19, lsl #3
   3aa70:	add	x9, x0, x19, lsl #4
   3aa74:	madd	x10, x19, x10, x0
   3aa78:	mov	w11, #0x1                   	// #1
   3aa7c:	cmp	w12, #0x1
   3aa80:	str	x0, [sp, #112]
   3aa84:	str	x0, [sp, #400]
   3aa88:	stp	x8, x25, [sp, #368]
   3aa8c:	str	w11, [sp, #384]
   3aa90:	stp	x9, x25, [sp, #336]
   3aa94:	str	w11, [sp, #352]
   3aa98:	stp	x10, x25, [sp, #304]
   3aa9c:	str	w11, [sp, #320]
   3aaa0:	str	x25, [sp, #280]
   3aaa4:	str	w11, [sp, #288]
   3aaa8:	b.lt	3ab0c <mpfr_zeta@@Base+0xf64>  // b.tstop
   3aaac:	ldr	x22, [sp, #96]
   3aab0:	str	x23, [sp]
   3aab4:	str	w27, [sp, #12]
   3aab8:	str	x21, [sp, #16]
   3aabc:	ldr	x1, [x22, #32]!
   3aac0:	sub	x0, x29, #0xf8
   3aac4:	bl	ca60 <mpfr_init2@plt>
   3aac8:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3aacc:	ldr	x1, [x1, #3944]
   3aad0:	mov	w2, #0xc                   	// #12
   3aad4:	mov	x0, x22
   3aad8:	mov	w3, wzr
   3aadc:	bl	cc40 <mpfr_div_ui@plt>
   3aae0:	ldr	x8, [sp, #88]
   3aae4:	cmp	w8, #0x1
   3aae8:	b.ne	3ac94 <mpfr_zeta@@Base+0x10ec>  // b.any
   3aaec:	sub	x0, x29, #0xf8
   3aaf0:	bl	c0b0 <mpfr_clear@plt>
   3aaf4:	ldr	x25, [sp, #312]
   3aaf8:	ldr	x21, [sp, #16]
   3aafc:	ldr	w27, [sp, #12]
   3ab00:	ldr	x23, [sp]
   3ab04:	mov	x28, #0xfffffffffffffeff    	// #-257
   3ab08:	movk	x28, #0x7fff, lsl #48
   3ab0c:	cmp	x25, x28
   3ab10:	b.gt	3b304 <mpfr_zeta@@Base+0x175c>
   3ab14:	sub	x8, x25, #0x1
   3ab18:	add	x9, x25, #0x3e
   3ab1c:	cmp	x8, #0x0
   3ab20:	csel	x8, x9, x8, lt  // lt = tstop
   3ab24:	fcvtzs	w19, d8
   3ab28:	asr	x8, x8, #6
   3ab2c:	add	w26, w19, #0x1
   3ab30:	cmp	x25, #0x201
   3ab34:	add	x20, x8, #0x1
   3ab38:	b.lt	3ab4c <mpfr_zeta@@Base+0xfa4>  // b.tstop
   3ab3c:	lsl	x22, x20, #4
   3ab40:	mov	x0, x22
   3ab44:	bl	ccd0 <mpfr_allocate_func@plt>
   3ab48:	b	3ab54 <mpfr_zeta@@Base+0xfac>
   3ab4c:	ldr	x0, [sp, #72]
   3ab50:	mov	x22, xzr
   3ab54:	add	x8, x0, x20, lsl #3
   3ab58:	ldr	x20, [sp, #48]
   3ab5c:	stp	x22, x0, [x29, #-184]
   3ab60:	stp	x0, x25, [x29, #-224]
   3ab64:	mov	w9, #0x1                   	// #1
   3ab68:	sub	x0, x29, #0xd8
   3ab6c:	mov	x1, x20
   3ab70:	mov	w2, wzr
   3ab74:	stur	x25, [x29, #-248]
   3ab78:	stur	w9, [x29, #-240]
   3ab7c:	stur	x8, [x29, #-192]
   3ab80:	mov	w22, #0x1                   	// #1
   3ab84:	stur	w9, [x29, #-208]
   3ab88:	bl	bdc0 <mpfr_neg@plt>
   3ab8c:	sxtw	x25, w26
   3ab90:	sub	x0, x29, #0xf8
   3ab94:	sub	x2, x29, #0xd8
   3ab98:	mov	x1, x25
   3ab9c:	mov	w3, wzr
   3aba0:	bl	c9f0 <mpfr_ui_pow@plt>
   3aba4:	sub	x0, x29, #0xf8
   3aba8:	sub	x1, x29, #0xf8
   3abac:	mov	w2, #0x1                   	// #1
   3abb0:	mov	w3, wzr
   3abb4:	bl	c8f0 <mpfr_div_2ui@plt>
   3abb8:	ldur	w3, [x29, #-240]
   3abbc:	add	x0, sp, #0x138
   3abc0:	sub	x1, x29, #0xf8
   3abc4:	mov	w2, wzr
   3abc8:	bl	c690 <mpfr_set4@plt>
   3abcc:	cmp	w19, #0x2
   3abd0:	b.lt	3ac0c <mpfr_zeta@@Base+0x1064>  // b.tstop
   3abd4:	add	x19, x25, #0x1
   3abd8:	sub	x1, x19, #0x2
   3abdc:	sub	x0, x29, #0xf8
   3abe0:	sub	x2, x29, #0xd8
   3abe4:	mov	w3, wzr
   3abe8:	bl	c9f0 <mpfr_ui_pow@plt>
   3abec:	add	x0, sp, #0x138
   3abf0:	add	x1, sp, #0x138
   3abf4:	sub	x2, x29, #0xf8
   3abf8:	mov	w3, wzr
   3abfc:	bl	c1e0 <mpfr_add@plt>
   3ac00:	sub	x19, x19, #0x1
   3ac04:	cmp	x19, #0x3
   3ac08:	b.gt	3abd8 <mpfr_zeta@@Base+0x1030>
   3ac0c:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3ac10:	ldr	x2, [x2, #3944]
   3ac14:	add	x0, sp, #0x138
   3ac18:	add	x1, sp, #0x138
   3ac1c:	mov	w3, wzr
   3ac20:	bl	c1e0 <mpfr_add@plt>
   3ac24:	ldur	x1, [x29, #-184]
   3ac28:	cbz	x1, 3ac34 <mpfr_zeta@@Base+0x108c>
   3ac2c:	ldur	x0, [x29, #-176]
   3ac30:	bl	cc00 <mpfr_free_func@plt>
   3ac34:	ldr	x8, [sp, #88]
   3ac38:	cbz	w8, 3ac84 <mpfr_zeta@@Base+0x10dc>
   3ac3c:	ldr	x19, [sp, #376]
   3ac40:	cmp	x19, x28
   3ac44:	b.gt	3b304 <mpfr_zeta@@Base+0x175c>
   3ac48:	sub	x8, x19, #0x1
   3ac4c:	add	x9, x19, #0x3e
   3ac50:	cmp	x8, #0x0
   3ac54:	csel	x8, x9, x8, lt  // lt = tstop
   3ac58:	asr	x8, x8, #6
   3ac5c:	mov	x24, x23
   3ac60:	mov	x23, x20
   3ac64:	add	x20, x8, #0x1
   3ac68:	add	x8, x20, x20, lsl #1
   3ac6c:	cmp	x8, #0x11
   3ac70:	b.lt	3ad84 <mpfr_zeta@@Base+0x11dc>  // b.tstop
   3ac74:	lsl	x22, x8, #3
   3ac78:	mov	x0, x22
   3ac7c:	bl	ccd0 <mpfr_allocate_func@plt>
   3ac80:	b	3ad8c <mpfr_zeta@@Base+0x11e4>
   3ac84:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3ac88:	str	x8, [sp, #392]
   3ac8c:	str	w22, [sp, #384]
   3ac90:	b	3b0fc <mpfr_zeta@@Base+0x1554>
   3ac94:	ldr	x8, [sp, #64]
   3ac98:	mov	x21, xzr
   3ac9c:	mov	w23, #0xc                   	// #12
   3aca0:	mov	w19, #0x2                   	// #2
   3aca4:	mov	w26, w8
   3aca8:	ldr	x8, [sp, #96]
   3acac:	mov	w27, #0x2                   	// #2
   3acb0:	add	x28, x8, #0x40
   3acb4:	b	3acf8 <mpfr_zeta@@Base+0x1150>
   3acb8:	ldr	x8, [sp, #96]
   3acbc:	sub	x1, x29, #0xf8
   3acc0:	mov	w2, #0x18                  	// #24
   3acc4:	mov	w3, wzr
   3acc8:	add	x22, x8, x27, lsl #5
   3accc:	mov	x0, x22
   3acd0:	bl	cc40 <mpfr_div_ui@plt>
   3acd4:	ldr	w8, [x22, #8]
   3acd8:	add	x27, x27, #0x1
   3acdc:	add	x21, x21, #0x1
   3ace0:	add	w23, w23, #0x8
   3ace4:	cmp	x27, x26
   3ace8:	neg	w8, w8
   3acec:	add	w19, w19, #0x2
   3acf0:	str	w8, [x22, #8]
   3acf4:	b.eq	3aaec <mpfr_zeta@@Base+0xf44>  // b.none
   3acf8:	sub	x1, x27, #0x1
   3acfc:	sub	x0, x29, #0xf8
   3ad00:	mov	x2, xzr
   3ad04:	mov	w3, wzr
   3ad08:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   3ad0c:	mov	w8, #0xc                   	// #12
   3ad10:	orr	w9, wzr, #0x6
   3ad14:	madd	w2, w27, w8, w9
   3ad18:	sub	x0, x29, #0xf8
   3ad1c:	sub	x1, x29, #0xf8
   3ad20:	mov	w3, wzr
   3ad24:	bl	cc40 <mpfr_div_ui@plt>
   3ad28:	cmp	x27, #0x3
   3ad2c:	b.cc	3acb8 <mpfr_zeta@@Base+0x1110>  // b.lo, b.ul, b.last
   3ad30:	mov	w20, w19
   3ad34:	mov	w24, w23
   3ad38:	mov	x22, x28
   3ad3c:	mov	x25, x21
   3ad40:	mul	w8, w24, w20
   3ad44:	sxtw	x2, w8
   3ad48:	sub	x0, x29, #0xf8
   3ad4c:	sub	x1, x29, #0xf8
   3ad50:	mov	w3, wzr
   3ad54:	bl	cc40 <mpfr_div_ui@plt>
   3ad58:	sub	x0, x29, #0xf8
   3ad5c:	sub	x1, x29, #0xf8
   3ad60:	mov	x2, x22
   3ad64:	mov	w3, wzr
   3ad68:	bl	c1e0 <mpfr_add@plt>
   3ad6c:	sub	x25, x25, #0x1
   3ad70:	add	x22, x22, #0x20
   3ad74:	sub	w24, w24, #0x8
   3ad78:	sub	w20, w20, #0x2
   3ad7c:	cbnz	x25, 3ad40 <mpfr_zeta@@Base+0x1198>
   3ad80:	b	3acb8 <mpfr_zeta@@Base+0x1110>
   3ad84:	ldr	x0, [sp, #72]
   3ad88:	mov	x22, xzr
   3ad8c:	stur	x19, [x29, #-248]
   3ad90:	stp	x0, x19, [x29, #-224]
   3ad94:	add	x8, x0, x20, lsl #3
   3ad98:	stur	x19, [x29, #-40]
   3ad9c:	stur	x8, [x29, #-192]
   3ada0:	ldp	x19, x8, [sp, #88]
   3ada4:	stp	x22, x0, [x29, #-184]
   3ada8:	mov	w10, #0x1                   	// #1
   3adac:	add	x9, x0, x20, lsl #4
   3adb0:	sxtw	x22, w19
   3adb4:	stur	w10, [x29, #-240]
   3adb8:	stur	w10, [x29, #-208]
   3adbc:	stur	w10, [x29, #-32]
   3adc0:	stur	x9, [x29, #-16]
   3adc4:	add	x1, x8, x22, lsl #5
   3adc8:	ldr	w3, [x1, #8]
   3adcc:	sub	x0, x29, #0xd8
   3add0:	mov	w2, wzr
   3add4:	bl	c690 <mpfr_set4@plt>
   3add8:	cmp	w19, #0x2
   3addc:	mov	x20, x23
   3ade0:	mov	x23, x24
   3ade4:	b.lt	3b080 <mpfr_zeta@@Base+0x14d8>  // b.tstop
   3ade8:	ldr	x10, [sp, #88]
   3adec:	mul	w26, w26, w26
   3adf0:	lsl	w8, w10, #1
   3adf4:	sub	w9, w8, #0x2
   3adf8:	sxtw	x28, w9
   3adfc:	mov	w9, w10
   3ae00:	cbz	w26, 3aee4 <mpfr_zeta@@Base+0x133c>
   3ae04:	mov	w10, #0x7fffffff            	// #2147483647
   3ae08:	add	w10, w26, w10
   3ae0c:	sub	x19, x9, #0x1
   3ae10:	tst	x10, x26
   3ae14:	b.eq	3afb4 <mpfr_zeta@@Base+0x140c>  // b.none
   3ae18:	ldr	x9, [sp, #96]
   3ae1c:	sub	w24, w8, #0x3
   3ae20:	add	x9, x9, x22, lsl #5
   3ae24:	sub	x22, x9, #0x20
   3ae28:	sub	x0, x29, #0xf8
   3ae2c:	mov	x1, x20
   3ae30:	mov	x2, x28
   3ae34:	mov	w3, wzr
   3ae38:	bl	c270 <mpfr_add_ui@plt>
   3ae3c:	sub	x0, x29, #0xd8
   3ae40:	sub	x1, x29, #0xd8
   3ae44:	sub	x2, x29, #0xf8
   3ae48:	mov	w3, wzr
   3ae4c:	bl	bda0 <mpfr_mul@plt>
   3ae50:	sxtw	x2, w24
   3ae54:	sub	x0, x29, #0xf8
   3ae58:	mov	x1, x20
   3ae5c:	mov	w3, wzr
   3ae60:	bl	c270 <mpfr_add_ui@plt>
   3ae64:	sub	x0, x29, #0xd8
   3ae68:	sub	x1, x29, #0xd8
   3ae6c:	sub	x2, x29, #0xf8
   3ae70:	mov	w3, wzr
   3ae74:	bl	bda0 <mpfr_mul@plt>
   3ae78:	sub	x0, x29, #0xd8
   3ae7c:	sub	x1, x29, #0xd8
   3ae80:	mov	x2, x26
   3ae84:	mov	w3, wzr
   3ae88:	bl	cc40 <mpfr_div_ui@plt>
   3ae8c:	sub	x0, x29, #0xd8
   3ae90:	sub	x1, x29, #0xd8
   3ae94:	mov	x2, x22
   3ae98:	mov	w3, wzr
   3ae9c:	bl	c1e0 <mpfr_add@plt>
   3aea0:	sub	x0, x29, #0xd8
   3aea4:	mov	x1, x22
   3aea8:	bl	c990 <mpfr_cmpabs@plt>
   3aeac:	cmp	w0, #0x1
   3aeb0:	b.ge	3aecc <mpfr_zeta@@Base+0x1324>  // b.tcont
   3aeb4:	sub	x28, x28, #0x2
   3aeb8:	sub	x19, x19, #0x1
   3aebc:	sub	x22, x22, #0x20
   3aec0:	sub	w24, w24, #0x2
   3aec4:	cbnz	x19, 3ae28 <mpfr_zeta@@Base+0x1280>
   3aec8:	b	3b080 <mpfr_zeta@@Base+0x14d8>
   3aecc:	ldr	w3, [x22, #8]
   3aed0:	sub	x0, x29, #0xd8
   3aed4:	mov	x1, x22
   3aed8:	mov	w2, wzr
   3aedc:	bl	c690 <mpfr_set4@plt>
   3aee0:	b	3aeb4 <mpfr_zeta@@Base+0x130c>
   3aee4:	sub	x19, x9, #0x1
   3aee8:	ldr	x9, [sp, #96]
   3aeec:	sub	w24, w8, #0x3
   3aef0:	add	x9, x9, x22, lsl #5
   3aef4:	sub	x22, x9, #0x20
   3aef8:	sub	x0, x29, #0xf8
   3aefc:	mov	x1, x20
   3af00:	mov	x2, x28
   3af04:	mov	w3, wzr
   3af08:	bl	c270 <mpfr_add_ui@plt>
   3af0c:	sub	x0, x29, #0xd8
   3af10:	sub	x1, x29, #0xd8
   3af14:	sub	x2, x29, #0xf8
   3af18:	mov	w3, wzr
   3af1c:	bl	bda0 <mpfr_mul@plt>
   3af20:	sxtw	x2, w24
   3af24:	sub	x0, x29, #0xf8
   3af28:	mov	x1, x20
   3af2c:	mov	w3, wzr
   3af30:	bl	c270 <mpfr_add_ui@plt>
   3af34:	sub	x0, x29, #0xd8
   3af38:	sub	x1, x29, #0xd8
   3af3c:	sub	x2, x29, #0xf8
   3af40:	mov	w3, wzr
   3af44:	bl	bda0 <mpfr_mul@plt>
   3af48:	sub	x0, x29, #0xd8
   3af4c:	sub	x1, x29, #0xd8
   3af50:	mov	x2, x26
   3af54:	mov	w3, wzr
   3af58:	bl	cc40 <mpfr_div_ui@plt>
   3af5c:	sub	x0, x29, #0xd8
   3af60:	sub	x1, x29, #0xd8
   3af64:	mov	x2, x22
   3af68:	mov	w3, wzr
   3af6c:	bl	c1e0 <mpfr_add@plt>
   3af70:	sub	x0, x29, #0xd8
   3af74:	mov	x1, x22
   3af78:	bl	c990 <mpfr_cmpabs@plt>
   3af7c:	cmp	w0, #0x1
   3af80:	b.ge	3af9c <mpfr_zeta@@Base+0x13f4>  // b.tcont
   3af84:	sub	x28, x28, #0x2
   3af88:	sub	x19, x19, #0x1
   3af8c:	sub	x22, x22, #0x20
   3af90:	sub	w24, w24, #0x2
   3af94:	cbnz	x19, 3aef8 <mpfr_zeta@@Base+0x1350>
   3af98:	b	3b080 <mpfr_zeta@@Base+0x14d8>
   3af9c:	ldr	w3, [x22, #8]
   3afa0:	sub	x0, x29, #0xd8
   3afa4:	mov	x1, x22
   3afa8:	mov	w2, wzr
   3afac:	bl	c690 <mpfr_set4@plt>
   3afb0:	b	3af84 <mpfr_zeta@@Base+0x13dc>
   3afb4:	ldr	x9, [sp, #96]
   3afb8:	sub	w24, w8, #0x3
   3afbc:	add	x9, x9, x22, lsl #5
   3afc0:	sub	x22, x9, #0x20
   3afc4:	sub	x0, x29, #0xf8
   3afc8:	mov	x1, x20
   3afcc:	mov	x2, x28
   3afd0:	mov	w3, wzr
   3afd4:	bl	c270 <mpfr_add_ui@plt>
   3afd8:	sub	x0, x29, #0xd8
   3afdc:	sub	x1, x29, #0xd8
   3afe0:	sub	x2, x29, #0xf8
   3afe4:	mov	w3, wzr
   3afe8:	bl	bda0 <mpfr_mul@plt>
   3afec:	sxtw	x2, w24
   3aff0:	sub	x0, x29, #0xf8
   3aff4:	mov	x1, x20
   3aff8:	mov	w3, wzr
   3affc:	bl	c270 <mpfr_add_ui@plt>
   3b000:	sub	x0, x29, #0xd8
   3b004:	sub	x1, x29, #0xd8
   3b008:	sub	x2, x29, #0xf8
   3b00c:	mov	w3, wzr
   3b010:	bl	bda0 <mpfr_mul@plt>
   3b014:	sub	x0, x29, #0xd8
   3b018:	sub	x1, x29, #0xd8
   3b01c:	mov	x2, x26
   3b020:	mov	w3, wzr
   3b024:	bl	cc40 <mpfr_div_ui@plt>
   3b028:	sub	x0, x29, #0xd8
   3b02c:	sub	x1, x29, #0xd8
   3b030:	mov	x2, x22
   3b034:	mov	w3, wzr
   3b038:	bl	c1e0 <mpfr_add@plt>
   3b03c:	sub	x0, x29, #0xd8
   3b040:	mov	x1, x22
   3b044:	bl	c990 <mpfr_cmpabs@plt>
   3b048:	cmp	w0, #0x1
   3b04c:	b.ge	3b068 <mpfr_zeta@@Base+0x14c0>  // b.tcont
   3b050:	sub	x28, x28, #0x2
   3b054:	sub	x19, x19, #0x1
   3b058:	sub	x22, x22, #0x20
   3b05c:	sub	w24, w24, #0x2
   3b060:	cbnz	x19, 3afc4 <mpfr_zeta@@Base+0x141c>
   3b064:	b	3b080 <mpfr_zeta@@Base+0x14d8>
   3b068:	ldr	w3, [x22, #8]
   3b06c:	sub	x0, x29, #0xd8
   3b070:	mov	x1, x22
   3b074:	mov	w2, wzr
   3b078:	bl	c690 <mpfr_set4@plt>
   3b07c:	b	3b050 <mpfr_zeta@@Base+0x14a8>
   3b080:	sub	x0, x29, #0xd8
   3b084:	sub	x1, x29, #0xd8
   3b088:	mov	x2, x20
   3b08c:	mov	w3, wzr
   3b090:	bl	bda0 <mpfr_mul@plt>
   3b094:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3b098:	ldr	x2, [x2, #3944]
   3b09c:	sub	x0, x29, #0xf8
   3b0a0:	mov	x1, x20
   3b0a4:	mov	w3, wzr
   3b0a8:	bl	c1e0 <mpfr_add@plt>
   3b0ac:	sub	x0, x29, #0xf8
   3b0b0:	sub	x1, x29, #0xf8
   3b0b4:	mov	w2, wzr
   3b0b8:	bl	bdc0 <mpfr_neg@plt>
   3b0bc:	sub	x0, x29, #0x28
   3b0c0:	sub	x2, x29, #0xf8
   3b0c4:	mov	x1, x25
   3b0c8:	mov	w3, wzr
   3b0cc:	bl	c9f0 <mpfr_ui_pow@plt>
   3b0d0:	add	x0, sp, #0x178
   3b0d4:	sub	x1, x29, #0xd8
   3b0d8:	sub	x2, x29, #0x28
   3b0dc:	mov	w3, wzr
   3b0e0:	bl	bda0 <mpfr_mul@plt>
   3b0e4:	ldur	x1, [x29, #-184]
   3b0e8:	mov	x28, #0xfffffffffffffeff    	// #-257
   3b0ec:	movk	x28, #0x7fff, lsl #48
   3b0f0:	cbz	x1, 3b0fc <mpfr_zeta@@Base+0x1554>
   3b0f4:	ldur	x0, [x29, #-176]
   3b0f8:	bl	cc00 <mpfr_free_func@plt>
   3b0fc:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3b100:	ldr	x1, [x1, #3944]
   3b104:	add	x0, sp, #0x158
   3b108:	add	x2, sp, #0xf8
   3b10c:	mov	w3, wzr
   3b110:	bl	c610 <mpfr_div@plt>
   3b114:	add	x0, sp, #0x118
   3b118:	add	x2, sp, #0xf8
   3b11c:	mov	x1, x25
   3b120:	mov	w3, wzr
   3b124:	bl	c9f0 <mpfr_ui_pow@plt>
   3b128:	add	x0, sp, #0x158
   3b12c:	add	x1, sp, #0x158
   3b130:	add	x2, sp, #0x118
   3b134:	mov	w3, wzr
   3b138:	bl	c610 <mpfr_div@plt>
   3b13c:	add	x0, sp, #0x138
   3b140:	add	x1, sp, #0x138
   3b144:	add	x2, sp, #0x158
   3b148:	mov	w3, wzr
   3b14c:	bl	c1e0 <mpfr_add@plt>
   3b150:	add	x0, sp, #0x138
   3b154:	add	x1, sp, #0x138
   3b158:	add	x2, sp, #0x178
   3b15c:	mov	w3, wzr
   3b160:	bl	c1e0 <mpfr_add@plt>
   3b164:	ldr	x8, [sp, #88]
   3b168:	ldp	x26, x24, [sp, #32]
   3b16c:	cmp	w8, #0x1
   3b170:	b.lt	3b19c <mpfr_zeta@@Base+0x15f4>  // b.tstop
   3b174:	ldr	x8, [sp, #64]
   3b178:	ldr	x9, [sp, #96]
   3b17c:	mov	w8, w8
   3b180:	add	x22, x9, #0x20
   3b184:	sub	x19, x8, #0x1
   3b188:	mov	x0, x22
   3b18c:	bl	c0b0 <mpfr_clear@plt>
   3b190:	subs	x19, x19, #0x1
   3b194:	add	x22, x22, #0x20
   3b198:	b.ne	3b188 <mpfr_zeta@@Base+0x15e0>  // b.any
   3b19c:	ldr	x0, [sp, #96]
   3b1a0:	ldr	x1, [sp, #24]
   3b1a4:	bl	cc00 <mpfr_free_func@plt>
   3b1a8:	mov	w25, #0x40                  	// #64
   3b1ac:	ldr	x8, [sp, #328]
   3b1b0:	add	x9, x28, #0x105
   3b1b4:	cmp	x8, x9
   3b1b8:	b.lt	3b1ec <mpfr_zeta@@Base+0x1644>  // b.tstop
   3b1bc:	ldr	x8, [sp, #312]
   3b1c0:	ldr	x0, [sp, #336]
   3b1c4:	ldr	x2, [sp, #80]
   3b1c8:	mov	x3, x23
   3b1cc:	sub	x9, x8, #0x1
   3b1d0:	add	x8, x8, #0x3e
   3b1d4:	cmp	x9, #0x0
   3b1d8:	csel	x8, x8, x9, lt  // lt = tstop
   3b1dc:	asr	x8, x8, #6
   3b1e0:	add	x1, x8, #0x1
   3b1e4:	bl	c370 <mpfr_round_p@plt>
   3b1e8:	cbnz	w0, 3b258 <mpfr_zeta@@Base+0x16b0>
   3b1ec:	ldr	x9, [sp, #56]
   3b1f0:	sub	x8, x28, x26
   3b1f4:	cmp	x9, x8
   3b1f8:	b.gt	3b234 <mpfr_zeta@@Base+0x168c>
   3b1fc:	add	x26, x26, x9
   3b200:	cmp	x26, #0x0
   3b204:	cinc	x8, x26, lt  // lt = tstop
   3b208:	asr	x10, x8, #1
   3b20c:	b	3a80c <mpfr_zeta@@Base+0xc64>
   3b210:	mov	w8, wzr
   3b214:	b	3a910 <mpfr_zeta@@Base+0xd68>
   3b218:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b21c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b220:	mov	w1, #0xef                  	// #239
   3b224:	add	x0, x0, #0x750
   3b228:	add	x2, x2, #0x7ec
   3b22c:	bl	cb20 <mpfr_assert_fail@plt>
   3b230:	b	3a908 <mpfr_zeta@@Base+0xd60>
   3b234:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b238:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b23c:	mov	w1, #0x112                 	// #274
   3b240:	add	x0, x0, #0x750
   3b244:	add	x2, x2, #0x7f4
   3b248:	mov	x19, x9
   3b24c:	bl	cb20 <mpfr_assert_fail@plt>
   3b250:	mov	x9, x19
   3b254:	b	3b1fc <mpfr_zeta@@Base+0x1654>
   3b258:	ldr	w3, [sp, #320]
   3b25c:	add	x1, sp, #0x138
   3b260:	mov	x0, x21
   3b264:	mov	w2, w27
   3b268:	bl	c690 <mpfr_set4@plt>
   3b26c:	ldr	x1, [sp, #104]
   3b270:	mov	w22, w0
   3b274:	cbz	x1, 3b280 <mpfr_zeta@@Base+0x16d8>
   3b278:	ldr	x0, [sp, #112]
   3b27c:	bl	cc00 <mpfr_free_func@plt>
   3b280:	add	x0, sp, #0xf8
   3b284:	bl	c0b0 <mpfr_clear@plt>
   3b288:	mov	w0, w22
   3b28c:	add	sp, sp, #0x290
   3b290:	ldp	x20, x19, [sp, #144]
   3b294:	ldp	x22, x21, [sp, #128]
   3b298:	ldp	x24, x23, [sp, #112]
   3b29c:	ldp	x26, x25, [sp, #96]
   3b2a0:	ldp	x28, x27, [sp, #80]
   3b2a4:	ldp	x29, x30, [sp, #64]
   3b2a8:	ldp	d9, d8, [sp, #48]
   3b2ac:	ldp	d11, d10, [sp, #32]
   3b2b0:	ldp	d13, d12, [sp, #16]
   3b2b4:	ldp	d15, d14, [sp], #160
   3b2b8:	ret
   3b2bc:	mov	x8, xzr
   3b2c0:	b	3a750 <mpfr_zeta@@Base+0xba8>
   3b2c4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b2c8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b2cc:	add	x0, x0, #0x750
   3b2d0:	add	x2, x2, #0x7e0
   3b2d4:	mov	w1, #0xb6                  	// #182
   3b2d8:	bl	cb20 <mpfr_assert_fail@plt>
   3b2dc:	b	3a744 <mpfr_zeta@@Base+0xb9c>
   3b2e0:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3b2e4:	ldr	x1, [x1, #3944]
   3b2e8:	mov	w3, #0x1                   	// #1
   3b2ec:	mov	x0, x21
   3b2f0:	mov	w4, w27
   3b2f4:	bl	c530 <mpfr_round_near_x@plt>
   3b2f8:	mov	w22, w0
   3b2fc:	cbnz	w0, 3b288 <mpfr_zeta@@Base+0x16e0>
   3b300:	b	3a738 <mpfr_zeta@@Base+0xb90>
   3b304:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3b308:	sub	sp, sp, #0x50
   3b30c:	stp	x22, x21, [sp, #48]
   3b310:	mov	x21, x0
   3b314:	mov	x0, sp
   3b318:	stp	x29, x30, [sp, #16]
   3b31c:	stp	x24, x23, [sp, #32]
   3b320:	stp	x20, x19, [sp, #64]
   3b324:	add	x29, sp, #0x10
   3b328:	mov	w20, w5
   3b32c:	mov	x19, x4
   3b330:	mov	x22, x3
   3b334:	mov	x24, x2
   3b338:	mov	x23, x1
   3b33c:	bl	bfe0 <mpfr_mpz_init@plt>
   3b340:	mov	x0, sp
   3b344:	mov	w2, #0x3                   	// #3
   3b348:	mov	x1, x24
   3b34c:	bl	be50 <mpfr_get_z@plt>
   3b350:	mov	x0, sp
   3b354:	mov	x1, xzr
   3b358:	bl	c020 <__gmpz_tstbit@plt>
   3b35c:	cbz	w0, 3b39c <mpfr_zeta@@Base+0x17f4>
   3b360:	cmp	w20, #0x3
   3b364:	b.ne	3b370 <mpfr_zeta@@Base+0x17c8>  // b.any
   3b368:	mov	x0, x19
   3b36c:	bl	c160 <mpfr_nextabove@plt>
   3b370:	cmp	w20, #0x3
   3b374:	mov	w8, #0x2                   	// #2
   3b378:	csel	w8, w8, w20, eq  // eq = none
   3b37c:	cmp	w20, #0x2
   3b380:	mov	w9, #0x3                   	// #3
   3b384:	csel	w3, w9, w8, eq  // eq = none
   3b388:	mov	x0, x22
   3b38c:	mov	x1, x19
   3b390:	mov	x2, x24
   3b394:	bl	bda0 <mpfr_mul@plt>
   3b398:	b	3b3c0 <mpfr_zeta@@Base+0x1818>
   3b39c:	mov	x0, x22
   3b3a0:	mov	x1, x19
   3b3a4:	mov	x2, x24
   3b3a8:	mov	w3, w20
   3b3ac:	bl	bda0 <mpfr_mul@plt>
   3b3b0:	cmp	w20, #0x3
   3b3b4:	b.ne	3b3c0 <mpfr_zeta@@Base+0x1818>  // b.any
   3b3b8:	mov	x0, x19
   3b3bc:	bl	c160 <mpfr_nextabove@plt>
   3b3c0:	mov	w2, #0x1                   	// #1
   3b3c4:	mov	x0, x22
   3b3c8:	mov	x1, x22
   3b3cc:	mov	w3, wzr
   3b3d0:	bl	c8f0 <mpfr_div_2ui@plt>
   3b3d4:	mov	x0, sp
   3b3d8:	mov	w1, #0x1                   	// #1
   3b3dc:	bl	c020 <__gmpz_tstbit@plt>
   3b3e0:	cbz	w0, 3b420 <mpfr_zeta@@Base+0x1878>
   3b3e4:	cmp	w20, #0x3
   3b3e8:	mov	w8, #0x2                   	// #2
   3b3ec:	csel	w8, w8, w20, eq  // eq = none
   3b3f0:	cmp	w20, #0x2
   3b3f4:	mov	w9, #0x3                   	// #3
   3b3f8:	csel	w2, w9, w8, eq  // eq = none
   3b3fc:	mov	x0, x22
   3b400:	mov	x1, x22
   3b404:	bl	c440 <mpfr_sin@plt>
   3b408:	mov	w3, #0x1                   	// #1
   3b40c:	mov	x0, x22
   3b410:	mov	x1, x22
   3b414:	mov	w2, wzr
   3b418:	bl	c690 <mpfr_set4@plt>
   3b41c:	b	3b430 <mpfr_zeta@@Base+0x1888>
   3b420:	mov	x0, x22
   3b424:	mov	x1, x22
   3b428:	mov	w2, w20
   3b42c:	bl	c440 <mpfr_sin@plt>
   3b430:	mov	x0, sp
   3b434:	bl	c1b0 <mpfr_mpz_clear@plt>
   3b438:	mov	x0, x21
   3b43c:	mov	x1, x23
   3b440:	mov	w2, w20
   3b444:	bl	3a6bc <mpfr_zeta@@Base+0xb14>
   3b448:	mov	x0, x21
   3b44c:	mov	x1, x21
   3b450:	mov	x2, x22
   3b454:	mov	w3, w20
   3b458:	bl	bda0 <mpfr_mul@plt>
   3b45c:	mov	x0, x21
   3b460:	mov	x1, x21
   3b464:	mov	w2, w20
   3b468:	bl	c0d0 <mpfr_log@plt>
   3b46c:	mov	x0, x22
   3b470:	mov	x1, x23
   3b474:	mov	w2, w20
   3b478:	bl	c5f0 <mpfr_lngamma@plt>
   3b47c:	mov	x0, x21
   3b480:	mov	x1, x21
   3b484:	mov	x2, x22
   3b488:	mov	w3, w20
   3b48c:	bl	c1e0 <mpfr_add@plt>
   3b490:	cmp	w20, #0x3
   3b494:	mov	w8, #0x2                   	// #2
   3b498:	csel	w8, w8, w20, eq  // eq = none
   3b49c:	cmp	w20, #0x2
   3b4a0:	mov	w9, #0x3                   	// #3
   3b4a4:	csel	w24, w9, w8, eq  // eq = none
   3b4a8:	mov	w2, #0x1                   	// #1
   3b4ac:	mov	x0, x22
   3b4b0:	mov	x1, x19
   3b4b4:	mov	w3, w24
   3b4b8:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b4bc:	mov	x0, x22
   3b4c0:	mov	x1, x22
   3b4c4:	mov	w2, w24
   3b4c8:	bl	c0d0 <mpfr_log@plt>
   3b4cc:	mov	x0, x22
   3b4d0:	mov	x1, x22
   3b4d4:	mov	x2, x23
   3b4d8:	mov	w3, w24
   3b4dc:	bl	bda0 <mpfr_mul@plt>
   3b4e0:	mov	x0, x21
   3b4e4:	mov	x1, x21
   3b4e8:	mov	x2, x22
   3b4ec:	mov	w3, w20
   3b4f0:	bl	bbc0 <mpfr_sub@plt>
   3b4f4:	mov	x0, x21
   3b4f8:	mov	x1, x21
   3b4fc:	mov	w2, w20
   3b500:	bl	c740 <mpfr_exp@plt>
   3b504:	cmp	w20, #0x3
   3b508:	b.ne	3b514 <mpfr_zeta@@Base+0x196c>  // b.any
   3b50c:	mov	x0, x19
   3b510:	bl	be20 <mpfr_nextbelow@plt>
   3b514:	ldp	x20, x19, [sp, #64]
   3b518:	ldp	x22, x21, [sp, #48]
   3b51c:	ldp	x24, x23, [sp, #32]
   3b520:	ldp	x29, x30, [sp, #16]
   3b524:	add	sp, sp, #0x50
   3b528:	ret

000000000003b52c <mpfr_cmp_d@@Base>:
   3b52c:	sub	sp, sp, #0x80
   3b530:	stp	x29, x30, [sp, #48]
   3b534:	stp	x26, x25, [sp, #64]
   3b538:	stp	x24, x23, [sp, #80]
   3b53c:	stp	x22, x21, [sp, #96]
   3b540:	stp	x20, x19, [sp, #112]
   3b544:	add	x29, sp, #0x30
   3b548:	mov	x19, x0
   3b54c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b550:	ldr	x1, [x0, #2640]
   3b554:	add	x0, x0, #0xa50
   3b558:	blr	x1
   3b55c:	mrs	x23, tpidr_el0
   3b560:	ldr	w24, [x23, x0]
   3b564:	mov	x20, x0
   3b568:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b56c:	ldr	x1, [x0, #2576]
   3b570:	add	x0, x0, #0xa10
   3b574:	blr	x1
   3b578:	ldr	x25, [x23, x0]
   3b57c:	mov	x21, x0
   3b580:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b584:	ldr	x1, [x0, #2608]
   3b588:	add	x0, x0, #0xa30
   3b58c:	blr	x1
   3b590:	ldr	x26, [x23, x0]
   3b594:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   3b598:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   3b59c:	mov	x22, x0
   3b5a0:	mov	w10, #0x35                  	// #53
   3b5a4:	add	x11, sp, #0x8
   3b5a8:	str	x8, [x23, x21]
   3b5ac:	str	x9, [x23, x0]
   3b5b0:	mov	w8, #0x1                   	// #1
   3b5b4:	add	x0, sp, #0x10
   3b5b8:	mov	w1, wzr
   3b5bc:	str	x10, [sp, #16]
   3b5c0:	str	x11, [sp, #40]
   3b5c4:	str	w8, [sp, #24]
   3b5c8:	bl	be90 <mpfr_set_d@plt>
   3b5cc:	add	x1, sp, #0x10
   3b5d0:	mov	w2, #0x1                   	// #1
   3b5d4:	mov	x0, x19
   3b5d8:	str	wzr, [x23, x20]
   3b5dc:	bl	c980 <mpfr_cmp3@plt>
   3b5e0:	ldr	w8, [x23, x20]
   3b5e4:	str	x25, [x23, x21]
   3b5e8:	str	x26, [x23, x22]
   3b5ec:	ldp	x22, x21, [sp, #96]
   3b5f0:	orr	w8, w8, w24
   3b5f4:	str	w8, [x23, x20]
   3b5f8:	ldp	x20, x19, [sp, #112]
   3b5fc:	ldp	x24, x23, [sp, #80]
   3b600:	ldp	x26, x25, [sp, #64]
   3b604:	ldp	x29, x30, [sp, #48]
   3b608:	add	sp, sp, #0x80
   3b60c:	ret

000000000003b610 <mpfr_erf@@Base>:
   3b610:	str	d12, [sp, #-144]!
   3b614:	stp	d11, d10, [sp, #16]
   3b618:	stp	d9, d8, [sp, #32]
   3b61c:	stp	x29, x30, [sp, #48]
   3b620:	stp	x28, x27, [sp, #64]
   3b624:	stp	x26, x25, [sp, #80]
   3b628:	stp	x24, x23, [sp, #96]
   3b62c:	stp	x22, x21, [sp, #112]
   3b630:	stp	x20, x19, [sp, #128]
   3b634:	mov	x29, sp
   3b638:	sub	sp, sp, #0x190
   3b63c:	ldr	x9, [x1, #16]
   3b640:	mov	x10, #0xfffffffffffffeff    	// #-257
   3b644:	movk	x10, #0x7fff, lsl #48
   3b648:	add	x8, x10, #0x105
   3b64c:	mov	x21, x1
   3b650:	cmp	x9, x8
   3b654:	mov	x27, x0
   3b658:	b.lt	3bdec <mpfr_erf@@Base+0x7dc>  // b.tstop
   3b65c:	mov	w28, w2
   3b660:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b664:	ldr	x1, [x0, #2640]
   3b668:	add	x0, x0, #0xa50
   3b66c:	blr	x1
   3b670:	mrs	x26, tpidr_el0
   3b674:	ldr	w19, [x26, x0]
   3b678:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b67c:	ldr	x1, [x0, #2576]
   3b680:	add	x0, x0, #0xa10
   3b684:	blr	x1
   3b688:	ldr	x20, [x26, x0]
   3b68c:	mov	x8, x0
   3b690:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b694:	ldr	x1, [x0, #2608]
   3b698:	add	x0, x0, #0xa30
   3b69c:	blr	x1
   3b6a0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   3b6a4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   3b6a8:	ldr	x24, [x26, x0]
   3b6ac:	str	x10, [x26, x8]
   3b6b0:	str	x11, [x26, x0]
   3b6b4:	ldr	x8, [x27]
   3b6b8:	cmp	x8, #0x0
   3b6bc:	cinc	x10, x8, lt  // lt = tstop
   3b6c0:	neg	x10, x10, asr #1
   3b6c4:	cmp	x9, x10
   3b6c8:	b.ge	3b850 <mpfr_erf@@Base+0x240>  // b.tcont
   3b6cc:	add	x1, x8, #0x11
   3b6d0:	add	x0, sp, #0x78
   3b6d4:	bl	ca60 <mpfr_init2@plt>
   3b6d8:	ldr	x8, [x27]
   3b6dc:	sub	x0, x29, #0x28
   3b6e0:	add	x1, x8, #0x11
   3b6e4:	bl	ca60 <mpfr_init2@plt>
   3b6e8:	add	x0, sp, #0x78
   3b6ec:	mov	w3, #0x2                   	// #2
   3b6f0:	mov	x1, x21
   3b6f4:	mov	x2, x21
   3b6f8:	mov	w23, #0x2                   	// #2
   3b6fc:	bl	bda0 <mpfr_mul@plt>
   3b700:	add	x0, sp, #0x78
   3b704:	add	x1, sp, #0x78
   3b708:	mov	w2, #0x3                   	// #3
   3b70c:	mov	w3, #0x2                   	// #2
   3b710:	bl	cc40 <mpfr_div_ui@plt>
   3b714:	add	x0, sp, #0x78
   3b718:	add	x2, sp, #0x78
   3b71c:	mov	w1, #0x1                   	// #1
   3b720:	mov	w3, #0x1                   	// #1
   3b724:	bl	ca30 <mpfr_ui_sub@plt>
   3b728:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3b72c:	ldr	x1, [x0, #2688]
   3b730:	add	x0, x0, #0xa80
   3b734:	blr	x1
   3b738:	add	x22, x26, x0
   3b73c:	sub	x0, x29, #0x28
   3b740:	mov	w2, #0x2                   	// #2
   3b744:	mov	x1, x22
   3b748:	bl	c380 <mpfr_cache@plt>
   3b74c:	sub	x0, x29, #0x28
   3b750:	sub	x1, x29, #0x28
   3b754:	mov	w2, #0x2                   	// #2
   3b758:	bl	c920 <mpfr_sqrt@plt>
   3b75c:	add	x0, sp, #0x78
   3b760:	add	x1, sp, #0x78
   3b764:	sub	x2, x29, #0x28
   3b768:	mov	w3, #0x1                   	// #1
   3b76c:	bl	c610 <mpfr_div@plt>
   3b770:	add	x0, sp, #0x78
   3b774:	add	x1, sp, #0x78
   3b778:	mov	w2, #0x1                   	// #1
   3b77c:	mov	w3, #0x1                   	// #1
   3b780:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b784:	add	x0, sp, #0x78
   3b788:	add	x1, sp, #0x78
   3b78c:	mov	w3, #0x1                   	// #1
   3b790:	mov	x2, x21
   3b794:	bl	bda0 <mpfr_mul@plt>
   3b798:	sub	x0, x29, #0x28
   3b79c:	mov	w2, #0x3                   	// #3
   3b7a0:	mov	x1, x22
   3b7a4:	bl	c380 <mpfr_cache@plt>
   3b7a8:	sub	x0, x29, #0x28
   3b7ac:	sub	x1, x29, #0x28
   3b7b0:	mov	w2, #0x3                   	// #3
   3b7b4:	bl	c920 <mpfr_sqrt@plt>
   3b7b8:	sub	x0, x29, #0x28
   3b7bc:	sub	x1, x29, #0x28
   3b7c0:	mov	w2, #0x1                   	// #1
   3b7c4:	mov	w3, #0x3                   	// #3
   3b7c8:	bl	c8f0 <mpfr_div_2ui@plt>
   3b7cc:	ldr	w8, [x21, #8]
   3b7d0:	sub	x0, x29, #0x28
   3b7d4:	sub	x2, x29, #0x28
   3b7d8:	mov	x1, x21
   3b7dc:	cmp	w8, #0x0
   3b7e0:	cinc	w3, w23, le
   3b7e4:	bl	c610 <mpfr_div@plt>
   3b7e8:	ldr	x1, [x27]
   3b7ec:	add	x0, sp, #0x78
   3b7f0:	mov	w2, w28
   3b7f4:	bl	c960 <mpfr_prec_round@plt>
   3b7f8:	ldr	x1, [x27]
   3b7fc:	mov	w22, w0
   3b800:	sub	x0, x29, #0x28
   3b804:	mov	w2, w28
   3b808:	bl	c960 <mpfr_prec_round@plt>
   3b80c:	cmp	w22, #0x0
   3b810:	cset	w8, gt
   3b814:	csinv	w8, w8, wzr, ge  // ge = tcont
   3b818:	cmp	w0, #0x0
   3b81c:	cset	w9, gt
   3b820:	csinv	w9, w9, wzr, ge  // ge = tcont
   3b824:	cmp	w8, w9
   3b828:	b.ne	3b840 <mpfr_erf@@Base+0x230>  // b.any
   3b82c:	add	x0, sp, #0x78
   3b830:	sub	x1, x29, #0x28
   3b834:	mov	w2, #0x1                   	// #1
   3b838:	bl	c980 <mpfr_cmp3@plt>
   3b83c:	cbz	w0, 3bdc4 <mpfr_erf@@Base+0x7b4>
   3b840:	add	x0, sp, #0x78
   3b844:	bl	c0b0 <mpfr_clear@plt>
   3b848:	sub	x0, x29, #0x28
   3b84c:	bl	c0b0 <mpfr_clear@plt>
   3b850:	mov	w8, #0x35                  	// #53
   3b854:	add	x9, x29, #0x8
   3b858:	mov	w10, #0x1                   	// #1
   3b85c:	str	x8, [sp, #56]
   3b860:	str	x9, [sp, #80]
   3b864:	str	w10, [sp, #64]
   3b868:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3b86c:	ldr	x2, [x2, #4048]
   3b870:	add	x0, sp, #0x38
   3b874:	mov	w3, #0x1                   	// #1
   3b878:	mov	x1, x21
   3b87c:	bl	c610 <mpfr_div@plt>
   3b880:	add	x0, sp, #0x38
   3b884:	add	x1, sp, #0x38
   3b888:	mov	w3, #0x1                   	// #1
   3b88c:	mov	x2, x21
   3b890:	bl	bda0 <mpfr_mul@plt>
   3b894:	ldr	x8, [x27]
   3b898:	add	x0, sp, #0x38
   3b89c:	mov	x2, xzr
   3b8a0:	add	x1, x8, #0x1
   3b8a4:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   3b8a8:	cmp	w0, #0x1
   3b8ac:	b.ge	3be4c <mpfr_erf@@Base+0x83c>  // b.tcont
   3b8b0:	mov	x0, x21
   3b8b4:	mov	w1, wzr
   3b8b8:	str	x20, [sp, #16]
   3b8bc:	str	w19, [sp, #28]
   3b8c0:	bl	bd80 <mpfr_get_d@plt>
   3b8c4:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3b8c8:	ldr	d1, [x8, #1840]
   3b8cc:	ldr	x23, [x27]
   3b8d0:	fmul	d8, d0, d0
   3b8d4:	str	x24, [sp, #8]
   3b8d8:	fdiv	d0, d8, d1
   3b8dc:	subs	x19, x23, #0x1
   3b8e0:	fcvtzs	x20, d0
   3b8e4:	b.eq	3be8c <mpfr_erf@@Base+0x87c>  // b.none
   3b8e8:	b.le	3be94 <mpfr_erf@@Base+0x884>
   3b8ec:	clz	x8, x19
   3b8f0:	mov	w9, #0x40                  	// #64
   3b8f4:	sub	x8, x9, x8
   3b8f8:	add	x9, x20, x23
   3b8fc:	add	x8, x9, x8
   3b900:	add	x25, x8, #0x8
   3b904:	mov	x8, #0xfffffffffffffeff    	// #-257
   3b908:	movk	x8, #0x7fff, lsl #48
   3b90c:	cmp	x25, x8
   3b910:	b.gt	3bf1c <mpfr_erf@@Base+0x90c>
   3b914:	sub	x8, x25, #0x1
   3b918:	add	x9, x25, #0x3e
   3b91c:	cmp	x8, #0x0
   3b920:	csel	x8, x9, x8, lt  // lt = tstop
   3b924:	asr	x8, x8, #6
   3b928:	cmp	x25, #0x101
   3b92c:	add	x24, x8, #0x1
   3b930:	str	x27, [sp, #32]
   3b934:	b.lt	3b948 <mpfr_erf@@Base+0x338>  // b.tstop
   3b938:	lsl	x22, x24, #5
   3b93c:	mov	x0, x22
   3b940:	bl	ccd0 <mpfr_allocate_func@plt>
   3b944:	b	3b954 <mpfr_erf@@Base+0x344>
   3b948:	add	x8, sp, #0x78
   3b94c:	mov	x22, xzr
   3b950:	add	x0, x8, #0x10
   3b954:	add	x8, x0, x24, lsl #3
   3b958:	add	x9, x0, x24, lsl #4
   3b95c:	mov	w10, #0x18                  	// #24
   3b960:	cmp	w28, #0x0
   3b964:	str	w28, [sp, #52]
   3b968:	mov	w19, #0x1                   	// #1
   3b96c:	mov	w11, #0x40                  	// #64
   3b970:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   3b974:	fmov	d9, #8.000000000000000000e+00
   3b978:	fmov	d10, #1.000000000000000000e+00
   3b97c:	fmov	d11, #5.000000000000000000e-01
   3b980:	mov	x27, #0x3ef0000000000000    	// #4535124824762089472
   3b984:	stp	x8, x25, [x29, #-48]
   3b988:	stp	x9, x25, [x29, #-80]
   3b98c:	madd	x8, x24, x10, x0
   3b990:	cinc	x9, x23, eq  // eq = none
   3b994:	stp	x22, x0, [sp, #120]
   3b998:	stur	x0, [x29, #-16]
   3b99c:	stp	x8, x25, [x29, #-112]
   3b9a0:	stur	x25, [x29, #-136]
   3b9a4:	str	x11, [sp]
   3b9a8:	stur	w19, [x29, #-32]
   3b9ac:	stur	w19, [x29, #-64]
   3b9b0:	stur	w19, [x29, #-96]
   3b9b4:	stur	w19, [x29, #-128]
   3b9b8:	str	x9, [sp, #40]
   3b9bc:	sub	x0, x29, #0x28
   3b9c0:	mov	w3, #0x2                   	// #2
   3b9c4:	mov	x1, x21
   3b9c8:	mov	x2, x21
   3b9cc:	bl	bda0 <mpfr_mul@plt>
   3b9d0:	sub	x0, x29, #0x48
   3b9d4:	mov	w1, #0x1                   	// #1
   3b9d8:	mov	x2, xzr
   3b9dc:	mov	w3, wzr
   3b9e0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   3b9e4:	sub	x0, x29, #0x68
   3b9e8:	mov	w1, #0x1                   	// #1
   3b9ec:	mov	x2, xzr
   3b9f0:	mov	w3, wzr
   3b9f4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   3b9f8:	add	x0, sp, #0x58
   3b9fc:	mov	w1, #0x35                  	// #53
   3ba00:	bl	ca60 <mpfr_init2@plt>
   3ba04:	str	x28, [sp, #104]
   3ba08:	neg	x28, x25
   3ba0c:	mov	w23, #0x1                   	// #1
   3ba10:	str	w19, [sp, #96]
   3ba14:	b	3ba30 <mpfr_erf@@Base+0x420>
   3ba18:	fadd	d0, d0, d11
   3ba1c:	add	x0, sp, #0x58
   3ba20:	add	x1, sp, #0x58
   3ba24:	mov	w2, #0x2                   	// #2
   3ba28:	bl	c3a0 <mpfr_add_d@plt>
   3ba2c:	add	w23, w23, #0x1
   3ba30:	sub	x0, x29, #0x68
   3ba34:	sub	x1, x29, #0x28
   3ba38:	sub	x2, x29, #0x68
   3ba3c:	mov	w3, #0x2                   	// #2
   3ba40:	bl	bda0 <mpfr_mul@plt>
   3ba44:	mov	w2, w23
   3ba48:	sub	x0, x29, #0x68
   3ba4c:	sub	x1, x29, #0x68
   3ba50:	mov	w3, #0x2                   	// #2
   3ba54:	bl	cc40 <mpfr_div_ui@plt>
   3ba58:	mov	w2, #0x1                   	// #1
   3ba5c:	bfi	w2, w23, #1, #31
   3ba60:	sub	x0, x29, #0x88
   3ba64:	sub	x1, x29, #0x68
   3ba68:	mov	w3, #0x2                   	// #2
   3ba6c:	bl	cc40 <mpfr_div_ui@plt>
   3ba70:	ldur	x24, [x29, #-56]
   3ba74:	sub	x0, x29, #0x48
   3ba78:	sub	x1, x29, #0x48
   3ba7c:	sub	x2, x29, #0x88
   3ba80:	mov	w3, wzr
   3ba84:	tbnz	w23, #0, 3ba90 <mpfr_erf@@Base+0x480>
   3ba88:	bl	c1e0 <mpfr_add@plt>
   3ba8c:	b	3ba94 <mpfr_erf@@Base+0x484>
   3ba90:	bl	bbc0 <mpfr_sub@plt>
   3ba94:	ldur	x22, [x29, #-56]
   3ba98:	ldur	x19, [x29, #-120]
   3ba9c:	ucvtf	d12, w23
   3baa0:	fcmp	d8, d12
   3baa4:	sub	x20, x19, x22
   3baa8:	b.hi	3bab4 <mpfr_erf@@Base+0x4a4>  // b.pmore
   3baac:	cmp	x20, x28
   3bab0:	b.lt	3bb1c <mpfr_erf@@Base+0x50c>  // b.tstop
   3bab4:	sub	x2, x24, x22
   3bab8:	add	x0, sp, #0x58
   3babc:	add	x1, sp, #0x58
   3bac0:	mov	w3, #0x2                   	// #2
   3bac4:	bl	bbe0 <mpfr_mul_2si@plt>
   3bac8:	fmul	d0, d12, d9
   3bacc:	cmp	x20, #0x1
   3bad0:	fadd	d0, d0, d10
   3bad4:	b.ge	3bb08 <mpfr_erf@@Base+0x4f8>  // b.tcont
   3bad8:	cmn	x20, #0x10
   3badc:	b.gt	3baf4 <mpfr_erf@@Base+0x4e4>
   3bae0:	fmov	d1, x27
   3bae4:	cmn	x20, #0x1f
   3bae8:	add	x20, x20, #0x10
   3baec:	fmul	d0, d0, d1
   3baf0:	b.lt	3bae0 <mpfr_erf@@Base+0x4d0>  // b.tstop
   3baf4:	cbz	x20, 3ba18 <mpfr_erf@@Base+0x408>
   3baf8:	adds	x20, x20, #0x1
   3bafc:	fmul	d0, d0, d11
   3bb00:	b.cc	3baf8 <mpfr_erf@@Base+0x4e8>  // b.lo, b.ul, b.last
   3bb04:	b	3ba18 <mpfr_erf@@Base+0x408>
   3bb08:	sub	x8, x22, x19
   3bb0c:	adds	x8, x8, #0x1
   3bb10:	fadd	d0, d0, d0
   3bb14:	b.cc	3bb0c <mpfr_erf@@Base+0x4fc>  // b.lo, b.ul, b.last
   3bb18:	b	3ba18 <mpfr_erf@@Base+0x408>
   3bb1c:	sub	x0, x29, #0x48
   3bb20:	sub	x2, x29, #0x48
   3bb24:	mov	w3, #0x2                   	// #2
   3bb28:	mov	x1, x21
   3bb2c:	bl	bda0 <mpfr_mul@plt>
   3bb30:	ldur	x8, [x29, #-56]
   3bb34:	add	x8, x8, #0x1
   3bb38:	stur	x8, [x29, #-56]
   3bb3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3bb40:	ldr	x1, [x0, #2688]
   3bb44:	add	x0, x0, #0xa80
   3bb48:	blr	x1
   3bb4c:	add	x1, x26, x0
   3bb50:	sub	x0, x29, #0x68
   3bb54:	mov	w2, #0x1                   	// #1
   3bb58:	bl	c380 <mpfr_cache@plt>
   3bb5c:	sub	x0, x29, #0x68
   3bb60:	sub	x1, x29, #0x68
   3bb64:	mov	w2, #0x1                   	// #1
   3bb68:	bl	c920 <mpfr_sqrt@plt>
   3bb6c:	sub	x0, x29, #0x48
   3bb70:	sub	x1, x29, #0x48
   3bb74:	sub	x2, x29, #0x68
   3bb78:	mov	w3, wzr
   3bb7c:	bl	c610 <mpfr_div@plt>
   3bb80:	add	x0, sp, #0x58
   3bb84:	add	x1, sp, #0x58
   3bb88:	mov	w2, #0x2                   	// #2
   3bb8c:	mov	w3, #0x2                   	// #2
   3bb90:	bl	c2c0 <mpfr_mul_2ui@plt>
   3bb94:	add	x0, sp, #0x58
   3bb98:	add	x1, sp, #0x58
   3bb9c:	mov	w2, #0xb                   	// #11
   3bba0:	mov	w3, #0x2                   	// #2
   3bba4:	bl	c270 <mpfr_add_ui@plt>
   3bba8:	ldr	x20, [sp, #104]
   3bbac:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3bbb0:	cmp	x20, x8
   3bbb4:	b.eq	3bc70 <mpfr_erf@@Base+0x660>  // b.none
   3bbb8:	add	x0, sp, #0x58
   3bbbc:	bl	c0b0 <mpfr_clear@plt>
   3bbc0:	ldur	x8, [x29, #-56]
   3bbc4:	mov	x19, #0xfffffffffffffeff    	// #-257
   3bbc8:	ldr	w28, [sp, #52]
   3bbcc:	movk	x19, #0x7fff, lsl #48
   3bbd0:	add	x9, x19, #0x105
   3bbd4:	cmp	x8, x9
   3bbd8:	b.lt	3bc0c <mpfr_erf@@Base+0x5fc>  // b.tstop
   3bbdc:	ldur	x8, [x29, #-72]
   3bbe0:	ldur	x0, [x29, #-48]
   3bbe4:	ldr	x3, [sp, #40]
   3bbe8:	sub	x2, x25, x20
   3bbec:	sub	x9, x8, #0x1
   3bbf0:	add	x8, x8, #0x3e
   3bbf4:	cmp	x9, #0x0
   3bbf8:	csel	x8, x8, x9, lt  // lt = tstop
   3bbfc:	asr	x8, x8, #6
   3bc00:	add	x1, x8, #0x1
   3bc04:	bl	c370 <mpfr_round_p@plt>
   3bc08:	cbnz	w0, 3bcf4 <mpfr_erf@@Base+0x6e4>
   3bc0c:	ldr	x20, [sp]
   3bc10:	sub	x8, x19, x25
   3bc14:	cmp	x20, x8
   3bc18:	b.gt	3bcd8 <mpfr_erf@@Base+0x6c8>
   3bc1c:	add	x25, x25, x20
   3bc20:	cmp	x25, #0x0
   3bc24:	cinc	x8, x25, lt  // lt = tstop
   3bc28:	cmp	x25, x19
   3bc2c:	mov	w19, #0x1                   	// #1
   3bc30:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   3bc34:	b.gt	3bf1c <mpfr_erf@@Base+0x90c>
   3bc38:	asr	x22, x8, #1
   3bc3c:	sub	x8, x25, #0x1
   3bc40:	add	x9, x25, #0x3e
   3bc44:	cmp	x8, #0x0
   3bc48:	ldr	x1, [sp, #120]
   3bc4c:	csel	x8, x9, x8, lt  // lt = tstop
   3bc50:	asr	x8, x8, #6
   3bc54:	add	x20, x8, #0x1
   3bc58:	lsl	x2, x20, #5
   3bc5c:	str	x2, [sp, #120]
   3bc60:	cbz	x1, 3bc90 <mpfr_erf@@Base+0x680>
   3bc64:	ldr	x0, [sp, #128]
   3bc68:	bl	c200 <mpfr_reallocate_func@plt>
   3bc6c:	b	3bc98 <mpfr_erf@@Base+0x688>
   3bc70:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3bc74:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3bc78:	mov	w1, #0xf7                  	// #247
   3bc7c:	add	x0, x0, #0x837
   3bc80:	add	x2, x2, #0x83d
   3bc84:	bl	cb20 <mpfr_assert_fail@plt>
   3bc88:	ldr	x20, [sp, #104]
   3bc8c:	b	3bbb8 <mpfr_erf@@Base+0x5a8>
   3bc90:	mov	x0, x2
   3bc94:	bl	ccd0 <mpfr_allocate_func@plt>
   3bc98:	mov	w10, #0x18                  	// #24
   3bc9c:	add	x8, x0, x20, lsl #3
   3bca0:	add	x9, x0, x20, lsl #4
   3bca4:	madd	x10, x20, x10, x0
   3bca8:	str	x22, [sp]
   3bcac:	str	x0, [sp, #128]
   3bcb0:	stur	x0, [x29, #-16]
   3bcb4:	stp	x8, x25, [x29, #-48]
   3bcb8:	stur	w19, [x29, #-32]
   3bcbc:	stp	x9, x25, [x29, #-80]
   3bcc0:	stur	w19, [x29, #-64]
   3bcc4:	stp	x10, x25, [x29, #-112]
   3bcc8:	stur	w19, [x29, #-96]
   3bccc:	stur	x25, [x29, #-136]
   3bcd0:	stur	w19, [x29, #-128]
   3bcd4:	b	3b9bc <mpfr_erf@@Base+0x3ac>
   3bcd8:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3bcdc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3bce0:	mov	w1, #0xff                  	// #255
   3bce4:	add	x0, x0, #0x837
   3bce8:	add	x2, x2, #0x287
   3bcec:	bl	cb20 <mpfr_assert_fail@plt>
   3bcf0:	b	3bc1c <mpfr_erf@@Base+0x60c>
   3bcf4:	ldr	x27, [sp, #32]
   3bcf8:	ldur	w3, [x29, #-64]
   3bcfc:	sub	x1, x29, #0x48
   3bd00:	mov	w2, w28
   3bd04:	mov	x0, x27
   3bd08:	bl	c690 <mpfr_set4@plt>
   3bd0c:	ldr	x1, [sp, #120]
   3bd10:	mov	w22, w0
   3bd14:	cbz	x1, 3bd20 <mpfr_erf@@Base+0x710>
   3bd18:	ldr	x0, [sp, #128]
   3bd1c:	bl	cc00 <mpfr_free_func@plt>
   3bd20:	ldr	w19, [sp, #28]
   3bd24:	ldp	x24, x20, [sp, #8]
   3bd28:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3bd2c:	ldr	x1, [x0, #2640]
   3bd30:	add	x0, x0, #0xa50
   3bd34:	blr	x1
   3bd38:	str	w19, [x26, x0]
   3bd3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3bd40:	ldr	x1, [x0, #2576]
   3bd44:	add	x0, x0, #0xa10
   3bd48:	blr	x1
   3bd4c:	str	x20, [x26, x0]
   3bd50:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3bd54:	ldr	x1, [x0, #2608]
   3bd58:	add	x0, x0, #0xa30
   3bd5c:	blr	x1
   3bd60:	str	x24, [x26, x0]
   3bd64:	ldr	x8, [x27, #16]
   3bd68:	cmp	x8, x24
   3bd6c:	b.gt	3be38 <mpfr_erf@@Base+0x828>
   3bd70:	cmp	x8, x20
   3bd74:	b.lt	3be38 <mpfr_erf@@Base+0x828>  // b.tstop
   3bd78:	cbz	w22, 3bd94 <mpfr_erf@@Base+0x784>
   3bd7c:	orr	w8, w19, #0x8
   3bd80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3bd84:	ldr	x1, [x0, #2640]
   3bd88:	add	x0, x0, #0xa50
   3bd8c:	blr	x1
   3bd90:	str	w8, [x26, x0]
   3bd94:	mov	w0, w22
   3bd98:	add	sp, sp, #0x190
   3bd9c:	ldp	x20, x19, [sp, #128]
   3bda0:	ldp	x22, x21, [sp, #112]
   3bda4:	ldp	x24, x23, [sp, #96]
   3bda8:	ldp	x26, x25, [sp, #80]
   3bdac:	ldp	x28, x27, [sp, #64]
   3bdb0:	ldp	x29, x30, [sp, #48]
   3bdb4:	ldp	d9, d8, [sp, #32]
   3bdb8:	ldp	d11, d10, [sp, #16]
   3bdbc:	ldr	d12, [sp], #144
   3bdc0:	ret
   3bdc4:	ldur	w3, [x29, #-32]
   3bdc8:	sub	x1, x29, #0x28
   3bdcc:	mov	x0, x27
   3bdd0:	mov	w2, w28
   3bdd4:	bl	c690 <mpfr_set4@plt>
   3bdd8:	add	x0, sp, #0x78
   3bddc:	bl	c0b0 <mpfr_clear@plt>
   3bde0:	sub	x0, x29, #0x28
   3bde4:	bl	c0b0 <mpfr_clear@plt>
   3bde8:	b	3bd28 <mpfr_erf@@Base+0x718>
   3bdec:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3bdf0:	cmp	x9, x8
   3bdf4:	b.eq	3bee0 <mpfr_erf@@Base+0x8d0>  // b.none
   3bdf8:	mov	x8, #0x2                   	// #2
   3bdfc:	movk	x8, #0x8000, lsl #48
   3be00:	cmp	x9, x8
   3be04:	b.ne	3bef8 <mpfr_erf@@Base+0x8e8>  // b.any
   3be08:	add	x8, x10, #0x103
   3be0c:	str	x8, [x27, #16]
   3be10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3be14:	ldr	x1, [x0, #2640]
   3be18:	add	x0, x0, #0xa50
   3be1c:	blr	x1
   3be20:	mrs	x8, tpidr_el0
   3be24:	ldr	w9, [x8, x0]
   3be28:	mov	w22, wzr
   3be2c:	orr	w9, w9, #0x4
   3be30:	str	w9, [x8, x0]
   3be34:	b	3bd94 <mpfr_erf@@Base+0x784>
   3be38:	mov	x0, x27
   3be3c:	mov	w1, w22
   3be40:	mov	w2, w28
   3be44:	bl	cb10 <mpfr_check_range@plt>
   3be48:	b	3bf0c <mpfr_erf@@Base+0x8fc>
   3be4c:	ldr	w22, [x21, #8]
   3be50:	cmp	w22, #0x0
   3be54:	b.le	3beb0 <mpfr_erf@@Base+0x8a0>
   3be58:	cmp	w28, #0x4
   3be5c:	b.hi	3bec4 <mpfr_erf@@Base+0x8b4>  // b.pmore
   3be60:	mov	w8, #0x1                   	// #1
   3be64:	lsl	w8, w8, w28
   3be68:	mov	w9, #0x15                  	// #21
   3be6c:	tst	w8, w9
   3be70:	b.eq	3bec4 <mpfr_erf@@Base+0x8b4>  // b.none
   3be74:	mov	w3, w28
   3be78:	sxtw	x1, w22
   3be7c:	mov	x0, x27
   3be80:	mov	x2, xzr
   3be84:	bl	bae0 <mpfr_set_si_2exp@plt>
   3be88:	b	3bd28 <mpfr_erf@@Base+0x718>
   3be8c:	mov	x8, xzr
   3be90:	b	3b8f8 <mpfr_erf@@Base+0x2e8>
   3be94:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3be98:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3be9c:	add	x0, x0, #0x837
   3bea0:	add	x2, x2, #0x1ec
   3bea4:	mov	w1, #0xc6                  	// #198
   3bea8:	bl	cb20 <mpfr_assert_fail@plt>
   3beac:	b	3b8ec <mpfr_erf@@Base+0x2dc>
   3beb0:	cbz	w28, 3be74 <mpfr_erf@@Base+0x864>
   3beb4:	cmp	w28, #0x3
   3beb8:	b.eq	3bf14 <mpfr_erf@@Base+0x904>  // b.none
   3bebc:	cmp	w28, #0x4
   3bec0:	b.eq	3be74 <mpfr_erf@@Base+0x864>  // b.none
   3bec4:	mov	x0, x27
   3bec8:	mov	x1, xzr
   3becc:	neg	w22, w22
   3bed0:	bl	c110 <mpfr_setmax@plt>
   3bed4:	ldr	w8, [x21, #8]
   3bed8:	str	w8, [x27, #8]
   3bedc:	b	3bd28 <mpfr_erf@@Base+0x718>
   3bee0:	ldrsw	x1, [x21, #8]
   3bee4:	mov	x0, x27
   3bee8:	mov	x2, xzr
   3beec:	mov	w3, wzr
   3bef0:	bl	bae0 <mpfr_set_si_2exp@plt>
   3bef4:	b	3bf0c <mpfr_erf@@Base+0x8fc>
   3bef8:	ldr	w3, [x21, #8]
   3befc:	mov	x0, x27
   3bf00:	mov	x1, x21
   3bf04:	mov	w2, wzr
   3bf08:	bl	c690 <mpfr_set4@plt>
   3bf0c:	mov	w22, w0
   3bf10:	b	3bd94 <mpfr_erf@@Base+0x784>
   3bf14:	mov	w3, #0x2                   	// #2
   3bf18:	b	3be78 <mpfr_erf@@Base+0x868>
   3bf1c:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000003bf20 <mpfr_inits@@Base>:
   3bf20:	sub	sp, sp, #0xf0
   3bf24:	stp	x29, x30, [sp, #224]
   3bf28:	add	x29, sp, #0xe0
   3bf2c:	mov	x8, #0xffffffffffffffc8    	// #-56
   3bf30:	mov	x9, sp
   3bf34:	sub	x10, x29, #0x58
   3bf38:	movk	x8, #0xff80, lsl #32
   3bf3c:	add	x11, x29, #0x10
   3bf40:	add	x9, x9, #0x80
   3bf44:	add	x10, x10, #0x38
   3bf48:	stp	x1, x2, [x29, #-88]
   3bf4c:	stp	x3, x4, [x29, #-72]
   3bf50:	stp	x5, x6, [x29, #-56]
   3bf54:	stur	x7, [x29, #-40]
   3bf58:	stp	q0, q1, [sp]
   3bf5c:	stp	q2, q3, [sp, #32]
   3bf60:	stp	q4, q5, [sp, #64]
   3bf64:	stp	q6, q7, [sp, #96]
   3bf68:	stp	x9, x8, [x29, #-16]
   3bf6c:	stp	x11, x10, [x29, #-32]
   3bf70:	cbnz	x0, 3bf8c <mpfr_inits@@Base+0x6c>
   3bf74:	b	3bfb8 <mpfr_inits@@Base+0x98>
   3bf78:	ldur	x8, [x29, #-32]
   3bf7c:	add	x9, x8, #0x8
   3bf80:	stur	x9, [x29, #-32]
   3bf84:	ldr	x0, [x8]
   3bf88:	cbz	x0, 3bfb8 <mpfr_inits@@Base+0x98>
   3bf8c:	bl	bc20 <mpfr_init@plt>
   3bf90:	ldursw	x8, [x29, #-8]
   3bf94:	tbz	w8, #31, 3bf78 <mpfr_inits@@Base+0x58>
   3bf98:	add	w9, w8, #0x8
   3bf9c:	cmn	w8, #0x8
   3bfa0:	stur	w9, [x29, #-8]
   3bfa4:	b.gt	3bf78 <mpfr_inits@@Base+0x58>
   3bfa8:	ldur	x9, [x29, #-24]
   3bfac:	add	x8, x9, x8
   3bfb0:	ldr	x0, [x8]
   3bfb4:	cbnz	x0, 3bf8c <mpfr_inits@@Base+0x6c>
   3bfb8:	ldp	x29, x30, [sp, #224]
   3bfbc:	add	sp, sp, #0xf0
   3bfc0:	ret

000000000003bfc4 <mpfr_inits2@@Base>:
   3bfc4:	sub	sp, sp, #0xf0
   3bfc8:	stp	x29, x30, [sp, #208]
   3bfcc:	add	x29, sp, #0xd0
   3bfd0:	mov	x8, #0xffffffffffffffd0    	// #-48
   3bfd4:	mov	x9, sp
   3bfd8:	sub	x10, x29, #0x50
   3bfdc:	movk	x8, #0xff80, lsl #32
   3bfe0:	add	x11, x29, #0x20
   3bfe4:	add	x9, x9, #0x80
   3bfe8:	add	x10, x10, #0x30
   3bfec:	str	x19, [sp, #224]
   3bff0:	stp	x2, x3, [x29, #-80]
   3bff4:	stp	x4, x5, [x29, #-64]
   3bff8:	stp	x6, x7, [x29, #-48]
   3bffc:	stp	q1, q2, [sp, #16]
   3c000:	stp	q3, q4, [sp, #48]
   3c004:	str	q0, [sp]
   3c008:	stp	q5, q6, [sp, #80]
   3c00c:	str	q7, [sp, #112]
   3c010:	stp	x9, x8, [x29, #-16]
   3c014:	stp	x11, x10, [x29, #-32]
   3c018:	cbz	x1, 3c06c <mpfr_inits2@@Base+0xa8>
   3c01c:	mov	x19, x0
   3c020:	b	3c038 <mpfr_inits2@@Base+0x74>
   3c024:	ldur	x8, [x29, #-32]
   3c028:	add	x9, x8, #0x8
   3c02c:	stur	x9, [x29, #-32]
   3c030:	ldr	x1, [x8]
   3c034:	cbz	x1, 3c06c <mpfr_inits2@@Base+0xa8>
   3c038:	mov	x0, x1
   3c03c:	mov	x1, x19
   3c040:	bl	ca60 <mpfr_init2@plt>
   3c044:	ldursw	x8, [x29, #-8]
   3c048:	tbz	w8, #31, 3c024 <mpfr_inits2@@Base+0x60>
   3c04c:	add	w9, w8, #0x8
   3c050:	cmn	w8, #0x8
   3c054:	stur	w9, [x29, #-8]
   3c058:	b.gt	3c024 <mpfr_inits2@@Base+0x60>
   3c05c:	ldur	x9, [x29, #-24]
   3c060:	add	x8, x9, x8
   3c064:	ldr	x1, [x8]
   3c068:	cbnz	x1, 3c038 <mpfr_inits2@@Base+0x74>
   3c06c:	ldr	x19, [sp, #224]
   3c070:	ldp	x29, x30, [sp, #208]
   3c074:	add	sp, sp, #0xf0
   3c078:	ret

000000000003c07c <mpfr_clears@@Base>:
   3c07c:	sub	sp, sp, #0xf0
   3c080:	stp	x29, x30, [sp, #224]
   3c084:	add	x29, sp, #0xe0
   3c088:	mov	x8, #0xffffffffffffffc8    	// #-56
   3c08c:	mov	x9, sp
   3c090:	sub	x10, x29, #0x58
   3c094:	movk	x8, #0xff80, lsl #32
   3c098:	add	x11, x29, #0x10
   3c09c:	add	x9, x9, #0x80
   3c0a0:	add	x10, x10, #0x38
   3c0a4:	stp	x1, x2, [x29, #-88]
   3c0a8:	stp	x3, x4, [x29, #-72]
   3c0ac:	stp	x5, x6, [x29, #-56]
   3c0b0:	stur	x7, [x29, #-40]
   3c0b4:	stp	q0, q1, [sp]
   3c0b8:	stp	q2, q3, [sp, #32]
   3c0bc:	stp	q4, q5, [sp, #64]
   3c0c0:	stp	q6, q7, [sp, #96]
   3c0c4:	stp	x9, x8, [x29, #-16]
   3c0c8:	stp	x11, x10, [x29, #-32]
   3c0cc:	cbnz	x0, 3c0e8 <mpfr_clears@@Base+0x6c>
   3c0d0:	b	3c114 <mpfr_clears@@Base+0x98>
   3c0d4:	ldur	x8, [x29, #-32]
   3c0d8:	add	x9, x8, #0x8
   3c0dc:	stur	x9, [x29, #-32]
   3c0e0:	ldr	x0, [x8]
   3c0e4:	cbz	x0, 3c114 <mpfr_clears@@Base+0x98>
   3c0e8:	bl	c0b0 <mpfr_clear@plt>
   3c0ec:	ldursw	x8, [x29, #-8]
   3c0f0:	tbz	w8, #31, 3c0d4 <mpfr_clears@@Base+0x58>
   3c0f4:	add	w9, w8, #0x8
   3c0f8:	cmn	w8, #0x8
   3c0fc:	stur	w9, [x29, #-8]
   3c100:	b.gt	3c0d4 <mpfr_clears@@Base+0x58>
   3c104:	ldur	x9, [x29, #-24]
   3c108:	add	x8, x9, x8
   3c10c:	ldr	x0, [x8]
   3c110:	cbnz	x0, 3c0e8 <mpfr_clears@@Base+0x6c>
   3c114:	ldp	x29, x30, [sp, #224]
   3c118:	add	sp, sp, #0xf0
   3c11c:	ret

000000000003c120 <mpfr_sgn@@Base>:
   3c120:	stp	x29, x30, [sp, #-16]!
   3c124:	ldr	x8, [x0, #16]
   3c128:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3c12c:	mov	x29, sp
   3c130:	cmp	x8, x9
   3c134:	b.le	3c144 <mpfr_sgn@@Base+0x24>
   3c138:	ldr	w0, [x0, #8]
   3c13c:	ldp	x29, x30, [sp], #16
   3c140:	ret
   3c144:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3c148:	cmp	x8, x9
   3c14c:	b.ne	3c15c <mpfr_sgn@@Base+0x3c>  // b.any
   3c150:	mov	w0, wzr
   3c154:	ldp	x29, x30, [sp], #16
   3c158:	ret
   3c15c:	mov	x9, #0x2                   	// #2
   3c160:	movk	x9, #0x8000, lsl #48
   3c164:	cmp	x8, x9
   3c168:	b.ne	3c138 <mpfr_sgn@@Base+0x18>  // b.any
   3c16c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3c170:	ldr	x1, [x0, #2640]
   3c174:	add	x0, x0, #0xa50
   3c178:	blr	x1
   3c17c:	mov	x8, x0
   3c180:	mrs	x9, tpidr_el0
   3c184:	ldr	w10, [x9, x8]
   3c188:	mov	w0, wzr
   3c18c:	orr	w10, w10, #0x10
   3c190:	str	w10, [x9, x8]
   3c194:	ldp	x29, x30, [sp], #16
   3c198:	ret

000000000003c19c <mpfr_check@@Base>:
   3c19c:	stp	x29, x30, [sp, #-16]!
   3c1a0:	ldr	w8, [x0, #8]
   3c1a4:	mov	x29, sp
   3c1a8:	cmp	w8, #0x1
   3c1ac:	b.eq	3c1b8 <mpfr_check@@Base+0x1c>  // b.none
   3c1b0:	cmn	w8, #0x1
   3c1b4:	b.ne	3c24c <mpfr_check@@Base+0xb0>  // b.any
   3c1b8:	ldr	x10, [x0]
   3c1bc:	mov	x12, #0xfffffffffffffeff    	// #-257
   3c1c0:	movk	x12, #0x7fff, lsl #48
   3c1c4:	sub	x11, x10, #0x1
   3c1c8:	cmp	x11, x12
   3c1cc:	b.cs	3c24c <mpfr_check@@Base+0xb0>  // b.hs, b.nlast
   3c1d0:	ldr	x9, [x0, #24]
   3c1d4:	cbz	x9, 3c24c <mpfr_check@@Base+0xb0>
   3c1d8:	ldur	x13, [x9, #-8]
   3c1dc:	mov	w8, wzr
   3c1e0:	cmp	x13, #0x1
   3c1e4:	b.lt	3c228 <mpfr_check@@Base+0x8c>  // b.tstop
   3c1e8:	lsl	x14, x13, #6
   3c1ec:	cmp	x10, x14
   3c1f0:	b.gt	3c228 <mpfr_check@@Base+0x8c>
   3c1f4:	mov	x8, xzr
   3c1f8:	ldr	xzr, [x9, x8, lsl #3]
   3c1fc:	add	x8, x8, #0x1
   3c200:	cmp	x13, x8
   3c204:	b.ne	3c1f8 <mpfr_check@@Base+0x5c>  // b.any
   3c208:	ldr	x8, [x0, #16]
   3c20c:	add	x12, x12, #0x105
   3c210:	cmp	x8, x12
   3c214:	b.ge	3c234 <mpfr_check@@Base+0x98>  // b.tcont
   3c218:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   3c21c:	add	x8, x8, x9
   3c220:	cmp	x8, #0x3
   3c224:	cset	w8, cc  // cc = lo, ul, last
   3c228:	mov	w0, w8
   3c22c:	ldp	x29, x30, [sp], #16
   3c230:	ret
   3c234:	add	x12, x11, #0x3f
   3c238:	cmp	x11, #0x0
   3c23c:	csel	x11, x12, x11, lt  // lt = tstop
   3c240:	asr	x11, x11, #6
   3c244:	ldr	x11, [x9, x11, lsl #3]
   3c248:	tbnz	x11, #63, 3c25c <mpfr_check@@Base+0xc0>
   3c24c:	mov	w8, wzr
   3c250:	mov	w0, w8
   3c254:	ldp	x29, x30, [sp], #16
   3c258:	ret
   3c25c:	add	x11, x10, #0x3f
   3c260:	cmp	x10, #0x0
   3c264:	csel	x11, x11, x10, lt  // lt = tstop
   3c268:	and	x11, x11, #0xffffffffffffffc0
   3c26c:	sub	x10, x10, x11
   3c270:	cbz	w10, 3c28c <mpfr_check@@Base+0xf0>
   3c274:	ldr	x9, [x9]
   3c278:	neg	x10, x10
   3c27c:	mov	x11, #0xffffffffffffffff    	// #-1
   3c280:	lsl	x10, x11, x10
   3c284:	bics	xzr, x9, x10
   3c288:	b.ne	3c24c <mpfr_check@@Base+0xb0>  // b.any
   3c28c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3c290:	ldr	x1, [x0, #2576]
   3c294:	add	x0, x0, #0xa10
   3c298:	blr	x1
   3c29c:	mrs	x9, tpidr_el0
   3c2a0:	ldr	x10, [x9, x0]
   3c2a4:	cmp	x8, x10
   3c2a8:	cset	w10, ge  // ge = tcont
   3c2ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3c2b0:	ldr	x1, [x0, #2608]
   3c2b4:	add	x0, x0, #0xa30
   3c2b8:	blr	x1
   3c2bc:	ldr	x9, [x9, x0]
   3c2c0:	cmp	x8, x9
   3c2c4:	cset	w8, le
   3c2c8:	and	w8, w10, w8
   3c2cc:	mov	w0, w8
   3c2d0:	ldp	x29, x30, [sp], #16
   3c2d4:	ret

000000000003c2d8 <mpfr_sub1sp@@Base>:
   3c2d8:	stp	x29, x30, [sp, #-96]!
   3c2dc:	stp	x28, x27, [sp, #16]
   3c2e0:	stp	x26, x25, [sp, #32]
   3c2e4:	stp	x24, x23, [sp, #48]
   3c2e8:	stp	x22, x21, [sp, #64]
   3c2ec:	stp	x20, x19, [sp, #80]
   3c2f0:	mov	x29, sp
   3c2f4:	sub	sp, sp, #0x30
   3c2f8:	ldr	x28, [x1]
   3c2fc:	mov	w20, w3
   3c300:	mov	x21, x2
   3c304:	mov	x19, x0
   3c308:	cmp	x28, #0x3f
   3c30c:	b.gt	3c360 <mpfr_sub1sp@@Base+0x88>
   3c310:	ldp	x10, x8, [x21, #16]
   3c314:	ldp	x11, x13, [x1, #16]
   3c318:	ldr	x9, [x19, #24]
   3c31c:	cmp	x11, x10
   3c320:	b.ne	3c464 <mpfr_sub1sp@@Base+0x18c>  // b.any
   3c324:	ldr	x11, [x13]
   3c328:	ldr	x8, [x8]
   3c32c:	subs	x8, x11, x8
   3c330:	b.eq	3c7b8 <mpfr_sub1sp@@Base+0x4e0>  // b.none
   3c334:	ldr	w11, [x1, #8]
   3c338:	cneg	x8, x8, cc  // cc = lo, ul, last
   3c33c:	clz	x14, x8
   3c340:	lsl	x8, x8, x14
   3c344:	cneg	w2, w11, cc  // cc = lo, ul, last
   3c348:	mov	x12, xzr
   3c34c:	mov	x13, xzr
   3c350:	str	w2, [x19, #8]
   3c354:	str	x8, [x9]
   3c358:	sub	x10, x10, x14
   3c35c:	b	3c808 <mpfr_sub1sp@@Base+0x530>
   3c360:	cmp	x28, #0x40
   3c364:	b.eq	3c40c <mpfr_sub1sp@@Base+0x134>  // b.none
   3c368:	cmp	x28, #0x7f
   3c36c:	b.gt	3c40c <mpfr_sub1sp@@Base+0x134>
   3c370:	ldp	x8, x10, [x21, #16]
   3c374:	ldp	x11, x13, [x1, #16]
   3c378:	ldr	x9, [x19, #24]
   3c37c:	cmp	x11, x8
   3c380:	b.ne	3c5e8 <mpfr_sub1sp@@Base+0x310>  // b.any
   3c384:	ldp	x11, x13, [x13]
   3c388:	ldp	x10, x12, [x10]
   3c38c:	subs	x11, x11, x10
   3c390:	sub	x12, x13, x12
   3c394:	cset	w10, cc  // cc = lo, ul, last
   3c398:	sub	x10, x12, x10
   3c39c:	orr	x12, x10, x11
   3c3a0:	cbz	x12, 3c7b4 <mpfr_sub1sp@@Base+0x4dc>
   3c3a4:	ldr	w12, [x1, #8]
   3c3a8:	cmp	x10, x13
   3c3ac:	b.cc	3c3c4 <mpfr_sub1sp@@Base+0xec>  // b.lo, b.ul, b.last
   3c3b0:	cmp	x11, #0x0
   3c3b4:	csetm	x13, ne  // ne = any
   3c3b8:	neg	w12, w12
   3c3bc:	neg	x11, x11
   3c3c0:	sub	x10, x13, x10
   3c3c4:	cmp	x10, #0x0
   3c3c8:	str	w12, [x19, #8]
   3c3cc:	sub	x13, x8, #0x40
   3c3d0:	csel	x12, x11, x10, eq  // eq = none
   3c3d4:	csel	x14, xzr, x11, eq  // eq = none
   3c3d8:	clz	x11, x12
   3c3dc:	csel	x10, x13, x8, eq  // eq = none
   3c3e0:	mov	x13, xzr
   3c3e4:	mov	x15, xzr
   3c3e8:	cbz	x11, 3ca40 <mpfr_sub1sp@@Base+0x768>
   3c3ec:	lsl	x8, x12, x11
   3c3f0:	neg	x12, x11
   3c3f4:	lsr	x12, x14, x12
   3c3f8:	lsl	x14, x14, x11
   3c3fc:	orr	x12, x12, x8
   3c400:	stp	x14, x12, [x9]
   3c404:	sub	x10, x10, x11
   3c408:	b	3ceec <mpfr_sub1sp@@Base+0xc14>
   3c40c:	cmp	x28, #0x40
   3c410:	b.ne	3c514 <mpfr_sub1sp@@Base+0x23c>  // b.any
   3c414:	ldp	x10, x8, [x21, #16]
   3c418:	ldp	x11, x13, [x1, #16]
   3c41c:	ldr	x9, [x19, #24]
   3c420:	cmp	x11, x10
   3c424:	b.ne	3c6dc <mpfr_sub1sp@@Base+0x404>  // b.any
   3c428:	ldr	x11, [x13]
   3c42c:	ldr	x8, [x8]
   3c430:	subs	x8, x11, x8
   3c434:	b.eq	3c7b8 <mpfr_sub1sp@@Base+0x4e0>  // b.none
   3c438:	ldr	w13, [x1, #8]
   3c43c:	cneg	x8, x8, cc  // cc = lo, ul, last
   3c440:	clz	x14, x8
   3c444:	lsl	x8, x8, x14
   3c448:	cneg	w2, w13, cc  // cc = lo, ul, last
   3c44c:	mov	x11, xzr
   3c450:	mov	x12, xzr
   3c454:	str	w2, [x19, #8]
   3c458:	str	x8, [x9]
   3c45c:	sub	x10, x10, x14
   3c460:	b	3d384 <mpfr_sub1sp@@Base+0x10ac>
   3c464:	ldr	w15, [x1, #8]
   3c468:	csel	x12, x13, x8, gt
   3c46c:	csel	x14, x8, x13, gt
   3c470:	csel	x8, x10, x11, gt
   3c474:	csel	x10, x11, x10, gt
   3c478:	mov	w11, #0x40                  	// #64
   3c47c:	neg	x16, x28
   3c480:	mov	w17, #0x1                   	// #1
   3c484:	sub	x13, x10, x8
   3c488:	sub	x11, x11, x28
   3c48c:	cneg	w2, w15, le
   3c490:	cmp	x13, #0x3f
   3c494:	lsl	x8, x17, x16
   3c498:	str	w2, [x19, #8]
   3c49c:	b.hi	3c5cc <mpfr_sub1sp@@Base+0x2f4>  // b.pmore
   3c4a0:	ldr	x14, [x14]
   3c4a4:	ldr	x12, [x12]
   3c4a8:	neg	x16, x13
   3c4ac:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3c4b0:	lsl	x16, x14, x16
   3c4b4:	lsr	x13, x14, x13
   3c4b8:	cmp	x16, #0x0
   3c4bc:	sub	x12, x12, x13
   3c4c0:	cset	w13, ne  // ne = any
   3c4c4:	sub	x12, x12, x13
   3c4c8:	clz	x13, x12
   3c4cc:	neg	x14, x16
   3c4d0:	neg	x18, x13
   3c4d4:	lsl	x16, x12, x13
   3c4d8:	cmp	x13, #0x0
   3c4dc:	sub	x10, x10, x13
   3c4e0:	lsl	x13, x14, x13
   3c4e4:	lsr	x14, x14, x18
   3c4e8:	orr	x14, x14, x16
   3c4ec:	sub	x15, x8, #0x1
   3c4f0:	lsr	x17, x17, x28
   3c4f4:	csel	x14, x12, x14, eq  // eq = none
   3c4f8:	neg	x8, x8
   3c4fc:	and	x12, x14, x17
   3c500:	and	x15, x14, x15
   3c504:	and	x8, x14, x8
   3c508:	eor	x14, x15, x12
   3c50c:	orr	x13, x14, x13
   3c510:	b	3c804 <mpfr_sub1sp@@Base+0x52c>
   3c514:	sub	x8, x28, #0x81
   3c518:	cmp	x8, #0x3e
   3c51c:	b.hi	3c760 <mpfr_sub1sp@@Base+0x488>  // b.pmore
   3c520:	ldp	x9, x8, [x21, #16]
   3c524:	ldp	x13, x11, [x1, #16]
   3c528:	ldr	x10, [x19, #24]
   3c52c:	cmp	x13, x9
   3c530:	b.ne	3c8ec <mpfr_sub1sp@@Base+0x614>  // b.any
   3c534:	ldr	x13, [x11]
   3c538:	ldr	x16, [x8, #16]
   3c53c:	ldp	x12, x8, [x8]
   3c540:	ldp	x11, x15, [x11, #8]
   3c544:	subs	x14, x13, x12
   3c548:	sub	x13, x15, x16
   3c54c:	cset	w16, cc  // cc = lo, ul, last
   3c550:	subs	x8, x11, x8
   3c554:	cset	w17, eq  // eq = none
   3c558:	cset	w11, cc  // cc = lo, ul, last
   3c55c:	sub	x12, x8, x16
   3c560:	and	w8, w16, w17
   3c564:	orr	w8, w11, w8
   3c568:	sub	x13, x13, x8
   3c56c:	orr	x8, x12, x14
   3c570:	orr	x8, x8, x13
   3c574:	cbz	x8, 3c7b8 <mpfr_sub1sp@@Base+0x4e0>
   3c578:	ldr	w8, [x1, #8]
   3c57c:	cmp	x13, x15
   3c580:	b.cs	3ccbc <mpfr_sub1sp@@Base+0x9e4>  // b.hs, b.nlast
   3c584:	str	w8, [x19, #8]
   3c588:	cbz	x13, 3cce8 <mpfr_sub1sp@@Base+0xa10>
   3c58c:	mov	x15, xzr
   3c590:	mov	x16, xzr
   3c594:	clz	x8, x13
   3c598:	cbz	x8, 3cd18 <mpfr_sub1sp@@Base+0xa40>
   3c59c:	lsl	x11, x13, x8
   3c5a0:	neg	x13, x8
   3c5a4:	lsl	x17, x12, x8
   3c5a8:	lsr	x12, x12, x13
   3c5ac:	lsr	x18, x14, x13
   3c5b0:	lsl	x14, x14, x8
   3c5b4:	orr	x13, x12, x11
   3c5b8:	orr	x12, x18, x17
   3c5bc:	stp	x12, x13, [x10, #8]
   3c5c0:	str	x14, [x10]
   3c5c4:	sub	x9, x9, x8
   3c5c8:	b	3d1fc <mpfr_sub1sp@@Base+0xf24>
   3c5cc:	ldr	x12, [x12]
   3c5d0:	mov	x15, #0x8000000000000001    	// #-9223372036854775807
   3c5d4:	cmp	x12, x15
   3c5d8:	b.cc	3c7d4 <mpfr_sub1sp@@Base+0x4fc>  // b.lo, b.ul, b.last
   3c5dc:	sub	x8, x12, x8
   3c5e0:	mov	w12, #0x1                   	// #1
   3c5e4:	b	3c800 <mpfr_sub1sp@@Base+0x528>
   3c5e8:	ldr	w14, [x1, #8]
   3c5ec:	csel	x12, x13, x10, gt
   3c5f0:	csel	x15, x10, x13, gt
   3c5f4:	csel	x13, x8, x11, gt
   3c5f8:	csel	x10, x11, x8, gt
   3c5fc:	mov	w8, #0x80                  	// #128
   3c600:	neg	x17, x28
   3c604:	mov	w18, #0x1                   	// #1
   3c608:	sub	x16, x10, x13
   3c60c:	sub	x11, x8, x28
   3c610:	lsl	x8, x18, x17
   3c614:	cneg	w13, w14, le
   3c618:	cmp	x16, #0x3f
   3c61c:	str	w13, [x19, #8]
   3c620:	sub	x13, x8, #0x1
   3c624:	b.hi	3c8d4 <mpfr_sub1sp@@Base+0x5fc>  // b.pmore
   3c628:	ldp	x15, x17, [x15]
   3c62c:	ldp	x18, x12, [x12]
   3c630:	neg	x14, x16
   3c634:	lsl	x0, x17, x14
   3c638:	lsr	x1, x15, x16
   3c63c:	lsr	x16, x17, x16
   3c640:	orr	x17, x1, x0
   3c644:	sub	x16, x12, x16
   3c648:	subs	x12, x18, x17
   3c64c:	cset	w17, cc  // cc = lo, ul, last
   3c650:	lsl	x15, x15, x14
   3c654:	sub	x14, x16, x17
   3c658:	cbz	x15, 3c670 <mpfr_sub1sp@@Base+0x398>
   3c65c:	cmp	x12, #0x0
   3c660:	cset	w16, eq  // eq = none
   3c664:	sub	x12, x12, #0x1
   3c668:	sub	x14, x14, x16
   3c66c:	neg	x15, x15
   3c670:	cmp	x14, #0x0
   3c674:	sub	x17, x10, #0x40
   3c678:	csel	x16, xzr, x12, eq  // eq = none
   3c67c:	csel	x12, x12, x14, eq  // eq = none
   3c680:	clz	x14, x12
   3c684:	csel	x10, x17, x10, eq  // eq = none
   3c688:	cbz	x14, 3c6b0 <mpfr_sub1sp@@Base+0x3d8>
   3c68c:	neg	x17, x14
   3c690:	lsl	x12, x12, x14
   3c694:	lsl	x18, x16, x14
   3c698:	lsr	x16, x16, x17
   3c69c:	lsr	x17, x15, x17
   3c6a0:	lsl	x15, x15, x14
   3c6a4:	orr	x12, x16, x12
   3c6a8:	orr	x16, x17, x18
   3c6ac:	sub	x10, x10, x14
   3c6b0:	mov	w14, #0x7f                  	// #127
   3c6b4:	mov	w17, #0x1                   	// #1
   3c6b8:	and	x18, x16, x13
   3c6bc:	neg	x8, x8
   3c6c0:	sub	x13, x14, x28
   3c6c4:	and	x14, x16, x8
   3c6c8:	lsl	x8, x17, x13
   3c6cc:	and	x13, x16, x8
   3c6d0:	eor	x8, x18, x13
   3c6d4:	orr	x15, x8, x15
   3c6d8:	b	3cc98 <mpfr_sub1sp@@Base+0x9c0>
   3c6dc:	ldr	w14, [x1, #8]
   3c6e0:	csel	x15, x10, x11, gt
   3c6e4:	csel	x10, x11, x10, gt
   3c6e8:	sub	x11, x10, x15
   3c6ec:	csel	x12, x13, x8, gt
   3c6f0:	csel	x8, x8, x13, gt
   3c6f4:	cneg	w2, w14, le
   3c6f8:	cmp	x11, #0x3f
   3c6fc:	str	w2, [x19, #8]
   3c700:	b.hi	3c9b8 <mpfr_sub1sp@@Base+0x6e0>  // b.pmore
   3c704:	ldr	x8, [x8]
   3c708:	ldr	x14, [x12]
   3c70c:	neg	x13, x11
   3c710:	lsl	x12, x8, x13
   3c714:	lsr	x8, x8, x11
   3c718:	cmp	x12, #0x0
   3c71c:	cset	w11, ne  // ne = any
   3c720:	sub	x8, x14, x8
   3c724:	subs	x8, x8, x11
   3c728:	b.eq	3cca0 <mpfr_sub1sp@@Base+0x9c8>  // b.none
   3c72c:	neg	x11, x12
   3c730:	clz	x12, x8
   3c734:	neg	x14, x12
   3c738:	lsl	x13, x8, x12
   3c73c:	cmp	x12, #0x0
   3c740:	lsl	x15, x11, x12
   3c744:	sub	x10, x10, x12
   3c748:	lsr	x12, x11, x14
   3c74c:	orr	x12, x12, x13
   3c750:	and	x11, x15, #0x8000000000000000
   3c754:	csel	x8, x8, x12, eq  // eq = none
   3c758:	and	x12, x15, #0x7fffffffffffffff
   3c75c:	b	3d380 <mpfr_sub1sp@@Base+0x10a8>
   3c760:	ldr	x8, [x1, #16]
   3c764:	ldr	x26, [x21, #16]
   3c768:	sub	x9, x28, #0x1
   3c76c:	add	x10, x28, #0x3e
   3c770:	cmp	x9, #0x0
   3c774:	csel	x9, x10, x9, lt  // lt = tstop
   3c778:	asr	x14, x9, #6
   3c77c:	cmp	x8, x26
   3c780:	stur	xzr, [x29, #-8]
   3c784:	b.ne	3c9e0 <mpfr_sub1sp@@Base+0x708>  // b.any
   3c788:	ldr	x9, [x1, #24]
   3c78c:	ldr	x10, [x21, #24]
   3c790:	mov	x11, x14
   3c794:	lsl	x12, x11, #3
   3c798:	ldr	x13, [x9, x12]
   3c79c:	ldr	x12, [x10, x12]
   3c7a0:	cmp	x13, x12
   3c7a4:	b.ne	3ca48 <mpfr_sub1sp@@Base+0x770>  // b.any
   3c7a8:	cmp	x11, #0x0
   3c7ac:	sub	x11, x11, #0x1
   3c7b0:	b.gt	3c794 <mpfr_sub1sp@@Base+0x4bc>
   3c7b4:	mov	w8, wzr
   3c7b8:	cmp	w20, #0x3
   3c7bc:	mov	w9, #0xffffffff            	// #-1
   3c7c0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3c7c4:	cneg	w9, w9, ne  // ne = any
   3c7c8:	str	w9, [x19, #8]
   3c7cc:	str	x10, [x19, #16]
   3c7d0:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3c7d4:	cmp	x28, #0x3f
   3c7d8:	mov	w12, #0x1                   	// #1
   3c7dc:	b.lt	3c7f8 <mpfr_sub1sp@@Base+0x520>  // b.tstop
   3c7e0:	cmp	x13, #0x40
   3c7e4:	b.hi	3c7f8 <mpfr_sub1sp@@Base+0x520>  // b.pmore
   3c7e8:	ldr	x12, [x14]
   3c7ec:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3c7f0:	cmp	x12, x13
   3c7f4:	cset	w12, eq  // eq = none
   3c7f8:	neg	x8, x8
   3c7fc:	sub	x10, x10, #0x1
   3c800:	mov	w13, #0x1                   	// #1
   3c804:	str	x8, [x9]
   3c808:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3c80c:	ldr	x1, [x0, #2576]
   3c810:	add	x0, x0, #0xa10
   3c814:	blr	x1
   3c818:	mrs	x14, tpidr_el0
   3c81c:	ldr	x15, [x14, x0]
   3c820:	cmp	x10, x15
   3c824:	b.lt	3d4dc <mpfr_sub1sp@@Base+0x1204>  // b.tstop
   3c828:	mov	w8, wzr
   3c82c:	cmp	w20, #0x5
   3c830:	str	x10, [x19, #16]
   3c834:	b.eq	3d54c <mpfr_sub1sp@@Base+0x1274>  // b.none
   3c838:	orr	x15, x13, x12
   3c83c:	cbz	x15, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3c840:	cmp	w20, #0x1
   3c844:	b.eq	3c8ac <mpfr_sub1sp@@Base+0x5d4>  // b.none
   3c848:	cbnz	w20, 3c8a0 <mpfr_sub1sp@@Base+0x5c8>
   3c84c:	cbz	x12, 3c8ac <mpfr_sub1sp@@Base+0x5d4>
   3c850:	cbnz	x13, 3c860 <mpfr_sub1sp@@Base+0x588>
   3c854:	ldr	x8, [x9]
   3c858:	lsr	x8, x8, x11
   3c85c:	tbz	w8, #0, 3c8ac <mpfr_sub1sp@@Base+0x5d4>
   3c860:	ldr	x8, [x9]
   3c864:	mov	w12, #0x1                   	// #1
   3c868:	lsl	x11, x12, x11
   3c86c:	adds	x8, x8, x11
   3c870:	str	x8, [x9]
   3c874:	b.eq	3d534 <mpfr_sub1sp@@Base+0x125c>  // b.none
   3c878:	cbz	w2, 3d548 <mpfr_sub1sp@@Base+0x1270>
   3c87c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3c880:	ldr	x1, [x0, #2640]
   3c884:	add	x0, x0, #0xa50
   3c888:	blr	x1
   3c88c:	ldr	w8, [x14, x0]
   3c890:	orr	w8, w8, #0x8
   3c894:	str	w8, [x14, x0]
   3c898:	mov	w8, w2
   3c89c:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3c8a0:	add	w8, w20, w2, lsr #31
   3c8a4:	cmp	w8, #0x3
   3c8a8:	b.ne	3c860 <mpfr_sub1sp@@Base+0x588>  // b.any
   3c8ac:	cbz	w2, 3d548 <mpfr_sub1sp@@Base+0x1270>
   3c8b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3c8b4:	ldr	x1, [x0, #2640]
   3c8b8:	add	x0, x0, #0xa50
   3c8bc:	blr	x1
   3c8c0:	ldr	w8, [x14, x0]
   3c8c4:	orr	w8, w8, #0x8
   3c8c8:	str	w8, [x14, x0]
   3c8cc:	neg	w8, w2
   3c8d0:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3c8d4:	cmp	x16, #0x7f
   3c8d8:	b.hi	3c9f8 <mpfr_sub1sp@@Base+0x720>  // b.pmore
   3c8dc:	cmp	x16, #0x40
   3c8e0:	b.ne	3cc10 <mpfr_sub1sp@@Base+0x938>  // b.any
   3c8e4:	ldp	x14, x17, [x15]
   3c8e8:	b	3cc28 <mpfr_sub1sp@@Base+0x950>
   3c8ec:	ldr	w14, [x1, #8]
   3c8f0:	csel	x17, x8, x11, gt
   3c8f4:	csel	x12, x11, x8, gt
   3c8f8:	csel	x8, x9, x13, gt
   3c8fc:	csel	x9, x13, x9, gt
   3c900:	neg	x13, x28
   3c904:	mov	w15, #0x1                   	// #1
   3c908:	mov	w11, #0xc0                  	// #192
   3c90c:	sub	x16, x9, x8
   3c910:	lsl	x8, x15, x13
   3c914:	sub	x11, x11, x28
   3c918:	cneg	w13, w14, le
   3c91c:	cmp	x16, #0x3f
   3c920:	sub	x14, x8, #0x1
   3c924:	str	w13, [x19, #8]
   3c928:	b.hi	3cbbc <mpfr_sub1sp@@Base+0x8e4>  // b.pmore
   3c92c:	ldp	x13, x15, [x17]
   3c930:	ldr	x0, [x17, #16]
   3c934:	neg	x18, x16
   3c938:	ldr	x3, [x12, #16]
   3c93c:	lsl	x17, x13, x18
   3c940:	lsl	x1, x15, x18
   3c944:	lsr	x13, x13, x16
   3c948:	lsl	x18, x0, x18
   3c94c:	lsr	x15, x15, x16
   3c950:	lsr	x16, x0, x16
   3c954:	ldp	x0, x2, [x12]
   3c958:	orr	x12, x1, x13
   3c95c:	orr	x13, x18, x15
   3c960:	sub	x16, x3, x16
   3c964:	subs	x15, x0, x12
   3c968:	sub	x13, x2, x13
   3c96c:	cset	w18, cc  // cc = lo, ul, last
   3c970:	sub	x12, x13, x18
   3c974:	cmp	x12, x2
   3c978:	cset	w0, eq  // eq = none
   3c97c:	cset	w13, hi  // hi = pmore
   3c980:	and	w18, w18, w0
   3c984:	orr	w13, w13, w18
   3c988:	sub	x13, x16, x13
   3c98c:	cbz	x17, 3ce70 <mpfr_sub1sp@@Base+0xb98>
   3c990:	cmp	x15, #0x0
   3c994:	orr	x16, x12, x15
   3c998:	cset	w18, eq  // eq = none
   3c99c:	cmp	x16, #0x0
   3c9a0:	cset	w16, eq  // eq = none
   3c9a4:	sub	x15, x15, #0x1
   3c9a8:	sub	x12, x12, x18
   3c9ac:	sub	x13, x13, x16
   3c9b0:	neg	x16, x17
   3c9b4:	b	3ce74 <mpfr_sub1sp@@Base+0xb9c>
   3c9b8:	ldr	x13, [x12]
   3c9bc:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   3c9c0:	cmp	x13, x12
   3c9c4:	b.cc	3cbd8 <mpfr_sub1sp@@Base+0x900>  // b.lo, b.ul, b.last
   3c9c8:	cmp	x11, #0x40
   3c9cc:	b.ls	3cd5c <mpfr_sub1sp@@Base+0xa84>  // b.plast
   3c9d0:	mov	w11, #0x1                   	// #1
   3c9d4:	mov	w12, #0x1                   	// #1
   3c9d8:	sub	x8, x13, #0x1
   3c9dc:	b	3d380 <mpfr_sub1sp@@Base+0x10a8>
   3c9e0:	b.ge	3ca4c <mpfr_sub1sp@@Base+0x774>  // b.tcont
   3c9e4:	ldr	w9, [x1, #8]
   3c9e8:	mov	x10, x8
   3c9ec:	mov	x27, x1
   3c9f0:	neg	w9, w9
   3c9f4:	b	3ca60 <mpfr_sub1sp@@Base+0x788>
   3c9f8:	ldp	x13, x12, [x12]
   3c9fc:	subs	x14, x13, x8
   3ca00:	cset	w13, cc  // cc = lo, ul, last
   3ca04:	subs	x12, x12, x13
   3ca08:	b.mi	3ccb4 <mpfr_sub1sp@@Base+0x9dc>  // b.first
   3ca0c:	cmp	x28, #0x7f
   3ca10:	mov	w13, #0x1                   	// #1
   3ca14:	b.lt	3ced8 <mpfr_sub1sp@@Base+0xc00>  // b.tstop
   3ca18:	cmp	x16, #0x80
   3ca1c:	b.hi	3ced8 <mpfr_sub1sp@@Base+0xc00>  // b.pmore
   3ca20:	ldr	x12, [x15, #8]
   3ca24:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3ca28:	cmp	x12, x13
   3ca2c:	b.ne	3ced4 <mpfr_sub1sp@@Base+0xbfc>  // b.any
   3ca30:	ldr	x12, [x15]
   3ca34:	cmp	x12, #0x0
   3ca38:	cset	w13, eq  // eq = none
   3ca3c:	b	3ced8 <mpfr_sub1sp@@Base+0xc00>
   3ca40:	stp	x14, x12, [x9]
   3ca44:	b	3ceec <mpfr_sub1sp@@Base+0xc14>
   3ca48:	b.ls	3c9e4 <mpfr_sub1sp@@Base+0x70c>  // b.plast
   3ca4c:	ldr	w9, [x1, #8]
   3ca50:	mov	x10, x26
   3ca54:	mov	x26, x8
   3ca58:	mov	x27, x21
   3ca5c:	mov	x21, x1
   3ca60:	sub	x25, x26, x10
   3ca64:	add	x22, x14, #0x1
   3ca68:	cmp	x25, #0x1
   3ca6c:	str	w9, [x19, #8]
   3ca70:	stur	x14, [x29, #-16]
   3ca74:	b.hi	3cb34 <mpfr_sub1sp@@Base+0x85c>  // b.pmore
   3ca78:	cbz	x25, 3cd24 <mpfr_sub1sp@@Base+0xa4c>
   3ca7c:	ldr	x23, [x21, #24]
   3ca80:	ldr	x25, [x27, #24]
   3ca84:	lsl	x24, x14, #3
   3ca88:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3ca8c:	ldr	x9, [x23, x24]
   3ca90:	ldr	x8, [x25, x24]
   3ca94:	sub	x9, x9, x8, lsr #1
   3ca98:	cmp	x9, x10
   3ca9c:	b.cc	3cdb4 <mpfr_sub1sp@@Base+0xadc>  // b.lo, b.ul, b.last
   3caa0:	ldr	x9, [x25]
   3caa4:	neg	w8, w28
   3caa8:	ldr	x11, [x19, #24]
   3caac:	mov	w10, #0x1                   	// #1
   3cab0:	and	x8, x8, #0x3f
   3cab4:	lsl	x1, x22, #3
   3cab8:	lsl	x28, x10, x8
   3cabc:	cmp	x1, #0x4, lsl #12
   3cac0:	and	x9, x9, x28
   3cac4:	neg	x21, x28
   3cac8:	stur	x11, [x29, #-48]
   3cacc:	stp	x9, x8, [x29, #-32]
   3cad0:	b.hi	3d910 <mpfr_sub1sp@@Base+0x1638>  // b.pmore
   3cad4:	add	x9, x1, #0xf
   3cad8:	mov	x8, sp
   3cadc:	and	x9, x9, #0xfffffffffffffff0
   3cae0:	sub	x24, x8, x9
   3cae4:	mov	sp, x24
   3cae8:	mov	w3, #0x1                   	// #1
   3caec:	mov	x0, x24
   3caf0:	mov	x1, x25
   3caf4:	mov	x2, x22
   3caf8:	bl	bd30 <__gmpn_rshift@plt>
   3cafc:	ldr	x8, [x24]
   3cb00:	ldur	x0, [x29, #-48]
   3cb04:	mov	x1, x23
   3cb08:	mov	x2, x24
   3cb0c:	and	x8, x8, x21
   3cb10:	mov	x3, x22
   3cb14:	str	x8, [x24]
   3cb18:	bl	beb0 <__gmpn_sub_n@plt>
   3cb1c:	ldur	x8, [x29, #-32]
   3cb20:	str	x26, [x19, #16]
   3cb24:	cbnz	x8, 3d924 <mpfr_sub1sp@@Base+0x164c>
   3cb28:	ldur	x0, [x29, #-8]
   3cb2c:	cbz	x0, 3d548 <mpfr_sub1sp@@Base+0x1270>
   3cb30:	b	3ce68 <mpfr_sub1sp@@Base+0xb90>
   3cb34:	subs	x10, x28, x25
   3cb38:	b.ls	3d5ec <mpfr_sub1sp@@Base+0x1314>  // b.plast
   3cb3c:	neg	w8, w28
   3cb40:	lsl	x1, x22, #3
   3cb44:	cmp	x1, #0x4, lsl #12
   3cb48:	and	x8, x8, #0x3f
   3cb4c:	stur	x8, [x29, #-24]
   3cb50:	stur	x10, [x29, #-48]
   3cb54:	b.hi	3d660 <mpfr_sub1sp@@Base+0x1388>  // b.pmore
   3cb58:	add	x9, x1, #0xf
   3cb5c:	mov	x8, sp
   3cb60:	and	x9, x9, #0xfffffffffffffff0
   3cb64:	sub	x23, x8, x9
   3cb68:	mov	sp, x23
   3cb6c:	ands	x3, x25, #0x3f
   3cb70:	lsr	x24, x25, #6
   3cb74:	b.eq	3d678 <mpfr_sub1sp@@Base+0x13a0>  // b.none
   3cb78:	ldr	x1, [x27, #24]
   3cb7c:	cbnz	x24, 3d6ec <mpfr_sub1sp@@Base+0x1414>
   3cb80:	mov	x0, x23
   3cb84:	mov	x2, x22
   3cb88:	bl	bd30 <__gmpn_rshift@plt>
   3cb8c:	ldp	x14, x13, [x29, #-24]
   3cb90:	cbz	x14, 3d720 <mpfr_sub1sp@@Base+0x1448>
   3cb94:	ldr	x9, [x23]
   3cb98:	sub	x8, x14, #0x1
   3cb9c:	mov	w24, #0x1                   	// #1
   3cba0:	lsl	x10, x24, x8
   3cba4:	sub	x11, x10, #0x1
   3cba8:	tst	x9, x11
   3cbac:	and	x15, x9, x10
   3cbb0:	b.eq	3cd40 <mpfr_sub1sp@@Base+0xa68>  // b.none
   3cbb4:	mov	x28, x15
   3cbb8:	b	3d014 <mpfr_sub1sp@@Base+0xd3c>
   3cbbc:	cmp	x16, #0x7f
   3cbc0:	b.hi	3cd78 <mpfr_sub1sp@@Base+0xaa0>  // b.pmore
   3cbc4:	subs	x13, x16, #0x40
   3cbc8:	b.ne	3d130 <mpfr_sub1sp@@Base+0xe58>  // b.any
   3cbcc:	ldp	x16, x15, [x17]
   3cbd0:	ldr	x17, [x17, #16]
   3cbd4:	b	3d158 <mpfr_sub1sp@@Base+0xe80>
   3cbd8:	cmp	x11, #0x40
   3cbdc:	sub	x10, x10, #0x1
   3cbe0:	b.ne	3cda0 <mpfr_sub1sp@@Base+0xac8>  // b.any
   3cbe4:	ldr	x8, [x8]
   3cbe8:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   3cbec:	cmp	x8, x11
   3cbf0:	b.cc	3d2e8 <mpfr_sub1sp@@Base+0x1010>  // b.lo, b.ul, b.last
   3cbf4:	neg	x11, x8
   3cbf8:	lsr	x13, x11, #62
   3cbfc:	cmp	x13, #0x0
   3cc00:	mov	x8, #0xfffffffffffffffe    	// #-2
   3cc04:	lsl	x12, x11, #2
   3cc08:	cset	w11, ne  // ne = any
   3cc0c:	b	3d380 <mpfr_sub1sp@@Base+0x10a8>
   3cc10:	ldp	x14, x17, [x15]
   3cc14:	neg	x15, x16
   3cc18:	cmp	x14, #0x0
   3cc1c:	lsl	x15, x17, x15
   3cc20:	cset	w14, ne  // ne = any
   3cc24:	orr	x14, x15, x14
   3cc28:	lsr	x15, x17, x16
   3cc2c:	ldp	x16, x12, [x12]
   3cc30:	cmp	x14, #0x0
   3cc34:	cinc	x18, x15, ne  // ne = any
   3cc38:	cset	w17, ne  // ne = any
   3cc3c:	subs	x15, x16, x18
   3cc40:	cset	w16, cc  // cc = lo, ul, last
   3cc44:	cmp	x18, #0x0
   3cc48:	sub	x12, x12, x16
   3cc4c:	cset	w16, eq  // eq = none
   3cc50:	and	w16, w17, w16
   3cc54:	sub	x12, x12, x16
   3cc58:	neg	x16, x14
   3cc5c:	tbnz	x12, #63, 3cc70 <mpfr_sub1sp@@Base+0x998>
   3cc60:	extr	x12, x12, x15, #63
   3cc64:	extr	x15, x15, x16, #63
   3cc68:	lsl	x16, x16, #1
   3cc6c:	sub	x10, x10, #0x1
   3cc70:	mov	w14, #0x7f                  	// #127
   3cc74:	mov	w17, #0x1                   	// #1
   3cc78:	and	x18, x15, x13
   3cc7c:	neg	x8, x8
   3cc80:	sub	x13, x14, x28
   3cc84:	and	x14, x15, x8
   3cc88:	lsl	x8, x17, x13
   3cc8c:	and	x13, x15, x8
   3cc90:	eor	x8, x18, x13
   3cc94:	orr	x15, x8, x16
   3cc98:	stp	x14, x12, [x9]
   3cc9c:	b	3ceec <mpfr_sub1sp@@Base+0xc14>
   3cca0:	mov	x11, xzr
   3cca4:	mov	x12, xzr
   3cca8:	sub	x10, x10, #0x40
   3ccac:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3ccb0:	b	3d380 <mpfr_sub1sp@@Base+0x10a8>
   3ccb4:	mov	w13, #0x1                   	// #1
   3ccb8:	b	3cee4 <mpfr_sub1sp@@Base+0xc0c>
   3ccbc:	cmp	x14, #0x0
   3ccc0:	csetm	x11, ne  // ne = any
   3ccc4:	sub	x12, x11, x12
   3ccc8:	orr	x11, x12, x14
   3cccc:	cmp	x11, #0x0
   3ccd0:	csetm	x11, ne  // ne = any
   3ccd4:	neg	w8, w8
   3ccd8:	neg	x14, x14
   3ccdc:	sub	x13, x11, x13
   3cce0:	str	w8, [x19, #8]
   3cce4:	cbnz	x13, 3c58c <mpfr_sub1sp@@Base+0x2b4>
   3cce8:	cmp	x12, #0x0
   3ccec:	mov	x8, #0xffffffffffffffc0    	// #-64
   3ccf0:	mov	x11, #0xffffffffffffff80    	// #-128
   3ccf4:	csel	x8, x11, x8, eq  // eq = none
   3ccf8:	csel	x13, x14, x12, eq  // eq = none
   3ccfc:	csel	x12, xzr, x14, eq  // eq = none
   3cd00:	add	x9, x8, x9
   3cd04:	mov	x14, xzr
   3cd08:	mov	x15, xzr
   3cd0c:	mov	x16, xzr
   3cd10:	clz	x8, x13
   3cd14:	cbnz	x8, 3c59c <mpfr_sub1sp@@Base+0x2c4>
   3cd18:	stp	x12, x13, [x10, #8]
   3cd1c:	str	x14, [x10]
   3cd20:	b	3d1fc <mpfr_sub1sp@@Base+0xf24>
   3cd24:	ldr	x24, [x19, #24]
   3cd28:	ldr	x1, [x21, #24]
   3cd2c:	ldr	x2, [x27, #24]
   3cd30:	mov	x3, x22
   3cd34:	mov	x0, x24
   3cd38:	bl	beb0 <__gmpn_sub_n@plt>
   3cd3c:	b	3ce10 <mpfr_sub1sp@@Base+0xb38>
   3cd40:	add	x8, x8, x28
   3cd44:	sub	x10, x8, x25
   3cd48:	cmp	x10, x28
   3cd4c:	b.le	3cfc8 <mpfr_sub1sp@@Base+0xcf0>
   3cd50:	mov	x28, x15
   3cd54:	mov	w24, wzr
   3cd58:	b	3d014 <mpfr_sub1sp@@Base+0xd3c>
   3cd5c:	ldr	x8, [x8]
   3cd60:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3cd64:	cmp	x8, x11
   3cd68:	cset	w11, eq  // eq = none
   3cd6c:	cset	w12, ne  // ne = any
   3cd70:	sub	x8, x13, #0x1
   3cd74:	b	3d380 <mpfr_sub1sp@@Base+0x10a8>
   3cd78:	cmp	x16, #0xbf
   3cd7c:	b.hi	3d2f4 <mpfr_sub1sp@@Base+0x101c>  // b.pmore
   3cd80:	cmp	x16, #0x80
   3cd84:	b.ne	3d444 <mpfr_sub1sp@@Base+0x116c>  // b.any
   3cd88:	ldp	x15, x18, [x17]
   3cd8c:	ldr	x13, [x17, #16]
   3cd90:	cmp	x15, #0x0
   3cd94:	cset	w15, ne  // ne = any
   3cd98:	orr	x17, x18, x15
   3cd9c:	b	3d46c <mpfr_sub1sp@@Base+0x1194>
   3cda0:	cmp	x11, #0x41
   3cda4:	b.ls	3d368 <mpfr_sub1sp@@Base+0x1090>  // b.plast
   3cda8:	mov	w11, #0x1                   	// #1
   3cdac:	mov	w12, #0x1                   	// #1
   3cdb0:	b	3d37c <mpfr_sub1sp@@Base+0x10a4>
   3cdb4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3cdb8:	cmp	x9, x10
   3cdbc:	b.eq	3d960 <mpfr_sub1sp@@Base+0x1688>  // b.none
   3cdc0:	ldr	x24, [x19, #24]
   3cdc4:	lsl	x1, x22, #3
   3cdc8:	cmp	x1, #0x4, lsl #12
   3cdcc:	b.hi	3d99c <mpfr_sub1sp@@Base+0x16c4>  // b.pmore
   3cdd0:	add	x9, x1, #0xf
   3cdd4:	mov	x8, sp
   3cdd8:	and	x9, x9, #0xfffffffffffffff0
   3cddc:	sub	x21, x8, x9
   3cde0:	mov	sp, x21
   3cde4:	mov	w3, #0x1                   	// #1
   3cde8:	mov	x0, x21
   3cdec:	mov	x1, x23
   3cdf0:	mov	x2, x22
   3cdf4:	bl	bd10 <__gmpn_lshift@plt>
   3cdf8:	mov	x0, x24
   3cdfc:	mov	x1, x21
   3ce00:	mov	x2, x25
   3ce04:	mov	x3, x22
   3ce08:	bl	beb0 <__gmpn_sub_n@plt>
   3ce0c:	sub	x26, x26, #0x1
   3ce10:	ldur	x9, [x29, #-16]
   3ce14:	ldr	x8, [x24, x9, lsl #3]
   3ce18:	cbz	x8, 3d774 <mpfr_sub1sp@@Base+0x149c>
   3ce1c:	clz	x21, x8
   3ce20:	cbz	x21, 3ce3c <mpfr_sub1sp@@Base+0xb64>
   3ce24:	mov	x0, x24
   3ce28:	mov	x1, x24
   3ce2c:	mov	x2, x22
   3ce30:	mov	w3, w21
   3ce34:	bl	bd10 <__gmpn_lshift@plt>
   3ce38:	sub	x26, x26, x21
   3ce3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3ce40:	ldr	x1, [x0, #2576]
   3ce44:	add	x0, x0, #0xa10
   3ce48:	blr	x1
   3ce4c:	mrs	x21, tpidr_el0
   3ce50:	ldr	x8, [x21, x0]
   3ce54:	cmp	x26, x8
   3ce58:	b.lt	3d7b4 <mpfr_sub1sp@@Base+0x14dc>  // b.tstop
   3ce5c:	str	x26, [x19, #16]
   3ce60:	ldur	x0, [x29, #-8]
   3ce64:	cbz	x0, 3d548 <mpfr_sub1sp@@Base+0x1270>
   3ce68:	bl	c400 <mpfr_tmp_free@plt>
   3ce6c:	b	3d548 <mpfr_sub1sp@@Base+0x1270>
   3ce70:	mov	x16, xzr
   3ce74:	cbnz	x13, 3ce98 <mpfr_sub1sp@@Base+0xbc0>
   3ce78:	cmp	x12, #0x0
   3ce7c:	mov	x17, #0xffffffffffffffc0    	// #-64
   3ce80:	mov	x18, #0xffffffffffffff80    	// #-128
   3ce84:	csel	x13, x15, x12, eq  // eq = none
   3ce88:	csel	x12, xzr, x15, eq  // eq = none
   3ce8c:	csel	x15, x18, x17, eq  // eq = none
   3ce90:	add	x9, x15, x9
   3ce94:	mov	x15, xzr
   3ce98:	clz	x17, x13
   3ce9c:	cbz	x17, 3d1cc <mpfr_sub1sp@@Base+0xef4>
   3cea0:	neg	x18, x17
   3cea4:	lsl	x13, x13, x17
   3cea8:	lsl	x0, x12, x17
   3ceac:	lsl	x1, x15, x17
   3ceb0:	lsr	x12, x12, x18
   3ceb4:	lsr	x15, x15, x18
   3ceb8:	lsr	x18, x16, x18
   3cebc:	lsl	x16, x16, x17
   3cec0:	orr	x13, x12, x13
   3cec4:	orr	x12, x15, x0
   3cec8:	orr	x15, x18, x1
   3cecc:	sub	x9, x9, x17
   3ced0:	b	3d1cc <mpfr_sub1sp@@Base+0xef4>
   3ced4:	mov	x13, xzr
   3ced8:	neg	x14, x8
   3cedc:	mov	x12, #0xffffffffffffffff    	// #-1
   3cee0:	sub	x10, x10, #0x1
   3cee4:	stp	x14, x12, [x9]
   3cee8:	mov	w15, #0x1                   	// #1
   3ceec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3cef0:	ldr	x1, [x0, #2576]
   3cef4:	add	x0, x0, #0xa10
   3cef8:	blr	x1
   3cefc:	mrs	x16, tpidr_el0
   3cf00:	ldr	x8, [x16, x0]
   3cf04:	cmp	x10, x8
   3cf08:	b.lt	3d500 <mpfr_sub1sp@@Base+0x1228>  // b.tstop
   3cf0c:	mov	w8, wzr
   3cf10:	cmp	w20, #0x5
   3cf14:	str	x10, [x19, #16]
   3cf18:	b.eq	3d54c <mpfr_sub1sp@@Base+0x1274>  // b.none
   3cf1c:	orr	x12, x15, x13
   3cf20:	cbz	x12, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3cf24:	cmp	w20, #0x1
   3cf28:	b.eq	3cf9c <mpfr_sub1sp@@Base+0xcc4>  // b.none
   3cf2c:	cbnz	w20, 3cf8c <mpfr_sub1sp@@Base+0xcb4>
   3cf30:	cbz	x13, 3cf9c <mpfr_sub1sp@@Base+0xcc4>
   3cf34:	cbnz	x15, 3cf44 <mpfr_sub1sp@@Base+0xc6c>
   3cf38:	ldr	x8, [x9]
   3cf3c:	lsr	x8, x8, x11
   3cf40:	tbz	w8, #0, 3cf9c <mpfr_sub1sp@@Base+0xcc4>
   3cf44:	ldp	x8, x13, [x9]
   3cf48:	mov	w12, #0x1                   	// #1
   3cf4c:	lsl	x11, x12, x11
   3cf50:	adds	x8, x8, x11
   3cf54:	str	x8, [x9]
   3cf58:	cinc	x8, x13, eq  // eq = none
   3cf5c:	str	x8, [x9, #8]
   3cf60:	cbz	x8, 3d59c <mpfr_sub1sp@@Base+0x12c4>
   3cf64:	ldr	w8, [x19, #8]
   3cf68:	cbz	w8, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3cf6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3cf70:	ldr	x1, [x0, #2640]
   3cf74:	add	x0, x0, #0xa50
   3cf78:	blr	x1
   3cf7c:	ldr	w9, [x16, x0]
   3cf80:	orr	w9, w9, #0x8
   3cf84:	str	w9, [x16, x0]
   3cf88:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3cf8c:	ldr	w8, [x19, #8]
   3cf90:	add	w8, w20, w8, lsr #31
   3cf94:	cmp	w8, #0x3
   3cf98:	b.ne	3cf44 <mpfr_sub1sp@@Base+0xc6c>  // b.any
   3cf9c:	ldr	w8, [x19, #8]
   3cfa0:	cbz	w8, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3cfa4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3cfa8:	ldr	x1, [x0, #2640]
   3cfac:	add	x0, x0, #0xa50
   3cfb0:	blr	x1
   3cfb4:	ldr	w9, [x16, x0]
   3cfb8:	neg	w8, w8
   3cfbc:	orr	w9, w9, #0x8
   3cfc0:	str	w9, [x16, x0]
   3cfc4:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3cfc8:	ldr	x9, [x27, #24]
   3cfcc:	add	x8, x10, #0x3f
   3cfd0:	cmp	x10, #0x0
   3cfd4:	csel	x8, x8, x10, lt  // lt = tstop
   3cfd8:	sub	x8, x13, x8, asr #6
   3cfdc:	ldr	x11, [x9, x8, lsl #3]
   3cfe0:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3cfe4:	lsr	x10, x12, x10
   3cfe8:	sub	x10, x10, #0x1
   3cfec:	tst	x11, x10
   3cff0:	b.ne	3d00c <mpfr_sub1sp@@Base+0xd34>  // b.any
   3cff4:	sub	x9, x9, #0x8
   3cff8:	subs	x10, x8, #0x1
   3cffc:	b.lt	3cd50 <mpfr_sub1sp@@Base+0xa78>  // b.tstop
   3d000:	ldr	x11, [x9, x8, lsl #3]
   3d004:	mov	x8, x10
   3d008:	cbz	x11, 3cff8 <mpfr_sub1sp@@Base+0xd20>
   3d00c:	mov	x28, x15
   3d010:	mov	w24, #0x1                   	// #1
   3d014:	ldr	x1, [x21, #24]
   3d018:	lsl	x8, x13, #3
   3d01c:	ldr	x9, [x23, x8]
   3d020:	ldr	x8, [x1, x8]
   3d024:	sub	x8, x8, x9
   3d028:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3d02c:	cmp	x8, x9
   3d030:	csetm	x8, hi  // hi = pmore
   3d034:	stur	x8, [x29, #-32]
   3d038:	b.hi	3d094 <mpfr_sub1sp@@Base+0xdbc>  // b.pmore
   3d03c:	stur	x8, [x29, #-40]
   3d040:	cbz	w24, 3d098 <mpfr_sub1sp@@Base+0xdc0>
   3d044:	ldur	x10, [x29, #-48]
   3d048:	ldr	x9, [x27, #24]
   3d04c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3d050:	mov	w13, #0x1                   	// #1
   3d054:	add	x11, x10, #0x1
   3d058:	add	x8, x10, #0x40
   3d05c:	cmp	x11, #0x0
   3d060:	csinc	x8, x8, x10, lt  // lt = tstop
   3d064:	ldur	x10, [x29, #-16]
   3d068:	lsr	x11, x12, x11
   3d06c:	sub	x8, x10, x8, asr #6
   3d070:	ldr	x10, [x9, x8, lsl #3]
   3d074:	and	x12, x10, x11
   3d078:	stp	x12, x13, [x29, #-40]
   3d07c:	cbz	x12, 3d08c <mpfr_sub1sp@@Base+0xdb4>
   3d080:	sub	x11, x11, #0x1
   3d084:	and	x10, x10, x11
   3d088:	cbz	x10, 3dcb4 <mpfr_sub1sp@@Base+0x19dc>
   3d08c:	ldur	x14, [x29, #-24]
   3d090:	b	3d098 <mpfr_sub1sp@@Base+0xdc0>
   3d094:	stur	x8, [x29, #-40]
   3d098:	ldr	x8, [x23]
   3d09c:	mov	w9, #0x1                   	// #1
   3d0a0:	lsl	x25, x9, x14
   3d0a4:	neg	x9, x25
   3d0a8:	and	x8, x8, x9
   3d0ac:	str	x8, [x23]
   3d0b0:	ldr	x21, [x19, #24]
   3d0b4:	mov	x2, x23
   3d0b8:	mov	x3, x22
   3d0bc:	mov	x0, x21
   3d0c0:	bl	beb0 <__gmpn_sub_n@plt>
   3d0c4:	ldur	x10, [x29, #-16]
   3d0c8:	ldr	x8, [x21, x10, lsl #3]
   3d0cc:	tbz	x8, #63, 3d6a4 <mpfr_sub1sp@@Base+0x13cc>
   3d0d0:	cmp	w20, #0x5
   3d0d4:	b.ne	3d6d8 <mpfr_sub1sp@@Base+0x1400>  // b.any
   3d0d8:	ldr	x8, [x21, x10, lsl #3]
   3d0dc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3d0e0:	cmp	x8, x9
   3d0e4:	b.eq	3d5cc <mpfr_sub1sp@@Base+0x12f4>  // b.none
   3d0e8:	orr	x8, x28, x24
   3d0ec:	cmp	x8, #0x0
   3d0f0:	cset	w20, ne  // ne = any
   3d0f4:	str	x26, [x19, #16]
   3d0f8:	ldur	x0, [x29, #-8]
   3d0fc:	cbnz	x0, 3d5b8 <mpfr_sub1sp@@Base+0x12e0>
   3d100:	ldr	w8, [x19, #8]
   3d104:	mul	w8, w8, w20
   3d108:	cbz	w8, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3d10c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d110:	ldr	x1, [x0, #2640]
   3d114:	add	x0, x0, #0xa50
   3d118:	blr	x1
   3d11c:	mrs	x9, tpidr_el0
   3d120:	ldr	w10, [x9, x0]
   3d124:	orr	w10, w10, #0x8
   3d128:	str	w10, [x9, x0]
   3d12c:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d130:	ldp	x18, x15, [x17]
   3d134:	ldr	x17, [x17, #16]
   3d138:	neg	x0, x16
   3d13c:	cmp	x18, #0x0
   3d140:	lsl	x1, x15, x0
   3d144:	lsl	x18, x17, x0
   3d148:	lsr	x15, x15, x16
   3d14c:	cset	w16, ne  // ne = any
   3d150:	orr	x16, x1, x16
   3d154:	orr	x15, x18, x15
   3d158:	ldp	x0, x18, [x12]
   3d15c:	lsr	x13, x17, x13
   3d160:	ldr	x17, [x12, #16]
   3d164:	subs	x15, x0, x15
   3d168:	sub	x12, x18, x13
   3d16c:	cset	w13, cc  // cc = lo, ul, last
   3d170:	sub	x12, x12, x13
   3d174:	cmp	x12, x18
   3d178:	cset	w0, eq  // eq = none
   3d17c:	cset	w18, hi  // hi = pmore
   3d180:	and	w13, w13, w0
   3d184:	orr	w13, w18, w13
   3d188:	sub	x13, x17, x13
   3d18c:	cbz	x16, 3d1b4 <mpfr_sub1sp@@Base+0xedc>
   3d190:	cmp	x15, #0x0
   3d194:	orr	x17, x12, x15
   3d198:	cset	w18, eq  // eq = none
   3d19c:	cmp	x17, #0x0
   3d1a0:	cset	w17, eq  // eq = none
   3d1a4:	sub	x15, x15, #0x1
   3d1a8:	sub	x12, x12, x18
   3d1ac:	sub	x13, x13, x17
   3d1b0:	neg	x16, x16
   3d1b4:	tbnz	x13, #63, 3d1cc <mpfr_sub1sp@@Base+0xef4>
   3d1b8:	extr	x13, x13, x12, #63
   3d1bc:	extr	x12, x12, x15, #63
   3d1c0:	extr	x15, x15, x16, #63
   3d1c4:	lsl	x16, x16, #1
   3d1c8:	sub	x9, x9, #0x1
   3d1cc:	mov	w17, #0xbf                  	// #191
   3d1d0:	mov	w18, #0x1                   	// #1
   3d1d4:	neg	x8, x8
   3d1d8:	sub	x17, x17, x28
   3d1dc:	and	x0, x15, x14
   3d1e0:	and	x14, x15, x8
   3d1e4:	lsl	x8, x18, x17
   3d1e8:	and	x15, x15, x8
   3d1ec:	eor	x8, x0, x15
   3d1f0:	stp	x12, x13, [x10, #8]
   3d1f4:	orr	x16, x8, x16
   3d1f8:	str	x14, [x10]
   3d1fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d200:	ldr	x1, [x0, #2576]
   3d204:	add	x0, x0, #0xa10
   3d208:	blr	x1
   3d20c:	mrs	x17, tpidr_el0
   3d210:	ldr	x8, [x17, x0]
   3d214:	cmp	x9, x8
   3d218:	b.lt	3d570 <mpfr_sub1sp@@Base+0x1298>  // b.tstop
   3d21c:	mov	w8, wzr
   3d220:	cmp	w20, #0x5
   3d224:	str	x9, [x19, #16]
   3d228:	b.eq	3d54c <mpfr_sub1sp@@Base+0x1274>  // b.none
   3d22c:	orr	x12, x16, x15
   3d230:	cbz	x12, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3d234:	cmp	w20, #0x1
   3d238:	b.eq	3d2bc <mpfr_sub1sp@@Base+0xfe4>  // b.none
   3d23c:	cbnz	w20, 3d2ac <mpfr_sub1sp@@Base+0xfd4>
   3d240:	cbz	x15, 3d2bc <mpfr_sub1sp@@Base+0xfe4>
   3d244:	cbnz	x16, 3d254 <mpfr_sub1sp@@Base+0xf7c>
   3d248:	ldr	x8, [x10]
   3d24c:	lsr	x8, x8, x11
   3d250:	tbz	w8, #0, 3d2bc <mpfr_sub1sp@@Base+0xfe4>
   3d254:	ldp	x12, x13, [x10]
   3d258:	mov	w8, #0x1                   	// #1
   3d25c:	lsl	x8, x8, x11
   3d260:	ldr	x14, [x10, #16]
   3d264:	adds	x8, x12, x8
   3d268:	cinc	x11, x13, eq  // eq = none
   3d26c:	stp	x8, x11, [x10]
   3d270:	orr	x8, x11, x8
   3d274:	cmp	x8, #0x0
   3d278:	cinc	x8, x14, eq  // eq = none
   3d27c:	str	x8, [x10, #16]
   3d280:	cbz	x8, 3d8c8 <mpfr_sub1sp@@Base+0x15f0>
   3d284:	ldr	w8, [x19, #8]
   3d288:	cbz	w8, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3d28c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d290:	ldr	x1, [x0, #2640]
   3d294:	add	x0, x0, #0xa50
   3d298:	blr	x1
   3d29c:	ldr	w9, [x17, x0]
   3d2a0:	orr	w9, w9, #0x8
   3d2a4:	str	w9, [x17, x0]
   3d2a8:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d2ac:	ldr	w8, [x19, #8]
   3d2b0:	add	w8, w20, w8, lsr #31
   3d2b4:	cmp	w8, #0x3
   3d2b8:	b.ne	3d254 <mpfr_sub1sp@@Base+0xf7c>  // b.any
   3d2bc:	ldr	w8, [x19, #8]
   3d2c0:	cbz	w8, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3d2c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d2c8:	ldr	x1, [x0, #2640]
   3d2cc:	add	x0, x0, #0xa50
   3d2d0:	blr	x1
   3d2d4:	ldr	w9, [x17, x0]
   3d2d8:	neg	w8, w8
   3d2dc:	orr	w9, w9, #0x8
   3d2e0:	str	w9, [x17, x0]
   3d2e4:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d2e8:	mov	x11, xzr
   3d2ec:	mov	x12, xzr
   3d2f0:	b	3d37c <mpfr_sub1sp@@Base+0x10a4>
   3d2f4:	ldp	x13, x15, [x12]
   3d2f8:	ldr	x18, [x12, #16]
   3d2fc:	subs	x14, x13, x8
   3d300:	cset	w13, cc  // cc = lo, ul, last
   3d304:	sub	x12, x15, x13
   3d308:	cmp	x12, x15
   3d30c:	cset	w13, hi  // hi = pmore
   3d310:	subs	x13, x18, x13
   3d314:	b.mi	3d4b8 <mpfr_sub1sp@@Base+0x11e0>  // b.first
   3d318:	cmp	x28, #0xbf
   3d31c:	mov	w15, #0x1                   	// #1
   3d320:	b.lt	3d348 <mpfr_sub1sp@@Base+0x1070>  // b.tstop
   3d324:	cmp	x16, #0xc0
   3d328:	b.hi	3d348 <mpfr_sub1sp@@Base+0x1070>  // b.pmore
   3d32c:	ldr	x12, [x17, #16]
   3d330:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3d334:	cmp	x12, x13
   3d338:	b.ne	3d344 <mpfr_sub1sp@@Base+0x106c>  // b.any
   3d33c:	ldr	x12, [x17, #8]
   3d340:	cbz	x12, 3d4cc <mpfr_sub1sp@@Base+0x11f4>
   3d344:	mov	x15, xzr
   3d348:	neg	x14, x8
   3d34c:	mov	x12, #0xffffffffffffffff    	// #-1
   3d350:	sub	x9, x9, #0x1
   3d354:	mov	w16, #0x1                   	// #1
   3d358:	stp	x14, x12, [x10]
   3d35c:	str	x12, [x10, #16]
   3d360:	mov	x13, #0xffffffffffffffff    	// #-1
   3d364:	b	3d1fc <mpfr_sub1sp@@Base+0xf24>
   3d368:	ldr	x8, [x8]
   3d36c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3d370:	cmp	x8, x11
   3d374:	cset	w11, eq  // eq = none
   3d378:	cset	w12, hi  // hi = pmore
   3d37c:	mov	x8, #0xffffffffffffffff    	// #-1
   3d380:	str	x8, [x9]
   3d384:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d388:	ldr	x1, [x0, #2576]
   3d38c:	add	x0, x0, #0xa10
   3d390:	blr	x1
   3d394:	mrs	x13, tpidr_el0
   3d398:	ldr	x14, [x13, x0]
   3d39c:	cmp	x10, x14
   3d3a0:	b.lt	3d528 <mpfr_sub1sp@@Base+0x1250>  // b.tstop
   3d3a4:	mov	w8, wzr
   3d3a8:	cmp	w20, #0x5
   3d3ac:	str	x10, [x19, #16]
   3d3b0:	b.eq	3d54c <mpfr_sub1sp@@Base+0x1274>  // b.none
   3d3b4:	orr	x14, x12, x11
   3d3b8:	cbz	x14, 3d54c <mpfr_sub1sp@@Base+0x1274>
   3d3bc:	cmp	w20, #0x1
   3d3c0:	b.eq	3d41c <mpfr_sub1sp@@Base+0x1144>  // b.none
   3d3c4:	cbnz	w20, 3d410 <mpfr_sub1sp@@Base+0x1138>
   3d3c8:	cbz	x11, 3d41c <mpfr_sub1sp@@Base+0x1144>
   3d3cc:	cbnz	x12, 3d3d8 <mpfr_sub1sp@@Base+0x1100>
   3d3d0:	ldrb	w8, [x9]
   3d3d4:	tbz	w8, #0, 3d41c <mpfr_sub1sp@@Base+0x1144>
   3d3d8:	ldr	x8, [x9]
   3d3dc:	adds	x8, x8, #0x1
   3d3e0:	str	x8, [x9]
   3d3e4:	b.cs	3d75c <mpfr_sub1sp@@Base+0x1484>  // b.hs, b.nlast
   3d3e8:	cbz	w2, 3d548 <mpfr_sub1sp@@Base+0x1270>
   3d3ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d3f0:	ldr	x1, [x0, #2640]
   3d3f4:	add	x0, x0, #0xa50
   3d3f8:	blr	x1
   3d3fc:	ldr	w8, [x13, x0]
   3d400:	orr	w8, w8, #0x8
   3d404:	str	w8, [x13, x0]
   3d408:	mov	w8, w2
   3d40c:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d410:	add	w8, w20, w2, lsr #31
   3d414:	cmp	w8, #0x3
   3d418:	b.ne	3d3d8 <mpfr_sub1sp@@Base+0x1100>  // b.any
   3d41c:	cbz	w2, 3d548 <mpfr_sub1sp@@Base+0x1270>
   3d420:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d424:	ldr	x1, [x0, #2640]
   3d428:	add	x0, x0, #0xa50
   3d42c:	blr	x1
   3d430:	ldr	w8, [x13, x0]
   3d434:	orr	w8, w8, #0x8
   3d438:	str	w8, [x13, x0]
   3d43c:	neg	w8, w2
   3d440:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d444:	ldp	x15, x13, [x17, #8]
   3d448:	ldr	x17, [x17]
   3d44c:	neg	x18, x16
   3d450:	cmp	x15, #0x0
   3d454:	lsl	x18, x13, x18
   3d458:	cset	w15, ne  // ne = any
   3d45c:	cmp	x17, #0x0
   3d460:	orr	x15, x18, x15
   3d464:	cset	w17, ne  // ne = any
   3d468:	orr	x17, x15, x17
   3d46c:	lsr	x13, x13, x16
   3d470:	ldp	x16, x18, [x12]
   3d474:	cmp	x17, #0x0
   3d478:	cset	w0, ne  // ne = any
   3d47c:	sub	x13, x16, x13
   3d480:	sub	x15, x13, x0
   3d484:	cmp	x15, x16
   3d488:	cset	w16, eq  // eq = none
   3d48c:	cset	w13, hi  // hi = pmore
   3d490:	and	w16, w0, w16
   3d494:	orr	w13, w13, w16
   3d498:	ldr	x16, [x12, #16]
   3d49c:	sub	x12, x18, x13
   3d4a0:	cmp	x12, x18
   3d4a4:	cset	w13, hi  // hi = pmore
   3d4a8:	subs	x13, x16, x13
   3d4ac:	neg	x16, x17
   3d4b0:	b.pl	3d1b8 <mpfr_sub1sp@@Base+0xee0>  // b.nfrst
   3d4b4:	b	3d1cc <mpfr_sub1sp@@Base+0xef4>
   3d4b8:	mov	w15, #0x1                   	// #1
   3d4bc:	mov	w16, #0x1                   	// #1
   3d4c0:	stp	x14, x12, [x10]
   3d4c4:	str	x13, [x10, #16]
   3d4c8:	b	3d1fc <mpfr_sub1sp@@Base+0xf24>
   3d4cc:	ldr	x12, [x17]
   3d4d0:	cmp	x12, #0x0
   3d4d4:	cset	w15, eq  // eq = none
   3d4d8:	b	3d348 <mpfr_sub1sp@@Base+0x1070>
   3d4dc:	cbnz	w20, 3d7f4 <mpfr_sub1sp@@Base+0x151c>
   3d4e0:	sub	x9, x15, #0x1
   3d4e4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3d4e8:	cmp	x10, x9
   3d4ec:	cset	w9, lt  // lt = tstop
   3d4f0:	cmp	x8, x11
   3d4f4:	cset	w8, eq  // eq = none
   3d4f8:	orr	w20, w8, w9
   3d4fc:	b	3d7f4 <mpfr_sub1sp@@Base+0x151c>
   3d500:	cbnz	w20, 3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d504:	sub	x8, x8, #0x1
   3d508:	cmp	x10, x8
   3d50c:	b.lt	3d7ec <mpfr_sub1sp@@Base+0x1514>  // b.tstop
   3d510:	mov	w20, wzr
   3d514:	cbnz	x14, 3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d518:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d51c:	cmp	x12, x8
   3d520:	b.eq	3d7ec <mpfr_sub1sp@@Base+0x1514>  // b.none
   3d524:	b	3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d528:	cbnz	w20, 3d7f4 <mpfr_sub1sp@@Base+0x151c>
   3d52c:	sub	x9, x14, #0x1
   3d530:	b	3d4e4 <mpfr_sub1sp@@Base+0x120c>
   3d534:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d538:	add	x10, x10, #0x1
   3d53c:	str	x8, [x9]
   3d540:	str	x10, [x19, #16]
   3d544:	cbnz	w2, 3c87c <mpfr_sub1sp@@Base+0x5a4>
   3d548:	mov	w8, wzr
   3d54c:	mov	w0, w8
   3d550:	mov	sp, x29
   3d554:	ldp	x20, x19, [sp, #80]
   3d558:	ldp	x22, x21, [sp, #64]
   3d55c:	ldp	x24, x23, [sp, #48]
   3d560:	ldp	x26, x25, [sp, #32]
   3d564:	ldp	x28, x27, [sp, #16]
   3d568:	ldp	x29, x30, [sp], #96
   3d56c:	ret
   3d570:	cbnz	w20, 3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d574:	sub	x8, x8, #0x1
   3d578:	cmp	x9, x8
   3d57c:	b.lt	3d7ec <mpfr_sub1sp@@Base+0x1514>  // b.tstop
   3d580:	orr	x8, x12, x14
   3d584:	mov	w20, wzr
   3d588:	cbnz	x8, 3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d58c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d590:	cmp	x13, x8
   3d594:	b.eq	3d7ec <mpfr_sub1sp@@Base+0x1514>  // b.none
   3d598:	b	3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d59c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d5a0:	add	x10, x10, #0x1
   3d5a4:	str	x8, [x9, #8]
   3d5a8:	str	x10, [x19, #16]
   3d5ac:	ldr	w8, [x19, #8]
   3d5b0:	cbnz	w8, 3cf6c <mpfr_sub1sp@@Base+0xc94>
   3d5b4:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d5b8:	bl	c400 <mpfr_tmp_free@plt>
   3d5bc:	ldr	w8, [x19, #8]
   3d5c0:	mul	w8, w8, w20
   3d5c4:	cbnz	w8, 3d10c <mpfr_sub1sp@@Base+0xe34>
   3d5c8:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d5cc:	mov	x8, x10
   3d5d0:	subs	x9, x8, #0x1
   3d5d4:	b.lt	3d808 <mpfr_sub1sp@@Base+0x1530>  // b.tstop
   3d5d8:	add	x8, x21, x8, lsl #3
   3d5dc:	ldur	x10, [x8, #-8]
   3d5e0:	mov	x8, x9
   3d5e4:	cbz	x10, 3d5d0 <mpfr_sub1sp@@Base+0x12f8>
   3d5e8:	b	3d0e8 <mpfr_sub1sp@@Base+0xe10>
   3d5ec:	mov	x8, x21
   3d5f0:	ldr	x21, [x19, #24]
   3d5f4:	neg	w10, w28
   3d5f8:	cmp	x28, x25
   3d5fc:	and	x10, x10, #0x3f
   3d600:	stur	x10, [x29, #-24]
   3d604:	b.eq	3dad0 <mpfr_sub1sp@@Base+0x17f8>  // b.none
   3d608:	add	x9, x28, #0x1
   3d60c:	cmp	x25, x9
   3d610:	cset	w10, eq  // eq = none
   3d614:	stur	x10, [x29, #-40]
   3d618:	mov	x10, #0xffffffffffffffff    	// #-1
   3d61c:	stur	x10, [x29, #-32]
   3d620:	cbnz	w20, 3d62c <mpfr_sub1sp@@Base+0x1354>
   3d624:	cmp	x25, x9
   3d628:	b.eq	3db20 <mpfr_sub1sp@@Base+0x1848>  // b.none
   3d62c:	ldr	x1, [x8, #24]
   3d630:	cmp	x21, x1
   3d634:	b.eq	3d644 <mpfr_sub1sp@@Base+0x136c>  // b.none
   3d638:	lsl	x2, x22, #3
   3d63c:	mov	x0, x21
   3d640:	bl	ba70 <memcpy@plt>
   3d644:	mov	x28, xzr
   3d648:	mov	w24, #0x1                   	// #1
   3d64c:	cbz	w20, 3d658 <mpfr_sub1sp@@Base+0x1380>
   3d650:	cmp	w20, #0x5
   3d654:	b.ne	3d8e4 <mpfr_sub1sp@@Base+0x160c>  // b.any
   3d658:	ldur	x10, [x29, #-16]
   3d65c:	b	3d0d8 <mpfr_sub1sp@@Base+0xe00>
   3d660:	sub	x0, x29, #0x8
   3d664:	bl	be10 <mpfr_tmp_allocate@plt>
   3d668:	mov	x23, x0
   3d66c:	ands	x3, x25, #0x3f
   3d670:	lsr	x24, x25, #6
   3d674:	b.ne	3cb78 <mpfr_sub1sp@@Base+0x8a0>  // b.any
   3d678:	ldr	x8, [x27, #24]
   3d67c:	add	x1, x8, x24, lsl #3
   3d680:	cmp	x1, x23
   3d684:	b.eq	3d698 <mpfr_sub1sp@@Base+0x13c0>  // b.none
   3d688:	sub	x8, x22, x24
   3d68c:	lsl	x2, x8, #3
   3d690:	mov	x0, x23
   3d694:	bl	ba70 <memcpy@plt>
   3d698:	add	x8, x23, x22, lsl #3
   3d69c:	lsl	x2, x24, #3
   3d6a0:	b	3d70c <mpfr_sub1sp@@Base+0x1434>
   3d6a4:	mov	w3, #0x1                   	// #1
   3d6a8:	mov	x0, x21
   3d6ac:	mov	x1, x21
   3d6b0:	mov	x2, x22
   3d6b4:	mov	x23, x21
   3d6b8:	bl	bd10 <__gmpn_lshift@plt>
   3d6bc:	cbnz	x28, 3db44 <mpfr_sub1sp@@Base+0x186c>
   3d6c0:	ldp	x28, x24, [x29, #-40]
   3d6c4:	ldur	x10, [x29, #-16]
   3d6c8:	sub	x26, x26, #0x1
   3d6cc:	mov	x21, x23
   3d6d0:	cmp	w20, #0x5
   3d6d4:	b.eq	3d0d8 <mpfr_sub1sp@@Base+0xe00>  // b.none
   3d6d8:	cbnz	w20, 3dba8 <mpfr_sub1sp@@Base+0x18d0>
   3d6dc:	cbnz	x28, 3db88 <mpfr_sub1sp@@Base+0x18b0>
   3d6e0:	ldur	x10, [x29, #-16]
   3d6e4:	mov	w20, wzr
   3d6e8:	b	3d0d8 <mpfr_sub1sp@@Base+0xe00>
   3d6ec:	lsl	x8, x24, #3
   3d6f0:	add	x1, x1, x8
   3d6f4:	sub	x2, x22, x24
   3d6f8:	mov	x0, x23
   3d6fc:	stur	x8, [x29, #-32]
   3d700:	bl	bd30 <__gmpn_rshift@plt>
   3d704:	ldur	x2, [x29, #-32]
   3d708:	add	x8, x23, x22, lsl #3
   3d70c:	sub	x0, x8, x2
   3d710:	mov	w1, wzr
   3d714:	bl	c150 <memset@plt>
   3d718:	ldp	x14, x13, [x29, #-24]
   3d71c:	cbnz	x14, 3cb94 <mpfr_sub1sp@@Base+0x8bc>
   3d720:	ldur	x12, [x29, #-48]
   3d724:	ldr	x9, [x27, #24]
   3d728:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3d72c:	add	x8, x12, #0x3f
   3d730:	cmp	x12, #0x0
   3d734:	csel	x8, x8, x12, lt  // lt = tstop
   3d738:	sub	x8, x13, x8, asr #6
   3d73c:	ldr	x10, [x9, x8, lsl #3]
   3d740:	lsr	x11, x11, x12
   3d744:	sub	x12, x11, #0x1
   3d748:	tst	x10, x12
   3d74c:	and	x28, x10, x11
   3d750:	b.eq	3d8a8 <mpfr_sub1sp@@Base+0x15d0>  // b.none
   3d754:	mov	w24, #0x1                   	// #1
   3d758:	b	3d9d4 <mpfr_sub1sp@@Base+0x16fc>
   3d75c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d760:	add	x10, x10, #0x1
   3d764:	str	x8, [x9]
   3d768:	str	x10, [x19, #16]
   3d76c:	cbnz	w2, 3d3ec <mpfr_sub1sp@@Base+0x1114>
   3d770:	b	3d548 <mpfr_sub1sp@@Base+0x1270>
   3d774:	mov	x23, xzr
   3d778:	mov	x22, xzr
   3d77c:	sub	x8, x9, #0x1
   3d780:	ldr	x9, [x24, x8, lsl #3]
   3d784:	add	x22, x22, #0x40
   3d788:	sub	x23, x23, #0x8
   3d78c:	sub	x8, x8, #0x1
   3d790:	cbz	x9, 3d780 <mpfr_sub1sp@@Base+0x14a8>
   3d794:	clz	x21, x9
   3d798:	sub	x0, x24, x23
   3d79c:	add	x2, x8, #0x2
   3d7a0:	mov	x1, x24
   3d7a4:	cbz	x21, 3d9b0 <mpfr_sub1sp@@Base+0x16d8>
   3d7a8:	mov	w3, w21
   3d7ac:	bl	bd10 <__gmpn_lshift@plt>
   3d7b0:	b	3d9b4 <mpfr_sub1sp@@Base+0x16dc>
   3d7b4:	ldur	x0, [x29, #-8]
   3d7b8:	cbnz	x0, 3dbd0 <mpfr_sub1sp@@Base+0x18f8>
   3d7bc:	cbnz	w20, 3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3d7c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3d7c4:	ldr	x1, [x0, #2576]
   3d7c8:	add	x0, x0, #0xa10
   3d7cc:	blr	x1
   3d7d0:	ldr	x8, [x21, x0]
   3d7d4:	sub	x8, x8, #0x1
   3d7d8:	cmp	x26, x8
   3d7dc:	b.lt	3d7ec <mpfr_sub1sp@@Base+0x1514>  // b.tstop
   3d7e0:	mov	x0, x19
   3d7e4:	bl	bf50 <mpfr_powerof2_raw@plt>
   3d7e8:	cbz	w0, 3dac4 <mpfr_sub1sp@@Base+0x17ec>
   3d7ec:	mov	w20, #0x1                   	// #1
   3d7f0:	ldr	w2, [x19, #8]
   3d7f4:	mov	x0, x19
   3d7f8:	mov	w1, w20
   3d7fc:	bl	c3c0 <mpfr_underflow@plt>
   3d800:	mov	w8, w0
   3d804:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d808:	cbz	x28, 3d814 <mpfr_sub1sp@@Base+0x153c>
   3d80c:	cmp	w20, #0x1
   3d810:	b.ne	3d82c <mpfr_sub1sp@@Base+0x1554>  // b.any
   3d814:	ldur	x8, [x29, #-32]
   3d818:	cbz	x8, 3d0e8 <mpfr_sub1sp@@Base+0xe10>
   3d81c:	ldur	x8, [x29, #-40]
   3d820:	cbz	x8, 3d0e8 <mpfr_sub1sp@@Base+0xe10>
   3d824:	cbnz	x28, 3d0e8 <mpfr_sub1sp@@Base+0xe10>
   3d828:	cbnz	w20, 3d0e8 <mpfr_sub1sp@@Base+0xe10>
   3d82c:	ldur	x10, [x29, #-24]
   3d830:	ldr	x8, [x21]
   3d834:	mov	w9, #0x1                   	// #1
   3d838:	mov	x12, x21
   3d83c:	lsl	x9, x9, x10
   3d840:	subs	x8, x8, x9
   3d844:	str	x8, [x21]
   3d848:	b.cs	3d878 <mpfr_sub1sp@@Base+0x15a0>  // b.hs, b.nlast
   3d84c:	mov	w8, #0x1                   	// #1
   3d850:	ldur	x9, [x29, #-16]
   3d854:	cmp	x8, x9
   3d858:	b.gt	3d878 <mpfr_sub1sp@@Base+0x15a0>
   3d85c:	lsl	x9, x8, #3
   3d860:	ldr	x10, [x12, x9]
   3d864:	add	x8, x8, #0x1
   3d868:	mov	x13, x12
   3d86c:	sub	x11, x10, #0x1
   3d870:	str	x11, [x12, x9]
   3d874:	cbz	x10, 3d850 <mpfr_sub1sp@@Base+0x1578>
   3d878:	ldur	x8, [x29, #-16]
   3d87c:	cmp	w20, #0x0
   3d880:	mov	w10, #0xffffffff            	// #-1
   3d884:	sub	x26, x26, #0x1
   3d888:	lsl	x8, x8, #3
   3d88c:	ldr	x9, [x12, x8]
   3d890:	cneg	w10, w10, ne  // ne = any
   3d894:	cmp	x24, #0x0
   3d898:	orr	x9, x9, #0x8000000000000000
   3d89c:	str	x9, [x12, x8]
   3d8a0:	csel	w20, wzr, w10, eq  // eq = none
   3d8a4:	b	3d0f4 <mpfr_sub1sp@@Base+0xe1c>
   3d8a8:	sub	x9, x9, #0x8
   3d8ac:	subs	x10, x8, #0x1
   3d8b0:	b.lt	3d9d0 <mpfr_sub1sp@@Base+0x16f8>  // b.tstop
   3d8b4:	ldr	x11, [x9, x8, lsl #3]
   3d8b8:	mov	w24, #0x1                   	// #1
   3d8bc:	mov	x8, x10
   3d8c0:	cbz	x11, 3d8ac <mpfr_sub1sp@@Base+0x15d4>
   3d8c4:	b	3d9d4 <mpfr_sub1sp@@Base+0x16fc>
   3d8c8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d8cc:	add	x9, x9, #0x1
   3d8d0:	str	x8, [x10, #16]
   3d8d4:	str	x9, [x19, #16]
   3d8d8:	ldr	w8, [x19, #8]
   3d8dc:	cbnz	w8, 3d28c <mpfr_sub1sp@@Base+0xfb4>
   3d8e0:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3d8e4:	ldr	w8, [x19, #8]
   3d8e8:	ldur	x10, [x29, #-16]
   3d8ec:	mov	x28, xzr
   3d8f0:	mov	w24, #0x1                   	// #1
   3d8f4:	add	w8, w20, w8, lsr #31
   3d8f8:	cmp	w8, #0x3
   3d8fc:	csinc	w20, w20, wzr, ne  // ne = any
   3d900:	cmp	w20, #0x1
   3d904:	mov	w8, #0x1                   	// #1
   3d908:	b.ne	3d0d8 <mpfr_sub1sp@@Base+0xe00>  // b.any
   3d90c:	b	3da64 <mpfr_sub1sp@@Base+0x178c>
   3d910:	sub	x0, x29, #0x8
   3d914:	bl	be10 <mpfr_tmp_allocate@plt>
   3d918:	ldr	x25, [x27, #24]
   3d91c:	mov	x24, x0
   3d920:	b	3cae8 <mpfr_sub1sp@@Base+0x810>
   3d924:	cmp	w20, #0x5
   3d928:	b.eq	3da08 <mpfr_sub1sp@@Base+0x1730>  // b.none
   3d92c:	mov	x24, xzr
   3d930:	cbnz	w20, 3da2c <mpfr_sub1sp@@Base+0x1754>
   3d934:	ldur	x21, [x29, #-48]
   3d938:	mov	x10, #0xffffffffffffffff    	// #-1
   3d93c:	mov	w8, wzr
   3d940:	ldr	x9, [x21]
   3d944:	tst	x9, x28
   3d948:	mov	x9, #0xffffffffffffffff    	// #-1
   3d94c:	mov	w28, #0x1                   	// #1
   3d950:	stp	x10, x9, [x29, #-40]
   3d954:	ldur	x10, [x29, #-16]
   3d958:	b.ne	3da64 <mpfr_sub1sp@@Base+0x178c>  // b.any
   3d95c:	b	3d0d8 <mpfr_sub1sp@@Base+0xe00>
   3d960:	sub	x9, x25, #0x8
   3d964:	sub	x10, x23, #0x8
   3d968:	mov	x11, x14
   3d96c:	subs	x13, x11, #0x1
   3d970:	lsl	x12, x8, #63
   3d974:	b.lt	3d9dc <mpfr_sub1sp@@Base+0x1704>  // b.tstop
   3d978:	lsl	x11, x11, #3
   3d97c:	ldr	x8, [x9, x11]
   3d980:	ldr	x11, [x10, x11]
   3d984:	orr	x12, x12, x8, lsr #1
   3d988:	cmp	x11, x12
   3d98c:	mov	x11, x13
   3d990:	b.eq	3d96c <mpfr_sub1sp@@Base+0x1694>  // b.none
   3d994:	b.hi	3caa0 <mpfr_sub1sp@@Base+0x7c8>  // b.pmore
   3d998:	b	3cdc0 <mpfr_sub1sp@@Base+0xae8>
   3d99c:	sub	x0, x29, #0x8
   3d9a0:	bl	be10 <mpfr_tmp_allocate@plt>
   3d9a4:	ldr	x23, [x21, #24]
   3d9a8:	mov	x21, x0
   3d9ac:	b	3cde4 <mpfr_sub1sp@@Base+0xb0c>
   3d9b0:	bl	bb40 <__gmpn_copyd@plt>
   3d9b4:	neg	x2, x23
   3d9b8:	mov	x0, x24
   3d9bc:	mov	w1, wzr
   3d9c0:	bl	c150 <memset@plt>
   3d9c4:	orr	x8, x21, x22
   3d9c8:	sub	x26, x26, x8
   3d9cc:	b	3ce3c <mpfr_sub1sp@@Base+0xb64>
   3d9d0:	mov	w24, wzr
   3d9d4:	ldp	x14, x13, [x29, #-24]
   3d9d8:	b	3d014 <mpfr_sub1sp@@Base+0xd3c>
   3d9dc:	ldr	x20, [x19, #24]
   3d9e0:	cbnz	x12, 3dc4c <mpfr_sub1sp@@Base+0x1974>
   3d9e4:	mov	x0, x20
   3d9e8:	mov	w1, wzr
   3d9ec:	mov	x2, x24
   3d9f0:	bl	c150 <memset@plt>
   3d9f4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d9f8:	str	x8, [x20, x24]
   3d9fc:	mov	w8, wzr
   3da00:	str	x26, [x19, #16]
   3da04:	b	3d54c <mpfr_sub1sp@@Base+0x1274>
   3da08:	ldur	x10, [x29, #-16]
   3da0c:	ldur	x21, [x29, #-48]
   3da10:	mov	x8, #0xffffffffffffffff    	// #-1
   3da14:	stur	x8, [x29, #-32]
   3da18:	mov	x8, #0xffffffffffffffff    	// #-1
   3da1c:	mov	x24, xzr
   3da20:	mov	w28, #0x1                   	// #1
   3da24:	stur	x8, [x29, #-40]
   3da28:	b	3d0d8 <mpfr_sub1sp@@Base+0xe00>
   3da2c:	ldr	w8, [x19, #8]
   3da30:	ldur	x10, [x29, #-16]
   3da34:	ldur	x21, [x29, #-48]
   3da38:	mov	x9, #0xffffffffffffffff    	// #-1
   3da3c:	add	w8, w20, w8, lsr #31
   3da40:	cmp	w8, #0x3
   3da44:	csinc	w20, w20, wzr, ne  // ne = any
   3da48:	mov	w28, #0x1                   	// #1
   3da4c:	stur	x9, [x29, #-40]
   3da50:	cmp	w20, #0x1
   3da54:	mov	w8, #0x1                   	// #1
   3da58:	mov	x9, #0xffffffffffffffff    	// #-1
   3da5c:	stur	x9, [x29, #-32]
   3da60:	b.ne	3d0d8 <mpfr_sub1sp@@Base+0xe00>  // b.any
   3da64:	ldur	x11, [x29, #-24]
   3da68:	ldr	x10, [x21]
   3da6c:	mov	w9, #0x1                   	// #1
   3da70:	mov	x14, x21
   3da74:	lsl	x9, x9, x11
   3da78:	subs	x10, x10, x9
   3da7c:	str	x10, [x21]
   3da80:	b.cs	3dab0 <mpfr_sub1sp@@Base+0x17d8>  // b.hs, b.nlast
   3da84:	mov	w10, #0x1                   	// #1
   3da88:	ldur	x11, [x29, #-16]
   3da8c:	cmp	x10, x11
   3da90:	b.gt	3dab0 <mpfr_sub1sp@@Base+0x17d8>
   3da94:	lsl	x11, x10, #3
   3da98:	ldr	x12, [x14, x11]
   3da9c:	add	x10, x10, #0x1
   3daa0:	mov	x15, x14
   3daa4:	sub	x13, x12, #0x1
   3daa8:	str	x13, [x14, x11]
   3daac:	cbz	x12, 3da88 <mpfr_sub1sp@@Base+0x17b0>
   3dab0:	ldur	x10, [x29, #-16]
   3dab4:	ldr	x10, [x14, x10, lsl #3]
   3dab8:	tbz	x10, #63, 3dbdc <mpfr_sub1sp@@Base+0x1904>
   3dabc:	mov	w20, #0xffffffff            	// #-1
   3dac0:	b	3d0f4 <mpfr_sub1sp@@Base+0xe1c>
   3dac4:	ldr	w2, [x19, #8]
   3dac8:	mov	w20, wzr
   3dacc:	b	3d7f4 <mpfr_sub1sp@@Base+0x151c>
   3dad0:	ldr	x10, [x27, #24]
   3dad4:	ldur	x11, [x29, #-16]
   3dad8:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3dadc:	ldr	x11, [x10, x11, lsl #3]
   3dae0:	cmp	x11, x12
   3dae4:	and	x11, x11, #0x4000000000000000
   3dae8:	stur	x11, [x29, #-40]
   3daec:	b.eq	3dd40 <mpfr_sub1sp@@Base+0x1a68>  // b.none
   3daf0:	mov	w24, #0x1                   	// #1
   3daf4:	ldr	x1, [x8, #24]
   3daf8:	cmp	w20, #0x5
   3dafc:	b.ne	3dc64 <mpfr_sub1sp@@Base+0x198c>  // b.any
   3db00:	cmp	x21, x1
   3db04:	b.eq	3db14 <mpfr_sub1sp@@Base+0x183c>  // b.none
   3db08:	lsl	x2, x22, #3
   3db0c:	mov	x0, x21
   3db10:	bl	ba70 <memcpy@plt>
   3db14:	mov	w8, #0x5                   	// #5
   3db18:	mov	w28, #0x1                   	// #1
   3db1c:	b	3da64 <mpfr_sub1sp@@Base+0x178c>
   3db20:	ldr	x9, [x27, #24]
   3db24:	ldur	x10, [x29, #-16]
   3db28:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3db2c:	ldr	x10, [x9, x10, lsl #3]
   3db30:	cmp	x10, x11
   3db34:	b.eq	3dc8c <mpfr_sub1sp@@Base+0x19b4>  // b.none
   3db38:	mov	w9, #0x1                   	// #1
   3db3c:	stur	x9, [x29, #-32]
   3db40:	b	3d62c <mpfr_sub1sp@@Base+0x1354>
   3db44:	ldr	x8, [x23]
   3db48:	mov	x9, x23
   3db4c:	subs	x8, x8, x25
   3db50:	str	x8, [x23]
   3db54:	b.cs	3d6c0 <mpfr_sub1sp@@Base+0x13e8>  // b.hs, b.nlast
   3db58:	mov	w8, #0x1                   	// #1
   3db5c:	ldur	x9, [x29, #-16]
   3db60:	cmp	x8, x9
   3db64:	b.gt	3d6c0 <mpfr_sub1sp@@Base+0x13e8>
   3db68:	lsl	x9, x8, #3
   3db6c:	ldr	x10, [x23, x9]
   3db70:	add	x8, x8, #0x1
   3db74:	mov	x12, x23
   3db78:	sub	x11, x10, #0x1
   3db7c:	str	x11, [x23, x9]
   3db80:	cbz	x10, 3db5c <mpfr_sub1sp@@Base+0x1884>
   3db84:	b	3d6c0 <mpfr_sub1sp@@Base+0x13e8>
   3db88:	mov	w8, wzr
   3db8c:	cbnz	x24, 3da64 <mpfr_sub1sp@@Base+0x178c>
   3db90:	ldr	x9, [x21]
   3db94:	mov	w20, wzr
   3db98:	tst	x9, x25
   3db9c:	ldur	x10, [x29, #-16]
   3dba0:	b.ne	3da64 <mpfr_sub1sp@@Base+0x178c>  // b.any
   3dba4:	b	3d0d8 <mpfr_sub1sp@@Base+0xe00>
   3dba8:	ldr	w8, [x19, #8]
   3dbac:	add	w8, w20, w8, lsr #31
   3dbb0:	cmp	w8, #0x3
   3dbb4:	orr	x8, x28, x24
   3dbb8:	csinc	w20, w20, wzr, ne  // ne = any
   3dbbc:	cbz	x8, 3d658 <mpfr_sub1sp@@Base+0x1380>
   3dbc0:	cmp	w20, #0x1
   3dbc4:	b.ne	3d658 <mpfr_sub1sp@@Base+0x1380>  // b.any
   3dbc8:	mov	w8, #0x1                   	// #1
   3dbcc:	b	3da64 <mpfr_sub1sp@@Base+0x178c>
   3dbd0:	bl	c400 <mpfr_tmp_free@plt>
   3dbd4:	cbnz	w20, 3d7f0 <mpfr_sub1sp@@Base+0x1518>
   3dbd8:	b	3d7c0 <mpfr_sub1sp@@Base+0x14e8>
   3dbdc:	ldr	x10, [x14]
   3dbe0:	ldur	x11, [x29, #-16]
   3dbe4:	sub	x26, x26, #0x1
   3dbe8:	mov	x12, x14
   3dbec:	lsl	x10, x10, #1
   3dbf0:	lsl	x11, x11, #3
   3dbf4:	str	x10, [x14]
   3dbf8:	ldr	x10, [x14, x11]
   3dbfc:	orr	x10, x10, #0x8000000000000000
   3dc00:	str	x10, [x14, x11]
   3dc04:	cbnz	x28, 3dc10 <mpfr_sub1sp@@Base+0x1938>
   3dc08:	cmp	w8, #0x1
   3dc0c:	b.eq	3dc28 <mpfr_sub1sp@@Base+0x1950>  // b.none
   3dc10:	ldur	x10, [x29, #-40]
   3dc14:	cbnz	x10, 3dc1c <mpfr_sub1sp@@Base+0x1944>
   3dc18:	cbz	w8, 3dc28 <mpfr_sub1sp@@Base+0x1950>
   3dc1c:	mov	w10, #0xffffffff            	// #-1
   3dc20:	cbnz	x24, 3dc40 <mpfr_sub1sp@@Base+0x1968>
   3dc24:	cbz	x28, 3dc40 <mpfr_sub1sp@@Base+0x1968>
   3dc28:	ldr	x10, [x14]
   3dc2c:	cmp	w8, #0x0
   3dc30:	mov	w11, #0x1                   	// #1
   3dc34:	orr	x9, x10, x9
   3dc38:	cneg	w10, w11, ne  // ne = any
   3dc3c:	str	x9, [x14]
   3dc40:	cmp	w8, #0x1
   3dc44:	ccmp	x24, #0x0, #0x0, eq  // eq = none
   3dc48:	b	3d8a0 <mpfr_sub1sp@@Base+0x15c8>
   3dc4c:	lsl	x2, x22, #3
   3dc50:	mov	w1, #0xff                  	// #255
   3dc54:	mov	x0, x20
   3dc58:	bl	c150 <memset@plt>
   3dc5c:	sub	x26, x26, #0x1
   3dc60:	b	3d9fc <mpfr_sub1sp@@Base+0x1724>
   3dc64:	cbnz	w20, 3dce8 <mpfr_sub1sp@@Base+0x1a10>
   3dc68:	cbz	x24, 3dd64 <mpfr_sub1sp@@Base+0x1a8c>
   3dc6c:	cmp	x21, x1
   3dc70:	b.eq	3dc80 <mpfr_sub1sp@@Base+0x19a8>  // b.none
   3dc74:	lsl	x2, x22, #3
   3dc78:	mov	x0, x21
   3dc7c:	bl	ba70 <memcpy@plt>
   3dc80:	mov	w8, wzr
   3dc84:	mov	w28, #0x1                   	// #1
   3dc88:	b	3da64 <mpfr_sub1sp@@Base+0x178c>
   3dc8c:	mov	w10, #0x1                   	// #1
   3dc90:	stur	x10, [x29, #-32]
   3dc94:	ldur	x10, [x29, #-16]
   3dc98:	sub	x9, x9, #0x8
   3dc9c:	subs	x11, x10, #0x1
   3dca0:	b.lt	3dcd8 <mpfr_sub1sp@@Base+0x1a00>  // b.tstop
   3dca4:	ldr	x12, [x9, x10, lsl #3]
   3dca8:	mov	x10, x11
   3dcac:	cbz	x12, 3dc9c <mpfr_sub1sp@@Base+0x19c4>
   3dcb0:	b	3d62c <mpfr_sub1sp@@Base+0x1354>
   3dcb4:	sub	x9, x9, #0x8
   3dcb8:	mov	w10, #0x1                   	// #1
   3dcbc:	stur	x10, [x29, #-32]
   3dcc0:	subs	x10, x8, #0x1
   3dcc4:	b.lt	3dce0 <mpfr_sub1sp@@Base+0x1a08>  // b.tstop
   3dcc8:	ldr	x11, [x9, x8, lsl #3]
   3dccc:	mov	x8, x10
   3dcd0:	cbz	x11, 3dcc0 <mpfr_sub1sp@@Base+0x19e8>
   3dcd4:	b	3d08c <mpfr_sub1sp@@Base+0xdb4>
   3dcd8:	stur	xzr, [x29, #-32]
   3dcdc:	b	3d62c <mpfr_sub1sp@@Base+0x1354>
   3dce0:	stur	xzr, [x29, #-32]
   3dce4:	b	3d08c <mpfr_sub1sp@@Base+0xdb4>
   3dce8:	add	w8, w20, w9, lsr #31
   3dcec:	cmp	w8, #0x3
   3dcf0:	csinc	w20, w20, wzr, ne  // ne = any
   3dcf4:	cmp	w20, #0x1
   3dcf8:	b.ne	3dd18 <mpfr_sub1sp@@Base+0x1a40>  // b.any
   3dcfc:	cmp	x21, x1
   3dd00:	b.eq	3dd10 <mpfr_sub1sp@@Base+0x1a38>  // b.none
   3dd04:	lsl	x2, x22, #3
   3dd08:	mov	x0, x21
   3dd0c:	bl	ba70 <memcpy@plt>
   3dd10:	mov	w28, #0x1                   	// #1
   3dd14:	b	3dbc8 <mpfr_sub1sp@@Base+0x18f0>
   3dd18:	cmp	x21, x1
   3dd1c:	b.eq	3dd2c <mpfr_sub1sp@@Base+0x1a54>  // b.none
   3dd20:	lsl	x2, x22, #3
   3dd24:	mov	x0, x21
   3dd28:	bl	ba70 <memcpy@plt>
   3dd2c:	ldur	x10, [x29, #-16]
   3dd30:	mov	x8, #0xffffffffffffffff    	// #-1
   3dd34:	stur	x8, [x29, #-32]
   3dd38:	mov	w28, #0x1                   	// #1
   3dd3c:	b	3d0d8 <mpfr_sub1sp@@Base+0xe00>
   3dd40:	ldur	x11, [x29, #-16]
   3dd44:	sub	x10, x10, #0x8
   3dd48:	mov	w24, #0x1                   	// #1
   3dd4c:	subs	x12, x11, #0x1
   3dd50:	b.lt	3dd94 <mpfr_sub1sp@@Base+0x1abc>  // b.tstop
   3dd54:	ldr	x13, [x10, x11, lsl #3]
   3dd58:	mov	x11, x12
   3dd5c:	cbz	x13, 3dd4c <mpfr_sub1sp@@Base+0x1a74>
   3dd60:	b	3daf4 <mpfr_sub1sp@@Base+0x181c>
   3dd64:	ldr	x8, [x1]
   3dd68:	ldur	x9, [x29, #-24]
   3dd6c:	lsr	x8, x8, x9
   3dd70:	tbnz	w8, #0, 3dc6c <mpfr_sub1sp@@Base+0x1994>
   3dd74:	cmp	x21, x1
   3dd78:	b.eq	3dd88 <mpfr_sub1sp@@Base+0x1ab0>  // b.none
   3dd7c:	lsl	x2, x22, #3
   3dd80:	mov	x0, x21
   3dd84:	bl	ba70 <memcpy@plt>
   3dd88:	mov	x24, xzr
   3dd8c:	mov	w20, wzr
   3dd90:	b	3dd2c <mpfr_sub1sp@@Base+0x1a54>
   3dd94:	mov	x24, xzr
   3dd98:	b	3daf4 <mpfr_sub1sp@@Base+0x181c>

000000000003dd9c <mpfr_get_version@@Base>:
   3dd9c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3dda0:	add	x0, x0, #0x879
   3dda4:	ret

000000000003dda8 <mpfr_mpn_exp@@Base>:
   3dda8:	stp	x29, x30, [sp, #-96]!
   3ddac:	stp	x28, x27, [sp, #16]
   3ddb0:	stp	x26, x25, [sp, #32]
   3ddb4:	stp	x24, x23, [sp, #48]
   3ddb8:	stp	x22, x21, [sp, #64]
   3ddbc:	stp	x20, x19, [sp, #80]
   3ddc0:	mov	x29, sp
   3ddc4:	sub	sp, sp, #0x80
   3ddc8:	mov	x20, x4
   3ddcc:	mov	w23, w2
   3ddd0:	mov	x21, x1
   3ddd4:	cmp	x3, #0x0
   3ddd8:	mov	x22, x0
   3dddc:	stur	x3, [x29, #-56]
   3dde0:	b.le	3e18c <mpfr_mpn_exp@@Base+0x3e4>
   3dde4:	sub	w8, w23, #0x2
   3dde8:	cmp	w8, #0x3d
   3ddec:	b.cs	3e1b0 <mpfr_mpn_exp@@Base+0x408>  // b.hs, b.nlast
   3ddf0:	sxtw	x8, w23
   3ddf4:	lsl	x25, x20, #4
   3ddf8:	clz	x19, x8
   3ddfc:	cmp	x25, #0x4, lsl #12
   3de00:	lsl	x8, x8, x19
   3de04:	stur	xzr, [x29, #-8]
   3de08:	stur	x8, [x29, #-80]
   3de0c:	stur	x21, [x29, #-120]
   3de10:	b.hi	3e1cc <mpfr_mpn_exp@@Base+0x424>  // b.pmore
   3de14:	add	x9, x25, #0xf
   3de18:	mov	x8, sp
   3de1c:	and	x9, x9, #0xfffffffffffffff0
   3de20:	sub	x28, x8, x9
   3de24:	mov	sp, x28
   3de28:	ldur	x8, [x29, #-80]
   3de2c:	sub	x21, x20, #0x1
   3de30:	lsl	x2, x21, #3
   3de34:	mov	x0, x22
   3de38:	mov	w1, wzr
   3de3c:	str	x8, [x22, x2]
   3de40:	bl	c150 <memset@plt>
   3de44:	ldur	x9, [x29, #-56]
   3de48:	add	x8, x19, x21, lsl #6
   3de4c:	mov	x0, x28
   3de50:	mov	w1, wzr
   3de54:	clz	x23, x9
   3de58:	mov	w9, #0x40                  	// #64
   3de5c:	mov	x2, x25
   3de60:	stur	x21, [x29, #-112]
   3de64:	neg	x26, x8
   3de68:	sub	x24, x9, x23
   3de6c:	bl	c150 <memset@plt>
   3de70:	cmp	w23, #0x3e
   3de74:	stur	x24, [x29, #-64]
   3de78:	b.hi	3e108 <mpfr_mpn_exp@@Base+0x360>  // b.pmore
   3de7c:	lsl	x8, x20, #1
   3de80:	lsl	x10, x20, #6
   3de84:	lsl	x12, x20, #3
   3de88:	mov	w9, #0x3e                  	// #62
   3de8c:	stur	x10, [x29, #-72]
   3de90:	stur	x20, [x29, #-16]
   3de94:	mov	w10, #0x40                  	// #64
   3de98:	mov	w11, #0x3f                  	// #63
   3de9c:	sub	x8, x8, #0x1
   3dea0:	add	x20, x28, x12
   3dea4:	sub	w21, w9, w23
   3dea8:	stur	x8, [x29, #-40]
   3deac:	sub	x8, x10, x19
   3deb0:	sub	w25, w11, w23
   3deb4:	sub	x27, x20, #0x8
   3deb8:	mov	w23, w24
   3debc:	stur	wzr, [x29, #-92]
   3dec0:	stur	wzr, [x29, #-44]
   3dec4:	stur	x12, [x29, #-104]
   3dec8:	stur	x8, [x29, #-88]
   3decc:	b	3deec <mpfr_mpn_exp@@Base+0x144>
   3ded0:	mov	x27, x25
   3ded4:	ldur	w25, [x29, #-20]
   3ded8:	sub	w25, w25, #0x1
   3dedc:	cmp	w25, #0x0
   3dee0:	sub	x21, x21, #0x1
   3dee4:	mov	x26, x19
   3dee8:	b.le	3e11c <mpfr_mpn_exp@@Base+0x374>
   3deec:	mov	x0, x22
   3def0:	mov	x1, xzr
   3def4:	stur	w25, [x29, #-20]
   3def8:	mov	x25, x27
   3defc:	bl	ca80 <__gmpn_scan1@plt>
   3df00:	ldur	x8, [x29, #-16]
   3df04:	lsr	x24, x0, #6
   3df08:	mov	x27, x28
   3df0c:	add	x28, x28, x24, lsl #4
   3df10:	add	x1, x22, x24, lsl #3
   3df14:	sub	x2, x8, x24
   3df18:	mov	x0, x28
   3df1c:	bl	c3b0 <__gmpn_sqr@plt>
   3df20:	mov	x8, #0x4000000000000000    	// #4611686018427387904
   3df24:	cmn	x26, x8
   3df28:	b.mi	3e160 <mpfr_mpn_exp@@Base+0x3b8>  // b.first
   3df2c:	ldur	x9, [x29, #-72]
   3df30:	lsl	x8, x26, #1
   3df34:	add	x19, x8, x9
   3df38:	tbnz	x26, #63, 3df48 <mpfr_mpn_exp@@Base+0x1a0>
   3df3c:	cmp	x19, x8
   3df40:	b.cc	3e160 <mpfr_mpn_exp@@Base+0x3b8>  // b.lo, b.ul, b.last
   3df44:	tbnz	x19, #63, 3e160 <mpfr_mpn_exp@@Base+0x3b8>
   3df48:	ldur	x8, [x29, #-40]
   3df4c:	stur	x21, [x29, #-32]
   3df50:	ldr	x8, [x27, x8, lsl #3]
   3df54:	tbnz	x8, #63, 3dfa8 <mpfr_mpn_exp@@Base+0x200>
   3df58:	ldur	x2, [x29, #-16]
   3df5c:	mov	w3, #0x1                   	// #1
   3df60:	mov	x0, x22
   3df64:	mov	x1, x20
   3df68:	bl	bd10 <__gmpn_lshift@plt>
   3df6c:	mov	w2, #0x1                   	// #1
   3df70:	mov	w3, #0x1                   	// #1
   3df74:	mov	x0, x25
   3df78:	mov	x1, x25
   3df7c:	bl	bd10 <__gmpn_lshift@plt>
   3df80:	ldr	x8, [x22]
   3df84:	ldur	x26, [x29, #-64]
   3df88:	sub	x19, x19, #0x1
   3df8c:	orr	x8, x8, x0
   3df90:	str	x8, [x22]
   3df94:	ldur	w8, [x29, #-44]
   3df98:	cmp	x26, w23, uxtw
   3df9c:	cinc	w8, w8, ne  // ne = any
   3dfa0:	stur	w8, [x29, #-44]
   3dfa4:	b	3dfc4 <mpfr_mpn_exp@@Base+0x21c>
   3dfa8:	ldur	x26, [x29, #-64]
   3dfac:	cmp	x20, x22
   3dfb0:	b.eq	3dfc4 <mpfr_mpn_exp@@Base+0x21c>  // b.none
   3dfb4:	ldur	x2, [x29, #-104]
   3dfb8:	mov	x1, x20
   3dfbc:	mov	x0, x22
   3dfc0:	bl	ba70 <memcpy@plt>
   3dfc4:	cmp	x26, w23, uxtw
   3dfc8:	b.ne	3e010 <mpfr_mpn_exp@@Base+0x268>  // b.any
   3dfcc:	mov	x21, x19
   3dfd0:	mov	x19, x26
   3dfd4:	mov	x26, x22
   3dfd8:	mov	w22, w23
   3dfdc:	lsl	x23, x24, #1
   3dfe0:	ldur	x24, [x29, #-16]
   3dfe4:	cmp	x23, x24
   3dfe8:	b.hi	3e01c <mpfr_mpn_exp@@Base+0x274>  // b.pmore
   3dfec:	mov	x0, x28
   3dff0:	mov	x1, xzr
   3dff4:	bl	ca80 <__gmpn_scan1@plt>
   3dff8:	ldur	x9, [x29, #-32]
   3dffc:	sub	x8, x24, x23
   3e000:	cmp	x0, x8, lsl #6
   3e004:	mov	w23, w22
   3e008:	csel	w23, w9, w22, cc  // cc = lo, ul, last
   3e00c:	b	3e024 <mpfr_mpn_exp@@Base+0x27c>
   3e010:	ldur	x24, [x29, #-16]
   3e014:	ldur	x9, [x29, #-32]
   3e018:	b	3e030 <mpfr_mpn_exp@@Base+0x288>
   3e01c:	ldur	x9, [x29, #-32]
   3e020:	mov	w23, w22
   3e024:	mov	x22, x26
   3e028:	mov	x26, x19
   3e02c:	mov	x19, x21
   3e030:	ldur	x8, [x29, #-56]
   3e034:	mov	x28, x27
   3e038:	mov	x21, x9
   3e03c:	lsr	x8, x8, x9
   3e040:	tbz	w8, #0, 3ded0 <mpfr_mpn_exp@@Base+0x128>
   3e044:	ldur	x3, [x29, #-80]
   3e048:	mov	x0, x25
   3e04c:	mov	x1, x22
   3e050:	mov	x2, x24
   3e054:	mov	x27, x25
   3e058:	bl	cd10 <__gmpn_mul_1@plt>
   3e05c:	ldur	x8, [x29, #-40]
   3e060:	str	x0, [x28, x8, lsl #3]
   3e064:	ldur	x8, [x29, #-88]
   3e068:	add	x19, x19, x8
   3e06c:	tbnz	x0, #63, 3e0bc <mpfr_mpn_exp@@Base+0x314>
   3e070:	mov	w3, #0x1                   	// #1
   3e074:	mov	x0, x22
   3e078:	mov	x1, x20
   3e07c:	mov	x2, x24
   3e080:	bl	bd10 <__gmpn_lshift@plt>
   3e084:	mov	w2, #0x1                   	// #1
   3e088:	mov	w3, #0x1                   	// #1
   3e08c:	mov	x0, x27
   3e090:	mov	x1, x27
   3e094:	bl	bd10 <__gmpn_lshift@plt>
   3e098:	ldr	x8, [x22]
   3e09c:	ldur	w25, [x29, #-20]
   3e0a0:	sub	x19, x19, #0x1
   3e0a4:	orr	x8, x8, x0
   3e0a8:	str	x8, [x22]
   3e0ac:	mov	w8, w23
   3e0b0:	cmp	x26, x8
   3e0b4:	b.ne	3ded8 <mpfr_mpn_exp@@Base+0x130>  // b.any
   3e0b8:	b	3e0f4 <mpfr_mpn_exp@@Base+0x34c>
   3e0bc:	ldur	w25, [x29, #-20]
   3e0c0:	cmp	x20, x22
   3e0c4:	b.eq	3e0d8 <mpfr_mpn_exp@@Base+0x330>  // b.none
   3e0c8:	ldur	x2, [x29, #-104]
   3e0cc:	mov	x0, x22
   3e0d0:	mov	x1, x20
   3e0d4:	bl	ba70 <memcpy@plt>
   3e0d8:	ldur	w9, [x29, #-92]
   3e0dc:	mov	w8, w23
   3e0e0:	cmp	x26, x8
   3e0e4:	cinc	w9, w9, ne  // ne = any
   3e0e8:	stur	w9, [x29, #-92]
   3e0ec:	cmp	x26, x8
   3e0f0:	b.ne	3ded8 <mpfr_mpn_exp@@Base+0x130>  // b.any
   3e0f4:	ldur	x8, [x29, #-112]
   3e0f8:	ldr	x8, [x28, x8, lsl #3]
   3e0fc:	cmp	x8, #0x0
   3e100:	csel	w23, w23, w21, eq  // eq = none
   3e104:	b	3ded8 <mpfr_mpn_exp@@Base+0x130>
   3e108:	mov	w8, wzr
   3e10c:	mov	w23, w24
   3e110:	stur	wzr, [x29, #-44]
   3e114:	stur	wzr, [x29, #-92]
   3e118:	mov	x19, x26
   3e11c:	ldur	x0, [x29, #-8]
   3e120:	cbnz	x0, 3e1e0 <mpfr_mpn_exp@@Base+0x438>
   3e124:	ldur	x8, [x29, #-64]
   3e128:	cmp	x8, w23, uxtw
   3e12c:	ldur	x8, [x29, #-120]
   3e130:	str	x19, [x8]
   3e134:	ldur	w8, [x29, #-44]
   3e138:	b.ne	3e144 <mpfr_mpn_exp@@Base+0x39c>  // b.any
   3e13c:	mov	x0, #0xffffffffffffffff    	// #-1
   3e140:	b	3e16c <mpfr_mpn_exp@@Base+0x3c4>
   3e144:	ldur	w9, [x29, #-92]
   3e148:	cmp	w8, #0x0
   3e14c:	cinc	w8, w8, lt  // lt = tstop
   3e150:	add	w9, w23, w9
   3e154:	add	w8, w9, w8, asr #1
   3e158:	add	w0, w8, #0x3
   3e15c:	b	3e16c <mpfr_mpn_exp@@Base+0x3c4>
   3e160:	ldur	x0, [x29, #-8]
   3e164:	cbnz	x0, 3e1e8 <mpfr_mpn_exp@@Base+0x440>
   3e168:	mov	x0, #0xfffffffffffffffe    	// #-2
   3e16c:	mov	sp, x29
   3e170:	ldp	x20, x19, [sp, #80]
   3e174:	ldp	x22, x21, [sp, #64]
   3e178:	ldp	x24, x23, [sp, #48]
   3e17c:	ldp	x26, x25, [sp, #32]
   3e180:	ldp	x28, x27, [sp, #16]
   3e184:	ldp	x29, x30, [sp], #96
   3e188:	ret
   3e18c:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3e190:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3e194:	add	x0, x0, #0x87f
   3e198:	add	x2, x2, #0x889
   3e19c:	mov	w1, #0x36                  	// #54
   3e1a0:	bl	cb20 <mpfr_assert_fail@plt>
   3e1a4:	sub	w8, w23, #0x2
   3e1a8:	cmp	w8, #0x3d
   3e1ac:	b.cc	3ddf0 <mpfr_mpn_exp@@Base+0x48>  // b.lo, b.ul, b.last
   3e1b0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3e1b4:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3e1b8:	add	x0, x0, #0x87f
   3e1bc:	add	x2, x2, #0x88f
   3e1c0:	mov	w1, #0x37                  	// #55
   3e1c4:	bl	cb20 <mpfr_assert_fail@plt>
   3e1c8:	b	3ddf0 <mpfr_mpn_exp@@Base+0x48>
   3e1cc:	sub	x0, x29, #0x8
   3e1d0:	mov	x1, x25
   3e1d4:	bl	be10 <mpfr_tmp_allocate@plt>
   3e1d8:	mov	x28, x0
   3e1dc:	b	3de28 <mpfr_mpn_exp@@Base+0x80>
   3e1e0:	bl	c400 <mpfr_tmp_free@plt>
   3e1e4:	b	3e124 <mpfr_mpn_exp@@Base+0x37c>
   3e1e8:	bl	c400 <mpfr_tmp_free@plt>
   3e1ec:	b	3e168 <mpfr_mpn_exp@@Base+0x3c0>

000000000003e1f0 <mpfr_assert_fail@@Base>:
   3e1f0:	stp	x29, x30, [sp, #-48]!
   3e1f4:	str	x21, [sp, #16]
   3e1f8:	stp	x20, x19, [sp, #32]
   3e1fc:	adrp	x21, 76000 <__gmpfr_l2b@@Base+0x2e0>
   3e200:	ldr	x21, [x21, #3976]
   3e204:	mov	x19, x2
   3e208:	mov	x29, sp
   3e20c:	cbz	x0, 3e24c <mpfr_assert_fail@@Base+0x5c>
   3e210:	ldrb	w8, [x0]
   3e214:	mov	x2, x0
   3e218:	cbz	w8, 3e24c <mpfr_assert_fail@@Base+0x5c>
   3e21c:	ldr	x0, [x21]
   3e220:	mov	w20, w1
   3e224:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   3e228:	add	x1, x1, #0xb0
   3e22c:	bl	ccc0 <fprintf@plt>
   3e230:	cmn	w20, #0x1
   3e234:	b.eq	3e24c <mpfr_assert_fail@@Base+0x5c>  // b.none
   3e238:	ldr	x0, [x21]
   3e23c:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   3e240:	add	x1, x1, #0xb4
   3e244:	mov	w2, w20
   3e248:	bl	ccc0 <fprintf@plt>
   3e24c:	ldr	x0, [x21]
   3e250:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   3e254:	add	x1, x1, #0xb9
   3e258:	mov	x2, x19
   3e25c:	bl	ccc0 <fprintf@plt>
   3e260:	bl	c3e0 <abort@plt>

000000000003e264 <mpfr_allocate_func@@Base>:
   3e264:	sub	sp, sp, #0x30
   3e268:	stp	x29, x30, [sp, #16]
   3e26c:	add	x29, sp, #0x10
   3e270:	str	x19, [sp, #32]
   3e274:	mov	x19, x0
   3e278:	add	x0, x29, #0x18
   3e27c:	add	x1, sp, #0x8
   3e280:	mov	x2, sp
   3e284:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e288:	ldr	x8, [x29, #24]
   3e28c:	mov	x0, x19
   3e290:	blr	x8
   3e294:	ldr	x19, [sp, #32]
   3e298:	ldp	x29, x30, [sp, #16]
   3e29c:	add	sp, sp, #0x30
   3e2a0:	ret

000000000003e2a4 <mpfr_reallocate_func@@Base>:
   3e2a4:	sub	sp, sp, #0x40
   3e2a8:	stp	x29, x30, [sp, #16]
   3e2ac:	add	x29, sp, #0x10
   3e2b0:	str	x21, [sp, #32]
   3e2b4:	stp	x20, x19, [sp, #48]
   3e2b8:	mov	x19, x2
   3e2bc:	mov	x20, x1
   3e2c0:	mov	x21, x0
   3e2c4:	add	x0, x29, #0x18
   3e2c8:	add	x1, sp, #0x8
   3e2cc:	mov	x2, sp
   3e2d0:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e2d4:	ldr	x8, [sp, #8]
   3e2d8:	mov	x0, x21
   3e2dc:	mov	x1, x20
   3e2e0:	mov	x2, x19
   3e2e4:	blr	x8
   3e2e8:	ldp	x20, x19, [sp, #48]
   3e2ec:	ldr	x21, [sp, #32]
   3e2f0:	ldp	x29, x30, [sp, #16]
   3e2f4:	add	sp, sp, #0x40
   3e2f8:	ret

000000000003e2fc <mpfr_free_func@@Base>:
   3e2fc:	sub	sp, sp, #0x40
   3e300:	stp	x29, x30, [sp, #32]
   3e304:	add	x29, sp, #0x20
   3e308:	stp	x20, x19, [sp, #48]
   3e30c:	mov	x19, x1
   3e310:	mov	x20, x0
   3e314:	sub	x0, x29, #0x8
   3e318:	add	x1, sp, #0x10
   3e31c:	add	x2, sp, #0x8
   3e320:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e324:	ldr	x8, [sp, #8]
   3e328:	mov	x0, x20
   3e32c:	mov	x1, x19
   3e330:	blr	x8
   3e334:	ldp	x20, x19, [sp, #48]
   3e338:	ldp	x29, x30, [sp, #32]
   3e33c:	add	sp, sp, #0x40
   3e340:	ret

000000000003e344 <mpfr_tmp_allocate@@Base>:
   3e344:	sub	sp, sp, #0x40
   3e348:	stp	x29, x30, [sp, #16]
   3e34c:	add	x29, sp, #0x10
   3e350:	stp	x20, x19, [sp, #48]
   3e354:	mov	x19, x1
   3e358:	mov	x20, x0
   3e35c:	add	x0, x29, #0x18
   3e360:	add	x1, sp, #0x8
   3e364:	mov	x2, sp
   3e368:	str	x21, [sp, #32]
   3e36c:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e370:	ldr	x8, [x29, #24]
   3e374:	mov	w0, #0x18                  	// #24
   3e378:	blr	x8
   3e37c:	mov	x21, x0
   3e380:	add	x0, x29, #0x18
   3e384:	add	x1, sp, #0x8
   3e388:	mov	x2, sp
   3e38c:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e390:	ldr	x8, [x29, #24]
   3e394:	mov	x0, x19
   3e398:	blr	x8
   3e39c:	stp	x0, x19, [x21]
   3e3a0:	ldr	x8, [x20]
   3e3a4:	str	x8, [x21, #16]
   3e3a8:	str	x21, [x20]
   3e3ac:	ldr	x0, [x21]
   3e3b0:	ldp	x20, x19, [sp, #48]
   3e3b4:	ldr	x21, [sp, #32]
   3e3b8:	ldp	x29, x30, [sp, #16]
   3e3bc:	add	sp, sp, #0x40
   3e3c0:	ret

000000000003e3c4 <mpfr_tmp_free@@Base>:
   3e3c4:	sub	sp, sp, #0x40
   3e3c8:	stp	x29, x30, [sp, #16]
   3e3cc:	str	x21, [sp, #32]
   3e3d0:	stp	x20, x19, [sp, #48]
   3e3d4:	add	x29, sp, #0x10
   3e3d8:	cbz	x0, 3e430 <mpfr_tmp_free@@Base+0x6c>
   3e3dc:	mov	x19, x0
   3e3e0:	ldp	x20, x21, [x19]
   3e3e4:	add	x0, x29, #0x18
   3e3e8:	add	x1, sp, #0x8
   3e3ec:	mov	x2, sp
   3e3f0:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e3f4:	ldr	x8, [sp]
   3e3f8:	mov	x0, x20
   3e3fc:	mov	x1, x21
   3e400:	blr	x8
   3e404:	ldr	x20, [x19, #16]
   3e408:	add	x0, x29, #0x18
   3e40c:	add	x1, sp, #0x8
   3e410:	mov	x2, sp
   3e414:	bl	bca0 <__gmp_get_memory_functions@plt>
   3e418:	ldr	x8, [sp]
   3e41c:	mov	w1, #0x18                  	// #24
   3e420:	mov	x0, x19
   3e424:	blr	x8
   3e428:	mov	x19, x20
   3e42c:	cbnz	x20, 3e3e0 <mpfr_tmp_free@@Base+0x1c>
   3e430:	ldp	x20, x19, [sp, #48]
   3e434:	ldr	x21, [sp, #32]
   3e438:	ldp	x29, x30, [sp, #16]
   3e43c:	add	sp, sp, #0x40
   3e440:	ret

000000000003e444 <mpfr_sum@@Base>:
   3e444:	stp	x29, x30, [sp, #-16]!
   3e448:	cmp	x2, #0x3
   3e44c:	mov	x29, sp
   3e450:	b.cc	3e548 <mpfr_sum@@Base+0x104>  // b.lo, b.ul, b.last
   3e454:	mov	x9, #0x4                   	// #4
   3e458:	cmp	w3, #0x3
   3e45c:	mov	w13, #0xffffffff            	// #-1
   3e460:	mov	x14, #0x2                   	// #2
   3e464:	mov	w8, wzr
   3e468:	mov	w10, wzr
   3e46c:	mov	x5, xzr
   3e470:	mov	x11, xzr
   3e474:	movk	x9, #0x8000, lsl #48
   3e478:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   3e47c:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   3e480:	cneg	w13, w13, ne  // ne = any
   3e484:	movk	x14, #0x8000, lsl #48
   3e488:	ldr	x15, [x1, x11, lsl #3]
   3e48c:	ldr	x16, [x15, #16]
   3e490:	cmp	x16, x9
   3e494:	b.lt	3e4b4 <mpfr_sum@@Base+0x70>  // b.tstop
   3e498:	cmp	x16, x4
   3e49c:	csel	x4, x16, x4, gt
   3e4a0:	add	x5, x5, #0x1
   3e4a4:	add	x11, x11, #0x1
   3e4a8:	cmp	x2, x11
   3e4ac:	b.ne	3e488 <mpfr_sum@@Base+0x44>  // b.any
   3e4b0:	b	3e504 <mpfr_sum@@Base+0xc0>
   3e4b4:	cmp	x16, x12
   3e4b8:	b.eq	3e4e0 <mpfr_sum@@Base+0x9c>  // b.none
   3e4bc:	cmp	x16, x14
   3e4c0:	b.eq	3e51c <mpfr_sum@@Base+0xd8>  // b.none
   3e4c4:	cbnz	x5, 3e4a4 <mpfr_sum@@Base+0x60>
   3e4c8:	ldr	w15, [x15, #8]
   3e4cc:	mov	x5, xzr
   3e4d0:	cbz	w8, 3e4fc <mpfr_sum@@Base+0xb8>
   3e4d4:	cmp	w15, w8
   3e4d8:	csel	w8, w8, w13, eq  // eq = none
   3e4dc:	b	3e4a4 <mpfr_sum@@Base+0x60>
   3e4e0:	ldr	w15, [x15, #8]
   3e4e4:	cbz	w10, 3e4f4 <mpfr_sum@@Base+0xb0>
   3e4e8:	cmp	w15, w10
   3e4ec:	b.eq	3e4a4 <mpfr_sum@@Base+0x60>  // b.none
   3e4f0:	b	3e51c <mpfr_sum@@Base+0xd8>
   3e4f4:	mov	w10, w15
   3e4f8:	b	3e4a4 <mpfr_sum@@Base+0x60>
   3e4fc:	mov	w8, w15
   3e500:	b	3e4a4 <mpfr_sum@@Base+0x60>
   3e504:	cbnz	w10, 3e570 <mpfr_sum@@Base+0x12c>
   3e508:	cbz	x5, 3e580 <mpfr_sum@@Base+0x13c>
   3e50c:	cmp	x5, #0x2
   3e510:	b.ls	3e590 <mpfr_sum@@Base+0x14c>  // b.plast
   3e514:	ldp	x29, x30, [sp], #16
   3e518:	b	3e64c <mpfr_sum@@Base+0x208>
   3e51c:	sub	x8, x9, #0x2
   3e520:	str	x8, [x0, #16]
   3e524:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3e528:	ldr	x1, [x0, #2640]
   3e52c:	add	x0, x0, #0xa50
   3e530:	blr	x1
   3e534:	mrs	x8, tpidr_el0
   3e538:	ldr	w9, [x8, x0]
   3e53c:	orr	w9, w9, #0x4
   3e540:	str	w9, [x8, x0]
   3e544:	b	3e5e4 <mpfr_sum@@Base+0x1a0>
   3e548:	cbz	x2, 3e5d4 <mpfr_sum@@Base+0x190>
   3e54c:	ldr	x8, [x1]
   3e550:	cmp	x2, #0x1
   3e554:	b.ne	3e5f0 <mpfr_sum@@Base+0x1ac>  // b.any
   3e558:	ldr	w9, [x8, #8]
   3e55c:	mov	x1, x8
   3e560:	mov	w2, w3
   3e564:	mov	w3, w9
   3e568:	ldp	x29, x30, [sp], #16
   3e56c:	b	c690 <mpfr_set4@plt>
   3e570:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3e574:	str	x8, [x0, #16]
   3e578:	str	w10, [x0, #8]
   3e57c:	b	3e5e4 <mpfr_sum@@Base+0x1a0>
   3e580:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3e584:	str	x9, [x0, #16]
   3e588:	str	w8, [x0, #8]
   3e58c:	b	3e5e4 <mpfr_sum@@Base+0x1a0>
   3e590:	cbz	x2, 3e5b8 <mpfr_sum@@Base+0x174>
   3e594:	cmp	x5, #0x1
   3e598:	b.ne	3e600 <mpfr_sum@@Base+0x1bc>  // b.any
   3e59c:	ldr	x8, [x1]
   3e5a0:	ldr	x10, [x8, #16]
   3e5a4:	cmp	x10, x9
   3e5a8:	b.ge	3e558 <mpfr_sum@@Base+0x114>  // b.tcont
   3e5ac:	subs	x2, x2, #0x1
   3e5b0:	add	x1, x1, #0x8
   3e5b4:	b.ne	3e59c <mpfr_sum@@Base+0x158>  // b.any
   3e5b8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3e5bc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   3e5c0:	add	x0, x0, #0xd9
   3e5c4:	add	x2, x2, #0x582
   3e5c8:	mov	w1, #0x564                 	// #1380
   3e5cc:	bl	cb20 <mpfr_assert_fail@plt>
   3e5d0:	b	3e5e4 <mpfr_sum@@Base+0x1a0>
   3e5d4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3e5d8:	mov	w9, #0x1                   	// #1
   3e5dc:	str	x8, [x0, #16]
   3e5e0:	str	w9, [x0, #8]
   3e5e4:	mov	w0, wzr
   3e5e8:	ldp	x29, x30, [sp], #16
   3e5ec:	ret
   3e5f0:	ldr	x2, [x1, #8]
   3e5f4:	mov	x1, x8
   3e5f8:	ldp	x29, x30, [sp], #16
   3e5fc:	b	c1e0 <mpfr_add@plt>
   3e600:	mov	x10, xzr
   3e604:	mov	x11, #0xffffffffffffffff    	// #-1
   3e608:	b	3e620 <mpfr_sum@@Base+0x1dc>
   3e60c:	mov	x4, x11
   3e610:	add	x10, x10, #0x1
   3e614:	cmp	x2, x10
   3e618:	mov	x11, x4
   3e61c:	b.eq	3e5b8 <mpfr_sum@@Base+0x174>  // b.none
   3e620:	ldr	x8, [x1, x10, lsl #3]
   3e624:	ldr	x12, [x8, #16]
   3e628:	cmp	x12, x9
   3e62c:	b.lt	3e60c <mpfr_sum@@Base+0x1c8>  // b.tstop
   3e630:	cmn	x11, #0x1
   3e634:	mov	x4, x10
   3e638:	b.eq	3e610 <mpfr_sum@@Base+0x1cc>  // b.none
   3e63c:	ldr	x1, [x1, x11, lsl #3]
   3e640:	mov	x2, x8
   3e644:	ldp	x29, x30, [sp], #16
   3e648:	b	c1e0 <mpfr_add@plt>
   3e64c:	stp	x29, x30, [sp, #-96]!
   3e650:	stp	x28, x27, [sp, #16]
   3e654:	stp	x26, x25, [sp, #32]
   3e658:	stp	x24, x23, [sp, #48]
   3e65c:	stp	x22, x21, [sp, #64]
   3e660:	stp	x20, x19, [sp, #80]
   3e664:	mov	x29, sp
   3e668:	sub	sp, sp, #0xa0
   3e66c:	stp	x1, x2, [x29, #-64]
   3e670:	stur	x4, [x29, #-8]
   3e674:	ldr	x21, [x0, #24]
   3e678:	mov	x20, x4
   3e67c:	mov	x22, x0
   3e680:	subs	x19, x5, #0x1
   3e684:	stur	w3, [x29, #-44]
   3e688:	b.eq	3edf4 <mpfr_sum@@Base+0x9b0>  // b.none
   3e68c:	cbz	x5, 3ee58 <mpfr_sum@@Base+0xa14>
   3e690:	clz	x8, x19
   3e694:	mov	w9, #0x40                  	// #64
   3e698:	sub	w8, w9, w8
   3e69c:	ldr	x27, [x22]
   3e6a0:	add	w9, w8, #0x1
   3e6a4:	sxtw	x8, w8
   3e6a8:	sxtw	x19, w9
   3e6ac:	stur	x8, [x29, #-40]
   3e6b0:	add	x8, x27, x8
   3e6b4:	add	x8, x8, x19
   3e6b8:	add	x10, x8, #0x1
   3e6bc:	add	x11, x8, #0x40
   3e6c0:	cmp	x10, #0x0
   3e6c4:	csinc	x8, x11, x8, lt  // lt = tstop
   3e6c8:	asr	x25, x8, #6
   3e6cc:	add	x28, x25, #0x1
   3e6d0:	mvn	x9, x27
   3e6d4:	lsl	x23, x28, #6
   3e6d8:	add	x8, x23, x9
   3e6dc:	sub	x24, x23, x19
   3e6e0:	add	x9, x8, #0x3f
   3e6e4:	cmp	x8, #0x0
   3e6e8:	add	x10, x24, #0x3e
   3e6ec:	add	x11, x24, #0x7d
   3e6f0:	csel	x8, x9, x8, lt  // lt = tstop
   3e6f4:	cmp	x10, #0x0
   3e6f8:	asr	x9, x8, #6
   3e6fc:	csel	x8, x11, x10, lt  // lt = tstop
   3e700:	stur	x9, [x29, #-96]
   3e704:	add	x9, x9, #0x1
   3e708:	asr	x8, x8, #6
   3e70c:	stp	x9, x22, [x29, #-88]
   3e710:	stur	x8, [x29, #-104]
   3e714:	add	x22, x8, #0x1
   3e718:	add	x8, x9, x28
   3e71c:	add	x8, x8, x22
   3e720:	lsl	x1, x8, #3
   3e724:	cmp	x1, #0x4, lsl #12
   3e728:	stur	xzr, [x29, #-16]
   3e72c:	b.hi	3edfc <mpfr_sum@@Base+0x9b8>  // b.pmore
   3e730:	add	x9, x1, #0xf
   3e734:	mov	x8, sp
   3e738:	and	x9, x9, #0xfffffffffffffff0
   3e73c:	sub	x26, x8, x9
   3e740:	mov	sp, x26
   3e744:	add	x22, x26, x22, lsl #3
   3e748:	lsl	x2, x28, #3
   3e74c:	mov	x0, x22
   3e750:	mov	w1, wzr
   3e754:	bl	c150 <memset@plt>
   3e758:	orr	x8, x24, #0x8000000000000000
   3e75c:	cmp	x8, x20
   3e760:	b.gt	3ee0c <mpfr_sum@@Base+0x9c8>
   3e764:	sub	x5, x20, x24
   3e768:	stur	x5, [x29, #-24]
   3e76c:	add	x8, x27, #0x3
   3e770:	sub	sp, sp, #0x30
   3e774:	sub	x11, x29, #0x20
   3e778:	stp	x8, x11, [sp, #8]
   3e77c:	ldur	x8, [x29, #-40]
   3e780:	ldp	x3, x4, [x29, #-64]
   3e784:	sub	x9, x29, #0x8
   3e788:	sub	x10, x29, #0x18
   3e78c:	mov	x0, x22
   3e790:	mov	x1, x28
   3e794:	mov	x2, x23
   3e798:	mov	x6, x20
   3e79c:	mov	x7, x26
   3e7a0:	stp	x10, x9, [sp, #24]
   3e7a4:	str	w8, [sp]
   3e7a8:	bl	3f414 <mpfr_sum@@Base+0xfd0>
   3e7ac:	add	sp, sp, #0x30
   3e7b0:	cbz	x0, 3ee28 <mpfr_sum@@Base+0x9e4>
   3e7b4:	ldr	x25, [x22, x25, lsl #3]
   3e7b8:	ldp	x8, x18, [x29, #-32]
   3e7bc:	ldur	w16, [x29, #-44]
   3e7c0:	mov	w9, #0xffffffff            	// #-1
   3e7c4:	cmp	x25, #0x0
   3e7c8:	mov	x23, x0
   3e7cc:	cneg	w2, w9, ge  // ge = tcont
   3e7d0:	cmp	w16, #0x5
   3e7d4:	sub	x1, x8, x27
   3e7d8:	stur	x25, [x29, #-72]
   3e7dc:	b.ne	3e81c <mpfr_sum@@Base+0x3d8>  // b.any
   3e7e0:	subs	x8, x1, x18
   3e7e4:	b.le	3e8a0 <mpfr_sum@@Base+0x45c>
   3e7e8:	add	x9, x8, #0x3f
   3e7ec:	cmp	x8, #0x0
   3e7f0:	csel	x9, x9, x8, lt  // lt = tstop
   3e7f4:	and	x10, x9, #0xffffffffffffffc0
   3e7f8:	sub	x8, x8, x10
   3e7fc:	cmp	w8, #0x1
   3e800:	asr	x9, x9, #6
   3e804:	b.lt	3e984 <mpfr_sum@@Base+0x540>  // b.tstop
   3e808:	ldr	x9, [x22, x9, lsl #3]
   3e80c:	sub	w8, w8, #0x1
   3e810:	lsr	x8, x9, x8
   3e814:	and	x24, x8, #0x1
   3e818:	b	3e990 <mpfr_sum@@Base+0x54c>
   3e81c:	subs	x12, x1, x18
   3e820:	b.le	3e8b0 <mpfr_sum@@Base+0x46c>
   3e824:	add	x8, x12, #0x3f
   3e828:	cmp	x12, #0x0
   3e82c:	csel	x9, x8, x12, lt  // lt = tstop
   3e830:	asr	x8, x9, #6
   3e834:	ldr	x11, [x22, x8, lsl #3]
   3e838:	and	x9, x9, #0xffffffffffffffc0
   3e83c:	sub	x9, x12, x9
   3e840:	cmp	w9, #0x1
   3e844:	lsr	x10, x11, x9
   3e848:	and	x0, x10, #0x1
   3e84c:	b.lt	3e99c <mpfr_sum@@Base+0x558>  // b.tstop
   3e850:	sub	w10, w9, #0x1
   3e854:	lsr	x10, x11, x10
   3e858:	and	x17, x10, #0x1
   3e85c:	ldur	x3, [x29, #-8]
   3e860:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3e864:	cmp	x3, x10
   3e868:	b.ne	3e9b8 <mpfr_sum@@Base+0x574>  // b.any
   3e86c:	cbz	x17, 3e880 <mpfr_sum@@Base+0x43c>
   3e870:	mov	w24, #0x1                   	// #1
   3e874:	mov	w20, #0x1                   	// #1
   3e878:	cbnz	w16, 3ed84 <mpfr_sum@@Base+0x940>
   3e87c:	cbnz	x0, 3ed84 <mpfr_sum@@Base+0x940>
   3e880:	cmp	w9, #0x2
   3e884:	b.lt	3e9e4 <mpfr_sum@@Base+0x5a0>  // b.tstop
   3e888:	sub	w9, w9, #0x1
   3e88c:	mov	x10, #0xffffffffffffffff    	// #-1
   3e890:	lsl	x9, x10, x9
   3e894:	bics	xzr, x11, x9
   3e898:	b.ne	3ed7c <mpfr_sum@@Base+0x938>  // b.any
   3e89c:	b	3e9e8 <mpfr_sum@@Base+0x5a4>
   3e8a0:	ldur	x14, [x29, #-80]
   3e8a4:	mov	w24, wzr
   3e8a8:	stur	wzr, [x29, #-40]
   3e8ac:	b	3ef18 <mpfr_sum@@Base+0xad4>
   3e8b0:	b.ne	3e8c0 <mpfr_sum@@Base+0x47c>  // b.any
   3e8b4:	ldr	x8, [x22]
   3e8b8:	and	x0, x8, #0x1
   3e8bc:	b	3e8c4 <mpfr_sum@@Base+0x480>
   3e8c0:	mov	x0, xzr
   3e8c4:	ldur	x3, [x29, #-8]
   3e8c8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3e8cc:	mov	x17, xzr
   3e8d0:	cmp	x3, x8
   3e8d4:	cset	w14, ne  // ne = any
   3e8d8:	mov	w20, w14
   3e8dc:	mov	x24, x17
   3e8e0:	cbz	w14, 3ed84 <mpfr_sum@@Base+0x940>
   3e8e4:	ldur	x8, [x29, #-40]
   3e8e8:	ldur	x25, [x29, #-88]
   3e8ec:	add	x28, x22, x28, lsl #3
   3e8f0:	stp	x1, x17, [x29, #-120]
   3e8f4:	add	x8, x3, x8
   3e8f8:	subs	x8, x8, x18
   3e8fc:	lsl	x10, x25, #6
   3e900:	stur	w2, [x29, #-124]
   3e904:	stur	x0, [x29, #-152]
   3e908:	stur	x18, [x29, #-136]
   3e90c:	stur	w14, [x29, #-140]
   3e910:	stur	x10, [x29, #-104]
   3e914:	b.ge	3e938 <mpfr_sum@@Base+0x4f4>  // b.tcont
   3e918:	sub	x19, x10, x19
   3e91c:	orr	x8, x19, #0x8000000000000000
   3e920:	cmp	x3, x8
   3e924:	b.lt	3ee74 <mpfr_sum@@Base+0xa30>  // b.tstop
   3e928:	sub	x19, x3, x19
   3e92c:	mov	x20, x25
   3e930:	mov	x24, x3
   3e934:	b	3ea98 <mpfr_sum@@Base+0x654>
   3e938:	add	x9, x8, #0x2
   3e93c:	add	x8, x8, #0x41
   3e940:	cmp	x9, #0x0
   3e944:	csel	x8, x8, x9, lt  // lt = tstop
   3e948:	asr	x8, x8, #6
   3e94c:	subs	w9, w9, w8, lsl #6
   3e950:	stur	x3, [x29, #-160]
   3e954:	b.eq	3ea48 <mpfr_sum@@Base+0x604>  // b.none
   3e958:	add	x2, x8, #0x1
   3e95c:	mov	w8, #0x40                  	// #64
   3e960:	sub	w19, w8, w9
   3e964:	sub	x20, x25, x2
   3e968:	add	x0, x28, x20, lsl #3
   3e96c:	mov	x1, x22
   3e970:	mov	w3, w19
   3e974:	mov	x24, x18
   3e978:	bl	bd10 <__gmpn_lshift@plt>
   3e97c:	mov	x18, x24
   3e980:	b	3ea78 <mpfr_sum@@Base+0x634>
   3e984:	add	x8, x22, x9, lsl #3
   3e988:	ldur	x8, [x8, #-8]
   3e98c:	lsr	x24, x8, #63
   3e990:	ldur	x14, [x29, #-80]
   3e994:	stur	wzr, [x29, #-40]
   3e998:	b	3ef18 <mpfr_sum@@Base+0xad4>
   3e99c:	add	x10, x22, x8, lsl #3
   3e9a0:	ldur	x10, [x10, #-8]
   3e9a4:	lsr	x17, x10, #63
   3e9a8:	ldur	x3, [x29, #-8]
   3e9ac:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3e9b0:	cmp	x3, x10
   3e9b4:	b.eq	3e86c <mpfr_sum@@Base+0x428>  // b.none
   3e9b8:	ldur	x10, [x29, #-40]
   3e9bc:	cmp	w9, #0x1
   3e9c0:	sub	x10, x1, x10
   3e9c4:	sub	x10, x10, x3
   3e9c8:	b.eq	3ea20 <mpfr_sum@@Base+0x5dc>  // b.none
   3e9cc:	cbnz	w9, 3ea34 <mpfr_sum@@Base+0x5f0>
   3e9d0:	sub	x8, x8, #0x1
   3e9d4:	ldr	x11, [x22, x8, lsl #3]
   3e9d8:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
   3e9dc:	mov	w9, #0x40                  	// #64
   3e9e0:	b	3eca0 <mpfr_sum@@Base+0x85c>
   3e9e4:	cbz	w9, 3ec80 <mpfr_sum@@Base+0x83c>
   3e9e8:	cmp	x8, #0x1
   3e9ec:	b.lt	3ec24 <mpfr_sum@@Base+0x7e0>  // b.tstop
   3e9f0:	ldur	x9, [x29, #-104]
   3e9f4:	add	x10, x26, x9, lsl #3
   3e9f8:	ldr	x11, [x10, x8, lsl #3]
   3e9fc:	cmp	x11, #0x0
   3ea00:	cset	w9, eq  // eq = none
   3ea04:	cmp	x8, #0x2
   3ea08:	b.lt	3ea14 <mpfr_sum@@Base+0x5d0>  // b.tstop
   3ea0c:	sub	x8, x8, #0x1
   3ea10:	tbnz	w9, #0, 3e9f8 <mpfr_sum@@Base+0x5b4>
   3ea14:	cmp	x11, #0x0
   3ea18:	cset	w8, ne  // ne = any
   3ea1c:	b	3ec2c <mpfr_sum@@Base+0x7e8>
   3ea20:	cmp	x12, #0x40
   3ea24:	b.lt	3ec94 <mpfr_sum@@Base+0x850>  // b.tstop
   3ea28:	sub	x8, x8, #0x1
   3ea2c:	ldr	x11, [x22, x8, lsl #3]
   3ea30:	b	3ec98 <mpfr_sum@@Base+0x854>
   3ea34:	sub	w12, w9, #0x1
   3ea38:	mov	x13, #0xffffffffffffffff    	// #-1
   3ea3c:	lsl	x12, x13, x12
   3ea40:	mvn	x12, x12
   3ea44:	b	3eca0 <mpfr_sum@@Base+0x85c>
   3ea48:	sub	x20, x25, x8
   3ea4c:	cmp	x20, #0x1
   3ea50:	b.lt	3ea74 <mpfr_sum@@Base+0x630>  // b.tstop
   3ea54:	add	x0, x28, x20, lsl #3
   3ea58:	cmp	x0, x22
   3ea5c:	b.eq	3ea74 <mpfr_sum@@Base+0x630>  // b.none
   3ea60:	lsl	x2, x8, #3
   3ea64:	mov	x1, x22
   3ea68:	mov	x19, x18
   3ea6c:	bl	ba70 <memcpy@plt>
   3ea70:	mov	x18, x19
   3ea74:	mov	w19, wzr
   3ea78:	lsl	x8, x20, #6
   3ea7c:	add	x19, x8, w19, uxtw
   3ea80:	orr	x8, x19, #0x8000000000000000
   3ea84:	cmp	x18, x8
   3ea88:	b.lt	3ee9c <mpfr_sum@@Base+0xa58>  // b.tstop
   3ea8c:	ldur	x25, [x29, #-88]
   3ea90:	ldur	x24, [x29, #-160]
   3ea94:	sub	x19, x18, x19
   3ea98:	lsl	x2, x20, #3
   3ea9c:	mov	x0, x28
   3eaa0:	mov	w1, wzr
   3eaa4:	bl	c150 <memset@plt>
   3eaa8:	sub	sp, sp, #0x30
   3eaac:	ldur	x8, [x29, #-40]
   3eab0:	ldur	x2, [x29, #-104]
   3eab4:	ldp	x3, x4, [x29, #-64]
   3eab8:	mov	w20, #0x1                   	// #1
   3eabc:	mov	x0, x28
   3eac0:	mov	x1, x25
   3eac4:	mov	x5, x19
   3eac8:	mov	x6, x24
   3eacc:	mov	x7, x26
   3ead0:	stp	xzr, xzr, [sp, #24]
   3ead4:	stp	x20, xzr, [sp, #8]
   3ead8:	str	w8, [sp]
   3eadc:	bl	3f414 <mpfr_sum@@Base+0xfd0>
   3eae0:	add	sp, sp, #0x30
   3eae4:	cbz	x0, 3eb1c <mpfr_sum@@Base+0x6d8>
   3eae8:	ldur	x8, [x29, #-96]
   3eaec:	ldp	x14, x15, [x29, #-80]
   3eaf0:	ldur	w12, [x29, #-44]
   3eaf4:	ldp	x1, x24, [x29, #-120]
   3eaf8:	ldr	x8, [x28, x8, lsl #3]
   3eafc:	ldur	x18, [x29, #-136]
   3eb00:	ldur	w2, [x29, #-124]
   3eb04:	ldur	w16, [x29, #-140]
   3eb08:	cmp	x8, #0x0
   3eb0c:	cneg	w8, w20, lt  // lt = tstop
   3eb10:	cmp	w12, #0x3
   3eb14:	b.ne	3eb60 <mpfr_sum@@Base+0x71c>  // b.any
   3eb18:	b	3eb80 <mpfr_sum@@Base+0x73c>
   3eb1c:	ldur	w16, [x29, #-140]
   3eb20:	ldur	w12, [x29, #-44]
   3eb24:	ldur	w2, [x29, #-124]
   3eb28:	ldur	x15, [x29, #-72]
   3eb2c:	cmp	w16, #0x1
   3eb30:	b.ne	3eb3c <mpfr_sum@@Base+0x6f8>  // b.any
   3eb34:	mov	w8, wzr
   3eb38:	b	3eb4c <mpfr_sum@@Base+0x708>
   3eb3c:	ldur	x8, [x29, #-152]
   3eb40:	cmp	x8, #0x0
   3eb44:	mov	w8, #0xffffffff            	// #-1
   3eb48:	cneg	w8, w8, ne  // ne = any
   3eb4c:	ldur	x14, [x29, #-80]
   3eb50:	ldp	x1, x24, [x29, #-120]
   3eb54:	ldur	x18, [x29, #-136]
   3eb58:	cmp	w12, #0x3
   3eb5c:	b.eq	3eb80 <mpfr_sum@@Base+0x73c>  // b.none
   3eb60:	lsr	x9, x15, #63
   3eb64:	cmp	w12, #0x1
   3eb68:	eor	w9, w9, #0x1
   3eb6c:	b.ne	3eb74 <mpfr_sum@@Base+0x730>  // b.any
   3eb70:	tbnz	w9, #0, 3eb80 <mpfr_sum@@Base+0x73c>
   3eb74:	cmp	w12, #0x4
   3eb78:	b.ne	3ec44 <mpfr_sum@@Base+0x800>  // b.any
   3eb7c:	tbz	x15, #63, 3ec44 <mpfr_sum@@Base+0x800>
   3eb80:	cmp	w8, #0x0
   3eb84:	csetm	w9, ne  // ne = any
   3eb88:	cmp	w16, #0x2
   3eb8c:	stur	w9, [x29, #-40]
   3eb90:	b.ne	3ebb0 <mpfr_sum@@Base+0x76c>  // b.any
   3eb94:	cmp	x24, #0x0
   3eb98:	mov	w9, #0x1                   	// #1
   3eb9c:	cneg	w10, w9, ne  // ne = any
   3eba0:	cmp	w8, w10
   3eba4:	b.ne	3ebb0 <mpfr_sum@@Base+0x76c>  // b.any
   3eba8:	sub	w24, w9, w24
   3ebac:	b	3ef18 <mpfr_sum@@Base+0xad4>
   3ebb0:	cmp	w12, #0x3
   3ebb4:	b.eq	3ebd8 <mpfr_sum@@Base+0x794>  // b.none
   3ebb8:	cmp	w12, #0x1
   3ebbc:	cset	w9, eq  // eq = none
   3ebc0:	cmp	w12, #0x4
   3ebc4:	cset	w10, eq  // eq = none
   3ebc8:	cmp	x15, #0x0
   3ebcc:	csel	w9, w10, w9, lt  // lt = tstop
   3ebd0:	cmp	w9, #0x1
   3ebd4:	b.ne	3ebe8 <mpfr_sum@@Base+0x7a4>  // b.any
   3ebd8:	cmn	w8, #0x1
   3ebdc:	b.ne	3ebe8 <mpfr_sum@@Base+0x7a4>  // b.any
   3ebe0:	sub	w24, w24, #0x1
   3ebe4:	b	3ef18 <mpfr_sum@@Base+0xad4>
   3ebe8:	cmp	x15, #0x0
   3ebec:	cset	w9, lt  // lt = tstop
   3ebf0:	cmp	w12, #0x1
   3ebf4:	cset	w10, eq  // eq = none
   3ebf8:	cmp	w12, #0x2
   3ebfc:	b.eq	3ec14 <mpfr_sum@@Base+0x7d0>  // b.none
   3ec00:	and	w9, w10, w9
   3ec04:	tbnz	w9, #0, 3ec14 <mpfr_sum@@Base+0x7d0>
   3ec08:	cmp	w12, #0x4
   3ec0c:	b.ne	3ef18 <mpfr_sum@@Base+0xad4>  // b.any
   3ec10:	tbnz	x15, #63, 3ef18 <mpfr_sum@@Base+0xad4>
   3ec14:	cmp	w8, #0x1
   3ec18:	b.ne	3ef18 <mpfr_sum@@Base+0xad4>  // b.any
   3ec1c:	add	w24, w24, #0x1
   3ec20:	b	3ef18 <mpfr_sum@@Base+0xad4>
   3ec24:	mov	w8, wzr
   3ec28:	mov	w9, #0x1                   	// #1
   3ec2c:	cmp	x17, #0x0
   3ec30:	cset	w10, ne  // ne = any
   3ec34:	tst	w10, w9
   3ec38:	csel	x24, xzr, x17, ne  // ne = any
   3ec3c:	csinc	w20, w8, wzr, eq  // eq = none
   3ec40:	b	3ed84 <mpfr_sum@@Base+0x940>
   3ec44:	cmp	w12, #0x4
   3ec48:	cset	w11, eq  // eq = none
   3ec4c:	cmp	w12, #0x1
   3ec50:	cset	w10, eq  // eq = none
   3ec54:	cmp	x15, #0x0
   3ec58:	and	w11, w11, w9
   3ec5c:	cset	w9, lt  // lt = tstop
   3ec60:	tbnz	w11, #0, 3ede8 <mpfr_sum@@Base+0x9a4>
   3ec64:	cmp	w12, #0x2
   3ec68:	b.eq	3ede8 <mpfr_sum@@Base+0x9a4>  // b.none
   3ec6c:	and	w9, w10, w9
   3ec70:	cbnz	w9, 3ede8 <mpfr_sum@@Base+0x9a4>
   3ec74:	cmp	w16, #0x1
   3ec78:	cneg	w9, w8, eq  // eq = none
   3ec7c:	b	3eb88 <mpfr_sum@@Base+0x744>
   3ec80:	sub	x8, x8, #0x1
   3ec84:	ldr	x9, [x22, x8, lsl #3]
   3ec88:	tst	x9, #0x7fffffffffffffff
   3ec8c:	b.ne	3ed7c <mpfr_sum@@Base+0x938>  // b.any
   3ec90:	b	3e9e8 <mpfr_sum@@Base+0x5a4>
   3ec94:	mov	x11, xzr
   3ec98:	mov	x12, #0xffffffffffffffff    	// #-1
   3ec9c:	mov	w9, #0x41                  	// #65
   3eca0:	subs	x13, x9, x10
   3eca4:	csel	x15, x13, xzr, gt
   3eca8:	sub	x14, x10, x9
   3ecac:	lsr	x13, x12, x15
   3ecb0:	lsr	x11, x11, x15
   3ecb4:	csel	x12, xzr, x14, gt
   3ecb8:	ands	x11, x11, x13
   3ecbc:	b.eq	3ecd4 <mpfr_sum@@Base+0x890>  // b.none
   3ecc0:	cmp	x11, x13
   3ecc4:	b.ne	3ed7c <mpfr_sum@@Base+0x938>  // b.any
   3ecc8:	cbz	x17, 3ecf4 <mpfr_sum@@Base+0x8b0>
   3eccc:	mov	w14, #0x1                   	// #1
   3ecd0:	b	3ed00 <mpfr_sum@@Base+0x8bc>
   3ecd4:	mov	x11, xzr
   3ecd8:	cbz	x17, 3ecec <mpfr_sum@@Base+0x8a8>
   3ecdc:	cmp	w16, #0x0
   3ece0:	cset	w13, eq  // eq = none
   3ece4:	lsl	w14, w13, #1
   3ece8:	b	3ed04 <mpfr_sum@@Base+0x8c0>
   3ecec:	mov	w14, #0x1                   	// #1
   3ecf0:	b	3ed04 <mpfr_sum@@Base+0x8c0>
   3ecf4:	cmp	w16, #0x0
   3ecf8:	cset	w11, eq  // eq = none
   3ecfc:	lsl	w14, w11, #1
   3ed00:	mov	x11, #0xffffffffffffffff    	// #-1
   3ed04:	mov	w20, #0x1                   	// #1
   3ed08:	cbz	x12, 3e8dc <mpfr_sum@@Base+0x498>
   3ed0c:	cbz	w14, 3e8dc <mpfr_sum@@Base+0x498>
   3ed10:	ldur	x12, [x29, #-104]
   3ed14:	cmp	x9, x10
   3ed18:	csel	x10, x9, x10, gt
   3ed1c:	sub	x9, x10, x9
   3ed20:	add	x12, x26, x12, lsl #3
   3ed24:	sub	x9, x9, #0x40
   3ed28:	cbz	x8, 3ed60 <mpfr_sum@@Base+0x91c>
   3ed2c:	ldr	x10, [x12, x8, lsl #3]
   3ed30:	add	x13, x9, #0x40
   3ed34:	cmp	x13, #0x3f
   3ed38:	b.le	3ed68 <mpfr_sum@@Base+0x924>
   3ed3c:	cbz	x9, 3ed50 <mpfr_sum@@Base+0x90c>
   3ed40:	sub	x8, x8, #0x1
   3ed44:	cmp	x10, x11
   3ed48:	sub	x9, x9, #0x40
   3ed4c:	b.eq	3ed28 <mpfr_sum@@Base+0x8e4>  // b.none
   3ed50:	cmp	x10, x11
   3ed54:	csel	w14, w14, wzr, eq  // eq = none
   3ed58:	mov	w20, #0x1                   	// #1
   3ed5c:	b	3e8dc <mpfr_sum@@Base+0x498>
   3ed60:	cbnz	x11, 3ed7c <mpfr_sum@@Base+0x938>
   3ed64:	b	3e8e4 <mpfr_sum@@Base+0x4a0>
   3ed68:	neg	w8, w9
   3ed6c:	lsr	x9, x10, x8
   3ed70:	lsr	x8, x11, x8
   3ed74:	cmp	x9, x8
   3ed78:	b.eq	3e8e4 <mpfr_sum@@Base+0x4a0>  // b.none
   3ed7c:	mov	w20, #0x1                   	// #1
   3ed80:	mov	x24, x17
   3ed84:	cmp	w16, #0x4
   3ed88:	b.hi	3eec0 <mpfr_sum@@Base+0xa7c>  // b.pmore
   3ed8c:	adrp	x9, 64000 <mpfr_bases@@Base+0x758>
   3ed90:	mov	w8, w16
   3ed94:	add	x9, x9, #0xd4
   3ed98:	adr	x10, 3edb0 <mpfr_sum@@Base+0x96c>
   3ed9c:	ldrb	w11, [x9, x8]
   3eda0:	add	x10, x10, x11, lsl #2
   3eda4:	ldur	x14, [x29, #-80]
   3eda8:	mov	w8, wzr
   3edac:	br	x10
   3edb0:	cmp	x25, #0x0
   3edb4:	cset	w8, lt  // lt = tstop
   3edb8:	cmp	w20, #0x0
   3edbc:	cset	w9, ne  // ne = any
   3edc0:	and	w8, w8, w9
   3edc4:	b	3eef8 <mpfr_sum@@Base+0xab4>
   3edc8:	mov	w8, w20
   3edcc:	b	3eef8 <mpfr_sum@@Base+0xab4>
   3edd0:	cmp	x25, #0x0
   3edd4:	cset	w8, ge  // ge = tcont
   3edd8:	cmp	w20, #0x0
   3eddc:	cset	w9, ne  // ne = any
   3ede0:	and	w8, w9, w8
   3ede4:	b	3eef8 <mpfr_sum@@Base+0xab4>
   3ede8:	cmp	w8, #0x0
   3edec:	cset	w9, ne  // ne = any
   3edf0:	b	3eb88 <mpfr_sum@@Base+0x744>
   3edf4:	mov	w8, wzr
   3edf8:	b	3e69c <mpfr_sum@@Base+0x258>
   3edfc:	sub	x0, x29, #0x10
   3ee00:	bl	be10 <mpfr_tmp_allocate@plt>
   3ee04:	mov	x26, x0
   3ee08:	b	3e744 <mpfr_sum@@Base+0x300>
   3ee0c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3ee10:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3ee14:	add	x0, x0, #0xd9
   3ee18:	add	x2, x2, #0xe8
   3ee1c:	mov	w1, #0x278                 	// #632
   3ee20:	bl	cb20 <mpfr_assert_fail@plt>
   3ee24:	b	3e764 <mpfr_sum@@Base+0x320>
   3ee28:	ldur	w8, [x29, #-44]
   3ee2c:	ldur	x10, [x29, #-80]
   3ee30:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3ee34:	cmp	w8, #0x3
   3ee38:	mov	w8, #0xffffffff            	// #-1
   3ee3c:	cneg	w8, w8, ne  // ne = any
   3ee40:	str	w8, [x10, #8]
   3ee44:	str	x9, [x10, #16]
   3ee48:	ldur	x0, [x29, #-16]
   3ee4c:	cbnz	x0, 3f3e8 <mpfr_sum@@Base+0xfa4>
   3ee50:	mov	w22, wzr
   3ee54:	b	3f1fc <mpfr_sum@@Base+0xdb8>
   3ee58:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3ee5c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3ee60:	add	x0, x0, #0xd9
   3ee64:	add	x2, x2, #0xdf
   3ee68:	mov	w1, #0x22f                 	// #559
   3ee6c:	bl	cb20 <mpfr_assert_fail@plt>
   3ee70:	b	3e690 <mpfr_sum@@Base+0x24c>
   3ee74:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3ee78:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3ee7c:	add	x0, x0, #0xd9
   3ee80:	add	x2, x2, #0xe8
   3ee84:	mov	w1, #0x3ec                 	// #1004
   3ee88:	mov	x25, x3
   3ee8c:	bl	cb20 <mpfr_assert_fail@plt>
   3ee90:	mov	x3, x25
   3ee94:	ldur	x25, [x29, #-88]
   3ee98:	b	3e928 <mpfr_sum@@Base+0x4e4>
   3ee9c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3eea0:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3eea4:	add	x0, x0, #0xd9
   3eea8:	add	x2, x2, #0x128
   3eeac:	mov	w1, #0x3de                 	// #990
   3eeb0:	mov	x24, x18
   3eeb4:	bl	cb20 <mpfr_assert_fail@plt>
   3eeb8:	mov	x18, x24
   3eebc:	b	3ea8c <mpfr_sum@@Base+0x648>
   3eec0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3eec4:	mov	w28, w2
   3eec8:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3eecc:	add	x0, x0, #0xd9
   3eed0:	add	x2, x2, #0x117
   3eed4:	mov	x26, x1
   3eed8:	mov	w1, #0x390                 	// #912
   3eedc:	mov	x19, x18
   3eee0:	bl	cb20 <mpfr_assert_fail@plt>
   3eee4:	ldur	x14, [x29, #-80]
   3eee8:	mov	w2, w28
   3eeec:	mov	x1, x26
   3eef0:	mov	x18, x19
   3eef4:	mov	w8, w24
   3eef8:	cmp	w20, #0x0
   3eefc:	cset	w9, ne  // ne = any
   3ef00:	cmp	w8, #0x0
   3ef04:	cset	w10, eq  // eq = none
   3ef08:	tst	w9, w10
   3ef0c:	csel	w24, wzr, w8, ne  // ne = any
   3ef10:	csinv	w8, w20, wzr, eq  // eq = none
   3ef14:	stur	w8, [x29, #-40]
   3ef18:	sub	x8, x27, #0x1
   3ef1c:	add	x9, x27, #0x3e
   3ef20:	cmp	x8, #0x0
   3ef24:	add	x10, x23, #0x3f
   3ef28:	csel	x8, x9, x8, lt  // lt = tstop
   3ef2c:	cmp	x23, #0x0
   3ef30:	asr	x20, x8, #6
   3ef34:	csel	x8, x10, x23, lt  // lt = tstop
   3ef38:	and	x9, x8, #0xffffffffffffffc0
   3ef3c:	add	x25, x20, #0x1
   3ef40:	subs	x8, x1, x18
   3ef44:	sub	x23, x23, x9
   3ef48:	str	w2, [x14, #8]
   3ef4c:	b.le	3f310 <mpfr_sum@@Base+0xecc>
   3ef50:	add	x9, x8, #0x3f
   3ef54:	cmp	x8, #0x0
   3ef58:	csel	x8, x9, x8, lt  // lt = tstop
   3ef5c:	mov	x28, x27
   3ef60:	mov	x27, x22
   3ef64:	mov	x22, x14
   3ef68:	asr	x19, x8, #6
   3ef6c:	cbz	w23, 3f3b8 <mpfr_sum@@Base+0xf74>
   3ef70:	ldur	x8, [x29, #-32]
   3ef74:	mov	x0, x21
   3ef78:	mov	x2, x25
   3ef7c:	mov	w3, w23
   3ef80:	sub	x8, x8, x18
   3ef84:	add	x9, x8, #0x3f
   3ef88:	cmp	x8, #0x0
   3ef8c:	csel	x8, x9, x8, lt  // lt = tstop
   3ef90:	asr	x8, x8, #6
   3ef94:	sub	x26, x8, x20
   3ef98:	add	x1, x27, x26, lsl #3
   3ef9c:	bl	bd10 <__gmpn_lshift@plt>
   3efa0:	cmp	x26, x19
   3efa4:	b.eq	3efc0 <mpfr_sum@@Base+0xb7c>  // b.none
   3efa8:	ldr	x8, [x27, x19, lsl #3]
   3efac:	ldr	x9, [x21]
   3efb0:	neg	x10, x23
   3efb4:	lsr	x8, x8, x10
   3efb8:	orr	x8, x9, x8
   3efbc:	str	x8, [x21]
   3efc0:	cmp	x28, #0x1
   3efc4:	b.eq	3f370 <mpfr_sum@@Base+0xf2c>  // b.none
   3efc8:	lsl	x8, x25, #6
   3efcc:	sub	x9, x8, x28
   3efd0:	ldur	x8, [x29, #-72]
   3efd4:	mov	x19, x22
   3efd8:	tbnz	x8, #63, 3f040 <mpfr_sum@@Base+0xbfc>
   3efdc:	ldr	x10, [x21]
   3efe0:	mov	w8, #0x1                   	// #1
   3efe4:	ldur	w22, [x29, #-40]
   3efe8:	lsl	x8, x8, x9
   3efec:	neg	x11, x8
   3eff0:	and	x10, x10, x11
   3eff4:	cmp	w24, #0x1
   3eff8:	str	x10, [x21]
   3effc:	b.lt	3f150 <mpfr_sum@@Base+0xd0c>  // b.tstop
   3f000:	and	x9, x9, #0xffffffff
   3f004:	lsl	x9, x24, x9
   3f008:	cbz	x9, 3f0f8 <mpfr_sum@@Base+0xcb4>
   3f00c:	adds	x9, x10, x9
   3f010:	str	x9, [x21]
   3f014:	b.cc	3f190 <mpfr_sum@@Base+0xd4c>  // b.lo, b.ul, b.last
   3f018:	mov	w9, #0x1                   	// #1
   3f01c:	cmp	x9, x20
   3f020:	b.gt	3f134 <mpfr_sum@@Base+0xcf0>
   3f024:	lsl	x10, x9, #3
   3f028:	ldr	x11, [x21, x10]
   3f02c:	add	x9, x9, #0x1
   3f030:	adds	x11, x11, #0x1
   3f034:	str	x11, [x21, x10]
   3f038:	b.cs	3f01c <mpfr_sum@@Base+0xbd8>  // b.hs, b.nlast
   3f03c:	b	3f150 <mpfr_sum@@Base+0xd0c>
   3f040:	cmp	w24, #0x1
   3f044:	b.gt	3f0b8 <mpfr_sum@@Base+0xc74>
   3f048:	mov	w8, #0x1                   	// #1
   3f04c:	ldr	x10, [x21]
   3f050:	sub	w8, w8, w24
   3f054:	mov	x11, #0xffffffffffffffff    	// #-1
   3f058:	sxtw	x8, w8
   3f05c:	lsl	x8, x8, x9
   3f060:	lsl	x9, x11, x9
   3f064:	bic	x9, x9, x10
   3f068:	adds	x9, x9, x8
   3f06c:	str	x9, [x21]
   3f070:	b.cs	3f07c <mpfr_sum@@Base+0xc38>  // b.hs, b.nlast
   3f074:	tbz	w24, #31, 3f2a4 <mpfr_sum@@Base+0xe60>
   3f078:	cbnz	x8, 3f2a4 <mpfr_sum@@Base+0xe60>
   3f07c:	ldur	w22, [x29, #-40]
   3f080:	add	x8, x28, #0x3e
   3f084:	cmp	x8, #0x7f
   3f088:	b.cs	3f220 <mpfr_sum@@Base+0xddc>  // b.hs, b.nlast
   3f08c:	lsl	x8, x20, #3
   3f090:	ldr	x9, [x21, x8]
   3f094:	orr	x9, x9, #0x8000000000000000
   3f098:	str	x9, [x21, x8]
   3f09c:	ldur	x8, [x29, #-32]
   3f0a0:	add	x8, x8, #0x1
   3f0a4:	stur	x8, [x29, #-32]
   3f0a8:	str	x8, [x19, #16]
   3f0ac:	ldur	x0, [x29, #-16]
   3f0b0:	cbz	x0, 3f1a0 <mpfr_sum@@Base+0xd5c>
   3f0b4:	b	3f298 <mpfr_sum@@Base+0xe54>
   3f0b8:	ldr	x10, [x21]
   3f0bc:	mov	w8, #0x1                   	// #1
   3f0c0:	lsl	x9, x8, x9
   3f0c4:	sub	x11, x9, #0x1
   3f0c8:	orr	x10, x10, x11
   3f0cc:	mvn	x11, x10
   3f0d0:	sub	x9, x11, x9
   3f0d4:	cmn	x10, #0x1
   3f0d8:	str	x9, [x21]
   3f0dc:	b.eq	3f244 <mpfr_sum@@Base+0xe00>  // b.none
   3f0e0:	cmp	x20, x8
   3f0e4:	b.ge	3f274 <mpfr_sum@@Base+0xe30>  // b.tcont
   3f0e8:	ldr	x8, [x21, x20, lsl #3]
   3f0ec:	ldur	w22, [x29, #-40]
   3f0f0:	tbnz	x8, #63, 3f190 <mpfr_sum@@Base+0xd4c>
   3f0f4:	b	3f3d4 <mpfr_sum@@Base+0xf90>
   3f0f8:	ldr	x9, [x21, #8]
   3f0fc:	adds	x9, x9, #0x1
   3f100:	str	x9, [x21, #8]
   3f104:	b.cc	3f190 <mpfr_sum@@Base+0xd4c>  // b.lo, b.ul, b.last
   3f108:	mov	w9, #0x2                   	// #2
   3f10c:	sub	x10, x9, #0x1
   3f110:	cmp	x10, x20
   3f114:	b.ge	3f134 <mpfr_sum@@Base+0xcf0>  // b.tcont
   3f118:	lsl	x10, x9, #3
   3f11c:	ldr	x11, [x21, x10]
   3f120:	add	x9, x9, #0x1
   3f124:	adds	x11, x11, #0x1
   3f128:	str	x11, [x21, x10]
   3f12c:	b.cs	3f10c <mpfr_sum@@Base+0xcc8>  // b.hs, b.nlast
   3f130:	b	3f150 <mpfr_sum@@Base+0xd0c>
   3f134:	lsl	x9, x20, #3
   3f138:	ldr	x10, [x21, x9]
   3f13c:	orr	x10, x10, #0x8000000000000000
   3f140:	str	x10, [x21, x9]
   3f144:	ldur	x9, [x29, #-32]
   3f148:	add	x9, x9, #0x1
   3f14c:	stur	x9, [x29, #-32]
   3f150:	tbz	w24, #31, 3f190 <mpfr_sum@@Base+0xd4c>
   3f154:	ldr	x9, [x21]
   3f158:	subs	x8, x9, x8
   3f15c:	str	x8, [x21]
   3f160:	b.cs	3f188 <mpfr_sum@@Base+0xd44>  // b.hs, b.nlast
   3f164:	mov	w8, #0x1                   	// #1
   3f168:	cmp	x8, x20
   3f16c:	b.gt	3f188 <mpfr_sum@@Base+0xd44>
   3f170:	lsl	x9, x8, #3
   3f174:	ldr	x10, [x21, x9]
   3f178:	add	x8, x8, #0x1
   3f17c:	sub	x11, x10, #0x1
   3f180:	str	x11, [x21, x9]
   3f184:	cbz	x10, 3f168 <mpfr_sum@@Base+0xd24>
   3f188:	ldr	x8, [x21, x20, lsl #3]
   3f18c:	tbz	x8, #63, 3f3d4 <mpfr_sum@@Base+0xf90>
   3f190:	ldur	x8, [x29, #-32]
   3f194:	str	x8, [x19, #16]
   3f198:	ldur	x0, [x29, #-16]
   3f19c:	cbnz	x0, 3f298 <mpfr_sum@@Base+0xe54>
   3f1a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3f1a4:	ldr	x1, [x0, #2576]
   3f1a8:	add	x0, x0, #0xa10
   3f1ac:	blr	x1
   3f1b0:	mrs	x9, tpidr_el0
   3f1b4:	ldr	x10, [x9, x0]
   3f1b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3f1bc:	ldr	x1, [x0, #2608]
   3f1c0:	add	x0, x0, #0xa30
   3f1c4:	blr	x1
   3f1c8:	cmp	x8, x10
   3f1cc:	b.lt	3f3a0 <mpfr_sum@@Base+0xf5c>  // b.tstop
   3f1d0:	ldr	x10, [x9, x0]
   3f1d4:	cmp	x8, x10
   3f1d8:	b.gt	3f3a0 <mpfr_sum@@Base+0xf5c>
   3f1dc:	cbz	w22, 3f1fc <mpfr_sum@@Base+0xdb8>
   3f1e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3f1e4:	ldr	x1, [x0, #2640]
   3f1e8:	add	x0, x0, #0xa50
   3f1ec:	blr	x1
   3f1f0:	ldr	w8, [x9, x0]
   3f1f4:	orr	w8, w8, #0x8
   3f1f8:	str	w8, [x9, x0]
   3f1fc:	mov	w0, w22
   3f200:	mov	sp, x29
   3f204:	ldp	x20, x19, [sp, #80]
   3f208:	ldp	x22, x21, [sp, #64]
   3f20c:	ldp	x24, x23, [sp, #48]
   3f210:	ldp	x26, x25, [sp, #32]
   3f214:	ldp	x28, x27, [sp, #16]
   3f218:	ldp	x29, x30, [sp], #96
   3f21c:	ret
   3f220:	mov	x8, x21
   3f224:	ldr	x10, [x8, #8]!
   3f228:	cbz	x10, 3f2d4 <mpfr_sum@@Base+0xe90>
   3f22c:	mov	x9, x20
   3f230:	neg	x10, x10
   3f234:	subs	x2, x9, #0x1
   3f238:	str	x10, [x8]
   3f23c:	b.ne	3f300 <mpfr_sum@@Base+0xebc>  // b.any
   3f240:	b	3f190 <mpfr_sum@@Base+0xd4c>
   3f244:	mov	x8, xzr
   3f248:	add	x9, x21, x8, lsl #3
   3f24c:	ldr	x9, [x9, #8]
   3f250:	add	x8, x8, #0x1
   3f254:	cmn	x9, #0x1
   3f258:	b.eq	3f248 <mpfr_sum@@Base+0xe04>  // b.none
   3f25c:	mov	x10, #0xfffffffffffffffe    	// #-2
   3f260:	sub	x9, x10, x9
   3f264:	str	x9, [x21, x8, lsl #3]
   3f268:	add	x8, x8, #0x1
   3f26c:	cmp	x20, x8
   3f270:	b.lt	3f0e8 <mpfr_sum@@Base+0xca4>  // b.tstop
   3f274:	add	x0, x21, x8, lsl #3
   3f278:	sub	x2, x25, x8
   3f27c:	mov	x1, x0
   3f280:	bl	be60 <__gmpn_com@plt>
   3f284:	ldur	w22, [x29, #-40]
   3f288:	ldur	x8, [x29, #-32]
   3f28c:	str	x8, [x19, #16]
   3f290:	ldur	x0, [x29, #-16]
   3f294:	cbz	x0, 3f1a0 <mpfr_sum@@Base+0xd5c>
   3f298:	bl	c400 <mpfr_tmp_free@plt>
   3f29c:	ldr	x8, [x19, #16]
   3f2a0:	b	3f1a0 <mpfr_sum@@Base+0xd5c>
   3f2a4:	ldur	w22, [x29, #-40]
   3f2a8:	cmp	x28, #0x41
   3f2ac:	b.lt	3f190 <mpfr_sum@@Base+0xd4c>  // b.tstop
   3f2b0:	add	x0, x21, #0x8
   3f2b4:	mov	x1, x0
   3f2b8:	mov	x2, x20
   3f2bc:	bl	be60 <__gmpn_com@plt>
   3f2c0:	ldur	x8, [x29, #-32]
   3f2c4:	str	x8, [x19, #16]
   3f2c8:	ldur	x0, [x29, #-16]
   3f2cc:	cbz	x0, 3f1a0 <mpfr_sum@@Base+0xd5c>
   3f2d0:	b	3f298 <mpfr_sum@@Base+0xe54>
   3f2d4:	mov	x9, x20
   3f2d8:	subs	x9, x9, #0x1
   3f2dc:	str	xzr, [x8]
   3f2e0:	b.eq	3f08c <mpfr_sum@@Base+0xc48>  // b.none
   3f2e4:	ldr	x10, [x8, #8]!
   3f2e8:	cbz	x10, 3f2d8 <mpfr_sum@@Base+0xe94>
   3f2ec:	sub	x21, x8, #0x8
   3f2f0:	neg	x10, x10
   3f2f4:	subs	x2, x9, #0x1
   3f2f8:	str	x10, [x8]
   3f2fc:	b.eq	3f190 <mpfr_sum@@Base+0xd4c>  // b.none
   3f300:	add	x0, x8, #0x8
   3f304:	add	x1, x21, #0x10
   3f308:	bl	be60 <__gmpn_com@plt>
   3f30c:	b	3f190 <mpfr_sum@@Base+0xd4c>
   3f310:	ldur	x8, [x29, #-32]
   3f314:	mov	x1, x22
   3f318:	mov	x28, x27
   3f31c:	mov	x22, x14
   3f320:	sub	x8, x8, x18
   3f324:	add	x9, x8, #0x3f
   3f328:	add	x10, x8, #0x7e
   3f32c:	cmp	x9, #0x0
   3f330:	csel	x9, x10, x9, lt  // lt = tstop
   3f334:	asr	x26, x9, #6
   3f338:	cbz	w23, 3f3f0 <mpfr_sum@@Base+0xfac>
   3f33c:	add	x8, x21, x25, lsl #3
   3f340:	sub	x0, x8, x26, lsl #3
   3f344:	mov	x2, x26
   3f348:	mov	w3, w23
   3f34c:	bl	bd10 <__gmpn_lshift@plt>
   3f350:	cmp	x20, x26
   3f354:	b.lt	3efc0 <mpfr_sum@@Base+0xb7c>  // b.tstop
   3f358:	sub	x8, x25, x26
   3f35c:	lsl	x2, x8, #3
   3f360:	mov	x0, x21
   3f364:	mov	w1, wzr
   3f368:	bl	c150 <memset@plt>
   3f36c:	b	3efc0 <mpfr_sum@@Base+0xb7c>
   3f370:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3f374:	ldur	x10, [x29, #-72]
   3f378:	str	x8, [x21]
   3f37c:	ldur	x9, [x29, #-32]
   3f380:	mov	w8, #0x1                   	// #1
   3f384:	sub	w8, w8, w24
   3f388:	cmp	x10, #0x0
   3f38c:	mov	x19, x22
   3f390:	ldur	w22, [x29, #-40]
   3f394:	csel	w8, w8, w24, lt  // lt = tstop
   3f398:	add	x8, x9, w8, sxtw
   3f39c:	b	3f0a4 <mpfr_sum@@Base+0xc60>
   3f3a0:	ldur	w2, [x29, #-44]
   3f3a4:	mov	x0, x19
   3f3a8:	mov	w1, w22
   3f3ac:	bl	cb10 <mpfr_check_range@plt>
   3f3b0:	mov	w22, w0
   3f3b4:	b	3f1fc <mpfr_sum@@Base+0xdb8>
   3f3b8:	add	x1, x27, x19, lsl #3
   3f3bc:	cmp	x21, x1
   3f3c0:	b.eq	3efc0 <mpfr_sum@@Base+0xb7c>  // b.none
   3f3c4:	lsl	x2, x25, #3
   3f3c8:	mov	x0, x21
   3f3cc:	bl	ba70 <memcpy@plt>
   3f3d0:	b	3efc0 <mpfr_sum@@Base+0xb7c>
   3f3d4:	orr	x8, x8, #0x8000000000000000
   3f3d8:	str	x8, [x21, x20, lsl #3]
   3f3dc:	ldur	x8, [x29, #-32]
   3f3e0:	sub	x8, x8, #0x1
   3f3e4:	b	3f0a4 <mpfr_sum@@Base+0xc60>
   3f3e8:	bl	c400 <mpfr_tmp_free@plt>
   3f3ec:	b	3ee50 <mpfr_sum@@Base+0xa0c>
   3f3f0:	cmp	x8, #0x1
   3f3f4:	b.lt	3f350 <mpfr_sum@@Base+0xf0c>  // b.tstop
   3f3f8:	add	x8, x21, x25, lsl #3
   3f3fc:	sub	x0, x8, x26, lsl #3
   3f400:	cmp	x0, x1
   3f404:	b.eq	3f350 <mpfr_sum@@Base+0xf0c>  // b.none
   3f408:	lsl	x2, x26, #3
   3f40c:	bl	ba70 <memcpy@plt>
   3f410:	b	3f350 <mpfr_sum@@Base+0xf0c>
   3f414:	sub	sp, sp, #0xf0
   3f418:	stp	x29, x30, [sp, #144]
   3f41c:	add	x29, sp, #0x90
   3f420:	ldr	x8, [x29, #128]
   3f424:	ldrsw	x9, [x29, #96]
   3f428:	mov	x14, #0x4                   	// #4
   3f42c:	stp	x28, x27, [sp, #160]
   3f430:	str	x8, [sp, #16]
   3f434:	ldr	x8, [x29, #120]
   3f438:	stp	x24, x23, [sp, #192]
   3f43c:	stp	x22, x21, [sp, #208]
   3f440:	stp	x20, x19, [sp, #224]
   3f444:	str	x8, [sp, #8]
   3f448:	ldr	x8, [x29, #112]
   3f44c:	mov	x28, x7
   3f450:	mov	x27, x5
   3f454:	mov	x20, x4
   3f458:	str	x8, [sp, #24]
   3f45c:	ldr	x8, [x29, #104]
   3f460:	mov	x21, x3
   3f464:	mov	x19, x1
   3f468:	mov	x24, x0
   3f46c:	str	x8, [sp, #56]
   3f470:	sub	x8, x1, #0x1
   3f474:	stur	x8, [x29, #-56]
   3f478:	lsl	x8, x1, #6
   3f47c:	str	x8, [sp, #32]
   3f480:	add	w8, w9, #0x1
   3f484:	sub	x8, x2, w8, sxtw
   3f488:	sub	x23, x0, #0x10
   3f48c:	movk	x14, #0x8000, lsl #48
   3f490:	str	x8, [sp, #48]
   3f494:	orr	x8, x8, #0x8000000000000000
   3f498:	stp	x26, x25, [sp, #176]
   3f49c:	stur	x6, [x29, #-16]
   3f4a0:	str	x9, [sp, #72]
   3f4a4:	stur	x2, [x29, #-64]
   3f4a8:	str	x8, [sp, #40]
   3f4ac:	stp	x7, x1, [x29, #-48]
   3f4b0:	stur	x0, [x29, #-32]
   3f4b4:	str	x23, [sp, #64]
   3f4b8:	cbz	x20, 3f7ec <mpfr_sum@@Base+0x13a8>
   3f4bc:	mov	x23, xzr
   3f4c0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3f4c4:	stur	x8, [x29, #-8]
   3f4c8:	stur	x27, [x29, #-24]
   3f4cc:	b	3f4e0 <mpfr_sum@@Base+0x109c>
   3f4d0:	ldur	x24, [x29, #-32]
   3f4d4:	add	x23, x23, #0x1
   3f4d8:	cmp	x23, x20
   3f4dc:	b.eq	3f7f4 <mpfr_sum@@Base+0x13b0>  // b.none
   3f4e0:	ldr	x8, [x21, x23, lsl #3]
   3f4e4:	ldr	x9, [x8, #16]
   3f4e8:	cmp	x9, x14
   3f4ec:	b.lt	3f4d4 <mpfr_sum@@Base+0x1090>  // b.tstop
   3f4f0:	ldr	x10, [x8]
   3f4f4:	ldr	x25, [x8, #24]
   3f4f8:	sub	x8, x10, #0x1
   3f4fc:	add	x11, x10, #0x3e
   3f500:	cmp	x8, #0x0
   3f504:	csel	x8, x11, x8, lt  // lt = tstop
   3f508:	asr	x8, x8, #6
   3f50c:	add	x26, x8, #0x1
   3f510:	sub	x8, x9, x26, lsl #6
   3f514:	subs	x8, x8, x27
   3f518:	b.mi	3f56c <mpfr_sum@@Base+0x1128>  // b.first
   3f51c:	lsr	x10, x8, #6
   3f520:	sub	x22, x19, x10
   3f524:	cmp	x22, #0x1
   3f528:	b.lt	3f4d4 <mpfr_sum@@Base+0x1090>  // b.tstop
   3f52c:	ldur	x11, [x29, #-16]
   3f530:	subs	x9, x9, x11
   3f534:	b.le	3f62c <mpfr_sum@@Base+0x11e8>
   3f538:	add	x11, x9, #0x3f
   3f53c:	cmp	x9, #0x0
   3f540:	csel	x11, x11, x9, lt  // lt = tstop
   3f544:	asr	x11, x11, #6
   3f548:	sub	x26, x26, x11
   3f54c:	cmp	x26, #0x1
   3f550:	b.lt	3f4d4 <mpfr_sum@@Base+0x1090>  // b.tstop
   3f554:	sub	w27, w9, w11, lsl #6
   3f558:	and	x28, x8, #0x3f
   3f55c:	add	x24, x24, x10, lsl #3
   3f560:	cbnz	x28, 3f63c <mpfr_sum@@Base+0x11f8>
   3f564:	ldp	x28, x19, [x29, #-48]
   3f568:	b	3f67c <mpfr_sum@@Base+0x1238>
   3f56c:	cmp	x9, x27
   3f570:	b.le	3f7b0 <mpfr_sum@@Base+0x136c>
   3f574:	sub	x10, x9, x10
   3f578:	cmp	x10, x27
   3f57c:	ldur	x10, [x29, #-8]
   3f580:	add	x11, x8, #0x3f
   3f584:	csel	x10, x27, x10, lt  // lt = tstop
   3f588:	cmp	x8, #0x0
   3f58c:	stur	x10, [x29, #-8]
   3f590:	csel	x10, x11, x8, lt  // lt = tstop
   3f594:	ldur	x11, [x29, #-16]
   3f598:	subs	x9, x9, x11
   3f59c:	asr	x11, x10, #6
   3f5a0:	and	x10, x10, #0xffffffffffffffc0
   3f5a4:	add	x26, x26, x11
   3f5a8:	sub	x25, x25, x11, lsl #3
   3f5ac:	sub	x22, x8, x10
   3f5b0:	b.le	3f7d0 <mpfr_sum@@Base+0x138c>
   3f5b4:	add	x8, x9, #0x3f
   3f5b8:	cmp	x9, #0x0
   3f5bc:	csel	x8, x8, x9, lt  // lt = tstop
   3f5c0:	asr	x8, x8, #6
   3f5c4:	sub	x26, x26, x8
   3f5c8:	sub	w27, w9, w8, lsl #6
   3f5cc:	cbz	x22, 3f7d8 <mpfr_sum@@Base+0x1394>
   3f5d0:	neg	w3, w22
   3f5d4:	mov	x0, x28
   3f5d8:	mov	x1, x25
   3f5dc:	mov	x2, x26
   3f5e0:	bl	bd30 <__gmpn_rshift@plt>
   3f5e4:	sub	w8, w27, w22
   3f5e8:	cmp	w8, #0x3f
   3f5ec:	sub	w9, w8, #0x40
   3f5f0:	cset	w10, gt
   3f5f4:	csel	w8, w9, w8, gt
   3f5f8:	sub	x26, x26, x10
   3f5fc:	mov	w27, wzr
   3f600:	cbz	w8, 3f620 <mpfr_sum@@Base+0x11dc>
   3f604:	add	x9, x28, x26, lsl #3
   3f608:	ldur	x10, [x9, #-8]
   3f60c:	neg	w8, w8
   3f610:	mov	x11, #0xffffffffffffffff    	// #-1
   3f614:	lsl	x8, x11, x8
   3f618:	bic	x8, x10, x8
   3f61c:	stur	x8, [x9, #-8]
   3f620:	mov	x22, x19
   3f624:	mov	x25, x28
   3f628:	b	3f674 <mpfr_sum@@Base+0x1230>
   3f62c:	mov	w27, wzr
   3f630:	and	x28, x8, #0x3f
   3f634:	add	x24, x24, x10, lsl #3
   3f638:	cbz	x28, 3f564 <mpfr_sum@@Base+0x1120>
   3f63c:	ldur	x19, [x29, #-48]
   3f640:	mov	x1, x25
   3f644:	mov	x2, x26
   3f648:	mov	w3, w28
   3f64c:	mov	x0, x19
   3f650:	bl	bd10 <__gmpn_lshift@plt>
   3f654:	subs	w27, w27, w28
   3f658:	b.pl	3f668 <mpfr_sum@@Base+0x1224>  // b.nfrst
   3f65c:	str	x0, [x19, x26, lsl #3]
   3f660:	add	x26, x26, #0x1
   3f664:	add	w27, w27, #0x40
   3f668:	mov	x25, x19
   3f66c:	mov	x28, x19
   3f670:	ldur	x19, [x29, #-40]
   3f674:	mov	x14, #0x4                   	// #4
   3f678:	movk	x14, #0x8000, lsl #48
   3f67c:	ldr	x8, [x21, x23, lsl #3]
   3f680:	cmp	w27, #0x0
   3f684:	cset	w9, ne  // ne = any
   3f688:	sub	x26, x26, x9
   3f68c:	ldr	w8, [x8, #8]
   3f690:	cmp	w8, #0x1
   3f694:	b.lt	3f724 <mpfr_sum@@Base+0x12e0>  // b.tstop
   3f698:	cmp	x26, #0x1
   3f69c:	b.lt	3f7c4 <mpfr_sum@@Base+0x1380>  // b.tstop
   3f6a0:	mov	x0, x24
   3f6a4:	mov	x1, x24
   3f6a8:	mov	x2, x25
   3f6ac:	mov	x3, x26
   3f6b0:	bl	c590 <__gmpn_add_n@plt>
   3f6b4:	mov	x14, #0x4                   	// #4
   3f6b8:	movk	x14, #0x8000, lsl #48
   3f6bc:	cbz	w27, 3f6d8 <mpfr_sum@@Base+0x1294>
   3f6c0:	ldr	x8, [x25, x26, lsl #3]
   3f6c4:	neg	w9, w27
   3f6c8:	mov	x10, #0xffffffffffffffff    	// #-1
   3f6cc:	lsl	x9, x10, x9
   3f6d0:	bic	x8, x8, x9
   3f6d4:	add	x0, x8, x0
   3f6d8:	ldur	x27, [x29, #-24]
   3f6dc:	subs	x8, x22, x26
   3f6e0:	b.le	3f4d0 <mpfr_sum@@Base+0x108c>
   3f6e4:	add	x9, x24, x26, lsl #3
   3f6e8:	ldr	x10, [x9]
   3f6ec:	adds	x10, x10, x0
   3f6f0:	str	x10, [x9]
   3f6f4:	b.cc	3f4d0 <mpfr_sum@@Base+0x108c>  // b.lo, b.ul, b.last
   3f6f8:	ldur	x24, [x29, #-32]
   3f6fc:	mov	w10, #0x1                   	// #1
   3f700:	cmp	x10, x8
   3f704:	b.ge	3f4d4 <mpfr_sum@@Base+0x1090>  // b.tcont
   3f708:	lsl	x11, x10, #3
   3f70c:	ldr	x12, [x9, x11]
   3f710:	add	x10, x10, #0x1
   3f714:	adds	x12, x12, #0x1
   3f718:	str	x12, [x9, x11]
   3f71c:	b.cs	3f700 <mpfr_sum@@Base+0x12bc>  // b.hs, b.nlast
   3f720:	b	3f4d4 <mpfr_sum@@Base+0x1090>
   3f724:	cmp	x26, #0x1
   3f728:	b.lt	3f7e0 <mpfr_sum@@Base+0x139c>  // b.tstop
   3f72c:	mov	x0, x24
   3f730:	mov	x1, x24
   3f734:	mov	x2, x25
   3f738:	mov	x3, x26
   3f73c:	bl	beb0 <__gmpn_sub_n@plt>
   3f740:	mov	x14, #0x4                   	// #4
   3f744:	movk	x14, #0x8000, lsl #48
   3f748:	cbz	w27, 3f764 <mpfr_sum@@Base+0x1320>
   3f74c:	ldr	x8, [x25, x26, lsl #3]
   3f750:	neg	w9, w27
   3f754:	mov	x10, #0xffffffffffffffff    	// #-1
   3f758:	lsl	x9, x10, x9
   3f75c:	bic	x8, x8, x9
   3f760:	add	x0, x8, x0
   3f764:	ldur	x27, [x29, #-24]
   3f768:	subs	x8, x22, x26
   3f76c:	b.le	3f4d0 <mpfr_sum@@Base+0x108c>
   3f770:	add	x9, x24, x26, lsl #3
   3f774:	ldr	x10, [x9]
   3f778:	subs	x10, x10, x0
   3f77c:	str	x10, [x9]
   3f780:	b.cs	3f4d0 <mpfr_sum@@Base+0x108c>  // b.hs, b.nlast
   3f784:	ldur	x24, [x29, #-32]
   3f788:	mov	w10, #0x1                   	// #1
   3f78c:	cmp	x10, x8
   3f790:	b.ge	3f4d4 <mpfr_sum@@Base+0x1090>  // b.tcont
   3f794:	lsl	x11, x10, #3
   3f798:	ldr	x12, [x9, x11]
   3f79c:	add	x10, x10, #0x1
   3f7a0:	sub	x13, x12, #0x1
   3f7a4:	str	x13, [x9, x11]
   3f7a8:	cbz	x12, 3f78c <mpfr_sum@@Base+0x1348>
   3f7ac:	b	3f4d4 <mpfr_sum@@Base+0x1090>
   3f7b0:	ldur	x8, [x29, #-8]
   3f7b4:	cmp	x9, x8
   3f7b8:	csel	x8, x9, x8, gt
   3f7bc:	stur	x8, [x29, #-8]
   3f7c0:	b	3f4d4 <mpfr_sum@@Base+0x1090>
   3f7c4:	mov	x0, xzr
   3f7c8:	cbnz	w27, 3f6c0 <mpfr_sum@@Base+0x127c>
   3f7cc:	b	3f6d8 <mpfr_sum@@Base+0x1294>
   3f7d0:	mov	w27, wzr
   3f7d4:	cbnz	x22, 3f5d0 <mpfr_sum@@Base+0x118c>
   3f7d8:	mov	x22, x19
   3f7dc:	b	3f67c <mpfr_sum@@Base+0x1238>
   3f7e0:	mov	x0, xzr
   3f7e4:	cbnz	w27, 3f74c <mpfr_sum@@Base+0x1308>
   3f7e8:	b	3f764 <mpfr_sum@@Base+0x1320>
   3f7ec:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3f7f0:	stur	x8, [x29, #-8]
   3f7f4:	ldur	x8, [x29, #-56]
   3f7f8:	cmp	x19, #0x1
   3f7fc:	ldr	x8, [x24, x8, lsl #3]
   3f800:	b.lt	3f850 <mpfr_sum@@Base+0x140c>  // b.tstop
   3f804:	ldr	x23, [sp, #64]
   3f808:	asr	x9, x8, #63
   3f80c:	cmp	x8, x9
   3f810:	mov	x10, xzr
   3f814:	b.ne	3f840 <mpfr_sum@@Base+0x13fc>  // b.any
   3f818:	mov	x11, x19
   3f81c:	sub	x12, x11, #0x1
   3f820:	cmp	x12, #0x1
   3f824:	b.lt	3f884 <mpfr_sum@@Base+0x1440>  // b.tstop
   3f828:	ldr	x13, [x23, x11, lsl #3]
   3f82c:	add	x10, x10, #0x40
   3f830:	mov	x11, x12
   3f834:	cmp	x13, x9
   3f838:	b.eq	3f81c <mpfr_sum@@Base+0x13d8>  // b.none
   3f83c:	mov	x8, x13
   3f840:	eor	x8, x8, x9
   3f844:	clz	x8, x8
   3f848:	add	x0, x8, x10
   3f84c:	b	3f88c <mpfr_sum@@Base+0x1448>
   3f850:	mov	x0, xzr
   3f854:	tbnz	x8, #63, 3f88c <mpfr_sum@@Base+0x1448>
   3f858:	ldur	x22, [x29, #-8]
   3f85c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3f860:	cmp	x22, x8
   3f864:	b.eq	3f9a4 <mpfr_sum@@Base+0x1560>  // b.none
   3f868:	ldr	x8, [sp, #40]
   3f86c:	cmp	x22, x8
   3f870:	b.lt	3f960 <mpfr_sum@@Base+0x151c>  // b.tstop
   3f874:	ldr	x8, [sp, #48]
   3f878:	stur	x22, [x29, #-16]
   3f87c:	sub	x27, x22, x8
   3f880:	b	3f4b8 <mpfr_sum@@Base+0x1074>
   3f884:	ldr	x0, [sp, #32]
   3f888:	tbz	x8, #63, 3f858 <mpfr_sum@@Base+0x1414>
   3f88c:	ldur	x8, [x29, #-64]
   3f890:	ldur	x12, [x29, #-8]
   3f894:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3f898:	add	x8, x27, x8
   3f89c:	cmp	x12, x9
   3f8a0:	sub	x8, x8, x0
   3f8a4:	b.eq	3f984 <mpfr_sum@@Base+0x1540>  // b.none
   3f8a8:	ldr	x9, [sp, #72]
   3f8ac:	add	x9, x12, x9
   3f8b0:	subs	x10, x8, x9
   3f8b4:	b.lt	3f8c4 <mpfr_sum@@Base+0x1480>  // b.tstop
   3f8b8:	ldr	x11, [sp, #56]
   3f8bc:	cmp	x10, x11
   3f8c0:	b.cs	3f984 <mpfr_sum@@Base+0x1540>  // b.hs, b.nlast
   3f8c4:	sub	x8, x9, x8
   3f8c8:	cmp	x8, #0x0
   3f8cc:	csneg	x8, xzr, x8, le
   3f8d0:	add	x8, x0, x8
   3f8d4:	mov	x9, x19
   3f8d8:	sub	x19, x8, #0x2
   3f8dc:	add	x8, x8, #0x3d
   3f8e0:	cmp	x19, #0x0
   3f8e4:	csel	x8, x8, x19, lt  // lt = tstop
   3f8e8:	asr	x22, x8, #6
   3f8ec:	sub	w3, w19, w22, lsl #6
   3f8f0:	add	x0, x24, x22, lsl #3
   3f8f4:	sub	x2, x9, x22
   3f8f8:	mov	x1, x24
   3f8fc:	cbz	w3, 3f93c <mpfr_sum@@Base+0x14f8>
   3f900:	bl	bd10 <__gmpn_lshift@plt>
   3f904:	lsl	x2, x22, #3
   3f908:	mov	x0, x24
   3f90c:	mov	w1, wzr
   3f910:	bl	c150 <memset@plt>
   3f914:	orr	x8, x19, #0x8000000000000000
   3f918:	cmp	x27, x8
   3f91c:	b.lt	3f944 <mpfr_sum@@Base+0x1500>  // b.tstop
   3f920:	ldur	x8, [x29, #-8]
   3f924:	sub	x27, x27, x19
   3f928:	ldur	x19, [x29, #-40]
   3f92c:	mov	x14, #0x4                   	// #4
   3f930:	stur	x8, [x29, #-16]
   3f934:	movk	x14, #0x8000, lsl #48
   3f938:	b	3f4b8 <mpfr_sum@@Base+0x1074>
   3f93c:	bl	bb40 <__gmpn_copyd@plt>
   3f940:	b	3f904 <mpfr_sum@@Base+0x14c0>
   3f944:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3f948:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3f94c:	mov	w1, #0x1f3                 	// #499
   3f950:	add	x0, x0, #0xd9
   3f954:	add	x2, x2, #0x128
   3f958:	bl	cb20 <mpfr_assert_fail@plt>
   3f95c:	b	3f920 <mpfr_sum@@Base+0x14dc>
   3f960:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   3f964:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   3f968:	mov	w1, #0x200                 	// #512
   3f96c:	add	x0, x0, #0xd9
   3f970:	add	x2, x2, #0x157
   3f974:	bl	cb20 <mpfr_assert_fail@plt>
   3f978:	mov	x14, #0x4                   	// #4
   3f97c:	movk	x14, #0x8000, lsl #48
   3f980:	b	3f874 <mpfr_sum@@Base+0x1430>
   3f984:	ldr	x9, [sp, #24]
   3f988:	cbz	x9, 3f9a8 <mpfr_sum@@Base+0x1564>
   3f98c:	str	x8, [x9]
   3f990:	ldr	x8, [sp, #8]
   3f994:	str	x27, [x8]
   3f998:	ldr	x8, [sp, #16]
   3f99c:	str	x12, [x8]
   3f9a0:	b	3f9a8 <mpfr_sum@@Base+0x1564>
   3f9a4:	mov	x0, xzr
   3f9a8:	ldp	x20, x19, [sp, #224]
   3f9ac:	ldp	x22, x21, [sp, #208]
   3f9b0:	ldp	x24, x23, [sp, #192]
   3f9b4:	ldp	x26, x25, [sp, #176]
   3f9b8:	ldp	x28, x27, [sp, #160]
   3f9bc:	ldp	x29, x30, [sp, #144]
   3f9c0:	add	sp, sp, #0xf0
   3f9c4:	ret

000000000003f9c8 <mpfr_add1sp@@Base>:
   3f9c8:	stp	x29, x30, [sp, #-96]!
   3f9cc:	stp	x28, x27, [sp, #16]
   3f9d0:	stp	x26, x25, [sp, #32]
   3f9d4:	stp	x24, x23, [sp, #48]
   3f9d8:	stp	x22, x21, [sp, #64]
   3f9dc:	stp	x20, x19, [sp, #80]
   3f9e0:	mov	x29, sp
   3f9e4:	sub	sp, sp, #0x40
   3f9e8:	stur	xzr, [x29, #-8]
   3f9ec:	ldr	w8, [x1, #8]
   3f9f0:	mov	w20, w3
   3f9f4:	mov	x19, x0
   3f9f8:	str	w8, [x0, #8]
   3f9fc:	ldr	x23, [x1]
   3fa00:	cmp	x23, #0x3f
   3fa04:	b.gt	3fa50 <mpfr_add1sp@@Base+0x88>
   3fa08:	ldp	x9, x12, [x1, #16]
   3fa0c:	ldp	x13, x14, [x2, #16]
   3fa10:	ldr	x10, [x19, #24]
   3fa14:	mov	w11, #0x40                  	// #64
   3fa18:	sub	x11, x11, x23
   3fa1c:	cmp	x9, x13
   3fa20:	b.ne	3fb08 <mpfr_add1sp@@Base+0x140>  // b.any
   3fa24:	ldr	x14, [x14]
   3fa28:	ldr	x15, [x12]
   3fa2c:	add	x12, x9, #0x1
   3fa30:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3fa34:	lsr	x14, x14, #1
   3fa38:	add	x14, x14, x15, lsr #1
   3fa3c:	lsr	x9, x9, x23
   3fa40:	and	x15, x14, x9
   3fa44:	mov	x13, xzr
   3fa48:	eor	x9, x15, x14
   3fa4c:	b	3fde4 <mpfr_add1sp@@Base+0x41c>
   3fa50:	cmp	x23, #0x40
   3fa54:	b.eq	3fac4 <mpfr_add1sp@@Base+0xfc>  // b.none
   3fa58:	cmp	x23, #0x7f
   3fa5c:	b.gt	3fac4 <mpfr_add1sp@@Base+0xfc>
   3fa60:	ldp	x9, x12, [x1, #16]
   3fa64:	ldp	x15, x13, [x2, #16]
   3fa68:	ldr	x10, [x19, #24]
   3fa6c:	mov	w11, #0x80                  	// #128
   3fa70:	sub	x11, x11, x23
   3fa74:	cmp	x9, x15
   3fa78:	b.ne	3fc64 <mpfr_add1sp@@Base+0x29c>  // b.any
   3fa7c:	ldp	x15, x16, [x12]
   3fa80:	ldp	x12, x13, [x13]
   3fa84:	mov	w17, #0x7f                  	// #127
   3fa88:	sub	x17, x17, x23
   3fa8c:	mov	w18, #0x1                   	// #1
   3fa90:	adds	x15, x12, x15
   3fa94:	add	x12, x9, #0x1
   3fa98:	add	x9, x13, x16
   3fa9c:	cinc	x9, x9, cs  // cs = hs, nlast
   3faa0:	lsl	x17, x18, x17
   3faa4:	extr	x15, x9, x15, #1
   3faa8:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3faac:	and	x16, x15, x17
   3fab0:	bfxil	x13, x9, #1, #63
   3fab4:	eor	x9, x16, x15
   3fab8:	mov	x14, xzr
   3fabc:	stp	x9, x13, [x10]
   3fac0:	b	401cc <mpfr_add1sp@@Base+0x804>
   3fac4:	cmp	x23, #0x40
   3fac8:	b.ne	3fb68 <mpfr_add1sp@@Base+0x1a0>  // b.any
   3facc:	ldp	x11, x13, [x1, #16]
   3fad0:	ldp	x15, x14, [x2, #16]
   3fad4:	ldr	x10, [x19, #24]
   3fad8:	cmp	x11, x15
   3fadc:	b.ne	3fcc8 <mpfr_add1sp@@Base+0x300>  // b.any
   3fae0:	ldr	x9, [x13]
   3fae4:	ldr	x13, [x14]
   3fae8:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   3faec:	mov	x12, xzr
   3faf0:	add	x11, x11, #0x1
   3faf4:	add	x9, x13, x9
   3faf8:	bfxil	x15, x9, #1, #63
   3fafc:	and	x14, x9, #0x1
   3fb00:	str	x15, [x10]
   3fb04:	b	400dc <mpfr_add1sp@@Base+0x714>
   3fb08:	csel	x16, x14, x12, gt
   3fb0c:	csel	x14, x12, x14, gt
   3fb10:	csel	x15, x13, x9, gt
   3fb14:	csel	x12, x9, x13, gt
   3fb18:	mov	x9, #0xffffffffffffffff    	// #-1
   3fb1c:	sub	x15, x12, x15
   3fb20:	lsl	x9, x9, x11
   3fb24:	cmp	x15, x11
   3fb28:	mvn	x13, x9
   3fb2c:	b.cs	3fc08 <mpfr_add1sp@@Base+0x240>  // b.hs, b.nlast
   3fb30:	ldr	x16, [x16]
   3fb34:	ldr	x14, [x14]
   3fb38:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3fb3c:	lsr	x18, x17, x23
   3fb40:	lsr	x15, x16, x15
   3fb44:	adds	x14, x15, x14
   3fb48:	bfxil	x17, x14, #1, #63
   3fb4c:	csel	x14, x17, x14, cs  // cs = hs, nlast
   3fb50:	and	x15, x14, x18
   3fb54:	and	x13, x14, x13
   3fb58:	cinc	x12, x12, cs  // cs = hs, nlast
   3fb5c:	eor	x13, x13, x15
   3fb60:	and	x9, x14, x9
   3fb64:	b	3fde4 <mpfr_add1sp@@Base+0x41c>
   3fb68:	sub	x9, x23, #0x81
   3fb6c:	cmp	x9, #0x3e
   3fb70:	b.hi	3fd18 <mpfr_add1sp@@Base+0x350>  // b.pmore
   3fb74:	ldp	x9, x12, [x1, #16]
   3fb78:	ldp	x13, x14, [x2, #16]
   3fb7c:	ldr	x10, [x19, #24]
   3fb80:	mov	w11, #0xc0                  	// #192
   3fb84:	sub	x11, x11, x23
   3fb88:	cmp	x9, x13
   3fb8c:	b.ne	3fef0 <mpfr_add1sp@@Base+0x528>  // b.any
   3fb90:	mov	w17, #0xbf                  	// #191
   3fb94:	mov	w18, #0x1                   	// #1
   3fb98:	sub	x17, x17, x23
   3fb9c:	ldp	x15, x16, [x12]
   3fba0:	lsl	x17, x18, x17
   3fba4:	ldp	x18, x0, [x14]
   3fba8:	ldr	x1, [x12, #16]
   3fbac:	add	x12, x9, #0x1
   3fbb0:	ldr	x14, [x14, #16]
   3fbb4:	adds	x15, x18, x15
   3fbb8:	add	x9, x0, x16
   3fbbc:	cinc	x9, x9, cs  // cs = hs, nlast
   3fbc0:	cset	w18, cs  // cs = hs, nlast
   3fbc4:	cmp	x9, x16
   3fbc8:	cset	w16, eq  // eq = none
   3fbcc:	and	w16, w18, w16
   3fbd0:	cset	w18, cc  // cc = lo, ul, last
   3fbd4:	add	x14, x14, x1
   3fbd8:	orr	w16, w18, w16
   3fbdc:	extr	x0, x9, x15, #1
   3fbe0:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   3fbe4:	and	x15, x0, x17
   3fbe8:	add	x14, x14, x16
   3fbec:	eor	x17, x15, x0
   3fbf0:	bfxil	x18, x14, #1, #63
   3fbf4:	extr	x9, x14, x9, #1
   3fbf8:	mov	x13, xzr
   3fbfc:	stp	x9, x18, [x10, #8]
   3fc00:	str	x17, [x10]
   3fc04:	b	403dc <mpfr_add1sp@@Base+0xa14>
   3fc08:	cmp	x15, #0x3f
   3fc0c:	b.hi	3fdd8 <mpfr_add1sp@@Base+0x410>  // b.pmore
   3fc10:	ldr	x17, [x16]
   3fc14:	ldr	x14, [x14]
   3fc18:	neg	x18, x15
   3fc1c:	lsr	x15, x17, x15
   3fc20:	adds	x16, x14, x15
   3fc24:	lsl	x14, x17, x18
   3fc28:	b.cc	3fc44 <mpfr_add1sp@@Base+0x27c>  // b.lo, b.ul, b.last
   3fc2c:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3fc30:	and	x15, x16, #0x1
   3fc34:	bfxil	x17, x16, #1, #63
   3fc38:	orr	x14, x15, x14
   3fc3c:	add	x12, x12, #0x1
   3fc40:	mov	x16, x17
   3fc44:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   3fc48:	lsr	x15, x15, x23
   3fc4c:	and	x13, x16, x13
   3fc50:	and	x15, x16, x15
   3fc54:	eor	x13, x13, x15
   3fc58:	orr	x13, x13, x14
   3fc5c:	and	x9, x16, x9
   3fc60:	b	3fde4 <mpfr_add1sp@@Base+0x41c>
   3fc64:	csel	x16, x13, x12, gt
   3fc68:	csel	x14, x12, x13, gt
   3fc6c:	csel	x13, x15, x9, gt
   3fc70:	csel	x12, x9, x15, gt
   3fc74:	mov	x9, #0xffffffffffffffff    	// #-1
   3fc78:	sub	x15, x12, x13
   3fc7c:	lsl	x9, x9, x11
   3fc80:	cmp	x15, #0x3f
   3fc84:	mvn	x13, x9
   3fc88:	b.hi	3fe90 <mpfr_add1sp@@Base+0x4c8>  // b.pmore
   3fc8c:	ldp	x17, x16, [x16]
   3fc90:	ldp	x0, x1, [x14]
   3fc94:	neg	x18, x15
   3fc98:	lsl	x14, x16, x18
   3fc9c:	lsr	x2, x17, x15
   3fca0:	lsr	x15, x16, x15
   3fca4:	orr	x14, x14, x2
   3fca8:	adds	x14, x14, x0
   3fcac:	add	x15, x1, x15
   3fcb0:	cinc	x16, x15, cs  // cs = hs, nlast
   3fcb4:	cmp	x16, x1
   3fcb8:	lsl	x15, x17, x18
   3fcbc:	b.cc	40188 <mpfr_add1sp@@Base+0x7c0>  // b.lo, b.ul, b.last
   3fcc0:	str	x16, [x10, #8]
   3fcc4:	b	401a4 <mpfr_add1sp@@Base+0x7dc>
   3fcc8:	csel	x9, x13, x14, gt
   3fccc:	csel	x12, x14, x13, gt
   3fcd0:	csel	x13, x15, x11, gt
   3fcd4:	csel	x11, x11, x15, gt
   3fcd8:	sub	x13, x11, x13
   3fcdc:	cmp	x13, #0x3f
   3fce0:	b.hi	3ff94 <mpfr_add1sp@@Base+0x5cc>  // b.pmore
   3fce4:	ldr	x12, [x12]
   3fce8:	ldr	x9, [x9]
   3fcec:	lsr	x14, x12, x13
   3fcf0:	neg	x13, x13
   3fcf4:	adds	x9, x14, x9
   3fcf8:	lsl	x12, x12, x13
   3fcfc:	b.cc	4009c <mpfr_add1sp@@Base+0x6d4>  // b.lo, b.ul, b.last
   3fd00:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3fd04:	bfxil	x13, x9, #1, #63
   3fd08:	and	x14, x9, #0x1
   3fd0c:	str	x13, [x10]
   3fd10:	add	x11, x11, #0x1
   3fd14:	b	400dc <mpfr_add1sp@@Base+0x714>
   3fd18:	ldr	x9, [x1, #16]
   3fd1c:	ldr	x10, [x2, #16]
   3fd20:	ldr	w8, [x1, #8]
   3fd24:	sub	x26, x23, #0x1
   3fd28:	add	x11, x23, #0x3e
   3fd2c:	cmp	x9, x10
   3fd30:	csel	x27, x1, x2, lt  // lt = tstop
   3fd34:	csel	x25, x10, x9, lt  // lt = tstop
   3fd38:	ldr	x9, [x27, #16]
   3fd3c:	csel	x10, x2, x1, lt  // lt = tstop
   3fd40:	cmp	x26, #0x0
   3fd44:	lsr	w12, w8, #31
   3fd48:	csel	x8, x11, x26, lt  // lt = tstop
   3fd4c:	asr	x22, x8, #6
   3fd50:	neg	w8, w23
   3fd54:	add	x21, x22, #0x1
   3fd58:	subs	x28, x25, x9
   3fd5c:	and	w24, w8, #0x3f
   3fd60:	b.eq	3ffcc <mpfr_add1sp@@Base+0x604>  // b.none
   3fd64:	subs	x8, x23, x28
   3fd68:	stp	x10, x25, [x29, #-24]
   3fd6c:	b.ls	40578 <mpfr_add1sp@@Base+0xbb0>  // b.plast
   3fd70:	cmp	x22, #0x7ff
   3fd74:	lsl	x1, x21, #3
   3fd78:	mov	x25, x24
   3fd7c:	stp	x8, x22, [x29, #-40]
   3fd80:	stur	w12, [x29, #-44]
   3fd84:	b.hi	405a8 <mpfr_add1sp@@Base+0xbe0>  // b.pmore
   3fd88:	add	x9, x1, #0xf
   3fd8c:	mov	x8, sp
   3fd90:	and	x9, x9, #0xfffffffffffffff0
   3fd94:	sub	x22, x8, x9
   3fd98:	mov	sp, x22
   3fd9c:	ands	x3, x28, #0x3f
   3fda0:	lsr	x24, x28, #6
   3fda4:	b.eq	405c0 <mpfr_add1sp@@Base+0xbf8>  // b.none
   3fda8:	ldr	x1, [x27, #24]
   3fdac:	cbnz	x24, 405f0 <mpfr_add1sp@@Base+0xc28>
   3fdb0:	mov	x0, x22
   3fdb4:	mov	x2, x21
   3fdb8:	bl	bd30 <__gmpn_rshift@plt>
   3fdbc:	ldur	x13, [x29, #-24]
   3fdc0:	mov	x24, x25
   3fdc4:	cmp	w20, #0x5
   3fdc8:	b.ne	40630 <mpfr_add1sp@@Base+0xc68>  // b.any
   3fdcc:	mov	x27, xzr
   3fdd0:	mov	x28, xzr
   3fdd4:	b	406bc <mpfr_add1sp@@Base+0xcf4>
   3fdd8:	ldr	x9, [x14]
   3fddc:	mov	x15, xzr
   3fde0:	mov	w13, #0x1                   	// #1
   3fde4:	str	x9, [x10]
   3fde8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3fdec:	ldr	x1, [x0, #2608]
   3fdf0:	add	x0, x0, #0xa30
   3fdf4:	blr	x1
   3fdf8:	mrs	x14, tpidr_el0
   3fdfc:	ldr	x9, [x14, x0]
   3fe00:	cmp	x12, x9
   3fe04:	b.gt	40560 <mpfr_add1sp@@Base+0xb98>
   3fe08:	mov	w9, wzr
   3fe0c:	cmp	w20, #0x5
   3fe10:	str	x12, [x19, #16]
   3fe14:	b.eq	4053c <mpfr_add1sp@@Base+0xb74>  // b.none
   3fe18:	orr	x16, x13, x15
   3fe1c:	cbz	x16, 4053c <mpfr_add1sp@@Base+0xb74>
   3fe20:	cmp	w20, #0x1
   3fe24:	b.eq	40498 <mpfr_add1sp@@Base+0xad0>  // b.none
   3fe28:	cbnz	w20, 3fe44 <mpfr_add1sp@@Base+0x47c>
   3fe2c:	cbz	x15, 40498 <mpfr_add1sp@@Base+0xad0>
   3fe30:	cbnz	x13, 3fe50 <mpfr_add1sp@@Base+0x488>
   3fe34:	ldr	x9, [x10]
   3fe38:	lsr	x9, x9, x11
   3fe3c:	tbnz	w9, #0, 3fe50 <mpfr_add1sp@@Base+0x488>
   3fe40:	b	40498 <mpfr_add1sp@@Base+0xad0>
   3fe44:	add	w9, w20, w8, lsr #31
   3fe48:	cmp	w9, #0x3
   3fe4c:	b.eq	40498 <mpfr_add1sp@@Base+0xad0>  // b.none
   3fe50:	ldr	x9, [x10]
   3fe54:	mov	w13, #0x1                   	// #1
   3fe58:	lsl	x11, x13, x11
   3fe5c:	adds	x9, x9, x11
   3fe60:	str	x9, [x10]
   3fe64:	b.eq	404d4 <mpfr_add1sp@@Base+0xb0c>  // b.none
   3fe68:	cbz	w8, 40538 <mpfr_add1sp@@Base+0xb70>
   3fe6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   3fe70:	ldr	x1, [x0, #2640]
   3fe74:	add	x0, x0, #0xa50
   3fe78:	blr	x1
   3fe7c:	ldr	w9, [x14, x0]
   3fe80:	orr	w9, w9, #0x8
   3fe84:	str	w9, [x14, x0]
   3fe88:	mov	w9, w8
   3fe8c:	b	4053c <mpfr_add1sp@@Base+0xb74>
   3fe90:	cmp	x15, #0x7f
   3fe94:	b.hi	3ffb0 <mpfr_add1sp@@Base+0x5e8>  // b.pmore
   3fe98:	ldp	x18, x16, [x16]
   3fe9c:	ldp	x0, x1, [x14]
   3fea0:	neg	x17, x15
   3fea4:	cmp	x15, #0x40
   3fea8:	lsl	x14, x16, x17
   3feac:	lsr	x15, x16, x15
   3feb0:	csel	x16, xzr, x14, eq  // eq = none
   3feb4:	adds	x14, x15, x0
   3feb8:	cinc	x17, x1, cs  // cs = hs, nlast
   3febc:	orr	x15, x16, x18
   3fec0:	cbz	x17, 40184 <mpfr_add1sp@@Base+0x7bc>
   3fec4:	mov	w16, #0x7f                  	// #127
   3fec8:	mov	w18, #0x1                   	// #1
   3fecc:	sub	x16, x16, x23
   3fed0:	lsl	x16, x18, x16
   3fed4:	and	x13, x14, x13
   3fed8:	and	x16, x14, x16
   3fedc:	and	x9, x14, x9
   3fee0:	eor	x13, x13, x16
   3fee4:	orr	x14, x13, x15
   3fee8:	stp	x9, x17, [x10]
   3feec:	b	401cc <mpfr_add1sp@@Base+0x804>
   3fef0:	csel	x17, x14, x12, gt
   3fef4:	csel	x16, x12, x14, gt
   3fef8:	csel	x14, x13, x9, gt
   3fefc:	csel	x12, x9, x13, gt
   3ff00:	mov	x9, #0xffffffffffffffff    	// #-1
   3ff04:	sub	x15, x12, x14
   3ff08:	lsl	x9, x9, x11
   3ff0c:	cmp	x15, #0x3f
   3ff10:	mvn	x13, x9
   3ff14:	b.hi	400ac <mpfr_add1sp@@Base+0x6e4>  // b.pmore
   3ff18:	ldp	x18, x0, [x17]
   3ff1c:	ldr	x17, [x17, #16]
   3ff20:	neg	x1, x15
   3ff24:	ldr	x4, [x16, #16]
   3ff28:	lsl	x14, x18, x1
   3ff2c:	lsl	x2, x0, x1
   3ff30:	lsr	x18, x18, x15
   3ff34:	lsl	x1, x17, x1
   3ff38:	lsr	x0, x0, x15
   3ff3c:	lsr	x17, x17, x15
   3ff40:	ldp	x15, x3, [x16]
   3ff44:	orr	x16, x2, x18
   3ff48:	orr	x18, x1, x0
   3ff4c:	add	x17, x4, x17
   3ff50:	adds	x15, x16, x15
   3ff54:	add	x16, x18, x3
   3ff58:	cinc	x16, x16, cs  // cs = hs, nlast
   3ff5c:	cset	w18, cs  // cs = hs, nlast
   3ff60:	cmp	x16, x3
   3ff64:	cset	w1, eq  // eq = none
   3ff68:	cset	w0, cc  // cc = lo, ul, last
   3ff6c:	and	w18, w18, w1
   3ff70:	orr	w18, w0, w18
   3ff74:	add	x17, x17, x18
   3ff78:	cmp	x17, x4
   3ff7c:	cset	w0, eq  // eq = none
   3ff80:	b.cc	402e8 <mpfr_add1sp@@Base+0x920>  // b.lo, b.ul, b.last
   3ff84:	and	w18, w18, w0
   3ff88:	cbnz	w18, 402e8 <mpfr_add1sp@@Base+0x920>
   3ff8c:	stp	x16, x17, [x10, #8]
   3ff90:	b	40308 <mpfr_add1sp@@Base+0x940>
   3ff94:	cmp	x13, #0x40
   3ff98:	b.ne	400c8 <mpfr_add1sp@@Base+0x700>  // b.any
   3ff9c:	ldr	x12, [x12]
   3ffa0:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   3ffa4:	cmp	x12, x14
   3ffa8:	cset	w12, ne  // ne = any
   3ffac:	b	400cc <mpfr_add1sp@@Base+0x704>
   3ffb0:	ldr	x9, [x14]
   3ffb4:	mov	x16, xzr
   3ffb8:	str	x9, [x10]
   3ffbc:	ldr	x9, [x14, #8]
   3ffc0:	mov	w14, #0x1                   	// #1
   3ffc4:	str	x9, [x10, #8]
   3ffc8:	b	401cc <mpfr_add1sp@@Base+0x804>
   3ffcc:	ldr	x23, [x19, #24]
   3ffd0:	ldr	x1, [x10, #24]
   3ffd4:	ldr	x2, [x27, #24]
   3ffd8:	mov	x3, x21
   3ffdc:	mov	x0, x23
   3ffe0:	mov	w28, w12
   3ffe4:	mov	x26, x22
   3ffe8:	add	x25, x25, #0x1
   3ffec:	bl	c590 <__gmpn_add_n@plt>
   3fff0:	ldr	x22, [x23]
   3fff4:	mov	w3, #0x1                   	// #1
   3fff8:	mov	x0, x23
   3fffc:	mov	x1, x23
   40000:	mov	x2, x21
   40004:	mov	x27, x24
   40008:	mov	w24, #0x1                   	// #1
   4000c:	bl	bd30 <__gmpn_rshift@plt>
   40010:	lsl	x8, x26, #3
   40014:	ldr	x9, [x23, x8]
   40018:	cmp	w20, #0x5
   4001c:	orr	x9, x9, #0x8000000000000000
   40020:	str	x9, [x23, x8]
   40024:	ldr	x8, [x23]
   40028:	lsl	x9, x24, x27
   4002c:	neg	x10, x9
   40030:	and	x10, x8, x10
   40034:	str	x10, [x23]
   40038:	b.eq	406fc <mpfr_add1sp@@Base+0xd34>  // b.none
   4003c:	tst	x22, x9
   40040:	b.eq	406fc <mpfr_add1sp@@Base+0xd34>  // b.none
   40044:	cbnz	w20, 4085c <mpfr_add1sp@@Base+0xe94>
   40048:	tst	x8, x9
   4004c:	b.eq	40870 <mpfr_add1sp@@Base+0xea8>  // b.none
   40050:	mov	x11, x26
   40054:	mov	x24, x27
   40058:	ldr	x8, [x23]
   4005c:	mov	w21, #0x1                   	// #1
   40060:	lsl	x9, x21, x24
   40064:	adds	x8, x8, x9
   40068:	str	x8, [x23]
   4006c:	b.cc	40700 <mpfr_add1sp@@Base+0xd38>  // b.lo, b.ul, b.last
   40070:	mov	w8, #0x1                   	// #1
   40074:	cmp	x8, x11
   40078:	b.gt	404c0 <mpfr_add1sp@@Base+0xaf8>
   4007c:	lsl	x9, x8, #3
   40080:	ldr	x10, [x23, x9]
   40084:	add	x8, x8, #0x1
   40088:	mov	w21, #0x1                   	// #1
   4008c:	adds	x10, x10, #0x1
   40090:	str	x10, [x23, x9]
   40094:	b.cs	40074 <mpfr_add1sp@@Base+0x6ac>  // b.hs, b.nlast
   40098:	b	40700 <mpfr_add1sp@@Base+0xd38>
   4009c:	str	x9, [x10]
   400a0:	and	x14, x12, #0x8000000000000000
   400a4:	and	x12, x12, #0x7fffffffffffffff
   400a8:	b	400dc <mpfr_add1sp@@Base+0x714>
   400ac:	cmp	x15, #0x7f
   400b0:	b.hi	402a0 <mpfr_add1sp@@Base+0x8d8>  // b.pmore
   400b4:	subs	x18, x15, #0x40
   400b8:	b.ne	40334 <mpfr_add1sp@@Base+0x96c>  // b.any
   400bc:	ldp	x14, x15, [x17]
   400c0:	ldr	x0, [x17, #16]
   400c4:	b	40354 <mpfr_add1sp@@Base+0x98c>
   400c8:	mov	w12, #0x1                   	// #1
   400cc:	ldr	x9, [x9]
   400d0:	cmp	x13, #0x40
   400d4:	cset	w14, eq  // eq = none
   400d8:	str	x9, [x10]
   400dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   400e0:	ldr	x1, [x0, #2608]
   400e4:	add	x0, x0, #0xa30
   400e8:	blr	x1
   400ec:	mrs	x13, tpidr_el0
   400f0:	ldr	x9, [x13, x0]
   400f4:	cmp	x11, x9
   400f8:	b.gt	40560 <mpfr_add1sp@@Base+0xb98>
   400fc:	mov	w9, wzr
   40100:	cmp	w20, #0x5
   40104:	str	x11, [x19, #16]
   40108:	b.eq	4053c <mpfr_add1sp@@Base+0xb74>  // b.none
   4010c:	orr	x15, x12, x14
   40110:	cbz	x15, 4053c <mpfr_add1sp@@Base+0xb74>
   40114:	cmp	w20, #0x1
   40118:	b.eq	40278 <mpfr_add1sp@@Base+0x8b0>  // b.none
   4011c:	cbnz	w20, 40134 <mpfr_add1sp@@Base+0x76c>
   40120:	cbz	x14, 40278 <mpfr_add1sp@@Base+0x8b0>
   40124:	cbnz	x12, 40140 <mpfr_add1sp@@Base+0x778>
   40128:	ldrb	w9, [x10]
   4012c:	tbz	w9, #0, 40278 <mpfr_add1sp@@Base+0x8b0>
   40130:	b	40140 <mpfr_add1sp@@Base+0x778>
   40134:	add	w9, w20, w8, lsr #31
   40138:	cmp	w9, #0x3
   4013c:	b.eq	40278 <mpfr_add1sp@@Base+0x8b0>  // b.none
   40140:	ldr	x9, [x10]
   40144:	adds	x9, x9, #0x1
   40148:	str	x9, [x10]
   4014c:	b.cc	40244 <mpfr_add1sp@@Base+0x87c>  // b.lo, b.ul, b.last
   40150:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   40154:	str	x9, [x10]
   40158:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4015c:	ldr	x1, [x0, #2608]
   40160:	add	x0, x0, #0xa30
   40164:	blr	x1
   40168:	ldr	x9, [x13, x0]
   4016c:	cmp	x11, x9
   40170:	b.ge	40560 <mpfr_add1sp@@Base+0xb98>  // b.tcont
   40174:	add	x9, x11, #0x1
   40178:	str	x9, [x19, #16]
   4017c:	cbnz	w8, 40248 <mpfr_add1sp@@Base+0x880>
   40180:	b	40538 <mpfr_add1sp@@Base+0xb70>
   40184:	mov	x16, xzr
   40188:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   4018c:	and	x17, x14, #0x1
   40190:	bfxil	x18, x16, #1, #63
   40194:	extr	x14, x16, x14, #1
   40198:	orr	x15, x17, x15
   4019c:	str	x18, [x10, #8]
   401a0:	add	x12, x12, #0x1
   401a4:	mov	w16, #0x7f                  	// #127
   401a8:	mov	w17, #0x1                   	// #1
   401ac:	sub	x16, x16, x23
   401b0:	lsl	x16, x17, x16
   401b4:	and	x13, x14, x13
   401b8:	and	x16, x14, x16
   401bc:	and	x9, x14, x9
   401c0:	eor	x13, x13, x16
   401c4:	orr	x14, x13, x15
   401c8:	str	x9, [x10]
   401cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   401d0:	ldr	x1, [x0, #2608]
   401d4:	add	x0, x0, #0xa30
   401d8:	blr	x1
   401dc:	mrs	x13, tpidr_el0
   401e0:	ldr	x9, [x13, x0]
   401e4:	cmp	x12, x9
   401e8:	b.gt	40560 <mpfr_add1sp@@Base+0xb98>
   401ec:	mov	w9, wzr
   401f0:	cmp	w20, #0x5
   401f4:	str	x12, [x19, #16]
   401f8:	b.eq	4053c <mpfr_add1sp@@Base+0xb74>  // b.none
   401fc:	orr	x15, x14, x16
   40200:	cbz	x15, 4053c <mpfr_add1sp@@Base+0xb74>
   40204:	cmp	w20, #0x1
   40208:	b.eq	40278 <mpfr_add1sp@@Base+0x8b0>  // b.none
   4020c:	cbnz	w20, 4026c <mpfr_add1sp@@Base+0x8a4>
   40210:	cbz	x16, 40278 <mpfr_add1sp@@Base+0x8b0>
   40214:	cbnz	x14, 40224 <mpfr_add1sp@@Base+0x85c>
   40218:	ldr	x9, [x10]
   4021c:	lsr	x9, x9, x11
   40220:	tbz	w9, #0, 40278 <mpfr_add1sp@@Base+0x8b0>
   40224:	ldp	x9, x15, [x10]
   40228:	mov	w14, #0x1                   	// #1
   4022c:	lsl	x11, x14, x11
   40230:	adds	x9, x9, x11
   40234:	str	x9, [x10]
   40238:	cinc	x9, x15, eq  // eq = none
   4023c:	str	x9, [x10, #8]
   40240:	cbz	x9, 40508 <mpfr_add1sp@@Base+0xb40>
   40244:	cbz	w8, 40538 <mpfr_add1sp@@Base+0xb70>
   40248:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4024c:	ldr	x1, [x0, #2640]
   40250:	add	x0, x0, #0xa50
   40254:	blr	x1
   40258:	ldr	w9, [x13, x0]
   4025c:	orr	w9, w9, #0x8
   40260:	str	w9, [x13, x0]
   40264:	mov	w9, w8
   40268:	b	4053c <mpfr_add1sp@@Base+0xb74>
   4026c:	add	w9, w20, w8, lsr #31
   40270:	cmp	w9, #0x3
   40274:	b.ne	40224 <mpfr_add1sp@@Base+0x85c>  // b.any
   40278:	cbz	w8, 40538 <mpfr_add1sp@@Base+0xb70>
   4027c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40280:	ldr	x1, [x0, #2640]
   40284:	add	x0, x0, #0xa50
   40288:	blr	x1
   4028c:	ldr	w9, [x13, x0]
   40290:	orr	w9, w9, #0x8
   40294:	str	w9, [x13, x0]
   40298:	neg	w9, w8
   4029c:	b	4053c <mpfr_add1sp@@Base+0xb74>
   402a0:	cmp	x15, #0xbf
   402a4:	b.hi	403bc <mpfr_add1sp@@Base+0x9f4>  // b.pmore
   402a8:	ldp	x2, x14, [x17, #8]
   402ac:	ldp	x0, x1, [x16]
   402b0:	neg	x18, x15
   402b4:	cmp	x15, #0x80
   402b8:	lsl	x18, x14, x18
   402bc:	lsr	x14, x14, x15
   402c0:	csel	x18, xzr, x18, eq  // eq = none
   402c4:	adds	x15, x0, x14
   402c8:	ldr	x14, [x17]
   402cc:	ldr	x17, [x16, #16]
   402d0:	cset	w16, cs  // cs = hs, nlast
   402d4:	orr	x18, x18, x2
   402d8:	adds	x16, x1, x16
   402dc:	cinc	x17, x17, cs  // cs = hs, nlast
   402e0:	orr	x14, x18, x14
   402e4:	cbnz	x17, 4038c <mpfr_add1sp@@Base+0x9c4>
   402e8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   402ec:	and	x18, x15, #0x1
   402f0:	extr	x15, x16, x15, #1
   402f4:	extr	x16, x17, x16, #1
   402f8:	bfxil	x0, x17, #1, #63
   402fc:	orr	x14, x18, x14
   40300:	stp	x16, x0, [x10, #8]
   40304:	add	x12, x12, #0x1
   40308:	mov	w16, #0xbf                  	// #191
   4030c:	mov	w17, #0x1                   	// #1
   40310:	sub	x16, x16, x23
   40314:	lsl	x16, x17, x16
   40318:	and	x13, x15, x13
   4031c:	and	x9, x15, x9
   40320:	and	x15, x15, x16
   40324:	eor	x13, x13, x15
   40328:	orr	x13, x13, x14
   4032c:	str	x9, [x10]
   40330:	b	403dc <mpfr_add1sp@@Base+0xa14>
   40334:	ldp	x14, x0, [x17, #8]
   40338:	ldr	x17, [x17]
   4033c:	neg	x1, x15
   40340:	lsl	x2, x14, x1
   40344:	lsl	x1, x0, x1
   40348:	lsr	x15, x14, x15
   4034c:	orr	x14, x2, x17
   40350:	orr	x15, x1, x15
   40354:	ldp	x17, x1, [x16]
   40358:	lsr	x18, x0, x18
   4035c:	ldr	x0, [x16, #16]
   40360:	adds	x15, x17, x15
   40364:	add	x16, x1, x18
   40368:	cinc	x16, x16, cs  // cs = hs, nlast
   4036c:	cset	w17, cs  // cs = hs, nlast
   40370:	cmp	x16, x1
   40374:	cset	w1, eq  // eq = none
   40378:	cset	w18, cc  // cc = lo, ul, last
   4037c:	and	w17, w17, w1
   40380:	orr	w17, w18, w17
   40384:	adds	x17, x0, x17
   40388:	b.eq	402e8 <mpfr_add1sp@@Base+0x920>  // b.none
   4038c:	mov	w18, #0xbf                  	// #191
   40390:	mov	w0, #0x1                   	// #1
   40394:	and	x9, x15, x9
   40398:	sub	x18, x18, x23
   4039c:	stp	x9, x16, [x10]
   403a0:	lsl	x9, x0, x18
   403a4:	and	x13, x15, x13
   403a8:	and	x15, x15, x9
   403ac:	eor	x9, x13, x15
   403b0:	orr	x13, x9, x14
   403b4:	str	x17, [x10, #16]
   403b8:	b	403dc <mpfr_add1sp@@Base+0xa14>
   403bc:	ldr	x9, [x16]
   403c0:	mov	x15, xzr
   403c4:	mov	w13, #0x1                   	// #1
   403c8:	str	x9, [x10]
   403cc:	ldr	x9, [x16, #8]
   403d0:	str	x9, [x10, #8]
   403d4:	ldr	x9, [x16, #16]
   403d8:	str	x9, [x10, #16]
   403dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   403e0:	ldr	x1, [x0, #2608]
   403e4:	add	x0, x0, #0xa30
   403e8:	blr	x1
   403ec:	mrs	x14, tpidr_el0
   403f0:	ldr	x9, [x14, x0]
   403f4:	cmp	x12, x9
   403f8:	b.gt	40560 <mpfr_add1sp@@Base+0xb98>
   403fc:	mov	w9, wzr
   40400:	cmp	w20, #0x5
   40404:	str	x12, [x19, #16]
   40408:	b.eq	4053c <mpfr_add1sp@@Base+0xb74>  // b.none
   4040c:	orr	x16, x15, x13
   40410:	cbz	x16, 4053c <mpfr_add1sp@@Base+0xb74>
   40414:	cmp	w20, #0x1
   40418:	b.eq	40498 <mpfr_add1sp@@Base+0xad0>  // b.none
   4041c:	cbnz	w20, 4048c <mpfr_add1sp@@Base+0xac4>
   40420:	cbz	x15, 40498 <mpfr_add1sp@@Base+0xad0>
   40424:	cbnz	x13, 40434 <mpfr_add1sp@@Base+0xa6c>
   40428:	ldr	x9, [x10]
   4042c:	lsr	x9, x9, x11
   40430:	tbz	w9, #0, 40498 <mpfr_add1sp@@Base+0xad0>
   40434:	ldp	x13, x15, [x10]
   40438:	mov	w9, #0x1                   	// #1
   4043c:	lsl	x9, x9, x11
   40440:	ldr	x16, [x10, #16]
   40444:	adds	x9, x13, x9
   40448:	cinc	x11, x15, eq  // eq = none
   4044c:	stp	x9, x11, [x10]
   40450:	orr	x9, x11, x9
   40454:	cmp	x9, #0x0
   40458:	cinc	x9, x16, eq  // eq = none
   4045c:	str	x9, [x10, #16]
   40460:	cbnz	x9, 3fe68 <mpfr_add1sp@@Base+0x4a0>
   40464:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   40468:	str	x9, [x10, #16]
   4046c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40470:	ldr	x1, [x0, #2608]
   40474:	add	x0, x0, #0xa30
   40478:	blr	x1
   4047c:	ldr	x9, [x14, x0]
   40480:	cmp	x12, x9
   40484:	b.lt	404f8 <mpfr_add1sp@@Base+0xb30>  // b.tstop
   40488:	b	40560 <mpfr_add1sp@@Base+0xb98>
   4048c:	add	w9, w20, w8, lsr #31
   40490:	cmp	w9, #0x3
   40494:	b.ne	40434 <mpfr_add1sp@@Base+0xa6c>  // b.any
   40498:	cbz	w8, 40538 <mpfr_add1sp@@Base+0xb70>
   4049c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   404a0:	ldr	x1, [x0, #2640]
   404a4:	add	x0, x0, #0xa50
   404a8:	blr	x1
   404ac:	ldr	w9, [x14, x0]
   404b0:	orr	w9, w9, #0x8
   404b4:	str	w9, [x14, x0]
   404b8:	neg	w9, w8
   404bc:	b	4053c <mpfr_add1sp@@Base+0xb74>
   404c0:	add	x25, x25, #0x1
   404c4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   404c8:	mov	w21, #0x1                   	// #1
   404cc:	str	x8, [x23, x11, lsl #3]
   404d0:	b	40700 <mpfr_add1sp@@Base+0xd38>
   404d4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   404d8:	str	x9, [x10]
   404dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   404e0:	ldr	x1, [x0, #2608]
   404e4:	add	x0, x0, #0xa30
   404e8:	blr	x1
   404ec:	ldr	x9, [x14, x0]
   404f0:	cmp	x12, x9
   404f4:	b.ge	40560 <mpfr_add1sp@@Base+0xb98>  // b.tcont
   404f8:	add	x9, x12, #0x1
   404fc:	str	x9, [x19, #16]
   40500:	cbnz	w8, 3fe6c <mpfr_add1sp@@Base+0x4a4>
   40504:	b	40538 <mpfr_add1sp@@Base+0xb70>
   40508:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   4050c:	str	x9, [x10, #8]
   40510:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40514:	ldr	x1, [x0, #2608]
   40518:	add	x0, x0, #0xa30
   4051c:	blr	x1
   40520:	ldr	x9, [x13, x0]
   40524:	cmp	x12, x9
   40528:	b.ge	40560 <mpfr_add1sp@@Base+0xb98>  // b.tcont
   4052c:	add	x9, x12, #0x1
   40530:	str	x9, [x19, #16]
   40534:	cbnz	w8, 40248 <mpfr_add1sp@@Base+0x880>
   40538:	mov	w9, wzr
   4053c:	mov	w0, w9
   40540:	mov	sp, x29
   40544:	ldp	x20, x19, [sp, #80]
   40548:	ldp	x22, x21, [sp, #64]
   4054c:	ldp	x24, x23, [sp, #48]
   40550:	ldp	x26, x25, [sp, #32]
   40554:	ldp	x28, x27, [sp, #16]
   40558:	ldp	x29, x30, [sp], #96
   4055c:	ret
   40560:	mov	x0, x19
   40564:	mov	w1, w20
   40568:	mov	w2, w8
   4056c:	bl	bf90 <mpfr_overflow@plt>
   40570:	mov	w9, w0
   40574:	b	4053c <mpfr_add1sp@@Base+0xb74>
   40578:	cmp	w20, #0x5
   4057c:	b.ne	40894 <mpfr_add1sp@@Base+0xecc>  // b.any
   40580:	ldur	x8, [x29, #-24]
   40584:	ldr	x0, [x19, #24]
   40588:	ldr	x1, [x8, #24]
   4058c:	cmp	x0, x1
   40590:	b.eq	4059c <mpfr_add1sp@@Base+0xbd4>  // b.none
   40594:	lsl	x2, x21, #3
   40598:	bl	ba70 <memcpy@plt>
   4059c:	ldur	x25, [x29, #-16]
   405a0:	mov	w21, #0xffffffff            	// #-1
   405a4:	b	40700 <mpfr_add1sp@@Base+0xd38>
   405a8:	sub	x0, x29, #0x8
   405ac:	bl	be10 <mpfr_tmp_allocate@plt>
   405b0:	mov	x22, x0
   405b4:	ands	x3, x28, #0x3f
   405b8:	lsr	x24, x28, #6
   405bc:	b.ne	3fda8 <mpfr_add1sp@@Base+0x3e0>  // b.any
   405c0:	ldr	x8, [x27, #24]
   405c4:	add	x1, x8, x24, lsl #3
   405c8:	cmp	x1, x22
   405cc:	b.eq	405e0 <mpfr_add1sp@@Base+0xc18>  // b.none
   405d0:	sub	x8, x21, x24
   405d4:	lsl	x2, x8, #3
   405d8:	mov	x0, x22
   405dc:	bl	ba70 <memcpy@plt>
   405e0:	add	x8, x22, x21, lsl #3
   405e4:	lsl	x2, x24, #3
   405e8:	sub	x0, x8, x2
   405ec:	b	40618 <mpfr_add1sp@@Base+0xc50>
   405f0:	stur	x23, [x29, #-56]
   405f4:	lsl	x23, x24, #3
   405f8:	add	x1, x1, x23
   405fc:	sub	x2, x21, x24
   40600:	mov	x0, x22
   40604:	bl	bd30 <__gmpn_rshift@plt>
   40608:	add	x8, x22, x21, lsl #3
   4060c:	sub	x0, x8, x23
   40610:	mov	x2, x23
   40614:	ldur	x23, [x29, #-56]
   40618:	mov	w1, wzr
   4061c:	bl	c150 <memset@plt>
   40620:	ldur	x13, [x29, #-24]
   40624:	mov	x24, x25
   40628:	cmp	w20, #0x5
   4062c:	b.eq	3fdcc <mpfr_add1sp@@Base+0x404>  // b.none
   40630:	ldur	x10, [x29, #-32]
   40634:	cbz	w24, 40664 <mpfr_add1sp@@Base+0xc9c>
   40638:	ldr	x8, [x22]
   4063c:	sub	w9, w24, #0x1
   40640:	mov	w10, #0x1                   	// #1
   40644:	lsl	x9, x10, x9
   40648:	sub	x10, x9, #0x1
   4064c:	tst	x8, x10
   40650:	and	x14, x8, x9
   40654:	b.eq	40834 <mpfr_add1sp@@Base+0xe6c>  // b.none
   40658:	mov	x27, x14
   4065c:	mov	w28, #0x1                   	// #1
   40660:	b	406bc <mpfr_add1sp@@Base+0xcf4>
   40664:	ldur	x12, [x29, #-40]
   40668:	ldr	x9, [x27, #24]
   4066c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   40670:	add	x8, x12, #0x3f
   40674:	cmp	x12, #0x0
   40678:	csel	x8, x8, x12, lt  // lt = tstop
   4067c:	sub	x8, x10, x8, asr #6
   40680:	ldr	x10, [x9, x8, lsl #3]
   40684:	lsr	x11, x11, x12
   40688:	sub	x12, x11, #0x1
   4068c:	tst	x10, x12
   40690:	and	x27, x10, x11
   40694:	b.eq	406a0 <mpfr_add1sp@@Base+0xcd8>  // b.none
   40698:	mov	w28, #0x1                   	// #1
   4069c:	b	406bc <mpfr_add1sp@@Base+0xcf4>
   406a0:	sub	x9, x9, #0x8
   406a4:	mov	w28, #0x1                   	// #1
   406a8:	subs	x10, x8, #0x1
   406ac:	b.lt	3fdd0 <mpfr_add1sp@@Base+0x408>  // b.tstop
   406b0:	ldr	x11, [x9, x8, lsl #3]
   406b4:	mov	x8, x10
   406b8:	cbz	x11, 406a8 <mpfr_add1sp@@Base+0xce0>
   406bc:	ldr	x8, [x22]
   406c0:	mov	w9, #0x1                   	// #1
   406c4:	lsl	x25, x9, x24
   406c8:	neg	x26, x25
   406cc:	and	x8, x8, x26
   406d0:	str	x8, [x22]
   406d4:	ldr	x23, [x19, #24]
   406d8:	ldr	x1, [x13, #24]
   406dc:	mov	x2, x22
   406e0:	mov	x3, x21
   406e4:	mov	x0, x23
   406e8:	bl	c590 <__gmpn_add_n@plt>
   406ec:	cbnz	x0, 40784 <mpfr_add1sp@@Base+0xdbc>
   406f0:	cmp	w20, #0x5
   406f4:	b.ne	407dc <mpfr_add1sp@@Base+0xe14>  // b.any
   406f8:	ldur	x25, [x29, #-16]
   406fc:	mov	w21, wzr
   40700:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40704:	ldr	x1, [x0, #2608]
   40708:	add	x0, x0, #0xa30
   4070c:	blr	x1
   40710:	mrs	x22, tpidr_el0
   40714:	ldr	x8, [x22, x0]
   40718:	cmp	x25, x8
   4071c:	b.gt	40758 <mpfr_add1sp@@Base+0xd90>
   40720:	str	x25, [x19, #16]
   40724:	ldur	x0, [x29, #-8]
   40728:	cbnz	x0, 40770 <mpfr_add1sp@@Base+0xda8>
   4072c:	ldr	w8, [x19, #8]
   40730:	mul	w9, w8, w21
   40734:	cbz	w9, 4053c <mpfr_add1sp@@Base+0xb74>
   40738:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4073c:	ldr	x1, [x0, #2640]
   40740:	add	x0, x0, #0xa50
   40744:	blr	x1
   40748:	ldr	w8, [x22, x0]
   4074c:	orr	w8, w8, #0x8
   40750:	str	w8, [x22, x0]
   40754:	b	4053c <mpfr_add1sp@@Base+0xb74>
   40758:	ldur	x0, [x29, #-8]
   4075c:	cbnz	x0, 4088c <mpfr_add1sp@@Base+0xec4>
   40760:	ldr	w2, [x19, #8]
   40764:	mov	x0, x19
   40768:	mov	w1, w20
   4076c:	b	4056c <mpfr_add1sp@@Base+0xba4>
   40770:	bl	c400 <mpfr_tmp_free@plt>
   40774:	ldr	w8, [x19, #8]
   40778:	mul	w9, w8, w21
   4077c:	cbnz	w9, 40738 <mpfr_add1sp@@Base+0xd70>
   40780:	b	4053c <mpfr_add1sp@@Base+0xb74>
   40784:	ldr	x8, [x23]
   40788:	mov	w3, #0x1                   	// #1
   4078c:	mov	x0, x23
   40790:	mov	x1, x23
   40794:	mov	x2, x21
   40798:	and	x22, x8, x25
   4079c:	bl	bd30 <__gmpn_rshift@plt>
   407a0:	ldur	x8, [x29, #-32]
   407a4:	orr	x28, x27, x28
   407a8:	mov	x27, x22
   407ac:	lsl	x8, x8, #3
   407b0:	ldr	x9, [x23, x8]
   407b4:	orr	x9, x9, #0x8000000000000000
   407b8:	str	x9, [x23, x8]
   407bc:	ldr	x8, [x23]
   407c0:	ldur	x9, [x29, #-16]
   407c4:	and	x8, x8, x26
   407c8:	add	x9, x9, #0x1
   407cc:	stur	x9, [x29, #-16]
   407d0:	str	x8, [x23]
   407d4:	cmp	w20, #0x5
   407d8:	b.eq	406f8 <mpfr_add1sp@@Base+0xd30>  // b.none
   407dc:	cbz	w20, 40814 <mpfr_add1sp@@Base+0xe4c>
   407e0:	ldur	w8, [x29, #-44]
   407e4:	add	w9, w8, w20
   407e8:	orr	x8, x28, x27
   407ec:	cmp	w9, #0x3
   407f0:	csinc	w20, w20, wzr, ne  // ne = any
   407f4:	cmp	x8, #0x0
   407f8:	csetm	w21, ne  // ne = any
   407fc:	cmp	w20, #0x1
   40800:	b.eq	40878 <mpfr_add1sp@@Base+0xeb0>  // b.none
   40804:	ldur	x25, [x29, #-16]
   40808:	ldur	x11, [x29, #-32]
   4080c:	cbnz	x8, 40058 <mpfr_add1sp@@Base+0x690>
   40810:	b	40700 <mpfr_add1sp@@Base+0xd38>
   40814:	cmp	x28, #0x0
   40818:	csetm	w21, ne  // ne = any
   4081c:	cbz	x27, 40880 <mpfr_add1sp@@Base+0xeb8>
   40820:	cbz	x28, 40914 <mpfr_add1sp@@Base+0xf4c>
   40824:	mov	w20, wzr
   40828:	ldur	x25, [x29, #-16]
   4082c:	ldur	x11, [x29, #-32]
   40830:	b	40058 <mpfr_add1sp@@Base+0x690>
   40834:	add	x8, x26, x24
   40838:	sub	x10, x8, x28
   4083c:	mov	x13, x24
   40840:	cmp	x10, x23
   40844:	b.le	408dc <mpfr_add1sp@@Base+0xf14>
   40848:	mov	x28, xzr
   4084c:	mov	x24, x13
   40850:	ldur	x13, [x29, #-24]
   40854:	mov	x27, x14
   40858:	b	406bc <mpfr_add1sp@@Base+0xcf4>
   4085c:	add	w8, w28, w20
   40860:	cmp	w8, #0x3
   40864:	csinc	w20, w20, wzr, ne  // ne = any
   40868:	cmp	w20, #0x1
   4086c:	b.ne	40050 <mpfr_add1sp@@Base+0x688>  // b.any
   40870:	mov	w21, #0xffffffff            	// #-1
   40874:	b	40700 <mpfr_add1sp@@Base+0xd38>
   40878:	ldur	x25, [x29, #-16]
   4087c:	b	40700 <mpfr_add1sp@@Base+0xd38>
   40880:	ldur	x25, [x29, #-16]
   40884:	mov	w20, wzr
   40888:	b	40700 <mpfr_add1sp@@Base+0xd38>
   4088c:	bl	c400 <mpfr_tmp_free@plt>
   40890:	b	40760 <mpfr_add1sp@@Base+0xd98>
   40894:	cmp	x23, x28
   40898:	b.cs	4094c <mpfr_add1sp@@Base+0xf84>  // b.hs, b.nlast
   4089c:	cmp	w20, #0x2
   408a0:	b.cc	40580 <mpfr_add1sp@@Base+0xbb8>  // b.lo, b.ul, b.last
   408a4:	add	w8, w12, w20
   408a8:	cmp	w8, #0x3
   408ac:	b.eq	40580 <mpfr_add1sp@@Base+0xbb8>  // b.none
   408b0:	ldur	x8, [x29, #-24]
   408b4:	ldr	x23, [x19, #24]
   408b8:	ldr	x1, [x8, #24]
   408bc:	cmp	x23, x1
   408c0:	b.eq	408d0 <mpfr_add1sp@@Base+0xf08>  // b.none
   408c4:	lsl	x2, x21, #3
   408c8:	mov	x0, x23
   408cc:	bl	ba70 <memcpy@plt>
   408d0:	ldur	x25, [x29, #-16]
   408d4:	mov	x11, x22
   408d8:	b	40058 <mpfr_add1sp@@Base+0x690>
   408dc:	ldur	x11, [x29, #-32]
   408e0:	ldr	x9, [x27, #24]
   408e4:	add	x8, x10, #0x3f
   408e8:	cmp	x10, #0x0
   408ec:	csel	x8, x8, x10, lt  // lt = tstop
   408f0:	sub	x8, x11, x8, asr #6
   408f4:	ldr	x11, [x9, x8, lsl #3]
   408f8:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   408fc:	lsr	x10, x12, x10
   40900:	sub	x10, x10, #0x1
   40904:	tst	x11, x10
   40908:	b.eq	40928 <mpfr_add1sp@@Base+0xf60>  // b.none
   4090c:	mov	w28, #0x1                   	// #1
   40910:	b	4084c <mpfr_add1sp@@Base+0xe84>
   40914:	ldr	x8, [x23]
   40918:	mov	w20, wzr
   4091c:	tst	x8, x25
   40920:	b.ne	40828 <mpfr_add1sp@@Base+0xe60>  // b.any
   40924:	b	4059c <mpfr_add1sp@@Base+0xbd4>
   40928:	sub	x9, x9, #0x8
   4092c:	subs	x10, x8, #0x1
   40930:	b.lt	40848 <mpfr_add1sp@@Base+0xe80>  // b.tstop
   40934:	ldr	x11, [x9, x8, lsl #3]
   40938:	mov	x8, x10
   4093c:	cbz	x11, 4092c <mpfr_add1sp@@Base+0xf64>
   40940:	mov	x24, x13
   40944:	ldur	x13, [x29, #-24]
   40948:	b	40658 <mpfr_add1sp@@Base+0xc90>
   4094c:	cmp	w20, #0x1
   40950:	b.eq	40580 <mpfr_add1sp@@Base+0xbb8>  // b.none
   40954:	cbnz	w20, 408a4 <mpfr_add1sp@@Base+0xedc>
   40958:	ldr	x8, [x27, #24]
   4095c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   40960:	ldr	x9, [x8, x22, lsl #3]
   40964:	cmp	x9, x10
   40968:	b.ne	408b0 <mpfr_add1sp@@Base+0xee8>  // b.any
   4096c:	sub	x8, x8, #0x8
   40970:	mov	x9, x22
   40974:	subs	x10, x9, #0x1
   40978:	b.lt	4098c <mpfr_add1sp@@Base+0xfc4>  // b.tstop
   4097c:	ldr	x11, [x8, x9, lsl #3]
   40980:	mov	x9, x10
   40984:	cbz	x11, 40974 <mpfr_add1sp@@Base+0xfac>
   40988:	b	408b0 <mpfr_add1sp@@Base+0xee8>
   4098c:	ldur	x8, [x29, #-24]
   40990:	ldr	x8, [x8, #24]
   40994:	ldr	x8, [x8]
   40998:	lsr	x8, x8, x24
   4099c:	tbnz	w8, #0, 408b0 <mpfr_add1sp@@Base+0xee8>
   409a0:	b	40580 <mpfr_add1sp@@Base+0xbb8>

00000000000409a4 <mpfr_free_cache@@Base>:
   409a4:	stp	x29, x30, [sp, #-32]!
   409a8:	str	x19, [sp, #16]
   409ac:	mov	x29, sp
   409b0:	bl	c000 <mpfr_bernoulli_freecache@plt>
   409b4:	bl	c240 <mpfr_free_pool@plt>
   409b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   409bc:	ldr	x1, [x0, #2688]
   409c0:	add	x0, x0, #0xa80
   409c4:	blr	x1
   409c8:	mrs	x19, tpidr_el0
   409cc:	add	x0, x19, x0
   409d0:	bl	bec0 <mpfr_clear_cache@plt>
   409d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   409d8:	ldr	x1, [x0, #2624]
   409dc:	add	x0, x0, #0xa40
   409e0:	blr	x1
   409e4:	add	x0, x19, x0
   409e8:	bl	bec0 <mpfr_clear_cache@plt>
   409ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   409f0:	ldr	x1, [x0, #2672]
   409f4:	add	x0, x0, #0xa70
   409f8:	blr	x1
   409fc:	add	x0, x19, x0
   40a00:	bl	bec0 <mpfr_clear_cache@plt>
   40a04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40a08:	ldr	x1, [x0, #2656]
   40a0c:	add	x0, x0, #0xa60
   40a10:	blr	x1
   40a14:	add	x0, x19, x0
   40a18:	ldr	x19, [sp, #16]
   40a1c:	ldp	x29, x30, [sp], #32
   40a20:	b	bec0 <mpfr_clear_cache@plt>

0000000000040a24 <mpfr_free_cache2@@Base>:
   40a24:	tbnz	w0, #0, 40a2c <mpfr_free_cache2@@Base+0x8>
   40a28:	ret
   40a2c:	stp	x29, x30, [sp, #-32]!
   40a30:	str	x19, [sp, #16]
   40a34:	mov	x29, sp
   40a38:	bl	c000 <mpfr_bernoulli_freecache@plt>
   40a3c:	bl	c240 <mpfr_free_pool@plt>
   40a40:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40a44:	ldr	x1, [x0, #2688]
   40a48:	add	x0, x0, #0xa80
   40a4c:	blr	x1
   40a50:	mrs	x19, tpidr_el0
   40a54:	add	x0, x19, x0
   40a58:	bl	bec0 <mpfr_clear_cache@plt>
   40a5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40a60:	ldr	x1, [x0, #2624]
   40a64:	add	x0, x0, #0xa40
   40a68:	blr	x1
   40a6c:	add	x0, x19, x0
   40a70:	bl	bec0 <mpfr_clear_cache@plt>
   40a74:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40a78:	ldr	x1, [x0, #2672]
   40a7c:	add	x0, x0, #0xa70
   40a80:	blr	x1
   40a84:	add	x0, x19, x0
   40a88:	bl	bec0 <mpfr_clear_cache@plt>
   40a8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40a90:	ldr	x1, [x0, #2656]
   40a94:	add	x0, x0, #0xa60
   40a98:	blr	x1
   40a9c:	add	x0, x19, x0
   40aa0:	ldr	x19, [sp, #16]
   40aa4:	ldp	x29, x30, [sp], #32
   40aa8:	b	bec0 <mpfr_clear_cache@plt>

0000000000040aac <mpfr_mp_memory_cleanup@@Base>:
   40aac:	stp	x29, x30, [sp, #-32]!
   40ab0:	str	x19, [sp, #16]
   40ab4:	mov	x29, sp
   40ab8:	bl	c000 <mpfr_bernoulli_freecache@plt>
   40abc:	bl	c240 <mpfr_free_pool@plt>
   40ac0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40ac4:	ldr	x1, [x0, #2688]
   40ac8:	add	x0, x0, #0xa80
   40acc:	blr	x1
   40ad0:	mrs	x19, tpidr_el0
   40ad4:	add	x0, x19, x0
   40ad8:	bl	bec0 <mpfr_clear_cache@plt>
   40adc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40ae0:	ldr	x1, [x0, #2624]
   40ae4:	add	x0, x0, #0xa40
   40ae8:	blr	x1
   40aec:	add	x0, x19, x0
   40af0:	bl	bec0 <mpfr_clear_cache@plt>
   40af4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40af8:	ldr	x1, [x0, #2672]
   40afc:	add	x0, x0, #0xa70
   40b00:	blr	x1
   40b04:	add	x0, x19, x0
   40b08:	bl	bec0 <mpfr_clear_cache@plt>
   40b0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40b10:	ldr	x1, [x0, #2656]
   40b14:	add	x0, x0, #0xa60
   40b18:	blr	x1
   40b1c:	add	x0, x19, x0
   40b20:	bl	bec0 <mpfr_clear_cache@plt>
   40b24:	ldr	x19, [sp, #16]
   40b28:	mov	w0, wzr
   40b2c:	ldp	x29, x30, [sp], #32
   40b30:	ret

0000000000040b34 <mpfr_add_si@@Base>:
   40b34:	tbnz	x2, #63, 40b3c <mpfr_add_si@@Base+0x8>
   40b38:	b	c270 <mpfr_add_ui@plt>
   40b3c:	neg	x2, x2
   40b40:	b	c520 <mpfr_sub_ui@plt>

0000000000040b44 <mpfr_sub_si@@Base>:
   40b44:	tbnz	x2, #63, 40b4c <mpfr_sub_si@@Base+0x8>
   40b48:	b	c520 <mpfr_sub_ui@plt>
   40b4c:	neg	x2, x2
   40b50:	b	c270 <mpfr_add_ui@plt>

0000000000040b54 <mpfr_si_sub@@Base>:
   40b54:	stp	x29, x30, [sp, #-32]!
   40b58:	str	x19, [sp, #16]
   40b5c:	mov	x19, x0
   40b60:	mov	x29, sp
   40b64:	tbnz	x1, #63, 40b78 <mpfr_si_sub@@Base+0x24>
   40b68:	mov	x0, x19
   40b6c:	ldr	x19, [sp, #16]
   40b70:	ldp	x29, x30, [sp], #32
   40b74:	b	ca30 <mpfr_ui_sub@plt>
   40b78:	cmp	w3, #0x3
   40b7c:	mov	w9, #0x2                   	// #2
   40b80:	neg	x8, x1
   40b84:	csel	w9, w9, w3, eq  // eq = none
   40b88:	cmp	w3, #0x2
   40b8c:	mov	w10, #0x3                   	// #3
   40b90:	csel	w3, w10, w9, eq  // eq = none
   40b94:	mov	x0, x19
   40b98:	mov	x1, x2
   40b9c:	mov	x2, x8
   40ba0:	bl	c270 <mpfr_add_ui@plt>
   40ba4:	ldr	w8, [x19, #8]
   40ba8:	neg	w0, w0
   40bac:	neg	w8, w8
   40bb0:	str	w8, [x19, #8]
   40bb4:	ldr	x19, [sp, #16]
   40bb8:	ldp	x29, x30, [sp], #32
   40bbc:	ret

0000000000040bc0 <mpfr_mul_si@@Base>:
   40bc0:	stp	x29, x30, [sp, #-32]!
   40bc4:	str	x19, [sp, #16]
   40bc8:	mov	x19, x0
   40bcc:	mov	x29, sp
   40bd0:	tbnz	x2, #63, 40be4 <mpfr_mul_si@@Base+0x24>
   40bd4:	mov	x0, x19
   40bd8:	ldr	x19, [sp, #16]
   40bdc:	ldp	x29, x30, [sp], #32
   40be0:	b	bab0 <mpfr_mul_ui@plt>
   40be4:	cmp	w3, #0x3
   40be8:	mov	w8, #0x2                   	// #2
   40bec:	csel	w8, w8, w3, eq  // eq = none
   40bf0:	cmp	w3, #0x2
   40bf4:	mov	w9, #0x3                   	// #3
   40bf8:	neg	x2, x2
   40bfc:	csel	w3, w9, w8, eq  // eq = none
   40c00:	mov	x0, x19
   40c04:	bl	bab0 <mpfr_mul_ui@plt>
   40c08:	ldr	w8, [x19, #8]
   40c0c:	neg	w0, w0
   40c10:	neg	w8, w8
   40c14:	str	w8, [x19, #8]
   40c18:	ldr	x19, [sp, #16]
   40c1c:	ldp	x29, x30, [sp], #32
   40c20:	ret

0000000000040c24 <mpfr_div_si@@Base>:
   40c24:	stp	x29, x30, [sp, #-32]!
   40c28:	str	x19, [sp, #16]
   40c2c:	mov	x19, x0
   40c30:	mov	x29, sp
   40c34:	tbnz	x2, #63, 40c48 <mpfr_div_si@@Base+0x24>
   40c38:	mov	x0, x19
   40c3c:	ldr	x19, [sp, #16]
   40c40:	ldp	x29, x30, [sp], #32
   40c44:	b	cc40 <mpfr_div_ui@plt>
   40c48:	cmp	w3, #0x3
   40c4c:	mov	w8, #0x2                   	// #2
   40c50:	csel	w8, w8, w3, eq  // eq = none
   40c54:	cmp	w3, #0x2
   40c58:	mov	w9, #0x3                   	// #3
   40c5c:	neg	x2, x2
   40c60:	csel	w3, w9, w8, eq  // eq = none
   40c64:	mov	x0, x19
   40c68:	bl	cc40 <mpfr_div_ui@plt>
   40c6c:	ldr	w8, [x19, #8]
   40c70:	neg	w0, w0
   40c74:	neg	w8, w8
   40c78:	str	w8, [x19, #8]
   40c7c:	ldr	x19, [sp, #16]
   40c80:	ldp	x29, x30, [sp], #32
   40c84:	ret

0000000000040c88 <mpfr_si_div@@Base>:
   40c88:	stp	x29, x30, [sp, #-32]!
   40c8c:	str	x19, [sp, #16]
   40c90:	mov	x19, x0
   40c94:	mov	x29, sp
   40c98:	tbnz	x1, #63, 40cac <mpfr_si_div@@Base+0x24>
   40c9c:	mov	x0, x19
   40ca0:	ldr	x19, [sp, #16]
   40ca4:	ldp	x29, x30, [sp], #32
   40ca8:	b	c2f0 <mpfr_ui_div@plt>
   40cac:	cmp	w3, #0x3
   40cb0:	mov	w8, #0x2                   	// #2
   40cb4:	csel	w8, w8, w3, eq  // eq = none
   40cb8:	cmp	w3, #0x2
   40cbc:	mov	w9, #0x3                   	// #3
   40cc0:	neg	x1, x1
   40cc4:	csel	w3, w9, w8, eq  // eq = none
   40cc8:	mov	x0, x19
   40ccc:	bl	c2f0 <mpfr_ui_div@plt>
   40cd0:	ldr	w8, [x19, #8]
   40cd4:	neg	w0, w0
   40cd8:	neg	w8, w8
   40cdc:	str	w8, [x19, #8]
   40ce0:	ldr	x19, [sp, #16]
   40ce4:	ldp	x29, x30, [sp], #32
   40ce8:	ret

0000000000040cec <mpfr_cmp_ld@@Base>:
   40cec:	sub	sp, sp, #0x70
   40cf0:	stp	x29, x30, [sp, #48]
   40cf4:	stp	x24, x23, [sp, #64]
   40cf8:	stp	x22, x21, [sp, #80]
   40cfc:	stp	x20, x19, [sp, #96]
   40d00:	add	x29, sp, #0x30
   40d04:	str	q0, [sp]
   40d08:	mov	x19, x0
   40d0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40d10:	ldr	x1, [x0, #2640]
   40d14:	add	x0, x0, #0xa50
   40d18:	blr	x1
   40d1c:	mrs	x21, tpidr_el0
   40d20:	ldr	w24, [x21, x0]
   40d24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40d28:	ldr	x1, [x0, #2576]
   40d2c:	add	x0, x0, #0xa10
   40d30:	blr	x1
   40d34:	ldr	x22, [x21, x0]
   40d38:	mov	x8, x0
   40d3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40d40:	ldr	x1, [x0, #2608]
   40d44:	add	x0, x0, #0xa30
   40d48:	blr	x1
   40d4c:	ldr	x23, [x21, x0]
   40d50:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   40d54:	str	x9, [x21, x8]
   40d58:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   40d5c:	str	x8, [x21, x0]
   40d60:	add	x0, sp, #0x10
   40d64:	mov	w1, #0x71                  	// #113
   40d68:	bl	ca60 <mpfr_init2@plt>
   40d6c:	ldr	q0, [sp]
   40d70:	add	x0, sp, #0x10
   40d74:	mov	w1, wzr
   40d78:	bl	baa0 <mpfr_set_ld@plt>
   40d7c:	cbz	w0, 40d9c <mpfr_cmp_ld@@Base+0xb0>
   40d80:	add	x0, sp, #0x10
   40d84:	mov	w1, #0x832                 	// #2098
   40d88:	bl	bf20 <mpfr_set_prec@plt>
   40d8c:	ldr	q0, [sp]
   40d90:	add	x0, sp, #0x10
   40d94:	mov	w1, wzr
   40d98:	bl	baa0 <mpfr_set_ld@plt>
   40d9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40da0:	ldr	x1, [x0, #2640]
   40da4:	add	x0, x0, #0xa50
   40da8:	blr	x1
   40dac:	mov	x20, x0
   40db0:	str	wzr, [x21, x0]
   40db4:	add	x1, sp, #0x10
   40db8:	mov	w2, #0x1                   	// #1
   40dbc:	mov	x0, x19
   40dc0:	bl	c980 <mpfr_cmp3@plt>
   40dc4:	ldr	w8, [x21, x20]
   40dc8:	mov	w19, w0
   40dcc:	add	x0, sp, #0x10
   40dd0:	orr	w24, w8, w24
   40dd4:	bl	c0b0 <mpfr_clear@plt>
   40dd8:	str	w24, [x21, x20]
   40ddc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40de0:	ldr	x1, [x0, #2576]
   40de4:	add	x0, x0, #0xa10
   40de8:	blr	x1
   40dec:	str	x22, [x21, x0]
   40df0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40df4:	ldr	x1, [x0, #2608]
   40df8:	add	x0, x0, #0xa30
   40dfc:	blr	x1
   40e00:	str	x23, [x21, x0]
   40e04:	mov	w0, w19
   40e08:	ldp	x20, x19, [sp, #96]
   40e0c:	ldp	x22, x21, [sp, #80]
   40e10:	ldp	x24, x23, [sp, #64]
   40e14:	ldp	x29, x30, [sp, #48]
   40e18:	add	sp, sp, #0x70
   40e1c:	ret

0000000000040e20 <mpfr_set_ui_2exp@@Base>:
   40e20:	stp	x29, x30, [sp, #-64]!
   40e24:	stp	x20, x19, [sp, #48]
   40e28:	mov	x20, x0
   40e2c:	mov	w8, #0x1                   	// #1
   40e30:	str	x23, [sp, #16]
   40e34:	stp	x22, x21, [sp, #32]
   40e38:	mov	x29, sp
   40e3c:	str	w8, [x0, #8]
   40e40:	cbz	x1, 40f1c <mpfr_set_ui_2exp@@Base+0xfc>
   40e44:	str	wzr, [x29, #28]
   40e48:	ldr	x8, [x20]
   40e4c:	ldr	x0, [x20, #24]
   40e50:	mov	x22, x2
   40e54:	clz	x23, x1
   40e58:	sub	x9, x8, #0x1
   40e5c:	add	x8, x8, #0x3e
   40e60:	cmp	x9, #0x0
   40e64:	csel	x8, x8, x9, lt  // lt = tstop
   40e68:	asr	x8, x8, #6
   40e6c:	lsl	x2, x8, #3
   40e70:	lsl	x9, x1, x23
   40e74:	add	x21, x0, x2
   40e78:	mov	w1, wzr
   40e7c:	mov	w19, w3
   40e80:	str	x9, [x21]
   40e84:	bl	c150 <memset@plt>
   40e88:	ldr	x4, [x20]
   40e8c:	mov	w8, #0x40                  	// #64
   40e90:	sub	x2, x8, x23
   40e94:	add	x22, x2, x22
   40e98:	cmp	x4, x2
   40e9c:	b.lt	40f2c <mpfr_set_ui_2exp@@Base+0x10c>  // b.tstop
   40ea0:	str	x22, [x20, #16]
   40ea4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40ea8:	ldr	x1, [x0, #2576]
   40eac:	add	x0, x0, #0xa10
   40eb0:	blr	x1
   40eb4:	mrs	x9, tpidr_el0
   40eb8:	ldr	x10, [x9, x0]
   40ebc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40ec0:	ldr	x1, [x0, #2608]
   40ec4:	add	x0, x0, #0xa30
   40ec8:	blr	x1
   40ecc:	ldr	w8, [x29, #28]
   40ed0:	cmp	x22, x10
   40ed4:	b.lt	40f58 <mpfr_set_ui_2exp@@Base+0x138>  // b.tstop
   40ed8:	ldr	x10, [x9, x0]
   40edc:	cmp	x22, x10
   40ee0:	b.gt	40f58 <mpfr_set_ui_2exp@@Base+0x138>
   40ee4:	cbz	w8, 40f04 <mpfr_set_ui_2exp@@Base+0xe4>
   40ee8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   40eec:	ldr	x1, [x0, #2640]
   40ef0:	add	x0, x0, #0xa50
   40ef4:	blr	x1
   40ef8:	ldr	w10, [x9, x0]
   40efc:	orr	w10, w10, #0x8
   40f00:	str	w10, [x9, x0]
   40f04:	ldp	x20, x19, [sp, #48]
   40f08:	ldp	x22, x21, [sp, #32]
   40f0c:	ldr	x23, [sp, #16]
   40f10:	mov	w0, w8
   40f14:	ldp	x29, x30, [sp], #64
   40f18:	ret
   40f1c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   40f20:	mov	w8, wzr
   40f24:	str	x9, [x20, #16]
   40f28:	b	40f04 <mpfr_set_ui_2exp@@Base+0xe4>
   40f2c:	add	x6, x29, #0x1c
   40f30:	mov	x0, x21
   40f34:	mov	x1, x21
   40f38:	mov	w3, wzr
   40f3c:	mov	w5, w19
   40f40:	bl	ca00 <mpfr_round_raw@plt>
   40f44:	cbz	w0, 40ea0 <mpfr_set_ui_2exp@@Base+0x80>
   40f48:	add	x22, x22, #0x1
   40f4c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   40f50:	str	x8, [x21]
   40f54:	b	40ea0 <mpfr_set_ui_2exp@@Base+0x80>
   40f58:	mov	x0, x20
   40f5c:	mov	w1, w8
   40f60:	mov	w2, w19
   40f64:	bl	cb10 <mpfr_check_range@plt>
   40f68:	mov	w8, w0
   40f6c:	b	40f04 <mpfr_set_ui_2exp@@Base+0xe4>

0000000000040f70 <mpfr_set_si_2exp@@Base>:
   40f70:	stp	x29, x30, [sp, #-80]!
   40f74:	stp	x20, x19, [sp, #64]
   40f78:	mov	x20, x0
   40f7c:	str	x25, [sp, #16]
   40f80:	stp	x24, x23, [sp, #32]
   40f84:	stp	x22, x21, [sp, #48]
   40f88:	mov	x29, sp
   40f8c:	cbz	x1, 4106c <mpfr_set_si_2exp@@Base+0xfc>
   40f90:	str	wzr, [x29, #28]
   40f94:	ldr	x8, [x20]
   40f98:	ldr	x0, [x20, #24]
   40f9c:	mov	x23, x2
   40fa0:	mov	x21, x1
   40fa4:	sub	x9, x8, #0x1
   40fa8:	add	x8, x8, #0x3e
   40fac:	cmp	x9, #0x0
   40fb0:	csel	x8, x8, x9, lt  // lt = tstop
   40fb4:	cmp	x1, #0x0
   40fb8:	cneg	x9, x1, mi  // mi = first
   40fbc:	asr	x8, x8, #6
   40fc0:	clz	x24, x9
   40fc4:	lsl	x2, x8, #3
   40fc8:	lsl	x8, x9, x24
   40fcc:	add	x22, x0, x2
   40fd0:	str	x8, [x22]
   40fd4:	mov	w8, #0xffffffff            	// #-1
   40fd8:	mov	w1, wzr
   40fdc:	mov	w19, w3
   40fe0:	cneg	w25, w8, ge  // ge = tcont
   40fe4:	bl	c150 <memset@plt>
   40fe8:	ldr	x4, [x20]
   40fec:	mov	w8, #0x40                  	// #64
   40ff0:	sub	x2, x8, x24
   40ff4:	add	x23, x2, x23
   40ff8:	cmp	x4, x2
   40ffc:	str	w25, [x20, #8]
   41000:	b.lt	4109c <mpfr_set_si_2exp@@Base+0x12c>  // b.tstop
   41004:	str	x23, [x20, #16]
   41008:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4100c:	ldr	x1, [x0, #2576]
   41010:	add	x0, x0, #0xa10
   41014:	blr	x1
   41018:	mrs	x9, tpidr_el0
   4101c:	ldr	x10, [x9, x0]
   41020:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41024:	ldr	x1, [x0, #2608]
   41028:	add	x0, x0, #0xa30
   4102c:	blr	x1
   41030:	ldr	w8, [x29, #28]
   41034:	cmp	x23, x10
   41038:	b.lt	410c8 <mpfr_set_si_2exp@@Base+0x158>  // b.tstop
   4103c:	ldr	x10, [x9, x0]
   41040:	cmp	x23, x10
   41044:	b.gt	410c8 <mpfr_set_si_2exp@@Base+0x158>
   41048:	cbz	w8, 41080 <mpfr_set_si_2exp@@Base+0x110>
   4104c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41050:	ldr	x1, [x0, #2640]
   41054:	add	x0, x0, #0xa50
   41058:	blr	x1
   4105c:	ldr	w10, [x9, x0]
   41060:	orr	w10, w10, #0x8
   41064:	str	w10, [x9, x0]
   41068:	b	41080 <mpfr_set_si_2exp@@Base+0x110>
   4106c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   41070:	mov	w10, #0x1                   	// #1
   41074:	mov	w8, wzr
   41078:	str	x9, [x20, #16]
   4107c:	str	w10, [x20, #8]
   41080:	ldp	x20, x19, [sp, #64]
   41084:	ldp	x22, x21, [sp, #48]
   41088:	ldp	x24, x23, [sp, #32]
   4108c:	ldr	x25, [sp, #16]
   41090:	mov	w0, w8
   41094:	ldp	x29, x30, [sp], #80
   41098:	ret
   4109c:	lsr	x3, x21, #63
   410a0:	add	x6, x29, #0x1c
   410a4:	mov	x0, x22
   410a8:	mov	x1, x22
   410ac:	mov	w5, w19
   410b0:	bl	ca00 <mpfr_round_raw@plt>
   410b4:	cbz	w0, 41004 <mpfr_set_si_2exp@@Base+0x94>
   410b8:	add	x23, x23, #0x1
   410bc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   410c0:	str	x8, [x22]
   410c4:	b	41004 <mpfr_set_si_2exp@@Base+0x94>
   410c8:	mov	x0, x20
   410cc:	mov	w1, w8
   410d0:	mov	w2, w19
   410d4:	bl	cb10 <mpfr_check_range@plt>
   410d8:	mov	w8, w0
   410dc:	b	41080 <mpfr_set_si_2exp@@Base+0x110>

00000000000410e0 <__gmpfr_set_uj@@Base>:
   410e0:	mov	w3, w2
   410e4:	mov	x2, xzr
   410e8:	b	c040 <__gmpfr_set_uj_2exp@plt>

00000000000410ec <__gmpfr_set_uj_2exp@@Base>:
   410ec:	sub	sp, sp, #0x40
   410f0:	mov	x9, x0
   410f4:	stp	x29, x30, [sp, #48]
   410f8:	add	x29, sp, #0x30
   410fc:	cbz	x1, 41190 <__gmpfr_set_uj_2exp@@Base+0xa4>
   41100:	mov	w10, #0x40                  	// #64
   41104:	sub	x11, x29, #0x8
   41108:	clz	x13, x1
   4110c:	mov	w12, #0x1                   	// #1
   41110:	str	x10, [sp, #8]
   41114:	str	x11, [sp, #32]
   41118:	lsl	x10, x1, x13
   4111c:	sub	x11, x2, x13
   41120:	mov	w8, w3
   41124:	str	w12, [sp, #16]
   41128:	stur	x10, [x29, #-8]
   4112c:	add	x10, x11, #0x40
   41130:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41134:	ldr	x1, [x0, #2576]
   41138:	add	x0, x0, #0xa10
   4113c:	blr	x1
   41140:	mrs	x12, tpidr_el0
   41144:	ldr	x11, [x12, x0]
   41148:	cmp	x10, x11
   4114c:	b.lt	411b0 <__gmpfr_set_uj_2exp@@Base+0xc4>  // b.tstop
   41150:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41154:	ldr	x1, [x0, #2608]
   41158:	add	x0, x0, #0xa30
   4115c:	blr	x1
   41160:	ldr	x11, [x12, x0]
   41164:	cmp	x10, x11
   41168:	b.gt	411d8 <__gmpfr_set_uj_2exp@@Base+0xec>
   4116c:	add	x1, sp, #0x8
   41170:	mov	w3, #0x1                   	// #1
   41174:	mov	x0, x9
   41178:	mov	w2, w8
   4117c:	str	x10, [sp, #24]
   41180:	bl	c690 <mpfr_set4@plt>
   41184:	ldp	x29, x30, [sp, #48]
   41188:	add	sp, sp, #0x40
   4118c:	ret
   41190:	mov	w8, #0x1                   	// #1
   41194:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   41198:	mov	w0, wzr
   4119c:	str	w8, [x9, #8]
   411a0:	str	x10, [x9, #16]
   411a4:	ldp	x29, x30, [sp, #48]
   411a8:	add	sp, sp, #0x40
   411ac:	ret
   411b0:	cbnz	w8, 411fc <__gmpfr_set_uj_2exp@@Base+0x110>
   411b4:	add	x8, x10, #0x1
   411b8:	cmp	x8, x11
   411bc:	str	x9, [sp]
   411c0:	b.lt	411d0 <__gmpfr_set_uj_2exp@@Base+0xe4>  // b.tstop
   411c4:	add	x0, sp, #0x8
   411c8:	bl	bf50 <mpfr_powerof2_raw@plt>
   411cc:	cbz	w0, 411f4 <__gmpfr_set_uj_2exp@@Base+0x108>
   411d0:	mov	w8, #0x1                   	// #1
   411d4:	b	411f8 <__gmpfr_set_uj_2exp@@Base+0x10c>
   411d8:	mov	w2, #0x1                   	// #1
   411dc:	mov	x0, x9
   411e0:	mov	w1, w8
   411e4:	bl	bf90 <mpfr_overflow@plt>
   411e8:	ldp	x29, x30, [sp, #48]
   411ec:	add	sp, sp, #0x40
   411f0:	ret
   411f4:	mov	w8, wzr
   411f8:	ldr	x9, [sp]
   411fc:	mov	w2, #0x1                   	// #1
   41200:	mov	x0, x9
   41204:	mov	w1, w8
   41208:	bl	c3c0 <mpfr_underflow@plt>
   4120c:	ldp	x29, x30, [sp, #48]
   41210:	add	sp, sp, #0x40
   41214:	ret

0000000000041218 <__gmpfr_set_sj@@Base>:
   41218:	stp	x29, x30, [sp, #-32]!
   4121c:	str	x19, [sp, #16]
   41220:	mov	w3, w2
   41224:	mov	x19, x0
   41228:	mov	x29, sp
   4122c:	tbnz	x1, #63, 41244 <__gmpfr_set_sj@@Base+0x2c>
   41230:	mov	x0, x19
   41234:	ldr	x19, [sp, #16]
   41238:	mov	x2, xzr
   4123c:	ldp	x29, x30, [sp], #32
   41240:	b	c040 <__gmpfr_set_uj_2exp@plt>
   41244:	cmp	w3, #0x3
   41248:	mov	w8, #0x2                   	// #2
   4124c:	csel	w8, w8, w3, eq  // eq = none
   41250:	cmp	w3, #0x2
   41254:	mov	w9, #0x3                   	// #3
   41258:	neg	x1, x1
   4125c:	csel	w3, w9, w8, eq  // eq = none
   41260:	mov	x0, x19
   41264:	mov	x2, xzr
   41268:	bl	c040 <__gmpfr_set_uj_2exp@plt>
   4126c:	ldr	w8, [x19, #8]
   41270:	neg	w0, w0
   41274:	neg	w8, w8
   41278:	str	w8, [x19, #8]
   4127c:	ldr	x19, [sp, #16]
   41280:	ldp	x29, x30, [sp], #32
   41284:	ret

0000000000041288 <__gmpfr_set_sj_2exp@@Base>:
   41288:	stp	x29, x30, [sp, #-32]!
   4128c:	str	x19, [sp, #16]
   41290:	mov	x19, x0
   41294:	mov	x29, sp
   41298:	tbnz	x1, #63, 412ac <__gmpfr_set_sj_2exp@@Base+0x24>
   4129c:	mov	x0, x19
   412a0:	ldr	x19, [sp, #16]
   412a4:	ldp	x29, x30, [sp], #32
   412a8:	b	c040 <__gmpfr_set_uj_2exp@plt>
   412ac:	cmp	w3, #0x3
   412b0:	mov	w8, #0x2                   	// #2
   412b4:	csel	w8, w8, w3, eq  // eq = none
   412b8:	cmp	w3, #0x2
   412bc:	mov	w9, #0x3                   	// #3
   412c0:	neg	x1, x1
   412c4:	csel	w3, w9, w8, eq  // eq = none
   412c8:	mov	x0, x19
   412cc:	bl	c040 <__gmpfr_set_uj_2exp@plt>
   412d0:	ldr	w8, [x19, #8]
   412d4:	neg	w0, w0
   412d8:	neg	w8, w8
   412dc:	str	w8, [x19, #8]
   412e0:	ldr	x19, [sp, #16]
   412e4:	ldp	x29, x30, [sp], #32
   412e8:	ret

00000000000412ec <__gmpfr_mpfr_get_sj@@Base>:
   412ec:	sub	sp, sp, #0x60
   412f0:	stp	x29, x30, [sp, #32]
   412f4:	stp	x24, x23, [sp, #48]
   412f8:	stp	x22, x21, [sp, #64]
   412fc:	stp	x20, x19, [sp, #80]
   41300:	add	x29, sp, #0x20
   41304:	mov	w20, w1
   41308:	mov	x19, x0
   4130c:	bl	bc10 <mpfr_fits_intmax_p@plt>
   41310:	cbz	w0, 41678 <__gmpfr_mpfr_get_sj@@Base+0x38c>
   41314:	ldr	x8, [x19, #16]
   41318:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4131c:	cmp	x8, x9
   41320:	b.ne	4132c <__gmpfr_mpfr_get_sj@@Base+0x40>  // b.any
   41324:	mov	x19, xzr
   41328:	b	415cc <__gmpfr_mpfr_get_sj@@Base+0x2e0>
   4132c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41330:	ldr	x1, [x0, #2640]
   41334:	add	x0, x0, #0xa50
   41338:	blr	x1
   4133c:	mrs	x21, tpidr_el0
   41340:	ldr	w24, [x21, x0]
   41344:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41348:	ldr	x1, [x0, #2576]
   4134c:	add	x0, x0, #0xa10
   41350:	blr	x1
   41354:	ldr	x22, [x21, x0]
   41358:	mov	x8, x0
   4135c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41360:	ldr	x1, [x0, #2608]
   41364:	add	x0, x0, #0xa30
   41368:	blr	x1
   4136c:	ldr	x23, [x21, x0]
   41370:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   41374:	str	x9, [x21, x8]
   41378:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4137c:	str	x8, [x21, x0]
   41380:	mov	x0, sp
   41384:	mov	w1, #0x3f                  	// #63
   41388:	bl	ca60 <mpfr_init2@plt>
   4138c:	mov	x0, sp
   41390:	mov	x1, x19
   41394:	mov	w2, w20
   41398:	bl	c300 <mpfr_rint@plt>
   4139c:	ldr	x9, [sp, #16]
   413a0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   413a4:	orr	x8, x9, #0x1
   413a8:	cmp	x8, x10
   413ac:	b.eq	416c0 <__gmpfr_mpfr_get_sj@@Base+0x3d4>  // b.none
   413b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   413b4:	ldr	x1, [x0, #2640]
   413b8:	add	x0, x0, #0xa50
   413bc:	blr	x1
   413c0:	ldr	w8, [x21, x0]
   413c4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   413c8:	cmp	x9, x10
   413cc:	orr	w20, w8, w24
   413d0:	b.eq	41584 <__gmpfr_mpfr_get_sj@@Base+0x298>  // b.none
   413d4:	mov	x10, #0x1                   	// #1
   413d8:	lsl	x8, x9, #32
   413dc:	movk	x10, #0x40, lsl #32
   413e0:	cmp	x8, x10
   413e4:	b.ge	416e0 <__gmpfr_mpfr_get_sj@@Base+0x3f4>  // b.tcont
   413e8:	ldr	w10, [sp, #8]
   413ec:	mov	x11, #0x1                   	// #1
   413f0:	movk	x11, #0x3f, lsl #32
   413f4:	cmp	x8, x11
   413f8:	b.ge	416fc <__gmpfr_mpfr_get_sj@@Base+0x410>  // b.tcont
   413fc:	ldr	x11, [sp]
   41400:	ldr	x8, [sp, #24]
   41404:	sub	x12, x11, #0x1
   41408:	add	x11, x11, #0x3e
   4140c:	cmp	x12, #0x0
   41410:	csel	x11, x11, x12, lt  // lt = tstop
   41414:	asr	x11, x11, #6
   41418:	cmp	w11, #0x0
   4141c:	cset	w12, ge  // ge = tcont
   41420:	cmp	w9, #0x0
   41424:	cset	w13, gt
   41428:	cmp	w10, #0x0
   4142c:	and	w10, w13, w12
   41430:	b.le	414dc <__gmpfr_mpfr_get_sj@@Base+0x1f0>
   41434:	cbz	w10, 41584 <__gmpfr_mpfr_get_sj@@Base+0x298>
   41438:	cmp	w9, #0x40
   4143c:	mov	w12, #0x40                  	// #64
   41440:	csel	w10, w9, w12, lt  // lt = tstop
   41444:	sub	w10, w9, w10
   41448:	add	w10, w10, #0x3f
   4144c:	and	x18, x11, #0xffffffff
   41450:	lsr	w10, w10, #6
   41454:	cmp	x10, x18
   41458:	csel	x10, x10, x18, cc  // cc = lo, ul, last
   4145c:	cbz	x10, 415e8 <__gmpfr_mpfr_get_sj@@Base+0x2fc>
   41460:	add	x15, x10, #0x1
   41464:	mov	w10, #0x80                  	// #128
   41468:	and	x16, x15, #0x7fffffe
   4146c:	mov	x13, xzr
   41470:	mov	x14, xzr
   41474:	sub	w17, w10, w9
   41478:	sub	x11, x18, x16
   4147c:	sub	w10, w9, w16, lsl #6
   41480:	add	x18, x8, x18, lsl #3
   41484:	mov	x0, x16
   41488:	ldp	x3, x2, [x18, #-8]
   4148c:	sub	w1, w9, #0x40
   41490:	cmp	w9, #0x3f
   41494:	sub	x0, x0, #0x2
   41498:	lsl	x4, x2, x9
   4149c:	lsr	x2, x2, x17
   414a0:	lsl	x5, x3, x9
   414a4:	lsr	x3, x3, x17
   414a8:	csel	x2, x4, x2, gt
   414ac:	cmp	w1, #0x3f
   414b0:	csel	x1, x5, x3, gt
   414b4:	sub	w9, w9, #0x80
   414b8:	add	w17, w17, #0x80
   414bc:	add	x13, x2, x13
   414c0:	add	x14, x1, x14
   414c4:	sub	x18, x18, #0x10
   414c8:	cbnz	x0, 41488 <__gmpfr_mpfr_get_sj@@Base+0x19c>
   414cc:	cmp	x15, x16
   414d0:	add	x19, x14, x13
   414d4:	b.ne	415f4 <__gmpfr_mpfr_get_sj@@Base+0x308>  // b.any
   414d8:	b	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>
   414dc:	cbz	w10, 41584 <__gmpfr_mpfr_get_sj@@Base+0x298>
   414e0:	cmp	w9, #0x40
   414e4:	mov	w12, #0x40                  	// #64
   414e8:	csel	w10, w9, w12, lt  // lt = tstop
   414ec:	sub	w10, w9, w10
   414f0:	add	w10, w10, #0x3f
   414f4:	and	x18, x11, #0xffffffff
   414f8:	lsr	w10, w10, #6
   414fc:	cmp	x10, x18
   41500:	csel	x10, x10, x18, cc  // cc = lo, ul, last
   41504:	cbz	x10, 41630 <__gmpfr_mpfr_get_sj@@Base+0x344>
   41508:	add	x15, x10, #0x1
   4150c:	mov	w10, #0x80                  	// #128
   41510:	and	x16, x15, #0x7fffffe
   41514:	mov	x13, xzr
   41518:	mov	x14, xzr
   4151c:	sub	w17, w10, w9
   41520:	sub	x11, x18, x16
   41524:	sub	w10, w9, w16, lsl #6
   41528:	add	x18, x8, x18, lsl #3
   4152c:	mov	x0, x16
   41530:	ldp	x3, x2, [x18, #-8]
   41534:	sub	w1, w9, #0x40
   41538:	cmp	w9, #0x3f
   4153c:	sub	x0, x0, #0x2
   41540:	lsl	x4, x2, x9
   41544:	lsr	x2, x2, x17
   41548:	lsl	x5, x3, x9
   4154c:	lsr	x3, x3, x17
   41550:	csel	x2, x4, x2, gt
   41554:	cmp	w1, #0x3f
   41558:	csel	x1, x5, x3, gt
   4155c:	sub	w9, w9, #0x80
   41560:	add	w17, w17, #0x80
   41564:	sub	x13, x13, x2
   41568:	sub	x14, x14, x1
   4156c:	sub	x18, x18, #0x10
   41570:	cbnz	x0, 41530 <__gmpfr_mpfr_get_sj@@Base+0x244>
   41574:	cmp	x15, x16
   41578:	add	x19, x14, x13
   4157c:	b.ne	4163c <__gmpfr_mpfr_get_sj@@Base+0x350>  // b.any
   41580:	b	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>
   41584:	mov	x19, xzr
   41588:	mov	x0, sp
   4158c:	bl	c0b0 <mpfr_clear@plt>
   41590:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41594:	ldr	x1, [x0, #2640]
   41598:	add	x0, x0, #0xa50
   4159c:	blr	x1
   415a0:	str	w20, [x21, x0]
   415a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   415a8:	ldr	x1, [x0, #2576]
   415ac:	add	x0, x0, #0xa10
   415b0:	blr	x1
   415b4:	str	x22, [x21, x0]
   415b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   415bc:	ldr	x1, [x0, #2608]
   415c0:	add	x0, x0, #0xa30
   415c4:	blr	x1
   415c8:	str	x23, [x21, x0]
   415cc:	mov	x0, x19
   415d0:	ldp	x20, x19, [sp, #80]
   415d4:	ldp	x22, x21, [sp, #64]
   415d8:	ldp	x24, x23, [sp, #48]
   415dc:	ldp	x29, x30, [sp, #32]
   415e0:	add	sp, sp, #0x60
   415e4:	ret
   415e8:	mov	x19, xzr
   415ec:	mov	x11, x18
   415f0:	mov	w10, w9
   415f4:	sub	w9, w12, w10
   415f8:	ldr	x12, [x8, x11, lsl #3]
   415fc:	cmp	w10, #0x3f
   41600:	lsl	x13, x12, x10
   41604:	lsr	x12, x12, x9
   41608:	csel	x12, x13, x12, gt
   4160c:	cmp	w10, #0x41
   41610:	add	x19, x12, x19
   41614:	b.lt	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>  // b.tstop
   41618:	sub	w10, w10, #0x40
   4161c:	cmp	x11, #0x0
   41620:	sub	x11, x11, #0x1
   41624:	add	w9, w9, #0x40
   41628:	b.gt	415f8 <__gmpfr_mpfr_get_sj@@Base+0x30c>
   4162c:	b	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>
   41630:	mov	x19, xzr
   41634:	mov	x11, x18
   41638:	mov	w10, w9
   4163c:	sub	w9, w12, w10
   41640:	ldr	x12, [x8, x11, lsl #3]
   41644:	cmp	w10, #0x3f
   41648:	lsl	x13, x12, x10
   4164c:	lsr	x12, x12, x9
   41650:	csel	x12, x13, x12, gt
   41654:	cmp	w10, #0x41
   41658:	sub	x19, x19, x12
   4165c:	b.lt	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>  // b.tstop
   41660:	sub	w10, w10, #0x40
   41664:	cmp	x11, #0x0
   41668:	sub	x11, x11, #0x1
   4166c:	add	w9, w9, #0x40
   41670:	b.gt	41640 <__gmpfr_mpfr_get_sj@@Base+0x354>
   41674:	b	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>
   41678:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4167c:	ldr	x1, [x0, #2640]
   41680:	add	x0, x0, #0xa50
   41684:	blr	x1
   41688:	mrs	x8, tpidr_el0
   4168c:	ldr	w9, [x8, x0]
   41690:	orr	w9, w9, #0x10
   41694:	str	w9, [x8, x0]
   41698:	ldr	x8, [x19, #16]
   4169c:	mov	x9, #0x2                   	// #2
   416a0:	movk	x9, #0x8000, lsl #48
   416a4:	cmp	x8, x9
   416a8:	b.eq	41324 <__gmpfr_mpfr_get_sj@@Base+0x38>  // b.none
   416ac:	ldr	w8, [x19, #8]
   416b0:	cmp	w8, #0x0
   416b4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   416b8:	cinv	x19, x8, ge  // ge = tcont
   416bc:	b	415cc <__gmpfr_mpfr_get_sj@@Base+0x2e0>
   416c0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   416c4:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   416c8:	add	x0, x0, #0x187
   416cc:	add	x2, x2, #0x190
   416d0:	mov	w1, #0x3e                  	// #62
   416d4:	bl	cb20 <mpfr_assert_fail@plt>
   416d8:	ldr	x9, [sp, #16]
   416dc:	b	413b0 <__gmpfr_mpfr_get_sj@@Base+0xc4>
   416e0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   416e4:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   416e8:	add	x0, x0, #0x187
   416ec:	add	x2, x2, #0x207
   416f0:	mov	w1, #0x4b                  	// #75
   416f4:	bl	cb20 <mpfr_assert_fail@plt>
   416f8:	ldr	w10, [sp, #8]
   416fc:	tbz	w10, #31, 41714 <__gmpfr_mpfr_get_sj@@Base+0x428>
   41700:	mov	x0, sp
   41704:	bl	bf50 <mpfr_powerof2_raw@plt>
   41708:	cbz	w0, 41714 <__gmpfr_mpfr_get_sj@@Base+0x428>
   4170c:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   41710:	b	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>
   41714:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   41718:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4171c:	add	x0, x0, #0x187
   41720:	add	x2, x2, #0x224
   41724:	mov	w1, #0x53                  	// #83
   41728:	bl	cb20 <mpfr_assert_fail@plt>
   4172c:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   41730:	b	41588 <__gmpfr_mpfr_get_sj@@Base+0x29c>

0000000000041734 <__gmpfr_mpfr_get_uj@@Base>:
   41734:	sub	sp, sp, #0x60
   41738:	stp	x29, x30, [sp, #32]
   4173c:	stp	x24, x23, [sp, #48]
   41740:	stp	x22, x21, [sp, #64]
   41744:	stp	x20, x19, [sp, #80]
   41748:	add	x29, sp, #0x20
   4174c:	mov	w20, w1
   41750:	mov	x19, x0
   41754:	bl	c050 <mpfr_fits_uintmax_p@plt>
   41758:	cbz	w0, 4197c <__gmpfr_mpfr_get_uj@@Base+0x248>
   4175c:	ldr	x8, [x19, #16]
   41760:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   41764:	cmp	x8, x9
   41768:	b.ne	41774 <__gmpfr_mpfr_get_uj@@Base+0x40>  // b.any
   4176c:	mov	x19, xzr
   41770:	b	41960 <__gmpfr_mpfr_get_uj@@Base+0x22c>
   41774:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41778:	ldr	x1, [x0, #2640]
   4177c:	add	x0, x0, #0xa50
   41780:	blr	x1
   41784:	mrs	x21, tpidr_el0
   41788:	ldr	w24, [x21, x0]
   4178c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41790:	ldr	x1, [x0, #2576]
   41794:	add	x0, x0, #0xa10
   41798:	blr	x1
   4179c:	ldr	x22, [x21, x0]
   417a0:	mov	x8, x0
   417a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   417a8:	ldr	x1, [x0, #2608]
   417ac:	add	x0, x0, #0xa30
   417b0:	blr	x1
   417b4:	ldr	x23, [x21, x0]
   417b8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   417bc:	str	x9, [x21, x8]
   417c0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   417c4:	str	x8, [x21, x0]
   417c8:	mov	x0, sp
   417cc:	mov	w1, #0x40                  	// #64
   417d0:	bl	ca60 <mpfr_init2@plt>
   417d4:	mov	x0, sp
   417d8:	mov	x1, x19
   417dc:	mov	w2, w20
   417e0:	bl	c300 <mpfr_rint@plt>
   417e4:	ldr	x9, [sp, #16]
   417e8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   417ec:	orr	x8, x9, #0x1
   417f0:	cmp	x8, x10
   417f4:	b.eq	419c4 <__gmpfr_mpfr_get_uj@@Base+0x290>  // b.none
   417f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   417fc:	ldr	x1, [x0, #2640]
   41800:	add	x0, x0, #0xa50
   41804:	blr	x1
   41808:	ldr	w8, [x21, x0]
   4180c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   41810:	cmp	x9, x10
   41814:	orr	w20, w8, w24
   41818:	b.eq	418d4 <__gmpfr_mpfr_get_uj@@Base+0x1a0>  // b.none
   4181c:	ldr	w8, [sp, #8]
   41820:	cmp	w8, #0x0
   41824:	b.le	419e4 <__gmpfr_mpfr_get_uj@@Base+0x2b0>
   41828:	ldr	x8, [sp, #24]
   4182c:	cmp	w9, #0x41
   41830:	b.ge	41a08 <__gmpfr_mpfr_get_uj@@Base+0x2d4>  // b.tcont
   41834:	ldr	x10, [sp]
   41838:	sub	x11, x10, #0x1
   4183c:	add	x10, x10, #0x3e
   41840:	cmp	x11, #0x0
   41844:	csel	x10, x10, x11, lt  // lt = tstop
   41848:	asr	x10, x10, #6
   4184c:	tbnz	w10, #31, 418d4 <__gmpfr_mpfr_get_uj@@Base+0x1a0>
   41850:	ands	x17, x10, #0xffffffff
   41854:	b.eq	418dc <__gmpfr_mpfr_get_uj@@Base+0x1a8>  // b.none
   41858:	add	x14, x17, #0x1
   4185c:	mov	w10, #0x80                  	// #128
   41860:	and	x15, x14, #0x1fffffffe
   41864:	mov	x12, xzr
   41868:	mov	x13, xzr
   4186c:	sub	w16, w10, w9
   41870:	sub	x10, x17, x15
   41874:	sub	w11, w9, w15, lsl #6
   41878:	add	x17, x8, x17, lsl #3
   4187c:	mov	x18, x15
   41880:	ldp	x2, x1, [x17, #-8]
   41884:	sub	w0, w9, #0x40
   41888:	cmp	w9, #0x3f
   4188c:	sub	x18, x18, #0x2
   41890:	lsl	x3, x1, x9
   41894:	lsr	x1, x1, x16
   41898:	lsl	x4, x2, x9
   4189c:	lsr	x2, x2, x16
   418a0:	csel	x1, x3, x1, gt
   418a4:	cmp	w0, #0x3f
   418a8:	csel	x0, x4, x2, gt
   418ac:	sub	w9, w9, #0x80
   418b0:	add	w16, w16, #0x80
   418b4:	add	x12, x1, x12
   418b8:	add	x13, x0, x13
   418bc:	sub	x17, x17, #0x10
   418c0:	cbnz	x18, 41880 <__gmpfr_mpfr_get_uj@@Base+0x14c>
   418c4:	cmp	x14, x15
   418c8:	add	x19, x13, x12
   418cc:	b.ne	418e8 <__gmpfr_mpfr_get_uj@@Base+0x1b4>  // b.any
   418d0:	b	4191c <__gmpfr_mpfr_get_uj@@Base+0x1e8>
   418d4:	mov	x19, xzr
   418d8:	b	4191c <__gmpfr_mpfr_get_uj@@Base+0x1e8>
   418dc:	mov	x19, xzr
   418e0:	mov	x10, x17
   418e4:	mov	w11, w9
   418e8:	mov	w9, #0x40                  	// #64
   418ec:	sub	w9, w9, w11
   418f0:	ldr	x12, [x8, x10, lsl #3]
   418f4:	cmp	w11, #0x3f
   418f8:	lsl	x13, x12, x11
   418fc:	lsr	x12, x12, x9
   41900:	csel	x12, x13, x12, gt
   41904:	sub	w11, w11, #0x40
   41908:	cmp	x10, #0x0
   4190c:	sub	x10, x10, #0x1
   41910:	add	x19, x12, x19
   41914:	add	w9, w9, #0x40
   41918:	b.gt	418f0 <__gmpfr_mpfr_get_uj@@Base+0x1bc>
   4191c:	mov	x0, sp
   41920:	bl	c0b0 <mpfr_clear@plt>
   41924:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41928:	ldr	x1, [x0, #2640]
   4192c:	add	x0, x0, #0xa50
   41930:	blr	x1
   41934:	str	w20, [x21, x0]
   41938:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4193c:	ldr	x1, [x0, #2576]
   41940:	add	x0, x0, #0xa10
   41944:	blr	x1
   41948:	str	x22, [x21, x0]
   4194c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41950:	ldr	x1, [x0, #2608]
   41954:	add	x0, x0, #0xa30
   41958:	blr	x1
   4195c:	str	x23, [x21, x0]
   41960:	mov	x0, x19
   41964:	ldp	x20, x19, [sp, #80]
   41968:	ldp	x22, x21, [sp, #64]
   4196c:	ldp	x24, x23, [sp, #48]
   41970:	ldp	x29, x30, [sp, #32]
   41974:	add	sp, sp, #0x60
   41978:	ret
   4197c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41980:	ldr	x1, [x0, #2640]
   41984:	add	x0, x0, #0xa50
   41988:	blr	x1
   4198c:	mrs	x8, tpidr_el0
   41990:	ldr	w9, [x8, x0]
   41994:	orr	w9, w9, #0x10
   41998:	str	w9, [x8, x0]
   4199c:	ldr	x8, [x19, #16]
   419a0:	mov	x9, #0x2                   	// #2
   419a4:	movk	x9, #0x8000, lsl #48
   419a8:	cmp	x8, x9
   419ac:	b.eq	4176c <__gmpfr_mpfr_get_uj@@Base+0x38>  // b.none
   419b0:	ldr	w8, [x19, #8]
   419b4:	mov	w9, #0xffffffff            	// #-1
   419b8:	eor	w8, w9, w8, asr #31
   419bc:	sxtw	x19, w8
   419c0:	b	41960 <__gmpfr_mpfr_get_uj@@Base+0x22c>
   419c4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   419c8:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   419cc:	add	x0, x0, #0x255
   419d0:	add	x2, x2, #0x190
   419d4:	mov	w1, #0x3c                  	// #60
   419d8:	bl	cb20 <mpfr_assert_fail@plt>
   419dc:	ldr	x9, [sp, #16]
   419e0:	b	417f8 <__gmpfr_mpfr_get_uj@@Base+0xc4>
   419e4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   419e8:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   419ec:	add	x0, x0, #0x255
   419f0:	add	x2, x2, #0x25e
   419f4:	mov	w1, #0x47                  	// #71
   419f8:	bl	cb20 <mpfr_assert_fail@plt>
   419fc:	ldp	x9, x8, [sp, #16]
   41a00:	cmp	w9, #0x41
   41a04:	b.lt	41834 <__gmpfr_mpfr_get_uj@@Base+0x100>  // b.tstop
   41a08:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   41a0c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   41a10:	add	x0, x0, #0x255
   41a14:	add	x2, x2, #0x276
   41a18:	mov	w1, #0x4a                  	// #74
   41a1c:	mov	x19, x8
   41a20:	mov	x24, x9
   41a24:	bl	cb20 <mpfr_assert_fail@plt>
   41a28:	mov	x9, x24
   41a2c:	mov	x8, x19
   41a30:	b	41834 <__gmpfr_mpfr_get_uj@@Base+0x100>

0000000000041a34 <mpfr_get_z@@Base>:
   41a34:	sub	sp, sp, #0x70
   41a38:	stp	x29, x30, [sp, #32]
   41a3c:	stp	x26, x25, [sp, #48]
   41a40:	stp	x24, x23, [sp, #64]
   41a44:	stp	x22, x21, [sp, #80]
   41a48:	stp	x20, x19, [sp, #96]
   41a4c:	ldr	x26, [x1, #16]
   41a50:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   41a54:	mov	x19, x0
   41a58:	add	x29, sp, #0x20
   41a5c:	cmp	x26, x8
   41a60:	b.le	41bdc <mpfr_get_z@@Base+0x1a8>
   41a64:	mov	w20, w2
   41a68:	mov	x21, x1
   41a6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41a70:	ldr	x1, [x0, #2640]
   41a74:	add	x0, x0, #0xa50
   41a78:	blr	x1
   41a7c:	mrs	x22, tpidr_el0
   41a80:	ldr	w25, [x22, x0]
   41a84:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41a88:	ldr	x1, [x0, #2576]
   41a8c:	add	x0, x0, #0xa10
   41a90:	blr	x1
   41a94:	ldr	x23, [x22, x0]
   41a98:	mov	x8, x0
   41a9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41aa0:	ldr	x1, [x0, #2608]
   41aa4:	add	x0, x0, #0xa30
   41aa8:	blr	x1
   41aac:	ldr	x24, [x22, x0]
   41ab0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   41ab4:	str	x9, [x22, x8]
   41ab8:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   41abc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   41ac0:	cmp	x26, x8
   41ac4:	str	x10, [x22, x0]
   41ac8:	b.ge	41bfc <mpfr_get_z@@Base+0x1c8>  // b.tcont
   41acc:	cmp	x26, #0x1
   41ad0:	csinc	x1, x26, xzr, gt
   41ad4:	mov	x0, sp
   41ad8:	bl	ca60 <mpfr_init2@plt>
   41adc:	mov	x0, sp
   41ae0:	mov	x1, x21
   41ae4:	mov	w2, w20
   41ae8:	bl	c300 <mpfr_rint@plt>
   41aec:	mov	w20, w0
   41af0:	cmp	w0, #0x1
   41af4:	b.eq	41b00 <mpfr_get_z@@Base+0xcc>  // b.none
   41af8:	cmn	w20, #0x1
   41afc:	b.ne	41b18 <mpfr_get_z@@Base+0xe4>  // b.any
   41b00:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   41b04:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   41b08:	add	x0, x0, #0x28f
   41b0c:	add	x2, x2, #0x2dc
   41b10:	mov	w1, #0x35                  	// #53
   41b14:	bl	cb20 <mpfr_assert_fail@plt>
   41b18:	ldr	x8, [sp, #16]
   41b1c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   41b20:	orr	x8, x8, #0x1
   41b24:	cmp	x8, x9
   41b28:	b.eq	41c18 <mpfr_get_z@@Base+0x1e4>  // b.none
   41b2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41b30:	ldr	x1, [x0, #2640]
   41b34:	add	x0, x0, #0xa50
   41b38:	blr	x1
   41b3c:	ldr	w8, [x22, x0]
   41b40:	mov	x1, sp
   41b44:	mov	x0, x19
   41b48:	orr	w21, w8, w25
   41b4c:	bl	caa0 <mpfr_get_z_2exp@plt>
   41b50:	mov	x2, x0
   41b54:	tbnz	x0, #63, 41b68 <mpfr_get_z@@Base+0x134>
   41b58:	mov	x0, x19
   41b5c:	mov	x1, x19
   41b60:	bl	c230 <__gmpz_mul_2exp@plt>
   41b64:	b	41b78 <mpfr_get_z@@Base+0x144>
   41b68:	neg	x2, x2
   41b6c:	mov	x0, x19
   41b70:	mov	x1, x19
   41b74:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   41b78:	mov	x0, sp
   41b7c:	bl	c0b0 <mpfr_clear@plt>
   41b80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41b84:	ldr	x1, [x0, #2640]
   41b88:	add	x0, x0, #0xa50
   41b8c:	blr	x1
   41b90:	str	w21, [x22, x0]
   41b94:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41b98:	ldr	x1, [x0, #2576]
   41b9c:	add	x0, x0, #0xa10
   41ba0:	blr	x1
   41ba4:	str	x23, [x22, x0]
   41ba8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41bac:	ldr	x1, [x0, #2608]
   41bb0:	add	x0, x0, #0xa30
   41bb4:	blr	x1
   41bb8:	str	x24, [x22, x0]
   41bbc:	mov	w0, w20
   41bc0:	ldp	x20, x19, [sp, #96]
   41bc4:	ldp	x22, x21, [sp, #80]
   41bc8:	ldp	x24, x23, [sp, #64]
   41bcc:	ldp	x26, x25, [sp, #48]
   41bd0:	ldp	x29, x30, [sp, #32]
   41bd4:	add	sp, sp, #0x70
   41bd8:	ret
   41bdc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   41be0:	cmp	x26, x8
   41be4:	b.ne	41c34 <mpfr_get_z@@Base+0x200>  // b.any
   41be8:	mov	x0, x19
   41bec:	mov	x1, xzr
   41bf0:	bl	bd00 <__gmpz_set_ui@plt>
   41bf4:	mov	w20, wzr
   41bf8:	b	41bbc <mpfr_get_z@@Base+0x188>
   41bfc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   41c00:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   41c04:	add	x0, x0, #0x28f
   41c08:	add	x2, x2, #0x297
   41c0c:	mov	w1, #0x31                  	// #49
   41c10:	bl	cb20 <mpfr_assert_fail@plt>
   41c14:	b	41acc <mpfr_get_z@@Base+0x98>
   41c18:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   41c1c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   41c20:	add	x0, x0, #0x28f
   41c24:	add	x2, x2, #0x2f4
   41c28:	mov	w1, #0x37                  	// #55
   41c2c:	bl	cb20 <mpfr_assert_fail@plt>
   41c30:	b	41b2c <mpfr_get_z@@Base+0xf8>
   41c34:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41c38:	ldr	x1, [x0, #2640]
   41c3c:	add	x0, x0, #0xa50
   41c40:	blr	x1
   41c44:	mrs	x8, tpidr_el0
   41c48:	ldr	w9, [x8, x0]
   41c4c:	orr	w9, w9, #0x10
   41c50:	str	w9, [x8, x0]
   41c54:	b	41be8 <mpfr_get_z@@Base+0x1b4>

0000000000041c58 <mpfr_zero_p@@Base>:
   41c58:	ldr	x8, [x0, #16]
   41c5c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   41c60:	cmp	x8, x9
   41c64:	cset	w0, eq  // eq = none
   41c68:	ret

0000000000041c6c <mpfr_clear_cache@@Base>:
   41c6c:	stp	x29, x30, [sp, #-32]!
   41c70:	ldr	x8, [x0]
   41c74:	str	x19, [sp, #16]
   41c78:	mov	x29, sp
   41c7c:	cbnz	x8, 41c8c <mpfr_clear_cache@@Base+0x20>
   41c80:	ldr	x19, [sp, #16]
   41c84:	ldp	x29, x30, [sp], #32
   41c88:	ret
   41c8c:	mov	x19, x0
   41c90:	bl	c0b0 <mpfr_clear@plt>
   41c94:	str	xzr, [x19]
   41c98:	ldr	x19, [sp, #16]
   41c9c:	ldp	x29, x30, [sp], #32
   41ca0:	ret

0000000000041ca4 <mpfr_cache@@Base>:
   41ca4:	stp	x29, x30, [sp, #-96]!
   41ca8:	stp	x28, x27, [sp, #16]
   41cac:	stp	x26, x25, [sp, #32]
   41cb0:	stp	x24, x23, [sp, #48]
   41cb4:	stp	x22, x21, [sp, #64]
   41cb8:	stp	x20, x19, [sp, #80]
   41cbc:	ldr	x22, [x0]
   41cc0:	mov	x29, sp
   41cc4:	mov	w19, w2
   41cc8:	mov	x20, x0
   41ccc:	mov	x21, x1
   41cd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41cd4:	ldr	x1, [x0, #2640]
   41cd8:	add	x0, x0, #0xa50
   41cdc:	blr	x1
   41ce0:	mrs	x25, tpidr_el0
   41ce4:	ldr	w26, [x25, x0]
   41ce8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41cec:	ldr	x1, [x0, #2576]
   41cf0:	add	x0, x0, #0xa10
   41cf4:	blr	x1
   41cf8:	ldr	x27, [x25, x0]
   41cfc:	mov	x8, x0
   41d00:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41d04:	ldr	x1, [x0, #2608]
   41d08:	add	x0, x0, #0xa30
   41d0c:	blr	x1
   41d10:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   41d14:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   41d18:	ldr	x28, [x25, x0]
   41d1c:	str	x9, [x25, x8]
   41d20:	str	x10, [x25, x0]
   41d24:	ldr	x24, [x21]
   41d28:	cmp	x22, x24
   41d2c:	b.gt	42150 <mpfr_cache@@Base+0x4ac>
   41d30:	ldr	w22, [x21, #8]
   41d34:	cmp	w22, #0x0
   41d38:	b.le	421a0 <mpfr_cache@@Base+0x4fc>
   41d3c:	ldr	x9, [x21, #16]
   41d40:	ldr	x13, [x20]
   41d44:	sub	x8, x24, #0x1
   41d48:	add	x10, x24, #0x3e
   41d4c:	cmp	x8, #0x0
   41d50:	str	x9, [x20, #16]
   41d54:	sub	x9, x13, #0x1
   41d58:	ldr	x23, [x20, #24]
   41d5c:	csel	x8, x10, x8, lt  // lt = tstop
   41d60:	add	x10, x13, #0x3e
   41d64:	cmp	x9, #0x0
   41d68:	csel	x9, x10, x9, lt  // lt = tstop
   41d6c:	asr	x8, x8, #6
   41d70:	asr	x9, x9, #6
   41d74:	add	x16, x8, #0x1
   41d78:	cmp	x13, x24
   41d7c:	add	x11, x9, #0x1
   41d80:	str	w22, [x20, #8]
   41d84:	b.ge	421c0 <mpfr_cache@@Base+0x51c>  // b.tcont
   41d88:	ldr	x10, [x21, #24]
   41d8c:	neg	w12, w13
   41d90:	ands	x14, x12, #0x3f
   41d94:	mvn	x15, x9
   41d98:	add	x12, x10, x16, lsl #3
   41d9c:	add	x1, x12, x15, lsl #3
   41da0:	b.eq	42224 <mpfr_cache@@Base+0x580>  // b.none
   41da4:	ldr	x15, [x1]
   41da8:	sub	x14, x14, #0x1
   41dac:	mov	w17, #0x1                   	// #1
   41db0:	lsl	x17, x17, x14
   41db4:	sub	x18, x17, #0x1
   41db8:	and	x14, x15, x17
   41dbc:	and	x15, x15, x18
   41dc0:	cbz	w19, 41dc8 <mpfr_cache@@Base+0x124>
   41dc4:	cbnz	x14, 41df0 <mpfr_cache@@Base+0x14c>
   41dc8:	cbnz	x15, 41df0 <mpfr_cache@@Base+0x14c>
   41dcc:	sub	x16, x16, x11
   41dd0:	cbz	x16, 41df0 <mpfr_cache@@Base+0x14c>
   41dd4:	mvn	x15, x9
   41dd8:	add	x16, x15, x8
   41ddc:	ldr	x15, [x10, x16, lsl #3]
   41de0:	subs	x16, x16, #0x1
   41de4:	cset	w18, cs  // cs = hs, nlast
   41de8:	cbnz	x15, 41df0 <mpfr_cache@@Base+0x14c>
   41dec:	tbnz	w18, #0, 41ddc <mpfr_cache@@Base+0x138>
   41df0:	lsl	x24, x17, #1
   41df4:	cmp	w19, #0x5
   41df8:	b.eq	41f4c <mpfr_cache@@Base+0x2a8>  // b.none
   41dfc:	cmp	w19, #0x1
   41e00:	b.eq	41e38 <mpfr_cache@@Base+0x194>  // b.none
   41e04:	cbnz	w19, 41e2c <mpfr_cache@@Base+0x188>
   41e08:	cbz	x14, 41e38 <mpfr_cache@@Base+0x194>
   41e0c:	cbnz	x15, 41e58 <mpfr_cache@@Base+0x1b4>
   41e10:	ldr	w14, [x21, #32]
   41e14:	cbz	w14, 42288 <mpfr_cache@@Base+0x5e4>
   41e18:	tbnz	w14, #31, 41e58 <mpfr_cache@@Base+0x1b4>
   41e1c:	neg	w22, w22
   41e20:	cmp	x23, x1
   41e24:	b.ne	41f58 <mpfr_cache@@Base+0x2b4>  // b.any
   41e28:	b	41f64 <mpfr_cache@@Base+0x2c0>
   41e2c:	add	w16, w19, w22, lsr #31
   41e30:	cmp	w16, #0x3
   41e34:	b.ne	41e50 <mpfr_cache@@Base+0x1ac>  // b.any
   41e38:	orr	x8, x15, x14
   41e3c:	cmp	x8, #0x0
   41e40:	csneg	w22, wzr, w22, eq  // eq = none
   41e44:	cmp	x23, x1
   41e48:	b.ne	41f58 <mpfr_cache@@Base+0x2b4>  // b.any
   41e4c:	b	41f64 <mpfr_cache@@Base+0x2c0>
   41e50:	orr	x14, x15, x14
   41e54:	cbz	x14, 41f4c <mpfr_cache@@Base+0x2a8>
   41e58:	ldr	x14, [x1]
   41e5c:	adds	x14, x14, x24
   41e60:	str	x14, [x23]
   41e64:	b.cc	42070 <mpfr_cache@@Base+0x3cc>  // b.lo, b.ul, b.last
   41e68:	mov	x17, xzr
   41e6c:	mov	x15, xzr
   41e70:	mov	x13, x9
   41e74:	add	x14, x15, #0x1
   41e78:	cmp	x14, x9
   41e7c:	b.gt	420d4 <mpfr_cache@@Base+0x430>
   41e80:	lsl	x15, x15, #3
   41e84:	add	x16, x1, x15
   41e88:	ldr	x16, [x16, #8]
   41e8c:	add	x15, x23, x15
   41e90:	sub	x17, x17, #0x8
   41e94:	sub	x13, x13, #0x1
   41e98:	adds	x16, x16, #0x1
   41e9c:	str	x16, [x15, #8]
   41ea0:	mov	x15, x14
   41ea4:	b.cs	41e74 <mpfr_cache@@Base+0x1d0>  // b.hs, b.nlast
   41ea8:	cmp	x1, x23
   41eac:	b.eq	41f64 <mpfr_cache@@Base+0x2c0>  // b.none
   41eb0:	cmp	x14, x9
   41eb4:	b.ge	41f64 <mpfr_cache@@Base+0x2c0>  // b.tcont
   41eb8:	sub	x15, x9, x14
   41ebc:	cmp	x15, #0x4
   41ec0:	add	x16, x14, #0x1
   41ec4:	b.cc	41f28 <mpfr_cache@@Base+0x284>  // b.lo, b.ul, b.last
   41ec8:	sub	x18, x23, x17
   41ecc:	add	x0, x18, #0x8
   41ed0:	cmp	x0, x12
   41ed4:	sub	x12, x1, x17
   41ed8:	b.cs	41eec <mpfr_cache@@Base+0x248>  // b.hs, b.nlast
   41edc:	add	x11, x23, x11, lsl #3
   41ee0:	add	x17, x12, #0x8
   41ee4:	cmp	x17, x11
   41ee8:	b.cc	41f28 <mpfr_cache@@Base+0x284>  // b.lo, b.ul, b.last
   41eec:	and	x13, x13, #0xfffffffffffffffc
   41ef0:	and	x17, x15, #0xfffffffffffffffc
   41ef4:	add	x13, x13, x14
   41ef8:	add	x11, x18, #0x18
   41efc:	add	x12, x12, #0x18
   41f00:	add	x16, x13, #0x1
   41f04:	mov	x13, x17
   41f08:	ldp	q0, q1, [x12, #-16]
   41f0c:	add	x12, x12, #0x20
   41f10:	subs	x13, x13, #0x4
   41f14:	stp	q0, q1, [x11, #-16]
   41f18:	add	x11, x11, #0x20
   41f1c:	b.ne	41f08 <mpfr_cache@@Base+0x264>  // b.any
   41f20:	cmp	x15, x17
   41f24:	b.eq	41f64 <mpfr_cache@@Base+0x2c0>  // b.none
   41f28:	sub	x9, x16, x9
   41f2c:	add	x11, x23, x16, lsl #3
   41f30:	add	x8, x10, x8, lsl #3
   41f34:	ldr	x10, [x8, x9, lsl #3]
   41f38:	add	x9, x9, #0x1
   41f3c:	cmp	x9, #0x1
   41f40:	str	x10, [x11], #8
   41f44:	b.ne	41f34 <mpfr_cache@@Base+0x290>  // b.any
   41f48:	b	41f64 <mpfr_cache@@Base+0x2c0>
   41f4c:	mov	w22, wzr
   41f50:	cmp	x23, x1
   41f54:	b.eq	41f64 <mpfr_cache@@Base+0x2c0>  // b.none
   41f58:	lsl	x2, x11, #3
   41f5c:	mov	x0, x23
   41f60:	bl	ba70 <memcpy@plt>
   41f64:	ldr	x8, [x23]
   41f68:	neg	x9, x24
   41f6c:	and	x8, x8, x9
   41f70:	str	x8, [x23]
   41f74:	ldr	w21, [x21, #32]
   41f78:	cbz	w21, 41fe4 <mpfr_cache@@Base+0x340>
   41f7c:	sub	w8, w19, #0x1
   41f80:	cmp	w8, #0x3
   41f84:	b.hi	41fdc <mpfr_cache@@Base+0x338>  // b.pmore
   41f88:	adrp	x9, 64000 <mpfr_bases@@Base+0x758>
   41f8c:	add	x9, x9, #0x36b
   41f90:	adr	x10, 41fa0 <mpfr_cache@@Base+0x2fc>
   41f94:	ldrb	w11, [x9, x8]
   41f98:	add	x10, x10, x11, lsl #2
   41f9c:	br	x10
   41fa0:	cbnz	w22, 41fe4 <mpfr_cache@@Base+0x340>
   41fa4:	cmp	w21, #0x1
   41fa8:	mov	w22, w21
   41fac:	b.lt	41fe4 <mpfr_cache@@Base+0x340>  // b.tstop
   41fb0:	mov	x0, x20
   41fb4:	bl	be20 <mpfr_nextbelow@plt>
   41fb8:	neg	w22, w21
   41fbc:	b	41fe4 <mpfr_cache@@Base+0x340>
   41fc0:	cbnz	w22, 41fe4 <mpfr_cache@@Base+0x340>
   41fc4:	mov	w22, w21
   41fc8:	tbz	w21, #31, 41fe4 <mpfr_cache@@Base+0x340>
   41fcc:	mov	x0, x20
   41fd0:	bl	c160 <mpfr_nextabove@plt>
   41fd4:	neg	w22, w21
   41fd8:	b	41fe4 <mpfr_cache@@Base+0x340>
   41fdc:	cmp	w22, #0x0
   41fe0:	csel	w22, w21, w22, eq  // eq = none
   41fe4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41fe8:	ldr	x1, [x0, #2640]
   41fec:	add	x0, x0, #0xa50
   41ff0:	blr	x1
   41ff4:	str	w26, [x25, x0]
   41ff8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   41ffc:	ldr	x1, [x0, #2576]
   42000:	add	x0, x0, #0xa10
   42004:	blr	x1
   42008:	str	x27, [x25, x0]
   4200c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42010:	ldr	x1, [x0, #2608]
   42014:	add	x0, x0, #0xa30
   42018:	blr	x1
   4201c:	str	x28, [x25, x0]
   42020:	ldr	x8, [x20, #16]
   42024:	cmp	x8, x28
   42028:	b.gt	421fc <mpfr_cache@@Base+0x558>
   4202c:	cmp	x8, x27
   42030:	b.lt	421fc <mpfr_cache@@Base+0x558>  // b.tstop
   42034:	cbz	w22, 42050 <mpfr_cache@@Base+0x3ac>
   42038:	orr	w8, w26, #0x8
   4203c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42040:	ldr	x1, [x0, #2640]
   42044:	add	x0, x0, #0xa50
   42048:	blr	x1
   4204c:	str	w8, [x25, x0]
   42050:	mov	w0, w22
   42054:	ldp	x20, x19, [sp, #80]
   42058:	ldp	x22, x21, [sp, #64]
   4205c:	ldp	x24, x23, [sp, #48]
   42060:	ldp	x26, x25, [sp, #32]
   42064:	ldp	x28, x27, [sp, #16]
   42068:	ldp	x29, x30, [sp], #96
   4206c:	ret
   42070:	cmp	x13, #0x41
   42074:	b.lt	41f64 <mpfr_cache@@Base+0x2c0>  // b.tstop
   42078:	cmp	x1, x23
   4207c:	b.eq	41f64 <mpfr_cache@@Base+0x2c0>  // b.none
   42080:	cmp	x9, #0x4
   42084:	b.cc	420ac <mpfr_cache@@Base+0x408>  // b.lo, b.ul, b.last
   42088:	add	x13, x23, #0x8
   4208c:	sub	x14, x8, x9
   42090:	cmp	x13, x12
   42094:	add	x13, x10, x14, lsl #3
   42098:	b.cs	42118 <mpfr_cache@@Base+0x474>  // b.hs, b.nlast
   4209c:	add	x11, x23, x11, lsl #3
   420a0:	add	x12, x13, #0x8
   420a4:	cmp	x12, x11
   420a8:	b.cs	42118 <mpfr_cache@@Base+0x474>  // b.hs, b.nlast
   420ac:	mov	w11, #0x1                   	// #1
   420b0:	sub	x9, x11, x9
   420b4:	add	x11, x23, x11, lsl #3
   420b8:	add	x8, x10, x8, lsl #3
   420bc:	ldr	x10, [x8, x9, lsl #3]
   420c0:	add	x9, x9, #0x1
   420c4:	cmp	x9, #0x1
   420c8:	str	x10, [x11], #8
   420cc:	b.ne	420bc <mpfr_cache@@Base+0x418>  // b.any
   420d0:	b	41f64 <mpfr_cache@@Base+0x2c0>
   420d4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   420d8:	str	x8, [x23, x9, lsl #3]
   420dc:	ldr	x8, [x20, #16]
   420e0:	add	x9, x8, #0x1
   420e4:	str	x9, [x20, #16]
   420e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   420ec:	ldr	x1, [x0, #2608]
   420f0:	add	x0, x0, #0xa30
   420f4:	blr	x1
   420f8:	ldr	x9, [x25, x0]
   420fc:	cmp	x8, x9
   42100:	b.lt	41f64 <mpfr_cache@@Base+0x2c0>  // b.tstop
   42104:	mov	x0, x20
   42108:	mov	w1, w19
   4210c:	mov	w2, w22
   42110:	bl	bf90 <mpfr_overflow@plt>
   42114:	b	41f64 <mpfr_cache@@Base+0x2c0>
   42118:	and	x12, x9, #0xfffffffffffffffc
   4211c:	add	x13, x13, #0x18
   42120:	orr	x11, x12, #0x1
   42124:	add	x14, x23, #0x18
   42128:	mov	x15, x12
   4212c:	ldp	q0, q1, [x13, #-16]
   42130:	add	x13, x13, #0x20
   42134:	subs	x15, x15, #0x4
   42138:	stp	q0, q1, [x14, #-16]
   4213c:	add	x14, x14, #0x20
   42140:	b.ne	4212c <mpfr_cache@@Base+0x488>  // b.any
   42144:	cmp	x9, x12
   42148:	b.eq	41f64 <mpfr_cache@@Base+0x2c0>  // b.none
   4214c:	b	420b0 <mpfr_cache@@Base+0x40c>
   42150:	cbz	x24, 42274 <mpfr_cache@@Base+0x5d0>
   42154:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   42158:	movk	x8, #0x6667
   4215c:	smulh	x8, x24, x8
   42160:	asr	x9, x8, #2
   42164:	add	x8, x9, x8, lsr #63
   42168:	add	x8, x8, x24
   4216c:	cmp	x8, x22
   42170:	csel	x24, x22, x8, lt  // lt = tstop
   42174:	mov	x0, x21
   42178:	mov	x1, x24
   4217c:	bl	bf20 <mpfr_set_prec@plt>
   42180:	ldr	x8, [x21, #40]
   42184:	mov	x0, x21
   42188:	mov	w1, wzr
   4218c:	blr	x8
   42190:	str	w0, [x21, #32]
   42194:	ldr	w22, [x21, #8]
   42198:	cmp	w22, #0x0
   4219c:	b.gt	41d3c <mpfr_cache@@Base+0x98>
   421a0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   421a4:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   421a8:	add	x0, x0, #0x36f
   421ac:	add	x2, x2, #0x377
   421b0:	mov	w1, #0x76                  	// #118
   421b4:	bl	cb20 <mpfr_assert_fail@plt>
   421b8:	ldr	w22, [x21, #8]
   421bc:	b	41d3c <mpfr_cache@@Base+0x98>
   421c0:	ldr	x1, [x21, #24]
   421c4:	sub	x22, x11, x16
   421c8:	add	x0, x23, x22, lsl #3
   421cc:	cmp	x0, x1
   421d0:	b.eq	421dc <mpfr_cache@@Base+0x538>  // b.none
   421d4:	lsl	x2, x16, #3
   421d8:	bl	ba70 <memcpy@plt>
   421dc:	lsl	x2, x22, #3
   421e0:	mov	x0, x23
   421e4:	mov	w1, wzr
   421e8:	bl	c150 <memset@plt>
   421ec:	mov	w22, wzr
   421f0:	ldr	w21, [x21, #32]
   421f4:	cbnz	w21, 41f7c <mpfr_cache@@Base+0x2d8>
   421f8:	b	41fe4 <mpfr_cache@@Base+0x340>
   421fc:	mov	x0, x20
   42200:	mov	w1, w22
   42204:	mov	w2, w19
   42208:	ldp	x20, x19, [sp, #80]
   4220c:	ldp	x22, x21, [sp, #64]
   42210:	ldp	x24, x23, [sp, #48]
   42214:	ldp	x26, x25, [sp, #32]
   42218:	ldp	x28, x27, [sp, #16]
   4221c:	ldp	x29, x30, [sp], #96
   42220:	b	cb10 <mpfr_check_range@plt>
   42224:	ldur	x15, [x1, #-8]
   42228:	and	x14, x15, #0x8000000000000000
   4222c:	and	x15, x15, #0x7fffffffffffffff
   42230:	cbz	w19, 42240 <mpfr_cache@@Base+0x59c>
   42234:	cbz	x14, 42240 <mpfr_cache@@Base+0x59c>
   42238:	mov	w24, #0x1                   	// #1
   4223c:	b	41df4 <mpfr_cache@@Base+0x150>
   42240:	mov	w24, #0x1                   	// #1
   42244:	cbnz	x15, 41df4 <mpfr_cache@@Base+0x150>
   42248:	sub	x16, x8, x11
   4224c:	cbz	x16, 41df4 <mpfr_cache@@Base+0x150>
   42250:	sub	x15, x8, x9
   42254:	sub	x16, x15, #0x2
   42258:	mov	w24, #0x1                   	// #1
   4225c:	ldr	x15, [x10, x16, lsl #3]
   42260:	subs	x16, x16, #0x1
   42264:	cset	w17, cs  // cs = hs, nlast
   42268:	cbnz	x15, 41df4 <mpfr_cache@@Base+0x150>
   4226c:	tbnz	w17, #0, 4225c <mpfr_cache@@Base+0x5b8>
   42270:	b	41df4 <mpfr_cache@@Base+0x150>
   42274:	mov	x0, x21
   42278:	mov	x1, x22
   4227c:	bl	ca60 <mpfr_init2@plt>
   42280:	mov	x8, xzr
   42284:	b	4216c <mpfr_cache@@Base+0x4c8>
   42288:	ldr	x14, [x1]
   4228c:	tst	x14, x24
   42290:	b.ne	41e58 <mpfr_cache@@Base+0x1b4>  // b.any
   42294:	b	41e1c <mpfr_cache@@Base+0x178>

0000000000042298 <mpfr_sqr@@Base>:
   42298:	stp	x29, x30, [sp, #-96]!
   4229c:	stp	x28, x27, [sp, #16]
   422a0:	stp	x26, x25, [sp, #32]
   422a4:	stp	x24, x23, [sp, #48]
   422a8:	stp	x22, x21, [sp, #64]
   422ac:	stp	x20, x19, [sp, #80]
   422b0:	mov	x29, sp
   422b4:	sub	sp, sp, #0x40
   422b8:	ldr	x26, [x1, #16]
   422bc:	mov	x8, #0x2                   	// #2
   422c0:	movk	x8, #0x8000, lsl #48
   422c4:	add	x9, x8, #0x2
   422c8:	cmp	x26, x9
   422cc:	mov	x19, x0
   422d0:	b.lt	42a18 <mpfr_sqr@@Base+0x780>  // b.tstop
   422d4:	ldr	x21, [x19]
   422d8:	ldr	x8, [x1]
   422dc:	mov	w20, w2
   422e0:	mov	x22, x1
   422e4:	cmp	x21, #0x3f
   422e8:	b.gt	423e4 <mpfr_sqr@@Base+0x14c>
   422ec:	cmp	x8, #0x40
   422f0:	b.gt	423e4 <mpfr_sqr@@Base+0x14c>
   422f4:	ldr	x8, [x22, #24]
   422f8:	ldr	x10, [x19, #24]
   422fc:	neg	x9, x21
   42300:	mov	w12, #0x1                   	// #1
   42304:	ldr	x8, [x8]
   42308:	lsl	x11, x12, x9
   4230c:	lsl	x9, x26, #1
   42310:	umulh	x15, x8, x8
   42314:	mul	x14, x8, x8
   42318:	tbnz	x15, #63, 42328 <mpfr_sqr@@Base+0x90>
   4231c:	sub	x9, x9, #0x1
   42320:	extr	x15, x15, x14, #63
   42324:	lsl	x14, x14, #1
   42328:	neg	x16, x11
   4232c:	and	x8, x15, x16
   42330:	str	x8, [x10]
   42334:	str	w12, [x19, #8]
   42338:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4233c:	ldr	x1, [x0, #2608]
   42340:	add	x0, x0, #0xa30
   42344:	blr	x1
   42348:	mrs	x12, tpidr_el0
   4234c:	ldr	x13, [x12, x0]
   42350:	cmp	x9, x13
   42354:	b.gt	42a00 <mpfr_sqr@@Base+0x768>
   42358:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   4235c:	sub	x17, x11, #0x1
   42360:	lsr	x13, x13, x21
   42364:	and	x13, x15, x13
   42368:	and	x15, x15, x17
   4236c:	eor	x15, x15, x13
   42370:	orr	x14, x15, x14
   42374:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42378:	ldr	x1, [x0, #2576]
   4237c:	add	x0, x0, #0xa10
   42380:	blr	x1
   42384:	ldr	x15, [x12, x0]
   42388:	cmp	x9, x15
   4238c:	b.lt	42a6c <mpfr_sqr@@Base+0x7d4>  // b.tstop
   42390:	mov	w8, wzr
   42394:	cmp	w20, #0x5
   42398:	str	x9, [x19, #16]
   4239c:	b.eq	429dc <mpfr_sqr@@Base+0x744>  // b.none
   423a0:	orr	x15, x14, x13
   423a4:	cbz	x15, 429dc <mpfr_sqr@@Base+0x744>
   423a8:	cmp	w20, #0x3
   423ac:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   423b0:	cmp	w20, #0x1
   423b4:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   423b8:	cbnz	w20, 423d0 <mpfr_sqr@@Base+0x138>
   423bc:	cbz	x13, 425fc <mpfr_sqr@@Base+0x364>
   423c0:	cbnz	x14, 423d0 <mpfr_sqr@@Base+0x138>
   423c4:	ldr	x8, [x10]
   423c8:	tst	x8, x11
   423cc:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   423d0:	ldr	x8, [x10]
   423d4:	adds	x8, x8, x11
   423d8:	str	x8, [x10]
   423dc:	b.ne	429bc <mpfr_sqr@@Base+0x724>  // b.any
   423e0:	b	42990 <mpfr_sqr@@Base+0x6f8>
   423e4:	sub	x9, x21, #0x41
   423e8:	cmp	x9, #0x3e
   423ec:	b.hi	42550 <mpfr_sqr@@Base+0x2b8>  // b.pmore
   423f0:	sub	x9, x8, #0x41
   423f4:	cmp	x9, #0x3f
   423f8:	b.hi	42550 <mpfr_sqr@@Base+0x2b8>  // b.pmore
   423fc:	ldr	x8, [x22, #24]
   42400:	neg	x10, x21
   42404:	mov	w13, #0x1                   	// #1
   42408:	ldr	x9, [x19, #24]
   4240c:	ldp	x11, x12, [x8]
   42410:	lsl	x10, x13, x10
   42414:	umulh	x8, x12, x12
   42418:	umulh	x16, x12, x11
   4241c:	mul	x15, x12, x12
   42420:	adds	x15, x15, x16, lsl #1
   42424:	sub	x14, x10, #0x1
   42428:	add	x8, x8, x16, lsr #63
   4242c:	add	x16, x15, #0x2
   42430:	and	x16, x16, x14, lsr #2
   42434:	cinc	x8, x8, cs  // cs = hs, nlast
   42438:	cmp	x16, #0x2
   4243c:	b.ls	42aa8 <mpfr_sqr@@Base+0x810>  // b.plast
   42440:	mov	w16, #0x1                   	// #1
   42444:	lsl	x11, x26, #1
   42448:	tbnz	x8, #63, 4245c <mpfr_sqr@@Base+0x1c4>
   4244c:	sub	x11, x11, #0x1
   42450:	extr	x8, x8, x15, #63
   42454:	extr	x15, x15, x16, #63
   42458:	lsl	x16, x16, #1
   4245c:	neg	x18, x10
   42460:	mov	w2, #0x1                   	// #1
   42464:	and	x17, x15, x18
   42468:	stp	x17, x8, [x9]
   4246c:	str	w2, [x19, #8]
   42470:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42474:	ldr	x1, [x0, #2608]
   42478:	add	x0, x0, #0xa30
   4247c:	blr	x1
   42480:	mrs	x12, tpidr_el0
   42484:	ldr	x0, [x12, x0]
   42488:	cmp	x11, x0
   4248c:	b.gt	42a00 <mpfr_sqr@@Base+0x768>
   42490:	mov	w0, #0x7f                  	// #127
   42494:	and	x1, x15, x14
   42498:	sub	x14, x0, x21
   4249c:	lsl	x14, x2, x14
   424a0:	and	x14, x15, x14
   424a4:	eor	x15, x1, x14
   424a8:	orr	x13, x16, x13
   424ac:	orr	x13, x13, x15
   424b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   424b4:	ldr	x1, [x0, #2576]
   424b8:	add	x0, x0, #0xa10
   424bc:	blr	x1
   424c0:	ldr	x15, [x12, x0]
   424c4:	cmp	x11, x15
   424c8:	b.lt	42ae0 <mpfr_sqr@@Base+0x848>  // b.tstop
   424cc:	mov	w8, wzr
   424d0:	cmp	w20, #0x5
   424d4:	str	x11, [x19, #16]
   424d8:	b.eq	429dc <mpfr_sqr@@Base+0x744>  // b.none
   424dc:	orr	x15, x13, x14
   424e0:	cbz	x15, 429dc <mpfr_sqr@@Base+0x744>
   424e4:	cmp	w20, #0x3
   424e8:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   424ec:	cmp	w20, #0x1
   424f0:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   424f4:	cbnz	w20, 4250c <mpfr_sqr@@Base+0x274>
   424f8:	cbz	x14, 425fc <mpfr_sqr@@Base+0x364>
   424fc:	cbnz	x13, 4250c <mpfr_sqr@@Base+0x274>
   42500:	ldr	x8, [x9]
   42504:	tst	x8, x10
   42508:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   4250c:	ldp	x8, x13, [x9]
   42510:	adds	x8, x8, x10
   42514:	str	x8, [x9]
   42518:	cinc	x8, x13, eq  // eq = none
   4251c:	str	x8, [x9, #8]
   42520:	cbnz	x8, 429bc <mpfr_sqr@@Base+0x724>
   42524:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   42528:	str	x8, [x9, #8]
   4252c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42530:	ldr	x1, [x0, #2608]
   42534:	add	x0, x0, #0xa30
   42538:	blr	x1
   4253c:	ldr	x8, [x12, x0]
   42540:	cmp	x11, x8
   42544:	b.ge	42a00 <mpfr_sqr@@Base+0x768>  // b.tcont
   42548:	add	x8, x11, #0x1
   4254c:	b	429b8 <mpfr_sqr@@Base+0x720>
   42550:	cmp	x21, #0x40
   42554:	b.ne	42620 <mpfr_sqr@@Base+0x388>  // b.any
   42558:	cmp	x8, #0x40
   4255c:	b.gt	42620 <mpfr_sqr@@Base+0x388>
   42560:	ldr	x8, [x22, #24]
   42564:	ldr	x10, [x19, #24]
   42568:	lsl	x9, x26, #1
   4256c:	ldr	x11, [x8]
   42570:	umulh	x8, x11, x11
   42574:	mul	x11, x11, x11
   42578:	tbnz	x8, #63, 42588 <mpfr_sqr@@Base+0x2f0>
   4257c:	sub	x9, x9, #0x1
   42580:	extr	x8, x8, x11, #63
   42584:	lsl	x11, x11, #1
   42588:	mov	w12, #0x1                   	// #1
   4258c:	str	x8, [x10]
   42590:	str	w12, [x19, #8]
   42594:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42598:	ldr	x1, [x0, #2608]
   4259c:	add	x0, x0, #0xa30
   425a0:	blr	x1
   425a4:	mrs	x12, tpidr_el0
   425a8:	ldr	x13, [x12, x0]
   425ac:	cmp	x9, x13
   425b0:	b.gt	42a00 <mpfr_sqr@@Base+0x768>
   425b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   425b8:	ldr	x1, [x0, #2576]
   425bc:	add	x0, x0, #0xa10
   425c0:	blr	x1
   425c4:	ldr	x13, [x12, x0]
   425c8:	cmp	x9, x13
   425cc:	b.lt	42b4c <mpfr_sqr@@Base+0x8b4>  // b.tstop
   425d0:	mov	w8, wzr
   425d4:	cmp	w20, #0x5
   425d8:	str	x9, [x19, #16]
   425dc:	b.eq	429dc <mpfr_sqr@@Base+0x744>  // b.none
   425e0:	cbz	x11, 429dc <mpfr_sqr@@Base+0x744>
   425e4:	cmp	w20, #0x3
   425e8:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   425ec:	cmp	w20, #0x1
   425f0:	b.eq	425fc <mpfr_sqr@@Base+0x364>  // b.none
   425f4:	cbnz	w20, 42980 <mpfr_sqr@@Base+0x6e8>
   425f8:	tbnz	x11, #63, 42970 <mpfr_sqr@@Base+0x6d8>
   425fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42600:	ldr	x1, [x0, #2640]
   42604:	add	x0, x0, #0xa50
   42608:	blr	x1
   4260c:	ldr	w8, [x12, x0]
   42610:	orr	w8, w8, #0x8
   42614:	str	w8, [x12, x0]
   42618:	mov	w8, #0xffffffff            	// #-1
   4261c:	b	429dc <mpfr_sqr@@Base+0x744>
   42620:	sub	x9, x21, #0x81
   42624:	cmp	x9, #0x3e
   42628:	b.hi	4280c <mpfr_sqr@@Base+0x574>  // b.pmore
   4262c:	sub	x9, x8, #0x81
   42630:	cmp	x9, #0x3f
   42634:	b.hi	4280c <mpfr_sqr@@Base+0x574>  // b.pmore
   42638:	ldr	x1, [x22, #24]
   4263c:	neg	x8, x21
   42640:	mov	w10, #0x1                   	// #1
   42644:	lsl	x23, x10, x8
   42648:	ldp	x11, x9, [x1, #8]
   4264c:	ldr	x8, [x1]
   42650:	umulh	x8, x9, x8
   42654:	umulh	x12, x9, x11
   42658:	mul	x13, x11, x9
   4265c:	adds	x8, x8, x13
   42660:	ldr	x22, [x19, #24]
   42664:	umulh	x14, x11, x11
   42668:	cinc	x13, x12, cs  // cs = hs, nlast
   4266c:	adds	x12, x14, x8, lsl #1
   42670:	sub	x24, x23, #0x1
   42674:	mul	x10, x9, x9
   42678:	extr	x8, x13, x8, #63
   4267c:	add	x15, x12, #0x4
   42680:	add	x11, x8, x10
   42684:	and	x15, x15, x24, lsr #2
   42688:	cinc	x8, x11, cs  // cs = hs, nlast
   4268c:	cmp	x15, #0x5
   42690:	b.cc	42ba0 <mpfr_sqr@@Base+0x908>  // b.lo, b.ul, b.last
   42694:	cmp	x12, x14
   42698:	cset	w15, cc  // cc = lo, ul, last
   4269c:	cmp	x8, #0x0
   426a0:	lsr	x13, x13, #63
   426a4:	cset	w16, eq  // eq = none
   426a8:	cmp	x11, x10
   426ac:	and	w10, w15, w16
   426b0:	cinc	x11, x13, cc  // cc = lo, ul, last
   426b4:	add	x10, x11, x10
   426b8:	umulh	x9, x9, x9
   426bc:	mov	w14, #0x1                   	// #1
   426c0:	add	x10, x10, x9
   426c4:	mov	w15, #0x1                   	// #1
   426c8:	lsl	x9, x26, #1
   426cc:	tbnz	x10, #63, 426e4 <mpfr_sqr@@Base+0x44c>
   426d0:	sub	x9, x9, #0x1
   426d4:	extr	x10, x10, x8, #63
   426d8:	extr	x8, x8, x12, #63
   426dc:	extr	x12, x12, x15, #63
   426e0:	lsl	x15, x15, #1
   426e4:	neg	x17, x23
   426e8:	mov	w13, #0x1                   	// #1
   426ec:	and	x16, x12, x17
   426f0:	stp	x8, x10, [x22, #8]
   426f4:	str	x16, [x22]
   426f8:	str	w13, [x19, #8]
   426fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42700:	ldr	x1, [x0, #2608]
   42704:	add	x0, x0, #0xa30
   42708:	blr	x1
   4270c:	mrs	x11, tpidr_el0
   42710:	ldr	x18, [x11, x0]
   42714:	cmp	x9, x18
   42718:	b.gt	42a00 <mpfr_sqr@@Base+0x768>
   4271c:	mov	w18, #0xbf                  	// #191
   42720:	sub	x18, x18, x21
   42724:	lsl	x13, x13, x18
   42728:	and	x0, x12, x24
   4272c:	and	x13, x12, x13
   42730:	eor	x12, x0, x13
   42734:	orr	x14, x15, x14
   42738:	orr	x12, x14, x12
   4273c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42740:	ldr	x1, [x0, #2576]
   42744:	add	x0, x0, #0xa10
   42748:	blr	x1
   4274c:	ldr	x14, [x11, x0]
   42750:	cmp	x9, x14
   42754:	b.lt	42bc8 <mpfr_sqr@@Base+0x930>  // b.tstop
   42758:	mov	w8, wzr
   4275c:	cmp	w20, #0x5
   42760:	str	x9, [x19, #16]
   42764:	b.eq	429dc <mpfr_sqr@@Base+0x744>  // b.none
   42768:	orr	x10, x12, x13
   4276c:	cbz	x10, 429dc <mpfr_sqr@@Base+0x744>
   42770:	cmp	w20, #0x3
   42774:	b.eq	4294c <mpfr_sqr@@Base+0x6b4>  // b.none
   42778:	cmp	w20, #0x1
   4277c:	b.eq	4294c <mpfr_sqr@@Base+0x6b4>  // b.none
   42780:	cbnz	w20, 42798 <mpfr_sqr@@Base+0x500>
   42784:	cbz	x13, 4294c <mpfr_sqr@@Base+0x6b4>
   42788:	cbnz	x12, 42798 <mpfr_sqr@@Base+0x500>
   4278c:	ldr	x8, [x22]
   42790:	tst	x8, x23
   42794:	b.eq	4294c <mpfr_sqr@@Base+0x6b4>  // b.none
   42798:	ldp	x8, x10, [x22]
   4279c:	ldr	x12, [x22, #16]
   427a0:	adds	x8, x8, x23
   427a4:	cinc	x10, x10, eq  // eq = none
   427a8:	stp	x8, x10, [x22]
   427ac:	orr	x8, x10, x8
   427b0:	cmp	x8, #0x0
   427b4:	cinc	x8, x12, eq  // eq = none
   427b8:	str	x8, [x22, #16]
   427bc:	cbnz	x8, 427ec <mpfr_sqr@@Base+0x554>
   427c0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   427c4:	str	x8, [x22, #16]
   427c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   427cc:	ldr	x1, [x0, #2608]
   427d0:	add	x0, x0, #0xa30
   427d4:	blr	x1
   427d8:	ldr	x8, [x11, x0]
   427dc:	cmp	x9, x8
   427e0:	b.ge	42a00 <mpfr_sqr@@Base+0x768>  // b.tcont
   427e4:	add	x8, x9, #0x1
   427e8:	str	x8, [x19, #16]
   427ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   427f0:	ldr	x1, [x0, #2640]
   427f4:	add	x0, x0, #0xa50
   427f8:	blr	x1
   427fc:	ldr	w8, [x11, x0]
   42800:	orr	w8, w8, #0x8
   42804:	str	w8, [x11, x0]
   42808:	b	429d8 <mpfr_sqr@@Base+0x740>
   4280c:	lsl	x23, x8, #1
   42810:	mov	x9, #0x7fffffffffffff00    	// #9223372036854775552
   42814:	cmp	x23, x9
   42818:	b.cs	42c10 <mpfr_sqr@@Base+0x978>  // b.hs, b.nlast
   4281c:	sub	x9, x8, #0x1
   42820:	add	x10, x8, #0x3e
   42824:	sub	x11, x23, #0x1
   42828:	cmp	x9, #0x0
   4282c:	add	x12, x23, #0x3e
   42830:	csel	x10, x10, x9, lt  // lt = tstop
   42834:	cmp	x11, #0x0
   42838:	csel	x9, x12, x11, lt  // lt = tstop
   4283c:	cmp	x8, #0x501
   42840:	b.ge	42c30 <mpfr_sqr@@Base+0x998>  // b.tcont
   42844:	asr	x8, x10, #6
   42848:	add	x2, x8, #0x1
   4284c:	asr	x9, x9, #6
   42850:	lsl	x1, x2, #4
   42854:	add	x24, x9, #0x1
   42858:	cmp	x1, #0x4, lsl #12
   4285c:	lsl	x28, x2, #1
   42860:	stur	xzr, [x29, #-48]
   42864:	b.hi	42c4c <mpfr_sqr@@Base+0x9b4>  // b.pmore
   42868:	add	x9, x1, #0xf
   4286c:	mov	x8, sp
   42870:	and	x9, x9, #0xfffffffffffffff0
   42874:	sub	x25, x8, x9
   42878:	mov	sp, x25
   4287c:	ldr	x1, [x22, #24]
   42880:	mov	x0, x25
   42884:	bl	c3b0 <__gmpn_sqr@plt>
   42888:	add	x8, x25, x28, lsl #3
   4288c:	ldur	x27, [x8, #-8]
   42890:	sub	x8, x28, x24
   42894:	add	x1, x25, x8, lsl #3
   42898:	tbz	x27, #63, 42c64 <mpfr_sqr@@Base+0x9cc>
   4289c:	ldr	x0, [x19, #24]
   428a0:	sub	x6, x29, #0x34
   428a4:	mov	x2, x23
   428a8:	mov	w3, wzr
   428ac:	mov	x4, x21
   428b0:	mov	w5, w20
   428b4:	bl	ca00 <mpfr_round_raw@plt>
   428b8:	mov	w21, w0
   428bc:	cbnz	w0, 42c80 <mpfr_sqr@@Base+0x9e8>
   428c0:	ldur	x0, [x29, #-48]
   428c4:	lsl	x23, x26, #1
   428c8:	lsr	x24, x27, #63
   428cc:	cbnz	x0, 42cb4 <mpfr_sqr@@Base+0xa1c>
   428d0:	add	x8, x23, x24
   428d4:	add	x8, x8, w21, sxtw
   428d8:	sub	x8, x8, #0x1
   428dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   428e0:	ldr	x1, [x0, #2608]
   428e4:	add	x0, x0, #0xa30
   428e8:	blr	x1
   428ec:	mrs	x9, tpidr_el0
   428f0:	ldr	x10, [x9, x0]
   428f4:	cmp	x8, x10
   428f8:	b.gt	42a00 <mpfr_sqr@@Base+0x768>
   428fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42900:	ldr	x1, [x0, #2576]
   42904:	add	x0, x0, #0xa10
   42908:	blr	x1
   4290c:	ldr	x10, [x9, x0]
   42910:	cmp	x8, x10
   42914:	b.lt	42cbc <mpfr_sqr@@Base+0xa24>  // b.tstop
   42918:	str	x8, [x19, #16]
   4291c:	mov	w8, #0x1                   	// #1
   42920:	str	w8, [x19, #8]
   42924:	ldur	w8, [x29, #-52]
   42928:	cbz	w8, 429dc <mpfr_sqr@@Base+0x744>
   4292c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42930:	ldr	x1, [x0, #2640]
   42934:	add	x0, x0, #0xa50
   42938:	blr	x1
   4293c:	ldr	w10, [x9, x0]
   42940:	orr	w10, w10, #0x8
   42944:	str	w10, [x9, x0]
   42948:	b	429dc <mpfr_sqr@@Base+0x744>
   4294c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42950:	ldr	x1, [x0, #2640]
   42954:	add	x0, x0, #0xa50
   42958:	blr	x1
   4295c:	ldr	w8, [x11, x0]
   42960:	orr	w8, w8, #0x8
   42964:	str	w8, [x11, x0]
   42968:	mov	w8, #0xffffffff            	// #-1
   4296c:	b	429dc <mpfr_sqr@@Base+0x744>
   42970:	and	x8, x11, #0x7fffffffffffffff
   42974:	cbnz	x8, 42980 <mpfr_sqr@@Base+0x6e8>
   42978:	ldrb	w8, [x10]
   4297c:	tbz	w8, #0, 425fc <mpfr_sqr@@Base+0x364>
   42980:	ldr	x8, [x10]
   42984:	adds	x8, x8, #0x1
   42988:	str	x8, [x10]
   4298c:	b.cc	429bc <mpfr_sqr@@Base+0x724>  // b.lo, b.ul, b.last
   42990:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   42994:	str	x8, [x10]
   42998:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4299c:	ldr	x1, [x0, #2608]
   429a0:	add	x0, x0, #0xa30
   429a4:	blr	x1
   429a8:	ldr	x8, [x12, x0]
   429ac:	cmp	x9, x8
   429b0:	b.ge	42a00 <mpfr_sqr@@Base+0x768>  // b.tcont
   429b4:	add	x8, x9, #0x1
   429b8:	str	x8, [x19, #16]
   429bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   429c0:	ldr	x1, [x0, #2640]
   429c4:	add	x0, x0, #0xa50
   429c8:	blr	x1
   429cc:	ldr	w8, [x12, x0]
   429d0:	orr	w8, w8, #0x8
   429d4:	str	w8, [x12, x0]
   429d8:	mov	w8, #0x1                   	// #1
   429dc:	mov	w0, w8
   429e0:	mov	sp, x29
   429e4:	ldp	x20, x19, [sp, #80]
   429e8:	ldp	x22, x21, [sp, #64]
   429ec:	ldp	x24, x23, [sp, #48]
   429f0:	ldp	x26, x25, [sp, #32]
   429f4:	ldp	x28, x27, [sp, #16]
   429f8:	ldp	x29, x30, [sp], #96
   429fc:	ret
   42a00:	mov	w2, #0x1                   	// #1
   42a04:	mov	x0, x19
   42a08:	mov	w1, w20
   42a0c:	bl	bf90 <mpfr_overflow@plt>
   42a10:	mov	w8, w0
   42a14:	b	429dc <mpfr_sqr@@Base+0x744>
   42a18:	cmp	x26, x8
   42a1c:	b.ne	42a48 <mpfr_sqr@@Base+0x7b0>  // b.any
   42a20:	str	x8, [x19, #16]
   42a24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   42a28:	ldr	x1, [x0, #2640]
   42a2c:	add	x0, x0, #0xa50
   42a30:	blr	x1
   42a34:	mrs	x9, tpidr_el0
   42a38:	ldr	w10, [x9, x0]
   42a3c:	mov	w8, wzr
   42a40:	orr	w10, w10, #0x4
   42a44:	b	42944 <mpfr_sqr@@Base+0x6ac>
   42a48:	mov	w9, #0x1                   	// #1
   42a4c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   42a50:	str	w9, [x19, #8]
   42a54:	cmp	x26, x10
   42a58:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   42a5c:	csel	x9, x26, x9, eq  // eq = none
   42a60:	mov	w8, wzr
   42a64:	str	x9, [x19, #16]
   42a68:	b	429dc <mpfr_sqr@@Base+0x744>
   42a6c:	cmp	x8, x16
   42a70:	sub	x15, x15, #0x1
   42a74:	b.ne	42b24 <mpfr_sqr@@Base+0x88c>  // b.any
   42a78:	cmp	x9, x15
   42a7c:	b.ne	42b24 <mpfr_sqr@@Base+0x88c>  // b.any
   42a80:	cbnz	w20, 42a88 <mpfr_sqr@@Base+0x7f0>
   42a84:	cbnz	x13, 42390 <mpfr_sqr@@Base+0xf8>
   42a88:	cbz	w20, 42b28 <mpfr_sqr@@Base+0x890>
   42a8c:	cmp	w20, #0x4
   42a90:	b.eq	42a9c <mpfr_sqr@@Base+0x804>  // b.none
   42a94:	cmp	w20, #0x2
   42a98:	b.ne	42d10 <mpfr_sqr@@Base+0xa78>  // b.any
   42a9c:	orr	x8, x14, x13
   42aa0:	cbnz	x8, 42390 <mpfr_sqr@@Base+0xf8>
   42aa4:	b	42d10 <mpfr_sqr@@Base+0xa78>
   42aa8:	mul	x12, x12, x11
   42aac:	umulh	x16, x11, x11
   42ab0:	mul	x13, x11, x11
   42ab4:	adds	x11, x16, x12
   42ab8:	cset	w16, cs  // cs = hs, nlast
   42abc:	adds	x15, x15, x16
   42ac0:	cinc	x8, x8, cs  // cs = hs, nlast
   42ac4:	adds	x16, x11, x12
   42ac8:	cset	w11, cs  // cs = hs, nlast
   42acc:	adds	x15, x15, x11
   42ad0:	cinc	x8, x8, cs  // cs = hs, nlast
   42ad4:	lsl	x11, x26, #1
   42ad8:	tbz	x8, #63, 4244c <mpfr_sqr@@Base+0x1b4>
   42adc:	b	4245c <mpfr_sqr@@Base+0x1c4>
   42ae0:	cmp	x17, x18
   42ae4:	sub	x15, x15, #0x1
   42ae8:	b.ne	42b78 <mpfr_sqr@@Base+0x8e0>  // b.any
   42aec:	cmn	x8, #0x1
   42af0:	b.ne	42b78 <mpfr_sqr@@Base+0x8e0>  // b.any
   42af4:	cmp	x11, x15
   42af8:	b.ne	42b78 <mpfr_sqr@@Base+0x8e0>  // b.any
   42afc:	cbnz	w20, 42b04 <mpfr_sqr@@Base+0x86c>
   42b00:	cbnz	x14, 424cc <mpfr_sqr@@Base+0x234>
   42b04:	cbz	w20, 42b7c <mpfr_sqr@@Base+0x8e4>
   42b08:	cmp	w20, #0x4
   42b0c:	b.eq	42b18 <mpfr_sqr@@Base+0x880>  // b.none
   42b10:	cmp	w20, #0x2
   42b14:	b.ne	42d10 <mpfr_sqr@@Base+0xa78>  // b.any
   42b18:	orr	x8, x13, x14
   42b1c:	cbnz	x8, 424cc <mpfr_sqr@@Base+0x234>
   42b20:	b	42d10 <mpfr_sqr@@Base+0xa78>
   42b24:	cbnz	w20, 42d10 <mpfr_sqr@@Base+0xa78>
   42b28:	cmp	x9, x15
   42b2c:	b.lt	42d0c <mpfr_sqr@@Base+0xa74>  // b.tstop
   42b30:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   42b34:	cmp	x8, x9
   42b38:	mov	w20, wzr
   42b3c:	b.ne	42d10 <mpfr_sqr@@Base+0xa78>  // b.any
   42b40:	orr	x8, x14, x13
   42b44:	cbz	x8, 42d0c <mpfr_sqr@@Base+0xa74>
   42b48:	b	42d10 <mpfr_sqr@@Base+0xa78>
   42b4c:	cmn	x8, #0x1
   42b50:	sub	x13, x13, #0x1
   42b54:	b.ne	42cdc <mpfr_sqr@@Base+0xa44>  // b.any
   42b58:	cmp	x9, x13
   42b5c:	b.ne	42cdc <mpfr_sqr@@Base+0xa44>  // b.any
   42b60:	cbz	w20, 42ce0 <mpfr_sqr@@Base+0xa48>
   42b64:	cmp	w20, #0x2
   42b68:	b.eq	425d0 <mpfr_sqr@@Base+0x338>  // b.none
   42b6c:	cmp	w20, #0x4
   42b70:	b.eq	425d0 <mpfr_sqr@@Base+0x338>  // b.none
   42b74:	b	42d10 <mpfr_sqr@@Base+0xa78>
   42b78:	cbnz	w20, 42d10 <mpfr_sqr@@Base+0xa78>
   42b7c:	cmp	x11, x15
   42b80:	b.lt	42d0c <mpfr_sqr@@Base+0xa74>  // b.tstop
   42b84:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   42b88:	cmp	x8, x9
   42b8c:	b.ne	42d48 <mpfr_sqr@@Base+0xab0>  // b.any
   42b90:	orr	x8, x13, x14
   42b94:	orr	x8, x8, x17
   42b98:	cbnz	x8, 42d48 <mpfr_sqr@@Base+0xab0>
   42b9c:	b	42d0c <mpfr_sqr@@Base+0xa74>
   42ba0:	sub	x0, x29, #0x30
   42ba4:	mov	w2, #0x3                   	// #3
   42ba8:	bl	c3b0 <__gmpn_sqr@plt>
   42bac:	ldp	x11, x9, [x29, #-48]
   42bb0:	ldp	x8, x10, [x29, #-16]
   42bb4:	ldp	x15, x12, [x29, #-32]
   42bb8:	orr	x14, x11, x9
   42bbc:	lsl	x9, x26, #1
   42bc0:	tbz	x10, #63, 426d0 <mpfr_sqr@@Base+0x438>
   42bc4:	b	426e4 <mpfr_sqr@@Base+0x44c>
   42bc8:	cmp	x16, x17
   42bcc:	sub	x14, x14, #0x1
   42bd0:	b.ne	42d00 <mpfr_sqr@@Base+0xa68>  // b.any
   42bd4:	and	x15, x8, x10
   42bd8:	cmn	x15, #0x1
   42bdc:	b.ne	42d00 <mpfr_sqr@@Base+0xa68>  // b.any
   42be0:	cmp	x9, x14
   42be4:	b.ne	42d00 <mpfr_sqr@@Base+0xa68>  // b.any
   42be8:	cbnz	w20, 42bf0 <mpfr_sqr@@Base+0x958>
   42bec:	cbnz	x13, 42758 <mpfr_sqr@@Base+0x4c0>
   42bf0:	cbz	w20, 42d04 <mpfr_sqr@@Base+0xa6c>
   42bf4:	cmp	w20, #0x4
   42bf8:	b.eq	42c04 <mpfr_sqr@@Base+0x96c>  // b.none
   42bfc:	cmp	w20, #0x2
   42c00:	b.ne	42d10 <mpfr_sqr@@Base+0xa78>  // b.any
   42c04:	orr	x8, x12, x13
   42c08:	cbnz	x8, 42758 <mpfr_sqr@@Base+0x4c0>
   42c0c:	b	42d10 <mpfr_sqr@@Base+0xa78>
   42c10:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   42c14:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   42c18:	add	x0, x0, #0x396
   42c1c:	add	x2, x2, #0x39c
   42c20:	mov	w1, #0x22a                 	// #554
   42c24:	bl	cb20 <mpfr_assert_fail@plt>
   42c28:	ldr	x8, [x22]
   42c2c:	b	4281c <mpfr_sqr@@Base+0x584>
   42c30:	mov	x0, x19
   42c34:	mov	x1, x22
   42c38:	mov	x2, x22
   42c3c:	mov	w3, w20
   42c40:	bl	bda0 <mpfr_mul@plt>
   42c44:	mov	w8, w0
   42c48:	b	429dc <mpfr_sqr@@Base+0x744>
   42c4c:	sub	x0, x29, #0x30
   42c50:	mov	x25, x2
   42c54:	bl	be10 <mpfr_tmp_allocate@plt>
   42c58:	mov	x2, x25
   42c5c:	mov	x25, x0
   42c60:	b	4287c <mpfr_sqr@@Base+0x5e4>
   42c64:	mov	w3, #0x1                   	// #1
   42c68:	mov	x0, x1
   42c6c:	mov	x2, x24
   42c70:	mov	x25, x1
   42c74:	bl	bd10 <__gmpn_lshift@plt>
   42c78:	mov	x1, x25
   42c7c:	b	4289c <mpfr_sqr@@Base+0x604>
   42c80:	ldr	x8, [x19]
   42c84:	ldr	x9, [x19, #24]
   42c88:	sub	x10, x8, #0x1
   42c8c:	add	x8, x8, #0x3e
   42c90:	cmp	x10, #0x0
   42c94:	csel	x8, x8, x10, lt  // lt = tstop
   42c98:	asr	x8, x8, #6
   42c9c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   42ca0:	str	x10, [x9, x8, lsl #3]
   42ca4:	ldur	x0, [x29, #-48]
   42ca8:	lsl	x23, x26, #1
   42cac:	lsr	x24, x27, #63
   42cb0:	cbz	x0, 428d0 <mpfr_sqr@@Base+0x638>
   42cb4:	bl	c400 <mpfr_tmp_free@plt>
   42cb8:	b	428d0 <mpfr_sqr@@Base+0x638>
   42cbc:	cbnz	w20, 42d10 <mpfr_sqr@@Base+0xa78>
   42cc0:	orr	x8, x24, x23
   42cc4:	cmp	x8, x10
   42cc8:	b.lt	42d0c <mpfr_sqr@@Base+0xa74>  // b.tstop
   42ccc:	mov	x0, x22
   42cd0:	bl	bf50 <mpfr_powerof2_raw@plt>
   42cd4:	cbnz	w0, 42d0c <mpfr_sqr@@Base+0xa74>
   42cd8:	b	42d48 <mpfr_sqr@@Base+0xab0>
   42cdc:	cbnz	w20, 42d10 <mpfr_sqr@@Base+0xa78>
   42ce0:	cmp	x9, x13
   42ce4:	b.lt	42d0c <mpfr_sqr@@Base+0xa74>  // b.tstop
   42ce8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   42cec:	cmp	x8, x9
   42cf0:	mov	w20, wzr
   42cf4:	b.ne	42d10 <mpfr_sqr@@Base+0xa78>  // b.any
   42cf8:	cbz	x11, 42d0c <mpfr_sqr@@Base+0xa74>
   42cfc:	b	42d10 <mpfr_sqr@@Base+0xa78>
   42d00:	cbnz	w20, 42d10 <mpfr_sqr@@Base+0xa78>
   42d04:	cmp	x9, x14
   42d08:	b.ge	42d28 <mpfr_sqr@@Base+0xa90>  // b.tcont
   42d0c:	mov	w20, #0x1                   	// #1
   42d10:	mov	w2, #0x1                   	// #1
   42d14:	mov	x0, x19
   42d18:	mov	w1, w20
   42d1c:	bl	c3c0 <mpfr_underflow@plt>
   42d20:	mov	w8, w0
   42d24:	b	429dc <mpfr_sqr@@Base+0x744>
   42d28:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   42d2c:	cmp	x10, x9
   42d30:	mov	w20, wzr
   42d34:	b.ne	42d10 <mpfr_sqr@@Base+0xa78>  // b.any
   42d38:	cbnz	x8, 42d10 <mpfr_sqr@@Base+0xa78>
   42d3c:	orr	x8, x12, x13
   42d40:	orr	x8, x8, x16
   42d44:	cbz	x8, 42d0c <mpfr_sqr@@Base+0xa74>
   42d48:	mov	w20, wzr
   42d4c:	b	42d10 <mpfr_sqr@@Base+0xa78>

0000000000042d50 <__gmpfr_int_ceil_log2@@Base>:
   42d50:	stp	x29, x30, [sp, #-32]!
   42d54:	str	x19, [sp, #16]
   42d58:	subs	x19, x0, #0x1
   42d5c:	mov	x29, sp
   42d60:	b.eq	42d80 <__gmpfr_int_ceil_log2@@Base+0x30>  // b.none
   42d64:	cbz	x0, 42d90 <__gmpfr_int_ceil_log2@@Base+0x40>
   42d68:	clz	x8, x19
   42d6c:	mov	w9, #0x40                  	// #64
   42d70:	sub	w0, w9, w8
   42d74:	ldr	x19, [sp, #16]
   42d78:	ldp	x29, x30, [sp], #32
   42d7c:	ret
   42d80:	mov	w0, wzr
   42d84:	ldr	x19, [sp, #16]
   42d88:	ldp	x29, x30, [sp], #32
   42d8c:	ret
   42d90:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   42d94:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   42d98:	add	x0, x0, #0x3e8
   42d9c:	add	x2, x2, #0x3f8
   42da0:	mov	w1, #0x24                  	// #36
   42da4:	bl	cb20 <mpfr_assert_fail@plt>
   42da8:	b	42d68 <__gmpfr_int_ceil_log2@@Base+0x18>

0000000000042dac <__gmpfr_isqrt@@Base>:
   42dac:	mov	w8, #0x1                   	// #1
   42db0:	cmp	x0, #0x2
   42db4:	b.cc	42dcc <__gmpfr_isqrt@@Base+0x20>  // b.lo, b.ul, b.last
   42db8:	mov	x9, x0
   42dbc:	cmp	x9, #0x7
   42dc0:	lsr	x9, x9, #2
   42dc4:	lsl	x8, x8, #1
   42dc8:	b.hi	42dbc <__gmpfr_isqrt@@Base+0x10>  // b.pmore
   42dcc:	udiv	x9, x0, x8
   42dd0:	add	x8, x9, x8
   42dd4:	lsr	x8, x8, #1
   42dd8:	mul	x9, x8, x8
   42ddc:	cmp	x9, x0
   42de0:	b.hi	42dcc <__gmpfr_isqrt@@Base+0x20>  // b.pmore
   42de4:	add	x10, x8, #0x2
   42de8:	mul	x10, x10, x8
   42dec:	cmp	x9, x10
   42df0:	b.hi	42dfc <__gmpfr_isqrt@@Base+0x50>  // b.pmore
   42df4:	cmp	x10, x0
   42df8:	b.cc	42dcc <__gmpfr_isqrt@@Base+0x20>  // b.lo, b.ul, b.last
   42dfc:	mov	x0, x8
   42e00:	ret

0000000000042e04 <__gmpfr_cuberoot@@Base>:
   42e04:	mov	w8, #0x1                   	// #1
   42e08:	cmp	x0, #0x4
   42e0c:	b.cc	42e74 <__gmpfr_cuberoot@@Base+0x70>  // b.lo, b.ul, b.last
   42e10:	mov	x10, x0
   42e14:	mov	x9, x8
   42e18:	cmp	x10, #0x1f
   42e1c:	lsr	x10, x10, #3
   42e20:	lsl	x8, x8, #1
   42e24:	b.hi	42e14 <__gmpfr_cuberoot@@Base+0x10>  // b.pmore
   42e28:	cmp	x0, #0x100
   42e2c:	b.cc	42e74 <__gmpfr_cuberoot@@Base+0x70>  // b.lo, b.ul, b.last
   42e30:	mul	x8, x8, x8
   42e34:	udiv	x8, x0, x8
   42e38:	add	x8, x8, x9, lsl #2
   42e3c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   42e40:	movk	x9, #0xaaab
   42e44:	umulh	x8, x8, x9
   42e48:	lsr	x8, x8, #1
   42e4c:	mul	x10, x8, x8
   42e50:	udiv	x10, x0, x10
   42e54:	add	x8, x10, x8, lsl #1
   42e58:	umulh	x8, x8, x9
   42e5c:	lsr	x8, x8, #1
   42e60:	mul	x10, x8, x8
   42e64:	udiv	x10, x0, x10
   42e68:	add	x8, x10, x8, lsl #1
   42e6c:	umulh	x8, x8, x9
   42e70:	lsr	x8, x8, #1
   42e74:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   42e78:	movk	x9, #0xaaab
   42e7c:	mul	x10, x8, x8
   42e80:	udiv	x10, x0, x10
   42e84:	add	x8, x10, x8, lsl #1
   42e88:	umulh	x8, x8, x9
   42e8c:	lsr	x8, x8, #1
   42e90:	mul	x10, x8, x8
   42e94:	mul	x10, x10, x8
   42e98:	cmp	x10, x0
   42e9c:	b.hi	42e7c <__gmpfr_cuberoot@@Base+0x78>  // b.pmore
   42ea0:	add	x11, x8, #0x1
   42ea4:	mul	x12, x11, x11
   42ea8:	mul	x11, x12, x11
   42eac:	cmp	x10, x11
   42eb0:	b.hi	42ebc <__gmpfr_cuberoot@@Base+0xb8>  // b.pmore
   42eb4:	cmp	x11, x0
   42eb8:	b.ls	42e7c <__gmpfr_cuberoot@@Base+0x78>  // b.plast
   42ebc:	mov	x0, x8
   42ec0:	ret

0000000000042ec4 <mpfr_strtofr@@Base>:
   42ec4:	sub	sp, sp, #0xb0
   42ec8:	stp	x24, x23, [sp, #128]
   42ecc:	stp	x22, x21, [sp, #144]
   42ed0:	stp	x20, x19, [sp, #160]
   42ed4:	mov	w22, w4
   42ed8:	mov	w24, w3
   42edc:	mov	x19, x2
   42ee0:	mov	x20, x1
   42ee4:	mov	x21, x0
   42ee8:	stp	x29, x30, [sp, #80]
   42eec:	stp	x28, x27, [sp, #96]
   42ef0:	stp	x26, x25, [sp, #112]
   42ef4:	add	x29, sp, #0x50
   42ef8:	cbz	w3, 42f08 <mpfr_strtofr@@Base+0x44>
   42efc:	sub	w8, w24, #0x2
   42f00:	cmp	w8, #0x3d
   42f04:	b.cs	4356c <mpfr_strtofr@@Base+0x6a8>  // b.hs, b.nlast
   42f08:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   42f0c:	mov	w9, #0x1                   	// #1
   42f10:	str	x8, [x21, #16]
   42f14:	str	w9, [x21, #8]
   42f18:	bl	bef0 <localeconv@plt>
   42f1c:	ldr	x8, [x0]
   42f20:	ldrb	w8, [x8, #1]
   42f24:	cbz	w8, 42f30 <mpfr_strtofr@@Base+0x6c>
   42f28:	mov	w28, #0x2e                  	// #46
   42f2c:	b	42f3c <mpfr_strtofr@@Base+0x78>
   42f30:	bl	bef0 <localeconv@plt>
   42f34:	ldr	x8, [x0]
   42f38:	ldrb	w28, [x8]
   42f3c:	str	xzr, [sp, #24]
   42f40:	bl	c620 <__ctype_b_loc@plt>
   42f44:	ldr	x9, [x0]
   42f48:	mov	x23, x0
   42f4c:	mov	x27, x20
   42f50:	ldrb	w8, [x27], #1
   42f54:	ldrh	w10, [x9, x8, lsl #1]
   42f58:	tbnz	w10, #13, 42f50 <mpfr_strtofr@@Base+0x8c>
   42f5c:	cmp	w8, #0x2d
   42f60:	cset	w9, eq  // eq = none
   42f64:	str	w9, [sp, #16]
   42f68:	mov	x9, x27
   42f6c:	ldrb	w10, [x9, #-1]!
   42f70:	cmp	w10, #0x2b
   42f74:	b.eq	42f84 <mpfr_strtofr@@Base+0xc0>  // b.none
   42f78:	cmp	w10, #0x2d
   42f7c:	b.eq	42f84 <mpfr_strtofr@@Base+0xc0>  // b.none
   42f80:	mov	x27, x9
   42f84:	adrp	x11, 64000 <mpfr_bases@@Base+0x758>
   42f88:	mov	x10, xzr
   42f8c:	mov	w9, #0x5                   	// #5
   42f90:	add	x11, x11, #0x42f
   42f94:	cmp	x10, #0x5
   42f98:	b.eq	430f8 <mpfr_strtofr@@Base+0x234>  // b.none
   42f9c:	ldrb	w12, [x27, x10]
   42fa0:	ldrb	w13, [x11, x10]
   42fa4:	add	x10, x10, #0x1
   42fa8:	sub	w14, w12, #0x41
   42fac:	add	w15, w12, #0x20
   42fb0:	cmp	w14, #0x1a
   42fb4:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   42fb8:	cmp	w13, w12, uxtb
   42fbc:	b.eq	42f94 <mpfr_strtofr@@Base+0xd0>  // b.none
   42fc0:	cmp	w24, #0x10
   42fc4:	b.gt	43004 <mpfr_strtofr@@Base+0x140>
   42fc8:	adrp	x11, 64000 <mpfr_bases@@Base+0x758>
   42fcc:	mov	x10, xzr
   42fd0:	mov	w9, #0x3                   	// #3
   42fd4:	add	x11, x11, #0x435
   42fd8:	cmp	x10, #0x3
   42fdc:	b.eq	430f8 <mpfr_strtofr@@Base+0x234>  // b.none
   42fe0:	ldrb	w12, [x27, x10]
   42fe4:	ldrb	w13, [x11, x10]
   42fe8:	add	x10, x10, #0x1
   42fec:	sub	w14, w12, #0x41
   42ff0:	add	w15, w12, #0x20
   42ff4:	cmp	w14, #0x1a
   42ff8:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   42ffc:	cmp	w13, w12, uxtb
   43000:	b.eq	42fd8 <mpfr_strtofr@@Base+0x114>  // b.none
   43004:	adrp	x11, 64000 <mpfr_bases@@Base+0x758>
   43008:	mov	x10, xzr
   4300c:	mov	w9, #0x5                   	// #5
   43010:	add	x11, x11, #0x439
   43014:	cmp	x10, #0x5
   43018:	b.eq	43150 <mpfr_strtofr@@Base+0x28c>  // b.none
   4301c:	ldrb	w12, [x27, x10]
   43020:	ldrb	w13, [x11, x10]
   43024:	add	x10, x10, #0x1
   43028:	sub	w14, w12, #0x41
   4302c:	add	w15, w12, #0x20
   43030:	cmp	w14, #0x1a
   43034:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   43038:	cmp	w13, w12, uxtb
   4303c:	b.eq	43014 <mpfr_strtofr@@Base+0x150>  // b.none
   43040:	cmp	w24, #0x10
   43044:	b.gt	430c0 <mpfr_strtofr@@Base+0x1fc>
   43048:	adrp	x11, 64000 <mpfr_bases@@Base+0x758>
   4304c:	mov	x10, xzr
   43050:	mov	w9, #0x8                   	// #8
   43054:	add	x11, x11, #0x43f
   43058:	cmp	x10, #0x8
   4305c:	b.eq	43150 <mpfr_strtofr@@Base+0x28c>  // b.none
   43060:	ldrb	w12, [x27, x10]
   43064:	ldrb	w13, [x11, x10]
   43068:	add	x10, x10, #0x1
   4306c:	sub	w14, w12, #0x41
   43070:	add	w15, w12, #0x20
   43074:	cmp	w14, #0x1a
   43078:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   4307c:	cmp	w13, w12, uxtb
   43080:	b.eq	43058 <mpfr_strtofr@@Base+0x194>  // b.none
   43084:	adrp	x11, 64000 <mpfr_bases@@Base+0x758>
   43088:	mov	x10, xzr
   4308c:	mov	w9, #0x3                   	// #3
   43090:	add	x11, x11, #0x448
   43094:	cmp	x10, #0x3
   43098:	b.eq	43150 <mpfr_strtofr@@Base+0x28c>  // b.none
   4309c:	ldrb	w12, [x27, x10]
   430a0:	ldrb	w13, [x11, x10]
   430a4:	add	x10, x10, #0x1
   430a8:	sub	w14, w12, #0x41
   430ac:	add	w15, w12, #0x20
   430b0:	cmp	w14, #0x1a
   430b4:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   430b8:	cmp	w13, w12, uxtb
   430bc:	b.eq	43094 <mpfr_strtofr@@Base+0x1d0>  // b.none
   430c0:	tst	w24, #0xffffffef
   430c4:	str	x19, [sp, #8]
   430c8:	str	w22, [sp, #4]
   430cc:	b.ne	431e8 <mpfr_strtofr@@Base+0x324>  // b.any
   430d0:	ldrb	w8, [x27]
   430d4:	cmp	w8, #0x30
   430d8:	b.ne	431e8 <mpfr_strtofr@@Base+0x324>  // b.any
   430dc:	ldrb	w8, [x27, #1]
   430e0:	orr	w8, w8, #0x20
   430e4:	cmp	w8, #0x78
   430e8:	b.ne	431e8 <mpfr_strtofr@@Base+0x324>  // b.any
   430ec:	add	x22, x27, #0x2
   430f0:	mov	w19, #0x10                  	// #16
   430f4:	b	4322c <mpfr_strtofr@@Base+0x368>
   430f8:	add	x20, x27, x9
   430fc:	ldrb	w8, [x20]
   43100:	cmp	w8, #0x28
   43104:	b.ne	4311c <mpfr_strtofr@@Base+0x258>  // b.any
   43108:	ldrb	w9, [x20, #1]
   4310c:	cmp	w9, #0x29
   43110:	b.ne	4319c <mpfr_strtofr@@Base+0x2d8>  // b.any
   43114:	mov	x8, x20
   43118:	add	x20, x8, #0x2
   4311c:	mov	x8, #0x2                   	// #2
   43120:	movk	x8, #0x8000, lsl #48
   43124:	str	x8, [x21, #16]
   43128:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4312c:	ldr	x1, [x0, #2640]
   43130:	add	x0, x0, #0xa50
   43134:	blr	x1
   43138:	mrs	x8, tpidr_el0
   4313c:	ldr	w9, [x8, x0]
   43140:	mov	w23, wzr
   43144:	orr	w9, w9, #0x4
   43148:	str	w9, [x8, x0]
   4314c:	b	43170 <mpfr_strtofr@@Base+0x2ac>
   43150:	cmp	w8, #0x2d
   43154:	mov	w8, #0xffffffff            	// #-1
   43158:	mov	w23, wzr
   4315c:	add	x20, x27, x9
   43160:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   43164:	cneg	w8, w8, ne  // ne = any
   43168:	str	x9, [x21, #16]
   4316c:	str	w8, [x21, #8]
   43170:	cbz	x19, 43178 <mpfr_strtofr@@Base+0x2b4>
   43174:	str	x20, [x19]
   43178:	mov	w0, w23
   4317c:	ldp	x20, x19, [sp, #160]
   43180:	ldp	x22, x21, [sp, #144]
   43184:	ldp	x24, x23, [sp, #128]
   43188:	ldp	x26, x25, [sp, #112]
   4318c:	ldp	x28, x27, [sp, #96]
   43190:	ldp	x29, x30, [sp, #80]
   43194:	add	sp, sp, #0xb0
   43198:	ret
   4319c:	mov	x8, x20
   431a0:	b	431b4 <mpfr_strtofr@@Base+0x2f0>
   431a4:	ldrb	w9, [x8, #2]
   431a8:	add	x8, x8, #0x1
   431ac:	cmp	w9, #0x29
   431b0:	b.eq	43118 <mpfr_strtofr@@Base+0x254>  // b.none
   431b4:	and	w10, w9, #0xffffffdf
   431b8:	sub	w10, w10, #0x41
   431bc:	and	w10, w10, #0xff
   431c0:	cmp	w10, #0x1a
   431c4:	b.cc	431a4 <mpfr_strtofr@@Base+0x2e0>  // b.lo, b.ul, b.last
   431c8:	and	w10, w9, #0xff
   431cc:	cmp	w10, #0x5f
   431d0:	b.eq	431a4 <mpfr_strtofr@@Base+0x2e0>  // b.none
   431d4:	sub	w9, w9, #0x30
   431d8:	and	w9, w9, #0xff
   431dc:	cmp	w9, #0x9
   431e0:	b.ls	431a4 <mpfr_strtofr@@Base+0x2e0>  // b.plast
   431e4:	b	4311c <mpfr_strtofr@@Base+0x258>
   431e8:	tst	w24, #0xfffffffd
   431ec:	b.ne	43218 <mpfr_strtofr@@Base+0x354>  // b.any
   431f0:	ldrb	w8, [x27]
   431f4:	cmp	w8, #0x30
   431f8:	b.ne	43218 <mpfr_strtofr@@Base+0x354>  // b.any
   431fc:	ldrb	w8, [x27, #1]
   43200:	orr	w8, w8, #0x20
   43204:	cmp	w8, #0x62
   43208:	b.ne	43218 <mpfr_strtofr@@Base+0x354>  // b.any
   4320c:	add	x22, x27, #0x2
   43210:	mov	w19, #0x2                   	// #2
   43214:	b	4322c <mpfr_strtofr@@Base+0x368>
   43218:	cmp	w24, #0x0
   4321c:	mov	w8, #0xa                   	// #10
   43220:	csel	w19, w8, w24, eq  // eq = none
   43224:	mov	x22, x27
   43228:	mov	x27, xzr
   4322c:	mov	x0, x22
   43230:	str	w19, [sp, #20]
   43234:	bl	bb10 <strlen@plt>
   43238:	add	x0, x0, #0x1
   4323c:	str	x0, [sp, #48]
   43240:	bl	ccd0 <mpfr_allocate_func@plt>
   43244:	add	x8, sp, #0x10
   43248:	cmp	w19, #0x24
   4324c:	mov	w9, #0xffffffa9            	// #-87
   43250:	mov	w10, #0xffffffc3            	// #-61
   43254:	mov	x24, x0
   43258:	add	x8, x8, #0x28
   4325c:	csel	w9, w10, w9, gt
   43260:	str	x0, [sp, #24]
   43264:	mov	w10, wzr
   43268:	mov	x26, x22
   4326c:	mov	x22, x27
   43270:	stp	xzr, xzr, [x8]
   43274:	add	x11, x26, #0x1
   43278:	mov	w12, w10
   4327c:	b	4328c <mpfr_strtofr@@Base+0x3c8>
   43280:	add	x11, x26, #0x1
   43284:	mov	w12, #0x1                   	// #1
   43288:	cbnz	w10, 432fc <mpfr_strtofr@@Base+0x438>
   4328c:	mov	x26, x11
   43290:	ldurb	w11, [x11, #-1]
   43294:	mov	w10, w12
   43298:	cmp	w11, #0x2e
   4329c:	b.eq	43280 <mpfr_strtofr@@Base+0x3bc>  // b.none
   432a0:	cmp	w11, w28
   432a4:	b.eq	43280 <mpfr_strtofr@@Base+0x3bc>  // b.none
   432a8:	sub	w12, w11, #0x30
   432ac:	cmp	w12, #0xa
   432b0:	b.cc	432c4 <mpfr_strtofr@@Base+0x400>  // b.lo, b.ul, b.last
   432b4:	sub	w12, w11, #0x61
   432b8:	cmp	w12, #0x19
   432bc:	b.hi	432e4 <mpfr_strtofr@@Base+0x420>  // b.pmore
   432c0:	add	w12, w9, w11
   432c4:	cmp	w12, w19
   432c8:	b.ge	432fc <mpfr_strtofr@@Base+0x438>  // b.tcont
   432cc:	strb	w12, [x24], #1
   432d0:	cbnz	w10, 43274 <mpfr_strtofr@@Base+0x3b0>
   432d4:	ldr	x11, [sp, #56]
   432d8:	add	x11, x11, #0x1
   432dc:	str	x11, [sp, #56]
   432e0:	b	43274 <mpfr_strtofr@@Base+0x3b0>
   432e4:	sub	w12, w11, #0x41
   432e8:	cmp	w12, #0x19
   432ec:	b.hi	432fc <mpfr_strtofr@@Base+0x438>  // b.pmore
   432f0:	sub	w12, w11, #0x37
   432f4:	cmp	w12, w19
   432f8:	b.lt	432cc <mpfr_strtofr@@Base+0x408>  // b.tstop
   432fc:	ldr	x25, [sp, #24]
   43300:	subs	x27, x24, x25
   43304:	str	x27, [sp, #40]
   43308:	b.ne	43324 <mpfr_strtofr@@Base+0x460>  // b.any
   4330c:	mov	x24, x25
   43310:	cbnz	x22, 43264 <mpfr_strtofr@@Base+0x3a0>
   43314:	ldr	x19, [sp, #8]
   43318:	mov	w23, #0xffffffff            	// #-1
   4331c:	cbnz	x25, 4349c <mpfr_strtofr@@Base+0x5d8>
   43320:	b	434b0 <mpfr_strtofr@@Base+0x5ec>
   43324:	mov	x20, x26
   43328:	ldrb	w8, [x20, #-1]!
   4332c:	cmp	w8, #0x40
   43330:	b.eq	43348 <mpfr_strtofr@@Base+0x484>  // b.none
   43334:	cmp	w19, #0xa
   43338:	b.gt	433a0 <mpfr_strtofr@@Base+0x4dc>
   4333c:	orr	w9, w8, #0x20
   43340:	cmp	w9, #0x65
   43344:	b.ne	433a0 <mpfr_strtofr@@Base+0x4dc>  // b.any
   43348:	ldr	x9, [x23]
   4334c:	ldrb	w10, [x26]
   43350:	ldrh	w9, [x9, x10, lsl #1]
   43354:	tbnz	w9, #13, 433a0 <mpfr_strtofr@@Base+0x4dc>
   43358:	sub	x1, x29, #0x8
   4335c:	mov	w2, #0xa                   	// #10
   43360:	mov	x0, x26
   43364:	bl	c640 <strtol@plt>
   43368:	ldur	x9, [x29, #-8]
   4336c:	ldr	x8, [sp, #56]
   43370:	cmp	x9, x26
   43374:	csel	x20, x20, x9, eq  // eq = none
   43378:	tbnz	x0, #63, 43518 <mpfr_strtofr@@Base+0x654>
   4337c:	ldr	x19, [sp, #8]
   43380:	tbnz	x8, #63, 43520 <mpfr_strtofr@@Base+0x65c>
   43384:	add	x8, x8, x0
   43388:	cmp	x8, #0x0
   4338c:	mov	w9, #0x1                   	// #1
   43390:	csel	x8, x0, x8, lt  // lt = tstop
   43394:	cinc	w23, w9, lt  // lt = tstop
   43398:	str	x8, [sp, #56]
   4339c:	b	433f4 <mpfr_strtofr@@Base+0x530>
   433a0:	cmp	w19, #0x2
   433a4:	b.eq	433b0 <mpfr_strtofr@@Base+0x4ec>  // b.none
   433a8:	cmp	w19, #0x10
   433ac:	b.ne	433ec <mpfr_strtofr@@Base+0x528>  // b.any
   433b0:	orr	w8, w8, #0x20
   433b4:	cmp	w8, #0x70
   433b8:	b.ne	433ec <mpfr_strtofr@@Base+0x528>  // b.any
   433bc:	ldr	x8, [x23]
   433c0:	ldrb	w9, [x26]
   433c4:	ldrh	w8, [x8, x9, lsl #1]
   433c8:	tbnz	w8, #13, 433ec <mpfr_strtofr@@Base+0x528>
   433cc:	sub	x1, x29, #0x8
   433d0:	mov	w2, #0xa                   	// #10
   433d4:	mov	x0, x26
   433d8:	bl	c640 <strtol@plt>
   433dc:	ldur	x8, [x29, #-8]
   433e0:	str	x0, [sp, #64]
   433e4:	cmp	x8, x26
   433e8:	csel	x20, x20, x8, eq  // eq = none
   433ec:	ldr	x19, [sp, #8]
   433f0:	mov	w23, #0x1                   	// #1
   433f4:	mov	x9, xzr
   433f8:	add	x8, x25, x27
   433fc:	mov	x10, #0xffffffffffffffff    	// #-1
   43400:	ldrb	w11, [x25, x9]
   43404:	cbnz	w11, 43430 <mpfr_strtofr@@Base+0x56c>
   43408:	ldr	x11, [sp, #56]
   4340c:	add	x9, x9, #0x1
   43410:	add	x12, x27, x10
   43414:	cmp	x27, x9
   43418:	sub	x11, x11, #0x1
   4341c:	sub	x10, x10, #0x1
   43420:	str	x12, [sp, #40]
   43424:	str	x11, [sp, #56]
   43428:	b.ne	43400 <mpfr_strtofr@@Base+0x53c>  // b.any
   4342c:	b	43468 <mpfr_strtofr@@Base+0x5a4>
   43430:	mov	x11, xzr
   43434:	sub	x10, x24, #0x1
   43438:	add	x8, x25, x9
   4343c:	sub	x12, x27, x9
   43440:	ldrb	w13, [x10, x11]
   43444:	cbnz	w13, 43494 <mpfr_strtofr@@Base+0x5d0>
   43448:	add	x14, x27, x11
   4344c:	add	x13, x12, x11
   43450:	sub	x14, x14, #0x1
   43454:	sub	x11, x11, #0x1
   43458:	sub	x13, x13, #0x1
   4345c:	cmp	x14, x9
   43460:	str	x13, [sp, #40]
   43464:	b.ne	43440 <mpfr_strtofr@@Base+0x57c>  // b.any
   43468:	str	x8, [sp, #32]
   4346c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   43470:	str	x8, [x21, #16]
   43474:	ldr	w8, [sp, #16]
   43478:	mov	w23, wzr
   4347c:	cmp	w8, #0x0
   43480:	mov	w8, #0x1                   	// #1
   43484:	cneg	w8, w8, ne  // ne = any
   43488:	str	w8, [x21, #8]
   4348c:	cbnz	x25, 4349c <mpfr_strtofr@@Base+0x5d8>
   43490:	b	434b0 <mpfr_strtofr@@Base+0x5ec>
   43494:	str	x8, [sp, #32]
   43498:	cbz	x25, 434b0 <mpfr_strtofr@@Base+0x5ec>
   4349c:	cmp	w23, #0x1
   434a0:	b.eq	434b0 <mpfr_strtofr@@Base+0x5ec>  // b.none
   434a4:	ldr	x1, [sp, #48]
   434a8:	mov	x0, x25
   434ac:	bl	cc00 <mpfr_free_func@plt>
   434b0:	cmp	w23, #0x1
   434b4:	b.eq	434d0 <mpfr_strtofr@@Base+0x60c>  // b.none
   434b8:	cmp	w23, #0x2
   434bc:	b.eq	434f4 <mpfr_strtofr@@Base+0x630>  // b.none
   434c0:	cmn	w23, #0x1
   434c4:	b.ne	43170 <mpfr_strtofr@@Base+0x2ac>  // b.any
   434c8:	mov	w23, wzr
   434cc:	b	43170 <mpfr_strtofr@@Base+0x2ac>
   434d0:	ldr	w2, [sp, #4]
   434d4:	add	x1, sp, #0x10
   434d8:	mov	x0, x21
   434dc:	bl	43588 <mpfr_strtofr@@Base+0x6c4>
   434e0:	ldr	x1, [sp, #48]
   434e4:	mov	w23, w0
   434e8:	mov	x0, x25
   434ec:	bl	cc00 <mpfr_free_func@plt>
   434f0:	b	43170 <mpfr_strtofr@@Base+0x2ac>
   434f4:	ldr	w8, [sp, #16]
   434f8:	ldr	w1, [sp, #4]
   434fc:	mov	x0, x21
   43500:	cmp	w8, #0x0
   43504:	mov	w8, #0x1                   	// #1
   43508:	cneg	w2, w8, ne  // ne = any
   4350c:	bl	bf90 <mpfr_overflow@plt>
   43510:	mov	w23, w0
   43514:	b	43170 <mpfr_strtofr@@Base+0x2ac>
   43518:	ldr	x19, [sp, #8]
   4351c:	tbnz	x8, #63, 43530 <mpfr_strtofr@@Base+0x66c>
   43520:	add	x8, x8, x0
   43524:	mov	w23, #0x1                   	// #1
   43528:	str	x8, [sp, #56]
   4352c:	b	433f4 <mpfr_strtofr@@Base+0x530>
   43530:	add	x8, x8, x0
   43534:	neg	x9, x0
   43538:	neg	x12, x8
   4353c:	mov	w10, #0x3                   	// #3
   43540:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   43544:	cmp	x12, x9
   43548:	csinc	w9, w10, wzr, cc  // cc = lo, ul, last
   4354c:	cmn	x8, x11
   43550:	csneg	x11, x0, x8, ne  // ne = any
   43554:	csel	w10, w9, w10, eq  // eq = none
   43558:	cmp	x12, #0x0
   4355c:	csel	x8, x11, x8, lt  // lt = tstop
   43560:	csel	w23, w10, w9, lt  // lt = tstop
   43564:	str	x8, [sp, #56]
   43568:	b	433f4 <mpfr_strtofr@@Base+0x530>
   4356c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   43570:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   43574:	add	x0, x0, #0x3fe
   43578:	add	x2, x2, #0x408
   4357c:	mov	w1, #0x3b0                 	// #944
   43580:	bl	cb20 <mpfr_assert_fail@plt>
   43584:	b	42f08 <mpfr_strtofr@@Base+0x44>
   43588:	stp	x29, x30, [sp, #-96]!
   4358c:	stp	x28, x27, [sp, #16]
   43590:	stp	x26, x25, [sp, #32]
   43594:	stp	x24, x23, [sp, #48]
   43598:	stp	x22, x21, [sp, #64]
   4359c:	stp	x20, x19, [sp, #80]
   435a0:	mov	x29, sp
   435a4:	sub	sp, sp, #0x70
   435a8:	ldr	x23, [x0]
   435ac:	mov	w22, w2
   435b0:	mov	x20, x0
   435b4:	mov	x21, x1
   435b8:	subs	x19, x23, #0x1
   435bc:	b.eq	44098 <mpfr_strtofr@@Base+0x11d4>  // b.none
   435c0:	b.le	440a0 <mpfr_strtofr@@Base+0x11dc>
   435c4:	clz	x8, x19
   435c8:	mov	w9, #0x40                  	// #64
   435cc:	sub	x8, x9, x8
   435d0:	cmp	w22, #0x0
   435d4:	add	x9, x8, x23
   435d8:	cinc	x8, x23, eq  // eq = none
   435dc:	stur	x8, [x29, #-72]
   435e0:	mov	w8, #0x40                  	// #64
   435e4:	stp	x20, x21, [x29, #-88]
   435e8:	stur	xzr, [x29, #-8]
   435ec:	stur	w22, [x29, #-92]
   435f0:	stur	x23, [x29, #-104]
   435f4:	stur	x8, [x29, #-56]
   435f8:	b	43624 <mpfr_strtofr@@Base+0x760>
   435fc:	mov	w8, #0x11                  	// #17
   43600:	ldur	x24, [x29, #-24]
   43604:	stur	x28, [x29, #-48]
   43608:	mov	x9, x25
   4360c:	cbz	w8, 43624 <mpfr_strtofr@@Base+0x760>
   43610:	b	43ea8 <mpfr_strtofr@@Base+0xfe4>
   43614:	ldur	x24, [x29, #-24]
   43618:	mov	w8, #0xe                   	// #14
   4361c:	mov	x9, x25
   43620:	cbnz	w8, 43ea8 <mpfr_strtofr@@Base+0xfe4>
   43624:	sub	x8, x9, #0x1
   43628:	mov	x25, x9
   4362c:	add	x9, x9, #0x3e
   43630:	cmp	x8, #0x0
   43634:	csel	x8, x9, x8, lt  // lt = tstop
   43638:	asr	x8, x8, #6
   4363c:	add	x20, x8, #0x1
   43640:	mov	w22, #0x8                   	// #8
   43644:	bfi	x22, x20, #4, #60
   43648:	add	x1, x22, #0x8
   4364c:	cmp	x1, #0x4, lsl #12
   43650:	lsl	x19, x20, #6
   43654:	stur	x8, [x29, #-40]
   43658:	b.hi	43e50 <mpfr_strtofr@@Base+0xf8c>  // b.pmore
   4365c:	add	x9, x1, #0xf
   43660:	mov	x8, sp
   43664:	and	x9, x9, #0xfffffffffffffff0
   43668:	sub	x0, x8, x9
   4366c:	mov	sp, x0
   43670:	ldr	w3, [x21, #4]
   43674:	adrp	x9, 64000 <mpfr_bases@@Base+0x758>
   43678:	add	x9, x9, #0x458
   4367c:	stur	x19, [x29, #-24]
   43680:	sub	w8, w3, #0x2
   43684:	add	x8, x9, w8, sxtw #3
   43688:	ldp	w8, w9, [x8]
   4368c:	add	x28, x0, x20, lsl #3
   43690:	mov	x27, x0
   43694:	mov	x0, x28
   43698:	sdiv	x10, x19, x9
   4369c:	msub	x11, x10, x9, x19
   436a0:	madd	x11, x11, x8, x9
   436a4:	sub	x11, x11, #0x1
   436a8:	udiv	x9, x11, x9
   436ac:	ldp	x1, x11, [x21, #16]
   436b0:	madd	x8, x10, x8, x9
   436b4:	add	x9, x8, #0x1
   436b8:	cmp	x9, x11
   436bc:	csinc	x19, x11, x8, hi  // hi = pmore
   436c0:	mov	x2, x19
   436c4:	bl	bbd0 <__gmpn_set_str@plt>
   436c8:	ldr	x8, [x21, #24]
   436cc:	sub	x2, x0, #0x1
   436d0:	ldr	x9, [x28, x2, lsl #3]
   436d4:	mov	x26, x0
   436d8:	cmp	x19, x8
   436dc:	cset	w10, eq  // eq = none
   436e0:	mov	x24, x20
   436e4:	subs	x23, x20, x0
   436e8:	clz	x20, x9
   436ec:	stur	w10, [x29, #-28]
   436f0:	b.mi	43748 <mpfr_strtofr@@Base+0x884>  // b.first
   436f4:	cbz	w20, 4370c <mpfr_strtofr@@Base+0x848>
   436f8:	add	x0, x28, x23, lsl #3
   436fc:	mov	x1, x28
   43700:	mov	x2, x26
   43704:	mov	w3, w20
   43708:	bl	bd10 <__gmpn_lshift@plt>
   4370c:	cmp	x23, #0x1
   43710:	b.lt	43738 <mpfr_strtofr@@Base+0x874>  // b.tstop
   43714:	cbnz	w20, 43728 <mpfr_strtofr@@Base+0x864>
   43718:	add	x0, x28, x23, lsl #3
   4371c:	mov	x1, x28
   43720:	mov	x2, x26
   43724:	bl	bb40 <__gmpn_copyd@plt>
   43728:	lsl	x2, x23, #3
   4372c:	mov	x0, x28
   43730:	mov	w1, wzr
   43734:	bl	c150 <memset@plt>
   43738:	lsl	x9, x23, #6
   4373c:	mov	x8, x20
   43740:	mov	x20, x9
   43744:	b	437e0 <mpfr_strtofr@@Base+0x91c>
   43748:	cmp	x19, x8
   4374c:	cbz	w20, 43770 <mpfr_strtofr@@Base+0x8ac>
   43750:	mov	x21, x25
   43754:	b.ne	43788 <mpfr_strtofr@@Base+0x8c4>  // b.any
   43758:	cmn	x23, #0x1
   4375c:	b.eq	437a4 <mpfr_strtofr@@Base+0x8e0>  // b.none
   43760:	ldr	x8, [x28]
   43764:	cmp	x8, #0x0
   43768:	cset	w25, eq  // eq = none
   4376c:	b	437a8 <mpfr_strtofr@@Base+0x8e4>
   43770:	b.ne	43790 <mpfr_strtofr@@Base+0x8cc>  // b.any
   43774:	ldr	x8, [x28]
   43778:	cmp	x8, #0x0
   4377c:	cset	w8, eq  // eq = none
   43780:	stur	w8, [x29, #-28]
   43784:	b	43794 <mpfr_strtofr@@Base+0x8d0>
   43788:	mov	w25, wzr
   4378c:	b	437a8 <mpfr_strtofr@@Base+0x8e4>
   43790:	stur	wzr, [x29, #-28]
   43794:	add	x1, x28, #0x8
   43798:	mov	x0, x28
   4379c:	bl	c510 <__gmpn_copyi@plt>
   437a0:	b	437dc <mpfr_strtofr@@Base+0x918>
   437a4:	mov	w25, #0x1                   	// #1
   437a8:	mvn	x8, x23
   437ac:	add	x1, x28, x8, lsl #3
   437b0:	mov	w8, #0x40                  	// #64
   437b4:	sub	w3, w8, w20
   437b8:	mov	x0, x28
   437bc:	mov	x2, x26
   437c0:	bl	bd30 <__gmpn_rshift@plt>
   437c4:	cmp	x0, #0x0
   437c8:	cset	w8, eq  // eq = none
   437cc:	and	w8, w25, w8
   437d0:	mov	x25, x21
   437d4:	ldur	x21, [x29, #-80]
   437d8:	stur	w8, [x29, #-28]
   437dc:	lsl	x8, x23, #6
   437e0:	ldr	w2, [x21, #4]
   437e4:	add	x20, x20, x8
   437e8:	neg	x26, x20
   437ec:	mov	x23, x24
   437f0:	sub	w8, w2, #0x1
   437f4:	tst	w2, w8
   437f8:	b.ne	43854 <mpfr_strtofr@@Base+0x990>  // b.any
   437fc:	ldr	x8, [x21, #40]
   43800:	sxtw	x9, w2
   43804:	clz	x9, x9
   43808:	mov	w10, #0x3f                  	// #63
   4380c:	cmp	x19, #0x0
   43810:	sub	w9, w10, w9
   43814:	b.gt	438f4 <mpfr_strtofr@@Base+0xa30>
   43818:	tbnz	x8, #63, 438f4 <mpfr_strtofr@@Base+0xa30>
   4381c:	ldur	x24, [x29, #-24]
   43820:	sub	x10, x8, x19
   43824:	cmp	x10, x8
   43828:	mov	w8, #0xe                   	// #14
   4382c:	b.cc	43608 <mpfr_strtofr@@Base+0x744>  // b.lo, b.ul, b.last
   43830:	tbnz	x10, #63, 43608 <mpfr_strtofr@@Base+0x744>
   43834:	cmp	x10, #0x1
   43838:	b.lt	43994 <mpfr_strtofr@@Base+0xad0>  // b.tstop
   4383c:	sxtw	x8, w9
   43840:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   43844:	sdiv	x9, x9, x8
   43848:	cmp	x9, x10
   4384c:	b.gt	439b8 <mpfr_strtofr@@Base+0xaf4>
   43850:	b	43fe0 <mpfr_strtofr@@Base+0x111c>
   43854:	ldr	x8, [x21, #40]
   43858:	lsl	x9, x23, #1
   4385c:	stur	x9, [x29, #-64]
   43860:	cmp	x8, x19
   43864:	b.le	43920 <mpfr_strtofr@@Base+0xa5c>
   43868:	cmp	x22, #0x4, lsl #12
   4386c:	b.hi	43e7c <mpfr_strtofr@@Base+0xfb8>  // b.pmore
   43870:	add	x10, x22, #0xf
   43874:	mov	x9, sp
   43878:	and	x10, x10, #0xfffffffffffffff0
   4387c:	sub	x9, x9, x10
   43880:	stur	x9, [x29, #-48]
   43884:	mov	sp, x9
   43888:	sub	x3, x8, x19
   4388c:	sub	x1, x29, #0x10
   43890:	mov	x0, x27
   43894:	mov	x4, x23
   43898:	bl	cbc0 <mpfr_mpn_exp@plt>
   4389c:	mov	x19, x0
   438a0:	cmn	w19, #0x2
   438a4:	b.eq	43614 <mpfr_strtofr@@Base+0x750>  // b.none
   438a8:	ldur	x0, [x29, #-48]
   438ac:	mov	x1, x28
   438b0:	mov	x2, x27
   438b4:	mov	x3, x23
   438b8:	bl	c460 <__gmpn_mul_n@plt>
   438bc:	ldur	x8, [x29, #-16]
   438c0:	cmn	w19, #0x1
   438c4:	mov	w10, #0x1                   	// #1
   438c8:	cset	w9, eq  // eq = none
   438cc:	csinc	x19, x10, x19, eq  // eq = none
   438d0:	cmn	x25, #0x7e
   438d4:	b.lt	43ad0 <mpfr_strtofr@@Base+0xc0c>  // b.tstop
   438d8:	tbnz	x8, #63, 43ad0 <mpfr_strtofr@@Base+0xc0c>
   438dc:	ldur	x24, [x29, #-24]
   438e0:	adds	x10, x8, x24
   438e4:	mov	w8, #0xe                   	// #14
   438e8:	b.cs	43608 <mpfr_strtofr@@Base+0x744>  // b.hs, b.nlast
   438ec:	tbz	x10, #63, 43ba8 <mpfr_strtofr@@Base+0xce4>
   438f0:	b	43608 <mpfr_strtofr@@Base+0x744>
   438f4:	ldur	x24, [x29, #-24]
   438f8:	cmp	x19, #0x1
   438fc:	b.lt	43988 <mpfr_strtofr@@Base+0xac4>  // b.tstop
   43900:	tbz	x8, #63, 43988 <mpfr_strtofr@@Base+0xac4>
   43904:	neg	x10, x8
   43908:	sub	x8, x19, x8
   4390c:	cmp	x8, x10
   43910:	b.cc	43f50 <mpfr_strtofr@@Base+0x108c>  // b.lo, b.ul, b.last
   43914:	tbnz	x8, #63, 43f50 <mpfr_strtofr@@Base+0x108c>
   43918:	neg	x10, x8
   4391c:	b	439a4 <mpfr_strtofr@@Base+0xae0>
   43920:	b.ge	43a14 <mpfr_strtofr@@Base+0xb50>  // b.tcont
   43924:	mov	w8, #0x18                  	// #24
   43928:	orr	x9, xzr, #0x8
   4392c:	madd	x1, x23, x8, x9
   43930:	mov	x24, x27
   43934:	cmp	x1, #0x4, lsl #12
   43938:	b.hi	43e98 <mpfr_strtofr@@Base+0xfd4>  // b.pmore
   4393c:	add	x9, x1, #0xf
   43940:	mov	x8, sp
   43944:	and	x9, x9, #0xfffffffffffffff0
   43948:	sub	x28, x8, x9
   4394c:	mov	sp, x28
   43950:	lsl	x2, x23, #3
   43954:	mov	x0, x24
   43958:	mov	w1, wzr
   4395c:	bl	c150 <memset@plt>
   43960:	ldr	x8, [x21, #40]
   43964:	tbnz	x19, #63, 43b30 <mpfr_strtofr@@Base+0xc6c>
   43968:	cmp	x8, #0x0
   4396c:	b.gt	43b54 <mpfr_strtofr@@Base+0xc90>
   43970:	sub	x3, x19, x8
   43974:	cmp	x3, x19
   43978:	mov	w8, #0x11                  	// #17
   4397c:	b.cc	43600 <mpfr_strtofr@@Base+0x73c>  // b.lo, b.ul, b.last
   43980:	tbz	x3, #63, 43b58 <mpfr_strtofr@@Base+0xc94>
   43984:	b	43600 <mpfr_strtofr@@Base+0x73c>
   43988:	sub	x10, x8, x19
   4398c:	cmp	x10, #0x1
   43990:	b.ge	4383c <mpfr_strtofr@@Base+0x978>  // b.tcont
   43994:	tbnz	x10, #63, 439a4 <mpfr_strtofr@@Base+0xae0>
   43998:	mov	x10, xzr
   4399c:	sxtw	x8, w9
   439a0:	b	439b8 <mpfr_strtofr@@Base+0xaf4>
   439a4:	sxtw	x8, w9
   439a8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   439ac:	sdiv	x9, x9, x8
   439b0:	cmp	x9, x10
   439b4:	b.ge	43f50 <mpfr_strtofr@@Base+0x108c>  // b.tcont
   439b8:	ldr	x9, [x21, #48]
   439bc:	mul	x8, x10, x8
   439c0:	tbnz	x8, #63, 439d4 <mpfr_strtofr@@Base+0xb10>
   439c4:	tbnz	x9, #63, 439d8 <mpfr_strtofr@@Base+0xb14>
   439c8:	adds	x8, x8, x9
   439cc:	b.pl	439dc <mpfr_strtofr@@Base+0xb18>  // b.nfrst
   439d0:	b	43618 <mpfr_strtofr@@Base+0x754>
   439d4:	tbnz	x9, #63, 43b08 <mpfr_strtofr@@Base+0xc44>
   439d8:	add	x8, x9, x8
   439dc:	orr	x9, x8, x26
   439e0:	tbnz	x9, #63, 43a24 <mpfr_strtofr@@Base+0xb60>
   439e4:	sub	x9, x8, x20
   439e8:	cmp	x9, x26
   439ec:	mov	w8, #0xe                   	// #14
   439f0:	b.cc	43608 <mpfr_strtofr@@Base+0x744>  // b.lo, b.ul, b.last
   439f4:	mov	x10, #0xfffffffffffffffd    	// #-3
   439f8:	movk	x10, #0x7fff, lsl #48
   439fc:	cmp	x9, x10
   43a00:	b.hi	43608 <mpfr_strtofr@@Base+0x744>  // b.pmore
   43a04:	ldur	w8, [x29, #-28]
   43a08:	mov	x19, xzr
   43a0c:	mov	x26, x9
   43a10:	b	43a6c <mpfr_strtofr@@Base+0xba8>
   43a14:	ldur	w8, [x29, #-28]
   43a18:	mov	x19, xzr
   43a1c:	ldur	x24, [x29, #-24]
   43a20:	b	43a6c <mpfr_strtofr@@Base+0xba8>
   43a24:	tst	x8, x26
   43a28:	sub	x26, x8, x20
   43a2c:	b.ge	43a64 <mpfr_strtofr@@Base+0xba0>  // b.tcont
   43a30:	neg	x8, x26
   43a34:	cmp	x20, x8
   43a38:	b.hi	43f50 <mpfr_strtofr@@Base+0x108c>  // b.pmore
   43a3c:	mov	x9, #0xfffffffffffffffd    	// #-3
   43a40:	movk	x9, #0x7fff, lsl #48
   43a44:	cmp	x8, x9
   43a48:	b.ls	43a64 <mpfr_strtofr@@Base+0xba0>  // b.plast
   43a4c:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   43a50:	cmp	x8, x9
   43a54:	b.ne	43f50 <mpfr_strtofr@@Base+0x108c>  // b.any
   43a58:	mov	x8, #0xfffffffffffffffd    	// #-3
   43a5c:	movk	x8, #0x7fff, lsl #48
   43a60:	add	x26, x8, #0x5
   43a64:	ldur	w8, [x29, #-28]
   43a68:	mov	x19, xzr
   43a6c:	stur	x28, [x29, #-48]
   43a70:	cbnz	w8, 43ecc <mpfr_strtofr@@Base+0x1008>
   43a74:	ldur	x3, [x29, #-72]
   43a78:	sxtw	x8, w19
   43a7c:	mvn	x8, x8
   43a80:	add	x2, x24, x8
   43a84:	mov	x0, x28
   43a88:	mov	x1, x23
   43a8c:	bl	c370 <mpfr_round_p@plt>
   43a90:	cbnz	w0, 43ecc <mpfr_strtofr@@Base+0x1008>
   43a94:	mov	x8, #0xfffffffffffffffd    	// #-3
   43a98:	ldur	x9, [x29, #-56]
   43a9c:	movk	x8, #0x7fff, lsl #48
   43aa0:	sub	x8, x8, x25
   43aa4:	sub	x8, x8, #0xfe
   43aa8:	cmp	x9, x8
   43aac:	b.gt	43e5c <mpfr_strtofr@@Base+0xf98>
   43ab0:	add	x9, x25, x9
   43ab4:	cmp	x9, #0x0
   43ab8:	cinc	x10, x9, lt  // lt = tstop
   43abc:	mov	w8, wzr
   43ac0:	asr	x10, x10, #1
   43ac4:	stur	x10, [x29, #-56]
   43ac8:	cbz	w8, 43624 <mpfr_strtofr@@Base+0x760>
   43acc:	b	43ea8 <mpfr_strtofr@@Base+0xfe4>
   43ad0:	ldur	x24, [x29, #-24]
   43ad4:	cmn	x25, #0x7f
   43ad8:	b.gt	43ba4 <mpfr_strtofr@@Base+0xce0>
   43adc:	tbz	x8, #63, 43ba4 <mpfr_strtofr@@Base+0xce0>
   43ae0:	add	x10, x8, x24
   43ae4:	neg	x11, x8
   43ae8:	neg	x8, x10
   43aec:	cmp	x8, x11
   43af0:	b.cc	43dd8 <mpfr_strtofr@@Base+0xf14>  // b.lo, b.ul, b.last
   43af4:	tbz	x8, #63, 43ba8 <mpfr_strtofr@@Base+0xce4>
   43af8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   43afc:	cmp	x8, x10
   43b00:	b.ne	43dd8 <mpfr_strtofr@@Base+0xf14>  // b.any
   43b04:	b	43ba8 <mpfr_strtofr@@Base+0xce4>
   43b08:	neg	x10, x8
   43b0c:	add	x8, x8, x9
   43b10:	neg	x9, x8
   43b14:	cmp	x9, x10
   43b18:	b.cc	43f50 <mpfr_strtofr@@Base+0x108c>  // b.lo, b.ul, b.last
   43b1c:	tbz	x9, #63, 439dc <mpfr_strtofr@@Base+0xb18>
   43b20:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   43b24:	cmp	x9, x8
   43b28:	b.eq	439dc <mpfr_strtofr@@Base+0xb18>  // b.none
   43b2c:	b	43f50 <mpfr_strtofr@@Base+0x108c>
   43b30:	cmp	x8, #0x1
   43b34:	b.lt	43b54 <mpfr_strtofr@@Base+0xc90>  // b.tstop
   43b38:	neg	x9, x19
   43b3c:	sub	x8, x8, x19
   43b40:	cmp	x8, x9
   43b44:	b.cc	43e40 <mpfr_strtofr@@Base+0xf7c>  // b.lo, b.ul, b.last
   43b48:	tbnz	x8, #63, 43e34 <mpfr_strtofr@@Base+0xf70>
   43b4c:	neg	x3, x8
   43b50:	b	43b58 <mpfr_strtofr@@Base+0xc94>
   43b54:	sub	x3, x19, x8
   43b58:	ldur	x8, [x29, #-64]
   43b5c:	stur	x3, [x29, #-16]
   43b60:	ldr	w2, [x21, #4]
   43b64:	sub	x1, x29, #0x10
   43b68:	add	x27, x28, x8, lsl #3
   43b6c:	add	x22, x27, #0x8
   43b70:	mov	x0, x22
   43b74:	mov	x4, x23
   43b78:	bl	cbc0 <mpfr_mpn_exp@plt>
   43b7c:	mov	x19, x0
   43b80:	cmn	w19, #0x2
   43b84:	b.eq	435fc <mpfr_strtofr@@Base+0x738>  // b.none
   43b88:	cmn	w19, #0x1
   43b8c:	b.ne	43bd8 <mpfr_strtofr@@Base+0xd14>  // b.any
   43b90:	mov	x19, xzr
   43b94:	ldur	x8, [x29, #-16]
   43b98:	cmn	x25, #0x7e
   43b9c:	b.ge	43be8 <mpfr_strtofr@@Base+0xd24>  // b.tcont
   43ba0:	b	43c04 <mpfr_strtofr@@Base+0xd40>
   43ba4:	add	x10, x8, x24
   43ba8:	orr	x8, x10, x26
   43bac:	stur	x10, [x29, #-16]
   43bb0:	tbnz	x8, #63, 43c3c <mpfr_strtofr@@Base+0xd78>
   43bb4:	sub	x22, x10, x20
   43bb8:	cmp	x22, x26
   43bbc:	mov	w8, #0xe                   	// #14
   43bc0:	b.cc	43608 <mpfr_strtofr@@Base+0x744>  // b.lo, b.ul, b.last
   43bc4:	mov	x10, #0xfffffffffffffffd    	// #-3
   43bc8:	movk	x10, #0x7fff, lsl #48
   43bcc:	cmp	x22, x10
   43bd0:	b.ls	43c48 <mpfr_strtofr@@Base+0xd84>  // b.plast
   43bd4:	b	43608 <mpfr_strtofr@@Base+0x744>
   43bd8:	stur	wzr, [x29, #-28]
   43bdc:	ldur	x8, [x29, #-16]
   43be0:	cmn	x25, #0x7e
   43be4:	b.lt	43c04 <mpfr_strtofr@@Base+0xd40>  // b.tstop
   43be8:	tbnz	x8, #63, 43c04 <mpfr_strtofr@@Base+0xd40>
   43bec:	ldur	x9, [x29, #-24]
   43bf0:	adds	x9, x8, x9
   43bf4:	mov	w8, #0x11                  	// #17
   43bf8:	b.cs	43600 <mpfr_strtofr@@Base+0x73c>  // b.hs, b.nlast
   43bfc:	tbz	x9, #63, 43cc4 <mpfr_strtofr@@Base+0xe00>
   43c00:	b	43600 <mpfr_strtofr@@Base+0x73c>
   43c04:	cmn	x25, #0x7f
   43c08:	b.gt	43cbc <mpfr_strtofr@@Base+0xdf8>
   43c0c:	tbz	x8, #63, 43cbc <mpfr_strtofr@@Base+0xdf8>
   43c10:	ldur	x9, [x29, #-24]
   43c14:	neg	x10, x8
   43c18:	add	x9, x8, x9
   43c1c:	neg	x8, x9
   43c20:	cmp	x8, x10
   43c24:	b.cc	43e40 <mpfr_strtofr@@Base+0xf7c>  // b.lo, b.ul, b.last
   43c28:	tbz	x8, #63, 43cc4 <mpfr_strtofr@@Base+0xe00>
   43c2c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   43c30:	cmp	x8, x9
   43c34:	b.ne	43e40 <mpfr_strtofr@@Base+0xf7c>  // b.any
   43c38:	b	43cc4 <mpfr_strtofr@@Base+0xe00>
   43c3c:	tst	x10, x26
   43c40:	sub	x22, x10, x20
   43c44:	b.lt	43da0 <mpfr_strtofr@@Base+0xedc>  // b.tstop
   43c48:	ldur	x10, [x29, #-48]
   43c4c:	ldur	x8, [x29, #-64]
   43c50:	ldur	w11, [x29, #-28]
   43c54:	add	x8, x10, x8, lsl #3
   43c58:	ldur	x8, [x8, #-8]
   43c5c:	and	w20, w11, w9
   43c60:	tbnz	x8, #63, 43ca4 <mpfr_strtofr@@Base+0xde0>
   43c64:	ldur	x8, [x29, #-40]
   43c68:	mov	w3, #0x1                   	// #1
   43c6c:	add	x0, x10, x8, lsl #3
   43c70:	add	x2, x8, #0x2
   43c74:	mov	x1, x0
   43c78:	bl	bd10 <__gmpn_lshift@plt>
   43c7c:	sub	x26, x22, #0x1
   43c80:	cbz	w20, 43cac <mpfr_strtofr@@Base+0xde8>
   43c84:	ldur	x28, [x29, #-48]
   43c88:	mov	x1, xzr
   43c8c:	mov	x0, x28
   43c90:	bl	ca80 <__gmpn_scan1@plt>
   43c94:	cmp	x0, x24
   43c98:	cset	w8, cs  // cs = hs, nlast
   43c9c:	add	x28, x28, x23, lsl #3
   43ca0:	b	43a6c <mpfr_strtofr@@Base+0xba8>
   43ca4:	mov	x26, x22
   43ca8:	cbnz	w20, 43c84 <mpfr_strtofr@@Base+0xdc0>
   43cac:	ldur	x28, [x29, #-48]
   43cb0:	mov	w8, wzr
   43cb4:	add	x28, x28, x23, lsl #3
   43cb8:	b	43a6c <mpfr_strtofr@@Base+0xba8>
   43cbc:	ldur	x9, [x29, #-24]
   43cc0:	add	x9, x8, x9
   43cc4:	stur	x9, [x29, #-16]
   43cc8:	tbnz	x26, #63, 43cf8 <mpfr_strtofr@@Base+0xe34>
   43ccc:	cmp	x9, #0x0
   43cd0:	b.gt	43d34 <mpfr_strtofr@@Base+0xe70>
   43cd4:	sub	x20, x26, x9
   43cd8:	cmp	x20, x26
   43cdc:	mov	w8, #0xe                   	// #14
   43ce0:	b.cc	43600 <mpfr_strtofr@@Base+0x73c>  // b.lo, b.ul, b.last
   43ce4:	mov	x9, #0xfffffffffffffffd    	// #-3
   43ce8:	movk	x9, #0x7fff, lsl #48
   43cec:	cmp	x20, x9
   43cf0:	b.ls	43d38 <mpfr_strtofr@@Base+0xe74>  // b.plast
   43cf4:	b	43600 <mpfr_strtofr@@Base+0x73c>
   43cf8:	cmp	x9, #0x1
   43cfc:	b.lt	43d34 <mpfr_strtofr@@Base+0xe70>  // b.tstop
   43d00:	adds	x8, x9, x20
   43d04:	b.cs	435fc <mpfr_strtofr@@Base+0x738>  // b.hs, b.nlast
   43d08:	mov	x9, #0xfffffffffffffffd    	// #-3
   43d0c:	movk	x9, #0x7fff, lsl #48
   43d10:	cmp	x8, x9
   43d14:	b.ls	43e48 <mpfr_strtofr@@Base+0xf84>  // b.plast
   43d18:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   43d1c:	cmp	x8, x9
   43d20:	b.ne	435fc <mpfr_strtofr@@Base+0x738>  // b.any
   43d24:	mov	x8, #0xfffffffffffffffd    	// #-3
   43d28:	movk	x8, #0x7fff, lsl #48
   43d2c:	add	x20, x8, #0x5
   43d30:	b	43d38 <mpfr_strtofr@@Base+0xe74>
   43d34:	sub	x20, x26, x9
   43d38:	ldur	x4, [x29, #-64]
   43d3c:	add	x0, x28, x23, lsl #3
   43d40:	mov	x3, x24
   43d44:	mov	x1, x28
   43d48:	mov	x2, xzr
   43d4c:	mov	x5, x22
   43d50:	mov	x6, x23
   43d54:	mov	x24, x0
   43d58:	bl	bac0 <__gmpn_tdiv_qr@plt>
   43d5c:	ldur	w8, [x29, #-28]
   43d60:	cbz	w8, 43de8 <mpfr_strtofr@@Base+0xf24>
   43d64:	mov	x0, x28
   43d68:	mov	x1, x23
   43d6c:	bl	c850 <__gmpn_popcount@plt>
   43d70:	cmp	x0, #0x0
   43d74:	cset	w9, eq  // eq = none
   43d78:	ldr	x8, [x27]
   43d7c:	add	x19, x19, #0x1
   43d80:	cmp	x8, #0x1
   43d84:	b.ne	43dfc <mpfr_strtofr@@Base+0xf38>  // b.any
   43d88:	cbz	w9, 43e04 <mpfr_strtofr@@Base+0xf40>
   43d8c:	ldrb	w8, [x24]
   43d90:	mov	x0, x24
   43d94:	tst	w8, #0x1
   43d98:	cset	w22, eq  // eq = none
   43d9c:	b	43e0c <mpfr_strtofr@@Base+0xf48>
   43da0:	neg	x8, x22
   43da4:	cmp	x20, x8
   43da8:	b.hi	43dd8 <mpfr_strtofr@@Base+0xf14>  // b.pmore
   43dac:	mov	x10, #0xfffffffffffffffd    	// #-3
   43db0:	movk	x10, #0x7fff, lsl #48
   43db4:	cmp	x8, x10
   43db8:	b.ls	43c48 <mpfr_strtofr@@Base+0xd84>  // b.plast
   43dbc:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
   43dc0:	cmp	x8, x10
   43dc4:	b.ne	43dd8 <mpfr_strtofr@@Base+0xf14>  // b.any
   43dc8:	mov	x8, #0xfffffffffffffffd    	// #-3
   43dcc:	movk	x8, #0x7fff, lsl #48
   43dd0:	add	x22, x8, #0x5
   43dd4:	b	43c48 <mpfr_strtofr@@Base+0xd84>
   43dd8:	mov	w8, #0x11                  	// #17
   43ddc:	mov	x9, x25
   43de0:	cbz	w8, 43624 <mpfr_strtofr@@Base+0x760>
   43de4:	b	43ea8 <mpfr_strtofr@@Base+0xfe4>
   43de8:	mov	w9, wzr
   43dec:	ldr	x8, [x27]
   43df0:	add	x19, x19, #0x1
   43df4:	cmp	x8, #0x1
   43df8:	b.eq	43d88 <mpfr_strtofr@@Base+0xec4>  // b.none
   43dfc:	mov	w8, w9
   43e00:	b	43e28 <mpfr_strtofr@@Base+0xf64>
   43e04:	mov	w22, wzr
   43e08:	mov	x0, x24
   43e0c:	ldur	x8, [x29, #-40]
   43e10:	mov	w3, #0x1                   	// #1
   43e14:	mov	x1, x0
   43e18:	add	x2, x8, #0x2
   43e1c:	bl	bd30 <__gmpn_rshift@plt>
   43e20:	add	x20, x20, #0x1
   43e24:	mov	w8, w22
   43e28:	mov	x26, x20
   43e2c:	mov	x28, x24
   43e30:	b	43a1c <mpfr_strtofr@@Base+0xb58>
   43e34:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   43e38:	cmp	x8, x3
   43e3c:	b.eq	43b58 <mpfr_strtofr@@Base+0xc94>  // b.none
   43e40:	mov	w8, #0xe                   	// #14
   43e44:	b	43600 <mpfr_strtofr@@Base+0x73c>
   43e48:	neg	x20, x8
   43e4c:	b	43d38 <mpfr_strtofr@@Base+0xe74>
   43e50:	sub	x0, x29, #0x8
   43e54:	bl	be10 <mpfr_tmp_allocate@plt>
   43e58:	b	43670 <mpfr_strtofr@@Base+0x7ac>
   43e5c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   43e60:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   43e64:	mov	w1, #0x372                 	// #882
   43e68:	add	x0, x0, #0x3fe
   43e6c:	add	x2, x2, #0x622
   43e70:	bl	cb20 <mpfr_assert_fail@plt>
   43e74:	ldur	x9, [x29, #-56]
   43e78:	b	43ab0 <mpfr_strtofr@@Base+0xbec>
   43e7c:	sub	x0, x29, #0x8
   43e80:	mov	x1, x22
   43e84:	bl	be10 <mpfr_tmp_allocate@plt>
   43e88:	ldr	w2, [x21, #4]
   43e8c:	ldr	x8, [x21, #40]
   43e90:	stur	x0, [x29, #-48]
   43e94:	b	43888 <mpfr_strtofr@@Base+0x9c4>
   43e98:	sub	x0, x29, #0x8
   43e9c:	bl	be10 <mpfr_tmp_allocate@plt>
   43ea0:	mov	x28, x0
   43ea4:	b	43950 <mpfr_strtofr@@Base+0xa8c>
   43ea8:	cmp	w8, #0x11
   43eac:	b.eq	43f50 <mpfr_strtofr@@Base+0x108c>  // b.none
   43eb0:	cmp	w8, #0xe
   43eb4:	b.eq	43fe0 <mpfr_strtofr@@Base+0x111c>  // b.none
   43eb8:	ldur	x19, [x29, #-88]
   43ebc:	ldur	w20, [x29, #-92]
   43ec0:	cmp	w8, #0x4
   43ec4:	b.eq	43ed4 <mpfr_strtofr@@Base+0x1010>  // b.none
   43ec8:	b	43f88 <mpfr_strtofr@@Base+0x10c4>
   43ecc:	ldur	x19, [x29, #-88]
   43ed0:	ldur	w20, [x29, #-92]
   43ed4:	ldr	x0, [x19, #24]
   43ed8:	ldr	w3, [x21]
   43edc:	ldur	x1, [x29, #-48]
   43ee0:	ldur	x4, [x29, #-104]
   43ee4:	sub	x6, x29, #0x10
   43ee8:	mov	x2, x24
   43eec:	mov	w5, w20
   43ef0:	bl	ca00 <mpfr_round_raw@plt>
   43ef4:	cbz	w0, 43f20 <mpfr_strtofr@@Base+0x105c>
   43ef8:	ldr	x8, [x19]
   43efc:	ldr	x9, [x19, #24]
   43f00:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   43f04:	add	x26, x26, #0x1
   43f08:	sub	x11, x8, #0x1
   43f0c:	add	x8, x8, #0x3e
   43f10:	cmp	x11, #0x0
   43f14:	csel	x8, x8, x11, lt  // lt = tstop
   43f18:	asr	x8, x8, #6
   43f1c:	str	x10, [x9, x8, lsl #3]
   43f20:	ldr	w8, [x21]
   43f24:	mov	w9, #0x1                   	// #1
   43f28:	cmp	w8, #0x0
   43f2c:	cneg	w9, w9, ne  // ne = any
   43f30:	cmn	x25, #0x7e
   43f34:	str	w9, [x19, #8]
   43f38:	b.lt	43fac <mpfr_strtofr@@Base+0x10e8>  // b.tstop
   43f3c:	tbnz	x26, #63, 43fac <mpfr_strtofr@@Base+0x10e8>
   43f40:	adds	x9, x26, x24
   43f44:	b.cs	43fec <mpfr_strtofr@@Base+0x1128>  // b.hs, b.nlast
   43f48:	tbz	x9, #63, 44024 <mpfr_strtofr@@Base+0x1160>
   43f4c:	b	43fec <mpfr_strtofr@@Base+0x1128>
   43f50:	ldr	w8, [x21]
   43f54:	ldur	x19, [x29, #-88]
   43f58:	ldur	w20, [x29, #-92]
   43f5c:	cmp	w20, #0x0
   43f60:	csinc	w1, w20, wzr, ne  // ne = any
   43f64:	cmp	w8, #0x0
   43f68:	mov	w8, #0x1                   	// #1
   43f6c:	cneg	w2, w8, ne  // ne = any
   43f70:	mov	x0, x19
   43f74:	bl	c3c0 <mpfr_underflow@plt>
   43f78:	mov	w8, w0
   43f7c:	stur	w0, [x29, #-16]
   43f80:	ldur	x0, [x29, #-8]
   43f84:	cbnz	x0, 44014 <mpfr_strtofr@@Base+0x1150>
   43f88:	mov	w0, w8
   43f8c:	mov	sp, x29
   43f90:	ldp	x20, x19, [sp, #80]
   43f94:	ldp	x22, x21, [sp, #64]
   43f98:	ldp	x24, x23, [sp, #48]
   43f9c:	ldp	x26, x25, [sp, #32]
   43fa0:	ldp	x28, x27, [sp, #16]
   43fa4:	ldp	x29, x30, [sp], #96
   43fa8:	ret
   43fac:	cmn	x25, #0x7f
   43fb0:	b.gt	44020 <mpfr_strtofr@@Base+0x115c>
   43fb4:	tbz	x26, #63, 44020 <mpfr_strtofr@@Base+0x115c>
   43fb8:	add	x9, x26, x24
   43fbc:	neg	x11, x26
   43fc0:	neg	x10, x9
   43fc4:	cmp	x10, x11
   43fc8:	b.cc	43f5c <mpfr_strtofr@@Base+0x1098>  // b.lo, b.ul, b.last
   43fcc:	tbz	x10, #63, 44024 <mpfr_strtofr@@Base+0x1160>
   43fd0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   43fd4:	cmp	x10, x9
   43fd8:	b.ne	43f5c <mpfr_strtofr@@Base+0x1098>  // b.any
   43fdc:	b	44024 <mpfr_strtofr@@Base+0x1160>
   43fe0:	ldr	w8, [x21]
   43fe4:	ldur	x19, [x29, #-88]
   43fe8:	ldur	w20, [x29, #-92]
   43fec:	cmp	w8, #0x0
   43ff0:	mov	w8, #0x1                   	// #1
   43ff4:	cneg	w2, w8, ne  // ne = any
   43ff8:	mov	x0, x19
   43ffc:	mov	w1, w20
   44000:	bl	bf90 <mpfr_overflow@plt>
   44004:	mov	w8, w0
   44008:	stur	w0, [x29, #-16]
   4400c:	ldur	x0, [x29, #-8]
   44010:	cbz	x0, 43f88 <mpfr_strtofr@@Base+0x10c4>
   44014:	bl	c400 <mpfr_tmp_free@plt>
   44018:	ldur	w8, [x29, #-16]
   4401c:	b	43f88 <mpfr_strtofr@@Base+0x10c4>
   44020:	add	x9, x26, x24
   44024:	str	x9, [x19, #16]
   44028:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4402c:	ldr	x1, [x0, #2576]
   44030:	add	x0, x0, #0xa10
   44034:	blr	x1
   44038:	mrs	x10, tpidr_el0
   4403c:	ldr	x11, [x10, x0]
   44040:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44044:	ldr	x1, [x0, #2608]
   44048:	add	x0, x0, #0xa30
   4404c:	blr	x1
   44050:	ldur	w8, [x29, #-16]
   44054:	cmp	x9, x11
   44058:	b.lt	440bc <mpfr_strtofr@@Base+0x11f8>  // b.tstop
   4405c:	ldr	x11, [x10, x0]
   44060:	cmp	x9, x11
   44064:	b.gt	440bc <mpfr_strtofr@@Base+0x11f8>
   44068:	cbz	w8, 44088 <mpfr_strtofr@@Base+0x11c4>
   4406c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44070:	ldr	x1, [x0, #2640]
   44074:	add	x0, x0, #0xa50
   44078:	blr	x1
   4407c:	ldr	w9, [x10, x0]
   44080:	orr	w9, w9, #0x8
   44084:	str	w9, [x10, x0]
   44088:	stur	w8, [x29, #-16]
   4408c:	ldur	x0, [x29, #-8]
   44090:	cbz	x0, 43f88 <mpfr_strtofr@@Base+0x10c4>
   44094:	b	44014 <mpfr_strtofr@@Base+0x1150>
   44098:	mov	x8, xzr
   4409c:	b	435d0 <mpfr_strtofr@@Base+0x70c>
   440a0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   440a4:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   440a8:	add	x0, x0, #0x3fe
   440ac:	add	x2, x2, #0x44c
   440b0:	mov	w1, #0x1d4                 	// #468
   440b4:	bl	cb20 <mpfr_assert_fail@plt>
   440b8:	b	435c4 <mpfr_strtofr@@Base+0x700>
   440bc:	mov	x0, x19
   440c0:	mov	w1, w8
   440c4:	mov	w2, w20
   440c8:	bl	cb10 <mpfr_check_range@plt>
   440cc:	mov	w8, w0
   440d0:	stur	w8, [x29, #-16]
   440d4:	ldur	x0, [x29, #-8]
   440d8:	cbz	x0, 43f88 <mpfr_strtofr@@Base+0x10c4>
   440dc:	b	44014 <mpfr_strtofr@@Base+0x1150>

00000000000440e0 <mpfr_pow_z@@Base>:
   440e0:	sub	sp, sp, #0xe0
   440e4:	stp	x29, x30, [sp, #128]
   440e8:	stp	x28, x27, [sp, #144]
   440ec:	stp	x26, x25, [sp, #160]
   440f0:	stp	x24, x23, [sp, #176]
   440f4:	stp	x22, x21, [sp, #192]
   440f8:	stp	x20, x19, [sp, #208]
   440fc:	ldr	w10, [x2, #4]
   44100:	mov	w27, w3
   44104:	mov	x19, x0
   44108:	add	x29, sp, #0x80
   4410c:	cmp	w10, #0x0
   44110:	cset	w8, ne  // ne = any
   44114:	cbz	w10, 44484 <mpfr_pow_z@@Base+0x3a4>
   44118:	ldr	x9, [x1, #16]
   4411c:	mov	x12, #0x2                   	// #2
   44120:	movk	x12, #0x8000, lsl #48
   44124:	add	x11, x12, #0x2
   44128:	mov	x21, x2
   4412c:	mov	x22, x1
   44130:	cmp	x9, x11
   44134:	b.lt	4449c <mpfr_pow_z@@Base+0x3bc>  // b.tstop
   44138:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4413c:	ldr	x1, [x0, #2640]
   44140:	add	x0, x0, #0xa50
   44144:	blr	x1
   44148:	mrs	x28, tpidr_el0
   4414c:	ldr	w26, [x28, x0]
   44150:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44154:	ldr	x1, [x0, #2576]
   44158:	add	x0, x0, #0xa10
   4415c:	blr	x1
   44160:	ldr	x20, [x28, x0]
   44164:	mov	x8, x0
   44168:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4416c:	ldr	x1, [x0, #2608]
   44170:	add	x0, x0, #0xa30
   44174:	blr	x1
   44178:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4417c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   44180:	ldr	x24, [x28, x0]
   44184:	str	x10, [x28, x8]
   44188:	str	x11, [x28, x0]
   4418c:	ldrsw	x1, [x22, #8]
   44190:	sub	x2, x9, #0x1
   44194:	mov	x0, x22
   44198:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4419c:	cbz	w0, 444d0 <mpfr_pow_z@@Base+0x3f0>
   441a0:	ldr	w8, [x21, #4]
   441a4:	cmp	w8, #0x1
   441a8:	b.lt	441e4 <mpfr_pow_z@@Base+0x104>  // b.tstop
   441ac:	mov	w4, #0x1                   	// #1
   441b0:	mov	x0, x19
   441b4:	mov	x1, x22
   441b8:	mov	x2, x21
   441bc:	mov	w3, w27
   441c0:	bl	44874 <mpfr_pow_z@@Base+0x794>
   441c4:	mov	w21, w0
   441c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   441cc:	ldr	x1, [x0, #2640]
   441d0:	add	x0, x0, #0xa50
   441d4:	blr	x1
   441d8:	ldr	w8, [x28, x0]
   441dc:	orr	w26, w8, w26
   441e0:	b	443f4 <mpfr_pow_z@@Base+0x314>
   441e4:	ldr	x9, [x21, #8]
   441e8:	neg	w8, w8
   441ec:	ldr	x23, [x19]
   441f0:	str	x24, [sp, #16]
   441f4:	add	x9, x9, w8, uxtw #3
   441f8:	ldur	x9, [x9, #-8]
   441fc:	lsl	x8, x8, #6
   44200:	subs	x25, x23, #0x1
   44204:	clz	x9, x9
   44208:	sub	x24, x8, x9
   4420c:	b.eq	4465c <mpfr_pow_z@@Base+0x57c>  // b.none
   44210:	b.le	446d8 <mpfr_pow_z@@Base+0x5f8>
   44214:	clz	x8, x25
   44218:	mov	w9, #0x40                  	// #64
   4421c:	sub	x8, x9, x8
   44220:	add	x9, x23, x24
   44224:	add	x8, x9, x8
   44228:	add	x23, x8, #0x3
   4422c:	sub	x0, x29, #0x20
   44230:	mov	x1, x23
   44234:	str	x20, [sp, #24]
   44238:	bl	ca60 <mpfr_init2@plt>
   4423c:	ldr	x8, [x22, #16]
   44240:	cmp	x8, #0x1
   44244:	b.lt	4425c <mpfr_pow_z@@Base+0x17c>  // b.tstop
   44248:	ldr	w8, [x22, #8]
   4424c:	cmp	w8, #0x0
   44250:	mov	w8, #0x2                   	// #2
   44254:	cinc	w3, w8, le
   44258:	b	44260 <mpfr_pow_z@@Base+0x180>
   4425c:	mov	w3, #0x1                   	// #1
   44260:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44264:	ldr	x1, [x0, #2640]
   44268:	add	x0, x0, #0xa50
   4426c:	blr	x1
   44270:	mov	x25, x0
   44274:	str	wzr, [x28, x0]
   44278:	sub	x0, x29, #0x20
   4427c:	mov	w1, #0x1                   	// #1
   44280:	mov	x2, x22
   44284:	str	w3, [sp, #4]
   44288:	bl	c2f0 <mpfr_ui_div@plt>
   4428c:	ldrb	w8, [x28, x25]
   44290:	tbnz	w8, #1, 4450c <mpfr_pow_z@@Base+0x42c>
   44294:	mov	x8, #0xfffffffffffffffe    	// #-2
   44298:	cmp	w27, #0x0
   4429c:	mov	w9, #0x40                  	// #64
   442a0:	sub	x25, x8, x24
   442a4:	cset	w24, eq  // eq = none
   442a8:	str	x9, [sp, #8]
   442ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   442b0:	ldr	x1, [x0, #2640]
   442b4:	add	x0, x0, #0xa50
   442b8:	blr	x1
   442bc:	mov	w20, w27
   442c0:	mov	x27, x0
   442c4:	str	wzr, [x28, x0]
   442c8:	sub	x0, x29, #0x20
   442cc:	sub	x1, x29, #0x20
   442d0:	mov	x2, x21
   442d4:	mov	w3, w20
   442d8:	mov	w4, wzr
   442dc:	bl	44874 <mpfr_pow_z@@Base+0x794>
   442e0:	ldr	w8, [x28, x27]
   442e4:	mov	w27, w20
   442e8:	tbnz	w8, #1, 4450c <mpfr_pow_z@@Base+0x42c>
   442ec:	tbnz	w8, #0, 44664 <mpfr_pow_z@@Base+0x584>
   442f0:	ldur	x8, [x29, #-16]
   442f4:	mov	x9, #0x2                   	// #2
   442f8:	movk	x9, #0x8000, lsl #48
   442fc:	add	x9, x9, #0x2
   44300:	cmp	x8, x9
   44304:	b.lt	4433c <mpfr_pow_z@@Base+0x25c>  // b.tstop
   44308:	ldur	x8, [x29, #-32]
   4430c:	ldr	x9, [x19]
   44310:	ldur	x0, [x29, #-8]
   44314:	add	x2, x25, x23
   44318:	sub	x10, x8, #0x1
   4431c:	add	x8, x8, #0x3e
   44320:	cmp	x10, #0x0
   44324:	csel	x8, x8, x10, lt  // lt = tstop
   44328:	asr	x8, x8, #6
   4432c:	add	x1, x8, #0x1
   44330:	add	x3, x9, x24
   44334:	bl	c370 <mpfr_round_p@plt>
   44338:	cbnz	w0, 443d0 <mpfr_pow_z@@Base+0x2f0>
   4433c:	mov	x8, #0x2                   	// #2
   44340:	ldr	x27, [sp, #8]
   44344:	movk	x8, #0x8000, lsl #48
   44348:	sub	x8, x8, x23
   4434c:	sub	x8, x8, #0x103
   44350:	cmp	x27, x8
   44354:	b.gt	443b4 <mpfr_pow_z@@Base+0x2d4>
   44358:	add	x23, x27, x23
   4435c:	cmp	x23, #0x0
   44360:	cinc	x8, x23, lt  // lt = tstop
   44364:	asr	x8, x8, #1
   44368:	sub	x0, x29, #0x20
   4436c:	mov	x1, x23
   44370:	str	x8, [sp, #8]
   44374:	bl	bf20 <mpfr_set_prec@plt>
   44378:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4437c:	ldr	x1, [x0, #2640]
   44380:	add	x0, x0, #0xa50
   44384:	blr	x1
   44388:	ldr	w3, [sp, #4]
   4438c:	mov	x27, x0
   44390:	str	wzr, [x28, x0]
   44394:	sub	x0, x29, #0x20
   44398:	mov	w1, #0x1                   	// #1
   4439c:	mov	x2, x22
   443a0:	bl	c2f0 <mpfr_ui_div@plt>
   443a4:	ldrb	w8, [x28, x27]
   443a8:	mov	w27, w20
   443ac:	tbz	w8, #1, 442ac <mpfr_pow_z@@Base+0x1cc>
   443b0:	b	4450c <mpfr_pow_z@@Base+0x42c>
   443b4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   443b8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   443bc:	mov	w1, #0x169                 	// #361
   443c0:	add	x0, x0, #0x640
   443c4:	add	x2, x2, #0xde2
   443c8:	bl	cb20 <mpfr_assert_fail@plt>
   443cc:	b	44358 <mpfr_pow_z@@Base+0x278>
   443d0:	ldur	w3, [x29, #-24]
   443d4:	sub	x1, x29, #0x20
   443d8:	mov	x0, x19
   443dc:	mov	w2, w27
   443e0:	bl	c690 <mpfr_set4@plt>
   443e4:	mov	w21, w0
   443e8:	sub	x0, x29, #0x20
   443ec:	bl	c0b0 <mpfr_clear@plt>
   443f0:	ldp	x24, x20, [sp, #16]
   443f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   443f8:	ldr	x1, [x0, #2640]
   443fc:	add	x0, x0, #0xa50
   44400:	blr	x1
   44404:	str	w26, [x28, x0]
   44408:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4440c:	ldr	x1, [x0, #2576]
   44410:	add	x0, x0, #0xa10
   44414:	blr	x1
   44418:	str	x20, [x28, x0]
   4441c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44420:	ldr	x1, [x0, #2608]
   44424:	add	x0, x0, #0xa30
   44428:	blr	x1
   4442c:	str	x24, [x28, x0]
   44430:	ldr	x8, [x19, #16]
   44434:	cmp	x8, x24
   44438:	b.gt	444f8 <mpfr_pow_z@@Base+0x418>
   4443c:	cmp	x8, x20
   44440:	b.lt	444f8 <mpfr_pow_z@@Base+0x418>  // b.tstop
   44444:	cbz	w21, 44460 <mpfr_pow_z@@Base+0x380>
   44448:	orr	w8, w26, #0x8
   4444c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44450:	ldr	x1, [x0, #2640]
   44454:	add	x0, x0, #0xa50
   44458:	blr	x1
   4445c:	str	w8, [x28, x0]
   44460:	mov	w0, w21
   44464:	ldp	x20, x19, [sp, #208]
   44468:	ldp	x22, x21, [sp, #192]
   4446c:	ldp	x24, x23, [sp, #176]
   44470:	ldp	x26, x25, [sp, #160]
   44474:	ldp	x28, x27, [sp, #144]
   44478:	ldp	x29, x30, [sp, #128]
   4447c:	add	sp, sp, #0xe0
   44480:	ret
   44484:	mov	w1, #0x1                   	// #1
   44488:	mov	x0, x19
   4448c:	mov	x2, xzr
   44490:	mov	w3, w27
   44494:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   44498:	b	44810 <mpfr_pow_z@@Base+0x730>
   4449c:	cmp	x9, x12
   444a0:	b.ne	4457c <mpfr_pow_z@@Base+0x49c>  // b.any
   444a4:	str	x12, [x19, #16]
   444a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   444ac:	ldr	x1, [x0, #2640]
   444b0:	add	x0, x0, #0xa50
   444b4:	blr	x1
   444b8:	mrs	x8, tpidr_el0
   444bc:	ldr	w9, [x8, x0]
   444c0:	mov	w21, wzr
   444c4:	orr	w9, w9, #0x4
   444c8:	str	w9, [x8, x0]
   444cc:	b	44460 <mpfr_pow_z@@Base+0x380>
   444d0:	ldr	x8, [x21, #8]
   444d4:	ldr	w9, [x21, #4]
   444d8:	ldr	x23, [x22, #16]
   444dc:	ldr	w8, [x8]
   444e0:	cmp	w9, #0x0
   444e4:	cset	w9, ne  // ne = any
   444e8:	tst	w8, w9
   444ec:	b.eq	445c0 <mpfr_pow_z@@Base+0x4e0>  // b.none
   444f0:	ldrsw	x1, [x22, #8]
   444f4:	b	445c4 <mpfr_pow_z@@Base+0x4e4>
   444f8:	mov	x0, x19
   444fc:	mov	w1, w21
   44500:	mov	w2, w27
   44504:	bl	cb10 <mpfr_check_range@plt>
   44508:	b	44810 <mpfr_pow_z@@Base+0x730>
   4450c:	sub	x0, x29, #0x20
   44510:	bl	c0b0 <mpfr_clear@plt>
   44514:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44518:	ldr	x1, [x0, #2640]
   4451c:	add	x0, x0, #0xa50
   44520:	blr	x1
   44524:	str	w26, [x28, x0]
   44528:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4452c:	ldr	x1, [x0, #2576]
   44530:	add	x0, x0, #0xa10
   44534:	blr	x1
   44538:	ldr	x8, [sp, #24]
   4453c:	str	x8, [x28, x0]
   44540:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44544:	ldr	x1, [x0, #2608]
   44548:	add	x0, x0, #0xa30
   4454c:	blr	x1
   44550:	ldr	x8, [sp, #16]
   44554:	str	x8, [x28, x0]
   44558:	ldr	x8, [x21, #8]
   4455c:	ldr	w9, [x21, #4]
   44560:	ldr	w8, [x8]
   44564:	cmp	w9, #0x0
   44568:	cset	w9, ne  // ne = any
   4456c:	tst	w8, w9
   44570:	b.eq	446f4 <mpfr_pow_z@@Base+0x614>  // b.none
   44574:	ldr	w2, [x22, #8]
   44578:	b	446f8 <mpfr_pow_z@@Base+0x618>
   4457c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   44580:	cmp	x9, x11
   44584:	b.ne	44708 <mpfr_pow_z@@Base+0x628>  // b.any
   44588:	cmp	w10, #0x0
   4458c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   44590:	csel	x9, x11, x9, gt
   44594:	str	x9, [x19, #16]
   44598:	ldr	w10, [x22, #8]
   4459c:	mov	w9, #0x1                   	// #1
   445a0:	tbz	w10, #31, 445b4 <mpfr_pow_z@@Base+0x4d4>
   445a4:	ldr	x10, [x21, #8]
   445a8:	ldr	w10, [x10]
   445ac:	tst	w10, w8
   445b0:	cneg	w9, w9, ne  // ne = any
   445b4:	mov	w21, wzr
   445b8:	str	w9, [x19, #8]
   445bc:	b	44460 <mpfr_pow_z@@Base+0x380>
   445c0:	mov	w1, #0x1                   	// #1
   445c4:	mov	x0, x19
   445c8:	mov	x2, xzr
   445cc:	mov	w3, w27
   445d0:	bl	bae0 <mpfr_set_si_2exp@plt>
   445d4:	sub	x0, x29, #0x20
   445d8:	bl	bfe0 <mpfr_mpz_init@plt>
   445dc:	sub	x2, x23, #0x1
   445e0:	sub	x0, x29, #0x20
   445e4:	mov	x1, x21
   445e8:	bl	c670 <__gmpz_mul_si@plt>
   445ec:	sub	x0, x29, #0x20
   445f0:	sub	x1, x29, #0x20
   445f4:	mov	w2, #0x1                   	// #1
   445f8:	bl	c360 <__gmpz_add_ui@plt>
   445fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44600:	ldr	x1, [x0, #2576]
   44604:	add	x0, x0, #0xa10
   44608:	blr	x1
   4460c:	ldr	x1, [x28, x0]
   44610:	sub	x0, x29, #0x20
   44614:	bl	c7f0 <__gmpz_cmp_si@plt>
   44618:	tbnz	w0, #31, 44820 <mpfr_pow_z@@Base+0x740>
   4461c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44620:	ldr	x1, [x0, #2608]
   44624:	add	x0, x0, #0xa30
   44628:	blr	x1
   4462c:	ldr	x1, [x28, x0]
   44630:	sub	x0, x29, #0x20
   44634:	bl	c7f0 <__gmpz_cmp_si@plt>
   44638:	cmp	w0, #0x1
   4463c:	b.ge	44840 <mpfr_pow_z@@Base+0x760>  // b.tcont
   44640:	sub	x0, x29, #0x20
   44644:	bl	ba80 <__gmpz_get_si@plt>
   44648:	mov	w21, wzr
   4464c:	str	x0, [x19, #16]
   44650:	sub	x0, x29, #0x20
   44654:	bl	c1b0 <mpfr_mpz_clear@plt>
   44658:	b	441c8 <mpfr_pow_z@@Base+0xe8>
   4465c:	mov	x8, xzr
   44660:	b	44220 <mpfr_pow_z@@Base+0x140>
   44664:	sub	x0, x29, #0x20
   44668:	bl	c0b0 <mpfr_clear@plt>
   4466c:	cbz	w27, 4471c <mpfr_pow_z@@Base+0x63c>
   44670:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44674:	ldr	x1, [x0, #2640]
   44678:	add	x0, x0, #0xa50
   4467c:	blr	x1
   44680:	str	w26, [x28, x0]
   44684:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44688:	ldr	x1, [x0, #2576]
   4468c:	add	x0, x0, #0xa10
   44690:	blr	x1
   44694:	ldr	x8, [sp, #24]
   44698:	str	x8, [x28, x0]
   4469c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   446a0:	ldr	x1, [x0, #2608]
   446a4:	add	x0, x0, #0xa30
   446a8:	blr	x1
   446ac:	ldr	x8, [sp, #16]
   446b0:	str	x8, [x28, x0]
   446b4:	ldr	x8, [x21, #8]
   446b8:	ldr	w9, [x21, #4]
   446bc:	ldr	w8, [x8]
   446c0:	cmp	w9, #0x0
   446c4:	cset	w9, ne  // ne = any
   446c8:	tst	w8, w9
   446cc:	b.eq	44800 <mpfr_pow_z@@Base+0x720>  // b.none
   446d0:	ldr	w2, [x22, #8]
   446d4:	b	44804 <mpfr_pow_z@@Base+0x724>
   446d8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   446dc:	adrp	x2, 62000 <mpfr_l2b_62_1__tab@@Base+0x2a78>
   446e0:	add	x0, x0, #0x640
   446e4:	add	x2, x2, #0xe5e
   446e8:	mov	w1, #0x118                 	// #280
   446ec:	bl	cb20 <mpfr_assert_fail@plt>
   446f0:	b	44214 <mpfr_pow_z@@Base+0x134>
   446f4:	mov	w2, #0x1                   	// #1
   446f8:	mov	x0, x19
   446fc:	mov	w1, w27
   44700:	bl	bf90 <mpfr_overflow@plt>
   44704:	b	44810 <mpfr_pow_z@@Base+0x730>
   44708:	cmp	w10, #0x1
   4470c:	b.lt	447a4 <mpfr_pow_z@@Base+0x6c4>  // b.tstop
   44710:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   44714:	str	x8, [x19, #16]
   44718:	b	447cc <mpfr_pow_z@@Base+0x6ec>
   4471c:	add	x0, sp, #0x40
   44720:	mov	w1, #0x2                   	// #2
   44724:	bl	ca60 <mpfr_init2@plt>
   44728:	ldr	w8, [x21, #4]
   4472c:	add	x0, sp, #0x20
   44730:	cmp	w8, #0x0
   44734:	cneg	w8, w8, mi  // mi = first
   44738:	lsl	w1, w8, #6
   4473c:	bl	ca60 <mpfr_init2@plt>
   44740:	add	x0, sp, #0x20
   44744:	mov	x1, x21
   44748:	mov	w2, wzr
   4474c:	bl	c250 <mpfr_set_z@plt>
   44750:	cbnz	w0, 44858 <mpfr_pow_z@@Base+0x778>
   44754:	add	x0, sp, #0x40
   44758:	add	x2, sp, #0x20
   4475c:	mov	w4, #0x1                   	// #1
   44760:	mov	x1, x22
   44764:	mov	w3, wzr
   44768:	mov	x5, xzr
   4476c:	bl	c6e0 <mpfr_pow_general@plt>
   44770:	mov	w21, w0
   44774:	add	x0, sp, #0x20
   44778:	bl	c0b0 <mpfr_clear@plt>
   4477c:	ldr	w3, [sp, #72]
   44780:	add	x1, sp, #0x40
   44784:	mov	x0, x19
   44788:	mov	w2, wzr
   4478c:	bl	c690 <mpfr_set4@plt>
   44790:	add	x0, sp, #0x40
   44794:	bl	c0b0 <mpfr_clear@plt>
   44798:	mov	w27, wzr
   4479c:	orr	w26, w26, #0x1
   447a0:	b	443f0 <mpfr_pow_z@@Base+0x310>
   447a4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   447a8:	str	x8, [x19, #16]
   447ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   447b0:	ldr	x1, [x0, #2640]
   447b4:	add	x0, x0, #0xa50
   447b8:	blr	x1
   447bc:	mrs	x8, tpidr_el0
   447c0:	ldr	w9, [x8, x0]
   447c4:	orr	w9, w9, #0x20
   447c8:	str	w9, [x8, x0]
   447cc:	ldr	w8, [x22, #8]
   447d0:	cmp	w8, #0x1
   447d4:	b.lt	447e0 <mpfr_pow_z@@Base+0x700>  // b.tstop
   447d8:	add	x8, x19, #0x8
   447dc:	b	447f0 <mpfr_pow_z@@Base+0x710>
   447e0:	ldr	x8, [x21, #8]
   447e4:	ldrb	w9, [x8]
   447e8:	add	x8, x19, #0x8
   447ec:	tbnz	w9, #0, 44818 <mpfr_pow_z@@Base+0x738>
   447f0:	mov	w9, #0x1                   	// #1
   447f4:	mov	w21, wzr
   447f8:	str	w9, [x8]
   447fc:	b	44460 <mpfr_pow_z@@Base+0x380>
   44800:	mov	w2, #0x1                   	// #1
   44804:	mov	x0, x19
   44808:	mov	w1, w20
   4480c:	bl	c3c0 <mpfr_underflow@plt>
   44810:	mov	w21, w0
   44814:	b	44460 <mpfr_pow_z@@Base+0x380>
   44818:	mov	w9, #0xffffffff            	// #-1
   4481c:	b	447f4 <mpfr_pow_z@@Base+0x714>
   44820:	ldr	w2, [x19, #8]
   44824:	cmp	w27, #0x0
   44828:	csinc	w27, w27, wzr, ne  // ne = any
   4482c:	mov	x0, x19
   44830:	mov	w1, w27
   44834:	bl	c3c0 <mpfr_underflow@plt>
   44838:	mov	w21, w0
   4483c:	b	44650 <mpfr_pow_z@@Base+0x570>
   44840:	ldr	w2, [x19, #8]
   44844:	mov	x0, x19
   44848:	mov	w1, w27
   4484c:	bl	bf90 <mpfr_overflow@plt>
   44850:	mov	w21, w0
   44854:	b	44650 <mpfr_pow_z@@Base+0x570>
   44858:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4485c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   44860:	add	x0, x0, #0x640
   44864:	add	x2, x2, #0xb8c
   44868:	mov	w1, #0x155                 	// #341
   4486c:	bl	cb20 <mpfr_assert_fail@plt>
   44870:	b	44754 <mpfr_pow_z@@Base+0x674>
   44874:	sub	sp, sp, #0x120
   44878:	stp	x22, x21, [sp, #256]
   4487c:	stp	x20, x19, [sp, #272]
   44880:	mov	x20, x1
   44884:	mov	x21, x0
   44888:	mov	w1, #0x1                   	// #1
   4488c:	mov	x0, x2
   44890:	stp	x29, x30, [sp, #192]
   44894:	stp	x28, x27, [sp, #208]
   44898:	stp	x26, x25, [sp, #224]
   4489c:	stp	x24, x23, [sp, #240]
   448a0:	add	x29, sp, #0xc0
   448a4:	mov	w27, w4
   448a8:	mov	w23, w3
   448ac:	mov	x22, x2
   448b0:	bl	bc50 <__gmpz_cmpabs_ui@plt>
   448b4:	cbz	w0, 44cc8 <mpfr_pow_z@@Base+0xbe8>
   448b8:	ldr	q0, [x22]
   448bc:	stur	q0, [x29, #-64]
   448c0:	ldur	w8, [x29, #-60]
   448c4:	cmp	w8, #0x0
   448c8:	cneg	w8, w8, mi  // mi = first
   448cc:	stur	w8, [x29, #-60]
   448d0:	ldr	w9, [x22, #4]
   448d4:	ldr	x10, [x22, #8]
   448d8:	ldr	x8, [x20, #16]
   448dc:	cmp	w9, #0x0
   448e0:	cneg	w11, w9, mi  // mi = first
   448e4:	add	x9, x10, w11, uxtw #3
   448e8:	ldur	x9, [x9, #-8]
   448ec:	cmp	x8, #0x0
   448f0:	lsl	x10, x11, #6
   448f4:	clz	x9, x9
   448f8:	b.le	44904 <mpfr_pow_z@@Base+0x824>
   448fc:	mov	w24, #0x1                   	// #1
   44900:	b	44914 <mpfr_pow_z@@Base+0x834>
   44904:	ldr	w11, [x20, #8]
   44908:	cmp	w11, #0x0
   4490c:	mov	w11, #0x2                   	// #2
   44910:	cinc	w24, w11, le
   44914:	ldr	x26, [x21]
   44918:	cmp	x8, #0x0
   4491c:	mov	w8, #0x2                   	// #2
   44920:	sub	x19, x10, x9
   44924:	cinc	w25, w8, gt
   44928:	cbz	w27, 44958 <mpfr_pow_z@@Base+0x878>
   4492c:	cmp	x26, #0x1
   44930:	b.eq	44d34 <mpfr_pow_z@@Base+0xc54>  // b.none
   44934:	mov	x8, x26
   44938:	b.le	44d3c <mpfr_pow_z@@Base+0xc5c>
   4493c:	sub	x8, x8, #0x1
   44940:	clz	x8, x8
   44944:	mov	w9, #0x40                  	// #64
   44948:	sub	x8, x9, x8
   4494c:	add	x9, x19, x26
   44950:	add	x8, x9, x8
   44954:	add	x26, x8, #0x3
   44958:	sub	x0, x29, #0x28
   4495c:	mov	x1, x26
   44960:	str	w27, [sp, #48]
   44964:	bl	ca60 <mpfr_init2@plt>
   44968:	cmp	w23, #0x0
   4496c:	cset	w8, eq  // eq = none
   44970:	str	w23, [sp, #52]
   44974:	str	x8, [sp, #40]
   44978:	subs	x23, x19, #0x2
   4497c:	mvn	x8, x19
   44980:	str	x8, [sp, #32]
   44984:	str	x21, [sp, #56]
   44988:	b.le	44b40 <mpfr_pow_z@@Base+0xa60>
   4498c:	mov	w8, #0x40                  	// #64
   44990:	sub	x21, x19, #0x3
   44994:	stp	x23, x8, [sp, #16]
   44998:	mrs	x27, tpidr_el0
   4499c:	mov	w19, #0x27                  	// #39
   449a0:	str	x21, [sp, #8]
   449a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   449a8:	ldr	x1, [x0, #2640]
   449ac:	add	x0, x0, #0xa50
   449b0:	blr	x1
   449b4:	str	wzr, [x27, x0]
   449b8:	sub	x0, x29, #0x28
   449bc:	mov	x1, x20
   449c0:	mov	x2, x20
   449c4:	mov	w3, w25
   449c8:	bl	bda0 <mpfr_mul@plt>
   449cc:	mov	w28, w0
   449d0:	sub	x0, x29, #0x40
   449d4:	mov	x1, x23
   449d8:	bl	c020 <__gmpz_tstbit@plt>
   449dc:	cbz	w0, 449f8 <mpfr_pow_z@@Base+0x918>
   449e0:	sub	x0, x29, #0x28
   449e4:	sub	x1, x29, #0x28
   449e8:	mov	x2, x20
   449ec:	mov	w3, w24
   449f0:	bl	bda0 <mpfr_mul@plt>
   449f4:	orr	w28, w0, w28
   449f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   449fc:	ldr	x1, [x0, #2640]
   44a00:	add	x0, x0, #0xa50
   44a04:	blr	x1
   44a08:	ldr	w23, [x27, x0]
   44a0c:	tst	w23, w19
   44a10:	b.ne	44a78 <mpfr_pow_z@@Base+0x998>  // b.any
   44a14:	sub	x0, x29, #0x28
   44a18:	sub	x1, x29, #0x28
   44a1c:	sub	x2, x29, #0x28
   44a20:	mov	w3, w25
   44a24:	bl	bda0 <mpfr_mul@plt>
   44a28:	orr	w28, w0, w28
   44a2c:	sub	x0, x29, #0x40
   44a30:	mov	x1, x21
   44a34:	bl	c020 <__gmpz_tstbit@plt>
   44a38:	cbz	w0, 44a54 <mpfr_pow_z@@Base+0x974>
   44a3c:	sub	x0, x29, #0x28
   44a40:	sub	x1, x29, #0x28
   44a44:	mov	x2, x20
   44a48:	mov	w3, w24
   44a4c:	bl	bda0 <mpfr_mul@plt>
   44a50:	orr	w28, w0, w28
   44a54:	subs	x21, x21, #0x1
   44a58:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44a5c:	ldr	x1, [x0, #2640]
   44a60:	add	x0, x0, #0xa50
   44a64:	blr	x1
   44a68:	ldr	w23, [x27, x0]
   44a6c:	b.lt	44a78 <mpfr_pow_z@@Base+0x998>  // b.tstop
   44a70:	and	w8, w23, w19
   44a74:	cbz	w8, 44a14 <mpfr_pow_z@@Base+0x934>
   44a78:	tst	w23, #0x3
   44a7c:	b.ne	44c74 <mpfr_pow_z@@Base+0xb94>  // b.any
   44a80:	ldr	x21, [sp, #56]
   44a84:	ldr	w8, [sp, #48]
   44a88:	cbz	w8, 44c78 <mpfr_pow_z@@Base+0xb98>
   44a8c:	cbz	w28, 44c78 <mpfr_pow_z@@Base+0xb98>
   44a90:	ldur	x8, [x29, #-24]
   44a94:	mov	x9, #0xfffffffffffffeff    	// #-257
   44a98:	movk	x9, #0x7fff, lsl #48
   44a9c:	add	x9, x9, #0x105
   44aa0:	cmp	x8, x9
   44aa4:	b.lt	44ae4 <mpfr_pow_z@@Base+0xa04>  // b.tstop
   44aa8:	ldur	x8, [x29, #-40]
   44aac:	ldr	x9, [sp, #32]
   44ab0:	ldur	x0, [x29, #-16]
   44ab4:	sub	x10, x8, #0x1
   44ab8:	add	x8, x8, #0x3e
   44abc:	cmp	x10, #0x0
   44ac0:	csel	x8, x8, x10, lt  // lt = tstop
   44ac4:	asr	x8, x8, #6
   44ac8:	add	x2, x26, x9
   44acc:	ldr	x9, [x21]
   44ad0:	add	x1, x8, #0x1
   44ad4:	ldr	x8, [sp, #40]
   44ad8:	add	x3, x9, x8
   44adc:	bl	c370 <mpfr_round_p@plt>
   44ae0:	cbnz	w0, 44c78 <mpfr_pow_z@@Base+0xb98>
   44ae4:	ldr	x21, [sp, #24]
   44ae8:	mov	x8, #0xfffffffffffffeff    	// #-257
   44aec:	movk	x8, #0x7fff, lsl #48
   44af0:	sub	x8, x8, x26
   44af4:	cmp	x21, x8
   44af8:	b.gt	44b24 <mpfr_pow_z@@Base+0xa44>
   44afc:	add	x26, x26, x21
   44b00:	cmp	x26, #0x0
   44b04:	cinc	x8, x26, lt  // lt = tstop
   44b08:	asr	x8, x8, #1
   44b0c:	sub	x0, x29, #0x28
   44b10:	mov	x1, x26
   44b14:	str	x8, [sp, #24]
   44b18:	bl	bf20 <mpfr_set_prec@plt>
   44b1c:	ldp	x21, x23, [sp, #8]
   44b20:	b	449a4 <mpfr_pow_z@@Base+0x8c4>
   44b24:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   44b28:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   44b2c:	mov	w1, #0x64                  	// #100
   44b30:	add	x0, x0, #0x640
   44b34:	add	x2, x2, #0x622
   44b38:	bl	cb20 <mpfr_assert_fail@plt>
   44b3c:	b	44afc <mpfr_pow_z@@Base+0xa1c>
   44b40:	mov	w27, #0x40                  	// #64
   44b44:	mrs	x19, tpidr_el0
   44b48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44b4c:	ldr	x1, [x0, #2640]
   44b50:	add	x0, x0, #0xa50
   44b54:	blr	x1
   44b58:	str	wzr, [x19, x0]
   44b5c:	sub	x0, x29, #0x28
   44b60:	mov	x1, x20
   44b64:	mov	x2, x20
   44b68:	mov	w3, w25
   44b6c:	bl	bda0 <mpfr_mul@plt>
   44b70:	mov	w21, w0
   44b74:	sub	x0, x29, #0x40
   44b78:	mov	x1, x23
   44b7c:	bl	c020 <__gmpz_tstbit@plt>
   44b80:	mov	x28, x23
   44b84:	cbz	w0, 44ba0 <mpfr_pow_z@@Base+0xac0>
   44b88:	sub	x0, x29, #0x28
   44b8c:	sub	x1, x29, #0x28
   44b90:	mov	x2, x20
   44b94:	mov	w3, w24
   44b98:	bl	bda0 <mpfr_mul@plt>
   44b9c:	orr	w21, w0, w21
   44ba0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44ba4:	ldr	x1, [x0, #2640]
   44ba8:	add	x0, x0, #0xa50
   44bac:	blr	x1
   44bb0:	ldr	w23, [x19, x0]
   44bb4:	tst	w23, #0x3
   44bb8:	b.ne	44c74 <mpfr_pow_z@@Base+0xb94>  // b.any
   44bbc:	ldr	w8, [sp, #48]
   44bc0:	cbz	w8, 44c74 <mpfr_pow_z@@Base+0xb94>
   44bc4:	cbz	w21, 44c74 <mpfr_pow_z@@Base+0xb94>
   44bc8:	ldur	x8, [x29, #-24]
   44bcc:	mov	x9, #0xfffffffffffffeff    	// #-257
   44bd0:	ldr	x21, [sp, #56]
   44bd4:	movk	x9, #0x7fff, lsl #48
   44bd8:	add	x9, x9, #0x105
   44bdc:	cmp	x8, x9
   44be0:	b.lt	44c20 <mpfr_pow_z@@Base+0xb40>  // b.tstop
   44be4:	ldur	x8, [x29, #-40]
   44be8:	ldr	x9, [sp, #32]
   44bec:	ldur	x0, [x29, #-16]
   44bf0:	sub	x10, x8, #0x1
   44bf4:	add	x8, x8, #0x3e
   44bf8:	cmp	x10, #0x0
   44bfc:	csel	x8, x8, x10, lt  // lt = tstop
   44c00:	asr	x8, x8, #6
   44c04:	add	x2, x26, x9
   44c08:	ldr	x9, [x21]
   44c0c:	add	x1, x8, #0x1
   44c10:	ldr	x8, [sp, #40]
   44c14:	add	x3, x9, x8
   44c18:	bl	c370 <mpfr_round_p@plt>
   44c1c:	cbnz	w0, 44c78 <mpfr_pow_z@@Base+0xb98>
   44c20:	mov	x8, #0xfffffffffffffeff    	// #-257
   44c24:	movk	x8, #0x7fff, lsl #48
   44c28:	sub	x8, x8, x26
   44c2c:	cmp	x27, x8
   44c30:	b.gt	44c58 <mpfr_pow_z@@Base+0xb78>
   44c34:	add	x26, x26, x27
   44c38:	cmp	x26, #0x0
   44c3c:	cinc	x8, x26, lt  // lt = tstop
   44c40:	sub	x0, x29, #0x28
   44c44:	mov	x1, x26
   44c48:	asr	x27, x8, #1
   44c4c:	bl	bf20 <mpfr_set_prec@plt>
   44c50:	mov	x23, x28
   44c54:	b	44b48 <mpfr_pow_z@@Base+0xa68>
   44c58:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   44c5c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   44c60:	mov	w1, #0x64                  	// #100
   44c64:	add	x0, x0, #0x640
   44c68:	add	x2, x2, #0x622
   44c6c:	bl	cb20 <mpfr_assert_fail@plt>
   44c70:	b	44c34 <mpfr_pow_z@@Base+0xb54>
   44c74:	ldr	x21, [sp, #56]
   44c78:	tbnz	w23, #1, 44ce4 <mpfr_pow_z@@Base+0xc04>
   44c7c:	ldr	w10, [sp, #52]
   44c80:	tbnz	w23, #0, 44d0c <mpfr_pow_z@@Base+0xc2c>
   44c84:	ldur	w3, [x29, #-32]
   44c88:	sub	x1, x29, #0x28
   44c8c:	mov	x0, x21
   44c90:	mov	w2, w10
   44c94:	bl	c690 <mpfr_set4@plt>
   44c98:	mov	w20, w0
   44c9c:	sub	x0, x29, #0x28
   44ca0:	bl	c0b0 <mpfr_clear@plt>
   44ca4:	mov	w0, w20
   44ca8:	ldp	x20, x19, [sp, #272]
   44cac:	ldp	x22, x21, [sp, #256]
   44cb0:	ldp	x24, x23, [sp, #240]
   44cb4:	ldp	x26, x25, [sp, #224]
   44cb8:	ldp	x28, x27, [sp, #208]
   44cbc:	ldp	x29, x30, [sp, #192]
   44cc0:	add	sp, sp, #0x120
   44cc4:	ret
   44cc8:	ldr	w3, [x20, #8]
   44ccc:	mov	x0, x21
   44cd0:	mov	x1, x20
   44cd4:	mov	w2, w23
   44cd8:	bl	c690 <mpfr_set4@plt>
   44cdc:	mov	w20, w0
   44ce0:	b	44ca4 <mpfr_pow_z@@Base+0xbc4>
   44ce4:	ldur	x8, [x29, #-56]
   44ce8:	ldur	w9, [x29, #-60]
   44cec:	ldr	w1, [sp, #52]
   44cf0:	ldr	w8, [x8]
   44cf4:	cmp	w9, #0x0
   44cf8:	cset	w9, ne  // ne = any
   44cfc:	tst	w8, w9
   44d00:	b.eq	44d5c <mpfr_pow_z@@Base+0xc7c>  // b.none
   44d04:	ldr	w2, [x20, #8]
   44d08:	b	44d60 <mpfr_pow_z@@Base+0xc80>
   44d0c:	cbz	w10, 44d6c <mpfr_pow_z@@Base+0xc8c>
   44d10:	ldur	x8, [x29, #-56]
   44d14:	ldur	w9, [x29, #-60]
   44d18:	ldr	w8, [x8]
   44d1c:	cmp	w9, #0x0
   44d20:	cset	w9, ne  // ne = any
   44d24:	tst	w8, w9
   44d28:	b.eq	44e08 <mpfr_pow_z@@Base+0xd28>  // b.none
   44d2c:	ldr	w2, [x20, #8]
   44d30:	b	44e0c <mpfr_pow_z@@Base+0xd2c>
   44d34:	mov	x8, xzr
   44d38:	b	4494c <mpfr_pow_z@@Base+0x86c>
   44d3c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   44d40:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   44d44:	add	x0, x0, #0x640
   44d48:	add	x2, x2, #0xbad
   44d4c:	mov	w1, #0x42                  	// #66
   44d50:	bl	cb20 <mpfr_assert_fail@plt>
   44d54:	ldr	x8, [x21]
   44d58:	b	4493c <mpfr_pow_z@@Base+0x85c>
   44d5c:	mov	w2, #0x1                   	// #1
   44d60:	mov	x0, x21
   44d64:	bl	bf90 <mpfr_overflow@plt>
   44d68:	b	44c98 <mpfr_pow_z@@Base+0xbb8>
   44d6c:	add	x0, sp, #0x60
   44d70:	mov	w1, #0x2                   	// #2
   44d74:	bl	ca60 <mpfr_init2@plt>
   44d78:	ldr	w8, [x22, #4]
   44d7c:	add	x0, sp, #0x40
   44d80:	cmp	w8, #0x0
   44d84:	cneg	w8, w8, mi  // mi = first
   44d88:	lsl	w1, w8, #6
   44d8c:	bl	ca60 <mpfr_init2@plt>
   44d90:	add	x0, sp, #0x40
   44d94:	mov	x1, x22
   44d98:	mov	w2, wzr
   44d9c:	bl	c250 <mpfr_set_z@plt>
   44da0:	cbnz	w0, 44e1c <mpfr_pow_z@@Base+0xd3c>
   44da4:	add	x0, sp, #0x60
   44da8:	add	x2, sp, #0x40
   44dac:	mov	w4, #0x1                   	// #1
   44db0:	mov	x1, x20
   44db4:	mov	w3, wzr
   44db8:	mov	x5, xzr
   44dbc:	bl	c6e0 <mpfr_pow_general@plt>
   44dc0:	mov	w20, w0
   44dc4:	add	x0, sp, #0x40
   44dc8:	bl	c0b0 <mpfr_clear@plt>
   44dcc:	ldr	w3, [sp, #104]
   44dd0:	add	x1, sp, #0x60
   44dd4:	mov	x0, x21
   44dd8:	mov	w2, wzr
   44ddc:	bl	c690 <mpfr_set4@plt>
   44de0:	add	x0, sp, #0x60
   44de4:	bl	c0b0 <mpfr_clear@plt>
   44de8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   44dec:	ldr	x1, [x0, #2640]
   44df0:	add	x0, x0, #0xa50
   44df4:	blr	x1
   44df8:	mrs	x8, tpidr_el0
   44dfc:	mov	w9, #0x9                   	// #9
   44e00:	str	w9, [x8, x0]
   44e04:	b	44c9c <mpfr_pow_z@@Base+0xbbc>
   44e08:	mov	w2, #0x1                   	// #1
   44e0c:	mov	x0, x21
   44e10:	mov	w1, w10
   44e14:	bl	c3c0 <mpfr_underflow@plt>
   44e18:	b	44c98 <mpfr_pow_z@@Base+0xbb8>
   44e1c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   44e20:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   44e24:	add	x0, x0, #0x640
   44e28:	add	x2, x2, #0xb8c
   44e2c:	mov	w1, #0x85                  	// #133
   44e30:	bl	cb20 <mpfr_assert_fail@plt>
   44e34:	b	44da4 <mpfr_pow_z@@Base+0xcc4>

0000000000044e38 <mpfr_mulhigh_n@@Base>:
   44e38:	sub	sp, sp, #0x80
   44e3c:	stp	x22, x21, [sp, #96]
   44e40:	stp	x20, x19, [sp, #112]
   44e44:	mov	x19, x3
   44e48:	mov	x20, x2
   44e4c:	mov	x22, x1
   44e50:	cmp	x3, #0x10
   44e54:	mov	x21, x0
   44e58:	stp	x29, x30, [sp, #32]
   44e5c:	stp	x28, x27, [sp, #48]
   44e60:	stp	x26, x25, [sp, #64]
   44e64:	stp	x24, x23, [sp, #80]
   44e68:	add	x29, sp, #0x20
   44e6c:	b.hi	4501c <mpfr_mulhigh_n@@Base+0x1e4>  // b.pmore
   44e70:	adrp	x8, 64000 <mpfr_bases@@Base+0x758>
   44e74:	add	x8, x8, #0x66a
   44e78:	ldrsh	x23, [x8, x19, lsl #1]
   44e7c:	tbnz	x23, #63, 45034 <mpfr_mulhigh_n@@Base+0x1fc>
   44e80:	cbz	x23, 44ec0 <mpfr_mulhigh_n@@Base+0x88>
   44e84:	mov	w8, #0x2101                	// #8449
   44e88:	cmp	x19, x8
   44e8c:	b.lt	44f2c <mpfr_mulhigh_n@@Base+0xf4>  // b.tstop
   44e90:	mov	x0, x21
   44e94:	mov	x1, x22
   44e98:	mov	x2, x20
   44e9c:	mov	x3, x19
   44ea0:	ldp	x20, x19, [sp, #112]
   44ea4:	ldp	x22, x21, [sp, #96]
   44ea8:	ldp	x24, x23, [sp, #80]
   44eac:	ldp	x26, x25, [sp, #64]
   44eb0:	ldp	x28, x27, [sp, #48]
   44eb4:	ldp	x29, x30, [sp, #32]
   44eb8:	add	sp, sp, #0x80
   44ebc:	b	c460 <__gmpn_mul_n@plt>
   44ec0:	lsl	x8, x19, #3
   44ec4:	sub	x10, x8, #0x8
   44ec8:	ldr	x9, [x20]
   44ecc:	ldr	x11, [x22, x10]
   44ed0:	cmp	x19, #0x2
   44ed4:	add	x23, x21, x10
   44ed8:	umulh	x10, x11, x9
   44edc:	mul	x9, x9, x11
   44ee0:	str	x10, [x21, x8]
   44ee4:	str	x9, [x23]
   44ee8:	b.lt	44ffc <mpfr_mulhigh_n@@Base+0x1c4>  // b.tstop
   44eec:	add	x24, x21, x8
   44ef0:	add	x8, x8, x22
   44ef4:	sub	x21, x8, #0x10
   44ef8:	mov	w22, #0x1                   	// #1
   44efc:	lsl	x25, x22, #3
   44f00:	ldr	x3, [x20, x25]
   44f04:	add	x22, x22, #0x1
   44f08:	mov	x0, x23
   44f0c:	mov	x1, x21
   44f10:	mov	x2, x22
   44f14:	bl	ccb0 <__gmpn_addmul_1@plt>
   44f18:	cmp	x19, x22
   44f1c:	sub	x21, x21, #0x8
   44f20:	str	x0, [x24, x25]
   44f24:	b.ne	44efc <mpfr_mulhigh_n@@Base+0xc4>  // b.any
   44f28:	b	44ffc <mpfr_mulhigh_n@@Base+0x1c4>
   44f2c:	sub	x24, x19, x23
   44f30:	lsl	x28, x24, #3
   44f34:	add	x0, x21, x24, lsl #4
   44f38:	add	x1, x22, x28
   44f3c:	add	x2, x20, x28
   44f40:	mov	x3, x23
   44f44:	bl	c460 <__gmpn_mul_n@plt>
   44f48:	lsl	x8, x23, #3
   44f4c:	add	x1, x22, x8
   44f50:	mov	x0, x21
   44f54:	mov	x2, x20
   44f58:	mov	x3, x24
   44f5c:	stur	x8, [x29, #-8]
   44f60:	bl	bcd0 <mpfr_mulhigh_n@plt>
   44f64:	add	x26, x21, x19, lsl #3
   44f68:	add	x8, x21, x28
   44f6c:	sub	x25, x26, #0x8
   44f70:	add	x27, x24, #0x1
   44f74:	sub	x2, x8, #0x8
   44f78:	mov	x0, x25
   44f7c:	mov	x1, x25
   44f80:	mov	x3, x27
   44f84:	str	x2, [sp, #8]
   44f88:	bl	c590 <__gmpn_add_n@plt>
   44f8c:	str	x0, [sp, #16]
   44f90:	ldur	x8, [x29, #-8]
   44f94:	mov	x0, x21
   44f98:	mov	x1, x22
   44f9c:	mov	x3, x24
   44fa0:	add	x2, x20, x8
   44fa4:	bl	bcd0 <mpfr_mulhigh_n@plt>
   44fa8:	ldr	x2, [sp, #8]
   44fac:	mov	x0, x25
   44fb0:	mov	x1, x25
   44fb4:	mov	x3, x27
   44fb8:	bl	c590 <__gmpn_add_n@plt>
   44fbc:	ldr	x9, [sp, #16]
   44fc0:	ldr	x8, [x26, x28]
   44fc4:	add	x9, x0, x9
   44fc8:	adds	x8, x8, x9
   44fcc:	str	x8, [x26, x28]
   44fd0:	b.cc	44ffc <mpfr_mulhigh_n@@Base+0x1c4>  // b.lo, b.ul, b.last
   44fd4:	mov	w8, #0x1                   	// #1
   44fd8:	sub	x8, x8, x23
   44fdc:	add	x9, x21, x19, lsl #4
   44fe0:	cbz	x8, 44ffc <mpfr_mulhigh_n@@Base+0x1c4>
   44fe4:	lsl	x10, x8, #3
   44fe8:	ldr	x11, [x9, x10]
   44fec:	add	x8, x8, #0x1
   44ff0:	adds	x11, x11, #0x1
   44ff4:	str	x11, [x9, x10]
   44ff8:	b.cs	44fe0 <mpfr_mulhigh_n@@Base+0x1a8>  // b.hs, b.nlast
   44ffc:	ldp	x20, x19, [sp, #112]
   45000:	ldp	x22, x21, [sp, #96]
   45004:	ldp	x24, x23, [sp, #80]
   45008:	ldp	x26, x25, [sp, #64]
   4500c:	ldp	x28, x27, [sp, #48]
   45010:	ldp	x29, x30, [sp, #32]
   45014:	add	sp, sp, #0x80
   45018:	ret
   4501c:	add	x8, x19, #0x3
   45020:	cmp	x19, #0x0
   45024:	csel	x8, x8, x19, lt  // lt = tstop
   45028:	asr	x8, x8, #2
   4502c:	add	x23, x8, x8, lsl #1
   45030:	tbz	x23, #63, 44e80 <mpfr_mulhigh_n@@Base+0x48>
   45034:	mov	x0, x21
   45038:	mov	x1, x22
   4503c:	mov	x2, x19
   45040:	mov	x3, x20
   45044:	mov	x4, x19
   45048:	ldp	x20, x19, [sp, #112]
   4504c:	ldp	x22, x21, [sp, #96]
   45050:	ldp	x24, x23, [sp, #80]
   45054:	ldp	x26, x25, [sp, #64]
   45058:	ldp	x28, x27, [sp, #48]
   4505c:	ldp	x29, x30, [sp, #32]
   45060:	add	sp, sp, #0x80
   45064:	b	c790 <__gmpn_mul@plt>

0000000000045068 <mpfr_sqrhigh_n@@Base>:
   45068:	stp	x29, x30, [sp, #-80]!
   4506c:	stp	x22, x21, [sp, #48]
   45070:	stp	x20, x19, [sp, #64]
   45074:	mov	x19, x2
   45078:	mov	x21, x1
   4507c:	cmp	x2, #0x10
   45080:	mov	x20, x0
   45084:	stp	x26, x25, [sp, #16]
   45088:	stp	x24, x23, [sp, #32]
   4508c:	mov	x29, sp
   45090:	b.hi	451cc <mpfr_sqrhigh_n@@Base+0x164>  // b.pmore
   45094:	adrp	x8, 64000 <mpfr_bases@@Base+0x758>
   45098:	add	x8, x8, #0x66a
   4509c:	ldrsh	x22, [x8, x19, lsl #1]
   450a0:	tbnz	x22, #63, 451e4 <mpfr_sqrhigh_n@@Base+0x17c>
   450a4:	cbz	x22, 45150 <mpfr_sqrhigh_n@@Base+0xe8>
   450a8:	sub	x23, x19, x22
   450ac:	lsl	x25, x23, #3
   450b0:	add	x0, x20, x23, lsl #4
   450b4:	add	x1, x21, x25
   450b8:	mov	x2, x22
   450bc:	bl	c3b0 <__gmpn_sqr@plt>
   450c0:	add	x2, x21, x22, lsl #3
   450c4:	mov	x0, x20
   450c8:	mov	x1, x21
   450cc:	mov	x3, x23
   450d0:	bl	bcd0 <mpfr_mulhigh_n@plt>
   450d4:	add	x8, x20, x25
   450d8:	sub	x21, x8, #0x8
   450dc:	add	x23, x23, #0x1
   450e0:	mov	w3, #0x1                   	// #1
   450e4:	mov	x0, x21
   450e8:	mov	x1, x21
   450ec:	mov	x2, x23
   450f0:	bl	bd10 <__gmpn_lshift@plt>
   450f4:	add	x26, x20, x19, lsl #3
   450f8:	mov	x24, x0
   450fc:	sub	x0, x26, #0x8
   45100:	mov	x1, x0
   45104:	mov	x2, x21
   45108:	mov	x3, x23
   4510c:	bl	c590 <__gmpn_add_n@plt>
   45110:	ldr	x8, [x26, x25]
   45114:	add	x9, x0, x24
   45118:	adds	x8, x8, x9
   4511c:	str	x8, [x26, x25]
   45120:	b.cc	451b4 <mpfr_sqrhigh_n@@Base+0x14c>  // b.lo, b.ul, b.last
   45124:	mov	w8, #0x1                   	// #1
   45128:	sub	x8, x8, x22
   4512c:	add	x9, x20, x19, lsl #4
   45130:	cbz	x8, 451b4 <mpfr_sqrhigh_n@@Base+0x14c>
   45134:	lsl	x10, x8, #3
   45138:	ldr	x11, [x9, x10]
   4513c:	add	x8, x8, #0x1
   45140:	adds	x11, x11, #0x1
   45144:	str	x11, [x9, x10]
   45148:	b.cs	45130 <mpfr_sqrhigh_n@@Base+0xc8>  // b.hs, b.nlast
   4514c:	b	451b4 <mpfr_sqrhigh_n@@Base+0x14c>
   45150:	lsl	x8, x19, #3
   45154:	sub	x10, x8, #0x8
   45158:	ldr	x9, [x21]
   4515c:	ldr	x11, [x21, x10]
   45160:	cmp	x19, #0x2
   45164:	add	x22, x20, x10
   45168:	umulh	x10, x11, x9
   4516c:	mul	x9, x9, x11
   45170:	str	x10, [x20, x8]
   45174:	str	x9, [x22]
   45178:	b.lt	451b4 <mpfr_sqrhigh_n@@Base+0x14c>  // b.tstop
   4517c:	add	x23, x20, x8
   45180:	sub	x24, x8, #0x10
   45184:	mov	w20, #0x1                   	// #1
   45188:	lsl	x25, x20, #3
   4518c:	ldr	x3, [x21, x25]
   45190:	add	x20, x20, #0x1
   45194:	add	x1, x21, x24
   45198:	mov	x0, x22
   4519c:	mov	x2, x20
   451a0:	bl	ccb0 <__gmpn_addmul_1@plt>
   451a4:	cmp	x19, x20
   451a8:	sub	x24, x24, #0x8
   451ac:	str	x0, [x23, x25]
   451b0:	b.ne	45188 <mpfr_sqrhigh_n@@Base+0x120>  // b.any
   451b4:	ldp	x20, x19, [sp, #64]
   451b8:	ldp	x22, x21, [sp, #48]
   451bc:	ldp	x24, x23, [sp, #32]
   451c0:	ldp	x26, x25, [sp, #16]
   451c4:	ldp	x29, x30, [sp], #80
   451c8:	ret
   451cc:	add	x8, x19, #0x4
   451d0:	add	x9, x19, #0x5
   451d4:	cmp	x8, #0x0
   451d8:	csel	x8, x9, x8, lt  // lt = tstop
   451dc:	asr	x22, x8, #1
   451e0:	tbz	x22, #63, 450a4 <mpfr_sqrhigh_n@@Base+0x3c>
   451e4:	mov	x0, x20
   451e8:	mov	x1, x21
   451ec:	mov	x2, x19
   451f0:	ldp	x20, x19, [sp, #64]
   451f4:	ldp	x22, x21, [sp, #48]
   451f8:	ldp	x24, x23, [sp, #32]
   451fc:	ldp	x26, x25, [sp, #16]
   45200:	ldp	x29, x30, [sp], #80
   45204:	b	c3b0 <__gmpn_sqr@plt>

0000000000045208 <mpfr_divhigh_n@@Base>:
   45208:	stp	x29, x30, [sp, #-96]!
   4520c:	stp	x28, x27, [sp, #16]
   45210:	stp	x26, x25, [sp, #32]
   45214:	stp	x24, x23, [sp, #48]
   45218:	stp	x22, x21, [sp, #64]
   4521c:	stp	x20, x19, [sp, #80]
   45220:	mov	x29, sp
   45224:	sub	sp, sp, #0x20
   45228:	mov	x19, x3
   4522c:	mov	x20, x2
   45230:	mov	x24, x1
   45234:	cmp	x3, #0x10
   45238:	mov	x28, x0
   4523c:	b.hi	453f8 <mpfr_divhigh_n@@Base+0x1f0>  // b.pmore
   45240:	adrp	x8, 64000 <mpfr_bases@@Base+0x758>
   45244:	add	x8, x8, #0x648
   45248:	ldrsh	x22, [x8, x19, lsl #1]
   4524c:	cbz	x22, 45410 <mpfr_divhigh_n@@Base+0x208>
   45250:	cmp	x22, x19
   45254:	b.ne	4527c <mpfr_divhigh_n@@Base+0x74>  // b.any
   45258:	lsl	x3, x19, #1
   4525c:	mov	x0, x28
   45260:	mov	x1, xzr
   45264:	mov	x2, x24
   45268:	mov	x4, x20
   4526c:	mov	x5, x19
   45270:	bl	cc90 <__gmpn_divrem@plt>
   45274:	mov	x22, x0
   45278:	b	45744 <mpfr_divhigh_n@@Base+0x53c>
   4527c:	sub	x26, x19, x22
   45280:	lsl	x21, x26, #3
   45284:	lsl	x27, x26, #4
   45288:	add	x25, x28, x21
   4528c:	lsl	x3, x22, #1
   45290:	add	x2, x24, x27
   45294:	add	x4, x20, x21
   45298:	mov	x0, x25
   4529c:	mov	x1, xzr
   452a0:	mov	x5, x22
   452a4:	stur	xzr, [x29, #-8]
   452a8:	bl	cc90 <__gmpn_divrem@plt>
   452ac:	cmp	x27, #0x4, lsl #12
   452b0:	mov	x23, x0
   452b4:	b.hi	45768 <mpfr_divhigh_n@@Base+0x560>  // b.pmore
   452b8:	add	x9, x27, #0xf
   452bc:	mov	x8, sp
   452c0:	and	x9, x9, #0xfffffffffffffff0
   452c4:	sub	x27, x8, x9
   452c8:	mov	sp, x27
   452cc:	add	x1, x28, x22, lsl #3
   452d0:	mov	x0, x27
   452d4:	mov	x2, x20
   452d8:	mov	x3, x26
   452dc:	stur	x28, [x29, #-16]
   452e0:	bl	bcd0 <mpfr_mulhigh_n@plt>
   452e4:	add	x28, x24, x19, lsl #3
   452e8:	add	x2, x27, x26, lsl #3
   452ec:	mov	x0, x28
   452f0:	mov	x1, x28
   452f4:	mov	x3, x26
   452f8:	bl	beb0 <__gmpn_sub_n@plt>
   452fc:	mov	x27, x0
   45300:	cbz	x23, 4531c <mpfr_divhigh_n@@Base+0x114>
   45304:	mov	x0, x28
   45308:	mov	x1, x28
   4530c:	mov	x2, x20
   45310:	mov	x3, x26
   45314:	bl	beb0 <__gmpn_sub_n@plt>
   45318:	add	x27, x0, x27
   4531c:	cbz	x27, 4538c <mpfr_divhigh_n@@Base+0x184>
   45320:	add	x28, x24, x26, lsl #3
   45324:	b	4534c <mpfr_divhigh_n@@Base+0x144>
   45328:	mov	x8, xzr
   4532c:	mov	x0, x28
   45330:	mov	x1, x28
   45334:	mov	x2, x20
   45338:	mov	x3, x19
   4533c:	sub	x23, x23, x8
   45340:	bl	c590 <__gmpn_add_n@plt>
   45344:	subs	x27, x27, x0
   45348:	b.eq	4538c <mpfr_divhigh_n@@Base+0x184>  // b.none
   4534c:	ldr	x8, [x25]
   45350:	sub	x9, x8, #0x1
   45354:	str	x9, [x25]
   45358:	cbnz	x8, 45328 <mpfr_divhigh_n@@Base+0x120>
   4535c:	mov	w8, #0x1                   	// #1
   45360:	cmp	x8, x22
   45364:	b.ge	45384 <mpfr_divhigh_n@@Base+0x17c>  // b.tcont
   45368:	lsl	x9, x8, #3
   4536c:	ldr	x10, [x25, x9]
   45370:	add	x8, x8, #0x1
   45374:	sub	x11, x10, #0x1
   45378:	str	x11, [x25, x9]
   4537c:	cbz	x10, 45360 <mpfr_divhigh_n@@Base+0x158>
   45380:	b	45328 <mpfr_divhigh_n@@Base+0x120>
   45384:	mov	w8, #0x1                   	// #1
   45388:	b	4532c <mpfr_divhigh_n@@Base+0x124>
   4538c:	ldur	x19, [x29, #-16]
   45390:	lsl	x8, x22, #3
   45394:	add	x1, x24, x8
   45398:	add	x2, x20, x8
   4539c:	mov	x0, x19
   453a0:	mov	x3, x26
   453a4:	bl	c180 <mpfr_divhigh_n@plt>
   453a8:	ldr	x8, [x19, x21]
   453ac:	adds	x8, x8, x0
   453b0:	str	x8, [x19, x21]
   453b4:	b.cc	453e0 <mpfr_divhigh_n@@Base+0x1d8>  // b.lo, b.ul, b.last
   453b8:	mov	w8, #0x1                   	// #1
   453bc:	mov	w9, #0x1                   	// #1
   453c0:	cmp	x9, x22
   453c4:	b.ge	453e4 <mpfr_divhigh_n@@Base+0x1dc>  // b.tcont
   453c8:	lsl	x10, x9, #3
   453cc:	ldr	x11, [x25, x10]
   453d0:	add	x9, x9, #0x1
   453d4:	adds	x11, x11, #0x1
   453d8:	str	x11, [x25, x10]
   453dc:	b.cs	453c0 <mpfr_divhigh_n@@Base+0x1b8>  // b.hs, b.nlast
   453e0:	mov	x8, xzr
   453e4:	ldur	x0, [x29, #-8]
   453e8:	add	x22, x8, x23
   453ec:	cbz	x0, 45744 <mpfr_divhigh_n@@Base+0x53c>
   453f0:	bl	c400 <mpfr_tmp_free@plt>
   453f4:	b	45744 <mpfr_divhigh_n@@Base+0x53c>
   453f8:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   453fc:	movk	x8, #0x5556
   45400:	smulh	x8, x19, x8
   45404:	add	x8, x8, x8, lsr #63
   45408:	lsl	x22, x8, #1
   4540c:	cbnz	x22, 45250 <mpfr_divhigh_n@@Base+0x48>
   45410:	add	x8, x24, x19, lsl #4
   45414:	add	x21, x24, x19, lsl #3
   45418:	sub	x8, x8, #0x8
   4541c:	mov	x9, x19
   45420:	subs	x10, x9, #0x1
   45424:	b.lt	45444 <mpfr_divhigh_n@@Base+0x23c>  // b.tstop
   45428:	add	x9, x20, x9, lsl #3
   4542c:	ldr	x11, [x8], #-8
   45430:	ldur	x9, [x9, #-8]
   45434:	cmp	x11, x9
   45438:	mov	x9, x10
   4543c:	b.eq	45420 <mpfr_divhigh_n@@Base+0x218>  // b.none
   45440:	b.ls	4550c <mpfr_divhigh_n@@Base+0x304>  // b.plast
   45444:	mov	x0, x21
   45448:	mov	x1, x21
   4544c:	mov	x2, x20
   45450:	mov	x3, x19
   45454:	bl	beb0 <__gmpn_sub_n@plt>
   45458:	mov	w22, #0x1                   	// #1
   4545c:	add	x8, x20, x19, lsl #3
   45460:	ldur	x26, [x8, #-8]
   45464:	cmp	x19, #0x1
   45468:	b.ne	45520 <mpfr_divhigh_n@@Base+0x318>  // b.any
   4546c:	lsr	x8, x26, #32
   45470:	mvn	x10, x26
   45474:	udiv	x13, x10, x8
   45478:	and	x9, x26, #0xffffffff
   4547c:	msub	w10, w13, w8, w10
   45480:	mov	w12, #0xffffffff            	// #-1
   45484:	mul	x11, x13, x9
   45488:	bfi	x12, x10, #32, #32
   4548c:	cmp	x12, x11
   45490:	b.cs	454b8 <mpfr_divhigh_n@@Base+0x2b0>  // b.hs, b.nlast
   45494:	add	x12, x12, x26
   45498:	cmp	x12, x26
   4549c:	sub	x10, x13, #0x1
   454a0:	b.cc	454bc <mpfr_divhigh_n@@Base+0x2b4>  // b.lo, b.ul, b.last
   454a4:	cmp	x12, x11
   454a8:	b.cs	454bc <mpfr_divhigh_n@@Base+0x2b4>  // b.hs, b.nlast
   454ac:	sub	x10, x13, #0x2
   454b0:	add	x12, x12, x26
   454b4:	b	454bc <mpfr_divhigh_n@@Base+0x2b4>
   454b8:	mov	x10, x13
   454bc:	sub	x12, x12, x11
   454c0:	udiv	x11, x12, x8
   454c4:	msub	w12, w11, w8, w12
   454c8:	mul	x8, x11, x9
   454cc:	mov	w9, #0xffffffff            	// #-1
   454d0:	bfi	x9, x12, #32, #32
   454d4:	cmp	x9, x8
   454d8:	b.cs	454f4 <mpfr_divhigh_n@@Base+0x2ec>  // b.hs, b.nlast
   454dc:	add	x9, x9, x26
   454e0:	cmp	x9, x8
   454e4:	ccmp	x9, x26, #0x0, cc  // cc = lo, ul, last
   454e8:	mov	x8, #0xfffffffffffffffe    	// #-2
   454ec:	cinc	x8, x8, cc  // cc = lo, ul, last
   454f0:	add	x11, x8, x11
   454f4:	ldr	x8, [x21]
   454f8:	orr	x9, x11, x10, lsl #32
   454fc:	umulh	x9, x8, x9
   45500:	add	x8, x9, x8
   45504:	str	x8, [x28]
   45508:	b	45744 <mpfr_divhigh_n@@Base+0x53c>
   4550c:	mov	x22, xzr
   45510:	add	x8, x20, x19, lsl #3
   45514:	ldur	x26, [x8, #-8]
   45518:	cmp	x19, #0x1
   4551c:	b.eq	4546c <mpfr_divhigh_n@@Base+0x264>  // b.none
   45520:	ldur	x27, [x8, #-16]
   45524:	lsr	x8, x26, #32
   45528:	mvn	x10, x26
   4552c:	udiv	x13, x10, x8
   45530:	and	x9, x26, #0xffffffff
   45534:	msub	w10, w13, w8, w10
   45538:	mov	w12, #0xffffffff            	// #-1
   4553c:	mul	x11, x13, x9
   45540:	bfi	x12, x10, #32, #32
   45544:	cmp	x12, x11
   45548:	b.cs	45570 <mpfr_divhigh_n@@Base+0x368>  // b.hs, b.nlast
   4554c:	add	x12, x12, x26
   45550:	cmp	x12, x26
   45554:	sub	x10, x13, #0x1
   45558:	b.cc	45574 <mpfr_divhigh_n@@Base+0x36c>  // b.lo, b.ul, b.last
   4555c:	cmp	x12, x11
   45560:	b.cs	45574 <mpfr_divhigh_n@@Base+0x36c>  // b.hs, b.nlast
   45564:	sub	x10, x13, #0x2
   45568:	add	x12, x12, x26
   4556c:	b	45574 <mpfr_divhigh_n@@Base+0x36c>
   45570:	mov	x10, x13
   45574:	sub	x12, x12, x11
   45578:	udiv	x11, x12, x8
   4557c:	msub	w12, w11, w8, w12
   45580:	mul	x8, x11, x9
   45584:	mov	w9, #0xffffffff            	// #-1
   45588:	bfi	x9, x12, #32, #32
   4558c:	cmp	x9, x8
   45590:	b.cs	455ac <mpfr_divhigh_n@@Base+0x3a4>  // b.hs, b.nlast
   45594:	add	x9, x9, x26
   45598:	cmp	x9, x8
   4559c:	ccmp	x9, x26, #0x0, cc  // cc = lo, ul, last
   455a0:	mov	x8, #0xfffffffffffffffe    	// #-2
   455a4:	cinc	x8, x8, cc  // cc = lo, ul, last
   455a8:	add	x11, x8, x11
   455ac:	orr	x8, x11, x10, lsl #32
   455b0:	mul	x9, x8, x26
   455b4:	adds	x9, x9, x27
   455b8:	b.cc	455d4 <mpfr_divhigh_n@@Base+0x3cc>  // b.lo, b.ul, b.last
   455bc:	subs	x9, x9, x26
   455c0:	cset	w10, cs  // cs = hs, nlast
   455c4:	csel	x11, x26, xzr, cs  // cs = hs, nlast
   455c8:	mvn	x10, x10
   455cc:	add	x8, x10, x8
   455d0:	sub	x9, x9, x11
   455d4:	umulh	x10, x27, x8
   455d8:	adds	x9, x10, x9
   455dc:	stp	x22, x21, [x29, #-32]
   455e0:	stur	x28, [x29, #-16]
   455e4:	b.cc	4560c <mpfr_divhigh_n@@Base+0x404>  // b.lo, b.ul, b.last
   455e8:	cmp	x9, x26
   455ec:	sub	x23, x8, #0x1
   455f0:	b.cc	45610 <mpfr_divhigh_n@@Base+0x408>  // b.lo, b.ul, b.last
   455f4:	mul	x10, x8, x27
   455f8:	cmp	x9, x26
   455fc:	sub	x8, x8, #0x2
   45600:	ccmp	x10, x27, #0x2, ls  // ls = plast
   45604:	csel	x23, x23, x8, cc  // cc = lo, ul, last
   45608:	b	45610 <mpfr_divhigh_n@@Base+0x408>
   4560c:	mov	x23, x8
   45610:	cmp	x19, #0x2
   45614:	b.lt	4572c <mpfr_divhigh_n@@Base+0x524>  // b.tstop
   45618:	ldur	x8, [x29, #-24]
   4561c:	sub	x25, x8, #0x8
   45620:	add	x8, x24, x19, lsl #4
   45624:	sub	x28, x8, #0x8
   45628:	ldur	x8, [x29, #-16]
   4562c:	sub	x22, x8, #0x8
   45630:	ldr	x8, [x28]
   45634:	cmp	x8, x26
   45638:	b.hi	456f0 <mpfr_divhigh_n@@Base+0x4e8>  // b.pmore
   4563c:	ldur	x9, [x28, #-8]
   45640:	cmp	x8, x26
   45644:	b.ne	45650 <mpfr_divhigh_n@@Base+0x448>  // b.any
   45648:	cmp	x9, x27
   4564c:	b.cs	456f0 <mpfr_divhigh_n@@Base+0x4e8>  // b.hs, b.nlast
   45650:	umulh	x10, x8, x23
   45654:	mul	x11, x8, x23
   45658:	adds	x13, x11, x9
   4565c:	adc	x8, x10, x8
   45660:	msub	x9, x8, x26, x9
   45664:	ldur	x12, [x28, #-16]
   45668:	subs	x14, x12, x27
   4566c:	sbc	x9, x9, x26
   45670:	umulh	x10, x27, x8
   45674:	mul	x11, x8, x27
   45678:	subs	x12, x14, x11
   4567c:	sbc	x9, x9, x10
   45680:	cmp	x9, x13
   45684:	cset	w10, cs  // cs = hs, nlast
   45688:	csetm	x11, cs  // cs = hs, nlast
   4568c:	sub	x10, x8, x10
   45690:	and	x13, x26, x11
   45694:	and	x11, x27, x11
   45698:	adds	x8, x12, x11
   4569c:	adc	x9, x9, x13
   456a0:	cmp	x9, x26
   456a4:	add	x24, x10, #0x1
   456a8:	b.cs	456f8 <mpfr_divhigh_n@@Base+0x4f0>  // b.hs, b.nlast
   456ac:	mov	x0, x25
   456b0:	mov	x1, x20
   456b4:	mov	x2, x19
   456b8:	mov	x3, x24
   456bc:	sub	x21, x19, #0x1
   456c0:	bl	c4b0 <__gmpn_submul_1@plt>
   456c4:	ldr	x8, [x28]
   456c8:	cmp	x0, x8
   456cc:	b.hi	45710 <mpfr_divhigh_n@@Base+0x508>  // b.pmore
   456d0:	add	x8, x21, #0x1
   456d4:	str	x24, [x22, x19, lsl #3]
   456d8:	add	x20, x20, #0x8
   456dc:	cmp	x8, #0x2
   456e0:	sub	x28, x28, #0x8
   456e4:	mov	x19, x21
   456e8:	b.gt	45630 <mpfr_divhigh_n@@Base+0x428>
   456ec:	b	4572c <mpfr_divhigh_n@@Base+0x524>
   456f0:	mov	x24, #0xffffffffffffffff    	// #-1
   456f4:	b	456ac <mpfr_divhigh_n@@Base+0x4a4>
   456f8:	cset	w9, hi  // hi = pmore
   456fc:	cmp	x8, x27
   45700:	cset	w8, cs  // cs = hs, nlast
   45704:	orr	w8, w8, w9
   45708:	add	x24, x24, x8
   4570c:	b	456ac <mpfr_divhigh_n@@Base+0x4a4>
   45710:	mov	x0, x25
   45714:	mov	x1, x25
   45718:	mov	x2, x20
   4571c:	mov	x3, x19
   45720:	bl	c590 <__gmpn_add_n@plt>
   45724:	sub	x24, x24, #0x1
   45728:	b	456d0 <mpfr_divhigh_n@@Base+0x4c8>
   4572c:	ldp	x22, x8, [x29, #-32]
   45730:	ldr	x8, [x8]
   45734:	umulh	x9, x8, x23
   45738:	add	x8, x9, x8
   4573c:	ldur	x9, [x29, #-16]
   45740:	str	x8, [x9]
   45744:	mov	x0, x22
   45748:	mov	sp, x29
   4574c:	ldp	x20, x19, [sp, #80]
   45750:	ldp	x22, x21, [sp, #64]
   45754:	ldp	x24, x23, [sp, #48]
   45758:	ldp	x26, x25, [sp, #32]
   4575c:	ldp	x28, x27, [sp, #16]
   45760:	ldp	x29, x30, [sp], #96
   45764:	ret
   45768:	sub	x0, x29, #0x8
   4576c:	mov	x1, x27
   45770:	bl	be10 <mpfr_tmp_allocate@plt>
   45774:	mov	x27, x0
   45778:	b	452cc <mpfr_divhigh_n@@Base+0xc4>

000000000004577c <mpfr_get_f@@Base>:
   4577c:	sub	sp, sp, #0x70
   45780:	stp	x29, x30, [sp, #32]
   45784:	stp	x24, x23, [sp, #64]
   45788:	stp	x22, x21, [sp, #80]
   4578c:	stp	x20, x19, [sp, #96]
   45790:	ldr	x8, [x1, #16]
   45794:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   45798:	mov	x20, x1
   4579c:	mov	x19, x0
   457a0:	cmp	x8, x9
   457a4:	str	x25, [sp, #48]
   457a8:	add	x29, sp, #0x20
   457ac:	b.le	45918 <mpfr_get_f@@Base+0x19c>
   457b0:	ldr	x11, [x20]
   457b4:	add	x12, x8, #0x3f
   457b8:	ldrsw	x25, [x19]
   457bc:	ldr	x21, [x19, #16]
   457c0:	sub	x9, x11, #0x1
   457c4:	add	x10, x11, #0x3e
   457c8:	cmp	x9, #0x0
   457cc:	csel	x9, x10, x9, lt  // lt = tstop
   457d0:	cmp	x8, #0x0
   457d4:	csel	x12, x12, x8, lt  // lt = tstop
   457d8:	and	w12, w12, #0xffffffc0
   457dc:	sub	w8, w8, w12
   457e0:	cmp	w8, #0x0
   457e4:	cset	w12, gt
   457e8:	lsl	w12, w12, #6
   457ec:	sub	w8, w12, w8
   457f0:	sxtw	x22, w8
   457f4:	lsl	x10, x25, #6
   457f8:	add	x8, x11, x22
   457fc:	cmp	x8, x10
   45800:	b.le	45890 <mpfr_get_f@@Base+0x114>
   45804:	sub	x1, x10, x22
   45808:	mov	x0, sp
   4580c:	mov	w23, w2
   45810:	bl	ca60 <mpfr_init2@plt>
   45814:	ldr	x8, [sp]
   45818:	sub	x9, x8, #0x1
   4581c:	add	x8, x8, #0x3e
   45820:	cmp	x9, #0x0
   45824:	csel	x8, x8, x9, lt  // lt = tstop
   45828:	asr	x8, x8, #6
   4582c:	add	x22, x8, #0x1
   45830:	cmp	x22, x25
   45834:	b.ne	45948 <mpfr_get_f@@Base+0x1cc>  // b.any
   45838:	ldr	w3, [x20, #8]
   4583c:	mov	x0, sp
   45840:	mov	x1, x20
   45844:	mov	w2, w23
   45848:	bl	c690 <mpfr_set4@plt>
   4584c:	ldp	x8, x1, [sp, #16]
   45850:	mov	w23, w0
   45854:	add	x9, x8, #0x3f
   45858:	cmp	x8, #0x0
   4585c:	csel	x9, x9, x8, lt  // lt = tstop
   45860:	and	w9, w9, #0xffffffc0
   45864:	sub	w8, w8, w9
   45868:	cmp	w8, #0x0
   4586c:	cset	w9, gt
   45870:	lsl	w9, w9, #6
   45874:	subs	w24, w9, w8
   45878:	b.eq	458dc <mpfr_get_f@@Base+0x160>  // b.none
   4587c:	mov	x0, x21
   45880:	mov	x2, x22
   45884:	mov	w3, w24
   45888:	bl	bd30 <__gmpn_rshift@plt>
   4588c:	b	458f0 <mpfr_get_f@@Base+0x174>
   45890:	asr	x8, x9, #6
   45894:	cmp	x8, x25
   45898:	add	x23, x8, #0x1
   4589c:	b.ge	45964 <mpfr_get_f@@Base+0x1e8>  // b.tcont
   458a0:	ldr	x1, [x20, #24]
   458a4:	sub	x24, x25, x23
   458a8:	add	x0, x21, x24, lsl #3
   458ac:	cbz	w22, 4598c <mpfr_get_f@@Base+0x210>
   458b0:	mov	x2, x23
   458b4:	mov	w3, w22
   458b8:	bl	bd30 <__gmpn_rshift@plt>
   458bc:	cmp	x24, #0x0
   458c0:	mov	x23, x0
   458c4:	b.gt	458cc <mpfr_get_f@@Base+0x150>
   458c8:	cbnz	x23, 45a88 <mpfr_get_f@@Base+0x30c>
   458cc:	subs	x24, x24, #0x1
   458d0:	b.lt	459b4 <mpfr_get_f@@Base+0x238>  // b.tstop
   458d4:	str	x23, [x21, x24, lsl #3]
   458d8:	b	4599c <mpfr_get_f@@Base+0x220>
   458dc:	cmp	x21, x1
   458e0:	b.eq	458f0 <mpfr_get_f@@Base+0x174>  // b.none
   458e4:	lsl	x2, x22, #3
   458e8:	mov	x0, x21
   458ec:	bl	ba70 <memcpy@plt>
   458f0:	ldr	x8, [sp, #16]
   458f4:	mov	x0, sp
   458f8:	add	x8, x8, w24, sxtw
   458fc:	add	x9, x8, #0x3f
   45900:	cmp	x8, #0x0
   45904:	csel	x8, x9, x8, lt  // lt = tstop
   45908:	asr	x8, x8, #6
   4590c:	str	x8, [x19, #8]
   45910:	bl	c0b0 <mpfr_clear@plt>
   45914:	b	459d4 <mpfr_get_f@@Base+0x258>
   45918:	mov	x9, #0x2                   	// #2
   4591c:	movk	x9, #0x8000, lsl #48
   45920:	cmp	x8, x9
   45924:	b.eq	45a04 <mpfr_get_f@@Base+0x288>  // b.none
   45928:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4592c:	cmp	x8, x9
   45930:	b.ne	45a2c <mpfr_get_f@@Base+0x2b0>  // b.any
   45934:	mov	x0, x19
   45938:	mov	x1, xzr
   4593c:	bl	c1c0 <__gmpf_set_ui@plt>
   45940:	mov	w23, wzr
   45944:	b	459e4 <mpfr_get_f@@Base+0x268>
   45948:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4594c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   45950:	add	x0, x0, #0x68c
   45954:	add	x2, x2, #0x6b0
   45958:	mov	w1, #0x7c                  	// #124
   4595c:	bl	cb20 <mpfr_assert_fail@plt>
   45960:	b	45838 <mpfr_get_f@@Base+0xbc>
   45964:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   45968:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4596c:	add	x0, x0, #0x68c
   45970:	add	x2, x2, #0x694
   45974:	mov	w1, #0x61                  	// #97
   45978:	bl	cb20 <mpfr_assert_fail@plt>
   4597c:	ldr	x1, [x20, #24]
   45980:	sub	x24, x25, x23
   45984:	add	x0, x21, x24, lsl #3
   45988:	cbnz	w22, 458b0 <mpfr_get_f@@Base+0x134>
   4598c:	cmp	x0, x1
   45990:	b.eq	4599c <mpfr_get_f@@Base+0x220>  // b.none
   45994:	lsl	x2, x23, #3
   45998:	bl	ba70 <memcpy@plt>
   4599c:	cmp	x24, #0x1
   459a0:	b.lt	459b4 <mpfr_get_f@@Base+0x238>  // b.tstop
   459a4:	lsl	x2, x24, #3
   459a8:	mov	x0, x21
   459ac:	mov	w1, wzr
   459b0:	bl	c150 <memset@plt>
   459b4:	ldr	x8, [x20, #16]
   459b8:	mov	w23, wzr
   459bc:	add	x8, x8, x22
   459c0:	add	x9, x8, #0x3f
   459c4:	cmp	x8, #0x0
   459c8:	csel	x8, x9, x8, lt  // lt = tstop
   459cc:	asr	x8, x8, #6
   459d0:	str	x8, [x19, #8]
   459d4:	ldr	w8, [x20, #8]
   459d8:	cmp	w8, #0x0
   459dc:	cneg	w8, w25, lt  // lt = tstop
   459e0:	str	w8, [x19, #4]
   459e4:	mov	w0, w23
   459e8:	ldp	x20, x19, [sp, #96]
   459ec:	ldp	x22, x21, [sp, #80]
   459f0:	ldp	x24, x23, [sp, #64]
   459f4:	ldr	x25, [sp, #48]
   459f8:	ldp	x29, x30, [sp, #32]
   459fc:	add	sp, sp, #0x70
   45a00:	ret
   45a04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45a08:	ldr	x1, [x0, #2640]
   45a0c:	add	x0, x0, #0xa50
   45a10:	blr	x1
   45a14:	mrs	x8, tpidr_el0
   45a18:	ldr	w9, [x8, x0]
   45a1c:	mov	w23, wzr
   45a20:	orr	w9, w9, #0x10
   45a24:	str	w9, [x8, x0]
   45a28:	b	459e4 <mpfr_get_f@@Base+0x268>
   45a2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45a30:	ldr	x1, [x0, #2640]
   45a34:	add	x0, x0, #0xa50
   45a38:	blr	x1
   45a3c:	mrs	x8, tpidr_el0
   45a40:	ldr	w9, [x8, x0]
   45a44:	orr	w9, w9, #0x10
   45a48:	str	w9, [x8, x0]
   45a4c:	ldr	w8, [x19]
   45a50:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   45a54:	str	x9, [x19, #8]
   45a58:	cmp	w8, #0x1
   45a5c:	str	w8, [x19, #4]
   45a60:	b.lt	45a74 <mpfr_get_f@@Base+0x2f8>  // b.tstop
   45a64:	ldr	x0, [x19, #16]
   45a68:	lsl	x2, x8, #3
   45a6c:	mov	w1, #0xff                  	// #255
   45a70:	bl	c150 <memset@plt>
   45a74:	ldr	w8, [x20, #8]
   45a78:	cmp	w8, #0x0
   45a7c:	b.le	45aac <mpfr_get_f@@Base+0x330>
   45a80:	mov	w23, #0xffffffff            	// #-1
   45a84:	b	459e4 <mpfr_get_f@@Base+0x268>
   45a88:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   45a8c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   45a90:	add	x0, x0, #0x68c
   45a94:	add	x2, x2, #0x69d
   45a98:	mov	w1, #0x68                  	// #104
   45a9c:	bl	cb20 <mpfr_assert_fail@plt>
   45aa0:	subs	x24, x24, #0x1
   45aa4:	b.ge	458d4 <mpfr_get_f@@Base+0x158>  // b.tcont
   45aa8:	b	459b4 <mpfr_get_f@@Base+0x238>
   45aac:	mov	x0, x19
   45ab0:	mov	x1, x19
   45ab4:	bl	c6c0 <__gmpf_neg@plt>
   45ab8:	mov	w23, #0x1                   	// #1
   45abc:	b	459e4 <mpfr_get_f@@Base+0x268>

0000000000045ac0 <mpfr_round_p@@Base>:
   45ac0:	lsl	x9, x1, #6
   45ac4:	cmp	x9, x3
   45ac8:	mov	w8, wzr
   45acc:	b.le	45c20 <mpfr_round_p@@Base+0x160>
   45ad0:	cmp	x2, #0x1
   45ad4:	b.lt	45c20 <mpfr_round_p@@Base+0x160>  // b.tstop
   45ad8:	cmp	x2, x3
   45adc:	b.ls	45c20 <mpfr_round_p@@Base+0x160>  // b.plast
   45ae0:	cmp	x9, x2
   45ae4:	add	x8, x3, #0x3f
   45ae8:	csel	x9, x9, x2, cc  // cc = lo, ul, last
   45aec:	cmp	x3, #0x0
   45af0:	csel	x10, x8, x3, lt  // lt = tstop
   45af4:	asr	x8, x10, #6
   45af8:	and	x10, x10, #0xffffffffffffffc0
   45afc:	sub	x12, x3, x10
   45b00:	mvn	x10, x8
   45b04:	add	x10, x10, x1
   45b08:	add	x10, x0, x10, lsl #3
   45b0c:	ldr	x15, [x10], #-8
   45b10:	add	x11, x9, #0x3f
   45b14:	cmp	x9, #0x0
   45b18:	neg	x13, x12
   45b1c:	mov	x16, #0xffffffffffffffff    	// #-1
   45b20:	csel	x11, x11, x9, lt  // lt = tstop
   45b24:	lsl	x13, x16, x13
   45b28:	cmp	w12, #0x0
   45b2c:	asr	x11, x11, #6
   45b30:	csinv	x12, x16, x13, eq  // eq = none
   45b34:	sub	x14, x11, x8
   45b38:	and	x13, x15, x12
   45b3c:	cbnz	x14, 45b68 <mpfr_round_p@@Base+0xa8>
   45b40:	and	x8, x9, #0x3f
   45b44:	neg	x8, x8
   45b48:	lsr	x9, x13, x8
   45b4c:	lsr	x8, x12, x8
   45b50:	cmp	x9, #0x0
   45b54:	cset	w10, ne  // ne = any
   45b58:	cmp	x9, x8
   45b5c:	cset	w8, ne  // ne = any
   45b60:	and	w0, w8, w10
   45b64:	ret
   45b68:	cbz	x13, 45b7c <mpfr_round_p@@Base+0xbc>
   45b6c:	cmp	x13, x12
   45b70:	b.eq	45ba4 <mpfr_round_p@@Base+0xe4>  // b.none
   45b74:	mov	w0, #0x1                   	// #1
   45b78:	ret
   45b7c:	mvn	x12, x11
   45b80:	sub	x8, x8, x11
   45b84:	add	x11, x12, x1
   45b88:	add	x12, x8, #0x1
   45b8c:	mov	w8, #0x1                   	// #1
   45b90:	cbz	x12, 45bd0 <mpfr_round_p@@Base+0x110>
   45b94:	ldr	x13, [x10], #-8
   45b98:	add	x12, x12, #0x1
   45b9c:	cbz	x13, 45b90 <mpfr_round_p@@Base+0xd0>
   45ba0:	b	45c20 <mpfr_round_p@@Base+0x160>
   45ba4:	mvn	x12, x11
   45ba8:	sub	x8, x8, x11
   45bac:	add	x12, x12, x1
   45bb0:	add	x13, x8, #0x1
   45bb4:	cbz	x13, 45bfc <mpfr_round_p@@Base+0x13c>
   45bb8:	ldr	x8, [x10], #-8
   45bbc:	add	x13, x13, #0x1
   45bc0:	cmn	x8, #0x1
   45bc4:	mov	w8, #0x1                   	// #1
   45bc8:	b.eq	45bb4 <mpfr_round_p@@Base+0xf4>  // b.none
   45bcc:	b	45c20 <mpfr_round_p@@Base+0x160>
   45bd0:	add	x8, x9, #0x3f
   45bd4:	cmp	x9, #0x0
   45bd8:	csel	x8, x8, x9, lt  // lt = tstop
   45bdc:	and	x8, x8, #0xffffffffffffffc0
   45be0:	sub	x8, x9, x8
   45be4:	cbz	w8, 45c20 <mpfr_round_p@@Base+0x160>
   45be8:	ldr	x9, [x0, x11, lsl #3]
   45bec:	neg	x8, x8
   45bf0:	lsr	x8, x9, x8
   45bf4:	cmp	x8, #0x0
   45bf8:	b	45c1c <mpfr_round_p@@Base+0x15c>
   45bfc:	sub	x8, x9, x11, lsl #6
   45c00:	cbz	w8, 45c20 <mpfr_round_p@@Base+0x160>
   45c04:	ldr	x9, [x0, x12, lsl #3]
   45c08:	neg	x8, x8
   45c0c:	mov	x10, #0xffffffffffffffff    	// #-1
   45c10:	lsr	x9, x9, x8
   45c14:	lsr	x8, x10, x8
   45c18:	cmp	x9, x8
   45c1c:	cset	w8, ne  // ne = any
   45c20:	mov	w0, w8
   45c24:	ret

0000000000045c28 <mpfr_erfc@@Base>:
   45c28:	sub	sp, sp, #0x100
   45c2c:	stp	x28, x27, [sp, #176]
   45c30:	mov	x28, #0x4                   	// #4
   45c34:	stp	x29, x30, [sp, #160]
   45c38:	stp	x26, x25, [sp, #192]
   45c3c:	stp	x24, x23, [sp, #208]
   45c40:	stp	x22, x21, [sp, #224]
   45c44:	stp	x20, x19, [sp, #240]
   45c48:	add	x29, sp, #0xa0
   45c4c:	mov	w20, w2
   45c50:	mov	x21, x1
   45c54:	mov	x19, x0
   45c58:	movk	x28, #0x8000, lsl #48
   45c5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45c60:	ldr	x1, [x0, #2576]
   45c64:	add	x0, x0, #0xa10
   45c68:	blr	x1
   45c6c:	ldr	x8, [x21, #16]
   45c70:	mrs	x23, tpidr_el0
   45c74:	cmp	x8, x28
   45c78:	b.lt	45f54 <mpfr_erfc@@Base+0x32c>  // b.tstop
   45c7c:	ldr	w9, [x21, #8]
   45c80:	ldr	x24, [x23, x0]
   45c84:	cmp	w9, #0x1
   45c88:	b.lt	45cf8 <mpfr_erfc@@Base+0xd0>  // b.tstop
   45c8c:	mov	x8, #0xffffffffc0000001    	// #-1073741823
   45c90:	cmp	x24, x8
   45c94:	b.lt	45cac <mpfr_erfc@@Base+0x84>  // b.tstop
   45c98:	mov	w1, #0x6a92                	// #27282
   45c9c:	mov	x0, x21
   45ca0:	mov	x2, xzr
   45ca4:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   45ca8:	tbz	w0, #31, 45cc4 <mpfr_erfc@@Base+0x9c>
   45cac:	mov	w1, #0x2646                	// #9798
   45cb0:	movk	w1, #0x6a91, lsl #16
   45cb4:	mov	x0, x21
   45cb8:	mov	x2, xzr
   45cbc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   45cc0:	tbnz	w0, #31, 45ce0 <mpfr_erfc@@Base+0xb8>
   45cc4:	cmp	w20, #0x0
   45cc8:	csinc	w1, w20, wzr, ne  // ne = any
   45ccc:	mov	w2, #0x1                   	// #1
   45cd0:	mov	x0, x19
   45cd4:	bl	c3c0 <mpfr_underflow@plt>
   45cd8:	mov	w22, w0
   45cdc:	b	4650c <mpfr_erfc@@Base+0x8e4>
   45ce0:	ldr	w9, [x21, #8]
   45ce4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45ce8:	ldr	x1, [x0, #2576]
   45cec:	add	x0, x0, #0xa10
   45cf0:	blr	x1
   45cf4:	ldr	x24, [x23, x0]
   45cf8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45cfc:	ldr	x1, [x0, #2640]
   45d00:	add	x0, x0, #0xa50
   45d04:	blr	x1
   45d08:	ldr	w27, [x23, x0]
   45d0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45d10:	ldr	x1, [x0, #2608]
   45d14:	add	x0, x0, #0xa30
   45d18:	blr	x1
   45d1c:	ldr	x25, [x23, x0]
   45d20:	mov	x8, x0
   45d24:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45d28:	ldr	x1, [x0, #2576]
   45d2c:	add	x0, x0, #0xa10
   45d30:	blr	x1
   45d34:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   45d38:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   45d3c:	str	x10, [x23, x0]
   45d40:	str	x11, [x23, x8]
   45d44:	tbnz	w9, #31, 45ddc <mpfr_erfc@@Base+0x1b4>
   45d48:	ldr	x8, [x21, #16]
   45d4c:	cmn	x8, #0x2
   45d50:	b.gt	45d68 <mpfr_erfc@@Base+0x140>
   45d54:	ldr	x9, [x19]
   45d58:	mvn	x2, x8
   45d5c:	add	x8, x9, #0x1
   45d60:	cmp	x8, x2
   45d64:	b.cc	45fec <mpfr_erfc@@Base+0x3c4>  // b.lo, b.ul, b.last
   45d68:	ldr	x22, [x19]
   45d6c:	cmp	x22, #0x1
   45d70:	b.eq	45f98 <mpfr_erfc@@Base+0x370>  // b.none
   45d74:	mov	x8, x22
   45d78:	b.le	45fa0 <mpfr_erfc@@Base+0x378>
   45d7c:	sub	x8, x8, #0x1
   45d80:	clz	x8, x8
   45d84:	mov	w9, #0x40                  	// #64
   45d88:	sub	x8, x9, x8
   45d8c:	ldr	x9, [x21, #16]
   45d90:	add	x8, x22, x8
   45d94:	add	x0, sp, #0x20
   45d98:	str	x25, [sp, #16]
   45d9c:	lsl	x10, x9, #1
   45da0:	cmp	x9, #0x0
   45da4:	csel	x9, x10, xzr, gt
   45da8:	add	x8, x8, x9
   45dac:	add	x22, x8, #0x3
   45db0:	mov	x1, x22
   45db4:	bl	ca60 <mpfr_init2@plt>
   45db8:	cmp	w20, #0x0
   45dbc:	cset	w8, eq  // eq = none
   45dc0:	str	x8, [sp, #8]
   45dc4:	mov	w8, #0x40                  	// #64
   45dc8:	str	x8, [sp, #24]
   45dcc:	ldr	w8, [x21, #8]
   45dd0:	cmp	w8, #0x1
   45dd4:	b.ge	46030 <mpfr_erfc@@Base+0x408>  // b.tcont
   45dd8:	b	463b0 <mpfr_erfc@@Base+0x788>
   45ddc:	ldr	x22, [x21, #16]
   45de0:	ldr	x8, [x19]
   45de4:	cmp	x22, #0x2
   45de8:	b.lt	45df4 <mpfr_erfc@@Base+0x1cc>  // b.tstop
   45dec:	cmp	x8, #0x8
   45df0:	b.lt	45f00 <mpfr_erfc@@Base+0x2d8>  // b.tstop
   45df4:	cmp	x22, #0x2
   45df8:	b.le	45e04 <mpfr_erfc@@Base+0x1dc>
   45dfc:	cmp	x8, #0x1a
   45e00:	b.lt	45f00 <mpfr_erfc@@Base+0x2d8>  // b.tstop
   45e04:	cmp	x8, #0x78
   45e08:	b.gt	45e24 <mpfr_erfc@@Base+0x1fc>
   45e0c:	mov	x1, #0xfffffffffffffff7    	// #-9
   45e10:	mov	x0, x21
   45e14:	mov	x2, xzr
   45e18:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   45e1c:	cmp	w0, #0x1
   45e20:	b.lt	45f00 <mpfr_erfc@@Base+0x2d8>  // b.tstop
   45e24:	mov	x1, #0xffffffffffff956e    	// #-27282
   45e28:	mov	x0, x21
   45e2c:	mov	x2, xzr
   45e30:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   45e34:	cmp	w0, #0x0
   45e38:	b.le	45f00 <mpfr_erfc@@Base+0x2d8>
   45e3c:	cmp	x22, #0x3
   45e40:	b.lt	45d48 <mpfr_erfc@@Base+0x120>  // b.tstop
   45e44:	sub	x0, x29, #0x20
   45e48:	mov	w1, #0x20                  	// #32
   45e4c:	bl	ca60 <mpfr_init2@plt>
   45e50:	sub	x0, x29, #0x40
   45e54:	mov	w1, #0x20                  	// #32
   45e58:	bl	ca60 <mpfr_init2@plt>
   45e5c:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   45e60:	add	x1, x1, #0x6b9
   45e64:	sub	x0, x29, #0x20
   45e68:	bl	c340 <mpfr_set_str_binary@plt>
   45e6c:	sub	x0, x29, #0x40
   45e70:	mov	w2, #0x1                   	// #1
   45e74:	mov	x1, x21
   45e78:	bl	c3f0 <mpfr_sqr@plt>
   45e7c:	sub	x0, x29, #0x20
   45e80:	sub	x1, x29, #0x20
   45e84:	sub	x2, x29, #0x40
   45e88:	mov	w3, #0x1                   	// #1
   45e8c:	bl	bda0 <mpfr_mul@plt>
   45e90:	sub	x0, x29, #0x40
   45e94:	mov	w2, #0x1                   	// #1
   45e98:	mov	x1, x21
   45e9c:	bl	bdc0 <mpfr_neg@plt>
   45ea0:	sub	x0, x29, #0x40
   45ea4:	sub	x1, x29, #0x40
   45ea8:	mov	w2, #0x1                   	// #1
   45eac:	bl	c210 <mpfr_log2@plt>
   45eb0:	sub	x0, x29, #0x20
   45eb4:	sub	x1, x29, #0x20
   45eb8:	sub	x2, x29, #0x40
   45ebc:	mov	w3, #0x1                   	// #1
   45ec0:	bl	c1e0 <mpfr_add@plt>
   45ec4:	ldr	x1, [x19]
   45ec8:	sub	x0, x29, #0x40
   45ecc:	mov	w3, #0x2                   	// #2
   45ed0:	mov	x2, xzr
   45ed4:	bl	bae0 <mpfr_set_si_2exp@plt>
   45ed8:	sub	x0, x29, #0x20
   45edc:	sub	x1, x29, #0x40
   45ee0:	mov	w2, #0x1                   	// #1
   45ee4:	bl	c980 <mpfr_cmp3@plt>
   45ee8:	mov	w22, w0
   45eec:	sub	x0, x29, #0x20
   45ef0:	bl	c0b0 <mpfr_clear@plt>
   45ef4:	sub	x0, x29, #0x40
   45ef8:	bl	c0b0 <mpfr_clear@plt>
   45efc:	tbnz	w22, #31, 45d48 <mpfr_erfc@@Base+0x120>
   45f00:	mov	w1, #0x2                   	// #2
   45f04:	mov	x0, x19
   45f08:	mov	x2, xzr
   45f0c:	mov	w3, wzr
   45f10:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   45f14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45f18:	ldr	x1, [x0, #2640]
   45f1c:	add	x0, x0, #0xa50
   45f20:	blr	x1
   45f24:	ldr	w8, [x23, x0]
   45f28:	orr	w9, w20, #0x2
   45f2c:	cmp	w9, #0x3
   45f30:	orr	w8, w8, #0x8
   45f34:	str	w8, [x23, x0]
   45f38:	b.ne	45f4c <mpfr_erfc@@Base+0x324>  // b.any
   45f3c:	mov	x0, x19
   45f40:	bl	be20 <mpfr_nextbelow@plt>
   45f44:	mov	w22, #0xffffffff            	// #-1
   45f48:	b	464a0 <mpfr_erfc@@Base+0x878>
   45f4c:	mov	w22, #0x1                   	// #1
   45f50:	b	464a0 <mpfr_erfc@@Base+0x878>
   45f54:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   45f58:	cmp	x8, x9
   45f5c:	b.eq	45fc0 <mpfr_erfc@@Base+0x398>  // b.none
   45f60:	mov	x9, #0x2                   	// #2
   45f64:	movk	x9, #0x8000, lsl #48
   45f68:	cmp	x8, x9
   45f6c:	b.ne	45fd4 <mpfr_erfc@@Base+0x3ac>  // b.any
   45f70:	sub	x8, x28, #0x2
   45f74:	str	x8, [x19, #16]
   45f78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   45f7c:	ldr	x1, [x0, #2640]
   45f80:	add	x0, x0, #0xa50
   45f84:	blr	x1
   45f88:	ldr	w8, [x23, x0]
   45f8c:	mov	w22, wzr
   45f90:	orr	w8, w8, #0x4
   45f94:	b	46508 <mpfr_erfc@@Base+0x8e0>
   45f98:	mov	x8, xzr
   45f9c:	b	45d8c <mpfr_erfc@@Base+0x164>
   45fa0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   45fa4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   45fa8:	add	x0, x0, #0x6db
   45fac:	add	x2, x2, #0xbad
   45fb0:	mov	w1, #0xe2                  	// #226
   45fb4:	bl	cb20 <mpfr_assert_fail@plt>
   45fb8:	ldr	x8, [x19]
   45fbc:	b	45d7c <mpfr_erfc@@Base+0x154>
   45fc0:	ldr	w8, [x21, #8]
   45fc4:	cmp	w8, #0x1
   45fc8:	cset	w8, lt  // lt = tstop
   45fcc:	lsl	x1, x8, #1
   45fd0:	b	45fd8 <mpfr_erfc@@Base+0x3b0>
   45fd4:	mov	w1, #0x1                   	// #1
   45fd8:	mov	x0, x19
   45fdc:	mov	x2, xzr
   45fe0:	mov	w3, w20
   45fe4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   45fe8:	b	45cd8 <mpfr_erfc@@Base+0xb0>
   45fec:	ldr	w8, [x21, #8]
   45ff0:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   45ff4:	ldr	x1, [x1, #3944]
   45ff8:	mov	x0, x19
   45ffc:	lsr	w3, w8, #31
   46000:	mov	w4, w20
   46004:	bl	c530 <mpfr_round_near_x@plt>
   46008:	mov	w22, w0
   4600c:	cbnz	w0, 464a0 <mpfr_erfc@@Base+0x878>
   46010:	b	45d68 <mpfr_erfc@@Base+0x140>
   46014:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   46018:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4601c:	mov	w1, #0x10a                 	// #266
   46020:	add	x0, x0, #0x6db
   46024:	add	x2, x2, #0x622
   46028:	bl	cb20 <mpfr_assert_fail@plt>
   4602c:	b	46400 <mpfr_erfc@@Base+0x7d8>
   46030:	ldr	x8, [x21, #16]
   46034:	subs	x26, x22, #0x1
   46038:	lsl	x8, x8, #1
   4603c:	sub	x25, x8, #0x2
   46040:	b.eq	46384 <mpfr_erfc@@Base+0x75c>  // b.none
   46044:	b.le	46394 <mpfr_erfc@@Base+0x76c>
   46048:	clz	x8, x26
   4604c:	mov	w9, #0x40                  	// #64
   46050:	sub	x8, x9, x8
   46054:	cmp	x25, x8
   46058:	b.lt	463b0 <mpfr_erfc@@Base+0x788>  // b.tstop
   4605c:	ldr	x26, [sp, #32]
   46060:	sub	x0, x29, #0x20
   46064:	str	w27, [sp, #4]
   46068:	mov	x1, x26
   4606c:	bl	ca60 <mpfr_init2@plt>
   46070:	sub	x0, x29, #0x40
   46074:	mov	x1, x26
   46078:	bl	ca60 <mpfr_init2@plt>
   4607c:	add	x0, sp, #0x40
   46080:	mov	w1, #0x1f                  	// #31
   46084:	bl	ca60 <mpfr_init2@plt>
   46088:	sub	x0, x29, #0x40
   4608c:	mov	w3, #0x3                   	// #3
   46090:	mov	x1, x21
   46094:	mov	x2, x21
   46098:	bl	bda0 <mpfr_mul@plt>
   4609c:	sub	x0, x29, #0x40
   460a0:	sub	x2, x29, #0x40
   460a4:	mov	w1, #0x1                   	// #1
   460a8:	mov	w3, #0x2                   	// #2
   460ac:	bl	c2f0 <mpfr_ui_div@plt>
   460b0:	sub	x0, x29, #0x40
   460b4:	sub	x1, x29, #0x40
   460b8:	mov	w2, #0x1                   	// #1
   460bc:	mov	w3, #0x2                   	// #2
   460c0:	bl	c8f0 <mpfr_div_2ui@plt>
   460c4:	sub	x0, x29, #0x20
   460c8:	mov	w1, #0x1                   	// #1
   460cc:	mov	x2, xzr
   460d0:	mov	w3, wzr
   460d4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   460d8:	ldur	w3, [x29, #-24]
   460dc:	add	x0, sp, #0x20
   460e0:	sub	x1, x29, #0x20
   460e4:	mov	w2, wzr
   460e8:	bl	c690 <mpfr_set4@plt>
   460ec:	mov	w8, #0x1                   	// #1
   460f0:	str	w8, [sp, #72]
   460f4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   460f8:	mov	w27, #0x1                   	// #1
   460fc:	mov	w28, #0xe                   	// #14
   46100:	mov	w25, #0x1                   	// #1
   46104:	str	x8, [sp, #80]
   46108:	b	4611c <mpfr_erfc@@Base+0x4f4>
   4610c:	bl	c1e0 <mpfr_add@plt>
   46110:	add	x25, x25, #0x1
   46114:	add	x28, x28, #0xe
   46118:	add	x27, x27, #0x2
   4611c:	sub	x0, x29, #0x20
   46120:	sub	x1, x29, #0x20
   46124:	mov	w3, #0x2                   	// #2
   46128:	mov	x2, x27
   4612c:	bl	bab0 <mpfr_mul_ui@plt>
   46130:	sub	x0, x29, #0x20
   46134:	sub	x1, x29, #0x20
   46138:	sub	x2, x29, #0x40
   4613c:	mov	w3, #0x2                   	// #2
   46140:	bl	bda0 <mpfr_mul@plt>
   46144:	ldr	x8, [sp, #48]
   46148:	ldur	x9, [x29, #-16]
   4614c:	add	x0, sp, #0x40
   46150:	add	x1, sp, #0x40
   46154:	mov	w3, #0x2                   	// #2
   46158:	sub	x2, x8, x9
   4615c:	bl	bbe0 <mpfr_mul_2si@plt>
   46160:	add	x0, sp, #0x40
   46164:	add	x1, sp, #0x40
   46168:	mov	w3, #0x2                   	// #2
   4616c:	mov	x2, x28
   46170:	bl	c270 <mpfr_add_ui@plt>
   46174:	ldr	x8, [sp, #48]
   46178:	ldur	x9, [x29, #-16]
   4617c:	add	x0, sp, #0x40
   46180:	add	x1, sp, #0x40
   46184:	mov	w3, #0x2                   	// #2
   46188:	sub	x2, x8, x9
   4618c:	bl	c410 <mpfr_div_2si@plt>
   46190:	ldur	x8, [x29, #-16]
   46194:	ldr	x9, [sp, #48]
   46198:	add	x8, x8, x26
   4619c:	cmp	x8, x9
   461a0:	b.le	461c0 <mpfr_erfc@@Base+0x598>
   461a4:	add	x0, sp, #0x20
   461a8:	add	x1, sp, #0x20
   461ac:	sub	x2, x29, #0x20
   461b0:	mov	w3, wzr
   461b4:	tbz	w25, #0, 4610c <mpfr_erfc@@Base+0x4e4>
   461b8:	bl	bbc0 <mpfr_sub@plt>
   461bc:	b	46110 <mpfr_erfc@@Base+0x4e8>
   461c0:	add	x0, sp, #0x40
   461c4:	add	x1, sp, #0x40
   461c8:	mov	w2, #0x1                   	// #1
   461cc:	mov	w3, #0x2                   	// #2
   461d0:	bl	c270 <mpfr_add_ui@plt>
   461d4:	sub	x0, x29, #0x20
   461d8:	mov	w3, #0x2                   	// #2
   461dc:	mov	x1, x21
   461e0:	mov	x2, x21
   461e4:	bl	bda0 <mpfr_mul@plt>
   461e8:	add	x0, sp, #0x40
   461ec:	add	x1, sp, #0x40
   461f0:	mov	w2, #0x3                   	// #3
   461f4:	mov	w3, #0x2                   	// #2
   461f8:	bl	c8f0 <mpfr_div_2ui@plt>
   461fc:	add	x0, sp, #0x40
   46200:	add	x1, sp, #0x40
   46204:	sub	x2, x29, #0x20
   46208:	mov	w3, #0x2                   	// #2
   4620c:	bl	c1e0 <mpfr_add@plt>
   46210:	add	x0, sp, #0x40
   46214:	add	x1, sp, #0x40
   46218:	mov	w2, #0x3                   	// #3
   4621c:	mov	w3, #0x2                   	// #2
   46220:	bl	c2c0 <mpfr_mul_2ui@plt>
   46224:	sub	x0, x29, #0x20
   46228:	sub	x1, x29, #0x20
   4622c:	mov	w2, #0x2                   	// #2
   46230:	bl	c740 <mpfr_exp@plt>
   46234:	sub	x0, x29, #0x20
   46238:	sub	x1, x29, #0x20
   4623c:	mov	x2, x21
   46240:	mov	w3, wzr
   46244:	bl	bda0 <mpfr_mul@plt>
   46248:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4624c:	ldr	x1, [x0, #2688]
   46250:	add	x0, x0, #0xa80
   46254:	blr	x1
   46258:	add	x1, x23, x0
   4625c:	sub	x0, x29, #0x40
   46260:	mov	w2, #0x1                   	// #1
   46264:	bl	c380 <mpfr_cache@plt>
   46268:	sub	x0, x29, #0x40
   4626c:	sub	x1, x29, #0x40
   46270:	mov	w2, wzr
   46274:	bl	c920 <mpfr_sqrt@plt>
   46278:	sub	x0, x29, #0x20
   4627c:	sub	x1, x29, #0x20
   46280:	sub	x2, x29, #0x40
   46284:	mov	w3, wzr
   46288:	bl	bda0 <mpfr_mul@plt>
   4628c:	add	x0, sp, #0x20
   46290:	add	x1, sp, #0x20
   46294:	sub	x2, x29, #0x20
   46298:	mov	w3, wzr
   4629c:	bl	c610 <mpfr_div@plt>
   462a0:	ldr	x8, [sp, #48]
   462a4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   462a8:	cmp	x8, x9
   462ac:	b.ne	46334 <mpfr_erfc@@Base+0x70c>  // b.any
   462b0:	sub	x0, x29, #0x20
   462b4:	mov	w3, #0x3                   	// #3
   462b8:	mov	x1, x21
   462bc:	mov	x2, x21
   462c0:	bl	bda0 <mpfr_mul@plt>
   462c4:	sub	x0, x29, #0x20
   462c8:	sub	x1, x29, #0x20
   462cc:	mov	w2, #0x2                   	// #2
   462d0:	bl	bdc0 <mpfr_neg@plt>
   462d4:	sub	x0, x29, #0x20
   462d8:	sub	x1, x29, #0x20
   462dc:	mov	w2, #0x2                   	// #2
   462e0:	bl	c740 <mpfr_exp@plt>
   462e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   462e8:	ldr	x1, [x0, #2688]
   462ec:	add	x0, x0, #0xa80
   462f0:	blr	x1
   462f4:	add	x1, x23, x0
   462f8:	sub	x0, x29, #0x40
   462fc:	mov	w2, #0x3                   	// #3
   46300:	bl	c380 <mpfr_cache@plt>
   46304:	sub	x0, x29, #0x40
   46308:	sub	x1, x29, #0x40
   4630c:	mov	w3, #0x3                   	// #3
   46310:	mov	x2, x21
   46314:	bl	bda0 <mpfr_mul@plt>
   46318:	add	x0, sp, #0x20
   4631c:	sub	x1, x29, #0x20
   46320:	sub	x2, x29, #0x40
   46324:	mov	w3, wzr
   46328:	bl	c610 <mpfr_div@plt>
   4632c:	mov	x25, xzr
   46330:	b	4634c <mpfr_erfc@@Base+0x724>
   46334:	add	x0, sp, #0x40
   46338:	add	x1, sp, #0x40
   4633c:	mov	w2, #0x7                   	// #7
   46340:	mov	w3, #0x2                   	// #2
   46344:	bl	c270 <mpfr_add_ui@plt>
   46348:	ldr	x25, [sp, #80]
   4634c:	ldr	w27, [sp, #4]
   46350:	mov	x28, #0x4                   	// #4
   46354:	sub	x0, x29, #0x20
   46358:	movk	x28, #0x8000, lsl #48
   4635c:	bl	c0b0 <mpfr_clear@plt>
   46360:	sub	x0, x29, #0x40
   46364:	bl	c0b0 <mpfr_clear@plt>
   46368:	add	x0, sp, #0x40
   4636c:	bl	c0b0 <mpfr_clear@plt>
   46370:	cbz	x25, 46530 <mpfr_erfc@@Base+0x908>
   46374:	ldr	x8, [sp, #48]
   46378:	cmp	x8, x28
   4637c:	b.ge	46444 <mpfr_erfc@@Base+0x81c>  // b.tcont
   46380:	b	463ec <mpfr_erfc@@Base+0x7c4>
   46384:	mov	x8, xzr
   46388:	cmp	x25, x8
   4638c:	b.lt	463b0 <mpfr_erfc@@Base+0x788>  // b.tstop
   46390:	b	4605c <mpfr_erfc@@Base+0x434>
   46394:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   46398:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4639c:	mov	w1, #0xee                  	// #238
   463a0:	add	x0, x0, #0x6db
   463a4:	add	x2, x2, #0x60d
   463a8:	bl	cb20 <mpfr_assert_fail@plt>
   463ac:	b	46048 <mpfr_erfc@@Base+0x420>
   463b0:	add	x0, sp, #0x20
   463b4:	mov	x1, x21
   463b8:	mov	w2, wzr
   463bc:	bl	c220 <mpfr_erf@plt>
   463c0:	ldr	x25, [sp, #48]
   463c4:	add	x0, sp, #0x20
   463c8:	add	x2, sp, #0x20
   463cc:	mov	w1, #0x1                   	// #1
   463d0:	mov	w3, wzr
   463d4:	bl	ca30 <mpfr_ui_sub@plt>
   463d8:	ldr	x8, [sp, #48]
   463dc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   463e0:	cmp	x8, x9
   463e4:	b.ne	46430 <mpfr_erfc@@Base+0x808>  // b.any
   463e8:	lsl	x22, x22, #1
   463ec:	ldr	x25, [sp, #24]
   463f0:	sub	x8, x28, x22
   463f4:	sub	x8, x8, #0x105
   463f8:	cmp	x25, x8
   463fc:	b.gt	46014 <mpfr_erfc@@Base+0x3ec>
   46400:	add	x22, x22, x25
   46404:	cmp	x22, #0x0
   46408:	cinc	x8, x22, lt  // lt = tstop
   4640c:	asr	x8, x8, #1
   46410:	add	x0, sp, #0x20
   46414:	mov	x1, x22
   46418:	str	x8, [sp, #24]
   4641c:	bl	bf20 <mpfr_set_prec@plt>
   46420:	ldr	w8, [x21, #8]
   46424:	cmp	w8, #0x1
   46428:	b.ge	46030 <mpfr_erfc@@Base+0x408>  // b.tcont
   4642c:	b	463b0 <mpfr_erfc@@Base+0x788>
   46430:	sub	x9, x25, x8
   46434:	bic	x9, x9, x9, asr #63
   46438:	add	x25, x9, #0x1
   4643c:	cmp	x8, x28
   46440:	b.lt	463ec <mpfr_erfc@@Base+0x7c4>  // b.tstop
   46444:	ldr	x8, [sp, #32]
   46448:	ldr	x9, [x19]
   4644c:	ldr	x0, [sp, #56]
   46450:	sub	x2, x22, x25
   46454:	sub	x10, x8, #0x1
   46458:	add	x8, x8, #0x3e
   4645c:	cmp	x10, #0x0
   46460:	csel	x8, x8, x10, lt  // lt = tstop
   46464:	asr	x8, x8, #6
   46468:	add	x1, x8, #0x1
   4646c:	ldr	x8, [sp, #8]
   46470:	add	x3, x9, x8
   46474:	bl	c370 <mpfr_round_p@plt>
   46478:	cbz	w0, 463ec <mpfr_erfc@@Base+0x7c4>
   4647c:	ldr	w3, [sp, #40]
   46480:	add	x1, sp, #0x20
   46484:	mov	x0, x19
   46488:	mov	w2, w20
   4648c:	bl	c690 <mpfr_set4@plt>
   46490:	mov	w22, w0
   46494:	add	x0, sp, #0x20
   46498:	bl	c0b0 <mpfr_clear@plt>
   4649c:	ldr	x25, [sp, #16]
   464a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   464a4:	ldr	x1, [x0, #2640]
   464a8:	add	x0, x0, #0xa50
   464ac:	blr	x1
   464b0:	str	w27, [x23, x0]
   464b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   464b8:	ldr	x1, [x0, #2576]
   464bc:	add	x0, x0, #0xa10
   464c0:	blr	x1
   464c4:	str	x24, [x23, x0]
   464c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   464cc:	ldr	x1, [x0, #2608]
   464d0:	add	x0, x0, #0xa30
   464d4:	blr	x1
   464d8:	str	x25, [x23, x0]
   464dc:	ldr	x8, [x19, #16]
   464e0:	cmp	x8, x25
   464e4:	b.gt	4657c <mpfr_erfc@@Base+0x954>
   464e8:	cmp	x8, x24
   464ec:	b.lt	4657c <mpfr_erfc@@Base+0x954>  // b.tstop
   464f0:	cbz	w22, 4650c <mpfr_erfc@@Base+0x8e4>
   464f4:	orr	w8, w27, #0x8
   464f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   464fc:	ldr	x1, [x0, #2640]
   46500:	add	x0, x0, #0xa50
   46504:	blr	x1
   46508:	str	w8, [x23, x0]
   4650c:	mov	w0, w22
   46510:	ldp	x20, x19, [sp, #240]
   46514:	ldp	x22, x21, [sp, #224]
   46518:	ldp	x24, x23, [sp, #208]
   4651c:	ldp	x26, x25, [sp, #192]
   46520:	ldp	x28, x27, [sp, #176]
   46524:	ldp	x29, x30, [sp, #160]
   46528:	add	sp, sp, #0x100
   4652c:	ret
   46530:	add	x0, sp, #0x20
   46534:	bl	c0b0 <mpfr_clear@plt>
   46538:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4653c:	ldr	x1, [x0, #2640]
   46540:	add	x0, x0, #0xa50
   46544:	blr	x1
   46548:	str	w27, [x23, x0]
   4654c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46550:	ldr	x1, [x0, #2576]
   46554:	add	x0, x0, #0xa10
   46558:	blr	x1
   4655c:	str	x24, [x23, x0]
   46560:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46564:	ldr	x1, [x0, #2608]
   46568:	add	x0, x0, #0xa30
   4656c:	blr	x1
   46570:	ldr	x8, [sp, #16]
   46574:	str	x8, [x23, x0]
   46578:	b	45cc4 <mpfr_erfc@@Base+0x9c>
   4657c:	mov	x0, x19
   46580:	mov	w1, w22
   46584:	mov	w2, w20
   46588:	bl	cb10 <mpfr_check_range@plt>
   4658c:	b	45cd8 <mpfr_erfc@@Base+0xb0>

0000000000046590 <mpfr_atan2@@Base>:
   46590:	sub	sp, sp, #0xc0
   46594:	stp	x29, x30, [sp, #96]
   46598:	stp	x28, x27, [sp, #112]
   4659c:	stp	x26, x25, [sp, #128]
   465a0:	stp	x24, x23, [sp, #144]
   465a4:	stp	x22, x21, [sp, #160]
   465a8:	stp	x20, x19, [sp, #176]
   465ac:	ldr	x8, [x2, #16]
   465b0:	mov	x11, #0x4                   	// #4
   465b4:	movk	x11, #0x8000, lsl #48
   465b8:	mov	w20, w3
   465bc:	mov	x22, x2
   465c0:	mov	x21, x1
   465c4:	cmp	x8, x11
   465c8:	mov	x19, x0
   465cc:	add	x29, sp, #0x60
   465d0:	b.lt	46a3c <mpfr_atan2@@Base+0x4ac>  // b.tstop
   465d4:	ldr	x9, [x21, #16]
   465d8:	cmp	x9, x11
   465dc:	b.lt	46a4c <mpfr_atan2@@Base+0x4bc>  // b.tstop
   465e0:	ldr	w8, [x22, #8]
   465e4:	mrs	x27, tpidr_el0
   465e8:	cmp	w8, #0x1
   465ec:	b.lt	465fc <mpfr_atan2@@Base+0x6c>  // b.tstop
   465f0:	mov	x0, x22
   465f4:	bl	bf50 <mpfr_powerof2_raw@plt>
   465f8:	cbnz	w0, 46ac0 <mpfr_atan2@@Base+0x530>
   465fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46600:	ldr	x1, [x0, #2640]
   46604:	add	x0, x0, #0xa50
   46608:	blr	x1
   4660c:	ldr	w28, [x27, x0]
   46610:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46614:	ldr	x1, [x0, #2576]
   46618:	add	x0, x0, #0xa10
   4661c:	blr	x1
   46620:	ldr	x24, [x27, x0]
   46624:	mov	x8, x0
   46628:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4662c:	ldr	x1, [x0, #2608]
   46630:	add	x0, x0, #0xa30
   46634:	blr	x1
   46638:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4663c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   46640:	ldr	x25, [x27, x0]
   46644:	str	x9, [x27, x8]
   46648:	str	x10, [x27, x0]
   4664c:	ldr	x8, [x19]
   46650:	cmp	x8, #0x1
   46654:	add	x23, x8, #0x3
   46658:	b.eq	46a98 <mpfr_atan2@@Base+0x508>  // b.none
   4665c:	b.le	46aa0 <mpfr_atan2@@Base+0x510>
   46660:	sub	x8, x8, #0x1
   46664:	clz	x8, x8
   46668:	mov	w9, #0x40                  	// #64
   4666c:	sub	x8, x9, x8
   46670:	add	x23, x23, x8
   46674:	sub	x0, x29, #0x20
   46678:	mov	x1, x23
   4667c:	bl	ca60 <mpfr_init2@plt>
   46680:	ldr	w8, [x22, #8]
   46684:	cmp	w8, #0x1
   46688:	b.lt	467c8 <mpfr_atan2@@Base+0x238>  // b.tstop
   4668c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46690:	ldr	x1, [x0, #2640]
   46694:	add	x0, x0, #0xa50
   46698:	blr	x1
   4669c:	str	wzr, [x27, x0]
   466a0:	sub	x0, x29, #0x20
   466a4:	mov	x1, x21
   466a8:	mov	x2, x22
   466ac:	mov	w3, wzr
   466b0:	bl	c610 <mpfr_div@plt>
   466b4:	cbz	w0, 46990 <mpfr_atan2@@Base+0x400>
   466b8:	cmp	w20, #0x0
   466bc:	mov	w8, #0x40                  	// #64
   466c0:	cset	w26, eq  // eq = none
   466c4:	str	x8, [sp, #24]
   466c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   466cc:	ldr	x1, [x0, #2640]
   466d0:	add	x0, x0, #0xa50
   466d4:	blr	x1
   466d8:	ldrb	w8, [x27, x0]
   466dc:	tbnz	w8, #0, 46b44 <mpfr_atan2@@Base+0x5b4>
   466e0:	sub	x0, x29, #0x20
   466e4:	sub	x1, x29, #0x20
   466e8:	mov	w2, wzr
   466ec:	bl	c680 <mpfr_atan@plt>
   466f0:	ldur	x8, [x29, #-16]
   466f4:	mov	x9, #0x4                   	// #4
   466f8:	movk	x9, #0x8000, lsl #48
   466fc:	cmp	x8, x9
   46700:	b.lt	46738 <mpfr_atan2@@Base+0x1a8>  // b.tstop
   46704:	ldur	x8, [x29, #-32]
   46708:	ldr	x9, [x19]
   4670c:	ldur	x0, [x29, #-8]
   46710:	sub	x2, x23, #0x2
   46714:	sub	x10, x8, #0x1
   46718:	add	x8, x8, #0x3e
   4671c:	cmp	x10, #0x0
   46720:	csel	x8, x8, x10, lt  // lt = tstop
   46724:	asr	x8, x8, #6
   46728:	add	x1, x8, #0x1
   4672c:	add	x3, x9, x26
   46730:	bl	c370 <mpfr_round_p@plt>
   46734:	cbnz	w0, 46978 <mpfr_atan2@@Base+0x3e8>
   46738:	mov	x8, #0x4                   	// #4
   4673c:	ldr	x9, [sp, #24]
   46740:	movk	x8, #0x8000, lsl #48
   46744:	sub	x8, x8, x23
   46748:	sub	x8, x8, #0x105
   4674c:	cmp	x9, x8
   46750:	mov	x8, x9
   46754:	b.gt	467a8 <mpfr_atan2@@Base+0x218>
   46758:	add	x23, x23, x8
   4675c:	cmp	x23, #0x0
   46760:	cinc	x8, x23, lt  // lt = tstop
   46764:	asr	x8, x8, #1
   46768:	sub	x0, x29, #0x20
   4676c:	mov	x1, x23
   46770:	str	x8, [sp, #24]
   46774:	bl	bf20 <mpfr_set_prec@plt>
   46778:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4677c:	ldr	x1, [x0, #2640]
   46780:	add	x0, x0, #0xa50
   46784:	blr	x1
   46788:	str	wzr, [x27, x0]
   4678c:	sub	x0, x29, #0x20
   46790:	mov	x1, x21
   46794:	mov	x2, x22
   46798:	mov	w3, wzr
   4679c:	bl	c610 <mpfr_div@plt>
   467a0:	cbnz	w0, 466c8 <mpfr_atan2@@Base+0x138>
   467a4:	b	46990 <mpfr_atan2@@Base+0x400>
   467a8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   467ac:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   467b0:	mov	w1, #0xef                  	// #239
   467b4:	add	x0, x0, #0x6e2
   467b8:	add	x2, x2, #0x622
   467bc:	bl	cb20 <mpfr_assert_fail@plt>
   467c0:	ldr	x8, [sp, #24]
   467c4:	b	46758 <mpfr_atan2@@Base+0x1c8>
   467c8:	add	x0, sp, #0x20
   467cc:	mov	x1, x23
   467d0:	bl	ca60 <mpfr_init2@plt>
   467d4:	cmp	w20, #0x0
   467d8:	mov	w8, #0x40                  	// #64
   467dc:	str	w20, [sp, #20]
   467e0:	str	x8, [sp, #8]
   467e4:	mov	w20, #0x1                   	// #1
   467e8:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   467ec:	cset	w8, eq  // eq = none
   467f0:	str	x8, [sp, #24]
   467f4:	sub	x0, x29, #0x20
   467f8:	mov	x1, x21
   467fc:	mov	x2, x22
   46800:	mov	w3, wzr
   46804:	bl	c610 <mpfr_div@plt>
   46808:	sub	x0, x29, #0x20
   4680c:	sub	x1, x29, #0x20
   46810:	mov	w2, wzr
   46814:	stur	w20, [x29, #-24]
   46818:	bl	c680 <mpfr_atan@plt>
   4681c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46820:	ldr	x1, [x0, #2688]
   46824:	add	x0, x0, #0xa80
   46828:	blr	x1
   4682c:	add	x1, x27, x0
   46830:	add	x0, sp, #0x20
   46834:	mov	w2, wzr
   46838:	bl	c380 <mpfr_cache@plt>
   4683c:	ldur	x8, [x29, #-16]
   46840:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46844:	ldr	x1, [x0, #2576]
   46848:	add	x0, x0, #0xa10
   4684c:	blr	x1
   46850:	ldr	x9, [x27, x0]
   46854:	cmp	x8, x26
   46858:	sub	x0, x29, #0x20
   4685c:	add	x1, sp, #0x20
   46860:	sub	x9, x9, #0x1
   46864:	sub	x2, x29, #0x20
   46868:	mov	w3, wzr
   4686c:	csel	x20, x9, x8, eq  // eq = none
   46870:	bl	bbc0 <mpfr_sub@plt>
   46874:	ldr	w8, [x21, #8]
   46878:	tbz	w8, #31, 46888 <mpfr_atan2@@Base+0x2f8>
   4687c:	ldur	w8, [x29, #-24]
   46880:	neg	w8, w8
   46884:	stur	w8, [x29, #-24]
   46888:	ldur	x9, [x29, #-16]
   4688c:	ldr	x8, [sp, #48]
   46890:	mvn	x10, x9
   46894:	sub	x11, x20, x9
   46898:	add	x8, x8, x10
   4689c:	add	x10, x11, #0x1
   468a0:	cmp	x8, x10
   468a4:	mov	x10, #0x4                   	// #4
   468a8:	movk	x10, #0x8000, lsl #48
   468ac:	csinc	x8, x8, x11, gt
   468b0:	cmp	x9, x10
   468b4:	b.lt	468fc <mpfr_atan2@@Base+0x36c>  // b.tstop
   468b8:	ldur	x9, [x29, #-32]
   468bc:	cmp	x8, #0x0
   468c0:	csinv	x8, x8, xzr, ge  // ge = tcont
   468c4:	sub	x8, x23, x8
   468c8:	sub	x2, x8, #0x2
   468cc:	sub	x8, x9, #0x1
   468d0:	add	x9, x9, #0x3e
   468d4:	cmp	x8, #0x0
   468d8:	csel	x8, x9, x8, lt  // lt = tstop
   468dc:	asr	x8, x8, #6
   468e0:	ldr	x10, [x19]
   468e4:	add	x1, x8, #0x1
   468e8:	ldr	x8, [sp, #24]
   468ec:	ldur	x0, [x29, #-8]
   468f0:	add	x3, x10, x8
   468f4:	bl	c370 <mpfr_round_p@plt>
   468f8:	cbnz	w0, 4696c <mpfr_atan2@@Base+0x3dc>
   468fc:	mov	x8, #0x4                   	// #4
   46900:	ldr	x20, [sp, #8]
   46904:	movk	x8, #0x8000, lsl #48
   46908:	sub	x8, x8, x23
   4690c:	sub	x8, x8, #0x105
   46910:	cmp	x20, x8
   46914:	b.gt	46950 <mpfr_atan2@@Base+0x3c0>
   46918:	add	x23, x23, x20
   4691c:	cmp	x23, #0x0
   46920:	cinc	x8, x23, lt  // lt = tstop
   46924:	asr	x8, x8, #1
   46928:	sub	x0, x29, #0x20
   4692c:	mov	x1, x23
   46930:	str	x8, [sp, #8]
   46934:	bl	bf20 <mpfr_set_prec@plt>
   46938:	add	x0, sp, #0x20
   4693c:	mov	x1, x23
   46940:	bl	bf20 <mpfr_set_prec@plt>
   46944:	mov	w20, #0x1                   	// #1
   46948:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   4694c:	b	467f4 <mpfr_atan2@@Base+0x264>
   46950:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   46954:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   46958:	mov	w1, #0x10b                 	// #267
   4695c:	add	x0, x0, #0x6e2
   46960:	add	x2, x2, #0x622
   46964:	bl	cb20 <mpfr_assert_fail@plt>
   46968:	b	46918 <mpfr_atan2@@Base+0x388>
   4696c:	add	x0, sp, #0x20
   46970:	bl	c0b0 <mpfr_clear@plt>
   46974:	ldr	w20, [sp, #20]
   46978:	ldur	w3, [x29, #-24]
   4697c:	sub	x1, x29, #0x20
   46980:	mov	x0, x19
   46984:	mov	w2, w20
   46988:	bl	c690 <mpfr_set4@plt>
   4698c:	b	469a0 <mpfr_atan2@@Base+0x410>
   46990:	sub	x1, x29, #0x20
   46994:	mov	x0, x19
   46998:	mov	w2, w20
   4699c:	bl	c680 <mpfr_atan@plt>
   469a0:	mov	w22, w0
   469a4:	sub	x0, x29, #0x20
   469a8:	bl	c0b0 <mpfr_clear@plt>
   469ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   469b0:	ldr	x1, [x0, #2640]
   469b4:	add	x0, x0, #0xa50
   469b8:	blr	x1
   469bc:	str	w28, [x27, x0]
   469c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   469c4:	ldr	x1, [x0, #2576]
   469c8:	add	x0, x0, #0xa10
   469cc:	blr	x1
   469d0:	str	x24, [x27, x0]
   469d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   469d8:	ldr	x1, [x0, #2608]
   469dc:	add	x0, x0, #0xa30
   469e0:	blr	x1
   469e4:	str	x25, [x27, x0]
   469e8:	ldr	x8, [x19, #16]
   469ec:	cmp	x8, x25
   469f0:	b.gt	46e78 <mpfr_atan2@@Base+0x8e8>
   469f4:	cmp	x8, x24
   469f8:	b.lt	46e78 <mpfr_atan2@@Base+0x8e8>  // b.tstop
   469fc:	cbz	w22, 46a18 <mpfr_atan2@@Base+0x488>
   46a00:	orr	w8, w28, #0x8
   46a04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46a08:	ldr	x1, [x0, #2640]
   46a0c:	add	x0, x0, #0xa50
   46a10:	blr	x1
   46a14:	str	w8, [x27, x0]
   46a18:	mov	w0, w22
   46a1c:	ldp	x20, x19, [sp, #176]
   46a20:	ldp	x22, x21, [sp, #160]
   46a24:	ldp	x24, x23, [sp, #144]
   46a28:	ldp	x26, x25, [sp, #128]
   46a2c:	ldp	x28, x27, [sp, #112]
   46a30:	ldp	x29, x30, [sp, #96]
   46a34:	add	sp, sp, #0xc0
   46a38:	ret
   46a3c:	sub	x9, x11, #0x2
   46a40:	cmp	x8, x9
   46a44:	b.eq	46a68 <mpfr_atan2@@Base+0x4d8>  // b.none
   46a48:	ldr	x9, [x21, #16]
   46a4c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   46a50:	cmp	x9, x10
   46a54:	b.eq	46be4 <mpfr_atan2@@Base+0x654>  // b.none
   46a58:	mov	x10, #0x2                   	// #2
   46a5c:	movk	x10, #0x8000, lsl #48
   46a60:	cmp	x9, x10
   46a64:	b.ne	46b1c <mpfr_atan2@@Base+0x58c>  // b.any
   46a68:	sub	x8, x11, #0x2
   46a6c:	str	x8, [x19, #16]
   46a70:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46a74:	ldr	x1, [x0, #2640]
   46a78:	add	x0, x0, #0xa50
   46a7c:	blr	x1
   46a80:	mrs	x8, tpidr_el0
   46a84:	ldr	w9, [x8, x0]
   46a88:	mov	w22, wzr
   46a8c:	orr	w9, w9, #0x4
   46a90:	str	w9, [x8, x0]
   46a94:	b	46a18 <mpfr_atan2@@Base+0x488>
   46a98:	mov	x8, xzr
   46a9c:	b	46670 <mpfr_atan2@@Base+0xe0>
   46aa0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   46aa4:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   46aa8:	add	x0, x0, #0x6e2
   46aac:	add	x2, x2, #0x732
   46ab0:	mov	w1, #0xb7                  	// #183
   46ab4:	bl	cb20 <mpfr_assert_fail@plt>
   46ab8:	ldr	x8, [x19]
   46abc:	b	46660 <mpfr_atan2@@Base+0xd0>
   46ac0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46ac4:	ldr	x1, [x0, #2640]
   46ac8:	add	x0, x0, #0xa50
   46acc:	blr	x1
   46ad0:	ldr	x1, [x21]
   46ad4:	ldr	w23, [x27, x0]
   46ad8:	sub	x0, x29, #0x20
   46adc:	bl	ca60 <mpfr_init2@plt>
   46ae0:	ldr	x8, [x22, #16]
   46ae4:	sub	x0, x29, #0x20
   46ae8:	mov	x1, x21
   46aec:	mov	w3, wzr
   46af0:	sub	x2, x8, #0x1
   46af4:	bl	c410 <mpfr_div_2si@plt>
   46af8:	cbnz	w0, 46e90 <mpfr_atan2@@Base+0x900>
   46afc:	sub	x1, x29, #0x20
   46b00:	mov	x0, x19
   46b04:	mov	w2, w20
   46b08:	bl	c680 <mpfr_atan@plt>
   46b0c:	mov	w22, w0
   46b10:	sub	x0, x29, #0x20
   46b14:	bl	c0b0 <mpfr_clear@plt>
   46b18:	b	46a18 <mpfr_atan2@@Base+0x488>
   46b1c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   46b20:	cmp	x8, x10
   46b24:	b.ne	46bb8 <mpfr_atan2@@Base+0x628>  // b.any
   46b28:	ldr	w8, [x21, #8]
   46b2c:	mov	w1, #0x1                   	// #1
   46b30:	lsr	w2, w8, #31
   46b34:	mov	x0, x19
   46b38:	mov	w3, w20
   46b3c:	bl	46eb0 <mpfr_atan2@@Base+0x920>
   46b40:	b	46e88 <mpfr_atan2@@Base+0x8f8>
   46b44:	ldur	x8, [x29, #-16]
   46b48:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   46b4c:	ldur	w21, [x29, #-24]
   46b50:	sub	x0, x29, #0x20
   46b54:	cmp	x8, x9
   46b58:	cset	w8, eq  // eq = none
   46b5c:	cmp	w20, #0x0
   46b60:	csel	w20, w8, w20, eq  // eq = none
   46b64:	bl	c0b0 <mpfr_clear@plt>
   46b68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46b6c:	ldr	x1, [x0, #2640]
   46b70:	add	x0, x0, #0xa50
   46b74:	blr	x1
   46b78:	str	w28, [x27, x0]
   46b7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46b80:	ldr	x1, [x0, #2576]
   46b84:	add	x0, x0, #0xa10
   46b88:	blr	x1
   46b8c:	str	x24, [x27, x0]
   46b90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46b94:	ldr	x1, [x0, #2608]
   46b98:	add	x0, x0, #0xa30
   46b9c:	blr	x1
   46ba0:	str	x25, [x27, x0]
   46ba4:	mov	x0, x19
   46ba8:	mov	w1, w20
   46bac:	mov	w2, w21
   46bb0:	bl	c3c0 <mpfr_underflow@plt>
   46bb4:	b	46e88 <mpfr_atan2@@Base+0x8f8>
   46bb8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   46bbc:	cmp	x9, x10
   46bc0:	b.ne	46be4 <mpfr_atan2@@Base+0x654>  // b.any
   46bc4:	cmp	x8, x10
   46bc8:	b.ne	46b28 <mpfr_atan2@@Base+0x598>  // b.any
   46bcc:	ldr	w8, [x22, #8]
   46bd0:	cmp	w8, #0x1
   46bd4:	b.lt	46c80 <mpfr_atan2@@Base+0x6f0>  // b.tstop
   46bd8:	ldr	w8, [x21, #8]
   46bdc:	mov	w1, #0x2                   	// #2
   46be0:	b	46b30 <mpfr_atan2@@Base+0x5a0>
   46be4:	ldr	w8, [x22, #8]
   46be8:	tbnz	w8, #31, 46c04 <mpfr_atan2@@Base+0x674>
   46bec:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   46bf0:	str	x8, [x19, #16]
   46bf4:	ldr	w8, [x21, #8]
   46bf8:	mov	w22, wzr
   46bfc:	str	w8, [x19, #8]
   46c00:	b	46a18 <mpfr_atan2@@Base+0x488>
   46c04:	ldr	w8, [x21, #8]
   46c08:	tbnz	w8, #31, 46c34 <mpfr_atan2@@Base+0x6a4>
   46c0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46c10:	ldr	x1, [x0, #2688]
   46c14:	add	x0, x0, #0xa80
   46c18:	blr	x1
   46c1c:	mrs	x8, tpidr_el0
   46c20:	add	x1, x8, x0
   46c24:	mov	x0, x19
   46c28:	mov	w2, w20
   46c2c:	bl	c380 <mpfr_cache@plt>
   46c30:	b	46e88 <mpfr_atan2@@Base+0x8f8>
   46c34:	cmp	w20, #0x3
   46c38:	mov	w8, #0x2                   	// #2
   46c3c:	csel	w8, w8, w20, eq  // eq = none
   46c40:	cmp	w20, #0x2
   46c44:	mov	w9, #0x3                   	// #3
   46c48:	csel	w2, w9, w8, eq  // eq = none
   46c4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46c50:	ldr	x1, [x0, #2688]
   46c54:	add	x0, x0, #0xa80
   46c58:	blr	x1
   46c5c:	mrs	x8, tpidr_el0
   46c60:	add	x1, x8, x0
   46c64:	mov	x0, x19
   46c68:	bl	c380 <mpfr_cache@plt>
   46c6c:	ldr	w8, [x19, #8]
   46c70:	neg	w22, w0
   46c74:	neg	w8, w8
   46c78:	str	w8, [x19, #8]
   46c7c:	b	46a18 <mpfr_atan2@@Base+0x488>
   46c80:	ldr	x8, [x19]
   46c84:	add	x22, x8, #0xa
   46c88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46c8c:	ldr	x1, [x0, #2640]
   46c90:	add	x0, x0, #0xa50
   46c94:	blr	x1
   46c98:	mrs	x25, tpidr_el0
   46c9c:	ldr	w27, [x25, x0]
   46ca0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46ca4:	ldr	x1, [x0, #2576]
   46ca8:	add	x0, x0, #0xa10
   46cac:	blr	x1
   46cb0:	ldr	x28, [x25, x0]
   46cb4:	mov	x8, x0
   46cb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46cbc:	ldr	x1, [x0, #2608]
   46cc0:	add	x0, x0, #0xa30
   46cc4:	blr	x1
   46cc8:	ldr	x23, [x25, x0]
   46ccc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   46cd0:	str	x9, [x25, x8]
   46cd4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   46cd8:	str	x8, [x25, x0]
   46cdc:	sub	x0, x29, #0x20
   46ce0:	mov	x1, x22
   46ce4:	bl	ca60 <mpfr_init2@plt>
   46ce8:	cmp	w20, #0x0
   46cec:	mov	w26, #0x40                  	// #64
   46cf0:	cset	w24, eq  // eq = none
   46cf4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46cf8:	ldr	x1, [x0, #2688]
   46cfc:	add	x0, x0, #0xa80
   46d00:	blr	x1
   46d04:	add	x1, x25, x0
   46d08:	sub	x0, x29, #0x20
   46d0c:	mov	w2, wzr
   46d10:	bl	c380 <mpfr_cache@plt>
   46d14:	sub	x0, x29, #0x20
   46d18:	sub	x1, x29, #0x20
   46d1c:	mov	w2, #0x3                   	// #3
   46d20:	mov	w3, wzr
   46d24:	bl	bab0 <mpfr_mul_ui@plt>
   46d28:	sub	x0, x29, #0x20
   46d2c:	sub	x1, x29, #0x20
   46d30:	mov	w2, #0x2                   	// #2
   46d34:	mov	w3, wzr
   46d38:	bl	c8f0 <mpfr_div_2ui@plt>
   46d3c:	ldur	x8, [x29, #-16]
   46d40:	mov	x9, #0x4                   	// #4
   46d44:	movk	x9, #0x8000, lsl #48
   46d48:	cmp	x8, x9
   46d4c:	b.lt	46d8c <mpfr_atan2@@Base+0x7fc>  // b.tstop
   46d50:	ldur	x8, [x29, #-32]
   46d54:	ldr	x9, [x19]
   46d58:	ldur	x0, [x29, #-8]
   46d5c:	sub	x10, x8, #0x1
   46d60:	add	x11, x8, #0x3e
   46d64:	cmp	x10, #0x0
   46d68:	sub	x2, x8, #0x2
   46d6c:	csel	x8, x11, x10, lt  // lt = tstop
   46d70:	asr	x8, x8, #6
   46d74:	add	x1, x8, #0x1
   46d78:	add	x3, x9, x24
   46d7c:	bl	c370 <mpfr_round_p@plt>
   46d80:	mov	x9, #0x4                   	// #4
   46d84:	movk	x9, #0x8000, lsl #48
   46d88:	cbnz	w0, 46dd8 <mpfr_atan2@@Base+0x848>
   46d8c:	sub	x8, x9, x22
   46d90:	sub	x8, x8, #0x105
   46d94:	cmp	x26, x8
   46d98:	b.gt	46dbc <mpfr_atan2@@Base+0x82c>
   46d9c:	add	x22, x22, x26
   46da0:	cmp	x22, #0x0
   46da4:	cinc	x8, x22, lt  // lt = tstop
   46da8:	sub	x0, x29, #0x20
   46dac:	mov	x1, x22
   46db0:	asr	x26, x8, #1
   46db4:	bl	bf20 <mpfr_set_prec@plt>
   46db8:	b	46cf4 <mpfr_atan2@@Base+0x764>
   46dbc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   46dc0:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   46dc4:	mov	w1, #0x88                  	// #136
   46dc8:	add	x0, x0, #0x6e2
   46dcc:	add	x2, x2, #0x6ea
   46dd0:	bl	cb20 <mpfr_assert_fail@plt>
   46dd4:	b	46d9c <mpfr_atan2@@Base+0x80c>
   46dd8:	ldr	w8, [x21, #8]
   46ddc:	ldur	w3, [x29, #-24]
   46de0:	tbz	w8, #31, 46dec <mpfr_atan2@@Base+0x85c>
   46de4:	neg	w3, w3
   46de8:	stur	w3, [x29, #-24]
   46dec:	sub	x1, x29, #0x20
   46df0:	mov	x0, x19
   46df4:	mov	w2, w20
   46df8:	bl	c690 <mpfr_set4@plt>
   46dfc:	mov	w22, w0
   46e00:	sub	x0, x29, #0x20
   46e04:	bl	c0b0 <mpfr_clear@plt>
   46e08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46e0c:	ldr	x1, [x0, #2640]
   46e10:	add	x0, x0, #0xa50
   46e14:	blr	x1
   46e18:	str	w27, [x25, x0]
   46e1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46e20:	ldr	x1, [x0, #2576]
   46e24:	add	x0, x0, #0xa10
   46e28:	blr	x1
   46e2c:	str	x28, [x25, x0]
   46e30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46e34:	ldr	x1, [x0, #2608]
   46e38:	add	x0, x0, #0xa30
   46e3c:	blr	x1
   46e40:	str	x23, [x25, x0]
   46e44:	ldr	x8, [x19, #16]
   46e48:	cmp	x8, x23
   46e4c:	b.gt	46e78 <mpfr_atan2@@Base+0x8e8>
   46e50:	cmp	x8, x28
   46e54:	b.lt	46e78 <mpfr_atan2@@Base+0x8e8>  // b.tstop
   46e58:	cbz	w22, 46a18 <mpfr_atan2@@Base+0x488>
   46e5c:	orr	w8, w27, #0x8
   46e60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46e64:	ldr	x1, [x0, #2640]
   46e68:	add	x0, x0, #0xa50
   46e6c:	blr	x1
   46e70:	str	w8, [x25, x0]
   46e74:	b	46a18 <mpfr_atan2@@Base+0x488>
   46e78:	mov	x0, x19
   46e7c:	mov	w1, w22
   46e80:	mov	w2, w20
   46e84:	bl	cb10 <mpfr_check_range@plt>
   46e88:	mov	w22, w0
   46e8c:	b	46a18 <mpfr_atan2@@Base+0x488>
   46e90:	sub	x0, x29, #0x20
   46e94:	bl	c0b0 <mpfr_clear@plt>
   46e98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46e9c:	ldr	x1, [x0, #2640]
   46ea0:	add	x0, x0, #0xa50
   46ea4:	blr	x1
   46ea8:	str	w23, [x27, x0]
   46eac:	b	465fc <mpfr_atan2@@Base+0x6c>
   46eb0:	stp	x29, x30, [sp, #-80]!
   46eb4:	stp	x26, x25, [sp, #16]
   46eb8:	stp	x24, x23, [sp, #32]
   46ebc:	stp	x22, x21, [sp, #48]
   46ec0:	stp	x20, x19, [sp, #64]
   46ec4:	mov	x29, sp
   46ec8:	mov	w19, w3
   46ecc:	mov	w21, w1
   46ed0:	mov	x20, x0
   46ed4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46ed8:	ldr	x1, [x0, #2640]
   46edc:	add	x0, x0, #0xa50
   46ee0:	blr	x1
   46ee4:	mrs	x23, tpidr_el0
   46ee8:	ldr	w24, [x23, x0]
   46eec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46ef0:	ldr	x1, [x0, #2576]
   46ef4:	add	x0, x0, #0xa10
   46ef8:	blr	x1
   46efc:	ldr	x25, [x23, x0]
   46f00:	mov	x8, x0
   46f04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46f08:	ldr	x1, [x0, #2608]
   46f0c:	add	x0, x0, #0xa30
   46f10:	blr	x1
   46f14:	ldr	x26, [x23, x0]
   46f18:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   46f1c:	str	x9, [x23, x8]
   46f20:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   46f24:	str	x8, [x23, x0]
   46f28:	cbz	w2, 46f74 <mpfr_atan2@@Base+0x9e4>
   46f2c:	cmp	w19, #0x3
   46f30:	mov	w8, #0x2                   	// #2
   46f34:	csel	w8, w8, w19, eq  // eq = none
   46f38:	cmp	w19, #0x2
   46f3c:	mov	w9, #0x3                   	// #3
   46f40:	csel	w2, w9, w8, eq  // eq = none
   46f44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46f48:	ldr	x1, [x0, #2688]
   46f4c:	add	x0, x0, #0xa80
   46f50:	blr	x1
   46f54:	add	x1, x23, x0
   46f58:	mov	x0, x20
   46f5c:	bl	c380 <mpfr_cache@plt>
   46f60:	ldr	w8, [x20, #8]
   46f64:	neg	w22, w0
   46f68:	neg	w8, w8
   46f6c:	str	w8, [x20, #8]
   46f70:	b	46f98 <mpfr_atan2@@Base+0xa08>
   46f74:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46f78:	ldr	x1, [x0, #2688]
   46f7c:	add	x0, x0, #0xa80
   46f80:	blr	x1
   46f84:	add	x1, x23, x0
   46f88:	mov	x0, x20
   46f8c:	mov	w2, w19
   46f90:	bl	c380 <mpfr_cache@plt>
   46f94:	mov	w22, w0
   46f98:	sxtw	x2, w21
   46f9c:	mov	x0, x20
   46fa0:	mov	x1, x20
   46fa4:	mov	w3, w19
   46fa8:	bl	c8f0 <mpfr_div_2ui@plt>
   46fac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46fb0:	ldr	x1, [x0, #2640]
   46fb4:	add	x0, x0, #0xa50
   46fb8:	blr	x1
   46fbc:	str	w24, [x23, x0]
   46fc0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46fc4:	ldr	x1, [x0, #2576]
   46fc8:	add	x0, x0, #0xa10
   46fcc:	blr	x1
   46fd0:	str	x25, [x23, x0]
   46fd4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   46fd8:	ldr	x1, [x0, #2608]
   46fdc:	add	x0, x0, #0xa30
   46fe0:	blr	x1
   46fe4:	str	x26, [x23, x0]
   46fe8:	ldr	x8, [x20, #16]
   46fec:	cmp	x8, x26
   46ff0:	b.gt	47034 <mpfr_atan2@@Base+0xaa4>
   46ff4:	cmp	x8, x25
   46ff8:	b.lt	47034 <mpfr_atan2@@Base+0xaa4>  // b.tstop
   46ffc:	cbz	w22, 47018 <mpfr_atan2@@Base+0xa88>
   47000:	orr	w8, w24, #0x8
   47004:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47008:	ldr	x1, [x0, #2640]
   4700c:	add	x0, x0, #0xa50
   47010:	blr	x1
   47014:	str	w8, [x23, x0]
   47018:	mov	w0, w22
   4701c:	ldp	x20, x19, [sp, #64]
   47020:	ldp	x22, x21, [sp, #48]
   47024:	ldp	x24, x23, [sp, #32]
   47028:	ldp	x26, x25, [sp, #16]
   4702c:	ldp	x29, x30, [sp], #80
   47030:	ret
   47034:	mov	x0, x20
   47038:	mov	w1, w22
   4703c:	mov	w2, w19
   47040:	ldp	x20, x19, [sp, #64]
   47044:	ldp	x22, x21, [sp, #48]
   47048:	ldp	x24, x23, [sp, #32]
   4704c:	ldp	x26, x25, [sp, #16]
   47050:	ldp	x29, x30, [sp], #80
   47054:	b	cb10 <mpfr_check_range@plt>

0000000000047058 <mpfr_subnormalize@@Base>:
   47058:	sub	sp, sp, #0x70
   4705c:	stp	x29, x30, [sp, #32]
   47060:	stp	x24, x23, [sp, #64]
   47064:	stp	x22, x21, [sp, #80]
   47068:	stp	x20, x19, [sp, #96]
   4706c:	ldr	x8, [x0, #16]
   47070:	mov	x9, #0x4                   	// #4
   47074:	movk	x9, #0x8000, lsl #48
   47078:	str	x25, [sp, #48]
   4707c:	mov	w19, w1
   47080:	cmp	x8, x9
   47084:	mrs	x23, tpidr_el0
   47088:	add	x29, sp, #0x20
   4708c:	b.lt	470c0 <mpfr_subnormalize@@Base+0x68>  // b.tstop
   47090:	mov	w21, w2
   47094:	mov	x20, x0
   47098:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4709c:	ldr	x1, [x0, #2576]
   470a0:	add	x0, x0, #0xa10
   470a4:	blr	x1
   470a8:	ldr	x9, [x23, x0]
   470ac:	ldr	x10, [x20]
   470b0:	add	x10, x9, x10
   470b4:	sub	x10, x10, #0x1
   470b8:	cmp	x8, x10
   470bc:	b.lt	47100 <mpfr_subnormalize@@Base+0xa8>  // b.tstop
   470c0:	cbz	w19, 470e0 <mpfr_subnormalize@@Base+0x88>
   470c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   470c8:	ldr	x1, [x0, #2640]
   470cc:	add	x0, x0, #0xa50
   470d0:	blr	x1
   470d4:	ldr	w8, [x23, x0]
   470d8:	orr	w8, w8, #0x8
   470dc:	str	w8, [x23, x0]
   470e0:	mov	w0, w19
   470e4:	ldp	x20, x19, [sp, #96]
   470e8:	ldp	x22, x21, [sp, #80]
   470ec:	ldp	x24, x23, [sp, #64]
   470f0:	ldr	x25, [sp, #48]
   470f4:	ldp	x29, x30, [sp, #32]
   470f8:	add	sp, sp, #0x70
   470fc:	ret
   47100:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47104:	ldr	x1, [x0, #2640]
   47108:	add	x0, x0, #0xa50
   4710c:	blr	x1
   47110:	ldr	w10, [x23, x0]
   47114:	subs	x8, x8, x9
   47118:	orr	w10, w10, #0x1
   4711c:	str	w10, [x23, x0]
   47120:	ldr	w24, [x20, #8]
   47124:	b.ne	471ec <mpfr_subnormalize@@Base+0x194>  // b.any
   47128:	mov	x0, x20
   4712c:	bl	bf50 <mpfr_powerof2_raw@plt>
   47130:	cbnz	w0, 470c0 <mpfr_subnormalize@@Base+0x68>
   47134:	cmp	w21, #0x1
   47138:	b.eq	47318 <mpfr_subnormalize@@Base+0x2c0>  // b.none
   4713c:	cbnz	w21, 47308 <mpfr_subnormalize@@Base+0x2b0>
   47140:	ldr	x8, [x20]
   47144:	sub	x10, x8, #0x1
   47148:	add	x9, x8, #0x3e
   4714c:	ldr	x8, [x20, #24]
   47150:	cmp	x10, #0x0
   47154:	csel	x10, x9, x10, lt  // lt = tstop
   47158:	asr	x10, x10, #6
   4715c:	ldr	x11, [x8, x10, lsl #3]
   47160:	tbz	x11, #62, 47318 <mpfr_subnormalize@@Base+0x2c0>
   47164:	cmp	x9, #0x7f
   47168:	and	x9, x11, #0x3fffffffffffffff
   4716c:	b.cc	47188 <mpfr_subnormalize@@Base+0x130>  // b.lo, b.ul, b.last
   47170:	cbnz	x9, 47188 <mpfr_subnormalize@@Base+0x130>
   47174:	sub	x10, x10, #0x1
   47178:	ldr	x9, [x8, x10, lsl #3]
   4717c:	cbz	x10, 47188 <mpfr_subnormalize@@Base+0x130>
   47180:	sub	x10, x10, #0x1
   47184:	cbz	x9, 47178 <mpfr_subnormalize@@Base+0x120>
   47188:	cbnz	x9, 471ac <mpfr_subnormalize@@Base+0x154>
   4718c:	cmp	w19, #0x0
   47190:	cset	w8, gt
   47194:	cmp	w24, #0x0
   47198:	cset	w9, gt
   4719c:	and	w8, w8, w9
   471a0:	tbnz	w8, #0, 47318 <mpfr_subnormalize@@Base+0x2c0>
   471a4:	and	w8, w24, w19
   471a8:	tbnz	w8, #31, 47318 <mpfr_subnormalize@@Base+0x2c0>
   471ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   471b0:	ldr	x1, [x0, #2576]
   471b4:	add	x0, x0, #0xa10
   471b8:	blr	x1
   471bc:	ldr	x8, [x23, x0]
   471c0:	mov	x0, x20
   471c4:	add	x1, x8, #0x1
   471c8:	bl	c2b0 <mpfr_setmin@plt>
   471cc:	cbz	w24, 47340 <mpfr_subnormalize@@Base+0x2e8>
   471d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   471d4:	ldr	x1, [x0, #2640]
   471d8:	add	x0, x0, #0xa50
   471dc:	blr	x1
   471e0:	ldr	w8, [x23, x0]
   471e4:	mov	w19, w24
   471e8:	b	470d8 <mpfr_subnormalize@@Base+0x80>
   471ec:	add	x1, x8, #0x1
   471f0:	mov	x0, sp
   471f4:	bl	ca60 <mpfr_init2@plt>
   471f8:	ldr	x8, [x20, #16]
   471fc:	str	w24, [sp, #8]
   47200:	ldr	x13, [sp]
   47204:	ldr	x22, [sp, #24]
   47208:	str	x8, [sp, #16]
   4720c:	ldr	x10, [x20]
   47210:	sub	x9, x13, #0x1
   47214:	add	x11, x13, #0x3e
   47218:	sub	x8, x10, #0x1
   4721c:	add	x12, x10, #0x3e
   47220:	cmp	x8, #0x0
   47224:	csel	x8, x12, x8, lt  // lt = tstop
   47228:	cmp	x9, #0x0
   4722c:	csel	x9, x11, x9, lt  // lt = tstop
   47230:	asr	x8, x8, #6
   47234:	asr	x9, x9, #6
   47238:	add	x16, x8, #0x1
   4723c:	cmp	x13, x10
   47240:	add	x11, x9, #0x1
   47244:	b.ge	475cc <mpfr_subnormalize@@Base+0x574>  // b.tcont
   47248:	ldr	x10, [x20, #24]
   4724c:	neg	w12, w13
   47250:	ands	x14, x12, #0x3f
   47254:	mvn	x15, x9
   47258:	add	x12, x10, x16, lsl #3
   4725c:	add	x1, x12, x15, lsl #3
   47260:	b.eq	47608 <mpfr_subnormalize@@Base+0x5b0>  // b.none
   47264:	ldr	x15, [x1]
   47268:	sub	x14, x14, #0x1
   4726c:	mov	w17, #0x1                   	// #1
   47270:	lsl	x17, x17, x14
   47274:	sub	x18, x17, #0x1
   47278:	and	x14, x15, x17
   4727c:	and	x15, x15, x18
   47280:	cbz	w21, 47288 <mpfr_subnormalize@@Base+0x230>
   47284:	cbnz	x14, 472b0 <mpfr_subnormalize@@Base+0x258>
   47288:	cbnz	x15, 472b0 <mpfr_subnormalize@@Base+0x258>
   4728c:	sub	x16, x16, x11
   47290:	cbz	x16, 472b0 <mpfr_subnormalize@@Base+0x258>
   47294:	mvn	x15, x9
   47298:	add	x16, x15, x8
   4729c:	ldr	x15, [x10, x16, lsl #3]
   472a0:	subs	x16, x16, #0x1
   472a4:	cset	w18, cs  // cs = hs, nlast
   472a8:	cbnz	x15, 472b0 <mpfr_subnormalize@@Base+0x258>
   472ac:	tbnz	w18, #0, 4729c <mpfr_subnormalize@@Base+0x244>
   472b0:	lsl	x25, x17, #1
   472b4:	cmp	w21, #0x5
   472b8:	b.eq	47444 <mpfr_subnormalize@@Base+0x3ec>  // b.none
   472bc:	cmp	w21, #0x1
   472c0:	b.eq	472f0 <mpfr_subnormalize@@Base+0x298>  // b.none
   472c4:	cbnz	w21, 472e4 <mpfr_subnormalize@@Base+0x28c>
   472c8:	cbz	x14, 472f0 <mpfr_subnormalize@@Base+0x298>
   472cc:	cbnz	x15, 47350 <mpfr_subnormalize@@Base+0x2f8>
   472d0:	ldr	x14, [x1]
   472d4:	tst	x14, x25
   472d8:	b.eq	476a8 <mpfr_subnormalize@@Base+0x650>  // b.none
   472dc:	lsl	w24, w24, #1
   472e0:	b	47350 <mpfr_subnormalize@@Base+0x2f8>
   472e4:	add	w16, w21, w24, lsr #31
   472e8:	cmp	w16, #0x3
   472ec:	b.ne	47348 <mpfr_subnormalize@@Base+0x2f0>  // b.any
   472f0:	orr	x8, x15, x14
   472f4:	cmp	x8, #0x0
   472f8:	csneg	w24, wzr, w24, eq  // eq = none
   472fc:	cmp	x22, x1
   47300:	b.ne	47450 <mpfr_subnormalize@@Base+0x3f8>  // b.any
   47304:	b	4745c <mpfr_subnormalize@@Base+0x404>
   47308:	ldr	w8, [x20, #8]
   4730c:	add	w8, w21, w8, lsr #31
   47310:	cmp	w8, #0x3
   47314:	b.ne	471ac <mpfr_subnormalize@@Base+0x154>  // b.any
   47318:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4731c:	ldr	x1, [x0, #2576]
   47320:	add	x0, x0, #0xa10
   47324:	blr	x1
   47328:	ldr	x1, [x23, x0]
   4732c:	mov	x0, x20
   47330:	bl	c2b0 <mpfr_setmin@plt>
   47334:	cbz	w24, 47340 <mpfr_subnormalize@@Base+0x2e8>
   47338:	neg	w19, w24
   4733c:	b	470c4 <mpfr_subnormalize@@Base+0x6c>
   47340:	mov	w19, wzr
   47344:	b	470e0 <mpfr_subnormalize@@Base+0x88>
   47348:	orr	x14, x15, x14
   4734c:	cbz	x14, 47444 <mpfr_subnormalize@@Base+0x3ec>
   47350:	ldr	x14, [x1]
   47354:	adds	x14, x14, x25
   47358:	str	x14, [x22]
   4735c:	b.cc	4750c <mpfr_subnormalize@@Base+0x4b4>  // b.lo, b.ul, b.last
   47360:	mov	x17, xzr
   47364:	mov	x15, xzr
   47368:	mov	x13, x9
   4736c:	add	x14, x15, #0x1
   47370:	cmp	x14, x9
   47374:	b.gt	47570 <mpfr_subnormalize@@Base+0x518>
   47378:	lsl	x15, x15, #3
   4737c:	add	x16, x1, x15
   47380:	ldr	x16, [x16, #8]
   47384:	add	x15, x22, x15
   47388:	sub	x17, x17, #0x8
   4738c:	sub	x13, x13, #0x1
   47390:	adds	x16, x16, #0x1
   47394:	str	x16, [x15, #8]
   47398:	mov	x15, x14
   4739c:	b.cs	4736c <mpfr_subnormalize@@Base+0x314>  // b.hs, b.nlast
   473a0:	cmp	x1, x22
   473a4:	b.eq	4745c <mpfr_subnormalize@@Base+0x404>  // b.none
   473a8:	cmp	x14, x9
   473ac:	b.ge	4745c <mpfr_subnormalize@@Base+0x404>  // b.tcont
   473b0:	sub	x15, x9, x14
   473b4:	cmp	x15, #0x4
   473b8:	add	x16, x14, #0x1
   473bc:	b.cc	47420 <mpfr_subnormalize@@Base+0x3c8>  // b.lo, b.ul, b.last
   473c0:	sub	x18, x22, x17
   473c4:	add	x0, x18, #0x8
   473c8:	cmp	x0, x12
   473cc:	sub	x12, x1, x17
   473d0:	b.cs	473e4 <mpfr_subnormalize@@Base+0x38c>  // b.hs, b.nlast
   473d4:	add	x11, x22, x11, lsl #3
   473d8:	add	x17, x12, #0x8
   473dc:	cmp	x17, x11
   473e0:	b.cc	47420 <mpfr_subnormalize@@Base+0x3c8>  // b.lo, b.ul, b.last
   473e4:	and	x13, x13, #0xfffffffffffffffc
   473e8:	and	x17, x15, #0xfffffffffffffffc
   473ec:	add	x13, x13, x14
   473f0:	add	x11, x18, #0x18
   473f4:	add	x12, x12, #0x18
   473f8:	add	x16, x13, #0x1
   473fc:	mov	x13, x17
   47400:	ldp	q0, q1, [x12, #-16]
   47404:	add	x12, x12, #0x20
   47408:	subs	x13, x13, #0x4
   4740c:	stp	q0, q1, [x11, #-16]
   47410:	add	x11, x11, #0x20
   47414:	b.ne	47400 <mpfr_subnormalize@@Base+0x3a8>  // b.any
   47418:	cmp	x15, x17
   4741c:	b.eq	4745c <mpfr_subnormalize@@Base+0x404>  // b.none
   47420:	sub	x9, x16, x9
   47424:	add	x11, x22, x16, lsl #3
   47428:	add	x8, x10, x8, lsl #3
   4742c:	ldr	x10, [x8, x9, lsl #3]
   47430:	add	x9, x9, #0x1
   47434:	cmp	x9, #0x1
   47438:	str	x10, [x11], #8
   4743c:	b.ne	4742c <mpfr_subnormalize@@Base+0x3d4>  // b.any
   47440:	b	4745c <mpfr_subnormalize@@Base+0x404>
   47444:	mov	w24, wzr
   47448:	cmp	x22, x1
   4744c:	b.eq	4745c <mpfr_subnormalize@@Base+0x404>  // b.none
   47450:	lsl	x2, x11, #3
   47454:	mov	x0, x22
   47458:	bl	ba70 <memcpy@plt>
   4745c:	ldr	x8, [x22]
   47460:	neg	x9, x25
   47464:	and	x8, x8, x9
   47468:	str	x8, [x22]
   4746c:	cbz	w19, 47600 <mpfr_subnormalize@@Base+0x5a8>
   47470:	cbz	w21, 474b4 <mpfr_subnormalize@@Base+0x45c>
   47474:	cmp	w24, #0x0
   47478:	csel	w19, w19, w24, eq  // eq = none
   4747c:	ldr	w3, [sp, #8]
   47480:	mov	x1, sp
   47484:	mov	x0, x20
   47488:	mov	w2, w21
   4748c:	bl	c690 <mpfr_set4@plt>
   47490:	cbnz	w0, 47624 <mpfr_subnormalize@@Base+0x5cc>
   47494:	ldr	x8, [x20, #16]
   47498:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4749c:	cmp	x8, x9
   474a0:	b.le	4764c <mpfr_subnormalize@@Base+0x5f4>
   474a4:	mov	x0, sp
   474a8:	bl	c0b0 <mpfr_clear@plt>
   474ac:	cbnz	w19, 470c4 <mpfr_subnormalize@@Base+0x6c>
   474b0:	b	470e0 <mpfr_subnormalize@@Base+0x88>
   474b4:	cmp	w24, #0x2
   474b8:	b.eq	474c4 <mpfr_subnormalize@@Base+0x46c>  // b.none
   474bc:	cmn	w24, #0x2
   474c0:	b.ne	47474 <mpfr_subnormalize@@Base+0x41c>  // b.any
   474c4:	cmp	w24, #0x0
   474c8:	cset	w8, gt
   474cc:	csinv	w8, w8, wzr, ge  // ge = tcont
   474d0:	cmp	w19, #0x0
   474d4:	cset	w9, gt
   474d8:	csinv	w9, w9, wzr, ge  // ge = tcont
   474dc:	cmp	w8, w9
   474e0:	b.ne	47600 <mpfr_subnormalize@@Base+0x5a8>  // b.any
   474e4:	ldr	w9, [x20, #8]
   474e8:	mov	x0, sp
   474ec:	cmp	w9, #0x0
   474f0:	cset	w9, ne  // ne = any
   474f4:	csinv	w9, w9, wzr, ge  // ge = tcont
   474f8:	cmp	w8, w9
   474fc:	b.ne	47588 <mpfr_subnormalize@@Base+0x530>  // b.any
   47500:	bl	c450 <mpfr_nexttozero@plt>
   47504:	neg	w19, w24
   47508:	b	4747c <mpfr_subnormalize@@Base+0x424>
   4750c:	cmp	x13, #0x41
   47510:	b.lt	4745c <mpfr_subnormalize@@Base+0x404>  // b.tstop
   47514:	cmp	x1, x22
   47518:	b.eq	4745c <mpfr_subnormalize@@Base+0x404>  // b.none
   4751c:	cmp	x9, #0x4
   47520:	b.cc	47548 <mpfr_subnormalize@@Base+0x4f0>  // b.lo, b.ul, b.last
   47524:	add	x13, x22, #0x8
   47528:	sub	x14, x8, x9
   4752c:	cmp	x13, x12
   47530:	add	x13, x10, x14, lsl #3
   47534:	b.cs	47594 <mpfr_subnormalize@@Base+0x53c>  // b.hs, b.nlast
   47538:	add	x11, x22, x11, lsl #3
   4753c:	add	x12, x13, #0x8
   47540:	cmp	x12, x11
   47544:	b.cs	47594 <mpfr_subnormalize@@Base+0x53c>  // b.hs, b.nlast
   47548:	mov	w11, #0x1                   	// #1
   4754c:	sub	x9, x11, x9
   47550:	add	x11, x22, x11, lsl #3
   47554:	add	x8, x10, x8, lsl #3
   47558:	ldr	x10, [x8, x9, lsl #3]
   4755c:	add	x9, x9, #0x1
   47560:	cmp	x9, #0x1
   47564:	str	x10, [x11], #8
   47568:	b.ne	47558 <mpfr_subnormalize@@Base+0x500>  // b.any
   4756c:	b	4745c <mpfr_subnormalize@@Base+0x404>
   47570:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   47574:	str	x8, [x22, x9, lsl #3]
   47578:	ldr	x8, [sp, #16]
   4757c:	add	x8, x8, #0x1
   47580:	str	x8, [sp, #16]
   47584:	b	4745c <mpfr_subnormalize@@Base+0x404>
   47588:	bl	c660 <mpfr_nexttoinf@plt>
   4758c:	neg	w19, w24
   47590:	b	4747c <mpfr_subnormalize@@Base+0x424>
   47594:	and	x12, x9, #0xfffffffffffffffc
   47598:	add	x13, x13, #0x18
   4759c:	orr	x11, x12, #0x1
   475a0:	add	x14, x22, #0x18
   475a4:	mov	x15, x12
   475a8:	ldp	q0, q1, [x13, #-16]
   475ac:	add	x13, x13, #0x20
   475b0:	subs	x15, x15, #0x4
   475b4:	stp	q0, q1, [x14, #-16]
   475b8:	add	x14, x14, #0x20
   475bc:	b.ne	475a8 <mpfr_subnormalize@@Base+0x550>  // b.any
   475c0:	cmp	x9, x12
   475c4:	b.eq	4745c <mpfr_subnormalize@@Base+0x404>  // b.none
   475c8:	b	4754c <mpfr_subnormalize@@Base+0x4f4>
   475cc:	ldr	x1, [x20, #24]
   475d0:	sub	x24, x11, x16
   475d4:	add	x0, x22, x24, lsl #3
   475d8:	cmp	x0, x1
   475dc:	b.eq	475e8 <mpfr_subnormalize@@Base+0x590>  // b.none
   475e0:	lsl	x2, x16, #3
   475e4:	bl	ba70 <memcpy@plt>
   475e8:	lsl	x2, x24, #3
   475ec:	mov	x0, x22
   475f0:	mov	w1, wzr
   475f4:	bl	c150 <memset@plt>
   475f8:	mov	w24, wzr
   475fc:	cbnz	w19, 47470 <mpfr_subnormalize@@Base+0x418>
   47600:	mov	w19, w24
   47604:	b	4747c <mpfr_subnormalize@@Base+0x424>
   47608:	ldur	x15, [x1, #-8]
   4760c:	and	x14, x15, #0x8000000000000000
   47610:	and	x15, x15, #0x7fffffffffffffff
   47614:	cbz	w21, 47674 <mpfr_subnormalize@@Base+0x61c>
   47618:	cbz	x14, 47674 <mpfr_subnormalize@@Base+0x61c>
   4761c:	mov	w25, #0x1                   	// #1
   47620:	b	472b4 <mpfr_subnormalize@@Base+0x25c>
   47624:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   47628:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4762c:	add	x0, x0, #0x74d
   47630:	add	x2, x2, #0xb81
   47634:	mov	w1, #0xa0                  	// #160
   47638:	bl	cb20 <mpfr_assert_fail@plt>
   4763c:	ldr	x8, [x20, #16]
   47640:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   47644:	cmp	x8, x9
   47648:	b.gt	474a4 <mpfr_subnormalize@@Base+0x44c>
   4764c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   47650:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   47654:	add	x0, x0, #0x74d
   47658:	add	x2, x2, #0x759
   4765c:	mov	w1, #0xa1                  	// #161
   47660:	bl	cb20 <mpfr_assert_fail@plt>
   47664:	mov	x0, sp
   47668:	bl	c0b0 <mpfr_clear@plt>
   4766c:	cbnz	w19, 470c4 <mpfr_subnormalize@@Base+0x6c>
   47670:	b	470e0 <mpfr_subnormalize@@Base+0x88>
   47674:	mov	w25, #0x1                   	// #1
   47678:	cbnz	x15, 472b4 <mpfr_subnormalize@@Base+0x25c>
   4767c:	sub	x16, x8, x11
   47680:	cbz	x16, 472b4 <mpfr_subnormalize@@Base+0x25c>
   47684:	sub	x15, x8, x9
   47688:	sub	x16, x15, #0x2
   4768c:	mov	w25, #0x1                   	// #1
   47690:	ldr	x15, [x10, x16, lsl #3]
   47694:	subs	x16, x16, #0x1
   47698:	cset	w17, cs  // cs = hs, nlast
   4769c:	cbnz	x15, 472b4 <mpfr_subnormalize@@Base+0x25c>
   476a0:	tbnz	w17, #0, 47690 <mpfr_subnormalize@@Base+0x638>
   476a4:	b	472b4 <mpfr_subnormalize@@Base+0x25c>
   476a8:	neg	w24, w24, lsl #1
   476ac:	cmp	x22, x1
   476b0:	b.ne	47450 <mpfr_subnormalize@@Base+0x3f8>  // b.any
   476b4:	b	4745c <mpfr_subnormalize@@Base+0x404>

00000000000476b8 <mpfr_const_catalan_internal@@Base>:
   476b8:	sub	sp, sp, #0x190
   476bc:	stp	x29, x30, [sp, #304]
   476c0:	stp	x28, x27, [sp, #320]
   476c4:	stp	x26, x25, [sp, #336]
   476c8:	stp	x24, x23, [sp, #352]
   476cc:	stp	x22, x21, [sp, #368]
   476d0:	stp	x20, x19, [sp, #384]
   476d4:	ldr	x22, [x0]
   476d8:	mov	x19, x0
   476dc:	mov	w20, w1
   476e0:	add	x29, sp, #0x130
   476e4:	subs	x21, x22, #0x1
   476e8:	b.eq	47a04 <mpfr_const_catalan_internal@@Base+0x34c>  // b.none
   476ec:	b.le	47a0c <mpfr_const_catalan_internal@@Base+0x354>
   476f0:	clz	x8, x21
   476f4:	mov	w9, #0x40                  	// #64
   476f8:	sub	x8, x9, x8
   476fc:	mov	x24, #0xfffffffffffffeff    	// #-257
   47700:	movk	x24, #0x7fff, lsl #48
   47704:	add	x8, x8, x22
   47708:	sub	x9, x24, #0x7
   4770c:	cmp	x8, x9
   47710:	b.gt	47a28 <mpfr_const_catalan_internal@@Base+0x370>
   47714:	add	x9, x8, #0x6
   47718:	add	x10, x8, #0x45
   4771c:	cmp	x9, #0x0
   47720:	csel	x9, x10, x9, lt  // lt = tstop
   47724:	asr	x9, x9, #6
   47728:	add	x23, x9, #0x1
   4772c:	add	x9, x23, x23, lsl #1
   47730:	cmp	x9, #0x11
   47734:	add	x25, x8, #0x7
   47738:	b.lt	4774c <mpfr_const_catalan_internal@@Base+0x94>  // b.tstop
   4773c:	lsl	x21, x9, #3
   47740:	mov	x0, x21
   47744:	bl	ccd0 <mpfr_allocate_func@plt>
   47748:	b	47758 <mpfr_const_catalan_internal@@Base+0xa0>
   4774c:	add	x8, sp, #0x8
   47750:	mov	x21, xzr
   47754:	add	x0, x8, #0x10
   47758:	stp	x21, x0, [sp, #8]
   4775c:	stur	x0, [x29, #-16]
   47760:	mov	w26, #0x1                   	// #1
   47764:	add	x8, x0, x23, lsl #3
   47768:	add	x9, x0, x23, lsl #4
   4776c:	sub	x0, x29, #0x78
   47770:	stur	x25, [x29, #-104]
   47774:	stur	w26, [x29, #-32]
   47778:	stp	x8, x25, [x29, #-48]
   4777c:	stur	w26, [x29, #-64]
   47780:	stp	x9, x25, [x29, #-80]
   47784:	stur	w26, [x29, #-96]
   47788:	bl	bfe0 <mpfr_mpz_init@plt>
   4778c:	sub	x0, x29, #0x88
   47790:	bl	bfe0 <mpfr_mpz_init@plt>
   47794:	add	x0, sp, #0x98
   47798:	bl	bfe0 <mpfr_mpz_init@plt>
   4779c:	cmp	w20, #0x0
   477a0:	adrp	x21, 64000 <mpfr_bases@@Base+0x758>
   477a4:	adrp	x23, 5d000 <mpfr_free_pool@@Base+0x1b84>
   477a8:	mov	w28, #0x40                  	// #64
   477ac:	mrs	x27, tpidr_el0
   477b0:	add	x21, x21, #0x7a7
   477b4:	cinc	x22, x22, eq  // eq = none
   477b8:	add	x23, x23, #0xcf6
   477bc:	sub	x0, x29, #0x28
   477c0:	mov	w1, #0x3                   	// #3
   477c4:	mov	w2, #0x2                   	// #2
   477c8:	bl	c830 <mpfr_sqrt_ui@plt>
   477cc:	sub	x0, x29, #0x28
   477d0:	sub	x1, x29, #0x28
   477d4:	mov	w2, #0x2                   	// #2
   477d8:	mov	w3, #0x2                   	// #2
   477dc:	bl	c270 <mpfr_add_ui@plt>
   477e0:	sub	x0, x29, #0x28
   477e4:	sub	x1, x29, #0x28
   477e8:	mov	w2, #0x2                   	// #2
   477ec:	bl	c0d0 <mpfr_log@plt>
   477f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   477f4:	ldr	x1, [x0, #2688]
   477f8:	add	x0, x0, #0xa80
   477fc:	blr	x1
   47800:	add	x1, x27, x0
   47804:	sub	x0, x29, #0x48
   47808:	mov	w2, #0x2                   	// #2
   4780c:	bl	c380 <mpfr_cache@plt>
   47810:	sub	x0, x29, #0x28
   47814:	sub	x1, x29, #0x28
   47818:	sub	x2, x29, #0x48
   4781c:	mov	w3, wzr
   47820:	bl	bda0 <mpfr_mul@plt>
   47824:	sub	x8, x25, #0x1
   47828:	cmp	x8, #0x0
   4782c:	csel	x8, x25, x8, lt  // lt = tstop
   47830:	asr	x4, x8, #1
   47834:	sub	x0, x29, #0x78
   47838:	sub	x1, x29, #0x88
   4783c:	add	x2, sp, #0x98
   47840:	mov	x3, xzr
   47844:	bl	47a60 <mpfr_const_catalan@@Base+0x34>
   47848:	sub	x0, x29, #0x78
   4784c:	sub	x1, x29, #0x78
   47850:	mov	w2, #0x3                   	// #3
   47854:	bl	c140 <__gmpz_mul_ui@plt>
   47858:	sub	x0, x29, #0x48
   4785c:	sub	x1, x29, #0x78
   47860:	mov	w2, #0x2                   	// #2
   47864:	bl	c250 <mpfr_set_z@plt>
   47868:	sub	x0, x29, #0x68
   4786c:	add	x1, sp, #0x98
   47870:	mov	w2, #0x3                   	// #3
   47874:	bl	c250 <mpfr_set_z@plt>
   47878:	sub	x0, x29, #0x48
   4787c:	sub	x1, x29, #0x48
   47880:	sub	x2, x29, #0x68
   47884:	mov	w3, wzr
   47888:	bl	c610 <mpfr_div@plt>
   4788c:	sub	x0, x29, #0x28
   47890:	sub	x1, x29, #0x28
   47894:	sub	x2, x29, #0x48
   47898:	mov	w3, wzr
   4789c:	bl	c1e0 <mpfr_add@plt>
   478a0:	sub	x0, x29, #0x28
   478a4:	sub	x1, x29, #0x28
   478a8:	mov	w2, #0x3                   	// #3
   478ac:	mov	w3, wzr
   478b0:	bl	c8f0 <mpfr_div_2ui@plt>
   478b4:	ldur	x8, [x29, #-24]
   478b8:	add	x9, x24, #0x105
   478bc:	cmp	x8, x9
   478c0:	b.lt	478f4 <mpfr_const_catalan_internal@@Base+0x23c>  // b.tstop
   478c4:	ldur	x8, [x29, #-40]
   478c8:	ldur	x0, [x29, #-16]
   478cc:	sub	x2, x25, #0x5
   478d0:	mov	x3, x22
   478d4:	sub	x9, x8, #0x1
   478d8:	add	x8, x8, #0x3e
   478dc:	cmp	x9, #0x0
   478e0:	csel	x8, x8, x9, lt  // lt = tstop
   478e4:	asr	x8, x8, #6
   478e8:	add	x1, x8, #0x1
   478ec:	bl	c370 <mpfr_round_p@plt>
   478f0:	cbnz	w0, 479a0 <mpfr_const_catalan_internal@@Base+0x2e8>
   478f4:	sub	x8, x24, x25
   478f8:	cmp	x28, x8
   478fc:	b.gt	4798c <mpfr_const_catalan_internal@@Base+0x2d4>
   47900:	add	x25, x25, x28
   47904:	cmp	x25, #0x0
   47908:	cinc	x8, x25, lt  // lt = tstop
   4790c:	cmp	x25, x24
   47910:	b.gt	47a28 <mpfr_const_catalan_internal@@Base+0x370>
   47914:	asr	x28, x8, #1
   47918:	sub	x8, x25, #0x1
   4791c:	add	x9, x25, #0x3e
   47920:	cmp	x8, #0x0
   47924:	csel	x8, x9, x8, lt  // lt = tstop
   47928:	ldr	x1, [sp, #8]
   4792c:	asr	x8, x8, #6
   47930:	add	x8, x8, #0x1
   47934:	str	x8, [sp]
   47938:	add	x8, x8, x8, lsl #1
   4793c:	lsl	x2, x8, #3
   47940:	str	x2, [sp, #8]
   47944:	cbz	x1, 47954 <mpfr_const_catalan_internal@@Base+0x29c>
   47948:	ldr	x0, [sp, #16]
   4794c:	bl	c200 <mpfr_reallocate_func@plt>
   47950:	b	4795c <mpfr_const_catalan_internal@@Base+0x2a4>
   47954:	mov	x0, x2
   47958:	bl	ccd0 <mpfr_allocate_func@plt>
   4795c:	ldr	x9, [sp]
   47960:	str	x0, [sp, #16]
   47964:	stur	x0, [x29, #-16]
   47968:	stur	w26, [x29, #-32]
   4796c:	add	x8, x0, x9, lsl #3
   47970:	add	x9, x0, x9, lsl #4
   47974:	stur	w26, [x29, #-64]
   47978:	stur	x25, [x29, #-104]
   4797c:	stp	x8, x25, [x29, #-48]
   47980:	stp	x9, x25, [x29, #-80]
   47984:	stur	w26, [x29, #-96]
   47988:	b	477bc <mpfr_const_catalan_internal@@Base+0x104>
   4798c:	mov	w1, #0x8d                  	// #141
   47990:	mov	x0, x21
   47994:	mov	x2, x23
   47998:	bl	cb20 <mpfr_assert_fail@plt>
   4799c:	b	47900 <mpfr_const_catalan_internal@@Base+0x248>
   479a0:	ldur	w3, [x29, #-32]
   479a4:	sub	x1, x29, #0x28
   479a8:	mov	x0, x19
   479ac:	mov	w2, w20
   479b0:	bl	c690 <mpfr_set4@plt>
   479b4:	ldr	x1, [sp, #8]
   479b8:	mov	w19, w0
   479bc:	cbz	x1, 479c8 <mpfr_const_catalan_internal@@Base+0x310>
   479c0:	ldr	x0, [sp, #16]
   479c4:	bl	cc00 <mpfr_free_func@plt>
   479c8:	sub	x0, x29, #0x78
   479cc:	bl	c1b0 <mpfr_mpz_clear@plt>
   479d0:	sub	x0, x29, #0x88
   479d4:	bl	c1b0 <mpfr_mpz_clear@plt>
   479d8:	add	x0, sp, #0x98
   479dc:	bl	c1b0 <mpfr_mpz_clear@plt>
   479e0:	mov	w0, w19
   479e4:	ldp	x20, x19, [sp, #384]
   479e8:	ldp	x22, x21, [sp, #368]
   479ec:	ldp	x24, x23, [sp, #352]
   479f0:	ldp	x26, x25, [sp, #336]
   479f4:	ldp	x28, x27, [sp, #320]
   479f8:	ldp	x29, x30, [sp, #304]
   479fc:	add	sp, sp, #0x190
   47a00:	ret
   47a04:	mov	x8, xzr
   47a08:	b	476fc <mpfr_const_catalan_internal@@Base+0x44>
   47a0c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   47a10:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   47a14:	add	x0, x0, #0x7a7
   47a18:	add	x2, x2, #0x7b7
   47a1c:	mov	w1, #0x74                  	// #116
   47a20:	bl	cb20 <mpfr_assert_fail@plt>
   47a24:	b	476f0 <mpfr_const_catalan_internal@@Base+0x38>
   47a28:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000047a2c <mpfr_const_catalan@@Base>:
   47a2c:	stp	x29, x30, [sp, #-16]!
   47a30:	mov	x29, sp
   47a34:	mov	w2, w1
   47a38:	mov	x8, x0
   47a3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47a40:	ldr	x1, [x0, #2656]
   47a44:	add	x0, x0, #0xa60
   47a48:	blr	x1
   47a4c:	mrs	x9, tpidr_el0
   47a50:	add	x1, x9, x0
   47a54:	mov	x0, x8
   47a58:	ldp	x29, x30, [sp], #16
   47a5c:	b	c380 <mpfr_cache@plt>
   47a60:	sub	sp, sp, #0x70
   47a64:	add	x8, x3, #0x1
   47a68:	stp	x24, x23, [sp, #64]
   47a6c:	stp	x22, x21, [sp, #80]
   47a70:	stp	x20, x19, [sp, #96]
   47a74:	mov	x23, x3
   47a78:	mov	x20, x2
   47a7c:	mov	x19, x1
   47a80:	cmp	x8, x4
   47a84:	mov	x21, x0
   47a88:	stp	x29, x30, [sp, #48]
   47a8c:	add	x29, sp, #0x30
   47a90:	b.ne	47ae0 <mpfr_const_catalan@@Base+0xb4>  // b.any
   47a94:	cbz	x23, 47bb4 <mpfr_const_catalan@@Base+0x188>
   47a98:	lsl	x8, x23, #1
   47a9c:	sub	x1, x8, #0x1
   47aa0:	mov	x0, x19
   47aa4:	bl	bd00 <__gmpz_set_ui@plt>
   47aa8:	mov	x0, x19
   47aac:	mov	x1, x19
   47ab0:	mov	x2, x23
   47ab4:	bl	c140 <__gmpz_mul_ui@plt>
   47ab8:	mov	w1, #0x1                   	// #1
   47abc:	bfi	x1, x23, #1, #63
   47ac0:	mov	w2, #0x2                   	// #2
   47ac4:	mov	x0, x20
   47ac8:	bl	c4d0 <__gmpz_ui_pow_ui@plt>
   47acc:	mov	w2, #0x1                   	// #1
   47ad0:	mov	x0, x20
   47ad4:	mov	x1, x20
   47ad8:	bl	c230 <__gmpz_mul_2exp@plt>
   47adc:	b	47bcc <mpfr_const_catalan@@Base+0x1a0>
   47ae0:	add	x8, x4, x23
   47ae4:	lsr	x24, x8, #1
   47ae8:	mov	x22, x4
   47aec:	mov	x0, x21
   47af0:	mov	x1, x19
   47af4:	mov	x2, x20
   47af8:	mov	x3, x23
   47afc:	mov	x4, x24
   47b00:	bl	47a60 <mpfr_const_catalan@@Base+0x34>
   47b04:	sub	x0, x29, #0x10
   47b08:	bl	bfe0 <mpfr_mpz_init@plt>
   47b0c:	add	x0, sp, #0x10
   47b10:	bl	bfe0 <mpfr_mpz_init@plt>
   47b14:	mov	x0, sp
   47b18:	bl	bfe0 <mpfr_mpz_init@plt>
   47b1c:	sub	x0, x29, #0x10
   47b20:	add	x1, sp, #0x10
   47b24:	mov	x2, sp
   47b28:	mov	x3, x24
   47b2c:	mov	x4, x22
   47b30:	bl	47a60 <mpfr_const_catalan@@Base+0x34>
   47b34:	mov	x2, sp
   47b38:	mov	x0, x21
   47b3c:	mov	x1, x21
   47b40:	bl	c030 <__gmpz_mul@plt>
   47b44:	sub	x0, x29, #0x10
   47b48:	sub	x1, x29, #0x10
   47b4c:	mov	x2, x19
   47b50:	bl	c030 <__gmpz_mul@plt>
   47b54:	sub	x2, x29, #0x10
   47b58:	mov	x0, x21
   47b5c:	mov	x1, x21
   47b60:	bl	c9a0 <__gmpz_add@plt>
   47b64:	add	x2, sp, #0x10
   47b68:	mov	x0, x19
   47b6c:	mov	x1, x19
   47b70:	bl	c030 <__gmpz_mul@plt>
   47b74:	mov	x2, sp
   47b78:	mov	x0, x20
   47b7c:	mov	x1, x20
   47b80:	bl	c030 <__gmpz_mul@plt>
   47b84:	sub	x0, x29, #0x10
   47b88:	bl	c1b0 <mpfr_mpz_clear@plt>
   47b8c:	add	x0, sp, #0x10
   47b90:	bl	c1b0 <mpfr_mpz_clear@plt>
   47b94:	mov	x0, sp
   47b98:	bl	c1b0 <mpfr_mpz_clear@plt>
   47b9c:	ldp	x20, x19, [sp, #96]
   47ba0:	ldp	x22, x21, [sp, #80]
   47ba4:	ldp	x24, x23, [sp, #64]
   47ba8:	ldp	x29, x30, [sp, #48]
   47bac:	add	sp, sp, #0x70
   47bb0:	ret
   47bb4:	mov	w1, #0x1                   	// #1
   47bb8:	mov	x0, x19
   47bbc:	bl	bd00 <__gmpz_set_ui@plt>
   47bc0:	mov	w1, #0x1                   	// #1
   47bc4:	mov	x0, x20
   47bc8:	bl	bd00 <__gmpz_set_ui@plt>
   47bcc:	mov	x0, x21
   47bd0:	mov	x1, x19
   47bd4:	ldp	x20, x19, [sp, #96]
   47bd8:	ldp	x22, x21, [sp, #80]
   47bdc:	ldp	x24, x23, [sp, #64]
   47be0:	ldp	x29, x30, [sp, #48]
   47be4:	add	sp, sp, #0x70
   47be8:	b	bff0 <__gmpz_set@plt>

0000000000047bec <mpfr_rootn_ui@@Base>:
   47bec:	sub	sp, sp, #0x1b0
   47bf0:	stp	x22, x21, [sp, #400]
   47bf4:	stp	x20, x19, [sp, #416]
   47bf8:	mov	w20, w3
   47bfc:	mov	x21, x2
   47c00:	mov	x22, x1
   47c04:	cmp	x2, #0x1
   47c08:	mov	x19, x0
   47c0c:	stp	x29, x30, [sp, #336]
   47c10:	stp	x28, x27, [sp, #352]
   47c14:	stp	x26, x25, [sp, #368]
   47c18:	stp	x24, x23, [sp, #384]
   47c1c:	add	x29, sp, #0x150
   47c20:	b.ls	482b4 <mpfr_rootn_ui@@Base+0x6c8>  // b.plast
   47c24:	ldr	x8, [x22, #16]
   47c28:	mov	x26, #0x2                   	// #2
   47c2c:	movk	x26, #0x8000, lsl #48
   47c30:	add	x9, x26, #0x2
   47c34:	cmp	x8, x9
   47c38:	b.lt	482f4 <mpfr_rootn_ui@@Base+0x708>  // b.tstop
   47c3c:	tbnz	w21, #0, 47c48 <mpfr_rootn_ui@@Base+0x5c>
   47c40:	ldr	w8, [x22, #8]
   47c44:	tbnz	w8, #31, 48368 <mpfr_rootn_ui@@Base+0x77c>
   47c48:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   47c4c:	ldr	x1, [x1, #3944]
   47c50:	mov	x0, x22
   47c54:	bl	c990 <mpfr_cmpabs@plt>
   47c58:	cbz	w0, 482b8 <mpfr_rootn_ui@@Base+0x6cc>
   47c5c:	cmp	x21, #0x65
   47c60:	b.cc	47ce8 <mpfr_rootn_ui@@Base+0xfc>  // b.lo, b.ul, b.last
   47c64:	ldr	x8, [x22]
   47c68:	mov	w9, #0x1                   	// #1
   47c6c:	stur	w9, [x29, #-32]
   47c70:	stur	x8, [x29, #-40]
   47c74:	ldr	q0, [x22, #16]
   47c78:	stur	q0, [x29, #-24]
   47c7c:	ldr	x10, [x19]
   47c80:	fmov	x8, d0
   47c84:	subs	x9, x8, #0x1
   47c88:	add	x27, x10, #0xa
   47c8c:	b.lt	47ca8 <mpfr_rootn_ui@@Base+0xbc>  // b.tstop
   47c90:	clz	x9, x9
   47c94:	mov	w10, #0x40                  	// #64
   47c98:	sub	x9, x10, x9
   47c9c:	cmp	x8, #0x1
   47ca0:	csel	x8, xzr, x9, eq  // eq = none
   47ca4:	add	x27, x8, x27
   47ca8:	sub	x8, x26, #0x103
   47cac:	cmp	x27, x8
   47cb0:	str	x8, [sp, #8]
   47cb4:	b.gt	483b8 <mpfr_rootn_ui@@Base+0x7cc>
   47cb8:	cmp	x27, #0x401
   47cbc:	b.lt	47e54 <mpfr_rootn_ui@@Base+0x268>  // b.tstop
   47cc0:	sub	x8, x27, #0x1
   47cc4:	add	x9, x27, #0x3e
   47cc8:	cmp	x8, #0x0
   47ccc:	csel	x8, x9, x8, lt  // lt = tstop
   47cd0:	asr	x8, x8, #6
   47cd4:	lsl	x8, x8, #3
   47cd8:	add	x23, x8, #0x8
   47cdc:	mov	x0, x23
   47ce0:	bl	ccd0 <mpfr_allocate_func@plt>
   47ce4:	b	47e60 <mpfr_rootn_ui@@Base+0x274>
   47ce8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47cec:	ldr	x1, [x0, #2640]
   47cf0:	add	x0, x0, #0xa50
   47cf4:	blr	x1
   47cf8:	mrs	x24, tpidr_el0
   47cfc:	ldr	w8, [x24, x0]
   47d00:	str	w8, [sp, #48]
   47d04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47d08:	ldr	x1, [x0, #2576]
   47d0c:	add	x0, x0, #0xa10
   47d10:	blr	x1
   47d14:	ldr	x9, [x24, x0]
   47d18:	mov	x8, x0
   47d1c:	str	x9, [sp, #40]
   47d20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47d24:	ldr	x1, [x0, #2608]
   47d28:	add	x0, x0, #0xa30
   47d2c:	blr	x1
   47d30:	ldr	x27, [x24, x0]
   47d34:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   47d38:	str	x9, [x24, x8]
   47d3c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   47d40:	str	x8, [x24, x0]
   47d44:	add	x0, sp, #0x78
   47d48:	bl	bfe0 <mpfr_mpz_init@plt>
   47d4c:	add	x0, sp, #0x78
   47d50:	mov	x1, x22
   47d54:	bl	caa0 <mpfr_get_z_2exp@plt>
   47d58:	ldr	w28, [x22, #8]
   47d5c:	ldr	w8, [sp, #124]
   47d60:	mov	x22, x0
   47d64:	tbz	w28, #31, 47d70 <mpfr_rootn_ui@@Base+0x184>
   47d68:	neg	w8, w8
   47d6c:	str	w8, [sp, #124]
   47d70:	ldr	x10, [sp, #128]
   47d74:	cmp	w8, #0x0
   47d78:	sdiv	x9, x22, x21
   47d7c:	cneg	w8, w8, mi  // mi = first
   47d80:	msub	x9, x9, x21, x22
   47d84:	add	x10, x10, w8, uxtw #3
   47d88:	and	x11, x21, x9, asr #63
   47d8c:	ldur	x10, [x10, #-8]
   47d90:	add	x9, x11, x9
   47d94:	ldr	x11, [x19]
   47d98:	cmp	w20, #0x0
   47d9c:	lsl	x8, x8, #6
   47da0:	clz	x10, x10
   47da4:	cinc	x26, x11, eq  // eq = none
   47da8:	sub	x8, x8, x10
   47dac:	add	x8, x8, x9
   47db0:	mul	x10, x26, x21
   47db4:	subs	x8, x10, x8
   47db8:	b.ls	47dc4 <mpfr_rootn_ui@@Base+0x1d8>  // b.plast
   47dbc:	udiv	x8, x8, x21
   47dc0:	b	47dc8 <mpfr_rootn_ui@@Base+0x1dc>
   47dc4:	mov	x8, xzr
   47dc8:	madd	x23, x8, x21, x9
   47dcc:	add	x0, sp, #0x78
   47dd0:	add	x1, sp, #0x78
   47dd4:	mov	x2, x23
   47dd8:	bl	c230 <__gmpz_mul_2exp@plt>
   47ddc:	add	x0, sp, #0x78
   47de0:	add	x1, sp, #0x78
   47de4:	mov	x2, x21
   47de8:	sub	x25, x22, x23
   47dec:	bl	c2e0 <__gmpz_root@plt>
   47df0:	ldr	w8, [sp, #124]
   47df4:	ldr	x9, [sp, #128]
   47df8:	cmp	w8, #0x0
   47dfc:	cneg	w8, w8, mi  // mi = first
   47e00:	add	x9, x9, w8, uxtw #3
   47e04:	ldur	x9, [x9, #-8]
   47e08:	lsl	x8, x8, #6
   47e0c:	clz	x9, x9
   47e10:	sub	x8, x8, x9
   47e14:	sub	x22, x8, x26
   47e18:	cmp	x22, #0x1
   47e1c:	b.lt	48178 <mpfr_rootn_ui@@Base+0x58c>  // b.tstop
   47e20:	cbz	w0, 48184 <mpfr_rootn_ui@@Base+0x598>
   47e24:	add	x0, sp, #0x78
   47e28:	mov	x1, xzr
   47e2c:	bl	baf0 <__gmpz_scan1@plt>
   47e30:	mov	x23, x0
   47e34:	add	x0, sp, #0x78
   47e38:	add	x1, sp, #0x78
   47e3c:	mov	x2, x22
   47e40:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   47e44:	cmp	x23, x22
   47e48:	madd	x25, x22, x21, x25
   47e4c:	b.lt	48198 <mpfr_rootn_ui@@Base+0x5ac>  // b.tstop
   47e50:	b	4817c <mpfr_rootn_ui@@Base+0x590>
   47e54:	add	x8, sp, #0x78
   47e58:	mov	x23, xzr
   47e5c:	add	x0, x8, #0x10
   47e60:	mov	w8, #0x1                   	// #1
   47e64:	stp	x23, x0, [sp, #120]
   47e68:	stur	x27, [x29, #-72]
   47e6c:	stur	x0, [x29, #-48]
   47e70:	stur	w8, [x29, #-64]
   47e74:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47e78:	ldr	x1, [x0, #2640]
   47e7c:	add	x0, x0, #0xa50
   47e80:	blr	x1
   47e84:	mrs	x28, tpidr_el0
   47e88:	ldr	w8, [x28, x0]
   47e8c:	str	w8, [sp, #40]
   47e90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47e94:	ldr	x1, [x0, #2576]
   47e98:	add	x0, x0, #0xa10
   47e9c:	blr	x1
   47ea0:	ldr	x9, [x28, x0]
   47ea4:	mov	x8, x0
   47ea8:	str	x9, [sp, #32]
   47eac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   47eb0:	ldr	x1, [x0, #2608]
   47eb4:	add	x0, x0, #0xa30
   47eb8:	blr	x1
   47ebc:	ldr	x9, [x28, x0]
   47ec0:	cmp	w20, #0x0
   47ec4:	mov	w24, wzr
   47ec8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   47ecc:	str	x9, [sp, #24]
   47ed0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   47ed4:	str	x9, [x28, x8]
   47ed8:	cset	w8, eq  // eq = none
   47edc:	str	x8, [sp, #48]
   47ee0:	mov	w8, #0x40                  	// #64
   47ee4:	str	x10, [x28, x0]
   47ee8:	str	x8, [sp, #16]
   47eec:	sub	x0, x29, #0x48
   47ef0:	sub	x1, x29, #0x28
   47ef4:	mov	w2, wzr
   47ef8:	bl	c0d0 <mpfr_log@plt>
   47efc:	sub	x0, x29, #0x48
   47f00:	sub	x1, x29, #0x48
   47f04:	mov	x2, x21
   47f08:	mov	w3, wzr
   47f0c:	bl	cc40 <mpfr_div_ui@plt>
   47f10:	ldur	x25, [x29, #-56]
   47f14:	sub	x0, x29, #0x48
   47f18:	sub	x1, x29, #0x48
   47f1c:	mov	w2, wzr
   47f20:	bl	c740 <mpfr_exp@plt>
   47f24:	ldur	x8, [x29, #-56]
   47f28:	add	x9, x26, #0x2
   47f2c:	cmp	x8, x9
   47f30:	b.lt	47f80 <mpfr_rootn_ui@@Base+0x394>  // b.tstop
   47f34:	ldur	x9, [x29, #-72]
   47f38:	cmn	x25, #0x2
   47f3c:	mov	w11, #0x1                   	// #1
   47f40:	add	w8, w25, #0x3
   47f44:	cinc	x11, x11, eq  // eq = none
   47f48:	csel	x8, x8, x11, gt
   47f4c:	sub	x2, x27, w8, uxtw
   47f50:	sub	x8, x9, #0x1
   47f54:	add	x9, x9, #0x3e
   47f58:	cmp	x8, #0x0
   47f5c:	csel	x8, x9, x8, lt  // lt = tstop
   47f60:	asr	x8, x8, #6
   47f64:	ldr	x10, [x19]
   47f68:	add	x1, x8, #0x1
   47f6c:	ldr	x8, [sp, #48]
   47f70:	ldur	x0, [x29, #-48]
   47f74:	add	x3, x10, x8
   47f78:	bl	c370 <mpfr_round_p@plt>
   47f7c:	cbnz	w0, 480d0 <mpfr_rootn_ui@@Base+0x4e4>
   47f80:	ldr	x8, [x19]
   47f84:	ldr	x9, [sp, #48]
   47f88:	add	x0, sp, #0x58
   47f8c:	add	x1, x8, x9
   47f90:	bl	ca60 <mpfr_init2@plt>
   47f94:	ldr	x1, [x22]
   47f98:	add	x0, sp, #0x38
   47f9c:	bl	ca60 <mpfr_init2@plt>
   47fa0:	ldur	w3, [x29, #-64]
   47fa4:	add	x0, sp, #0x58
   47fa8:	sub	x1, x29, #0x48
   47fac:	mov	w2, wzr
   47fb0:	bl	c690 <mpfr_set4@plt>
   47fb4:	add	x0, sp, #0x38
   47fb8:	add	x1, sp, #0x58
   47fbc:	mov	x2, x21
   47fc0:	mov	w3, wzr
   47fc4:	bl	bfc0 <mpfr_pow_ui@plt>
   47fc8:	cbz	w0, 47fd8 <mpfr_rootn_ui@@Base+0x3ec>
   47fcc:	mov	w23, w0
   47fd0:	mov	w24, wzr
   47fd4:	b	48010 <mpfr_rootn_ui@@Base+0x424>
   47fd8:	add	x0, sp, #0x38
   47fdc:	sub	x1, x29, #0x28
   47fe0:	bl	ca40 <mpfr_equal_p@plt>
   47fe4:	cbz	w0, 48008 <mpfr_rootn_ui@@Base+0x41c>
   47fe8:	ldr	w3, [x22, #8]
   47fec:	add	x1, sp, #0x58
   47ff0:	mov	x0, x19
   47ff4:	mov	w2, w20
   47ff8:	bl	c690 <mpfr_set4@plt>
   47ffc:	mov	w23, w0
   48000:	mov	w24, #0x1                   	// #1
   48004:	b	48010 <mpfr_rootn_ui@@Base+0x424>
   48008:	mov	w24, wzr
   4800c:	mov	w23, wzr
   48010:	add	x0, sp, #0x38
   48014:	bl	c0b0 <mpfr_clear@plt>
   48018:	add	x0, sp, #0x58
   4801c:	bl	c0b0 <mpfr_clear@plt>
   48020:	tbnz	w24, #0, 480d0 <mpfr_rootn_ui@@Base+0x4e4>
   48024:	ldr	x9, [sp, #16]
   48028:	sub	x8, x26, x27
   4802c:	sub	x8, x8, #0x103
   48030:	cmp	x9, x8
   48034:	mov	x8, x9
   48038:	b.gt	480b0 <mpfr_rootn_ui@@Base+0x4c4>
   4803c:	ldr	x9, [sp, #8]
   48040:	add	x27, x27, x8
   48044:	cmp	x27, #0x0
   48048:	cinc	x8, x27, lt  // lt = tstop
   4804c:	cmp	x27, x9
   48050:	b.gt	483b8 <mpfr_rootn_ui@@Base+0x7cc>
   48054:	asr	x8, x8, #1
   48058:	str	x8, [sp, #16]
   4805c:	sub	x8, x27, #0x1
   48060:	add	x9, x27, #0x3e
   48064:	cmp	x8, #0x0
   48068:	ldr	x1, [sp, #120]
   4806c:	csel	x8, x9, x8, lt  // lt = tstop
   48070:	asr	x8, x8, #6
   48074:	lsl	x8, x8, #3
   48078:	add	x2, x8, #0x8
   4807c:	str	x2, [sp, #120]
   48080:	cbz	x1, 48090 <mpfr_rootn_ui@@Base+0x4a4>
   48084:	ldr	x0, [sp, #128]
   48088:	bl	c200 <mpfr_reallocate_func@plt>
   4808c:	b	48098 <mpfr_rootn_ui@@Base+0x4ac>
   48090:	mov	x0, x2
   48094:	bl	ccd0 <mpfr_allocate_func@plt>
   48098:	mov	w8, #0x1                   	// #1
   4809c:	str	x0, [sp, #128]
   480a0:	stur	x27, [x29, #-72]
   480a4:	stur	x0, [x29, #-48]
   480a8:	stur	w8, [x29, #-64]
   480ac:	b	47eec <mpfr_rootn_ui@@Base+0x300>
   480b0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   480b4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   480b8:	mov	w1, #0x11d                 	// #285
   480bc:	add	x0, x0, #0x7c0
   480c0:	add	x2, x2, #0x6c6
   480c4:	bl	cb20 <mpfr_assert_fail@plt>
   480c8:	ldr	x8, [sp, #16]
   480cc:	b	4803c <mpfr_rootn_ui@@Base+0x450>
   480d0:	cbnz	w24, 480ec <mpfr_rootn_ui@@Base+0x500>
   480d4:	ldr	w3, [x22, #8]
   480d8:	sub	x1, x29, #0x48
   480dc:	mov	x0, x19
   480e0:	mov	w2, w20
   480e4:	bl	c690 <mpfr_set4@plt>
   480e8:	mov	w23, w0
   480ec:	ldr	x1, [sp, #120]
   480f0:	cbz	x1, 480fc <mpfr_rootn_ui@@Base+0x510>
   480f4:	ldr	x0, [sp, #128]
   480f8:	bl	cc00 <mpfr_free_func@plt>
   480fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48100:	ldr	x1, [x0, #2640]
   48104:	add	x0, x0, #0xa50
   48108:	blr	x1
   4810c:	ldr	w9, [sp, #40]
   48110:	str	w9, [x28, x0]
   48114:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48118:	ldr	x1, [x0, #2576]
   4811c:	add	x0, x0, #0xa10
   48120:	blr	x1
   48124:	ldr	x10, [sp, #32]
   48128:	str	x10, [x28, x0]
   4812c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48130:	ldr	x1, [x0, #2608]
   48134:	add	x0, x0, #0xa30
   48138:	blr	x1
   4813c:	ldr	x11, [sp, #24]
   48140:	str	x11, [x28, x0]
   48144:	ldr	x8, [x19, #16]
   48148:	cmp	x8, x11
   4814c:	b.gt	48338 <mpfr_rootn_ui@@Base+0x74c>
   48150:	cmp	x8, x10
   48154:	b.lt	48338 <mpfr_rootn_ui@@Base+0x74c>  // b.tstop
   48158:	cbz	w23, 482d0 <mpfr_rootn_ui@@Base+0x6e4>
   4815c:	orr	w8, w9, #0x8
   48160:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48164:	ldr	x1, [x0, #2640]
   48168:	add	x0, x0, #0xa50
   4816c:	blr	x1
   48170:	str	w8, [x28, x0]
   48174:	b	482d0 <mpfr_rootn_ui@@Base+0x6e4>
   48178:	cbz	w0, 48198 <mpfr_rootn_ui@@Base+0x5ac>
   4817c:	mov	w22, wzr
   48180:	b	481fc <mpfr_rootn_ui@@Base+0x610>
   48184:	add	x0, sp, #0x78
   48188:	add	x1, sp, #0x78
   4818c:	mov	x2, x22
   48190:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   48194:	madd	x25, x22, x21, x25
   48198:	cmp	w20, #0x3
   4819c:	mov	w8, #0x2                   	// #2
   481a0:	mov	w9, #0x3                   	// #3
   481a4:	csel	w8, w8, w20, eq  // eq = none
   481a8:	cmp	w20, #0x2
   481ac:	csel	w8, w9, w8, eq  // eq = none
   481b0:	cmp	w28, #0x0
   481b4:	csel	w20, w8, w20, lt  // lt = tstop
   481b8:	cmp	w20, #0x4
   481bc:	b.eq	481dc <mpfr_rootn_ui@@Base+0x5f0>  // b.none
   481c0:	cmp	w20, #0x2
   481c4:	b.eq	481dc <mpfr_rootn_ui@@Base+0x5f0>  // b.none
   481c8:	cbnz	w20, 481f8 <mpfr_rootn_ui@@Base+0x60c>
   481cc:	add	x0, sp, #0x78
   481d0:	mov	x1, xzr
   481d4:	bl	c020 <__gmpz_tstbit@plt>
   481d8:	cbz	w0, 481f4 <mpfr_rootn_ui@@Base+0x608>
   481dc:	add	x0, sp, #0x78
   481e0:	add	x1, sp, #0x78
   481e4:	mov	w2, #0x1                   	// #1
   481e8:	mov	w22, #0x1                   	// #1
   481ec:	bl	c360 <__gmpz_add_ui@plt>
   481f0:	b	481fc <mpfr_rootn_ui@@Base+0x610>
   481f4:	mov	w20, wzr
   481f8:	mov	w22, #0xffffffff            	// #-1
   481fc:	add	x1, sp, #0x78
   48200:	mov	x0, x19
   48204:	mov	w2, wzr
   48208:	bl	c250 <mpfr_set_z@plt>
   4820c:	ldr	x8, [x19, #16]
   48210:	sdiv	x9, x25, x21
   48214:	add	w23, w0, w22
   48218:	add	x8, x9, x8
   4821c:	str	x8, [x19, #16]
   48220:	tbz	w28, #31, 48234 <mpfr_rootn_ui@@Base+0x648>
   48224:	ldr	w8, [x19, #8]
   48228:	neg	w23, w23
   4822c:	neg	w8, w8
   48230:	str	w8, [x19, #8]
   48234:	add	x0, sp, #0x78
   48238:	bl	c1b0 <mpfr_mpz_clear@plt>
   4823c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48240:	ldr	x1, [x0, #2640]
   48244:	add	x0, x0, #0xa50
   48248:	blr	x1
   4824c:	ldr	w9, [sp, #48]
   48250:	str	w9, [x24, x0]
   48254:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48258:	ldr	x1, [x0, #2576]
   4825c:	add	x0, x0, #0xa10
   48260:	blr	x1
   48264:	ldr	x10, [sp, #40]
   48268:	str	x10, [x24, x0]
   4826c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48270:	ldr	x1, [x0, #2608]
   48274:	add	x0, x0, #0xa30
   48278:	blr	x1
   4827c:	str	x27, [x24, x0]
   48280:	ldr	x8, [x19, #16]
   48284:	cmp	x8, x27
   48288:	b.gt	48338 <mpfr_rootn_ui@@Base+0x74c>
   4828c:	cmp	x8, x10
   48290:	b.lt	48338 <mpfr_rootn_ui@@Base+0x74c>  // b.tstop
   48294:	cbz	w23, 482d0 <mpfr_rootn_ui@@Base+0x6e4>
   48298:	orr	w8, w9, #0x8
   4829c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   482a0:	ldr	x1, [x0, #2640]
   482a4:	add	x0, x0, #0xa50
   482a8:	blr	x1
   482ac:	str	w8, [x24, x0]
   482b0:	b	482d0 <mpfr_rootn_ui@@Base+0x6e4>
   482b4:	cbz	x21, 4834c <mpfr_rootn_ui@@Base+0x760>
   482b8:	ldr	w3, [x22, #8]
   482bc:	mov	x0, x19
   482c0:	mov	x1, x22
   482c4:	mov	w2, w20
   482c8:	bl	c690 <mpfr_set4@plt>
   482cc:	mov	w23, w0
   482d0:	mov	w0, w23
   482d4:	ldp	x20, x19, [sp, #416]
   482d8:	ldp	x22, x21, [sp, #400]
   482dc:	ldp	x24, x23, [sp, #384]
   482e0:	ldp	x26, x25, [sp, #368]
   482e4:	ldp	x28, x27, [sp, #352]
   482e8:	ldp	x29, x30, [sp, #336]
   482ec:	add	sp, sp, #0x1b0
   482f0:	ret
   482f4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   482f8:	cmp	x8, x9
   482fc:	b.eq	4835c <mpfr_rootn_ui@@Base+0x770>  // b.none
   48300:	mov	x9, #0x2                   	// #2
   48304:	movk	x9, #0x8000, lsl #48
   48308:	cmp	x8, x9
   4830c:	b.eq	48368 <mpfr_rootn_ui@@Base+0x77c>  // b.none
   48310:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   48314:	str	x8, [x19, #16]
   48318:	tbz	w21, #0, 48394 <mpfr_rootn_ui@@Base+0x7a8>
   4831c:	ldr	w8, [x22, #8]
   48320:	cmp	w8, #0x1
   48324:	b.ge	48394 <mpfr_rootn_ui@@Base+0x7a8>  // b.tcont
   48328:	mov	w8, #0xffffffff            	// #-1
   4832c:	mov	w23, wzr
   48330:	str	w8, [x19, #8]
   48334:	b	482d0 <mpfr_rootn_ui@@Base+0x6e4>
   48338:	mov	x0, x19
   4833c:	mov	w1, w23
   48340:	mov	w2, w20
   48344:	bl	cb10 <mpfr_check_range@plt>
   48348:	b	482cc <mpfr_rootn_ui@@Base+0x6e0>
   4834c:	mov	x8, #0x2                   	// #2
   48350:	movk	x8, #0x8000, lsl #48
   48354:	str	x8, [x19, #16]
   48358:	b	4836c <mpfr_rootn_ui@@Base+0x780>
   4835c:	ldr	w8, [x22, #8]
   48360:	tbnz	w21, #0, 483a4 <mpfr_rootn_ui@@Base+0x7b8>
   48364:	tbz	w8, #31, 483a4 <mpfr_rootn_ui@@Base+0x7b8>
   48368:	str	x26, [x19, #16]
   4836c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48370:	ldr	x1, [x0, #2640]
   48374:	add	x0, x0, #0xa50
   48378:	blr	x1
   4837c:	mrs	x8, tpidr_el0
   48380:	ldr	w9, [x8, x0]
   48384:	mov	w23, wzr
   48388:	orr	w9, w9, #0x4
   4838c:	str	w9, [x8, x0]
   48390:	b	482d0 <mpfr_rootn_ui@@Base+0x6e4>
   48394:	mov	w8, #0x1                   	// #1
   48398:	mov	w23, wzr
   4839c:	str	w8, [x19, #8]
   483a0:	b	482d0 <mpfr_rootn_ui@@Base+0x6e4>
   483a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   483a8:	mov	w23, wzr
   483ac:	str	x9, [x19, #16]
   483b0:	str	w8, [x19, #8]
   483b4:	b	482d0 <mpfr_rootn_ui@@Base+0x6e4>
   483b8:	bl	c8e0 <mpfr_abort_prec_max@plt>

00000000000483bc <mpfr_root@@Base>:
   483bc:	stp	x29, x30, [sp, #-16]!
   483c0:	cmp	x2, #0x1
   483c4:	mov	x29, sp
   483c8:	b.ls	483e4 <mpfr_root@@Base+0x28>  // b.plast
   483cc:	ldr	x9, [x1, #16]
   483d0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   483d4:	cmp	x9, x8
   483d8:	b.eq	483fc <mpfr_root@@Base+0x40>  // b.none
   483dc:	ldp	x29, x30, [sp], #16
   483e0:	b	c6a0 <mpfr_rootn_ui@plt>
   483e4:	cbz	x2, 4840c <mpfr_root@@Base+0x50>
   483e8:	ldr	w8, [x1, #8]
   483ec:	mov	w2, w3
   483f0:	mov	w3, w8
   483f4:	ldp	x29, x30, [sp], #16
   483f8:	b	c690 <mpfr_set4@plt>
   483fc:	str	x8, [x0, #16]
   48400:	ldr	w8, [x1, #8]
   48404:	str	w8, [x0, #8]
   48408:	b	48438 <mpfr_root@@Base+0x7c>
   4840c:	mov	x8, #0x2                   	// #2
   48410:	movk	x8, #0x8000, lsl #48
   48414:	str	x8, [x0, #16]
   48418:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4841c:	ldr	x1, [x0, #2640]
   48420:	add	x0, x0, #0xa50
   48424:	blr	x1
   48428:	mrs	x8, tpidr_el0
   4842c:	ldr	w9, [x8, x0]
   48430:	orr	w9, w9, #0x4
   48434:	str	w9, [x8, x0]
   48438:	mov	w0, wzr
   4843c:	ldp	x29, x30, [sp], #16
   48440:	ret

0000000000048444 <mpfr_sec@@Base>:
   48444:	sub	sp, sp, #0x90
   48448:	stp	x29, x30, [sp, #48]
   4844c:	stp	x28, x27, [sp, #64]
   48450:	stp	x26, x25, [sp, #80]
   48454:	stp	x24, x23, [sp, #96]
   48458:	stp	x22, x21, [sp, #112]
   4845c:	stp	x20, x19, [sp, #128]
   48460:	ldr	x9, [x1, #16]
   48464:	mov	x8, #0x2                   	// #2
   48468:	movk	x8, #0x8000, lsl #48
   4846c:	add	x8, x8, #0x2
   48470:	mov	w19, w2
   48474:	cmp	x9, x8
   48478:	mov	x20, x0
   4847c:	add	x29, sp, #0x30
   48480:	b.lt	48754 <mpfr_sec@@Base+0x310>  // b.tstop
   48484:	mov	x21, x1
   48488:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4848c:	ldr	x1, [x0, #2640]
   48490:	add	x0, x0, #0xa50
   48494:	blr	x1
   48498:	mrs	x27, tpidr_el0
   4849c:	ldr	w28, [x27, x0]
   484a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   484a4:	ldr	x1, [x0, #2576]
   484a8:	add	x0, x0, #0xa10
   484ac:	blr	x1
   484b0:	ldr	x26, [x27, x0]
   484b4:	mov	x8, x0
   484b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   484bc:	ldr	x1, [x0, #2608]
   484c0:	add	x0, x0, #0xa30
   484c4:	blr	x1
   484c8:	ldr	x25, [x27, x0]
   484cc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   484d0:	str	x10, [x27, x8]
   484d4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   484d8:	str	x8, [x27, x0]
   484dc:	tbz	x9, #63, 484f4 <mpfr_sec@@Base+0xb0>
   484e0:	ldr	x8, [x20]
   484e4:	neg	x2, x9, lsl #1
   484e8:	add	x8, x8, #0x1
   484ec:	cmp	x2, x8
   484f0:	b.hi	487dc <mpfr_sec@@Base+0x398>  // b.pmore
   484f4:	ldr	x24, [x20]
   484f8:	subs	x22, x24, #0x1
   484fc:	b.eq	487a4 <mpfr_sec@@Base+0x360>  // b.none
   48500:	b.le	487ac <mpfr_sec@@Base+0x368>
   48504:	clz	x8, x22
   48508:	mov	w9, #0x40                  	// #64
   4850c:	sub	x8, x9, x8
   48510:	add	x8, x24, x8
   48514:	add	x22, x8, #0x3
   48518:	add	x0, sp, #0x10
   4851c:	mov	x1, x22
   48520:	bl	ca60 <mpfr_init2@plt>
   48524:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48528:	ldr	x1, [x0, #2640]
   4852c:	add	x0, x0, #0xa50
   48530:	blr	x1
   48534:	mov	x23, x0
   48538:	str	wzr, [x27, x0]
   4853c:	add	x0, sp, #0x10
   48540:	mov	w2, #0x1                   	// #1
   48544:	mov	x1, x21
   48548:	bl	c420 <mpfr_cos@plt>
   4854c:	ldrb	w8, [x27, x23]
   48550:	tbnz	w8, #1, 486f4 <mpfr_sec@@Base+0x2b0>
   48554:	cmp	w19, #0x0
   48558:	mov	w23, #0x40                  	// #64
   4855c:	cinc	x24, x24, eq  // eq = none
   48560:	add	x0, sp, #0x10
   48564:	add	x2, sp, #0x10
   48568:	mov	w1, #0x1                   	// #1
   4856c:	mov	w3, wzr
   48570:	bl	c2f0 <mpfr_ui_div@plt>
   48574:	ldr	x8, [sp, #32]
   48578:	mov	x9, #0x2                   	// #2
   4857c:	movk	x9, #0x8000, lsl #48
   48580:	add	x9, x9, #0x2
   48584:	cmp	x8, x9
   48588:	b.lt	485bc <mpfr_sec@@Base+0x178>  // b.tstop
   4858c:	ldr	x8, [sp, #16]
   48590:	ldr	x0, [sp, #40]
   48594:	sub	x2, x22, #0x2
   48598:	mov	x3, x24
   4859c:	sub	x9, x8, #0x1
   485a0:	add	x8, x8, #0x3e
   485a4:	cmp	x9, #0x0
   485a8:	csel	x8, x8, x9, lt  // lt = tstop
   485ac:	asr	x8, x8, #6
   485b0:	add	x1, x8, #0x1
   485b4:	bl	c370 <mpfr_round_p@plt>
   485b8:	cbnz	w0, 48644 <mpfr_sec@@Base+0x200>
   485bc:	mov	x8, #0x2                   	// #2
   485c0:	movk	x8, #0x8000, lsl #48
   485c4:	sub	x8, x8, x22
   485c8:	sub	x8, x8, #0x103
   485cc:	cmp	x23, x8
   485d0:	b.gt	48628 <mpfr_sec@@Base+0x1e4>
   485d4:	add	x22, x22, x23
   485d8:	cmp	x22, #0x0
   485dc:	cinc	x8, x22, lt  // lt = tstop
   485e0:	add	x0, sp, #0x10
   485e4:	mov	x1, x22
   485e8:	asr	x23, x8, #1
   485ec:	bl	bf20 <mpfr_set_prec@plt>
   485f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   485f4:	ldr	x1, [x0, #2640]
   485f8:	add	x0, x0, #0xa50
   485fc:	blr	x1
   48600:	str	x0, [sp, #8]
   48604:	str	wzr, [x27, x0]
   48608:	add	x0, sp, #0x10
   4860c:	mov	w2, #0x1                   	// #1
   48610:	mov	x1, x21
   48614:	bl	c420 <mpfr_cos@plt>
   48618:	ldr	x8, [sp, #8]
   4861c:	ldrb	w8, [x27, x8]
   48620:	tbz	w8, #1, 48560 <mpfr_sec@@Base+0x11c>
   48624:	b	486f4 <mpfr_sec@@Base+0x2b0>
   48628:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4862c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   48630:	mov	w1, #0x5f                  	// #95
   48634:	add	x0, x0, #0x7c7
   48638:	add	x2, x2, #0x287
   4863c:	bl	cb20 <mpfr_assert_fail@plt>
   48640:	b	485d4 <mpfr_sec@@Base+0x190>
   48644:	ldr	w3, [sp, #24]
   48648:	add	x1, sp, #0x10
   4864c:	mov	x0, x20
   48650:	mov	w2, w19
   48654:	bl	c690 <mpfr_set4@plt>
   48658:	mov	w22, w0
   4865c:	add	x0, sp, #0x10
   48660:	bl	c0b0 <mpfr_clear@plt>
   48664:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48668:	ldr	x1, [x0, #2640]
   4866c:	add	x0, x0, #0xa50
   48670:	blr	x1
   48674:	str	w28, [x27, x0]
   48678:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4867c:	ldr	x1, [x0, #2576]
   48680:	add	x0, x0, #0xa10
   48684:	blr	x1
   48688:	str	x26, [x27, x0]
   4868c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48690:	ldr	x1, [x0, #2608]
   48694:	add	x0, x0, #0xa30
   48698:	blr	x1
   4869c:	str	x25, [x27, x0]
   486a0:	ldr	x8, [x20, #16]
   486a4:	cmp	x8, x25
   486a8:	b.gt	487c8 <mpfr_sec@@Base+0x384>
   486ac:	cmp	x8, x26
   486b0:	b.lt	487c8 <mpfr_sec@@Base+0x384>  // b.tstop
   486b4:	cbz	w22, 486d0 <mpfr_sec@@Base+0x28c>
   486b8:	orr	w8, w28, #0x8
   486bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   486c0:	ldr	x1, [x0, #2640]
   486c4:	add	x0, x0, #0xa50
   486c8:	blr	x1
   486cc:	str	w8, [x27, x0]
   486d0:	mov	w0, w22
   486d4:	ldp	x20, x19, [sp, #128]
   486d8:	ldp	x22, x21, [sp, #112]
   486dc:	ldp	x24, x23, [sp, #96]
   486e0:	ldp	x26, x25, [sp, #80]
   486e4:	ldp	x28, x27, [sp, #64]
   486e8:	ldp	x29, x30, [sp, #48]
   486ec:	add	sp, sp, #0x90
   486f0:	ret
   486f4:	ldr	w21, [sp, #24]
   486f8:	add	x0, sp, #0x10
   486fc:	bl	c0b0 <mpfr_clear@plt>
   48700:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48704:	ldr	x1, [x0, #2640]
   48708:	add	x0, x0, #0xa50
   4870c:	blr	x1
   48710:	str	w28, [x27, x0]
   48714:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48718:	ldr	x1, [x0, #2576]
   4871c:	add	x0, x0, #0xa10
   48720:	blr	x1
   48724:	str	x26, [x27, x0]
   48728:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4872c:	ldr	x1, [x0, #2608]
   48730:	add	x0, x0, #0xa30
   48734:	blr	x1
   48738:	cmp	w19, #0x0
   4873c:	str	x25, [x27, x0]
   48740:	csinc	w1, w19, wzr, ne  // ne = any
   48744:	mov	x0, x20
   48748:	mov	w2, w21
   4874c:	bl	c3c0 <mpfr_underflow@plt>
   48750:	b	48814 <mpfr_sec@@Base+0x3d0>
   48754:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   48758:	cmp	x9, x8
   4875c:	b.eq	48770 <mpfr_sec@@Base+0x32c>  // b.none
   48760:	mov	x8, #0x2                   	// #2
   48764:	movk	x8, #0x8000, lsl #48
   48768:	cmp	x9, x8
   4876c:	b.ne	48800 <mpfr_sec@@Base+0x3bc>  // b.any
   48770:	mov	x8, #0x2                   	// #2
   48774:	movk	x8, #0x8000, lsl #48
   48778:	str	x8, [x20, #16]
   4877c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48780:	ldr	x1, [x0, #2640]
   48784:	add	x0, x0, #0xa50
   48788:	blr	x1
   4878c:	mrs	x8, tpidr_el0
   48790:	ldr	w9, [x8, x0]
   48794:	mov	w22, wzr
   48798:	orr	w9, w9, #0x4
   4879c:	str	w9, [x8, x0]
   487a0:	b	486d0 <mpfr_sec@@Base+0x28c>
   487a4:	mov	x8, xzr
   487a8:	b	48510 <mpfr_sec@@Base+0xcc>
   487ac:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   487b0:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   487b4:	add	x0, x0, #0x7c7
   487b8:	add	x2, x2, #0x238
   487bc:	mov	w1, #0x43                  	// #67
   487c0:	bl	cb20 <mpfr_assert_fail@plt>
   487c4:	b	48504 <mpfr_sec@@Base+0xc0>
   487c8:	mov	x0, x20
   487cc:	mov	w1, w22
   487d0:	mov	w2, w19
   487d4:	bl	cb10 <mpfr_check_range@plt>
   487d8:	b	48814 <mpfr_sec@@Base+0x3d0>
   487dc:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   487e0:	ldr	x1, [x1, #3944]
   487e4:	mov	w3, #0x1                   	// #1
   487e8:	mov	x0, x20
   487ec:	mov	w4, w19
   487f0:	bl	c530 <mpfr_round_near_x@plt>
   487f4:	mov	w22, w0
   487f8:	cbnz	w0, 48664 <mpfr_sec@@Base+0x220>
   487fc:	b	484f4 <mpfr_sec@@Base+0xb0>
   48800:	mov	w1, #0x1                   	// #1
   48804:	mov	x0, x20
   48808:	mov	x2, xzr
   4880c:	mov	w3, w19
   48810:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   48814:	mov	w22, w0
   48818:	b	486d0 <mpfr_sec@@Base+0x28c>

000000000004881c <mpfr_csc@@Base>:
   4881c:	sub	sp, sp, #0x90
   48820:	stp	x29, x30, [sp, #48]
   48824:	stp	x28, x27, [sp, #64]
   48828:	stp	x26, x25, [sp, #80]
   4882c:	stp	x24, x23, [sp, #96]
   48830:	stp	x22, x21, [sp, #112]
   48834:	stp	x20, x19, [sp, #128]
   48838:	ldr	x9, [x1, #16]
   4883c:	mov	x10, #0x2                   	// #2
   48840:	movk	x10, #0x8000, lsl #48
   48844:	add	x8, x10, #0x2
   48848:	mov	x21, x1
   4884c:	cmp	x9, x8
   48850:	mov	x19, x0
   48854:	add	x29, sp, #0x30
   48858:	b.lt	48b68 <mpfr_csc@@Base+0x34c>  // b.tstop
   4885c:	mov	w20, w2
   48860:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48864:	ldr	x1, [x0, #2640]
   48868:	add	x0, x0, #0xa50
   4886c:	blr	x1
   48870:	mrs	x27, tpidr_el0
   48874:	ldr	w28, [x27, x0]
   48878:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4887c:	ldr	x1, [x0, #2576]
   48880:	add	x0, x0, #0xa10
   48884:	blr	x1
   48888:	ldr	x26, [x27, x0]
   4888c:	mov	x8, x0
   48890:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48894:	ldr	x1, [x0, #2608]
   48898:	add	x0, x0, #0xa30
   4889c:	blr	x1
   488a0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   488a4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   488a8:	ldr	x25, [x27, x0]
   488ac:	str	x10, [x27, x8]
   488b0:	str	x11, [x27, x0]
   488b4:	ldr	x8, [x21]
   488b8:	ldr	x24, [x19]
   488bc:	cmp	x8, x24
   488c0:	csel	x8, x8, x24, gt
   488c4:	neg	x8, x8, lsl #1
   488c8:	cmp	x9, x8
   488cc:	b.le	48a1c <mpfr_csc@@Base+0x200>
   488d0:	subs	x22, x24, #0x1
   488d4:	b.eq	48c28 <mpfr_csc@@Base+0x40c>  // b.none
   488d8:	b.le	48c30 <mpfr_csc@@Base+0x414>
   488dc:	clz	x8, x22
   488e0:	mov	w9, #0x40                  	// #64
   488e4:	sub	x8, x9, x8
   488e8:	add	x8, x24, x8
   488ec:	add	x22, x8, #0x3
   488f0:	add	x0, sp, #0x10
   488f4:	mov	x1, x22
   488f8:	bl	ca60 <mpfr_init2@plt>
   488fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48900:	ldr	x1, [x0, #2640]
   48904:	add	x0, x0, #0xa50
   48908:	blr	x1
   4890c:	mov	x23, x0
   48910:	str	wzr, [x27, x0]
   48914:	add	x0, sp, #0x10
   48918:	mov	w2, #0x1                   	// #1
   4891c:	mov	x1, x21
   48920:	bl	c440 <mpfr_sin@plt>
   48924:	ldrb	w8, [x27, x23]
   48928:	tbnz	w8, #1, 48bc4 <mpfr_csc@@Base+0x3a8>
   4892c:	cmp	w20, #0x0
   48930:	mov	w23, #0x40                  	// #64
   48934:	cinc	x24, x24, eq  // eq = none
   48938:	add	x0, sp, #0x10
   4893c:	add	x2, sp, #0x10
   48940:	mov	w1, #0x1                   	// #1
   48944:	mov	w3, wzr
   48948:	bl	c2f0 <mpfr_ui_div@plt>
   4894c:	ldr	x8, [sp, #32]
   48950:	mov	x9, #0x2                   	// #2
   48954:	movk	x9, #0x8000, lsl #48
   48958:	add	x9, x9, #0x2
   4895c:	cmp	x8, x9
   48960:	b.lt	48994 <mpfr_csc@@Base+0x178>  // b.tstop
   48964:	ldr	x8, [sp, #16]
   48968:	ldr	x0, [sp, #40]
   4896c:	sub	x2, x22, #0x2
   48970:	mov	x3, x24
   48974:	sub	x9, x8, #0x1
   48978:	add	x8, x8, #0x3e
   4897c:	cmp	x9, #0x0
   48980:	csel	x8, x8, x9, lt  // lt = tstop
   48984:	asr	x8, x8, #6
   48988:	add	x1, x8, #0x1
   4898c:	bl	c370 <mpfr_round_p@plt>
   48990:	cbnz	w0, 48a58 <mpfr_csc@@Base+0x23c>
   48994:	mov	x8, #0x2                   	// #2
   48998:	movk	x8, #0x8000, lsl #48
   4899c:	sub	x8, x8, x22
   489a0:	sub	x8, x8, #0x103
   489a4:	cmp	x23, x8
   489a8:	b.gt	48a00 <mpfr_csc@@Base+0x1e4>
   489ac:	add	x22, x22, x23
   489b0:	cmp	x22, #0x0
   489b4:	cinc	x8, x22, lt  // lt = tstop
   489b8:	add	x0, sp, #0x10
   489bc:	mov	x1, x22
   489c0:	asr	x23, x8, #1
   489c4:	bl	bf20 <mpfr_set_prec@plt>
   489c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   489cc:	ldr	x1, [x0, #2640]
   489d0:	add	x0, x0, #0xa50
   489d4:	blr	x1
   489d8:	str	x0, [sp, #8]
   489dc:	str	wzr, [x27, x0]
   489e0:	add	x0, sp, #0x10
   489e4:	mov	w2, #0x1                   	// #1
   489e8:	mov	x1, x21
   489ec:	bl	c440 <mpfr_sin@plt>
   489f0:	ldr	x8, [sp, #8]
   489f4:	ldrb	w8, [x27, x8]
   489f8:	tbz	w8, #1, 48938 <mpfr_csc@@Base+0x11c>
   489fc:	b	48bc4 <mpfr_csc@@Base+0x3a8>
   48a00:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   48a04:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   48a08:	mov	w1, #0x5f                  	// #95
   48a0c:	add	x0, x0, #0x7c7
   48a10:	add	x2, x2, #0x287
   48a14:	bl	cb20 <mpfr_assert_fail@plt>
   48a18:	b	489ac <mpfr_csc@@Base+0x190>
   48a1c:	ldr	w22, [x21, #8]
   48a20:	mov	w1, #0x1                   	// #1
   48a24:	mov	x0, x19
   48a28:	mov	x2, x21
   48a2c:	mov	w3, w20
   48a30:	bl	c2f0 <mpfr_ui_div@plt>
   48a34:	cbz	w0, 48b08 <mpfr_csc@@Base+0x2ec>
   48a38:	mov	w21, w0
   48a3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48a40:	ldr	x1, [x0, #2640]
   48a44:	add	x0, x0, #0xa50
   48a48:	blr	x1
   48a4c:	ldr	w8, [x27, x0]
   48a50:	orr	w28, w8, w28
   48a54:	b	48a78 <mpfr_csc@@Base+0x25c>
   48a58:	ldr	w3, [sp, #24]
   48a5c:	add	x1, sp, #0x10
   48a60:	mov	x0, x19
   48a64:	mov	w2, w20
   48a68:	bl	c690 <mpfr_set4@plt>
   48a6c:	mov	w21, w0
   48a70:	add	x0, sp, #0x10
   48a74:	bl	c0b0 <mpfr_clear@plt>
   48a78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48a7c:	ldr	x1, [x0, #2640]
   48a80:	add	x0, x0, #0xa50
   48a84:	blr	x1
   48a88:	str	w28, [x27, x0]
   48a8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48a90:	ldr	x1, [x0, #2576]
   48a94:	add	x0, x0, #0xa10
   48a98:	blr	x1
   48a9c:	str	x26, [x27, x0]
   48aa0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48aa4:	ldr	x1, [x0, #2608]
   48aa8:	add	x0, x0, #0xa30
   48aac:	blr	x1
   48ab0:	str	x25, [x27, x0]
   48ab4:	ldr	x8, [x19, #16]
   48ab8:	cmp	x8, x25
   48abc:	b.gt	48bb0 <mpfr_csc@@Base+0x394>
   48ac0:	cmp	x8, x26
   48ac4:	b.lt	48bb0 <mpfr_csc@@Base+0x394>  // b.tstop
   48ac8:	cbz	w21, 48ae4 <mpfr_csc@@Base+0x2c8>
   48acc:	orr	w8, w28, #0x8
   48ad0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48ad4:	ldr	x1, [x0, #2640]
   48ad8:	add	x0, x0, #0xa50
   48adc:	blr	x1
   48ae0:	str	w8, [x27, x0]
   48ae4:	mov	w0, w21
   48ae8:	ldp	x20, x19, [sp, #128]
   48aec:	ldp	x22, x21, [sp, #112]
   48af0:	ldp	x24, x23, [sp, #96]
   48af4:	ldp	x26, x25, [sp, #80]
   48af8:	ldp	x28, x27, [sp, #64]
   48afc:	ldp	x29, x30, [sp, #48]
   48b00:	add	sp, sp, #0x90
   48b04:	ret
   48b08:	cmp	w22, #0x0
   48b0c:	mov	w8, #0x2                   	// #2
   48b10:	cinc	w8, w8, le
   48b14:	cmp	w20, #0x4
   48b18:	csel	w20, w8, w20, eq  // eq = none
   48b1c:	cmp	w20, #0x3
   48b20:	b.eq	48b48 <mpfr_csc@@Base+0x32c>  // b.none
   48b24:	cmp	w20, #0x2
   48b28:	b.ne	48b60 <mpfr_csc@@Base+0x344>  // b.any
   48b2c:	cmp	w22, #0x1
   48b30:	b.lt	48b3c <mpfr_csc@@Base+0x320>  // b.tstop
   48b34:	mov	x0, x19
   48b38:	bl	c160 <mpfr_nextabove@plt>
   48b3c:	mov	w20, #0x2                   	// #2
   48b40:	mov	w21, #0x1                   	// #1
   48b44:	b	48a3c <mpfr_csc@@Base+0x220>
   48b48:	tbz	w22, #31, 48b54 <mpfr_csc@@Base+0x338>
   48b4c:	mov	x0, x19
   48b50:	bl	be20 <mpfr_nextbelow@plt>
   48b54:	mov	w20, #0x3                   	// #3
   48b58:	mov	w21, #0xffffffff            	// #-1
   48b5c:	b	48a3c <mpfr_csc@@Base+0x220>
   48b60:	neg	w21, w22
   48b64:	b	48a3c <mpfr_csc@@Base+0x220>
   48b68:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   48b6c:	cmp	x9, x8
   48b70:	b.eq	48b84 <mpfr_csc@@Base+0x368>  // b.none
   48b74:	mov	x8, #0x2                   	// #2
   48b78:	movk	x8, #0x8000, lsl #48
   48b7c:	cmp	x9, x8
   48b80:	b.ne	48c4c <mpfr_csc@@Base+0x430>  // b.any
   48b84:	str	x10, [x19, #16]
   48b88:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48b8c:	ldr	x1, [x0, #2640]
   48b90:	add	x0, x0, #0xa50
   48b94:	blr	x1
   48b98:	mrs	x8, tpidr_el0
   48b9c:	ldr	w9, [x8, x0]
   48ba0:	mov	w21, wzr
   48ba4:	orr	w9, w9, #0x4
   48ba8:	str	w9, [x8, x0]
   48bac:	b	48ae4 <mpfr_csc@@Base+0x2c8>
   48bb0:	mov	x0, x19
   48bb4:	mov	w1, w21
   48bb8:	mov	w2, w20
   48bbc:	bl	cb10 <mpfr_check_range@plt>
   48bc0:	b	48c20 <mpfr_csc@@Base+0x404>
   48bc4:	ldr	w21, [sp, #24]
   48bc8:	add	x0, sp, #0x10
   48bcc:	bl	c0b0 <mpfr_clear@plt>
   48bd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48bd4:	ldr	x1, [x0, #2640]
   48bd8:	add	x0, x0, #0xa50
   48bdc:	blr	x1
   48be0:	str	w28, [x27, x0]
   48be4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48be8:	ldr	x1, [x0, #2576]
   48bec:	add	x0, x0, #0xa10
   48bf0:	blr	x1
   48bf4:	str	x26, [x27, x0]
   48bf8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48bfc:	ldr	x1, [x0, #2608]
   48c00:	add	x0, x0, #0xa30
   48c04:	blr	x1
   48c08:	cmp	w20, #0x0
   48c0c:	str	x25, [x27, x0]
   48c10:	csinc	w1, w20, wzr, ne  // ne = any
   48c14:	mov	x0, x19
   48c18:	mov	w2, w21
   48c1c:	bl	c3c0 <mpfr_underflow@plt>
   48c20:	mov	w21, w0
   48c24:	b	48ae4 <mpfr_csc@@Base+0x2c8>
   48c28:	mov	x8, xzr
   48c2c:	b	488e8 <mpfr_csc@@Base+0xcc>
   48c30:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   48c34:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   48c38:	add	x0, x0, #0x7c7
   48c3c:	add	x2, x2, #0x238
   48c40:	mov	w1, #0x43                  	// #67
   48c44:	bl	cb20 <mpfr_assert_fail@plt>
   48c48:	b	488dc <mpfr_csc@@Base+0xc0>
   48c4c:	ldr	w8, [x21, #8]
   48c50:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   48c54:	str	x9, [x19, #16]
   48c58:	str	w8, [x19, #8]
   48c5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48c60:	ldr	x1, [x0, #2640]
   48c64:	add	x0, x0, #0xa50
   48c68:	blr	x1
   48c6c:	mrs	x8, tpidr_el0
   48c70:	ldr	w9, [x8, x0]
   48c74:	mov	w21, wzr
   48c78:	orr	w9, w9, #0x20
   48c7c:	str	w9, [x8, x0]
   48c80:	b	48ae4 <mpfr_csc@@Base+0x2c8>

0000000000048c84 <mpfr_cot@@Base>:
   48c84:	sub	sp, sp, #0x90
   48c88:	stp	x29, x30, [sp, #48]
   48c8c:	stp	x28, x27, [sp, #64]
   48c90:	stp	x26, x25, [sp, #80]
   48c94:	stp	x24, x23, [sp, #96]
   48c98:	stp	x22, x21, [sp, #112]
   48c9c:	stp	x20, x19, [sp, #128]
   48ca0:	ldr	x9, [x1, #16]
   48ca4:	mov	x10, #0x2                   	// #2
   48ca8:	movk	x10, #0x8000, lsl #48
   48cac:	add	x8, x10, #0x2
   48cb0:	mov	x21, x1
   48cb4:	cmp	x9, x8
   48cb8:	mov	x19, x0
   48cbc:	add	x29, sp, #0x30
   48cc0:	b.lt	49040 <mpfr_cot@@Base+0x3bc>  // b.tstop
   48cc4:	mov	w20, w2
   48cc8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48ccc:	ldr	x1, [x0, #2640]
   48cd0:	add	x0, x0, #0xa50
   48cd4:	blr	x1
   48cd8:	mrs	x27, tpidr_el0
   48cdc:	ldr	w28, [x27, x0]
   48ce0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48ce4:	ldr	x1, [x0, #2576]
   48ce8:	add	x0, x0, #0xa10
   48cec:	blr	x1
   48cf0:	ldr	x26, [x27, x0]
   48cf4:	mov	x8, x0
   48cf8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48cfc:	ldr	x1, [x0, #2608]
   48d00:	add	x0, x0, #0xa30
   48d04:	blr	x1
   48d08:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   48d0c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   48d10:	ldr	x25, [x27, x0]
   48d14:	str	x10, [x27, x8]
   48d18:	str	x11, [x27, x0]
   48d1c:	ldr	x8, [x21]
   48d20:	ldr	x24, [x19]
   48d24:	cmp	x8, x24
   48d28:	csel	x8, x8, x24, gt
   48d2c:	neg	x8, x8, lsl #1
   48d30:	cmp	x9, x8
   48d34:	b.ge	48d84 <mpfr_cot@@Base+0x100>  // b.tcont
   48d38:	ldrsw	x22, [x21, #8]
   48d3c:	mov	x8, #0x2                   	// #2
   48d40:	movk	x8, #0xc000, lsl #48
   48d44:	cmp	x9, x8
   48d48:	b.ne	48ef4 <mpfr_cot@@Base+0x270>  // b.any
   48d4c:	mov	x0, x21
   48d50:	bl	bf50 <mpfr_powerof2_raw@plt>
   48d54:	cbz	w0, 48ef4 <mpfr_cot@@Base+0x270>
   48d58:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48d5c:	ldr	x1, [x0, #2608]
   48d60:	add	x0, x0, #0xa30
   48d64:	blr	x1
   48d68:	ldr	x2, [x27, x0]
   48d6c:	mov	x0, x19
   48d70:	mov	x1, x22
   48d74:	mov	w3, wzr
   48d78:	bl	bae0 <mpfr_set_si_2exp@plt>
   48d7c:	mov	w23, #0x1                   	// #1
   48d80:	b	48f18 <mpfr_cot@@Base+0x294>
   48d84:	subs	x22, x24, #0x1
   48d88:	b.eq	49100 <mpfr_cot@@Base+0x47c>  // b.none
   48d8c:	b.le	49108 <mpfr_cot@@Base+0x484>
   48d90:	clz	x8, x22
   48d94:	mov	w9, #0x40                  	// #64
   48d98:	sub	x8, x9, x8
   48d9c:	add	x8, x24, x8
   48da0:	add	x22, x8, #0x3
   48da4:	add	x0, sp, #0x10
   48da8:	mov	x1, x22
   48dac:	bl	ca60 <mpfr_init2@plt>
   48db0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48db4:	ldr	x1, [x0, #2640]
   48db8:	add	x0, x0, #0xa50
   48dbc:	blr	x1
   48dc0:	mov	x23, x0
   48dc4:	str	wzr, [x27, x0]
   48dc8:	add	x0, sp, #0x10
   48dcc:	mov	w2, #0x1                   	// #1
   48dd0:	mov	x1, x21
   48dd4:	bl	bc30 <mpfr_tan@plt>
   48dd8:	ldrb	w8, [x27, x23]
   48ddc:	tbnz	w8, #1, 4909c <mpfr_cot@@Base+0x418>
   48de0:	cmp	w20, #0x0
   48de4:	mov	w23, #0x40                  	// #64
   48de8:	cinc	x24, x24, eq  // eq = none
   48dec:	add	x0, sp, #0x10
   48df0:	add	x2, sp, #0x10
   48df4:	mov	w1, #0x1                   	// #1
   48df8:	mov	w3, wzr
   48dfc:	bl	c2f0 <mpfr_ui_div@plt>
   48e00:	ldr	x8, [sp, #32]
   48e04:	mov	x9, #0x2                   	// #2
   48e08:	movk	x9, #0x8000, lsl #48
   48e0c:	add	x9, x9, #0x2
   48e10:	cmp	x8, x9
   48e14:	b.lt	48e48 <mpfr_cot@@Base+0x1c4>  // b.tstop
   48e18:	ldr	x8, [sp, #16]
   48e1c:	ldr	x0, [sp, #40]
   48e20:	sub	x2, x22, #0x2
   48e24:	mov	x3, x24
   48e28:	sub	x9, x8, #0x1
   48e2c:	add	x8, x8, #0x3e
   48e30:	cmp	x9, #0x0
   48e34:	csel	x8, x8, x9, lt  // lt = tstop
   48e38:	asr	x8, x8, #6
   48e3c:	add	x1, x8, #0x1
   48e40:	bl	c370 <mpfr_round_p@plt>
   48e44:	cbnz	w0, 48ed0 <mpfr_cot@@Base+0x24c>
   48e48:	mov	x8, #0x2                   	// #2
   48e4c:	movk	x8, #0x8000, lsl #48
   48e50:	sub	x8, x8, x22
   48e54:	sub	x8, x8, #0x103
   48e58:	cmp	x23, x8
   48e5c:	b.gt	48eb4 <mpfr_cot@@Base+0x230>
   48e60:	add	x22, x22, x23
   48e64:	cmp	x22, #0x0
   48e68:	cinc	x8, x22, lt  // lt = tstop
   48e6c:	add	x0, sp, #0x10
   48e70:	mov	x1, x22
   48e74:	asr	x23, x8, #1
   48e78:	bl	bf20 <mpfr_set_prec@plt>
   48e7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48e80:	ldr	x1, [x0, #2640]
   48e84:	add	x0, x0, #0xa50
   48e88:	blr	x1
   48e8c:	str	x0, [sp, #8]
   48e90:	str	wzr, [x27, x0]
   48e94:	add	x0, sp, #0x10
   48e98:	mov	w2, #0x1                   	// #1
   48e9c:	mov	x1, x21
   48ea0:	bl	bc30 <mpfr_tan@plt>
   48ea4:	ldr	x8, [sp, #8]
   48ea8:	ldrb	w8, [x27, x8]
   48eac:	tbz	w8, #1, 48dec <mpfr_cot@@Base+0x168>
   48eb0:	b	4909c <mpfr_cot@@Base+0x418>
   48eb4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   48eb8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   48ebc:	mov	w1, #0x5f                  	// #95
   48ec0:	add	x0, x0, #0x7c7
   48ec4:	add	x2, x2, #0x287
   48ec8:	bl	cb20 <mpfr_assert_fail@plt>
   48ecc:	b	48e60 <mpfr_cot@@Base+0x1dc>
   48ed0:	ldr	w3, [sp, #24]
   48ed4:	add	x1, sp, #0x10
   48ed8:	mov	x0, x19
   48edc:	mov	w2, w20
   48ee0:	bl	c690 <mpfr_set4@plt>
   48ee4:	mov	w21, w0
   48ee8:	add	x0, sp, #0x10
   48eec:	bl	c0b0 <mpfr_clear@plt>
   48ef0:	b	48fb0 <mpfr_cot@@Base+0x32c>
   48ef4:	mov	w1, #0x1                   	// #1
   48ef8:	mov	x0, x19
   48efc:	mov	x2, x21
   48f00:	mov	w3, w20
   48f04:	bl	c2f0 <mpfr_ui_div@plt>
   48f08:	cbz	w0, 48f14 <mpfr_cot@@Base+0x290>
   48f0c:	mov	w21, w0
   48f10:	b	48f98 <mpfr_cot@@Base+0x314>
   48f14:	mov	w23, wzr
   48f18:	cmp	w22, #0x0
   48f1c:	mov	w8, #0x2                   	// #2
   48f20:	cinc	w8, w8, le
   48f24:	cmp	w20, #0x4
   48f28:	csel	w20, w8, w20, eq  // eq = none
   48f2c:	cmp	w20, #0x2
   48f30:	b.ne	48f40 <mpfr_cot@@Base+0x2bc>  // b.any
   48f34:	tbnz	w22, #31, 48f4c <mpfr_cot@@Base+0x2c8>
   48f38:	mov	w21, #0x1                   	// #1
   48f3c:	b	48f80 <mpfr_cot@@Base+0x2fc>
   48f40:	tbz	w22, #31, 48f5c <mpfr_cot@@Base+0x2d8>
   48f44:	cmp	w20, #0x1
   48f48:	b.ne	48f5c <mpfr_cot@@Base+0x2d8>  // b.any
   48f4c:	mov	x0, x19
   48f50:	bl	c160 <mpfr_nextabove@plt>
   48f54:	mov	w21, #0x1                   	// #1
   48f58:	b	48f80 <mpfr_cot@@Base+0x2fc>
   48f5c:	orr	w8, w20, #0x2
   48f60:	cmp	w8, #0x3
   48f64:	csinv	w21, w22, wzr, ne  // ne = any
   48f68:	b.ne	48f80 <mpfr_cot@@Base+0x2fc>  // b.any
   48f6c:	cmp	w22, #0x1
   48f70:	b.lt	48f80 <mpfr_cot@@Base+0x2fc>  // b.tstop
   48f74:	mov	x0, x19
   48f78:	bl	be20 <mpfr_nextbelow@plt>
   48f7c:	mov	w21, #0xffffffff            	// #-1
   48f80:	cbz	w23, 48f98 <mpfr_cot@@Base+0x314>
   48f84:	mov	w2, #0x1                   	// #1
   48f88:	mov	x0, x19
   48f8c:	mov	x1, x19
   48f90:	mov	w3, w20
   48f94:	bl	c2c0 <mpfr_mul_2ui@plt>
   48f98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48f9c:	ldr	x1, [x0, #2640]
   48fa0:	add	x0, x0, #0xa50
   48fa4:	blr	x1
   48fa8:	ldr	w8, [x27, x0]
   48fac:	orr	w28, w8, w28
   48fb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48fb4:	ldr	x1, [x0, #2640]
   48fb8:	add	x0, x0, #0xa50
   48fbc:	blr	x1
   48fc0:	str	w28, [x27, x0]
   48fc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48fc8:	ldr	x1, [x0, #2576]
   48fcc:	add	x0, x0, #0xa10
   48fd0:	blr	x1
   48fd4:	str	x26, [x27, x0]
   48fd8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   48fdc:	ldr	x1, [x0, #2608]
   48fe0:	add	x0, x0, #0xa30
   48fe4:	blr	x1
   48fe8:	str	x25, [x27, x0]
   48fec:	ldr	x8, [x19, #16]
   48ff0:	cmp	x8, x25
   48ff4:	b.gt	49088 <mpfr_cot@@Base+0x404>
   48ff8:	cmp	x8, x26
   48ffc:	b.lt	49088 <mpfr_cot@@Base+0x404>  // b.tstop
   49000:	cbz	w21, 4901c <mpfr_cot@@Base+0x398>
   49004:	orr	w8, w28, #0x8
   49008:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4900c:	ldr	x1, [x0, #2640]
   49010:	add	x0, x0, #0xa50
   49014:	blr	x1
   49018:	str	w8, [x27, x0]
   4901c:	mov	w0, w21
   49020:	ldp	x20, x19, [sp, #128]
   49024:	ldp	x22, x21, [sp, #112]
   49028:	ldp	x24, x23, [sp, #96]
   4902c:	ldp	x26, x25, [sp, #80]
   49030:	ldp	x28, x27, [sp, #64]
   49034:	ldp	x29, x30, [sp, #48]
   49038:	add	sp, sp, #0x90
   4903c:	ret
   49040:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   49044:	cmp	x9, x8
   49048:	b.eq	4905c <mpfr_cot@@Base+0x3d8>  // b.none
   4904c:	mov	x8, #0x2                   	// #2
   49050:	movk	x8, #0x8000, lsl #48
   49054:	cmp	x9, x8
   49058:	b.ne	49124 <mpfr_cot@@Base+0x4a0>  // b.any
   4905c:	str	x10, [x19, #16]
   49060:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49064:	ldr	x1, [x0, #2640]
   49068:	add	x0, x0, #0xa50
   4906c:	blr	x1
   49070:	mrs	x8, tpidr_el0
   49074:	ldr	w9, [x8, x0]
   49078:	mov	w21, wzr
   4907c:	orr	w9, w9, #0x4
   49080:	str	w9, [x8, x0]
   49084:	b	4901c <mpfr_cot@@Base+0x398>
   49088:	mov	x0, x19
   4908c:	mov	w1, w21
   49090:	mov	w2, w20
   49094:	bl	cb10 <mpfr_check_range@plt>
   49098:	b	490f8 <mpfr_cot@@Base+0x474>
   4909c:	ldr	w21, [sp, #24]
   490a0:	add	x0, sp, #0x10
   490a4:	bl	c0b0 <mpfr_clear@plt>
   490a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   490ac:	ldr	x1, [x0, #2640]
   490b0:	add	x0, x0, #0xa50
   490b4:	blr	x1
   490b8:	str	w28, [x27, x0]
   490bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   490c0:	ldr	x1, [x0, #2576]
   490c4:	add	x0, x0, #0xa10
   490c8:	blr	x1
   490cc:	str	x26, [x27, x0]
   490d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   490d4:	ldr	x1, [x0, #2608]
   490d8:	add	x0, x0, #0xa30
   490dc:	blr	x1
   490e0:	cmp	w20, #0x0
   490e4:	str	x25, [x27, x0]
   490e8:	csinc	w1, w20, wzr, ne  // ne = any
   490ec:	mov	x0, x19
   490f0:	mov	w2, w21
   490f4:	bl	c3c0 <mpfr_underflow@plt>
   490f8:	mov	w21, w0
   490fc:	b	4901c <mpfr_cot@@Base+0x398>
   49100:	mov	x8, xzr
   49104:	b	48d9c <mpfr_cot@@Base+0x118>
   49108:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4910c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   49110:	add	x0, x0, #0x7c7
   49114:	add	x2, x2, #0x238
   49118:	mov	w1, #0x43                  	// #67
   4911c:	bl	cb20 <mpfr_assert_fail@plt>
   49120:	b	48d90 <mpfr_cot@@Base+0x10c>
   49124:	ldr	w8, [x21, #8]
   49128:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4912c:	str	x9, [x19, #16]
   49130:	str	w8, [x19, #8]
   49134:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49138:	ldr	x1, [x0, #2640]
   4913c:	add	x0, x0, #0xa50
   49140:	blr	x1
   49144:	mrs	x8, tpidr_el0
   49148:	ldr	w9, [x8, x0]
   4914c:	mov	w21, wzr
   49150:	orr	w9, w9, #0x20
   49154:	str	w9, [x8, x0]
   49158:	b	4901c <mpfr_cot@@Base+0x398>

000000000004915c <mpfr_eint@@Base>:
   4915c:	str	d10, [sp, #-128]!
   49160:	stp	d9, d8, [sp, #16]
   49164:	stp	x29, x30, [sp, #32]
   49168:	stp	x28, x27, [sp, #48]
   4916c:	stp	x26, x25, [sp, #64]
   49170:	stp	x24, x23, [sp, #80]
   49174:	stp	x22, x21, [sp, #96]
   49178:	stp	x20, x19, [sp, #112]
   4917c:	mov	x29, sp
   49180:	sub	sp, sp, #0x1e0
   49184:	ldr	x8, [x1, #16]
   49188:	mov	x10, #0x4                   	// #4
   4918c:	movk	x10, #0x8000, lsl #48
   49190:	mov	x21, x1
   49194:	cmp	x8, x10
   49198:	mov	x19, x0
   4919c:	b.lt	49cb8 <mpfr_eint@@Base+0xb5c>  // b.tstop
   491a0:	ldr	x9, [x21]
   491a4:	mov	w10, #0x1                   	// #1
   491a8:	mov	w26, w2
   491ac:	str	x9, [sp, #72]
   491b0:	ldr	x9, [x21, #24]
   491b4:	str	w10, [sp, #80]
   491b8:	stp	x8, x9, [sp, #88]
   491bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   491c0:	ldr	x1, [x0, #2640]
   491c4:	add	x0, x0, #0xa50
   491c8:	blr	x1
   491cc:	mrs	x20, tpidr_el0
   491d0:	ldr	w25, [x20, x0]
   491d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   491d8:	ldr	x1, [x0, #2576]
   491dc:	add	x0, x0, #0xa10
   491e0:	blr	x1
   491e4:	ldr	x28, [x20, x0]
   491e8:	mov	x8, x0
   491ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   491f0:	ldr	x1, [x0, #2608]
   491f4:	add	x0, x0, #0xa30
   491f8:	blr	x1
   491fc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   49200:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   49204:	ldr	x24, [x20, x0]
   49208:	str	x9, [x20, x8]
   4920c:	str	x10, [x20, x0]
   49210:	ldr	x22, [x19]
   49214:	cmp	x22, #0x1
   49218:	b.eq	49d04 <mpfr_eint@@Base+0xba8>  // b.none
   4921c:	mov	x8, x22
   49220:	b.le	49d0c <mpfr_eint@@Base+0xbb0>
   49224:	sub	x8, x8, #0x1
   49228:	clz	x8, x8
   4922c:	mov	w9, #0x80                  	// #128
   49230:	sub	w8, w9, w8, lsl #1
   49234:	sxtw	x23, w8
   49238:	add	x0, sp, #0x88
   4923c:	mov	w1, #0x40                  	// #64
   49240:	bl	ca60 <mpfr_init2@plt>
   49244:	add	x0, sp, #0x68
   49248:	mov	w1, #0x40                  	// #64
   4924c:	bl	ca60 <mpfr_init2@plt>
   49250:	ldr	w8, [x21, #8]
   49254:	cmp	w8, #0x1
   49258:	b.lt	49320 <mpfr_eint@@Base+0x1c4>  // b.tstop
   4925c:	add	x0, sp, #0x88
   49260:	mov	w2, #0x2                   	// #2
   49264:	mov	x1, x21
   49268:	bl	c0d0 <mpfr_log@plt>
   4926c:	add	x0, sp, #0x68
   49270:	add	x2, sp, #0x88
   49274:	mov	w3, #0x3                   	// #3
   49278:	mov	x1, x21
   4927c:	bl	bbc0 <mpfr_sub@plt>
   49280:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   49284:	ldr	x2, [x2, #4048]
   49288:	add	x0, sp, #0x68
   4928c:	add	x1, sp, #0x68
   49290:	mov	w3, #0x3                   	// #3
   49294:	bl	c610 <mpfr_div@plt>
   49298:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4929c:	ldr	x1, [x0, #2608]
   492a0:	add	x0, x0, #0xa30
   492a4:	blr	x1
   492a8:	ldr	x1, [x20, x0]
   492ac:	add	x0, sp, #0x68
   492b0:	mov	x2, xzr
   492b4:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   492b8:	tbnz	w0, #31, 493a8 <mpfr_eint@@Base+0x24c>
   492bc:	add	x0, sp, #0x88
   492c0:	bl	c0b0 <mpfr_clear@plt>
   492c4:	add	x0, sp, #0x68
   492c8:	bl	c0b0 <mpfr_clear@plt>
   492cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   492d0:	ldr	x1, [x0, #2640]
   492d4:	add	x0, x0, #0xa50
   492d8:	blr	x1
   492dc:	str	w25, [x20, x0]
   492e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   492e4:	ldr	x1, [x0, #2576]
   492e8:	add	x0, x0, #0xa10
   492ec:	blr	x1
   492f0:	str	x28, [x20, x0]
   492f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   492f8:	ldr	x1, [x0, #2608]
   492fc:	add	x0, x0, #0xa30
   49300:	blr	x1
   49304:	str	x24, [x20, x0]
   49308:	mov	w2, #0x1                   	// #1
   4930c:	mov	x0, x19
   49310:	mov	w1, w26
   49314:	bl	bf90 <mpfr_overflow@plt>
   49318:	mov	w21, w0
   4931c:	b	49c28 <mpfr_eint@@Base+0xacc>
   49320:	str	w25, [x29, #12]
   49324:	add	x9, x22, x23
   49328:	add	x25, x9, #0x6
   4932c:	tbnz	w8, #31, 493bc <mpfr_eint@@Base+0x260>
   49330:	cmp	w8, #0x1
   49334:	b.lt	49410 <mpfr_eint@@Base+0x2b4>  // b.tstop
   49338:	ldr	x8, [x21, #16]
   4933c:	cmn	x8, #0x1
   49340:	b.ne	49410 <mpfr_eint@@Base+0x2b4>  // b.any
   49344:	sub	x0, x29, #0xd8
   49348:	mov	w1, #0x20                  	// #32
   4934c:	mov	w22, #0x20                  	// #32
   49350:	bl	ca60 <mpfr_init2@plt>
   49354:	mov	w1, #0xa54b                	// #42315
   49358:	sub	x0, x29, #0xd8
   4935c:	movk	w1, #0x5f5c, lsl #16
   49360:	mov	x2, #0xffffffffffffffe0    	// #-32
   49364:	mov	w3, wzr
   49368:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4936c:	sub	x0, x29, #0xd8
   49370:	sub	x2, x29, #0xd8
   49374:	mov	x1, x21
   49378:	mov	w3, wzr
   4937c:	bl	bbc0 <mpfr_sub@plt>
   49380:	ldur	x8, [x29, #-200]
   49384:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   49388:	sub	x0, x29, #0xd8
   4938c:	neg	x10, x8
   49390:	and	x10, x10, x8, asr #63
   49394:	cmp	x8, x9
   49398:	csel	x8, x22, x10, eq  // eq = none
   4939c:	add	x25, x8, x25
   493a0:	bl	c0b0 <mpfr_clear@plt>
   493a4:	b	49410 <mpfr_eint@@Base+0x2b4>
   493a8:	ldr	w8, [x21, #8]
   493ac:	str	w25, [x29, #12]
   493b0:	add	x9, x22, x23
   493b4:	add	x25, x9, #0x6
   493b8:	tbz	w8, #31, 49330 <mpfr_eint@@Base+0x1d4>
   493bc:	ldr	x8, [x21, #16]
   493c0:	cmp	x8, #0x1
   493c4:	b.lt	49410 <mpfr_eint@@Base+0x2b4>  // b.tstop
   493c8:	adrp	x2, 76000 <__gmpfr_l2b@@Base+0x2e0>
   493cc:	ldr	x2, [x2, #3992]
   493d0:	add	x0, sp, #0x68
   493d4:	mov	w3, #0x2                   	// #2
   493d8:	mov	x1, x21
   493dc:	bl	c610 <mpfr_div@plt>
   493e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   493e4:	ldr	x1, [x0, #2576]
   493e8:	add	x0, x0, #0xa10
   493ec:	blr	x1
   493f0:	ldr	x1, [x20, x0]
   493f4:	add	x0, sp, #0x68
   493f8:	mov	x2, xzr
   493fc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   49400:	tbnz	w0, #31, 49c54 <mpfr_eint@@Base+0xaf8>
   49404:	ldr	w8, [x21, #8]
   49408:	cmp	w8, #0x1
   4940c:	b.ge	49338 <mpfr_eint@@Base+0x1dc>  // b.tcont
   49410:	add	x0, sp, #0x88
   49414:	mov	x1, x25
   49418:	bl	bf20 <mpfr_set_prec@plt>
   4941c:	add	x0, sp, #0x68
   49420:	mov	x1, x25
   49424:	bl	bf20 <mpfr_set_prec@plt>
   49428:	adrp	x9, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4942c:	sub	x8, x29, #0xd8
   49430:	ldr	d10, [x9, #1840]
   49434:	add	x10, x8, #0x10
   49438:	cmp	w26, #0x0
   4943c:	str	x10, [sp, #40]
   49440:	add	x10, x8, #0x18
   49444:	add	x8, x8, #0x20
   49448:	mov	w22, #0x40                  	// #64
   4944c:	fmov	d8, #5.000000000000000000e-01
   49450:	fmov	d9, #1.000000000000000000e+00
   49454:	mov	w23, #0x1f                  	// #31
   49458:	stp	x8, x10, [sp, #24]
   4945c:	cset	w8, eq  // eq = none
   49460:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   49464:	str	x8, [sp, #56]
   49468:	ldr	x8, [x21, #16]
   4946c:	str	x25, [sp, #64]
   49470:	str	x22, [sp, #16]
   49474:	cmp	x8, #0x1
   49478:	b.lt	49668 <mpfr_eint@@Base+0x50c>  // b.tstop
   4947c:	scvtf	d1, x8
   49480:	scvtf	d0, x25
   49484:	fmul	d1, d1, d8
   49488:	fadd	d0, d1, d0
   4948c:	fmul	d0, d0, d10
   49490:	fadd	d0, d0, d9
   49494:	add	x0, sp, #0x48
   49498:	bl	bd40 <mpfr_cmp_d@plt>
   4949c:	cmp	w0, #0x0
   494a0:	b.le	49664 <mpfr_eint@@Base+0x508>
   494a4:	ldr	x23, [sp, #136]
   494a8:	add	x0, sp, #0xc8
   494ac:	str	x24, [sp, #48]
   494b0:	mov	x1, x23
   494b4:	bl	ca60 <mpfr_init2@plt>
   494b8:	add	x0, sp, #0xe8
   494bc:	mov	x1, x23
   494c0:	bl	ca60 <mpfr_init2@plt>
   494c4:	add	x0, sp, #0xa8
   494c8:	mov	w1, #0x1f                  	// #31
   494cc:	bl	ca60 <mpfr_init2@plt>
   494d0:	add	x0, sp, #0xe8
   494d4:	mov	w1, #0x1                   	// #1
   494d8:	mov	x2, x21
   494dc:	mov	w3, wzr
   494e0:	bl	c2f0 <mpfr_ui_div@plt>
   494e4:	add	x0, sp, #0xc8
   494e8:	mov	w1, #0x1                   	// #1
   494ec:	mov	x2, xzr
   494f0:	mov	w3, wzr
   494f4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   494f8:	ldr	w3, [sp, #208]
   494fc:	add	x0, sp, #0x88
   49500:	add	x1, sp, #0xc8
   49504:	mov	w2, wzr
   49508:	bl	c690 <mpfr_set4@plt>
   4950c:	ldr	x8, [sp, #216]
   49510:	ldr	x9, [sp, #152]
   49514:	mov	w10, #0x1                   	// #1
   49518:	str	w10, [sp, #176]
   4951c:	add	x8, x8, x23
   49520:	cmp	x8, x9
   49524:	str	x27, [sp, #184]
   49528:	b.le	495d8 <mpfr_eint@@Base+0x47c>
   4952c:	mov	w24, #0x6                   	// #6
   49530:	mov	w25, #0x1                   	// #1
   49534:	add	x0, sp, #0xc8
   49538:	add	x1, sp, #0xc8
   4953c:	add	x2, sp, #0xe8
   49540:	mov	w3, wzr
   49544:	bl	bda0 <mpfr_mul@plt>
   49548:	add	x0, sp, #0xc8
   4954c:	add	x1, sp, #0xc8
   49550:	mov	x2, x25
   49554:	mov	w3, wzr
   49558:	bl	bab0 <mpfr_mul_ui@plt>
   4955c:	ldr	x8, [sp, #152]
   49560:	ldr	x9, [sp, #216]
   49564:	add	x0, sp, #0xa8
   49568:	add	x1, sp, #0xa8
   4956c:	mov	w3, #0x2                   	// #2
   49570:	sub	x2, x8, x9
   49574:	bl	bbe0 <mpfr_mul_2si@plt>
   49578:	add	x0, sp, #0xa8
   4957c:	add	x1, sp, #0xa8
   49580:	mov	w3, #0x2                   	// #2
   49584:	mov	x2, x24
   49588:	bl	c270 <mpfr_add_ui@plt>
   4958c:	ldr	x8, [sp, #152]
   49590:	ldr	x9, [sp, #216]
   49594:	add	x0, sp, #0xa8
   49598:	add	x1, sp, #0xa8
   4959c:	mov	w3, #0x2                   	// #2
   495a0:	sub	x2, x8, x9
   495a4:	bl	c410 <mpfr_div_2si@plt>
   495a8:	add	x0, sp, #0x88
   495ac:	add	x1, sp, #0x88
   495b0:	add	x2, sp, #0xc8
   495b4:	mov	w3, wzr
   495b8:	bl	c1e0 <mpfr_add@plt>
   495bc:	ldr	x8, [sp, #216]
   495c0:	ldr	x9, [sp, #152]
   495c4:	add	x25, x25, #0x1
   495c8:	add	x24, x24, #0x6
   495cc:	add	x8, x8, x23
   495d0:	cmp	x8, x9
   495d4:	b.gt	49534 <mpfr_eint@@Base+0x3d8>
   495d8:	add	x0, sp, #0x88
   495dc:	add	x1, sp, #0x88
   495e0:	add	x2, sp, #0xe8
   495e4:	mov	w3, wzr
   495e8:	bl	bda0 <mpfr_mul@plt>
   495ec:	add	x0, sp, #0xc8
   495f0:	mov	x1, x21
   495f4:	mov	w2, wzr
   495f8:	bl	c740 <mpfr_exp@plt>
   495fc:	add	x0, sp, #0x88
   49600:	add	x1, sp, #0x88
   49604:	add	x2, sp, #0xc8
   49608:	mov	w3, wzr
   4960c:	bl	bda0 <mpfr_mul@plt>
   49610:	add	x0, sp, #0xa8
   49614:	add	x1, sp, #0xa8
   49618:	mov	w2, #0x2                   	// #2
   4961c:	mov	w3, #0x2                   	// #2
   49620:	bl	c2c0 <mpfr_mul_2ui@plt>
   49624:	add	x0, sp, #0xa8
   49628:	add	x1, sp, #0xa8
   4962c:	mov	w2, #0x8                   	// #8
   49630:	mov	w3, #0x2                   	// #2
   49634:	bl	c270 <mpfr_add_ui@plt>
   49638:	ldr	x22, [sp, #184]
   4963c:	add	x0, sp, #0xc8
   49640:	bl	c0b0 <mpfr_clear@plt>
   49644:	add	x0, sp, #0xe8
   49648:	bl	c0b0 <mpfr_clear@plt>
   4964c:	add	x0, sp, #0xa8
   49650:	bl	c0b0 <mpfr_clear@plt>
   49654:	ldr	x8, [sp, #152]
   49658:	ldr	x24, [sp, #48]
   4965c:	ldr	x25, [sp, #64]
   49660:	b	49ae8 <mpfr_eint@@Base+0x98c>
   49664:	ldr	x8, [x21, #16]
   49668:	ldr	x25, [sp, #136]
   4966c:	neg	x9, x25
   49670:	cmp	x8, x9
   49674:	b.le	49a10 <mpfr_eint@@Base+0x8b4>
   49678:	sub	x0, x29, #0x28
   4967c:	str	x24, [sp, #48]
   49680:	str	x28, [sp, #8]
   49684:	str	w26, [x29, #8]
   49688:	bl	bfe0 <mpfr_mpz_init@plt>
   4968c:	sub	x0, x29, #0x38
   49690:	bl	bfe0 <mpfr_mpz_init@plt>
   49694:	sub	x0, x29, #0x48
   49698:	bl	bfe0 <mpfr_mpz_init@plt>
   4969c:	sub	x0, x29, #0x18
   496a0:	bl	bfe0 <mpfr_mpz_init@plt>
   496a4:	ldr	x8, [sp, #40]
   496a8:	mov	w9, #0x1                   	// #1
   496ac:	sub	x0, x29, #0x18
   496b0:	mov	x1, x21
   496b4:	stp	xzr, x8, [x29, #-216]
   496b8:	str	x8, [sp, #256]
   496bc:	ldr	x8, [sp, #32]
   496c0:	str	w9, [sp, #240]
   496c4:	str	w9, [sp, #208]
   496c8:	str	x23, [sp, #168]
   496cc:	stp	x8, x23, [sp, #224]
   496d0:	ldr	x8, [sp, #24]
   496d4:	str	w9, [sp, #176]
   496d8:	stp	x8, x23, [sp, #192]
   496dc:	bl	caa0 <mpfr_get_z_2exp@plt>
   496e0:	ldr	x8, [x21]
   496e4:	mov	x23, x0
   496e8:	subs	x2, x8, x25
   496ec:	b.le	49700 <mpfr_eint@@Base+0x5a4>
   496f0:	sub	x0, x29, #0x18
   496f4:	sub	x1, x29, #0x18
   496f8:	add	x23, x2, x23
   496fc:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   49700:	sub	x0, x29, #0x18
   49704:	mov	x1, xzr
   49708:	bl	baf0 <__gmpz_scan1@plt>
   4970c:	mov	x24, x0
   49710:	sub	x0, x29, #0x18
   49714:	sub	x1, x29, #0x18
   49718:	mov	x2, x24
   4971c:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   49720:	sub	x0, x29, #0x38
   49724:	mov	w1, #0x1                   	// #1
   49728:	add	x27, x24, x23
   4972c:	bl	bd00 <__gmpz_set_ui@plt>
   49730:	sub	x0, x29, #0x38
   49734:	sub	x1, x29, #0x38
   49738:	mov	x2, x25
   4973c:	bl	c230 <__gmpz_mul_2exp@plt>
   49740:	mov	w8, #0x1                   	// #1
   49744:	str	w8, [sp, #240]
   49748:	str	w8, [sp, #176]
   4974c:	sub	x8, x27, x25
   49750:	mov	x26, xzr
   49754:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   49758:	sub	x28, x25, #0x1
   4975c:	add	x22, x8, #0x1
   49760:	neg	x23, x27
   49764:	str	x9, [sp, #248]
   49768:	str	x9, [sp, #184]
   4976c:	b	497a0 <mpfr_eint@@Base+0x644>
   49770:	ldur	x9, [x29, #-48]
   49774:	cmp	w8, #0x0
   49778:	cneg	w10, w8, mi  // mi = first
   4977c:	add	x9, x9, w10, uxtw #3
   49780:	ldur	x9, [x9, #-8]
   49784:	lsl	x10, x10, #6
   49788:	clz	x9, x9
   4978c:	sub	x9, x10, x9
   49790:	ldr	x10, [sp, #184]
   49794:	add	x26, x26, #0x1
   49798:	cmp	x9, x10
   4979c:	b.lt	49900 <mpfr_eint@@Base+0x7a4>  // b.tstop
   497a0:	add	x0, sp, #0xe8
   497a4:	add	x1, sp, #0xe8
   497a8:	mov	w3, #0x2                   	// #2
   497ac:	mov	x2, x28
   497b0:	add	x24, x26, #0x1
   497b4:	bl	c2c0 <mpfr_mul_2ui@plt>
   497b8:	ldur	w8, [x29, #-52]
   497bc:	tbnz	w8, #31, 497d8 <mpfr_eint@@Base+0x67c>
   497c0:	add	x0, sp, #0xe8
   497c4:	add	x1, sp, #0xe8
   497c8:	sub	x2, x29, #0x38
   497cc:	mov	w3, #0x2                   	// #2
   497d0:	bl	c470 <mpfr_add_z@plt>
   497d4:	b	497ec <mpfr_eint@@Base+0x690>
   497d8:	add	x0, sp, #0xe8
   497dc:	add	x1, sp, #0xe8
   497e0:	sub	x2, x29, #0x38
   497e4:	mov	w3, #0x2                   	// #2
   497e8:	bl	bdb0 <mpfr_sub_z@plt>
   497ec:	ldur	w8, [x29, #-20]
   497f0:	ldur	x9, [x29, #-16]
   497f4:	add	x0, sp, #0xe8
   497f8:	add	x1, sp, #0xe8
   497fc:	cmp	w8, #0x0
   49800:	cneg	w8, w8, mi  // mi = first
   49804:	add	x9, x9, w8, uxtw #3
   49808:	ldur	x9, [x9, #-8]
   4980c:	mov	w3, #0x2                   	// #2
   49810:	clz	x9, x9
   49814:	sub	x9, x22, x9
   49818:	add	x2, x9, x8, lsl #6
   4981c:	bl	bbe0 <mpfr_mul_2si@plt>
   49820:	add	x0, sp, #0xe8
   49824:	add	x1, sp, #0xe8
   49828:	mov	w3, #0x2                   	// #2
   4982c:	mov	x2, x24
   49830:	bl	cc40 <mpfr_div_ui@plt>
   49834:	add	x0, sp, #0xe8
   49838:	add	x1, sp, #0xe8
   4983c:	mov	w2, #0x1                   	// #1
   49840:	mov	w3, #0x2                   	// #2
   49844:	bl	c270 <mpfr_add_ui@plt>
   49848:	sub	x0, x29, #0x38
   4984c:	sub	x1, x29, #0x38
   49850:	sub	x2, x29, #0x18
   49854:	bl	c030 <__gmpz_mul@plt>
   49858:	sub	x0, x29, #0x38
   4985c:	sub	x1, x29, #0x38
   49860:	tbnz	x27, #63, 49870 <mpfr_eint@@Base+0x714>
   49864:	mov	x2, x27
   49868:	bl	c230 <__gmpz_mul_2exp@plt>
   4986c:	b	49878 <mpfr_eint@@Base+0x71c>
   49870:	mov	x2, x23
   49874:	bl	c730 <__gmpz_tdiv_q_2exp@plt>
   49878:	sub	x0, x29, #0x38
   4987c:	sub	x1, x29, #0x38
   49880:	mov	x2, x24
   49884:	bl	c080 <__gmpz_tdiv_q_ui@plt>
   49888:	sub	x0, x29, #0x48
   4988c:	sub	x1, x29, #0x38
   49890:	mov	x2, x24
   49894:	bl	c080 <__gmpz_tdiv_q_ui@plt>
   49898:	sub	x0, x29, #0x28
   4989c:	sub	x1, x29, #0x28
   498a0:	sub	x2, x29, #0x48
   498a4:	bl	c9a0 <__gmpz_add@plt>
   498a8:	add	x0, sp, #0xc8
   498ac:	add	x1, sp, #0xe8
   498b0:	mov	w3, #0x2                   	// #2
   498b4:	mov	x2, x24
   498b8:	bl	cc40 <mpfr_div_ui@plt>
   498bc:	add	x0, sp, #0xc8
   498c0:	add	x1, sp, #0xc8
   498c4:	mov	w2, #0x1                   	// #1
   498c8:	mov	w3, #0x2                   	// #2
   498cc:	bl	c270 <mpfr_add_ui@plt>
   498d0:	add	x0, sp, #0xa8
   498d4:	add	x1, sp, #0xa8
   498d8:	add	x2, sp, #0xc8
   498dc:	mov	w3, #0x2                   	// #2
   498e0:	bl	c1e0 <mpfr_add@plt>
   498e4:	ldur	w8, [x29, #-52]
   498e8:	cbnz	w8, 49770 <mpfr_eint@@Base+0x614>
   498ec:	mov	x9, xzr
   498f0:	ldr	x10, [sp, #184]
   498f4:	add	x26, x26, #0x1
   498f8:	cmp	x9, x10
   498fc:	b.ge	497a0 <mpfr_eint@@Base+0x644>  // b.tcont
   49900:	cmp	w8, #0x0
   49904:	cneg	w8, w8, mi  // mi = first
   49908:	add	x0, sp, #0xe8
   4990c:	add	x1, sp, #0xe8
   49910:	sub	x2, x29, #0x38
   49914:	mov	w3, #0x2                   	// #2
   49918:	stur	w8, [x29, #-52]
   4991c:	bl	c470 <mpfr_add_z@plt>
   49920:	add	x0, sp, #0xe8
   49924:	add	x1, sp, #0xe8
   49928:	mov	w3, #0x2                   	// #2
   4992c:	mov	x2, x26
   49930:	bl	cc40 <mpfr_div_ui@plt>
   49934:	add	x0, sp, #0xc8
   49938:	mov	w2, #0x2                   	// #2
   4993c:	mov	w3, #0x1                   	// #1
   49940:	mov	x1, x21
   49944:	bl	c690 <mpfr_set4@plt>
   49948:	add	x0, sp, #0xe8
   4994c:	add	x1, sp, #0xe8
   49950:	add	x2, sp, #0xc8
   49954:	mov	w3, #0x2                   	// #2
   49958:	bl	bda0 <mpfr_mul@plt>
   4995c:	add	x0, sp, #0xc8
   49960:	add	x2, sp, #0xc8
   49964:	mov	w3, #0x3                   	// #3
   49968:	mov	x1, x26
   4996c:	bl	ca30 <mpfr_ui_sub@plt>
   49970:	ldr	w8, [sp, #208]
   49974:	tbnz	w8, #31, 499d0 <mpfr_eint@@Base+0x874>
   49978:	add	x0, sp, #0xe8
   4997c:	add	x1, sp, #0xe8
   49980:	add	x2, sp, #0xc8
   49984:	mov	w3, #0x2                   	// #2
   49988:	bl	c610 <mpfr_div@plt>
   4998c:	add	x0, sp, #0xa8
   49990:	add	x1, sp, #0xa8
   49994:	add	x2, sp, #0xe8
   49998:	mov	w3, #0x2                   	// #2
   4999c:	bl	c1e0 <mpfr_add@plt>
   499a0:	add	x0, sp, #0x88
   499a4:	sub	x1, x29, #0x28
   499a8:	mov	w2, wzr
   499ac:	bl	c250 <mpfr_set_z@plt>
   499b0:	add	x0, sp, #0x88
   499b4:	add	x1, sp, #0x88
   499b8:	mov	x2, x25
   499bc:	mov	w3, wzr
   499c0:	bl	c8f0 <mpfr_div_2ui@plt>
   499c4:	ldr	x8, [sp, #184]
   499c8:	ldr	x9, [sp, #152]
   499cc:	sub	x25, x8, x9
   499d0:	ldr	w26, [x29, #8]
   499d4:	ldr	x28, [sp, #8]
   499d8:	ldr	x24, [sp, #48]
   499dc:	ldur	x1, [x29, #-216]
   499e0:	cbz	x1, 499ec <mpfr_eint@@Base+0x890>
   499e4:	ldur	x0, [x29, #-208]
   499e8:	bl	cc00 <mpfr_free_func@plt>
   499ec:	sub	x0, x29, #0x28
   499f0:	bl	c1b0 <mpfr_mpz_clear@plt>
   499f4:	sub	x0, x29, #0x38
   499f8:	bl	c1b0 <mpfr_mpz_clear@plt>
   499fc:	sub	x0, x29, #0x48
   49a00:	bl	c1b0 <mpfr_mpz_clear@plt>
   49a04:	sub	x0, x29, #0x18
   49a08:	bl	c1b0 <mpfr_mpz_clear@plt>
   49a0c:	b	49a28 <mpfr_eint@@Base+0x8cc>
   49a10:	ldr	w3, [x21, #8]
   49a14:	add	x0, sp, #0x88
   49a18:	mov	x1, x21
   49a1c:	mov	w2, wzr
   49a20:	bl	c690 <mpfr_set4@plt>
   49a24:	mov	x25, xzr
   49a28:	ldr	x22, [sp, #152]
   49a2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49a30:	ldr	x1, [x0, #2672]
   49a34:	add	x0, x0, #0xa70
   49a38:	blr	x1
   49a3c:	add	x1, x20, x0
   49a40:	add	x0, sp, #0x68
   49a44:	mov	w2, wzr
   49a48:	bl	c380 <mpfr_cache@plt>
   49a4c:	add	x0, sp, #0x88
   49a50:	add	x1, sp, #0x88
   49a54:	add	x2, sp, #0x68
   49a58:	mov	w3, wzr
   49a5c:	bl	c1e0 <mpfr_add@plt>
   49a60:	ldr	x9, [sp, #152]
   49a64:	ldr	x10, [sp, #120]
   49a68:	add	x8, x22, x25
   49a6c:	cmp	x8, #0x0
   49a70:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   49a74:	csinv	x8, x8, xzr, ge  // ge = tcont
   49a78:	cmp	x9, x25
   49a7c:	csel	x22, x10, x9, eq  // eq = none
   49a80:	sub	x8, x8, x22
   49a84:	add	x8, x8, #0x2
   49a88:	add	x0, sp, #0x68
   49a8c:	add	x1, sp, #0x48
   49a90:	mov	w2, wzr
   49a94:	bic	x23, x8, x8, asr #63
   49a98:	bl	c0d0 <mpfr_log@plt>
   49a9c:	add	x0, sp, #0x88
   49aa0:	add	x1, sp, #0x88
   49aa4:	add	x2, sp, #0x68
   49aa8:	mov	w3, wzr
   49aac:	bl	c1e0 <mpfr_add@plt>
   49ab0:	ldr	x9, [sp, #120]
   49ab4:	add	x10, x22, x23
   49ab8:	ldr	x8, [sp, #152]
   49abc:	add	x11, x10, #0x1
   49ac0:	cmp	x9, x11
   49ac4:	csinc	x11, x9, x10, gt
   49ac8:	cmp	x9, x25
   49acc:	csinc	x9, x11, x10, ne  // ne = any
   49ad0:	cmp	x8, x25
   49ad4:	ldr	x25, [sp, #64]
   49ad8:	sub	x9, x9, x8
   49adc:	bic	x9, x9, x9, asr #63
   49ae0:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   49ae4:	csel	x22, x25, x9, eq  // eq = none
   49ae8:	mov	x23, #0x4                   	// #4
   49aec:	movk	x23, #0x8000, lsl #48
   49af0:	cmp	x8, x23
   49af4:	b.lt	49b30 <mpfr_eint@@Base+0x9d4>  // b.tstop
   49af8:	ldr	x8, [sp, #136]
   49afc:	ldr	x9, [x19]
   49b00:	ldr	x0, [sp, #160]
   49b04:	sub	x2, x25, x22
   49b08:	sub	x10, x8, #0x1
   49b0c:	add	x8, x8, #0x3e
   49b10:	cmp	x10, #0x0
   49b14:	csel	x8, x8, x10, lt  // lt = tstop
   49b18:	asr	x8, x8, #6
   49b1c:	add	x1, x8, #0x1
   49b20:	ldr	x8, [sp, #56]
   49b24:	add	x3, x9, x8
   49b28:	bl	c370 <mpfr_round_p@plt>
   49b2c:	cbnz	w0, 49b90 <mpfr_eint@@Base+0xa34>
   49b30:	ldr	x22, [sp, #16]
   49b34:	sub	x8, x23, x25
   49b38:	sub	x8, x8, #0x105
   49b3c:	cmp	x22, x8
   49b40:	b.gt	49b74 <mpfr_eint@@Base+0xa18>
   49b44:	add	x25, x25, x22
   49b48:	cmp	x25, #0x0
   49b4c:	cinc	x8, x25, lt  // lt = tstop
   49b50:	add	x0, sp, #0x88
   49b54:	mov	x1, x25
   49b58:	asr	x22, x8, #1
   49b5c:	bl	bf20 <mpfr_set_prec@plt>
   49b60:	add	x0, sp, #0x68
   49b64:	mov	x1, x25
   49b68:	bl	bf20 <mpfr_set_prec@plt>
   49b6c:	mov	w23, #0x1f                  	// #31
   49b70:	b	49468 <mpfr_eint@@Base+0x30c>
   49b74:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   49b78:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   49b7c:	mov	w1, #0x159                 	// #345
   49b80:	add	x0, x0, #0x7d7
   49b84:	add	x2, x2, #0x622
   49b88:	bl	cb20 <mpfr_assert_fail@plt>
   49b8c:	b	49b44 <mpfr_eint@@Base+0x9e8>
   49b90:	ldr	w3, [sp, #144]
   49b94:	add	x1, sp, #0x88
   49b98:	mov	x0, x19
   49b9c:	mov	w2, w26
   49ba0:	bl	c690 <mpfr_set4@plt>
   49ba4:	mov	w21, w0
   49ba8:	add	x0, sp, #0x88
   49bac:	bl	c0b0 <mpfr_clear@plt>
   49bb0:	add	x0, sp, #0x68
   49bb4:	bl	c0b0 <mpfr_clear@plt>
   49bb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49bbc:	ldr	x1, [x0, #2640]
   49bc0:	add	x0, x0, #0xa50
   49bc4:	blr	x1
   49bc8:	ldr	w9, [x29, #12]
   49bcc:	str	w9, [x20, x0]
   49bd0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49bd4:	ldr	x1, [x0, #2576]
   49bd8:	add	x0, x0, #0xa10
   49bdc:	blr	x1
   49be0:	str	x28, [x20, x0]
   49be4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49be8:	ldr	x1, [x0, #2608]
   49bec:	add	x0, x0, #0xa30
   49bf0:	blr	x1
   49bf4:	str	x24, [x20, x0]
   49bf8:	ldr	x8, [x19, #16]
   49bfc:	cmp	x8, x24
   49c00:	b.gt	49d2c <mpfr_eint@@Base+0xbd0>
   49c04:	cmp	x8, x28
   49c08:	b.lt	49d2c <mpfr_eint@@Base+0xbd0>  // b.tstop
   49c0c:	cbz	w21, 49c28 <mpfr_eint@@Base+0xacc>
   49c10:	orr	w8, w9, #0x8
   49c14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49c18:	ldr	x1, [x0, #2640]
   49c1c:	add	x0, x0, #0xa50
   49c20:	blr	x1
   49c24:	str	w8, [x20, x0]
   49c28:	mov	w0, w21
   49c2c:	add	sp, sp, #0x1e0
   49c30:	ldp	x20, x19, [sp, #112]
   49c34:	ldp	x22, x21, [sp, #96]
   49c38:	ldp	x24, x23, [sp, #80]
   49c3c:	ldp	x26, x25, [sp, #64]
   49c40:	ldp	x28, x27, [sp, #48]
   49c44:	ldp	x29, x30, [sp, #32]
   49c48:	ldp	d9, d8, [sp, #16]
   49c4c:	ldr	d10, [sp], #128
   49c50:	ret
   49c54:	add	x0, sp, #0x88
   49c58:	bl	c0b0 <mpfr_clear@plt>
   49c5c:	add	x0, sp, #0x68
   49c60:	bl	c0b0 <mpfr_clear@plt>
   49c64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49c68:	ldr	x1, [x0, #2640]
   49c6c:	add	x0, x0, #0xa50
   49c70:	blr	x1
   49c74:	ldr	w8, [x29, #12]
   49c78:	str	w8, [x20, x0]
   49c7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49c80:	ldr	x1, [x0, #2576]
   49c84:	add	x0, x0, #0xa10
   49c88:	blr	x1
   49c8c:	str	x28, [x20, x0]
   49c90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49c94:	ldr	x1, [x0, #2608]
   49c98:	add	x0, x0, #0xa30
   49c9c:	blr	x1
   49ca0:	str	x24, [x20, x0]
   49ca4:	mov	w2, #0xffffffff            	// #-1
   49ca8:	mov	x0, x19
   49cac:	mov	w1, w26
   49cb0:	bl	c3c0 <mpfr_underflow@plt>
   49cb4:	b	49318 <mpfr_eint@@Base+0x1bc>
   49cb8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   49cbc:	cmp	x8, x9
   49cc0:	b.eq	49d40 <mpfr_eint@@Base+0xbe4>  // b.none
   49cc4:	mov	x9, #0x2                   	// #2
   49cc8:	movk	x9, #0x8000, lsl #48
   49ccc:	cmp	x8, x9
   49cd0:	b.ne	49d5c <mpfr_eint@@Base+0xc00>  // b.any
   49cd4:	sub	x8, x10, #0x2
   49cd8:	str	x8, [x19, #16]
   49cdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49ce0:	ldr	x1, [x0, #2640]
   49ce4:	add	x0, x0, #0xa50
   49ce8:	blr	x1
   49cec:	mrs	x8, tpidr_el0
   49cf0:	ldr	w9, [x8, x0]
   49cf4:	mov	w21, wzr
   49cf8:	orr	w9, w9, #0x4
   49cfc:	str	w9, [x8, x0]
   49d00:	b	49c28 <mpfr_eint@@Base+0xacc>
   49d04:	mov	x23, xzr
   49d08:	b	49238 <mpfr_eint@@Base+0xdc>
   49d0c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   49d10:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   49d14:	add	x0, x0, #0x7d7
   49d18:	add	x2, x2, #0xbad
   49d1c:	mov	w1, #0xfa                  	// #250
   49d20:	bl	cb20 <mpfr_assert_fail@plt>
   49d24:	ldr	x8, [x19]
   49d28:	b	49224 <mpfr_eint@@Base+0xc8>
   49d2c:	mov	x0, x19
   49d30:	mov	w1, w21
   49d34:	mov	w2, w26
   49d38:	bl	cb10 <mpfr_check_range@plt>
   49d3c:	b	49318 <mpfr_eint@@Base+0x1bc>
   49d40:	ldr	w8, [x21, #8]
   49d44:	cmp	w8, #0x1
   49d48:	b.lt	49d94 <mpfr_eint@@Base+0xc38>  // b.tstop
   49d4c:	mov	w21, wzr
   49d50:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   49d54:	mov	w9, #0x1                   	// #1
   49d58:	b	49da0 <mpfr_eint@@Base+0xc44>
   49d5c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   49d60:	mov	w9, #0xffffffff            	// #-1
   49d64:	str	x8, [x19, #16]
   49d68:	str	w9, [x19, #8]
   49d6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49d70:	ldr	x1, [x0, #2640]
   49d74:	add	x0, x0, #0xa50
   49d78:	blr	x1
   49d7c:	mrs	x8, tpidr_el0
   49d80:	ldr	w9, [x8, x0]
   49d84:	mov	w21, wzr
   49d88:	orr	w9, w9, #0x20
   49d8c:	str	w9, [x8, x0]
   49d90:	b	49c28 <mpfr_eint@@Base+0xacc>
   49d94:	mov	w21, wzr
   49d98:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   49d9c:	mov	w9, #0xffffffff            	// #-1
   49da0:	str	x8, [x19, #16]
   49da4:	str	w9, [x19, #8]
   49da8:	b	49c28 <mpfr_eint@@Base+0xacc>

0000000000049dac <mpfr_sech@@Base>:
   49dac:	sub	sp, sp, #0x90
   49db0:	stp	x29, x30, [sp, #48]
   49db4:	stp	x28, x27, [sp, #64]
   49db8:	stp	x26, x25, [sp, #80]
   49dbc:	stp	x24, x23, [sp, #96]
   49dc0:	stp	x22, x21, [sp, #112]
   49dc4:	stp	x20, x19, [sp, #128]
   49dc8:	ldr	x9, [x1, #16]
   49dcc:	mov	x8, #0x4                   	// #4
   49dd0:	movk	x8, #0x8000, lsl #48
   49dd4:	mov	w19, w2
   49dd8:	cmp	x9, x8
   49ddc:	mov	x20, x0
   49de0:	add	x29, sp, #0x30
   49de4:	b.lt	4a0b8 <mpfr_sech@@Base+0x30c>  // b.tstop
   49de8:	mov	x21, x1
   49dec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49df0:	ldr	x1, [x0, #2640]
   49df4:	add	x0, x0, #0xa50
   49df8:	blr	x1
   49dfc:	mrs	x27, tpidr_el0
   49e00:	ldr	w28, [x27, x0]
   49e04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49e08:	ldr	x1, [x0, #2576]
   49e0c:	add	x0, x0, #0xa10
   49e10:	blr	x1
   49e14:	ldr	x26, [x27, x0]
   49e18:	mov	x8, x0
   49e1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49e20:	ldr	x1, [x0, #2608]
   49e24:	add	x0, x0, #0xa30
   49e28:	blr	x1
   49e2c:	ldr	x25, [x27, x0]
   49e30:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   49e34:	str	x10, [x27, x8]
   49e38:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   49e3c:	str	x8, [x27, x0]
   49e40:	tbz	x9, #63, 49e5c <mpfr_sech@@Base+0xb0>
   49e44:	ldr	x8, [x20]
   49e48:	mov	w10, #0x1                   	// #1
   49e4c:	sub	x2, x10, x9, lsl #1
   49e50:	add	x8, x8, #0x1
   49e54:	cmp	x2, x8
   49e58:	b.hi	4a144 <mpfr_sech@@Base+0x398>  // b.pmore
   49e5c:	ldr	x24, [x20]
   49e60:	subs	x22, x24, #0x1
   49e64:	b.eq	4a10c <mpfr_sech@@Base+0x360>  // b.none
   49e68:	b.le	4a114 <mpfr_sech@@Base+0x368>
   49e6c:	clz	x8, x22
   49e70:	mov	w9, #0x40                  	// #64
   49e74:	sub	x8, x9, x8
   49e78:	add	x8, x24, x8
   49e7c:	add	x22, x8, #0x3
   49e80:	add	x0, sp, #0x10
   49e84:	mov	x1, x22
   49e88:	bl	ca60 <mpfr_init2@plt>
   49e8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49e90:	ldr	x1, [x0, #2640]
   49e94:	add	x0, x0, #0xa50
   49e98:	blr	x1
   49e9c:	mov	x23, x0
   49ea0:	str	wzr, [x27, x0]
   49ea4:	add	x0, sp, #0x10
   49ea8:	mov	w2, #0x1                   	// #1
   49eac:	mov	x1, x21
   49eb0:	bl	bb50 <mpfr_cosh@plt>
   49eb4:	ldrb	w8, [x27, x23]
   49eb8:	tbnz	w8, #1, 4a058 <mpfr_sech@@Base+0x2ac>
   49ebc:	cmp	w19, #0x0
   49ec0:	mov	w23, #0x40                  	// #64
   49ec4:	cinc	x24, x24, eq  // eq = none
   49ec8:	add	x0, sp, #0x10
   49ecc:	add	x2, sp, #0x10
   49ed0:	mov	w1, #0x1                   	// #1
   49ed4:	mov	w3, wzr
   49ed8:	bl	c2f0 <mpfr_ui_div@plt>
   49edc:	ldr	x8, [sp, #32]
   49ee0:	mov	x9, #0x4                   	// #4
   49ee4:	movk	x9, #0x8000, lsl #48
   49ee8:	cmp	x8, x9
   49eec:	b.lt	49f20 <mpfr_sech@@Base+0x174>  // b.tstop
   49ef0:	ldr	x8, [sp, #16]
   49ef4:	ldr	x0, [sp, #40]
   49ef8:	sub	x2, x22, #0x2
   49efc:	mov	x3, x24
   49f00:	sub	x9, x8, #0x1
   49f04:	add	x8, x8, #0x3e
   49f08:	cmp	x9, #0x0
   49f0c:	csel	x8, x8, x9, lt  // lt = tstop
   49f10:	asr	x8, x8, #6
   49f14:	add	x1, x8, #0x1
   49f18:	bl	c370 <mpfr_round_p@plt>
   49f1c:	cbnz	w0, 49fa8 <mpfr_sech@@Base+0x1fc>
   49f20:	mov	x8, #0x4                   	// #4
   49f24:	movk	x8, #0x8000, lsl #48
   49f28:	sub	x8, x8, x22
   49f2c:	sub	x8, x8, #0x105
   49f30:	cmp	x23, x8
   49f34:	b.gt	49f8c <mpfr_sech@@Base+0x1e0>
   49f38:	add	x22, x22, x23
   49f3c:	cmp	x22, #0x0
   49f40:	cinc	x8, x22, lt  // lt = tstop
   49f44:	add	x0, sp, #0x10
   49f48:	mov	x1, x22
   49f4c:	asr	x23, x8, #1
   49f50:	bl	bf20 <mpfr_set_prec@plt>
   49f54:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49f58:	ldr	x1, [x0, #2640]
   49f5c:	add	x0, x0, #0xa50
   49f60:	blr	x1
   49f64:	str	x0, [sp, #8]
   49f68:	str	wzr, [x27, x0]
   49f6c:	add	x0, sp, #0x10
   49f70:	mov	w2, #0x1                   	// #1
   49f74:	mov	x1, x21
   49f78:	bl	bb50 <mpfr_cosh@plt>
   49f7c:	ldr	x8, [sp, #8]
   49f80:	ldrb	w8, [x27, x8]
   49f84:	tbz	w8, #1, 49ec8 <mpfr_sech@@Base+0x11c>
   49f88:	b	4a058 <mpfr_sech@@Base+0x2ac>
   49f8c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   49f90:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   49f94:	mov	w1, #0x5f                  	// #95
   49f98:	add	x0, x0, #0x7c7
   49f9c:	add	x2, x2, #0x287
   49fa0:	bl	cb20 <mpfr_assert_fail@plt>
   49fa4:	b	49f38 <mpfr_sech@@Base+0x18c>
   49fa8:	ldr	w3, [sp, #24]
   49fac:	add	x1, sp, #0x10
   49fb0:	mov	x0, x20
   49fb4:	mov	w2, w19
   49fb8:	bl	c690 <mpfr_set4@plt>
   49fbc:	mov	w22, w0
   49fc0:	add	x0, sp, #0x10
   49fc4:	bl	c0b0 <mpfr_clear@plt>
   49fc8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49fcc:	ldr	x1, [x0, #2640]
   49fd0:	add	x0, x0, #0xa50
   49fd4:	blr	x1
   49fd8:	str	w28, [x27, x0]
   49fdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49fe0:	ldr	x1, [x0, #2576]
   49fe4:	add	x0, x0, #0xa10
   49fe8:	blr	x1
   49fec:	str	x26, [x27, x0]
   49ff0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   49ff4:	ldr	x1, [x0, #2608]
   49ff8:	add	x0, x0, #0xa30
   49ffc:	blr	x1
   4a000:	str	x25, [x27, x0]
   4a004:	ldr	x8, [x20, #16]
   4a008:	cmp	x8, x25
   4a00c:	b.gt	4a130 <mpfr_sech@@Base+0x384>
   4a010:	cmp	x8, x26
   4a014:	b.lt	4a130 <mpfr_sech@@Base+0x384>  // b.tstop
   4a018:	cbz	w22, 4a034 <mpfr_sech@@Base+0x288>
   4a01c:	orr	w8, w28, #0x8
   4a020:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a024:	ldr	x1, [x0, #2640]
   4a028:	add	x0, x0, #0xa50
   4a02c:	blr	x1
   4a030:	str	w8, [x27, x0]
   4a034:	mov	w0, w22
   4a038:	ldp	x20, x19, [sp, #128]
   4a03c:	ldp	x22, x21, [sp, #112]
   4a040:	ldp	x24, x23, [sp, #96]
   4a044:	ldp	x26, x25, [sp, #80]
   4a048:	ldp	x28, x27, [sp, #64]
   4a04c:	ldp	x29, x30, [sp, #48]
   4a050:	add	sp, sp, #0x90
   4a054:	ret
   4a058:	ldr	w21, [sp, #24]
   4a05c:	add	x0, sp, #0x10
   4a060:	bl	c0b0 <mpfr_clear@plt>
   4a064:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a068:	ldr	x1, [x0, #2640]
   4a06c:	add	x0, x0, #0xa50
   4a070:	blr	x1
   4a074:	str	w28, [x27, x0]
   4a078:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a07c:	ldr	x1, [x0, #2576]
   4a080:	add	x0, x0, #0xa10
   4a084:	blr	x1
   4a088:	str	x26, [x27, x0]
   4a08c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a090:	ldr	x1, [x0, #2608]
   4a094:	add	x0, x0, #0xa30
   4a098:	blr	x1
   4a09c:	cmp	w19, #0x0
   4a0a0:	str	x25, [x27, x0]
   4a0a4:	csinc	w1, w19, wzr, ne  // ne = any
   4a0a8:	mov	x0, x20
   4a0ac:	mov	w2, w21
   4a0b0:	bl	c3c0 <mpfr_underflow@plt>
   4a0b4:	b	4a194 <mpfr_sech@@Base+0x3e8>
   4a0b8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4a0bc:	cmp	x9, x8
   4a0c0:	b.eq	4a168 <mpfr_sech@@Base+0x3bc>  // b.none
   4a0c4:	mov	x8, #0x2                   	// #2
   4a0c8:	movk	x8, #0x8000, lsl #48
   4a0cc:	cmp	x9, x8
   4a0d0:	b.ne	4a180 <mpfr_sech@@Base+0x3d4>  // b.any
   4a0d4:	mov	x8, #0x4                   	// #4
   4a0d8:	movk	x8, #0x8000, lsl #48
   4a0dc:	sub	x8, x8, #0x2
   4a0e0:	str	x8, [x20, #16]
   4a0e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a0e8:	ldr	x1, [x0, #2640]
   4a0ec:	add	x0, x0, #0xa50
   4a0f0:	blr	x1
   4a0f4:	mrs	x8, tpidr_el0
   4a0f8:	ldr	w9, [x8, x0]
   4a0fc:	mov	w22, wzr
   4a100:	orr	w9, w9, #0x4
   4a104:	str	w9, [x8, x0]
   4a108:	b	4a034 <mpfr_sech@@Base+0x288>
   4a10c:	mov	x8, xzr
   4a110:	b	49e78 <mpfr_sech@@Base+0xcc>
   4a114:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4a118:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4a11c:	add	x0, x0, #0x7c7
   4a120:	add	x2, x2, #0x238
   4a124:	mov	w1, #0x43                  	// #67
   4a128:	bl	cb20 <mpfr_assert_fail@plt>
   4a12c:	b	49e6c <mpfr_sech@@Base+0xc0>
   4a130:	mov	x0, x20
   4a134:	mov	w1, w22
   4a138:	mov	w2, w19
   4a13c:	bl	cb10 <mpfr_check_range@plt>
   4a140:	b	4a194 <mpfr_sech@@Base+0x3e8>
   4a144:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   4a148:	ldr	x1, [x1, #3944]
   4a14c:	mov	x0, x20
   4a150:	mov	w3, wzr
   4a154:	mov	w4, w19
   4a158:	bl	c530 <mpfr_round_near_x@plt>
   4a15c:	mov	w22, w0
   4a160:	cbnz	w0, 49fc8 <mpfr_sech@@Base+0x21c>
   4a164:	b	49e5c <mpfr_sech@@Base+0xb0>
   4a168:	mov	w8, #0x1                   	// #1
   4a16c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4a170:	mov	w22, wzr
   4a174:	str	w8, [x20, #8]
   4a178:	str	x9, [x20, #16]
   4a17c:	b	4a034 <mpfr_sech@@Base+0x288>
   4a180:	mov	w1, #0x1                   	// #1
   4a184:	mov	x0, x20
   4a188:	mov	x2, xzr
   4a18c:	mov	w3, w19
   4a190:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4a194:	mov	w22, w0
   4a198:	b	4a034 <mpfr_sech@@Base+0x288>

000000000004a19c <mpfr_csch@@Base>:
   4a19c:	sub	sp, sp, #0x90
   4a1a0:	stp	x29, x30, [sp, #48]
   4a1a4:	stp	x28, x27, [sp, #64]
   4a1a8:	stp	x26, x25, [sp, #80]
   4a1ac:	stp	x24, x23, [sp, #96]
   4a1b0:	stp	x22, x21, [sp, #112]
   4a1b4:	stp	x20, x19, [sp, #128]
   4a1b8:	ldr	x9, [x1, #16]
   4a1bc:	mov	x10, #0x2                   	// #2
   4a1c0:	movk	x10, #0x8000, lsl #48
   4a1c4:	add	x8, x10, #0x2
   4a1c8:	mov	x21, x1
   4a1cc:	cmp	x9, x8
   4a1d0:	mov	x19, x0
   4a1d4:	add	x29, sp, #0x30
   4a1d8:	b.lt	4a4f8 <mpfr_csch@@Base+0x35c>  // b.tstop
   4a1dc:	mov	w20, w2
   4a1e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a1e4:	ldr	x1, [x0, #2640]
   4a1e8:	add	x0, x0, #0xa50
   4a1ec:	blr	x1
   4a1f0:	mrs	x27, tpidr_el0
   4a1f4:	ldr	w28, [x27, x0]
   4a1f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a1fc:	ldr	x1, [x0, #2576]
   4a200:	add	x0, x0, #0xa10
   4a204:	blr	x1
   4a208:	ldr	x26, [x27, x0]
   4a20c:	mov	x8, x0
   4a210:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a214:	ldr	x1, [x0, #2608]
   4a218:	add	x0, x0, #0xa30
   4a21c:	blr	x1
   4a220:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4a224:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   4a228:	ldr	x25, [x27, x0]
   4a22c:	str	x10, [x27, x8]
   4a230:	str	x11, [x27, x0]
   4a234:	ldr	x8, [x21]
   4a238:	ldr	x24, [x19]
   4a23c:	cmp	x8, x24
   4a240:	csel	x8, x8, x24, gt
   4a244:	neg	x8, x8, lsl #1
   4a248:	cmp	x9, x8
   4a24c:	b.le	4a39c <mpfr_csch@@Base+0x200>
   4a250:	subs	x22, x24, #0x1
   4a254:	b.eq	4a5c8 <mpfr_csch@@Base+0x42c>  // b.none
   4a258:	b.le	4a5d0 <mpfr_csch@@Base+0x434>
   4a25c:	clz	x8, x22
   4a260:	mov	w9, #0x40                  	// #64
   4a264:	sub	x8, x9, x8
   4a268:	add	x8, x24, x8
   4a26c:	add	x22, x8, #0x3
   4a270:	add	x0, sp, #0x10
   4a274:	mov	x1, x22
   4a278:	bl	ca60 <mpfr_init2@plt>
   4a27c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a280:	ldr	x1, [x0, #2640]
   4a284:	add	x0, x0, #0xa50
   4a288:	blr	x1
   4a28c:	mov	x23, x0
   4a290:	str	wzr, [x27, x0]
   4a294:	add	x0, sp, #0x10
   4a298:	mov	w2, #0x1                   	// #1
   4a29c:	mov	x1, x21
   4a2a0:	bl	c320 <mpfr_sinh@plt>
   4a2a4:	ldrb	w8, [x27, x23]
   4a2a8:	tbnz	w8, #1, 4a540 <mpfr_csch@@Base+0x3a4>
   4a2ac:	cmp	w20, #0x0
   4a2b0:	mov	w23, #0x40                  	// #64
   4a2b4:	cinc	x24, x24, eq  // eq = none
   4a2b8:	add	x0, sp, #0x10
   4a2bc:	add	x2, sp, #0x10
   4a2c0:	mov	w1, #0x1                   	// #1
   4a2c4:	mov	w3, wzr
   4a2c8:	bl	c2f0 <mpfr_ui_div@plt>
   4a2cc:	ldr	x8, [sp, #32]
   4a2d0:	mov	x9, #0x2                   	// #2
   4a2d4:	movk	x9, #0x8000, lsl #48
   4a2d8:	add	x9, x9, #0x2
   4a2dc:	cmp	x8, x9
   4a2e0:	b.lt	4a314 <mpfr_csch@@Base+0x178>  // b.tstop
   4a2e4:	ldr	x8, [sp, #16]
   4a2e8:	ldr	x0, [sp, #40]
   4a2ec:	sub	x2, x22, #0x2
   4a2f0:	mov	x3, x24
   4a2f4:	sub	x9, x8, #0x1
   4a2f8:	add	x8, x8, #0x3e
   4a2fc:	cmp	x9, #0x0
   4a300:	csel	x8, x8, x9, lt  // lt = tstop
   4a304:	asr	x8, x8, #6
   4a308:	add	x1, x8, #0x1
   4a30c:	bl	c370 <mpfr_round_p@plt>
   4a310:	cbnz	w0, 4a3c0 <mpfr_csch@@Base+0x224>
   4a314:	mov	x8, #0x2                   	// #2
   4a318:	movk	x8, #0x8000, lsl #48
   4a31c:	sub	x8, x8, x22
   4a320:	sub	x8, x8, #0x103
   4a324:	cmp	x23, x8
   4a328:	b.gt	4a380 <mpfr_csch@@Base+0x1e4>
   4a32c:	add	x22, x22, x23
   4a330:	cmp	x22, #0x0
   4a334:	cinc	x8, x22, lt  // lt = tstop
   4a338:	add	x0, sp, #0x10
   4a33c:	mov	x1, x22
   4a340:	asr	x23, x8, #1
   4a344:	bl	bf20 <mpfr_set_prec@plt>
   4a348:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a34c:	ldr	x1, [x0, #2640]
   4a350:	add	x0, x0, #0xa50
   4a354:	blr	x1
   4a358:	str	x0, [sp, #8]
   4a35c:	str	wzr, [x27, x0]
   4a360:	add	x0, sp, #0x10
   4a364:	mov	w2, #0x1                   	// #1
   4a368:	mov	x1, x21
   4a36c:	bl	c320 <mpfr_sinh@plt>
   4a370:	ldr	x8, [sp, #8]
   4a374:	ldrb	w8, [x27, x8]
   4a378:	tbz	w8, #1, 4a2b8 <mpfr_csch@@Base+0x11c>
   4a37c:	b	4a540 <mpfr_csch@@Base+0x3a4>
   4a380:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4a384:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4a388:	mov	w1, #0x5f                  	// #95
   4a38c:	add	x0, x0, #0x7c7
   4a390:	add	x2, x2, #0x287
   4a394:	bl	cb20 <mpfr_assert_fail@plt>
   4a398:	b	4a32c <mpfr_csch@@Base+0x190>
   4a39c:	ldr	w22, [x21, #8]
   4a3a0:	mov	w1, #0x1                   	// #1
   4a3a4:	mov	x0, x19
   4a3a8:	mov	x2, x21
   4a3ac:	mov	w3, w20
   4a3b0:	bl	c2f0 <mpfr_ui_div@plt>
   4a3b4:	cbz	w0, 4a3e4 <mpfr_csch@@Base+0x248>
   4a3b8:	mov	w21, w0
   4a3bc:	b	4a450 <mpfr_csch@@Base+0x2b4>
   4a3c0:	ldr	w3, [sp, #24]
   4a3c4:	add	x1, sp, #0x10
   4a3c8:	mov	x0, x19
   4a3cc:	mov	w2, w20
   4a3d0:	bl	c690 <mpfr_set4@plt>
   4a3d4:	mov	w21, w0
   4a3d8:	add	x0, sp, #0x10
   4a3dc:	bl	c0b0 <mpfr_clear@plt>
   4a3e0:	b	4a468 <mpfr_csch@@Base+0x2cc>
   4a3e4:	cmp	w22, #0x0
   4a3e8:	mov	w8, #0x2                   	// #2
   4a3ec:	cinc	w8, w8, le
   4a3f0:	cmp	w20, #0x4
   4a3f4:	csel	w20, w8, w20, eq  // eq = none
   4a3f8:	cmp	w20, #0x2
   4a3fc:	b.ne	4a410 <mpfr_csch@@Base+0x274>  // b.any
   4a400:	tbnz	w22, #31, 4a41c <mpfr_csch@@Base+0x280>
   4a404:	mov	w20, #0x2                   	// #2
   4a408:	mov	w21, #0x1                   	// #1
   4a40c:	b	4a450 <mpfr_csch@@Base+0x2b4>
   4a410:	tbz	w22, #31, 4a42c <mpfr_csch@@Base+0x290>
   4a414:	cmp	w20, #0x1
   4a418:	b.ne	4a42c <mpfr_csch@@Base+0x290>  // b.any
   4a41c:	mov	x0, x19
   4a420:	bl	c160 <mpfr_nextabove@plt>
   4a424:	mov	w21, #0x1                   	// #1
   4a428:	b	4a450 <mpfr_csch@@Base+0x2b4>
   4a42c:	orr	w8, w20, #0x2
   4a430:	cmp	w8, #0x3
   4a434:	csinv	w21, w22, wzr, ne  // ne = any
   4a438:	b.ne	4a450 <mpfr_csch@@Base+0x2b4>  // b.any
   4a43c:	cmp	w22, #0x1
   4a440:	b.lt	4a450 <mpfr_csch@@Base+0x2b4>  // b.tstop
   4a444:	mov	x0, x19
   4a448:	bl	be20 <mpfr_nextbelow@plt>
   4a44c:	mov	w21, #0xffffffff            	// #-1
   4a450:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a454:	ldr	x1, [x0, #2640]
   4a458:	add	x0, x0, #0xa50
   4a45c:	blr	x1
   4a460:	ldr	w8, [x27, x0]
   4a464:	orr	w28, w8, w28
   4a468:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a46c:	ldr	x1, [x0, #2640]
   4a470:	add	x0, x0, #0xa50
   4a474:	blr	x1
   4a478:	str	w28, [x27, x0]
   4a47c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a480:	ldr	x1, [x0, #2576]
   4a484:	add	x0, x0, #0xa10
   4a488:	blr	x1
   4a48c:	str	x26, [x27, x0]
   4a490:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a494:	ldr	x1, [x0, #2608]
   4a498:	add	x0, x0, #0xa30
   4a49c:	blr	x1
   4a4a0:	str	x25, [x27, x0]
   4a4a4:	ldr	x8, [x19, #16]
   4a4a8:	cmp	x8, x25
   4a4ac:	b.gt	4a52c <mpfr_csch@@Base+0x390>
   4a4b0:	cmp	x8, x26
   4a4b4:	b.lt	4a52c <mpfr_csch@@Base+0x390>  // b.tstop
   4a4b8:	cbz	w21, 4a4d4 <mpfr_csch@@Base+0x338>
   4a4bc:	orr	w8, w28, #0x8
   4a4c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a4c4:	ldr	x1, [x0, #2640]
   4a4c8:	add	x0, x0, #0xa50
   4a4cc:	blr	x1
   4a4d0:	str	w8, [x27, x0]
   4a4d4:	mov	w0, w21
   4a4d8:	ldp	x20, x19, [sp, #128]
   4a4dc:	ldp	x22, x21, [sp, #112]
   4a4e0:	ldp	x24, x23, [sp, #96]
   4a4e4:	ldp	x26, x25, [sp, #80]
   4a4e8:	ldp	x28, x27, [sp, #64]
   4a4ec:	ldp	x29, x30, [sp, #48]
   4a4f0:	add	sp, sp, #0x90
   4a4f4:	ret
   4a4f8:	cmp	x9, x10
   4a4fc:	b.ne	4a5a4 <mpfr_csch@@Base+0x408>  // b.any
   4a500:	str	x10, [x19, #16]
   4a504:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a508:	ldr	x1, [x0, #2640]
   4a50c:	add	x0, x0, #0xa50
   4a510:	blr	x1
   4a514:	mrs	x8, tpidr_el0
   4a518:	ldr	w9, [x8, x0]
   4a51c:	mov	w21, wzr
   4a520:	orr	w9, w9, #0x4
   4a524:	str	w9, [x8, x0]
   4a528:	b	4a4d4 <mpfr_csch@@Base+0x338>
   4a52c:	mov	x0, x19
   4a530:	mov	w1, w21
   4a534:	mov	w2, w20
   4a538:	bl	cb10 <mpfr_check_range@plt>
   4a53c:	b	4a59c <mpfr_csch@@Base+0x400>
   4a540:	ldr	w21, [sp, #24]
   4a544:	add	x0, sp, #0x10
   4a548:	bl	c0b0 <mpfr_clear@plt>
   4a54c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a550:	ldr	x1, [x0, #2640]
   4a554:	add	x0, x0, #0xa50
   4a558:	blr	x1
   4a55c:	str	w28, [x27, x0]
   4a560:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a564:	ldr	x1, [x0, #2576]
   4a568:	add	x0, x0, #0xa10
   4a56c:	blr	x1
   4a570:	str	x26, [x27, x0]
   4a574:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a578:	ldr	x1, [x0, #2608]
   4a57c:	add	x0, x0, #0xa30
   4a580:	blr	x1
   4a584:	cmp	w20, #0x0
   4a588:	str	x25, [x27, x0]
   4a58c:	csinc	w1, w20, wzr, ne  // ne = any
   4a590:	mov	x0, x19
   4a594:	mov	w2, w21
   4a598:	bl	c3c0 <mpfr_underflow@plt>
   4a59c:	mov	w21, w0
   4a5a0:	b	4a4d4 <mpfr_csch@@Base+0x338>
   4a5a4:	ldr	w10, [x21, #8]
   4a5a8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4a5ac:	cmp	x9, x8
   4a5b0:	str	w10, [x19, #8]
   4a5b4:	b.ne	4a5ec <mpfr_csch@@Base+0x450>  // b.any
   4a5b8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4a5bc:	mov	w21, wzr
   4a5c0:	str	x8, [x19, #16]
   4a5c4:	b	4a4d4 <mpfr_csch@@Base+0x338>
   4a5c8:	mov	x8, xzr
   4a5cc:	b	4a268 <mpfr_csch@@Base+0xcc>
   4a5d0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4a5d4:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4a5d8:	add	x0, x0, #0x7c7
   4a5dc:	add	x2, x2, #0x238
   4a5e0:	mov	w1, #0x43                  	// #67
   4a5e4:	bl	cb20 <mpfr_assert_fail@plt>
   4a5e8:	b	4a25c <mpfr_csch@@Base+0xc0>
   4a5ec:	str	x8, [x19, #16]
   4a5f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a5f4:	ldr	x1, [x0, #2640]
   4a5f8:	add	x0, x0, #0xa50
   4a5fc:	blr	x1
   4a600:	mrs	x8, tpidr_el0
   4a604:	ldr	w9, [x8, x0]
   4a608:	mov	w21, wzr
   4a60c:	orr	w9, w9, #0x20
   4a610:	str	w9, [x8, x0]
   4a614:	b	4a4d4 <mpfr_csch@@Base+0x338>

000000000004a618 <mpfr_coth@@Base>:
   4a618:	sub	sp, sp, #0x90
   4a61c:	stp	x29, x30, [sp, #48]
   4a620:	stp	x28, x27, [sp, #64]
   4a624:	stp	x26, x25, [sp, #80]
   4a628:	stp	x24, x23, [sp, #96]
   4a62c:	stp	x22, x21, [sp, #112]
   4a630:	stp	x20, x19, [sp, #128]
   4a634:	ldr	x9, [x1, #16]
   4a638:	mov	x10, #0x2                   	// #2
   4a63c:	movk	x10, #0x8000, lsl #48
   4a640:	add	x8, x10, #0x2
   4a644:	mov	w20, w2
   4a648:	mov	x21, x1
   4a64c:	cmp	x9, x8
   4a650:	mov	x19, x0
   4a654:	add	x29, sp, #0x30
   4a658:	b.lt	4a8f8 <mpfr_coth@@Base+0x2e0>  // b.tstop
   4a65c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a660:	ldr	x1, [x0, #2640]
   4a664:	add	x0, x0, #0xa50
   4a668:	blr	x1
   4a66c:	mrs	x27, tpidr_el0
   4a670:	ldr	w28, [x27, x0]
   4a674:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a678:	ldr	x1, [x0, #2576]
   4a67c:	add	x0, x0, #0xa10
   4a680:	blr	x1
   4a684:	ldr	x26, [x27, x0]
   4a688:	mov	x8, x0
   4a68c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a690:	ldr	x1, [x0, #2608]
   4a694:	add	x0, x0, #0xa30
   4a698:	blr	x1
   4a69c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4a6a0:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   4a6a4:	ldr	x24, [x27, x0]
   4a6a8:	str	x10, [x27, x8]
   4a6ac:	str	x11, [x27, x0]
   4a6b0:	ldr	x8, [x21]
   4a6b4:	ldr	x25, [x19]
   4a6b8:	cmp	x8, x25
   4a6bc:	csel	x8, x8, x25, gt
   4a6c0:	neg	x8, x8, lsl #1
   4a6c4:	cmp	x9, x8
   4a6c8:	b.ge	4a708 <mpfr_coth@@Base+0xf0>  // b.tcont
   4a6cc:	ldr	w22, [x21, #8]
   4a6d0:	mov	w1, #0x1                   	// #1
   4a6d4:	mov	x0, x19
   4a6d8:	mov	x2, x21
   4a6dc:	mov	w3, w20
   4a6e0:	bl	c2f0 <mpfr_ui_div@plt>
   4a6e4:	cbz	w0, 4a898 <mpfr_coth@@Base+0x280>
   4a6e8:	mov	w21, w0
   4a6ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a6f0:	ldr	x1, [x0, #2640]
   4a6f4:	add	x0, x0, #0xa50
   4a6f8:	blr	x1
   4a6fc:	ldr	w8, [x27, x0]
   4a700:	orr	w28, w8, w28
   4a704:	b	4aa44 <mpfr_coth@@Base+0x42c>
   4a708:	subs	x22, x25, #0x1
   4a70c:	b.eq	4a9bc <mpfr_coth@@Base+0x3a4>  // b.none
   4a710:	b.le	4a9c4 <mpfr_coth@@Base+0x3ac>
   4a714:	clz	x8, x22
   4a718:	mov	w9, #0x40                  	// #64
   4a71c:	sub	x8, x9, x8
   4a720:	add	x8, x25, x8
   4a724:	add	x22, x8, #0x3
   4a728:	add	x0, sp, #0x10
   4a72c:	mov	x1, x22
   4a730:	bl	ca60 <mpfr_init2@plt>
   4a734:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a738:	ldr	x1, [x0, #2640]
   4a73c:	add	x0, x0, #0xa50
   4a740:	blr	x1
   4a744:	mov	x23, x0
   4a748:	str	wzr, [x27, x0]
   4a74c:	add	x0, sp, #0x10
   4a750:	mov	w2, #0x1                   	// #1
   4a754:	mov	x1, x21
   4a758:	bl	bb60 <mpfr_tanh@plt>
   4a75c:	ldrb	w8, [x27, x23]
   4a760:	tbnz	w8, #1, 4a92c <mpfr_coth@@Base+0x314>
   4a764:	cmp	w20, #0x0
   4a768:	neg	x8, x25
   4a76c:	mov	w23, #0x40                  	// #64
   4a770:	cinc	x25, x25, eq  // eq = none
   4a774:	str	x8, [sp, #8]
   4a778:	add	x0, sp, #0x10
   4a77c:	add	x2, sp, #0x10
   4a780:	mov	w1, #0x1                   	// #1
   4a784:	mov	w3, wzr
   4a788:	bl	c2f0 <mpfr_ui_div@plt>
   4a78c:	ldr	x8, [sp, #32]
   4a790:	mov	x9, #0x2                   	// #2
   4a794:	movk	x9, #0x8000, lsl #48
   4a798:	add	x9, x9, #0x2
   4a79c:	cmp	x8, x9
   4a7a0:	b.lt	4a810 <mpfr_coth@@Base+0x1f8>  // b.tstop
   4a7a4:	ldr	x8, [sp, #16]
   4a7a8:	ldr	x0, [sp, #40]
   4a7ac:	sub	x2, x22, #0x2
   4a7b0:	mov	x3, x25
   4a7b4:	sub	x9, x8, #0x1
   4a7b8:	add	x8, x8, #0x3e
   4a7bc:	cmp	x9, #0x0
   4a7c0:	csel	x8, x8, x9, lt  // lt = tstop
   4a7c4:	asr	x8, x8, #6
   4a7c8:	add	x1, x8, #0x1
   4a7cc:	bl	c370 <mpfr_round_p@plt>
   4a7d0:	cbnz	w0, 4aa24 <mpfr_coth@@Base+0x40c>
   4a7d4:	ldr	x8, [sp, #32]
   4a7d8:	cmp	x8, #0x1
   4a7dc:	b.ne	4a810 <mpfr_coth@@Base+0x1f8>  // b.any
   4a7e0:	ldrsw	x2, [sp, #24]
   4a7e4:	add	x0, sp, #0x10
   4a7e8:	add	x1, sp, #0x10
   4a7ec:	mov	w3, wzr
   4a7f0:	bl	c0a0 <mpfr_sub_si@plt>
   4a7f4:	ldr	x8, [sp, #32]
   4a7f8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4a7fc:	cmp	x8, x9
   4a800:	b.eq	4aa10 <mpfr_coth@@Base+0x3f8>  // b.none
   4a804:	ldr	x9, [sp, #8]
   4a808:	cmp	x8, x9
   4a80c:	b.le	4aa10 <mpfr_coth@@Base+0x3f8>
   4a810:	mov	x8, #0x2                   	// #2
   4a814:	movk	x8, #0x8000, lsl #48
   4a818:	sub	x8, x8, x22
   4a81c:	sub	x8, x8, #0x103
   4a820:	cmp	x23, x8
   4a824:	b.gt	4a87c <mpfr_coth@@Base+0x264>
   4a828:	add	x22, x22, x23
   4a82c:	cmp	x22, #0x0
   4a830:	cinc	x8, x22, lt  // lt = tstop
   4a834:	add	x0, sp, #0x10
   4a838:	mov	x1, x22
   4a83c:	asr	x23, x8, #1
   4a840:	bl	bf20 <mpfr_set_prec@plt>
   4a844:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a848:	ldr	x1, [x0, #2640]
   4a84c:	add	x0, x0, #0xa50
   4a850:	blr	x1
   4a854:	str	x0, [sp]
   4a858:	str	wzr, [x27, x0]
   4a85c:	add	x0, sp, #0x10
   4a860:	mov	w2, #0x1                   	// #1
   4a864:	mov	x1, x21
   4a868:	bl	bb60 <mpfr_tanh@plt>
   4a86c:	ldr	x8, [sp]
   4a870:	ldrb	w8, [x27, x8]
   4a874:	tbz	w8, #1, 4a778 <mpfr_coth@@Base+0x160>
   4a878:	b	4a92c <mpfr_coth@@Base+0x314>
   4a87c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4a880:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4a884:	mov	w1, #0x5f                  	// #95
   4a888:	add	x0, x0, #0x7c7
   4a88c:	add	x2, x2, #0x287
   4a890:	bl	cb20 <mpfr_assert_fail@plt>
   4a894:	b	4a828 <mpfr_coth@@Base+0x210>
   4a898:	cmp	w22, #0x0
   4a89c:	mov	w8, #0x2                   	// #2
   4a8a0:	cinc	w8, w8, le
   4a8a4:	cmp	w20, #0x4
   4a8a8:	csel	w20, w8, w20, eq  // eq = none
   4a8ac:	cmp	w20, #0x3
   4a8b0:	b.eq	4a8d8 <mpfr_coth@@Base+0x2c0>  // b.none
   4a8b4:	cmp	w20, #0x2
   4a8b8:	b.ne	4a8f0 <mpfr_coth@@Base+0x2d8>  // b.any
   4a8bc:	cmp	w22, #0x1
   4a8c0:	b.lt	4a8cc <mpfr_coth@@Base+0x2b4>  // b.tstop
   4a8c4:	mov	x0, x19
   4a8c8:	bl	c160 <mpfr_nextabove@plt>
   4a8cc:	mov	w20, #0x2                   	// #2
   4a8d0:	mov	w21, #0x1                   	// #1
   4a8d4:	b	4a6ec <mpfr_coth@@Base+0xd4>
   4a8d8:	tbz	w22, #31, 4a8e4 <mpfr_coth@@Base+0x2cc>
   4a8dc:	mov	x0, x19
   4a8e0:	bl	be20 <mpfr_nextbelow@plt>
   4a8e4:	mov	w20, #0x3                   	// #3
   4a8e8:	mov	w21, #0xffffffff            	// #-1
   4a8ec:	b	4a6ec <mpfr_coth@@Base+0xd4>
   4a8f0:	neg	w21, w22
   4a8f4:	b	4a6ec <mpfr_coth@@Base+0xd4>
   4a8f8:	cmp	x9, x10
   4a8fc:	b.ne	4a98c <mpfr_coth@@Base+0x374>  // b.any
   4a900:	str	x10, [x19, #16]
   4a904:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a908:	ldr	x1, [x0, #2640]
   4a90c:	add	x0, x0, #0xa50
   4a910:	blr	x1
   4a914:	mrs	x8, tpidr_el0
   4a918:	ldr	w9, [x8, x0]
   4a91c:	mov	w21, wzr
   4a920:	orr	w9, w9, #0x4
   4a924:	str	w9, [x8, x0]
   4a928:	b	4aab0 <mpfr_coth@@Base+0x498>
   4a92c:	ldr	w21, [sp, #24]
   4a930:	add	x0, sp, #0x10
   4a934:	bl	c0b0 <mpfr_clear@plt>
   4a938:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a93c:	ldr	x1, [x0, #2640]
   4a940:	add	x0, x0, #0xa50
   4a944:	blr	x1
   4a948:	str	w28, [x27, x0]
   4a94c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a950:	ldr	x1, [x0, #2576]
   4a954:	add	x0, x0, #0xa10
   4a958:	blr	x1
   4a95c:	str	x26, [x27, x0]
   4a960:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a964:	ldr	x1, [x0, #2608]
   4a968:	add	x0, x0, #0xa30
   4a96c:	blr	x1
   4a970:	cmp	w20, #0x0
   4a974:	str	x24, [x27, x0]
   4a978:	csinc	w1, w20, wzr, ne  // ne = any
   4a97c:	mov	x0, x19
   4a980:	mov	w2, w21
   4a984:	bl	c3c0 <mpfr_underflow@plt>
   4a988:	b	4aae4 <mpfr_coth@@Base+0x4cc>
   4a98c:	ldr	w8, [x21, #8]
   4a990:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   4a994:	cmp	x9, x10
   4a998:	b.ne	4a9e0 <mpfr_coth@@Base+0x3c8>  // b.any
   4a99c:	cmp	w8, #0x1
   4a9a0:	mov	x8, #0xffffffffffffffff    	// #-1
   4a9a4:	cneg	x1, x8, ge  // ge = tcont
   4a9a8:	mov	x0, x19
   4a9ac:	mov	x2, xzr
   4a9b0:	mov	w3, w20
   4a9b4:	bl	bae0 <mpfr_set_si_2exp@plt>
   4a9b8:	b	4aae4 <mpfr_coth@@Base+0x4cc>
   4a9bc:	mov	x8, xzr
   4a9c0:	b	4a720 <mpfr_coth@@Base+0x108>
   4a9c4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4a9c8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4a9cc:	add	x0, x0, #0x7c7
   4a9d0:	add	x2, x2, #0x238
   4a9d4:	mov	w1, #0x43                  	// #67
   4a9d8:	bl	cb20 <mpfr_assert_fail@plt>
   4a9dc:	b	4a714 <mpfr_coth@@Base+0xfc>
   4a9e0:	str	w8, [x19, #8]
   4a9e4:	str	x10, [x19, #16]
   4a9e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4a9ec:	ldr	x1, [x0, #2640]
   4a9f0:	add	x0, x0, #0xa50
   4a9f4:	blr	x1
   4a9f8:	mrs	x8, tpidr_el0
   4a9fc:	ldr	w9, [x8, x0]
   4aa00:	mov	w21, wzr
   4aa04:	orr	w9, w9, #0x20
   4aa08:	str	w9, [x8, x0]
   4aa0c:	b	4aab0 <mpfr_coth@@Base+0x498>
   4aa10:	ldrsw	x2, [sp, #24]
   4aa14:	add	x0, sp, #0x10
   4aa18:	add	x1, sp, #0x10
   4aa1c:	mov	w3, wzr
   4aa20:	bl	c7e0 <mpfr_add_si@plt>
   4aa24:	ldr	w3, [sp, #24]
   4aa28:	add	x1, sp, #0x10
   4aa2c:	mov	x0, x19
   4aa30:	mov	w2, w20
   4aa34:	bl	c690 <mpfr_set4@plt>
   4aa38:	mov	w21, w0
   4aa3c:	add	x0, sp, #0x10
   4aa40:	bl	c0b0 <mpfr_clear@plt>
   4aa44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4aa48:	ldr	x1, [x0, #2640]
   4aa4c:	add	x0, x0, #0xa50
   4aa50:	blr	x1
   4aa54:	str	w28, [x27, x0]
   4aa58:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4aa5c:	ldr	x1, [x0, #2576]
   4aa60:	add	x0, x0, #0xa10
   4aa64:	blr	x1
   4aa68:	str	x26, [x27, x0]
   4aa6c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4aa70:	ldr	x1, [x0, #2608]
   4aa74:	add	x0, x0, #0xa30
   4aa78:	blr	x1
   4aa7c:	str	x24, [x27, x0]
   4aa80:	ldr	x8, [x19, #16]
   4aa84:	cmp	x8, x24
   4aa88:	b.gt	4aad4 <mpfr_coth@@Base+0x4bc>
   4aa8c:	cmp	x8, x26
   4aa90:	b.lt	4aad4 <mpfr_coth@@Base+0x4bc>  // b.tstop
   4aa94:	cbz	w21, 4aab0 <mpfr_coth@@Base+0x498>
   4aa98:	orr	w8, w28, #0x8
   4aa9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4aaa0:	ldr	x1, [x0, #2640]
   4aaa4:	add	x0, x0, #0xa50
   4aaa8:	blr	x1
   4aaac:	str	w8, [x27, x0]
   4aab0:	mov	w0, w21
   4aab4:	ldp	x20, x19, [sp, #128]
   4aab8:	ldp	x22, x21, [sp, #112]
   4aabc:	ldp	x24, x23, [sp, #96]
   4aac0:	ldp	x26, x25, [sp, #80]
   4aac4:	ldp	x28, x27, [sp, #64]
   4aac8:	ldp	x29, x30, [sp, #48]
   4aacc:	add	sp, sp, #0x90
   4aad0:	ret
   4aad4:	mov	x0, x19
   4aad8:	mov	w1, w21
   4aadc:	mov	w2, w20
   4aae0:	bl	cb10 <mpfr_check_range@plt>
   4aae4:	mov	w21, w0
   4aae8:	b	4aab0 <mpfr_coth@@Base+0x498>

000000000004aaec <mpfr_round_near_x@@Base>:
   4aaec:	stp	x29, x30, [sp, #-96]!
   4aaf0:	str	x27, [sp, #16]
   4aaf4:	stp	x26, x25, [sp, #32]
   4aaf8:	stp	x24, x23, [sp, #48]
   4aafc:	stp	x22, x21, [sp, #64]
   4ab00:	stp	x20, x19, [sp, #80]
   4ab04:	mov	x29, sp
   4ab08:	mov	w22, w3
   4ab0c:	mov	x24, x1
   4ab10:	mov	x19, x0
   4ab14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4ab18:	ldr	x1, [x0, #2640]
   4ab1c:	add	x0, x0, #0xa50
   4ab20:	blr	x1
   4ab24:	ldr	x13, [x19]
   4ab28:	cmp	w4, #0x5
   4ab2c:	csinc	w21, w4, wzr, ne  // ne = any
   4ab30:	add	x8, x13, #0x1
   4ab34:	cmp	x8, x2
   4ab38:	b.cs	4ac6c <mpfr_round_near_x@@Base+0x180>  // b.hs, b.nlast
   4ab3c:	ldr	x10, [x24]
   4ab40:	mrs	x25, tpidr_el0
   4ab44:	ldr	w26, [x25, x0]
   4ab48:	cmp	x10, x2
   4ab4c:	b.cc	4ab84 <mpfr_round_near_x@@Base+0x98>  // b.lo, b.ul, b.last
   4ab50:	sub	x8, x10, #0x1
   4ab54:	ldr	x0, [x24, #24]
   4ab58:	add	x9, x10, #0x3e
   4ab5c:	cmp	x8, #0x0
   4ab60:	csel	x8, x9, x8, lt  // lt = tstop
   4ab64:	cmp	w21, #0x0
   4ab68:	asr	x8, x8, #6
   4ab6c:	add	x1, x8, #0x1
   4ab70:	cinc	x3, x13, eq  // eq = none
   4ab74:	bl	c370 <mpfr_round_p@plt>
   4ab78:	cbz	w0, 4ac6c <mpfr_round_near_x@@Base+0x180>
   4ab7c:	ldr	x10, [x24]
   4ab80:	ldr	x13, [x19]
   4ab84:	ldr	x9, [x24, #16]
   4ab88:	sub	x8, x10, #0x1
   4ab8c:	add	x11, x10, #0x3e
   4ab90:	sub	x12, x13, #0x1
   4ab94:	cmp	x8, #0x0
   4ab98:	ldr	w20, [x24, #8]
   4ab9c:	ldr	x23, [x19, #24]
   4aba0:	csel	x8, x11, x8, lt  // lt = tstop
   4aba4:	add	x11, x13, #0x3e
   4aba8:	cmp	x12, #0x0
   4abac:	csel	x11, x11, x12, lt  // lt = tstop
   4abb0:	asr	x8, x8, #6
   4abb4:	str	x9, [x19, #16]
   4abb8:	asr	x9, x11, #6
   4abbc:	add	x16, x8, #0x1
   4abc0:	cmp	x13, x10
   4abc4:	add	x11, x9, #0x1
   4abc8:	str	w20, [x19, #8]
   4abcc:	b.ge	4af20 <mpfr_round_near_x@@Base+0x434>  // b.tcont
   4abd0:	ldr	x10, [x24, #24]
   4abd4:	neg	w12, w13
   4abd8:	ands	x14, x12, #0x3f
   4abdc:	mvn	x15, x9
   4abe0:	add	x12, x10, x16, lsl #3
   4abe4:	add	x1, x12, x15, lsl #3
   4abe8:	b.eq	4afd8 <mpfr_round_near_x@@Base+0x4ec>  // b.none
   4abec:	ldr	x15, [x1]
   4abf0:	sub	x14, x14, #0x1
   4abf4:	mov	w17, #0x1                   	// #1
   4abf8:	lsl	x17, x17, x14
   4abfc:	sub	x18, x17, #0x1
   4ac00:	and	x14, x15, x17
   4ac04:	and	x15, x15, x18
   4ac08:	cbz	w21, 4ac10 <mpfr_round_near_x@@Base+0x124>
   4ac0c:	cbnz	x14, 4ac38 <mpfr_round_near_x@@Base+0x14c>
   4ac10:	cbnz	x15, 4ac38 <mpfr_round_near_x@@Base+0x14c>
   4ac14:	sub	x16, x16, x11
   4ac18:	cbz	x16, 4ac38 <mpfr_round_near_x@@Base+0x14c>
   4ac1c:	mvn	x15, x9
   4ac20:	add	x16, x15, x8
   4ac24:	ldr	x15, [x10, x16, lsl #3]
   4ac28:	subs	x16, x16, #0x1
   4ac2c:	cset	w18, cs  // cs = hs, nlast
   4ac30:	cbnz	x15, 4ac38 <mpfr_round_near_x@@Base+0x14c>
   4ac34:	tbnz	w18, #0, 4ac24 <mpfr_round_near_x@@Base+0x138>
   4ac38:	lsl	x27, x17, #1
   4ac3c:	cmp	w21, #0x5
   4ac40:	b.eq	4ada0 <mpfr_round_near_x@@Base+0x2b4>  // b.none
   4ac44:	cmp	w21, #0x1
   4ac48:	b.eq	4ac80 <mpfr_round_near_x@@Base+0x194>  // b.none
   4ac4c:	cbnz	w21, 4ac74 <mpfr_round_near_x@@Base+0x188>
   4ac50:	cbz	x14, 4ac80 <mpfr_round_near_x@@Base+0x194>
   4ac54:	cbnz	w22, 4aca0 <mpfr_round_near_x@@Base+0x1b4>
   4ac58:	cbnz	x15, 4aca0 <mpfr_round_near_x@@Base+0x1b4>
   4ac5c:	neg	w24, w20
   4ac60:	cmp	x23, x1
   4ac64:	b.ne	4adac <mpfr_round_near_x@@Base+0x2c0>  // b.any
   4ac68:	b	4adb8 <mpfr_round_near_x@@Base+0x2cc>
   4ac6c:	mov	w24, wzr
   4ac70:	b	4afb8 <mpfr_round_near_x@@Base+0x4cc>
   4ac74:	add	w16, w21, w20, lsr #31
   4ac78:	cmp	w16, #0x3
   4ac7c:	b.ne	4ac98 <mpfr_round_near_x@@Base+0x1ac>  // b.any
   4ac80:	orr	x8, x15, x14
   4ac84:	cmp	x8, #0x0
   4ac88:	csneg	w24, wzr, w20, eq  // eq = none
   4ac8c:	cmp	x23, x1
   4ac90:	b.ne	4adac <mpfr_round_near_x@@Base+0x2c0>  // b.any
   4ac94:	b	4adb8 <mpfr_round_near_x@@Base+0x2cc>
   4ac98:	orr	x14, x15, x14
   4ac9c:	cbz	x14, 4ada0 <mpfr_round_near_x@@Base+0x2b4>
   4aca0:	ldr	x14, [x1]
   4aca4:	adds	x14, x14, x27
   4aca8:	str	x14, [x23]
   4acac:	b.cc	4ae1c <mpfr_round_near_x@@Base+0x330>  // b.lo, b.ul, b.last
   4acb0:	mov	x17, xzr
   4acb4:	mov	x15, xzr
   4acb8:	mov	x13, x9
   4acbc:	add	x14, x15, #0x1
   4acc0:	cmp	x14, x9
   4acc4:	b.gt	4ae9c <mpfr_round_near_x@@Base+0x3b0>
   4acc8:	lsl	x15, x15, #3
   4accc:	add	x16, x1, x15
   4acd0:	ldr	x16, [x16, #8]
   4acd4:	add	x15, x23, x15
   4acd8:	sub	x17, x17, #0x8
   4acdc:	sub	x13, x13, #0x1
   4ace0:	adds	x16, x16, #0x1
   4ace4:	str	x16, [x15, #8]
   4ace8:	mov	x15, x14
   4acec:	b.cs	4acbc <mpfr_round_near_x@@Base+0x1d0>  // b.hs, b.nlast
   4acf0:	cmp	x1, x23
   4acf4:	mov	w24, w20
   4acf8:	b.eq	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.none
   4acfc:	cmp	x14, x9
   4ad00:	mov	w24, w20
   4ad04:	b.ge	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.tcont
   4ad08:	sub	x16, x9, x14
   4ad0c:	cmp	x16, #0x4
   4ad10:	add	x15, x14, #0x1
   4ad14:	b.cc	4ad7c <mpfr_round_near_x@@Base+0x290>  // b.lo, b.ul, b.last
   4ad18:	sub	x18, x23, x17
   4ad1c:	add	x0, x18, #0x8
   4ad20:	cmp	x0, x12
   4ad24:	sub	x12, x1, x17
   4ad28:	b.cs	4ad3c <mpfr_round_near_x@@Base+0x250>  // b.hs, b.nlast
   4ad2c:	add	x11, x23, x11, lsl #3
   4ad30:	add	x17, x12, #0x8
   4ad34:	cmp	x17, x11
   4ad38:	b.cc	4ad7c <mpfr_round_near_x@@Base+0x290>  // b.lo, b.ul, b.last
   4ad3c:	and	x13, x13, #0xfffffffffffffffc
   4ad40:	and	x17, x16, #0xfffffffffffffffc
   4ad44:	add	x13, x13, x14
   4ad48:	add	x11, x18, #0x18
   4ad4c:	add	x12, x12, #0x18
   4ad50:	add	x15, x13, #0x1
   4ad54:	mov	x13, x17
   4ad58:	ldp	q0, q1, [x12, #-16]
   4ad5c:	add	x12, x12, #0x20
   4ad60:	subs	x13, x13, #0x4
   4ad64:	stp	q0, q1, [x11, #-16]
   4ad68:	add	x11, x11, #0x20
   4ad6c:	b.ne	4ad58 <mpfr_round_near_x@@Base+0x26c>  // b.any
   4ad70:	cmp	x16, x17
   4ad74:	mov	w24, w20
   4ad78:	b.eq	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.none
   4ad7c:	sub	x9, x15, x9
   4ad80:	add	x11, x23, x15, lsl #3
   4ad84:	add	x8, x10, x8, lsl #3
   4ad88:	ldr	x10, [x8, x9, lsl #3]
   4ad8c:	add	x9, x9, #0x1
   4ad90:	cmp	x9, #0x1
   4ad94:	str	x10, [x11], #8
   4ad98:	b.ne	4ad88 <mpfr_round_near_x@@Base+0x29c>  // b.any
   4ad9c:	b	4ae84 <mpfr_round_near_x@@Base+0x398>
   4ada0:	mov	w24, wzr
   4ada4:	cmp	x23, x1
   4ada8:	b.eq	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.none
   4adac:	lsl	x2, x11, #3
   4adb0:	mov	x0, x23
   4adb4:	bl	ba70 <memcpy@plt>
   4adb8:	ldr	x8, [x23]
   4adbc:	neg	x9, x27
   4adc0:	and	x8, x8, x9
   4adc4:	str	x8, [x23]
   4adc8:	cbnz	w24, 4af9c <mpfr_round_near_x@@Base+0x4b0>
   4adcc:	cbz	w22, 4af50 <mpfr_round_near_x@@Base+0x464>
   4add0:	cmp	w21, #0x4
   4add4:	b.eq	4ade8 <mpfr_round_near_x@@Base+0x2fc>  // b.none
   4add8:	mvn	w8, w20
   4addc:	add	w8, w21, w8, lsr #31
   4ade0:	cmp	w8, #0x3
   4ade4:	b.ne	4ae8c <mpfr_round_near_x@@Base+0x3a0>  // b.any
   4ade8:	mov	x0, x19
   4adec:	bl	c660 <mpfr_nexttoinf@plt>
   4adf0:	ldr	x8, [x19, #16]
   4adf4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4adf8:	cmp	x8, x9
   4adfc:	b.ne	4af94 <mpfr_round_near_x@@Base+0x4a8>  // b.any
   4ae00:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4ae04:	ldr	x1, [x0, #2640]
   4ae08:	add	x0, x0, #0xa50
   4ae0c:	blr	x1
   4ae10:	ldr	w8, [x25, x0]
   4ae14:	orr	w8, w8, #0x2
   4ae18:	b	4b040 <mpfr_round_near_x@@Base+0x554>
   4ae1c:	cmp	x13, #0x41
   4ae20:	mov	w24, w20
   4ae24:	b.lt	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.tstop
   4ae28:	cmp	x1, x23
   4ae2c:	mov	w24, w20
   4ae30:	b.eq	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.none
   4ae34:	cmp	x9, #0x4
   4ae38:	b.cc	4ae60 <mpfr_round_near_x@@Base+0x374>  // b.lo, b.ul, b.last
   4ae3c:	add	x13, x23, #0x8
   4ae40:	sub	x14, x8, x9
   4ae44:	cmp	x13, x12
   4ae48:	add	x13, x10, x14, lsl #3
   4ae4c:	b.cs	4aee4 <mpfr_round_near_x@@Base+0x3f8>  // b.hs, b.nlast
   4ae50:	add	x11, x23, x11, lsl #3
   4ae54:	add	x12, x13, #0x8
   4ae58:	cmp	x12, x11
   4ae5c:	b.cs	4aee4 <mpfr_round_near_x@@Base+0x3f8>  // b.hs, b.nlast
   4ae60:	mov	w11, #0x1                   	// #1
   4ae64:	sub	x9, x11, x9
   4ae68:	add	x11, x23, x11, lsl #3
   4ae6c:	add	x8, x10, x8, lsl #3
   4ae70:	ldr	x10, [x8, x9, lsl #3]
   4ae74:	add	x9, x9, #0x1
   4ae78:	cmp	x9, #0x1
   4ae7c:	str	x10, [x11], #8
   4ae80:	b.ne	4ae70 <mpfr_round_near_x@@Base+0x384>  // b.any
   4ae84:	mov	w24, w20
   4ae88:	b	4adb8 <mpfr_round_near_x@@Base+0x2cc>
   4ae8c:	neg	w20, w20
   4ae90:	mov	w24, w20
   4ae94:	cbnz	w20, 4af9c <mpfr_round_near_x@@Base+0x4b0>
   4ae98:	b	4afb8 <mpfr_round_near_x@@Base+0x4cc>
   4ae9c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   4aea0:	str	x8, [x23, x9, lsl #3]
   4aea4:	ldr	x8, [x19, #16]
   4aea8:	add	x9, x8, #0x1
   4aeac:	str	x9, [x19, #16]
   4aeb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4aeb4:	ldr	x1, [x0, #2608]
   4aeb8:	add	x0, x0, #0xa30
   4aebc:	blr	x1
   4aec0:	ldr	x9, [x25, x0]
   4aec4:	mov	w24, w20
   4aec8:	cmp	x8, x9
   4aecc:	b.lt	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.tstop
   4aed0:	mov	x0, x19
   4aed4:	mov	w1, w21
   4aed8:	mov	w2, w20
   4aedc:	bl	bf90 <mpfr_overflow@plt>
   4aee0:	b	4ae84 <mpfr_round_near_x@@Base+0x398>
   4aee4:	and	x12, x9, #0xfffffffffffffffc
   4aee8:	add	x13, x13, #0x18
   4aeec:	orr	x11, x12, #0x1
   4aef0:	add	x14, x23, #0x18
   4aef4:	mov	x15, x12
   4aef8:	ldp	q0, q1, [x13, #-16]
   4aefc:	add	x13, x13, #0x20
   4af00:	subs	x15, x15, #0x4
   4af04:	stp	q0, q1, [x14, #-16]
   4af08:	add	x14, x14, #0x20
   4af0c:	b.ne	4aef8 <mpfr_round_near_x@@Base+0x40c>  // b.any
   4af10:	cmp	x9, x12
   4af14:	mov	w24, w20
   4af18:	b.eq	4adb8 <mpfr_round_near_x@@Base+0x2cc>  // b.none
   4af1c:	b	4ae64 <mpfr_round_near_x@@Base+0x378>
   4af20:	ldr	x1, [x24, #24]
   4af24:	sub	x24, x11, x16
   4af28:	add	x0, x23, x24, lsl #3
   4af2c:	cmp	x0, x1
   4af30:	b.eq	4af3c <mpfr_round_near_x@@Base+0x450>  // b.none
   4af34:	lsl	x2, x16, #3
   4af38:	bl	ba70 <memcpy@plt>
   4af3c:	lsl	x2, x24, #3
   4af40:	mov	x0, x23
   4af44:	mov	w1, wzr
   4af48:	bl	c150 <memset@plt>
   4af4c:	cbnz	w22, 4add0 <mpfr_round_near_x@@Base+0x2e4>
   4af50:	cmp	w21, #0x1
   4af54:	b.eq	4af64 <mpfr_round_near_x@@Base+0x478>  // b.none
   4af58:	add	w8, w21, w20, lsr #31
   4af5c:	cmp	w8, #0x3
   4af60:	b.ne	4af94 <mpfr_round_near_x@@Base+0x4a8>  // b.any
   4af64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4af68:	ldr	x1, [x0, #2640]
   4af6c:	add	x0, x0, #0xa50
   4af70:	blr	x1
   4af74:	str	w26, [x25, x0]
   4af78:	mov	x0, x19
   4af7c:	neg	w20, w20
   4af80:	bl	c450 <mpfr_nexttozero@plt>
   4af84:	ldr	x8, [x19, #16]
   4af88:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4af8c:	cmp	x8, x9
   4af90:	b.eq	4b028 <mpfr_round_near_x@@Base+0x53c>  // b.none
   4af94:	mov	w24, w20
   4af98:	cbz	w20, 4afb8 <mpfr_round_near_x@@Base+0x4cc>
   4af9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4afa0:	ldr	x1, [x0, #2640]
   4afa4:	add	x0, x0, #0xa50
   4afa8:	blr	x1
   4afac:	ldr	w8, [x25, x0]
   4afb0:	orr	w8, w8, #0x8
   4afb4:	str	w8, [x25, x0]
   4afb8:	mov	w0, w24
   4afbc:	ldp	x20, x19, [sp, #80]
   4afc0:	ldp	x22, x21, [sp, #64]
   4afc4:	ldp	x24, x23, [sp, #48]
   4afc8:	ldp	x26, x25, [sp, #32]
   4afcc:	ldr	x27, [sp, #16]
   4afd0:	ldp	x29, x30, [sp], #96
   4afd4:	ret
   4afd8:	ldur	x15, [x1, #-8]
   4afdc:	and	x14, x15, #0x8000000000000000
   4afe0:	and	x15, x15, #0x7fffffffffffffff
   4afe4:	cbz	w21, 4aff4 <mpfr_round_near_x@@Base+0x508>
   4afe8:	cbz	x14, 4aff4 <mpfr_round_near_x@@Base+0x508>
   4afec:	mov	w27, #0x1                   	// #1
   4aff0:	b	4ac3c <mpfr_round_near_x@@Base+0x150>
   4aff4:	mov	w27, #0x1                   	// #1
   4aff8:	cbnz	x15, 4ac3c <mpfr_round_near_x@@Base+0x150>
   4affc:	sub	x16, x8, x11
   4b000:	cbz	x16, 4ac3c <mpfr_round_near_x@@Base+0x150>
   4b004:	sub	x15, x8, x9
   4b008:	sub	x16, x15, #0x2
   4b00c:	mov	w27, #0x1                   	// #1
   4b010:	ldr	x15, [x10, x16, lsl #3]
   4b014:	subs	x16, x16, #0x1
   4b018:	cset	w17, cs  // cs = hs, nlast
   4b01c:	cbnz	x15, 4ac3c <mpfr_round_near_x@@Base+0x150>
   4b020:	tbnz	w17, #0, 4b010 <mpfr_round_near_x@@Base+0x524>
   4b024:	b	4ac3c <mpfr_round_near_x@@Base+0x150>
   4b028:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b02c:	ldr	x1, [x0, #2640]
   4b030:	add	x0, x0, #0xa50
   4b034:	blr	x1
   4b038:	ldr	w8, [x25, x0]
   4b03c:	orr	w8, w8, #0x1
   4b040:	str	w8, [x25, x0]
   4b044:	mov	w24, w20
   4b048:	cbnz	w20, 4af9c <mpfr_round_near_x@@Base+0x4b0>
   4b04c:	b	4afb8 <mpfr_round_near_x@@Base+0x4cc>

000000000004b050 <mpfr_abort_prec_max@@Base>:
   4b050:	stp	x29, x30, [sp, #-16]!
   4b054:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   4b058:	ldr	x8, [x8, #3976]
   4b05c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4b060:	add	x0, x0, #0x7f8
   4b064:	mov	w1, #0x21                  	// #33
   4b068:	ldr	x3, [x8]
   4b06c:	mov	w2, #0x1                   	// #1
   4b070:	mov	x29, sp
   4b074:	bl	c8c0 <fwrite@plt>
   4b078:	bl	c3e0 <abort@plt>

000000000004b07c <mpfr_custom_get_size@@Base>:
   4b07c:	sub	x8, x0, #0x1
   4b080:	add	x9, x0, #0x3e
   4b084:	cmp	x8, #0x0
   4b088:	csel	x8, x9, x8, lt  // lt = tstop
   4b08c:	asr	x8, x8, #6
   4b090:	lsl	x8, x8, #3
   4b094:	add	x0, x8, #0x8
   4b098:	ret

000000000004b09c <mpfr_custom_init@@Base>:
   4b09c:	ret

000000000004b0a0 <mpfr_custom_get_significand@@Base>:
   4b0a0:	ldr	x0, [x0, #24]
   4b0a4:	ret

000000000004b0a8 <mpfr_custom_get_exp@@Base>:
   4b0a8:	ldr	x0, [x0, #16]
   4b0ac:	ret

000000000004b0b0 <mpfr_custom_move@@Base>:
   4b0b0:	str	x1, [x0, #24]
   4b0b4:	ret

000000000004b0b8 <mpfr_custom_init_set@@Base>:
   4b0b8:	cmp	w1, #0x0
   4b0bc:	mov	w8, #0x1                   	// #1
   4b0c0:	cneg	w9, w1, mi  // mi = first
   4b0c4:	cneg	w8, w8, lt  // lt = tstop
   4b0c8:	cmp	w9, #0x3
   4b0cc:	b.ne	4b0e0 <mpfr_custom_init_set@@Base+0x28>  // b.any
   4b0d0:	str	x3, [x0]
   4b0d4:	str	w8, [x0, #8]
   4b0d8:	stp	x2, x4, [x0, #16]
   4b0dc:	ret
   4b0e0:	cbz	w9, 4b104 <mpfr_custom_init_set@@Base+0x4c>
   4b0e4:	cmp	w9, #0x1
   4b0e8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4b0ec:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   4b0f0:	csel	x2, x10, x9, eq  // eq = none
   4b0f4:	str	x3, [x0]
   4b0f8:	str	w8, [x0, #8]
   4b0fc:	stp	x2, x4, [x0, #16]
   4b100:	ret
   4b104:	mov	x2, #0x2                   	// #2
   4b108:	movk	x2, #0x8000, lsl #48
   4b10c:	str	x3, [x0]
   4b110:	str	w8, [x0, #8]
   4b114:	stp	x2, x4, [x0, #16]
   4b118:	ret

000000000004b11c <mpfr_custom_get_kind@@Base>:
   4b11c:	ldr	x8, [x0, #16]
   4b120:	mov	x9, #0x4                   	// #4
   4b124:	movk	x9, #0x8000, lsl #48
   4b128:	cmp	x8, x9
   4b12c:	b.lt	4b13c <mpfr_custom_get_kind@@Base+0x20>  // b.tstop
   4b130:	ldr	w8, [x0, #8]
   4b134:	add	w0, w8, w8, lsl #1
   4b138:	ret
   4b13c:	mov	x9, #0x2                   	// #2
   4b140:	movk	x9, #0x8000, lsl #48
   4b144:	cmp	x8, x9
   4b148:	b.eq	4b160 <mpfr_custom_get_kind@@Base+0x44>  // b.none
   4b14c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4b150:	cmp	x8, x9
   4b154:	b.ne	4b168 <mpfr_custom_get_kind@@Base+0x4c>  // b.any
   4b158:	ldr	w0, [x0, #8]
   4b15c:	ret
   4b160:	mov	w0, wzr
   4b164:	ret
   4b168:	ldr	w8, [x0, #8]
   4b16c:	lsl	w0, w8, #1
   4b170:	ret

000000000004b174 <mpfr_lngamma@@Base>:
   4b174:	stp	x29, x30, [sp, #-48]!
   4b178:	stp	x22, x21, [sp, #16]
   4b17c:	stp	x20, x19, [sp, #32]
   4b180:	ldr	x8, [x1, #16]
   4b184:	mov	x22, #0x2                   	// #2
   4b188:	movk	x22, #0x8000, lsl #48
   4b18c:	add	x9, x22, #0x2
   4b190:	cmp	x8, x9
   4b194:	mov	x19, x0
   4b198:	mov	x29, sp
   4b19c:	b.lt	4b270 <mpfr_lngamma@@Base+0xfc>  // b.tstop
   4b1a0:	ldr	w8, [x1, #8]
   4b1a4:	mov	w20, w2
   4b1a8:	mov	x21, x1
   4b1ac:	tbz	w8, #31, 4b1c4 <mpfr_lngamma@@Base+0x50>
   4b1b0:	mov	x0, x21
   4b1b4:	bl	c1a0 <mpfr_integer_p@plt>
   4b1b8:	cbnz	w0, 4b26c <mpfr_lngamma@@Base+0xf8>
   4b1bc:	ldr	w8, [x21, #8]
   4b1c0:	tbnz	w8, #31, 4b1e0 <mpfr_lngamma@@Base+0x6c>
   4b1c4:	mov	x0, x19
   4b1c8:	mov	x1, x21
   4b1cc:	mov	w2, w20
   4b1d0:	ldp	x20, x19, [sp, #32]
   4b1d4:	ldp	x22, x21, [sp, #16]
   4b1d8:	ldp	x29, x30, [sp], #48
   4b1dc:	b	4b2bc <mpfr_lngamma@@Base+0x148>
   4b1e0:	ldr	x8, [x21, #16]
   4b1e4:	cmp	x8, #0x1
   4b1e8:	b.lt	4b234 <mpfr_lngamma@@Base+0xc0>  // b.tstop
   4b1ec:	ldr	x9, [x21]
   4b1f0:	cmp	x8, x9
   4b1f4:	b.gt	4b234 <mpfr_lngamma@@Base+0xc0>
   4b1f8:	sub	x10, x9, #0x1
   4b1fc:	add	x9, x9, #0x3e
   4b200:	cmp	x10, #0x0
   4b204:	csel	x9, x9, x10, lt  // lt = tstop
   4b208:	and	x9, x9, #0xffffffffffffffc0
   4b20c:	sub	x8, x9, x8
   4b210:	ldr	x11, [x21, #24]
   4b214:	add	x9, x8, #0x40
   4b218:	add	x8, x8, #0x7f
   4b21c:	cmp	x9, #0x0
   4b220:	csel	x8, x8, x9, lt  // lt = tstop
   4b224:	asr	x8, x8, #6
   4b228:	ldr	x8, [x11, x8, lsl #3]
   4b22c:	lsr	x8, x8, x9
   4b230:	tbnz	w8, #0, 4b1c4 <mpfr_lngamma@@Base+0x50>
   4b234:	str	x22, [x19, #16]
   4b238:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b23c:	ldr	x1, [x0, #2640]
   4b240:	add	x0, x0, #0xa50
   4b244:	blr	x1
   4b248:	mrs	x8, tpidr_el0
   4b24c:	ldr	w9, [x8, x0]
   4b250:	orr	w9, w9, #0x4
   4b254:	str	w9, [x8, x0]
   4b258:	ldp	x20, x19, [sp, #32]
   4b25c:	ldp	x22, x21, [sp, #16]
   4b260:	mov	w0, wzr
   4b264:	ldp	x29, x30, [sp], #48
   4b268:	ret
   4b26c:	ldr	x8, [x21, #16]
   4b270:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4b274:	cmp	x8, x9
   4b278:	b.eq	4b2ac <mpfr_lngamma@@Base+0x138>  // b.none
   4b27c:	mov	x10, #0x2                   	// #2
   4b280:	movk	x10, #0x8000, lsl #48
   4b284:	cmp	x8, x10
   4b288:	b.eq	4b234 <mpfr_lngamma@@Base+0xc0>  // b.none
   4b28c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b290:	ldr	x1, [x0, #2640]
   4b294:	add	x0, x0, #0xa50
   4b298:	blr	x1
   4b29c:	mrs	x8, tpidr_el0
   4b2a0:	ldr	w10, [x8, x0]
   4b2a4:	orr	w10, w10, #0x20
   4b2a8:	str	w10, [x8, x0]
   4b2ac:	mov	w8, #0x1                   	// #1
   4b2b0:	str	x9, [x19, #16]
   4b2b4:	str	w8, [x19, #8]
   4b2b8:	b	4b258 <mpfr_lngamma@@Base+0xe4>
   4b2bc:	sub	sp, sp, #0x1b0
   4b2c0:	stp	x24, x23, [sp, #384]
   4b2c4:	mov	x24, x1
   4b2c8:	stp	x28, x27, [sp, #352]
   4b2cc:	str	w2, [sp, #124]
   4b2d0:	mov	x28, x0
   4b2d4:	mov	w1, #0x1                   	// #1
   4b2d8:	mov	x0, x24
   4b2dc:	mov	x2, xzr
   4b2e0:	stp	d9, d8, [sp, #320]
   4b2e4:	stp	x29, x30, [sp, #336]
   4b2e8:	stp	x26, x25, [sp, #368]
   4b2ec:	stp	x22, x21, [sp, #400]
   4b2f0:	stp	x20, x19, [sp, #416]
   4b2f4:	add	x29, sp, #0x140
   4b2f8:	mov	w19, #0x1                   	// #1
   4b2fc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4b300:	mov	w22, w0
   4b304:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b308:	ldr	x1, [x0, #2640]
   4b30c:	add	x0, x0, #0xa50
   4b310:	blr	x1
   4b314:	mrs	x10, tpidr_el0
   4b318:	ldr	w20, [x10, x0]
   4b31c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b320:	ldr	x1, [x0, #2576]
   4b324:	add	x0, x0, #0xa10
   4b328:	blr	x1
   4b32c:	ldr	x21, [x10, x0]
   4b330:	mov	x8, x0
   4b334:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b338:	ldr	x1, [x0, #2608]
   4b33c:	add	x0, x0, #0xa30
   4b340:	blr	x1
   4b344:	ldr	x23, [x10, x0]
   4b348:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4b34c:	str	x9, [x10, x8]
   4b350:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4b354:	str	x10, [sp, #136]
   4b358:	str	x8, [x10, x0]
   4b35c:	cbz	w22, 4b450 <mpfr_lngamma@@Base+0x2dc>
   4b360:	cmp	w22, #0x1
   4b364:	b.lt	4b588 <mpfr_lngamma@@Base+0x414>  // b.tstop
   4b368:	mov	w1, #0x2                   	// #2
   4b36c:	mov	x0, x24
   4b370:	mov	x2, xzr
   4b374:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4b378:	cbz	w0, 4b450 <mpfr_lngamma@@Base+0x2dc>
   4b37c:	ldr	x8, [x28]
   4b380:	ldr	x9, [x24, #16]
   4b384:	add	x10, x8, #0x2
   4b388:	cmp	x9, x10
   4b38c:	b.lt	4b588 <mpfr_lngamma@@Base+0x414>  // b.tstop
   4b390:	add	x9, x8, #0xa
   4b394:	cmp	x8, #0x33
   4b398:	mov	w8, #0x3e                  	// #62
   4b39c:	csel	x1, x9, x8, gt
   4b3a0:	sub	x0, x29, #0x48
   4b3a4:	bl	ca60 <mpfr_init2@plt>
   4b3a8:	sub	x0, x29, #0x48
   4b3ac:	mov	w2, #0x2                   	// #2
   4b3b0:	mov	x1, x24
   4b3b4:	bl	c0d0 <mpfr_log@plt>
   4b3b8:	sub	x0, x29, #0x48
   4b3bc:	sub	x1, x29, #0x48
   4b3c0:	mov	w2, #0x1                   	// #1
   4b3c4:	mov	w3, #0x2                   	// #2
   4b3c8:	bl	c520 <mpfr_sub_ui@plt>
   4b3cc:	sub	x0, x29, #0x48
   4b3d0:	sub	x2, x29, #0x48
   4b3d4:	mov	w3, #0x2                   	// #2
   4b3d8:	mov	x1, x24
   4b3dc:	bl	bda0 <mpfr_mul@plt>
   4b3e0:	ldur	x8, [x29, #-56]
   4b3e4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4b3e8:	cmp	x8, x9
   4b3ec:	b.ne	4b4a4 <mpfr_lngamma@@Base+0x330>  // b.any
   4b3f0:	sub	x0, x29, #0x48
   4b3f4:	bl	c0b0 <mpfr_clear@plt>
   4b3f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b3fc:	ldr	x1, [x0, #2640]
   4b400:	add	x0, x0, #0xa50
   4b404:	blr	x1
   4b408:	ldr	x8, [sp, #136]
   4b40c:	str	w20, [x8, x0]
   4b410:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b414:	ldr	x1, [x0, #2576]
   4b418:	add	x0, x0, #0xa10
   4b41c:	blr	x1
   4b420:	str	x21, [x8, x0]
   4b424:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b428:	ldr	x1, [x0, #2608]
   4b42c:	add	x0, x0, #0xa30
   4b430:	blr	x1
   4b434:	ldr	w1, [sp, #124]
   4b438:	str	x23, [x8, x0]
   4b43c:	mov	w2, #0x1                   	// #1
   4b440:	mov	x0, x28
   4b444:	bl	bf90 <mpfr_overflow@plt>
   4b448:	mov	w26, w0
   4b44c:	b	4c4bc <mpfr_lngamma@@Base+0x1348>
   4b450:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b454:	ldr	x1, [x0, #2640]
   4b458:	add	x0, x0, #0xa50
   4b45c:	blr	x1
   4b460:	ldr	x8, [sp, #136]
   4b464:	str	w20, [x8, x0]
   4b468:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b46c:	ldr	x1, [x0, #2576]
   4b470:	add	x0, x0, #0xa10
   4b474:	blr	x1
   4b478:	str	x21, [x8, x0]
   4b47c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b480:	ldr	x1, [x0, #2608]
   4b484:	add	x0, x0, #0xa30
   4b488:	blr	x1
   4b48c:	str	x23, [x8, x0]
   4b490:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4b494:	mov	w26, wzr
   4b498:	str	w19, [x28, #8]
   4b49c:	str	x8, [x28, #16]
   4b4a0:	b	4c4bc <mpfr_lngamma@@Base+0x1348>
   4b4a4:	mov	x9, #0xfffffffffffffeff    	// #-257
   4b4a8:	movk	x9, #0x7fff, lsl #48
   4b4ac:	add	x9, x9, #0x105
   4b4b0:	cmp	x8, x9
   4b4b4:	b.lt	4b580 <mpfr_lngamma@@Base+0x40c>  // b.tstop
   4b4b8:	ldur	x9, [x29, #-72]
   4b4bc:	sub	x8, x8, x9
   4b4c0:	cmp	x8, #0x3e
   4b4c4:	b.lt	4b580 <mpfr_lngamma@@Base+0x40c>  // b.tstop
   4b4c8:	sub	x8, x9, #0x1
   4b4cc:	add	x10, x9, #0x3e
   4b4d0:	cmp	x8, #0x0
   4b4d4:	csel	x8, x10, x8, lt  // lt = tstop
   4b4d8:	ldr	w10, [sp, #124]
   4b4dc:	sub	x2, x9, #0x3
   4b4e0:	ldr	x9, [x28]
   4b4e4:	ldur	x0, [x29, #-48]
   4b4e8:	cmp	w10, #0x0
   4b4ec:	asr	x8, x8, #6
   4b4f0:	add	x1, x8, #0x1
   4b4f4:	cinc	x3, x9, eq  // eq = none
   4b4f8:	bl	c370 <mpfr_round_p@plt>
   4b4fc:	cbz	w0, 4b580 <mpfr_lngamma@@Base+0x40c>
   4b500:	ldur	w3, [x29, #-64]
   4b504:	ldr	w2, [sp, #124]
   4b508:	sub	x1, x29, #0x48
   4b50c:	mov	x0, x28
   4b510:	bl	c690 <mpfr_set4@plt>
   4b514:	mov	w26, w0
   4b518:	sub	x0, x29, #0x48
   4b51c:	bl	c0b0 <mpfr_clear@plt>
   4b520:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b524:	ldr	x1, [x0, #2640]
   4b528:	add	x0, x0, #0xa50
   4b52c:	blr	x1
   4b530:	ldr	x8, [sp, #136]
   4b534:	str	w20, [x8, x0]
   4b538:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b53c:	ldr	x1, [x0, #2576]
   4b540:	add	x0, x0, #0xa10
   4b544:	blr	x1
   4b548:	str	x21, [x8, x0]
   4b54c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b550:	ldr	x1, [x0, #2608]
   4b554:	add	x0, x0, #0xa30
   4b558:	blr	x1
   4b55c:	str	x23, [x8, x0]
   4b560:	ldr	x8, [x28, #16]
   4b564:	cmp	x8, x23
   4b568:	b.gt	4c570 <mpfr_lngamma@@Base+0x13fc>
   4b56c:	cmp	x8, x21
   4b570:	b.lt	4c570 <mpfr_lngamma@@Base+0x13fc>  // b.tstop
   4b574:	cbz	w26, 4c4bc <mpfr_lngamma@@Base+0x1348>
   4b578:	orr	w8, w20, #0x8
   4b57c:	b	4c4a4 <mpfr_lngamma@@Base+0x1330>
   4b580:	sub	x0, x29, #0x48
   4b584:	bl	c0b0 <mpfr_clear@plt>
   4b588:	stp	x23, x21, [sp, #64]
   4b58c:	ldr	x23, [x28]
   4b590:	ldr	x8, [x24, #16]
   4b594:	str	w20, [sp, #84]
   4b598:	str	x24, [sp, #144]
   4b59c:	neg	x9, x23
   4b5a0:	cmp	x8, x9
   4b5a4:	b.gt	4b7fc <mpfr_lngamma@@Base+0x688>
   4b5a8:	mov	x21, x24
   4b5ac:	adrp	x24, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4b5b0:	adrp	x25, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4b5b4:	add	x23, x23, #0xe
   4b5b8:	mov	w20, #0x40                  	// #64
   4b5bc:	mov	w27, #0x2                   	// #2
   4b5c0:	add	x24, x24, #0x56f
   4b5c4:	add	x25, x25, #0x622
   4b5c8:	sub	x0, x29, #0x28
   4b5cc:	mov	x1, x23
   4b5d0:	bl	ca60 <mpfr_init2@plt>
   4b5d4:	ldr	w8, [x21, #8]
   4b5d8:	cmp	w8, #0x1
   4b5dc:	b.lt	4b600 <mpfr_lngamma@@Base+0x48c>  // b.tstop
   4b5e0:	sub	x0, x29, #0x28
   4b5e4:	mov	w2, #0x2                   	// #2
   4b5e8:	mov	x1, x21
   4b5ec:	bl	c0d0 <mpfr_log@plt>
   4b5f0:	ldur	x1, [x29, #-40]
   4b5f4:	sub	x0, x29, #0x68
   4b5f8:	bl	ca60 <mpfr_init2@plt>
   4b5fc:	b	4b638 <mpfr_lngamma@@Base+0x4c4>
   4b600:	ldr	x1, [x21]
   4b604:	sub	x0, x29, #0x68
   4b608:	bl	ca60 <mpfr_init2@plt>
   4b60c:	sub	x0, x29, #0x68
   4b610:	mov	x1, x21
   4b614:	mov	w2, wzr
   4b618:	bl	bdc0 <mpfr_neg@plt>
   4b61c:	sub	x0, x29, #0x28
   4b620:	sub	x1, x29, #0x68
   4b624:	mov	w2, #0x2                   	// #2
   4b628:	bl	c0d0 <mpfr_log@plt>
   4b62c:	ldur	x1, [x29, #-40]
   4b630:	sub	x0, x29, #0x68
   4b634:	bl	bf20 <mpfr_set_prec@plt>
   4b638:	sub	x0, x29, #0x28
   4b63c:	sub	x1, x29, #0x28
   4b640:	mov	w2, #0x3                   	// #3
   4b644:	bl	bdc0 <mpfr_neg@plt>
   4b648:	ldur	w3, [x29, #-32]
   4b64c:	sub	x0, x29, #0x68
   4b650:	sub	x1, x29, #0x28
   4b654:	mov	w2, #0x3                   	// #3
   4b658:	bl	c690 <mpfr_set4@plt>
   4b65c:	sub	x0, x29, #0x68
   4b660:	bl	c160 <mpfr_nextabove@plt>
   4b664:	ldur	x1, [x29, #-40]
   4b668:	sub	x0, x29, #0x88
   4b66c:	bl	ca60 <mpfr_init2@plt>
   4b670:	ldr	w8, [x21, #8]
   4b674:	cmp	w8, #0x0
   4b678:	cinc	w2, w27, le
   4b67c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4b680:	ldr	x1, [x0, #2672]
   4b684:	add	x0, x0, #0xa70
   4b688:	blr	x1
   4b68c:	ldr	x8, [sp, #136]
   4b690:	add	x19, x8, x0
   4b694:	sub	x0, x29, #0x88
   4b698:	mov	x1, x19
   4b69c:	bl	c380 <mpfr_cache@plt>
   4b6a0:	sub	x0, x29, #0x88
   4b6a4:	sub	x1, x29, #0x88
   4b6a8:	mov	w3, #0x3                   	// #3
   4b6ac:	mov	x2, x21
   4b6b0:	bl	bda0 <mpfr_mul@plt>
   4b6b4:	sub	x0, x29, #0x28
   4b6b8:	sub	x1, x29, #0x28
   4b6bc:	sub	x2, x29, #0x88
   4b6c0:	mov	w3, #0x3                   	// #3
   4b6c4:	bl	bbc0 <mpfr_sub@plt>
   4b6c8:	ldr	w8, [x21, #8]
   4b6cc:	sub	x0, x29, #0x88
   4b6d0:	mov	x1, x19
   4b6d4:	cmp	w8, #0x0
   4b6d8:	cinc	w2, w27, gt
   4b6dc:	bl	c380 <mpfr_cache@plt>
   4b6e0:	sub	x0, x29, #0x88
   4b6e4:	sub	x1, x29, #0x88
   4b6e8:	mov	w3, #0x2                   	// #2
   4b6ec:	mov	x2, x21
   4b6f0:	bl	bda0 <mpfr_mul@plt>
   4b6f4:	sub	x0, x29, #0x68
   4b6f8:	sub	x1, x29, #0x68
   4b6fc:	sub	x2, x29, #0x88
   4b700:	mov	w3, #0x3                   	// #3
   4b704:	bl	bbc0 <mpfr_sub@plt>
   4b708:	sub	x0, x29, #0x88
   4b70c:	mov	w3, #0x2                   	// #2
   4b710:	mov	x1, x21
   4b714:	mov	x2, x21
   4b718:	bl	bda0 <mpfr_mul@plt>
   4b71c:	sub	x0, x29, #0x68
   4b720:	sub	x1, x29, #0x68
   4b724:	sub	x2, x29, #0x88
   4b728:	mov	w3, #0x2                   	// #2
   4b72c:	bl	c1e0 <mpfr_add@plt>
   4b730:	ldr	w19, [sp, #124]
   4b734:	ldr	x1, [x28]
   4b738:	sub	x0, x29, #0x28
   4b73c:	mov	w2, w19
   4b740:	bl	c960 <mpfr_prec_round@plt>
   4b744:	ldr	x1, [x28]
   4b748:	mov	w26, w0
   4b74c:	sub	x0, x29, #0x68
   4b750:	mov	w2, w19
   4b754:	bl	c960 <mpfr_prec_round@plt>
   4b758:	cmp	w26, #0x0
   4b75c:	cset	w8, gt
   4b760:	csinv	w8, w8, wzr, ge  // ge = tcont
   4b764:	cmp	w0, #0x0
   4b768:	cset	w9, gt
   4b76c:	csinv	w9, w9, wzr, ge  // ge = tcont
   4b770:	cmp	w8, w9
   4b774:	b.ne	4b78c <mpfr_lngamma@@Base+0x618>  // b.any
   4b778:	sub	x0, x29, #0x28
   4b77c:	sub	x1, x29, #0x68
   4b780:	mov	w2, #0x1                   	// #1
   4b784:	bl	c980 <mpfr_cmp3@plt>
   4b788:	cbz	w0, 4c4e4 <mpfr_lngamma@@Base+0x1370>
   4b78c:	sub	x0, x29, #0x28
   4b790:	bl	c0b0 <mpfr_clear@plt>
   4b794:	sub	x0, x29, #0x68
   4b798:	bl	c0b0 <mpfr_clear@plt>
   4b79c:	sub	x0, x29, #0x88
   4b7a0:	bl	c0b0 <mpfr_clear@plt>
   4b7a4:	mov	x8, #0xfffffffffffffeff    	// #-257
   4b7a8:	movk	x8, #0x7fff, lsl #48
   4b7ac:	sub	x8, x8, x23
   4b7b0:	cmp	x20, x8
   4b7b4:	b.gt	4b7e0 <mpfr_lngamma@@Base+0x66c>
   4b7b8:	ldr	x21, [sp, #144]
   4b7bc:	add	x23, x23, x20
   4b7c0:	cmp	x23, #0x0
   4b7c4:	cinc	x9, x23, lt  // lt = tstop
   4b7c8:	ldr	x8, [x21, #16]
   4b7cc:	asr	x20, x9, #1
   4b7d0:	neg	x8, x8
   4b7d4:	cmp	x23, x8
   4b7d8:	b.le	4b5c8 <mpfr_lngamma@@Base+0x454>
   4b7dc:	b	4b7f4 <mpfr_lngamma@@Base+0x680>
   4b7e0:	mov	w1, #0x131                 	// #305
   4b7e4:	mov	x0, x24
   4b7e8:	mov	x2, x25
   4b7ec:	bl	cb20 <mpfr_assert_fail@plt>
   4b7f0:	b	4b7b8 <mpfr_lngamma@@Base+0x644>
   4b7f4:	ldr	x23, [x28]
   4b7f8:	mov	x24, x21
   4b7fc:	sub	x0, x29, #0x28
   4b800:	mov	w1, #0x1                   	// #1
   4b804:	bl	ca60 <mpfr_init2@plt>
   4b808:	sub	x0, x29, #0x48
   4b80c:	mov	w1, #0x1                   	// #1
   4b810:	bl	ca60 <mpfr_init2@plt>
   4b814:	sub	x0, x29, #0x68
   4b818:	mov	w1, #0x1                   	// #1
   4b81c:	bl	ca60 <mpfr_init2@plt>
   4b820:	sub	x0, x29, #0x88
   4b824:	mov	w1, #0x1                   	// #1
   4b828:	bl	ca60 <mpfr_init2@plt>
   4b82c:	add	x0, sp, #0x98
   4b830:	mov	w1, #0x1                   	// #1
   4b834:	bl	ca60 <mpfr_init2@plt>
   4b838:	subs	x19, x23, #0x1
   4b83c:	str	x28, [sp, #56]
   4b840:	tbnz	w22, #31, 4c130 <mpfr_lngamma@@Base+0xfbc>
   4b844:	b.eq	4c58c <mpfr_lngamma@@Base+0x1418>  // b.none
   4b848:	b.le	4c5a4 <mpfr_lngamma@@Base+0x1430>
   4b84c:	clz	x8, x19
   4b850:	mov	w9, #0x40                  	// #64
   4b854:	sub	x8, x9, x8
   4b858:	add	x19, x8, x23
   4b85c:	subs	x20, x19, #0x1
   4b860:	b.eq	4c59c <mpfr_lngamma@@Base+0x1428>  // b.none
   4b864:	b.le	4c5c0 <mpfr_lngamma@@Base+0x144c>
   4b868:	clz	x8, x20
   4b86c:	mov	w9, #0x4d                  	// #77
   4b870:	sub	x8, x9, x8
   4b874:	add	x25, x8, x19
   4b878:	ldr	w8, [sp, #124]
   4b87c:	adrp	x9, 64000 <mpfr_bases@@Base+0x758>
   4b880:	ldr	d9, [x9, #2088]
   4b884:	mov	w19, #0x40                  	// #64
   4b888:	cmp	w8, #0x0
   4b88c:	adrp	x8, 64000 <mpfr_bases@@Base+0x758>
   4b890:	ldr	d8, [x8, #2080]
   4b894:	mov	w20, #0x3                   	// #3
   4b898:	cinc	x27, x23, eq  // eq = none
   4b89c:	mov	w21, #0x80000000            	// #-2147483648
   4b8a0:	mov	w22, #0x1388                	// #5000
   4b8a4:	mov	w23, #0x2710                	// #10000
   4b8a8:	str	x27, [sp, #8]
   4b8ac:	sub	x0, x29, #0x28
   4b8b0:	mov	w1, #0x35                  	// #53
   4b8b4:	bl	bf20 <mpfr_set_prec@plt>
   4b8b8:	sub	x0, x29, #0x28
   4b8bc:	cmp	x25, #0x64
   4b8c0:	b.gt	4b8d0 <mpfr_lngamma@@Base+0x75c>
   4b8c4:	mov	w1, #0x266                 	// #614
   4b8c8:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b8cc:	b	4b93c <mpfr_lngamma@@Base+0x7c8>
   4b8d0:	cmp	x25, #0x1f4
   4b8d4:	b.gt	4b8e4 <mpfr_lngamma@@Base+0x770>
   4b8d8:	mov	w1, #0x333                 	// #819
   4b8dc:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b8e0:	b	4b93c <mpfr_lngamma@@Base+0x7c8>
   4b8e4:	cmp	x25, #0x3e8
   4b8e8:	b.gt	4b8f8 <mpfr_lngamma@@Base+0x784>
   4b8ec:	mov	w1, #0x533                 	// #1331
   4b8f0:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b8f4:	b	4b93c <mpfr_lngamma@@Base+0x7c8>
   4b8f8:	cmp	x25, #0x7d0
   4b8fc:	b.gt	4b90c <mpfr_lngamma@@Base+0x798>
   4b900:	mov	w1, #0x6cd                 	// #1741
   4b904:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b908:	b	4b93c <mpfr_lngamma@@Base+0x7c8>
   4b90c:	cmp	x25, x22
   4b910:	b.gt	4b920 <mpfr_lngamma@@Base+0x7ac>
   4b914:	mov	w1, #0x8cd                 	// #2253
   4b918:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b91c:	b	4b93c <mpfr_lngamma@@Base+0x7c8>
   4b920:	cmp	x25, x23
   4b924:	b.gt	4b934 <mpfr_lngamma@@Base+0x7c0>
   4b928:	mov	w1, #0xd9a                 	// #3482
   4b92c:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b930:	b	4b93c <mpfr_lngamma@@Base+0x7c8>
   4b934:	mov	w1, #0x9                   	// #9
   4b938:	mov	x2, #0xffffffffffffffff    	// #-1
   4b93c:	mov	w3, wzr
   4b940:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4b944:	sub	x0, x29, #0x28
   4b948:	mov	w1, #0x4                   	// #4
   4b94c:	mov	x2, #0xfffffffffffffffc    	// #-4
   4b950:	mov	w3, #0x2                   	// #2
   4b954:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4b958:	sub	x0, x29, #0x28
   4b95c:	sub	x1, x29, #0x28
   4b960:	mov	w3, #0x2                   	// #2
   4b964:	mov	x2, x25
   4b968:	bl	bab0 <mpfr_mul_ui@plt>
   4b96c:	sub	x1, x29, #0x28
   4b970:	mov	w2, #0x1                   	// #1
   4b974:	mov	x0, x24
   4b978:	bl	c980 <mpfr_cmp3@plt>
   4b97c:	tbnz	w0, #31, 4b988 <mpfr_lngamma@@Base+0x814>
   4b980:	mov	w22, #0x3                   	// #3
   4b984:	b	4b9b0 <mpfr_lngamma@@Base+0x83c>
   4b988:	sub	x0, x29, #0x28
   4b98c:	sub	x1, x29, #0x28
   4b990:	mov	w3, #0x2                   	// #2
   4b994:	mov	x2, x24
   4b998:	bl	bbc0 <mpfr_sub@plt>
   4b99c:	sub	x0, x29, #0x28
   4b9a0:	mov	w1, #0x2                   	// #2
   4b9a4:	bl	bcf0 <mpfr_get_ui@plt>
   4b9a8:	cmp	x0, #0x3
   4b9ac:	csel	x22, x0, x20, hi  // hi = pmore
   4b9b0:	sub	x0, x29, #0x28
   4b9b4:	mov	x1, x25
   4b9b8:	str	x19, [sp]
   4b9bc:	bl	bf20 <mpfr_set_prec@plt>
   4b9c0:	sub	x0, x29, #0x48
   4b9c4:	mov	x1, x25
   4b9c8:	bl	bf20 <mpfr_set_prec@plt>
   4b9cc:	sub	x0, x29, #0x68
   4b9d0:	mov	x1, x25
   4b9d4:	bl	bf20 <mpfr_set_prec@plt>
   4b9d8:	sub	x0, x29, #0x88
   4b9dc:	mov	x1, x25
   4b9e0:	bl	bf20 <mpfr_set_prec@plt>
   4b9e4:	add	x0, sp, #0x98
   4b9e8:	mov	x1, x25
   4b9ec:	bl	bf20 <mpfr_set_prec@plt>
   4b9f0:	add	x0, sp, #0x98
   4b9f4:	mov	x1, x24
   4b9f8:	mov	x2, x22
   4b9fc:	mov	w3, wzr
   4ba00:	bl	c270 <mpfr_add_ui@plt>
   4ba04:	sub	x0, x29, #0x28
   4ba08:	add	x1, sp, #0x98
   4ba0c:	mov	w2, wzr
   4ba10:	bl	c0d0 <mpfr_log@plt>
   4ba14:	sub	x0, x29, #0x48
   4ba18:	add	x1, sp, #0x98
   4ba1c:	mov	w2, #0x1                   	// #1
   4ba20:	mov	w3, wzr
   4ba24:	bl	c2c0 <mpfr_mul_2ui@plt>
   4ba28:	sub	x0, x29, #0x48
   4ba2c:	sub	x1, x29, #0x48
   4ba30:	mov	w2, #0x1                   	// #1
   4ba34:	mov	w3, wzr
   4ba38:	bl	c520 <mpfr_sub_ui@plt>
   4ba3c:	sub	x0, x29, #0x28
   4ba40:	sub	x1, x29, #0x28
   4ba44:	sub	x2, x29, #0x48
   4ba48:	mov	w3, wzr
   4ba4c:	bl	bda0 <mpfr_mul@plt>
   4ba50:	sub	x0, x29, #0x28
   4ba54:	sub	x1, x29, #0x28
   4ba58:	mov	w2, #0x1                   	// #1
   4ba5c:	mov	w3, wzr
   4ba60:	bl	c8f0 <mpfr_div_2ui@plt>
   4ba64:	sub	x0, x29, #0x28
   4ba68:	sub	x1, x29, #0x28
   4ba6c:	add	x2, sp, #0x98
   4ba70:	mov	w3, wzr
   4ba74:	bl	bbc0 <mpfr_sub@plt>
   4ba78:	sub	x0, x29, #0x68
   4ba7c:	add	x2, sp, #0x98
   4ba80:	mov	w1, #0x1                   	// #1
   4ba84:	mov	w3, wzr
   4ba88:	bl	c2f0 <mpfr_ui_div@plt>
   4ba8c:	sub	x0, x29, #0x48
   4ba90:	sub	x1, x29, #0x68
   4ba94:	mov	w2, #0xc                   	// #12
   4ba98:	mov	w3, wzr
   4ba9c:	bl	cc40 <mpfr_div_ui@plt>
   4baa0:	ldur	w3, [x29, #-64]
   4baa4:	sub	x0, x29, #0x88
   4baa8:	sub	x1, x29, #0x48
   4baac:	mov	w2, wzr
   4bab0:	bl	c690 <mpfr_set4@plt>
   4bab4:	sub	x0, x29, #0x28
   4bab8:	sub	x1, x29, #0x28
   4babc:	sub	x2, x29, #0x88
   4bac0:	mov	w3, wzr
   4bac4:	bl	c1e0 <mpfr_add@plt>
   4bac8:	sub	x0, x29, #0x68
   4bacc:	sub	x1, x29, #0x68
   4bad0:	sub	x2, x29, #0x68
   4bad4:	mov	w3, wzr
   4bad8:	bl	bda0 <mpfr_mul@plt>
   4badc:	ldur	x8, [x29, #-120]
   4bae0:	ldur	x9, [x29, #-24]
   4bae4:	add	x8, x8, x25
   4bae8:	cmp	x8, x9
   4baec:	b.ge	4bbb0 <mpfr_lngamma@@Base+0xa3c>  // b.tcont
   4baf0:	mov	w26, #0x2                   	// #2
   4baf4:	str	x26, [sp, #24]
   4baf8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4bafc:	ldr	x1, [x0, #2688]
   4bb00:	add	x0, x0, #0xa80
   4bb04:	blr	x1
   4bb08:	ldr	x8, [sp, #136]
   4bb0c:	mov	w2, wzr
   4bb10:	add	x1, x8, x0
   4bb14:	sub	x0, x29, #0x88
   4bb18:	bl	c380 <mpfr_cache@plt>
   4bb1c:	sub	x0, x29, #0x88
   4bb20:	sub	x1, x29, #0x88
   4bb24:	mov	w2, #0x1                   	// #1
   4bb28:	mov	w3, wzr
   4bb2c:	bl	c2c0 <mpfr_mul_2ui@plt>
   4bb30:	ldr	w3, [x24, #8]
   4bb34:	sub	x0, x29, #0x48
   4bb38:	mov	x1, x24
   4bb3c:	mov	w2, wzr
   4bb40:	bl	c690 <mpfr_set4@plt>
   4bb44:	mov	w8, #0x2                   	// #2
   4bb48:	mov	w20, #0x40                  	// #64
   4bb4c:	mov	w21, #0x20                  	// #32
   4bb50:	mov	w19, #0x3                   	// #3
   4bb54:	mov	x23, x8
   4bb58:	mul	x8, x19, x19
   4bb5c:	add	x19, x19, #0x1
   4bb60:	add	x21, x21, #0x10
   4bb64:	add	x20, x20, #0x20
   4bb68:	cmp	x8, x22
   4bb6c:	add	x8, x23, #0x1
   4bb70:	b.cc	4bb54 <mpfr_lngamma@@Base+0x9e0>  // b.lo, b.ul, b.last
   4bb74:	mov	x0, x20
   4bb78:	str	x22, [sp, #112]
   4bb7c:	bl	ccd0 <mpfr_allocate_func@plt>
   4bb80:	sub	x26, x19, #0x2
   4bb84:	cmp	x26, #0x2
   4bb88:	sub	x22, x19, #0x1
   4bb8c:	stp	x0, x21, [sp, #40]
   4bb90:	str	x20, [sp, #16]
   4bb94:	str	x23, [sp, #104]
   4bb98:	b.cs	4bcd8 <mpfr_lngamma@@Base+0xb64>  // b.hs, b.nlast
   4bb9c:	add	x0, x0, #0x40
   4bba0:	mov	x1, x24
   4bba4:	mov	w2, wzr
   4bba8:	bl	c3f0 <mpfr_sqr@plt>
   4bbac:	b	4bd74 <mpfr_lngamma@@Base+0xc00>
   4bbb0:	mov	w19, #0x5                   	// #5
   4bbb4:	mov	w26, #0x2                   	// #2
   4bbb8:	b	4bc7c <mpfr_lngamma@@Base+0xb08>
   4bbbc:	sub	x0, x29, #0x48
   4bbc0:	sub	x1, x29, #0x48
   4bbc4:	mov	w3, wzr
   4bbc8:	bl	bab0 <mpfr_mul_ui@plt>
   4bbcc:	sub	x0, x29, #0x48
   4bbd0:	sub	x1, x29, #0x48
   4bbd4:	mov	x2, x20
   4bbd8:	mov	w3, wzr
   4bbdc:	bl	bab0 <mpfr_mul_ui@plt>
   4bbe0:	sub	x0, x29, #0x48
   4bbe4:	sub	x1, x29, #0x48
   4bbe8:	mov	x2, x23
   4bbec:	mov	w3, wzr
   4bbf0:	bl	cc40 <mpfr_div_ui@plt>
   4bbf4:	sub	x2, x19, #0x2
   4bbf8:	sub	x0, x29, #0x48
   4bbfc:	sub	x1, x29, #0x48
   4bc00:	mov	w3, wzr
   4bc04:	bl	cc40 <mpfr_div_ui@plt>
   4bc08:	sub	x0, x29, #0x48
   4bc0c:	sub	x1, x29, #0x48
   4bc10:	mov	x2, x23
   4bc14:	mov	w3, wzr
   4bc18:	bl	cc40 <mpfr_div_ui@plt>
   4bc1c:	mov	x2, x19
   4bc20:	sub	x0, x29, #0x48
   4bc24:	sub	x1, x29, #0x48
   4bc28:	mov	w3, wzr
   4bc2c:	bl	cc40 <mpfr_div_ui@plt>
   4bc30:	mov	x0, x26
   4bc34:	bl	c820 <mpfr_bernoulli_cache@plt>
   4bc38:	mov	x2, x0
   4bc3c:	sub	x0, x29, #0x88
   4bc40:	sub	x1, x29, #0x48
   4bc44:	mov	w3, wzr
   4bc48:	bl	c4c0 <mpfr_mul_z@plt>
   4bc4c:	sub	x0, x29, #0x28
   4bc50:	sub	x1, x29, #0x28
   4bc54:	sub	x2, x29, #0x88
   4bc58:	mov	w3, wzr
   4bc5c:	bl	c1e0 <mpfr_add@plt>
   4bc60:	ldur	x8, [x29, #-120]
   4bc64:	ldur	x9, [x29, #-24]
   4bc68:	add	x26, x26, #0x1
   4bc6c:	add	x19, x19, #0x2
   4bc70:	add	x8, x8, x25
   4bc74:	cmp	x8, x9
   4bc78:	b.lt	4baf4 <mpfr_lngamma@@Base+0x980>  // b.tstop
   4bc7c:	sub	x0, x29, #0x48
   4bc80:	sub	x1, x29, #0x48
   4bc84:	sub	x2, x29, #0x68
   4bc88:	mov	w3, wzr
   4bc8c:	bl	bda0 <mpfr_mul@plt>
   4bc90:	sub	x23, x19, #0x1
   4bc94:	sub	x2, x19, #0x3
   4bc98:	cmp	x26, x21
   4bc9c:	sub	x20, x19, #0x4
   4bca0:	b.hi	4bbbc <mpfr_lngamma@@Base+0xa48>  // b.pmore
   4bca4:	mul	x2, x2, x20
   4bca8:	sub	x0, x29, #0x48
   4bcac:	sub	x1, x29, #0x48
   4bcb0:	mov	w3, wzr
   4bcb4:	bl	bab0 <mpfr_mul_ui@plt>
   4bcb8:	sub	x8, x19, #0x2
   4bcbc:	mul	x2, x8, x23
   4bcc0:	sub	x0, x29, #0x48
   4bcc4:	sub	x1, x29, #0x48
   4bcc8:	mov	w3, wzr
   4bccc:	bl	cc40 <mpfr_div_ui@plt>
   4bcd0:	mul	x2, x19, x23
   4bcd4:	b	4bc20 <mpfr_lngamma@@Base+0xaac>
   4bcd8:	add	x20, x0, #0x40
   4bcdc:	mov	w21, #0x2                   	// #2
   4bce0:	mov	x0, x20
   4bce4:	mov	x1, x25
   4bce8:	bl	ca60 <mpfr_init2@plt>
   4bcec:	add	x21, x21, #0x1
   4bcf0:	cmp	x21, x26
   4bcf4:	add	x20, x20, #0x20
   4bcf8:	b.ls	4bce0 <mpfr_lngamma@@Base+0xb6c>  // b.plast
   4bcfc:	ldr	x21, [sp, #40]
   4bd00:	mov	x1, x24
   4bd04:	mov	w2, wzr
   4bd08:	add	x0, x21, #0x40
   4bd0c:	bl	c3f0 <mpfr_sqr@plt>
   4bd10:	cmp	x26, #0x3
   4bd14:	b.cc	4bd74 <mpfr_lngamma@@Base+0xc00>  // b.lo, b.ul, b.last
   4bd18:	add	x23, x21, #0x60
   4bd1c:	mov	w20, #0x3                   	// #3
   4bd20:	b	4bd48 <mpfr_lngamma@@Base+0xbd4>
   4bd24:	sub	x1, x23, #0x20
   4bd28:	mov	x0, x23
   4bd2c:	mov	x2, x24
   4bd30:	mov	w3, wzr
   4bd34:	bl	bda0 <mpfr_mul@plt>
   4bd38:	add	x20, x20, #0x1
   4bd3c:	cmp	x20, x26
   4bd40:	add	x23, x23, #0x20
   4bd44:	b.hi	4bd74 <mpfr_lngamma@@Base+0xc00>  // b.pmore
   4bd48:	tbnz	w20, #0, 4bd24 <mpfr_lngamma@@Base+0xbb0>
   4bd4c:	lsl	x8, x20, #4
   4bd50:	and	x8, x8, #0xffffffffffffffe0
   4bd54:	add	x1, x21, x8
   4bd58:	mov	x0, x23
   4bd5c:	mov	w2, wzr
   4bd60:	bl	c3f0 <mpfr_sqr@plt>
   4bd64:	add	x20, x20, #0x1
   4bd68:	cmp	x20, x26
   4bd6c:	add	x23, x23, #0x20
   4bd70:	b.ls	4bd48 <mpfr_lngamma@@Base+0xbd4>  // b.plast
   4bd74:	ldr	x0, [sp, #48]
   4bd78:	bl	ccd0 <mpfr_allocate_func@plt>
   4bd7c:	mov	x21, x0
   4bd80:	mov	x23, xzr
   4bd84:	mov	x20, x0
   4bd88:	mov	x0, x20
   4bd8c:	bl	bfe0 <mpfr_mpz_init@plt>
   4bd90:	add	x23, x23, #0x1
   4bd94:	cmp	x23, x26
   4bd98:	add	x20, x20, #0x10
   4bd9c:	b.ls	4bd88 <mpfr_lngamma@@Base+0xc14>  // b.plast
   4bda0:	ldr	x8, [sp, #112]
   4bda4:	str	x25, [sp, #32]
   4bda8:	cmp	x22, x8
   4bdac:	b.ls	4bdb8 <mpfr_lngamma@@Base+0xc44>  // b.plast
   4bdb0:	mov	w28, #0x1                   	// #1
   4bdb4:	b	4befc <mpfr_lngamma@@Base+0xd88>
   4bdb8:	cmp	x19, #0x2
   4bdbc:	b.eq	4c0fc <mpfr_lngamma@@Base+0xf88>  // b.none
   4bdc0:	add	x8, x21, #0x10
   4bdc4:	str	x8, [sp, #96]
   4bdc8:	ldr	x8, [sp, #40]
   4bdcc:	mov	w23, #0x1                   	// #1
   4bdd0:	add	x8, x8, #0x20
   4bdd4:	str	x8, [sp, #88]
   4bdd8:	mov	w1, #0x1                   	// #1
   4bddc:	mov	x0, x21
   4bde0:	str	x22, [sp, #128]
   4bde4:	bl	bd00 <__gmpz_set_ui@plt>
   4bde8:	mov	x27, xzr
   4bdec:	mov	x19, xzr
   4bdf0:	mov	x24, x21
   4bdf4:	b	4be1c <mpfr_lngamma@@Base+0xca8>
   4bdf8:	mov	x0, x21
   4bdfc:	mov	x1, x21
   4be00:	mov	x2, x20
   4be04:	bl	c140 <__gmpz_mul_ui@plt>
   4be08:	sub	x27, x27, #0x1
   4be0c:	cmp	x26, x25
   4be10:	add	x24, x24, #0x10
   4be14:	mov	x19, x25
   4be18:	b.eq	4be70 <mpfr_lngamma@@Base+0xcfc>  // b.none
   4be1c:	add	x25, x19, #0x1
   4be20:	add	x0, x21, x25, lsl #4
   4be24:	add	x1, x21, x19, lsl #4
   4be28:	bl	bff0 <__gmpz_set@plt>
   4be2c:	add	x20, x19, x23
   4be30:	cbz	x19, 4bdf8 <mpfr_lngamma@@Base+0xc84>
   4be34:	mov	x19, x24
   4be38:	mov	x28, x27
   4be3c:	mov	x0, x19
   4be40:	mov	x1, x19
   4be44:	mov	x2, x20
   4be48:	bl	c140 <__gmpz_mul_ui@plt>
   4be4c:	sub	x22, x19, #0x10
   4be50:	mov	x0, x19
   4be54:	mov	x1, x19
   4be58:	mov	x2, x22
   4be5c:	bl	c9a0 <__gmpz_add@plt>
   4be60:	adds	x28, x28, #0x1
   4be64:	mov	x19, x22
   4be68:	b.cc	4be3c <mpfr_lngamma@@Base+0xcc8>  // b.lo, b.ul, b.last
   4be6c:	b	4bdf8 <mpfr_lngamma@@Base+0xc84>
   4be70:	sub	x0, x29, #0x68
   4be74:	mov	x1, x21
   4be78:	mov	w2, wzr
   4be7c:	bl	c250 <mpfr_set_z@plt>
   4be80:	ldp	x22, x20, [sp, #88]
   4be84:	ldr	x23, [sp, #104]
   4be88:	ldr	x24, [sp, #144]
   4be8c:	mov	x19, xzr
   4be90:	cmp	x19, #0x0
   4be94:	csel	x1, x24, x22, eq  // eq = none
   4be98:	add	x0, sp, #0x98
   4be9c:	mov	x2, x20
   4bea0:	mov	w3, wzr
   4bea4:	bl	c4c0 <mpfr_mul_z@plt>
   4bea8:	sub	x0, x29, #0x68
   4beac:	sub	x1, x29, #0x68
   4beb0:	add	x2, sp, #0x98
   4beb4:	mov	w3, wzr
   4beb8:	bl	c1e0 <mpfr_add@plt>
   4bebc:	sub	x23, x23, #0x1
   4bec0:	add	x20, x20, #0x10
   4bec4:	add	x22, x22, #0x20
   4bec8:	sub	x19, x19, #0x1
   4becc:	cbnz	x23, 4be90 <mpfr_lngamma@@Base+0xd1c>
   4bed0:	sub	x0, x29, #0x48
   4bed4:	sub	x1, x29, #0x48
   4bed8:	sub	x2, x29, #0x68
   4bedc:	mov	w3, wzr
   4bee0:	bl	bda0 <mpfr_mul@plt>
   4bee4:	ldr	x28, [sp, #128]
   4bee8:	ldr	x8, [sp, #112]
   4beec:	add	x22, x28, x26
   4bef0:	cmp	x22, x8
   4bef4:	mov	x23, x28
   4bef8:	b.ls	4bdd8 <mpfr_lngamma@@Base+0xc64>  // b.plast
   4befc:	mov	x19, xzr
   4bf00:	mov	x20, x21
   4bf04:	mov	x0, x20
   4bf08:	bl	c1b0 <mpfr_mpz_clear@plt>
   4bf0c:	add	x19, x19, #0x1
   4bf10:	cmp	x19, x26
   4bf14:	add	x20, x20, #0x10
   4bf18:	b.ls	4bf04 <mpfr_lngamma@@Base+0xd90>  // b.plast
   4bf1c:	ldr	x1, [sp, #48]
   4bf20:	mov	x0, x21
   4bf24:	bl	cc00 <mpfr_free_func@plt>
   4bf28:	ldp	x25, x21, [sp, #32]
   4bf2c:	ldr	x27, [sp, #8]
   4bf30:	ldr	x22, [sp, #112]
   4bf34:	cmp	x26, #0x2
   4bf38:	mov	x23, #0x4048000000000000    	// #4631952216750555136
   4bf3c:	b.cc	4bf60 <mpfr_lngamma@@Base+0xdec>  // b.lo, b.ul, b.last
   4bf40:	add	x20, x21, #0x40
   4bf44:	mov	w19, #0x2                   	// #2
   4bf48:	mov	x0, x20
   4bf4c:	bl	c0b0 <mpfr_clear@plt>
   4bf50:	add	x19, x19, #0x1
   4bf54:	cmp	x19, x26
   4bf58:	add	x20, x20, #0x20
   4bf5c:	b.ls	4bf48 <mpfr_lngamma@@Base+0xdd4>  // b.plast
   4bf60:	ldr	x1, [sp, #16]
   4bf64:	mov	x0, x21
   4bf68:	bl	cc00 <mpfr_free_func@plt>
   4bf6c:	cmp	x28, x22
   4bf70:	b.cs	4bfa8 <mpfr_lngamma@@Base+0xe34>  // b.hs, b.nlast
   4bf74:	sub	x0, x29, #0x68
   4bf78:	mov	x1, x24
   4bf7c:	mov	x2, x28
   4bf80:	mov	w3, wzr
   4bf84:	bl	c270 <mpfr_add_ui@plt>
   4bf88:	sub	x0, x29, #0x48
   4bf8c:	sub	x1, x29, #0x48
   4bf90:	sub	x2, x29, #0x68
   4bf94:	mov	w3, wzr
   4bf98:	bl	bda0 <mpfr_mul@plt>
   4bf9c:	add	x28, x28, #0x1
   4bfa0:	cmp	x22, x28
   4bfa4:	b.ne	4bf74 <mpfr_lngamma@@Base+0xe00>  // b.any
   4bfa8:	sub	x0, x29, #0x48
   4bfac:	sub	x1, x29, #0x48
   4bfb0:	sub	x2, x29, #0x48
   4bfb4:	mov	w3, wzr
   4bfb8:	bl	bda0 <mpfr_mul@plt>
   4bfbc:	sub	x0, x29, #0x88
   4bfc0:	sub	x1, x29, #0x88
   4bfc4:	sub	x2, x29, #0x48
   4bfc8:	mov	w3, wzr
   4bfcc:	bl	c610 <mpfr_div@plt>
   4bfd0:	sub	x0, x29, #0x48
   4bfd4:	sub	x1, x29, #0x88
   4bfd8:	mov	w2, wzr
   4bfdc:	bl	c0d0 <mpfr_log@plt>
   4bfe0:	sub	x0, x29, #0x48
   4bfe4:	sub	x1, x29, #0x48
   4bfe8:	mov	w2, #0x1                   	// #1
   4bfec:	mov	w3, wzr
   4bff0:	bl	c8f0 <mpfr_div_2ui@plt>
   4bff4:	ldur	x21, [x29, #-56]
   4bff8:	ucvtf	d0, x22
   4bffc:	fmul	d0, d0, d8
   4c000:	fadd	d0, d0, d9
   4c004:	bl	c940 <__gmpfr_ceil_log2@plt>
   4c008:	ldr	x8, [sp, #24]
   4c00c:	ldur	x22, [x29, #-24]
   4c010:	fmov	d1, x23
   4c014:	mov	x20, x0
   4c018:	ucvtf	d0, x8
   4c01c:	fadd	d0, d0, d0
   4c020:	fadd	d0, d0, d1
   4c024:	bl	c940 <__gmpfr_ceil_log2@plt>
   4c028:	mov	x19, x0
   4c02c:	sub	x0, x29, #0x28
   4c030:	sub	x1, x29, #0x28
   4c034:	sub	x2, x29, #0x48
   4c038:	mov	w3, wzr
   4c03c:	bl	c1e0 <mpfr_add@plt>
   4c040:	ldur	x8, [x29, #-24]
   4c044:	mov	x9, #0xfffffffffffffeff    	// #-257
   4c048:	movk	x9, #0x7fff, lsl #48
   4c04c:	add	x9, x9, #0x105
   4c050:	cmp	x8, x9
   4c054:	b.lt	4c0a4 <mpfr_lngamma@@Base+0xf30>  // b.tstop
   4c058:	ldur	x11, [x29, #-40]
   4c05c:	add	x9, x20, x21
   4c060:	add	x10, x19, x22
   4c064:	cmp	x9, x10
   4c068:	csel	x9, x9, x10, gt
   4c06c:	csinc	x9, x9, x10, ne  // ne = any
   4c070:	sub	x10, x11, #0x1
   4c074:	ldur	x0, [x29, #-16]
   4c078:	add	x11, x11, #0x3e
   4c07c:	cmp	x10, #0x0
   4c080:	csel	x10, x11, x10, lt  // lt = tstop
   4c084:	add	x8, x25, x8
   4c088:	mvn	x9, x9
   4c08c:	asr	x10, x10, #6
   4c090:	add	x1, x10, #0x1
   4c094:	add	x2, x9, x8
   4c098:	mov	x3, x27
   4c09c:	bl	c370 <mpfr_round_p@plt>
   4c0a0:	cbnz	w0, 4c3f8 <mpfr_lngamma@@Base+0x1284>
   4c0a4:	ldr	x19, [sp]
   4c0a8:	mov	x8, #0xfffffffffffffeff    	// #-257
   4c0ac:	movk	x8, #0x7fff, lsl #48
   4c0b0:	sub	x8, x8, x25
   4c0b4:	cmp	x19, x8
   4c0b8:	b.gt	4c0e0 <mpfr_lngamma@@Base+0xf6c>
   4c0bc:	add	x25, x25, x19
   4c0c0:	cmp	x25, #0x0
   4c0c4:	cinc	x8, x25, lt  // lt = tstop
   4c0c8:	asr	x19, x8, #1
   4c0cc:	mov	w20, #0x3                   	// #3
   4c0d0:	mov	w21, #0x80000000            	// #-2147483648
   4c0d4:	mov	w22, #0x1388                	// #5000
   4c0d8:	mov	w23, #0x2710                	// #10000
   4c0dc:	b	4b8ac <mpfr_lngamma@@Base+0x738>
   4c0e0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c0e4:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4c0e8:	mov	w1, #0x2b8                 	// #696
   4c0ec:	add	x0, x0, #0x56f
   4c0f0:	add	x2, x2, #0x6c6
   4c0f4:	bl	cb20 <mpfr_assert_fail@plt>
   4c0f8:	b	4c0bc <mpfr_lngamma@@Base+0xf48>
   4c0fc:	mov	w1, #0x1                   	// #1
   4c100:	mov	x0, x21
   4c104:	bl	bd00 <__gmpz_set_ui@plt>
   4c108:	sub	x0, x29, #0x68
   4c10c:	mov	x1, x21
   4c110:	mov	w2, wzr
   4c114:	bl	c250 <mpfr_set_z@plt>
   4c118:	sub	x0, x29, #0x48
   4c11c:	sub	x1, x29, #0x48
   4c120:	sub	x2, x29, #0x68
   4c124:	mov	w3, wzr
   4c128:	bl	bda0 <mpfr_mul@plt>
   4c12c:	b	4c0fc <mpfr_lngamma@@Base+0xf88>
   4c130:	b.eq	4c5dc <mpfr_lngamma@@Base+0x1468>  // b.none
   4c134:	b.le	4c5f4 <mpfr_lngamma@@Base+0x1480>
   4c138:	clz	x8, x19
   4c13c:	mov	w9, #0x40                  	// #64
   4c140:	sub	x8, x9, x8
   4c144:	add	x19, x8, x23
   4c148:	subs	x20, x19, #0x1
   4c14c:	b.eq	4c5ec <mpfr_lngamma@@Base+0x1478>  // b.none
   4c150:	b.le	4c610 <mpfr_lngamma@@Base+0x149c>
   4c154:	clz	x8, x20
   4c158:	mov	w9, #0x4e                  	// #78
   4c15c:	sub	x8, x9, x8
   4c160:	add	x22, x8, x19
   4c164:	ldr	w8, [sp, #124]
   4c168:	adrp	x25, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4c16c:	mov	w19, #0x40                  	// #64
   4c170:	mov	w20, #0x2                   	// #2
   4c174:	cmp	w8, #0x0
   4c178:	adrp	x8, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c17c:	ldr	d8, [x8, #1272]
   4c180:	mov	w26, #0x3                   	// #3
   4c184:	mov	w27, #0x1                   	// #1
   4c188:	cinc	x23, x23, eq  // eq = none
   4c18c:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   4c190:	add	x25, x25, #0x6c6
   4c194:	sub	x0, x29, #0x28
   4c198:	mov	x1, x22
   4c19c:	bl	bf20 <mpfr_set_prec@plt>
   4c1a0:	sub	x0, x29, #0x48
   4c1a4:	mov	x1, x22
   4c1a8:	bl	bf20 <mpfr_set_prec@plt>
   4c1ac:	sub	x0, x29, #0x68
   4c1b0:	mov	x1, x22
   4c1b4:	bl	bf20 <mpfr_set_prec@plt>
   4c1b8:	sub	x0, x29, #0x88
   4c1bc:	mov	x1, x22
   4c1c0:	bl	bf20 <mpfr_set_prec@plt>
   4c1c4:	sub	x0, x29, #0x28
   4c1c8:	mov	w1, #0x2                   	// #2
   4c1cc:	mov	w3, #0x3                   	// #3
   4c1d0:	mov	x2, x24
   4c1d4:	bl	ca30 <mpfr_ui_sub@plt>
   4c1d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c1dc:	ldr	x1, [x0, #2688]
   4c1e0:	add	x0, x0, #0xa80
   4c1e4:	blr	x1
   4c1e8:	ldr	x8, [sp, #136]
   4c1ec:	mov	w2, wzr
   4c1f0:	add	x1, x8, x0
   4c1f4:	sub	x0, x29, #0x48
   4c1f8:	bl	c380 <mpfr_cache@plt>
   4c1fc:	sub	x0, x29, #0x68
   4c200:	sub	x1, x29, #0x28
   4c204:	mov	w2, wzr
   4c208:	bl	c5f0 <mpfr_lngamma@plt>
   4c20c:	ldur	x8, [x29, #-88]
   4c210:	cmp	x8, x28
   4c214:	b.ne	4c220 <mpfr_lngamma@@Base+0x10ac>  // b.any
   4c218:	mov	w24, #0x1                   	// #1
   4c21c:	b	4c24c <mpfr_lngamma@@Base+0x10d8>
   4c220:	ldur	x21, [x29, #-24]
   4c224:	scvtf	d0, x21
   4c228:	fmul	d0, d0, d8
   4c22c:	bl	c940 <__gmpfr_ceil_log2@plt>
   4c230:	ldur	x8, [x29, #-88]
   4c234:	add	x9, x21, x0
   4c238:	sub	x8, x9, x8
   4c23c:	add	x9, x8, #0x1
   4c240:	add	x8, x8, #0x2
   4c244:	cmp	x9, #0x0
   4c248:	csel	x24, xzr, x8, lt  // lt = tstop
   4c24c:	sub	x0, x29, #0x28
   4c250:	sub	x1, x29, #0x28
   4c254:	sub	x2, x29, #0x48
   4c258:	mov	w3, wzr
   4c25c:	bl	bda0 <mpfr_mul@plt>
   4c260:	ldur	x21, [x29, #-24]
   4c264:	sub	x0, x29, #0x28
   4c268:	sub	x1, x29, #0x28
   4c26c:	mov	w2, wzr
   4c270:	bl	c440 <mpfr_sin@plt>
   4c274:	ldur	x8, [x29, #-24]
   4c278:	ldr	x1, [sp, #144]
   4c27c:	sub	x0, x29, #0x88
   4c280:	mov	w2, #0x1                   	// #1
   4c284:	sub	x8, x21, x8
   4c288:	add	x9, x8, #0x3
   4c28c:	add	x8, x8, #0x6
   4c290:	cmp	x9, #0x0
   4c294:	mov	w3, wzr
   4c298:	csel	x21, x20, x8, lt  // lt = tstop
   4c29c:	bl	c520 <mpfr_sub_ui@plt>
   4c2a0:	sub	x0, x29, #0x88
   4c2a4:	sub	x1, x29, #0x88
   4c2a8:	sub	x2, x29, #0x48
   4c2ac:	mov	w3, wzr
   4c2b0:	bl	bda0 <mpfr_mul@plt>
   4c2b4:	sub	x0, x29, #0x88
   4c2b8:	sub	x1, x29, #0x88
   4c2bc:	sub	x2, x29, #0x28
   4c2c0:	mov	w3, wzr
   4c2c4:	bl	c610 <mpfr_div@plt>
   4c2c8:	sub	x0, x29, #0x88
   4c2cc:	sub	x1, x29, #0x88
   4c2d0:	mov	w3, #0x1                   	// #1
   4c2d4:	mov	w2, wzr
   4c2d8:	bl	c690 <mpfr_set4@plt>
   4c2dc:	cmp	x21, #0x2
   4c2e0:	sub	x0, x29, #0x88
   4c2e4:	sub	x1, x29, #0x88
   4c2e8:	mov	w2, wzr
   4c2ec:	csinc	x21, x26, x21, lt  // lt = tstop
   4c2f0:	bl	c0d0 <mpfr_log@plt>
   4c2f4:	add	x8, x21, #0x2
   4c2f8:	cmp	x8, x22
   4c2fc:	b.le	4c30c <mpfr_lngamma@@Base+0x1198>
   4c300:	ldr	x24, [sp, #144]
   4c304:	add	x22, x8, x22
   4c308:	b	4c3b8 <mpfr_lngamma@@Base+0x1244>
   4c30c:	ldur	x8, [x29, #-120]
   4c310:	ldur	x9, [x29, #-88]
   4c314:	sub	x0, x29, #0x28
   4c318:	sub	x1, x29, #0x88
   4c31c:	sub	x10, x27, x8
   4c320:	cmp	x8, x28
   4c324:	csel	x10, xzr, x10, eq  // eq = none
   4c328:	add	x10, x10, x21
   4c32c:	csel	x8, xzr, x8, eq  // eq = none
   4c330:	cmp	x10, #0x0
   4c334:	add	x21, x9, x24
   4c338:	csinc	x9, xzr, x10, lt  // lt = tstop
   4c33c:	sub	x2, x29, #0x68
   4c340:	mov	w3, wzr
   4c344:	add	x24, x9, x8
   4c348:	bl	bbc0 <mpfr_sub@plt>
   4c34c:	ldur	x8, [x29, #-24]
   4c350:	cmp	x24, x21
   4c354:	mov	x9, #0xfffffffffffffeff    	// #-257
   4c358:	movk	x9, #0x7fff, lsl #48
   4c35c:	csel	x10, x21, x24, lt  // lt = tstop
   4c360:	add	x9, x9, #0x105
   4c364:	sub	x10, x10, x8
   4c368:	cmp	x8, x9
   4c36c:	add	x8, x10, #0x1
   4c370:	b.ge	4c37c <mpfr_lngamma@@Base+0x1208>  // b.tcont
   4c374:	ldr	x24, [sp, #144]
   4c378:	b	4c3b8 <mpfr_lngamma@@Base+0x1244>
   4c37c:	ldur	x9, [x29, #-40]
   4c380:	cmp	x8, #0x0
   4c384:	ldur	x0, [x29, #-16]
   4c388:	csinc	x8, xzr, x8, lt  // lt = tstop
   4c38c:	sub	x10, x9, #0x1
   4c390:	add	x9, x9, #0x3e
   4c394:	cmp	x10, #0x0
   4c398:	csel	x9, x9, x10, lt  // lt = tstop
   4c39c:	asr	x9, x9, #6
   4c3a0:	add	x1, x9, #0x1
   4c3a4:	sub	x2, x22, x8
   4c3a8:	mov	x3, x23
   4c3ac:	bl	c370 <mpfr_round_p@plt>
   4c3b0:	ldr	x24, [sp, #144]
   4c3b4:	cbnz	w0, 4c3f8 <mpfr_lngamma@@Base+0x1284>
   4c3b8:	mov	x8, #0xfffffffffffffeff    	// #-257
   4c3bc:	movk	x8, #0x7fff, lsl #48
   4c3c0:	sub	x8, x8, x22
   4c3c4:	cmp	x19, x8
   4c3c8:	b.gt	4c3e0 <mpfr_lngamma@@Base+0x126c>
   4c3cc:	add	x22, x22, x19
   4c3d0:	cmp	x22, #0x0
   4c3d4:	cinc	x8, x22, lt  // lt = tstop
   4c3d8:	asr	x19, x8, #1
   4c3dc:	b	4c194 <mpfr_lngamma@@Base+0x1020>
   4c3e0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c3e4:	mov	w1, #0x1a5                 	// #421
   4c3e8:	add	x0, x0, #0x56f
   4c3ec:	mov	x2, x25
   4c3f0:	bl	cb20 <mpfr_assert_fail@plt>
   4c3f4:	b	4c3cc <mpfr_lngamma@@Base+0x1258>
   4c3f8:	ldr	x19, [sp, #56]
   4c3fc:	ldur	w3, [x29, #-32]
   4c400:	ldr	w2, [sp, #124]
   4c404:	sub	x1, x29, #0x28
   4c408:	mov	x0, x19
   4c40c:	bl	c690 <mpfr_set4@plt>
   4c410:	mov	w26, w0
   4c414:	sub	x0, x29, #0x28
   4c418:	bl	c0b0 <mpfr_clear@plt>
   4c41c:	sub	x0, x29, #0x48
   4c420:	bl	c0b0 <mpfr_clear@plt>
   4c424:	sub	x0, x29, #0x68
   4c428:	bl	c0b0 <mpfr_clear@plt>
   4c42c:	sub	x0, x29, #0x88
   4c430:	bl	c0b0 <mpfr_clear@plt>
   4c434:	add	x0, sp, #0x98
   4c438:	bl	c0b0 <mpfr_clear@plt>
   4c43c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c440:	ldr	x1, [x0, #2640]
   4c444:	add	x0, x0, #0xa50
   4c448:	blr	x1
   4c44c:	ldr	x8, [sp, #136]
   4c450:	ldr	w9, [sp, #84]
   4c454:	str	w9, [x8, x0]
   4c458:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c45c:	ldr	x1, [x0, #2576]
   4c460:	add	x0, x0, #0xa10
   4c464:	blr	x1
   4c468:	ldr	x10, [sp, #72]
   4c46c:	str	x10, [x8, x0]
   4c470:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c474:	ldr	x1, [x0, #2608]
   4c478:	add	x0, x0, #0xa30
   4c47c:	blr	x1
   4c480:	ldr	x11, [sp, #64]
   4c484:	str	x11, [x8, x0]
   4c488:	ldr	x8, [x19, #16]
   4c48c:	cmp	x8, x11
   4c490:	b.gt	4c578 <mpfr_lngamma@@Base+0x1404>
   4c494:	cmp	x8, x10
   4c498:	b.lt	4c578 <mpfr_lngamma@@Base+0x1404>  // b.tstop
   4c49c:	cbz	w26, 4c4bc <mpfr_lngamma@@Base+0x1348>
   4c4a0:	orr	w8, w9, #0x8
   4c4a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c4a8:	ldr	x1, [x0, #2640]
   4c4ac:	add	x0, x0, #0xa50
   4c4b0:	blr	x1
   4c4b4:	ldr	x9, [sp, #136]
   4c4b8:	str	w8, [x9, x0]
   4c4bc:	mov	w0, w26
   4c4c0:	ldp	x20, x19, [sp, #416]
   4c4c4:	ldp	x22, x21, [sp, #400]
   4c4c8:	ldp	x24, x23, [sp, #384]
   4c4cc:	ldp	x26, x25, [sp, #368]
   4c4d0:	ldp	x28, x27, [sp, #352]
   4c4d4:	ldp	x29, x30, [sp, #336]
   4c4d8:	ldp	d9, d8, [sp, #320]
   4c4dc:	add	sp, sp, #0x1b0
   4c4e0:	ret
   4c4e4:	ldur	w3, [x29, #-96]
   4c4e8:	ldr	w2, [sp, #124]
   4c4ec:	sub	x1, x29, #0x68
   4c4f0:	mov	x0, x28
   4c4f4:	bl	c690 <mpfr_set4@plt>
   4c4f8:	sub	x0, x29, #0x28
   4c4fc:	bl	c0b0 <mpfr_clear@plt>
   4c500:	sub	x0, x29, #0x68
   4c504:	bl	c0b0 <mpfr_clear@plt>
   4c508:	sub	x0, x29, #0x88
   4c50c:	bl	c0b0 <mpfr_clear@plt>
   4c510:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c514:	ldr	x1, [x0, #2640]
   4c518:	add	x0, x0, #0xa50
   4c51c:	blr	x1
   4c520:	ldr	x8, [sp, #136]
   4c524:	ldr	w9, [sp, #84]
   4c528:	str	w9, [x8, x0]
   4c52c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c530:	ldr	x1, [x0, #2576]
   4c534:	add	x0, x0, #0xa10
   4c538:	blr	x1
   4c53c:	ldr	x10, [sp, #72]
   4c540:	str	x10, [x8, x0]
   4c544:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c548:	ldr	x1, [x0, #2608]
   4c54c:	add	x0, x0, #0xa30
   4c550:	blr	x1
   4c554:	ldr	x11, [sp, #64]
   4c558:	str	x11, [x8, x0]
   4c55c:	ldr	x8, [x28, #16]
   4c560:	cmp	x8, x11
   4c564:	b.gt	4c570 <mpfr_lngamma@@Base+0x13fc>
   4c568:	cmp	x8, x10
   4c56c:	b.ge	4c49c <mpfr_lngamma@@Base+0x1328>  // b.tcont
   4c570:	mov	x0, x28
   4c574:	b	4c57c <mpfr_lngamma@@Base+0x1408>
   4c578:	mov	x0, x19
   4c57c:	ldr	w2, [sp, #124]
   4c580:	mov	w1, w26
   4c584:	bl	cb10 <mpfr_check_range@plt>
   4c588:	b	4b448 <mpfr_lngamma@@Base+0x2d4>
   4c58c:	mov	x8, xzr
   4c590:	add	x19, x8, x23
   4c594:	subs	x20, x19, #0x1
   4c598:	b.ne	4b864 <mpfr_lngamma@@Base+0x6f0>  // b.any
   4c59c:	mov	w8, #0xd                   	// #13
   4c5a0:	b	4b874 <mpfr_lngamma@@Base+0x700>
   4c5a4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c5a8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c5ac:	add	x0, x0, #0x56f
   4c5b0:	add	x2, x2, #0x238
   4c5b4:	mov	w1, #0x1b0                 	// #432
   4c5b8:	bl	cb20 <mpfr_assert_fail@plt>
   4c5bc:	b	4b84c <mpfr_lngamma@@Base+0x6d8>
   4c5c0:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c5c4:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c5c8:	add	x0, x0, #0x56f
   4c5cc:	add	x2, x2, #0x4c5
   4c5d0:	mov	w1, #0x1b1                 	// #433
   4c5d4:	bl	cb20 <mpfr_assert_fail@plt>
   4c5d8:	b	4b868 <mpfr_lngamma@@Base+0x6f4>
   4c5dc:	mov	x8, xzr
   4c5e0:	add	x19, x8, x23
   4c5e4:	subs	x20, x19, #0x1
   4c5e8:	b.ne	4c150 <mpfr_lngamma@@Base+0xfdc>  // b.any
   4c5ec:	mov	w8, #0xe                   	// #14
   4c5f0:	b	4c160 <mpfr_lngamma@@Base+0xfec>
   4c5f4:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c5f8:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c5fc:	add	x0, x0, #0x56f
   4c600:	add	x2, x2, #0x238
   4c604:	mov	w1, #0x14a                 	// #330
   4c608:	bl	cb20 <mpfr_assert_fail@plt>
   4c60c:	b	4c138 <mpfr_lngamma@@Base+0xfc4>
   4c610:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c614:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c618:	add	x0, x0, #0x56f
   4c61c:	add	x2, x2, #0x4c5
   4c620:	mov	w1, #0x14b                 	// #331
   4c624:	bl	cb20 <mpfr_assert_fail@plt>
   4c628:	b	4c154 <mpfr_lngamma@@Base+0xfe0>

000000000004c62c <mpfr_lgamma@@Base>:
   4c62c:	sub	sp, sp, #0xb0
   4c630:	mov	w8, #0x1                   	// #1
   4c634:	stp	x29, x30, [sp, #80]
   4c638:	stp	x28, x27, [sp, #96]
   4c63c:	stp	x26, x25, [sp, #112]
   4c640:	stp	x24, x23, [sp, #128]
   4c644:	stp	x22, x21, [sp, #144]
   4c648:	stp	x20, x19, [sp, #160]
   4c64c:	str	w8, [x1]
   4c650:	ldr	x9, [x2, #16]
   4c654:	mov	x8, #0x2                   	// #2
   4c658:	movk	x8, #0x8000, lsl #48
   4c65c:	add	x10, x8, #0x2
   4c660:	mov	x21, x2
   4c664:	mov	x22, x1
   4c668:	cmp	x9, x10
   4c66c:	mov	x19, x0
   4c670:	add	x29, sp, #0x50
   4c674:	b.lt	4c9fc <mpfr_lgamma@@Base+0x3d0>  // b.tstop
   4c678:	ldr	w8, [x21, #8]
   4c67c:	mov	w20, w3
   4c680:	tbnz	w8, #31, 4c69c <mpfr_lgamma@@Base+0x70>
   4c684:	mov	x0, x19
   4c688:	mov	x1, x21
   4c68c:	mov	w2, w20
   4c690:	bl	4b2bc <mpfr_lngamma@@Base+0x148>
   4c694:	mov	w25, w0
   4c698:	b	4c6dc <mpfr_lgamma@@Base+0xb0>
   4c69c:	mov	x0, x21
   4c6a0:	bl	c1a0 <mpfr_integer_p@plt>
   4c6a4:	cbz	w0, 4c700 <mpfr_lgamma@@Base+0xd4>
   4c6a8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4c6ac:	mov	w9, #0x1                   	// #1
   4c6b0:	str	x8, [x19, #16]
   4c6b4:	str	w9, [x19, #8]
   4c6b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c6bc:	ldr	x1, [x0, #2640]
   4c6c0:	add	x0, x0, #0xa50
   4c6c4:	blr	x1
   4c6c8:	mrs	x8, tpidr_el0
   4c6cc:	ldr	w9, [x8, x0]
   4c6d0:	mov	w25, wzr
   4c6d4:	orr	w9, w9, #0x20
   4c6d8:	str	w9, [x8, x0]
   4c6dc:	mov	w0, w25
   4c6e0:	ldp	x20, x19, [sp, #160]
   4c6e4:	ldp	x22, x21, [sp, #144]
   4c6e8:	ldp	x24, x23, [sp, #128]
   4c6ec:	ldp	x26, x25, [sp, #112]
   4c6f0:	ldp	x28, x27, [sp, #96]
   4c6f4:	ldp	x29, x30, [sp, #80]
   4c6f8:	add	sp, sp, #0xb0
   4c6fc:	ret
   4c700:	ldr	x8, [x21, #16]
   4c704:	cmp	x8, #0x1
   4c708:	b.lt	4c754 <mpfr_lgamma@@Base+0x128>  // b.tstop
   4c70c:	ldr	x9, [x21]
   4c710:	cmp	x8, x9
   4c714:	b.gt	4c754 <mpfr_lgamma@@Base+0x128>
   4c718:	sub	x10, x9, #0x1
   4c71c:	add	x9, x9, #0x3e
   4c720:	cmp	x10, #0x0
   4c724:	csel	x9, x9, x10, lt  // lt = tstop
   4c728:	and	x9, x9, #0xffffffffffffffc0
   4c72c:	sub	x9, x9, x8
   4c730:	ldr	x11, [x21, #24]
   4c734:	add	x10, x9, #0x40
   4c738:	add	x9, x9, #0x7f
   4c73c:	cmp	x10, #0x0
   4c740:	csel	x9, x9, x10, lt  // lt = tstop
   4c744:	asr	x9, x9, #6
   4c748:	ldr	x9, [x11, x9, lsl #3]
   4c74c:	lsr	x9, x9, x10
   4c750:	tbnz	w9, #0, 4c75c <mpfr_lgamma@@Base+0x130>
   4c754:	mov	w9, #0xffffffff            	// #-1
   4c758:	str	w9, [x22]
   4c75c:	ldr	x9, [x19]
   4c760:	neg	x10, x9
   4c764:	cmp	x8, x10
   4c768:	b.ge	4c684 <mpfr_lgamma@@Base+0x58>  // b.tcont
   4c76c:	add	x22, x9, #0xe
   4c770:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c774:	ldr	x1, [x0, #2640]
   4c778:	add	x0, x0, #0xa50
   4c77c:	blr	x1
   4c780:	mrs	x26, tpidr_el0
   4c784:	ldr	w8, [x26, x0]
   4c788:	str	w8, [sp, #12]
   4c78c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c790:	ldr	x1, [x0, #2576]
   4c794:	add	x0, x0, #0xa10
   4c798:	blr	x1
   4c79c:	ldr	x9, [x26, x0]
   4c7a0:	mov	x8, x0
   4c7a4:	str	x9, [sp]
   4c7a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c7ac:	ldr	x1, [x0, #2608]
   4c7b0:	add	x0, x0, #0xa30
   4c7b4:	blr	x1
   4c7b8:	ldr	x23, [x26, x0]
   4c7bc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4c7c0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   4c7c4:	mov	w24, #0x40                  	// #64
   4c7c8:	str	x9, [x26, x8]
   4c7cc:	str	x10, [x26, x0]
   4c7d0:	sub	x0, x29, #0x20
   4c7d4:	mov	x1, x22
   4c7d8:	bl	ca60 <mpfr_init2@plt>
   4c7dc:	add	x0, sp, #0x10
   4c7e0:	mov	x1, x22
   4c7e4:	bl	ca60 <mpfr_init2@plt>
   4c7e8:	sub	x0, x29, #0x20
   4c7ec:	mov	w2, #0x2                   	// #2
   4c7f0:	mov	x1, x21
   4c7f4:	bl	bdc0 <mpfr_neg@plt>
   4c7f8:	sub	x0, x29, #0x20
   4c7fc:	sub	x1, x29, #0x20
   4c800:	mov	w2, #0x2                   	// #2
   4c804:	bl	c0d0 <mpfr_log@plt>
   4c808:	sub	x0, x29, #0x20
   4c80c:	sub	x1, x29, #0x20
   4c810:	mov	w2, #0x3                   	// #3
   4c814:	bl	bdc0 <mpfr_neg@plt>
   4c818:	add	x0, sp, #0x10
   4c81c:	mov	w2, #0x3                   	// #3
   4c820:	mov	x1, x21
   4c824:	bl	bdc0 <mpfr_neg@plt>
   4c828:	add	x0, sp, #0x10
   4c82c:	add	x1, sp, #0x10
   4c830:	mov	w2, #0x3                   	// #3
   4c834:	bl	c0d0 <mpfr_log@plt>
   4c838:	add	x0, sp, #0x10
   4c83c:	add	x1, sp, #0x10
   4c840:	mov	w2, #0x2                   	// #2
   4c844:	bl	bdc0 <mpfr_neg@plt>
   4c848:	add	x0, sp, #0x10
   4c84c:	add	x1, sp, #0x10
   4c850:	mov	w3, #0x2                   	// #2
   4c854:	mov	x2, x21
   4c858:	bl	bbc0 <mpfr_sub@plt>
   4c85c:	ldr	x1, [x19]
   4c860:	sub	x0, x29, #0x20
   4c864:	mov	w2, w20
   4c868:	bl	c960 <mpfr_prec_round@plt>
   4c86c:	ldr	x1, [x19]
   4c870:	mov	w25, w0
   4c874:	add	x0, sp, #0x10
   4c878:	mov	w2, w20
   4c87c:	bl	c960 <mpfr_prec_round@plt>
   4c880:	cmp	w25, #0x0
   4c884:	cset	w8, gt
   4c888:	csinv	w8, w8, wzr, ge  // ge = tcont
   4c88c:	cmp	w0, #0x0
   4c890:	cset	w9, gt
   4c894:	csinv	w9, w9, wzr, ge  // ge = tcont
   4c898:	cmp	w8, w9
   4c89c:	b.ne	4c8cc <mpfr_lgamma@@Base+0x2a0>  // b.any
   4c8a0:	sub	x0, x29, #0x20
   4c8a4:	add	x1, sp, #0x10
   4c8a8:	bl	ca40 <mpfr_equal_p@plt>
   4c8ac:	cbz	w0, 4c8cc <mpfr_lgamma@@Base+0x2a0>
   4c8b0:	ldr	w3, [sp, #24]
   4c8b4:	add	x1, sp, #0x10
   4c8b8:	mov	x0, x19
   4c8bc:	mov	w2, w20
   4c8c0:	bl	c690 <mpfr_set4@plt>
   4c8c4:	mov	w28, #0x1                   	// #1
   4c8c8:	b	4c8d4 <mpfr_lgamma@@Base+0x2a8>
   4c8cc:	ldur	x27, [x29, #-16]
   4c8d0:	mov	w28, wzr
   4c8d4:	sub	x0, x29, #0x20
   4c8d8:	bl	c0b0 <mpfr_clear@plt>
   4c8dc:	add	x0, sp, #0x10
   4c8e0:	bl	c0b0 <mpfr_clear@plt>
   4c8e4:	cbnz	w28, 4c93c <mpfr_lgamma@@Base+0x310>
   4c8e8:	ldr	x8, [x21, #16]
   4c8ec:	add	x8, x8, x22
   4c8f0:	cmp	x27, x8
   4c8f4:	b.lt	4c9b4 <mpfr_lgamma@@Base+0x388>  // b.tstop
   4c8f8:	subs	x25, x22, #0x1
   4c8fc:	b.eq	4c918 <mpfr_lgamma@@Base+0x2ec>  // b.none
   4c900:	b.le	4c920 <mpfr_lgamma@@Base+0x2f4>
   4c904:	clz	x8, x25
   4c908:	sub	x8, x24, x8
   4c90c:	add	x8, x22, x8
   4c910:	add	x22, x8, #0x3
   4c914:	b	4c7d0 <mpfr_lgamma@@Base+0x1a4>
   4c918:	mov	x8, xzr
   4c91c:	b	4c90c <mpfr_lgamma@@Base+0x2e0>
   4c920:	adrp	x0, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c924:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   4c928:	mov	w1, #0x35d                 	// #861
   4c92c:	add	x0, x0, #0x56f
   4c930:	add	x2, x2, #0x4c5
   4c934:	bl	cb20 <mpfr_assert_fail@plt>
   4c938:	b	4c904 <mpfr_lgamma@@Base+0x2d8>
   4c93c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c940:	ldr	x1, [x0, #2640]
   4c944:	add	x0, x0, #0xa50
   4c948:	blr	x1
   4c94c:	ldr	w9, [sp, #12]
   4c950:	str	w9, [x26, x0]
   4c954:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c958:	ldr	x1, [x0, #2576]
   4c95c:	add	x0, x0, #0xa10
   4c960:	blr	x1
   4c964:	ldr	x10, [sp]
   4c968:	str	x10, [x26, x0]
   4c96c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c970:	ldr	x1, [x0, #2608]
   4c974:	add	x0, x0, #0xa30
   4c978:	blr	x1
   4c97c:	str	x23, [x26, x0]
   4c980:	ldr	x8, [x19, #16]
   4c984:	cmp	x8, x23
   4c988:	b.gt	4ca80 <mpfr_lgamma@@Base+0x454>
   4c98c:	cmp	x8, x10
   4c990:	b.lt	4ca80 <mpfr_lgamma@@Base+0x454>  // b.tstop
   4c994:	cbz	w25, 4c6dc <mpfr_lgamma@@Base+0xb0>
   4c998:	orr	w8, w9, #0x8
   4c99c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c9a0:	ldr	x1, [x0, #2640]
   4c9a4:	add	x0, x0, #0xa50
   4c9a8:	blr	x1
   4c9ac:	str	w8, [x26, x0]
   4c9b0:	b	4c6dc <mpfr_lgamma@@Base+0xb0>
   4c9b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c9b8:	ldr	x1, [x0, #2640]
   4c9bc:	add	x0, x0, #0xa50
   4c9c0:	blr	x1
   4c9c4:	ldr	w8, [sp, #12]
   4c9c8:	str	w8, [x26, x0]
   4c9cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c9d0:	ldr	x1, [x0, #2576]
   4c9d4:	add	x0, x0, #0xa10
   4c9d8:	blr	x1
   4c9dc:	ldr	x8, [sp]
   4c9e0:	str	x8, [x26, x0]
   4c9e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4c9e8:	ldr	x1, [x0, #2608]
   4c9ec:	add	x0, x0, #0xa30
   4c9f0:	blr	x1
   4c9f4:	str	x23, [x26, x0]
   4c9f8:	b	4c684 <mpfr_lgamma@@Base+0x58>
   4c9fc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   4ca00:	cmp	x9, x10
   4ca04:	b.eq	4ca40 <mpfr_lgamma@@Base+0x414>  // b.none
   4ca08:	mov	x10, #0x2                   	// #2
   4ca0c:	movk	x10, #0x8000, lsl #48
   4ca10:	cmp	x9, x10
   4ca14:	b.ne	4ca60 <mpfr_lgamma@@Base+0x434>  // b.any
   4ca18:	str	x8, [x19, #16]
   4ca1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4ca20:	ldr	x1, [x0, #2640]
   4ca24:	add	x0, x0, #0xa50
   4ca28:	blr	x1
   4ca2c:	mrs	x8, tpidr_el0
   4ca30:	ldr	w9, [x8, x0]
   4ca34:	mov	w25, wzr
   4ca38:	orr	w9, w9, #0x4
   4ca3c:	b	4c6d8 <mpfr_lgamma@@Base+0xac>
   4ca40:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4ca44:	ldr	x1, [x0, #2640]
   4ca48:	add	x0, x0, #0xa50
   4ca4c:	blr	x1
   4ca50:	mrs	x8, tpidr_el0
   4ca54:	ldr	w9, [x8, x0]
   4ca58:	orr	w9, w9, #0x20
   4ca5c:	str	w9, [x8, x0]
   4ca60:	ldr	w8, [x21, #8]
   4ca64:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4ca68:	mov	w10, #0x1                   	// #1
   4ca6c:	mov	w25, wzr
   4ca70:	str	w8, [x22]
   4ca74:	str	x9, [x19, #16]
   4ca78:	str	w10, [x19, #8]
   4ca7c:	b	4c6dc <mpfr_lgamma@@Base+0xb0>
   4ca80:	mov	x0, x19
   4ca84:	mov	w1, w25
   4ca88:	mov	w2, w20
   4ca8c:	bl	cb10 <mpfr_check_range@plt>
   4ca90:	b	4c694 <mpfr_lgamma@@Base+0x68>

000000000004ca94 <mpfr_zeta_ui@@Base>:
   4ca94:	sub	sp, sp, #0x110
   4ca98:	stp	x22, x21, [sp, #240]
   4ca9c:	stp	x20, x19, [sp, #256]
   4caa0:	subs	x22, x1, #0x1
   4caa4:	mov	x19, x0
   4caa8:	str	d8, [sp, #160]
   4caac:	stp	x29, x30, [sp, #176]
   4cab0:	stp	x28, x27, [sp, #192]
   4cab4:	stp	x26, x25, [sp, #208]
   4cab8:	stp	x24, x23, [sp, #224]
   4cabc:	add	x29, sp, #0xa0
   4cac0:	b.eq	4cb00 <mpfr_zeta_ui@@Base+0x6c>  // b.none
   4cac4:	mov	w3, w2
   4cac8:	mov	x21, x1
   4cacc:	cbnz	x1, 4cb38 <mpfr_zeta_ui@@Base+0xa4>
   4cad0:	mov	x0, x19
   4cad4:	ldp	x20, x19, [sp, #256]
   4cad8:	ldp	x22, x21, [sp, #240]
   4cadc:	ldp	x24, x23, [sp, #224]
   4cae0:	ldp	x26, x25, [sp, #208]
   4cae4:	ldp	x28, x27, [sp, #192]
   4cae8:	ldp	x29, x30, [sp, #176]
   4caec:	ldr	d8, [sp, #160]
   4caf0:	mov	x1, #0xffffffffffffffff    	// #-1
   4caf4:	mov	x2, #0xffffffffffffffff    	// #-1
   4caf8:	add	sp, sp, #0x110
   4cafc:	b	bae0 <mpfr_set_si_2exp@plt>
   4cb00:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4cb04:	mov	w9, #0x1                   	// #1
   4cb08:	str	x8, [x19, #16]
   4cb0c:	str	w9, [x19, #8]
   4cb10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4cb14:	ldr	x1, [x0, #2640]
   4cb18:	add	x0, x0, #0xa50
   4cb1c:	blr	x1
   4cb20:	mrs	x8, tpidr_el0
   4cb24:	ldr	w9, [x8, x0]
   4cb28:	mov	w21, wzr
   4cb2c:	orr	w9, w9, #0x20
   4cb30:	str	w9, [x8, x0]
   4cb34:	b	4d1a8 <mpfr_zeta_ui@@Base+0x714>
   4cb38:	ldr	x20, [x19]
   4cb3c:	cmp	w3, #0x4
   4cb40:	mov	w8, #0x2                   	// #2
   4cb44:	csel	w24, w8, w3, eq  // eq = none
   4cb48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4cb4c:	ldr	x1, [x0, #2640]
   4cb50:	add	x0, x0, #0xa50
   4cb54:	blr	x1
   4cb58:	mrs	x28, tpidr_el0
   4cb5c:	ldr	w23, [x28, x0]
   4cb60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4cb64:	ldr	x1, [x0, #2576]
   4cb68:	add	x0, x0, #0xa10
   4cb6c:	blr	x1
   4cb70:	ldr	x25, [x28, x0]
   4cb74:	mov	x8, x0
   4cb78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4cb7c:	ldr	x1, [x0, #2608]
   4cb80:	add	x0, x0, #0xa30
   4cb84:	blr	x1
   4cb88:	ldr	x26, [x28, x0]
   4cb8c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4cb90:	str	x9, [x28, x8]
   4cb94:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4cb98:	cmp	x20, x21
   4cb9c:	str	x8, [x28, x0]
   4cba0:	b.ls	4cc54 <mpfr_zeta_ui@@Base+0x1c0>  // b.plast
   4cba4:	add	x0, sp, #0x38
   4cba8:	mov	w1, #0x1f                  	// #31
   4cbac:	bl	ca60 <mpfr_init2@plt>
   4cbb0:	cmp	x20, #0x0
   4cbb4:	cinc	x8, x20, lt  // lt = tstop
   4cbb8:	cmp	x21, x8, asr #1
   4cbbc:	b.cc	4cc78 <mpfr_zeta_ui@@Base+0x1e4>  // b.lo, b.ul, b.last
   4cbc0:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   4cbc4:	add	x1, x1, #0x838
   4cbc8:	add	x0, sp, #0x38
   4cbcc:	bl	c340 <mpfr_set_str_binary@plt>
   4cbd0:	add	x0, sp, #0x38
   4cbd4:	add	x1, sp, #0x38
   4cbd8:	mov	w3, #0x1                   	// #1
   4cbdc:	mov	x2, x21
   4cbe0:	bl	bab0 <mpfr_mul_ui@plt>
   4cbe4:	add	x1, x20, #0x2
   4cbe8:	add	x0, sp, #0x38
   4cbec:	mov	x2, xzr
   4cbf0:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4cbf4:	tbnz	w0, #31, 4cc78 <mpfr_zeta_ui@@Base+0x1e4>
   4cbf8:	add	x0, sp, #0x38
   4cbfc:	bl	c0b0 <mpfr_clear@plt>
   4cc00:	mov	w1, #0x1                   	// #1
   4cc04:	mov	w3, #0x1                   	// #1
   4cc08:	mov	x0, x19
   4cc0c:	mov	x2, xzr
   4cc10:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4cc14:	mov	w3, #0x1                   	// #1
   4cc18:	mov	x0, x19
   4cc1c:	mov	x1, x19
   4cc20:	mov	x2, x21
   4cc24:	bl	c8f0 <mpfr_div_2ui@plt>
   4cc28:	mov	w2, #0x1                   	// #1
   4cc2c:	mov	w3, #0x1                   	// #1
   4cc30:	mov	x0, x19
   4cc34:	mov	x1, x19
   4cc38:	bl	c270 <mpfr_add_ui@plt>
   4cc3c:	cmp	w24, #0x2
   4cc40:	b.ne	4d138 <mpfr_zeta_ui@@Base+0x6a4>  // b.any
   4cc44:	mov	x0, x19
   4cc48:	bl	c160 <mpfr_nextabove@plt>
   4cc4c:	mov	w21, #0x1                   	// #1
   4cc50:	b	4d13c <mpfr_zeta_ui@@Base+0x6a8>
   4cc54:	cmp	x21, #0x2
   4cc58:	b.ne	4d10c <mpfr_zeta_ui@@Base+0x678>  // b.any
   4cc5c:	mov	w1, #0xd                   	// #13
   4cc60:	mov	x2, #0xfffffffffffffffd    	// #-3
   4cc64:	mov	x0, x19
   4cc68:	mov	w3, w24
   4cc6c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4cc70:	mov	w21, w0
   4cc74:	b	4d13c <mpfr_zeta_ui@@Base+0x6a8>
   4cc78:	sub	x0, x29, #0x38
   4cc7c:	str	w23, [sp, #44]
   4cc80:	bl	bfe0 <mpfr_mpz_init@plt>
   4cc84:	sub	x0, x29, #0x18
   4cc88:	bl	bfe0 <mpfr_mpz_init@plt>
   4cc8c:	sub	x0, x29, #0x28
   4cc90:	bl	bfe0 <mpfr_mpz_init@plt>
   4cc94:	sub	x0, x29, #0x48
   4cc98:	bl	bfe0 <mpfr_mpz_init@plt>
   4cc9c:	subs	x23, x20, #0x1
   4cca0:	b.eq	4d20c <mpfr_zeta_ui@@Base+0x778>  // b.none
   4cca4:	b.le	4d224 <mpfr_zeta_ui@@Base+0x790>
   4cca8:	clz	x8, x23
   4ccac:	mov	w9, #0x40                  	// #64
   4ccb0:	sub	x8, x9, x8
   4ccb4:	add	x20, x8, x20
   4ccb8:	subs	x23, x20, #0x1
   4ccbc:	b.eq	4d21c <mpfr_zeta_ui@@Base+0x788>  // b.none
   4ccc0:	b.le	4d240 <mpfr_zeta_ui@@Base+0x7ac>
   4ccc4:	clz	x8, x23
   4ccc8:	mov	w9, #0x4f                  	// #79
   4cccc:	sub	x8, x9, x8
   4ccd0:	adrp	x9, 64000 <mpfr_bases@@Base+0x758>
   4ccd4:	ldr	d8, [x9, #2096]
   4ccd8:	add	x27, x8, x20
   4ccdc:	cmp	w24, #0x0
   4cce0:	mov	w8, #0x2                   	// #2
   4cce4:	cset	w10, eq  // eq = none
   4cce8:	sub	x8, x8, x21
   4ccec:	stp	x26, x25, [sp, #24]
   4ccf0:	str	w24, [sp, #12]
   4ccf4:	mov	w24, #0x40                  	// #64
   4ccf8:	str	x10, [sp, #16]
   4ccfc:	str	x8, [x29, #8]
   4cd00:	mov	w8, #0x40                  	// #64
   4cd04:	scvtf	d0, x27
   4cd08:	fmul	d0, d0, d8
   4cd0c:	fcvtzu	x26, d0
   4cd10:	adds	x23, x26, #0x1
   4cd14:	add	x0, sp, #0x38
   4cd18:	mov	x1, x27
   4cd1c:	str	x8, [sp]
   4cd20:	cset	w20, cs  // cs = hs, nlast
   4cd24:	str	x27, [sp, #48]
   4cd28:	bl	bf20 <mpfr_set_prec@plt>
   4cd2c:	sub	x0, x29, #0x38
   4cd30:	mov	x1, xzr
   4cd34:	bl	bd00 <__gmpz_set_ui@plt>
   4cd38:	sub	x0, x29, #0x28
   4cd3c:	mov	w1, #0x1                   	// #1
   4cd40:	bl	bd00 <__gmpz_set_ui@plt>
   4cd44:	lsl	x8, x23, #1
   4cd48:	sub	x2, x8, #0x1
   4cd4c:	sub	x0, x29, #0x28
   4cd50:	sub	x1, x29, #0x28
   4cd54:	bl	c230 <__gmpz_mul_2exp@plt>
   4cd58:	sub	x0, x29, #0x18
   4cd5c:	sub	x1, x29, #0x28
   4cd60:	bl	bff0 <__gmpz_set@plt>
   4cd64:	tbz	w20, #0, 4ce90 <mpfr_zeta_ui@@Base+0x3fc>
   4cd68:	sub	x0, x29, #0x28
   4cd6c:	sub	x1, x29, #0x38
   4cd70:	mov	x2, x22
   4cd74:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4cd78:	add	x23, x26, #0x4
   4cd7c:	sub	x0, x29, #0x38
   4cd80:	sub	x1, x29, #0x38
   4cd84:	sub	x2, x29, #0x28
   4cd88:	bl	c9a0 <__gmpz_add@plt>
   4cd8c:	sub	x0, x29, #0x28
   4cd90:	sub	x1, x29, #0x28
   4cd94:	mov	x2, x22
   4cd98:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4cd9c:	ldur	w8, [x29, #-36]
   4cda0:	add	x23, x23, #0x1
   4cda4:	cmp	w8, #0x0
   4cda8:	b.gt	4cd7c <mpfr_zeta_ui@@Base+0x2e8>
   4cdac:	ldr	x27, [sp, #48]
   4cdb0:	sub	x0, x29, #0x38
   4cdb4:	sub	x1, x29, #0x38
   4cdb8:	mov	x2, x27
   4cdbc:	bl	c230 <__gmpz_mul_2exp@plt>
   4cdc0:	sub	x0, x29, #0x38
   4cdc4:	sub	x1, x29, #0x38
   4cdc8:	sub	x2, x29, #0x18
   4cdcc:	bl	bb80 <__gmpz_tdiv_q@plt>
   4cdd0:	add	x0, sp, #0x38
   4cdd4:	sub	x1, x29, #0x38
   4cdd8:	mov	w2, wzr
   4cddc:	bl	c250 <mpfr_set_z@plt>
   4cde0:	add	x0, sp, #0x38
   4cde4:	add	x1, sp, #0x38
   4cde8:	mov	x2, x27
   4cdec:	mov	w3, wzr
   4cdf0:	bl	c8f0 <mpfr_div_2ui@plt>
   4cdf4:	ldp	x26, x25, [sp, #24]
   4cdf8:	cbz	x23, 4d084 <mpfr_zeta_ui@@Base+0x5f0>
   4cdfc:	add	x8, x23, #0x1
   4ce00:	cmp	x8, #0x1
   4ce04:	b.ls	4d08c <mpfr_zeta_ui@@Base+0x5f8>  // b.plast
   4ce08:	clz	x8, x23
   4ce0c:	sub	x8, x24, x8
   4ce10:	ldr	x9, [sp, #72]
   4ce14:	mov	x10, #0xfffffffffffffeff    	// #-257
   4ce18:	ldr	w23, [sp, #44]
   4ce1c:	movk	x10, #0x7fff, lsl #48
   4ce20:	add	x10, x10, #0x105
   4ce24:	cmp	x9, x10
   4ce28:	b.lt	4ce64 <mpfr_zeta_ui@@Base+0x3d0>  // b.tstop
   4ce2c:	ldr	x9, [sp, #56]
   4ce30:	sub	x2, x27, x8
   4ce34:	ldr	x8, [x19]
   4ce38:	ldr	x0, [sp, #80]
   4ce3c:	sub	x10, x9, #0x1
   4ce40:	add	x9, x9, #0x3e
   4ce44:	cmp	x10, #0x0
   4ce48:	csel	x9, x9, x10, lt  // lt = tstop
   4ce4c:	asr	x9, x9, #6
   4ce50:	add	x1, x9, #0x1
   4ce54:	ldr	x9, [sp, #16]
   4ce58:	add	x3, x8, x9
   4ce5c:	bl	c370 <mpfr_round_p@plt>
   4ce60:	cbnz	w0, 4d0c4 <mpfr_zeta_ui@@Base+0x630>
   4ce64:	ldr	x20, [sp]
   4ce68:	mov	x8, #0xfffffffffffffeff    	// #-257
   4ce6c:	movk	x8, #0x7fff, lsl #48
   4ce70:	sub	x8, x8, x27
   4ce74:	cmp	x20, x8
   4ce78:	b.gt	4d0a8 <mpfr_zeta_ui@@Base+0x614>
   4ce7c:	add	x27, x20, x27
   4ce80:	cmp	x27, #0x0
   4ce84:	cinc	x8, x27, lt  // lt = tstop
   4ce88:	asr	x8, x8, #1
   4ce8c:	b	4cd04 <mpfr_zeta_ui@@Base+0x270>
   4ce90:	mov	x27, x23
   4ce94:	b	4cecc <mpfr_zeta_ui@@Base+0x438>
   4ce98:	sub	x0, x29, #0x28
   4ce9c:	sub	x1, x29, #0x28
   4cea0:	bl	c560 <__gmpz_divexact_ui@plt>
   4cea4:	add	x2, x27, x26
   4cea8:	sub	x0, x29, #0x28
   4ceac:	sub	x1, x29, #0x28
   4ceb0:	bl	c560 <__gmpz_divexact_ui@plt>
   4ceb4:	sub	x0, x29, #0x18
   4ceb8:	sub	x1, x29, #0x18
   4cebc:	sub	x2, x29, #0x28
   4cec0:	bl	c9a0 <__gmpz_add@plt>
   4cec4:	subs	x27, x27, #0x1
   4cec8:	b.eq	4cd68 <mpfr_zeta_ui@@Base+0x2d4>  // b.none
   4cecc:	clz	x8, x27
   4ced0:	sub	x9, x24, x8
   4ced4:	mul	x9, x9, x21
   4ced8:	cmp	x9, #0x80
   4cedc:	b.ls	4cf4c <mpfr_zeta_ui@@Base+0x4b8>  // b.plast
   4cee0:	eor	x8, x8, #0x3f
   4cee4:	orr	x9, xzr, #0x1
   4cee8:	sub	x0, x29, #0x18
   4ceec:	mov	w1, #0x2                   	// #2
   4cef0:	madd	x20, x8, x21, x9
   4cef4:	bl	cb40 <__gmpz_sizeinbase@plt>
   4cef8:	cmp	x20, x0
   4cefc:	b.ls	4cf88 <mpfr_zeta_ui@@Base+0x4f4>  // b.plast
   4cf00:	sub	x0, x29, #0x48
   4cf04:	mov	x1, xzr
   4cf08:	bl	bd00 <__gmpz_set_ui@plt>
   4cf0c:	sub	x0, x29, #0x38
   4cf10:	sub	x1, x29, #0x38
   4cf14:	sub	x2, x29, #0x48
   4cf18:	tbz	w27, #0, 4d02c <mpfr_zeta_ui@@Base+0x598>
   4cf1c:	bl	c9a0 <__gmpz_add@plt>
   4cf20:	mov	w8, #0xf334                	// #62260
   4cf24:	movk	w8, #0xb504, lsl #16
   4cf28:	cmp	x27, x8
   4cf2c:	b.ls	4d040 <mpfr_zeta_ui@@Base+0x5ac>  // b.plast
   4cf30:	sub	x0, x29, #0x28
   4cf34:	sub	x1, x29, #0x28
   4cf38:	mov	x2, x27
   4cf3c:	bl	c140 <__gmpz_mul_ui@plt>
   4cf40:	lsl	x8, x27, #1
   4cf44:	sub	x2, x8, #0x1
   4cf48:	b	4d04c <mpfr_zeta_ui@@Base+0x5b8>
   4cf4c:	mov	x2, x27
   4cf50:	cbz	x22, 4cf7c <mpfr_zeta_ui@@Base+0x4e8>
   4cf54:	ldr	x25, [x29, #8]
   4cf58:	mov	x8, #0xffffffffffffffff    	// #-1
   4cf5c:	udiv	x20, x8, x27
   4cf60:	mov	x2, x27
   4cf64:	cmp	x2, x20
   4cf68:	b.cs	4cfbc <mpfr_zeta_ui@@Base+0x528>  // b.hs, b.nlast
   4cf6c:	add	x25, x25, #0x1
   4cf70:	cmp	x25, #0x1
   4cf74:	mul	x2, x2, x27
   4cf78:	b.ne	4cf64 <mpfr_zeta_ui@@Base+0x4d0>  // b.any
   4cf7c:	sub	x0, x29, #0x48
   4cf80:	sub	x1, x29, #0x18
   4cf84:	b	4d018 <mpfr_zeta_ui@@Base+0x584>
   4cf88:	sub	x0, x29, #0x48
   4cf8c:	mov	x1, x27
   4cf90:	mov	x2, x21
   4cf94:	bl	c4d0 <__gmpz_ui_pow_ui@plt>
   4cf98:	sub	x0, x29, #0x48
   4cf9c:	sub	x1, x29, #0x18
   4cfa0:	sub	x2, x29, #0x48
   4cfa4:	bl	bb80 <__gmpz_tdiv_q@plt>
   4cfa8:	sub	x0, x29, #0x38
   4cfac:	sub	x1, x29, #0x38
   4cfb0:	sub	x2, x29, #0x48
   4cfb4:	tbz	w27, #0, 4d02c <mpfr_zeta_ui@@Base+0x598>
   4cfb8:	b	4cf1c <mpfr_zeta_ui@@Base+0x488>
   4cfbc:	sub	x0, x29, #0x48
   4cfc0:	sub	x1, x29, #0x18
   4cfc4:	bl	c080 <__gmpz_tdiv_q_ui@plt>
   4cfc8:	mov	x2, x27
   4cfcc:	cbz	x25, 4d010 <mpfr_zeta_ui@@Base+0x57c>
   4cfd0:	neg	x25, x25
   4cfd4:	mov	x2, x27
   4cfd8:	b	4cff4 <mpfr_zeta_ui@@Base+0x560>
   4cfdc:	sub	x0, x29, #0x48
   4cfe0:	sub	x1, x29, #0x48
   4cfe4:	bl	c080 <__gmpz_tdiv_q_ui@plt>
   4cfe8:	subs	x25, x25, #0x1
   4cfec:	mov	x2, x27
   4cff0:	b.eq	4d00c <mpfr_zeta_ui@@Base+0x578>  // b.none
   4cff4:	cmp	x2, x20
   4cff8:	b.cs	4cfdc <mpfr_zeta_ui@@Base+0x548>  // b.hs, b.nlast
   4cffc:	subs	x25, x25, #0x1
   4d000:	mul	x2, x2, x27
   4d004:	b.ne	4cff4 <mpfr_zeta_ui@@Base+0x560>  // b.any
   4d008:	b	4d010 <mpfr_zeta_ui@@Base+0x57c>
   4d00c:	mov	x2, x27
   4d010:	sub	x0, x29, #0x48
   4d014:	sub	x1, x29, #0x48
   4d018:	bl	c080 <__gmpz_tdiv_q_ui@plt>
   4d01c:	sub	x0, x29, #0x38
   4d020:	sub	x1, x29, #0x38
   4d024:	sub	x2, x29, #0x48
   4d028:	tbnz	w27, #0, 4cf1c <mpfr_zeta_ui@@Base+0x488>
   4d02c:	bl	be30 <__gmpz_sub@plt>
   4d030:	mov	w8, #0xf334                	// #62260
   4d034:	movk	w8, #0xb504, lsl #16
   4d038:	cmp	x27, x8
   4d03c:	b.hi	4cf30 <mpfr_zeta_ui@@Base+0x49c>  // b.pmore
   4d040:	lsl	x8, x27, #1
   4d044:	sub	x8, x8, #0x1
   4d048:	mul	x2, x8, x27
   4d04c:	sub	x0, x29, #0x28
   4d050:	sub	x1, x29, #0x28
   4d054:	bl	c140 <__gmpz_mul_ui@plt>
   4d058:	sub	x0, x29, #0x28
   4d05c:	sub	x1, x29, #0x28
   4d060:	mov	w2, #0x1                   	// #1
   4d064:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4d068:	sub	x8, x23, x27
   4d06c:	lsr	x9, x23, #32
   4d070:	add	x2, x8, #0x1
   4d074:	cbnz	x9, 4ce98 <mpfr_zeta_ui@@Base+0x404>
   4d078:	add	x8, x27, x26
   4d07c:	mul	x2, x2, x8
   4d080:	b	4cea8 <mpfr_zeta_ui@@Base+0x414>
   4d084:	mov	x8, xzr
   4d088:	b	4ce10 <mpfr_zeta_ui@@Base+0x37c>
   4d08c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4d090:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4d094:	mov	w1, #0xdc                  	// #220
   4d098:	add	x0, x0, #0x859
   4d09c:	add	x2, x2, #0x863
   4d0a0:	bl	cb20 <mpfr_assert_fail@plt>
   4d0a4:	b	4ce08 <mpfr_zeta_ui@@Base+0x374>
   4d0a8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4d0ac:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   4d0b0:	mov	w1, #0xe1                  	// #225
   4d0b4:	add	x0, x0, #0x859
   4d0b8:	add	x2, x2, #0xcf6
   4d0bc:	bl	cb20 <mpfr_assert_fail@plt>
   4d0c0:	b	4ce7c <mpfr_zeta_ui@@Base+0x3e8>
   4d0c4:	sub	x0, x29, #0x18
   4d0c8:	bl	c1b0 <mpfr_mpz_clear@plt>
   4d0cc:	sub	x0, x29, #0x28
   4d0d0:	bl	c1b0 <mpfr_mpz_clear@plt>
   4d0d4:	sub	x0, x29, #0x48
   4d0d8:	bl	c1b0 <mpfr_mpz_clear@plt>
   4d0dc:	sub	x0, x29, #0x38
   4d0e0:	bl	c1b0 <mpfr_mpz_clear@plt>
   4d0e4:	ldr	w24, [sp, #12]
   4d0e8:	ldr	w3, [sp, #64]
   4d0ec:	add	x1, sp, #0x38
   4d0f0:	mov	x0, x19
   4d0f4:	mov	w2, w24
   4d0f8:	bl	c690 <mpfr_set4@plt>
   4d0fc:	mov	w21, w0
   4d100:	add	x0, sp, #0x38
   4d104:	bl	c0b0 <mpfr_clear@plt>
   4d108:	b	4d13c <mpfr_zeta_ui@@Base+0x6a8>
   4d10c:	orr	w8, w24, #0x2
   4d110:	cmp	w8, #0x3
   4d114:	b.eq	4d124 <mpfr_zeta_ui@@Base+0x690>  // b.none
   4d118:	cbnz	w24, 4d1d0 <mpfr_zeta_ui@@Base+0x73c>
   4d11c:	cmp	x20, x21
   4d120:	b.cs	4d1d0 <mpfr_zeta_ui@@Base+0x73c>  // b.hs, b.nlast
   4d124:	mov	w1, #0x1                   	// #1
   4d128:	mov	x0, x19
   4d12c:	mov	x2, xzr
   4d130:	mov	w3, w24
   4d134:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4d138:	mov	w21, #0xffffffff            	// #-1
   4d13c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d140:	ldr	x1, [x0, #2640]
   4d144:	add	x0, x0, #0xa50
   4d148:	blr	x1
   4d14c:	str	w23, [x28, x0]
   4d150:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d154:	ldr	x1, [x0, #2576]
   4d158:	add	x0, x0, #0xa10
   4d15c:	blr	x1
   4d160:	str	x25, [x28, x0]
   4d164:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d168:	ldr	x1, [x0, #2608]
   4d16c:	add	x0, x0, #0xa30
   4d170:	blr	x1
   4d174:	str	x26, [x28, x0]
   4d178:	ldr	x8, [x19, #16]
   4d17c:	cmp	x8, x26
   4d180:	b.gt	4d1f4 <mpfr_zeta_ui@@Base+0x760>
   4d184:	cmp	x8, x25
   4d188:	b.lt	4d1f4 <mpfr_zeta_ui@@Base+0x760>  // b.tstop
   4d18c:	cbz	w21, 4d1a8 <mpfr_zeta_ui@@Base+0x714>
   4d190:	orr	w8, w23, #0x8
   4d194:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d198:	ldr	x1, [x0, #2640]
   4d19c:	add	x0, x0, #0xa50
   4d1a0:	blr	x1
   4d1a4:	str	w8, [x28, x0]
   4d1a8:	mov	w0, w21
   4d1ac:	ldp	x20, x19, [sp, #256]
   4d1b0:	ldp	x22, x21, [sp, #240]
   4d1b4:	ldp	x24, x23, [sp, #224]
   4d1b8:	ldp	x26, x25, [sp, #208]
   4d1bc:	ldp	x28, x27, [sp, #192]
   4d1c0:	ldp	x29, x30, [sp, #176]
   4d1c4:	ldr	d8, [sp, #160]
   4d1c8:	add	sp, sp, #0x110
   4d1cc:	ret
   4d1d0:	mov	w1, #0x1                   	// #1
   4d1d4:	mov	x0, x19
   4d1d8:	mov	x2, xzr
   4d1dc:	mov	w3, w24
   4d1e0:	mov	w21, #0x1                   	// #1
   4d1e4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4d1e8:	mov	x0, x19
   4d1ec:	bl	c160 <mpfr_nextabove@plt>
   4d1f0:	b	4d13c <mpfr_zeta_ui@@Base+0x6a8>
   4d1f4:	mov	x0, x19
   4d1f8:	mov	w1, w21
   4d1fc:	mov	w2, w24
   4d200:	bl	cb10 <mpfr_check_range@plt>
   4d204:	mov	w21, w0
   4d208:	b	4d1a8 <mpfr_zeta_ui@@Base+0x714>
   4d20c:	mov	x8, xzr
   4d210:	add	x20, x8, x20
   4d214:	subs	x23, x20, #0x1
   4d218:	b.ne	4ccc0 <mpfr_zeta_ui@@Base+0x22c>  // b.any
   4d21c:	mov	w8, #0xf                   	// #15
   4d220:	b	4ccd0 <mpfr_zeta_ui@@Base+0x23c>
   4d224:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4d228:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4d22c:	add	x0, x0, #0x859
   4d230:	add	x2, x2, #0x70f
   4d234:	mov	w1, #0x6e                  	// #110
   4d238:	bl	cb20 <mpfr_assert_fail@plt>
   4d23c:	b	4cca8 <mpfr_zeta_ui@@Base+0x214>
   4d240:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4d244:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4d248:	add	x0, x0, #0x859
   4d24c:	add	x2, x2, #0x70f
   4d250:	mov	w1, #0x70                  	// #112
   4d254:	bl	cb20 <mpfr_assert_fail@plt>
   4d258:	b	4ccc4 <mpfr_zeta_ui@@Base+0x230>

000000000004d25c <mpfr_j0@@Base>:
   4d25c:	mov	w3, w2
   4d260:	mov	x2, x1
   4d264:	mov	x1, xzr
   4d268:	b	cbf0 <mpfr_jn@plt>

000000000004d26c <mpfr_jn@@Base>:
   4d26c:	stp	x29, x30, [sp, #-96]!
   4d270:	stp	x28, x27, [sp, #16]
   4d274:	stp	x26, x25, [sp, #32]
   4d278:	stp	x24, x23, [sp, #48]
   4d27c:	stp	x22, x21, [sp, #64]
   4d280:	stp	x20, x19, [sp, #80]
   4d284:	mov	x29, sp
   4d288:	sub	sp, sp, #0x220
   4d28c:	ldr	x9, [x2, #16]
   4d290:	mov	x10, #0xfffffffffffffeff    	// #-257
   4d294:	movk	x10, #0x7fff, lsl #48
   4d298:	cmp	x1, #0x0
   4d29c:	add	x8, x10, #0x105
   4d2a0:	mov	w21, w3
   4d2a4:	mov	x26, x1
   4d2a8:	cneg	x23, x1, mi  // mi = first
   4d2ac:	cmp	x9, x8
   4d2b0:	mov	x27, x0
   4d2b4:	str	x2, [sp, #96]
   4d2b8:	b.lt	4e364 <mpfr_jn@@Base+0x10f8>  // b.tstop
   4d2bc:	mov	x11, x2
   4d2c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d2c4:	ldr	x1, [x0, #2640]
   4d2c8:	add	x0, x0, #0xa50
   4d2cc:	blr	x1
   4d2d0:	mrs	x28, tpidr_el0
   4d2d4:	ldr	w19, [x28, x0]
   4d2d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d2dc:	ldr	x1, [x0, #2576]
   4d2e0:	add	x0, x0, #0xa10
   4d2e4:	blr	x1
   4d2e8:	ldr	x25, [x28, x0]
   4d2ec:	mov	x8, x0
   4d2f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d2f4:	ldr	x1, [x0, #2608]
   4d2f8:	add	x0, x0, #0xa30
   4d2fc:	blr	x1
   4d300:	ldr	x20, [x28, x0]
   4d304:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4d308:	str	x10, [x28, x8]
   4d30c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4d310:	cmp	x26, #0x1
   4d314:	str	x8, [x28, x0]
   4d318:	b.eq	4d364 <mpfr_jn@@Base+0xf8>  // b.none
   4d31c:	cbnz	x26, 4d394 <mpfr_jn@@Base+0x128>
   4d320:	tbz	x9, #63, 4d394 <mpfr_jn@@Base+0x128>
   4d324:	ldr	x8, [x27]
   4d328:	mov	w10, #0x2                   	// #2
   4d32c:	sub	x2, x10, x9, lsl #1
   4d330:	add	x8, x8, #0x1
   4d334:	cmp	x2, x8
   4d338:	b.ls	4d394 <mpfr_jn@@Base+0x128>  // b.plast
   4d33c:	adrp	x1, 76000 <__gmpfr_l2b@@Base+0x2e0>
   4d340:	ldr	x1, [x1, #3944]
   4d344:	mov	x0, x27
   4d348:	mov	w3, wzr
   4d34c:	mov	w4, w21
   4d350:	bl	c530 <mpfr_round_near_x@plt>
   4d354:	ldr	x11, [sp, #96]
   4d358:	cbz	w0, 4d394 <mpfr_jn@@Base+0x128>
   4d35c:	mov	w24, w0
   4d360:	b	4e2b4 <mpfr_jn@@Base+0x1048>
   4d364:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d368:	ldr	x1, [x0, #2640]
   4d36c:	add	x0, x0, #0xa50
   4d370:	blr	x1
   4d374:	str	wzr, [x28, x0]
   4d378:	tbz	x9, #63, 4d394 <mpfr_jn@@Base+0x128>
   4d37c:	ldr	x8, [x27]
   4d380:	mov	w10, #0x3                   	// #3
   4d384:	sub	x2, x10, x9, lsl #1
   4d388:	add	x8, x8, #0x1
   4d38c:	cmp	x2, x8
   4d390:	b.hi	4e454 <mpfr_jn@@Base+0x11e8>  // b.pmore
   4d394:	ldr	x8, [x11]
   4d398:	ldr	x9, [x27]
   4d39c:	mov	w22, #0x1                   	// #1
   4d3a0:	str	w22, [sp, #256]
   4d3a4:	str	x8, [sp, #248]
   4d3a8:	ldr	q0, [x11, #16]
   4d3ac:	cmp	x9, #0x0
   4d3b0:	cinc	x8, x9, lt  // lt = tstop
   4d3b4:	asr	x8, x8, #1
   4d3b8:	add	x9, sp, #0x9
   4d3bc:	add	x1, x8, #0x3
   4d3c0:	add	x0, sp, #0xf8
   4d3c4:	mov	x2, xzr
   4d3c8:	stur	q0, [x9, #255]
   4d3cc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4d3d0:	cmp	w0, #0x1
   4d3d4:	stp	w19, w21, [sp, #56]
   4d3d8:	stp	x26, x28, [sp, #72]
   4d3dc:	str	x25, [sp, #64]
   4d3e0:	str	x20, [sp, #48]
   4d3e4:	b.lt	4db34 <mpfr_jn@@Base+0x8c8>  // b.tstop
   4d3e8:	sub	x0, x29, #0x48
   4d3ec:	bl	bc20 <mpfr_init@plt>
   4d3f0:	ldr	x19, [x27]
   4d3f4:	cmp	x19, #0x1
   4d3f8:	b.eq	4e3c4 <mpfr_jn@@Base+0x1158>  // b.none
   4d3fc:	mov	x8, x19
   4d400:	b.le	4e3cc <mpfr_jn@@Base+0x1160>
   4d404:	sub	x8, x8, #0x1
   4d408:	clz	x8, x8
   4d40c:	mov	w9, #0x40                  	// #64
   4d410:	sub	x8, x9, x8
   4d414:	add	x8, x19, x8
   4d418:	cmp	w21, #0x0
   4d41c:	lsl	x9, x26, #1
   4d420:	mov	w10, #0x1                   	// #1
   4d424:	add	x25, x8, #0x4
   4d428:	cset	w8, eq  // eq = none
   4d42c:	mov	w22, #0x1                   	// #1
   4d430:	mov	w11, #0x40                  	// #64
   4d434:	mov	x24, #0xffffffffffffffff    	// #-1
   4d438:	mov	w19, #0x2                   	// #2
   4d43c:	str	x8, [sp, #24]
   4d440:	bfi	x10, x26, #1, #63
   4d444:	sub	x8, x9, #0x1
   4d448:	str	x11, [sp, #8]
   4d44c:	stp	x8, x10, [sp, #32]
   4d450:	sub	x0, x29, #0x48
   4d454:	mov	x1, x25
   4d458:	mov	x21, x27
   4d45c:	bl	bf20 <mpfr_set_prec@plt>
   4d460:	sub	x0, x29, #0x28
   4d464:	mov	x1, x25
   4d468:	bl	ca60 <mpfr_init2@plt>
   4d46c:	add	x0, sp, #0x68
   4d470:	mov	x1, x25
   4d474:	bl	ca60 <mpfr_init2@plt>
   4d478:	sub	x0, x29, #0x68
   4d47c:	mov	x1, x25
   4d480:	bl	ca60 <mpfr_init2@plt>
   4d484:	sub	x0, x29, #0x88
   4d488:	mov	x1, x25
   4d48c:	bl	ca60 <mpfr_init2@plt>
   4d490:	sub	x0, x29, #0xa8
   4d494:	mov	x1, x25
   4d498:	bl	ca60 <mpfr_init2@plt>
   4d49c:	sub	x0, x29, #0xc8
   4d4a0:	mov	w1, #0x1f                  	// #31
   4d4a4:	bl	ca60 <mpfr_init2@plt>
   4d4a8:	sub	x0, x29, #0xe8
   4d4ac:	mov	w1, #0x1f                  	// #31
   4d4b0:	bl	ca60 <mpfr_init2@plt>
   4d4b4:	add	x0, sp, #0x118
   4d4b8:	mov	w1, #0x1f                  	// #31
   4d4bc:	bl	ca60 <mpfr_init2@plt>
   4d4c0:	ldr	x20, [sp, #96]
   4d4c4:	sub	x0, x29, #0x28
   4d4c8:	sub	x1, x29, #0x48
   4d4cc:	mov	w3, wzr
   4d4d0:	mov	x2, x20
   4d4d4:	bl	cc20 <mpfr_sin_cos@plt>
   4d4d8:	ldr	w8, [x20, #8]
   4d4dc:	tbz	w8, #31, 4d4f0 <mpfr_jn@@Base+0x284>
   4d4e0:	sub	x0, x29, #0x28
   4d4e4:	sub	x1, x29, #0x28
   4d4e8:	mov	w2, wzr
   4d4ec:	bl	bdc0 <mpfr_neg@plt>
   4d4f0:	sub	x0, x29, #0x88
   4d4f4:	sub	x1, x29, #0x28
   4d4f8:	sub	x2, x29, #0x48
   4d4fc:	mov	w3, wzr
   4d500:	bl	c1e0 <mpfr_add@plt>
   4d504:	sub	x0, x29, #0x48
   4d508:	sub	x1, x29, #0x28
   4d50c:	sub	x2, x29, #0x48
   4d510:	mov	w3, wzr
   4d514:	bl	bbc0 <mpfr_sub@plt>
   4d518:	sub	x0, x29, #0x28
   4d51c:	sub	x1, x29, #0x88
   4d520:	bl	c490 <mpfr_swap@plt>
   4d524:	ldr	w8, [x20, #8]
   4d528:	sub	x0, x29, #0xa8
   4d52c:	mov	x2, x20
   4d530:	mov	w3, wzr
   4d534:	cmp	w8, #0x1
   4d538:	cneg	x1, x24, ge  // ge = tcont
   4d53c:	bl	c8a0 <mpfr_si_div@plt>
   4d540:	sub	x0, x29, #0xa8
   4d544:	sub	x1, x29, #0xa8
   4d548:	mov	w2, #0x3                   	// #3
   4d54c:	mov	w3, wzr
   4d550:	bl	c8f0 <mpfr_div_2ui@plt>
   4d554:	add	x0, sp, #0x68
   4d558:	mov	w1, #0x1                   	// #1
   4d55c:	mov	x2, xzr
   4d560:	mov	w3, wzr
   4d564:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4d568:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   4d56c:	sub	x0, x29, #0x88
   4d570:	mov	w1, #0x1                   	// #1
   4d574:	mov	x2, xzr
   4d578:	mov	w3, wzr
   4d57c:	stur	w22, [x29, #-96]
   4d580:	stur	x24, [x29, #-88]
   4d584:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4d588:	stur	x24, [x29, #-184]
   4d58c:	stur	x24, [x29, #-216]
   4d590:	ldp	x27, x24, [sp, #32]
   4d594:	mov	w20, wzr
   4d598:	stur	w22, [x29, #-192]
   4d59c:	stur	w22, [x29, #-224]
   4d5a0:	mov	w28, #0x6                   	// #6
   4d5a4:	mov	w22, #0x2                   	// #2
   4d5a8:	str	wzr, [sp, #88]
   4d5ac:	b	4d5fc <mpfr_jn@@Base+0x390>
   4d5b0:	bl	bbc0 <mpfr_sub@plt>
   4d5b4:	sub	x0, x29, #0xe8
   4d5b8:	sub	x1, x29, #0xe8
   4d5bc:	mov	w3, #0x2                   	// #2
   4d5c0:	mov	x2, x25
   4d5c4:	bl	c2c0 <mpfr_mul_2ui@plt>
   4d5c8:	sub	x0, x29, #0xe8
   4d5cc:	sub	x1, x29, #0xe8
   4d5d0:	sub	x2, x29, #0xc8
   4d5d4:	mov	w3, #0x2                   	// #2
   4d5d8:	add	w26, w20, #0x1
   4d5dc:	bl	c1e0 <mpfr_add@plt>
   4d5e0:	add	x24, x24, #0x2
   4d5e4:	add	x22, x22, #0x1
   4d5e8:	add	x28, x28, #0x6
   4d5ec:	cmp	w26, #0x4
   4d5f0:	sub	x27, x27, #0x2
   4d5f4:	mov	w20, w26
   4d5f8:	b.ge	4d7f0 <mpfr_jn@@Base+0x584>  // b.tcont
   4d5fc:	sub	x0, x29, #0x88
   4d600:	sub	x1, x29, #0x88
   4d604:	mov	x2, x24
   4d608:	mov	w3, wzr
   4d60c:	sub	x26, x22, #0x1
   4d610:	bl	c950 <mpfr_mul_si@plt>
   4d614:	sub	x0, x29, #0x88
   4d618:	sub	x1, x29, #0x88
   4d61c:	mov	x2, x27
   4d620:	mov	w3, wzr
   4d624:	bl	c950 <mpfr_mul_si@plt>
   4d628:	sub	x0, x29, #0x88
   4d62c:	sub	x1, x29, #0x88
   4d630:	mov	x2, x26
   4d634:	mov	w3, wzr
   4d638:	bl	cc40 <mpfr_div_ui@plt>
   4d63c:	sub	x0, x29, #0x88
   4d640:	sub	x1, x29, #0x88
   4d644:	sub	x2, x29, #0xa8
   4d648:	mov	w3, wzr
   4d64c:	bl	bda0 <mpfr_mul@plt>
   4d650:	ldur	w8, [x29, #-128]
   4d654:	sub	x0, x29, #0xc8
   4d658:	sub	x1, x29, #0x88
   4d65c:	mov	x2, x28
   4d660:	cmp	w8, #0x0
   4d664:	cinc	w3, w19, le
   4d668:	bl	bab0 <mpfr_mul_ui@plt>
   4d66c:	sub	x0, x29, #0xc8
   4d670:	sub	x1, x29, #0xc8
   4d674:	mov	w3, #0x1                   	// #1
   4d678:	mov	w2, wzr
   4d67c:	bl	c690 <mpfr_set4@plt>
   4d680:	add	x0, sp, #0x118
   4d684:	sub	x1, x29, #0x88
   4d688:	mov	w2, #0x2                   	// #2
   4d68c:	mov	w3, #0x1                   	// #1
   4d690:	bl	c690 <mpfr_set4@plt>
   4d694:	add	x0, sp, #0x118
   4d698:	add	x1, sp, #0x118
   4d69c:	mov	w3, #0x2                   	// #2
   4d6a0:	mov	x2, x25
   4d6a4:	bl	c2c0 <mpfr_mul_2ui@plt>
   4d6a8:	add	x0, sp, #0x118
   4d6ac:	add	x1, sp, #0x118
   4d6b0:	sub	x2, x29, #0xc8
   4d6b4:	mov	w3, #0x2                   	// #2
   4d6b8:	bl	c1e0 <mpfr_add@plt>
   4d6bc:	cmp	w20, #0x2
   4d6c0:	b.lt	4d6fc <mpfr_jn@@Base+0x490>  // b.tstop
   4d6c4:	sub	x0, x29, #0xe8
   4d6c8:	sub	x1, x29, #0xe8
   4d6cc:	mov	w3, #0x2                   	// #2
   4d6d0:	mov	x2, x25
   4d6d4:	bl	c8f0 <mpfr_div_2ui@plt>
   4d6d8:	ldur	w8, [x29, #-128]
   4d6dc:	sub	x0, x29, #0xe8
   4d6e0:	sub	x1, x29, #0xe8
   4d6e4:	sub	x2, x29, #0x88
   4d6e8:	mov	w3, #0x2                   	// #2
   4d6ec:	cmp	w8, #0x1
   4d6f0:	b.lt	4d5b0 <mpfr_jn@@Base+0x344>  // b.tstop
   4d6f4:	bl	c1e0 <mpfr_add@plt>
   4d6f8:	b	4d5b4 <mpfr_jn@@Base+0x348>
   4d6fc:	tbnz	w26, #0, 4d71c <mpfr_jn@@Base+0x4b0>
   4d700:	add	x0, sp, #0x68
   4d704:	add	x1, sp, #0x68
   4d708:	sub	x2, x29, #0x88
   4d70c:	mov	w3, wzr
   4d710:	tbnz	w26, #1, 4d738 <mpfr_jn@@Base+0x4cc>
   4d714:	bl	c1e0 <mpfr_add@plt>
   4d718:	b	4d73c <mpfr_jn@@Base+0x4d0>
   4d71c:	sub	x0, x29, #0x68
   4d720:	sub	x1, x29, #0x68
   4d724:	sub	x2, x29, #0x88
   4d728:	mov	w3, wzr
   4d72c:	tbnz	w26, #1, 4d748 <mpfr_jn@@Base+0x4dc>
   4d730:	bl	c1e0 <mpfr_add@plt>
   4d734:	b	4d74c <mpfr_jn@@Base+0x4e0>
   4d738:	bl	bbc0 <mpfr_sub@plt>
   4d73c:	ldr	x8, [sp, #296]
   4d740:	ldr	x9, [sp, #120]
   4d744:	b	4d754 <mpfr_jn@@Base+0x4e8>
   4d748:	bl	bbc0 <mpfr_sub@plt>
   4d74c:	ldr	x8, [sp, #296]
   4d750:	ldur	x9, [x29, #-88]
   4d754:	sub	x0, x29, #0xe8
   4d758:	sub	x1, x29, #0xe8
   4d75c:	sub	x2, x29, #0xc8
   4d760:	mov	w3, #0x2                   	// #2
   4d764:	cmp	x8, x9
   4d768:	b.le	4d78c <mpfr_jn@@Base+0x520>
   4d76c:	bl	c1e0 <mpfr_add@plt>
   4d770:	mov	w26, wzr
   4d774:	ldr	x0, [sp, #96]
   4d778:	ldr	w8, [x0, #8]
   4d77c:	cmp	w8, #0x1
   4d780:	b.ge	4d7b0 <mpfr_jn@@Base+0x544>  // b.tcont
   4d784:	tbz	w8, #31, 4d5e0 <mpfr_jn@@Base+0x374>
   4d788:	b	4d7cc <mpfr_jn@@Base+0x560>
   4d78c:	mov	w26, #0x2                   	// #2
   4d790:	bl	c1e0 <mpfr_add@plt>
   4d794:	cmp	w20, #0x0
   4d798:	b.gt	4d5e0 <mpfr_jn@@Base+0x374>
   4d79c:	add	w26, w20, #0x1
   4d7a0:	ldr	x0, [sp, #96]
   4d7a4:	ldr	w8, [x0, #8]
   4d7a8:	cmp	w8, #0x1
   4d7ac:	b.lt	4d784 <mpfr_jn@@Base+0x518>  // b.tstop
   4d7b0:	lsr	x1, x22, #1
   4d7b4:	mov	x2, xzr
   4d7b8:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4d7bc:	tbnz	w0, #31, 4d7e0 <mpfr_jn@@Base+0x574>
   4d7c0:	ldr	x0, [sp, #96]
   4d7c4:	ldr	w8, [x0, #8]
   4d7c8:	tbz	w8, #31, 4d5e0 <mpfr_jn@@Base+0x374>
   4d7cc:	neg	x1, x22, lsr #1
   4d7d0:	mov	x2, xzr
   4d7d4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4d7d8:	cmp	w0, #0x1
   4d7dc:	b.lt	4d5e0 <mpfr_jn@@Base+0x374>  // b.tstop
   4d7e0:	mov	w26, #0x2                   	// #2
   4d7e4:	mov	w8, #0x1                   	// #1
   4d7e8:	str	w8, [sp, #88]
   4d7ec:	b	4d5e0 <mpfr_jn@@Base+0x374>
   4d7f0:	ldr	x26, [sp, #72]
   4d7f4:	mov	x27, x21
   4d7f8:	tbnz	w26, #0, 4d858 <mpfr_jn@@Base+0x5ec>
   4d7fc:	sub	x0, x29, #0x48
   4d800:	sub	x1, x29, #0x48
   4d804:	sub	x2, x29, #0x68
   4d808:	mov	w3, wzr
   4d80c:	bl	bda0 <mpfr_mul@plt>
   4d810:	sub	x0, x29, #0x28
   4d814:	sub	x1, x29, #0x28
   4d818:	add	x2, sp, #0x68
   4d81c:	mov	w3, wzr
   4d820:	bl	bda0 <mpfr_mul@plt>
   4d824:	ldur	x8, [x29, #-56]
   4d828:	ldur	x9, [x29, #-24]
   4d82c:	sub	x0, x29, #0x28
   4d830:	sub	x1, x29, #0x28
   4d834:	sub	x2, x29, #0x48
   4d838:	cmp	x9, x8
   4d83c:	mov	w3, wzr
   4d840:	csel	x20, x9, x8, gt
   4d844:	bl	bbc0 <mpfr_sub@plt>
   4d848:	ldr	x28, [sp, #80]
   4d84c:	mov	x24, #0xffffffffffffffff    	// #-1
   4d850:	tbnz	w26, #1, 4d8b0 <mpfr_jn@@Base+0x644>
   4d854:	b	4d8c0 <mpfr_jn@@Base+0x654>
   4d858:	sub	x0, x29, #0x48
   4d85c:	sub	x1, x29, #0x48
   4d860:	add	x2, sp, #0x68
   4d864:	mov	w3, wzr
   4d868:	bl	bda0 <mpfr_mul@plt>
   4d86c:	sub	x0, x29, #0x28
   4d870:	sub	x1, x29, #0x28
   4d874:	sub	x2, x29, #0x68
   4d878:	mov	w3, wzr
   4d87c:	bl	bda0 <mpfr_mul@plt>
   4d880:	ldur	x8, [x29, #-56]
   4d884:	ldur	x9, [x29, #-24]
   4d888:	sub	x0, x29, #0x28
   4d88c:	sub	x1, x29, #0x28
   4d890:	sub	x2, x29, #0x48
   4d894:	cmp	x9, x8
   4d898:	mov	w3, wzr
   4d89c:	csel	x20, x9, x8, gt
   4d8a0:	bl	c1e0 <mpfr_add@plt>
   4d8a4:	ldr	x28, [sp, #80]
   4d8a8:	mov	x24, #0xffffffffffffffff    	// #-1
   4d8ac:	tbz	w26, #1, 4d8c0 <mpfr_jn@@Base+0x654>
   4d8b0:	sub	x0, x29, #0x28
   4d8b4:	sub	x1, x29, #0x28
   4d8b8:	mov	w2, wzr
   4d8bc:	bl	bdc0 <mpfr_neg@plt>
   4d8c0:	ldur	x8, [x29, #-24]
   4d8c4:	ldr	x9, [sp, #120]
   4d8c8:	ldur	x10, [x29, #-88]
   4d8cc:	ldur	x11, [x29, #-216]
   4d8d0:	cmp	x8, x20
   4d8d4:	csel	x8, x8, x20, gt
   4d8d8:	cmp	x9, x10
   4d8dc:	csel	x9, x10, x9, lt  // lt = tstop
   4d8e0:	cmp	x11, x8
   4d8e4:	csel	x8, x8, x11, lt  // lt = tstop
   4d8e8:	cmp	x8, x9
   4d8ec:	csel	x20, x9, x8, lt  // lt = tstop
   4d8f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4d8f4:	ldr	x1, [x0, #2688]
   4d8f8:	add	x0, x0, #0xa80
   4d8fc:	blr	x1
   4d900:	add	x1, x28, x0
   4d904:	sub	x0, x29, #0x48
   4d908:	mov	w2, wzr
   4d90c:	bl	c380 <mpfr_cache@plt>
   4d910:	ldr	x21, [sp, #96]
   4d914:	sub	x0, x29, #0x48
   4d918:	sub	x1, x29, #0x48
   4d91c:	mov	w3, wzr
   4d920:	mov	x2, x21
   4d924:	bl	bda0 <mpfr_mul@plt>
   4d928:	ldr	w8, [x21, #8]
   4d92c:	sub	x0, x29, #0x48
   4d930:	sub	x2, x29, #0x48
   4d934:	mov	w3, wzr
   4d938:	cmp	w8, #0x1
   4d93c:	cneg	x1, x24, ge  // ge = tcont
   4d940:	bl	c8a0 <mpfr_si_div@plt>
   4d944:	sub	x0, x29, #0x48
   4d948:	sub	x1, x29, #0x48
   4d94c:	mov	w2, wzr
   4d950:	bl	c920 <mpfr_sqrt@plt>
   4d954:	ldur	w8, [x29, #-64]
   4d958:	ldur	w9, [x29, #-32]
   4d95c:	sub	x0, x29, #0xc8
   4d960:	sub	x1, x29, #0x48
   4d964:	sub	x2, x29, #0x28
   4d968:	cmp	w8, w9
   4d96c:	cinc	w3, w19, ne  // ne = any
   4d970:	bl	bda0 <mpfr_mul@plt>
   4d974:	sub	x0, x29, #0xc8
   4d978:	sub	x1, x29, #0xc8
   4d97c:	mov	w2, #0x2                   	// #2
   4d980:	mov	w3, #0x1                   	// #1
   4d984:	bl	c690 <mpfr_set4@plt>
   4d988:	sub	x0, x29, #0xc8
   4d98c:	sub	x1, x29, #0xc8
   4d990:	mov	w2, #0x3                   	// #3
   4d994:	mov	w3, #0x2                   	// #2
   4d998:	bl	bab0 <mpfr_mul_ui@plt>
   4d99c:	ldur	x21, [x29, #-56]
   4d9a0:	sub	x0, x29, #0x48
   4d9a4:	sub	x1, x29, #0x48
   4d9a8:	sub	x2, x29, #0x28
   4d9ac:	mov	w3, wzr
   4d9b0:	bl	bda0 <mpfr_mul@plt>
   4d9b4:	ldur	x8, [x29, #-184]
   4d9b8:	ldur	x9, [x29, #-56]
   4d9bc:	sub	x0, x29, #0x28
   4d9c0:	cmp	x8, x9
   4d9c4:	csel	x22, x8, x9, gt
   4d9c8:	bl	c0b0 <mpfr_clear@plt>
   4d9cc:	add	x0, sp, #0x68
   4d9d0:	bl	c0b0 <mpfr_clear@plt>
   4d9d4:	sub	x0, x29, #0x68
   4d9d8:	bl	c0b0 <mpfr_clear@plt>
   4d9dc:	sub	x0, x29, #0x88
   4d9e0:	bl	c0b0 <mpfr_clear@plt>
   4d9e4:	sub	x0, x29, #0xa8
   4d9e8:	bl	c0b0 <mpfr_clear@plt>
   4d9ec:	sub	x0, x29, #0xc8
   4d9f0:	bl	c0b0 <mpfr_clear@plt>
   4d9f4:	sub	x0, x29, #0xe8
   4d9f8:	bl	c0b0 <mpfr_clear@plt>
   4d9fc:	add	x0, sp, #0x118
   4da00:	bl	c0b0 <mpfr_clear@plt>
   4da04:	ldur	x8, [x29, #-56]
   4da08:	mov	x9, #0xfffffffffffffeff    	// #-257
   4da0c:	movk	x9, #0x7fff, lsl #48
   4da10:	add	x9, x9, #0x105
   4da14:	cmp	x8, x9
   4da18:	b.lt	4da70 <mpfr_jn@@Base+0x804>  // b.tstop
   4da1c:	add	x9, x20, x21
   4da20:	add	x10, x22, #0x1
   4da24:	add	x9, x9, #0x3
   4da28:	cmp	x10, x9
   4da2c:	ldur	x10, [x29, #-72]
   4da30:	add	x11, x22, #0x2
   4da34:	csinc	x9, x11, x9, ge  // ge = tcont
   4da38:	sub	x9, x25, x9
   4da3c:	add	x2, x9, x8
   4da40:	sub	x8, x10, #0x1
   4da44:	add	x9, x10, #0x3e
   4da48:	cmp	x8, #0x0
   4da4c:	csel	x8, x9, x8, lt  // lt = tstop
   4da50:	asr	x8, x8, #6
   4da54:	ldr	x11, [x27]
   4da58:	add	x1, x8, #0x1
   4da5c:	ldr	x8, [sp, #24]
   4da60:	ldur	x0, [x29, #-48]
   4da64:	add	x3, x11, x8
   4da68:	bl	c370 <mpfr_round_p@plt>
   4da6c:	cbnz	w0, 4dac8 <mpfr_jn@@Base+0x85c>
   4da70:	ldr	w8, [sp, #88]
   4da74:	cbnz	w8, 4e504 <mpfr_jn@@Base+0x1298>
   4da78:	ldr	x21, [sp, #8]
   4da7c:	mov	x8, #0xfffffffffffffeff    	// #-257
   4da80:	movk	x8, #0x7fff, lsl #48
   4da84:	sub	x8, x8, x25
   4da88:	cmp	x21, x8
   4da8c:	mov	w22, #0x1                   	// #1
   4da90:	b.gt	4daac <mpfr_jn@@Base+0x840>
   4da94:	add	x25, x25, x21
   4da98:	cmp	x25, #0x0
   4da9c:	cinc	x8, x25, lt  // lt = tstop
   4daa0:	asr	x8, x8, #1
   4daa4:	str	x8, [sp, #8]
   4daa8:	b	4d450 <mpfr_jn@@Base+0x1e4>
   4daac:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4dab0:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4dab4:	mov	w1, #0x106                 	// #262
   4dab8:	add	x0, x0, #0x9c6
   4dabc:	add	x2, x2, #0x6c6
   4dac0:	bl	cb20 <mpfr_assert_fail@plt>
   4dac4:	b	4da94 <mpfr_jn@@Base+0x828>
   4dac8:	tbz	w26, #0, 4daf4 <mpfr_jn@@Base+0x888>
   4dacc:	ldr	x8, [sp, #96]
   4dad0:	ldr	w8, [x8, #8]
   4dad4:	cmp	w8, #0x1
   4dad8:	b.ge	4daf4 <mpfr_jn@@Base+0x888>  // b.tcont
   4dadc:	ldr	w21, [sp, #60]
   4dae0:	sub	x1, x29, #0x48
   4dae4:	mov	x0, x27
   4dae8:	mov	w2, w21
   4daec:	bl	bdc0 <mpfr_neg@plt>
   4daf0:	b	4db0c <mpfr_jn@@Base+0x8a0>
   4daf4:	ldr	w21, [sp, #60]
   4daf8:	ldur	w3, [x29, #-64]
   4dafc:	sub	x1, x29, #0x48
   4db00:	mov	x0, x27
   4db04:	mov	w2, w21
   4db08:	bl	c690 <mpfr_set4@plt>
   4db0c:	ldr	w19, [sp, #56]
   4db10:	ldr	x25, [sp, #64]
   4db14:	ldr	x20, [sp, #48]
   4db18:	mov	w24, w0
   4db1c:	sub	x0, x29, #0x48
   4db20:	mov	w22, #0x1                   	// #1
   4db24:	bl	c0b0 <mpfr_clear@plt>
   4db28:	cmp	w21, #0x5
   4db2c:	csinc	w24, w24, wzr, ne  // ne = any
   4db30:	cbnz	w24, 4e2b4 <mpfr_jn@@Base+0x1048>
   4db34:	add	x8, sp, #0x68
   4db38:	mov	w9, #0x20                  	// #32
   4db3c:	add	x10, x8, #0x10
   4db40:	stur	x9, [x29, #-104]
   4db44:	stur	x9, [x29, #-136]
   4db48:	stur	x9, [x29, #-168]
   4db4c:	add	x9, x8, #0x18
   4db50:	add	x8, x8, #0x20
   4db54:	stur	w22, [x29, #-96]
   4db58:	stur	w22, [x29, #-128]
   4db5c:	stp	xzr, x10, [sp, #104]
   4db60:	stur	x10, [x29, #-80]
   4db64:	stur	x9, [x29, #-112]
   4db68:	stur	x8, [x29, #-144]
   4db6c:	stur	w22, [x29, #-160]
   4db70:	cbz	x26, 4dc5c <mpfr_jn@@Base+0x9f0>
   4db74:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   4db78:	add	x1, x1, #0x87d
   4db7c:	sub	x0, x29, #0x68
   4db80:	bl	c340 <mpfr_set_str_binary@plt>
   4db84:	ldr	x2, [sp, #96]
   4db88:	sub	x0, x29, #0x68
   4db8c:	sub	x1, x29, #0x68
   4db90:	ldr	w8, [x2, #8]
   4db94:	cmp	w8, #0x1
   4db98:	b.lt	4dba8 <mpfr_jn@@Base+0x93c>  // b.tstop
   4db9c:	mov	w3, #0x2                   	// #2
   4dba0:	bl	bda0 <mpfr_mul@plt>
   4dba4:	b	4dbc0 <mpfr_jn@@Base+0x954>
   4dba8:	mov	w3, #0x3                   	// #3
   4dbac:	bl	bda0 <mpfr_mul@plt>
   4dbb0:	sub	x0, x29, #0x68
   4dbb4:	sub	x1, x29, #0x68
   4dbb8:	mov	w2, #0x2                   	// #2
   4dbbc:	bl	bdc0 <mpfr_neg@plt>
   4dbc0:	sub	x0, x29, #0x68
   4dbc4:	sub	x1, x29, #0x68
   4dbc8:	mov	w3, #0x2                   	// #2
   4dbcc:	mov	x2, x23
   4dbd0:	bl	cc40 <mpfr_div_ui@plt>
   4dbd4:	ldur	x8, [x29, #-88]
   4dbd8:	neg	x9, x25
   4dbdc:	cmp	x23, x9
   4dbe0:	b.ls	4dc48 <mpfr_jn@@Base+0x9dc>  // b.plast
   4dbe4:	tbz	x8, #63, 4dc48 <mpfr_jn@@Base+0x9dc>
   4dbe8:	ldr	x1, [sp, #104]
   4dbec:	cbz	x1, 4dbf8 <mpfr_jn@@Base+0x98c>
   4dbf0:	ldr	x0, [sp, #112]
   4dbf4:	bl	cc00 <mpfr_free_func@plt>
   4dbf8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4dbfc:	ldr	x1, [x0, #2640]
   4dc00:	add	x0, x0, #0xa50
   4dc04:	blr	x1
   4dc08:	str	w19, [x28, x0]
   4dc0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4dc10:	ldr	x1, [x0, #2576]
   4dc14:	add	x0, x0, #0xa10
   4dc18:	blr	x1
   4dc1c:	str	x25, [x28, x0]
   4dc20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4dc24:	ldr	x1, [x0, #2608]
   4dc28:	add	x0, x0, #0xa30
   4dc2c:	blr	x1
   4dc30:	cmp	w21, #0x0
   4dc34:	csinc	w1, w21, wzr, ne  // ne = any
   4dc38:	str	x20, [x28, x0]
   4dc3c:	tbnz	w26, #0, 4e324 <mpfr_jn@@Base+0x10b8>
   4dc40:	mov	w2, #0x1                   	// #1
   4dc44:	b	4e334 <mpfr_jn@@Base+0x10c8>
   4dc48:	lsr	x9, x23, #62
   4dc4c:	cbnz	x9, 4dc5c <mpfr_jn@@Base+0x9f0>
   4dc50:	sdiv	x9, x25, x23
   4dc54:	cmp	x8, x9
   4dc58:	b.lt	4dbe8 <mpfr_jn@@Base+0x97c>  // b.tstop
   4dc5c:	sub	x0, x29, #0x28
   4dc60:	mov	w1, #0x20                  	// #32
   4dc64:	bl	ca60 <mpfr_init2@plt>
   4dc68:	sub	x0, x29, #0x48
   4dc6c:	mov	w1, #0x20                  	// #32
   4dc70:	bl	ca60 <mpfr_init2@plt>
   4dc74:	sub	x0, x29, #0x28
   4dc78:	cbz	x23, 4dcec <mpfr_jn@@Base+0xa80>
   4dc7c:	ldr	x1, [sp, #96]
   4dc80:	mov	x2, x23
   4dc84:	mov	w3, wzr
   4dc88:	bl	cc40 <mpfr_div_ui@plt>
   4dc8c:	sub	x0, x29, #0x28
   4dc90:	sub	x1, x29, #0x28
   4dc94:	mov	w2, wzr
   4dc98:	bl	c3f0 <mpfr_sqr@plt>
   4dc9c:	sub	x0, x29, #0x28
   4dca0:	sub	x1, x29, #0x28
   4dca4:	mov	w2, #0x1                   	// #1
   4dca8:	mov	w3, wzr
   4dcac:	bl	c270 <mpfr_add_ui@plt>
   4dcb0:	sub	x0, x29, #0x28
   4dcb4:	sub	x1, x29, #0x28
   4dcb8:	mov	w2, wzr
   4dcbc:	bl	c920 <mpfr_sqrt@plt>
   4dcc0:	sub	x0, x29, #0x28
   4dcc4:	sub	x1, x29, #0x28
   4dcc8:	mov	w2, #0x1                   	// #1
   4dccc:	mov	w3, wzr
   4dcd0:	bl	c520 <mpfr_sub_ui@plt>
   4dcd4:	sub	x0, x29, #0x28
   4dcd8:	sub	x1, x29, #0x28
   4dcdc:	mov	x2, x23
   4dce0:	mov	w3, wzr
   4dce4:	bl	bab0 <mpfr_mul_ui@plt>
   4dce8:	b	4dcfc <mpfr_jn@@Base+0xa90>
   4dcec:	ldr	x1, [sp, #96]
   4dcf0:	mov	w3, #0x1                   	// #1
   4dcf4:	mov	w2, wzr
   4dcf8:	bl	c690 <mpfr_set4@plt>
   4dcfc:	adrp	x1, 64000 <mpfr_bases@@Base+0x758>
   4dd00:	add	x1, x1, #0x6b9
   4dd04:	sub	x0, x29, #0x48
   4dd08:	bl	c340 <mpfr_set_str_binary@plt>
   4dd0c:	sub	x0, x29, #0x28
   4dd10:	sub	x1, x29, #0x28
   4dd14:	sub	x2, x29, #0x48
   4dd18:	mov	w3, wzr
   4dd1c:	bl	bda0 <mpfr_mul@plt>
   4dd20:	sub	x0, x29, #0x28
   4dd24:	mov	w1, wzr
   4dd28:	bl	bea0 <mpfr_fits_ulong_p@plt>
   4dd2c:	cbz	w0, 4dd44 <mpfr_jn@@Base+0xad8>
   4dd30:	sub	x0, x29, #0x28
   4dd34:	mov	w1, wzr
   4dd38:	bl	bcf0 <mpfr_get_ui@plt>
   4dd3c:	mov	x20, x0
   4dd40:	b	4dd48 <mpfr_jn@@Base+0xadc>
   4dd44:	mov	x20, #0xffffffffffffffff    	// #-1
   4dd48:	sub	x0, x29, #0x28
   4dd4c:	bl	c0b0 <mpfr_clear@plt>
   4dd50:	sub	x0, x29, #0x48
   4dd54:	bl	c0b0 <mpfr_clear@plt>
   4dd58:	ldr	x19, [x27]
   4dd5c:	mov	x10, #0xfffffffffffffeff    	// #-257
   4dd60:	movk	x10, #0x7fff, lsl #48
   4dd64:	sub	x8, x10, #0x81
   4dd68:	cmp	x20, x8
   4dd6c:	str	x20, [sp, #32]
   4dd70:	csel	x20, x20, x8, cc  // cc = lo, ul, last
   4dd74:	cmp	x19, #0x1
   4dd78:	b.eq	4e3ec <mpfr_jn@@Base+0x1180>  // b.none
   4dd7c:	mov	x8, x19
   4dd80:	b.le	4e3f4 <mpfr_jn@@Base+0x1188>
   4dd84:	sub	x8, x8, #0x1
   4dd88:	clz	x8, x8
   4dd8c:	mov	w9, #0x80                  	// #128
   4dd90:	sub	w8, w9, w8, lsl #1
   4dd94:	sxtw	x8, w8
   4dd98:	add	x9, x20, x19
   4dd9c:	add	x8, x9, x8
   4dda0:	add	x8, x8, #0x3
   4dda4:	ldr	x1, [sp, #104]
   4dda8:	cmp	x8, x10
   4ddac:	csel	x26, x8, x10, cc  // cc = lo, ul, last
   4ddb0:	cmp	w21, #0x0
   4ddb4:	cset	w8, eq  // eq = none
   4ddb8:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   4ddbc:	mov	x22, #0xc000000000000001    	// #-4611686018427387903
   4ddc0:	str	x8, [sp, #88]
   4ddc4:	mov	w8, #0x40                  	// #64
   4ddc8:	str	wzr, [sp, #24]
   4ddcc:	str	x8, [sp, #40]
   4ddd0:	str	x27, [sp, #16]
   4ddd4:	sub	x8, x26, #0x1
   4ddd8:	add	x9, x26, #0x3e
   4dddc:	cmp	x8, #0x0
   4dde0:	csel	x8, x9, x8, lt  // lt = tstop
   4dde4:	asr	x8, x8, #6
   4dde8:	add	x20, x8, #0x1
   4ddec:	add	x8, x20, x20, lsl #1
   4ddf0:	lsl	x2, x8, #3
   4ddf4:	str	x2, [sp, #104]
   4ddf8:	cbz	x1, 4de08 <mpfr_jn@@Base+0xb9c>
   4ddfc:	ldr	x0, [sp, #112]
   4de00:	bl	c200 <mpfr_reallocate_func@plt>
   4de04:	b	4de10 <mpfr_jn@@Base+0xba4>
   4de08:	mov	x0, x2
   4de0c:	bl	ccd0 <mpfr_allocate_func@plt>
   4de10:	mov	w10, #0x1                   	// #1
   4de14:	add	x8, x0, x20, lsl #3
   4de18:	add	x9, x0, x20, lsl #4
   4de1c:	str	x0, [sp, #112]
   4de20:	stur	x0, [x29, #-80]
   4de24:	stur	w10, [x29, #-96]
   4de28:	stur	w10, [x29, #-128]
   4de2c:	stur	x26, [x29, #-168]
   4de30:	stp	x8, x26, [x29, #-112]
   4de34:	stp	x9, x26, [x29, #-144]
   4de38:	stur	w10, [x29, #-160]
   4de3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4de40:	ldr	x1, [x0, #2640]
   4de44:	add	x0, x0, #0xa50
   4de48:	blr	x1
   4de4c:	ldr	x20, [sp, #96]
   4de50:	mov	x27, x0
   4de54:	str	wzr, [x28, x0]
   4de58:	sub	x0, x29, #0xa8
   4de5c:	mov	x1, x20
   4de60:	mov	x2, x23
   4de64:	mov	w3, wzr
   4de68:	bl	bfc0 <mpfr_pow_ui@plt>
   4de6c:	sub	x0, x29, #0x68
   4de70:	mov	x1, x20
   4de74:	mov	x2, x20
   4de78:	mov	w3, wzr
   4de7c:	bl	bda0 <mpfr_mul@plt>
   4de80:	ldr	w8, [x28, x27]
   4de84:	mov	w9, #0x2f                  	// #47
   4de88:	sub	x0, x29, #0x68
   4de8c:	mov	w1, #0x2                   	// #2
   4de90:	and	w8, w8, w9
   4de94:	str	w8, [x28, x27]
   4de98:	bl	bcf0 <mpfr_get_ui@plt>
   4de9c:	ldrb	w8, [x28, x27]
   4dea0:	mov	x27, x0
   4dea4:	tbnz	w8, #4, 4e134 <mpfr_jn@@Base+0xec8>
   4dea8:	sub	x0, x29, #0x68
   4deac:	sub	x1, x29, #0x68
   4deb0:	mov	w2, #0x2                   	// #2
   4deb4:	mov	w3, wzr
   4deb8:	bl	c8f0 <mpfr_div_2ui@plt>
   4debc:	sub	x0, x29, #0x88
   4dec0:	mov	x1, x23
   4dec4:	mov	w2, wzr
   4dec8:	bl	c6d0 <mpfr_fac_ui@plt>
   4decc:	sub	x0, x29, #0xa8
   4ded0:	sub	x1, x29, #0xa8
   4ded4:	sub	x2, x29, #0x88
   4ded8:	mov	w3, wzr
   4dedc:	bl	c610 <mpfr_div@plt>
   4dee0:	ldr	x8, [sp, #72]
   4dee4:	cbz	x8, 4defc <mpfr_jn@@Base+0xc90>
   4dee8:	sub	x0, x29, #0xa8
   4deec:	sub	x1, x29, #0xa8
   4def0:	mov	x2, x23
   4def4:	mov	w3, wzr
   4def8:	bl	c8f0 <mpfr_div_2ui@plt>
   4defc:	ldur	w3, [x29, #-160]
   4df00:	sub	x0, x29, #0x88
   4df04:	sub	x1, x29, #0xa8
   4df08:	mov	w2, wzr
   4df0c:	bl	c690 <mpfr_set4@plt>
   4df10:	ldur	x8, [x29, #-120]
   4df14:	mov	x20, #0xfffffffffffffffe    	// #-2
   4df18:	mov	w25, #0x2                   	// #2
   4df1c:	mov	w28, #0x1                   	// #1
   4df20:	cmp	x8, x19
   4df24:	csel	x24, x22, x8, eq  // eq = none
   4df28:	b	4df38 <mpfr_jn@@Base+0xccc>
   4df2c:	add	x28, x28, #0x1
   4df30:	add	x25, x25, #0x2
   4df34:	sub	x20, x20, #0x1
   4df38:	sub	x0, x29, #0xa8
   4df3c:	sub	x1, x29, #0xa8
   4df40:	sub	x2, x29, #0x68
   4df44:	mov	w3, wzr
   4df48:	bl	bda0 <mpfr_mul@plt>
   4df4c:	sub	x0, x29, #0xa8
   4df50:	sub	x1, x29, #0xa8
   4df54:	mov	w2, wzr
   4df58:	bl	bdc0 <mpfr_neg@plt>
   4df5c:	cmp	x23, x20
   4df60:	b.hi	4df90 <mpfr_jn@@Base+0xd24>  // b.pmore
   4df64:	add	x21, x23, x28
   4df68:	umulh	x8, x28, x21
   4df6c:	cmp	xzr, x8
   4df70:	b.eq	4dfb8 <mpfr_jn@@Base+0xd4c>  // b.none
   4df74:	sub	x0, x29, #0xa8
   4df78:	sub	x1, x29, #0xa8
   4df7c:	mov	x2, x28
   4df80:	mov	w3, wzr
   4df84:	bl	cc40 <mpfr_div_ui@plt>
   4df88:	mov	x2, x21
   4df8c:	b	4dfbc <mpfr_jn@@Base+0xd50>
   4df90:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4df94:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4df98:	mov	w1, #0x10f                 	// #271
   4df9c:	add	x0, x0, #0x86d
   4dfa0:	add	x2, x2, #0x8d8
   4dfa4:	bl	cb20 <mpfr_assert_fail@plt>
   4dfa8:	add	x21, x23, x28
   4dfac:	umulh	x8, x28, x21
   4dfb0:	cmp	xzr, x8
   4dfb4:	b.ne	4df74 <mpfr_jn@@Base+0xd08>  // b.any
   4dfb8:	mul	x2, x21, x28
   4dfbc:	sub	x0, x29, #0xa8
   4dfc0:	sub	x1, x29, #0xa8
   4dfc4:	mov	w3, wzr
   4dfc8:	bl	cc40 <mpfr_div_ui@plt>
   4dfcc:	ldur	x8, [x29, #-120]
   4dfd0:	ldur	x9, [x29, #-152]
   4dfd4:	sub	x0, x29, #0x88
   4dfd8:	sub	x1, x29, #0x88
   4dfdc:	cmp	x8, x19
   4dfe0:	csel	x8, x22, x9, eq  // eq = none
   4dfe4:	cmp	x8, x24
   4dfe8:	sub	x2, x29, #0xa8
   4dfec:	mov	w3, wzr
   4dff0:	csel	x24, x8, x24, gt
   4dff4:	bl	c1e0 <mpfr_add@plt>
   4dff8:	ldur	x8, [x29, #-120]
   4dffc:	ldur	x9, [x29, #-152]
   4e000:	cmp	x8, x19
   4e004:	csel	x8, x22, x8, eq  // eq = none
   4e008:	add	x9, x9, x26
   4e00c:	cmp	x8, x24
   4e010:	csel	x24, x8, x24, gt
   4e014:	cmp	x9, x8
   4e018:	b.gt	4df2c <mpfr_jn@@Base+0xcc0>
   4e01c:	udiv	x9, x27, x25
   4e020:	cmp	x9, x21
   4e024:	b.cs	4df2c <mpfr_jn@@Base+0xcc0>  // b.hs, b.nlast
   4e028:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e02c:	ldr	x1, [x0, #2640]
   4e030:	add	x0, x0, #0xa50
   4e034:	blr	x1
   4e038:	ldr	x9, [sp, #80]
   4e03c:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e040:	cmn	x28, #0x1
   4e044:	sub	x21, x24, x8
   4e048:	ldr	w20, [x9, x0]
   4e04c:	movk	x10, #0x7fff, lsl #48
   4e050:	b.eq	4e150 <mpfr_jn@@Base+0xee4>  // b.none
   4e054:	ldr	x27, [sp, #16]
   4e058:	ldr	x25, [sp, #64]
   4e05c:	cmn	x28, #0x2
   4e060:	b.eq	4e168 <mpfr_jn@@Base+0xefc>  // b.none
   4e064:	add	x8, x28, #0x1
   4e068:	clz	x8, x8
   4e06c:	mov	w9, #0x40                  	// #64
   4e070:	sub	w8, w9, w8
   4e074:	ldr	x28, [sp, #80]
   4e078:	lsl	w9, w8, #1
   4e07c:	add	w9, w9, #0x2
   4e080:	sxtw	x24, w9
   4e084:	tbnz	x21, #63, 4e110 <mpfr_jn@@Base+0xea4>
   4e088:	cmn	w8, #0x1
   4e08c:	b.lt	4e110 <mpfr_jn@@Base+0xea4>  // b.tstop
   4e090:	sub	x8, x10, x24
   4e094:	cmp	x21, x8
   4e098:	b.gt	4e110 <mpfr_jn@@Base+0xea4>
   4e09c:	ldur	x8, [x29, #-120]
   4e0a0:	add	x9, x10, #0x105
   4e0a4:	add	x21, x21, x24
   4e0a8:	cmp	x8, x9
   4e0ac:	b.lt	4e160 <mpfr_jn@@Base+0xef4>  // b.tstop
   4e0b0:	ldur	x8, [x29, #-136]
   4e0b4:	ldr	x9, [x27]
   4e0b8:	ldur	x0, [x29, #-112]
   4e0bc:	sub	x2, x26, x21
   4e0c0:	sub	x10, x8, #0x1
   4e0c4:	add	x8, x8, #0x3e
   4e0c8:	cmp	x10, #0x0
   4e0cc:	csel	x8, x8, x10, lt  // lt = tstop
   4e0d0:	asr	x8, x8, #6
   4e0d4:	add	x1, x8, #0x1
   4e0d8:	ldr	x8, [sp, #88]
   4e0dc:	add	x3, x9, x8
   4e0e0:	bl	c370 <mpfr_round_p@plt>
   4e0e4:	cbz	w0, 4e18c <mpfr_jn@@Base+0xf20>
   4e0e8:	tst	w20, #0x3
   4e0ec:	b.eq	4e248 <mpfr_jn@@Base+0xfdc>  // b.none
   4e0f0:	ldr	x20, [sp, #32]
   4e0f4:	ldr	w8, [sp, #24]
   4e0f8:	cbnz	w8, 4e22c <mpfr_jn@@Base+0xfc0>
   4e0fc:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e100:	mov	w8, #0x1                   	// #1
   4e104:	movk	x10, #0x7fff, lsl #48
   4e108:	str	w8, [sp, #24]
   4e10c:	b	4e198 <mpfr_jn@@Base+0xf2c>
   4e110:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e114:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e118:	mov	w1, #0x12b                 	// #299
   4e11c:	add	x0, x0, #0x86d
   4e120:	add	x2, x2, #0x910
   4e124:	bl	cb20 <mpfr_assert_fail@plt>
   4e128:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e12c:	movk	x10, #0x7fff, lsl #48
   4e130:	b	4e09c <mpfr_jn@@Base+0xe30>
   4e134:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e138:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e13c:	mov	w1, #0xfc                  	// #252
   4e140:	add	x0, x0, #0x86d
   4e144:	add	x2, x2, #0x8b9
   4e148:	bl	cb20 <mpfr_assert_fail@plt>
   4e14c:	b	4dea8 <mpfr_jn@@Base+0xc3c>
   4e150:	ldr	x27, [sp, #16]
   4e154:	ldr	x25, [sp, #64]
   4e158:	mov	w8, wzr
   4e15c:	b	4e074 <mpfr_jn@@Base+0xe08>
   4e160:	ldr	x20, [sp, #32]
   4e164:	b	4e198 <mpfr_jn@@Base+0xf2c>
   4e168:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e16c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e170:	mov	w1, #0x128                 	// #296
   4e174:	add	x0, x0, #0x86d
   4e178:	add	x2, x2, #0x904
   4e17c:	bl	cb20 <mpfr_assert_fail@plt>
   4e180:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e184:	movk	x10, #0x7fff, lsl #48
   4e188:	b	4e064 <mpfr_jn@@Base+0xdf8>
   4e18c:	ldr	x20, [sp, #32]
   4e190:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e194:	movk	x10, #0x7fff, lsl #48
   4e198:	subs	x20, x21, x20
   4e19c:	b.ls	4e1b0 <mpfr_jn@@Base+0xf44>  // b.plast
   4e1a0:	sub	x8, x10, x26
   4e1a4:	cmp	x20, x8
   4e1a8:	b.hi	4e208 <mpfr_jn@@Base+0xf9c>  // b.pmore
   4e1ac:	add	x26, x20, x26
   4e1b0:	ldr	x20, [sp, #40]
   4e1b4:	sub	x8, x10, x26
   4e1b8:	cmp	x20, x8
   4e1bc:	b.gt	4e1e4 <mpfr_jn@@Base+0xf78>
   4e1c0:	add	x26, x26, x20
   4e1c4:	ldr	x1, [sp, #104]
   4e1c8:	cmp	x26, #0x0
   4e1cc:	cinc	x8, x26, lt  // lt = tstop
   4e1d0:	cmp	x26, x10
   4e1d4:	asr	x8, x8, #1
   4e1d8:	str	x8, [sp, #40]
   4e1dc:	b.le	4ddd4 <mpfr_jn@@Base+0xb68>
   4e1e0:	b	4e56c <mpfr_jn@@Base+0x1300>
   4e1e4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e1e8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4e1ec:	mov	w1, #0x13f                 	// #319
   4e1f0:	add	x0, x0, #0x86d
   4e1f4:	add	x2, x2, #0x622
   4e1f8:	bl	cb20 <mpfr_assert_fail@plt>
   4e1fc:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e200:	movk	x10, #0x7fff, lsl #48
   4e204:	b	4e1c0 <mpfr_jn@@Base+0xf54>
   4e208:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e20c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e210:	mov	w1, #0x13e                 	// #318
   4e214:	add	x0, x0, #0x86d
   4e218:	add	x2, x2, #0x97c
   4e21c:	bl	cb20 <mpfr_assert_fail@plt>
   4e220:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e224:	movk	x10, #0x7fff, lsl #48
   4e228:	b	4e1ac <mpfr_jn@@Base+0xf40>
   4e22c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e230:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e234:	mov	w1, #0x137                 	// #311
   4e238:	add	x0, x0, #0x86d
   4e23c:	add	x2, x2, #0x970
   4e240:	bl	cb20 <mpfr_assert_fail@plt>
   4e244:	b	4e0fc <mpfr_jn@@Base+0xe90>
   4e248:	ldr	x8, [sp, #72]
   4e24c:	ldr	x20, [sp, #48]
   4e250:	mvn	x8, x8
   4e254:	tst	x8, #0x8000000000000001
   4e258:	b.ne	4e284 <mpfr_jn@@Base+0x1018>  // b.any
   4e25c:	ldr	w21, [sp, #60]
   4e260:	sub	x1, x29, #0x88
   4e264:	mov	x0, x27
   4e268:	mov	w2, w21
   4e26c:	bl	bdc0 <mpfr_neg@plt>
   4e270:	ldr	w19, [sp, #56]
   4e274:	ldr	x1, [sp, #104]
   4e278:	mov	w24, w0
   4e27c:	cbnz	x1, 4e2ac <mpfr_jn@@Base+0x1040>
   4e280:	b	4e2b4 <mpfr_jn@@Base+0x1048>
   4e284:	ldr	w21, [sp, #60]
   4e288:	ldur	w3, [x29, #-128]
   4e28c:	sub	x1, x29, #0x88
   4e290:	mov	x0, x27
   4e294:	mov	w2, w21
   4e298:	bl	c690 <mpfr_set4@plt>
   4e29c:	ldr	w19, [sp, #56]
   4e2a0:	ldr	x1, [sp, #104]
   4e2a4:	mov	w24, w0
   4e2a8:	cbz	x1, 4e2b4 <mpfr_jn@@Base+0x1048>
   4e2ac:	ldr	x0, [sp, #112]
   4e2b0:	bl	cc00 <mpfr_free_func@plt>
   4e2b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e2b8:	ldr	x1, [x0, #2640]
   4e2bc:	add	x0, x0, #0xa50
   4e2c0:	blr	x1
   4e2c4:	str	w19, [x28, x0]
   4e2c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e2cc:	ldr	x1, [x0, #2576]
   4e2d0:	add	x0, x0, #0xa10
   4e2d4:	blr	x1
   4e2d8:	str	x25, [x28, x0]
   4e2dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e2e0:	ldr	x1, [x0, #2608]
   4e2e4:	add	x0, x0, #0xa30
   4e2e8:	blr	x1
   4e2ec:	str	x20, [x28, x0]
   4e2f0:	ldr	x8, [x27, #16]
   4e2f4:	cmp	x8, x20
   4e2f8:	b.gt	4e3b0 <mpfr_jn@@Base+0x1144>
   4e2fc:	cmp	x8, x25
   4e300:	b.lt	4e3b0 <mpfr_jn@@Base+0x1144>  // b.tstop
   4e304:	cbz	w24, 4e340 <mpfr_jn@@Base+0x10d4>
   4e308:	orr	w8, w19, #0x8
   4e30c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e310:	ldr	x1, [x0, #2640]
   4e314:	add	x0, x0, #0xa50
   4e318:	blr	x1
   4e31c:	str	w8, [x28, x0]
   4e320:	b	4e340 <mpfr_jn@@Base+0x10d4>
   4e324:	ldr	x8, [sp, #96]
   4e328:	cmp	x26, #0x0
   4e32c:	ldr	w8, [x8, #8]
   4e330:	cneg	w2, w8, le
   4e334:	mov	x0, x27
   4e338:	bl	c3c0 <mpfr_underflow@plt>
   4e33c:	mov	w24, w0
   4e340:	mov	w0, w24
   4e344:	add	sp, sp, #0x220
   4e348:	ldp	x20, x19, [sp, #80]
   4e34c:	ldp	x22, x21, [sp, #64]
   4e350:	ldp	x24, x23, [sp, #48]
   4e354:	ldp	x26, x25, [sp, #32]
   4e358:	ldp	x28, x27, [sp, #16]
   4e35c:	ldp	x29, x30, [sp], #96
   4e360:	ret
   4e364:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4e368:	cmp	x9, x8
   4e36c:	b.eq	4e424 <mpfr_jn@@Base+0x11b8>  // b.none
   4e370:	mov	x8, #0x2                   	// #2
   4e374:	movk	x8, #0x8000, lsl #48
   4e378:	cmp	x9, x8
   4e37c:	b.ne	4e41c <mpfr_jn@@Base+0x11b0>  // b.any
   4e380:	add	x8, x10, #0x103
   4e384:	str	x8, [x27, #16]
   4e388:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e38c:	ldr	x1, [x0, #2640]
   4e390:	add	x0, x0, #0xa50
   4e394:	blr	x1
   4e398:	mrs	x8, tpidr_el0
   4e39c:	ldr	w9, [x8, x0]
   4e3a0:	mov	w24, wzr
   4e3a4:	orr	w9, w9, #0x4
   4e3a8:	str	w9, [x8, x0]
   4e3ac:	b	4e340 <mpfr_jn@@Base+0x10d4>
   4e3b0:	mov	x0, x27
   4e3b4:	mov	w1, w24
   4e3b8:	mov	w2, w21
   4e3bc:	bl	cb10 <mpfr_check_range@plt>
   4e3c0:	b	4e33c <mpfr_jn@@Base+0x10d0>
   4e3c4:	mov	x8, xzr
   4e3c8:	b	4d414 <mpfr_jn@@Base+0x1a8>
   4e3cc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e3d0:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e3d4:	add	x0, x0, #0x9c6
   4e3d8:	add	x2, x2, #0x89f
   4e3dc:	mov	w1, #0x36                  	// #54
   4e3e0:	bl	cb20 <mpfr_assert_fail@plt>
   4e3e4:	ldr	x8, [x27]
   4e3e8:	b	4d404 <mpfr_jn@@Base+0x198>
   4e3ec:	mov	x8, xzr
   4e3f0:	b	4dd98 <mpfr_jn@@Base+0xb2c>
   4e3f4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e3f8:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e3fc:	add	x0, x0, #0x86d
   4e400:	add	x2, x2, #0x89f
   4e404:	mov	w1, #0xed                  	// #237
   4e408:	bl	cb20 <mpfr_assert_fail@plt>
   4e40c:	ldr	x8, [x27]
   4e410:	mov	x10, #0xfffffffffffffeff    	// #-257
   4e414:	movk	x10, #0x7fff, lsl #48
   4e418:	b	4dd84 <mpfr_jn@@Base+0xb18>
   4e41c:	cbz	x26, 4e43c <mpfr_jn@@Base+0x11d0>
   4e420:	tbnz	w23, #0, 4e4e4 <mpfr_jn@@Base+0x1278>
   4e424:	mov	w8, #0x1                   	// #1
   4e428:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4e42c:	mov	w24, wzr
   4e430:	str	w8, [x27, #8]
   4e434:	str	x9, [x27, #16]
   4e438:	b	4e340 <mpfr_jn@@Base+0x10d4>
   4e43c:	mov	w1, #0x1                   	// #1
   4e440:	mov	x0, x27
   4e444:	mov	x2, xzr
   4e448:	mov	w3, w21
   4e44c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4e450:	b	4e33c <mpfr_jn@@Base+0x10d0>
   4e454:	mov	x0, x27
   4e458:	mov	x1, x11
   4e45c:	mov	w3, wzr
   4e460:	mov	w4, w21
   4e464:	bl	c530 <mpfr_round_near_x@plt>
   4e468:	ldr	x11, [sp, #96]
   4e46c:	cbz	w0, 4d394 <mpfr_jn@@Base+0x128>
   4e470:	mov	w24, w0
   4e474:	mov	w2, #0x1                   	// #1
   4e478:	mov	x0, x27
   4e47c:	mov	x1, x27
   4e480:	mov	w3, w21
   4e484:	mov	x26, x20
   4e488:	mov	w23, w19
   4e48c:	mov	x19, x27
   4e490:	bl	c8f0 <mpfr_div_2ui@plt>
   4e494:	mov	w22, w0
   4e498:	mov	w20, w21
   4e49c:	cbnz	w21, 4e4b0 <mpfr_jn@@Base+0x1244>
   4e4a0:	ldr	x8, [x19, #16]
   4e4a4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4e4a8:	cmp	x8, x9
   4e4ac:	b.eq	4e53c <mpfr_jn@@Base+0x12d0>  // b.none
   4e4b0:	cmp	w22, #0x0
   4e4b4:	csel	w24, w24, w22, eq  // eq = none
   4e4b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e4bc:	ldr	x1, [x0, #2640]
   4e4c0:	add	x0, x0, #0xa50
   4e4c4:	blr	x1
   4e4c8:	ldr	w8, [x28, x0]
   4e4cc:	mov	x27, x19
   4e4d0:	mov	w21, w20
   4e4d4:	mov	x20, x26
   4e4d8:	orr	w23, w8, w23
   4e4dc:	mov	w19, w23
   4e4e0:	b	4e2b4 <mpfr_jn@@Base+0x1048>
   4e4e4:	cmp	x26, #0x1
   4e4e8:	b.lt	4e528 <mpfr_jn@@Base+0x12bc>  // b.tstop
   4e4ec:	ldr	x1, [sp, #96]
   4e4f0:	mov	x0, x27
   4e4f4:	mov	w2, w21
   4e4f8:	ldr	w3, [x1, #8]
   4e4fc:	bl	c690 <mpfr_set4@plt>
   4e500:	b	4e33c <mpfr_jn@@Base+0x10d0>
   4e504:	sub	x0, x29, #0x48
   4e508:	bl	c0b0 <mpfr_clear@plt>
   4e50c:	ldp	w19, w21, [sp, #56]
   4e510:	ldr	x25, [sp, #64]
   4e514:	ldr	x20, [sp, #48]
   4e518:	mov	w24, wzr
   4e51c:	mov	w22, #0x1                   	// #1
   4e520:	cbnz	w24, 4e2b4 <mpfr_jn@@Base+0x1048>
   4e524:	b	4db34 <mpfr_jn@@Base+0x8c8>
   4e528:	ldr	x1, [sp, #96]
   4e52c:	mov	x0, x27
   4e530:	mov	w2, w21
   4e534:	bl	bdc0 <mpfr_neg@plt>
   4e538:	b	4e33c <mpfr_jn@@Base+0x10d0>
   4e53c:	cbz	w22, 4e570 <mpfr_jn@@Base+0x1304>
   4e540:	ldr	x8, [sp, #96]
   4e544:	cmp	w24, #0x0
   4e548:	cset	w9, gt
   4e54c:	csinv	w9, w9, wzr, ge  // ge = tcont
   4e550:	ldr	w8, [x8, #8]
   4e554:	cmp	w9, w8
   4e558:	b.eq	4e4b0 <mpfr_jn@@Base+0x1244>  // b.none
   4e55c:	mov	x0, x19
   4e560:	bl	c660 <mpfr_nexttoinf@plt>
   4e564:	neg	w24, w22
   4e568:	b	4e4b8 <mpfr_jn@@Base+0x124c>
   4e56c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   4e570:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4e574:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4e578:	add	x0, x0, #0x86d
   4e57c:	add	x2, x2, #0x872
   4e580:	mov	w1, #0xa6                  	// #166
   4e584:	bl	cb20 <mpfr_assert_fail@plt>
   4e588:	b	4e540 <mpfr_jn@@Base+0x12d4>

000000000004e58c <mpfr_j1@@Base>:
   4e58c:	mov	w3, w2
   4e590:	mov	x2, x1
   4e594:	mov	w1, #0x1                   	// #1
   4e598:	b	cbf0 <mpfr_jn@plt>

000000000004e59c <mpfr_y0@@Base>:
   4e59c:	mov	w3, w2
   4e5a0:	mov	x2, x1
   4e5a4:	mov	x1, xzr
   4e5a8:	b	c5b0 <mpfr_yn@plt>

000000000004e5ac <mpfr_yn@@Base>:
   4e5ac:	sub	sp, sp, #0x1f0
   4e5b0:	stp	x29, x30, [sp, #400]
   4e5b4:	stp	x28, x27, [sp, #416]
   4e5b8:	stp	x26, x25, [sp, #432]
   4e5bc:	stp	x24, x23, [sp, #448]
   4e5c0:	stp	x22, x21, [sp, #464]
   4e5c4:	stp	x20, x19, [sp, #480]
   4e5c8:	ldr	x9, [x2, #16]
   4e5cc:	mov	x19, #0x4                   	// #4
   4e5d0:	movk	x19, #0x8000, lsl #48
   4e5d4:	cmp	x1, #0x0
   4e5d8:	mov	x22, x2
   4e5dc:	mov	x20, x1
   4e5e0:	cneg	x23, x1, mi  // mi = first
   4e5e4:	cmp	x9, x19
   4e5e8:	mov	x27, x0
   4e5ec:	add	x29, sp, #0x190
   4e5f0:	b.lt	4f954 <mpfr_yn@@Base+0x13a8>  // b.tstop
   4e5f4:	ldr	w8, [x22, #8]
   4e5f8:	tbnz	w8, #31, 4fa3c <mpfr_yn@@Base+0x1490>
   4e5fc:	mov	w26, w3
   4e600:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e604:	ldr	x1, [x0, #2640]
   4e608:	add	x0, x0, #0xa50
   4e60c:	blr	x1
   4e610:	mrs	x28, tpidr_el0
   4e614:	ldr	w8, [x28, x0]
   4e618:	str	w8, [sp, #76]
   4e61c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e620:	ldr	x1, [x0, #2576]
   4e624:	add	x0, x0, #0xa10
   4e628:	blr	x1
   4e62c:	ldr	x10, [x28, x0]
   4e630:	mov	x8, x0
   4e634:	str	x10, [sp, #64]
   4e638:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e63c:	ldr	x1, [x0, #2608]
   4e640:	add	x0, x0, #0xa30
   4e644:	blr	x1
   4e648:	ldr	x10, [x28, x0]
   4e64c:	str	x10, [sp, #56]
   4e650:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4e654:	str	x10, [x28, x8]
   4e658:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4e65c:	str	x8, [x28, x0]
   4e660:	cbz	x20, 4e784 <mpfr_yn@@Base+0x1d8>
   4e664:	cmp	x20, #0x1
   4e668:	b.ne	4ea10 <mpfr_yn@@Base+0x464>  // b.any
   4e66c:	ldr	x8, [x27]
   4e670:	add	x9, x9, #0x1
   4e674:	neg	x10, x8
   4e678:	cmp	x9, x10
   4e67c:	b.ge	4ea10 <mpfr_yn@@Base+0x464>  // b.tcont
   4e680:	add	x24, x8, #0xa
   4e684:	sub	x0, x29, #0x28
   4e688:	mov	x1, x24
   4e68c:	bl	ca60 <mpfr_init2@plt>
   4e690:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e694:	ldr	x1, [x0, #2688]
   4e698:	add	x0, x0, #0xa80
   4e69c:	blr	x1
   4e6a0:	add	x1, x28, x0
   4e6a4:	sub	x0, x29, #0x28
   4e6a8:	mov	w2, #0x2                   	// #2
   4e6ac:	bl	c380 <mpfr_cache@plt>
   4e6b0:	sub	x0, x29, #0x28
   4e6b4:	sub	x1, x29, #0x28
   4e6b8:	mov	w3, #0x2                   	// #2
   4e6bc:	mov	x2, x22
   4e6c0:	bl	bda0 <mpfr_mul@plt>
   4e6c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e6c8:	ldr	x1, [x0, #2640]
   4e6cc:	add	x0, x0, #0xa50
   4e6d0:	blr	x1
   4e6d4:	mov	x25, x0
   4e6d8:	str	wzr, [x28, x0]
   4e6dc:	sub	x0, x29, #0x28
   4e6e0:	sub	x2, x29, #0x28
   4e6e4:	mov	w1, #0x2                   	// #2
   4e6e8:	mov	w3, #0x1                   	// #1
   4e6ec:	bl	c2f0 <mpfr_ui_div@plt>
   4e6f0:	ldrb	w8, [x28, x25]
   4e6f4:	tbnz	w8, #1, 4fa8c <mpfr_yn@@Base+0x14e0>
   4e6f8:	sub	x0, x29, #0x28
   4e6fc:	sub	x1, x29, #0x28
   4e700:	mov	w2, wzr
   4e704:	bl	bdc0 <mpfr_neg@plt>
   4e708:	ldur	x8, [x29, #-24]
   4e70c:	cmp	x8, x19
   4e710:	b.lt	4ea08 <mpfr_yn@@Base+0x45c>  // b.tstop
   4e714:	ldur	x9, [x29, #-40]
   4e718:	add	x10, x8, #0x2
   4e71c:	ldur	x0, [x29, #-16]
   4e720:	cmp	x10, x9
   4e724:	mov	w10, #0x3                   	// #3
   4e728:	sub	x8, x9, x8
   4e72c:	csinc	x8, x10, x8, ge  // ge = tcont
   4e730:	sub	x10, x9, #0x1
   4e734:	add	x9, x9, #0x3e
   4e738:	cmp	x10, #0x0
   4e73c:	csel	x9, x9, x10, lt  // lt = tstop
   4e740:	ldr	x10, [x27]
   4e744:	sub	x2, x24, x8
   4e748:	cmp	w26, #0x0
   4e74c:	asr	x8, x9, #6
   4e750:	add	x1, x8, #0x1
   4e754:	cinc	x3, x10, eq  // eq = none
   4e758:	bl	c370 <mpfr_round_p@plt>
   4e75c:	cbz	w0, 4ea08 <mpfr_yn@@Base+0x45c>
   4e760:	ldur	w3, [x29, #-32]
   4e764:	sub	x1, x29, #0x28
   4e768:	mov	x0, x27
   4e76c:	mov	w2, w26
   4e770:	bl	c690 <mpfr_set4@plt>
   4e774:	mov	w24, w0
   4e778:	sub	x0, x29, #0x28
   4e77c:	bl	c0b0 <mpfr_clear@plt>
   4e780:	b	4f8d8 <mpfr_yn@@Base+0x132c>
   4e784:	ldr	x8, [x27]
   4e788:	cmp	x8, #0x0
   4e78c:	cinc	x10, x8, lt  // lt = tstop
   4e790:	neg	x10, x10, asr #1
   4e794:	cmp	x9, x10
   4e798:	b.ge	4ea10 <mpfr_yn@@Base+0x464>  // b.tcont
   4e79c:	add	x24, x8, #0xa
   4e7a0:	sub	x0, x29, #0x28
   4e7a4:	mov	x1, x24
   4e7a8:	bl	ca60 <mpfr_init2@plt>
   4e7ac:	sub	x0, x29, #0x48
   4e7b0:	mov	x1, x24
   4e7b4:	bl	ca60 <mpfr_init2@plt>
   4e7b8:	sub	x0, x29, #0x68
   4e7bc:	mov	x1, x24
   4e7c0:	bl	ca60 <mpfr_init2@plt>
   4e7c4:	sub	x0, x29, #0x88
   4e7c8:	mov	x1, x24
   4e7cc:	bl	ca60 <mpfr_init2@plt>
   4e7d0:	sub	x0, x29, #0x88
   4e7d4:	mov	w2, #0x3                   	// #3
   4e7d8:	mov	x1, x22
   4e7dc:	bl	c0d0 <mpfr_log@plt>
   4e7e0:	ldur	w3, [x29, #-128]
   4e7e4:	sub	x0, x29, #0x48
   4e7e8:	sub	x1, x29, #0x88
   4e7ec:	mov	w2, #0x2                   	// #2
   4e7f0:	bl	c690 <mpfr_set4@plt>
   4e7f4:	sub	x0, x29, #0x48
   4e7f8:	bl	c160 <mpfr_nextabove@plt>
   4e7fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e800:	ldr	x1, [x0, #2672]
   4e804:	add	x0, x0, #0xa70
   4e808:	blr	x1
   4e80c:	add	x1, x28, x0
   4e810:	sub	x0, x29, #0x68
   4e814:	mov	w2, #0x3                   	// #3
   4e818:	bl	c380 <mpfr_cache@plt>
   4e81c:	sub	x0, x29, #0x28
   4e820:	sub	x1, x29, #0x88
   4e824:	sub	x2, x29, #0x68
   4e828:	mov	w3, #0x3                   	// #3
   4e82c:	bl	c1e0 <mpfr_add@plt>
   4e830:	sub	x0, x29, #0x68
   4e834:	bl	c160 <mpfr_nextabove@plt>
   4e838:	sub	x0, x29, #0x48
   4e83c:	sub	x1, x29, #0x48
   4e840:	sub	x2, x29, #0x68
   4e844:	mov	w3, #0x2                   	// #2
   4e848:	bl	c1e0 <mpfr_add@plt>
   4e84c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e850:	ldr	x1, [x0, #2624]
   4e854:	add	x0, x0, #0xa40
   4e858:	blr	x1
   4e85c:	add	x1, x28, x0
   4e860:	sub	x0, x29, #0x68
   4e864:	mov	w2, #0x2                   	// #2
   4e868:	bl	c380 <mpfr_cache@plt>
   4e86c:	sub	x0, x29, #0x28
   4e870:	sub	x1, x29, #0x28
   4e874:	sub	x2, x29, #0x68
   4e878:	mov	w3, #0x3                   	// #3
   4e87c:	bl	bbc0 <mpfr_sub@plt>
   4e880:	sub	x0, x29, #0x68
   4e884:	bl	be20 <mpfr_nextbelow@plt>
   4e888:	sub	x0, x29, #0x48
   4e88c:	sub	x1, x29, #0x48
   4e890:	sub	x2, x29, #0x68
   4e894:	mov	w3, #0x2                   	// #2
   4e898:	bl	bbc0 <mpfr_sub@plt>
   4e89c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4e8a0:	ldr	x1, [x0, #2688]
   4e8a4:	add	x0, x0, #0xa80
   4e8a8:	blr	x1
   4e8ac:	add	x1, x28, x0
   4e8b0:	sub	x0, x29, #0x68
   4e8b4:	mov	w2, #0x2                   	// #2
   4e8b8:	bl	c380 <mpfr_cache@plt>
   4e8bc:	sub	x0, x29, #0x28
   4e8c0:	sub	x1, x29, #0x28
   4e8c4:	sub	x2, x29, #0x68
   4e8c8:	mov	w3, #0x3                   	// #3
   4e8cc:	bl	c610 <mpfr_div@plt>
   4e8d0:	sub	x0, x29, #0x68
   4e8d4:	bl	be20 <mpfr_nextbelow@plt>
   4e8d8:	sub	x0, x29, #0x48
   4e8dc:	sub	x1, x29, #0x48
   4e8e0:	sub	x2, x29, #0x68
   4e8e4:	mov	w3, #0x3                   	// #3
   4e8e8:	bl	c610 <mpfr_div@plt>
   4e8ec:	sub	x0, x29, #0x28
   4e8f0:	sub	x1, x29, #0x28
   4e8f4:	mov	w2, #0x1                   	// #1
   4e8f8:	mov	w3, #0x3                   	// #3
   4e8fc:	bl	c2c0 <mpfr_mul_2ui@plt>
   4e900:	sub	x0, x29, #0x48
   4e904:	sub	x1, x29, #0x48
   4e908:	mov	w2, #0x1                   	// #1
   4e90c:	mov	w3, #0x2                   	// #2
   4e910:	bl	c2c0 <mpfr_mul_2ui@plt>
   4e914:	sub	x0, x29, #0x68
   4e918:	mov	w3, #0x2                   	// #2
   4e91c:	mov	x1, x22
   4e920:	mov	x2, x22
   4e924:	bl	bda0 <mpfr_mul@plt>
   4e928:	sub	x0, x29, #0x68
   4e92c:	sub	x1, x29, #0x68
   4e930:	mov	w2, #0x3                   	// #3
   4e934:	bl	bdc0 <mpfr_neg@plt>
   4e938:	sub	x0, x29, #0x68
   4e93c:	sub	x1, x29, #0x68
   4e940:	mov	w2, #0x1                   	// #1
   4e944:	mov	w3, #0x3                   	// #3
   4e948:	bl	c8f0 <mpfr_div_2ui@plt>
   4e94c:	sub	x0, x29, #0x68
   4e950:	sub	x1, x29, #0x68
   4e954:	sub	x2, x29, #0x88
   4e958:	mov	w3, #0x2                   	// #2
   4e95c:	bl	bda0 <mpfr_mul@plt>
   4e960:	sub	x0, x29, #0x48
   4e964:	sub	x1, x29, #0x48
   4e968:	sub	x2, x29, #0x68
   4e96c:	mov	w3, #0x2                   	// #2
   4e970:	bl	c1e0 <mpfr_add@plt>
   4e974:	ldr	x1, [x27]
   4e978:	sub	x0, x29, #0x28
   4e97c:	mov	w2, w26
   4e980:	bl	c960 <mpfr_prec_round@plt>
   4e984:	ldr	x1, [x27]
   4e988:	mov	w24, w0
   4e98c:	sub	x0, x29, #0x48
   4e990:	mov	w2, w26
   4e994:	bl	c960 <mpfr_prec_round@plt>
   4e998:	cmp	w24, w0
   4e99c:	b.ne	4e9e8 <mpfr_yn@@Base+0x43c>  // b.any
   4e9a0:	sub	x0, x29, #0x28
   4e9a4:	sub	x1, x29, #0x48
   4e9a8:	bl	ca40 <mpfr_equal_p@plt>
   4e9ac:	cbz	w0, 4e9e8 <mpfr_yn@@Base+0x43c>
   4e9b0:	ldur	w3, [x29, #-64]
   4e9b4:	sub	x1, x29, #0x48
   4e9b8:	mov	x0, x27
   4e9bc:	mov	w2, w26
   4e9c0:	bl	c690 <mpfr_set4@plt>
   4e9c4:	sub	x0, x29, #0x28
   4e9c8:	bl	c0b0 <mpfr_clear@plt>
   4e9cc:	sub	x0, x29, #0x48
   4e9d0:	bl	c0b0 <mpfr_clear@plt>
   4e9d4:	sub	x0, x29, #0x68
   4e9d8:	bl	c0b0 <mpfr_clear@plt>
   4e9dc:	sub	x0, x29, #0x88
   4e9e0:	bl	c0b0 <mpfr_clear@plt>
   4e9e4:	b	4f8d8 <mpfr_yn@@Base+0x132c>
   4e9e8:	sub	x0, x29, #0x28
   4e9ec:	bl	c0b0 <mpfr_clear@plt>
   4e9f0:	sub	x0, x29, #0x48
   4e9f4:	bl	c0b0 <mpfr_clear@plt>
   4e9f8:	sub	x0, x29, #0x68
   4e9fc:	bl	c0b0 <mpfr_clear@plt>
   4ea00:	sub	x0, x29, #0x88
   4ea04:	b	4ea0c <mpfr_yn@@Base+0x460>
   4ea08:	sub	x0, x29, #0x28
   4ea0c:	bl	c0b0 <mpfr_clear@plt>
   4ea10:	ldr	x8, [x27]
   4ea14:	mov	x0, x22
   4ea18:	mov	x2, xzr
   4ea1c:	cmp	x8, #0x0
   4ea20:	cinc	x8, x8, lt  // lt = tstop
   4ea24:	asr	x8, x8, #1
   4ea28:	add	x1, x8, #0x3
   4ea2c:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4ea30:	cmp	w0, #0x1
   4ea34:	stp	x28, x20, [sp, #80]
   4ea38:	str	w26, [sp, #52]
   4ea3c:	b.lt	4f16c <mpfr_yn@@Base+0xbc0>  // b.tstop
   4ea40:	sub	x0, x29, #0x48
   4ea44:	bl	bc20 <mpfr_init@plt>
   4ea48:	ldr	x19, [x27]
   4ea4c:	cmp	x19, #0x1
   4ea50:	b.eq	4f9c8 <mpfr_yn@@Base+0x141c>  // b.none
   4ea54:	mov	x8, x19
   4ea58:	b.le	4f9d0 <mpfr_yn@@Base+0x1424>
   4ea5c:	sub	x8, x8, #0x1
   4ea60:	clz	x8, x8
   4ea64:	mov	w9, #0x40                  	// #64
   4ea68:	sub	x8, x9, x8
   4ea6c:	add	x8, x19, x8
   4ea70:	cmp	w26, #0x0
   4ea74:	lsl	x9, x20, #1
   4ea78:	mov	w24, #0x1                   	// #1
   4ea7c:	mov	w10, #0x40                  	// #64
   4ea80:	add	x25, x8, #0x4
   4ea84:	cset	w8, eq  // eq = none
   4ea88:	mov	w21, #0x1                   	// #1
   4ea8c:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   4ea90:	mov	w19, #0x2                   	// #2
   4ea94:	stp	x10, x8, [sp, #16]
   4ea98:	bfi	x24, x20, #1, #63
   4ea9c:	sub	x8, x9, #0x1
   4eaa0:	stp	x8, x27, [sp, #32]
   4eaa4:	str	x24, [sp, #8]
   4eaa8:	sub	x0, x29, #0x48
   4eaac:	mov	x1, x25
   4eab0:	bl	bf20 <mpfr_set_prec@plt>
   4eab4:	sub	x0, x29, #0x28
   4eab8:	mov	x1, x25
   4eabc:	bl	ca60 <mpfr_init2@plt>
   4eac0:	sub	x0, x29, #0x68
   4eac4:	mov	x1, x25
   4eac8:	bl	ca60 <mpfr_init2@plt>
   4eacc:	sub	x0, x29, #0x88
   4ead0:	mov	x1, x25
   4ead4:	bl	ca60 <mpfr_init2@plt>
   4ead8:	sub	x0, x29, #0xa8
   4eadc:	mov	x1, x25
   4eae0:	bl	ca60 <mpfr_init2@plt>
   4eae4:	add	x0, sp, #0xc8
   4eae8:	mov	x1, x25
   4eaec:	bl	ca60 <mpfr_init2@plt>
   4eaf0:	add	x0, sp, #0xa8
   4eaf4:	mov	w1, #0x1f                  	// #31
   4eaf8:	bl	ca60 <mpfr_init2@plt>
   4eafc:	add	x0, sp, #0x88
   4eb00:	mov	w1, #0x1f                  	// #31
   4eb04:	bl	ca60 <mpfr_init2@plt>
   4eb08:	add	x0, sp, #0x68
   4eb0c:	mov	w1, #0x1f                  	// #31
   4eb10:	bl	ca60 <mpfr_init2@plt>
   4eb14:	sub	x0, x29, #0x28
   4eb18:	sub	x1, x29, #0x48
   4eb1c:	mov	x2, x22
   4eb20:	mov	w3, wzr
   4eb24:	bl	cc20 <mpfr_sin_cos@plt>
   4eb28:	ldr	w8, [x22, #8]
   4eb2c:	tbz	w8, #31, 4eb40 <mpfr_yn@@Base+0x594>
   4eb30:	sub	x0, x29, #0x28
   4eb34:	sub	x1, x29, #0x28
   4eb38:	mov	w2, wzr
   4eb3c:	bl	bdc0 <mpfr_neg@plt>
   4eb40:	sub	x0, x29, #0xa8
   4eb44:	sub	x1, x29, #0x28
   4eb48:	sub	x2, x29, #0x48
   4eb4c:	mov	w3, wzr
   4eb50:	bl	c1e0 <mpfr_add@plt>
   4eb54:	sub	x0, x29, #0x48
   4eb58:	sub	x1, x29, #0x28
   4eb5c:	sub	x2, x29, #0x48
   4eb60:	mov	w3, wzr
   4eb64:	bl	bbc0 <mpfr_sub@plt>
   4eb68:	sub	x0, x29, #0x28
   4eb6c:	sub	x1, x29, #0xa8
   4eb70:	bl	c490 <mpfr_swap@plt>
   4eb74:	ldr	w8, [x22, #8]
   4eb78:	add	x0, sp, #0xc8
   4eb7c:	mov	x2, x22
   4eb80:	mov	w3, wzr
   4eb84:	cmp	w8, #0x1
   4eb88:	mov	x8, #0xffffffffffffffff    	// #-1
   4eb8c:	cneg	x1, x8, ge  // ge = tcont
   4eb90:	bl	c8a0 <mpfr_si_div@plt>
   4eb94:	add	x0, sp, #0xc8
   4eb98:	add	x1, sp, #0xc8
   4eb9c:	mov	w2, #0x3                   	// #3
   4eba0:	mov	w3, wzr
   4eba4:	bl	c8f0 <mpfr_div_2ui@plt>
   4eba8:	sub	x0, x29, #0x68
   4ebac:	mov	w1, #0x1                   	// #1
   4ebb0:	mov	x2, xzr
   4ebb4:	mov	w3, wzr
   4ebb8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4ebbc:	sub	x0, x29, #0xa8
   4ebc0:	mov	w1, #0x1                   	// #1
   4ebc4:	mov	x2, xzr
   4ebc8:	mov	w3, wzr
   4ebcc:	stur	w21, [x29, #-128]
   4ebd0:	stur	x28, [x29, #-120]
   4ebd4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4ebd8:	ldr	x27, [sp, #32]
   4ebdc:	mov	w20, wzr
   4ebe0:	str	w21, [sp, #176]
   4ebe4:	str	x28, [sp, #184]
   4ebe8:	str	w21, [sp, #144]
   4ebec:	str	x28, [sp, #152]
   4ebf0:	mov	w28, #0x6                   	// #6
   4ebf4:	mov	w21, #0x2                   	// #2
   4ebf8:	str	wzr, [sp, #96]
   4ebfc:	b	4ec7c <mpfr_yn@@Base+0x6d0>
   4ec00:	add	x0, sp, #0x88
   4ec04:	add	x1, sp, #0x88
   4ec08:	mov	w3, #0x2                   	// #2
   4ec0c:	mov	x2, x25
   4ec10:	bl	c8f0 <mpfr_div_2ui@plt>
   4ec14:	ldur	w8, [x29, #-160]
   4ec18:	add	x0, sp, #0x88
   4ec1c:	add	x1, sp, #0x88
   4ec20:	sub	x2, x29, #0xa8
   4ec24:	mov	w3, #0x2                   	// #2
   4ec28:	cmp	w8, #0x1
   4ec2c:	b.lt	4ed80 <mpfr_yn@@Base+0x7d4>  // b.tstop
   4ec30:	bl	c1e0 <mpfr_add@plt>
   4ec34:	add	x0, sp, #0x88
   4ec38:	add	x1, sp, #0x88
   4ec3c:	mov	w3, #0x2                   	// #2
   4ec40:	mov	x2, x25
   4ec44:	bl	c2c0 <mpfr_mul_2ui@plt>
   4ec48:	add	x0, sp, #0x88
   4ec4c:	add	x1, sp, #0x88
   4ec50:	add	x2, sp, #0xa8
   4ec54:	mov	w3, #0x2                   	// #2
   4ec58:	add	w26, w20, #0x1
   4ec5c:	bl	c1e0 <mpfr_add@plt>
   4ec60:	add	x24, x24, #0x2
   4ec64:	add	x21, x21, #0x1
   4ec68:	add	x28, x28, #0x6
   4ec6c:	cmp	w26, #0x4
   4ec70:	sub	x27, x27, #0x2
   4ec74:	mov	w20, w26
   4ec78:	b.ge	4ee3c <mpfr_yn@@Base+0x890>  // b.tcont
   4ec7c:	sub	x0, x29, #0xa8
   4ec80:	sub	x1, x29, #0xa8
   4ec84:	mov	x2, x24
   4ec88:	mov	w3, wzr
   4ec8c:	sub	x26, x21, #0x1
   4ec90:	bl	c950 <mpfr_mul_si@plt>
   4ec94:	sub	x0, x29, #0xa8
   4ec98:	sub	x1, x29, #0xa8
   4ec9c:	mov	x2, x27
   4eca0:	mov	w3, wzr
   4eca4:	bl	c950 <mpfr_mul_si@plt>
   4eca8:	sub	x0, x29, #0xa8
   4ecac:	sub	x1, x29, #0xa8
   4ecb0:	mov	x2, x26
   4ecb4:	mov	w3, wzr
   4ecb8:	bl	cc40 <mpfr_div_ui@plt>
   4ecbc:	sub	x0, x29, #0xa8
   4ecc0:	sub	x1, x29, #0xa8
   4ecc4:	add	x2, sp, #0xc8
   4ecc8:	mov	w3, wzr
   4eccc:	bl	bda0 <mpfr_mul@plt>
   4ecd0:	ldur	w8, [x29, #-160]
   4ecd4:	add	x0, sp, #0xa8
   4ecd8:	sub	x1, x29, #0xa8
   4ecdc:	mov	x2, x28
   4ece0:	cmp	w8, #0x0
   4ece4:	cinc	w3, w19, le
   4ece8:	bl	bab0 <mpfr_mul_ui@plt>
   4ecec:	add	x0, sp, #0xa8
   4ecf0:	add	x1, sp, #0xa8
   4ecf4:	mov	w3, #0x1                   	// #1
   4ecf8:	mov	w2, wzr
   4ecfc:	bl	c690 <mpfr_set4@plt>
   4ed00:	add	x0, sp, #0x68
   4ed04:	sub	x1, x29, #0xa8
   4ed08:	mov	w2, #0x2                   	// #2
   4ed0c:	mov	w3, #0x1                   	// #1
   4ed10:	bl	c690 <mpfr_set4@plt>
   4ed14:	add	x0, sp, #0x68
   4ed18:	add	x1, sp, #0x68
   4ed1c:	mov	w3, #0x2                   	// #2
   4ed20:	mov	x2, x25
   4ed24:	bl	c2c0 <mpfr_mul_2ui@plt>
   4ed28:	add	x0, sp, #0x68
   4ed2c:	add	x1, sp, #0x68
   4ed30:	add	x2, sp, #0xa8
   4ed34:	mov	w3, #0x2                   	// #2
   4ed38:	bl	c1e0 <mpfr_add@plt>
   4ed3c:	cmp	w20, #0x2
   4ed40:	b.ge	4ec00 <mpfr_yn@@Base+0x654>  // b.tcont
   4ed44:	tbnz	w26, #0, 4ed64 <mpfr_yn@@Base+0x7b8>
   4ed48:	sub	x0, x29, #0x68
   4ed4c:	sub	x1, x29, #0x68
   4ed50:	sub	x2, x29, #0xa8
   4ed54:	mov	w3, wzr
   4ed58:	tbnz	w26, #1, 4ed88 <mpfr_yn@@Base+0x7dc>
   4ed5c:	bl	c1e0 <mpfr_add@plt>
   4ed60:	b	4ed8c <mpfr_yn@@Base+0x7e0>
   4ed64:	sub	x0, x29, #0x88
   4ed68:	sub	x1, x29, #0x88
   4ed6c:	sub	x2, x29, #0xa8
   4ed70:	mov	w3, wzr
   4ed74:	tbnz	w26, #1, 4ed98 <mpfr_yn@@Base+0x7ec>
   4ed78:	bl	c1e0 <mpfr_add@plt>
   4ed7c:	b	4ed9c <mpfr_yn@@Base+0x7f0>
   4ed80:	bl	bbc0 <mpfr_sub@plt>
   4ed84:	b	4ec34 <mpfr_yn@@Base+0x688>
   4ed88:	bl	bbc0 <mpfr_sub@plt>
   4ed8c:	ldr	x8, [sp, #120]
   4ed90:	ldur	x9, [x29, #-88]
   4ed94:	b	4eda4 <mpfr_yn@@Base+0x7f8>
   4ed98:	bl	bbc0 <mpfr_sub@plt>
   4ed9c:	ldr	x8, [sp, #120]
   4eda0:	ldur	x9, [x29, #-120]
   4eda4:	add	x0, sp, #0x88
   4eda8:	add	x1, sp, #0x88
   4edac:	add	x2, sp, #0xa8
   4edb0:	mov	w3, #0x2                   	// #2
   4edb4:	cmp	x8, x9
   4edb8:	b.le	4edf0 <mpfr_yn@@Base+0x844>
   4edbc:	bl	c1e0 <mpfr_add@plt>
   4edc0:	mov	w26, wzr
   4edc4:	ldr	w8, [x22, #8]
   4edc8:	cmp	w8, #0x1
   4edcc:	b.lt	4ee10 <mpfr_yn@@Base+0x864>  // b.tstop
   4edd0:	lsr	x1, x21, #1
   4edd4:	mov	x0, x22
   4edd8:	mov	x2, xzr
   4eddc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   4ede0:	tbnz	w0, #31, 4ee2c <mpfr_yn@@Base+0x880>
   4ede4:	ldr	w8, [x22, #8]
   4ede8:	tbz	w8, #31, 4ec60 <mpfr_yn@@Base+0x6b4>
   4edec:	b	4ee14 <mpfr_yn@@Base+0x868>
   4edf0:	mov	w26, #0x2                   	// #2
   4edf4:	bl	c1e0 <mpfr_add@plt>
   4edf8:	cmp	w20, #0x0
   4edfc:	b.gt	4ec60 <mpfr_yn@@Base+0x6b4>
   4ee00:	add	w26, w20, #0x1
   4ee04:	ldr	w8, [x22, #8]
   4ee08:	cmp	w8, #0x1
   4ee0c:	b.ge	4edd0 <mpfr_yn@@Base+0x824>  // b.tcont
   4ee10:	tbz	w8, #31, 4ec60 <mpfr_yn@@Base+0x6b4>
   4ee14:	neg	x1, x21, lsr #1
   4ee18:	mov	x0, x22
   4ee1c:	mov	x2, xzr
   4ee20:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4ee24:	cmp	w0, #0x1
   4ee28:	b.lt	4ec60 <mpfr_yn@@Base+0x6b4>  // b.tstop
   4ee2c:	mov	w26, #0x2                   	// #2
   4ee30:	mov	w8, #0x1                   	// #1
   4ee34:	str	w8, [sp, #96]
   4ee38:	b	4ec60 <mpfr_yn@@Base+0x6b4>
   4ee3c:	ldr	x27, [sp, #40]
   4ee40:	ldr	x21, [sp, #88]
   4ee44:	tbnz	w21, #0, 4eea4 <mpfr_yn@@Base+0x8f8>
   4ee48:	sub	x0, x29, #0x48
   4ee4c:	sub	x1, x29, #0x48
   4ee50:	sub	x2, x29, #0x68
   4ee54:	mov	w3, wzr
   4ee58:	bl	bda0 <mpfr_mul@plt>
   4ee5c:	sub	x0, x29, #0x28
   4ee60:	sub	x1, x29, #0x28
   4ee64:	sub	x2, x29, #0x88
   4ee68:	mov	w3, wzr
   4ee6c:	bl	bda0 <mpfr_mul@plt>
   4ee70:	ldur	x8, [x29, #-56]
   4ee74:	ldur	x9, [x29, #-24]
   4ee78:	sub	x0, x29, #0x28
   4ee7c:	sub	x1, x29, #0x28
   4ee80:	sub	x2, x29, #0x48
   4ee84:	cmp	x9, x8
   4ee88:	mov	w3, wzr
   4ee8c:	csel	x20, x9, x8, gt
   4ee90:	bl	c1e0 <mpfr_add@plt>
   4ee94:	ldr	w26, [sp, #52]
   4ee98:	ldr	x28, [sp, #80]
   4ee9c:	tbnz	w21, #1, 4eefc <mpfr_yn@@Base+0x950>
   4eea0:	b	4ef0c <mpfr_yn@@Base+0x960>
   4eea4:	sub	x0, x29, #0x48
   4eea8:	sub	x1, x29, #0x48
   4eeac:	sub	x2, x29, #0x88
   4eeb0:	mov	w3, wzr
   4eeb4:	bl	bda0 <mpfr_mul@plt>
   4eeb8:	sub	x0, x29, #0x28
   4eebc:	sub	x1, x29, #0x28
   4eec0:	sub	x2, x29, #0x68
   4eec4:	mov	w3, wzr
   4eec8:	bl	bda0 <mpfr_mul@plt>
   4eecc:	ldur	x8, [x29, #-56]
   4eed0:	ldur	x9, [x29, #-24]
   4eed4:	sub	x0, x29, #0x28
   4eed8:	sub	x1, x29, #0x48
   4eedc:	sub	x2, x29, #0x28
   4eee0:	cmp	x9, x8
   4eee4:	mov	w3, wzr
   4eee8:	csel	x20, x9, x8, gt
   4eeec:	bl	bbc0 <mpfr_sub@plt>
   4eef0:	ldr	w26, [sp, #52]
   4eef4:	ldr	x28, [sp, #80]
   4eef8:	tbz	w21, #1, 4ef0c <mpfr_yn@@Base+0x960>
   4eefc:	sub	x0, x29, #0x28
   4ef00:	sub	x1, x29, #0x28
   4ef04:	mov	w2, wzr
   4ef08:	bl	bdc0 <mpfr_neg@plt>
   4ef0c:	ldur	x8, [x29, #-24]
   4ef10:	ldur	x9, [x29, #-88]
   4ef14:	ldur	x10, [x29, #-120]
   4ef18:	ldr	x11, [sp, #152]
   4ef1c:	cmp	x8, x20
   4ef20:	csel	x8, x8, x20, gt
   4ef24:	cmp	x9, x10
   4ef28:	csel	x9, x10, x9, lt  // lt = tstop
   4ef2c:	cmp	x11, x8
   4ef30:	csel	x8, x8, x11, lt  // lt = tstop
   4ef34:	cmp	x8, x9
   4ef38:	csel	x20, x9, x8, lt  // lt = tstop
   4ef3c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4ef40:	ldr	x1, [x0, #2688]
   4ef44:	add	x0, x0, #0xa80
   4ef48:	blr	x1
   4ef4c:	add	x1, x28, x0
   4ef50:	sub	x0, x29, #0x48
   4ef54:	mov	w2, wzr
   4ef58:	bl	c380 <mpfr_cache@plt>
   4ef5c:	sub	x0, x29, #0x48
   4ef60:	sub	x1, x29, #0x48
   4ef64:	mov	x2, x22
   4ef68:	mov	w3, wzr
   4ef6c:	bl	bda0 <mpfr_mul@plt>
   4ef70:	ldr	w8, [x22, #8]
   4ef74:	sub	x0, x29, #0x48
   4ef78:	sub	x2, x29, #0x48
   4ef7c:	mov	w3, wzr
   4ef80:	cmp	w8, #0x1
   4ef84:	mov	x8, #0xffffffffffffffff    	// #-1
   4ef88:	cneg	x1, x8, ge  // ge = tcont
   4ef8c:	bl	c8a0 <mpfr_si_div@plt>
   4ef90:	sub	x0, x29, #0x48
   4ef94:	sub	x1, x29, #0x48
   4ef98:	mov	w2, wzr
   4ef9c:	bl	c920 <mpfr_sqrt@plt>
   4efa0:	ldur	w8, [x29, #-64]
   4efa4:	ldur	w9, [x29, #-32]
   4efa8:	add	x0, sp, #0xa8
   4efac:	sub	x1, x29, #0x48
   4efb0:	sub	x2, x29, #0x28
   4efb4:	cmp	w8, w9
   4efb8:	cinc	w3, w19, ne  // ne = any
   4efbc:	bl	bda0 <mpfr_mul@plt>
   4efc0:	add	x0, sp, #0xa8
   4efc4:	add	x1, sp, #0xa8
   4efc8:	mov	w2, #0x2                   	// #2
   4efcc:	mov	w3, #0x1                   	// #1
   4efd0:	bl	c690 <mpfr_set4@plt>
   4efd4:	add	x0, sp, #0xa8
   4efd8:	add	x1, sp, #0xa8
   4efdc:	mov	w2, #0x3                   	// #3
   4efe0:	mov	w3, #0x2                   	// #2
   4efe4:	bl	bab0 <mpfr_mul_ui@plt>
   4efe8:	ldur	x21, [x29, #-56]
   4efec:	sub	x0, x29, #0x48
   4eff0:	sub	x1, x29, #0x48
   4eff4:	sub	x2, x29, #0x28
   4eff8:	mov	w3, wzr
   4effc:	bl	bda0 <mpfr_mul@plt>
   4f000:	ldr	x8, [sp, #184]
   4f004:	ldur	x9, [x29, #-56]
   4f008:	sub	x0, x29, #0x28
   4f00c:	cmp	x8, x9
   4f010:	csel	x24, x8, x9, gt
   4f014:	bl	c0b0 <mpfr_clear@plt>
   4f018:	sub	x0, x29, #0x68
   4f01c:	bl	c0b0 <mpfr_clear@plt>
   4f020:	sub	x0, x29, #0x88
   4f024:	bl	c0b0 <mpfr_clear@plt>
   4f028:	sub	x0, x29, #0xa8
   4f02c:	bl	c0b0 <mpfr_clear@plt>
   4f030:	add	x0, sp, #0xc8
   4f034:	bl	c0b0 <mpfr_clear@plt>
   4f038:	add	x0, sp, #0xa8
   4f03c:	bl	c0b0 <mpfr_clear@plt>
   4f040:	add	x0, sp, #0x88
   4f044:	bl	c0b0 <mpfr_clear@plt>
   4f048:	add	x0, sp, #0x68
   4f04c:	bl	c0b0 <mpfr_clear@plt>
   4f050:	ldur	x8, [x29, #-56]
   4f054:	mov	x9, #0x4                   	// #4
   4f058:	movk	x9, #0x8000, lsl #48
   4f05c:	cmp	x8, x9
   4f060:	b.lt	4f0b8 <mpfr_yn@@Base+0xb0c>  // b.tstop
   4f064:	add	x9, x20, x21
   4f068:	add	x10, x24, #0x1
   4f06c:	add	x9, x9, #0x3
   4f070:	cmp	x10, x9
   4f074:	ldur	x10, [x29, #-72]
   4f078:	add	x11, x24, #0x2
   4f07c:	csinc	x9, x11, x9, ge  // ge = tcont
   4f080:	sub	x9, x25, x9
   4f084:	add	x2, x9, x8
   4f088:	sub	x8, x10, #0x1
   4f08c:	add	x9, x10, #0x3e
   4f090:	cmp	x8, #0x0
   4f094:	csel	x8, x9, x8, lt  // lt = tstop
   4f098:	asr	x8, x8, #6
   4f09c:	ldr	x11, [x27]
   4f0a0:	add	x1, x8, #0x1
   4f0a4:	ldr	x8, [sp, #24]
   4f0a8:	ldur	x0, [x29, #-48]
   4f0ac:	add	x3, x11, x8
   4f0b0:	bl	c370 <mpfr_round_p@plt>
   4f0b4:	cbnz	w0, 4f118 <mpfr_yn@@Base+0xb6c>
   4f0b8:	ldr	w8, [sp, #96]
   4f0bc:	cbnz	w8, 4faf0 <mpfr_yn@@Base+0x1544>
   4f0c0:	mov	x8, #0x4                   	// #4
   4f0c4:	ldp	x24, x20, [sp, #8]
   4f0c8:	movk	x8, #0x8000, lsl #48
   4f0cc:	sub	x8, x8, x25
   4f0d0:	sub	x8, x8, #0x105
   4f0d4:	cmp	x20, x8
   4f0d8:	mov	w21, #0x1                   	// #1
   4f0dc:	b.gt	4f0fc <mpfr_yn@@Base+0xb50>
   4f0e0:	add	x25, x25, x20
   4f0e4:	cmp	x25, #0x0
   4f0e8:	cinc	x8, x25, lt  // lt = tstop
   4f0ec:	asr	x8, x8, #1
   4f0f0:	str	x8, [sp, #16]
   4f0f4:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   4f0f8:	b	4eaa8 <mpfr_yn@@Base+0x4fc>
   4f0fc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f100:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4f104:	mov	w1, #0x106                 	// #262
   4f108:	add	x0, x0, #0x9c6
   4f10c:	add	x2, x2, #0x6c6
   4f110:	bl	cb20 <mpfr_assert_fail@plt>
   4f114:	b	4f0e0 <mpfr_yn@@Base+0xb34>
   4f118:	ldr	x20, [sp, #88]
   4f11c:	tbz	w20, #0, 4f140 <mpfr_yn@@Base+0xb94>
   4f120:	ldr	w8, [x22, #8]
   4f124:	cmp	w8, #0x1
   4f128:	b.ge	4f140 <mpfr_yn@@Base+0xb94>  // b.tcont
   4f12c:	sub	x1, x29, #0x48
   4f130:	mov	x0, x27
   4f134:	mov	w2, w26
   4f138:	bl	bdc0 <mpfr_neg@plt>
   4f13c:	b	4f154 <mpfr_yn@@Base+0xba8>
   4f140:	ldur	w3, [x29, #-64]
   4f144:	sub	x1, x29, #0x48
   4f148:	mov	x0, x27
   4f14c:	mov	w2, w26
   4f150:	bl	c690 <mpfr_set4@plt>
   4f154:	mov	w24, w0
   4f158:	sub	x0, x29, #0x48
   4f15c:	bl	c0b0 <mpfr_clear@plt>
   4f160:	cmp	w26, #0x5
   4f164:	csinc	w24, w24, wzr, ne  // ne = any
   4f168:	cbnz	w24, 4f8d8 <mpfr_yn@@Base+0x132c>
   4f16c:	sub	x0, x29, #0x68
   4f170:	bl	bc20 <mpfr_init@plt>
   4f174:	sub	x0, x29, #0x88
   4f178:	bl	bc20 <mpfr_init@plt>
   4f17c:	sub	x0, x29, #0xa8
   4f180:	bl	bc20 <mpfr_init@plt>
   4f184:	add	x0, sp, #0xc8
   4f188:	bl	bc20 <mpfr_init@plt>
   4f18c:	ldr	x19, [x27]
   4f190:	cmp	x19, #0x1
   4f194:	b.eq	4f9f0 <mpfr_yn@@Base+0x1444>  // b.none
   4f198:	mov	x8, x19
   4f19c:	b.le	4f9f8 <mpfr_yn@@Base+0x144c>
   4f1a0:	sub	x8, x8, #0x1
   4f1a4:	clz	x8, x8
   4f1a8:	mov	w9, #0x80                  	// #128
   4f1ac:	sub	w8, w9, w8, lsl #1
   4f1b0:	sxtw	x8, w8
   4f1b4:	add	x8, x19, x8
   4f1b8:	add	x25, x23, x23, lsl #1
   4f1bc:	cmp	w26, #0x0
   4f1c0:	add	x28, x8, #0xd
   4f1c4:	add	x8, x25, #0x2
   4f1c8:	mov	w10, #0x40                  	// #64
   4f1cc:	cset	w9, eq  // eq = none
   4f1d0:	clz	x8, x8
   4f1d4:	sub	x21, x23, #0x1
   4f1d8:	str	x9, [sp, #24]
   4f1dc:	mov	w9, #0x40                  	// #64
   4f1e0:	sub	x8, x10, x8
   4f1e4:	stp	x9, x8, [sp, #8]
   4f1e8:	str	x21, [sp]
   4f1ec:	sub	x0, x29, #0x68
   4f1f0:	mov	x1, x28
   4f1f4:	bl	bf20 <mpfr_set_prec@plt>
   4f1f8:	sub	x0, x29, #0x88
   4f1fc:	mov	x1, x28
   4f200:	bl	bf20 <mpfr_set_prec@plt>
   4f204:	sub	x0, x29, #0xa8
   4f208:	mov	x1, x28
   4f20c:	bl	bf20 <mpfr_set_prec@plt>
   4f210:	add	x0, sp, #0xc8
   4f214:	mov	x1, x28
   4f218:	bl	bf20 <mpfr_set_prec@plt>
   4f21c:	sub	x0, x29, #0x68
   4f220:	mov	x1, x22
   4f224:	mov	x2, x22
   4f228:	mov	w3, wzr
   4f22c:	bl	bda0 <mpfr_mul@plt>
   4f230:	sub	x0, x29, #0x68
   4f234:	sub	x1, x29, #0x68
   4f238:	mov	w2, #0x2                   	// #2
   4f23c:	mov	w3, wzr
   4f240:	bl	c8f0 <mpfr_div_2ui@plt>
   4f244:	sub	x0, x29, #0xa8
   4f248:	mov	x1, x22
   4f24c:	mov	x2, x23
   4f250:	mov	w3, wzr
   4f254:	bl	bfc0 <mpfr_pow_ui@plt>
   4f258:	sub	x0, x29, #0xa8
   4f25c:	sub	x1, x29, #0xa8
   4f260:	mov	x2, x23
   4f264:	mov	w3, wzr
   4f268:	bl	c410 <mpfr_div_2si@plt>
   4f26c:	cbz	x20, 4f340 <mpfr_yn@@Base+0xd94>
   4f270:	add	x0, sp, #0x88
   4f274:	bl	bfe0 <mpfr_mpz_init@plt>
   4f278:	add	x0, sp, #0x88
   4f27c:	mov	w1, #0x1                   	// #1
   4f280:	bl	bd00 <__gmpz_set_ui@plt>
   4f284:	sub	x0, x29, #0x88
   4f288:	mov	w1, #0x1                   	// #1
   4f28c:	mov	x2, xzr
   4f290:	mov	w3, wzr
   4f294:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   4f298:	ldur	x19, [x29, #-120]
   4f29c:	cbz	x21, 4f30c <mpfr_yn@@Base+0xd60>
   4f2a0:	mov	w24, #0x1                   	// #1
   4f2a4:	mov	x26, x21
   4f2a8:	sub	x0, x29, #0x88
   4f2ac:	sub	x1, x29, #0x88
   4f2b0:	sub	x2, x29, #0x68
   4f2b4:	mov	w3, wzr
   4f2b8:	sub	x20, x26, #0x1
   4f2bc:	bl	bda0 <mpfr_mul@plt>
   4f2c0:	add	x0, sp, #0x88
   4f2c4:	add	x1, sp, #0x88
   4f2c8:	mov	x2, x24
   4f2cc:	bl	c140 <__gmpz_mul_ui@plt>
   4f2d0:	add	x0, sp, #0x88
   4f2d4:	add	x1, sp, #0x88
   4f2d8:	mov	x2, x26
   4f2dc:	bl	c140 <__gmpz_mul_ui@plt>
   4f2e0:	sub	x0, x29, #0x88
   4f2e4:	sub	x1, x29, #0x88
   4f2e8:	add	x2, sp, #0x88
   4f2ec:	mov	w3, wzr
   4f2f0:	bl	c470 <mpfr_add_z@plt>
   4f2f4:	ldur	x8, [x29, #-120]
   4f2f8:	add	x24, x24, #0x1
   4f2fc:	mov	x26, x20
   4f300:	cmp	x8, x19
   4f304:	csel	x19, x8, x19, gt
   4f308:	cbnz	x20, 4f2a8 <mpfr_yn@@Base+0xcfc>
   4f30c:	add	x0, sp, #0x88
   4f310:	add	x1, sp, #0x88
   4f314:	bl	bcb0 <__gmpz_sqrt@plt>
   4f318:	sub	x0, x29, #0x88
   4f31c:	sub	x1, x29, #0x88
   4f320:	add	x2, sp, #0x88
   4f324:	mov	w3, wzr
   4f328:	bl	cc60 <mpfr_div_z@plt>
   4f32c:	add	x0, sp, #0x88
   4f330:	bl	c1b0 <mpfr_mpz_clear@plt>
   4f334:	ldur	x8, [x29, #-120]
   4f338:	sub	x19, x19, x8
   4f33c:	b	4f354 <mpfr_yn@@Base+0xda8>
   4f340:	mov	w8, #0x1                   	// #1
   4f344:	stur	w8, [x29, #-128]
   4f348:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4f34c:	mov	x19, xzr
   4f350:	stur	x8, [x29, #-120]
   4f354:	sub	x0, x29, #0x88
   4f358:	sub	x1, x29, #0x88
   4f35c:	sub	x2, x29, #0xa8
   4f360:	mov	w3, wzr
   4f364:	bl	c610 <mpfr_div@plt>
   4f368:	cmn	x25, #0x2
   4f36c:	b.eq	4f800 <mpfr_yn@@Base+0x1254>  // b.none
   4f370:	cmn	x25, #0x3
   4f374:	b.eq	4f834 <mpfr_yn@@Base+0x1288>  // b.none
   4f378:	ldr	x8, [sp, #16]
   4f37c:	str	x8, [sp, #32]
   4f380:	sub	x0, x29, #0x68
   4f384:	sub	x1, x29, #0x68
   4f388:	mov	w2, wzr
   4f38c:	str	x19, [sp, #96]
   4f390:	bl	bdc0 <mpfr_neg@plt>
   4f394:	sub	x0, x29, #0x68
   4f398:	mov	w1, #0x2                   	// #2
   4f39c:	bl	bcf0 <mpfr_get_ui@plt>
   4f3a0:	mov	x24, x0
   4f3a4:	cmn	x0, #0x3
   4f3a8:	b.cs	4f808 <mpfr_yn@@Base+0x125c>  // b.hs, b.nlast
   4f3ac:	add	x0, sp, #0x88
   4f3b0:	mov	x19, x25
   4f3b4:	mov	x21, x27
   4f3b8:	bl	bfe0 <mpfr_mpz_init@plt>
   4f3bc:	add	x0, sp, #0x88
   4f3c0:	mov	x1, xzr
   4f3c4:	bl	bd00 <__gmpz_set_ui@plt>
   4f3c8:	add	x0, sp, #0xa8
   4f3cc:	bl	bfe0 <mpfr_mpz_init@plt>
   4f3d0:	add	x0, sp, #0xa8
   4f3d4:	mov	w1, #0x1                   	// #1
   4f3d8:	bl	bd00 <__gmpz_set_ui@plt>
   4f3dc:	cbz	x23, 4f420 <mpfr_yn@@Base+0xe74>
   4f3e0:	mov	w26, #0x1                   	// #1
   4f3e4:	add	x0, sp, #0x88
   4f3e8:	add	x1, sp, #0x88
   4f3ec:	mov	x2, x26
   4f3f0:	bl	c140 <__gmpz_mul_ui@plt>
   4f3f4:	add	x0, sp, #0x88
   4f3f8:	add	x1, sp, #0x88
   4f3fc:	add	x2, sp, #0xa8
   4f400:	bl	c9a0 <__gmpz_add@plt>
   4f404:	add	x0, sp, #0xa8
   4f408:	add	x1, sp, #0xa8
   4f40c:	mov	x2, x26
   4f410:	bl	c140 <__gmpz_mul_ui@plt>
   4f414:	add	x26, x26, #0x1
   4f418:	cmp	x26, x23
   4f41c:	b.ls	4f3e4 <mpfr_yn@@Base+0xe38>  // b.plast
   4f420:	ldr	x1, [sp, #200]
   4f424:	sub	x0, x29, #0x28
   4f428:	add	x20, x24, #0x2
   4f42c:	bl	ca60 <mpfr_init2@plt>
   4f430:	ldr	x1, [sp, #200]
   4f434:	sub	x0, x29, #0x48
   4f438:	bl	ca60 <mpfr_init2@plt>
   4f43c:	sub	x0, x29, #0x28
   4f440:	mov	x1, x23
   4f444:	mov	w2, wzr
   4f448:	bl	c6d0 <mpfr_fac_ui@plt>
   4f44c:	sub	x0, x29, #0x28
   4f450:	sub	x1, x29, #0xa8
   4f454:	sub	x2, x29, #0x28
   4f458:	mov	w3, wzr
   4f45c:	bl	c610 <mpfr_div@plt>
   4f460:	sub	x0, x29, #0x48
   4f464:	sub	x1, x29, #0x28
   4f468:	add	x2, sp, #0x88
   4f46c:	mov	w3, wzr
   4f470:	bl	c4c0 <mpfr_mul_z@plt>
   4f474:	add	x0, sp, #0xc8
   4f478:	sub	x1, x29, #0x48
   4f47c:	add	x2, sp, #0xa8
   4f480:	mov	w3, wzr
   4f484:	bl	cc60 <mpfr_div_z@plt>
   4f488:	ldr	x25, [sp, #216]
   4f48c:	mov	w27, #0x2                   	// #2
   4f490:	mov	w24, #0x1                   	// #1
   4f494:	b	4f4a0 <mpfr_yn@@Base+0xef4>
   4f498:	add	x24, x24, #0x1
   4f49c:	add	x27, x27, #0x2
   4f4a0:	sub	x0, x29, #0x28
   4f4a4:	sub	x1, x29, #0x28
   4f4a8:	sub	x2, x29, #0x68
   4f4ac:	mov	w3, wzr
   4f4b0:	bl	bda0 <mpfr_mul@plt>
   4f4b4:	sub	x0, x29, #0x28
   4f4b8:	sub	x1, x29, #0x28
   4f4bc:	mov	x2, x24
   4f4c0:	mov	w3, wzr
   4f4c4:	bl	cc40 <mpfr_div_ui@plt>
   4f4c8:	add	x26, x23, x24
   4f4cc:	sub	x0, x29, #0x28
   4f4d0:	sub	x1, x29, #0x28
   4f4d4:	mov	x2, x26
   4f4d8:	mov	w3, wzr
   4f4dc:	bl	cc40 <mpfr_div_ui@plt>
   4f4e0:	add	x0, sp, #0x88
   4f4e4:	add	x1, sp, #0x88
   4f4e8:	mov	x2, x24
   4f4ec:	bl	c140 <__gmpz_mul_ui@plt>
   4f4f0:	add	x0, sp, #0x88
   4f4f4:	add	x1, sp, #0x88
   4f4f8:	mov	x2, x26
   4f4fc:	bl	c140 <__gmpz_mul_ui@plt>
   4f500:	add	x2, x23, x27
   4f504:	add	x0, sp, #0x88
   4f508:	add	x1, sp, #0xa8
   4f50c:	bl	cc10 <__gmpz_addmul_ui@plt>
   4f510:	add	x0, sp, #0xa8
   4f514:	add	x1, sp, #0xa8
   4f518:	mov	x2, x24
   4f51c:	bl	c140 <__gmpz_mul_ui@plt>
   4f520:	add	x0, sp, #0xa8
   4f524:	add	x1, sp, #0xa8
   4f528:	mov	x2, x26
   4f52c:	bl	c140 <__gmpz_mul_ui@plt>
   4f530:	sub	x0, x29, #0x48
   4f534:	sub	x1, x29, #0x28
   4f538:	add	x2, sp, #0x88
   4f53c:	mov	w3, wzr
   4f540:	bl	c4c0 <mpfr_mul_z@plt>
   4f544:	sub	x0, x29, #0x48
   4f548:	sub	x1, x29, #0x48
   4f54c:	add	x2, sp, #0xa8
   4f550:	mov	w3, wzr
   4f554:	bl	cc60 <mpfr_div_z@plt>
   4f558:	ldur	x8, [x29, #-56]
   4f55c:	add	x0, sp, #0xc8
   4f560:	add	x1, sp, #0xc8
   4f564:	sub	x2, x29, #0x48
   4f568:	cmp	x8, x25
   4f56c:	mov	w3, wzr
   4f570:	csel	x25, x8, x25, gt
   4f574:	bl	c1e0 <mpfr_add@plt>
   4f578:	ldr	x8, [sp, #216]
   4f57c:	ldur	x9, [x29, #-56]
   4f580:	ldur	x10, [x29, #-72]
   4f584:	cmp	x8, x25
   4f588:	csel	x25, x8, x25, gt
   4f58c:	add	x9, x10, x9
   4f590:	cmp	x9, x8
   4f594:	b.ge	4f498 <mpfr_yn@@Base+0xeec>  // b.tcont
   4f598:	udiv	x8, x20, x27
   4f59c:	cmp	x8, x26
   4f5a0:	b.cs	4f498 <mpfr_yn@@Base+0xeec>  // b.hs, b.nlast
   4f5a4:	sub	x0, x29, #0x28
   4f5a8:	bl	c0b0 <mpfr_clear@plt>
   4f5ac:	sub	x0, x29, #0x48
   4f5b0:	bl	c0b0 <mpfr_clear@plt>
   4f5b4:	add	x0, sp, #0x88
   4f5b8:	bl	c1b0 <mpfr_mpz_clear@plt>
   4f5bc:	add	x0, sp, #0xa8
   4f5c0:	bl	c1b0 <mpfr_mpz_clear@plt>
   4f5c4:	ldr	x8, [sp, #216]
   4f5c8:	cmn	x24, #0x1
   4f5cc:	sub	x20, x25, x8
   4f5d0:	b.eq	4f824 <mpfr_yn@@Base+0x1278>  // b.none
   4f5d4:	cmn	x24, #0x2
   4f5d8:	mov	x27, x21
   4f5dc:	mov	x25, x19
   4f5e0:	b.eq	4f850 <mpfr_yn@@Base+0x12a4>  // b.none
   4f5e4:	add	x8, x24, #0x1
   4f5e8:	clz	x8, x8
   4f5ec:	mov	w9, #0x83                  	// #131
   4f5f0:	sub	w8, w9, w8, lsl #1
   4f5f4:	sxtw	x8, w8
   4f5f8:	ldr	x10, [sp, #96]
   4f5fc:	ldr	x11, [sp, #32]
   4f600:	ldur	x9, [x29, #-120]
   4f604:	add	x20, x20, x8
   4f608:	sub	x0, x29, #0x88
   4f60c:	add	x8, x10, x11
   4f610:	add	x19, x8, x9
   4f614:	sub	x1, x29, #0x88
   4f618:	add	x2, sp, #0xc8
   4f61c:	mov	w3, wzr
   4f620:	add	x21, x19, #0x1
   4f624:	bl	c1e0 <mpfr_add@plt>
   4f628:	ldr	x8, [sp, #216]
   4f62c:	ldur	x9, [x29, #-120]
   4f630:	sub	x0, x29, #0xa8
   4f634:	mov	w2, #0x1                   	// #1
   4f638:	add	x8, x20, x8
   4f63c:	cmp	x8, x21
   4f640:	csinc	x8, x8, x19, gt
   4f644:	sub	x8, x8, x9
   4f648:	add	x9, x8, #0x1
   4f64c:	add	x8, x8, #0x2
   4f650:	cmp	x9, #0x0
   4f654:	mov	x1, x22
   4f658:	mov	w3, wzr
   4f65c:	csinc	x19, x8, xzr, ge  // ge = tcont
   4f660:	bl	c8f0 <mpfr_div_2ui@plt>
   4f664:	sub	x0, x29, #0xa8
   4f668:	sub	x1, x29, #0xa8
   4f66c:	mov	w2, wzr
   4f670:	bl	c0d0 <mpfr_log@plt>
   4f674:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f678:	ldr	x1, [x0, #2672]
   4f67c:	add	x0, x0, #0xa70
   4f680:	blr	x1
   4f684:	ldr	x24, [sp, #80]
   4f688:	mov	w2, wzr
   4f68c:	add	x1, x24, x0
   4f690:	add	x0, sp, #0xc8
   4f694:	bl	c380 <mpfr_cache@plt>
   4f698:	ldur	x8, [x29, #-152]
   4f69c:	ldr	x9, [sp, #216]
   4f6a0:	sub	x0, x29, #0xa8
   4f6a4:	sub	x1, x29, #0xa8
   4f6a8:	add	x2, sp, #0xc8
   4f6ac:	cmp	x8, x9
   4f6b0:	mov	w3, wzr
   4f6b4:	csel	x20, x8, x9, gt
   4f6b8:	bl	c1e0 <mpfr_add@plt>
   4f6bc:	ldur	x21, [x29, #-152]
   4f6c0:	sub	x0, x29, #0xa8
   4f6c4:	sub	x1, x29, #0xa8
   4f6c8:	mov	w2, #0x1                   	// #1
   4f6cc:	mov	w3, wzr
   4f6d0:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f6d4:	add	x0, sp, #0xc8
   4f6d8:	mov	x1, x23
   4f6dc:	mov	x2, x22
   4f6e0:	mov	w3, wzr
   4f6e4:	bl	cbf0 <mpfr_jn@plt>
   4f6e8:	sub	x0, x29, #0xa8
   4f6ec:	sub	x1, x29, #0xa8
   4f6f0:	add	x2, sp, #0xc8
   4f6f4:	mov	w3, wzr
   4f6f8:	bl	bda0 <mpfr_mul@plt>
   4f6fc:	ldur	x8, [x29, #-120]
   4f700:	ldur	x9, [x29, #-152]
   4f704:	sub	x10, x20, x21
   4f708:	sub	x0, x29, #0xa8
   4f70c:	add	x19, x8, x19
   4f710:	add	x8, x10, x9
   4f714:	sub	x1, x29, #0xa8
   4f718:	sub	x2, x29, #0x88
   4f71c:	mov	w3, wzr
   4f720:	add	x20, x8, #0x4
   4f724:	bl	bbc0 <mpfr_sub@plt>
   4f728:	ldur	x8, [x29, #-152]
   4f72c:	cmp	x19, x20
   4f730:	csel	x9, x19, x20, gt
   4f734:	sub	x8, x9, x8
   4f738:	add	x19, x8, #0x1
   4f73c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f740:	ldr	x1, [x0, #2688]
   4f744:	add	x0, x0, #0xa80
   4f748:	blr	x1
   4f74c:	add	x1, x24, x0
   4f750:	sub	x0, x29, #0x68
   4f754:	mov	w2, wzr
   4f758:	bl	c380 <mpfr_cache@plt>
   4f75c:	sub	x0, x29, #0xa8
   4f760:	sub	x1, x29, #0xa8
   4f764:	sub	x2, x29, #0x68
   4f768:	mov	w3, wzr
   4f76c:	bl	c610 <mpfr_div@plt>
   4f770:	ldur	x8, [x29, #-152]
   4f774:	mov	x20, #0x4                   	// #4
   4f778:	movk	x20, #0x8000, lsl #48
   4f77c:	cmp	x8, x20
   4f780:	b.lt	4f7cc <mpfr_yn@@Base+0x1220>  // b.tstop
   4f784:	ldur	x9, [x29, #-168]
   4f788:	add	x8, x19, #0x2
   4f78c:	cmp	x19, #0x0
   4f790:	mov	w11, #0x2                   	// #2
   4f794:	csel	x8, x8, x11, ge  // ge = tcont
   4f798:	sub	x2, x28, x8
   4f79c:	sub	x8, x9, #0x1
   4f7a0:	add	x9, x9, #0x3e
   4f7a4:	cmp	x8, #0x0
   4f7a8:	csel	x8, x9, x8, lt  // lt = tstop
   4f7ac:	asr	x8, x8, #6
   4f7b0:	ldr	x10, [x27]
   4f7b4:	add	x1, x8, #0x1
   4f7b8:	ldr	x8, [sp, #24]
   4f7bc:	ldur	x0, [x29, #-144]
   4f7c0:	add	x3, x10, x8
   4f7c4:	bl	c370 <mpfr_round_p@plt>
   4f7c8:	cbnz	w0, 4f888 <mpfr_yn@@Base+0x12dc>
   4f7cc:	ldr	x19, [sp, #8]
   4f7d0:	sub	x8, x20, x28
   4f7d4:	ldr	x20, [sp, #88]
   4f7d8:	sub	x8, x8, #0x105
   4f7dc:	cmp	x19, x8
   4f7e0:	b.gt	4f86c <mpfr_yn@@Base+0x12c0>
   4f7e4:	add	x28, x28, x19
   4f7e8:	cmp	x28, #0x0
   4f7ec:	ldr	x21, [sp]
   4f7f0:	cinc	x8, x28, lt  // lt = tstop
   4f7f4:	asr	x8, x8, #1
   4f7f8:	str	x8, [sp, #8]
   4f7fc:	b	4f1ec <mpfr_yn@@Base+0xc40>
   4f800:	str	xzr, [sp, #32]
   4f804:	b	4f380 <mpfr_yn@@Base+0xdd4>
   4f808:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f80c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4f810:	mov	w1, #0x5d                  	// #93
   4f814:	add	x0, x0, #0x9d5
   4f818:	add	x2, x2, #0x9ed
   4f81c:	bl	cb20 <mpfr_assert_fail@plt>
   4f820:	b	4f3ac <mpfr_yn@@Base+0xe00>
   4f824:	mov	w8, #0x3                   	// #3
   4f828:	mov	x27, x21
   4f82c:	mov	x25, x19
   4f830:	b	4f5f8 <mpfr_yn@@Base+0x104c>
   4f834:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f838:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4f83c:	mov	w1, #0x167                 	// #359
   4f840:	add	x0, x0, #0x9d5
   4f844:	add	x2, x2, #0x9da
   4f848:	bl	cb20 <mpfr_assert_fail@plt>
   4f84c:	b	4f378 <mpfr_yn@@Base+0xdcc>
   4f850:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f854:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4f858:	mov	w1, #0x92                  	// #146
   4f85c:	add	x0, x0, #0x9d5
   4f860:	add	x2, x2, #0x904
   4f864:	bl	cb20 <mpfr_assert_fail@plt>
   4f868:	b	4f5e4 <mpfr_yn@@Base+0x1038>
   4f86c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f870:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   4f874:	mov	w1, #0x196                 	// #406
   4f878:	add	x0, x0, #0x9d5
   4f87c:	add	x2, x2, #0x622
   4f880:	bl	cb20 <mpfr_assert_fail@plt>
   4f884:	b	4f7e4 <mpfr_yn@@Base+0x1238>
   4f888:	ldr	x10, [sp, #88]
   4f88c:	ldur	w8, [x29, #-160]
   4f890:	ldr	w26, [sp, #52]
   4f894:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4f898:	bics	xzr, x9, x10
   4f89c:	cneg	w3, w8, eq  // eq = none
   4f8a0:	sub	x1, x29, #0xa8
   4f8a4:	mov	x0, x27
   4f8a8:	mov	w2, w26
   4f8ac:	bl	c690 <mpfr_set4@plt>
   4f8b0:	mov	w24, w0
   4f8b4:	sub	x0, x29, #0x68
   4f8b8:	bl	c0b0 <mpfr_clear@plt>
   4f8bc:	sub	x0, x29, #0x88
   4f8c0:	bl	c0b0 <mpfr_clear@plt>
   4f8c4:	sub	x0, x29, #0xa8
   4f8c8:	bl	c0b0 <mpfr_clear@plt>
   4f8cc:	add	x0, sp, #0xc8
   4f8d0:	bl	c0b0 <mpfr_clear@plt>
   4f8d4:	ldr	x28, [sp, #80]
   4f8d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f8dc:	ldr	x1, [x0, #2640]
   4f8e0:	add	x0, x0, #0xa50
   4f8e4:	blr	x1
   4f8e8:	ldr	w9, [sp, #76]
   4f8ec:	str	w9, [x28, x0]
   4f8f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f8f4:	ldr	x1, [x0, #2576]
   4f8f8:	add	x0, x0, #0xa10
   4f8fc:	blr	x1
   4f900:	ldr	x10, [sp, #64]
   4f904:	str	x10, [x28, x0]
   4f908:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f90c:	ldr	x1, [x0, #2608]
   4f910:	add	x0, x0, #0xa30
   4f914:	blr	x1
   4f918:	ldr	x11, [sp, #56]
   4f91c:	str	x11, [x28, x0]
   4f920:	ldr	x8, [x27, #16]
   4f924:	cmp	x8, x11
   4f928:	b.gt	4f9b0 <mpfr_yn@@Base+0x1404>
   4f92c:	cmp	x8, x10
   4f930:	b.lt	4f9b0 <mpfr_yn@@Base+0x1404>  // b.tstop
   4f934:	cbz	w24, 4fa68 <mpfr_yn@@Base+0x14bc>
   4f938:	orr	w8, w9, #0x8
   4f93c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f940:	ldr	x1, [x0, #2640]
   4f944:	add	x0, x0, #0xa50
   4f948:	blr	x1
   4f94c:	str	w8, [x28, x0]
   4f950:	b	4fa68 <mpfr_yn@@Base+0x14bc>
   4f954:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4f958:	cmp	x9, x8
   4f95c:	b.eq	4fa18 <mpfr_yn@@Base+0x146c>  // b.none
   4f960:	mov	x8, #0x2                   	// #2
   4f964:	movk	x8, #0x8000, lsl #48
   4f968:	cmp	x9, x8
   4f96c:	b.eq	4fa3c <mpfr_yn@@Base+0x1490>  // b.none
   4f970:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4f974:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4f978:	str	x8, [x27, #16]
   4f97c:	bics	xzr, x9, x20
   4f980:	mov	w8, #0x1                   	// #1
   4f984:	cneg	w8, w8, ne  // ne = any
   4f988:	str	w8, [x27, #8]
   4f98c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4f990:	ldr	x1, [x0, #2640]
   4f994:	add	x0, x0, #0xa50
   4f998:	blr	x1
   4f99c:	mrs	x8, tpidr_el0
   4f9a0:	ldr	w9, [x8, x0]
   4f9a4:	mov	w24, wzr
   4f9a8:	orr	w9, w9, #0x20
   4f9ac:	b	4fa64 <mpfr_yn@@Base+0x14b8>
   4f9b0:	mov	x0, x27
   4f9b4:	mov	w1, w24
   4f9b8:	mov	w2, w26
   4f9bc:	bl	cb10 <mpfr_check_range@plt>
   4f9c0:	mov	w24, w0
   4f9c4:	b	4fa68 <mpfr_yn@@Base+0x14bc>
   4f9c8:	mov	x8, xzr
   4f9cc:	b	4ea6c <mpfr_yn@@Base+0x4c0>
   4f9d0:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f9d4:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4f9d8:	add	x0, x0, #0x9c6
   4f9dc:	add	x2, x2, #0x89f
   4f9e0:	mov	w1, #0x36                  	// #54
   4f9e4:	bl	cb20 <mpfr_assert_fail@plt>
   4f9e8:	ldr	x8, [x27]
   4f9ec:	b	4ea5c <mpfr_yn@@Base+0x4b0>
   4f9f0:	mov	x8, xzr
   4f9f4:	b	4f1b4 <mpfr_yn@@Base+0xc08>
   4f9f8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4f9fc:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   4fa00:	add	x0, x0, #0x9d5
   4fa04:	add	x2, x2, #0x89f
   4fa08:	mov	w1, #0x14c                 	// #332
   4fa0c:	bl	cb20 <mpfr_assert_fail@plt>
   4fa10:	ldr	x8, [x27]
   4fa14:	b	4f1a0 <mpfr_yn@@Base+0xbf4>
   4fa18:	ldr	w8, [x22, #8]
   4fa1c:	cmp	w8, #0x1
   4fa20:	b.lt	4fa3c <mpfr_yn@@Base+0x1490>  // b.tstop
   4fa24:	mov	w8, #0x1                   	// #1
   4fa28:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4fa2c:	mov	w24, wzr
   4fa30:	str	w8, [x27, #8]
   4fa34:	str	x9, [x27, #16]
   4fa38:	b	4fa68 <mpfr_yn@@Base+0x14bc>
   4fa3c:	sub	x8, x19, #0x2
   4fa40:	str	x8, [x27, #16]
   4fa44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4fa48:	ldr	x1, [x0, #2640]
   4fa4c:	add	x0, x0, #0xa50
   4fa50:	blr	x1
   4fa54:	mrs	x8, tpidr_el0
   4fa58:	ldr	w9, [x8, x0]
   4fa5c:	mov	w24, wzr
   4fa60:	orr	w9, w9, #0x4
   4fa64:	str	w9, [x8, x0]
   4fa68:	mov	w0, w24
   4fa6c:	ldp	x20, x19, [sp, #480]
   4fa70:	ldp	x22, x21, [sp, #464]
   4fa74:	ldp	x24, x23, [sp, #448]
   4fa78:	ldp	x26, x25, [sp, #432]
   4fa7c:	ldp	x28, x27, [sp, #416]
   4fa80:	ldp	x29, x30, [sp, #400]
   4fa84:	add	sp, sp, #0x1f0
   4fa88:	ret
   4fa8c:	sub	x0, x29, #0x28
   4fa90:	bl	c0b0 <mpfr_clear@plt>
   4fa94:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4fa98:	ldr	x1, [x0, #2640]
   4fa9c:	add	x0, x0, #0xa50
   4faa0:	blr	x1
   4faa4:	ldr	w8, [sp, #76]
   4faa8:	str	w8, [x28, x0]
   4faac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4fab0:	ldr	x1, [x0, #2576]
   4fab4:	add	x0, x0, #0xa10
   4fab8:	blr	x1
   4fabc:	ldr	x8, [sp, #64]
   4fac0:	str	x8, [x28, x0]
   4fac4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4fac8:	ldr	x1, [x0, #2608]
   4facc:	add	x0, x0, #0xa30
   4fad0:	blr	x1
   4fad4:	ldr	x8, [sp, #56]
   4fad8:	mov	w2, #0xffffffff            	// #-1
   4fadc:	mov	w1, w26
   4fae0:	str	x8, [x28, x0]
   4fae4:	mov	x0, x27
   4fae8:	bl	bf90 <mpfr_overflow@plt>
   4faec:	b	4f9c0 <mpfr_yn@@Base+0x1414>
   4faf0:	sub	x0, x29, #0x48
   4faf4:	bl	c0b0 <mpfr_clear@plt>
   4faf8:	ldr	x20, [sp, #88]
   4fafc:	mov	w24, wzr
   4fb00:	cbnz	w24, 4f8d8 <mpfr_yn@@Base+0x132c>
   4fb04:	b	4f16c <mpfr_yn@@Base+0xbc0>

000000000004fb08 <mpfr_y1@@Base>:
   4fb08:	mov	w3, w2
   4fb0c:	mov	x2, x1
   4fb10:	mov	w1, #0x1                   	// #1
   4fb14:	b	c5b0 <mpfr_yn@plt>

000000000004fb18 <mpfr_remainder@@Base>:
   4fb18:	mov	w5, w3
   4fb1c:	mov	x4, x2
   4fb20:	mov	x3, x1
   4fb24:	mov	x1, xzr
   4fb28:	mov	w2, wzr
   4fb2c:	b	4fb30 <mpfr_remainder@@Base+0x18>
   4fb30:	sub	sp, sp, #0xa0
   4fb34:	stp	x29, x30, [sp, #64]
   4fb38:	stp	x28, x27, [sp, #80]
   4fb3c:	stp	x26, x25, [sp, #96]
   4fb40:	stp	x24, x23, [sp, #112]
   4fb44:	stp	x22, x21, [sp, #128]
   4fb48:	stp	x20, x19, [sp, #144]
   4fb4c:	ldr	x9, [x3, #16]
   4fb50:	mov	x23, x3
   4fb54:	mov	x8, #0x2                   	// #2
   4fb58:	ldr	w3, [x3, #8]
   4fb5c:	movk	x8, #0x8000, lsl #48
   4fb60:	add	x11, x8, #0x2
   4fb64:	mov	w27, w5
   4fb68:	mov	x25, x4
   4fb6c:	mov	x19, x1
   4fb70:	cmp	x9, x11
   4fb74:	mov	x22, x0
   4fb78:	add	x29, sp, #0x40
   4fb7c:	b.lt	4ff44 <mpfr_remainder@@Base+0x42c>  // b.tstop
   4fb80:	ldr	x10, [x25, #16]
   4fb84:	cmp	x10, x11
   4fb88:	b.lt	4ff50 <mpfr_remainder@@Base+0x438>  // b.tstop
   4fb8c:	sub	x0, x29, #0x10
   4fb90:	mov	w24, w2
   4fb94:	str	w3, [sp, #12]
   4fb98:	bl	bfe0 <mpfr_mpz_init@plt>
   4fb9c:	add	x0, sp, #0x20
   4fba0:	bl	bfe0 <mpfr_mpz_init@plt>
   4fba4:	add	x0, sp, #0x10
   4fba8:	bl	bfe0 <mpfr_mpz_init@plt>
   4fbac:	sub	x0, x29, #0x10
   4fbb0:	mov	x1, x23
   4fbb4:	bl	caa0 <mpfr_get_z_2exp@plt>
   4fbb8:	mov	x23, x0
   4fbbc:	add	x0, sp, #0x20
   4fbc0:	mov	x1, x25
   4fbc4:	bl	caa0 <mpfr_get_z_2exp@plt>
   4fbc8:	ldur	w8, [x29, #-12]
   4fbcc:	ldr	w9, [sp, #36]
   4fbd0:	ldr	w25, [x25, #8]
   4fbd4:	mov	x26, x0
   4fbd8:	cmp	w8, #0x0
   4fbdc:	cneg	w8, w8, mi  // mi = first
   4fbe0:	cmp	w9, #0x0
   4fbe4:	stur	w8, [x29, #-12]
   4fbe8:	cneg	w8, w9, mi  // mi = first
   4fbec:	add	x0, sp, #0x20
   4fbf0:	mov	x1, xzr
   4fbf4:	str	w8, [sp, #36]
   4fbf8:	bl	baf0 <__gmpz_scan1@plt>
   4fbfc:	mov	x2, x0
   4fc00:	add	x28, x0, x26
   4fc04:	add	x0, sp, #0x20
   4fc08:	add	x1, sp, #0x20
   4fc0c:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4fc10:	subs	x20, x28, x23
   4fc14:	b.ge	4fc30 <mpfr_remainder@@Base+0x118>  // b.tcont
   4fc18:	cbz	x19, 4fcec <mpfr_remainder@@Base+0x1d4>
   4fc1c:	mov	w2, #0x3f                  	// #63
   4fc20:	add	x0, sp, #0x20
   4fc24:	add	x1, sp, #0x20
   4fc28:	bl	c230 <__gmpz_mul_2exp@plt>
   4fc2c:	b	4fcf0 <mpfr_remainder@@Base+0x1d8>
   4fc30:	sub	x0, x29, #0x10
   4fc34:	mov	w1, #0x2                   	// #2
   4fc38:	bl	cb40 <__gmpz_sizeinbase@plt>
   4fc3c:	add	x21, x0, x23
   4fc40:	add	x0, sp, #0x20
   4fc44:	mov	w1, #0x2                   	// #2
   4fc48:	bl	cb40 <__gmpz_sizeinbase@plt>
   4fc4c:	add	x8, x0, x28
   4fc50:	cmp	x21, x8
   4fc54:	b.ge	4fc84 <mpfr_remainder@@Base+0x16c>  // b.tcont
   4fc58:	add	x0, sp, #0x10
   4fc5c:	sub	x1, x29, #0x10
   4fc60:	bl	bff0 <__gmpz_set@plt>
   4fc64:	sub	x0, x29, #0x10
   4fc68:	mov	x1, xzr
   4fc6c:	bl	bd00 <__gmpz_set_ui@plt>
   4fc70:	mov	w21, #0x1                   	// #1
   4fc74:	cbz	w24, 4fcb0 <mpfr_remainder@@Base+0x198>
   4fc78:	mov	w26, wzr
   4fc7c:	cbnz	x19, 4fcc4 <mpfr_remainder@@Base+0x1ac>
   4fc80:	b	4fd6c <mpfr_remainder@@Base+0x254>
   4fc84:	add	x0, sp, #0x20
   4fc88:	add	x1, sp, #0x20
   4fc8c:	mov	x2, x20
   4fc90:	bl	c230 <__gmpz_mul_2exp@plt>
   4fc94:	sub	x0, x29, #0x10
   4fc98:	add	x1, sp, #0x10
   4fc9c:	sub	x2, x29, #0x10
   4fca0:	add	x3, sp, #0x20
   4fca4:	bl	bb30 <__gmpz_tdiv_qr@plt>
   4fca8:	mov	w21, wzr
   4fcac:	cbnz	w24, 4fc78 <mpfr_remainder@@Base+0x160>
   4fcb0:	sub	x0, x29, #0x10
   4fcb4:	mov	x1, xzr
   4fcb8:	bl	c020 <__gmpz_tstbit@plt>
   4fcbc:	mov	w26, w0
   4fcc0:	cbz	x19, 4fd6c <mpfr_remainder@@Base+0x254>
   4fcc4:	sub	x0, x29, #0x10
   4fcc8:	sub	x1, x29, #0x10
   4fccc:	mov	w2, #0x3f                  	// #63
   4fcd0:	bl	ba90 <__gmpz_tdiv_r_2exp@plt>
   4fcd4:	sub	x0, x29, #0x10
   4fcd8:	bl	ba80 <__gmpz_get_si@plt>
   4fcdc:	str	x0, [x19]
   4fce0:	ldr	w8, [sp, #20]
   4fce4:	cbnz	w8, 4fd74 <mpfr_remainder@@Base+0x25c>
   4fce8:	b	4febc <mpfr_remainder@@Base+0x3a4>
   4fcec:	cbz	w24, 4fe70 <mpfr_remainder@@Base+0x358>
   4fcf0:	add	x0, sp, #0x10
   4fcf4:	mov	w1, #0x2                   	// #2
   4fcf8:	bl	bd00 <__gmpz_set_ui@plt>
   4fcfc:	sub	x2, x23, x28
   4fd00:	add	x0, sp, #0x10
   4fd04:	add	x1, sp, #0x10
   4fd08:	add	x3, sp, #0x20
   4fd0c:	bl	cba0 <__gmpz_powm_ui@plt>
   4fd10:	add	x0, sp, #0x10
   4fd14:	add	x1, sp, #0x10
   4fd18:	sub	x2, x29, #0x10
   4fd1c:	bl	c030 <__gmpz_mul@plt>
   4fd20:	add	x0, sp, #0x10
   4fd24:	add	x1, sp, #0x10
   4fd28:	add	x2, sp, #0x20
   4fd2c:	bl	c890 <__gmpz_mod@plt>
   4fd30:	cbz	x19, 4fdcc <mpfr_remainder@@Base+0x2b4>
   4fd34:	add	x0, sp, #0x20
   4fd38:	add	x1, sp, #0x20
   4fd3c:	mov	w2, #0x3f                  	// #63
   4fd40:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4fd44:	sub	x0, x29, #0x10
   4fd48:	add	x1, sp, #0x10
   4fd4c:	add	x2, sp, #0x10
   4fd50:	add	x3, sp, #0x20
   4fd54:	bl	bb30 <__gmpz_tdiv_qr@plt>
   4fd58:	sub	x0, x29, #0x10
   4fd5c:	bl	ba80 <__gmpz_get_si@plt>
   4fd60:	mov	w21, wzr
   4fd64:	str	x0, [x19]
   4fd68:	and	w26, w0, #0x1
   4fd6c:	ldr	w8, [sp, #20]
   4fd70:	cbz	w8, 4febc <mpfr_remainder@@Base+0x3a4>
   4fd74:	cbnz	w24, 4fe38 <mpfr_remainder@@Base+0x320>
   4fd78:	add	x0, sp, #0x10
   4fd7c:	add	x1, sp, #0x10
   4fd80:	mov	w2, #0x1                   	// #1
   4fd84:	bl	c230 <__gmpz_mul_2exp@plt>
   4fd88:	cbz	w21, 4fde8 <mpfr_remainder@@Base+0x2d0>
   4fd8c:	add	x0, sp, #0x10
   4fd90:	mov	w1, #0x2                   	// #2
   4fd94:	bl	cb40 <__gmpz_sizeinbase@plt>
   4fd98:	add	x21, x0, x23
   4fd9c:	add	x0, sp, #0x20
   4fda0:	mov	w1, #0x2                   	// #2
   4fda4:	bl	cb40 <__gmpz_sizeinbase@plt>
   4fda8:	add	x8, x0, x28
   4fdac:	cmp	x21, x8
   4fdb0:	b.ge	4fdd8 <mpfr_remainder@@Base+0x2c0>  // b.tcont
   4fdb4:	add	x0, sp, #0x10
   4fdb8:	add	x1, sp, #0x10
   4fdbc:	mov	w2, #0x1                   	// #1
   4fdc0:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4fdc4:	cbnz	w26, 4fe18 <mpfr_remainder@@Base+0x300>
   4fdc8:	b	4fe38 <mpfr_remainder@@Base+0x320>
   4fdcc:	cbz	w24, 4fe78 <mpfr_remainder@@Base+0x360>
   4fdd0:	mov	w26, wzr
   4fdd4:	b	4feb0 <mpfr_remainder@@Base+0x398>
   4fdd8:	add	x0, sp, #0x20
   4fddc:	add	x1, sp, #0x20
   4fde0:	mov	x2, x20
   4fde4:	bl	c230 <__gmpz_mul_2exp@plt>
   4fde8:	add	x0, sp, #0x10
   4fdec:	add	x1, sp, #0x20
   4fdf0:	bl	bf30 <__gmpz_cmpabs@plt>
   4fdf4:	mov	w24, w0
   4fdf8:	add	x0, sp, #0x10
   4fdfc:	add	x1, sp, #0x10
   4fe00:	mov	w2, #0x1                   	// #1
   4fe04:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4fe08:	cmp	w24, #0x0
   4fe0c:	b.gt	4fe18 <mpfr_remainder@@Base+0x300>
   4fe10:	cbz	w26, 4fe38 <mpfr_remainder@@Base+0x320>
   4fe14:	cbnz	w24, 4fe38 <mpfr_remainder@@Base+0x320>
   4fe18:	add	x0, sp, #0x10
   4fe1c:	add	x1, sp, #0x10
   4fe20:	add	x2, sp, #0x20
   4fe24:	bl	be30 <__gmpz_sub@plt>
   4fe28:	cbz	x19, 4fe38 <mpfr_remainder@@Base+0x320>
   4fe2c:	ldr	x8, [x19]
   4fe30:	add	x8, x8, #0x1
   4fe34:	str	x8, [x19]
   4fe38:	ldr	w20, [sp, #12]
   4fe3c:	tbz	w20, #31, 4fe4c <mpfr_remainder@@Base+0x334>
   4fe40:	ldr	w8, [sp, #20]
   4fe44:	neg	w8, w8
   4fe48:	str	w8, [sp, #20]
   4fe4c:	cmp	x28, x23
   4fe50:	csel	x2, x28, x23, lt  // lt = tstop
   4fe54:	add	x1, sp, #0x10
   4fe58:	mov	x0, x22
   4fe5c:	mov	w3, w27
   4fe60:	bl	c4e0 <mpfr_set_z_2exp@plt>
   4fe64:	mov	w21, w0
   4fe68:	cbnz	x19, 4fedc <mpfr_remainder@@Base+0x3c4>
   4fe6c:	b	4feec <mpfr_remainder@@Base+0x3d4>
   4fe70:	mov	w2, #0x1                   	// #1
   4fe74:	b	4fc20 <mpfr_remainder@@Base+0x108>
   4fe78:	add	x0, sp, #0x20
   4fe7c:	add	x1, sp, #0x20
   4fe80:	mov	w2, #0x1                   	// #1
   4fe84:	bl	c170 <__gmpz_fdiv_q_2exp@plt>
   4fe88:	add	x0, sp, #0x10
   4fe8c:	add	x1, sp, #0x20
   4fe90:	bl	bf30 <__gmpz_cmpabs@plt>
   4fe94:	mvn	w8, w0
   4fe98:	lsr	w26, w8, #31
   4fe9c:	tbnz	w0, #31, 4feb0 <mpfr_remainder@@Base+0x398>
   4fea0:	add	x0, sp, #0x10
   4fea4:	add	x1, sp, #0x10
   4fea8:	add	x2, sp, #0x20
   4feac:	bl	be30 <__gmpz_sub@plt>
   4feb0:	mov	w21, wzr
   4feb4:	ldr	w8, [sp, #20]
   4feb8:	cbnz	w8, 4fd74 <mpfr_remainder@@Base+0x25c>
   4febc:	ldr	w20, [sp, #12]
   4fec0:	mov	w8, #0x1                   	// #1
   4fec4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4fec8:	str	w8, [x22, #8]
   4fecc:	str	x9, [x22, #16]
   4fed0:	tbnz	w20, #31, 4ff28 <mpfr_remainder@@Base+0x410>
   4fed4:	mov	w21, wzr
   4fed8:	cbz	x19, 4feec <mpfr_remainder@@Base+0x3d4>
   4fedc:	ldr	x8, [x19]
   4fee0:	cmp	w20, w25
   4fee4:	cneg	x8, x8, ne  // ne = any
   4fee8:	str	x8, [x19]
   4feec:	sub	x0, x29, #0x10
   4fef0:	bl	c1b0 <mpfr_mpz_clear@plt>
   4fef4:	add	x0, sp, #0x20
   4fef8:	bl	c1b0 <mpfr_mpz_clear@plt>
   4fefc:	add	x0, sp, #0x10
   4ff00:	bl	c1b0 <mpfr_mpz_clear@plt>
   4ff04:	mov	w0, w21
   4ff08:	ldp	x20, x19, [sp, #144]
   4ff0c:	ldp	x22, x21, [sp, #128]
   4ff10:	ldp	x24, x23, [sp, #112]
   4ff14:	ldp	x26, x25, [sp, #96]
   4ff18:	ldp	x28, x27, [sp, #80]
   4ff1c:	ldp	x29, x30, [sp, #64]
   4ff20:	add	sp, sp, #0xa0
   4ff24:	ret
   4ff28:	mov	x0, x22
   4ff2c:	mov	x1, x22
   4ff30:	mov	w2, wzr
   4ff34:	bl	bdc0 <mpfr_neg@plt>
   4ff38:	mov	w21, wzr
   4ff3c:	cbnz	x19, 4fedc <mpfr_remainder@@Base+0x3c4>
   4ff40:	b	4feec <mpfr_remainder@@Base+0x3d4>
   4ff44:	cmp	x9, x8
   4ff48:	b.eq	4ff8c <mpfr_remainder@@Base+0x474>  // b.none
   4ff4c:	ldr	x10, [x25, #16]
   4ff50:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   4ff54:	cmp	x9, x11
   4ff58:	b.eq	4ff8c <mpfr_remainder@@Base+0x474>  // b.none
   4ff5c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   4ff60:	add	x9, x10, x9
   4ff64:	cmp	x9, #0x1
   4ff68:	b.ls	4ff8c <mpfr_remainder@@Base+0x474>  // b.plast
   4ff6c:	cbz	x19, 4ff74 <mpfr_remainder@@Base+0x45c>
   4ff70:	str	xzr, [x19]
   4ff74:	mov	x0, x22
   4ff78:	mov	x1, x23
   4ff7c:	mov	w2, w27
   4ff80:	bl	c690 <mpfr_set4@plt>
   4ff84:	mov	w21, w0
   4ff88:	b	4ff04 <mpfr_remainder@@Base+0x3ec>
   4ff8c:	str	x8, [x22, #16]
   4ff90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   4ff94:	ldr	x1, [x0, #2640]
   4ff98:	add	x0, x0, #0xa50
   4ff9c:	blr	x1
   4ffa0:	mrs	x8, tpidr_el0
   4ffa4:	ldr	w9, [x8, x0]
   4ffa8:	mov	w21, wzr
   4ffac:	orr	w9, w9, #0x4
   4ffb0:	str	w9, [x8, x0]
   4ffb4:	b	4ff04 <mpfr_remainder@@Base+0x3ec>

000000000004ffb8 <mpfr_remquo@@Base>:
   4ffb8:	mov	w5, w4
   4ffbc:	mov	x4, x3
   4ffc0:	mov	x3, x2
   4ffc4:	mov	w2, wzr
   4ffc8:	b	4fb30 <mpfr_remainder@@Base+0x18>

000000000004ffcc <mpfr_fmod@@Base>:
   4ffcc:	mov	w5, w3
   4ffd0:	mov	x4, x2
   4ffd4:	mov	x3, x1
   4ffd8:	mov	w2, #0x1                   	// #1
   4ffdc:	mov	x1, xzr
   4ffe0:	b	4fb30 <mpfr_remainder@@Base+0x18>

000000000004ffe4 <mpfr_fmodquo@@Base>:
   4ffe4:	mov	w5, w4
   4ffe8:	mov	x4, x3
   4ffec:	mov	x3, x2
   4fff0:	mov	w2, #0x1                   	// #1
   4fff4:	b	4fb30 <mpfr_remainder@@Base+0x18>

000000000004fff8 <mpfr_get_patches@@Base>:
   4fff8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   4fffc:	add	x0, x0, #0xd3
   50000:	ret

0000000000050004 <mpfr_add_d@@Base>:
   50004:	sub	sp, sp, #0x90
   50008:	stp	x29, x30, [sp, #48]
   5000c:	stp	x28, x27, [sp, #64]
   50010:	stp	x26, x25, [sp, #80]
   50014:	stp	x24, x23, [sp, #96]
   50018:	stp	x22, x21, [sp, #112]
   5001c:	stp	x20, x19, [sp, #128]
   50020:	add	x29, sp, #0x30
   50024:	mov	w19, w2
   50028:	mov	x21, x1
   5002c:	mov	x20, x0
   50030:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50034:	ldr	x1, [x0, #2640]
   50038:	add	x0, x0, #0xa50
   5003c:	blr	x1
   50040:	mrs	x25, tpidr_el0
   50044:	ldr	w27, [x25, x0]
   50048:	mov	x22, x0
   5004c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50050:	ldr	x1, [x0, #2576]
   50054:	add	x0, x0, #0xa10
   50058:	blr	x1
   5005c:	ldr	x26, [x25, x0]
   50060:	mov	x23, x0
   50064:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50068:	ldr	x1, [x0, #2608]
   5006c:	add	x0, x0, #0xa30
   50070:	blr	x1
   50074:	ldr	x28, [x25, x0]
   50078:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   5007c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   50080:	mov	x24, x0
   50084:	mov	w10, #0x35                  	// #53
   50088:	add	x11, sp, #0x8
   5008c:	str	x8, [x25, x23]
   50090:	str	x9, [x25, x0]
   50094:	mov	w8, #0x1                   	// #1
   50098:	add	x0, sp, #0x10
   5009c:	mov	w1, w2
   500a0:	str	x10, [sp, #16]
   500a4:	str	x11, [sp, #40]
   500a8:	str	w8, [sp, #24]
   500ac:	bl	be90 <mpfr_set_d@plt>
   500b0:	add	x2, sp, #0x10
   500b4:	mov	x0, x20
   500b8:	mov	x1, x21
   500bc:	mov	w3, w19
   500c0:	str	wzr, [x25, x22]
   500c4:	bl	c1e0 <mpfr_add@plt>
   500c8:	ldr	w8, [x25, x22]
   500cc:	str	x26, [x25, x23]
   500d0:	str	x28, [x25, x24]
   500d4:	orr	w9, w8, w27
   500d8:	str	w9, [x25, x22]
   500dc:	ldr	x10, [x20, #16]
   500e0:	mov	w8, w0
   500e4:	cmp	x10, x28
   500e8:	b.gt	50134 <mpfr_add_d@@Base+0x130>
   500ec:	cmp	x10, x26
   500f0:	b.lt	50134 <mpfr_add_d@@Base+0x130>  // b.tstop
   500f4:	cbz	w8, 50110 <mpfr_add_d@@Base+0x10c>
   500f8:	orr	w9, w9, #0x8
   500fc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50100:	ldr	x1, [x0, #2640]
   50104:	add	x0, x0, #0xa50
   50108:	blr	x1
   5010c:	str	w9, [x25, x0]
   50110:	ldp	x20, x19, [sp, #128]
   50114:	ldp	x22, x21, [sp, #112]
   50118:	ldp	x24, x23, [sp, #96]
   5011c:	ldp	x26, x25, [sp, #80]
   50120:	ldp	x28, x27, [sp, #64]
   50124:	ldp	x29, x30, [sp, #48]
   50128:	mov	w0, w8
   5012c:	add	sp, sp, #0x90
   50130:	ret
   50134:	mov	x0, x20
   50138:	mov	w1, w8
   5013c:	mov	w2, w19
   50140:	bl	cb10 <mpfr_check_range@plt>
   50144:	mov	w8, w0
   50148:	b	50110 <mpfr_add_d@@Base+0x10c>

000000000005014c <mpfr_sub_d@@Base>:
   5014c:	sub	sp, sp, #0x90
   50150:	stp	x29, x30, [sp, #48]
   50154:	stp	x28, x27, [sp, #64]
   50158:	stp	x26, x25, [sp, #80]
   5015c:	stp	x24, x23, [sp, #96]
   50160:	stp	x22, x21, [sp, #112]
   50164:	stp	x20, x19, [sp, #128]
   50168:	add	x29, sp, #0x30
   5016c:	mov	w19, w2
   50170:	mov	x21, x1
   50174:	mov	x20, x0
   50178:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5017c:	ldr	x1, [x0, #2640]
   50180:	add	x0, x0, #0xa50
   50184:	blr	x1
   50188:	mrs	x25, tpidr_el0
   5018c:	ldr	w27, [x25, x0]
   50190:	mov	x22, x0
   50194:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50198:	ldr	x1, [x0, #2576]
   5019c:	add	x0, x0, #0xa10
   501a0:	blr	x1
   501a4:	ldr	x26, [x25, x0]
   501a8:	mov	x23, x0
   501ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   501b0:	ldr	x1, [x0, #2608]
   501b4:	add	x0, x0, #0xa30
   501b8:	blr	x1
   501bc:	ldr	x28, [x25, x0]
   501c0:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   501c4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   501c8:	mov	x24, x0
   501cc:	mov	w10, #0x35                  	// #53
   501d0:	add	x11, sp, #0x8
   501d4:	str	x8, [x25, x23]
   501d8:	str	x9, [x25, x0]
   501dc:	mov	w8, #0x1                   	// #1
   501e0:	add	x0, sp, #0x10
   501e4:	mov	w1, w2
   501e8:	str	x10, [sp, #16]
   501ec:	str	x11, [sp, #40]
   501f0:	str	w8, [sp, #24]
   501f4:	bl	be90 <mpfr_set_d@plt>
   501f8:	add	x2, sp, #0x10
   501fc:	mov	x0, x20
   50200:	mov	x1, x21
   50204:	mov	w3, w19
   50208:	str	wzr, [x25, x22]
   5020c:	bl	bbc0 <mpfr_sub@plt>
   50210:	ldr	w8, [x25, x22]
   50214:	str	x26, [x25, x23]
   50218:	str	x28, [x25, x24]
   5021c:	orr	w9, w8, w27
   50220:	str	w9, [x25, x22]
   50224:	ldr	x10, [x20, #16]
   50228:	mov	w8, w0
   5022c:	cmp	x10, x28
   50230:	b.gt	5027c <mpfr_sub_d@@Base+0x130>
   50234:	cmp	x10, x26
   50238:	b.lt	5027c <mpfr_sub_d@@Base+0x130>  // b.tstop
   5023c:	cbz	w8, 50258 <mpfr_sub_d@@Base+0x10c>
   50240:	orr	w9, w9, #0x8
   50244:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50248:	ldr	x1, [x0, #2640]
   5024c:	add	x0, x0, #0xa50
   50250:	blr	x1
   50254:	str	w9, [x25, x0]
   50258:	ldp	x20, x19, [sp, #128]
   5025c:	ldp	x22, x21, [sp, #112]
   50260:	ldp	x24, x23, [sp, #96]
   50264:	ldp	x26, x25, [sp, #80]
   50268:	ldp	x28, x27, [sp, #64]
   5026c:	ldp	x29, x30, [sp, #48]
   50270:	mov	w0, w8
   50274:	add	sp, sp, #0x90
   50278:	ret
   5027c:	mov	x0, x20
   50280:	mov	w1, w8
   50284:	mov	w2, w19
   50288:	bl	cb10 <mpfr_check_range@plt>
   5028c:	mov	w8, w0
   50290:	b	50258 <mpfr_sub_d@@Base+0x10c>

0000000000050294 <mpfr_d_sub@@Base>:
   50294:	sub	sp, sp, #0x90
   50298:	stp	x29, x30, [sp, #48]
   5029c:	stp	x28, x27, [sp, #64]
   502a0:	stp	x26, x25, [sp, #80]
   502a4:	stp	x24, x23, [sp, #96]
   502a8:	stp	x22, x21, [sp, #112]
   502ac:	stp	x20, x19, [sp, #128]
   502b0:	add	x29, sp, #0x30
   502b4:	mov	w19, w2
   502b8:	mov	x21, x1
   502bc:	mov	x20, x0
   502c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   502c4:	ldr	x1, [x0, #2640]
   502c8:	add	x0, x0, #0xa50
   502cc:	blr	x1
   502d0:	mrs	x25, tpidr_el0
   502d4:	ldr	w27, [x25, x0]
   502d8:	mov	x22, x0
   502dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   502e0:	ldr	x1, [x0, #2576]
   502e4:	add	x0, x0, #0xa10
   502e8:	blr	x1
   502ec:	ldr	x26, [x25, x0]
   502f0:	mov	x23, x0
   502f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   502f8:	ldr	x1, [x0, #2608]
   502fc:	add	x0, x0, #0xa30
   50300:	blr	x1
   50304:	ldr	x28, [x25, x0]
   50308:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   5030c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   50310:	mov	x24, x0
   50314:	mov	w10, #0x35                  	// #53
   50318:	add	x11, sp, #0x8
   5031c:	str	x8, [x25, x23]
   50320:	str	x9, [x25, x0]
   50324:	mov	w8, #0x1                   	// #1
   50328:	add	x0, sp, #0x10
   5032c:	mov	w1, w2
   50330:	str	x10, [sp, #16]
   50334:	str	x11, [sp, #40]
   50338:	str	w8, [sp, #24]
   5033c:	bl	be90 <mpfr_set_d@plt>
   50340:	add	x1, sp, #0x10
   50344:	mov	x0, x20
   50348:	mov	x2, x21
   5034c:	mov	w3, w19
   50350:	str	wzr, [x25, x22]
   50354:	bl	bbc0 <mpfr_sub@plt>
   50358:	ldr	w8, [x25, x22]
   5035c:	str	x26, [x25, x23]
   50360:	str	x28, [x25, x24]
   50364:	orr	w9, w8, w27
   50368:	str	w9, [x25, x22]
   5036c:	ldr	x10, [x20, #16]
   50370:	mov	w8, w0
   50374:	cmp	x10, x28
   50378:	b.gt	503c4 <mpfr_d_sub@@Base+0x130>
   5037c:	cmp	x10, x26
   50380:	b.lt	503c4 <mpfr_d_sub@@Base+0x130>  // b.tstop
   50384:	cbz	w8, 503a0 <mpfr_d_sub@@Base+0x10c>
   50388:	orr	w9, w9, #0x8
   5038c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50390:	ldr	x1, [x0, #2640]
   50394:	add	x0, x0, #0xa50
   50398:	blr	x1
   5039c:	str	w9, [x25, x0]
   503a0:	ldp	x20, x19, [sp, #128]
   503a4:	ldp	x22, x21, [sp, #112]
   503a8:	ldp	x24, x23, [sp, #96]
   503ac:	ldp	x26, x25, [sp, #80]
   503b0:	ldp	x28, x27, [sp, #64]
   503b4:	ldp	x29, x30, [sp, #48]
   503b8:	mov	w0, w8
   503bc:	add	sp, sp, #0x90
   503c0:	ret
   503c4:	mov	x0, x20
   503c8:	mov	w1, w8
   503cc:	mov	w2, w19
   503d0:	bl	cb10 <mpfr_check_range@plt>
   503d4:	mov	w8, w0
   503d8:	b	503a0 <mpfr_d_sub@@Base+0x10c>

00000000000503dc <mpfr_mul_d@@Base>:
   503dc:	sub	sp, sp, #0x90
   503e0:	stp	x29, x30, [sp, #48]
   503e4:	stp	x28, x27, [sp, #64]
   503e8:	stp	x26, x25, [sp, #80]
   503ec:	stp	x24, x23, [sp, #96]
   503f0:	stp	x22, x21, [sp, #112]
   503f4:	stp	x20, x19, [sp, #128]
   503f8:	add	x29, sp, #0x30
   503fc:	mov	w19, w2
   50400:	mov	x21, x1
   50404:	mov	x20, x0
   50408:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5040c:	ldr	x1, [x0, #2640]
   50410:	add	x0, x0, #0xa50
   50414:	blr	x1
   50418:	mrs	x25, tpidr_el0
   5041c:	ldr	w27, [x25, x0]
   50420:	mov	x22, x0
   50424:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50428:	ldr	x1, [x0, #2576]
   5042c:	add	x0, x0, #0xa10
   50430:	blr	x1
   50434:	ldr	x26, [x25, x0]
   50438:	mov	x23, x0
   5043c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50440:	ldr	x1, [x0, #2608]
   50444:	add	x0, x0, #0xa30
   50448:	blr	x1
   5044c:	ldr	x28, [x25, x0]
   50450:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   50454:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   50458:	mov	x24, x0
   5045c:	mov	w10, #0x35                  	// #53
   50460:	add	x11, sp, #0x8
   50464:	str	x8, [x25, x23]
   50468:	str	x9, [x25, x0]
   5046c:	mov	w8, #0x1                   	// #1
   50470:	add	x0, sp, #0x10
   50474:	mov	w1, w2
   50478:	str	x10, [sp, #16]
   5047c:	str	x11, [sp, #40]
   50480:	str	w8, [sp, #24]
   50484:	bl	be90 <mpfr_set_d@plt>
   50488:	add	x2, sp, #0x10
   5048c:	mov	x0, x20
   50490:	mov	x1, x21
   50494:	mov	w3, w19
   50498:	str	wzr, [x25, x22]
   5049c:	bl	bda0 <mpfr_mul@plt>
   504a0:	ldr	w8, [x25, x22]
   504a4:	str	x26, [x25, x23]
   504a8:	str	x28, [x25, x24]
   504ac:	orr	w9, w8, w27
   504b0:	str	w9, [x25, x22]
   504b4:	ldr	x10, [x20, #16]
   504b8:	mov	w8, w0
   504bc:	cmp	x10, x28
   504c0:	b.gt	5050c <mpfr_mul_d@@Base+0x130>
   504c4:	cmp	x10, x26
   504c8:	b.lt	5050c <mpfr_mul_d@@Base+0x130>  // b.tstop
   504cc:	cbz	w8, 504e8 <mpfr_mul_d@@Base+0x10c>
   504d0:	orr	w9, w9, #0x8
   504d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   504d8:	ldr	x1, [x0, #2640]
   504dc:	add	x0, x0, #0xa50
   504e0:	blr	x1
   504e4:	str	w9, [x25, x0]
   504e8:	ldp	x20, x19, [sp, #128]
   504ec:	ldp	x22, x21, [sp, #112]
   504f0:	ldp	x24, x23, [sp, #96]
   504f4:	ldp	x26, x25, [sp, #80]
   504f8:	ldp	x28, x27, [sp, #64]
   504fc:	ldp	x29, x30, [sp, #48]
   50500:	mov	w0, w8
   50504:	add	sp, sp, #0x90
   50508:	ret
   5050c:	mov	x0, x20
   50510:	mov	w1, w8
   50514:	mov	w2, w19
   50518:	bl	cb10 <mpfr_check_range@plt>
   5051c:	mov	w8, w0
   50520:	b	504e8 <mpfr_mul_d@@Base+0x10c>

0000000000050524 <mpfr_div_d@@Base>:
   50524:	sub	sp, sp, #0x90
   50528:	stp	x29, x30, [sp, #48]
   5052c:	stp	x28, x27, [sp, #64]
   50530:	stp	x26, x25, [sp, #80]
   50534:	stp	x24, x23, [sp, #96]
   50538:	stp	x22, x21, [sp, #112]
   5053c:	stp	x20, x19, [sp, #128]
   50540:	add	x29, sp, #0x30
   50544:	mov	w19, w2
   50548:	mov	x21, x1
   5054c:	mov	x20, x0
   50550:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50554:	ldr	x1, [x0, #2640]
   50558:	add	x0, x0, #0xa50
   5055c:	blr	x1
   50560:	mrs	x25, tpidr_el0
   50564:	ldr	w27, [x25, x0]
   50568:	mov	x22, x0
   5056c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50570:	ldr	x1, [x0, #2576]
   50574:	add	x0, x0, #0xa10
   50578:	blr	x1
   5057c:	ldr	x26, [x25, x0]
   50580:	mov	x23, x0
   50584:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50588:	ldr	x1, [x0, #2608]
   5058c:	add	x0, x0, #0xa30
   50590:	blr	x1
   50594:	ldr	x28, [x25, x0]
   50598:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   5059c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   505a0:	mov	x24, x0
   505a4:	mov	w10, #0x35                  	// #53
   505a8:	add	x11, sp, #0x8
   505ac:	str	x8, [x25, x23]
   505b0:	str	x9, [x25, x0]
   505b4:	mov	w8, #0x1                   	// #1
   505b8:	add	x0, sp, #0x10
   505bc:	mov	w1, w2
   505c0:	str	x10, [sp, #16]
   505c4:	str	x11, [sp, #40]
   505c8:	str	w8, [sp, #24]
   505cc:	bl	be90 <mpfr_set_d@plt>
   505d0:	add	x2, sp, #0x10
   505d4:	mov	x0, x20
   505d8:	mov	x1, x21
   505dc:	mov	w3, w19
   505e0:	str	wzr, [x25, x22]
   505e4:	bl	c610 <mpfr_div@plt>
   505e8:	ldr	w8, [x25, x22]
   505ec:	str	x26, [x25, x23]
   505f0:	str	x28, [x25, x24]
   505f4:	orr	w9, w8, w27
   505f8:	str	w9, [x25, x22]
   505fc:	ldr	x10, [x20, #16]
   50600:	mov	w8, w0
   50604:	cmp	x10, x28
   50608:	b.gt	50654 <mpfr_div_d@@Base+0x130>
   5060c:	cmp	x10, x26
   50610:	b.lt	50654 <mpfr_div_d@@Base+0x130>  // b.tstop
   50614:	cbz	w8, 50630 <mpfr_div_d@@Base+0x10c>
   50618:	orr	w9, w9, #0x8
   5061c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50620:	ldr	x1, [x0, #2640]
   50624:	add	x0, x0, #0xa50
   50628:	blr	x1
   5062c:	str	w9, [x25, x0]
   50630:	ldp	x20, x19, [sp, #128]
   50634:	ldp	x22, x21, [sp, #112]
   50638:	ldp	x24, x23, [sp, #96]
   5063c:	ldp	x26, x25, [sp, #80]
   50640:	ldp	x28, x27, [sp, #64]
   50644:	ldp	x29, x30, [sp, #48]
   50648:	mov	w0, w8
   5064c:	add	sp, sp, #0x90
   50650:	ret
   50654:	mov	x0, x20
   50658:	mov	w1, w8
   5065c:	mov	w2, w19
   50660:	bl	cb10 <mpfr_check_range@plt>
   50664:	mov	w8, w0
   50668:	b	50630 <mpfr_div_d@@Base+0x10c>

000000000005066c <mpfr_d_div@@Base>:
   5066c:	sub	sp, sp, #0x90
   50670:	stp	x29, x30, [sp, #48]
   50674:	stp	x28, x27, [sp, #64]
   50678:	stp	x26, x25, [sp, #80]
   5067c:	stp	x24, x23, [sp, #96]
   50680:	stp	x22, x21, [sp, #112]
   50684:	stp	x20, x19, [sp, #128]
   50688:	add	x29, sp, #0x30
   5068c:	mov	w19, w2
   50690:	mov	x21, x1
   50694:	mov	x20, x0
   50698:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5069c:	ldr	x1, [x0, #2640]
   506a0:	add	x0, x0, #0xa50
   506a4:	blr	x1
   506a8:	mrs	x25, tpidr_el0
   506ac:	ldr	w27, [x25, x0]
   506b0:	mov	x22, x0
   506b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   506b8:	ldr	x1, [x0, #2576]
   506bc:	add	x0, x0, #0xa10
   506c0:	blr	x1
   506c4:	ldr	x26, [x25, x0]
   506c8:	mov	x23, x0
   506cc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   506d0:	ldr	x1, [x0, #2608]
   506d4:	add	x0, x0, #0xa30
   506d8:	blr	x1
   506dc:	ldr	x28, [x25, x0]
   506e0:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   506e4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   506e8:	mov	x24, x0
   506ec:	mov	w10, #0x35                  	// #53
   506f0:	add	x11, sp, #0x8
   506f4:	str	x8, [x25, x23]
   506f8:	str	x9, [x25, x0]
   506fc:	mov	w8, #0x1                   	// #1
   50700:	add	x0, sp, #0x10
   50704:	mov	w1, w2
   50708:	str	x10, [sp, #16]
   5070c:	str	x11, [sp, #40]
   50710:	str	w8, [sp, #24]
   50714:	bl	be90 <mpfr_set_d@plt>
   50718:	add	x1, sp, #0x10
   5071c:	mov	x0, x20
   50720:	mov	x2, x21
   50724:	mov	w3, w19
   50728:	str	wzr, [x25, x22]
   5072c:	bl	c610 <mpfr_div@plt>
   50730:	ldr	w8, [x25, x22]
   50734:	str	x26, [x25, x23]
   50738:	str	x28, [x25, x24]
   5073c:	orr	w9, w8, w27
   50740:	str	w9, [x25, x22]
   50744:	ldr	x10, [x20, #16]
   50748:	mov	w8, w0
   5074c:	cmp	x10, x28
   50750:	b.gt	5079c <mpfr_d_div@@Base+0x130>
   50754:	cmp	x10, x26
   50758:	b.lt	5079c <mpfr_d_div@@Base+0x130>  // b.tstop
   5075c:	cbz	w8, 50778 <mpfr_d_div@@Base+0x10c>
   50760:	orr	w9, w9, #0x8
   50764:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50768:	ldr	x1, [x0, #2640]
   5076c:	add	x0, x0, #0xa50
   50770:	blr	x1
   50774:	str	w9, [x25, x0]
   50778:	ldp	x20, x19, [sp, #128]
   5077c:	ldp	x22, x21, [sp, #112]
   50780:	ldp	x24, x23, [sp, #96]
   50784:	ldp	x26, x25, [sp, #80]
   50788:	ldp	x28, x27, [sp, #64]
   5078c:	ldp	x29, x30, [sp, #48]
   50790:	mov	w0, w8
   50794:	add	sp, sp, #0x90
   50798:	ret
   5079c:	mov	x0, x20
   507a0:	mov	w1, w8
   507a4:	mov	w2, w19
   507a8:	bl	cb10 <mpfr_check_range@plt>
   507ac:	mov	w8, w0
   507b0:	b	50778 <mpfr_d_div@@Base+0x10c>

00000000000507b4 <mpfr_li2@@Base>:
   507b4:	sub	sp, sp, #0x140
   507b8:	stp	x29, x30, [sp, #224]
   507bc:	stp	x28, x27, [sp, #240]
   507c0:	stp	x26, x25, [sp, #256]
   507c4:	stp	x24, x23, [sp, #272]
   507c8:	stp	x22, x21, [sp, #288]
   507cc:	stp	x20, x19, [sp, #304]
   507d0:	ldr	x8, [x1, #16]
   507d4:	mov	x19, #0x4                   	// #4
   507d8:	movk	x19, #0x8000, lsl #48
   507dc:	mov	x21, x1
   507e0:	cmp	x8, x19
   507e4:	mov	x28, x0
   507e8:	add	x29, sp, #0xe0
   507ec:	b.lt	50d08 <mpfr_li2@@Base+0x554>  // b.tstop
   507f0:	ldr	w9, [x21, #8]
   507f4:	mov	w25, w2
   507f8:	cmp	w9, #0x1
   507fc:	b.lt	5082c <mpfr_li2@@Base+0x78>  // b.tstop
   50800:	tbz	x8, #63, 50848 <mpfr_li2@@Base+0x94>
   50804:	ldr	x9, [x28]
   50808:	mov	w10, #0x1                   	// #1
   5080c:	sub	x2, x10, x8
   50810:	add	x8, x9, #0x1
   50814:	cmp	x2, x8
   50818:	b.ls	50848 <mpfr_li2@@Base+0x94>  // b.plast
   5081c:	mov	w3, #0x1                   	// #1
   50820:	mov	x0, x28
   50824:	mov	x1, x21
   50828:	b	5157c <mpfr_li2@@Base+0xdc8>
   5082c:	tbz	x8, #63, 50848 <mpfr_li2@@Base+0x94>
   50830:	ldr	x9, [x28]
   50834:	mov	w10, #0x2                   	// #2
   50838:	sub	x2, x10, x8
   5083c:	add	x8, x9, #0x1
   50840:	cmp	x2, x8
   50844:	b.hi	51570 <mpfr_li2@@Base+0xdbc>  // b.pmore
   50848:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5084c:	ldr	x1, [x0, #2640]
   50850:	add	x0, x0, #0xa50
   50854:	blr	x1
   50858:	mrs	x11, tpidr_el0
   5085c:	ldr	w8, [x11, x0]
   50860:	str	w8, [sp, #36]
   50864:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50868:	ldr	x1, [x0, #2576]
   5086c:	add	x0, x0, #0xa10
   50870:	blr	x1
   50874:	ldr	x9, [x11, x0]
   50878:	mov	x8, x0
   5087c:	str	x9, [sp, #40]
   50880:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50884:	ldr	x1, [x0, #2608]
   50888:	add	x0, x0, #0xa30
   5088c:	blr	x1
   50890:	ldr	x9, [x11, x0]
   50894:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   50898:	str	x10, [x11, x0]
   5089c:	str	x11, [sp, #48]
   508a0:	str	x9, [sp, #24]
   508a4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   508a8:	str	x9, [x11, x8]
   508ac:	ldr	x26, [x28]
   508b0:	subs	x20, x26, #0x1
   508b4:	b.eq	50d54 <mpfr_li2@@Base+0x5a0>  // b.none
   508b8:	b.le	50d5c <mpfr_li2@@Base+0x5a8>
   508bc:	clz	x8, x20
   508c0:	mov	w9, #0x40                  	// #64
   508c4:	sub	x8, x9, x8
   508c8:	add	x8, x26, x8
   508cc:	mov	x0, x21
   508d0:	add	x22, x8, #0xd
   508d4:	bl	c700 <mpfr_sgn@plt>
   508d8:	cmp	w0, #0x1
   508dc:	b.lt	50b78 <mpfr_li2@@Base+0x3c4>  // b.tstop
   508e0:	mov	w1, #0x1                   	// #1
   508e4:	mov	x2, #0xffffffffffffffff    	// #-1
   508e8:	mov	x0, x21
   508ec:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   508f0:	cmp	w0, #0x0
   508f4:	b.gt	50b78 <mpfr_li2@@Base+0x3c4>
   508f8:	sub	x0, x29, #0x48
   508fc:	mov	x1, x22
   50900:	str	x28, [sp, #16]
   50904:	bl	ca60 <mpfr_init2@plt>
   50908:	sub	x0, x29, #0x28
   5090c:	mov	x1, x22
   50910:	bl	ca60 <mpfr_init2@plt>
   50914:	cmp	w25, #0x0
   50918:	mov	w28, w25
   5091c:	mov	w20, #0x40                  	// #64
   50920:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   50924:	cinc	x26, x26, eq  // eq = none
   50928:	mov	w24, #0x40                  	// #64
   5092c:	sub	x0, x29, #0x48
   50930:	mov	w1, #0x1                   	// #1
   50934:	mov	x2, x21
   50938:	mov	w3, wzr
   5093c:	bl	ca30 <mpfr_ui_sub@plt>
   50940:	sub	x0, x29, #0x48
   50944:	sub	x1, x29, #0x48
   50948:	mov	w2, #0x2                   	// #2
   5094c:	bl	c0d0 <mpfr_log@plt>
   50950:	ldur	x8, [x29, #-56]
   50954:	cmp	x8, x25
   50958:	b.eq	50a30 <mpfr_li2@@Base+0x27c>  // b.none
   5095c:	sub	x0, x29, #0x48
   50960:	sub	x1, x29, #0x48
   50964:	mov	w2, wzr
   50968:	bl	bdc0 <mpfr_neg@plt>
   5096c:	ldur	x23, [x29, #-56]
   50970:	sub	x0, x29, #0x28
   50974:	sub	x1, x29, #0x48
   50978:	mov	w2, #0x2                   	// #2
   5097c:	bl	52204 <mpfr_li2@@Base+0x1a50>
   50980:	cbz	w0, 50a88 <mpfr_li2@@Base+0x2d4>
   50984:	mov	w27, w0
   50988:	cmp	w0, #0x0
   5098c:	b.le	50a90 <mpfr_li2@@Base+0x2dc>
   50990:	sxtw	x8, w27
   50994:	clz	x8, x8
   50998:	sub	x27, x20, x8
   5099c:	sub	x0, x29, #0x48
   509a0:	sub	x1, x29, #0x48
   509a4:	mov	w2, #0x2                   	// #2
   509a8:	bl	c3f0 <mpfr_sqr@plt>
   509ac:	sub	x0, x29, #0x48
   509b0:	sub	x1, x29, #0x48
   509b4:	mov	w2, #0x2                   	// #2
   509b8:	mov	w3, #0x2                   	// #2
   509bc:	bl	c8f0 <mpfr_div_2ui@plt>
   509c0:	sub	x0, x29, #0x28
   509c4:	sub	x1, x29, #0x28
   509c8:	sub	x2, x29, #0x48
   509cc:	mov	w3, wzr
   509d0:	bl	bbc0 <mpfr_sub@plt>
   509d4:	mvn	x8, x23
   509d8:	ldur	x9, [x29, #-24]
   509dc:	and	x8, x8, x23, asr #63
   509e0:	cmp	x27, x8
   509e4:	csinc	x8, x8, x27, lt  // lt = tstop
   509e8:	cmp	x9, x19
   509ec:	sub	x8, x8, x9
   509f0:	b.lt	50a30 <mpfr_li2@@Base+0x27c>  // b.tstop
   509f4:	ldur	x9, [x29, #-40]
   509f8:	cmp	x8, #0x0
   509fc:	ldur	x0, [x29, #-16]
   50a00:	csinv	x8, x8, xzr, ge  // ge = tcont
   50a04:	sub	x10, x9, #0x1
   50a08:	add	x9, x9, #0x3e
   50a0c:	cmp	x10, #0x0
   50a10:	csel	x9, x9, x10, lt  // lt = tstop
   50a14:	sub	x8, x22, x8
   50a18:	asr	x9, x9, #6
   50a1c:	add	x1, x9, #0x1
   50a20:	sub	x2, x8, #0x2
   50a24:	mov	x3, x26
   50a28:	bl	c370 <mpfr_round_p@plt>
   50a2c:	cbnz	w0, 50aac <mpfr_li2@@Base+0x2f8>
   50a30:	sub	x8, x19, x22
   50a34:	sub	x8, x8, #0x105
   50a38:	cmp	x24, x8
   50a3c:	b.gt	50a6c <mpfr_li2@@Base+0x2b8>
   50a40:	add	x22, x22, x24
   50a44:	cmp	x22, #0x0
   50a48:	cinc	x8, x22, lt  // lt = tstop
   50a4c:	sub	x0, x29, #0x48
   50a50:	mov	x1, x22
   50a54:	asr	x24, x8, #1
   50a58:	bl	bf20 <mpfr_set_prec@plt>
   50a5c:	sub	x0, x29, #0x28
   50a60:	mov	x1, x22
   50a64:	bl	bf20 <mpfr_set_prec@plt>
   50a68:	b	5092c <mpfr_li2@@Base+0x178>
   50a6c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   50a70:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   50a74:	mov	w1, #0x12a                 	// #298
   50a78:	add	x0, x0, #0xa16
   50a7c:	add	x2, x2, #0x287
   50a80:	bl	cb20 <mpfr_assert_fail@plt>
   50a84:	b	50a40 <mpfr_li2@@Base+0x28c>
   50a88:	mov	x27, xzr
   50a8c:	b	5099c <mpfr_li2@@Base+0x1e8>
   50a90:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   50a94:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   50a98:	mov	w1, #0x11c                 	// #284
   50a9c:	add	x0, x0, #0xa16
   50aa0:	add	x2, x2, #0xa25
   50aa4:	bl	cb20 <mpfr_assert_fail@plt>
   50aa8:	b	50990 <mpfr_li2@@Base+0x1dc>
   50aac:	ldr	x20, [sp, #16]
   50ab0:	ldur	w3, [x29, #-32]
   50ab4:	sub	x1, x29, #0x28
   50ab8:	mov	w2, w28
   50abc:	mov	x0, x20
   50ac0:	bl	c690 <mpfr_set4@plt>
   50ac4:	mov	w23, w0
   50ac8:	sub	x0, x29, #0x48
   50acc:	bl	c0b0 <mpfr_clear@plt>
   50ad0:	sub	x0, x29, #0x28
   50ad4:	bl	c0b0 <mpfr_clear@plt>
   50ad8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50adc:	ldr	x1, [x0, #2640]
   50ae0:	add	x0, x0, #0xa50
   50ae4:	blr	x1
   50ae8:	ldr	x9, [sp, #48]
   50aec:	ldr	w10, [sp, #36]
   50af0:	str	w10, [x9, x0]
   50af4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50af8:	ldr	x1, [x0, #2576]
   50afc:	add	x0, x0, #0xa10
   50b00:	blr	x1
   50b04:	ldr	x11, [sp, #40]
   50b08:	str	x11, [x9, x0]
   50b0c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50b10:	ldr	x1, [x0, #2608]
   50b14:	add	x0, x0, #0xa30
   50b18:	blr	x1
   50b1c:	ldr	x12, [sp, #24]
   50b20:	str	x12, [x9, x0]
   50b24:	ldr	x8, [x20, #16]
   50b28:	cmp	x8, x12
   50b2c:	b.gt	50d78 <mpfr_li2@@Base+0x5c4>
   50b30:	cmp	x8, x11
   50b34:	b.lt	50d78 <mpfr_li2@@Base+0x5c4>  // b.tstop
   50b38:	cbz	w23, 50b54 <mpfr_li2@@Base+0x3a0>
   50b3c:	orr	w8, w10, #0x8
   50b40:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50b44:	ldr	x1, [x0, #2640]
   50b48:	add	x0, x0, #0xa50
   50b4c:	blr	x1
   50b50:	str	w8, [x9, x0]
   50b54:	mov	w0, w23
   50b58:	ldp	x20, x19, [sp, #304]
   50b5c:	ldp	x22, x21, [sp, #288]
   50b60:	ldp	x24, x23, [sp, #272]
   50b64:	ldp	x26, x25, [sp, #256]
   50b68:	ldp	x28, x27, [sp, #240]
   50b6c:	ldp	x29, x30, [sp, #224]
   50b70:	add	sp, sp, #0x140
   50b74:	ret
   50b78:	mov	w1, #0x1                   	// #1
   50b7c:	mov	x0, x21
   50b80:	mov	x2, xzr
   50b84:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   50b88:	cbz	w0, 50d90 <mpfr_li2@@Base+0x5dc>
   50b8c:	mov	w1, #0x2                   	// #2
   50b90:	mov	x0, x21
   50b94:	mov	x2, xzr
   50b98:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   50b9c:	tbnz	w0, #31, 50f00 <mpfr_li2@@Base+0x74c>
   50ba0:	mov	w1, #0x26                  	// #38
   50ba4:	mov	x0, x21
   50ba8:	mov	x2, xzr
   50bac:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   50bb0:	tbnz	w0, #31, 515e8 <mpfr_li2@@Base+0xe34>
   50bb4:	ldr	x20, [x28]
   50bb8:	mov	w1, #0x26                  	// #38
   50bbc:	mov	x0, x21
   50bc0:	mov	x2, xzr
   50bc4:	mov	x27, x28
   50bc8:	add	x24, x20, #0x14
   50bcc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   50bd0:	tbnz	w0, #31, 52174 <mpfr_li2@@Base+0x19c0>
   50bd4:	sub	x0, x29, #0x28
   50bd8:	mov	x1, x24
   50bdc:	bl	ca60 <mpfr_init2@plt>
   50be0:	sub	x0, x29, #0x48
   50be4:	mov	x1, x24
   50be8:	bl	ca60 <mpfr_init2@plt>
   50bec:	sub	x0, x29, #0x28
   50bf0:	mov	x1, x21
   50bf4:	mov	w2, wzr
   50bf8:	bl	c0d0 <mpfr_log@plt>
   50bfc:	sub	x0, x29, #0x28
   50c00:	sub	x1, x29, #0x28
   50c04:	mov	w2, wzr
   50c08:	bl	c3f0 <mpfr_sqr@plt>
   50c0c:	sub	x0, x29, #0x28
   50c10:	sub	x1, x29, #0x28
   50c14:	mov	w2, #0x1                   	// #1
   50c18:	mov	w3, wzr
   50c1c:	bl	c8f0 <mpfr_div_2ui@plt>
   50c20:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50c24:	ldr	x1, [x0, #2688]
   50c28:	add	x0, x0, #0xa80
   50c2c:	blr	x1
   50c30:	ldr	x8, [sp, #48]
   50c34:	mov	w2, wzr
   50c38:	add	x1, x8, x0
   50c3c:	sub	x0, x29, #0x48
   50c40:	bl	c380 <mpfr_cache@plt>
   50c44:	sub	x0, x29, #0x48
   50c48:	sub	x1, x29, #0x48
   50c4c:	mov	w2, wzr
   50c50:	bl	c3f0 <mpfr_sqr@plt>
   50c54:	sub	x0, x29, #0x48
   50c58:	sub	x1, x29, #0x48
   50c5c:	mov	w2, #0x3                   	// #3
   50c60:	mov	w3, wzr
   50c64:	bl	cc40 <mpfr_div_ui@plt>
   50c68:	ldur	x8, [x29, #-24]
   50c6c:	ldur	x9, [x29, #-56]
   50c70:	cmp	x8, x9
   50c74:	b.le	52190 <mpfr_li2@@Base+0x19dc>
   50c78:	sub	x0, x29, #0x28
   50c7c:	sub	x1, x29, #0x48
   50c80:	sub	x2, x29, #0x28
   50c84:	mov	w3, wzr
   50c88:	bl	bbc0 <mpfr_sub@plt>
   50c8c:	ldur	x8, [x29, #-24]
   50c90:	mov	w23, wzr
   50c94:	cmp	x8, x19
   50c98:	b.lt	51590 <mpfr_li2@@Base+0xddc>  // b.tstop
   50c9c:	ldr	x9, [x21, #16]
   50ca0:	sub	x8, x24, x8
   50ca4:	mov	x28, x27
   50ca8:	cmp	x9, x8
   50cac:	b.lt	515d4 <mpfr_li2@@Base+0xe20>  // b.tstop
   50cb0:	ldur	x8, [x29, #-40]
   50cb4:	ldr	x9, [x28]
   50cb8:	ldur	x0, [x29, #-16]
   50cbc:	add	x2, x20, #0x10
   50cc0:	sub	x10, x8, #0x1
   50cc4:	add	x8, x8, #0x3e
   50cc8:	cmp	x10, #0x0
   50ccc:	csel	x8, x8, x10, lt  // lt = tstop
   50cd0:	cmp	w25, #0x0
   50cd4:	asr	x8, x8, #6
   50cd8:	add	x1, x8, #0x1
   50cdc:	cinc	x3, x9, eq  // eq = none
   50ce0:	bl	c370 <mpfr_round_p@plt>
   50ce4:	cbz	w0, 515d0 <mpfr_li2@@Base+0xe1c>
   50ce8:	ldur	w3, [x29, #-32]
   50cec:	sub	x1, x29, #0x28
   50cf0:	mov	x0, x28
   50cf4:	mov	w2, w25
   50cf8:	bl	c690 <mpfr_set4@plt>
   50cfc:	cmp	w25, #0x5
   50d00:	csinc	w23, w0, wzr, ne  // ne = any
   50d04:	b	515d4 <mpfr_li2@@Base+0xe20>
   50d08:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   50d0c:	cmp	x8, x9
   50d10:	b.eq	511c0 <mpfr_li2@@Base+0xa0c>  // b.none
   50d14:	mov	x9, #0x2                   	// #2
   50d18:	movk	x9, #0x8000, lsl #48
   50d1c:	cmp	x8, x9
   50d20:	b.ne	511cc <mpfr_li2@@Base+0xa18>  // b.any
   50d24:	sub	x8, x19, #0x2
   50d28:	str	x8, [x28, #16]
   50d2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50d30:	ldr	x1, [x0, #2640]
   50d34:	add	x0, x0, #0xa50
   50d38:	blr	x1
   50d3c:	mrs	x8, tpidr_el0
   50d40:	ldr	w9, [x8, x0]
   50d44:	mov	w23, wzr
   50d48:	orr	w9, w9, #0x4
   50d4c:	str	w9, [x8, x0]
   50d50:	b	50b54 <mpfr_li2@@Base+0x3a0>
   50d54:	mov	x8, xzr
   50d58:	b	508c8 <mpfr_li2@@Base+0x114>
   50d5c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   50d60:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   50d64:	add	x0, x0, #0xa16
   50d68:	add	x2, x2, #0xa1c
   50d6c:	mov	w1, #0x106                 	// #262
   50d70:	bl	cb20 <mpfr_assert_fail@plt>
   50d74:	b	508bc <mpfr_li2@@Base+0x108>
   50d78:	mov	x0, x20
   50d7c:	mov	w1, w23
   50d80:	mov	w2, w28
   50d84:	bl	cb10 <mpfr_check_range@plt>
   50d88:	mov	w23, w0
   50d8c:	b	50b54 <mpfr_li2@@Base+0x3a0>
   50d90:	sub	x0, x29, #0x28
   50d94:	mov	x1, x22
   50d98:	bl	ca60 <mpfr_init2@plt>
   50d9c:	cmp	w25, #0x0
   50da0:	cinc	x23, x26, eq  // eq = none
   50da4:	ldr	x26, [sp, #48]
   50da8:	adrp	x21, 64000 <mpfr_bases@@Base+0x758>
   50dac:	adrp	x24, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   50db0:	mov	w20, #0x40                  	// #64
   50db4:	add	x21, x21, #0xa16
   50db8:	add	x24, x24, #0x287
   50dbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50dc0:	ldr	x1, [x0, #2688]
   50dc4:	add	x0, x0, #0xa80
   50dc8:	blr	x1
   50dcc:	add	x1, x26, x0
   50dd0:	sub	x0, x29, #0x28
   50dd4:	mov	w2, #0x2                   	// #2
   50dd8:	bl	c380 <mpfr_cache@plt>
   50ddc:	sub	x0, x29, #0x28
   50de0:	sub	x1, x29, #0x28
   50de4:	mov	w2, wzr
   50de8:	bl	c3f0 <mpfr_sqr@plt>
   50dec:	sub	x0, x29, #0x28
   50df0:	sub	x1, x29, #0x28
   50df4:	mov	w2, #0x6                   	// #6
   50df8:	mov	w3, wzr
   50dfc:	bl	cc40 <mpfr_div_ui@plt>
   50e00:	ldur	x8, [x29, #-24]
   50e04:	cmp	x8, x19
   50e08:	b.lt	50e3c <mpfr_li2@@Base+0x688>  // b.tstop
   50e0c:	ldur	x8, [x29, #-40]
   50e10:	ldur	x0, [x29, #-16]
   50e14:	sub	x2, x22, #0x4
   50e18:	mov	x3, x23
   50e1c:	sub	x9, x8, #0x1
   50e20:	add	x8, x8, #0x3e
   50e24:	cmp	x9, #0x0
   50e28:	csel	x8, x8, x9, lt  // lt = tstop
   50e2c:	asr	x8, x8, #6
   50e30:	add	x1, x8, #0x1
   50e34:	bl	c370 <mpfr_round_p@plt>
   50e38:	cbnz	w0, 50e80 <mpfr_li2@@Base+0x6cc>
   50e3c:	sub	x8, x19, x22
   50e40:	sub	x8, x8, #0x105
   50e44:	cmp	x20, x8
   50e48:	b.gt	50e6c <mpfr_li2@@Base+0x6b8>
   50e4c:	add	x22, x22, x20
   50e50:	cmp	x22, #0x0
   50e54:	cinc	x8, x22, lt  // lt = tstop
   50e58:	sub	x0, x29, #0x28
   50e5c:	mov	x1, x22
   50e60:	asr	x20, x8, #1
   50e64:	bl	bf20 <mpfr_set_prec@plt>
   50e68:	b	50dbc <mpfr_li2@@Base+0x608>
   50e6c:	mov	w1, #0x147                 	// #327
   50e70:	mov	x0, x21
   50e74:	mov	x2, x24
   50e78:	bl	cb20 <mpfr_assert_fail@plt>
   50e7c:	b	50e4c <mpfr_li2@@Base+0x698>
   50e80:	ldur	w3, [x29, #-32]
   50e84:	sub	x1, x29, #0x28
   50e88:	mov	x0, x28
   50e8c:	mov	w2, w25
   50e90:	bl	c690 <mpfr_set4@plt>
   50e94:	mov	w23, w0
   50e98:	sub	x0, x29, #0x28
   50e9c:	bl	c0b0 <mpfr_clear@plt>
   50ea0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50ea4:	ldr	x1, [x0, #2640]
   50ea8:	add	x0, x0, #0xa50
   50eac:	blr	x1
   50eb0:	ldr	w9, [sp, #36]
   50eb4:	str	w9, [x26, x0]
   50eb8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50ebc:	ldr	x1, [x0, #2576]
   50ec0:	add	x0, x0, #0xa10
   50ec4:	blr	x1
   50ec8:	ldr	x10, [sp, #40]
   50ecc:	str	x10, [x26, x0]
   50ed0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   50ed4:	ldr	x1, [x0, #2608]
   50ed8:	add	x0, x0, #0xa30
   50edc:	blr	x1
   50ee0:	ldr	x11, [sp, #24]
   50ee4:	str	x11, [x26, x0]
   50ee8:	ldr	x8, [x28, #16]
   50eec:	cmp	x8, x11
   50ef0:	b.gt	51954 <mpfr_li2@@Base+0x11a0>
   50ef4:	cmp	x8, x10
   50ef8:	b.ge	51274 <mpfr_li2@@Base+0xac0>  // b.tcont
   50efc:	b	51954 <mpfr_li2@@Base+0x11a0>
   50f00:	mov	w1, #0x1                   	// #1
   50f04:	mov	x0, x21
   50f08:	mov	x2, xzr
   50f0c:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   50f10:	cmp	w0, #0x1
   50f14:	str	w25, [sp, #12]
   50f18:	b.lt	51294 <mpfr_li2@@Base+0xae0>  // b.tstop
   50f1c:	sub	x0, x29, #0x28
   50f20:	mov	x1, x22
   50f24:	bl	ca60 <mpfr_init2@plt>
   50f28:	sub	x0, x29, #0x48
   50f2c:	mov	x1, x22
   50f30:	bl	ca60 <mpfr_init2@plt>
   50f34:	sub	x0, x29, #0x68
   50f38:	mov	x1, x22
   50f3c:	bl	ca60 <mpfr_init2@plt>
   50f40:	add	x0, sp, #0x58
   50f44:	mov	x1, x22
   50f48:	bl	ca60 <mpfr_init2@plt>
   50f4c:	cmp	w25, #0x0
   50f50:	mov	w25, #0x40                  	// #64
   50f54:	mov	w24, #0x1                   	// #1
   50f58:	cinc	x8, x26, eq  // eq = none
   50f5c:	mov	w23, #0x40                  	// #64
   50f60:	str	x8, [sp, #16]
   50f64:	sub	x0, x29, #0x68
   50f68:	mov	w2, #0x2                   	// #2
   50f6c:	mov	x1, x21
   50f70:	bl	c0d0 <mpfr_log@plt>
   50f74:	sub	x0, x29, #0x28
   50f78:	sub	x1, x29, #0x68
   50f7c:	mov	w2, wzr
   50f80:	bl	52204 <mpfr_li2@@Base+0x1a50>
   50f84:	ldur	x20, [x29, #-24]
   50f88:	mov	w27, w0
   50f8c:	sub	x0, x29, #0x48
   50f90:	sub	x1, x29, #0x68
   50f94:	mov	w2, wzr
   50f98:	bl	c3f0 <mpfr_sqr@plt>
   50f9c:	sub	x0, x29, #0x48
   50fa0:	sub	x1, x29, #0x48
   50fa4:	mov	w2, #0x2                   	// #2
   50fa8:	mov	w3, wzr
   50fac:	bl	c8f0 <mpfr_div_2ui@plt>
   50fb0:	sub	x0, x29, #0x28
   50fb4:	sub	x1, x29, #0x28
   50fb8:	sub	x2, x29, #0x48
   50fbc:	mov	w3, wzr
   50fc0:	bl	c1e0 <mpfr_add@plt>
   50fc4:	add	x0, sp, #0x58
   50fc8:	mov	w2, #0x1                   	// #1
   50fcc:	mov	x1, x21
   50fd0:	mov	w3, wzr
   50fd4:	bl	c520 <mpfr_sub_ui@plt>
   50fd8:	sub	x0, x29, #0x48
   50fdc:	add	x1, sp, #0x58
   50fe0:	mov	w2, #0x2                   	// #2
   50fe4:	bl	c0d0 <mpfr_log@plt>
   50fe8:	ldur	x26, [x29, #-56]
   50fec:	sub	x0, x29, #0x48
   50ff0:	sub	x1, x29, #0x68
   50ff4:	sub	x2, x29, #0x48
   50ff8:	mov	w3, wzr
   50ffc:	bl	bda0 <mpfr_mul@plt>
   51000:	sub	x0, x29, #0x28
   51004:	sub	x1, x29, #0x28
   51008:	sub	x2, x29, #0x48
   5100c:	mov	w3, wzr
   51010:	bl	bbc0 <mpfr_sub@plt>
   51014:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51018:	ldr	x1, [x0, #2688]
   5101c:	add	x0, x0, #0xa80
   51020:	blr	x1
   51024:	ldr	x8, [sp, #48]
   51028:	mov	w2, #0x2                   	// #2
   5102c:	add	x1, x8, x0
   51030:	sub	x0, x29, #0x48
   51034:	bl	c380 <mpfr_cache@plt>
   51038:	sub	x0, x29, #0x48
   5103c:	sub	x1, x29, #0x48
   51040:	mov	w2, wzr
   51044:	bl	c3f0 <mpfr_sqr@plt>
   51048:	sub	x0, x29, #0x48
   5104c:	sub	x1, x29, #0x48
   51050:	mov	w2, #0x6                   	// #6
   51054:	mov	w3, wzr
   51058:	bl	cc40 <mpfr_div_ui@plt>
   5105c:	sub	x0, x29, #0x28
   51060:	sub	x1, x29, #0x28
   51064:	sub	x2, x29, #0x48
   51068:	mov	w3, wzr
   5106c:	bl	c1e0 <mpfr_add@plt>
   51070:	cbz	w27, 51164 <mpfr_li2@@Base+0x9b0>
   51074:	cmp	w27, #0x0
   51078:	b.le	5116c <mpfr_li2@@Base+0x9b8>
   5107c:	sxtw	x8, w27
   51080:	clz	x8, x8
   51084:	sub	x8, x25, x8
   51088:	sub	x20, x24, x20
   5108c:	add	x9, x20, x8
   51090:	sub	x8, x24, x26
   51094:	ldr	x26, [sp, #48]
   51098:	cmp	x9, x8
   5109c:	b.le	510c4 <mpfr_li2@@Base+0x910>
   510a0:	cbz	w27, 510bc <mpfr_li2@@Base+0x908>
   510a4:	cmp	w27, #0x0
   510a8:	b.le	511a4 <mpfr_li2@@Base+0x9f0>
   510ac:	sxtw	x8, w27
   510b0:	clz	x8, x8
   510b4:	sub	x8, x25, x8
   510b8:	b	510c0 <mpfr_li2@@Base+0x90c>
   510bc:	mov	x8, xzr
   510c0:	add	x8, x20, x8
   510c4:	ldur	x9, [x29, #-24]
   510c8:	cmp	x9, x19
   510cc:	b.lt	51110 <mpfr_li2@@Base+0x95c>  // b.tstop
   510d0:	ldur	x9, [x29, #-40]
   510d4:	cmp	x8, #0x5
   510d8:	mov	w10, #0x5                   	// #5
   510dc:	csel	x8, x8, x10, gt
   510e0:	sub	x10, x9, #0x1
   510e4:	ldur	x0, [x29, #-16]
   510e8:	add	x9, x9, #0x3e
   510ec:	cmp	x10, #0x0
   510f0:	ldr	x3, [sp, #16]
   510f4:	csel	x9, x9, x10, lt  // lt = tstop
   510f8:	sub	x8, x22, x8
   510fc:	asr	x9, x9, #6
   51100:	add	x1, x9, #0x1
   51104:	sub	x2, x8, #0x2
   51108:	bl	c370 <mpfr_round_p@plt>
   5110c:	cbnz	w0, 511e4 <mpfr_li2@@Base+0xa30>
   51110:	sub	x8, x19, x22
   51114:	sub	x8, x8, #0x105
   51118:	cmp	x23, x8
   5111c:	b.gt	51188 <mpfr_li2@@Base+0x9d4>
   51120:	add	x22, x22, x23
   51124:	cmp	x22, #0x0
   51128:	cinc	x8, x22, lt  // lt = tstop
   5112c:	sub	x0, x29, #0x28
   51130:	mov	x1, x22
   51134:	asr	x23, x8, #1
   51138:	bl	bf20 <mpfr_set_prec@plt>
   5113c:	sub	x0, x29, #0x48
   51140:	mov	x1, x22
   51144:	bl	bf20 <mpfr_set_prec@plt>
   51148:	sub	x0, x29, #0x68
   5114c:	mov	x1, x22
   51150:	bl	bf20 <mpfr_set_prec@plt>
   51154:	add	x0, sp, #0x58
   51158:	mov	x1, x22
   5115c:	bl	bf20 <mpfr_set_prec@plt>
   51160:	b	50f64 <mpfr_li2@@Base+0x7b0>
   51164:	mov	x8, xzr
   51168:	b	51088 <mpfr_li2@@Base+0x8d4>
   5116c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51170:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   51174:	mov	w1, #0x1b8                 	// #440
   51178:	add	x0, x0, #0xa16
   5117c:	add	x2, x2, #0xa25
   51180:	bl	cb20 <mpfr_assert_fail@plt>
   51184:	b	5107c <mpfr_li2@@Base+0x8c8>
   51188:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   5118c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   51190:	mov	w1, #0x1bd                 	// #445
   51194:	add	x0, x0, #0xa16
   51198:	add	x2, x2, #0x287
   5119c:	bl	cb20 <mpfr_assert_fail@plt>
   511a0:	b	51120 <mpfr_li2@@Base+0x96c>
   511a4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   511a8:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   511ac:	mov	w1, #0x1b8                 	// #440
   511b0:	add	x0, x0, #0xa16
   511b4:	add	x2, x2, #0xa25
   511b8:	bl	cb20 <mpfr_assert_fail@plt>
   511bc:	b	510ac <mpfr_li2@@Base+0x8f8>
   511c0:	mov	w23, wzr
   511c4:	mov	w8, #0xffffffff            	// #-1
   511c8:	b	511d8 <mpfr_li2@@Base+0xa24>
   511cc:	ldr	w8, [x21, #8]
   511d0:	mov	w23, wzr
   511d4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   511d8:	str	w8, [x28, #8]
   511dc:	str	x9, [x28, #16]
   511e0:	b	50b54 <mpfr_li2@@Base+0x3a0>
   511e4:	ldr	w19, [sp, #12]
   511e8:	ldur	w3, [x29, #-32]
   511ec:	sub	x1, x29, #0x28
   511f0:	mov	x0, x28
   511f4:	mov	w2, w19
   511f8:	bl	c690 <mpfr_set4@plt>
   511fc:	mov	w23, w0
   51200:	sub	x0, x29, #0x28
   51204:	sub	x1, x29, #0x48
   51208:	sub	x2, x29, #0x68
   5120c:	add	x3, sp, #0x58
   51210:	mov	x4, xzr
   51214:	bl	c1f0 <mpfr_clears@plt>
   51218:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5121c:	ldr	x1, [x0, #2640]
   51220:	add	x0, x0, #0xa50
   51224:	blr	x1
   51228:	ldr	w9, [sp, #36]
   5122c:	str	w9, [x26, x0]
   51230:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51234:	ldr	x1, [x0, #2576]
   51238:	add	x0, x0, #0xa10
   5123c:	blr	x1
   51240:	ldr	x10, [sp, #40]
   51244:	str	x10, [x26, x0]
   51248:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5124c:	ldr	x1, [x0, #2608]
   51250:	add	x0, x0, #0xa30
   51254:	blr	x1
   51258:	ldr	x11, [sp, #24]
   5125c:	str	x11, [x26, x0]
   51260:	ldr	x8, [x28, #16]
   51264:	cmp	x8, x11
   51268:	b.gt	521ac <mpfr_li2@@Base+0x19f8>
   5126c:	cmp	x8, x10
   51270:	b.lt	521ac <mpfr_li2@@Base+0x19f8>  // b.tstop
   51274:	cbz	w23, 50b54 <mpfr_li2@@Base+0x3a0>
   51278:	orr	w8, w9, #0x8
   5127c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51280:	ldr	x1, [x0, #2640]
   51284:	add	x0, x0, #0xa50
   51288:	blr	x1
   5128c:	str	w8, [x26, x0]
   51290:	b	50b54 <mpfr_li2@@Base+0x3a0>
   51294:	mov	w1, #0x1                   	// #1
   51298:	mov	x2, #0xffffffffffffffff    	// #-1
   5129c:	mov	x0, x21
   512a0:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   512a4:	cmp	w0, #0x1
   512a8:	b.lt	51964 <mpfr_li2@@Base+0x11b0>  // b.tstop
   512ac:	sub	x0, x29, #0x28
   512b0:	mov	x1, x22
   512b4:	bl	ca60 <mpfr_init2@plt>
   512b8:	sub	x0, x29, #0x48
   512bc:	mov	x1, x22
   512c0:	bl	ca60 <mpfr_init2@plt>
   512c4:	sub	x0, x29, #0x68
   512c8:	mov	x1, x22
   512cc:	bl	ca60 <mpfr_init2@plt>
   512d0:	add	x0, sp, #0x58
   512d4:	mov	x1, x22
   512d8:	bl	ca60 <mpfr_init2@plt>
   512dc:	cmp	w25, #0x0
   512e0:	mov	w25, #0x3                   	// #3
   512e4:	mov	w23, #0x1                   	// #1
   512e8:	cinc	x26, x26, eq  // eq = none
   512ec:	mov	w24, #0x40                  	// #64
   512f0:	sub	x0, x29, #0x48
   512f4:	mov	w2, #0x3                   	// #3
   512f8:	mov	x1, x21
   512fc:	bl	c0d0 <mpfr_log@plt>
   51300:	sub	x0, x29, #0x48
   51304:	sub	x1, x29, #0x48
   51308:	mov	w2, wzr
   5130c:	bl	bdc0 <mpfr_neg@plt>
   51310:	sub	x0, x29, #0x28
   51314:	sub	x1, x29, #0x48
   51318:	mov	w2, wzr
   5131c:	bl	52204 <mpfr_li2@@Base+0x1a50>
   51320:	mov	w27, w0
   51324:	sub	x0, x29, #0x28
   51328:	sub	x1, x29, #0x28
   5132c:	mov	w2, wzr
   51330:	bl	bdc0 <mpfr_neg@plt>
   51334:	cbz	w27, 51530 <mpfr_li2@@Base+0xd7c>
   51338:	cmp	w27, #0x0
   5133c:	b.le	51538 <mpfr_li2@@Base+0xd84>
   51340:	sxtw	x8, w27
   51344:	clz	x8, x8
   51348:	mov	w9, #0x40                  	// #64
   5134c:	sub	x8, x9, x8
   51350:	ldur	x9, [x29, #-24]
   51354:	add	x0, sp, #0x58
   51358:	mov	w1, #0x1                   	// #1
   5135c:	mov	x2, x21
   51360:	sub	x20, x8, x9
   51364:	mov	w3, wzr
   51368:	add	x27, x20, #0x1
   5136c:	bl	ca30 <mpfr_ui_sub@plt>
   51370:	sub	x0, x29, #0x68
   51374:	add	x1, sp, #0x58
   51378:	mov	w2, #0x2                   	// #2
   5137c:	bl	c0d0 <mpfr_log@plt>
   51380:	sub	x0, x29, #0x68
   51384:	sub	x1, x29, #0x68
   51388:	sub	x2, x29, #0x48
   5138c:	mov	w3, wzr
   51390:	bl	bda0 <mpfr_mul@plt>
   51394:	sub	x0, x29, #0x28
   51398:	sub	x1, x29, #0x28
   5139c:	sub	x2, x29, #0x68
   513a0:	mov	w3, wzr
   513a4:	bl	c1e0 <mpfr_add@plt>
   513a8:	ldur	x8, [x29, #-88]
   513ac:	ldur	x9, [x29, #-24]
   513b0:	sub	x0, x29, #0x48
   513b4:	sub	x1, x29, #0x48
   513b8:	sub	x8, x23, x8
   513bc:	cmp	x27, x8
   513c0:	csinc	x8, x8, x20, le
   513c4:	cmp	x8, #0x3
   513c8:	csel	x8, x8, x25, gt
   513cc:	sub	x8, x8, x9
   513d0:	mov	w2, wzr
   513d4:	add	x20, x8, #0x2
   513d8:	bl	c3f0 <mpfr_sqr@plt>
   513dc:	sub	x0, x29, #0x48
   513e0:	sub	x1, x29, #0x48
   513e4:	mov	w2, #0x2                   	// #2
   513e8:	mov	w3, wzr
   513ec:	bl	c8f0 <mpfr_div_2ui@plt>
   513f0:	sub	x0, x29, #0x28
   513f4:	sub	x1, x29, #0x28
   513f8:	sub	x2, x29, #0x48
   513fc:	mov	w3, wzr
   51400:	bl	c1e0 <mpfr_add@plt>
   51404:	ldur	x8, [x29, #-56]
   51408:	ldur	x9, [x29, #-24]
   5140c:	add	x8, x8, #0x2
   51410:	cmp	x20, x8
   51414:	csel	x8, x20, x8, gt
   51418:	sub	x8, x8, x9
   5141c:	cmp	x8, #0x0
   51420:	csinv	x8, x8, xzr, ge  // ge = tcont
   51424:	add	x8, x9, x8
   51428:	add	x20, x8, #0x2
   5142c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51430:	ldr	x1, [x0, #2688]
   51434:	add	x0, x0, #0xa80
   51438:	blr	x1
   5143c:	ldr	x8, [sp, #48]
   51440:	mov	w2, #0x2                   	// #2
   51444:	add	x1, x8, x0
   51448:	sub	x0, x29, #0x48
   5144c:	bl	c380 <mpfr_cache@plt>
   51450:	sub	x0, x29, #0x48
   51454:	sub	x1, x29, #0x48
   51458:	mov	w2, wzr
   5145c:	bl	c3f0 <mpfr_sqr@plt>
   51460:	sub	x0, x29, #0x48
   51464:	sub	x1, x29, #0x48
   51468:	mov	w2, #0x6                   	// #6
   5146c:	mov	w3, wzr
   51470:	bl	cc40 <mpfr_div_ui@plt>
   51474:	sub	x0, x29, #0x28
   51478:	sub	x1, x29, #0x28
   5147c:	sub	x2, x29, #0x48
   51480:	mov	w3, wzr
   51484:	bl	c1e0 <mpfr_add@plt>
   51488:	ldur	x8, [x29, #-24]
   5148c:	cmp	x20, #0x3
   51490:	csel	x9, x20, x25, gt
   51494:	cmp	x8, x19
   51498:	sub	x8, x9, x8
   5149c:	b.lt	514dc <mpfr_li2@@Base+0xd28>  // b.tstop
   514a0:	ldur	x9, [x29, #-40]
   514a4:	cmp	x8, #0x0
   514a8:	ldur	x0, [x29, #-16]
   514ac:	csinv	x8, x8, xzr, ge  // ge = tcont
   514b0:	sub	x10, x9, #0x1
   514b4:	add	x9, x9, #0x3e
   514b8:	cmp	x10, #0x0
   514bc:	csel	x9, x9, x10, lt  // lt = tstop
   514c0:	sub	x8, x22, x8
   514c4:	asr	x9, x9, #6
   514c8:	add	x1, x9, #0x1
   514cc:	sub	x2, x8, #0x2
   514d0:	mov	x3, x26
   514d4:	bl	c370 <mpfr_round_p@plt>
   514d8:	cbnz	w0, 51598 <mpfr_li2@@Base+0xde4>
   514dc:	sub	x8, x19, x22
   514e0:	sub	x8, x8, #0x105
   514e4:	cmp	x24, x8
   514e8:	b.gt	51554 <mpfr_li2@@Base+0xda0>
   514ec:	add	x22, x22, x24
   514f0:	cmp	x22, #0x0
   514f4:	cinc	x8, x22, lt  // lt = tstop
   514f8:	sub	x0, x29, #0x28
   514fc:	mov	x1, x22
   51500:	asr	x24, x8, #1
   51504:	bl	bf20 <mpfr_set_prec@plt>
   51508:	sub	x0, x29, #0x48
   5150c:	mov	x1, x22
   51510:	bl	bf20 <mpfr_set_prec@plt>
   51514:	sub	x0, x29, #0x68
   51518:	mov	x1, x22
   5151c:	bl	bf20 <mpfr_set_prec@plt>
   51520:	add	x0, sp, #0x58
   51524:	mov	x1, x22
   51528:	bl	bf20 <mpfr_set_prec@plt>
   5152c:	b	512f0 <mpfr_li2@@Base+0xb3c>
   51530:	mov	x8, xzr
   51534:	b	51350 <mpfr_li2@@Base+0xb9c>
   51538:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   5153c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   51540:	mov	w1, #0x1dc                 	// #476
   51544:	add	x0, x0, #0xa16
   51548:	add	x2, x2, #0xa25
   5154c:	bl	cb20 <mpfr_assert_fail@plt>
   51550:	b	51340 <mpfr_li2@@Base+0xb8c>
   51554:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51558:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   5155c:	mov	w1, #0x1f5                 	// #501
   51560:	add	x0, x0, #0xa16
   51564:	add	x2, x2, #0x287
   51568:	bl	cb20 <mpfr_assert_fail@plt>
   5156c:	b	514ec <mpfr_li2@@Base+0xd38>
   51570:	mov	x0, x28
   51574:	mov	x1, x21
   51578:	mov	w3, wzr
   5157c:	mov	w4, w25
   51580:	bl	c530 <mpfr_round_near_x@plt>
   51584:	mov	w23, w0
   51588:	cbnz	w0, 50b54 <mpfr_li2@@Base+0x3a0>
   5158c:	b	50848 <mpfr_li2@@Base+0x94>
   51590:	mov	x28, x27
   51594:	b	515d4 <mpfr_li2@@Base+0xe20>
   51598:	ldur	w3, [x29, #-32]
   5159c:	ldr	w2, [sp, #12]
   515a0:	sub	x1, x29, #0x28
   515a4:	mov	x0, x28
   515a8:	mov	x19, x28
   515ac:	bl	c690 <mpfr_set4@plt>
   515b0:	mov	w23, w0
   515b4:	sub	x0, x29, #0x28
   515b8:	sub	x1, x29, #0x48
   515bc:	sub	x2, x29, #0x68
   515c0:	add	x3, sp, #0x58
   515c4:	mov	x4, xzr
   515c8:	bl	c1f0 <mpfr_clears@plt>
   515cc:	b	520ec <mpfr_li2@@Base+0x1938>
   515d0:	mov	w23, wzr
   515d4:	sub	x0, x29, #0x28
   515d8:	bl	c0b0 <mpfr_clear@plt>
   515dc:	sub	x0, x29, #0x48
   515e0:	bl	c0b0 <mpfr_clear@plt>
   515e4:	cbnz	w23, 518f4 <mpfr_li2@@Base+0x1140>
   515e8:	sub	x0, x29, #0x48
   515ec:	mov	x1, x22
   515f0:	bl	ca60 <mpfr_init2@plt>
   515f4:	sub	x0, x29, #0x28
   515f8:	mov	x1, x22
   515fc:	bl	ca60 <mpfr_init2@plt>
   51600:	sub	x0, x29, #0x68
   51604:	mov	x1, x22
   51608:	bl	ca60 <mpfr_init2@plt>
   5160c:	cmp	w25, #0x0
   51610:	str	w25, [sp, #12]
   51614:	mov	w23, #0x2                   	// #2
   51618:	mov	w24, #0x4                   	// #4
   5161c:	cinc	x26, x26, eq  // eq = none
   51620:	mov	w25, #0x40                  	// #64
   51624:	sub	x0, x29, #0x68
   51628:	mov	w1, #0x1                   	// #1
   5162c:	mov	x2, x21
   51630:	mov	w3, wzr
   51634:	bl	c2f0 <mpfr_ui_div@plt>
   51638:	sub	x0, x29, #0x68
   5163c:	sub	x1, x29, #0x68
   51640:	mov	w2, wzr
   51644:	bl	bdc0 <mpfr_neg@plt>
   51648:	sub	x0, x29, #0x48
   5164c:	sub	x1, x29, #0x68
   51650:	mov	w2, #0x3                   	// #3
   51654:	bl	c6f0 <mpfr_log1p@plt>
   51658:	sub	x0, x29, #0x48
   5165c:	sub	x1, x29, #0x48
   51660:	mov	w2, #0x2                   	// #2
   51664:	bl	bdc0 <mpfr_neg@plt>
   51668:	ldur	x20, [x29, #-56]
   5166c:	sub	x0, x29, #0x28
   51670:	sub	x1, x29, #0x48
   51674:	mov	w2, wzr
   51678:	bl	52204 <mpfr_li2@@Base+0x1a50>
   5167c:	mov	w27, w0
   51680:	sub	x0, x29, #0x28
   51684:	sub	x1, x29, #0x28
   51688:	mov	w2, wzr
   5168c:	bl	bdc0 <mpfr_neg@plt>
   51690:	cbz	w27, 51884 <mpfr_li2@@Base+0x10d0>
   51694:	cmp	w27, #0x0
   51698:	b.le	5188c <mpfr_li2@@Base+0x10d8>
   5169c:	sxtw	x8, w27
   516a0:	clz	x8, x8
   516a4:	mov	w9, #0x40                  	// #64
   516a8:	sub	x27, x9, x8
   516ac:	sub	x0, x29, #0x48
   516b0:	sub	x1, x29, #0x48
   516b4:	mov	w2, wzr
   516b8:	bl	c3f0 <mpfr_sqr@plt>
   516bc:	sub	x0, x29, #0x48
   516c0:	sub	x1, x29, #0x48
   516c4:	mov	w2, #0x2                   	// #2
   516c8:	mov	w3, wzr
   516cc:	bl	c8f0 <mpfr_div_2ui@plt>
   516d0:	sub	x0, x29, #0x28
   516d4:	sub	x1, x29, #0x28
   516d8:	sub	x2, x29, #0x48
   516dc:	mov	w3, wzr
   516e0:	bl	c1e0 <mpfr_add@plt>
   516e4:	ldur	x9, [x29, #-56]
   516e8:	mov	w8, #0x3                   	// #3
   516ec:	sub	x8, x8, x20
   516f0:	cmp	x20, #0x0
   516f4:	csel	x8, x24, x8, ge  // ge = tcont
   516f8:	ldur	x10, [x29, #-24]
   516fc:	add	x8, x9, x8
   51700:	cmp	x27, x8
   51704:	csinc	x8, x8, x27, lt  // lt = tstop
   51708:	sub	x8, x8, x10
   5170c:	cmp	x8, #0x0
   51710:	csinv	x8, x8, xzr, ge  // ge = tcont
   51714:	add	x8, x10, x8
   51718:	sub	x0, x29, #0x48
   5171c:	mov	w2, #0x2                   	// #2
   51720:	mov	x1, x21
   51724:	add	x20, x8, #0x2
   51728:	bl	c0d0 <mpfr_log@plt>
   5172c:	sub	x0, x29, #0x48
   51730:	sub	x1, x29, #0x48
   51734:	mov	w2, wzr
   51738:	bl	c3f0 <mpfr_sqr@plt>
   5173c:	sub	x0, x29, #0x48
   51740:	sub	x1, x29, #0x48
   51744:	mov	w2, #0x1                   	// #1
   51748:	mov	w3, wzr
   5174c:	bl	c8f0 <mpfr_div_2ui@plt>
   51750:	sub	x0, x29, #0x28
   51754:	sub	x1, x29, #0x28
   51758:	sub	x2, x29, #0x48
   5175c:	mov	w3, wzr
   51760:	bl	bbc0 <mpfr_sub@plt>
   51764:	ldur	x8, [x29, #-56]
   51768:	ldur	x9, [x29, #-24]
   5176c:	add	x8, x8, #0x3
   51770:	cmp	x20, x8
   51774:	csel	x8, x20, x8, gt
   51778:	sub	x8, x8, x9
   5177c:	cmp	x8, #0x0
   51780:	csinv	x8, x8, xzr, ge  // ge = tcont
   51784:	add	x8, x9, x8
   51788:	add	x20, x8, #0x2
   5178c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51790:	ldr	x1, [x0, #2688]
   51794:	add	x0, x0, #0xa80
   51798:	blr	x1
   5179c:	ldr	x8, [sp, #48]
   517a0:	mov	w2, #0x2                   	// #2
   517a4:	add	x1, x8, x0
   517a8:	sub	x0, x29, #0x48
   517ac:	bl	c380 <mpfr_cache@plt>
   517b0:	sub	x0, x29, #0x48
   517b4:	sub	x1, x29, #0x48
   517b8:	mov	w2, wzr
   517bc:	bl	c3f0 <mpfr_sqr@plt>
   517c0:	sub	x0, x29, #0x48
   517c4:	sub	x1, x29, #0x48
   517c8:	mov	w2, #0x3                   	// #3
   517cc:	mov	w3, wzr
   517d0:	bl	cc40 <mpfr_div_ui@plt>
   517d4:	sub	x0, x29, #0x28
   517d8:	sub	x1, x29, #0x28
   517dc:	sub	x2, x29, #0x48
   517e0:	mov	w3, wzr
   517e4:	bl	c1e0 <mpfr_add@plt>
   517e8:	ldur	x8, [x29, #-24]
   517ec:	cmp	x20, #0x2
   517f0:	csel	x9, x20, x23, gt
   517f4:	cmp	x8, x19
   517f8:	sub	x8, x9, x8
   517fc:	b.lt	5183c <mpfr_li2@@Base+0x1088>  // b.tstop
   51800:	ldur	x9, [x29, #-40]
   51804:	cmp	x8, #0x0
   51808:	ldur	x0, [x29, #-16]
   5180c:	csinv	x8, x8, xzr, ge  // ge = tcont
   51810:	sub	x10, x9, #0x1
   51814:	add	x9, x9, #0x3e
   51818:	cmp	x10, #0x0
   5181c:	csel	x9, x9, x10, lt  // lt = tstop
   51820:	sub	x8, x22, x8
   51824:	asr	x9, x9, #6
   51828:	add	x1, x9, #0x1
   5182c:	sub	x2, x8, #0x2
   51830:	mov	x3, x26
   51834:	bl	c370 <mpfr_round_p@plt>
   51838:	cbnz	w0, 518c4 <mpfr_li2@@Base+0x1110>
   5183c:	sub	x8, x19, x22
   51840:	sub	x8, x8, #0x105
   51844:	cmp	x25, x8
   51848:	b.gt	518a8 <mpfr_li2@@Base+0x10f4>
   5184c:	add	x22, x22, x25
   51850:	cmp	x22, #0x0
   51854:	cinc	x8, x22, lt  // lt = tstop
   51858:	sub	x0, x29, #0x48
   5185c:	mov	x1, x22
   51860:	asr	x25, x8, #1
   51864:	bl	bf20 <mpfr_set_prec@plt>
   51868:	sub	x0, x29, #0x28
   5186c:	mov	x1, x22
   51870:	bl	bf20 <mpfr_set_prec@plt>
   51874:	sub	x0, x29, #0x68
   51878:	mov	x1, x22
   5187c:	bl	bf20 <mpfr_set_prec@plt>
   51880:	b	51624 <mpfr_li2@@Base+0xe70>
   51884:	mov	x27, xzr
   51888:	b	516ac <mpfr_li2@@Base+0xef8>
   5188c:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51890:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   51894:	mov	w1, #0x16d                 	// #365
   51898:	add	x0, x0, #0xa16
   5189c:	add	x2, x2, #0xa25
   518a0:	bl	cb20 <mpfr_assert_fail@plt>
   518a4:	b	5169c <mpfr_li2@@Base+0xee8>
   518a8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   518ac:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   518b0:	mov	w1, #0x189                 	// #393
   518b4:	add	x0, x0, #0xa16
   518b8:	add	x2, x2, #0x287
   518bc:	bl	cb20 <mpfr_assert_fail@plt>
   518c0:	b	5184c <mpfr_li2@@Base+0x1098>
   518c4:	ldr	w25, [sp, #12]
   518c8:	ldur	w3, [x29, #-32]
   518cc:	sub	x1, x29, #0x28
   518d0:	mov	x0, x28
   518d4:	mov	w2, w25
   518d8:	bl	c690 <mpfr_set4@plt>
   518dc:	mov	w23, w0
   518e0:	sub	x0, x29, #0x28
   518e4:	sub	x1, x29, #0x48
   518e8:	sub	x2, x29, #0x68
   518ec:	mov	x3, xzr
   518f0:	bl	c1f0 <mpfr_clears@plt>
   518f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   518f8:	ldr	x1, [x0, #2640]
   518fc:	add	x0, x0, #0xa50
   51900:	blr	x1
   51904:	ldr	x9, [sp, #48]
   51908:	ldr	w10, [sp, #36]
   5190c:	str	w10, [x9, x0]
   51910:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51914:	ldr	x1, [x0, #2576]
   51918:	add	x0, x0, #0xa10
   5191c:	blr	x1
   51920:	ldr	x11, [sp, #40]
   51924:	str	x11, [x9, x0]
   51928:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5192c:	ldr	x1, [x0, #2608]
   51930:	add	x0, x0, #0xa30
   51934:	blr	x1
   51938:	ldr	x12, [sp, #24]
   5193c:	str	x12, [x9, x0]
   51940:	ldr	x8, [x28, #16]
   51944:	cmp	x8, x12
   51948:	b.gt	51954 <mpfr_li2@@Base+0x11a0>
   5194c:	cmp	x8, x11
   51950:	b.ge	50b38 <mpfr_li2@@Base+0x384>  // b.tcont
   51954:	mov	x0, x28
   51958:	mov	w1, w23
   5195c:	mov	w2, w25
   51960:	b	50d84 <mpfr_li2@@Base+0x5d0>
   51964:	mov	x1, #0xffffffffffffffff    	// #-1
   51968:	mov	x0, x21
   5196c:	mov	x2, xzr
   51970:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   51974:	tbnz	w0, #31, 51b68 <mpfr_li2@@Base+0x13b4>
   51978:	sub	x0, x29, #0x28
   5197c:	mov	x1, x22
   51980:	bl	ca60 <mpfr_init2@plt>
   51984:	sub	x0, x29, #0x48
   51988:	mov	x1, x22
   5198c:	bl	ca60 <mpfr_init2@plt>
   51990:	sub	x0, x29, #0x68
   51994:	mov	x1, x22
   51998:	bl	ca60 <mpfr_init2@plt>
   5199c:	ldr	w8, [sp, #12]
   519a0:	mov	w20, #0x40                  	// #64
   519a4:	mov	w25, #0x40                  	// #64
   519a8:	cmp	w8, #0x0
   519ac:	cinc	x26, x26, eq  // eq = none
   519b0:	sub	x0, x29, #0x68
   519b4:	mov	x1, x21
   519b8:	mov	w2, wzr
   519bc:	bl	bdc0 <mpfr_neg@plt>
   519c0:	sub	x0, x29, #0x48
   519c4:	sub	x1, x29, #0x68
   519c8:	mov	w2, wzr
   519cc:	bl	c6f0 <mpfr_log1p@plt>
   519d0:	sub	x0, x29, #0x28
   519d4:	sub	x1, x29, #0x48
   519d8:	mov	w2, wzr
   519dc:	bl	52204 <mpfr_li2@@Base+0x1a50>
   519e0:	mov	w27, w0
   519e4:	sub	x0, x29, #0x28
   519e8:	sub	x1, x29, #0x28
   519ec:	mov	w2, wzr
   519f0:	bl	bdc0 <mpfr_neg@plt>
   519f4:	ldur	x23, [x29, #-56]
   519f8:	cbz	w27, 51af4 <mpfr_li2@@Base+0x1340>
   519fc:	cmp	w27, #0x0
   51a00:	b.le	51afc <mpfr_li2@@Base+0x1348>
   51a04:	sxtw	x8, w27
   51a08:	clz	x8, x8
   51a0c:	sub	x8, x20, x8
   51a10:	ldur	x9, [x29, #-24]
   51a14:	sub	x0, x29, #0x48
   51a18:	sub	x1, x29, #0x48
   51a1c:	mov	w2, wzr
   51a20:	sub	x27, x8, x9
   51a24:	add	x24, x27, #0x1
   51a28:	bl	c3f0 <mpfr_sqr@plt>
   51a2c:	sub	x0, x29, #0x48
   51a30:	sub	x1, x29, #0x48
   51a34:	mov	w2, #0x2                   	// #2
   51a38:	mov	w3, wzr
   51a3c:	bl	c8f0 <mpfr_div_2ui@plt>
   51a40:	sub	x0, x29, #0x28
   51a44:	sub	x1, x29, #0x28
   51a48:	sub	x2, x29, #0x48
   51a4c:	mov	w3, wzr
   51a50:	bl	bbc0 <mpfr_sub@plt>
   51a54:	ldur	x9, [x29, #-24]
   51a58:	neg	x8, x23
   51a5c:	cmp	x24, x8
   51a60:	csinc	x8, x8, x27, le
   51a64:	cmp	x9, x19
   51a68:	b.lt	51aac <mpfr_li2@@Base+0x12f8>  // b.tstop
   51a6c:	ldur	x9, [x29, #-40]
   51a70:	cmp	x8, #0x3
   51a74:	mov	w10, #0x3                   	// #3
   51a78:	csel	x8, x8, x10, gt
   51a7c:	sub	x10, x9, #0x1
   51a80:	ldur	x0, [x29, #-16]
   51a84:	add	x9, x9, #0x3e
   51a88:	cmp	x10, #0x0
   51a8c:	csel	x9, x9, x10, lt  // lt = tstop
   51a90:	sub	x8, x22, x8
   51a94:	asr	x9, x9, #6
   51a98:	add	x1, x9, #0x1
   51a9c:	sub	x2, x8, #0x2
   51aa0:	mov	x3, x26
   51aa4:	bl	c370 <mpfr_round_p@plt>
   51aa8:	cbnz	w0, 51b34 <mpfr_li2@@Base+0x1380>
   51aac:	sub	x8, x19, x22
   51ab0:	sub	x8, x8, #0x105
   51ab4:	cmp	x25, x8
   51ab8:	b.gt	51b18 <mpfr_li2@@Base+0x1364>
   51abc:	add	x22, x22, x25
   51ac0:	cmp	x22, #0x0
   51ac4:	cinc	x8, x22, lt  // lt = tstop
   51ac8:	sub	x0, x29, #0x28
   51acc:	mov	x1, x22
   51ad0:	asr	x25, x8, #1
   51ad4:	bl	bf20 <mpfr_set_prec@plt>
   51ad8:	sub	x0, x29, #0x48
   51adc:	mov	x1, x22
   51ae0:	bl	bf20 <mpfr_set_prec@plt>
   51ae4:	sub	x0, x29, #0x68
   51ae8:	mov	x1, x22
   51aec:	bl	bf20 <mpfr_set_prec@plt>
   51af0:	b	519b0 <mpfr_li2@@Base+0x11fc>
   51af4:	mov	x8, xzr
   51af8:	b	51a10 <mpfr_li2@@Base+0x125c>
   51afc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51b00:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   51b04:	mov	w1, #0x214                 	// #532
   51b08:	add	x0, x0, #0xa16
   51b0c:	add	x2, x2, #0xa25
   51b10:	bl	cb20 <mpfr_assert_fail@plt>
   51b14:	b	51a04 <mpfr_li2@@Base+0x1250>
   51b18:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51b1c:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   51b20:	mov	w1, #0x21e                 	// #542
   51b24:	add	x0, x0, #0xa16
   51b28:	add	x2, x2, #0x287
   51b2c:	bl	cb20 <mpfr_assert_fail@plt>
   51b30:	b	51abc <mpfr_li2@@Base+0x1308>
   51b34:	ldur	w3, [x29, #-32]
   51b38:	ldr	w2, [sp, #12]
   51b3c:	sub	x1, x29, #0x28
   51b40:	mov	x0, x28
   51b44:	mov	x19, x28
   51b48:	bl	c690 <mpfr_set4@plt>
   51b4c:	mov	w23, w0
   51b50:	sub	x0, x29, #0x28
   51b54:	sub	x1, x29, #0x48
   51b58:	sub	x2, x29, #0x68
   51b5c:	mov	x3, xzr
   51b60:	bl	c1f0 <mpfr_clears@plt>
   51b64:	b	520ec <mpfr_li2@@Base+0x1938>
   51b68:	mov	x1, #0xfffffffffffffff9    	// #-7
   51b6c:	mov	x0, x21
   51b70:	mov	x2, xzr
   51b74:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   51b78:	cmp	w0, #0x0
   51b7c:	b.le	51f6c <mpfr_li2@@Base+0x17b8>
   51b80:	sub	x0, x29, #0x28
   51b84:	mov	x1, x22
   51b88:	bl	ca60 <mpfr_init2@plt>
   51b8c:	sub	x0, x29, #0x48
   51b90:	mov	x1, x22
   51b94:	bl	ca60 <mpfr_init2@plt>
   51b98:	sub	x0, x29, #0x68
   51b9c:	mov	x1, x22
   51ba0:	bl	ca60 <mpfr_init2@plt>
   51ba4:	add	x0, sp, #0x58
   51ba8:	mov	x1, x22
   51bac:	bl	ca60 <mpfr_init2@plt>
   51bb0:	add	x0, sp, #0x38
   51bb4:	mov	x1, x22
   51bb8:	bl	ca60 <mpfr_init2@plt>
   51bbc:	ldr	w8, [sp, #12]
   51bc0:	mov	w24, #0x40                  	// #64
   51bc4:	mov	w25, #0x3                   	// #3
   51bc8:	mov	w23, #0x40                  	// #64
   51bcc:	cmp	w8, #0x0
   51bd0:	cinc	x26, x26, eq  // eq = none
   51bd4:	add	x0, sp, #0x38
   51bd8:	mov	w1, #0x1                   	// #1
   51bdc:	mov	x2, x21
   51be0:	mov	w3, wzr
   51be4:	bl	c2f0 <mpfr_ui_div@plt>
   51be8:	add	x0, sp, #0x38
   51bec:	add	x1, sp, #0x38
   51bf0:	mov	w2, wzr
   51bf4:	bl	bdc0 <mpfr_neg@plt>
   51bf8:	sub	x0, x29, #0x48
   51bfc:	add	x1, sp, #0x38
   51c00:	mov	w2, wzr
   51c04:	bl	c6f0 <mpfr_log1p@plt>
   51c08:	sub	x0, x29, #0x28
   51c0c:	sub	x1, x29, #0x48
   51c10:	mov	w2, wzr
   51c14:	bl	52204 <mpfr_li2@@Base+0x1a50>
   51c18:	mov	w27, w0
   51c1c:	add	x0, sp, #0x38
   51c20:	mov	w1, #0x1                   	// #1
   51c24:	mov	x2, x21
   51c28:	mov	w3, wzr
   51c2c:	bl	ca30 <mpfr_ui_sub@plt>
   51c30:	sub	x0, x29, #0x48
   51c34:	add	x1, sp, #0x38
   51c38:	mov	w2, #0x2                   	// #2
   51c3c:	bl	c0d0 <mpfr_log@plt>
   51c40:	add	x0, sp, #0x38
   51c44:	mov	x1, x21
   51c48:	mov	w2, wzr
   51c4c:	bl	bdc0 <mpfr_neg@plt>
   51c50:	sub	x0, x29, #0x68
   51c54:	add	x1, sp, #0x38
   51c58:	mov	w2, #0x2                   	// #2
   51c5c:	bl	c0d0 <mpfr_log@plt>
   51c60:	add	x0, sp, #0x58
   51c64:	sub	x1, x29, #0x68
   51c68:	sub	x2, x29, #0x48
   51c6c:	mov	w3, wzr
   51c70:	bl	bda0 <mpfr_mul@plt>
   51c74:	add	x0, sp, #0x58
   51c78:	add	x1, sp, #0x58
   51c7c:	mov	w2, #0x1                   	// #1
   51c80:	mov	w3, wzr
   51c84:	bl	c8f0 <mpfr_div_2ui@plt>
   51c88:	sub	x0, x29, #0x28
   51c8c:	sub	x1, x29, #0x28
   51c90:	add	x2, sp, #0x58
   51c94:	mov	w3, wzr
   51c98:	bl	bbc0 <mpfr_sub@plt>
   51c9c:	cbz	w27, 51ed4 <mpfr_li2@@Base+0x1720>
   51ca0:	cmp	w27, #0x0
   51ca4:	b.le	51edc <mpfr_li2@@Base+0x1728>
   51ca8:	sxtw	x8, w27
   51cac:	clz	x8, x8
   51cb0:	sub	x9, x24, x8
   51cb4:	ldur	x8, [x29, #-24]
   51cb8:	sub	x9, x9, x8
   51cbc:	add	x9, x9, #0x1
   51cc0:	cmp	x9, #0x3
   51cc4:	b.ge	51cd0 <mpfr_li2@@Base+0x151c>  // b.tcont
   51cc8:	mov	w9, #0x3                   	// #3
   51ccc:	b	51cf8 <mpfr_li2@@Base+0x1544>
   51cd0:	cbz	w27, 51cec <mpfr_li2@@Base+0x1538>
   51cd4:	cmp	w27, #0x0
   51cd8:	b.le	51f14 <mpfr_li2@@Base+0x1760>
   51cdc:	sxtw	x9, w27
   51ce0:	clz	x9, x9
   51ce4:	sub	x9, x24, x9
   51ce8:	b	51cf0 <mpfr_li2@@Base+0x153c>
   51cec:	mov	x9, xzr
   51cf0:	sub	x9, x9, x8
   51cf4:	add	x9, x9, #0x1
   51cf8:	add	x20, x9, x8
   51cfc:	add	x0, sp, #0x58
   51d00:	sub	x1, x29, #0x68
   51d04:	mov	w2, wzr
   51d08:	add	x27, x20, #0x1
   51d0c:	bl	c3f0 <mpfr_sqr@plt>
   51d10:	add	x0, sp, #0x58
   51d14:	add	x1, sp, #0x58
   51d18:	mov	w2, #0x2                   	// #2
   51d1c:	mov	w3, wzr
   51d20:	bl	c8f0 <mpfr_div_2ui@plt>
   51d24:	sub	x0, x29, #0x28
   51d28:	sub	x1, x29, #0x28
   51d2c:	add	x2, sp, #0x58
   51d30:	mov	w3, wzr
   51d34:	bl	bbc0 <mpfr_sub@plt>
   51d38:	ldr	x8, [sp, #104]
   51d3c:	ldur	x9, [x29, #-24]
   51d40:	add	x0, sp, #0x58
   51d44:	sub	x1, x29, #0x48
   51d48:	add	x8, x8, #0x3
   51d4c:	cmp	x27, x8
   51d50:	csinc	x8, x8, x20, le
   51d54:	sub	x8, x8, x9
   51d58:	cmp	x8, #0x0
   51d5c:	csinv	x8, x8, xzr, ge  // ge = tcont
   51d60:	add	x8, x9, x8
   51d64:	mov	w2, wzr
   51d68:	add	x20, x8, #0x2
   51d6c:	bl	c3f0 <mpfr_sqr@plt>
   51d70:	add	x0, sp, #0x58
   51d74:	add	x1, sp, #0x58
   51d78:	mov	w2, #0x2                   	// #2
   51d7c:	mov	w3, wzr
   51d80:	bl	c8f0 <mpfr_div_2ui@plt>
   51d84:	sub	x0, x29, #0x28
   51d88:	sub	x1, x29, #0x28
   51d8c:	add	x2, sp, #0x58
   51d90:	mov	w3, wzr
   51d94:	bl	c1e0 <mpfr_add@plt>
   51d98:	ldr	x8, [sp, #104]
   51d9c:	ldur	x9, [x29, #-24]
   51da0:	add	x8, x8, #0x3
   51da4:	cmp	x20, x8
   51da8:	csel	x8, x20, x8, gt
   51dac:	sub	x8, x8, x9
   51db0:	cmp	x8, #0x0
   51db4:	csinv	x8, x8, xzr, ge  // ge = tcont
   51db8:	add	x8, x9, x8
   51dbc:	add	x20, x8, #0x2
   51dc0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51dc4:	ldr	x1, [x0, #2688]
   51dc8:	add	x0, x0, #0xa80
   51dcc:	blr	x1
   51dd0:	ldr	x8, [sp, #48]
   51dd4:	mov	w2, #0x2                   	// #2
   51dd8:	add	x1, x8, x0
   51ddc:	add	x0, sp, #0x58
   51de0:	bl	c380 <mpfr_cache@plt>
   51de4:	add	x0, sp, #0x58
   51de8:	add	x1, sp, #0x58
   51dec:	mov	w2, wzr
   51df0:	bl	c3f0 <mpfr_sqr@plt>
   51df4:	add	x0, sp, #0x58
   51df8:	add	x1, sp, #0x58
   51dfc:	mov	w2, #0x6                   	// #6
   51e00:	mov	w3, wzr
   51e04:	bl	cc40 <mpfr_div_ui@plt>
   51e08:	sub	x0, x29, #0x28
   51e0c:	sub	x1, x29, #0x28
   51e10:	add	x2, sp, #0x58
   51e14:	mov	w3, wzr
   51e18:	bl	bbc0 <mpfr_sub@plt>
   51e1c:	ldur	x8, [x29, #-24]
   51e20:	cmp	x20, #0x3
   51e24:	csel	x9, x20, x25, gt
   51e28:	cmp	x8, x19
   51e2c:	sub	x9, x9, x8
   51e30:	b.lt	51e74 <mpfr_li2@@Base+0x16c0>  // b.tstop
   51e34:	ldur	x10, [x29, #-40]
   51e38:	cmp	x9, #0x0
   51e3c:	sub	x8, x22, x8
   51e40:	csinv	x9, x9, xzr, ge  // ge = tcont
   51e44:	sub	x8, x8, x9
   51e48:	sub	x9, x10, #0x1
   51e4c:	ldur	x0, [x29, #-16]
   51e50:	add	x10, x10, #0x3e
   51e54:	cmp	x9, #0x0
   51e58:	csel	x9, x10, x9, lt  // lt = tstop
   51e5c:	asr	x9, x9, #6
   51e60:	add	x1, x9, #0x1
   51e64:	sub	x2, x8, #0x2
   51e68:	mov	x3, x26
   51e6c:	bl	c370 <mpfr_round_p@plt>
   51e70:	cbnz	w0, 51f34 <mpfr_li2@@Base+0x1780>
   51e74:	sub	x8, x19, x22
   51e78:	sub	x8, x8, #0x105
   51e7c:	cmp	x23, x8
   51e80:	b.gt	51ef8 <mpfr_li2@@Base+0x1744>
   51e84:	add	x22, x22, x23
   51e88:	cmp	x22, #0x0
   51e8c:	cinc	x8, x22, lt  // lt = tstop
   51e90:	sub	x0, x29, #0x28
   51e94:	mov	x1, x22
   51e98:	asr	x23, x8, #1
   51e9c:	bl	bf20 <mpfr_set_prec@plt>
   51ea0:	sub	x0, x29, #0x48
   51ea4:	mov	x1, x22
   51ea8:	bl	bf20 <mpfr_set_prec@plt>
   51eac:	sub	x0, x29, #0x68
   51eb0:	mov	x1, x22
   51eb4:	bl	bf20 <mpfr_set_prec@plt>
   51eb8:	add	x0, sp, #0x58
   51ebc:	mov	x1, x22
   51ec0:	bl	bf20 <mpfr_set_prec@plt>
   51ec4:	add	x0, sp, #0x38
   51ec8:	mov	x1, x22
   51ecc:	bl	bf20 <mpfr_set_prec@plt>
   51ed0:	b	51bd4 <mpfr_li2@@Base+0x1420>
   51ed4:	mov	x9, xzr
   51ed8:	b	51cb4 <mpfr_li2@@Base+0x1500>
   51edc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51ee0:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   51ee4:	mov	w1, #0x24d                 	// #589
   51ee8:	add	x0, x0, #0xa16
   51eec:	add	x2, x2, #0xa31
   51ef0:	bl	cb20 <mpfr_assert_fail@plt>
   51ef4:	b	51ca8 <mpfr_li2@@Base+0x14f4>
   51ef8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51efc:	adrp	x2, 63000 <mpfr_l2b_62_1__tab@@Base+0x3a78>
   51f00:	mov	w1, #0x266                 	// #614
   51f04:	add	x0, x0, #0xa16
   51f08:	add	x2, x2, #0x287
   51f0c:	bl	cb20 <mpfr_assert_fail@plt>
   51f10:	b	51e84 <mpfr_li2@@Base+0x16d0>
   51f14:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   51f18:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   51f1c:	mov	w1, #0x24d                 	// #589
   51f20:	add	x0, x0, #0xa16
   51f24:	add	x2, x2, #0xa31
   51f28:	bl	cb20 <mpfr_assert_fail@plt>
   51f2c:	ldur	x8, [x29, #-24]
   51f30:	b	51cdc <mpfr_li2@@Base+0x1528>
   51f34:	ldur	w3, [x29, #-32]
   51f38:	ldr	w2, [sp, #12]
   51f3c:	sub	x1, x29, #0x28
   51f40:	mov	x0, x28
   51f44:	bl	c690 <mpfr_set4@plt>
   51f48:	mov	w23, w0
   51f4c:	sub	x0, x29, #0x28
   51f50:	sub	x1, x29, #0x48
   51f54:	sub	x2, x29, #0x68
   51f58:	add	x3, sp, #0x58
   51f5c:	add	x4, sp, #0x38
   51f60:	mov	x5, xzr
   51f64:	bl	c1f0 <mpfr_clears@plt>
   51f68:	b	520ec <mpfr_li2@@Base+0x1938>
   51f6c:	ldr	x20, [x28]
   51f70:	mov	x1, #0xfffffffffffffff9    	// #-7
   51f74:	mov	x0, x21
   51f78:	mov	x2, xzr
   51f7c:	add	x23, x20, #0x14
   51f80:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   51f84:	cmp	w0, #0x1
   51f88:	b.ge	521cc <mpfr_li2@@Base+0x1a18>  // b.tcont
   51f8c:	sub	x0, x29, #0x28
   51f90:	mov	x1, x23
   51f94:	bl	ca60 <mpfr_init2@plt>
   51f98:	sub	x0, x29, #0x48
   51f9c:	mov	x1, x23
   51fa0:	bl	ca60 <mpfr_init2@plt>
   51fa4:	sub	x0, x29, #0x28
   51fa8:	mov	x1, x21
   51fac:	mov	w2, wzr
   51fb0:	bl	bdc0 <mpfr_neg@plt>
   51fb4:	sub	x0, x29, #0x28
   51fb8:	sub	x1, x29, #0x28
   51fbc:	mov	w2, wzr
   51fc0:	bl	c0d0 <mpfr_log@plt>
   51fc4:	sub	x0, x29, #0x28
   51fc8:	sub	x1, x29, #0x28
   51fcc:	mov	w2, wzr
   51fd0:	bl	c3f0 <mpfr_sqr@plt>
   51fd4:	sub	x0, x29, #0x28
   51fd8:	sub	x1, x29, #0x28
   51fdc:	mov	w2, #0x1                   	// #1
   51fe0:	mov	w3, wzr
   51fe4:	bl	c8f0 <mpfr_div_2ui@plt>
   51fe8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   51fec:	ldr	x1, [x0, #2688]
   51ff0:	add	x0, x0, #0xa80
   51ff4:	blr	x1
   51ff8:	ldr	x8, [sp, #48]
   51ffc:	mov	w2, wzr
   52000:	add	x1, x8, x0
   52004:	sub	x0, x29, #0x48
   52008:	bl	c380 <mpfr_cache@plt>
   5200c:	sub	x0, x29, #0x48
   52010:	sub	x1, x29, #0x48
   52014:	mov	w2, wzr
   52018:	bl	c3f0 <mpfr_sqr@plt>
   5201c:	sub	x0, x29, #0x48
   52020:	sub	x1, x29, #0x48
   52024:	mov	w2, #0x6                   	// #6
   52028:	mov	w3, wzr
   5202c:	bl	cc40 <mpfr_div_ui@plt>
   52030:	ldur	x8, [x29, #-24]
   52034:	ldur	x9, [x29, #-56]
   52038:	cmp	x8, x9
   5203c:	b.lt	521e8 <mpfr_li2@@Base+0x1a34>  // b.tstop
   52040:	sub	x0, x29, #0x28
   52044:	sub	x1, x29, #0x28
   52048:	sub	x2, x29, #0x48
   5204c:	mov	w3, wzr
   52050:	bl	c1e0 <mpfr_add@plt>
   52054:	ldur	x8, [x29, #-24]
   52058:	mov	w23, wzr
   5205c:	cmp	x8, x19
   52060:	b.lt	520d8 <mpfr_li2@@Base+0x1924>  // b.tstop
   52064:	ldr	x9, [x21, #16]
   52068:	sub	x8, x20, x8
   5206c:	add	x8, x8, #0x12
   52070:	cmp	x9, x8
   52074:	b.lt	520d8 <mpfr_li2@@Base+0x1924>  // b.tstop
   52078:	ldur	x8, [x29, #-40]
   5207c:	ldr	x9, [x28]
   52080:	ldur	x0, [x29, #-16]
   52084:	add	x2, x20, #0x10
   52088:	sub	x10, x8, #0x1
   5208c:	add	x8, x8, #0x3e
   52090:	cmp	x10, #0x0
   52094:	csel	x8, x8, x10, lt  // lt = tstop
   52098:	ldr	w10, [sp, #12]
   5209c:	asr	x8, x8, #6
   520a0:	add	x1, x8, #0x1
   520a4:	cmp	w10, #0x0
   520a8:	cinc	x3, x9, eq  // eq = none
   520ac:	bl	c370 <mpfr_round_p@plt>
   520b0:	cbz	w0, 520d4 <mpfr_li2@@Base+0x1920>
   520b4:	ldr	w20, [sp, #12]
   520b8:	sub	x1, x29, #0x28
   520bc:	mov	x0, x28
   520c0:	mov	w2, w20
   520c4:	bl	bdc0 <mpfr_neg@plt>
   520c8:	cmp	w20, #0x5
   520cc:	csinc	w23, w0, wzr, ne  // ne = any
   520d0:	b	520d8 <mpfr_li2@@Base+0x1924>
   520d4:	mov	w23, wzr
   520d8:	sub	x0, x29, #0x28
   520dc:	bl	c0b0 <mpfr_clear@plt>
   520e0:	sub	x0, x29, #0x48
   520e4:	bl	c0b0 <mpfr_clear@plt>
   520e8:	cbz	w23, 51b80 <mpfr_li2@@Base+0x13cc>
   520ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   520f0:	ldr	x1, [x0, #2640]
   520f4:	add	x0, x0, #0xa50
   520f8:	blr	x1
   520fc:	ldr	x8, [sp, #48]
   52100:	ldr	w9, [sp, #36]
   52104:	str	w9, [x8, x0]
   52108:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5210c:	ldr	x1, [x0, #2576]
   52110:	add	x0, x0, #0xa10
   52114:	blr	x1
   52118:	ldr	x9, [sp, #40]
   5211c:	str	x9, [x8, x0]
   52120:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   52124:	ldr	x1, [x0, #2608]
   52128:	add	x0, x0, #0xa30
   5212c:	blr	x1
   52130:	ldr	x9, [sp, #24]
   52134:	str	x9, [x8, x0]
   52138:	ldr	x8, [x28, #16]
   5213c:	cmp	x8, x9
   52140:	b.gt	521bc <mpfr_li2@@Base+0x1a08>
   52144:	ldr	x9, [sp, #40]
   52148:	cmp	x8, x9
   5214c:	b.lt	521bc <mpfr_li2@@Base+0x1a08>  // b.tstop
   52150:	cbz	w23, 50b54 <mpfr_li2@@Base+0x3a0>
   52154:	ldr	w8, [sp, #36]
   52158:	orr	w8, w8, #0x8
   5215c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   52160:	ldr	x1, [x0, #2640]
   52164:	add	x0, x0, #0xa50
   52168:	blr	x1
   5216c:	ldr	x9, [sp, #48]
   52170:	b	50b50 <mpfr_li2@@Base+0x39c>
   52174:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   52178:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   5217c:	add	x0, x0, #0xa16
   52180:	add	x2, x2, #0xa46
   52184:	mov	w1, #0x82                  	// #130
   52188:	bl	cb20 <mpfr_assert_fail@plt>
   5218c:	b	50bd4 <mpfr_li2@@Base+0x420>
   52190:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   52194:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   52198:	add	x0, x0, #0xa16
   5219c:	add	x2, x2, #0xab4
   521a0:	mov	w1, #0x90                  	// #144
   521a4:	bl	cb20 <mpfr_assert_fail@plt>
   521a8:	b	50c78 <mpfr_li2@@Base+0x4c4>
   521ac:	mov	x0, x28
   521b0:	mov	w1, w23
   521b4:	mov	w2, w19
   521b8:	b	50d84 <mpfr_li2@@Base+0x5d0>
   521bc:	ldr	w2, [sp, #12]
   521c0:	mov	x0, x28
   521c4:	mov	w1, w23
   521c8:	b	50d84 <mpfr_li2@@Base+0x5d0>
   521cc:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   521d0:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   521d4:	add	x0, x0, #0xa16
   521d8:	add	x2, x2, #0xad8
   521dc:	mov	w1, #0xb4                  	// #180
   521e0:	bl	cb20 <mpfr_assert_fail@plt>
   521e4:	b	51f8c <mpfr_li2@@Base+0x17d8>
   521e8:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   521ec:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   521f0:	add	x0, x0, #0xa16
   521f4:	add	x2, x2, #0xbf4
   521f8:	mov	w1, #0xc0                  	// #192
   521fc:	bl	cb20 <mpfr_assert_fail@plt>
   52200:	b	52040 <mpfr_li2@@Base+0x188c>
   52204:	sub	sp, sp, #0x100
   52208:	stp	x29, x30, [sp, #160]
   5220c:	stp	x28, x27, [sp, #176]
   52210:	stp	x26, x25, [sp, #192]
   52214:	stp	x24, x23, [sp, #208]
   52218:	stp	x22, x21, [sp, #224]
   5221c:	stp	x20, x19, [sp, #240]
   52220:	ldr	x19, [x0]
   52224:	mov	w23, w2
   52228:	mov	x21, x1
   5222c:	add	x29, sp, #0xa0
   52230:	subs	x20, x19, #0x1
   52234:	str	x0, [sp, #8]
   52238:	b.eq	524ec <mpfr_li2@@Base+0x1d38>  // b.none
   5223c:	b.le	524f4 <mpfr_li2@@Base+0x1d40>
   52240:	clz	x8, x20
   52244:	mov	w9, #0x40                  	// #64
   52248:	sub	x8, x9, x8
   5224c:	add	x8, x19, x8
   52250:	add	x22, x8, #0x4
   52254:	sub	x0, x29, #0x20
   52258:	mov	x1, x22
   5225c:	bl	ca60 <mpfr_init2@plt>
   52260:	sub	x0, x29, #0x40
   52264:	mov	x1, x22
   52268:	bl	ca60 <mpfr_init2@plt>
   5226c:	add	x0, sp, #0x40
   52270:	mov	x1, x22
   52274:	bl	ca60 <mpfr_init2@plt>
   52278:	add	x0, sp, #0x20
   5227c:	mov	x1, x22
   52280:	bl	ca60 <mpfr_init2@plt>
   52284:	cmp	w23, #0x0
   52288:	mov	w25, #0x40                  	// #64
   5228c:	cinc	x8, x19, eq  // eq = none
   52290:	str	w23, [sp, #20]
   52294:	str	x8, [sp, #24]
   52298:	sub	x0, x29, #0x40
   5229c:	mov	w2, #0x2                   	// #2
   522a0:	mov	x1, x21
   522a4:	bl	c3f0 <mpfr_sqr@plt>
   522a8:	ldr	w3, [x21, #8]
   522ac:	add	x0, sp, #0x40
   522b0:	mov	w2, #0x2                   	// #2
   522b4:	mov	x1, x21
   522b8:	bl	c690 <mpfr_set4@plt>
   522bc:	ldr	w3, [x21, #8]
   522c0:	sub	x0, x29, #0x20
   522c4:	mov	w2, #0x2                   	// #2
   522c8:	mov	x1, x21
   522cc:	bl	c690 <mpfr_set4@plt>
   522d0:	ldur	x20, [x29, #-16]
   522d4:	mov	x26, xzr
   522d8:	mov	x19, xzr
   522dc:	mov	x23, xzr
   522e0:	mov	w24, #0xd                   	// #13
   522e4:	mov	w27, #0x1                   	// #1
   522e8:	add	x0, sp, #0x40
   522ec:	sub	x1, x29, #0x40
   522f0:	add	x2, sp, #0x40
   522f4:	mov	w3, #0x2                   	// #2
   522f8:	bl	bda0 <mpfr_mul@plt>
   522fc:	add	x28, x26, #0x2
   52300:	add	x0, sp, #0x40
   52304:	add	x1, sp, #0x40
   52308:	mov	w3, #0x2                   	// #2
   5230c:	mov	x2, x28
   52310:	bl	cc40 <mpfr_div_ui@plt>
   52314:	add	x0, sp, #0x40
   52318:	add	x1, sp, #0x40
   5231c:	mov	w3, #0x2                   	// #2
   52320:	mov	x2, x28
   52324:	bl	cc40 <mpfr_div_ui@plt>
   52328:	add	x26, x26, #0x3
   5232c:	add	x0, sp, #0x40
   52330:	add	x1, sp, #0x40
   52334:	mov	w3, #0x2                   	// #2
   52338:	mov	x2, x26
   5233c:	bl	cc40 <mpfr_div_ui@plt>
   52340:	add	x0, sp, #0x40
   52344:	add	x1, sp, #0x40
   52348:	mov	w3, #0x2                   	// #2
   5234c:	mov	x2, x26
   52350:	bl	cc40 <mpfr_div_ui@plt>
   52354:	mov	x0, x27
   52358:	bl	c820 <mpfr_bernoulli_cache@plt>
   5235c:	mov	x2, x0
   52360:	add	x0, sp, #0x20
   52364:	add	x1, sp, #0x40
   52368:	mov	w3, wzr
   5236c:	bl	c4c0 <mpfr_mul_z@plt>
   52370:	sub	x0, x29, #0x20
   52374:	sub	x1, x29, #0x20
   52378:	add	x2, sp, #0x20
   5237c:	mov	w3, wzr
   52380:	bl	c1e0 <mpfr_add@plt>
   52384:	ldr	x9, [sp, #48]
   52388:	add	x8, x20, x23
   5238c:	ldur	x20, [x29, #-16]
   52390:	add	x27, x27, #0x1
   52394:	add	x10, x9, w24, uxtw
   52398:	cmp	x8, x10
   5239c:	csel	x8, x8, x10, gt
   523a0:	sub	x8, x8, x20
   523a4:	cmp	x8, #0x0
   523a8:	sub	x10, x20, x22
   523ac:	csinv	x8, x8, xzr, ge  // ge = tcont
   523b0:	add	x19, x19, #0x6
   523b4:	cmp	x9, x10
   523b8:	add	x23, x8, #0x2
   523bc:	add	x24, x24, #0x5
   523c0:	mov	x26, x28
   523c4:	b.gt	522e8 <mpfr_li2@@Base+0x1b34>
   523c8:	ldr	x8, [x21, #16]
   523cc:	mov	x10, #0xfffffffffffffeff    	// #-257
   523d0:	and	x9, x19, #0xfffffffe
   523d4:	movk	x10, #0x7fff, lsl #48
   523d8:	add	x10, x10, #0x105
   523dc:	sub	x8, x8, x9
   523e0:	cmp	x20, x10
   523e4:	sub	x8, x8, #0x5
   523e8:	b.lt	52428 <mpfr_li2@@Base+0x1c74>  // b.tstop
   523ec:	ldur	x9, [x29, #-32]
   523f0:	cmp	x23, x8
   523f4:	ldur	x0, [x29, #-8]
   523f8:	csel	x8, x23, x8, gt
   523fc:	sub	x10, x9, #0x1
   52400:	add	x9, x9, #0x3e
   52404:	cmp	x10, #0x0
   52408:	ldr	x3, [sp, #24]
   5240c:	csel	x9, x9, x10, lt  // lt = tstop
   52410:	mvn	x8, x8
   52414:	asr	x9, x9, #6
   52418:	add	x1, x9, #0x1
   5241c:	add	x2, x22, x8
   52420:	bl	c370 <mpfr_round_p@plt>
   52424:	cbnz	w0, 5249c <mpfr_li2@@Base+0x1ce8>
   52428:	mov	x8, #0xfffffffffffffeff    	// #-257
   5242c:	movk	x8, #0x7fff, lsl #48
   52430:	sub	x8, x8, x22
   52434:	cmp	x25, x8
   52438:	b.gt	52480 <mpfr_li2@@Base+0x1ccc>
   5243c:	add	x22, x22, x25
   52440:	cmp	x22, #0x0
   52444:	cinc	x8, x22, lt  // lt = tstop
   52448:	sub	x0, x29, #0x20
   5244c:	mov	x1, x22
   52450:	asr	x25, x8, #1
   52454:	bl	bf20 <mpfr_set_prec@plt>
   52458:	sub	x0, x29, #0x40
   5245c:	mov	x1, x22
   52460:	bl	bf20 <mpfr_set_prec@plt>
   52464:	add	x0, sp, #0x40
   52468:	mov	x1, x22
   5246c:	bl	bf20 <mpfr_set_prec@plt>
   52470:	add	x0, sp, #0x20
   52474:	mov	x1, x22
   52478:	bl	bf20 <mpfr_set_prec@plt>
   5247c:	b	52298 <mpfr_li2@@Base+0x1ae4>
   52480:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   52484:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   52488:	mov	w1, #0x5e                  	// #94
   5248c:	add	x0, x0, #0xa16
   52490:	add	x2, x2, #0xcf6
   52494:	bl	cb20 <mpfr_assert_fail@plt>
   52498:	b	5243c <mpfr_li2@@Base+0x1c88>
   5249c:	ldur	w3, [x29, #-24]
   524a0:	ldr	x0, [sp, #8]
   524a4:	ldr	w2, [sp, #20]
   524a8:	sub	x1, x29, #0x20
   524ac:	bl	c690 <mpfr_set4@plt>
   524b0:	sub	x0, x29, #0x20
   524b4:	sub	x1, x29, #0x40
   524b8:	add	x2, sp, #0x40
   524bc:	add	x3, sp, #0x20
   524c0:	mov	x4, xzr
   524c4:	bl	c1f0 <mpfr_clears@plt>
   524c8:	mov	w0, w26
   524cc:	ldp	x20, x19, [sp, #240]
   524d0:	ldp	x22, x21, [sp, #224]
   524d4:	ldp	x24, x23, [sp, #208]
   524d8:	ldp	x26, x25, [sp, #192]
   524dc:	ldp	x28, x27, [sp, #176]
   524e0:	ldp	x29, x30, [sp, #160]
   524e4:	add	sp, sp, #0x100
   524e8:	ret
   524ec:	mov	x8, xzr
   524f0:	b	5224c <mpfr_li2@@Base+0x1a98>
   524f4:	adrp	x0, 64000 <mpfr_bases@@Base+0x758>
   524f8:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   524fc:	add	x0, x0, #0xa16
   52500:	add	x2, x2, #0xa3b
   52504:	mov	w1, #0x31                  	// #49
   52508:	bl	cb20 <mpfr_assert_fail@plt>
   5250c:	b	52240 <mpfr_li2@@Base+0x1a8c>

0000000000052510 <mpfr_rec_sqrt@@Base>:
   52510:	stp	x29, x30, [sp, #-96]!
   52514:	stp	x28, x27, [sp, #16]
   52518:	stp	x26, x25, [sp, #32]
   5251c:	stp	x24, x23, [sp, #48]
   52520:	stp	x22, x21, [sp, #64]
   52524:	stp	x20, x19, [sp, #80]
   52528:	mov	x29, sp
   5252c:	sub	sp, sp, #0x20
   52530:	ldr	x9, [x1, #16]
   52534:	mov	x8, #0x2                   	// #2
   52538:	movk	x8, #0x8000, lsl #48
   5253c:	add	x10, x8, #0x2
   52540:	mov	x21, x1
   52544:	cmp	x9, x10
   52548:	mov	x19, x0
   5254c:	b.lt	52664 <mpfr_rec_sqrt@@Base+0x154>  // b.tstop
   52550:	ldr	w10, [x21, #8]
   52554:	tbnz	w10, #31, 526a0 <mpfr_rec_sqrt@@Base+0x190>
   52558:	ldr	x22, [x19]
   5255c:	mov	w8, #0x1                   	// #1
   52560:	mvn	w9, w9
   52564:	str	w8, [x19, #8]
   52568:	add	x10, x22, #0x3f
   5256c:	and	w24, w9, #0x1
   52570:	ldr	x25, [x21]
   52574:	add	x9, x22, #0xb
   52578:	and	x10, x10, #0xffffffffffffffc0
   5257c:	cmp	x9, x10
   52580:	sub	x8, x22, #0x1
   52584:	csel	x23, x10, x9, lt  // lt = tstop
   52588:	cmp	w2, #0x0
   5258c:	cinc	x26, x22, eq  // eq = none
   52590:	cmp	x19, x21
   52594:	asr	x9, x8, #6
   52598:	stur	w2, [x29, #-20]
   5259c:	stur	x9, [x29, #-32]
   525a0:	b.eq	526d4 <mpfr_rec_sqrt@@Base+0x1c4>  // b.none
   525a4:	sub	x8, x23, #0x1
   525a8:	asr	x20, x8, #6
   525ac:	cmp	x20, x9
   525b0:	add	x28, x20, #0x1
   525b4:	stur	xzr, [x29, #-16]
   525b8:	b.le	525e0 <mpfr_rec_sqrt@@Base+0xd0>
   525bc:	lsl	x1, x28, #3
   525c0:	cmp	x1, #0x4, lsl #12
   525c4:	b.hi	5264c <mpfr_rec_sqrt@@Base+0x13c>  // b.pmore
   525c8:	add	x9, x1, #0xf
   525cc:	mov	x8, sp
   525d0:	and	x9, x9, #0xfffffffffffffff0
   525d4:	sub	x27, x8, x9
   525d8:	mov	sp, x27
   525dc:	b	525e4 <mpfr_rec_sqrt@@Base+0xd4>
   525e0:	ldr	x27, [x19, #24]
   525e4:	ldr	x2, [x21, #24]
   525e8:	mov	x0, x27
   525ec:	mov	x1, x23
   525f0:	mov	x3, x25
   525f4:	mov	w4, w24
   525f8:	bl	5290c <mpfr_rec_sqrt@@Base+0x3fc>
   525fc:	cmp	x23, x25
   52600:	cset	w8, lt  // lt = tstop
   52604:	sub	x2, x23, x8
   52608:	mov	x0, x27
   5260c:	mov	x1, x28
   52610:	mov	x3, x26
   52614:	bl	c370 <mpfr_round_p@plt>
   52618:	cbnz	w0, 527f8 <mpfr_rec_sqrt@@Base+0x2e8>
   5261c:	cbnz	w24, 52638 <mpfr_rec_sqrt@@Base+0x128>
   52620:	ldr	x8, [x21, #16]
   52624:	mov	w1, #0x1                   	// #1
   52628:	mov	x0, x21
   5262c:	sub	x2, x8, #0x1
   52630:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   52634:	cbz	w0, 527a8 <mpfr_rec_sqrt@@Base+0x298>
   52638:	ldur	x0, [x29, #-16]
   5263c:	cbnz	x0, 5265c <mpfr_rec_sqrt@@Base+0x14c>
   52640:	ldur	x9, [x29, #-32]
   52644:	add	x23, x23, #0x40
   52648:	b	525a4 <mpfr_rec_sqrt@@Base+0x94>
   5264c:	sub	x0, x29, #0x10
   52650:	bl	be10 <mpfr_tmp_allocate@plt>
   52654:	mov	x27, x0
   52658:	b	525e4 <mpfr_rec_sqrt@@Base+0xd4>
   5265c:	bl	c400 <mpfr_tmp_free@plt>
   52660:	b	52640 <mpfr_rec_sqrt@@Base+0x130>
   52664:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   52668:	cmp	x9, x10
   5266c:	b.eq	52774 <mpfr_rec_sqrt@@Base+0x264>  // b.none
   52670:	mov	x10, #0x2                   	// #2
   52674:	movk	x10, #0x8000, lsl #48
   52678:	cmp	x9, x10
   5267c:	b.eq	526a0 <mpfr_rec_sqrt@@Base+0x190>  // b.none
   52680:	ldr	w9, [x21, #8]
   52684:	tbnz	w9, #31, 526a0 <mpfr_rec_sqrt@@Base+0x190>
   52688:	mov	w9, #0x1                   	// #1
   5268c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   52690:	mov	w8, wzr
   52694:	str	w9, [x19, #8]
   52698:	str	x10, [x19, #16]
   5269c:	b	528a8 <mpfr_rec_sqrt@@Base+0x398>
   526a0:	str	x8, [x19, #16]
   526a4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   526a8:	ldr	x1, [x0, #2640]
   526ac:	add	x0, x0, #0xa50
   526b0:	blr	x1
   526b4:	mrs	x9, tpidr_el0
   526b8:	ldr	w10, [x9, x0]
   526bc:	mov	w8, wzr
   526c0:	orr	w10, w10, #0x4
   526c4:	b	528a4 <mpfr_rec_sqrt@@Base+0x394>
   526c8:	ldur	x0, [x29, #-16]
   526cc:	cbnz	x0, 5276c <mpfr_rec_sqrt@@Base+0x25c>
   526d0:	add	x23, x23, #0x40
   526d4:	sub	x8, x23, #0x1
   526d8:	asr	x20, x8, #6
   526dc:	add	x28, x20, #0x1
   526e0:	lsl	x1, x28, #3
   526e4:	cmp	x1, #0x4, lsl #12
   526e8:	stur	xzr, [x29, #-16]
   526ec:	b.hi	5275c <mpfr_rec_sqrt@@Base+0x24c>  // b.pmore
   526f0:	add	x9, x1, #0xf
   526f4:	mov	x8, sp
   526f8:	and	x9, x9, #0xfffffffffffffff0
   526fc:	sub	x27, x8, x9
   52700:	mov	sp, x27
   52704:	ldr	x2, [x21, #24]
   52708:	mov	x0, x27
   5270c:	mov	x1, x23
   52710:	mov	x3, x25
   52714:	mov	w4, w24
   52718:	bl	5290c <mpfr_rec_sqrt@@Base+0x3fc>
   5271c:	cmp	x23, x25
   52720:	cset	w8, lt  // lt = tstop
   52724:	sub	x2, x23, x8
   52728:	mov	x0, x27
   5272c:	mov	x1, x28
   52730:	mov	x3, x26
   52734:	bl	c370 <mpfr_round_p@plt>
   52738:	cbnz	w0, 527f8 <mpfr_rec_sqrt@@Base+0x2e8>
   5273c:	cbnz	w24, 526c8 <mpfr_rec_sqrt@@Base+0x1b8>
   52740:	ldr	x8, [x21, #16]
   52744:	mov	w1, #0x1                   	// #1
   52748:	mov	x0, x21
   5274c:	sub	x2, x8, #0x1
   52750:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   52754:	cbnz	w0, 526c8 <mpfr_rec_sqrt@@Base+0x1b8>
   52758:	b	527a8 <mpfr_rec_sqrt@@Base+0x298>
   5275c:	sub	x0, x29, #0x10
   52760:	bl	be10 <mpfr_tmp_allocate@plt>
   52764:	mov	x27, x0
   52768:	b	52704 <mpfr_rec_sqrt@@Base+0x1f4>
   5276c:	bl	c400 <mpfr_tmp_free@plt>
   52770:	b	526d0 <mpfr_rec_sqrt@@Base+0x1c0>
   52774:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   52778:	mov	w9, #0x1                   	// #1
   5277c:	str	x8, [x19, #16]
   52780:	str	w9, [x19, #8]
   52784:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   52788:	ldr	x1, [x0, #2640]
   5278c:	add	x0, x0, #0xa50
   52790:	blr	x1
   52794:	mrs	x9, tpidr_el0
   52798:	ldr	w10, [x9, x0]
   5279c:	mov	w8, wzr
   527a0:	orr	w10, w10, #0x20
   527a4:	b	528a4 <mpfr_rec_sqrt@@Base+0x394>
   527a8:	ldr	x9, [x27]
   527ac:	lsl	x8, x28, #6
   527b0:	sub	x8, x8, x23
   527b4:	mov	w10, #0x1                   	// #1
   527b8:	lsl	x8, x10, x8
   527bc:	adds	x8, x9, x8
   527c0:	str	x8, [x27]
   527c4:	b.cc	527ec <mpfr_rec_sqrt@@Base+0x2dc>  // b.lo, b.ul, b.last
   527c8:	mov	w8, #0x1                   	// #1
   527cc:	cmp	x8, x20
   527d0:	b.gt	527ec <mpfr_rec_sqrt@@Base+0x2dc>
   527d4:	lsl	x9, x8, #3
   527d8:	ldr	x10, [x27, x9]
   527dc:	add	x8, x8, #0x1
   527e0:	adds	x10, x10, #0x1
   527e4:	str	x10, [x27, x9]
   527e8:	b.cs	527cc <mpfr_rec_sqrt@@Base+0x2bc>  // b.hs, b.nlast
   527ec:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   527f0:	mov	w24, #0x2                   	// #2
   527f4:	str	x8, [x27, x20, lsl #3]
   527f8:	ldur	w20, [x29, #-20]
   527fc:	ldr	x0, [x19, #24]
   52800:	sub	x6, x29, #0x4
   52804:	mov	x1, x27
   52808:	mov	x2, x23
   5280c:	mov	w3, wzr
   52810:	mov	x4, x22
   52814:	mov	w5, w20
   52818:	bl	ca00 <mpfr_round_raw@plt>
   5281c:	ldr	x8, [x21, #16]
   52820:	mvn	w9, w24
   52824:	add	x8, x8, w9, sxtw
   52828:	cmp	x8, #0x0
   5282c:	cinc	x8, x8, lt  // lt = tstop
   52830:	neg	x8, x8, asr #1
   52834:	str	x8, [x19, #16]
   52838:	cbnz	w0, 528cc <mpfr_rec_sqrt@@Base+0x3bc>
   5283c:	ldur	x0, [x29, #-16]
   52840:	cbnz	x0, 528ec <mpfr_rec_sqrt@@Base+0x3dc>
   52844:	ldr	x10, [x19, #16]
   52848:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5284c:	ldr	x1, [x0, #2576]
   52850:	add	x0, x0, #0xa10
   52854:	blr	x1
   52858:	mrs	x9, tpidr_el0
   5285c:	ldr	x11, [x9, x0]
   52860:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   52864:	ldr	x1, [x0, #2608]
   52868:	add	x0, x0, #0xa30
   5286c:	blr	x1
   52870:	ldur	w8, [x29, #-4]
   52874:	cmp	x10, x11
   52878:	b.lt	528f4 <mpfr_rec_sqrt@@Base+0x3e4>  // b.tstop
   5287c:	ldr	x11, [x9, x0]
   52880:	cmp	x10, x11
   52884:	b.gt	528f4 <mpfr_rec_sqrt@@Base+0x3e4>
   52888:	cbz	w8, 528a8 <mpfr_rec_sqrt@@Base+0x398>
   5288c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   52890:	ldr	x1, [x0, #2640]
   52894:	add	x0, x0, #0xa50
   52898:	blr	x1
   5289c:	ldr	w10, [x9, x0]
   528a0:	orr	w10, w10, #0x8
   528a4:	str	w10, [x9, x0]
   528a8:	mov	w0, w8
   528ac:	mov	sp, x29
   528b0:	ldp	x20, x19, [sp, #80]
   528b4:	ldp	x22, x21, [sp, #64]
   528b8:	ldp	x24, x23, [sp, #48]
   528bc:	ldp	x26, x25, [sp, #32]
   528c0:	ldp	x28, x27, [sp, #16]
   528c4:	ldp	x29, x30, [sp], #96
   528c8:	ret
   528cc:	ldr	x9, [x19, #24]
   528d0:	ldur	x10, [x29, #-32]
   528d4:	add	x8, x8, #0x1
   528d8:	str	x8, [x19, #16]
   528dc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   528e0:	str	x8, [x9, x10, lsl #3]
   528e4:	ldur	x0, [x29, #-16]
   528e8:	cbz	x0, 52844 <mpfr_rec_sqrt@@Base+0x334>
   528ec:	bl	c400 <mpfr_tmp_free@plt>
   528f0:	b	52844 <mpfr_rec_sqrt@@Base+0x334>
   528f4:	mov	x0, x19
   528f8:	mov	w1, w8
   528fc:	mov	w2, w20
   52900:	bl	cb10 <mpfr_check_range@plt>
   52904:	mov	w8, w0
   52908:	b	528a8 <mpfr_rec_sqrt@@Base+0x398>
   5290c:	stp	x29, x30, [sp, #-96]!
   52910:	stp	x28, x27, [sp, #16]
   52914:	stp	x26, x25, [sp, #32]
   52918:	stp	x24, x23, [sp, #48]
   5291c:	stp	x22, x21, [sp, #64]
   52920:	stp	x20, x19, [sp, #80]
   52924:	mov	x29, sp
   52928:	sub	sp, sp, #0x80
   5292c:	sub	x8, x1, #0x1
   52930:	sub	x9, x3, #0x1
   52934:	asr	x26, x8, #6
   52938:	asr	x8, x9, #6
   5293c:	add	x14, x26, #0x1
   52940:	add	x9, x8, #0x1
   52944:	cmp	x8, x26
   52948:	sub	x9, x9, x14
   5294c:	csinc	x25, x14, x8, gt
   52950:	add	x8, x2, x9, lsl #3
   52954:	csel	x9, x9, xzr, gt
   52958:	csel	x28, x8, x2, gt
   5295c:	cmp	x1, #0xb
   52960:	mov	x23, x0
   52964:	b.ne	529b8 <mpfr_rec_sqrt@@Base+0x4a8>  // b.any
   52968:	add	x8, x28, x25, lsl #3
   5296c:	ldur	x8, [x8, #-8]
   52970:	mov	w9, #0x34                  	// #52
   52974:	sub	w9, w9, w4
   52978:	adrp	x10, 64000 <mpfr_bases@@Base+0x758>
   5297c:	lsr	x8, x8, x9
   52980:	add	x10, x10, #0xc1a
   52984:	lsr	x9, x8, #4
   52988:	add	x10, x10, x9, lsl #1
   5298c:	and	x9, x9, #0x3f0
   52990:	bfxil	x9, x8, #0, #4
   52994:	ldurh	w8, [x10, #-256]
   52998:	adrp	x10, 64000 <mpfr_bases@@Base+0x758>
   5299c:	add	x10, x10, #0xf1a
   529a0:	add	x9, x9, x10
   529a4:	ldurb	w9, [x9, #-128]
   529a8:	add	w8, w9, w8
   529ac:	lsl	x8, x8, #53
   529b0:	str	x8, [x23]
   529b4:	b	5302c <mpfr_rec_sqrt@@Base+0xb1c>
   529b8:	asr	x8, x1, #1
   529bc:	stur	x9, [x29, #-112]
   529c0:	cmp	x1, #0x12
   529c4:	mov	w9, #0xb                   	// #11
   529c8:	add	x8, x8, #0x2
   529cc:	csel	x21, x9, x8, lt  // lt = tstop
   529d0:	sxtw	x10, w4
   529d4:	mov	w11, #0x1                   	// #1
   529d8:	sub	x8, x21, #0x1
   529dc:	lsl	x9, x21, #1
   529e0:	add	x13, x21, x10
   529e4:	bfi	x11, x21, #1, #63
   529e8:	asr	x24, x8, #6
   529ec:	sub	x8, x9, #0x1
   529f0:	add	x10, x10, x11
   529f4:	asr	x11, x13, #6
   529f8:	asr	x8, x8, #6
   529fc:	sub	x9, x13, #0x2
   52a00:	add	x20, x24, #0x1
   52a04:	stur	x8, [x29, #-16]
   52a08:	sub	x8, x10, #0x1
   52a0c:	cmp	x11, x25
   52a10:	add	x12, x28, x25, lsl #3
   52a14:	asr	x22, x9, #6
   52a18:	sub	x9, x14, x20
   52a1c:	stur	x8, [x29, #-120]
   52a20:	asr	x19, x8, #6
   52a24:	csinc	x8, x25, x11, ge  // ge = tcont
   52a28:	mov	x27, x2
   52a2c:	stp	x1, x9, [x29, #-96]
   52a30:	add	x0, x23, x9, lsl #3
   52a34:	sub	x2, x12, x8, lsl #3
   52a38:	lsl	x3, x8, #6
   52a3c:	mov	x1, x21
   52a40:	stp	x0, x14, [x29, #-48]
   52a44:	stur	x4, [x29, #-32]
   52a48:	bl	5290c <mpfr_rec_sqrt@@Base+0x3fc>
   52a4c:	sub	x8, x19, x22
   52a50:	stur	x22, [x29, #-64]
   52a54:	add	x22, x8, #0x1
   52a58:	stur	x20, [x29, #-104]
   52a5c:	add	x20, x22, x20
   52a60:	lsl	x1, x20, #3
   52a64:	cmp	x1, #0x4, lsl #12
   52a68:	stur	xzr, [x29, #-8]
   52a6c:	b.hi	52b5c <mpfr_rec_sqrt@@Base+0x64c>  // b.pmore
   52a70:	add	x9, x1, #0xf
   52a74:	mov	x8, sp
   52a78:	and	x9, x9, #0xfffffffffffffff0
   52a7c:	sub	x8, x8, x9
   52a80:	stur	x8, [x29, #-24]
   52a84:	mov	sp, x8
   52a88:	ldur	x8, [x29, #-16]
   52a8c:	cmp	x21, #0x20
   52a90:	stur	x24, [x29, #-56]
   52a94:	add	x21, x8, #0x1
   52a98:	b.gt	52ab4 <mpfr_rec_sqrt@@Base+0x5a4>
   52a9c:	ldr	x8, [x23]
   52aa0:	ldur	x24, [x29, #-24]
   52aa4:	lsr	x8, x8, #32
   52aa8:	mul	x8, x8, x8
   52aac:	str	x8, [x24, #8]!
   52ab0:	b	52b10 <mpfr_rec_sqrt@@Base+0x600>
   52ab4:	cbz	x24, 52af8 <mpfr_rec_sqrt@@Base+0x5e8>
   52ab8:	ldur	x24, [x29, #-24]
   52abc:	ldur	x1, [x29, #-48]
   52ac0:	stur	x20, [x29, #-72]
   52ac4:	mov	x20, x22
   52ac8:	ldur	x22, [x29, #-104]
   52acc:	mov	x0, x24
   52ad0:	mov	x2, x1
   52ad4:	mov	x3, x22
   52ad8:	bl	c460 <__gmpn_mul_n@plt>
   52adc:	cmp	x21, x22, lsl #1
   52ae0:	mov	x22, x20
   52ae4:	ldur	x20, [x29, #-72]
   52ae8:	b.ge	52b10 <mpfr_rec_sqrt@@Base+0x600>  // b.tcont
   52aec:	ldur	x8, [x29, #-24]
   52af0:	add	x24, x8, #0x8
   52af4:	b	52b10 <mpfr_rec_sqrt@@Base+0x600>
   52af8:	ldur	x8, [x29, #-48]
   52afc:	ldur	x24, [x29, #-24]
   52b00:	ldr	x8, [x8]
   52b04:	umulh	x9, x8, x8
   52b08:	mul	x8, x8, x8
   52b0c:	stp	x8, x9, [x24]
   52b10:	stp	x26, x23, [x29, #-80]
   52b14:	add	x23, x21, x25
   52b18:	lsl	x1, x23, #3
   52b1c:	cmp	x1, #0x4, lsl #12
   52b20:	b.hi	52b6c <mpfr_rec_sqrt@@Base+0x65c>  // b.pmore
   52b24:	add	x9, x1, #0xf
   52b28:	mov	x8, sp
   52b2c:	and	x9, x9, #0xfffffffffffffff0
   52b30:	sub	x26, x8, x9
   52b34:	mov	sp, x26
   52b38:	ldur	x8, [x29, #-16]
   52b3c:	cbz	x8, 52b80 <mpfr_rec_sqrt@@Base+0x670>
   52b40:	mov	x0, x26
   52b44:	mov	x1, x24
   52b48:	mov	x2, x21
   52b4c:	mov	x3, x28
   52b50:	mov	x4, x25
   52b54:	bl	c790 <__gmpn_mul@plt>
   52b58:	b	52b98 <mpfr_rec_sqrt@@Base+0x688>
   52b5c:	sub	x0, x29, #0x8
   52b60:	bl	be10 <mpfr_tmp_allocate@plt>
   52b64:	stur	x0, [x29, #-24]
   52b68:	b	52a88 <mpfr_rec_sqrt@@Base+0x578>
   52b6c:	sub	x0, x29, #0x8
   52b70:	bl	be10 <mpfr_tmp_allocate@plt>
   52b74:	mov	x26, x0
   52b78:	ldur	x8, [x29, #-16]
   52b7c:	cbnz	x8, 52b40 <mpfr_rec_sqrt@@Base+0x630>
   52b80:	ldur	x9, [x29, #-112]
   52b84:	ldr	x8, [x24]
   52b88:	ldr	x9, [x27, x9, lsl #3]
   52b8c:	umulh	x10, x8, x9
   52b90:	mul	x8, x9, x8
   52b94:	stp	x8, x10, [x26]
   52b98:	add	x8, x26, x23, lsl #3
   52b9c:	mvn	x9, x19
   52ba0:	ldp	x13, x28, [x29, #-32]
   52ba4:	add	x1, x8, x9, lsl #3
   52ba8:	ldr	x8, [x1, x19, lsl #3]
   52bac:	ldur	x27, [x29, #-48]
   52bb0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   52bb4:	lsr	x9, x9, x13
   52bb8:	ands	x21, x8, x9
   52bbc:	b.eq	52c1c <mpfr_rec_sqrt@@Base+0x70c>  // b.none
   52bc0:	eor	x8, x21, x8
   52bc4:	str	x8, [x1, x19, lsl #3]
   52bc8:	ldr	x8, [x1]
   52bcc:	adds	x8, x8, #0x1
   52bd0:	str	x8, [x1]
   52bd4:	b.cc	52cc8 <mpfr_rec_sqrt@@Base+0x7b8>  // b.lo, b.ul, b.last
   52bd8:	ldur	x8, [x29, #-16]
   52bdc:	mov	w9, #0x2                   	// #2
   52be0:	add	x8, x25, x8
   52be4:	lsl	x8, x8, #3
   52be8:	sub	x8, x8, x19, lsl #3
   52bec:	add	x8, x8, x26
   52bf0:	sub	x8, x8, #0x8
   52bf4:	sub	x10, x9, #0x1
   52bf8:	cmp	x10, x19
   52bfc:	b.gt	52cc8 <mpfr_rec_sqrt@@Base+0x7b8>
   52c00:	lsl	x10, x9, #3
   52c04:	ldr	x11, [x8, x10]
   52c08:	add	x9, x9, #0x1
   52c0c:	adds	x11, x11, #0x1
   52c10:	str	x11, [x8, x10]
   52c14:	b.cs	52bf4 <mpfr_rec_sqrt@@Base+0x6e4>  // b.hs, b.nlast
   52c18:	b	52cc8 <mpfr_rec_sqrt@@Base+0x7b8>
   52c1c:	orr	x8, x9, x8
   52c20:	orr	x8, x8, #0x8000000000000000
   52c24:	str	x8, [x1, x19, lsl #3]
   52c28:	ldur	x8, [x29, #-120]
   52c2c:	tbnz	x8, #63, 52cc8 <mpfr_rec_sqrt@@Base+0x7b8>
   52c30:	bic	x8, x19, x19, asr #63
   52c34:	cmp	x8, #0x3
   52c38:	b.cs	52c44 <mpfr_rec_sqrt@@Base+0x734>  // b.hs, b.nlast
   52c3c:	mov	x8, xzr
   52c40:	b	52c8c <mpfr_rec_sqrt@@Base+0x77c>
   52c44:	add	x9, x8, #0x1
   52c48:	ldur	x8, [x29, #-16]
   52c4c:	add	x10, x25, x8
   52c50:	lsl	x10, x10, #3
   52c54:	sub	x10, x10, x19, lsl #3
   52c58:	and	x8, x9, #0x7ffffffffffffffc
   52c5c:	add	x10, x10, x26
   52c60:	add	x10, x10, #0x10
   52c64:	mov	x11, x8
   52c68:	ldp	q0, q1, [x10, #-16]
   52c6c:	subs	x11, x11, #0x4
   52c70:	mvn	v0.16b, v0.16b
   52c74:	mvn	v1.16b, v1.16b
   52c78:	stp	q0, q1, [x10, #-16]
   52c7c:	add	x10, x10, #0x20
   52c80:	b.ne	52c68 <mpfr_rec_sqrt@@Base+0x758>  // b.any
   52c84:	cmp	x9, x8
   52c88:	b.eq	52cc8 <mpfr_rec_sqrt@@Base+0x7b8>  // b.none
   52c8c:	ldur	x9, [x29, #-16]
   52c90:	add	x8, x8, #0x1
   52c94:	add	x9, x25, x9
   52c98:	lsl	x9, x9, #3
   52c9c:	sub	x9, x9, x19, lsl #3
   52ca0:	add	x9, x9, x26
   52ca4:	sub	x9, x9, #0x8
   52ca8:	lsl	x10, x8, #3
   52cac:	ldr	x11, [x9, x10]
   52cb0:	sub	x12, x8, #0x1
   52cb4:	add	x8, x8, #0x1
   52cb8:	cmp	x12, x19
   52cbc:	mvn	x11, x11
   52cc0:	str	x11, [x9, x10]
   52cc4:	b.lt	52ca8 <mpfr_rec_sqrt@@Base+0x798>  // b.tstop
   52cc8:	cmp	x22, #0x1
   52ccc:	b.ne	52ce8 <mpfr_rec_sqrt@@Base+0x7d8>  // b.any
   52cd0:	ldr	x8, [x1]
   52cd4:	ldr	x9, [x27]
   52cd8:	umulh	x10, x8, x9
   52cdc:	mul	x8, x9, x8
   52ce0:	stp	x8, x10, [x28]
   52ce4:	b	52d00 <mpfr_rec_sqrt@@Base+0x7f0>
   52ce8:	ldur	x4, [x29, #-104]
   52cec:	mov	x0, x28
   52cf0:	mov	x2, x22
   52cf4:	mov	x3, x27
   52cf8:	bl	c790 <__gmpn_mul@plt>
   52cfc:	ldur	x13, [x29, #-32]
   52d00:	ldur	x9, [x29, #-40]
   52d04:	ldur	x8, [x29, #-64]
   52d08:	ldp	x26, x25, [x29, #-80]
   52d0c:	cmp	w13, #0x1
   52d10:	sub	x24, x9, x8
   52d14:	sub	x8, x20, x24
   52d18:	add	x23, x28, x8, lsl #3
   52d1c:	b.ne	52d38 <mpfr_rec_sqrt@@Base+0x828>  // b.any
   52d20:	sub	x0, x23, #0x8
   52d24:	add	x2, x24, #0x1
   52d28:	mov	w3, #0x1                   	// #1
   52d2c:	mov	x1, x0
   52d30:	bl	bd10 <__gmpn_lshift@plt>
   52d34:	ldur	x9, [x29, #-40]
   52d38:	lsl	x8, x9, #6
   52d3c:	ldur	x9, [x29, #-96]
   52d40:	sub	x22, x8, x9
   52d44:	subs	x8, x22, #0x1
   52d48:	b.lt	52dc0 <mpfr_rec_sqrt@@Base+0x8b0>  // b.tstop
   52d4c:	ldr	x9, [x23]
   52d50:	mov	w10, #0x1                   	// #1
   52d54:	ldur	x20, [x29, #-88]
   52d58:	lsl	x8, x10, x8
   52d5c:	and	x8, x9, x8
   52d60:	adds	x8, x8, x9
   52d64:	str	x8, [x23]
   52d68:	b.cc	52dac <mpfr_rec_sqrt@@Base+0x89c>  // b.lo, b.ul, b.last
   52d6c:	ldur	x8, [x29, #-56]
   52d70:	mov	w9, #0x2                   	// #2
   52d74:	add	x8, x8, x19
   52d78:	lsl	x8, x8, #3
   52d7c:	sub	x8, x8, x26, lsl #3
   52d80:	add	x8, x28, x8
   52d84:	sub	x10, x9, #0x1
   52d88:	cmp	x10, x24
   52d8c:	b.ge	52e14 <mpfr_rec_sqrt@@Base+0x904>  // b.tcont
   52d90:	lsl	x10, x9, #3
   52d94:	ldr	x11, [x8, x10]
   52d98:	add	x9, x9, #0x1
   52d9c:	adds	x11, x11, #0x1
   52da0:	str	x11, [x8, x10]
   52da4:	b.cs	52d84 <mpfr_rec_sqrt@@Base+0x874>  // b.hs, b.nlast
   52da8:	ldr	x8, [x23]
   52dac:	mov	x9, #0xffffffffffffffff    	// #-1
   52db0:	lsl	x9, x9, x22
   52db4:	and	x8, x8, x9
   52db8:	str	x8, [x23]
   52dbc:	b	52e40 <mpfr_rec_sqrt@@Base+0x930>
   52dc0:	ldp	x8, x9, [x23, #-8]
   52dc4:	ldur	x20, [x29, #-88]
   52dc8:	adds	x8, x9, x8, lsr #63
   52dcc:	str	x8, [x23]
   52dd0:	b.cc	52e40 <mpfr_rec_sqrt@@Base+0x930>  // b.lo, b.ul, b.last
   52dd4:	ldur	x8, [x29, #-56]
   52dd8:	mov	w9, #0x2                   	// #2
   52ddc:	add	x8, x8, x19
   52de0:	lsl	x8, x8, #3
   52de4:	sub	x8, x8, x26, lsl #3
   52de8:	add	x8, x28, x8
   52dec:	sub	x10, x9, #0x1
   52df0:	cmp	x10, x24
   52df4:	b.ge	52e28 <mpfr_rec_sqrt@@Base+0x918>  // b.tcont
   52df8:	lsl	x10, x9, #3
   52dfc:	ldr	x11, [x8, x10]
   52e00:	add	x9, x9, #0x1
   52e04:	adds	x11, x11, #0x1
   52e08:	str	x11, [x8, x10]
   52e0c:	b.cs	52dec <mpfr_rec_sqrt@@Base+0x8dc>  // b.hs, b.nlast
   52e10:	b	52e40 <mpfr_rec_sqrt@@Base+0x930>
   52e14:	ldr	x8, [x23]
   52e18:	mov	x9, #0xffffffffffffffff    	// #-1
   52e1c:	lsl	x9, x9, x22
   52e20:	and	x8, x8, x9
   52e24:	str	x8, [x23]
   52e28:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   52e2c:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   52e30:	add	x0, x0, #0x9a
   52e34:	add	x2, x2, #0xa5
   52e38:	mov	w1, #0x17e                 	// #382
   52e3c:	bl	cb20 <mpfr_assert_fail@plt>
   52e40:	cbz	x21, 52ea8 <mpfr_rec_sqrt@@Base+0x998>
   52e44:	subs	x21, x24, x20
   52e48:	b.eq	52f1c <mpfr_rec_sqrt@@Base+0xa0c>  // b.none
   52e4c:	add	x2, x23, x20, lsl #3
   52e50:	mov	x0, x27
   52e54:	mov	x1, x27
   52e58:	mov	x3, x21
   52e5c:	bl	beb0 <__gmpn_sub_n@plt>
   52e60:	ldur	x14, [x29, #-56]
   52e64:	cbz	x0, 52e98 <mpfr_rec_sqrt@@Base+0x988>
   52e68:	ldur	x8, [x29, #-64]
   52e6c:	sub	x8, x26, x8
   52e70:	add	x8, x25, x8, lsl #3
   52e74:	add	x9, x8, #0x8
   52e78:	mov	w8, #0x1                   	// #1
   52e7c:	cmp	x21, x14
   52e80:	b.gt	52e9c <mpfr_rec_sqrt@@Base+0x98c>
   52e84:	ldr	x10, [x9]
   52e88:	add	x21, x21, #0x1
   52e8c:	sub	x11, x10, #0x1
   52e90:	str	x11, [x9], #8
   52e94:	cbz	x10, 52e7c <mpfr_rec_sqrt@@Base+0x96c>
   52e98:	mov	x8, xzr
   52e9c:	cmp	x20, #0x1
   52ea0:	b.ge	52f2c <mpfr_rec_sqrt@@Base+0xa1c>  // b.tcont
   52ea4:	b	53020 <mpfr_rec_sqrt@@Base+0xb10>
   52ea8:	cmp	x20, #0x1
   52eac:	b.lt	52ec8 <mpfr_rec_sqrt@@Base+0x9b8>  // b.tstop
   52eb0:	cmp	x23, x25
   52eb4:	b.eq	52ec8 <mpfr_rec_sqrt@@Base+0x9b8>  // b.none
   52eb8:	lsl	x2, x20, #3
   52ebc:	mov	x0, x25
   52ec0:	mov	x1, x23
   52ec4:	bl	ba70 <memcpy@plt>
   52ec8:	ldur	x19, [x29, #-56]
   52ecc:	subs	x21, x24, x20
   52ed0:	b.eq	53024 <mpfr_rec_sqrt@@Base+0xb14>  // b.none
   52ed4:	add	x2, x23, x20, lsl #3
   52ed8:	mov	x0, x27
   52edc:	mov	x1, x27
   52ee0:	mov	x3, x21
   52ee4:	bl	c590 <__gmpn_add_n@plt>
   52ee8:	cbz	x0, 53024 <mpfr_rec_sqrt@@Base+0xb14>
   52eec:	ldur	x8, [x29, #-64]
   52ef0:	sub	x8, x26, x8
   52ef4:	add	x8, x25, x8, lsl #3
   52ef8:	add	x8, x8, #0x8
   52efc:	cmp	x21, x19
   52f00:	b.gt	53088 <mpfr_rec_sqrt@@Base+0xb78>
   52f04:	ldr	x9, [x8]
   52f08:	add	x21, x21, #0x1
   52f0c:	adds	x9, x9, #0x1
   52f10:	str	x9, [x8], #8
   52f14:	b.cs	52efc <mpfr_rec_sqrt@@Base+0x9ec>  // b.hs, b.nlast
   52f18:	b	53024 <mpfr_rec_sqrt@@Base+0xb14>
   52f1c:	ldur	x14, [x29, #-56]
   52f20:	mov	x8, xzr
   52f24:	cmp	x20, #0x1
   52f28:	b.lt	53020 <mpfr_rec_sqrt@@Base+0xb10>  // b.tstop
   52f2c:	sub	x8, x26, x14
   52f30:	cmp	x8, #0x4
   52f34:	b.cc	52f68 <mpfr_rec_sqrt@@Base+0xa58>  // b.lo, b.ul, b.last
   52f38:	add	x9, x14, x19
   52f3c:	add	x10, x28, x19, lsl #3
   52f40:	lsl	x9, x9, #3
   52f44:	add	x10, x10, #0x8
   52f48:	sub	x9, x9, x26, lsl #3
   52f4c:	cmp	x10, x25
   52f50:	add	x10, x9, x28
   52f54:	b.ls	5304c <mpfr_rec_sqrt@@Base+0xb3c>  // b.plast
   52f58:	add	x9, x25, x8, lsl #3
   52f5c:	add	x11, x10, #0x8
   52f60:	cmp	x11, x9
   52f64:	b.cs	5304c <mpfr_rec_sqrt@@Base+0xb3c>  // b.hs, b.nlast
   52f68:	mov	x9, xzr
   52f6c:	lsl	x10, x9, #3
   52f70:	add	x11, x14, x19
   52f74:	add	x8, x9, x14
   52f78:	add	x9, x25, x10
   52f7c:	add	x10, x10, x11, lsl #3
   52f80:	sub	x10, x10, x26, lsl #3
   52f84:	add	x10, x10, x28
   52f88:	sub	x8, x8, x26
   52f8c:	add	x10, x10, #0x8
   52f90:	ldr	x11, [x10], #8
   52f94:	adds	x8, x8, #0x1
   52f98:	mvn	x11, x11
   52f9c:	str	x11, [x9], #8
   52fa0:	b.cc	52f90 <mpfr_rec_sqrt@@Base+0xa80>  // b.lo, b.ul, b.last
   52fa4:	ldr	x8, [x25]
   52fa8:	adds	x8, x8, #0x1
   52fac:	str	x8, [x25]
   52fb0:	b.cc	52fdc <mpfr_rec_sqrt@@Base+0xacc>  // b.lo, b.ul, b.last
   52fb4:	mov	w8, #0x1                   	// #1
   52fb8:	mov	w9, #0x1                   	// #1
   52fbc:	cmp	x9, x26
   52fc0:	b.gt	52fe0 <mpfr_rec_sqrt@@Base+0xad0>
   52fc4:	lsl	x10, x9, #3
   52fc8:	ldr	x11, [x25, x10]
   52fcc:	add	x9, x9, #0x1
   52fd0:	adds	x11, x11, #0x1
   52fd4:	str	x11, [x25, x10]
   52fd8:	b.cs	52fbc <mpfr_rec_sqrt@@Base+0xaac>  // b.hs, b.nlast
   52fdc:	mov	x8, xzr
   52fe0:	ldr	x9, [x27]
   52fe4:	sub	x10, x9, #0x1
   52fe8:	str	x10, [x27]
   52fec:	cbnz	x9, 53018 <mpfr_rec_sqrt@@Base+0xb08>
   52ff0:	mov	w9, #0x1                   	// #1
   52ff4:	mov	w10, #0x1                   	// #1
   52ff8:	cmp	x10, x14
   52ffc:	b.gt	5301c <mpfr_rec_sqrt@@Base+0xb0c>
   53000:	lsl	x11, x10, #3
   53004:	ldr	x12, [x27, x11]
   53008:	add	x10, x10, #0x1
   5300c:	sub	x13, x12, #0x1
   53010:	str	x13, [x27, x11]
   53014:	cbz	x12, 52ff8 <mpfr_rec_sqrt@@Base+0xae8>
   53018:	mov	x9, xzr
   5301c:	sub	x8, x8, x9
   53020:	cbnz	x8, 53088 <mpfr_rec_sqrt@@Base+0xb78>
   53024:	ldur	x0, [x29, #-8]
   53028:	cbnz	x0, 530c8 <mpfr_rec_sqrt@@Base+0xbb8>
   5302c:	mov	sp, x29
   53030:	ldp	x20, x19, [sp, #80]
   53034:	ldp	x22, x21, [sp, #64]
   53038:	ldp	x24, x23, [sp, #48]
   5303c:	ldp	x26, x25, [sp, #32]
   53040:	ldp	x28, x27, [sp, #16]
   53044:	ldp	x29, x30, [sp], #96
   53048:	ret
   5304c:	and	x9, x8, #0xfffffffffffffffc
   53050:	add	x10, x10, #0x18
   53054:	add	x11, x25, #0x10
   53058:	mov	x12, x9
   5305c:	ldp	q0, q1, [x10, #-16]
   53060:	subs	x12, x12, #0x4
   53064:	add	x10, x10, #0x20
   53068:	mvn	v0.16b, v0.16b
   5306c:	mvn	v1.16b, v1.16b
   53070:	stp	q0, q1, [x11, #-16]
   53074:	add	x11, x11, #0x20
   53078:	b.ne	5305c <mpfr_rec_sqrt@@Base+0xb4c>  // b.any
   5307c:	cmp	x8, x9
   53080:	b.eq	52fa4 <mpfr_rec_sqrt@@Base+0xa94>  // b.none
   53084:	b	52f6c <mpfr_rec_sqrt@@Base+0xa5c>
   53088:	ldr	x8, [x25]
   5308c:	mov	w9, #0x1                   	// #1
   53090:	lsl	x9, x9, x22
   53094:	subs	x8, x8, x9
   53098:	str	x8, [x25]
   5309c:	b.cs	53024 <mpfr_rec_sqrt@@Base+0xb14>  // b.hs, b.nlast
   530a0:	mov	w8, #0x1                   	// #1
   530a4:	cmp	x8, x26
   530a8:	b.gt	53024 <mpfr_rec_sqrt@@Base+0xb14>
   530ac:	lsl	x9, x8, #3
   530b0:	ldr	x10, [x25, x9]
   530b4:	add	x8, x8, #0x1
   530b8:	sub	x11, x10, #0x1
   530bc:	str	x11, [x25, x9]
   530c0:	cbz	x10, 530a4 <mpfr_rec_sqrt@@Base+0xb94>
   530c4:	b	53024 <mpfr_rec_sqrt@@Base+0xb14>
   530c8:	bl	c400 <mpfr_tmp_free@plt>
   530cc:	b	5302c <mpfr_rec_sqrt@@Base+0xb1c>

00000000000530d0 <mpfr_min_prec@@Base>:
   530d0:	stp	x29, x30, [sp, #-32]!
   530d4:	ldr	x8, [x0, #16]
   530d8:	mov	x9, #0x4                   	// #4
   530dc:	movk	x9, #0x8000, lsl #48
   530e0:	str	x19, [sp, #16]
   530e4:	cmp	x8, x9
   530e8:	mov	x29, sp
   530ec:	b.lt	53128 <mpfr_min_prec@@Base+0x58>  // b.tstop
   530f0:	ldr	x8, [x0]
   530f4:	ldr	x0, [x0, #24]
   530f8:	mov	x1, xzr
   530fc:	sub	x9, x8, #0x1
   53100:	add	x8, x8, #0x3e
   53104:	cmp	x9, #0x0
   53108:	csel	x8, x8, x9, lt  // lt = tstop
   5310c:	and	x19, x8, #0xffffffffffffffc0
   53110:	bl	ca80 <__gmpn_scan1@plt>
   53114:	sub	x8, x19, x0
   53118:	add	x0, x8, #0x40
   5311c:	ldr	x19, [sp, #16]
   53120:	ldp	x29, x30, [sp], #32
   53124:	ret
   53128:	mov	x0, xzr
   5312c:	ldr	x19, [sp, #16]
   53130:	ldp	x29, x30, [sp], #32
   53134:	ret

0000000000053138 <mpfr_buildopt_tls_p@@Base>:
   53138:	mov	w0, #0x1                   	// #1
   5313c:	ret

0000000000053140 <mpfr_buildopt_float128_p@@Base>:
   53140:	mov	w0, wzr
   53144:	ret

0000000000053148 <mpfr_buildopt_decimal_p@@Base>:
   53148:	mov	w0, wzr
   5314c:	ret

0000000000053150 <mpfr_buildopt_gmpinternals_p@@Base>:
   53150:	mov	w0, wzr
   53154:	ret

0000000000053158 <mpfr_buildopt_sharedcache_p@@Base>:
   53158:	mov	w0, wzr
   5315c:	ret

0000000000053160 <mpfr_buildopt_tune_case@@Base>:
   53160:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   53164:	add	x0, x0, #0xad
   53168:	ret

000000000005316c <mpfr_digamma@@Base>:
   5316c:	sub	sp, sp, #0x170
   53170:	stp	x29, x30, [sp, #272]
   53174:	stp	x28, x27, [sp, #288]
   53178:	stp	x26, x25, [sp, #304]
   5317c:	stp	x24, x23, [sp, #320]
   53180:	stp	x22, x21, [sp, #336]
   53184:	stp	x20, x19, [sp, #352]
   53188:	ldr	x9, [x1, #16]
   5318c:	mov	x19, #0x2                   	// #2
   53190:	movk	x19, #0x8000, lsl #48
   53194:	add	x8, x19, #0x2
   53198:	mov	x28, x1
   5319c:	cmp	x9, x8
   531a0:	mov	x20, x0
   531a4:	add	x29, sp, #0x110
   531a8:	b.lt	53930 <mpfr_digamma@@Base+0x7c4>  // b.tstop
   531ac:	ldr	w8, [x28, #8]
   531b0:	mov	w25, w2
   531b4:	mrs	x24, tpidr_el0
   531b8:	tbnz	w8, #31, 532e0 <mpfr_digamma@@Base+0x174>
   531bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   531c0:	ldr	x1, [x0, #2640]
   531c4:	add	x0, x0, #0xa50
   531c8:	blr	x1
   531cc:	ldr	w26, [x24, x0]
   531d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   531d4:	ldr	x1, [x0, #2576]
   531d8:	add	x0, x0, #0xa10
   531dc:	blr	x1
   531e0:	ldr	x22, [x24, x0]
   531e4:	mov	x8, x0
   531e8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   531ec:	ldr	x1, [x0, #2608]
   531f0:	add	x0, x0, #0xa30
   531f4:	blr	x1
   531f8:	ldr	x23, [x24, x0]
   531fc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   53200:	str	x10, [x24, x8]
   53204:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   53208:	cmn	x9, #0x3
   5320c:	str	x8, [x24, x0]
   53210:	b.gt	53230 <mpfr_digamma@@Base+0xc4>
   53214:	ldr	x8, [x28]
   53218:	ldr	x10, [x20]
   5321c:	cmp	x8, x10
   53220:	csel	x8, x8, x10, gt
   53224:	neg	x8, x8, lsl #1
   53228:	cmp	x9, x8
   5322c:	b.le	53328 <mpfr_digamma@@Base+0x1bc>
   53230:	ldr	w8, [x28, #8]
   53234:	tbnz	w8, #31, 53310 <mpfr_digamma@@Base+0x1a4>
   53238:	tbnz	x9, #63, 53310 <mpfr_digamma@@Base+0x1a4>
   5323c:	stp	x23, x22, [sp, #24]
   53240:	ldr	x8, [x20]
   53244:	ldr	x10, [x28]
   53248:	add	x22, x8, #0xa
   5324c:	cmp	x10, x9
   53250:	csinc	x23, x9, x10, lt  // lt = tstop
   53254:	cmp	x22, x9
   53258:	b.ge	5335c <mpfr_digamma@@Base+0x1f0>  // b.tcont
   5325c:	add	x0, sp, #0x88
   53260:	mov	x1, x22
   53264:	bl	ca60 <mpfr_init2@plt>
   53268:	add	x0, sp, #0x88
   5326c:	mov	w2, #0x1                   	// #1
   53270:	mov	x1, x28
   53274:	bl	c0d0 <mpfr_log@plt>
   53278:	ldr	x8, [sp, #152]
   5327c:	add	x9, x19, #0x2
   53280:	cmp	x8, x9
   53284:	b.lt	53354 <mpfr_digamma@@Base+0x1e8>  // b.tstop
   53288:	ldr	x8, [sp, #136]
   5328c:	ldr	x9, [x20]
   53290:	ldr	x0, [sp, #160]
   53294:	sub	x10, x8, #0x1
   53298:	add	x8, x8, #0x3e
   5329c:	cmp	x10, #0x0
   532a0:	csel	x8, x8, x10, lt  // lt = tstop
   532a4:	cmp	w25, #0x0
   532a8:	asr	x8, x8, #6
   532ac:	add	x2, x9, #0xa
   532b0:	add	x1, x8, #0x1
   532b4:	cinc	x3, x9, eq  // eq = none
   532b8:	bl	c370 <mpfr_round_p@plt>
   532bc:	cbz	w0, 53354 <mpfr_digamma@@Base+0x1e8>
   532c0:	ldr	w3, [sp, #144]
   532c4:	add	x1, sp, #0x88
   532c8:	mov	x0, x20
   532cc:	mov	w2, w25
   532d0:	add	x22, sp, #0x88
   532d4:	bl	c690 <mpfr_set4@plt>
   532d8:	mov	w21, w0
   532dc:	b	5383c <mpfr_digamma@@Base+0x6d0>
   532e0:	mov	x0, x28
   532e4:	bl	c1a0 <mpfr_integer_p@plt>
   532e8:	cbz	w0, 5334c <mpfr_digamma@@Base+0x1e0>
   532ec:	str	x19, [x20, #16]
   532f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   532f4:	ldr	x1, [x0, #2640]
   532f8:	add	x0, x0, #0xa50
   532fc:	blr	x1
   53300:	ldr	w8, [x24, x0]
   53304:	mov	w21, wzr
   53308:	orr	w8, w8, #0x4
   5330c:	b	53908 <mpfr_digamma@@Base+0x79c>
   53310:	mov	x0, x20
   53314:	mov	x1, x28
   53318:	mov	w2, w25
   5331c:	bl	539ec <mpfr_digamma@@Base+0x880>
   53320:	mov	w21, w0
   53324:	b	538a0 <mpfr_digamma@@Base+0x734>
   53328:	ldr	w19, [x28, #8]
   5332c:	mov	x1, #0xffffffffffffffff    	// #-1
   53330:	mov	x0, x20
   53334:	mov	x2, x28
   53338:	mov	w3, w25
   5333c:	bl	c8a0 <mpfr_si_div@plt>
   53340:	cbz	w0, 5384c <mpfr_digamma@@Base+0x6e0>
   53344:	mov	w21, w0
   53348:	b	53888 <mpfr_digamma@@Base+0x71c>
   5334c:	ldr	x9, [x28, #16]
   53350:	b	531bc <mpfr_digamma@@Base+0x50>
   53354:	add	x0, sp, #0x88
   53358:	bl	c0b0 <mpfr_clear@plt>
   5335c:	add	x0, sp, #0x48
   53360:	mov	x1, x23
   53364:	str	w26, [sp, #8]
   53368:	str	x24, [sp, #16]
   5336c:	str	x20, [sp, #48]
   53370:	bl	ca60 <mpfr_init2@plt>
   53374:	add	x0, sp, #0x88
   53378:	mov	x1, x22
   5337c:	bl	ca60 <mpfr_init2@plt>
   53380:	add	x0, sp, #0x68
   53384:	mov	x1, x22
   53388:	bl	ca60 <mpfr_init2@plt>
   5338c:	cmp	w25, #0x0
   53390:	mov	w19, #0x40                  	// #64
   53394:	mov	w26, #0xa                   	// #10
   53398:	orr	x24, xzr, #0x4
   5339c:	cset	w8, eq  // eq = none
   533a0:	str	w25, [sp, #12]
   533a4:	str	x8, [sp, #40]
   533a8:	str	x28, [sp, #56]
   533ac:	add	x8, x22, #0x3
   533b0:	add	x9, x22, #0x6
   533b4:	cmp	x8, #0x0
   533b8:	ldr	w3, [x28, #8]
   533bc:	csel	x8, x9, x8, lt  // lt = tstop
   533c0:	asr	x8, x8, #2
   533c4:	cmp	x8, #0x2
   533c8:	mov	w9, #0x2                   	// #2
   533cc:	add	x0, sp, #0x48
   533d0:	mov	x1, x28
   533d4:	mov	w2, wzr
   533d8:	csel	x27, x8, x9, hi  // hi = pmore
   533dc:	bl	c690 <mpfr_set4@plt>
   533e0:	mov	w8, #0x1                   	// #1
   533e4:	str	w8, [sp, #112]
   533e8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   533ec:	add	x0, sp, #0x48
   533f0:	mov	x1, x27
   533f4:	mov	x2, xzr
   533f8:	str	x8, [sp, #120]
   533fc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   53400:	tbz	w0, #31, 534a8 <mpfr_digamma@@Base+0x33c>
   53404:	mov	x21, xzr
   53408:	b	53420 <mpfr_digamma@@Base+0x2b4>
   5340c:	add	x0, sp, #0x48
   53410:	mov	x1, x27
   53414:	mov	x2, xzr
   53418:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   5341c:	tbz	w0, #31, 53484 <mpfr_digamma@@Base+0x318>
   53420:	add	x0, sp, #0x88
   53424:	add	x2, sp, #0x48
   53428:	mov	w1, #0x1                   	// #1
   5342c:	mov	w3, wzr
   53430:	add	x21, x21, #0x1
   53434:	bl	c2f0 <mpfr_ui_div@plt>
   53438:	add	x0, sp, #0x68
   5343c:	add	x1, sp, #0x68
   53440:	add	x2, sp, #0x88
   53444:	mov	w3, wzr
   53448:	bl	c1e0 <mpfr_add@plt>
   5344c:	add	x0, sp, #0x48
   53450:	add	x1, sp, #0x48
   53454:	mov	w2, #0x1                   	// #1
   53458:	mov	w3, #0x1                   	// #1
   5345c:	bl	c270 <mpfr_add_ui@plt>
   53460:	cbz	w0, 5340c <mpfr_digamma@@Base+0x2a0>
   53464:	add	x23, x23, #0x1
   53468:	add	x0, sp, #0x48
   5346c:	mov	w2, #0x1                   	// #1
   53470:	mov	x1, x23
   53474:	bl	c960 <mpfr_prec_round@plt>
   53478:	add	x0, sp, #0x48
   5347c:	bl	c160 <mpfr_nextabove@plt>
   53480:	b	5340c <mpfr_digamma@@Base+0x2a0>
   53484:	cmp	x21, #0x2
   53488:	b.cc	534a8 <mpfr_digamma@@Base+0x33c>  // b.lo, b.ul, b.last
   5348c:	mov	x20, xzr
   53490:	add	x8, x21, #0x1
   53494:	add	x20, x20, #0x1
   53498:	cmp	x8, #0x3
   5349c:	lsr	x21, x8, #1
   534a0:	b.hi	53490 <mpfr_digamma@@Base+0x324>  // b.pmore
   534a4:	b	534ac <mpfr_digamma@@Base+0x340>
   534a8:	mov	x20, xzr
   534ac:	ldr	w8, [sp, #80]
   534b0:	ldr	x27, [sp, #136]
   534b4:	cmp	w8, #0x1
   534b8:	b.lt	537c8 <mpfr_digamma@@Base+0x65c>  // b.tstop
   534bc:	ldr	x8, [sp, #88]
   534c0:	cmp	x8, #0x1
   534c4:	b.le	537c8 <mpfr_digamma@@Base+0x65c>
   534c8:	sub	x0, x29, #0x28
   534cc:	mov	x1, x27
   534d0:	str	x19, [sp, #64]
   534d4:	bl	ca60 <mpfr_init2@plt>
   534d8:	sub	x0, x29, #0x48
   534dc:	mov	x1, x27
   534e0:	bl	ca60 <mpfr_init2@plt>
   534e4:	sub	x0, x29, #0x68
   534e8:	mov	x1, x27
   534ec:	bl	ca60 <mpfr_init2@plt>
   534f0:	add	x0, sp, #0x88
   534f4:	add	x1, sp, #0x48
   534f8:	mov	w2, wzr
   534fc:	bl	c0d0 <mpfr_log@plt>
   53500:	sub	x0, x29, #0x28
   53504:	add	x2, sp, #0x48
   53508:	mov	w1, #0x1                   	// #1
   5350c:	mov	w3, wzr
   53510:	bl	c2f0 <mpfr_ui_div@plt>
   53514:	sub	x0, x29, #0x28
   53518:	sub	x1, x29, #0x28
   5351c:	mov	w2, #0x1                   	// #1
   53520:	mov	w3, wzr
   53524:	bl	c8f0 <mpfr_div_2ui@plt>
   53528:	add	x0, sp, #0x88
   5352c:	add	x1, sp, #0x88
   53530:	sub	x2, x29, #0x28
   53534:	mov	w3, wzr
   53538:	bl	bbc0 <mpfr_sub@plt>
   5353c:	sub	x0, x29, #0x68
   53540:	add	x1, sp, #0x48
   53544:	add	x2, sp, #0x48
   53548:	mov	w3, #0x1                   	// #1
   5354c:	bl	bda0 <mpfr_mul@plt>
   53550:	sub	x0, x29, #0x68
   53554:	sub	x2, x29, #0x68
   53558:	mov	w1, #0x1                   	// #1
   5355c:	mov	w3, #0x2                   	// #2
   53560:	bl	c2f0 <mpfr_ui_div@plt>
   53564:	sub	x0, x29, #0x28
   53568:	mov	w1, #0x1                   	// #1
   5356c:	mov	x2, xzr
   53570:	mov	w3, wzr
   53574:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   53578:	mov	w21, #0x2                   	// #2
   5357c:	mov	w28, #0x1                   	// #1
   53580:	b	53590 <mpfr_digamma@@Base+0x424>
   53584:	add	x8, x8, x9
   53588:	add	x21, x8, #0x1
   5358c:	add	x28, x28, #0x1
   53590:	sub	x0, x29, #0x28
   53594:	sub	x1, x29, #0x28
   53598:	sub	x2, x29, #0x68
   5359c:	mov	w3, #0x2                   	// #2
   535a0:	bl	bda0 <mpfr_mul@plt>
   535a4:	lsl	x25, x28, #1
   535a8:	sub	x0, x29, #0x28
   535ac:	sub	x1, x29, #0x28
   535b0:	mov	w3, #0x2                   	// #2
   535b4:	mov	x2, x25
   535b8:	bl	cc40 <mpfr_div_ui@plt>
   535bc:	mov	w2, #0x1                   	// #1
   535c0:	bfi	x2, x28, #1, #63
   535c4:	sub	x0, x29, #0x28
   535c8:	sub	x1, x29, #0x28
   535cc:	mov	w3, #0x2                   	// #2
   535d0:	bl	cc40 <mpfr_div_ui@plt>
   535d4:	sub	x0, x29, #0x48
   535d8:	sub	x1, x29, #0x28
   535dc:	mov	w3, #0x2                   	// #2
   535e0:	mov	x2, x25
   535e4:	bl	cc40 <mpfr_div_ui@plt>
   535e8:	mov	x0, x28
   535ec:	bl	c820 <mpfr_bernoulli_cache@plt>
   535f0:	mov	x2, x0
   535f4:	sub	x0, x29, #0x48
   535f8:	sub	x1, x29, #0x48
   535fc:	mov	w3, #0x2                   	// #2
   53600:	bl	c4c0 <mpfr_mul_z@plt>
   53604:	ldr	x25, [sp, #152]
   53608:	ldur	x19, [x29, #-56]
   5360c:	sub	x8, x25, x27
   53610:	cmp	x19, x8
   53614:	b.lt	5366c <mpfr_digamma@@Base+0x500>  // b.tstop
   53618:	add	x0, sp, #0x88
   5361c:	add	x1, sp, #0x88
   53620:	sub	x2, x29, #0x48
   53624:	mov	w3, wzr
   53628:	bl	bbc0 <mpfr_sub@plt>
   5362c:	ldr	x8, [sp, #152]
   53630:	madd	x9, x28, x26, x24
   53634:	subs	x8, x25, x8
   53638:	csel	x8, x8, xzr, gt
   5363c:	cmp	x19, x25
   53640:	lsl	x8, x21, x8
   53644:	b.ge	53584 <mpfr_digamma@@Base+0x418>  // b.tcont
   53648:	sub	x10, x25, x19
   5364c:	add	x11, x9, #0x1
   53650:	add	x12, x9, #0x2
   53654:	cmp	x11, #0x0
   53658:	csinc	x9, x12, x9, lt  // lt = tstop
   5365c:	subs	x10, x10, #0x1
   53660:	asr	x9, x9, #1
   53664:	b.ne	5364c <mpfr_digamma@@Base+0x4e0>  // b.any
   53668:	b	53584 <mpfr_digamma@@Base+0x418>
   5366c:	sub	x0, x29, #0x28
   53670:	bl	c0b0 <mpfr_clear@plt>
   53674:	sub	x0, x29, #0x48
   53678:	bl	c0b0 <mpfr_clear@plt>
   5367c:	sub	x0, x29, #0x68
   53680:	bl	c0b0 <mpfr_clear@plt>
   53684:	cmp	x21, #0x2
   53688:	b.lt	536b8 <mpfr_digamma@@Base+0x54c>  // b.tstop
   5368c:	ldr	x28, [sp, #56]
   53690:	mov	x25, xzr
   53694:	add	x8, x21, #0x1
   53698:	add	x9, x21, #0x2
   5369c:	cmp	x8, #0x0
   536a0:	csinc	x8, x9, x21, lt  // lt = tstop
   536a4:	cmp	x21, #0x2
   536a8:	asr	x21, x8, #1
   536ac:	add	x25, x25, #0x1
   536b0:	b.gt	53694 <mpfr_digamma@@Base+0x528>
   536b4:	b	536c0 <mpfr_digamma@@Base+0x554>
   536b8:	ldr	x28, [sp, #56]
   536bc:	mov	x25, xzr
   536c0:	ldr	x19, [sp, #152]
   536c4:	add	x0, sp, #0x88
   536c8:	add	x1, sp, #0x88
   536cc:	add	x2, sp, #0x68
   536d0:	mov	w3, wzr
   536d4:	bl	bbc0 <mpfr_sub@plt>
   536d8:	ldr	x8, [sp, #152]
   536dc:	ldr	x9, [sp, #120]
   536e0:	subs	x10, x19, x8
   536e4:	csel	x10, x10, xzr, gt
   536e8:	subs	x11, x9, x8
   536ec:	add	x9, x10, x25
   536f0:	csel	x10, x11, xzr, gt
   536f4:	add	x10, x10, x20
   536f8:	cmp	x9, x10
   536fc:	b.le	5371c <mpfr_digamma@@Base+0x5b0>
   53700:	mov	x19, #0x2                   	// #2
   53704:	add	x9, x9, #0x1
   53708:	movk	x19, #0x8000, lsl #48
   5370c:	add	x10, x19, #0x2
   53710:	cmp	x8, x10
   53714:	b.ge	5374c <mpfr_digamma@@Base+0x5e0>  // b.tcont
   53718:	b	53788 <mpfr_digamma@@Base+0x61c>
   5371c:	mov	x19, #0x2                   	// #2
   53720:	movk	x19, #0x8000, lsl #48
   53724:	b.ne	5373c <mpfr_digamma@@Base+0x5d0>  // b.any
   53728:	add	x9, x9, #0x2
   5372c:	add	x10, x19, #0x2
   53730:	cmp	x8, x10
   53734:	b.ge	5374c <mpfr_digamma@@Base+0x5e0>  // b.tcont
   53738:	b	53788 <mpfr_digamma@@Base+0x61c>
   5373c:	add	x9, x10, #0x1
   53740:	add	x10, x19, #0x2
   53744:	cmp	x8, x10
   53748:	b.lt	53788 <mpfr_digamma@@Base+0x61c>  // b.tstop
   5374c:	ldr	x8, [sp, #136]
   53750:	sub	x2, x22, x9
   53754:	ldr	x9, [sp, #48]
   53758:	ldr	x0, [sp, #160]
   5375c:	sub	x10, x8, #0x1
   53760:	add	x8, x8, #0x3e
   53764:	cmp	x10, #0x0
   53768:	csel	x8, x8, x10, lt  // lt = tstop
   5376c:	asr	x8, x8, #6
   53770:	ldr	x9, [x9]
   53774:	add	x1, x8, #0x1
   53778:	ldr	x8, [sp, #40]
   5377c:	add	x3, x9, x8
   53780:	bl	c370 <mpfr_round_p@plt>
   53784:	cbnz	w0, 53800 <mpfr_digamma@@Base+0x694>
   53788:	sub	x8, x19, x22
   5378c:	ldr	x19, [sp, #64]
   53790:	sub	x8, x8, #0x103
   53794:	cmp	x19, x8
   53798:	b.gt	537e4 <mpfr_digamma@@Base+0x678>
   5379c:	add	x22, x22, x19
   537a0:	cmp	x22, #0x0
   537a4:	cinc	x8, x22, lt  // lt = tstop
   537a8:	add	x0, sp, #0x88
   537ac:	mov	x1, x22
   537b0:	asr	x19, x8, #1
   537b4:	bl	bf20 <mpfr_set_prec@plt>
   537b8:	add	x0, sp, #0x68
   537bc:	mov	x1, x22
   537c0:	bl	bf20 <mpfr_set_prec@plt>
   537c4:	b	533ac <mpfr_digamma@@Base+0x240>
   537c8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   537cc:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   537d0:	mov	w1, #0x27                  	// #39
   537d4:	add	x0, x0, #0xb5
   537d8:	add	x2, x2, #0xc9
   537dc:	bl	cb20 <mpfr_assert_fail@plt>
   537e0:	b	534c8 <mpfr_digamma@@Base+0x35c>
   537e4:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   537e8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   537ec:	mov	w1, #0x11a                 	// #282
   537f0:	add	x0, x0, #0xb5
   537f4:	add	x2, x2, #0xcf6
   537f8:	bl	cb20 <mpfr_assert_fail@plt>
   537fc:	b	5379c <mpfr_digamma@@Base+0x630>
   53800:	ldr	x20, [sp, #48]
   53804:	ldr	w25, [sp, #12]
   53808:	ldr	w3, [sp, #144]
   5380c:	add	x1, sp, #0x88
   53810:	mov	x0, x20
   53814:	mov	w2, w25
   53818:	add	x22, sp, #0x48
   5381c:	bl	c690 <mpfr_set4@plt>
   53820:	mov	w21, w0
   53824:	add	x0, sp, #0x88
   53828:	bl	c0b0 <mpfr_clear@plt>
   5382c:	add	x0, sp, #0x68
   53830:	bl	c0b0 <mpfr_clear@plt>
   53834:	ldr	x24, [sp, #16]
   53838:	ldr	w26, [sp, #8]
   5383c:	mov	x0, x22
   53840:	bl	c0b0 <mpfr_clear@plt>
   53844:	ldp	x23, x22, [sp, #24]
   53848:	b	538a0 <mpfr_digamma@@Base+0x734>
   5384c:	cmp	w19, #0x0
   53850:	mov	w8, #0x2                   	// #2
   53854:	cinc	w9, w8, gt
   53858:	cinc	w8, w8, le
   5385c:	cmp	w25, #0x4
   53860:	csel	w9, w9, w25, eq  // eq = none
   53864:	cmp	w9, #0x1
   53868:	csel	w25, w8, w9, eq  // eq = none
   5386c:	cmp	w25, #0x3
   53870:	b.ne	53884 <mpfr_digamma@@Base+0x718>  // b.any
   53874:	mov	x0, x20
   53878:	bl	be20 <mpfr_nextbelow@plt>
   5387c:	mov	w21, #0xffffffff            	// #-1
   53880:	b	53888 <mpfr_digamma@@Base+0x71c>
   53884:	mov	w21, #0x1                   	// #1
   53888:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5388c:	ldr	x1, [x0, #2640]
   53890:	add	x0, x0, #0xa50
   53894:	blr	x1
   53898:	ldr	w8, [x24, x0]
   5389c:	orr	w26, w8, w26
   538a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   538a4:	ldr	x1, [x0, #2640]
   538a8:	add	x0, x0, #0xa50
   538ac:	blr	x1
   538b0:	str	w26, [x24, x0]
   538b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   538b8:	ldr	x1, [x0, #2576]
   538bc:	add	x0, x0, #0xa10
   538c0:	blr	x1
   538c4:	str	x22, [x24, x0]
   538c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   538cc:	ldr	x1, [x0, #2608]
   538d0:	add	x0, x0, #0xa30
   538d4:	blr	x1
   538d8:	str	x23, [x24, x0]
   538dc:	ldr	x8, [x20, #16]
   538e0:	cmp	x8, x23
   538e4:	b.gt	53988 <mpfr_digamma@@Base+0x81c>
   538e8:	cmp	x8, x22
   538ec:	b.lt	53988 <mpfr_digamma@@Base+0x81c>  // b.tstop
   538f0:	cbz	w21, 5390c <mpfr_digamma@@Base+0x7a0>
   538f4:	orr	w8, w26, #0x8
   538f8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   538fc:	ldr	x1, [x0, #2640]
   53900:	add	x0, x0, #0xa50
   53904:	blr	x1
   53908:	str	w8, [x24, x0]
   5390c:	mov	w0, w21
   53910:	ldp	x20, x19, [sp, #352]
   53914:	ldp	x22, x21, [sp, #336]
   53918:	ldp	x24, x23, [sp, #320]
   5391c:	ldp	x26, x25, [sp, #304]
   53920:	ldp	x28, x27, [sp, #288]
   53924:	ldp	x29, x30, [sp, #272]
   53928:	add	sp, sp, #0x170
   5392c:	ret
   53930:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   53934:	cmp	x9, x8
   53938:	b.eq	539a0 <mpfr_digamma@@Base+0x834>  // b.none
   5393c:	mov	x8, #0x2                   	// #2
   53940:	movk	x8, #0x8000, lsl #48
   53944:	cmp	x9, x8
   53948:	b.eq	539c0 <mpfr_digamma@@Base+0x854>  // b.none
   5394c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   53950:	str	x8, [x20, #16]
   53954:	ldr	w8, [x28, #8]
   53958:	neg	w8, w8
   5395c:	str	w8, [x20, #8]
   53960:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53964:	ldr	x1, [x0, #2640]
   53968:	add	x0, x0, #0xa50
   5396c:	blr	x1
   53970:	mrs	x8, tpidr_el0
   53974:	ldr	w9, [x8, x0]
   53978:	mov	w21, wzr
   5397c:	orr	w9, w9, #0x20
   53980:	str	w9, [x8, x0]
   53984:	b	5390c <mpfr_digamma@@Base+0x7a0>
   53988:	mov	x0, x20
   5398c:	mov	w1, w21
   53990:	mov	w2, w25
   53994:	bl	cb10 <mpfr_check_range@plt>
   53998:	mov	w21, w0
   5399c:	b	5390c <mpfr_digamma@@Base+0x7a0>
   539a0:	ldr	w8, [x28, #8]
   539a4:	cmp	w8, #0x1
   539a8:	b.lt	539c0 <mpfr_digamma@@Base+0x854>  // b.tstop
   539ac:	str	w8, [x20, #8]
   539b0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   539b4:	mov	w21, wzr
   539b8:	str	x8, [x20, #16]
   539bc:	b	5390c <mpfr_digamma@@Base+0x7a0>
   539c0:	str	x19, [x20, #16]
   539c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   539c8:	ldr	x1, [x0, #2640]
   539cc:	add	x0, x0, #0xa50
   539d0:	blr	x1
   539d4:	mrs	x8, tpidr_el0
   539d8:	ldr	w9, [x8, x0]
   539dc:	mov	w21, wzr
   539e0:	orr	w9, w9, #0x4
   539e4:	str	w9, [x8, x0]
   539e8:	b	5390c <mpfr_digamma@@Base+0x7a0>
   539ec:	sub	sp, sp, #0xc0
   539f0:	stp	x29, x30, [sp, #96]
   539f4:	stp	x28, x27, [sp, #112]
   539f8:	stp	x26, x25, [sp, #128]
   539fc:	stp	x24, x23, [sp, #144]
   53a00:	stp	x22, x21, [sp, #160]
   53a04:	stp	x20, x19, [sp, #176]
   53a08:	ldr	x23, [x0]
   53a0c:	ldr	x8, [x1, #16]
   53a10:	ldr	x9, [x1]
   53a14:	mov	x21, x1
   53a18:	mov	x19, x0
   53a1c:	mov	w20, w2
   53a20:	add	x29, sp, #0x60
   53a24:	tbnz	x8, #63, 53a34 <mpfr_digamma@@Base+0x8c8>
   53a28:	cmp	x8, x9
   53a2c:	csinc	x1, x8, x9, gt
   53a30:	b	53a3c <mpfr_digamma@@Base+0x8d0>
   53a34:	sub	x8, x9, x8
   53a38:	add	x1, x8, #0x1
   53a3c:	add	x0, sp, #0x20
   53a40:	bl	ca60 <mpfr_init2@plt>
   53a44:	add	x0, sp, #0x20
   53a48:	mov	w1, #0x1                   	// #1
   53a4c:	mov	x2, x21
   53a50:	mov	w3, wzr
   53a54:	bl	ca30 <mpfr_ui_sub@plt>
   53a58:	cbnz	w0, 53c98 <mpfr_digamma@@Base+0xb2c>
   53a5c:	add	x0, sp, #0x20
   53a60:	add	x1, sp, #0x20
   53a64:	mov	w2, #0x1                   	// #1
   53a68:	mov	w3, wzr
   53a6c:	bl	c2c0 <mpfr_mul_2ui@plt>
   53a70:	add	x0, sp, #0x20
   53a74:	bl	c1a0 <mpfr_integer_p@plt>
   53a78:	mov	w22, w0
   53a7c:	add	x0, sp, #0x20
   53a80:	add	x1, sp, #0x20
   53a84:	mov	w2, #0x1                   	// #1
   53a88:	mov	w3, wzr
   53a8c:	bl	c8f0 <mpfr_div_2ui@plt>
   53a90:	cbz	w22, 53aac <mpfr_digamma@@Base+0x940>
   53a94:	add	x1, sp, #0x20
   53a98:	mov	x0, x19
   53a9c:	mov	w2, w20
   53aa0:	bl	c9d0 <mpfr_digamma@plt>
   53aa4:	mov	w19, w0
   53aa8:	b	53c6c <mpfr_digamma@@Base+0xb00>
   53aac:	add	x22, x23, #0xa
   53ab0:	mov	x25, #0xfffffffffffffeff    	// #-257
   53ab4:	sub	x0, x29, #0x20
   53ab8:	mov	x1, x22
   53abc:	movk	x25, #0x7fff, lsl #48
   53ac0:	bl	ca60 <mpfr_init2@plt>
   53ac4:	mov	x0, sp
   53ac8:	mov	x1, x22
   53acc:	bl	ca60 <mpfr_init2@plt>
   53ad0:	cmp	w20, #0x0
   53ad4:	mov	w27, #0x40                  	// #64
   53ad8:	mrs	x26, tpidr_el0
   53adc:	cset	w28, eq  // eq = none
   53ae0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53ae4:	ldr	x1, [x0, #2688]
   53ae8:	add	x0, x0, #0xa80
   53aec:	blr	x1
   53af0:	add	x1, x26, x0
   53af4:	mov	x0, sp
   53af8:	mov	w2, wzr
   53afc:	bl	c380 <mpfr_cache@plt>
   53b00:	sub	x0, x29, #0x20
   53b04:	mov	x1, sp
   53b08:	mov	x2, x21
   53b0c:	mov	w3, wzr
   53b10:	bl	bda0 <mpfr_mul@plt>
   53b14:	ldur	x8, [x29, #-16]
   53b18:	sub	x0, x29, #0x20
   53b1c:	sub	x1, x29, #0x20
   53b20:	mov	w2, wzr
   53b24:	sub	x23, x8, x22
   53b28:	bl	bad0 <mpfr_cot@plt>
   53b2c:	ldur	x8, [x29, #-16]
   53b30:	sub	x0, x29, #0x20
   53b34:	sub	x1, x29, #0x20
   53b38:	mov	x2, sp
   53b3c:	lsl	x9, x8, #1
   53b40:	cmp	x8, #0x0
   53b44:	csel	x9, x9, xzr, gt
   53b48:	add	x9, x23, x9
   53b4c:	sub	x8, x22, x8
   53b50:	mov	w3, wzr
   53b54:	add	x23, x9, x8
   53b58:	bl	bda0 <mpfr_mul@plt>
   53b5c:	mov	x0, sp
   53b60:	add	x1, sp, #0x20
   53b64:	mov	w2, wzr
   53b68:	bl	c9d0 <mpfr_digamma@plt>
   53b6c:	ldr	x24, [sp, #16]
   53b70:	mov	x0, sp
   53b74:	mov	x1, sp
   53b78:	sub	x2, x29, #0x20
   53b7c:	mov	w3, wzr
   53b80:	bl	bbc0 <mpfr_sub@plt>
   53b84:	ldr	x8, [sp, #16]
   53b88:	ldur	x9, [x29, #-16]
   53b8c:	add	x10, x25, #0x105
   53b90:	mvn	x11, x8
   53b94:	subs	x9, x9, x8
   53b98:	csel	x9, x9, xzr, gt
   53b9c:	cmp	x8, x10
   53ba0:	add	x8, x23, x9
   53ba4:	add	x8, x8, #0x3
   53ba8:	add	x9, x24, x11
   53bac:	b.lt	53bf0 <mpfr_digamma@@Base+0xa84>  // b.tstop
   53bb0:	ldr	x10, [sp]
   53bb4:	cmp	x9, x8
   53bb8:	csinc	x8, x9, x8, gt
   53bbc:	mvn	x8, x8
   53bc0:	ldr	x11, [x19]
   53bc4:	add	x2, x22, x8
   53bc8:	sub	x8, x10, #0x1
   53bcc:	ldr	x0, [sp, #24]
   53bd0:	add	x9, x10, #0x3e
   53bd4:	cmp	x8, #0x0
   53bd8:	csel	x8, x9, x8, lt  // lt = tstop
   53bdc:	asr	x8, x8, #6
   53be0:	add	x1, x8, #0x1
   53be4:	add	x3, x11, x28
   53be8:	bl	c370 <mpfr_round_p@plt>
   53bec:	cbnz	w0, 53c44 <mpfr_digamma@@Base+0xad8>
   53bf0:	sub	x8, x25, x22
   53bf4:	cmp	x27, x8
   53bf8:	b.gt	53c28 <mpfr_digamma@@Base+0xabc>
   53bfc:	add	x22, x27, x22
   53c00:	cmp	x22, #0x0
   53c04:	cinc	x8, x22, lt  // lt = tstop
   53c08:	sub	x0, x29, #0x20
   53c0c:	mov	x1, x22
   53c10:	asr	x27, x8, #1
   53c14:	bl	bf20 <mpfr_set_prec@plt>
   53c18:	mov	x0, sp
   53c1c:	mov	x1, x22
   53c20:	bl	bf20 <mpfr_set_prec@plt>
   53c24:	b	53ae0 <mpfr_digamma@@Base+0x974>
   53c28:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   53c2c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x1b84>
   53c30:	mov	w1, #0xb4                  	// #180
   53c34:	add	x0, x0, #0xb5
   53c38:	add	x2, x2, #0xcf6
   53c3c:	bl	cb20 <mpfr_assert_fail@plt>
   53c40:	b	53bfc <mpfr_digamma@@Base+0xa90>
   53c44:	ldr	w3, [sp, #8]
   53c48:	mov	x1, sp
   53c4c:	mov	x0, x19
   53c50:	mov	w2, w20
   53c54:	bl	c690 <mpfr_set4@plt>
   53c58:	mov	w19, w0
   53c5c:	sub	x0, x29, #0x20
   53c60:	bl	c0b0 <mpfr_clear@plt>
   53c64:	mov	x0, sp
   53c68:	bl	c0b0 <mpfr_clear@plt>
   53c6c:	add	x0, sp, #0x20
   53c70:	bl	c0b0 <mpfr_clear@plt>
   53c74:	mov	w0, w19
   53c78:	ldp	x20, x19, [sp, #176]
   53c7c:	ldp	x22, x21, [sp, #160]
   53c80:	ldp	x24, x23, [sp, #144]
   53c84:	ldp	x26, x25, [sp, #128]
   53c88:	ldp	x28, x27, [sp, #112]
   53c8c:	ldp	x29, x30, [sp, #96]
   53c90:	add	sp, sp, #0xc0
   53c94:	ret
   53c98:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   53c9c:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   53ca0:	add	x0, x0, #0xb5
   53ca4:	add	x2, x2, #0xbf
   53ca8:	mov	w1, #0x88                  	// #136
   53cac:	bl	cb20 <mpfr_assert_fail@plt>
   53cb0:	b	53a5c <mpfr_digamma@@Base+0x8f0>

0000000000053cb4 <mpfr_bernoulli_cache@@Base>:
   53cb4:	sub	sp, sp, #0xf0
   53cb8:	str	d8, [sp, #128]
   53cbc:	stp	x29, x30, [sp, #144]
   53cc0:	stp	x28, x27, [sp, #160]
   53cc4:	stp	x26, x25, [sp, #176]
   53cc8:	stp	x24, x23, [sp, #192]
   53ccc:	stp	x22, x21, [sp, #208]
   53cd0:	stp	x20, x19, [sp, #224]
   53cd4:	add	x29, sp, #0x80
   53cd8:	mov	x21, x0
   53cdc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53ce0:	ldr	x1, [x0, #2512]
   53ce4:	add	x0, x0, #0x9d0
   53ce8:	blr	x1
   53cec:	mrs	x26, tpidr_el0
   53cf0:	ldr	x27, [x26, x0]
   53cf4:	cmp	x27, x21
   53cf8:	b.hi	53d90 <mpfr_bernoulli_cache@@Base+0xdc>  // b.pmore
   53cfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53d00:	ldr	x1, [x0, #2496]
   53d04:	add	x0, x0, #0x9c0
   53d08:	blr	x1
   53d0c:	ldr	x8, [x26, x0]
   53d10:	cbz	x8, 53dcc <mpfr_bernoulli_cache@@Base+0x118>
   53d14:	cmp	x8, x21
   53d18:	b.hi	53d70 <mpfr_bernoulli_cache@@Base+0xbc>  // b.pmore
   53d1c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53d20:	ldr	x1, [x0, #2528]
   53d24:	add	x0, x0, #0x9e0
   53d28:	blr	x1
   53d2c:	mov	x20, x0
   53d30:	ldr	x0, [x26, x0]
   53d34:	add	x19, x21, x21, lsr #2
   53d38:	lsl	x1, x8, #4
   53d3c:	lsl	x2, x19, #4
   53d40:	bl	c200 <mpfr_reallocate_func@plt>
   53d44:	str	x0, [x26, x20]
   53d48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53d4c:	ldr	x1, [x0, #2496]
   53d50:	add	x0, x0, #0x9c0
   53d54:	blr	x1
   53d58:	str	x19, [x26, x0]
   53d5c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53d60:	ldr	x1, [x0, #2512]
   53d64:	add	x0, x0, #0x9d0
   53d68:	blr	x1
   53d6c:	ldr	x27, [x26, x0]
   53d70:	cmp	x27, x21
   53d74:	b.ls	53e28 <mpfr_bernoulli_cache@@Base+0x174>  // b.plast
   53d78:	add	x8, x21, #0x1
   53d7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53d80:	ldr	x1, [x0, #2512]
   53d84:	add	x0, x0, #0x9d0
   53d88:	blr	x1
   53d8c:	str	x8, [x26, x0]
   53d90:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53d94:	ldr	x1, [x0, #2528]
   53d98:	add	x0, x0, #0x9e0
   53d9c:	blr	x1
   53da0:	ldr	x8, [x26, x0]
   53da4:	ldp	x20, x19, [sp, #224]
   53da8:	ldp	x24, x23, [sp, #192]
   53dac:	ldp	x26, x25, [sp, #176]
   53db0:	add	x0, x8, x21, lsl #4
   53db4:	ldp	x22, x21, [sp, #208]
   53db8:	ldp	x28, x27, [sp, #160]
   53dbc:	ldp	x29, x30, [sp, #144]
   53dc0:	ldr	d8, [sp, #128]
   53dc4:	add	sp, sp, #0xf0
   53dc8:	ret
   53dcc:	add	x8, x21, x21, lsr #2
   53dd0:	cmp	x8, #0x10
   53dd4:	mov	w9, #0x10                  	// #16
   53dd8:	csel	x8, x8, x9, hi  // hi = pmore
   53ddc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53de0:	ldr	x1, [x0, #2496]
   53de4:	add	x0, x0, #0x9c0
   53de8:	blr	x1
   53dec:	str	x8, [x26, x0]
   53df0:	lsl	x0, x8, #4
   53df4:	bl	ccd0 <mpfr_allocate_func@plt>
   53df8:	mov	x8, x0
   53dfc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53e00:	ldr	x1, [x0, #2528]
   53e04:	add	x0, x0, #0x9e0
   53e08:	blr	x1
   53e0c:	str	x8, [x26, x0]
   53e10:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53e14:	ldr	x1, [x0, #2512]
   53e18:	add	x0, x0, #0x9d0
   53e1c:	blr	x1
   53e20:	mov	x27, xzr
   53e24:	str	xzr, [x26, x0]
   53e28:	fmov	d8, #7.000000000000000000e+00
   53e2c:	str	x21, [x29, #8]
   53e30:	b	53e4c <mpfr_bernoulli_cache@@Base+0x198>
   53e34:	add	x0, sp, #0x40
   53e38:	bl	c1b0 <mpfr_mpz_clear@plt>
   53e3c:	ldr	x21, [x29, #8]
   53e40:	add	x27, x27, #0x1
   53e44:	cmp	x27, x21
   53e48:	b.hi	53d78 <mpfr_bernoulli_cache@@Base+0xc4>  // b.pmore
   53e4c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   53e50:	ldr	x1, [x0, #2528]
   53e54:	add	x0, x0, #0x9e0
   53e58:	blr	x1
   53e5c:	ldr	x25, [x26, x0]
   53e60:	add	x20, x25, x27, lsl #4
   53e64:	mov	x0, x20
   53e68:	bl	bfe0 <mpfr_mpz_init@plt>
   53e6c:	cbz	x27, 53eb0 <mpfr_bernoulli_cache@@Base+0x1fc>
   53e70:	add	x0, sp, #0x40
   53e74:	lsl	x21, x27, #1
   53e78:	bl	bfe0 <mpfr_mpz_init@plt>
   53e7c:	add	x0, sp, #0x40
   53e80:	mov	w1, #0x6                   	// #6
   53e84:	bl	bd00 <__gmpz_set_ui@plt>
   53e88:	mov	w22, #0x1                   	// #1
   53e8c:	bfi	x22, x27, #1, #63
   53e90:	cmp	x22, #0x5
   53e94:	b.cs	53ecc <mpfr_bernoulli_cache@@Base+0x218>  // b.hs, b.nlast
   53e98:	cmp	x21, #0x40
   53e9c:	b.hi	53f30 <mpfr_bernoulli_cache@@Base+0x27c>  // b.pmore
   53ea0:	adrp	x8, 65000 <mpfr_bases@@Base+0x1758>
   53ea4:	add	x8, x8, #0x100
   53ea8:	ldr	x23, [x8, x27, lsl #3]
   53eac:	b	53fcc <mpfr_bernoulli_cache@@Base+0x318>
   53eb0:	mov	w1, #0x1                   	// #1
   53eb4:	mov	x0, x25
   53eb8:	bl	bd00 <__gmpz_set_ui@plt>
   53ebc:	add	x27, x27, #0x1
   53ec0:	cmp	x27, x21
   53ec4:	b.ls	53e4c <mpfr_bernoulli_cache@@Base+0x198>  // b.plast
   53ec8:	b	53d78 <mpfr_bernoulli_cache@@Base+0xc4>
   53ecc:	mov	w23, #0x5                   	// #5
   53ed0:	b	53ef0 <mpfr_bernoulli_cache@@Base+0x23c>
   53ed4:	add	x0, sp, #0x40
   53ed8:	add	x1, sp, #0x40
   53edc:	mov	x2, x23
   53ee0:	bl	c140 <__gmpz_mul_ui@plt>
   53ee4:	add	x23, x23, #0x2
   53ee8:	cmp	x23, x22
   53eec:	b.hi	53e98 <mpfr_bernoulli_cache@@Base+0x1e4>  // b.pmore
   53ef0:	sub	x8, x23, #0x1
   53ef4:	udiv	x9, x21, x8
   53ef8:	msub	x8, x9, x8, x21
   53efc:	cbnz	x8, 53ee4 <mpfr_bernoulli_cache@@Base+0x230>
   53f00:	cmp	x23, #0x9
   53f04:	b.cc	53ed4 <mpfr_bernoulli_cache@@Base+0x220>  // b.lo, b.ul, b.last
   53f08:	mov	w8, #0x5                   	// #5
   53f0c:	sub	x9, x8, #0x2
   53f10:	udiv	x10, x23, x9
   53f14:	msub	x9, x10, x9, x23
   53f18:	cbz	x9, 53ee4 <mpfr_bernoulli_cache@@Base+0x230>
   53f1c:	mul	x9, x8, x8
   53f20:	cmp	x9, x23
   53f24:	add	x8, x8, #0x2
   53f28:	b.ls	53f0c <mpfr_bernoulli_cache@@Base+0x258>  // b.plast
   53f2c:	b	53ed4 <mpfr_bernoulli_cache@@Base+0x220>
   53f30:	ucvtf	d0, x21
   53f34:	fmul	d0, d0, d8
   53f38:	bl	c940 <__gmpfr_ceil_log2@plt>
   53f3c:	add	x19, x0, #0x1
   53f40:	mov	x0, sp
   53f44:	mov	w1, #0x35                  	// #53
   53f48:	bl	ca60 <mpfr_init2@plt>
   53f4c:	mov	w1, #0x1f2c                	// #7980
   53f50:	mov	x0, sp
   53f54:	movk	w1, #0xefd, lsl #16
   53f58:	mov	x2, #0xffffffffffffffe0    	// #-32
   53f5c:	mov	w3, #0x2                   	// #2
   53f60:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   53f64:	mov	x0, sp
   53f68:	mov	x1, sp
   53f6c:	mov	w3, #0x2                   	// #2
   53f70:	mov	x2, x21
   53f74:	bl	bab0 <mpfr_mul_ui@plt>
   53f78:	mov	x0, sp
   53f7c:	mov	x1, sp
   53f80:	mov	w2, #0x2                   	// #2
   53f84:	bl	c210 <mpfr_log2@plt>
   53f88:	mov	x0, sp
   53f8c:	mov	x1, sp
   53f90:	mov	w3, #0x2                   	// #2
   53f94:	mov	x2, x21
   53f98:	bl	bab0 <mpfr_mul_ui@plt>
   53f9c:	mov	x0, sp
   53fa0:	mov	w1, #0x2                   	// #2
   53fa4:	bl	bcf0 <mpfr_get_ui@plt>
   53fa8:	mov	x23, x0
   53fac:	mov	x0, sp
   53fb0:	bl	c0b0 <mpfr_clear@plt>
   53fb4:	add	x0, sp, #0x40
   53fb8:	mov	w1, #0x2                   	// #2
   53fbc:	bl	cb40 <__gmpz_sizeinbase@plt>
   53fc0:	add	x8, x23, x19, asr #1
   53fc4:	add	x8, x8, x0
   53fc8:	add	x23, x8, #0xe
   53fcc:	mov	w19, #0x3                   	// #3
   53fd0:	add	x8, x25, x27, lsl #4
   53fd4:	sub	x24, x21, #0x1
   53fd8:	bfi	x19, x27, #2, #62
   53fdc:	add	x28, x8, #0x4
   53fe0:	sub	x0, x29, #0x10
   53fe4:	bl	bfe0 <mpfr_mpz_init@plt>
   53fe8:	sub	x0, x29, #0x20
   53fec:	bl	bfe0 <mpfr_mpz_init@plt>
   53ff0:	sub	x0, x29, #0x30
   53ff4:	bl	bfe0 <mpfr_mpz_init@plt>
   53ff8:	sub	x0, x29, #0x30
   53ffc:	mov	w1, #0x1                   	// #1
   54000:	bl	bd00 <__gmpz_set_ui@plt>
   54004:	sub	x0, x29, #0x30
   54008:	sub	x1, x29, #0x30
   5400c:	mov	x2, x23
   54010:	bl	c230 <__gmpz_mul_2exp@plt>
   54014:	sub	x0, x29, #0x20
   54018:	mov	w1, #0x3                   	// #3
   5401c:	mov	x2, x21
   54020:	bl	c4d0 <__gmpz_ui_pow_ui@plt>
   54024:	sub	x0, x29, #0x10
   54028:	sub	x1, x29, #0x30
   5402c:	sub	x2, x29, #0x20
   54030:	bl	be80 <__gmpz_fdiv_q@plt>
   54034:	ldur	w8, [x29, #-28]
   54038:	mov	w25, #0x4                   	// #4
   5403c:	cmp	w8, #0x1
   54040:	b.lt	54084 <mpfr_bernoulli_cache@@Base+0x3d0>  // b.tstop
   54044:	sub	x0, x29, #0x20
   54048:	mov	x1, x25
   5404c:	mov	x2, x21
   54050:	bl	c4d0 <__gmpz_ui_pow_ui@plt>
   54054:	sub	x0, x29, #0x20
   54058:	sub	x1, x29, #0x30
   5405c:	sub	x2, x29, #0x20
   54060:	bl	be80 <__gmpz_fdiv_q@plt>
   54064:	sub	x0, x29, #0x10
   54068:	sub	x1, x29, #0x10
   5406c:	sub	x2, x29, #0x20
   54070:	bl	c9a0 <__gmpz_add@plt>
   54074:	ldur	w8, [x29, #-28]
   54078:	add	x25, x25, #0x1
   5407c:	cmp	w8, #0x0
   54080:	b.gt	54044 <mpfr_bernoulli_cache@@Base+0x390>
   54084:	sub	x0, x29, #0x20
   54088:	mov	x1, x25
   5408c:	mov	x2, x24
   54090:	bl	c4d0 <__gmpz_ui_pow_ui@plt>
   54094:	sub	x0, x29, #0x20
   54098:	sub	x1, x29, #0x20
   5409c:	mov	x2, x24
   540a0:	bl	c140 <__gmpz_mul_ui@plt>
   540a4:	sub	x0, x29, #0x20
   540a8:	sub	x1, x29, #0x30
   540ac:	sub	x2, x29, #0x20
   540b0:	bl	c760 <__gmpz_cdiv_q@plt>
   540b4:	sub	x0, x29, #0x10
   540b8:	sub	x1, x29, #0x10
   540bc:	sub	x2, x29, #0x20
   540c0:	bl	c9a0 <__gmpz_add@plt>
   540c4:	sub	x0, x29, #0x10
   540c8:	sub	x1, x29, #0x10
   540cc:	sub	x2, x29, #0x30
   540d0:	bl	c9a0 <__gmpz_add@plt>
   540d4:	sub	x0, x29, #0x30
   540d8:	sub	x1, x29, #0x30
   540dc:	mov	x2, x21
   540e0:	bl	bbb0 <__gmpz_cdiv_q_2exp@plt>
   540e4:	sub	x0, x29, #0x10
   540e8:	sub	x1, x29, #0x10
   540ec:	sub	x2, x29, #0x30
   540f0:	bl	c9a0 <__gmpz_add@plt>
   540f4:	sub	x0, x29, #0x20
   540f8:	mov	x1, x21
   540fc:	bl	c010 <__gmpz_fac_ui@plt>
   54100:	sub	x0, x29, #0x10
   54104:	sub	x1, x29, #0x10
   54108:	sub	x2, x29, #0x20
   5410c:	bl	c030 <__gmpz_mul@plt>
   54110:	sub	x0, x29, #0x10
   54114:	sub	x1, x29, #0x10
   54118:	add	x2, sp, #0x40
   5411c:	bl	c030 <__gmpz_mul@plt>
   54120:	sub	x0, x29, #0x10
   54124:	sub	x1, x29, #0x10
   54128:	mov	w2, #0x1                   	// #1
   5412c:	bl	c230 <__gmpz_mul_2exp@plt>
   54130:	mov	x0, sp
   54134:	mov	x1, x23
   54138:	bl	ca60 <mpfr_init2@plt>
   5413c:	mov	x0, sp
   54140:	sub	x1, x29, #0x10
   54144:	mov	w2, #0x1                   	// #1
   54148:	bl	c250 <mpfr_set_z@plt>
   5414c:	mov	x0, sp
   54150:	mov	x1, sp
   54154:	mov	w3, #0x1                   	// #1
   54158:	mov	x2, x23
   5415c:	bl	c8f0 <mpfr_div_2ui@plt>
   54160:	add	x0, sp, #0x20
   54164:	mov	x1, x23
   54168:	bl	ca60 <mpfr_init2@plt>
   5416c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54170:	ldr	x1, [x0, #2688]
   54174:	add	x0, x0, #0xa80
   54178:	blr	x1
   5417c:	add	x1, x26, x0
   54180:	add	x0, sp, #0x20
   54184:	mov	w2, #0x2                   	// #2
   54188:	bl	c380 <mpfr_cache@plt>
   5418c:	add	x0, sp, #0x20
   54190:	add	x1, sp, #0x20
   54194:	mov	w2, #0x1                   	// #1
   54198:	mov	w3, #0x2                   	// #2
   5419c:	bl	c2c0 <mpfr_mul_2ui@plt>
   541a0:	add	x0, sp, #0x20
   541a4:	add	x1, sp, #0x20
   541a8:	mov	w3, #0x2                   	// #2
   541ac:	mov	x2, x21
   541b0:	bl	bfc0 <mpfr_pow_ui@plt>
   541b4:	mov	x0, sp
   541b8:	mov	x1, sp
   541bc:	add	x2, sp, #0x20
   541c0:	mov	w3, #0x1                   	// #1
   541c4:	bl	c610 <mpfr_div@plt>
   541c8:	add	x9, x25, x19
   541cc:	cmp	x9, #0x2
   541d0:	b.cc	541f0 <mpfr_bernoulli_cache@@Base+0x53c>  // b.lo, b.ul, b.last
   541d4:	mov	x8, xzr
   541d8:	add	x9, x9, #0x1
   541dc:	add	x8, x8, #0x1
   541e0:	cmp	x9, #0x3
   541e4:	lsr	x9, x9, #1
   541e8:	b.hi	541d8 <mpfr_bernoulli_cache@@Base+0x524>  // b.pmore
   541ec:	b	541f4 <mpfr_bernoulli_cache@@Base+0x540>
   541f0:	mov	x8, xzr
   541f4:	ldr	x9, [sp]
   541f8:	sub	x10, x9, #0x1
   541fc:	add	x9, x9, #0x3e
   54200:	cmp	x10, #0x0
   54204:	csel	x9, x9, x10, lt  // lt = tstop
   54208:	subs	x8, x8, x23
   5420c:	b.cs	54238 <mpfr_bernoulli_cache@@Base+0x584>  // b.hs, b.nlast
   54210:	ldr	x0, [sp, #24]
   54214:	and	x9, x9, #0xffffffffffffffc0
   54218:	add	x25, x9, #0x40
   5421c:	add	x1, x8, x25
   54220:	bl	ca80 <__gmpn_scan1@plt>
   54224:	ldr	x8, [sp, #16]
   54228:	sub	x9, x25, x0
   5422c:	cmp	x8, x9
   54230:	cset	w25, cc  // cc = lo, ul, last
   54234:	b	5423c <mpfr_bernoulli_cache@@Base+0x588>
   54238:	mov	w25, wzr
   5423c:	mov	x1, sp
   54240:	mov	w2, #0x2                   	// #2
   54244:	mov	x0, x20
   54248:	bl	be50 <mpfr_get_z@plt>
   5424c:	tbnz	w27, #0, 5425c <mpfr_bernoulli_cache@@Base+0x5a8>
   54250:	ldr	w8, [x28]
   54254:	neg	w8, w8
   54258:	str	w8, [x28]
   5425c:	sub	x0, x29, #0x20
   54260:	sub	x1, x29, #0x20
   54264:	mov	x2, x22
   54268:	bl	c140 <__gmpz_mul_ui@plt>
   5426c:	sub	x0, x29, #0x20
   54270:	sub	x1, x29, #0x20
   54274:	add	x2, sp, #0x40
   54278:	bl	bfb0 <__gmpz_divexact@plt>
   5427c:	sub	x2, x29, #0x20
   54280:	mov	x0, x20
   54284:	mov	x1, x20
   54288:	bl	c030 <__gmpz_mul@plt>
   5428c:	add	x0, sp, #0x40
   54290:	mov	w1, #0x1                   	// #1
   54294:	bl	bd00 <__gmpz_set_ui@plt>
   54298:	add	x0, sp, #0x20
   5429c:	bl	c0b0 <mpfr_clear@plt>
   542a0:	mov	x0, sp
   542a4:	bl	c0b0 <mpfr_clear@plt>
   542a8:	sub	x0, x29, #0x10
   542ac:	bl	c1b0 <mpfr_mpz_clear@plt>
   542b0:	sub	x0, x29, #0x20
   542b4:	bl	c1b0 <mpfr_mpz_clear@plt>
   542b8:	sub	x0, x29, #0x30
   542bc:	bl	c1b0 <mpfr_mpz_clear@plt>
   542c0:	cbnz	w25, 53e34 <mpfr_bernoulli_cache@@Base+0x180>
   542c4:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   542c8:	movk	x8, #0x6667
   542cc:	smulh	x8, x23, x8
   542d0:	asr	x9, x8, #2
   542d4:	add	x8, x9, x8, lsr #63
   542d8:	add	x23, x8, x23
   542dc:	b	53fe0 <mpfr_bernoulli_cache@@Base+0x32c>

00000000000542e0 <mpfr_bernoulli_freecache@@Base>:
   542e0:	stp	x29, x30, [sp, #-48]!
   542e4:	str	x21, [sp, #16]
   542e8:	stp	x20, x19, [sp, #32]
   542ec:	mov	x29, sp
   542f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   542f4:	ldr	x1, [x0, #2528]
   542f8:	add	x0, x0, #0x9e0
   542fc:	blr	x1
   54300:	mrs	x20, tpidr_el0
   54304:	ldr	x8, [x20, x0]
   54308:	cbz	x8, 543bc <mpfr_bernoulli_freecache@@Base+0xdc>
   5430c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54310:	ldr	x1, [x0, #2512]
   54314:	add	x0, x0, #0x9d0
   54318:	blr	x1
   5431c:	ldr	x9, [x20, x0]
   54320:	cbz	x9, 5436c <mpfr_bernoulli_freecache@@Base+0x8c>
   54324:	mov	x19, xzr
   54328:	mov	x21, xzr
   5432c:	add	x0, x8, x19
   54330:	bl	c1b0 <mpfr_mpz_clear@plt>
   54334:	add	x21, x21, #0x1
   54338:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5433c:	ldr	x1, [x0, #2512]
   54340:	add	x0, x0, #0x9d0
   54344:	blr	x1
   54348:	ldr	x9, [x20, x0]
   5434c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54350:	ldr	x1, [x0, #2528]
   54354:	add	x0, x0, #0x9e0
   54358:	blr	x1
   5435c:	ldr	x8, [x20, x0]
   54360:	cmp	x21, x9
   54364:	add	x19, x19, #0x10
   54368:	b.cc	5432c <mpfr_bernoulli_freecache@@Base+0x4c>  // b.lo, b.ul, b.last
   5436c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54370:	ldr	x1, [x0, #2496]
   54374:	add	x0, x0, #0x9c0
   54378:	blr	x1
   5437c:	ldr	x9, [x20, x0]
   54380:	mov	x19, x0
   54384:	mov	x0, x8
   54388:	lsl	x1, x9, #4
   5438c:	bl	cc00 <mpfr_free_func@plt>
   54390:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54394:	ldr	x1, [x0, #2528]
   54398:	add	x0, x0, #0x9e0
   5439c:	blr	x1
   543a0:	str	xzr, [x20, x0]
   543a4:	str	xzr, [x20, x19]
   543a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   543ac:	ldr	x1, [x0, #2512]
   543b0:	add	x0, x0, #0x9d0
   543b4:	blr	x1
   543b8:	str	xzr, [x20, x0]
   543bc:	ldp	x20, x19, [sp, #32]
   543c0:	ldr	x21, [sp, #16]
   543c4:	ldp	x29, x30, [sp], #48
   543c8:	ret

00000000000543cc <mpfr_regular_p@@Base>:
   543cc:	ldr	x8, [x0, #16]
   543d0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   543d4:	cmp	x8, x9
   543d8:	cset	w0, gt
   543dc:	ret

00000000000543e0 <mpfr_set_flt@@Base>:
   543e0:	fcvt	d0, s0
   543e4:	b	be90 <mpfr_set_d@plt>

00000000000543e8 <mpfr_get_flt@@Base>:
   543e8:	sub	sp, sp, #0x40
   543ec:	stp	x29, x30, [sp, #16]
   543f0:	stp	x22, x21, [sp, #32]
   543f4:	stp	x20, x19, [sp, #48]
   543f8:	ldr	x19, [x0, #16]
   543fc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   54400:	add	x29, sp, #0x10
   54404:	cmp	x19, x8
   54408:	b.le	544e4 <mpfr_get_flt@@Base+0xfc>
   5440c:	ldr	w20, [x0, #8]
   54410:	mov	w8, #0x2                   	// #2
   54414:	cmp	w20, #0x0
   54418:	cinc	w8, w8, lt  // lt = tstop
   5441c:	cmp	w1, #0x4
   54420:	csel	w5, w8, w1, eq  // eq = none
   54424:	cmn	x19, #0x95
   54428:	b.le	544ec <mpfr_get_flt@@Base+0x104>
   5442c:	cmp	x19, #0x81
   54430:	b.ge	54524 <mpfr_get_flt@@Base+0x13c>  // b.tcont
   54434:	add	w8, w19, #0x95
   54438:	cmn	x19, #0x7d
   5443c:	mov	w9, #0x18                  	// #24
   54440:	ldr	x1, [x0, #24]
   54444:	ldr	x2, [x0]
   54448:	csel	w22, w8, w9, lt  // lt = tstop
   5444c:	sub	w8, w22, #0x1
   54450:	lsr	w3, w20, #31
   54454:	add	w9, w22, #0x3e
   54458:	cmp	w8, #0x0
   5445c:	sxtw	x4, w22
   54460:	add	x0, sp, #0x8
   54464:	csel	w21, w9, w8, lt  // lt = tstop
   54468:	bl	c710 <mpfr_round_raw_4@plt>
   5446c:	cbnz	w0, 54548 <mpfr_get_flt@@Base+0x160>
   54470:	ldr	d0, [sp, #8]
   54474:	mov	x8, #0x3bf0000000000000    	// #4318952042648305664
   54478:	fmov	d2, x8
   5447c:	cmp	w22, #0x41
   54480:	ucvtf	d1, d0
   54484:	fmul	d0, d1, d2
   54488:	b.lt	544b8 <mpfr_get_flt@@Base+0xd0>  // b.tstop
   5448c:	asr	w9, w21, #6
   54490:	add	w9, w9, #0x1
   54494:	mov	w8, #0x1                   	// #1
   54498:	sxtw	x9, w9
   5449c:	mov	x10, #0x3bf0000000000000    	// #4318952042648305664
   544a0:	fadd	d0, d0, d1
   544a4:	add	x8, x8, #0x1
   544a8:	fmov	d2, x10
   544ac:	cmp	x8, x9
   544b0:	fmul	d0, d0, d2
   544b4:	b.lt	544a0 <mpfr_get_flt@@Base+0xb8>  // b.tstop
   544b8:	mov	w0, w19
   544bc:	bl	cb80 <mpfr_scale2@plt>
   544c0:	fneg	d1, d0
   544c4:	cmp	w20, #0x0
   544c8:	fcsel	d0, d1, d0, lt  // lt = tstop
   544cc:	fcvt	s0, d0
   544d0:	ldp	x20, x19, [sp, #48]
   544d4:	ldp	x22, x21, [sp, #32]
   544d8:	ldp	x29, x30, [sp, #16]
   544dc:	add	sp, sp, #0x40
   544e0:	ret
   544e4:	bl	bd80 <mpfr_get_d@plt>
   544e8:	b	544cc <mpfr_get_flt@@Base+0xe4>
   544ec:	tbnz	w20, #31, 54550 <mpfr_get_flt@@Base+0x168>
   544f0:	cmp	w5, #0x2
   544f4:	b.eq	54598 <mpfr_get_flt@@Base+0x1b0>  // b.none
   544f8:	fmov	s0, wzr
   544fc:	cbnz	w5, 544d0 <mpfr_get_flt@@Base+0xe8>
   54500:	mov	w1, #0x1                   	// #1
   54504:	mov	x2, #0xffffffffffffff6a    	// #-150
   54508:	mov	w19, #0x1                   	// #1
   5450c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   54510:	fmov	s0, wzr
   54514:	cmp	w0, #0x1
   54518:	b.lt	544d0 <mpfr_get_flt@@Base+0xe8>  // b.tstop
   5451c:	fmov	s0, w19
   54520:	b	544d0 <mpfr_get_flt@@Base+0xe8>
   54524:	tbnz	w20, #31, 54578 <mpfr_get_flt@@Base+0x190>
   54528:	orr	w8, w5, #0x2
   5452c:	mov	w9, #0x7f800000            	// #2139095040
   54530:	mov	w10, #0x7f7fffff            	// #2139095039
   54534:	cmp	w8, #0x3
   54538:	fmov	s0, w9
   5453c:	fmov	s1, w10
   54540:	fcsel	s0, s1, s0, eq  // eq = none
   54544:	b	544d0 <mpfr_get_flt@@Base+0xe8>
   54548:	fmov	d0, #1.000000000000000000e+00
   5454c:	b	544b8 <mpfr_get_flt@@Base+0xd0>
   54550:	cmp	w5, #0x3
   54554:	b.eq	545a4 <mpfr_get_flt@@Base+0x1bc>  // b.none
   54558:	cbnz	w5, 5456c <mpfr_get_flt@@Base+0x184>
   5455c:	mov	x1, #0xffffffffffffffff    	// #-1
   54560:	mov	x2, #0xffffffffffffff6a    	// #-150
   54564:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   54568:	tbnz	w0, #31, 545a4 <mpfr_get_flt@@Base+0x1bc>
   5456c:	mov	w8, #0x80000000            	// #-2147483648
   54570:	fmov	s0, w8
   54574:	b	544d0 <mpfr_get_flt@@Base+0xe8>
   54578:	sub	w8, w5, #0x1
   5457c:	mov	w9, #0xff800000            	// #-8388608
   54580:	mov	w10, #0xff7fffff            	// #-8388609
   54584:	cmp	w8, #0x2
   54588:	fmov	s0, w9
   5458c:	fmov	s1, w10
   54590:	fcsel	s0, s1, s0, cc  // cc = lo, ul, last
   54594:	b	544d0 <mpfr_get_flt@@Base+0xe8>
   54598:	mov	w8, #0x1                   	// #1
   5459c:	fmov	s0, w8
   545a0:	b	544d0 <mpfr_get_flt@@Base+0xe8>
   545a4:	mov	w8, #0x80000001            	// #-2147483647
   545a8:	fmov	s0, w8
   545ac:	b	544d0 <mpfr_get_flt@@Base+0xe8>

00000000000545b0 <mpfr_scale2@@Base>:
   545b0:	fmov	d1, #1.000000000000000000e+00
   545b4:	fmov	d2, #5.000000000000000000e-01
   545b8:	fcmp	d0, d1
   545bc:	cset	w8, eq  // eq = none
   545c0:	fcsel	d0, d2, d0, eq  // eq = none
   545c4:	add	w9, w8, w0
   545c8:	fmov	x8, d0
   545cc:	cmn	w9, #0x3fe
   545d0:	lsr	x10, x8, #52
   545d4:	b.le	545ec <mpfr_scale2@@Base+0x3c>
   545d8:	add	w9, w9, w10
   545dc:	and	w9, w9, #0x7ff
   545e0:	bfi	x8, x9, #52, #11
   545e4:	fmov	d0, x8
   545e8:	ret
   545ec:	add	w9, w9, w10
   545f0:	add	w9, w9, #0x34
   545f4:	and	w9, w9, #0x7ff
   545f8:	mov	x11, #0x3cb0000000000000    	// #4372995238176751616
   545fc:	bfi	x8, x9, #52, #11
   54600:	fmov	d0, x11
   54604:	fmov	d1, x8
   54608:	fmul	d0, d1, d0
   5460c:	ret

0000000000054610 <mpfr_set_z_2exp@@Base>:
   54610:	sub	sp, sp, #0x70
   54614:	stp	x29, x30, [sp, #16]
   54618:	stp	x28, x27, [sp, #32]
   5461c:	stp	x26, x25, [sp, #48]
   54620:	stp	x24, x23, [sp, #64]
   54624:	stp	x22, x21, [sp, #80]
   54628:	stp	x20, x19, [sp, #96]
   5462c:	ldr	w9, [x1, #4]
   54630:	mov	x20, x0
   54634:	add	x29, sp, #0x10
   54638:	cmp	w9, #0x0
   5463c:	cset	w10, ne  // ne = any
   54640:	csinv	w19, w10, wzr, ge  // ge = tcont
   54644:	cbz	w19, 5482c <mpfr_set_z_2exp@@Base+0x21c>
   54648:	cmp	w9, #0x0
   5464c:	mov	w27, w3
   54650:	mov	x8, x2
   54654:	cneg	w2, w9, mi  // mi = first
   54658:	tbnz	x8, #63, 54664 <mpfr_set_z_2exp@@Base+0x54>
   5465c:	lsr	x9, x8, #6
   54660:	b	5467c <mpfr_set_z_2exp@@Base+0x6c>
   54664:	add	x9, x8, #0x1
   54668:	add	x10, x8, #0x40
   5466c:	cmp	x9, #0x0
   54670:	csinc	x9, x10, x8, lt  // lt = tstop
   54674:	asr	x9, x9, #6
   54678:	sub	x9, x9, #0x1
   5467c:	mov	x10, #0x1                   	// #1
   54680:	add	x9, x9, x2
   54684:	movk	x10, #0x100, lsl #48
   54688:	cmp	x9, x10
   5468c:	b.ge	54800 <mpfr_set_z_2exp@@Base+0x1f0>  // b.tcont
   54690:	ldr	x23, [x1, #8]
   54694:	ldr	x9, [x20]
   54698:	ldr	x22, [x20, #24]
   5469c:	add	x8, x8, x2, lsl #6
   546a0:	add	x11, x23, x2, lsl #3
   546a4:	ldur	x11, [x11, #-8]
   546a8:	sub	x10, x9, #0x1
   546ac:	add	x9, x9, #0x3e
   546b0:	cmp	x10, #0x0
   546b4:	clz	x24, x11
   546b8:	csel	x9, x9, x10, lt  // lt = tstop
   546bc:	sub	x26, x8, x24
   546c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   546c4:	ldr	x1, [x0, #2608]
   546c8:	add	x0, x0, #0xa30
   546cc:	blr	x1
   546d0:	mrs	x25, tpidr_el0
   546d4:	ldr	x8, [x25, x0]
   546d8:	cmp	x26, x8
   546dc:	b.gt	54800 <mpfr_set_z_2exp@@Base+0x1f0>
   546e0:	add	x10, x26, #0x1
   546e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   546e8:	ldr	x1, [x0, #2576]
   546ec:	add	x0, x0, #0xa10
   546f0:	blr	x1
   546f4:	ldr	x8, [x25, x0]
   546f8:	cmp	x10, x8
   546fc:	b.lt	54844 <mpfr_set_z_2exp@@Base+0x234>  // b.tstop
   54700:	asr	x28, x9, #6
   54704:	add	x8, x28, #0x1
   54708:	sub	x21, x2, x8
   5470c:	tbnz	x21, #63, 54854 <mpfr_set_z_2exp@@Base+0x244>
   54710:	add	x1, x23, x21, lsl #3
   54714:	str	x10, [sp, #8]
   54718:	cbz	w24, 5488c <mpfr_set_z_2exp@@Base+0x27c>
   5471c:	mov	x0, x22
   54720:	mov	x2, x8
   54724:	mov	w3, w24
   54728:	bl	bd10 <__gmpn_lshift@plt>
   5472c:	cmp	x21, #0x1
   54730:	b.ge	54994 <mpfr_set_z_2exp@@Base+0x384>  // b.tcont
   54734:	ldr	w8, [x20]
   54738:	neg	w8, w8
   5473c:	ands	w8, w8, #0x3f
   54740:	b.eq	548a4 <mpfr_set_z_2exp@@Base+0x294>  // b.none
   54744:	sub	w8, w8, #0x1
   54748:	mov	w9, #0x1                   	// #1
   5474c:	ldr	x11, [x22]
   54750:	lsl	x9, x9, x8
   54754:	lsl	x8, x9, #1
   54758:	sub	x10, x9, #0x1
   5475c:	neg	x12, x8
   54760:	and	x9, x11, x9
   54764:	and	x10, x11, x10
   54768:	and	x11, x11, x12
   5476c:	str	x11, [x22]
   54770:	cbnz	x10, 5477c <mpfr_set_z_2exp@@Base+0x16c>
   54774:	cmp	x21, #0x1
   54778:	b.ge	549b4 <mpfr_set_z_2exp@@Base+0x3a4>  // b.tcont
   5477c:	cbnz	w27, 548bc <mpfr_set_z_2exp@@Base+0x2ac>
   54780:	cbz	x9, 548d8 <mpfr_set_z_2exp@@Base+0x2c8>
   54784:	cbnz	x10, 54794 <mpfr_set_z_2exp@@Base+0x184>
   54788:	ldr	x11, [x22]
   5478c:	tst	x11, x8
   54790:	b.eq	548d8 <mpfr_set_z_2exp@@Base+0x2c8>  // b.none
   54794:	ldr	x9, [x22]
   54798:	adds	x8, x9, x8
   5479c:	str	x8, [x22]
   547a0:	b.cc	547c8 <mpfr_set_z_2exp@@Base+0x1b8>  // b.lo, b.ul, b.last
   547a4:	mov	w8, #0x1                   	// #1
   547a8:	cmp	x8, x28
   547ac:	b.gt	547d0 <mpfr_set_z_2exp@@Base+0x1c0>
   547b0:	lsl	x9, x8, #3
   547b4:	ldr	x10, [x22, x9]
   547b8:	add	x8, x8, #0x1
   547bc:	adds	x10, x10, #0x1
   547c0:	str	x10, [x22, x9]
   547c4:	b.cs	547a8 <mpfr_set_z_2exp@@Base+0x198>  // b.hs, b.nlast
   547c8:	mov	w8, #0x1                   	// #1
   547cc:	b	548e4 <mpfr_set_z_2exp@@Base+0x2d4>
   547d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   547d4:	ldr	x1, [x0, #2608]
   547d8:	add	x0, x0, #0xa30
   547dc:	blr	x1
   547e0:	ldr	x8, [x25, x0]
   547e4:	cmp	x26, x8
   547e8:	b.eq	54800 <mpfr_set_z_2exp@@Base+0x1f0>  // b.none
   547ec:	ldr	x26, [sp, #8]
   547f0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   547f4:	str	x8, [x22, x28, lsl #3]
   547f8:	mov	w8, #0x1                   	// #1
   547fc:	b	548e4 <mpfr_set_z_2exp@@Base+0x2d4>
   54800:	mov	x0, x20
   54804:	mov	w1, w27
   54808:	mov	w2, w19
   5480c:	ldp	x20, x19, [sp, #96]
   54810:	ldp	x22, x21, [sp, #80]
   54814:	ldp	x24, x23, [sp, #64]
   54818:	ldp	x26, x25, [sp, #48]
   5481c:	ldp	x28, x27, [sp, #32]
   54820:	ldp	x29, x30, [sp, #16]
   54824:	add	sp, sp, #0x70
   54828:	b	bf90 <mpfr_overflow@plt>
   5482c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   54830:	mov	w10, #0x1                   	// #1
   54834:	mov	w8, wzr
   54838:	str	x9, [x20, #16]
   5483c:	str	w10, [x20, #8]
   54840:	b	5492c <mpfr_set_z_2exp@@Base+0x31c>
   54844:	cmp	w27, #0x0
   54848:	csinc	w1, w27, wzr, ne  // ne = any
   5484c:	mov	x0, x20
   54850:	b	54970 <mpfr_set_z_2exp@@Base+0x360>
   54854:	mov	w28, w27
   54858:	neg	x27, x21
   5485c:	sub	x0, x22, x21, lsl #3
   54860:	cbz	w24, 549fc <mpfr_set_z_2exp@@Base+0x3ec>
   54864:	mov	x1, x23
   54868:	mov	w3, w24
   5486c:	bl	bd10 <__gmpn_lshift@plt>
   54870:	lsl	x2, x27, #3
   54874:	mov	x0, x22
   54878:	mov	w1, wzr
   5487c:	bl	c150 <memset@plt>
   54880:	mov	w8, wzr
   54884:	mov	w27, w28
   54888:	b	548e4 <mpfr_set_z_2exp@@Base+0x2d4>
   5488c:	cmp	x22, x1
   54890:	b.eq	54734 <mpfr_set_z_2exp@@Base+0x124>  // b.none
   54894:	lsl	x2, x8, #3
   54898:	mov	x0, x22
   5489c:	bl	ba70 <memcpy@plt>
   548a0:	b	54734 <mpfr_set_z_2exp@@Base+0x124>
   548a4:	subs	x21, x21, #0x1
   548a8:	mov	w8, #0x1                   	// #1
   548ac:	b.ge	54a14 <mpfr_set_z_2exp@@Base+0x404>  // b.tcont
   548b0:	mov	x9, xzr
   548b4:	mov	x10, xzr
   548b8:	b	5477c <mpfr_set_z_2exp@@Base+0x16c>
   548bc:	cmp	w27, #0x1
   548c0:	b.eq	548d8 <mpfr_set_z_2exp@@Base+0x2c8>  // b.none
   548c4:	add	w11, w27, w19, lsr #31
   548c8:	cmp	w11, #0x3
   548cc:	b.eq	548d8 <mpfr_set_z_2exp@@Base+0x2c8>  // b.none
   548d0:	orr	x11, x10, x9
   548d4:	cbnz	x11, 54794 <mpfr_set_z_2exp@@Base+0x184>
   548d8:	orr	x8, x9, x10
   548dc:	cmp	x8, #0x0
   548e0:	csetm	w8, ne  // ne = any
   548e4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   548e8:	ldr	x1, [x0, #2576]
   548ec:	add	x0, x0, #0xa10
   548f0:	blr	x1
   548f4:	ldr	x9, [x25, x0]
   548f8:	cmp	x26, x9
   548fc:	b.lt	54950 <mpfr_set_z_2exp@@Base+0x340>  // b.tstop
   54900:	mul	w8, w8, w19
   54904:	str	x26, [x20, #16]
   54908:	str	w19, [x20, #8]
   5490c:	cbz	w8, 5492c <mpfr_set_z_2exp@@Base+0x31c>
   54910:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54914:	ldr	x1, [x0, #2640]
   54918:	add	x0, x0, #0xa50
   5491c:	blr	x1
   54920:	ldr	w9, [x25, x0]
   54924:	orr	w9, w9, #0x8
   54928:	str	w9, [x25, x0]
   5492c:	ldp	x20, x19, [sp, #96]
   54930:	ldp	x22, x21, [sp, #80]
   54934:	ldp	x24, x23, [sp, #64]
   54938:	ldp	x26, x25, [sp, #48]
   5493c:	ldp	x28, x27, [sp, #32]
   54940:	ldp	x29, x30, [sp, #16]
   54944:	mov	w0, w8
   54948:	add	sp, sp, #0x70
   5494c:	ret
   54950:	orr	w8, w8, w27
   54954:	cbnz	w8, 54968 <mpfr_set_z_2exp@@Base+0x358>
   54958:	mov	x0, x20
   5495c:	bl	bf50 <mpfr_powerof2_raw@plt>
   54960:	cmp	w0, #0x0
   54964:	cset	w27, ne  // ne = any
   54968:	mov	x0, x20
   5496c:	mov	w1, w27
   54970:	mov	w2, w19
   54974:	ldp	x20, x19, [sp, #96]
   54978:	ldp	x22, x21, [sp, #80]
   5497c:	ldp	x24, x23, [sp, #64]
   54980:	ldp	x26, x25, [sp, #48]
   54984:	ldp	x28, x27, [sp, #32]
   54988:	ldp	x29, x30, [sp, #16]
   5498c:	add	sp, sp, #0x70
   54990:	b	c3c0 <mpfr_underflow@plt>
   54994:	add	x8, x23, x21, lsl #3
   54998:	ldur	x8, [x8, #-8]
   5499c:	ldr	x9, [x22]
   549a0:	neg	x10, x24
   549a4:	lsr	x8, x8, x10
   549a8:	orr	x8, x9, x8
   549ac:	str	x8, [x22]
   549b0:	b	54734 <mpfr_set_z_2exp@@Base+0x124>
   549b4:	add	x10, x23, x21, lsl #3
   549b8:	ldur	x10, [x10, #-8]
   549bc:	neg	w11, w24
   549c0:	mov	x12, #0xffffffffffffffff    	// #-1
   549c4:	lsl	x11, x12, x11
   549c8:	cmp	w24, #0x0
   549cc:	csinv	x11, x12, x11, eq  // eq = none
   549d0:	cmp	x21, #0x2
   549d4:	and	x10, x10, x11
   549d8:	b.lt	5477c <mpfr_set_z_2exp@@Base+0x16c>  // b.tstop
   549dc:	cbnz	x10, 5477c <mpfr_set_z_2exp@@Base+0x16c>
   549e0:	sub	x11, x23, #0x10
   549e4:	ldr	x10, [x11, x21, lsl #3]
   549e8:	sub	x21, x21, #0x1
   549ec:	cmp	x21, #0x2
   549f0:	b.lt	5477c <mpfr_set_z_2exp@@Base+0x16c>  // b.tstop
   549f4:	cbz	x10, 549e4 <mpfr_set_z_2exp@@Base+0x3d4>
   549f8:	b	5477c <mpfr_set_z_2exp@@Base+0x16c>
   549fc:	cmp	x0, x23
   54a00:	b.eq	54870 <mpfr_set_z_2exp@@Base+0x260>  // b.none
   54a04:	lsl	x2, x2, #3
   54a08:	mov	x1, x23
   54a0c:	bl	ba70 <memcpy@plt>
   54a10:	b	54870 <mpfr_set_z_2exp@@Base+0x260>
   54a14:	mov	w9, #0x3f                  	// #63
   54a18:	ldr	x10, [x23, x21, lsl #3]
   54a1c:	sub	w9, w9, w24
   54a20:	lsl	x8, x8, x9
   54a24:	sub	x11, x8, #0x1
   54a28:	and	x9, x10, x8
   54a2c:	and	x10, x10, x11
   54a30:	mov	w8, #0x1                   	// #1
   54a34:	mov	w24, wzr
   54a38:	cbz	x10, 54774 <mpfr_set_z_2exp@@Base+0x164>
   54a3c:	b	5477c <mpfr_set_z_2exp@@Base+0x16c>

0000000000054a40 <mpfr_ai@@Base>:
   54a40:	stp	x29, x30, [sp, #-96]!
   54a44:	stp	x28, x27, [sp, #16]
   54a48:	stp	x26, x25, [sp, #32]
   54a4c:	stp	x24, x23, [sp, #48]
   54a50:	stp	x22, x21, [sp, #64]
   54a54:	stp	x20, x19, [sp, #80]
   54a58:	mov	x29, sp
   54a5c:	sub	sp, sp, #0x230
   54a60:	ldr	x8, [x1, #16]
   54a64:	mov	x27, #0x4                   	// #4
   54a68:	movk	x27, #0x8000, lsl #48
   54a6c:	mov	w24, w2
   54a70:	mov	x26, x1
   54a74:	cmp	x8, x27
   54a78:	mov	x25, x0
   54a7c:	b.lt	55dc0 <mpfr_ai@@Base+0x1380>  // b.tstop
   54a80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54a84:	ldr	x1, [x0, #2640]
   54a88:	add	x0, x0, #0xa50
   54a8c:	blr	x1
   54a90:	mrs	x23, tpidr_el0
   54a94:	ldr	w20, [x23, x0]
   54a98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54a9c:	ldr	x1, [x0, #2576]
   54aa0:	add	x0, x0, #0xa10
   54aa4:	blr	x1
   54aa8:	ldr	x9, [x23, x0]
   54aac:	mov	x8, x0
   54ab0:	str	x9, [sp, #112]
   54ab4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54ab8:	ldr	x1, [x0, #2608]
   54abc:	add	x0, x0, #0xa30
   54ac0:	blr	x1
   54ac4:	ldr	x21, [x23, x0]
   54ac8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   54acc:	str	x9, [x23, x8]
   54ad0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   54ad4:	str	x8, [x23, x0]
   54ad8:	add	x0, sp, #0xc8
   54adc:	mov	w1, #0x20                  	// #32
   54ae0:	bl	ca60 <mpfr_init2@plt>
   54ae4:	add	x0, sp, #0xa8
   54ae8:	mov	w1, #0x20                  	// #32
   54aec:	bl	ca60 <mpfr_init2@plt>
   54af0:	ldr	w3, [x26, #8]
   54af4:	add	x0, sp, #0xc8
   54af8:	mov	x1, x26
   54afc:	mov	w2, wzr
   54b00:	bl	c690 <mpfr_set4@plt>
   54b04:	add	x0, sp, #0xa8
   54b08:	mov	w1, #0x51f                 	// #1311
   54b0c:	mov	x2, xzr
   54b10:	mov	w3, wzr
   54b14:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   54b18:	ldr	x2, [x25]
   54b1c:	add	x0, sp, #0xa8
   54b20:	add	x1, sp, #0xa8
   54b24:	mov	w3, wzr
   54b28:	bl	bab0 <mpfr_mul_ui@plt>
   54b2c:	ldr	w8, [x26, #8]
   54b30:	tbnz	w8, #31, 54b4c <mpfr_ai@@Base+0x10c>
   54b34:	add	x0, sp, #0xc8
   54b38:	add	x1, sp, #0xc8
   54b3c:	mov	w2, #0x4ccd                	// #19661
   54b40:	mov	w3, wzr
   54b44:	bl	bab0 <mpfr_mul_ui@plt>
   54b48:	b	54b60 <mpfr_ai@@Base+0x120>
   54b4c:	add	x0, sp, #0xc8
   54b50:	add	x1, sp, #0xc8
   54b54:	mov	x2, #0xffffffffffffcccd    	// #-13107
   54b58:	mov	w3, wzr
   54b5c:	bl	c950 <mpfr_mul_si@plt>
   54b60:	add	x0, sp, #0xc8
   54b64:	add	x1, sp, #0xc8
   54b68:	add	x2, sp, #0xa8
   54b6c:	mov	w3, wzr
   54b70:	bl	c1e0 <mpfr_add@plt>
   54b74:	add	x0, sp, #0xa8
   54b78:	bl	c0b0 <mpfr_clear@plt>
   54b7c:	add	x0, sp, #0xc8
   54b80:	mov	w1, #0x100000              	// #1048576
   54b84:	mov	x2, xzr
   54b88:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   54b8c:	mov	w19, w0
   54b90:	add	x0, sp, #0xc8
   54b94:	bl	c0b0 <mpfr_clear@plt>
   54b98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54b9c:	ldr	x1, [x0, #2640]
   54ba0:	add	x0, x0, #0xa50
   54ba4:	blr	x1
   54ba8:	str	w20, [x23, x0]
   54bac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54bb0:	ldr	x1, [x0, #2576]
   54bb4:	add	x0, x0, #0xa10
   54bb8:	blr	x1
   54bbc:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   54bc0:	str	x8, [x23, x0]
   54bc4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   54bc8:	ldr	x1, [x0, #2608]
   54bcc:	add	x0, x0, #0xa30
   54bd0:	blr	x1
   54bd4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   54bd8:	cmp	w19, #0x1
   54bdc:	str	x8, [x23, x0]
   54be0:	str	w24, [sp, #124]
   54be4:	str	x25, [sp, #128]
   54be8:	str	x23, [sp, #104]
   54bec:	str	w20, [sp, #100]
   54bf0:	str	x21, [sp, #88]
   54bf4:	str	x26, [sp, #40]
   54bf8:	b.lt	55610 <mpfr_ai@@Base+0xbd0>  // b.tstop
   54bfc:	ldr	x19, [x25]
   54c00:	sub	x0, x29, #0xe8
   54c04:	mov	w1, #0x20                  	// #32
   54c08:	bl	ca60 <mpfr_init2@plt>
   54c0c:	add	x0, sp, #0x128
   54c10:	mov	w1, #0x20                  	// #32
   54c14:	bl	ca60 <mpfr_init2@plt>
   54c18:	sub	x0, x29, #0xe8
   54c1c:	mov	w2, #0x2                   	// #2
   54c20:	mov	w3, #0x1                   	// #1
   54c24:	mov	x1, x26
   54c28:	bl	c690 <mpfr_set4@plt>
   54c2c:	sub	x0, x29, #0xe8
   54c30:	sub	x1, x29, #0xe8
   54c34:	mov	w2, #0x3                   	// #3
   54c38:	mov	w3, #0x2                   	// #2
   54c3c:	bl	bfc0 <mpfr_pow_ui@plt>
   54c40:	sub	x0, x29, #0xe8
   54c44:	sub	x1, x29, #0xe8
   54c48:	mov	w2, #0x2                   	// #2
   54c4c:	bl	c920 <mpfr_sqrt@plt>
   54c50:	adrp	x1, 65000 <mpfr_bases@@Base+0x1758>
   54c54:	add	x1, x1, #0x208
   54c58:	add	x0, sp, #0x128
   54c5c:	mov	w2, #0xa                   	// #10
   54c60:	mov	w3, #0x2                   	// #2
   54c64:	bl	c6b0 <mpfr_set_str@plt>
   54c68:	add	x0, sp, #0x128
   54c6c:	sub	x1, x29, #0xe8
   54c70:	add	x2, sp, #0x128
   54c74:	mov	w3, #0x2                   	// #2
   54c78:	bl	bda0 <mpfr_mul@plt>
   54c7c:	ldr	x21, [x26, #16]
   54c80:	cmp	x21, #0x1
   54c84:	b.lt	55ce8 <mpfr_ai@@Base+0x12a8>  // b.tstop
   54c88:	add	x0, sp, #0x128
   54c8c:	mov	w1, #0x2                   	// #2
   54c90:	bl	bcf0 <mpfr_get_ui@plt>
   54c94:	ldr	x21, [x26, #16]
   54c98:	sub	x8, x21, #0x1
   54c9c:	add	x9, x21, #0x2
   54ca0:	cmp	x8, #0x0
   54ca4:	csel	x8, x9, x8, lt  // lt = tstop
   54ca8:	mov	x9, #0xffffffffffffffff    	// #-1
   54cac:	eor	x8, x9, x8, asr #2
   54cb0:	add	x20, x0, x8
   54cb4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   54cb8:	cmp	x21, x8
   54cbc:	add	x28, x19, #0xb
   54cc0:	b.ne	55cfc <mpfr_ai@@Base+0x12bc>  // b.any
   54cc4:	mov	w21, #0x2                   	// #2
   54cc8:	cmp	x28, #0x1
   54ccc:	b.eq	55d2c <mpfr_ai@@Base+0x12ec>  // b.none
   54cd0:	cmn	x19, #0xa
   54cd4:	b.le	55e28 <mpfr_ai@@Base+0x13e8>
   54cd8:	add	x8, x19, #0xa
   54cdc:	clz	x8, x8
   54ce0:	mov	w9, #0x40                  	// #64
   54ce4:	sub	x8, x9, x8
   54ce8:	add	x9, x20, #0x6
   54cec:	str	x9, [sp, #8]
   54cf0:	add	x9, x9, x28
   54cf4:	add	x9, x9, x21
   54cf8:	mov	x0, x28
   54cfc:	str	x21, [sp, #24]
   54d00:	add	x25, x9, x8
   54d04:	bl	bf70 <__gmpfr_isqrt@plt>
   54d08:	lsl	x8, x0, #5
   54d0c:	mov	x23, x0
   54d10:	add	x0, x8, #0x20
   54d14:	bl	ccd0 <mpfr_allocate_func@plt>
   54d18:	mov	x22, x0
   54d1c:	cbz	x0, 55e0c <mpfr_ai@@Base+0x13cc>
   54d20:	mov	x21, xzr
   54d24:	mov	x19, x22
   54d28:	mov	x0, x19
   54d2c:	bl	bc20 <mpfr_init@plt>
   54d30:	add	x21, x21, #0x1
   54d34:	cmp	x21, x23
   54d38:	add	x19, x19, #0x20
   54d3c:	b.ls	54d28 <mpfr_ai@@Base+0x2e8>  // b.plast
   54d40:	sub	x0, x29, #0x68
   54d44:	bl	bc20 <mpfr_init@plt>
   54d48:	sub	x0, x29, #0x88
   54d4c:	bl	bc20 <mpfr_init@plt>
   54d50:	sub	x0, x29, #0xa8
   54d54:	bl	bc20 <mpfr_init@plt>
   54d58:	sub	x0, x29, #0xc8
   54d5c:	bl	bc20 <mpfr_init@plt>
   54d60:	add	x0, sp, #0x108
   54d64:	bl	bc20 <mpfr_init@plt>
   54d68:	add	x0, sp, #0xe8
   54d6c:	bl	bc20 <mpfr_init@plt>
   54d70:	add	x8, x20, #0x45
   54d74:	str	x8, [sp, #56]
   54d78:	cmp	w24, #0x0
   54d7c:	add	x8, x20, #0x8
   54d80:	str	x8, [sp]
   54d84:	cset	w8, eq  // eq = none
   54d88:	mov	w24, #0x1                   	// #1
   54d8c:	mov	w21, #0x2                   	// #2
   54d90:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   54d94:	str	x8, [sp, #48]
   54d98:	mov	w8, #0x40                  	// #64
   54d9c:	str	x8, [sp, #16]
   54da0:	add	x8, x28, #0x4
   54da4:	str	x8, [sp, #144]
   54da8:	add	x8, x28, #0x1
   54dac:	str	x8, [sp, #32]
   54db0:	str	x28, [sp, #64]
   54db4:	mov	x20, xzr
   54db8:	mov	x19, x22
   54dbc:	mov	x0, x19
   54dc0:	mov	x1, x25
   54dc4:	bl	bf20 <mpfr_set_prec@plt>
   54dc8:	add	x20, x20, #0x1
   54dcc:	cmp	x20, x23
   54dd0:	add	x19, x19, #0x20
   54dd4:	b.ls	54dbc <mpfr_ai@@Base+0x37c>  // b.plast
   54dd8:	sub	x0, x29, #0x68
   54ddc:	mov	x1, x25
   54de0:	bl	bf20 <mpfr_set_prec@plt>
   54de4:	sub	x0, x29, #0x88
   54de8:	mov	x1, x25
   54dec:	bl	bf20 <mpfr_set_prec@plt>
   54df0:	sub	x0, x29, #0xa8
   54df4:	mov	x1, x25
   54df8:	bl	bf20 <mpfr_set_prec@plt>
   54dfc:	sub	x0, x29, #0xc8
   54e00:	mov	x1, x25
   54e04:	bl	bf20 <mpfr_set_prec@plt>
   54e08:	sub	x0, x29, #0x88
   54e0c:	mov	w1, #0x1                   	// #1
   54e10:	mov	x2, xzr
   54e14:	mov	w3, wzr
   54e18:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   54e1c:	ldr	w3, [x26, #8]
   54e20:	sub	x0, x29, #0xa8
   54e24:	mov	x1, x26
   54e28:	mov	w2, wzr
   54e2c:	bl	c690 <mpfr_set4@plt>
   54e30:	mov	w1, #0x1                   	// #1
   54e34:	mov	w3, #0x2                   	// #2
   54e38:	mov	x0, x22
   54e3c:	mov	x2, xzr
   54e40:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   54e44:	add	x19, x22, #0x20
   54e48:	sub	x1, x29, #0xa8
   54e4c:	mov	w2, #0x2                   	// #2
   54e50:	mov	x0, x19
   54e54:	bl	c3f0 <mpfr_sqr@plt>
   54e58:	ldr	w8, [x26, #8]
   54e5c:	mov	x0, x19
   54e60:	mov	x1, x19
   54e64:	mov	x2, x26
   54e68:	cmp	w8, #0x0
   54e6c:	cinc	w3, w21, le
   54e70:	bl	bda0 <mpfr_mul@plt>
   54e74:	ldr	w8, [x26, #8]
   54e78:	tbz	w8, #31, 54e88 <mpfr_ai@@Base+0x448>
   54e7c:	ldr	w8, [x22, #40]
   54e80:	neg	w8, w8
   54e84:	str	w8, [x22, #40]
   54e88:	mov	w1, #0x2                   	// #2
   54e8c:	mov	x0, x19
   54e90:	bl	bcf0 <mpfr_get_ui@plt>
   54e94:	ldr	w8, [x26, #8]
   54e98:	str	x0, [sp, #136]
   54e9c:	tbnz	w8, #31, 54eac <mpfr_ai@@Base+0x46c>
   54ea0:	cmp	x23, #0x2
   54ea4:	b.cs	54ec0 <mpfr_ai@@Base+0x480>  // b.hs, b.nlast
   54ea8:	b	54f18 <mpfr_ai@@Base+0x4d8>
   54eac:	ldr	w8, [x22, #40]
   54eb0:	neg	w8, w8
   54eb4:	str	w8, [x22, #40]
   54eb8:	cmp	x23, #0x2
   54ebc:	b.cc	54f18 <mpfr_ai@@Base+0x4d8>  // b.lo, b.ul, b.last
   54ec0:	add	x20, x22, #0x20
   54ec4:	mov	w21, #0x2                   	// #2
   54ec8:	b	54eec <mpfr_ai@@Base+0x4ac>
   54ecc:	mov	x1, x20
   54ed0:	mov	x2, x19
   54ed4:	mov	w3, wzr
   54ed8:	bl	bda0 <mpfr_mul@plt>
   54edc:	add	x21, x21, #0x1
   54ee0:	cmp	x21, x23
   54ee4:	add	x20, x20, #0x20
   54ee8:	b.hi	54f18 <mpfr_ai@@Base+0x4d8>  // b.pmore
   54eec:	add	x0, x20, #0x20
   54ef0:	tbnz	w21, #0, 54ecc <mpfr_ai@@Base+0x48c>
   54ef4:	lsl	x8, x21, #4
   54ef8:	and	x8, x8, #0xffffffffffffffe0
   54efc:	add	x1, x22, x8
   54f00:	mov	w2, wzr
   54f04:	bl	c3f0 <mpfr_sqr@plt>
   54f08:	add	x21, x21, #0x1
   54f0c:	cmp	x21, x23
   54f10:	add	x20, x20, #0x20
   54f14:	b.ls	54eec <mpfr_ai@@Base+0x4ac>  // b.plast
   54f18:	add	x0, sp, #0x108
   54f1c:	add	x1, sp, #0xe8
   54f20:	mov	x2, x25
   54f24:	str	x25, [sp, #72]
   54f28:	bl	bbf0 <mpfr_gamma_one_and_two_third@plt>
   54f2c:	sub	x0, x29, #0x88
   54f30:	mov	w1, #0x9                   	// #9
   54f34:	mov	x2, xzr
   54f38:	mov	w3, wzr
   54f3c:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   54f40:	sub	x0, x29, #0x88
   54f44:	sub	x1, x29, #0x88
   54f48:	mov	w2, wzr
   54f4c:	bl	cd00 <mpfr_cbrt@plt>
   54f50:	sub	x0, x29, #0x88
   54f54:	sub	x1, x29, #0x88
   54f58:	add	x2, sp, #0xe8
   54f5c:	mov	w3, wzr
   54f60:	bl	bda0 <mpfr_mul@plt>
   54f64:	sub	x0, x29, #0x88
   54f68:	sub	x2, x29, #0x88
   54f6c:	mov	w1, #0x1                   	// #1
   54f70:	mov	w3, wzr
   54f74:	bl	c2f0 <mpfr_ui_div@plt>
   54f78:	sub	x0, x29, #0xa8
   54f7c:	mov	w1, #0x3                   	// #3
   54f80:	mov	x2, xzr
   54f84:	mov	w3, wzr
   54f88:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   54f8c:	sub	x0, x29, #0xa8
   54f90:	sub	x1, x29, #0xa8
   54f94:	mov	w2, wzr
   54f98:	bl	cd00 <mpfr_cbrt@plt>
   54f9c:	sub	x0, x29, #0xa8
   54fa0:	sub	x1, x29, #0xa8
   54fa4:	add	x2, sp, #0x108
   54fa8:	mov	w3, wzr
   54fac:	bl	bda0 <mpfr_mul@plt>
   54fb0:	sub	x0, x29, #0xa8
   54fb4:	sub	x1, x29, #0xa8
   54fb8:	mov	w2, wzr
   54fbc:	bl	bdc0 <mpfr_neg@plt>
   54fc0:	sub	x0, x29, #0xa8
   54fc4:	sub	x2, x29, #0xa8
   54fc8:	mov	x1, x26
   54fcc:	mov	w3, wzr
   54fd0:	bl	c610 <mpfr_div@plt>
   54fd4:	sub	x21, x23, #0x1
   54fd8:	add	x8, x23, x23, lsl #1
   54fdc:	add	x25, x22, x23, lsl #5
   54fe0:	add	x26, x22, x21, lsl #5
   54fe4:	mov	x19, xzr
   54fe8:	stur	w24, [x29, #-192]
   54fec:	sub	x8, x8, #0x4
   54ff0:	add	x24, x26, #0x8
   54ff4:	sub	x28, x25, #0x40
   54ff8:	stur	x27, [x29, #-184]
   54ffc:	str	x22, [sp, #80]
   55000:	stp	x8, xzr, [sp, #152]
   55004:	b	55014 <mpfr_ai@@Base+0x5d4>
   55008:	ldr	x8, [sp, #160]
   5500c:	add	x8, x8, #0x1
   55010:	str	x8, [sp, #160]
   55014:	ldr	w3, [x24]
   55018:	sub	x0, x29, #0x68
   5501c:	mov	x1, x26
   55020:	mov	w2, wzr
   55024:	bl	c690 <mpfr_set4@plt>
   55028:	ldr	x8, [sp, #152]
   5502c:	mov	x22, x28
   55030:	mov	w27, #0x1                   	// #1
   55034:	add	x20, x8, x19
   55038:	add	x3, x20, #0x1
   5503c:	sub	x0, x29, #0x68
   55040:	sub	x1, x29, #0x68
   55044:	mov	x2, x20
   55048:	mov	w4, wzr
   5504c:	bl	bed0 <mpfr_div_ui2@plt>
   55050:	sub	x0, x29, #0x68
   55054:	sub	x1, x29, #0x68
   55058:	mov	x2, x22
   5505c:	mov	w3, wzr
   55060:	bl	c1e0 <mpfr_add@plt>
   55064:	add	x27, x27, #0x1
   55068:	sub	x20, x20, #0x3
   5506c:	cmp	x23, x27
   55070:	sub	x22, x22, #0x20
   55074:	b.ne	55038 <mpfr_ai@@Base+0x5f8>  // b.any
   55078:	sub	x0, x29, #0x68
   5507c:	sub	x1, x29, #0x68
   55080:	sub	x2, x29, #0x88
   55084:	mov	w3, wzr
   55088:	bl	bda0 <mpfr_mul@plt>
   5508c:	sub	x0, x29, #0xc8
   55090:	sub	x1, x29, #0xc8
   55094:	sub	x2, x29, #0x68
   55098:	mov	w3, wzr
   5509c:	bl	c1e0 <mpfr_add@plt>
   550a0:	sub	x0, x29, #0x88
   550a4:	sub	x1, x29, #0x88
   550a8:	mov	x2, x25
   550ac:	mov	w3, wzr
   550b0:	bl	bda0 <mpfr_mul@plt>
   550b4:	mov	x22, xzr
   550b8:	sub	x27, x19, #0x2
   550bc:	add	x8, x19, #0x3
   550c0:	add	x2, x27, #0x4
   550c4:	add	x3, x27, #0x5
   550c8:	sub	x0, x29, #0x88
   550cc:	sub	x1, x29, #0x88
   550d0:	mov	w4, wzr
   550d4:	mov	x20, x8
   550d8:	bl	bed0 <mpfr_div_ui2@plt>
   550dc:	add	x22, x22, #0x1
   550e0:	add	x27, x27, #0x3
   550e4:	cmp	x22, x21
   550e8:	add	x8, x20, #0x3
   550ec:	b.ls	550c0 <mpfr_ai@@Base+0x680>  // b.plast
   550f0:	ldr	w3, [x24]
   550f4:	sub	x0, x29, #0x68
   550f8:	mov	x1, x26
   550fc:	mov	w2, wzr
   55100:	bl	c690 <mpfr_set4@plt>
   55104:	mov	x19, x28
   55108:	mov	w22, #0x1                   	// #1
   5510c:	sub	x3, x20, #0x2
   55110:	sub	x20, x20, #0x3
   55114:	sub	x0, x29, #0x68
   55118:	sub	x1, x29, #0x68
   5511c:	mov	x2, x20
   55120:	mov	w4, wzr
   55124:	bl	bed0 <mpfr_div_ui2@plt>
   55128:	sub	x0, x29, #0x68
   5512c:	sub	x1, x29, #0x68
   55130:	mov	x2, x19
   55134:	mov	w3, wzr
   55138:	bl	c1e0 <mpfr_add@plt>
   5513c:	add	x22, x22, #0x1
   55140:	cmp	x23, x22
   55144:	sub	x19, x19, #0x20
   55148:	b.ne	5510c <mpfr_ai@@Base+0x6cc>  // b.any
   5514c:	sub	x0, x29, #0x68
   55150:	sub	x1, x29, #0x68
   55154:	sub	x2, x29, #0xa8
   55158:	mov	w3, wzr
   5515c:	bl	bda0 <mpfr_mul@plt>
   55160:	sub	x0, x29, #0xc8
   55164:	sub	x1, x29, #0xc8
   55168:	sub	x2, x29, #0x68
   5516c:	mov	w3, wzr
   55170:	bl	c1e0 <mpfr_add@plt>
   55174:	sub	x0, x29, #0xa8
   55178:	sub	x1, x29, #0xa8
   5517c:	mov	x2, x25
   55180:	mov	w3, wzr
   55184:	bl	bda0 <mpfr_mul@plt>
   55188:	mov	x27, xzr
   5518c:	sub	x19, x20, #0x2
   55190:	mov	x22, x19
   55194:	add	x19, x19, #0x3
   55198:	sub	x0, x29, #0xa8
   5519c:	sub	x1, x29, #0xa8
   551a0:	mov	x2, x20
   551a4:	mov	x3, x19
   551a8:	mov	w4, wzr
   551ac:	bl	bed0 <mpfr_div_ui2@plt>
   551b0:	add	x27, x27, #0x1
   551b4:	cmp	x27, x21
   551b8:	add	x20, x22, #0x5
   551bc:	b.ls	55190 <mpfr_ai@@Base+0x750>  // b.plast
   551c0:	ldur	x8, [x29, #-120]
   551c4:	ldr	x11, [sp, #144]
   551c8:	ldur	x10, [x29, #-184]
   551cc:	ldur	x9, [x29, #-152]
   551d0:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
   551d4:	cmp	x8, x13
   551d8:	add	x8, x8, x11
   551dc:	cset	w12, ne  // ne = any
   551e0:	cmp	x8, x10
   551e4:	add	x11, x9, x11
   551e8:	cset	w8, gt
   551ec:	cmp	x9, x13
   551f0:	cset	w9, eq  // eq = none
   551f4:	cmp	x11, x10
   551f8:	cset	w10, le
   551fc:	add	x19, x22, #0x2
   55200:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   55204:	and	w11, w12, w8
   55208:	orr	w8, w9, w10
   5520c:	tbnz	w11, #0, 55008 <mpfr_ai@@Base+0x5c8>
   55210:	cbz	w8, 55008 <mpfr_ai@@Base+0x5c8>
   55214:	ldr	x9, [sp, #136]
   55218:	add	x8, x22, #0x4
   5521c:	mul	x8, x8, x20
   55220:	cmp	x9, x8, lsr #1
   55224:	b.hi	55008 <mpfr_ai@@Base+0x5c8>  // b.pmore
   55228:	add	x24, x23, #0x1
   5522c:	cmp	x24, #0x1
   55230:	b.ls	55380 <mpfr_ai@@Base+0x940>  // b.plast
   55234:	ldr	w25, [sp, #124]
   55238:	ldr	x26, [sp, #128]
   5523c:	ldr	x28, [sp, #64]
   55240:	ldr	x21, [sp, #160]
   55244:	mov	x11, #0x4                   	// #4
   55248:	clz	x20, x23
   5524c:	movk	x11, #0x8000, lsl #48
   55250:	cbz	x21, 5539c <mpfr_ai@@Base+0x95c>
   55254:	add	x8, x21, #0x1
   55258:	cmp	x8, #0x1
   5525c:	b.ls	553a4 <mpfr_ai@@Base+0x964>  // b.plast
   55260:	clz	x8, x21
   55264:	mov	w9, #0x40                  	// #64
   55268:	sub	x9, x9, x8
   5526c:	ldr	x10, [sp, #56]
   55270:	ldur	x8, [x29, #-184]
   55274:	sub	x10, x10, x20
   55278:	add	x9, x10, x9
   5527c:	ldr	x10, [sp, #72]
   55280:	sub	x21, x9, x8
   55284:	cmp	x10, x21
   55288:	b.le	552a8 <mpfr_ai@@Base+0x868>
   5528c:	add	x9, x21, x28
   55290:	cmp	x10, x9
   55294:	mov	x20, x28
   55298:	b.gt	552ac <mpfr_ai@@Base+0x86c>
   5529c:	mvn	x9, x21
   552a0:	add	x20, x10, x9
   552a4:	b	552ac <mpfr_ai@@Base+0x86c>
   552a8:	mov	x20, xzr
   552ac:	cmp	x8, x11
   552b0:	b.lt	552ec <mpfr_ai@@Base+0x8ac>  // b.tstop
   552b4:	ldur	x8, [x29, #-200]
   552b8:	ldr	x9, [x26]
   552bc:	ldur	x0, [x29, #-176]
   552c0:	mov	x2, x20
   552c4:	sub	x10, x8, #0x1
   552c8:	add	x8, x8, #0x3e
   552cc:	cmp	x10, #0x0
   552d0:	csel	x8, x8, x10, lt  // lt = tstop
   552d4:	asr	x8, x8, #6
   552d8:	add	x1, x8, #0x1
   552dc:	ldr	x8, [sp, #48]
   552e0:	add	x3, x9, x8
   552e4:	bl	c370 <mpfr_round_p@plt>
   552e8:	cbnz	w0, 55518 <mpfr_ai@@Base+0xad8>
   552ec:	ldr	x25, [sp, #80]
   552f0:	mov	x26, xzr
   552f4:	mov	x0, x25
   552f8:	bl	c0b0 <mpfr_clear@plt>
   552fc:	add	x26, x26, #0x1
   55300:	cmp	x26, x23
   55304:	add	x25, x25, #0x20
   55308:	b.ls	552f4 <mpfr_ai@@Base+0x8b4>  // b.plast
   5530c:	ldr	x0, [sp, #80]
   55310:	lsl	x1, x24, #5
   55314:	bl	cc00 <mpfr_free_func@plt>
   55318:	mov	x0, x19
   5531c:	bl	bf70 <__gmpfr_isqrt@plt>
   55320:	lsl	x8, x0, #5
   55324:	mov	x23, x0
   55328:	add	x0, x8, #0x20
   5532c:	bl	ccd0 <mpfr_allocate_func@plt>
   55330:	mov	x19, x0
   55334:	cbz	x0, 553c8 <mpfr_ai@@Base+0x988>
   55338:	mov	x24, xzr
   5533c:	mov	x25, x19
   55340:	mov	x0, x19
   55344:	bl	bc20 <mpfr_init@plt>
   55348:	add	x24, x24, #0x1
   5534c:	cmp	x24, x23
   55350:	add	x19, x19, #0x20
   55354:	b.ls	55340 <mpfr_ai@@Base+0x900>  // b.plast
   55358:	cbz	x20, 553e4 <mpfr_ai@@Base+0x9a4>
   5535c:	cmp	x20, x28
   55360:	b.ge	5542c <mpfr_ai@@Base+0x9ec>  // b.tcont
   55364:	ldp	x8, x26, [sp, #32]
   55368:	mov	x22, x25
   5536c:	mov	w24, #0x1                   	// #1
   55370:	add	x8, x8, x21
   55374:	mov	x25, x8
   55378:	mov	w21, #0x2                   	// #2
   5537c:	b	54db4 <mpfr_ai@@Base+0x374>
   55380:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55384:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   55388:	mov	w1, #0x206                 	// #518
   5538c:	add	x0, x0, #0x21c
   55390:	add	x2, x2, #0x231
   55394:	bl	cb20 <mpfr_assert_fail@plt>
   55398:	b	55234 <mpfr_ai@@Base+0x7f4>
   5539c:	mov	x9, xzr
   553a0:	b	5526c <mpfr_ai@@Base+0x82c>
   553a4:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   553a8:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   553ac:	mov	w1, #0x206                 	// #518
   553b0:	add	x0, x0, #0x21c
   553b4:	add	x2, x2, #0x23b
   553b8:	bl	cb20 <mpfr_assert_fail@plt>
   553bc:	mov	x11, #0x4                   	// #4
   553c0:	movk	x11, #0x8000, lsl #48
   553c4:	b	55260 <mpfr_ai@@Base+0x820>
   553c8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   553cc:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   553d0:	mov	w1, #0x222                 	// #546
   553d4:	add	x0, x0, #0x21c
   553d8:	add	x2, x2, #0x221
   553dc:	bl	cb20 <mpfr_assert_fail@plt>
   553e0:	b	55338 <mpfr_ai@@Base+0x8f8>
   553e4:	ldr	x8, [sp, #24]
   553e8:	cmn	x22, #0x1
   553ec:	lsl	x8, x8, #1
   553f0:	str	x8, [sp, #24]
   553f4:	b.eq	554b4 <mpfr_ai@@Base+0xa74>  // b.none
   553f8:	cmn	x22, #0x2
   553fc:	b.eq	554bc <mpfr_ai@@Base+0xa7c>  // b.none
   55400:	add	x8, x22, #0x1
   55404:	clz	x8, x8
   55408:	mov	w9, #0x40                  	// #64
   5540c:	sub	x8, x9, x8
   55410:	ldr	x9, [sp, #24]
   55414:	ldr	x10, [sp, #8]
   55418:	ldr	x28, [sp, #64]
   5541c:	add	x9, x9, x10
   55420:	add	x9, x9, x28
   55424:	add	x8, x9, x8
   55428:	b	5549c <mpfr_ai@@Base+0xa5c>
   5542c:	mov	x8, #0x4                   	// #4
   55430:	ldr	x9, [sp, #16]
   55434:	movk	x8, #0x8000, lsl #48
   55438:	sub	x8, x8, x28
   5543c:	sub	x8, x8, #0x105
   55440:	cmp	x9, x8
   55444:	b.gt	554d8 <mpfr_ai@@Base+0xa98>
   55448:	ldr	x8, [sp, #64]
   5544c:	ldr	x9, [sp, #16]
   55450:	add	x8, x9, x8
   55454:	cmp	x8, #0x0
   55458:	mov	x28, x8
   5545c:	cinc	x8, x8, lt  // lt = tstop
   55460:	cmn	x22, #0x1
   55464:	asr	x8, x8, #1
   55468:	str	x8, [sp, #16]
   5546c:	b.eq	554f4 <mpfr_ai@@Base+0xab4>  // b.none
   55470:	cmn	x22, #0x2
   55474:	b.eq	554fc <mpfr_ai@@Base+0xabc>  // b.none
   55478:	add	x8, x22, #0x1
   5547c:	clz	x8, x8
   55480:	mov	w9, #0x40                  	// #64
   55484:	sub	x8, x9, x8
   55488:	ldr	x10, [sp]
   5548c:	ldur	x9, [x29, #-184]
   55490:	add	x10, x10, x28
   55494:	add	x8, x10, x8
   55498:	sub	x8, x8, x9
   5549c:	ldr	x26, [sp, #40]
   554a0:	mov	x22, x25
   554a4:	mov	x25, x8
   554a8:	mov	w24, #0x1                   	// #1
   554ac:	mov	w21, #0x2                   	// #2
   554b0:	b	54da0 <mpfr_ai@@Base+0x360>
   554b4:	mov	x8, xzr
   554b8:	b	55410 <mpfr_ai@@Base+0x9d0>
   554bc:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   554c0:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   554c4:	mov	w1, #0x22b                 	// #555
   554c8:	add	x0, x0, #0x21c
   554cc:	add	x2, x2, #0x245
   554d0:	bl	cb20 <mpfr_assert_fail@plt>
   554d4:	b	55400 <mpfr_ai@@Base+0x9c0>
   554d8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   554dc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   554e0:	mov	w1, #0x238                 	// #568
   554e4:	add	x0, x0, #0x21c
   554e8:	add	x2, x2, #0x622
   554ec:	bl	cb20 <mpfr_assert_fail@plt>
   554f0:	b	55448 <mpfr_ai@@Base+0xa08>
   554f4:	mov	x8, xzr
   554f8:	b	55488 <mpfr_ai@@Base+0xa48>
   554fc:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55500:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   55504:	mov	w1, #0x23c                 	// #572
   55508:	add	x0, x0, #0x21c
   5550c:	add	x2, x2, #0x245
   55510:	bl	cb20 <mpfr_assert_fail@plt>
   55514:	b	55478 <mpfr_ai@@Base+0xa38>
   55518:	ldur	w3, [x29, #-192]
   5551c:	sub	x1, x29, #0xc8
   55520:	mov	x0, x26
   55524:	mov	w2, w25
   55528:	bl	c690 <mpfr_set4@plt>
   5552c:	mov	w21, w0
   55530:	sub	x0, x29, #0xe8
   55534:	bl	c0b0 <mpfr_clear@plt>
   55538:	add	x0, sp, #0x128
   5553c:	bl	c0b0 <mpfr_clear@plt>
   55540:	ldr	x22, [sp, #80]
   55544:	mov	x20, xzr
   55548:	mov	x19, x22
   5554c:	mov	x0, x19
   55550:	bl	c0b0 <mpfr_clear@plt>
   55554:	add	x20, x20, #0x1
   55558:	cmp	x20, x23
   5555c:	add	x19, x19, #0x20
   55560:	b.ls	5554c <mpfr_ai@@Base+0xb0c>  // b.plast
   55564:	lsl	x1, x24, #5
   55568:	mov	x0, x22
   5556c:	bl	cc00 <mpfr_free_func@plt>
   55570:	sub	x0, x29, #0x68
   55574:	bl	c0b0 <mpfr_clear@plt>
   55578:	sub	x0, x29, #0x88
   5557c:	bl	c0b0 <mpfr_clear@plt>
   55580:	sub	x0, x29, #0xa8
   55584:	bl	c0b0 <mpfr_clear@plt>
   55588:	sub	x0, x29, #0xc8
   5558c:	bl	c0b0 <mpfr_clear@plt>
   55590:	add	x0, sp, #0x108
   55594:	bl	c0b0 <mpfr_clear@plt>
   55598:	add	x0, sp, #0xe8
   5559c:	bl	c0b0 <mpfr_clear@plt>
   555a0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   555a4:	ldr	x1, [x0, #2640]
   555a8:	add	x0, x0, #0xa50
   555ac:	blr	x1
   555b0:	ldr	x9, [sp, #104]
   555b4:	ldr	w10, [sp, #100]
   555b8:	str	w10, [x9, x0]
   555bc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   555c0:	ldr	x1, [x0, #2576]
   555c4:	add	x0, x0, #0xa10
   555c8:	blr	x1
   555cc:	ldr	x11, [sp, #112]
   555d0:	str	x11, [x9, x0]
   555d4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   555d8:	ldr	x1, [x0, #2608]
   555dc:	add	x0, x0, #0xa30
   555e0:	blr	x1
   555e4:	ldr	x12, [sp, #88]
   555e8:	str	x12, [x9, x0]
   555ec:	ldr	x8, [x26, #16]
   555f0:	cmp	x8, x12
   555f4:	b.gt	55600 <mpfr_ai@@Base+0xbc0>
   555f8:	cmp	x8, x11
   555fc:	b.ge	55ca8 <mpfr_ai@@Base+0x1268>  // b.tcont
   55600:	mov	x0, x26
   55604:	mov	w1, w21
   55608:	mov	w2, w25
   5560c:	b	56078 <mpfr_ai@@Base+0x1638>
   55610:	ldr	x8, [x26, #16]
   55614:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   55618:	cmp	x8, x9
   5561c:	b.eq	55e44 <mpfr_ai@@Base+0x1404>  // b.none
   55620:	ldr	x19, [x25]
   55624:	sub	x8, x27, #0x10f
   55628:	cmp	x19, x8
   5562c:	b.ge	56030 <mpfr_ai@@Base+0x15f0>  // b.tcont
   55630:	sub	x0, x29, #0xe8
   55634:	mov	w1, #0x20                  	// #32
   55638:	bl	ca60 <mpfr_init2@plt>
   5563c:	add	x0, sp, #0x128
   55640:	mov	w1, #0x20                  	// #32
   55644:	bl	ca60 <mpfr_init2@plt>
   55648:	sub	x0, x29, #0xe8
   5564c:	mov	w2, #0x2                   	// #2
   55650:	mov	w3, #0x1                   	// #1
   55654:	mov	x1, x26
   55658:	bl	c690 <mpfr_set4@plt>
   5565c:	sub	x0, x29, #0xe8
   55660:	sub	x1, x29, #0xe8
   55664:	mov	w2, #0x3                   	// #3
   55668:	mov	w3, #0x2                   	// #2
   5566c:	bl	bfc0 <mpfr_pow_ui@plt>
   55670:	sub	x0, x29, #0xe8
   55674:	sub	x1, x29, #0xe8
   55678:	mov	w2, #0x2                   	// #2
   5567c:	bl	c920 <mpfr_sqrt@plt>
   55680:	adrp	x1, 65000 <mpfr_bases@@Base+0x1758>
   55684:	add	x1, x1, #0x208
   55688:	add	x0, sp, #0x128
   5568c:	mov	w2, #0xa                   	// #10
   55690:	mov	w3, #0x2                   	// #2
   55694:	bl	c6b0 <mpfr_set_str@plt>
   55698:	add	x0, sp, #0x128
   5569c:	sub	x1, x29, #0xe8
   556a0:	add	x2, sp, #0x128
   556a4:	mov	w3, #0x2                   	// #2
   556a8:	bl	bda0 <mpfr_mul@plt>
   556ac:	ldr	x22, [x26, #16]
   556b0:	cmp	x22, #0x1
   556b4:	b.lt	55d34 <mpfr_ai@@Base+0x12f4>  // b.tstop
   556b8:	add	x0, sp, #0x128
   556bc:	mov	w1, #0x2                   	// #2
   556c0:	bl	bcf0 <mpfr_get_ui@plt>
   556c4:	ldr	x22, [x26, #16]
   556c8:	sub	x8, x22, #0x1
   556cc:	add	x9, x22, #0x2
   556d0:	cmp	x8, #0x0
   556d4:	csel	x8, x9, x8, lt  // lt = tstop
   556d8:	mov	x9, #0xffffffffffffffff    	// #-1
   556dc:	eor	x8, x9, x8, asr #2
   556e0:	add	x20, x0, x8
   556e4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   556e8:	cmp	x22, x8
   556ec:	add	x21, x19, #0xb
   556f0:	b.ne	55d48 <mpfr_ai@@Base+0x1308>  // b.any
   556f4:	mov	w22, #0x2                   	// #2
   556f8:	cmp	x21, #0x1
   556fc:	b.eq	55d78 <mpfr_ai@@Base+0x1338>  // b.none
   55700:	cmn	x19, #0xa
   55704:	b.le	56084 <mpfr_ai@@Base+0x1644>
   55708:	add	x8, x19, #0xa
   5570c:	clz	x8, x8
   55710:	mov	w9, #0x45                  	// #69
   55714:	sub	x8, x9, x8
   55718:	add	x9, x22, x20
   5571c:	sub	x10, x27, x19
   55720:	add	x19, x9, x8
   55724:	sub	x8, x10, #0x110
   55728:	cmp	x19, x8
   5572c:	b.gt	56050 <mpfr_ai@@Base+0x1610>
   55730:	sub	x0, x29, #0x88
   55734:	add	x25, x19, x21
   55738:	bl	bc20 <mpfr_init@plt>
   5573c:	sub	x0, x29, #0xa8
   55740:	bl	bc20 <mpfr_init@plt>
   55744:	add	x0, sp, #0x108
   55748:	bl	bc20 <mpfr_init@plt>
   5574c:	add	x0, sp, #0xe8
   55750:	bl	bc20 <mpfr_init@plt>
   55754:	sub	x0, x29, #0xc8
   55758:	bl	bc20 <mpfr_init@plt>
   5575c:	sub	x0, x29, #0x68
   55760:	bl	bc20 <mpfr_init@plt>
   55764:	add	x8, x20, #0x7
   55768:	cmp	w24, #0x0
   5576c:	str	x8, [sp, #80]
   55770:	add	x8, x20, #0x5
   55774:	add	x28, x20, #0x4
   55778:	str	x8, [sp, #136]
   5577c:	mov	w19, #0x2                   	// #2
   55780:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   55784:	cset	w24, eq  // eq = none
   55788:	mov	w8, #0x40                  	// #64
   5578c:	str	x8, [sp, #144]
   55790:	str	x22, [sp, #152]
   55794:	add	x22, x21, #0x3
   55798:	add	x8, x21, #0x1
   5579c:	str	x8, [sp, #160]
   557a0:	sub	x0, x29, #0x88
   557a4:	mov	x1, x25
   557a8:	bl	bf20 <mpfr_set_prec@plt>
   557ac:	sub	x0, x29, #0xa8
   557b0:	mov	x1, x25
   557b4:	bl	bf20 <mpfr_set_prec@plt>
   557b8:	sub	x0, x29, #0xc8
   557bc:	mov	x1, x25
   557c0:	bl	bf20 <mpfr_set_prec@plt>
   557c4:	sub	x0, x29, #0x68
   557c8:	mov	x1, x25
   557cc:	bl	bf20 <mpfr_set_prec@plt>
   557d0:	sub	x0, x29, #0xc8
   557d4:	mov	w2, #0x2                   	// #2
   557d8:	mov	x1, x26
   557dc:	bl	c3f0 <mpfr_sqr@plt>
   557e0:	ldr	w8, [x26, #8]
   557e4:	sub	x0, x29, #0xc8
   557e8:	sub	x1, x29, #0xc8
   557ec:	mov	x2, x26
   557f0:	cmp	w8, #0x0
   557f4:	cinc	w3, w19, le
   557f8:	bl	bda0 <mpfr_mul@plt>
   557fc:	ldr	w8, [x26, #8]
   55800:	tbz	w8, #31, 55810 <mpfr_ai@@Base+0xdd0>
   55804:	ldur	w8, [x29, #-192]
   55808:	neg	w8, w8
   5580c:	stur	w8, [x29, #-192]
   55810:	sub	x0, x29, #0xc8
   55814:	mov	w1, #0x2                   	// #2
   55818:	bl	bcf0 <mpfr_get_ui@plt>
   5581c:	ldr	w8, [x26, #8]
   55820:	mov	x19, x0
   55824:	tbz	w8, #31, 55834 <mpfr_ai@@Base+0xdf4>
   55828:	ldur	w8, [x29, #-192]
   5582c:	neg	w8, w8
   55830:	stur	w8, [x29, #-192]
   55834:	add	x0, sp, #0x108
   55838:	add	x1, sp, #0xe8
   5583c:	mov	x2, x25
   55840:	bl	bbf0 <mpfr_gamma_one_and_two_third@plt>
   55844:	sub	x0, x29, #0x88
   55848:	mov	w1, #0x9                   	// #9
   5584c:	mov	x2, xzr
   55850:	mov	w3, wzr
   55854:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   55858:	sub	x0, x29, #0x88
   5585c:	sub	x1, x29, #0x88
   55860:	mov	w2, wzr
   55864:	bl	cd00 <mpfr_cbrt@plt>
   55868:	sub	x0, x29, #0x88
   5586c:	sub	x1, x29, #0x88
   55870:	add	x2, sp, #0xe8
   55874:	mov	w3, wzr
   55878:	bl	bda0 <mpfr_mul@plt>
   5587c:	sub	x0, x29, #0x88
   55880:	sub	x2, x29, #0x88
   55884:	mov	w1, #0x1                   	// #1
   55888:	mov	w3, wzr
   5588c:	bl	c2f0 <mpfr_ui_div@plt>
   55890:	sub	x0, x29, #0xa8
   55894:	mov	w1, #0x3                   	// #3
   55898:	mov	x2, xzr
   5589c:	mov	w3, wzr
   558a0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   558a4:	sub	x0, x29, #0xa8
   558a8:	sub	x1, x29, #0xa8
   558ac:	mov	w2, wzr
   558b0:	bl	cd00 <mpfr_cbrt@plt>
   558b4:	sub	x0, x29, #0xa8
   558b8:	sub	x1, x29, #0xa8
   558bc:	add	x2, sp, #0x108
   558c0:	mov	w3, wzr
   558c4:	bl	bda0 <mpfr_mul@plt>
   558c8:	sub	x0, x29, #0xa8
   558cc:	sub	x1, x29, #0xa8
   558d0:	mov	w2, wzr
   558d4:	bl	bdc0 <mpfr_neg@plt>
   558d8:	sub	x0, x29, #0xa8
   558dc:	sub	x2, x29, #0xa8
   558e0:	mov	x1, x26
   558e4:	mov	w3, wzr
   558e8:	bl	c610 <mpfr_div@plt>
   558ec:	sub	x0, x29, #0x68
   558f0:	sub	x1, x29, #0x88
   558f4:	sub	x2, x29, #0xa8
   558f8:	mov	w3, wzr
   558fc:	bl	c1e0 <mpfr_add@plt>
   55900:	mov	w27, #0x6                   	// #6
   55904:	b	5590c <mpfr_ai@@Base+0xecc>
   55908:	add	x27, x27, #0x3
   5590c:	sub	x0, x29, #0x88
   55910:	sub	x1, x29, #0x88
   55914:	sub	x2, x29, #0xc8
   55918:	mov	w3, wzr
   5591c:	sub	x20, x27, #0x4
   55920:	bl	bda0 <mpfr_mul@plt>
   55924:	sub	x0, x29, #0xa8
   55928:	sub	x1, x29, #0xa8
   5592c:	sub	x2, x29, #0xc8
   55930:	mov	w3, wzr
   55934:	bl	bda0 <mpfr_mul@plt>
   55938:	sub	x26, x27, #0x3
   5593c:	sub	x0, x29, #0x88
   55940:	sub	x1, x29, #0x88
   55944:	mov	x2, x20
   55948:	mov	x3, x26
   5594c:	mov	w4, wzr
   55950:	bl	bed0 <mpfr_div_ui2@plt>
   55954:	sub	x3, x27, #0x2
   55958:	sub	x0, x29, #0xa8
   5595c:	sub	x1, x29, #0xa8
   55960:	mov	x2, x26
   55964:	mov	w4, wzr
   55968:	bl	bed0 <mpfr_div_ui2@plt>
   5596c:	sub	x0, x29, #0x68
   55970:	sub	x1, x29, #0x68
   55974:	sub	x2, x29, #0x88
   55978:	mov	w3, wzr
   5597c:	bl	c1e0 <mpfr_add@plt>
   55980:	sub	x0, x29, #0x68
   55984:	sub	x1, x29, #0x68
   55988:	sub	x2, x29, #0xa8
   5598c:	mov	w3, wzr
   55990:	bl	c1e0 <mpfr_add@plt>
   55994:	ldur	x9, [x29, #-120]
   55998:	ldur	x8, [x29, #-88]
   5599c:	ldur	x10, [x29, #-152]
   559a0:	cmp	x9, x23
   559a4:	add	x9, x9, x22
   559a8:	cset	w12, ne  // ne = any
   559ac:	cmp	x9, x8
   559b0:	add	x11, x10, x22
   559b4:	cset	w9, gt
   559b8:	cmp	x10, x23
   559bc:	cset	w10, eq  // eq = none
   559c0:	cmp	x11, x8
   559c4:	cset	w11, le
   559c8:	and	w9, w12, w9
   559cc:	orr	w10, w10, w11
   559d0:	tbnz	w9, #0, 55908 <mpfr_ai@@Base+0xec8>
   559d4:	sub	x9, x27, #0x1
   559d8:	cbz	w10, 55908 <mpfr_ai@@Base+0xec8>
   559dc:	mul	x9, x9, x27
   559e0:	cmp	x19, x9, lsr #1
   559e4:	b.hi	55908 <mpfr_ai@@Base+0xec8>  // b.pmore
   559e8:	subs	x20, x27, #0x2
   559ec:	b.eq	55a30 <mpfr_ai@@Base+0xff0>  // b.none
   559f0:	cmp	x27, #0x1
   559f4:	b.eq	55ab0 <mpfr_ai@@Base+0x1070>  // b.none
   559f8:	clz	x9, x20
   559fc:	mov	w10, #0x40                  	// #64
   55a00:	sub	x9, x10, x9
   55a04:	sub	x10, x28, x8
   55a08:	add	x26, x10, x9
   55a0c:	cmp	x25, x26
   55a10:	b.le	55a44 <mpfr_ai@@Base+0x1004>
   55a14:	add	x9, x26, x21
   55a18:	cmp	x25, x9
   55a1c:	mov	x19, x21
   55a20:	b.gt	55a48 <mpfr_ai@@Base+0x1008>
   55a24:	mvn	x9, x26
   55a28:	add	x19, x25, x9
   55a2c:	b	55a48 <mpfr_ai@@Base+0x1008>
   55a30:	mov	x9, xzr
   55a34:	sub	x10, x28, x8
   55a38:	add	x26, x10, x9
   55a3c:	cmp	x25, x26
   55a40:	b.gt	55a14 <mpfr_ai@@Base+0xfd4>
   55a44:	mov	x19, xzr
   55a48:	ldr	x25, [sp, #128]
   55a4c:	mov	x9, #0x4                   	// #4
   55a50:	movk	x9, #0x8000, lsl #48
   55a54:	cmp	x8, x9
   55a58:	b.lt	55a90 <mpfr_ai@@Base+0x1050>  // b.tstop
   55a5c:	ldur	x8, [x29, #-104]
   55a60:	ldr	x9, [x25]
   55a64:	ldur	x0, [x29, #-80]
   55a68:	mov	x2, x19
   55a6c:	sub	x10, x8, #0x1
   55a70:	add	x8, x8, #0x3e
   55a74:	cmp	x10, #0x0
   55a78:	csel	x8, x8, x10, lt  // lt = tstop
   55a7c:	asr	x8, x8, #6
   55a80:	add	x1, x8, #0x1
   55a84:	add	x3, x9, x24
   55a88:	bl	c370 <mpfr_round_p@plt>
   55a8c:	cbnz	w0, 55bec <mpfr_ai@@Base+0x11ac>
   55a90:	cbz	x19, 55b80 <mpfr_ai@@Base+0x1140>
   55a94:	cmp	x19, x21
   55a98:	b.ge	55ad0 <mpfr_ai@@Base+0x1090>  // b.tcont
   55a9c:	ldr	x8, [sp, #160]
   55aa0:	mov	w19, #0x2                   	// #2
   55aa4:	add	x25, x8, x26
   55aa8:	ldr	x26, [sp, #40]
   55aac:	b	557a0 <mpfr_ai@@Base+0xd60>
   55ab0:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55ab4:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   55ab8:	mov	w1, #0xf0                  	// #240
   55abc:	add	x0, x0, #0x21c
   55ac0:	add	x2, x2, #0x334
   55ac4:	bl	cb20 <mpfr_assert_fail@plt>
   55ac8:	ldur	x8, [x29, #-88]
   55acc:	b	559f8 <mpfr_ai@@Base+0xfb8>
   55ad0:	mov	x8, #0x4                   	// #4
   55ad4:	ldr	x9, [sp, #144]
   55ad8:	movk	x8, #0x8000, lsl #48
   55adc:	sub	x8, x8, x21
   55ae0:	sub	x8, x8, #0x105
   55ae4:	cmp	x9, x8
   55ae8:	b.gt	55b48 <mpfr_ai@@Base+0x1108>
   55aec:	ldr	x8, [sp, #144]
   55af0:	add	x21, x8, x21
   55af4:	cmp	x21, #0x0
   55af8:	cinc	x8, x21, lt  // lt = tstop
   55afc:	cmp	x27, #0x2
   55b00:	asr	x8, x8, #1
   55b04:	str	x8, [sp, #144]
   55b08:	b.ne	55b14 <mpfr_ai@@Base+0x10d4>  // b.any
   55b0c:	mov	x8, xzr
   55b10:	b	55b28 <mpfr_ai@@Base+0x10e8>
   55b14:	cmp	x27, #0x1
   55b18:	b.eq	55b64 <mpfr_ai@@Base+0x1124>  // b.none
   55b1c:	clz	x8, x20
   55b20:	mov	w9, #0x40                  	// #64
   55b24:	sub	x8, x9, x8
   55b28:	ldr	x10, [sp, #80]
   55b2c:	ldur	x9, [x29, #-88]
   55b30:	ldr	x26, [sp, #40]
   55b34:	mov	w19, #0x2                   	// #2
   55b38:	add	x10, x10, x21
   55b3c:	add	x8, x10, x8
   55b40:	sub	x25, x8, x9
   55b44:	b	55794 <mpfr_ai@@Base+0xd54>
   55b48:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55b4c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   55b50:	mov	w1, #0x116                 	// #278
   55b54:	add	x0, x0, #0x21c
   55b58:	add	x2, x2, #0x622
   55b5c:	bl	cb20 <mpfr_assert_fail@plt>
   55b60:	b	55aec <mpfr_ai@@Base+0x10ac>
   55b64:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55b68:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   55b6c:	mov	w1, #0x11a                 	// #282
   55b70:	add	x0, x0, #0x21c
   55b74:	add	x2, x2, #0x334
   55b78:	bl	cb20 <mpfr_assert_fail@plt>
   55b7c:	b	55b1c <mpfr_ai@@Base+0x10dc>
   55b80:	ldr	x8, [sp, #152]
   55b84:	subs	x19, x27, #0x2
   55b88:	lsl	x8, x8, #1
   55b8c:	str	x8, [sp, #152]
   55b90:	b.ne	55b9c <mpfr_ai@@Base+0x115c>  // b.any
   55b94:	mov	x8, xzr
   55b98:	b	55bb0 <mpfr_ai@@Base+0x1170>
   55b9c:	cmp	x27, #0x1
   55ba0:	b.eq	55bd0 <mpfr_ai@@Base+0x1190>  // b.none
   55ba4:	clz	x8, x19
   55ba8:	mov	w9, #0x40                  	// #64
   55bac:	sub	x8, x9, x8
   55bb0:	ldr	x9, [sp, #136]
   55bb4:	ldr	x22, [sp, #152]
   55bb8:	ldr	x26, [sp, #40]
   55bbc:	mov	w19, #0x2                   	// #2
   55bc0:	add	x9, x9, x21
   55bc4:	add	x9, x9, x22
   55bc8:	add	x25, x9, x8
   55bcc:	b	55790 <mpfr_ai@@Base+0xd50>
   55bd0:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55bd4:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   55bd8:	mov	w1, #0x109                 	// #265
   55bdc:	add	x0, x0, #0x21c
   55be0:	add	x2, x2, #0x334
   55be4:	bl	cb20 <mpfr_assert_fail@plt>
   55be8:	b	55ba4 <mpfr_ai@@Base+0x1164>
   55bec:	ldr	w19, [sp, #124]
   55bf0:	ldur	w3, [x29, #-96]
   55bf4:	sub	x1, x29, #0x68
   55bf8:	mov	x0, x25
   55bfc:	mov	w2, w19
   55c00:	bl	c690 <mpfr_set4@plt>
   55c04:	mov	w21, w0
   55c08:	sub	x0, x29, #0x88
   55c0c:	bl	c0b0 <mpfr_clear@plt>
   55c10:	sub	x0, x29, #0xa8
   55c14:	bl	c0b0 <mpfr_clear@plt>
   55c18:	add	x0, sp, #0x108
   55c1c:	bl	c0b0 <mpfr_clear@plt>
   55c20:	add	x0, sp, #0xe8
   55c24:	bl	c0b0 <mpfr_clear@plt>
   55c28:	sub	x0, x29, #0xc8
   55c2c:	bl	c0b0 <mpfr_clear@plt>
   55c30:	sub	x0, x29, #0x68
   55c34:	bl	c0b0 <mpfr_clear@plt>
   55c38:	sub	x0, x29, #0xe8
   55c3c:	bl	c0b0 <mpfr_clear@plt>
   55c40:	add	x0, sp, #0x128
   55c44:	bl	c0b0 <mpfr_clear@plt>
   55c48:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55c4c:	ldr	x1, [x0, #2640]
   55c50:	add	x0, x0, #0xa50
   55c54:	blr	x1
   55c58:	ldr	x9, [sp, #104]
   55c5c:	ldr	w10, [sp, #100]
   55c60:	str	w10, [x9, x0]
   55c64:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55c68:	ldr	x1, [x0, #2576]
   55c6c:	add	x0, x0, #0xa10
   55c70:	blr	x1
   55c74:	ldr	x11, [sp, #112]
   55c78:	str	x11, [x9, x0]
   55c7c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55c80:	ldr	x1, [x0, #2608]
   55c84:	add	x0, x0, #0xa30
   55c88:	blr	x1
   55c8c:	ldr	x12, [sp, #88]
   55c90:	str	x12, [x9, x0]
   55c94:	ldr	x8, [x25, #16]
   55c98:	cmp	x8, x12
   55c9c:	b.gt	5606c <mpfr_ai@@Base+0x162c>
   55ca0:	cmp	x8, x11
   55ca4:	b.lt	5606c <mpfr_ai@@Base+0x162c>  // b.tstop
   55ca8:	cbz	w21, 55cc4 <mpfr_ai@@Base+0x1284>
   55cac:	orr	w8, w10, #0x8
   55cb0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55cb4:	ldr	x1, [x0, #2640]
   55cb8:	add	x0, x0, #0xa50
   55cbc:	blr	x1
   55cc0:	str	w8, [x9, x0]
   55cc4:	mov	w0, w21
   55cc8:	add	sp, sp, #0x230
   55ccc:	ldp	x20, x19, [sp, #80]
   55cd0:	ldp	x22, x21, [sp, #64]
   55cd4:	ldp	x24, x23, [sp, #48]
   55cd8:	ldp	x26, x25, [sp, #32]
   55cdc:	ldp	x28, x27, [sp, #16]
   55ce0:	ldp	x29, x30, [sp], #96
   55ce4:	ret
   55ce8:	mov	x20, xzr
   55cec:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   55cf0:	cmp	x21, x8
   55cf4:	add	x28, x19, #0xb
   55cf8:	b.eq	54cc4 <mpfr_ai@@Base+0x284>  // b.none
   55cfc:	ldr	w8, [x26, #8]
   55d00:	cmp	w8, #0x1
   55d04:	b.lt	55d80 <mpfr_ai@@Base+0x1340>  // b.tstop
   55d08:	cmp	x21, #0x1
   55d0c:	b.lt	55d90 <mpfr_ai@@Base+0x1350>  // b.tstop
   55d10:	add	x0, sp, #0x128
   55d14:	mov	w1, #0x2                   	// #2
   55d18:	bl	bcf0 <mpfr_get_ui@plt>
   55d1c:	add	x8, x0, x21, lsr #2
   55d20:	add	x21, x8, #0x3
   55d24:	cmp	x28, #0x1
   55d28:	b.ne	54cd0 <mpfr_ai@@Base+0x290>  // b.any
   55d2c:	mov	x8, xzr
   55d30:	b	54ce8 <mpfr_ai@@Base+0x2a8>
   55d34:	mov	x20, xzr
   55d38:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   55d3c:	cmp	x22, x8
   55d40:	add	x21, x19, #0xb
   55d44:	b.eq	556f4 <mpfr_ai@@Base+0xcb4>  // b.none
   55d48:	ldr	w8, [x26, #8]
   55d4c:	cmp	w8, #0x1
   55d50:	b.lt	55da0 <mpfr_ai@@Base+0x1360>  // b.tstop
   55d54:	cmp	x22, #0x1
   55d58:	b.lt	55db0 <mpfr_ai@@Base+0x1370>  // b.tstop
   55d5c:	add	x0, sp, #0x128
   55d60:	mov	w1, #0x2                   	// #2
   55d64:	bl	bcf0 <mpfr_get_ui@plt>
   55d68:	add	x8, x0, x22, lsr #2
   55d6c:	add	x22, x8, #0x3
   55d70:	cmp	x21, #0x1
   55d74:	b.ne	55700 <mpfr_ai@@Base+0xcc0>  // b.any
   55d78:	mov	w8, #0x5                   	// #5
   55d7c:	b	55718 <mpfr_ai@@Base+0xcd8>
   55d80:	mov	w21, #0xa                   	// #10
   55d84:	cmp	x28, #0x1
   55d88:	b.ne	54cd0 <mpfr_ai@@Base+0x290>  // b.any
   55d8c:	b	55d2c <mpfr_ai@@Base+0x12ec>
   55d90:	mov	w21, #0x3                   	// #3
   55d94:	cmp	x28, #0x1
   55d98:	b.ne	54cd0 <mpfr_ai@@Base+0x290>  // b.any
   55d9c:	b	55d2c <mpfr_ai@@Base+0x12ec>
   55da0:	mov	w22, #0xa                   	// #10
   55da4:	cmp	x21, #0x1
   55da8:	b.ne	55700 <mpfr_ai@@Base+0xcc0>  // b.any
   55dac:	b	55d78 <mpfr_ai@@Base+0x1338>
   55db0:	mov	w22, #0x3                   	// #3
   55db4:	cmp	x21, #0x1
   55db8:	b.ne	55700 <mpfr_ai@@Base+0xcc0>  // b.any
   55dbc:	b	55d78 <mpfr_ai@@Base+0x1338>
   55dc0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   55dc4:	cmp	x8, x9
   55dc8:	b.eq	560a0 <mpfr_ai@@Base+0x1660>  // b.none
   55dcc:	mov	x9, #0x2                   	// #2
   55dd0:	movk	x9, #0x8000, lsl #48
   55dd4:	cmp	x8, x9
   55dd8:	b.ne	54a80 <mpfr_ai@@Base+0x40>  // b.any
   55ddc:	sub	x8, x27, #0x2
   55de0:	str	x8, [x25, #16]
   55de4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55de8:	ldr	x1, [x0, #2640]
   55dec:	add	x0, x0, #0xa50
   55df0:	blr	x1
   55df4:	mrs	x8, tpidr_el0
   55df8:	ldr	w9, [x8, x0]
   55dfc:	mov	w21, wzr
   55e00:	orr	w9, w9, #0x4
   55e04:	str	w9, [x8, x0]
   55e08:	b	55cc4 <mpfr_ai@@Base+0x1284>
   55e0c:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55e10:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   55e14:	add	x0, x0, #0x21c
   55e18:	add	x2, x2, #0x221
   55e1c:	mov	w1, #0x189                 	// #393
   55e20:	bl	cb20 <mpfr_assert_fail@plt>
   55e24:	b	54d20 <mpfr_ai@@Base+0x2e0>
   55e28:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55e2c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   55e30:	add	x0, x0, #0x21c
   55e34:	add	x2, x2, #0x60d
   55e38:	mov	w1, #0x182                 	// #386
   55e3c:	bl	cb20 <mpfr_assert_fail@plt>
   55e40:	b	54cd8 <mpfr_ai@@Base+0x298>
   55e44:	ldr	x8, [x25]
   55e48:	mov	x9, #0x4                   	// #4
   55e4c:	movk	x9, #0x8000, lsl #48
   55e50:	mov	w27, w20
   55e54:	mov	x20, #0x4                   	// #4
   55e58:	sub	x9, x9, #0x107
   55e5c:	mov	x28, x21
   55e60:	mov	x26, x23
   55e64:	movk	x20, #0x8000, lsl #48
   55e68:	cmp	x8, x9
   55e6c:	b.ge	560b8 <mpfr_ai@@Base+0x1678>  // b.tcont
   55e70:	add	x19, x8, #0x3
   55e74:	sub	x0, x29, #0x28
   55e78:	mov	x1, x19
   55e7c:	bl	ca60 <mpfr_init2@plt>
   55e80:	sub	x0, x29, #0x48
   55e84:	mov	x1, x19
   55e88:	bl	ca60 <mpfr_init2@plt>
   55e8c:	cmp	w24, #0x0
   55e90:	adrp	x21, 5f000 <mpfr_l2b_3_1__tab@@Base>
   55e94:	mov	w22, #0x40                  	// #64
   55e98:	cset	w23, eq  // eq = none
   55e9c:	add	x21, x21, #0x622
   55ea0:	sub	x0, x29, #0x28
   55ea4:	sub	x1, x29, #0x48
   55ea8:	mov	x2, x19
   55eac:	bl	bbf0 <mpfr_gamma_one_and_two_third@plt>
   55eb0:	sub	x0, x29, #0x28
   55eb4:	mov	w1, #0x9                   	// #9
   55eb8:	mov	x2, xzr
   55ebc:	mov	w3, wzr
   55ec0:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   55ec4:	sub	x0, x29, #0x28
   55ec8:	sub	x1, x29, #0x28
   55ecc:	mov	w2, wzr
   55ed0:	bl	cd00 <mpfr_cbrt@plt>
   55ed4:	sub	x0, x29, #0x28
   55ed8:	sub	x1, x29, #0x28
   55edc:	sub	x2, x29, #0x48
   55ee0:	mov	w3, wzr
   55ee4:	bl	bda0 <mpfr_mul@plt>
   55ee8:	sub	x0, x29, #0x28
   55eec:	sub	x2, x29, #0x28
   55ef0:	mov	w1, #0x1                   	// #1
   55ef4:	mov	w3, wzr
   55ef8:	bl	c2f0 <mpfr_ui_div@plt>
   55efc:	ldur	x8, [x29, #-24]
   55f00:	cmp	x8, x20
   55f04:	b.lt	55f3c <mpfr_ai@@Base+0x14fc>  // b.tstop
   55f08:	ldur	x8, [x29, #-40]
   55f0c:	ldr	x9, [x25]
   55f10:	ldur	x0, [x29, #-16]
   55f14:	sub	x2, x19, #0x3
   55f18:	sub	x10, x8, #0x1
   55f1c:	add	x8, x8, #0x3e
   55f20:	cmp	x10, #0x0
   55f24:	csel	x8, x8, x10, lt  // lt = tstop
   55f28:	asr	x8, x8, #6
   55f2c:	add	x1, x8, #0x1
   55f30:	add	x3, x9, x23
   55f34:	bl	c370 <mpfr_round_p@plt>
   55f38:	cbnz	w0, 55f80 <mpfr_ai@@Base+0x1540>
   55f3c:	sub	x8, x20, x19
   55f40:	sub	x8, x8, #0x105
   55f44:	cmp	x22, x8
   55f48:	b.gt	55f68 <mpfr_ai@@Base+0x1528>
   55f4c:	add	x19, x22, x19
   55f50:	ldr	w24, [sp, #124]
   55f54:	ldr	x25, [sp, #128]
   55f58:	cmp	x19, #0x0
   55f5c:	cinc	x8, x19, lt  // lt = tstop
   55f60:	asr	x22, x8, #1
   55f64:	b	55ea0 <mpfr_ai@@Base+0x1460>
   55f68:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   55f6c:	mov	w1, #0x63                  	// #99
   55f70:	add	x0, x0, #0x21c
   55f74:	mov	x2, x21
   55f78:	bl	cb20 <mpfr_assert_fail@plt>
   55f7c:	b	55f4c <mpfr_ai@@Base+0x150c>
   55f80:	ldur	w3, [x29, #-32]
   55f84:	sub	x1, x29, #0x28
   55f88:	mov	x0, x25
   55f8c:	mov	w2, w24
   55f90:	bl	c690 <mpfr_set4@plt>
   55f94:	mov	w21, w0
   55f98:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55f9c:	ldr	x1, [x0, #2640]
   55fa0:	add	x0, x0, #0xa50
   55fa4:	blr	x1
   55fa8:	str	w27, [x26, x0]
   55fac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55fb0:	ldr	x1, [x0, #2576]
   55fb4:	add	x0, x0, #0xa10
   55fb8:	blr	x1
   55fbc:	ldr	x8, [sp, #112]
   55fc0:	mov	x20, x0
   55fc4:	str	x8, [x26, x0]
   55fc8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   55fcc:	ldr	x1, [x0, #2608]
   55fd0:	add	x0, x0, #0xa30
   55fd4:	blr	x1
   55fd8:	mov	x19, x0
   55fdc:	str	x28, [x26, x0]
   55fe0:	sub	x0, x29, #0x28
   55fe4:	bl	c0b0 <mpfr_clear@plt>
   55fe8:	sub	x0, x29, #0x48
   55fec:	bl	c0b0 <mpfr_clear@plt>
   55ff0:	ldr	x8, [x25, #16]
   55ff4:	ldr	x9, [x26, x20]
   55ff8:	cmp	x8, x9
   55ffc:	b.lt	560d8 <mpfr_ai@@Base+0x1698>  // b.tstop
   56000:	ldr	x9, [x26, x19]
   56004:	cmp	x8, x9
   56008:	b.gt	560d8 <mpfr_ai@@Base+0x1698>
   5600c:	cbz	w21, 55cc4 <mpfr_ai@@Base+0x1284>
   56010:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56014:	ldr	x1, [x0, #2640]
   56018:	add	x0, x0, #0xa50
   5601c:	blr	x1
   56020:	ldr	w8, [x26, x0]
   56024:	orr	w8, w8, #0x8
   56028:	str	w8, [x26, x0]
   5602c:	b	55cc4 <mpfr_ai@@Base+0x1284>
   56030:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   56034:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   56038:	add	x0, x0, #0x21c
   5603c:	add	x2, x2, #0x29d
   56040:	mov	w1, #0x7c                  	// #124
   56044:	bl	cb20 <mpfr_assert_fail@plt>
   56048:	ldr	x19, [x25]
   5604c:	b	55630 <mpfr_ai@@Base+0xbf0>
   56050:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   56054:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   56058:	add	x0, x0, #0x21c
   5605c:	add	x2, x2, #0x2ee
   56060:	mov	w1, #0xac                  	// #172
   56064:	bl	cb20 <mpfr_assert_fail@plt>
   56068:	b	55730 <mpfr_ai@@Base+0xcf0>
   5606c:	mov	x0, x25
   56070:	mov	w1, w21
   56074:	mov	w2, w19
   56078:	bl	cb10 <mpfr_check_range@plt>
   5607c:	mov	w21, w0
   56080:	b	55cc4 <mpfr_ai@@Base+0x1284>
   56084:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   56088:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   5608c:	add	x0, x0, #0x21c
   56090:	add	x2, x2, #0x60d
   56094:	mov	w1, #0xab                  	// #171
   56098:	bl	cb20 <mpfr_assert_fail@plt>
   5609c:	b	55708 <mpfr_ai@@Base+0xcc8>
   560a0:	mov	w8, #0x1                   	// #1
   560a4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   560a8:	mov	w21, wzr
   560ac:	str	w8, [x25, #8]
   560b0:	str	x9, [x25, #16]
   560b4:	b	55cc4 <mpfr_ai@@Base+0x1284>
   560b8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   560bc:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   560c0:	add	x0, x0, #0x21c
   560c4:	add	x2, x2, #0x24d
   560c8:	mov	w1, #0x52                  	// #82
   560cc:	bl	cb20 <mpfr_assert_fail@plt>
   560d0:	ldr	x8, [x25]
   560d4:	b	55e70 <mpfr_ai@@Base+0x1430>
   560d8:	mov	x0, x25
   560dc:	mov	w1, w21
   560e0:	mov	w2, w24
   560e4:	b	56078 <mpfr_ai@@Base+0x1638>

00000000000560e8 <mpfr_div_ui2@@Base>:
   560e8:	stp	x29, x30, [sp, #-48]!
   560ec:	stp	x22, x21, [sp, #16]
   560f0:	stp	x20, x19, [sp, #32]
   560f4:	mov	x20, x3
   560f8:	ldr	w3, [x1, #8]
   560fc:	mov	x22, x2
   56100:	mov	w2, w4
   56104:	mov	x29, sp
   56108:	mov	w19, w4
   5610c:	mov	x21, x0
   56110:	bl	c690 <mpfr_set4@plt>
   56114:	umulh	x8, x22, x20
   56118:	cmp	xzr, x8
   5611c:	b.eq	56138 <mpfr_div_ui2@@Base+0x50>  // b.none
   56120:	mov	x0, x21
   56124:	mov	x1, x21
   56128:	mov	x2, x22
   5612c:	mov	w3, w19
   56130:	bl	cc40 <mpfr_div_ui@plt>
   56134:	b	5613c <mpfr_div_ui2@@Base+0x54>
   56138:	mul	x20, x20, x22
   5613c:	mov	x0, x21
   56140:	mov	x1, x21
   56144:	mov	x2, x20
   56148:	mov	w3, w19
   5614c:	ldp	x20, x19, [sp, #32]
   56150:	ldp	x22, x21, [sp, #16]
   56154:	ldp	x29, x30, [sp], #48
   56158:	b	cc40 <mpfr_div_ui@plt>

000000000005615c <mpfr_gamma_one_and_two_third@@Base>:
   5615c:	sub	sp, sp, #0x120
   56160:	stp	x22, x21, [sp, #256]
   56164:	add	x21, x2, #0x4
   56168:	stp	x20, x19, [sp, #272]
   5616c:	mov	x19, x1
   56170:	mov	x20, x0
   56174:	add	x0, sp, #0x18
   56178:	mov	x1, x21
   5617c:	stp	x29, x30, [sp, #192]
   56180:	stp	x28, x27, [sp, #208]
   56184:	stp	x26, x25, [sp, #224]
   56188:	stp	x24, x23, [sp, #240]
   5618c:	add	x29, sp, #0xc0
   56190:	mov	x22, x2
   56194:	bl	ca60 <mpfr_init2@plt>
   56198:	mov	x0, x19
   5619c:	mov	x1, x21
   561a0:	str	x19, [sp, #16]
   561a4:	bl	bf20 <mpfr_set_prec@plt>
   561a8:	add	x21, x22, #0xd
   561ac:	sub	x0, x29, #0x48
   561b0:	mov	x1, x21
   561b4:	bl	ca60 <mpfr_init2@plt>
   561b8:	add	x0, sp, #0x58
   561bc:	mov	x1, x21
   561c0:	bl	ca60 <mpfr_init2@plt>
   561c4:	add	x1, x22, #0x8
   561c8:	add	x0, sp, #0x38
   561cc:	bl	ca60 <mpfr_init2@plt>
   561d0:	add	x1, x22, #0x6
   561d4:	mov	x0, x20
   561d8:	str	x20, [sp, #8]
   561dc:	bl	bf20 <mpfr_set_prec@plt>
   561e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   561e4:	ldr	x1, [x0, #2688]
   561e8:	add	x0, x0, #0xa80
   561ec:	blr	x1
   561f0:	mrs	x8, tpidr_el0
   561f4:	add	x1, x8, x0
   561f8:	sub	x0, x29, #0x48
   561fc:	mov	w2, wzr
   56200:	str	x8, [sp]
   56204:	bl	c380 <mpfr_cache@plt>
   56208:	sub	x0, x29, #0x48
   5620c:	sub	x1, x29, #0x48
   56210:	mov	w2, wzr
   56214:	bl	c3f0 <mpfr_sqr@plt>
   56218:	sub	x0, x29, #0x48
   5621c:	sub	x1, x29, #0x48
   56220:	mov	w2, wzr
   56224:	bl	c3f0 <mpfr_sqr@plt>
   56228:	sub	x0, x29, #0x48
   5622c:	sub	x1, x29, #0x48
   56230:	mov	w2, #0xc                   	// #12
   56234:	mov	w3, wzr
   56238:	bl	bab0 <mpfr_mul_ui@plt>
   5623c:	add	x8, x22, #0x20
   56240:	cmp	x8, #0xa
   56244:	add	x19, x22, #0x17
   56248:	b.cc	566b8 <mpfr_gamma_one_and_two_third@@Base+0x55c>  // b.lo, b.ul, b.last
   5624c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   56250:	movk	x8, #0x6667
   56254:	smulh	x8, x21, x8
   56258:	asr	x9, x8, #2
   5625c:	cmn	x22, #0x17
   56260:	add	x20, x9, x8, lsr #63
   56264:	b.le	566c0 <mpfr_gamma_one_and_two_third@@Base+0x564>
   56268:	add	x8, x20, #0x1
   5626c:	clz	x8, x8
   56270:	mov	w9, #0x40                  	// #64
   56274:	sub	x8, x9, x8
   56278:	mov	x27, #0x9999999999999999    	// #-7378697629483820647
   5627c:	add	x22, x19, x8
   56280:	movk	x27, #0x999a
   56284:	sub	x0, x29, #0x28
   56288:	mov	x1, x22
   5628c:	movk	x27, #0x199, lsl #48
   56290:	bl	ca60 <mpfr_init2@plt>
   56294:	add	x0, sp, #0x58
   56298:	mov	x1, x22
   5629c:	bl	bf20 <mpfr_set_prec@plt>
   562a0:	sub	x0, x29, #0x28
   562a4:	mov	w1, #0x1                   	// #1
   562a8:	mov	x2, xzr
   562ac:	mov	w3, wzr
   562b0:	mov	w22, #0x1                   	// #1
   562b4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   562b8:	ldur	w3, [x29, #-32]
   562bc:	add	x0, sp, #0x58
   562c0:	sub	x1, x29, #0x28
   562c4:	mov	w2, wzr
   562c8:	bl	c690 <mpfr_set4@plt>
   562cc:	mov	x19, #0x3333333333333333    	// #3689348814741910323
   562d0:	mov	w28, #0x3                   	// #3
   562d4:	mov	w26, #0x5                   	// #5
   562d8:	mov	w20, #0x3200                	// #12800
   562dc:	movk	x19, #0x333, lsl #48
   562e0:	b	56350 <mpfr_gamma_one_and_two_third@@Base+0x1f4>
   562e4:	sub	x0, x29, #0x28
   562e8:	sub	x1, x29, #0x28
   562ec:	mov	x2, x23
   562f0:	mov	w3, wzr
   562f4:	bl	cc40 <mpfr_div_ui@plt>
   562f8:	mov	w2, #0xa0                  	// #160
   562fc:	sub	x0, x29, #0x28
   56300:	sub	x1, x29, #0x28
   56304:	mov	w3, wzr
   56308:	bl	cc40 <mpfr_div_ui@plt>
   5630c:	ldur	w8, [x29, #-32]
   56310:	add	x0, sp, #0x58
   56314:	add	x1, sp, #0x58
   56318:	sub	x2, x29, #0x28
   5631c:	neg	w8, w8
   56320:	mov	w3, wzr
   56324:	stur	w8, [x29, #-32]
   56328:	bl	c1e0 <mpfr_add@plt>
   5632c:	ldur	x8, [x29, #-24]
   56330:	ldr	x9, [sp, #104]
   56334:	add	x22, x22, #0x1
   56338:	add	x28, x28, #0x3
   5633c:	add	x8, x8, x21
   56340:	add	x9, x9, #0x7
   56344:	cmp	x8, x9
   56348:	add	x26, x26, #0x6
   5634c:	b.le	56578 <mpfr_gamma_one_and_two_third@@Base+0x41c>
   56350:	ldur	w3, [x29, #-32]
   56354:	sub	x0, x29, #0x28
   56358:	sub	x1, x29, #0x28
   5635c:	mov	w2, wzr
   56360:	sub	x24, x26, #0x4
   56364:	sub	x25, x26, #0x3
   56368:	sub	x23, x26, #0x2
   5636c:	bl	c690 <mpfr_set4@plt>
   56370:	umulh	x8, x24, x25
   56374:	cmp	xzr, x8
   56378:	b.eq	563c8 <mpfr_gamma_one_and_two_third@@Base+0x26c>  // b.none
   5637c:	sub	x0, x29, #0x28
   56380:	sub	x1, x29, #0x28
   56384:	mov	x2, x24
   56388:	mov	w3, wzr
   5638c:	bl	bab0 <mpfr_mul_ui@plt>
   56390:	umulh	x8, x25, x23
   56394:	cmp	xzr, x8
   56398:	sub	x24, x26, #0x1
   5639c:	b.ne	563dc <mpfr_gamma_one_and_two_third@@Base+0x280>  // b.any
   563a0:	mul	x23, x25, x23
   563a4:	umulh	x8, x23, x24
   563a8:	cmp	xzr, x8
   563ac:	b.ne	563fc <mpfr_gamma_one_and_two_third@@Base+0x2a0>  // b.any
   563b0:	mul	x24, x23, x24
   563b4:	umulh	x8, x24, x26
   563b8:	cmp	xzr, x8
   563bc:	b.ne	5641c <mpfr_gamma_one_and_two_third@@Base+0x2c0>  // b.any
   563c0:	mul	x2, x24, x26
   563c4:	b	56434 <mpfr_gamma_one_and_two_third@@Base+0x2d8>
   563c8:	mul	x25, x25, x24
   563cc:	umulh	x8, x25, x23
   563d0:	cmp	xzr, x8
   563d4:	sub	x24, x26, #0x1
   563d8:	b.eq	563a0 <mpfr_gamma_one_and_two_third@@Base+0x244>  // b.none
   563dc:	sub	x0, x29, #0x28
   563e0:	sub	x1, x29, #0x28
   563e4:	mov	x2, x25
   563e8:	mov	w3, wzr
   563ec:	bl	bab0 <mpfr_mul_ui@plt>
   563f0:	umulh	x8, x23, x24
   563f4:	cmp	xzr, x8
   563f8:	b.eq	563b0 <mpfr_gamma_one_and_two_third@@Base+0x254>  // b.none
   563fc:	sub	x0, x29, #0x28
   56400:	sub	x1, x29, #0x28
   56404:	mov	x2, x23
   56408:	mov	w3, wzr
   5640c:	bl	bab0 <mpfr_mul_ui@plt>
   56410:	umulh	x8, x24, x26
   56414:	cmp	xzr, x8
   56418:	b.eq	563c0 <mpfr_gamma_one_and_two_third@@Base+0x264>  // b.none
   5641c:	sub	x0, x29, #0x28
   56420:	sub	x1, x29, #0x28
   56424:	mov	x2, x24
   56428:	mov	w3, wzr
   5642c:	bl	bab0 <mpfr_mul_ui@plt>
   56430:	mov	x2, x26
   56434:	sub	x0, x29, #0x28
   56438:	sub	x1, x29, #0x28
   5643c:	mov	w3, wzr
   56440:	bl	bab0 <mpfr_mul_ui@plt>
   56444:	ldur	w3, [x29, #-32]
   56448:	sub	x0, x29, #0x28
   5644c:	sub	x1, x29, #0x28
   56450:	mov	w2, wzr
   56454:	sub	x23, x28, #0x2
   56458:	bl	c690 <mpfr_set4@plt>
   5645c:	umulh	x8, x22, x22
   56460:	cmp	xzr, x8
   56464:	b.eq	564c4 <mpfr_gamma_one_and_two_third@@Base+0x368>  // b.none
   56468:	sub	x0, x29, #0x28
   5646c:	sub	x1, x29, #0x28
   56470:	mov	x2, x22
   56474:	mov	w3, wzr
   56478:	bl	cc40 <mpfr_div_ui@plt>
   5647c:	mov	x2, x22
   56480:	umulh	x8, x2, x23
   56484:	cmp	xzr, x8
   56488:	sub	x24, x28, #0x1
   5648c:	b.ne	564d8 <mpfr_gamma_one_and_two_third@@Base+0x37c>  // b.any
   56490:	mul	x23, x2, x23
   56494:	umulh	x8, x23, x24
   56498:	cmp	xzr, x8
   5649c:	b.ne	564f4 <mpfr_gamma_one_and_two_third@@Base+0x398>  // b.any
   564a0:	mul	x24, x23, x24
   564a4:	umulh	x8, x24, x28
   564a8:	cmp	xzr, x8
   564ac:	b.ne	56514 <mpfr_gamma_one_and_two_third@@Base+0x3b8>  // b.any
   564b0:	mul	x2, x24, x28
   564b4:	cmp	x2, x19
   564b8:	b.ls	56534 <mpfr_gamma_one_and_two_third@@Base+0x3d8>  // b.plast
   564bc:	mov	w23, #0x3200                	// #12800
   564c0:	b	5655c <mpfr_gamma_one_and_two_third@@Base+0x400>
   564c4:	mul	x2, x22, x22
   564c8:	umulh	x8, x2, x23
   564cc:	cmp	xzr, x8
   564d0:	sub	x24, x28, #0x1
   564d4:	b.eq	56490 <mpfr_gamma_one_and_two_third@@Base+0x334>  // b.none
   564d8:	sub	x0, x29, #0x28
   564dc:	sub	x1, x29, #0x28
   564e0:	mov	w3, wzr
   564e4:	bl	cc40 <mpfr_div_ui@plt>
   564e8:	umulh	x8, x23, x24
   564ec:	cmp	xzr, x8
   564f0:	b.eq	564a0 <mpfr_gamma_one_and_two_third@@Base+0x344>  // b.none
   564f4:	sub	x0, x29, #0x28
   564f8:	sub	x1, x29, #0x28
   564fc:	mov	x2, x23
   56500:	mov	w3, wzr
   56504:	bl	cc40 <mpfr_div_ui@plt>
   56508:	umulh	x8, x24, x28
   5650c:	cmp	xzr, x8
   56510:	b.eq	564b0 <mpfr_gamma_one_and_two_third@@Base+0x354>  // b.none
   56514:	sub	x0, x29, #0x28
   56518:	sub	x1, x29, #0x28
   5651c:	mov	x2, x24
   56520:	mov	w3, wzr
   56524:	bl	cc40 <mpfr_div_ui@plt>
   56528:	mov	x2, x28
   5652c:	cmp	x2, x19
   56530:	b.hi	564bc <mpfr_gamma_one_and_two_third@@Base+0x360>  // b.pmore
   56534:	add	x8, x2, x2, lsl #2
   56538:	lsl	x8, x8, #4
   5653c:	cmp	x8, x27
   56540:	b.cs	56554 <mpfr_gamma_one_and_two_third@@Base+0x3f8>  // b.hs, b.nlast
   56544:	mul	x23, x2, x20
   56548:	cmp	x23, x27
   5654c:	b.cs	562e4 <mpfr_gamma_one_and_two_third@@Base+0x188>  // b.hs, b.nlast
   56550:	b	5656c <mpfr_gamma_one_and_two_third@@Base+0x410>
   56554:	mov	x2, x8
   56558:	mov	w23, #0xa0                  	// #160
   5655c:	sub	x0, x29, #0x28
   56560:	sub	x1, x29, #0x28
   56564:	mov	w3, wzr
   56568:	bl	cc40 <mpfr_div_ui@plt>
   5656c:	add	x8, x23, x23, lsl #2
   56570:	lsl	x2, x8, #5
   56574:	b	562fc <mpfr_gamma_one_and_two_third@@Base+0x1a0>
   56578:	sub	x0, x29, #0x28
   5657c:	bl	c0b0 <mpfr_clear@plt>
   56580:	sub	x0, x29, #0x48
   56584:	sub	x1, x29, #0x48
   56588:	add	x2, sp, #0x58
   5658c:	mov	w3, wzr
   56590:	bl	bda0 <mpfr_mul@plt>
   56594:	add	x0, sp, #0x58
   56598:	mov	w1, #0xa                   	// #10
   5659c:	mov	x2, xzr
   565a0:	mov	w3, wzr
   565a4:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   565a8:	add	x0, sp, #0x58
   565ac:	add	x1, sp, #0x58
   565b0:	mov	w2, wzr
   565b4:	bl	c920 <mpfr_sqrt@plt>
   565b8:	sub	x0, x29, #0x48
   565bc:	sub	x1, x29, #0x48
   565c0:	add	x2, sp, #0x58
   565c4:	mov	w3, wzr
   565c8:	bl	c610 <mpfr_div@plt>
   565cc:	add	x0, sp, #0x38
   565d0:	sub	x1, x29, #0x48
   565d4:	mov	w2, wzr
   565d8:	bl	c920 <mpfr_sqrt@plt>
   565dc:	ldr	x19, [sp, #8]
   565e0:	add	x1, sp, #0x38
   565e4:	mov	w2, wzr
   565e8:	mov	x0, x19
   565ec:	bl	cd00 <mpfr_cbrt@plt>
   565f0:	sub	x0, x29, #0x48
   565f4:	bl	c0b0 <mpfr_clear@plt>
   565f8:	add	x0, sp, #0x58
   565fc:	bl	c0b0 <mpfr_clear@plt>
   56600:	add	x0, sp, #0x38
   56604:	bl	c0b0 <mpfr_clear@plt>
   56608:	add	x0, sp, #0x18
   5660c:	mov	w1, #0x3                   	// #3
   56610:	mov	x2, xzr
   56614:	mov	w3, wzr
   56618:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   5661c:	add	x0, sp, #0x18
   56620:	add	x1, sp, #0x18
   56624:	mov	w2, wzr
   56628:	bl	c920 <mpfr_sqrt@plt>
   5662c:	add	x0, sp, #0x18
   56630:	add	x2, sp, #0x18
   56634:	mov	x1, x19
   56638:	mov	w3, wzr
   5663c:	bl	bda0 <mpfr_mul@plt>
   56640:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56644:	ldr	x1, [x0, #2688]
   56648:	add	x0, x0, #0xa80
   5664c:	blr	x1
   56650:	ldr	x8, [sp]
   56654:	ldr	x19, [sp, #16]
   56658:	mov	w2, wzr
   5665c:	add	x1, x8, x0
   56660:	mov	x0, x19
   56664:	bl	c380 <mpfr_cache@plt>
   56668:	mov	w2, #0x1                   	// #1
   5666c:	mov	x0, x19
   56670:	mov	x1, x19
   56674:	mov	w3, wzr
   56678:	bl	c2c0 <mpfr_mul_2ui@plt>
   5667c:	add	x2, sp, #0x18
   56680:	mov	x0, x19
   56684:	mov	x1, x19
   56688:	mov	w3, wzr
   5668c:	bl	c610 <mpfr_div@plt>
   56690:	add	x0, sp, #0x18
   56694:	bl	c0b0 <mpfr_clear@plt>
   56698:	ldp	x20, x19, [sp, #272]
   5669c:	ldp	x22, x21, [sp, #256]
   566a0:	ldp	x24, x23, [sp, #240]
   566a4:	ldp	x26, x25, [sp, #224]
   566a8:	ldp	x28, x27, [sp, #208]
   566ac:	ldp	x29, x30, [sp, #192]
   566b0:	add	sp, sp, #0x120
   566b4:	ret
   566b8:	mov	x8, xzr
   566bc:	b	56278 <mpfr_gamma_one_and_two_third@@Base+0x11c>
   566c0:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   566c4:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   566c8:	add	x0, x0, #0x33c
   566cc:	add	x2, x2, #0x34c
   566d0:	mov	w1, #0x69                  	// #105
   566d4:	bl	cb20 <mpfr_assert_fail@plt>
   566d8:	b	56268 <mpfr_gamma_one_and_two_third@@Base+0x10c>

00000000000566dc <mpfr_grandom@@Base>:
   566dc:	sub	sp, sp, #0x180
   566e0:	stp	x29, x30, [sp, #288]
   566e4:	stp	x28, x27, [sp, #304]
   566e8:	stp	x26, x25, [sp, #320]
   566ec:	stp	x24, x23, [sp, #336]
   566f0:	stp	x22, x21, [sp, #352]
   566f4:	stp	x20, x19, [sp, #368]
   566f8:	ldr	x23, [x0]
   566fc:	mov	w27, w3
   56700:	mov	x22, x2
   56704:	mov	x21, x0
   56708:	mov	x19, x1
   5670c:	add	x29, sp, #0x120
   56710:	cbz	x1, 56720 <mpfr_grandom@@Base+0x44>
   56714:	ldr	x8, [x19]
   56718:	cmp	x23, x8
   5671c:	csel	x23, x23, x8, gt
   56720:	sub	x0, x29, #0x38
   56724:	add	x25, x23, #0xb
   56728:	bl	bfe0 <mpfr_mpz_init@plt>
   5672c:	sub	x0, x29, #0x48
   56730:	bl	bfe0 <mpfr_mpz_init@plt>
   56734:	sub	x0, x29, #0x18
   56738:	bl	bfe0 <mpfr_mpz_init@plt>
   5673c:	sub	x0, x29, #0x28
   56740:	bl	bfe0 <mpfr_mpz_init@plt>
   56744:	sub	x0, x29, #0x58
   56748:	bl	bfe0 <mpfr_mpz_init@plt>
   5674c:	sub	x0, x29, #0x88
   56750:	bl	bfe0 <mpfr_mpz_init@plt>
   56754:	sub	x0, x29, #0x68
   56758:	bl	bfe0 <mpfr_mpz_init@plt>
   5675c:	sub	x0, x29, #0x78
   56760:	bl	bfe0 <mpfr_mpz_init@plt>
   56764:	add	x0, sp, #0x78
   56768:	mov	w1, #0x1                   	// #1
   5676c:	bl	ca60 <mpfr_init2@plt>
   56770:	add	x0, sp, #0x58
   56774:	mov	w1, #0x1                   	// #1
   56778:	bl	ca60 <mpfr_init2@plt>
   5677c:	add	x0, sp, #0x38
   56780:	mov	w1, #0x1                   	// #1
   56784:	bl	ca60 <mpfr_init2@plt>
   56788:	str	x19, [sp, #16]
   5678c:	cbz	x19, 5679c <mpfr_grandom@@Base+0xc0>
   56790:	add	x0, sp, #0x18
   56794:	mov	w1, #0x1                   	// #1
   56798:	bl	ca60 <mpfr_init2@plt>
   5679c:	sub	x0, x29, #0x38
   567a0:	mov	x1, xzr
   567a4:	bl	bd00 <__gmpz_set_ui@plt>
   567a8:	sub	x0, x29, #0x48
   567ac:	mov	x1, xzr
   567b0:	bl	bd00 <__gmpz_set_ui@plt>
   567b4:	lsl	x8, x23, #1
   567b8:	lsl	x19, x25, #1
   567bc:	add	x20, x23, #0x9
   567c0:	add	x26, x8, #0x16
   567c4:	sub	x0, x29, #0x38
   567c8:	mov	x1, x22
   567cc:	mov	x2, x25
   567d0:	bl	cce0 <__gmpz_urandomb@plt>
   567d4:	sub	x0, x29, #0x48
   567d8:	mov	x1, x22
   567dc:	mov	x2, x25
   567e0:	bl	cce0 <__gmpz_urandomb@plt>
   567e4:	sub	x0, x29, #0x68
   567e8:	sub	x1, x29, #0x38
   567ec:	sub	x2, x29, #0x38
   567f0:	bl	c030 <__gmpz_mul@plt>
   567f4:	sub	x0, x29, #0x78
   567f8:	sub	x1, x29, #0x48
   567fc:	sub	x2, x29, #0x48
   56800:	bl	c030 <__gmpz_mul@plt>
   56804:	sub	x0, x29, #0x88
   56808:	sub	x1, x29, #0x68
   5680c:	sub	x2, x29, #0x78
   56810:	bl	c9a0 <__gmpz_add@plt>
   56814:	sub	x0, x29, #0x88
   56818:	mov	w1, #0x2                   	// #2
   5681c:	bl	cb40 <__gmpz_sizeinbase@plt>
   56820:	cmp	x0, x19
   56824:	b.hi	567c4 <mpfr_grandom@@Base+0xe8>  // b.pmore
   56828:	mov	x23, x26
   5682c:	mov	x24, x20
   56830:	b	568e0 <mpfr_grandom@@Base+0x204>
   56834:	sub	x0, x29, #0x38
   56838:	sub	x1, x29, #0x38
   5683c:	mov	w2, #0x20                  	// #32
   56840:	bl	c230 <__gmpz_mul_2exp@plt>
   56844:	sub	x0, x29, #0x48
   56848:	sub	x1, x29, #0x48
   5684c:	mov	w2, #0x20                  	// #32
   56850:	bl	c230 <__gmpz_mul_2exp@plt>
   56854:	sub	x0, x29, #0x18
   56858:	mov	w2, #0x20                  	// #32
   5685c:	mov	x1, x22
   56860:	bl	cce0 <__gmpz_urandomb@plt>
   56864:	sub	x0, x29, #0x28
   56868:	mov	w2, #0x20                  	// #32
   5686c:	mov	x1, x22
   56870:	bl	cce0 <__gmpz_urandomb@plt>
   56874:	sub	x0, x29, #0x38
   56878:	sub	x1, x29, #0x38
   5687c:	sub	x2, x29, #0x18
   56880:	bl	c9a0 <__gmpz_add@plt>
   56884:	sub	x0, x29, #0x48
   56888:	sub	x1, x29, #0x48
   5688c:	sub	x2, x29, #0x28
   56890:	bl	c9a0 <__gmpz_add@plt>
   56894:	sub	x0, x29, #0x68
   56898:	sub	x1, x29, #0x38
   5689c:	sub	x2, x29, #0x38
   568a0:	bl	c030 <__gmpz_mul@plt>
   568a4:	sub	x0, x29, #0x78
   568a8:	sub	x1, x29, #0x48
   568ac:	sub	x2, x29, #0x48
   568b0:	bl	c030 <__gmpz_mul@plt>
   568b4:	sub	x0, x29, #0x88
   568b8:	sub	x1, x29, #0x68
   568bc:	sub	x2, x29, #0x78
   568c0:	bl	c9a0 <__gmpz_add@plt>
   568c4:	sub	x0, x29, #0x88
   568c8:	mov	w1, #0x2                   	// #2
   568cc:	bl	cb40 <__gmpz_sizeinbase@plt>
   568d0:	add	x23, x23, #0x40
   568d4:	cmp	x0, x23
   568d8:	add	x24, x24, #0x20
   568dc:	b.hi	567c4 <mpfr_grandom@@Base+0xe8>  // b.pmore
   568e0:	sub	x0, x29, #0x68
   568e4:	sub	x1, x29, #0x38
   568e8:	mov	w2, #0x1                   	// #1
   568ec:	bl	c360 <__gmpz_add_ui@plt>
   568f0:	sub	x0, x29, #0x78
   568f4:	sub	x1, x29, #0x48
   568f8:	mov	w2, #0x1                   	// #1
   568fc:	bl	c360 <__gmpz_add_ui@plt>
   56900:	sub	x0, x29, #0x68
   56904:	sub	x1, x29, #0x68
   56908:	sub	x2, x29, #0x68
   5690c:	bl	c030 <__gmpz_mul@plt>
   56910:	sub	x0, x29, #0x78
   56914:	sub	x1, x29, #0x78
   56918:	sub	x2, x29, #0x78
   5691c:	bl	c030 <__gmpz_mul@plt>
   56920:	sub	x0, x29, #0x88
   56924:	sub	x1, x29, #0x68
   56928:	sub	x2, x29, #0x78
   5692c:	bl	c9a0 <__gmpz_add@plt>
   56930:	sub	x0, x29, #0x88
   56934:	mov	w1, #0x2                   	// #2
   56938:	bl	cb40 <__gmpz_sizeinbase@plt>
   5693c:	cmp	x0, x23
   56940:	b.ls	56964 <mpfr_grandom@@Base+0x288>  // b.plast
   56944:	add	x8, x23, #0x1
   56948:	cmp	x8, x0
   5694c:	b.ne	56834 <mpfr_grandom@@Base+0x158>  // b.any
   56950:	sub	x0, x29, #0x88
   56954:	mov	x1, xzr
   56958:	bl	baf0 <__gmpz_scan1@plt>
   5695c:	cmp	x23, x0
   56960:	b.ne	56834 <mpfr_grandom@@Base+0x158>  // b.any
   56964:	mov	x20, #0x4                   	// #4
   56968:	sub	x0, x29, #0x68
   5696c:	sub	x1, x29, #0x38
   56970:	sub	x2, x29, #0x38
   56974:	movk	x20, #0x8000, lsl #48
   56978:	bl	c030 <__gmpz_mul@plt>
   5697c:	sub	x0, x29, #0x78
   56980:	sub	x1, x29, #0x48
   56984:	sub	x2, x29, #0x48
   56988:	bl	c030 <__gmpz_mul@plt>
   5698c:	sub	x0, x29, #0x88
   56990:	sub	x1, x29, #0x68
   56994:	sub	x2, x29, #0x78
   56998:	bl	c9a0 <__gmpz_add@plt>
   5699c:	sub	x0, x29, #0x18
   569a0:	mov	w2, #0x2                   	// #2
   569a4:	mov	x1, x22
   569a8:	bl	cce0 <__gmpz_urandomb@plt>
   569ac:	sub	x0, x29, #0x18
   569b0:	mov	x1, xzr
   569b4:	bl	c020 <__gmpz_tstbit@plt>
   569b8:	mov	w25, w0
   569bc:	sub	x0, x29, #0x18
   569c0:	mov	w1, #0x1                   	// #1
   569c4:	bl	c020 <__gmpz_tstbit@plt>
   569c8:	cmp	w27, #0x0
   569cc:	mov	w26, w0
   569d0:	str	w27, [sp, #12]
   569d4:	cset	w19, eq  // eq = none
   569d8:	neg	x27, x23
   569dc:	b	56a7c <mpfr_grandom@@Base+0x3a0>
   569e0:	sub	x0, x29, #0x38
   569e4:	sub	x1, x29, #0x38
   569e8:	mov	w2, #0x20                  	// #32
   569ec:	bl	c230 <__gmpz_mul_2exp@plt>
   569f0:	sub	x0, x29, #0x48
   569f4:	sub	x1, x29, #0x48
   569f8:	mov	w2, #0x20                  	// #32
   569fc:	bl	c230 <__gmpz_mul_2exp@plt>
   56a00:	sub	x0, x29, #0x18
   56a04:	mov	w2, #0x20                  	// #32
   56a08:	mov	x1, x22
   56a0c:	bl	cce0 <__gmpz_urandomb@plt>
   56a10:	sub	x0, x29, #0x28
   56a14:	mov	w2, #0x20                  	// #32
   56a18:	mov	x1, x22
   56a1c:	bl	cce0 <__gmpz_urandomb@plt>
   56a20:	sub	x0, x29, #0x38
   56a24:	sub	x1, x29, #0x38
   56a28:	sub	x2, x29, #0x18
   56a2c:	bl	c9a0 <__gmpz_add@plt>
   56a30:	sub	x0, x29, #0x48
   56a34:	sub	x1, x29, #0x48
   56a38:	sub	x2, x29, #0x28
   56a3c:	bl	c9a0 <__gmpz_add@plt>
   56a40:	sub	x0, x29, #0x68
   56a44:	sub	x1, x29, #0x38
   56a48:	sub	x2, x29, #0x38
   56a4c:	bl	c030 <__gmpz_mul@plt>
   56a50:	sub	x0, x29, #0x78
   56a54:	sub	x1, x29, #0x48
   56a58:	sub	x2, x29, #0x48
   56a5c:	bl	c030 <__gmpz_mul@plt>
   56a60:	sub	x0, x29, #0x88
   56a64:	sub	x1, x29, #0x68
   56a68:	sub	x2, x29, #0x78
   56a6c:	bl	c9a0 <__gmpz_add@plt>
   56a70:	add	x24, x24, #0x20
   56a74:	sub	x27, x27, #0x40
   56a78:	add	x23, x23, #0x40
   56a7c:	add	x0, sp, #0x78
   56a80:	mov	x1, x23
   56a84:	add	x28, x24, #0x2
   56a88:	bl	bf20 <mpfr_set_prec@plt>
   56a8c:	add	x0, sp, #0x58
   56a90:	mov	x1, x28
   56a94:	bl	bf20 <mpfr_set_prec@plt>
   56a98:	add	x0, sp, #0x78
   56a9c:	sub	x1, x29, #0x88
   56aa0:	mov	w2, wzr
   56aa4:	bl	c250 <mpfr_set_z@plt>
   56aa8:	add	x0, sp, #0x78
   56aac:	add	x1, sp, #0x78
   56ab0:	mov	x2, x27
   56ab4:	mov	w3, wzr
   56ab8:	bl	bbe0 <mpfr_mul_2si@plt>
   56abc:	add	x0, sp, #0x58
   56ac0:	add	x1, sp, #0x78
   56ac4:	mov	w2, wzr
   56ac8:	bl	c0d0 <mpfr_log@plt>
   56acc:	add	x0, sp, #0x58
   56ad0:	add	x1, sp, #0x58
   56ad4:	mov	w2, wzr
   56ad8:	bl	bdc0 <mpfr_neg@plt>
   56adc:	add	x0, sp, #0x58
   56ae0:	add	x1, sp, #0x58
   56ae4:	mov	w2, #0x1                   	// #1
   56ae8:	mov	w3, wzr
   56aec:	bl	bbe0 <mpfr_mul_2si@plt>
   56af0:	add	x0, sp, #0x58
   56af4:	add	x1, sp, #0x58
   56af8:	add	x2, sp, #0x78
   56afc:	mov	w3, wzr
   56b00:	bl	c610 <mpfr_div@plt>
   56b04:	add	x0, sp, #0x58
   56b08:	add	x1, sp, #0x58
   56b0c:	mov	w2, wzr
   56b10:	bl	c920 <mpfr_sqrt@plt>
   56b14:	add	x0, sp, #0x38
   56b18:	mov	x1, x28
   56b1c:	bl	bf20 <mpfr_set_prec@plt>
   56b20:	add	x0, sp, #0x38
   56b24:	add	x1, sp, #0x58
   56b28:	sub	x2, x29, #0x38
   56b2c:	mov	w3, wzr
   56b30:	bl	c4c0 <mpfr_mul_z@plt>
   56b34:	add	x0, sp, #0x38
   56b38:	add	x1, sp, #0x38
   56b3c:	mov	x2, x28
   56b40:	mov	w3, wzr
   56b44:	bl	c8f0 <mpfr_div_2ui@plt>
   56b48:	cbz	w25, 56b5c <mpfr_grandom@@Base+0x480>
   56b4c:	add	x0, sp, #0x38
   56b50:	add	x1, sp, #0x38
   56b54:	mov	w2, wzr
   56b58:	bl	bdc0 <mpfr_neg@plt>
   56b5c:	ldr	x8, [sp, #72]
   56b60:	cmp	x8, x20
   56b64:	b.lt	569e0 <mpfr_grandom@@Base+0x304>  // b.tstop
   56b68:	ldr	x8, [sp, #56]
   56b6c:	ldr	x9, [x21]
   56b70:	ldr	x0, [sp, #80]
   56b74:	mov	x2, x24
   56b78:	sub	x10, x8, #0x1
   56b7c:	add	x8, x8, #0x3e
   56b80:	cmp	x10, #0x0
   56b84:	csel	x8, x8, x10, lt  // lt = tstop
   56b88:	asr	x8, x8, #6
   56b8c:	add	x1, x8, #0x1
   56b90:	add	x3, x9, x19
   56b94:	bl	c370 <mpfr_round_p@plt>
   56b98:	cbz	w0, 569e0 <mpfr_grandom@@Base+0x304>
   56b9c:	ldr	x8, [sp, #16]
   56ba0:	cbz	x8, 56cc8 <mpfr_grandom@@Base+0x5ec>
   56ba4:	add	x0, sp, #0x18
   56ba8:	mov	x1, x28
   56bac:	bl	bf20 <mpfr_set_prec@plt>
   56bb0:	add	x0, sp, #0x18
   56bb4:	add	x1, sp, #0x58
   56bb8:	sub	x2, x29, #0x48
   56bbc:	mov	w3, wzr
   56bc0:	bl	c4c0 <mpfr_mul_z@plt>
   56bc4:	add	x0, sp, #0x18
   56bc8:	add	x1, sp, #0x18
   56bcc:	mov	x2, x28
   56bd0:	mov	w3, wzr
   56bd4:	bl	c8f0 <mpfr_div_2ui@plt>
   56bd8:	cbz	w26, 56bec <mpfr_grandom@@Base+0x510>
   56bdc:	add	x0, sp, #0x18
   56be0:	add	x1, sp, #0x18
   56be4:	mov	w2, wzr
   56be8:	bl	bdc0 <mpfr_neg@plt>
   56bec:	ldr	x8, [sp, #40]
   56bf0:	cmp	x8, x20
   56bf4:	b.lt	569e0 <mpfr_grandom@@Base+0x304>  // b.tstop
   56bf8:	ldp	x9, x8, [sp, #16]
   56bfc:	ldr	x0, [sp, #48]
   56c00:	mov	x2, x24
   56c04:	ldr	x9, [x9]
   56c08:	sub	x10, x8, #0x1
   56c0c:	add	x8, x8, #0x3e
   56c10:	cmp	x10, #0x0
   56c14:	csel	x8, x8, x10, lt  // lt = tstop
   56c18:	asr	x8, x8, #6
   56c1c:	add	x1, x8, #0x1
   56c20:	add	x3, x9, x19
   56c24:	bl	c370 <mpfr_round_p@plt>
   56c28:	cbz	w0, 569e0 <mpfr_grandom@@Base+0x304>
   56c2c:	ldr	w20, [sp, #12]
   56c30:	ldr	w3, [sp, #64]
   56c34:	add	x1, sp, #0x38
   56c38:	mov	x0, x21
   56c3c:	mov	w2, w20
   56c40:	bl	c690 <mpfr_set4@plt>
   56c44:	ldr	x19, [sp, #16]
   56c48:	ldr	w3, [sp, #32]
   56c4c:	mov	w22, w0
   56c50:	add	x1, sp, #0x18
   56c54:	mov	x0, x19
   56c58:	mov	w2, w20
   56c5c:	bl	c690 <mpfr_set4@plt>
   56c60:	ldr	x9, [x19, #16]
   56c64:	mov	w23, w0
   56c68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56c6c:	ldr	x1, [x0, #2576]
   56c70:	add	x0, x0, #0xa10
   56c74:	blr	x1
   56c78:	mrs	x8, tpidr_el0
   56c7c:	ldr	x10, [x8, x0]
   56c80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56c84:	ldr	x1, [x0, #2608]
   56c88:	add	x0, x0, #0xa30
   56c8c:	blr	x1
   56c90:	cmp	x9, x10
   56c94:	b.lt	56e1c <mpfr_grandom@@Base+0x740>  // b.tstop
   56c98:	ldr	x10, [x8, x0]
   56c9c:	cmp	x9, x10
   56ca0:	b.gt	56e1c <mpfr_grandom@@Base+0x740>
   56ca4:	cbz	w23, 56cec <mpfr_grandom@@Base+0x610>
   56ca8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56cac:	ldr	x1, [x0, #2640]
   56cb0:	add	x0, x0, #0xa50
   56cb4:	blr	x1
   56cb8:	ldr	w9, [x8, x0]
   56cbc:	orr	w9, w9, #0x8
   56cc0:	str	w9, [x8, x0]
   56cc4:	b	56cec <mpfr_grandom@@Base+0x610>
   56cc8:	ldr	w20, [sp, #12]
   56ccc:	ldr	w3, [sp, #64]
   56cd0:	add	x1, sp, #0x38
   56cd4:	mov	x0, x21
   56cd8:	mov	w2, w20
   56cdc:	bl	c690 <mpfr_set4@plt>
   56ce0:	ldr	x19, [sp, #16]
   56ce4:	mov	w22, w0
   56ce8:	mov	w23, wzr
   56cec:	ldr	x9, [x21, #16]
   56cf0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56cf4:	ldr	x1, [x0, #2576]
   56cf8:	add	x0, x0, #0xa10
   56cfc:	blr	x1
   56d00:	mrs	x8, tpidr_el0
   56d04:	ldr	x10, [x8, x0]
   56d08:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56d0c:	ldr	x1, [x0, #2608]
   56d10:	add	x0, x0, #0xa30
   56d14:	blr	x1
   56d18:	cmp	x9, x10
   56d1c:	b.lt	56e00 <mpfr_grandom@@Base+0x724>  // b.tstop
   56d20:	ldr	x10, [x8, x0]
   56d24:	cmp	x9, x10
   56d28:	b.gt	56e00 <mpfr_grandom@@Base+0x724>
   56d2c:	cbz	w22, 56d4c <mpfr_grandom@@Base+0x670>
   56d30:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   56d34:	ldr	x1, [x0, #2640]
   56d38:	add	x0, x0, #0xa50
   56d3c:	blr	x1
   56d40:	ldr	w9, [x8, x0]
   56d44:	orr	w9, w9, #0x8
   56d48:	str	w9, [x8, x0]
   56d4c:	cbz	x19, 56d58 <mpfr_grandom@@Base+0x67c>
   56d50:	add	x0, sp, #0x18
   56d54:	bl	c0b0 <mpfr_clear@plt>
   56d58:	add	x0, sp, #0x38
   56d5c:	bl	c0b0 <mpfr_clear@plt>
   56d60:	add	x0, sp, #0x58
   56d64:	bl	c0b0 <mpfr_clear@plt>
   56d68:	add	x0, sp, #0x78
   56d6c:	bl	c0b0 <mpfr_clear@plt>
   56d70:	sub	x0, x29, #0x78
   56d74:	bl	c1b0 <mpfr_mpz_clear@plt>
   56d78:	sub	x0, x29, #0x68
   56d7c:	bl	c1b0 <mpfr_mpz_clear@plt>
   56d80:	sub	x0, x29, #0x88
   56d84:	bl	c1b0 <mpfr_mpz_clear@plt>
   56d88:	sub	x0, x29, #0x58
   56d8c:	bl	c1b0 <mpfr_mpz_clear@plt>
   56d90:	sub	x0, x29, #0x28
   56d94:	bl	c1b0 <mpfr_mpz_clear@plt>
   56d98:	sub	x0, x29, #0x18
   56d9c:	bl	c1b0 <mpfr_mpz_clear@plt>
   56da0:	sub	x0, x29, #0x48
   56da4:	bl	c1b0 <mpfr_mpz_clear@plt>
   56da8:	sub	x0, x29, #0x38
   56dac:	bl	c1b0 <mpfr_mpz_clear@plt>
   56db0:	cmp	w22, #0x1
   56db4:	mov	w8, #0x1                   	// #1
   56db8:	cinc	w8, w8, lt  // lt = tstop
   56dbc:	cmp	w22, #0x0
   56dc0:	mov	w9, #0x4                   	// #4
   56dc4:	mov	w10, #0x8                   	// #8
   56dc8:	csel	w8, wzr, w8, eq  // eq = none
   56dcc:	cmp	w23, #0x1
   56dd0:	csel	w9, w10, w9, lt  // lt = tstop
   56dd4:	cmp	w23, #0x0
   56dd8:	ldp	x20, x19, [sp, #368]
   56ddc:	ldp	x22, x21, [sp, #352]
   56de0:	ldp	x24, x23, [sp, #336]
   56de4:	ldp	x26, x25, [sp, #320]
   56de8:	ldp	x28, x27, [sp, #304]
   56dec:	ldp	x29, x30, [sp, #288]
   56df0:	csel	w9, wzr, w9, eq  // eq = none
   56df4:	orr	w0, w8, w9
   56df8:	add	sp, sp, #0x180
   56dfc:	ret
   56e00:	mov	x0, x21
   56e04:	mov	w1, w22
   56e08:	mov	w2, w20
   56e0c:	bl	cb10 <mpfr_check_range@plt>
   56e10:	mov	w22, w0
   56e14:	cbnz	x19, 56d50 <mpfr_grandom@@Base+0x674>
   56e18:	b	56d58 <mpfr_grandom@@Base+0x67c>
   56e1c:	mov	x0, x19
   56e20:	mov	w1, w23
   56e24:	mov	w2, w20
   56e28:	bl	cb10 <mpfr_check_range@plt>
   56e2c:	mov	w23, w0
   56e30:	b	56cec <mpfr_grandom@@Base+0x610>

0000000000056e34 <__gmpfr_fpif_export@@Base>:
   56e34:	stp	x29, x30, [sp, #-96]!
   56e38:	str	x27, [sp, #16]
   56e3c:	stp	x26, x25, [sp, #32]
   56e40:	stp	x24, x23, [sp, #48]
   56e44:	stp	x22, x21, [sp, #64]
   56e48:	stp	x20, x19, [sp, #80]
   56e4c:	mov	x29, sp
   56e50:	cbz	x0, 571e4 <__gmpfr_fpif_export@@Base+0x3b0>
   56e54:	ldr	x8, [x1]
   56e58:	mov	x19, x0
   56e5c:	mov	x20, x1
   56e60:	cmp	x8, #0xf8
   56e64:	cset	w9, gt
   56e68:	asr	x8, x8, #3
   56e6c:	add	x8, x8, w9, uxtw #3
   56e70:	add	x21, x8, #0xb
   56e74:	mov	x0, x21
   56e78:	bl	ccd0 <mpfr_allocate_func@plt>
   56e7c:	cbz	x0, 571e4 <__gmpfr_fpif_export@@Base+0x3b0>
   56e80:	ldr	x25, [x20]
   56e84:	mov	x22, x0
   56e88:	mov	x23, xzr
   56e8c:	subs	x8, x25, #0xf9
   56e90:	str	x25, [x29, #24]
   56e94:	b.lt	56ea4 <__gmpfr_fpif_export@@Base+0x70>  // b.tstop
   56e98:	lsr	x8, x8, #8
   56e9c:	add	x23, x23, #0x1
   56ea0:	cbnz	x8, 56e98 <__gmpfr_fpif_export@@Base+0x64>
   56ea4:	add	x24, x23, #0x1
   56ea8:	cmp	x21, x24
   56eac:	b.cs	56ec8 <__gmpfr_fpif_export@@Base+0x94>  // b.hs, b.nlast
   56eb0:	mov	x0, x22
   56eb4:	mov	x1, x21
   56eb8:	mov	x2, x24
   56ebc:	bl	c200 <mpfr_reallocate_func@plt>
   56ec0:	mov	x22, x0
   56ec4:	cbz	x0, 56efc <__gmpfr_fpif_export@@Base+0xc8>
   56ec8:	subs	x8, x25, #0xf9
   56ecc:	b.lt	56ef0 <__gmpfr_fpif_export@@Base+0xbc>  // b.tstop
   56ed0:	sub	w9, w23, #0x1
   56ed4:	mov	x0, x22
   56ed8:	strb	w9, [x0], #1
   56edc:	add	x1, x29, #0x18
   56ee0:	mov	x2, x23
   56ee4:	str	x8, [x29, #24]
   56ee8:	bl	ba70 <memcpy@plt>
   56eec:	b	56f00 <__gmpfr_fpif_export@@Base+0xcc>
   56ef0:	add	w8, w25, #0x7
   56ef4:	strb	w8, [x22]
   56ef8:	b	56f00 <__gmpfr_fpif_export@@Base+0xcc>
   56efc:	mov	x24, xzr
   56f00:	cmp	x24, x21
   56f04:	mov	w2, #0x1                   	// #1
   56f08:	mov	x0, x22
   56f0c:	mov	x1, x24
   56f10:	mov	x3, x19
   56f14:	csel	x23, x24, x21, hi  // hi = pmore
   56f18:	bl	c8c0 <fwrite@plt>
   56f1c:	cmp	w0, #0x1
   56f20:	b.ne	57038 <__gmpfr_fpif_export@@Base+0x204>  // b.any
   56f24:	ldr	x21, [x20, #16]
   56f28:	mov	x27, #0x4                   	// #4
   56f2c:	movk	x27, #0x8000, lsl #48
   56f30:	cmp	x21, x27
   56f34:	b.ge	56f48 <__gmpfr_fpif_export@@Base+0x114>  // b.tcont
   56f38:	mov	x25, xzr
   56f3c:	add	x24, x25, #0x1
   56f40:	cbnz	x22, 56fe4 <__gmpfr_fpif_export@@Base+0x1b0>
   56f44:	b	56ff4 <__gmpfr_fpif_export@@Base+0x1c0>
   56f48:	add	x26, x21, #0x2f
   56f4c:	cmp	x26, #0x5f
   56f50:	b.cc	56f9c <__gmpfr_fpif_export@@Base+0x168>  // b.lo, b.ul, b.last
   56f54:	cmp	x21, #0x0
   56f58:	cneg	x8, x21, mi  // mi = first
   56f5c:	sub	x26, x8, #0x2f
   56f60:	mov	x24, #0xffffffffffffffff    	// #-1
   56f64:	lsl	x9, x26, #1
   56f68:	mov	x8, #0xffffffffffffffff    	// #-1
   56f6c:	str	x26, [x29, #24]
   56f70:	lsr	x9, x9, #8
   56f74:	add	x8, x8, #0x1
   56f78:	add	x24, x24, #0x8
   56f7c:	cbnz	x9, 56f70 <__gmpfr_fpif_export@@Base+0x13c>
   56f80:	cmp	x8, #0x10
   56f84:	add	x25, x8, #0x1
   56f88:	b.cs	56fb0 <__gmpfr_fpif_export@@Base+0x17c>  // b.hs, b.nlast
   56f8c:	tbnz	x21, #63, 56fcc <__gmpfr_fpif_export@@Base+0x198>
   56f90:	add	x24, x25, #0x1
   56f94:	cbnz	x22, 56fe4 <__gmpfr_fpif_export@@Base+0x1b0>
   56f98:	b	56ff4 <__gmpfr_fpif_export@@Base+0x1c0>
   56f9c:	mov	x25, xzr
   56fa0:	str	x26, [x29, #24]
   56fa4:	add	x24, x25, #0x1
   56fa8:	cbnz	x22, 56fe4 <__gmpfr_fpif_export@@Base+0x1b0>
   56fac:	b	56ff4 <__gmpfr_fpif_export@@Base+0x1c0>
   56fb0:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   56fb4:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   56fb8:	add	x0, x0, #0x360
   56fbc:	add	x2, x2, #0x367
   56fc0:	mov	w1, #0x139                 	// #313
   56fc4:	bl	cb20 <mpfr_assert_fail@plt>
   56fc8:	tbz	x21, #63, 56f90 <__gmpfr_fpif_export@@Base+0x15c>
   56fcc:	mov	w8, #0x1                   	// #1
   56fd0:	lsl	x8, x8, x24
   56fd4:	orr	x26, x8, x26
   56fd8:	str	x26, [x29, #24]
   56fdc:	add	x24, x25, #0x1
   56fe0:	cbz	x22, 56ff4 <__gmpfr_fpif_export@@Base+0x1c0>
   56fe4:	cmp	x23, x24
   56fe8:	b.cc	56ff4 <__gmpfr_fpif_export@@Base+0x1c0>  // b.lo, b.ul, b.last
   56fec:	mov	x21, x22
   56ff0:	b	5700c <__gmpfr_fpif_export@@Base+0x1d8>
   56ff4:	mov	x0, x22
   56ff8:	mov	x1, x23
   56ffc:	mov	x2, x24
   57000:	bl	c200 <mpfr_reallocate_func@plt>
   57004:	mov	x21, x0
   57008:	cbz	x0, 57038 <__gmpfr_fpif_export@@Base+0x204>
   5700c:	ldr	x8, [x20, #16]
   57010:	cmp	x8, x27
   57014:	b.ge	57044 <__gmpfr_fpif_export@@Base+0x210>  // b.tcont
   57018:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5701c:	cmp	x8, x9
   57020:	b.eq	5706c <__gmpfr_fpif_export@@Base+0x238>  // b.none
   57024:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   57028:	cmp	x8, x9
   5702c:	b.ne	57074 <__gmpfr_fpif_export@@Base+0x240>  // b.any
   57030:	mov	w26, #0x77                  	// #119
   57034:	b	57078 <__gmpfr_fpif_export@@Base+0x244>
   57038:	mov	x0, x22
   5703c:	mov	x1, x23
   57040:	b	571e0 <__gmpfr_fpif_export@@Base+0x3ac>
   57044:	cbz	x25, 57078 <__gmpfr_fpif_export@@Base+0x244>
   57048:	add	w26, w25, #0x5e
   5704c:	mov	x0, x21
   57050:	strb	w26, [x0], #1
   57054:	add	x1, x29, #0x18
   57058:	mov	x2, x25
   5705c:	bl	ba70 <memcpy@plt>
   57060:	ldr	w8, [x20, #8]
   57064:	tbz	w8, #31, 5708c <__gmpfr_fpif_export@@Base+0x258>
   57068:	b	57084 <__gmpfr_fpif_export@@Base+0x250>
   5706c:	mov	w26, #0x78                  	// #120
   57070:	b	57078 <__gmpfr_fpif_export@@Base+0x244>
   57074:	mov	w26, #0x79                  	// #121
   57078:	strb	w26, [x21]
   5707c:	ldr	w8, [x20, #8]
   57080:	tbz	w8, #31, 5708c <__gmpfr_fpif_export@@Base+0x258>
   57084:	orr	w8, w26, #0x80
   57088:	strb	w8, [x21]
   5708c:	cmp	x23, x24
   57090:	mov	w2, #0x1                   	// #1
   57094:	mov	x0, x21
   57098:	mov	x1, x24
   5709c:	mov	x3, x19
   570a0:	csel	x22, x24, x23, cc  // cc = lo, ul, last
   570a4:	bl	c8c0 <fwrite@plt>
   570a8:	cmp	w0, #0x1
   570ac:	b.ne	571d8 <__gmpfr_fpif_export@@Base+0x3a4>  // b.any
   570b0:	ldr	x8, [x20, #16]
   570b4:	mov	x9, #0x4                   	// #4
   570b8:	movk	x9, #0x8000, lsl #48
   570bc:	cmp	x8, x9
   570c0:	b.lt	571c4 <__gmpfr_fpif_export@@Base+0x390>  // b.tstop
   570c4:	ldr	x8, [x20]
   570c8:	add	x8, x8, #0x7
   570cc:	asr	x23, x8, #3
   570d0:	cmp	x22, x23
   570d4:	b.cs	570f0 <__gmpfr_fpif_export@@Base+0x2bc>  // b.hs, b.nlast
   570d8:	mov	x0, x21
   570dc:	mov	x1, x22
   570e0:	mov	x2, x23
   570e4:	bl	c200 <mpfr_reallocate_func@plt>
   570e8:	mov	x21, x0
   570ec:	cbz	x0, 5719c <__gmpfr_fpif_export@@Base+0x368>
   570f0:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   570f4:	ldr	x8, [x8, #4040]
   570f8:	ldr	w8, [x8]
   570fc:	sbfx	x8, x8, #3, #29
   57100:	add	x10, x23, x8
   57104:	udiv	x12, x23, x8
   57108:	sub	x10, x10, #0x1
   5710c:	msub	x9, x12, x8, x23
   57110:	udiv	x10, x10, x8
   57114:	cbz	x9, 5716c <__gmpfr_fpif_export@@Base+0x338>
   57118:	ldr	x11, [x20, #24]
   5711c:	cmp	x9, #0x8
   57120:	b.cc	5714c <__gmpfr_fpif_export@@Base+0x318>  // b.lo, b.ul, b.last
   57124:	add	x13, x11, #0x8
   57128:	cmp	x21, x13
   5712c:	b.cs	57204 <__gmpfr_fpif_export@@Base+0x3d0>  // b.hs, b.nlast
   57130:	neg	x14, x23
   57134:	madd	x12, x12, x8, x14
   57138:	add	x12, x12, x11
   5713c:	add	x13, x21, x9
   57140:	add	x12, x12, #0x8
   57144:	cmp	x12, x13
   57148:	b.cs	57204 <__gmpfr_fpif_export@@Base+0x3d0>  // b.hs, b.nlast
   5714c:	mov	x12, xzr
   57150:	sub	x11, x11, x12
   57154:	add	x11, x11, #0x7
   57158:	ldrb	w13, [x11], #-1
   5715c:	strb	w13, [x21, x12]
   57160:	add	x12, x12, #0x1
   57164:	cmp	x12, x9
   57168:	b.ne	57158 <__gmpfr_fpif_export@@Base+0x324>  // b.any
   5716c:	cmp	x9, #0x0
   57170:	cset	w11, ne  // ne = any
   57174:	cmp	x10, x11
   57178:	b.ls	571a0 <__gmpfr_fpif_export@@Base+0x36c>  // b.plast
   5717c:	ldr	x12, [x20, #24]
   57180:	ldr	x12, [x12, x11, lsl #3]
   57184:	add	x11, x11, #0x1
   57188:	cmp	x11, x10
   5718c:	str	x12, [x21, x9]
   57190:	add	x9, x9, x8
   57194:	b.cc	5717c <__gmpfr_fpif_export@@Base+0x348>  // b.lo, b.ul, b.last
   57198:	b	571a0 <__gmpfr_fpif_export@@Base+0x36c>
   5719c:	mov	x23, xzr
   571a0:	cmp	x23, x22
   571a4:	mov	w2, #0x1                   	// #1
   571a8:	mov	x0, x21
   571ac:	mov	x1, x23
   571b0:	mov	x3, x19
   571b4:	csel	x22, x23, x22, hi  // hi = pmore
   571b8:	bl	c8c0 <fwrite@plt>
   571bc:	cmp	w0, #0x1
   571c0:	b.ne	571d8 <__gmpfr_fpif_export@@Base+0x3a4>  // b.any
   571c4:	mov	x0, x21
   571c8:	mov	x1, x22
   571cc:	bl	cc00 <mpfr_free_func@plt>
   571d0:	mov	w0, wzr
   571d4:	b	571e8 <__gmpfr_fpif_export@@Base+0x3b4>
   571d8:	mov	x0, x21
   571dc:	mov	x1, x22
   571e0:	bl	cc00 <mpfr_free_func@plt>
   571e4:	mov	w0, #0xffffffff            	// #-1
   571e8:	ldp	x20, x19, [sp, #80]
   571ec:	ldp	x22, x21, [sp, #64]
   571f0:	ldp	x24, x23, [sp, #48]
   571f4:	ldp	x26, x25, [sp, #32]
   571f8:	ldr	x27, [sp, #16]
   571fc:	ldp	x29, x30, [sp], #96
   57200:	ret
   57204:	mov	x13, xzr
   57208:	and	x12, x9, #0xfffffffffffffff8
   5720c:	mov	x14, x11
   57210:	ldr	d0, [x14], #-8
   57214:	rev64	v0.8b, v0.8b
   57218:	str	d0, [x21, x13]
   5721c:	add	x13, x13, #0x8
   57220:	cmp	x13, x12
   57224:	b.ne	57210 <__gmpfr_fpif_export@@Base+0x3dc>  // b.any
   57228:	cmp	x9, x12
   5722c:	b.eq	5716c <__gmpfr_fpif_export@@Base+0x338>  // b.none
   57230:	b	57150 <__gmpfr_fpif_export@@Base+0x31c>

0000000000057234 <__gmpfr_fpif_import@@Base>:
   57234:	sub	sp, sp, #0x40
   57238:	stp	x20, x19, [sp, #48]
   5723c:	mov	x20, x1
   57240:	mov	x19, x0
   57244:	stp	x29, x30, [sp, #16]
   57248:	stp	x22, x21, [sp, #32]
   5724c:	add	x29, sp, #0x10
   57250:	cbz	x1, 572c4 <__gmpfr_fpif_import@@Base+0x90>
   57254:	mov	x0, sp
   57258:	mov	w1, #0x1                   	// #1
   5725c:	mov	w2, #0x1                   	// #1
   57260:	mov	x3, x20
   57264:	bl	c650 <fread@plt>
   57268:	cmp	x0, #0x1
   5726c:	b.ne	572c4 <__gmpfr_fpif_import@@Base+0x90>  // b.any
   57270:	ldrb	w21, [sp]
   57274:	cmp	x21, #0x8
   57278:	b.cc	5728c <__gmpfr_fpif_import@@Base+0x58>  // b.lo, b.ul, b.last
   5727c:	sub	x21, x21, #0x7
   57280:	mov	w0, #0xffffffff            	// #-1
   57284:	cbnz	x21, 572d0 <__gmpfr_fpif_import@@Base+0x9c>
   57288:	b	574bc <__gmpfr_fpif_import@@Base+0x288>
   5728c:	add	x1, x21, #0x1
   57290:	mov	x0, sp
   57294:	mov	w2, #0x1                   	// #1
   57298:	mov	x3, x20
   5729c:	mov	x22, sp
   572a0:	bl	c650 <fread@plt>
   572a4:	cmp	x0, #0x1
   572a8:	b.ne	572c4 <__gmpfr_fpif_import@@Base+0x90>  // b.any
   572ac:	add	x2, x21, #0x1
   572b0:	cmp	x2, #0x9
   572b4:	b.cc	5746c <__gmpfr_fpif_import@@Base+0x238>  // b.lo, b.ul, b.last
   572b8:	ldrb	w8, [x22, x21]
   572bc:	sub	x21, x21, #0x1
   572c0:	cbz	w8, 572ac <__gmpfr_fpif_import@@Base+0x78>
   572c4:	mov	x21, xzr
   572c8:	mov	w0, #0xffffffff            	// #-1
   572cc:	cbz	x21, 574bc <__gmpfr_fpif_import@@Base+0x288>
   572d0:	mov	x8, #0xfffffffffffffeff    	// #-257
   572d4:	movk	x8, #0x7fff, lsl #48
   572d8:	cmp	x21, x8
   572dc:	b.gt	574bc <__gmpfr_fpif_import@@Base+0x288>
   572e0:	mov	x0, x19
   572e4:	mov	x1, x21
   572e8:	bl	bf20 <mpfr_set_prec@plt>
   572ec:	cbz	x20, 574b0 <__gmpfr_fpif_import@@Base+0x27c>
   572f0:	mov	x0, sp
   572f4:	mov	w1, #0x1                   	// #1
   572f8:	mov	w2, #0x1                   	// #1
   572fc:	mov	x3, x20
   57300:	bl	c650 <fread@plt>
   57304:	cmp	x0, #0x1
   57308:	b.ne	574b0 <__gmpfr_fpif_import@@Base+0x27c>  // b.any
   5730c:	ldrb	w8, [sp]
   57310:	mov	w10, #0xffffffff            	// #-1
   57314:	sxtb	w9, w8
   57318:	and	x8, x8, #0x7f
   5731c:	sub	w11, w8, #0x5f
   57320:	cmp	w9, #0x0
   57324:	and	w11, w11, #0xff
   57328:	cneg	w10, w10, ge  // ge = tcont
   5732c:	cmp	w11, #0x17
   57330:	str	w10, [x19, #8]
   57334:	b.hi	57440 <__gmpfr_fpif_import@@Base+0x20c>  // b.pmore
   57338:	sub	x22, x8, #0x5e
   5733c:	cmp	x22, #0x8
   57340:	b.hi	574b0 <__gmpfr_fpif_import@@Base+0x27c>  // b.pmore
   57344:	mov	x0, sp
   57348:	mov	w2, #0x1                   	// #1
   5734c:	mov	x1, x22
   57350:	mov	x3, x20
   57354:	bl	c650 <fread@plt>
   57358:	cmp	x0, #0x1
   5735c:	b.ne	574b0 <__gmpfr_fpif_import@@Base+0x27c>  // b.any
   57360:	add	x0, sp, #0x8
   57364:	mov	x1, sp
   57368:	mov	x2, x22
   5736c:	str	xzr, [sp, #8]
   57370:	bl	ba70 <memcpy@plt>
   57374:	ldr	x9, [sp, #8]
   57378:	lsl	x8, x22, #3
   5737c:	sub	x8, x8, #0x1
   57380:	mov	w10, #0x1                   	// #1
   57384:	lsl	x8, x10, x8
   57388:	and	x8, x9, x8
   5738c:	eor	x10, x8, x9
   57390:	add	x9, x10, #0x2f
   57394:	lsr	x11, x9, #62
   57398:	str	x9, [sp, #8]
   5739c:	cbnz	x11, 574b0 <__gmpfr_fpif_import@@Base+0x27c>
   573a0:	mov	x11, #0xffffffffffffffd1    	// #-47
   573a4:	sub	x10, x11, x10
   573a8:	cmp	x8, #0x0
   573ac:	csel	x8, x9, x10, eq  // eq = none
   573b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   573b4:	ldr	x1, [x0, #2576]
   573b8:	add	x0, x0, #0xa10
   573bc:	blr	x1
   573c0:	mrs	x9, tpidr_el0
   573c4:	ldr	x10, [x9, x0]
   573c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   573cc:	ldr	x1, [x0, #2608]
   573d0:	add	x0, x0, #0xa30
   573d4:	blr	x1
   573d8:	cmp	x8, x10
   573dc:	b.lt	574b0 <__gmpfr_fpif_import@@Base+0x27c>  // b.tstop
   573e0:	ldr	x9, [x9, x0]
   573e4:	cmp	x8, x9
   573e8:	b.gt	574b0 <__gmpfr_fpif_import@@Base+0x27c>
   573ec:	str	x8, [x19, #16]
   573f0:	add	x8, x21, #0x7
   573f4:	asr	x22, x8, #3
   573f8:	mov	x0, x22
   573fc:	bl	ccd0 <mpfr_allocate_func@plt>
   57400:	cbz	x0, 574b0 <__gmpfr_fpif_import@@Base+0x27c>
   57404:	mov	w2, #0x1                   	// #1
   57408:	mov	x1, x22
   5740c:	mov	x3, x20
   57410:	mov	x21, x0
   57414:	bl	c650 <fread@plt>
   57418:	cmp	w0, #0x1
   5741c:	b.ne	574a4 <__gmpfr_fpif_import@@Base+0x270>  // b.any
   57420:	ldr	x8, [x19]
   57424:	add	x8, x8, #0x7
   57428:	asr	x1, x8, #3
   5742c:	cmp	x22, x1
   57430:	b.cs	574f4 <__gmpfr_fpif_import@@Base+0x2c0>  // b.hs, b.nlast
   57434:	mov	x0, x21
   57438:	mov	x1, xzr
   5743c:	b	574ac <__gmpfr_fpif_import@@Base+0x278>
   57440:	add	w9, w9, #0x9
   57444:	and	w10, w9, #0x7f
   57448:	cmp	w10, #0x3
   5744c:	b.cs	57494 <__gmpfr_fpif_import@@Base+0x260>  // b.hs, b.nlast
   57450:	sbfx	x8, x9, #0, #7
   57454:	adrp	x9, 65000 <mpfr_bases@@Base+0x1758>
   57458:	add	x9, x9, #0x380
   5745c:	ldr	x8, [x9, x8, lsl #3]
   57460:	mov	w0, wzr
   57464:	str	x8, [x19, #16]
   57468:	b	574bc <__gmpfr_fpif_import@@Base+0x288>
   5746c:	cmp	x21, #0x7
   57470:	b.ne	574d0 <__gmpfr_fpif_import@@Base+0x29c>  // b.any
   57474:	ldrsb	w8, [sp, #7]
   57478:	tbnz	w8, #31, 572c4 <__gmpfr_fpif_import@@Base+0x90>
   5747c:	ldr	x8, [sp]
   57480:	str	x8, [sp, #8]
   57484:	add	x21, x8, #0xf9
   57488:	mov	w0, #0xffffffff            	// #-1
   5748c:	cbnz	x21, 572d0 <__gmpfr_fpif_import@@Base+0x9c>
   57490:	b	574bc <__gmpfr_fpif_import@@Base+0x288>
   57494:	cmp	w8, #0x5e
   57498:	b.hi	574b0 <__gmpfr_fpif_import@@Base+0x27c>  // b.pmore
   5749c:	sub	x8, x8, #0x2f
   574a0:	b	573b0 <__gmpfr_fpif_import@@Base+0x17c>
   574a4:	mov	x0, x21
   574a8:	mov	x1, x22
   574ac:	bl	cc00 <mpfr_free_func@plt>
   574b0:	mov	x0, x19
   574b4:	bl	bba0 <mpfr_set_nan@plt>
   574b8:	mov	w0, #0xffffffff            	// #-1
   574bc:	ldp	x20, x19, [sp, #48]
   574c0:	ldp	x22, x21, [sp, #32]
   574c4:	ldp	x29, x30, [sp, #16]
   574c8:	add	sp, sp, #0x40
   574cc:	ret
   574d0:	add	x0, sp, #0x8
   574d4:	mov	x1, sp
   574d8:	str	xzr, [sp, #8]
   574dc:	bl	ba70 <memcpy@plt>
   574e0:	ldr	x8, [sp, #8]
   574e4:	add	x21, x8, #0xf9
   574e8:	mov	w0, #0xffffffff            	// #-1
   574ec:	cbnz	x21, 572d0 <__gmpfr_fpif_import@@Base+0x9c>
   574f0:	b	574bc <__gmpfr_fpif_import@@Base+0x288>
   574f4:	adrp	x8, 76000 <__gmpfr_l2b@@Base+0x2e0>
   574f8:	ldr	x8, [x8, #4040]
   574fc:	ldr	w8, [x8]
   57500:	sbfx	x8, x8, #3, #29
   57504:	udiv	x12, x1, x8
   57508:	msub	x9, x12, x8, x1
   5750c:	cbz	x9, 575a0 <__gmpfr_fpif_import@@Base+0x36c>
   57510:	ldr	x10, [x19, #24]
   57514:	cmp	x9, #0x8
   57518:	mov	x11, xzr
   5751c:	str	xzr, [x10]
   57520:	ldr	x10, [x19, #24]
   57524:	b.cc	57584 <__gmpfr_fpif_import@@Base+0x350>  // b.lo, b.ul, b.last
   57528:	neg	x11, x1
   5752c:	madd	x11, x12, x8, x11
   57530:	add	x11, x11, x10
   57534:	add	x11, x11, #0x8
   57538:	add	x12, x21, x9
   5753c:	cmp	x11, x12
   57540:	b.cs	57558 <__gmpfr_fpif_import@@Base+0x324>  // b.hs, b.nlast
   57544:	add	x11, x10, #0x8
   57548:	cmp	x21, x11
   5754c:	b.cs	57558 <__gmpfr_fpif_import@@Base+0x324>  // b.hs, b.nlast
   57550:	mov	x11, xzr
   57554:	b	57584 <__gmpfr_fpif_import@@Base+0x350>
   57558:	mov	x12, xzr
   5755c:	and	x11, x9, #0xfffffffffffffff8
   57560:	mov	x13, x10
   57564:	ldr	d0, [x21, x12]
   57568:	add	x12, x12, #0x8
   5756c:	cmp	x12, x11
   57570:	rev64	v0.8b, v0.8b
   57574:	str	d0, [x13], #-8
   57578:	b.ne	57564 <__gmpfr_fpif_import@@Base+0x330>  // b.any
   5757c:	cmp	x9, x11
   57580:	b.eq	575a0 <__gmpfr_fpif_import@@Base+0x36c>  // b.none
   57584:	sub	x10, x10, x11
   57588:	add	x10, x10, #0x7
   5758c:	ldrb	w12, [x21, x11]
   57590:	add	x11, x11, #0x1
   57594:	cmp	x11, x9
   57598:	strb	w12, [x10], #-1
   5759c:	b.ne	5758c <__gmpfr_fpif_import@@Base+0x358>  // b.any
   575a0:	cmp	x9, x1
   575a4:	b.cs	575d0 <__gmpfr_fpif_import@@Base+0x39c>  // b.hs, b.nlast
   575a8:	cmp	x9, #0x0
   575ac:	cset	w10, ne  // ne = any
   575b0:	lsl	x10, x10, #3
   575b4:	ldr	x11, [x19, #24]
   575b8:	ldr	x12, [x21, x9]
   575bc:	add	x9, x9, x8
   575c0:	cmp	x9, x1
   575c4:	str	x12, [x11, x10]
   575c8:	add	x10, x10, #0x8
   575cc:	b.cc	575b4 <__gmpfr_fpif_import@@Base+0x380>  // b.lo, b.ul, b.last
   575d0:	mov	x0, x21
   575d4:	bl	cc00 <mpfr_free_func@plt>
   575d8:	mov	w0, wzr
   575dc:	b	574bc <__gmpfr_fpif_import@@Base+0x288>

00000000000575e0 <mpfr_round_nearest_away_begin@@Base>:
   575e0:	sub	sp, sp, #0x80
   575e4:	stp	x29, x30, [sp, #32]
   575e8:	str	x27, [sp, #48]
   575ec:	stp	x26, x25, [sp, #64]
   575f0:	stp	x24, x23, [sp, #80]
   575f4:	stp	x22, x21, [sp, #96]
   575f8:	stp	x20, x19, [sp, #112]
   575fc:	add	x29, sp, #0x20
   57600:	mov	x19, x0
   57604:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57608:	ldr	x1, [x0, #2576]
   5760c:	add	x0, x0, #0xa10
   57610:	blr	x1
   57614:	mrs	x25, tpidr_el0
   57618:	ldr	x20, [x25, x0]
   5761c:	mov	x26, #0xc000000000000001    	// #-4611686018427387903
   57620:	cmp	x20, x26
   57624:	b.le	57728 <mpfr_round_nearest_away_begin@@Base+0x148>
   57628:	ldr	x27, [x19]
   5762c:	mov	x22, #0xfffffffffffffeff    	// #-257
   57630:	movk	x22, #0x7fff, lsl #48
   57634:	add	x21, x27, #0x1
   57638:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5763c:	ldr	x1, [x0, #2640]
   57640:	add	x0, x0, #0xa50
   57644:	blr	x1
   57648:	ldr	w23, [x25, x0]
   5764c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57650:	ldr	x1, [x0, #2608]
   57654:	add	x0, x0, #0xa30
   57658:	blr	x1
   5765c:	ldr	x24, [x25, x0]
   57660:	mov	x8, x0
   57664:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57668:	ldr	x1, [x0, #2576]
   5766c:	add	x0, x0, #0xa10
   57670:	blr	x1
   57674:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   57678:	cmp	x27, x22
   5767c:	str	x26, [x25, x0]
   57680:	str	x9, [x25, x8]
   57684:	b.ge	57758 <mpfr_round_nearest_away_begin@@Base+0x178>  // b.tcont
   57688:	add	x8, x27, #0x3f
   5768c:	cmp	x27, #0x0
   57690:	csel	x8, x8, x27, lt  // lt = tstop
   57694:	asr	x8, x8, #6
   57698:	add	x25, x8, #0x1
   5769c:	lsl	x8, x25, #3
   576a0:	add	x0, x8, #0x40
   576a4:	bl	ccd0 <mpfr_allocate_func@plt>
   576a8:	str	x25, [x0]
   576ac:	ldr	x8, [x19, #24]
   576b0:	mov	w9, #0x1                   	// #1
   576b4:	add	x10, x0, #0x40
   576b8:	add	x11, x22, #0x103
   576bc:	str	x8, [x0, #8]
   576c0:	ldr	x8, [x19, #16]
   576c4:	mov	x1, x19
   576c8:	mov	w2, wzr
   576cc:	str	x8, [x0, #16]
   576d0:	ldr	w8, [x19, #8]
   576d4:	str	w8, [x0, #24]
   576d8:	ldr	x8, [x19]
   576dc:	str	w23, [x0, #40]
   576e0:	stp	x20, x24, [x0, #48]
   576e4:	str	x8, [x0, #32]
   576e8:	str	x21, [sp]
   576ec:	str	w9, [sp, #8]
   576f0:	stp	x11, x10, [sp, #16]
   576f4:	ldr	w3, [x19, #8]
   576f8:	mov	x0, sp
   576fc:	bl	c690 <mpfr_set4@plt>
   57700:	ldp	q0, q1, [sp]
   57704:	stp	q0, q1, [x19]
   57708:	ldp	x20, x19, [sp, #112]
   5770c:	ldp	x22, x21, [sp, #96]
   57710:	ldp	x24, x23, [sp, #80]
   57714:	ldp	x26, x25, [sp, #64]
   57718:	ldr	x27, [sp, #48]
   5771c:	ldp	x29, x30, [sp, #32]
   57720:	add	sp, sp, #0x80
   57724:	ret
   57728:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5772c:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   57730:	add	x0, x0, #0x398
   57734:	add	x2, x2, #0x3a0
   57738:	mov	w1, #0x4d                  	// #77
   5773c:	bl	cb20 <mpfr_assert_fail@plt>
   57740:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57744:	ldr	x1, [x0, #2576]
   57748:	add	x0, x0, #0xa10
   5774c:	blr	x1
   57750:	ldr	x20, [x25, x0]
   57754:	b	57628 <mpfr_round_nearest_away_begin@@Base+0x48>
   57758:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5775c:	adrp	x2, 64000 <mpfr_bases@@Base+0x758>
   57760:	add	x0, x0, #0x398
   57764:	add	x2, x2, #0x2a4
   57768:	mov	w1, #0x54                  	// #84
   5776c:	bl	cb20 <mpfr_assert_fail@plt>
   57770:	b	57688 <mpfr_round_nearest_away_begin@@Base+0xa8>

0000000000057774 <mpfr_round_nearest_away_end@@Base>:
   57774:	sub	sp, sp, #0x80
   57778:	stp	x29, x30, [sp, #32]
   5777c:	str	x27, [sp, #48]
   57780:	stp	x26, x25, [sp, #64]
   57784:	stp	x24, x23, [sp, #80]
   57788:	stp	x22, x21, [sp, #96]
   5778c:	stp	x20, x19, [sp, #112]
   57790:	ldp	q1, q0, [x0]
   57794:	ldr	x20, [x0, #24]
   57798:	mov	x23, #0x2                   	// #2
   5779c:	movk	x23, #0x8000, lsl #48
   577a0:	stp	q1, q0, [sp]
   577a4:	ldur	x8, [x20, #-32]
   577a8:	add	x10, x23, #0x2
   577ac:	mov	x19, x0
   577b0:	mov	w21, w1
   577b4:	str	x8, [x0]
   577b8:	ldur	w9, [x20, #-40]
   577bc:	add	x29, sp, #0x20
   577c0:	str	w9, [x0, #8]
   577c4:	ldur	x9, [x20, #-48]
   577c8:	str	x9, [x0, #16]
   577cc:	ldur	x9, [x20, #-56]
   577d0:	str	x9, [x0, #24]
   577d4:	ldr	x22, [x20, #-64]!
   577d8:	ldr	x9, [sp, #16]
   577dc:	ldr	w27, [x20, #40]
   577e0:	ldp	x24, x26, [x20, #48]
   577e4:	cmp	x9, x10
   577e8:	b.lt	5781c <mpfr_round_nearest_away_end@@Base+0xa8>  // b.tstop
   577ec:	ldr	x9, [sp, #24]
   577f0:	mvn	w8, w8
   577f4:	ldr	x9, [x9]
   577f8:	lsr	x8, x9, x8
   577fc:	tbz	w8, #0, 5781c <mpfr_round_nearest_away_end@@Base+0xa8>
   57800:	cbz	w21, 57834 <mpfr_round_nearest_away_end@@Base+0xc0>
   57804:	ldr	w3, [sp, #8]
   57808:	cmp	w21, #0x0
   5780c:	mov	w8, #0x2                   	// #2
   57810:	cinc	w2, w8, gt
   57814:	mov	x1, sp
   57818:	b	57840 <mpfr_round_nearest_away_end@@Base+0xcc>
   5781c:	ldr	w3, [sp, #8]
   57820:	mov	x1, sp
   57824:	mov	x0, x19
   57828:	mov	w2, wzr
   5782c:	bl	c690 <mpfr_set4@plt>
   57830:	b	5784c <mpfr_round_nearest_away_end@@Base+0xd8>
   57834:	ldr	w3, [sp, #8]
   57838:	mov	x1, sp
   5783c:	mov	w2, #0x4                   	// #4
   57840:	mov	x0, x19
   57844:	bl	c690 <mpfr_set4@plt>
   57848:	mov	w21, w0
   5784c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57850:	ldr	x1, [x0, #2640]
   57854:	add	x0, x0, #0xa50
   57858:	blr	x1
   5785c:	mrs	x25, tpidr_el0
   57860:	ldr	w8, [x25, x0]
   57864:	orr	w8, w8, w27
   57868:	str	w8, [x25, x0]
   5786c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57870:	ldr	x1, [x0, #2576]
   57874:	add	x0, x0, #0xa10
   57878:	blr	x1
   5787c:	str	x24, [x25, x0]
   57880:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57884:	ldr	x1, [x0, #2608]
   57888:	add	x0, x0, #0xa30
   5788c:	blr	x1
   57890:	str	x26, [x25, x0]
   57894:	cbnz	w21, 57928 <mpfr_round_nearest_away_end@@Base+0x1b4>
   57898:	ldr	x8, [x19, #16]
   5789c:	mov	x9, #0x2                   	// #2
   578a0:	movk	x9, #0x8000, lsl #48
   578a4:	cmp	x8, x9
   578a8:	b.gt	578e4 <mpfr_round_nearest_away_end@@Base+0x170>
   578ac:	cmp	x8, x23
   578b0:	b.ne	578cc <mpfr_round_nearest_away_end@@Base+0x158>  // b.any
   578b4:	bl	bce0 <mpfr_set_erangeflag@plt>
   578b8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   578bc:	ldr	x1, [x0, #2576]
   578c0:	add	x0, x0, #0xa10
   578c4:	blr	x1
   578c8:	ldr	x24, [x25, x0]
   578cc:	mov	x1, #0xffffffffffffffff    	// #-1
   578d0:	sub	x2, x24, #0x2
   578d4:	mov	x0, x19
   578d8:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   578dc:	cbnz	w0, 57924 <mpfr_round_nearest_away_end@@Base+0x1b0>
   578e0:	b	57904 <mpfr_round_nearest_away_end@@Base+0x190>
   578e4:	ldr	w8, [x19, #8]
   578e8:	cmp	w8, #0x1
   578ec:	mov	x8, #0xffffffffffffffff    	// #-1
   578f0:	cneg	x1, x8, ge  // ge = tcont
   578f4:	sub	x2, x24, #0x2
   578f8:	mov	x0, x19
   578fc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   57900:	cbnz	w0, 57924 <mpfr_round_nearest_away_end@@Base+0x1b0>
   57904:	ldr	x8, [x19, #16]
   57908:	mov	x9, #0x2                   	// #2
   5790c:	movk	x9, #0x8000, lsl #48
   57910:	cmp	x8, x9
   57914:	b.gt	579b8 <mpfr_round_nearest_away_end@@Base+0x244>
   57918:	cmp	x8, x23
   5791c:	b.ne	57924 <mpfr_round_nearest_away_end@@Base+0x1b0>  // b.any
   57920:	bl	bce0 <mpfr_set_erangeflag@plt>
   57924:	mov	w21, wzr
   57928:	lsl	x8, x22, #3
   5792c:	add	x1, x8, #0x40
   57930:	mov	x0, x20
   57934:	bl	cc00 <mpfr_free_func@plt>
   57938:	ldr	x8, [x19, #16]
   5793c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57940:	ldr	x1, [x0, #2576]
   57944:	add	x0, x0, #0xa10
   57948:	blr	x1
   5794c:	ldr	x9, [x25, x0]
   57950:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   57954:	ldr	x1, [x0, #2608]
   57958:	add	x0, x0, #0xa30
   5795c:	blr	x1
   57960:	cmp	x8, x9
   57964:	b.lt	579c4 <mpfr_round_nearest_away_end@@Base+0x250>  // b.tstop
   57968:	ldr	x9, [x25, x0]
   5796c:	cmp	x8, x9
   57970:	b.gt	579c4 <mpfr_round_nearest_away_end@@Base+0x250>
   57974:	cbz	w21, 57994 <mpfr_round_nearest_away_end@@Base+0x220>
   57978:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5797c:	ldr	x1, [x0, #2640]
   57980:	add	x0, x0, #0xa50
   57984:	blr	x1
   57988:	ldr	w8, [x25, x0]
   5798c:	orr	w8, w8, #0x8
   57990:	str	w8, [x25, x0]
   57994:	mov	w0, w21
   57998:	ldp	x20, x19, [sp, #112]
   5799c:	ldp	x22, x21, [sp, #96]
   579a0:	ldp	x24, x23, [sp, #80]
   579a4:	ldp	x26, x25, [sp, #64]
   579a8:	ldr	x27, [sp, #48]
   579ac:	ldp	x29, x30, [sp, #32]
   579b0:	add	sp, sp, #0x80
   579b4:	ret
   579b8:	ldr	w8, [x19, #8]
   579bc:	neg	w21, w8
   579c0:	b	57928 <mpfr_round_nearest_away_end@@Base+0x1b4>
   579c4:	mov	x0, x19
   579c8:	mov	w1, w21
   579cc:	mov	w2, wzr
   579d0:	bl	cb10 <mpfr_check_range@plt>
   579d4:	mov	w21, w0
   579d8:	b	57994 <mpfr_round_nearest_away_end@@Base+0x220>

00000000000579dc <mpfr_nrandom@@Base>:
   579dc:	sub	sp, sp, #0xc0
   579e0:	stp	x29, x30, [sp, #96]
   579e4:	add	x29, sp, #0x60
   579e8:	stp	x22, x21, [sp, #160]
   579ec:	mov	x21, x0
   579f0:	sub	x0, x29, #0x20
   579f4:	stp	x28, x27, [sp, #112]
   579f8:	stp	x26, x25, [sp, #128]
   579fc:	stp	x24, x23, [sp, #144]
   57a00:	stp	x20, x19, [sp, #176]
   57a04:	mov	w19, w2
   57a08:	mov	x20, x1
   57a0c:	bl	c190 <mpfr_random_deviate_init@plt>
   57a10:	add	x0, sp, #0x20
   57a14:	bl	c190 <mpfr_random_deviate_init@plt>
   57a18:	mov	x0, sp
   57a1c:	bl	c190 <mpfr_random_deviate_init@plt>
   57a20:	mov	x22, xzr
   57a24:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
   57a28:	b	57a34 <mpfr_nrandom@@Base+0x58>
   57a2c:	adds	x22, x22, #0x1
   57a30:	b.cs	57c64 <mpfr_nrandom@@Base+0x288>  // b.hs, b.nlast
   57a34:	add	x0, sp, #0x20
   57a38:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57a3c:	add	x0, sp, #0x20
   57a40:	mov	w1, #0x1                   	// #1
   57a44:	mov	x2, x20
   57a48:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   57a4c:	cbnz	w0, 57a2c <mpfr_nrandom@@Base+0x50>
   57a50:	mov	x0, sp
   57a54:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57a58:	mov	x0, sp
   57a5c:	add	x1, sp, #0x20
   57a60:	mov	x2, x20
   57a64:	bl	ca10 <mpfr_random_deviate_less@plt>
   57a68:	cbz	w0, 57a8c <mpfr_nrandom@@Base+0xb0>
   57a6c:	add	x0, sp, #0x20
   57a70:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57a74:	add	x0, sp, #0x20
   57a78:	mov	x1, sp
   57a7c:	mov	x2, x20
   57a80:	bl	ca10 <mpfr_random_deviate_less@plt>
   57a84:	cbnz	w0, 57a50 <mpfr_nrandom@@Base+0x74>
   57a88:	b	57a2c <mpfr_nrandom@@Base+0x50>
   57a8c:	cbz	x22, 57b0c <mpfr_nrandom@@Base+0x130>
   57a90:	sub	x23, x22, #0x1
   57a94:	mov	x24, x22
   57a98:	cbz	x23, 57b0c <mpfr_nrandom@@Base+0x130>
   57a9c:	sub	x24, x24, #0x1
   57aa0:	mov	x26, x23
   57aa4:	b	57ab0 <mpfr_nrandom@@Base+0xd4>
   57aa8:	sub	x26, x26, #0x1
   57aac:	cbz	x26, 57b08 <mpfr_nrandom@@Base+0x12c>
   57ab0:	add	x0, sp, #0x20
   57ab4:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57ab8:	add	x0, sp, #0x20
   57abc:	mov	w1, #0x1                   	// #1
   57ac0:	mov	x2, x20
   57ac4:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   57ac8:	cbnz	w0, 57aa8 <mpfr_nrandom@@Base+0xcc>
   57acc:	mov	x0, sp
   57ad0:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57ad4:	mov	x0, sp
   57ad8:	add	x1, sp, #0x20
   57adc:	mov	x2, x20
   57ae0:	bl	ca10 <mpfr_random_deviate_less@plt>
   57ae4:	cbz	w0, 57c54 <mpfr_nrandom@@Base+0x278>
   57ae8:	add	x0, sp, #0x20
   57aec:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57af0:	add	x0, sp, #0x20
   57af4:	mov	x1, sp
   57af8:	mov	x2, x20
   57afc:	bl	ca10 <mpfr_random_deviate_less@plt>
   57b00:	cbnz	w0, 57acc <mpfr_nrandom@@Base+0xf0>
   57b04:	b	57aa8 <mpfr_nrandom@@Base+0xcc>
   57b08:	cbnz	x24, 57a9c <mpfr_nrandom@@Base+0xc0>
   57b0c:	sub	x0, x29, #0x20
   57b10:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57b14:	lsl	x8, x22, #1
   57b18:	cmp	x22, x25
   57b1c:	add	x26, x8, #0x2
   57b20:	b.cs	57c80 <mpfr_nrandom@@Base+0x2a4>  // b.hs, b.nlast
   57b24:	mov	x24, xzr
   57b28:	b	57b3c <mpfr_nrandom@@Base+0x160>
   57b2c:	tbnz	w23, #0, 57c5c <mpfr_nrandom@@Base+0x280>
   57b30:	add	x24, x24, #0x1
   57b34:	cmp	x24, x22
   57b38:	b.hi	57d40 <mpfr_nrandom@@Base+0x364>  // b.pmore
   57b3c:	cbz	x22, 57bc8 <mpfr_nrandom@@Base+0x1ec>
   57b40:	mov	x0, sp
   57b44:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57b48:	mov	x0, sp
   57b4c:	sub	x1, x29, #0x20
   57b50:	mov	x2, x20
   57b54:	bl	ca10 <mpfr_random_deviate_less@plt>
   57b58:	cbz	w0, 57b30 <mpfr_nrandom@@Base+0x154>
   57b5c:	mov	w23, wzr
   57b60:	b	57bac <mpfr_nrandom@@Base+0x1d0>
   57b64:	add	x0, sp, #0x20
   57b68:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57b6c:	add	x0, sp, #0x20
   57b70:	sub	x1, x29, #0x20
   57b74:	mov	x2, x20
   57b78:	bl	ca10 <mpfr_random_deviate_less@plt>
   57b7c:	cbz	w0, 57b2c <mpfr_nrandom@@Base+0x150>
   57b80:	add	x0, sp, #0x20
   57b84:	mov	x1, sp
   57b88:	bl	c580 <mpfr_random_deviate_swap@plt>
   57b8c:	mov	x0, sp
   57b90:	add	w23, w23, #0x1
   57b94:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57b98:	mov	x0, sp
   57b9c:	add	x1, sp, #0x20
   57ba0:	mov	x2, x20
   57ba4:	bl	ca10 <mpfr_random_deviate_less@plt>
   57ba8:	cbz	w0, 57b2c <mpfr_nrandom@@Base+0x150>
   57bac:	mov	x0, x20
   57bb0:	mov	x1, x26
   57bb4:	bl	c2d0 <__gmp_urandomm_ui@plt>
   57bb8:	cmp	x0, #0x1
   57bbc:	b.eq	57b64 <mpfr_nrandom@@Base+0x188>  // b.none
   57bc0:	cbnz	x0, 57b80 <mpfr_nrandom@@Base+0x1a4>
   57bc4:	b	57b2c <mpfr_nrandom@@Base+0x150>
   57bc8:	mov	x0, x20
   57bcc:	mov	x1, x26
   57bd0:	bl	c2d0 <__gmp_urandomm_ui@plt>
   57bd4:	cbz	x0, 57b30 <mpfr_nrandom@@Base+0x154>
   57bd8:	mov	x27, x0
   57bdc:	mov	w23, wzr
   57be0:	sub	x28, x29, #0x20
   57be4:	b	57c10 <mpfr_nrandom@@Base+0x234>
   57be8:	add	x0, sp, #0x20
   57bec:	mov	x1, sp
   57bf0:	add	x28, sp, #0x20
   57bf4:	bl	c580 <mpfr_random_deviate_swap@plt>
   57bf8:	mov	x0, x20
   57bfc:	mov	x1, x26
   57c00:	add	w23, w23, #0x1
   57c04:	bl	c2d0 <__gmp_urandomm_ui@plt>
   57c08:	mov	x27, x0
   57c0c:	cbz	x0, 57b2c <mpfr_nrandom@@Base+0x150>
   57c10:	mov	x0, sp
   57c14:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57c18:	mov	x0, sp
   57c1c:	mov	x1, x28
   57c20:	mov	x2, x20
   57c24:	bl	ca10 <mpfr_random_deviate_less@plt>
   57c28:	cbz	w0, 57b2c <mpfr_nrandom@@Base+0x150>
   57c2c:	cmp	x27, #0x1
   57c30:	b.ne	57be8 <mpfr_nrandom@@Base+0x20c>  // b.any
   57c34:	add	x0, sp, #0x20
   57c38:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57c3c:	add	x0, sp, #0x20
   57c40:	sub	x1, x29, #0x20
   57c44:	mov	x2, x20
   57c48:	bl	ca10 <mpfr_random_deviate_less@plt>
   57c4c:	cbnz	w0, 57be8 <mpfr_nrandom@@Base+0x20c>
   57c50:	b	57b2c <mpfr_nrandom@@Base+0x150>
   57c54:	mov	x22, xzr
   57c58:	b	57a34 <mpfr_nrandom@@Base+0x58>
   57c5c:	mov	x22, xzr
   57c60:	b	57a34 <mpfr_nrandom@@Base+0x58>
   57c64:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   57c68:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   57c6c:	mov	w1, #0x5b                  	// #91
   57c70:	add	x0, x0, #0x3f9
   57c74:	add	x2, x2, #0x403
   57c78:	bl	cb20 <mpfr_assert_fail@plt>
   57c7c:	b	57a34 <mpfr_nrandom@@Base+0x58>
   57c80:	mov	x23, xzr
   57c84:	b	57c98 <mpfr_nrandom@@Base+0x2bc>
   57c88:	tbnz	w24, #0, 57d38 <mpfr_nrandom@@Base+0x35c>
   57c8c:	add	x23, x23, #0x1
   57c90:	cmp	x23, x22
   57c94:	b.hi	57d40 <mpfr_nrandom@@Base+0x364>  // b.pmore
   57c98:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   57c9c:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   57ca0:	mov	w1, #0x8b                  	// #139
   57ca4:	add	x0, x0, #0x3f9
   57ca8:	add	x2, x2, #0x40c
   57cac:	bl	cb20 <mpfr_assert_fail@plt>
   57cb0:	mov	x0, sp
   57cb4:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57cb8:	mov	x0, sp
   57cbc:	sub	x1, x29, #0x20
   57cc0:	mov	x2, x20
   57cc4:	bl	ca10 <mpfr_random_deviate_less@plt>
   57cc8:	cbz	w0, 57c8c <mpfr_nrandom@@Base+0x2b0>
   57ccc:	mov	w24, wzr
   57cd0:	b	57d1c <mpfr_nrandom@@Base+0x340>
   57cd4:	add	x0, sp, #0x20
   57cd8:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57cdc:	add	x0, sp, #0x20
   57ce0:	sub	x1, x29, #0x20
   57ce4:	mov	x2, x20
   57ce8:	bl	ca10 <mpfr_random_deviate_less@plt>
   57cec:	cbz	w0, 57c88 <mpfr_nrandom@@Base+0x2ac>
   57cf0:	add	x0, sp, #0x20
   57cf4:	mov	x1, sp
   57cf8:	bl	c580 <mpfr_random_deviate_swap@plt>
   57cfc:	mov	x0, sp
   57d00:	add	w24, w24, #0x1
   57d04:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   57d08:	mov	x0, sp
   57d0c:	add	x1, sp, #0x20
   57d10:	mov	x2, x20
   57d14:	bl	ca10 <mpfr_random_deviate_less@plt>
   57d18:	cbz	w0, 57c88 <mpfr_nrandom@@Base+0x2ac>
   57d1c:	mov	x0, x20
   57d20:	mov	x1, x26
   57d24:	bl	c2d0 <__gmp_urandomm_ui@plt>
   57d28:	cmp	x0, #0x1
   57d2c:	b.eq	57cd4 <mpfr_nrandom@@Base+0x2f8>  // b.none
   57d30:	cbnz	x0, 57cf0 <mpfr_nrandom@@Base+0x314>
   57d34:	b	57c88 <mpfr_nrandom@@Base+0x2ac>
   57d38:	mov	x22, xzr
   57d3c:	b	57a34 <mpfr_nrandom@@Base+0x58>
   57d40:	mov	x0, sp
   57d44:	bl	be40 <mpfr_random_deviate_clear@plt>
   57d48:	add	x0, sp, #0x20
   57d4c:	bl	be40 <mpfr_random_deviate_clear@plt>
   57d50:	mov	w1, #0x1                   	// #1
   57d54:	mov	x0, x20
   57d58:	bl	caf0 <__gmp_urandomb_ui@plt>
   57d5c:	sub	x2, x29, #0x20
   57d60:	mov	x1, x22
   57d64:	mov	x3, x21
   57d68:	mov	x4, x20
   57d6c:	mov	w5, w19
   57d70:	bl	bb00 <mpfr_random_deviate_value@plt>
   57d74:	mov	w19, w0
   57d78:	sub	x0, x29, #0x20
   57d7c:	bl	be40 <mpfr_random_deviate_clear@plt>
   57d80:	mov	w0, w19
   57d84:	ldp	x20, x19, [sp, #176]
   57d88:	ldp	x22, x21, [sp, #160]
   57d8c:	ldp	x24, x23, [sp, #144]
   57d90:	ldp	x26, x25, [sp, #128]
   57d94:	ldp	x28, x27, [sp, #112]
   57d98:	ldp	x29, x30, [sp, #96]
   57d9c:	add	sp, sp, #0xc0
   57da0:	ret

0000000000057da4 <mpfr_random_deviate_init@@Base>:
   57da4:	stp	x29, x30, [sp, #-32]!
   57da8:	str	x19, [sp, #16]
   57dac:	mov	x19, x0
   57db0:	add	x0, x0, #0x10
   57db4:	mov	x29, sp
   57db8:	bl	bfe0 <mpfr_mpz_init@plt>
   57dbc:	str	xzr, [x19]
   57dc0:	ldr	x19, [sp, #16]
   57dc4:	ldp	x29, x30, [sp], #32
   57dc8:	ret

0000000000057dcc <mpfr_random_deviate_reset@@Base>:
   57dcc:	str	xzr, [x0]
   57dd0:	ret

0000000000057dd4 <mpfr_random_deviate_clear@@Base>:
   57dd4:	add	x0, x0, #0x10
   57dd8:	b	c1b0 <mpfr_mpz_clear@plt>

0000000000057ddc <mpfr_random_deviate_swap@@Base>:
   57ddc:	ldr	q0, [x1]
   57de0:	ldr	q1, [x0]
   57de4:	str	q0, [x0], #16
   57de8:	str	q1, [x1], #16
   57dec:	b	c120 <__gmpz_swap@plt>

0000000000057df0 <mpfr_random_deviate_tstbit@@Base>:
   57df0:	stp	x29, x30, [sp, #-32]!
   57df4:	stp	x20, x19, [sp, #16]
   57df8:	mov	x29, sp
   57dfc:	cbz	x1, 57e38 <mpfr_random_deviate_tstbit@@Base+0x48>
   57e00:	mov	x3, xzr
   57e04:	mov	x19, x1
   57e08:	mov	x20, x0
   57e0c:	bl	57e60 <mpfr_random_deviate_tstbit@@Base+0x70>
   57e10:	cmp	x19, #0x20
   57e14:	b.hi	57e48 <mpfr_random_deviate_tstbit@@Base+0x58>  // b.pmore
   57e18:	ldr	x8, [x20, #8]
   57e1c:	mov	w9, #0x20                  	// #32
   57e20:	sub	x9, x9, x19
   57e24:	lsr	x8, x8, x9
   57e28:	and	w0, w8, #0x1
   57e2c:	ldp	x20, x19, [sp, #16]
   57e30:	ldp	x29, x30, [sp], #32
   57e34:	ret
   57e38:	mov	w0, wzr
   57e3c:	ldp	x20, x19, [sp, #16]
   57e40:	ldp	x29, x30, [sp], #32
   57e44:	ret
   57e48:	ldr	x8, [x20], #16
   57e4c:	sub	x1, x8, x19
   57e50:	mov	x0, x20
   57e54:	ldp	x20, x19, [sp, #16]
   57e58:	ldp	x29, x30, [sp], #32
   57e5c:	b	c020 <__gmpz_tstbit@plt>
   57e60:	stp	x29, x30, [sp, #-64]!
   57e64:	stp	x22, x21, [sp, #32]
   57e68:	stp	x20, x19, [sp, #48]
   57e6c:	mov	x22, x3
   57e70:	mov	x20, x2
   57e74:	mov	x21, x1
   57e78:	cmn	x1, #0x20
   57e7c:	mov	x19, x0
   57e80:	stp	x24, x23, [sp, #16]
   57e84:	mov	x29, sp
   57e88:	b.cs	57f8c <mpfr_random_deviate_tstbit@@Base+0x19c>  // b.hs, b.nlast
   57e8c:	ldr	x24, [x19]
   57e90:	cmp	x24, x21
   57e94:	b.cs	57fb0 <mpfr_random_deviate_tstbit@@Base+0x1c0>  // b.hs, b.nlast
   57e98:	cbnz	x24, 57eb8 <mpfr_random_deviate_tstbit@@Base+0xc8>
   57e9c:	mov	w1, #0x20                  	// #32
   57ea0:	mov	x0, x20
   57ea4:	mov	w24, #0x20                  	// #32
   57ea8:	bl	caf0 <__gmp_urandomb_ui@plt>
   57eac:	cmp	x21, #0x21
   57eb0:	stp	x24, x0, [x19]
   57eb4:	b.cc	57fb0 <mpfr_random_deviate_tstbit@@Base+0x1c0>  // b.lo, b.ul, b.last
   57eb8:	cbz	x22, 57f1c <mpfr_random_deviate_tstbit@@Base+0x12c>
   57ebc:	add	x8, x21, #0x1f
   57ec0:	and	x8, x8, #0xffffffffffffffe0
   57ec4:	add	x23, x19, #0x10
   57ec8:	cmp	x24, #0x20
   57ecc:	sub	x21, x8, x24
   57ed0:	csel	x0, x23, x22, eq  // eq = none
   57ed4:	mov	x1, x20
   57ed8:	mov	x2, x21
   57edc:	bl	cce0 <__gmpz_urandomb@plt>
   57ee0:	ldr	x8, [x19]
   57ee4:	cmp	x8, #0x21
   57ee8:	b.cc	57f10 <mpfr_random_deviate_tstbit@@Base+0x120>  // b.lo, b.ul, b.last
   57eec:	mov	x0, x23
   57ef0:	mov	x1, x23
   57ef4:	mov	x2, x21
   57ef8:	bl	c230 <__gmpz_mul_2exp@plt>
   57efc:	mov	x0, x23
   57f00:	mov	x1, x23
   57f04:	mov	x2, x22
   57f08:	bl	c9a0 <__gmpz_add@plt>
   57f0c:	ldr	x8, [x19]
   57f10:	add	x8, x8, x21
   57f14:	str	x8, [x19]
   57f18:	b	57fb0 <mpfr_random_deviate_tstbit@@Base+0x1c0>
   57f1c:	cmp	x24, x21
   57f20:	b.cs	57fb0 <mpfr_random_deviate_tstbit@@Base+0x1c0>  // b.hs, b.nlast
   57f24:	add	x22, x19, #0x10
   57f28:	b	57f60 <mpfr_random_deviate_tstbit@@Base+0x170>
   57f2c:	mov	w2, #0x20                  	// #32
   57f30:	mov	x0, x22
   57f34:	mov	x1, x22
   57f38:	bl	c230 <__gmpz_mul_2exp@plt>
   57f3c:	mov	x0, x22
   57f40:	mov	x1, x22
   57f44:	mov	x2, x23
   57f48:	bl	c360 <__gmpz_add_ui@plt>
   57f4c:	ldr	x8, [x19]
   57f50:	add	x8, x8, #0x20
   57f54:	cmp	x8, x21
   57f58:	str	x8, [x19]
   57f5c:	b.cs	57fb0 <mpfr_random_deviate_tstbit@@Base+0x1c0>  // b.hs, b.nlast
   57f60:	mov	w1, #0x20                  	// #32
   57f64:	mov	x0, x20
   57f68:	bl	caf0 <__gmp_urandomb_ui@plt>
   57f6c:	ldr	x8, [x19]
   57f70:	mov	x23, x0
   57f74:	cmp	x8, #0x20
   57f78:	b.ne	57f2c <mpfr_random_deviate_tstbit@@Base+0x13c>  // b.any
   57f7c:	mov	x0, x22
   57f80:	mov	x1, x23
   57f84:	bl	bd00 <__gmpz_set_ui@plt>
   57f88:	b	57f4c <mpfr_random_deviate_tstbit@@Base+0x15c>
   57f8c:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   57f90:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   57f94:	add	x0, x0, #0x42b
   57f98:	add	x2, x2, #0x45b
   57f9c:	mov	w1, #0x82                  	// #130
   57fa0:	bl	cb20 <mpfr_assert_fail@plt>
   57fa4:	ldr	x24, [x19]
   57fa8:	cmp	x24, x21
   57fac:	b.cc	57e98 <mpfr_random_deviate_tstbit@@Base+0xa8>  // b.lo, b.ul, b.last
   57fb0:	ldp	x20, x19, [sp, #48]
   57fb4:	ldp	x22, x21, [sp, #32]
   57fb8:	ldp	x24, x23, [sp, #16]
   57fbc:	ldp	x29, x30, [sp], #64
   57fc0:	ret

0000000000057fc4 <mpfr_random_deviate_less@@Base>:
   57fc4:	stp	x29, x30, [sp, #-96]!
   57fc8:	cmp	x0, x1
   57fcc:	str	x27, [sp, #16]
   57fd0:	stp	x26, x25, [sp, #32]
   57fd4:	stp	x24, x23, [sp, #48]
   57fd8:	stp	x22, x21, [sp, #64]
   57fdc:	stp	x20, x19, [sp, #80]
   57fe0:	mov	x29, sp
   57fe4:	b.eq	5806c <mpfr_random_deviate_less@@Base+0xa8>  // b.none
   57fe8:	ldr	x8, [x0]
   57fec:	mov	x19, x1
   57ff0:	mov	x20, x0
   57ff4:	mov	x21, x2
   57ff8:	cmp	x8, #0x1f
   57ffc:	b.hi	58088 <mpfr_random_deviate_less@@Base+0xc4>  // b.pmore
   58000:	cbz	x8, 58074 <mpfr_random_deviate_less@@Base+0xb0>
   58004:	add	x22, x20, #0x10
   58008:	b	58040 <mpfr_random_deviate_less@@Base+0x7c>
   5800c:	mov	w2, #0x20                  	// #32
   58010:	mov	x0, x22
   58014:	mov	x1, x22
   58018:	bl	c230 <__gmpz_mul_2exp@plt>
   5801c:	mov	x0, x22
   58020:	mov	x1, x22
   58024:	mov	x2, x23
   58028:	bl	c360 <__gmpz_add_ui@plt>
   5802c:	ldr	x8, [x20]
   58030:	add	x9, x8, #0x20
   58034:	cmn	x8, #0x21
   58038:	str	x9, [x20]
   5803c:	b.ls	58088 <mpfr_random_deviate_less@@Base+0xc4>  // b.plast
   58040:	mov	w1, #0x20                  	// #32
   58044:	mov	x0, x21
   58048:	bl	caf0 <__gmp_urandomb_ui@plt>
   5804c:	ldr	x8, [x20]
   58050:	mov	x23, x0
   58054:	cmp	x8, #0x20
   58058:	b.ne	5800c <mpfr_random_deviate_less@@Base+0x48>  // b.any
   5805c:	mov	x0, x22
   58060:	mov	x1, x23
   58064:	bl	bd00 <__gmpz_set_ui@plt>
   58068:	b	5802c <mpfr_random_deviate_less@@Base+0x68>
   5806c:	mov	w0, wzr
   58070:	b	581ec <mpfr_random_deviate_less@@Base+0x228>
   58074:	mov	w1, #0x20                  	// #32
   58078:	mov	x0, x21
   5807c:	mov	w22, #0x20                  	// #32
   58080:	bl	caf0 <__gmp_urandomb_ui@plt>
   58084:	stp	x22, x0, [x20]
   58088:	ldr	x8, [x19]
   5808c:	cmp	x8, #0x1f
   58090:	b.hi	58114 <mpfr_random_deviate_less@@Base+0x150>  // b.pmore
   58094:	cbz	x8, 58100 <mpfr_random_deviate_less@@Base+0x13c>
   58098:	add	x22, x19, #0x10
   5809c:	b	580d4 <mpfr_random_deviate_less@@Base+0x110>
   580a0:	mov	w2, #0x20                  	// #32
   580a4:	mov	x0, x22
   580a8:	mov	x1, x22
   580ac:	bl	c230 <__gmpz_mul_2exp@plt>
   580b0:	mov	x0, x22
   580b4:	mov	x1, x22
   580b8:	mov	x2, x23
   580bc:	bl	c360 <__gmpz_add_ui@plt>
   580c0:	ldr	x8, [x19]
   580c4:	add	x9, x8, #0x20
   580c8:	cmn	x8, #0x21
   580cc:	str	x9, [x19]
   580d0:	b.ls	58114 <mpfr_random_deviate_less@@Base+0x150>  // b.plast
   580d4:	mov	w1, #0x20                  	// #32
   580d8:	mov	x0, x21
   580dc:	bl	caf0 <__gmp_urandomb_ui@plt>
   580e0:	ldr	x8, [x19]
   580e4:	mov	x23, x0
   580e8:	cmp	x8, #0x20
   580ec:	b.ne	580a0 <mpfr_random_deviate_less@@Base+0xdc>  // b.any
   580f0:	mov	x0, x22
   580f4:	mov	x1, x23
   580f8:	bl	bd00 <__gmpz_set_ui@plt>
   580fc:	b	580c0 <mpfr_random_deviate_less@@Base+0xfc>
   58100:	mov	w1, #0x20                  	// #32
   58104:	mov	x0, x21
   58108:	mov	w22, #0x20                  	// #32
   5810c:	bl	caf0 <__gmp_urandomb_ui@plt>
   58110:	stp	x22, x0, [x19]
   58114:	ldr	x8, [x20, #8]
   58118:	ldr	x9, [x19, #8]
   5811c:	cmp	x8, x9
   58120:	b.ne	581e0 <mpfr_random_deviate_less@@Base+0x21c>  // b.any
   58124:	add	x22, x20, #0x10
   58128:	add	x23, x19, #0x10
   5812c:	mov	x26, #0xffffffffffffffdf    	// #-33
   58130:	mov	w24, #0x21                  	// #33
   58134:	b	5817c <mpfr_random_deviate_less@@Base+0x1b8>
   58138:	ldr	x8, [x20]
   5813c:	mov	x0, x22
   58140:	add	x1, x26, x8
   58144:	bl	c020 <__gmpz_tstbit@plt>
   58148:	mov	w25, w0
   5814c:	mov	x0, x19
   58150:	mov	x1, x24
   58154:	mov	x2, x21
   58158:	mov	x3, xzr
   5815c:	bl	57e60 <mpfr_random_deviate_tstbit@@Base+0x70>
   58160:	ldr	x8, [x19]
   58164:	mov	x0, x23
   58168:	add	x1, x26, x8
   5816c:	bl	c020 <__gmpz_tstbit@plt>
   58170:	cmp	w25, w0
   58174:	b.eq	581d4 <mpfr_random_deviate_less@@Base+0x210>  // b.none
   58178:	b	581e8 <mpfr_random_deviate_less@@Base+0x224>
   5817c:	cbz	x26, 581d4 <mpfr_random_deviate_less@@Base+0x210>
   58180:	mov	x0, x20
   58184:	mov	x1, x24
   58188:	mov	x2, x21
   5818c:	mov	x3, xzr
   58190:	bl	57e60 <mpfr_random_deviate_tstbit@@Base+0x70>
   58194:	cmp	x24, #0x20
   58198:	b.hi	58138 <mpfr_random_deviate_less@@Base+0x174>  // b.pmore
   5819c:	ldr	x8, [x20, #8]
   581a0:	add	x27, x26, #0x20
   581a4:	mov	x0, x19
   581a8:	mov	x1, x24
   581ac:	lsr	x8, x8, x27
   581b0:	mov	x2, x21
   581b4:	mov	x3, xzr
   581b8:	and	w25, w8, #0x1
   581bc:	bl	57e60 <mpfr_random_deviate_tstbit@@Base+0x70>
   581c0:	ldr	x8, [x19, #8]
   581c4:	lsr	x8, x8, x27
   581c8:	and	w0, w8, #0x1
   581cc:	cmp	w25, w0
   581d0:	b.ne	581e8 <mpfr_random_deviate_less@@Base+0x224>  // b.any
   581d4:	add	x24, x24, #0x1
   581d8:	sub	x26, x26, #0x1
   581dc:	b	5817c <mpfr_random_deviate_less@@Base+0x1b8>
   581e0:	cset	w0, cc  // cc = lo, ul, last
   581e4:	b	581ec <mpfr_random_deviate_less@@Base+0x228>
   581e8:	cset	w0, lt  // lt = tstop
   581ec:	ldp	x20, x19, [sp, #80]
   581f0:	ldp	x22, x21, [sp, #64]
   581f4:	ldp	x24, x23, [sp, #48]
   581f8:	ldp	x26, x25, [sp, #32]
   581fc:	ldr	x27, [sp, #16]
   58200:	ldp	x29, x30, [sp], #96
   58204:	ret

0000000000058208 <mpfr_random_deviate_value@@Base>:
   58208:	sub	sp, sp, #0x70
   5820c:	stp	x29, x30, [sp, #16]
   58210:	stp	x26, x25, [sp, #48]
   58214:	stp	x24, x23, [sp, #64]
   58218:	stp	x22, x21, [sp, #80]
   5821c:	stp	x20, x19, [sp, #96]
   58220:	str	x27, [sp, #32]
   58224:	ldr	x27, [x3]
   58228:	mov	w19, w5
   5822c:	mov	x24, x4
   58230:	mov	x20, x3
   58234:	mov	x21, x2
   58238:	mov	x23, x1
   5823c:	mov	w22, w0
   58240:	add	x29, sp, #0x10
   58244:	cbz	x1, 58258 <mpfr_random_deviate_value@@Base+0x50>
   58248:	clz	x8, x23
   5824c:	eor	x25, x8, #0x3f
   58250:	mov	w26, #0x1                   	// #1
   58254:	b	583e0 <mpfr_random_deviate_value@@Base+0x1d8>
   58258:	ldr	x26, [x21]
   5825c:	cmp	x26, #0x1f
   58260:	b.hi	582e4 <mpfr_random_deviate_value@@Base+0xdc>  // b.pmore
   58264:	cbz	x26, 582d0 <mpfr_random_deviate_value@@Base+0xc8>
   58268:	add	x25, x21, #0x10
   5826c:	b	582a4 <mpfr_random_deviate_value@@Base+0x9c>
   58270:	mov	w2, #0x20                  	// #32
   58274:	mov	x0, x25
   58278:	mov	x1, x25
   5827c:	bl	c230 <__gmpz_mul_2exp@plt>
   58280:	mov	x0, x25
   58284:	mov	x1, x25
   58288:	mov	x2, x26
   5828c:	bl	c360 <__gmpz_add_ui@plt>
   58290:	ldr	x8, [x21]
   58294:	add	x26, x8, #0x20
   58298:	cmn	x8, #0x21
   5829c:	str	x26, [x21]
   582a0:	b.ls	582e4 <mpfr_random_deviate_value@@Base+0xdc>  // b.plast
   582a4:	mov	w1, #0x20                  	// #32
   582a8:	mov	x0, x24
   582ac:	bl	caf0 <__gmp_urandomb_ui@plt>
   582b0:	ldr	x8, [x21]
   582b4:	mov	x26, x0
   582b8:	cmp	x8, #0x20
   582bc:	b.ne	58270 <mpfr_random_deviate_value@@Base+0x68>  // b.any
   582c0:	mov	x0, x25
   582c4:	mov	x1, x26
   582c8:	bl	bd00 <__gmpz_set_ui@plt>
   582cc:	b	58290 <mpfr_random_deviate_value@@Base+0x88>
   582d0:	mov	w1, #0x20                  	// #32
   582d4:	mov	x0, x24
   582d8:	mov	w26, #0x20                  	// #32
   582dc:	bl	caf0 <__gmp_urandomb_ui@plt>
   582e0:	stp	x26, x0, [x21]
   582e4:	ldr	x8, [x21, #8]
   582e8:	cbz	x8, 58300 <mpfr_random_deviate_value@@Base+0xf8>
   582ec:	clz	x8, x8
   582f0:	mov	w9, #0x20                  	// #32
   582f4:	eor	x8, x8, #0x3f
   582f8:	sub	x25, x9, x8
   582fc:	b	583dc <mpfr_random_deviate_value@@Base+0x1d4>
   58300:	cmp	x26, #0x3f
   58304:	b.hi	58388 <mpfr_random_deviate_value@@Base+0x180>  // b.pmore
   58308:	cbnz	x26, 58320 <mpfr_random_deviate_value@@Base+0x118>
   5830c:	mov	w1, #0x20                  	// #32
   58310:	mov	x0, x24
   58314:	mov	w25, #0x20                  	// #32
   58318:	bl	caf0 <__gmp_urandomb_ui@plt>
   5831c:	stp	x25, x0, [x21]
   58320:	add	x25, x21, #0x10
   58324:	b	5835c <mpfr_random_deviate_value@@Base+0x154>
   58328:	mov	w2, #0x20                  	// #32
   5832c:	mov	x0, x25
   58330:	mov	x1, x25
   58334:	bl	c230 <__gmpz_mul_2exp@plt>
   58338:	mov	x0, x25
   5833c:	mov	x1, x25
   58340:	mov	x2, x26
   58344:	bl	c360 <__gmpz_add_ui@plt>
   58348:	ldr	x8, [x21]
   5834c:	add	x26, x8, #0x20
   58350:	cmp	x26, #0x40
   58354:	str	x26, [x21]
   58358:	b.cs	58388 <mpfr_random_deviate_value@@Base+0x180>  // b.hs, b.nlast
   5835c:	mov	w1, #0x20                  	// #32
   58360:	mov	x0, x24
   58364:	bl	caf0 <__gmp_urandomb_ui@plt>
   58368:	ldr	x8, [x21]
   5836c:	mov	x26, x0
   58370:	cmp	x8, #0x20
   58374:	b.ne	58328 <mpfr_random_deviate_value@@Base+0x120>  // b.any
   58378:	mov	x0, x25
   5837c:	mov	x1, x26
   58380:	bl	bd00 <__gmpz_set_ui@plt>
   58384:	b	58348 <mpfr_random_deviate_value@@Base+0x140>
   58388:	ldr	w8, [x21, #20]
   5838c:	add	x25, x26, #0x1
   58390:	cbnz	w8, 583b8 <mpfr_random_deviate_value@@Base+0x1b0>
   58394:	mov	x0, x21
   58398:	mov	x1, x25
   5839c:	mov	x2, x24
   583a0:	mov	x3, xzr
   583a4:	bl	57e60 <mpfr_random_deviate_tstbit@@Base+0x70>
   583a8:	ldr	x9, [x21]
   583ac:	ldr	w8, [x21, #20]
   583b0:	add	x25, x9, #0x1
   583b4:	cbz	w8, 58394 <mpfr_random_deviate_value@@Base+0x18c>
   583b8:	add	x0, x21, #0x10
   583bc:	mov	w1, #0x2                   	// #2
   583c0:	bl	cb40 <__gmpz_sizeinbase@plt>
   583c4:	sub	x25, x25, x0
   583c8:	mov	x9, #0x101                 	// #257
   583cc:	add	x8, x25, #0x1
   583d0:	movk	x9, #0x8000, lsl #48
   583d4:	cmp	x8, x9
   583d8:	b.cs	58530 <mpfr_random_deviate_value@@Base+0x328>  // b.hs, b.nlast
   583dc:	mov	w26, #0xffffffff            	// #-1
   583e0:	mov	x0, sp
   583e4:	bl	bfe0 <mpfr_mpz_init@plt>
   583e8:	add	x8, x27, #0x1
   583ec:	cmp	x8, x25
   583f0:	b.ls	583fc <mpfr_random_deviate_value@@Base+0x1f4>  // b.plast
   583f4:	cmp	w26, #0x1
   583f8:	b.ge	58408 <mpfr_random_deviate_value@@Base+0x200>  // b.tcont
   583fc:	cmn	x8, x25
   58400:	b.eq	58428 <mpfr_random_deviate_value@@Base+0x220>  // b.none
   58404:	tbz	w26, #31, 58428 <mpfr_random_deviate_value@@Base+0x220>
   58408:	neg	x9, x25
   5840c:	cmp	w26, #0x0
   58410:	csel	x9, x9, x25, gt
   58414:	add	x1, x9, x8
   58418:	mov	x3, sp
   5841c:	mov	x0, x21
   58420:	mov	x2, x24
   58424:	bl	57e60 <mpfr_random_deviate_tstbit@@Base+0x70>
   58428:	cbz	x23, 584f4 <mpfr_random_deviate_value@@Base+0x2ec>
   5842c:	mov	x0, sp
   58430:	mov	x1, x23
   58434:	bl	bd00 <__gmpz_set_ui@plt>
   58438:	ldr	x8, [x21]
   5843c:	cbz	x8, 58460 <mpfr_random_deviate_value@@Base+0x258>
   58440:	mov	x0, sp
   58444:	mov	x1, sp
   58448:	mov	w2, #0x20                  	// #32
   5844c:	bl	c230 <__gmpz_mul_2exp@plt>
   58450:	ldr	x2, [x21, #8]
   58454:	mov	x0, sp
   58458:	mov	x1, sp
   5845c:	bl	c360 <__gmpz_add_ui@plt>
   58460:	ldr	x8, [x21]
   58464:	cmp	x8, #0x21
   58468:	b.cc	5848c <mpfr_random_deviate_value@@Base+0x284>  // b.lo, b.ul, b.last
   5846c:	sub	x2, x8, #0x20
   58470:	mov	x0, sp
   58474:	mov	x1, sp
   58478:	bl	c230 <__gmpz_mul_2exp@plt>
   5847c:	add	x2, x21, #0x10
   58480:	mov	x0, sp
   58484:	mov	x1, sp
   58488:	bl	c9a0 <__gmpz_add@plt>
   5848c:	mov	x0, sp
   58490:	mov	x1, xzr
   58494:	bl	bf60 <__gmpz_setbit@plt>
   58498:	cbz	w22, 584a8 <mpfr_random_deviate_value@@Base+0x2a0>
   5849c:	ldr	w8, [sp, #4]
   584a0:	neg	w8, w8
   584a4:	str	w8, [sp, #4]
   584a8:	ldr	x8, [x21]
   584ac:	tbnz	x8, #63, 58510 <mpfr_random_deviate_value@@Base+0x308>
   584b0:	neg	x2, x8
   584b4:	mov	x1, sp
   584b8:	mov	x0, x20
   584bc:	mov	w3, w19
   584c0:	bl	c4e0 <mpfr_set_z_2exp@plt>
   584c4:	mov	w19, w0
   584c8:	mov	x0, sp
   584cc:	bl	c1b0 <mpfr_mpz_clear@plt>
   584d0:	mov	w0, w19
   584d4:	ldp	x20, x19, [sp, #96]
   584d8:	ldp	x22, x21, [sp, #80]
   584dc:	ldp	x24, x23, [sp, #64]
   584e0:	ldp	x26, x25, [sp, #48]
   584e4:	ldr	x27, [sp, #32]
   584e8:	ldp	x29, x30, [sp, #16]
   584ec:	add	sp, sp, #0x70
   584f0:	ret
   584f4:	ldr	x1, [x21, #8]
   584f8:	mov	x0, sp
   584fc:	bl	bd00 <__gmpz_set_ui@plt>
   58500:	ldr	x8, [x21]
   58504:	cmp	x8, #0x21
   58508:	b.cs	5846c <mpfr_random_deviate_value@@Base+0x264>  // b.hs, b.nlast
   5850c:	b	5848c <mpfr_random_deviate_value@@Base+0x284>
   58510:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   58514:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   58518:	add	x0, x0, #0x42b
   5851c:	add	x2, x2, #0x43c
   58520:	mov	w1, #0x177                 	// #375
   58524:	bl	cb20 <mpfr_assert_fail@plt>
   58528:	ldr	x8, [x21]
   5852c:	b	584b0 <mpfr_random_deviate_value@@Base+0x2a8>
   58530:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   58534:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   58538:	add	x0, x0, #0x42b
   5853c:	add	x2, x2, #0x486
   58540:	mov	w1, #0xf1                  	// #241
   58544:	bl	cb20 <mpfr_assert_fail@plt>
   58548:	b	583dc <mpfr_random_deviate_value@@Base+0x1d4>

000000000005854c <mpfr_erandom@@Base>:
   5854c:	sub	sp, sp, #0xa0
   58550:	stp	x29, x30, [sp, #96]
   58554:	add	x29, sp, #0x60
   58558:	stp	x22, x21, [sp, #128]
   5855c:	mov	x21, x0
   58560:	sub	x0, x29, #0x20
   58564:	stp	x24, x23, [sp, #112]
   58568:	stp	x20, x19, [sp, #144]
   5856c:	mov	w19, w2
   58570:	mov	x20, x1
   58574:	bl	c190 <mpfr_random_deviate_init@plt>
   58578:	add	x0, sp, #0x20
   5857c:	bl	c190 <mpfr_random_deviate_init@plt>
   58580:	mov	x0, sp
   58584:	bl	c190 <mpfr_random_deviate_init@plt>
   58588:	add	x0, sp, #0x20
   5858c:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   58590:	add	x0, sp, #0x20
   58594:	sub	x1, x29, #0x20
   58598:	mov	x2, x20
   5859c:	bl	ca10 <mpfr_random_deviate_less@plt>
   585a0:	mov	x22, xzr
   585a4:	cbz	w0, 58638 <mpfr_erandom@@Base+0xec>
   585a8:	adrp	x23, 65000 <mpfr_bases@@Base+0x1758>
   585ac:	adrp	x24, 65000 <mpfr_bases@@Base+0x1758>
   585b0:	add	x23, x23, #0x4d8
   585b4:	add	x24, x24, #0x4e2
   585b8:	mov	x0, sp
   585bc:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   585c0:	mov	x0, sp
   585c4:	add	x1, sp, #0x20
   585c8:	mov	x2, x20
   585cc:	bl	ca10 <mpfr_random_deviate_less@plt>
   585d0:	cbz	w0, 585f4 <mpfr_erandom@@Base+0xa8>
   585d4:	add	x0, sp, #0x20
   585d8:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   585dc:	add	x0, sp, #0x20
   585e0:	mov	x1, sp
   585e4:	mov	x2, x20
   585e8:	bl	ca10 <mpfr_random_deviate_less@plt>
   585ec:	cbnz	w0, 585b8 <mpfr_erandom@@Base+0x6c>
   585f0:	b	58638 <mpfr_erandom@@Base+0xec>
   585f4:	adds	x22, x22, #0x1
   585f8:	b.cs	58624 <mpfr_erandom@@Base+0xd8>  // b.hs, b.nlast
   585fc:	sub	x0, x29, #0x20
   58600:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   58604:	add	x0, sp, #0x20
   58608:	bl	c7d0 <mpfr_random_deviate_reset@plt>
   5860c:	add	x0, sp, #0x20
   58610:	sub	x1, x29, #0x20
   58614:	mov	x2, x20
   58618:	bl	ca10 <mpfr_random_deviate_less@plt>
   5861c:	cbnz	w0, 585b8 <mpfr_erandom@@Base+0x6c>
   58620:	b	58638 <mpfr_erandom@@Base+0xec>
   58624:	mov	w1, #0x61                  	// #97
   58628:	mov	x0, x23
   5862c:	mov	x2, x24
   58630:	bl	cb20 <mpfr_assert_fail@plt>
   58634:	b	585fc <mpfr_erandom@@Base+0xb0>
   58638:	mov	x0, sp
   5863c:	bl	be40 <mpfr_random_deviate_clear@plt>
   58640:	add	x0, sp, #0x20
   58644:	bl	be40 <mpfr_random_deviate_clear@plt>
   58648:	sub	x2, x29, #0x20
   5864c:	mov	w0, wzr
   58650:	mov	x1, x22
   58654:	mov	x3, x21
   58658:	mov	x4, x20
   5865c:	mov	w5, w19
   58660:	bl	bb00 <mpfr_random_deviate_value@plt>
   58664:	mov	w19, w0
   58668:	sub	x0, x29, #0x20
   5866c:	bl	be40 <mpfr_random_deviate_clear@plt>
   58670:	mov	w0, w19
   58674:	ldp	x20, x19, [sp, #144]
   58678:	ldp	x22, x21, [sp, #128]
   5867c:	ldp	x24, x23, [sp, #112]
   58680:	ldp	x29, x30, [sp, #96]
   58684:	add	sp, sp, #0xa0
   58688:	ret

000000000005868c <mpfr_fmma@@Base>:
   5868c:	mov	w6, wzr
   58690:	b	58694 <mpfr_fmma@@Base+0x8>
   58694:	stp	x29, x30, [sp, #-96]!
   58698:	stp	x28, x27, [sp, #16]
   5869c:	stp	x26, x25, [sp, #32]
   586a0:	stp	x24, x23, [sp, #48]
   586a4:	stp	x22, x21, [sp, #64]
   586a8:	stp	x20, x19, [sp, #80]
   586ac:	mov	x29, sp
   586b0:	sub	sp, sp, #0xa0
   586b4:	ldr	x27, [x0]
   586b8:	stur	xzr, [x29, #-136]
   586bc:	ldr	x8, [x1]
   586c0:	ldr	x9, [x2]
   586c4:	ldr	x10, [x3]
   586c8:	ldr	x11, [x4]
   586cc:	sub	x12, x8, #0x1
   586d0:	add	x8, x8, #0x3e
   586d4:	cmp	x12, #0x0
   586d8:	csel	x8, x8, x12, lt  // lt = tstop
   586dc:	sub	x12, x9, #0x1
   586e0:	add	x9, x9, #0x3e
   586e4:	cmp	x12, #0x0
   586e8:	csel	x9, x9, x12, lt  // lt = tstop
   586ec:	sub	x12, x10, #0x1
   586f0:	add	x10, x10, #0x3e
   586f4:	cmp	x12, #0x0
   586f8:	csel	x10, x10, x12, lt  // lt = tstop
   586fc:	sub	x12, x11, #0x1
   58700:	asr	x9, x9, #6
   58704:	add	x11, x11, #0x3e
   58708:	cmp	x12, #0x0
   5870c:	add	x28, x9, x8, asr #6
   58710:	asr	x8, x10, #6
   58714:	csel	x9, x11, x12, lt  // lt = tstop
   58718:	add	x20, x28, #0x2
   5871c:	add	x8, x8, x9, asr #6
   58720:	lsl	x24, x20, #3
   58724:	mov	w26, w6
   58728:	mov	x21, x4
   5872c:	mov	x22, x3
   58730:	mov	x23, x2
   58734:	mov	x25, x1
   58738:	cmp	x24, #0x4, lsl #12
   5873c:	add	x19, x8, #0x2
   58740:	stur	w5, [x29, #-140]
   58744:	stur	x0, [x29, #-152]
   58748:	b.hi	58930 <mpfr_fmma@@Base+0x2a4>  // b.pmore
   5874c:	add	x9, x24, #0xf
   58750:	mov	x8, sp
   58754:	and	x9, x9, #0xfffffffffffffff0
   58758:	sub	x0, x8, x9
   5875c:	mov	sp, x0
   58760:	lsl	x1, x19, #3
   58764:	lsl	x8, x20, #6
   58768:	mov	w9, #0x1                   	// #1
   5876c:	cmp	x1, #0x4, lsl #12
   58770:	stur	x0, [x29, #-24]
   58774:	stur	x8, [x29, #-48]
   58778:	stur	w9, [x29, #-40]
   5877c:	b.hi	58940 <mpfr_fmma@@Base+0x2b4>  // b.pmore
   58780:	add	x9, x1, #0xf
   58784:	mov	x8, sp
   58788:	and	x9, x9, #0xfffffffffffffff0
   5878c:	sub	x0, x8, x9
   58790:	mov	sp, x0
   58794:	lsl	x8, x19, #6
   58798:	stur	x0, [x29, #-72]
   5879c:	mov	w9, #0x1                   	// #1
   587a0:	sub	x0, x29, #0x30
   587a4:	mov	x1, x25
   587a8:	mov	x2, x23
   587ac:	stur	x8, [x29, #-96]
   587b0:	stur	w9, [x29, #-88]
   587b4:	bl	bfd0 <mpfr_ubf_mul_exact@plt>
   587b8:	sub	x0, x29, #0x60
   587bc:	mov	x1, x22
   587c0:	mov	x2, x21
   587c4:	bl	bfd0 <mpfr_ubf_mul_exact@plt>
   587c8:	cbz	w26, 587d8 <mpfr_fmma@@Base+0x14c>
   587cc:	ldur	w8, [x29, #-88]
   587d0:	neg	w8, w8
   587d4:	stur	w8, [x29, #-88]
   587d8:	ldr	x8, [x25]
   587dc:	cmp	x27, x8
   587e0:	b.ne	58848 <mpfr_fmma@@Base+0x1bc>  // b.any
   587e4:	ldr	x8, [x23]
   587e8:	cmp	x27, x8
   587ec:	b.ne	58848 <mpfr_fmma@@Base+0x1bc>  // b.any
   587f0:	ldr	x8, [x22]
   587f4:	cmp	x27, x8
   587f8:	b.ne	58848 <mpfr_fmma@@Base+0x1bc>  // b.any
   587fc:	ldr	x8, [x21]
   58800:	cmp	x27, x8
   58804:	b.ne	58848 <mpfr_fmma@@Base+0x1bc>  // b.any
   58808:	lsl	x19, x27, #1
   5880c:	sub	x8, x19, #0x1
   58810:	add	x9, x19, #0x3e
   58814:	cmp	x8, #0x0
   58818:	csel	x8, x9, x8, lt  // lt = tstop
   5881c:	add	x9, x28, #0x1
   58820:	cmp	x9, x8, asr #6
   58824:	b.ne	58848 <mpfr_fmma@@Base+0x1bc>  // b.any
   58828:	cmp	x24, #0x4, lsl #12
   5882c:	b.hi	588e0 <mpfr_fmma@@Base+0x254>  // b.pmore
   58830:	add	x9, x24, #0xf
   58834:	mov	x8, sp
   58838:	and	x9, x9, #0xfffffffffffffff0
   5883c:	sub	x0, x8, x9
   58840:	mov	sp, x0
   58844:	b	588ec <mpfr_fmma@@Base+0x260>
   58848:	ldur	x0, [x29, #-152]
   5884c:	ldur	w3, [x29, #-140]
   58850:	sub	x1, x29, #0x30
   58854:	sub	x2, x29, #0x60
   58858:	bl	c1e0 <mpfr_add@plt>
   5885c:	ldur	x8, [x29, #-32]
   58860:	mov	x20, #0x4                   	// #4
   58864:	movk	x20, #0x8000, lsl #48
   58868:	mov	w19, w0
   5886c:	cmp	x8, x20
   58870:	b.eq	588ac <mpfr_fmma@@Base+0x220>  // b.none
   58874:	ldur	x8, [x29, #-80]
   58878:	cmp	x8, x20
   5887c:	b.eq	588c4 <mpfr_fmma@@Base+0x238>  // b.none
   58880:	ldur	x0, [x29, #-136]
   58884:	cbnz	x0, 588d8 <mpfr_fmma@@Base+0x24c>
   58888:	mov	w0, w19
   5888c:	mov	sp, x29
   58890:	ldp	x20, x19, [sp, #80]
   58894:	ldp	x22, x21, [sp, #64]
   58898:	ldp	x24, x23, [sp, #48]
   5889c:	ldp	x26, x25, [sp, #32]
   588a0:	ldp	x28, x27, [sp, #16]
   588a4:	ldp	x29, x30, [sp], #96
   588a8:	ret
   588ac:	sub	x8, x29, #0x30
   588b0:	add	x0, x8, #0x20
   588b4:	bl	c1b0 <mpfr_mpz_clear@plt>
   588b8:	ldur	x8, [x29, #-80]
   588bc:	cmp	x8, x20
   588c0:	b.ne	58880 <mpfr_fmma@@Base+0x1f4>  // b.any
   588c4:	sub	x8, x29, #0x60
   588c8:	add	x0, x8, #0x20
   588cc:	bl	c1b0 <mpfr_mpz_clear@plt>
   588d0:	ldur	x0, [x29, #-136]
   588d4:	cbz	x0, 58888 <mpfr_fmma@@Base+0x1fc>
   588d8:	bl	c400 <mpfr_tmp_free@plt>
   588dc:	b	58888 <mpfr_fmma@@Base+0x1fc>
   588e0:	sub	x0, x29, #0x88
   588e4:	mov	x1, x24
   588e8:	bl	be10 <mpfr_tmp_allocate@plt>
   588ec:	stur	x19, [x29, #-128]
   588f0:	stp	x0, x19, [x29, #-104]
   588f4:	stur	x19, [x29, #-48]
   588f8:	ldur	w19, [x29, #-140]
   588fc:	mov	w8, #0x1                   	// #1
   58900:	sub	x0, x29, #0x80
   58904:	sub	x1, x29, #0x30
   58908:	sub	x2, x29, #0x60
   5890c:	mov	w3, w19
   58910:	stur	w8, [x29, #-120]
   58914:	bl	c1e0 <mpfr_add@plt>
   58918:	mov	w3, w0
   5891c:	ldur	x0, [x29, #-152]
   58920:	sub	x1, x29, #0x80
   58924:	mov	w2, w19
   58928:	bl	cac0 <mpfr_set_1_2@plt>
   5892c:	b	5885c <mpfr_fmma@@Base+0x1d0>
   58930:	sub	x0, x29, #0x88
   58934:	mov	x1, x24
   58938:	bl	be10 <mpfr_tmp_allocate@plt>
   5893c:	b	58760 <mpfr_fmma@@Base+0xd4>
   58940:	sub	x0, x29, #0x88
   58944:	bl	be10 <mpfr_tmp_allocate@plt>
   58948:	b	58794 <mpfr_fmma@@Base+0x108>

000000000005894c <mpfr_fmms@@Base>:
   5894c:	mov	w6, #0x1                   	// #1
   58950:	b	58694 <mpfr_fmma@@Base+0x8>

0000000000058954 <mpfr_log_ui@@Base>:
   58954:	stp	x29, x30, [sp, #-96]!
   58958:	stp	x28, x27, [sp, #16]
   5895c:	stp	x26, x25, [sp, #32]
   58960:	stp	x24, x23, [sp, #48]
   58964:	stp	x22, x21, [sp, #64]
   58968:	stp	x20, x19, [sp, #80]
   5896c:	mov	x29, sp
   58970:	sub	sp, sp, #0x1a0
   58974:	mov	w23, w2
   58978:	mov	x24, x1
   5897c:	cmp	x1, #0x2
   58980:	mov	x22, x0
   58984:	mov	x19, sp
   58988:	b.hi	589d0 <mpfr_log_ui@@Base+0x7c>  // b.pmore
   5898c:	cmp	x24, #0x1
   58990:	b.eq	58fd8 <mpfr_log_ui@@Base+0x684>  // b.none
   58994:	cbnz	x24, 58ff0 <mpfr_log_ui@@Base+0x69c>
   58998:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5899c:	mov	w9, #0xffffffff            	// #-1
   589a0:	str	x8, [x22, #16]
   589a4:	str	w9, [x22, #8]
   589a8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   589ac:	ldr	x1, [x0, #2640]
   589b0:	add	x0, x0, #0xa50
   589b4:	blr	x1
   589b8:	mrs	x8, tpidr_el0
   589bc:	ldr	w9, [x8, x0]
   589c0:	mov	w21, wzr
   589c4:	orr	w9, w9, #0x20
   589c8:	str	w9, [x8, x0]
   589cc:	b	59018 <mpfr_log_ui@@Base+0x6c4>
   589d0:	sub	x0, x29, #0x18
   589d4:	bl	bfe0 <mpfr_mpz_init@plt>
   589d8:	sub	x0, x29, #0x18
   589dc:	mov	x1, x24
   589e0:	bl	bd00 <__gmpz_set_ui@plt>
   589e4:	sub	x0, x29, #0x18
   589e8:	sub	x1, x29, #0x18
   589ec:	mov	w2, #0x3                   	// #3
   589f0:	bl	c140 <__gmpz_mul_ui@plt>
   589f4:	sub	x0, x29, #0x18
   589f8:	mov	w1, #0x2                   	// #2
   589fc:	bl	cb40 <__gmpz_sizeinbase@plt>
   58a00:	mov	x27, x0
   58a04:	sub	x28, x0, #0x2
   58a08:	sub	x0, x29, #0x18
   58a0c:	bl	c1b0 <mpfr_mpz_clear@plt>
   58a10:	str	xzr, [x19, #176]
   58a14:	ldr	x21, [x22]
   58a18:	mov	w8, #0x1                   	// #1
   58a1c:	lsl	x8, x8, x28
   58a20:	cmp	x28, #0x40
   58a24:	csel	x20, x8, xzr, cc  // cc = lo, ul, last
   58a28:	cmp	x21, #0x1
   58a2c:	b.eq	5903c <mpfr_log_ui@@Base+0x6e8>  // b.none
   58a30:	mov	x8, x21
   58a34:	b.le	59060 <mpfr_log_ui@@Base+0x70c>
   58a38:	sub	x8, x8, #0x1
   58a3c:	clz	x8, x8
   58a40:	mov	w9, #0x40                  	// #64
   58a44:	sub	x8, x9, x8
   58a48:	mov	x9, #0xfffffffffffffeff    	// #-257
   58a4c:	movk	x9, #0x7fff, lsl #48
   58a50:	add	x8, x8, x21
   58a54:	sub	x9, x9, #0xa
   58a58:	cmp	x8, x9
   58a5c:	b.gt	59080 <mpfr_log_ui@@Base+0x72c>
   58a60:	add	x9, x8, #0x9
   58a64:	add	x10, x8, #0x48
   58a68:	cmp	x9, #0x0
   58a6c:	csel	x9, x10, x9, lt  // lt = tstop
   58a70:	asr	x9, x9, #6
   58a74:	sub	x25, x24, x20
   58a78:	add	x21, x8, #0xa
   58a7c:	cmp	x8, #0x1f7
   58a80:	add	x20, x9, #0x1
   58a84:	b.lt	58a98 <mpfr_log_ui@@Base+0x144>  // b.tstop
   58a88:	lsl	x0, x20, #4
   58a8c:	str	x0, [x19, #184]
   58a90:	bl	ccd0 <mpfr_allocate_func@plt>
   58a94:	b	58aa4 <mpfr_log_ui@@Base+0x150>
   58a98:	add	x8, x19, #0xb8
   58a9c:	add	x0, x8, #0x10
   58aa0:	str	xzr, [x19, #184]
   58aa4:	mov	w8, #0x1                   	// #1
   58aa8:	add	x9, x0, x20, lsl #3
   58aac:	str	x0, [x19, #192]
   58ab0:	stur	x0, [x29, #-32]
   58ab4:	stur	x21, [x29, #-88]
   58ab8:	stur	w8, [x29, #-48]
   58abc:	stp	x9, x21, [x29, #-64]
   58ac0:	stur	w8, [x29, #-80]
   58ac4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58ac8:	ldr	x1, [x0, #2640]
   58acc:	add	x0, x0, #0xa50
   58ad0:	blr	x1
   58ad4:	mrs	x10, tpidr_el0
   58ad8:	ldr	w11, [x10, x0]
   58adc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58ae0:	ldr	x1, [x0, #2576]
   58ae4:	add	x0, x0, #0xa10
   58ae8:	blr	x1
   58aec:	ldr	x12, [x10, x0]
   58af0:	mov	x8, x0
   58af4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58af8:	ldr	x1, [x0, #2608]
   58afc:	add	x0, x0, #0xa30
   58b00:	blr	x1
   58b04:	ldr	x13, [x10, x0]
   58b08:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   58b0c:	str	x9, [x10, x8]
   58b10:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   58b14:	str	x10, [x19, #128]
   58b18:	str	x8, [x10, x0]
   58b1c:	str	w11, [x19, #36]
   58b20:	stp	x13, x12, [x19, #16]
   58b24:	cbz	x25, 58b58 <mpfr_log_ui@@Base+0x204>
   58b28:	mov	x26, x28
   58b2c:	tbnz	w25, #0, 58b44 <mpfr_log_ui@@Base+0x1f0>
   58b30:	cmp	x25, #0x0
   58b34:	cinc	x8, x25, lt  // lt = tstop
   58b38:	asr	x25, x8, #1
   58b3c:	sub	x26, x26, #0x1
   58b40:	tbz	w25, #0, 58b30 <mpfr_log_ui@@Base+0x1dc>
   58b44:	cmp	x25, #0x0
   58b48:	add	x20, x19, #0x90
   58b4c:	cneg	x8, x25, mi  // mi = first
   58b50:	str	x8, [x19, #64]
   58b54:	b	58b64 <mpfr_log_ui@@Base+0x210>
   58b58:	str	xzr, [x19, #64]
   58b5c:	add	x20, x19, #0x90
   58b60:	mov	x26, x28
   58b64:	add	x8, x27, #0x3
   58b68:	cmp	w23, #0x0
   58b6c:	mov	w10, #0x40                  	// #64
   58b70:	clz	x8, x8
   58b74:	cset	w9, eq  // eq = none
   58b78:	str	w23, [x19, #92]
   58b7c:	mov	w24, #0x2                   	// #2
   58b80:	mov	w23, #0x41                  	// #65
   58b84:	stp	x9, x22, [x19, #48]
   58b88:	mov	w9, #0x40                  	// #64
   58b8c:	sub	x8, x10, x8
   58b90:	stp	x20, x9, [x19]
   58b94:	str	x8, [x19, #40]
   58b98:	stp	x28, x27, [x19, #72]
   58b9c:	mov	w1, #0x20                  	// #32
   58ba0:	mov	x0, x20
   58ba4:	bl	ca60 <mpfr_init2@plt>
   58ba8:	ldr	x1, [x19, #64]
   58bac:	mov	w3, #0x2                   	// #2
   58bb0:	mov	x0, x20
   58bb4:	mov	x2, xzr
   58bb8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   58bbc:	mov	w2, #0x2                   	// #2
   58bc0:	mov	x0, x20
   58bc4:	mov	x1, x20
   58bc8:	bl	c210 <mpfr_log2@plt>
   58bcc:	mov	w3, #0x3                   	// #3
   58bd0:	mov	x0, x20
   58bd4:	mov	x1, x26
   58bd8:	mov	x2, x20
   58bdc:	bl	ca30 <mpfr_ui_sub@plt>
   58be0:	mov	w3, #0x2                   	// #2
   58be4:	mov	x0, x20
   58be8:	mov	x1, x21
   58bec:	mov	x2, x20
   58bf0:	bl	c2f0 <mpfr_ui_div@plt>
   58bf4:	mov	w1, #0x2                   	// #2
   58bf8:	mov	x0, x20
   58bfc:	bl	bcf0 <mpfr_get_ui@plt>
   58c00:	cmp	x0, #0x2
   58c04:	csel	x8, x0, x24, hi  // hi = pmore
   58c08:	str	x8, [x19, #96]
   58c0c:	sub	x8, x8, #0x1
   58c10:	clz	x8, x8
   58c14:	mov	x0, x20
   58c18:	str	x8, [x19, #120]
   58c1c:	sub	x28, x23, x8
   58c20:	bl	c0b0 <mpfr_clear@plt>
   58c24:	add	x8, x28, x28, lsl #1
   58c28:	lsl	x1, x8, #4
   58c2c:	cmp	x1, #0x4, lsl #12
   58c30:	str	x21, [x19, #112]
   58c34:	b.hi	58e80 <mpfr_log_ui@@Base+0x52c>  // b.pmore
   58c38:	add	x9, x1, #0xf
   58c3c:	mov	x8, sp
   58c40:	and	x9, x9, #0xfffffffffffffff0
   58c44:	sub	x24, x8, x9
   58c48:	mov	sp, x24
   58c4c:	lsl	x8, x28, #4
   58c50:	add	x22, x24, x8
   58c54:	add	x23, x22, x8
   58c58:	str	x28, [x19, #104]
   58c5c:	cbz	x28, 58ca0 <mpfr_log_ui@@Base+0x34c>
   58c60:	ldr	x9, [x19, #120]
   58c64:	mov	w8, #0x820                 	// #2080
   58c68:	mov	x28, x24
   58c6c:	sub	x27, x8, x9, lsl #5
   58c70:	mov	w8, #0x410                 	// #1040
   58c74:	sub	x21, x9, #0x41
   58c78:	sub	x20, x8, x9, lsl #4
   58c7c:	mov	x0, x28
   58c80:	bl	bfe0 <mpfr_mpz_init@plt>
   58c84:	add	x0, x28, x20
   58c88:	bl	bfe0 <mpfr_mpz_init@plt>
   58c8c:	add	x0, x28, x27
   58c90:	bl	bfe0 <mpfr_mpz_init@plt>
   58c94:	adds	x21, x21, #0x1
   58c98:	add	x28, x28, #0x10
   58c9c:	b.cc	58c7c <mpfr_log_ui@@Base+0x328>  // b.lo, b.ul, b.last
   58ca0:	add	x1, x19, #0x88
   58ca4:	mov	w4, #0x1                   	// #1
   58ca8:	str	wzr, [sp, #-16]!
   58cac:	ldr	x5, [x19, #96]
   58cb0:	mov	x0, x24
   58cb4:	mov	x2, x22
   58cb8:	mov	x3, x23
   58cbc:	mov	x6, x25
   58cc0:	mov	x7, x26
   58cc4:	bl	59084 <mpfr_log_ui@@Base+0x730>
   58cc8:	add	sp, sp, #0x10
   58ccc:	sub	x0, x29, #0x38
   58cd0:	mov	x1, x23
   58cd4:	mov	w2, wzr
   58cd8:	bl	c250 <mpfr_set_z@plt>
   58cdc:	sub	x0, x29, #0x58
   58ce0:	mov	x1, x22
   58ce4:	mov	w2, wzr
   58ce8:	bl	c250 <mpfr_set_z@plt>
   58cec:	ldr	x2, [x19, #136]
   58cf0:	sub	x0, x29, #0x58
   58cf4:	sub	x1, x29, #0x58
   58cf8:	mov	w3, wzr
   58cfc:	bl	c2c0 <mpfr_mul_2ui@plt>
   58d00:	sub	x0, x29, #0x38
   58d04:	sub	x1, x29, #0x38
   58d08:	sub	x2, x29, #0x58
   58d0c:	mov	w3, wzr
   58d10:	bl	c610 <mpfr_div@plt>
   58d14:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58d18:	ldr	x1, [x0, #2624]
   58d1c:	add	x0, x0, #0xa40
   58d20:	blr	x1
   58d24:	ldr	x8, [x19, #128]
   58d28:	mov	w2, wzr
   58d2c:	add	x1, x8, x0
   58d30:	sub	x0, x29, #0x58
   58d34:	bl	c380 <mpfr_cache@plt>
   58d38:	ldr	x2, [x19, #72]
   58d3c:	sub	x0, x29, #0x58
   58d40:	sub	x1, x29, #0x58
   58d44:	mov	w3, wzr
   58d48:	bl	bab0 <mpfr_mul_ui@plt>
   58d4c:	sub	x0, x29, #0x38
   58d50:	sub	x1, x29, #0x38
   58d54:	sub	x2, x29, #0x58
   58d58:	mov	w3, wzr
   58d5c:	bl	c1e0 <mpfr_add@plt>
   58d60:	ldr	x8, [x19, #104]
   58d64:	cbz	x8, 58da4 <mpfr_log_ui@@Base+0x450>
   58d68:	ldr	x9, [x19, #120]
   58d6c:	mov	w8, #0x820                 	// #2080
   58d70:	sub	x22, x8, x9, lsl #5
   58d74:	mov	w8, #0x410                 	// #1040
   58d78:	sub	x21, x9, #0x41
   58d7c:	sub	x20, x8, x9, lsl #4
   58d80:	mov	x0, x24
   58d84:	bl	c1b0 <mpfr_mpz_clear@plt>
   58d88:	add	x0, x24, x20
   58d8c:	bl	c1b0 <mpfr_mpz_clear@plt>
   58d90:	add	x0, x24, x22
   58d94:	bl	c1b0 <mpfr_mpz_clear@plt>
   58d98:	adds	x21, x21, #0x1
   58d9c:	add	x24, x24, #0x10
   58da0:	b.cc	58d80 <mpfr_log_ui@@Base+0x42c>  // b.lo, b.ul, b.last
   58da4:	ldr	x27, [x19, #80]
   58da8:	ldr	w23, [x19, #92]
   58dac:	ldr	x21, [x19, #112]
   58db0:	cmn	x27, #0x3
   58db4:	b.eq	58e90 <mpfr_log_ui@@Base+0x53c>  // b.none
   58db8:	ldr	x22, [x19, #56]
   58dbc:	mov	x20, #0xfffffffffffffeff    	// #-257
   58dc0:	cmn	x27, #0x4
   58dc4:	movk	x20, #0x7fff, lsl #48
   58dc8:	mov	w24, #0x2                   	// #2
   58dcc:	b.eq	58eb8 <mpfr_log_ui@@Base+0x564>  // b.none
   58dd0:	ldr	x8, [x19, #40]
   58dd4:	ldur	x9, [x29, #-40]
   58dd8:	add	x10, x20, #0x105
   58ddc:	cmp	x9, x10
   58de0:	b.lt	58e20 <mpfr_log_ui@@Base+0x4cc>  // b.tstop
   58de4:	ldur	x9, [x29, #-56]
   58de8:	mvn	x8, x8
   58dec:	add	x2, x21, x8
   58df0:	ldr	x10, [x22]
   58df4:	sub	x8, x9, #0x1
   58df8:	add	x9, x9, #0x3e
   58dfc:	cmp	x8, #0x0
   58e00:	csel	x8, x9, x8, lt  // lt = tstop
   58e04:	asr	x8, x8, #6
   58e08:	add	x1, x8, #0x1
   58e0c:	ldr	x8, [x19, #48]
   58e10:	ldur	x0, [x29, #-32]
   58e14:	add	x3, x10, x8
   58e18:	bl	c370 <mpfr_round_p@plt>
   58e1c:	cbnz	w0, 58f28 <mpfr_log_ui@@Base+0x5d4>
   58e20:	ldr	x9, [x19, #8]
   58e24:	sub	x8, x20, x21
   58e28:	cmp	x9, x8
   58e2c:	b.gt	58f08 <mpfr_log_ui@@Base+0x5b4>
   58e30:	add	x21, x21, x9
   58e34:	cmp	x21, #0x0
   58e38:	cinc	x8, x21, lt  // lt = tstop
   58e3c:	cmp	x21, x20
   58e40:	b.gt	59080 <mpfr_log_ui@@Base+0x72c>
   58e44:	asr	x8, x8, #1
   58e48:	str	x8, [x19, #8]
   58e4c:	sub	x8, x21, #0x1
   58e50:	add	x9, x21, #0x3e
   58e54:	cmp	x8, #0x0
   58e58:	ldr	x1, [x19, #184]
   58e5c:	csel	x8, x9, x8, lt  // lt = tstop
   58e60:	asr	x8, x8, #6
   58e64:	add	x20, x8, #0x1
   58e68:	lsl	x2, x20, #4
   58e6c:	str	x2, [x19, #184]
   58e70:	cbz	x1, 58ed4 <mpfr_log_ui@@Base+0x580>
   58e74:	ldr	x0, [x19, #192]
   58e78:	bl	c200 <mpfr_reallocate_func@plt>
   58e7c:	b	58edc <mpfr_log_ui@@Base+0x588>
   58e80:	add	x0, x19, #0xb0
   58e84:	bl	be10 <mpfr_tmp_allocate@plt>
   58e88:	mov	x24, x0
   58e8c:	b	58c4c <mpfr_log_ui@@Base+0x2f8>
   58e90:	ldr	x22, [x19, #56]
   58e94:	mov	x20, #0xfffffffffffffeff    	// #-257
   58e98:	mov	x8, xzr
   58e9c:	movk	x20, #0x7fff, lsl #48
   58ea0:	mov	w24, #0x2                   	// #2
   58ea4:	ldur	x9, [x29, #-40]
   58ea8:	add	x10, x20, #0x105
   58eac:	cmp	x9, x10
   58eb0:	b.ge	58de4 <mpfr_log_ui@@Base+0x490>  // b.tcont
   58eb4:	b	58e20 <mpfr_log_ui@@Base+0x4cc>
   58eb8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   58ebc:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   58ec0:	mov	w1, #0xda                  	// #218
   58ec4:	add	x0, x0, #0x4eb
   58ec8:	add	x2, x2, #0x4f4
   58ecc:	bl	cb20 <mpfr_assert_fail@plt>
   58ed0:	b	58dd0 <mpfr_log_ui@@Base+0x47c>
   58ed4:	mov	x0, x2
   58ed8:	bl	ccd0 <mpfr_allocate_func@plt>
   58edc:	add	x8, x0, x20, lsl #3
   58ee0:	ldr	x20, [x19]
   58ee4:	mov	w9, #0x1                   	// #1
   58ee8:	str	x0, [x19, #192]
   58eec:	stur	x0, [x29, #-32]
   58ef0:	stur	w9, [x29, #-48]
   58ef4:	stur	x21, [x29, #-88]
   58ef8:	stp	x8, x21, [x29, #-64]
   58efc:	stur	w9, [x29, #-80]
   58f00:	mov	w23, #0x41                  	// #65
   58f04:	b	58b9c <mpfr_log_ui@@Base+0x248>
   58f08:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   58f0c:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   58f10:	mov	w1, #0xde                  	// #222
   58f14:	add	x0, x0, #0x4eb
   58f18:	add	x2, x2, #0x6c6
   58f1c:	bl	cb20 <mpfr_assert_fail@plt>
   58f20:	ldr	x9, [x19, #8]
   58f24:	b	58e30 <mpfr_log_ui@@Base+0x4dc>
   58f28:	ldur	w3, [x29, #-48]
   58f2c:	sub	x1, x29, #0x38
   58f30:	mov	x0, x22
   58f34:	mov	w2, w23
   58f38:	bl	c690 <mpfr_set4@plt>
   58f3c:	ldr	x1, [x19, #184]
   58f40:	mov	w21, w0
   58f44:	cbz	x1, 58f50 <mpfr_log_ui@@Base+0x5fc>
   58f48:	ldr	x0, [x19, #192]
   58f4c:	bl	cc00 <mpfr_free_func@plt>
   58f50:	ldr	x0, [x19, #176]
   58f54:	ldr	w20, [x19, #36]
   58f58:	ldp	x25, x24, [x19, #16]
   58f5c:	cbnz	x0, 59044 <mpfr_log_ui@@Base+0x6f0>
   58f60:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58f64:	ldr	x1, [x0, #2640]
   58f68:	add	x0, x0, #0xa50
   58f6c:	blr	x1
   58f70:	ldr	x8, [x19, #128]
   58f74:	str	w20, [x8, x0]
   58f78:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58f7c:	ldr	x1, [x0, #2576]
   58f80:	add	x0, x0, #0xa10
   58f84:	blr	x1
   58f88:	str	x24, [x8, x0]
   58f8c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58f90:	ldr	x1, [x0, #2608]
   58f94:	add	x0, x0, #0xa30
   58f98:	blr	x1
   58f9c:	str	x25, [x8, x0]
   58fa0:	ldr	x8, [x22, #16]
   58fa4:	cmp	x8, x25
   58fa8:	b.gt	5904c <mpfr_log_ui@@Base+0x6f8>
   58fac:	cmp	x8, x24
   58fb0:	b.lt	5904c <mpfr_log_ui@@Base+0x6f8>  // b.tstop
   58fb4:	cbz	w21, 59018 <mpfr_log_ui@@Base+0x6c4>
   58fb8:	orr	w8, w20, #0x8
   58fbc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58fc0:	ldr	x1, [x0, #2640]
   58fc4:	add	x0, x0, #0xa50
   58fc8:	blr	x1
   58fcc:	ldr	x9, [x19, #128]
   58fd0:	str	w8, [x9, x0]
   58fd4:	b	59018 <mpfr_log_ui@@Base+0x6c4>
   58fd8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   58fdc:	mov	w9, #0x1                   	// #1
   58fe0:	mov	w21, wzr
   58fe4:	str	x8, [x22, #16]
   58fe8:	str	w9, [x22, #8]
   58fec:	b	59018 <mpfr_log_ui@@Base+0x6c4>
   58ff0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   58ff4:	ldr	x1, [x0, #2624]
   58ff8:	add	x0, x0, #0xa40
   58ffc:	blr	x1
   59000:	mrs	x8, tpidr_el0
   59004:	add	x1, x8, x0
   59008:	mov	x0, x22
   5900c:	mov	w2, w23
   59010:	bl	c380 <mpfr_cache@plt>
   59014:	mov	w21, w0
   59018:	mov	w0, w21
   5901c:	mov	sp, x29
   59020:	ldp	x20, x19, [sp, #80]
   59024:	ldp	x22, x21, [sp, #64]
   59028:	ldp	x24, x23, [sp, #48]
   5902c:	ldp	x26, x25, [sp, #32]
   59030:	ldp	x28, x27, [sp, #16]
   59034:	ldp	x29, x30, [sp], #96
   59038:	ret
   5903c:	mov	x8, xzr
   59040:	b	58a48 <mpfr_log_ui@@Base+0xf4>
   59044:	bl	c400 <mpfr_tmp_free@plt>
   59048:	b	58f60 <mpfr_log_ui@@Base+0x60c>
   5904c:	mov	x0, x22
   59050:	mov	w1, w21
   59054:	mov	w2, w23
   59058:	bl	cb10 <mpfr_check_range@plt>
   5905c:	b	59014 <mpfr_log_ui@@Base+0x6c0>
   59060:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   59064:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2b84>
   59068:	add	x0, x0, #0x4eb
   5906c:	add	x2, x2, #0xe2d
   59070:	mov	w1, #0x95                  	// #149
   59074:	bl	cb20 <mpfr_assert_fail@plt>
   59078:	ldr	x8, [x22]
   5907c:	b	58a38 <mpfr_log_ui@@Base+0xe4>
   59080:	bl	c8e0 <mpfr_abort_prec_max@plt>
   59084:	sub	sp, sp, #0x80
   59088:	add	x8, x4, #0x1
   5908c:	stp	x26, x25, [sp, #64]
   59090:	stp	x24, x23, [sp, #80]
   59094:	stp	x22, x21, [sp, #96]
   59098:	stp	x20, x19, [sp, #112]
   5909c:	mov	x24, x7
   590a0:	mov	x26, x6
   590a4:	mov	x23, x4
   590a8:	mov	x22, x3
   590ac:	mov	x19, x2
   590b0:	mov	x25, x1
   590b4:	cmp	x8, x5
   590b8:	mov	x21, x0
   590bc:	stp	x29, x30, [sp, #32]
   590c0:	stp	x28, x27, [sp, #48]
   590c4:	add	x29, sp, #0x20
   590c8:	b.ne	59114 <mpfr_log_ui@@Base+0x7c0>  // b.any
   590cc:	cmp	x23, #0x1
   590d0:	cneg	x1, x26, ne  // ne = any
   590d4:	mov	x0, x21
   590d8:	bl	cb50 <__gmpz_set_si@plt>
   590dc:	mov	x0, x19
   590e0:	mov	x1, x23
   590e4:	str	x24, [x25]
   590e8:	bl	bd00 <__gmpz_set_ui@plt>
   590ec:	mov	x0, x22
   590f0:	mov	x1, x21
   590f4:	ldp	x20, x19, [sp, #112]
   590f8:	ldp	x22, x21, [sp, #96]
   590fc:	ldp	x24, x23, [sp, #80]
   59100:	ldp	x26, x25, [sp, #64]
   59104:	ldp	x28, x27, [sp, #48]
   59108:	ldp	x29, x30, [sp, #32]
   5910c:	add	sp, sp, #0x80
   59110:	b	bff0 <__gmpz_set@plt>
   59114:	mov	x27, x5
   59118:	lsr	x8, x5, #1
   5911c:	and	w9, w23, w27
   59120:	ldr	w20, [x29, #96]
   59124:	add	x8, x8, x23, lsr #1
   59128:	and	x9, x9, #0x1
   5912c:	add	x28, x8, x9
   59130:	mov	w8, #0x1                   	// #1
   59134:	mov	x0, x21
   59138:	mov	x1, x25
   5913c:	mov	x2, x19
   59140:	mov	x3, x22
   59144:	mov	x4, x23
   59148:	mov	x5, x28
   5914c:	mov	x6, x26
   59150:	mov	x7, x24
   59154:	str	w8, [sp]
   59158:	str	x25, [sp, #16]
   5915c:	bl	59084 <mpfr_log_ui@@Base+0x730>
   59160:	add	x23, x19, #0x10
   59164:	add	x25, x22, #0x10
   59168:	add	x0, x21, #0x10
   5916c:	sub	x1, x29, #0x8
   59170:	mov	x2, x23
   59174:	mov	x3, x25
   59178:	mov	x4, x28
   5917c:	mov	x5, x27
   59180:	mov	x6, x26
   59184:	mov	x7, x24
   59188:	str	w20, [sp]
   5918c:	str	x0, [sp, #8]
   59190:	bl	59084 <mpfr_log_ui@@Base+0x730>
   59194:	mov	x0, x25
   59198:	mov	x1, x25
   5919c:	mov	x2, x21
   591a0:	bl	c030 <__gmpz_mul@plt>
   591a4:	mov	x0, x25
   591a8:	mov	x1, x25
   591ac:	mov	x2, x19
   591b0:	bl	c030 <__gmpz_mul@plt>
   591b4:	mov	x0, x22
   591b8:	mov	x1, x22
   591bc:	mov	x2, x23
   591c0:	bl	c030 <__gmpz_mul@plt>
   591c4:	ldur	x24, [x29, #-8]
   591c8:	mov	x0, x22
   591cc:	mov	x1, x22
   591d0:	mov	x2, x24
   591d4:	bl	c230 <__gmpz_mul_2exp@plt>
   591d8:	mov	x0, x22
   591dc:	mov	x1, x22
   591e0:	mov	x2, x25
   591e4:	bl	c9a0 <__gmpz_add@plt>
   591e8:	cbz	w20, 591fc <mpfr_log_ui@@Base+0x8a8>
   591ec:	ldr	x2, [sp, #8]
   591f0:	mov	x0, x21
   591f4:	mov	x1, x21
   591f8:	bl	c030 <__gmpz_mul@plt>
   591fc:	ldr	x9, [sp, #16]
   59200:	mov	x0, x19
   59204:	mov	x1, x19
   59208:	mov	x2, x23
   5920c:	ldr	x8, [x9]
   59210:	add	x8, x8, x24
   59214:	str	x8, [x9]
   59218:	ldp	x20, x19, [sp, #112]
   5921c:	ldp	x22, x21, [sp, #96]
   59220:	ldp	x24, x23, [sp, #80]
   59224:	ldp	x26, x25, [sp, #64]
   59228:	ldp	x28, x27, [sp, #48]
   5922c:	ldp	x29, x30, [sp, #32]
   59230:	add	sp, sp, #0x80
   59234:	b	c030 <__gmpz_mul@plt>

0000000000059238 <mpfr_gamma_inc@@Base>:
   59238:	sub	sp, sp, #0x1c0
   5923c:	stp	x29, x30, [sp, #352]
   59240:	stp	x28, x27, [sp, #368]
   59244:	stp	x26, x25, [sp, #384]
   59248:	stp	x24, x23, [sp, #400]
   5924c:	stp	x22, x21, [sp, #416]
   59250:	stp	x20, x19, [sp, #432]
   59254:	ldr	x8, [x1, #16]
   59258:	mov	x24, #0x2                   	// #2
   5925c:	movk	x24, #0x8000, lsl #48
   59260:	add	x10, x24, #0x2
   59264:	mov	w26, w3
   59268:	mov	x21, x2
   5926c:	mov	x22, x1
   59270:	cmp	x8, x10
   59274:	mov	x19, x0
   59278:	add	x29, sp, #0x160
   5927c:	b.lt	59dec <mpfr_gamma_inc@@Base+0xbb4>  // b.tstop
   59280:	ldr	x9, [x21, #16]
   59284:	cmp	x9, x10
   59288:	b.lt	59df8 <mpfr_gamma_inc@@Base+0xbc0>  // b.tstop
   5928c:	ldr	w8, [x21, #8]
   59290:	mrs	x28, tpidr_el0
   59294:	tbnz	w8, #31, 59350 <mpfr_gamma_inc@@Base+0x118>
   59298:	mov	x0, x22
   5929c:	bl	c1a0 <mpfr_integer_p@plt>
   592a0:	str	x19, [sp, #64]
   592a4:	str	w26, [sp, #60]
   592a8:	cbz	w0, 592b4 <mpfr_gamma_inc@@Base+0x7c>
   592ac:	ldr	w8, [x22, #8]
   592b0:	tbnz	w8, #31, 59890 <mpfr_gamma_inc@@Base+0x658>
   592b4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   592b8:	ldr	x1, [x0, #2640]
   592bc:	add	x0, x0, #0xa50
   592c0:	blr	x1
   592c4:	ldr	w11, [x28, x0]
   592c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   592cc:	ldr	x1, [x0, #2576]
   592d0:	add	x0, x0, #0xa10
   592d4:	blr	x1
   592d8:	ldr	x12, [x28, x0]
   592dc:	mov	x8, x0
   592e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   592e4:	ldr	x1, [x0, #2608]
   592e8:	add	x0, x0, #0xa30
   592ec:	blr	x1
   592f0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   592f4:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   592f8:	ldr	x13, [x28, x0]
   592fc:	str	x9, [x28, x8]
   59300:	str	x10, [x28, x0]
   59304:	ldr	x8, [x19]
   59308:	sub	x9, x24, #0x110
   5930c:	cmp	x8, x9
   59310:	b.gt	59fe4 <mpfr_gamma_inc@@Base+0xdac>
   59314:	add	x9, x8, #0xc
   59318:	add	x10, x8, #0x4b
   5931c:	cmp	x9, #0x0
   59320:	csel	x9, x10, x9, lt  // lt = tstop
   59324:	asr	x9, x9, #6
   59328:	add	x20, x8, #0xd
   5932c:	cmp	x8, #0x1f4
   59330:	add	x25, x9, #0x1
   59334:	str	w11, [sp, #40]
   59338:	stp	x13, x12, [sp, #24]
   5933c:	b.lt	59374 <mpfr_gamma_inc@@Base+0x13c>  // b.tstop
   59340:	lsl	x23, x25, #4
   59344:	mov	x0, x23
   59348:	bl	ccd0 <mpfr_allocate_func@plt>
   5934c:	b	59380 <mpfr_gamma_inc@@Base+0x148>
   59350:	str	x24, [x19, #16]
   59354:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59358:	ldr	x1, [x0, #2640]
   5935c:	add	x0, x0, #0xa50
   59360:	blr	x1
   59364:	ldr	w8, [x28, x0]
   59368:	mov	w21, wzr
   5936c:	orr	w8, w8, #0x4
   59370:	b	59dc4 <mpfr_gamma_inc@@Base+0xb8c>
   59374:	add	x8, sp, #0x48
   59378:	mov	x23, xzr
   5937c:	add	x0, x8, #0x10
   59380:	stp	x23, x0, [sp, #72]
   59384:	stur	x0, [x29, #-16]
   59388:	mov	w9, #0x1                   	// #1
   5938c:	add	x8, x0, x25, lsl #3
   59390:	sub	x0, x29, #0x68
   59394:	mov	w1, #0x2                   	// #2
   59398:	stur	x20, [x29, #-72]
   5939c:	stur	w9, [x29, #-32]
   593a0:	stp	x8, x20, [x29, #-48]
   593a4:	mov	w25, #0x1                   	// #1
   593a8:	stur	w9, [x29, #-64]
   593ac:	bl	ca60 <mpfr_init2@plt>
   593b0:	cmp	w26, #0x0
   593b4:	mov	w8, #0x40                  	// #64
   593b8:	str	x8, [sp, #16]
   593bc:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   593c0:	cset	w8, eq  // eq = none
   593c4:	str	x8, [sp, #48]
   593c8:	ldr	x8, [x22, #16]
   593cc:	cmp	x8, #0x0
   593d0:	b.le	593e4 <mpfr_gamma_inc@@Base+0x1ac>
   593d4:	ldr	x9, [x22]
   593d8:	cmp	x8, x9
   593dc:	csel	x8, x8, x9, gt
   593e0:	b	59404 <mpfr_gamma_inc@@Base+0x1cc>
   593e4:	ldr	x9, [x22]
   593e8:	sub	x10, x25, x8
   593ec:	sub	x11, x24, x9
   593f0:	sub	x11, x11, #0x103
   593f4:	cmp	x10, x11
   593f8:	b.gt	597b0 <mpfr_gamma_inc@@Base+0x578>
   593fc:	sub	x8, x9, x8
   59400:	add	x8, x8, #0x1
   59404:	add	x1, x8, #0x1
   59408:	sub	x0, x29, #0x68
   5940c:	bl	bf20 <mpfr_set_prec@plt>
   59410:	ldr	x8, [x22, #16]
   59414:	sub	x0, x29, #0x48
   59418:	mov	w1, #0x1                   	// #1
   5941c:	mov	w3, #0x4                   	// #4
   59420:	cmp	x8, #0x1
   59424:	mov	x2, x22
   59428:	csinc	x26, x8, xzr, gt
   5942c:	bl	c2f0 <mpfr_ui_div@plt>
   59430:	ldur	w3, [x29, #-64]
   59434:	sub	x0, x29, #0x28
   59438:	sub	x1, x29, #0x48
   5943c:	mov	w2, #0x4                   	// #4
   59440:	bl	c690 <mpfr_set4@plt>
   59444:	ldr	w8, [x22, #8]
   59448:	tbz	w8, #31, 5946c <mpfr_gamma_inc@@Base+0x234>
   5944c:	sub	x0, x29, #0x88
   59450:	mov	w1, #0x20                  	// #32
   59454:	bl	ca60 <mpfr_init2@plt>
   59458:	sub	x0, x29, #0x88
   5945c:	sub	x1, x29, #0x28
   59460:	mov	w2, #0x2                   	// #2
   59464:	mov	w3, #0x1                   	// #1
   59468:	bl	c690 <mpfr_set4@plt>
   5946c:	mov	x25, #0xfffffffffffffff8    	// #-8
   59470:	mov	w27, #0x1                   	// #1
   59474:	b	59480 <mpfr_gamma_inc@@Base+0x248>
   59478:	add	x27, x27, #0x1
   5947c:	sub	x25, x25, #0x2
   59480:	sub	x0, x29, #0x48
   59484:	sub	x1, x29, #0x48
   59488:	mov	w3, #0x2                   	// #2
   5948c:	mov	x2, x21
   59490:	bl	bda0 <mpfr_mul@plt>
   59494:	sub	x0, x29, #0x68
   59498:	mov	w3, #0x1                   	// #1
   5949c:	mov	x1, x22
   594a0:	mov	x2, x27
   594a4:	bl	c270 <mpfr_add_ui@plt>
   594a8:	sub	x0, x29, #0x48
   594ac:	sub	x1, x29, #0x48
   594b0:	sub	x2, x29, #0x68
   594b4:	mov	w3, #0x4                   	// #4
   594b8:	bl	c610 <mpfr_div@plt>
   594bc:	sub	x0, x29, #0x28
   594c0:	sub	x1, x29, #0x28
   594c4:	sub	x2, x29, #0x48
   594c8:	mov	w3, #0x1                   	// #1
   594cc:	bl	c1e0 <mpfr_add@plt>
   594d0:	ldur	x8, [x29, #-24]
   594d4:	ldur	x9, [x29, #-56]
   594d8:	ldr	w10, [x22, #8]
   594dc:	cmp	x8, x23
   594e0:	csel	x24, x9, x8, eq  // eq = none
   594e4:	tbz	w10, #31, 59510 <mpfr_gamma_inc@@Base+0x2d8>
   594e8:	ldur	w8, [x29, #-64]
   594ec:	sub	x0, x29, #0x88
   594f0:	sub	x1, x29, #0x88
   594f4:	sub	x2, x29, #0x48
   594f8:	mov	w3, #0x2                   	// #2
   594fc:	cmp	w8, #0x1
   59500:	b.lt	5950c <mpfr_gamma_inc@@Base+0x2d4>  // b.tstop
   59504:	bl	c1e0 <mpfr_add@plt>
   59508:	b	59510 <mpfr_gamma_inc@@Base+0x2d8>
   5950c:	bl	bbc0 <mpfr_sub@plt>
   59510:	ldur	x9, [x29, #-56]
   59514:	ldur	w8, [x29, #-96]
   59518:	add	x9, x9, x20
   5951c:	cmp	x9, x24
   59520:	b.gt	5954c <mpfr_gamma_inc@@Base+0x314>
   59524:	cmp	w8, #0x0
   59528:	b.le	5954c <mpfr_gamma_inc@@Base+0x314>
   5952c:	ldr	x8, [x21, #16]
   59530:	ldur	x24, [x29, #-88]
   59534:	add	x8, x8, #0x1
   59538:	cmp	x8, x24
   5953c:	b.lt	59570 <mpfr_gamma_inc@@Base+0x338>  // b.tstop
   59540:	cmp	x24, x26
   59544:	b.le	59478 <mpfr_gamma_inc@@Base+0x240>
   59548:	b	59558 <mpfr_gamma_inc@@Base+0x320>
   5954c:	ldur	x24, [x29, #-88]
   59550:	cmp	x24, x26
   59554:	b.le	59478 <mpfr_gamma_inc@@Base+0x240>
   59558:	ldur	x8, [x29, #-104]
   5955c:	sub	x0, x29, #0x68
   59560:	add	x1, x8, #0x1
   59564:	bl	bf20 <mpfr_set_prec@plt>
   59568:	mov	x26, x24
   5956c:	b	59478 <mpfr_gamma_inc@@Base+0x240>
   59570:	ldr	w8, [x22, #8]
   59574:	tbnz	w8, #31, 59580 <mpfr_gamma_inc@@Base+0x348>
   59578:	mov	x26, xzr
   5957c:	b	59594 <mpfr_gamma_inc@@Base+0x35c>
   59580:	ldur	x8, [x29, #-120]
   59584:	ldur	x9, [x29, #-24]
   59588:	sub	x0, x29, #0x88
   5958c:	sub	x26, x8, x9
   59590:	bl	c0b0 <mpfr_clear@plt>
   59594:	sub	x0, x29, #0x48
   59598:	mov	w2, #0x1                   	// #1
   5959c:	mov	x1, x21
   595a0:	bl	c740 <mpfr_exp@plt>
   595a4:	sub	x0, x29, #0x28
   595a8:	sub	x1, x29, #0x28
   595ac:	sub	x2, x29, #0x48
   595b0:	mov	w3, #0x1                   	// #1
   595b4:	bl	c610 <mpfr_div@plt>
   595b8:	sub	x0, x29, #0x48
   595bc:	mov	w3, #0x1                   	// #1
   595c0:	mov	x1, x21
   595c4:	mov	x2, x22
   595c8:	bl	bde0 <mpfr_pow@plt>
   595cc:	sub	x0, x29, #0x28
   595d0:	sub	x1, x29, #0x28
   595d4:	sub	x2, x29, #0x48
   595d8:	mov	w3, #0x1                   	// #1
   595dc:	bl	bda0 <mpfr_mul@plt>
   595e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   595e4:	ldr	x1, [x0, #2640]
   595e8:	add	x0, x0, #0xa50
   595ec:	blr	x1
   595f0:	mov	x27, x0
   595f4:	str	wzr, [x28, x0]
   595f8:	sub	x0, x29, #0x48
   595fc:	mov	w2, #0x1                   	// #1
   59600:	mov	x1, x22
   59604:	bl	c7a0 <mpfr_gamma@plt>
   59608:	ldrb	w8, [x28, x27]
   5960c:	tbnz	w8, #1, 59758 <mpfr_gamma_inc@@Base+0x520>
   59610:	ldur	x27, [x29, #-56]
   59614:	ldur	x8, [x29, #-24]
   59618:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5961c:	ldr	x1, [x0, #2576]
   59620:	add	x0, x0, #0xa10
   59624:	blr	x1
   59628:	ldr	x9, [x28, x0]
   5962c:	cmp	x8, x23
   59630:	sub	x0, x29, #0x28
   59634:	sub	x1, x29, #0x48
   59638:	sub	x2, x29, #0x28
   5963c:	mov	w3, #0x1                   	// #1
   59640:	csel	x19, x9, x8, eq  // eq = none
   59644:	bl	bbc0 <mpfr_sub@plt>
   59648:	ldur	x8, [x29, #-24]
   5964c:	neg	x9, x25
   59650:	clz	x9, x9
   59654:	mov	w10, #0x41                  	// #65
   59658:	cmp	x8, x23
   5965c:	sub	x10, x10, x9
   59660:	csel	x9, x27, x8, eq  // eq = none
   59664:	cmp	x25, #0x0
   59668:	csinc	x10, x10, xzr, ne  // ne = any
   5966c:	add	x10, x10, x26
   59670:	add	x10, x10, x19
   59674:	cmp	x27, x10
   59678:	b.ne	59688 <mpfr_gamma_inc@@Base+0x450>  // b.any
   5967c:	sub	x9, x27, x9
   59680:	add	x9, x9, #0x2
   59684:	b	59698 <mpfr_gamma_inc@@Base+0x460>
   59688:	csel	x10, x27, x10, gt
   5968c:	subs	x9, x10, x9
   59690:	mov	w10, #0x2                   	// #2
   59694:	csinc	x9, x10, x9, le
   59698:	ldr	x19, [sp, #64]
   5969c:	ldr	w26, [sp, #60]
   596a0:	mov	x24, #0x2                   	// #2
   596a4:	movk	x24, #0x8000, lsl #48
   596a8:	add	x10, x24, #0x2
   596ac:	cmp	x8, x10
   596b0:	b.lt	596ec <mpfr_gamma_inc@@Base+0x4b4>  // b.tstop
   596b4:	ldur	x8, [x29, #-40]
   596b8:	sub	x2, x20, x9
   596bc:	ldr	x9, [x19]
   596c0:	ldur	x0, [x29, #-16]
   596c4:	sub	x10, x8, #0x1
   596c8:	add	x8, x8, #0x3e
   596cc:	cmp	x10, #0x0
   596d0:	csel	x8, x8, x10, lt  // lt = tstop
   596d4:	asr	x8, x8, #6
   596d8:	add	x1, x8, #0x1
   596dc:	ldr	x8, [sp, #48]
   596e0:	add	x3, x9, x8
   596e4:	bl	c370 <mpfr_round_p@plt>
   596e8:	cbnz	w0, 597f4 <mpfr_gamma_inc@@Base+0x5bc>
   596ec:	ldr	x9, [sp, #16]
   596f0:	sub	x8, x24, x20
   596f4:	sub	x8, x8, #0x103
   596f8:	cmp	x9, x8
   596fc:	mov	x8, x9
   59700:	b.gt	597d4 <mpfr_gamma_inc@@Base+0x59c>
   59704:	add	x20, x20, x8
   59708:	sub	x9, x24, #0x103
   5970c:	cmp	x20, #0x0
   59710:	cinc	x8, x20, lt  // lt = tstop
   59714:	cmp	x20, x9
   59718:	b.gt	59fe4 <mpfr_gamma_inc@@Base+0xdac>
   5971c:	asr	x8, x8, #1
   59720:	str	x8, [sp, #16]
   59724:	sub	x8, x20, #0x1
   59728:	add	x9, x20, #0x3e
   5972c:	cmp	x8, #0x0
   59730:	ldr	x1, [sp, #72]
   59734:	csel	x8, x9, x8, lt  // lt = tstop
   59738:	asr	x8, x8, #6
   5973c:	add	x25, x8, #0x1
   59740:	lsl	x2, x25, #4
   59744:	str	x2, [sp, #72]
   59748:	cbz	x1, 59774 <mpfr_gamma_inc@@Base+0x53c>
   5974c:	ldr	x0, [sp, #80]
   59750:	bl	c200 <mpfr_reallocate_func@plt>
   59754:	b	5977c <mpfr_gamma_inc@@Base+0x544>
   59758:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5975c:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   59760:	mov	w1, #0x122                 	// #290
   59764:	add	x0, x0, #0x500
   59768:	add	x2, x2, #0x56f
   5976c:	bl	cb20 <mpfr_assert_fail@plt>
   59770:	b	59610 <mpfr_gamma_inc@@Base+0x3d8>
   59774:	mov	x0, x2
   59778:	bl	ccd0 <mpfr_allocate_func@plt>
   5977c:	mov	w9, #0x1                   	// #1
   59780:	add	x8, x0, x25, lsl #3
   59784:	str	x0, [sp, #80]
   59788:	stur	x0, [x29, #-16]
   5978c:	stur	w9, [x29, #-32]
   59790:	stur	x20, [x29, #-72]
   59794:	stp	x8, x20, [x29, #-48]
   59798:	mov	w25, #0x1                   	// #1
   5979c:	stur	w9, [x29, #-64]
   597a0:	ldr	x8, [x22, #16]
   597a4:	cmp	x8, #0x0
   597a8:	b.gt	593d4 <mpfr_gamma_inc@@Base+0x19c>
   597ac:	b	593e4 <mpfr_gamma_inc@@Base+0x1ac>
   597b0:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   597b4:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   597b8:	mov	w1, #0xd2                  	// #210
   597bc:	add	x0, x0, #0x500
   597c0:	add	x2, x2, #0x50c
   597c4:	bl	cb20 <mpfr_assert_fail@plt>
   597c8:	ldr	x9, [x22]
   597cc:	ldr	x8, [x22, #16]
   597d0:	b	593fc <mpfr_gamma_inc@@Base+0x1c4>
   597d4:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   597d8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   597dc:	mov	w1, #0x148                 	// #328
   597e0:	add	x0, x0, #0x500
   597e4:	add	x2, x2, #0x6c6
   597e8:	bl	cb20 <mpfr_assert_fail@plt>
   597ec:	ldr	x8, [sp, #16]
   597f0:	b	59704 <mpfr_gamma_inc@@Base+0x4cc>
   597f4:	sub	x0, x29, #0x68
   597f8:	bl	c0b0 <mpfr_clear@plt>
   597fc:	ldur	w3, [x29, #-32]
   59800:	sub	x1, x29, #0x28
   59804:	mov	x0, x19
   59808:	mov	w2, w26
   5980c:	bl	c690 <mpfr_set4@plt>
   59810:	ldr	x1, [sp, #72]
   59814:	mov	w21, w0
   59818:	cbz	x1, 59824 <mpfr_gamma_inc@@Base+0x5ec>
   5981c:	ldr	x0, [sp, #80]
   59820:	bl	cc00 <mpfr_free_func@plt>
   59824:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59828:	ldr	x1, [x0, #2640]
   5982c:	add	x0, x0, #0xa50
   59830:	blr	x1
   59834:	ldr	w9, [sp, #40]
   59838:	str	w9, [x28, x0]
   5983c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59840:	ldr	x1, [x0, #2576]
   59844:	add	x0, x0, #0xa10
   59848:	blr	x1
   5984c:	ldr	x10, [sp, #32]
   59850:	str	x10, [x28, x0]
   59854:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59858:	ldr	x1, [x0, #2608]
   5985c:	add	x0, x0, #0xa30
   59860:	blr	x1
   59864:	ldr	x11, [sp, #24]
   59868:	str	x11, [x28, x0]
   5986c:	ldr	x8, [x19, #16]
   59870:	cmp	x8, x11
   59874:	b.gt	59880 <mpfr_gamma_inc@@Base+0x648>
   59878:	cmp	x8, x10
   5987c:	b.ge	59dac <mpfr_gamma_inc@@Base+0xb74>  // b.tcont
   59880:	mov	x0, x19
   59884:	mov	w1, w21
   59888:	mov	w2, w26
   5988c:	b	59f14 <mpfr_gamma_inc@@Base+0xcdc>
   59890:	ldr	x8, [x22]
   59894:	mov	w9, #0x1                   	// #1
   59898:	stur	w9, [x29, #-96]
   5989c:	stur	x8, [x29, #-104]
   598a0:	ldr	q0, [x22, #16]
   598a4:	stur	q0, [x29, #-88]
   598a8:	ldr	x9, [x19]
   598ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   598b0:	ldr	x1, [x0, #2640]
   598b4:	add	x0, x0, #0xa50
   598b8:	blr	x1
   598bc:	ldr	w12, [x28, x0]
   598c0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   598c4:	ldr	x1, [x0, #2576]
   598c8:	add	x0, x0, #0xa10
   598cc:	blr	x1
   598d0:	ldr	x13, [x28, x0]
   598d4:	mov	x8, x0
   598d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   598dc:	ldr	x1, [x0, #2608]
   598e0:	add	x0, x0, #0xa30
   598e4:	blr	x1
   598e8:	ldr	x14, [x28, x0]
   598ec:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   598f0:	str	x10, [x28, x8]
   598f4:	sub	x8, x24, #0x10d
   598f8:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   598fc:	cmp	x9, x8
   59900:	str	x11, [x28, x0]
   59904:	b.gt	59fe4 <mpfr_gamma_inc@@Base+0xdac>
   59908:	add	x8, x9, #0x9
   5990c:	add	x10, x9, #0x48
   59910:	cmp	x8, #0x0
   59914:	csel	x8, x10, x8, lt  // lt = tstop
   59918:	asr	x8, x8, #6
   5991c:	add	x24, x9, #0xa
   59920:	cmp	x9, #0x1f7
   59924:	add	x20, x8, #0x1
   59928:	str	w12, [sp, #24]
   5992c:	stp	x14, x13, [sp, #8]
   59930:	b.lt	59944 <mpfr_gamma_inc@@Base+0x70c>  // b.tstop
   59934:	lsl	x23, x20, #4
   59938:	mov	x0, x23
   5993c:	bl	ccd0 <mpfr_allocate_func@plt>
   59940:	b	59950 <mpfr_gamma_inc@@Base+0x718>
   59944:	add	x8, sp, #0x48
   59948:	mov	x23, xzr
   5994c:	add	x0, x8, #0x10
   59950:	add	x8, x0, x20, lsl #3
   59954:	cmp	w26, #0x0
   59958:	stp	x8, x24, [x29, #-48]
   5995c:	cset	w8, eq  // eq = none
   59960:	mov	w9, #0x1                   	// #1
   59964:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   59968:	str	x8, [sp, #32]
   5996c:	mov	w8, #0x40                  	// #64
   59970:	stp	x23, x0, [sp, #72]
   59974:	stur	x0, [x29, #-16]
   59978:	stur	w9, [x29, #-32]
   5997c:	stur	x24, [x29, #-72]
   59980:	str	x8, [sp, #40]
   59984:	stur	w9, [x29, #-64]
   59988:	ldr	x8, [x22, #16]
   5998c:	sub	x0, x29, #0x48
   59990:	mov	w1, #0x1                   	// #1
   59994:	mov	x2, x21
   59998:	add	x8, x8, #0x3
   5999c:	cmp	x8, x24
   599a0:	mov	w3, wzr
   599a4:	csel	x24, x8, x24, gt
   599a8:	bl	c2f0 <mpfr_ui_div@plt>
   599ac:	ldur	w3, [x29, #-64]
   599b0:	sub	x0, x29, #0x28
   599b4:	sub	x1, x29, #0x48
   599b8:	mov	w2, wzr
   599bc:	bl	c690 <mpfr_set4@plt>
   599c0:	ldur	x23, [x29, #-24]
   599c4:	mov	w26, #0x1                   	// #1
   599c8:	mov	x20, x23
   599cc:	mov	x27, x23
   599d0:	sub	x0, x29, #0x68
   599d4:	mov	x1, x26
   599d8:	mov	x2, xzr
   599dc:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   599e0:	cmp	w0, #0x1
   599e4:	b.lt	59a68 <mpfr_gamma_inc@@Base+0x830>  // b.tstop
   599e8:	sub	x0, x29, #0x48
   599ec:	sub	x1, x29, #0x48
   599f0:	mov	x2, x26
   599f4:	mov	w3, wzr
   599f8:	bl	bab0 <mpfr_mul_ui@plt>
   599fc:	sub	x0, x29, #0x48
   59a00:	sub	x1, x29, #0x48
   59a04:	mov	w2, wzr
   59a08:	bl	bdc0 <mpfr_neg@plt>
   59a0c:	sub	x0, x29, #0x48
   59a10:	sub	x1, x29, #0x48
   59a14:	mov	x2, x21
   59a18:	mov	w3, wzr
   59a1c:	bl	c610 <mpfr_div@plt>
   59a20:	ldur	x8, [x29, #-56]
   59a24:	cmp	x8, x25
   59a28:	b.eq	59a68 <mpfr_gamma_inc@@Base+0x830>  // b.none
   59a2c:	cmp	x8, x23
   59a30:	sub	x0, x29, #0x28
   59a34:	sub	x1, x29, #0x28
   59a38:	sub	x2, x29, #0x48
   59a3c:	mov	w3, wzr
   59a40:	csel	x23, x8, x23, gt
   59a44:	bl	c1e0 <mpfr_add@plt>
   59a48:	ldur	x8, [x29, #-24]
   59a4c:	ldur	x9, [x29, #-56]
   59a50:	add	x26, x26, #0x1
   59a54:	cmp	x8, x25
   59a58:	csel	x20, x9, x8, eq  // eq = none
   59a5c:	cmp	x20, x27
   59a60:	csel	x27, x20, x27, gt
   59a64:	b	599d0 <mpfr_gamma_inc@@Base+0x798>
   59a68:	subs	x19, x26, #0x1
   59a6c:	str	x24, [sp, #48]
   59a70:	b.eq	59ce0 <mpfr_gamma_inc@@Base+0xaa8>  // b.none
   59a74:	cbz	x26, 59ce8 <mpfr_gamma_inc@@Base+0xab0>
   59a78:	clz	x8, x19
   59a7c:	mov	w9, #0x40                  	// #64
   59a80:	sub	x8, x9, x8
   59a84:	ldr	x9, [x21]
   59a88:	mov	w12, #0x1                   	// #1
   59a8c:	add	x10, x8, x27
   59a90:	bfi	x12, x8, #1, #63
   59a94:	stur	x9, [x29, #-136]
   59a98:	ldr	w9, [x21, #8]
   59a9c:	sub	x11, x10, #0x1
   59aa0:	sub	x0, x29, #0x48
   59aa4:	sub	x1, x29, #0x88
   59aa8:	neg	w8, w9
   59aac:	stur	w8, [x29, #-128]
   59ab0:	ldr	q0, [x21, #16]
   59ab4:	add	x8, x12, x23
   59ab8:	cmp	x11, x8
   59abc:	mov	w2, wzr
   59ac0:	csinc	x23, x10, x8, ge  // ge = tcont
   59ac4:	stur	q0, [x29, #-120]
   59ac8:	bl	c740 <mpfr_exp@plt>
   59acc:	sub	x0, x29, #0x28
   59ad0:	sub	x1, x29, #0x28
   59ad4:	sub	x2, x29, #0x48
   59ad8:	mov	w3, wzr
   59adc:	bl	bda0 <mpfr_mul@plt>
   59ae0:	ldur	x27, [x29, #-24]
   59ae4:	ldur	x26, [x29, #-56]
   59ae8:	sub	x0, x29, #0x48
   59aec:	sub	x1, x29, #0x88
   59af0:	mov	w2, wzr
   59af4:	bl	c9c0 <mpfr_eint@plt>
   59af8:	sub	x0, x29, #0x48
   59afc:	sub	x1, x29, #0x48
   59b00:	mov	w2, wzr
   59b04:	bl	bdc0 <mpfr_neg@plt>
   59b08:	ldur	x19, [x29, #-24]
   59b0c:	ldur	x24, [x29, #-56]
   59b10:	sub	x0, x29, #0x28
   59b14:	sub	x1, x29, #0x48
   59b18:	sub	x2, x29, #0x28
   59b1c:	mov	w3, wzr
   59b20:	bl	bbc0 <mpfr_sub@plt>
   59b24:	ldur	x8, [x29, #-24]
   59b28:	cmp	x8, x25
   59b2c:	b.ne	59ba0 <mpfr_gamma_inc@@Base+0x968>  // b.any
   59b30:	ldp	x20, x23, [sp, #40]
   59b34:	mov	x19, #0x2                   	// #2
   59b38:	movk	x19, #0x8000, lsl #48
   59b3c:	sub	x8, x19, x23
   59b40:	sub	x8, x8, #0x103
   59b44:	cmp	x20, x8
   59b48:	b.gt	59d04 <mpfr_gamma_inc@@Base+0xacc>
   59b4c:	add	x24, x23, x20
   59b50:	sub	x9, x19, #0x103
   59b54:	cmp	x24, #0x0
   59b58:	cinc	x8, x24, lt  // lt = tstop
   59b5c:	cmp	x24, x9
   59b60:	b.gt	59fe4 <mpfr_gamma_inc@@Base+0xdac>
   59b64:	asr	x8, x8, #1
   59b68:	str	x8, [sp, #40]
   59b6c:	sub	x8, x24, #0x1
   59b70:	add	x9, x24, #0x3e
   59b74:	cmp	x8, #0x0
   59b78:	ldr	x1, [sp, #72]
   59b7c:	csel	x8, x9, x8, lt  // lt = tstop
   59b80:	asr	x8, x8, #6
   59b84:	add	x20, x8, #0x1
   59b88:	lsl	x2, x20, #4
   59b8c:	str	x2, [sp, #72]
   59b90:	cbz	x1, 59cb8 <mpfr_gamma_inc@@Base+0xa80>
   59b94:	ldr	x0, [sp, #80]
   59b98:	bl	c200 <mpfr_reallocate_func@plt>
   59b9c:	b	59cc0 <mpfr_gamma_inc@@Base+0xa88>
   59ba0:	cmp	x27, x25
   59ba4:	csel	x10, x26, xzr, eq  // eq = none
   59ba8:	sub	x9, x23, x20
   59bac:	cmp	x19, x25
   59bb0:	add	x10, x10, x20
   59bb4:	add	x11, x9, #0x2
   59bb8:	csel	x10, x10, x19, eq  // eq = none
   59bbc:	cmp	x9, #0x1
   59bc0:	mov	w20, #0x4                   	// #4
   59bc4:	csel	x9, x11, x20, gt
   59bc8:	add	x9, x10, x9
   59bcc:	sub	x10, x24, #0x1
   59bd0:	cmp	x9, x10
   59bd4:	csinc	x9, x24, x9, lt  // lt = tstop
   59bd8:	sub	x0, x29, #0x48
   59bdc:	sub	x1, x29, #0x68
   59be0:	mov	w2, wzr
   59be4:	sub	x19, x9, x8
   59be8:	bl	c7a0 <mpfr_gamma@plt>
   59bec:	sub	x0, x29, #0x48
   59bf0:	sub	x1, x29, #0x48
   59bf4:	sub	x2, x29, #0x68
   59bf8:	mov	w3, wzr
   59bfc:	bl	bda0 <mpfr_mul@plt>
   59c00:	sub	x0, x29, #0x28
   59c04:	sub	x1, x29, #0x28
   59c08:	sub	x2, x29, #0x48
   59c0c:	mov	w3, wzr
   59c10:	bl	c610 <mpfr_div@plt>
   59c14:	cmp	x19, #0x1
   59c18:	sub	x0, x29, #0x48
   59c1c:	mov	x1, #0xffffffffffffffff    	// #-1
   59c20:	mov	x2, xzr
   59c24:	mov	w3, wzr
   59c28:	csinc	x20, x20, x19, le
   59c2c:	bl	bae0 <mpfr_set_si_2exp@plt>
   59c30:	sub	x0, x29, #0x48
   59c34:	sub	x1, x29, #0x48
   59c38:	sub	x2, x29, #0x68
   59c3c:	mov	w3, wzr
   59c40:	bl	bde0 <mpfr_pow@plt>
   59c44:	ldur	w8, [x29, #-64]
   59c48:	tbz	w8, #31, 59c5c <mpfr_gamma_inc@@Base+0xa24>
   59c4c:	sub	x0, x29, #0x28
   59c50:	sub	x1, x29, #0x28
   59c54:	mov	w2, wzr
   59c58:	bl	bdc0 <mpfr_neg@plt>
   59c5c:	ldur	x8, [x29, #-24]
   59c60:	mov	x9, #0x2                   	// #2
   59c64:	movk	x9, #0x8000, lsl #48
   59c68:	add	x9, x9, #0x2
   59c6c:	cmp	x8, x9
   59c70:	b.lt	59b30 <mpfr_gamma_inc@@Base+0x8f8>  // b.tstop
   59c74:	ldur	x8, [x29, #-40]
   59c78:	ldr	x9, [sp, #48]
   59c7c:	ldur	x0, [x29, #-16]
   59c80:	sub	x10, x8, #0x1
   59c84:	sub	x2, x9, x20
   59c88:	ldr	x9, [sp, #64]
   59c8c:	add	x8, x8, #0x3e
   59c90:	cmp	x10, #0x0
   59c94:	csel	x8, x8, x10, lt  // lt = tstop
   59c98:	asr	x8, x8, #6
   59c9c:	ldr	x9, [x9]
   59ca0:	add	x1, x8, #0x1
   59ca4:	ldr	x8, [sp, #32]
   59ca8:	add	x3, x9, x8
   59cac:	bl	c370 <mpfr_round_p@plt>
   59cb0:	cbnz	w0, 59d20 <mpfr_gamma_inc@@Base+0xae8>
   59cb4:	b	59b30 <mpfr_gamma_inc@@Base+0x8f8>
   59cb8:	mov	x0, x2
   59cbc:	bl	ccd0 <mpfr_allocate_func@plt>
   59cc0:	mov	w9, #0x1                   	// #1
   59cc4:	add	x8, x0, x20, lsl #3
   59cc8:	str	x0, [sp, #80]
   59ccc:	stur	x0, [x29, #-16]
   59cd0:	stur	w9, [x29, #-32]
   59cd4:	stur	x24, [x29, #-72]
   59cd8:	stp	x8, x24, [x29, #-48]
   59cdc:	b	59984 <mpfr_gamma_inc@@Base+0x74c>
   59ce0:	mov	x8, xzr
   59ce4:	b	59a84 <mpfr_gamma_inc@@Base+0x84c>
   59ce8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   59cec:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   59cf0:	mov	w1, #0x1a2                 	// #418
   59cf4:	add	x0, x0, #0x500
   59cf8:	add	x2, x2, #0x599
   59cfc:	bl	cb20 <mpfr_assert_fail@plt>
   59d00:	b	59a78 <mpfr_gamma_inc@@Base+0x840>
   59d04:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   59d08:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   59d0c:	mov	w1, #0x1ee                 	// #494
   59d10:	add	x0, x0, #0x500
   59d14:	add	x2, x2, #0x6c6
   59d18:	bl	cb20 <mpfr_assert_fail@plt>
   59d1c:	b	59b4c <mpfr_gamma_inc@@Base+0x914>
   59d20:	ldr	x19, [sp, #64]
   59d24:	ldr	w20, [sp, #60]
   59d28:	ldur	w3, [x29, #-32]
   59d2c:	sub	x1, x29, #0x28
   59d30:	mov	x0, x19
   59d34:	mov	w2, w20
   59d38:	bl	c690 <mpfr_set4@plt>
   59d3c:	ldr	x1, [sp, #72]
   59d40:	mov	w21, w0
   59d44:	cbz	x1, 59d50 <mpfr_gamma_inc@@Base+0xb18>
   59d48:	ldr	x0, [sp, #80]
   59d4c:	bl	cc00 <mpfr_free_func@plt>
   59d50:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59d54:	ldr	x1, [x0, #2640]
   59d58:	add	x0, x0, #0xa50
   59d5c:	blr	x1
   59d60:	ldr	w9, [sp, #24]
   59d64:	str	w9, [x28, x0]
   59d68:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59d6c:	ldr	x1, [x0, #2576]
   59d70:	add	x0, x0, #0xa10
   59d74:	blr	x1
   59d78:	ldr	x10, [sp, #16]
   59d7c:	str	x10, [x28, x0]
   59d80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59d84:	ldr	x1, [x0, #2608]
   59d88:	add	x0, x0, #0xa30
   59d8c:	blr	x1
   59d90:	ldr	x11, [sp, #8]
   59d94:	str	x11, [x28, x0]
   59d98:	ldr	x8, [x19, #16]
   59d9c:	cmp	x8, x11
   59da0:	b.gt	59f08 <mpfr_gamma_inc@@Base+0xcd0>
   59da4:	cmp	x8, x10
   59da8:	b.lt	59f08 <mpfr_gamma_inc@@Base+0xcd0>  // b.tstop
   59dac:	cbz	w21, 59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59db0:	orr	w8, w9, #0x8
   59db4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59db8:	ldr	x1, [x0, #2640]
   59dbc:	add	x0, x0, #0xa50
   59dc0:	blr	x1
   59dc4:	str	w8, [x28, x0]
   59dc8:	mov	w0, w21
   59dcc:	ldp	x20, x19, [sp, #432]
   59dd0:	ldp	x22, x21, [sp, #416]
   59dd4:	ldp	x24, x23, [sp, #400]
   59dd8:	ldp	x26, x25, [sp, #384]
   59ddc:	ldp	x28, x27, [sp, #368]
   59de0:	ldp	x29, x30, [sp, #352]
   59de4:	add	sp, sp, #0x1c0
   59de8:	ret
   59dec:	cmp	x8, x24
   59df0:	b.eq	59e00 <mpfr_gamma_inc@@Base+0xbc8>  // b.none
   59df4:	ldr	x9, [x21, #16]
   59df8:	cmp	x9, x24
   59dfc:	b.ne	59e2c <mpfr_gamma_inc@@Base+0xbf4>  // b.any
   59e00:	str	x24, [x19, #16]
   59e04:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   59e08:	ldr	x1, [x0, #2640]
   59e0c:	add	x0, x0, #0xa50
   59e10:	blr	x1
   59e14:	mrs	x8, tpidr_el0
   59e18:	ldr	w9, [x8, x0]
   59e1c:	mov	w21, wzr
   59e20:	orr	w9, w9, #0x4
   59e24:	str	w9, [x8, x0]
   59e28:	b	59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59e2c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   59e30:	cmp	x8, x10
   59e34:	b.eq	59e94 <mpfr_gamma_inc@@Base+0xc5c>  // b.none
   59e38:	cmp	x9, x10
   59e3c:	b.eq	59e94 <mpfr_gamma_inc@@Base+0xc5c>  // b.none
   59e40:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   59e44:	cmp	x8, x10
   59e48:	b.eq	59e54 <mpfr_gamma_inc@@Base+0xc1c>  // b.none
   59e4c:	cmp	x9, x10
   59e50:	b.ne	5928c <mpfr_gamma_inc@@Base+0x54>  // b.any
   59e54:	mov	x20, #0x2                   	// #2
   59e58:	movk	x20, #0x8000, lsl #48
   59e5c:	cmp	x8, x10
   59e60:	b.ne	59e80 <mpfr_gamma_inc@@Base+0xc48>  // b.any
   59e64:	mov	x0, x21
   59e68:	bl	c700 <mpfr_sgn@plt>
   59e6c:	tbnz	w0, #31, 59f40 <mpfr_gamma_inc@@Base+0xd08>
   59e70:	ldr	x8, [x21, #16]
   59e74:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   59e78:	cmp	x8, x9
   59e7c:	b.ne	59f80 <mpfr_gamma_inc@@Base+0xd48>  // b.any
   59e80:	mov	x0, x19
   59e84:	mov	x1, x22
   59e88:	mov	w2, w26
   59e8c:	bl	c7a0 <mpfr_gamma@plt>
   59e90:	b	59f18 <mpfr_gamma_inc@@Base+0xce0>
   59e94:	cmp	x8, x10
   59e98:	b.ne	59ee4 <mpfr_gamma_inc@@Base+0xcac>  // b.any
   59e9c:	ldr	w8, [x22, #8]
   59ea0:	mov	x23, #0x2                   	// #2
   59ea4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   59ea8:	movk	x23, #0x8000, lsl #48
   59eac:	mov	x20, x19
   59eb0:	cmp	x9, x10
   59eb4:	b.ne	59f20 <mpfr_gamma_inc@@Base+0xce8>  // b.any
   59eb8:	ldr	w9, [x21, #8]
   59ebc:	cmp	w8, #0x0
   59ec0:	cset	w8, gt
   59ec4:	cmp	w9, #0x0
   59ec8:	cset	w10, gt
   59ecc:	and	w8, w8, w10
   59ed0:	tbnz	w8, #0, 59f78 <mpfr_gamma_inc@@Base+0xd40>
   59ed4:	tbnz	w9, #31, 59f78 <mpfr_gamma_inc@@Base+0xd40>
   59ed8:	mov	w21, wzr
   59edc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   59ee0:	b	59f30 <mpfr_gamma_inc@@Base+0xcf8>
   59ee4:	ldr	w8, [x21, #8]
   59ee8:	cmp	w8, #0x1
   59eec:	b.lt	59e00 <mpfr_gamma_inc@@Base+0xbc8>  // b.tstop
   59ef0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   59ef4:	mov	w9, #0x1                   	// #1
   59ef8:	mov	w21, wzr
   59efc:	str	x8, [x19, #16]
   59f00:	str	w9, [x19, #8]
   59f04:	b	59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59f08:	mov	x0, x19
   59f0c:	mov	w1, w21
   59f10:	mov	w2, w20
   59f14:	bl	cb10 <mpfr_check_range@plt>
   59f18:	mov	w21, w0
   59f1c:	b	59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59f20:	cmp	w8, #0x1
   59f24:	b.lt	59f48 <mpfr_gamma_inc@@Base+0xd10>  // b.tstop
   59f28:	mov	w21, wzr
   59f2c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   59f30:	mov	w9, #0x1                   	// #1
   59f34:	str	x8, [x20, #16]
   59f38:	str	w9, [x20, #8]
   59f3c:	b	59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59f40:	str	x20, [x19, #16]
   59f44:	b	59e04 <mpfr_gamma_inc@@Base+0xbcc>
   59f48:	mov	x0, x21
   59f4c:	bl	c700 <mpfr_sgn@plt>
   59f50:	tbnz	w0, #31, 59f78 <mpfr_gamma_inc@@Base+0xd40>
   59f54:	mov	w1, #0x1                   	// #1
   59f58:	mov	x0, x21
   59f5c:	mov	x2, xzr
   59f60:	mov	w19, #0x1                   	// #1
   59f64:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   59f68:	mov	w21, wzr
   59f6c:	tbnz	w0, #31, 59fd4 <mpfr_gamma_inc@@Base+0xd9c>
   59f70:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   59f74:	b	59fd8 <mpfr_gamma_inc@@Base+0xda0>
   59f78:	str	x23, [x20, #16]
   59f7c:	b	59e04 <mpfr_gamma_inc@@Base+0xbcc>
   59f80:	ldr	x9, [x21]
   59f84:	cmp	w26, #0x3
   59f88:	mov	w10, #0x2                   	// #2
   59f8c:	mov	w11, #0x3                   	// #3
   59f90:	str	x9, [sp, #72]
   59f94:	ldr	x9, [x21, #24]
   59f98:	csel	w10, w10, w26, eq  // eq = none
   59f9c:	cmp	w26, #0x2
   59fa0:	csel	w2, w11, w10, eq  // eq = none
   59fa4:	stp	x8, x9, [sp, #88]
   59fa8:	ldr	w9, [x21, #8]
   59fac:	add	x1, sp, #0x48
   59fb0:	mov	x0, x19
   59fb4:	neg	w8, w9
   59fb8:	str	w8, [sp, #80]
   59fbc:	bl	c9c0 <mpfr_eint@plt>
   59fc0:	ldr	w8, [x19, #8]
   59fc4:	neg	w21, w0
   59fc8:	neg	w8, w8
   59fcc:	str	w8, [x19, #8]
   59fd0:	b	59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59fd4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   59fd8:	str	x8, [x20, #16]
   59fdc:	str	w19, [x20, #8]
   59fe0:	b	59dc8 <mpfr_gamma_inc@@Base+0xb90>
   59fe4:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000059fe8 <mpfr_ubf_mul_exact@@Base>:
   59fe8:	sub	sp, sp, #0x70
   59fec:	stp	x29, x30, [sp, #32]
   59ff0:	stp	x24, x23, [sp, #64]
   59ff4:	stp	x22, x21, [sp, #80]
   59ff8:	stp	x20, x19, [sp, #96]
   59ffc:	ldr	w8, [x1, #8]
   5a000:	ldr	w9, [x2, #8]
   5a004:	str	x25, [sp, #48]
   5a008:	mov	x25, #0x2                   	// #2
   5a00c:	movk	x25, #0x8000, lsl #48
   5a010:	mul	w8, w9, w8
   5a014:	str	w8, [x0, #8]
   5a018:	ldr	x8, [x1, #16]
   5a01c:	add	x10, x25, #0x2
   5a020:	mov	x20, x2
   5a024:	mov	x19, x0
   5a028:	cmp	x8, x10
   5a02c:	add	x29, sp, #0x20
   5a030:	b.lt	5a220 <mpfr_ubf_mul_exact@@Base+0x238>  // b.tstop
   5a034:	ldr	x9, [x20, #16]
   5a038:	cmp	x9, x10
   5a03c:	b.lt	5a22c <mpfr_ubf_mul_exact@@Base+0x244>  // b.tstop
   5a040:	ldr	x8, [x1]
   5a044:	ldr	x9, [x20]
   5a048:	ldr	x23, [x19, #24]
   5a04c:	mov	x21, x1
   5a050:	sub	x11, x8, #0x1
   5a054:	add	x12, x8, #0x3e
   5a058:	sub	x8, x9, #0x1
   5a05c:	cmp	x11, #0x0
   5a060:	add	x10, x9, #0x3e
   5a064:	csel	x9, x12, x11, lt  // lt = tstop
   5a068:	cmp	x8, #0x0
   5a06c:	csel	x8, x10, x8, lt  // lt = tstop
   5a070:	cmp	x12, #0x7e
   5a074:	b.hi	5a0c4 <mpfr_ubf_mul_exact@@Base+0xdc>  // b.pmore
   5a078:	cmp	x10, #0x7e
   5a07c:	b.hi	5a0c4 <mpfr_ubf_mul_exact@@Base+0xdc>  // b.pmore
   5a080:	ldr	x8, [x21, #24]
   5a084:	ldr	x9, [x20, #24]
   5a088:	ldr	x10, [x8]
   5a08c:	ldr	x9, [x9]
   5a090:	umulh	x8, x10, x9
   5a094:	mul	x9, x9, x10
   5a098:	stp	x9, x8, [x23]
   5a09c:	tbnz	x8, #63, 5a0f8 <mpfr_ubf_mul_exact@@Base+0x110>
   5a0a0:	extr	x8, x8, x9, #63
   5a0a4:	lsl	x9, x9, #1
   5a0a8:	stp	x9, x8, [x23]
   5a0ac:	mov	w22, #0x1                   	// #1
   5a0b0:	ldr	x8, [x21, #16]
   5a0b4:	add	x24, x25, #0x2
   5a0b8:	cmp	x8, x24
   5a0bc:	b.ne	5a154 <mpfr_ubf_mul_exact@@Base+0x16c>  // b.any
   5a0c0:	b	5a1ac <mpfr_ubf_mul_exact@@Base+0x1c4>
   5a0c4:	asr	x9, x9, #6
   5a0c8:	asr	x8, x8, #6
   5a0cc:	add	x22, x9, #0x1
   5a0d0:	cmp	x9, x8
   5a0d4:	add	x24, x8, #0x1
   5a0d8:	b.ge	5a110 <mpfr_ubf_mul_exact@@Base+0x128>  // b.tcont
   5a0dc:	ldr	x1, [x20, #24]
   5a0e0:	ldr	x3, [x21, #24]
   5a0e4:	mov	x0, x23
   5a0e8:	mov	x2, x24
   5a0ec:	mov	x4, x22
   5a0f0:	bl	c790 <__gmpn_mul@plt>
   5a0f4:	tbz	x0, #63, 5a12c <mpfr_ubf_mul_exact@@Base+0x144>
   5a0f8:	mov	x22, xzr
   5a0fc:	ldr	x8, [x21, #16]
   5a100:	add	x24, x25, #0x2
   5a104:	cmp	x8, x24
   5a108:	b.eq	5a1ac <mpfr_ubf_mul_exact@@Base+0x1c4>  // b.none
   5a10c:	b	5a154 <mpfr_ubf_mul_exact@@Base+0x16c>
   5a110:	ldr	x1, [x21, #24]
   5a114:	ldr	x3, [x20, #24]
   5a118:	mov	x0, x23
   5a11c:	mov	x2, x22
   5a120:	mov	x4, x24
   5a124:	bl	c790 <__gmpn_mul@plt>
   5a128:	tbnz	x0, #63, 5a0f8 <mpfr_ubf_mul_exact@@Base+0x110>
   5a12c:	add	x2, x24, x22
   5a130:	mov	w3, #0x1                   	// #1
   5a134:	mov	x0, x23
   5a138:	mov	x1, x23
   5a13c:	mov	w22, #0x1                   	// #1
   5a140:	bl	bd10 <__gmpn_lshift@plt>
   5a144:	ldr	x8, [x21, #16]
   5a148:	add	x24, x25, #0x2
   5a14c:	cmp	x8, x24
   5a150:	b.eq	5a1ac <mpfr_ubf_mul_exact@@Base+0x1c4>  // b.none
   5a154:	ldr	x9, [x20, #16]
   5a158:	cmp	x9, x24
   5a15c:	b.eq	5a1ac <mpfr_ubf_mul_exact@@Base+0x1c4>  // b.none
   5a160:	sub	x8, x8, x22
   5a164:	add	x8, x8, x9
   5a168:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a16c:	ldr	x1, [x0, #2576]
   5a170:	add	x0, x0, #0xa10
   5a174:	blr	x1
   5a178:	mrs	x9, tpidr_el0
   5a17c:	ldr	x10, [x9, x0]
   5a180:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a184:	ldr	x1, [x0, #2608]
   5a188:	add	x0, x0, #0xa30
   5a18c:	blr	x1
   5a190:	cmp	x8, x10
   5a194:	b.lt	5a1ac <mpfr_ubf_mul_exact@@Base+0x1c4>  // b.tstop
   5a198:	ldr	x9, [x9, x0]
   5a19c:	cmp	x8, x9
   5a1a0:	b.gt	5a1ac <mpfr_ubf_mul_exact@@Base+0x1c4>
   5a1a4:	str	x8, [x19, #16]
   5a1a8:	b	5a204 <mpfr_ubf_mul_exact@@Base+0x21c>
   5a1ac:	add	x23, x19, #0x20
   5a1b0:	mov	x0, x23
   5a1b4:	bl	bfe0 <mpfr_mpz_init@plt>
   5a1b8:	add	x0, sp, #0x10
   5a1bc:	mov	x1, x21
   5a1c0:	bl	5a27c <mpfr_ubf_mul_exact@@Base+0x294>
   5a1c4:	mov	x0, sp
   5a1c8:	mov	x1, x20
   5a1cc:	bl	5a27c <mpfr_ubf_mul_exact@@Base+0x294>
   5a1d0:	add	x1, sp, #0x10
   5a1d4:	mov	x2, sp
   5a1d8:	mov	x0, x23
   5a1dc:	bl	c9a0 <__gmpz_add@plt>
   5a1e0:	add	x0, sp, #0x10
   5a1e4:	bl	c1b0 <mpfr_mpz_clear@plt>
   5a1e8:	mov	x0, sp
   5a1ec:	bl	c1b0 <mpfr_mpz_clear@plt>
   5a1f0:	mov	x0, x23
   5a1f4:	mov	x1, x23
   5a1f8:	mov	x2, x22
   5a1fc:	bl	bc80 <__gmpz_sub_ui@plt>
   5a200:	str	x24, [x19, #16]
   5a204:	ldp	x20, x19, [sp, #96]
   5a208:	ldp	x22, x21, [sp, #80]
   5a20c:	ldp	x24, x23, [sp, #64]
   5a210:	ldr	x25, [sp, #48]
   5a214:	ldp	x29, x30, [sp, #32]
   5a218:	add	sp, sp, #0x70
   5a21c:	ret
   5a220:	cmp	x8, x25
   5a224:	b.eq	5a234 <mpfr_ubf_mul_exact@@Base+0x24c>  // b.none
   5a228:	ldr	x9, [x20, #16]
   5a22c:	cmp	x9, x25
   5a230:	b.ne	5a23c <mpfr_ubf_mul_exact@@Base+0x254>  // b.any
   5a234:	str	x25, [x19, #16]
   5a238:	b	5a204 <mpfr_ubf_mul_exact@@Base+0x21c>
   5a23c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   5a240:	cmp	x8, x10
   5a244:	b.ne	5a258 <mpfr_ubf_mul_exact@@Base+0x270>  // b.any
   5a248:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   5a24c:	cmp	x9, x8
   5a250:	b.eq	5a234 <mpfr_ubf_mul_exact@@Base+0x24c>  // b.none
   5a254:	b	5a26c <mpfr_ubf_mul_exact@@Base+0x284>
   5a258:	cmp	x9, x10
   5a25c:	b.ne	5a274 <mpfr_ubf_mul_exact@@Base+0x28c>  // b.any
   5a260:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   5a264:	cmp	x8, x9
   5a268:	b.eq	5a234 <mpfr_ubf_mul_exact@@Base+0x24c>  // b.none
   5a26c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5a270:	b	5a1a4 <mpfr_ubf_mul_exact@@Base+0x1bc>
   5a274:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   5a278:	b	5a1a4 <mpfr_ubf_mul_exact@@Base+0x1bc>
   5a27c:	sub	sp, sp, #0x80
   5a280:	stp	x29, x30, [sp, #48]
   5a284:	stp	x26, x25, [sp, #64]
   5a288:	stp	x24, x23, [sp, #80]
   5a28c:	stp	x22, x21, [sp, #96]
   5a290:	stp	x20, x19, [sp, #112]
   5a294:	add	x29, sp, #0x30
   5a298:	mov	x20, x1
   5a29c:	mov	x19, x0
   5a2a0:	bl	bfe0 <mpfr_mpz_init@plt>
   5a2a4:	ldr	x8, [x20, #16]
   5a2a8:	mov	x9, #0x4                   	// #4
   5a2ac:	movk	x9, #0x8000, lsl #48
   5a2b0:	cmp	x8, x9
   5a2b4:	b.ne	5a2dc <mpfr_ubf_mul_exact@@Base+0x2f4>  // b.any
   5a2b8:	add	x1, x20, #0x20
   5a2bc:	mov	x0, x19
   5a2c0:	ldp	x20, x19, [sp, #112]
   5a2c4:	ldp	x22, x21, [sp, #96]
   5a2c8:	ldp	x24, x23, [sp, #80]
   5a2cc:	ldp	x26, x25, [sp, #64]
   5a2d0:	ldp	x29, x30, [sp, #48]
   5a2d4:	add	sp, sp, #0x80
   5a2d8:	b	bff0 <__gmpz_set@plt>
   5a2dc:	mov	w9, #0x40                  	// #64
   5a2e0:	sub	x10, x29, #0x8
   5a2e4:	mov	w11, #0x1                   	// #1
   5a2e8:	str	x9, [sp, #8]
   5a2ec:	str	x10, [sp, #32]
   5a2f0:	str	w11, [sp, #16]
   5a2f4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a2f8:	ldr	x1, [x0, #2640]
   5a2fc:	add	x0, x0, #0xa50
   5a300:	blr	x1
   5a304:	mrs	x23, tpidr_el0
   5a308:	ldr	w24, [x23, x0]
   5a30c:	mov	x20, x0
   5a310:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a314:	ldr	x1, [x0, #2576]
   5a318:	add	x0, x0, #0xa10
   5a31c:	blr	x1
   5a320:	ldr	x25, [x23, x0]
   5a324:	mov	x21, x0
   5a328:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a32c:	ldr	x1, [x0, #2608]
   5a330:	add	x0, x0, #0xa30
   5a334:	blr	x1
   5a338:	ldr	x26, [x23, x0]
   5a33c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   5a340:	str	x9, [x23, x21]
   5a344:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   5a348:	mov	x22, x0
   5a34c:	str	x9, [x23, x0]
   5a350:	add	x0, sp, #0x8
   5a354:	mov	x1, x8
   5a358:	mov	x2, xzr
   5a35c:	mov	w3, wzr
   5a360:	bl	bae0 <mpfr_set_si_2exp@plt>
   5a364:	add	x1, sp, #0x8
   5a368:	mov	x0, x19
   5a36c:	mov	w2, wzr
   5a370:	bl	be50 <mpfr_get_z@plt>
   5a374:	str	w24, [x23, x20]
   5a378:	str	x25, [x23, x21]
   5a37c:	str	x26, [x23, x22]
   5a380:	ldp	x20, x19, [sp, #112]
   5a384:	ldp	x22, x21, [sp, #96]
   5a388:	ldp	x24, x23, [sp, #80]
   5a38c:	ldp	x26, x25, [sp, #64]
   5a390:	ldp	x29, x30, [sp, #48]
   5a394:	add	sp, sp, #0x80
   5a398:	ret

000000000005a39c <mpfr_ubf_exp_less_p@@Base>:
   5a39c:	sub	sp, sp, #0x40
   5a3a0:	str	x19, [sp, #48]
   5a3a4:	mov	x19, x1
   5a3a8:	mov	x1, x0
   5a3ac:	add	x0, sp, #0x10
   5a3b0:	stp	x29, x30, [sp, #32]
   5a3b4:	add	x29, sp, #0x20
   5a3b8:	bl	5a27c <mpfr_ubf_mul_exact@@Base+0x294>
   5a3bc:	mov	x0, sp
   5a3c0:	mov	x1, x19
   5a3c4:	bl	5a27c <mpfr_ubf_mul_exact@@Base+0x294>
   5a3c8:	add	x0, sp, #0x10
   5a3cc:	mov	x1, sp
   5a3d0:	bl	c8d0 <__gmpz_cmp@plt>
   5a3d4:	lsr	w19, w0, #31
   5a3d8:	add	x0, sp, #0x10
   5a3dc:	bl	c1b0 <mpfr_mpz_clear@plt>
   5a3e0:	mov	x0, sp
   5a3e4:	bl	c1b0 <mpfr_mpz_clear@plt>
   5a3e8:	mov	w0, w19
   5a3ec:	ldr	x19, [sp, #48]
   5a3f0:	ldp	x29, x30, [sp, #32]
   5a3f4:	add	sp, sp, #0x40
   5a3f8:	ret

000000000005a3fc <mpfr_ubf_zexp2exp@@Base>:
   5a3fc:	sub	sp, sp, #0x70
   5a400:	stp	x29, x30, [sp, #32]
   5a404:	stp	x26, x25, [sp, #48]
   5a408:	stp	x24, x23, [sp, #64]
   5a40c:	stp	x22, x21, [sp, #80]
   5a410:	stp	x20, x19, [sp, #96]
   5a414:	ldr	w8, [x0, #4]
   5a418:	add	x29, sp, #0x20
   5a41c:	cmp	w8, #0x0
   5a420:	cneg	w8, w8, mi  // mi = first
   5a424:	cbz	w8, 5a4d0 <mpfr_ubf_zexp2exp@@Base+0xd4>
   5a428:	mov	x19, x0
   5a42c:	mov	w8, w8
   5a430:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a434:	ldr	x1, [x0, #2640]
   5a438:	add	x0, x0, #0xa50
   5a43c:	blr	x1
   5a440:	mrs	x23, tpidr_el0
   5a444:	ldr	w24, [x23, x0]
   5a448:	mov	x20, x0
   5a44c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a450:	ldr	x1, [x0, #2576]
   5a454:	add	x0, x0, #0xa10
   5a458:	blr	x1
   5a45c:	ldr	x25, [x23, x0]
   5a460:	mov	x21, x0
   5a464:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a468:	ldr	x1, [x0, #2608]
   5a46c:	add	x0, x0, #0xa30
   5a470:	blr	x1
   5a474:	ldr	x26, [x23, x0]
   5a478:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   5a47c:	str	x9, [x23, x21]
   5a480:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   5a484:	mov	x22, x0
   5a488:	str	x9, [x23, x0]
   5a48c:	lsl	x1, x8, #6
   5a490:	mov	x0, sp
   5a494:	bl	ca60 <mpfr_init2@plt>
   5a498:	mov	x0, sp
   5a49c:	mov	x1, x19
   5a4a0:	mov	w2, wzr
   5a4a4:	bl	c250 <mpfr_set_z@plt>
   5a4a8:	mov	x0, sp
   5a4ac:	mov	w1, #0x1                   	// #1
   5a4b0:	bl	c1d0 <mpfr_get_si@plt>
   5a4b4:	mov	x19, x0
   5a4b8:	mov	x0, sp
   5a4bc:	bl	c0b0 <mpfr_clear@plt>
   5a4c0:	str	w24, [x23, x20]
   5a4c4:	str	x25, [x23, x21]
   5a4c8:	str	x26, [x23, x22]
   5a4cc:	b	5a4d4 <mpfr_ubf_zexp2exp@@Base+0xd8>
   5a4d0:	mov	x19, xzr
   5a4d4:	mov	x0, x19
   5a4d8:	ldp	x20, x19, [sp, #96]
   5a4dc:	ldp	x22, x21, [sp, #80]
   5a4e0:	ldp	x24, x23, [sp, #64]
   5a4e4:	ldp	x26, x25, [sp, #48]
   5a4e8:	ldp	x29, x30, [sp, #32]
   5a4ec:	add	sp, sp, #0x70
   5a4f0:	ret

000000000005a4f4 <mpfr_ubf_diff_exp@@Base>:
   5a4f4:	sub	sp, sp, #0x90
   5a4f8:	stp	x20, x19, [sp, #128]
   5a4fc:	mov	x19, x1
   5a500:	mov	x1, x0
   5a504:	add	x0, sp, #0x10
   5a508:	stp	x29, x30, [sp, #64]
   5a50c:	stp	x26, x25, [sp, #80]
   5a510:	stp	x24, x23, [sp, #96]
   5a514:	stp	x22, x21, [sp, #112]
   5a518:	add	x29, sp, #0x40
   5a51c:	bl	5a27c <mpfr_ubf_mul_exact@@Base+0x294>
   5a520:	mov	x0, sp
   5a524:	mov	x1, x19
   5a528:	bl	5a27c <mpfr_ubf_mul_exact@@Base+0x294>
   5a52c:	add	x0, sp, #0x10
   5a530:	add	x1, sp, #0x10
   5a534:	mov	x2, sp
   5a538:	bl	be30 <__gmpz_sub@plt>
   5a53c:	mov	x0, sp
   5a540:	bl	c1b0 <mpfr_mpz_clear@plt>
   5a544:	ldr	w8, [sp, #20]
   5a548:	cmp	w8, #0x0
   5a54c:	cneg	w8, w8, mi  // mi = first
   5a550:	cbz	w8, 5a5f8 <mpfr_ubf_diff_exp@@Base+0x104>
   5a554:	mov	w8, w8
   5a558:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a55c:	ldr	x1, [x0, #2640]
   5a560:	add	x0, x0, #0xa50
   5a564:	blr	x1
   5a568:	mrs	x23, tpidr_el0
   5a56c:	ldr	w24, [x23, x0]
   5a570:	mov	x20, x0
   5a574:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a578:	ldr	x1, [x0, #2576]
   5a57c:	add	x0, x0, #0xa10
   5a580:	blr	x1
   5a584:	ldr	x25, [x23, x0]
   5a588:	mov	x21, x0
   5a58c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a590:	ldr	x1, [x0, #2608]
   5a594:	add	x0, x0, #0xa30
   5a598:	blr	x1
   5a59c:	ldr	x26, [x23, x0]
   5a5a0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   5a5a4:	str	x9, [x23, x21]
   5a5a8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   5a5ac:	mov	x22, x0
   5a5b0:	str	x9, [x23, x0]
   5a5b4:	lsl	x1, x8, #6
   5a5b8:	add	x0, sp, #0x20
   5a5bc:	bl	ca60 <mpfr_init2@plt>
   5a5c0:	add	x0, sp, #0x20
   5a5c4:	add	x1, sp, #0x10
   5a5c8:	mov	w2, wzr
   5a5cc:	bl	c250 <mpfr_set_z@plt>
   5a5d0:	add	x0, sp, #0x20
   5a5d4:	mov	w1, #0x1                   	// #1
   5a5d8:	bl	c1d0 <mpfr_get_si@plt>
   5a5dc:	mov	x19, x0
   5a5e0:	add	x0, sp, #0x20
   5a5e4:	bl	c0b0 <mpfr_clear@plt>
   5a5e8:	str	w24, [x23, x20]
   5a5ec:	str	x25, [x23, x21]
   5a5f0:	str	x26, [x23, x22]
   5a5f4:	b	5a5fc <mpfr_ubf_diff_exp@@Base+0x108>
   5a5f8:	mov	x19, xzr
   5a5fc:	add	x0, sp, #0x10
   5a600:	bl	c1b0 <mpfr_mpz_clear@plt>
   5a604:	mov	x0, x19
   5a608:	ldp	x20, x19, [sp, #128]
   5a60c:	ldp	x22, x21, [sp, #112]
   5a610:	ldp	x24, x23, [sp, #96]
   5a614:	ldp	x26, x25, [sp, #80]
   5a618:	ldp	x29, x30, [sp, #64]
   5a61c:	add	sp, sp, #0x90
   5a620:	ret

000000000005a624 <mpfr_beta@@Base>:
   5a624:	sub	sp, sp, #0x190
   5a628:	stp	x22, x21, [sp, #368]
   5a62c:	stp	x20, x19, [sp, #384]
   5a630:	mov	x21, x1
   5a634:	mov	x19, x0
   5a638:	mov	x0, x1
   5a63c:	mov	x1, x2
   5a640:	stp	x29, x30, [sp, #304]
   5a644:	stp	x28, x27, [sp, #320]
   5a648:	stp	x26, x25, [sp, #336]
   5a64c:	stp	x24, x23, [sp, #352]
   5a650:	add	x29, sp, #0x130
   5a654:	mov	w20, w3
   5a658:	mov	x22, x2
   5a65c:	bl	c9e0 <mpfr_less_p@plt>
   5a660:	cbz	w0, 5a6a0 <mpfr_beta@@Base+0x7c>
   5a664:	mov	x0, x19
   5a668:	mov	x1, x22
   5a66c:	mov	x2, x21
   5a670:	mov	w3, w20
   5a674:	bl	c8b0 <mpfr_beta@plt>
   5a678:	mov	w21, w0
   5a67c:	mov	w0, w21
   5a680:	ldp	x20, x19, [sp, #384]
   5a684:	ldp	x22, x21, [sp, #368]
   5a688:	ldp	x24, x23, [sp, #352]
   5a68c:	ldp	x26, x25, [sp, #336]
   5a690:	ldp	x28, x27, [sp, #320]
   5a694:	ldp	x29, x30, [sp, #304]
   5a698:	add	sp, sp, #0x190
   5a69c:	ret
   5a6a0:	ldr	x8, [x21, #16]
   5a6a4:	mov	x24, #0x2                   	// #2
   5a6a8:	movk	x24, #0x8000, lsl #48
   5a6ac:	add	x10, x24, #0x2
   5a6b0:	cmp	x8, x10
   5a6b4:	b.lt	5a9e0 <mpfr_beta@@Base+0x3bc>  // b.tstop
   5a6b8:	ldr	x9, [x22, #16]
   5a6bc:	cmp	x9, x10
   5a6c0:	b.lt	5a9ec <mpfr_beta@@Base+0x3c8>  // b.tstop
   5a6c4:	mov	x0, x22
   5a6c8:	bl	c1a0 <mpfr_integer_p@plt>
   5a6cc:	mov	w23, w0
   5a6d0:	cbz	w0, 5a6dc <mpfr_beta@@Base+0xb8>
   5a6d4:	ldr	w8, [x22, #8]
   5a6d8:	tbnz	w8, #31, 5a854 <mpfr_beta@@Base+0x230>
   5a6dc:	mov	x0, x21
   5a6e0:	bl	c1a0 <mpfr_integer_p@plt>
   5a6e4:	cbz	w0, 5a6f0 <mpfr_beta@@Base+0xcc>
   5a6e8:	ldr	w8, [x21, #8]
   5a6ec:	tbnz	w8, #31, 5a870 <mpfr_beta@@Base+0x24c>
   5a6f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a6f4:	ldr	x1, [x0, #2640]
   5a6f8:	add	x0, x0, #0xa50
   5a6fc:	blr	x1
   5a700:	mrs	x25, tpidr_el0
   5a704:	ldr	w26, [x25, x0]
   5a708:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a70c:	ldr	x1, [x0, #2576]
   5a710:	add	x0, x0, #0xa10
   5a714:	blr	x1
   5a718:	ldr	x28, [x25, x0]
   5a71c:	mov	x8, x0
   5a720:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a724:	ldr	x1, [x0, #2608]
   5a728:	add	x0, x0, #0xa30
   5a72c:	blr	x1
   5a730:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   5a734:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   5a738:	ldr	x27, [x25, x0]
   5a73c:	str	x9, [x25, x8]
   5a740:	str	x10, [x25, x0]
   5a744:	ldr	x8, [x21, #16]
   5a748:	ldr	x9, [x22, #16]
   5a74c:	ldr	x10, [x21]
   5a750:	ldr	x11, [x22]
   5a754:	cmp	x8, x9
   5a758:	sub	x10, x8, x10
   5a75c:	sub	x11, x9, x11
   5a760:	csel	x8, x8, x9, gt
   5a764:	cmp	x10, x11
   5a768:	csel	x9, x10, x11, lt  // lt = tstop
   5a76c:	sub	x8, x8, x9
   5a770:	add	x1, x8, #0x1
   5a774:	sub	x8, x24, #0x103
   5a778:	cmp	x1, x8
   5a77c:	b.ls	5a7cc <mpfr_beta@@Base+0x1a8>  // b.plast
   5a780:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a784:	ldr	x1, [x0, #2576]
   5a788:	add	x0, x0, #0xa10
   5a78c:	blr	x1
   5a790:	str	x28, [x25, x0]
   5a794:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a798:	ldr	x1, [x0, #2608]
   5a79c:	add	x0, x0, #0xa30
   5a7a0:	blr	x1
   5a7a4:	orr	w8, w26, #0x4
   5a7a8:	str	x27, [x25, x0]
   5a7ac:	str	x24, [x19, #16]
   5a7b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a7b4:	ldr	x1, [x0, #2640]
   5a7b8:	add	x0, x0, #0xa50
   5a7bc:	blr	x1
   5a7c0:	mov	w21, wzr
   5a7c4:	str	w8, [x25, x0]
   5a7c8:	b	5a67c <mpfr_beta@@Base+0x58>
   5a7cc:	sub	x0, x29, #0x28
   5a7d0:	str	x8, [sp, #48]
   5a7d4:	bl	ca60 <mpfr_init2@plt>
   5a7d8:	sub	x0, x29, #0x28
   5a7dc:	mov	x1, x21
   5a7e0:	mov	x2, x22
   5a7e4:	mov	w3, wzr
   5a7e8:	bl	c1e0 <mpfr_add@plt>
   5a7ec:	ldur	x8, [x29, #-24]
   5a7f0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5a7f4:	cmp	x8, x9
   5a7f8:	b.ne	5a89c <mpfr_beta@@Base+0x278>  // b.any
   5a7fc:	sub	x0, x29, #0x28
   5a800:	bl	c0b0 <mpfr_clear@plt>
   5a804:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a808:	ldr	x1, [x0, #2640]
   5a80c:	add	x0, x0, #0xa50
   5a810:	blr	x1
   5a814:	str	w26, [x25, x0]
   5a818:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a81c:	ldr	x1, [x0, #2576]
   5a820:	add	x0, x0, #0xa10
   5a824:	blr	x1
   5a828:	str	x28, [x25, x0]
   5a82c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a830:	ldr	x1, [x0, #2608]
   5a834:	add	x0, x0, #0xa30
   5a838:	blr	x1
   5a83c:	str	x27, [x25, x0]
   5a840:	mov	w2, #0x1                   	// #1
   5a844:	mov	x0, x19
   5a848:	mov	w1, w20
   5a84c:	bl	c3c0 <mpfr_underflow@plt>
   5a850:	b	5a678 <mpfr_beta@@Base+0x54>
   5a854:	ldr	w8, [x21, #8]
   5a858:	tbnz	w8, #31, 5a870 <mpfr_beta@@Base+0x24c>
   5a85c:	mov	x0, x21
   5a860:	mov	x1, x22
   5a864:	bl	c990 <mpfr_cmpabs@plt>
   5a868:	cmp	w0, #0x0
   5a86c:	b.le	5a91c <mpfr_beta@@Base+0x2f8>
   5a870:	str	x24, [x19, #16]
   5a874:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a878:	ldr	x1, [x0, #2640]
   5a87c:	add	x0, x0, #0xa50
   5a880:	blr	x1
   5a884:	mrs	x8, tpidr_el0
   5a888:	ldr	w9, [x8, x0]
   5a88c:	mov	w21, wzr
   5a890:	orr	w9, w9, #0x4
   5a894:	str	w9, [x8, x0]
   5a898:	b	5a67c <mpfr_beta@@Base+0x58>
   5a89c:	cbnz	w0, 5aae8 <mpfr_beta@@Base+0x4c4>
   5a8a0:	sub	x0, x29, #0x28
   5a8a4:	bl	c700 <mpfr_sgn@plt>
   5a8a8:	cbnz	w23, 5ab0c <mpfr_beta@@Base+0x4e8>
   5a8ac:	cmp	w0, #0x0
   5a8b0:	b.gt	5ab0c <mpfr_beta@@Base+0x4e8>
   5a8b4:	sub	x0, x29, #0x28
   5a8b8:	bl	c1a0 <mpfr_integer_p@plt>
   5a8bc:	cbz	w0, 5ab0c <mpfr_beta@@Base+0x4e8>
   5a8c0:	sub	x0, x29, #0x28
   5a8c4:	bl	c0b0 <mpfr_clear@plt>
   5a8c8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a8cc:	ldr	x1, [x0, #2640]
   5a8d0:	add	x0, x0, #0xa50
   5a8d4:	blr	x1
   5a8d8:	str	w26, [x25, x0]
   5a8dc:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a8e0:	ldr	x1, [x0, #2576]
   5a8e4:	add	x0, x0, #0xa10
   5a8e8:	blr	x1
   5a8ec:	str	x28, [x25, x0]
   5a8f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5a8f4:	ldr	x1, [x0, #2608]
   5a8f8:	add	x0, x0, #0xa30
   5a8fc:	blr	x1
   5a900:	mov	w21, wzr
   5a904:	str	x27, [x25, x0]
   5a908:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   5a90c:	mov	w9, #0x1                   	// #1
   5a910:	str	x8, [x19, #16]
   5a914:	str	w9, [x19, #8]
   5a918:	b	5a67c <mpfr_beta@@Base+0x58>
   5a91c:	mov	x0, x21
   5a920:	bl	c1a0 <mpfr_integer_p@plt>
   5a924:	cbz	w0, 5a870 <mpfr_beta@@Base+0x24c>
   5a928:	mov	x0, x21
   5a92c:	mov	x1, x22
   5a930:	bl	c990 <mpfr_cmpabs@plt>
   5a934:	cbz	w0, 5a9c8 <mpfr_beta@@Base+0x3a4>
   5a938:	ldr	x8, [x21, #16]
   5a93c:	ldr	x9, [x22, #16]
   5a940:	sub	x0, x29, #0x28
   5a944:	cmp	x8, x9
   5a948:	csel	x1, x8, x9, gt
   5a94c:	bl	ca60 <mpfr_init2@plt>
   5a950:	sub	x0, x29, #0x28
   5a954:	mov	x1, x21
   5a958:	mov	x2, x22
   5a95c:	mov	w3, wzr
   5a960:	bl	c1e0 <mpfr_add@plt>
   5a964:	cbnz	w0, 5af1c <mpfr_beta@@Base+0x8f8>
   5a968:	sub	x0, x29, #0x28
   5a96c:	sub	x2, x29, #0x28
   5a970:	mov	w1, #0x1                   	// #1
   5a974:	mov	w3, wzr
   5a978:	bl	ca30 <mpfr_ui_sub@plt>
   5a97c:	cbnz	w0, 5af38 <mpfr_beta@@Base+0x914>
   5a980:	mov	x0, x21
   5a984:	bl	cc80 <mpfr_odd_p@plt>
   5a988:	cbz	w0, 5af5c <mpfr_beta@@Base+0x938>
   5a98c:	cmp	w20, #0x3
   5a990:	mov	w8, #0x2                   	// #2
   5a994:	csel	w8, w8, w20, eq  // eq = none
   5a998:	cmp	w20, #0x2
   5a99c:	mov	w9, #0x3                   	// #3
   5a9a0:	csel	w3, w9, w8, eq  // eq = none
   5a9a4:	sub	x2, x29, #0x28
   5a9a8:	mov	x0, x19
   5a9ac:	mov	x1, x21
   5a9b0:	bl	c8b0 <mpfr_beta@plt>
   5a9b4:	ldr	w8, [x19, #8]
   5a9b8:	neg	w21, w0
   5a9bc:	neg	w8, w8
   5a9c0:	str	w8, [x19, #8]
   5a9c4:	b	5af74 <mpfr_beta@@Base+0x950>
   5a9c8:	mov	w1, #0x1                   	// #1
   5a9cc:	mov	x0, x19
   5a9d0:	mov	x2, x21
   5a9d4:	mov	w3, w20
   5a9d8:	bl	c2f0 <mpfr_ui_div@plt>
   5a9dc:	b	5a678 <mpfr_beta@@Base+0x54>
   5a9e0:	cmp	x8, x24
   5a9e4:	b.eq	5a870 <mpfr_beta@@Base+0x24c>  // b.none
   5a9e8:	ldr	x9, [x22, #16]
   5a9ec:	cmp	x9, x24
   5a9f0:	b.eq	5a870 <mpfr_beta@@Base+0x24c>  // b.none
   5a9f4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   5a9f8:	cmp	x8, x10
   5a9fc:	b.eq	5aa54 <mpfr_beta@@Base+0x430>  // b.none
   5aa00:	cmp	x9, x10
   5aa04:	b.eq	5aa54 <mpfr_beta@@Base+0x430>  // b.none
   5aa08:	mov	x20, #0x2                   	// #2
   5aa0c:	mov	x0, x21
   5aa10:	movk	x20, #0x8000, lsl #48
   5aa14:	bl	c700 <mpfr_sgn@plt>
   5aa18:	cbz	w0, 5ae74 <mpfr_beta@@Base+0x850>
   5aa1c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5aa20:	str	x8, [x19, #16]
   5aa24:	ldr	w8, [x22, #8]
   5aa28:	str	w8, [x19, #8]
   5aa2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5aa30:	ldr	x1, [x0, #2640]
   5aa34:	add	x0, x0, #0xa50
   5aa38:	blr	x1
   5aa3c:	mrs	x8, tpidr_el0
   5aa40:	ldr	w9, [x8, x0]
   5aa44:	mov	w21, wzr
   5aa48:	orr	w9, w9, #0x20
   5aa4c:	str	w9, [x8, x0]
   5aa50:	b	5a67c <mpfr_beta@@Base+0x58>
   5aa54:	mov	x23, #0x2                   	// #2
   5aa58:	movk	x23, #0x8000, lsl #48
   5aa5c:	cmp	x8, x10
   5aa60:	b.ne	5aa88 <mpfr_beta@@Base+0x464>  // b.any
   5aa64:	ldr	w8, [x21, #8]
   5aa68:	cmp	w8, #0x1
   5aa6c:	b.lt	5aa88 <mpfr_beta@@Base+0x464>  // b.tstop
   5aa70:	mov	x0, x22
   5aa74:	bl	c700 <mpfr_sgn@plt>
   5aa78:	cmp	w0, #0x1
   5aa7c:	b.lt	5aef4 <mpfr_beta@@Base+0x8d0>  // b.tstop
   5aa80:	mov	w21, wzr
   5aa84:	b	5a908 <mpfr_beta@@Base+0x2e4>
   5aa88:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5aa8c:	mov	x24, #0x2                   	// #2
   5aa90:	cmp	x9, x8
   5aa94:	movk	x24, #0x8000, lsl #48
   5aa98:	b.ne	5a6c4 <mpfr_beta@@Base+0xa0>  // b.any
   5aa9c:	mov	x20, #0x2                   	// #2
   5aaa0:	mov	x0, x21
   5aaa4:	movk	x20, #0x8000, lsl #48
   5aaa8:	bl	c700 <mpfr_sgn@plt>
   5aaac:	cmp	w0, #0x1
   5aab0:	b.lt	5aeec <mpfr_beta@@Base+0x8c8>  // b.tstop
   5aab4:	mov	x0, x21
   5aab8:	bl	c1a0 <mpfr_integer_p@plt>
   5aabc:	cbz	w0, 5aeec <mpfr_beta@@Base+0x8c8>
   5aac0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   5aac4:	mov	x0, x21
   5aac8:	str	x8, [x19, #16]
   5aacc:	bl	cc80 <mpfr_odd_p@plt>
   5aad0:	cmp	w0, #0x0
   5aad4:	mov	w8, #0x1                   	// #1
   5aad8:	cneg	w8, w8, ne  // ne = any
   5aadc:	mov	w21, wzr
   5aae0:	str	w8, [x19, #8]
   5aae4:	b	5a67c <mpfr_beta@@Base+0x58>
   5aae8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5aaec:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   5aaf0:	add	x0, x0, #0x5a1
   5aaf4:	add	x2, x2, #0xbf
   5aaf8:	mov	w1, #0xf7                  	// #247
   5aafc:	bl	cb20 <mpfr_assert_fail@plt>
   5ab00:	sub	x0, x29, #0x28
   5ab04:	bl	c700 <mpfr_sgn@plt>
   5ab08:	cbz	w23, 5a8ac <mpfr_beta@@Base+0x288>
   5ab0c:	ldr	x23, [x19]
   5ab10:	subs	x24, x23, #0x1
   5ab14:	b.eq	5ae9c <mpfr_beta@@Base+0x878>  // b.none
   5ab18:	b.le	5aeb4 <mpfr_beta@@Base+0x890>
   5ab1c:	clz	x8, x24
   5ab20:	mov	w9, #0x40                  	// #64
   5ab24:	sub	x8, x9, x8
   5ab28:	add	x24, x8, x23
   5ab2c:	ldr	x8, [sp, #48]
   5ab30:	cmp	x24, x8
   5ab34:	b.gt	5aeb0 <mpfr_beta@@Base+0x88c>
   5ab38:	sub	x8, x24, #0x1
   5ab3c:	add	x9, x24, #0x3e
   5ab40:	cmp	x8, #0x0
   5ab44:	csel	x8, x9, x8, lt  // lt = tstop
   5ab48:	asr	x8, x8, #6
   5ab4c:	cmp	x24, #0x201
   5ab50:	add	x23, x8, #0x1
   5ab54:	b.lt	5ab68 <mpfr_beta@@Base+0x544>  // b.tstop
   5ab58:	lsl	x0, x23, #4
   5ab5c:	str	x0, [sp, #56]
   5ab60:	bl	ccd0 <mpfr_allocate_func@plt>
   5ab64:	b	5ab74 <mpfr_beta@@Base+0x550>
   5ab68:	add	x8, sp, #0x38
   5ab6c:	add	x0, x8, #0x10
   5ab70:	str	xzr, [sp, #56]
   5ab74:	ldr	x1, [sp, #56]
   5ab78:	add	x8, x0, x23, lsl #3
   5ab7c:	cmp	w20, #0x0
   5ab80:	mov	w9, #0x1                   	// #1
   5ab84:	mov	w10, #0x40                  	// #64
   5ab88:	stp	x8, x24, [x29, #-80]
   5ab8c:	cset	w8, eq  // eq = none
   5ab90:	str	x0, [sp, #64]
   5ab94:	stur	x0, [x29, #-48]
   5ab98:	stur	x24, [x29, #-104]
   5ab9c:	str	x10, [sp, #8]
   5aba0:	stur	w9, [x29, #-64]
   5aba4:	stur	w9, [x29, #-96]
   5aba8:	stp	x8, x28, [sp, #16]
   5abac:	str	w26, [sp, #44]
   5abb0:	str	x27, [sp, #32]
   5abb4:	sub	x8, x24, #0x1
   5abb8:	add	x9, x24, #0x3e
   5abbc:	cmp	x8, #0x0
   5abc0:	csel	x8, x9, x8, lt  // lt = tstop
   5abc4:	asr	x8, x8, #6
   5abc8:	add	x23, x8, #0x1
   5abcc:	lsl	x2, x23, #4
   5abd0:	str	x2, [sp, #56]
   5abd4:	cbz	x1, 5abe4 <mpfr_beta@@Base+0x5c0>
   5abd8:	ldr	x0, [sp, #64]
   5abdc:	bl	c200 <mpfr_reallocate_func@plt>
   5abe0:	b	5abec <mpfr_beta@@Base+0x5c8>
   5abe4:	mov	x0, x2
   5abe8:	bl	ccd0 <mpfr_allocate_func@plt>
   5abec:	str	x0, [sp, #64]
   5abf0:	stur	x0, [x29, #-48]
   5abf4:	mov	w9, #0x1                   	// #1
   5abf8:	add	x8, x0, x23, lsl #3
   5abfc:	sub	x0, x29, #0x48
   5ac00:	mov	x1, x21
   5ac04:	mov	w2, wzr
   5ac08:	stur	w9, [x29, #-64]
   5ac0c:	stur	x24, [x29, #-104]
   5ac10:	stp	x8, x24, [x29, #-80]
   5ac14:	stur	w9, [x29, #-96]
   5ac18:	bl	c7a0 <mpfr_gamma@plt>
   5ac1c:	mov	w26, w0
   5ac20:	sub	x0, x29, #0x68
   5ac24:	mov	x1, x22
   5ac28:	mov	w2, wzr
   5ac2c:	bl	c7a0 <mpfr_gamma@plt>
   5ac30:	mov	w27, w0
   5ac34:	sub	x0, x29, #0x48
   5ac38:	sub	x1, x29, #0x48
   5ac3c:	sub	x2, x29, #0x68
   5ac40:	mov	w3, wzr
   5ac44:	bl	bda0 <mpfr_mul@plt>
   5ac48:	mov	w28, w0
   5ac4c:	sub	x0, x29, #0x68
   5ac50:	sub	x1, x29, #0x28
   5ac54:	mov	w2, wzr
   5ac58:	bl	c7a0 <mpfr_gamma@plt>
   5ac5c:	mov	w23, w0
   5ac60:	sub	x0, x29, #0x48
   5ac64:	sub	x1, x29, #0x48
   5ac68:	sub	x2, x29, #0x68
   5ac6c:	mov	w3, wzr
   5ac70:	bl	c610 <mpfr_div@plt>
   5ac74:	ldur	x8, [x29, #-56]
   5ac78:	mov	x9, #0x2                   	// #2
   5ac7c:	movk	x9, #0x8000, lsl #48
   5ac80:	cmp	x8, x9
   5ac84:	b.eq	5ae14 <mpfr_beta@@Base+0x7f0>  // b.none
   5ac88:	orr	w9, w27, w26
   5ac8c:	orr	w9, w9, w28
   5ac90:	orr	w9, w9, w23
   5ac94:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   5ac98:	cmp	x8, x10
   5ac9c:	orr	w23, w9, w0
   5aca0:	b.le	5addc <mpfr_beta@@Base+0x7b8>
   5aca4:	ldr	w26, [sp, #44]
   5aca8:	ldp	x28, x27, [sp, #24]
   5acac:	mov	x9, #0x2                   	// #2
   5acb0:	movk	x9, #0x8000, lsl #48
   5acb4:	cbz	w23, 5b0a8 <mpfr_beta@@Base+0xa84>
   5acb8:	ldur	x8, [x29, #-56]
   5acbc:	add	x9, x9, #0x2
   5acc0:	cmp	x8, x9
   5acc4:	b.lt	5ad00 <mpfr_beta@@Base+0x6dc>  // b.tstop
   5acc8:	ldur	x8, [x29, #-72]
   5accc:	ldr	x9, [x19]
   5acd0:	ldur	x0, [x29, #-48]
   5acd4:	sub	x2, x24, #0x3
   5acd8:	sub	x10, x8, #0x1
   5acdc:	add	x8, x8, #0x3e
   5ace0:	cmp	x10, #0x0
   5ace4:	csel	x8, x8, x10, lt  // lt = tstop
   5ace8:	asr	x8, x8, #6
   5acec:	add	x1, x8, #0x1
   5acf0:	ldr	x8, [sp, #16]
   5acf4:	add	x3, x9, x8
   5acf8:	bl	c370 <mpfr_round_p@plt>
   5acfc:	cbnz	w0, 5b0a8 <mpfr_beta@@Base+0xa84>
   5ad00:	mov	x27, #0x2                   	// #2
   5ad04:	mov	w1, #0x1                   	// #1
   5ad08:	mov	x0, x21
   5ad0c:	mov	x2, xzr
   5ad10:	movk	x27, #0x8000, lsl #48
   5ad14:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   5ad18:	cbnz	w0, 5ad4c <mpfr_beta@@Base+0x728>
   5ad1c:	ldr	x26, [x22, #16]
   5ad20:	mov	w1, #0x1                   	// #1
   5ad24:	mov	x0, x22
   5ad28:	sub	x23, x26, #0x1
   5ad2c:	mov	x2, x23
   5ad30:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   5ad34:	cbz	w0, 5b04c <mpfr_beta@@Base+0xa28>
   5ad38:	mov	x1, #0xffffffffffffffff    	// #-1
   5ad3c:	mov	x0, x22
   5ad40:	mov	x2, x23
   5ad44:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   5ad48:	cbz	w0, 5b078 <mpfr_beta@@Base+0xa54>
   5ad4c:	mov	w1, #0x1                   	// #1
   5ad50:	mov	x0, x22
   5ad54:	mov	x2, xzr
   5ad58:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   5ad5c:	cbnz	w0, 5ad78 <mpfr_beta@@Base+0x754>
   5ad60:	ldr	x8, [x21, #16]
   5ad64:	mov	w1, #0x1                   	// #1
   5ad68:	mov	x0, x21
   5ad6c:	sub	x2, x8, #0x1
   5ad70:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   5ad74:	cbz	w0, 5b058 <mpfr_beta@@Base+0xa34>
   5ad78:	mov	w1, #0x2                   	// #2
   5ad7c:	mov	x0, x21
   5ad80:	mov	x2, xzr
   5ad84:	bl	bfa0 <mpfr_cmp_ui_2exp@plt>
   5ad88:	cbnz	w0, 5ada0 <mpfr_beta@@Base+0x77c>
   5ad8c:	mov	x1, #0xffffffffffffffff    	// #-1
   5ad90:	mov	x2, #0xffffffffffffffff    	// #-1
   5ad94:	mov	x0, x22
   5ad98:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   5ad9c:	cbz	w0, 5b08c <mpfr_beta@@Base+0xa68>
   5ada0:	ldr	x9, [sp, #8]
   5ada4:	sub	x8, x27, x24
   5ada8:	sub	x8, x8, #0x103
   5adac:	cmp	x9, x8
   5adb0:	b.gt	5adf8 <mpfr_beta@@Base+0x7d4>
   5adb4:	ldr	x8, [sp, #8]
   5adb8:	ldp	x9, x1, [sp, #48]
   5adbc:	add	x24, x24, x8
   5adc0:	cmp	x24, #0x0
   5adc4:	cinc	x8, x24, lt  // lt = tstop
   5adc8:	cmp	x24, x9
   5adcc:	asr	x8, x8, #1
   5add0:	str	x8, [sp, #8]
   5add4:	b.le	5abb4 <mpfr_beta@@Base+0x590>
   5add8:	b	5aeb0 <mpfr_beta@@Base+0x88c>
   5addc:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5ade0:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   5ade4:	mov	w1, #0x129                 	// #297
   5ade8:	add	x0, x0, #0x5a1
   5adec:	add	x2, x2, #0x5a8
   5adf0:	bl	cb20 <mpfr_assert_fail@plt>
   5adf4:	b	5aca4 <mpfr_beta@@Base+0x680>
   5adf8:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5adfc:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   5ae00:	mov	w1, #0x151                 	// #337
   5ae04:	add	x0, x0, #0x5a1
   5ae08:	add	x2, x2, #0x622
   5ae0c:	bl	cb20 <mpfr_assert_fail@plt>
   5ae10:	b	5adb4 <mpfr_beta@@Base+0x790>
   5ae14:	sub	x0, x29, #0x28
   5ae18:	bl	c0b0 <mpfr_clear@plt>
   5ae1c:	ldr	x1, [sp, #56]
   5ae20:	cbz	x1, 5ae2c <mpfr_beta@@Base+0x808>
   5ae24:	ldr	x0, [sp, #64]
   5ae28:	bl	cc00 <mpfr_free_func@plt>
   5ae2c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5ae30:	ldr	x1, [x0, #2576]
   5ae34:	add	x0, x0, #0xa10
   5ae38:	blr	x1
   5ae3c:	ldr	x8, [sp, #24]
   5ae40:	str	x8, [x25, x0]
   5ae44:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5ae48:	ldr	x1, [x0, #2608]
   5ae4c:	add	x0, x0, #0xa30
   5ae50:	blr	x1
   5ae54:	ldr	x8, [sp, #32]
   5ae58:	str	x8, [x25, x0]
   5ae5c:	mov	x8, #0x2                   	// #2
   5ae60:	movk	x8, #0x8000, lsl #48
   5ae64:	str	x8, [x19, #16]
   5ae68:	ldr	w8, [sp, #44]
   5ae6c:	orr	w8, w8, #0x4
   5ae70:	b	5a7b0 <mpfr_beta@@Base+0x18c>
   5ae74:	mov	x0, x22
   5ae78:	bl	c700 <mpfr_sgn@plt>
   5ae7c:	cbz	w0, 5aed0 <mpfr_beta@@Base+0x8ac>
   5ae80:	mov	x0, x22
   5ae84:	bl	c1a0 <mpfr_integer_p@plt>
   5ae88:	cbnz	w0, 5aeec <mpfr_beta@@Base+0x8c8>
   5ae8c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5ae90:	str	x8, [x19, #16]
   5ae94:	ldr	w8, [x21, #8]
   5ae98:	b	5aa28 <mpfr_beta@@Base+0x404>
   5ae9c:	mov	x8, xzr
   5aea0:	add	x24, x8, x23
   5aea4:	ldr	x8, [sp, #48]
   5aea8:	cmp	x24, x8
   5aeac:	b.le	5ab38 <mpfr_beta@@Base+0x514>
   5aeb0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5aeb4:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5aeb8:	adrp	x2, 5f000 <mpfr_l2b_3_1__tab@@Base>
   5aebc:	add	x0, x0, #0x5a1
   5aec0:	add	x2, x2, #0x60d
   5aec4:	mov	w1, #0x108                 	// #264
   5aec8:	bl	cb20 <mpfr_assert_fail@plt>
   5aecc:	b	5ab1c <mpfr_beta@@Base+0x4f8>
   5aed0:	ldr	w8, [x21, #8]
   5aed4:	ldr	w9, [x22, #8]
   5aed8:	cmp	w8, w9
   5aedc:	b.ne	5aeec <mpfr_beta@@Base+0x8c8>  // b.any
   5aee0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5aee4:	str	x9, [x19, #16]
   5aee8:	b	5aa28 <mpfr_beta@@Base+0x404>
   5aeec:	str	x20, [x19, #16]
   5aef0:	b	5a874 <mpfr_beta@@Base+0x250>
   5aef4:	ldr	x8, [x22, #16]
   5aef8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5aefc:	orr	x8, x8, #0x2
   5af00:	cmp	x8, x9
   5af04:	b.eq	5af14 <mpfr_beta@@Base+0x8f0>  // b.none
   5af08:	mov	x0, x22
   5af0c:	bl	c1a0 <mpfr_integer_p@plt>
   5af10:	cbz	w0, 5af80 <mpfr_beta@@Base+0x95c>
   5af14:	str	x23, [x19, #16]
   5af18:	b	5a874 <mpfr_beta@@Base+0x250>
   5af1c:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5af20:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   5af24:	add	x0, x0, #0x5a1
   5af28:	add	x2, x2, #0xbf
   5af2c:	mov	w1, #0xc6                  	// #198
   5af30:	bl	cb20 <mpfr_assert_fail@plt>
   5af34:	b	5a968 <mpfr_beta@@Base+0x344>
   5af38:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5af3c:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   5af40:	add	x0, x0, #0x5a1
   5af44:	add	x2, x2, #0xbf
   5af48:	mov	w1, #0xc8                  	// #200
   5af4c:	bl	cb20 <mpfr_assert_fail@plt>
   5af50:	mov	x0, x21
   5af54:	bl	cc80 <mpfr_odd_p@plt>
   5af58:	cbnz	w0, 5a98c <mpfr_beta@@Base+0x368>
   5af5c:	sub	x2, x29, #0x28
   5af60:	mov	x0, x19
   5af64:	mov	x1, x21
   5af68:	mov	w3, w20
   5af6c:	bl	c8b0 <mpfr_beta@plt>
   5af70:	mov	w21, w0
   5af74:	sub	x0, x29, #0x28
   5af78:	bl	c0b0 <mpfr_clear@plt>
   5af7c:	b	5a67c <mpfr_beta@@Base+0x58>
   5af80:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5af84:	ldr	x1, [x0, #2640]
   5af88:	add	x0, x0, #0xa50
   5af8c:	blr	x1
   5af90:	mrs	x25, tpidr_el0
   5af94:	ldr	w26, [x25, x0]
   5af98:	mov	x20, x0
   5af9c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5afa0:	ldr	x1, [x0, #2576]
   5afa4:	add	x0, x0, #0xa10
   5afa8:	blr	x1
   5afac:	ldr	x27, [x25, x0]
   5afb0:	mov	x23, x0
   5afb4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5afb8:	ldr	x1, [x0, #2608]
   5afbc:	add	x0, x0, #0xa30
   5afc0:	blr	x1
   5afc4:	ldr	x28, [x25, x0]
   5afc8:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   5afcc:	str	x8, [x25, x23]
   5afd0:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   5afd4:	mov	x24, x0
   5afd8:	str	x8, [x25, x0]
   5afdc:	add	x0, sp, #0x38
   5afe0:	mov	w1, #0x1                   	// #1
   5afe4:	bl	ca60 <mpfr_init2@plt>
   5afe8:	add	x0, sp, #0x38
   5afec:	mov	w1, #0x1                   	// #1
   5aff0:	mov	x2, xzr
   5aff4:	mov	w3, wzr
   5aff8:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   5affc:	add	x0, sp, #0x38
   5b000:	sub	x1, x29, #0x28
   5b004:	add	x3, sp, #0x38
   5b008:	mov	w4, #0x3                   	// #3
   5b00c:	mov	x2, x22
   5b010:	bl	cc50 <mpfr_fmodquo@plt>
   5b014:	add	x0, sp, #0x38
   5b018:	bl	c0b0 <mpfr_clear@plt>
   5b01c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5b020:	str	w26, [x25, x20]
   5b024:	str	x27, [x25, x23]
   5b028:	str	x28, [x25, x24]
   5b02c:	str	x8, [x19, #16]
   5b030:	ldur	x8, [x29, #-40]
   5b034:	mov	w21, wzr
   5b038:	tst	x8, #0x1
   5b03c:	mov	w8, #0x1                   	// #1
   5b040:	cneg	w8, w8, ne  // ne = any
   5b044:	str	w8, [x19, #8]
   5b048:	b	5a67c <mpfr_beta@@Base+0x58>
   5b04c:	mov	w8, #0x1                   	// #1
   5b050:	sub	x2, x8, x26
   5b054:	b	5b064 <mpfr_beta@@Base+0xa40>
   5b058:	ldr	x8, [x21, #16]
   5b05c:	mov	w9, #0x1                   	// #1
   5b060:	sub	x2, x9, x8
   5b064:	sub	x0, x29, #0x48
   5b068:	mov	w1, #0x1                   	// #1
   5b06c:	mov	w3, wzr
   5b070:	bl	c5e0 <mpfr_set_ui_2exp@plt>
   5b074:	b	5b0a0 <mpfr_beta@@Base+0xa7c>
   5b078:	mov	w8, #0x1                   	// #1
   5b07c:	sub	x2, x8, x26
   5b080:	sub	x0, x29, #0x48
   5b084:	mov	x1, #0xffffffffffffffff    	// #-1
   5b088:	b	5b098 <mpfr_beta@@Base+0xa74>
   5b08c:	sub	x0, x29, #0x48
   5b090:	mov	x1, #0xffffffffffffffff    	// #-1
   5b094:	mov	w2, #0x2                   	// #2
   5b098:	mov	w3, wzr
   5b09c:	bl	bae0 <mpfr_set_si_2exp@plt>
   5b0a0:	ldr	w26, [sp, #44]
   5b0a4:	ldp	x28, x27, [sp, #24]
   5b0a8:	ldur	w3, [x29, #-64]
   5b0ac:	sub	x1, x29, #0x48
   5b0b0:	mov	x0, x19
   5b0b4:	mov	w2, w20
   5b0b8:	bl	c690 <mpfr_set4@plt>
   5b0bc:	ldr	x1, [sp, #56]
   5b0c0:	mov	w21, w0
   5b0c4:	cbz	x1, 5b0d0 <mpfr_beta@@Base+0xaac>
   5b0c8:	ldr	x0, [sp, #64]
   5b0cc:	bl	cc00 <mpfr_free_func@plt>
   5b0d0:	sub	x0, x29, #0x28
   5b0d4:	bl	c0b0 <mpfr_clear@plt>
   5b0d8:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b0dc:	ldr	x1, [x0, #2640]
   5b0e0:	add	x0, x0, #0xa50
   5b0e4:	blr	x1
   5b0e8:	str	w26, [x25, x0]
   5b0ec:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b0f0:	ldr	x1, [x0, #2576]
   5b0f4:	add	x0, x0, #0xa10
   5b0f8:	blr	x1
   5b0fc:	str	x28, [x25, x0]
   5b100:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b104:	ldr	x1, [x0, #2608]
   5b108:	add	x0, x0, #0xa30
   5b10c:	blr	x1
   5b110:	str	x27, [x25, x0]
   5b114:	ldr	x8, [x19, #16]
   5b118:	cmp	x8, x27
   5b11c:	b.gt	5b148 <mpfr_beta@@Base+0xb24>
   5b120:	cmp	x8, x28
   5b124:	b.lt	5b148 <mpfr_beta@@Base+0xb24>  // b.tstop
   5b128:	cbz	w21, 5a67c <mpfr_beta@@Base+0x58>
   5b12c:	orr	w8, w26, #0x8
   5b130:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b134:	ldr	x1, [x0, #2640]
   5b138:	add	x0, x0, #0xa50
   5b13c:	blr	x1
   5b140:	str	w8, [x25, x0]
   5b144:	b	5a67c <mpfr_beta@@Base+0x58>
   5b148:	mov	x0, x19
   5b14c:	mov	w1, w21
   5b150:	mov	w2, w20
   5b154:	bl	cb10 <mpfr_check_range@plt>
   5b158:	b	5a678 <mpfr_beta@@Base+0x54>

000000000005b15c <mpfr_odd_p@@Base>:
   5b15c:	stp	x29, x30, [sp, #-48]!
   5b160:	stp	x20, x19, [sp, #32]
   5b164:	str	x21, [sp, #16]
   5b168:	ldr	x21, [x0, #16]
   5b16c:	mov	x29, sp
   5b170:	cmp	x21, #0x1
   5b174:	b.lt	5b228 <mpfr_odd_p@@Base+0xcc>  // b.tstop
   5b178:	ldr	x8, [x0]
   5b17c:	mov	x19, x0
   5b180:	cmp	x21, x8
   5b184:	b.gt	5b228 <mpfr_odd_p@@Base+0xcc>
   5b188:	sub	x9, x8, #0x1
   5b18c:	add	x8, x8, #0x3e
   5b190:	cmp	x9, #0x0
   5b194:	csel	x8, x8, x9, lt  // lt = tstop
   5b198:	and	x8, x8, #0xffffffffffffffc0
   5b19c:	sub	x8, x8, x21
   5b1a0:	add	x9, x8, #0x40
   5b1a4:	add	x8, x8, #0x7f
   5b1a8:	cmp	x9, #0x0
   5b1ac:	csel	x8, x8, x9, lt  // lt = tstop
   5b1b0:	cmn	x9, #0x40
   5b1b4:	asr	x20, x8, #6
   5b1b8:	b.le	5b1e4 <mpfr_odd_p@@Base+0x88>
   5b1bc:	ldr	x8, [x19, #24]
   5b1c0:	ands	x10, x21, #0x3f
   5b1c4:	ldr	x9, [x8, x20, lsl #3]
   5b1c8:	b.eq	5b20c <mpfr_odd_p@@Base+0xb0>  // b.none
   5b1cc:	sub	x10, x10, #0x1
   5b1d0:	lsl	x9, x9, x10
   5b1d4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   5b1d8:	cmp	x9, x10
   5b1dc:	b.eq	5b210 <mpfr_odd_p@@Base+0xb4>  // b.none
   5b1e0:	b	5b228 <mpfr_odd_p@@Base+0xcc>
   5b1e4:	adrp	x0, 65000 <mpfr_bases@@Base+0x1758>
   5b1e8:	adrp	x2, 65000 <mpfr_bases@@Base+0x1758>
   5b1ec:	add	x0, x0, #0x5ec
   5b1f0:	add	x2, x2, #0x5f4
   5b1f4:	mov	w1, #0x3c                  	// #60
   5b1f8:	bl	cb20 <mpfr_assert_fail@plt>
   5b1fc:	ldr	x8, [x19, #24]
   5b200:	ands	x10, x21, #0x3f
   5b204:	ldr	x9, [x8, x20, lsl #3]
   5b208:	b.ne	5b1cc <mpfr_odd_p@@Base+0x70>  // b.any
   5b20c:	tbz	w9, #0, 5b228 <mpfr_odd_p@@Base+0xcc>
   5b210:	sub	x8, x8, #0x8
   5b214:	subs	x9, x20, #0x1
   5b218:	b.lt	5b23c <mpfr_odd_p@@Base+0xe0>  // b.tstop
   5b21c:	ldr	x10, [x8, x20, lsl #3]
   5b220:	mov	x20, x9
   5b224:	cbz	x10, 5b214 <mpfr_odd_p@@Base+0xb8>
   5b228:	mov	w0, wzr
   5b22c:	ldp	x20, x19, [sp, #32]
   5b230:	ldr	x21, [sp, #16]
   5b234:	ldp	x29, x30, [sp], #48
   5b238:	ret
   5b23c:	mov	w0, #0x1                   	// #1
   5b240:	ldp	x20, x19, [sp, #32]
   5b244:	ldr	x21, [sp, #16]
   5b248:	ldp	x29, x30, [sp], #48
   5b24c:	ret

000000000005b250 <mpfr_get_q@@Base>:
   5b250:	stp	x29, x30, [sp, #-32]!
   5b254:	stp	x20, x19, [sp, #16]
   5b258:	mov	x20, x1
   5b25c:	mov	x19, x0
   5b260:	add	x0, x0, #0x10
   5b264:	mov	w1, #0x1                   	// #1
   5b268:	mov	x29, sp
   5b26c:	bl	bd00 <__gmpz_set_ui@plt>
   5b270:	ldr	x8, [x20, #16]
   5b274:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5b278:	cmp	x8, x9
   5b27c:	b.le	5b2c0 <mpfr_get_q@@Base+0x70>
   5b280:	mov	x0, x19
   5b284:	mov	x1, x20
   5b288:	bl	caa0 <mpfr_get_z_2exp@plt>
   5b28c:	mov	x2, x0
   5b290:	tbnz	x0, #63, 5b2a8 <mpfr_get_q@@Base+0x58>
   5b294:	mov	x0, x19
   5b298:	mov	x1, x19
   5b29c:	ldp	x20, x19, [sp, #16]
   5b2a0:	ldp	x29, x30, [sp], #32
   5b2a4:	b	c230 <__gmpz_mul_2exp@plt>
   5b2a8:	mov	x0, x19
   5b2ac:	mov	x1, x19
   5b2b0:	ldp	x20, x19, [sp, #16]
   5b2b4:	neg	x2, x2
   5b2b8:	ldp	x29, x30, [sp], #32
   5b2bc:	b	cad0 <__gmpq_div_2exp@plt>
   5b2c0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   5b2c4:	cmp	x8, x9
   5b2c8:	b.ne	5b2e0 <mpfr_get_q@@Base+0x90>  // b.any
   5b2cc:	mov	x0, x19
   5b2d0:	ldp	x20, x19, [sp, #16]
   5b2d4:	mov	x1, xzr
   5b2d8:	ldp	x29, x30, [sp], #32
   5b2dc:	b	bd00 <__gmpz_set_ui@plt>
   5b2e0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b2e4:	ldr	x1, [x0, #2640]
   5b2e8:	add	x0, x0, #0xa50
   5b2ec:	blr	x1
   5b2f0:	mrs	x8, tpidr_el0
   5b2f4:	ldr	w9, [x8, x0]
   5b2f8:	orr	w9, w9, #0x10
   5b2fc:	str	w9, [x8, x0]
   5b300:	b	5b2cc <mpfr_get_q@@Base+0x7c>

000000000005b304 <mpfr_mpz_init@@Base>:
   5b304:	stp	x29, x30, [sp, #-16]!
   5b308:	mov	x29, sp
   5b30c:	mov	x8, x0
   5b310:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b314:	ldr	x1, [x0, #2560]
   5b318:	add	x0, x0, #0xa00
   5b31c:	blr	x1
   5b320:	mrs	x9, tpidr_el0
   5b324:	ldr	w10, [x9, x0]
   5b328:	subs	w10, w10, #0x1
   5b32c:	b.lt	5b36c <mpfr_mpz_init@@Base+0x68>  // b.tstop
   5b330:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b334:	ldr	x1, [x0, #2560]
   5b338:	add	x0, x0, #0xa00
   5b33c:	blr	x1
   5b340:	str	w10, [x9, x0]
   5b344:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b348:	ldr	x1, [x0, #2544]
   5b34c:	add	x0, x0, #0x9f0
   5b350:	blr	x1
   5b354:	add	x9, x9, x0
   5b358:	ldr	q0, [x9, w10, sxtw #4]
   5b35c:	str	q0, [x8]
   5b360:	str	wzr, [x8, #4]
   5b364:	ldp	x29, x30, [sp], #16
   5b368:	ret
   5b36c:	mov	x0, x8
   5b370:	ldp	x29, x30, [sp], #16
   5b374:	b	cb30 <__gmpz_init@plt>

000000000005b378 <mpfr_mpz_init2@@Base>:
   5b378:	stp	x29, x30, [sp, #-16]!
   5b37c:	mov	x29, sp
   5b380:	mov	x9, x1
   5b384:	mov	x8, x0
   5b388:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b38c:	ldr	x1, [x0, #2560]
   5b390:	add	x0, x0, #0xa00
   5b394:	blr	x1
   5b398:	cmp	x9, #0x800
   5b39c:	b.hi	5b3ec <mpfr_mpz_init2@@Base+0x74>  // b.pmore
   5b3a0:	mrs	x10, tpidr_el0
   5b3a4:	ldr	w11, [x10, x0]
   5b3a8:	subs	w11, w11, #0x1
   5b3ac:	b.lt	5b3ec <mpfr_mpz_init2@@Base+0x74>  // b.tstop
   5b3b0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b3b4:	ldr	x1, [x0, #2560]
   5b3b8:	add	x0, x0, #0xa00
   5b3bc:	blr	x1
   5b3c0:	str	w11, [x10, x0]
   5b3c4:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b3c8:	ldr	x1, [x0, #2544]
   5b3cc:	add	x0, x0, #0x9f0
   5b3d0:	blr	x1
   5b3d4:	add	x9, x10, x0
   5b3d8:	ldr	q0, [x9, w11, sxtw #4]
   5b3dc:	str	q0, [x8]
   5b3e0:	str	wzr, [x8, #4]
   5b3e4:	ldp	x29, x30, [sp], #16
   5b3e8:	ret
   5b3ec:	mov	x0, x8
   5b3f0:	mov	x1, x9
   5b3f4:	ldp	x29, x30, [sp], #16
   5b3f8:	b	ca70 <__gmpz_init2@plt>

000000000005b3fc <mpfr_mpz_clear@@Base>:
   5b3fc:	stp	x29, x30, [sp, #-16]!
   5b400:	mov	x29, sp
   5b404:	mov	x8, x0
   5b408:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b40c:	ldr	x1, [x0, #2560]
   5b410:	add	x0, x0, #0xa00
   5b414:	blr	x1
   5b418:	mrs	x9, tpidr_el0
   5b41c:	ldr	w10, [x9, x0]
   5b420:	cmp	w10, #0x1f
   5b424:	b.hi	5b470 <mpfr_mpz_clear@@Base+0x74>  // b.pmore
   5b428:	ldr	w11, [x8]
   5b42c:	cmp	w11, #0x20
   5b430:	b.gt	5b470 <mpfr_mpz_clear@@Base+0x74>
   5b434:	add	w11, w10, #0x1
   5b438:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b43c:	ldr	x1, [x0, #2560]
   5b440:	add	x0, x0, #0xa00
   5b444:	blr	x1
   5b448:	str	w11, [x9, x0]
   5b44c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b450:	ldr	x1, [x0, #2544]
   5b454:	add	x0, x0, #0x9f0
   5b458:	blr	x1
   5b45c:	ldr	q0, [x8]
   5b460:	add	x8, x9, x0
   5b464:	str	q0, [x8, x10, lsl #4]
   5b468:	ldp	x29, x30, [sp], #16
   5b46c:	ret
   5b470:	mov	x0, x8
   5b474:	ldp	x29, x30, [sp], #16
   5b478:	b	c630 <__gmpz_clear@plt>

000000000005b47c <mpfr_free_pool@@Base>:
   5b47c:	stp	x29, x30, [sp, #-48]!
   5b480:	str	x21, [sp, #16]
   5b484:	stp	x20, x19, [sp, #32]
   5b488:	mov	x29, sp
   5b48c:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b490:	ldr	x1, [x0, #2560]
   5b494:	add	x0, x0, #0xa00
   5b498:	blr	x1
   5b49c:	mrs	x20, tpidr_el0
   5b4a0:	ldr	w8, [x20, x0]
   5b4a4:	cmp	w8, #0x1
   5b4a8:	b.lt	5b4f0 <mpfr_free_pool@@Base+0x74>  // b.tstop
   5b4ac:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b4b0:	ldr	x1, [x0, #2544]
   5b4b4:	add	x0, x0, #0x9f0
   5b4b8:	blr	x1
   5b4bc:	mov	x21, xzr
   5b4c0:	add	x19, x20, x0
   5b4c4:	mov	x0, x19
   5b4c8:	bl	c630 <__gmpz_clear@plt>
   5b4cc:	add	x21, x21, #0x1
   5b4d0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b4d4:	ldr	x1, [x0, #2560]
   5b4d8:	add	x0, x0, #0xa00
   5b4dc:	blr	x1
   5b4e0:	ldrsw	x8, [x20, x0]
   5b4e4:	add	x19, x19, #0x10
   5b4e8:	cmp	x21, x8
   5b4ec:	b.lt	5b4c4 <mpfr_free_pool@@Base+0x48>  // b.tstop
   5b4f0:	adrp	x0, 77000 <mpfr_agm@@Base+0x68440>
   5b4f4:	ldr	x1, [x0, #2560]
   5b4f8:	add	x0, x0, #0xa00
   5b4fc:	blr	x1
   5b500:	str	wzr, [x20, x0]
   5b504:	ldp	x20, x19, [sp, #32]
   5b508:	ldr	x21, [sp, #16]
   5b50c:	ldp	x29, x30, [sp], #48
   5b510:	ret
   5b514:	nop
   5b518:	stp	x29, x30, [sp, #-48]!
   5b51c:	mov	x29, sp
   5b520:	str	q0, [sp, #16]
   5b524:	str	q1, [sp, #32]
   5b528:	ldp	x6, x1, [sp, #16]
   5b52c:	ldp	x0, x3, [sp, #32]
   5b530:	mrs	x15, fpcr
   5b534:	lsr	x7, x1, #63
   5b538:	mov	x10, x0
   5b53c:	ubfiz	x4, x3, #3, #48
   5b540:	lsr	x5, x3, #63
   5b544:	mov	x12, x7
   5b548:	ubfiz	x2, x1, #3, #48
   5b54c:	orr	x4, x4, x0, lsr #61
   5b550:	ubfx	x8, x1, #48, #15
   5b554:	ubfx	x0, x3, #48, #15
   5b558:	and	w7, w7, #0xff
   5b55c:	mov	x16, x12
   5b560:	cmp	x12, x5
   5b564:	and	w11, w5, #0xff
   5b568:	orr	x2, x2, x6, lsr #61
   5b56c:	mov	x1, x8
   5b570:	lsl	x9, x6, #3
   5b574:	mov	x3, x0
   5b578:	lsl	x13, x10, #3
   5b57c:	b.eq	5b728 <mpfr_free_pool@@Base+0x2ac>  // b.none
   5b580:	sub	w0, w8, w0
   5b584:	cmp	w0, #0x0
   5b588:	b.le	5b6d4 <mpfr_free_pool@@Base+0x258>
   5b58c:	cbz	x3, 5b788 <mpfr_free_pool@@Base+0x30c>
   5b590:	orr	x4, x4, #0x8000000000000
   5b594:	mov	x3, #0x7fff                	// #32767
   5b598:	cmp	x1, x3
   5b59c:	b.eq	5b98c <mpfr_free_pool@@Base+0x510>  // b.none
   5b5a0:	cmp	w0, #0x74
   5b5a4:	b.gt	5ba10 <mpfr_free_pool@@Base+0x594>
   5b5a8:	cmp	w0, #0x3f
   5b5ac:	b.gt	5bb70 <mpfr_free_pool@@Base+0x6f4>
   5b5b0:	mov	w3, #0x40                  	// #64
   5b5b4:	sub	w3, w3, w0
   5b5b8:	lsr	x6, x13, x0
   5b5bc:	lsl	x13, x13, x3
   5b5c0:	cmp	x13, #0x0
   5b5c4:	cset	x5, ne  // ne = any
   5b5c8:	lsl	x3, x4, x3
   5b5cc:	orr	x3, x3, x6
   5b5d0:	lsr	x0, x4, x0
   5b5d4:	orr	x3, x3, x5
   5b5d8:	sub	x2, x2, x0
   5b5dc:	subs	x9, x9, x3
   5b5e0:	sbc	x2, x2, xzr
   5b5e4:	and	x3, x2, #0x7ffffffffffff
   5b5e8:	tbz	x2, #51, 5b7c8 <mpfr_free_pool@@Base+0x34c>
   5b5ec:	cbz	x3, 5b9f4 <mpfr_free_pool@@Base+0x578>
   5b5f0:	clz	x0, x3
   5b5f4:	sub	w0, w0, #0xc
   5b5f8:	neg	w2, w0
   5b5fc:	lsl	x4, x3, x0
   5b600:	lsl	x3, x9, x0
   5b604:	lsr	x9, x9, x2
   5b608:	orr	x2, x9, x4
   5b60c:	cmp	x1, w0, sxtw
   5b610:	sxtw	x4, w0
   5b614:	b.gt	5b9d4 <mpfr_free_pool@@Base+0x558>
   5b618:	sub	w1, w0, w1
   5b61c:	add	w0, w1, #0x1
   5b620:	cmp	w0, #0x3f
   5b624:	b.gt	5bb38 <mpfr_free_pool@@Base+0x6bc>
   5b628:	mov	w1, #0x40                  	// #64
   5b62c:	sub	w1, w1, w0
   5b630:	lsr	x4, x3, x0
   5b634:	lsl	x3, x3, x1
   5b638:	cmp	x3, #0x0
   5b63c:	lsl	x9, x2, x1
   5b640:	cset	x1, ne  // ne = any
   5b644:	orr	x9, x9, x4
   5b648:	lsr	x2, x2, x0
   5b64c:	orr	x9, x9, x1
   5b650:	orr	x8, x9, x2
   5b654:	cbz	x8, 5b7dc <mpfr_free_pool@@Base+0x360>
   5b658:	and	x0, x9, #0x7
   5b65c:	mov	x1, #0x0                   	// #0
   5b660:	mov	w5, #0x1                   	// #1
   5b664:	cbz	x0, 5ba20 <mpfr_free_pool@@Base+0x5a4>
   5b668:	and	x3, x15, #0xc00000
   5b66c:	cmp	x3, #0x400, lsl #12
   5b670:	b.eq	5b964 <mpfr_free_pool@@Base+0x4e8>  // b.none
   5b674:	cmp	x3, #0x800, lsl #12
   5b678:	b.eq	5b944 <mpfr_free_pool@@Base+0x4c8>  // b.none
   5b67c:	cbz	x3, 5b970 <mpfr_free_pool@@Base+0x4f4>
   5b680:	and	x3, x2, #0x8000000000000
   5b684:	mov	w0, #0x10                  	// #16
   5b688:	cbz	w5, 5b690 <mpfr_free_pool@@Base+0x214>
   5b68c:	orr	w0, w0, #0x8
   5b690:	cbz	x3, 5b9a8 <mpfr_free_pool@@Base+0x52c>
   5b694:	add	x1, x1, #0x1
   5b698:	mov	x3, #0x7fff                	// #32767
   5b69c:	cmp	x1, x3
   5b6a0:	b.eq	5b88c <mpfr_free_pool@@Base+0x410>  // b.none
   5b6a4:	and	w1, w1, #0x7fff
   5b6a8:	extr	x8, x2, x9, #3
   5b6ac:	ubfx	x2, x2, #3, #48
   5b6b0:	mov	x5, #0x0                   	// #0
   5b6b4:	orr	w1, w1, w7, lsl #15
   5b6b8:	bfxil	x5, x2, #0, #48
   5b6bc:	fmov	d0, x8
   5b6c0:	bfi	x5, x1, #48, #16
   5b6c4:	fmov	v0.d[1], x5
   5b6c8:	cbnz	w0, 5b8e8 <mpfr_free_pool@@Base+0x46c>
   5b6cc:	ldp	x29, x30, [sp], #48
   5b6d0:	ret
   5b6d4:	mov	x14, x5
   5b6d8:	b.eq	5b7f4 <mpfr_free_pool@@Base+0x378>  // b.none
   5b6dc:	cbnz	x8, 5ba78 <mpfr_free_pool@@Base+0x5fc>
   5b6e0:	orr	x1, x2, x9
   5b6e4:	cbz	x1, 5b7a4 <mpfr_free_pool@@Base+0x328>
   5b6e8:	cmn	w0, #0x1
   5b6ec:	b.eq	5be94 <mpfr_free_pool@@Base+0xa18>  // b.none
   5b6f0:	mov	x1, #0x7fff                	// #32767
   5b6f4:	mvn	w0, w0
   5b6f8:	cmp	x3, x1
   5b6fc:	b.ne	5ba8c <mpfr_free_pool@@Base+0x610>  // b.any
   5b700:	orr	x0, x4, x13
   5b704:	cbnz	x0, 5bdec <mpfr_free_pool@@Base+0x970>
   5b708:	mov	x16, x14
   5b70c:	nop
   5b710:	mov	x4, #0x0                   	// #0
   5b714:	fmov	d0, x4
   5b718:	lsl	x16, x16, #63
   5b71c:	orr	x5, x16, #0x7fff000000000000
   5b720:	fmov	v0.d[1], x5
   5b724:	b	5b6cc <mpfr_free_pool@@Base+0x250>
   5b728:	sub	w5, w8, w0
   5b72c:	cmp	w5, #0x0
   5b730:	b.le	5b8fc <mpfr_free_pool@@Base+0x480>
   5b734:	cbz	x0, 5b83c <mpfr_free_pool@@Base+0x3c0>
   5b738:	orr	x4, x4, #0x8000000000000
   5b73c:	mov	x0, #0x7fff                	// #32767
   5b740:	cmp	x1, x0
   5b744:	b.eq	5b98c <mpfr_free_pool@@Base+0x510>  // b.none
   5b748:	cmp	w5, #0x74
   5b74c:	b.gt	5bb20 <mpfr_free_pool@@Base+0x6a4>
   5b750:	cmp	w5, #0x3f
   5b754:	b.gt	5bc20 <mpfr_free_pool@@Base+0x7a4>
   5b758:	mov	w0, #0x40                  	// #64
   5b75c:	sub	w0, w0, w5
   5b760:	lsr	x6, x13, x5
   5b764:	lsl	x13, x13, x0
   5b768:	cmp	x13, #0x0
   5b76c:	lsl	x0, x4, x0
   5b770:	cset	x3, ne  // ne = any
   5b774:	orr	x0, x0, x6
   5b778:	lsr	x4, x4, x5
   5b77c:	orr	x0, x0, x3
   5b780:	add	x2, x2, x4
   5b784:	b	5bb2c <mpfr_free_pool@@Base+0x6b0>
   5b788:	orr	x3, x4, x13
   5b78c:	cbz	x3, 5bafc <mpfr_free_pool@@Base+0x680>
   5b790:	subs	w0, w0, #0x1
   5b794:	b.ne	5b594 <mpfr_free_pool@@Base+0x118>  // b.any
   5b798:	subs	x9, x9, x13
   5b79c:	sbc	x2, x2, x4
   5b7a0:	b	5b5e4 <mpfr_free_pool@@Base+0x168>
   5b7a4:	mov	x0, #0x7fff                	// #32767
   5b7a8:	cmp	x3, x0
   5b7ac:	b.eq	5bee0 <mpfr_free_pool@@Base+0xa64>  // b.none
   5b7b0:	mov	w7, w11
   5b7b4:	mov	x2, x4
   5b7b8:	mov	x9, x13
   5b7bc:	mov	x1, x3
   5b7c0:	mov	x12, x5
   5b7c4:	nop
   5b7c8:	orr	x8, x9, x2
   5b7cc:	and	x0, x9, #0x7
   5b7d0:	mov	w5, #0x0                   	// #0
   5b7d4:	cbnz	x1, 5b664 <mpfr_free_pool@@Base+0x1e8>
   5b7d8:	cbnz	x8, 5b658 <mpfr_free_pool@@Base+0x1dc>
   5b7dc:	mov	x2, #0x0                   	// #0
   5b7e0:	mov	x1, #0x0                   	// #0
   5b7e4:	mov	w0, #0x0                   	// #0
   5b7e8:	and	x2, x2, #0xffffffffffff
   5b7ec:	and	w1, w1, #0x7fff
   5b7f0:	b	5b6b0 <mpfr_free_pool@@Base+0x234>
   5b7f4:	add	x5, x8, #0x1
   5b7f8:	tst	x5, #0x7ffe
   5b7fc:	b.ne	5bacc <mpfr_free_pool@@Base+0x650>  // b.any
   5b800:	orr	x5, x2, x9
   5b804:	orr	x8, x4, x13
   5b808:	cbnz	x1, 5bc8c <mpfr_free_pool@@Base+0x810>
   5b80c:	cbz	x5, 5bd34 <mpfr_free_pool@@Base+0x8b8>
   5b810:	cbz	x8, 5bd48 <mpfr_free_pool@@Base+0x8cc>
   5b814:	subs	x5, x9, x13
   5b818:	cmp	x9, x13
   5b81c:	sbc	x3, x2, x4
   5b820:	tbz	x3, #51, 5bf14 <mpfr_free_pool@@Base+0xa98>
   5b824:	subs	x9, x13, x9
   5b828:	mov	w7, w11
   5b82c:	sbc	x2, x4, x2
   5b830:	mov	x12, x14
   5b834:	orr	x8, x9, x2
   5b838:	b	5b654 <mpfr_free_pool@@Base+0x1d8>
   5b83c:	orr	x0, x4, x13
   5b840:	cbz	x0, 5bd14 <mpfr_free_pool@@Base+0x898>
   5b844:	subs	w5, w5, #0x1
   5b848:	b.ne	5b73c <mpfr_free_pool@@Base+0x2c0>  // b.any
   5b84c:	adds	x9, x9, x13
   5b850:	adc	x2, x4, x2
   5b854:	nop
   5b858:	tbz	x2, #51, 5b7c8 <mpfr_free_pool@@Base+0x34c>
   5b85c:	add	x1, x1, #0x1
   5b860:	mov	x0, #0x7fff                	// #32767
   5b864:	cmp	x1, x0
   5b868:	b.eq	5bd54 <mpfr_free_pool@@Base+0x8d8>  // b.none
   5b86c:	and	x0, x9, #0x1
   5b870:	and	x3, x2, #0xfff7ffffffffffff
   5b874:	orr	x9, x0, x9, lsr #1
   5b878:	mov	w5, #0x0                   	// #0
   5b87c:	orr	x9, x9, x2, lsl #63
   5b880:	lsr	x2, x3, #1
   5b884:	and	x0, x9, #0x7
   5b888:	b	5b664 <mpfr_free_pool@@Base+0x1e8>
   5b88c:	and	x3, x15, #0xc00000
   5b890:	cbz	x3, 5b8c8 <mpfr_free_pool@@Base+0x44c>
   5b894:	cmp	x3, #0x400, lsl #12
   5b898:	b.eq	5b8c0 <mpfr_free_pool@@Base+0x444>  // b.none
   5b89c:	cmp	x3, #0x800, lsl #12
   5b8a0:	csel	w12, w12, wzr, eq  // eq = none
   5b8a4:	cbnz	w12, 5b8c8 <mpfr_free_pool@@Base+0x44c>
   5b8a8:	mov	w1, #0x14                  	// #20
   5b8ac:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5b8b0:	orr	w0, w0, w1
   5b8b4:	mov	x8, #0xffffffffffffffff    	// #-1
   5b8b8:	mov	x1, #0x7ffe                	// #32766
   5b8bc:	b	5b7e8 <mpfr_free_pool@@Base+0x36c>
   5b8c0:	cbnz	x12, 5b8a8 <mpfr_free_pool@@Base+0x42c>
   5b8c4:	nop
   5b8c8:	mov	w1, #0x14                  	// #20
   5b8cc:	and	x16, x7, #0xff
   5b8d0:	orr	w0, w0, w1
   5b8d4:	mov	x4, #0x0                   	// #0
   5b8d8:	fmov	d0, x4
   5b8dc:	lsl	x16, x16, #63
   5b8e0:	orr	x5, x16, #0x7fff000000000000
   5b8e4:	fmov	v0.d[1], x5
   5b8e8:	str	q0, [sp, #16]
   5b8ec:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5b8f0:	ldr	q0, [sp, #16]
   5b8f4:	ldp	x29, x30, [sp], #48
   5b8f8:	ret
   5b8fc:	b.eq	5ba3c <mpfr_free_pool@@Base+0x5c0>  // b.none
   5b900:	cbnz	x8, 5bbc0 <mpfr_free_pool@@Base+0x744>
   5b904:	orr	x0, x2, x9
   5b908:	cbz	x0, 5be2c <mpfr_free_pool@@Base+0x9b0>
   5b90c:	cmn	w5, #0x1
   5b910:	b.eq	5bf8c <mpfr_free_pool@@Base+0xb10>  // b.none
   5b914:	mov	x0, #0x7fff                	// #32767
   5b918:	mvn	w5, w5
   5b91c:	cmp	x3, x0
   5b920:	b.ne	5bbd4 <mpfr_free_pool@@Base+0x758>  // b.any
   5b924:	orr	x0, x4, x13
   5b928:	cbz	x0, 5b710 <mpfr_free_pool@@Base+0x294>
   5b92c:	lsr	x5, x4, #50
   5b930:	mov	x9, x13
   5b934:	eor	x5, x5, #0x1
   5b938:	mov	x2, x4
   5b93c:	and	w5, w5, #0x1
   5b940:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5b944:	mov	w0, #0x10                  	// #16
   5b948:	cbz	x12, 5b954 <mpfr_free_pool@@Base+0x4d8>
   5b94c:	adds	x9, x9, #0x8
   5b950:	cinc	x2, x2, cs  // cs = hs, nlast
   5b954:	and	x3, x2, #0x8000000000000
   5b958:	cbz	w5, 5b690 <mpfr_free_pool@@Base+0x214>
   5b95c:	orr	w0, w0, #0x8
   5b960:	b	5b690 <mpfr_free_pool@@Base+0x214>
   5b964:	mov	w0, #0x10                  	// #16
   5b968:	cbnz	x12, 5b954 <mpfr_free_pool@@Base+0x4d8>
   5b96c:	b	5b94c <mpfr_free_pool@@Base+0x4d0>
   5b970:	and	x3, x9, #0xf
   5b974:	mov	w0, #0x10                  	// #16
   5b978:	cmp	x3, #0x4
   5b97c:	b.eq	5b954 <mpfr_free_pool@@Base+0x4d8>  // b.none
   5b980:	adds	x9, x9, #0x4
   5b984:	cinc	x2, x2, cs  // cs = hs, nlast
   5b988:	b	5b954 <mpfr_free_pool@@Base+0x4d8>
   5b98c:	orr	x0, x2, x9
   5b990:	cbz	x0, 5b710 <mpfr_free_pool@@Base+0x294>
   5b994:	lsr	x5, x2, #50
   5b998:	eor	x5, x5, #0x1
   5b99c:	and	w5, w5, #0x1
   5b9a0:	mov	w0, w5
   5b9a4:	mov	x1, #0x7fff                	// #32767
   5b9a8:	mov	x3, #0x7fff                	// #32767
   5b9ac:	extr	x8, x2, x9, #3
   5b9b0:	cmp	x1, x3
   5b9b4:	lsr	x2, x2, #3
   5b9b8:	b.ne	5b7e8 <mpfr_free_pool@@Base+0x36c>  // b.any
   5b9bc:	orr	x1, x8, x2
   5b9c0:	cbz	x1, 5c02c <mpfr_free_pool@@Base+0xbb0>
   5b9c4:	orr	x2, x2, #0x800000000000
   5b9c8:	mov	w1, #0x7fff                	// #32767
   5b9cc:	and	x2, x2, #0xffffffffffff
   5b9d0:	b	5b6b0 <mpfr_free_pool@@Base+0x234>
   5b9d4:	mov	x9, x3
   5b9d8:	and	x2, x2, #0xfff7ffffffffffff
   5b9dc:	sub	x1, x1, x4
   5b9e0:	orr	x8, x9, x2
   5b9e4:	and	x0, x9, #0x7
   5b9e8:	mov	w5, #0x0                   	// #0
   5b9ec:	cbz	x1, 5b7d8 <mpfr_free_pool@@Base+0x35c>
   5b9f0:	b	5b664 <mpfr_free_pool@@Base+0x1e8>
   5b9f4:	clz	x2, x9
   5b9f8:	add	w0, w2, #0x34
   5b9fc:	cmp	w0, #0x3f
   5ba00:	b.le	5b5f8 <mpfr_free_pool@@Base+0x17c>
   5ba04:	sub	w2, w2, #0xc
   5ba08:	lsl	x2, x9, x2
   5ba0c:	b	5b60c <mpfr_free_pool@@Base+0x190>
   5ba10:	orr	x4, x4, x13
   5ba14:	cmp	x4, #0x0
   5ba18:	cset	x3, ne  // ne = any
   5ba1c:	b	5b5dc <mpfr_free_pool@@Base+0x160>
   5ba20:	and	x3, x2, #0x8000000000000
   5ba24:	mov	w0, #0x0                   	// #0
   5ba28:	cbz	w5, 5b690 <mpfr_free_pool@@Base+0x214>
   5ba2c:	mov	w0, #0x0                   	// #0
   5ba30:	tbz	w15, #11, 5b690 <mpfr_free_pool@@Base+0x214>
   5ba34:	orr	w0, w0, #0x8
   5ba38:	b	5b690 <mpfr_free_pool@@Base+0x214>
   5ba3c:	add	x0, x8, #0x1
   5ba40:	tst	x0, #0x7ffe
   5ba44:	b.ne	5bc4c <mpfr_free_pool@@Base+0x7d0>  // b.any
   5ba48:	orr	x0, x2, x9
   5ba4c:	cbnz	x8, 5be08 <mpfr_free_pool@@Base+0x98c>
   5ba50:	orr	x8, x4, x13
   5ba54:	cbz	x0, 5be5c <mpfr_free_pool@@Base+0x9e0>
   5ba58:	cbz	x8, 5bd48 <mpfr_free_pool@@Base+0x8cc>
   5ba5c:	adds	x9, x9, x13
   5ba60:	adc	x2, x4, x2
   5ba64:	tbz	x2, #51, 5b834 <mpfr_free_pool@@Base+0x3b8>
   5ba68:	and	x2, x2, #0xfff7ffffffffffff
   5ba6c:	and	x0, x9, #0x7
   5ba70:	mov	x1, #0x1                   	// #1
   5ba74:	b	5b664 <mpfr_free_pool@@Base+0x1e8>
   5ba78:	mov	x1, #0x7fff                	// #32767
   5ba7c:	neg	w0, w0
   5ba80:	orr	x2, x2, #0x8000000000000
   5ba84:	cmp	x3, x1
   5ba88:	b.eq	5b700 <mpfr_free_pool@@Base+0x284>  // b.none
   5ba8c:	cmp	w0, #0x74
   5ba90:	b.gt	5bb9c <mpfr_free_pool@@Base+0x720>
   5ba94:	cmp	w0, #0x3f
   5ba98:	b.gt	5bdb8 <mpfr_free_pool@@Base+0x93c>
   5ba9c:	mov	w1, #0x40                  	// #64
   5baa0:	sub	w1, w1, w0
   5baa4:	lsr	x5, x9, x0
   5baa8:	lsl	x9, x9, x1
   5baac:	cmp	x9, #0x0
   5bab0:	lsl	x9, x2, x1
   5bab4:	cset	x1, ne  // ne = any
   5bab8:	orr	x9, x9, x5
   5babc:	lsr	x0, x2, x0
   5bac0:	orr	x9, x9, x1
   5bac4:	sub	x4, x4, x0
   5bac8:	b	5bba8 <mpfr_free_pool@@Base+0x72c>
   5bacc:	subs	x5, x9, x13
   5bad0:	cmp	x9, x13
   5bad4:	sbc	x3, x2, x4
   5bad8:	tbnz	x3, #51, 5bc74 <mpfr_free_pool@@Base+0x7f8>
   5badc:	orr	x8, x5, x3
   5bae0:	cbnz	x8, 5bda0 <mpfr_free_pool@@Base+0x924>
   5bae4:	and	x15, x15, #0xc00000
   5bae8:	mov	x2, #0x0                   	// #0
   5baec:	cmp	x15, #0x800, lsl #12
   5baf0:	mov	x1, #0x0                   	// #0
   5baf4:	cset	w7, eq  // eq = none
   5baf8:	b	5b7e8 <mpfr_free_pool@@Base+0x36c>
   5bafc:	mov	x0, #0x7fff                	// #32767
   5bb00:	cmp	x8, x0
   5bb04:	b.ne	5b7c8 <mpfr_free_pool@@Base+0x34c>  // b.any
   5bb08:	orr	x0, x2, x9
   5bb0c:	cbnz	x0, 5b994 <mpfr_free_pool@@Base+0x518>
   5bb10:	mov	x2, #0x0                   	// #0
   5bb14:	mov	x8, #0x0                   	// #0
   5bb18:	mov	w0, #0x0                   	// #0
   5bb1c:	b	5b9bc <mpfr_free_pool@@Base+0x540>
   5bb20:	orr	x4, x4, x13
   5bb24:	cmp	x4, #0x0
   5bb28:	cset	x0, ne  // ne = any
   5bb2c:	adds	x9, x0, x9
   5bb30:	cinc	x2, x2, cs  // cs = hs, nlast
   5bb34:	b	5b858 <mpfr_free_pool@@Base+0x3dc>
   5bb38:	mov	w4, #0x80                  	// #128
   5bb3c:	sub	w4, w4, w0
   5bb40:	cmp	w0, #0x40
   5bb44:	sub	w9, w1, #0x3f
   5bb48:	lsl	x0, x2, x4
   5bb4c:	orr	x0, x3, x0
   5bb50:	csel	x3, x0, x3, ne  // ne = any
   5bb54:	lsr	x9, x2, x9
   5bb58:	cmp	x3, #0x0
   5bb5c:	mov	x2, #0x0                   	// #0
   5bb60:	cset	x0, ne  // ne = any
   5bb64:	orr	x9, x0, x9
   5bb68:	mov	x8, x9
   5bb6c:	b	5b654 <mpfr_free_pool@@Base+0x1d8>
   5bb70:	mov	w5, #0x80                  	// #128
   5bb74:	sub	w5, w5, w0
   5bb78:	subs	w0, w0, #0x40
   5bb7c:	lsl	x5, x4, x5
   5bb80:	orr	x5, x13, x5
   5bb84:	csel	x13, x5, x13, ne  // ne = any
   5bb88:	lsr	x4, x4, x0
   5bb8c:	cmp	x13, #0x0
   5bb90:	cset	x3, ne  // ne = any
   5bb94:	orr	x3, x3, x4
   5bb98:	b	5b5dc <mpfr_free_pool@@Base+0x160>
   5bb9c:	orr	x2, x2, x9
   5bba0:	cmp	x2, #0x0
   5bba4:	cset	x9, ne  // ne = any
   5bba8:	subs	x9, x13, x9
   5bbac:	mov	w7, w11
   5bbb0:	sbc	x2, x4, xzr
   5bbb4:	mov	x1, x3
   5bbb8:	mov	x12, x14
   5bbbc:	b	5b5e4 <mpfr_free_pool@@Base+0x168>
   5bbc0:	mov	x0, #0x7fff                	// #32767
   5bbc4:	neg	w5, w5
   5bbc8:	orr	x2, x2, #0x8000000000000
   5bbcc:	cmp	x3, x0
   5bbd0:	b.eq	5b924 <mpfr_free_pool@@Base+0x4a8>  // b.none
   5bbd4:	cmp	w5, #0x74
   5bbd8:	b.gt	5bda8 <mpfr_free_pool@@Base+0x92c>
   5bbdc:	cmp	w5, #0x3f
   5bbe0:	b.gt	5be68 <mpfr_free_pool@@Base+0x9ec>
   5bbe4:	mov	w1, #0x40                  	// #64
   5bbe8:	sub	w1, w1, w5
   5bbec:	lsr	x6, x9, x5
   5bbf0:	lsl	x9, x9, x1
   5bbf4:	cmp	x9, #0x0
   5bbf8:	cset	x0, ne  // ne = any
   5bbfc:	lsl	x9, x2, x1
   5bc00:	orr	x9, x9, x6
   5bc04:	lsr	x5, x2, x5
   5bc08:	orr	x9, x9, x0
   5bc0c:	add	x4, x4, x5
   5bc10:	adds	x9, x9, x13
   5bc14:	mov	x1, x3
   5bc18:	cinc	x2, x4, cs  // cs = hs, nlast
   5bc1c:	b	5b858 <mpfr_free_pool@@Base+0x3dc>
   5bc20:	mov	w0, #0x80                  	// #128
   5bc24:	sub	w0, w0, w5
   5bc28:	subs	w5, w5, #0x40
   5bc2c:	lsl	x0, x4, x0
   5bc30:	orr	x0, x13, x0
   5bc34:	csel	x13, x0, x13, ne  // ne = any
   5bc38:	lsr	x4, x4, x5
   5bc3c:	cmp	x13, #0x0
   5bc40:	cset	x0, ne  // ne = any
   5bc44:	orr	x0, x0, x4
   5bc48:	b	5bb2c <mpfr_free_pool@@Base+0x6b0>
   5bc4c:	mov	x1, #0x7fff                	// #32767
   5bc50:	cmp	x0, x1
   5bc54:	b.eq	5beb0 <mpfr_free_pool@@Base+0xa34>  // b.none
   5bc58:	adds	x9, x9, x13
   5bc5c:	mov	x1, x0
   5bc60:	adc	x2, x4, x2
   5bc64:	ubfx	x0, x9, #1, #3
   5bc68:	extr	x9, x2, x9, #1
   5bc6c:	lsr	x2, x2, #1
   5bc70:	b	5b664 <mpfr_free_pool@@Base+0x1e8>
   5bc74:	cmp	x13, x9
   5bc78:	mov	w7, w11
   5bc7c:	sbc	x3, x4, x2
   5bc80:	sub	x9, x13, x9
   5bc84:	mov	x12, x14
   5bc88:	b	5b5ec <mpfr_free_pool@@Base+0x170>
   5bc8c:	mov	x12, #0x7fff                	// #32767
   5bc90:	cmp	x1, x12
   5bc94:	b.eq	5bcc0 <mpfr_free_pool@@Base+0x844>  // b.none
   5bc98:	cmp	x3, x12
   5bc9c:	b.eq	5bef0 <mpfr_free_pool@@Base+0xa74>  // b.none
   5bca0:	cbnz	x5, 5bcd8 <mpfr_free_pool@@Base+0x85c>
   5bca4:	mov	w5, w0
   5bca8:	cbnz	x8, 5bfd0 <mpfr_free_pool@@Base+0xb54>
   5bcac:	mov	w7, #0x0                   	// #0
   5bcb0:	mov	x2, #0xffffffffffff        	// #281474976710655
   5bcb4:	mov	w0, #0x1                   	// #1
   5bcb8:	mov	x8, #0xffffffffffffffff    	// #-1
   5bcbc:	b	5b9c4 <mpfr_free_pool@@Base+0x548>
   5bcc0:	cbz	x5, 5bfec <mpfr_free_pool@@Base+0xb70>
   5bcc4:	lsr	x0, x2, #50
   5bcc8:	cmp	x3, x1
   5bccc:	eor	x0, x0, #0x1
   5bcd0:	and	w0, w0, #0x1
   5bcd4:	b.eq	5bef0 <mpfr_free_pool@@Base+0xa74>  // b.none
   5bcd8:	cbz	x8, 5bf0c <mpfr_free_pool@@Base+0xa90>
   5bcdc:	bfi	x6, x2, #61, #3
   5bce0:	lsr	x3, x2, #3
   5bce4:	tbz	x2, #50, 5bd00 <mpfr_free_pool@@Base+0x884>
   5bce8:	lsr	x1, x4, #3
   5bcec:	tbnz	x4, #50, 5bd00 <mpfr_free_pool@@Base+0x884>
   5bcf0:	mov	x6, x10
   5bcf4:	mov	w7, w11
   5bcf8:	bfi	x6, x4, #61, #3
   5bcfc:	mov	x3, x1
   5bd00:	extr	x2, x3, x6, #61
   5bd04:	bfi	x6, x2, #61, #3
   5bd08:	lsr	x2, x2, #3
   5bd0c:	mov	x8, x6
   5bd10:	b	5b9bc <mpfr_free_pool@@Base+0x540>
   5bd14:	mov	x0, #0x7fff                	// #32767
   5bd18:	cmp	x8, x0
   5bd1c:	b.ne	5b7c8 <mpfr_free_pool@@Base+0x34c>  // b.any
   5bd20:	orr	x0, x2, x9
   5bd24:	cbz	x0, 5bb10 <mpfr_free_pool@@Base+0x694>
   5bd28:	lsr	x5, x2, #50
   5bd2c:	eor	w5, w5, #0x1
   5bd30:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5bd34:	cbz	x8, 5be48 <mpfr_free_pool@@Base+0x9cc>
   5bd38:	mov	w7, w11
   5bd3c:	mov	x2, x4
   5bd40:	mov	x9, x13
   5bd44:	mov	x12, x14
   5bd48:	mov	x1, #0x0                   	// #0
   5bd4c:	mov	x3, #0x0                   	// #0
   5bd50:	b	5ba2c <mpfr_free_pool@@Base+0x5b0>
   5bd54:	ands	x3, x15, #0xc00000
   5bd58:	b.eq	5bde4 <mpfr_free_pool@@Base+0x968>  // b.none
   5bd5c:	cmp	x3, #0x400, lsl #12
   5bd60:	eor	w0, w7, #0x1
   5bd64:	cset	w1, eq  // eq = none
   5bd68:	tst	w1, w0
   5bd6c:	b.ne	5c008 <mpfr_free_pool@@Base+0xb8c>  // b.any
   5bd70:	cmp	x3, #0x800, lsl #12
   5bd74:	b.eq	5bfb4 <mpfr_free_pool@@Base+0xb38>  // b.none
   5bd78:	cmp	x3, #0x400, lsl #12
   5bd7c:	mov	w0, #0x14                  	// #20
   5bd80:	b.ne	5b890 <mpfr_free_pool@@Base+0x414>  // b.any
   5bd84:	mov	x2, #0xffffffffffffffff    	// #-1
   5bd88:	mov	x1, #0x7ffe                	// #32766
   5bd8c:	mov	x9, x2
   5bd90:	mov	w5, #0x0                   	// #0
   5bd94:	mov	w0, #0x14                  	// #20
   5bd98:	cbnz	x12, 5b954 <mpfr_free_pool@@Base+0x4d8>
   5bd9c:	b	5b94c <mpfr_free_pool@@Base+0x4d0>
   5bda0:	mov	x9, x5
   5bda4:	b	5b5ec <mpfr_free_pool@@Base+0x170>
   5bda8:	orr	x2, x2, x9
   5bdac:	cmp	x2, #0x0
   5bdb0:	cset	x9, ne  // ne = any
   5bdb4:	b	5bc10 <mpfr_free_pool@@Base+0x794>
   5bdb8:	mov	w1, #0x80                  	// #128
   5bdbc:	sub	w1, w1, w0
   5bdc0:	subs	w0, w0, #0x40
   5bdc4:	lsl	x1, x2, x1
   5bdc8:	orr	x1, x9, x1
   5bdcc:	csel	x9, x1, x9, ne  // ne = any
   5bdd0:	lsr	x2, x2, x0
   5bdd4:	cmp	x9, #0x0
   5bdd8:	cset	x9, ne  // ne = any
   5bddc:	orr	x9, x9, x2
   5bde0:	b	5bba8 <mpfr_free_pool@@Base+0x72c>
   5bde4:	mov	w0, #0x14                  	// #20
   5bde8:	b	5b8d4 <mpfr_free_pool@@Base+0x458>
   5bdec:	lsr	x5, x4, #50
   5bdf0:	mov	w7, w11
   5bdf4:	eor	x5, x5, #0x1
   5bdf8:	mov	x9, x13
   5bdfc:	and	w5, w5, #0x1
   5be00:	mov	x2, x4
   5be04:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5be08:	mov	x8, #0x7fff                	// #32767
   5be0c:	cmp	x1, x8
   5be10:	b.eq	5bf30 <mpfr_free_pool@@Base+0xab4>  // b.none
   5be14:	cmp	x3, x8
   5be18:	b.eq	5bfa4 <mpfr_free_pool@@Base+0xb28>  // b.none
   5be1c:	cbnz	x0, 5bf48 <mpfr_free_pool@@Base+0xacc>
   5be20:	mov	x2, x4
   5be24:	mov	x9, x13
   5be28:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5be2c:	mov	x0, #0x7fff                	// #32767
   5be30:	cmp	x3, x0
   5be34:	b.eq	5bfe0 <mpfr_free_pool@@Base+0xb64>  // b.none
   5be38:	mov	x2, x4
   5be3c:	mov	x9, x13
   5be40:	mov	x1, x3
   5be44:	b	5b7c8 <mpfr_free_pool@@Base+0x34c>
   5be48:	and	x15, x15, #0xc00000
   5be4c:	mov	x2, #0x0                   	// #0
   5be50:	cmp	x15, #0x800, lsl #12
   5be54:	cset	w7, eq  // eq = none
   5be58:	b	5b7e8 <mpfr_free_pool@@Base+0x36c>
   5be5c:	mov	x2, x4
   5be60:	mov	x9, x13
   5be64:	b	5b654 <mpfr_free_pool@@Base+0x1d8>
   5be68:	mov	w0, #0x80                  	// #128
   5be6c:	sub	w0, w0, w5
   5be70:	subs	w5, w5, #0x40
   5be74:	lsl	x0, x2, x0
   5be78:	orr	x0, x9, x0
   5be7c:	csel	x9, x0, x9, ne  // ne = any
   5be80:	lsr	x2, x2, x5
   5be84:	cmp	x9, #0x0
   5be88:	cset	x9, ne  // ne = any
   5be8c:	orr	x9, x9, x2
   5be90:	b	5bc10 <mpfr_free_pool@@Base+0x794>
   5be94:	cmp	x13, x9
   5be98:	mov	w7, w11
   5be9c:	sbc	x2, x4, x2
   5bea0:	sub	x9, x13, x9
   5bea4:	mov	x1, x3
   5bea8:	mov	x12, x5
   5beac:	b	5b5e4 <mpfr_free_pool@@Base+0x168>
   5beb0:	ands	x3, x15, #0xc00000
   5beb4:	b.eq	5bde4 <mpfr_free_pool@@Base+0x968>  // b.none
   5beb8:	cmp	x3, #0x400, lsl #12
   5bebc:	eor	w0, w7, #0x1
   5bec0:	csel	w0, w0, wzr, eq  // eq = none
   5bec4:	cbnz	w0, 5c008 <mpfr_free_pool@@Base+0xb8c>
   5bec8:	cmp	x3, #0x800, lsl #12
   5becc:	b.ne	5bd78 <mpfr_free_pool@@Base+0x8fc>  // b.any
   5bed0:	cbz	x12, 5bfb8 <mpfr_free_pool@@Base+0xb3c>
   5bed4:	mov	w0, #0x14                  	// #20
   5bed8:	mov	x16, #0x1                   	// #1
   5bedc:	b	5b8d4 <mpfr_free_pool@@Base+0x458>
   5bee0:	orr	x0, x4, x13
   5bee4:	cbnz	x0, 5bdec <mpfr_free_pool@@Base+0x970>
   5bee8:	mov	w7, w11
   5beec:	b	5bb10 <mpfr_free_pool@@Base+0x694>
   5bef0:	cbz	x8, 5bffc <mpfr_free_pool@@Base+0xb80>
   5bef4:	tst	x4, #0x4000000000000
   5bef8:	csinc	w0, w0, wzr, ne  // ne = any
   5befc:	cbnz	x5, 5bcdc <mpfr_free_pool@@Base+0x860>
   5bf00:	mov	w7, w11
   5bf04:	mov	x2, x4
   5bf08:	mov	x9, x13
   5bf0c:	mov	w5, w0
   5bf10:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5bf14:	orr	x8, x5, x3
   5bf18:	cbz	x8, 5be48 <mpfr_free_pool@@Base+0x9cc>
   5bf1c:	and	x0, x5, #0x7
   5bf20:	mov	x9, x5
   5bf24:	mov	x2, x3
   5bf28:	mov	w5, #0x1                   	// #1
   5bf2c:	b	5b664 <mpfr_free_pool@@Base+0x1e8>
   5bf30:	cbz	x0, 5bf9c <mpfr_free_pool@@Base+0xb20>
   5bf34:	lsr	x5, x2, #50
   5bf38:	cmp	x3, x1
   5bf3c:	eor	x5, x5, #0x1
   5bf40:	and	w5, w5, #0x1
   5bf44:	b.eq	5c014 <mpfr_free_pool@@Base+0xb98>  // b.none
   5bf48:	orr	x13, x4, x13
   5bf4c:	cbz	x13, 5b9a0 <mpfr_free_pool@@Base+0x524>
   5bf50:	bfi	x6, x2, #61, #3
   5bf54:	lsr	x0, x2, #3
   5bf58:	tbz	x2, #50, 5bf74 <mpfr_free_pool@@Base+0xaf8>
   5bf5c:	lsr	x1, x4, #3
   5bf60:	tbnz	x4, #50, 5bf74 <mpfr_free_pool@@Base+0xaf8>
   5bf64:	and	x6, x10, #0x1fffffffffffffff
   5bf68:	mov	w7, w11
   5bf6c:	orr	x6, x6, x4, lsl #61
   5bf70:	mov	x0, x1
   5bf74:	extr	x2, x0, x6, #61
   5bf78:	mov	w0, w5
   5bf7c:	bfi	x6, x2, #61, #3
   5bf80:	lsr	x2, x2, #3
   5bf84:	mov	x8, x6
   5bf88:	b	5b9bc <mpfr_free_pool@@Base+0x540>
   5bf8c:	adds	x9, x9, x13
   5bf90:	mov	x1, x3
   5bf94:	adc	x2, x4, x2
   5bf98:	b	5b858 <mpfr_free_pool@@Base+0x3dc>
   5bf9c:	cmp	x3, x1
   5bfa0:	b.ne	5be20 <mpfr_free_pool@@Base+0x9a4>  // b.any
   5bfa4:	orr	x1, x4, x13
   5bfa8:	cbnz	x1, 5c01c <mpfr_free_pool@@Base+0xba0>
   5bfac:	cbz	x0, 5bb10 <mpfr_free_pool@@Base+0x694>
   5bfb0:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5bfb4:	cbnz	x16, 5bed4 <mpfr_free_pool@@Base+0xa58>
   5bfb8:	mov	x2, #0xffffffffffffffff    	// #-1
   5bfbc:	mov	w7, #0x0                   	// #0
   5bfc0:	mov	x9, x2
   5bfc4:	mov	x1, #0x7ffe                	// #32766
   5bfc8:	mov	w0, #0x14                  	// #20
   5bfcc:	b	5b694 <mpfr_free_pool@@Base+0x218>
   5bfd0:	mov	w7, w11
   5bfd4:	mov	x2, x4
   5bfd8:	mov	x9, x13
   5bfdc:	b	5b9a0 <mpfr_free_pool@@Base+0x524>
   5bfe0:	orr	x0, x4, x13
   5bfe4:	cbz	x0, 5bb10 <mpfr_free_pool@@Base+0x694>
   5bfe8:	b	5b92c <mpfr_free_pool@@Base+0x4b0>
   5bfec:	cmp	x3, x1
   5bff0:	b.eq	5bef0 <mpfr_free_pool@@Base+0xa74>  // b.none
   5bff4:	mov	w5, #0x0                   	// #0
   5bff8:	b	5bca8 <mpfr_free_pool@@Base+0x82c>
   5bffc:	cbnz	x5, 5bf0c <mpfr_free_pool@@Base+0xa90>
   5c000:	mov	w5, w0
   5c004:	b	5bca8 <mpfr_free_pool@@Base+0x82c>
   5c008:	mov	w0, #0x14                  	// #20
   5c00c:	mov	x16, #0x0                   	// #0
   5c010:	b	5b8d4 <mpfr_free_pool@@Base+0x458>
   5c014:	orr	x1, x4, x13
   5c018:	cbz	x1, 5b9a0 <mpfr_free_pool@@Base+0x524>
   5c01c:	tst	x4, #0x4000000000000
   5c020:	csinc	w5, w5, wzr, ne  // ne = any
   5c024:	cbnz	x0, 5bf50 <mpfr_free_pool@@Base+0xad4>
   5c028:	b	5be20 <mpfr_free_pool@@Base+0x9a4>
   5c02c:	mov	x8, #0x0                   	// #0
   5c030:	mov	w1, #0x7fff                	// #32767
   5c034:	mov	x2, #0x0                   	// #0
   5c038:	b	5b6b0 <mpfr_free_pool@@Base+0x234>
   5c03c:	nop
   5c040:	stp	x29, x30, [sp, #-48]!
   5c044:	mov	x29, sp
   5c048:	str	q0, [sp, #16]
   5c04c:	str	q1, [sp, #32]
   5c050:	ldp	x6, x1, [sp, #16]
   5c054:	ldp	x7, x0, [sp, #32]
   5c058:	mrs	x2, fpcr
   5c05c:	ubfx	x4, x1, #48, #15
   5c060:	lsr	x2, x1, #63
   5c064:	lsr	x3, x0, #63
   5c068:	ubfx	x9, x0, #0, #48
   5c06c:	mov	x5, #0x7fff                	// #32767
   5c070:	mov	x10, x6
   5c074:	cmp	x4, x5
   5c078:	and	w2, w2, #0xff
   5c07c:	ubfx	x1, x1, #0, #48
   5c080:	and	w3, w3, #0xff
   5c084:	ubfx	x0, x0, #48, #15
   5c088:	b.eq	5c0bc <mpfr_free_pool@@Base+0xc40>  // b.none
   5c08c:	cmp	x0, x5
   5c090:	b.eq	5c0a8 <mpfr_free_pool@@Base+0xc2c>  // b.none
   5c094:	cmp	x4, x0
   5c098:	mov	w0, #0x1                   	// #1
   5c09c:	b.eq	5c0d4 <mpfr_free_pool@@Base+0xc58>  // b.none
   5c0a0:	ldp	x29, x30, [sp], #48
   5c0a4:	ret
   5c0a8:	orr	x8, x9, x7
   5c0ac:	cbnz	x8, 5c138 <mpfr_free_pool@@Base+0xcbc>
   5c0b0:	mov	w0, #0x1                   	// #1
   5c0b4:	ldp	x29, x30, [sp], #48
   5c0b8:	ret
   5c0bc:	orr	x5, x1, x6
   5c0c0:	cbnz	x5, 5c108 <mpfr_free_pool@@Base+0xc8c>
   5c0c4:	cmp	x0, x4
   5c0c8:	b.ne	5c0b0 <mpfr_free_pool@@Base+0xc34>  // b.any
   5c0cc:	orr	x8, x9, x7
   5c0d0:	cbnz	x8, 5c138 <mpfr_free_pool@@Base+0xcbc>
   5c0d4:	cmp	x1, x9
   5c0d8:	mov	w0, #0x1                   	// #1
   5c0dc:	ccmp	x6, x7, #0x0, eq  // eq = none
   5c0e0:	b.ne	5c0a0 <mpfr_free_pool@@Base+0xc24>  // b.any
   5c0e4:	cmp	w2, w3
   5c0e8:	mov	w0, #0x0                   	// #0
   5c0ec:	b.eq	5c0a0 <mpfr_free_pool@@Base+0xc24>  // b.none
   5c0f0:	mov	w0, #0x1                   	// #1
   5c0f4:	cbnz	x4, 5c0a0 <mpfr_free_pool@@Base+0xc24>
   5c0f8:	orr	x1, x1, x10
   5c0fc:	cmp	x1, #0x0
   5c100:	cset	w0, ne  // ne = any
   5c104:	b	5c0a0 <mpfr_free_pool@@Base+0xc24>
   5c108:	tst	x1, #0x800000000000
   5c10c:	b.ne	5c124 <mpfr_free_pool@@Base+0xca8>  // b.any
   5c110:	mov	w0, #0x1                   	// #1
   5c114:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5c118:	mov	w0, #0x1                   	// #1
   5c11c:	ldp	x29, x30, [sp], #48
   5c120:	ret
   5c124:	cmp	x0, x4
   5c128:	mov	w0, #0x1                   	// #1
   5c12c:	b.ne	5c0a0 <mpfr_free_pool@@Base+0xc24>  // b.any
   5c130:	orr	x8, x9, x7
   5c134:	cbz	x8, 5c0a0 <mpfr_free_pool@@Base+0xc24>
   5c138:	tst	x9, #0x800000000000
   5c13c:	b.eq	5c110 <mpfr_free_pool@@Base+0xc94>  // b.none
   5c140:	b	5c0b0 <mpfr_free_pool@@Base+0xc34>
   5c144:	nop
   5c148:	stp	x29, x30, [sp, #-48]!
   5c14c:	mov	x29, sp
   5c150:	str	q0, [sp, #16]
   5c154:	str	q1, [sp, #32]
   5c158:	ldp	x8, x1, [sp, #16]
   5c15c:	ldp	x9, x0, [sp, #32]
   5c160:	mrs	x2, fpcr
   5c164:	ubfx	x4, x1, #48, #15
   5c168:	ubfx	x10, x1, #0, #48
   5c16c:	lsr	x2, x1, #63
   5c170:	mov	x7, #0x7fff                	// #32767
   5c174:	mov	x5, x8
   5c178:	cmp	x4, x7
   5c17c:	ubfx	x11, x0, #0, #48
   5c180:	ubfx	x6, x0, #48, #15
   5c184:	lsr	x1, x0, #63
   5c188:	mov	x3, x9
   5c18c:	b.eq	5c1c8 <mpfr_free_pool@@Base+0xd4c>  // b.none
   5c190:	cmp	x6, x7
   5c194:	b.eq	5c1d8 <mpfr_free_pool@@Base+0xd5c>  // b.none
   5c198:	cbnz	x4, 5c200 <mpfr_free_pool@@Base+0xd84>
   5c19c:	orr	x5, x10, x8
   5c1a0:	cmp	x5, #0x0
   5c1a4:	cset	w0, eq  // eq = none
   5c1a8:	cbnz	x6, 5c1b4 <mpfr_free_pool@@Base+0xd38>
   5c1ac:	orr	x3, x11, x9
   5c1b0:	cbz	x3, 5c220 <mpfr_free_pool@@Base+0xda4>
   5c1b4:	cbz	w0, 5c1e4 <mpfr_free_pool@@Base+0xd68>
   5c1b8:	cmp	x1, #0x0
   5c1bc:	csinv	w0, w0, wzr, ne  // ne = any
   5c1c0:	ldp	x29, x30, [sp], #48
   5c1c4:	ret
   5c1c8:	orr	x0, x10, x8
   5c1cc:	cbnz	x0, 5c22c <mpfr_free_pool@@Base+0xdb0>
   5c1d0:	cmp	x6, x4
   5c1d4:	b.ne	5c200 <mpfr_free_pool@@Base+0xd84>  // b.any
   5c1d8:	orr	x3, x11, x3
   5c1dc:	cbnz	x3, 5c22c <mpfr_free_pool@@Base+0xdb0>
   5c1e0:	cbz	x4, 5c210 <mpfr_free_pool@@Base+0xd94>
   5c1e4:	cmp	x2, x1
   5c1e8:	b.eq	5c240 <mpfr_free_pool@@Base+0xdc4>  // b.none
   5c1ec:	cmp	x2, #0x0
   5c1f0:	mov	w0, #0xffffffff            	// #-1
   5c1f4:	cneg	w0, w0, eq  // eq = none
   5c1f8:	ldp	x29, x30, [sp], #48
   5c1fc:	ret
   5c200:	cbnz	x6, 5c1e4 <mpfr_free_pool@@Base+0xd68>
   5c204:	orr	x3, x11, x3
   5c208:	cbnz	x3, 5c1e4 <mpfr_free_pool@@Base+0xd68>
   5c20c:	b	5c1ec <mpfr_free_pool@@Base+0xd70>
   5c210:	orr	x5, x10, x5
   5c214:	cmp	x5, #0x0
   5c218:	cset	w0, eq  // eq = none
   5c21c:	b	5c1b4 <mpfr_free_pool@@Base+0xd38>
   5c220:	mov	w0, #0x0                   	// #0
   5c224:	cbz	x5, 5c1c0 <mpfr_free_pool@@Base+0xd44>
   5c228:	b	5c1ec <mpfr_free_pool@@Base+0xd70>
   5c22c:	mov	w0, #0x1                   	// #1
   5c230:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5c234:	mov	w0, #0xfffffffe            	// #-2
   5c238:	ldp	x29, x30, [sp], #48
   5c23c:	ret
   5c240:	cmp	x4, x6
   5c244:	b.gt	5c1ec <mpfr_free_pool@@Base+0xd70>
   5c248:	b.lt	5c280 <mpfr_free_pool@@Base+0xe04>  // b.tstop
   5c24c:	cmp	x10, x11
   5c250:	b.hi	5c1ec <mpfr_free_pool@@Base+0xd70>  // b.pmore
   5c254:	cset	w0, eq  // eq = none
   5c258:	cmp	w0, #0x0
   5c25c:	ccmp	x8, x9, #0x0, ne  // ne = any
   5c260:	b.hi	5c1ec <mpfr_free_pool@@Base+0xd70>  // b.pmore
   5c264:	cmp	x10, x11
   5c268:	b.cc	5c280 <mpfr_free_pool@@Base+0xe04>  // b.lo, b.ul, b.last
   5c26c:	cmp	w0, #0x0
   5c270:	mov	w0, #0x0                   	// #0
   5c274:	ccmp	x8, x9, #0x2, ne  // ne = any
   5c278:	b.cs	5c1c0 <mpfr_free_pool@@Base+0xd44>  // b.hs, b.nlast
   5c27c:	nop
   5c280:	cmp	x2, #0x0
   5c284:	mov	w0, #0x1                   	// #1
   5c288:	cneg	w0, w0, eq  // eq = none
   5c28c:	b	5c1c0 <mpfr_free_pool@@Base+0xd44>
   5c290:	stp	x29, x30, [sp, #-48]!
   5c294:	mov	x29, sp
   5c298:	str	q0, [sp, #16]
   5c29c:	str	q1, [sp, #32]
   5c2a0:	ldp	x8, x1, [sp, #16]
   5c2a4:	ldp	x9, x0, [sp, #32]
   5c2a8:	mrs	x2, fpcr
   5c2ac:	ubfx	x4, x1, #48, #15
   5c2b0:	ubfx	x10, x1, #0, #48
   5c2b4:	lsr	x2, x1, #63
   5c2b8:	mov	x5, #0x7fff                	// #32767
   5c2bc:	mov	x6, x8
   5c2c0:	cmp	x4, x5
   5c2c4:	ubfx	x11, x0, #0, #48
   5c2c8:	ubfx	x7, x0, #48, #15
   5c2cc:	lsr	x1, x0, #63
   5c2d0:	mov	x3, x9
   5c2d4:	b.eq	5c30c <mpfr_free_pool@@Base+0xe90>  // b.none
   5c2d8:	cmp	x7, x5
   5c2dc:	b.eq	5c31c <mpfr_free_pool@@Base+0xea0>  // b.none
   5c2e0:	cbnz	x4, 5c348 <mpfr_free_pool@@Base+0xecc>
   5c2e4:	orr	x6, x10, x8
   5c2e8:	cmp	x6, #0x0
   5c2ec:	cset	w0, eq  // eq = none
   5c2f0:	cbnz	x7, 5c334 <mpfr_free_pool@@Base+0xeb8>
   5c2f4:	orr	x3, x11, x9
   5c2f8:	cbnz	x3, 5c334 <mpfr_free_pool@@Base+0xeb8>
   5c2fc:	mov	w0, #0x0                   	// #0
   5c300:	cbnz	x6, 5c35c <mpfr_free_pool@@Base+0xee0>
   5c304:	ldp	x29, x30, [sp], #48
   5c308:	ret
   5c30c:	orr	x0, x10, x8
   5c310:	cbnz	x0, 5c370 <mpfr_free_pool@@Base+0xef4>
   5c314:	cmp	x7, x4
   5c318:	b.ne	5c348 <mpfr_free_pool@@Base+0xecc>  // b.any
   5c31c:	orr	x3, x11, x3
   5c320:	cbnz	x3, 5c370 <mpfr_free_pool@@Base+0xef4>
   5c324:	cbnz	x4, 5c354 <mpfr_free_pool@@Base+0xed8>
   5c328:	orr	x6, x10, x6
   5c32c:	cmp	x6, #0x0
   5c330:	cset	w0, eq  // eq = none
   5c334:	cbz	w0, 5c354 <mpfr_free_pool@@Base+0xed8>
   5c338:	cmp	x1, #0x0
   5c33c:	csinv	w0, w0, wzr, ne  // ne = any
   5c340:	ldp	x29, x30, [sp], #48
   5c344:	ret
   5c348:	cbnz	x7, 5c354 <mpfr_free_pool@@Base+0xed8>
   5c34c:	orr	x3, x11, x3
   5c350:	cbz	x3, 5c35c <mpfr_free_pool@@Base+0xee0>
   5c354:	cmp	x2, x1
   5c358:	b.eq	5c384 <mpfr_free_pool@@Base+0xf08>  // b.none
   5c35c:	cmp	x2, #0x0
   5c360:	mov	w0, #0xffffffff            	// #-1
   5c364:	cneg	w0, w0, eq  // eq = none
   5c368:	ldp	x29, x30, [sp], #48
   5c36c:	ret
   5c370:	mov	w0, #0x1                   	// #1
   5c374:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5c378:	mov	w0, #0x2                   	// #2
   5c37c:	ldp	x29, x30, [sp], #48
   5c380:	ret
   5c384:	cmp	x4, x7
   5c388:	b.gt	5c35c <mpfr_free_pool@@Base+0xee0>
   5c38c:	b.lt	5c3c0 <mpfr_free_pool@@Base+0xf44>  // b.tstop
   5c390:	cmp	x10, x11
   5c394:	b.hi	5c35c <mpfr_free_pool@@Base+0xee0>  // b.pmore
   5c398:	cset	w0, eq  // eq = none
   5c39c:	cmp	w0, #0x0
   5c3a0:	ccmp	x8, x9, #0x0, ne  // ne = any
   5c3a4:	b.hi	5c35c <mpfr_free_pool@@Base+0xee0>  // b.pmore
   5c3a8:	cmp	x10, x11
   5c3ac:	b.cc	5c3c0 <mpfr_free_pool@@Base+0xf44>  // b.lo, b.ul, b.last
   5c3b0:	cmp	w0, #0x0
   5c3b4:	mov	w0, #0x0                   	// #0
   5c3b8:	ccmp	x8, x9, #0x2, ne  // ne = any
   5c3bc:	b.cs	5c304 <mpfr_free_pool@@Base+0xe88>  // b.hs, b.nlast
   5c3c0:	cmp	x2, #0x0
   5c3c4:	mov	w0, #0x1                   	// #1
   5c3c8:	cneg	w0, w0, eq  // eq = none
   5c3cc:	b	5c304 <mpfr_free_pool@@Base+0xe88>
   5c3d0:	stp	x29, x30, [sp, #-80]!
   5c3d4:	mov	x29, sp
   5c3d8:	str	q0, [sp, #48]
   5c3dc:	str	q1, [sp, #64]
   5c3e0:	ldp	x1, x0, [sp, #48]
   5c3e4:	ldp	x6, x2, [sp, #64]
   5c3e8:	mrs	x11, fpcr
   5c3ec:	lsr	x3, x0, #63
   5c3f0:	ubfx	x7, x0, #0, #48
   5c3f4:	and	w12, w3, #0xff
   5c3f8:	mov	x14, x3
   5c3fc:	ubfx	x3, x0, #48, #15
   5c400:	cbz	w3, 5c7a8 <mpfr_free_pool@@Base+0x132c>
   5c404:	mov	w4, #0x7fff                	// #32767
   5c408:	cmp	w3, w4
   5c40c:	b.eq	5c84c <mpfr_free_pool@@Base+0x13d0>  // b.none
   5c410:	and	x3, x3, #0xffff
   5c414:	extr	x4, x7, x1, #61
   5c418:	mov	x18, #0xffffffffffffc001    	// #-16383
   5c41c:	orr	x7, x4, #0x8000000000000
   5c420:	add	x3, x3, x18
   5c424:	lsl	x5, x1, #3
   5c428:	mov	x16, #0x0                   	// #0
   5c42c:	mov	x1, #0x0                   	// #0
   5c430:	mov	w0, #0x0                   	// #0
   5c434:	lsr	x8, x2, #63
   5c438:	ubfx	x4, x2, #0, #48
   5c43c:	and	w15, w8, #0xff
   5c440:	mov	x13, x8
   5c444:	ubfx	x9, x2, #48, #15
   5c448:	cbz	w9, 5c808 <mpfr_free_pool@@Base+0x138c>
   5c44c:	mov	w8, #0x7fff                	// #32767
   5c450:	cmp	w9, w8
   5c454:	b.eq	5c4d8 <mpfr_free_pool@@Base+0x105c>  // b.none
   5c458:	and	x9, x9, #0xffff
   5c45c:	mov	x17, #0xffffffffffffc001    	// #-16383
   5c460:	add	x9, x9, x17
   5c464:	extr	x2, x4, x6, #61
   5c468:	add	x9, x9, x3
   5c46c:	lsl	x6, x6, #3
   5c470:	orr	x4, x2, #0x8000000000000
   5c474:	mov	x2, #0x0                   	// #0
   5c478:	eor	w8, w12, w15
   5c47c:	cmp	x1, #0xa
   5c480:	and	w10, w8, #0xff
   5c484:	add	x3, x9, #0x1
   5c488:	and	x8, x8, #0xff
   5c48c:	b.le	5c510 <mpfr_free_pool@@Base+0x1094>
   5c490:	cmp	x1, #0xb
   5c494:	b.eq	5cba8 <mpfr_free_pool@@Base+0x172c>  // b.none
   5c498:	mov	w15, w12
   5c49c:	mov	x13, x14
   5c4a0:	mov	w10, w15
   5c4a4:	cmp	x16, #0x2
   5c4a8:	b.eq	5c86c <mpfr_free_pool@@Base+0x13f0>  // b.none
   5c4ac:	mov	x4, x7
   5c4b0:	mov	x6, x5
   5c4b4:	mov	x2, x16
   5c4b8:	mov	x8, x13
   5c4bc:	cmp	x2, #0x3
   5c4c0:	b.ne	5c52c <mpfr_free_pool@@Base+0x10b0>  // b.any
   5c4c4:	orr	x4, x4, #0x800000000000
   5c4c8:	mov	x5, x6
   5c4cc:	and	x4, x4, #0xffffffffffff
   5c4d0:	mov	w1, #0x7fff                	// #32767
   5c4d4:	b	5c540 <mpfr_free_pool@@Base+0x10c4>
   5c4d8:	mov	x8, #0x7fff                	// #32767
   5c4dc:	orr	x2, x4, x6
   5c4e0:	add	x9, x3, x8
   5c4e4:	cbnz	x2, 5c564 <mpfr_free_pool@@Base+0x10e8>
   5c4e8:	eor	w8, w12, w15
   5c4ec:	orr	x1, x1, #0x2
   5c4f0:	and	w10, w8, #0xff
   5c4f4:	cmp	x1, #0xa
   5c4f8:	add	x3, x3, #0x8, lsl #12
   5c4fc:	and	x8, x8, #0xff
   5c500:	mov	x6, #0x0                   	// #0
   5c504:	b.gt	5cb1c <mpfr_free_pool@@Base+0x16a0>
   5c508:	mov	x4, #0x0                   	// #0
   5c50c:	mov	x2, #0x2                   	// #2
   5c510:	cmp	x1, #0x2
   5c514:	b.gt	5c58c <mpfr_free_pool@@Base+0x1110>
   5c518:	sub	x1, x1, #0x1
   5c51c:	cmp	x1, #0x1
   5c520:	b.hi	5c5c8 <mpfr_free_pool@@Base+0x114c>  // b.pmore
   5c524:	cmp	x2, #0x2
   5c528:	b.eq	5c86c <mpfr_free_pool@@Base+0x13f0>  // b.none
   5c52c:	cmp	x2, #0x1
   5c530:	b.ne	5c728 <mpfr_free_pool@@Base+0x12ac>  // b.any
   5c534:	mov	w1, #0x0                   	// #0
   5c538:	mov	x4, #0x0                   	// #0
   5c53c:	mov	x5, #0x0                   	// #0
   5c540:	mov	x3, #0x0                   	// #0
   5c544:	orr	w1, w1, w10, lsl #15
   5c548:	bfxil	x3, x4, #0, #48
   5c54c:	fmov	d0, x5
   5c550:	bfi	x3, x1, #48, #16
   5c554:	fmov	v0.d[1], x3
   5c558:	cbnz	w0, 5c998 <mpfr_free_pool@@Base+0x151c>
   5c55c:	ldp	x29, x30, [sp], #80
   5c560:	ret
   5c564:	tst	x4, #0x800000000000
   5c568:	eor	w8, w12, w15
   5c56c:	orr	x1, x1, #0x3
   5c570:	csinc	w0, w0, wzr, ne  // ne = any
   5c574:	and	w10, w8, #0xff
   5c578:	add	x3, x3, #0x8, lsl #12
   5c57c:	cmp	x1, #0xa
   5c580:	and	x8, x8, #0xff
   5c584:	mov	x2, #0x3                   	// #3
   5c588:	b.gt	5cb9c <mpfr_free_pool@@Base+0x1720>
   5c58c:	mov	x12, #0x1                   	// #1
   5c590:	mov	x14, #0x530                 	// #1328
   5c594:	lsl	x1, x12, x1
   5c598:	tst	x1, x14
   5c59c:	b.ne	5c79c <mpfr_free_pool@@Base+0x1320>  // b.any
   5c5a0:	mov	x14, #0x240                 	// #576
   5c5a4:	tst	x1, x14
   5c5a8:	b.ne	5c784 <mpfr_free_pool@@Base+0x1308>  // b.any
   5c5ac:	mov	x12, #0x88                  	// #136
   5c5b0:	tst	x1, x12
   5c5b4:	b.eq	5c5c8 <mpfr_free_pool@@Base+0x114c>  // b.none
   5c5b8:	mov	x7, x4
   5c5bc:	mov	x5, x6
   5c5c0:	mov	x16, x2
   5c5c4:	b	5c4a0 <mpfr_free_pool@@Base+0x1024>
   5c5c8:	lsr	x13, x5, #32
   5c5cc:	and	x12, x6, #0xffffffff
   5c5d0:	and	x15, x5, #0xffffffff
   5c5d4:	lsr	x6, x6, #32
   5c5d8:	and	x18, x4, #0xffffffff
   5c5dc:	lsr	x2, x4, #32
   5c5e0:	mul	x4, x13, x12
   5c5e4:	stp	x21, x22, [sp, #32]
   5c5e8:	lsr	x22, x7, #32
   5c5ec:	and	x5, x7, #0xffffffff
   5c5f0:	mul	x16, x12, x15
   5c5f4:	madd	x7, x6, x15, x4
   5c5f8:	stp	x19, x20, [sp, #16]
   5c5fc:	mul	x1, x13, x18
   5c600:	mul	x17, x15, x18
   5c604:	and	x30, x16, #0xffffffff
   5c608:	madd	x15, x2, x15, x1
   5c60c:	add	x16, x7, x16, lsr #32
   5c610:	mul	x21, x22, x12
   5c614:	cmp	x4, x16
   5c618:	mul	x20, x22, x18
   5c61c:	mov	x14, #0x100000000           	// #4294967296
   5c620:	mul	x19, x13, x6
   5c624:	add	x15, x15, x17, lsr #32
   5c628:	mul	x12, x12, x5
   5c62c:	and	x17, x17, #0xffffffff
   5c630:	mul	x18, x5, x18
   5c634:	add	x4, x19, x14
   5c638:	madd	x7, x6, x5, x21
   5c63c:	csel	x19, x4, x19, hi  // hi = pmore
   5c640:	madd	x5, x2, x5, x20
   5c644:	cmp	x1, x15
   5c648:	mul	x13, x13, x2
   5c64c:	add	x17, x17, x15, lsl #32
   5c650:	mul	x6, x6, x22
   5c654:	add	x7, x7, x12, lsr #32
   5c658:	add	x5, x5, x18, lsr #32
   5c65c:	add	x4, x13, x14
   5c660:	mul	x2, x2, x22
   5c664:	csel	x13, x4, x13, hi  // hi = pmore
   5c668:	and	x1, x18, #0xffffffff
   5c66c:	cmp	x21, x7
   5c670:	add	x4, x6, x14
   5c674:	add	x30, x30, x16, lsl #32
   5c678:	csel	x6, x4, x6, hi  // hi = pmore
   5c67c:	add	x13, x13, x15, lsr #32
   5c680:	cmp	x20, x5
   5c684:	add	x1, x1, x5, lsl #32
   5c688:	add	x16, x17, x16, lsr #32
   5c68c:	add	x14, x2, x14
   5c690:	csel	x2, x14, x2, hi  // hi = pmore
   5c694:	add	x16, x19, x16
   5c698:	adds	x1, x1, x13
   5c69c:	and	x12, x12, #0xffffffff
   5c6a0:	cset	x13, cs  // cs = hs, nlast
   5c6a4:	cmp	x16, x17
   5c6a8:	cset	x4, cc  // cc = lo, ul, last
   5c6ac:	add	x12, x12, x7, lsl #32
   5c6b0:	adds	x1, x1, x4
   5c6b4:	lsr	x5, x5, #32
   5c6b8:	cset	x4, cs  // cs = hs, nlast
   5c6bc:	cmp	x13, #0x0
   5c6c0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   5c6c4:	add	x7, x6, x7, lsr #32
   5c6c8:	cinc	x5, x5, ne  // ne = any
   5c6cc:	adds	x6, x16, x12
   5c6d0:	cset	x4, cs  // cs = hs, nlast
   5c6d4:	adds	x1, x1, x7
   5c6d8:	cset	x7, cs  // cs = hs, nlast
   5c6dc:	adds	x4, x1, x4
   5c6e0:	cset	x1, cs  // cs = hs, nlast
   5c6e4:	cmp	x7, #0x0
   5c6e8:	orr	x30, x30, x6, lsl #13
   5c6ec:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   5c6f0:	cinc	x1, x2, ne  // ne = any
   5c6f4:	cmp	x30, #0x0
   5c6f8:	add	x1, x1, x5
   5c6fc:	cset	x2, ne  // ne = any
   5c700:	orr	x6, x2, x6, lsr #51
   5c704:	orr	x6, x6, x4, lsl #13
   5c708:	extr	x4, x1, x4, #51
   5c70c:	tbz	x1, #39, 5ca20 <mpfr_free_pool@@Base+0x15a4>
   5c710:	ldp	x19, x20, [sp, #16]
   5c714:	and	x1, x6, #0x1
   5c718:	ldp	x21, x22, [sp, #32]
   5c71c:	orr	x6, x1, x6, lsr #1
   5c720:	orr	x6, x6, x4, lsl #63
   5c724:	lsr	x4, x4, #1
   5c728:	mov	x1, #0x3fff                	// #16383
   5c72c:	add	x2, x3, x1
   5c730:	cmp	x2, #0x0
   5c734:	b.le	5c8cc <mpfr_free_pool@@Base+0x1450>
   5c738:	tst	x6, #0x7
   5c73c:	b.eq	5c75c <mpfr_free_pool@@Base+0x12e0>  // b.none
   5c740:	and	x1, x11, #0xc00000
   5c744:	orr	w0, w0, #0x10
   5c748:	cmp	x1, #0x400, lsl #12
   5c74c:	b.eq	5cb14 <mpfr_free_pool@@Base+0x1698>  // b.none
   5c750:	cmp	x1, #0x800, lsl #12
   5c754:	b.eq	5cabc <mpfr_free_pool@@Base+0x1640>  // b.none
   5c758:	cbz	x1, 5caa4 <mpfr_free_pool@@Base+0x1628>
   5c75c:	tbz	x4, #52, 5c768 <mpfr_free_pool@@Base+0x12ec>
   5c760:	and	x4, x4, #0xffefffffffffffff
   5c764:	add	x2, x3, #0x4, lsl #12
   5c768:	mov	x1, #0x7ffe                	// #32766
   5c76c:	cmp	x2, x1
   5c770:	b.gt	5c9f4 <mpfr_free_pool@@Base+0x1578>
   5c774:	and	w1, w2, #0x7fff
   5c778:	extr	x5, x4, x6, #3
   5c77c:	ubfx	x4, x4, #3, #48
   5c780:	b	5c540 <mpfr_free_pool@@Base+0x10c4>
   5c784:	mov	w0, w12
   5c788:	mov	w10, #0x0                   	// #0
   5c78c:	mov	x4, #0xffffffffffff        	// #281474976710655
   5c790:	mov	x5, #0xffffffffffffffff    	// #-1
   5c794:	mov	w1, #0x7fff                	// #32767
   5c798:	b	5c540 <mpfr_free_pool@@Base+0x10c4>
   5c79c:	mov	w15, w10
   5c7a0:	mov	x13, x8
   5c7a4:	b	5c4a0 <mpfr_free_pool@@Base+0x1024>
   5c7a8:	orr	x5, x7, x1
   5c7ac:	cbz	x5, 5c8b4 <mpfr_free_pool@@Base+0x1438>
   5c7b0:	cbz	x7, 5c9d0 <mpfr_free_pool@@Base+0x1554>
   5c7b4:	clz	x0, x7
   5c7b8:	sub	x4, x0, #0xf
   5c7bc:	add	w5, w4, #0x3
   5c7c0:	mov	w3, #0x3d                  	// #61
   5c7c4:	sub	w3, w3, w4
   5c7c8:	lsl	x4, x7, x5
   5c7cc:	lsr	x3, x1, x3
   5c7d0:	orr	x7, x3, x4
   5c7d4:	lsl	x5, x1, x5
   5c7d8:	lsr	x8, x2, #63
   5c7dc:	mov	x3, #0xffffffffffffc011    	// #-16367
   5c7e0:	ubfx	x4, x2, #0, #48
   5c7e4:	sub	x3, x3, x0
   5c7e8:	and	w15, w8, #0xff
   5c7ec:	mov	x13, x8
   5c7f0:	ubfx	x9, x2, #48, #15
   5c7f4:	mov	x1, #0x0                   	// #0
   5c7f8:	mov	x16, #0x0                   	// #0
   5c7fc:	mov	w0, #0x0                   	// #0
   5c800:	cbnz	w9, 5c44c <mpfr_free_pool@@Base+0xfd0>
   5c804:	nop
   5c808:	orr	x2, x4, x6
   5c80c:	cbz	x2, 5c87c <mpfr_free_pool@@Base+0x1400>
   5c810:	cbz	x4, 5c9ac <mpfr_free_pool@@Base+0x1530>
   5c814:	clz	x9, x4
   5c818:	sub	x2, x9, #0xf
   5c81c:	add	w10, w2, #0x3
   5c820:	mov	w8, #0x3d                  	// #61
   5c824:	sub	w8, w8, w2
   5c828:	lsl	x2, x4, x10
   5c82c:	lsr	x8, x6, x8
   5c830:	orr	x4, x8, x2
   5c834:	lsl	x6, x6, x10
   5c838:	sub	x9, x3, x9
   5c83c:	mov	x10, #0xffffffffffffc011    	// #-16367
   5c840:	mov	x2, #0x0                   	// #0
   5c844:	add	x9, x9, x10
   5c848:	b	5c478 <mpfr_free_pool@@Base+0xffc>
   5c84c:	orr	x5, x7, x1
   5c850:	cbnz	x5, 5c894 <mpfr_free_pool@@Base+0x1418>
   5c854:	mov	x7, #0x0                   	// #0
   5c858:	mov	x1, #0x8                   	// #8
   5c85c:	mov	x3, #0x7fff                	// #32767
   5c860:	mov	x16, #0x2                   	// #2
   5c864:	mov	w0, #0x0                   	// #0
   5c868:	b	5c434 <mpfr_free_pool@@Base+0xfb8>
   5c86c:	mov	w1, #0x7fff                	// #32767
   5c870:	mov	x4, #0x0                   	// #0
   5c874:	mov	x5, #0x0                   	// #0
   5c878:	b	5c540 <mpfr_free_pool@@Base+0x10c4>
   5c87c:	orr	x1, x1, #0x1
   5c880:	mov	x9, x3
   5c884:	mov	x4, #0x0                   	// #0
   5c888:	mov	x6, #0x0                   	// #0
   5c88c:	mov	x2, #0x1                   	// #1
   5c890:	b	5c478 <mpfr_free_pool@@Base+0xffc>
   5c894:	lsr	x0, x7, #47
   5c898:	mov	x5, x1
   5c89c:	eor	x0, x0, #0x1
   5c8a0:	mov	x1, #0xc                   	// #12
   5c8a4:	and	w0, w0, #0x1
   5c8a8:	mov	x3, #0x7fff                	// #32767
   5c8ac:	mov	x16, #0x3                   	// #3
   5c8b0:	b	5c434 <mpfr_free_pool@@Base+0xfb8>
   5c8b4:	mov	x7, #0x0                   	// #0
   5c8b8:	mov	x1, #0x4                   	// #4
   5c8bc:	mov	x3, #0x0                   	// #0
   5c8c0:	mov	x16, #0x1                   	// #1
   5c8c4:	mov	w0, #0x0                   	// #0
   5c8c8:	b	5c434 <mpfr_free_pool@@Base+0xfb8>
   5c8cc:	mov	x1, #0x1                   	// #1
   5c8d0:	sub	x2, x1, x2
   5c8d4:	cmp	x2, #0x74
   5c8d8:	b.gt	5c950 <mpfr_free_pool@@Base+0x14d4>
   5c8dc:	cmp	x2, #0x3f
   5c8e0:	b.le	5ca30 <mpfr_free_pool@@Base+0x15b4>
   5c8e4:	mov	w1, #0x80                  	// #128
   5c8e8:	sub	w1, w1, w2
   5c8ec:	cmp	x2, #0x40
   5c8f0:	sub	w2, w2, #0x40
   5c8f4:	lsl	x1, x4, x1
   5c8f8:	orr	x1, x6, x1
   5c8fc:	csel	x6, x1, x6, ne  // ne = any
   5c900:	lsr	x2, x4, x2
   5c904:	cmp	x6, #0x0
   5c908:	cset	x5, ne  // ne = any
   5c90c:	orr	x5, x5, x2
   5c910:	ands	x2, x5, #0x7
   5c914:	b.eq	5ca64 <mpfr_free_pool@@Base+0x15e8>  // b.none
   5c918:	mov	x2, #0x0                   	// #0
   5c91c:	and	x11, x11, #0xc00000
   5c920:	orr	w0, w0, #0x10
   5c924:	cmp	x11, #0x400, lsl #12
   5c928:	b.eq	5cb74 <mpfr_free_pool@@Base+0x16f8>  // b.none
   5c92c:	cmp	x11, #0x800, lsl #12
   5c930:	b.eq	5cb88 <mpfr_free_pool@@Base+0x170c>  // b.none
   5c934:	cbz	x11, 5cacc <mpfr_free_pool@@Base+0x1650>
   5c938:	tbnz	x2, #51, 5cae4 <mpfr_free_pool@@Base+0x1668>
   5c93c:	ubfx	x4, x2, #3, #48
   5c940:	extr	x5, x2, x5, #3
   5c944:	orr	w0, w0, #0x8
   5c948:	mov	w1, #0x0                   	// #0
   5c94c:	b	5c980 <mpfr_free_pool@@Base+0x1504>
   5c950:	orr	x5, x6, x4
   5c954:	cbz	x5, 5c974 <mpfr_free_pool@@Base+0x14f8>
   5c958:	and	x11, x11, #0xc00000
   5c95c:	orr	w0, w0, #0x10
   5c960:	cmp	x11, #0x400, lsl #12
   5c964:	sub	x5, x1, x8
   5c968:	b.eq	5c974 <mpfr_free_pool@@Base+0x14f8>  // b.none
   5c96c:	cmp	x11, #0x800, lsl #12
   5c970:	csel	x5, x8, xzr, eq  // eq = none
   5c974:	orr	w0, w0, #0x8
   5c978:	mov	w1, #0x0                   	// #0
   5c97c:	mov	x4, #0x0                   	// #0
   5c980:	mov	x3, #0x0                   	// #0
   5c984:	fmov	d0, x5
   5c988:	bfxil	x3, x4, #0, #48
   5c98c:	bfi	x3, x1, #48, #15
   5c990:	bfi	x3, x10, #63, #1
   5c994:	fmov	v0.d[1], x3
   5c998:	str	q0, [sp, #48]
   5c99c:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5c9a0:	ldr	q0, [sp, #48]
   5c9a4:	ldp	x29, x30, [sp], #80
   5c9a8:	ret
   5c9ac:	clz	x9, x6
   5c9b0:	add	x2, x9, #0x31
   5c9b4:	add	x9, x9, #0x40
   5c9b8:	cmp	x2, #0x3c
   5c9bc:	b.le	5c81c <mpfr_free_pool@@Base+0x13a0>
   5c9c0:	sub	w2, w2, #0x3d
   5c9c4:	lsl	x4, x6, x2
   5c9c8:	mov	x6, #0x0                   	// #0
   5c9cc:	b	5c838 <mpfr_free_pool@@Base+0x13bc>
   5c9d0:	clz	x3, x1
   5c9d4:	add	x4, x3, #0x31
   5c9d8:	add	x0, x3, #0x40
   5c9dc:	cmp	x4, #0x3c
   5c9e0:	b.le	5c7bc <mpfr_free_pool@@Base+0x1340>
   5c9e4:	sub	w4, w4, #0x3d
   5c9e8:	mov	x5, #0x0                   	// #0
   5c9ec:	lsl	x7, x1, x4
   5c9f0:	b	5c7d8 <mpfr_free_pool@@Base+0x135c>
   5c9f4:	and	x5, x11, #0xc00000
   5c9f8:	cmp	x5, #0x400, lsl #12
   5c9fc:	b.eq	5caf8 <mpfr_free_pool@@Base+0x167c>  // b.none
   5ca00:	cmp	x5, #0x800, lsl #12
   5ca04:	b.eq	5ca88 <mpfr_free_pool@@Base+0x160c>  // b.none
   5ca08:	cbz	x5, 5ca7c <mpfr_free_pool@@Base+0x1600>
   5ca0c:	mov	x4, #0xffffffffffff        	// #281474976710655
   5ca10:	mov	x5, #0xffffffffffffffff    	// #-1
   5ca14:	mov	w2, #0x14                  	// #20
   5ca18:	orr	w0, w0, w2
   5ca1c:	b	5c980 <mpfr_free_pool@@Base+0x1504>
   5ca20:	mov	x3, x9
   5ca24:	ldp	x19, x20, [sp, #16]
   5ca28:	ldp	x21, x22, [sp, #32]
   5ca2c:	b	5c728 <mpfr_free_pool@@Base+0x12ac>
   5ca30:	mov	w1, #0x40                  	// #64
   5ca34:	sub	w1, w1, w2
   5ca38:	lsr	x3, x6, x2
   5ca3c:	lsl	x6, x6, x1
   5ca40:	cmp	x6, #0x0
   5ca44:	lsl	x5, x4, x1
   5ca48:	cset	x1, ne  // ne = any
   5ca4c:	orr	x5, x5, x3
   5ca50:	lsr	x2, x4, x2
   5ca54:	orr	x5, x5, x1
   5ca58:	tst	x5, #0x7
   5ca5c:	b.ne	5c91c <mpfr_free_pool@@Base+0x14a0>  // b.any
   5ca60:	tbnz	x2, #51, 5cb94 <mpfr_free_pool@@Base+0x1718>
   5ca64:	ubfx	x4, x2, #3, #48
   5ca68:	extr	x5, x2, x5, #3
   5ca6c:	mov	w1, #0x0                   	// #0
   5ca70:	tbz	w11, #11, 5c540 <mpfr_free_pool@@Base+0x10c4>
   5ca74:	orr	w0, w0, #0x8
   5ca78:	b	5c980 <mpfr_free_pool@@Base+0x1504>
   5ca7c:	mov	w1, #0x7fff                	// #32767
   5ca80:	mov	x4, #0x0                   	// #0
   5ca84:	b	5ca14 <mpfr_free_pool@@Base+0x1598>
   5ca88:	cmp	x8, #0x0
   5ca8c:	mov	w2, #0x7fff                	// #32767
   5ca90:	mov	x4, #0xffffffffffff        	// #281474976710655
   5ca94:	csel	w1, w1, w2, eq  // eq = none
   5ca98:	csel	x4, x4, xzr, eq  // eq = none
   5ca9c:	csetm	x5, eq  // eq = none
   5caa0:	b	5ca14 <mpfr_free_pool@@Base+0x1598>
   5caa4:	and	x1, x6, #0xf
   5caa8:	cmp	x1, #0x4
   5caac:	b.eq	5c75c <mpfr_free_pool@@Base+0x12e0>  // b.none
   5cab0:	adds	x6, x6, #0x4
   5cab4:	cinc	x4, x4, cs  // cs = hs, nlast
   5cab8:	b	5c75c <mpfr_free_pool@@Base+0x12e0>
   5cabc:	cbz	x8, 5c75c <mpfr_free_pool@@Base+0x12e0>
   5cac0:	adds	x6, x6, #0x8
   5cac4:	cinc	x4, x4, cs  // cs = hs, nlast
   5cac8:	b	5c75c <mpfr_free_pool@@Base+0x12e0>
   5cacc:	and	x1, x5, #0xf
   5cad0:	cmp	x1, #0x4
   5cad4:	b.eq	5cae0 <mpfr_free_pool@@Base+0x1664>  // b.none
   5cad8:	adds	x5, x5, #0x4
   5cadc:	cinc	x2, x2, cs  // cs = hs, nlast
   5cae0:	tbz	x2, #51, 5c93c <mpfr_free_pool@@Base+0x14c0>
   5cae4:	orr	w0, w0, #0x8
   5cae8:	mov	w1, #0x1                   	// #1
   5caec:	mov	x4, #0x0                   	// #0
   5caf0:	mov	x5, #0x0                   	// #0
   5caf4:	b	5c980 <mpfr_free_pool@@Base+0x1504>
   5caf8:	cmp	x8, #0x0
   5cafc:	mov	w2, #0x7fff                	// #32767
   5cb00:	mov	x4, #0xffffffffffff        	// #281474976710655
   5cb04:	csel	w1, w1, w2, ne  // ne = any
   5cb08:	csel	x4, x4, xzr, ne  // ne = any
   5cb0c:	csetm	x5, ne  // ne = any
   5cb10:	b	5ca14 <mpfr_free_pool@@Base+0x1598>
   5cb14:	cbnz	x8, 5c75c <mpfr_free_pool@@Base+0x12e0>
   5cb18:	b	5cac0 <mpfr_free_pool@@Base+0x1644>
   5cb1c:	mov	x4, #0x2                   	// #2
   5cb20:	cmp	x1, #0xf
   5cb24:	b.ne	5cb48 <mpfr_free_pool@@Base+0x16cc>  // b.any
   5cb28:	tbz	x7, #47, 5cb60 <mpfr_free_pool@@Base+0x16e4>
   5cb2c:	tbnz	x2, #47, 5cb60 <mpfr_free_pool@@Base+0x16e4>
   5cb30:	orr	x4, x2, #0x800000000000
   5cb34:	mov	w10, w15
   5cb38:	and	x4, x4, #0xffffffffffff
   5cb3c:	mov	x5, x6
   5cb40:	mov	w1, #0x7fff                	// #32767
   5cb44:	b	5c540 <mpfr_free_pool@@Base+0x10c4>
   5cb48:	cmp	x1, #0xb
   5cb4c:	b.ne	5c498 <mpfr_free_pool@@Base+0x101c>  // b.any
   5cb50:	mov	x7, x2
   5cb54:	mov	x5, x6
   5cb58:	mov	x16, x4
   5cb5c:	b	5c4a0 <mpfr_free_pool@@Base+0x1024>
   5cb60:	orr	x4, x7, #0x800000000000
   5cb64:	mov	w10, w12
   5cb68:	and	x4, x4, #0xffffffffffff
   5cb6c:	mov	w1, #0x7fff                	// #32767
   5cb70:	b	5c540 <mpfr_free_pool@@Base+0x10c4>
   5cb74:	cbnz	x8, 5cae0 <mpfr_free_pool@@Base+0x1664>
   5cb78:	adds	x5, x5, #0x8
   5cb7c:	cinc	x2, x2, cs  // cs = hs, nlast
   5cb80:	tbnz	x2, #51, 5cae4 <mpfr_free_pool@@Base+0x1668>
   5cb84:	b	5c93c <mpfr_free_pool@@Base+0x14c0>
   5cb88:	cbnz	x8, 5cb78 <mpfr_free_pool@@Base+0x16fc>
   5cb8c:	tbnz	x2, #51, 5cae4 <mpfr_free_pool@@Base+0x1668>
   5cb90:	b	5c93c <mpfr_free_pool@@Base+0x14c0>
   5cb94:	orr	w0, w0, #0x10
   5cb98:	b	5cae4 <mpfr_free_pool@@Base+0x1668>
   5cb9c:	mov	x2, x4
   5cba0:	mov	x4, #0x3                   	// #3
   5cba4:	b	5cb20 <mpfr_free_pool@@Base+0x16a4>
   5cba8:	mov	w10, w15
   5cbac:	mov	x8, x13
   5cbb0:	b	5c4bc <mpfr_free_pool@@Base+0x1040>
   5cbb4:	nop
   5cbb8:	stp	x29, x30, [sp, #-48]!
   5cbbc:	mov	x29, sp
   5cbc0:	str	q0, [sp, #16]
   5cbc4:	str	q1, [sp, #32]
   5cbc8:	ldp	x5, x1, [sp, #16]
   5cbcc:	ldp	x0, x2, [sp, #32]
   5cbd0:	mrs	x12, fpcr
   5cbd4:	mov	x9, x0
   5cbd8:	ubfx	x0, x2, #48, #15
   5cbdc:	lsr	x6, x1, #63
   5cbe0:	ubfx	x7, x1, #48, #15
   5cbe4:	ubfiz	x3, x1, #3, #48
   5cbe8:	mov	x13, x0
   5cbec:	lsr	x4, x2, #63
   5cbf0:	ubfiz	x2, x2, #3, #48
   5cbf4:	mov	x11, x6
   5cbf8:	and	w8, w6, #0xff
   5cbfc:	mov	x14, x6
   5cc00:	sub	w0, w7, w0
   5cc04:	mov	x1, x7
   5cc08:	orr	x3, x3, x5, lsr #61
   5cc0c:	mov	x7, #0x7fff                	// #32767
   5cc10:	and	w4, w4, #0xff
   5cc14:	cmp	x13, x7
   5cc18:	orr	x2, x2, x9, lsr #61
   5cc1c:	lsl	x6, x5, #3
   5cc20:	lsl	x10, x9, #3
   5cc24:	b.eq	5cd94 <mpfr_free_pool@@Base+0x1918>  // b.none
   5cc28:	eor	w4, w4, #0x1
   5cc2c:	and	x4, x4, #0xff
   5cc30:	cmp	x11, x4
   5cc34:	b.eq	5ce2c <mpfr_free_pool@@Base+0x19b0>  // b.none
   5cc38:	cmp	w0, #0x0
   5cc3c:	b.le	5cdb0 <mpfr_free_pool@@Base+0x1934>
   5cc40:	cbnz	x13, 5cf1c <mpfr_free_pool@@Base+0x1aa0>
   5cc44:	orr	x4, x2, x10
   5cc48:	cbz	x4, 5d0fc <mpfr_free_pool@@Base+0x1c80>
   5cc4c:	subs	w0, w0, #0x1
   5cc50:	b.eq	5d3d0 <mpfr_free_pool@@Base+0x1f54>  // b.none
   5cc54:	mov	x4, #0x7fff                	// #32767
   5cc58:	cmp	x1, x4
   5cc5c:	b.eq	5d0d0 <mpfr_free_pool@@Base+0x1c54>  // b.none
   5cc60:	cmp	w0, #0x74
   5cc64:	b.gt	5d0ec <mpfr_free_pool@@Base+0x1c70>
   5cc68:	cmp	w0, #0x3f
   5cc6c:	b.gt	5d294 <mpfr_free_pool@@Base+0x1e18>
   5cc70:	mov	w4, #0x40                  	// #64
   5cc74:	sub	w4, w4, w0
   5cc78:	lsr	x7, x10, x0
   5cc7c:	lsl	x10, x10, x4
   5cc80:	cmp	x10, #0x0
   5cc84:	lsl	x4, x2, x4
   5cc88:	cset	x5, ne  // ne = any
   5cc8c:	orr	x4, x4, x7
   5cc90:	lsr	x2, x2, x0
   5cc94:	orr	x4, x4, x5
   5cc98:	sub	x3, x3, x2
   5cc9c:	subs	x6, x6, x4
   5cca0:	sbc	x3, x3, xzr
   5cca4:	and	x5, x3, #0x7ffffffffffff
   5cca8:	tbz	x3, #51, 5cea8 <mpfr_free_pool@@Base+0x1a2c>
   5ccac:	cbz	x5, 5d0b4 <mpfr_free_pool@@Base+0x1c38>
   5ccb0:	clz	x0, x5
   5ccb4:	sub	w0, w0, #0xc
   5ccb8:	neg	w3, w0
   5ccbc:	lsl	x2, x5, x0
   5ccc0:	lsl	x5, x6, x0
   5ccc4:	lsr	x6, x6, x3
   5ccc8:	orr	x3, x6, x2
   5cccc:	cmp	x1, w0, sxtw
   5ccd0:	sxtw	x2, w0
   5ccd4:	b.gt	5d094 <mpfr_free_pool@@Base+0x1c18>
   5ccd8:	sub	w1, w0, w1
   5ccdc:	add	w0, w1, #0x1
   5cce0:	cmp	w0, #0x3f
   5cce4:	b.gt	5d25c <mpfr_free_pool@@Base+0x1de0>
   5cce8:	mov	w1, #0x40                  	// #64
   5ccec:	sub	w1, w1, w0
   5ccf0:	lsr	x2, x5, x0
   5ccf4:	lsl	x5, x5, x1
   5ccf8:	cmp	x5, #0x0
   5ccfc:	lsl	x6, x3, x1
   5cd00:	cset	x1, ne  // ne = any
   5cd04:	orr	x6, x6, x2
   5cd08:	lsr	x3, x3, x0
   5cd0c:	orr	x6, x6, x1
   5cd10:	orr	x7, x6, x3
   5cd14:	cbz	x7, 5cebc <mpfr_free_pool@@Base+0x1a40>
   5cd18:	and	x0, x6, #0x7
   5cd1c:	mov	x1, #0x0                   	// #0
   5cd20:	mov	w4, #0x1                   	// #1
   5cd24:	cbz	x0, 5d120 <mpfr_free_pool@@Base+0x1ca4>
   5cd28:	and	x2, x12, #0xc00000
   5cd2c:	cmp	x2, #0x400, lsl #12
   5cd30:	b.eq	5d06c <mpfr_free_pool@@Base+0x1bf0>  // b.none
   5cd34:	cmp	x2, #0x800, lsl #12
   5cd38:	b.eq	5d04c <mpfr_free_pool@@Base+0x1bd0>  // b.none
   5cd3c:	cbz	x2, 5d078 <mpfr_free_pool@@Base+0x1bfc>
   5cd40:	and	x2, x3, #0x8000000000000
   5cd44:	mov	w0, #0x10                  	// #16
   5cd48:	cbz	w4, 5cd50 <mpfr_free_pool@@Base+0x18d4>
   5cd4c:	orr	w0, w0, #0x8
   5cd50:	cbz	x2, 5ce00 <mpfr_free_pool@@Base+0x1984>
   5cd54:	add	x1, x1, #0x1
   5cd58:	mov	x2, #0x7fff                	// #32767
   5cd5c:	cmp	x1, x2
   5cd60:	b.eq	5cf74 <mpfr_free_pool@@Base+0x1af8>  // b.none
   5cd64:	ubfx	x7, x3, #3, #48
   5cd68:	extr	x5, x3, x6, #3
   5cd6c:	and	w1, w1, #0x7fff
   5cd70:	mov	x3, #0x0                   	// #0
   5cd74:	orr	w1, w1, w8, lsl #15
   5cd78:	bfxil	x3, x7, #0, #48
   5cd7c:	fmov	d0, x5
   5cd80:	bfi	x3, x1, #48, #16
   5cd84:	fmov	v0.d[1], x3
   5cd88:	cbnz	w0, 5cfd0 <mpfr_free_pool@@Base+0x1b54>
   5cd8c:	ldp	x29, x30, [sp], #48
   5cd90:	ret
   5cd94:	orr	x7, x2, x10
   5cd98:	cbz	x7, 5cc28 <mpfr_free_pool@@Base+0x17ac>
   5cd9c:	and	x4, x4, #0xff
   5cda0:	cmp	x11, x4
   5cda4:	b.eq	5cfe4 <mpfr_free_pool@@Base+0x1b68>  // b.none
   5cda8:	cmp	w0, #0x0
   5cdac:	b.gt	5cf1c <mpfr_free_pool@@Base+0x1aa0>
   5cdb0:	cbz	w0, 5ced4 <mpfr_free_pool@@Base+0x1a58>
   5cdb4:	mov	w8, w4
   5cdb8:	cbnz	x1, 5d1f0 <mpfr_free_pool@@Base+0x1d74>
   5cdbc:	orr	x1, x3, x6
   5cdc0:	cbz	x1, 5ce88 <mpfr_free_pool@@Base+0x1a0c>
   5cdc4:	cmn	w0, #0x1
   5cdc8:	b.eq	5d530 <mpfr_free_pool@@Base+0x20b4>  // b.none
   5cdcc:	mov	x1, #0x7fff                	// #32767
   5cdd0:	mvn	w0, w0
   5cdd4:	cmp	x13, x1
   5cdd8:	b.ne	5d204 <mpfr_free_pool@@Base+0x1d88>  // b.any
   5cddc:	orr	x0, x2, x10
   5cde0:	and	x11, x8, #0xff
   5cde4:	cbz	x0, 5d168 <mpfr_free_pool@@Base+0x1cec>
   5cde8:	lsr	x0, x2, #50
   5cdec:	mov	x6, x10
   5cdf0:	eor	x0, x0, #0x1
   5cdf4:	mov	x3, x2
   5cdf8:	and	w0, w0, #0x1
   5cdfc:	mov	x1, #0x7fff                	// #32767
   5ce00:	mov	x2, #0x7fff                	// #32767
   5ce04:	extr	x5, x3, x6, #3
   5ce08:	lsr	x7, x3, #3
   5ce0c:	cmp	x1, x2
   5ce10:	b.ne	5cec8 <mpfr_free_pool@@Base+0x1a4c>  // b.any
   5ce14:	orr	x1, x7, x5
   5ce18:	cbz	x1, 5d684 <mpfr_free_pool@@Base+0x2208>
   5ce1c:	orr	x7, x7, #0x800000000000
   5ce20:	mov	w1, #0x7fff                	// #32767
   5ce24:	and	x7, x7, #0xffffffffffff
   5ce28:	b	5cd70 <mpfr_free_pool@@Base+0x18f4>
   5ce2c:	cmp	w0, #0x0
   5ce30:	b.le	5cfe4 <mpfr_free_pool@@Base+0x1b68>
   5ce34:	cbz	x13, 5cf24 <mpfr_free_pool@@Base+0x1aa8>
   5ce38:	orr	x2, x2, #0x8000000000000
   5ce3c:	mov	x4, #0x7fff                	// #32767
   5ce40:	cmp	x1, x4
   5ce44:	b.eq	5d0d0 <mpfr_free_pool@@Base+0x1c54>  // b.none
   5ce48:	cmp	w0, #0x74
   5ce4c:	b.gt	5d244 <mpfr_free_pool@@Base+0x1dc8>
   5ce50:	cmp	w0, #0x3f
   5ce54:	b.gt	5d2e0 <mpfr_free_pool@@Base+0x1e64>
   5ce58:	mov	w4, #0x40                  	// #64
   5ce5c:	sub	w4, w4, w0
   5ce60:	lsr	x7, x10, x0
   5ce64:	lsl	x10, x10, x4
   5ce68:	cmp	x10, #0x0
   5ce6c:	lsl	x4, x2, x4
   5ce70:	cset	x5, ne  // ne = any
   5ce74:	orr	x4, x4, x7
   5ce78:	lsr	x2, x2, x0
   5ce7c:	orr	x0, x4, x5
   5ce80:	add	x3, x3, x2
   5ce84:	b	5d250 <mpfr_free_pool@@Base+0x1dd4>
   5ce88:	mov	x0, #0x7fff                	// #32767
   5ce8c:	cmp	x13, x0
   5ce90:	b.eq	5d4bc <mpfr_free_pool@@Base+0x2040>  // b.none
   5ce94:	mov	x3, x2
   5ce98:	mov	x6, x10
   5ce9c:	mov	x1, x13
   5cea0:	mov	x14, x4
   5cea4:	nop
   5cea8:	orr	x7, x6, x3
   5ceac:	and	x0, x6, #0x7
   5ceb0:	mov	w4, #0x0                   	// #0
   5ceb4:	cbnz	x1, 5cd24 <mpfr_free_pool@@Base+0x18a8>
   5ceb8:	cbnz	x7, 5cd18 <mpfr_free_pool@@Base+0x189c>
   5cebc:	mov	x5, #0x0                   	// #0
   5cec0:	mov	x1, #0x0                   	// #0
   5cec4:	mov	w0, #0x0                   	// #0
   5cec8:	and	x7, x7, #0xffffffffffff
   5cecc:	and	w1, w1, #0x7fff
   5ced0:	b	5cd70 <mpfr_free_pool@@Base+0x18f4>
   5ced4:	add	x7, x1, #0x1
   5ced8:	tst	x7, #0x7ffe
   5cedc:	b.ne	5d1c0 <mpfr_free_pool@@Base+0x1d44>  // b.any
   5cee0:	orr	x11, x3, x6
   5cee4:	orr	x7, x2, x10
   5cee8:	cbnz	x1, 5d350 <mpfr_free_pool@@Base+0x1ed4>
   5ceec:	cbz	x11, 5d3dc <mpfr_free_pool@@Base+0x1f60>
   5cef0:	cbz	x7, 5d3f0 <mpfr_free_pool@@Base+0x1f74>
   5cef4:	subs	x9, x6, x10
   5cef8:	cmp	x6, x10
   5cefc:	sbc	x5, x3, x2
   5cf00:	tbz	x5, #51, 5d598 <mpfr_free_pool@@Base+0x211c>
   5cf04:	subs	x6, x10, x6
   5cf08:	mov	w8, w4
   5cf0c:	sbc	x3, x2, x3
   5cf10:	mov	x14, x4
   5cf14:	orr	x7, x6, x3
   5cf18:	b	5cd14 <mpfr_free_pool@@Base+0x1898>
   5cf1c:	orr	x2, x2, #0x8000000000000
   5cf20:	b	5cc54 <mpfr_free_pool@@Base+0x17d8>
   5cf24:	orr	x4, x2, x10
   5cf28:	cbz	x4, 5d0fc <mpfr_free_pool@@Base+0x1c80>
   5cf2c:	subs	w0, w0, #0x1
   5cf30:	b.ne	5ce3c <mpfr_free_pool@@Base+0x19c0>  // b.any
   5cf34:	adds	x6, x6, x10
   5cf38:	adc	x3, x2, x3
   5cf3c:	nop
   5cf40:	tbz	x3, #51, 5cea8 <mpfr_free_pool@@Base+0x1a2c>
   5cf44:	add	x1, x1, #0x1
   5cf48:	mov	x0, #0x7fff                	// #32767
   5cf4c:	cmp	x1, x0
   5cf50:	b.eq	5d3fc <mpfr_free_pool@@Base+0x1f80>  // b.none
   5cf54:	and	x0, x6, #0x1
   5cf58:	and	x2, x3, #0xfff7ffffffffffff
   5cf5c:	orr	x6, x0, x6, lsr #1
   5cf60:	mov	w4, #0x0                   	// #0
   5cf64:	orr	x6, x6, x3, lsl #63
   5cf68:	lsr	x3, x2, #1
   5cf6c:	and	x0, x6, #0x7
   5cf70:	b	5cd24 <mpfr_free_pool@@Base+0x18a8>
   5cf74:	and	x2, x12, #0xc00000
   5cf78:	cbz	x2, 5cfb0 <mpfr_free_pool@@Base+0x1b34>
   5cf7c:	cmp	x2, #0x400, lsl #12
   5cf80:	b.eq	5cfac <mpfr_free_pool@@Base+0x1b30>  // b.none
   5cf84:	cmp	x2, #0x800, lsl #12
   5cf88:	and	w14, w14, #0x1
   5cf8c:	csel	w14, w14, wzr, eq  // eq = none
   5cf90:	cbnz	w14, 5cfb0 <mpfr_free_pool@@Base+0x1b34>
   5cf94:	mov	w1, #0x14                  	// #20
   5cf98:	mov	x5, #0xffffffffffffffff    	// #-1
   5cf9c:	orr	w0, w0, w1
   5cfa0:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   5cfa4:	mov	x1, #0x7ffe                	// #32766
   5cfa8:	b	5cec8 <mpfr_free_pool@@Base+0x1a4c>
   5cfac:	cbnz	x14, 5cf94 <mpfr_free_pool@@Base+0x1b18>
   5cfb0:	mov	w1, #0x14                  	// #20
   5cfb4:	and	x11, x8, #0xff
   5cfb8:	orr	w0, w0, w1
   5cfbc:	mov	x2, #0x0                   	// #0
   5cfc0:	fmov	d0, x2
   5cfc4:	lsl	x11, x11, #63
   5cfc8:	orr	x3, x11, #0x7fff000000000000
   5cfcc:	fmov	v0.d[1], x3
   5cfd0:	str	q0, [sp, #16]
   5cfd4:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5cfd8:	ldr	q0, [sp, #16]
   5cfdc:	ldp	x29, x30, [sp], #48
   5cfe0:	ret
   5cfe4:	cbz	w0, 5d180 <mpfr_free_pool@@Base+0x1d04>
   5cfe8:	cbz	x1, 5d13c <mpfr_free_pool@@Base+0x1cc0>
   5cfec:	mov	x1, #0x7fff                	// #32767
   5cff0:	neg	w0, w0
   5cff4:	orr	x3, x3, #0x8000000000000
   5cff8:	cmp	x13, x1
   5cffc:	b.eq	5d15c <mpfr_free_pool@@Base+0x1ce0>  // b.none
   5d000:	cmp	w0, #0x74
   5d004:	b.gt	5d450 <mpfr_free_pool@@Base+0x1fd4>
   5d008:	cmp	w0, #0x3f
   5d00c:	b.gt	5d504 <mpfr_free_pool@@Base+0x2088>
   5d010:	mov	w1, #0x40                  	// #64
   5d014:	sub	w1, w1, w0
   5d018:	lsr	x4, x6, x0
   5d01c:	lsl	x6, x6, x1
   5d020:	cmp	x6, #0x0
   5d024:	lsl	x6, x3, x1
   5d028:	cset	x1, ne  // ne = any
   5d02c:	orr	x6, x6, x4
   5d030:	lsr	x0, x3, x0
   5d034:	orr	x6, x6, x1
   5d038:	add	x2, x2, x0
   5d03c:	adds	x6, x6, x10
   5d040:	mov	x1, x13
   5d044:	cinc	x3, x2, cs  // cs = hs, nlast
   5d048:	b	5cf40 <mpfr_free_pool@@Base+0x1ac4>
   5d04c:	mov	w0, #0x10                  	// #16
   5d050:	cbz	x14, 5d05c <mpfr_free_pool@@Base+0x1be0>
   5d054:	adds	x6, x6, #0x8
   5d058:	cinc	x3, x3, cs  // cs = hs, nlast
   5d05c:	and	x2, x3, #0x8000000000000
   5d060:	cbz	w4, 5cd50 <mpfr_free_pool@@Base+0x18d4>
   5d064:	orr	w0, w0, #0x8
   5d068:	b	5cd50 <mpfr_free_pool@@Base+0x18d4>
   5d06c:	mov	w0, #0x10                  	// #16
   5d070:	cbnz	x14, 5d05c <mpfr_free_pool@@Base+0x1be0>
   5d074:	b	5d054 <mpfr_free_pool@@Base+0x1bd8>
   5d078:	and	x2, x6, #0xf
   5d07c:	mov	w0, #0x10                  	// #16
   5d080:	cmp	x2, #0x4
   5d084:	b.eq	5d05c <mpfr_free_pool@@Base+0x1be0>  // b.none
   5d088:	adds	x6, x6, #0x4
   5d08c:	cinc	x3, x3, cs  // cs = hs, nlast
   5d090:	b	5d05c <mpfr_free_pool@@Base+0x1be0>
   5d094:	mov	x6, x5
   5d098:	and	x3, x3, #0xfff7ffffffffffff
   5d09c:	sub	x1, x1, x2
   5d0a0:	orr	x7, x6, x3
   5d0a4:	and	x0, x6, #0x7
   5d0a8:	mov	w4, #0x0                   	// #0
   5d0ac:	cbz	x1, 5ceb8 <mpfr_free_pool@@Base+0x1a3c>
   5d0b0:	b	5cd24 <mpfr_free_pool@@Base+0x18a8>
   5d0b4:	clz	x3, x6
   5d0b8:	add	w0, w3, #0x34
   5d0bc:	cmp	w0, #0x3f
   5d0c0:	b.le	5ccb8 <mpfr_free_pool@@Base+0x183c>
   5d0c4:	sub	w3, w3, #0xc
   5d0c8:	lsl	x3, x6, x3
   5d0cc:	b	5cccc <mpfr_free_pool@@Base+0x1850>
   5d0d0:	orr	x0, x3, x6
   5d0d4:	cbz	x0, 5d168 <mpfr_free_pool@@Base+0x1cec>
   5d0d8:	lsr	x0, x3, #50
   5d0dc:	mov	x1, #0x7fff                	// #32767
   5d0e0:	eor	x0, x0, #0x1
   5d0e4:	and	w0, w0, #0x1
   5d0e8:	b	5ce00 <mpfr_free_pool@@Base+0x1984>
   5d0ec:	orr	x2, x2, x10
   5d0f0:	cmp	x2, #0x0
   5d0f4:	cset	x4, ne  // ne = any
   5d0f8:	b	5cc9c <mpfr_free_pool@@Base+0x1820>
   5d0fc:	mov	x0, #0x7fff                	// #32767
   5d100:	cmp	x1, x0
   5d104:	b.ne	5cea8 <mpfr_free_pool@@Base+0x1a2c>  // b.any
   5d108:	orr	x0, x3, x6
   5d10c:	cbnz	x0, 5d0d8 <mpfr_free_pool@@Base+0x1c5c>
   5d110:	mov	x5, #0x0                   	// #0
   5d114:	mov	x7, #0x0                   	// #0
   5d118:	mov	w0, #0x0                   	// #0
   5d11c:	b	5ce14 <mpfr_free_pool@@Base+0x1998>
   5d120:	and	x2, x3, #0x8000000000000
   5d124:	mov	w0, #0x0                   	// #0
   5d128:	cbz	w4, 5cd50 <mpfr_free_pool@@Base+0x18d4>
   5d12c:	mov	w0, #0x0                   	// #0
   5d130:	tbz	w12, #11, 5cd50 <mpfr_free_pool@@Base+0x18d4>
   5d134:	orr	w0, w0, #0x8
   5d138:	b	5cd50 <mpfr_free_pool@@Base+0x18d4>
   5d13c:	orr	x1, x3, x6
   5d140:	cbz	x1, 5d4c8 <mpfr_free_pool@@Base+0x204c>
   5d144:	cmn	w0, #0x1
   5d148:	b.eq	5d618 <mpfr_free_pool@@Base+0x219c>  // b.none
   5d14c:	mov	x1, #0x7fff                	// #32767
   5d150:	mvn	w0, w0
   5d154:	cmp	x13, x1
   5d158:	b.ne	5d000 <mpfr_free_pool@@Base+0x1b84>  // b.any
   5d15c:	orr	x0, x2, x10
   5d160:	cbnz	x0, 5cde8 <mpfr_free_pool@@Base+0x196c>
   5d164:	nop
   5d168:	mov	x2, #0x0                   	// #0
   5d16c:	fmov	d0, x2
   5d170:	lsl	x0, x11, #63
   5d174:	orr	x3, x0, #0x7fff000000000000
   5d178:	fmov	v0.d[1], x3
   5d17c:	b	5cd8c <mpfr_free_pool@@Base+0x1910>
   5d180:	add	x7, x1, #0x1
   5d184:	tst	x7, #0x7ffe
   5d188:	b.ne	5d30c <mpfr_free_pool@@Base+0x1e90>  // b.any
   5d18c:	orr	x11, x3, x6
   5d190:	cbnz	x1, 5d494 <mpfr_free_pool@@Base+0x2018>
   5d194:	orr	x7, x2, x10
   5d198:	cbz	x11, 5d4f8 <mpfr_free_pool@@Base+0x207c>
   5d19c:	cbz	x7, 5d3f0 <mpfr_free_pool@@Base+0x1f74>
   5d1a0:	adds	x6, x6, x10
   5d1a4:	adc	x3, x2, x3
   5d1a8:	tbz	x3, #51, 5cd10 <mpfr_free_pool@@Base+0x1894>
   5d1ac:	and	x3, x3, #0xfff7ffffffffffff
   5d1b0:	and	x0, x6, #0x7
   5d1b4:	mov	w4, #0x0                   	// #0
   5d1b8:	mov	x1, #0x1                   	// #1
   5d1bc:	b	5cd24 <mpfr_free_pool@@Base+0x18a8>
   5d1c0:	subs	x9, x6, x10
   5d1c4:	cmp	x6, x10
   5d1c8:	sbc	x5, x3, x2
   5d1cc:	tbnz	x5, #51, 5d338 <mpfr_free_pool@@Base+0x1ebc>
   5d1d0:	orr	x7, x9, x5
   5d1d4:	cbnz	x7, 5d448 <mpfr_free_pool@@Base+0x1fcc>
   5d1d8:	and	x12, x12, #0xc00000
   5d1dc:	mov	x5, #0x0                   	// #0
   5d1e0:	cmp	x12, #0x800, lsl #12
   5d1e4:	mov	x1, #0x0                   	// #0
   5d1e8:	cset	w8, eq  // eq = none
   5d1ec:	b	5cec8 <mpfr_free_pool@@Base+0x1a4c>
   5d1f0:	mov	x1, #0x7fff                	// #32767
   5d1f4:	neg	w0, w0
   5d1f8:	orr	x3, x3, #0x8000000000000
   5d1fc:	cmp	x13, x1
   5d200:	b.eq	5cddc <mpfr_free_pool@@Base+0x1960>  // b.none
   5d204:	cmp	w0, #0x74
   5d208:	b.gt	5d2c0 <mpfr_free_pool@@Base+0x1e44>
   5d20c:	cmp	w0, #0x3f
   5d210:	b.gt	5d460 <mpfr_free_pool@@Base+0x1fe4>
   5d214:	mov	w1, #0x40                  	// #64
   5d218:	sub	w1, w1, w0
   5d21c:	lsr	x5, x6, x0
   5d220:	lsl	x6, x6, x1
   5d224:	cmp	x6, #0x0
   5d228:	lsl	x6, x3, x1
   5d22c:	cset	x1, ne  // ne = any
   5d230:	orr	x6, x6, x5
   5d234:	lsr	x0, x3, x0
   5d238:	orr	x6, x6, x1
   5d23c:	sub	x2, x2, x0
   5d240:	b	5d2cc <mpfr_free_pool@@Base+0x1e50>
   5d244:	orr	x2, x2, x10
   5d248:	cmp	x2, #0x0
   5d24c:	cset	x0, ne  // ne = any
   5d250:	adds	x6, x0, x6
   5d254:	cinc	x3, x3, cs  // cs = hs, nlast
   5d258:	b	5cf40 <mpfr_free_pool@@Base+0x1ac4>
   5d25c:	mov	w2, #0x80                  	// #128
   5d260:	sub	w2, w2, w0
   5d264:	cmp	w0, #0x40
   5d268:	sub	w6, w1, #0x3f
   5d26c:	lsl	x0, x3, x2
   5d270:	orr	x0, x5, x0
   5d274:	csel	x5, x0, x5, ne  // ne = any
   5d278:	lsr	x6, x3, x6
   5d27c:	cmp	x5, #0x0
   5d280:	mov	x3, #0x0                   	// #0
   5d284:	cset	x0, ne  // ne = any
   5d288:	orr	x6, x0, x6
   5d28c:	mov	x7, x6
   5d290:	b	5cd14 <mpfr_free_pool@@Base+0x1898>
   5d294:	mov	w5, #0x80                  	// #128
   5d298:	sub	w5, w5, w0
   5d29c:	subs	w0, w0, #0x40
   5d2a0:	lsl	x5, x2, x5
   5d2a4:	orr	x5, x10, x5
   5d2a8:	csel	x10, x5, x10, ne  // ne = any
   5d2ac:	lsr	x2, x2, x0
   5d2b0:	cmp	x10, #0x0
   5d2b4:	cset	x4, ne  // ne = any
   5d2b8:	orr	x4, x4, x2
   5d2bc:	b	5cc9c <mpfr_free_pool@@Base+0x1820>
   5d2c0:	orr	x3, x3, x6
   5d2c4:	cmp	x3, #0x0
   5d2c8:	cset	x6, ne  // ne = any
   5d2cc:	subs	x6, x10, x6
   5d2d0:	mov	x1, x13
   5d2d4:	sbc	x3, x2, xzr
   5d2d8:	mov	x14, x4
   5d2dc:	b	5cca4 <mpfr_free_pool@@Base+0x1828>
   5d2e0:	mov	w4, #0x80                  	// #128
   5d2e4:	sub	w4, w4, w0
   5d2e8:	subs	w0, w0, #0x40
   5d2ec:	lsl	x4, x2, x4
   5d2f0:	orr	x4, x10, x4
   5d2f4:	csel	x10, x4, x10, ne  // ne = any
   5d2f8:	lsr	x2, x2, x0
   5d2fc:	cmp	x10, #0x0
   5d300:	cset	x0, ne  // ne = any
   5d304:	orr	x0, x0, x2
   5d308:	b	5d250 <mpfr_free_pool@@Base+0x1dd4>
   5d30c:	mov	x0, #0x7fff                	// #32767
   5d310:	cmp	x7, x0
   5d314:	b.eq	5d548 <mpfr_free_pool@@Base+0x20cc>  // b.none
   5d318:	adds	x6, x6, x10
   5d31c:	mov	x1, x7
   5d320:	adc	x3, x2, x3
   5d324:	mov	w4, #0x0                   	// #0
   5d328:	ubfx	x0, x6, #1, #3
   5d32c:	extr	x6, x3, x6, #1
   5d330:	lsr	x3, x3, #1
   5d334:	b	5cd24 <mpfr_free_pool@@Base+0x18a8>
   5d338:	cmp	x10, x6
   5d33c:	mov	w8, w4
   5d340:	sbc	x5, x2, x3
   5d344:	sub	x6, x10, x6
   5d348:	mov	x14, x4
   5d34c:	b	5ccac <mpfr_free_pool@@Base+0x1830>
   5d350:	mov	x12, #0x7fff                	// #32767
   5d354:	cmp	x1, x12
   5d358:	b.eq	5d380 <mpfr_free_pool@@Base+0x1f04>  // b.none
   5d35c:	cmp	x13, x12
   5d360:	b.eq	5d574 <mpfr_free_pool@@Base+0x20f8>  // b.none
   5d364:	cbnz	x11, 5d398 <mpfr_free_pool@@Base+0x1f1c>
   5d368:	cbnz	x7, 5d584 <mpfr_free_pool@@Base+0x2108>
   5d36c:	mov	x5, #0xffffffffffffffff    	// #-1
   5d370:	mov	x7, #0xffffffffffff        	// #281474976710655
   5d374:	mov	w0, #0x1                   	// #1
   5d378:	mov	w8, #0x0                   	// #0
   5d37c:	b	5ce1c <mpfr_free_pool@@Base+0x19a0>
   5d380:	cbz	x11, 5d56c <mpfr_free_pool@@Base+0x20f0>
   5d384:	lsr	x0, x3, #50
   5d388:	cmp	x13, x1
   5d38c:	eor	x0, x0, #0x1
   5d390:	and	w0, w0, #0x1
   5d394:	b.eq	5d574 <mpfr_free_pool@@Base+0x20f8>  // b.none
   5d398:	cbz	x7, 5cdfc <mpfr_free_pool@@Base+0x1980>
   5d39c:	bfi	x5, x3, #61, #3
   5d3a0:	lsr	x7, x3, #3
   5d3a4:	tbz	x3, #50, 5d3c0 <mpfr_free_pool@@Base+0x1f44>
   5d3a8:	lsr	x1, x2, #3
   5d3ac:	tbnz	x2, #50, 5d3c0 <mpfr_free_pool@@Base+0x1f44>
   5d3b0:	mov	x5, x9
   5d3b4:	mov	w8, w4
   5d3b8:	bfi	x5, x2, #61, #3
   5d3bc:	mov	x7, x1
   5d3c0:	extr	x7, x7, x5, #61
   5d3c4:	bfi	x5, x7, #61, #3
   5d3c8:	lsr	x7, x7, #3
   5d3cc:	b	5ce14 <mpfr_free_pool@@Base+0x1998>
   5d3d0:	subs	x6, x6, x10
   5d3d4:	sbc	x3, x3, x2
   5d3d8:	b	5cca4 <mpfr_free_pool@@Base+0x1828>
   5d3dc:	cbz	x7, 5d4e4 <mpfr_free_pool@@Base+0x2068>
   5d3e0:	mov	x3, x2
   5d3e4:	mov	x6, x10
   5d3e8:	mov	w8, w4
   5d3ec:	mov	x14, x4
   5d3f0:	mov	x1, #0x0                   	// #0
   5d3f4:	mov	x2, #0x0                   	// #0
   5d3f8:	b	5d12c <mpfr_free_pool@@Base+0x1cb0>
   5d3fc:	ands	x2, x12, #0xc00000
   5d400:	b.eq	5d48c <mpfr_free_pool@@Base+0x2010>  // b.none
   5d404:	cmp	x2, #0x400, lsl #12
   5d408:	eor	w0, w8, #0x1
   5d40c:	cset	w1, eq  // eq = none
   5d410:	tst	w1, w0
   5d414:	b.ne	5d560 <mpfr_free_pool@@Base+0x20e4>  // b.any
   5d418:	cmp	x2, #0x800, lsl #12
   5d41c:	b.eq	5d5b4 <mpfr_free_pool@@Base+0x2138>  // b.none
   5d420:	cmp	x2, #0x400, lsl #12
   5d424:	mov	w0, #0x14                  	// #20
   5d428:	b.ne	5cf78 <mpfr_free_pool@@Base+0x1afc>  // b.any
   5d42c:	mov	x3, #0xffffffffffffffff    	// #-1
   5d430:	mov	x1, #0x7ffe                	// #32766
   5d434:	mov	x6, x3
   5d438:	mov	w4, #0x0                   	// #0
   5d43c:	mov	w0, #0x14                  	// #20
   5d440:	cbnz	x14, 5d05c <mpfr_free_pool@@Base+0x1be0>
   5d444:	b	5d054 <mpfr_free_pool@@Base+0x1bd8>
   5d448:	mov	x6, x9
   5d44c:	b	5ccac <mpfr_free_pool@@Base+0x1830>
   5d450:	orr	x3, x3, x6
   5d454:	cmp	x3, #0x0
   5d458:	cset	x6, ne  // ne = any
   5d45c:	b	5d03c <mpfr_free_pool@@Base+0x1bc0>
   5d460:	mov	w1, #0x80                  	// #128
   5d464:	sub	w1, w1, w0
   5d468:	subs	w0, w0, #0x40
   5d46c:	lsl	x1, x3, x1
   5d470:	orr	x1, x6, x1
   5d474:	csel	x6, x1, x6, ne  // ne = any
   5d478:	lsr	x3, x3, x0
   5d47c:	cmp	x6, #0x0
   5d480:	cset	x6, ne  // ne = any
   5d484:	orr	x6, x6, x3
   5d488:	b	5d2cc <mpfr_free_pool@@Base+0x1e50>
   5d48c:	mov	w0, #0x14                  	// #20
   5d490:	b	5cfbc <mpfr_free_pool@@Base+0x1b40>
   5d494:	mov	x7, #0x7fff                	// #32767
   5d498:	cmp	x1, x7
   5d49c:	b.eq	5d5d0 <mpfr_free_pool@@Base+0x2154>  // b.none
   5d4a0:	cmp	x13, x7
   5d4a4:	b.eq	5d634 <mpfr_free_pool@@Base+0x21b8>  // b.none
   5d4a8:	cbnz	x11, 5d5e8 <mpfr_free_pool@@Base+0x216c>
   5d4ac:	mov	x3, x2
   5d4b0:	mov	x6, x10
   5d4b4:	mov	x1, #0x7fff                	// #32767
   5d4b8:	b	5ce00 <mpfr_free_pool@@Base+0x1984>
   5d4bc:	orr	x0, x2, x10
   5d4c0:	cbz	x0, 5d110 <mpfr_free_pool@@Base+0x1c94>
   5d4c4:	b	5cde8 <mpfr_free_pool@@Base+0x196c>
   5d4c8:	mov	x0, #0x7fff                	// #32767
   5d4cc:	cmp	x13, x0
   5d4d0:	b.eq	5d4bc <mpfr_free_pool@@Base+0x2040>  // b.none
   5d4d4:	mov	x3, x2
   5d4d8:	mov	x6, x10
   5d4dc:	mov	x1, x13
   5d4e0:	b	5cea8 <mpfr_free_pool@@Base+0x1a2c>
   5d4e4:	and	x12, x12, #0xc00000
   5d4e8:	mov	x5, #0x0                   	// #0
   5d4ec:	cmp	x12, #0x800, lsl #12
   5d4f0:	cset	w8, eq  // eq = none
   5d4f4:	b	5cec8 <mpfr_free_pool@@Base+0x1a4c>
   5d4f8:	mov	x3, x2
   5d4fc:	mov	x6, x10
   5d500:	b	5cd14 <mpfr_free_pool@@Base+0x1898>
   5d504:	mov	w1, #0x80                  	// #128
   5d508:	sub	w1, w1, w0
   5d50c:	subs	w0, w0, #0x40
   5d510:	lsl	x1, x3, x1
   5d514:	orr	x1, x6, x1
   5d518:	csel	x6, x1, x6, ne  // ne = any
   5d51c:	lsr	x3, x3, x0
   5d520:	cmp	x6, #0x0
   5d524:	cset	x6, ne  // ne = any
   5d528:	orr	x6, x6, x3
   5d52c:	b	5d03c <mpfr_free_pool@@Base+0x1bc0>
   5d530:	cmp	x10, x6
   5d534:	mov	x1, x13
   5d538:	sbc	x3, x2, x3
   5d53c:	sub	x6, x10, x6
   5d540:	mov	x14, x4
   5d544:	b	5cca4 <mpfr_free_pool@@Base+0x1828>
   5d548:	ands	x2, x12, #0xc00000
   5d54c:	b.eq	5d48c <mpfr_free_pool@@Base+0x2010>  // b.none
   5d550:	cmp	x2, #0x400, lsl #12
   5d554:	eor	w0, w8, #0x1
   5d558:	csel	w0, w0, wzr, eq  // eq = none
   5d55c:	cbz	w0, 5d418 <mpfr_free_pool@@Base+0x1f9c>
   5d560:	mov	w0, #0x14                  	// #20
   5d564:	mov	x11, #0x0                   	// #0
   5d568:	b	5cfbc <mpfr_free_pool@@Base+0x1b40>
   5d56c:	cmp	x13, x1
   5d570:	b.ne	5d368 <mpfr_free_pool@@Base+0x1eec>  // b.any
   5d574:	cbz	x7, 5d628 <mpfr_free_pool@@Base+0x21ac>
   5d578:	tst	x2, #0x4000000000000
   5d57c:	csinc	w0, w0, wzr, ne  // ne = any
   5d580:	cbnz	x11, 5d39c <mpfr_free_pool@@Base+0x1f20>
   5d584:	mov	w8, w4
   5d588:	mov	x3, x2
   5d58c:	mov	x6, x10
   5d590:	mov	x1, #0x7fff                	// #32767
   5d594:	b	5ce00 <mpfr_free_pool@@Base+0x1984>
   5d598:	orr	x7, x9, x5
   5d59c:	cbz	x7, 5d4e4 <mpfr_free_pool@@Base+0x2068>
   5d5a0:	mov	x3, x5
   5d5a4:	and	x0, x9, #0x7
   5d5a8:	mov	x6, x9
   5d5ac:	mov	w4, #0x1                   	// #1
   5d5b0:	b	5cd24 <mpfr_free_pool@@Base+0x18a8>
   5d5b4:	cbnz	x11, 5d648 <mpfr_free_pool@@Base+0x21cc>
   5d5b8:	mov	x3, #0xffffffffffffffff    	// #-1
   5d5bc:	mov	w8, #0x0                   	// #0
   5d5c0:	mov	x6, x3
   5d5c4:	mov	x1, #0x7ffe                	// #32766
   5d5c8:	mov	w0, #0x14                  	// #20
   5d5cc:	b	5cd54 <mpfr_free_pool@@Base+0x18d8>
   5d5d0:	cbz	x11, 5d654 <mpfr_free_pool@@Base+0x21d8>
   5d5d4:	lsr	x0, x3, #50
   5d5d8:	cmp	x13, x1
   5d5dc:	eor	x0, x0, #0x1
   5d5e0:	and	w0, w0, #0x1
   5d5e4:	b.eq	5d674 <mpfr_free_pool@@Base+0x21f8>  // b.none
   5d5e8:	orr	x10, x2, x10
   5d5ec:	cbz	x10, 5cdfc <mpfr_free_pool@@Base+0x1980>
   5d5f0:	bfi	x5, x3, #61, #3
   5d5f4:	lsr	x7, x3, #3
   5d5f8:	tbz	x3, #50, 5d3c0 <mpfr_free_pool@@Base+0x1f44>
   5d5fc:	lsr	x1, x2, #3
   5d600:	tbnz	x2, #50, 5d3c0 <mpfr_free_pool@@Base+0x1f44>
   5d604:	and	x5, x9, #0x1fffffffffffffff
   5d608:	mov	w8, w4
   5d60c:	orr	x5, x5, x2, lsl #61
   5d610:	mov	x7, x1
   5d614:	b	5d3c0 <mpfr_free_pool@@Base+0x1f44>
   5d618:	adds	x6, x6, x10
   5d61c:	mov	x1, x13
   5d620:	adc	x3, x2, x3
   5d624:	b	5cf40 <mpfr_free_pool@@Base+0x1ac4>
   5d628:	cbz	x11, 5d36c <mpfr_free_pool@@Base+0x1ef0>
   5d62c:	mov	x1, #0x7fff                	// #32767
   5d630:	b	5ce00 <mpfr_free_pool@@Base+0x1984>
   5d634:	orr	x1, x2, x10
   5d638:	cbnz	x1, 5d664 <mpfr_free_pool@@Base+0x21e8>
   5d63c:	cbz	x11, 5d110 <mpfr_free_pool@@Base+0x1c94>
   5d640:	mov	x1, #0x7fff                	// #32767
   5d644:	b	5ce00 <mpfr_free_pool@@Base+0x1984>
   5d648:	mov	w0, #0x14                  	// #20
   5d64c:	mov	x11, #0x1                   	// #1
   5d650:	b	5cfbc <mpfr_free_pool@@Base+0x1b40>
   5d654:	cmp	x13, x1
   5d658:	b.ne	5d4ac <mpfr_free_pool@@Base+0x2030>  // b.any
   5d65c:	orr	x1, x2, x10
   5d660:	cbz	x1, 5d110 <mpfr_free_pool@@Base+0x1c94>
   5d664:	tst	x2, #0x4000000000000
   5d668:	csinc	w0, w0, wzr, ne  // ne = any
   5d66c:	cbnz	x11, 5d5f0 <mpfr_free_pool@@Base+0x2174>
   5d670:	b	5d4ac <mpfr_free_pool@@Base+0x2030>
   5d674:	orr	x1, x2, x10
   5d678:	cbnz	x1, 5d664 <mpfr_free_pool@@Base+0x21e8>
   5d67c:	mov	x1, #0x7fff                	// #32767
   5d680:	b	5ce00 <mpfr_free_pool@@Base+0x1984>
   5d684:	mov	x5, #0x0                   	// #0
   5d688:	mov	w1, #0x7fff                	// #32767
   5d68c:	mov	x7, #0x0                   	// #0
   5d690:	b	5cd70 <mpfr_free_pool@@Base+0x18f4>
   5d694:	nop
   5d698:	mrs	x0, fpcr
   5d69c:	fmov	x0, d0
   5d6a0:	ubfx	x1, x0, #52, #11
   5d6a4:	lsr	x4, x0, #63
   5d6a8:	add	x2, x1, #0x1
   5d6ac:	and	w4, w4, #0xff
   5d6b0:	tst	x2, #0x7fe
   5d6b4:	ubfx	x0, x0, #0, #52
   5d6b8:	b.eq	5d6ec <mpfr_free_pool@@Base+0x2270>  // b.none
   5d6bc:	lsr	x5, x0, #4
   5d6c0:	mov	x3, #0x0                   	// #0
   5d6c4:	and	x5, x5, #0xffffffffffff
   5d6c8:	mov	w2, #0x3c00                	// #15360
   5d6cc:	add	w1, w1, w2
   5d6d0:	lsl	x0, x0, #60
   5d6d4:	bfxil	x3, x5, #0, #48
   5d6d8:	fmov	d0, x0
   5d6dc:	bfi	x3, x1, #48, #15
   5d6e0:	bfi	x3, x4, #63, #1
   5d6e4:	fmov	v0.d[1], x3
   5d6e8:	ret
   5d6ec:	cbnz	x1, 5d740 <mpfr_free_pool@@Base+0x22c4>
   5d6f0:	cbz	x0, 5d78c <mpfr_free_pool@@Base+0x2310>
   5d6f4:	clz	x2, x0
   5d6f8:	cmp	w2, #0xe
   5d6fc:	b.gt	5d7d8 <mpfr_free_pool@@Base+0x235c>
   5d700:	add	w1, w2, #0x31
   5d704:	mov	w5, #0xf                   	// #15
   5d708:	sub	w5, w5, w2
   5d70c:	lsr	x5, x0, x5
   5d710:	lsl	x0, x0, x1
   5d714:	and	x5, x5, #0xffffffffffff
   5d718:	mov	w1, #0x3c0c                	// #15372
   5d71c:	mov	x3, #0x0                   	// #0
   5d720:	sub	w1, w1, w2
   5d724:	and	w1, w1, #0x7fff
   5d728:	bfxil	x3, x5, #0, #48
   5d72c:	fmov	d0, x0
   5d730:	bfi	x3, x1, #48, #15
   5d734:	bfi	x3, x4, #63, #1
   5d738:	fmov	v0.d[1], x3
   5d73c:	ret
   5d740:	cbz	x0, 5d7b0 <mpfr_free_pool@@Base+0x2334>
   5d744:	lsr	x1, x0, #4
   5d748:	mov	x3, #0x0                   	// #0
   5d74c:	orr	x1, x1, #0x800000000000
   5d750:	lsl	x2, x0, #60
   5d754:	fmov	d0, x2
   5d758:	bfxil	x3, x1, #0, #48
   5d75c:	orr	x3, x3, #0x7fff000000000000
   5d760:	bfi	x3, x4, #63, #1
   5d764:	fmov	v0.d[1], x3
   5d768:	tbnz	x0, #51, 5d7d4 <mpfr_free_pool@@Base+0x2358>
   5d76c:	stp	x29, x30, [sp, #-32]!
   5d770:	mov	w0, #0x1                   	// #1
   5d774:	mov	x29, sp
   5d778:	str	q0, [sp, #16]
   5d77c:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5d780:	ldr	q0, [sp, #16]
   5d784:	ldp	x29, x30, [sp], #32
   5d788:	ret
   5d78c:	mov	x5, #0x0                   	// #0
   5d790:	mov	x3, #0x0                   	// #0
   5d794:	bfxil	x3, x5, #0, #48
   5d798:	mov	w1, #0x0                   	// #0
   5d79c:	fmov	d0, x0
   5d7a0:	bfi	x3, x1, #48, #15
   5d7a4:	bfi	x3, x4, #63, #1
   5d7a8:	fmov	v0.d[1], x3
   5d7ac:	ret
   5d7b0:	mov	x5, #0x0                   	// #0
   5d7b4:	mov	x3, #0x0                   	// #0
   5d7b8:	bfxil	x3, x5, #0, #48
   5d7bc:	mov	w1, #0x7fff                	// #32767
   5d7c0:	fmov	d0, x0
   5d7c4:	bfi	x3, x1, #48, #15
   5d7c8:	bfi	x3, x4, #63, #1
   5d7cc:	fmov	v0.d[1], x3
   5d7d0:	ret
   5d7d4:	ret
   5d7d8:	sub	w5, w2, #0xf
   5d7dc:	lsl	x5, x0, x5
   5d7e0:	mov	x0, #0x0                   	// #0
   5d7e4:	b	5d714 <mpfr_free_pool@@Base+0x2298>
   5d7e8:	stp	x29, x30, [sp, #-48]!
   5d7ec:	mov	x29, sp
   5d7f0:	str	x19, [sp, #16]
   5d7f4:	str	q0, [sp, #32]
   5d7f8:	ldp	x3, x0, [sp, #32]
   5d7fc:	mrs	x6, fpcr
   5d800:	ubfx	x2, x0, #48, #15
   5d804:	lsr	x4, x0, #63
   5d808:	add	x1, x2, #0x1
   5d80c:	ubfiz	x0, x0, #3, #48
   5d810:	tst	x1, #0x7ffe
   5d814:	and	w4, w4, #0xff
   5d818:	orr	x0, x0, x3, lsr #61
   5d81c:	lsl	x5, x3, #3
   5d820:	b.eq	5d8a0 <mpfr_free_pool@@Base+0x2424>  // b.none
   5d824:	mov	x1, #0xffffffffffffc400    	// #-15360
   5d828:	add	x2, x2, x1
   5d82c:	cmp	x2, #0x7fe
   5d830:	b.le	5d8e4 <mpfr_free_pool@@Base+0x2468>
   5d834:	ands	x0, x6, #0xc00000
   5d838:	b.eq	5d97c <mpfr_free_pool@@Base+0x2500>  // b.none
   5d83c:	cmp	x0, #0x400, lsl #12
   5d840:	b.eq	5dab0 <mpfr_free_pool@@Base+0x2634>  // b.none
   5d844:	cmp	x0, #0x800, lsl #12
   5d848:	csel	w7, w4, wzr, eq  // eq = none
   5d84c:	cbnz	w7, 5d97c <mpfr_free_pool@@Base+0x2500>
   5d850:	mov	x1, #0xffffffffffffffff    	// #-1
   5d854:	mov	x2, #0x7fe                 	// #2046
   5d858:	mov	w0, #0x14                  	// #20
   5d85c:	b.ne	5d928 <mpfr_free_pool@@Base+0x24ac>  // b.any
   5d860:	cmp	w4, #0x0
   5d864:	add	x3, x1, #0x8
   5d868:	csel	x1, x3, x1, ne  // ne = any
   5d86c:	and	x3, x1, #0x80000000000000
   5d870:	cbnz	w7, 5d930 <mpfr_free_pool@@Base+0x24b4>
   5d874:	cbnz	x3, 5d938 <mpfr_free_pool@@Base+0x24bc>
   5d878:	lsr	x1, x1, #3
   5d87c:	and	w3, w2, #0x7ff
   5d880:	and	x4, x4, #0xff
   5d884:	bfi	x1, x3, #52, #12
   5d888:	orr	x19, x1, x4, lsl #63
   5d88c:	bl	5daf8 <mpfr_free_pool@@Base+0x267c>
   5d890:	fmov	d0, x19
   5d894:	ldr	x19, [sp, #16]
   5d898:	ldp	x29, x30, [sp], #48
   5d89c:	ret
   5d8a0:	orr	x1, x0, x5
   5d8a4:	cbnz	x2, 5d8d8 <mpfr_free_pool@@Base+0x245c>
   5d8a8:	cbnz	x1, 5d954 <mpfr_free_pool@@Base+0x24d8>
   5d8ac:	mov	w0, #0x0                   	// #0
   5d8b0:	and	w2, w2, #0x7ff
   5d8b4:	mov	x1, #0x0                   	// #0
   5d8b8:	and	x4, x4, #0xff
   5d8bc:	bfi	x1, x2, #52, #12
   5d8c0:	orr	x19, x1, x4, lsl #63
   5d8c4:	cbnz	w0, 5d88c <mpfr_free_pool@@Base+0x2410>
   5d8c8:	fmov	d0, x19
   5d8cc:	ldr	x19, [sp, #16]
   5d8d0:	ldp	x29, x30, [sp], #48
   5d8d4:	ret
   5d8d8:	cbnz	x1, 5d988 <mpfr_free_pool@@Base+0x250c>
   5d8dc:	mov	x2, #0x7ff                 	// #2047
   5d8e0:	b	5d8ac <mpfr_free_pool@@Base+0x2430>
   5d8e4:	cmp	x2, #0x0
   5d8e8:	b.le	5d9b0 <mpfr_free_pool@@Base+0x2534>
   5d8ec:	cmp	xzr, x3, lsl #7
   5d8f0:	mov	w7, #0x0                   	// #0
   5d8f4:	cset	x1, ne  // ne = any
   5d8f8:	orr	x5, x1, x5, lsr #60
   5d8fc:	orr	x1, x5, x0, lsl #4
   5d900:	mov	w0, #0x0                   	// #0
   5d904:	tst	x5, #0x7
   5d908:	b.eq	5da68 <mpfr_free_pool@@Base+0x25ec>  // b.none
   5d90c:	and	x3, x6, #0xc00000
   5d910:	cmp	x3, #0x400, lsl #12
   5d914:	b.eq	5d96c <mpfr_free_pool@@Base+0x24f0>  // b.none
   5d918:	cmp	x3, #0x800, lsl #12
   5d91c:	mov	w0, #0x10                  	// #16
   5d920:	b.eq	5d860 <mpfr_free_pool@@Base+0x23e4>  // b.none
   5d924:	cbz	x3, 5da74 <mpfr_free_pool@@Base+0x25f8>
   5d928:	and	x3, x1, #0x80000000000000
   5d92c:	cbz	w7, 5d934 <mpfr_free_pool@@Base+0x24b8>
   5d930:	orr	w0, w0, #0x8
   5d934:	cbz	x3, 5da68 <mpfr_free_pool@@Base+0x25ec>
   5d938:	cmp	x2, #0x7fe
   5d93c:	add	x2, x2, #0x1
   5d940:	b.eq	5da10 <mpfr_free_pool@@Base+0x2594>  // b.none
   5d944:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   5d948:	and	w2, w2, #0x7ff
   5d94c:	and	x1, x3, x1, lsr #3
   5d950:	b	5d8b8 <mpfr_free_pool@@Base+0x243c>
   5d954:	and	x3, x6, #0xc00000
   5d958:	mov	w7, #0x1                   	// #1
   5d95c:	cmp	x3, #0x400, lsl #12
   5d960:	mov	x2, #0x0                   	// #0
   5d964:	mov	x1, #0x1                   	// #1
   5d968:	b.ne	5d918 <mpfr_free_pool@@Base+0x249c>  // b.any
   5d96c:	cbnz	w4, 5d974 <mpfr_free_pool@@Base+0x24f8>
   5d970:	add	x1, x1, #0x8
   5d974:	mov	w0, #0x10                  	// #16
   5d978:	b	5d86c <mpfr_free_pool@@Base+0x23f0>
   5d97c:	mov	x2, #0x7ff                 	// #2047
   5d980:	mov	w0, #0x14                  	// #20
   5d984:	b	5d8b0 <mpfr_free_pool@@Base+0x2434>
   5d988:	mov	x3, #0x7fff                	// #32767
   5d98c:	extr	x1, x0, x5, #60
   5d990:	lsr	x0, x0, #50
   5d994:	cmp	x2, x3
   5d998:	lsr	x1, x1, #3
   5d99c:	eor	w0, w0, #0x1
   5d9a0:	orr	x1, x1, #0x8000000000000
   5d9a4:	csel	w0, w0, wzr, eq  // eq = none
   5d9a8:	mov	w2, #0x7ff                 	// #2047
   5d9ac:	b	5d8b8 <mpfr_free_pool@@Base+0x243c>
   5d9b0:	cmn	x2, #0x34
   5d9b4:	b.lt	5d954 <mpfr_free_pool@@Base+0x24d8>  // b.tstop
   5d9b8:	mov	x3, #0x3d                  	// #61
   5d9bc:	sub	x7, x3, x2
   5d9c0:	orr	x0, x0, #0x8000000000000
   5d9c4:	cmp	x7, #0x3f
   5d9c8:	b.le	5da88 <mpfr_free_pool@@Base+0x260c>
   5d9cc:	add	w1, w2, #0x43
   5d9d0:	cmp	x7, #0x40
   5d9d4:	mov	w3, #0xfffffffd            	// #-3
   5d9d8:	sub	w2, w3, w2
   5d9dc:	lsl	x1, x0, x1
   5d9e0:	orr	x1, x5, x1
   5d9e4:	csel	x5, x1, x5, ne  // ne = any
   5d9e8:	lsr	x0, x0, x2
   5d9ec:	cmp	x5, #0x0
   5d9f0:	cset	x1, ne  // ne = any
   5d9f4:	orr	x1, x1, x0
   5d9f8:	cmp	x1, #0x0
   5d9fc:	cset	w7, ne  // ne = any
   5da00:	tst	x1, #0x7
   5da04:	b.eq	5da4c <mpfr_free_pool@@Base+0x25d0>  // b.none
   5da08:	mov	x2, #0x0                   	// #0
   5da0c:	b	5d90c <mpfr_free_pool@@Base+0x2490>
   5da10:	mov	w3, w2
   5da14:	ands	x1, x6, #0xc00000
   5da18:	b.eq	5da40 <mpfr_free_pool@@Base+0x25c4>  // b.none
   5da1c:	cmp	x1, #0x400, lsl #12
   5da20:	b.eq	5dac8 <mpfr_free_pool@@Base+0x264c>  // b.none
   5da24:	cmp	x1, #0x800, lsl #12
   5da28:	mov	w5, #0x7fe                 	// #2046
   5da2c:	csel	w1, w4, wzr, eq  // eq = none
   5da30:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5da34:	cmp	w1, #0x0
   5da38:	csel	w3, w3, w5, ne  // ne = any
   5da3c:	csel	x1, xzr, x2, ne  // ne = any
   5da40:	mov	w2, #0x14                  	// #20
   5da44:	orr	w0, w0, w2
   5da48:	b	5d880 <mpfr_free_pool@@Base+0x2404>
   5da4c:	and	x3, x1, #0x80000000000000
   5da50:	cbnz	x1, 5dae0 <mpfr_free_pool@@Base+0x2664>
   5da54:	nop
   5da58:	mov	w0, #0x0                   	// #0
   5da5c:	mov	x2, #0x1                   	// #1
   5da60:	cbnz	x3, 5d944 <mpfr_free_pool@@Base+0x24c8>
   5da64:	mov	x2, #0x0                   	// #0
   5da68:	lsr	x1, x1, #3
   5da6c:	and	w2, w2, #0x7ff
   5da70:	b	5d8b8 <mpfr_free_pool@@Base+0x243c>
   5da74:	and	x3, x1, #0xf
   5da78:	cmp	x3, #0x4
   5da7c:	add	x3, x1, #0x4
   5da80:	csel	x1, x3, x1, ne  // ne = any
   5da84:	b	5d86c <mpfr_free_pool@@Base+0x23f0>
   5da88:	add	w1, w2, #0x3
   5da8c:	sub	w2, w3, w2
   5da90:	lsl	x3, x5, x1
   5da94:	cmp	x3, #0x0
   5da98:	cset	x3, ne  // ne = any
   5da9c:	lsr	x2, x5, x2
   5daa0:	orr	x2, x2, x3
   5daa4:	lsl	x0, x0, x1
   5daa8:	orr	x1, x0, x2
   5daac:	b	5d9f8 <mpfr_free_pool@@Base+0x257c>
   5dab0:	cbz	w4, 5d97c <mpfr_free_pool@@Base+0x2500>
   5dab4:	mov	x1, #0xffffffffffffffff    	// #-1
   5dab8:	mov	x2, #0x7fe                 	// #2046
   5dabc:	mov	w7, #0x0                   	// #0
   5dac0:	mov	w0, #0x14                  	// #20
   5dac4:	b	5d86c <mpfr_free_pool@@Base+0x23f0>
   5dac8:	cmp	w4, #0x0
   5dacc:	mov	w1, #0x7fe                 	// #2046
   5dad0:	csel	w3, w2, w1, eq  // eq = none
   5dad4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5dad8:	csel	x1, xzr, x2, eq  // eq = none
   5dadc:	b	5da40 <mpfr_free_pool@@Base+0x25c4>
   5dae0:	tbz	w6, #11, 5da58 <mpfr_free_pool@@Base+0x25dc>
   5dae4:	mov	w0, #0x0                   	// #0
   5dae8:	mov	x2, #0x0                   	// #0
   5daec:	orr	w0, w0, #0x8
   5daf0:	b	5d934 <mpfr_free_pool@@Base+0x24b8>
   5daf4:	nop
   5daf8:	tbz	w0, #0, 5db08 <mpfr_free_pool@@Base+0x268c>
   5dafc:	movi	v1.2s, #0x0
   5db00:	fdiv	s0, s1, s1
   5db04:	mrs	x1, fpsr
   5db08:	tbz	w0, #1, 5db1c <mpfr_free_pool@@Base+0x26a0>
   5db0c:	fmov	s1, #1.000000000000000000e+00
   5db10:	movi	v2.2s, #0x0
   5db14:	fdiv	s0, s1, s2
   5db18:	mrs	x1, fpsr
   5db1c:	tbz	w0, #2, 5db3c <mpfr_free_pool@@Base+0x26c0>
   5db20:	mov	w2, #0xc5ae                	// #50606
   5db24:	mov	w1, #0x7f7fffff            	// #2139095039
   5db28:	movk	w2, #0x749d, lsl #16
   5db2c:	fmov	s1, w1
   5db30:	fmov	s2, w2
   5db34:	fadd	s0, s1, s2
   5db38:	mrs	x1, fpsr
   5db3c:	tbz	w0, #3, 5db4c <mpfr_free_pool@@Base+0x26d0>
   5db40:	movi	v1.2s, #0x80, lsl #16
   5db44:	fmul	s0, s1, s1
   5db48:	mrs	x1, fpsr
   5db4c:	tbz	w0, #4, 5db64 <mpfr_free_pool@@Base+0x26e8>
   5db50:	mov	w0, #0x7f7fffff            	// #2139095039
   5db54:	fmov	s2, #1.000000000000000000e+00
   5db58:	fmov	s1, w0
   5db5c:	fsub	s0, s1, s2
   5db60:	mrs	x0, fpsr
   5db64:	ret

Disassembly of section .fini:

000000000005db68 <.fini>:
   5db68:	stp	x29, x30, [sp, #-16]!
   5db6c:	mov	x29, sp
   5db70:	ldp	x29, x30, [sp], #16
   5db74:	ret
